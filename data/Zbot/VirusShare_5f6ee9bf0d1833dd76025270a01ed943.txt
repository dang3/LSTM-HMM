sbb
add
or
aaa
test
push
out
push
lcall
xchg
push
test
repnz
jp
dec
mov
and
jmp
push
ficompl
ss
sbb
movsb
jmp
inc
xchg
add
sbb
movsl
cwtl
sahf
dec
loop
dec
mov
mov
jne
xchg
or
sub
addb
mov
add
mov
xor
or
ret
nop
xchg
cltd
int3
dec
jmp
int3
lods
xor
outsb
fildl
pop
dec
ficoms
clc
xchg
jae
int3
inc
sub
cs
int3
push
in
push
jle
xlat
xorl
sarb
popf
lds
in
add
inc
fimull
lds
bound
pop
pop
movb
bnd
jp
es
popf
arpl
pop
push
gs
xor
pushf
jle
cmpsl
pop
in
cld
push
out
or
lds
adc
mov
frstor
push
adc
cmp
jb
jbe
mov
fdivr
mov
mov
mov
dec
jbe
fidivrl
cmp
jle
dec
or
push
fdivrs
inc
dec
and
imulb
push
popf
inc
lds
xor
stc
sbbl
sbb
cmp
ficoms
push
pop
and
jge
lcall
pushf
push
icebp
cmpsb
dec
fnstsw
test
push
mov
jno
dec
push
add
push
jb
fldz
aam
fnstenv
jbe
pop
cli
loopne
inc
out
fwait
or
inc
mov
inc
cmp
movsb
cmp
jbe
push
lret
push
sub
pop
out
aad
mov
lret
fs
movsb
into
lock
out
cmc
outsb
mov
mov
rclb
xor
mov
repz
fidivs
xchg
adc
mov
pop
pop
dec
jnp
jb
jo
pop
xchg
hlt
mov
add
arpl
xchg
push
je
add
iret
mov
pop
mov
in
out
sbb
xchg
sbb
sub
mov
adc
fucomp
repz
pusha
jo
movsl
add
sub
mov
jl
nop
sub
jno
movsb
out
sub
imul
sub
xchg
ss
adc
fsubl
sub
ret
and
xchg
mov
adc
js
sti
cmpsb
and
push
xchg
xlat
mov
sbb
fisubrl
sbb
dec
ljmp
shll
dec
and
movsb
lret
out
sbb
or
pop
dec
sub
and
push
inc
or
xor
mov
lods
mov
mov
fs
cmpsl
cli
jg
les
loop
cmp
mov
dec
adc
xorb
cld
addl
ret
mov
sub
jge
clc
inc
decb
cmp
mov
push
pop
jl
aas
imul
mov
xchg
push
rolb
push
pop
mov
ret
aad
aaa
jo
lock
imul
xchg
jb
imul
push
ret
sbb
and
dec
addr16
fdivrs
es
shl
xlat
pop
pop
push
fsubs
lret
in
sbbl
dec
sub
mov
jle
lock
sub
in
nop
lds
dec
adc
mov
and
int3
or
pop
mov
idivb
add
add
dec
das
mov
adc
cmpsl
pop
jl
lock
adc
push
adc
ds
lods
fildll
imul
lods
pop
mov
dec
cli
push
mov
xchg
or
out
push
icebp
push
cmp
pushf
pop
cmpl
mov
sbb
negl
lcall
js
push
lret
or
mov
insb
sbb
mov
mov
movsb
jne
sbb
xor
out
sbb
mov
xchg
dec
push
inc
rorb
lds
push
xor
xchg
test
imul
pop
test
push
shrb
cld
lret
xchg
mov
loope
sbb
fsubrs
jl
push
jns
ret
push
push
inc
mov
xor
mov
pop
xchg
mov
orb
aas
pop
or
arpl
jmp
or
cmpsb
aaa
shlb
and
movsl
mov
xchg
add
in
add
je
scas
inc
iret
shlb
cmp
or
mov
push
push
arpl
pop
shrb
arpl
xchg
cmp
pop
loope
dec
mov
sbb
dec
test
push
rorl
push
add
cmc
xor
xchg
jbe
add
push
adc
das
shrb
cmpsl
addl
and
push
bound
xor
cli
movsl
lahf
inc
insl
xor
mov
insb
jge
mov
fisttps
mov
mov
jo
int
ror
dec
loopne
repnz
sub
and
xor
sub
jge
xchg
sbb
pop
lods
out
ss
cmp
pushf
or
or
mov
add
jmp
adcb
xchg
outsl
pop
mov
daa
aas
decb
das
cmpsb
into
stc
rol
movsl
flds
addb
cs
fsubl
sbb
inc
adc
push
sar
pusha
xlat
es
ret
xchg
dec
fwait
or
xor
out
cli
sarl
mov
and
testl
cmp
sbb
adc
xchg
push
cmp
jp
xor
add
xlat
inc
jnp
xor
jno
sub
repz
jnp
adc
add
inc
test
push
iret
mov
sub
or
xchg
ret
dec
xchg
rolb
sti
imul
mov
jge
jo
pop
sub
push
popf
stos
out
shll
xchg
mov
dec
aaa
daa
adc
or
stos
test
and
cltd
stc
push
sbb
fcoml
imul
roll
addl
add
mov
push
jb
cmp
lea
jle
sub
cs
mov
jecxz
imul
and
sbb
jg
cmpsb
add
cmp
dec
enter
mov
clc
sub
js
or
test
arpl
pop
xor
repz
jae
dec
repz
sub
mov
mov
push
fisubrs
or
cwtl
inc
xchg
jmp
mov
jbe
xor
jecxz
jle
mov
push
rcrb
in
jo
rorb
test
sub
loope
mov
jge
xchg
sarb
cli
or
xor
mov
xor
mov
cwtl
gs
inc
in
or
sbb
into
aam
movsb
mov
rcrl
adc
sub
rclb
add
pop
cmp
mov
js
test
xor
and
cmp
addr16
das
inc
mov
mov
rcrb
in
enter
inc
cmpsb
lret
loop
fidivl
rcl
and
fsts
mov
rolb
jb
mov
xor
into
lea
dec
mov
pop
iret
push
dec
enter
xchg
icebp
cmpsl
in
pop
dec
pop
mov
fistpl
fwait
stc
addr16
repz
xchg
out
adc
jecxz
les
or
push
addr16
imul
test
std
adc
xor
lods
lret
fiadds
stc
sbb
outsb
xor
cmp
push
fsts
mov
xchg
rolb
adc
or
loop
popf
mov
ja
sbb
cmp
push
dec
sbb
pop
sbb
push
jnp
xor
bound
shrl
mov
scas
or
xchg
sbb
xchg
pop
lds
adc
add
sub
inc
pushf
je
outsl
dec
sub
push
inc
mov
xchg
inc
fmul
xchg
int
and
xchg
cwtl
repz
into
fstl
aas
xor
or
cmp
dec
popa
shlb
arpl
loopne
lcall
int
mov
fs
repnz
xor
movsl
arpl
jo
das
outsb
push
jo
fsts
imul
xor
ja
pop
inc
les
lcall
addr16
jns
daa
cwtl
ljmp
xor
push
dec
loop
pop
mov
in
push
int
inc
pop
add
inc
jmp
dec
sub
xlat
inc
cltd
cld
cmpsl
and
mov
mov
dec
dec
jmp
adc
iret
and
lds
or
sub
xchg
cmc
jnp
mov
add
add
stc
lea
jns
lods
dec
popa
add
xchg
mov
test
adc
mov
cli
pop
popa
sbb
cmp
clc
mov
mov
or
cli
xchg
cli
adc
mov
arpl
call
sahf
mov
sub
xchg
mov
jmp
push
sub
jns
sbb
fwait
mov
xor
adc
mov
mov
jae
cld
subl
mov
mov
adcb
rcrb
pop
addr16
xlat
push
test
mov
into
js
fdivrs
js
rolb
ret
adc
es
sub
adc
es
cld
ljmp
outsb
push
cmp
bound
test
add
das
movsl
clc
ret
hlt
icebp
dec
mov
cmp
mov
popf
lds
jns
loope
test
int
pop
jmp
pop
test
mov
jbe
pop
xchg
test
pusha
add
cmpsb
mov
imul
jp
pop
fstpl
loope
out
clc
sarl
shll
push
mov
inc
push
jnp
sbb
push
mov
push
mov
iret
and
movsl
lods
pop
stc
cmp
pop
nop
sbb
push
mov
sbb
push
add
cld
fsubrl
cmp
test
cmp
rcll
mov
push
mov
xchg
jno
sub
sub
sbb
nop
sar
cmp
xchg
fisubrl
jnp
icebp
jno
movsb
jne
cmp
lods
roll
movsb
in
jb
and
lcall
sbb
mov
dec
cs
mov
sahf
mov
cmp
mov
nop
hlt
mov
mov
sub
cld
ret
stos
mov
insb
cli
in
jo
lods
mov
sahf
xor
push
push
xor
jle
jbe
fnsave
push
pop
lods
and
cwtl
std
adc
ret
mov
pop
aad
mov
adc
jecxz
fidivrs
cmp
xchg
adc
js
add
adc
fisubrl
incl
xchg
xor
mov
sbb
and
pusha
push
mov
push
pop
ficoms
aam
or
cmp
push
stos
insl
cmpb
outsb
shll
cmp
mov
fsub
pushf
dec
lret
inc
or
data16
pusha
mov
dec
inc
sub
sub
movsl
sub
outsb
aas
mov
out
cld
dec
pop
dec
pop
dec
xor
dec
bound
xchg
mov
sbb
adc
pop
int
gs
imul
int3
rorl
push
lret
ja
cmp
lret
pop
cmovo
int
add
pop
cmp
jne
bound
mov
fucom
adc
jb
lcall
loope
push
out
xchg
mov
stc
pop
mov
js
add
shlb
hlt
rcrl
mov
loopne
mov
lock
imul
notb
in
movsl
in
lret
pop
pop
repnz
test
rol
and
out
mov
jno
scas
push
jb
mov
cli
mov
inc
push
dec
cmp
imul
jg
test
inc
or
sbb
pop
adc
hlt
imul
cmpb
xor
or
xor
and
mov
adcl
and
je
test
cwtl
mov
and
inc
cmc
mov
fstpt
jb
das
repnz
lea
stc
mov
les
xor
and
mov
jo
leave
jae
cmp
sti
aas
or
mov
push
mov
aaa
mov
jnp
push
add
addr16
jge
aas
loop
addr16
fadds
scas
inc
aad
sbb
dec
mov
mov
cmp
mov
push
add
push
add
inc
mov
adc
sbb
adc
push
outsl
jecxz
dec
je
sbb
mov
jle
push
pop
icebp
xor
sub
fildl
add
cltd
nop
sbb
or
imul
imul
cmp
xchg
insb
jbe
or
test
mov
xor
loope
adcl
sbb
xchg
cs
inc
or
aam
jno
in
sbb
push
jbe
cmp
ja
sbb
daa
xor
inc
adc
mov
repnz
imul
push
inc
rclb
pop
aam
adc
mov
daa
mov
repnz
sbb
lret
xor
push
imul
loopne
dec
cltd
inc
add
pop
mov
dec
or
add
mov
fucomip
push
test
cmp
popf
bound
ret
ficompl
jmp
enter
daa
cmp
inc
add
xchg
and
cmpb
inc
push
mov
push
or
jle
popa
test
push
adc
out
mov
int3
push
stc
xlat
mov
outsl
sahf
int
lcall
popf
arpl
test
iret
int
insl
and
inc
dec
outsb
xchg
pusha
push
dec
or
imul
loope
jo
xor
pop
fsub
cmpsl
mov
jns
insl
xchg
loop
adc
mov
stc
outsl
mov
pusha
xchg
mov
stc
dec
je
xchg
ficoms
test
stos
mov
jecxz
mov
mov
sub
test
sbb
js
or
push
adc
daa
push
cmp
cmc
das
mov
fcmovbe
inc
cmp
add
mov
push
adc
dec
jb
jle
mov
fisubrs
aad
les
mov
call
cmp
dec
inc
into
and
movsl
xchg
pop
daa
sbbl
mov
invd
les
and
loopne
sahf
popa
ret
pop
lods
sti
leave
cmpl
in
ret
jnp
mov
xchg
fidivrl
outsl
repnz
push
popa
jg
push
aaa
jg
sub
inc
fsubl
lods
dec
dec
je
loopne
leave
dec
clc
cwtl
jne
mov
iret
fwait
mov
xchg
rcrl
or
xchg
mov
mov
pusha
ret
lea
jae
arpl
std
jno
cmpps
cld
movsl
pop
mov
movsb
inc
popl
inc
loopne
adc
mov
jbe
jo
push
jl
add
dec
push
xchg
repnz
pop
out
push
fs
xor
xchg
es
jo
sub
daa
xchg
sbb
push
xchg
mov
xor
sub
call
mov
ljmp
daa
mov
in
mov
push
dec
sub
insb
outsl
icebp
in
dec
sti
xchg
push
jb
aaa
inc
mov
cmpsb
jae
les
sub
push
sub
in
add
insb
xchg
or
nop
pop
cwtl
pushf
mov
add
ss
jae
jne
mov
jg
in
int3
pusha
andb
imul
adc
xor
jbe
leave
add
ss
xchg
pop
fs
and
cmp
pop
mov
mov
push
in
push
daa
pop
mov
xchg
push
push
jb
cmp
inc
mov
lods
adc
repz
out
les
inc
mov
cs
adc
jg
sbb
mov
roll
test
nop
jne
xchg
and
pop
mov
adc
out
jle
mov
pop
mov
enter
scas
cwtl
xor
orl
mov
add
jle
clc
dec
scas
mov
adc
lea
pop
test
pop
in
pop
hlt
sub
negb
fsubr
arpl
fistps
out
or
pop
sbb
add
lcall
pop
inc
mov
inc
test
sub
or
subb
lret
pop
xor
jne
adc
jbe
and
lahf
cli
arpl
or
pop
xor
cmc
mov
fisubrs
xor
jecxz
jb
mov
adc
cwtl
cs
inc
std
icebp
movsb
jnp
repz
hlt
cmpsl
rcl
sbb
mov
inc
dec
jge
aam
jbe
testl
push
pop
sub
lret
pop
sbb
sbb
push
push
jb
cmp
mov
lods
adc
or
sub
push
sub
xchg
hlt
dec
cmc
jmp
jecxz
sub
push
fwait
mov
xchg
pop
inc
add
scas
lods
push
ljmp
lock
mov
add
and
ljmp
cmp
in
rclb
and
pop
pop
loop
dec
ljmp
or
push
mov
ret
addr16
js
dec
neg
cmp
les
repnz
or
lret
outsb
subb
mov
inc
jae
jo
aaa
and
mov
in
fnsetpm(287
pop
mov
popa
and
mov
aam
out
mov
fnsave
jle
xorb
std
jbe
insb
test
mov
mov
mov
sbb
sub
das
push
push
xchg
mov
mov
stos
adc
ficoms
pop
stc
push
in
push
adc
push
mov
push
cwtl
clc
andl
addr16
call
sub
pop
fidivrl
mov
insb
outsb
rcr
shll
fwait
test
sub
test
push
mov
lock
sbb
mov
mov
mov
mov
jl
rcll
movsb
cs
lret
das
push
mov
scas
cmp
jae
call
popa
jnp
out
pop
mov
cmpsl
push
dec
sbbl
lock
out
movsb
pop
daa
dec
lret
sbb
mov
pop
xor
popf
pop
cmp
push
jecxz
je
out
stos
adc
cltd
fs
aad
or
cmp
pand
imul
dec
xchg
ret
pop
push
pop
inc
sub
sbb
icebp
xchg
aas
push
pop
cmp
sbb
lret
and
out
jp
pushf
cmp
mov
dec
mov
push
add
mov
mov
fildl
xor
idivl
jbe
push
sahf
push
xor
sbb
jo
ds
call
inc
mov
jbe
fs
cmp
mov
aaa
xor
outsl
hlt
mov
dec
or
aad
incb
xchg
ret
push
ret
mov
dec
dec
xchg
mov
jge
inc
pop
xor
ret
sub
repnz
imul
test
out
mov
jmp
sub
add
arpl
sbb
je
iret
in
es
sub
jecxz
xor
stos
mov
jae,pn
in
das
push
dec
mov
iret
cs
rcrl
jle
cmp
mov
mov
push
mov
mov
in
scas
imul
lret
bound
xchg
insl
daa
sbb
inc
icebp
dec
enter
call
mov
int
ljmp
jp
cli
jne
and
cmp
repnz
xchg
jl
movsb
les
mov
dec
mov
inc
mov
adc
fiadds
into
sbb
dec
push
xor
js
out
jge
mov
mov
je
and
scas
jne
pop
adcl
pop
mov
push
inc
frstpm(287
cli
hlt
and
jns
pushf
fstpl
mov
and
xchg
xchg
or
call
outsb
jno
test
sub
jl
pusha
add
jecxz
shr
sbb
ljmp
cmp
pop
sbb
push
jnp
stos
clc
sbb
xchg
fs
xchg
pop
add
fcomp
pop
push
pop
gs
ljmp
sbb
or
int
in
xchg
sbb
ljmp
addr16
dec
scas
cmp
gs
inc
mov
test
enter
mov
dec
sbb
cs
sub
popa
pop
test
or
sbb
pop
ss
inc
push
cmp
rcll
sbb
dec
xchg
scas
in
mov
cmpsl
ret
and
pop
aaa
sub
scas
mov
mov
mov
xchg
lahf
pop
xchg
sahf
clc
mov
mov
inc
fdivrs
mov
lcall
psubw
and
lds
daa
int
xchg
aam
popa
jno
aas
imul
push
push
sbb
in
js
pop
pop
rcl
test
adc
add
xor
data16
repz
sub
xchg
lods
cmp
jo
sbb
cmp
or
mov
fisttps
out
sbb
pusha
rol
in
ja
push
sub
mov
or
and
mov
push
xlat
jge
xchg
loop
repnz
adc
jo
sub
sub
add
dec
sub
mov
mov
push
enter
out
or
xchg
inc
std
int3
jle
notb
adc
jg
mov
lret
push
aad
cmc
les
mov
test
mov
push
mov
test
hlt
pop
or
divb
adc
pop
xor
lret
cmp
inc
pusha
and
dec
sahf
inc
cmp
or
and
pop
inc
jge
enter
jno
push
inc
xor
sub
or
sbb
fisubrl
and
test
sbb
rcll
push
in
adc
cmpsb
fnstcw
add
dec
sbb
enter
sbb
xchg
xorl
mov
dec
sahf
jmp
jb
mov
pop
mov
aaa
bound
push
out
xchg
in
push
std
inc
xor
mov
push
icebp
rcrb
xchg
mov
jle
mov
xor
xchg
popf
std
push
mov
push
rorb
push
imul
and
mov
ljmp
sub
or
lahf
push
inc
mov
jno
xor
mov
test
inc
sbb
addr16
jo
cld
test
clc
pop
lds
mov
test
int
enter
cmpsl
or
push
lea
xchg
lods
push
xchg
dec
sbb
dec
into
mov
clc
dec
outsl
xchg
lret
aad
sbb
or
push
ss
push
rorb
lods
std
pusha
cmpsb
push
cltd
aas
xor
sbb
clc
add
push
fwait
repnz
out
in
loop
pushf
xchg
inc
sub
jbe
test
into
test
cmp
jns
push
pop
das
xchg
nop
inc
mov
and
test
or
fdivrs
dec
inc
mov
lcall
in
int
push
or
lret
shll
insb
std
adc
mov
sahf
push
adc
dec
fst
mov
aam
mov
decl
jmp
dec
int
out
in
in
xchg
fst
mov
xchg
pusha
scas
add
inc
pop
int
icebp
das
mov
mov
pop
enter
push
mov
push
sbb
popf
bnd
stos
add
into
adc
ss
push
jge
movsl
clc
aas
mov
xchg
sbb
pop
xchg
and
adc
adc
inc
xchg
jno
ret
mov
mov
outsl
jns
sbb
les
lods
cs
sub
xor
xchg
add
repnz
mov
repz
xchg
mov
mov
arpl
push
pop
out
push
insl
and
sahf
jne
push
add
cmp
push
mov
mov
and
add
lcall
xchg
das
in
cltd
add
lret
mov
jne
and
xchg
or
cmp
pop
stc
scas
clc
xchg
mov
pop
bound
mov
cmp
xchg
xchg
sub
loopne
dec
sub
jmp
inc
ret
adc
push
negb
enter
call
xor
cmp
mov
leave
adcl
cmp
xor
cs
out
jnp
and
pusha
pop
xchg
or
or
cmp
or
mov
cmpsl
mov
jns
outsb
jg
std
xchg
lret
pop
arpl
or
pop
push
nop
mov
das
aas
xorl
cli
iret
testl
adc
inc
icebp
inc
xor
outsl
fadd
push
aaa
jecxz
aad
ljmp
mov
out
xchg
pop
fisttpll
outsl
outsl
fs
fsubrs
call
aas
lcall
fdivs
xchg
lret
cltd
push
sbb
iret
inc
pop
je
std
pop
xchg
mov
jnp
push
out
enter
inc
ficomps
loope
mov
push
sbb
cmc
sbb
push
dec
mov
mov
mov
in
jne
push
out
outsl
or
ret
movsb
jle
scas
jmp
cltd
xorb
push
fisttpll
sub
push
inc
or
mov
cmp
or
incl
aaa
adc
popf
data16
jae
rdtsc
sub
dec
inc
and
pop
mov
add
into
push
pop
xchg
pop
repz
jnp
jmp
xchg
in
lahf
jp
mov
mov
add
icebp
jne
xlat
call
sti
cmpsb
orl
sbb
push
retw
fwait
in
outsb
jbe
push
jbe
xchg
aaa
mov
dec
fmul
divl
cmpsl
aam
mov
mov
and
pop
out
imul
out
cmc
sahf
movsl
std
in
pusha
mov
sub
xchg
sub
fistps
pop
inc
repnz
push
mov
test
push
mov
adc
stos
adc
sti
push
push
sti
testb
pop
jbe
data16
imul
push
mov
repz
scas
ret
xor
mov
or
popa
movsl
sub
or
pop
jns
scas
adc
sbb
aas
sarb
mov
stos
dec
adc
and
ja
inc
sbb
mov
dec
mov
push
pop
xor
dec
inc
and
adc
mov
push
jnp
lock
test
dec
jno
int3
into
or
mov
sti
xor
jg
das
fmul
shll
test
test
stc
cmp
mov
scas
pop
mov
jp
bound
adc
pop
sbb
add
jne
lcall
mov
sub
lea
pop
xchg
add
pop
and
es
sti
sti
push
iret
jecxz
push
cmp
inc
mov
jmp
push
aam
sub
jno
sbb
adc
push
or
xor
icebp
popf
xchg
cmpsl
adc
mov
in
adc
dec
fidivs
rcr
mov
shrb
adc
mov
and
cmp
push
adc
push
bound
and
ret
pop
in
inc
mov
jb
fistl
jmp
in
dec
mov
and
in
mov
ja
mov
clc
ds
aam
sahf
add
mov
xchg
or
sbbb
inc
sti
mov
frstor
fwait
addl
into
and
insb
movsl
add
fnstcw
add
lret
or
sbb
pushf
xor
addb
mov
adc
mov
out
repnz
lods
pop
mov
jno
push
loope
into
adc
test
push
adc
xor
hlt
lea
mov
add
in
test
xchg
jnp
lds
or
inc
pop
and
cmpsl
jne
clc
stc
or
push
clc
gs
or
mov
out
mov
pop
and
and
jle
sbbb
and
mov
jmp
sbb
lods
add
ret
aad
jne
sbb
cmp
push
xor
push
mov
xor
stos
repz
push
lea
das
lahf
adc
inc
adc
lahf
jmp
iret
mov
popa
cmp
inc
das
mov
push
mov
inc
xchg
aad
jae
into
push
fisttpl
in
fisubl
adc
jl
lods
inc
jb
push
fiaddl
mov
stc
stos
xor
and
pop
inc
sub
push
mov
inc
xchg
pop
mov
push
test
stos
pop
aam
je
or
shrl
pop
mov
xor
data16
xchg
addr16
lret
dec
and
push
ret
mov
fldenv
ds
loope
pop
popf
push
pop
and
leave
dec
cli
in
stos
and
pop
mov
ret
in
push
pop
mov
mov
fdivrl
push
mov
sub
add
add
insl
xchg
xor
outsb
mov
es
pop
loopne
fs
roll
mov
andl
dec
or
clc
jno
cmp
sub
mov
pop
push
pop
cmp
pop
xor
divb
in
mov
cli
lods
enter
xchg
or
sub
enter
adc
iret
shll
xor
dec
lods
or
mov
adc
push
mov
in
cmp
imul
mov
pop
xor
cld
out
fwait
cmp
mov
push
ret
lret
adc
pop
insb
push
ss
pop
jne
sub
jne
shr
xchg
loopne
pop
test
hlt
xchg
xchg
imull
stc
mov
sbb
xor
pop
mov
call
fnstcw
fisttpll
enter
ficomps
dec
sbb
push
lahf
push
xchg
dec
push
insl
test
test
dec
out
outsb
lahf
jne
addr16
movsl
mov
notl
imul
dec
pop
xlat
mov
push
pushf
fs
cmp
jg
cmp
mov
sub
lock
fisttps
dec
int
repnz
or
adc
loope
mov
jl
lcall
popf
aas
jg
xchg
in
lods
or
jbe
or
jmp
and
xor
hlt
xchg
push
test
cmp
and
pop
adc
mov
outsl
fwait
enter
pop
mov
cmp
push
scas
mov
push
es
jl
xor
mov
popa
cli
out
fwait
nop
cld
insb
pop
xchg
daa
xor
or
outsb
mov
push
popf
sub
push
mov
test
je
out
xor
mov
cmp
test
inc
fstpt
cmp
imul
or
cmp
mov
inc
lea
sub
adc
in
adc
insl
test
ss
mov
mov
mov
out
popf
adc
mov
fwait
hlt
sbb
jbe
testb
mov
xor
push
nop
mov
mov
mov
jno
loopne
mov
ret
mov
inc
daa
cltd
pusha
shrb
mov
or
sbb
cltd
xchg
sub
jp
add
sub
sub
loope
mov
insl
ljmp
dec
ss
arpl
icebp
cmc
imul
out
repnz
push
imul
cltd
loope
lret
or
data16
inc
cmp
adcb
sbbl
push
jae
mov
imul
mov
add
adc
cld
sub
ljmp
xor
stos
sbbb
dec
sub
sbb
jp
sti
xor
test
lds
lea
push
imul
imul
mov
stc
popa
lea
insl
ds
pop
xor
icebp
decl
cwtl
loope
jl
lock
pop
jle
subb
sbb
cmpsl
ret
int3
sarl
cmp
imul
cmpsb
mov
adc
repnz
inc
xchg
insb
mov
rep
cltd
sbb
iret
lock
fsubrs
push
stc
add
xchg
xor
out
dec
lods
or
and
cs
lock
scas
or
add
das
sub
pop
add
call
jns
mov
fcoml
pop
cld
arpl
mov
adc
sub
icebp
out
es
push
and
imul
sbb
scas
dec
lods
xlat
filds
or
add
test
xor
hlt
add
enter
cwtl
xchg
jge
xlat
lret
mulb
lahf
cli
sub
scas
enter
mov
int3
fdivrp
jae
adc
dec
out
mov
cltd
loope
jecxz
lahf
dec
xchg
mov
or
loope
jmp
icebp
int3
movsb
and
arpl
add
cmpsl
fwait
xchg
stc
mov
fdivs
jnp
clc
push
pop
mov
pop
loopne
stc
out
nop
jl
sbb
mov
mov
jb
adc
cwtl
popf
data16
jbe
aaa
lea
lret
xchg
inc
or
push
push
cmpsl
sbbl
sbb
cmc
jmp
js
sub
pop
inc
or
pop
xchg
dec
idivb
out
jno
ss
ljmp
mov
mov
shlb
iret
pop
jg
insb
mov
loopne
jnp
pop
pop
bound
out
or
out
mov
cwtl
fnstcw
mov
sbb
sub
and
mov
fisttps
leave
fisttps
sub
lcall
push
cltd
push
mov
loopne
mov
sbb
add
xor
bound
sub
mov
rorb
adc
in
out
aas
sub
enter
pop
mov
inc
mov
arpl
pop
mov
fwait
out
push
mov
inc
test
int
popa
out
scas
push
xchg
xor
xchg
mov
mov
xchg
imul
xchg
je
pop
pop
jne
aad
stos
jae
sbb
pop
xor
call
cmc
inc
sbb
pusha
fisttps
cmp
or
and
icebp
int3
das
or
lds
mov
fists
pop
jp
add
fistl
std
mov
jne
addb
das
sti
int3
cmp
test
shl
cmp
cmp
dec
das
mov
movsb
xor
sub
mov
pop
xchg
flds
leave
xor
jecxz
cmp
lahf
repnz
inc
dec
mov
rcl
lahf
xchg
cmp
mov
fldenv
mov
les
stos
xchg
sub
in
jno
scas
nop
ret
fs
leave
imul
jo
out
scas
or
bound
adcl
xor
loope
neg
xor
mov
add
xor
mov
aaa
pop
xchg
subb
mov
sbb
fstps
jne
push
lret
std
sbb
lea
fs
jl
stos
ret
mov
jb
ret
in
sub
mov
pop
cwtl
mov
or
fcoms
ljmp
pusha
or
out
xorb
mov
add
cltd
pop
jp
xchg
mov
aam
popa
aam
xor
hlt
cmp
and
lahf
pop
xabort
jge
mov
pop
mov
inc
out
cmp
pop
stos
lahf
inc
push
lcall
and
mov
cmova
fsubs
mov
push
cwtl
aad
and
sbb
jnp
std
cltd
pop
inc
lret
shll
imul
sub
jp
xchg
rol
outsl
ljmp
and
mov
jge
jbe
mov
int
and
enter
popf
inc
je
adc
jo
mov
add
mov
jns
mov
ret
add
mov
sbb
sti
mov
push
fdivr
jg
cs
push
and
pop
pusha
and
dec
inc
stos
fcoml
jg
shll
mov
adc
repz
and
jl
cmp
xor
call
adc
out
mov
add
test
insb
mov
repnz
adc
push
out
pop
daa
negl
cmp
popa
out
or
sarl
push
jae
enter
andb
test
and
popf
cld
mov
jno
std
xor
shrb
out
sub
xchg
mov
jne
dec
cld
inc
mov
xor
xchg
aas
aaa
xchg
mov
call
int3
out
sarl
or
push
dec
xchg
loope
push
in
xorl
lcall
iret
inc
cmp
imull
arpl
and
add
pop
stos
out
xchg
insb
xor
or
shrb
or
jp
in
jnp
popf
inc
incb
les
jne
test
ja
imul
clc
nop
mov
in
out
stc
stos
into
js
sbb
gs
pop
pop
ljmp
mov
dec
daa
cmpsl
in
pop
leave
mov
loopne
stos
out
jg
mov
aad
mov
pop
sbb
xchg
mov
dec
xchg
push
dec
and
aas
leave
adc
movb
int3
xchg
stos
hlt
shrb
push
pop
addr16
or
mov
xchg
inc
into
pop
stc
daa
jae,pt
roll
cmp
adc
insb
jl
pop
data16
imul
out
push
sarl
aam
sbb
int3
loop
inc
lods
ja
pop
xor
cmp
adc
push
mov
push
lret
jmp
movsb
jmp
lods
loop
shrl
inc
cmp
idivl
or
sub
and
xorb
adc
loope
aaa
data16
add
and
adc
clc
cmp
cmp
pop
add
fs
mov
pop
dec
sbb
jecxz
xchg
jns
push
and
push
pop
push
add
xor
dec
jbe
enter
jp
dec
in
jmp
out
ret
call
push
shll
xchg
mov
xor
xchg
pop
jne
sbb
fs
ret
bound
xchg
inc
enter
les
ljmp
add
dec
jmp
cmp
out
pushf
xor
scas
xchg
test
mov
mov
mov
jge
push
lret
push
jmp
out
in
test
push
arpl
mov
jno
sti
and
pop
out
pop
cmp
test
mov
inc
push
mov
outsl
sub
jae
jns
add
fsub
mov
test
mov
xlat
xor
xor
imulb
jle
mov
scas
xchg
je
jg
scas
iret
test
enter
cmpsl
movsl
push
lahf
xchg
fdivs
scas
cmpb
cli
movsl
imul
pusha
xchg
pop
pop
sarl
mov
jle
out
mov
xor
jge
xchg
das
xor
jo
ss
addr16
jg
cmpl
pop
les
mov
in
repz
jne
jmp
or
dec
adc
popf
push
in
xchg
cmp
iret
clc
lods
mov
dec
mov
dec
xchg
jge
psrlw
mov
fwait
leave
loope
push
and
mov
aas
jmp
aaa
sbb
out
jge
dec
repnz
cmp
cli
stos
pusha
xchg
jnp
and
pop
xor
cs
or
push
mov
fdivp
andl
add
nop
in
dec
loopne
sub
inc
add
xlat
iret
cmc
adc
sub
inc
and
sbb
fcoml
dec
inc
and
sbb
les
dec
mov
scas
or
fcomp
inc
and
mov
unpckhps
fwait
mov
stos
xor
xchg
ds
aam
xchg
lods
shlb
test
bound
sar
lret
sahf
push
xchg
dec
fmuls
in
mov
aaa
cmp
sub
test
dec
mov
popa
int3
inc
adc
movsl
ljmp
ss
mov
and
xchg
imul
test
sarb
cmp
dec
lds
fs
mov
mov
scas
cmpsb
xchg
jb
sbb
adc
mov
test
lret
in
jge
push
sbb
cmp
jl
movsb
mov
aaa
imul
movsl
jg
xchg
icebp
push
rolb
cwtl
and
das
lea
cmp
inc
jmp
xchg
cmp
stos
sbb
ljmp
adc
inc
mov
jo
repz
push
sub
jmp
mov
dec
ficoml
fcoms
nop
pop
popa
add
push
or
mov
in
cmpb
mov
repz
dec
lock
mov
idiv
inc
pop
ret
xor
inc
xor
push
out
mulb
sub
scas
cmp
mov
fisubrs
sub
sbb
cmp
xchg
inc
push
fdivl
xchg
es
mov
add
adc
push
sbb
lret
in
enter
sub
fidivrl
popf
bound
clc
fsubrs
mov
ds
sbb
push
jb
dec
mov
fcom
bound
fldcw
dec
inc
pop
insb
scas
int
push
out
jecxz
fdivrs
lds
clc
add
cmpsl
fcoml
pop
aad
mov
stc
pop
mov
js
movsb
mov
xor
in
insl
iret
inc
pop
cltd
test
je
cmp
jge
cmp
jp
imul
loopne
sbb
jg
dec
mov
cmp
pop
ret
push
mov
and
and
pop
out
fistpll
out
inc
insb
out
sbb
repz
mov
gs
add
ja
inc
cwtl
or
jbe
cmp
jo
jmp
les
adc
in
ret
fisttpll
fucomp
aas
cmp
cmpsb
outsl
testl
sbb
push
dec
cwtl
in
mov
scas
mov
mov
cld
arpl
cmpl
sti
xchg
and
loope
into
test
dec
lahf
jo
out
or
or
out
outsb
in
push
mov
loope
dec
addl
ja
xchg
or
in
lods
push
adc
leave
dec
mov
in
clc
gs
and
dec
ljmp
sti
loope
out
push
add
lods
ja
sub
adc
or
or
daa
out
push
sub
call
in
pop
fimull
mov
jb
cmp
sahf
mov
lods
into
scas
nop
dec
dec
or
mov
movb
pop
lds
adc
lds
sub
mov
xchg
inc
xlat
sub
pop
pop
loopne
aam
test
divl
call
push
lahf
xor
mov
sbb
in
push
cli
fisubrl
mov
stos
out
sub
andl
mov
addl
mov
and
and
popaw
les
push
pushf
mov
inc
fmuls
push
jo
mov
pop
movsb
andl
call
xacquire
lcall
adc
fdivrl
loopne
jns
daa
mov
pop
push
mov
call
je
add
fsubrs
lods
into
iret
pop
jnp
inc
fucom
movsl
mov
sub
fstps
repz
mov
pop
repz
nop
mov
cmc
aad
cmp
repnz
test
mov
repz
cwtl
loopne
inc
push
lret
or
lods
cmc
fcmovu
push
adc
pop
js
lea
es
pop
out
mov
push
mov
aaa
cmc
xor
lret
xchg
mov
stc
cmpsl
pop
push
adc
jb
daa
fs
sub
push
icebp
or
popa
push
push
cs
aaa
mov
mov
cmp
in
mov
into
sti
addr16
popf
adc
mov
mov
mov
cmp
mov
jo
insb
inc
sub
mov
enter
xchg
push
hlt
sub
adc
jb
lret
cmpsb
adc
xchg
lret
in
adc
fs
push
ljmp
mov
pop
aam
sub
inc
xchg
outsb
sub
lock
inc
inc
sbb
jbe
mov
pop
push
push
add
pop
mov
outsb
movsb
xor
int3
mov
rcll
mov
mov
lock
add
push
jns
into
xchg
rcr
xchg
mov
cmc
lahf
stos
push
cmp
enter
inc
xchg
jecxz
out
xor
sub
push
push
jmp
jp
inc
insb
lods
jno
inc
jl
mov
jmp
ja
sub
mov
iret
inc
push
pop
pop
adc
cmpsl
test
jbe
mov
lret
out
push
icebp
outsb
dec
sbb
sub
std
push
aad
inc
shll
clc
cmpl
push
jmp
add
adc
lock
stos
lea
xor
enter
mov
xchg
imul
xchg
xlat
out
mov
cmpsl
add
aad
js
jp
mov
sarb
or
mov
jle
lret
notl
adc
xchg
jge
ljmp
in
add
push
lret
hlt
imul
xchg
rcl
lret
scas
dec
adc
push
leave
push
stos
lahf
add
jg
in
or
data16
scas
into
fstpl
xchg
xchg
push
pop
stos
mov
fs
pop
lods
push
adc
adc
sub
aad
push
popa
pushf
lds
in
popf
arpl
xchg
push
jo
jae
sub
xor
fnstsw
ret
jge
inc
lea
add
pop
fs
clc
ljmp
cltd
or
dec
outsl
pushfw
gs
out
jp
pop
mov
insl
lret
jl
je
enter
push
jl
sarb
cwtl
ror
clc
pushf
push
mov
movsl
add
mov
leave
add
das
jne
adc
test
fldenv
cs
xchg
inc
mov
adc
call
int
push
mov
lret
mov
pop
dec
cmp
incl
mov
aam
pop
cmp
xor
fcoms
inc
mov
push
cmp
das
bnd
mov
insl
mov
inc
pusha
cmpsl
push
dec
mov
xchg
pop
imul
mov
lods
insl
jne
fdivl
inc
repz
mov
in
xchg
and
aas
testl
leave
stos
dec
jb
dec
stos
pop
inc
mov
sbb
mov
mov
lret
mov
jnp
shll
inc
pop
xchg
mov
inc
loop
dec
dec
das
stc
fnstsw
scas
xor
add
mov
pop
int3
sti
inc
adc
xor
scas
jmp
mov
cmpb
push
mov
loopne
dec
mov
repnz
inc
xor
outsb
mov
jae
jmp
fwait
xor
and
dec
sub
xchg
jbe
lahf
scas
popf
and
loopne
jb
pushf
push
adc
mov
data16
mov
xor
movsl
mov
idivb
test
jo
dec
pusha
nop
cmc
xchg
push
insl
call
stos
sbb
cld
clc
xor
xor
xchg
dec
mov
test
push
test
test
pop
xchg
les
mov
pop
and
cmp
or
lods
pop
movsl
pop
fstl
test
mov
xlat
leave
cli
aad
mov
out
dec
aad
scas
test
pop
xchg
dec
std
loopne
adc
inc
loop
add
pushw
imul
dec
mov
inc
jbe
inc
rcl
push
add
ljmp
sbb
push
fcmovnu
or
dec
js
cmp
in
inc
pop
adc
or
loop
cmc
adc
std
loop
adc
dec
push
xchg
setae
lods
xor
or
adc
cmp
call
mov
insl
or
cmpsb
xor
rcrb
push
xor
lock
lock
out
inc
sbb
lock
and
dec
fistps
mov
fcmovnbe
fnstcw
xchg
push
xor
nop
jl
ret
dec
fs
push
jmp
mov
dec
and
add
mulb
push
loop
inc
jnp
pushf
xchg
mov
xchg
or
mov
mov
pop
in
push
xor
push
fwait
sub
adc
sbb
and
test
lds
jmp
jmp
xchg
scas
add
and
xchg
cmp
push
mov
xor
stos
inc
push
mov
xchg
sub
adc
push
mov
enter
inc
push
and
les
cmpsb
jle
imul
lds
push
rcrb
test
movsb
or
pop
pop
mov
push
fimull
push
jno
movsb
inc
mov
mov
stos
fcomip
xchg
std
in
mov
cmp
fstpl
cmp
pop
mov
or
add
xlat
std
popf
enter
jecxz
fidivrs
mov
int3
shll
sbb
adc
add
fwait
loop
call
pop
inc
jle
inc
add
or
ljmp
addr16
fucomp
jbe
cmp
sbb
jg
in
repz
mov
std
mov
icebp
int3
cmpb
jnp
movsb
xchg
adc
jae
and
insl
or
xchg
jb
adc
test
aaa
loop
sbb
xor
inc
jmp
cwtl
arpl
inc
test
stos
dec
or
lock
and
xchg
inc
int
push
push
loopne
aam
icebp
test
loope
mov
cmp
inc
lea
leave
lea
mov
fmuls
das
pop
and
repnz
int
jno
push
inc
xor
daa
or
ja
or
adc
sub
rorl
loopne
or
mov
and
pop
mov
push
insb
adc
ret
ret
lods
pop
shrb
aad
mov
and
dec
mov
aas
and
mov
xchg
mov
fwait
jbe
mov
fwait
jb
in
test
icebp
in
pop
mov
aad
adc
mov
mov
dec
cmp
jbe
mov
push
ds
pushf
mov
jmp
std
mov
mov
add
sbb
cmpsl
inc
jnp
mov
movsl
dec
movsl
lds
cwtl
loop
divb
sbb
sub
pop
pushf
ljmp
pop
adc
icebp
out
jbe
xlat
mov
sub
stos
pop
fs
lret
popf
sbb
rcll
sbb
dec
xchg
outsb
lock
int3
aam
jle
add
jbe
dec
dec
in
stos
mov
mov
cmp
mov
fnstcw
std
push
adc
lahf
iret
outsb
insl
push
mov
aam
icebp
cmp
inc
inc
rorb
leave
mov
xchg
push
cmc
aaa
ja
inc
adc
mov
cmp
fcmove
int
push
push
push
xchg
call
and
adc
cmp
mov
mov
push
cmpsb
cwtl
repz
repnz
jae
jg
movsl
push
arpl
adc
cmp
into
adc
pop
add
or
mov
scas
or
scas
arpl
insl
inc
jl
scas
clc
push
mov
cmp
mov
repz
jnp
fldcw
inc
jge
in
bound
pop
out
dec
popl
inc
jle
jmp
push
cli
pop
stc
cld
jne
rolb
mov
aam
add
inc
in
dec
jo
je
testl
out
mov
in
loopne
imul
or
lock
or
push
or
pop
out
lret
and
into
aam
repnz
sub
sbb
lods
js
jge
fdivl
ret
out
inc
cmp
rorb
sbb
into
and
adc
dec
div
dec
pop
pop
push
movsl
mov
shlb
icebp
ljmp
scas
aam
repz
sub
leave
imul
or
mov
xor
cmpsl
xor
mov
fscale
aad
mov
cmp
ja
cmp
jecxz
mov
clc
je
cld
aam
push
rolb
jle
push
out
inc
loopne
add
jbe
cmpsl
add
out
out
or
pop
outsl
mov
mov
enter
fadds
sbbl
add
je
add
xchg
icebp
add
mov
pop
mov
push
cmpsl
add
fcomi
mov
jg
mov
ret
sahf
loopne
nopl
adc
fsubr
ret
cmp
cmp
xor
pop
das
insl
in
dec
inc
shrl
int3
jge
insb
xchg
mov
scas
push
ret
mov
dec
insl
jle
stc
push
outsb
imul
fcmove
lcall
inc
imul
xchg
or
xchg
ret
xor
pop
mov
out
jne
std
add
js
push
inc
adc
mov
cwtl
cli
enter
add
cmp
les
stos
mov
sub
cmp
lea
xor
cs
sbb
test
xchg
std
pushf
mov
clc
sbb
cld
mov
adc
xor
mov
or
test
lds
sub
je
jne
jno
loop
mov
hlt
cmpsl
xchg
xchg
aad
mov
fidivrl
icebp
jns
fistpl
popa
push
fdivr
and
sub
outsl
cmp
mov
das
mov
addr16
clc
outsb
add
add
pop
jne
aaa
movsb
sub
outsb
stos
fsubp
dec
nop
inc
xchg
into
fidivrl
pop
cmp
xor
ret
scas
mov
mov
jno
inc
and
outsl
and
cs
mov
or
inc
or
imul
call
dec
sbb
mov
xor
push
inc
mov
es
sbb
cwtl
xchg
pop
cmp
dec
hlt
jnp
add
pop
addb
sub
sahf
xchg
xchg
mov
sub
inc
lods
adc
jo
aad
movsb
jl
sbb
mov
jmp
dec
fisttps
je
clc
sbbb
push
pop
jge
adc
sbb
mov
and
adc
mov
inc
repz
sti
add
sub
jle
push
subb
mov
fstl
lret
lock
and
cmp
and
dec
sub
cmp
fsubs
test
roll
dec
shll
cmp
or
fiadds
jge
rorl
gs
mov
sub
xchg
fsubrl
movsl
loope
jmp
in
jge
into
aad
cmp
xchg
repz
je
scas
fildl
sub
enter
xor
call
or
xchg
pop
jg
sti
test
xor
jns
inc
lcall
jp
push
mov
mov
push
inc
popf
out
faddl
dec
jle
out
hlt
fwait
fwait
or
out
mov
adc
cmp
mov
sub
inc
je
scas
ret
xor
imul
inc
cmp
ss
or
iret
ret
insl
stos
pop
stos
nop
xchg
dec
aaa
insb
sbb
fdivr
sti
mov
push
push
incl
leave
out
out
mov
test
addr16
sub
pop
inc
inc
push
pop
cli
sbb
add
jb
jb
inc
scas
sti
push
repnz
cld
aam
and
inc
lds
stc
div
mov
mov
std
sahf
mov
dec
mull
pop
mov
jbe
mov
insl
sub
or
or
xchg
dec
and
ja
nop
testb
insl
repnz
mov
push
push
push
push
add
add
insl
xchg
xchg
subl
cld
add
ja
cmc
adc
mov
pusha
sbb
sub
adc
loopne
icebp
xor
push
xor
mov
movsl
mov
xlat
jmp
cmp
pop
shr
jb
jo
repz
jmp
es
pop
ret
sub
dec
mov
orl
push
jg
add
les
insb
jnp
sbb
lahf
fldenv
test
jg
fistpll
dec
stos
mov
pop
push
ds
xor
pop
inc
mov
or
rcrl
dec
push
push
fsubp
out
outsl
cmp
inc
rcrb
lods
dec
aam
fldt
idivb
sti
pop
pop
loop
lea
shll
xchg
into
pop
push
inc
jno
shrl
pop
icebp
daa
adc
fwait
aam
xchg
mov
fsubrp
or
fiaddl
mov
push
sbb
aam
xor
push
pop
std
popf
sub
jne
jo
mov
xchg
ds
jae
pop
sub
xchg
imul
jg
into
mov
jecxz
fwait
arpl
dec
jae
xor
mov
pop
adc
out
and
aas
shl
daa
cmc
mov
pop
int3
bound
pop
orb
jne
add
clc
push
mov
rcrl
cmp
push
pop
int3
or
sbb
call
dec
sbb
sub
mov
mov
js
jge
ljmp
inc
dec
int
je
sub
loope
mov
repz
jl
cmp
mov
mov
add
cmp
sub
pop
dec
shll
pop
ficoms
lret
mov
lret
addr16
icebp
cld
inc
into
pop
mov
inc
xor
xchg
adcl
fdivrs
cltd
inc
jb
xchg
pop
push
mov
jl
movsb
push
fmuls
in
adc
cld
pop
ss
ffree
push
mov
xor
enter
insb
pop
mov
fbld
imulb
imul
or
ret
ljmp
adc
popa
push
push
fisubrl
mov
popl
movsl
adc
xor
addr16
mov
in
mov
lods
addr16
xchg
cmp
sahf
jbe
mov
lods
inc
in
push
aaa
push
in
shrb
aad
mov
testb
xor
aas
jmp
cs
xor
pop
pop
es
or
jmp
inc
adc
ficompl
mov
stos
fwait
inc
aad
cld
and
in
leave
mov
jne
sbbb
clc
std
outsl
notl
hlt
push
imull
cli
cmp
push
cwtl
adcb
inc
or
add
mov
push
add
and
mov
or
adc
loop
sbb
ljmp
fnstcw
or
adc
cmpsb
sbbb
fistpll
loop
ljmp
xchg
jp
lret
icebp
ds
fidivl
inc
lcall
popa
repz
mov
inc
cwtl
aad
pop
enter
xchg
xlat
lahf
fistpl
fdivrs
cmp
lea
aam
push
scas
bound
rol
adc
stos
push
scas
and
shl
mov
out
push
mov
mov
mov
lea
pop
jle
mov
loop
aam
fwait
sbb
adc
inc
mov
fsubrl
test
pop
mov
and
sbbl
push
xchg
sbb
push
test
scas
sub
pusha
icebp
pushf
scas
jo
outsl
cmp
fs
pop
xchg
and
cmp
push
lret
push
dec
jg
pushf
sub
mov
lret
fwait
sbb
lock
cmpsb
imul
jb
sbb
add
dec
pop
mov
jo
in
dec
push
sbb
in
xchg
cmp
xchg
arpl
shlb
push
and
out
in
subb
in
add
mov
dec
jns
jo
test
cmp
mov
xor
dec
inc
arpl
mov
xchg
std
mov
stos
outsl
adcl
xor
inc
xchg
cmp
sbb
sub
mov
jl
mov
mov
adc
aaa
xchg
adcb
inc
dec
jbe
sub
fwait
iret
out
clc
mov
aas
cltd
adc
cwtl
pop
cmc
and
mov
jbe
mov
dec
add
repnz
lea
outsb
inc
arpl
adc
pop
mov
mov
outsl
in
add
and
cld
jmp
add
cs
xchg
fadd
lcall
mov
adc
pop
data16
in
sub
pop
repz
repnz
pop
add
sbb
nop
decb
add
bound
jecxz
scas
jbe
xchg
in
pop
ss
cmp
mov
push
xor
jne
das
cmp
adc
inc
jge
into
data16
mov
or
lods
xchg
lret
mov
fwait
pop
mov
sbb
lahf
test
mov
pop
jno
cmp
pop
jmp
insl
jl
mov
mov
mov
stc
lahf
mov
push
pusha
inc
lcall
push
pop
and
les
or
jo
inc
pop
mov
aad
xor
mov
push
les
fisubs
fwait
push
xor
adc
add
lds
and
add
mov
repz
das
dec
mov
cltd
xchg
sub
sub
mov
arpl
mov
fldt
push
enter
pop
mov
inc
cmp
xor
popf
out
fisubrl
sbb
test
es
pushf
cmp
out
sbb
inc
jle
inc
xor
mov
fisttpll
insl
test
dec
fisubrs
sub
addr16
push
std
lcall
fmull
icebp
cwtl
mov
lods
push
gs
into
adcb
sub
sbb
or
jns
clc
mov
push
push
ds
lea
in
jle
fbstp
mov
mov
sbb
inc
out
xchg
hlt
cmp
push
lds
lods
sti
and
out
imul
inc
int
movsb
mul
sti
push
loop
ret
lcall
in
and
repnz
xor
jl
dec
xor
xchg
add
and
idiv
addl
das
push
mov
sahf
gs
pop
jb
xchg
cmp
adc
movsbl
xor
js
flds
mov
clc
lahf
aas
sbb
mov
sub
cs
dec
push
fpatan
sub
mov
jmp
aam
mov
push
popa
cltd
int
jb
pop
mov
xor
add
sbb
inc
mov
xor
fimull
loop
data16
cli
mov
mov
rcl
mov
pop
pop
mov
and
xchg
mov
mov
mov
pop
sbb
nop
stos
jle
sahf
dec
push
les
inc
sub
pop
or
dec
xor
mov
in
hlt
sbb
push
lods
pop
lahf
pop
daa
mov
mov
iret
imul
outsb
daa
and
adc
adc
mov
sub
cmp
ret
je
cmpsb
or
adc
pusha
cli
ret
inc
fadds
dec
inc
add
popa
add
fimuls
mov
add
push
popf
sub
and
sbb
xchg
les
aaa
das
sahf
cld
xchg
adc
out
pusha
inc
add
scas
dec
cs
stos
mov
fisttps
xor
and
subb
xor
cmpsb
mov
jae
xchg
scas
shrl
addr16
fsubrl
xchg
pop
cmp
mov
mov
jb
shll
jnp
stc
inc
add
call
cmp
xchg
xor
scas
xlat
lea
jo
mov
xchg
jae
or
imul
roll
stc
sbb
sub
pop
push
pop
stos
add
call
lods
cld
pop
sbb
xchg
roll
push
inc
dec
in
xor
xor
popa
pop
cmpsb
enter
sub
out
pop
push
and
adc
in
dec
sti
lock
pop
jge
sbbl
loope
in
cmp
cli
rorl
aad
pop
incb
scas
test
loopne
stos
mov
test
pusha
out
ret
rol
mov
sub
incl
test
ret
inc
mov
inc
add
cmp
ja
negl
and
arpl
sbb
and
clc
sbb
pop
aam
push
and
or
insl
dec
outsl
enter
lds
xlat
jne
mov
sub
adc
pushf
cmp
pusha
push
lcall
mov
xchg
sti
add
mov
mov
pop
push
sahf
mov
mov
loop
pop
push
int3
jae
popf
and
pop
pop
hlt
sub
mov
mov
dec
mov
inc
enter
mov
outsl
inc
dec
xchg
xor
in
and
dec
call
fwait
and
add
decb
sarl
repz
xor
cmp
ljmp
jbe
cmc
mov
xor
or
add
inc
mov
and
xor
mov
pop
pop
push
jb
dec
jbe
stos
scas
or
vpcomd
jle
shll
jnp
cmc
pusha
pop
addr16
fidivl
addr16
fdiv
cmp
mov
pusha
andl
arpl
push
add
jns
mov
xchg
jle
stos
dec
sub
push
lret
pop
adc
add
push
mov
mov
xor
into
pop
repz
sbb
bound
mov
repnz
mov
dec
frstor
mov
or
cmp
sbb
xchg
sub
push
lret
xchg
dec
mov
push
dec
xchg
sti
das
rolb
xor
popa
cltd
jl
pop
dec
mov
xchg
jle
in
mov
dec
jg
dec
stc
inc
shll
and
xor
jge
out
cmp
or
jbe
mov
les
mov
cmpsl
mov
ffreep
xor
fwait
or
push
fstpt
stos
sub
pop
sub
dec
and
lods
clc
inc
xor
jo
lret
mov
lcall
mov
leave
inc
xor
movsb
sub
add
mov
cmp
pusha
mov
outsl
push
xor
mov
into
loope
dec
lcall
push
lods
in
popf
outsb
dec
mov
shrl
into
xchg
pusha
cmp
das
fldlg2
les
xchg
leave
add
xlat
or
pop
dec
dec
xchg
cmp
test
inc
xor
ja
roll
push
scas
call
push
or
xchg
push
loope
out
xchg
int
fdiv
aam
icebp
rcll
mov
das
push
cmp
push
nop
cli
push
xor
and
push
mov
popa
add
imul
subb
mov
insb
xchg
lock
inc
dec
or
dec
inc
or
inc
or
addr16
imul
je
notb
ja
pop
sar
or
fcomp
dec
ret
fildl
das
mov
aas
sub
xchg
insb
cwtl
push
cmovae
push
jge
push
movsl
leave
push
add
imul
mov
cs
mov
lock
or
sub
movsl
push
mov
adc
push
js
inc
fs
neg
inc
sbb
dec
sbb
xchg
dec
push
cmp
lds
test
out
subb
scas
jg
mov
movsl
pop
mov
push
mul
pusha
jne
push
dec
xor
mov
test
pop
push
enter
std
mov
lds
adc
pop
out
pop
jb
mov
loop
das
cwtl
xchg
adc
mov
sub
mov
inc
xchg
mov
test
inc
fldenv
adc
popa
aas
mov
out
mov
ljmp
xor
fbld
xchg
je
outsl
mov
fdiv
or
shll
arpl
sbb
jl
push
add
repz
xor
xlat
mov
in
inc
mov
mov
xor
ds
movsl
repnz
sahf
jb
cs
or
sub
jle
repnz
insl
sbb
add
cmc
sti
test
aaa
out
inc
cwtl
out
std
aam
call
pushf
je
es
addr16
repz
inc
seto
cs
mov
ret
mov
das
mov
mov
inc
mov
push
hlt
jo
push
or
lret
aas
scas
and
gs
insl
inc
lods
movsl
inc
ret
cli
push
imul
adc
cwtl
and
dec
mov
sar
adc
add
jecxz
sub
jmp
xchg
push
mov
mov
push
and
leave
inc
sbb
fldl
inc
xchg
sbb
and
out
mov
and
pop
mov
int3
adc
lea
dec
daa
dec
or
sub
mov
fwait
xchg
push
inc
or
cmpsl
xchg
jmp
pop
aas
push
int
outsl
addr16
mov
xchg
das
xor
stos
push
out
daa
shrb
sbb
or
xor
push
xor
cmp
mov
push
sbb
jl
jno
cld
arpl
jnp
inc
test
je
sahf
loopne
cli
mov
jmp
xlat
nop
bound
sub
mov
cli
cmpb
fdiv
and
es
test
mov
jae
mov
mov
ds
test
jae
push
sbb
mov
stos
sub
mov
and
fistpl
add
adc
loope
pop
scas
inc
mov
loop
cmp
insl
in
mov
fsubl
iret
imul
cmpsb
imul
stc
fs
jge
sub
pop
push
push
push
xchg
push
jle
mov
in
adcl
fnstsw
mov
add
fst
fmull
test
pop
jnp
inc
outsb
mov
sub
jp
jno
push
fcomps
jl
jo
push
pop
mov
sbb
aad
in
xlat
cmp
add
in
dec
cld
ret
pop
mov
cwtl
mov
pop
clc
int
hlt
pusha
inc
push
es
and
and
clc
shll
fmuls
lea
mov
pop
ljmp
addr16
les
dec
ret
push
test
add
nop
xchg
in
jns
std
mov
stos
mov
int
push
outsb
push
mov
and
pop
stc
mov
int
push
sub
mov
push
push
in
mov
insl
jo
sub
mov
sahf
xor
inc
mov
ljmp
out
pop
jb
aad
pop
mov
jnp
sub
sbb
sbb
inc
xchg
cmp
xchg
ds
and
xchg
in
dec
jmp
sub
pop
xor
lcall
jmp
cmp
insl
pop
pop
pop
pop
mov
add
outsb
js
push
cmp
and
push
gs
insb
ss
jb
adc
dec
aam
fsubs
push
push
cmpsl
dec
jge
cwtl
dec
jmp
mov
lahf
xchg
ja
or
add
imul
dec
mov
adc
xchg
int
test
or
icebp
mov
mov
jae
cwtl
jae
lods
insb
ficoml
sbb
ljmp
iret
mov
xor
mov
pop
inc
roll
mull
gs
pop
loopne
adcl
int
fldcw
sub
dec
pop
decb
cmpsb
cwtl
sub
inc
subb
mov
mov
aaa
push
mov
data16
dec
push
cli
and
cltd
jo
lcall
cltd
sub
popa
leave
adc
mov
cmp
sbb
xchg
les
mov
out
out
sub
dec
mov
js
adc
push
inc
jns
mov
sbb
popa
cmp
jge
fsubrl
inc
sbb
add
push
adc
add
dec
movsb
subl
cltd
cmp
imul
pop
fs
sbb
mov
or
ja
adc
or
divl
and
pop
cmp
in
das
ss
inc
xchg
mov
mov
jl
addr16
cmp
mov
jp
adc
lret
les
pop
mov
xor
outsl
fs
lret
sbb
adc
mov
mov
icebp
mov
or
int3
mov
mov
in
xchg
dec
xchg
nop
pusha
in
mov
xchg
in
inc
push
ds
decb
icebp
mov
int3
xchg
pop
cmp
mov
das
cmp
dec
inc
lock
mov
cmp
mov
jg
iret
jl
pushf
mov
adc
add
cwtl
cmpsb
and
xchg
mov
loope
shrb
je
js
mov
movsb
popf
sub
addr16
arpl
inc
push
xchg
and
pop
jmp
or
je
insl
iret
cmpb
mov
ret
fwait
ret
lea
nopl
and
jb
dec
mov
je
std
dec
dec
push
pop
ret
sbb
push
push
iret
jle
mov
in
xchg
pop
add
repz
je
nop
outsb
mov
bound
push
dec
pusha
mov
scas
xchg
dec
pop
leave
mov
mov
es
xor
scas
xchg
outsl
or
lret
adc
pcmpeqd
fs
cs
sub
sub
in
lods
pop
aaa
cmp
and
mov
out
sbb
dec
arpl
xchg
incl
and
inc
stc
sub
cmp
sub
mov
out
sub
push
clc
mov
in
ss
pop
pop
in
ret
roll
ret
xorl
sub
cmc
or
adc
test
dec
nop
aas
mov
push
subl
roll
subl
sbb
and
xlat
xor
arpl
outsl
and
popa
icebp
outsb
or
push
mov
cs
adc
hlt
mov
lds
jge
rorl
pushf
inc
adc
push
lret
inc
xchg
incl
bound
add
add
push
iret
adc
sarl
push
pop
pop
repz
sbb
sub
dec
neg
xchg
adc
dec
in
rclb
mov
sub
ss
pop
fldl
movsl
fsubrs
enter
repz
pusha
inc
lds
insl
aas
mov
lret
cmpsb
cmp
int
mov
into
hlt
pop
sub
mov
iret
int
idiv
bound
out
addr16
add
sbb
mov
aam
icebp
sub
push
outsb
adc
mov
push
push
pop
mov
mov
int3
fdivrp
lret
mov
loopne
mov
and
sbb
loope
and
repz
push
pop
nop
mov
sub
sub
outsb
pop
sbb
mov
jp,pn
push
jl
ja
movsb
xor
cmp
outsl
pop
lock
aam
fstl
enter
ret
cmp
sbbb
out
std
pop
dec
or
mov
adc
adc
pop
and
inc
test
and
inc
mov
fsubl
sti
js
push
andb
cmpb
int
lods
out
andb
pushf
pop
or
adc
xchg
rorl
sbb
bound
subl
fcomp
mov
xor
mov
xorl
cwtl
add
sub
icebp
adc
push
add
pop
mov
lea
leave
icebp
pop
push
mov
lds
dec
cwtl
int
cmpsb
clc
hlt
cmc
fsubrl
rcrb
xor
or
xchg
jae
in
js
ret
subl
cli
pushf
into
das
sbb
and
xchg
movsl
jl
enter
jmp
or
je
dec
or
cmpsb
stos
mov
rol
mov
dec
dec
bound
push
in
xor
insl
jo
outsl
and
imul
gs
sbb
clc
jle
push
aaa
movsb
adc
dec
push
xor
repz
add
stc
xor
subl
popf
sbb
adc
pop
mov
out
pusha
ja
sbb
lds
aam
neg
andl
push
jo
push
adc
out
xchg
cld
mov
loop
jecxz
and
mov
mov
out
sahf
xchg
stos
inc
dec
xlat
es
imul
and
ss
clc
orb
mov
leave
ja
mov
lds
loopne
jg
pop
iret
push
arpl
in
xchg
test
dec
inc
xchg
mov
push
sbb
inc
jns
cmpsl
inc
sbb
ret
push
ret
pop
or
xchg
or
sarb
fwait
insl
stc
mov
jns
icebp
inc
cmp
cmp
cmp
adc
push
icebp
mov
adc
repz
in
mov
xchg
into
insb
add
and
pushf
mov
stc
jb
ret
mov
fildll
shlb
jp
test
mov
xor
lret
dec
xor
addr16
lods
fidivrl
sub
dec
cld
push
xor
xor
mov
fimuls
jl
std
mov
jns
xor
xchg
mov
pop
xlat
mov
mov
push
push
adcl
push
push
jb
xorl
adc
les
push
push
cmc
mov
fmul
aad
cmp
into
push
sbb
sub
push
cmp
mov
adc
cmc
gs
sub
idiv
test
cmc
sbb
bound
mov
lcall
inc
mov
in
jecxz
ja
adc
in
pop
sbb
add
mov
aad
ljmp
push
mov
push
int3
fidivs
test
test
call
aaa
xchg
sbb
movsl
add
fcom
stos
test
ja
sub
daa
aam
fs
and
sbb
xor
lds
aaa
mov
repnz
sub
and
sahf
movsb
mov
fwait
cmp
or
add
aam
hlt
outsl
adc
pop
nop
loopne
or
mov
sbb
pop
in
out
inc
lret
andl
mov
mov
pop
repz
gs
sbbb
js
ljmp
mov
push
jne
jecxz
in
sbb
pusha
adc
xor
and
fimull
stos
mov
stc
insb
adc
pop
std
lretw
mov
jno
nop
out
icebp
mov
push
out
and
inc
pushf
and
xlat
push
popa
pop
jo
call
jo
mov
push
jg
mov
mov
pop
ret
stos
add
jo
or
mov
add
cmp
dec
enter
imul
sbb
inc
mov
push
fs
xchg
xor
sahf
mov
rclb
mov
js
mov
cmpsb
ljmp
cmp
out
add
push
lahf
rol
xor
mov
lods
mov
mov
xchg
add
push
je
cmp
add
xor
and
dec
pop
add
mov
xchg
dec
or
jbe
add
cmp
rcr
nop
and
out
or
lds
mov
and
popf
pushf
ljmp
int3
cmp
xchg
jle
inc
mov
shrb
shll
addr16
in
inc
mov
add
xor
andb
sbb
mov
mov
xor
ret
jne
insb
outsl
out
inc
mov
mov
inc
frstor
mov
adc
inc
ficompl
std
fnstenv
sahf
mov
cmp
xchg
out
inc
sbb
xchg
fcomp
es
push
xor
stos
sbb
xchg
repz
jbe
test
sti
and
imul
and
jge
test
out
push
stos
sahf
insb
pop
and
cmp
mov
and
jb
jne
mov
leave
stos
jl
mov
adc
out
stos
aaa
push
mov
xor
or
sbb
push
sbb
shl
jle
data16
cmp
cltd
xor
fidivs
stos
inc
lret
cltd
mov
sbb
loope
cli
cmpb
xor
dec
inc
adc
or
pop
aam
xor
pop
fsubrl
insb
mov
mov
bound
test
add
jecxz
mov
leave
fcompl
int
xchg
fstpl
pop
jns
jp
cld
mov
push
lret
daa
cmp
push
jecxz
into
data16
or
mov
dec
or
pusha
lea
adc
jmp
sbb
mov
push
cld
and
cwtl
xchg
ret
cmpsl
ficoms
stos
arpl
aam
dec
inc
cmpsl
pop
lcall
adc
mov
push
scas
fcmovnb
arpl
mov
jp
mov
or
jge
adc
mov
inc
stos
xor
test
push
out
out
hlt
ret
jp
mov
jae
sbb
xchg
int3
out
pop
cmpsb
sar
mov
iret
or
bt
lcall
mov
and
cmp
pushf
arpl
dec
outsl
rolb
cli
hlt
je
xchg
dec
fldt
adc
xor
cmp
test
loope
fisubrl
fisubrl
decl
cltd
shlb
push
jmp
push
push
ret
sbb
and
xor
pusha
ret
das
add
push
jecxz
and
mov
shl
cmp
in
mov
out
movsl
jnp
outsl
inc
int3
gs
stos
test
mov
mov
fmulp
mov
gs
les
dec
stc
je
xor
push
addl
inc
xor
sub
sbb
jnp
mov
fwait
jno
in
div
ss
test
js
lret
add
out
push
std
mov
or
mov
jns
sub
stos
push
test
xchg
pop
adcl
mov
pop
in
stos
and
cltd
dec
sahf
cmpsb
inc
jbe
out
out
sahf
addl
andl
cmp
inc
movsb
push
shrb
and
and
and
mov
or
push
xor
ret
pop
jb
mov
mov
imull
mov
dec
mov
jge
jge
xchg
lea
insb
dec
mov
add
sbb
cmp
xor
aas
shl
cmpsb
mov
mov
cmpsl
mov
imul
ds
inc
inc
dec
sub
cwtl
push
insb
xchg
inc
mov
loop
mov
lods
fdivrl
adc
jns
cld
push
sub
addl
push
add
mov
mov
mov
cmpsl
movl
out
xor
xchg
dec
les
cld
into
lods
aaa
aad
mov
aas
xchg
mov
mov
sahf
pop
dec
mov
push
leave
mov
pushl
lret
xchg
out
daa
out
cmc
pop
insl
adc
sbb
cmp
pop
mov
xchg
bound
and
js
sarl
cs
popa
cmc
sbb
pop
push
sti
aas
mov
test
push
mov
fidivrl
mov
ds
mov
cmp
cltd
or
cli
lods
fwait
and
test
jae
pop
jp
rclb
les
push
mov
add
inc
sub
mov
enter
inc
xor
push
push
xchg
add
int3
lods
in
fnstsw
dec
out
pop
xchg
mov
adc
jge
xor
imul
rorb
lret
clc
xchg
call
lret
add
mov
mov
dec
sbb
loop
test
inc
mov
dec
cmp
out
ret
push
hlt
fsts
jne
dec
add
lods
push
cwtl
sbb
dec
pushf
mov
mov
or
mov
mov
dec
outsl
in
mov
gs
lahf
dec
lock
test
hlt
cmp
jge
movsl
and
push
pop
test
leave
mov
scas
out
sub
bnd
xor
mov
daa
jg
sbb
fildll
out
pop
sub
mov
add
sub
gs
or
pop
ret
adc
push
xchg
inc
mov
xchg
or
inc
aam
cld
aad
jo
fwait
sbb
cmp
push
scas
mov
fdivrs
cmp
cmp
add
cmpsl
dec
add
mov
imul
push
cltd
ja
ds
adc
je
push
jmp
mov
dec
mov
push
div
cmp
add
and
jmp
out
cmpsb
test
and
fwait
mov
rorb
inc
jns
test
cmpsb
fisubrs
dec
pop
clc
cmpsb
cltd
push
push
lods
push
enter
add
mov
js
rorl
push
jbe
adc
dec
fstl
test
stc
loope
in
mov
pop
test
test
pop
fdivrl
sbb
shll
pop
push
clc
popa
divb
mov
dec
sbb
or
and
loopne
xor
push
movsb
jo
lods
mov
and
mov
pop
inc
push
cmc
je
inc
bound
pop
jmp
shrb
ficompl
sub
stc
out
xchg
inc
cli
push
xchg
shll
pushf
ljmp
pop
ds
jno
popa
mov
in
lret
arpl
push
aam
mov
fs
jbe
jp
ret
std
mov
sbb
addl
and
and
movsl
mov
cltd
dec
stc
dec
adc
scas
mov
int
mov
xchg
xchg
cld
mov
jl
in
cld
sub
movsb
pop
mov
jmp
jne
jmp
sbb
aas
jo
or
pusha
pop
lahf
mov
mov
xor
push
pop
movsl
add
cmp
sbb
dec
cmc
mov
sarb
dec
shrb
pop
dec
sbbl
je
cmp
ret
call
fistps
sbb
pop
ret
jp
xor
nop
repz
add
cmpsl
cmp
inc
mov
loop
mov
jmp
lret
flds
xor
in
inc
ljmp
mulb
add
add
cmc
sbbb
test
icebp
push
push
repnz
aam
lahf
lret
rolb
inc
mov
in
lods
or
sbb
sub
push
aad
leave
jb
jle
clc
dec
jnp
ss
sbbb
xor
imul
push
inc
loopne
lea
fsubrl
mov
arpl
xchg
lahf
frstor
mov
push
pop
movsb
ds
adc
scas
xchg
and
mov
fst
xor
push
pop
movsl
push
adc
mov
jmp
inc
scas
in
xchg
gs
cli
xchg
jg
jns
xchg
jnp
push
repz
mov
dec
xor
and
jmp
int
test
jae
aas
cs
add
loope
sub
shl
aad
leave
and
pop
idivb
push
cmp
popf
cmpsl
dec
cmp
es
imul
movsb
pop
aaa
sbb
aam
cmp
outsb
leave
inc
pop
stc
push
xor
sbb
das
xchg
pop
ds
mov
aas
pop
fwait
xchg
mov
pop
out
mov
outsb
sbb
icebp
int3
adc
stc
push
outsl
mov
xchg
hlt
cmc
pop
ljmp
aaa
sub
stos
ret
decb
outsb
jl
mov
cmp
cmpsb
daa
mov
dec
adc
subl
cmp
pop
leave
cltd
je
adc
icebp
or
mov
stos
imul
jb
fmull
cmpsb
mov
test
mov
mov
add
inc
push
out
jno
pop
mov
mov
es
lcall
xchg
loope
nop
xchg
loopne
addb
sarl
dec
cmp
es
orb
adc
mov
arpl
mov
cs
test
push
adc
fwait
lret
das
je
xchg
dec
adc
sub
fadds
insb
aaa
popl
cltd
jle
ljmp
sahf
xchg
or
xlat
jmp
in
pop
dec
push
xchg
mov
fiadds
pusha
dec
mov
fisubs
mov
mov
cmp
insb
out
repz
imul
dec
pop
rol
pop
test
mov
loopne
lret
cli
mov
dec
ja
clc
push
push
imul
inc
xor
cmc
cltd
out
xor
jp
adc
shll
stc
cs
pusha
add
in
jbe
push
xchg
in
push
lods
scas
test
inc
inc
es
mov
or
mov
mov
cwtd
out
cltd
xor
or
add
jns
jmp
sbb
mov
push
mov
sbb
inc
decb
pushf
push
add
add
out
int
xchg
adc
movsl
add
daa
adc
xchg
xor
ss
in
push
pop
and
out
mov
or
cmp
lock
cmp
orl
cwtl
jbe
fmul
push
into
fnstsw
movb
icebp
mov
ret
push
divl
sarl
mov
gs
jo
jge
or
stos
pop
inc
xchg
int3
xor
mov
pop
and
push
cmc
xlat
out
mov
jnp
pop
stos
and
inc
pusha
adc
adc
sub
pop
es
js
mov
inc
lods
or
sbb
shlb
xor
mov
adc
sahf
mov
sbb
jne
mov
rclb
cli
sbb
stos
add
xchg
cmp
insb
mov
fistps
cld
or
rolb
pop
nop
das
ljmp
lds
xchg
sub
pushf
imul
pop
inc
push
adc
adc
jno
data16
out
and
es
sbb
out
lock
mov
xchg
ret
jno
aam
sub
pop
leave
gs
daa
xor
jae
addb
jae
jns
call
mov
jbe
jle
gs
mov
dec
aam
push
jns
nop
push
fwait
jl
into
out
mov
inc
pop
jne
pop
mov
mov
push
sti
out
pop
mov
inc
cmpl
xlat
mov
cmp
scas
sub
cwtl
sti
pop
or
xlat
insl
mov
nop
fdivl
sahf
xchg
movsb
xchg
shl
and
xor
sti
mul
imul
mov
mov
ljmp
cltd
dec
ss
popa
sub
jb
fprem
jmp
lahf
push
jge
andb
push
xor
push
stos
mov
ja
ds
push
mov
mov
mov
push
orl
dec
push
xchg
mov
call
inc
jl
pop
push
sar
stos
pop
xor
stos
and
test
icebp
rclb
jle
adc
xchg
bound
loope
inc
and
or
mov
and
inc
push
inc
cmp
insl
stc
add
bound
pop
push
pop
mov
std
or
jecxz
sbb
movsl
je
add
xchg
testl
xor
inc
mov
sbb
ljmp
xor
lahf
test
sarl
insl
or
mov
fs
mov
sub
or
and
mov
mov
sub
lock
push
cmp
xchg
test
inc
in
shll
ret
mov
cltd
daa
mov
in
push
and
ss
jmp
jno
test
mov
ret
jp
mov
mov
push
into
je
pop
in
adc
outsb
ret
push
bound
cmp
adc
sbb
lret
cmpsl
imul
lods
inc
fistpl
mov
sub
or
cmp
mov
iret
cmp
mov
outsl
pusha
dec
loop
ja
outsl
xlat
out
add
aas
add
and
sub
ret
jb
gs
call
or
lods
adc
sbb
sarb
repnz
cmc
orl
lods
add
mov
jp
jbe
push
repnz
pop
xchg
add
push
add
jmp
dec
ds
mulb
testl
imul
push
cmp
int
jecxz
loopne
xor
mov
mov
mov
dec
cld
repnz
or
pushl
sub
cmc
and
popa
leave
mov
sub
in
mov
outsb
push
sub
out
jg
push
pop
lret
pop
outsl
xchg
push
scas
dec
pop
das
cli
xchg
and
sbb
insl
push
mov
cmpsb
push
xchg
cmpsl
pop
ss
lea
xor
jmp
jp
mov
mov
in
mov
adc
cmpsl
nop
out
add
scas
dec
sbb
inc
xchg
adcl
decl
mov
out
outsb
xchg
ret
lret
and
jl
mov
es
movsb
fwait
xor
jl
xchg
push
bound
scas
fnstenv
mov
add
fwait
leave
outsl
insl
js
cmp
pop
push
je
fstps
jmp
adc
jp
cmpsl
sarb
pop
divb
int3
ljmp
jp
cmp
xchg
fistpll
negb
push
pop
stos
lahf
pop
or
xchg
fsubrs
pushf
and
dec
add
mov
or
jnp
mov
fdivl
jo
cmp
xorl
aaa
cmp
dec
ljmp
in
sbb
add
arpl
aaa
sbb
shlb
pop
mov
mov
dec
mov
lahf
xor
mul
fstps
test
lds
cmp
mov
xor
add
arpl
sub
loopne
dec
xlat
push
jo
test
and
cs
adc
in
cmpsl
aam
mov
or
nop
or
push
pop
loop
daa
cmp
movsb
dec
fnstenv
xor
push
lock
into
xchg
inc
jmp
or
jne
dec
push
xor
ret
into
xor
dec
jae
push
stc
sub
ja
push
xchg
mov
dec
mov
mov
sahf
sub
sbb
xchg
xchg
sub
xchg
mov
call
enter
fwait
inc
jecxz
sbb
fildl
push
jne
inc
roll
les
gs
loop
out
mov
sub
fdiv
push
and
int
rcll
bound
push
in
dec
mov
mov
pop
pop
add
dec
cmc
mov
xchg
lret
adc
xor
adc
xchg
fnstenv
xchg
mov
push
lret
xchg
adc
movb
mov
cli
push
sbbl
insb
leave
or
lret
scas
dec
repz
inc
pop
cmp
imul
cli
pusha
stos
imull
dec
aad
pop
push
ficoml
sbb
nop
pop
adc
rcl
andl
adc
push
inc
xor
adc
std
leave
push
xchg
fstpt
mov
xor
outsb
sbb
or
lea
mov
xor
jno
cmc
js
bound
fwait
les
pop
lea
mov
int
mov
jnp
jbe
stc
inc
mov
decb
es
inc
sbbl
pop
shlb
pusha
sti
jb
xchg
mov
insl
in
pop
push
dec
hlt
add
jbe
jo
adc
add
icebp
add
add
lret
lock
inc
inc
xlat
in
cli
jnp
mov
cltd
mov
aam
ficomps
xchg
mov
fcmovnu
imul
jg
inc
lret
jno
ret
or
addl
sbb
dec
int
lret
dec
ss
mov
lds
aad
mov
sarb
jnp
test
cli
mov
pop
inc
mov
pop
mov
inc
shll
ja
jne
inc
mov
inc
sub
inc
in
into
adc
daa
adc
inc
addb
sub
nop
insl
test
daa
xor
pause
sahf
ja
test
dec
sbb
jnp
mov
shll
pushf
nop
mov
test
shl
js
jge
loope
xchg
iret
addb
ret
popf
in
xor
cmp
testb
mov
stc
repnz
gs
jmp
call
or
sub
in
out
std
das
sbb
mov
fbld
fcomps
out
adc
stos
orb
scas
pop
test
sbb
adc
push
jo
fisttps
pop
sub
ret
sub
cmp
fbld
std
lret
stos
dec
sti
popf
lea
sbb
push
insb
push
push
rcl
je
inc
cmp
in
pop
push
adc
jo
pop
lahf
sarl
imul
outsl
xchg
icebp
pop
and
out
mov
and
lock
test
cmp
aas
jmp
inc
jno
mov
ret
lcall
pop
pop
jge
mov
mov
loop
test
rclb
inc
add
call
ss
mov
outsb
or
push
out
cmpsb
repz
mov
scas
icebp
mov
lahf
xchg
sbb
test
testl
or
stos
fisubrl
jae
cmp
lods
push
xchg
adc
insb
pop
inc
mov
add
icebp
lcall
loope
jmp
mov
das
loopne
adc
ret
fwait
xchg
loope
out
cmp
and
fcom
mov
add
enter
icebp
jb
pop
pop
gs
ret
dec
in
andb
adc
push
cmp
movsb
test
jecxz
lahf
xlat
idivl
jle
push
jmp
fisubs
frstor
aam
add
ret
jo
popf
daa
rol
push
push
xor
mov
dec
xchg
cmp
icebp
xchg
aas
jo
fisubrs
dec
adc
into
sbbb
cmp
sub
xor
icebp
out
leave
sbb
or
push
ja
xor
aas
fcomps
test
gs
pop
jmp
mov
fs
adc
dec
mov
jne
cli
lods
fcompl
push
pop
and
shll
rcll
loope
shrb
adc
jns
pop
cmpsb
aas
dec
ret
jp
shrb
cltd
loopne
xor
sub
ss
leave
sbb
lret
addr16
aam
add
shll
negl
xor
sbb
scas
mov
pop
test
cmovle
cmp
push
ret
stc
xchg
pop
adc
lods
loop
jnp
sahf
mov
cmp
fstp
psrld
insl
mov
dec
cld
je
frstor
loop
scas
dec
inc
std
ret
inc
inc
jge
pop
or
or
mov
pop
hlt
enter
add
push
popf
push
mov
jp
ds
push
arpl
xchg
in
fwait
stos
pop
movsl
xchg
aaa
mov
ret
add
and
and
mov
pushf
int
mov
and
mov
cs
or
jae
push
orl
rorl
or
stos
imul
jg
nop
lock
sub
pop
es
jno
and
and
loop
cmp
dec
fdivp
fdivr
jle
shll
add
stc
mov
mov
or
sbb
insl
dec
popa
xchg
inc
lret
icebp
push
adc
and
rcll
imul
cwtl
add
push
push
xor
cmp
inc
xchg
cmpsb
or
adc
or
sub
adc
mov
fcmovb
scas
pop
sbb
adc
adc
pop
out
push
clc
dec
rcll
ja
jle
dec
cmp
in
sbbl
jg
push
mov
sahf
jp
mov
xchg
mov
cmp
sbb
cmp
repz
loope
jae
jns
jge
inc
mov
out
stos
popa
dec
ffree
cmp
sbb
repz
pop
mov
pop
test
out
test
xchg
out
cmp
lods
mov
mov
adc
pop
pop
sub
mov
jmp
decl
imul
mov
leave
pop
popa
jne
xchg
cltd
add
je
ljmp
mov
outsb
mov
fcoms
xchg
fists
test
jbe
shll
xor
cmp
insl
addr16
sub
xchg
in
jg
cmpsb
mov
data16
imul
mov
pop
jno
and
mov
cmp
sbb
jne
sbb
cld
fneni(8087
mov
fists
sbb
arpl
add
test
sahf
sarl
ss
mov
enter
repz
js
loope
divl
adc
and
dec
test
jecxz
dec
in
out
jnp
dec
adc
test
hlt
mov
call
xchg
add
fistl
sti
rcl
jp
pushf
mov
push
cmp
and
insl
ljmp
xchg
mov
les
fsubl
push
add
jmp
inc
out
ror
adcl
jp
mov
stos
test
push
mov
aaa
adc
sub
fistl
sub
fwait
xor
push
test
inc
add
push
push
cmpsl
adc
add
xchg
sbb
into
xor
cmp
rclb
dec
stos
mov
add
out
es
arpl
push
inc
gs
ret
in
xchg
in
test
push
sub
out
ja
subb
stc
sbb
cmp
test
pop
mov
sbb
adc
sbb
loopne
icebp
cmpsb
jle
and
lea
mov
rcll
jno
fbstp
push
xchg
and
call
mov
and
pop
fucomip
daa
lods
dec
push
adc
in
movsl
jnp
icebp
sub
cmp
mov
sub
out
idiv
clc
lds
call
imul
mov
pusha
repz
pop
repz
stc
lcall
stos
mov
je
jge
insb
or
jns
addr16
div
inc
push
inc
and
jne
mov
mov
mov
das
repz
sbb
cmpl
jmp
pop
xor
mov
ret
fimuls
cwtl
xor
pop
lahf
cmp
mov
mov
push
mov
push
mul
mov
or
mov
and
cmpsl
dec
xchg
mov
and
add
mov
stc
pop
fbstp
xchg
and
sbb
aam
jns
lea
pop
pop
mov
std
inc
nop
push
int3
das
dec
insb
mov
out
stc
test
iret
sbb
aas
xor
pop
mov
pop
cmp
roll
add
jmp
in
mov
nop
lds
aas
sbb
cmpl
jb
mov
adc
jmp
dec
sbb
xchg
jle
icebp
stos
pop
fucomip
andb
ja
push
stos
aaa
push
stc
pop
cli
mov
ret
xlat
das
fldenv
ss
dec
leave
lea
lahf
inc
sub
dec
insl
xor
xor
push
push
lods
mov
nop
hlt
adc
mov
or
sti
roll
mov
add
imul
mov
adc
ja
sbb
fwait
jae
or
sub
in
push
cmp
test
add
push
sub
jnp
xlat
movsl
push
mov
adc
cmpsb
imul
mov
rcrb
ss
dec
in
daa
in
lods
mov
rcrb
pop
pusha
xor
data16
inc
aaa
or
aas
lods
jae
out
gs
push
aas
and
daa
or
inc
lret
aad
jae
lods
jg
in
pop
mov
test
or
add
cmp
push
xor
pop
js
mov
cmp
sub
inc
pop
std
addr16
fsubrl
or
dec
leave
adc
mov
loope
xchg
ret
shr
into
ficoms
mov
xchg
mov
xchg
push
pusha
daa
mov
gs
mov
mov
sbb
adc
sbb
push
mov
cld
popf
pop
loop
ror
push
hlt
sub
stos
pextrw
mov
lret
inc
dec
ficoms
xor
hlt
test
mov
mov
pusha
out
stc
dec
or
push
sbb
push
jle
pop
inc
mov
pop
push
or
pop
and
push
ss
rcr
sarl
adc
inc
movsl
xor
add
jp
lret
push
es
outsl
sbb
add
push
pusha
pushf
jl
imul
xor
add
cltd
stos
call
mov
inc
sbb
push
mov
sbb
jp
and
stc
lds
or
mov
jne
je
rol
gs
fwait
or
add
test
mov
adc
cmpl
lods
xchg
ret
xor
lret
or
sti
pop
sub
test
mov
add
and
cmc
push
ret
scas
into
arpl
loopne
cmpsb
mov
push
mov
cld
stos
pop
pop
es
add
adc
ror
dec
fcomps
xor
adc
push
in
push
add
xor
push
sahf
rcr
inc
movsl
aaa
mov
cs
out
into
push
pop
dec
cltd
into
out
cmpsl
xor
rcr
stc
aas
push
mov
pop
xorl
or
rorl
jecxz
js
fadd
or
popa
subb
add
inc
or
xor
insl
jnp
cmc
rorb
test
jne
jg
sti
scas
notb
xor
jmp
dec
mov
mov
mov
mov
insl
sbbb
mov
lret
cmp
mov
pcmpeqw
dec
sub
aas
lret
and
sbb
dec
cs
xor
xor
mov
mov
hlt
pop
or
jp
inc
jo
cmp
ret
bswap
enter
pop
aam
into
cmp
pop
repz
push
iret
imul
cmp
sub
sbb
loop
test
orb
call
mov
xlat
mov
jp
sahf
push
clc
sti
das
push
inc
call
in
stos
push
inc
lcall
ja
xchg
movsb
dec
xor
inc
rcrb
scas
mov
mov
xor
sub
fwait
aad
aam
xchg
sub
jo
je
push
pop
iret
leave
fcoms
mov
daa
xor
std
inc
les
xchg
push
lcall
aaa
cli
and
pop
repz
xchg
fmul
or
loop
loope
movsl
and
sti
jno
mov
mov
mov
in
push
jmp
push
iret
jae
icebp
cmpsb
inc
xor
cmp
nop
xchg
lret
mov
mov
push
sub
sbb
scas
xchg
nop
cmp
shl
sub
fistpl
jae
cmp
out
pop
test
mov
out
mulb
jo
xchg
popa
adc
fwait
arpl
adc
and
nop
fwait
xor
pushf
mov
push
add
rcr
sub
stos
jp
inc
insb
mov
xchg
adc
jb
cli
mov
sbb
hlt
sti
data16
sub
shll
xor
push
ljmp
push
movsl
inc
xchg
sbb
sar
adc
lods
inc
je
add
pop
addb
movsb
inc
ret
movsb
ljmp
xor
lahf
aam
pop
mov
repz
fcompl
jge
enter
sub
gs
xchg
add
inc
mov
stos
hlt
iret
dec
mov
cmp
cltd
outsb
fnsave
xchg
scas
mov
jecxz
xchg
push
mov
arpl
ss
les
jo
je
divl
outsl
mov
popf
add
jns
push
in
iret
insb
js
repz
sarb
jns
mov
adc
jns
push
pop
dec
scas
mov
insb
out
push
sarb
addr16
out
pop
iret
out
insb
ds
adc
sub
into
lock
xor
idivl
cmp
les
xchg
daa
push
dec
hlt
sub
and
xchg
xchg
sub
cmc
mov
sub
cmc
dec
jno
lea
sbb
iret
cli
cld
iret
outsb
cmp
dec
xor
repz
dec
jmp
out
sub
cmpsb
pop
mov
sub
jp
and
shlb
cmpsb
add
xchg
movsl
and
stos
xor
push
add
popa
push
mov
mov
mov
xchg
jbe
cvtps2pd
or
pushf
ficoml
adc
fisttpl
fistpl
adc
shrl
push
idiv
xchg
xchg
mov
das
sbb
sbb
inc
inc
push
pusha
xor
sahf
jp
mov
cwtl
orl
adc
adc
data16
pusha
jbe
mov
mov
jo
pop
push
pop
mov
sbb
and
cmp
cmp
fmuls
xorl
jns
or
popa
push
mov
stos
daa
aas
xor
stos
in
jo
in
stos
movsl
rcl
push
data16
mov
movsl
sarb
aam
push
test
mov
aas
shlb
dec
cmpsl
lcall
dec
pop
cmpl
sub
pop
sub
pusha
xchg
xor
mov
ret
nop
push
dec
or
and
idiv
push
stos
out
mov
rorl
sub
lods
xchg
shl
daa
pop
aam
mov
mov
add
xchg
dec
inc
loopne
mov
inc
mov
fisttpll
mov
fldt
cmpxchg
jbe
into
cwtl
cmp
js
sbb
pushf
js
in
xor
dec
ret
xchg
push
sarl
inc
mov
call
in
pop
push
lahf
movsl
sub
out
push
lcall
pop
fs
and
adc
push
aas
adc
sbb
testb
jb
xorb
dec
pop
mov
dec
aam
movsl
leave
rorb
inc
aad
js
scas
jge
popf
cmpsl
xor
pop
imull
cmp
int
int
cmc
ficoml
pop
fs
enter
dec
mov
push
dec
jl
movsb
jb
and
sub
sub
lcall
sbb
out
mov
leave
push
in
or
xor
push
imull
jp
js
test
shlb
xlat
test
mov
fwait
cmp
mov
sbb
ret
dec
pop
sbb
xorl
iret
cmpsl
ja
lods
xor
xor
fistpl
test
dec
adc
rorb
dec
mov
cmp
xor
pushf
scas
push
fs
or
mov
xor
jns
roll
in
sub
adc
xorl
pop
jp
dec
push
loop
sbb
and
insb
pop
push
lods
pusha
bswap
xchg
and
sti
in
mov
pop
test
ret
imul
nop
ficomps
loopne
movsl
inc
dec
mov
dec
mov
scas
sub
jmp
clc
in
xor
push
mov
out
sub
or
sarl
and
je
mov
test
jecxz
jns
mov
dec
xchg
scas
je
rcrb
arpl
and
std
fistpll
push
mov
ficoml
adc
es
mov
adc
pop
test
xchg
xchg
sbb
adc
push
dec
xchg
inc
pusha
sub
aad
rep
push
imul
jl
hlt
gs
repnz
aaa
xchg
stos
inc
leave
cwtl
jb
sbb
lcall
xor
dec
xchg
sarl
test
lds
arpl
popa
cmp
jp
int
cmp
shlb
js
cli
jmp
outsb
jge
ficompl
xchg
icebp
out
rcrl
aas
outsb
data16
xor
jnp
bndldx
nop
jmp
sub
jb
popf
repnz
dec
idiv
faddl
push
push
and
lds
in
lret
sbbl
aam
arpl
or
repz
cwtl
xchg
cmp
add
sbb
xchg
pop
lea
pop
xchg
push
mov
jmp
daa
clc
lret
fcoms
or
mov
jecxz
sbb
pop
out
out
jp
lea
and
ljmp
and
pop
nop
xor
aas
add
add
gs
push
subb
das
dec
xor
iret
mov
movsb
and
lret
std
sbbb
inc
inc
xchg
and
cmpsl
pop
ja
mov
daa
pop
jns
mov
arpl
fidivs
push
lcall
mov
stos
das
mov
adc
lds
sbb
xor
xchg
lcall
nop
xor
jo
arpl
lods
jl
or
sub
imul
pop
shl
fwait
cmpsb
mov
out
jp
icebp
outsb
adc
aaa
inc
xchg
jbe
pop
mov
mov
data16
xchg
ss
inc
add
ficoml
les
jnp
xor
lret
out
jl
popf
mov
mov
cmp
cmpsb
xchg
xor
pop
scas
bound
sbb
es
pusha
popf
das
popf
push
stos
mov
sbb
mov
jns
cltd
aad
or
or
xor
adc
cltd
test
sub
sbb
cmpsb
mov
xor
push
xor
loopne
inc
sub
xor
fimuls
icebp
xor
call
xor
pop
adc
xchg
cmp
add
jecxz
sbb
cmp
xchg
ss
and
ficoms
sti
mov
push
sub
movsb
cmpl
enter
mov
aam
ret
xor
and
jb
push
cmp
pushf
mov
xchg
push
xlat
lahf
mov
ljmp
in
or
mov
loop
or
repnz
jp
xor
pop
inc
add
scas
scas
jae
sub
stc
pushl
xchg
lods
inc
enter
adc
mov
ror
loope
cmc
and
test
cmp
ds
stc
mov
cmp
dec
popf
sahf
bound
cli
and
leave
jg
loopne
and
xor
fwait
enter
xlat
stc
dec
mov
sti
xor
std
push
std
xchg
paddsb
lret
push
jmp
sbb
xchg
jmp
movsb
pop
dec
daa
add
jne
iret
into
jp
xor
inc
mov
aam
cmp
mov
mov
movsb
mov
pop
lods
popa
rorb
push
mov
hlt
jl
mov
ret
mov
imul
jp
mov
bound
xchg
inc
mov
adc
mov
jmp
movsb
fisubs
push
lcall
sbb
aad
push
jmp
clc
xor
movsb
push
pop
xchg
ljmp
xchg
push
into
test
jmp
mov
push
adc
or
inc
in
adc
pop
jbe
push
cmp
adc
or
add
ss
push
cmp
adc
mov
aas
pop
mov
xor
dec
adc
fimull
pop
test
xchg
pop
mov
lods
std
js
out
pop
mov
adc
mov
pop
hlt
lods
pop
cwtl
call
sub
rolb
xlat
pop
xor
jge
mov
insb
out
mov
pusha
gs
and
loop
xor
nop
cwtl
mov
pop
lea
and
cs
or
mov
cmp
xchg
cli
icebp
out
stc
xor
imul
xor
and
rcrl
pop
ja
imul
scas
jnp
ret
lds
in
lods
pop
mov
xchg
dec
jp
cltd
mov
adcl
sub
movsb
cmpsl
sub
xchg
push
pop
xchg
mov
divb
xchg
sub
pushf
fistps
das
sub
sbb
out
or
and
jo
pop
sub
jge
cmp
cmpsb
cmp
mov
mov
sarl
addb
fisttpl
mov
push
jecxz
lods
and
lods
stos
test
das
mov
inc
je
in
addr16
pop
jne
adc
add
enter
lock
and
sbb
add
movsb
dec
gs
jb,pt
adc
out
out
dec
es
out
cmpsb
sahf
jmp
lret
dec
jae
jle
xor
lcall
cs
fisttps
mov
out
sub
mov
ljmp
bound
leave
das
hlt
cmpsb
and
aad
adc
and
sbb
sbb
xchg
lahf
cmp
mov
sub
pop
push
iret
lods
sbb
stos
insl
cmp
repnz
ficompl
lret
sti
imul
xor
adc
sarl
repz
pop
loope
jnp
push
pop
mov
testl
ds
pop
andb
jl
adc
in
xchg
fistps
or
in
mov
jae
sahf
popf
mov
and
lret
or
std
dec
cmp
sbb
mov
dec
inc
outsl
inc
pop
mov
cmp
inc
push
cltd
int
clc
aas
addr16
mov
nop
xor
sub
push
lahf
insl
add
int
adcl
setg
or
mov
daa
mov
aaa
mov
push
shrb
xor
jge
dec
in
addr16
int3
test
lock
sbb
pop
mov
cli
out
push
div
scas
sbb
mov
in
out
push
outsl
mov
jo
cmpsl
aas
lahf
push
rcr
add
mov
in
jno
jno
xchg
jnp
imul
popf
in
inc
pusha
adc
push
shlb
clc
or
cmpsl
dec
fwait
and
push
push
pushl
pop
shlb
je
lahf
pushl
dec
aad
sub
inc
loop
adc
inc
jp
sti
mov
sbb
notb
loopne
mov
inc
jae
mov
les
dec
add
push
roll
or
add
les
dec
roll
mov
and
roll
push
ftst
outsb
pusha
add
lahf
mov
mov
ja
mov
mov
adc
and
mov
clc
inc
repz
mov
ret
jb
cmpl
adc
fcomip
stc
stc
bound
push
enter
or
filds
xor
insb
cs
sbb
cmc
cmpsb
sti
pop
xor
jg
inc
mov
push
push
aam
cmc
pop
fnsave
cmp
mov
jecxz
mov
pop
testl
cltd
icebp
xor
add
inc
add
das
cld
cwtl
push
test
xlat
inc
jg
mov
adc
popa
jns
mov
mov
rolb
dec
mov
push
sbb
pop
ss
inc
insb
adc
adc
je
and
std
fxtract
daa
push
loope
out
mov
test
test
cmpsl
dec
ljmp
push
mov
sub
xor
loop
inc
sarl
lcall
push
cmp
lea
jbe
daa
popf
adc
notl
and
push
rcr
inc
mov
inc
pop
pushf
push
cmc
jle
test
inc
push
jl
push
jnp
in
mov
push
mov
std
adc
dec
xchg
test
adc
jle
pop
and
adc
pop
mov
call
jl
jo
mov
jge
mov
popa
xchg
or
fldenv
loope
popa
jae
cmp
cmp
std
mov
stc
sub
enter
sbb
into
mov
sbb
inc
ss
cld
js
xchg
ds
add
enter
inc
mov
imul
outsl
mov
or
xor
fmuls
popa
pusha
push
lock
fildll
daa
jge
push
in
pop
mov
call
int
divl
pop
icebp
jo
mov
popa
ja
xchg
jno
pop
cmc
xchg
cmp
and
pop
mov
xorb
bound
inc
jle
sub
enter
sbb
jle
adcl
xor
in
inc
xchg
arpl
pop
adc
icebp
orl
ss
push
cmp
sub
sbb
or
mov
mov
ret
push
arpl
gs
ret
jmp
xchg
mov
test
jo
fbstp
mov
push
xchg
push
sbb
imul
jmp
hlt
mov
mov
push
ss
mov
cmc
std
in
dec
ja
or
movsb
adc
mov
decl
test
popf
aaa
test
imul
mov
movsb
push
pop
xlat
sub
hlt
adc
sbb
imul
stc
icebp
rcll
lods
ja
inc
xchg
adc
inc
push
jno
test
add
mov
cld
add
loop
repz
jne
aas
sub
mov
bound
push
xchg
jg
sbb
mov
jns
leave
sahf
jae
mov
push
sti
mov
out
mov
popf
xchg
sub
fistpl
shl
mulb
leave
mov
jecxz
mov
pop
loop
cmp
in
pop
fmul
je
xchg
mov
xor
sbb
shlb
push
inc
lret
pop
and
lds
test
jp
mov
mov
arpl
mov
stos
shrl
or
inc
xor
test
out
add
or
pop
movsl
jbe
stc
inc
and
add
and
add
cli
cmp
pop
imul
add
cmc
adcb
jle
push
cmpsb
xchg
leave
inc
js
jo
push
enter
dec
lahf
enter
push
mov
pop
sahf
fcmovne
loop
les
cmp
push
lods
test
sbb
jmp
mov
in
das
cmp
lahf
xchg
jecxz
or
sub
fadds
nop
dec
xor
add
out
nop
call
dec
cmpsb
pop
and
xorl
sub
rcrl
cmpsl
idivl
inc
cmp
push
sti
inc
shl
dec
test
inc
dec
xchg
xor
add
fadd
add
popa
pop
mov
into
and
cltd
and
lea
jne
sub
imul
jbe
pop
push
jle
push
adc
adc
loope
sbb
in
or
fdivrl
cmpsl
aas
icebp
mov
mov
scas
xchg
dec
adc
test
pop
jecxz
jmp
mov
out
fsubs
or
pop
out
shlb
out
lret
lret
push
fists
add
jne
sysenter
and
in
shll
push
rol
adc
bound
incb
addr16
mov
subl
adc
mov
sub
inc
movsb
lahf
in
xchg
arpl
lock
adc
in
xor
repnz
mov
jnp
in
imul
icebp
popa
aam
ret
js
adc
mov
adc
jp
dec
fdivrp
or
stos
jg
es
push
jno
int3
imul
xrelease
jecxz
into
jg
mov
lods
mov
xchg
imul
movsl
push
mov
and
fwait
cmpsl
insl
lret
scas
sub
mov
imul
jnp
xchg
sahf
cmc
in
popl
cmc
enter
and
jp
push
mov
or
xorl
sub
scas
push
dec
and
adc
jle
push
in
lahf
mov
in
imul
aad
mov
push
xchg
add
pop
aam
pop
sub
cmp
mov
fisttpl
nop
outsb
push
xor
jne
xor
cmp
mov
and
lret
loop
cli
sbb
jp
cmpsb
aas
in
xchg
xchg
sarb
out
mov
inc
mov
nop
jb
pop
push
inc
xchg
or
mov
cld
rclb
cmpsb
ss
add
sbb
sbb
add
mov
lret
sub
shll
out
mov
mov
mov
in
ja
loope
lcall
imul
or
and
jns
lock
pusha
xorb
mov
push
jno
out
mov
pop
out
push
mov
orb
jge
jae
push
test
sbb
cld
mov
push
dec
adc
cwtl
test
push
loopne
jbe
out
in
sub
mov
push
push
push
cld
adcl
movsl
imul
fisttpl
cmp
dec
lret
cmp
cld
add
movsb
and
les
jmp
sbb
out
ss
jl
sarb
mov
cmp
cs
adc
in
aam
sahf
inc
stos
and
call
sahf
push
mov
pop
outsb
clc
mov
fcomi
dec
xor
push
mov
fldcw
adc
mov
lods
adc
stc
mov
dec
mov
out
sub
repz
rcrl
repnz
nop
dec
cmp
ja
jo
test
cmp
adc
sbb
fldt
or
cmpsl
bound
fdiv
mov
das
push
mov
das
pusha
jmp
or
outsb
outsb
les
mov
sub
test
push
xchg
fcmovnbe
pslld
call
and
dec
pop
cmp
les
mov
and
rcll
mov
mov
sub
icebp
ret
inc
sub
test
pop
int3
jle
or
mov
lods
fisubrs
in
inc
daa
sub
shl
vpaddq
insb
mov
jnp
out
fcoms
dec
adc
mov
sub
icebp
xchg
les
xor
nop
jmp
pop
rorb
xchg
inc
inc
popa
xchg
sub
adc
ret
and
and
xchg
mov
mov
cltd
imul
pusha
and
push
jo
and
xchg
jp
or
stos
sub
inc
les
add
les
out
scas
adc
loope
xlat
call
mov
and
ja
dec
add
aaa
mov
rol
xchg
and
xor
sub
pop
orl
or
movsb
ficompl
add
xor
mov
mov
jb
or
out
das
call
dec
imul
jge
fiaddl
lock
scas
dec
loop
in
outsl
or
andb
shr
dec
popf
mov
lahf
push
data16
in
ror
mov
cs
xchg
inc
mov
leave
push
adc
mov
pop
sub
cmpsl
aas
aas
or
dec
mov
cmp
orb
fistpl
add
mov
stos
divb
bound
adc
std
faddl
dec
and
in
mov
jmp
je
inc
cmp
push
popf
add
add
mov
adc
enter
push
sahf
cmpsl
ret
sbb
testb
int
aaa
lods
arpl
mov
sub
add
xlat
bound
xchg
inc
mov
or
int3
inc
add
lods
ret
cs
jle
inc
pop
mov
insb
dec
adc
pop
or
enter
out
out
je
cmp
fbstp
pop
push
xlat
cli
xchg
pushf
xlat
cmpsw
testl
ljmp
mov
test
shlb
rcr
jbe
or
call
fstps
add
subb
leave
js
push
jae
fs
mov
cmpsb
icebp
cmp
sub
cmp
pop
sbb
cltd
rep
cmp
test
test
xchg
dec
sbb
ss
mov
clc
cmp
mov
mov
mov
insb
jns
hlt
in
fldl
insl
outsb
test
push
subb
sbb
push
test
leave
movsl
int3
cs
roll
add
cmp
pop
out
xorb
fwait
xchg
mov
sub
subl
push
pop
data16
push
clc
adcb
inc
and
xchg
jle
cmp
push
rep
sbb
movsb
and
ud1
mov
ds
iret
xor
inc
dec
mov
xorl
das
xchg
in
jle
cmc
or
lea
add
xchg
out
in
and
jp
out
jmp
sbb
cs
nop
insb
les
cltd
or
nop
lcall
in
jbe
mov
das
insl
inc
sbb
cmc
cmpsb
shl
out
stc
je
scas
sub
mov
sub
roll
mov
scas
xchg
and
lcall
inc
jne
and
bound
mul
push
in
aas
xchg
xor
loopne
cmp
jp
gs
cmpl
inc
dec
aas
push
xor
push
imul
scas
bound
and
dec
xchg
cmp
mov
sbb
vpmullw
sar
out
ret
stos
lds
mov
xor
and
pop
out
aam
push
loope
bound
push
jp
add
or
cwtl
outsb
mov
stos
pop
add
pop
scas
or
fwait
mov
in
lahf
lock
sbbl
addb
push
lret
cli
push
mov
push
sub
gs
sub
mov
int3
mov
jl
and
scas
sub
pushf
out
pop
test
and
test
rcrb
std
jae
mov
cmpsl
cmpsb
aam
fdivrs
jno
cmpsl
out
push
lock
cs
shlb
xor
lds
movsb
notl
repnz
and
lret
jo
dec
push
or
pop
xchg
pop
push
divw
xor
xchg
mov
mov
xor
xchg
aas
js
je
add
pop
ss
pop
mov
loopne
hlt
lods
out
pop
dec
push
jo
lahf
rcrl
repz
imul
mov
lock
push
inc
push
sbb
insb
xor
jp
fdivrs
arpl
dec
mov
nop
cwtl
inc
dec
jne
and
loopne
jb
jnp
cltd
lds
lret
in
das
push
sbb
mov
and
lcall
popf
mov
jb
inc
add
rorl
cmc
in
fldl
repz
fbstp
pop
sub
dec
bound
add
das
and
cmp
imul
and
xor
push
out
jle
stos
pop
xor
stos
arpl
outsb
ret
int
ja
stos
ljmp
mov
fnop
testb
shl
fwait
gs
mov
sahf
mov
sbb
mov
mov
fnstenv
out
jne
mov
into
mov
rclb
sbb
cmpsl
fimuls
and
sbb
lret
mov
sub
in
cwtl
mov
or
pop
mov
and
fstpt
sub
adc
cmp
lret
pushaw
xchg
fidivs
lret
icebp
inc
mov
and
mov
inc
orb
call
imul
es
mov
pop
sub
adc
dec
cmc
stc
dec
mov
fmul
fs
in
xor
ret
add
cmp
cmp
push
xor
pop
pop
je
scas
xchg
movsb
push
loope
test
inc
cmpsl
mov
test
jl
dec
jge
ret
sbb
je
jbe
push
mov
pop
ja
push
xchg
jnp
adc
data16
sub
sub
jae
call
adc
fildl
lods
and
push
insl
lea
xorb
cmp
pushf
mov
sbb
cld
fsubr
repnz
mov
jp
and
jmp
pushf
aas
divb
inc
popf
dec
leave
pop
cmp
loop
jecxz
jmp
movsb
int3
mov
dec
lret
sbb
movsl
ret
fs
inc
xchg
aam
sub
subb
cld
inc
fisubrs
pop
je
mov
xor
adc
cli
dec
sbbb
out
aaa
mov
jp,pn
imul
js
or
dec
dec
stc
xchg
or
shll
loop
ds
mov
sub
mov
mov
in
jns
xchg
test
dec
jle
cmp
bound
jmp
pop
fcmovnu
into
lcall
xor
cwtl
dec
add
icebp
mov
add
push
push
mov
cmp
lods
jle
mov
adc
lret
jge
xor
ljmp
xlat
sti
outsb
cmp
ret
add
fs
enter
push
aaa
je
sbb
stos
lock
mov
cltd
andb
jns
and
daa
cli
daa
and
mov
loopne
aas
sahf
push
ljmp
adc
push
lret
xor
inc
cmp
rol
lock
das
push
inc
das
adc
pop
push
lea
out
push
scas
xchg
inc
sti
test
nop
out
and
ss
sbb
xchg
xchg
or
push
out
and
gs
cmp
das
movsl
mov
iret
fsub
pop
lea
orb
pushf
mov
inc
fdivrl
in
in
and
fs
dec
push
xchg
cmp
fnstsw
cmp
movsb
sub
add
in
jne
dec
clc
mov
add
sub
xor
adc
push
add
mov
call
shrb
out
dec
repz
add
sbb
mov
or
bound
xchg
jge
pop
adc
mov
aam
sbb
outsl
xchg
call
mov
dec
rol
movb
gs
add
sbb
jbe
loop
jne
mov
scas
inc
repz
inc
pop
loope
dec
mov
xchg
shll
push
inc
mov
inc
sub
mov
or
jb
mov
iret
test
jmp
sti
or
lock
test
pop
sub
lea
scas
pusha
push
jmp
cld
daa
mov
inc
sub
add
loope
push
sub
sbb
jnp
idivl
push
fdivr
daa
nop
inc
inc
mov
loope
dec
and
scas
pop
mov
adc
push
jne
and
enter
sbb
test
faddl
jge
aas
pop
aaa
adc
out
mov
xor
mov
rcl
xchg
xchg
loop
xor
int
rcrl
xor
cmc
and
sub
pushf
xor
mov
repz
mov
js
sahf
add
in
fidivrl
stc
sub
stc
mov
lahf
lahf
mov
mov
jno
push
sub
cmc
xor
cli
cmp
je
js
das
push
dec
aas
lock
sbb
pop
add
sbb
jns
pop
les
lret
push
xchg
jb
call
xchg
inc
out
adc
sub
fimuls
clc
mov
int3
xchg
testb
sbb
sbb
ss
mov
mov
adc
push
or
jmp
sub
mov
in
inc
in
cmp
sub
lret
and
in
xchg
decl
daa
adc
ret
lret
shlb
sbb
adc
mov
test
movsl
rcrb
mov
dec
adc
adc
xor
dec
ret
adc
outsb
push
dec
jl
stc
mov
jns
sti
add
dec
jbe
pop
out
adc
repz
sbb
or
js
in
es
lahf
test
jmp
das
js
push
xchg
xor
inc
sub
cmpsb
cmpsb
xchg
xchg
aaa
jge
push
pcmpgtd
insl
loopne
push
cmpsl
sub
sahf
add
pop
adc
mov
out
repz
jp
mov
out
pop
mov
aaa
rorl
out
test
dec
mov
aad
loope
cmpsb
ficoms
push
insb
or
mov
aad
xchg
jle
jno
dec
lahf
test
add
iret
aas
mov
shrb
mov
mov
dec
sbb
or
xor
inc
movsl
repnz
lret
jne
dec
out
aaa
dec
sub
enter
mov
fidivrl
mov
int
cli
xchg
out
jge
pushl
mov
negb
xchg
sbb
push
mov
cmpl
xchg
or
dec
dec
add
ds
lods
lock
dec
xchg
inc
repz
ss
cmp
out
add
or
aas
scas
cmp
or
push
lock
lret
cmp
jle
mov
and
test
test
mov
pop
xor
sub
sub
adc
loope
adc
or
add
cmp
es
cmp
aaa
dec
dec
clc
cs
js
xchg
ret
push
and
lods
mov
and
sub
lcall
jne
xchg
jg
lcall
mov
jge
test
fs
pop
ret
xor
pop
out
adc
repnz
cmpsl
ds
cmpsb
jle
dec
jp
inc
js
add
scas
fistps
sub
xchg
sub
mov
sbb
sbb
inc
xor
scas
jne
sub
test
lret
push
push
mov
jne
ficoml
or
push
mov
or
jo
inc
xor
cmpsb
push
xchg
push
ss
lods
frstor
and
js
test
lock
rcrl
ja
arpl
cmp
add
out
mov
jg
cld
ljmp
in
sbb
xchg
mov
arpl
mov
add
into
test
test
adc
sub
jecxz
stc
and
mov
mov
mov
in
cmp
shrb
mov
sahf
repz
aaa
imul
lret
arpl
adcb
sub
jle
dec
test
mulb
mov
mov
mov
xchg
push
mov
jne
testl
lods
mov
je
lret
mov
fcmovnu
addr16
rcr
data16
mov
push
pop
out
xor
rcrl
sub
int
int3
mov
jl
in
or
repz
and
mov
mov
mov
in
cmp
xchg
popf
inc
push
jle
cmpsb
daa
lret
adc
adc
cmp
lods
jp
repz
xorb
or
dec
inc
adc
jno
inc
pop
xlat
mov
lock
add
xor
mov
stc
mov
sub
aas
cmovbe
cmc
mov
mov
adc
xlat
iret
adc
dec
mov
pop
lods
adc
add
mov
stc
sbb
inc
and
push
inc
stc
cmp
imul
loopne
cmpsl
mov
orl
push
stos
orb
inc
sbb
add
int
jbe
fsts
cmp
jmp
dec
lahf
fnstsw
pop
ds
sub
sub
orl
dec
lock
mov
cmpsb
std
loopne
pinsrw
mov
fldl
push
push
mov
sub
cmp
or
jmp
popf
push
xor
push
mov
xchg
nop
mov
lcall
aas
mov
into
and
push
adc
lret
or
insb
dec
mov
dec
cmpsl
movsb
or
xorb
lods
push
sbb
pop
sbb
movsb
mov
lahf
adc
sbb
or
mov
pushf
test
loopne
mov
dec
sbb
push
lods
sbb
pop
mov
ror
add
arpl
cmpsb
xchg
shlb
xlat
push
andb
sti
pop
sbb
fs
cld
add
mov
pop
xchg
xchg
in
mov
out
adc
mov
adc
fcmovbe
jae
xlat
call
pop
or
in
ret
outsb
pop
sub
ss
test
daa
jmp
js
rcrb
loop
push
ss
mov
stos
or
std
pop
roll
jmp
cmp
lahf
orl
mov
aas
inc
roll
das
sbb
jbe
ja
dec
xchg
and
js
arpl
pop
jl
inc
push
push
mov
mov
xchg
lret
das
mov
data16
outsl
testb
and
fs
cwtl
sbb
dec
es
inc
push
jmp
push
sbb
sbb
and
mov
test
lea
sub
shrl
or
sbb
cmpsb
in
inc
sub
cmpb
or
cmpsb
jp
cmp
jge
and
leave
mov
addl
sahf
aam
negb
inc
sahf
sub
cmc
push
sbb
sub
inc
mov
dec
inc
orb
jns
or
imul
or
lret
cld
adc
inc
negl
nop
js
cld
mov
mov
push
test
nop
loopne
outsl
movsl
ret
testb
inc
popa
adc
js
sub
aas
roll
push
inc
xchg
loope
dec
lds
ret
rorl
sbb
push
push
dec
fs
sub
out
stc
or
clc
add
push
sub
push
frstor
xchg
stc
add
inc
les
fidivl
lret
sbb
xchg
jb
mov
mov
mov
nop
mov
test
dec
sbb
cmpsl
std
add
rol
adc
inc
xor
jb
ds
sar
adc
shl
fsubrl
jmp
pop
mov
outsl
sbb
push
in
sub
cmpsl
out
mov
and
outsb
sahf
sbbb
pop
nop
dec
or
imul
mov
popa
mov
mov
sub
jae
and
std
cmc
dec
or
and
sub
jb
nop
nop
xor
xchg
outsb
imul
jb
push
popf
push
data16
out
jp
push
sar
arpl
xor
stos
mov
sarb
pop
cld
bound
insl
mov
ss
mov
jg
add
mov
cwtl
aas
xchg
movl
bound
push
pop
or
sbb
fmull
popa
insb
popf
int3
aaa
int3
shlb
cli
mov
ljmp
adc
sub
pop
movsl
popa
ljmp
cmp
jb
loopne
pop
ss
xchg
ss
sarl
or
out
mov
sahf
inc
add
call
and
inc
ret
fsubs
fldenv
sbb
xor
sbb
stos
adc
daa
mov
int3
pop
mov
adc
adc
mov
dec
mov
leave
inc
hlt
dec
and
lock
cmc
jl
xor
pop
add
out
inc
into
stos
dec
int
mov
test
in
shr
pop
lret
loope
mov
pop
sbb
sbb
leave
fs
fistl
jne
mov
adcl
sub
sbb
rcr
lea
mov
mov
mov
mov
pop
aaa
or
pop
dec
dec
sbb
int
push
jl
inc
pop
pusha
insb
mov
jo
mov
mov
xor
les
xlat
jno
icebp
or
imul
loop
ret
mov
jno
shll
test
push
xor
mov
daa
shl
pop
push
inc
push
pop
test
daa
fwait
xchg
leave
mov
inc
testl
cmpsl
inc
stos
push
loope
out
arpl
hlt
imul
lahf
das
sub
cmp
in
xchg
push
cmpsl
xlat
adc
pop
mov
dec
jae
mov
fsubrs
add
stc
mov
out
cltd
mov
mov
orl
call
ret
popa
test
or
les
jae
ds
sti
mov
icebp
loopne
jnp
lock
dec
dec
in
or
out
inc
and
inc
mov
inc
jne
cmp
aad
pop
bound
push
fwait
mov
or
xchg
xor
fsubl
jp
dec
xlat
fs
push
xchg
and
cmpl
pusha
pop
inc
mov
jmp
mov
rorl
jmp
xor
cltd
insl
adcl
and
jb
ficoms
loop
pushf
stos
xchg
into
dec
pop
inc
jae
xchg
cmp
scas
dec
movsl
bound
loop
inc
popf
hlt
cmp
jecxz
pusha
clc
test
orb
dec
inc
les
xor
pop
jno
inc
sbb
xor
jg
inc
out
or
add
lret
icebp
and
out
push
test
hlt
arpl
mov
inc
jecxz
pop
adc
dec
lret
adc
inc
push
adc
xchg
mov
push
dec
and
lret
mov
sub
sub
jns
push
sarb
push
mov
sub
sub
mov
stc
js
push
cmp
mov
mov
pop
push
loop
hlt
jae
pop
popf
gs
lret
mov
add
ficoml
push
sahf
and
shll
dec
sbbl
std
xor
fnsave
test
loopne
push
sub
out
cmc
js
ret
sbb
and
sub
stos
push
call
mov
dec
push
pop
sbb
nop
or
dec
jb
dec
adc
out
pop
or
stc
dec
push
pusha
or
push
enter
inc
jge
pop
out
mov
filds
daa
add
push
fiaddl
ret
jge
loop
in
std
test
push
adc
xchg
and
lret
jns
xor
push
ficoms
fistps
cmc
test
fstpl
sub
pop
ss
or
ljmp
rcr
pusha
insb
xchg
lods
mov
fldcw
in
fs
dec
insl
push
xchg
loopne
out
sub
popa
xchg
mov
push
push
imul
push
pop
push
lcall
push
cltd
dec
add
sbb
cmpl
inc
xor
jne
mov
xorb
popa
jmp
pop
cmc
mov
mov
add
cmp
inc
fcomi
xchg
repnz
iret
es
stc
ret
in
mov
lahf
sbb
iret
pop
jno
cwtl
jg
or
cmp
dec
and
pusha
lods
mov
add
inc
mov
ret
mov
jge
dec
inc
mov
push
fnstcw
dec
jecxz
adc
mov
loope
int3
test
fsubrs
pop
sbb
sbbl
jle
inc
loope
fildl
pop
ret
mov
inc
gs
mov
dec
ret
push
loopne
rcrl
ljmp
scas
pop
out
lahf
loopne
int
jecxz
xchg
clc
ja
jl
out
xchg
mov
push
fstpt
xchg
imul
sub
dec
inc
inc
push
mov
outsb
jecxz
xchg
lds
and
std
dec
dec
push
out
hlt
sbb
push
icebp
jl
cwtl
in
push
xchg
or
dec
dec
mov
jnp
fs
inc
and
fsubrs
mov
js
outsl
rclb
inc
lock
mov
neg
dec
je
ds
jmp
xchg
test
stos
out
loope
cmp
nop
inc
arpl
and
roll
jge
daa
das
in
xchg
cmc
daa
add
pop
jo
popa
mov
pop
imul
repz
push
dec
xchg
mov
pop
jb
mov
cmp
aas
dec
fistl
push
push
stos
fstl
pop
mov
es
data16
cli
mov
fidivs
leave
xor
pop
pop
pop
xor
out
push
pop
and
add
cmp
out
push
mov
stos
out
ja
add
xor
mov
adc
dec
cld
test
jecxz
pushf
xchg
cmp
fisubl
repz
mov
jbe
pushf
adc
mov
popf
and
dec
pop
adc
call
pop
sti
enter
xchg
int
lock
int
jp
fbld
pop
push
lcall
cmpsb
out
stos
mov
hlt
repz
and
fldt
cwtl
inc
mov
stos
inc
mov
sbb
test
rcr
cmp
mov
or
cmpsl
cmp
cmp
call
mov
mov
pop
fidivrs
add
dec
and
in
test
roll
lcall
or
je
dec
cltd
inc
jns
arpl
je
fldl
cmc
out
sub
adc
and
or
mov
lret
rorb
nop
push
push
or
sub
out
inc
xchg
pop
pop
jbe
sbb
mov
add
sbbl
pop
mov
mov
mov
jno
repz
xor
cmpsl
pop
jb
cld
stc
or
jl
sub
sub
sub
mov
mov
and
cs
in
rcrb
xor
les
rcrl
cmp
mov
popa
in
repz
outsl
push
int3
aas
mov
rcr
mov
xchg
sahf
inc
sar
subb
sbb
gs
mov
sub
data16
or
cmp
out
int3
stc
psrlq
sub
in
dec
mov
and
insb
or
es
xchg
loop
adc
cli
cltd
nop
add
mov
inc
scas
inc
and
jecxz
push
pop
push
lock
jmp
push
jae
in
dec
js
cmp
pop
sbb
xchg
inc
pop
std
das
out
mov
cmp
mov
inc
js
and
fidivs
popa
rolb
test
cmpsl
fstenv
pop
xlat
xchg
fstl
rcr
jle
aam
mov
data16
xor
incl
fcomip
sbb
ljmp
stos
pusha
js
sub
test
sbb
aam
shll
adc
push
adc
pop
or
inc
or
hlt
movsb
cmpsl
popf
dec
hlt
daa
xchg
testl
sub
mov
out
mov
decb
ja
jno
ret
mov
mov
sti
ds
or
ret
sti
inc
out
icebp
jg
jo
pop
aas
sub
xchg
lret
jp
dec
int
icebp
jg
mov
mov
sahf
scas
dec
or
int
push
push
mov
mov
rcrb
outsl
mov
enter
mov
into
aas
dec
jl
cmp
mov
push
add
push
or
sub
out
inc
sbb
fsubrl
adc
xchg
pop
jo
mov
lock
or
or
rorl
daa
adc
popf
cli
pop
or
ret
imul
repz
scas
mov
mov
sbb
adc
push
jp
pop
xor
loope
inc
push
jg
movsl
add
jl
push
mov
test
xchg
outsb
popl
addr16
hlt
or
push
int3
fs
sub
lret
std
or
call
inc
jne
jecxz
aas
dec
sbb
dec
in
test
pushf
das
jae
lret
or
shrb
repnz
push
cmp
push
pop
insb
rorb
mov
xor
and
es
stc
hlt
cmp
inc
aaa
enter
or
nop
mov
in
pushf
sbb
mov
mov
mov
or
push
push
sbb
cmp
sbb
xchg
pop
icebp
insl
aaa
and
icebp
leave
push
lcall
pop
hlt
mov
and
cmp
push
mov
push
mov
test
in
cmp
push
rclb
adc
test
jmp
sbb
sbb
int
enter
mov
and
xchg
inc
gs
int3
sbb
fdivrp
roll
cltd
inc
into
mov
push
inc
hlt
push
jecxz
push
xchg
mov
gs
repnz
das
fwait
mov
push
mov
push
or
lea
inc
aas
push
popf
fwait
and
lods
popf
add
movsb
dec
xchg
test
sbb
addr16
lret
dec
cmp
push
dec
adc
xor
fldl
sub
jno
adc
enter
sbb
push
data16
push
test
out
out
sbbl
inc
pop
add
dec
mov
int3
insb
mov
int3
cmp
jne
cmc
cmp
imul
cmp
push
or
and
orb
mov
lret
adc
lret
loop
add
mov
fidivrl
fidivrs
mov
popf
rcrl
mov
or
jns
cmpsb
inc
mov
lahf
inc
inc
popl
popl
loop
repz
adc
outsb
lods
sub
mov
subl
inc
pusha
aaa
lods
lock
xor
lahf
ret
sbb
ljmp
sub
xchg
add
orb
sbb
mov
psllw
mov
iret
add
fdivrs
js
lret
rcl
lea
adc
in
sbb
jb
idivb
inc
repz
xchg
pop
add
add
leave
add
gs
sti
mov
and
pop
cmp
cmp
ret
add
subb
out
bound
pop
pop
jnp
jns
and
adc
pop
loop
cs
or
lcall
in
addl
or
clc
mov
mov
fildll
jno
and
or
or
jl
repnz
cld
jge
push
rorl
mov
sbb
jnp
addb
jle
add
in
cmpsl
nopl
cwtl
pop
sub
push
sbb
sbb
sbb
aaa
cmp
call
cltd
addl
div
mov
hlt
out
iret
out
movsb
mov
inc
lods
out
add
pushf
ljmp
mov
std
xchg
push
addr16
fwait
push
jbe
jno
sti
shl
popa
data16
jb
add
xor
loope
add
dec
jecxz
call
inc
cmc
sbb
insb
jle
cmp
dec
inc
test
aam
push
pop
jbe
cmpsl
fwait
and
pop
add
leave
mov
ret
adc
add
jb
cmp
es
popa
movsb
jnp
xchg
pop
orl
js
mov
xlat
dec
inc
rorb
add
mov
pop
jns
out
loope
inc
icebp
testb
out
jmp
and
lds
fildll
sub
dec
mov
lock
arpl
lods
imul
pop
or
xchg
sbb
mov
pop
cmp
mov
cmp
adc
push
push
inc
sub
lahf
adc
cmpsl
cmp
aad
ret
sub
or
je
mov
inc
cld
dec
adc
adc
mov
in
mov
dec
sahf
into
or
mov
movsb
shr
jp
add
sahf
mov
inc
sbb
dec
push
insl
int3
insl
test
fwait
mov
sub
addr16
push
jns
mov
fstps
xchg
cs
jb
mov
aas
in
and
push
aad
pop
lahf
rol
sbb
or
cmp
les
out
or
sub
shlb
pop
push
in
jno
dec
pop
inc
mov
mov
mov
push
jl
push
xchg
stos
mov
aaa
sub
xchg
cmp
lret
out
rcll
or
ja
stos
sahf
xlat
pop
adc
adc
lea
mov
mov
cmp
fisubs
push
icebp
or
int3
mov
repnz
mov
pop
push
shll
aaa
adc
test
xor
add
getsec
jo
jmp
jns
mov
out
jle
pop
sub
scas
push
lahf
jbe
cli
inc
addr16
in
outsb
dec
adc
cmc
adcb
fistpl
mov
popf
repnz
iret
sar
mov
dec
icebp
movsl
and
cmpsb
cmc
jecxz
xor
dec
out
jo
sub
in
sub
outsl
mov
lods
jbe
pop
cmc
rcr
daa
mov
stos
arpl
cs
sub
sbb
mov
pop
enter
add
cmp
mov
repz
add
xchg
emms
pop
jae
mov
push
in
mov
stc
xor
scas
stos
frstor
daa
loope
cmp
int
ds
enter
loopne
jns
test
icebp
cmp
pop
sub
addr16
jbe
mov
test
sbb
ds
in
dec
pop
int3
push
mov
or
mov
je
push
jle
xchg
jp
mov
dec
mov
pop
jp
xchg
dec
in
int3
je
mov
sbb
cmp
cli
cld
xchg
lea
shrl
sbb
sbb
jecxz
cmp
stos
push
mov
imul
cwtl
add
fsubrs
nop
bound
or
dec
cmpsl
dec
add
mov
out
xor
lock
dec
mov
out
and
push
cmp
loop
sti
adc
sbb
jne
mov
into
cmc
inc
roll
scas
ret
sbb
stos
mov
fxch
xor
pop
push
mov
test
pop
clc
push
pop
je
in
loopne
ljmp
mov
insb
inc
xchg
lahf
sbb
pop
cmpsl
or
je
out
mov
scas
adc
xor
sub
gs
pop
in
ss
cs
jmp
mov
fldenv
mov
sarb
lea
mov
xchg
enter
ja
mov
xor
and
jb
push
push
sub
or
adc
cwtl
inc
aaa
fisttpll
mov
sbb
aad
cld
mov
lods
xor
dec
sti
add
cmp
movsl
lods
enter
repnz
mov
ja
push
ret
rorb
or
cs
push
inc
add
lods
push
pop
ret
ljmp
in
dec
ljmp
mov
test
xchg
jp
addl
sbb
jmp
inc
mov
jle
push
cmpsb
xorl
pop
fisttpll
push
rorl
sub
cs
orl
out
xchg
lret
test
iret
pop
add
sbb
xchg
in
pop
stc
call
and
lret
jo
aas
jecxz
iret
xchg
mov
mov
mov
add
and
fs
in
sbb
fisubrl
pusha
sub
daa
stos
sbb
pop
jnp
outsb
mov
cmp
jp
cmpsb
cmpsl
pop
and
into
or
inc
xchg
pop
fsub
loop
sub
cmp
test
pusha
push
push
sarl
stc
cwtl
out
dec
sub
mov
sti
fcomps
popf
or
and
xor
xor
mov
loop
jne
arpl
in
sar
test
cmp
pop
into
loope
jns
jmp
or
mov
jnp
mov
sbb
lret
add
xor
in
stc
sub
fsubr
xor
and
xor
xchg
push
or
sbb
xor
sub
in
cmc
dec
lods
or
adc
popa
xor
sub
mov
jecxz
jbe
rcrl
sbb
fwait
scas
pushf
shlb
cmpb
sbb
repnz
xchg
mov
adc
add
push
int
mov
push
xor
daa
cmpsb
mov
jg
ljmp
xchg
popa
or
enter
or
movsb
in
mov
cli
jecxz
hlt
cwtl
loopne,pn
scas
imul
pushf
leave
xchg
add
pop
fdivrl
sti
ficoml
xchg
scas
mov
inc
pop
notl
sub
fdecstp
xchg
jle
fyl2x
pop
popf
dec
mov
and
pop
mov
mov
bound
mov
out
jnp
push
mov
aas
outsl
mov
add
outsb
mov
push
fstpt
idivb
xor
movsb
mov
jge
clc
adc
fildll
shlb
in
movsb
out
aaa
nop
or
xor
out
xor
icebp
scas
bound
insl
js
into
dec
int3
test
pop
movsb
add
inc
mov
mov
mov
nop
xor
mov
jnp,pn
sub
add
popa
test
mov
and
daa
and
add
ds
inc
inc
mov
scas
pop
les
lock
jbe
mov
lcall
jnp
mov
sahf
jns
adc
arpl
mov
adc
stos
dec
cmp
ja
dec
jle
xchg
sbb
fxtract
jmp
enter
and
loop
sub
jmp
and
adc
jmp
aaa
jge
xor
call
sub
xlat
addl
ljmp
ljmp
stc
jg
xchg
add
imul
mov
repnz
arpl
pop
fdivrs
fs
aas
lods
ret
and
cld
fwait
or
xchg
popa
aaa
aam
sti
pop
and
push
jg
scas
push
cltd
or
mov
cltd
js
subb
iret
or
mov
mov
sahf
mov
jmp
andb
daa
les
scas
xchg
imul
cmp
dec
and
pushf
jnp
stos
fwait
test
repz
cmpsl
sbbl
mov
in
shl
sti
fwait
sbb
andb
fs
xor
in
xor
mov
sbb
int3
fcoml
add
std
inc
shl
mov
mov
movsl
in
lcall
add
lea
outsb
cmp
sbb
jnp
aas
push
mov
add
jecxz
bound
repz
mov
stos
pop
js
enter
mov
jle
sarb
cwtl
je
dec
cmp
cmp
mov
sub
std
add
enter
inc
and
xchg
pop
adc
sub
fdivr
lret
inc
or
add
lahf
imul
add
decb
mov
popa
insb
add
inc
imul
xchg
mov
int
cmp
mov
adc
int
cmp
adc
push
pop
testb
cwtl
sbb
ret
lods
gs
and
jl
jmp
xchg
into
inc
fwait
lds
adc
loope
mov
xor
mov
out
cmp
inc
xlat
jmp
xchg
jecxz
pushl
jge
rcr
jbe
xor
inc
push
or
cmpl
jnp
aam
pop
sbbl
cmp
insl
dec
add
push
loop
test
or
sahf
pop
mov
or
clc
pmuludq
jns
dec
and
jecxz
data16
int
jl
rol
popf
lahf
in
leave
add
mov
dec
call
inc
shrl
push
lock
shrb
movsb
push
mov
xor
loope
daa
mov
jg
mov
dec
mov
sub
mov
dec
out
shl
push
or
movsb
or
jno
xchg
repnz
sbb
lea
ret
bound
insb
xchg
fbstp
movsb
in
and
out
leave
dec
sub
dec
pop
out
popf
repnz
ljmp
mov
or
cli
rolb
dec
sub
das
adc
pop
popf
xchg
pop
push
into
cmpb
out
xor
cmp
repnz
mov
lahf
scas
js
inc
test
lea
inc
cwtl
dec
xor
hlt
mov
lret
xorb
jmp
loope
sub
jl
jl
and
adc
and
mov
dec
scas
scas
inc
mov
in
jns
mov
cs
xor
scas
mov
or
test
popa
mov
jge
cmp
in
xor
inc
sahf
js
or
dec
movsb
jno
inc
or
jecxz
mov
scas
mov
repnz
jle
loopne
sbb
or
icebp
mov
fcomps
sbb
lret
push
mov
sub
and
ret
fnsave
pop
adc
sahf
fidivl
das
addr16
ds
cmp
xor
leave
in
stos
into
inc
test
push
rcl
mov
pop
adc
jp
imull
jno
ss
push
ficompl
push
pushf
add
push
jbe
subl
icebp
icebp
ss
leave
arpl
gs
push
nop
push
or
imul
data16
pop
mov
movsb
in
add
add
fs
push
pusha
ja
sbb
jg
stos
lret
addr16
inc
int3
ret
divl
sti
pusha
xchg
jno
fnsave
int
int
into
and
jp
rcrl
in
int
cmp
insl
imul
enter
push
scas
iret
cmpb
mull
inc
jnp
fstps
rcl
xlat
push
jbe
mov
test
xchg
in
sub
add
sahf
sbb
ljmp
xchg
clc
xlat
and
popf
jnp
nop
push
std
sbb
cmp
ds
sbb
dec
mov
push
scas
ret
movsl
jns
into
out
push
iret
aad
sarl
inc
or
jbe
inc
pop
push
test
mov
or
fmuls
lods
push
out
stos
stc
int
mov
sub
in
jl
out
pop
mov
test
push
in
pop
imul
mov
bound
push
aad
cmpsl
or
stos
scas
mov
scas
sar
sti
dec
cmp
cmpsb
xchg
xor
ret
inc
test
test
fs
jmp
adc
fldenv
in
mov
add
sbb
jmp
jo
js
scas
or
call
call
out
in
outsb
mov
test
inc
or
aaa
sbb
mov
dec
arpl
pop
mov
in
stos
push
push
pop
rdpmc
dec
sub
xchg
mov
jmp
outsl
or
xchg
lods
push
orb
loop
xchg
lea
mov
es
mov
mov
or
mov
dec
inc
repz
rclb
adc
sbb
in
and
xchg
add
pop
push
push
je
scas
mov
pop
xchg
push
pop
test
or
push
mov
and
leave
adc
jne
sbb
repz
out
mov
lds
das
mov
mov
jns
in
pop
xchg
stos
div
jle
ret
cmp
pop
or
data16
ss
adc
xchg
adc
and
and
push
popf
or
jo
push
mov
ja
mov
repnz
cmp
jmp
in
cld
cmp
xchg
mov
xchg
shlb
mov
push
loop
jns
add
sbb
adc
add
hlt
adc
or
jae
lods
xlat
cmpsl
add
xchg
add
xor
sub
mov
out
xor
arpl
lea
lcall
popa
ja
or
cmc
addr16
mov
xchg
pop
out
aad
mov
mov
sbb
jb
aam
and
sbb
dec
sti
ljmp
xor
data16
or
aad
stos
jns
mov
mov
movsb
jo
hlt
cmp
enter
add
push
adc
mov
scas
cs
jnp
sub
mov
sub
lds
negb
sub
sbb
add
outsb
xchg
test
cmpsl
push
mov
sub
cltd
shlb
push
or
out
pop
cmp
daa
fucomip
mov
lds
push
imul
xchg
cmc
imul
or
iret
push
scas
mov
pop
mov
mov
add
out
inc
mov
xor
inc
xor
lds
out
enter
adcl
data16
je
xor
sub
fidivrl
lea
pusha
lods
test
xlat
fmuls
push
pushf
inc
jp
adc
call
pusha
add
or
xor
and
dec
in
lods
sbb
dec
sbb
bound
pop
cltd
xor
cltd
push
lods
icebp
cmpsb
mov
mov
and
sahf
push
sbb
repnz
xchg
popf
sbb
inc
jbe
inc
push
aas
jo
inc
add
jo
sbb
out
ds
mov
mov
mov
test
scas
mov
pop
xchg
fists
test
sbb
je
push
inc
scas
mov
mov
mov
test
jnp
lret
push
sahf
fdivs
aad
stc
mov
xor
scas
andl
out
xor
jns
js
xchg
jge
pop
xor
cmp
xor
mov
aad
jmp
dec
inc
dec
dec
fst
mov
out
and
rcr
mov
dec
mov
pop
pop
jno
cld
and
aas
ds
lret
dec
jno
cld
sti
pop
mov
int
enter
mov
ljmp
push
sbbb
pop
lea
adc
pop
push
mov
into
jb
and
pop
test
push
inc
fwait
fwait
push
mov
test
leave
cmpsl
aad
xchg
andl
out
xchg
mov
dec
dec
mov
loopne
mov
push
inc
push
addr16
sub
adc
repz
mov
aam
sahf
mov
xlat
mov
dec
scas
mov
inc
adc
lahf
push
mov
sti
sbb
pop
insb
inc
in
cmp
rolb
int
dec
enter
push
mov
mov
jno
pop
scas
stc
dec
cmp
repnz
cmc
xchg
lods
sbb
std
mov
pop
jae
push
fcos
mov
push
fildll
or
mov
dec
and
and
mov
js
sbb
jmp
addb
pushf
bnd
or
pop
rorl
pop
sbb
inc
jg
cmp
mov
mov
mov
call
sbb
sub
scas
xchg
repnz
mov
iret
out
dec
push
sub
pusha
in
pop
cmp
mov
mov
mov
leave
gs
push
ds
adc
fnstcw
stos
imul
movsb
hlt
pop
insl
imul
lret
cmp
jnp
data16
xchg
fcomip
stos
dec
and
insb
enter
mov
pop
mov
sahf
in
scas
xorb
aad
pop
xor
addr16
dec
pop
sbb
in
sbb
jnp
pop
aad
xchg
cs
cmp
xor
test
or
je
adc
aas
push
mov
and
loope
mov
or
and
pop
lahf
les
iret
inc
sub
push
call
in
jns
data16
orl
push
loopne
fcoml
arpl
adc
add
mov
cli
pop
scas
aam
xchg
xchg
imul
cs
cmc
sarb
dec
push
jo
and
in
stos
adcb
dec
imul
stos
jns
mov
pushf
sbb
or
push
push
jle
pop
pusha
je
mov
stos
push
icebp
or
decb
sbb
arpl
mov
or
fadds
mov
or
insl
call
jp
arpl
add
fisubs
arpl
sbb
bound
std
add
pushf
push
test
scas
cmp
divb
push
jecxz
cmovp
or
sub
nop
inc
jge
nop
repnz
dec
sub
in
jmp
mov
xchg
ret
fidivl
xor
mov
pop
mov
inc
jnp
push
jmp
fisubl
sbb
jl
std
pop
pop
cmpsl
or
sbb
data16
dec
and
fnstenv
std
xlat
lcall
aaa
mov
push
fs
aam
adc
movsl
mov
or
pop
dec
enter
pop
jg
std
sub
push
inc
dec
cmp
jae
cs
jns
pop
mov
and
dec
or
fmull
mov
std
test
incb
cli
adc
pushf
dec
rcr
das
cmp
movsb
dec
jecxz
mov
xor
lret
pop
push
mov
outsb
pop
pop
in
xlat
xchg
sarb
enter
cmp
xchg
mov
out
lahf
cltd
sub
or
test
adc
inc
orl
pop
iret
and
divl
cmp
push
jg
xor
lahf
repz
lods
push
dec
imul
or
pop
jp
jbe
sub
idivb
cmp
xchg
flds
mov
mov
xchg
in
jae
hlt
pop
ja
aad
sahf
frstor
push
popa
or
aam
fcompl
loop
xchg
jle
rcl
jbe
sbb
movsl
gs
pop
cltd
dec
pushf
push
cwtl
in
mov
sar
mov
xor
lcall
in
add
jb
fs
mov
push
lods
jle
ds
icebp
lret
sbb
int3
push
add
mov
mov
fmuls
xor
xchg
je
pop
adc
stc
sub
leave
fcompl
sbb
dec
push
mov
push
jne
inc
xor
cmp
lock
xor
call
jp
mov
add
fsub
mov
lods
enter
xchg
lds
inc
push
loope
clc
add
jns
dec
test
int3
aad
mov
imul
sub
filds
mov
fs
outsb
out
std
sahf
sub
test
or
and
xchg
mov
jecxz
mov
shrb
pusha
js
adc
ja
mov
pop
aam
frstor
xchg
popf
jb
adc
push
pop
pop
popa
insl
enter
mov
mov
or
in
incb
int3
ret
dec
xchg
push
mov
scas
push
adc
sbbb
adc
push
mov
arpl
leave
outsb
dec
das
lret
pop
ror
and
pop
enter
dec
hlt
outsb
xchg
and
jne
inc
sub
out
push
xor
xchg
mov
pushf
mov
fidivs
jle,pn
jbe
cmp
stos
cmp
jle
mov
fs
push
test
out
push
xor
aam
nop
xchg
shll
loope
dec
fcom
sbb
sbb
dec
pop
test
pop
xchg
xchg
loopne
mov
std
or
xlat
mov
scas
or
sbb
mov
mov
jmp
push
xor
rclb
fwait
rcrb
sub
je
addr16
dec
adc
test
arpl
pop
cwtl
aad
ret
sbb
push
or
mov
add
gs
pusha
xor
mov
adcl
es
push
adc
orl
sub
decl
in
icebp
jecxz
jecxz
jle
ret
icebp
mov
mov
sbb
enter
mov
add
pop
mov
movsb
movsb
in
pushf
imulb
testl
andb
subb
add
test
es
and
dec
inc
cmpsl
movsl
lea
mov
xlat
adcb
outsb
std
cmp
sub
rorl
cwtl
sbb
or
out
dec
jae,pt
rorl
xor
loopne
push
fwait
sbb
xchg
stc
sub
cmpsb
inc
cmp
and
inc
sub
inc
mov
sbbl
cmp
or
test
addb
imull
scas
and
scas
or
mov
mov
outsb
adc
mov
mov
jmp
pop
xlat
xor
lds
xor
pop
mov
dec
add
in
int3
mov
pushf
and
pop
orl
clc
insb
add
js
es
fstpl
lret
iret
xor
xor
rcll
push
pusha
dec
mov
pop
cmpsl
pop
movsl
push
mov
mov
call
aaa
out
mov
jnp
jmp
repz
inc
and
cwtl
lret
or
mov
lcall
push
sbb
xor
jns
out
dec
add
add
insb
push
enter
push
adc
adc
sbb
dec
pop
es
push
jmp
sub
outsb
movsl
rcr
dec
or
push
inc
stc
mov
dec
fistpl
mov
adc
push
mov
imul
lods
inc
adc
sti
test
push
rcrl
aas
mov
repz
add
jne
iret
ret
sbb
or
enter
roll
test
pop
dec
inc
push
imul
adc
xchg
xchg
mov
inc
cmpb
out
push
inc
pop
imull
push
jno
insl
inc
mov
pop
cs
lods
insb
lcall
rcll
inc
incl
xchg
hlt
data16
bound
jnp
push
fiadds
cltd
or
xor
iret
jecxz
sbb
and
xor
dec
popa
dec
or
mulb
out
xchg
lods
test
xor
bound
mov
cld
dec
pusha
nop
std
hlt
cmp
push
mov
pushf
fld
push
cltd
insl
mov
adc
fs
jns
ja
xchg
cltd
add
cld
std
sub
repz
sbb
pop
test
out
aad
mov
mov
mov
nop
xchg
adc
insl
aaa
xlat
arpl
push
and
xor
addr16
shrl
mov
push
jne
js
push
aad
sbb
xchg
jecxz
pop
jecxz
and
or
pop
mov
lock
das
shlb
ja
aaa
jno
mov
divl
iret
add
nop
and
push
aaa
xlat
jmp
cmp
stos
jo
sub
jl
lds
pop
and
xchg
or
icebp
in
cmp
mov
mov
jno
popa
jae
fiadds
in
jnp
mov
xchg
mov
test
loop
ja
mov
sbb
add
shll
mov
mov
sbb
inc
jg
pushf
incl
clc
mov
movsb
inc
ret
pusha
xchg
ss
sarb
popa
fmuls
in
push
xchg
out
sub
mov
daa
jo
cwtl
xchg
aad
fs
adc
adc
addr16
jmp
ds
push
and
cmc
add
mov
xor
jmp
into
push
cs
stos
sahf
cmp
and
lea
shl
test
ret
mov
mov
adc
xchg
loop
mov
mov
ret
mov
inc
iret
shr
bound
add
ror
cli
ror
jmp
cmc
mov
fdivr
cltd
pushf
cmp
out
in
push
lds
add
jmp
mov
inc
pushf
sub
aam
mov
adcl
je
sub
mov
testb
int
adc
je
cmp
dec
scas
and
xchg
inc
gs
lea
xchg
nop
leave
xor
popf
loopne
cs
sub
repz
rclb
stc
les
dec
mov
and
sbb
ret
push
jo
push
mov
dec
pop
std
adc
adc
dec
aas
lea
das
enter
mov
cmp
lods
dec
push
repnz
xchg
mov
sub
repnz
in
push
push
lea
stc
push
pusha
lds
or
stos
xchg
inc
mov
inc
sahf
dec
push
data16
pop
cmp
jge
test
adc
test
xor
out
sarb
dec
dec
sbb
cmp
pop
popa
jae
lcall
movsl
vpunpckhqdq
pop
xor
adc
js
mov
add
lds
adcb
adc
fdivr
dec
jg
cmp
mov
pop
cmpsb
mov
stos
addr16
int
jg
or
ret
ficoms
in
xchg
inc
cwtl
fwait
sahf
test
lods
jecxz
bound
pop
jno
or
sbb
mov
int3
dec
sub
das
cwtl
mov
dec
movsl
or
cmp
stos
test
pop
jo
repnz
mov
cwtl
movsl
fildl
jmp
imul
push
adc
aad
push
aad
push
iret
mov
out
sarl
dec
into
jb
add
aas
cmc
dec
shlb
pop
xchg
cld
jae
or
add
insb
pop
out
and
js
les
imul
or
pushl
jp
ljmp
push
fldcw
mov
dec
cmpsb
mov
out
mov
dec
adc
sub
stos
test
cmpsl
dec
push
cli
pop
mov
mov
mov
adc
jecxz
xlat
xchg
pop
stos
jo
add
mov
lock
icebp
dec
and
push
outsb
stc
arpl
cmp
mov
mov
daa
jecxz
insl
and
sub
les
cmc
scas
xchg
cmc
adc
fwait
jb
pop
push
call
push
adc
add
xchg
xchg
mov
jge
inc
dec
iret
push
cmp
icebp
in
popl
aaa
out
rclb
mov
out
lea
cmp
adc
mov
push
xlat
into
sti
in
jmp
add
test
jns
xor
lods
and
pop
ret
inc
sub
xlat
pop
lods
or
sub
insl
mov
fildll
fwait
popf
nop
jae
inc
dec
xchg
mov
clc
fistps
jle
cs
mov
adcb
jecxz
xchg
std
arpl
fsubl
fmull
imulb
movsb
fdivs
test
test
jg
call
aad
gs
repz
pop
fistps
cwtl
xor
ss
push
cmp
movsb
mov
push
out
inc
pushl
and
mov
jns
fstpl
movl
cwtl
mov
inc
cmp
push
fwait
jno
mov
sbb
or
stos
icebp
pop
dec
out
push
loopne
sbb
sub
cmp
mov
mov
lcall
dec
stos
pop
cmp
push
mov
jnp
fiaddl
dec
push
das
dec
cmc
mov
lea
mov
rcll
adc
rcrl
data16
mov
addr16
ss
arpl
fucomp
test
or
jecxz
xor
jmp
popa
call
mov
sar
imul
fistl
pop
or
in
pop
cld
add
sub
push
pop
push
mov
int
and
add
in
adc
mov
nopl
out
ret
mov
sbb
jg
stc
push
xor
jno
sahf
shl
mov
xor
push
sub
and
add
mov
outsb
insb
loop
out
inc
fildll
jge,pt
mov
rcl
adc
add
sub
xchg
or
insb
jmp
jae
mov
adc
cli
fistpll
jge
movsb
rcrl
out
pop
aad
cmp
dec
push
and
jmp
xor
mov
jno
xor
push
mov
or
jmp
cmpsb
scas
repnz
nop
mov
xchg
push
out
imul
jo
sbb
and
pop
xlat
fistps
loop
pop
xor
in
inc
pusha
fimull
frstor
xor
inc
or
addr16
shrb
fwait
or
jns
pop
cwtl
rolb
out
mov
shll
add
outsl
shl
xchg
or
add
xor
push
sarl
sbb
xchg
daa
in
push
mov
cltd
jne
cmpb
dec
jns
and
aas
push
jns
mov
rcrl
xchg
mov
sbb
jl
outsb
shlb
xor
aaa
mov
imul
xchg
add
lret
cmp
jne
loop
mov
mov
xchg
dec
sub
jo
es
cmp
mov
mov
nop
movsl
mov
inc
or
cmp
test
sahf
cmp
fidivrs
jl
sbb
sbb
xchg
daa
setne
sub
mov
xchg
rclb
sbb
xchg
iret
das
xor
lahf
bound
jnp
push
add
ret
aad
sbb
xchg
pop
adc
lahf
jg
fiaddl
jecxz
nop
das
and
xor
in
push
add
cli
jmp
cmp
pop
sbb
stc
cs
and
test
adc
inc
loope
dec
sbb
add
movsb
rcr
jge
mov
push
or
cmp
test
jg
cmc
clc
int3
cmpsb
sub
insl
push
test
lock
cwtl
inc
mov
mov
cmc
adc
mov
les
xchg
das
outsb
mov
subl
pop
xchg
loope
pop
mov
jge
decb
sahf
call
add
js
sub
adc
popf
cwtl
arpl
xor
shl
cmp
xchg
mov
out
cmp
test
push
lcall
outsb
add
fsubrs
mov
shll
or
loope
jge
fidivl
mov
cmp
cmp
fistpl
shrl
add
jg
dec
mov
test
mov
cmp
push
fldcw
push
subb
mov
ja
xchg
jg
xchg
ror
lret
jb
cmc
dec
mov
int
std
ss
lods
xchg
push
pop
fnsave
idivl
ljmp
les
sub
ret
cmp
flds
call
xchg
inc
psrlq
and
fs
iret
cmp
jns
ss
add
sarb
das
cltd
xchg
test
sbb
mov
daa
shrl
mov
push
jp
sub
lock
mov
lock
xchg
cmp
je
sub
dec
cmc
repnz
ljmp
dec
mov
xor
jge
fwait
xor
loope
mov
add
cltd
and
pop
stos
outsl
movsl
movsb
inc
movsb
cmp
mov
gs
in
jmp
rcr
push
mov
dec
jno
mov
fimull
inc
out
out
rorb
mov
xor
dec
add
gs
adc
jnp
in
and
adc
test
mov
repnz
test
pop
popf
out
icebp
mov
addr16
adc
pop
jno
mov
out
and
lods
insb
push
fwait
aas
test
jo
movsl
mov
mov
lcall
inc
arpl
sbb
dec
and
sbb
xor
fldenv
push
and
cmp
pop
sahf
testb
les
ljmp
call
and
adcl
dec
cmpsl
dec
inc
in
je
nopl
pop
xchg
lods
ret
jno
rclb
cwtl
enter
sbbl
cmp
xorb
ljmp
jne
push
sahf
cmp
lcall
mov
nop
daa
pop
ja
inc
in
mov
and
adc
pop
jnp
insb
ljmp
push
sub
inc
and
mov
mov
test
cmp
mov
xor
arpl
je
lods
inc
loop
shrl
adc
pop
loopne
mov
sbb
xor
mov
or
std
push
in
fiaddl
push
mov
sub
ljmp
jbe
push
sbb
sbb
aas
insl
test
and
mov
adc
out
sbb
dec
mov
repnz
js
sub
orl
ljmp
and
stc
out
outsb
cld
or
push
stos
cmp
or
ret
iret
imul
pushl
outsb
lahf
adc
sub
stc
dec
cwtl
push
mov
cmc
xchg
jle
stos
xchg
push
push
inc
dec
out
mov
cmpsb
pop
push
sub
cltd
insl
sub
loopne
int3
inc
shr
popa
out
cmpsl
loop
fcomps
pop
cmp
pop
das
fcomp
jns
and
and
in
inc
jbe
movsl
loope
xchg
aam
sub
cmp
je
or
jne
push
daa
movsb
jno
sbb
into
mov
dec
and
inc
call
pop
and
cmpsl
fcomip
adc
fwait
outsb
jbe
mov
movsl
xchg
push
shrb
cli
aas
push
decb
je
mov
mov
and
frstor
adc
inc
adc
out
sub
into
cmpsl
jmp
mov
add
fldcw
popa
inc
jne
jb
or
insb
jo
pop
out
adc
je
cltd
mov
pop
lods
incb
cmp
mov
scas
mov
aam
cmp
xchg
cmp
lret
mov
mov
push
js
pop
adc
lock
or
pushf
movl
shl
fwait
xor
icebp
imulb
das
push
cmp
pop
inc
movsl
mov
mov
je
pushf
nop
and
add
push
cwtl
adc
add
xchg
iret
push
call
mov
fldt
lret
xchg
hlt
mov
neg
sarb
js
sub
ja
mov
test
scas
jg
mov
jl
push
xchg
push
rolb
in
mov
sub
movsl
dec
in
call
inc
repz
adc
test
pop
mov
push
mov
and
lcall
and
shrb
imull
lret
xlat
ror
and
jno
clc
push
stos
jns
push
hlt
aad
int3
ljmp
and
push
decl
aad
dec
gs
xorb
test
xorl
xor
push
jle
jo
sarb
cmp
xor
jmp
mov
jl
xor
fsubl
mov
sbb
sub
dec
xlat
leave
int
push
push
add
mov
cmc
into
out
std
inc
scas
dec
enter
imul
mov
sahf
out
outsb
outsl
add
adc
mov
jp
call
or
mov
sbb
mov
movsl
lock
arpl
pop
out
clc
sub
inc
add
daa
adc
sub
sbb
adc
jmp
push
ja
xchg
mov
xchg
data16
pop
push
cs
mov
mov
out
test
xchg
push
cmp
jmp
jnp
mov
inc
mov
pop
ss
hlt
int3
xchg
inc
push
dec
or
repnz
pop
in
xchg
faddl
je
adc
mov
xchg
fmul
jle
mov
inc
jecxz
jne
add
out
and
sarl
push
add
cli
aaa
cmp
sub
mov
push
cwtl
roll
xor
loop
movsb
jmp
in
pop
inc
push
mov
ljmp
cmp
or
aas
addr16
sub
jge
mov
int3
nop
ja
cmc
cmp
xchg
mov
sub
into
pop
cld
mov
stc
inc
loopne
push
cwtl
pop
add
xchg
xchg
cmp
xor
popf
sti
insl
sahf
and
out
mov
jmp
xchg
insb
lea
loop
jno
pop
push
sarb
daa
scas
ret
jl
add
sub
mov
push
cld
inc
mov
out
cs
jl
std
pop
std
loope
push
sarl
adc
div
test
sbb
xor
dec
sbb
add
hlt
cli
jae
mov
mov
cli
sub
dec
movsb
loop
xchg
sbb
sub
mov
je,pn
inc
sbb
sbb
sbb
aas
sub
xor
push
and
std
mov
es
dec
xchg
fldl
hlt
lock
push
lret
imul
mov
mov
pop
cmpsl
fsubrs
inc
inc
jp
lods
inc
insb
mov
cltd
daa
xlat
mov
or
popf
cmp
jne
aaa
cs
subl
stos
arpl
jmp
cmp
lahf
stc
inc
punpcklwd
inc
inc
mov
dec
imul
pop
add
lcall
call
cmpl
lods
cld
dec
push
cli
sub
xor
dec
and
popa
icebp
testl
sti
xor
icebp
mov
adc
push
in
pop
movsb
mov
pusha
cmp
mov
adc
setp
inc
lahf
lods
mov
xlat
xchg
scas
jbe
enter
add
das
call
popa
xchg
xchg
lcall
xor
test
testl
or
scas
sub
cmc
push
and
push
sbb
scas
mov
faddl
mov
pushf
mov
lret
jmp
jle
call
jb
inc
jle
mov
mov
jecxz
jecxz
cs
add
iret
dec
test
mov
jae
or
push
sbb
add
push
lea
imull
mov
inc
in
enter
add
inc
stos
push
loopne
loope
xchg
ret
rorb
rcl
xor
inc
stc
jp
leave
stos
ljmp
push
dec
jle
and
jg
xchg
dec
fists
mov
lahf
ret
jbe
pop
cmp
add
and
outsb
mov
lahf
cmpsl
dec
popf
call
ffree
jp
popa
add
push
jp
mov
and
push
lock
lock
cmpsl
dec
lock
shrb
push
mov
sbb
sbb
fsubl
out
cmp
or
mov
sbb
int3
mov
imul
lahf
lcall
xchg
pop
mov
dec
sub
jmp
mov
test
addr16
push
clc
inc
not
mov
jo
sbb
out
in
and
jns
xor
mov
scas
call
xchg
in
insl
mov
out
out
flds
jnp
and
pop
mov
adc
adc
cmp
imul
popf
push
mov
fidivrl
mov
aas
gs
les
sbb
mov
or
les
sbb
sbb
mov
mov
pop
repnz
mov
pop
push
loope
push
lret
add
jnp
fbstp
ljmp
scas
adc
pop
mov
popf
fcoms
daa
mov
push
insl
adc
push
xchg
push
push
mov
mov
out
mov
repz
jae
in
fwait
push
sub
lock
sahf
dec
inc
inc
sarl
cltd
and
in
movsb
aas
mov
movsb
mov
xlat
into
shll
pushf
sarl
adc
out
ja
popf
xchg
out
into
pop
mov
daa
imul
add
pop
inc
js
cmc
je
shrl
dec
push
int3
shlb
in
ljmp
loope
popa
popa
xor
or
add
or
out
push
fildll
sarl
inc
pop
dec
ja
mov
jae
lcall
test
push
insl
xor
jg
adc
add
sbb
mov
cld
inc
xlat
inc
adc
int
imull
mull
pop
lea
mov
mov
andl
pop
ljmp
mov
mov
stc
xchg
or
in
cli
xlat
xchg
xor
fcmove
mov
pop
std
and
mov
mov
mov
mov
pop
int
pop
and
xchg
ret
movsb
in
orb
and
mov
sbb
sbb
jecxz
in
mov
sub
xchg
dec
fisttps
or
pop
or
or
rol
shlb
adcl
mov
movsl
pusha
xchg
xlat
adc
es
pop
or
pop
and
xor
rolb
std
and
mov
xor
cmp
jns
push
pop
scas
lahf
jmp
and
iret
icebp
mov
xchg
xchg
lods
dec
sub
add
fdivs
mov
push
and
mov
fbstp
inc
mov
imull
in
mov
xchg
and
nop
fistl
push
xchg
inc
mov
or
jbe
aas
sahf
loopne
dec
idiv
adcl
pushf
adc
xchg
add
sbb
pop
mov
loopw
sub
fidivl
divb
adc
call
xlat
and
mov
sbb
push
fidivs
or
xor
pop
daa
or
dec
or
shl
sub
jge
jb
add
rorl
fisttps
xchg
fmuls
jg
fidivl
inc
dec
aad
stc
pop
lds
inc
cmp
jmp
lods
sbb
aaa
cmp
loopne
inc
push
cmpsl
inc
mov
sub
mov
xchg
movsb
push
fwait
pop
pop
ss
stos
pop
push
mov
scas
fsubrp
jo
rorb
push
hlt
testl
cld
je
iret
test
aam
push
rcll
xchg
xchg
mov
cld
sbbb
mov
inc
mov
repnz
pop
adc
std
push
mov
xor
xchg
pop
cs
pop
mov
sbb
dec
fldcw
jg
das
out
es
js
mov
stc
inc
cmp
addr16
test
ret
lea
xor
scas
cwtl
scas
arpl
push
popf
mov
std
inc
jb
xor
jb
lret
mov
or
jne
shlb
enter
popf
sub
ljmp
sbb
mov
out
xchg
sarb
je
mov
mov
aas
adc
rcrb
add
ret
adc
dec
ja
jb
xchg
aad
js
fcomps
add
push
sub
inc
notl
adc
push
loope
js
lcall
or
rcrb
ja
mov
or
jp
es
xchg
mov
aam
lret
jno
and
insl
push
mov
xchg
jg
enter
fsubrs
pop
inc
cmc
mov
mov
or
inc
or
stos
outsl
out
sar
sbb
iret
sti
sbb
xchg
int
cwtl
test
mov
dec
dec
ja
scas
jae
repz
subb
shl
lods
or
sub
dec
daa
push
xor
pop
pop
outsl
dec
push
aam
cmp
cli
loope
pop
jne
sbb
stos
cwtl
lods
leave
push
mov
sub
lret
add
inc
pop
sahf
lahf
pushf
adc
dec
imul
test
sub
xor
mov
test
sbb
call
xlat
push
movsl
adc
rcrb
and
arpl
add
jp
xchg
or
mov
dec
icebp
add
jecxz
nop
sub
repnz
push
outsl
inc
aaa
int3
jmp
test
jno
arpl
mov
scas
insl
and
mov
aas
repnz
jb
shll
dec
dec
notl
pop
inc
mov
les
mov
pop
icebp
adc
xor
xor
loop
inc
cli
cltd
push
or
cli
mov
add
push
test
add
add
sub
and
and
push
cmpsl
or
ret
adc
or
in
es
sub
xor
lods
pop
jae
shrb
sbb
lcall
iret
popa
ficompl
push
jmp
divl
sahf
add
aas
pushf
adc
fimuls
or
xchg
pushf
mov
ret
das
orb
mov
dec
mov
push
test
mov
fcomps
fdivrl
add
mov
iret
lret
add
cmp
insb
mov
rcrl
mov
fisubrs
xchg
sub
cmp
jle
fisttps
push
mov
sahf
and
mov
or
in
sbb
in
xchg
test
out
icebp
add
test
xor
xchg
loope
lods
cmp
es
adc
aaa
xchg
cmp
jo
inc
in
mov
xor
test
jbe
enter
mov
jb
movlps
cmpsb
add
mov
fsubl
mov
dec
call
roll
mov
or
xchg
inc
stos
sub
jmp
test
std
outsl
loop
fmuls
pop
stc
xchg
and
icebp
jne
push
pop
pop
xchg
dec
and
lock
sbb
or
sahf
add
shrl
jmp
out
jo
arpl
sub
sahf
add
sahf
gs
loopne
fildl
jecxz
data16
loope
int3
icebp
add
adc
mov
incb
dec
loop
pushf
seta
movsl
scas
dec
outsl
cwtl
inc
mov
mov
pop
cltd
xchg
dec
mov
sarl
pop
mov
pushf
jmp
lods
dec
jmp
push
or
pop
ja
lcall
fldl
mov
xchg
add
push
imul
adc
pushf
mov
adcl
jmp
stos
mov
pop
jbe
lret
push
mov
int3
push
movsb
loopne
popa
mov
out
lock
and
mov
adc
or
xor
mov
xchg
cwtl
jae
mov
in
adc
dec
sbb
insb
and
xor
pop
insl
es
lahf
push
test
sti
rcl
adc
xchg
das
ljmp
sub
insl
pop
cmp
fisubrs
rcrb
popf
push
mov
test
push
push
and
and
dec
ret
push
xor
xor
aaa
push
out
mov
lods
adcb
repnz
out
clc
insb
ja
cmp
outsl
jns
or
mov
imul
mov
fdivs
adc
data16
nop
pop
rcr
rcrb
mov
arpl
fs
addr16
push
xor
xlat
mov
xchg
addr16
sbb
cmpsb
cmp
mov
adc
add
lods
orl
pop
fwait
add
loopne
ja
les
push
jmp
cmp
iret
xchg
les
pop
stos
sub
add
xlat
rclb
pop
dec
jecxz
push
cmp
insl
enter
or
dec
and
mov
pop
out
xchg
pushl
mov
mov
adc
mov
add
pop
xchg
cmp
lods
daa
or
ss
mov
mov
inc
adc
dec
pop
inc
adc
repnz
test
mov
lea
inc
int3
cmpsl
xchg
sbb
mov
aam
sti
inc
sbb
pop
and
popf
or
add
xlat
mov
test
fldl
and
mov
adc
std
andl
cmp
adc
pop
jo
test
mov
xchg
scas
popf
push
inc
or
bound
les
out
loop
sbb
pop
mov
mov
int
or
mov
enter
enter
and
jbe
mov
push
fists
leavew
dec
lahf
xor
mov
cmp
sbb
or
fcmovbe
pop
sbb
repz
xlat
into
fsubrs
xor
out
daa
fidivrs
pop
xchg
pop
sub
push
loopne
jmp
out
ljmp
fstpl
jmp
push
add
add
xor
push
insl
add
cwtl
dec
sub
ficoml
jno
mov
sub
adc
xchg
notl
inc
ret
loope
mov
or
xchg
cmpsb
jecxz
xlat
xchg
inc
jae
xchg
add
imul
jbe
ljmp
and
push
adc
adc
int3
loope
pop
sti
std
lcall
int
inc
insl
push
pop
adc
scas
clc
movsb
cmpsb
cmpsl
test
std
jbe
push
movsb
mov
jns
adc
loopne
fists
xchg
lds
adc
jp
dec
daa
adc
dec
cli
lea
sub
loope
les
and
cwtl
jge
mov
xchg
push
xchg
hlt
in
lock
inc
cmpsb
sub
cli
ss
and
je
out
scas
nop
lcall
and
lods
ret
mov
repnz
insb
roll
sahf
fiadds
inc
mov
push
and
pusha
push
sbb
mov
jno
stos
lock
jne
aaa
loopne
aam
sahf
movsl
and
xchg
cmp
pop
leave
movsb
jecxz
or
dec
out
cli
mov
adc
sub
outsb
sti
fcmovb
inc
pop
aad
in
jecxz
shl
adc
pop
or
xchg
mov
push
xor
cmp
add
sahf
sub
add
jbe
xor
inc
outsl
and
or
lahf
pop
outsl
inc
push
jl
xor
addb
cmp
daa
mov
jl
inc
jbe
lret
std
es
fsts
mov
mov
jge
add
fsts
xchg
fdivrs
mov
in
dec
jne
xchg
adcl
iret
aaa
hlt
repz
sub
inc
dec
jno
inc
nop
xchg
outsl
scas
jmp
sti
sti
les
scas
sti
jecxz,pn
inc
xchg
out
xrelease
sub
icebp
test
into
bsf
rorl
xchg
int3
pop
and
xor
or
test
dec
out
out
into
loope
out
movsl
jl
pop
ss
insb
jecxz
and
xor
push
mov
and
pop
fwait
sub
data16
roll
adc
out
fisubrl
insl
std
mov
push
xchg
daa
xor
jae
cmp
push
int3
mov
gs
jbe
dec
mov
out
mov
xchg
test
movsl
sub
adc
shl
jmp
test
and
lret
cmpsl
cmp
aas
jne
and
in
loopne
sub
sbb
rolb
mov
scas
push
sub
fnstsw
pmovmskb
jmp
xlat
mov
sbb
inc
cld
or
shlb
push
cmpsl
mov
sub
outsb
cmpsb
popf
lahf
pop
fisubrl
jb
jg
call
js
insb
mov
or
or
in
xchg
pop
aaa
xlat
push
cmp
mov
cld
iret
sbb
cmp
mov
rolb
and
adc
adc
xor
into
scas
lcall
add
xor
add
inc
sahf
bound
shlb
cmovge
fistpll
out
push
push
xlat
addl
divb
inc
cmpsl
push
dec
dec
push
pop
pop
dec
jbe
mov
test
mov
pop
int
and
xchg
fmuls
sbb
jecxz
mov
lea
cld
mov
js
cmp
ret
movsb
mov
fidivl
jo
adc
dec
inc
cmp
sarb
mov
js
call
lret
sbb
bound
jnp
iret
sub
cmp
jl
insb
xor
xchg
mov
push
jb
pusha
xor
dec
dec
insb
cld
jge
inc
mov
mov
jnp
dec
ret
cli
sti
cmc
push
cwtl
adcl
cmp
pop
lds
lock
ljmp
push
loop
stc
cmpsl
mov
sub
stos
mov
add
jg
pop
test
mov
xchg
std
ss
push
mov
pop
ds
mov
adc
movsb
pop
xchg
inc
xor
push
or
aad
jo,pt
adcb
imul
push
xchg
test
jecxz
mov
inc
mov
scas
ret
cmp
jno
rorl
gs
lret
or
imul
mov
sub
into
adc
xor
dec
sahf
fs
push
or
xchg
mov
sbb
andl
push
ds
enter
push
fstp
dec
stc
sbb
testl
jbe
cld
out
mov
or
and
pushf
jl
cld
and
jp
cli
scas
jnp
insb
push
pop
and
pop
sbb
cli
aad
loopne
enter
add
mov
in
cli
lods
rorl
cltd
lcall
jmp
scas
fstps
adc
xlat
loop
fidivl
xlat
mov
xor
xor
sahf
or
dec
out
xor
icebp
into
stc
clc
push
mov
nop
ljmp
es
push
sti
movsb
xchg
or
ss
xchg
scas
jge
adc
xor
test
pop
mov
in
outsb
xor
xchg
pop
jg
inc
out
mov
mov
or
pop
test
cmp
movlps
mov
add
push
cld
ret
sbb
loope
stos
push
stos
add
and
mov
in
mov
jmp
adc
cmc
vpor
or
xlat
lcall
andb
pop
ds
test
inc
and
jmp
mov
int3
xor
pop
pushf
xor
push
xchg
hlt
std
dec
dec
imul
int
out
jp
mov
cmc
aaa
fldpi
mov
fildll
dec
lret
mov
or
push
pop
pop
pop
nop
es
out
fnstsw
lret
add
dec
lcall
add
das
jo
nop
cmp
std
adc
lea
pop
pop
lcall
xor
push
and
inc
in
add
in
fs
scas
adc
jo
cmp
sbb
xor
jle
xor
popf
sub
filds
lods
adc
jmp
mov
aas
daa
and
fistpll
test
bnd
clc
or
mov
call
mov
fwait
push
or
jo
cmp
and
push
xchg
dec
adc
fildll
lea
pop
imul
call
lahf
out
sub
mov
sub
sbb
cmp
cmp
mov
shlb
adcl
push
int
or
gs
jae
cmp
fldenv
pushf
icebp
popf
pushf
jge
sub
or
push
mov
dec
and
dec
lahf
add
mov
adc
out
sbb
cmp
loope
mov
jmp
dec
adcl
xlat
cltd
jb
xchg
adc
cmpsb
cmp
mov
dec
mov
pop
arpl
loopne
xchg
in
inc
gs
cmp
adc
pop
stos
rcrl
gs
mov
fidivrl
add
or
push
jno
cmc
mov
pop
jge
shl
outsl
ret
scas
push
addr16
xor
xchg
es
sub
jle
adc
stos
sub
cmp
xlat
and
add
pop
mov
in
inc
xchg
sbbl
rclb
dec
cmp
mov
cld
movsb
lock
call
int3
lret
mov
call
out
sub
push
or
fidivs
pop
imul
xor
and
insb
icebp
jb
jge,pn
ficoml
pop
lods
add
enter
push
fisttpl
push
stos
movsw
xlat
jp
fsubl
movsb
mov
cmp
int3
shll
sub
imul
out
jns,pt
daa
xorl
leave
or
xchg
or
jmp
imul
sbbl
repz
lea
cltd
leave
xchg
cmpsl
jne
push
dec
cltd
std
mov
movsb
sbb
sbb
daa
push
jle
aaa
insb
pop
pop
fbld
adc
sbb
into
adc
mov
jge
repz
nop
inc
push
cmp
popa
popa
jl
xchg
inc
cld
call
push
int
or
cmc
push
jmp
scas
cli
mov
js
ja
movsl
ret
mov
outsb
pop
mov
int3
pop
jp
fdivrl
ja
outsl
sbb
shll
je
icebp
jno
add
loope
fisttps
sub
push
xchg
xor
sti
inc
adc
xlat
jo
jge
cmp
push
mov
or
out
lahf
cmp
cmc
fdivs
xor
pop
xchg
mov
mov
push
and
stos
repz
adc
movsl
rclb
adc
push
in
inc
js
fwait
inc
aad
mov
js
mov
aaa
pop
jl
in
sets
mov
pop
cwtl
aas
fmull
in
outsl
or
inc
das
fwait
inc
push
mov
cmp
jb
cmpsb
adc
inc
or
sub
pushf
je
xchg
mov
lock
call
sub
dec
xchg
lcall
iret
ss
xor
mov
enter
lret
lea
xchg
mov
fsubl
negl
fstpl
lods
int3
adc
sub
in
leave
pop
or
call
and
leave
push
mov
pusha
xor
outsl
and
cmc
in
adc
mov
dec
jno
inc
mov
enter
cmpsb
xchg
lret
mov
lret
std
clc
push
rcrb
lock
sub
jns
jae
cmpsl
addr16
dec
fidivrl
dec
repz
leave
xchg
mov
jbe
std
aas
sbb
sub
lahf
mov
roll
jae
cmp
mov
imul
ljmp
repz
mov
rcll
popa
test
lods
jbe
pop
movl
and
icebp
push
adc
fnstenv
shll
wrpkru
ror
push
lcall
js
in
stc
jg
fdivrl
lcallw
mov
cmp
outsl
mov
dec
movsb
lods
pushf
sub
mov
xor
cltd
mov
cmp
movsl
cmp
inc
xor
dec
hlt
or
sbb
push
test
in
call
cmp
lods
das
cmp
fwait
rolb
insb
xor
test
add
xchg
jns
xchg
dec
stos
pop
aam
mov
repnz
fsubl
lods
and
mov
test
shl
and
lret
rcl
addr16
pop
loope
mov
cli
psrld
xchg
mov
xor
jb
icebp
xchg
mov
int3
jle
pop
stc
pop
ss
xchg
clc
ljmp
inc
lret
insl
pop
addr16
jge
lea
lods
add
ret
jge
xchg
sbb
ret
sbb
push
dec
add
xchg
push
jmp
and
adc
and
aas
hlt
icebp
mov
adc
add
sub
cld
xchg
ja
out
orl
into
outsb
xor
imul
sbb
and
arpl
cmp
rcrl
addr16
movsl
shrl
test
test
adc
test
xlat
add
loopne
pushf
pop
add
fdivl
xchg
cmp
repnz
xchg
adc
in
lods
test
gs
shl
adc
lret
leave
xor
imull
push
xchg
imul
sti
pop
push
pop
cmpsb
push
mov
sbbl
pop
xchg
mov
xor
or
jb
mov
mov
xlat
popf
dec
loopne
mov
shlb
sbb
cmp
dec
pop
mov
xchg
xor
inc
pop
xlat
jns
jle
outsb
outsl
jnp
jbe
mov
shll
hlt
dec
inc
popf
and
popa
mov
xchg
int3
pop
mov
and
rorb
aad
mov
sub
add
mov
jb
jl
and
fwait
icebp
fwait
mov
aaa
fwait
cli
fs
rclb
cs
cmp
ljmp
pusha
jnp
or
cltd
mov
outsb
insl
icebp
sti
xor
push
jns
fistpl
sbb
call
dec
ja
mov
in
inc
imul
mov
imul
or
movsl
inc
adc
mov
orl
mulb
sub
pop
mov
push
sub
xchg
or
xchg
mov
jae
sub
add
fstpl
lods
jns
es
or
mov
test
mov
loope
int
add
inc
test
push
jmp
dec
adc
imul
and
inc
pop
sub
mov
xchg
jge
aam
xlat
lret
mov
xchg
jne
dec
mov
push
mov
xchg
adc
inc
jecxz
test
push
xchg
int3
es
shrl
das
xchg
fs
and
ret
dec
jb
movsl
hlt
pop
daa
js
lea
push
in
push
mov
dec
cwtl
out
sub
jbe
mov
loop
pop
push
pop
es
ret
repz
rcrb
cmpsl
cwtl
inc
roll
cs
notb
out
dec
ret
pop
loope
test
mov
cmp
xchg
sahf
rol
ljmp
xor
loope
adc
call
add
arpl
inc
xchg
scas
push
sti
or
sub
cmc
push
push
or
mov
clc
pop
jne
jmp
sub
jo
jae,pt
cmp
int
sbbb
pop
cmp
data16
cmpsb
dec
imul
mov
aam
push
xor
push
mov
in
pop
sbb
mov
mov
sbb
dec
arpl
cmc
push
lds
ja
es
dec
leave
mov
and
pop
sbb
clc
fcoms
jmp
sbb
fwait
adc
movsl
xchg
out
sti
adc
xor
and
or
sub
jnp
cli
push
orl
and
sbb
and
in
xchg
mov
cli
mov
imull
xchg
aad
arpl
jne
rorl
cltd
movsb
jne
pop
mov
mov
jbe
sbb
and
int
scas
add
inc
adc
addr16
dec
pop
dec
add
jg
sub
xchg
outsb
dec
xor
sub
cmc
hlt
fcoml
aad
inc
inc
and
inc
mov
cli
pop
and
loopne
stc
mov
dec
xor
xchg
es
jg
add
rol
aaa
clc
out
push
jb
xorb
sbb
adc
and
or
not
gs
popf
inc
and
sub
leave
movsl
test
pop
es
jb
out
loope
fisubl
xor
cmp
iret
insb
or
icebp
xchg
loop
hlt
ret
inc
js
fnsave
lods
jb
add
cmp
or
lock
imul
push
shl
mov
ret
stc
call
bts
push
adc
filds
or
enter
inc
rcrl
pop
test
sbb
pop
das
mov
aam
jne
jecxz
pusha
daa
aam
loopne
or
into
mov
enter
jecxz
cs
test
pop
repnz
in
or
int3
cmp
mov
lret
xor
nop
loop
jae
push
sbb
not
mov
in
push
jle
loopne
outsb
xor
add
test
fldt
aas
ret
xchg
push
mov
jns
push
sbb
testb
dec
adc
fldl
cltd
ljmp
pop
mov
jne
sbb
test
sbb
sub
fwait
mov
or
shll
test
shlb
adc
pop
icebp
mov
cmp
mov
testb
add
lret
mov
dec
and
sbb
mov
orb
cmp
mov
lds
js
pop
push
clc
sub
icebp
pop
call
jl
inc
nop
adc
mov
mulb
es
cli
lcall
addr16
loopne
mov
jmp
repz
and
xor
das
leave
pop
add
adc
fs
lock
sub
inc
mov
cmpsl
mov
out
jmp
mov
add
dec
mov
subl
jns
lahf
lods
lock
dec
test
loopne
cmp
xor
xchg
and
jmp
test
fidivrl
dec
xchg
mov
pop
sbb
test
inc
fs
jecxz
dec
push
jge
and
test
dec
or
and
test
mov
divb
rorl
movsb
mov
pmuludq
fcomps
sub
pop
aaa
jo
iret
jmp
nop
aam
add
pop
popa
xchg
mov
push
fbstp
fldt
mov
shll
add
mov
daa
js
outsl
push
bound
sbb
cmp
or
test
mov
cld
jae
mov
adc
into
in
test
cmp
mov
xor
inc
xor
lret
dec
and
adc
dec
lahf
fmuls
lcall
pushl
pop
jbe
jo
std
test
jge
jnp
adc
das
jnp
clc
jae
xchg
popa
xchg
inc
shr
or
pop
cld
aad
sbb
cli
loop
sbb
mov
inc
fcomip
pop
adc
dec
outsb
leave
lds
iret
rclb
into
xchg
and
ds
cli
push
stc
mov
mov
notl
push
rclb
lret
repz
clc
stos
dec
add
mov
push
stos
mov
add
fs
cmp
jp
fsts
int3
out
mov
sub
icebp
shlb
cmc
jecxz
fdiv
out
addb
adc
or
movsb
mov
repnz
push
cltd
movsl
cld
jecxz
jge
cmp
xor
rorl
push
add
mov
sub
xchg
js
cmc
ffree
xor
xchg
andl
pusha
dec
testl
cwtl
mov
jecxz
call
lock
mov
adc
or
cmp
loopne
inc
mov
xchg
bound
movsb
jae
test
dec
aam
pop
add
pop
push
loope
mov
xor
jp
sub
push
mov
fbstp
and
das
scas
xchg
pop
push
decb
inc
pop
adc
into
push
add
mov
xchg
sub
pop
jp
and
cs
adc
push
sti
jp
sub
dec
scas
ja
scas
inc
mov
pop
es
mov
adc
dec
out
pop
lds
in
sahf
mov
xchg
lcall
test
and
dec
arpl
pop
popa
ret
jmp
push
out
push
cmpsl
xchg
movsl
aas
fdivl
jle
pusha
cld
xchg
negb
popf
and
xchg
or
cmp
inc
cmp
sbb
dec
jmp
pop
sub
sub
cltd
sub
xor
mov
xor
xlat
dec
cmp
test
dec
lds
add
push
outsb
dec
push
dec
int3
mov
and
push
adc
jae
mov
push
std
idivb
jmp
ret
popa
push
clc
xor
fs
and
dec
lahf
lds
das
push
xchg
sub
push
mov
xchg
arpl
les
adc
mov
jo
mov
out
insb
sub
push
std
push
fistpl
inc
dec
adc
jmp
scas
test
pop
repnz
push
pop
je
movsb
lahf
xchg
fadds
inc
cli
xor
ds
sbb
je
std
mov
add
dec
mov
xor
js
por
mov
fwait
sbb
push
xlat
mov
arpl
cld
mov
sahf
iret
stos
or
xchg
mov
imul
rcrl
jo
push
leave
xor
int3
das
jmp
lods
fistl
into
fdivr
lret
repz
mov
add
int
cmp
ret
loop
xor
ret
dec
lcall
jg
insb
ret
pop
mov
or
jg
addps
mov
push
push
testl
and
outsb
aad
lock
arpl
stos
lds
and
jg
xchg
jbe
push
mov
loope
adc
dec
pop
or
pop
cld
pusha
arpl
xchg
lahf
ja
mov
mov
inc
inc
cmpsb
pop
jg
or
push
add
or
cmpsl
leave
imul
add
pop
pmaxub
pop
arpl
push
sub
cmpsb
fmull
mov
movsb
mov
adc
clc
in
enter
inc
push
pop
or
aad
adc
jns
push
dec
lret
sarl
xlat
std
repz
jne
jmp
lcall
movsb
lret
fs
popf
pop
sti
cltd
cmp
cld
add
out
outsl
push
and
out
jb
push
je
cwtl
push
call
ljmp
pusha
push
int3
jo
scas
mov
fucomp
mov
mov
movsl
loope
out
test
xchg
push
mov
pop
fdivs
sahf
aad
adc
or
adc
mov
mov
or
stc
sub
loope
push
xor
rolb
pop
lea
je
and
loope
ljmp
push
std
mov
clc
mov
cmpsl
and
push
ss
push
cld
dec
push
dec
jmp
jo
scas
lea
jno
mov
fwait
dec
pop
rolb
or
je
dec
inc
insl
sbb
adc
add
mov
and
push
mov
or
rolb
push
mov
lock
mov
dec
pop
xchg
jae
fisubs
cmp
push
inc
mov
or
dec
aas
xchg
dec
jne
stos
mov
add
lahf
and
ret
call
mov
mov
mov
outsb
insl
addr16
mov
push
push
out
jae
add
imull
addr16
pop
iret
arpl
insb
cmpsb
jbe
push
movsb
xor
mov
mov
inc
inc
dec
outsl
dec
fcoml
cmpsb
push
xchg
jns
and
mov
jmp
jno
filds
adc
aas
aad
iretw
shr
push
loope
mov
fmulp
inc
mov
paddsb
add
repz
xchg
cli
xchg
incb
mul
cmpsl
lods
or
loope
movsb
add
jg
dec
imul
scas
adc
pop
or
jnp
lea
push
shl
popf
popa
adc
push
sbb
sbb
dec
jno
or
and
dec
add
adc
sbb
add
add
repnz
lds
mov
loop
loopne
enter
leave
inc
pop
aaa
dec
sbb
fldt
push
cmp
bound
stos
and
pop
push
fcmovnu
cwtl
int3
cmp
inc
mov
ds
scas
es
cmp
mov
adc
inc
xor
lcall
adc
in
cmp
add
shlb
out
xor
or
jl
jp
inc
les
aad
push
dec
mov
daa
call
cmc
out
push
and
mov
addr16
out
mov
mov
pushf
pusha
mov
adcl
fldt
sub
jb
dec
loopne
stc
mov
or
lret
cmc
cld
jecxz
insl
sbb
pushf
sbb
mov
movsl
jnp
lcall
movsl
fdivl
into
mov
mov
mov
sahf
movsl
jns
sub
or
in
mov
in
filds
test
pop
jle
hlt
pop
stc
xchg
xor
hlt
add
out
frstor
xor
fwait
xor
jns
jp
insb
inc
neg
lods
inc
push
cmp
mov
sub
push
test
add
cmp
add
mov
lods
mov
fsubrl
lock
jae
push
add
xchg
fcoms
xchg
sub
pop
lods
sub
popl
lods
popf
das
sbb
mov
pop
arpl
dec
movsb
iret
mov
ljmp
ja
sub
or
pusha
je
cmp
or
adc
out
stc
and
xchg
mov
and
hlt
inc
xchg
movsl
sbb
fstps
fadd
mov
xchg
jp
loopne
lcall
dec
notl
loopne
test
jmp
mov
push
push
adc
cmp
dec
pop
xchg
test
mov
stc
aaa
fisttps
mov
inc
lods
adc
or
jb
xor
cld
push
inc
fwait
les
pop
mov
cmp
gs
lods
nop
mov
mov
cmp
pushf
dec
data16
out
pop
stc
in
add
and
movsl
bswap
rorb
aad
jb
cltd
push
jle
pop
add
mov
mov
or
push
popf
xchg
jle
mov
das
js
pop
dec
cmp
shll
inc
push
push
ret
mov
cmp
add
in
in
pop
add
lods
jecxz
jmp
pop
jecxz
mov
dec
mov
aas
push
ds
hlt
cld
fstpl
jbe
insl
mov
lcall
int3
cltd
nop
imul
loopne
insl
add
jge
pop
testl
jl
mov
mov
inc
add
xchg
push
inc
lods
mov
ljmp
out
cld
xor
or
add
dec
and
sbbl
imul
sub
int3
dec
mov
adc
xchg
lock
mov
aas
int
mov
xor
leave
hlt
insb
out
mov
cs
loope
ret
enter
std
or
out
cmp
mov
sarb
scas
sbb
cs
shlb
lahf
ret
std
dec
mov
xor
test
mov
aas
mov
gs
mov
dec
adc
sbb
xor
push
dec
cmp
dec
cmc
cmc
outsb
sub
pop
insb
mov
cmc
xlat
jl
aad
lret
dec
mov
cmp
push
inc
add
xchg
int3
pusha
mov
pop
mov
add
xor
insb
data16
lock
cmpsl
rcr
sbb
mov
mov
outsb
jne
sbb
outsl
push
cli
repnz
fs
lock
inc
inc
jg
aam
mov
add
adc
push
aaa
out
cmpsb
and
cmp
mov
fnstcw
add
pop
jg
dec
mov
xor
xor
mov
inc
pop
adc
out
pop
lahf
jmp
dec
pop
mov
lahf
cmp
sahf
mov
into
push
fs
adc
fcomp
push
adc
in
lret
mov
sbb
mov
fcomps
mov
lea
sbb
xor
pop
and
cmp
aam
mov
mov
or
fdiv
push
push
pop
call
mov
mov
fsubr
pusha
fldl2e
fwait
jecxz
adc
and
and
ds
dec
mov
mov
push
je
cli
or
out
cmpxchg
dec
fidivs
sar
mov
icebp
mov
mov
out
sbb
push
mov
xor
sbb
sti
insl
andb
data16
test
jbe
aam
dec
aam
mov
cs
add
mov
adc
dec
cltd
jp
cmp
cld
and
pop
fst
pop
lods
aaa
and
inc
adc
jle
push
int
xor
pop
push
in
ret
ss
mov
fwait
popa
push
push
and
add
cltd
movsl
xor
mov
mov
es
add
add
mov
fdivrs
cmp
fistps
scas
arpl
push
xor
and
dec
aad
add
aas
lahf
out
sarl
test
clc
cld
push
int3
jns
fsub
or
add
mov
int
leave
icebp
mov
mov
pop
out
scas
jo
lods
mov
xor
xor
fisttps
std
mov
hlt
adc
xchg
fdivrs
inc
es
cmpsb
jle
loope
sub
sbb
inc
loopne
pop
jge
mov
test
inc
xchg
adc
arpl
sbb
xor
xor
pop
sub
and
xor
rcr
mov
jno
push
cmp
std
loopne
mov
adc
movsl
pop
push
xchg
xchg
adc
cld
jmp
pop
mov
into
mov
mov
mov
fmull
jmp
push
shlb
push
adc
outsl
stc
adc
divl
push
icebp
mov
ret
sub
adc
cmpsb
mov
stos
mov
pop
jo
pop
cmpsl
xor
jg
les
add
ja
jae
add
scas
imul
mov
adc
push
lods
xor
xor
pop
dec
sub
repz
pop
push
xchg
cmp
addr16
mov
in
jnp
inc
lods
in
adc
bound
and
mov
ficoms
inc
jge
aas
aas
out
push
jb
or
dec
mov
repnz
cld
mov
push
pusha
ljmp
adc
jb
jecxz
fwait
ljmp
les
rcl
fdivrl
cmp
push
inc
lds
push
out
stos
or
loop
push
pushf
clc
sbb
pop
icebp
adc
pop
push
mov
mov
dec
xchg
mov
int3
idiv
fs
cmp
int3
fdivp
and
or
icebp
test
ss
test
cmovg
aad
aam
adc
leave
cmc
or
mov
imulb
pop
ljmp
cmpsb
sahf
jp
cs
shlb
and
dec
iret
leave
dec
push
jl
scas
jecxz
sbb
dec
mov
mov
test
stos
add
sbb
adc
pop
push
in
push
jp
push
xor
cmp
into
ss
cmp
stos
imul
and
dec
mov
add
shr
sub
je
sahf
dec
mov
xor
dec
mov
iret
pop
or
pop
rcr
scas
xor
or
push
and
ljmp
popa
mov
and
cltd
ja
repnz
sub
lea
shrl
inc
inc
pop
dec
movsb
xor
sub
cmc
mov
js
sbb
sub
xlat
pmovmskb
xor
sub
in
inc
arpl
ss
inc
mov
mov
es
repz
push
mov
mov
inc
mov
dec
inc
subb
cltd
les
fisubrs
sub
mov
and
xor
push
orl
mov
sub
jecxz
push
je
jmp
js
mov
stos
mov
mov
inc
lds
sbb
sub
mov
fs
push
icebp
pop
cmp
and
addr16
leave
aad
test
in
cmp
mov
push
push
xor
xor
es
cmp
sbb
dec
cmc
add
jno
push
rcr
mov
outsb
in
pop
xchg
addb
lods
mov
aam
gs
std
out
dec
mov
call
push
xchg
jb
mov
lods
jb
push
insl
jle
lods
rolb
sbb
cmp
loope
pop
mov
sub
ds
inc
pushf
je
jnp
lock
mov
pextrw
cmpsl
sbb
sbb
xchg
iret
jo
pop
dec
mov
xchg
and
add
movsl
aas
push
stos
lds
mov
mov
imul
push
and
sbb
enter
jmp
jo
mov
mov
inc
inc
inc
or
or
insb
or
cmp
mov
mov
ret
das
repz
jb
lods
and
and
ds
mov
lods
hlt
inc
aaa
rcr
jno,pn
js
movsb
dec
inc
das
adc
shll
mov
jg
push
bound
mov
rol
imul
subb
xrelease
inc
cmpsb
add
test
cmp
test
stc
and
cltd
adc
inc
mov
pop
rclb
push
dec
or
mov
pop
mov
add
pop
push
cmpsl
and
or
cmc
xor
fisubrs
and
call
fdivrp
stos
sti
jecxz
scas
and
jl
fisubl
sub
mov
imul
mov
ja
enter
outsl
loop
popf
cltd
sbb
cli
das
mov
cmp
adc
addl
rcll
lds
sbb
aaa
pop
ljmp
sbb
pop
cmovb
rorb
inc
push
cli
sbb
pop
inc
mov
jl
inc
test
jg
xor
pop
cld
mov
push
mov
push
mov
cmp
lret
pop
pop
neg
cmp
jb
inc
iret
inc
and
cmpsb
fadds
testb
outsb
test
mov
adcb
xchg
inc
sub
jmp
and
iret
cmp
fwait
dec
cmc
leave
cld
fildl
faddl
aam
sahf
adc
mov
imul
out
lds
cs
cmpl
mov
push
cltd
jbe
je
push
jae
push
dec
pop
imul
mov
or
aas
iret
mov
outsb
fstp
mov
imul
bound
xor
pop
jno
fcompl
jecxz
stos
testl
int3
rcl
lods
imul
fmuls
dec
into
lcall
lret
hlt
mov
mov
jg
sub
sub
fisttpll
push
out
ljmp
jno
cmp
pushf
adc
sbb
push
int
cld
mov
adc
sbb
inc
test
jge
jns
mov
add
cmp
pushl
ds
pop
fisubs
fs
jmp
stos
ret
xchg
roll
out
fisubl
add
push
mov
outsl
push
xchg
pushf
pop
or
mov
insl
mov
nop
mov
cwtl
aas
loope
lcall
sbb
add
sub
std
xchg
sbb
push
xor
cmpsb
clc
orb
loop
push
cmp
xor
inc
mov
add
dec
lahf
mov
push
mov
xor
inc
pop
mov
push
cli
filds
std
scas
fldl
jnp
push
icebp
sbb
mov
cld
jmp
adc
sbb
mov
cmpsb
mov
add
js
pushf
pop
dec
aam
mov
cmp
aad
call
in
adc
stos
sub
mov
repz
dec
xorb
jns
daa
insl
mov
out
lea
fs
fadd
sub
adc
sbb
xchg
lock
xorb
mov
insb
sub
xor
mov
mov
jnp
jl
pop
mov
popa
cld
and
adc
mov
or
inc
push
xchg
mov
stos
stos
fistpl
pop
xchg
or
mov
xchg
mov
faddl
sub
xor
lods
jl
int3
and
mov
fstl
pop
pusha
add
sbb
enter
push
mov
pop
xchg
inc
jmp
test
popa
adc
cmp
add
adc
in
nop
or
mov
mov
in
pusha
es
dec
and
fldlg2
movl
mov
rsqrtps
lods
das
pusha
ror
cmpsb
movsb
add
scas
cmp
pop
push
push
into
dec
adc
loopne
test
mov
add
insb
add
xchg
push
xor
xor
mov
xchg
dec
inc
loopne
imul
imul
sub
out
cmp
cmp
push
cs
jl
ret
ja
push
out
xor
jae
and
mov
data16
fs
and
push
mov
movsb
pop
mov
jae
js
lahf
prefetcht1
mov
testb
dec
and
mov
pop
sti
enter
out
jb
mov
pushf
xchg
add
scas
lock
xlat
sbb
mov
push
inc
fnstcw
aam
ss
pushf
mov
or
jmp
ret
mov
scas
xor
cmc
and
sbb
fnstsw
sub
sbb
sahf
cmpsl
jne
pushf
enter
jg
cwtl
pop
sti
or
push
sub
imul
lea
sahf
mov
pop
jle
pop
mov
ja
xor
movaps
sbb
dec
stc
cmpsl
call
add
and
xchg
movsb
mov
push
push
push
ficoms
cmp
into
rorl
and
gs
nop
jmp
dec
and
mov
cltd
sub
add
stos
cld
inc
xor
pusha
pop
jo
pop
xchg
adcl
dec
ljmp
mov
test
push
mov
out
mov
add
cmpsl
xchg
push
inc
dec
mov
push
fwait
aad
and
push
frstor
test
in
jae
popf
mov
aaa
daa
subl
mov
clc
sbb
popf
out
sbb
sti
call
out
dec
scas
inc
roll
test
inc
lahf
pop
mov
cltd
jno
xchg
add
sub
jno
xlat
fucom
lea
aam
dec
add
outsb
gs
lods
es
push
push
sahf
inc
inc
push
ret
jecxz
icebp
daa
cwtl
jmp
and
dec
into
stos
jbe
les
xchg
ljmp
jmp
daa
hlt
mov
stc
xorl
mov
sbb
lods
mov
add
jo
mov
xchg
pop
pop
aaa
inc
jns
xor
out
mov
inc
fistpll
sahf
fdivs
cmpb
sahf
mov
pop
inc
fs
xlat
leave
scas
sub
sti
out
push
pop
fdivrl
ret
shll
add
xor
movsl
xlat
sbb
popf
xor
std
repnz
pushf
out
jge
adc
mov
popa
fld
jge
cmp
inc
into
pop
stos
mov
cmp
jle
cmc
and
cmp
push
dec
cmp
loope
testl
sbb
jl
movsl
cmp
inc
arpl
fldl
bound
jge
std
xor
call
jmp
ja
adc
mov
adc
leave
and
adcl
out
mov
add
xchg
jle
stos
divl
mov
lds
and
iret
fdivl
mul
jo
cmpb
in
mov
pusha
xor
stc
jle
or
add
mov
stc
sub
fadds
xor
sahf
jbe
or
cmp
xchg
pop
fcomp
cmpsb
adc
fisubrs
bound
pop
mov
mov
mov
adc
jno
jle
push
lcall
or
movsb
ljmp
fstpt
mov
or
scas
inc
pop
stc
mov
and
jl
mov
or
sbb
subl
xchg
scas
inc
test
pop
cmp
xor
hlt
sbb
mov
xor
mov
rclb
mov
and
dec
push
cmpsl
xchg
pop
and
push
lret
adc
push
or
jnp
bound
aas
icebp
jnp
in
push
dec
popf
in
daa
mov
roll
jecxz
fwait
push
mov
leave
mov
lods
dec
scas
loopne
test
out
xchg
mov
aad
mov
data16
push
outsl
cld
adc
xor
pop
jo
xor
dec
inc
push
push
or
outsb
mull
xchg
cld
pop
lahf
mov
jge
mov
pop
hlt
mov
inc
and
adc
scas
popa
movsb
shrl
test
xchg
pusha
mov
jne
test
jle
mov
sahf
pop
mov
lds
mov
mov
cltd
les
xor
cmp
mov
cs
out
push
arpl
or
mov
push
decl
psllw
mov
lret
mov
inc
sub
lods
ffree
cmpsl
push
jmp
sti
sbb
add
cld
daa
xlat
test
pop
fs
les
fcomps
aaa
daa
rcr
inc
test
lea
sub
or
xor
inc
test
test
jo
push
jge
mov
pop
pop
outsb
test
addl
jmp
or
in
inc
iret
andl
xor
repnz
addr16
push
movsl
fs
xchg
in
dec
cmpb
sbb
insl
mov
lods
clc
stc
sahf
pop
cmc
dec
inc
inc
xchg
mov
mov
shrb
add
cmp
push
inc
mov
xor
dec
out
xchg
dec
test
sbb
pop
or
add
testb
xchg
pop
adc
jp
xor
dec
jo
popf
imul
cmp
lret
daa
lods
mov
mov
jb
idivb
mov
rcll
adcb
cwtl
jns
sbb
adc
mul
push
sbb
cmp
lods
mov
dec
dec
or
cld
adcb
insb
into
pop
lods
lods
mov
sub
insb
adc
daa
inc
sahf
jle
add
xchg
repz
mov
jno
cwtl
add
mov
xchg
cli
es
adc
decl
aaa
aam
dec
popa
aad
ja
out
arpl
xor
add
push
add
xor
inc
lret
test
mov
enter
sbb
mov
sub
loop
jbe
dec
jo
outsl
or
imul
repnz
ret
sbb
mov
sbb
pop
pop
addr16
and
or
jge
jno
ja
repnz
pop
insl
push
in
mov
test
mov
addr16
xchg
lea
dec
fcomps
pop
fs
xlat
dec
ret
add
jns
int
aad
mov
pop
cmp
into
add
into
test
pop
mov
xor
data16
push
popa
push
lock
ds
add
xchg
push
in
sub
mov
js
insb
les
and
xchg
pop
scas
and
shlb
ss
ljmp
dec
into
sub
outsb
fistl
push
and
jle
stos
add
dec
aam
inc
xor
ficoml
adc
push
sub
dec
dec
xchg
sub
fwait
dec
push
call
jno
popf
scas
mov
sarl
xchg
push
les
jmp
arpl
in
add
xchg
out
fcompl
inc
flds
pop
adc
mov
bnd
adc
cmp
std
dec
ja
jae
iret
mov
mov
dec
push
aaa
pop
test
sbb
cmp
adc
outsl
cld
jb
lret
mov
pop
nop
ret
shrl
lret
adc
pop
shlb
shrb
ss
rcll
xor
jnp
sbb
push
ret
jb
mov
and
or
or
dec
pop
je
adc
loopne
inc
fs
sbb
shrl
jmp
xchg
push
ds
clc
mov
imull
jo
aam
cmp
xchg
mov
pop
xor
lods
pop
iret
lahf
or
dec
test
xchg
dec
sbb
movb
iret
cmpsb
push
mov
sub
nop
insb
out
jg
popa
imul
les
mov
ds
out
es
cltd
jbe
dec
inc
sahf
call
pop
insl
push
dec
mov
push
xchg
sahf
jecxz
mov
lahf
add
xchg
mov
lock
inc
int3
mov
push
std
sbb
popa
pop
pushf
mov
cmp
push
jns
enter
mov
dec
adc
dec
adc
jb
sub
dec
lret
jle
enter
mov
cmc
cli
push
mov
sarl
mov
hlt
outsb
pop
stos
call
jo
add
std
movsl
mov
mov
inc
mov
fisubrl
inc
xchg
xchg
mov
mov
popl
and
push
dec
and
xor
les
adc
loopne
sub
mov
movsb
movsb
lods
cmpsl
mov
jb
cs
in
sbb
nop
int3
xor
add
or
aaa
jmp
bound
cs
jo
jge
ret
inc
add
out
dec
hlt
sbb
adc
adc
sahf
iret
dec
mov
and
jns
sub
jp
xchg
pop
iret
sbb
jbe
add
stos
sbbl
roll
hlt
in
xor
dec
cwtl
clc
fs
sbb
ret
movsb
push
jae
imul
xchg
push
out
mov
testl
movsb
xchg
cwtl
xchg
loop
dec
jecxz
jne
add
mov
lret
cmp
fs
movb
mov
stos
loope
cwtl
jno
sbb
dec
lret
cmp
jecxz
mov
and
mov
mov
sbb
dec
fld
lods
xchg
insb
lret
xor
jl
mov
pusha
jg
cltd
incl
xor
inc
loopne
xor
pop
mov
lods
inc
fstps
xor
fisubs
pop
orb
adc
dec
add
lret
push
cmp
dec
adc
adc
mov
jl
mov
test
in
jmp
push
cmpsb
inc
outsl
dec
ret
test
fcom
adc
in
jge
clc
lret
mov
leave
int3
xorps
push
pop
mov
loope,pn
pushf
dec
dec
es
dec
fucom
dec
cmpsl
mov
jbe
lock
lods
dec
inc
dec
cmp
mov
sahf
xor
pushf
rclb
adc
mov
out
mov
int
sbb
add
push
xchg
pop
repz
in
test
push
push
cmp
sbb
sbb
test
mov
sti
frstpm(287
in
mov
cld
loope
jecxz
pop
iret
fwait
fs
leave
test
lret
aad
jae
mov
inc
jae
leave
pop
push
clc
les
test
daa
dec
sbb
ljmp
push
pop
ljmp
inc
sbb
xor
cmp
pop
std
cmp
sub
movsb
and
test
cmp
push
rcl
in
stos
imul
push
pop
jl
push
inc
sbb
push
popf
ljmpw
add
fsub
das
outsb
sub
movb
adc
cmp
idivb
pop
fbld
lods
dec
sbb
mov
mov
pusha
scas
mov
mov
dec
insl
js
lods
push
sub
cmp
mov
push
mov
and
pop
dec
push
jmp
push
pusha
xor
pop
scas
sbb
cmp
or
mov
add
shlb
mulb
mov
ds
xor
jns
scas
xlat
ljmp
test
cmp
push
cwtl
jno
std
daa
jge
push
jmp
xchg
lahf
pop
lcall
scas
popf
lea
ror
pop
ja
pop
pop
inc
mov
adc
out
jl
in
or
sbbl
jns
pop
rcl
sbb
ret
push
sbb
xor
mov
dec
out
mov
jbe
dec
pop
add
data16
sti
jp
push
xor
enter
stos
addb
roll
cmp
xor
or
shlb
push
fisttpl
dec
scas
mov
mov
scas
cld
and
cltd
mov
add
inc
gs
mov
pop
xor
jp
stc
xchg
add
popf
and
mov
jg
push
lea
add
inc
cld
fldl
sti
lahf
xchg
adc
nop
pop
cmp
rolb
and
nop
fcoml
div
lahf
add
adc
sbb
xchg
jno
and
sub
mov
je
enter
jg
cmp
jnp
push
iret
fcom
lcall
push
mov
sbb
leave
jle
cmpb
pop
lods
push
cmp
jp
sub
faddl
ss
pop
push
ds
stos
ja
xchg
fcoml
flds
dec
add
mov
sub
push
les
sub
aaa
add
negl
sti
add
push
movsb
mov
arpl
nop
out
aaa
and
mov
inc
movsb
push
mov
adc
cli
repnz
cltd
aaa
adc
js
test
jno
call
push
out
push
lahf
fdiv
dec
pop
int
xchg
je
pop
roll
cmpsl
loop
cld
cld
pop
enter
fisubrl
cmp
xlat
fstpl
sbb
insl
loope
mov
daa
push
int
inc
pop
stos
arpl
pushf
hlt
mov
ret
pop
flds
outsl
xchg
bound
dec
stos
and
and
dec
loopne
lret
in
xchg
repz
mov
cmp
pop
or
dec
mov
stc
daa
bound
in
and
add
pop
cltd
test
adc
ljmp
push
inc
enter
icebp
ds
xor
lcall
mov
pop
add
cmc
xchg
sub
and
or
mov
push
mov
and
pusha
out
push
sbb
push
fldt
scas
imul
jne
ss
pop
dec
push
add
shlb
stc
popa
out
jge
fiadds
pop
sbb
and
xor
mov
icebp
insl
dec
pop
pop
xchg
jg
aad
sub
inc
and
or
sub
sarl
or
push
xchg
int
xchg
lock
loop
inc
mov
push
aas
sub
inc
enter
aaa
loope
xchg
mov
mov
inc
pop
fcomp
pop
jno
or
adc
or
call
and
loope
pop
das
pop
dec
and
push
repnz
aad
outsb
js
cmpsl
adc
and
loope
inc
mov
sub
mov
movb
cmp
jae
mov
mov
pop
and
enter
xor
adc
mov
sarl
sub
inc
rorl
push
xor
aaa
add
fwait
and
scas
cmp
sahf
cmpl
icebp
das
sub
filds
inc
dec
xchg
loop
ror
push
scas
add
pop
mov
add
or
dec
inc
fmull
test
popf
adc
out
lods
bswap
and
jl
call
clc
imul
xor
out
into
adc
push
std
xor
jns
sub
xchg
jnp
xchg
inc
mov
jmp
outsl
jp
out
inc
mov
lret
test
out
pushl
xor
test
xor
push
push
test
in
and
push
out
push
std
sbb
fwait
ljmp
rcll
pop
icebp
int3
add
mov
sub
mov
cmpsb
seta
rclb
fwait
mov
xchg
jnp
bnd
test
in
orb
pop
call
in
loopne
jae
dec
dec
add
xor
ja
mov
cmpsl
loope
stos
and
fcoml
insl
xor
jle
mov
cmp
xor
ret
or
clc
mov
test
dec
mov
and
push
shll
adc
call
movsb
and
xor
shlb
or
pop
xchg
xor
pop
lods
sub
push
bound
mov
test
imul
sti
dec
sub
adc
addb
repz
inc
adc
add
icebp
aaa
push
movsb
movl
inc
mov
lcall
cli
jmp
jns
sbb
cmpsl
jge
movsl
in
in
pop
stc
jae
test
icebp
jb
ret
mov
mov
in
jecxz
push
sbb
int
push
add
jb
mov
inc
icebp
aad
cmp
dec
inc
popf
sub
shlb
pop
xchg
push
lods
push
jl
sbb
inc
je
stc
scas
lret
sahf
jbe
sbb
xchg
ret
push
aad
add
ja
adc
mov
sub
je
lret
lret
or
into
cmpsb
orb
jg
fwait
mov
add
add
jnp
popl
jne
xor
int3
add
insl
incb
adc
mov
jge
shll
xor
int
mov
lds
jmp
inc
insl
in
dec
into
dec
dec
es
arpl
push
xchg
cmp
and
stos
std
in
add
popa
cs
xlat
je
in
shll
dec
repz
faddl
cmp
int
cld
mov
les
lods
divl
push
mov
imul
and
mov
pop
into
xchg
push
ror
cmpsb
test
aam
jns
fsts
sub
push
shrb
test
sahf
and
jbe
sub
jo
mov
push
mov
jl
call
lea
lea
ret
dec
imul
mov
aas
or
mov
xchg
push
cld
mov
xorb
or
adc
jnp
mov
aaa
dec
jmp
es
out
addr16
jae
lahf
insb
out
stc
mov
pop
addr16
mov
xchg
int
xor
push
inc
fisubrl
hlt
and
cmp
xor
bound
sub
jb
mov
push
mov
xor
arpl
ss
stc
imull
jge
jp
dec
fidivrl
std
xor
pop
popa
lcall
sarl
mov
and
dec
aam
ja
repz
dec
jg
cli
sti
jo
ja
adc
mov
pop
sti
mov
push
andb
xchg
out
int3
jg
mov
fst
loop
sbb
adc
push
mov
cmp
bnd
mov
push
cmp
dec
bound
movsl
into
jae
sbb
add
sarl
fdivrp
cmp
cltd
lds
pushf
cli
add
xchg
and
fcoml
pop
sahf
mov
sbb
mov
out
mov
popl
movw
nop
fimuls
dec
cmp
lahf
nop
loop
xchg
pop
add
leave
imul
push
add
mov
mov
js
pop
loopne
xlat
xor
pop
push
mov
stc
and
out
xchg
hlt
cmp
sbb
addl
cmp
jmp
push
push
dec
movsl
adc
xchg
testl
fsubr
pop
aad
fidivs
mov
pop
pop
or
fiadds
jbe
insb
adc
sbb
inc
mov
ret
mov
fisubl
loop
cmp
mov
rclb
repz
dec
pushf
lcall
inc
inc
pop
imul
stos
sbb
ret
xchg
add
mov
mov
xchg
ja
sub
inc
jg
mov
xor
mov
pushf
push
sub
stos
icebp
mov
mov
bound
push
jge
adc
pop
repz
iret
ja
mov
mov
outsl
or
test
push
push
xchg
mov
lea
jg
ret
out
rcrb
and
stos
sbb
jg
je
movsl
inc
push
test
adc
or
xchg
int
lods
sbb
es
addr16
rclb
push
andb
jnp
ljmp
sbb
xchg
imul
neg
sub
sahf
push
add
fcomps
push
mov
sbb
cs
xor
mov
in
flds
mov
rclb
and
scas
inc
mov
dec
mov
adc
add
enter
mov
ja
int3
shrl
sahf
mulb
xor
xor
adc
or
inc
push
dec
xchg
lahf
cwtl
arpl
dec
push
scas
aad
push
adc
adc
adc
jge
pushf
cmc
fstps
push
pop
aaa
movsl
jae
stc
jbe
cltd
lahf
cmp
cli
pusha
movsb
push
lahf
lock
movsb
mov
add
pop
icebp
lds
aaa
jmp
cli
movsb
pop
jns
call
stos
xchg
aaa
mov
cmpsl
sub
pop
imul
popa
and
dec
sarb
in
clc
mov
inc
xchg
dec
add
mov
xchg
cmpsb
dec
popf
sbb
inc
lret
xchg
push
incl
xchg
lods
pop
dec
jmp
inc
cmp
rcrb
cmp
mov
into
cwtl
adc
icebp
inc
pop
jno
mov
rcrl
stos
gs
mov
jne
xchg
aas
cmp
push
xor
cwtl
aad
cmpsl
cmp
xchg
out
push
je
ss
sbb
dec
das
inc
sti
pop
bound
sub
inc
inc
xchg
sub
or
popa
xor
xchg
out
decb
insb
mov
mov
mov
inc
push
inc
cmpsb
dec
shrl
pop
adc
mov
sub
lods
mov
outsb
mov
cmp
aas
cmp
cmp
lcall
pop
pop
fsubrs
add
sub
in
jae
inc
sti
rorl
into
lahf
add
sbb
scas
xor
call
clc
cli
cli
cmp
jne
push
andl
pop
scas
loop
add
mov
aad
int3
mov
mov
ret
fcom
out
pop
jb
and
fisttps
sub
rcll
rcrl
jne
test
and
dec
mov
in
adc
lret
inc
insb
jg
iret
repnz
negb
mov
fiaddl
cvtps2pi
or
enter
mov
xor
rcr
mov
ja
icebp
inc
pushf
adc
notl
cmp
push
ret
lds
jb
addr16
or
add
pop
out
sahf
mov
or
sbb
fnstenv
pop
xor
sbb
mov
movsl
dec
inc
sti
cmpsl
push
fisubl
push
xor
adc
adc
or
nop
ss
ljmpw
cld
insl
negl
cmp
mov
jmp
and
xor
mov
repz
jns
test
out
sub
scas
in
out
xor
call
push
cmp
mov
pop
insb
idivb
ljmp
lcall
clc
xlat
bound
jbe
js
adc
decl
adc
test
cmp
imul
jge
xor
loope
xchg
insl
xchg
and
add
mov
jl
pop
and
icebp
and
push
pxor
mov
out
sub
add
push
cld
cli
xchg
sahf
das
adc
sbb
mov
pop
out
or
mov
imul
push
pop
sub
nop
or
std
push
mov
xorb
push
div
icebp
stos
hlt
and
bound
sub
testb
add
pop
rclb
push
lods
mov
sti
rcl
push
and
xchg
mov
push
ret
es
push
inc
or
cs
xchg
loope
bound
call
push
cwtl
adc
rcr
or
cmp
dec
daa
lret
dec
andb
je
lds
bound
mov
leave
add
fisttps
jl
fwait
divl
outsb
mov
rcrb
or
test
inc
inc
pusha
gs
loope
aas
dec
inc
jg
adc
std
imul
ror
lods
sbb
lahf
lahf
push
shlb
dec
cli
lret
dec
mov
add
mov
mov
pop
jp
rcll
adc
inc
sti
or
and
inc
mov
mov
mov
sub
jmp
mov
call
xor
inc
insl
push
adc
inc
addr16
loope
adcl
fdivrl
sub
cs
dec
insl
stos
pop
pop
mov
movsl
fnstsw
nop
stc
out
test
fs
dec
je
and
and
dec
outsb
cmp
pop
repz
out
xchg
add
pop
imul
repz
loope
inc
mov
orl
repnz
mov
pop
ja
cwtl
into
dec
mov
les
add
ret
lcall
jo
mov
and
mov
push
xor
std
sbb
pusha
pushf
inc
dec
inc
cld
add
cmp
andl
cli
jnp
mov
cmp
dec
adc
cld
data16
jmp
jl
xlat
test
inc
imulb
xchg
cltd
pushf
jmp
mov
sub
dec
xlat
dec
fisttpll
call
cltd
jge
cli
xchg
and
in
inc
push
shl
ficomps
xchg
pop
into
arpl
mov
call
inc
call
rcll
icebp
pop
daa
neg
mov
fwait
mov
add
adc
dec
and
push
fistpll
and
out
scas
or
dec
and
dec
adc
jno
lcall
testb
inc
dec
or
jne
aam
ja
loop
int3
pop
push
push
add
jecxz
lods
fdivrl
ss
mov
aad
fldcw
xchg
xchg
pop
popf
loopne
sub
stc
inc
shr
and
inc
jmp
jbe
and
aam
jnp
outsb
mov
add
jae
loop
mov
movsl
mov
mov
add
jle
and
mov
int3
jb
popf
imul
or
ljmp
in
inc
imul
aad
jg
jmp
push
inc
mov
jb
into
dec
cmp
mov
inc
pushf
adc
jp
call
popl
rorl
insb
stos
inc
push
push
sub
pop
js
pop
popf
or
mov
xchg
dec
dec
fisttpl
pop
or
pop
out
popl
xor
sub
xchg
rcl
xor
je
xchg
dec
jbe
mov
jp
xchg
int
subl
mov
sbb
je
enter
xchg
lahf
jl
dec
outsl
sbb
lcall
test
dec
stos
sarl
mov
leave
mov
push
mov
cwtl
dec
aaa
xor
sbb
or
call
xchg
sub
dec
mov
xchg
outsb
fmulp
mov
imull
add
mov
insb
lcall
mov
in
je
mov
rol
lret
dec
scas
and
add
push
pop
sub
push
and
cmc
adc
dec
inc
cli
icebp
mov
add
push
xor
aaa
jo
popl
or
ror
gs
xor
imul
push
sbb
js
sarl
add
cltd
mov
addr16
lret
pop
or
repz
je
addr16
adc
or
add
mov
call
mov
add
fldenv
lcall
jnp
inc
pop
gs
cmpl
fcoms
pop
div
push
lock
bound
insb
movsb
stc
sub
lods
and
mov
mov
lret
lahf
data16
clc
rorb
cmp
or
sub
push
repz
popa
fdivs
movsl
mov
xor
or
jl
cld
stos
lret
das
adc
sub
int
cmp
arpl
aam
and
or
fldenv
xchg
aam
and
xor
or
pop
pop
loop
arpl
rorb
jns
in
add
adc
sahf
inc
test
in
in
inc
adc
cmc
mov
mov
ja
mov
cltd
add
lcall
xchg
popa
lea
lret
xchg
sbb
xchg
adc
cmp
es
iret
sbb
jl
stos
gs
mov
xor
andb
and
sub
add
sbbl
jg
adc
xchg
push
inc
movsl
cmp
inc
mov
jb
sub
out
imul
mov
js
pop
rol
and
movsb
in
insl
jle
dec
popa
mov
lea
jp
push
loopne
leave
loopne
or
mov
dec
mov
int
xchg
fwait
lea
jno
cli
call
mov
xchg
or
daa
cwtl
fisttpl
lock
sbb
or
cmp
jecxz
sbb
call
xchg
dec
outsb
cmc
pop
icebp
mov
lahf
mov
add
loope
jmp
and
mov
loop
outsb
int
aam
stos
mov
clc
push
leave
test
xchg
stc
movb
xchg
xor
dec
stos
pop
ret
mul
inc
cmpsb
bound
inc
or
inc
mov
push
xorb
lock
call
jmp
mov
aad
movsb
xor
xchg
pop
outsb
cmp
imul
pop
arpl
outsl
pslld
pop
ficomps
ss
push
xor
nop
mov
push
pop
stc
push
add
gs
lock
push
ret
and
push
xchg
cwtl
xchg
sbb
push
lret
test
sbb
jl
push
dec
push
testl
jb
inc
cmp
lds
xchg
roll
sbb
xor
mov
cld
adc
jle
fwait
inc
lock
outsb
push
scas
sbb
dec
dec
mov
pop
out
mov
imul
ds
insl
ja
jo
pop
insb
lock
and
enter
pop
inc
mov
pop
and
xor
lahf
jl
scas
cltd
sbb
adc
sub
jne
clc
les
hlt
pop
int3
lock
and
mov
lahf
pop
loop
mov
out
jo
push
xchg
call
pusha
std
dec
scas
pushf
or
out
and
test
ss
mov
mov
lret
push
mov
out
xlat
shrb
loopne
push
mov
fdivr
mov
in
adc
mov
adcl
adc
loope
mov
xchg
or
aaa
je
mov
aas
or
das
rcr
sbb
and
fwait
test
or
mov
cmp
pop
pop
cmp
outsl
mov
lahf
iret
in
xor
add
mov
ja
outsl
dec
and
push
lea
mov
mov
js
xchg
add
push
xchg
pop
fbld
cmc
adc
out
cmc
sar
lcall
gs
sub
cmp
clc
add
inc
loope
sub
popf
adc
lds
cmp
sbbb
aad
pop
push
pushf
push
loopne
in
jne
mov
xchg
daa
inc
insl
dec
arpl
xchg
xor
stos
fdiv
shr
xchg
lock
loopne
pop
lds
mov
xchg
mov
ret
ret
leave
sub
fnsave
jecxz,pt
jne
scas
sahf
insl
mov
data16
loopne
ret
mov
jo
cmp
test
pop
popf
xchg
pushw
jns
pop
notb
testb
xor
into
jle
or
lods
sub
fidivrs
loopne
mov
mov
mov
and
ja
cmc
test
xchg
in
aaa
mov
pop
pop
and
or
push
mov
int
pop
lods
fcomps
mov
jns
lcall
pop
mov
movsl
cmp
mov
addr16
outsb
mov
imul
jne
mov
mov
mov
movsb
add
dec
pop
push
xor
jne
mov
scas
sbb
cmc
data16
aad
test
mov
xor
in
and
push
insb
jnp
adc
outsl
pop
jo
add
cmp
sbb
test
mov
aad
imul
leave
mov
pop
or
mov
stos
loopne
addr16
in
outsb
or
adc
int3
mov
repnz
int3
jge
es
inc
test
orb
sub
cmpsb
sub
mov
mov
icebp
pop
xor
inc
xorl
sbb
shll
xor
inc
push
pusha
push
scas
cwtl
and
cmpsb
in
add
and
jmp
lcall
add
lods
clc
dec
in
and
adc
jecxz
fdivs
jg
cmp
and
nop
mov
mov
cmp
cli
xor
mov
add
mov
mov
pop
add
sub
jo
push
dec
sbb
jmp
sbb
jp
inc
cs
pushl
loope
mov
push
scas
jb
dec
push
push
outsb
pop
nop
gs
inc
stc
out
out
das
inc
adc
xlat
leave
mov
in
mov
mov
mov
enter
add
movsb
es
sbb
push
push
push
repnz
imul
push
cmpsl
jns
lea
mov
sbb
mov
movsb
dec
adc
pop
js
xchg
jns
push
stos
rolb
dec
sub
xchg
fs
jnp
xchg
mov
push
daa
dec
stos
pop
push
push
je
pop
mov
push
dec
lahf
scas
iret
cmpsl
inc
push
pop
fcmovne
dec
loop
das
imul
cmp
dec
push
outsb
mov
mov
push
pop
jnp
enter
shlb
ljmp
adc
jb
andl
mov
test
popf
das
stos
in
push
int3
sbb
mov
mov
cmpb
xchg
lods
pop
add
mov
pop
insb
sub
pop
push
out
sub
cmp
mov
ja
aam
sub
mov
int3
mov
jecxz
or
or
or
cmc
adc
lcall
cmpsl
add
push
movsb
lcall
imul
lret
popf
xor
adc
inc
mov
jecxz
pop
mov
mov
inc
adc
arpl
cmp
pop
xor
daa
adc
adc
mov
repnz
loopne
jge
mov
dec
out
jp
bound
movsl
sbb
mov
adc
pushf
or
lret
push
xchg
cmp
jne
inc
mov
xchg
xchg
cmpsb
jne
sbb
int
xchg
xor
mov
pushf
stc
xchg
jle
loop
loopne
dec
sbb
rcr
jb
movsb
xchg
cmp
imulb
mov
mov
ror
movsb
xchg
mov
leave
xchg
sbb
jno
push
fs
mov
popf
bound
inc
dec
push
push
mov
inc
subl
or
sub
shl
icebp
sub
scas
rclb
test
adc
sbb
jge
push
xchg
dec
adc
das
mov
ss
mov
orb
jg
push
fidivl
xor
lea
mov
daa
mov
orl
cmc
bound
lock
push
xor
inc
xchg
rol
mov
cmc
sbb
roll
dec
sbb
pop
add
scas
jns
jo
imul
arpl
testl
ljmp
popa
int
and
jp
jg
inc
dec
lea
jbe
loope
jcxz
decl
jge
cmovb
leave
cmp
ss
in
jbe
sti
pop
inc
xchg
loop
out
dec
adcl
mov
mov
push
push
gs
push
pop
xchg
adc
add
xchg
cmpsl
imul
mov
jno
rcl
enter
lret
or
jae
pop
cmc
popf
pop
mov
inc
mov
mov
xor
xchg
add
xor
rorl
inc
push
cmp
fnstcw
popf
add
mov
test
pop
fmuls
fstps
dec
xchg
movsb
sub
mov
dec
mov
cmp
push
jns
sbb
out
sub
scas
loop
ds
sbb
stos
ss
or
mov
jmp
inc
stos
mov
add
repz
push
loopew
das
push
mov
mov
or
bound
int
ja
and
mov
xchg
jg
pushf
sarb
mov
das
into
cmc
dec
jo
stc
in
jno
subl
sti
and
imul
call
mov
js
xor
xor
jp
sti
aad
fistps
leave
sbb
and
push
stos
decl
push
mov
mov
xor
popa
aam
push
dec
dec
push
lret
test
outsb
pop
imulb
imul
xchg
jbe
xchg
mov
sahf
je
popf
adc
cs
scas
push
add
sub
push
outsl
xchg
sub
dec
xchg
push
scas
sbb
loope
jl
pushf
pop
sbb
insl
jp
lahf
adc
mov
jo
adc
popf
push
loope
pop
cmpsb
popf
mov
aad
mov
sbb
mov
pusha
and
cmp
mov
scas
jecxz
cmp
sbb
in
xor
inc
lahf
imul
mov
aad
pop
shrb
dec
iret
mov
mov
push
mov
push
rclb
mov
into
out
shl
adc
jns
je
pushf
mov
add
mov
data16
or
hlt
scas
push
lea
fcoml
cli
jbe
setg
jle
mov
arpl
pop
ret
rclb
jmp
jae
push
cltd
test
in
into
stos
test
hlt
pop
std
jo
jno
and
cwtl
adc
fsubs
xor
xchg
in
jb,pn
or
push
fistpll
mov
cmp
data16
fnstcw
lea
loope
xor
sub
push
sbbl
insl
pop
mov
bound
pushl
push
cld
jbe
sub
inc
iret
xchg
adc
mov
jge
xor
pop
pop
addr16
rolb
and
cmpsl
add
fildll
add
xchg
int3
push
sahf
add
std
arpl
mov
dec
mov
insl
jecxz
sub
pop
ret
call
mov
bnd
fisubrl
inc
scas
mov
lcall
sbb
call
add
rorl
adc
hlt
int
in
sub
push
add
adcb
aad
xor
lock
loopne
adc
aas
push
mov
jp
sarb
pop
je
sti
pusha
mov
xchg
push
loop
daa
cmp
decl
das
iret
mov
pop
stos
fimull
ret
or
mov
fstpl
and
movsb
or
pop
lcall
sbb
movsb
shl
inc
iret
std
fnstcw
into
leave
mov
push
add
xlat
pop
pop
add
icebp
nop
lods
sahf
cld
xchg
mov
or
sub
push
ret
jle
cltd
push
sarb
popf
xchg
mov
adc
mov
jge
mov
push
nop
insl
shlb
fs
cmc
imul
xlat
jecxz
pop
sbb
xchg
xor
push
jp
fidivl
jle
cwtl
cmp
lods
sub
aas
ja
popa
mov
popf
cmp
adc
pop
lcall
in
push
xchg
mov
mov
xchg
fwait
mov
or
adc
in
inc
pop
inc
jns
sub
xchg
pop
inc
jg
insb
mov
data16
addb
divb
xchg
xor
mov
sbb
daa
sub
cmc
sbbb
popa
out
push
mov
dec
add
lahf
in
inc
lods
push
loopne
imul
pop
and
pop
and
jnp
or
loope
jmp
or
add
sbb
dec
js
xlat
enter
gs
dec
mov
sbb
sub
xchg
adc
lea
adc
cs
aam
cmp
arpl
adc
mov
cmp
mov
or
imul
mov
into
rcll
rorl
adc
mov
xor
mov
add
je
mov
and
imulb
popa
stc
sbb
sahf
pop
xchg
jno
cmc
jnp
cmp
repz
xchg
aam
aas
cmp
es
out
cmp
push
mov
rcll
adc
fwait
push
jecxz
xchg
sbb
pop
xchg
push
and
stc
cmc
in
xor
xor
nop
or
inc
pop
mov
stos
push
gs
pop
or
xchg
les
lcall
jmp
xor
out
enter
sbb
sahf
es
dec
xchg
mov
jl
pushf
jle
je
mov
pop
mov
ss
inc
fdiv
es
adc
or
pusha
ret
rorl
dec
pushf
xchg
hlt
sahf
mov
push
leave
lea
jnp
leave
jae
pop
ret
push
aas
jmp
adc
adcb
ret
and
shr
hlt
add
jne
sti
loopne
pop
sbb
sbb
rolb
sti
jae
xchg
inc
push
mov
xor
jnp
js
repnz
mov
lret
loop
jnp
lret
in
mov
mov
push
dec
mov
les
cltd
inc
cs
adc
jge
ret
sbb
cmc
aad
mov
inc
mov
cmp
enter
movsl
mov
pop
push
fisubl
and
mov
dec
push
arpl
mov
out
gs
mov
mov
dec
inc
push
and
dec
or
pop
addr16
ss
adc
mov
scas
iret
xor
inc
jne
dec
jae
and
or
lods
pop
push
jno
imul
cltd
sub
cmp
adc
jne
loope
and
loop
dec
lcall
push
xlat
inc
test
shl
mov
movsb
push
fmull
cmp
enter
leave
leave
jae
add
test
stc
inc
lcall
inc
insl
aam
xor
movsl
jb
std
mov
mov
adc
les
push
in
out
xlat
cmc
mov
mov
insb
mov
sbb
insb
mov
mov
xor
out
lret
xor
sbb
test
mov
in
scas
sbb
fsubrl
aas
mov
jp
jl
add
test
mov
addr16
and
dec
mov
in
adc
jae
xorb
insl
cltd
lcall
lock
je
xor
push
and
jg
push
cwtl
jbe
adc
enter
push
mov
xchg
pushf
or
xor
shrb
and
xor
lock
xchg
lret
adc
add
enter
mov
dec
or
jne
cwtl
ror
xchg
js
hlt
add
imul
scas
sub
idivl
fs
repnz
inc
xor
dec
imull
js
cmovs
add
mov
mov
insb
add
push
push
dec
jno
add
test
lret
inc
clc
mov
and
por
add
lock
fbstp
sbb
xlat
cmpb
out
add
sbb
push
aas
jecxz
sub
xchg
jp
rorb
mov
les
in
fnstsw
adc
xor
cmp
fisttpl
mov
pop
mov
leave
mov
xchg
or
aas
adc
and
aad
dec
loope
add
add
jp
mov
sbb
xor
mov
je
xchg
pop
mov
pop
dec
pop
loope
pop
and
pop
stc
adc
mov
movsb
add
gs
ret
out
fadds
dec
movsl
out
dec
das
fcomp
js
lcall
enter
cmpsl
jg
mov
sbb
jo
sbb
cmpsb
jp
cmc
in
push
repz
gs
xchg
repz
mov
mov
xor
pop
mov
cli
xchg
mov
push
out
arpl
rorb
icebp
pop
xor
iret
out
pop
cmp
fsubrp
xchg
dec
xchg
in
imul
cmpsl
clc
xor
fsubs
out
xchg
xor
jl
xchg
mov
std
scas
adc
and
jns
jmp
fadds
rcll
cmpsl
je
pusha
push
xchg
jle
add
add
dec
insl
bnd
daa
mov
stc
cmc
xchg
mov
repnz
lock
xor
jbe
decl
push
sbb
aad
lock
adc
adc
jmp
xchg
rcr
clc
int
pushf
and
mov
and
cmpsb
sub
fwait
loop
jns
cmp
ja
add
cmp
cwtl
cltd
sub
insb
push
add
sbb
test
xchg
sbb
movsl
fwait
not
cmp
sub
add
js
jb
pop
in
inc
adcb
and
mov
mov
push
pop
push
dec
imul
jns
jns
jbe
fstp
es
es
rolb
aad
sbb
xchg
jmp
sbb
cmpsl
adc
mov
int3
push
sub
pusha
popf
cs
dec
mov
pop
xbegin
test
jecxz
lret
dec
comiss
enter
fsubs
pop
cmp
orb
divl
push
test
test
out
adc
loope
out
loopne
in
fcoms
dec
xchg
push
push
or
sbb
shll
adc
sbb
mov
sbb
pop
call
in
pushf
popf
cmp
lea
daa
mov
xchg
sbb
outsb
jns
dec
data16
cmp
jns
call
xor
jbe
jp
inc
dec
xchg
call
jge
psrlq
into
jp
lret
sub
mov
jo
pop
or
cmpsl
xchg
subb
jmp
inc
nop
or
insb
xchg
jge
imul
push
adc
pop
rcrb
dec
outsl
shr
fwait
and
cmp
pop
dec
orb
ss
jmp
inc
test
mov
int3
and
xlat
cmc
cmp
pop
xor
sar
insb
repz
pop
cmp
mov
aaa
shll
bound
lret
je
ja
cmpsb
xor
mov
popf
popl
rcll
mov
enter
sbb
or
sbb
dec
js
mov
sub
push
bound
adc
pop
xchg
ds
mov
dec
adc
loop
mov
andl
adc
push
std
dec
add
into
out
inc
adc
aad
inc
fcmovnu
adc
stos
cmp
pop
aas
add
inc
fildl
inc
mov
std
lahf
pop
test
adc
sub
adc
or
inc
sbb
push
and
pop
loopne
notl
pop
jmp
clc
mov
icebp
pop
inc
js
mov
add
popf
mov
sbb
movb
cld
sub
dec
xchg
popa
inc
insb
jl
aam
es
sub
lods
pop
pop
pop
mov
and
mov
pop
mov
push
std
mov
mov
xor
pop
repnz
stos
sbb
adc
daa
push
push
dec
xchg
push
and
stos
mov
cld
dec
ja
add
out
ret
and
xchg
sub
mov
sub
cmp
lahf
cmp
pusha
js
stos
test
aaa
pop
ja
inc
rcl
push
pop
lret
cli
pop
shlb
out
jne
mov
push
aaa
and
sti
cmpb
pusha
and
cmp
push
or
arpl
repz
repz
out
jb
fwait
inc
mov
jmp
out
and
push
clc
gs
sub
jle
movl
outsb
int3
enter
inc
pop
cwtl
daa
data16
lret
mov
cmp
cli
push
ds
cmp
xlat
fmuls
mov
push
in
bound
loope
mov
inc
scas
fimuls
mov
call
fs
sti
mov
insl
xchg
js
mov
or
lods
mov
sub
inc
in
pop
lret
inc
mov
and
push
lret
jmp
mov
dec
outsl
sub
aaa
jge
and
cmp
out
push
push
scas
jp
dec
push
dec
popf
stc
adc
inc
xchg
lds
adc
jmp
inc
mov
cmc
xor
sti
cld
add
imul
pop
mov
mov
jns
imul
jecxz
mov
mov
mov
xchg
stos
ret
sbb
iret
dec
mov
xor
dec
sub
in
xchg
fcoms
sbb
rol
jmp
lds
fs
fbld
or
pop
jbe
call
jg
push
xchg
mov
lahf
int
or
lods
jbe
push
in
pop
ret
mov
cltd
clc
repnz
jbe
cli
push
rcll
and
pushf
sahf
xor
nop
and
aam
add
insb
ja
test
mov
lds
int3
pushf
jg
aaa
fwait
pusha
and
lods
push
or
xchg
add
scas
jecxz
stc
mov
push
out
sub
loopew
pushf
lods
cltd
jle
or
popf
jmp
push
adc
xchg
jmp
das
xchg
jne
neg
jae
fwait
shll
jne
loope
xchg
mov
fadds
es
out
or
scas
cmp
cli
xchg
and
dec
movsb
sub
ficompl
ss
push
xchg
icebp
push
jnp
or
cmpsb
push
xor
pop
sbb
lods
leave
sub
pop
pop
stos
je
push
fildl
adc
fs
mov
pop
lret
inc
push
je
cld
pop
cld
mov
xchg
or
jle
int3
ret
mov
xor
mov
or
repz
pushf
lahf
mov
pushf
xor
xchg
shrb
pop
add
icebp
or
lahf
pandn
inc
or
test
mov
inc
mov
cmpsb
enter
jae
sub
add
mov
scas
and
mov
into
inc
mov
or
xor
ljmp
repz
popf
stc
jnp
sarl
shr
ret
mov
mov
arpl
jmp
int3
movsb
fcmovb
nop
dec
xchg
pusha
mov
pop
adc
pop
sub
rcl
js
inc
pop
ret
arpl
cs
cmpsb
aas
enter
outsb
xchg
jae
icebp
sti
scas
arpl
test
jmp
inc
jnp
mov
popl
pop
fwait
mov
xor
pop
mov
pop
movsb
inc
fisttpl
or
aam
js
bound
dec
rorl
jno
cmp
or
jg
pushf
cmp
outsl
test
scas
popa
mov
lods
sub
mov
int3
adc
jmp
es
fiaddl
in
out
mov
xor
add
pop
popw
addr16
add
mov
out
shll
mov
push
lret
subb
xlat
adc
xor
imul
aad
cmp
mov
in
push
dec
push
inc
ret
sub
ja
dec
inc
gs
jbe
cli
leave
inc
insb
add
rorb
sub
mov
xchg
into
mov
jae
xchg
xchg
add
not
mov
in
add
repz
pop
insb
pushf
inc
pop
adc
test
xchg
in
in
std
mov
xor
xor
enter
jecxz
clc
inc
in
or
fs
inc
xchg
daa
cmp
xchg
cmpsl
xlat
jns
aaa
js
repz
dec
and
mov
add
push
push
xchg
bound
jmp
mov
test
insb
ficoms
push
ficomps
dec
loopne
repnz
sub
dec
xchg
mov
or
xchg
cmpsl
enter
cmpsl
mov
in
mov
sub
sbbb
icebp
int
mov
add
mov
adc
jb
stos
pop
add
mov
or
sub
sub
ficoml
dec
sbb
cmp
push
and
popf
fwait
push
and
cli
in
mov
add
subb
sti
xchg
int
pop
sub
cld
call
xor
repz
in
push
or
dec
xchg
fnstenv
test
dec
movsb
cmp
ret
and
cmpsl
sti
mov
dec
and
fs
sub
dec
fsubrs
fbld
cmp
lret
cmp
mov
pop
aaa
sbb
pop
sub
aaa
insl
mov
leave
adc
xor
out
pushf
arpl
rorb
into
pop
mov
fmulp
pusha
out
fldt
call
aas
push
push
add
out
lds
sbb
popa
jge
xor
mov
jle
mov
and
xor
jl
dec
dec
test
mov
jbe
das
loopne
cld
mov
dec
and
mov
add
leave
ljmp
sbb
pop
jle
out
dec
adc
cli
add
mov
aaa
lret
xchg
pop
cmp
mov
xor
and
rolb
cmp
loope
xchg
pop
int3
pop
in
inc
and
lsl
xlat
dec
in
test
pop
aas
dec
pop
dec
cld
jge
insb
jae
lods
adc
xchg
mov
stos
call
test
inc
frstor
pop
inc
stos
push
dec
int3
xor
aam
push
jp
dec
mov
imul
or
cmp
cld
cmp
aaa
sahf
inc
pop
sub
push
add
les
xor
repz
cld
jae
sub
cmp
pusha
repz
mov
sbb
lret
fwait
fs
cmp
shlb
xorl
inc
mov
sub
pop
pop
rcll
lcall
inc
out
imul
push
dec
aad
pop
inc
adc
in
xor
pop
push
dec
divl
pop
mov
std
mov
cmp
mov
notb
loop
pop
cmp
insb
mov
jge
aad
lock
adc
bound
cld
pop
lods
sti
movsb
rclb
and
ret
push
divl
jne
popa
or
imul
push
cli
scas
add
clc
and
mov
addl
pushf
cmp
adc
aam
leave
pushf
inc
adc
cwtl
and
dec
xor
cmp
pusha
lret
pushf
aam
mov
mov
fldenv
pop
popf
inc
cs
scas
inc
dec
xchg
mov
loopne
insl
sarl
in
mov
and
in
sub
sbbl
xchg
mov
sbb
add
xchg
aas
xor
hlt
jmp
or
cmpl
mov
aaa
push
sti
sub
cmp
pop
cwtl
mov
jle
pusha
xchg
cltd
mov
cmpsb
and
and
or
pop
movsl
dec
in
lods
popw
jno
adc
dec
sbb
jge
sub
cmp
out
jo
mov
pop
xorb
in
mov
lcall
leave
sub
data16
outsl
out
call
popa
sbb
cmp
mov
ficompl
cmp
pop
push
mov
cli
fstpt
fwait
dec
inc
or
mov
sbb
inc
push
imull
stc
and
mov
pop
jo
pop
add
and
call
ret
xor
sbb
xor
je
pop
mov
shll
cmp
or
add
mov
cmpsb
xchg
mov
mov
js
pop
cmp
or
jge
pop
add
dec
adc
divb
xlat
lock
in
mov
stos
add
push
lods
js
shrb
xlat
mov
push
ss
in
mov
cmpsl
or
jmp
mov
pusha
sbb
pop
leave
sub
push
int
push
lock
arpl
pop
in
mov
inc
rorl
mov
rol
dec
lahf
or
leave
cltd
or
jae
loop
cwtl
and
xchg
jmp
les
sbbb
push
mov
sbb
je
in
add
and
cmp
jecxz
cmp
xorb
lahf
mov
add
sarb
lret
inc
cmp
scas
pop
jne
cmp
and
pop
sub
mov
jbe
fstl
dec
sbb
dec
or
hlt
cmp
xor
inc
push
pop
sahf
lret
fs
add
loope
pop
leave
rcr
shlb
mov
mov
shlb
fwait
mov
dec
fsubrl
fwait
clc
dec
arpl
sub
push
mov
sbb
andl
cmp
movsb
jno
repz
xchg
pop
dec
push
int3
mov
sahf
dec
cli
fistl
outsb
ja
clc
xchg
and
out
pushf
out
fldcw
jmp
jo
push
and
test
pop
xor
movsb
add
mov
in
push
sbb
sub
test
int3
repz
adc
mov
out
mov
js
rclb
jno
cmp
scas
outsb
sub
pop
xor
ljmp
mov
subl
lahf
flds
stc
mov
sahf
fxch
js
addr16
pop
fs
add
pop
mov
lods
add
or
dec
mov
mov
test
jb
push
adcl
cmp
mov
cltd
lods
mov
mov
cmp
push
aam
mov
adc
dec
es
add
insl
scas
call
cmp
in
cmpsb
fs
icebp
mov
outsb
push
push
in
dec
mov
or
aam
cmc
insb
pushf
push
xor
pop
rcll
inc
imul
aam
dec
lahf
pop
int
sub
data16
ret
das
inc
sub
roll
loop
out
push
test
int3
pusha
add
pushl
gs
inc
xchg
jo
xchg
sub
mov
lds
pop
sub
push
pop
pop
push
push
sub
push
adc
les
mov
mov
inc
js
dec
aad
repz
dec
pop
add
sub
inc
shrl
cmp
movsb
popf
or
sub
mov
sbb
cmp
cltd
mov
sbb
pop
fisttpl
xchg
lds
nop
sub
lods
mov
sub
ja
cmpsl
pop
mov
or
lretw
into
mov
out
out
and
sub
jnp
cmp
dec
std
rcl
cmp
and
pushf
sbb
sbb
xlat
outsl
stos
cmc
xchg
stos
jg
repnz
dec
clc
movsb
xchg
aas
push
xchg
dec
call
jecxz
mulb
push
mov
les
ret
sub
aam
pop
ja
loopne
jmp
aaa
mov
jo
inc
jecxz
leave
add
in
sub
push
or
movsl
mov
test
jg
movsb
dec
xchg
sub
lret
aam
and
insb
lods
in
jno
inc
nop
lcall
push
pop
mov
imul
pop
jge
dec
imul
dec
push
add
fidivs
jecxz
fisubs
inc
test
out
cmc
inc
popf
cmpsl
dec
imul
mov
fidivrl
iret
shll
xchg
iret
cmpb
fstpl
daa
jne
sti
mov
mulb
adc
mov
clc
pop
mov
lahf
mov
std
int
and
ud2
test
dec
add
iret
mov
inc
and
sub
sbb
out
jg
std
adcb
aaa
addl
jge
push
mov
adc
dec
dec
ss
js
cmp
or
adc
xchg
popf
inc
or
dec
inc
lea
int
sbb
les
lods
fdivl
mov
fwait
push
jbe
sub
dec
push
sbb
mulb
jge
ss
ljmp
cmp
xchg
sbb
push
jb
test
dec
repnz
xchg
outsb
mov
call
dec
jecxz
push
xchg
fxch
jne
lret
adc
sar
sbb
and
mov
mov
push
dec
lea
xchg
test
adc
fldl
sub
push
ss
stos
inc
fwait
stc
aaa
adc
movsl
ret
and
shrl
mov
xchg
testl
jno
mov
cli
ret
inc
fwait
sbb
ds
lods
dec
push
call
add
mov
movsb
mov
int
push
sub
shrb
dec
mov
push
and
out
xor
add
push
fwait
in
pushf
outsb
scas
shl
and
idiv
int3
stos
jo
xor
inc
jge
xor
xchg
add
push
sbb
sahf
js
xchg
enter
cmp
ss
cli
mov
sub
mov
mov
xchg
push
cmp
mov
jmp
push
aaa
adc
mov
cmp
repnz
add
jmp
sbb
leave
adc
inc
leave
mov
ret
fstpl
lock
jno
andl
push
sub
jmp
xchg
icebp
into
rcrb
fldl
in
add
outsb
mov
test
pushf
rol
jbe
inc
test
pop
aas
pop
stc
pushl
nop
scas
jo
aas
adc
push
js
repz
aad
push
fldenv
loop
into
cmpsl
adc
je
jmp
outsb
lods
xchg
mov
js
aad
jo
pop
and
je
dec
mov
dec
sub
xor
stos
dec
jbe
ljmp
gs
sub
test
inc
loop
stos
lret
jg
iret
or
insb
lods
lock
lea
mov
jle
aam
scas
lds
mov
stc
repnz
enter
inc
jmp
jno
leave
sbb
lods
jo
adc
stos
dec
inc
xor
pop
enter
shll
cmpsl
push
mov
shrl
push
push
jg
pop
push
pop
xor
jp
inc
xchg
push
sub
ds
out
fistpl
mov
dec
nop
mov
pop
hlt
xchg
cltd
add
and
push
adcb
xchg
call
fs
aas
adc
clc
inc
dec
jp
pop
shrb
mov
in
test
adc
adc
mov
sar
enter
and
test
push
out
movsl
loope
pop
adc
lock
pushf
cmp
sub
and
xchg
fwait
push
mov
ja
jb
lea
sub
sub
cmp
xor
cld
xor
cmp
jo
and
push
scas
pop
and
cmp
lock
popa
and
cmpl
pop
cld
mov
mov
add
int3
add
lahf
pop
mov
xchg
xchg
and
cs
stos
xchg
add
iret
sbb
xchg
mov
xchg
xor
add
and
pusha
test
add
push
cmp
adc
pop
pop
sub
ret
inc
mov
aaa
mov
inc
sub
xchg
push
mov
andb
mov
and
adc
divb
test
lahf
pop
and
cmpsb
neg
inc
lret
out
lock
in
fisubs
xor
sub
mov
push
add
jecxz
negb
or
loop
mov
int3
js
lahf
mov
cmc
in
push
pop
fld
push
add
mov
fdiv
fimull
add
jmp
or
jecxz
dec
sbb
aaa
push
mov
dec
dec
mov
addl
stos
jbe
fidivl
jbe
inc
sub
push
sub
aaa
aam
rorb
into
push
cmpsb
pushf
call
jg
push
push
and
xchg
test
cmc
loop
xchg
sub
cld
pop
fdivrs
dec
push
xchg
mov
mov
fnstenv
stos
das
sub
mov
divb
jl
mov
fnstsw
cli
jns
rorb
add
or
lcall
scas
push
lods
mov
pop
mov
mov
fisttpll
aaa
gs
cld
sub
aas
xchg
mov
add
dec
pop
xchg
cmc
or
fistl
and
in
inc
sbb
arpl
test
push
jno
pop
push
pop
cltd
push
test
mov
inc
sbb
je
nop
icebp
xchg
fisubl
xchg
stc
hlt
cs
movmskps
lahf
imul
pop
nop
lcall
jp
negl
hlt
in
insb
and
imul
and
popa
cmpl
add
mov
mov
lcall
pop
popf
lods
aaa
rorl
stc
addb
popa
xor
push
aam
mov
mov
dec
dec
and
pop
jg
mov
jne
dec
in
mov
sbb
out
insl
lea
add
sub
mov
jg
add
and
mov
arpl
dec
cs
xor
jmp
xor
fwait
mov
sub
sbb
stc
decb
adc
pop
mov
pop
mov
out
movsl
and
lods
scas
insb
mov
sub
das
dec
push
pop
mov
stc
ret
cmp
mov
stos
test
lods
cwtl
lds
aaa
xor
push
pop
inc
xor
dec
push
lret
pop
test
jne
fildll
lods
repz
mov
test
xor
dec
clc
jo
ss
outsb
mov
insl
push
sti
test
jle
pop
and
int3
jb
mov
xchg
cltd
call
pop
lock
mov
push
xchg
aaa
sub
push
inc
xchg
mov
dec
or
jp
pushf
adc
je
jae
xchg
les
mov
lock
sub
push
cmpsl
mov
fadds
mov
or
int
xchg
push
lods
mov
add
fwait
jge
shlb
pop
gs
dec
fstpl
xchg
mov
andl
sub
mov
testl
js
mov
pusha
test
fmuls
movsl
jno
mov
lods
je
xchg
dec
outsb
xor
outsb
mov
test
cmp
aad
popa
mov
and
in
stc
ret
test
mov
rorb
xor
jecxz
mov
cmp
pop
xchg
inc
fs
pop
mov
mov
pop
frstpm(287
jecxz
xor
aam
daa
push
ret
xchg
and
aas
jge
mov
jae
mov
xchg
das
insb
cmpb
lea
sti
mov
add
movsb
pop
and
inc
aas
push
sbb
jae
mov
stc
fmuls
imulb
mov
das
xchg
dec
test
inc
push
ds
xchg
lahf
gs
cmpsl
mov
and
insb
mov
scas
add
and
cmp
in
push
insl
push
dec
fcmovu
pop
mov
xchg
clc
out
in
int3
xor
push
dec
lods
jl
mov
lret
sub
mov
imul
jnp
nop
xchg
xchg
mov
iret
xchg
frstor
mov
popf
cwtl
lcall
call
xor
insb
lcall
sub
add
mov
mov
ss
jno
gs
ror
cltd
fcoms
xchg
pop
clc
pop
jbe
sbbl
test
aaa
test
or
dec
cld
mov
adc
sub
rorb
aaa
scas
jns
or
popa
mov
inc
je
mov
aas
pop
loop
and
mov
pop
adc
in
sub
in
bound
sbb
call
mov
ljmp
push
fisubrs
xor
push
xor
xchg
xor
add
pop
mov
lods
cmpsb
inc
or
sbb
or
inc
jno
adc
adc
adc
test
sahf
add
clc
addr16
dec
dec
jns
leave
shrl
adcl
sub
in
cltd
rcll
push
dec
stos
fwait
add
mov
outsl
fs
sbb
loop
movsl
loopne
mov
sbbl
aas
cmp
ss
mov
push
imul
adc
lcall
push
icebp
mov
push
iret
jns
jno
xchg
adc
jbe
cwtl
sub
daa
fnstsw
lret
ja
inc
xchg
popf
lret
mov
push
cwtl
add
mov
in
arpl
call
icebp
ja
mov
sbbl
push
ror
jb
popa
jb
icebp
vaddsd
sbb
pop
push
jle
mov
ljmp
lods
insb
iret
rcrb
mov
xchg
push
in
repz
xchg
scas
inc
fldl
nop
mov
scas
outsb
push
stc
aaa
adc
lret
cmp
cmpb
je
imul
pop
lret
mov
jl
pusha
enter
xor
je
sti
into
push
xor
daa
movsb
inc
xor
iret
in
cld
push
sbb
xchg
out
xchg
loop
mov
fwait
lcall
icebp
stos
push
pop
xor
mov
adc
jo
or
pop
daa
sub
addl
and
iret
sti
inc
push
mov
adc
or
xchg
hlt
fwait
andl
mov
mov
hlt
daa
das
mov
push
mov
sub
jns
popa
sub
mov
enter
add
xchg
flds
lret
jno
aaa
mov
mov
dec
fldt
insl
aas
imul
bound
je
mov
xor
lods
lock
add
dec
lahf
mov
push
dec
xchg
cmp
pop
xchg
ja
sbb
jae
cmp
fucomp
movsb
and
add
sbb
adc
popa
mov
ja
push
push
test
xlat
sub
add
mov
sub
mov
mov
sbb
jns,pt
adc
mov
push
xchg
xor
test
dec
jl
out
test
or
fistps
lcall
push
jmp
mov
or
fs
cld
pop
pusha
pushf
cltd
pop
mov
cmp
lods
push
sbb
adc
and
mov
inc
aam
sbb
daa
jo
jbe
push
mov
ljmp
xchg
out
decb
test
push
fsubrl
clc
sub
loope
pop
xchg
div
inc
cmp
cmpsb
pop
mov
add
and
or
sub
jg
mov
dec
push
dec
push
cmp
add
dec
adc
cmp
mov
fadds
repnz
xchg
les
and
mov
push
aam
pop
inc
and
std
je
jo
mov
fiaddl
mov
fwait
in
das
add
pop
insb
incl
mov
fbstp
mov
sbb
cmp
jns
jae
test
mov
sub
jecxz
pushfw
mov
sub
or
outsb
push
sbb
and
push
mov
xor
pop
xor
int
add
daa
inc
xchg
orb
gs
dec
flds
inc
imul
adc
loope
nop
mov
mov
jns
push
lcall
mov
out
clc
pop
scas
cmp
mov
xor
cld
add
loop
mov
xchg
aaa
xor
mov
and
inc
fbld
lahf
rol
ss
xlat
in
push
pop
ja
cltd
jl
test
push
test
jo
sbb
popf
sahf
or
push
pop
sarb
sbb
fs
cmpsb
sub
xchg
push
insl
hlt
out
inc
mov
or
fs
adc
mov
scas
cld
mov
push
aaa
insb
fcoms
mov
out
call
mov
bound
mov
hlt
mov
xor
dec
roll
adc
mov
mov
push
sbb
push
dec
or
movsb
repz
and
or
push
add
pushf
jl
adc
mov
aam
xchg
xor
cld
and
or
pop
out
loop
and
cmpsl
push
ficomps
push
ret
pop
pop
add
dec
bnd
jge
shlb
sahf
popa
and
jns
jle
jp
and
pop
xchg
mov
add
and
hlt
lcall
and
cmp
into
jmp
cli
lahf
ret
adc
ss
jno
cmp
mov
sbb
clc
mov
sub
and
stc
repz
jno
mov
pop
jo
jp
orl
fdivrl
pop
outsb
loope
cmc
pop
push
out
mov
lahf
pop
sub
repz
ret
mov
cmpsl
mov
sub
cmpl
or
repnz
adc
insb
fwait
xor
pop
enter
push
outsb
fmuls
enter
stos
outsl
in
cwtl
sub
addr16
sub
or
cwtl
lock
add
mov
inc
push
out
pop
aam
icebp
add
xor
push
bswap
inc
daa
push
push
enter
shll
adc
push
gs
test
pop
push
imul
in
pop
mov
mov
in
or
mov
mov
add
into
xor
cmpsl
int
dec
pop
cmp
popa
hlt
jae
sub
sub
mov
cltd
sti
add
ss
ret
mov
loopne
sub
mov
outsl
cltd
mov
into
lahf
mov
mov
dec
jle
das
stos
jno
out
inc
sub
sub
ds
popa
repz
int
mov
xchg
jecxz
mov
imul
negb
leave
shll
ds
push
fs
lods
dec
std
xlat
mov
orl
pop
in
xchg
loope
imul
mov
mov
cmp
cmpsl
jo
mov
xchg
xorl
test
mov
daa
cmp
jne
adc
add
mov
gs
dec
movl
lea
push
pop
aas
inc
cmp
je
std
inc
mov
test
test
in
pop
xchg
cmpb
xor
call
or
push
add
data16
and
mul
int
pop
cli
push
add
repz
mov
ss
mov
mov
int3
out
mov
push
and
daa
push
mov
mov
testb
or
sti
jb
push
mov
push
sbb
arpl
fdivl
jle
jbe
xor
gs
push
xchg
mov
pop
test
jns
xchg
je
dec
in
add
xor
ja
mov
mov
mov
jp
cmp
ret
mov
cmp
push
push
mov
aam
mov
jl
or
mov
lcall
jae
mov
mov
push
pop
or
inc
jmp
lcall
xor
xchg
xlat
or
adc
ja
add
pusha
adc
orl
add
rolb
jl
sub
aad
lea
lods
mov
mov
pop
mov
inc
sbb
ds
adc
cld
adc
xor
popa
mov
cmp
mov
adc
fcmovnb
sub
pushf
adc
fcom
std
jmp
lods
push
fcoms
xor
mov
idiv
insb
insb
std
imul
and
jecxz
add
out
mulb
movsb
insb
test
or
ss
add
lret
jns
add
rcrl
mov
lods
sub
dec
mov
pop
push
out
mov
shll
jno
dec
and
bound
je
mul
jb
fbstp
ja
rcrb
sbb
fisubrs
subb
in
in
jnp
fsub
cmp
push
lret
and
outsl
jmp
repnz
dec
lods
mov
add
lret
pop
in
adc
insb
mov
pop
iret
fs
jb
adc
pop
icebp
scas
mov
xor
jg
out
xchg
mov
push
outsb
add
add
push
lret
add
add
fcoms
mov
scas
incl
jge
je
lret
mov
mov
mov
push
bound
cmp
mov
addr16
push
in
pop
adc
test
mov
lcall
mov
inc
lahf
shrl
repnz
xchg
pop
out
mulb
mov
pop
std
push
xchg
int
sub
pop
int3
lahf
test
int
loop
sbb
mov
xor
jmp
int
mov
sub
dec
xor
jae
mov
ja
push
jg
mov
and
add
dec
pop
fsubrl
js
xor
or
sbb
mov
pop
sub
movsb
cld
stc
lret
fmull
push
adc
adc
dec
inc
jmp
mov
icebp
lods
aam
fildl
pop
lods
sub
mov
ss
test
mov
mov
and
add
adc
ds
loop
add
stos
push
daa
adc
stc
add
call
or
add
imul
mov
arpl
sub
or
sbb
mov
xor
adc
xchg
lds
xchg
mov
lds
cmp
mov
sbb
push
jb
jmp
movsl
lea
fsubrl
dec
jmp
outsb
cltd
addr16
sahf
inc
sahf
addr16
xor
cmpb
pop
pop
outsl
scas
cmp
xlat
mov
idivl
fdiv
sti
daa
test
dec
pop
ret
orl
stos
nop
lret
and
incb
add
lock
stos
stos
dec
sbb
jnp,pt
xchg
dec
adc
mov
sbb
inc
push
cmp
mov
test
or
inc
add
mov
jbe
adc
cmp
shrl
jo
lea
mov
in
loopne
or
mov
ror
inc
sub
inc
push
xchg
xchg
push
dec
xchg
cltd
adc
call
into
nop
loop
ljmp
js
imul
sbb
rolb
test
sub
add
loope
test
jnp
loop
mov
mov
pop
add
adc
in
cmp
scas
dec
jl
fsubrp
xchg
les
sub
outsb
lds
inc
arpl
push
sub
sahf
data16
mov
adc
pop
lahf
mov
outsb
ror
pop
inc
rolb
mov
sub
and
jle
fs
dec
and
cmp
cmp
jg
push
loopne
nop
dec
jo
pop
mov
fnstcw
cmp
je
outsl
notl
sub
sti
xchg
leave
pop
roll
stos
adc
dec
lods
sbb
cwtl
loop
and
mov
jmp
cltd
lods
pop
cld
lods
insb
mov
xchg
mov
fidivs
push
rolb
repnz
and
sbb
out
fdivr
popf
ja
push
movsl
xchg
jl
mov
sahf
dec
push
int3
dec
leave
add
dec
icebp
dec
push
shrb
pop
mull
or
xchg
clc
je
mov
or
arpl
add
cmpsl
add
cmp
jae
outsb
fisubrl
sahf
mov
out
jecxz
dec
pop
push
sbb
jo
xchg
mov
adc
movzbl
fwait
loope
mov
cmp
pop
xor
orb
adc
dec
and
jbe
inc
xchg
push
cmpsb
imul
adc
push
pop
lock
clc
add
clc
pop
push
jle
gs
dec
rorl
xchg
mov
push
add
jbe
push
dec
in
das
and
mov
iret
or
icebp
lods
add
into
loopne
dec
fbld
dec
ficomps
test
mov
lock
test
es
sbb
cmpsb
into
push
sbb
pop
mov
mov
inc
jp
in
jns
aam
shrb
adc
insb
and
aad
fnstcw
adc
push
adc
inc
ljmp
fldcw
jo
adc
inc
add
pop
lea
jg
lret
jl
scas
jmp
and
sub
out
cli
lahf
fidivs
push
push
decl
pop
fmuls
testl
fs
adc
mov
inc
cmp
xor
xorl
lods
lods
pop
add
and
arpl
xchg
push
movsl
push
jle
nop
mov
xor
inc
fsub
xchg
xchg
mov
jne
jg
scas
adc
pop
xchg
sbb
xchg
push
cmp
cmp
movsl
inc
xchg
xor
pusha
and
fisttps
cwtl
cmp
in
movsb
jg
das
shl
pop
mov
cmp
sbb
cmp
push
mov
push
lahf
scas
mov
sahf
repnz
mov
cmpsl
rcl
push
popa
mov
das
dec
cmp
pop
cmpsl
ljmp
cmp
sub
outsb
jecxz
repz
les
cwtl
sub
xor
adc
adc
mov
int3
dec
orb
scas
int3
bound
dec
sub
test
mov
sbb
adc
jge
jmp
fwait
inc
js
mov
mov
and
aas
pop
clc
cmp
into
jmp
jne
popf
jl,pt
inc
int3
repz
xchg
cmp
clc
std
or
jo
lret
imul
mov
in
sbb
add
lea
pop
in
mov
add
daa
pop
cmp
popf
inc
rorb
fcompl
xor
cli
sbb
inc
sahf
daa
jge
sbb
in
jne
jne
and
jecxz
lahf
rorb
mov
pop
inc
fiadds
stc
out
xorb
outsl
shr
mov
dec
xor
mov
fcoms
bound
cmc
ja
lcall
sahf
shll
mov
outsl
dec
add
lret
jg
pop
negl
pop
fwait
mov
mov
in
rolb
andl
cmpsl
cmp
inc
push
hlt
sbb
cmpsb
mov
and
inc
stos
sub
cmp
push
mov
jnp
stos
dec
nop
enter
nop
std
lea
inc
fldcw
mov
xor
or
dec
mov
push
fmull
imul
stos
stc
mov
dec
mov
test
decl
xchg
cwtl
mov
out
out
pop
shll
sbb
pop
lods
adc
ffreep
add
push
xchg
ret
inc
ficoms
cmp
xchg
pop
cmp
push
or
jne
aad
lock
add
jno
add
push
lret
pop
stc
or
mov
test
orl
xchg
pop
pop
adc
pop
mov
add
shlb
dec
call
movsl
inc
xor
out
adc
shrb
outsl
movsb
pop
vorps
pop
or
mov
aas
call
sub
or
gs
push
icebp
pop
cmpsl
xchg
mov
mov
mov
nop
cmp
in
movsb
out
pop
lods
push
mov
les
jmp
adc
rcrb
outsb
cwtl
int3
cmp
movsl
pop
sbb
fldenv
in
and
jg
sub
pop
test
cmp
cmp
ja
loopne
mov
inc
push
aaa
add
fs
jle
shll
leave
cmp
mov
cmp
rol
fucomp
arpl
mov
fwait
xor
mov
and
cmpsb
movsb
inc
std
or
inc
pop
daa
das
outsb
sbb
pop
hlt
mov
sbb
or
call
push
cmp
pop
in
push
ret
xor
cs
pop
dec
lock
sub
scas
daa
cltd
or
and
pop
add
jecxz
jno
inc
test
jge
inc
stos
mov
nop
cmpsl
mov
das
inc
xchg
dec
xchg
push
dec
jg
add
xchg
xchg
mov
add
cmp
out
ret
lcall
adc
fs
into
push
cwtl
dec
mov
mov
pop
cwtl
cmc
xchg
ds
mov
jnp
outsl
hlt
lret
mov
insl
sbb
or
and
inc
mov
dec
outsb
jo
call
sti
aas
adc
or
push
or
ret
mov
testb
dec
pop
cmp
jecxz
sub
in
lods
mov
popf
xchg
sti
mov
clc
cmc
push
loopne
icebp
inc
pop
mov
in
in
dec
or
repnz
mov
icebp
sbb
or
pusha
mov
aam
movsb
lret
rclb
inc
lock
and
push
lret
sbb
jge
movsl
mov
pop
xor
sbb
outsb
sbb
mov
dec
push
sahf
sub
cmp
xorl
imul
xorb
divl
sub
jle
xor
fimull
push
int
adc
fs
out
and
push
xor
shl
mul
adc
jp
stc
dec
imul
jno
cli
lahf
push
push
mov
cmp
cmpl
pop
fldl
mov
cli
bound
lods
mov
add
pop
mov
sbb
pop
dec
bound
lcall
sbb
ss
cmp
popf
rcll
xchg
in
fsubl
int
sarb
outsl
nop
mov
mov
imul
adc
movb
pop
inc
addr16
mov
sbb
sub
sub
jbe
xchg
jl
bound
mov
dec
loope
add
jo
or
andl
bnd
loopne
les
sahf
imul
adc
or
cmp
sub
fisubrl
faddp
mov
outsb
push
and
sub
jl
cmpl
adc
stos
stos
xchg
ret
pop
lahf
pop
adc
xchg
fildll
add
cld
icebp
mov
push
out
gs
out
jns
ja
sarb
adc
jg
pop
pusha
xor
fidivl
inc
pop
xor
mov
or
dec
xchg
adc
jnp
push
xor
je
add
vmovupd
cs
pop
push
out
jmpw
mov
decb
cmp
sbb
rorb
inc
push
loop
daa
lret
mov
ret
add
sub
leave
mov
ljmp
xchg
and
push
nop
insl
repnz
mov
test
into
jge
mov
ja
fwait
sbb
mov
and
lahf
and
in
mov
cli
addb
imul
lea
repz
pushf
mov
sti
decb
mov
mov
daa
pop
pop
add
fs
xchg
adc
cmp
jp
fwait
aam
sti
lret
jmp
push
out
cs
cmp
mov
jno
imul
and
cmp
push
repz
int3
mov
ficoms
pop
into
fldl
mov
push
or
ret
dec
aam
sbb
stos
popa
mov
shlb
test
negl
cmp
sbb
das
lret
xchg
repnz
xchg
test
mov
mov
dec
and
fnsave
dec
stc
jmp
or
out
mov
outsl
jno
cld
fsubs
aas
lds
in
ljmp
adc
cmc
mov
stc
jmp
out
bswap
fimuls
jns
lret
pop
shlb
inc
repnz
pop
leave
movsl
cmp
into
sbb
pop
pushl
mov
lods
sub
dec
xor
sub
loope
xchg
sub
imul
xor
sub
sti
push
cmp
xor
xchg
jge
lods
xor
lods
pop
adc
cmc
leave
add
pop
mov
inc
in
dec
xor
mov
and
rorl
push
lds
sub
mov
jg
test
push
shrb
iret
and
xor
fsub
cmp
jne
push
xor
shrl
xorl
and
loop
dec
pop
push
out
push
subl
dec
pusha
mov
and
mov
jle
adc
mov
cli
push
cmp
adc
lock
test
jbe
cmp
sub
fcomp
push
jle
ror
xor
adc
mov
mov
les
outsb
jbe
mov
loop
xlat
loopne
mov
inc
cmp
push
push
rcr
aam
ja
cwtl
insb
aaa
lcall
adc
sbb
fwait
test
pop
adc
mov
call
jl
mov
adc
loop
mov
xchg
mov
sbb
add
inc
lret
in
scas
cmp
jbe
rcl
mov
std
and
leave
ss
roll
repz
cmp
hlt
jbe
divb
mov
inc
neg
ret
jl
pop
cmp
inc
out
and
mov
pusha
out
push
xor
loop
push
pop
xor
cld
lea
das
push
inc
add
inc
xor
sbb
lret
dec
xchg
gs
insb
cli
negl
or
fnstenv
xchg
ja
jno
mov
push
shll
repnz
adc
mov
jnp,pt
out
push
inc
jecxz
cmpsl
sarl
nop
jae
in
sub
and
outsl
adc
xchg
bound
cmp
mov
pop
inc
adc
nop
sbb
std
scas
add
sub
imul
jno
sub
xchg
daa
test
jnp
inc
ror
test
lea
or
shlb
add
push
xchg
stc
ret
xchg
fcom
in
repz
xchg
sbb
mov
xchg
sbb
and
jns
mov
mov
test
pop
fcoms
imul
inc
outsb
in
call
add
adc
xlat
fldcw
adc
mov
lock
push
xchg
movsb
sub
call
xchg
cmp
xor
lret
mov
mov
cli
hlt
mov
call
mov
mov
aaa
mov
addr16
sub
inc
sahf
pop
imul
testl
xchg
cli
dec
inc
jecxz
lret
call
pushf
dec
or
pop
rcrl
and
cmp
push
inc
and
mov
adcb
dec
cmp
or
jbe
inc
mov
push
or
fisttps
lods
push
test
cli
dec
imul
sahf
loop,pt
sub
sbb
negl
dec
popf
add
test
call
mov
sbb
into
js
jp
mov
xchg
sbb
ret
mov
cli
subb
les
insl
or
fnsave
fstl
adc
cmp
add
lret
movb
jno
lods
push
cmpb
mov
mov
push
inc
fiaddl
pusha
lods
lret
outsl
adc
arpl
push
out
out
mov
add
repnz
xlat
jl
mov
pop
adc
test
scas
inc
jmp
cmp
pop
jno
push
stos
and
pop
mov
adc
sti
dec
mov
sub
push
out
popa
jecxz
popf
xchg
xchg
xchg
mov
aad
or
dec
dec
cmpsl
pop
sbb
sub
leave
movsl
das
test
popa
ss
push
stc
jp
push
imulb
pop
aad
scas
xchg
movb
xlat
mov
xchg
or
jmp
xor
cmp
or
xchg
call
les
clc
mov
pop
push
push
dec
dec
mov
cmp
out
lock
mov
je
stos
mov
or
sarb
cmp
lock
mov
jne
cmp
lcall
cld
pop
outsl
bt
mov
dec
dec
popf
cmp
fs
shr
fwait
dec
mov
fdivs
pushf
xchg
sub
hlt
jge
imul
sbb
shlb
fsubrl
in
cmc
sbb
pop
dec
aam
repz
iret
mov
in
repnz
sub
jle
adc
xor
or
jmp
mov
xor
fisubrs
mov
sahf
fists
movsb
std
add
xor
test
mov
jp
adc
cmc
mov
pop
rcll
sbbb
pusha
or
adc
mov
mov
fbstp
test
fs
pop
scas
daa
rolb
xlat
dec
mov
mov
fimull
cmp
aad
xlat
fadds
xchg
stos
and
mov
inc
mov
fidivrl
sar
nop
ds
push
loope
repz
mov
scas
enter
lret
bound
pop
clc
push
clc
mov
sbbl
in
dec
addr16
in
pop
mov
and
arpl
push
sub
sarl
popa
dec
jbe
mov
cli
out
fs
jmp
jbe
add
dec
dec
cmp
xor
rcrl
out
fs
gs
add
icebp
and
sub
inc
cmp
mov
sbb
dec
ret
hlt
shll
hlt
sbb
sbb
ss
mov
jl
pop
inc
es
sbb
dec
add
aad
xchg
xor
adc
push
cmp
mov
aad
movntps
mov
orl
rol
cmc
sahf
push
cmp
int3
mov
adc
mov
or
xchg
test
gs
sahf
or
fs
pushf
hlt
inc
movsl
push
aaa
adc
xor
test
cmp
in
int3
jns
std
and
lahf
or
sbb
jmp
and
lea
into
repz
mov
stc
jecxz
lea
add
xor
hlt
jmp
out
sub
mov
dec
icebp
lret
andl
test
jnp
jp
xor
in
push
psrlw
lea
mov
mov
outsl
aam
arpl
and
inc
and
in
test
arpl
push
cmpb
mov
in
test
jecxz
and
fisttps
and
mov
outsb
imul
mov
xor
push
sub
subb
jae
repz
pop
xchg
es
out
arpl
testb
adc
push
push
pop
jno
scas
sti
imul
push
ss
pushf
add
jno
leave
xchg
in
pop
dec
aas
pop
out
gs
fcompl
nop/reserved
pushf
push
jmp
inc
mov
lret
in
cmp
cmp
loop
popa
mov
xor
mov
rorb
push
adc
jnp
xchg
ja
mov
movsl
mov
or
mov
aas
push
leave
cwtl
mov
dec
pop
es
mov
xchg
sti
push
data16
or
mov
outsb
adc
sbb
movsl
aam
sahf
cmp
sbb
stos
add
call
ljmp
add
call
pop
int
arpl
addr16
cmp
inc
jbe
sub
add
xchg
dec
dec
mov
insb
sub
sub
fimuls
dec
sbbl
nop
pop
ja
sti
inc
add
call
loope
mov
dec
pushf
dec
popa
mov
aas
xchg
sub
cli
fimuls
stos
xor
lret
add
add
imulb
jecxz
sbb
jbe
pop
mov
add
sub
call
cmp
outsl
adc
adc
lock
cmp
lret
jg
mov
insl
cmp
inc
loope
mov
inc
mov
mov
inc
cmp
int3
lahf
pop
push
bnd
outsl
hlt
mov
pop
jle
out
add
pop
jge
loop
add
push
pusha
cltd
push
jecxz
push
mov
mov
xchg
push
add
je
lret
enter
add
fdiv
rcl
fbld
insb
sarb
mov
iret
and
sbb
jecxz
sbb
aaa
fdivrs
jmp
in
mov
imul
xchg
lods
xor
sub
jne
scas
lret
mov
psubw
push
mov
pop
xchg
daa
shrb
shll
fldcw
mov
movsb
pop
xor
sbbb
mov
mov
and
movsb
mov
jne
data16
stos
ja
jo
jne
and
stos
dec
push
repz
bound
cmp
xor
jp
push
cmp
jnp
in
fcmovb
cwtl
shlb
adc
push
cs
adc
jl
outsb
jns
movsl
push
pop
adc
cld
jns
dec
sbb
xorl
xchg
or
jle
mov
push
or
pop
mov
shlb
movsb
mov
insl
outsb
or
push
in
inc
xchg
es
push
fdivrl
jle
and
mov
lds
arpl
fldt
sbb
sbb
mov
imul
ret
xchg
int3
mov
xchg
mov
cld
pop
pop
mov
rolb
test
push
or
loope
push
addl
add
sub
imul
or
sub
jecxz
das
frstor
cltd
mov
add
enter
add
xchg
xchg
jmp
sqrtps
xchg
insb
nop
mov
dec
stc
cmp
cmp
cmova
imul
lret
add
lret
jbe
stos
mov
cmp
shlb
or
sbb
xchg
shrl
mov
sti
xor
scas
xlat
scas
add
cmpsl
add
fs
jne
mov
call
stc
xchg
imul
xorb
lret
xor
cmp
xchg
pop
jecxz
lret
es
jmp
cld
sub
js
pushf
cmpsb
call
es
lret
pop
imul
push
jb
pop
movsl
std
sub
or
and
add
push
or
leave
ret
stos
loop
mov
fcmovne
mov
pusha
and
pushf
mov
sbb
cmp
xchg
insl
sahf
std
inc
adc
imul
test
push
sti
test
and
cli
dec
jae
inc
negb
test
mov
movsb
sbb
mov
or
xchg
sbb
push
adc
cmp
xlat
cmpsb
mov
or
sub
hlt
call
fyl2xp1
cmp
popa
repz
out
xchg
scas
xor
jge
pop
repz
pop
mov
test
add
test
test
bound
and
nop
cmp
bound
mov
adc
outsb
sarb
lods
faddl
push
sbb
mov
dec
or
jl
or
dec
cmp
push
lods
icebp
lcall
movsb
dec
test
mov
lods
sbb
test
push
sbb
mov
sbb
neg
test
mov
ss
popf
and
ret
mov
xchg
adc
pop
jno
add
add
jl
fistpl
sbb
adc
clc
pop
pop
jle
and
xchg
in
adc
mov
mov
push
or
imul
jns
jae,pn
sbb
int
push
or
aas
testl
add
out
or
aad
push
je
and
add
xor
loop
pop
mov
lods
inc
loope
daa
xchg
xchg
mov
xchg
cmpsl
cmp
mov
mov
pop
outsl
lcall
loopne
sarl
add
sub
inc
fcmovnb
sub
cmp
pop
mov
mov
xchg
push
push
adc
das
stos
or
mov
in
aaa
stc
cli
bound
pop
jne
dec
les
pushf
popa
ret
cltd
mov
pushfw
ljmp
mov
andb
or
dec
mov
cmp
imul
inc
adc
pop
nop
or
jle
or
sub
in
dec
push
ret
aam
std
inc
inc
cmpsb
push
imul
push
add
or
inc
cmp
xlat
negb
push
pop
push
mov
xchg
int3
movsb
scas
ja
pop
lds
icebp
mov
adcb
imulb
icebp
inc
adc
daa
sub
pop
out
andb
inc
in
inc
pusha
cs
mov
and
aad
or
mov
dec
shr
test
sub
xor
jle
mov
je
push
xor
mov
sub
movsb
xlat
outsb
stos
mov
addr16
pusha
pop
pop
shll
mov
ljmp
sbbb
fptan
jmp
daa
push
jbe
sbb
xchg
rclb
and
ficoms
push
add
mov
mov
mov
dec
andb
pop
lret
push
inc
inc
lcall
xor
stc
or
rcrl
jbe
jb
mov
sub
loop
jbe
test
popa
outsb
imul
jecxz
mov
inc
in
cld
in
dec
sar
lds
int
mov
lds
pop
mov
cwtl
pusha
xor
fxch
mov
inc
pop
add
inc
mov
shr
insb
lcall
mov
xor
and
rolb
cmpl
xchg
pop
loopne
lret
ficompl
ljmp
call
cli
inc
ficoml
xor
fs
ret
push
out
push
scas
shrb
lock
jno
or
std
cmp
fucomp
jle
dec
sti
sbbl
sub
pusha
loope
push
mov
lea
scas
rcrl
inc
fwait
pop
subl
pop
stos
cmc
jb
inc
or
mov
aaa
pop
adc
add
sti
mov
dec
in
clc
lret
sub
push
push
rolb
shr
fisubrs
das
jns
push
mov
clc
ljmp
pop
xchg
mov
testl
gs
dec
push
loop
in
mov
dec
push
push
in
xchg
pop
dec
shr
mov
jo
pusha
mov
push
xchg
sub
scas
dec
loope
pop
out
mov
pusha
pop
push
imul
or
lahf
sahf
insb
insb
push
dec
sbb
lods
pop
outsl
jge
mov
iret
mov
pop
pop
lods
in
das
ljmp
pop
push
fdiv
aam
inc
xchg
shlb
push
or
push
add
dec
mov
adc
pandn
xlat
popf
fdivrl
mov
push
and
int
xlat
das
outsb
je
nop
dec
xchg
or
jae
les
add
pop
and
inc
jg
mov
out
je
xor
mov
dec
fistps
scas
mov
pop
dec
dec
jbe
cmp
pop
and
jl
xchg
icebp
lret
ds
ret
dec
sub
xchg
ljmp
jmp
push
fisubs
adc
popf
xchg
inc
gs
and
or
jp
adc
loop
ret
sub
pop
in
fwait
scas
cwtl
inc
jmp
dec
inc
mov
mov
push
mov
ss
scas
inc
jl
cmc
rcr
lcall
lret
xorb
push
movb
neg
rcr
jle
or
dec
sbb
push
ficompl
jg
mov
or
mov
push
jbe
push
add
or
enter
int
push
andb
push
mov
mov
xchg
xor
in
sub
scas
adc
xor
les
mov
sbb
pop
cmp
mov
push
fcompl
cmp
jp
ret
dec
mov
test
and
test
prefetcht2
sbb
jae
jnp
scas
sahf
adc
dec
insl
out
in
dec
ja
inc
out
jle
push
outsl
xor
outsb
test
inc
jg
mov
daa
daa
or
bound
xor
push
and
push
shlb
push
dec
mov
push
xchg
sbb
inc
add
mov
movsl
xor
cli
andl
mov
push
and
inc
lahf
test
add
pusha
stos
scas
jge
or
mov
arpl
ret
xlat
cs
pop
cmp
lock
add
ficoml
add
xchg
int
adc
mulb
jl
cli
loop
shrb
sarl
xor
std
mov
test
fildl
sbbl
xor
or
lcall
out
inc
mov
dec
fnsave
jb
mov
inc
cmpsl
push
rol
mov
out
xchg
and
or
subl
add
push
mov
daa
jmp
lds
pop
lods
sub
cmp
push
sub
push
push
js
mov
cmp
addb
dec
xchg
push
je
paddw
push
pop
lds
es
inc
imul
ds
mov
ja
and
movl
xchg
xchg
repnz
inc
sbb
inc
xchg
ljmp
data16
cmc
es
sub
stc
pusha
dec
xchg
ret
inc
mov
xchg
pop
int3
inc
mov
cwtl
mov
push
ja
xchg
out
insb
push
cmp
mov
shlb
sbb
jl
pop
repnz
mov
pop
gs
movsl
das
cltd
call
inc
adc
xor
in
xorl
pop
rcl
pop
dec
aas
add
dec
dec
cmp
fwait
xchg
pop
mov
lock
fsts
iretw
xchg
imul
ljmp
aam
imul
leave
pop
das
or
inc
ja
sub
cwtl
pop
popa
daa
sub
cmc
inc
mov
pusha
cmp
xor
push
sarl
inc
stos
addr16
xchg
jg
inc
je
jae
xacquire
mov
js
pop
dec
test
and
mov
orb
movsl
or
les
dec
pop
mov
or
sbb
mov
mov
stos
inc
jns
dec
xor
mov
pop
aas
sub
xor
rcrb
pop
xor
cmp
gs
xlat
sbb
push
mov
fcomp
cmp
push
xor
data16
sbb
cmp
jp
jle
adc
push
jno
idivl
mov
mov
fidivs
stos
push
lea
and
int
push
push
jp
mov
lret
mov
add
in
jb
xor
or
mov
mov
mov
test
add
add
xchg
aaa
cld
push
mov
int
into
sub
test
arpl
fs
aaa
mov
cmp
dec
arpl
mov
mov
inc
dec
cmc
repnz
cmp
or
inc
mov
sub
cmpsl
arpl
dec
mov
in
aam
adc
ja
sbb
lea
aaa
fstpl
fidivl
sbb
fldcw
cli
scas
mov
add
adc
mov
je
or
cmc
clc
test
adc
xchg
clc
fcomps
jne
or
outsl
mov
xor
movsb
test
pop
add
ds
xchg
in
pop
int
cs
fstl
fstl
mov
pop
stos
or
lcall
push
inc
mov
sub
or
mov
xor
cmovle
mov
stos
push
xchg
adc
lods
or
jle
add
mov
sbb
popa
ret
aad
pop
jle
fwait
push
pop
clc
push
aas
or
out
push
imulb
xchg
pushf
cld
cltd
pop
sub
cld
sbb
or
fsubs
xchg
lods
sub
aaa
mov
mov
in
iret
mov
test
push
lods
ja
cli
pop
add
pop
add
jo
lock
das
and
dec
fsts
push
mov
scas
mov
test
adc
inc
xchg
call
and
pusha
cmp
pop
lods
cmpsb
xor
and
jo
jle
sub
sarl
cmc
mov
and
push
loope
xor
pop
mov
nop
jae
loopne
movsl
rolb
mov
aas
sbb
sub
fsub
in
inc
outsl
mov
pop
sub
in
andl
sti
dec
incl
add
orb
xor
and
test
add
enter
mov
movsl
out
or
out
xchg
push
nop
mov
or
int
or
loopne
mov
jecxz
repnz
decb
pop
add
mov
cmp
jnp
into
push
es
aaa
pop
ds
fnstsw
in
movnti
inc
in
ds
mov
inc
mov
sbbb
daa
adc
push
insb
das
fmulp
je
call
dec
pushaw
adc
push
adc
test
add
xchg
cld
inc
pop
frstor
xchg
pop
sub
aam
mov
xchg
push
dec
data16
jo
xorb
aad
test
or
ja
int
inc
push
push
sub
test
cs
out
and
xchg
mov
les
popa
xor
push
jns
andl
and
hlt
adc
pop
lahf
jno
sub
add
and
mov
jb
sahf
ret
fnstsw
arpl
jo
loopne
xor
mov
or
aas
cwtl
outsb
ret
push
aaa
jno
in
bound
sbb
push
fldcw
push
xchg
jmp
xor
imul
mov
hlt
setb
movsl
ret
add
dec
ss
push
and
outsb
clc
rcl
jecxz
pop
lds
cmpb
or
sub
pop
pop
out
sbb
test
xor
jb
fwait
imul
inc
and
cmp
mov
rcll
jo
loop
xor
ror
mov
jg
dec
pop
pop
clc
mov
jecxz
pusha
in
sub
push
jp
and
fiaddl
sub
imul
fwait
iret
in
sbb
stos
xchg
adc
fidivrs
and
jecxz
imul
and
imul
mov
cmp
pop
sbb
pop
pusha
push
out
je
cmp
repnz
push
aas
pushf
xor
lods
out
adc
inc
xor
inc
mov
push
jmp
fstl
test
mov
xor
aad
xchg
jecxz
ds
mov
sub
push
imul
popa
les
pop
lahf
xchg
aaa
aaa
or
daa
pop
inc
pop
out
int3
inc
xchg
pop
cmc
adc
adc
into
and
xor
xor
mull
push
push
fdivl
and
mov
ss
sub
xchg
rcrb
sbb
das
out
pushl
adc
dec
cmp
cwtl
push
lods
bound
add
sub
mov
mov
push
cmc
loopne
pop
jle
ja
cwtl
rclb
adc
lods
insb
leave
push
rorl
adc
inc
pushf
gs
push
sbb
xchg
jmp
das
inc
or
in
add
adc
and
jae
testl
push
roll
mov
test
sub
xor
and
mov
pop
sti
xor
stc
xchg
push
jmp
push
outsb
leave
mov
sbb
add
loopne
push
mov
adc
mov
adc
lcall
imul
loop
cmp
sbb
pushf
insb
sub
and
shlb
pusha
es
int
es
testb
pop
or
push
inc
lock
stc
mov
push
cmp
pop
mov
or
add
xor
testb
mov
in
setnp
test
push
adc
or
pop
mov
or
jecxz
mov
cmc
xor
testb
pusha
cld
jg
jno
jne
cmp
sbb
adc
aad
inc
ja
inc
push
xor
into
mov
xor
mov
jne
or
push
xor
cmc
adcb
sti
pop
jecxz
xor
or
pop
push
les
sbb
ret
xor
aad
push
cmpsl
shrb
lock
ljmp
sub
jmp
fstps
cld
insb
mov
fstl
test
mov
jbe
notb
xchg
cwtl
xor
ret
jo
and
pushf
sub
mov
test
test
scas
lretw
repnz
inc
test
cli
mov
jp
inc
inc
lods
lret
cmp
cmp
popa
add
into
dec
xor
ds
inc
cld
lods
ljmp
mov
sbb
sub
loop
ljmp
adc
lret
dec
pop
cmp
movsl
lret
cmpsb
stos
sbb
in
xor
and
xlat
adc
out
leave
aas
xorl
in
cmp
inc
in
sbb
push
and
out
cmp
popa
sbb
outsl
push
xchg
jg
negl
and
add
adc
xchg
xor
gs
or
lock
inc
and
push
jnp
pop
mov
jmp
xor
fnop
mov
jge
xor
out
insb
shrl
mov
pop
inc
addr16
mov
mov
mov
sub
rcrl
fmull
shr
cmp
in
fwait
xchg
push
bound
enter
mov
inc
pushf
ret
inc
cli
cs
out
dec
push
jns
outsl
lahf
out
inc
outsl
mov
mov
pop
leave
sub
add
in
into
movsl
and
lods
jmp
loop
xor
sub
int3
inc
mov
rcrl
push
xor
subl
mov
lds
cmp
data16
mov
mov
loopne
inc
mov
cmp
cmp
and
je
jb
dec
xor
enter
es
sahf
sbb
push
das
or
sarb
mov
adc
movsl
roll
fldenv
cli
loopne
je
repz
or
sbb
pop
shrl
ljmp
js
sbb
out
jae
notl
sbb
jb
jae
fxam
adc
pusha
push
pop
fcomps
pop
inc
lret
xchg
and
push
in
decl
pushf
mov
adc
mov
xchg
inc
int3
inc
test
popa
shr
scas
xchg
jne
cmp
into
rolb
stc
dec
push
mov
notb
add
stos
es
test
cmovo
popa
adc
and
leave
mov
pop
dec
push
rorl
dec
push
aam
scas
stc
repz
scas
add
pop
push
out
add
int3
dec
sahf
icebp
dec
xlat
cmc
xchg
fdivs
push
jg
sub
and
pop
pop
testb
push
fisttps
insl
out
jno
xchg
dec
test
mov
iret
sarb
imul
pop
dec
dec
pop
test
xchg
pop
scas
aaa
loop
lock
or
adc
lea
jne
xor
addr16
dec
js
sbb
outsb
rcrl
lea
push
negb
xor
mov
js
in
sti
xchg
in
pop
sub
in
test
inc
rorl
je
daa
fadd
scas
js
cs
push
xchg
pushf
inc
mov
aaa
mov
jg
aam
push
mov
push
fwait
mov
hlt
mov
push
sbb
fsubrs
into
jne
jecxz
ljmp
xor
xorb
cmpb
mov
sub
sar
lods
and
fsubrs
es
rorb
cltd
xor
call
iret
int
pop
pop
add
mov
push
test
pop
jb
xor
rolb
fimuls
cmpsl
jg
jecxz
ljmp
rcrb
test
jnp
sbbb
shll
mov
aaa
and
loope
out
mov
jns
mov
dec
shlb
jmp
pop
and
cli
or
inc
les
addl
mov
sub
cmp
add
pop
sub
jns
cmpb
cmp
neg
cmc
ss
push
xchg
push
stos
call
inc
push
test
dec
pop
xchg
ja
out
cmp
pop
cmp
inc
in
adc
mov
ret
jne
xchg
jo
int
mov
and
adc
in
pop
push
ret
sub
arpl
decb
movsl
sub
pop
xlat
and
enter
aam
sub
mov
lret
movsb
jg
int
pop
push
cwtl
jae
loope
dec
sub
sub
mov
jg
pop
leave
ss
cli
and
sub
iret
lods
pop
js
hlt
xor
aad
jno
mov
lods
jecxz
cld
mov
jge
adc
daa
cmc
pusha
ja
cmc
mov
dec
xchg
cmpsb
aam
scas
lea
push
sbb
imul
icebp
sbb
popa
cmp
negl
mov
in
lods
js
fstps
xor
mov
inc
xchg
xor
mov
push
inc
inc
mov
cwtl
inc
dec
dec
mov
pop
lods
mov
divl
out
mov
in
js
xchg
jnp
mov
or
push
cli
lods
xor
or
cmp
sbb
xchg
enter
jns
mov
negb
and
mov
cmp
and
adc
mov
sti
btr
mov
push
or
xchg
jno
ss
movsb
js
cmp
outsb
and
mov
jp
dec
addr16
jno
test
ja
xor
repnz
xchg
cs
mov
loop
sub
inc
ror
xchg
adc
les
jb
pop
mov
fildl
aam
rcr
adc
call
and
addb
nop
lea
dec
int3
cwtl
sbb
pop
add
pop
jb
andl
adc
orb
fiaddl
imul
test
in
in
stos
jg
jge
stos
mov
cmpsl
ja
mov
add
cmpsb
jle
icebp
out
xchg
or
popa
enter
out
push
jbe
inc
fcomps
enter
mov
adc
sub
mov
or
xor
mov
mov
out
jp
rcll
out
in
xor
ret
aas
adc
lods
jo
sarl
adc
daa
pop
aad
popf
xchg
fwait
adc
jo
jp
sub
pop
mov
and
cmpsl
xchg
push
out
push
xor
insl
sbb
imull
add
or
ds
xlat
cmp
dec
stos
lcall
sarl
or
cmpb
dec
call
xchg
repnz
inc
mov
ds
cli
and
iret
xor
andb
out
adc
sub
pop
sub
gs
add
rorb
iret
add
dec
rorl
outsl
mov
mov
push
into
mov
mov
aas
inc
jp
and
sbb
test
dec
fidivl
stc
insb
dec
sub
add
pusha
rol
mov
popa
push
dec
sbb
pop
leave
sbb
cwtl
daa
xchg
sub
add
movsl
cmp
sbb
rorl
pcmpeqb
or
xchg
mov
lahf
jno
data16
lods
push
fidivs
das
and
pop
addr16
or
inc
xchg
in
ficoms
and
sub
mov
nop
xchg
push
pusha
das
leave
and
add
pop
or
and
ds
gs
and
sbb
cmpsl
and
or
bound
scas
fldt
je,pn
push
shrl
mov
sub
sbb
add
popa
lret
stc
or
aad
dec
add
adc
sub
lret
pushf
notl
fwait
push
out
insl
lock
mov
and
fsubrp
jmp
push
jbe
iret
cmpsb
push
xchg
aad
outsl
lea
notb
fwait
push
fst
inc
dec
mov
xor
sbb
mov
mov
test
pop
lds
bound
mov
hlt
arpl
repnz
fdivrs
cli
mov
inc
sbb
push
mov
xchg
lock
push
mov
jne
adc
frstor
jns
or
mov
dec
notl
add
leave
gs
lock
dec
movsb
nop
and
add
mov
or
cltd
icebp
adc
mov
or
xchg
shrl
in
sbb
or
or
aaa
xlat
fcmovnb
frstor
and
push
adc
leave
or
sub
xor
in
rol
jo
jae
pushf
js
mov
aaa
lock
pop
push
cmp
jg
insl
scas
out
repz
mov
movsl
outsb
or
sbb
mov
pop
mov
mov
sbb
int3
outsb
ficoml
test
sbb
cmp
lds
pop
or
addr16
mov
fnstenv
pop
push
push
enter
in
mov
or
adc
mov
out
mov
hlt
daa
leave
pop
mov
dec
push
js
shll
negb
fadd
cmp
push
xor
xor
and
jp
and
xchg
hlt
and
xchg
stos
push
pop
pop
loop
or
or
mov
mov
adc
jge
pop
imul
or
push
push
jmp
rorb
es
popa
mov
jnp
sahf
int3
cmpsb
xchg
pop
test
fsubrs
aaa
jle
mov
jb
mov
push
imul
mov
in
out
xchg
mov
out
je
cwtl
les
push
push
orl
cld
sbb
jmp
into
push
mov
bound
sbb
negl
arpl
mov
push
test
scas
shll
xchg
cmpsb
sbbl
mov
fsub
pop
clc
push
movb
jl
xor
fdivl
xchg
xchg
adc
and
dec
ds
inc
cwtl
call
pop
push
arpl
xlat
cld
jb
add
rclb
xchg
or
push
shr
pop
sub
out
lret
push
mov
aam
lahf
insb
mov
xor
mov
xchg
in
movsb
dec
fistps
lret
clc
mov
xchg
push
mov
dec
cmpsl
stos
sbb
jb
push
clc
or
xchg
mov
sbb
xchg
ds
or
cmp
popf
and
daa
and
pusha
popf
stos
or
stc
lsl
inc
arpl
and
push
mov
cmp
loope
loop
aad
clc
sub
inc
je
push
cmp
mulb
aas
outsb
out
mov
repnz
cmp
mov
xchg
pop
lret
sbb
fcomi
add
or
cltd
je
add
dec
addr16
test
xlat
repz
stos
ret
aam
cmc
cmp
push
ret
into
sub
push
jae
mov
stos
mov
fwait
push
movsb
fbld
jo
and
push
lret
enter
pusha
loopne
or
mov
icebp
sbb
ljmp
xchg
mov
repz
or
xor
adc
push
pop
and
push
sub
xor
lods
xor
test
mov
int
xor
mov
adc
jp
cwtl
or
ja
mov
mov
rorb
mov
push
cmp
cmpsb
xor
jbe
mov
mov
lock
xchg
cmp
add
subb
xchg
xchg
nop
out
xlat
inc
cmp
data16
lods
test
movsl
inc
in
mov
xchg
ja
xchg
xchg
adc
leave
cld
addr16
nop
cmp
je
or
mov
dec
mov
lcall
fadd
shll
and
test
pop
addr16
pop
fimull
jmp
mov
pop
xor
ds
lock
lods
in
xor
scas
test
cli
lret
jne
push
pop
sbb
sbb
mov
jg
xchg
add
pop
cmpsl
insb
outsb
cmp
xchg
sbb
mov
jns
adc
fcmovnbe
les
dec
lcall
push
inc
mov
sub
jp
jge
pushf
push
mov
jne
and
cmpb
sahf
fsubrs
fnsave
cmpsb
test
dec
movsb
xorl
cmp
sub
out
fnstsw
cmp
ljmp
or
dec
pusha
dec
push
jb
outsb
in
jge
in
pushf
adc
fistl
fs
sub
lcall
jnp
scas
inc
mov
repz
cmp
insl
mov
loop
mov
test
shl
xchg
sub
loop
stos
das
fsubrs
push
add
mov
mov
sbb
pop
pop
add
adc
sub
fistpll
insb
mov
xchg
ljmp
cmp
dec
jle
out
jecxz
jno
fisubrl
mov
roll
aam
in
push
cs
adc
mov
shl
jg
mov
dec
aas
arpl
xchg
xchg
cmp
out
imul
push
pop
in
push
pop
mov
cli
cli
jmp
push
scas
cmp
loop
add
and
sub
sub
popa
push
mov
and
sub
cmp
jno
xor
fwait
stos
icebp
outsb
adc
rcr
xor
pop
test
pop
xor
addl
add
mov
push
xchg
lea
xchg
cmp
sbb
hlt
and
ret
ljmp
popf
cs
or
and
movsb
insl
in
stc
jne
xor
cltd
dec
cmp
in
aad
xchg
test
xor
imul
sahf
xor
lods
rolb
jecxz
adc
aam
fptan
xchg
mov
adc
sbb
lds
mov
push
hlt
hlt
pop
jge
push
movsb
jmp
jl
xchg
jmp
inc
push
aas
jno
xchg
test
lods
mov
dec
fs
into
xor
dec
lcall
mov
shll
inc
mov
cli
fsubs
push
mov
xor
data16
sub
inc
sub
arpl
dec
sbbb
pushf
jb
pop
test
imul
cmp
imul
jno
adc
xor
cmc
inc
jge
scas
jmp
pop
lods
sbb
pop
pop
ror
inc
loope
lcall
adc
lret
packuswb
loope
mov
mov
mov
adc
nop
sbb
jge
scas
push
push
iret
imul
clc
cmp
jmp
ds
in
mov
insb
pop
fcompl
and
dec
jbe
and
dec
jp
out
mov
xor
out
inc
or
fs
jnp
lock
ret
out
mov
fistl
push
sahf
sub
stc
pushf
pop
jo
test
jae
push
cwtl
xchg
cmp
fbstp
push
mov
xorl
neg
mov
mov
lea
aad
in
fisttps
fsts
xor
jo
cmc
ja
lock
data16
push
repnz
into
push
ja
xchg
cmp
inc
xchg
es
dec
sarb
push
inc
jmp
stos
xor
cmp
fmull
inc
fiaddl
popa
mov
dec
movsl
and
or
aas
fiadds
mov
mov
data16
jecxz
mov
adc
lahf
out
pusha
popa
cmpsl
or
cltd
cmp
dec
movsb
xor
mov
mov
daa
aad
ret
xchg
out
cmp
push
iret
fnstenv
add
adc
inc
inc
cmpb
cmp
xor
call
jo
add
sbb
jbe
arpl
cltd
loope
divl
rorb
or
test
lock
inc
mov
faddl
dec
in
sarb
sub
lods
into
inc
leave
cmpsl
sub
out
push
add
xchg
adc
in
or
pop
pusha
mull
inc
pop
mov
inc
mov
inc
sbb
ret
jb
mov
fsubl
xor
push
sahf
dec
ss
sub
mov
dec
movaps
andb
ja
mov
xchg
push
push
jae
mov
popl
test
mov
test
jp
mov
sbb
pop
adc
test
and
out
nop
and
xor
cld
mov
pop
cmp
testl
stos
js
stc
out
test
int
imul
pop
push
mov
mov
push
leave
xchg
add
test
aad
bound
test
push
pop
out
imul
aas
mov
jle
insl
shrb
xor
stc
out
add
add
popl
or
jnp
dec
pop
pop
xchg
lods
stos
repnz
mov
repz
pop
sti
int3
pop
cli
cmpsl
mov
es
ret
jbe
xchg
add
sub
cltd
daa
push
pushf
sbb
adc
xchg
imul
xchg
fwait
cmp
pop
push
lret
xchg
mov
mov
push
mov
xchg
sbb
mov
fmuls
push
mov
jecxz
fldl
pushf
das
rep
test
xchg
pop
outsl
and
add
fbstp
inc
inc
jecxz
inc
daa
cmc
outsb
jl
jae
inc
sbb
and
jb
es
inc
mov
arpl
cltd
and
xchg
jmp
adcb
add
or
iret
mov
jg
xor
mov
sub
ja
rorl
mov
sbbb
sbb
iret
stc
hlt
sbb
stc
xchg
sub
sbb
xchg
rcrl
cmp
add
cmp
jne
inc
and
fnstcw
in
push
fwait
cs
test
jmp
xchg
js
mov
push
mov
pop
jno
scas
xor
fsubl
dec
fistpl
add
mov
or
and
fnstcw
jp
inc
dec
ret
inc
and
sbb
gs
ret
and
pop
cmp
rclb
andb
popa
test
in
push
inc
insl
mov
jmp
hlt
fs
lods
inc
and
pop
pop
ss
int3
mov
jecxz
sbb
in
jae
cltd
adcl
insl
dec
mov
jle
mov
js
or
xor
cwtl
pop
sbb
or
cbtw
js
in
push
xchg
test
adc
mov
fdivl
leave
mov
lods
sarb
xor
bound
add
movsb
jge
lds
dec
out
into
mov
test
icebp
repnz
push
jno
stos
xlat
lock
pushf
pop
or
xchg
sub
jle
fisttpl
popf
xchg
loopne
push
fs
rclb
adcb
test
cmp
xchg
push
cli
aad
cmc
mov
gs
sti
jp
gs
aad
mov
push
jp
xor
popf
es
popl
push
adc
or
cmp
aas
and
aam
push
mov
jb
mov
xlat
jae
inc
jnp
ds
cmpsb
mov
pop
or
fucomip
jno
mov
adc
xorl
dec
adc
mov
shr
jne
inc
or
outsb
sahf
dec
aaa
inc
lret
std
in
das
cli
in
popa
jg
ss
mov
pop
inc
inc
insl
cltd
inc
inc
dec
mov
push
aam
daa
loop
pop
shlb
pop
inc
xor
mov
xchg
fcoms
mov
jl
mov
out
mov
jmp
adc
and
jae
or
insb
mov
mov
imul
pop
push
inc
shrl
ljmp
xchg
pop
mov
add
push
cmp
dec
lods
pop
lret
xor
sbb
cmp
sub
outsl
daa
add
add
outsl
push
popa
dec
sbb
std
out
lods
push
int3
nop
test
xchg
popa
mov
inc
out
jl
insl
call
pusha
sbb
sub
mov
out
lods
in
notl
testb
in
imul
mov
push
jp
push
in
jge
push
mov
das
lods
test
test
or
imul
pop
and
adc
inc
mov
imul
daa
mov
adc
push
repz
ficoms
sbb
cli
cmp
test
movsb
sub
les
mov
lahf
ja
xor
lahf
es
xor
sti
test
shr
pop
out
xlat
adc
fsubrl
pop
mov
push
pop
and
imul
mov
mov
outsl
pop
outsl
push
push
pusha
mov
decb
xchg
scas
or
in
scas
popf
sub
out
adc
xchg
aam
pusha
push
mov
stos
test
dec
cmc
out
iret
xchg
icebp
xchg
inc
js,pt
in
fdivrs
push
lcall
push
stc
xchg
aaa
xor
mov
repz
into
movsb
lock
push
test
xor
stc
pop
jb
mov
fidivs
mov
mov
addr16
pop
arpl
sbb
xchg
in
fidivs
cs
mov
push
fdivs
or
mov
add
adc
repz
cld
clc
inc
add
aas
cmpsb
xchg
xor
and
push
xchg
outsl
cmp
jmp
pop
call
jg
jno
cld
inc
call
test
cmpsl
scas
test
jl
xchg
sub
mov
pop
insl
cmp
push
cli
sub
test
cmpsl
mov
jns
lcall
aam
pop
clc
jae
cs
xchg
fsts
push
shlb
push
mov
xlat
push
mov
jg
bt
into
cmp
fcomps
cmp
in
movsb
mov
pop
shll
xor
sub
enter
sub
mov
or
ret
dec
addr16
pop
lahf
xor
add
mov
aas
and
movsb
clc
aam
cmp
mov
cmp
jge
clc
and
lods
insb
and
push
dec
cld
bound
clc
sbb
adc
lds
popa
ljmp
cmpsb
sbb
cs
jmp
inc
pop
and
xchg
sub
imul
jb
cwtl
mov
mov
gs
or
pusha
cwtl
push
lahf
sub
movsl
jbe
pop
sarl
cmpsb
int3
cmpsb
xchg
popf
jns
inc
lock
sti
ret
pop
pop
xor
popf
mov
loop
sbb
ja
jge
inc
es
adc
popa
dec
das
frstor
xor
pop
ficomps
sub
or
mov
icebp
sub
inc
lret
mov
dec
dec
aad
aas
popa
mov
dec
pop
jg
pop
mov
insl
add
inc
mov
mov
sub
addr16
adc
arpl
jecxz
movsl
sahf
negl
or
xor
xchg
jmp
sqrtps
clc
cmp
cltd
pop
movsb
test
cmp
lret
pusha
lret
cmpsl
push
or
push
fstpl
psllw
and
or
orl
mov
mov
jecxz
ret
add
das
cmp
dec
sbb
in
aaa
movsb
pop
xor
push
in
push
push
daa
fnsetpm(287
leave
inc
pop
push
cli
cmp
out
sub
cmc
loope
sbbl
jmp
leave
or
mov
je
jno
test
popf
aad
jmp
ljmp
in
and
inc
arpl
xor
push
ds
mov
xchg
filds
push
xor
mov
sbb
and
ss
in
add
cld
pop
xor
push
adc
sub
or
pop
test
push
mov
and
push
scas
cmp
sbb
cmc
inc
sub
inc
jne
imul
aam
cmp
repz
push
loop
fcoml
xchg
xchg
repnz
sbb
inc
mov
adc
cmp
int
cmc
mov
ja
out
pop
imul
aam
aas
int3
mov
cmp
shrl
pop
enter
cwtl
sti
fbld
rcrl
rcl
loopnew
dec
sbb
xchg
sub
aam
jnp
adc
fcmovb
sbb
xor
shll
xor
mov
fcomi
in
push
incl
push
mov
icebp
inc
mov
movsl
mov
lahf
xlat
pop
push
mov
movsb
ror
out
xchg
loope
cmp
and
pop
enter
mov
lcall
cli
mov
mov
in
lret
mov
xchg
loop
mov
add
incb
mov
imul
lret
xchg
jmp
xchg
repz
shl
xorl
sbb
sub
arpl
inc
leave
cmp
scas
mov
adc
aaa
arpl
hlt
mov
in
jb
jp
outsb
jnp
adc
xchg
sub
mov
pop
sub
adc
inc
mov
mov
loope
jmp
mov
xchg
fcmovnb
rcrl
pushl
mov
jne
inc
sub
xchg
and
enter
xor
aam
stos
insb
ds
jns
push
inc
popf
sub
test
rcrb
loopne
mov
xchg
int3
test
jne
xor
sub
push
push
orb
movsl
arpl
xor
divl
pusha
push
dec
pop
push
movsl
in
pop
repnz
fs
sti
sbb
add
pop
mov
sbb
cwtl
mov
xchg
push
adc
popa
mov
xor
scas
loope
iret
imul
das
rol
mov
mov
gs
mov
adcb
inc
push
outsb
subb
add
sub
lods
icebp
cld
shl
inc
lods
shlb
and
ljmp
repnz
aas
sbbl
lahf
aad
sarb
arpl
xor
aam
incb
jg
scas
cltd
in
lds
and
mov
ror
xacquire
lret
int
or
les
sbb
mov
xor
mov
rorb
cli
pop
cli
daa
or
insl
xchg
mov
sub
push
mov
neg
mov
jg
jb
mov
or
pop
dec
ss
mov
sub
int3
mov
sbb
aaa
xor
mov
aad
xchg
xchg
dec
sbbl
das
hlt
mov
frstor
xor
mov
cld
push
push
cli
mov
movsl
idivl
inc
test
les
in
inc
dec
dec
ror
cld
pop
pop
and
aad
repz
in
mov
mov
sub
popa
mov
add
leave
in
stos
std
dec
mov
push
dec
jmp
jmp
loope
scas
data16
addr16
add
pop
fisubrl
dec
push
sbb
jge
rolb
add
pop
in
test
call
cmpsl
rcrb
int3
jae
cltd
ja
sub
add
fs
gs
add
push
jns
inc
je
filds
fisttps
mov
test
mov
jmp
or
jnp
enter
ret
and
cld
aaa
pop
je
sub
xlat
mov
push
xor
cmp
mulb
fsubr
nop
pusha
sub
addr16
fcomps
inc
popa
cmp
jnp
mov
sysexit
into
sbb
cmp
movsb
jb
xchg
pop
cmp
gs
sub
jl
xchg
jb
xchg
daa
xor
in
inc
das
test
push
popa
pop
aas
sub
scas
jne
mov
mov
push
inc
insl
negb
sub
push
inc
aaa
in
ret
jb
add
call
movsl
fwait
testl
xlat
xchg
daa
pop
mov
popf
hlt
clc
pushf
stc
stos
sub
add
xchg
outsl
mov
xchg
push
mov
out
mov
mov
enter
psllq
bound
pop
push
adc
out
aas
or
sbbb
mov
sti
sbb
scas
stc
fnstcw
dec
sahf
enter
aad
xchg
int
inc
add
jae
xchg
fsubrl
jnp
jbe
jmp
clc
xchg
icebp
icebp
mov
pop
adc
and
xchg
sub
or
cmp
mov
push
packssdw
xchg
pop
push
sub
sbb
add
pop
jns
sub
mov
mov
cmpsl
js
out
pop
mov
mov
int3
popf
mov
pop
and
xchg
in
mov
stc
cmpsb
hlt
imul
mov
ja
sbb
andl
nop
mov
mov
push
divl
setns
mov
arpl
inc
and
or
cmp
das
bound
push
jp
pop
addb
outsb
xor
sbb
dec
incl
cmc
push
cmp
mov
fcoms
movsl
pop
into
mov
push
add
push
movsl
mov
mov
mov
sahf
mov
fadds
add
xor
ret
push
into
mov
sbb
push
inc
daa
ret
or
icebp
jmp
lcall
insl
jecxz
xor
push
xor
nop
jae
dec
xlat
sbb
sbb
imul
jmp
push
add
push
jo
arpl
and
and
hlt
xchg
adc
jg
sbb
and
aaa
movsl
cmp
fisttpl
loope
sub
std
xchg
adc
mov
mov
fs
push
popa
pop
fnsave
mov
loope
inc
arpl
lcall
jb
jle
ljmp
dec
cmpb
sub
jo
stos
push
xchg
jg
in
sti
xor
icebp
hlt
clc
clc
xor
inc
fdivs
cmp
aam
adc
sbb
sub
pop
jg
mov
dec
cmpsb
xchg
roll
sub
cmpsl
shrb
es
int
scas
or
cmp
ds
jnp
mov
in
push
jno
lds
les
inc
pop
fs
lcall
push
and
stos
mov
sti
shl
imul
mov
ja
imul
aas
ss
pop
dec
mov
movsb
cmpsb
faddl
out
iret
testl
xchg
pop
jne
jns
lock
jnp
je
dec
call
cmc
bound
or
rcr
sub
pusha
adc
add
aas
orb
xchg
push
jp
sahf
sbb
jl
adc
cmp
jge
addr16
fwait
cmp
add
jbe
mov
adc
push
mov
xchg
test
lret
and
call
jge
test
and
unpcklps
fs
stos
xchg
mov
inc
int
subb
cmp
addr16
jmp
sbb
add
sub
orl
outsl
push
dec
cmp
test
push
add
scas
push
lret
jnp
out
fmulp
rcrl
mov
sbb
insb
mov
aas
sbb
scas
insl
lea
clc
cmc
fdivs
mov
scas
jbe
add
push
mov
leave
data16
pop
adcl
sub
pop
mov
pusha
mov
daa
mov
popf
in
iret
adc
popa
xchg
and
add
and
mov
lret
push
and
testb
mov
sbb
add
inc
adc
movsb
mov
jp
jo
push
cltd
leave
fnsave
in
movsb
jae
xor
jecxz
mov
push
push
pushf
cmp
inc
cmc
stc
push
and
dec
pusha
jmp
rorl
cmp
pop
mov
or
xchg
xchg
jnp
les
add
cwtl
dec
insl
clc
out
jecxz
jae
lcall
sbb
scas
or
outsl
inc
pop
lahf
test
aas
shrb
addr16
sahf
add
sbb
mov
push
std
sub
rol
cmp
stc
adc
lret
add
adc
aaa
in
not
or
lods
inc
arpl
test
test
int
pusha
nop
stos
push
and
ss
pop
mov
cmc
aam
fisttps
jmp
pop
xlat
or
fs
push
fimuls
loope
xor
pop
mov
div
mov
jmp
cli
loope
data16
push
inc
mov
popa
outsl
loope
xor
jno
pop
mov
or
pusha
sbb
rolb
icebp
sub
push
cld
mov
inc
jae
and
hlt
dec
orl
mov
lods
shll
or
mov
and
mov
in
sbb
leave
cmc
ja
pop
out
or
xlat
movsl
out
mov
jnp
and
inc
ds
sti
cmp
mov
jle
cs
adc
inc
xor
pop
or
push
xor
mov
cmc
push
in
and
add
jmp
adcb
bound
sbb
imul
mov
and
scas
stc
jno
pop
cmp
roll
sub
cmp
push
lea
dec
into
xlat
mov
daa
mov
add
and
dec
inc
inc
and
mov
mov
jnp
mov
cmp
adc
jmp
xchg
add
test
fsubrl
sub
fcompl
push
lock
add
cmp
into
rorl
pop
cld
roll
lock
test
in
sbb
or
clc
adc
insb
and
outsb
js
jne
cmp
add
mov
add
dec
or
pusha
leave
loop
jno
sbb
adcl
lds
cmp
lret
mov
sub
jmp
cmp
and
das
testl
stos
adc
hlt
add
xor
add
and
push
decb
aaa
negl
lahf
mov
out
push
jmp
sahf
and
cmp
lods
int
sti
cmp
cmc
inc
les
dec
adc
pop
mov
push
ss
loopne
mov
add
cld
mov
xchg
out
pop
fcmovbe
lcall
movb
dec
cmpsb
call
jmp
mov
mov
sub
push
loop
scas
ds
xchg
mov
dec
sub
and
lea
or
insb
test
jb
cmp
mull
xchg
lods
pop
jbe
mov
hlt
mov
inc
mull
lret
in
mov
sub
arpl
out
dec
stc
push
popa
mov
mov
lods
and
in
cmpsl
adc
lret
aad
popa
outsb
or
icebp
adc
jg
nop
nop
mov
adc
inc
les
pop
pop
sahf
lret
gs
mov
and
push
jmp
rorb
and
in
arpl
fbld
or
cltd
mov
imul
mov
aad
loopne
inc
jae
adc
xor
nop
mov
xchg
jae
push
adc
mov
rolb
shlb
and
push
cld
out
push
mov
mov
cltd
out
sahf
push
pop
mov
adc
lods
mov
jmp
sti
int
lcall
mov
call
enter
popa
sbb
dec
fadds
lret
pushf
fsubrs
and
mov
jae
nop
jne
les
adc
shll
xchg
clc
pop
and
sbb
and
stos
lea
mov
iret
add
xor
call
sbb
std
jge
mov
push
mov
and
cmp
dec
inc
sahf
stc
cltd
push
fdivs
mov
mov
inc
jl
and
jb
inc
sti
sti
mov
inc
repnz
or
sbbl
xor
iret
loopne
add
mov
scas
dec
fidivrs
lcall
outsl
or
int
not
or
in
rep
or
xchg
push
insb
jne
std
paddsw
ret
insl
sub
xchg
aaa
and
xlat
push
adcl
mov
push
xchg
mov
scas
fwait
scas
decl
sbb
sub
les
or
fsubl
push
xor
xchg
jg
sub
inc
lcall
jg
jb
enter
adc
ffree
movsb
mov
notl
out
js
out
in
jno
push
scas
sub
lods
inc
dec
cmp
xchg
or
fadd
divl
scas
test
pop
mov
aad
add
fs
sub
repnz
mov
mov
pop
inc
sub
out
mov
dec
and
cmc
sbb
pop
push
xor
sub
push
sbb
movsb
sbb
rcr
aam
add
stos
xor
pop
scas
jecxz
inc
mov
lret
mov
sbb
mov
test
push
jmp
dec
cmc
cmp
cmp
xchg
iret
jp
mov
xchg
cmp
cmp
dec
sarb
lea
or
pop
fistpll
loope
sub
cmp
pop
popf
imul
dec
cltd
push
push
scas
push
jnp
test
sti
ja
xor
or
adc
sbb
stc
xchg
sar
pop
xchg
and
out
jno
mov
sbb
fidivrl
push
pop
push
sbb
movsl
xor
sbb
mov
decl
push
jl
jo
icebp
repz
ret
leave
jae
jg
sbb
int3
sbb
rcrb
fwait
scas
inc
pop
mov
ja
inc
adc
sbb
imul
inc
into
cmp
cmp
mov
cwtl
stc
sbb
imul
lods
in
xor
insb
xchg
rcll
js
int3
ljmp
js
shll
int
pop
adc
xchg
pop
ret
mov
int3
xchg
mov
and
out
push
add
sbb
pushf
loopne
mov
cmp
ret
subb
or
fldenv
sbb
daa
dec
dec
je
testb
and
nop
sarl
sbb
dec
pop
lds
fadd
faddp
mov
in
bound
rorb
into
or
or
in
stc
in
in
dec
adc
or
outsl
sub
inc
out
orl
push
in
adc
and
outsl
and
mov
sub
es
out
es
pop
jns
xlat
dec
rol
pop
clc
hlt
xor
dec
pusha
insl
repz
pop
jne
push
mov
out
jl
sbb
clc
shlb
rolb
aaa
cld
xor
cwtl
mov
inc
mov
into
jl
xchg
mov
inc
add
xor
add
cmp
sub
shlb
xor
pop
mov
jne
ret
dec
loope
and
xor
lcall
push
adc
jae
lock
mov
mov
sub
icebp
cmp
fsts
xchg
test
rolb
mov
orl
and
mov
arpl
push
arpl
push
mov
and
pop
adc
mov
adc
hlt
in
dec
nop
and
movsl
jbe
in
pop
jbe
aad
mull
scas
shrb
mov
loope
call
pop
sbb
jnp
aad
xchg
ljmp
cli
push
mov
mov
push
dec
pop
cmp
dec
fidivs
sub
jmp
cmp
leave
in
and
push
mov
sub
sbb
scas
pop
or
imul
scas
ror
mov
das
jl
stc
inc
rorl
gs
jg
jge
incb
dec
jb
mov
push
inc
test
xcrypt-ctr
cmpsl
sbb
sbb
xor
fst
mov
cmp
cmpsl
dec
imul
mov
inc
sbb
push
push
or
xchg
movsl
sub
push
cmp
adc
sarb
fldz
lcall
push
test
outsl
adc
and
rorb
pop
dec
sub
pop
pusha
ja
movsl
test
cs
pop
mov
xor
xor
jecxz
lret
mov
stos
xor
les
push
or
in
jne
xchg
or
pusha
test
shll
test
add
cmova
mov
out
ds
sub
lock
cmp
sti
push
mov
fwait
sbb
mov
sbb
loop
push
notl
arpl
sahf
movsb
adc
mov
pop
out
int
push
rcrl
ds
cmp
jns
hlt
xchg
jne
stos
and
sub
insl
cltd
std
xor
cmp
insb
popf
dec
pop
pop
pop
test
sub
rcrb
test
add
mov
jmp
push
and
adc
jge
call
sarl
js
pop
xchg
jbe
out
sub
xor
ret
pop
into
pop
adcb
dec
sub
call
out
push
imul
loop
dec
pop
sbb
adc
sahf
jmp
xor
cli
sub
inc
xor
xchg
jo
mov
xchg
shrl
mov
popa
add
and
push
dec
adc
adc
xchg
mov
push
push
mov
jne
push
pop
adc
or
gs
jl
or
loope
pop
cmpsl
xor
scas
add
ret
insb
sub
and
pop
sub
sub
aaa
xor
and
outsb
pop
shlb
push
mov
mov
subb
jmp
push
jno
sahf
cmpsb
mov
ja
leave
mov
out
shlb
dec
mov
popa
xchg
dec
adc
xchg
push
dec
test
lahf
and
lods
out
out
and
insb
mov
into
cmp
cli
call
pop
mov
inc
xor
mov
mov
aam
arpl
mov
push
movsb
jns
xchg
into
jl
jo
mov
icebp
xchg
in
int3
sti
pop
sub
jle
mov
xor
xor
arpl
subl
xor
cmpsl
pop
inc
xchg
rcrl
in
cli
int
or
int3
jg
or
imulb
loop
sbb
or
sar
mov
mov
cli
sub
dec
sbbb
sub
push
movsl
mov
into
int3
mov
test
sub
icebp
adc
push
lds
pop
cmp
imul
cmpsb
imulb
leave
imul
adc
mov
lret
or
repz
cmc
jge
testb
in
std
mov
popf
ja
xchg
mov
mov
std
adc
lahf
sub
outsb
inc
mov
ds
mov
jne
push
xchg
sbb
pop
imul
fiaddl
movsb
mov
jp
fstl
add
adc
fwait
xor
mov
sub
push
dec
add
lahf
fsubl
in
repz
lcall
ja
mov
jmp
fistpll
xlat
xchg
jmp
jnp
outsl
sbb
jne
cmpsl
add
push
jle
into
sarb
fsubr
sbb
insl
adc
adc
leave
adc
pushf
in
repnz
cmp
jmp
xor
bound
jnp
cmova
add
scas
mov
pop
ja
insw
push
bound
loopne,pt
negb
cmpsb
and
rolb
outsb
push
jae
out
sbb
add
sub
cli
dec
sbb
cmp
sar
xchg
mov
xchg
inc
je
das
xor
into
xor
adc
adc
add
add
in
or
dec
cmc
sarl
mov
add
into
xlat
ds
pushf
scas
jg
imul
inc
or
pop
in
icebp
shrl
pop
mov
add
sahf
or
scas
push
ja
dec
add
push
fldl
sbb
cld
jg
mov
in
xchg
stos
mov
frstor
arpl
adc
fwait
mov
dec
or
push
pusha
cmpsl
push
push
and
push
test
mov
mov
inc
cmp
insb
into
test
or
mov
push
and
jno
divl
push
insb
jp
cmc
adc
mov
fcmovu
mov
ja
mov
push
xor
inc
cmp
arpl
jno
mov
rorb
xor
adc
mov
cmp
mov
insl
jbe
jae
das
sbb
mov
test
lods
jge
jle
and
call
adc
or
adc
cltd
mov
das
mov
pusha
clc
stos
mov
mov
cmp
loop
adc
xor
and
push
sub
adcb
shlb
sahf
adc
popf
xchg
jge
jb
sub
mov
cmp
mov
mov
fsubr
sarl
pop
repz
lret
aas
dec
popf
nopl
ret
cmp
in
sbb
imul
test
pop
stos
cli
pusha
rorl
mov
xchg
nop
insl
movsb
out
out
ret
mov
pop
popa
and
adc
jl
cmp
fnsetpm(287
lret
adc
xchg
jge
ret
js
testb
aaa
push
push
cmpsl
add
push
bound
aad
push
jp
fstps
sbb
das
scas
inc
xchg
fadds
and
xor
int
arpl
stos
add
mov
xor
lock
enter
pop
sub
inc
je
pop
jmp
inc
xor
jns
outsl
stc
scas
movsb
pusha
mov
test
jmp
adc
daa
adc
mov
xor
mov
push
addr16
pushf
clc
mov
out
sbb
dec
out
mov
imul
add
loope
faddp
push
push
iret
out
cwtl
lds
sbb
sbb
subl
dec
xor
xor
scas
sbb
fwait
test
repz
inc
loopne
mov
ljmp
inc
sbb
aad
movsb
xchg
cmp
xchg
lock
outsl
or
es
add
clc
xchg
xchg
push
ljmp
fbld
or
lret
pop
js
jecxz
loope
scas
mov
mov
clc
xor
adc
leave
or
cmpsb
ror
sub
dec
hlt
lock
daa
daa
ret
jecxz
cs
inc
push
sbb
inc
cmp
stos
jg
mov
push
jb
sbbl
inc
jg
in
mov
lret
es
dec
dec
dec
mov
vmovaps
lock
lds
ret
subb
pop
lods
outsb
dec
inc
and
push
les
push
xor
inc
and
fimuls
loopne
sbb
sub
popa
fld
cmpps
out
cmp
jg
sub
inc
dec
in
push
mov
mov
sbb
xorl
jmp
cmpsb
cld
mov
mov
xchg
stos
out
push
adc
pusha
sahf
dec
xorb
jns
cmp
adc
outsb
nop
test
cli
push
dec
popf
pop
inc
arpl
leave
test
test
push
pop
mov
xor
nop
and
xchg
pop
and
in
jae
orl
mov
imul
xchg
add
movsb
into
arpl
and
or
roll
jg
push
sub
mov
jno
dec
and
sbb
mov
in
sub
repnz
sti
stos
or
cmp
push
je
mov
aas
dec
jne
lods
sarb
insl
mov
mov
outsl
jg
adc
pop
inc
sub
stos
jp
call
cmp
outsl
sbb
mov
push
scas
cmpb
pop
stos
mov
inc
into
jns
mov
ret
ret
out
jl
dec
cmpsb
nop
add
inc
dec
or
nop
addr16
jp
sti
pop
pop
fwait
sti
mov
pop
scas
sub
das
ret
sbb
out
xchg
imul
sbb
ja
daa
lret
imull
mov
dec
mov
mov
loope
rolb
and
mov
divb
add
cmp
insb
xor
sub
cmpsb
mov
aam
xorl
or
int3
pop
add
mov
inc
jno
add
pop
or
cli
bound
arpl
loop
mov
ror
cwtl
pop
stos
stc
call
add
outsb
addr16
adcl
and
or
dec
bound
add
loop
lock
mov
sbb
push
fmul
orl
add
data16
and
sub
adc
shll
and
fwait
imul
adc
test
cmp
sbb
ficomps
sarb
idiv
popa
add
ja
paddusb
sub
inc
ds
adcl
out
mov
push
push
xor
mov
out
int3
rcrb
add
hlt
sub
pop
into
or
xor
les
into
arpl
cmp
loop
add
jg
cli
aas
and
fldcw
sub
sub
sub
stos
mov
cltd
xor
jnp
stos
mov
mov
pop
xchg
mov
fidivrl
into
adc
inc
dec
adc
std
fldenv
div
lahf
fsubs
fdivp
aas
or
ljmp
jge
repz
fmuls
stc
fs
add
and
stos
adc
sbb
shrb
xchg
cwtl
xorl
sub
sti
mov
xchg
shr
jge
or
scas
andb
js
loope
dec
or
mov
jbe
xchg
xchg
xchg
out
push
adc
ret
cmp
js
pushf
mov
xlat
sbb
test
fwait
lock
lods
jge
and
cmp
faddl
inc
add
cmp
adc
add
inc
bound
jo
faddl
push
daa
xchg
inc
fistps
dec
sub
fmulp
cmp
mov
xchg
cmpsb
adc
pop
xor
std
or
cwtl
in
xor
outsl
mov
sahf
mov
sti
jmp
push
push
dec
mov
xor
jae
aam
loope
ss
out
jmp
mov
imul
cmpsl
fstl
fiaddl
stos
xchg
jp
mov
icebp
mov
loopne
in
mov
xor
inc
bound
in
fxch
jae
mov
pusha
push
push
ss
and
iret
ret
push
and
mov
divb
xlat
sub
cli
pop
test
ret
add
xchg
cmp
loope
pop
add
add
jl
fdivr
mov
pop
cmpsl
test
shlb
push
and
fs
inc
sbb
xchg
pushf
mov
push
jmp
jle
shlb
xor
cmpb
fwait
xchg
fwait
into
jnp
xchg
push
push
loopne
shrl
mov
loop
jb
sti
ret
mov
push
popa
sub
xchg
sub
xchg
push
mul
lahf
push
or
out
and
fsubr
and
imul
loope
in
jne
insb
pusha
mov
jmp
adc
jle
sarl
pop
mov
jle
cmpsb
dec
or
imul
push
jne
aaa
xchg
outsb
outsb
loop
outsl
mov
cmp
imull
fildl
sub
jo
jmp
pop
stos
sbb
int
pop
sbb
adc
mov
mov
xor
das
pop
jae
cmp
popa
pop
xchg
cmp
ja
inc
mov
sahf
repz
jmp
lea
daa
push
data16
push
fstps
lret
xchg
js
mov
cmp
push
jle
mov
ljmp
pop
fisttps
cwtl
and
xor
outsb
xchg
sub
cmp
dec
adc
adc
mov
scas
out
cltd
add
fimull
leave
push
dec
cmp
lcall
adc
sub
int3
dec
test
das
xor
pop
sbb
mov
pslld
icebp
mov
rcrl
pop
xchg
pop
and
jle
sbb
repz
popa
fsub
mov
dec
pop
jmp
pop
dec
stos
ss
mov
mov
data16
jg
outsl
insl
test
je
sbb
adc
in
orl
lcall
fidivs
xchg
fsubrs
ret
xor
jmp
push
cmpsl
scas
add
fwait
lods
mov
or
push
xor
fbstp
sbb
ffreep
cmp
cmp
sbb
dec
fwait
inc
inc
push
jge
or
inc
sti
popa
jo
pusha
sbb
push
cs
aaa
lahf
clc
mov
mov
and
iret
int3
sub
inc
out
ret
xchg
stc
in
das
fstps
ja
cmpsb
hlt
int3
push
inc
fcmovb
sub
addb
mov
adc
push
jecxz
mov
or
in
into
mov
cmp
sbb
adc
mov
adc
jge
scas
inc
cmpsb
scas
mov
push
sub
in
xchg
mov
adc
lret
push
faddl
sub
ljmp
inc
mov
xchg
pop
pop
mov
testb
mov
imul
jne
popa
jb
mov
xchg
sbb
xor
pushf
mov
mov
xor
shrl
outsb
cmpsb
or
and
test
aam
loop
jmp
mov
jmp
and
or
dec
xchg
adc
stos
mov
push
push
sarb
push
and
xor
xchg
pop
dec
cmp
enter
or
repz
mov
push
jecxz
xchg
nop
jnp
shrl
pop
inc
or
pop
fisubrl
mov
fbld
gs
jnp
jg
popa
cmp
jbe
ljmp
dec
inc
jne
inc
in
ficoms
inc
fwait
test
cmp
fnstcw
sbb
mov
mov
or
test
jmp
cmc
fldenv
out
lcall
cs
add
inc
xor
sbb
sbb
rcr
jb
jne
loopne
inc
push
cmp
jno
out
and
out
test
cmp
dec
test
popf
jecxz
lock
mov
cwtl
int
push
mov
out
dec
pop
mov
add
xchg
cwtl
inc
and
lret
ja
push
outsl
jns
mov
or
notb
cmpb
push
adc
inc
xchg
subb
mov
sub
aam
sbb
xchg
loope
data16
and
jle
into
xchg
sub
insl
xchg
jno
cmp
cmpsb
push
pop
sbb
pop
stc
call
jg
movsb
xchg
mov
jo
jbe
lret
xchg
jl
sub
xchg
lahf
enter
lea
in
or
pop
sbb
nop
pop
inc
push
in
xchg
sub
cmp
mov
inc
jl
xorb
cmp
push
out
lds
lds
rclb
mov
mov
out
lea
scas
rcrl
imul
push
jge
mov
or
dec
xchg
scas
push
lea
icebp
inc
aaa
push
lea
loop
in
sbb
add
fs
adc
out
enter
sub
or
push
daa
mov
xlat
jmp
arpl
adc
xchg
xchg
in
lcall
adc
push
or
in
icebp
jl
je
lahf
push
jb
adc
and
mov
pop
adc
cmp
mov
scas
ret
jne
data16
lods
and
sub
adc
es
inc
sbb
enter
sarl
fcomip
pop
shrb
insb
bound
insl
das
orb
cmpsb
outsb
cmpsl
mov
mov
xchg
popf
testb
repnz
jbe
sub
fidivs
rsqrtps
jge
int
mov
adcb
mov
xchg
sbb
clc
shlb
and
jg
mov
jecxz
mov
sub
fisttps
add
in
fucomp
hlt
xchg
je
lret
sub
loop
fcmovb
pop
pop
fcompl
fsubrs
add
jg
add
cwtl
leave
sbb
or
fs
icebp
adc
add
jb
insb
inc
in
loop
mov
sub
push
mov
out
mov
out
leave
test
and
fildll
dec
aas
and
jno
mov
insl
dec
cli
add
jno
xchg
jnp
pop
mov
gs
bound
das
stc
daa
adc
push
adc
sub
adc
cmp
add
mov
lret
fs
and
mov
mov
mov
cmc
movsl
cmp
cmpsl
mov
cmp
add
incl
mov
add
fldl
mov
inc
push
nop
dec
xchg
pop
mov
mov
je
addr16
pop
xor
stc
xor
movsb
mov
rcll
lods
mov
test
mov
xchg
loopne
fidivs
cwtl
iret
dec
jns
jle
mov
out
sub
sbb
push
sub
scas
mov
sbb
or
pop
notb
inc
mov
xchg
cmp
idivb
incl
aam
jecxz
cld
pop
mov
scas
sbb
imul
add
rol
into
and
inc
sbb
outsl
dec
popf
ljmp
jle
pop
xchg
cmc
leave
push
adc
enter
adc
and
xchg
loope
test
cli
rclb
cmp
xor
insb
sbb
rcrl
out
roll
hlt
repnz
ss
pop
or
test
imull
lret
pop
lods
ja
cmp
mov
jmp
ljmp
outsl
fsubl
add
dec
dec
adc
outsl
insl
mov
push
jl
mov
cmc
mov
mov
imul
bound
cmpsl
jo
lret
mov
sub
jno
inc
and
adc
ds
in
xlat
sbb
jo
cmp
fnsave
test
or
insl
pop
push
add
orl
cmp
addr16
or
cmp
xor
mov
or
dec
addr16
xchg
or
ss
xor
lret
rorb
push
sbb
xchg
in
cmpsl
fstpl
stc
adc
sub
aas
sub
into
mov
in
inc
cld
jge,pn
cmp
rolb
adc
jg
add
mov
sbb
aaa
and
bound
mov
dec
mov
jge
dec
testl
dec
xor
mov
or
cltd
cmpsb
pop
adc
push
in
mov
cmp
mov
mov
fdivs
pusha
lods
cmp
push
xchg
add
aaa
scas
lret
repnz
repz
lods
mov
stc
mov
lods
jns
sub
push
out
or
gs
push
mov
je
ret
jle
jmp
repz
push
fs
xor
pop
movsl
or
push
or
bound
push
ss
sahf
inc
add
mov
cmp
mov
push
inc
push
or
cltd
mov
pop
push
das
loopne
fmul
fidivrs
outsl
jo
cmp
jne
jmp
fdivs
inc
aaa
xor
insb
lcall
popf
and
stos
fld
sbb
aam
rcl
mov
jge
sub
sub
ret
fmul
test
adc
pop
mov
xchg
jno
fdivs
lods
cmp
test
mov
std
dec
mov
jae
ss
fsubrs
jno
add
lret
cld
or
pop
cmc
push
push
repnz
add
sub
jecxz
sbb
lahf
bnd
fildl
stc
pop
mov
adc
xorb
sbb
imul
mov
insl
push
insl
fcmovb
jne
sub
ss
and
rcrl
sahf
lcall
adc
mov
loop
dec
mov
fbstp
fs
test
int3
and
dec
push
xchg
xor
pop
and
popf
sbb
push
arpl
rclb
fmull
mov
cltd
mov
pop
and
in
stos
fldenv
ds
sahf
jmp
imulb
test
loopnew
mov
fisubs
adc
daa
pop
adc
pop
jbe
xchg
pop
fisubs
lods
mov
and
jmp
sbbl
cmc
adc
lock
sub
pushl
insl
cs
inc
jg
mov
cmc
mov
xchg
lods
push
mov
or
scas
inc
sti
stc
fisubrs
and
imull
mov
add
inc
out
dec
subb
mov
sub
lock
cmp
jbe
data16
jl
fisubrs
sti
pop
xor
sub
push
sub
mov
cmc
push
mov
sub
clc
out
mov
in
xor
lea
xor
cmp
xchg
add
mov
addr16
sbb
dec
shll
aam
mov
and
not
inc
jnp
pop
fcmovnu
in
movl
in
aam
add
push
sub
movsb
fwait
movsb
cs
shrl
adc
ret
mov
mov
sub
cmp
cmpsb
mov
mov
repz
or
xor
add
jns
cmp
rcrl
xor
gs
ret
lea
cmpsb
push
roll
adc
in
outsl
fdiv
dec
cld
add
sbb
push
les
in
das
sub
jb
jl
push
stc
and
movsl
fcompl
imul
inc
push
ss
div
and
clc
inc
mov
ss
mov
pop
xchg
add
loopne
ret
lea
fbstp
jns
push
out
out
mov
in
lea
xchg
inc
cmp
int3
jp,pn
divl
and
ret
in
movsb
int3
push
pop
fptan
mov
test
push
jl
sub
xchg
and
mov
xchg
cmpsl
jbe
lods
jg
or
rcr
mov
aad
mov
imul
jp
push
lds
insl
sub
jle
lahf
ljmp
mov
jbe
mov
push
shrl
mov
dec
fwait
mov
in
pop
lahf
mov
xor
jmp
mov
or
test
xchg
lds
rcll
cmp
bound
dec
popf
mov
scas
mov
enter
inc
push
outsb
push
and
inc
dec
cmp
xor
arpl
mov
inc
sbb
add
and
into
fdivs
aam
repz
or
mov
cmpsl
mov
bound
clc
xchg
addb
out
call
test
loope
mov
sar
stc
in
sarb
sbb
mov
out
pop
ret
sbb
imul
packuswb
inc
rol
push
mov
push
and
inc
pop
stc
int3
mov
and
rclb
mov
ja
sbb
in
in
lcall
in
movsb
lods
mov
jbe
sahf
or
or
daa
pop
mov
jne
push
xor
movsb
lret
gs
enter
mov
sarl
sbb
mov
fs
scas
ja
arpl
inc
pop
push
std
into
iret
or
xor
orb
sti
pop
adc
inc
cs
xor
loope
es
mov
test
gs
aad
into
int
in
out
movsl
test
cmp
lea
mulb
mov
outsl
adc
pushf
sub
push
pushf
cmp
sbb
movsb
mov
test
xchg
cmp
iret
rcl
outsb
sbb
adc
xchg
mov
jno
push
push
in
outsb
test
sbb
outsb
or
mov
icebp
mov
add
pop
popa
int
mov
mov
rorl
popf
movsl
or
andb
xor
sbb
mov
add
push
repz
push
test
sarb
xor
cmp
lahf
int3
popa
push
sub
imul
mov
xchg
mov
cli
cmp
addr16
add
test
add
dec
mov
adc
mov
sub
ret
jecxz
aam
shlb
pop
cmp
dec
addb
ljmp
add
xchg
xor
jle
ds
gs
pop
push
andl
addb
push
aam
sub
or
sub
xchg
add
and
adc
nop
mov
sbb
lock
jecxz
pop
test
xor
push
add
jmp
dec
lods
cltd
dec
hlt
dec
negl
and
nop
imul
cwtl
sub
stos
stc
dec
arpl
jmp
mov
aas
std
add
sbb
sub
fisttpll
loop
adc
les
nop
nop
push
lds
es
pop
lods
jle
sahf
imul
pop
inc
leave
icebp
in
addr16
enter
fwait
ja
nop
aad
pusha
mulb
fildl
push
push
fwait
jmp
das
push
mov
movsl
fidivrl
add
into
push
cld
lea
or
loopne
sub
cmp
push
inc
icebp
mov
in
loope
cmp
jbe
in
leave
into
mov
push
jecxz
enter
jg
fcom
mov
add
rcll
je
ret
add
xchg
int3
sub
test
sbb
push
imul
icebp
mov
test
outsl
sub
cmpsb
cmpsb
jne
adc
adc
in
in
repnz
mov
pushf
sbbl
jge
ficompl
fbld
call
insb
add
push
stos
mov
addl
and
fs
lcall
mov
fcoms
insb
push
pop
cwtl
fwait
inc
stos
dec
outsl
nop
xor
test
push
cld
xor
xchg
ror
jge
jecxz
shrb
enter
xor
inc
pushf
jecxz
xchg
sbb
js
in
stc
pop
stc
jb
insb
push
and
pop
sub
out
jnp
nop
or
lods
dec
pop
fcom
inc
jg
xor
data16
jbe
lcall
iret
in
jecxz
jle
xor
pop
cmc
lcall
jb
xor
mov
sub
jp
pop
push
xchg
cli
dec
nop
jmp
test
xor
mov
add
je
fsubrs
adc
sub
cmpsb
fldl
sbb
sarl
sahf
adc
fwait
mov
adc
xor
sub
inc
adc
cmp
xchg
xchg
pop
push
cmpsl
or
mov
sub
inc
cmp
sbb
mov
jg
fmuls
cmpsl
xchg
adc
fadds
or
mov
sbbb
pop
mov
fildl
andb
push
sub
inc
mov
lods
test
pop
popa
mov
mov
add
iret
daa
dec
pop
repz
adc
es
dec
insl
mov
cwtl
push
icebp
xor
test
xchg
jecxz
les
repz
mov
addr16
dec
xor
mov
cmp
sub
iret
or
scas
sti
out
fdivl
xchg
idivl
pop
stc
push
cmp
jecxz
imul
notl
aam
ja
mov
mov
stos
push
pop
or
mov
out
cs
movsb
decb
xchg
pop
mov
adc
shlb
pop
iret
push
scas
mov
cmp
jle
rcll
shll
jns
add
pop
jbe
adcb
lock
outsb
xchg
ja
xchg
ljmp
push
or
aas
mov
sbb
scas
pop
xor
in
insb
add
xchg
cwtl
add
xchg
jl
mov
ror
mov
ret
push
or
cmp
pop
ret
inc
inc
fistpl
push
pop
push
loope
inc
stos
pop
iret
out
xorb
sbb
mov
outsl
icebp
shl
ljmp
xchg
je
fisubl
add
mov
jnp
sar
dec
fnstsw
stos
lock
ret
pop
jae
add
repnz
clc
fildl
mov
scas
xchg
xchg
xchg
fadds
pop
mov
pop
into
adcb
cli
or
pushf
pushf
ds
jns
lods
xor
lret
cmpsl
enter
and
and
jne
push
bound
mov
add
mov
mov
push
rorb
ds
cmpsb
call
xor
pop
sub
mov
xor
xchg
lea
subl
fisttps
and
mov
or
test
push
inc
movsl
xchg
nop
fs
or
jae
or
notb
jecxz
ss
aaa
jle
lods
fnstcw
fstl
pop
jl
movsl
inc
inc
mov
or
mov
sti
mov
pop
inc
test
jp
popf
jmp
inc
cmp
and
fucomip
xor
jb
jne
add
pop
cmp
ret
mov
mov
and
push
xor
jmp
mov
cmp
addr16
pushl
dec
cmpl
jnp
stc
adc
dec
and
or
sbb
mov
popf
add
sbb
mov
iret
roll
shlb
dec
and
fs
daa
das
cltd
pop
dec
ret
in
pop
dec
or
ss
ljmp
cmpsb
rcrb
xchg
mov
mov
fcmovu
mov
ds
out
ljmp
push
int
fistpl
sub
mov
dec
iret
addb
add
imul
sub
cmpb
repnz
das
pop
push
add
popf
and
mov
loop
js
es
mov
fiadds
adc
sub
arpl
movsl
mov
cs
popf
xchg
inc
fs
mov
mov
nop
stc
mov
leave
mov
jecxz
arpl
stos
sbb
xchg
adc
cltd
cltd
xchg
xor
cmc
movsl
mov
sbb
int
push
push
xchg
cmpsl
fdivp
jp,pt
mov
adc
bnd
orl
mov
push
mov
or
push
in
and
fstpl
cli
xchg
push
or
adc
xchg
outsb
es
adc
pop
cltd
mov
pop
or
je
std
imul
push
xchg
shlb
daa
dec
mov
test
dec
inc
addr16
xor
mov
test
xchg
push
sbb
fwait
mov
or
or
mov
idivl
cmp
pop
jg
jge
cmp
loop
xchg
adc
out
pop
mov
xchg
mov
add
and
hlt
push
das
cmp
sbb
sbb
mov
jecxz
in
sbb
sub
mov
outsl
adc
mov
cmp
shl
je
pop
repnz
or
or
das
cwtl
ret
mov
add
or
cwtl
rclb
jg
push
fisttps
jge
xchg
dec
adc
jmp
fidivl
xchg
clc
xchg
sub
popa
lods
insl
or
or
clc
int3
add
mov
mov
js
push
push
jg
or
jae
js
or
adc
js
test
aad
pop
and
xor
dec
adc
pop
and
jl
mov
addl
mov
std
gs
adc
stos
insl
sbb
sub
ret
das
rorl
adc
adcl
pop
xchg
dec
xchg
jb
orl
movsl
jl
adc
out
dec
movb
in
dec
lods
fistpl
lcall
sbb
and
dec
dec
push
mov
add
add
cltd
jnp
rcll
cvtps2pi
xor
push
int3
mov
or
iret
fs
adc
and
ss
enter
lods
bound
andb
mov
xor
mov
adc
and
jmp
mov
push
sbb
popa
enter
push
pusha
int
lahf
nop
sbb
inc
insb
or
push
jne
cld
test
push
mov
popf
repz
pop
mov
sbb
es
std
mov
mov
nop
addr16
cld
es
xchg
mov
inc
insl
mov
push
add
int
stos
imul
inc
xor
add
xchg
loop
cmp
movsb
and
adc
outsl
stc
into
ds
jnp
xchg
and
aad
fcom
decl
xor
fisubl
mov
mov
lahf
ljmp
inc
in
orb
arpl
mov
mov
xchg
fisubrs
cmpsl
lods
lods
aas
cld
xchg
push
mov
in
cli
movsl
cmp
push
enter
mov
lcall
xchg
sub
pusha
movsb
inc
aas
scas
scas
sub
mov
sub
xor
sbb
cmp
push
test
jbe
add
mov
int
pop
pop
cmpl
out
inc
rcrb
lock
lods
mov
mov
cltd
mov
xlat
dec
loopne
subb
jp
inc
cltd
in
dec
add
mov
and
add
pushf
jmp
nop
in
cmp
cmp
lds
sahf
lods
ret
cmc
mov
jge
and
arpl
pop
adc
ffreep
bound
cli
push
add
outsb
movsl
fwait
hlt
inc
xor
ret
das
addl
daa
call
add
pusha
into
mov
adc
and
cmp
and
lods
mov
or
test
or
fwait
dec
shr
xor
les
xor
xor
mov
xor
sub
mov
xor
mov
lock
pusha
loopne
sub
jnp
adc
add
das
pop
dec
cld
dec
mov
scas
sbb
jmp
mov
xchg
stos
mov
inc
and
enter
mov
dec
pop
cmp
aas
lahf
pop
ret
ret
xor
cli
mov
jae
mov
jmp
divb
xchg
xchg
test
sub
aad
test
dec
mov
ss
fdivrs
enter
pop
enter
mov
lcall
mov
icebp
fisubs
nop
and
xchg
into
lea
ss
sub
ja
or
movsb
or
dec
inc
mov
ss
sbb
inc
lahf
push
push
jg,pn
jge
mov
mov
jmp
data16
mov
std
mov
jmp
fdiv
xor
pop
movsb
scas
lea
jo
push
sbb
or
dec
jno
cmp
fcomi
add
lods
in
mov
je
es
mov
cs
out
inc
mov
imul
dec
loope
jl
cld
pop
outsb
fs
adc
xor
jmp
je
int
xchg
imul
xchg
jbe
dec
cmc
mov
mov
push
andl
xor
and
mov
push
and
add
addb
in
lods
je
sub
sbb
adc
pop
lret
jl
sub
mov
mov
leave
mov
adc
int3
cmp
mov
sub
pop
jg
dec
fistl
cmp
cli
ret
sbbb
jecxz
sbb
cmp
daa
imul
cltd
iret
outsb
or
adc
sarb
xor
mov
push
fldl
fdiv
sahf
pop
add
pop
xchg
cltd
dec
sbb
xchg
imul
add
scas
rorb
add
mov
pushf
lahf
adcl
test
inc
sbb
add
mov
mov
test
mov
shll
push
adcl
iret
shrb
loop
enter
adc
int
sub
mov
push
rclb
inc
and
push
jns
ljmp
cmp
jge
test
cwtl
enter
jle
mov
push
push
pop
or
pop
repz
mov
mov
int3
pop
dec
sub
pop
cwtl
push
mov
mov
sub
insb
xor
adc
adc
adcb
imul
dec
or
xor
jmp
adc
jne
cmp
add
pushf
es
or
cs
sub
push
stos
mov
jmp
gs
xor
mov
or
sbb
xchg
xor
sub
cld
push
stc
cli
sbb
push
jmp
int3
pop
jle
push
add
nop
pop
lahf
fstpt
outsb
data16
adcl
inc
mov
imul
movsl
lea
fs
rclb
es
gs
out
lea
in
add
mov
aaa
jmp
int3
jle
call
mov
push
jne
sbb
pop
mov
inc
mov
out
pushl
cmp
xor
mov
mov
popf
pop
movsb
hlt
data16
aas
jl
xchg
jnp
clc
in
lods
lds
adc
cmp
ret
out
adc
push
es
cmp
jp
int
rcrl
mov
mov
cmp
xor
and
enter
or
loopne
pop
mov
outsl
scas
in
cmp
subb
push
jp
mov
mov
mov
jge
sub
jnp
aas
adc
jle
push
cmp
xor
iret
push
cmc
inc
inc
cmp
test
outsb
mov
push
jmp
ret
out
xor
jmp
add
mov
xchg
out
jg
add
nop
xchg
sub
push
push
inc
mov
mov
outsb
sub
mov
push
mov
dec
push
insb
xor
inc
sub
mov
imul
inc
ret
mov
outsb
or
pop
dec
stos
jb
mov
push
cmp
int3
inc
mov
out
push
testb
dec
nop
cmpsl
in
movsb
and
ret
and
dec
aam
lods
or
or
mov
pushf
or
or
push
into
xor
xchg
fwait
bound
xchg
xorb
cmp
pop
or
outsb
jmp
ret
call
cmp
lods
jmp
addr16
std
mov
xor
out
pop
test
mov
lock
mov
jmp
xor
inc
inc
or
cmp
push
sub
aad
sbb
das
mov
pop
mov
gs
cmp
add
mov
pushf
dec
test
in
xorl
clc
dec
cmp
sbb
mov
mov
xchg
cmp
and
sbb
bound
scas
mov
cmp
cmovne
pop
adc
adc
enter
xchg
std
ffreep
test
and
ss
cmp
ds
jno
in
mov
mov
jns
mov
xchg
xor
cmc
xchg
or
or
sar
or
loopne
push
mov
adc
daa
aad
pop
int3
rolb
call
xor
mov
dec
fildl
scas
sbb
xlat
sbb
pop
scas
mov
fadds
imul
loop
inc
cld
or
popf
adc
cs
inc
inc
pop
ja
lock
loope
jecxz
das
jae,pt
mov
imul
xor
icebp
sbb
scas
cwtl
push
rolb
cmp
mov
jne
ja
push
xchg
and
stos
lret
add
mov
jp
lea
jnp
inc
cs
push
loopne
pop
dec
leave
loope
jno
es
test
fnstcw
mov
push
or
arpl
cli
lea
movsb
sbb
rcr
dec
inc
out
sbb
jo
dec
nop
inc
roll
scas
mov
mov
cmp
cmp
loopne
dec
arpl
insl
scas
lods
mov
xchg
push
fdiv
ror
ret
cmp
insb
cmc
orb
mov
jp
add
enter
dec
or
inc
loop
daa
inc
lret
icebp
mov
mov
jl
pop
or
jo
mov
fnstsw
int3
out
and
jae
insb
push
sub
scas
dec
test
dec
movsb
in
insl
imul
xchg
push
inc
or
xlat
lea
mov
mov
jl
stc
ja
cmpsl
pop
cmp
jmp
and
or
mov
or
push
shl
pop
mov
dec
dec
jp
xlat
add
ljmp
aas
icebp
fsubl
pop
sub
mov
shrl
mov
mov
or
cmp
mov
dec
out
sbb
fimull
push
xchg
add
lret
shrb
imul
and
xor
loop
insb
jmp
addr16
fs
and
nop
lds
cmpsl
pop
push
fldcw
outsb
lds
or
jne
jns
sti
idivb
mov
adc
xchg
sbb
add
cmp
scas
push
jne
sbb
cltd
xlat
je
fucomp
imul
aad
pop
push
ds
mov
add
mov
fdivl
in
add
mov
sbb
adc
mov
loope
pop
enter
push
outsl
lds
loop
mov
addr16
adc
movsb
adc
jbe
lods
call
cmp
push
mov
adc
xchg
mov
mov
js
cwtl
test
fwait
and
inc
mov
repnz
xchg
sub
in
cld
dec
mov
push
fistpl
call
ret
ret
inc
js
cltd
mov
stos
dec
add
mov
pop
mov
or
lods
add
mov
mov
pusha
stc
adc
addr16
pop
adcl
or
xchg
xor
or
or
mov
dec
jg
adc
stos
mov
or
rep
out
jmp
cmp
xor
loope
jo
lret
adc
jb
les
sahf
push
ja
in
pusha
mov
sbb
add
xor
ljmp
jnp
inc
js,pt
xor
pop
mov
sub
int
jns
cmp
jno
pop
pop
push
cmp
xor
out
popf
add
sbb
xchg
loope
mov
adc
rcrl
lods
pop
test
sub
adc
mov
outsl
push
ds
pop
popf
stos
flds
adc
cmp
sub
push
push
in
add
inc
xlat
mov
fwait
clc
jecxz
stos
fdivrs
sbb
scas
loopne
es
sarb
mov
dec
inc
sbb
hlt
mov
push
sub
jecxz
jbe
cmpb
out
jl
push
inc
pop
push
xchg
fincstp
pop
add
test
xor
sarl
push
push
mov
decl
scas
inc
adc
mov
movsl
inc
fdivs
mov
adc
push
pop
jno
xchg
sub
jns
and
push
sbb
dec
repnz
imul
push
mov
cmc
popa
decb
inc
shrl
cltd
push
insb
mov
fldl
xchg
mov
mov
mov
jle
or
insl
cwtl
nop
hlt
mov
adc
shrl
out
fcmovnbe
rclb
bound
ds
sarb
or
insb
iret
lahf
adc
dec
in
lock
ret
je
roll
pop
aaa
stos
mov
sti
es
fwait
push
lahf
adc
inc
dec
xchg
fcoms
jp
jbe
fcoml
cmp
and
movsb
cmp
jmp
pop
mov
enter
out
inc
sbb
or
inc
pop
lea
movsb
pop
sbb
fnstsw
je
jno
push
icebp
arpl
pop
int
cmpsl
adc
push
nop
push
xchg
mov
mov
pop
enter
or
pop
test
mov
pop
rolb
mov
ljmp
orb
flds
out
ret
mov
mov
adc
dec
push
mov
sub
mov
xchg
fld
or
movsl
inc
jle
filds
dec
pop
fdivrl
orb
pop
jno
mov
popf
lods
pop
aaa
mov
mov
cmp
mov
pop
sbb
pop
pminub
jb
jle
lahf
dec
fsubs
addr16
test
into
jp
es
sbb
js
std
push
or
cmc
iret
cmp
sbb
pop
lahf
add
lods
stc
and
cmp
mov
cmp
test
push
push
and
mov
cmp
mov
lret
rcll
insl
je
mov
push
icebp
xchg
lret
sbb
sti
in
fists
int3
sub
mov
stos
into
jl
xchg
xor
andl
adc
enter
dec
fisttps
or
inc
mov
and
xor
in
xchg
ret
je
dec
xor
es
clc
mov
push
sbb
mov
int3
cmp
and
sub
pop
subl
lods
bound
adc
pop
enter
pusha
add
fisubrl
fs
adc
dec
or
loope
mov
mov
and
imull
fdivrs
inc
lcall
xchg
pop
mov
in
ja
pop
in
pop
inc
scas
fnstcw
push
insl
in
lahf
xchg
push
pop
lahf
push
adc
cmp
xor
xchg
shl
jp
pop
ret
or
cld
mov
jg
fbstp
inc
jae
mov
push
dec
cmp
icebp
sub
rolb
lock
and
setno
sub
push
movsb
pushl
inc
push
push
sub
mov
cmpb
repz
rclb
outsb
or
sbb
inc
inc
add
cmp
add
arpl
clc
cmp
dec
pop
fcmovnb
inc
sti
xchg
dec
arpl
mov
sbb
in
in
mov
gs
fwait
jecxz
or
or
in
aaa
cmpsl
sub
repnz
and
ss
mov
push
dec
insb
pop
inc
stc
sbbb
mov
pop
int3
push
imulb
popa
and
xor
int3
scas
xor
push
or
adc
aam
jg
pushf
pushf
aaa
sbb
mov
jmp
xlat
pop
push
call
adc
xor
mov
mov
xchg
jae
jl
imul
mov
lods
adc
mov
shr
mov
inc
fstpl
fsubs
pushf
scas
mov
movsb
in
cmpl
loop
push
lods
cmp
or
test
push
aam
xchg
fstpl
jl
leave
dec
pop
push
fwait
cltd
push
cmp
icebp
lods
sbb
xor
lcall
jno
mov
xchg
pushf
jle
adc
inc
push
aam
or
inc
imul
add
dec
adc
ficoms
addb
lock
fcomps
xchg
mov
int3
jbe
inc
mov
test
inc
sbb
scas
dec
and
lcall
cs
and
dec
cs
sub
and
mov
adc
aad
pop
in
pushf
cmp
mov
shrb
insb
xor
jge
and
push
ret
dec
and
dec
les
mov
lret
ja
cli
out
aas
daa
mov
iret
imul
push
dec
jo
ljmp
arpl
imul
pop
xor
fadds
pop
jns
stos
inc
xlat
pop
andb
shll
and
xchg
outsb
pushf
ficompl
add
mov
push
ljmp
adc
mov
notb
sub
nop
inc
outsl
in
xchg
cs
les
scas
cmc
flds
xchg
rol
pop
ret
mov
cmpsl
sahf
nop
aad
fistpll
mov
inc
mov
lds
pop
mov
jne
adc
mov
clc
push
movsb
xlat
dec
jno
in
into
clc
lret
pop
clc
or
cld
or
test
mov
fiaddl
dec
lret
push
cs
cwtl
pop
dec
jecxz
xor
pop
jb
stc
jmp
mov
outsl
jne
ret
cwtl
popa
lock
cld
scas
add
in
mov
pop
xchg
jbe
cmp
inc
xor
nop
and
lock
mov
lcall
add
xchg
add
popa
or
ss
fstp
jns
nop
push
jle
cmp
cmp
lock
ret
pusha
js
hlt
dec
or
scas
popa
pop
lret
leave
jp
jle
dec
rorb
stc
or
lret
cmpsl
je
ss
cmp
xlat
push
fcmovne
and
dec
sbb
stos
jo
add
xor
mov
icebp
mov
pusha
out
in
sahf
mov
call
pusha
loop
jbe
add
arpl
fisttps
push
pop
xchg
roll
sub
mov
mov
or
xchg
fimuls
mov
adc
pop
inc
push
in
fsubrs
stos
out
cs
adc
not
pop
xchg
jo
lds
xor
aas
insb
loopne
shlb
or
push
mov
xchg
sahf
sti
inc
cmp
sbb
cmp
in
sub
adc
xor
popa
mov
sub
test
ret
outsb
fs
repz
jle
inc
mov
subb
xchg
dec
fcoms
rorb
imul
pop
loop
decl
add
adc
sub
orl
sti
cmpsl
bound
imul
ds
or
loope
call
jno
lret
das
dec
std
pushf
xor
or
mov
cmp
out
pop
das
loop
mov
mov
fiaddl
push
lahf
jp
in
jge
mov
mov
cmp
mov
cmp
jmp
mov
cmpsb
mov
cmp
mov
xor
into
inc
cli
mull
mov
mov
aad
mul
stos
xchg
cmpsb
arpl
std
mov
inc
outsb
call
in
add
push
pop
test
push
js
mov
ret
jmp
cmp
or
xchg
inc
mov
xor
xchg
imul
xor
repnz
xchg
fnstenv
fmuls
dec
push
dec
xchg
fs
add
int3
icebp
add
divb
push
ds
in
and
jl
xlat
pop
in
jb,pn
out
fwait
pop
mov
fstps
or
xor
push
and
outsl
and
stos
and
mov
das
dec
sbb
jb
scas
insl
lock
mov
out
or
icebp
outsb
inc
ret
cmp
rclb
adc
cmc
cld
ret
rcrl
aad
add
pop
cmc
cwtl
and
mov
push
mov
xorl
cmp
jo
mov
push
lods
cmp
popa
cmp
add
cwtl
inc
ja
fsubrs
push
mov
cmp
and
push
rolb
aas
pop
mov
mov
push
xor
mov
cmp
fists
xchg
jno
lcall
outsb
xor
repnz
cmp
cmpl
cmp
nop
cmpsb
dec
jl
stos
mov
jge
fbstp
adcb
xchg
jb
fstl
jge
dec
in
add
subb
bound
mov
mov
adc
out
fbstp
mov
add
adc
arpl
les
mov
ja
and
shll
xchg
scas
fisubl
cmp
shl
xor
lods
cmp
into
pushf
fnsave
ret
fadds
pop
and
leave
mul
cli
or
mov
push
cwtl
rclb
xchg
lret
inc
jnp
and
outsb
inc
sbb
out
lods
fadd
jno
mov
into
add
sbb
xor
xor
in
lds
push
sbb
pop
jecxz
aaa
mov
xchg
fisubs
gs
jmp
lcall
push
mov
adc
xchg
call
in
aam
mov
sub
fstpt
mov
xchg
push
movsl
mov
ret
jnp
sbb
jno
ffree
jne
mov
mov
fsubrl
insb
filds
push
mov
nop
je
imul
cwtl
fcmovnu
stc
daa
sarb
and
je
mov
aaa
fnstsw
jl
or
cmpsb
xchg
and
sub
add
jb
cmp
stos
add
push
pop
sbb
cmpsb
jb
lods
pushf
fidivrl
inc
jl
pop
adc
out
cmp
adc
mov
popa
fs
xchg
daa
push
dec
sbb
dec
inc
sub
sbb
mov
leave
fidivrs
or
shll
loopne
sbb
cwtl
std
push
shll
aam
mov
lret
jg
inc
fisubrs
jns
insl
pop
repnz
mov
outsb
stc
pop
lods
inc
push
stos
mov
jp
xchg
and
add
jbe
cld
mov
lds
lea
adc
mov
xor
sti
or
test
xchg
test
fs
or
xor
mov
idivl
mov
or
je
jae
sbb
pop
mov
mov
shll
bound
push
xlat
mov
lret
dec
cmp
mov
mov
outsb
and
insb
ja
into
push
cs
add
movsb
ss
pop
and
pop
mov
out
jecxz
out
adc
mov
xchg
jp
out
xchg
cltd
sbb
xor
cld
in
in
addr16
lret
sub
addr16
std
xchg
ljmp
push
dec
xor
or
and
imul
out
inc
daa
add
repz
dec
loopne
icebp
mov
sub
adc
mov
mov
xor
rolb
loope
test
movsl
mov
add
or
fists
sbb
mov
fiadds
jmp
cmp
xor
sbb
lret
or
push
lea
inc
insl
bound
loopne
mulb
pop
divl
dec
lods
cmp
repz
sbb
call
movsl
mov
aad
add
mov
fisttps
pop
mov
sub
test
enter
inc
scas
clc
outsb
push
dec
pop
push
in
inc
in
fimuls
shr
jbe
shlb
insl
jnp
mov
adc
decl
and
leave
dec
xlat
lock
adc
addl
adc
pushf
mov
pop
aad
mov
jmp
test
mov
push
add
push
leave
jecxz
pop
xor
in
js
mov
adc
add
lret
pop
cmpsl
dec
cmp
lahf
sbb
fninit
cmp
jp
and
movsl
pop
sub
add
nop
mov
outsl
sub
insl
fisttpl
ss
and
lret
rcrl
nop
mov
dec
cld
xor
cmp
mov
outsb
decb
mov
loop
aad
idivb
leave
test
test
je
push
fadd
imul
mov
das
loopne
pop
shll
dec
movsl
mov
pop
mov
in
adc
jnp
ret
xchg
pop
sub
jge
jle
gs
sbb
ja
sbb
ret
fs
fs
add
jmp
push
mov
aam
push
or
push
inc
push
mov
and
in
push
inc
jo
fisttps
push
mov
nop
sub
mov
xor
sub
ljmp
movsb
jne
sbb
sub
pop
lcall
decl
in
in
test
cmp
movsl
pop
dec
mov
in
xchg
in
in
pop
pop
mov
mov
test
adc
stos
out
pop
int
sub
xchg
add
add
loope
cmp
cmp
subb
push
das
loope
push
and
jecxz
fsubr
lret
or
fcmovbe
decl
pop
out
xchg
inc
or
scas
into
pop
adc
or
push
jp
xchg
out
push
popf
and
mov
repnz
mov
add
int3
add
icebp
out
fisubs
aam
pop
jne
pop
pop
push
push
mov
dec
mov
inc
cld
mull
cmp
iret
cmp
lahf
aaa
iret
cli
cwtl
jno
push
movsl
test
dec
sbb
int
loope
hlt
cwtl
mov
movsb
push
push
adc
mov
mov
xor
sub
jmp
clc
and
adc
cmpsb
hlt
jmp
aas
mov
aaa
mov
push
xor
add
dec
dec
ja
pop
mov
sub
mov
pop
cli
call
mov
mov
or
jl
stos
js
add
xor
and
lret
dec
stc
and
push
mov
bound
mov
lds
lahf
lahf
std
repz
repz
aam
push
outsb
lods
cmp
xor
loop
daa
and
sti
fistpl
popf
test
pop
sarl
cmpsb
dec
aam
imul
push
fcomps
mov
xchg
xor
jno
lock
xchg
gs
dec
ljmp
mov
pop
lcall
mov
jne
push
mov
lds
iret
or
imul
push
cmp
in
mov
sub
push
out
dec
mov
or
dec
lods
js
nop
out
push
mov
mov
mov
or
sbb
cmpsb
lea
sub
leave
insl
fcmovb
inc
mov
cltd
int3
jo
pop
or
pushf
daa
rcrb
jmp
xor
xchg
and
mov
pushf
insl
mov
mov
adc
cmpsl
lret
hlt
getsec
cmp
scas
jo
imul
test
outsb
stc
mov
xor
inc
push
rcrl
imul
add
push
imul
ja
cmp
pop
sahf
insb
mov
das
lock
cld
popf
negb
hlt
mov
push
outsl
sbb
inc
xor
test
jge
je
popa
mov
fimuls
sub
mov
ss
iret
scas
icebp
into
and
addb
shrb
pop
sub
dec
jle
lds
push
cld
rcll
loopne
mov
dec
mov
aas
out
orb
jno
xchg
and
mov
negl
mov
mov
and
sti
int
pop
addr16
cmp
mov
jge
data16
jecxz
jno
into
adc
pop
mov
jl
mov
or
push
loop
aad
out
lock
and
lods
dec
inc
lret
xrelease
mov
addr16
mov
rcrl
adc
push
inc
loope
int3
sub
ficoml
call
arpl
cmp
imul
aaa
adc
pop
sarb
xor
notb
mov
repnz
mov
push
dec
add
insl
dec
mov
sar
pop
add
add
mov
mov
push
cmp
loope
cwtl
test
jle
pusha
cwtl
cmp
jns
mov
inc
iret
decb
push
out
or
cli
pusha
or
insl
or
mov
orl
mov
mov
push
sub
mov
mov
mov
cmp
hlt
push
je
xor
jbe
push
jne
sahf
shl
aaa
sub
push
push
inc
cmpsl
pop
jmp
inc
mov
test
orb
clc
xchg
mov
lret
sub
add
das
int3
mov
rorb
rcll
jae
cld
je
mov
inc
inc
subb
cltd
loop
adc
and
mov
mov
jmp
and
jb
xor
mov
dec
xchg
sbb
cwtl
addr16
push
adc
jle
mov
mov
push
outsb
or
xorb
ret
fs
xchg
lods
cltd
xchg
jae
jae
mov
hlt
lods
xchg
je
sub
push
shr
cmp
sub
xchg
das
fiaddl
xor
leave
xchg
ja
inc
xchg
out
sbb
lea
add
mov
jmp
jbe
enter
xor
cmp
daa
adc
je
cwtl
std
into
lret
repz
cltd
pop
add
cwtl
pop
lcall
push
jp
aas
cli
xor
push
and
fwait
test
push
aas
pop
arpl
out
jge
dec
cmpsl
mov
xchg
dec
mov
add
loope
dec
aam
fwait
fistl
inc
xchg
push
nop
imul
or
movsb
or
ficoms
popa
sbb
xlat
or
int
mov
or
call
hlt
outsb
out
fisttps
xor
aam
ljmp
ret
daa
bnd
jge
pop
daa
adc
data16
mov
inc
hlt
or
sbb
jge
xchg
lods
inc
sub
lods
push
sbb
lds
data16
add
dec
mov
push
inc
movsl
mov
mov
jp
mov
cmpsl
jge
test
add
jb
loope
mov
repz
ljmp
in
cmp
negl
jne
loop
lea
add
stc
sbb
ss
jo
jae
out
scas
fwait
mov
ljmp
mov
push
sub
movsb
pop
sub
add
cmpsb
mov
sti
cltd
dec
mov
dec
fstps
mov
push
jl
fcoml
mov
adc
jno
out
daa
mov
mov
mov
test
sub
out
cwtl
jecxz
dec
popf
andb
and
jle
adc
int
sub
aaa
imul
adc
lds
cmc
jb
mov
lret
test
sbb
into
das
sbb
sub
mov
xchg
jns
ja
aad
pop
outsl
dec
sbb
mov
pop
outsb
and
andl
pushf
sub
rorb
test
enter
mov
fsubl
jecxz
mov
inc
testl
and
in
mov
stos
and
cmp
fmul
inc
lahf
ret
icebp
dec
pop
ror
mov
mov
bound
fstpt
iret
into
mov
stc
or
cmp
inc
push
or
ja
cmp
xor
jecxz
test
dec
fldl
in
cwtl
ja
sub
xor
lods
adc
roll
clc
pop
out
lods
sub
cld
fidivrl
leave
sbb
scas
sbb
scas
es
sbb
test
xor
test
push
add
shrb
push
pop
pushf
test
ljmp
mov
jg,pt
or
or
clc
icebp
lods
scas
push
sbb
scas
jb
add
push
inc
clc
mov
gs
jnp
rorb
pop
add
je
mov
cmp
adc
aad
sub
add
and
ljmp
mov
aaa
inc
jp
mov
push
sub
adc
cmp
cltd
imul
and
lea
rcrl
mov
inc
xchg
dec
mov
addr16
cwtl
sub
push
inc
int3
insl
sub
subl
hlt
out
sbb
jne
aam
xchg
inc
or
xchg
xor
push
add
jb
adc
or
xchg
dec
push
out
popa
decl
out
mov
fnstsw
add
or
cmp
iret
das
mov
dec
add
xchg
or
jg
insl
xchg
inc
sub
cli
shrb
cmpsw
and
lea
add
shlb
mov
mov
xchg
clc
cmpsb
addr16
js
sub
push
dec
jmp
rcl
cmp
imul
idivl
pop
mov
into
add
loope
mov
nop
decl
fs
stc
sub
xchg
in
clc
les
mov
sub
jle
test
sbb
ljmp
adc
xchg
sub
dec
adc
fucom
mov
cmp
pop
push
int
inc
mov
push
sbb
scas
rcll
out
push
pop
cmpb
into
popf
cmp
ja
repz
into
lahf
push
aaa
add
nop
mov
fucomip
nop
fisubs
jg
ja
xchg
or
sbb
mov
test
rcrl
and
xor
push
iret
sarl
push
les
add
jecxz
adc
mov
bound
inc
sahf
ljmp
loop
adc
inc
popf
test
out
mov
sub
or
in
outsl
jl
cmovg
shll
pop
test
inc
iret
rclb
push
mov
mov
dec
pop
nop
mov
or
pop
lock
pushfw
fisttpll
cmp
mov
xchg
mov
cltd
enter
out
inc
scas
push
lcall
xchg
pusha
ret
aad
pop
xchg
popf
xlat
mov
cmpsb
hlt
sub
lcall
testl
aad
bound
jbe
adc
das
lods
cmp
test
inc
xchg
jge
mov
pop
sti
cmc
pop
pop
loopne
dec
push
popf
or
out
outsb
mov
jg
icebp
int3
loope
push
inc
jg
iret
mov
cmp
les
pop
cltd
or
mov
lock
pop
das
icebp
sbb
xchg
ret
push
ljmp
std
mov
xor
inc
add
rclb
jnp
sbb
scas
shll
aas
mov
lods
into
sbb
sahf
aam
addl
mov
addb
mov
std
sub
mov
incb
or
iret
mov
mov
ja
mov
xor
jnp
xchg
add
ret
rcl
insl
mov
loop
aam
inc
xor
sbbb
arpl
mov
or
add
sbb
int
stc
stc
cmp
pop
mov
inc
scas
xor
xchg
in
lds
mov
outsl
daa
inc
cld
ds
cmp
ret
mov
mov
xchg
dec
std
inc
dec
xor
sbb
mov
hlt
icebp
jnp
inc
xchg
ror
mov
inc
repz
cmpsl
jg
sahf
mov
fmuls
sbb
andb
jne
scas
and
out
lret
testb
dec
adc
sbb
mov
pop
shr
div
or
cmp
inc
daa
rclb
repnz
mov
inc
ret
outsb
dec
mov
mov
cmp
dec
insb
sub
or
mov
sbb
mov
sahf
bound
cmp
jo
jbe
sub
adc
jno
or
push
mov
in
add
lock
push
stos
add
ss
sub
sbb
fnstenv
mov
stc
dec
add
push
mov
in
cmpsl
sub
inc
or
xchg
aaa
inc
sarb
adc
js
addr16
mov
or
ljmp
cmc
fwait
push
out
loopne
mov
dec
push
loope
mov
adc
scas
popa
lahf
inc
push
mov
fsubs
or
pop
call
pop
or
mov
fwait
cltd
mov
jp
jg
addl
inc
stc
and
mov
insb
or
ds
add
push
and
hlt
pop
jns
aaa
roll
inc
enter
stos
test
xchg
jbe
ret
repz
push
sbb
jnp
andb
arpl
lahf
mov
sub
add
sbb
test
aam
rol
icebp
imul
icebp
and
into
test
pop
jmp
ss
mov
pop
jnp
mov
sti
cmp
popa
das
int
orl
jne
xor
imul
ret
pushf
andl
inc
cld
jecxz
xlat
dec
mov
add
xor
sti
jnp
mov
add
fsubp
int
ss
inc
ljmp
scas
cmp
and
out
loopne
repnz
cmp
js
sub
call
leave
inc
adc
and
ljmp
mov
pop
add
jl
jno
mov
rcrb
sbb
insb
rcll
push
add
fisubs
mov
imul
aas
loope
inc
fbld
repnz
lcall
rorb
outsb
test
out
scas
test
repz
sbb
rol
insb
xor
sub
add
pop
xchg
sub
ljmp
lods
test
lds
sub
dec
pop
dec
and
pop
ljmp
jb
testb
push
lods
jp
sbbl
or
fsubrs
pop
add
mov
loope
leave
bound
xor
cmpsl
stos
inc
mov
lcall
icebp
ss
fsts
leave
mov
sub
into
pop
xorb
lods
clc
repz
out
aam
aas
dec
mov
ljmp
movsb
pop
mov
dec
outsl
xchg
repz
add
jmp
push
fcmove
mov
stos
mov
repnz
enter
cli
mov
sbb
push
sub
rolb
dec
out
lods
lcall
pop
jle
rorl
pop
pop
loop
mov
neg
mov
add
cmpl
out
xchg
xchg
push
enter
sti
mov
loope
sahf
out
ss
sub
or
xor
mov
jns
mov
pushf
loope
dec
or
lods
out
movsb
xor
xor
out
insb
fwait
cmc
xchg
or
insb
jne
add
clc
cltd
cmpsb
ljmp
jae
mov
cs
mov
mov
popf
add
xchg
cmc
movsl
xchg
sub
jo
xchg
cmp
add
pop
clc
out
xor
pop
inc
jmp
xchg
sahf
xor
jmp
fistl
fistpll
sbb
jmp
imul
call
in
inc
cld
ljmp
cmp
jns
test
insb
jno
ljmp
cmp
pop
adc
out
fisubs
into
jge
xchg
push
xchg
push
call
neg
aad
lock
bound
clc
mov
cmpsl
xchg
inc
sub
xchg
push
mov
jge
rol
test
or
cmp
test
in
daa
and
inc
jo
ss
mov
mov
testl
int
les
lods
scas
subb
jns
std
add
xor
mov
jmp
xlat
cmp
xchg
xlat
mov
loopne
push
sbb
sub
divb
pop
cs
push
fwait
or
xlat
push
xor
popf
jne
xchg
mov
jp
mov
inc
jle
inc
bound
sbb
or
mov
aad
add
out
push
jo
jb
fmulp
cmp
shrl
adc
xchg
test
cmp
mov
or
in
xor
or
shll
inc
setge
rcr
inc
iret
sub
mov
xchg
dec
icebp
mov
nop
xchg
fcomps
inc
pop
sbb
icebp
mov
aas
inc
jnp
sub
sub
and
xor
cld
or
loope
push
adcl
fists
imul
xchg
fwait
out
aam
into
js
dec
sbb
cmpsb
ss
loop
push
mov
inc
loopne
xor
pop
xor
sub
push
push
test
mov
movsl
movb
psadbw
xor
shll
mov
or
jg
outsl
in
xor
popf
popf
jg
push
cltd
out
out
fdiv
fs
sub
cmp
jae
test
gs
out
cs
fiaddl
stc
rcll
inc
ror
insl
inc
lock
icebp
push
andl
test
fsubrl
mov
push
sbb
lock
mov
lret
int
fdivs
jp
insb
jmp
mov
mov
imul
roll
std
movsl
into
cmpsl
mov
mov
repz
mov
leave
sarb
loope
mov
push
xchg
or
cmpsl
jno
lcall
xlat
sar
mov
pop
xor
cli
sbb
test
xor
sarb
or
pop
fdivrs
ja
mov
outsl
mov
push
insb
sarb
mov
inc
loop
mov
xorb
sub
sub
out
xor
dec
push
mov
dec
ss
cs
test
and
cmp
hlt
fistpl
dec
xor
in
mov
enter
mov
xlat
bt
push
adcl
sti
mulb
xlat
pop
sub
popf
cmpsl
out
xor
add
jecxz
adc
sub
add
push
mov
gs
aas
je
dec
sbb
subl
sbb
or
inc
adc
cmp
out
aaa
inc
and
cmpsb
pushf
dec
fimull
cmpsl
push
cwtl
lcall
aad
lret
sub
lret
jno
in
out
xchg
push
pop
scas
xchg
and
pop
fs
or
mov
adc
test
in
and
pop
mov
lret
mov
insl
mov
mov
lret
and
adc
xchg
dec
cmp
jle
xchg
daa
jmp
mov
pop
xchg
inc
jbe
lahf
jns
add
shl
fwait
xchg
add
ljmp
popf
dec
and
movsl
repnz
loop
test
out
lods
scas
jno
pop
or
push
jb
out
movsl
stos
mov
mov
mov
sahf
xchg
xchg
or
scas
pop
clc
jle
imul
mov
push
and
lahf
adc
test
mov
cmp
mov
sbb
je
inc
in
mov
lcall
push
xorl
jns
cmp
sbb
mov
js
pop
mov
cmp
dec
and
xchg
lds
fcomip
mov
mov
in
add
aad
into
xor
movsb
pop
pop
idivb
dec
pop
into
push
mov
cmpsb
add
cmp
cs
jecxz
add
repz
imul
jno
test
mov
sahf
jbe
push
jmp
out
push
out
das
bound
iret
sbb
push
mov
subl
fwait
cmp
mov
mov
loopne
adcl
popa
adc
inc
imul
fsubr
inc
pop
inc
pop
fbstp
das
cwtl
mov
out
ds
and
aam
movsl
sbb
mov
mov
adc
jnp
or
or
dec
push
pop
xchg
daa
scas
fsubrp
adc
pop
adc
dec
push
les
pop
hlt
test
call
add
cli
scas
sbb
mov
scas
push
sub
mov
dec
xor
cmpsl
sub
iret
ja
mov
into
enter
out
aaa
push
and
mov
push
add
sub
xchg
mov
push
sub
xor
lcall
aad
push
xor
es
stos
sbb
ss
int3
pop
int
sub
pop
mov
cmp
mov
iret
jp
aad
das
je
dec
mov
dec
shl
or
movsl
push
mov
ftst
push
cmp
iret
mov
pushf
stos
out
mov
add
in
push
sbb
fwait
insl
test
and
ljmp
jns
mov
popf
mov
scas
iret
cld
aam
bound
mov
movsb
and
fstps
mov
cmp
push
jl
std
cmp
mov
ret
mov
inc
lods
xor
gs
push
push
mov
push
out
or
sbb
ficoml
xor
enter
jb
xchg
cwtl
sbb
icebp
mov
cmp
fbstp
rorl
leave
mov
xor
mov
out
loope
push
and
andb
and
sahf
inc
adc
mov
inc
push
xchg
shl
push
mov
push
fst
mov
mov
pop
mov
mov
fdivr
and
xchg
add
ret
sbb
js
jl
xor
jb
xlat
fwait
into
adc
jmp
inc
jo
lock
inc
add
mov
pop
push
mov
test
cld
sub
shr
loop
inc
insl
mov
xchg
scas
test
lahf
cld
push
iret
rcll
hlt
scas
push
in
lcall
in
repnz
cmp
sub
in
sub
or
int3
aas
nop
add
cld
xor
pop
loope
pop
jns
cmp
pushl
jge
jl
in
mov
mov
push
pop
xlat
cmp
inc
push
xchg
mov
or
imul
ja
adc
stos
dec
mov
out
cmp
sub
popf
mov
fucomi
mov
lcall
pop
cmpsb
xchg
lahf
adc
shlb
or
wrmsr
inc
dec
mov
jno
jno
add
movsb
inc
mov
sbb
add
cmpsl
xchg
nop
jecxz
jmp
sub
sub
clc
das
std
out
sub
mov
adc
out
push
pusha
add
xchg
in
sub
filds
lods
lcall
pop
sbb
pusha
cmp
mov
add
push
dec
xchg
outsb
bnd
iret
call
jb
rcrl
xchg
mov
xchg
jne
mov
add
ljmp
push
cmp
xchg
out
lea
scas
aam
add
dec
or
mov
js
xor
xchg
sub
or
enter
or
cmc
xchg
push
into
mov
mov
jp
daa
out
sbb
mov
cmpsb
nop
scas
or
dec
das
pop
adc
in
or
push
fidivrl
mov
addr16
jge
imul
roll
mov
jns
mov
adc
leave
lret
dec
sub
aam
jno
push
retw
add
test
cmp
sbb
int
jb
fildl
xchg
cmp
xorl
and
mov
outsl
xchg
out
sahf
lods
xchg
js
sbb
pop
in
mov
dec
sbb
push
ret
int3
adc
or
shrl
int
pop
orb
mov
fdivl
push
lods
enter
cmp
push
inc
pop
xor
jns
dec
in
mov
test
out
mov
add
add
mov
popf
and
out
pushf
dec
fnstcw
jp
mov
cmpb
xchg
testb
push
pop
sbb
push
loope
push
test
hlt
rcr
outsl
sahf
mov
call
insl
mov
xor
cmp
push
out
push
add
sub
fs
mov
popf
fsubs
cli
xchg
mov
dec
int3
popf
jge
or
cli
or
xchg
cmp
js
sub
sti
mov
xor
sarb
pushf
adc
mov
pop
popf
call
xor
xor
pushw
movb
sbb
insl
sahf
loopne
rcrl
popa
sub
jecxz
stos
fidivrl
or
cltd
popa
test
and
cmp
mov
movsb
mov
xchg
es
mov
sahf
mov
push
dec
pop
inc
popl
or
loop
pushf
in
dec
jbe
mov
push
lret
ds
jne
pushf
bound
or
add
adc
test
add
mov
pop
mov
lret
clc
or
fisttpl
push
addr16
jl
enter
insb
ds
pop
jnp
cmp
lcall
mov
call
lret
leave
out
mov
mov
mov
jb
in
shl
xor
inc
nop
cmp
inc
pop
mov
and
sbb
sahf
es
xor
push
shlb
aaa
rcrb
insl
push
ret
mov
mov
lea
cmc
rcrb
sub
out
sbb
lock
and
clc
lcall
mov
inc
int3
test
jmp
or
xchg
lods
mov
popf
es
cmp
test
jno
push
lret
outsb
out
test
jg
lahf
xchg
mov
jge
fists
push
stc
mov
ret
rcrl
pop
inc
push
ret
and
mov
add
xor
xor
mov
mov
pop
pop
mov
xchg
mov
jl
jbe
xor
push
push
fstpl
popa
stc
aas
in
pusha
negb
push
in
stos
pop
test
sbb
fstps
daa
pop
iret
fbstp
inc
mov
jns
push
mov
adc
mov
mov
sahf
and
fyl2x
in
mov
mov
and
in
mov
in
movsl
rcll
addl
mov
jl
rcrl
out
xlat
fstpl
mov
adc
call
jne
sbb
int3
fimuls
add
sbb
mov
fstl
lds
push
popl
push
pop
sbb
cmp
mulb
aad
xor
outsl
dec
push
rcrb
jge
cmp
rcl
xchg
xor
jns
nop
mov
push
shll
pop
fbstp
stc
repnz
and
mov
lret
adc
cmpsl
cmp
dec
push
mov
vpsrlw
dec
cmp
int3
jo
fbstp
popf
xchg
add
js
mov
repz
ret
lret
mov
fwait
roll
insl
push
adc
mov
mov
stc
jbe
test
jnp
fsts
js
andb
pop
pcmpeqb
sub
or
test
cmpsl
mov
mov
fucomip
arpl
add
aam
rorl
sbb
imul
dec
stc
repz
insl
pop
mov
stos
insl
mov
pop
and
cmc
adc
sub
rcr
sub
mov
aaa
cld
lods
adc
mov
sub
jg
or
inc
mov
std
fwait
orb
dec
adc
cmp
int
iret
xor
fisubrs
fwait
add
cmp
call
scas
sarl
inc
add
dec
add
ror
cli
sub
cld
mov
fimull
out
arpl
adc
sub
push
fisttpl
fnstcw
testl
in
test
mov
or
test
into
pushf
daa
sbb
sub
ret
outsl
out
into
popf
scas
xchg
or
sbb
and
enter
mov
mov
inc
hlt
jns
pop
inc
fistps
jae
xlat
mov
pop
imul
mov
imul
sub
movsl
pop
cmp
sub
xor
pop
ja
sub
adc
xchg
adc
out
imul
jbe
ret
pop
aaa
stos
sbb
inc
adc
mov
push
or
sarb
shlb
xor
in
adc
cmc
dec
stos
fisttpll
pop
mov
insl
xor
pop
inc
mov
and
mov
or
xor
test
stos
mov
sahf
outsb
mov
jae
cmpb
xchg
outsb
retw
mov
popa
pushf
adc
xchg
xchg
loop
push
in
daa
test
out
dec
and
fldt
fadd
clc
ret
xchg
or
mov
lcall
mov
in
fimull
and
mov
cmp
or
or
xor
sbbl
hlt
or
mov
xchg
out
lcall
faddp
iret
and
fwait
shrb
sub
jnp
lods
sub
cmp
mov
mov
mov
leave
xchg
cld
cmp
xchg
lea
sbb
jg
iret
sub
cld
xlat
dec
aaa
lods
adc
xor
shr
loope
push
repnz
cmp
stos
jns
stos
stos
out
inc
insb
cli
loop
sbb
sbb
popf
iret
jno
addl
push
bound
push
sbb
fldenv
ret
cmp
lds
lret
and
aad
mov
adc
adc
mulb
les
lret
insb
ljmp
jnp
clc
cmc
dec
lahf
jno
enter
push
es
mov
enter
dec
dec
fidivl
gs
std
in
ss
dec
lcall
inc
in
jge
iret
nop
sub
xchg
mov
lahf
or
dec
sbb
push
jo
out
push
subl
mov
cmp
testb
aam
jp
add
add
adc
jle
or
mov
or
jno
xchg
or
or
dec
js
sub
pop
push
cltd
dec
jge
shll
sub
fstpt
shl
leave
fildl
insl
cmp
mov
pop
xor
jb
sub
enter
fst
add
xor
mov
push
inc
jge
popf
loope
sbb
xlat
mov
dec
push
pop
mov
mov
js
or
stos
jne
push
mov
cmp
mov
shrb
shrb
loope
js
aas
adc
arpl
adcl
fisttpl
cld
pop
add
pop
cwtl
mov
ficoml
push
xchg
repnz
xlat
fcomps
or
arpl
dec
sahf
addr16
sbb
iret
out
sub
xor
cmc
sub
dec
das
jge,pn
int3
push
xchg
arpl
xor
dec
and
rcr
aas
popa
jecxz
xor
mov
xor
cmp
push
pop
mov
or
pop
sub
xchg
adc
adc
pop
out
sbb
bound
mov
pop
sub
paddsb
sbb
add
lods
mov
stos
add
rcl
push
rcl
xchg
inc
sub
dec
xchg
and
out
mov
out
adc
rol
mov
xor
dec
jne
push
into
dec
add
das
dec
and
cmpb
mov
or
sub
mov
jle
std
addb
xlat
or
xor
adc
xor
out
xor
push
and
inc
sbbb
pop
enter
mov
mov
sahf
adc
mulb
dec
sub
push
add
sbbb
lret
enter
inc
or
stc
adc
jb
leave
dec
mov
sub
sbb
arpl
stc
add
jp
xchg
dec
dec
inc
mov
mov
mov
pop
xor
jae
std
adc
cmpsl
ret
add
mov
pop
into
mov
push
clc
pop
loop
lods
stos
sub
add
pushf
mov
mov
loopne
sbb
out
push
test
dec
ds
fsubrs
shl
ljmp
sub
cltd
add
ss
cmp
pop
inc
push
scas
sub
movsb
mov
inc
push
enter
rcl
and
cli
ljmp
push
jnp
ret
nop
bound
pop
push
mov
adc
aas
aaa
pop
jno
out
push
cmc
out
and
jge
subb
or
sbb
sub
mov
jns
dec
add
sbb
pop
fists
adc
adc
bound
jecxz
fs
mov
mov
int
xor
out
mov
dec
aas
lds
push
sbb
addr16
sbb
cmp
adc
cs
xor
mov
mov
cmp
scas
flds
iret
dec
xchg
add
ss
sti
test
sbb
xor
pop
orl
icebp
int3
sarb
xor
fdivl
sti
inc
xor
add
sbb
jne
int
cmp
xor
dec
lea
shlb
js
inc
mov
adc
xorl
inc
jmp
xor
cmp
stos
cmp
sbb
out
sub
push
inc
scas
or
cltd
imul
mov
or
ret
add
lahf
dec
scas
test
fmuls
push
out
and
jo
addr16
fs
xchg
pop
cmpl
sti
jp
dec
mov
and
and
ret
fs
push
out
pop
lock
xor
pop
dec
jge,pn
xchg
fidivrl
stos
xor
and
imul
mov
xor
dec
mov
jb
iret
popf
push
out
iret
pop
in
cmpsb
xchg
fiaddl
xchg
add
push
mov
nop
into
mov
pop
pop
lods
insl
xchg
setbe
sbb
pop
imul
xchg
enter
dec
add
aam
aaa
lret
ljmp
pop
je
bswap
sub
lret
clc
xchg
xor
pop
mov
mov
scas
sbb
xor
inc
mov
dec
fxch
jns
dec
iret
mov
enter
mov
sbb
pop
out
movb
or
dec
and
in
icebp
imul
flds
fnstcw
test
div
ret
jo
fmulp
popf
andl
fwait
sarl
sub
mov
mov
push
sub
adc
pop
mov
in
sub
bound
lock
lret
or
push
repnz
gs
or
bsf
xor
out
repnz
mov
pop
stos
fstpt
in
cmpsl
or
dec
shl
cmp
jmp
jno
nop
push
pop
cmc
imul
sub
push
in
test
push
scas
icebp
pop
sub
loope
xchg
dec
outsb
cld
cmpb
mov
pop
test
mov
out
stc
and
push
out
cmp
inc
mov
jl
pop
xchg
dec
test
xor
into
ljmp
shl
adcb
test
xchg
jl
sahf
stos
in
mov
loopne
ret
daa
mov
mov
mov
push
jo
sub
adc
hlt
cmp
sub
loope
arpl
icebp
pop
mov
jne
mov
ret
jecxz
add
enter
push
mov
pop
sub
pop
pop
cmp
in
add
and
cmp
movsl
cld
jns
subb
movsl
cmpl
sbb
mov
repnz
or
push
lods
cwtl
bound
xchg
pop
mov
daa
ss
pop
mov
das
add
add
pushf
push
inc
jae
mov
pop
push
xchg
cmp
mov
rcrl
xchg
dec
loop
add
cwtl
mov
cwtl
test
adc
sbb
movsl
sbb
cmp
rolb
ret
arpl
mov
inc
sbb
addr16
ror
lahf
push
push
ret
leave
add
xchg
xchg
cmpl
xor
in
fiaddl
leave
fwait
out
shl
sub
and
cmp
jmp
jecxz
rcrl
mov
jae
xchg
jle
sbb
cmp
mov
adc
pop
xchg
jb
pop
sbb
clc
jo
xchg
xchg
in
fiadds
sub
aad
mov
es
cmp
inc
mov
xor
or
out
aaa
xchg
or
dec
ds
cmpsb
adc
pop
imul
dec
pop
adc
scas
mov
mov
add
mov
stos
xchg
sub
mov
jne
jl
jecxz
pop
xchg
lock
scas
mov
push
imul
xlat
stos
stos
mov
push
movsl
repnz
scas
stos
pop
sbb
push
pop
mov
sbb
and
cmpsl
sub
cmp
and
popf
iret
xchg
and
pusha
add
xor
add
push
nop
fsts
and
lods
scas
and
add
and
clc
mov
mov
ret
call
out
fcoms
shll
add
or
add
xchg
fldcw
popa
ret
and
imulb
dec
lcall
xor
rorl
push
pop
dec
jmp
cmp
imul
cwtl
jbe
push
dec
sti
jecxz
lock
jge
dec
adc
mov
xor
add
cmp
shll
lret
cmp
or
xchg
xor
out
pusha
pop
iret
sbb
das
lahf
arpl
add
lret
hlt
sub
rorb
jno
shlb
arpl
mov
or
sbb
mov
int
add
inc
scas
dec
js
dec
jge
into
mov
pop
pop
sub
loop
push
inc
cld
rorb
adc
cmp
decb
repz
scas
test
push
add
sbb
mov
cwtl
cmc
lahf
jle
lret
push
jns
movsl
dec
fwait
arpl
dec
push
ljmp
das
jo
out
or
cmp
repnz
inc
aaa
cmp
cmpsb
mov
enter
add
pop
mov
pop
es
mov
cli
pop
inc
inc
mov
test
sbbb
sub
mov
in
js
in
popa
xor
push
or
jmp
and
imul
fldl
dec
inc
data16
ret
jecxz
loopne
xchg
push
imul
aad
ljmp
mov
fstps
jo
gs
xor
insb
sbb
cwtl
push
lods
push
jg
xchg
adc
test
and
loop
imul
or
mov
decb
dec
xlat
dec
and
jg
mov
add
aam
inc
popa
add
icebp
jp
xor
sbb
aaa
inc
xor
fnstcw
sbb
popa
mov
add
push
xchg
jl
icebp
xor
cmp
sahf
int
xlat
inc
in
cmp
in
cmpsb
cwtl
popa
test
mov
sub
mov
xchg
xchg
cmpsb
dec
add
bound
sub
sub
pop
inc
sar
fucom
jae
adc
frstor
and
out
jae
call
mov
negl
insl
in
std
ds
jge
xchg
mov
stc
fdivp
xchg
adc
arpl
xchg
pusha
jg
sub
cmc
popl
cmp
jns
cmp
je
nop
cli
cltd
push
testl
fyl2xp1
orl
pop
pop
inc
lea
pop
mov
xchg
sar
adc
xchg
xchg
xchg
loope
test
aaa
incb
or
jae
shl
add
shl
dec
lea
mov
fadd
mov
jle
lret
cwtl
fadd
xchg
dec
add
cld
inc
push
aam
dec
inc
or
js
mov
adc
mov
das
cmpsl
lcall
imul
push
test
jbe
loop
lea
jne
out
ret
sub
adc
lock
aas
ss
cmp
cmpl
fsubs
add
jmp
push
fsubrs
sub
fistpl
imul
cld
out
xor
negb
lea
decl
mov
sub
push
add
adc
aad
or
dec
mov
jbe
jp
jo
push
bound
sti
sbb
or
pushl
faddp
scas
cmc
lds
xchg
incl
negb
xchg
pop
test
loop
cs
shlb
icebp
in
mov
add
out
push
shrl
lods
shl
mov
jge
iret
cmp
imul
push
call
xor
mov
pop
stos
cmp
push
je
mov
jae
gs
enter
call
addr16
fnsetpm(287
mov
or
bound
add
mov
mov
pop
dec
out
pop
xchg
inc
xor
movsl
mov
inc
and
pop
mov
adc
fsubr
lret
inc
out
out
arpl
jnp
inc
mov
lret
dec
mov
shlb
push
inc
or
bound
inc
sbb
arpl
inc
aaa
mov
pop
es
mov
jne
cmp
cltd
test
push
dec
je
jno
push
aaa
mov
lret
inc
pop
mov
jbe
xor
inc
popf
das
push
push
mov
mov
int
mov
add
adc
aam
add
inc
lahf
and
push
jl
jae
mov
xor
or
js
mov
shrl
adc
aas
sbb
pop
aaa
xor
lock
mov
ja
cmpsl
insl
jae
jbe
push
pop
and
adc
cmpsl
out
jp
mov
pop
dec
shlb
push
jmp
jmp
mov
xor
lahf
cmp
daa
les
pushf
test
rclb
sub
mov
xor
pop
add
and
ljmp
js
movsb
or
cmp
movsb
mov
xorl
movsl
cltd
dec
lods
adc
arpl
stos
pop
fiadds
mov
xchg
idiv
loope
and
pop
jne
stc
mov
sbbl
shlb
mov
dec
cmp
dec
or
inc
sarb
jo
adc
out
nop
hlt
ljmp
rolb
xor
leave
adc
push
or
mov
movsl
jnp
jno
lret
out
jne
shlb
fucomi
sarb
push
test
cmc
int3
stos
sub
ja
sbb
les
xchg
aas
ljmp
pop
sub
jl
pop
mov
xchg
mov
pop
outsl
sub
sti
inc
sbb
out
aas
stos
ss
ja
push
or
mul
fidivrl
in
or
pop
pop
mov
mov
ret
mov
sub
je
or
push
mov
cmp
fnstenv
mov
inc
and
lea
sub
jmp
sbb
mov
push
push
out
or
push
dec
gs
sbb
inc
in
and
sub
lods
fldl
adc
fsubrp
cmp
jno
scas
fistps
push
mov
sbb
and
loop
arpl
std
jae
xor
std
sbb
xchg
bound
test
shl
add
fs
mov
push
lods
mov
arpl
and
dec
sti
jno
imul
and
xchg
cmp
std
mul
test
mov
mov
fstps
jmp
inc
je
ja
pop
dec
pop
call
add
insb
cld
mov
bound
mov
xchg
sbb
push
mov
jo
std
add
pop
fmulp
adc
iret
loop
sbb
mov
jnp
mov
out
dec
xchg
add
jbe
sti
sbb
sti
push
mov
ret
mov
repnz
hlt
and
xorl
test
fisubrs
lret
pop
sub
push
fbstp
add
xchg
lcall
fldenv
xchg
rep
jbe
fildll
dec
arpl
jge
cmp
dec
cmpsl
adc
cmp
movsb
jbe
pop
je
cld
pop
fdiv
out
and
lret
or
test
pop
sub
fcompl
xchg
push
add
adc
xchg
scas
nop
popf
pop
push
push
xchg
cmp
mov
out
jo
inc
or
sub
js
cmp
subb
ret
inc
js
push
mov
cmp
mov
scas
fildll
xlat
cmp
shrb
popa
xorl
cmp
test
cmp
jnp
xor
mov
pop
insb
popf
cmp
testb
cmp
stos
sub
dec
mov
mov
mov
jl
adc
fidivrs
shlb
mov
ja
jbe
sbbb
and
test
movsl
sub
lods
test
mov
mov
mul
xor
dec
jl
add
sub
sbbl
aam
int
inc
dec
pop
xchg
stos
and
inc
aam
xchg
sub
es
mov
and
sbb
inc
mov
out
cwtl
jae
mov
or
test
sbb
push
popl
inc
cmp
jb
ret
adc
xchg
mov
jbe
dec
data16
pop
movsl
scas
add
and
inc
loope
mov
pushl
les
sbb
lahf
cmp
imul
aam
add
adc
insl
pop
cwtl
stos
jne
leave
imul
test
ret
sbb
mov
xchg
cli
mov
pop
mov
cld
mov
or
cli
aas
or
in
and
dec
enter
push
xor
push
data16
cwtl
sahf
xor
fiadds
andb
and
fwait
cmp
jecxz
pushf
xchg
movsb
xor
or
outsl
jg
mov
fldt
inc
push
mov
inc
pusha
lock
out
in
sbb
inc
sahf
js
stos
xor
dec
or
push
xchg
ret
and
pop
mov
test
cld
push
mov
lods
ljmp
mov
pop
jmp
add
mov
push
or
incl
sbb
dec
call
lahf
ret
mov
or
stc
jb
pop
les
out
fisubrl
nop
pop
add
pushf
addb
dec
add
ljmp
div
mov
repz
lcall
fdivrs
jo
rclb
sub
add
add
pop
ja
push
mov
inc
xor
adc
cmpsl
or
sbb
mov
or
jo
dec
sbb
push
sbb
in
adc
push
dec
inc
addl
mov
inc
roll
mov
and
inc
mov
jns
adc
rcr
push
stos
fidivl
or
mov
out
and
pop
adc
mov
roll
insl
adc
add
cmpsl
std
ret
jne
push
mov
inc
or
pusha
sbb
jmp
fdiv
fdivrl
into
push
fistpl
sbb
movsl
out
in
bound
lods
popf
and
cmpsb
icebp
adc
ffree
inc
out
mov
fwait
pop
test
jno
lods
repz
ss
dec
ja
push
mov
push
daa
arpl
or
aam
sarl
add
sub
push
xor
je
and
mov
in
insb
xor
aas
cmpl
mov
imul
int3
dec
loop
mov
and
xchg
rcrb
xor
sti
mov
lret
loopne
xor
cs
stos
mov
and
scas
cmpsb
xlat
mov
les
or
pop
repnz
std
cltd
xor
or
mov
pop
add
or
cmp
jo
mov
add
mov
lret
cmpsb
lea
sahf
add
aas
bound
mov
ja
ret
sub
fs
xchg
dec
fmull
pushf
or
cvtps2pi
adc
xchg
ficompl
rorl
mov
cmp
pop
xor
test
add
xorb
push
loope
mov
xchg
jecxz
mov
jmp
aad
fwait
xchg
pop
lret
lea
rclb
jae,pn
dec
inc
mov
push
outsl
ret
push
ds
ja
loopne
out
xchg
fimull
test
leave
xor
mov
fs
inc
xorl
sub
adc
sbb
adc
insl
mov
test
int
test
mov
pop
jp
xchg
xor
jns
adc
pop
enter
mov
ret
jo
outsl
sahf
and
int3
lock
movsb
in
out
ss
scas
in
sub
and
mov
xchg
rcrb
dec
fsubrp
or
pop
jb
or
pusha
and
jg
or
insb
xchg
pop
addl
iret
mov
hlt
add
lds
outsl
adc
loope,pn
xlat
into
movsl
dec
push
dec
insb
stos
and
dec
add
push
or
imul
mov
in
jne
pop
add
cmc
sahf
popf
sar
pop
add
int3
fwait
das
push
fwait
lcall
lds
cmpsl
inc
pop
test
cmc
adc
cltd
icebp
sbb
add
sub
and
sbb
outsb
cmc
enter
iret
pop
dec
pop
clc
add
inc
pop
and
mov
ss
mov
icebp
cmpl
lret
dec
fisubrs
fdivrs
dec
cmpsl
frstor
add
jp
mov
popf
xchg
dec
cmp
lret
lahf
scas
fst
in
push
add
mov
inc
or
jno
adc
js
jge
inc
mov
in
ret
cwtl
and
inc
push
mov
mov
cmp
pop
mov
cmp
xchg
mov
fdivl
mov
mov
mov
leave
in
sti
loop
lret
mov
push
je
xor
or
jg
mov
pushf
mov
sarb
imul
imul
jle
out
mov
in
cmp
xchg
add
ss
test
mov
mov
roll
in
cwtl
adc
jo
mov
icebp
cmp
mov
fwait
int3
fsin
pushf
lret
nop
or
sbb
cwtl
mov
sahf
rolb
xchg
jo
ret
cmp
fstpt
cmp
in
push
idivb
mov
lds
or
imul
cld
mov
int3
pop
jmp
mov
dec
je
sbb
scas
aas
lods
adc
adc
push
aas
into
and
jb
mov
sbb
bswap
mov
jno
imul
ret
loope
arpl
xchg
mov
jp
jmp
mov
pop
mov
and
orb
por
pop
jb
es
and
jecxz
mov
xor
inc
test
mov
mov
lcall
adcl
sbb
insb
js
ja
push
dec
in
aam
push
pop
cmp
jmp
mov
popa
shr
add
iret
imul
outsb
jp
jae
gs
pop
sbb
cwtl
repnz
push
push
mov
rolb
mov
pusha
xor
fisubrl
jecxz
pop
les
mov
pusha
leave
mov
sub
xchg
out
iret
std
pop
sub
orl
sbb
jge
out
jmp
popa
cmc
jg
into
test
push
sub
daa
or
sahf
mov
pop
cwtl
dec
adc
push
mov
sahf
jae
cmp
cmpsb
cmp
lret
ljmp
mov
inc
test
push
iret
test
lock
xor
or
dec
xor
cmpsb
mov
fcmovnbe
jg
shr
repnz
dec
sbb
xchg
inc
inc
mov
adcb
xchg
add
das
xchg
mov
xchg
insb
imulb
mov
and
xor
cld
mov
inc
xlat
push
inc
push
mov
icebp
aaa
int
clc
in
aad
cld
leave
test
cltd
test
and
mov
popf
push
push
or
lcall
mov
mov
pusha
out
jns
rcl
pushl
sbb
pop
lock
dec
cmc
or
mov
sbb
and
adc
xor
xchg
imul
cmpsl
mov
adc
in
daa
mov
aas
emms
cmc
push
lods
xchg
pusha
mov
add
xor
js
aaa
add
adc
test
int
repnz
xor
int3
sub
fimull
cs
or
lds
stc
push
rorb
mov
mov
nop
mov
es
imul
or
pop
push
daa
push
fiaddl
out
call
inc
sarb
lods
mov
mov
rcrb
stos
jnp
icebp
or
xchg
cmp
jne
xchg
jne
sti
adc
arpl
xchg
add
cmp
mov
adc
xor
jns
adc
insl
jmp
addr16
mov
jmp
pop
pop
mov
sti
or
lds
fsubrp
mov
or
test
push
and
out
ret
sbb
dec
loope
dec
sub
push
int3
leave
push
imul
shl
imul
mov
js
pop
rcll
xchg
mov
lods
shr
push
hlt
pop
popl
inc
lcall
xchg
xor
int
idiv
out
pop
jnp
fistpll
das
jae
pop
ljmp
and
call
es
lds
or
arpl
popa
sub
andb
addb
sub
fsubl
call
adc
dec
mov
xor
dec
mov
jns
aam
inc
loope
orb
es
stos
sub
fs
jns
cmp
lret
les
inc
scas
out
arpl
dec
xor
aas
cmp
cld
sub
lahf
inc
inc
push
mov
pop
inc
pop
and
push
cmpsb
mov
pop
sbb
pop
xchg
dec
push
jae
andl
fidivrs
out
std
inc
dec
ret
pop
shr
daa
popa
and
jle
sub
xor
aam
cmp
imul
adcb
out
push
mov
aaa
pop
aaa
out
or
xchg
mov
ficoms
push
or
inc
fwait
outsl
imull
or
mov
mov
sahf
mov
and
lods
sbbb
ljmp
aad
push
ret
insl
mov
dec
filds
int3
out
cmp
icebp
push
add
or
jecxz
or
lcall
outsb
pop
cli
rclb
cmpsb
mov
mov
repnz
ficoml
mov
out
sti
js
fcmovnu
idivl
das
or
or
mov
pushf
xchg
cld
push
xchg
pop
sarb
inc
movsl
nop
es
stc
jne
xor
inc
roll
push
imul
scas
cmp
sub
inc
and
shll
stos
mov
stos
jl
out
aam
lds
lret
pop
jmp
cli
stos
cmpsl
pop
xchg
cwtl
mull
icebp
inc
inc
repnz
rorl
in
sub
pusha
dec
cmp
xchg
inc
adc
push
or
sbb
mov
out
push
sub
mov
push
ds
aam
xorl
jl
push
inc
mov
push
pop
push
sub
lcall
out
mov
cmp
mov
or
adc
loop
mov
inc
shll
loop
mov
sarl
sti
fimull
xor
icebp
xchg
pop
dec
insl
sbb
and
dec
and
in
les
mov
lahf
jl
pop
add
out
push
lahf
add
test
mov
cmpsb
pop
adcl
sbb
aaa
jbe
inc
sbb
mov
cs
push
or
xor
push
pop
xchg
mov
add
mov
andb
pop
out
push
leave
and
add
mov
divl
repnz
push
daa
pop
inc
addr16
in
sub
inc
mov
inc
sbb
or
xchg
arpl
dec
mov
rolb
jb
mov
add
or
or
inc
sbb
test
leave
or
or
repnz
insb
mov
fisubl
fcmovb
std
dec
pushf
test
imul
insb
aam
push
jns
gs
pop
jns
pushf
cmp
dec
adc
cwtl
fnstcw
sub
loopne
jecxz
or
inc
hlt
cmpsl
sub
dec
in
adc
mov
mov
mov
inc
push
push
std
xchg
mov
inc
push
sub
inc
add
mov
fildll
jecxz
in
or
mov
aaa
loopne
test
push
mov
pop
add
sub
or
xor
popa
hlt
xchg
xor
cmp
ss
pushf
test
cmpsl
shlb
cmp
mov
int3
subl
int3
fcompl
adc
xchg
fldt
dec
inc
rcrl
aaa
stos
out
fdivrs
bound
jmp
xlat
mov
jl
fisubs
sub
cs
loopne
push
mov
frstor
adc
add
lea
icebp
pop
or
js
xchg
adc
mov
sub
js
mov
pop
push
mov
lcall
adc
dec
aaa
sub
push
imul
and
lods
mov
movsl
mov
shl
push
dec
or
pop
inc
test
xchg
xchg
jne
push
xor
mov
xchg
mov
xor
sbb
cmp
sbb
adc
mov
mov
in
loop
in
test
and
out
jg
loope
dec
or
rclb
ds
fwait
pop
daa
push
inc
in
mov
pop
js
mov
mov
sub
jp
aam
scas
mov
mov
jge
repnz
jo
sub
push
ror
outsl
aas
ss
mov
aaa
test
add
sub
mov
out
xchg
mov
push
cmp
out
loopne
push
dec
popa
pop
iret
jg
test
lcall
mov
push
or
cld
cmp
jge
push
fdivl
adc
pushf
cmp
xchg
out
push
pop
loope
mov
ret
xchg
sub
adc
inc
lret
and
data16
xchg
movsb
dec
inc
cmp
cmp
imul
repz
pushf
lcall
push
rcrl
push
add
cmc
rcll
mov
push
test
or
ljmp
jl
sub
movsb
jg
inc
add
add
js,pn
inc
push
fsub
imull
push
jo
inc
es
fmuls
or
int3
mov
pop
cmp
or
cmp
scas
testl
mov
jns
pop
mov
or
xchg
add
fisubrs
mov
add
test
data16
push
in
xchg
adc
iret
inc
out
jns
adc
fbld
xchg
push
std
and
shrl
sbbb
or
cs
lea
out
lea
incl
mov
pushf
jnp
xor
add
mov
push
data16
push
cmpsb
or
sar
call
xchg
inc
sub
flds
fidivs
aam
stos
pop
sbb
or
xchg
gs
or
mov
sbb
mov
xchg
and
pop
maxps
nop
inc
popa
mov
pop
pop
cltd
subb
push
arpl
subb
inc
scas
out
xor
jns
cmp
xor
out
xchg
cmpb
adc
clc
pop
add
callw
test
xor
xor
and
fidivs
bound
adc
jge
inc
fsub
mov
push
xchg
fadd
mov
filds
xor
je
and
mov
sbb
push
jle
ja
and
or
and
jbe
repz
or
mov
cs
adc
in
in
adc
js
sarb
lock
mov
outsb
mov
pop
and
mov
dec
pop
outsl
cmc
enter
sub
adc
mov
mov
andb
aam
adc
stos
cmpsl
leave
push
push
insl
sarb
nop
movsb
scas
jo
addr16
mov
mov
adcl
mov
mov
hlt
aad
fwait
push
xor
pop
fmuls
xchg
push
lods
pop
imul
insl
inc
sub
call
shll
loop
cmp
sbb
out
fistl
jae
shrb
cmc
or
cmpsl
fucom
push
cmpsl
aaa
loope
call
cwtl
sarl
jne
lods
mov
mov
xor
dec
xor
jle
test
cld
cmp
mov
xchg
decb
sub
and
enter
stc
or
rorl
mov
lret
inc
xor
push
lahf
adc
call
sub
out
cmpsb
imul
and
pop
or
call
ficomps
insb
or
cmp
cltd
shrb
cmc
and
xchg
inc
mov
sbb
stos
fsubr
xor
sbb
mov
mov
ret
cwtl
sahf
xor
xor
xchg
data16
dec
nop
jmp
adc
xor
arpl
sbb
call
ffree
push
and
jo
pop
out
lods
sbb
aas
mov
xchg
add
add
sbb
or
mov
cmp
mov
mov
adc
movsl
cmp
imul
in
pop
es
lret
mov
mov
loopne
testl
or
repnz
loopne
dec
pop
xor
push
push
popf
out
adc
mov
ret
imul
inc
adc
jo
sbb
jmp
fistps
mov
and
adc
and
inc
pusha
out
jge
push
cmc
sub
and
add
arpl
push
sbb
sub
shlb
dec
and
aam
leave
jns
jmp
fwait
add
mov
rorb
push
cs
dec
and
in
ja
loope
pop
jns
inc
cs
dec
rorl
dec
pop
jno
mov
insb
enter
xorl
add
inc
jle
add
xor
insl
arpl
imul
dec
jns
sub
leave
adc
dec
loop
arpl
ljmp
mov
dec
mov
mov
jmp
addr16
bound
xor
inc
lcall
lock
jecxz
roll
ror
push
cs
adcb
mov
jae
adc
mov
not
xlat
icebp
ja
sbb
push
inc
pushl
rol
lea
mov
jle
mov
out
sbb
pop
dec
sahf
mov
js
call
mov
jb
inc
lods
mov
andl
daa
aam
insb
mov
jg
jge
sahf
mov
xor
mov
inc
mov
xchg
iret
mov
adc
sub
loop
test
sbb
mov
push
mov
jo
rcll
xchg
ret
ds
stc
push
xor
lret
pop
jne
insl
cmp
mov
add
sub
les
jecxz
lret
and
fxch
or
push
cmc
jmp
aas
scas
and
inc
inc
jae
jmp
cli
mov
subb
popf
loope
jle
sbb
mov
inc
inc
mov
dec
test
inc
push
inc
int3
or
aam
mov
lods
mov
das
xorl
mov
outsl
cmp
mulb
inc
mov
xchg
or
jmp
push
in
pop
and
ret
jp
ja
push
adc
repz
lret
cmpsl
jecxz
sbb
stos
cmc
xchg
mov
in
jae
bound
mov
mov
icebp
outsb
adc
xchg
je
add
mov
cli
sti
movsl
push
sub
shrb
jge
repz
push
ds
mov
cmp
fwait
das
hlt
lcall
inc
cmp
mov
xor
adc
cmc
xorl
cmp
popl
mov
popa
or
mov
lods
scas
inc
push
lcall
ss
les
fst
or
mov
and
out
and
jg
xor
jnp
push
jne
xchg
mov
lret
hlt
cli
mov
and
xor
cmp
and
xor
lret
je
enter
xchg
mov
pop
xlat
jp
mov
notb
xor
adc
mov
sub
mov
push
fxch
push
cltd
jp
jae
cmpsb
lock
xor
popa
cmc
mov
mov
xchg
jl
sahf
pop
jae
cli
les
xor
call
stos
xchg
ljmp
jae
aam
aam
mov
or
pusha
mov
and
arpl
rcrb
clc
stos
inc
xor
clc
add
xchg
ds
or
fs
xchg
movsb
mov
pop
dec
jg
sub
dec
cmp
call
fistpll
xchg
fists
insl
mov
aam
inc
adc
cmpsb
add
jno
lret
and
jbe
push
or
out
and
and
mov
dec
mov
cmpsl
push
xchg
test
or
or
inc
popa
cmp
xor
sbbb
repnz
mov
inc
fwait
out
jnp
add
fcoml
je
mov
fisubl
je
movsl
push
adcl
enter
enter
dec
dec
addb
outsb
adc
std
movsb
xor
int
lret
lret
jecxz
xor
ljmp
mov
jnp
xchg
sbb
data16
in
outsb
je
in
test
push
scas
outsb
lret
fldl
fldt
repz
in
into
arpl
pop
clc
dec
dec
lahf
dec
xlat
int3
testb
aad
ds
add
filds
add
insb
cmp
shlb
sub
data16
xor
xchg
push
cmpsl
imul
insb
sahf
mov
mov
lods
pop
mov
imul
add
lcall
jns
call
cmpsl
test
mov
push
xchg
xchg
jmp
stos
mov
shlb
outsl
stos
leave
add
lea
mov
fstl
sbb
jmp
inc
repnz
sbb
stos
push
icebp
pop
loopne
sbb
ljmp
btr
xchg
jb
cs
dec
sub
loopne
cltd
push
inc
add
xor
or
mov
gs
iret
push
fildll
rcrb
add
imul
int3
je
ja
sub
jnp
and
dec
mov
leave
mov
mov
popa
scas
popf
icebp
add
mov
xchg
es
cmp
add
jns
and
test
idivb
cld
repnz
into
rcl
cmpb
or
addr16
xchg
mov
and
pusha
mov
pop
jge
or
xor
cs
pusha
jl
das
imul
imul
faddl
sbbl
stos
mov
jle
cmp
pop
insb
mov
data16
repnz
arpl
in
lods
bnd
stos
js
push
dec
pop
sub
xor
fs
or
jmp
out
inc
movsl
sub
sub
int
es
aas
pop
pop
cmpsb
jp
movsl
sbb
push
cmpl
fs
notl
mov
out
in
dec
xchg
xchg
int
jge
ds
gs
push
je
das
sub
and
jecxz
mov
lds
xchg
xlat
mov
and
dec
pop
xor
js
mov
mov
lds
cmp
pop
js
aam
jl
scas
popf
sbb
and
and
fsubrl
js
xchg
cmp
add
fcmovb
daa
mov
insb
inc
ljmp
add
es
out
mov
xchg
xchg
jnp
push
push
and
cmp
stc
mov
push
xor
inc
fwait
popa
jnp
cmp
xor
push
and
cmp
jo
push
and
jge
leave
mov
inc
rcrl
sub
sub
das
sbb
xchg
test
clc
leave
adc
inc
lock
rorb
sub
loopne
cs
sahf
lret
adc
sti
das
leave
mov
xchg
pop
push
jnp
or
inc
ret
inc
loope
mov
or
cld
and
iret
lcall
gs
sarl
jmp
pusha
pop
xor
jecxz
call
into
jns
rcpps
loopw
aas
ret
mov
sub
mov
adc
mov
sub
in
sub
fimull
ljmp
xchg
push
pop
stos
dec
adc
outsl
dec
sar
addl
push
js
adc
xchg
dec
cmp
mov
jb
js
leave
sbb
xchg
out
les
les
or
fstpl
test
negl
push
and
xchg
push
repz
push
sub
imul
outsb
push
ret
mov
sbb
lcall
push
inc
int
test
loope
xor
lods
lcall
rorl
push
outsb
mov
pop
gs
ss
add
outsb
cmp
or
mov
out
scas
lahf
push
mov
pushf
fisttpll
daa
outsb
xchg
mov
mov
sbb
addr16
push
hlt
in
ljmp
sbb
sub
icebp
sbb
mov
or
cmp
stc
inc
jno
pusha
xchg
fwait
and
pop
inc
pusha
jge
aam
inc
rorb
mov
out
shll
add
xchg
repnz
sub
xor
xchg
add
push
mov
ss
pushf
sbb
mov
jnp
sub
add
lret
frstor
cs
pusha
std
mov
aam
das
in
fcomps
loop
clc
lods
xchg
out
mov
push
cmp
jge
scas
xchg
repnz
incb
cmpb
inc
fmuls
jmp
jmp
mov
out
hlt
mov
or
or
mov
ja
adc
lods
dec
test
lcall
ss
ret
iret
push
push
add
pop
mov
jo
adc
fidivs
jge
call
lahf
push
dec
out
pushf
mov
and
fldl
jge
or
mov
xchg
push
mov
popa
sbbb
insb
movsb
mov
jns
push
mov
inc
bnd
xor
cmp
mov
sti
outsl
add
jp
nop
xor
into
movsb
inc
jg
sar
xor
sti
mov
jo
xlat
mov
popa
fidivl
rolb
imul
adc
xor
es
in
ret
adc
addr16
addr16
test
fisttpl
xchg
adc
test
popf
inc
in
aad
push
ljmp
aam
insb
jl
pop
cmp
pop
and
inc
cmp
subb
jb
mov
lret
mov
gs
and
shlb
mov
stc
sub
push
jno
out
dec
sub
mov
adc
call
ja
call
mov
xchg
mov
xchg
sar
dec
in
clc
dec
push
add
xor
cwtl
test
adc
addl
ja
and
ds
pop
loopne
fs
xchg
xchg
dec
jbe
add
ds
enter
test
pushf
sahf
xchg
ds
pop
mov
add
jbe
mov
movsb
mov
arpl
mov
jg
ret
sub
mov
inc
mov
stos
cmpsl
sub
mov
stos
or
push
mov
js
stos
push
pop
jmp
xchg
mov
outsb
cmp
sbb
and
add
sub
mov
lret
dec
es
mov
nop
jno
jg
iret
hlt
loop
in
dec
rorb
and
push
mov
xor
es
in
fnstcw
mov
in
les
adc
dec
mov
loop
movsl
mov
fwait
mov
mov
or
xchg
pop
imul
data16
cs
div
dec
adc
icebp
inc
rcrb
mov
jbe
inc
filds
mov
or
mov
ret
mov
popa
std
sarb
pop
fs
push
add
sbb
mov
xor
out
add
sub
test
shll
add
jb
adc
dec
push
adc
sbbb
mov
and
ret
sar
cld
cmp
les
movsl
in
scas
inc
loope
insl
out
out
ror
test
add
sub
scas
mov
or
xchg
aas
pop
add
and
ljmp
int
mov
loopne
pop
insl
cwtl
cmp
and
sbb
or
das
sahf
pop
dec
inc
pop
test
jns
and
mov
push
lahf
decl
mov
jge
negl
jg
xorb
pop
jle
push
xchg
stc
in
pop
leave
in
mov
dec
in
inc
ret
add
xchg
inc
mov
mov
push
mov
and
jl
imul
cmp
ss
cmp
inc
hlt
shll
jmp
iret
es
jecxz
jne
inc
sbb
xchg
pop
cmp
fldenv
icebp
adc
xor
daa
push
cli
inc
sub
jecxz
mov
mov
sub
fsubrl
leave
mov
cmp
push
fsubrl
sbb
in
mov
stos
dec
xor
pop
cli
iret
shrl
dec
cmp
repz
leave
jbe
cmp
lds
in
sbb
int
inc
scas
imul
xor
scas
jmp
and
xchg
in
add
push
cmp
lock
sahf
push
push
out
push
mov
xchg
test
cmp
loope
imul
cmp
jb
inc
pusha
js
leave
xor
mov
or
jno
daa
xor
das
call
cmpl
int
incb
mov
mov
cmp
or
ja
fsub
or
pop
or
mov
rclb
std
sbb
mov
xchg
xor
jge
lea
mov
out
mov
dec
rolb
sbb
sub
sub
sahf
insb
cmp
stos
fsubs
pushf
push
in
pop
call
repnz
mov
pop
shll
mov
cld
xchg
fists
in
scas
dec
jmp
pop
sarb
cmp
nop
repnz
xor
sub
fwait
push
fstpl
lds
jb
mov
dec
pop
push
icebp
mov
inc
outsl
pop
jecxz
shrl
test
or
sub
mov
fsts
cmp
in
xchg
outsb
pop
inc
nop
mov
shll
adc
icebp
imul
xor
pop
lds
jns
ds
or
push
std
or
mov
mov
sub
fwait
ja
cmp
push
movsb
negl
lret
or
in
jmp
popf
mov
mov
cmp
nop
lret
rolb
mov
movsl
mov
scas
mov
stos
xchg
mov
pusha
jns
pop
out
mov
adc
sbb
or
inc
inc
xor
lds
push
repz
add
jno
mov
call
push
jle
outsb
sarl
rclb
inc
loop
pop
push
push
add
fsubp
adc
sbb
xor
sbb
fisttpl
sub
loope
cwtl
lcall
stc
adc
adc
into
and
fcmovne
aaa
mov
shlb
cltd
outsl
aaa
lret
cmp
mov
push
pop
mov
in
jae
sub
arpl
cmp
insl
in
loope
call
clc
mov
cmp
les
pop
test
icebp
dec
or
loopne
sub
dec
xchg
xor
or
mov
inc
dec
adc
sub
xchg
mov
and
cmpl
ficoms
xchg
ret
xchg
or
sbb
jmp
and
jmp
push
ja
lcall
dec
std
xlat
orl
add
adc
ljmp
aam
cwtl
sbb
jg
xor
pop
mov
inc
add
imul
popf
push
mov
or
das
mov
lea
dec
rcll
jae
dec
les
mov
imul
loopne
ds
aaa
push
in
int
add
jmp
adc
xor
fisttpl
add
insl
push
cmp
rol
and
int
xchg
mov
cltd
test
jnp
xor
xchg
pmaddwd
popf
or
push
mov
xchg
in
sbb
push
int3
xchg
jp
mov
mov
aad
js
xor
cmpsl
lods
mov
add
push
cmp
jne
mov
mov
jmp
ror
iret
jbe
push
and
je
and
imul
mov
test
cmp
adc
fisttpll
xchg
add
jge
cmpb
and
lea
les
loope
cmp
jae
fld
add
and
pusha
jmp
sub
enter
xor
dec
in
int
cs
jg
add
cmpsl
mov
cmp
jmp
shrb
xchg
mov
stc
fstp
jl
push
xorl
or
jbe
mov
andl
pop
lret
scas
mov
cmc
mov
sub
cmp
inc
int3
lcall
adcb
pop
leave
inc
hlt
dec
and
mov
repz
mov
dec
je
rcl
mov
mov
adc
add
pop
outsb
mov
mov
movsb
mov
stos
xchg
ret
sti
dec
lret
shll
test
push
cmp
iret
xchg
jae
mov
cs
in
push
cltd
jb
cmp
call
out
clc
call
add
or
cmp
mov
mov
inc
insl
dec
cmp
inc
decl
and
aaa
xor
scas
mov
sbb
mov
pop
xor
pusha
iret
push
push
and
push
mov
rcrb
fldenv
mov
daa
test
mov
and
lret
dec
add
adcb
dec
sub
cmpl
mov
mov
jne
mov
mov
mov
xlat
inc
into
aad
xchg
dec
leave
es
inc
pop
jge
inc
jbe
push
lock
inc
lcall
outsb
jg
push
mov
sub
daa
sarb
pop
jg
sbb
xor
es
push
aas
add
cmp
cmpl
or
call
in
xor
aad
push
stc
mov
xchg
pop
fdiv
lea
mov
sarl
aad
xchg
test
inc
push
nop
stos
adc
sarb
xchg
add
jp
mov
dec
cli
cmp
movsb
imul
sbb
int3
enter
dec
mov
in
mov
sub
jl
xchg
and
cmpsb
inc
adc
les
scas
rorb
loop
jge
mov
dec
ljmp
popa
dec
sbb
adcb
and
or
pop
call
pop
es
xchg
ja
push
sarl
into
call
push
adc
and
jbe
pop
dec
frstor
stc
lret
gs
sbb
iret
mov
jg
rcl
mov
pop
int
add
cs
xlat
ficomps
add
pop
add
movsb
dec
xor
and
or
cmc
mov
mov
nop
pop
adc
sbb
and
in
jge
cmp
pop
jae
jl
pop
jns
cmp
pop
push
pushf
sbb
pop
cmp
xchg
dec
pop
lods
push
mov
aaa
ljmp
add
popf
stc
ficoms
jns
imul
jp
dec
lds
out
lock
cmp
push
push
ja
or
mov
mov
sub
inc
or
xchg
fwait
testl
and
or
scas
adcb
test
pop
mov
push
imul
push
push
clc
cli
bound
jle
mov
jno
shlb
pop
insl
rol
fsubrl
fstpt
sbb
sahf
ljmp
jmp
scas
and
sbb
cmp
xchg
inc
iret
daa
and
sub
push
orl
mov
fidivs
mov
ljmp
add
add
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
orl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
mov
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
nop
xor
inc
nop
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
nop
nop
nop
nop
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
xor
add
xor
add
jo
add
loopne
add
add
add
add
add
nop
add
addb
add
mov
add
add
add
addb
add
or
add
add
add
or
add
addb
add
add
or
add
xchg
sub
add
or
add
add
add
add
sub
add
or
add
add
add
add
add
or
add
add
add
xchg
add
mov
add
add
add
dec
add
addb
add
or
add
add
je
add
or
add
add
add
nop
add
addb
add
mov
add
add
add
add
cwtl
add
cwtl
add
add
add
add
add
add
add
add
popf
add
rolb
add
add
add
clc
add
addb
add
or
add
add
add
add
in
add
in
lahf
add
in
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
and
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
jb
push
add
add
add
add
add
push
add
add
jns
sub
and
dec
add
arpl
add
add
sldt
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
push
outsl
add
add
je
push
add
add
outsl
add
add
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
popa
add
add
popa
add
add
popa
add
add
and
dec
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
xchg
aam
add
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
add
add
aad
add
add
add
aad
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
insb
add
gs
xor
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
gs
popa
insb
jne
push
add
dec
jae
push
