fimuls
fbld
and
ret
fwait
int
rcrl
out
mov
out
fwait
es
decl
dec
or
push
mov
cmp
jo
jae
jns
incl
or
lret
mov
test
gs
dec
sbb
idiv
push
push
clc
dec
cmp
inc
jne
adc
cli
adc
jbe
inc
xchg
in
es
jmp
sub
jecxz
and
pop
cli
imull
sbb
jecxz
int
dec
dec
pop
xchg
sbb
cmp
push
stc
iret
and
jne
aaa
lret
sbb
pusha
outsb
ficompl
jmp
je
add
mov
sub
test
sub
cmp
call
cmp
adc
jb
loopne
xchg
inc
mov
adc
dec
cmp
xchg
inc
incl
shlb
adc
dec
aaa
aas
repz
and
pop
in
xlat
push
incl
push
cmpl
xor
aad
rcl
lcall
sbb
loope
incl
hlt
rolb
jp
pushf
rcrb
insb
sub
lret
adc
dec
push
xchg
sub
ret
aam
xor
ja
rorl
cs
pop
lea
push
cmp
subl
adc
clc
mov
xchg
aad
cltd
test
out
fsubs
inc
push
lea
jecxz
mov
cmp
mov
lcall
adc
pushf
or
in
push
enter
jae
idivl
int3
or
xchg
lods
pushl
mov
jg
dec
push
das
xchg
push
and
aam
fsubl
sbb
jno
adc
ljmp
cmp
or
int3
sub
jo
inc
or
popa
movsl
es
sbb
shlb
jp
pushl
call
xchg
ja
test
push
popf
xlat
fcompl
inc
std
cmpsb
pop
xchg
mov
scas
loop
jmp
jmp
ret
stos
fdiv
add
scas
push
xlat
or
call
push
jp
push
mov
clc
pop
jl
movsl
push
aas
jnp
int
mov
jo
clc
mov
rcr
sarl
aas
pushf
adc
push
adc
loop
in
jae
push
subl
cwtl
add
pushl
sbb
into
mov
orl
bound
dec
mov
adc
pushl
sti
arpl
xchg
jmp
add
xlat
iret
dec
xor
adc
sub
sbb
cmp
jmp
pop
dec
pushf
dec
push
int3
gs
hlt
jae
fiaddl
or
subl
pop
adc
inc
mov
sub
mov
rol
mov
rorb
push
push
loopne
fnsave
and
out
jb
xchg
notl
bound
cld
lahf
add
ret
call
rcr
enter
and
pop
sbb
pop
pop
negb
fdivrp
aaa
std
jg
insw
enter
or
outsl
add
push
scas
xchg
sahf
sbb
ljmp
aas
scas
mov
pop
int3
sub
xchg
nop
xor
fcomip
outsb
popa
or
fidivrs
sub
pushl
sarb
not
pop
mov
push
shll
push
fcomi
xchg
out
lods
xchg
jle
imul
ljmp
int3
arpl
aam
xor
dec
ror
ja
cmp
xor
stos
in
mull
xorl
cld
cmp
filds
add
fldcw
jecxz
setl
xchg
addr16
mov
rcrl
pushl
xor
ret
cmp
cmp
cmpsl
pop
inc
insl
pop
fldenv
movsb
xorps
incl
sti
inc
xor
xchg
mov
xor
or
xlat
and
push
push
mov
cmp
inc
sbb
inc
ljmp
loopne
addl
dec
pop
out
xchg
xor
inc
outsl
pop
insb
adc
mov
push
shlb
push
inc
jno
mov
sarl
in
jmp
dec
pusha
pop
or
inc
fsubrs
or
les
sar
decl
xor
iret
cmovb
pop
insb
cmp
hlt
pop
dec
jp
fcomip
xchg
jno
out
push
test
outsb
fnstcw
addr16
sar
decl
stos
repz
rclb
pop
mov
mov
pop
mov
add
ljmp
cmc
aam
lret
or
xchg
or
imul
imul
mov
lcall
lea
fidivs
or
cmp
mov
lds
jmp
adc
sbb
mov
inc
dec
loopne
sbb
and
and
sub
mov
mov
lret
cmp
push
xchg
xchg
shr
xchg
dec
mov
testb
cltd
or
lret
sbb
js
aas
jo
push
pop
jo
in
cmp
jg
mov
pusha
jmp
pushf
xor
int3
pop
add
call
mov
lea
cmp
or
add
sub
sub
dec
jl
or
sbb
stc
jmp
jmp
mov
adc
pushf
xor
pushf
out
lcall
loop
pop
js
cmpb
rcr
sbb
dec
jnp
iret
inc
test
sarl
mov
fwait
in
imul
je
pop
test
ret
mov
arpl
idiv
sti
jge
jo
aas
dec
ljmp
loop
push
or
in
lds
inc
test
xlat
xchg
lcall
jg
mov
cs
lods
jne
sub
lcall
test
loope
stos
or
dec
mov
jmp
es
scas
lcall
test
lret
sub
pop
dec
xchg
sbb
mov
mov
lahf
and
decl
push
inc
cmp
add
ficoml
cmp
xchg
lods
jl
or
daa
loope
jge
out
or
dec
pushl
decl
add
lods
call
cmp
and
fs
dec
insl
cmp
lcall
ficomps
popa
pushf
or
mov
sub
sahf
adc
movsl
sbb
ret
ret
ljmp
enter
mov
fdiv
fdivs
adc
xor
aaa
adc
notb
leave
adc
pushl
sub
enter
cmp
cmp
lods
jge
repnz
push
cmp
inc
xchg
pushf
push
or
ljmp
adc
jo
xor
cmp
push
pop
pop
jmp
testl
lret
sahf
pushf
insl
sar
jge
adc
bound
stos
into
cmp
mov
loopne
stos
lods
fbld
test
xchg
adc
incl
sub
or
jnp
fs
rcrl
mov
xor
incl
xor
or
pop
mov
adc
repnz
test
sbb
xchg
fisubl
sbb
jmp
js
outsb
or
xchg
add
stos
jae
bound
cmp
xor
jne
call
std
pushl
loop
xchg
stos
ja
mov
mov
jae
pop
cs
jl
cmpsl
inc
sub
ljmp
cs
add
dec
scas
loopne
iret
aas
cltd
xlat
imul
xor
hlt
pushl
std
jg
gs
xchg
negb
pusha
popf
sahf
cmpsl
sahf
div
fsubr
add
push
inc
decl
popa
loope
ss
push
dec
pop
sti
cmp
mov
jbe
inc
or
pop
in
rorl
mov
dec
jmp
test
jno
shl
mov
stos
mov
jo
ljmp
xor
fstps
pop
mov
push
int3
pop
in
inc
mov
movsb
daa
mov
push
push
ret
clc
icebp
sub
cmp
and
arpl
in
lahf
popf
cmp
cmp
cmp
movsl
jmp
xor
xor
push
push
enter
pop
test
arpl
inc
orb
dec
sar
decl
mov
scas
movsb
mov
cltd
stos
cmp
mov
nop
imul
push
add
inc
push
dec
ljmp
adc
or
lods
mov
stc
sub
cld
in
mov
lahf
mov
lds
cld
jmp
pop
mov
das
xchg
push
in
push
lds
pop
push
jns
pop
pop
stos
pop
rclb
mulb
jmp
roll
out
test
push
dec
hlt
sbb
stos
ret
sahf
sar
rclb
add
ljmp
mov
mov
sbb
mov
xor
jp
push
adc
and
push
into
sub
add
xchg
mov
inc
add
or
je
outsl
outsl
xlat
jge
adc
mov
xor
call
in
add
aas
adc
dec
or
mov
jge
std
fbld
sub
mov
mov
lds
sahf
popa
add
orl
mov
xor
jg
jg
jmp
stos
inc
rcl
mov
rcrb
inc
jns
rorl
out
or
iret
int
cmp
mov
mov
xchg
faddl
mov
dec
push
xor
imul
insl
addr16
mov
cmp
xlat
decb
mov
sub
xchg
pop
fs
pop
add
mov
je
sub
ds
addr16
scas
out
cmp
imul
rdpmc
das
shrb
or
lock
jbe
push
std
dec
sub
ret
add
mov
dec
inc
jne
or
out
lock
aaa
pusha
mov
add
ret
push
push
xor
mov
ja
dec
inc
add
add
loopne
mov
jmp
loope
xorb
cmp
gs
add
add
push
jnp
rolb
sbb
je
adc
mov
mov
xchg
mov
addb
sti
insl
cmp
push
xor
sbb
icebp
insb
add
pushf
mov
jmp
addl
ds
in
leave
test
jne
push
lods
ja
loopne
adc
adc
jmp
push
bound
xor
add
mov
and
adc
add
andb
and
add
inc
add
push
cmc
decl
enter
dec
pop
mov
lret
mov
test
mov
add
pop
inc
into
add
enter
fsts
rcrl
jb
jne
mov
mov
inc
into
mov
fsubrl
loope
push
movsb
xor
into
sub
mov
pushf
arpl
jmp
fwait
xchg
xchg
fsubrl
and
pop
sub
sbbb
dec
cltd
out
pop
cmp
js
adc
jecxz
in
ret
daa
add
mov
cs
movsl
lods
fdivl
sub
fmuls
cmp
out
iret
add
cwtl
cmp
out
ds
hlt
jl
mov
mov
push
cmp
xor
decb
je,pn
jmp
les
decl
mov
push
xor
pusha
repz
mull
das
jne
add
pop
inc
mov
inc
cld
lcall
xchg
add
rcll
das
and
or
sbb
and
pushl
test
and
push
add
enter
fucom
add
adc
loop
push
inc
xor
add
or
xor
or
inc
push
and
mov
add
adc
xchg
and
test
test
push
push
xchg
add
shrb
jmp
stos
into
lock
jo
loopne
adc
mov
jmp
lods
stos
mov
ja
inc
mov
xchg
pusha
mov
pushf
mov
sbb
or
ljmp
rcl
adcb
stos
lods
xchg
push
push
dec
imul
xchg
push
mov
adc
jbe
outsb
ja
add
xor
jae
jmp
jne
out
stos
xchg
lods
jmp
sbbb
inc
dec
int
inc
push
leave
stos
cs
test
ljmp
sub
in
fdivr
in
sub
add
jge
and
repnz
jmp
xor
enter
lds
cmp
insl
repz
jp,pn
fnstenv
jns
sbb
sub
out
add
sti
and
ds
scas
int
add
jno
sub
jmp
xor
in
cmpb
xor
fsubs
add
jp
scas
mov
out
dec
movsl
rcrb
incl
jmp
inc
loopnew
sub
in
dec
add
cli
sub
aaa
fildll
clc
fistpll
dec
fildl
inc
pop
into
sub
xchg
call
ss
or
cld
sub
ror
mov
ret
call
and
xchg
xchg
in
push
push
cs
loopne
adc
cli
add
lret
sub
sti
call
mov
enter
fdivs
cs
out
cmp
clc
cmpsl
stc
inc
adc
ss
inc
loopne
and
jg
das
mov
add
int3
sub
mov
sub
clc
xor
adc
fucom
idiv
add
test
mov
inc
push
dec
and
idiv
mov
daa
pop
cld
ret
sub
lds
pop
jmp
jbe
cld
stc
and
adc
clc
outsl
mov
sub
ja
inc
sub
loop
mov
pushf
hlt
push
mov
mov
push
sub
ja
xor
or
push
out
mov
repz
lds
aaa
into
xor
in
fldcw
je
jg
add
dec
test
shll
popf
inc
mov
mov
lock
fsubs
out
and
ret
into
adc
decl
or
addr16
xorb
or
inc
or
jns
repz
outsl
or
rcll
mov
or
inc
add
or
inc
add
mov
data16
lods
out
cmp
lock
stos
rorb
add
sarl
js,pn
xchg
mov
mov
push
inc
xchg
in
or
or
lea
ds
mov
testw
ss
xchg
adcb
mov
jg
adc
adc
mov
jle
adc
ljmp
test
stos
push
out
ret
xchg
scas
cs
jns
popa
sti
jbe
out
rcll
jl
mov
pop
xor
and
iret
jl
ljmp
push
mov
fiaddl
into
daa
sbbb
pushl
pop
cmp
pop
sbb
stos
dec
rolb
stos
rorl
inc
imul
imul
pop
dec
mov
cld
push
jno
rcrl
cli
in
testb
outsl
test
dec
cmp
jbe
inc
jg
cmp
mov
add
enter
jbe
jg
inc
mov
ds
es
xor
mov
decl
sub
mov
subl
mov
insb
inc
aaa
pop
fildll
ljmp
jbe
scas
out
xchg
daa
inc
cld
int
test
js
into
mov
fldcw
mov
test
add
mov
mov
in
mov
iret
hlt
call
cld
iret
aam
stos
xchg
sub
mov
cmp
jge
cmp
loop
inc
or
mov
ljmp
call
push
xor
or
mov
inc
test
in
mov
dec
repz
push
or
inc
adc
call
push
xchg
jnp
rorl
lods
push
sbb
lods
orl
call
test
inc
pop
fldl
bound
mov
inc
subl
ret
inc
dec
mov
or
mov
rcrb
inc
aam
into
iret
test
clc
cmpsb
std
jle
test
add
or
dec
repnz
and
mov
push
fs
fwait
out
add
and
test
je
int
pop
cld
mov
sub
iret
mov
push
stos
scas
push
aaa
int3
xchg
ja
lcall
jle
repz
iret
pop
jae
mov
les
rclb
out
lret
outsb
add
addr16
push
bound
or
ret
mov
lock
decb
insl
iret
adc
push
fsts
outsb
lods
inc
test
mov
es
pop
fimuls
mov
push
jne
add
mov
jp
sbb
inc
rol
outsb
inc
rol
push
mov
insb
xor
les
add
xchg
or
dec
iret
sbb
clc
fildll
fmull
and
lock
adc
int
test
js
xchg
inc
inc
xchg
mov
jno
std
mov
cmp
pop
jmp
dec
xchg
test
jle
fadds
ret
call
xor
insl
push
rcrl
pop
mov
scas
adc
shlb
leave
mov
std
adc
das
es
xlat
rolb
xchg
es
pushl
xrelease
movsb
jo
shr
mov
add
sub
mov
add
outsl
fbld
jbe
jecxz
fstpt
enter
aad
insb
adc
mov
sti
mov
das
mov
std
dec
push
jae
sbb
push
clc
sbb
fiadds
inc
cmp
stos
adcl
xor
xchg
mov
inc
je
int
imul
fistpll
sbbb
insb
inc
add
push
popa
inc
push
xor
push
pushl
push
push
dec
push
inc
pop
jns
popa
jno
push
cmp
jne
outsl
xor
dec
arpl
xor
aaa
imul
imul
push
fs
push
js
xor
pop
push
push
push
inc
pop
outsl
clc
pushl
pop
push
pop
outsb
imul
xor
ss
fs
addr16
outsb
push
outsl
xchg
inc
push
dec
dec
inc
outsb
inc
js
dec
sub
jne
outsl
inc
addr16
inc
arpl
jo
pushl
outsb
push
imul
imul
jb
push
dec
inc
jbe
popa
push
xor
inc
inc
or
outsl
pushl
aaa
dec
push
dec
insl
jbe
push
jno
insb
inc
inc
dec
sbb
lock
clc
inc
arpl
inc
pushf
jp
jb
data16
push
inc
jns
dec
xor
roll
push
xor
mov
jns
insl
popa
data16
fucomi
jo
je
jno
jno
jns
inc
push
ja
bound
ss
xor
pushl
xor
jo
jns
pop
imul
xor
dec
jo
popa
gs
inc
pop
push
dec
je
mov
xor
dec
xor
inc
pop
jl
jge
dec
dec
inc
dec
bound
push
dec
xor
decl
xor
push
dec
pop
popa
push
aaa
insb
imul
arpl
imul
addr16
pop
lods
data16
je
outsb
pop
xor
inc
aaa
jp
xor
dec
inc
dec
add
ja
je
add
dec
inc
fs
jg
add
lcall
mov
ret
pop
xor
cmpsb
imul
add
or
mov
roll
daa
lock
nop
out
xor
xlat
loopne
cs
jbe
mov
out
or
adc
inc
ss
in
sbb
add
imul
or
test
inc
sahf
or
mov
insl
sarb
pop
jge
cld
pmaddwd
ja
and
push
outsb
sbb
jbe
fldcw
push
or
push
mov
adc
and
add
mov
adc
adc
insb
fisttps
sbb
sbb
jbe
dec
lahf
xor
push
push
and
inc
mov
lods
aad
insb
mov
rorb
sahf
loop
insl
fistpll
in
loopne
inc
xor
std
jbe
xchg
dec
dec
mov
out
cmp
jbe,pt
pop
subl
cmpsb
xchg
fnstsw
mov
xchg
adc
lcall
push
std
adc
ljmp
mov
push
daa
out
dec
fdivl
dec
push
popf
inc
faddl
ds
ja
clc
mov
rolb
aas
sti
jbe
adc
das
addr16
adc
cld
ret
nop
mov
sub
in
cld
aas
lds
add
fisttpll
inc
push
sbb
adc
xchg
flds
ja
dec
jo
jmp
iret
ucomiss
inc
push
in
jo
pop
xchg
loop
xlat
inc
aas
inc
jnp
ret
addb
test
or
pop
jbe
sbb
test
outsl
outsb
push
cmp
enter
outsl
and
inc
adc
sbb
mov
es
jb
push
pop
xor
cmp
inc
and
aas
add
scas
leave
les
push
push
push
mov
mov
pop
push
jo
out
fwait
int
fcomi
sarl
add
mov
nop
lcall
pop
jmp
lds
jns
xchg
ffreep
jl
mov
sti
or
fsubrs
pop
sti
fiaddl
das
jge
insb
les
jle
scas
ds
or
dec
or
adc
loope
ja
push
jae
loop
pop
inc
icebp
sti
dec
push
scas
ds
mov
lds
js
lahf
data16
imul
out
or
imul
gs
xor
cs
insb
pop
fcomip
lcall
sbb
gs
jb
je
arpl
push
arpl
outsl
outsb
cs
gs
mov
add
pop
jb
dec
outsb
mov
fidivl
and
imul
inc
jb
fwait
jne
mov
sbb
outsl
arpl
or
mov
xor
push
xchg
imul
out
fbstp
jne
jns
push
outsw
jb
popa
outsb
arpl
sti
jnp
data16
push
adc
sbb
jb
ja
fidivs
cmp
popa
fs
fs
push
mov
imul
cs
ds
jnp
insb
adc
dec
jmp
mov
push
dec
jne
mov
jns
sti
test
fsubrs
pop
sub
sub
movsb
and
mov
pop
arpl
sbb
sbb
jb
jns
js
push
dec
add
flds
je
divb
mov
into
or
inc
and
cmp
fs
jae
imul
sti
dec
outsl
fs
gs
push
or
mov
in
testb
dec
popa
insl
sub
int3
and
inc
inc
mov
xchg
pop
outsl
insl
mov
int
mov
dec
sbb
fs
jb
push
or
and
jae
lds
add
push
negb
push
push
outsb
push
jo
icebp
in
cmp
xor
out
fwait
jle
cmpsb
fsts
xchg
and
dec
data16
push
je
cmp
ja
pop
cmp
popa
imul
mov
cmp
aam
pop
pop
push
adc
push
jns
and
test
shl
xchg
pop
lcall
jb
push
xor
pop
jb
jae
int3
pop
jg
sub
dec
fsubl
gs
outsl
mov
push
jmp
push
inc
jbe
jo
pop
adc
push
jae
jg
add
fnstenv
movsb
outsb
mov
shll
add
popa
jne
jg
jns
sahf
sub
sub
icebp
pop
pop
aas
aad
cltd
int
dec
mov
daa
lret
sbb
or
or
inc
out
or
sub
pop
or
rclb
push
lcall
push
insb
push
dec
bound
icebp
push
push
push
or
jae
into
scas
sbb
xlat
mov
sbb
out
mov
mov
imul
outsl
sub
pop
pop
xchg
arpl
push
addb
xchg
inc
mov
aas
repz
pop
xchg
dec
adc
pop
movd
lods
popl
scas
mov
push
push
adc
sahf
jae
pusha
cmc
cs
inc
inc
adc
sub
jbe
shrb
imull
shlb
mov
inc
sbb
fsubrs
cmpsl
ljmp
cmpsb
lods
loopne
in
ret
xor
sbb
jne
inc
loope
cmpsb
pop
jo
loop
push
xor
xor
dec
test
imul
push
cmp
add
sbb
shl
es
pusha
or
add
int3
xor
lds
mov
lret
movsb
in
int3
or
mov
mov
jge
jge
fistl
push
xor
inc
imul
pop
inc
insb
js
stos
mov
sbb
sub
test
cmpsb
int3
idivl
push
push
jo
cwtl
add
fadds
jnp
cmpsb
inc
mov
ret
gs
add
jecxz
js
jo
addr16
cmp
or
inc
cmpsl
push
xchg
movsb
pusha
jnp
adc
daa
adc
ss
pushf
je
incl
cmp
divb
jae
ja
push
push
dec
test
or
push
push
or
add
adc
subl
push
add
adc
enter
test
add
and
stos
test
inc
push
add
sub
mov
add
popa
adc
inc
push
and
add
subl
nop
inc
and
and
add
add
add
adc
shlb
adcb
incl
sub
mov
mov
fs
add
nop
inc
add
add
subl
push
add
add
push
add
adc
enter
addb
nop
add
push
and
mov
xchg
inc
sub
jmp
subl
orb
adc
adc
lods
inc
call
adc
mov
sub
sub
add
sub
test
pop
add
xorl
and
adc
inc
push
add
mov
orb
push
add
nop
inc
add
add
inc
sub
inc
adc
dec
imul
inc
adc
mov
sub
sub
test
pop
add
xorl
add
and
inc
add
sub
adc
add
and
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
push
push
aam
cmpb
incl
xor
pop
pop
xor
xor
inc
mov
add
add
fnstenv
pop
out
add
add
add
add
add
mov
mov
addb
fisttpl
add
addl
incb
pop
push
add
jg
fcmovnu
cmp
sbbl
sub
sbb
cwtl
add
orl
roll
adcl
test
mov
and
jnp
cwtl
mov
scas
push
xchg
lcall
shll
js
sbbb
imul
cmp
sub
pusha
rcll
pushl
or
and
ds
add
roll
add
fcomi
outsl
ds
gs
rclb
shrb
and
loop
out
dec
or
push
incl
jg
pop
les
call
add
stc
and
insl
das
push
mov
outsl
push
push
pop
add
sbb
cmp
repz
ds
imul
add
fcmovne
shll
push
aad
ret
stos
xchg
test
mov
imul
push
insl
jg
mov
int3
fld
or
loope
pavgb
stos
xor
xor
sbb
gs
popl
mov
mul
ja
lods
stc
jecxz
pop
push
fucomip
push
addr16
push
fiadds
aad
pusha
add
mov
inc
lds
sbb
pop
pop
loopne
lcall
popa
or
into
add
test
arpl
int
addr16
push
sub
sbb
mov
fcmovne
add
dec
test
out
cltd
xchg
pop
push
out
cmp
cs
sti
fnstenv
dec
shrl
xchg
insl
pop
movsl
pusha
or
int3
paddsw
sub
add
mov
or
cmp
shrl
arpl
jbe
clc
mov
movsb
adc
rolb
test
rcll
scas
popf
bound
in
in
pusha
add
dec
xadd
fnstenv
lods
js
cmc
add
adc
cs
ret
insl
mov
fwait
adc
leave
in
dec
sbb
cmp
cmp
dec
push
jge
xchg
in
outsb
test
mov
sub
sbb
loopne
pop
lret
or
aaa
insl
stos
push
pop
xchg
roll
out
mov
out
add
add
icebp
pop
mov
sbbl
js
adcl
imul
icebp
or
aas
dec
inc
xor
loopne
loope
clc
pop
hlt
ret
arpl
mov
je
add
sbbb
aaa
mov
pusha
mov
inc
add
mov
rcrb
fidivrl
in
sarl
sbb
cmc
movsl
jecxz
fimuls
loopne
sbb
cmp
push
mov
fcmovu
xor
or
add
inc
xlat
pusha
xor
mov
sub
lods
pop
idivl
mov
push
cs
rol
stos
cmpsb
xchg
or
xchg
and
insb
fsubr
cmp
addb
dec
std
xlat
jmp
mov
add
lret
push
mov
mov
add
iret
mov
or
or
add
fadds
dec
stc
shll
dec
mov
xchg
cmp
out
in
mov
sbb
movsl
sbb
sub
fnstsw
and
shl
mov
sarl
sbb
loopne
outsl
out
xor
dec
andl
lahf
mul
jmp
stos
pop
cmp
repz
roll
aad
add
sar
xor
sub
mov
popf
out
mov
ja
iret
pop
fsubl
lcall
stc
lock
push
mov
pop
xor
pop
push
jae
aas
js
mov
sbb
iret
pop
lock
sbb
xor
faddp
rclb
mov
dec
lods
stos
add
mov
nop
test
lock
mov
add
ljmp
adc
mov
or
in
add
jmp
xor
cld
cmpsb
jns
mov
cld
push
in
sar
out
aaa
xor
in
fwait
jo
insl
jnp
sub
addb
call
xor
sub
jno
pop
push
sbb
lock
push
outsl
sub
inc
xor
imul
jge
test
mov
pop
mov
jle
xor
add
dec
jnp
add
dec
push
add
mov
ds
push
add
popl
cmc
scas
push
lcall
hlt
rcll
jbe
jb
xchg
and
push
lods
dec
add
dec
inc
jno
mov
xorb
inc
add
inc
lock
push
enter
ljmp
jns
push
adc
sub
pop
cmp
ljmp
or
dec
pop
ja
das
adc
testl
add
xor
decl
imul
fiaddl
sbb
sbb
cmp
or
mov
lahf
jbe
add
jle
mov
jmp
outsb
fadds
cmp
aam
outsb
jbe
xchg
jo
cld
inc
jg
and
in
je
lea
jo
mov
gs
sti
pushl
mov
xchg
je
insl
lcall
outsb
jg,pn
cmp
xor
lock
addb
icebp
ljmp
push
xchg
inc
mov
jp
add
addb
jg
or
sub
add
scas
push
adc
fisubs
xchg
jmp
push
push
mov
and
adc
push
xor
jg
xchg
push
jo
xor
jo
bound
mov
popa
inc
and
add
or
add
or
adc
inc
add
add
test
pop
popa
aas
out
repnz
add
gs
dec
add
in
add
mov
std
or
xchg
add
jbe
insb
add
testb
add
ja
icebp
or
push
lock
shlb
xor
imul
inc
jp
pusha
add
inc
aas
dec
shll
sub
je
imul
stos
and
add
or
mov
lods
insl
lcall
push
push
es
jbe
fidivs
loopne
add
and
dec
pop
adcl
bound
pop
dec
or
lock
es
or
add
pop
or
lods
std
jb
xor
mov
lock
mov
pop
cmp
mov
incb
add
mov
jns
or
add
add
jno
add
fistpll
add
add
les
xor
sti
add
xor
xor
add
and
incl
inc
add
cld
add
xor
sbb
add
push
add
add
push
add
xlat
lock
pop
xor
and
and
mov
mov
cs
ljmp
aaa
add
cmp
fcomip
outsl
clc
mov
loop
addr16
imul
jno
jae
decl
xchg
mov
pop
pop
lahf
incl
testb
jge
incl
cld
pop
aas
mov
fimuls
add
or
aas
sbb
xor
mov
sti
add
xor
rorb
or
push
add
add
mov
add
ja
ds
lock
push
idivb
cmp
jns
mov
pop
xchg
mov
sbb
out
sub
loopne
sub
mov
and
cld
adc
mov
and
sbb
xor
dec
inc
in
and
fcomip
pop
nop
inc
sahf
mov
rcrb
lock
dec
jp
stos
cmp
icebp
mov
cld
lret
xchg
stos
gs
imul
in
jns
jmp
mov
xor
add
mov
push
int
pop
repz
std
mov
in
nop
pop
sbb
dec
ss
mov
lods
stos
jg
in
scas
mov
or
out
lods
mov
adc
repz
inc
mov
add
lret
or
push
cmpsb
into
add
sbb
pop
jecxz
pop
jl
mov
fld
pop
and
pop
nop
mov
ja
sbb
rolb
mov
dec
pop
lret
jno
cltd
sti
repz
fcomip
xchg
test
mov
inc
pop
int
mov
sbb
int
lds
mov
push
lahf
adc
es
mov
neg
out
mov
mov
lock
adc
std
sub
inc
shlb
std
xchg
or
arpl
cld
mov
mov
sbb
sub
mov
cltd
cmp
loopne
mov
adc
add
push
adc
sbb
addb
fstpt
addl
adc
imul
or
insl
stos
jp
add
inc
sub
sbb
push
push
mov
pop
imul
xchg
adc
rolb
shr
aaa
fistpll
add
add
add
aaa
push
push
cmp
adc
add
repz
outsb
add
les
push
inc
imul
adc
ret
mov
add
push
xor
shrl
in
lods
ficoms
inc
or
push
mov
lret
pop
inc
push
cmp
add
add
mov
imul
add
sbb
mov
rorb
outsl
lcall
dec
rclb
int
call
rorb
clc
dec
xor
pusha
testl
sub
pop
and
faddl
add
add
add
and
pushf
imul
cltd
and
enter
add
mov
lods
add
shrb
mov
add
inc
dec
shlb
push
mov
mov
add
mov
aas
pop
adc
pop
mov
add
or
cs
data16
pop
outsl
cmp
fucom
insl
cwtl
pop
mov
dec
mov
lahf
pop
jmp
mov
je
add
sbb
in
int
iret
inc
sbb
sarb
add
fistpl
sahf
xchg
sets
pop
adc
fwait
dec
repz
or
pop
aaa
add
inc
fcmovnb
fisubs
int
dec
lea
pushf
cmp
lahf
add
adcl
mov
push
dec
inc
push
imul
das
sbb
add
push
test
sbb
add
in
loopne
and
push
outsb
stos
mov
push
shl
or
sub
fs
pop
fldt
push
adc
add
dec
pop
fmulp
outsb
pop
out
cmp
or
add
ret
loopne
loop
outsl
xlat
push
pop
jbe
loopne
lods
iret
add
mov
mov
mov
lock
add
lods
shlb
sub
or
pusha
and
rorl
mov
xlat
mov
loopne
out
nop
sbb
and
sbb
scas
xor
push
push
into
mov
imul
jle
push
lods
add
loopne
and
jo
loopne
out
fwait
idiv
lcall
add
fneni(8087
sbb
add
in
cmp
dec
xchg
test
cmp
loopne
outsb
popa
push
mov
scas
xor
push
js
popa
inc
mov
or
inc
and
loopne
out
rcr
push
pop
ret
dec
mov
adc
pop
jae
cmp
add
outsb
add
dec
rcrl
loopne
or
jp
cmovp
stos
mov
dec
hlt
rcrl
loopne
or
push
push
out
cmpsl
jge
loopne
stos
pop
xchg
ror
loopne
stos
push
sbb
pop
loopne
xor
or
testb
loopne
cmpsl
or
loopne
stos
mov
lcall
xor
loopne
stos
lret
adc
lock
adc
cmp
push
jmp
jp
pop
stos
repz
shll
call
add
dec
fiaddl
add
insb
dec
add
ret
inc
out
mov
sbb
push
push
shll
addr16
loopne
jae
in
loopne
push
or
pop
fwait
sbb
mov
pop
sub
sbb
cmp
adc
xchg
inc
add
mov
mov
push
push
jo
fcompl
jmp
jo
loop
or
rcr
ret
cmpsb
mov
pop
dec
push
aam
jge
mov
and
dec
and
sub
js
adc
or
cmp
loopne
sbb
fmul
and
dec
cmpsb
insl
xlat
xchg
sbb
mov
sub
addr16
cwtl
mov
jb
dec
lods
loope
fsub
pop
testb
in
fmuls
ficompl
jb
ret
int3
mov
int
or
mov
fdivl
jo
mov
out
loopne
clc
jne
aas
or
adc
out
loope
mov
cmp
int
jg
out
and
or
cld
jo
mov
jo
lods
push
roll
or
or
jo
addb
add
inc
pop
push
mov
out
ret
xor
lock
jo
jnp
aad
jb
ja
push
push
lock
or
aaa
jg
fcmovb
xor
mov
lock
mul
int
rcrl
adc
out
lock
cmpsl
push
mov
lock
mov
mov
jnp
mov
dec
cmp
jo
inc
sbb
lock
cmp
mov
lock
jg
xor
jno
sbb
stos
and
mov
dec
jo
stos
mov
jecxz
sarl
inc
loopne
pop
inc
inc
shlb
push
movsb
add
fildl
das
or
push
nop
inc
imul
mov
inc
lock
jo
mov
jns
jbe
mov
push
pop
lahf
mov
mov
sti
sbbb
arpl
inc
inc
push
adc
xchg
xor
loop
ljmp
push
dec
cmc
inc
xchg
add
adc
push
inc
stos
jecxz
lcall
repz
pusha
push
mov
repz
inc
add
jbe
and
aas
push
push
dec
cmpsb
shl
sbb
outsl
push
pop
mov
sbb
add
sbb
lock
mov
and
xchg
cmpsb
test
jl
and
mov
loope
insl
add
jno
test
xchg
lock
out
fists
jo
xchg
cmc
idivb
jno
cwtl
adc
cmpsl
push
sahf
cmpsb
incb
repz
std
adc
mov
jno
sbb
xor
mov
xor
mov
jns
rol
roll
stos
or
cmp
adc
add
pop
int3
pop
add
shrb
pop
add
and
add
pop
add
fldt
add
add
jge
push
add
dec
add
jg
add
add
dec
add
add
add
movl
outsl
popa
add
pop
add
inc
add
add
bound
jle
pop
mov
fistps
jl
add
push
add
add
add
adc
adc
aaa
rclb
es
xor
sbb
in
fistpll
add
ss
add
fadds
daa
add
add
ljmp
cmp
pushf
and
bound
nop
or
add
add
sbb
add
add
add
sbb
mov
add
movb
add
nop
or
adc
outsl
mov
xor
push
add
add
mov
lcall
push
add
sarb
dec
add
jp
pop
xor
add
cmp
or
jg
mov
sbb
and
daa
adc
and
insb
adc
mov
add
mov
add
enter
popa
add
add
add
xchg
add
fbstp
sbb
cmp
mov
adc
and
push
add
dec
fnstenv
loope
push
add
sub
cmp
pop
add
mov
fwait
test
push
fiadds
addr16
iret
out
or
cmp
add
add
add
sub
add
add
push
push
and
mov
dec
aam
mov
jbe
adc
adc
sub
add
or
push
add
cld
lcall
add
add
addl
negb
cld
int
sbb
xor
xor
adc
sti
xor
repnz
int
pop
add
xor
mov
push
add
push
add
xor
sar
add
push
add
xor
out
ret
xor
cld
in
fwait
int3
fists
dec
add
xor
movsb
pop
cmpsb
xor
test
dec
cld
int
cld
add
xor
stos
dec
add
xor
scas
inc
add
xor
mov
cld
int
inc
add
xor
mov
add
xor
mov
aas
int3
int
mov
cmp
xor
add
in
cmp
cmp
adc
add
xor
add
ss
xor
add
xor
shlb
xor
xor
xor
int
cld
add
xor
add
cs
xor
loop
sub
aaa
jg
fildll
add
xor
add
shrb
add
xor
add
es
repz
jg
xor
in
xor
add
and
xor
add
mov
inc
jae
add
add
sbb
inc
add
and
aaa
jg
push
cmp
and
cmp
push
cmp
jg
add
sub
add
sub
sub
push
repz
xor
xor
adc
aaa
jg
add
xor
xor
add
ss
aaa
sub
adc
add
cmp
aaa
jg
add
inc
sbb
add
push
sbb
aaa
sbb
inc
pop
add
dec
adc
jg
push
adc
dec
adc
dec
adc
rcll
dec
adc
add
adc
push
push
add
pop
push
nop
pop
push
and
push
stos
pop
push
push
adc
push
into
pop
push
push
adc
repnz
push
pop
adc
push
push
push
push
pop
adc
cmp
imul
add
pop
adc
and
pop
inc
dec
movsb
add
add
dec
push
add
incb
fmuls
adc
pop
adc
or
or
inc
push
or
push
or
inc
push
or
mov
adc
add
movups
push
jo
gs
cmp
adc
cwtl
popa
inc
cmp
cmp
callw
mov
sub
xchg
sbbl
adc
in
cwtl
mov
xor
adc
or
call
xor
mov
jp
push
dec
adc
xchg
sub
inc
sub
push
test
add
and
or
pop
sub
adc
es
fadds
dec
adc
push
dec
adc
and
dec
adc
push
mov
adc
ds
data16
js
sbb
adc
adc
sbb
adc
push
dec
sbb
sub
adc
cmpsb
pop
mov
add
sub
adc
adc
push
sub
lds
bound
pcmpeqb
loopne
lods
lret
mov
or
adc
push
mov
or
and
or
adc
andl
sub
add
push
xor
adc
xor
pop
out
incl
xchg
pop
pop
mov
add
add
mov
stos
add
mov
mov
push
pop
mov
pop
popl
push
pop
test
adc
out
pop
lods
dec
pop
lods
add
aas
dec
pop
scas
jle
scas
nop
pop
mov
add
nop
add
int3
add
int
pop
lret
addb
in
cli
pushl
add
pop
xchg
add
xchg
cmp
sar
xchg
add
pop
xchg
add
pop
xchg
insb
pop
xchg
pop
pop
cwtl
mov
xor
pop
fwait
add
pop
pushf
add
pop
popf
add
pop
sahf
add
pop
lahf
scas
pop
sbbb
mov
sub
add
pop
movsb
xor
movsl
xchg
pop
cmpsb
ljmp
rolb
cmpsl
add
pop
test
es
test
add
pop
mov
sbb
mov
sbb
sub
incl
mov
sbb
mov
sbb
mov
pop
mov
incl
mov
add
mov
adc
mov
add
incl
mov
add
pop
roll
pop
ret
add
ret
pop
les
or
lds
or
movb
pushl
cld
pop
movl
pop
leave
add
mov
pop
or
pop
or
and
lcall
and
pop
or
and
push
or
and
cmpsb
and
and
popf
and
call
sahf
and
mov
and
lods
and
and
pusha
and
and
sub
jg
aas
or
or
and
shlb
aaa
or
or
xor
aam
xor
call
and
or
sub
sbb
and
or
and
or
and
or
and
or
pop
icebp
in
sub
adc
and
or
push
xchg
and
fcmovnu
push
and
or
pop
or
and
sbb
or
sbb
mov
or
and
sbb
push
or
and
or
and
adc
and
call
adc
mov
and
xchg
and
or
mov
mov
or
xor
or
jle
jg
or
and
add
pop
fisubl
pop
or
pop
pushl
push
and
or
push
or
push
or
and
and
or
ljmp
or
mov
push
and
push
and
and
push
and
push
decl
pop
and
pop
and
pop
and
and
and
sub
inc
or
call
mov
sub
cmp
pop
and
or
or
cmp
pop
and
or
ljmp
xor
shll
or
and
das
or
and
or
and
ljmp
or
and
or
and
or
and
push
daa
and
lods
and
cmp
and
and
iret
sbb
scas
and
or
or
and
sbb
and
or
mov
ljmp
and
adc
adc
arpl
adc
adc
mov
pinsrw
push
and
or
or
pop
daa
in
outsl
es
inc
adc
or
or
es
ss
mov
cmp
add
sbb
add
call
or
or
cmp
mov
mov
nop
and
or
xor
or
and
or
or
and
or
rorb
push
or
mov
ljmp
pop
and
or
add
sbb
or
add
sbb
call
add
pop
or
add
adc
or
add
adc
fiadds
loopne
push
or
add
or
jecxz
or
insb
pop
pop
mov
or
add
out
pop
or
push
imul
fucomi
add
or
add
pop
or
shrl
je
out
push
pop
jo
push
or
sti
or
sub
push
or
push
push
or
filds
push
or
adc
dec
or
adc
dec
or
adc
dec
or
decl
push
push
dec
or
sbb
inc
or
sbb
inc
or
sbb
inc
or
incl
push
push
inc
or
and
ds
and
cmp
inc
cmp
adc
cmp
es
cmp
push
ss
decl
sub
xor
sub
push
xor
xor
cs
decl
xor
sub
xor
push
sub
cmp
mov
or
push
and
push
pop
or
incl
sbb
or
inc
push
sbb
inc
push
sbb
dec
push
push
or
dec
push
adc
or
dec
push
adc
push
call
fbstp
or
push
pop
or
mov
or
push
push
or
xor
addb
xor
xor
xor
aaa
xor
xor
xor
xor
mov
jp
xor
xor
xor
insl
or
cmp
fiaddl
ljmp
roll
xor
inc
xor
inc
xor
dec
xor
xor
xor
mov
roll
dec
xor
sub
stos
dec
xor
xor
lds
push
repnz
xor
insb
fdivs
push
xor
pop
xor
pop
xor
xchg
push
pop
xor
xor
xchg
inc
pop
pusha
push
xchg
pop
xor
pusha
xor
xor
arpl
mov
adc
test
adc
lds
xor
adc
scas
adc
adc
adc
mov
xchg
mov
mov
adc
push
lods
pop
ret
shlb
repnz
sbb
mov
jbe
fdivs
mov
rclb
mov
add
xchg
insl
xor
jno
push
js
push
jg
rolb
push
push
test
xchg
add
push
jmp
xor
adc
adc
ljmp
adc
adc
inc
fldcw
call
js
pop
and
mov
mov
data16
movsb
and
and
and
and
xchg
and
add
xor
testl
cmp
div
repz
ds
repz
in
add
add
out
scas
fldt
sahf
out
lods
fsubrs
sahf
stos
fisubrs
jns
jns
pushf
sahf
push
rcrl
aam
rclb
sahf
and
jg
fbstp
iret
jnp
rep
push
insl
push
mov
repz
imul
imul
repz
fsubs
arpl
gs
repz
push
fisubs
sahf
out
fisubs
shlb
push
xchg
jns
out
push
xchg
push
xchg
push
repz
out
push
xchg
push
nop
add
lahf
dec
push
sahf
dec
popf
jns
out
dec
pushf
dec
fwait
dec
out
sahf
out
dec
cltd
dec
cwtl
and
sahf
inc
xchg
inc
xchg
inc
out
out
in
in
aas
ds
repz
mov
mov
repz
xrelease
xchg
xchg
repz
aaa
test
test
cmp
xorb
xor
cmp
repz
xor
repz
das
jge
jl
jnp
iret
repz
jp
jns
repz
repz
pop
sbb
iret
sbb
sbb
sahf
out
sahf
pop
adc
dec
repz
mov
pop
pop
idivl
mul
pop
pushl
push
inc
mov
ds
cmp
insl
jle
cmp
mov
and
push
cmp
fcomip
lcall
das
xor
movsb
add
push
lahf
pop
jle
fs
imul
ljmp
xlat
push
and
outsb
jp
pop
add
or
std
nop
inc
std
daa
mov
in
inc
stos
decl
iret
adc
scas
aaa
imul
mov
cmp
bound
cmpsl
ficoms
incl
in
mov
ret
and
sub
mov
or
cmp
cmp
and
and
sub
orb
mov
aas
popw
sbb
mov
test
dec
and
adc
mov
push
out
jns
sub
adc
cmpsb
add
leave
sub
loopne
call
add
add
outsl
mov
stc
mov
sbb
subb
pop
mov
adc
or
pop
outsl
dec
data16
outsb
dec
xorb
lcall
ss
and
xchg
mov
mov
push
mov
mov
mov
xlat
pop
loopne
sbb
mov
mov
cmp
mov
bound
mov
jg
xor
xor
xor
xor
xor
icebp
jbe
imulb
sub
in
mov
pushl
test
lret
sahf
aas
sti
rorl
adc
mov
push
gs
inc
jge
push
xchg
movsl
jg
xor
mov
sub
mov
jl
sbb
mov
insb
pushl
mov
jl
jnp
mov
imul
xor
lods
push
push
push
fisubrs
imul
lcall
jbe
enter
xor
xor
xor
xor
xor
xor
xor
xor
xor
lcall
imull
scas
dec
sarb
or
outsl
and
push
int3
pop
or
int3
xor
xor
fdivl
xor
xor
xor
xor
xor
jne
rolb
in
pop
insb
jno
fs
div
ret
ljmp
pop
jb
movsl
inc
mov
mov
pop
xor
mov
jo
dec
pushl
ljmp
mov
ds
fldt
dec
pop
pop
adc
lret
ss
mov
ss
lcall
ss
inc
rcrb
jl
in
sahf
sub
sarl
vmovaps
shl
push
jmp
scas
cli
pushl
cld
xor
ja
mov
xor
push
arpl
out
adc
cmp
fidivrl
push
cmp
cmp
cmp
cmp
cmp
cmp
rorl
mov
call
imul
pop
repz
cltd
lret
jo
dec
cmp
aas
aas
sarl
lcall
aas
in
lcall
pusha
push
mov
pusha
mov
and
jp
cmpsl
cmp
mov
xor
mov
xor
mov
xor
pop
xor
mov
cwtd
clc
jae
xor
push
call
popa
imul
pushl
and
lahf
xor
pushl
xchg
inc
push
sub
cmpsl
or
or
dec
aaa
cld
inc
out
jge
ss
out
pop
shll
mov
mov
lcall
mov
mov
inc
adc
ret
mov
fwait
push
sub
mov
pushl
inc
aaa
shlb
cmp
outsb
cmp
xorb
cmc
insb
push
sbb
clc
fistpll
cld
incl
adc
sbb
cmp
cmp
cmp
cmp
xor
lcall
lds
ret
and
icebp
cli
add
add
sti
push
cmp
cmp
lcall
cmp
fidivrl
inc
push
cmp
jge
cs
loop
inc
jb
pushl
lods
pop
and
loope,pt
test
jb
xchg
ds
ds
ds
call
jle
and
sub
lret
push
mov
add
js
nop
data16
call
xor
mov
pop
xor
xor
xor
xor
aas
inc
cmp
push
sub
cmpsb
pushl
ljmp
mov
jge
add
cmp
enter
icebp
cmp
cmp
jl
cltd
andl
push
sahf
es
mov
std
pushw
sbb
arpl
cmp
call
cmp
cmp
cmp
cmp
out
pop
jle
repz
lahf
les
jmp
fldcw
sahf
out
pop
adc
fdivrs
sub
sahf
cmp
call
out
aaa
push
or
sub
sbb
js
sbb
bound
and
shll
insl
cli
pop
je
lahf
xor
xor
xor
scas
adc
inc
clc
or
push
mov
cmpsl
adc
push
pxor
adc
jmp
push
pop
out
sbb
or
lock
push
pop
cmp
sub
sub
clc
mov
cmp
cmp
cmp
push
roll
sti
cmp
pop
mov
aas
lcall
jg
addl
pushl
mov
outsl
xchg
xchg
xchg
imul
fwait
arpl
mov
cmpsl
call
stos
stos
push
lods
scas
scas
dec
mov
mov
mov
mov
mov
mov
ret
cmp
mov
pushl
leave
lret
int
iret
das
rcl
shrl
aad
xlat
daa
fstp
fistps
loope
jecxz
in
out
call
jmp
out
out
psllw
repz
div
pop
stc
cli
sti
add
incl
add
add
jmp
add
add
inc
inc
inc
add
dec
or
decl
add
push
push
push
add
adc
or
xor
adc
xor
sbb
sbb
sbb
or
add
add
xor
xor
and
xor
sub
sub
sub
or
add
xor
and
out
inc
loop
sbb
incl
andl
in
adc
add
sbb
mov
sbb
pop
xchg
pop
incl
test
add
addb
incl
scas
js
pop
sbbl
pusha
add
add
mov
rclb
rorl
addb
sbb
ret
add
or
into
add
sbb
add
in
adc
jg
fildl
bswap
sbb
aas
loop
mov
rcr
sbb
dec
out
add
dec
rolb
add
popa
add
neg
icebp
popf
rolb
imul
fwait
insb
insb
sub
gs
je
incl
add
fs
imul
add
or
std
ljmp
ret
or
add
je
jb
jns
adc
add
orl
lret
push
pop
cld
in
xlat
inc
xchg
cld
mov
cmpsl
rolb
rclb
outsb
push
pushf
je
mov
push
and
shlb
cs
xor
aaa
lock
push
roll
add
dec
cmpsl
lock
jae
jb
lret
add
add
outsb
jg
rorb
or
or
add
das
fsubs
cwtl
data16
lds
mov
pop
sahf
inc
fbstp
push
loop
insl
ret
sub
loopne
cld
orb
fiaddl
jo
push
ficompl
rorl
rolb
xchg
add
pop
ret
add
xchg
lret
inc
pushl
add
sub
add
add
aad
xchg
in
ficoml
test
inc
jno,pn
xor
in
sub
and
loopne
je
push
pop
add
outsb
adc
pop
and
paddsb
mov
fists
mov
push
int3
or
pop
mov
push
add
add
pusha
push
gs
mov
jmp
mov
pusha
and
insb
inc
jl
pusha
xor
cwtl
add
cmpb
sbb
je
jo
das
das
ja
jo
bound
pushf
sbb
shr
das
loope
call
insb
lcall
gs
push
out
inc
jbe
lock
stos
loopne
mov
mov
setae
popa
or
or
sub
outsl
adc
jecxz
jg
jl
and
iret
xor
cs
xor
xchg
mov
mov
push
add
subb
mov
lret
insb
mov
push
pop
lock
dec
xchg
xorl
mov
mov
mov
jnp
mov
xchg
mov
pop
sub
out
sbb
pop
jecxz
add
inc
ljmp
call
test
pop
addl
lods
sub
repnz
xor
adc
push
mov
cs
notl
std
jmp
sti
xor
call
add
sub
add
in
call
lods
lods
inc
hlt
popa
adc
and
enter
sub
icebp
sbb
cmp
and
xor
cmp
pop
mov
cmp
cmp
sub
sbb
sub
add
jmp
dec
sub
sbb
sbb
pop
shlb
in
std
push
out
fisubrl
and
jmp
ljmp
in
scas
shrb
pop
movsb
xor
inc
mov
movsl
add
popa
or
es
push
jg
testb
add
mov
out
mov
lods
push
mul
jb
jo
mov
mov
dec
stos
mov
sub
out
clc
or
adc
ds
sub
cmpsl
fdivl
pushf
movsb
fdivrs
sbb
mov
mov
jo
jg
icebp
cltd
cmpsl
mov
jbe
div
sbb
in
lds
jmp
jns
add
insb
test
inc
fmuls
cmpsl
dec
and
jo
pop
and
push
mov
outsl
jae
jo
arpl
or
addl
sub
rcr
adc
jg
loop
rcr
add
sti
movsb
push
in
mov
or
push
cld
jecxz
clc
add
mov
je
add
gs
adc
ja
ret
fwait
insl
cwtl
jo
popa
xorb
jle
pushf
gs
arpl
loope
into
and
js
cli
pop
mov
add
mov
test
test
scas
jg
scas
adc
add
mov
andl
std
call
inc
mov
cltd
xchg
mov
xor
pop
out
dec
adc
and
popl
push
jno
add
push
out
xor
push
pop
outsl
cld
inc
in
sbb
inc
add
stc
add
shrb
mov
jbe
and
jne
notb
xorl
sarb
test
nop
jg
inc
mov
dec
sbb
dec
or
add
or
mov
dec
jmp
fcomip
mov
nop
pop
pop
pop
cmpsl
inc
pop
mov
or
stc
or
mov
push
xor
inc
or
sub
scas
adc
sbb
push
test
scas
inc
movsl
or
insl
cmpl
push
ret
or
sbb
sbb
pop
out
push
jmp
adc
sbb
push
inc
or
mov
ljmp
add
inc
jp
movsl
add
push
out
add
inc
mov
dec
mov
mov
divl
mov
cwtl
cmp
or
jle
or
pop
add
clc
dec
push
mov
dec
add
jecxz
mov
sbb
sbb
mov
push
icebp
add
push
shrb
insb
sub
jg
cld
pop
imul
or
inc
std
jmp
mull
mov
jmp
sbb
hlt
mov
add
popf
and
xlat
int3
filds
ffreep
add
add
dec
stos
cli
push
dec
mov
mov
notb
dec
pop
mov
xor
cld
lock
in
icebp
add
in
dec
es
mov
cmpsl
pop
dec
pop
mov
dec
mov
inc
dec
mov
orb
jmp
dec
push
mov
pop
pop
mov
or
cmc
fistpl
xchg
sbb
loop
add
testb
jbe
fwait
icebp
lcall
sbbb
mov
scas
adcl
fbld
inc
xchg
xchg
mov
inc
xchg
cmpsb
add
pop
mov
pop
cli
xchg
inc
dec
dec
mov
cmpsb
jae
mov
push
add
ljmp
mov
pop
add
aas
rol
adc
add
ss
loopne
and
aam
lcall
push
scas
mov
mov
mov
mov
mov
lcall
mov
pop
ret
push
push
mov
xchg
push
push
inc
mov
popa
ret
dec
shr
ljmp
out
lock
sbb
add
loopne
in
adc
test
add
push
pop
decl
or
popa
mov
jae
xchg
or
fucomi
insb
bound
xchg
pop
mov
test
lods
pop
adc
pushl
add
mov
lahf
jno
fwait
mov
test
xor
xchg
mov
xchg
mov
mov
add
xlat
stos
jmp
pop
add
call
andb
mov
mov
das
cli
ljmp
ret
rol
aad
add
and
jecxz
xor
roll
xor
dec
les
add
js
imul
add
out
lds
sar
hlt
or
sbb
jecxz
aad
subb
xchg
or
mov
jae
mov
push
sub
jno
pusha
mov
add
int3
loope
or
idiv
outsl
clc
out
cmc
add
and
and
add
adc
lret
mov
lock
dec
dec
scas
cmpsb
pop
xchg
data16
xchg
xor
add
inc
or
cmp
jne
sbb
push
or
adc
ljmp
sub
or
jae
sahf
mov
xchg
mov
and
sbb
push
clc
xor
and
mov
sbb
jmp
cltd
mov
jno
mov
pop
movsb
fcomip
cmpsb
pushl
mov
sbb
jmp
mov
xchg
decb
mov
lahf
addb
adc
lsl
btr
sbb
sbb
pop
out
push
es
out
mov
mov
je
addr16
adcl
data16
xor
xchg
xor
mov
push
add
addr16
pop
cmpsl
push
test
mov
outsl
push
push
cmpsl
inc
pop
andb
and
jno
mov
adc
xchg
xchg
or
mov
jb
or
pusha
jle
lcall
pop
inc
push
mov
inc
jb
test
aas
jo
pop
inc
push
arpl
ljmp
push
mov
xor
jb
and
dec
mov
add
rolb
fldenv
jg
outsl
clc
lret
and
loop
in
fs
add
in
jmp
mov
or
or
push
and
ljmp
xchg
data16
xorb
mov
dec
dec
dec
mov
dec
dec
add
pop
loopne
out
xor
shll
mov
push
push
push
es
das
cmp
push
shrb
ss
loop
dec
lods
pop
jo
movb
push
or
fidivs
add
lock
mov
add
sbb
icebp
add
add
decl
and
imul
and
cld
incl
popf
add
xchg
js
mov
cld
dec
stos
call
fnsave
test
dec
cbtw
inc
mov
mov
in
clc
cmp
cmpl
lcall
pop
mov
pop
dec
decl
stc
clc
push
mov
xor
xor
idiv
mov
rclb
cmpsb
pop
inc
inc
mov
ja
lahf
add
xchg
stos
lods
mov
stos
mov
scas
dec
mov
add
mov
mov
fwait
dec
mov
mov
stos
xchg
lea
mov
inc
test
or
pusha
inc
ds
jmp
add
or
mov
mov
mov
and
sub
ja
mov
sub
test
repz
pop
or
dec
pop
clc
adc
inc
mov
repz
cld
call
repnz
xor
js
pusha
mov
fldl
and
mov
push
hlt
xor
stc
sahf
adc
push
push
mov
adc
in
cli
adc
fadd
sarb
aam
xor
fmuls
fcmovu
xor
pop
add
or
xchg
je
insl
mov
idivb
add
or
roll
mov
subb
pushf
fidivs
cld
push
mov
decl
cld
cld
repnz
ja
jle
ljmp
add
or
data16
mov
add
ja
jns
jp
add
xor
sbb
roll
lods
mov
add
sbb
out
adc
mov
pop
aaa
and
popf
popa
adcb
aas
les
sub
adc
or
or
adc
psrad
pop
cmp
sbbb
loop
loopne
jecxz
add
cwtl
cltd
sbbl
test
pop
stos
outsl
stos
clc
mov
jmp
repnz
mov
cmc
pop
mov
incb
cltd
test
out
pop
or
loopne
and
ret
sbb
adc
inc
decl
lock
ror
les
push
mov
cmpsb
pop
add
inc
xor
pop
jg
inc
mov
add
mov
fdivp
je
mov
dec
mov
add
jb
out
lcall
scas
push
test
and
adc
mov
lcall
mov
inc
push
add
scas
adc
ltr
incl
jae
xchg
dec
lret
jns
jl
jae
add
and
aaa
pop
cmc
ljmp
sub
push
xor
push
adc
fs
cli
out
call
xor
push
add
scas
xchg
shr
add
jmp
pop
push
cmp
or
push
ljmp
jmp
es
push
mov
aam
loope
xchg
lods
inc
mov
add
sub
adc
fst
inc
ret
imul
mov
scas
xor
out
loop
sub
rol
in
dec
test
dec
jg
fisubrs
lret
add
out
movl
testb
sbb
cmp
mulb
sbb
adc
add
adc
outsl
clc
lcall
cli
sub
sub
jecxz
mul
sub
mov
jg
mov
pushl
dec
jecxz
out
fwait
les
jg
or
mov
jge
scas
lods
or
rolb
shll
rcr
outsb
mov
scas
push
push
aaa
adc
cmpsb
pop
sbb
ljmp
insb
and
call
dec
std
jg
mov
int
add
cmc
clc
add
lret
aam
pop
shlb
loop
add
mov
dec
inc
cmpsl
inc
pop
jno
or
mov
inc
dec
inc
add
xor
ret
cmp
clc
sub
jo,pn
cltd
push
mov
sarb
and
xchg
cwtl
jecxz
dec
dec
inc
std
lcall
push
push
add
incl
js
jmp
xor
clc
imul
add
jecxz
jbe
pushf
in
shll
les
movsb
rcrl
sbb
inc
add
into
or
clc
enter
jg
loopne
fldl
loope
mov
sbb
rol
data16
cmp
jbe
ss
push
fwait
decl
das
xor
aaa
sbb
push
shrb
and
ret
add
clc
decl
xor
aas
fnstsw
and
mov
ja
aaa
lds
ds
shll
das
sar
pop
or
dec
lea
dec
mov
lcall
inc
mov
pushf
pop
push
push
mov
xchg
pop
adc
pusha
pop
push
mov
out
les
and
mov
adc
aaa
orl
cmp
ljmp
mov
mov
scas
dec
adc
stos
mov
mov
lahf
inc
mov
mov
outsb
add
pop
addb
xchg
jnp
xorl
nop
add
leave
lcall
loopne
in
jmp
add
cmc
daa
and
cmp
mov
adc
mov
dec
pop
and
mov
insl
jb
pop
add
fildl
pop
inc
pop
movsb
pop
inc
jne
jl
inc
inc
pop
orb
pop
or
adcb
push
push
sbbl
jmp
jle
cwtl
subb
xor
lret
ss
pop
test
add
pop
push
push
scas
pop
xchg
push
dec
push
cmp
mov
mov
add
xor
loope
sti
jmp
inc
mov
mov
clc
or
lea
jb
sbbb
ja
stos
sahf
xchg
xorl
imul
std
int3
sbb
lret
arpl
aaa
cltd
lret
jmp
mov
jnp
data16
inc
lcall
popa
subl
addl
cltd
bound
stos
lea
icebp
mov
stos
insb
xchg
pushf
xchg
jle
test
loop
cli
stos
sahf
mov
mov
stos
dec
cmpsb
mov
pushl
mov
lods
mov
mov
mov
mov
mov
rcll
inc
dec
dec
push
fistps
inc
inc
mov
inc
push
add
adc
mov
enter
sbbb
ljmp
mov
mov
pushf
sahf
push
xor
cmp
fsubrs
push
pop
push
mov
dec
pop
xchg
jge
add
mov
pop
arpl
add
fcomip
pop
cld
lahf
pop
push
dec
mov
push
popf
js
jl
push
jle
ljmp
loope
in
mov
sub
lcall
dec
push
jmp
jg
ljmp
into
daa
pusha
hlt
sub
daa
rol
ljmp
push
std
jmp
jmp
cld
mov
pushf
dec
dec
pop
test
mov
pop
add
cmpsl
dec
pop
pop
stos
incb
pop
push
or
mov
push
inc
jle
cmp
cmp
pop
lock
cmp
out
arpl
push
jnp
push
sti
add
jbe
jne
or
sbb
or
unpcklps
loopne
call
adc
push
pop
push
cmpsb
adc
cwtd
rclb
xchg
nop
xchg
call
inc
xorl
fadds
xchg
pusha
sahf
cltd
lcall
xchg
xchg
sahf
jns
scas
add
dec
test
mov
loope
add
push
repnz
movsl
jo
mov
mov
push
mov
mov
les
ret
std
add
and
into
les
add
decl
aam
fcompp
fisubl
into
xor
or
scas
add
call
jg
scas
xor
in
mov
sbb
sti
out
mov
mov
adc
inc
icebp
push
cmp
decl
add
mov
dec
or
adc
push
sbb
or
inc
pop
hlt
fbld
and
xor
cmp
add
cmp
fdivr
scas
jg
cmp
cld
xor
daa
ret
sub
dec
inc
inc
icebp
add
add
inc
pop
dec
loop
cmp
cmp
popa
and
sahf
data16
std
sub
cmpsb
xchg
nop
jnp
test
test
jg
xchg
xchg
call
mov
jp
cmpb
jp
xchg
xorb
add
jmp
dec
cltd
jle
mov
aam
push
subl
decl
ret
fs
movsl
push
test
mov
pop
mov
add
mov
stos
and
repz
call
pushf
push
stos
stos
negb
lods
fstl
add
loope
jle
je
mov
push
dec
pop
dec
ret
ljmp
loop
xchg
fwait
insb
adc
sub
test
insl
fs
ljmp
add
sbb
test
and
jg
stos
mov
mov
mov
cltd
pusha
fcomi
decl
dec
dec
pop
add
pop
cmc
div
je
roll
mov
outsb
arpl
jp
add
mov
push
std
out
sbb
or
loopne
inc
jg
cmpsb
jl
mov
jbe
in
cwtl
test
ljmp
mov
xchg
arpl
mov
push
pop
push
cwtl
ja
jae
ficoml
dec
add
pushf
incl
xchg
mov
inc
add
mov
cs
fisttps
sbb
inc
loope
inc
scas
ljmp
ror
popa
add
mov
scas
mov
lcall
loopne
jge
mov
pop
loopne
mov
imul
cmp
add
aas
es
dec
idiv
jmp
cmp
loope
cli
sub
xor
sub
sub
sub
xor
jnp
mov
xorb
push
inc
dec
mov
std
imul
dec
inc
add
scas
pusha
or
les
jne
test
dec
out
add
xchg
add
aaa
and
les
mov
lock
cmp
jnp
add
or
xor
add
jmp
imul
add
int3
iret
add
and
les
mov
movl
jnp
leave
cmp
aas
lret
gs
sub
cld
andb
lods
das
xor
inc
inc
push
loopne
pushl
push
dec
repnz
or
cli
bnd
adc
call
out
loop
mov
jmp
lods
sbb
mov
dec
dec
dec
ret
clc
imul
jl
adcb
mov
xor
js
push
outsl
arpl
cmp
mov
push
ljmp
test
pop
inc
push
notb
pop
adc
sbb
addl
pusha
xchg
xchg
subl
mov
imul
nop
xchg
jb
mov
or
arpl
adc
jae
sarl
call
fwait
xchg
int
mov
mov
mov
in
ja
popf
fisubrl
sbb
aam
or
and
outsl
loopne
xchg
insb
lock
sbb
pushl
or
frstor
cmp
mov
or
fcom
iret
xor
push
std
mov
add
out
sbb
sti
jg
enter
add
adc
in
inc
or
nop
sbb
sbb
pop
loopne
dec
int3
pop
sbb
add
ss
subb
lods
fimull
loope
lcall
xor
ffreep
inc
xor
or
stos
call
xor
xchg
pop
or
cmpsb
cmpb
in
cs
push
test
dec
pusha
ljmp
js
mov
test
mov
ljmp
inc
push
pop
pop
push
scas
pop
outsl
pop
sbb
sbb
mov
pop
and
sbb
pop
loop
jmp
sbb
clts
out
sbb
jmp
jle
mov
dec
inc
hlt
push
out
clc
adcb
mov
add
nop
mov
or
fcmovu
pop
std
lods
popa
je
pusha
js
enter
add
imul
incl
mov
inc
inc
inc
mov
adc
stos
lcall
mov
mov
or
mov
adc
loopne
dec
pop
jg
xchg
scas
inc
cmp
push
ja
mov
add
cwtl
gs
outsl
xchg
jo
inc
cmpsl
add
push
mov
mov
dec
loope
push
mov
mov
out
enter
mov
scas
mov
cwtl
lcall
xchg
cwtl
jbe
pushl
call
jnp
sbb
or
mov
xchg
dec
in
dec
add
dec
push
scas
push
push
ss
push
push
pop
cmpsb
pop
cld
mov
gs
push
insb
insl
outsb
nop
jo
add
je
jbe
js
add
or
or
pusha
and
das
xor
xchg
push
mov
je
inc
loopne
js
js
outsb
and
add
add
and
mov
inc
add
or
mov
or
fldt
das
or
add
push
pop
pop
pop
mov
arpl
addr16
imul
test
or
sub
add
and
movsl
push
gs
mov
in
adc
loopne
push
scas
and
inc
js
mov
mov
and
dec
mov
outsl
cli
es
add
js
jo
mov
inc
and
xchg
adc
insb
js
adc
lock
insb
inc
mov
clc
push
outsb
add
add
lock
jae
pop
fdivl
aaa
test
aam
insb
cmpb
hlt
jbe
or
add
mov
add
xchg
mov
loopne
bound
insb
mov
push
shrb
gs
push
jo
add
mov
jg
mov
popa
fs
bound
jb
jb
inc
mov
mov
inc
jb
popa
je
stos
push
filds
fs
hlt
xor
pop
lock
pop
lcall
mov
dec
xchg
outsw
jb
jmp
push
sbb
push
jb
arpl
lods
je
push
subb
or
jp
fwait
push
je
lea
jl
scas
pop
mov
dec
nop
rolb
xor
out
lcall
xor
outsb
fwait
insb
cli
adc
fs
cmpb
mov
or
pushl
decb
ret
js
ret
xchg
cmp
mov
inc
inc
xchg
ss
jg
inc
push
adc
mov
push
bound
jg
push
and
push
inc
dec
mov
mov
add
inc
mov
mov
or
push
xor
dec
inc
inc
outsl
push
dec
push
dec
stos
xchg
lods
inc
push
lods
or
dec
dec
dec
aas
cld
ja
mov
push
xchg
scas
inc
push
or
mov
adc
clc
mov
dec
push
inc
mov
inc
dec
mov
lock
inc
dec
icebp
add
sarl
jno
add
and
sub
dec
xchg
add
inc
xor
dec
inc
stos
in
inc
pushf
outsl
outsb
outsb
lcall
pop
out
arpl
sub
ja
outsb
arpl
mov
bnd
outsb
je
and
mov
lock
cmp
shlb
outsb
arpl
inc
in
nop
imul
mov
push
ds
add
jo
popa
insb
imul
insb
outsl
jae
xor
mov
bound
mov
mov
and
adc
xor
pop
hlt
sbb
jo
mov
sahf
gs
mov
add
mov
aad
sub
push
pushf
jno
or
and
inc
hlt
add
cs
bound
jl
push
insb
xchg
outsb
push
jae
into
inc
addr16
push
inc
xchg
jae
call
xor
add
xor
dec
shlb
aaa
hlt
fcoml
sbb
jno
xchg
imul
ss
xor
mov
int
rclb
rcrb
addb
mov
and
jle
xchg
xor
push
ret
cmc
fildl
jb
mov
adc
enter
push
mov
mov
xor
sub
xor
mov
push
fcomps
mov
icebp
scas
in
stos
test
jo
xor
in
jne
mov
outsb
repnz
sub
insl
popa
jo
out
add
inc
dec
push
mov
decl
mov
mov
gs
pop
xor
icebp
add
xor
repnz
mov
fsubrl
out
jo
lods
imul
add
gs
addr16
jg
fists
adc
mov
sub
mov
add
loop
mov
pop
dec
jp
mov
pushf
imul
add
inc
xchg
sub
add
push
cwtl
cmp
insb
mov
push
push
lea
add
aas
mov
xor
inc
mov
inc
sub
addr16
jle
dec
std
pop
dec
decl
add
dec
fcomps
and
inc
std
jnp
lcall
jbe
push
mov
or
cmp
test
jns
inc
jge
mov
push
scas
sbbl
add
xchg
push
xchg
push
cli
jg
or
xchg
rcll
test
lock
dec
lock
mov
mov
lea
push
aas
xchg
sub
dec
mov
push
outsl
mov
xor
dec
xor
frstor
and
xor
add
call
aaa
cld
das
es
jb
xor
inc
outsb
mov
adcb
add
inc
insb
or
mov
gs
jnp
inc
xchg
jbe
inc
add
je
in
add
lds
ljmp
and
data16
imul
and
fbstp
divb
or
int3
or
and
add
fsubs
jb
mov
and
and
xor
cmpsb
fidivl
pop
mov
pushf
pushl
push
sbb
xchg
inc
repnz
add
dec
pop
jge
add
mov
call
lret
push
push
fildl
dec
call
lock
pop
or
icebp
cs
adc
ljmp
hlt
in
inc
nop
ja
push
mov
enter
ljmp
add
fwait
call
pop
and
aaa
shrb
sar
lock
cmp
mov
add
movsb
push
call
aas
pop
ret
push
nop
and
jg
in
jle
test
add
add
add
pop
stc
dec
outsl
push
std
mov
jp
jne
push
mov
push
sub
fstpl
fcmovnb
incl
add
call
dec
pop
sti
mov
jbe
and
cmp
scas
iret
std
ds
leave
call
test
jp
mov
push
call
cmp
adc
scas
jmp
je
jo
addb
pop
fmull
mov
jmp
shlb
and
mov
add
mov
push
pop
push
clc
dec
enter
dec
fists
mov
cmp
inc
inc
add
out
stos
movsb
cmp
cld
lea
std
repnz
jo
add
aas
mov
mov
fistps
sbb
push
add
outsb
je
add
mov
pop
call
ljmp
filds
test
cmp
ljmp
pop
mov
push
ds
add
pushf
add
int
pcmpeqw
call
xchg
sbb
test
pop
nop
pop
push
mov
mov
rolb
push
inc
cmp
or
add
ss
and
and
push
sub
in
jb
mov
loopne
jmp
mov
xor
lock
pop
mov
faddl
push
add
fbld
lock
nop
lcall
cwtl
scas
push
mov
add
out
inc
dec
or
jne
das
rorl
xor
stos
add
or
mov
push
inc
jg
divb
xor
inc
in
mov
ret
dec
add
imull
push
lea
push
sbbb
ljmp
and
mov
adc
mov
repz
push
mov
sbb
lret
scas
jl
je
mul
outsl
incl
cmpl
je
and
add
jg
mul
cltd
mov
jmp
mov
jmp
mov
ret
inc
cmpb
mov
adc
add
je
cmp
jbe
pop
sar
fildl
push
or
and
test
je
loop
test
mov
add
push
adc
pop
fbld
rcrb
push
enter
ret
fildll
push
sbbl
push
push
call
fnsave
pop
rorb
test
mov
insl
orb
xor
shlb
pop
pop
ret
clc
add
mov
pop
shl
adc
ret
stos
addr16
aas
mov
fcoml
rcrb
jl
sbb
inc
or
leave
push
loop
inc
bound
and
add
mov
sub
adc
xchg
add
dec
xor
test
jb
cld
mov
push
add
push
rorb
mov
sbb
lock
ret
xchg
mov
cld
jo
out
rolb
mov
mov
jg
adc
mov
inc
inc
add
ss
adc
adcl
add
aaa
push
loopne
adc
xor
adc
bound
mov
push
shll
in
pop
lock
sarb
mov
add
aas
outsl
dec
loop
add
sbb
mov
hlt
rolb
das
push
sarl
rolb
add
dec
mov
mov
scas
decb
jbe
add
cmp
adc
mov
inc
icebp
out
ds
fs
pop
leave
add
inc
enter
push
in
pop
je
push
fsubrs
shll
push
mull
frstpm(287
fildl
ret
or
movsb
push
ret
sub
push
fcoml
push
outsl
aaa
cld
add
je
int3
add
xchg
add
sbbb
and
xchg
je
push
xor
fidivl
std
add
mov
push
in
adc
cmp
hlt
push
loopne
mov
pusha
mov
mov
add
mov
mov
outsl
sbbb
test
sub
push
jne
and
and
inc
jl
incl
repz
cmp
or
cmp
add
je
mov
jmp
mov
inc
sub
lods
add
pop
incl
xor
pop
push
dec
sub
loopne
pop
pusha
jge
cmp
jmp
jecxz
popa
inc
loope
clc
mov
pop
loopne
in
sbb
inc
pop
push
mov
rolb
or
sbb
daa
loop
pushl
roll
adc
pop
push
test
pusha
adc
pop
pop
shlb
pusha
andb
test
and
add
pusha
add
xlat
call
sbb
and
loope
loopne
push
add
add
xchg
jmp
push
inc
pop
out
sbb
xchg
xor
fwait
push
ds
push
lret
inc
pusha
daa
dec
cmp
jl
and
xor
jle
in
scas
xchg
push
jbe
mov
inc
or
ljmp
movsl
pop
push
or
in
loopne
adcl
jecxz
dec
loope
sbb
xorl
jmp
in
mov
adc
or
inc
jmp
add
repz
ds
dec
xor
push
je
cmp
jg
je
add
xor
rolb
adc
ljmp
xchg
add
push
xchg
add
int
mov
pop
jmp
sub
sub
or
inc
orb
cwtl
sub
cmp
mov
loopne
and
push
and
push
push
popa
push
ljmp
push
icebp
mov
addl
outsb
mov
pop
push
push
rorl
movsb
pusha
pusha
add
addl
xor
adc
loopne
loopne
pop
xchg
jbe
dec
aam
push
push
pusha
mov
jl
je
in
cmpsb
mov
add
mov
pop
call
inc
mov
shl
jp
call
sahf
or
test
ds
mov
mov
add
stos
jne
add
loope
push
push
les
call
jmp
pusha
pushl
std
mov
and
or
call
xchg
add
ja
movb
push
or
mov
loopne
jl
call
and
pusha
inc
add
adc
push
jb
movsb
test
push
inc
pusha
jo
outsl
cli
pop
loope
pusha
dec
or
in
or
lea
das
shl
mov
mov
mov
int3
call
mov
adc
or
sbb
mov
inc
loop
push
lock
andb
repz
push
loopne
sbb
push
pusha
test
in
das
fisubl
mov
cli
push
call
cmpsl
fildl
pop
add
mov
test
je
add
mov
mov
test
adcl
adc
shr
or
or
clc
idiv
mov
loop
je
and
mov
inc
and
les
or
in
or
pushl
movsb
cmpb
pop
outsl
mov
rolb
mov
int3
ret
sahf
push
add
mov
mov
fidivrl
adc
or
aad
in
pop
jle
mov
jmp
mov
push
popa
add
sarb
jl
cmc
popa
add
dec
pusha
add
cmp
divl
jbe
adc
data16
out
ret
lea
jno
call
mov
ja
jno
add
les
icebp
pop
notb
push
push
mov
xor
sbb
push
inc
mov
cmp
mov
push
je
jge
aas
std
push
hlt
add
data16
ja
inc
sub
incb
pop
adc
mov
call
jbe
add
aaa
cld
mov
mov
push
bnd
mov
cmc
or
mov
adcb
pop
cld
push
mov
or
incb
clc
jl
adc
test
arpl
cs
shrb
ja
sbb
imul
clc
scas
push
fdivs
jne
mov
push
pop
or
sub
add
les
jmp
std
mov
es
mov
inc
xor
mov
repnz
jmp
int3
jne
push
call
cmpl
xor
scas
cli
out
or
xor
cmp
add
test
adcl
and
std
lock
cmp
sbbb
lcall
and
add
xor
scas
decl
xor
incl
test
push
adc
icebp
inc
cmp
xor
mov
shl
pop
cmp
ret
and
mov
pushl
add
add
cmp
cmp
in
sub
lock
inc
lock
pop
jno
or
mov
jne
jmp
inc
jo
lock
add
std
sbb
ret
push
enter
jno
lret
adc
dec
add
ret
test
call
jnp
inc
sbb
or
cld
jno
push
push
xor
xor
pop
shl
push
xorb
or
adc
lea
add
call
pop
das
jo
ja
add
inc
jo
push
push
mov
sub
or
adcb
push
add
dec
dec
mov
insb
mov
int3
leave
inc
push
mov
fisttpl
and
push
jb
xor
push
loop
outsl
pop
je
sbbb
enter
daa
push
call
mov
push
fwait
mov
shlb
or
and
arpl
push
xchg
or
inc
fdivr
in
outsl
scas
xor
inc
sti
push
mov
xor
les
jbe
inc
cmpsb
incl
lock
adc
or
push
push
pop
ljmp
add
mov
dec
in
dec
push
pop
sbb
sarb
mov
sub
lahf
mov
jecxz
jmp
xor
mov
cmp
jge
add
mov
call
stc
adc
cmp
sbb
inc
into
xor
pop
cmpsb
push
add
fwait
mov
mov
test
jmp
mov
call
pop
pusha
cmp
enter
jb
ss
call
lcall
mov
or
or
fs
mov
push
add
add
push
or
adc
and
or
cmp
xor
int3
adc
pop
pop
je
faddp
dec
jb
call
pop
lcall
push
incl
xor
xor
lea
jno
lods
mov
call
add
mov
inc
or
mov
lea
clc
xor
stos
push
lock
cld
sar
add
mov
jo
jne
adc
adc
and
push
cmp
fcomip
mov
inc
lar
mov
jne
add
adc
int3
add
mov
addl
add
xor
mov
ljmp
in
addr16
mov
push
push
mov
call
jne
hlt
jbe
mov
sub
xchg
scas
push
inc
iret
jmp
xor
inc
mov
icebp
sbb
xor
sub
test
add
add
mov
lock
out
pop
xor
in
add
add
add
cmpl
push
rorl
dec
jne
mov
lock
out
enter
stc
add
sbb
dec
add
ret
add
jne
xchg
adc
nop
ss
or
jae
mov
int
ret
mov
ret
rolb
dec
dec
je
addl
mov
orl
fldt
inc
mov
xor
adc
nop
cli
pushl
addb
jns
pop
pop
jp
data16
andl
outsl
lret
and
cs
xor
fdivrl
ret
jo
xor
add
add
fiadds
cmp
pop
mov
jp
je
xchg
sub
andl
push
dec
cmc
subb
addb
je
call
mov
shr
jb
addb
cmp
jne
mov
aam
je
mov
cmpsl
icebp
ja
adc
adc
pop
cmp
cld
add
aaa
jge
js
icebp
scas
add
ss
pop
jmp
mov
mov
lock
add
inc
jmp
je
lcall
mov
cwtl
cmp
jbe
mov
jmp
xor
add
inc
jmp
jno
shr
xor
xchg
pshufw
cmp
lea
loope
push
dec
add
aad
mov
scas
mov
jb
dec
test
add
sarl
or
sahf
jno
adc
push
jne
les
jg
add
jo
mov
push
push
push
add
or
jg
enter
adc
aas
jmp
or
or
testl
mov
xchg
pop
je
or
mov
jb
je
pop
icebp
xor
sbb
mov
in
cmpsb
push
or
push
mov
adc
add
fstpt
call
mov
ss
mov
or
jp
mov
mov
adc
cwtl
or
cmp
add
jo
ret
push
xlat
fwait
or
push
je
and
or
test
clc
les
jmp
inc
mov
cmp
test
sub
or
xchg
cmc
push
jb
jmp
push
imul
decl
in
sub
repnz
mov
and
sub
inc
jecxz
outsb
inc
je
lahf
clc
pushl
incl
je
imul
add
xor
push
mov
aam
mov
push
fistpll
jbe
loopne
mov
xor
adc
pop
sbb
lcall
sub
pop
pop
pop
xor
lock
xor
jmp
jge
add
xor
cmp
ja
add
inc
mov
push
xor
adc
jbe
call
clc
adc
lods
jbe
cwtl
test
or
scas
jp
mov
inc
mov
enter
lea
mov
mov
jmp
mov
je
jp
jne
lods
call
outsb
xor
push
imull
mov
mov
lock
adc
jae
in
call
fadd
cmovb
pop
adc
dec
mov
clc
call
xchg
xor
test
lock
insl
push
sahf
fimuls
addl
data16
cli
je
jl
outsb
inc
mov
jl
xchg
cmp
push
push
add
mov
test
push
scas
jl
int
xchg
sbb
jmp
push
paddd
sbb
dec
aad
test
fistpl
fisttps
mov
sbb
imul
fsubs
repnz
fisubl
mov
imul
icebp
mov
jge
test
out
call
jne
insl
push
rorl
push
pop
push
pop
pop
pusha
add
stos
mov
adc
inc
lret
xorb
jmp
sar
cli
andb
mov
sub
fistpll
push
mov
orl
lret
andl
push
int3
sarb
rclb
jp
loop
add
jnp
sbb
cmp
shr
push
repz
sbb
call
or
mov
lock
and
pop
in
pop
adc
lods
lret
push
push
sahf
sbb
cli
push
push
incl
sbb
add
rclb
orl
cmc
mov
enter
cmp
fcoml
stc
mov
pushl
cld
cmp
push
leave
insb
add
inc
or
pop
push
add
add
pushl
inc
and
in
add
and
push
cli
jmp
push
xchg
add
mov
orb
sub
or
or
push
rclb
rorb
pop
pop
ret
cmp
out
or
std
int
ljmp
mov
pop
add
push
decl
add
cmp
jp
je
adc
test
stos
in
mov
shlb
pop
ret
call
clc
inc
adc
insb
mov
mov
sbb
push
mov
pop
lock
lea
leave
lock
ljmp
nop
roll
xchg
js
push
cmc
mov
sarl
ljmp
push
inc
in
push
push
mov
push
jl
or
sbbb
jmp
jbe
je
data16
std
xchg
je
push
fimull
adc
int3
sar
adc
lea
push
sub
pop
add
incl
push
sbb
mov
mov
push
mov
call
aas
jle
mov
pop
add
mov
add
shll
or
outsb
out
test
push
loop
pusha
mov
data16
faddl
std
shlb
lods
sbb
xor
push
mov
je
call
inc
add
push
sbbl
int3
jo
push
pushw
xchg
jne
inc
pop
js
cmp
mov
insb
jne
push
into
aam
shlb
pop
inc
sahf
mov
test
jle
pop
lods
push
push
add
fildl
push
test
movsl
lcall
or
mov
in
je
loopne
fildl
xchg
loopne
in
mov
aam
mov
jne
out
test
pusha
sbb
mov
mov
dec
sub
nop
jbe
jo
or
rolb
inc
sbbb
hlt
pop
sarb
sbb
adc
cmpsl
call
dec
mov
inc
inc
hlt
pop
add
adc
cli
add
inc
inc
mov
mov
dec
insb
sahf
mov
pop
cli
dec
imul
push
pop
jb
add
call
loop
and
pusha
jle
push
out
lods
pop
js
pop
mov
and
and
mov
aaa
mov
pop
sbb
insb
bound
insb
inc
push
test
add
incl
push
call
add
add
mov
mov
mov
jp
lds
aas
mov
cmc
in
inc
pusha
testl
or
sub
mov
and
inc
and
inc
xor
ss
hlt
test
cmp
inc
call
inc
lock
cmp
pop
fstpl
cmp
xor
pop
jl
sbb
add
divb
rclb
jp
jne
mov
adc
sbb
stc
add
ss
push
fadds
add
adc
dec
add
out
or
or
and
mov
mov
sub
jbe
lock
or
cmp
push
add
loope
jl
add
test
loopne
int
or
add
or
xchg
decl
add
je
add
cld
add
push
fbstp
call
adc
pop
or
bound
inc
and
lods
dec
cmp
lea
push
jmp
mov
jb
pop
jl
mov
mov
imul
fiaddl
xchg
jmp
inc
and
cmp
add
insb
into
out
inc
or
pop
addl
sub
je
frstor
int3
push
sbb
mov
push
rorb
mov
fdivr
jmp
or
mov
dec
repnz
cmp
mov
cs
mov
pusha
insl
ret
mov
push
loopne
orl
lea
jbe
clc
pop
je
pop
mov
call
fs
or
notb
add
mov
add
call
fbld
dec
or
ss
scas
jl
pusha
mov
mov
mov
jb
xorb
or
xor
adc
enter
or
lock
or
shlb
mov
add
aam
or
pop
push
xadd
fistpl
int
sub
pop
adc
loopne
add
inc
and
adc
xor
loopne
xchg
dec
lea
mov
test
mov
or
fidivs
fistl
jb
add
mov
ljmp
aam
push
adc
add
mov
mov
lea
loopne
mov
add
dec
mov
and
in
inc
sbb
es
fs
fistl
push
add
pusha
add
hlt
cmp
or
pop
andb
sbb
loopne
nop
out
mov
and
scas
testb
mov
sbb
mov
mov
decb
add
sbb
popa
xchg
je
pop
add
repz
in
inc
cli
cmc
lods
push
push
pop
cld
push
and
push
call
std
ja
cmpsb
fcomps
push
cmovne
cmp
loopne
outsl
fdivs
jge
mov
syscall
add
stos
mov
add
hlt
mov
add
lret
out
les
adc
call
outsb
cmpsb
jg
push
sub
xchg
add
scas
or
mov
lods
mov
push
cld
scas
outsl
mov
mov
jbe
hlt
test
stos
bound
mov
outsb
aaa
cmp
pop
push
xor
hlt
jmp
movb
bound
jmp
add
add
aam
in
inc
adc
xchg
or
adc
push
push
sbb
decl
adc
pop
push
movsl
out
int3
aam
loopne
fs
out
sbb
ljmp
jne
fs
cmp
cmp
repnz
jno
push
std
cmp
jmp
mov
cmpsb
scas
fistpll
incl
adc
gs
jo
dec
hlt
pop
mov
jge
andb
pop
xor
scas
cli
mov
mov
pop
and
cmp
in
mov
jl
and
adc
outsl
hlt
adc
sbb
push
push
mov
ja
test
mov
add
clc
rolb
sub
jg
pop
std
pushl
or
ss
cmp
lock
jo
in
jle
add
je
stos
outsl
fists
mov
je
adc
mov
jmp
xchg
test
std
sbb
sbb
mov
add
push
inc
add
inc
icebp
gs
lock
dec
lock
fwait
movsl
xor
or
enter
mov
mov
mov
es
lock
add
add
push
test
xchg
jo
inc
cli
fwait
ds
mov
nop
jo
and
lock
decb
call
mov
loopne
inc
sahf
je
push
inc
aad
jecxz
scas
call
pop
sub
out
mov
fcomip
sbb
push
adc
fisttpl
cmp
pop
pusha
ljmp
notb
daa
mov
sarb
and
idivb
sbbb
sti
je
add
pop
mov
xchg
add
pop
push
add
movsl
stos
test
or
lods
and
mov
xor
les
inc
je
movb
mov
jecxz
add
add
xor
sbb
stos
mov
adc
movl
jge,pn
push
mov
cmpb
in
mov
pushl
push
testb
sbb
in
lock
xor
and
sbb
inc
rolb
and
pop
decl
sbb
outsb
inc
insb
iret
mov
jo
xor
jbe
inc
add
mov
or
mov
jb
cmc
jg
hlt
add
and
adcb
sbb
cmp
cmovb
cmpl
fbld
add
push
jno
call
andl
sub
sbb
mov
aam
jns
mov
cmp
stos
mov
mov
xor
dec
pop
jo
xorb
outsl
das
andb
add
pop
repnz
add
push
push
andl
in
sarl
ljmp
ss
push
push
test
inc
gs
xchg
movl
sbb
jo
jp
xor
ret
push
pop
je
inc
loopne
sti
add
sbb
adc
jmp
or
inc
lcall
dec
repz
sbb
push
and
adc
shrb
fucomip
xchg
xor
push
cmp
jbe
xchg
sub
push
jb
cmc
fcomi
out
shlb
push
jmp
test
lock
mov
xorb
inc
push
adc
inc
cmp
mov
dec
cmp
cmpsb
jl
rolb
mov
adc
cmp
jbe
std
mov
jo
and
sti
jne
mov
movsl
sbb
jle
jae
mov
mov
lea
jle
ljmp
add
cwtl
push
mov
sbb
push
sbb
incl
test
je
adcw
mov
loop
push
pop
add
mov
ret
fildl
xchg
shlb
cmp
lcall
cld
cmp
icebp
add
xor
mov
out
jmp
jg
lock
or
and
aaa
insl
clc
add
sub
scas
add
decl
lret
lock
pop
roll
pusha
sbbb
cs
cmpb
scas
or
push
sbb
inc
and
cli
stos
mov
adc
push
dec
xor
mov
mov
lea
mov
cli
pushl
scas
push
insl
mov
pop
push
and
xor
imul
addb
push
das
inc
psllw
sbb
mov
hlt
call
xor
jmp
std
cld
add
loopne
fisttps
mov
push
add
jl
add
dec
fstpt
imulb
push
out
jns
dec
inc
jo
inc
jb
push
in
fwait
in
add
leave
inc
lea
sub
xchg
popa
inc
push
icebp
mov
jb
movsb
repz
jo
pusha
fisttpll
mov
mov
fs
divps
mov
stos
fistpll
add
sub
push
mov
loopne
scas
mov
jo
in
test
ljmp
cmp
ljmp
pushl
add
cmpsb
out
add
mov
push
lock
jno
push
popa
ja
mov
jo
aam
cmp
testb
push
pop
push
icebp
test
cmp
inc
and
rcrb
xor
mov
mov
call
jo
jno
dec
push
lods
lcall
mov
das
mov
lcall
add
repnz
dec
and
jbe
dec
push
adc
pop
adc
mov
mov
jmp
cld
mov
sbb
lock
outsb
test
out
adc
inc
mov
inc
adc
mov
mov
mov
push
add
add
test
inc
fwait
dec
mov
push
jo
push
jle
test
jo
push
in
aam
neg
add
push
call
dec
and
mov
imul
test
pop
imul
stc
sbb
xor
stos
das
test
repz
mov
adc
pop
fnstenv
xor
or
mov
sti
xor
icebp
js
add
arpl
incb
xor
cmp
out
jo,pn
pop
pop
or
je
add
or
or
test
push
cmp
adc
and
lcall
and
xor
xor
add
scas
lock
push
xchg
mov
pop
fisubl
aaa
add
adc
insl
mov
xor
add
add
xchg
je
sar
mov
mov
mov
pop
lcall
insb
push
xor
add
or
inc
sbb
mov
push
test
movsb
sub
add
in
lahf
jne
mov
mov
int3
call
cld
add
shl
pushf
jne
push
add
arpl
mov
ss
mov
or
test
les
lcall
lock
push
xchg
mov
and
mov
sbb
dec
addb
cli
mov
mov
jo
mov
pusha
jno
pop
mov
pop
imul
xor
sbb
fisttpl
jmp
xor
sbb
ljmp
pop
rorb
add
jl
clc
inc
dec
sub
sbb
imulb
mov
xor
mov
and
mov
subb
dec
pusha
or
sub
xchg
inc
xor
cmp
or
add
mov
cmp
out
je
mov
outsl
jg
sbb
push
fdivrp
shr
or
mov
push
fstpl
xchg
test
and
or
sub
sti
shlb
jecxz
clc
xor
jo
and
mov
out
jle
js
sbb
mov
push
mov
push
jb
mov
pop
adc
pop
jmp
and
sub
xchg
pop
lods
mov
clc
sub
call
mov
cli
cmp
ret
out
add
sub
jg
lock
cmp
enter
inc
adc
add
adc
xchg
adc
mov
pop
ja
adc
dec
testl
incb
add
jne
repz
fimull
or
cmpl
test
je
test
call
sbb
or
push
test
adc
mov
outsl
test
pop
add
adc
frstor
jns
imull
aam
sbb
jge
pusha
call
jg
ss
ljmp
pop
push
pop
inc
push
inc
test
pop
gs
subb
push
add
sbb
add
into
insl
jg
aas
push
addl
jl
add
addb
fisttpl
ss
fisttpl
mov
pop
mov
fisttps
sub
inc
testb
shrb
aam
dec
call
push
add
mov
jne
cmpl
sti
jne
repnz
mov
adc
cmp
fs
jle
ljmp
add
stc
dec
aas
inc
fimull
lahf
sbb
cmp
xor
or
je
shrb
lods
in
add
pop
push
outsl
cmpsb
out
xor
into
pushl
leave
or
mov
insl
rclb
stos
xorb
sar
sub
push
rclb
jbe
test
xor
and
movsl
fisubs
rolb
xor
ret
jbe
sbb
add
scas
dec
fadd
inc
clc
dec
mov
add
sarb
or
xor
mov
mov
lds
xor
ret
ret
int3
mov
enter
lock
test
or
dec
add
call
pusha
push
shll
push
cmp
add
or
mov
rorl
repz
pop
and
aaa
shrl
or
jmp
mov
mov
and
xchg
or
shlb
add
jg
faddl
roll
add
fidivl
dec
mov
inc
imul
xadd
into
out
cmp
out
push
int3
scas
mov
mov
cld
aaa
add
push
mov
test
repz
mov
and
add
mov
scas
sarb
stos
push
cmpsb
repz
mov
sub
mov
push
mov
push
insb
popf
cli
inc
jl
jb
mov
das
add
rorb
mov
add
jmp
dec
scas
push
mov
xor
cs
loopne
jae
cmp
ja
or
sub
dec
loope
out
aas
or
mov
imul
pusha
jae
push
push
test
dec
loopne
call
aad
scas
push
or
mov
xor
mov
push
pop
mov
dec
mov
lea
sti
fsubrs
mov
pusha
ss
in
jl
or
mov
loopne
mov
call
mov
push
lea
sar
sahf
inc
dec
fbld
rorb
add
pusha
inc
jl
mov
in
pop
jb
loopne
pop
inc
adc
movb
movl
cld
loope
sbb
loopne
mov
js
sbb
mov
das
fisubs
pop
hlt
lods
mov
or
inc
loopne
xchg
mov
lea
das
push
adc
in
mov
test
fdivr
jmp
fildl
int3
jb
clc
mov
call
mov
pusha
jb
andb
add
push
push
pop
into
test
popa
fwait
ror
pusha
xchg
add
inc
and
jo
popf
or
jne
or
pusha
pop
push
scas
jne
mov
push
or
add
push
sub
test
pusha
or
or
inc
xlat
cld
je
mov
sub
push
pusha
cmp
mov
lcall
mov
inc
clc
call
mov
pusha
sub
sub
mov
fmuls
or
les
fs
les
inc
mov
cmp
int
loopne
in
jl
inc
movsb
outsb
sbb
inc
cmpsb
cld
pop
fcoms
dec
outsl
xor
ds
test
mov
call
pop
loopne
add
outsl
adc
je
lea
cs
mov
mov
ss
mov
push
or
cmp
pop
add
add
shll
or
loop
or
pop
or
mov
popl
rclb
sbbb
shr
adc
lods
push
push
subb
test
sti
loopne
mov
pop
pop
adc
das
js
loop
inc
int3
cs
pop
push
inc
ud2
mov
sti
and
sti
ja
lea
addl
lea
rclb
aaa
push
mov
and
jp
je
adc
mov
dec
pop
push
push
push
sub
and
xor
mov
leave
cmp
loopne
iret
jne
or
andb
mov
adc
add
loopne
jg
loope
or
jp
add
es
testl
jo
cmpb
adc
andb
repz
pop
negl
sarb
pusha
mov
pusha
aam
adc
add
or
ja
jns
in
push
and
bound
inc
mov
inc
hlt
jmp
push
add
popf
pusha
sub
pop
lea
loopne
decb
pop
loopne
rcrb
pop
leave
popa
sbb
pop
pop
push
inc
ffreep
add
test
sbb
call
test
and
jmp
test
loopne
into
pusha
ja
xor
mov
cmp
xchg
push
fdivr
jg
add
pop
and
push
lea
fistpll
add
arpl
add
inc
and
mov
cltd
shl
cltd
or
mov
mov
mov
pop
lret
je
jecxz
push
lods
add
adc
insl
mov
mov
xor
data16
push
or
nop
in
or
rorb
mov
mov
pop
idiv
add
add
insb
mov
das
rcrb
xor
sub
lock
xor
clc
add
dec
pop
mov
adc
sbb
push
mov
push
repz
inc
decl
push
fildll
cmp
inc
leave
xor
in
mov
das
mov
pop
jecxz
inc
jle
pop
sub
decl
pop
lock
cmp
mov
push
mov
mov
jle
inc
cmp
push
aas
or
xchg
cld
inc
add
or
cmpb
jg
push
call
push
adc
ret
xor
inc
movl
or
dec
ret
cmpsb
testb
pop
mov
pop
adc
jb
repz
test
jo
or
or
out
add
jae
jecxz
dec
jecxz
lret
pop
popa
jg
jne
cs
jmp
pop
lea
mov
cld
decl
fsubrs
add
movzbl
xchg
add
adc
mov
imul
or
mov
aas
sub
mov
scas
aas
repnz
push
or
xor
push
fcmovnu
pushl
nop
lock
lea
sub
xchg
repnz
push
sbb
adc
cli
aaa
cld
add
insb
and
inc
lock
lea
sbb
fcoms
dec
fs
ret
sub
add
push
test
add
pop
sbb
shrl
fs
inc
push
push
ljmp
adc
test
mov
jo
cs
dec
in
out
mov
call
out
or
add
int3
cmp
and
inc
inc
mov
mov
mov
or
push
push
push
je
cli
sbb
cli
xchg
jp
and
xor
ret
scas
push
jl
and
xchg
add
pop
fsubs
call
pop
add
mov
shlb
mov
sub
or
mov
and
add
add
call
and
lcall
sbb
push
lea
fidivs
xor
outsl
pop
test
cmp
or
icebp
fbstp
jp
pop
div
jne
jbe
cmp
adc
jbe
je
jl
test
call
mov
jmp
dec
jne
jno
xor
fwait
jle
jecxz
scas
lock
rol
lock
shr
adc
xor
imul
repnz
dec
push
sbb
call
inc
aam
mov
jo
shl
pop
cmp
mov
in
sub
and
mov
inc
repnz
mov
add
pop
test
imul
adc
push
fcoms
xor
add
xchg
mov
cmpb
cmp
ret
je
js
mov
aam
call
sbb
cs
push
je
add
sbb
xor
inc
pop
mov
jo
adc
and
mov
push
sqrtps
mov
adc
dec
lea
add
mov
or
int3
test
mov
call
xchg
xor
pop
dec
cmp
pop
mov
clc
cmp
xor
in
sub
push
push
cwtl
mov
jns
push
out
cld
cmp
pop
decl
loope
aam
int3
idivb
jne
or
and
call
pushl
push
call
jne
insb
cwtl
mov
call
xor
jmp
and
pop
add
mov
or
inc
addb
jmp
push
pop
fidivl
inc
call
shlb
jno
add
add
xchg
mov
and
and
add
adc
aaa
push
push
inc
fiadds
adc
jge
cld
jge
cwtl
pushl
mov
cmp
into
daa
mov
push
lea
mov
or
mov
xor
dec
xor
inc
clc
je
mov
ljmp
adc
orb
in
and
jp
mov
jo
cmpl
inc
jb
jb
inc
fsubr
rorl
cli
inc
fildll
jmp
or
fdivr
push
push
hlt
xchg
add
cmpl
sub
jne
stos
fiadds
xorb
orb
lock
cld
lods
call
loope
mov
lock
push
lock
je
call
sub
jg
pop
push
xor
mov
xor
call
xor
sar
mov
mov
icebp
add
clc
add
pop
jo
mov
js
inc
inc
mov
js
jmp
push
lods
sub
xchg
cmp
mov
cmp
jb
inc
mov
xor
mov
sbb
and
or
sbb
push
jbe
pop
add
je
call
or
mov
jmp
and
mov
clc
mov
add
pop
es
subl
shlb
jl
les
cmp
mov
dec
xor
outsb
and
xor
and
add
fs
insb
mov
fsubp
mov
pop
adc
out
pop
je
mov
lock
ret
mov
sub
or
jo
inc
ror
mov
cmp
call
or
and
mov
js
icebp
loop
je
jne
mov
incl
sbb
jns
push
loopne
or
hlt
xchg
lock
gs
aam
push
sbb
adc
xor
jl
rol
cmp
inc
push
jae
push
adc
jno
mov
add
test
cmp
mov
push
mov
push
stos
std
icebp
add
xor
mov
mov
mov
dec
add
mov
mov
xchg
cmpb
ljmp
add
out
jo
test
in
hlt
adcb
add
sub
sub
setg
mov
jne
adc
je
cmp
cmpsl
mov
mov
pusha
lock
call
lock
jnp
sbb
test
mov
call
jb
mov
push
push
mov
call
dec
test
push
jo
xor
or
and
push
pop
pusha
add
andb
push
push
fcoml
lock
mov
pop
push
jl
lock
xorb
je
or
xor
repnz
pushl
or
adc
andl
adcl
or
lock
jbe
and
sbb
adc
negb
push
add
sbb
sub
mov
mov
mov
js
je
inc
out
mov
push
xor
lcall
ljmp
js
js
xor
call
lock
aas
xchg
call
jbe
movsl
sbb
jg
add
pop
repz
test
sbb
incb
sti
jp
sbbb
adc
mov
jl
adc
or
jge
xchg
and
cmp
in
mov
xor
clc
sbb
jl
jmp
dec
pop
subb
add
and
pop
jae
mov
out
leave
mov
jmp
loope
cld
jl
xor
hlt
sbb
std
call
movsb
pushl
push
stos
push
pop
pop
nop
cli
test
fwait
sub
xor
cli
mov
mov
inc
pop
mov
jl
mov
pop
mov
mov
insb
inc
repnz
in
mov
or
std
sbb
and
push
push
lods
mov
out
adc
outsb
xchg
mov
push
push
sbb
jp
xor
mov
psllw
mov
addb
pop
xchg
jle
subl
clc
in
and
dec
loopne
mov
mov
push
call
adc
enter
fsubl
inc
fsubl
aad
adcb
or
xchg
xor
lcall
enter
cmp
andl
and
or
add
cmp
lock
sahf
jp
adc
adc
xchg
push
call
addl
add
repz
aad
mov
mov
dec
mulb
mov
test
or
cmp
test
dec
lahf
cmp
bound
rcll
test
mov
jle
ds
add
dec
sahf
dec
add
scas
mov
andl
mov
pop
or
subl
inc
or
test
xor
adc
cs
in
adc
push
into
fmulp
mov
mov
fucom
sub
push
cs
fimuls
adc
cmp
adc
or
push
add
les
pop
je
inc
mov
mov
mov
jl
fiaddl
or
pop
cli
cmp
mov
inc
or
int3
call
clc
mov
testl
mov
sub
cld
lock
inc
mov
xchg
scas
pop
or
jne
and
das
xor
rclb
or
mov
shl
aaa
add
int
jmp
jg
mov
xchg
xor
pop
cmp
dec
cld
stos
fiadds
out
and
call
xorb
cmpsb
mov
testl
int3
dec
pop
sbb
push
mov
sub
xchg
and
lock
loopne
mov
jo
xchg
std
mov
xor
mov
in
mov
xchg
xchg
pop
or
outsb
cltd
in
shrl
test
sbb
in
pop
push
out
flds
testb
outsb
add
or
enter
data16
popa
add
mov
add
mov
pop
scas
mov
mov
jl
sar
fstl
jge
add
addl
mov
clc
fdivrs
js
daa
dec
add
xlat
mov
scas
sahf
mov
test
test
adc
jb
out
div
dec
out
add
out
aaa
je
cmp
stc
pop
push
filds
or
in
aas
jge
jne
lea
aaa
jmp
ret
jbe
jb
jl
pop
call
lea
out
cmpsl
paddd
jbe
adc
or
sbb
jge
sbb
and
aad
or
jb
inc
xor
mov
jecxz
push
in
adcb
call
jb
orl
fbstp
lods
add
pop
mov
lea
scas
jmp
mov
jl
mov
mov
jge
mov
push
lea
push
xchg
jo
mov
test
orb
push
mov
mov
ljmp
sbb
mov
jl
pop
out
aaa
or
icebp
test
cld
dec
sarb
aaa
sahf
jmp
cmp
sub
and
jbe
daa
push
hlt
sahf
jle
fwait
scas
subl
mov
ljmp
mov
mov
mov
loopne
leave
sahf
dec
out
fadds
call
mov
adc
shll
testb
jne
sub
scas
xor
push
jae
adc
lea
inc
jb
cli
ss
dec
pop
or
idiv
punpckhdq
mov
jmp
push
cmp
push
inc
push
in
xor
sub
scas
aas
inc
shll
enter
jne
cmp
jmp
inc
ret
jne
jb
mov
loopne
lret
or
mov
and
lea
call
gs
mov
imul
add
mov
ss
jb
lods
dec
pop
xchg
out
add
dec
aam
sub
pop
add
jl
clc
add
push
push
mov
add
mov
mov
pop
imul
xor
cmp
add
fmull
ja
mov
mov
push
decl
add
jo
cmpsb
or
out
int3
call
fstpt
cs
mull
pop
clc
cmp
push
adc
fbstp
sbb
sbb
testb
sub
fidivrs
cs
push
inc
push
sub
test
gs
mov
daa
fmul
cmp
add
int3
mov
loopne
mov
jle
xor
mov
sbb
out
mov
add
pop
mov
mov
and
xorl
inc
scas
das
push
or
xor
push
fucomp
daa
jle
in
push
lods
or
rol
repz
sbb
cmp
call
adc
or
pop
div
inc
mov
das
push
es
add
push
outsb
fcomi
sub
jecxz
add
loopne
mov
pusha
cld
mov
cmp
and
mulb
or
call
jl
adc
xlat
xor
cmp
mov
push
cmpsb
mov
or
fs
int3
pop
mov
outsb
adc
cmp
inc
add
and
push
loopne
cld
inc
mov
xchg
push
or
cmp
add
mov
pop
pop
add
push
ss
cmp
shr
push
je
inc
or
mov
push
cmp
and
mov
daa
lea
jl
sbb
cmp
push
add
je
scas
test
jecxz
push
es
lods
jg
xor
push
push
mov
pop
mov
cmpb
inc
cmp
fiaddl
ljmp
ds
neg
mov
push
cli
loopne
cwtl
ret
cmp
es
push
fmuls
push
cwtl
add
or
push
pop
adc
push
and
mov
clc
adc
mov
cmp
xlat
mov
push
call
test
xchg
lock
hlt
jmp
xchg
fsubl
pop
hlt
pop
or
pop
lcall
xor
push
imul
or
clc
scas
inc
lock
or
sbb
mov
push
sbbb
adc
rcr
das
lea
je
xchg
add
gs
add
mov
xor
mov
cmp
pop
mov
xchg
adc
sbb
sbb
xchg
cmp
aaa
dec
emms
xor
mov
adc
or
jae
push
clc
add
pushl
outsb
push
pop
ss
add
jns
aad
negb
add
or
in
jae
push
jecxz
push
rclb
mov
shrl
jne
test
pop
in
lea
pop
xchg
movsl
into
push
in
cmpsb
mov
lods
mov
mov
mov
call
jnp
test
jmp
push
cwtl
or
decb
and
clc
dec
pop
dec
ljmp
jmp
push
fcom
sub
inc
lea
into
testb
pop
sub
shr
pop
lods
data16
call
push
jbe
push
loop
push
jo
mov
or
mov
mov
push
mov
dec
clc
cmp
push
cmp
ljmp
je
cmp
je
xor
jmp
mov
jmp
mov
jmp
mov
jmp
mov
inc
je
outsb
push
jbe
push
mov
jnp
into
mov
call
movsbl
call
sub
dec
fimuls
add
mov
dec
test
add
add
into
pop
popl
into
pop
test
jno
pushf
and
call
notb
push
les
je
or
jae
call
jmp
and
add
shrl
lea
stos
pop
pop
in
es
push
mov
mov
call
xchg
fmuls
cmp
jle
ljmp
inc
in
clc
out
mov
int3
leave
mov
cmp
pop
imul
cmp
mov
inc
iret
daa
adc
sbb
mov
clc
xor
sbb
cmp
mov
ljmp
out
adc
dec
cmp
mov
push
ret
or
or
mov
lcall
push
sahf
jbe
xchg
insl
inc
xor
push
int3
test
dec
cmp
nop
loop
adc
idiv
pop
test
vmwrite
pop
outsl
push
push
stos
adc
shlb
fdiv
dec
shll
mov
add
or
fcomps
mov
ror
pop
pop
cmp
cmp
add
or
call
les
cmpsb
or
add
mov
pop
inc
out
dec
pop
mov
jl
rcrl
sub
cmpsl
div
pusha
xchg
loope
mov
jnp,pn
pusha
pop
popa
pop
lret
mov
imulb
dec
icebp
inc
dec
jg
sbb
xchg
int3
daa
adc
or
fisubrs
ss
out
push
test
adc
xchg
mov
adc
mov
jmp
or
cmp
fldt
loopne
pop
add
addb
bound
std
scas
cli
pop
jl
or
es
movb
xchg
cmp
jne
std
and
shrl
mov
and
fisttps
mov
mov
shlb
xchg
adc
testl
adc
push
popf
rorb
idivb
mov
add
pop
adc
mov
mov
hlt
inc
mov
mov
push
xchg
sub
adc
jno
push
inc
test
je
cmpw
jae
pushl
pop
push
adc
dec
adc
cmp
jmp
jg
inc
or
mov
xchg
call
lods
hlt
shlb
push
ds
std
jne
add
push
push
vphaddwq
vmovhps
jne
push
lea
cmpsb
mov
xchg
lea
lea
mov
idivb
sub
inc
inc
cmove
jmp
add
jne
xchg
xchg
xchg
push
push
push
push
clc
mov
leave
mov
push
testb
adc
or
jg
mov
push
pop
sub
cld
sub
lock
sbb
or
aaa
sub
call
dec
scas
pop
fmulp
into
push
call
and
add
adc
into
jne
aad
add
out
cmpl
lods
call
outsb
loopne
add
add
xor
mov
lods
cmp
movsb
mov
and
nop
outsb
mov
sbb
add
push
lock
mov
outsb
mov
orb
cmpsl
pop
add
xchg
sbb
mov
cli
jmp
jg
and
aaa
jbe
testb
sub
push
fsubrp
fisubrl
ja
cld
mov
mov
clc
dec
jae
js
adc
xorl
aad
fisttps
add
je
pop
sti
sub
add
sub
pop
sub
fldt
mov
int
mov
test
or
mov
push
pop
jb
inc
sahf
fbld
and
cmpsb
enter
add
lock
hlt
mov
mov
jb
add
lahf
jecxz
insb
or
imul
add
sub
nop
jne
outsb
add
ds
cltd
loopne
sbb
ds
jbe
sahf
daa
jmp
call
fidivrl
pop
xlat
cmp
outsl
in
xchg
sub
cmp
out
lea
mov
enter
pop
rorl
xor
or
mov
repnz
push
ds
jg
push
je
pop
mov
bnd
je
cmp
lea
cmp
ja
data16
adc
add
pop
lock
sub
inc
cmp
aas
push
jmp
jae
dec
push
mov
sub
jl
fnsave
hlt
test
push
add
insb
jae
dec
mov
push
sub
sahf
add
enter
mov
add
add
divl
test
push
mov
test
hlt
popa
or
fwait
outsb
lock
mov
fiadds
clc
xchg
push
cmp
cltd
insl
mov
xchg
movsb
add
pop
sub
jne
imul
testb
add
cmp
test
js
fdiv
mov
ja
add
add
adc
dec
mov
enter
add
cltd
sbb
jbe
cld
enter
push
mov
shlb
pop
add
mov
add
add
je
test
push
pop
push
out
add
push
cld
rorl
div
push
jae
mov
mov
and
jbe
adc
jmp
add
mov
mov
jg
jo
jle
mov
xor
loopnew
insb
cmp
mov
dec
fcompl
mov
mov
call
ret
sbb
cld
add
fcmovnu
pusha
jl
add
loop
cmp
cmpb
pop
or
call
mov
mov
cwtl
andb
xor
orb
jg
mov
inc
sbb
xchg
subb
cld
jge
xor
lock
fdivp
ja
je
inc
push
push
mov
inc
iret
out
xorl
push
roll
pushl
fcoml
push
sub
xorl
add
mov
das
mov
pop
cld
addl
cmp
or
idiv
or
mov
dec
andb
dec
add
rcll
jnp
in
add
mov
mull
sbb
addl
call
leave
fimuls
orb
jns
mov
cli
cmp
sbb
mov
jb
push
adc
aam
add
in
jne
add
mov
popa
movsb
das
decb
lahf
test
incl
inc
in
pop
call
push
test
cmpl
sub
mov
add
adc
pop
imul
push
pushl
push
mov
scas
call
loope
push
jge
jmp
call
repnz
sub
mov
fsubs
cld
push
cmpb
js
adc
mov
jbe
orb
add
add
xchg
or
add
out
inc
in
add
push
push
mov
icebp
or
dec
ret
call
pop
adc
and
sub
mov
call
adc
jmp
fisttps
pop
cmp
mov
mov
test
xlat
jmp
je
mov
test
add
mov
mov
aaa
rcrl
mov
mov
ffreep
cmp
cmp
mov
add
or
scas
call
adc
mov
mov
shlb
add
mov
add
daa
add
mov
xchg
jo
or
cld
mov
inc
call
orb
push
hlt
sbb
in
pop
mull
mov
add
das
mov
movsl
jbe
sbb
sahf
and
add
mov
adc
xor
lods
push
fimuls
xor
add
jbe
and
or
movb
pop
ret
fiaddl
outsb
or
add
push
xor
push
ret
test
pop
sbbb
fidivl
xor
lock
add
sbb
into
mov
rcrb
cwtl
mov
pop
std
in
or
cmp
mov
test
jo
jb
and
addb
pop
add
add
add
test
pop
fnclex
outsb
mov
movsbl
or
push
push
xchg
add
mov
and
cli
and
hlt
int
faddp
pop
and
sbb
sub
fistl
addb
cmp
pusha
xchg
dec
pusha
mov
addr16
push
inc
pusha
add
inc
nop
sbb
or
sub
xchg
mov
add
fwait
je
cmpb
push
loopne
add
out
ret
leave
cmp
test
add
aam
test
sahf
mov
test
inc
mov
repnz
mov
inc
adc
ret
sub
pusha
jg
lock
pop
call
xchg
xor
pusha
ds
mov
or
adc
fwait
mov
xchg
dec
cmpsl
call
popf
rorb
add
jo
add
dec
insb
xor
bound
out
mov
push
cs
pop
movb
in
loopne
mov
sub
mov
or
and
lds
rorl
loope
loop
jo
ret
xor
inc
jl
cmovp
outsl
je
mov
mov
nop
std
call
or
cmpsb
lock
out
push
mov
cmp
outsb
ret
scas
push
popa
or
push
jp
jle
popl
sub
hlt
jo
xor
loopne
dec
pusha
pop
pusha
addr16
or
or
pusha
or
push
push
push
pusha
xor
jge
jbe
pop
adc
pop
lock
or
jg
mov
loopne
loopne
sbb
xor
loopne
pusha
push
sbb
push
add
mov
std
and
subb
gs
sbb
pop
fsubl
popa
aas
out
movsl
incl
dec
fdivrl
or
cli
sub
or
add
sub
mov
jbe
lea
pop
divb
adc
outsl
push
sbb
pop
push
push
filds
mov
test
and
sarl
loopne
and
push
pop
loopne
jp
adc
add
xor
cmp
sub
mov
sbb
xchg
loopne
add
dec
mov
add
jmp
and
inc
clc
jb
jl
jbe
pusha
xchg
push
fisttps
popa
sub
inc
or
push
test
pop
loopne
clc
sti
jne
add
movsb
push
push
mov
int3
adc
idiv
xchg
xorb
adc
mov
inc
add
mov
test
push
cmpsb
mov
in
mov
or
test
sub
sbb
shlb
dec
add
outsl
jg
mov
mov
cmp
lea
add
inc
lock
inc
into
pop
jae
in
mov
inc
pusha
add
out
jne
dec
imul
or
mov
aam
dec
jg
les
lret
clc
addl
sub
in
les
cmp
mov
dec
push
or
sbb
je
sub
push
xchg
rolb
std
push
add
ret
je
gs
and
outsb
mov
popa
enter
adc
or
lods
fldt
pop
push
frstor
cs
pop
cld
test
push
push
test
filds
push
or
push
popa
jno
mov
insl
fldt
cli
sub
jno
add
lods
pusha
dec
ljmp
mov
cli
xor
or
icebp
jns
rcl
repnz
adc
sbb
add
jo
push
push
sub
and
adc
mov
mov
decb
xor
dec
jb
je
movsb
mov
mov
mov
xor
jge
test
ljmp
jo
shlb
mov
lock
jb
pop
hlt
incl
pop
mov
movl
aam
outsl
adc
add
out
sbb
and
or
vmwrite
cmp
or
mov
rol
idiv
cmp
push
xor
repz
insb
pop
lods
js
out
push
cld
mov
jb
cmp
sub
mov
mov
xor
dec
xor
adc
xor
dec
xor
and
or
add
mov
lea
pop
jecxz
push
sub
lock
jne
lock
cmp
xor
jne
fcomps
mov
sbb
in
jne
mov
rolb
inc
pusha
pop
and
js
inc
ficoml
addb
xor
lea
outsl
scas
mov
fnstenv
push
pop
mov
loopne
subb
mov
pop
incl
inc
in
mov
xchg
call
xor
pop
dec
jb
sti
add
push
call
stos
xchg
rcrb
adc
cld
mov
xor
xor
popa
push
and
lea
jmp
sub
test
xchg
stos
hlt
call
push
push
lcall
or
outsl
fcomip
push
push
jb
pop
and
sbb
nop
mov
jne
cmpsb
xchg
decb
or
inc
add
cmc
lea
clc
sbb
cli
inc
xor
les
fs
dec
clc
mov
aad
inc
dec
and
cmp
xor
or
or
ret
cmp
dec
add
add
leave
mov
test
adc
push
outsb
cmp
jg
adc
jecxz
lock
jg
sub
cmpb
mov
mov
jmp
lea
cmpsb
mov
jnp
cmp
pop
mov
dec
add
js
cli
cmp
mov
scas
es
mov
shrb
je
xor
dec
or
leave
or
sub
pop
and
cmpb
cmc
cmpb
fbld
push
lret
add
jb
in
clc
cmp
test
push
mov
testl
into
mov
mov
ljmp
push
out
data16
ss
mov
add
pop
data16
mov
mov
dec
add
sarl
or
mov
add
add
xor
addb
sbb
xchg
out
cmp
roll
cld
inc
dec
add
mov
cld
mov
sub
call
imul
sub
jo
or
or
sub
adc
aas
fs
lock
cld
pop
or
incl
je
jl
add
add
jno
mov
dec
add
mov
pop
push
mov
add
mov
inc
orb
shlb
mov
stos
adc
pop
fistl
call
xor
add
and
pop
pop
scas
mov
call
popa
hlt
xchg
or
push
mov
and
sahf
mov
mov
sub
add
shlb
ljmp
jmp
sbb
mov
cli
stos
add
lods
test
jo
push
xchg
or
das
pop
dec
aaa
call
or
cmp
add
push
jb
adc
xor
and
orb
int
addr16
popf
xchg
xchg
ud0
sbb
xor
pop
lock
fldt
mov
les
call
mov
mov
push
lods
add
add
jne
lea
mov
icebp
adc
ds
push
mov
mov
je
push
pop
test
dec
push
sub
cld
scas
push
mov
es
mov
ss
mov
xor
push
test
ret
push
jbe
and
sbb
mov
fldcw
xor
outsb
mov
sbb
dec
and
sbb
xor
and
and
mov
sub
xchg
add
pop
push
xor
cmc
lcall
mov
mov
pop
xor
test
mov
cld
xor
arpl
loopne
rcrb
cmp
dec
xchg
inc
pop
inc
sbb
inc
mov
push
or
cwtl
jb
dec
stos
sub
hlt
push
push
icebp
add
pop
sub
add
outsl
add
paddb
adc
xchg
adc
stos
mov
jnp
jg
mov
sbb
call
aad
das
pop
in
mov
test
repz
jl
sub
or
cmp
test
rclb
jecxz
fisttps
imul
mov
xor
cmp
add
call
decl
sub
mov
sbb
pop
mov
and
add
cmpsb
decb
jo
push
push
push
mov
mov
mov
dec
adc
xor
aam
pop
add
xchg
rcrb
call
in
mov
inc
push
lods
shr
ja
add
outsl
out
pshufw
je
push
sub
scas
add
or
push
shl
mov
shrl
out
stos
xorb
rcrl
call
push
out
push
aaa
add
add
sub
pop
int
adc
test
icebp
add
mov
push
jp
mov
daa
mov
clc
call
xchg
jne
mov
lock
call
add
les
xorb
add
add
push
mov
movb
add
or
js
cli
push
mov
hlt
or
xor
jecxz
ret
adc
push
jmp
mov
pop
stos
cltd
push
das
sarb
xor
int3
adc
pusha
in
adc
ja
icebp
test
jbe
push
mov
cmpsb
filds
std
add
mov
sti
call
sbb
jno
add
aam
xor
pusha
or
scas
icebp
ss
mov
je
data16
sarl
lods
mov
xor
jne
or
push
pusha
xchg
add
cmp
loopne
pushl
jmp
mov
ds
call
divl
push
test
pop
add
std
cmpb
xor
in
add
hlt
lea
cmpsl
fwait
jmp
fistpll
cld
aam
push
add
test
adc
push
jp
test
mov
mov
cwtl
xor
jmp
inc
push
inc
jne
cmp
dec
sbb
mov
call
add
orb
add
adc
cld
xor
pop
icebp
mov
sub
pusha
add
push
shrb
xorl
not
fwait
ds
loopne
mov
dec
cmp
or
loope
xchg
dec
outsb
dec
dec
test
pop
xchg
xchg
add
test
loop
push
enter
inc
add
push
fildll
push
add
push
mov
pop
ret
jmp
add
jg
icebp
add
inc
or
data16
jg
add
push
je
inc
cmpb
test
add
or
sbb
jle
or
xchg
scas
pop
aad
mov
and
add
adc
popa
aam
adc
rolb
loop
add
cmp
add
dec
movsl
xor
jp
push
push
lods
movsb
ljmp
sub
push
pop
xor
inc
add
pusha
je
jecxz
stc
inc
jmp
dec
lock
pushf
push
mov
loopne
js
dec
add
jmp
lods
jl
jb
fcoml
pop
dec
loopne
push
adc
push
test
fs
push
stos
lret
push
pop
int
fs
gs
fbld
incb
or
jne
dec
dec
cwtl
orl
jecxz
andb
jne
push
das
cmp
mov
frstor
push
cmpsb
ret
sbb
cli
add
jg
or
or
mov
je
mull
loopne
in
add
xchg
jmp
rcrb
mov
push
add
ds
adc
inc
mov
mov
lock
mov
jle
pop
fucomi
fiadds
rolb
and
xchg
mov
lock
lds
insb
xorb
aaa
sbb
sbb
cmp
stos
or
mov
je
decl
sbbb
cmp
mov
lock
cmp
andb
push
orb
mov
adc
into
nop
cmp
add
add
sbb
iret
push
andl
jb
add
xchg
push
call
aaa
aad
mov
insb
int3
shll
pop
xor
and
in
mov
out
push
push
or
inc
call
sub
insl
test
or
push
fmuls
pop
stos
js
push
lcall
jae
mov
jne
call
imul
jp
mov
jp
je
mov
inc
jecxz
jnp
fadd
rclb
add
jg
das
jb
les
jne
or
inc
std
cmp
je
adc
push
and
or
mov
test
mov
test
pop
mov
andb
and
xor
jbe
add
rcl
cwtl
adc
add
shl
add
adc
incl
add
rcrl
psraw
jmp
call
fcoms
arpl
mov
jp
adc
sub
jne
jbe
dec
push
xor
mov
loop
jne
push
std
int
adc
add
xor
cmpsb
ja
fcoms
pop
push
push
lea
add
dec
adc
push
inc
cmp
rolb
shl
add
test
mov
sti
add
mov
roll
lock
inc
adc
inc
mov
add
add
add
imul
and
xor
xchg
or
add
add
push
jmp
mov
test
leave
mov
jg
sub
in
xchg
ljmp
push
out
ss
call
sbb
insb
out
icebp
call
inc
je
mov
ss
jge
test
rclb
test
inc
roll
aaa
pusha
pcmpeqb
int3
rclb
aam
cmp
rorl
add
mov
jo
pusha
subl
cmp
cmp
sub
jmp
mov
pusha
or
or
subb
aam
sar
sub
aaa
es
xlat
jae
adc
jb
add
cli
loopne
mov
into
sbb
shrl
test
test
es
pop
mov
lods
add
out
cmp
and
xchg
adc
mov
loopne
rorb
lcall
call
aas
cmp
mov
adc
fildl
lret
push
push
mov
pop
jb
mov
into
call
sti
std
inc
popf
inc
and
adc
loopne
je
and
rcrl
or
jg
testb
mov
inc
adc
sub
inc
out
xorb
sbb
mov
lds
scas
xor
in
int
adc
loopne
loope,pt
add
or
hlt
enter
mov
sbb
cmp
xchg
lea
pop
pusha
jb
or
xchg
mov
sti
lea
lods
push
adc
adc
fcomps
jbe
aaa
add
jmp
jg
mov
sub
into
inc
rolb
dec
jbe
dec
shlb
mov
mov
inc
in
andb
jle
cld
loopne
add
or
std
loope
sarl
scas
xor
testl
or
push
fildll
enter
pusha
add
xorb
mov
out
aam
outsl
les
jb,pt
xorl
ret
mov
push
add
icebp
ja
ljmp
add
ljmp
jg
mov
rolb
loopne
mov
add
or
mov
hlt
jmp
mov
lock
jmp
add
mov
xchg
leave
sbb
add
shl
mov
inc
imul
or
ret
mov
adc
imul
mov
pusha
inc
add
test
call
shll
ljmp
out
jle
mov
mov
call
and
mov
pop
pusha
jle
orl
push
shrl
shrb
dec
cmpsb
cmpl
or
jbe
adc
pop
leave
iret
lea
aaa
int3
add
int
mov
sar
imul
add
aam
jmp
add
mov
cld
fistl
add
xor
sub
jno
rclb
scas
jg
jg
dec
jns
mov
inc
inc
sti
sbb
adc
add
or
out
mov
cli
imul
add
testb
add
fwait
int3
je
mov
inc
test
mov
incl
call
xchg
jbe
call
mov
call
mov
or
call
call
push
add
push
std
ret
dec
cli
test
loope
add
cmp
pushl
mov
das
call
ja
call
and
call
xorl
sbb
repz
add
sub
outsb
mov
add
outsb
lock
inc
aas
shlb
mov
nop
je
ja
pushl
sub
adc
imul
or
clc
loope
mov
bnd
je
test
and
ljmp
mov
and
cmp
in
push
mov
imul
pop
call
sbb
jl
loope
pop
movsb
ret
mov
add
lods
push
xchg
xor
add
xor
add
fwait
sti
out
add
xorb
push
loopne
mov
adc
push
test
pop
add
jp
sub
mov
jb
fs
scas
push
call
jb
mov
enter
nop
xor
xor
stc
xor
cld
scas
push
fnstsw
call
test
lock
test
cltd
or
cmp
sub
xorl
lock
adc
jb
enter
mov
mov
adc
mov
push
adc
push
xor
add
inc
inc
stos
enter
lods
xor
add
fsubr
jle
cli
sbbb
sbb
inc
mov
jo
into
jb
inc
mov
loopne
rclb
push
sub
xchg
addl
mov
ffreep
mov
push
insb
std
jo
xor
push
xchg
sbb
dec
inc
iret
xor
push
pop
add
mov
or
dec
insb
jo
je
data16
cmp
mov
pop
pop
shr
es
cmp
mov
adc
add
and
push
adc
stos
shlb
in
inc
insl
sti
fbld
call
je
sbb
sub
or
std
mov
sbb
test
rclb
pop
xchg
sbb
subb
pop
icebp
lea
mov
sbb
sbb
mov
add
pop
mov
add
inc
shlb
fisttps
mov
inc
xorb
push
push
push
icebp
pushl
mov
je
adc
xor
adc
push
pop
lock
mov
int
call
push
je
les
cmp
inc
pop
push
mov
inc
xor
push
jb
test
lock
xor
pop
and
rolb
push
scas
xchg
push
add
jo
xchg
add
or
clc
push
test
xchg
adc
ljmp
add
repz
xor
xor
ljmp
and
add
aas
and
incl
mov
xor
call
clc
add
add
cltd
in
pop
ret
or
and
dec
lods
inc
cltd
mov
gs
jg
ljmp
aas
mov
xor
inc
xor
cmp
out
aam
jle
cmpl
js
inc
in
mov
lea
scas
call
jp
movsl
xor
push
xlat
ret
mov
cli
outsb
leave
or
pop
add
mov
fcoms
ja
jmp
cld
outsl
mov
cmp
andb
inc
xlat
int3
addb
lock
outsb
push
hlt
add
and
fisttps
inc
shl
lahf
ret
call
and
xor
adc
adc
call
pop
int3
inc
incl
or
add
lock
lock
jo
or
mov
dec
push
xor
bound
rclb
nop
mulb
jp
int3
adc
inc
repz
mov
test
jmp
fdivr
or
mov
pop
jbe
lods
inc
xor
clc
jg
call
ret
lret
adc
push
mov
xchg
lods
lea
das
jno
nop
push
fwait
lcall
pop
add
push
adc
mov
jp
inc
lods
jg
ret
addr16
pop
inc
cmp
loopne
push
add
add
sbbb
sbb
mov
insl
push
mov
pop
cmp
add
inc
sub
push
ja
adc
dec
jo
mov
adc
in
xchg
and
fstpt
inc
mov
lret
sub
aad
mov
loopne
jge
loopne
mov
test
mov
xor
pushl
xchg
xchg
pop
xor
mov
roll
test
push
mov
push
jo
in
pop
sbb
inc
pushf
xchg
jo
mov
enter
aad
cs
xor
mov
add
add
mov
xor
sahf
int3
icebp
add
inc
int3
stos
dec
dec
push
xor
mov
jg
test
stos
xor
add
ret
div
pop
in
add
icebp
lcall
data16
push
fdivl
imul
popf
nop
adc
sub
or
stos
or
clc
jno
adc
ret
or
xchg
jno
mov
lea
sub
mov
pop
test
ljmp
scas
stos
in
jo
push
sbb
jge
in
mov
adc
sbbl
jle
jo
je
mov
cld
add
pop
or
inc
pop
sub
inc
xor
dec
out
sbb
pop
insb
mov
fisubrl
mov
xchg
leave
mov
fsubrl
jb
call
clc
jne
xchg
or
int3
jnp
cltd
fs
ljmp
lea
and
cli
call
inc
testl
fs
or
lock
mov
daa
orb
jbe
lret
lds
incb
push
pop
and
mov
cmpb
mov
adc
mov
pushf
sub
push
and
scas
cmp
or
dec
or
pop
outsb
sub
push
and
push
push
cmp
push
pop
pop
fbld
sbb
and
xchg
and
mov
and
adc
mov
insb
cld
mov
loopne
xor
jae
je
pop
lock
int3
mov
cmp
repz
orb
mov
sbb
mov
sub
es
setbe
push
pop
and
fmuls
shlb
dec
mov
test
mov
shr
jno
lcall
mov
inc
sar
filds
jae
mov
jb
incl
pushl
mov
cmp
jl
mov
xchg
sub
pop
mov
pop
dec
clc
aaa
lock
push
inc
out
push
add
jno
sbb
add
sub
jbe
int3
inc
xor
sub
sub
push
out
lock
aas
inc
or
adcb
call
push
or
call
hlt
jg
mov
inc
sti
jmp
and
xor
mov
push
mov
lret
cmp
je
sbb
int3
ret
mov
cmp
add
sarb
lods
repnz
fnstcw
adc
cmpsb
xor
outsb
or
sbb
pop
lock
add
or
lds
mov
jo
adc
adc
push
pop
pop
repnz
cwtl
add
fcoms
aam
or
lock
lcall
xor
push
lea
adc
or
push
call
pop
cmc
cmp
faddp
lods
leave
sub
sub
inc
test
fs
cmpb
add
push
test
or
mov
negb
adc
jo
jno
or
pop
adc
add
pop
jle
out
jno
sub
fidivl
adcl
andl
jnp
add
scas
mov
inc
pop
cmpsb
xor
sahf
xchg
jae
movsb
and
test
test
inc
push
inc
mov
mov
clc
pop
test
pop
lods
imull
inc
pop
or
jle
bound
mov
push
test
inc
xchg
mov
mov
pop
je
hlt
pop
dec
and
lods
push
mov
or
and
lret
outsb
mov
jp
incl
shl
je
loopne
mov
add
adc
call
push
imul
stos
and
add
jae
add
fadds
xchg
cld
in
sub
andl
jo
dec
inc
pop
add
xchg
mov
fwait
ret
js
dec
js
mov
inc
mov
push
cmpb
or
or
jl
adc
xor
mov
mov
inc
sbb
lea
sbb
cmp
or
push
movsb
cmp
dec
mov
mov
subb
pop
dec
aam
mov
mov
lret
mov
jg
cmp
or
jne
ljmp
pop
mov
mov
adcl
in
call
mov
jp
and
mov
sub
add
inc
dec
jp
inc
and
addb
lea
or
scas
cmp
push
and
test
out
xor
leave
mov
test
call
mov
jl
adc
lcall
repz
mov
stos
lret
and
and
test
sub
adcb
sbb
popa
daa
push
push
fists
mov
inc
aam
and
outsb
cmp
repz
loope
addb
int3
mov
mov
loope
stc
outsl
sbb
test
jbe
call
fs
test
push
fwait
push
xor
pop
cmp
push
orb
cmp
subb
and
push
call
insl
push
je
jb
xor
scas
mov
pop
jle
jge
add
call
xor
ret
mov
out
setl
pop
adc
mov
jge
aaa
loope
cmp
jp
push
inc
push
cld
pushl
xchg
sub
sub
sarb
pop
push
and
mov
add
call
or
gs
xrelease
les
daa
add
push
sbb
or
rcrb
and
add
sub
lea
mov
data16
add
shrb
add
xchg
add
scas
push
xorl
insb
ds
roll
outsb
aaa
dec
call
les
fwait
push
sub
mov
sarb
add
jmp
cld
and
jmp
adc
sbb
push
pop
test
shlb
pop
out
addl
ss
loopne
shlb
jne
cmc
sarb
jbe
lcall
sub
je
iret
add
das
es
clc
sarb
aaa
ljmp
rcll
enter
cmp
mov
aas
shrb
adc
push
jb
aam
xchg
jae
mov
pop
inc
add
xchg
ret
rorb
xor
mov
push
add
xchg
or
iret
scas
sbb
push
inc
xor
xorb
or
insb
mov
and
test
adc
rol
in
sub
dec
pop
and
jne
call
jo
dec
xchg
mov
cld
fists
mov
insl
clc
call
dec
cmp
aas
hlt
mov
pop
roll
add
add
xchg
dec
or
dec
jo
cmp
mov
std
leave
jbe
add
or
inc
repz
cmc
aas
push
add
mov
clc
jmp
xor
add
and
mov
test
test
cmp
or
push
fmull
loope
mov
cld
push
adc
push
repz
pop
mov
add
cld
pop
dec
pop
xchg
pusha
sbb
xchg
call
aad
xchg
push
ud0
jmp
or
loopne
xor
dec
add
pop
sarl
jnp
pop
loopne
int3
xor
inc
sbb
or
sbb
lock
lea
into
dec
push
scas
lea
scas
pop
scas
mov
or
adc
dec
or
incl
popa
push
add
or
popa
add
lret
add
mov
mov
inc
cli
movw
pusha
cmp
ret
inc
add
loopne
mov
js
cmpl
call
daa
mov
or
loope
in
xor
xchg
xchg
push
fs
int3
add
xor
push
xor
jp
or
push
sbb
loopne
jl
cs
cs
loope
push
in
scas
rorl
adc
push
or
neg
rcrl
lea
int3
pop
punpcklbw
je
jmp
je
cs
xchg
cmp
sub
add
add
pop
sbb
sbb
push
sarb
les
jmp
fneni(8087
add
or
pushl
cmp
add
add
call
ror
das
clc
pop
add
loopne
push
push
push
je
jno
mov
icebp
add
loope
add
sbb
jne
push
lea
push
mov
xchg
push
in
add
push
or
ss
aas
dec
cmp
adc
idiv
subl
pop
pop
loopne
mov
inc
cmpl
and
push
mov
push
and
push
cmp
inc
js
and
popa
mov
xchg
enter
ret
inc
insb
sti
out
adc
je
sbb
push
inc
enter
cmp
mov
or
incl
mov
andb
add
mov
shl
mov
pop
mov
adc
cmp
push
test
popa
mov
pusha
push
repnz
fisttpll
shrb
jg
out
mov
pop
jle
or
dec
stc
popa
es
push
add
rcrb
mov
mov
call
call
ret
out
pop
jbe
clc
loop
aad
xchg
sbb
mov
add
push
insl
cmpsb
adc
adc
loop
xorb
call
in
loope
fsub
lahf
pop
in
call
pop
lock
jle
scas
inc
or
jo
or
lock
pop
xchg
incb
std
cld
popa
adc
add
hlt
dec
test
inc
mov
cwtl
test
fistps
mov
pop
out
xor
push
pushl
fadds
pusha
inc
sub
incl
add
leave
mov
arpl
mov
jl,pn
push
je
andb
jmp
lcall
push
inc
pushf
push
scas
call
push
popa
sbb
call
inc
mov
mov
sbb
js
adc
jmp
pusha
outsl
mov
add
loopne
test
rolb
jge
push
add
add
movsb
enter
popa
in
sbb
dec
imul
cld
into
call
xchg
pusha
sbb
fldenv
mov
fs
fcmovnb
jbe
push
loopne
lea
rolb
sahf
pop
cltd
and
jge
mov
or
shlb
push
cwtl
sub
in
mov
xchg
icebp
ja
sbb
add
je
mov
sti
xchg
jg
mov
add
pop
imul
sbb
or
mov
dec
sbb
pop
jo
mov
icebp
adc
sbbb
je
call
out
call
pop
dec
add
add
mov
lock
mov
mov
test
fistpll
jno
xchg
or
sub
jle
lock
mov
mov
inc
rdpmc
decl
sbb
jns
mov
nop
mov
outsb
add
jnp
arpl
jecxz
scas
jo
hlt
jne
dec
add
clc
subl
shll
mov
sub
hlt
jo
mov
insb
sbb
mov
adc
in
cmp
jge
fs
out
adc
add
xchg
push
cltd
lret
scas
cmpb
and
test
idivb
lock
call
faddl
adcb
jo
fs
jg
dec
xchg
lret
sbb
cmp
xor
xchg
xchg
adc
mov
adc
cmpsb
or
xchg
dec
or
push
sub
jbe
mov
mov
inc
sub
or
jo
jbe
js
adc
mov
add
adc
packssdw
mov
mov
adc
es
fildll
fcoms
xchg
mov
cmp
cmp
mov
sub
push
mov
or
sub
mov
sahf
and
xor
ret
je
push
stos
push
shlb
push
cwtl
js
mov
add
movsb
sub
xor
push
push
lock
sahf
push
push
cmp
clc
mov
push
inc
pop
stos
mov
mov
leave
cmpsb
es
sub
clc
mov
aad
outsl
add
hlt
fdivr
adc
cmpsb
pop
jmp
stc
cmp
mov
fs
inc
cld
or
mov
push
add
cwtl
mov
mov
inc
cmpsl
pusha
decl
xor
inc
jecxz
add
xchg
mov
inc
shlb
jle
push
fldcw
and
push
cmp
cld
mov
and
jl
push
xchg
add
fwait
mov
cmp
add
mov
sub
or
std
or
test
or
or
pushl
cld
stc
or
pop
push
pop
pop
je
pop
ret
xor
mov
daa
aad
xchg
add
push
cmp
adc
mov
mov
es
dec
add
icebp
inc
jge
mov
mov
je
push
xor
cmp
xchg
push
repz
dec
push
jo
pop
loope
mov
inc
lock
adc
mov
jb
xor
pop
jbe
pop
sti
addb
jbe
lock
mov
sub
sarb
jmp
add
jno
iret
aam
popa
jo
clc
mov
mov
and
lock
clc
and
add
xor
shr
push
cmpsb
adc
pop
mov
xlat
outsl
jo
das
adc
mov
jae
shrb
pop
cmp
movsb
inc
js
inc
cmp
dec
inc
jo
cmpsb
xor
inc
and
test
lcall
pushf
hlt
lods
and
mov
mov
das
es
add
jmp
adc
leave
aad
outsl
push
call
fsubr
aam
sarb
cmpl
xchg
je
incl
add
add
aad
pushf
ficoml
jo
mov
sub
pop
cld
js
aas
add
cmpsb
inc
cld
add
jl
in
repz
add
or
pop
pusha
adc
xor
pop
dec
mov
or
lret
aaa
or
mov
test
and
jo
mov
or
add
mov
fcoml
cmp
jbe
cld
add
iret
pop
fcmovu
hlt
jbe
push
jmp
inc
jno
add
push
xor
xor
sub
js
jmp
cmp
lock
inc
jo
dec
call
mov
out
lret
mov
jo
rcrb
push
adc
pop
enter
je
ds
loopne
mov
pop
dec
sbb
dec
mov
mov
push
or
jecxz
fsubs
push
fdivr
add
decl
pop
call
movl
inc
add
jle
sti
xor
and
pop
cmpsl
call
mov
push
jle
jo
jmp
call
lods
sbb
add
add
lock
scas
mov
cmp
jl
ljmp
add
or
lock
sbb
adc
lock
jno
xor
test
push
mov
mov
fcoml
call
sbb
repz
xor
pushf
sub
dec
and
clc
adc
jno
sbb
or
pop
repz
sbb
out
sub
jmp
jg
mov
adc
lock
cli
and
mov
mov
mov
decl
outsl
add
stos
andl
ds
or
and
xor
add
outsl
push
loopne
std
xor
sahf
jo
add
clc
outsl
xor
jl
mov
in
mov
mov
lea
jmp
imul
adc
call
xor
sub
incl
or
inc
testb
lret
sti
pop
xchg
out
pusha
push
std
add
jb
add
cmp
adc
lock
ss
pop
mov
out
push
ret
xor
cli
notb
mov
inc
cmp
inc
loope
clc
clc
inc
xor
cmp
push
pop
add
clc
push
outsb
and
inc
data16
sti
push
int3
in
sub
ss
test
je
in
push
sub
or
sub
mov
int3
imul
adc
test
in
imul
lock
mov
jne
fwait
jmp
xorl
and
adc
fidivs
pop
ret
xor
int
pop
lret
pop
ret
idivb
stc
mov
std
pop
ds
push
pop
imul
pop
loopne
adc
xor
push
decl
testb
shr
jmp
inc
push
push
pop
sbb
stos
fsubl
adc
adc
fnsave
je
into
incl
xor
test
inc
ficomps
jo
push
call
or
movsb
cmp
xor
add
lcall
dec
pop
ret
add
js
push
push
xchg
in
xchg
jne
fs
js
rclb
pop
pop
add
jnp
cltd
pusha
scas
fldt
pushf
je
mov
push
pop
add
test
int
or
decl
bound
inc
adc
popf
jb
lret
rol
pop
shll
fildl
ret
or
ljmp
push
inc
out
xor
rolb
es
call
xor
cmp
sar
pop
sub
fwait
add
mov
ret
jl
cmp
stos
mov
test
ja
lea
pusha
mov
lds
pop
mov
dec
jmp
call
jne
push
out
push
pop
ja
or
rdmsr
call
ljmp
out
mov
ljmp
mov
movb
orb
inc
jmp
movb
mov
mov
dec
out
mov
xchg
add
fdivrs
cmp
push
dec
add
data16
out
icebp
ljmp
outsb
loop
sar
ljmp
jo
sub
xchg
ror
lds
add
pop
cwtl
stos
add
clc
cmp
int3
leave
fdivp
xchg
inc
std
fwait
ret
clc
movsb
sti
push
je
mov
call
mov
inc
fisubrl
pop
add
cmp
cmovns
pop
dec
and
sti
push
scas
cld
inc
pop
push
shrb
pop
icebp
mov
addb
dec
pushf
add
add
ret
jne
into
shrb
incl
adc
mov
adc
sbbb
test
fisttps
inc
sbb
mov
mov
or
sub
dec
cmp
adc
rorb
mov
push
shlb
dec
add
les
outsb
cmpsb
rorb
inc
pop
add
decl
mov
mov
mov
add
sub
rorb
add
in
lret
fst
mov
lods
adc
or
dec
mov
inc
push
mov
or
call
mov
push
dec
mov
mov
ret
roll
cltd
incb
jecxz
mov
rclb
pop
cmpsb
bnd
push
jecxz
xchg
or
add
add
dec
or
cmp
cmp
rorb
push
pop
jmp
pushl
scas
call
push
loop
daa
testb
cmpb
push
xorl
push
xchg
ret
out
adc
inc
mov
sar
data16
add
mov
mov
mov
mov
je
mov
les
fdiv
add
mov
std
add
fistps
mov
or
hlt
addr16
out
scas
xor
sbb
sub
rorb
mov
add
loopne
jbe
sbb
iret
cmc
push
das
clc
ret
xchg
dec
outsb
jns
inc
rol
push
int3
aas
jmp
aam
push
mov
ja
dec
test
in
dec
mov
call
mov
lahf
scas
loopne
push
stos
data16
jbe
and
push
jne
out
fdivrs
mov
call
je
shl
adc
jl
push
and
leave
inc
xchg
daa
jb
fldt
cmp
punpcklbw
or
ljmp
or
pop
and
mull
mov
pushf
std
or
mov
repnz
pusha
sub
hlt
mov
loopne
and
pusha
pop
pop
push
mov
mov
xor
outsl
pop
push
push
outsb
adc
mov
dec
fdivr
addl
pusha
cmp
int3
jp
loopne
or
bound
fisttps
mov
lea
add
jp
gs
ja
lock
dec
push
push
inc
inc
rolb
das
shlb
inc
popa
inc
add
add
loope
add
inc
or
jbe
loopne
xchg
mov
cmp
push
imul
jo
pusha
cmp
jp
inc
mov
dec
in
and
jl
mov
loopne
xor
js
add
stos
mov
cmp
loopne
loope
mov
test
pushl
xor
inc
jl
or
inc
pusha
add
flds
popa
push
out
push
push
jmp
bound
add
or
push
or
pusha
sbb
pop
and
mov
call
dec
mov
and
pop
adc
lahf
test
call
mov
mov
mov
ljmp
fsubs
jo
jns
or
add
jp
jle
mov
pop
popa
add
and
mov
jp
xor
adc
jmp
es
adc
in
fs
jle
sarl
scas
dec
popa
das
fsubrs
mov
repnz
pusha
adc
icebp
pop
mov
add
mov
mov
loope
loopne
imul
pop
jbe
lods
cmpb
scas
xor
imul
aad
push
xchg
addr16
test
push
dec
ss
push
push
inc
icebp
testb
pusha
mov
cld
or
hlt
inc
dec
xorb
cli
enter
inc
cmp
jle
push
pop
fs
pusha
ljmp
les
dec
sub
adc
pusha
and
subb
add
pusha
push
loope,pn
cmpsb
push
in
sub
mov
adc
lea
hlt
xor
arpl
lea
mov
rcll
jmp
add
lea
push
scas
push
clc
es
xor
fs
in
sub
ljmp
xchg
ror
testb
jb
popa
jb
data16
inc
pop
pusha
rorl
mov
dec
lock
sbb
filds
pop
call
and
loope
mov
xor
dec
shrb
mov
iret
loopne
xor
shlb
jmp
addl
outsb
add
or
add
bound
mov
inc
std
ja
push
dec
mov
lock
mov
sbb
push
shrb
jp
pop
push
pop
add
std
xor
mov
push
dec
or
mov
push
shl
outsl
or
pusha
add
loopne
fdivp
das
test
lea
add
xchg
std
or
mov
and
mov
jge
fimuls
xchg
aas
dec
and
movsb
or
decl
jnp
sarb
adc
sub
push
and
mov
sbbb
lea
or
outsb
sbb
in
add
cwtl
addl
lcall
out
adc
cld
test
lods
pop
sbb
mov
in
inc
loopne
jmp
jmp
ljmp
mov
add
mov
pop
cmc
scas
sub
jg
movzwl
icebp
adc
dec
mov
cs
out
adc
mov
jo
add
add
push
roll
fisttpl
mov
cld
inc
mov
mov
jne
mov
lret
jo
inc
adc
xor
cmc
mov
jo
lea
scas
lea
scas
call
add
cli
scas
clc
lea
add
push
pop
add
stos
mov
in
lcall
lock
cld
xor
mov
repnz
sbb
xor
and
leave
nop
mov
xchg
jno
add
mov
pop
and
fisttps
jb
loopne
add
push
mov
decb
lods
push
mov
and
and
ljmp
fidivs
sub
idiv
jmp
mov
mov
stos
push
mov
dec
jmp
push
add
xor
adc
nop
mov
loop
stos
subb
bnd
mov
add
and
mov
pop
sti
ds
test
jb
lock
add
inc
js
lock
test
cmc
dec
push
push
cmp
rclb
inc
jo
scas
shlb
sub
aam
push
aad
je
push
or
loopne
enter
lods
push
xor
mov
jl
std
imul
decl
or
insb
jno
adc
cs
pop
inc
sbb
lcall
mov
mov
jmp
je
call
mov
jo
repnz
dec
ljmp
inc
dec
icebp
fcoms
das
add
fcomps
or
add
pop
mov
push
pop
inc
data16
jo
jne
imul
mov
daa
call
and
hlt
mov
mov
mov
jg
testl
mov
mov
or
push
icebp
add
adc
add
mov
in
lahf
jl
or
adc
testb
inc
dec
push
bound
in
fdiv
or
or
push
adc
xor
out
fdivs
or
mov
outsl
insb
add
jmp
out
dec
and
out
push
or
dec
std
outsl
dec
mov
cmc
push
or
stos
push
add
call
in
jo
fildll
push
call
or
push
push
jb
push
je
loope
aam
sti
and
sbb
xor
push
cmpsb
rcll
lock
je
mov
ljmp
pop
sti
mov
pusha
jne
jmp
fbstp
mov
xor
jmp
inc
rcll
roll
loope,pt
add
pop
mov
loop
dec
or
cmp
xor
add
push
scas
loope
call
call
js
xchg
jne
mov
jnp
int3
and
dec
add
or
add
jo
repnz
adc
jb
icebp
or
scas
add
adcb
je
pop
mov
por
addl
mov
sbb
adc
mov
cmp
add
jg
out
push
pop
lock
aas
repz
cmp
je
jo
movsl
mov
jne
loopne
js
pop
push
rclb
pop
jb
test
movsb
in
aam
mov
jl
das
movsb
jmp
call
mov
lcall
in
push
movsl
push
sti
mulb
jb
or
jne
les
inc
mov
lock
pop
push
and
test
pop
or
pop
popf
adc
insb
xor
jbe
adc
negl
loopne
mov
cltd
xor
int3
je
dec
and
pop
test
not
or
int
test
jo
and
and
cmpsb
mov
and
and
pop
mov
or
add
or
lock
xor
sti
xor
sbb
mov
xlat
xor
das
push
jp
cmp
add
stc
xor
add
pop
out
inc
xchg
pop
pop
pop
jo
push
test
sub
mov
jmp
adc
xor
push
and
lock
jb
incl
mov
nop
add
pushf
inc
jg
pop
mov
notl
test
xor
jne
xchg
aas
jmp
jo
sub
icebp
fistpll
mov
dec
movups
lock
push
test
cltd
lcall
fsubs
dec
cwtl
mov
pop
lea
add
jmp
mov
repz
sub
outsb
ret
out
das
push
sub
test
shlb
push
clc
push
push
rolb
jl
clc
mov
enter
sbbb
mov
push
add
shll
jg
push
push
jp
addb
lock
cltd
dec
or
idiv
mov
lea
lock
or
push
decl
dec
lret
inc
ja
dec
push
jmp
mov
into
push
jmp
stos
add
or
sbb
push
pushl
mov
ret
movzbl
add
test
cmp
xchg
mov
or
add
aad
pop
mov
add
js
ss
sub
test
jno
imul
adc
push
int3
rorb
or
outsl
lea
jmp
testb
outsb
gs
push
and
push
mov
xor
xor
pop
test
cld
xor
jno
jp
push
mov
push
or
add
je
inc
fildl
shl
cmp
jae
jno
mov
ljmp
test
sbbb
and
mov
mov
xchg
adc
add
sbb
pop
les
inc
fsubs
hlt
insb
cmp
xor
jo
lret
mov
jp
sbb
push
pop
pop
mov
sub
inc
pop
je
incb
inc
inc
and
xor
imul
mov
or
adc
fwait
jb
inc
pusha
xor
push
add
jle
pusha
aam
and
push
jl
pop
cli
or
fisttpl
adc
xchg
push
xchg
cs
imul
add
notb
fdivl
outsb
clc
add
sbb
cwtl
mov
sbb
dec
push
cld
ljmp
inc
sbb
jne
test
jg
rolb
jae
sbb
push
or
fidivl
std
jg
cmp
add
jmp
xor
in
fsubrp
xor
or
je
incl
loopne
mov
jae
gs
lcall
scas
je
sub
or
inc
mov
int3
lcall
shlb
cld
decl
push
cmp
ja
loopne
jg
lods
mov
push
add
add
sbb
hlt
roll
cld
push
hlt
jmp
xchg
xor
adcl
inc
mov
xorb
jo
adc
inc
push
pop
movsb
dec
insb
nop
pushf
jo
jb
mov
sub
inc
mov
je
repnz
mov
call
inc
add
fstp
adc
mov
or
es
sbb
mov
mov
mov
nop
mov
ret
adc
xchg
inc
mov
imul
cwtl
mov
cli
add
mov
insb
sarl
hlt
ja
sub
movl
dec
or
and
dec
sbb
stc
lcallw
jge
stc
add
push
fs
loopne
insl
jl
hlt
inc
test
jae
adc
push
call
add
pop
jmp
fildl
pop
movsl
bound
mov
stos
sub
and
stos
sub
loope
nop
add
pop
sbb
and
dec
or
shll
xchg
cld
test
adc
jbe
pusha
cmpsb
inc
pop
loop
or
push
out
inc
cld
sarb
out
jge
test
push
mov
pusha
adc
inc
hlt
dec
add
pop
xor
popa
sahf
dec
sub
push
dec
adc
add
filds
and
cs
push
push
adc
ret
hlt
int
jo
adc
mov
mov
mov
orl
mov
fistl
jl
loop
add
test
addb
lock
jbe
mov
sub
adc
ja
fcoms
jl
add
or
dec
movb
xchg
xchg
rolb
lret
mov
add
cmp
xchg
push
or
cmp
lock
sahf
xchg
or
mov
adc
call
cmpb
andb
daa
mov
sbbl
cld
inc
and
adc
std
xor
pop
jns
sbb
pop
cmpsb
pusha
xchg
cmp
push
push
mov
mov
jg
test
adc
add
outsl
mov
jl
adc
dec
rorb
add
or
nop
mov
or
push
invd
jp
add
jb
jnp
mov
andb
push
push
ret
gs
ret
sbb
je
inc
out
mov
or
or
mov
push
imul
js
data16
inc
lods
adc
rcrb
adc
add
add
les
scas
push
shlb
hlt
xchg
dec
inc
cmp
lock
fdivl
and
add
arpl
jle
dec
or
scas
add
loope
inc
lret
clc
out
or
fadd
ds
insb
js
clc
jg
dec
fcmovb
dec
in
shlb
adc
xor
pushf
add
xchg
pusha
aaa
adc
mov
mov
fmuls
insb
add
or
mul
negb
shrl
mulb
sbb
add
mov
loop
add
ret
sub
sbb
decb
mov
mov
jmp
loopne
mov
mov
inc
add
aaa
std
pop
or
adc
je
xchg
ror
inc
sti
data16
aas
push
cmpsb
mov
pop
mov
sbb
jo
movl
inc
mov
jmp
cs
dec
jmp
push
xchg
call
jecxz
test
inc
cmp
mov
fbld
jg
rclb
or
sbb
adc
rorb
xchg
stos
adc
sarb
mov
dec
hlt
add
add
inc
shlb
cld
jg
rolb
loopne
int3
leave
cmp
lock
mov
dec
sti
nop
test
loop
cmp
mov
mov
pop
loopne
dec
add
pushl
or
add
mov
jg
xchg
or
push
call
inc
jle
push
xor
loop
incb
add
loope
dec
test
mov
rorb
push
or
sbb
push
inc
daa
inc
or
xchg
xchg
add
mov
sbb
scas
clc
cmpsb
pushl
jns
adc
pusha
mov
jmp
add
pop
add
jo
or
push
xchg
es
orb
and
jge
add
mov
mov
je
jg
sbb
add
adc
xchg
add
xor
pop
outsl
xchg
pop
in
lea
decl
jo
lret
fs
add
loopne
ret
loope
test
stos
cmp
xor
mov
add
add
adc
test
loopne
xchg
std
out
in
bound
add
pusha
push
adc
in
ljmp
js
cmp
and
jmp
cmp
add
in
jb
mov
pop
js
or
cmpl
jg
lcall
xchg
mov
or
popl
sar
outsl
rolb
mov
add
sub
jbe
je
push
rolb
add
mov
mov
andb
or
push
mov
push
pop
inc
pop
push
add
jle
xchg
sbb
std
add
clc
faddl
es
mov
jns
lea
jp
add
xchg
dec
frstor
testb
jg
clc
popl
cmpb
add
loopne
movl
std
add
lock
ljmp
enter
push
mov
mov
ds
add
je
xor
xchg
add
sub
adc
xchg
and
adc
mov
pusha
cltd
loopne
cmp
pop
rsm
in
filds
add
cmpb
sub
mov
mov
out
xor
and
add
pusha
xchg
out
and
addb
push
loop
jp
je
mov
add
add
icebp
lods
pop
cmpb
jecxz
sbb
adc
ljmp
fdiv
and
int
inc
call
aad
xchg
inc
inc
mov
sub
je
lret
popa
dec
std
or
adc
lret
inc
daa
lds
add
repz
loope
inc
and
add
loopne
push
sbb
sub
call
push
and
and
fists
loop
lea
popa
push
mov
testl
nop
pop
jno
jbe
or
les
fdivr
sub
mulb
dec
popa
aas
ljmp
test
ror
outsb
in
push
push
cmp
je
pusha
or
test
push
add
adc
adc
je
jno
dec
sbb
add
jl
pop
rorb
or
stc
pop
adc
fneni(8087
cli
enter
stc
xor
mov
sbb
mov
xor
jle
push
pop
adc
and
stc
pop
dec
movsb
xor
cmc
mov
popf
lcall
mov
inc
add
ljmp
jb
or
icebp
and
scas
cli
adc
testb
mov
dec
add
call
pop
icebp
lret
adc
push
or
jno
ret
aam
fisttps
fisubrl
add
cmp
push
mov
adc
xor
sbb
test
fwait
test
mov
dec
ljmp
mov
adc
push
nop
dec
mov
or
je
movsb
orb
adc
aam
dec
mov
sub
mov
lcall
fwait
mov
mov
pop
xor
gs
clc
pop
mov
mov
jo
mulb
lock
adc
adc
xor
dec
or
xchg
decl
arpl
cmpb
xchg
lock
or
icebp
adc
and
cmpl
cmp
add
mov
adc
sbb
add
fnstenv
add
fwait
lcall
mov
inc
out
sub
jo
fildll
vmwrite
xor
mov
sbb
stc
test
icebp
pop
cmp
cld
shlb
cld
sarl
addb
xor
lds
sub
scas
jno
jo
out
or
inc
cmp
inc
sub
scas
ljmp
jo
les
jmp
outsb
mov
cmp
sub
push
or
pop
imul
jecxz
add
mov
fnstenv
push
sbb
je
jmp
hlt
and
hlt
cmc
add
push
mov
test
jecxz
in
and
and
hlt
cmp
push
jg
ds
lock
add
xchg
jl
addb
add
sti
imulb
xor
in
mov
lock
mov
jle
sbb
pop
pop
and
mov
dec
js
xorl
sbb
aaa
jl
add
aam
xor
jmp
cmpsb
sbb
imulb
sbb
xor
xchg
add
jne
rcrl
mov
mov
je
jne
add
mov
je
inc
insb
sub
jmp
adc
xor
test
cld
push
sbb
jg
fbld
mov
jb
and
or
sarl
sub
mov
jne
int3
rorb
adc
mov
shlb
cli
ja
mov
mov
sub
loopne
push
lds
nop
lcall
leave
jmp
shl
sbb
leave
push
and
rorb
add
test
insb
ss
cmp
rorl
push
sbb
push
into
add
jo
in
outsb
lcall
mov
ret
dec
lock
adc
add
call
pop
loopne
cli
inc
addb
adc
rcl
repnz
inc
clc
pop
clc
mov
xchg
ret
ret
test
repz
stos
inc
mov
dec
xor
add
jle
icebp
push
jle
push
inc
sbb
fs
inc
lock
push
ret
lcall
and
or
adc
lock
insb
nop
xor
mov
inc
les
or
sub
cmp
sbb
push
shl
ds
fildl
incl
dec
pop
xor
add
int
mov
pop
jmp
idivb
jae
mov
mov
inc
inc
idiv
xor
sbb
adc
push
je
adc
sbb
lock
std
das
push
rcl
testl
hlt
add
adc
xchg
xchg
jbe
clc
dec
repnz
or
inc
testb
jmp
mov
aaa
add
adc
pusha
mov
sbb
jl
or
and
sub
fwait
fildll
and
je
cmp
je
ret
push
xchg
add
cmp
cli
jo
aaa
std
and
xchg
inc
pusha
pcmpgtb
mov
fdivl
ds
addl
ss
xor
inc
push
lds
loope
sbb
add
mov
aad
xor
inc
ja,pt
mov
andl
or
scas
mov
insb
nop
fists
lods
cmp
dec
mov
add
xchg
pandn
mov
pop
xorb
and
cmc
adc
mov
push
jne
arpl
jo
pop
and
and
es
xor
push
mov
pop
ret
pop
js
adc
rol
shl
shlb
or
adc
sbb
pop
pop
orb
adc
push
sub
xor
pop
add
add
repz
repz
sbb
add
xchg
or
cmp
push
xor
pop
push
mov
xor
mov
add
mov
lock
pop
lcall
dec
jo
jb
adc
xchg
popf
ret
add
jmp
test
insb
test
movsb
mov
push
mov
or
out
div
jbe
jb
or
add
jns
icebp
add
adc
mov
xor
ret
std
jae
shl
ret
push
inc
clc
jo
adc
or
lds
cwtl
scas
add
rcll
push
dec
jne
push
add
inc
sar
ljmp
ret
inc
or
dec
jbe
ret
dec
ja
mov
add
inc
das
push
cli
dec
xorl
in
jo
adc
call
nop
add
nop
ret
cmp
jne
inc
xchg
add
xorb
push
sbb
pop
lock
mov
loop
lock
mov
lock
adcb
clc
mov
cmp
mov
xor
jo
xor
mov
les
pop
lret
std
incl
push
adc
cmp
push
or
mov
lret
pop
push
out
mov
jnp
jo
add
data16
clc
and
add
mov
cmp
sbb
or
lock
pop
insb
mov
movsb
jmp
xor
out
add
and
jmp
jne,pt
mov
add
lcall
test
mov
jbe
fucomi
push
bnd
add
lds
add
mov
cmp
gs
add
lock
lock
mov
push
scas
push
enter
shl
or
mov
push
or
push
adc
mov
and
orb
add
sub
hlt
jmp
or
mov
sub
jbe
sub
lock
jl
or
lock
or
mov
xor
add
mov
push
fildll
call
test
jp
jecxz
adc
adc
cmpb
adc
add
or
add
jl
xchg
push
lods
push
adc
in
jle
bound
sub
cmp
xor
lret
and
hlt
push
xchg
and
add
cltd
xchg
clc
sub
mov
adc
add
loopne
dec
or
jbe
add
xchg
xor
cmp
scas
mov
aaa
mov
in
insb
xor
dec
add
inc
popa
clc
adc
inc
add
into
loop
add
adcb
movsl
sbbl
movl
shlb
int3
push
orl
adcl
jb
adc
sbb
test
pop
pop
and
dec
lock
es
test
scas
int3
adc
fnstcw
jmp
add
add
ja
es
pop
add
or
or
mov
sub
negb
inc
stos
or
or
fiaddl
orb
clc
xchg
sbb
mov
pop
or
hlt
loopne
mov
fcoms
inc
sub
mov
adcb
inc
dec
cmpb
lock
stc
mov
imul
pushl
add
in
jge
cwtl
adc
rclb
in
cmovne
pop
adc
add
mov
outsl
mov
mov
cmp
jbe
add
cli
jg
inc
mov
rcrb
rclb
jge
outsb
cli
mov
mov
clc
adc
gs
and
xlat
js
test
call
imulb
shl
adc
mov
mov
cld
stos
add
add
xchg
rorl
data16
stc
jl
aaa
jg
push
sub
stc
mov
inc
mov
ret
xor
test
pop
pop
sub
or
xor
in
sbb
jp
adc
jl
adc
dec
mov
add
rolb
inc
insb
outsb
test
or
test
jl
fsubrs
sbb
shlb
rcrl
sbb
imul
jge
test
and
push
and
mov
push
cmp
rcll
dec
sub
decl
push
movl
push
incl
or
clc
add
inc
out
sbb
cs
icebp
je
shrb
repz
cmp
or
lock
jmp
lret
inc
inc
cmp
cld
adc
rcr
outsl
xchg
dec
sahf
inc
rcr
rorb
fcomps
ret
add
out
adc
cld
add
dec
in
add
fcmovb
cwtl
cmp
lock
adc
jg
fsubrs
jmp
shrl
fldcw
inc
lds
les
movl
lcall
adc
sbbl
popa
adcb
loopne
subb
aad
sbb
jbe
dec
leave
adcb
fwait
pop
loopne
jg
xor
call
mov
fwait
sub
inc
mov
repz
aam
cmp
outsb
jge
cld
lret
sub
loop
cmp
sbb
inc
in
jecxz
ret
push
or
lock
and
cmp
jle
xchg
jecxz
les
enter
cltd
xor
mov
sub
mov
or
sbb
pop
or
inc
xor
fidivrl
inc
popa
xchg
mov
popa
aaa
mov
adc
mull
lock
pop
orl
or
mov
rorb
loopne
and
fistl
inc
mov
nop
andb
inc
push
cld
jne
add
dec
shr
mov
mov
cld
mov
jmp
xchg
shl
nop
ss
ret
pop
sbb
and
lret
sbb
test
imul
cmc
jmp
or
or
and
xor
adc
incl
lcall
and
je
imul
jecxz
fists
in
mov
pusha
or
xor
dec
jp
xor
idivl
mov
or
aaa
mov
rcrl
ljmp
pushf
push
mov
lahf
push
std
loope
lret
pop
ret
fwait
xor
cmpb
pusha
cltd
pop
imul
push
pusha
mov
shrl
int3
in
dec
sub
fwait
push
cld
stos
out
dec
loopne
xor
aas
es
dec
loop
mov
push
decb
mov
add
lret
ljmp
roll
or
in
bound
push
cmpsb
lods
mov
jbe
outsl
leave
mov
or
pusha
add
or
add
ret
cli
jl
and
vmread
adc
and
adc
cld
loope
mov
cld
dec
cmp
push
pusha
int3
dec
in
ljmp
dec
jo
add
nop
jbe
jl
mov
cmp
or
inc
mov
and
pop
add
dec
sub
or
dec
jnp
repz
add
dec
sub
or
or
mov
adc
xchg
add
sarb
and
clc
mov
add
pusha
bound
mov
pusha
adc
inc
addl
mov
cmp
and
cli
bound
fistps
jle
pusha
or
arpl
std
jbe
mov
insb
jae
jg
or
inc
jmp
cmp
popa
jl
pop
pusha
push
push
mov
cmpsl
add
fimuls
sti
hlt
inc
fsts
mov
loop
ret
lock
loopne
dec
addl
sub
bound
jmp
or
in
push
das
mov
lock
add
mov
cli
fbstp
hlt
add
mov
or
insb
jmp
add
shrb
sti
dec
jp
testb
adcl
xchg
jo
mov
cmp
mov
fucompp
arpl
jae
add
and
sti
mov
add
inc
cmpsb
jle
or
add
inc
cmp
xor
ret
mov
icebp
inc
ret
cltd
icebp
jg
jo
aaa
inc
add
or
out
inc
cmp
jg
loope
je
or
mov
jmp
push
testb
jge
outsl
and
and
push
ja
shlb
mov
xchg
mov
xchg
push
popa
dec
push
mov
jo
xor
jl
lods
ret
aaa
jg
add
data16
mov
adc
push
mov
push
icebp
mov
lock
jle
adc
outsb
mov
out
sub
add
add
add
dec
cmpsb
loop
xchg
pop
jg
pop
jnp
lock
lcall
cmpsb
mov
jle
mov
xor
xchg
in
push
jno
xchg
or
or
mov
dec
inc
bswap
xchg
jae
add
aaa
add
mov
adc
cmpb
cmp
jae
test
jle
aam
mov
sbb
bound
in
js
jecxz
add
or
inc
loop
sbb
fcoms
mov
lds
pushl
repnz
add
mov
cmp
mov
inc
std
mov
scas
jl
not
sub
mov
aam
cmp
push
add
pushf
mov
xor
icebp
lock
jnp
mov
loop
in
inc
or
jo
es
push
adc
xor
push
icebp
xor
sub
cwtl
jmp
mov
mov
stos
je
rcrb
daa
jae
jo
incl
inc
adc
inc
xchg
xor
fucomi
and
jno
sbb
mov
mov
inc
hlt
je
cmp
mov
and
xor
mov
pusha
sbb
adc
dec
mov
mov
mov
leave
icebp
push
cmp
xor
fs
cmc
jg
jg
shr
sub
lock
shlb
jo
adc
adc
xlat
mov
add
repz
outsb
sub
jl
call
mov
in
lahf
mov
and
lock
pop
sbb
lods
lock
repz
xlat
add
jne
cmovl
test
pop
mov
cs
xor
imul
pop
in
pop
inc
sub
inc
fucompp
js
mov
repnz
xor
mov
mov
jmp
fucomi
mov
jb
push
mov
push
push
mov
shr
or
jp
inc
pop
sahf
jne
fsubrp
mov
jbe
push
imul
into
lea
mov
lods
sbb
cmp
add
add
aad
xor
dec
lock
outsb
std
incl
adc
das
cld
ret
lock
push
or
cmp
push
nop
sar
mov
add
jae
xor
lods
sub
cmp
lods
std
loopne
sbb
mov
fadds
ss
push
fnsave
pop
jns
jnp
cmpsl
sub
push
adc
popf
add
mov
sub
repnz
add
popf
add
mov
add
adc
mov
cmp
jmp
add
ljmp
jae
add
pop
add
les
adc
jae
xor
les
or
movl
add
and
jmp
xor
push
mov
hlt
mov
or
rclb
ja
sub
stos
mov
lea
icebp
jmp
push
or
or
xorb
std
xorb
xorb
hlt
cmpsl
add
or
jmp
dec
shlb
pop
inc
pop
cmpsb
cld
lcall
adc
xor
dec
mov
sahf
cmpsb
and
mov
jne
jg
mov
cmc
and
mov
incl
push
scas
hlt
xchg
pop
clc
xchg
xor
repz
xorb
js
add
cmp
add
cmp
jmp
push
jmp
mov
xor
fistpl
incb
decl
std
lock
inc
mov
mov
cmovp
lcall
in
addb
inc
jo
or
adc
shr
insb
or
pop
orl
sahf
loop
cli
xor
adc
pop
xor
or
add
incl
inc
jmp
mov
cli
ljmp
xchg
jmp
mov
mov
fwait
mov
nop
dec
xor
add
jno
jno
mov
inc
sbb
lods
int3
xchg
add
mov
and
gs
rclb
pop
or
or
sbb
cwtl
mov
enter
inc
xchg
aaa
rclb
mov
xor
les
xor
mov
lret
mov
add
loopne
inc
and
push
add
lock
in
mov
jno
das
inc
jo
xor
mov
lcall
lock
lock
outsb
or
and
out
sub
loopne
mov
out
sti
cs
or
pop
jo
add
ret
shr
ret
jno
push
inc
lds
mov
xchg
add
mov
add
push
and
mov
xchg
xor
ficoms
jo
add
and
pushf
js
sbb
in
push
dec
lret
and
cmp
sbbb
loop
inc
aam
cmp
repz
fimuls
cmp
mov
sbb
divb
call
xor
cmp
cwtl
clc
std
mov
add
push
and
add
lock
add
nop
fiadds
push
xchg
inc
push
add
decb
lock
pusha
cmp
loope
je
push
enter
adc
dec
pop
lcall
aam
add
mov
mov
mov
mov
dec
push
add
bound
stos
cmp
mov
jmp
sti
andl
xchg
mov
orb
les
or
jne
gs
out
andl
data16
pop
mov
cmpsb
out
push
or
es
and
xorl
adc
mov
inc
adc
cli
mov
orl
add
mov
adc
sub
addb
mov
mov
cmp
ss
je
mov
pushf
scas
ljmp
push
xchg
rcll
rorl
add
lods
or
orl
push
push
aam
dec
add
pop
je
or
rclb
xchg
popa
inc
fs
fdiv
out
mov
add
hlt
inc
add
clc
sub
and
out
pop
or
aas
adc
inc
repz
add
ja
cmp
add
mov
pop
or
adc
add
lock
or
aam
xchg
pop
inc
inc
rorb
mov
add
adc
mov
add
push
jg
lea
push
mov
enter
mov
imul
int
pop
push
push
add
push
sarl
adc
add
fcoml
inc
xor
fcompl
je
inc
add
ss
popa
jne
lock
xor
xchg
inc
and
dec
js
rclb
cld
push
and
mov
dec
adc
shll
or
sbb
lock
and
xchg
rolb
rolb
rorb
mov
bound
pushf
fdivr
cmp
sar
incl
add
jg
movd
jbe
fwait
xor
mov
inc
cmp
es
lcall
dec
mov
and
pop
lea
lock
fs
shlb
in
cmp
mov
out
dec
fadd
and
je
ret
add
mov
adc
pextrw
or
or
ret
push
jmp
ffreep
into
push
jo
pop
xor
inc
rcr
adc
adc
loop
testl
jmp
mov
sar
iret
jp
adc
jb
out
pavgb
sub
lock
dec
call
sti
sub
add
mov
cs
jmp
and
loopne
jg
incb
loopne
xor
in
bound
adc
loopne
pop
cld
pusha
sub
push
ljmp
cmp
orb
jbe
add
sti
pushl
pushf
fisubl
je
cld
pop
and
or
movsl
push
rorb
inc
js
je
jl
sbb
sbb
inc
or
mov
pop
pop
push
popl
jo
sbb
lret
and
and
loope
xor
xlat
jecxz
sub
loopne
call
loope
inc
jbe
dec
test
sar
cmp
cli
in
dec
addl
in
sub
mov
add
test
xchg
or
call
es
mov
add
clc
fwait
mov
xor
xchg
cmp
lcall
insb
int3
loopne
add
xor
jl
pop
test
cli
or
call
mov
nop
jnp
and
arpl
add
push
std
mov
dec
push
xchg
and
outsb
adc
popa
adc
roll
add
xchg
enter
aad
test
mov
icebp
xchg
loope
mov
shl
cmpb
sub
mov
push
pop
xchg
inc
cmp
mov
xor
aaa
test
lcall
sbb
jge
pusha
sbb
push
jne
lods
sbb
mov
movsb
loope
dec
sub
jecxz
pusha
adc
sub
dec
push
jecxz
pusha
mov
test
mov
sbb
jmp
push
sub
add
mov
pushl
push
add
jmp
loope
push
mov
push
xor
shl
inc
xchg
popa
add
push
pop
or
insl
or
xor
mov
faddl
inc
lods
daa
popa
dec
loopne
leave
fsubrs
cmp
adc
xchg
cmp
stos
jmp
ss
ret
shl
xchg
mov
loopne
fists
mov
push
fsubs
inc
jmp
ror
fistl
das
je
inc
std
call
inc
arpl
jecxz
cmp
pusha
pop
popa
cmp
shl
cmp
in
add
ret
jecxz
popa
mov
idivb
xlat
popa
pop
lret
push
sub
jecxz
jmp
or
and
in
and
loopne
xchg
shll
ret
and
nop
dec
push
or
insl
sbb
pop
mov
xor
into
es
ftst
repnz
xlat
bound
add
call
or
cld
mov
gs
and
fildl
pop
add
pusha
loop
clc
and
loopne
sub
or
pusha
mov
or
cmp
sahf
pop
int3
xor
pop
loopne
ret
call
aam
out
test
cli
and
add
ja
mov
and
sbb
sbb
cmp
inc
rclb
fwait
and
sub
fadd
cli
mov
add
jae
mov
jmp
ja
addb
pop
mov
xchg
cwtl
call
pop
or
test
shlb
push
mov
cmp
ret
or
jo
adc
test
shrb
inc
push
xchg
mov
mov
add
cmp
subb
mov
xchg
jp
jno
mov
mov
jmp
mov
ja
testb
pop
inc
ss
mov
jp
push
dec
jg
mov
sbb
pop
or
inc
pop
sbb
add
xor
shl
xor
lds
add
or
mov
mov
add
or
adc
adc
jmp
xor
pop
and
add
adc
mov
loope
loopne
cld
add
jb
test
fs
add
loopne
roll
nop
or
pop
inc
fisttpl
mov
out
sbb
orl
mov
push
push
addb
or
cmc
sbb
xchg
adc
ds
leave
sbb
sub
mov
sbb
jo
incl
lds
xor
push
add
scas
mov
shlb
and
lcall
jl
mov
dec
rol
into
fldcw
or
aam
xchg
push
xor
adc
rclb
roll
fcoml
lock
dec
push
jg
int
insb
test
std
xor
repz
dec
inc
mov
lods
push
lods
xor
sarl
lods
and
cmp
add
or
adc
add
push
arpl
and
and
push
fisubrl
inc
mov
cmpsb
mov
mov
fs
inc
cli
xor
add
ja
mov
into
mov
dec
repnz
jecxz
xor
out
dec
lds
out
out
insl
and
add
in
sbb
loope
and
add
and
jp
clc
fisubs
and
add
sub
add
and
outsl
ljmp
sub
sub
mov
add
das
add
xor
out
push
xor
es
cmp
mov
adc
cs
aas
mov
mov
or
xor
or
outsl
insl
imul
or
movsl
push
fiaddl
lock
or
and
and
xorb
test
stc
push
add
add
add
mov
scas
or
adc
cmp
xchg
xchg
mov
cmc
add
or
xchg
jl
cmp
stc
push
pop
or
adc
xchg
aam
stos
cmp
cmp
iret
mov
or
addl
or
mov
dec
or
sub
je
adc
clc
aaa
add
cld
ret
dec
mov
jecxz
mov
dec
fdivs
add
mov
idivl
sbb
nopl
out
pop
pushf
stc
mov
add
ss
filds
cmp
jne
cmp
dec
cmpsb
cli
jg
jg
add
jge
push
jmp
inc
sbb
mov
jmp
test
xor
mov
sbb
stos
sbb
call
and
lea
sub
lock
add
mov
popa
cmp
pop
or
mov
aas
inc
lods
inc
push
pop
fisttpl
push
inc
lock
das
sbb
lcall
mov
mov
add
popf
cld
push
and
pop
pusha
jp
or
sahf
call
jp
push
adc
xchg
mov
dec
mov
sbb
lret
cmovs
pop
lock
lea
jb
mov
scas
aaa
jo
cmc
dec
cld
out
rorb
das
push
pop
test
inc
ja
xorb
cmp
test
call
pop
in
out
add
jo
es
call
sbb
xor
push
sbb
je
rcll
ret
stos
adc
fiadds
sbb
in
test
mov
jp
mov
or
insl
outsl
fildl
pusha
add
ret
lcall
sub
xor
mov
or
cmp
xor
jmp
and
add
pushf
jo
xor
mov
aaa
xor
stos
xor
push
add
add
mov
mov
mov
dec
js
je
ret
icebp
mov
push
add
push
sbb
scas
mov
add
scas
ljmp
scas
or
add
pop
lock
inc
jg
pusha
xor
mov
and
test
es
mov
jmp
je
sbb
mov
sub
xor
cmp
mov
or
fisubrs
movsl
sahf
dec
push
aad
sahf
cmp
or
jmp
mov
push
out
es
jle
cmp
mov
shll
test
push
sub
lea
mov
ja
mov
push
sbb
push
jle
add
xchg
xor
repz
dec
add
jp
xor
rorb
je
pop
xchg
repz
insb
xchg
sbb
add
mov
shlb
add
or
jo
adc
cli
mov
hlt
enter
cltd
add
and
add
cld
mov
shll
in
inc
add
jbe
cmpsb
test
testb
mov
mov
pop
mov
sub
add
ss
xor
dec
movsb
mov
push
or
add
mov
out
dec
js
xchg
call
cld
mov
jge
dec
div
call
je
or
clc
jg
push
repnz
xor
rcl
add
mov
xchg
jmp
and
xchg
cli
mov
mov
cmpl
icebp
fbld
or
mov
lock
enter
inc
and
dec
jbe
les
jmp
mov
je
push
jp
mov
notb
sti
je
push
inc
push
xor
fs
add
cs
mov
dec
push
push
test
fisubrl
aaa
and
add
sti
in
jle
in
lock
inc
add
or
jbe
outsl
and
xchg
add
cmp
jae
sub
dec
add
jmp
add
push
or
pusha
or
mov
les
jae
mov
sbb
pop
mov
pushl
mov
adc
lea
sbb
stos
jo
aas
mov
fdivl
jmp
push
xchg
ret
mov
cmp
or
cmpsl
jbe
jne
addl
adc
add
add
lcall
les
jb
mov
mov
incb
jp
push
out
inc
or
je
mov
in
bound
fdivr
sti
cmp
rcl
xor
mov
es
inc
cld
in
jmp
je
add
loop
adc
lret
push
scas
popl
ret
or
mov
stos
add
inc
mov
pop
cmp
xchg
push
cmp
jae
xchg
adc
rolb
mov
out
sbb
daa
cmp
jo
add
lret
push
mov
add
dec
pop
jbe
aaa
pop
push
jle
das
sar
cmpsb
xor
ret
es
cmp
lea
sub
xchg
mov
shrl
adc
les
pop
mov
and
outsb
cmp
or
cmpb
jne
cmp
add
cmp
xchg
mov
fistpll
mov
cmpb
jne
lahf
mov
sub
cmp
push
pushf
jne
cmp
sbbl
add
cmp
inc
ss
popf
aas
add
fmulp
jbe
inc
les
jbe
push
js
push
sahf
lock
je
dec
inc
or
je
cmp
jb
jmp
aaa
dec
push
pushf
outsb
mov
and
jo
ja
int3
je
out
stos
test
push
lods
push
adc
dec
sbb
fsubs
pop
mov
push
je
jb
add
jbe
or
mov
lret
loopne
sbbb
and
sahf
push
mov
mov
fcomps
xlat
mov
mov
and
mov
out
out
clc
pop
jl
mov
nop
cmp
mov
lea
fistpl
inc
das
je
cmp
jbe
mov
push
sbb
dec
hlt
mov
rorl
das
adc
push
jbe
dec
mov
adc
jae
test
adc
leave
aas
adc
cmp
pushf
loop
jne
pushf
daa
mov
mov
test
movl
jge
mov
jge
fisttpll
loope
ja
mov
jne
adc
mov
cmpb
dec
sti
sbb
and
jne
outsb
cmp
pop
mov
xchg
std
dec
pop
dec
add
jbe
add
cld
jl
mov
nop
adc
xor
dec
jbe
pop
mov
ret
inc
sbbl
push
xor
repz
or
lock
push
mov
shl
pop
shlb
add
xor
in
insb
mov
jecxz
jle
inc
add
stos
sbb
xlat
shrb
mov
clc
fistpl
sbb
mov
inc
jl
add
fldl
pop
mov
popa
mov
add
adc
xchg
int
mov
fstpt
rcrl
push
test
add
add
adc
xchg
push
movb
cmp
jge
mov
push
nop
sub
sbb
cmp
cli
xchg
fists
jbe
add
cld
push
pop
enter
es
or
adc
shr
test
andl
push
or
movsb
xor
inc
clc
jg
mov
mov
xchg
add
adcb
xchg
jo
push
test
mov
arpl
inc
adc
dec
popw
fprem
cmp
push
add
lret
inc
das
or
add
inc
cmpsb
daa
int
mov
pop
jo
icebp
cmc
cmpsb
adc
push
movl
std
es
mov
daa
or
mov
pushf
out
rorl
jle
xor
lock
sbbl
es
mov
dec
add
adc
mov
dec
shrb
and
pop
idivb
adc
add
inc
sbb
jne
ds
movsb
pmaddwd
add
push
inc
cmp
repnz
inc
call
jbe
int
call
mov
ret
stos
lods
sbb
hlt
add
mov
sub
push
dec
add
jno
mov
ds
pop
lret
icebp
mov
insb
and
push
fistl
rolb
daa
jecxz
push
fldt
outsb
incl
rorb
cmp
addr16
xor
xlat
mov
xor
lret
mov
test
push
jbe
std
add
push
jbe
movsl
adc
test
jl
inc
pop
cwtl
mov
es
fcompl
push
loopne
jge
jge
adc
mov
lcall
sbb
push
in
cld
lcall
test
push
inc
jge
test
xchg
cmp
or
xchg
xchg
test
fcmovnbe
test
sub
inc
dec
sub
out
add
jb
mov
dec
ret
lods
in
xchg
loope
lcall
adc
xchg
push
lock
loopne
pop
jne
jmp
xor
loopne
lcall
out
mov
dec
fistpll
incl
jnp
lahf
imul
ret
xor
dec
push
cs
xor
adc
test
dec
inc
punpckhbw
mov
mov
mov
ret
add
jge
pop
push
push
int
bound
lret
je
dec
inc
out
insl
mov
loop
or
and
fldt
pop
shrl
clc
jae
xor
lds
ret
cmp
mov
outsl
mov
dec
das
dec
inc
aad
cs
mov
enter
xor
inc
aas
add
cmp
cwtl
inc
aad
loope
dec
adc
incl
push
and
add
push
fdivrl
dec
iret
push
push
div
out
data16
psrld
jbe
sbb
mov
outsb
jmp
pusha
mov
scas
or
dec
arpl
pop
repz
iret
and
adc
push
xchg
or
xor
ds
jo
or
and
xchg
push
mov
fisubs
inc
ret
out
push
push
push
aam
or
cmp
jp
or
ljmp
jp
xchg
dec
ret
cmp
sbb
push
test
sbb
adc
sbb
rclb
cld
cld
jle
cli
sti
xor
popa
insb
orl
cmpsb
sub
fdivrs
pop
or
add
loope
ds
aam
push
movsb
in
aad
sub
hlt
addr16
fdiv
mov
jle
xchg
inc
push
incb
fdivrl
push
pop
pop
and
fs
xchg
cmc
push
stos
pop
sbb
mov
push
or
ficoms
lea
cmp
mov
add
mov
sub
add
cmp
sbbb
or
sbb
adc
sbb
call
fsubrs
add
add
push
add
fisubl
jecxz
xor
fcomip
sbb
int3
xchg
or
add
add
int3
imul
outsb
jbe
mov
sub
mov
lock
adc
stc
ljmp
nop
add
icebp
jbe
mov
xor
push
xchg
xchg
and
out
jg
faddl
je
mov
or
xchg
push
jmp
jbe
pop
aas
jge
loop
fnstenv
push
or
cmp
push
shlb
fidivl
push
daa
fisttpl
cmovns
push
psubsb
add
dec
lret
addb
imul
xor
mov
test
jge
test
dec
push
xchg
inc
cld
decl
pop
add
repnz
mov
mov
test
out
jle
jmp
pop
es
lea
push
cmp
mov
add
xor
jecxz
inc
dec
stos
cld
ret
pop
call
loopne
test
out
jbe
jge
sbb
outsb
jb
mov
outsb
cmpsb
jo
imul
fildll
fidivrs
sub
mov
into
mov
sbb
lea
repnz
pop
or
sub
xor
mov
add
insb
push
je
das
push
jp
push
stos
jge
popw
inc
pusha
xor
or
and
call
in
dec
push
push
loopne
mov
cs
fsts
lea
loopne
jp
cmp
push
pop
lock
cmp
je
movzwl
cltd
cmp
je
mov
add
pop
jl
in
push
dec
std
out
inc
mov
cld
js
add
ss
add
lods
inc
jb
jg
lcall
data16
or
add
inc
icebp
shr
fisttps
sti
add
jnp
and
leave
adc
and
cli
ja
add
lock
fists
ret
pop
data16
jl
add
notl
push
scas
push
mov
mov
xchg
mov
adc
popa
sbb
lods
mov
loopne
aaa
inc
xchg
sub
mov
mov
data16
push
je
stos
or
inc
fiadds
pop
daa
subb
test
call
mov
adc
mov
or
enter
testl
xchg
in
push
fs
inc
rclb
push
push
sbb
xlat
rolb
cwtl
adc
test
cmp
je
scas
dec
mov
shr
inc
pop
jne
add
cmp
cmpsl
mov
paddd
adc
into
ss
sti
jge
sbb
adc
in
ficoms
nop
out
adc
insl
gs
and
je
lret
add
negb
aas
add
xchg
mov
outsl
pushf
push
jp
and
jl
imul
cmpsb
je
add
fstpt
pop
cli
mov
cmp
call
jmp
mov
js
push
lahf
pusha
scas
sub
mov
xor
rcll
ss
mov
cmp
sahf
push
pop
xchg
sbbl
arpl
xchg
cmp
pushf
mov
outsl
ds
pop
pop
lds
clc
dec
mov
push
push
rorb
sbb
testb
mov
xchg
xchg
mov
sub
je
js
and
add
or
out
inc
jl
xchg
cmp
inc
inc
fldl
je,pt
out
push
in
or
dec
fdivl
adc
pop
dec
sti
addl
mov
hlt
call
cmp
movb
imul
outsb
cmovs
push
mov
scas
invd
lods
scas
sahf
sub
outsl
dec
js
adcb
fsubrp
add
shr
popf
das
fsubrl
inc
mov
mov
cli
pushl
decl
lock
adc
cs
mov
cmpsb
out
dec
cmp
je
lea
pop
dec
or
dec
jle
shl
adc
scas
call
dec
or
xor
adc
pop
push
fs
mov
pusha
cmp
out
sbb
and
mov
stos
sbb
outsb
push
mov
dec
mov
sarb
insb
cld
jg
push
jne
push
or
mov
inc
inc
dec
mov
nop
dec
dec
inc
jp
pop
jg
add
lock
mov
jbe
xor
xchg
lea
xchg
hlt
pop
or
nop
int3
fistl
push
mov
sub
fcoms
cmp
lcall
add
dec
jne
mov
add
loopne
or
mov
push
sahf
pop
cmpsb
sbb
in
icebp
sbb
or
push
mov
cs
subb
and
jbe
mov
or
add
push
repnz
inc
fbstp
jmp
push
mov
neg
in
and
lea
mov
lods
jmp
push
mov
fmull
jmp
cmpsb
pop
and
pop
ret
xchg
or
js
or
rorl
xrelease
clc
push
mov
cmpsb
xchg
inc
in
test
popf
mov
call
loope
loope
push
in
addb
sahf
mov
mov
xchg
js
adc
and
ja
or
sbb
push
add
lds
mov
adc
xchg
sbb
sti
je
ljmp
les
es
pop
cmp
fs
jg
adc
push
test
fsubrs
sbb
loopne
xchg
push
push
movsl
xorb
stos
cmp
andb
cli
stos
dec
out
scas
dec
adc
scas
mov
aad
lcall
sub
jbe
push
mov
jmp
cmp
cli
xor
sti
push
aam
hlt
cmp
add
cbtw
popa
mov
or
mov
loopne
adc
push
testb
je
push
mov
iret
cmp
movsb
cli
jle
push
mov
addb
ja
ss
adc
or
push
pop
pop
add
lods
adcl
inc
pop
push
hlt
int3
xchg
add
or
mov
push
es
in
cmp
shrb
fimuls
and
mov
sbb
adc
lcall
mov
lods
add
or
mov
push
mov
pop
int
inc
jne
add
or
mov
xchg
jo
cmp
scas
mov
jle
sub
into
inc
jne
inc
jo
push
addb
int
movsl
cmc
push
add
ret
in
cmp
jbe
cmpb
rcr
push
xchg
andb
ficoml
push
and
jmp
ljmp
and
and
xorb
add
addb
clc
mov
clc
or
movsl
cmpb
dec
ret
gs
add
pop
and
mov
pop
adc
mov
add
adc
and
call
divb
push
addb
sub
or
sub
xor
cli
enter
je
addr16
into
subl
faddl
adc
add
inc
pop
jle
sarb
adc
mov
cli
ds
or
ljmp
shlb
and
mov
add
rolb
lock
jmp
fcomip
rcrl
pop
jne
mov
int3
add
int
add
mov
cmc
rcrb
pop
jne,pn
dec
mov
std
data16
lods
inc
pop
dec
ret
and
hlt
cmp
ret
push
dec
mov
test
adc
push
std
push
inc
test
insb
inc
add
test
rcrb
mov
out
pop
adc
rol
sub
jmp
jo
sarb
mov
test
div
je
call
aas
ljmp
dec
add
add
insl
adcb
pand
incb
aam
stos
add
xor
insl
fisttps
or
push
inc
push
add
es
adc
fcoml
push
insb
mov
add
fsubs
lods
mov
push
leave
sub
fs
icebp
add
or
sub
and
sbb
aas
dec
shr
jmp
add
dec
and
lods
loop
test
out
dec
in
rolb
jg
rcl
ret
ret
adc
dec
push
roll
es
dec
mov
out
pop
out
insb
jb
mov
shlb
lahf
cs
insb
push
push
cli
push
adc
adc
and
pop
cmp
lock
ret
ret
loopne
mov
cmp
insb
fildl
mov
sbb
jbe
stos
xor
mov
lock
hlt
das
stos
stos
sub
pop
call
xor
cs
add
push
in
and
cwtl
push
sub
or
aas
xor
stos
inc
hlt
bound
test
pop
adc
inc
cmpsb
mov
and
dec
push
loopne
mov
xchg
addl
pop
sti
ljmp
notl
dec
flds
pusha
dec
call
out
push
mov
test
adc
lret
pusha
push
push
je
imul
pusha
std
in
loopne
icebp
sbb
and
or
in
jmp
pop
mov
gs
loopne
or
loopne
out
je
lea
mov
call
push
sbb
fcom
pusha
or
add
loopne
pop
pusha
arpl
sbb
fmuls
pusha
inc
loop
xchg
movsb
pusha
nop
add
fisubs
or
loop
pop
xor
imul
clc
incl
loop
mov
loopne
call
add
xchg
jmp
mov
mov
lahf
push
mov
outsb
fstps
pop
rcrb
push
pusha
or
or
adcb
or
ja
cmp
loopne
or
lock
daa
xor
cmp
push
aaa
les
pusha
test
pusha
adc
shl
ja
pusha
and
addr16
mov
cmpsb
xor
andl
andl
cmpl
sti
je
test
jbe
addb
pop
or
add
sbb
or
inc
push
cmp
mov
xorb
push
push
cs
ljmp
cld
testb
mov
push
push
ljmp
negb
push
or
pusha
das
push
add
and
filds
addb
push
cli
addb
mov
out
aaa
sub
jle
jb
and
pusha
scas
mov
or
movsb
xchg
loopne
push
mov
call
bound
pop
loopne
xchg
cs
push
mov
andb
lahf
loopne
pusha
jle
clc
incl
cwtl
sbb
mov
pusha
les
jmp
jl
clc
nop
add
movswl
or
sbbb
and
pusha
and
sub
outsb
inc
xlat
xor
mov
push
nop
test
sbb
clc
mov
lcall
sti
loopne
mov
testl
insl
lret
cmp
and
push
icebp
call
clc
lss
push
jp
jle
add
mov
pop
addb
jp
cld
add
dec
add
cld
enter
mov
iret
jge
je
es
mov
or
call
ljmp
jge
adc
mov
icebp
add
loopne
sbb
jg
cmpsb
clc
adc
popa
outsb
aaa
xchg
pop
ret
data16
adc
dec
dec
push
add
scas
mov
test
enter
add
or
mov
andl
loopne
mov
ss
cmp
cld
lcall
incb
inc
cli
out
cmp
loopne
jne
add
push
jmp
cmp
add
loopne
add
cmp
add
and
popa
ss
pop
mov
sub
xchg
and
dec
lea
inc
cmp
pop
rolb
aas
movl
jge
cld
jne
arpl
outsb
decl
test
add
mov
jle
test
push
add
cld
aaa
sub
push
pop
jl
cmp
scas
pop
lock
popa
pop
xchg
inc
push
nop
push
pop
cld
pop
mov
bound
push
cmp
sbb
clc
ljmp
subb
xor
jb
inc
fdivl
or
cmpl
adc
mov
xchg
cmp
dec
aam
or
mov
dec
push
adc
ja
test
mov
test
xor
or
and
je
dec
jl
adc
add
add
mov
and
and
ljmp
xchg
jo
jno
shlb
mov
mov
or
push
xor
xchg
std
push
pushw
inc
adc
and
push
push
jp
sbb
dec
or
jle
or
mov
call
lds
fs
sub
je
mov
insb
movsl
lock
push
lock
xor
in
sub
dec
lea
aaa
sbb
and
shlb
sub
jno
xor
clc
pop
mov
leave
pop
or
out
lcall
pusha
ret
test
mov
xlat
adc
cmp
jne
add
push
jne
lods
or
jle
inc
out
call
adc
jle
and
testl
icebp
je
dec
hlt
and
and
push
mov
test
jl
lcall
inc
add
jb
add
or
add
lock
pop
push
das
add
or
mov
adc
xorb
pop
xchg
cld
push
imul
xor
mov
loopne
or
pop
mov
mov
aas
or
jmp
je
xor
mov
imul
es
dec
lahf
xchg
add
stos
add
hlt
decl
or
in
iret
repz
push
mov
pop
pop
ljmp
or
pop
cmp
subb
test
lock
and
sbb
jge
jbe
clc
inc
xor
lods
jno
lret
mov
adc
std
lock
jg
icebp
cmpsl
mov
idivb
test
push
lea
jo
or
mov
call
jmp
lea
add
mov
xor
add
fs
mov
fistps
cmp
mov
adc
push
orb
fiaddl
ret
loop
push
add
push
shll
shll
dec
icebp
dec
mov
push
add
movsl
cmpsl
pop
or
jle
jl
xchg
pop
movsb
push
or
adc
add
add
xchg
test
loope
pop
imull
pop
jge
jg
pusha
adc
pop
mov
pop
jo
mov
add
out
lcall
mov
cltd
sub
mov
lret
dec
iret
lcall
jb
push
push
xchg
xor
or
sub
dec
call
mov
pop
std
out
mov
jo
imul
mov
add
jbe
xor
movsb
add
push
push
and
mov
jle
bound
lock
mov
or
pushl
lock
sbb
orl
or
lcall
xchg
jb
or
movsb
push
clc
lea
and
xorl
and
lahf
jne
push
adc
incl
adc
pop
dec
xorl
xor
or
sbb
popf
stos
inc
xor
lock
add
jo
fildll
push
sbb
jno
fwait
mov
push
jo
mov
fldl
lock
call
xor
push
shrb
pop
add
mov
mov
cmp
jb
jbe
dec
cld
popf
and
add
add
jp
add
and
lcall
add
mov
or
lock
mov
jecxz
pop
adc
lock
sbb
push
push
push
push
jae
pop
pop
lock
mov
adc
adc
push
adc
nop
dec
sahf
test
je
jo
sbb
test
shl
out
xor
adcb
cmpsb
popa
scas
sbb
pop
call
pop
cwtl
leave
xor
mov
dec
and
push
dec
je
fisttps
orb
pop
mov
mov
jg
das
or
inc
call
sub
and
lcall
out
push
or
mov
xor
clc
xor
clc
fisttpl
inc
les
add
sbb
mov
mov
adc
es
mov
lock
xor
xor
loope
add
decl
popa
cmp
mov
test
add
jl
add
adc
jl
hlt
jbe
clc
jnp
clc
rorl
rorb
dec
ret
xor
pop
lock
and
ss
mov
cs
mov
incl
jb
loope
fisubrl
fsubs
pop
es
mov
mov
leave
ret
or
in
jb
mov
cmp
add
decb
in
add
pop
jmp
stos
js
pusha
push
call
lret
inc
adc
add
cmp
clc
add
into
push
mov
mov
movsl
mov
hlt
and
out
pushl
mov
sbb
iret
mov
add
jmp
outsl
jo
call
ss
sub
test
adc
pop
inc
xor
outsb
test
push
pop
push
cltd
pop
or
pop
andl
call
iret
stc
push
hlt
mov
push
sbb
clc
push
push
cwtl
push
mov
jae
test
in
pop
jo
and
mov
jo
sahf
cmp
pop
adc
xor
jg
xor
sub
pop
lods
jb
lock
daa
push
lock
add
aas
and
push
push
mov
aas
cwtl
push
ret
jg
jo
je
jo
adc
mov
xor
fmull
dec
jno
push
or
push
fimuls
adc
js
mov
mov
add
dec
or
je
xor
jmp
mov
sbb
rorb
pop
subb
test
push
and
lock
jb
pop
cmp
outsb
push
and
push
adc
addr16
adc
cld
pop
pop
pop
jae
push
xchg
pop
sub
cld
and
jne
mov
lret
sub
dec
or
sub
andb
mov
pop
push
test
ss
cltd
inc
xor
jle
loop
add
inc
inc
jno
mov
popl
outsb
fwait
lcall
xchg
call
lds
test
adc
sub
mov
or
lea
mov
xor
cmp
jl
mov
ja
je
pushf
mov
jb
outsl
pop
add
out
mov
or
aad
pop
mov
pop
aad
fimuls
hlt
mov
adc
ss
inc
cmpsb
ljmp
clc
mov
mov
inc
lea
adc
jne
pusha
adc
adc
add
pop
mov
hlt
mov
add
les
clc
pusha
mov
lock
push
add
divb
aas
add
movsb
out
popf
add
adc
cld
sbb
jne
add
cwtl
and
das
fdivrs
lahf
push
insb
cmp
lods
jae
add
das
add
adc
mov
add
fwait
dec
insb
mov
push
pop
add
cld
push
xchg
fs
imul
mov
cmp
mov
aad
jle
ret
xchg
add
jl
push
cmp
or
push
aad
jno
mov
int3
dec
sbb
lea
call
fs
incl
shlb
movl
insb
nop
inc
add
test
insl
mov
adc
add
sub
jno
push
cmp
sub
mov
test
insb
push
adc
add
and
adc
dec
insl
pop
push
pop
add
ret
popa
dec
xor
andb
mov
rolb
cli
sbb
fs
cmp
jg
add
test
aad
jge
lcall
adcl
inc
sbbb
mov
pop
push
lock
inc
mov
fs
cmp
outsl
clc
lcall
out
mov
rolb
inc
push
cmp
push
sub
cltd
adc
pop
cld
jg
or
js
cmp
sbb
add
pop
in
mov
std
rcll
adc
incb
xor
aam
or
imul
cmpsb
scas
ret
push
push
xchg
add
mov
subl
shrb
scas
add
inc
mov
pop
add
jg
out
mov
scas
push
pop
lea
test
ljmp
mov
ret
xor
sbb
loope
lock
fbstp
inc
ret
add
nop
jp
adc
fcmovnb
or
sub
fdiv
decl
dec
add
ljmp
adc
loopne
mov
cs
dec
and
lret
xor
bswap
sub
pop
cmp
add
sub
cltd
cmp
out
inc
leave
dec
or
int3
add
push
in
cmp
jmp
cmp
or
sub
cmp
mov
test
js
sbb
pop
sbb
adc
mov
xor
icebp
aad
ret
in
ret
mov
aad
rol
pop
add
ret
xor
in
push
in
mov
jnp
bound
arpl
rorl
sbb
sbb
pop
inc
arpl
in
pushl
jle
sbb
sbb
add
loopne
pop
mov
mov
mov
movl
adc
jo
jbe
std
insb
out
mov
add
push
push
mov
add
rorb
mov
in
jo
sahf
in
jl
add
inc
lods
sbb
add
and
xlat
stc
les
add
jle
xchg
mov
cmp
inc
fxch
mov
int3
fistl
pop
int3
mov
aaa
shr
cli
aaa
lods
shl
add
or
hlt
cmp
fsubl
pop
sbb
xor
lods
scas
fiadds
adc
mov
inc
rcl
add
push
fmull
lea
mulb
add
or
jp
add
mov
xchg
inc
call
loope
js
xchg
movsb
and
loopne
adc
scas
jl
hlt
outsb
mov
test
push
out
fwait
and
pushf
dec
mov
sbb
inc
add
jb
arpl
pop
sbbl
sub
loop
shl
dec
cwtl
mov
push
jmp
or
mov
xchg
xor
and
jp
push
sarb
pusha
xchg
ss
sbb
lods
and
fcoml
push
mov
clc
hlt
scas
ja
mov
enter
cmp
ljmp
mov
sbb
push
and
lock
mov
mov
sbb
ds
mov
adc
push
push
outsb
incl
hlt
rolb
ja
pop
jb
movsb
cli
and
cs
pushf
adc
arpl
insl
cld
mov
sbb
jb
mov
add
mov
movsb
jo
mov
les
stc
add
ret
test
mov
nop
sub
push
and
sbb
popa
add
shll
push
xchg
stc
loopne
pusha
sahf
push
xor
add
cmp
fldt
insb
mull
mov
hlt
mov
pop
in
adc
sub
loopne
sbb
add
in
loopne
aad
cs
and
out
pop
fsubs
rolb
jp
jnp
push
add
push
push
call
movsl
add
add
pcmpeqw
lahf
pop
ret
add
push
std
add
cld
mov
xchg
mov
fcmovnb
pusha
and
add
and
mov
add
or
inc
and
add
push
dec
fsubs
cs
mov
pusha
inc
pop
and
jo
js
fisubs
pop
and
sub
push
loopne
push
lea
mov
in
subb
add
enter
push
jp
adc
loop
outsb
test
mov
je
js
fimull
aaa
loopne
scas
lea
sbb
push
jmp
sbb
add
dec
add
jmp
es
ret
and
push
test
repnz
fstpt
enter
sbb
add
repnz
adc
dec
or
mov
add
jmp
dec
push
pop
lcall
cmp
fsubrs
divb
mov
adc
pusha
cmp
xchg
mov
pop
xchg
sub
orb
mov
lods
push
loope
inc
loopne
xchg
decl
mov
jb
add
imul
loop
cmp
sub
stos
add
test
nop
mul
test
loope
je
pop
push
pop
les
and
es
add
loopne
xor
stos
inc
sbb
lods
jecxz
cld
pop
clc
repnz
jbe
mov
mov
inc
std
mov
div
mov
je
or
movzwl
push
or
push
stos
cmp
les
adc
adc
gs
call
cltd
and
pop
fidivrs
or
jge
add
cmp
sub
xor
sub
add
or
andb
inc
shr
add
sbb
jmp
mov
inc
jne
add
mov
sub
jl
push
je
dec
pop
push
jge
dec
mov
xor
aam
jge
es
mov
clc
icebp
je
push
dec
stos
inc
hlt
xor
sbb
mov
insl
loope
adc
or
xchg
stc
mov
push
lea
or
call
or
mov
mov
fistps
or
or
mov
jmp
push
les
sbb
lock
scas
mov
adc
push
jp
inc
pop
jo
adc
icebp
popf
notb
and
add
sub
dec
loop
adc
or
pop
lock
into
dec
xchg
add
pop
jne
icebp
je,pt
adc
sub
sub
mov
rcr
xor
movl
or
je
rcl
cmp
mov
adc
xor
add
adcb
adc
andl
xor
sub
sbb
rclb
icebp
push
clc
lret
xchg
mov
mov
mov
cmp
cld
iret
sub
call
jg
addb
xchg
out
bswap
add
test
je
fdivp
ja
and
jns
sub
mov
insb
inc
shll
loopne
sbb
enter
je
sbb
mov
sub
fwait
inc
xor
repz
pop
mov
lock
or
sti
stos
and
jmp
lock
lcall
or
hlt
sbb
jne
push
std
xor
mov
mov
jbe
fadd
sahf
jo
add
dec
adc
pop
lds
xchg
fs
inc
roll
adc
shrl
jb
dec
int3
adc
fsubs
xor
jg
fwait
inc
cld
add
jnp
jo
or
pop
adc
mov
add
add
loopne
cmp
pop
sub
and
and
push
xor
data16
adc
mov
push
lock
pop
and
jle
sbb
shlb
adc
xchg
pop
imul
aaa
push
mov
scas
rorb
xor
call
mov
inc
mov
adc
loopne
cmpsl
sub
add
ja
sti
xor
pop
dec
shrb
stc
add
mov
rcrb
divb
call
cmp
cmp
xlat
cmp
fs
pop
jno
inc
adc
dec
add
es
adcb
push
call
mov
pop
add
lods
jmp
add
lea
aam
scas
adc
and
adc
mov
mov
orb
sbb
adc
adc
and
mov
pop
jo
jo
pop
jo
lock
out
jge
icebp
sub
add
jle
mov
movsl
inc
add
in
fbld
lock
into
aam
add
push
pop
addb
cwtl
jo
nop
jmp
cmp
lock
pop
inc
push
testl
mov
insb
xchg
jmp
loopne
mov
jle
movsl
shr
jle
and
inc
ret
ljmp
loopne
mov
sbb
lods
jo
mov
xchg
push
push
jmp
add
inc
jne
xor
mov
fisubrl
sub
lods
aaa
addb
and
in
fstl
add
adc
fadds
out
ret
sbb
shll
call
out
or
push
inc
data16
fwait
pop
sbb
test
jo
push
ret
js
sahf
push
mov
ficoml
clc
fisttps
jge
cltd
add
mov
popa
popf
push
ret
add
je
in
es
mov
call
or
or
add
dec
adc
sub
test
ljmp
ss
pop
mov
mov
push
mov
js
jne
jbe
in
sub
mov
dec
xor
pop
adc
xchg
xchg
jbe
mov
add
add
sbb
xchg
mov
jno
mov
adc
lea
les
adc
inc
pop
sub
add
sub
jge
stc
test
or
xchg
inc
push
xchg
inc
fstp
icebp
fistpll
in
and
or
or
mov
call
clc
mov
std
and
adc
decl
xor
das
and
outsb
divb
cmpsb
call
inc
and
lea
or
pop
push
mov
dec
pop
shll
lock
dec
test
das
push
xchg
sar
and
cmp
je
pop
shr
test
sub
add
lock
mov
fstpl
subb
xchg
fcomp
adc
and
push
lret
mov
dec
xor
scas
xor
lock
call
xor
jmp
pop
sbb
inc
mov
hlt
lret
sub
jecxz
inc
pop
sub
cmc
cmp
cli
xchg
pop
lock
sti
jmp
nop
cmpl
mov
aad
loopne
cli
int3
fucomi
push
lock
sub
mov
loop
push
push
outsb
cmp
pop
or
enter
xor
out
xor
sar
pop
repz
add
fdiv
popa
xor
test
add
sbb
enter
adc
lods
push
adc
sub
cs
jecxz
fisttps
inc
shl
or
pop
lods
jp
movsb
orb
orb
push
lods
push
sub
cmp
icebp
xor
push
adc
testl
pop
add
add
mov
fdiv
outsl
fistl
xor
lods
pop
push
test
cmpsl
mov
push
pop
std
add
and
or
mov
lds
sbb
lea
push
push
mov
sahf
rcrl
push
add
movsb
nop
mov
push
push
and
je
cmp
scas
in
cmpsb
dec
fwait
ret
add
je
shrb
movsl
mov
aaa
xchg
xor
xor
mov
jb
icebp
jno
mov
xor
loop
add
push
insl
sub
mov
ret
scas
mov
call
push
shl
or
push
sub
or
lock
stos
sbb
test
lock
cmpsb
and
mov
call
lahf
sbb
outsb
xorl
pusha
pop
mov
cmp
test
filds
cmp
cwtl
add
rorb
lcall
sti
xor
faddl
xchg
pushl
shll
xor
mov
jae
lcall
cmp
inc
pop
sub
or
pop
fistps
lret
je
call
sahf
and
inc
sbb
xor
data16
nop
jmp
mov
ret
aas
call
add
and
and
out
insl
aaa
adc
inc
outsl
cmp
sub
idivb
loop
sbb
fimuls
mov
idivl
add
ds
and
or
mov
jmp
adc
pusha
push
push
inc
test
inc
call
outsl
aaa
test
xor
or
fistl
adc
inc
push
dec
or
and
inc
pop
ret
xchg
add
ret
sahf
in
sarl
lahf
test
insb
dec
inc
sub
data16
mov
movb
es
or
push
and
scas
and
cs
push
ljmp
xchg
ret
pop
inc
loope
xor
pop
push
shlb
cmp
mov
scas
je
fsubrs
das
je
pop
cld
imul
pop
sbb
inc
mov
pop
ss
inc
adc
out
lds
or
mov
or
imul
pop
jecxz
jnp
mov
pushf
out
sbb
or
jb
mov
push
push
mov
inc
add
adc
mov
lods
sbb
out
push
dec
pop
inc
loop
push
cmp
roll
xchg
xor
test
lods
inc
fs
stos
push
sbb
mov
andb
fwait
jmp
push
and
scas
fimuls
jle
add
adc
jb
add
sbb
leave
clc
lcall
fsubrl
pop
cltd
cmp
jae
mov
cld
repnz
pop
imulb
into
dec
imul
and
push
jbe
mov
stc
gs
mov
ret
push
push
call
xchg
mov
lock
or
cmc
or
call
or
add
or
fistpl
pop
repz
push
or
mov
stos
or
or
or
out
loopne
and
fildl
lods
add
cli
divl
xchg
shr
jbe
lock
fbstp
cmp
mov
stos
push
or
int
mov
and
add
cld
sarl
push
push
pop
sub
inc
push
jbe
cmp
ja
jle
cmp
xor
outsl
clc
jbe
mov
inc
in
lds
pop
sti
jmp
xchg
dec
je
mov
stos
aam
pop
arpl
xchg
xchg
adc
dec
ret
cwtl
mov
sbb
sub
mov
push
mov
xor
cmc
sbb
push
xor
sbb
push
dec
sbbl
push
push
pop
sbb
clc
fsubr
inc
fmuls
xor
push
loopne
fiaddl
cmpsb
in
jl
push
dec
loope
pop
iret
xor
mov
cs
out
mov
ret
add
inc
test
pop
fsubl
test
gs
pop
push
outsl
dec
fcoml
push
bound
pop
cmp
iret
popa
popf
push
out
cmp
movl
mov
adc
movsb
add
mov
mov
or
call
jbe
mov
fidivrl
dec
push
mov
add
adc
mov
add
test
xor
xchg
and
and
dec
push
sahf
push
shlb
mov
in
add
mov
and
movsb
dec
jmp
aas
dec
add
pop
data16
or
push
pop
out
ret
popa
mov
mov
out
xchg
or
push
xchg
incb
test
lea
jbe
fsubs
hlt
es
lds
fwait
scas
fcom
inc
fsub
loopne
loopne
sbb
cmp
sub
add
mov
push
sub
rolb
enter
shlb
call
cmpsb
mov
ficomps
sahf
in
in
or
mov
xor
test
shlb
lods
shr
cmp
push
push
pop
adc
cmpsl
adc
sub
jmp
push
xchg
cs
jg
fwait
jle
adc
and
mov
shlb
call
ds
mov
sub
sub
lea
or
or
pop
aas
inc
cld
adc
fucomp
push
xorb
push
es
mov
mov
dec
sbb
out
outsl
pop
cmp
outsl
pop
sti
aas
push
cmovs
mov
sbb
jbe
daa
push
lahf
fstps
inc
cmp
push
fiadds
clc
xor
repz
add
popa
ss
je
lret
pusha
ss
push
mov
lock
sbb
cs
adc
jp
movsl
cld
popa
aas
loopne
shlb
xor
fiadds
add
scas
or
test
xchg
push
xchg
rorb
adc
inc
ljmp
scas
call
adc
push
cmp
adc
mov
push
shl
push
mov
mov
push
mov
push
icebp
jbe
adc
push
push
inc
or
xchg
ja
or
xchg
pusha
fisubl
mov
push
xchg
pop
ret
rclb
cmp
push
or
je
js
test
inc
adc
rolb
pusha
jl
xchg
mov
inc
inc
push
and
in
iret
ja
dec
mov
sub
cwtl
add
decb
or
push
push
push
data16
je
lea
scas
dec
inc
outsb
mov
or
mov
push
outsb
movsb
out
adc
scas
xchg
lods
jp
pop
popf
adc
or
xchg
divb
sub
decl
or
je
jl
or
cmpsl
lret
cmc
incb
mov
sahf
xor
mov
cmp
xchg
call
fwait
mov
or
jne
add
pop
rclb
shlb
mov
loope
mov
push
push
cmp
cmovl
pop
push
dec
mov
call
sbb
stc
push
call
add
dec
adc
icebp
inc
pop
out
or
ds
les
cmp
jbe
mov
mov
adc
inc
cmp
out
jo
cmp
sbb
dec
mov
adc
push
jbe
push
push
sti
mov
js
or
pop
fsubs
or
out
jae
jne,pn
pop
jl
dec
pop
movsl
out
mov
mov
jbe
cwtl
inc
mov
ljmp
jb
pop
mov
je
dec
fadd
xchg
jbe
pop
lret
outsb
pop
cmp
sub
je
ret
jp
pusha
mov
jb
inc
scas
call
out
xor
push
push
pop
shlb
js
push
dec
incl
push
or
push
add
inc
inc
mov
inc
sbb
sub
jl
inc
jb
push
pop
je
add
xchg
mov
mov
pushf
adc
or
cmp
jb
cmp
jbe
scas
clc
inc
mov
je
addb
data16
leave
mov
jmp
push
enter
lret
and
xor
jae
mov
and
aaa
flds
notb
mov
test
scas
movzwl
push
mov
push
adc
stos
mov
scas
enter
out
shl
insl
es
add
adc
sarl
add
and
jl
mov
cwtl
notb
cwtl
cli
sbb
andl
and
movsb
mov
hlt
data16
pop
push
pop
pop
mov
or
iret
mov
or
adc
sbb
dec
in
cmp
jne
add
pushl
pop
jmp
jne
mov
mov
imul
sub
add
outsb
ss
movsl
and
in
inc
mov
adc
sbb
outsb
jp
ret
adc
mov
inc
mulb
add
or
xchg
jns,pn
call
adc
xor
or
mov
push
fcomps
cmp
xor
or
fcoml
adc
orb
xchg
cmp
and
fs
or
ja
cmp
pop
rcll
ss
push
cmc
mov
adc
movsl
lods
in
xchg
hlt
mov
jg
pop
cmp
les
jge
xchg
clc
mov
jne
ss
jl
dec
mov
push
dec
call
add
cmpl
jg
hlt
add
cld
cld
inc
jmp
jl
loopne
in
push
xchg
cld
xor
adc
scas
push
in
pop
pop
insb
call
inc
and
sub
sub
ss
flds
mov
lret
les
sbb
in
jecxz
mov
jmp
push
aam
loopne
subb
shlb
outsb
add
add
dec
clc
inc
lock
incl
cmpb
testb
ss
test
add
clc
aas
loope
or
or
fucomi
push
jne
rcrb
push
decl
xor
aaa
ja
push
test
add
divb
shlb
cmp
inc
sahf
loopne
pop
add
push
aam
push
fdivl
adc
push
push
andl
pop
sub
jmp
sahf
mov
xchg
ja
xor
dec
aam
sbb
outsb
or
dec
rolb
rolb
pop
es
in
sahf
xchg
enter
faddl
out
movsb
addl
es
dec
daa
mov
outsb
int
lods
xor
aad
jo
pop
rorb
dec
sbb
push
aam
adc
icebp
aaa
add
loopne
add
add
adc
dec
push
pusha
cs
je
push
lea
ficoml
push
aam
push
es
in
push
dec
push
fwait
mov
scas
mov
cmp
je
std
jnp
pop
jbe
jle
inc
shrb
pop
sub
lods
sahf
or
data16
mov
or
add
mov
sbb
adc
test
shr
mov
ss
push
test
push
in
loopne
lea
mov
xorb
mov
shrl
dec
push
pop
aam
cld
incb
adc
fcoml
add
sbb
or
adc
push
and
out
mov
xor
and
pop
mov
mov
fadds
fsubs
xor
lds
mov
ss
mov
adc
es
mov
cmpsb
pop
mov
orb
sub
pushf
std
xlat
inc
adc
les
out
lock
or
sub
mov
push
add
pusha
clc
mul
ljmp
add
pop
ja
push
jle
mov
inc
jmp
or
or
dec
jne
mov
addb
scas
or
mov
mov
cmp
ss
call
cmp
mov
mov
fwait
out
std
ja
call
mov
pusha
mov
lret
addl
mov
jl
rclb
cmp
je
jbe
push
jnp
call
ror
mov
test
push
jl
lods
adc
sub
push
push
mov
aad
pop
sub
push
jmp
cmpsl
or
aam
adc
adc
xchg
leave
icebp
jno
mov
roll
daa
inc
or
data16
push
cmpsb
popf
inc
pop
pop
mov
push
insl
xchg
in
pop
lock
xchg
fdivrs
movsb
stos
mov
pop
dec
mov
adc
and
pop
insl
jle
mov
cwtl
adcb
icebp
mov
stc
mov
test
hlt
outsb
push
xor
sub
cwtl
divl
inc
ss
into
divb
lods
push
jmp
test
call
aam
cmc
int
cmp
stos
hlt
sub
pushf
call
mov
es
repnz
je
in
xor
nop
stos
in
gs
push
push
jecxz
dec
std
cmpsb
add
add
insb
fiadds
add
ds
rcll
cs
jne
outsb
ficoml
aam
enter
incb
push
mov
lods
lods
enter
dec
aas
lods
lea
cld
dec
enter
add
push
aad
push
fcomi
addb
lods
cld
cld
push
daa
xchg
loopne
xorb
jecxz
adc
test
mov
adcb
push
data16
rcrb
push
scas
cltd
mov
outsb
fadds
nop
inc
scas
clc
decb
clc
and
jno
iret
and
cld
cmp
mov
sar
aas
cmp
add
add
adc
sub
push
mov
sub
mov
cmc
inc
scas
pop
add
adc
test
addl
ds
adc
lods
int3
sub
add
dec
dec
mov
pop
or
mov
aaa
push
es
jmp
sub
mov
ljmp
xor
mov
adc
test
data16
xor
mov
cmp
mov
dec
test
sub
mov
push
jecxz
call
dec
dec
repz
adc
push
jl
push
lods
stos
cmp
call
cmp
mov
stos
ljmp
jp
pop
push
inc
loope
call
push
push
aaa
cld
insl
nop
fdivl
inc
call
xor
and
fdivl
inc
lods
inc
mov
jne
sbb
push
or
cmp
rolb
fisubl
jg
adc
inc
das
in
cmp
es
dec
mov
or
jne
adc
push
scas
jg
ljmp
stc
xchg
roll
call
push
out
pop
andb
std
ljmp
das
xor
or
mov
mov
mov
or
ja
mov
sbb
mov
xchg
mov
push
xchg
add
into
inc
mov
fdivrs
fsubs
lcall
fmuls
nop
push
popf
andl
pop
xor
jge
mov
cmc
inc
imul
add
adc
cmp
shlb
lock
jne
cmp
adc
adc
in
stos
jmp
sbb
sbbb
loope
mov
push
push
mov
adc
pop
mov
sahf
cmp
xchg
cmp
dec
sbbb
pop
jge
cmp
jne
push
cld
je
pop
out
jge
lret
inc
popa
push
sbb
or
dec
sbb
in
pop
mov
cltd
pop
dec
push
incl
movsl
orl
mov
jo
pop
repnz
mov
push
in
xchg
test
in
stos
scas
inc
addl
fdivs
pop
inc
stos
dec
call
push
loope
fwait
push
shl
loop
sub
jo
sub
push
inc
sbb
jbe
clc
scas
push
scas
push
add
lret
jmp
or
cld
sbb
inc
push
nop
call
xlat
orl
jmp
sbb
adc
jb
push
test
lret
xchg
inc
cmp
cmp
ret
mov
sarl
addl
cld
jl
add
shlb
sbb
fs
pop
or
int3
push
rclb
sub
xor
cmc
inc
push
je
mov
adc
data16
out
cltd
pop
pushw
adc
or
inc
mov
jbe
adc
xchg
inc
push
adc
sub
push
loope
shlb
pop
mov
movsl
jne
ret
cs
fcmovb
or
stos
test
fdivrp
hlt
dec
enter
sub
mov
push
pop
call
xor
insl
fisubs
add
and
xchg
enter
cs
mov
sub
ror
adc
lods
inc
inc
xorl
iret
adc
mov
loope
subb
mov
fmull
stos
dec
sbb
ret
aaa
ret
pop
in
cmp
push
fcoms
push
out
push
orb
stos
ja
je
jg
call
ljmp
add
mov
inc
cmpsl
jmp
pop
add
sti
adc
cmp
mov
hlt
push
hlt
mov
mov
je
and
sbb
push
decb
shr
ja
das
jl
jl
ja
push
add
jl
add
in
repnz
jb
push
pop
gs
ret
and
xchg
call
rcrl
jle
push
mov
or
push
call
in
dec
bswap
dec
or
lock
and
lea
xor
orl
outsl
test
mov
add
int3
fstpt
pop
jmp
and
pop
int3
push
mov
loop
xor
fucom
mov
jle
mov
jb
mov
cld
jg
add
xchg
sub
bnd
jne
mov
fisttpll
repnz
call
mov
sub
mov
inc
xor
add
push
jae
mov
mov
ja
lret
popa
inc
imul
aas
sar
xor
sub
sbbl
push
add
adcl
xor
divb
dec
mov
cmp
add
and
fmulp
data16
jp
sti
push
add
sbb
fsubrl
in
mov
and
enter
subps
push
pop
lock
rclb
inc
or
push
push
aaa
sub
or
inc
cmp
stos
lock
xor
cmp
mov
orl
fdiv
push
pop
cltd
pop
jae
xchg
adc
push
mov
push
jne
lock
data16
inc
push
xor
or
push
into
mov
jb
xor
fs
or
rorl
lods
mov
clc
push
movb
pop
adc
mov
ljmp
stc
add
mov
mov
sbb
pusha
cld
enter
push
cs
jae
mov
aam
add
jne
add
cld
imul
push
jb
shlb
pusha
dec
cld
add
repz
push
test
outsl
dec
mov
enter
sar
cmp
push
cld
jecxz
mov
push
and
je
xchg
test
les
jne
cmp
and
jle
lret
mov
jmp
leave
rcr
jne
enter
ljmp
cmpb
mov
je
adc
es
clc
lsl
mov
xchg
cmpsl
jns
adc
shr
idiv
je
mov
aas
call
dec
push
or
push
cmp
mov
jb
add
inc
inc
popa
adc
outsb
stos
or
lea
fcoml
xchg
test
lock
mov
mov
push
loopne
ds
jbe
stos
cmp
out
mul
sarw
lock
sbb
lcall
jl
add
xchg
push
fdiv
pop
lods
push
mov
test
insl
jp
push
into
inc
mov
cmp
dec
push
push
pop
xorb
data16
test
test
lds
cli
push
imul
into
mov
or
push
push
push
faddp
xor
push
sub
sub
add
mov
mov
xchg
add
fcomps
fcomps
in
int3
jmp
test
xor
push
psubsw
test
mov
cmp
repz
pusha
or
mov
sarl
sar
push
call
es
outsl
fs
mov
pop
lea
xor
or
fcoms
or
js
cli
add
jg
lcall
icebp
pushl
leave
jmp
shr
ds
je
test
xchg
add
outsb
ss
or
shr
or
mov
jge
rcl
fwait
rclb
mov
dec
mov
xchg
loopne,pn
imul
push
xchg
clc
jbe
mov
js
aad
xchg
push
cmc
push
inc
decb
push
scas
std
cmpsl
push
dec
pushf
sub
cmp
push
and
xor
subb
scas
push
call
es
mov
lock
mov
xchg
push
push
dec
push
data16
lcall
inc
repz
je
and
outsb
icebp
fstpt
pop
or
inc
lea
ja
push
inc
and
inc
and
cltd
adc
pushw
push
xchg
shlb
or
test
push
inc
push
inc
jne
cmp
imul
sbbl
dec
outsb
push
push
ret
pop
or
and
xchg
or
lock
sub
sbb
stos
pop
aam
push
sub
clc
pop
clc
cld
cmp
les
hlt
pop
mov
adc
xor
scas
daa
sub
mov
inc
sub
inc
or
mov
pop
add
call
push
push
add
ss
dec
inc
sti
push
outsl
add
stos
adc
fdivrs
aas
lods
xor
ds
push
call
sub
hlt
add
nop
add
sbb
das
aaa
sti
and
call
add
pop
jecxz
lcall
push
stc
mov
and
jmp
into
jle
sbb
test
loop
or
loopne
pop
cld
adc
mov
inc
ss
pop
js
mov
es
mov
inc
js
mov
mov
call
or
adc
push
push
push
arpl
das
ret
lret
jl
cwtl
ja
ljmp
push
cmp
pop
push
jb
enter
loope
add
int
and
fidivs
dec
inc
xor
jb
jmp
call
sbb
lods
in
call
dec
fs
mov
insb
cwtl
mov
and
std
subl
into
data16
in
mov
pop
mov
call
inc
push
mov
mov
enter
adc
hlt
or
mov
mov
pop
and
nop
das
iret
loopne
jl
fisttpll
shl
cmpsb
hlt
lret
push
lahf
jo
xor
cmp
push
adc
adc
xor
cmp
push
adc
fisubs
or
xchg
pop
mov
push
pusha
xor
push
lods
sbb
pusha
xlat
cmp
daa
hlt
stc
das
shlb
je
test
add
aaa
jo
fiaddl
mov
mov
cmp
call
popf
movsb
adc
push
outsl
pop
loope
mov
in
adc
or
fcomps
loopne,pt
or
xchg
les
sbb
dec
dec
or
js
in
sbb
and
inc
sahf
mov
mov
lds
inc
and
scas
out
adc
ss
std
imulb
inc
mov
out
lea
push
mov
int
bnd
ds
cmpsb
xchg
cs
jmp
push
pushf
call
mov
adc
test
and
lahf
ret
test
mov
sub
and
mov
sub
dec
xor
xchg
hlt
add
ret
mov
loop
popa
cmp
sbb
xchg
fprem1
xchg
xor
cld
push
lret
in
lret
clc
inc
insb
adc
adc
maskmovq
mull
add
je
push
adc
xor
loopne
mov
mov
mov
decl
jl
mov
mov
cmpw
mov
add
cltd
or
jbe
or
xor
pushf
xchg
lahf
scas
mulb
test
sbb
cld
push
add
popf
adc
jne
dec
xor
andb
jne
jl
or
xchg
divb
lea
and
and
mulb
push
mov
loope
sbb
jp
sub
nop
aam
ret
adc
jmp
sbb
add
daa
xor
js
stos
mov
shll
lahf
sbb
dec
out
pop
dec
pop
or
cs
mov
fnsave
adc
dec
xchg
mov
mov
jp
mov
rcrl
inc
mov
sbbl
pusha
add
cmp
mov
adc
out
or
mov
mov
mov
or
sub
pop
sub
sbb
cmp
pop
mov
mov
sub
loop
into
jmp
xchg
movsb
scas
or
dec
dec
push
jae
jmp
fwait
add
xor
add
inc
aad
jno
push
or
repz
sub
subb
inc
push
cltd
cmp
mov
les
test
je
inc
add
inc
movb
dec
lock
and
jg
add
xor
cmc
lods
adc
cmp
jl
std
pop
dec
jl
push
cmpl
jmp
int3
leave
and
movzbl
fildll
or
mov
sar
and
leave
pop
xor
or
lock
mov
cmc
mov
mov
dec
or
dec
pcmpgtb
fildl
cmp
and
xor
ss
xor
inc
inc
inc
hlt
lock
or
or
adc
sbb
out
push
pop
xor
cli
pop
xchg
add
cmpsb
cs
push
adc
push
push
xor
pop
sbb
push
adc
rorb
sbb
lret
add
pop
jecxz
sbb
loopne
jne
cli
xchg
adc
rolb
xchg
dec
mov
out
jge
cli
lds
enter
aaa
adc
or
loope,pt
adc
ja
push
jmp
mov
jb
jb
ret
das
pop
add
or
iret
push
adc
shl
cmpb
fsubs
ds
insl
adc
mov
sbb
aas
pop
mov
jne
push
fdiv
inc
sbb
mov
in
xchg
and
sbb
dec
imul
shrl
sbb
adc
mull
lahf
add
jp
rcll
test
mov
xchg
jmp
adc
jb
das
pop
rcl
daa
dec
xor
dec
add
sbb
sub
xchg
shl
or
sarl
rcll
add
movsl
sbb
inc
dec
cltd
jbe
mov
lock
clc
ds
lea
std
lock
or
or
leave
mov
test
cltd
cmpsl
popa
sbb
xor
push
mov
add
push
je
mov
ds
pop
and
or
jns
shl
incl
mov
jns
jne
pushf
pop
or
jne
mov
pop
movsl
sub
or
les
jb
push
out
dec
jmp
scas
je
dec
mov
and
hlt
into
pop
add
sahf
out
jp
xchg
push
mov
pop
sub
lret
jne
jl
sbb
push
jbe
mov
xchg
nop
ret
xor
xchg
into
adc
loope
xor
sbb
mov
xchg
fnstenv
and
dec
lahf
mov
xor
push
push
icebp
mov
mov
dec
sub
push
or
adc
push
idivb
and
push
mov
cmpsb
out
jp
mov
das
ret
lea
and
push
inc
mov
pop
add
sar
mov
jmp
adc
jmp
push
call
pop
pop
idivl
imul
in
call
pop
or
pop
jae
out
aad
mov
je
mov
and
push
cmp
add
pop
adc
cmp
mov
inc
mov
xor
xor
incl
pop
lods
dec
adc
rcl
xlat
rclb
push
xor
xorl
mov
inc
bnd
or
jae
push
cmpsl
xchg
push
test
cld
in
push
je
inc
divl
addl
je
jl
or
mov
cmpb
jne
xor
add
outsb
inc
cmp
fwait
out
inc
bound
ss
adc
pusha
fwait
in
or
cmp
fsubs
sbbl
sahf
adc
dec
or
popa
xchg
pop
xchg
cmp
inc
adc
inc
push
mov
rcrb
adc
add
adc
nop
bnd
std
sub
daa
data16
cld
jae
cmpl
test
daa
and
and
jg
push
add
xor
pop
shll
and
adc
lods
sbb
out
hlt
push
test
add
add
std
xchg
sub
sbb
push
test
cmpb
inc
add
or
or
xchg
jecxz
fistpl
mov
adc
jmp
das
sub
test
aad
mov
dec
pop
leave
clc
adc
pop
lcall
cwtl
stos
pop
mov
jmp
adc
mov
push
pushl
hlt
mov
add
icebp
call
mov
lea
lods
mov
inc
mov
rcrl
aam
or
je
or
cmp
add
pushf
das
imul
push
inc
shrb
mov
push
adc
sub
dec
sbb
mov
inc
xchg
or
cmc
mov
mov
pop
xor
mov
hlt
enter
shlb
mov
lahf
je
adc
mov
ljmp
mov
mov
loopne
pop
push
mov
add
sub
in
jl
or
push
xor
or
sbb
shl
pop
and
cs
fcomps
sbb
stos
xchg
push
mov
daa
jle
ja
sbb
jb
mov
xchg
mov
daa
ja
push
lea
les
mov
call
push
pop
push
jp
hlt
or
adc
loopne
icebp
add
popf
or
pop
and
jne
adc
adc
shrl
call
sub
movb
mov
or
ljmp
incb
xchg
sub
mov
push
popf
lea
sub
fbld
xorl
or
fbstp
sub
dec
je
mov
dec
push
ss
aaa
pop
jbe
out
xchg
push
push
push
pusha
mov
test
pop
sbb
add
add
or
cwtl
test
push
int3
test
imul
shr
int3
scas
call
sub
add
sbb
mov
xchg
adc
int
inc
loopne
push
hlt
imull
mov
in
sti
jb
or
stos
push
or
scas
or
jbe
mov
das
test
pop
push
jle
std
scas
xor
pop
mov
fidivs
push
pop
je
rcll
loopne
inc
mov
inc
sti
mov
or
jecxz
inc
dec
mov
xor
out
mov
ret
jno
or
imul
pop
jne
test
test
mov
add
repnz
cmp
inc
mov
pop
jle
cmp
add
jecxz
movsl
and
fmuls
push
orl
call
xor
push
mov
pop
mov
push
data16
in
icebp
lds
jae
vmwrite
xor
dec
mov
push
xchg
push
mov
mov
lahf
data16
sub
sbb
inc
loopne
mov
pop
jo
mov
xor
fimull
mov
cmovs
pop
jne
aam
std
out
lea
adc
push
inc
add
inc
lcall
leave
push
insl
mov
adc
push
adc
iret
push
adcb
xor
sub
cmp
das
and
roll
jmp
sub
fdivrp
pop
push
or
cmp
dec
inc
add
nop
rcrl
call
rcrl
dec
jae
jle
call
jnp
sbb
inc
loop
icebp
cmp
insl
clc
ljmp
subb
repz
icebp
dec
mov
add
lock
add
add
adc
mov
or
jbe
sub
out
movl
sub
sbb
cmp
insb
out
or
push
hlt
mov
loope
pop
cmp
xchg
inc
hlt
and
movsb
imul
out
xor
or
sbb
cld
shll
popa
cmp
fldcw
cmp
xorl
testb
stos
cld
inc
mov
js
pop
ret
pop
mov
mov
dec
sub
mov
mov
shll
je
adc
and
idivb
xchg
push
inc
cli
push
and
xchg
adc
mov
adc
sbb
loope
movsl
ja
pop
or
cmp
mov
inc
add
push
jb
jmp
mov
lahf
out
call
or
ret
es
xchg
xchg
movsl
pop
test
adcb
sar
mov
adc
call
test
adc
xchg
dec
dec
outsb
dec
push
das
ljmp
test
insb
ret
nop
inc
lcall
sbb
jbe
mov
cmp
jmp
test
jo
call
leave
mov
inc
push
xor
lret
jo
shrl
jle
dec
rolb
inc
add
cmc
push
add
mov
call
push
insb
das
push
push
adc
sub
mov
and
push
mov
xor
mov
or
pop
stos
pop
add
inc
and
sub
adc
lea
ss
push
sbbl
fs
test
sub
xchg
adc
or
push
mov
pop
cs
pop
xor
clc
lea
push
lock
loop
mov
decb
call
add
dec
or
outsb
dec
jne
js
rcrb
stos
inc
loop
add
orl
sbb
xor
pop
adc
dec
cmp
jb
lret
jle
adc
decl
add
idivb
rcl
cli
stc
aaa
lea
pop
aam
adc
sahf
pop
call
pop
inc
jecxz
inc
xchg
andb
sbbb
jle
add
push
dec
pop
mov
cmp
sti
mov
mov
xchg
je
ja
pop
adc
and
add
addb
js
push
sbb
and
decl
iret
xchg
mov
xchg
mov
xor
xchg
lcall
in
jp
adc
in
and
mov
mov
add
jl
add
hlt
mov
movb
add
mov
scas
cld
mov
in
sbb
cmp
je
scas
or
jmp
sbb
das
mov
sbb
call
or
and
rolb
icebp
inc
fidivrl
shll
xchg
stos
pop
pop
ror
loope
push
cmp
xchg
sbb
fmuls
or
outsb
or
cwtl
shlb
push
adc
cmp
or
mov
push
dec
xlat
mov
rolb
xor
sub
fmulp
cmpxchg
xlat
cmp
adc
xchg
jmp
mov
loope
jne
hlt
stos
or
fisubl
sbb
or
adc
xchg
or
jle
sbb
lea
fadd
push
outsb
sbb
add
push
sub
xchg
ss
gs
mov
mov
mov
sbb
push
or
loopne
fcomps
je
mov
cmp
push
int
add
jb
data16
ja
cmpsb
jb
add
mov
push
stc
jl
les
ljmp
call
inc
pop
pop
xchg
das
jge
aaa
into
lods
jp
aas
mov
imul
cld
adc
cmpb
jge
pop
push
push
call
hlt
inc
bound
mov
jle
xchg
mov
mov
add
and
adc
outsl
je
pop
sbb
std
jl
add
andb
sbbb
fnstsw
pop
in
lock
je
lock
roll
mov
cmc
addr16
ss
pop
repz
add
test
sub
or
mov
mov
add
mov
push
fs
stc
pop
test
push
int3
fs
outsl
aam
dec
add
enter
push
addl
mov
xchg
idivb
add
push
push
jb
shr
js
push
xchg
int3
dec
or
adc
mov
dec
ret
orl
adc
cld
clc
ds
add
adc
sbbl
outsb
outsb
popa
jle
cld
xor
xor
clc
add
cmpb
add
xlat
xchg
ret
dec
push
lea
adc
das
cmp
push
add
jmp
sar
cmp
jle
loopne
mov
add
xchg
lea
xchg
xchg
sti
add
sbb
mov
cli
bound
push
xchg
cmp
add
add
mov
xchg
xchg
scas
loop
xchg
xor
push
insl
hlt
jmp
xchg
test
and
mov
sub
addl
hlt
and
jmp
mov
mov
scas
inc
lds
sbb
or
lock
imul
das
and
adc
roll
add
sti
cmp
jle
adc
mov
inc
jb
clc
flds
lods
out
xchg
hlt
inc
out
cli
sbb
mov
cmp
lock
adc
aad
dec
cmp
divl
ss
pop
jg
jo
sub
add
je
bound
int3
or
insb
ret
mov
mov
ljmp
add
je
push
inc
mov
sarb
mov
jge
addb
push
test
adc
clc
or
and
mov
lea
push
dec
test
push
mov
xor
cmc
push
rorb
es
push
xchg
leave
bound
push
daa
je
inc
cld
mov
xlat
test
rorl
rorb
bound
lret
push
sbb
sub
add
test
lock
cmp
xor
pop
popf
add
into
call
and
add
and
mov
push
rclb
mov
pop
cwtl
jne
xor
inc
add
and
ds
and
mov
ret
int
jae
mov
mov
jb
sar
xchg
sbb
xlat
add
lock
sub
jo
data16
fadds
test
adc
xor
rcr
outsb
test
add
pop
jbe
cmp
dec
xchg
cwtl
clc
jecxz
pop
cmp
outsl
std
pop
les
enter
and
xchg
adc
sbb
pop
or
sub
rolb
mov
push
mov
bound
fidivl
test
jmp
stos
jmp
je
mov
ljmp
cmp
cltd
push
les
sbb
sub
ja
pop
mov
stos
sahf
jno
push
adcb
add
cmp
or
popa
jnp
push
cmp
cltd
incl
or
adc
jo
and
mov
rolb
inc
fcomps
lcall
jbe
fdivrl
cld
mov
and
lahf
xchg
inc
pop
ret
in
dec
loop
adc
inc
rorb
push
push
inc
add
fisubs
mov
sub
icebp
pusha
sbb
jle
cmpsb
repz
out
cwtl
adc
mov
or
je
mov
mov
cmpsl
dec
xchg
aas
cmp
mov
js
orb
or
or
loope
and
mov
push
jb
add
loopne
push
ss
pop
pop
les
bound
adc
add
loopne
loopne
test
jp
add
pusha
sub
push
mov
sub
call
pushf
push
fbld
adc
mov
and
cmc
ja
test
and
sbbb
das
cmp
jg
addl
call
jmp
pusha
cmp
jbe
inc
popa
mov
inc
mov
ret
nop
pop
and
or
sti
dec
out
cmp
and
jmp
divb
dec
inc
add
das
call
loop
loopne
mov
fldt
icebp
jg
add
adc
pop
or
sbb
inc
es
pop
nop
outsb
subb
add
and
decl
mov
xor
adc
inc
lds
enter
call
aaa
and
pop
mov
repz
ljmp
pop
data16
push
jmp
push
pop
xchg
movsb
out
push
je
xor
mov
scas
call
xchg
cltd
and
cwtl
xor
adc
in
or
add
add
mov
cltd
add
mov
les
adc
add
jecxz
add
rolb
or
add
clc
mov
in
loopne
inc
cmpl
lods
loopne
test
stos
inc
cwtl
arpl
adc
or
test
in
inc
mov
mov
pop
pop
add
add
ret
stos
outsb
jb
push
test
or
pop
push
loopne
call
xor
and
lods
mov
pop
addb
fldl
pop
pusha
xor
repz
push
scas
mov
and
js
inc
loopne
icebp
add
jmp
rorb
pop
and
loop
xchg
cld
incl
ljmp
rorb
mov
push
orl
or
sub
push
pop
or
inc
pop
jecxz
repnz
stos
addl
mov
jl
frstor
mov
pop
cmc
inc
jecxz
andl
aaa
sbb
and
add
cld
xor
scas
push
icebp
jecxz
pop
mov
adc
les
mov
aam
add
sahf
subl
in
outsl
or
add
lock
mov
sarl
pusha
adc
pop
mov
xchg
pop
js
jb
dec
jp
pop
mov
roll
add
jne
ret
xchg
xchg
stos
into
je
popa
dec
ret
aaa
push
or
mov
les
addl
rorb
sbb
incl
pop
pavgw
fildl
or
popa
out
xor
jle
mov
xor
add
in
push
mov
sarb
ljmp
push
or
repnz
aad
imul
cmp
incl
stos
loop
xchg
or
rcrb
sarb
add
cmp
sbb
push
xor
mov
loopne
adc
cmpsb
lahf
dec
in
add
jb
mov
add
and
pop
jne
jg
lea
or
add
cwtl
mov
push
lock
mov
cli
call
pop
sbb
movb
lock
aaa
outsb
incl
or
mov
lea
es
das
mov
call
mov
push
movb
push
pushf
or
in
inc
outsl
movsb
xor
les
jne
add
adc
lods
sbb
mov
add
push
in
pusha
push
or
jg
repnz
or
push
call
push
mov
push
incl
lds
xor
jl
addl
jno
call
xchg
repz
lea
inc
mulb
dec
mov
push
mov
mov
out
pop
or
or
sbb
mov
jl
or
fsub
cld
push
cmp
jmp
or
pushf
ja
insl
aam
xlat
dec
movsb
pop
call
hlt
adc
cld
lods
icebp
add
sbb
inc
std
xchg
sub
xchg
mov
mov
add
add
outsb
shrb
test
sub
adcl
add
data16
sti
ja
fcoml
fiaddl
mov
jmp
lods
dec
data16
call
or
mov
ljmp
mov
or
cmp
insl
xchg
push
lods
nop
xor
ret
push
push
lock
ljmp
scas
shlb
nop
mov
sbb
loope
mov
fdivr
add
adc
jmp
xor
das
pusha
push
lahf
repnz
and
add
inc
outsl
jl
incb
push
pop
shl
mov
mov
and
adc
data16
and
int
jne
jne
mov
pop
ret
push
sbb
add
or
outsb
jne
add
xchg
repz
cmp
adc
icebp
add
jbe
sbb
pop
js
mov
loopne
add
dec
icebp
pop
mov
add
je
je
cmp
mov
dec
lds
faddl
movsl
mov
aam
jg
movsl
jg
mov
jge
ret
clc
lock
pop
add
inc
lock
sbb
pushl
icebp
sbb
test
sbb
inc
into
decl
sbb
or
or
add
xor
inc
inc
lds
mov
mov
push
loopne
ja
les
sbb
pop
mov
test
test
jle
xor
lcall
jo
push
mov
aaa
add
adcb
add
jo
inc
mov
sar
jl
sub
ret
xor
out
push
push
clc
js
mov
sbb
je
sub
adc
fs
fbld
and
cmp
jbe
jo
testl
and
mov
incb
fdivrl
jb
lock
add
adc
sub
shlb
imul
add
xchg
in
push
sbb
sbb
and
mov
notl
cmpsb
cmp
sbb
adc
mov
mov
xor
or
inc
out
jg
inc
lock
add
sbb
jl,pt
xchg
or
sub
cwtl
lea
mov
add
jne
jp
push
loopne
jmp
mov
cmpb
fs
cli
cmpb
cmp
add
ljmp
add
cmp
jne
push
loop
nop
sbb
add
push
add
fwait
xchg
cmp
jb
push
jne
popa
xchg
jo
push
je
sub
cmc
or
andb
adc
xor
xchg
je
xchg
or
rorb
adc
add
xchg
adc
xor
cld
push
push
aam
push
je
pop
or
sub
inc
loopne
inc
dec
and
push
aaa
in
and
mov
adc
cmpsl
mov
call
lock
pushf
adc
sbb
and
subb
sbb
test
pop
sub
scas
and
aad
jo
cmovs
mov
or
and
adc
jb
mov
jg
pusha
mov
cmpb
cmp
in
add
add
mov
add
add
jne
push
orl
cmp
pop
lock
adc
divb
orb
pop
and
or
out
adc
fwait
rolb
cmpsb
inc
clc
outsl
jp
xchg
jbe
sub
inc
jo
push
divb
je
fidivs
xor
add
add
je
sar
popf
sbb
cwtl
add
pop
ret
cwtl
cmc
push
add
int3
mov
movsb
cld
lret
xchg
cli
or
ss
repnz
clc
repnz
je
add
xor
sub
xchg
sbb
and
jmp
jo
je
add
sbb
cli
lds
jns
jmp
hlt
or
push
insb
and
xor
mov
out
xchg
inc
jbe
mov
mul
mov
xor
push
mov
push
ljmp
or
stc
or
jo
stos
data16
pusha
and
mov
jmp
fidivl
dec
jecxz
cmpsb
xor
pop
add
xor
push
cli
dec
lret
push
mov
pop
lret
and
adc
or
lds
and
or
rolb
push
adc
jnp
mov
inc
iret
dec
jb
xor
call
mov
lock
inc
cltd
shlb
lea
sbb
add
les
or
outsl
loop
lock
mov
insb
push
adc
bnd
in
mov
enter
and
pusha
pop
and
mov
stc
test
cmp
hlt
add
int3
jp
loopne
mov
jmp
jne
mov
outsl
jne
lea
jmp
mov
add
add
out
clc
cmp
mov
inc
xor
add
test
iret
add
push
mov
add
xor
pop
xor
inc
push
push
shll
add
push
or
shll
popf
fsubrs
push
repz
test
cs
aas
mov
jle
mov
loopne
repz
lret
inc
inc
inc
mov
xor
lods
int3
leave
xchg
div
lahf
rorl
aas
pop
xor
mov
shll
xor
movsb
push
repnz
push
adc
repnz
popa
mov
and
mov
push
rorb
inc
insl
xor
mov
jmp
mov
dec
push
mov
addr16
rolb
mov
sub
push
or
cwtl
into
sub
xor
loope
lock
lret
cmp
mov
jmp
push
scas
xor
adc
add
pop
or
add
lods
adcb
sub
and
jo
sbb
sbb
mov
sbb
dec
jo
add
js
enter
sub
push
sbb
sub
divpd
pushf
sub
mov
push
dec
or
xchg
cli
cmp
xor
jle
repnz
mov
jnp
adc
or
insb
testl
mov
test
cltd
fwait
or
add
dec
cs
inc
movb
aas
mov
loopne
pop
xor
xchg
inc
test
add
xor
push
or
rclb
in
pop
pop
nop
shlb
jp
cltd
push
iret
adc
es
cmp
inc
jl
add
repz
push
lods
mov
addb
mov
mov
int3
fmuls
add
jle
data16
inc
les
mov
dec
and
notb
add
sub
mov
pop
call
sahf
add
aam
mov
je
pop
adc
adc
mov
in
repnz
inc
mov
fidivrs
lea
call
lods
pop
cmc
pop
ss
inc
or
rol
in
push
push
call
aam
xor
outsb
call
cmp
int3
testb
cmp
mull
out
movsb
xor
sub
xor
xor
jl,pn
mov
push
jl
or
xchg
or
adc
inc
call
enter
call
mov
scas
jb
sbb
adcb
hlt
cmp
or
daa
pop
es
mov
push
hlt
add
fmuls
cmp
mov
enter
adc
inc
and
sub
testb
pop
je
xchg
sub
pop
les
add
scas
pop
aaa
and
inc
inc
fildll
loopne
aam
ret
faddl
or
std
ret
or
or
jb
lcall
test
scas
add
mov
cmp
add
jne
mov
lret
lock
xor
testb
sbb
test
nop
pop
mov
shr
adc
stos
adc
add
shlb
inc
pop
lods
sub
lea
push
fisttps
adcl
adc
mov
in
xchg
add
cmp
adc
addb
add
insb
push
mov
out
mov
mov
test
lcall
or
add
sbb
cmp
jne
cmp
mov
jo
sbb
add
test
pop
mov
call
ss
mov
adc
je
sbb
stos
ja
pop
inc
adc
je
notb
jb
mov
addb
ja
jg
and
ja
add
push
mov
push
push
insb
cmpsl
push
hlt
pushf
mov
daa
push
or
es
sbb
inc
cmp
mov
cmp
je
in
sbb
je
js
loope
addb
cli
or
and
mov
jne
dec
or
pop
cmp
inc
cmpsl
shrb
mov
mov
inc
or
jp
ss
cs
mov
dec
inc
inc
pop
dec
sti
mov
push
add
aaa
jl
loopne
mov
pop
shrd
jb
mov
dec
sbb
jp
sbb
jne
sub
add
cmc
cmp
pop
cmp
test
inc
cmp
dec
jmp
sti
subl
call
inc
aam
mov
lods
push
cmp
sahf
sub
enter
cli
xor
sub
iret
jbe
sbb
js
inc
les
mov
jmp
sbb
or
pop
test
push
sub
ror
lods
inc
fwait
inc
aam
pop
call
aad
jp
movsb
cmpl
sbb
push
and
call
adc
popf
sub
lods
xchg
xlat
subb
jl
push
jl
int3
testb
and
dec
cli
xchg
inc
cld
arpl
dec
pop
fsubl
add
in
call
js
call
iret
andb
insl
je
je
test
fcmovnu
mov
aas
stos
add
or
int3
ss
imul
sbb
xorl
pop
adcb
push
fimull
add
push
xchg
sbb
movsl
adc
outsb
pop
ficoms
int3
pop
ret
and
inc
outsb
sub
or
pop
and
and
push
mov
jnp
ja
js
add
aas
movsb
daa
mov
mov
and
fimuls
adc
int3
adc
sub
inc
daa
insl
push
pop
xchg
mov
sbb
inc
test
add
and
xchg
pop
pushf
es
dec
ret
mov
xor
push
mov
xor
ds
jle
into
pop
sbb
faddp
test
std
pop
nop
xchg
mov
mov
cmp
sub
les
aaa
movl
in
jg
sbb
mov
std
pop
int
xor
xchg
add
mov
cmpsb
prefetch
inc
sub
sub
ret
xchg
out
or
pop
pop
add
push
xor
dec
fimull
adc
fdivrs
sbb
daa
xchg
dec
mov
test
aaa
movsb
xor
dec
add
insb
movsb
popl
mov
xor
xor
stos
fs
jne
push
adc
inc
mov
int3
lcall
mov
lret
xchg
sbb
dec
clc
arpl
lds
push
in
mov
cmp
mov
cs
cld
jmp
decl
int
inc
mov
ds
jb
mov
movb
ret
das
fbld
add
iret
push
nop
dec
cltd
cmp
adc
dec
add
shrb
pcmpgtd
add
cli
stos
jb
std
push
cmp
sti
mov
mov
jb
pop
movsb
adc
inc
ret
mov
sbb
jne
mov
mov
and
dec
dec
jle
icebp
pshufw
push
into
mov
lcall
stc
movsb
lock
nop
outsb
fstpt
jecxz
mov
sub
stc
push
sar
lret
jnp
or
loope
mov
add
or
mov
jle
sti
mov
pop
pop
mov
jne
adcb
mov
add
cmp
xor
add
xchg
sub
push
sub
test
push
lock
clc
and
or
repz
fists
adc
add
test
jne
fidivrs
xor
es
add
mov
stos
stc
and
pop
ret
cld
mov
rcrl
shr
or
inc
pop
lods
movl
cmc
jbe
inc
dec
add
out
decl
loop,pt
rcll
or
jne
outsl
dec
dec
cmp
in
jbe
scas
cli
jl
aas
mov
sub
ret
or
lods
and
jge
mov
add
into
jne
inc
jbe
add
push
test
dec
push
dec
push
fs
jnp
mov
call
push
add
leave
sub
cmpsl
xchg
add
xor
xor
add
incb
test
cmp
mov
dec
ret
test
xorl
xor
xor
test
jne
sbbb
hlt
je
rcr
je
add
lea
ret
dec
ja
out
rorl
xor
xor
pusha
repnz
jb
sar
and
jle
sar
js
lds
addb
mov
inc
hlt
outsl
cmp
cmp
jl
outsb
dec
idiv
mov
mov
aas
sti
adc
add
roll
mov
lods
sub
jle
or
call
add
cmp
mov
hlt
jne
or
fisttpl
cmp
loopne
jmp
lock
gs
fwait
bound
or
out
mov
cmpsb
fdivrp
jbe
mov
mov
mov
or
adc
mov
cmp
jl
fwait
adc
and
sbb
jmp
jne
lods
iret
or
dec
mov
andb
mov
lea
bound
ss
je
ficoms
test
xor
lods
insb
into
sub
call
mov
push
incl
push
pop
mov
mov
add
sub
call
ja
add
xchg
in
push
jne
hlt
add
test
mov
or
xchg
adc
add
clc
daa
sbb
fildl
rcll
repnz
inc
inc
pop
cwtl
push
daa
cld
adc
mov
adcl
icebp
lds
in
je
mov
sbb
add
push
push
push
adc
data16
and
ret
jle
sub
xchg
jl
rcll
fdivs
cmp
mov
jb
add
icebp
shl
faddp
data16
ficomps
scas
and
adcb
push
je
sbbb
jg
push
dec
loope
dec
es
inc
daa
stos
or
mov
imulb
pop
div
int3
rcrb
call
sbb
dec
fdivrs
call
or
imul
add
int
sar
mov
cmp
adc
inc
shll
mov
call
inc
xor
push
push
add
aam
push
cmp
es
scas
add
add
ret
sti
xor
icebp
fcom
ret
dec
cld
dec
adc
add
push
push
ficoml
add
cmp
push
decl
push
cld
xorb
popf
insb
adc
push
call
pop
addr16
pop
push
mov
add
lods
mov
loop
scas
movsb
cmp
lock
rorb
push
ret
sub
jbe
mov
and
scas
andb
lret
add
add
mov
mov
mov
out
fmuls
mov
fwait
jo
pop
or
pop
hlt
pop
xor
es
xor
xchg
sbb
ret
fsubs
fs
push
jbe
inc
or
pop
inc
insb
testb
add
inc
cld
fwait
or
rorb
aam
or
pop
add
adc
xchg
in
jl
add
pop
cmpsl
push
les
push
fists
cmp
mov
sbb
xorb
adc
mov
or
push
pop
add
cmc
sub
mov
lods
out
mov
cmc
sub
cmp
jmp
pop
xor
mov
adc
cmp
mov
lss
and
xchg
pop
xorl
sbb
sbb
push
lods
push
or
loope
add
jbe
in
jp
cmp
adc
jmp
adc
adc
test
sub
and
or
loopne
cli
cmp
mov
sti
mov
push
add
add
mov
mov
outsb
xchg
and
rorl
loopne
mov
pop
ret
insb
and
adc
push
enter
pop
out
push
push
fmull
ret
xchg
mov
lods
imul
xchg
dec
jge
int
push
cmp
cmc
sub
push
pop
mov
or
jno
xchg
clc
jle
sbb
mov
sti
lock
xor
push
jp
mov
lcall
ret
gs
jecxz
pop
cmp
lcall
and
dec
sub
lods
add
pop
mov
scas
jno
pushf
inc
mov
dec
sub
movsb
push
mov
push
fidivs
daa
movl
insl
gs
push
and
mov
sahf
test
out
fs
testl
fsubr
jne
xchg
inc
sbb
cld
mov
mov
faddp
es
and
or
int3
mov
pushf
andb
outsb
fdivs
lods
lea
pop
sbb
adc
ja
pushf
ljmp
cmp
mov
loope
outsb
inc
inc
push
cmpsl
sub
cwtl
dec
cmp
loope
sub
call
in
add
loop
test
sbb
call
in
lret
ret
arpl
adc
push
cmp
xchg
cmp
mov
in
call
loopne
notl
call
push
mov
xchg
adc
xlat
sub
adc
mov
in
je
jns
xchg
cs
sahf
daa
mov
mov
je
add
xlat
lret
jbe
jle
out
push
push
xchg
jg
cwtl
adc
rclb
in
mov
call
pop
cmc
stos
xor
adc
mulb
dec
pop
inc
in
xor
lea
pop
lock
adc
mov
loopne
shrb
push
jp
xchg
test
in
pop
dec
nop
add
cmpb
mov
sti
rclb
ret
js
mov
sti
inc
and
sbb
loope
rorb
je
add
pop
ja
xor
add
add
mov
xor
leave
xchg
jnp
sub
nop
jmp
in
pop
sub
or
push
jl
dec
pop
les
sbb
jbe
or
mov
mov
cmpsl
arpl
pusha
mov
out
cmp
inc
xchg
jle
jbe
inc
dec
mov
mov
xchg
push
and
orb
adc
pop
cmp
add
add
mov
add
push
in
les
fsubrl
or
movsl
or
outsl
imul
cmc
enter
pop
or
arpl
mov
add
add
cwtl
je
dec
add
inc
adc
testb
stos
outsb
in
cmp
sbb
je
pop
sbb
movsb
sub
lret
scas
mov
add
mov
lock
and
data16
adc
push
xorb
stc
mov
mov
inc
cld
add
lcall
adc
js
dec
andl
fld1
mov
add
pop
dec
push
scas
inc
testl
pop
inc
adc
mov
pop
sub
call
mov
es
subb
lahf
dec
xor
mov
add
data16
adc
add
mov
xchg
insl
mov
insb
fsubs
mov
adc
sbb
lock
sti
sbb
test
or
cli
and
cmp
add
mov
pop
fstpt
push
add
jb
or
outsl
call
push
leavew
shr
jb
sbb
pop
sub
aaa
lret
mov
adc
repz
shlb
bound
adc
mov
je
rorb
push
push
add
repnz
push
imul
cmp
or
dec
fadd
lea
push
and
fcom
push
in
add
pop
xchg
aad
test
int
xchg
sbb
add
inc
mov
jecxz
mov
call
addr16
push
jp
inc
sbbl
loopne
push
jbe
xchg
mov
mov
test
shlb
adc
mov
cwtl
rcrb
cli
pop
daa
jmp
rcrb
into
pop
push
push
leave
cli
and
sarb
outsl
scas
mov
and
add
and
iret
adc
or
sub
sti
jl
sub
andb
push
push
clc
add
add
jo
and
hlt
aas
mov
add
add
arpl
jb
enter
mov
cmp
push
xchg
xor
leave
call
or
in
add
mov
mov
lock
sub
repz
inc
pop
mov
sbb
adc
add
jae
fsubrs
mov
add
sbb
push
add
add
pop
push
pop
xchg
and
xchg
jb
clc
rorb
test
js
sbb
dec
leave
push
js
jl
sub
push
sub
ss
adc
adc
jae
aas
shlb
mov
daa
lods
mov
loopne
call
mov
les
mov
add
test
inc
clc
loopne
adc
adc
xchg
xor
pop
adc
jmp
mov
xchg
popa
add
mov
add
push
adcb
mov
adc
cli
pop
pusha
jno
xor
xchg
cld
mov
mov
and
addb
js
push
lret
or
mov
sarb
push
xlat
adc
insb
fstl
mov
jb
sahf
cli
jg
leave
faddl
in
ja
add
push
adc
add
and
sahf
pushf
mov
push
or
inc
loopne
pop
xor
cli
stos
mov
xchg
je
pusha
cs
stos
dec
push
pop
sbb
cmp
cmpsb
sti
das
xor
lea
add
call
xchg
or
or
push
or
adc
movsb
jmp
sbb
mov
shll
mov
mov
adc
mov
jo
add
movmskps
jp
add
sbb
clc
pop
jae
sar
inc
scas
or
insb
loopne
loopne
in
push
call
mov
test
adc
cli
scas
mov
adc
mov
std
sub
outsl
inc
push
add
scas
pushf
jmp
cmp
mov
mov
outsb
jae
orb
das
shl
xor
and
xor
jg
add
sbb
jne
mov
adcb
xor
test
data16
add
xchg
fneni(8087
push
mov
push
or
in
push
xchg
call
add
adc
punpckhdq
xchg
jbe
ljmp
andb
add
mov
movsl
outsl
push
add
int
test
jg
lea
pop
mov
dec
adc
out
adc
int3
enter
sahf
addb
add
idivl
std
inc
loopne
ds
je
lea
add
div
cs
mov
adc
push
clc
add
sbb
xlat
insb
or
adc
inc
je
sub
jg
mov
dec
jl
arpl
lods
pusha
or
adc
es
dec
rorl
and
addb
cwtl
je
lret
mov
cmp
pop
ljmp
lock
popa
cltd
scas
aam
xor
cmp
add
cli
ja
lret
adc
popf
or
pop
jmp
and
clc
dec
adc
retw
loopne
adcl
test
ret
mov
cld
je
bound
add
into
and
sub
jg
xor
decl
sbb
call
cld
pusha
or
and
cmp
mov
mov
fsqrt
bound
and
subb
js
loop
xchg
orl
pop
pop
in
loope
or
push
pop
sub
cmp
popa
cli
mov
stos
pushf
and
xor
das
cli
lcall
xchg
mov
test
movsb
or
mov
clc
pusha
adc
add
stos
icebp
mov
notb
vpunpckhdq
data16
mov
adc
lret
and
jl
or
inc
mov
outsl
and
sub
call
loopne
ret
sbb
mov
filds
lock
cwtl
pop
or
adc
xchg
das
add
push
push
xor
push
mov
mov
mov
cmp
or
push
shrb
sbb
push
xor
in
cli
incl
xor
adc
cmp
sbb
xor
inc
clc
mov
mov
je
cmp
scas
mov
cmp
xchg
xor
mov
fadds
mov
fwait
lcall
mov
sbb
lock
outsl
sbb
and
mov
mov
rolb
jecxz
jnp
lock
mov
fstl
hlt
push
add
gs
push
cltd
dec
ja
cmp
adc
setle
lret
add
adc
cs
and
sbb
call
mov
test
incl
xor
sbb
lock
inc
push
push
jno
pop
cmp
decl
jo
call
add
into
lock
sub
arpl
push
lock
lock
or
hlt
mov
mov
out
call
jg
test
cwtl
push
ja
incl
pusha
jo
lock
or
add
and
mov
or
mov
rclb
cli
xor
mov
xor
cmpsl
sub
and
aam
jae
jl
add
ficompl
jl
data16
mov
mov
pop
rcrl
cmpsl
mov
inc
add
or
jne
xchg
pop
xor
adc
push
lock
add
sarl
ja
jg
or
movsb
mov
repz
in
push
mov
ljmp
push
jo
jo
bound
mov
xor
dec
mov
ss
push
push
hlt
add
sti
idiv
xor
sbb
xor
or
inc
pop
jp
xchg
dec
inc
test
jg
mov
cmp
add
mov
fdiv
or
lahf
pop
or
add
xor
mov
jb
test
push
subb
mov
test
pop
cmc
pushl
rorb
test
jo
sbb
dec
jecxz
js
cmpsb
cmp
dec
add
lock
cmp
sti
mov
mov
adc
mov
test
or
xor
add
neg
scas
pop
ret
adc
lret
and
mov
push
mov
pop
or
fnstcw
jmp
jnp
mov
or
mov
add
xor
scas
add
test
cmpsb
adc
add
mov
aad
dec
fisttpl
adc
or
adc
test
adcl
adc
loop
in
xor
repz
lea
push
push
lea
sub
xor
xchg
add
lods
lock
lock
or
sbb
jne
add
jg
dec
add
sub
add
mov
cmp
pop
xor
and
pop
fidivl
and
push
adc
jne
add
sti
add
mov
test
push
inc
and
test
cli
sub
mov
sti
add
add
stos
ficoms
subb
adc
outsl
add
add
jp
xor
jo
xchg
inc
pop
sbb
lea
xchg
je
test
and
sbb
add
adc
daa
out
rorb
pop
inc
cli
mov
push
or
jg
sbb
mov
push
add
lock
cmp
mov
xor
mov
fs
movsl
popf
and
or
pop
call
or
adc
les
adc
cmp
mov
xor
push
pop
movsb
sbb
es
xor
cs
inc
push
lock
mov
push
pop
adc
jo
out
sbb
es
ja
cmp
jo
popa
cwtl
test
test
adc
add
loopne
add
outsb
xor
mov
in
inc
inc
mov
jle
push
push
add
test
daa
pusha
adc
test
divb
mov
cmp
pusha
sti
jl
mov
sti
pop
add
add
xor
add
xor
fdivrs
sar
mov
jo
pop
xor
add
aaa
add
cs
les
add
int
sbb
mov
sbb
fcoml
push
adc
incl
mov
test
add
ja
xor
xlat
jno
ja
or
push
sbb
add
jo
dec
mov
xchg
stos
mov
fisttpl
popa
xchg
ret
and
lock
adc
add
and
xchg
testl
xorb
or
adc
xor
sub
cmp
push
push
xor
mov
mov
das
sarl
or
mov
inc
push
and
mov
push
xor
sbb
and
jbe
insl
sbb
outsl
sub
jmp
pusha
mov
inc
adc
adc
mov
xchg
and
pushl
push
cwtl
testl
push
xor
and
xchg
pop
mov
xlat
add
cmp
cs
xor
add
insl
jmp
pop
mov
in
sbb
push
cmp
leave
or
je
call
pop
and
xor
push
pop
sub
and
fcomip
jnp
fisttpl
test
jb
out
xor
xchg
jo
outsl
clc
aaa
pop
push
push
call
jmp
adc
ficoml
sbb
cld
mov
ret
pop
out
xor
not
addb
jg
je
call
sbb
cmp
mov
mov
imul
test
push
jmp
and
outsl
xor
cli
mov
mov
outsl
add
hlt
xor
push
mov
int3
or
das
cmpb
push
jb
mov
xchg
and
pop
add
or
dec
and
adc
inc
sub
add
and
mov
inc
and
push
push
xor
and
pop
cli
push
mov
cmpsb
pop
add
je
fsubrp
testl
xor
add
add
or
inc
xor
orb
adc
add
test
or
cmpsb
pop
loopne
je
ss
add
and
shrl
lea
pop
adc
mov
and
or
adc
cmp
cwtl
add
andl
xchg
pop
or
sti
ljmp
add
push
scas
inc
jb
bound
jle
ficomps
adc
xchg
xlat
xchg
pop
pusha
imul
push
test
out
or
aam
and
arpl
jg
addb
testb
sbb
orb
push
add
add
or
in
push
jp
add
push
sbb
xor
push
mov
push
repz
or
and
addr16
sub
lods
xor
subl
add
inc
adc
mov
cmp
mov
mov
mov
lock
or
sub
add
int
pop
or
or
lods
arpl
loope
orb
divl
jo
inc
and
or
pop
arpl
sarb
adc
fcoms
mov
rcrb
push
jmp
dec
push
rclb
inc
ret
jnp
pop
add
or
mov
rcrb
mov
mov
push
mov
mov
mov
pop
str
fadd
mov
fwait
dec
or
jo
push
lock
call
add
repnz
add
mov
mov
add
pop
pop
shrb
and
or
adc
add
scas
and
es
adc
jg
and
fistps
stos
xor
xor
lcall
es
xor
sub
xor
add
inc
sub
adc
adc
imul
sub
sbb
pop
and
ret
sub
hlt
shll
add
jg
lea
call
andb
pop
mov
add
test
fcos
nop
or
je
jbe
mov
pop
pop
or
push
add
daa
pusha
imul
lods
pusha
nop
adc
cld
push
pusha
movsb
ds
mov
ret
inc
in
les
sarb
xchg
ss
pop
loopne
inc
jp
and
xor
hlt
push
add
add
movsl
pushl
outsb
inc
rcll
cld
je
scas
or
cld
orl
and
enter
xor
bound
mov
lds
add
pop
rclb
enter
rcrb
sbb
in
xchg
and
hlt
push
jl
adc
lret
or
in
movsl
add
add
ret
or
add
dec
and
cmpsb
sbb
cwtl
push
loopne
jg
xor
pop
add
lods
push
push
pop
jecxz
cmp
push
mov
popa
sbb
lock
je
add
ds
and
add
xor
sbb
sub
cmp
jmp
cmp
loopne
inc
add
and
push
mov
inc
mov
add
mov
hlt
xchg
loop
fldenv
or
and
rcrl
sub
dec
insb
pop
inc
mov
sti
pop
push
mov
cmp
pop
add
js
pusha
pop
sub
cmc
add
sbb
inc
fmul
jg
add
or
push
push
int3
nop
or
pusha
inc
out
push
popa
std
mov
ret
cwtl
or
dec
sub
pop
add
sub
in
inc
sub
bound
add
xchg
dec
data16
add
push
loopne
loope
dec
pop
pop
insl
sti
or
cld
fs
xor
je
jg
stos
push
jp
sub
jle
lods
ret
add
add
push
mov
shll
ror
jno
icebp
outsl
js
push
mov
fstps
jecxz
or
fidivs
imul
sbb
xor
mov
lods
mov
push
jo
add
add
mov
jmp
push
insl
lods
sub
sarl
in
ret
into
fisubs
or
lods
sahf
jle
ljmp
test
push
push
mov
jg
mov
dec
mov
or
pop
or
push
cmpsb
lock
adc
pusha
or
jne
push
cld
push
dec
sub
loopne
into
xchg
push
cmp
cwtl
pop
adc
xor
jmp
push
pusha
add
mov
add
arpl
or
xchg
or
push
cld
jg
bound
and
or
add
out
loopne
lock
sbb
out
data16
or
fcoms
lahf
es
loopne
mov
addl
sub
push
jmp
jae
pop
jl
loope
mov
mov
mov
mov
ret
mov
add
push
js
aas
pop
push
arpl
or
cmp
add
es
aas
inc
mov
addl
fistpl
xor
pop
xchg
out
mov
pusha
rorb
cmpsl
loopne
sti
jae
jle
gs
add
add
push
or
mov
shl
call
add
into
loopne
ficomps
clc
pop
sub
movsb
mov
pusha
fisubl
jne
xor
cld
pusha
add
push
mov
add
jo
or
dec
into
das
and
jle
or
fsts
cmp
std
cmc
mov
in
or
pusha
pushf
popa
popa
adc
test
scas
ljmp
mov
shl
lahf
pop
cmpsb
pusha
stos
stos
cmp
push
add
aam
test
push
nop
mov
mov
jmp
mov
loopne
loopne
add
dec
and
inc
test
push
mov
stos
xchg
test
loopne
add
xchg
dec
std
bound
je
nop
sbb
mov
pop
dec
fists
bound
fists
ljmp
push
gs
jne
fsubl
aam
add
dec
xor
jl
inc
mov
in
cmpsb
push
dec
clc
cmp
jo
std
lock
add
xor
or
insl
enter
jb
jmp
bound
or
jg
sbb
pop
xor
loopne
xor
or
and
outsl
pop
int3
loop
pop
lock
mov
adc
add
loopne
aas
push
sub
nop
xor
xor
jmp
xorb
xchg
sub
inc
insb
pop
pushf
mov
repnz
mov
cltd
mov
dec
jbe
or
jb
mov
xchg
lock
ljmp
adc
sub
decl
call
das
inc
andl
push
push
call
mov
jo
fcomp
cmp
and
addb
mov
ret
lock
xor
jo
push
je
lock
cwtl
mov
pop
cmc
stos
je
test
pushw
orb
pop
pusha
int3
mov
repnz
xor
lea
inc
fbld
mov
call
inc
push
add
mov
add
movsb
xor
sahf
sti
xor
xchg
je
mov
rcll
push
nop
jbe
inc
mov
shrb
into
jp
jl
leave
jg
pusha
ret
and
fsubs
loop
in
or
aaa
cmc
mov
xor
das
push
call
pop
jmp
fidivrs
or
mov
lcall
and
add
subb
repnz
call
mov
inc
inc
mov
pop
scas
xchg
addl
push
lock
lock
pop
pop
mov
fildll
call
sbb
mov
xor
dec
mov
push
inc
or
sub
incl
inc
mov
out
jo
loopne
push
sbb
mov
add
dec
decb
frstor
cli
cmp
inc
stos
imul
mov
clc
mov
push
pop
inc
iret
icebp
sbb
cs
pop
mov
sbb
sbb
adc
pop
xorb
sbb
rclb
add
add
das
sub
inc
adc
mov
ss
push
mov
call
movsb
sub
lock
fwait
mov
aam
xorl
ljmp
lock
in
dec
test
add
fbld
pop
les
cmp
rcrb
lock
icebp
push
out
add
sub
xor
push
jmp
cltd
inc
je
add
fs
mov
call
jge
std
lds
mov
xor
divb
test
push
cltd
mov
push
scas
nop
stos
pop
sub
and
lock
cmp
lret
and
lods
xor
stos
fildll
test
dec
clc
xor
jp
pop
lea
mov
mov
or
pop
decl
inc
call
sbb
call
sub
lds
mov
mov
push
xchg
jl
lock
push
adc
or
pop
xor
ret
dec
and
add
fstl
mov
adc
xor
adcl
rorl
psubd
incb
add
inc
loope
or
and
stos
xor
push
neg
push
clc
jae
xor
inc
xor
repz
insb
popa
mov
jb
les
mov
aam
icebp
adc
pop
js
add
mov
add
push
or
adc
subb
or
cli
pop
add
mov
mov
bound
scas
loope
mov
pusha
push
xor
jne
js
pop
adc
jo
and
and
push
faddl
jmp
pop
push
xor
push
xchg
jno
pop
call
or
push
inc
xor
pop
mov
pop
pusha
fsubs
outsb
add
push
fwait
cltd
mov
lods
mov
icebp
jb
add
repnz
add
xor
mov
in
xchg
pop
sbb
div
dec
jne
xchg
xor
movb
xor
call
adc
and
loop
gs
push
mov
pop
sar
mov
aaa
mov
xor
es
mov
push
xor
hlt
dec
sub
push
cmp
xor
push
sbb
fwait
outsl
push
test
pushf
adc
lock
rclb
xor
out
inc
lock
cli
jg
or
stc
or
popa
xor
xor
std
inc
sbb
sub
dec
jb
jo
rcrb
adc
pop
orb
jo
mov
popf
cli
push
adc
pop
ret
add
hlt
and
push
inc
sub
and
test
call
stos
dec
nop
mov
mov
inc
mov
and
loopne
xor
mov
jo
fwait
negb
movsl
mov
mov
icebp
scas
push
lods
fildl
in
add
jo
pushf
xor
mov
mov
mov
or
sub
jne
ljmp
jecxz
or
xor
jo
mov
call
push
jmp
pushf
add
sbb
add
sbb
xchg
push
in
push
mov
mov
lds
mov
orb
lods
lahf
and
shrb
jp
mov
pop
lcall
sbb
and
mov
push
sti
insl
orl
call
lcall
add
fmull
jne
cmp
call
mov
inc
fs
inc
pop
dec
clc
add
pop
push
sub
call
pop
jl
and
push
inc
or
xor
inc
test
mov
adc
add
xor
cmp
pop
cld
mov
jo
test
mov
adc
iret
scas
and
negl
movsl
inc
xchg
and
lock
xor
call
jo
mov
loope
decb
cmp
xor
inc
jo
adc
mov
mov
inc
shll
in
jl
cmpb
rclb
int
rclb
lock
mov
xchg
rol
dec
lock
or
dec
adc
adc
inc
subl
divl
push
and
call
push
lea
sti
cmpsb
push
push
call
add
mov
shr
in
filds
jle
je
push
cwtl
xor
xor
push
mov
es
ljmp
pop
fdivl
cld
call
push
mov
cmp
icebp
ret
jmp
add
jo
clc
push
xchg
mov
bound
je
jge
adc
add
and
addr16
aaa
in
inc
orb
mov
mov
dec
and
cld
lea
push
rorb
or
sub
cld
rcl
push
add
push
movsb
das
sti
ds
bound
mov
adc
shlb
push
clc
add
andb
dec
call
mov
mov
js
or
cmp
lea
xor
cld
push
loopne
mov
aam
jmp
and
pop
cmp
loop
add
cmpsb
mov
stos
add
jae
pop
sbb
js,pn
dec
mov
cmp
test
pop
push
add
mov
push
mov
xor
sub
mov
or
cld
aaa
adc
orb
xor
mov
pusha
or
mov
cwtl
mov
adc
outsb
jl
hlt
push
push
mov
fcom
sub
cmp
xchg
je
add
jno
sbb
xor
decb
test
orb
clc
sbbb
push
push
mov
insb
push
xor
pop
dec
or
or
lret
push
add
stos
mov
sub
push
out
lods
and
int3
jbe
rclb
adc
bound
stos
jb
inc
pushf
dec
aam
movsb
and
and
shrb
or
jmp
movhps
mov
mov
adc
push
pop
xlat
or
push
movb
mov
test
or
mov
sbbb
mov
aam
add
insb
mov
mov
sbb
lcall
dec
sbbb
mov
sbbb
dec
pop
testb
andl
or
movsl
dec
or
or
outsl
xchg
inc
mov
cmp
mov
sub
inc
shrb
shll
std
inc
je
add
ret
mov
inc
push
xchg
cmp
dec
and
adc
rorb
lret
sub
inc
mov
xchg
add
inc
std
cmp
rolb
or
orb
outsl
scas
mov
lcall
push
jo
inc
pop
ret
das
call
sbb
xchg
sub
jbe
add
xor
subb
pop
add
add
adc
or
push
adcb
subb
test
inc
inc
pop
adc
mov
push
mov
and
sbb
inc
mov
adc
call
adc
test
test
jo
adc
inc
scas
cmpsb
es
xor
incb
hlt
pop
or
mov
and
add
inc
push
push
dec
add
add
sub
or
and
ret
pop
mov
adc
push
add
aaa
outsb
xor
lock
push
hlt
jg
jle
scas
lea
sub
xchg
test
jb
shrl
addb
sbb
call
mov
outsb
or
sbb
push
and
mov
fistl
cwtl
adc
dec
stos
shlb
xchg
add
push
movb
add
sub
adc
push
add
mov
inc
push
dec
jge
test
jbe
add
mov
mov
jge
adc
sub
ret
repnz
push
rol
jmp
and
xchg
shr
call
outsl
cmp
or
mov
push
mov
pushf
lcall
cmpsb
jl
lock
jg
push
idiv
adcb
movsb
rolb
inc
xor
xchg
dec
cmp
sbbl
dec
shl
jbe
pop
mov
mov
ss
cmpsb
or
add
adc
scas
cs
sbb
lea
jl
dec
out
out
push
adc
mov
sbb
adc
dec
jmp
stos
or
adc
das
clc
inc
hlt
push
pusha
push
xchg
lcall
test
xchg
xlat
fcoms
dec
jae
adc
test
out
xchg
loopne
adc
add
adc
leave
add
adc
ret
pop
xchg
insl
mov
loopne
cmpl
ljmp
ss
push
push
xchg
sub
aaa
mov
call
xorb
add
cmc
loopne
aas
or
pusha
loopne
xor
dec
icebp
incl
or
inc
and
ret
mov
push
jmp
jne
aaa
jo
and
hlt
mov
mov
sub
add
bound
leave
sbb
xchg
and
cmp
arpl
call
ret
sbb
decl
jbe
rclb
outsb
xor
loopne
stc
cmpb
push
je
mov
sub
cmp
push
inc
sti
add
mov
xchg
ret
xchg
mov
imul
cmp
pusha
push
jne
jbe
add
lock
shrb
push
lea
cmc
inc
jnp
subb
add
jl
mov
loopne
xchg
or
cmp
test
jg
jge
jmp
mov
pusha
pushf
icebp
js
mov
push
cmpb
dec
inc
fsubrs
adc
hlt
je
jmp
or
mov
loopne
stos
xor
popa
cmp
jb
std
in
es
fistpll
push
pusha
dec
push
into
call
and
pop
je
push
push
outsb
shrb
fidivs
cld
cmpl
das
mov
je
sbb
xchg
sub
or
push
push
push
loop
lea
push
push
jp
add
pusha
mov
das
adc
add
fs
push
push
test
sub
call
xor
pop
jno
incl
pop
or
mov
shlb
pop
das
loopne
test
add
loope
push
nop
inc
sub
and
mov
sub
mov
inc
fwait
mov
push
or
or
add
loopne
lcall
notb
inc
ret
add
into
adc
inc
push
lock
fwait
je
push
sub
dec
sub
dec
icebp
pop
jp
call
jl
lods
pop
icebp
mov
sub
pop
ja
rolb
mov
addb
cli
sub
jle
xchg
int3
xor
and
jl
push
stos
loop
inc
test
adc
push
adc
pusha
dec
pop
xor
fcmovnu
fisubs
loope
adc
cmp
repz
pop
and
add
jge
gs
inc
jl
jne
add
and
or
je
adcl
mov
adc
add
and
pusha
mov
ss
je
loopne
mov
mov
js
outsb
jmp
jl
push
mov
or
sbb
mov
ret
std
adc
jecxz
mov
subb
mov
add
fadds
sub
mov
and
mov
ret
ds
imulb
pushf
dec
add
sarl
scas
push
ret
scas
call
pusha
jb
jnp
je
arpl
sbb
inc
enter
and
loope
js
ljmp
dec
cbtw
adc
int3
je
or
ss
inc
xor
pusha
adc
push
pop
mov
push
pop
fidivl
xorl
sarb
add
cbtw
fists
cmp
push
sbb
mov
leave
stos
pusha
mov
push
fs
lcall
jmp
mov
cmp
outsl
push
scas
mov
or
lock
outsb
xor
push
clc
scas
push
jo
pop
add
test
imulb
lar
clc
add
adc
xor
cltd
and
cmp
mov
xchg
mov
cmp
je
or
add
mov
addb
cmp
jne
or
sub
mov
sub
pminub
loopne
push
or
ja
and
jb
mov
js
movsl
pop
ret
ja
notb
lea
sub
mov
mov
ret
adc
cli
fistps
xor
or
out
jno
dec
test
add
mov
jp
add
je
call
call
fsubr
add
mov
mov
popf
ret
and
call
inc
mov
jmp
inc
cld
or
and
mov
gs
jecxz
and
sbb
or
incl
xor
sub
pop
ds
jo
sub
std
lock
push
mov
xchg
pop
push
aam
push
xchg
sub
lock
cli
mov
mov
mov
add
jne
or
mov
push
add
add
decl
adc
cmp
dec
pusha
aas
mov
mov
jo
scas
add
inc
or
xor
dec
jo
test
mov
clc
lcall
ss
lret
mov
xor
pop
and
dec
sub
lock
and
testb
push
cmp
or
push
sbb
lock
or
xchg
pop
add
data16
je
das
dec
sbb
call
jb
loopne
or
inc
sbb
inc
cmp
push
stc
mov
xchg
add
sub
test
jb
dec
icebp
decl
and
insl
mov
bound
repnz
arpl
test
hlt
cmp
sbb
call
ja
add
pop
and
cs
sub
mov
repz
mov
jne
int
jl
push
data16
divb
pusha
adc
add
sub
out
and
add
ja
or
aas
cmp
lahf
pusha
std
dec
cld
movsbl
pushw
pop
jbe
ja
mov
sub
lock
xor
jl
stc
jg
xor
push
push
adc
mov
pop
or
mov
loopne
or
xor
ja
pop
xchg
in
and
lret
cmp
jbe
lcall
clc
orps
add
mov
cmp
jb
add
ja
inc
repz
icebp
or
ds
fdivrp
jmp
into
sub
iret
enter
sarb
sbb
aas
inc
mov
das
rcrb
cmp
stos
or
aaa
aam
adc
rorl
stos
lods
jbe
lea
cmp
jp
stc
cmp
jb
cmp
mov
cli
inc
inc
lea
aam
cmp
jb
or
add
js
movl
repnz
jo
je
push
popa
sub
pop
cld
jmp
sub
scas
inc
pop
sbb
andb
in
jne
mov
mov
xor
dec
scas
sub
jg
gs
sahf
cld
inc
add
mov
jne
and
pop
xchg
push
jecxz
mov
clc
or
add
xor
loope
out
pushl
xor
pushl
ljmp
ret
xor
xchg
jo
or
mov
andb
jb
loopne
dec
cmpsb
xor
jle
mov
nop
add
outsb
shlb
pushl
adc
mov
jo
sarb
cmp
scas
iret
cmp
pop
cmpsb
push
inc
loop
lods
inc
push
dec
jg
mov
mov
jae
lock
add
xor
adc
adc
inc
ret
cld
mov
mov
orb
inc
pop
mov
jp
ret
aas
and
and
mov
sarl
xor
les
icebp
inc
add
subb
call
xor
add
les
lods
add
mov
or
pop
push
add
movsl
mov
adc
lea
aam
mov
dec
or
lahf
lock
add
popa
test
add
mov
lods
or
dec
jmp
add
or
mov
add
push
mov
add
sarb
cmp
add
push
stos
in
cmp
in
mov
mov
jmp
jmp
out
mov
or
insb
or
pusha
aad
mov
add
lock
test
mov
or
adc
std
cmp
mov
jbe
mov
call
or
or
and
je
and
ja
enter
adc
jo
mov
cwtl
xor
adc
push
pop
movl
in
inc
push
jmp
call
ds
xor
bound
hlt
pushl
push
clc
adc
smsw
or
cmpsb
inc
loop
sbb
mov
cmp
mov
or
call
pusha
cld
je
into
call
mov
arpl
dec
jo
outsb
mov
add
les
shl
sbb
xor
sub
and
imul
add
cmp
mov
movsb
sbb
call
pop
lea
push
clc
pop
xor
sarb
in
js
lock
es
test
mov
mov
xor
jl
cld
push
nop
jbe
cld
scas
push
lods
loop
loop
adc
into
jl
cs
push
jb
push
and
jne
cmp
rolb
mov
mulb
out
pop
cld
xor
xor
sahf
sub
sti
add
ret
sbb
cmpl
mov
in
and
jbe
mov
ret
imul
dec
push
or
cmp
call
add
insb
std
pop
aaa
ret
clc
add
icebp
lret
adc
lods
and
mov
mov
mov
cmpw
jo
add
xchg
xchg
pop
jne
incl
std
dec
push
and
push
inc
add
cmp
pop
idivb
jo
lods
das
xor
jo
jg
jno
lret
add
ljmp
fistl
sbb
xor
clc
add
mov
scas
call
mov
jge
push
and
addb
loope
cld
mov
add
and
sub
add
push
pushl
sti
cmp
jne
pop
ret
xchg
lcall
jbe
sub
je
xchg
iret
call
or
insb
dec
or
fists
or
push
arpl
out
rclb
shl
sub
adc
push
add
js
push
loop
shrl
sub
scas
mov
jle
ret
pop
pop
mov
neg
add
adc
jge
add
int3
cmp
cli
div
add
imul
pop
repz
cmp
cmp
add
xchg
mov
pop
push
and
sub
cmp
andl
add
test
jno
cmp
decb
mov
jb
inc
add
jne
and
xchg
cmp
testb
pop
test
pop
add
xorl
cwtl
inc
lock
add
outsl
fs
jne
cmpb
rcll
add
ljmp
testb
or
mov
cmp
mov
lahf
mov
sbbl
ret
xchg
or
sti
out
packssdw
ss
pop
test
dec
xchg
push
jmp
and
test
nop
out
cmp
leave
inc
clc
or
popf
cmp
and
pushl
andb
sub
xchg
jb
pop
je
imul
add
inc
inc
push
push
jbe
jo
test
mov
into
mov
dec
mov
sub
call
cltd
xchg
leave
inc
pop
call
add
orb
or
and
push
call
cwtl
push
movsl
rclb
adc
loope
mov
int3
push
cmp
xchg
jl
adc
push
rcrw
mov
mov
and
cmp
inc
inc
push
cltd
inc
cmpsl
mov
adc
push
outsb
or
sub
adc
sarb
xor
jecxz
ljmp
popf
sub
shrb
xor
pop
incl
test
shlb
rorb
pop
add
sub
cs
lock
mov
and
cmpb
fisttpl
mov
roll
xor
lods
ja
dec
test
jb
and
add
test
das
and
xchg
enter
dec
cltd
loop
sbb
jp
mov
mov
inc
and
and
ret
and
fildl
decb
mov
orb
cmpsl
stc
sti
lretw
dec
push
dec
jns
mov
sbb
lea
inc
nop
sarl
rorl
lea
lods
pusha
sub
mov
mov
loopne
pusha
xchg
leave
subb
pop
mov
insb
shlb
fs
cmp
mov
ficoms
or
add
mov
imul
iret
xorl
push
std
stos
lcall
mov
jmp
shlb
add
aam
rcll
lea
push
add
adc
pop
out
mov
mov
push
sub
ret
sub
inc
cld
adc
divl
rol
insb
hlt
stos
mov
fdivrs
push
fbstp
data16
xor
in
leave
push
lcall
and
mov
sarl
stc
and
sub
inc
sahf
cwtl
add
mov
lods
mov
setb
adc
xchg
jmp
push
inc
dec
mov
cmp
push
fistps
adc
loopne
jb
sbb
add
pushf
aam
test
shrb
nop
ficomps
test
lea
test
fsubl
in
in
and
outsb
adc
add
push
pop
push
cmpsb
push
in
mov
xor
call
push
loopne
movsb
ds
test
frstor
sub
dec
pop
push
call
jl
or
inc
sbb
add
sbb
mov
jo
loopne
jbe
pusha
cld
fucomp
loopne
xor
pushf
loopne
out
jecxz
out
add
leave
test
inc
sbb
je
xchg
icebp
push
pop
jecxz
lcall
mov
dec
pushf
addr16
jbe
pop
les
dec
jae
addl
sub
call
jp
sbb
jo
test
pushf
movb
popa
push
xchg
mov
mov
test
imul
xorb
dec
or
test
or
jns
mov
test
lock
push
dec
push
std
fucomp
in
push
xorb
outsb
pusha
xchg
out
loop
mov
outsl
sbb
pusha
add
mov
dec
jecxz
loopne
or
jne
test
mov
xor
mov
pop
add
testb
je
dec
outsl
or
je
loopne
mov
sbb
add
loopne
inc
adc
pusha
pop
inc
mov
push
ss
lea
mov
xor
pop
mov
lock
jl
pop
cmp
push
xor
loope
pusha
inc
loopne
and
nop
inc
mov
es
loopne
pusha
andw
jecxz
adc
cmp
push
mov
aad
es
adc
rorl
pop
or
mov
int3
cmp
xchg
mov
pop
in
fildll
push
sub
jb
inc
scas
xor
sbbb
ljmp
fwait
adc
sub
test
xchg
sub
ds
popa
adc
add
loope
dec
push
inc
mov
sub
add
in
sub
dec
cmpb
mov
stos
negl
cli
lcall
je
adcl
jne
adc
adc
push
loope
cld
or
cltd
ds
mov
add
and
pusha
or
mov
xor
loop
sub
and
lret
jmp
loope
in
sub
mov
or
dec
test
jb
adc
stos
and
mov
add
inc
pusha
jl
pusha
mov
fistps
cmp
and
xchg
xchg
pop
les
sub
jle
add
mov
cmpsb
add
pop
or
dec
inc
lock
pop
loopne
or
ret
into
ljmp
shr
jp
adc
mov
and
pusha
pop
adc
add
je
push
scas
sub
jmp
inc
sbb
sub
inc
test
clc
mov
add
out
loopne
dec
adc
es
mov
sub
mov
and
xor
jl
adc
iret
aam
incb
movsl
scas
push
data16
jmp
mov
sub
mov
add
shll
lret
pop
dec
fisttpl
add
sub
bnd
mov
es
add
scas
stos
lods
subl
mov
jmp
dec
lcall
add
mov
and
jmp
mov
push
stos
dec
jo
stos
rclb
add
mov
dec
fcoml
jmp
adcb
stos
loope
cld
mov
and
sahf
decl
ret
or
xor
inc
push
add
and
out
push
mov
jl
lret
jg
idivb
dec
dec
sub
test
lret
push
xor
mov
and
inc
adc
js
mov
push
or
mov
stos
dec
ja
mov
lea
add
lcall
mov
add
jb
shlb
adc
add
pop
fmul
add
ja
lock
data16
xor
jo
mov
push
mov
add
jne
xor
add
and
jle
cmp
lock
cltd
imul
or
mov
cmc
add
xchg
cmp
add
lea
aam
jmp
data16
and
jmp
push
or
pop
mov
outsl
decl
xchg
mov
and
rdtsc
adc
mov
add
push
lock
lea
ret
or
sbb
or
cltd
orl
cmp
add
xor
and
ljmp
dec
jmp
mov
add
aaa
movsb
mov
aas
or
mov
fstpt
data16
iret
mov
jmp
jo
mov
cmc
je
insb
or
pusha
jp
cld
or
mov
or
jmp
or
ret
mov
jb
repnz
cmp
sbb
adc
stc
xor
pop
sbbb
xor
or
test
mov
cwtl
fptan
dec
idiv
jg
int3
xchg
push
xchg
mov
or
push
adc
aaa
jo
mov
xchg
lock
dec
mov
and
sub
stos
fwait
jle
jg
cmpsl
je
clc
inc
je
or
add
adc
xchg
test
adc
adc
mov
icebp
add
mov
push
xor
rcrb
incb
jmp
mov
add
adc
imul
add
inc
mov
lds
mov
jbe
cli
pop
inc
and
xor
push
jmp
mov
or
lock
or
jmp
sub
fadds
pushl
pop
xchg
dec
add
xchg
mov
jb
testb
gs
shlb
loop
mov
cmp
pop
xor
in
add
icebp
cmp
stos
sub
cmp
call
ljmp
add
jb
add
jne
addl
sbb
xchg
clc
sti
mov
adc
repz
jl
daa
inc
pop
xchg
ljmp
pop
pushf
test
es
ja
xor
mov
adc
imul
out
cmp
mov
pusha
jno
or
mov
push
jne
add
jmp
adc
mov
in
jmp
sti
sarb
jo
xor
adc
or
push
lahf
lock
test
cmpl
xor
inc
cwtl
push
push
out
jmp
or
cs
inc
adc
lods
jne
loopne
jmp
and
mov
adc
pop
push
xor
pop
adc
pusha
jmp
mov
add
jne
loopne
loopne
ret
push
sub
mov
xor
dec
push
fildl
lret
ljmp
add
subb
jl
and
mov
lcall
add
mov
test
dec
and
dec
fistl
std
inc
sbb
or
mov
das
cmp
aaa
fsubl
sbb
adc
dec
clc
xor
lret
pop
lods
subl
jo
mov
adc
or
xor
dec
sbb
aaa
mov
ret
repz
cmp
movsb
jg
adc
mov
mov
outsb
mov
add
inc
pop
xor
add
and
iret
sub
pop
mov
xchg
jo
jmp
mov
test
or
sub
push
rclb
cmc
in
sub
jle
cmp
jl
idivl
psllw
add
mov
xor
mov
outsb
add
inc
inc
jle
shl
add
sbb
rorb
and
or
dec
xor
and
jo
push
mov
icebp
mov
stos
decl
push
mov
cmpsb
or
push
and
or
fisubl
je
andb
jp
add
dec
add
sbb
unpcklps
push
ret
cmpb
insl
jb
int
movsb
ds
or
inc
sbb
rorb
adcb
lods
outsl
in
pop
inc
ret
xor
stos
in
pop
aas
or
or
xor
nop
xor
lock
pop
xor
adc
lock
mov
inc
js
mov
inc
xor
js
fcoms
push
mov
insb
test
dec
mov
mov
sbb
sub
or
cmc
and
and
jno
div
dec
out
pop
lods
pop
sub
aaa
mov
das
mov
je
inc
mov
push
or
jo
imul
sbb
sarb
inc
loop
inc
and
bound
jae
outsb
add
fs
sub
cmp
fdivl
xor
cmpsl
xor
mov
jmp
das
xor
inc
or
sbb
inc
sub
repz
add
scas
mov
and
adc
push
pop
mov
push
divl
stc
mov
cld
add
sbb
xchg
pop
sbb
fwait
lcall
add
mov
and
divb
ror
pop
mov
mov
pop
loopne
hlt
pop
xor
jg
mov
cs
hlt
add
icebp
add
mov
repnz
shrd
icebp
sbb
inc
stos
ja
pop
and
in
decl
add
mov
nop
or
dec
clc
inc
fstpl
jbe
repz
icebp
add
jg
pop
xor
mov
sbb
mov
sub
stc
add
nop
or
adc
or
pushf
mov
enter
push
aam
mov
ljmp
mov
dec
scas
jnp
lea
sbb
pop
or
push
jmp
jbe
mov
mov
repz
sbb
jmp
gs
sbb
insb
mov
cmp
jno
lret
mov
pushl
push
mov
inc
pop
fwait
mov
loopne
dec
push
hlt
push
mov
movsl
sbb
xchg
test
add
sbbl
sbb
addl
hlt
int3
rorb
jne
xchg
nop
mov
loopne
pop
mov
add
jbe
outsl
push
jg
imul
filds
pop
rcll
push
aas
inc
outsb
call
dec
and
jmp
pop
pop
addb
outsb
je
stc
je
push
lahf
add
add
insl
clc
fwait
push
add
or
jp
and
push
pop
adc
and
add
ja
xor
add
or
add
push
pop
xchg
clc
or
sub
loop
adcl
mov
dec
cmp
jle
or
push
js
adc
filds
andl
scas
dec
andl
xor
jmp
test
push
movsb
or
push
sbb
cmp
mov
cmpsb
jns
pushl
lret
test
or
ret
incb
mov
mov
subl
sub
and
sub
ret
idiv
sub
adc
lock
xchg
pop
ret
add
xor
stc
push
add
inc
inc
ret
sub
push
adc
adc
sarb
push
dec
shlb
push
jmp
xlat
rolb
jne
xor
adc
sub
sbb
and
xor
mov
jbe
sarb
hlt
stos
pushl
adc
rclb
rorb
jne
rclb
shlb
push
js
in
mov
sub
push
fidivl
jp
dec
test
jle
adc
cmp
sbb
cld
outsl
mov
push
push
and
and
sbb
lds
jmp
mov
jnp
mov
xor
stos
dec
cld
leave
mov
sbb
and
shlb
int
pop
adc
rolb
outsb
fisubrl
pop
mov
or
shll
lds
sub
push
adc
adcb
adc
ror
mov
sbb
outsl
dec
inc
pop
sub
jne
rorl
pop
add
adc
or
adc
inc
je
dec
mov
dec
rcrb
out
imul
inc
and
push
inc
push
inc
arpl
arpl
shl
fisttps
mov
das
add
jp
test
mov
cltd
jbe
add
nop
hlt
test
nop
cmp
mov
fistpl
push
test
cmc
jmp
adc
adc
repz
or
adc
jg
je
sbb
sbb
jp
dec
je
loop
lock
hlt
loop
sbb
ret
sbb
push
movsb
jne
cs
sbb
cmp
mov
addl
adc
addl
inc
loop
push
jmp
or
mov
mov
mov
mov
mov
xor
xor
add
add
xchg
sub
add
push
xchg
adc
dec
push
rorb
jg
add
lcall
sub
push
rcrb
addl
std
cmpl
iret
jmp
mov
inc
push
enter
call
test
xchg
lea
mov
cwtl
or
sbb
sti
mov
xor
mov
test
dec
adcb
test
or
add
pusha
mov
std
das
mov
add
mov
loope
ljmp
subl
lock
outsb
orl
sbb
add
jmp
out
pusha
and
push
les
fs
out
adc
fwait
add
xor
stc
je
test
push
lret
xor
in
xorb
or
call
cld
add
xor
adc
xor
or
cli
inc
gs
cld
out
mov
or
lds
mov
or
sub
call
add
pusha
xor
and
xor
adc
loopne
or
push
mov
popa
loopne
xchg
pusha
mov
jg
adc
adc
or
jmp
adc
mov
loope
pop
lret
repnz
push
and
dec
rorb
je
sbb
add
pusha
xlat
popa
jo
repnz
inc
push
loop
bound
loopne
xchg
or
ljmp
cmp
xchg
xor
les
pusha
mov
or
fwait
loopne
popa
jns
adc
mov
loopne
fldt
shl
inc
sub
inc
inc
or
cmp
push
add
shlb
jecxz
call
and
xor
test
add
orb
cmc
push
pusha
add
sbb
lods
push
and
cmp
mov
addb
pop
adc
lret
or
ret
pop
mov
mov
shll
pusha
mov
ss
push
popa
or
sub
xchg
loop
les
sarl
jl
mov
orb
bound
stc
mov
out
loopne
test
pusha
pop
sub
data16
jle
cmp
adc
loopne
adc
ds
out
mov
or
add
xchg
adc
jle
hlt
ds
cmpsl
pusha
push
inc
fisttps
mov
loopne
pusha
stos
and
ljmp
jmp
in
cltd
lret
aad
mov
add
test
push
mov
sub
pusha
push
sub
jb
lods
loopne
das
loopne
movsb
mov
inc
mov
out
xor
push
rcrl
mov
sbb
in
cmp
cmp
pop
fisttpl
dec
xchg
sbb
add
es
xchg
repnz
or
add
clc
das
inc
mov
mov
js
outsb
cmp
mov
cmp
btr
push
sub
add
sub
sbb
movsb
xor
pop
add
dec
adc
inc
cltd
inc
sti
fldt
xchg
or
mov
lret
mov
or
push
lods
mov
cmpsb
lock
xlat
dec
imul
xlat
or
add
mov
test
jmp
stos
jg
daa
lcall
or
sub
ljmp
je
or
add
ret
mov
xchg
mov
je
mov
pushl
pop
ljmp
out
cmp
arpl
xor
ljmp
lods
fmuls
push
int3
and
push
aam
sbb
push
mov
test
push
push
clc
decl
adc
pop
jmp
mov
movaps
rclb
inc
inc
shll
xor
les
cli
and
nop
xor
adc
cmp
pop
outsl
in
and
lds
jo
pop
mov
js
mov
pop
icebp
shrw
icebp
test
mov
mov
popa
add
mov
dec
inc
inc
enter
inc
xchg
hlt
push
inc
mov
or
jne
aas
ja
inc
add
and
inc
insb
sahf
add
ficompl
popf
or
les
stos
ret
test
in
xchg
add
or
dec
imul
add
mov
lds
rorl
popa
int
mov
mov
shll
add
enter
shll
leave
sbb
cmp
sbb
inc
mov
inc
cmc
or
sub
aaa
add
pop
push
jno
inc
adc
xchg
movsb
mov
and
fimull
xor
inc
fcmovbe
imul
adc
rcll
out
stos
cld
dec
jae
adc
dec
sub
inc
push
jge
sti
fidivs
adc
ret
or
movsl
add
cmpsb
mov
pop
int
push
adc
push
into
inc
fisubs
add
jbe
adc
push
adc
shlb
data16
adc
push
jge
andl
push
rorb
dec
sub
and
fs
push
xor
icebp
fimull
xchg
stos
inc
loopne
pop
jb
adc
ja
and
aam
add
in
fwait
mov
loopne
push
jmp
adc
icebp
mov
push
call
mov
adc
dec
jmp
scas
sbb
adc
push
dec
and
push
movsb
decl
lea
jo
mov
mov
stos
pop
pop
jg
pop
aam
aam
adc
xchg
add
and
pop
jne
movsl
loopne
les
mov
and
test
ret
dec
xchg
mov
icebp
pusha
ljmp
add
xor
mov
push
call
ret
pop
pop
and
in
mov
add
push
das
sbb
dec
mov
xor
div
mov
and
add
xor
or
pop
jle
mov
movsl
add
test
cmp
push
dec
cmpsb
jle
icebp
xorl
cmpsl
call
jbe
call
popa
popa
shl
jge
jbe
push
lods
pop
je
adcb
ja
add
out
mov
mov
add
adc
adc
addb
cmp
and
jo
xchg
adc
jbe
popf
push
cmp
jne
ffreep
jo
dec
nop
js
in
out
pop
jmp
jmp
and
out
lock
xchg
add
mov
push
pop
scas
mov
pop
jo
add
or
inc
and
mov
lcall
mov
pusha
mov
popa
jns
out
mov
sarb
test
cs
inc
mov
psubb
dec
fistl
je
or
dec
mov
sbb
dec
in
inc
xor
push
push
add
and
lock
inc
cmp
jb
scas
inc
xor
jb
test
dec
and
cld
push
jo
or
mov
mov
push
push
in
subb
adc
push
push
xor
pop
push
push
test
int3
dec
cwtl
fiaddl
mov
movsb
jg
xor
insb
scas
lea
or
jb
lret
xchg
lock
xlat
cwtl
cmpb
in
jb
add
mov
jmp
xchg
sbb
push
clc
or
lock
pop
mov
pushl
insb
add
add
adc
shlb
fcoml
insb
and
sahf
int
pushf
iret
adc
xchg
lock
push
dec
or
leave
insb
fmull
pop
mov
xchg
mov
jmp
lea
movsb
xor
adc
inc
mov
add
adc
sbb
jle
mov
push
movsb
lock
push
cli
lods
push
lods
push
add
cmc
add
sub
jnp
in
int
add
xor
push
adcb
dec
dec
mov
icebp
adc
mov
mov
push
cmp
push
aam
popf
inc
ret
pop
pusha
lds
roll
push
push
xor
lock
dec
lea
call
inc
adc
add
xor
push
icebp
adc
jle
mov
push
add
jb
jmp
mov
stc
divl
addl
je
xor
push
shrb
pop
data16
and
push
adc
decl
add
mov
mov
jne
mov
sbb
loopne
pop
inc
aam
pop
mov
dec
test
inc
jb
jle
push
push
lock
jo
inc
push
push
aas
dec
outsl
lahf
sbb
lods
jno
scas
and
sub
sbb
loopne
popa
test
aam
aad
inc
and
repz
and
xor
ja
fwait
jo
sub
movl
xor
sbb
out
sahf
mov
test
pop
inc
mov
mov
mov
das
sbb
test
int3
mov
jle
push
fists
push
or
fistl
inc
nop
xor
hlt
push
mov
pop
mov
clc
inc
push
or
dec
mov
fdivrs
and
inc
adc
adc
mov
lcall
add
mov
add
fs
pop
add
ds
hlt
enter
mov
pop
lret
pushf
sarb
je
pusha
jbe
and
push
adc
sub
fsubrs
sti
or
rep
je
xor
inc
sbb
lea
ljmp
inc
ret
mov
mov
pop
hlt
inc
mov
pop
lcall
add
int3
repnz
insb
cld
icebp
mov
dec
pop
xchg
add
cmp
loope
or
mov
aam
inc
sub
and
inc
lahf
mov
inc
incb
mov
faddl
xor
inc
mov
in
add
fcoms
and
xor
fdivrs
cmpsl
mov
mov
call
mov
testl
inc
in
xchg
outsb
mov
addl
jg
jle
xor
add
inc
add
cmp
jle
jl
nop
mov
mov
jl
inc
mov
shr
xor
sub
rcr
cmp
imul
aam
mov
pop
pop
or
jae
rorl
aaa
rcll
ljmp
xchg
xor
mov
xchg
stos
in
sarb
ja
pop
aam
outsl
dec
add
pop
rcll
xor
je
and
sbb
sbb
inc
pop
pop
add
sub
insb
add
cwtl
push
or
jo
add
outsl
adc
jecxz
add
popf
mov
push
or
mov
mov
lcall
add
pop
out
in
push
bound
aas
push
adc
pop
outsl
xchg
rolb
adc
mov
mov
push
pcmpeqw
call
or
cmp
outsb
add
xor
mov
fimull
and
mov
inc
cwtl
in
adc
pop
lods
dec
fxch
movsb
data16
adc
push
mov
adc
mov
fsubr
xchg
xor
sub
arpl
adc
xor
mov
aas
sbb
div
mov
movsl
pop
xor
mov
mov
cld
add
sbbb
mov
daa
and
jbe
push
jo
jbe
push
inc
mov
add
adc
inc
cmp
pop
sub
in
enter
movsb
test
inc
pop
xchg
nop
mov
push
dec
jmp
fisubrl
adcb
dec
rol
inc
in
sbb
add
inc
pop
fs
test
icebp
adc
lods
inc
mov
fistl
fstps
mov
or
push
andl
adcb
imul
jne
pop
loope
xor
scas
in
rorl
mov
mov
xor
adc
xchg
inc
jmp
into
ja
je
sub
sub
iret
test
mov
mov
lock
call
and
add
adc
push
fistpll
pop
rcrb
push
jne
push
sar
pop
add
inc
inc
or
cmp
cli
mov
add
sub
push
push
or
mov
and
add
mov
cmpsb
jmp
ss
mov
mov
test
fadds
js
decl
test
add
cli
adc
loopne
add
outsb
bound
jne
jne
dec
or
xchg
inc
mov
sbb
jbe
or
mov
call
dec
xchg
xchg
cltd
cmpsb
adc
call
cli
jg
cmp
loop
lock
mov
in
testb
dec
add
and
fbstp
loop
add
jmp
lock
aam
and
xor
rclb
bnd
xor
jo
adc
mov
stc
popa
subb
jo
jp
or
or
popa
and
adc
and
xchg
je
or
push
mov
push
pop
call
cmp
jae
push
test
hlt
rorb
xlat
xchg
ret
or
xor
xchg
lcall
leave
add
filds
subb
pop
ja
insb
and
sub
mov
inc
push
inc
push
js
pusha
jg
mulb
mov
pusha
dec
xchg
loopne
push
andl
mov
xchg
arpl
lcall
push
xor
mov
mov
lock
mov
sub
nop
add
inc
jmp
loopne
bound
ret
xchg
pusha
adc
pop
call
cmp
xor
push
ss
or
bound
xchg
sub
adc
jmp
and
popa
push
scas
push
mov
icebp
incl
out
and
aaa
mov
dec
mov
ret
cmpsl
lea
sub
bound
cwtl
push
xchg
add
shll
push
xchg
cmp
dec
push
cmp
inc
sbbb
pop
pop
int3
sbbl
inc
and
dec
push
lea
loopne
push
jp
add
adc
and
popa
add
les
addb
pop
jl
sub
scas
fidivl
mov
adc
pop
sahf
nop
jl
jl
fldl
jle
pop
sub
add
popa
and
loopne
mov
xor
arpl
lods
fistpl
outsl
or
mov
sbbl
push
dec
add
and
push
mov
add
nop
mov
ss
orb
dec
clc
loopne
je
std
sahf
sbb
jle
leave
ret
loop
cmp
pusha
jl
cmp
cmp
std
adc
pop
loopne
mov
add
shrb
dec
cmpl
jmp
mov
push
movsb
pusha
push
in
sti
rorb
clc
ja
cmp
add
ljmp
loope
xor
or
xchg
data16
add
adc
jne
fwait
sub
sub
ret
sti
add
push
negb
mov
pop
add
jno
jmp
addl
adc
mov
loopne
mov
inc
push
and
inc
dec
stos
rclb
loop
inc
lods
pop
pop
or
jnp
rclb
pop
je
ret
negl
mov
add
dec
movsb
enter
pusha
add
call
and
mov
bound
mov
inc
or
ss
jo
movsb
mov
str
flds
mov
adc
pop
mov
push
jl
bound
sub
pusha
adc
push
jecxz
sbb
call
and
scas
ss
loope
push
inc
lods
push
xor
lods
or
fbld
pop
je
sub
lods
jl
add
add
cld
incl
cmp
cmp
popl
and
lret
cmp
adc
sbb
shlb
or
pushf
popa
ss
jle
or
pop
pop
pop
cmp
ds
ret
scas
call
push
adc
test
and
add
mov
fsubrl
insl
orb
xor
pusha
sub
sar
jns
push
call
jmp
jo
inc
mov
pop
push
mov
jg
mov
inc
imul
orb
add
pop
inc
fwait
sub
insb
mov
add
dec
mov
add
cmp
push
mov
jmp
jl
sub
adc
sbb
ljmp
pushl
push
movl
add
dec
jg
dec
data16
add
dec
xchg
jo
andl
sub
fwait
push
arpl
xchg
repnz
stos
adc
lock
add
push
subb
jbe
loop
add
lret
jo
hlt
cmpl
mov
push
sub
jl
adc
data16
or
add
daa
mov
call
hlt
sub
decl
inc
inc
ret
out
rcl
shll
push
push
lock
out
cld
jbe
and
test
pop
add
clc
loopne
pop
sub
inc
mov
jns
arpl
sub
and
and
jle
adc
or
rolb
inc
ret
aam
test
mov
add
or
add
jl
add
xor
subb
test
xor
pop
and
test
mov
shlb
mov
push
shrb
mov
repz
sbb
insl
ss
clc
mov
lock
sub
rclb
lahf
leave
test
push
call
cmp
stc
mov
dec
fiaddl
mov
mov
fdivl
add
mov
test
cwtl
lret
add
mov
adc
call
popa
cld
mov
inc
cmpl
push
jb
idivl
cmp
dec
push
cmp
mov
insb
inc
ljmp
add
jo
jo
sbb
cmp
mov
inc
pop
mov
xor
mov
cli
in
and
sbb
pushf
loopne
add
fs
in
jmp
mov
loop
or
js
push
mov
es
mov
jo
insl
xchg
std
jmp
dec
adc
adc
adc
je
jbe
mov
fs
mov
lock
mov
jo
add
add
push
push
ds
lods
xor
jno
int
ss
add
pushl
test
sbb
xor
pusha
adc
lahf
mov
cmpsl
icebp
sub
xor
loope
enter
subb
push
inc
mov
mov
pop
add
cmpsl
call
call
and
pop
mov
movb
pop
testb
cmp
xor
adc
inc
or
xchg
rclb
dec
pop
push
inc
clc
fiaddl
sub
pusha
adcl
mov
ret
scas
add
or
or
xchg
cwtl
add
pop
push
add
out
scas
sbb
pop
mov
sbb
xor
pop
cmp
inc
inc
cmpsb
push
mov
inc
xchg
jno
xchg
add
push
fs
pop
or
test
dec
popa
jl
xor
sub
sbb
call
add
sub
cwtl
lea
jl
xor
cmp
test
jb
lea
mov
shll
cltd
mov
testb
sbb
push
adc
icebp
jb
in
mov
xchg
add
aaa
cmp
clc
dec
clc
pop
sub
jle
clc
rolb
cmpb
xor
pop
and
test
or
call
push
pop
fcoms
add
jbe
mov
repz
or
sbbb
clc
xchg
outsb
mov
push
loope
stos
sub
sbb
cld
and
lods
mov
xor
cmp
xorb
js
pushw
mov
mov
repz
cmpsb
mov
jbe
clc
pop
leave
sub
ljmp
push
shlb
adc
int3
ss
loop
and
rorb
fbstp
scas
jne
lock
push
mov
test
mov
mov
fisttpll
push
lret
mov
ret
or
repz
adc
xor
push
pop
test
inc
jle
lock
mov
and
into
lods
push
jo
dec
daa
inc
hlt
or
das
adc
decl
loopne
xor
inc
ja
fistpl
incb
mov
mull
add
add
jmp
cmp
jmp
andl
fwait
or
jmp
les
xchg
ficoml
adc
xchg
testb
std
je
inc
mov
aam
push
cmpsb
icebp
mov
jecxz
lods
incl
or
or
lock
jmp
out
jg
inc
cmp
pusha
inc
or
jmp
mov
sbb
rclb
out
enter
and
cli
pop
mov
or
das
jmp
and
pop
sahf
adc
jbe
push
or
add
mov
xchg
mov
std
sbb
xchg
inc
pop
leave
cmp
data16
push
jp
negb
jne
movsb
add
mov
rcll
lcall
lahf
add
and
clc
ljmp
mov
call
jo
mov
push
add
xor
int3
sub
push
in
enter
mov
outsb
stos
sarl
sbb
lods
xor
movl
add
aaa
jp
addb
xchg
mov
add
push
jg
shrb
lods
jo
repz
add
add
add
fs
aad
orb
or
mov
cwtl
pop
pop
mov
fisttps
dec
pop
and
cmpb
int3
add
xor
jle
sbb
add
inc
mov
mov
inc
aaa
lcall
adc
mov
and
add
icebp
push
decl
mov
push
add
sti
in
jle
js
cmc
or
mov
or
sbb
decl
dec
lock
push
push
mov
jg
or
mov
add
jno
and
in
or
shrl
aam
incb
fs
enter
push
jo
add
adc
ret
push
fisubrl
sbb
sbb
xchg
lret
mov
loopne
xchg
adc
pop
inc
xor
sbb
push
sub
data16
adc
icebp
add
jo
inc
std
pop
push
scas
add
mov
push
or
cmp
adc
rorb
mov
or
cmp
add
jo
mov
mov
out
push
call
std
xchg
movsl
mov
adc
or
lcall
and
hlt
lock
bound
mov
lock
push
dec
test
mov
add
or
inc
push
mov
mov
fiaddl
sub
enter
or
add
enter
mov
cltd
shlb
cld
add
adc
jno
pop
std
or
sbb
sbb
jae
pop
adc
pop
xchg
es
mov
dec
pop
jle
aaa
mov
pop
ds
jl
mov
adc
dec
aad
ja
mov
lods
jle
push
inc
inc
mov
push
hlt
jg
mov
je
adc
mov
out
add
inc
ret
fwait
mov
cmp
rolb
mov
insb
pusha
push
arpl
push
add
push
stos
jo
push
mov
jb
add
mov
cmpl
lea
inc
inc
fiaddl
les
repnz
outsb
dec
adcl
or
in
push
jbe
sub
in
xorl
insl
testb
push
pop
cmp
fidivrl
xor
pusha
sub
adc
or
movsl
push
xchg
mov
or
adc
out
ficoml
sbb
add
adc
jl
cltd
and
imul
test
inc
movups
test
leave
push
inc
xchg
push
cmp
add
xor
lcall
fdivr
add
xor
jmp
lods
mov
mov
jbe
jb
xchg
mov
add
xor
xchg
cmp
orb
ret
jb
inc
or
addl
push
push
and
cmp
cmp
std
test
ss
cmpsb
push
xchg
xor
xor
adc
icebp
inc
add
inc
lods
or
jge
test
ror
xorb
test
sbb
push
repnz
xor
or
mov
ret
fidivrs
push
or
ss
dec
sti
shlb
add
add
clc
dec
in
rolb
pop
and
add
jo
movsl
fimull
mov
mov
dec
mov
movb
je
test
sub
loopne
mov
cmp
std
filds
pusha
inc
mov
call
cmp
push
pop
xchg
sbb
in
pop
sub
roll
int3
cli
push
dec
cld
into
lcall
nop
fistl
pushf
js
add
loopne
bound
cmp
sub
jnp
std
push
cld
je
xor
imul
mov
aas
cmp
sub
pusha
jle
fucomi
popf
cmpb
stos
outsl
xchg
ret
add
shlb
mov
xchg
pop
mov
add
les
add
and
rclb
jbe
mov
sbb
rolb
inc
xor
sbb
cld
out
sub
ret
inc
je
call
pop
cld
cli
shlb
push
shrb
push
sub
adc
das
rclb
adc
sub
out
aas
sbb
or
and
mov
pop
and
ret
pop
mov
inc
or
lds
shrl
mov
mov
mov
outsl
adc
shlb
sbb
rol
outsl
pop
mov
or
push
push
aad
xor
pop
inc
divl
movl
cmp
push
fsubrs
pop
mov
or
jae
or
sbbl
xchg
xchg
add
xor
data16
sub
pop
pop
scas
incl
cs
xor
cmpps
cmp
mov
lods
icebp
add
popl
sbb
sub
mov
adc
push
call
filds
dec
jl
outsl
xchg
pop
inc
rorb
shll
icebp
in
lock
pop
inc
in
push
push
stos
fcoms
insb
cltd
cmpb
sarb
sub
sbb
in
push
sub
clc
jp
icebp
mov
jbe
aam
cld
add
loopne
lcall
jle
mov
pop
cmp
test
mov
mul
sbb
jecxz
test
push
xchg
mov
adc
add
fs
push
and
aam
nop
pusha
xor
push
mov
in
out
jl
sub
pop
mov
push
push
xchg
loopne
dec
add
cmp
test
aam
add
sbb
ret
rolb
push
jo
cmp
stos
cmp
stc
call
cltd
sub
add
out
cld
add
add
xor
lods
and
dec
lret
decl
sbb
adc
loop
lea
cli
mov
and
cli
push
loopne
movb
outsb
iret
loopne
loopne
add
je
add
mov
call
dec
cmp
aad
jb
in
push
pop
lret
aam
adc
popa
add
push
and
pop
mov
loopne
mov
add
add
cld
cs
loopne
or
inc
add
dec
mov
call
js
mov
cmp
jl
push
push
shrb
lock
test
je
pop
dec
mov
and
cmpsb
test
and
ss
push
ljmp
sbb
sub
rol
xchg
fmul
pop
push
sbb
lds
or
and
aam
outsl
sbb
xlat
push
jecxz
ss
sbb
adc
pop
fprem
or
loope
adc
int3
cld
sbb
cmp
or
popa
pusha
sub
jl
or
jne
mov
mov
mov
outsb
add
push
lock
dec
sbb
ret
add
ljmp
andl
mov
jb
cmp
ja
or
cmp
dec
orb
mov
ss
loope
nop
sub
mov
add
push
or
ss
loop
pop
sbb
adc
inc
mov
push
std
pop
push
push
mov
test
ds
loopne
push
test
pop
ljmp
bound
leave
mov
push
sub
scas
mov
adc
insb
inc
add
clc
in
jle
test
call
mov
lret
pusha
pop
xchg
push
fnstenv
push
loop
jmp
clc
insb
stc
pop
mov
pusha
dec
push
add
movsb
loopne
mov
sbb
pop
jae
nop
cmp
pusha
pop
loopne
push
inc
add
sbbb
xchg
ds
leave
call
mov
add
in
sbb
pop
and
mov
add
mov
push
lods
or
sub
or
cli
or
iret
loop
pop
and
je
popa
inc
lock
and
push
test
gs
adc
xchg
push
mov
loope
bound
or
adc
loopne
fdivs
or
jecxz
loope
movsb
xlat
loopne
add
loopne
cmp
xor
mov
dec
add
push
pop
icebp
ljmp
jbe
mov
pusha
push
in
loope
push
in
mov
and
ret
push
loopne
cs
in
cmp
cmpsb
loop
xor
push
push
and
pop
hlt
fisttpll
aam
and
cmp
push
pop
dec
push
nop
in
add
push
add
inc
jle
out
das
sub
xchg
dec
cmp
imul
adc
push
adc
mov
adc
sti
adc
aaa
call
sbb
sub
push
lock
sbb
dec
aas
add
or
jbe
and
xor
mov
jmp
jl
cmp
les
push
add
es
mov
mov
daa
cmpsb
adc
loop
and
popa
insb
push
adc
add
fsubs
xor
mov
push
dec
inc
jbe
jle
sub
rcrb
mov
ljmp
add
ja
jb
add
xor
or
aam
push
sub
repnz
or
or
or
xorb
bnd
lret
xchg
xor
adc
fdivr
rorb
decl
push
cmp
mov
add
dec
repz
adc
sahf
aam
aaa
push
jae
mov
scas
daa
jb
sub
sub
push
les
push
mov
mov
or
rol
enter
jo
and
xchg
outsb
out
or
dec
mov
or
and
pop
adcl
inc
cmpb
push
inc
add
sbbl
notl
sub
mov
jne
dec
mov
push
lea
movsb
and
push
mov
fcmovbe
aaa
les
jo
add
push
pop
fsubrs
or
mov
inc
cld
test
mov
adc
pop
lock
inc
mov
jnp
cld
mov
movb
aad
and
jo
and
nop
jo
aad
repnz
jmp
sub
adc
cmp
push
inc
push
and
jo
test
lock
sub
call
push
push
call
or
inc
call
es
insl
jo
mov
or
les
mov
test
jo
lea
mov
js
xchg
enter
xchg
mov
mov
push
push
inc
mov
jp
mov
xchg
data16
cmpb
lock
data16
jg
xchg
push
push
call
push
pop
fstps
pop
shll
pop
mov
xchg
pop
and
arpl
cmpl
mov
add
push
bound
ficoml
push
sub
push
repz
xor
rol
mov
setne
clc
or
loop
push
js
add
and
sbb
movb
pop
mov
mov
fcompl
jle
jb
movsb
lods
rcrb
sahf
mov
pop
add
scas
push
mov
ja
or
mov
adc
push
or
lock
jl
stos
sub
ret
fdivrs
loope
popa
add
ja
pop
push
and
and
and
jo
mov
pop
push
lock
cmp
rolb
scas
mov
shrl
bound
ja
pop
inc
hlt
inc
pop
call
imul
lock
dec
in
aaa
push
clc
inc
mov
pop
adc
dec
pop
lock
js
jne
scas
and
pop
stos
jo
add
mov
add
mov
pop
call
xchg
sti
jp
insb
push
das
enter
call
sbb
xor
lock
sbb
sub
call
adc
pop
addb
cmpb
add
scas
pop
add
test
cmpsb
add
mov
es
adc
cmp
adc
sbb
js
add
ja
testb
jl
xorb
shrl
xor
mov
or
jg
sub
test
testl
testl
inc
pop
incl
push
add
add
ss
clc
cmp
push
add
push
mov
xorl
xor
push
lock
ss
sbb
test
sbb
aaa
jne
sub
lods
inc
loop
mov
out
pop
and
lcall
call
mov
in
add
fdivs
inc
adc
adc
test
fnsave
xchg
lock
pop
sub
mov
xor
jo
or
mov
testb
push
pushf
in
mov
or
sbb
lock
je
call
xchg
inc
addl
stos
xor
sbb
loope
sarb
adc
outsl
cli
or
sbb
jg
adcl
incl
shll
pusha
xchg
inc
push
jo
push
pop
lock
fcoms
sbb
add
lcall
add
jg
in
add
push
xchg
pop
jae
or
mov
lock
xchg
aaa
pop
pusha
sbb
rorb
aaa
and
sar
xor
loopne
dec
lods
add
loopne
dec
fmuls
add
daa
test
lods
mov
jne
mov
add
push
adcl
loope
mov
adc
inc
loope
mov
jbe
test
mov
decb
scas
movsb
test
push
mov
dec
mov
mov
int
insb
push
rorl
mov
shl
or
loop
ss
scas
es
jb
rolb
or
es
mov
jbe
xorb
jne
jge
sbb
inc
add
sbb
mov
pop
or
xchg
mov
test
inc
sbbb
jge
adc
movsb
jne
adc
pop
adc
sbb
or
xchg
or
adc
data16
jne
call
add
hlt
imul
fldl
outsl
adc
adc
or
jo
test
filds
push
mov
mov
aas
xlat
out
mov
adc
jb
or
pop
mov
jb
xor
add
ss
in
ss
inc
sbb
xchg
call
test
inc
jne
cs
or
add
push
mov
mov
pop
xor
in
dec
or
jmp
lock
bnd
pop
add
xchg
add
int
and
jecxz
ds
lock
aam
mov
decl
fdivrl
push
fs
adc
jbe
adc
mov
cmc
incl
mov
bnd
jl
nop
pusha
jg
cmpb
cld
wrmsr
or
pop
push
icebp
ret
add
jb
sbb
sbb
add
xor
fadds
and
ja
decb
fs
icebp
repz
push
or
je
push
es
or
push
push
jl
sub
mov
cli
adc
rolb
push
add
adc
mov
adc
pusha
inc
push
xor
mov
movsb
add
ret
mov
or
xor
stos
lea
pop
insl
sub
push
push
outsb
sub
stc
add
add
cmp
push
cwtl
xor
je
arpl
aaa
fimull
pop
mov
jle
push
add
les
aad
cmp
mov
xchg
in
ljmp
jle
insb
mov
add
cli
or
adc
nop
fsubl
fucomi
mov
add
pusha
int3
mov
arpl
in
lock
shlb
or
outsl
adc
pop
nop
push
sbb
mov
pop
or
adc
inc
push
inc
pop
insb
lods
inc
jl
jo
jbe
sbbb
mov
add
das
lea
sbb
mov
push
decl
cld
ret
faddl
mov
cmp
ljmp
adc
js
push
jmp
jg
cmpsb
rclb
pop
add
fwait
mov
lahf
mov
stos
mov
mov
xor
cmpsb
cmp
push
or
xchg
andb
dec
dec
sub
mov
mov
and
test
and
xorb
roll
ret
dec
fcomip
mulb
push
jb
cmc
cmp
mov
xchg
cli
mov
and
inc
push
cld
test
push
and
dec
xor
pop
ljmp
dec
push
sbbb
mov
push
mov
clc
or
xchg
adcl
inc
and
das
mov
pop
sub
sub
mov
cmp
clc
xchg
lods
pop
xchg
andl
stc
sub
sub
js
pop
test
ret
andb
pop
inc
stos
dec
adcb
sub
lcall
jl
inc
in
push
sbb
add
jo
sbb
xchg
pop
cmc
jg
pusha
jne
fs
add
rolb
push
and
call
mov
ljmp
sbb
stc
push
nop
rolb
shlb
subb
mov
pop
or
movsb
jle
ret
push
enter
ja
jmp
push
ljmp
mov
mov
sub
or
add
sub
and
jmp
cmp
adc
or
ds
inc
js
in
xchg
fimuls
adc
inc
sbbb
add
mov
ror
add
xchg
outsb
inc
pop
dec
xchg
arpl
ret
negb
mov
outsb
adc
add
jae
fadd
push
clc
push
mov
into
xchg
es
rorb
dec
cmp
adc
pop
or
fcomps
push
cld
pop
pop
push
add
push
pop
and
js
ret
pusha
add
ja
repnz
fs
test
jae
pop
mov
inc
mov
mov
mov
cmp
dec
cmp
rolb
test
or
push
inc
lock
jmp
mov
cli
pop
lcall
adc
test
cld
mov
arpl
lock
loop
pop
mov
jg
cmpsb
xchg
xor
or
inc
push
adc
call
or
or
sub
scas
roll
clc
sbb
sub
fisubs
rclb
fcmovnu
or
mov
add
shlb
movsl
rorb
mov
or
fildl
pop
pop
jne
fisttpl
loopne
fnstcw
or
loopne
pusha
jmp
add
test
add
pusha
push
jmp
aam
inc
les
and
in
aaa
daa
add
and
dec
jl
xor
lods
xchg
in
jg
or
fucom
push
loope
leave
orb
loopne
dec
cld
imulb
or
addr16
mov
push
inc
aaa
push
jo
add
and
adc
and
and
data16
dec
addr16
test
loopne
cli
outsl
cmp
mov
jmp
into
or
loopne
mov
jp
dec
loopne
xchg
mov
jb
xlat
and
je
scas
jp
or
call
ja
mov
das
ss
loopne
outsb
leave
add
ss
jle
jle
jl
xchg
loope
loopne
je
test
je
xchg
jb
dec
jmp
xchg
push
or
or
adc
pop
stos
mov
add
lcall
les
add
call
sub
adc
add
sarb
nop
fucomp
push
loop
shrb
adc
inc
loopne
mov
clc
pop
inc
mov
push
or
pop
cmp
dec
sub
or
xorb
xorb
sbb
pop
test
sbb
push
xor
cltd
push
push
sbb
xor
sarb
pop
mov
pop
loop
ret
loopne
inc
or
mov
sbb
rclb
ljmp
pusha
jp
pop
or
cmc
jecxz
popa
outsl
push
jmp
dec
sub
ds
and
xor
push
and
loope
sbb
adc
clc
mov
inc
cli
pop
cmpsb
adc
call
movsb
mov
pusha
pop
stos
add
mov
adc
daa
fsubrs
pushf
bound
out
push
push
adc
mov
mov
add
xchg
pop
xchg
js
call
mov
outsb
adcb
fstpl
std
pop
pop
or
mov
and
leave
adc
mov
xchg
mov
loopne
lods
or
push
push
scas
loop
push
subb
pop
push
mov
f2xm1
loopne
pusha
scas
or
and
jl
fs
jbe
fdiv
loope
jmp
pusha
lret
fidivrl
test
hlt
dec
lods
or
andl
lds
dec
add
dec
jge
pop
push
push
jb
push
dec
push
push
inc
mov
ljmp
incl
ss
cmp
pop
mov
aam
mov
shrl
clc
xor
dec
je,pt
sub
loopne
and
repz
clc
test
xchg
add
loopne
jbe
or
push
jmp
and
popa
or
xchg
mov
mov
call
je
loope
pop
adc
mov
lock
mov
lcall
fisttpl
lock
inc
cwtl
jl
pop
mov
add
and
dec
pusha
dec
hlt
adc
orl
aam
add
inc
push
loopne
testb
in
mov
mov
jb
inc
ret
ja
or
pop
loopne
inc
inc
ds
push
pop
loopne
jecxz
mov
loopne
inc
outsl
lea
add
dec
call
mov
xchg
test
es
call
arpl
dec
xchg
add
lock
call
call
daa
add
dec
std
addb
hlt
lock
dec
cwtl
sbb
les
adc
mov
and
inc
jmp
adc
mov
mov
pop
iret
mov
push
sbb
xor
push
nop
popa
or
mov
xor
mov
xchg
adc
push
jo
gs
fcmove
adc
daa
and
lock
cmp
and
pusha
pop
add
cld
jg
test
push
add
incl
cmp
sbb
lock
ljmp
out
or
add
sti
inc
add
mov
add
insb
pop
add
add
in
loop
fbld
ja
or
mov
adcl
js
sub
test
ss
push
mov
dec
add
xchg
and
push
mov
ret
outsb
js
int
incb
jo
mov
je
cmp
bound
loopne
pushf
ljmp
and
popa
rolb
mov
addl
je
jl
mov
mov
cmp
ja
enter
imul
add
mov
aam
dec
dec
cmpsb
jle
push
repnz
jo
pop
adc
add
lock
sbb
push
je
or
aaa
hlt
je
push
fwait
mov
sub
adc
or
popa
ficomps
adc
dec
addb
xor
popa
stos
dec
clc
andl
int3
mov
xchg
push
aaa
movsl
add
cmp
sbb
test
xor
rol
ret
jo
add
push
and
pusha
sub
mov
jae
sub
scas
ljmp
cltd
outsb
mov
sub
inc
pushf
xor
test
cli
pushl
mov
add
pop
or
pmaddwd
mov
mov
xchg
sub
mov
jo
inc
xor
cmp
lea
dec
test
sub
lret
adc
adc
mov
ja
outsl
or
leave
mov
xchg
je
lock
int3
add
mov
add
and
dec
incb
pop
xor
add
and
adc
fsubr
mov
icebp
outsl
pop
fdivl
mov
jecxz
out
pop
test
ja
adc
add
push
push
push
pop
and
mov
fbld
add
or
add
xorb
lcall
out
loopne
inc
add
int3
add
or
outsb
inc
jg
xor
push
ficomps
pop
xor
lock
imul
clc
pop
or
sbb
jne
jo
jmp
jno
or
inc
js
xlat
fisubrl
dec
fcoml
inc
mov
mov
and
push
ljmp
inc
mov
jb
daa
jbe
jns
movsb
call
lods
sub
sbb
or
pushf
xchg
cwtl
dec
pop
aaa
or
or
je
pop
in
inc
call
xor
mov
dec
cmp
bound
lea
xchg
rol
push
mov
out
decl
lea
mov
fimull
icebp
inc
sub
or
out
add
push
push
or
jo
jmp
mov
call
cmp
adc
jp
lods
sbbl
xchg
jle
jg
adc
out
mov
and
adc
mov
sar
mov
push
mov
xor
xor
inc
add
add
loopne
je
dec
xor
xor
rcrb
xor
testl
inc
shlb
test
cmp
fdivrp
sub
xor
jbe
std
int
push
pushf
out
lock
or
mov
cmp
push
sub
mov
xor
pop
xchg
nop
fsubl
into
icebp
lret
xor
fcompl
inc
dec
inc
outsb
mov
xor
add
add
lods
mov
les
lock
mov
outsb
ljmp
dec
xor
and
clc
pushl
add
pop
xchg
cld
loope
je
mov
into
push
pop
cli
adc
mov
xchg
xor
pushf
cld
mov
adc
hlt
jnp
inc
mov
pop
xor
int3
inc
mov
jb
dec
decl
je
inc
sbb
push
je
push
dec
push
cld
pushl
mov
cld
fadds
clc
adc
je
xor
xor
xor
lret
pop
add
call
and
xchg
hlt
xorb
fmuls
insl
sub
xchg
mov
lock
mov
add
jle
adc
xor
sub
jno
xor
aad
enter
fistpl
xor
je
and
sbb
fmull
push
movsl
icebp
sub
fidivs
adc
cld
sub
into
pop
cmp
lock
cwtl
out
and
add
add
inc
out
push
pop
shrb
add
repz
lods
xor
jecxz
and
ror
incl
sarb
add
nop
cmpsb
clc
inc
mov
mov
je
incl
push
jbe
push
adc
iret
add
cmp
add
aam
ret
xor
jo
mov
push
pop
or
fidivrl
and
or
add
dec
jo
mov
jmp
jo
sbb
jo
jmp
mov
xor
push
jl
sub
jno
cmp
jo
adc
and
sbb
shrb
lock
clc
movups
push
cld
mov
sbb
or
in
xor
or
orb
scas
movb
inc
mov
or
add
inc
or
clc
cld
jg
pop
mov
or
ljmp
inc
test
or
cmpsb
jg
pop
jo
push
push
into
and
loope
cmp
push
mov
clc
ja
pusha
lret
mov
fsubrs
decb
loope
je
ss
mov
inc
mov
inc
sbb
cbtw
jo
sbb
pop
out
pop
into
sub
cmpl
cwtl
lcall
orb
and
psraw
ret
fdivr
push
inc
push
sbb
push
mov
push
push
push
add
sbb
sahf
adc
shll
add
add
int
push
adc
add
mov
cs
jmp
cmpsb
test
lret
pop
xchg
push
fucomi
test
add
nop
add
in
in
add
add
insb
add
or
repnz
or
sub
mov
notb
cwtl
jbe
stos
inc
sub
sub
xor
rclb
add
test
push
lods
fwait
dec
inc
psubw
adc
push
rcll
mov
mov
lods
test
inc
push
mov
cmp
leave
cli
push
add
les
fdivs
cmp
xchg
mov
and
add
js
mov
adc
add
jl
mov
cmc
call
push
dec
add
xorl
mov
adc
push
call
pop
test
add
push
std
push
daa
clc
push
adc
lret
lcall
mov
pop
adc
and
outsl
or
add
sarb
sub
in
pop
leave
cmp
sbb
adcl
add
pop
sbbb
bound
movsl
add
decl
test
cmpsl
orb
cmpsb
add
aad
pop
lock
pop
jns
and
and
push
add
popf
in
xchg
or
and
add
push
or
out
mov
rclb
add
sbb
cmp
scas
xchg
shlb
and
in
mov
test
or
adc
mov
fistpl
push
adc
mov
jae
lds
push
push
testb
mov
jg
mov
rcrl
shlb
mov
rolb
in
mov
xchg
add
pop
add
pop
decl
js
nop
rorb
rorb
popa
push
adc
mov
adc
scas
repnz
pop
sbb
jge
or
mov
add
add
jno
mov
xlat
ret
push
rolb
ret
cmpb
add
movsl
test
add
call
addr16
rcrl
mov
outsb
add
adc
xor
and
cmp
hlt
xchg
add
insb
push
lock
aam
fisttpll
ret
add
cmp
dec
xchg
pop
je
or
and
sbb
shlb
lock
xor
pop
outsb
jge
lock
push
push
and
mov
lcall
shl
call
jl
add
push
pop
in
outsl
rcrb
jl
jecxz
or
adc
jbe
ds
arpl
or
shlb
fadds
js
out
or
insb
iret
rorb
dec
enter
out
mov
jmp
mov
dec
pop
rcl
pushl
xor
lret
ljmp
jle,pn
push
test
dec
push
enter
outsl
adc
add
xor
adc
jbe
adc
dec
lcall
and
sub
loopne
mov
mov
pop
add
ja
mov
mov
xor
xor
cld
inc
add
std
ljmp
mov
pop
pusha
inc
scas
loopne
pusha
sub
inc
pop
add
mov
mov
mov
pop
clc
pop
pop
es
nop
add
mov
incl
add
cmp
or
xor
in
lea
pushf
adc
mov
clc
jp
sbb
inc
xchg
push
add
shlb
out
xchg
push
dec
push
adc
mov
sbb
mov
ljmp
out
dec
dec
cld
mov
aas
lcall
xchg
loope
sbb
add
insb
clc
fstpt
and
and
pop
std
pusha
sub
jg
pop
xor
test
jne
roll
add
cmp
adc
or
insb
sbb
stos
dec
adc
outsl
or
enter
test
repnz
sarb
int
or
jp
and
jle
sbb
mov
cltd
add
pop
push
cmp
xor
loopne
cmp
add
outsb
sub
aad
pusha
bound
adc
sbb
faddl
pop
xchg
mov
lcall
push
adc
orl
push
test
nop
cmp
adc
and
scas
mov
pop
push
es
loopne
out
mov
inc
fisttpl
add
cmp
pusha
pop
jo
call
repnz
push
inc
jl
popa
adc
inc
cld
into
cvttps2pi
xor
mov
bound
fwait
popa
cmp
jae
test
sub
cmp
cmp
data16
dec
loope
push
and
pop
sub
lea
pop
adc
cld
or
pusha
push
pusha
or
mov
test
pop
xor
jmp
push
mov
mov
xor
daa
mov
jg
jle
or
popa
inc
loope
pushf
ss
jmp
jmp
xor
cmp
lock
add
loopne
sub
aam
call
mov
ret
pop
adcb
repz
adc
mov
decl
jb
sbb
loop
loopne
fadds
cmpsb
inc
add
and
push
mov
mov
jbe
in
lcall
adc
vmwrite
pusha
lahf
fsubl
or
call
loope
pop
mov
mov
loopne
fsub
pusha
lods
push
and
js
arpl
push
mov
sbb
testl
lock
jp
cmp
xchg
loopne
ret
rcrb
in
push
push
outsb
inc
push
push
or
xchg
loopne
xor
push
call
mov
and
clc
incl
add
test
arpl
cmpb
adc
ret
add
sbb
xor
popa
xor
imulb
fisubrl
inc
lret
pop
adc
aaa
dec
lret
add
inc
scas
add
sub
push
cmp
jge
lods
call
lods
sahf
mov
rclb
dec
cmpb
mov
lea
lds
adc
cwtl
xor
inc
pop
cli
add
clc
push
xchg
addb
jo
in
daa
notl
cmp
add
ret
fisttps
std
das
adc
pusha
sub
push
xor
aaa
or
xor
mov
add
es
arpl
fadds
cmp
jle
rolb
add
lods
and
pop
lret
dec
cmc
add
call
xchg
out
jb
test
push
mov
sub
sbb
pushl
sbb
lods
call
sti
aam
sbb
jns
inc
repz
jne
jg
pop
push
out
jno
push
add
push
jb
cmp
fldt
sti
orb
rolb
nop
push
xchg
mov
out
inc
add
int3
xor
mov
call
aam
adc
sub
xor
ja
leave
jl
sub
mov
fs
adc
xchg
adc
shrb
ds
pop
inc
cmp
and
addr16
out
int3
mov
ss
xor
sub
outsb
sub
and
idiv
lret
jbe
push
js
jno
shrb
adc
xor
ss
rolb
push
cmc
mov
jno
ja
pop
mov
jb
cmpsl
lret
rcr
scas
push
leave
jo
jno
in
test
mov
sub
pop
mov
sbb
inc
arpl
popa
shl
mov
push
jo
xor
jo
dec
pop
mov
inc
inc
jo
cli
xchg
subl
mov
pop
pop
jl
fsubs
lock
dec
adc
sbb
aaa
shll
or
or
outsl
adc
inc
inc
test
mov
cld
and
fwait
btr
add
inc
adcl
shll
mov
les
repz
xor
adc
pop
rcrb
nop
mov
call
jo
pusha
fidivs
xor
lock
add
push
ljmp
jge
mov
mov
pop
push
pushf
push
inc
push
push
jg
and
sbb
pop
ljmp
inc
sub
repz
icebp
jo
aam
inc
outsl
data16
jno
cmp
jl
and
inc
pop
fs
xor
ja
js
mov
or
xchg
outsl
adc
jo
pushl
inc
jno
xchg
and
push
push
mov
and
lods
add
das
pop
jecxz
sub
adc
cmp
movsb
pop
cmp
and
orb
incl
pushl
test
lahf
jo
adc
dec
inc
xor
pop
cltd
lods
and
movsb
cmc
and
ss
je
int
jg
xor
mov
cmp
lock
adc
mov
pop
xor
lcall
jo
inc
mov
orl
pop
add
xchg
lock
test
std
sub
push
lock
xor
lret
call
repz
push
aam
add
pop
or
sub
outsb
js
dec
push
push
sbb
test
ja
mov
fs
inc
mov
xor
lods
or
push
or
cmp
sub
ret
push
cmpsl
push
xor
stos
movsb
outsl
or
xchg
orb
lock
je
push
cmpb
sub
lock
outsb
add
mov
xchg
or
mov
jmp
test
call
adc
jmp
mov
xor
lock
add
push
pop
and
mov
adc
dec
cltd
pop
push
data16
fwait
or
int3
add
jo
and
jg
lock
es
jo
sbb
add
lock
cmpb
mov
inc
jg
add
outsl
test
push
test
jg
push
lea
mov
xchg
sub
pop
insb
icebp
push
imul
push
xor
xor
xor
xchg
icebp
call
ljmp
adc
enter
out
or
dec
les
roll
loopne
inc
xor
or
push
push
cwtl
mov
mov
data16
pushl
or
xor
aaa
xor
xor
sub
jmp
test
sub
dec
shl
lock
sar
push
xchg
jo
sub
popa
jo
gs
jmp
lock
cmp
mov
lock
cli
and
adc
push
outsl
subb
jo
jbe
pop
push
in
push
xor
test
pop
and
sub
filds
jb
gs
cs
pop
inc
mov
scas
mov
jg
push
jb
mov
pushl
jns
ss
dec
adc
aad
dec
int3
add
mov
pop
ljmp
add
shlb
xchg
lea
pushf
cmc
call
lock
jo
fildl
cmp
insb
mov
hlt
add
xor
and
push
mov
fbld
push
push
cmp
divb
pop
fucomip
les
gs
or
push
xor
and
push
stc
and
push
ret
call
add
sahf
or
add
nop
push
ret
mov
pop
loopne
jl
adc
mov
cmp
cmp
in
loopne
push
sub
dec
scas
push
xor
push
mov
sbb
fwait
mov
std
lds
mov
pop
and
repz
loopne
or
aas
push
call
jmp
lock
pop
sbb
pop
pmuludq
or
rolb
xor
pusha
add
and
sub
or
jae
xor
sbb
mov
icebp
pop
das
fs
loop
pop
adcb
push
add
js
inc
mov
sub
rcr
and
ljmp
enter
aaa
cld
mov
cmp
fdivs
adc
popa
jnp
lock
in
adc
cld
sub
test
adc
xor
fs
je,pn
lods
lea
ljmp
push
loop
js
xor
int
sub
mov
add
cwtl
adc
add
mov
pushl
cmp
inc
je
clc
cmp
mov
arpl
jmp
jo
jecxz
je
in
push
cmpsb
das
jl
jno
stos
repnz
jg
fdivrs
shll
push
adc
insb
or
jmp
ret
xorl
jo
lea
mov
inc
push
icebp
jbe
pop
call
pop
and
sbb
mov
testb
arpl
je
or
inc
jo
cmp
lods
mov
mov
inc
dec
mov
je
add
les
ret
push
pushf
mull
pop
push
inc
mov
xor
add
sbb
arpl
outsb
ret
fucomi
or
pop
andl
jle
mov
repnz
mov
xor
rolb
add
or
jno
test
dec
jp
adc
push
clc
es
add
or
push
movsb
jne,pt
sbb
pop
mov
insl
inc
lds
push
add
push
in
mov
jmp
and
sbb
add
jns
jo
push
adc
mov
inc
sub
mov
icebp
movsb
je
dec
jne
mov
scas
push
je
pop
xchg
mov
add
or
aam
add
push
loop
pop
push
cmp
adc
add
inc
cld
testb
pop
add
adcb
jne
add
xor
lret
ljmp
or
ret
mov
sbb
add
sub
in
fstpl
lcall
and
push
push
jnp
subb
mov
and
push
int3
rorb
or
nop
xor
jecxz
dec
pop
dec
cwtl
inc
repz
adc
and
imul
sbbl
lock
inc
ret
cmp
jb
lock
andb
pop
xchg
inc
ja
jecxz
dec
cwtl
nop
dec
add
xorb
fs
sbb
cmp
sub
or
and
div
outsl
pop
fsubrs
adc
push
call
sub
pop
dec
cmp
mov
lods
std
sti
je
mov
xor
icebp
cmp
aaa
repnz
push
add
cmp
add
pop
mov
cmp
xchg
add
les
rorl
mov
aas
xor
shlb
jnp
mov
cs
mov
add
imul
push
and
pop
sub
test
or
mov
jns
jbe
add
rorl
adc
dec
sbb
clc
fwait
pusha
add
pop
rorl
into
ja
xor
ror
ret
sbb
or
pop
cmp
mov
adc
inc
pop
add
adc
test
aas
hlt
push
popa
push
ljmp
icebp
aaa
rol
jno
inc
pop
mov
mov
lcall
cmc
add
lea
jb
xor
add
jmp
or
push
push
push
push
jle
ret
add
js
icebp
aaa
push
pop
addl
jne
adc
add
and
ret
xchg
inc
push
dec
jo
pop
inc
jl
pop
ret
pop
inc
add
dec
addr16
xchg
xchg
shlb
sub
movsb
push
std
rolb
shll
dec
adc
add
faddl
adc
sbb
inc
in
incl
add
jl
sub
mov
pushf
jle
jp
inc
inc
adc
xor
fbstp
add
add
mov
or
add
data16
push
cltd
xchg
nop
pop
mov
cmp
aaa
dec
jo
jne
rcl
or
les
sbb
and
in
add
dec
rclb
xor
call
sbb
jle
call
push
mov
shl
ret
test
in
repz
push
sub
rorb
push
dec
sub
cmp
lret
rclb
dec
push
pop
pop
add
dec
adc
push
sbb
add
jbe
je
and
mov
dec
cli
pop
outsl
mov
gs
js
hlt
in
lods
loopne
sbb
lock
mov
outsl
sbb
cmp
lar
jno
jmp
cltd
je
in
arpl
cld
add
jl
sbbl
scas
cmp
loope
sub
and
cmp
inc
lods
add
or
loop
mov
pop
loope
cmp
adc
push
jmp
push
test
call
mov
xchg
xchg
xchg
adc
popa
sub
mov
xchg
cli
nop
pusha
por
or
into
loopne
sbb
add
cs
jnp
sub
loopne
add
sub
pop
or
pushf
sub
lods
cmp
mov
mov
mov
fidivrl
adc
jbe
pop
sub
loopne
or
push
mov
xchg
sbb
add
mov
lahf
ss
fdivs
xor
test
loopne
push
int3
mov
es
mov
or
cli
decl
movsb
sti
jmp
loope
and
mov
lcall
repz
lcall
movsb
xchg
cmpsb
test
adc
loope
lods
addb
sahf
jle
scas
addl
lods
add
divb
dec
push
lods
add
vmwrite
sahf
pusha
dec
scas
fadd
mov
ja
mov
loopne
popa
xor
movsb
in
bound
jb
add
jg
loopne
mov
jg
loopne
jne
sbb
pop
mov
ret
adc
add
insb
sbb
loop
cli
cmp
fadd
push
loopne
call
dec
loope
adc
jg
adc
sbb
jmp
inc
pop
aaa
inc
pusha
push
pusha
pop
es
out
xor
xor
lock
dec
jbe
pusha
inc
add
adc
lock
pusha
cmp
loop
ss
or
push
lcall
and
mov
pop
dec
mov
xchg
mov
pusha
add
or
push
loopne
adc
fs
and
cmp
bound
or
add
movsl
pusha
inc
adc
xchg
lahf
mov
mov
ljmp
jbe
or
dec
addl
jbe
jp
adc
xor
fwait
or
cwtl
loopne
or
movsb
push
test
push
outsb
call
mov
adcl
ljmp
clc
das
bound
pusha
jecxz
addr16
pusha
xor
loop
in
inc
ljmp
sti
pusha
daa
or
push
pusha
xor
push
clc
mov
pop
aam
ret
int
pusha
xor
loopne
loopne
push
adc
add
cmp
loopne
mov
pushf
pop
xor
popa
add
add
lcall
pop
mov
lea
dec
fsubrs
test
and
scas
xor
cmpsl
inc
ds
mov
xor
mov
lock
mov
add
sbb
dec
cli
jo
xchg
inc
adcb
sub
pushl
adc
or
add
incl
and
mov
adc
insb
in
inc
xor
push
ds
add
hlt
je
shrb
add
add
push
test
adc
jne
in
push
jo
aam
jb
in
jo
jp
call
sbb
inc
xorl
push
sub
rcpps
sub
decl
outsl
or
cmp
mov
xchg
adc
dec
int3
cmp
shrb
dec
lret
aam
mov
push
add
dec
cltd
rol
sbb
les
call
data16
or
inc
fdiv
add
inc
or
pop
add
adc
clc
add
stos
sbb
jbe
fsubs
fdiv
cmp
adc
stos
test
es
lods
adc
cli
or
add
lahf
lock
push
adc
icebp
jo
call
sbb
scas
push
mov
adcb
mov
pusha
adc
rolb
push
ljmp
rolb
mov
scas
movsl
mov
clc
mov
xchg
add
and
add
mov
pop
loopne
push
je
je
cmp
or
mov
shrb
lcall
push
jno
push
or
es
test
cs
jb
pop
xor
or
arpl
sub
adc
add
push
adc
add
or
jmp
outsl
in
pop
add
lock
jmp
movsb
ret
dec
pusha
or
adc
push
popa
jo
or
lock
aam
dec
hlt
stos
jo
int3
add
xor
adc
cli
iret
dec
or
in
out
dec
mov
stos
or
mov
dec
test
push
stos
ret
lret
xor
faddl
and
mov
bound
mov
test
jo
xchg
lret
shlb
cmpsl
inc
fwait
movsl
mov
add
sbb
decl
push
test
cmp
cmp
sbb
clc
inc
adc
aam
ret
out
add
add
push
icebp
pusha
nop
sbb
outsb
sub
xor
dec
add
je
sbb
push
and
fs
push
jb
jo
jg
jo
icebp
or
cmp
or
adc
mov
fs
test
mov
or
je
pushf
icebp
xor
mov
adc
lock
mov
push
push
test
jae
ffree
fists
add
xchg
xor
push
mov
mov
divl
pop
mov
movsb
fiaddl
add
push
push
inc
push
pushf
push
cmpb
mov
and
out
pop
mov
clc
ljmp
aaa
push
dec
add
cmp
mov
dec
jg
jmp
mov
je
cld
mov
add
dec
ds
or
insb
test
pushf
dec
xchg
adc
popa
ss
pusha
jg
xor
ss
into
mov
ret
pop
jl
lcall
divl
rolb
mov
jo
adc
daa
mov
jbe
mov
xorl
cmp
cmp
xchg
rcll
jge
int3
out
add
arpl
inc
call
fsubr
sbb
pushl
jo
pop
jmp
lock
add
in
push
push
xchg
xchg
loopne
push
mov
lock
hlt
hlt
pushf
movsb
cmp
add
lcall
push
cs
inc
sub
or
leave
cld
cmp
mov
adc
in
out
xor
jo
jne
cld
je
mov
or
xor
test
scas
sarb
mov
push
add
sbb
fdiv
jecxz
mov
fsubl
das
test
lock
fiaddl
mov
dec
push
pop
add
and
sbb
pop
cmp
in
adc
ss
and
sub
cs
call
out
xor
mov
clc
or
add
xor
add
xorl
adc
jg
add
je
and
aas
addb
adc
cld
jg
repz
je
and
push
and
adc
jne
test
xlat
jo
mov
sub
push
jo
sub
mov
call
jo
mov
rcrl
add
sbb
mov
push
jo
or
add
adc
ds
cmc
xlat
mov
and
or
ret
or
je
xchg
je
push
add
inc
mov
xchg
in
or
subl
inc
dec
ja
adc
push
aam
adc
inc
shrl
add
ss
push
pop
sub
repnz
adc
lock
rcrb
fcoml
dec
or
or
push
xor
orb
test
pcmpgtb
lock
repnz
inc
aam
push
or
add
lods
adc
incb
rcr
bound
jmp
mov
pop
push
adc
call
add
and
inc
pushw
mov
push
inc
sti
popf
in
divl
xchg
adc
cmp
hlt
fildl
xchg
jmp
into
dec
inc
jo
mov
and
pushf
mov
pushl
push
add
jg
loop
inc
call
in
sbb
inc
adc
test
cli
shr
pop
add
les
mov
mov
jne
lock
filds
xor
inc
cmp
je
cmp
cmp
fnstenv
inc
mov
jl
add
add
insl
cld
pop
push
pop
add
jo
inc
in
mov
aam
lods
pop
jge
subl
movb
les
cs
add
add
adc
adc
jge
add
sbb
sub
add
adc
je
sbb
lcall
pop
jo
inc
movl
out
push
cld
and
addr16
in
bound
add
and
push
add
jne,pn
and
jle
ja
lea
cli
cli
ja
push
add
jne
add
mov
mov
add
loope
dec
jg
cs
sahf
ret
xor
jecxz
push
push
mov
ret
xchg
and
xor
and
push
xor
and
loop
push
pop
xor
mov
rolb
in
xchg
lcall
ficoml
or
lret
lret
pop
pop
dec
push
sub
sarb
imul
inc
push
call
lock
je
icebp
mov
xor
cmp
das
mov
cmp
or
mov
adc
out
add
push
push
add
cwtl
repnz
adc
push
and
loope
testb
les
test
mov
or
cmp
jae
push
lea
loop
jno
int3
mov
movsb
hlt
and
adc
and
sbb
out
mov
add
jge
jbe
push
cld
adc
shrb
adc
mov
insl
test
and
or
rol
rclb
add
je
cmp
mov
adc
ret
push
push
bound
push
cs
test
lods
inc
clc
pushf
adc
add
jmp
and
mov
repz
mov
rclb
cmc
dec
or
pop
and
bnd
add
in
jg
xchg
hlt
add
loopne
cli
or
jb
add
fs
and
data16
inc
dec
or
pop
aad
cld
in
mov
mov
leave
jp
jp
inc
jmp
xchg
test
jb
pop
rolb
mov
cmp
mov
or
mov
push
out
dec
adc
jmp
data16
dec
and
xor
aas
inc
les
lahf
inc
mov
jecxz
les
xor
jbe
cmp
jae
adc
dec
add
call
or
in
fadds
cmp
xor
jns
xchg
jmp
rorb
mov
and
lret
inc
fnstsw
mov
adc
sub
aam
xchg
and
cwtl
mov
jb
call
or
imull
mov
inc
cmp
or
inc
subb
mov
mov
insb
jbe
sbb
movsb
and
mov
ror
sbb
mov
js
mov
call
pop
add
lret
mov
mov
push
adc
ljmp
add
xchg
and
mov
jne
test
je
xor
outsl
nop
pop
cmpsb
inc
call
or
aaa
sub
dec
sbb
or
and
cld
ret
jb
dec
test
dec
or
call
and
bound
inc
inc
rorb
bound
mov
hlt
shll
not
jge
or
aaa
imul
inc
xchg
mov
ficoml
mov
inc
add
out
add
cmp
xor
dec
and
xchg
mov
and
gs
add
pop
push
pop
push
xor
inc
aaa
mov
aas
pop
jb
incl
inc
iret
push
movb
sarb
cmp
call
xor
loope
sbb
cmp
add
and
add
add
lret
cmp
cmp
rcrb
ljmp
cmpsb
neg
in
and
std
or
mov
rcrb
outsb
or
nop
fdivr
jmp
and
mov
js
mov
je
cli
or
lock
insb
add
mov
pop
or
push
jne
push
addr16
shll
test
dec
push
add
int
xor
mov
movsb
inc
sub
adc
jbe,pt
stos
jge
scas
inc
popf
mov
lock
incl
inc
rcrb
aaa
cmp
call
jmp
subb
mov
sub
ja
inc
or
jl
mov
cmp
add
fiadds
or
scas
pusha
push
lods
call
xchg
fucomp
lods
add
pop
aam
sbb
mov
data16
insb
mov
dec
int3
shrb
into
cmp
mov
add
out
sbbl
push
fsubrl
push
and
adc
ficoms
mov
arpl
mov
movsl
cmp
leave
lret
movhps
popl
push
aad
iret
adcb
out
adc
jo
push
and
mov
and
shrl
mov
repz
or
jl
aam
mov
push
icebp
mov
xchg
pop
and
ds
add
sub
mov
adc
xor
outsb
sbb
mov
sbb
std
rcrl
add
mov
cmp
push
out
pusha
or
arpl
lock
adc
and
adc
aaa
pusha
push
cwtl
subb
loopne
rolb
pusha
and
cld
push
mov
fsubs
push
cmp
cld
add
and
cmp
pop
add
iret
sub
or
loop
and
mov
and
loopne
clc
mov
or
push
or
add
pusha
push
or
jo
jl
add
or
inc
xchg
cltd
jecxz
neg
or
icebp
outsl
dec
sub
mov
mov
jbe
sbb
mov
add
and
jb
push
or
sbbl
xor
cli
pusha
jne
and
cltd
loopne
mov
mov
or
jbe
xchg
xor
lock
aas
pusha
jl
lret
sbb
sbb
jo
pushf
test
jge
adc
call
jge
jne
pusha
decb
cmc
and
mov
pushw
xchg
mov
int3
cmp
push
in
mov
inc
add
cs
jne
cmpb
int3
in
add
ret
sbb
loopne
je
shrb
or
push
idivb
push
ret
push
xor
test
adc
arpl
add
loop
lret
cmp
lock
nop
loopne
push
loopne
jo
push
popa
sbb
test
vcvttps2qq
xchg
push
mov
ljmp
loopne
call
adc
add
repz
inc
sbb
lods
sbb
sub
adcb
cmp
lock
test
repnz
mov
out
cmp
mov
add
fbstp
clc
loopne
jecxz
add
push
je
ret
cli
push
xchg
lcall
sub
cld
jl,pt
adc
lea
cmp
jb
push
call
popa
jnp
jb
call
mov
shlb
pop
push
fs
dec
fdivp
call
add
or
sbb
xor
adc
adc
fcoml
add
outsb
mov
sarb
or
push
pop
mov
push
lods
test
add
sub
in
pop
add
in
loopne
test
jl
or
shll
xchg
dec
xor
arpl
and
add
push
dec
inc
insb
lea
xchg
pop
dec
loopne
and
sub
dec
add
data16
incl
push
inc
adc
pop
dec
cmpsb
lcall
ror
inc
xor
cld
xor
mov
insl
push
push
and
push
add
push
add
xor
sub
and
adc
inc
movsb
outsl
mov
push
cli
pcmpgtb
sbb
cmpsb
pusha
ret
add
push
mov
pop
add
sub
and
jle
xor
andl
and
mov
ss
lods
popa
mov
sub
arpl
add
decl
pusha
test
loop
dec
in
push
loope
or
push
add
mov
mov
jg
fcomps
sbb
xor
ja
cli
jo
cmp
mov
jo
jo
test
jo
ljmp
mov
xor
sub
cmp
mov
dec
push
adc
leave
stos
insb
or
lret
fwait
dec
add
push
dec
add
xor
and
jae
mov
xor
stos
pushf
or
cmp
jbe
adc
lods
fimull
mov
idiv
adc
shrb
mov
inc
enter
xchg
testb
mov
add
mov
push
add
sbbb
pop
ja
cli
sbb
xchg
or
mov
inc
pop
add
xchg
or
mov
mov
mov
inc
test
lock
cmp
xchg
jl
or
inc
add
icebp
ljmp
inc
add
sar
xor
lock
jl
cli
int3
mov
in
mov
mov
push
mov
mov
daa
xor
pop
xor
push
call
in
sub
push
or
test
sub
jb
push
xor
jo
sbb
adc
pop
xor
rcrb
and
nop
rolb
dec
inc
add
shrb
mov
and
lea
pop
jmp
inc
dec
xor
push
daa
lock
call
andl
mov
mov
lea
mov
xorl
cltd
shrb
xor
call
gs
inc
adc
xor
pop
add
roll
lods
adc
gs
inc
aam
loop
mov
inc
push
out
or
lods
rclb
nop
add
or
jle
fiadds
jmp
add
and
dec
divl
mov
fisubs
cmpsb
ja
dec
jo
xor
ja
add
repz
inc
push
sub
je
and
add
inc
stos
loopne
xor
mov
jo
divb
push
mov
dec
neg
mov
jne
mov
dec
push
mov
adc
jle
cmp
inc
add
fists
cmp
and
movsb
clc
sbb
add
hlt
dec
sbb
cmp
or
dec
push
or
sub
mov
inc
mulb
mov
sub
cld
jo
add
sbb
mov
leave
push
sbb
je
push
fdivs
lcall
or
inc
lods
pop
add
hlt
shlb
push
test
pusha
mov
adc
or
dec
inc
dec
es
test
jo
push
data16
fcomip
mov
jo
call
jo
loopne
test
xor
mov
jle
mov
test
jp
fiadds
add
fadds
mov
and
rclb
push
push
mov
xor
rorb
call
mov
sti
fisttps
test
or
cld
jo
pop
add
dec
lret
pushl
lea
cmpsl
mov
push
shlb
or
pop
xor
cld
cld
jbe
cld
adc
sahf
arpl
mov
call
jl
inc
push
adc
inc
push
das
fsubs
adc
inc
jo
repz
mov
xor
add
mov
inc
pop
test
cmp
cli
aad
sbb
adc
pop
call
push
jne
repnz
push
sbb
fcmovnu
sub
adc
test
sbb
xor
sub
push
jp
sahf
cmp
sbb
inc
mov
clc
mov
cmp
push
pop
jo
xor
es
dec
push
add
lds
test
mov
pop
repnz
hlt
xor
and
sbb
std
dec
push
inc
insb
lea
test
cmp
mov
xchg
stos
push
inc
in
add
fwait
clc
xchg
or
mov
fsubs
scas
sbb
in
mov
mov
lret
jle
subb
push
ljmp
sub
inc
and
add
imul
push
jno
mov
lock
decl
lock
dec
cmp
jae
cld
jg
test
call
xor
cmp
mov
mov
xchg
loop
and
nop
pop
lods
add
mov
aas
mov
push
adc
sbb
enter
bound
add
mov
inc
adc
jno
js
lods
jo
mov
rorb
adc
dec
or
sub
jo
add
mov
pusha
add
es
push
add
loope
data16
or
pusha
shll
push
test
call
insl
mov
test
pop
mov
data16
iret
bound
sahf
adc
mov
adc
pop
cmc
xchg
in
ret
inc
jo
jno
push
cmpsb
dec
add
scas
pop
mov
test
cs
xchg
aas
lock
adc
pushf
inc
out
mov
cli
cmp
mov
cmovg
pushl
jle
sbb
aam
or
mov
mov
adc
mov
or
call
and
push
xor
repz
or
mov
jb
fbld
add
in
push
inc
jb
fbstp
mov
push
cmp
outsb
lock
mov
ds
and
add
les
hlt
add
jne
mov
mov
fsubs
mov
mov
hlt
das
jb
out
mov
mov
sub
cld
lods
adc
shr
adc
cmpb
icebp
adc
or
pop
es
jmp
enter
cmp
addb
sbb
mov
subb
pop
sub
dec
inc
or
and
pop
push
call
cmp
mov
call
loopne
ljmp
mov
dec
testb
jl
out
je
lret
lahf
les
aam
mov
aaa
add
hlt
xor
or
push
sbb
mov
je
and
adc
sbb
adc
pop
fmuls
outsb
add
dec
cmp
loopne
pop
cmpsb
ret
push
and
xchg
test
fwait
add
hlt
adc
cmpsb
call
loop
add
fistps
call
jo
dec
imul
pop
ljmp
or
pop
movsb
or
jb
inc
add
lock
push
lock
ss
xorl
xor
mov
xor
scas
mov
sbb
add
and
scas
mov
mov
jne
mov
out
or
push
lock
test
scas
clc
add
xor
dec
data16
inc
jo
push
pusha
sbb
push
sub
xor
jmp
inc
pusha
inc
mov
stos
mov
and
adc
mov
fcompp
aaa
adc
mov
add
adc
xchg
inc
add
push
out
push
or
or
or
ret
add
mov
cmp
push
mov
dec
add
add
sbb
fwait
pop
fcoml
xor
les
mov
mov
adc
add
push
fcomps
mov
addr16
rclb
adc
jnp
sub
sahf
dec
ret
aaa
imul
dec
sub
add
push
dec
sahf
pop
dec
or
leave
je
sub
aam
pusha
xor
scas
sub
add
inc
add
outsb
jp
pop
lods
jbe
and
mov
adc
sbb
mov
pop
into
xchg
not
add
or
push
pop
dec
cmpsl
fwait
mov
and
outsb
inc
mov
push
push
mov
lods
call
ljmp
aaa
pop
test
test
pop
les
stos
mov
int
cmp
call
or
mov
lea
notl
adc
adc
mov
call
xor
adcb
jl
pusha
call
xor
or
push
js
xchg
movsb
mov
movl
aaa
xor
test
push
cmp
xor
addl
sub
cwtl
aaa
shll
xor
sbb
push
ret
add
decl
cmpsb
sbb
gs
scas
fcomp
jecxz
mov
ds
cld
or
subb
dec
fnsave
mov
sub
xor
mov
push
add
mov
sbb
outsb
data16
jmp
shlb
or
add
adc
cwtl
inc
add
inc
jl
shrb
xor
dec
bound
jmp
roll
test
inc
and
adc
loope
std
mov
cmp
or
cmp
push
rolb
xor
jmp
test
movsb
add
inc
cmp
sbb
outsb
lods
faddl
mov
push
je
fisubrl
xchg
or
pop
mull
notb
sub
addr16
cmp
add
stc
inc
mov
je
add
sbb
or
adc
add
jecxz
pushf
out
mov
dec
xor
pushf
sub
sti
jg
call
rclb
add
jmp
sub
rorb
push
sub
mov
dec
sti
xchg
or
jg
les
shlb
mov
cmp
les
imul
mov
les
jns
sbb
mov
es
mov
pusha
mov
movzbl
test
pop
pop
loopne
nop
clc
push
loope
cmp
mov
daa
push
add
mov
xchg
xchg
call
je
mov
lock
add
rcrl
clc
or
lea
xchg
insb
pop
add
or
sbb
mov
jb
xchg
and
test
ror
cmp
add
adc
add
mov
mov
cmp
test
sub
mov
xchg
lea
sbb
dec
xor
inc
shrb
addb
adcb
loop
lock
push
adc
mov
inc
mov
lock
scas
xchg
sbb
into
jb
push
imul
and
lock
push
xchg
push
sahf
push
push
add
sub
lahf
adc
mov
hlt
sbb
cmp
pop
jo
mov
mov
call
push
insb
jp
adc
mov
mov
cld
jl
push
cmp
xor
jb
loopne
adc
push
push
sub
mov
aas
and
sti
mov
hlt
push
je
xor
add
sbbl
mov
adc
xchg
shll
mov
jle
cmc
jg
and
mov
pop
pusha
in
xor
inc
dec
mov
lods
xor
mov
push
push
add
dec
rcrl
jo
push
in
jnp
nop
pop
pop
sbb
mov
je
add
pop
adc
push
lock
push
inc
dec
adc
adc
hlt
loopne
sti
neg
adc
inc
filds
loope
jp
pusha
push
fdivp
int3
fisttps
fxtract
adc
and
pushf
push
test
push
mov
and
stos
lock
jns
jns
sub
test
lret
div
jnp
adc
or
or
stos
hlt
loope
fcmovu
pop
mov
sbb
or
in
xlat
stos
in
rcl
cltd
ja
in
stos
mov
out
mov
adc
mov
rcl
dec
shl
sti
xor
add
daa
test
sub
push
mov
rcr
lods
mov
rcrb
adc
push
iret
mov
shlb
rcrb
adc
push
xchg
test
and
xchg
push
lock
push
pusha
push
sub
add
sub
lods
cmpsb
pop
push
pop
out
mov
pop
push
shrl
aad
mov
xchg
mov
push
pop
lcall
stos
add
pop
shl
adc
add
mov
fsubs
push
ljmp
push
xor
test
bound
addr16
add
jmp
push
lcall
sub
lret
clc
mov
jne
jb
lea
call
add
stos
lret
mov
adc
and
cld
lret
mov
mov
inc
cs
xor
movsb
mov
jmp
insb
adc
mov
fucomip
loopne
mov
cmp
xlat
test
inc
enter
inc
jp
xchg
je
fcmove
sub
loopne
or
dec
mov
sbb
sbb
xor
fs
bound
and
add
add
sbb
xchg
sub
push
push
nop
xor
cmp
pushf
and
and
xchg
or
or
test
mov
inc
mov
inc
test
push
add
loopne
jbe
div
ja
mov
add
add
loopne
sub
add
or
push
lea
add
sahf
pop
test
sub
ror
add
imul
xor
call
cmpsb
fdivs
jnp
addb
jo
push
jbe
xor
pop
jbe
mov
add
sbb
cmp
adc
cwtl
jmp
or
add
shlb
mov
cmp
test
add
fbstp
jb
xor
mov
add
jl
pushf
push
add
in
sub
mov
jg
fidivrs
or
dec
or
inc
adc
fldt
lock
mov
xor
cmp
xor
fists
lock
scas
data16
adc
sub
pop
xor
mov
add
mov
inc
pop
icebp
sbb
dec
xchg
and
add
lcall
test
sub
mov
cs
das
sbb
ret
cmp
push
xor
bound
push
adc
repz
mov
add
mov
and
mov
mov
or
lahf
or
adc
cmpsb
jle
add
xor
or
add
inc
fcoml
add
je
lock
ret
out
pop
sbb
and
inc
push
sub
cmp
add
xchg
adc
test
xor
pop
sbb
scas
jl
daa
xor
jae
in
shrl
or
mov
add
or
xor
mov
loopne
push
cli
sahf
add
les
inc
mov
jecxz
insl
push
cmp
add
mov
inc
adc
jl
inc
pop
push
add
sub
icebp
sub
add
pusha
mov
ja
cmp
mov
mov
jo
mov
push
aam
push
pop
sub
mov
sbb
adc
inc
pushl
loopne
int
nop
andl
enter
and
jo
push
or
dec
pop
jo
loopne
inc
adc
mov
mov
dec
or
call
or
push
std
or
ds
add
xor
sub
decl
push
and
mov
dec
shr
push
andb
adc
ret
loopne
dec
sub
or
or
inc
stos
lea
pop
sbb
inc
sub
cmp
jbe
xchg
lea
adc
and
into
jb
add
loop
es
push
and
cld
pop
pusha
and
cmp
data16
pop
push
push
inc
xor
mov
add
scas
jo
aas
adc
mov
xor
cmp
and
outsb
sahf
repz
add
gs
in
or
or
cld
adc
clc
fisttps
dec
and
push
push
sbb
xor
add
inc
inc
cwtl
sarb
outsb
aaa
outsb
mov
jo
adc
call
mov
jle
mov
subb
sub
push
inc
push
push
xchg
xchg
aam
stos
add
jo
push
fsubl
xchg
xor
mov
out
lock
cwtl
mov
cld
adc
or
add
test
insb
jg
lea
scas
push
mov
or
das
js
rorb
stos
pop
cmp
push
pop
jo
lods
mov
xor
fs
in
mov
pop
dec
addb
cmpsb
test
andl
and
mov
mov
leave
lea
lea
incb
mov
push
adcl
or
or
inc
mov
jbe
call
je
add
in
in
bound
push
inc
lock
std
lock
test
or
mov
pop
stc
mov
sbb
xor
push
xor
incl
jmp
icebp
add
add
call
pop
push
pusha
adc
cmp
call
inc
xor
lock
jmp
mov
or
lock
call
add
sbb
xor
inc
into
out
sub
cmpb
mov
dec
fisttpl
sbb
or
add
test
add
fists
and
call
push
inc
test
je
loop
ljmp
push
mov
mov
push
pop
xchg
add
mov
divl
fs
sbbb
add
cmp
push
hlt
les
push
lock
pop
push
loopne
in
push
lcallw
add
jae
push
mov
add
mov
insl
push
inc
mov
xor
cmp
sbb
inc
stos
call
push
cli
mov
add
dec
jne
mov
cmpl
test
push
lret
mov
xor
dec
ss
cmp
lea
cmp
inc
jno
mov
mov
dec
mov
loopne
xchg
fcomp
jne
pop
pop
mov
push
lods
push
mov
and
sti
fucomi
jb
inc
and
sub
add
sub
mov
pop
call
test
ljmp
call
sbb
lea
add
push
mov
xchg
cli
sub
add
jae
bound
and
mov
decb
mov
add
add
and
jg
rorl
mov
dec
scas
and
shl
fisubrl
sub
push
scas
mov
mov
and
xor
xor
jne
add
pop
or
lea
sbb
adc
add
xor
adc
mov
fsubs
sub
cmp
cmp
xor
adc
mov
mov
stos
shl
jecxz
mov
dec
mov
or
scas
sbb
pop
cmc
stos
hlt
xor
ds
add
scas
lds
js
mov
push
cmp
js
pop
mov
adc
imulb
jo
stos
or
xor
mov
mov
and
mov
and
push
xor
or
test
into
mov
dec
push
xor
mov
mov
ljmp
jp
jae
lea
cmpb
incb
mov
mov
inc
jo
mov
or
fisttpll
dec
xlat
mov
inc
ret
cs
jl
adc
xchg
les
pop
adc
enter
movsb
dec
cmpb
mov
pop
adc
outsb
adc
sbb
in
adc
cmpsb
cltd
mov
stc
nop
xchg
rcrb
xor
test
cmpsl
sub
subb
pop
or
call
clc
sbb
lret
jns
gs
mov
cld
pop
lock
sub
scas
je
mov
icebp
pmaxsw
xor
mov
fs
stos
xor
push
bound
test
xchg
add
push
add
dec
adc
pusha
and
insb
roll
gs
out
add
mov
es
xor
data16
mov
xor
or
pop
call
mov
stc
pusha
lret
dec
fistl
dec
inc
jl
fadd
push
inc
hlt
popa
je
push
sub
adc
add
addb
xchg
sbb
testl
and
pop
xchg
ljmp
lahf
nop
add
roll
xchg
xchg
push
add
add
and
enter
inc
and
fucomip
cmpsl
pop
sbb
xchg
ds
dec
fsubrs
adc
add
dec
cmp
inc
fdivl
mov
inc
sbb
loop
dec
cmp
push
popa
add
mov
sbb
mov
movsb
cmp
orb
bound
or
mov
fisttps
leave
int3
adc
mov
add
call
fsubr
mov
jbe
int3
outsl
add
dec
cmp
arpl
jo
pusha
push
dec
roll
or
xchg
mov
outsb
lea
xchg
inc
mov
shr
hlt
add
pop
rolb
cld
leave
adc
orb
and
data16
jge
aam
sbb
dec
adc
test
and
jbe
add
or
xorl
js
nop
xchg
lock
mov
inc
inc
jl
push
or
or
es
cs
adc
sbb
std
cmp
jae
mov
bnd
jl
inc
or
push
std
cwtl
adcb
add
or
sti
sbbb
fisttpl
mov
in
iret
add
shlb
and
call
daa
sub
hlt
je
clc
and
xchg
mov
into
test
or
sahf
mov
and
or
inc
jb
sbb
lds
orb
aam
imul
out
push
pop
adc
add
push
push
add
outsb
test
jb
mov
pop
call
out
sbb
or
aam
mov
or
inc
mov
adc
cmp
push
cmpsl
push
add
das
xor
cmp
test
adc
xchg
mov
xchg
or
jb
call
fs
xchg
push
pusha
mov
pop
inc
loope
inc
inc
jbe
data16
std
adc
add
cmovno
pop
dec
loope
mov
nop
xor
out
les
add
mov
fstpt
mov
aad
push
pop
mov
std
enter
and
xadd
shlb
std
sub
shll
add
enter
idivb
fdivrs
pop
or
lahf
xor
mov
jne
add
repnz
test
cld
ljmp
rorb
lock
xor
dec
cltd
ret
loop
add
sbb
cmp
nop
dec
bound
in
push
mov
cltd
mov
cmpsl
push
xchg
mov
ljmp
adc
inc
push
aas
rorl
add
inc
xor
ljmp
insl
shrb
add
and
xor
add
adc
aaa
xchg
sub
push
jbe
shlb
aam
daa
and
adc
iret
ss
push
mov
popa
pop
add
add
sub
ljmp
clc
mov
data16
or
push
adcl
push
call
and
lock
or
pusha
jg
rclb
dec
dec
sub
xor
push
mov
es
pop
xchg
scas
mov
lret
out
push
nop
orb
jne
arpl
shl
mov
and
or
and
stos
sub
xor
sbb
or
inc
fs
clc
push
cmp
cmp
fmull
add
cmc
and
ret
fs
jecxz
push
fidivrs
pop
mov
call
mov
and
push
and
add
ljmp
add
push
insb
or
test
add
jp,pn
mov
scas
clc
in
mov
pop
and
in
imul
pop
cmp
mov
add
popa
cld
sub
xchg
xor
xor
xchg
mov
cmp
sbb
push
ljmp
push
jb
xchg
add
jo
sbb
dec
pusha
add
or
inc
pop
sbb
add
cli
adc
fiaddl
adc
imulb
imul
lock
test
pusha
xor
xor
ret
adc
fstl
add
test
stos
jno
out
xor
lret
adc
xchg
xor
add
cmp
push
inc
mov
add
lcall
jmp
sub
repnz
pop
xorl
cmc
push
stos
incl
sub
and
jmp
and
cmp
jne
pusha
enter
rcll
cs
lret
mov
gs
es
loope
movsl
xor
testl
dec
loopne
loope
sub
and
out
addr16
push
add
clc
in
or
jbe
pop
mov
cmpsb
or
and
scas
inc
loope
fists
and
mov
add
pusha
jb
mov
dec
jo
sub
enter
sub
sub
popa
and
aaa
loopne
subb
lea
dec
cli
xor
bound
push
adc
adc
and
add
loop
add
das
insb
pusha
sbb
jg
dec
outsl
push
xchg
dec
xor
iret
pusha
sub
cmp
xchg
sbb
pop
inc
aam
add
dec
stos
sar
add
adc
and
loopne
in
enter
and
adc
jne
adc
test
callw
loopne
fcomip
incl
fwait
or
lds
int
leave
ret
loope
adc
inc
mov
stc
push
aam
xchg
add
push
rcr
push
bound
push
inc
testb
loope
rcrb
aaa
leave
mov
rclb
test
call
sub
fcoms
ljmp
push
fprem
push
js
xor
bound
ja
rcrb
add
cmp
int3
lods
add
mov
ret
push
mov
imulb
jnp
ss
popw
pusha
lods
clc
loopne
clc
popl
push
cmpsb
sub
jmp
mov
adc
and
push
inc
xchg
inc
push
inc
nop
es
das
nop
push
and
mov
add
pop
jb
push
add
push
js
lock
push
aam
jp
ljmp
jle
js
mov
dec
scas
mov
mov
and
push
cltd
pusha
sbb
mov
loopne
nop
pop
or
and
pusha
cmp
jo
outsl
pop
mov
movb
cmpsb
mov
inc
xor
pop
push
and
or
movl
adc
cmp
cmp
and
clc
adc
pusha
adc
sub
inc
xchg
loope
loopne
lods
data16
mov
and
push
add
dec
add
add
sbb
outsb
xor
add
lock
mov
cmc
adc
xchg
lock
push
out
and
xchg
mov
or
xor
bound
adc
or
or
scas
push
movsl
inc
push
mov
xor
cli
jecxz
rclb
addr16
and
bound
cmp
mov
mov
jp
mov
or
adc
sbb
dec
idivb
mov
test
inc
rorb
xor
push
jbe
cmc
fwait
inc
enter
add
push
sbb
test
jge
sbb
adc
daa
push
shrb
pop
dec
pop
dec
mov
jl
xor
andl
rcrl
xor
inc
jmp
lock
add
or
clc
inc
rclb
jp
or
or
shl
mov
adc
mov
stos
mov
lahf
add
add
adc
lock
push
icebp
dec
mov
xchg
sbb
in
sbb
sub
fimull
and
adc
adc
inc
fnstenv
push
xchg
jb
faddl
adc
cmpsb
mov
adc
push
push
je
adc
sbb
sbb
mov
dec
push
xor
pushaw
jnp
or
aam
rcrb
nop
push
call
add
jo
push
out
aas
jo
inc
adc
adc
sarb
loopne
xchg
adc
and
or
or
xor
addb
jne
push
mov
cld
jno
lods
jnp
sub
mov
fnstenv
cmp
push
mov
call
call
clc
xchg
ljmp
incl
add
orl
mov
cmp
xchg
lock
outsl
call
lock
mov
pop
es
push
repz
loopne
mov
mov
sbb
inc
ret
push
fidivl
cld
mov
pop
add
push
jo
and
xor
inc
xchg
jmp
jo
hlt
jno
sbb
scas
xor
cmp
mov
add
fidivs
mov
inc
cmp
push
mov
push
mov
std
cld
xor
mov
push
mov
add
xor
sbb
lock
sbbb
sbb
pop
incb
sub
xor
bound
jmp
sub
mov
push
lods
jno
sahf
sbb
or
insl
ljmp
or
and
lods
fcomip
lock
das
cmp
sti
xor
bound
pop
cmp
insb
enter
incl
cmp
je
add
outsb
lea
dec
shlb
mov
push
sub
clc
call
or
pop
adc
lock
daa
add
dec
rcr
mov
test
add
pop
inc
hlt
add
inc
mov
popf
sub
inc
sbb
add
xor
add
sahf
adc
in
lods
add
sbb
mov
inc
lock
divb
jb
mov
int
rclb
sub
ljmp
adc
lsl
adc
in
push
add
sbb
inc
aam
adc
xor
test
rcll
or
je
and
fdivs
sub
lock
mov
mov
xor
sub
push
cld
sub
mov
or
add
pop
nop
mov
inc
nop
sbb
test
and
in
hlt
shlb
add
ljmp
mov
push
icebp
push
xor
dec
ss
decl
clc
xchg
int3
lock
push
stos
ds
jge
xchg
xor
xor
or
test
pop
push
pop
sbb
sbb
cld
pop
lea
xor
cmp
repnz
sarb
aad
push
je
pop
or
lods
fcoms
xchg
xchg
add
xchg
loop
inc
or
or
rcrb
dec
mov
les
test
mov
fdiv
push
mov
fmull
push
push
stos
adc
push
xchg
and
jo
xchg
mov
ss
push
inc
subb
sub
in
cltd
xor
dec
imul
pop
les
pop
push
insb
mov
ljmp
mov
mov
hlt
pop
push
in
mov
push
call
pop
call
js
cmp
je
xchg
pop
repnz
xlat
push
scas
sub
lock
or
and
cmpsb
outsb
push
andl
push
pop
and
incl
inc
in
mov
ljmp
cmp
imul
mov
jle
mov
addl
or
inc
cli
dec
or
add
popa
sub
rcrl
pop
pop
mov
mov
jbe
mov
jo
mov
imul
dec
repnz
xor
push
add
jo
push
pop
dec
enter
lods
adc
pop
mov
inc
add
bound
ret
inc
inc
dec
xchg
mov
dec
mov
dec
cmp
adc
jg
aaa
fmuls
icebp
inc
and
cmp
pusha
mov
shll
mov
fcmove
lock
enter
dec
and
push
xchg
mov
stos
jo
inc
add
add
jbe
push
add
push
push
push
pop
jle
fisubrs
cwtl
hlt
scas
daa
and
mov
popf
inc
xlat
add
or
fucomp
movb
fsubr
mov
clc
mov
lahf
push
jb
jae
mov
call
sub
or
dec
xor
test
call
jb
loopne
adc
ljmp
xor
sti
inc
mov
clc
adc
into
jo
xor
subb
call
push
cmc
inc
clc
mov
cmp
hlt
lods
adc
inc
mov
xchg
bound
mov
sub
xchg
mov
push
pop
or
and
adc
ret
call
cmp
stos
mov
mov
push
xor
mov
repz
shl
inc
jb
fcoml
sbb
jo
xchg
pusha
jecxz
xchg
or
in
or
es
lock
rclb
mov
push
mov
and
in
or
mov
dec
sbbb
std
pop
bound
and
mov
lock
rorb
inc
sahf
idivl
mov
add
je
adc
cmove
xor
cltd
mov
add
add
test
add
filds
inc
addl
xor
add
xchg
adc
sub
call
loopne
add
into
and
addb
cmp
pushl
adc
and
add
push
push
lock
jno
test
xchg
add
std
xchg
inc
or
push
jl
cld
es
inc
xchg
ret
add
add
inc
or
sbb
dec
pop
jmp
fildl
push
or
sbb
lods
ficompl
and
fildl
dec
add
je
sbb
or
mov
push
lock
xor
mov
mov
sub
jo
lock
and
je
jbe
push
jno
or
add
test
xchg
mov
jl
test
add
fwait
add
jl
add
inc
into
pop
push
adc
jb
jl
cli
ja
sti
add
ljmp
mov
mov
pop
std
add
mov
repnz
xchg
ret
push
stos
xor
in
je
push
inc
cmp
add
pop
xchg
inc
popa
jbe
fmull
or
in
inc
dec
cmpb
and
hlt
dec
pop
loopne
xchg
sub
imulb
and
sti
add
xor
sub
or
sbb
cmp
inc
pop
ds
adc
pop
add
push
dec
mov
sahf
enter
and
movsb
lcall
mov
sub
lea
and
mov
outsb
mov
pop
addb
in
lods
imull
push
ret
inc
jmp
orb
shlb
rclb
and
mov
push
push
out
jg
mov
cmpb
fbstp
mov
inc
sub
shlb
call
mov
xchg
pop
addb
mov
push
into
jmp
stos
leave
adc
adc
orl
pop
shrb
and
shlb
pop
xor
in
shlb
js
sub
add
adc
jle
jbe
js
adc
push
jmp
or
rcr
rolb
jl
push
cmp
push
mov
scas
roll
movl
rclb
push
mov
pop
and
jne
jp
dec
test
shlb
loop
xchg
inc
or
inc
or
rcll
inc
push
push
lds
loope
shll
push
enter
dec
and
push
test
rcll
arpl
or
cs
push
scas
rolb
jo
test
add
sbb
sub
hlt
pushf
in
mov
inc
inc
cmp
jbe
xchg
rorb
in
push
jle
xchg
jne
inc
in
push
jle
push
push
cld
xor
jne
lock
push
movsl
mov
and
rcrl
addb
jb
fisttps
sub
jo
xor
mov
mov
pop
adc
test
shrl
enter
push
in
lea
inc
cmp
jecxz
shrb
or
cmpsb
mov
xchg
sbb
or
push
nop
mov
pushf
cmp
adcb
push
push
push
rcl
push
or
push
sub
and
add
mov
push
xor
in
inc
cmp
xchg
add
call
mov
ret
fwait
lret
or
dec
dec
sarb
mov
sbb
adc
mov
add
add
push
mov
push
mov
mov
jbe
shlb
ret
incl
jnp
cmp
pop
and
jg
stos
xchg
mov
dec
stos
xor
rolb
adc
mov
xchg
jle
sub
call
add
and
imul
or
or
push
and
jne
cmpsb
decl
inc
js
popa
cmp
pusha
daa
push
test
push
cmp
adc
and
cmp
cmp
jo
shlb
jp
and
and
enter
jg
adc
add
loope
mov
push
xchg
pusha
and
mov
or
movsb
ljmp
popa
or
je
inc
sub
in
add
add
add
mov
jp
xchg
or
mov
decl
push
pop
loopne
pusha
and
call
adc
mov
orb
sub
push
and
test
push
adc
ljmp
jg
pop
and
add
mov
push
pusha
cmpb
call
lcall
push
test
mov
mov
cmp
ret
mov
inc
sub
into
inc
or
add
clc
push
sbb
xor
loop
out
jle
inc
or
cmpsb
jl
loopne
adc
inc
jo
outsb
xor
loopne
or
scas
pop
inc
xchg
push
pusha
add
out
mov
and
mov
cmpsl
add
jb
pop
sbb
add
pop
xor
pop
adc
mov
push
jne
pusha
add
pushf
dec
adc
incl
call
adc
out
or
dec
loopne
mov
xchg
pop
mov
psubsb
lret
cmp
lcall
xchg
orb
pop
sbb
adc
outsb
jae
pop
icebp
daa
testb
mov
sbb
sub
or
add
ljmp
out
clc
sarl
add
sub
xchg
into
pusha
adc
jp
adc
ret
mov
lock
int3
idivb
xorl
add
xor
mov
xor
mov
repnz
inc
inc
outsl
js
cmp
jae
dec
sub
sbb
mov
adc
xchg
or
pop
adc
loopne
sub
push
je
clc
adcb
lods
jno
pusha
sbb
xor
call
sbb
mov
test
pop
dec
pusha
lods
loopne
lea
mov
gs
sub
or
bound
push
pop
inc
lret
aas
xor
cmpsl
sbbl
inc
jnp
mov
outsb
inc
repnz
xchg
and
loopne
mov
sub
clc
xchg
loopne
push
sub
pusha
pop
idiv
cmpsb
adc
push
pusha
mov
or
cs
loopne
push
add
rorb
int3
adc
xor
pop
and
xchg
rorb
daa
add
inc
enter
and
adc
stos
loopne
lea
loopne
push
inc
lcall
mov
sub
sub
mov
push
fadds
ret
mov
popa
and
add
subb
or
sbb
rcll
mov
sub
mov
nop
cld
mov
addr16
xor
inc
inc
add
add
push
loope
mov
mov
xchg
dec
or
imul
and
xchg
mov
mov
dec
adc
adc
and
sbb
je
mov
dec
push
push
cli
in
inc
std
ljmp
data16
pusha
stos
test
mov
popa
pop
push
decl
jmp
xor
xor
pop
dec
cmp
loopne
loopne
jo
lea
enter
mov
jb
add
mov
je
sbb
bound
cs
xor
out
adc
imul
loopne
js
inc
xchg
jo
adc
inc
or
mov
mov
hlt
adc
adcb
out
mov
scas
call
and
push
mov
jns
inc
add
push
or
mov
fucomi
rcll
orl
xor
mov
mov
pop
dec
sbb
cmp
or
jne
mov
sub
mov
cwtl
cli
lock
add
or
add
and
aaa
and
fcomi
mov
out
xor
shll
shrb
int3
nop
std
sti
cmpsl
mov
xchg
jl
call
adc
mov
test
push
sub
push
mov
adcb
xor
ret
scas
mov
and
and
jp
sti
mov
mov
adc
mov
sbb
scas
cmp
ljmp
lcall
movl
sub
sbb
cld
pop
fdivr
mulb
xchg
stos
xor
lea
mov
orl
or
ljmp
jmp
jne
test
cltd
push
test
cs
clc
std
jno
hlt
loop
adc
inc
ljmp
aam
and
jo
jbe
and
push
aam
jle
rcrb
pop
add
mov
decl
aaa
popa
pushl
daa
out
icebp
inc
add
push
sar
addl
adc
xor
push
rdmsr
pop
inc
jl
add
push
idivb
inc
cmp
in
data16
push
add
add
sbb
add
sbb
push
sti
push
adc
adc
jae
add
mov
inc
adc
mov
xchg
add
stos
push
push
mov
aas
and
jb
imul
jb
shlb
add
adc
adc
scas
push
mov
push
xchg
arpl
push
ror
add
clc
dec
ljmp
mov
repnz
pushf
xor
cmp
int3
mov
push
les
mov
mov
clc
xor
je
icebp
pop
xor
loopne
adc
xchg
pop
jo
push
lock
cmp
movsb
adc
mov
cmp
inc
loopne
mov
adc
inc
xchg
enter
cmp
jmp
inc
or
pop
add
pop
add
sub
inc
scas
int3
sbb
lock
cmp
mov
lea
mov
mov
dec
sbb
out
mov
mov
push
cld
pop
dec
sbb
test
jmp
int
lret
xchg
adc
fcom
xor
mov
sub
or
cmp
mov
xchg
xchg
mov
mov
dec
sub
inc
je
adc
aaa
jp
mov
and
push
outsl
filds
mov
pushf
test
lock
push
cli
lock
jno
dec
adc
mov
or
or
cmpsb
decl
inc
pop
add
jno
mov
push
or
jmp
or
cmp
sbb
add
push
xchg
xor
xor
or
leave
pop
lcall
inc
sub
push
add
push
xor
pop
or
incb
fdiv
icebp
aaa
call
xor
outsl
ljmp
lea
es
test
clc
inc
pop
testb
mov
divl
pushf
sbb
hlt
and
pushf
mov
clc
mov
mov
cmp
mov
mov
lea
adc
push
mov
ret
push
icebp
pop
cwtl
mov
ss
incl
cs
jno
test
cli
cmp
fnstcw
nop
pop
xchg
xor
xor
aas
cmp
scas
add
add
add
jge
mov
push
les
decb
push
sbb
or
push
or
fst
mov
jne
cltd
add
jno
cli
dec
sbb
add
rol
or
add
test
pusha
push
loopne
sub
rclb
add
repnz
mov
mov
xor
push
adc
push
test
test
lret
aas
jl
and
jne
push
pusha
shl
pop
pop
enter
loopne
xor
jno
test
out
add
jb
pop
push
pop
and
add
outsb
inc
xchg
ss
in
insb
inc
jl
jb
push
cmp
rclb
or
add
aaa
xchg
fcomi
or
xchg
or
sbb
cmp
pop
push
jno
test
lea
xor
mov
ds
and
jg
push
je
xor
in
dec
mov
hlt
adc
add
icebp
jg
push
insb
andl
movsl
mov
lret
lock
mov
rcr
cmp
sbb
repnz
jae
sbb
xor
sub
mov
in
mov
shlb
and
incl
push
andb
imul
xor
xor
jno
adc
or
jge
push
jo
mov
in
ja
xor
cwtl
jo
sbb
jbe
insl
xor
cwtl
xor
adcb
add
jne
mov
lea
jb
or
pop
pop
outsl
cli
dec
jmp
mov
jle
mov
dec
call
mov
idiv
inc
mov
inc
mov
ret
mov
sub
outsb
adc
add
xchg
add
repz
pop
push
mov
test
cltd
pusha
xchg
xor
and
inc
das
push
cwtl
roll
mov
enter
fcomps
cmp
and
imul
movsb
and
push
mov
lods
es
daa
cmp
sub
fwait
cli
adc
mov
add
add
cmpsb
pusha
test
cmp
mov
add
je
add
cmp
es
mov
jle
outsl
loopne
out
adc
sbb
mov
inc
clc
aaa
add
sbb
pop
pop
imul
lds
adc
add
mov
jo
lret
and
add
cmp
pop
out
add
and
into
lea
xchg
mov
or
fcompl
loope
inc
out
pop
sbb
add
mov
sub
repz
cmp
mov
jae
inc
es
fwait
notl
adc
mov
sbb
adc
daa
mov
test
sti
addb
push
sbb
mov
or
jecxz
add
lock
movsb
std
mov
and
xor
test
sti
das
out
push
test
call
push
aas
jge
mov
gs
mov
mov
cmpb
mov
or
and
inc
outsb
add
call
adc
mov
stos
adc
mov
push
xchg
or
es
pop
daa
push
push
dec
push
ret
push
and
inc
loop
jb
cmp
stos
sub
outsl
dec
nop
jge
push
xchg
sarb
loop
pop
aam
lcall
add
inc
jno
inc
bound
movsb
loopne
adc
xchg
push
jb
and
shl
add
popa
lods
in
mov
ds
aas
dec
loopne
add
shrb
mov
xchg
cs
lea
pop
sbb
add
cmp
and
outsb
mov
add
decl
outsl
mov
push
inc
xor
into
rcrb
or
or
mov
aam
icebp
call
and
inc
and
adc
push
pop
jb
mov
scas
cli
push
cli
ret
loopne
nop
rcrb
rcr
pop
fiadds
icebp
add
pop
repz
adc
movl
cwtl
das
mov
loope
sbb
pushf
je
or
and
shrb
rorb
xchg
inc
adc
fwait
enter
add
pop
icebp
je
add
mov
cltd
rolb
fucomi
jle
or
movsb
in
popf
rolb
add
push
xchg
lret
and
in
das
push
pusha
enter
sub
inc
lcall
adc
sub
push
jb
pop
rcrb
add
movsl
lcall
and
xchg
mov
mov
call
sub
leave
sub
repnz
call
add
and
icebp
xor
xor
adc
adc
mov
test
cld
cmp
push
outsb
push
mov
xor
jno
mov
add
cmp
je
mov
out
jl
fdivrs
add
out
cmpl
shlb
adc
orb
sub
hlt
mov
jg
pusha
xor
rclb
mov
loopne
sbb
add
xor
inc
or
bound
js
jo
mov
and
ss
jle
pop
pusha
inc
xor
cmpsb
sti
loopne
fucomip
stos
add
xchg
adc
dec
adc
xor
aam
add
or
sarl
push
loope
outsb
and
pusha
add
pusha
or
loopne
inc
xor
popa
nop
cmp
or
leave
and
out
scas
mov
push
pop
pusha
clc
push
xor
pop
pop
out
mov
adc
lahf
fs
dec
cmp
push
sarb
push
jge
test
push
jecxz
fsubrl
xor
pop
jecxz
in
in
loop
add
pop
andl
dec
and
aaa
outsl
sbb
add
push
mov
mov
aad
add
loopne
pop
daa
outsb
jp
adc
call
xor
add
enter
sub
les
je
cmpsl
lock
or
mov
sbb
adc
cmpb
push
mov
or
xchg
add
dec
mov
and
ficoml
xchg
or
jo
rclb
rcrb
push
add
or
cwtl
cli
in
or
fdivs
cs
std
pop
mov
rcrb
mov
push
jnp
jne
mov
inc
cwtl
inc
leave
inc
mov
imul
rolb
push
and
mov
and
and
push
fwait
lods
inc
jmp
stos
clc
out
cmpb
lahf
mov
push
loopne
dec
lea
push
mov
ja
call
loopne
sub
mov
insl
jmp
mov
jp
add
cli
dec
add
loop
push
and
push
cwtl
leave
mov
das
mov
pop
enter
mov
push
mov
mov
sbb
push
movb
mov
adc
push
loopne
hlt
or
lock
aam
jno
or
mov
sub
push
cmp
popa
pop
fcmove
fdivs
push
lods
inc
inc
pop
jo
push
xchg
sar
loopne
mov
pop
in
lods
jmp
add
lock
inc
in
inc
popa
sub
inc
addr16
lretw
sub
ljmp
dec
fisubs
jp
jns
xor
loopne
pop
call
fsubs
outsb
xor
cld
call
les
out
mov
loopne
shr
fwait
out
dec
push
out
mov
les
add
loopne
pop
aad
lea
mov
mov
push
adc
adc
and
shr
test
add
jmp
jg
add
mov
jbe
mov
jge
pop
pusha
or
jle
push
ret
adc
dec
pop
call
push
es
mov
xor
je
aam
sti
pop
daa
xor
cli
mov
or
out
pusha
add
add
mov
dec
and
stc
sbbb
jo
pop
lock
adc
or
enter
mov
das
cli
and
mov
adc
push
pusha
cmp
es
fldenv
adcl
outsl
xor
std
jb
in
insl
rorl
and
mov
rolb
fsubrl
lock
pop
xor
icebp
push
call
adc
lcall
pop
sbb
jno
stos
pop
mov
add
push
mov
in
xor
pop
clc
dec
fs
mov
sub
and
sub
sub
or
mov
jno
mov
mov
pop
stos
call
sub
ret
and
js
jp
test
ret
ljmp
lock
ja
movsb
icebp
dec
and
je
cmpb
mov
sub
xchg
ret
int3
rolb
or
mov
push
inc
pop
das
jl
cmp
ret
add
scas
pop
pop
or
mov
leave
mov
jecxz
xorl
and
mov
lods
and
add
push
jbe
std
or
add
out
inc
mov
movsl
xor
fsubs
pop
push
hlt
jg
or
icebp
mov
mov
pop
test
andb
sti
decl
mov
inc
cmpsl
icebp
add
test
jg
xor
adc
insl
pop
xchg
mov
test
xor
pusha
jl
jg
test
icebp
xor
push
xor
pop
jbe
pop
inc
push
or
add
outsb
dec
bound
js
jae
jo
repnz
xchg
out
aam
xor
iret
jo
adc
jo
mov
xchg
out
add
jne
xchg
ss
rorb
lcall
das
arpl
jge
hlt
ja
nop
jl
and
mov
xchg
jns
inc
sbb
cmp
jno
push
and
inc
sub
shlb
push
loopne
pop
mov
sbb
mov
jns
orb
push
aaa
add
xor
adc
add
mov
ficompl
insl
mov
jo
rolb
fmuls
cmp
adc
xor
ret
cmp
push
adc
in
call
in
loopne
adc
mov
push
add
stos
outsb
and
adc
inc
test
incb
and
cmp
or
hlt
mov
out
je
push
cmp
pop
cmp
pop
subb
jmp
in
xchg
lret
mov
mov
mov
mov
ret
in
mov
fildl
push
ret
mov
pop
mov
cmp
mov
movsl
cmc
cmp
je
cmp
dec
mov
push
mov
dec
std
push
add
xor
xor
rcll
std
aaa
jp
jo
notb
stc
adc
inc
inc
stos
adc
jl
or
push
sti
aas
popa
and
pop
mov
pushf
add
jl
and
xor
pop
push
jmp
outsl
sub
jo
test
jo
push
xor
inc
pop
cli
mov
inc
push
inc
adc
xor
mov
jl
subb
push
jo
dec
add
mov
sub
mov
repnz
jp
sbb
idiv
mov
add
jl
and
inc
lods
icebp
or
jl
mov
shr
cli
in
pop
jl
call
xchg
mov
push
mov
test
clc
xor
inc
mov
cmp
mov
push
test
jo
sbb
inc
dec
fbld
shlb
nop
pusha
push
xor
add
inc
push
cld
jg
lcall
mov
jmp
jo
push
andb
xor
xchg
call
mov
sub
xchg
jo
sub
xor
xchg
jp
pusha
xor
cmp
jnp
sbb
add
shlb
cmp
xor
mov
cmp
lock
cmp
sbb
add
xchg
cmp
fisubrl
and
xor
inc
lahf
cld
out
and
je
lods
stos
or
add
mov
and
or
sub
mov
stc
or
in
test
cmp
ret
js
ret
pop
out
test
dec
les
repnz
mov
lea
sbb
or
adc
xchg
xor
or
xor
jp
add
jne
cli
sbb
je
mov
shrb
cmp
pushf
cmp
std
outsb
mov
push
addb
je
or
decb
jg
sbb
cmc
mov
inc
push
lock
or
cld
mov
xchg
mov
mov
lods
xor
jg
aaa
mov
or
cmp
nop
mov
jmp
cmp
mov
cmp
mov
xlat
cmp
ret
sub
dec
imul
jo
pop
and
repz
sbb
sbb
das
and
add
mov
dec
pop
push
mov
push
xor
dec
add
repnz
es
inc
push
bound
cld
orl
shl
lock
hlt
mov
es
push
sbb
and
data16
jg
and
push
xor
mov
call
pop
mov
push
push
add
test
cmp
push
jg
fs
or
pop
jae
cmp
add
push
add
sti
decl
mov
mov
daa
mov
call
shrb
aaa
adcl
stos
dec
add
js
and
and
pusha
inc
insl
jmp
daa
lock
dec
test
xor
cli
push
mov
and
adc
cmc
outsl
push
xor
mov
xor
sub
in
lcall
dec
dec
inc
repnz
icebp
pop
enter
or
inc
mov
sar
shrb
mov
add
push
dec
jo
leave
dec
ret
test
subb
or
add
or
cmp
dec
pop
sub
lock
inc
push
fdiv
push
add
jg
xchg
adc
out
hlt
add
lock
incl
mov
mov
add
xor
jne
xchg
adc
add
push
ftst
lock
mov
sub
lock
mov
push
cltd
xor
xor
xchg
out
mov
pop
fcoml
aam
mov
push
pop
jbe
or
and
mov
ljmp
cwtl
rorb
cmp
cmp
nop
mov
call
push
rcr
jb
or
inc
pop
pushl
push
pop
outsb
clc
mov
adcb
lods
push
and
mov
add
add
in
inc
adc
adc
pop
and
xchg
inc
enter
cmpl
out
add
inc
test
cmp
call
out
sub
jno
push
into
dec
add
adc
jp
pop
add
outsl
or
add
and
lock
dec
mov
in
jbe
notb
push
mov
call
mov
xlat
add
out
xchg
icebp
sub
in
adc
movsl
aaa
dec
or
mov
test
test
mov
inc
loop
dec
testl
outsl
ljmp
mov
fisttpl
and
inc
or
inc
inc
loopne
adc
xchg
testb
loop
push
mov
mov
inc
or
or
mov
mov
jnp
div
mov
mov
pop
or
mov
aaa
fistpll
mov
test
sub
in
lods
mov
pop
jmp
mov
mov
rcrl
mov
lcall
in
push
lcall
mov
mov
or
cmp
or
les
fimuls
mov
push
mov
int3
cmpsb
jns
in
mov
mov
inc
jg
sub
xor
aam
push
fdivrs
or
and
out
xadd
mov
cli
inc
push
aam
inc
xlat
outsl
sbb
std
aaa
fwait
out
mov
out
dec
mov
pop
xchg
adc
int
mov
out
mov
inc
popl
mul
int
or
incl
push
clc
call
aam
mov
add
mov
cmp
ss
std
ret
aam
mov
push
imul
xor
sbb
dec
rcl
lds
lock
mov
inc
xchg
ret
jge
push
popf
cmpsl
stos
adc
sahf
inc
push
xchg
shlb
inc
mov
and
outsl
test
mov
jno
add
in
mov
or
dec
and
sar
rcll
and
rol
fisubl
fnstcw
ljmp
or
pop
jl
mov
inc
ret
or
decl
xor
bound
out
and
mov
xor
sub
loop
sarl
ret
pop
and
aas
dec
dec
xor
adc
mov
inc
shlb
incl
mov
js
add
pop
loopne
sbb
mov
dec
inc
inc
inc
mov
xchg
aaa
in
popa
or
adc
jmp
bound
push
inc
mov
incl
mov
or
or
push
push
cmpsb
jl
outsl
push
pop
inc
cmp
movsl
mov
or
inc
dec
pusha
or
ss
inc
push
hlt
or
mov
mov
adc
cmp
aaa
or
mov
fwait
lods
or
ljmp
in
add
jo
sbb
clc
adc
jecxz
fsubrs
sub
movl
fs
cs
repnz
loopne
jbe
mov
mov
add
or
jnp
dec
jb
mov
pop
pop
gs
outsl
add
addps
adc
adc
cli
lea
loopne
scas
or
sbb
sbb
xor
adc
ret
or
sbb
dec
push
dec
inc
cltd
ret
test
imul
in
leave
and
jmp
cli
cmp
mov
loopne
mov
push
dec
dec
or
sti
push
ret
fisubrl
or
ret
lea
lock
cmpb
clc
xor
cmp
lahf
mov
sbb
pop
dec
je
cmp
repnz
xorb
adc
call
je
adc
divb
adc
ljmp
sbb
call
jmp
fs
jl
call
gs
or
js
aam
and
or
adc
jmp
inc
adc
sub
test
push
jp
test
mov
loopne
pusha
ret
mov
push
jecxz
mov
fbld
adc
addb
mov
test
mov
je
mov
fbld
push
mov
inc
mov
mov
loopne
xor
mov
shll
loopne
mov
push
push
add
outsb
roll
repnz
test
nop
les
sbb
or
adc
out
push
jne
arpl
scas
sarb
push
fcoms
push
pop
cs
in
sbb
clc
dec
jmp
mov
or
in
push
repz
mov
mov
inc
fisttpl
in
adc
inc
std
dec
inc
xchg
in
fsubrl
jp
inc
xchg
aam
or
ja
enter
add
jb
lock
cwtl
xchg
lret
mov
adc
loop
loopne
cmp
push
cmp
sub
mov
pop
insb
stc
sbb
jle
sbb
mov
xchg
jp
inc
int
sahf
xor
data16
mov
mov
fdivrp
pop
adc
push
or
jmp
sahf
mov
push
loopne
pop
add
mov
rol
cli
xor
pusha
loop
and
jmp
lock
cld
outsb
push
loop
inc
imul
loopne
fs
mov
lods
xor
pop
jo
lods
mov
mov
call
enter
cmp
cli
xchg
mov
inc
fwait
add
stos
mov
or
add
mov
cmp
bound
cwtl
push
ret
dec
scas
jo
lret
pop
inc
andb
cmp
and
nop
sbb
sub
or
mov
pushf
loop
sbb
lock
popl
inc
and
stos
push
adcl
mov
mov
lea
xchg
dec
and
inc
push
and
cli
cmp
cli
mov
add
jb
push
and
ret
xorb
in
push
loope
push
ljmp
arpl
mov
push
jb
xchg
in
jmp
cltd
adc
push
or
lock
push
pop
and
mov
mov
add
jge
loop
test
jo
add
xchg
lret
or
sub
mov
mov
icebp
rol
in
mov
mov
or
lcall
call
mov
out
ja
or
xchg
cmp
sahf
out
mov
rcll
sub
or
cs
adc
pop
sarb
iret
cmp
dec
nop
and
push
mov
fldcw
loop
mov
mov
lock
inc
mov
or
ret
sbb
adc
jmp
pop
sbb
jae
data16
mov
xchg
add
ret
outsl
mov
cmp
mov
repz
or
push
lret
je
lret
leave
or
jle
or
outsb
push
bound
and
mov
popa
cld
cltd
cmp
mov
sbb
mov
les
pusha
pop
jg
imul
movsl
inc
push
shrl
sarb
imul
cmpb
in
and
adc
sub
dec
push
fs
inc
cld
and
lods
inc
add
mov
clc
pop
mov
ret
mov
cmp
cmp
adc
inc
pop
ret
jl
adc
jbe
xor
sub
cmp
ret
lods
ds
mov
orl
jo
push
adc
or
leave
xor
add
add
add
or
sbb
or
add
test
pop
les
clc
neg
jmp
pop
sbb
push
mov
jp
lret
test
cmp
imulb
dec
mov
mov
adc
fwait
and
push
sbb
jb
pop
lods
lret
ja
lock
push
sti
divb
mov
leave
fldt
loopne
mov
pop
inc
es
mov
xchg
ss
rclb
jmp
jmp
sub
mov
repz
cld
mulb
push
test
push
shrl
push
inc
mov
pop
cld
jl
icebp
pop
aaa
add
mov
push
mov
and
jmp
mov
cmp
add
fs
ds
push
mov
inc
clc
das
lock
repnz
adc
ret
int3
in
popa
sub
or
ljmp
sbb
je
call
and
test
pop
or
mov
jne
add
dec
cli
jmp
cmp
xor
add
xor
push
inc
aam
lock
adc
inc
jmp
or
lock
scas
push
leave
mov
int3
inc
or
notb
imul
sbb
icebp
pop
insb
and
add
lods
sub
push
popa
test
cmp
pop
push
add
out
add
pop
xor
sbb
or
xchg
or
mov
mov
pop
ds
lahf
sbb
mov
fs
or
and
inc
inc
loopne
orb
adc
push
aas
xchg
mulb
js
add
and
xchg
shll
adc
sbb
pushl
out
ljmp
add
jp
add
push
int
adc
push
lock
cmpsl
test
fcoms
or
dec
loopne
mov
mov
add
jb
dec
loop
mov
and
jle
shrb
clc
jecxz
shrb
or
je,pt
or
mov
sub
adc
lods
add
dec
or
bound
inc
push
mov
jno
dec
jg
add
fsubs
add
lock
filds
pop
clc
push
xor
adc
scas
xchg
ss
xor
mov
mov
or
inc
mov
cmc
push
scas
push
push
sub
mov
out
add
sub
dec
xor
or
jno
dec
push
cmp
push
xchg
or
pop
idiv
xlat
and
jb
mov
or
addr16
push
lahf
add
push
or
add
and
lods
xchg
sbb
sbb
pop
sub
movsl
idivb
mov
xchg
or
pop
jb,pn
js
cli
cmp
mov
jo
pop
addb
fidivl
aaa
or
fmulp
pop
mov
cmp
movsb
mov
jae
push
add
push
or
out
sbb
std
fwait
and
shl
std
test
mov
add
xchg
adcb
fs
or
adc
or
jg
adc
inc
icebp
pop
lods
pop
adc
adc
adc
shlb
or
leave
ret
cmp
ja
hlt
lcall
push
xor
ss
mov
cld
cmp
sbb
pop
test
adc
orb
inc
cwtl
test
xor
add
sub
mov
rolb
aaa
ret
movsb
push
lock
mov
adc
mov
jo
aad
adc
xor
adc
dec
hlt
clc
push
cs
sub
xor
or
sub
push
mov
and
cld
in
fsts
lcall
shrb
mov
dec
or
scas
stos
push
or
insb
hlt
jmp
cli
and
outsb
inc
push
add
es
fcom
or
imul
stc
add
call
notb
add
add
xor
fcoms
scas
push
add
add
add
pushf
adc
cmpsb
add
inc
jmp
nop
test
mov
inc
xor
inc
xor
push
xchg
jo
add
aaa
incl
test
lock
xorb
push
jo
xor
mov
shrl
adc
addb
xor
or
dec
sbbb
jbe
mov
cmp
adc
fistl
push
or
stc
pop
push
push
inc
das
ss
pushl
fcomip
xorl
push
test
mov
or
sub
and
xor
mov
data16
punpckldq
mov
imul
push
bound
and
je
or
adc
data16
pop
pop
cmp
pop
add
or
subb
fdiv
cmp
cmpsl
icebp
imul
leave
loopne
cli
loopne
repz
and
rolb
adc
dec
shl
clc
xor
outsl
add
mov
aam
mov
pop
or
shlb
mov
popf
lea
jnp
mov
adc
jmp
sbb
ret
sub
popa
pop
fs
add
add
shlb
inc
jmp
mov
aaa
jo
pop
push
add
repnz
leave
cs
or
add
push
or
mov
jle
outsb
inc
jg
adcb
arpl
mov
ja
add
mov
or
xchg
adc
loopne
adc
ret
mov
cmp
in
mov
std
sbbb
xorb
jno
mov
out
hlt
cli
jg
mov
cld
addb
push
xchg
ret
clc
xor
pop
mov
jg
out
dec
mov
mov
sar
xchg
or
or
imul
or
orb
inc
and
push
or
push
or
dec
rolb
cmpsl
in
push
pusha
mov
push
test
xchg
add
outsl
loop
js
push
inc
nop
cmc
mov
jle
inc
pop
sub
testl
es
add
popw
xor
int3
add
push
push
fisubl
adc
les
push
sbb
addb
std
sub
stos
or
or
shlb
ret
pop
je
inc
add
ror
push
sbb
clc
cmp
testl
imul
add
mov
sbb
mov
bound
fadd
push
xor
dec
push
daa
test
lret
clc
shlb
xor
cld
sub
in
rclb
or
sbb
sub
repz
xor
add
push
sete
inc
cmp
add
push
mov
adc
out
xchg
je
pushl
js
xor
decl
and
jne
mov
pop
lds
rcrb
cld
leave
sbb
adc
inc
jnp
or
pop
push
xchg
push
push
test
or
and
fwait
inc
pop
xorb
sub
aas
add
mov
es
cmp
pop
push
inc
mov
shl
addb
add
mov
shl
and
aaa
insl
repnz
jge
pop
sbb
sub
or
sub
pusha
inc
inc
jmp
test
addl
rol
adc
mov
cmp
cltd
pusha
mov
push
jne
jl
xor
lock
mov
testl
shrl
rcrb
test
mov
incb
pop
add
mov
inc
cmpsl
mov
adc
je
shrb
or
js
xor
xchg
scas
aad
ss
sub
loope
jne
dec
repnz
jno
sub
jle
pop
test
mov
push
adc
pop
out
subl
ret
or
cmp
adc
add
loopne
rorb
ficomps
dec
jb
adc
xor
dec
call
decb
mov
sahf
xchg
out
insb
and
jle
adc
scas
nop
adc
pusha
or
stos
incl
sbb
gs
cmp
movsl
lock
test
lock
xchg
jl
dec
xchg
jmp
jp
insb
push
fisubl
inc
hlt
xor
or
loope
mov
and
push
mov
push
push
push
dec
cwtl
mov
and
sub
push
and
ret
and
jp
loopne
jb
hlt
sub
push
lods
jl
push
jbe
inc
js
lea
or
pop
push
loop
add
bound
or
cli
fisttps
orb
test
repz
lods
adc
fcomps
push
or
dec
incb
jns
cmp
xor
add
call
or
inc
enter
or
inc
enter
add
mov
jbe
or
lds
js
add
pop
push
test
adc
out
std
inc
shlb
loopne
push
and
and
ljmp
shll
loopne
loopne
xor
dec
daa
mov
jecxz
aaa
dec
out
andl
dec
cmp
lret
mov
adc
pusha
lea
cmp
insl
push
std
mov
jb
jmp
sub
adc
mov
inc
or
cmp
pop
test
test
adc
orb
fdiv
or
cld
mov
xchg
loopne
pop
ret
add
push
lock
fisubl
aas
mov
mov
xchg
or
push
xchg
adc
pop
jecxz
pop
sbbl
bound
jmp
add
ja
cmp
aad
iret
cmpsb
inc
cmp
cs
imul
mov
test
pop
popa
mov
fmuls
decl
stc
push
loopne
pusha
dec
cmc
push
lds
cmpsb
xchg
adc
jmp
test
xorl
fcoml
lds
inc
mov
add
push
adc
lahf
inc
pusha
sub
or
and
xchg
cmp
pop
or
dec
shlb
jnp
nop
fwait
xchg
pop
mov
xchg
sbb
ss
and
xor
shr
jecxz
and
lret
je
adc
std
xor
adc
cmp
and
les
adcl
loope
sbb
jle
dec
pusha
adc
push
cli
push
leave
nop
ret
test
push
jmp
adc
insl
pusha
loopne
orb
pusha
flds
test
shlb
xchg
xor
bound
push
push
mov
cmp
out
or
or
in
xor
cmp
sbb
mov
xchg
inc
loopne
or
pusha
add
dec
adc
sahf
es
jg
dec
dec
out
add
add
jp
push
xlat
add
and
push
push
ds
push
std
dec
jmp
sub
adc
sbb
adc
push
test
mov
sbb
in
sub
add
test
and
mov
daa
add
jne
sbb
lret
xor
or
pop
testb
xor
sub
fisttps
mov
imul
or
ljmp
mov
sub
mov
inc
add
imulb
mov
push
push
mov
in
xor
add
jg
xchg
sub
das
dec
call
lea
adc
push
push
pusha
add
nop
adc
insb
or
dec
lea
nop
dec
mov
inc
in
jo
out
and
inc
clc
bswap
jl
push
add
dec
cld
adc
push
and
adc
push
jo
push
incb
xor
std
lock
test
xor
or
mov
out
add
push
jbe
cli
xchg
vshufpd
and
leave
jno
ret
inc
or
push
mov
mov
mov
lea
incl
fwait
mov
fmull
test
mov
sub
or
dec
inc
aam
and
stos
incl
into
addl
jb
pop
add
and
adc
xorb
or
cmpl
push
and
mull
add
leave
lods
mov
mov
in
call
adc
mov
out
xor
dec
xor
call
add
clc
jmp
ret
bound
adcb
stc
outsb
sub
inc
nop
xor
ret
pop
push
dec
test
xchg
clc
mov
hlt
xor
shlb
ds
xor
mov
cld
shlb
push
fdivrs
loope
mov
pop
sub
mov
cmp
add
push
xor
movb
dec
stos
pop
jmp
cs
and
cmp
movsl
popf
movsb
sub
mov
scas
pop
add
add
pop
mov
add
and
dec
sbb
dec
cli
add
and
les
jl
push
push
ljmp
jo
dec
sbb
mov
lea
inc
hlt
test
jecxz
and
insl
je
addb
rorl
adc
xchg
mov
test
in
mov
or
push
push
add
sbbb
push
pusha
lds
push
sub
pop
xchg
int
mov
pop
cwtl
inc
jmp
sub
dec
mov
hlt
pop
test
jo
ds
and
add
mov
or
add
sub
pop
sahf
push
xor
push
cmpsl
outsl
xor
mov
loopne
std
jo
mov
or
jne
mov
sub
dec
dec
xor
idivl
fdivr
adc
push
fcoms
lret
xchg
in
out
outsl
ds
add
frstor
xchg
testb
or
mov
int
mov
add
xchg
cmpl
int
or
push
cmpsl
add
hlt
push
decl
ljmp
push
mov
and
test
lea
xor
adc
mov
inc
pop
mov
cmp
or
sub
movzbl
add
lock
push
add
or
shrl
mov
fimull
aaa
push
call
int
loop
jb
rol
adc
mov
pop
shlb
mov
dec
nop
aaa
bound
fnstsw
dec
lods
popf
icebp
jl
lock
loope
inc
xchg
push
xchg
xor
xchg
sbb
pushf
test
add
push
pop
jo
icebp
dec
cwtl
xchg
lret
push
lods
lods
pop
and
call
push
sahf
je
out
andb
pop
aaa
call
test
pop
push
adc
mov
xchg
pusha
add
adc
mov
mov
cmpsb
lcall
dec
mov
test
nop
shl
jo
xchg
je
shlb
xor
pusha
adc
rclb
rcl
js
stos
stos
cli
mov
sbb
dec
or
mov
mov
outsb
decl
xchg
fdivs
mov
rorb
mov
mov
data16
decl
jb
nop
or
mov
movsl
rol
sarl
add
pop
add
mov
or
inc
sti
movl
mov
repnz
stos
lea
or
ljmp
xor
int
adc
pop
xor
mov
mov
jo
xor
add
add
xor
mov
jbe
shrb
add
incl
adc
movsb
in
push
mov
mov
ja
dec
mov
inc
or
pop
and
jne
pop
mov
add
je
push
inc
add
fcoms
add
jbe
xor
cli
adc
jl
push
rclb
mov
cld
fsubrs
dec
gs
divl
lea
and
test
push
mov
mov
mov
mov
inc
jbe
cmpb
push
pusha
mov
hlt
add
mov
sbb
lea
mov
sbb
lret
pusha
mov
mov
add
outsb
out
lock
add
xor
stc
out
movsb
mov
jg
inc
ret
jb
cli
or
xor
and
pshufw
adc
addr16
mov
scas
mov
mov
sbb
out
xor
enter
push
dec
scas
lret
or
adcb
push
mov
push
or
mov
adc
fbld
jl
call
or
pop
xor
ret
push
or
es
hlt
dec
lock
incb
add
hlt
xor
xor
adc
fs
ret
sub
idivb
or
mov
pop
and
push
push
add
push
shll
shr
sahf
mov
je
sbb
call
push
push
lods
push
sbb
add
mov
pop
mov
mov
dec
inc
sbb
mov
adc
mov
add
jno
inc
jns
les
pop
xchg
adc
and
pop
jbe
cld
pop
mov
add
adc
push
mov
adc
inc
cli
jmp
mov
sbb
pop
bound
in
mov
add
sbb
jge
xorb
std
mov
push
scas
add
ja
mov
adc
pop
and
cli
add
add
jmp
xor
icebp
adc
adc
push
or
xchg
push
lock
testl
pushl
je
jmp
cld
xor
add
push
mov
je
insb
mov
cmc
add
push
sbb
out
push
je
sub
jo
inc
xor
stos
stos
pop
and
sub
call
loopne
lea
lods
bound
test
ret
xchg
inc
sbb
add
js
cmp
jae
fiadds
sbb
lock
add
inc
push
push
jb
jo
mov
adc
ret
push
fmulp
inc
add
aaa
or
jmp
jne
add
cmp
call
mov
fcos
je
xchg
test
mov
jnp
pusha
lret
fmull
ss
ljmp
xor
imul
dec
pop
sbb
mov
adc
push
lods
push
push
je
xchg
pushf
inc
jmp
test
mov
orb
push
or
sbb
xor
mov
pop
imull
sub
test
or
xchg
jo
leave
xor
xchg
sbb
cmp
nop
bnd
jb
pop
lea
or
xchg
mov
das
inc
xor
aas
add
adc
inc
ret
sbb
or
repz
adc
fs
test
cli
push
imul
je
inc
and
inc
add
pusha
shrl
add
mov
xchg
icebp
xor
call
add
push
xchg
adc
decl
cmp
pop
add
push
dec
add
mov
adc
mov
pushl
add
and
and
inc
jns
shlb
add
mov
int3
shlb
push
xor
movsb
mov
data16
inc
pusha
addl
mov
cmp
xor
leave
orb
out
lock
jb
xchg
cmpb
add
or
push
push
call
pop
or
cmp
push
push
pop
push
ljmp
sbbl
xor
movsl
dec
or
sbb
adc
push
into
je
adc
iret
push
test
xchg
pusha
cmp
cmp
popa
sub
sahf
xorb
jge
mov
and
add
int3
or
jge
xchg
mov
stos
or
push
mov
iret
xor
lock
adc
add
pop
inc
pop
pop
cwtl
adc
push
cmp
testb
jbe
pop
mov
sbb
je
adc
stos
jle
test
adc
mov
and
clc
or
sub
inc
out
add
sub
xchg
dec
loope
jle
int3
cmpl
mov
mov
push
divl
je
frstor
hlt
sarb
dec
popa
pop
cli
adc
xchg
adc
into
int
subl
jae
loopne
sbb
adc
sub
push
test
fs
jecxz
movsl
push
lret
push
adc
dec
popa
mov
add
push
das
add
pop
repz
ja
adc
mov
pop
mov
in
loopne
adcb
push
and
add
jl
ret
pop
in
or
inc
movl
roll
cmc
or
loop
mov
adc
movsb
push
add
adc
xor
pusha
xor
cli
outsl
cwtl
lret
pop
adc
adc
shrb
and
mov
cmp
rorb
movsl
in
mov
or
ja
cmp
sbb
cmp
add
pop
inc
and
data16
pushf
shlb
add
js
decl
add
and
shrb
pushf
pop
mov
xchg
ret
mov
enter
movsb
pop
movsb
roll
loopne
test
loopne
insb
inc
add
dec
adc
in
sbbb
jmp
movl
lock
jne
adc
adc
cld
push
sahf
xchg
out
mov
push
sbb
int3
test
push
loop
or
fidivl
pop
pop
jp
push
add
add
shl
js
orb
addb
or
lock
pop
icebp
outsb
mull
mov
mov
mov
cli
add
or
add
push
rcr
loop
rcr
or
jne
adc
lock
outsl
adc
out
mul
add
jb
pop
add
pusha
xor
sub
add
xchg
add
ljmp
mov
fcmovb
fdivrs
sbb
mov
mov
loope
pop
outsb
popa
mov
push
mov
jmp
jmp
push
push
or
out
cwtl
jl
mov
mov
push
push
adcb
pop
pop
movsb
cmpsb
fs
inc
addb
out
loopne
pop
inc
push
mov
mov
test
jg
and
push
ror
xor
sub
ja
push
mov
sete
pusha
clc
cmp
outsl
out
fmulp
add
aaa
mov
push
cmovs
pop
lods
inc
mov
jle
add
mov
xor
or
add
inc
scas
mov
inc
xlat
cmp
push
mov
pop
sbb
xchg
cli
push
lahf
es
inc
scas
push
idiv
frstor
cmp
mov
pop
cmp
cmp
add
add
pop
out
rcr
sub
fcmovnb
call
test
pop
jo
dec
loope
adc
mov
clc
push
xor
test
sarb
adc
push
call
mov
jle
clc
and
hlt
or
jne
jecxz
sbbb
loope
sub
loope
mov
pushf
dec
scas
add
add
push
scas
fdiv
sub
shll
xor
sbb
paddd
and
insb
and
jb
add
loopne
test
lock
loope
xor
push
jbe
call
cmpl
and
dec
mov
dec
lock
mov
rolb
mov
loop
push
add
xor
data16
mov
push
fildl
jle
and
push
loopne
mov
pop
push
je
ret
test
xchg
cwtl
loope
mov
inc
pop
or
jb
movlhps
add
xchg
ljmp
lock
jo
fdivr
cmp
mov
mov
loope
pop
sub
adc
loopne
popa
mov
pop
sub
adc
or
loope
or
rcll
xchg
shll
ret
fdiv
push
mov
sahf
dec
push
or
jmp
adc
add
hlt
leave
or
fisubs
add
lock
loopne
adc
and
adc
rorl
clc
mov
jb
les
add
mov
ds
sub
loope
daa
pusha
cmp
shrl
loope
xchg
mov
adc
push
mov
test
sbbl
add
inc
mov
lods
adc
call
or
xor
outsb
repz
cmpsb
sbb
xlat
lcall
pusha
pop
xor
pop
pop
mov
repnz
out
cltd
pusha
adc
add
stos
sub
jbe
mov
adc
imul
inc
pop
add
push
push
fs
imul
mov
inc
add
sbb
ret
xor
imul
push
add
mov
cli
sbb
sbb
push
adc
and
add
and
add
or
jo
clc
int3
mov
and
insl
cs
sub
xorb
int
add
in
pop
cmpsb
lock
lcall
sbb
xor
xchg
mov
xchg
movsb
xor
sub
stos
xor
jl
js
xlat
mov
adc
cli
or
or
data16
incl
std
or
add
or
imul
dec
stos
sub
and
ss
adc
imul
cwtl
shlb
out
cld
pop
jae
fistpl
push
lock
aam
or
mov
insl
mov
add
push
movsb
mov
int3
push
das
jo
mov
mov
mov
out
popf
dec
cli
sbb
movsb
pushf
xor
stos
cwtl
nop
sbb
xchg
subb
out
add
inc
imul
dec
repnz
inc
aas
shll
test
stc
mov
mov
mov
and
pop
mov
ret
mov
add
cld
push
stos
lock
inc
ds
stos
cmp
loopne
pop
lcall
add
loop
mov
mov
call
jge
outsb
lcall
add
ror
cmc
add
in
pop
sti
shrl
mov
or
add
sbb
fsubl
insb
mov
call
jp
push
dec
mov
sub
daa
mov
push
sbb
sbb
mov
push
or
push
xor
popa
clc
lock
or
jl
push
mov
add
mov
enter
mov
or
mov
loopne
ljmp
popa
mov
pop
push
lock
push
mov
xchg
mov
lds
mov
imul
mov
add
xor
add
cmp
mov
mov
push
ja
xchg
repnz
test
pop
ljmp
clc
jmp
lods
lock
jne
ds
cmp
xor
add
xor
loopne
idivb
in
add
jo
ljmp
add
fidivl
add
fiadds
pop
sbb
xor
push
jne
ja
push
rorl
sti
adcl
push
or
adc
stc
push
jno
mov
jno
sbb
enter
push
jns
mov
repz
hlt
das
cmp
cmp
nop
lock
xchg
shlb
and
movsb
jo
xor
push
or
cmpsb
add
outsb
hlt
add
faddl
je
pop
sbb
popf
push
sub
adcb
xchg
orl
push
lcall
andl
add
push
dec
lock
or
rclb
jno
aad
mov
adc
jo
add
jo
push
sub
or
mov
outsl
pusha
pop
or
in
jne
push
dec
dec
add
and
stc
test
dec
imul
andb
les
stos
push
adc
mov
pushf
mov
out
popa
lock
lea
mov
lcall
fwait
or
shlb
inc
stos
dec
jl
fisttpl
pop
pop
xor
cmp
cmp
xor
lods
mov
insl
sahf
or
lcall
cmp
mov
stos
xchg
addb
and
add
add
push
sbb
xchg
or
bound
loopne
add
stos
push
lods
insl
outsl
xchg
enter
stc
xor
cmc
adc
add
lds
icebp
xor
cmp
fisubrl
pop
mov
or
stos
aad
rcrl
int
push
add
stos
sbb
adc
mov
add
test
mov
insl
testb
popf
add
stos
cltd
adc
add
lea
sbb
repz
das
ret
addb
add
dec
mov
push
sbb
dec
rcrl
dec
sarl
jbe
cmp
sarl
push
bound
cmp
rcrl
push
dec
dec
dec
sarl
xor
and
sarl
push
or
aas
dec
push
add
cmpb
imul
out
imul
outsb
cwtl
cmpsl
ret
mov
mov
cmpsb
popf
rcrb
imul
imul
imul
cmpsb
imul
imul
imul
cmpsb
imul
xor
lahf
cmpsb
push
add
shlb
repnz
mov
out
push
ljmp
int
xor
ror
lret
or
rol
mov
mov
mov
je
mov
inc
xor
sbb
loopne
mov
mov
xor
pusha
add
mov
imul
pop
add
adc
xlat
push
sbb
mov
mov
xchg
cmp
aaa
xor
outsb
push
bound
lcall
pop
sbb
inc
loopne
or
sbb
xor
imul
stos
shll
or
lcall
push
decl
div
shll
and
and
fcmovu
push
add
mov
push
jl
movb
pusha
cmpsl
shll
sbb
int
lcall
pushf
add
or
imul
inc
subb
push
pop
add
jo
incl
cmpsb
add
dec
ss
or
or
sbb
push
sbb
dec
nop
pusha
stos
movsl
mov
rorl
mov
xor
add
ret
mov
mov
and
sbb
mov
inc
jno
subl
jl
cmpsb
jns
push
dec
dec
inc
inc
pusha
loop
xchg
sbb
add
cmp
and
sbb
push
stos
jno
rorl
insb
sub
and
inc
lcall
jmp
fnstenv
cmpsl
imul
jp
push
dec
mov
cmpsb
push
loope
inc
test
inc
rcr
das
popl
movb
add
bound
and
in
jnp
pop
xorb
jne
sub
add
inc
and
add
add
mov
aam
sbb
dec
push
inc
das
pop
movsl
pop
adc
neg
pop
mov
pop
sbb
add
adc
inc
xchg
shl
push
pop
es
xchg
fisubl
lcall
repnz
cs
fists
in
mov
add
sub
mov
out
or
out
xor
ret
cmpsb
xchg
ret
xchg
mov
loopne
pop
add
push
ret
ret
inc
cmp
sbb
add
mov
data16
dec
dec
fs
test
sub
mov
mov
sahf
xorb
push
pusha
ret
call
repz
and
call
in
or
dec
add
jne
call
xchg
pop
dec
mov
fcoms
call
and
ret
pop
das
add
ss
push
pop
and
mov
jl
jl
add
cmp
ficoms
jl
ss
adc
push
add
lret
cld
lock
cmp
call
cmpsb
and
insb
aaa
xor
inc
xor
pushl
jb
mov
mov
ret
ffree
add
mov
add
bound
decl
add
pop
mov
fisttpll
mov
cmpsl
add
cmp
push
add
jp
jg
adc
add
ljmp
mov
pop
mov
in
or
lock
mov
add
cld
mov
repnz
or
js
push
call
sbb
jle
dec
or
inc
mov
clc
jg
push
adc
add
adc
adc
sbb
loop
sub
xor
xor
push
cmp
nop
xor
cltd
xor
cmp
call
addb
sti
xor
lret
sub
xchg
repnz
call
pop
stos
lock
or
sub
pop
mov
and
sbb
je
add
inc
jmp
je
fidivs
mov
fstl
es
add
and
push
inc
jo
lock
and
sahf
sysret
and
mov
addb
in
xchg
cmp
insb
call
xor
mov
jno
std
xchg
mov
mov
icebp
or
add
sbb
cltd
movsb
insb
mov
in
mov
pop
mov
xor
out
jo
and
push
xor
lcall
or
movsb
psrad
inc
popa
pushf
pop
pop
call
mov
push
loop
mov
mov
mov
xor
or
adc
pop
jo
jbe
add
mov
mov
cld
lock
add
sbb
push
sbb
icebp
add
push
cld
nop
call
jge
fisttps
push
lret
or
jae
adcb
insl
mov
icebp
xor
outsb
or
xor
cltd
xor
addl
ret
jbe
sub
roll
mov
and
mov
pop
push
lock
sti
cmp
es
loopne
xchg
andb
add
mov
add
push
add
mov
mov
add
andl
jne
push
orb
mov
xor
or
add
loop
adc
xor
sbbb
out
js
repz
xchg
jno
xor
inc
jne
mov
movsl
call
test
std
cmp
repz
dec
adc
add
cli
jo
ret
mov
hlt
add
or
in
call
jne
repnz
repnz
add
or
hlt
push
pop
call
push
xor
lcall
int
sti
jb
add
call
or
add
adc
xor
insl
rorl
push
pop
adc
mov
imul
mov
push
or
mov
mov
or
outsb
jle
ja
ret
push
mov
xor
pop
push
xor
push
mov
lahf
inc
xor
jne
mov
mov
orb
mov
dec
mov
adc
ds
ret
adc
pusha
es
push
aam
push
add
or
out
call
add
fstpt
jp
xor
sbb
push
shll
push
xor
sub
push
aad
add
sbbb
mov
pop
rcr
jno
inc
mov
and
movsb
mov
sti
outsl
or
pop
cmpsb
fwait
lock
xor
inc
mov
pop
jl
or
or
xchg
sub
push
adc
sbb
lock
pop
sbb
push
cs
mov
ljmp
je
sub
xor
hlt
add
rcl
fstpt
jge
mov
out
or
int3
mov
push
icebp
sbb
pop
bound
loopne
fildl
xor
stc
push
push
push
clc
jno
or
call
pop
insl
pop
mov
push
pop
mov
jo
adc
or
clc
jbe
mov
inc
or
mov
or
ret
or
pop
inc
mov
popl
sbb
xchg
clc
mov
or
jge
mov
inc
fsubr
xchg
ds
or
mov
cs
js
xor
lcall
cmp
jl
lock
xorb
pop
adc
and
add
sbb
mov
add
inc
add
inc
add
add
xor
int3
subb
sbb
cmpsb
jae
xor
sbbb
outsl
pop
or
sub
add
sbb
mul
jg
mov
divl
mov
inc
pop
add
movsb
sbb
out
leave
insl
fisttps
test
cmp
or
iret
or
jb
loopne
in
jg
inc
add
testl
mov
and
xor
pop
jmp
or
pop
cli
subl
xchg
subl
mov
sbbl
push
xor
mov
add
push
jl
addb
push
cwtl
mov
or
rolb
xchg
out
mov
pop
mov
inc
and
and
loope
popa
add
rcll
mov
je
outsl
test
sbb
shlb
lcall
xorl
sbbb
xor
gs
mov
mov
cmpsl
je
adc
add
pcmpeqb
sub
maskmovq
mull
outsb
xchg
mov
inc
sar
sar
notb
mov
ret
nop
je
ret
movsb
mov
divb
push
cmp
movsl
je
ret
cmpsb
adc
ret
xchg
cs
stos
adc
ret
stos
insl
sti
repz
ret
lods
inc
lods
je
ret
scas
adc
ret
mov
fcmovnb
insb
adc
ret
insl
je
ret
outsb
or
outsl
hlt
ret
pmuludq
add
add
int
rolb
dec
fstl
fistpl
int3
and
mov
mov
mov
mov
push
add
fmul
inc
and
ret
inc
test
push
dec
pop
popa
pop
les
inc
cli
xor
scas
rcrb
test
pushl
or
mov
add
inc
mov
data16
sbb
clc
hlt
or
rol
jle
aam
xchg
popf
rorb
mov
or
mov
jo
lods
in
ret
sarb
fldt
pop
call
push
call
bound
adc
rclb
sub
test
cmpb
and
add
xchg
out
dec
mov
insl
sarl
aaa
push
add
imul
add
test
sbb
jge
stc
or
cmp
pop
inc
rolb
shll
push
les
sbb
sbbb
test
and
and
lods
call
cmp
sub
outsl
repnz
xadd
and
jbe
ljmp
js
outsb
hlt
addl
je
mov
and
pusha
cmp
shlb
sbb
loopne
add
adc
cmp
sbbb
fisttpl
loop
add
ljmp
stc
je
loopne
pop
inc
jg
inc
call
stos
or
xchg
or
push
add
or
orb
jo
int
sub
and
cmp
adc
fbld
cmp
inc
sbb
adcb
sbb
ljmp
pusha
adc
and
push
ret
test
ljmp
mov
xchg
or
cmp
cmc
pop
push
jno
hlt
adc
add
loop
pushf
mov
pusha
dec
ret
data16
add
loope
or
insl
push
or
idivl
sub
mov
popa
cmp
add
mov
mov
pop
push
push
loope
adc
out
inc
out
call
stc
add
xor
push
sbb
lcall
jle
dec
pusha
punpcklbw
clc
jle
lcall
add
fs
imul
pop
popa
add
add
adc
mov
das
xor
mov
pop
push
push
insb
subb
mov
dec
movsb
les
cld
call
inc
push
mov
add
insl
rorl
and
adc
add
xor
insb
ret
pop
sbb
fsubl
add
push
and
adc
push
mov
pusha
add
shll
out
inc
std
fimull
lret
jbe
push
inc
dec
pusha
or
enter
int
cmp
js
cs
pop
movsl
shll
push
outsl
jp
sahf
loope
adc
mov
push
call
mov
jb
lcall
mov
outsl
or
push
pusha
adc
insl
add
test
add
jb
mov
rolb
test
daa
or
push
sbb
sbb
daa
mov
inc
or
inc
je
pop
push
or
cmp
jae
sub
xchg
xor
sbb
fnstcw
add
adc
loopne
xchg
orl
and
pop
push
jo
jmp
stos
dec
xor
jnp
xor
popa
mov
push
icebp
popf
and
xor
std
adc
test
repnz
dec
stos
aas
add
lcall
xor
fcmovnu
xor
stos
cltd
sbb
pop
push
fdivrs
push
pop
add
jmp
adc
lods
dec
stc
cmpsl
imul
pop
movsl
mov
out
inc
adc
cmpb
mov
lcall
imul
pop
inc
adc
pushl
out
sarl
scas
popl
pop
mov
mov
ja
and
stos
jmp
pusha
add
mov
dec
cmpsb
imul
mov
popf
leave
les
or
dec
push
push
stos
pop
xchg
cmp
shll
movsl
mov
pop
lret
add
aaa
cs
pop
push
popa
jle
mov
mov
ja
adc
cs
xor
cmpsb
jns
inc
dec
pop
imul
aad
icebp
add
filds
or
add
pop
cmp
sub
mov
jno
and
neg
std
mov
mov
and
xor
into
movsl
sub
xor
fwait
loope
cmpsl
xchg
leave
sbb
jecxz
mov
sbb
cmp
int
fsub
jne
jnp
fwait
push
mov
shll
sbb
sub
inc
pop
jmp
pop
aad
repz
movsl
mov
push
test
lock
xchg
lahf
stos
mov
je
test
adc
test
dec
cld
cli
xor
daa
pop
xchg
and
stos
lock
push
loop
sub
movsl
outsb
sub
xchg
inc
inc
mov
out
cli
jo
mov
stos
rorb
pop
xchg
xor
jo
add
out
xor
add
push
imul
insb
gs
popf
push
add
mov
or
mov
mov
xchg
je
push
push
inc
mov
lods
inc
popl
dec
add
jb
mov
rclb
sub
in
mov
fwait
push
jb
nop
add
je
sub
mov
fs
sub
pop
test
and
lea
pusha
dec
or
adc
insl
adc
and
jb
add
add
popa
xchg
inc
mov
stos
mov
push
outsl
inc
outsl
mov
inc
popa
je
push
sbb
bound
add
jo
adcb
pop
add
sub
gs
bound
movsb
push
add
lcall
outsl
or
jne
or
cmpsb
lcall
je
gs
pusha
in
or
gs
je
push
int
mov
lea
or
jo
jo
mov
add
outsb
xorl
test
xlat
and
push
in
fildll
test
je
fiadds
push
mov
dec
or
arpl
jae
add
add
jb
add
xchg
lods
je
nop
xor
dec
sahf
outsb
fs
mov
in
and
or
add
mov
or
es
cmp
fadds
lcall
dec
cli
adc
jns
jo
scas
pop
ret
inc
dec
xor
push
add
pop
ret
inc
mov
adc
mov
imul
adc
gs
mov
imul
xor
cmp
jbe
mov
bound
xor
std
outsl
decl
cmp
out
add
mov
add
add
lods
gs
pop
dec
mov
pop
lcall
sbb
push
lock
or
adc
loop
push
imul
mov
jb
adc
add
popa
shrl
add
mov
mov
dec
pusha
mov
xchg
inc
or
add
inc
shl
add
pushf
xchg
jb
lea
inc
cmp
jne
add
or
roll
cltd
gs
push
xorb
jg
cs
inc
add
mov
js
and
push
or
inc
push
inc
nop
or
ret
or
test
rorb
insb
push
loop
clc
dec
and
add
xorb
jns
adc
sub
mov
xor
and
jg
enter
dec
jo
add
mov
in
add
sbb
mov
push
xchg
sub
ja
lock
jo
jae
int
mov
je
add
sub
xor
lcall
mov
nop
insb
push
subb
mov
orb
adcl
push
jle
jg
push
xorb
or
lea
xor
and
dec
clc
int
nop
fsts
ljmp
fsubs
sbbb
add
mov
test
loopne
pushf
inc
stos
push
and
sbb
pusha
call
mov
jns
adc
mov
loope
sbb
jo
int3
js
sbbb
outsl
insl
adcb
fsubrl
rolb
sbb
outsb
js
push
xchg
xor
dec
cltd
andl
hlt
enter
push
imul
cmp
cs
jns
mov
jo
mov
cwtl
and
mov
insb
stos
mov
jmp
nop
push
mov
add
jne
xchg
xchg
push
int
sbbb
inc
push
data16
stos
cmp
ret
sbb
js
add
mov
lock
mov
sbb
fs
call
or
bound
icebp
lds
xchg
or
push
xchg
clc
pushl
push
outsl
mov
gs
adc
lds
dec
sub
fbld
or
mov
popa
lds
push
dec
or
mov
push
xchg
movsb
xchg
ret
mov
dec
add
xchg
fiaddl
outsb
hlt
test
enter
and
mov
rorb
test
rorb
push
lods
inc
mov
mov
js
and
decl
push
push
rcrb
sahf
mov
imul
cmp
imul
lea
ret
cmpsb
dec
adc
lods
cli
add
adc
call
rorb
sub
add
out
push
sbb
aaa
pop
decl
lret
inc
js
rol
shll
fmull
mov
ljmp
cmp
inc
cmp
pushf
imul
pusha
daa
loopne
xchg
enter
sub
xor
pop
ds
shll
lcall
loope
add
xor
stos
test
loop
sahf
mov
or
sarb
lods
shrb
outsb
into
out
in
add
imul
rcr
ss
cmp
jns
inc
sbb
and
fs
mov
jb
inc
loopne
mov
lock
bound
outsl
popa
dec
push
imul
popa
cmp
lcall
ljmp
or
mov
xchg
loopne
fwait
inc
bound
jg
loope
insb
add
add
pop
loope
fs
in
cld
sti
movsl
push
push
popa
xchg
jne
aaa
add
insb
mov
inc
test
stos
gs
aad
mov
mov
and
jb
adc
push
clc
dec
mov
add
out
push
dec
lds
popa
add
cmpsl
loope
jmp
bnd
outsl
fwait
adc
imul
ja
mov
sub
aaa
jmp
sbb
mov
shlb
ret
arpl
loope
out
push
out
add
clc
mov
jne
mov
xor
inc
aaa
add
jb
aam
add
inc
icebp
dec
rorl
in
outsl
xorb
negb
icebp
push
popa
or
call
pusha
mov
fs
inc
lock
jb
mov
imul
push
push
sub
data16
int3
add
pushf
loopne
mov
push
add
or
loopne
mov
push
jne
inc
pusha
and
cmp
adc
pop
and
scas
repnz
push
mov
mov
add
cmpsb
ret
int3
loopne
add
and
mov
pusha
lods
bound
insb
mov
loope
fistps
pushw
popa
push
push
jae
adc
sahf
mov
aam
adc
sbb
xchg
cmpsb
cwtl
loopne
insb
or
add
jecxz
and
loopne
mov
sbb
cmpsb
orb
fs
push
outsb
sahf
and
jb
mov
xchg
outsb
sub
or
popa
bound
cwtl
cmp
jg
cld
jmp
int3
adc
loop
add
out
dec
gs
mov
dec
inc
test
scas
clc
cmpsb
aas
sbb
add
loopne
sahf
lock
loop
inc
xchg
loopne
jb
stos
sub
js
addb
pop
push
xchg
sbb
add
insb
stos
outsl
or
loopne
sub
dec
jae
lods
loopne
mov
shlb
movsb
popa
adc
xor
push
xor
popa
add
push
adc
leave
pusha
push
push
adc
add
bound
fistpl
cmp
addl
dec
push
dec
pusha
in
fimull
lcall
xchg
popa
jae
inc
xor
stos
gs
sub
push
shlb
outsl
ja
mov
add
push
and
filds
inc
add
fwait
dec
in
pusha
or
add
cld
sbb
gs
jmp
or
subb
je
add
bound
jne
sub
mov
adc
loope
inc
xchg
add
jae
mov
mov
cmp
scas
and
and
je
mov
sahf
mov
mov
sbb
mov
pushf
ja
pusha
loop
stos
dec
stos
mov
mov
outsb
or
stos
imul
mov
repnz
insb
add
pop
jno
bound
mov
mov
and
jb
push
add
fs
push
jmp
jb
sahf
outsb
jae
lock
pop
and
lcall
aam
push
mov
or
mov
inc
xor
ficoms
shrb
mov
jp
shll
push
push
jg
cmp
mov
aaa
sbb
xor
add
icebp
push
or
test
cmp
push
inc
add
xor
mov
add
fs
jb
push
push
and
js
imul
pop
addb
add
mov
add
sub
jno
or
push
xor
cmp
outsb
cmpsb
fsubrl
and
pusha
fdivr
push
sahf
sub
jns
outsl
out
clc
add
gs
data16
xchg
nop
ja
xor
or
inc
insb
sahf
sbb
test
seta
cmovbe
andb
push
push
popa
push
push
mov
jno
cmp
inc
xor
outsb
mov
sbb
xor
clc
fistpll
xor
ss
mov
push
mov
stos
add
cmp
ja
dec
xchg
jne
sbb
xor
jns
dec
inc
rorb
cli
xchg
xor
and
inc
insb
addr16
push
mov
inc
outsl
or
popl
xor
call
add
movsb
xor
pop
inc
inc
imul
lcall
in
xchg
insb
xor
mov
icebp
fildl
fwait
jo
sbb
add
jno
xor
in
icebp
enter
push
mov
xchg
jo
adc
jae
scas
cs
rcr
add
jae
dec
outsb
cltd
outsl
sub
mov
mov
mov
arpl
jo
jo
test
into
icebp
dec
stos
mov
dec
mov
xor
mov
jo
mov
mov
dec
xchg
mov
into
xor
fs
push
subb
xlat
add
sti
jbe
test
repnz
lcall
jnp
rclb
inc
inc
icebp
mov
adc
aam
icebp
add
add
xor
loope
dec
inc
in
inc
mov
ss
pushf
jbe
mov
int
push
dec
cmp
or
xor
sub
push
fucomip
adc
arpl
sbb
mov
jae
push
sahf
scas
cli
mov
sub
add
je
jo
dec
inc
bound
jo
out
xor
dec
dec
pushf
mov
and
in
out
sub
dec
sarb
repnz
or
ja
xor
cwtl
inc
add
pusha
jb
xchg
jo
fbstp
in
xor
mov
notb
cli
add
sbb
push
or
sahf
mov
add
ja
mov
mov
stos
mov
jg
lock
mov
imul
jo
clc
stos
mov
dec
les
or
add
sub
push
andb
mov
dec
pop
out
add
mov
mov
add
sti
pop
jp
jb
pusha
jae
cwtl
adc
or
push
int3
cmp
or
shl
sbb
lret
incl
mov
jno
outsb
jno
xor
lea
xor
add
xor
xor
rcr
aam
or
add
outsl
pushl
mov
repnz
or
imul
outsb
xor
mov
outsl
push
std
aas
ljmp
gs
jbe
inc
jns
push
cmc
push
push
mov
push
jo
mov
push
hlt
add
lock
pushf
jb
jbe
jb
sahf
arpl
scas
pop
push
add
add
jne
jg
out
jp
or
xor
scas
jbe
mov
arpl
loop
jne
stos
jns
es
arpl
jo
loopne
add
mov
mov
jg
mov
mov
cmp
mov
inc
dec
shrb
dec
cmpb
or
xchg
lock
lock
mov
mov
push
xor
add
xchg
gs
dec
pop
jl
gs
mov
mov
pop
dec
mov
test
int
aad
cwtl
jns
adc
xlat
inc
ljmp
dec
out
add
das
lods
cwtl
je
push
xchg
lock
stos
outsl
pop
add
adc
lods
and
push
mov
js
incl
add
jb
push
imul
gs
inc
insb
dec
outsb
dec
outsb
jb
sub
clc
imul
popa
xor
cmp
stos
push
add
out
inc
add
push
xor
enter
test
mov
incl
mov
or
pop
push
mov
pop
xorb
push
jne
adc
nop
movsb
mov
and
and
dec
repnz
xor
mov
add
imul
cmp
jne
inc
mov
dec
outsl
xor
inc
sbb
shlb
rep
ds
jb
add
mov
and
imul
into
mov
add
inc
jae
push
pop
add
inc
xchg
cmp
mov
mov
jo
xchg
jbe
addr16
add
test
pop
adc
mov
mov
lea
push
jl
inc
push
repz
inc
lods
test
and
roll
mov
jo
sbb
popa
arpl
dec
push
dec
inc
gs
cltd
outsb
punpcklwd
add
push
je
in
outsb
jb
rcr
js
pop
out
mov
xchg
sbb
inc
outsl
mov
lods
gs
add
imul
lcall
push
inc
insl
jo
test
add
push
mov
inc
movsb
fidivs
testb
insb
bound
push
outsl
and
loope
add
pusha
add
push
sbb
decb
push
xorb
subb
das
cmp
and
sbb
fiadds
ja
jbe
mov
pop
push
aam
test
mov
jae
jb
push
sbb
andb
popa
or
push
mov
xor
inc
mov
and
orb
outsl
add
shrb
inc
adc
xchg
subb
orb
fs
add
hlt
jbe
and
jae
adc
int
or
lcall
adcb
mov
arpl
movsb
and
xchg
loope
mov
cwtl
or
inc
xchg
or
xor
mov
js
add
push
inc
push
mov
insb
xchg
add
add
mov
rolb
insb
fwait
inc
jl
sahf
jo
mov
push
mov
dec
xchg
ljmp
inc
jb
addr16
daa
rclb
insb
inc
inc
xchg
sub
xor
bound
push
daa
mov
sub
add
dec
add
cmc
int
xor
ret
pushf
dec
push
dec
mov
mov
dec
addr16
shrl
add
mov
xor
rcr
mov
rcrb
add
je
loopne
insb
rolb
pop
and
xchg
and
mov
add
mov
add
jns
jo
jne
fdivs
bound
inc
fcmovb
mov
push
rorb
ret
das
fsubrs
adc
sbb
add
cmp
lds
enter
inc
inc
inc
add
ss
fwait
adc
sub
ret
pusha
insl
fstpt
pop
mov
adc
mov
jne
mov
bound
xor
jecxz
lods
rorl
nop
inc
mov
jo
jb
xor
dec
lea
sub
into
adc
inc
xchg
fidivl
xchg
xchg
mov
and
xor
inc
xchg
movsb
lret
inc
or
sbb
adc
dec
push
push
mov
inc
xchg
in
into
xchg
inc
xchg
inc
add
mov
cmp
sbb
shlb
mov
add
sbb
fs
inc
push
fadds
test
inc
mov
and
lock
push
push
mov
and
cwtl
mov
inc
inc
jbe
inc
mov
sarl
cltd
pusha
arpl
lods
daa
popa
cmp
xchg
jne
dec
lcall
xchg
imul
adc
test
ss
dec
xchg
popa
mov
inc
push
test
xchg
push
int
fldl
sbb
and
testb
mov
loopne
arpl
or
mov
mov
pushf
push
jns
mov
popa
xor
dec
in
scas
jo
loopne
loop
repz
loopne
pop
test
scas
inc
pop
add
insb
or
fistpll
pop
shl
add
mov
insl
call
loop
les
pcmpeqw
loop
loope
add
pusha
fisubs
scas
in
adc
xor
add
inc
cmpsl
adc
ss
lcall
xor
adc
xchg
jo
and
test
or
mov
cmpsb
adc
and
push
push
in
add
jo
mov
fs
jno
lcall
jmp
pop
imulb
push
out
add
sbb
inc
sti
push
jb,pn
lcall
or
mov
lret
je
mov
scas
or
lcall
jl
mov
xchg
lods
bound
pop
push
das
fsubrs
dec
mov
push
lods
loopne
popa
movsb
dec
std
pop
add
add
dec
jp
gs
mov
fs
loop
sbb
mov
mov
insb
mov
and
mov
lea
jo
dec
notl
jge
sbb
in
add
pop
lcall
lock
lods
bound
notb
loopne
push
andb
adc
jae
sbb
and
mov
out
fcomps
jg
andl
mov
inc
jecxz
lcall
sbb
insb
sub
popa
ljmp
decl
sbb
add
arpl
add
and
add
xor
outsl
outsl
xchg
imul
sahf
out
and
jbe
adcb
mov
dec
inc
stos
loop
dec
dec
mov
fidivrl
test
aam
dec
xor
inc
pusha
cwtl
fsubl
mov
inc
push
mov
pusha
pop
push
std
popa
add
popa
push
inc
push
or
dec
gs
add
xchg
pusha
ja
xchg
scas
rclb
jo
out
add
xchg
mov
loopne
jp
jae
or
xor
mov
jne
je
popa
cld
inc
fbstp
inc
pop
jo
lcall
add
mov
out
sub
arpl
push
test
ja
outsl
or
add
pop
ja
xchg
jae
arpl
icebp
clc
ja
icebp
jbe
dec
jne
jne
pusha
jl
cwtl
jecxz
lock
imul
add
rclb
adc
push
add
inc
je
add
cmp
inc
movsl
jg
rcrb
dec
jo
xorb
fistpll
or
xor
mov
stos
jle
and
cmpsl
add
pop
gs
jo
inc
bound
add
mov
scas
aas
add
and
add
cmp
inc
mov
lock
add
inc
mov
mov
or
mov
xor
push
and
push
sbb
push
loopne
lea
mov
inc
mov
enter
gs
pushf
and
scas
ret
fildll
and
fcomi
inc
adc
or
or
sbb
incl
in
mov
add
add
lock
cmp
lcall
sub
mov
pop
std
and
add
jmp
inc
mov
sarb
xor
mov
adc
or
cmpsb
xor
dec
pop
xchg
scas
mov
nop
loopne
push
or
xchg
test
inc
fcomip
incl
cmp
inc
cwtl
fisttpll
jmp
subl
jbe
add
repnz
jnp
es
scas
pop
stos
pop
scas
adc
loopne
mov
inc
adc
aam
add
jmp
dec
test
xchg
xchg
lods
pop
lock
cmpsb
scas
mov
repnz
enter
jg
xchg
leave
dec
dec
loopne
in
insb
cmp
ljmp
push
mov
or
lds
fisttps
stos
sub
pop
and
push
add
aaa
popa
cs
mov
je
and
add
clc
repz
fldl
xchg
shrb
or
lahf
les
int3
int
xlat
outsl
and
sti
aas
mov
lcall
or
mov
fs
mov
xchg
outsb
in
add
sub
out
loop
clc
or
call
dec
shl
aas
das
add
and
and
aas
mov
or
add
aas
int3
scas
mov
xchg
xor
dec
jmp
aas
cmp
add
aas
rolb
dec
pop
loope
les
mov
les
mov
aas
and
addr16
push
dec
add
rcr
call
inc
add
jp
jl
pop
roll
popa
jg
pop
aas
sub
das
stc
add
inc
dec
shlb
mov
aas
subb
das
fstl
pushf
add
int3
fdivr
jg
lods
push
jb
xchg
cmpl
inc
into
rcl
call
add
xchg
mov
and
das
adc
cmpsb
mov
mov
mov
ret
cltd
jne
fldt
cmp
jno
rcr
adc
out
mov
pop
cmp
xchg
repz
movsl
andb
adc
test
adc
cli
pushl
dec
in
leave
xor
push
push
add
imul
faddp
jge
adc
push
mov
mov
xchg
cmp
push
pop
hlt
pop
jge
sbb
scas
stc
xchg
jge
add
fwait
mov
jle
fmuls
imulb
jns
out
xor
cmp
jp
ljmp
test
inc
jl
add
push
xor
int
push
adc
jge
add
test
lods
std
ret
add
xchg
daa
sti
or
push
add
sub
imul
lret
popa
movsl
adc
std
fwait
sti
add
imul
jno
sub
pushf
sti
add
or
les
les
scas
mov
dec
sarl
test
adc
sub
pop
fldt
mov
scas
cmp
xor
pop
cltd
shl
cmc
add
call
adc
xor
js
cmp
or
pop
or
xor
mov
filds
pop
inc
or
jbe
mov
cmp
mov
or
mov
ret
movl
cmpsl
lret
aam
stos
sbb
aas
or
mov
addl
push
mov
iret
add
push
push
aam
imul
inc
push
pop
push
imul
pop
and
dec
aaa
fbstp
push
arpl
pop
shrl
cltd
sti
pop
cmpl
add
jae
ja
lcall
mov
lods
aaa
dec
xchg
test
push
clc
aas
rolb
jmp
sbb
dec
sub
lret
out
idivb
cmp
mov
cmp
insb
cmp
clc
out
decb
pop
lods
cmp
mov
jae
call
add
repz
fstpt
add
ret
ds
ds
fs
adc
mov
outsl
scas
mov
test
jae
xchg
arpl
movsb
ds
out
mov
inc
les
xor
and
in
adc
add
add
repz
cmp
and
rcll
xor
ret
aas
fidivl
jg
aas
mov
jle
fwait
in
push
push
test
jae
pop
arpl
fcoml
mov
outsl
adc
xor
aaa
lods
fbld
adc
or
aas
add
inc
loope
inc
and
add
call
je
xor
xor
xorl
lret
mov
ss
cld
pop
xor
xor
test
imul
xor
lods
jb
jg
inc
adc
xor
pop
and
out
mov
or
mov
sbb
sub
lret
xor
mov
outsl
stos
xor
xor
jl
jnp
mov
pushf
xor
outsb
push
mov
int3
xor
out
mov
fdivl
sbb
in
xor
cld
xor
xor
xor
cld
int
lcall
xor
pop
xor
int
mov
jl
jnp
mov
pushf
xor
lods
dec
xor
add
mov
fdivl
sbb
in
xor
cld
xor
xor
mov
sbb
sub
lret
xor
xor
pop
xor
push
les
add
jl
inc
imul
cmp
sub
out
adc
xor
xor
xor
or
cld
xor
pusha
xor
and
or
je
dec
in
fwait
xor
adc
dec
or
pushf
xor
xor
dec
xor
mov
int3
adc
std
mov
and
xor
sub
stc
fwait
mov
xor
xor
insb
pop
push
test
xchg
mov
test
int3
adc
xor
in
or
xor
mov
sbb
sub
sub
loop
xchg
add
add
mov
pusha
dec
cmp
ljmp
mov
sub
or
loopne
test
das
xchg
loopne
pusha
add
test
dec
mov
pop
push
cmp
lea
insb
cmp
mov
add
mov
and
cmp
or
ds
and
ds
inc
or
adc
push
push
pushf
loopne
test
popa
inc
adc
mov
inc
mov
sub
inc
lahf
or
inc
push
push
lds
xchg
adc
sub
add
add
incl
add
xor
xchg
sahf
xor
aaa
cld
sub
xor
inc
xor
xor
and
and
pop
push
adc
int3
xchg
xor
pop
add
ret
jmp
dec
xor
leave
and
xor
icebp
adc
adc
add
mov
xor
repz
and
sub
fidivl
and
in
push
ss
ss
fdivs
cmpsb
aaa
push
and
add
pushl
cmp
push
cmp
add
cmp
mov
sub
aaa
bound
xchg
cmp
pop
inc
adc
call
test
jl
cmp
mov
sbb
pop
cmc
fstpt
lock
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
adc
int
push
mov
cmp
cmp
lods
add
cli
test
sti
cmp
adc
ret
adc
xchg
and
pusha
ja
mov
jp
ljmp
mov
shlb
xor
xor
xor
add
xor
loopne
ret
add
subb
lds
sbb
into
cmp
cmp
cmp
cmp
loop
mov
cmp
cmp
add
add
outsl
sub
int
cltd
cmp
out
repnz
add
fwait
cmp
cmp
das
sub
jbe
roll
inc
pop
inc
adc
add
fidivs
cwtl
ds
ds
xor
xchg
push
ret
incl
inc
loopne
xor
aad
adc
les
add
push
adc
jno
js
adc
xor
dec
loope
add
lods
xor
xor
xor
in
fists
xor
xor
xor
lahf
outsb
imul
das
dec
loope
lock
or
mov
or
imul
cmp
sub
push
push
aaa
jg
cmp
cmp
cmp
pop
cmp
lret
faddl
pusha
or
adc
jbe
xor
push
xor
pusha
mov
push
hlt
push
cld
xor
xor
push
aaa
test
lock
mul
sub
outsl
enter
cmp
cmp
mov
cmp
mov
cmp
sub
aas
fistpll
xor
call
add
and
mov
movsl
pop
inc
decl
pop
xor
xor
xor
fidivl
rdtsc
cli
data16
xor
xor
in
jecxz
adc
xchg
stos
xor
ss
ljmp
cli
mov
and
xor
dec
add
pop
cmp
cmp
and
sbbb
cmp
lret
pusha
dec
or
fnstsw
push
cmp
push
jge
pop
cmp
or
fdivrl
fisttpl
add
je
nop
cmp
cmp
cmp
pop
lock
jmp
xor
mov
push
outsb
jo
sbb
out
fildll
or
mov
cltd
add
dec
rcr
aaa
cld
push
adc
rcrb
popf
xor
xor
mov
scas
xor
ljmp
xor
xor
cmpsb
pop
and
adc
mov
insl
ss
cmpsb
add
divl
push
aaa
jmp
aaa
cs
aaa
inc
scas
idiv
aaa
pop
aaa
xchg
aaa
jne
aaa
nop
aaa
pop
aaa
test
mov
inc
nop
add
incb
stos
cmp
adc
or
cmp
cmp
cmp
cmp
cmp
and
mov
adc
jae
lret
cmp
scas
cmc
cmp
dec
sbb
ds
adc
outsl
lock
decl
mov
insb
xor
push
inc
nop
push
cwtl
xor
jl
push
or
and
cmp
xor
jg
ret
xor
xor
cmp
cmpsl
adcl
mov
pop
lock
mov
test
ss
testl
fists
push
aaa
adcl
pushl
cli
adc
cmp
rclb
cmp
dec
aad
les
popf
cmp
lds
cmp
cmp
into
adc
pop
cmp
cmp
ljmp
lea
hlt
adc
dec
aas
jb
sbb
es
inc
loop
icebp
pushl
je
or
divb
mov
adc
xor
adc
fidivl
ss
jg
and
jo
cmp
dec
cld
push
cld
cmp
sub
ds
aas
and
or
xchg
nop
jle
lret
test
stos
xor
xor
xor
cld
les
cmp
cmp
mov
cmp
jl
repz
adc
cmp
mov
xor
sub
cmp
sarl
imul
cli
fstpt
leave
cwtl
jnp
inc
cmp
cmp
daa
mov
mov
sbb
scas
es
shl
jo
add
push
mov
das
or
xchg
lock
mov
xor
xor
nop
pop
xchg
xor
fs
cmpsl
xor
popa
mov
inc
xor
xor
call
xor
out
dec
out
adc
dec
mov
cmp
cld
ss
ss
ss
or
ss
rorb
fsubrl
daa
ss
das
ss
std
fistl
mov
ss
ss
dec
lods
ss
lcall
pop
ss
adc
mov
ja
fbld
sub
ss
cld
aaa
pop
aaa
hlt
out
das
cli
aaa
getsec
add
mov
adc
aaa
daa
aaa
aam
das
fcmovne
aaa
add
aaa
aas
aaa
add
aaa
lods
aaa
or
movsb
push
sbb
jg
xchg
aaa
outsl
aaa
mov
ja
sbb
sarb
je
aaa
insb
aaa
xchg
aaa
fs
or
aaa
cmpsl
mov
scas
dec
dec
aaa
insl
cmp
or
sbb
add
xchg
or
jo
sti
xor
pop
sub
adc
xor
push
mov
inc
stc
xor
xor
cmpsl
xor
scas
xor
xor
xor
add
lods
mov
lods
or
in
adc
xor
xor
xor
sbb
mov
and
dec
mov
push
mov
adc
mov
pop
nop
or
add
xchg
add
xchg
pusha
xchg
es
cmp
xor
cmp
fidivrl
jne
lods
cmp
mov
cmp
cmp
cmp
push
mov
cmp
mov
sub
insb
jecxz
cmp
js
mov
cmp
ljmp
rclb
loopne
xchg
jl
inc
shll
shrb
and
test
and
adc
add
jle
jo
xor
adc
xor
xor
lcall
xor
xor
xor
rorb
inc
jo
sbb
jle
or
je
xor
pop
xor
enter
and
ss
ss
imul
aaa
mov
aaa
orb
loop
call
jge
cmp
push
cmp
xchg
adc
cmp
jnp
add
insl
cmp
adc
cmp
cmp
das
js
testl
sbb
cmp
push
cmp
cmp
imul
adc
cmp
mov
les
cmp
cmp
cmp
fidivrs
cmp
or
ds
adc
xchg
ds
bound
fadd
xor
jae
std
xor
xor
jp
mov
xor
xor
mov
push
inc
xor
mov
add
dec
cld
dec
add
and
rorl
add
jp
xor
call
xor
xor
adc
pop
rclb
sbb
jp
xor
loope
jle
test
xchg
xor
ja
cmp
or
mov
cmp
jp
mov
outsl
jg
cmp
cmp
cmp
and
cmp
cmp
cmp
into
ret
sti
stos
pop
inc
mov
xor
cmp
cmp
and
cmp
cmp
cmp
fidivrl
hlt
inc
cmp
cmp
dec
cmp
lock
mov
xor
stos
xchg
aas
inc
aas
loop
mov
jo
jg
movsb
xor
jbe
cs
das
xor
xor
cli
mov
or
and
push
cmp
jecxz
push
xor
xor
xor
xor
repz
push
mov
mov
jge
outsl
xor
xor
loop
jmp
push
xor
mov
cmp
and
xor
xor
xor
imul
dec
xor
dec
push
es
lock
xchg
xor
ss
into
cmp
mov
or
in
cmp
dec
cmp
cmp
cmp
sbb
clc
and
inc
cmp
out
and
loope
pusha
or
inc
or
dec
js
cli
fcomip
mov
loop
xor
sbb
push
adc
sub
cli
in
outsl
jbe
lock
jo
pusha
test
cmp
jg
lcall
cmp
jg
mov
cmpb
aam
sti
cmp
jle
mov
jp
xor
ljmp
or
dec
mov
test
cmp
lock
outsb
aas
and
lock
addl
shlb
dec
outsl
cli
add
xor
xor
xor
fidivs
lcall
in
fisubl
cmp
mov
jg
cmp
cmp
cmp
cmp
insl
cmp
div
push
adc
js
mov
jecxz
xor
lret
dec
jl
sbb
mov
ret
mov
push
clc
xor
bound
add
xor
xor
fisubrl
xor
mov
mov
sarb
adc
fnsave
movsl
test
xor
mov
test
pop
cmp
cmp
sbb
fnstcw
cmp
jnp
mov
cmp
jecxz
add
scas
cli
incl
cmp
test
pop
in
xchg
add
mov
cmp
jo
mov
inc
cmp
xchg
es
incl
loope
cmp
cmp
cmp
mov
cmp
cmp
ds
les
ds
mov
ja
jbe
mov
xor
add
jo
aas
test
mov
xor
add
les
xor
leave
xor
scas
xor
add
inc
xchg
scas
xor
xchg
xor
xor
and
and
fcomip
jg
and
mov
lds
in
mov
rol
popa
xor
push
jno
xor
and
xor
enter
decl
mov
popf
xor
test
xor
xor
dec
xor
ss
ss
xchg
mov
add
insb
mov
jle
aaa
shlb
or
sbb
or
cmp
lock
adc
cmp
cmp
mov
jg
cmp
cmp
cmp
sub
sarb
xor
cmp
adc
cmp
cmpsb
cmp
cmp
adc
sbb
loope
cmp
pushf
cmp
cmp
cmp
mov
push
fnstsw
lret
jle
mov
loop
adc
cmp
cmp
call
cmp
xchg
cmp
mov
aas
or
adc
ds
jge
scas
and
or
repnz
aas
mov
ret
and
add
dec
loopne
and
stc
fstpt
or
xor
adc
xor
add
test
out
fidivl
pop
adc
xor
jl
je
pop
or
xor
xor
sbb
mov
and
xlat
adc
xor
xor
xchg
adc
aam
mov
xor
jl
mov
aaa
add
sbb
repnz
std
mov
xor
push
xor
xor
adc
es
adc
clc
fadds
mov
adc
push
adc
xorl
mov
add
sbb
adc
mov
xor
xor
clc
pop
xchg
addb
add
divb
adc
fisttps
sub
divb
shll
jbe,pt
pop
push
mov
ss
adc
inc
adc
pop
mov
add
push
push
jge
lahf
lock
jp
aaa
imul
aaa
sub
decb
test
cmp
cmp
ljmp
cmp
cmp
repz
cmp
mov
cmp
cmp
cmp
popf
cmp
cmp
cmp
outsb
decb
pop
cmp
cmp
jo
lds
stos
cmp
pop
mov
push
movsb
xchg
and
and
mov
xchg
aam
aas
sbb
cmc
aas
add
add
mov
clc
add
popf
jmp
xor
xor
orb
dec
xor
call
mov
xor
xor
xor
fs
notb
enter
jo
movsl
xor
mov
dec
pop
push
aad
xor
jp
outsb
inc
push
dec
push
push
add
ss
adc
xor
xchg
xor
cld
fistl
sbb
mov
add
pop
cmp
push
mov
and
add
rolb
ds
or
mov
ds
lcall
cmpsl
shlb
inc
test
push
dec
mov
shll
dec
inc
call
clc
inc
xchg
clc
cli
xor
inc
jp
xchg
xor
ret
in
das
cmp
xor
xor
xor
lahf
xor
pop
push
cmp
push
push
repz
cmp
cmp
dec
mov
mov
pop
cmp
into
aas
gs
ret
test
mov
mov
xor
mov
cwtl
xor
arpl
ret
xor
xor
notb
mov
xor
inc
xor
jmp
xor
xor
jg
ja
jmp
xor
shlb
or
add
sarb
outsl
pop
test
in
and
rclb
xor
lret
outsl
out
ss
mov
push
ss
ss
mov
jbe
inc
jle
xchg
ss
mov
jns
xorb
adc
pop
mov
aam
ss
adc
bound
mov
push
or
fcomip
ss
jge
mov
dec
cmp
cmp
or
push
test
lods
jo
cmp
mov
push
fcoml
adc
cmp
cmp
imul
cmp
cmp
cmp
cmp
scas
inc
mov
cmp
adc
nop
cmp
lods
push
mov
add
les
adc
repz
cmp
cld
outsb
ljmp
test
cmp
mov
ds
pop
lods
sahf
pop
ds
shll
aas
xchg
aas
leave
test
roll
push
xor
xor
call
loopne
adc
cmc
xor
xor
pusha
mov
ret
pop
divb
mov
push
shlb
xor
pop
jno
or
loopne
sub
cld
cmp
push
pop
mov
cmp
std
cmp
cmp
and
sbb
fstpt
fstl
es
cmp
cmp
cmp
mov
das
clc
adc
es
fdivrs
mov
adc
test
cmp
mov
pusha
lea
cld
cmp
call
sbbb
pushaw
sbb
mov
adc
clc
ljmp
cmp
cmp
sbb
xchg
fcmovu
adcb
sub
ds
pusha
cmp
fnstcw
jne
outsb
aas
hlt
or
pushl
xchg
mov
popa
xor
or
aas
xor
dec
mov
xor
push
pop
std
xor
ljmp
or
movsl
push
cmpb
repz
cmp
ss
push
or
sub
test
mov
sbb
loop
mov
loope
sub
cmp
loopne
mov
cmp
mov
adc
inc
ds
cmpb
mov
arpl
mov
push
out
and
ljmp
ss
xor
out
push
xchg
xor
xor
xor
adc
xor
mov
dec
inc
and
add
xor
xor
aaa
ljmp
dec
adc
fildl
mov
ljmp
hlt
mov
xchg
aaa
pusha
aaa
mov
stos
cmp
mov
cmp
cmp
mov
aas
cmp
adc
cmp
cmp
cmp
push
xor
inc
adc
or
ret
add
mov
cmp
cmp
adc
ljmp
lods
sarb
push
fists
jl
mov
inc
cmp
sub
js
cwtl
cmp
and
xor
ret
cmp
pusha
fwait
cmp
mov
fdivrl
add
or
sti
cmp
dec
ds
adc
xchg
outsl
mov
ret
aas
sbb
add
add
sub
xor
andl
jg
pusha
lods
loopne
out
xor
xor
inc
inc
jp
xchg
loopne
in
aad
cwtl
xor
mov
push
lea
pusha
mov
movsb
pop
and
adc
push
mov
add
fs
cmp
cmp
push
cmpl
in
jb
fsubp
push
ds
aas
cmpsl
aas
test
aas
pop
loope
and
adc
xor
push
mov
xor
xor
xor
xor
add
add
incl
inc
xor
pop
xor
loopne
cmpb
outsb
pusha
adc
sub
incl
in
cmc
mov
shlb
je
ficoms
add
ss
ss
push
cli
mov
add
and
add
aaa
out
push
xor
and
insb
and
mov
movsb
mov
in
pop
rcrl
sbb
inc
and
push
loopne
mov
or
and
mov
rcrb
xchg
xor
xor
xor
xchg
xor
test
lret
icebp
das
push
xor
xor
cmp
xor
xor
filds
jge
test
les
sbb
jmp
stos
jle
sarb
data16
and
ss
lcall
aas
loop
or
inc
loopne
pusha
fwait
aad
xor
jp
mov
movb
and
aad
loopne
les
xor
jnp
outsb
arpl
lock
mov
jg
sub
xor
cmp
cmp
and
insl
faddl
push
adc
xrelease
fildll
std
xor
xor
xor
xor
mov
adc
das
xor
xor
xor
mov
xor
push
push
jecxz
aaa
cld
mov
xor
xor
jg
pushl
mov
repnz
addr16
xor
cmpsl
xor
or
push
in
cli
sbb
xor
sub
fbld
xor
xor
xor
xor
xor
xor
adc
fcmovnb
jg
dec
pop
or
xor
jo
cmp
loope
jg
xor
xor
gs
outsl
jo
jnp
jbe
mov
imul
dec
pushf
xor
dec
xor
adc
add
xor
xor
xor
adc
inc
ret
xor
xor
xor
adc
fwait
cmpsb
outsb
xor
xchg
insl
xchg
cmpsb
aaa
add
add
aad
mov
ja
cmp
loop
fsts
pushf
add
cld
incl
cld
cmp
cmp
cmp
push
dec
cmp
ds
ds
shl
push
decl
lock
add
cmp
or
out
les
add
push
push
nop
aad
jmp
xor
xor
pusha
cwtl
aaa
sub
leave
aaa
pop
cmp
cmp
mov
cmp
add
jo
push
cmp
push
mov
lock
mov
clc
push
pop
push
xor
xor
xor
xor
popf
xchg
mov
xor
fdivs
xor
xor
xor
add
inc
sar
xchg
xor
add
pushl
xchg
aaa
push
aaa
lds
loopne
lcall
cmp
aaa
insl
aam
cmp
cmp
cmp
sarb
jl
pop
sarl
cmp
sub
mov
push
divb
and
int
xor
xor
push
xor
xor
xor
inc
push
fnstsw
xor
push
aaa
icebp
sbb
shrb
mov
add
cmp
sti
cmp
mov
outsb
xchg
call
cwtl
imul
adc
jmp
xor
aaa
fs
mov
mov
xor
cmp
pop
add
aaa
cld
cmp
fidivrs
sub
pop
push
cmp
ljmp
out
dec
mov
cmp
add
cmp
stos
rcrb
or
cmp
cmp
cmp
mov
push
or
fisttpl
out
cmp
cmp
cmp
add
push
nop
sbb
add
pop
outsl
cmp
cltd
ds
jmp
icebp
aas
cmp
js
aas
loopne
inc
cmpl
call
jmp
fcoms
xor
xor
xor
jle
xchg
dec
or
xor
inc
ret
ja
add
clc
xor
or
das
shlb
lock
popf
dec
jl
lcall
lock
xor
lock
in
adc
mov
out
xor
aas
out
aas
pop
lock
mov
aas
pop
aas
sahf
adc
aas
mov
jnp
jle
imul
aas
push
adc
ja
js
and
lock
je
push
das
cmp
push
rolb
cmpsl
gs
mov
and
addr16
mov
scas
xor
jmp
fisttpl
cmpsl
mov
outsl
mov
adc
adc
daa
fisubrl
sahf
pusha
ds
or
cld
dec
inc
pusha
xorb
jo
cmpb
aam
add
or
adc
add
shlb
sbbb
sbb
aam
rorb
insb
bound
hlt
pop
adc
and
xor
push
adc
fidivrl
pop
xor
aam
sbb
sti
loopne
cmp
addr16
stos
push
in
add
ss
adcl
mov
aam
pop
in
pop
bound
hlt
stos
fcmovnu
aam
mov
aaa
push
test
adc
out
sbb
das
add
aaa
xlat
sub
iret
aaa
xor
or
mov
adc
stos
aaa
pop
aaa
add
faddl
sbb
add
jo
mov
xorl
xorb
jno
xchg
dec
ud0
add
and
or
dec
add
insl
stc
xor
incl
cmp
sbb
push
adc
in
lock
ljmp
xchg
insl
add
inc
lret
add
jnp
insl
stos
int
dec
inc
decl
jb
xor
and
add
lret
cmpb
lcall
cld
ret
and
out
cmc
std
jmp
mov
mov
popf
lahf
shlb
or
into
mov
pop
or
sub
inc
or
jle
inc
sub
fsubrp
dec
out
pusha
lea
mov
add
or
cmp
jns
ret
add
outsl
faddl
adc
aam
nop
lea
std
xchg
bound
mov
mov
mov
sahf
cmp
mov
jno
test
mov
xor
jge
cmc
fstl
xchg
and
cmpsb
mov
mov
pop
gs
adc
jg
icebp
add
cld
cli
push
dec
lret
add
sahf
lock
std
notb
xorb
sub
and
lds
loope
shr
cmp
cmpsb
push
imul
push
shl
push
sar
fcomip
sti
jge
shr
iret
sbb
mov
mov
loop
test
push
adc
mov
sbb
and
fstl
ret
xchg
mov
mov
sub
push
or
sub
test
push
lret
ret
mov
rorb
and
lods
movsb
icebp
cmp
arpl
cwtl
pop
nop
mov
jg
movsl
das
test
das
jae
bound
adc
add
add
or
es
decl
call
cmp
and
jns
sub
ja
hlt
lcall
incb
sbb
pop
or
mov
pop
popa
and
std
add
and
cld
incl
cwtl
mov
push
add
sti
mov
lcall
loop
mov
jle
in
push
std
mov
lahf
out
fimull
lcall
inc
pop
cmp
das
sarb
iret
imul
jg
mov
test
lock
sbbl
insl
test
je
decl
shll
stos
push
add
std
jg
push
or
add
call
and
dec
cmp
or
pop
xchg
cmc
add
sbb
fdivrp
mov
sbb
ret
fwait
int
rcrl
out
mov
out
fwait
es
mov
call
out
scas
dec
or
push
mov
cmp
filds
inc
jns
inc
es
lret
mov
test
data16
mov
cld
dec
sbb
repz
call
dec
cmp
inc
jne
adc
cli
adc
jbe
inc
xchg
in
es
in
test
test
pop
cli
imull
sbb
jecxz
int
dec
decl
xchg
sbb
xchg
fwait
cmp
push
dec
push
stc
iret
and
jne
aaa
lret
sbb
pusha
outsb
es
lcall
je
add
mov
sub
test
sub
cmp
adc
mov
cmp
adc
mov
scas
xchg
inc
mov
push
adc
dec
cmp
xchg
inc
movl
scas
push
adc
dec
aaa
aas
repz
and
stos
xor
xlat
push
cmpl
xor
aad
rcl
lcall
call
cli
sbb
repnz
hlt
rolb
jp
pushf
rcrb
insb
sub
lret
adc
incl
ss
ret
aam
xor
mov
cs
pop
lea
push
cmp
imul
sbb
in
clc
mov
xchg
aad
cltd
test
out
fsubs
inc
push
lea
jecxz
mov
cmp
mov
adc
pushf
or
in
push
enter
jae
idivl
int3
or
lcall
lods
xor
lods
dec
push
das
xchg
push
and
aam
fsubl
sbb
jno
adc
cli
sub
lret
and
pop
cli
int3
sub
jo
inc
or
popa
movsl
es
sbb
shlb
jp
mov
xor
shr
loopne
and
xchg
ja
test
push
pop
fists
xlat
fcompl
inc
std
cmpsb
pop
xchg
fistpll
scas
loop
jmp
jmp
or
stos
stos
fdiv
add
scas
push
xlat
or
call
push
jp
push
mov
clc
pop
jl
movsl
push
aas
jnp
int
mov
jo
clc
mov
rcr
sarl
aas
pushf
adc
push
adc
loop
in
jae
push
subl
cwtl
add
pushl
sbb
into
mov
orl
bound
dec
mov
adc
lcall
sbb
jge
arpl
xchg
jmp
add
iret
dec
xor
adc
icebp
call
sub
sbb
pop
dec
pushf
dec
push
int3
gs
hlt
jae
fiaddl
cmp
and
stos
adc
int3
push
pop
adc
inc
cli
inc
fcos
jg
pushl
mov
rorb
push
loopne
fnsave
and
out
pushl
jb
xchg
notl
bound
cld
lahf
add
push
inc
rcr
call
loopne
movsb
and
push
pop
sbb
pop
pop
negb
loope
jp
ficoms
insl
enter
or
outsl
add
push
scas
xchg
xchg
lcall
mov
aas
scas
mov
pop
int3
sub
xchg
dec
ljmp
jle
repnz
popa
or
fidivrs
sub
das
push
inc
decl
not
pop
mov
push
shll
push
fcomi
xchg
out
lods
xchg
jle
imul
ljmp
int3
arpl
aam
xor
dec
ror
ja
cmp
xor
stos
in
mull
xorl
cld
cmp
filds
add
fldcw
jecxz
setl
xchg
addr16
mov
rcrl
or
cli
ret
cmp
cmp
cmpsl
lcall
pop
fldenv
movsb
xorps
push
dec
cmc
mov
inc
xor
xchg
mov
cmp
or
xlat
and
push
push
mov
nop
ds
outsl
add
lcall
xor
add
loopne
dec
jg
pop
out
call
outsl
pop
insb
adc
mov
push
shlb
push
inc
jno
mov
sarl
dec
pusha
cld
outsl
incl
or
inc
fsubrs
or
les
shl
mov
cli
xor
cmovb
pop
insb
cmp
cmpsb
aaa
cld
push
pop
dec
jp
jno
out
push
test
outsb
fnstcw
push
das
addr16
rorb
stos
repz
rclb
pop
mov
mov
pop
mov
decl
jg
insl
loopne
aam
lret
or
xchg
or
imul
decl
pop
lea
fidivs
or
cmp
mov
lds
sar
movsb
inc
lahf
cmpsb
cmp
pop
insb
adc
sbb
pushl
std
pop
mov
popf
sbb
and
and
sub
hlt
and
aad
mov
cmp
push
xchg
xchg
shr
xchg
dec
mov
pop
cltd
or
dec
lret
sbb
js
aas
jo
push
pop
jo
in
cmp
jl
jno
pushf
stc
fnsave
xor
int3
pop
add
shl
cld
mov
incl
cmp
or
add
sub
sub
dec
jl
or
sbb
stc
jmp
fistpll
jmp
mov
adc
pushf
xor
pushf
out
pop
inc
loop
pop
js
cmpb
lcall
rcr
sbb
dec
jnp
iret
inc
test
sarl
scas
clc
pop
adc
hlt
imul
je
pop
test
ret
mov
outsb
lods
arpl
idiv
jge
jo
aas
dec
ljmp
sbb
push
or
in
lds
inc
test
xlat
cltd
imul
nop
jg
mov
ljmp
push
lods
jne
sub
pop
pusha
test
loope
fbld
or
stos
or
dec
cmp
jmp
es
sub
lcall
jp
dec
dec
add
sub
pop
dec
xchg
sbb
mov
ljmp
xor
mov
mov
add
ficoml
cmp
xchg
lods
jl
or
daa
loope
fcomip
jge
out
or
dec
dec
push
mov
jp
pop
push
and
fs
call
lcall
sti
popa
pushf
or
mov
sub
sahf
adc
movsl
cmp
ficomps
ret
ret
fisttpll
mov
jno
adc
xor
aaa
adc
idiv
call
leave
adc
push
repz
cmp
cmp
lods
jge
repnz
push
cmp
inc
incl
jmp
or
jp
push
cmp
push
pop
pop
jmp
fcompl
pop
xor
insl
sarl
adc
bound
stos
into
cmp
mov
clc
lcall
jle
lea
test
xchg
adc
call
cld
sub
or
jnp
fs
rcrl
mov
xor
xor
incl
or
pop
mov
adc
repnz
test
sbb
xchg
fisubl
sbb
nop
lock
ljmp
insl
test
jl
ljmp
test
lea
ljmp
lret
jne
jb
loop
xchg
stos
ja
mov
mov
jae
call
pop
cs
jl
cmpsl
inc
sub
cs
add
dec
scas
loopne
iret
aas
cltd
xlat
imul
pop
icebp
xchg
test
hlt
iret
gs
xchg
negb
pusha
popf
sahf
cmpsl
or
lcall
add
push
inc
or
push
xchg
push
dec
pop
fistpll
mov
mov
int
in
rorl
mov
dec
and
test
jno
shl
mov
jge
adc
mov
jo
ljmp
xor
push
pop
mov
push
int3
pop
in
call
inc
mov
movsb
daa
mov
push
push
ret
clc
icebp
sub
sti
and
arpl
in
lahf
popf
cmp
cmp
cmp
movsl
bound
lcall
in
xlat
cmp
push
enter
pop
test
arpl
inc
orb
dec
inc
or
mov
scas
movsb
mov
cltd
stos
cmp
mov
nop
imul
push
add
inc
push
pushl
adc
or
lods
mov
stc
sub
cld
in
mov
lahf
mov
lds
pushl
mov
das
xchg
push
in
push
lds
pop
push
jns
pop
pop
stos
pop
rclb
mulb
ljmp
roll
out
test
push
dec
hlt
sbb
stos
ret
sahf
sar
rclb
cmp
mov
mov
sbb
mov
xor
jp
call
rcll
sub
push
test
add
es
sub
incl
adc
hlt
je
je
popf
lahf
xor
decl
decb
loopne
imul
jae
sbb
jmp
push
mov
lods
jnp
fadds
out
movl
push
push
daa
mov
xchg
add
ja
incl
push
jb
xlat
xchg
mov
push
lret
loop
or
and
and
into
mov
xchg
mov
roll
sbb
mov
sub
xchg
aas
push
hlt
inc
mov
fbld
mov
test
and
je
outsb
lret
or
iret
dec
jge
jbe
int
ljmp
xlat
mov
out
pop
inc
test
mov
lahf
xchg
sti
push
out
push
xor
roll
decl
cmpsl
sbbb
rcrl
bound
bound
jg
sar
xlat
rolb
dec
dec
push
xlat
scas
jl
xor
mov
push
dec
into
in
mov
stos
incl
cld
dec
shrl
jo
xchg
fs
cmp
xchg
roll
mov
aas
aam
mov
jmp
push
push
rorl
xor
or
push
mov
out
xchg
clc
mov
cmpsb
popf
fwait
xor
xor
lcall
in
push
pop
xchg
pop
out
add
pushf
ret
imul
gs
lcall
lret
fisubs
lods
repnz
fadd
ja
mov
and
mov
pop
ja
ljmp
mov
mov
pop
jge
imul
cmc
ja
testb
mov
les
test
bound
and
inc
cld
ljmp
pop
cwtl
lret
sbb
das
arpl
enter
or
ja
xor
or
in
add
and
icebp
incl
dec
in
gs
les
mov
fisubs
mov
dec
push
rcl
xor
mov
push
and
stc
mov
dec
cmp
cmp
inc
jmp
sbb
mov
fimuls
mov
gs
insl
aam
scas
mov
ljmp
imul
pop
sarb
cwtd
scas
pop
mov
es
les
lcall
cmp
sbb
jge
add
aam
addr16
out
pop
popa
and
sar
ljmpw
push
lcall
rcrb
test
sub
das
cs
jmp
push
loope
sbb
int
or
mov
imul
das
mov
notb
pop
cmc
dec
in
ss
or
jne
sti
sbb
xchg
push
pushf
aam
jns
sbb
lcall
jns
xchg
sbb
xchg
outsb
loopne
cld
mov
imul
cmp
xchg
push
rorb
sub
and
jg
call
jnp
dec
sub
jge
or
stc
out
lea
jmp
jmp
lods
cmpsl
orl
fwait
and
std
pop
in
andl
outsl
xchg
push
subl
jle
mov
lahf
mov
js
mov
cmp
sarb
imul
dec
mov
adc
push
in
dec
js
or
dec
jbe
repz
cmc
call
push
es
adc
sub
divl
xchg
sub
lods
lcall
or
push
push
arpl
leave
push
fdivs
mov
ja
pop
icebp
mov
mov
cmpsb
imul
mov
mov
hlt
mov
mov
mov
inc
decb
jo
sahf
popa
mov
jnp
jle
fcmove
and
ret
cmp
daa
lods
push
add
jg
repnz
jne
pop
imul
inc
shl
sub
mov
or
xchg
dec
ljmp
xchg
push
xor
cmp
fwait
mov
call
mov
mov
lret
mov
jmp
push
mov
lcall
sub
jecxz
mov
lods
push
mov
fsts
xchg
pop
fnstenv
mov
adc
inc
sbb
mov
dec
mov
mov
shrl
das
clc
call
sub
arpl
mov
mov
sbb
into
mov
mov
lcall
adc
pusha
insl
xchg
scas
add
mov
mov
sarb
shll
push
add
pushl
divl
xchg
sbb
fisubrs
mov
push
mov
cli
ljmp
adc
mov
cmp
loop
out
pushf
dec
call
fildll
inc
loope
popf
pop
je
pop
jmp
mov
push
xor
mov
push
mov
or
push
popf
mov
mov
xchg
cld
rcll
repz
rolb
ljmp
fsubs
inc
enter
sub
mov
insl
or
lods
mov
inc
jge
daa
adc
addb
cmp
mov
and
test
xchg
push
mov
jle
dec
inc
push
push
sub
lock
mov
cwtl
insb
xor
call
jne
in
adc
scas
sbb
cld
xchg
mov
xchg
mov
in
and
fstl
fdiv
lods
je
push
pop
mov
and
ds
loopne
jne
loopne
push
jp
inc
xchg
xorb
fbstp
or
mov
sbb
inc
jno
mov
jbe
lcall
mov
ja
and
add
adc
stc
jns
xor
out
aaa
mov
ficomps
scas
cltd
jecxz
int3
mov
inc
push
outsl
test
sbb
mov
cmp
mov
cmpsl
mov
decl
mov
int3
popa
xor
call
jns
mov
xchg
cli
xchg
xchg
jecxz
pusha
jae
das
sar
aam
inc
les
mov
xchg
insb
and
cmp
jo
and
jmp
lock
xchg
sarb
mov
repz
jo
sub
mov
sub
sbb
cmp
adc
xor
dec
jnp
lahf
jmp
loopne
mov
mov
inc
aad
and
jbe
add
xor
call
xor
adc
pop
adc
and
cmp
jnp
cmc
lods
sbb
mov
sarb
xor
in
sub
xor
fimull
dec
push
int3
sub
jp
pop
iret
ja
sahf
inc
cmp
pushl
cld
call
and
cmp
fsub
xchg
mov
adc
push
jmp
pop
stos
jmp
mov
sbb
mov
cmpb
inc
lahf
fwait
cmp
sbb
or
mov
push
in
sbb
scas
push
adc
and
clc
mov
mov
gs
incl
push
orl
orb
inc
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
push
xchg
or
popf
and
add
add
mov
jge
push
push
pusha
faddl
push
mov
push
push
xchg
lods
notb
outsb
addr16
jns
gs
push
push
pop
inc
pop
out
adc
popa
insb
inc
test
inc
js
mov
insb
jae
insb
outsb
dec
imul
insl
cmpsl
cmp
ja
fs
jge
mov
insl
pop
add
gs
addr16
mov
imul
outsb
mov
ss
imul
arpl
add
inc
fs
insl
addr16
and
sub
xchg
push
dec
pop
mov
bound
nop
inc
mov
inc
jp
je
nop
imul
gs
imul
add
loopne
repz
push
pop
push
je
insb
push
sbb
jns
sti
or
imul
and
add
addr16
adc
jo
or
sub
addb
push
and
ret
inc
scas
xchg
or
and
inc
das
ja
test
add
push
pop
and
lcall
loop
dec
mov
add
inc
and
push
inc
adcb
mov
xchg
mov
push
test
call
out
addl
sbb
imul
cmp
arpl
or
and
add
add
dec
lret
adc
dec
sbb
mov
push
or
rcll
add
ret
adc
orb
loopne
iret
add
test
stos
lret
repz
adc
outsl
mov
adc
jmp
or
sbbb
pop
inc
mov
dec
sub
mov
lds
adc
lds
push
mov
scas
push
or
cmp
and
push
and
pusha
push
mov
dec
mov
sbbl
mov
adc
imul
dec
addr16
push
test
push
test
cmp
inc
mov
lahf
xor
fsubrl
inc
scas
sbb
mov
adc
xchg
push
aas
test
mov
lds
push
sbbl
lret
add
push
stos
add
inc
mov
add
orb
adc
push
inc
xor
add
push
mov
sbb
mov
mov
pusha
push
or
dec
nop
pop
mov
fimuls
ret
add
push
and
push
ret
pop
or
xor
mov
pop
jg
sbb
jnp
xchg
push
dec
add
das
and
loopne
popl
add
in
daa
jo
cltd
or
inc
pop
add
mov
repnz
sbb
mov
imul
add
inc
push
push
loop
scas
cs
ja
repz
js
shlb
dec
add
push
movsb
cltd
and
mov
push
decb
fs
je
cmpsb
xor
cs
das
jbe
jle
inc
cs
mov
fidivs
or
dec
rorb
jb
adc
ss
out
pop
in
sahf
xor
jl
jg
adc
xchg
add
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
and
add
loopne
add
add
add
add
add
add
or
add
add
js
add
mov
add
add
add
addb
add
add
addb
add
inc
add
addb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
cmp
add
add
add
add
add
add
add
add
mov
inc
cmp
add
add
add
add
add
add
add
add
loopne
add
in
inc
cmp
add
add
add
add
add
add
add
add
or
add
rorb
add
add
add
add
add
add
add
add
add
add
xor
add
mov
cmp
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
test
add
pusha
push
cmp
add
add
add
add
add
add
add
add
rolb
add
inc
pop
cmp
add
add
add
add
add
add
arpl
add
clc
add
addb
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
adc
jo
bound
add
mov
xlat
pop
sub
inc
int
test
je
out
mov
mov
inc
add
lods
mov
icebp
sahf
in
push
scas
mov
adc
adc
pop
cmpl
mov
lret
sbbb
sahf
jnp,pt
outsl
or
jp
call
add
in
cmc
add
int3
pop
pop
sub
mov
pushf
xchg
and
fiaddl
getsec
or
test
aaa
out
pop
cmp
pop
fwait
mov
aad
out
mov
cld
xchg
sbbb
dec
inc
mov
mov
sub
jle
mov
enter
ja
imul
cmp
push
xor
cs
loopne
mov
sub
push
push
ficoml
add
cli
jo
jnp
mov
pop
ret
iret
fcmovnbe
inc
jg
stc
lds
dec
icebp
outsb
add
xchg
xor
add
iret
fs
dec
out
jecxz
fwait
push
data16
mov
adc
dec
arpl
cmpsb
xlat
push
lods
fldcw
sbb
repnz
push
push
inc
push
and
mov
xor
pop
cmc
stos
es
outsl
mov
push
mov
inc
cmc
add
dec
mov
and
add
hlt
xor
mov
inc
and
mov
sub
es
xor
data16
test
jecxz
movsl
enter
addr16
and
mov
mov
mov
daa
shll
push
add
fistpll
sub
xchg
adc
sub
push
inc
cli
hlt
outsl
pop
lock
lock
repnz
inc
imul
popa
lcall
clc
xchg
aaa
mov
pop
gs
or
mov
mov
xor
js
andl
jno
add
mov
and
insb
int3
jae
pop
aas
jns
cmpsl
fbld
pop
jno
xchg
and
sarb
aam
movsb
dec
pop
add
loope
mov
je
leave
outsl
popl
or
mov
ret
stc
cmpsb
fcmovbe
push
sbb
scas
xchg
jmp
pop
xor
into
jecxz
pop
lods
shr
inc
in
pop
enter
sbb
pop
and
pop
fldt
jge
das
dec
mov
imul
push
or
aad
add
push
js
adc
scas
shrd
js
ss
push
test
pop
cmp
dec
xchg
xchg
or
scas
sub
and
cmc
inc
fsts
dec
shl
pop
adc
pop
sub
cmpsb
outsl
and
and
stc
lret
xchg
filds
push
push
push
stc
add
lock
jb
mov
data16
in
cmp
sub
cmp
imul
std
add
xchg
jnp
xchg
stos
int
mov
js
push
jb
xor
and
repnz
js
jnp
cld
ret
and
cmc
add
ja
jp
xor
inc
adc
into
dec
and
outsb
mov
or
sbb
fsubrp
dec
adc
sarl
popa
nop
adc
iret
xchg
ret
lcall
inc
sbb
sbb
lea
test
fisttpll
std
cmp
dec
add
mov
ds
popa
add
int
xchg
ret
xor
js
and
test
sub
pop
gs
clc
ljmp
bound
roll
cli
push
mov
sub
stos
xor
or
xor
aaa
sub
push
mov
fisubrs
lds
jl
test
pop
adc
push
jge
loope,pn
sti
addb
xor
repnz
mov
add
jmp
mov
out
mov
ret
outsb
mov
je
aas
sub
stos
or
outsl
inc
test
dec
mov
pushf
cmp
inc
and
pushf
xchg
sbb
mov
ret
or
pop
popf
sub
xlat
xchg
js
or
xor
dec
es
fistpl
pop
push
cmp
pop
jns
sub
ja
hlt
negb
imul
sbb
das
pop
popa
fnsave
std
push
fildl
cwtl
dec
fsts
add
xchg
dec
lahf
icebp
lcall
jne
mov
sbb
xchg
sbb
fisttpl
fimull
cmpsb
cmp
das
rolb
mov
xor
clc
sahf
adc
adc
add
cmp
inc
sub
insl
jp
test
shrb
dec
rorl
inc
stos
push
add
insl
sahf
inc
std
jg
mov
and
insb
int3
jae
pop
aas
jns
cmpsl
fbld
pop
jno
xchg
and
sarb
aam
movsb
dec
pop
add
loope
mov
je
leave
outsl
popl
or
mov
ret
stc
cmpsb
fcmovbe
push
sbb
scas
xchg
jmp
pop
xor
into
jecxz
pop
lods
shr
inc
in
pop
enter
sbb
pop
and
pop
fldt
jge
das
dec
mov
imul
push
or
aad
add
push
js
adc
scas
shrd
js
ss
push
test
pop
cmp
dec
xchg
xchg
or
scas
sub
and
cmc
inc
fsts
dec
shl
pop
adc
pop
sub
cmpsb
outsl
and
and
stc
lret
xchg
filds
push
push
push
stc
loopne
xor
jo
jb
mov
data16
in
cmp
sub
cmp
imul
std
add
xchg
jnp
xchg
stos
int
mov
js
push
jb
xor
and
repnz
js
jnp
cld
ret
and
cmc
add
ja
jp
xor
inc
adc
into
dec
and
outsb
mov
or
sbb
fsubrp
dec
adc
sarl
popa
nop
adc
iret
xchg
ret
lcall
inc
sbb
sbb
lea
test
fisttpll
std
cmp
dec
add
mov
ds
popa
add
int
xchg
ret
xor
js
and
test
sub
pop
gs
clc
ljmp
bound
roll
cli
push
mov
sub
stos
xor
or
xor
aaa
sub
push
mov
fisubrs
lds
jl
test
pop
adc
push
jge
loope,pn
sti
addb
xor
repnz
mov
add
jmp
mov
out
mov
ret
outsb
mov
je
aas
sub
stos
or
outsl
inc
test
dec
mov
pushf
cmp
inc
and
pushf
xchg
sbb
mov
ret
or
pop
popf
sub
xlat
xchg
js
or
xor
dec
es
fistpl
pop
push
cmp
pop
jns
sub
ja
hlt
negb
imul
sbb
das
pop
popa
fnsave
std
push
fildl
cwtl
dec
fsts
add
xchg
dec
lahf
icebp
lcall
jne
mov
sbb
xchg
sbb
fisttpl
fimull
cmpsb
cmp
das
rolb
mov
xor
clc
sahf
adc
adc
add
cmp
inc
sub
insl
jp
test
shrb
dec
rorl
inc
stos
push
add
insl
sahf
inc
std
jg
mov
and
insb
int3
jae
pop
aas
jns
cmpsl
fbld
pop
jno
xchg
and
sarb
aam
movsb
dec
pop
add
loope
mov
je
leave
outsl
popl
or
mov
ret
stc
cmpsb
fcmovbe
push
sbb
scas
xchg
jmp
pop
xor
into
jecxz
pop
lods
shr
inc
in
pop
enter
sbb
pop
and
pop
fldt
jge
das
dec
mov
imul
push
or
aad
add
push
js
adc
scas
shrd
js
ss
push
test
pop
cmp
dec
xchg
xchg
or
scas
sub
and
cmc
inc
fsts
dec
shl
pop
adc
pop
sub
cmpsb
outsl
and
and
stc
lret
xchg
filds
push
push
push
stc
rcrb
add
in
lock
jb
mov
data16
in
cmp
sub
cmp
imul
std
add
xchg
jnp
xchg
stos
int
mov
js
push
jb
xor
and
repnz
js
jnp
cld
ret
and
cmc
add
ja
jp
xor
inc
adc
into
dec
and
outsb
mov
or
sbb
fsubrp
dec
adc
sarl
popa
nop
adc
iret
xchg
ret
lcall
inc
sbb
sbb
lea
test
fisttpll
std
cmp
dec
add
mov
ds
popa
add
int
xchg
ret
xor
js
and
test
sub
pop
gs
clc
ljmp
bound
roll
cli
push
mov
sub
stos
xor
or
xor
aaa
sub
push
mov
fisubrs
lds
jl
test
pop
adc
push
jge
loope,pn
sti
addb
xor
repnz
mov
add
jmp
mov
out
mov
ret
outsb
mov
je
aas
sub
stos
or
outsl
inc
test
dec
mov
pushf
cmp
inc
and
pushf
xchg
sbb
mov
ret
or
pop
popf
sub
xlat
xchg
js
or
xor
dec
es
fistpl
pop
push
cmp
pop
jns
sub
ja
hlt
negb
imul
sbb
das
pop
popa
fnsave
std
push
fildl
cwtl
dec
fsts
add
xchg
dec
lahf
icebp
lcall
jne
mov
sbb
xchg
sbb
fisttpl
fimull
cmpsb
cmp
das
rolb
mov
xor
clc
sahf
adc
adc
add
cmp
inc
sub
insl
jp
test
shrb
dec
rorl
inc
stos
push
add
insl
sahf
inc
std
jg
mov
and
insb
int3
jae
pop
aas
jns
cmpsl
fbld
pop
jno
xchg
and
sarb
aam
movsb
dec
pop
add
loope
mov
je
leave
outsl
popl
or
mov
ret
stc
cmpsb
fcmovbe
push
sbb
scas
xchg
jmp
pop
xor
into
jecxz
pop
lods
shr
inc
in
pop
enter
sbb
pop
and
pop
fldt
jge
das
dec
mov
imul
push
or
aad
add
push
js
adc
scas
shrd
js
ss
push
test
pop
cmp
dec
xchg
xchg
or
scas
sub
and
cmc
inc
fsts
dec
shl
pop
adc
pop
sub
cmpsb
outsl
and
and
stc
lret
xchg
filds
push
push
push
stc
mov
in
lock
jb
mov
data16
in
cmp
sub
cmp
imul
std
add
xchg
jnp
xchg
stos
int
mov
js
push
jb
xor
and
repnz
js
jnp
cld
ret
and
cmc
add
ja
jp
xor
inc
adc
into
dec
and
outsb
mov
or
sbb
fsubrp
dec
adc
sarl
popa
nop
adc
iret
xchg
ret
lcall
inc
sbb
sbb
lea
test
fisttpll
std
cmp
dec
add
mov
ds
popa
add
int
xchg
ret
xor
js
and
test
sub
pop
gs
clc
ljmp
bound
roll
cli
push
mov
sub
stos
xor
or
xor
aaa
sub
push
mov
fisubrs
lds
jl
test
pop
adc
push
jge
loope,pn
sti
addb
xor
repnz
mov
add
jmp
mov
out
mov
ret
outsb
mov
je
aas
sub
stos
or
outsl
inc
test
dec
mov
pushf
cmp
inc
and
pushf
xchg
sbb
mov
ret
or
pop
popf
sub
xlat
xchg
js
or
xor
dec
es
fistpl
pop
push
cmp
pop
jns
sub
ja
hlt
negb
imul
sbb
das
pop
popa
fnsave
std
push
fildl
cwtl
dec
fsts
add
xchg
dec
lahf
icebp
lcall
jne
mov
sbb
xchg
sbb
fisttpl
fimull
cmpsb
cmp
das
rolb
mov
xor
clc
sahf
adc
adc
add
cmp
inc
sub
insl
jp
test
shrb
dec
rorl
inc
stos
push
add
insl
sahf
inc
std
jg
mov
and
insb
int3
jae
pop
aas
jns
cmpsl
fbld
pop
jno
xchg
and
sarb
aam
movsb
dec
pop
add
loope
mov
je
leave
outsl
popl
or
mov
ret
stc
cmpsb
fcmovbe
push
sbb
scas
xchg
jmp
pop
xor
into
jecxz
pop
lods
shr
inc
in
pop
enter
sbb
pop
and
pop
fldt
jge
das
dec
mov
imul
push
or
aad
add
push
js
adc
scas
shrd
js
ss
push
test
pop
cmp
dec
xchg
xchg
or
scas
sub
and
cmc
inc
fsts
dec
shl
pop
adc
pop
sub
cmpsb
outsl
and
and
stc
lret
xchg
filds
push
push
push
stc
andb
add
in
lock
jb
mov
data16
in
cmp
sub
cmp
imul
std
add
xchg
jnp
xchg
stos
int
mov
js
push
jb
xor
and
repnz
js
jnp
cld
ret
and
cmc
add
ja
jp
xor
inc
adc
into
dec
and
outsb
mov
or
sbb
fsubrp
dec
adc
sarl
popa
nop
adc
iret
xchg
ret
lcall
inc
sbb
sbb
lea
test
fisttpll
std
cmp
dec
add
mov
ds
popa
add
int
xchg
ret
xor
js
and
test
sub
pop
gs
clc
ljmp
bound
roll
cli
push
mov
sub
stos
xor
or
xor
aaa
sub
push
mov
fisubrs
lds
jl
test
pop
adc
push
jge
loope,pn
sti
addb
xor
repnz
mov
add
jmp
mov
out
mov
ret
outsb
mov
je
aas
sub
stos
or
outsl
inc
test
dec
mov
pushf
cmp
inc
and
pushf
xchg
sbb
mov
ret
or
pop
popf
sub
xlat
xchg
js
or
xor
dec
es
fistpl
pop
push
cmp
pop
jns
sub
ja
hlt
negb
imul
sbb
das
pop
popa
fnsave
std
push
fildl
cwtl
dec
fsts
add
xchg
dec
lahf
icebp
lcall
jne
mov
sbb
xchg
sbb
fisttpl
fimull
cmpsb
cmp
das
rolb
mov
xor
clc
sahf
adc
adc
add
cmp
inc
sub
insl
jp
test
shrb
dec
rorl
inc
stos
push
add
insl
sahf
inc
std
jg
mov
and
insb
int3
jae
pop
aas
jns
cmpsl
fbld
pop
jno
xchg
and
sarb
aam
movsb
dec
pop
add
loope
mov
je
leave
outsl
popl
or
mov
ret
stc
cmpsb
fcmovbe
push
sbb
scas
xchg
jmp
pop
xor
into
jecxz
pop
lods
shr
inc
in
pop
enter
sbb
pop
and
pop
fldt
jge
das
dec
mov
imul
push
or
aad
add
push
js
adc
scas
shrd
js
ss
push
test
pop
cmp
dec
xchg
xchg
or
scas
sub
and
cmc
inc
fsts
dec
shl
pop
adc
pop
sub
cmpsb
outsl
and
and
stc
lret
xchg
filds
push
push
push
stc
pusha
and
jo
jb
mov
data16
in
cmp
sub
cmp
imul
std
add
xchg
jnp
xchg
stos
int
mov
js
push
jb
xor
and
repnz
js
jnp
cld
ret
and
cmc
add
ja
jp
xor
inc
adc
into
dec
and
outsb
mov
or
sbb
fsubrp
dec
adc
sarl
popa
nop
adc
iret
xchg
ret
lcall
inc
sbb
sbb
lea
test
fisttpll
std
cmp
dec
add
mov
ds
popa
add
int
xchg
ret
xor
js
and
test
sub
pop
gs
clc
ljmp
bound
roll
cli
push
mov
sub
stos
xor
or
xor
aaa
sub
push
mov
fisubrs
lds
jl
test
pop
adc
push
jge
loope,pn
sti
addb
xor
repnz
mov
add
jmp
mov
out
mov
ret
outsb
mov
je
aas
sub
stos
or
outsl
inc
test
dec
mov
pushf
cmp
inc
and
pushf
xchg
sbb
mov
ret
or
pop
popf
sub
xlat
xchg
js
or
xor
dec
es
fistpl
pop
push
cmp
pop
jns
sub
ja
hlt
negb
imul
sbb
das
pop
popa
fnsave
std
push
fildl
cwtl
dec
fsts
add
xchg
dec
lahf
icebp
lcall
jne
mov
sbb
xchg
sbb
fisttpl
fimull
cmpsb
cmp
das
rolb
mov
xor
clc
sahf
adc
adc
add
cmp
inc
sub
insl
jp
test
shrb
dec
rorl
inc
stos
push
add
insl
sahf
inc
std
jg
mov
and
insb
int3
jae
pop
aas
jns
cmpsl
fbld
pop
jno
xchg
and
sarb
aam
movsb
dec
pop
add
loope
mov
je
leave
outsl
popl
or
mov
ret
stc
cmpsb
fcmovbe
push
sbb
scas
xchg
jmp
pop
xor
into
jecxz
pop
lods
shr
inc
in
pop
enter
sbb
pop
and
pop
fldt
jge
das
dec
mov
imul
push
or
aad
add
push
js
adc
scas
shrd
js
ss
push
test
pop
cmp
dec
xchg
xchg
or
scas
sub
and
cmc
inc
fsts
dec
shl
pop
adc
pop
sub
cmpsb
outsl
and
and
stc
lret
xchg
filds
push
push
push
stc
inc
es
jo
jb
mov
data16
in
cmp
sub
cmp
imul
std
add
xchg
jnp
xchg
stos
int
mov
js
push
jb
xor
and
repnz
js
jnp
cld
ret
and
cmc
add
ja
jp
xor
inc
adc
into
dec
and
outsb
mov
or
sbb
fsubrp
dec
adc
sarl
popa
nop
adc
iret
xchg
ret
lcall
inc
sbb
sbb
lea
test
fisttpll
std
cmp
dec
add
mov
ds
popa
add
int
xchg
ret
xor
js
and
test
sub
pop
gs
clc
ljmp
bound
roll
cli
push
mov
sub
stos
xor
or
xor
aaa
sub
push
mov
fisubrs
lds
jl
test
pop
adc
push
jge
loope,pn
sti
addb
xor
repnz
mov
add
jmp
mov
out
mov
ret
outsb
mov
je
aas
sub
stos
or
outsl
inc
test
dec
mov
pushf
cmp
inc
and
pushf
xchg
sbb
mov
ret
or
pop
popf
sub
xlat
xchg
js
or
xor
dec
es
fistpl
pop
push
cmp
pop
jns
sub
ja
hlt
negb
imul
sbb
das
pop
popa
fnsave
std
push
fildl
cwtl
dec
fsts
add
xchg
dec
lahf
icebp
lcall
jne
mov
sbb
xchg
sbb
fisttpl
fimull
cmpsb
cmp
das
rolb
mov
xor
clc
sahf
adc
adc
add
cmp
inc
sub
insl
jp
test
shrb
dec
rorl
inc
stos
push
add
insl
sahf
inc
std
jg
mov
and
insb
int3
jae
pop
aas
jns
cmpsl
fbld
pop
jno
xchg
and
sarb
aam
movsb
dec
pop
add
loope
mov
je
leave
outsl
popl
or
mov
ret
stc
cmpsb
fcmovbe
push
sbb
scas
xchg
jmp
pop
xor
into
jecxz
pop
lods
shr
inc
in
pop
enter
sbb
pop
and
pop
fldt
jge
das
dec
mov
imul
push
or
aad
add
push
js
adc
scas
shrd
js
ss
push
test
pop
cmp
dec
xchg
xchg
or
scas
sub
and
cmc
inc
fsts
dec
shl
pop
adc
pop
sub
cmpsb
outsl
and
and
stc
lret
xchg
filds
push
push
push
stc
and
xor
jo
jb
mov
data16
in
cmp
sub
cmp
imul
std
add
xchg
jnp
xchg
stos
int
mov
js
push
jb
xor
and
repnz
js
jnp
cld
ret
and
cmc
add
ja
jp
xor
inc
adc
into
dec
and
outsb
mov
or
sbb
fsubrp
dec
adc
sarl
popa
nop
adc
iret
xchg
ret
lcall
inc
sbb
sbb
lea
test
fisttpll
std
cmp
dec
add
mov
ds
popa
add
int
xchg
ret
xor
js
and
test
sub
pop
gs
clc
ljmp
bound
roll
cli
push
mov
sub
stos
xor
or
xor
aaa
sub
push
mov
fisubrs
lds
jl
test
pop
adc
push
jge
loope,pn
sti
addb
xor
repnz
mov
add
jmp
mov
out
mov
ret
outsb
mov
je
aas
sub
stos
or
outsl
inc
test
dec
mov
pushf
cmp
inc
and
pushf
xchg
sbb
mov
ret
or
pop
popf
sub
xlat
xchg
js
or
xor
dec
es
fistpl
pop
push
cmp
pop
jns
sub
ja
hlt
negb
imul
sbb
das
pop
popa
fnsave
std
push
fildl
cwtl
dec
fsts
add
xchg
dec
lahf
icebp
lcall
jne
mov
sbb
xchg
sbb
fisttpl
fimull
cmpsb
cmp
das
rolb
mov
xor
clc
sahf
adc
adc
add
cmp
inc
sub
insl
jp
test
shrb
dec
rorl
inc
stos
push
add
insl
sahf
inc
std
jg
mov
and
insb
int3
jae
pop
aas
jns
cmpsl
fbld
pop
jno
xchg
and
sarb
aam
movsb
dec
pop
add
loope
mov
je
leave
outsl
popl
or
mov
ret
stc
cmpsb
fcmovbe
push
sbb
scas
xchg
jmp
pop
xor
into
jecxz
pop
lods
shr
inc
in
pop
enter
sbb
pop
and
pop
fldt
jge
das
dec
mov
imul
push
or
aad
add
push
js
adc
scas
shrd
js
ss
push
test
pop
cmp
dec
xchg
xchg
or
scas
sub
and
cmc
inc
fsts
dec
shl
pop
adc
pop
sub
cmpsb
outsl
and
and
stc
lret
xchg
filds
push
push
push
stc
test
pusha
pop
cmp
add
pop
cmp
add
pop
cmp
add
pop
cmp
add
pop
cmp
add
pop
cmp
add
push
dec
inc
dec
xor
cs
dec
dec
add
jae
je
insb
jae
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
je
insb
inc
jne
push
je
imul
