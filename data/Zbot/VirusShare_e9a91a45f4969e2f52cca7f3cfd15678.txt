out
out
incl
adc
std
roll
add
push
mov
push
mov
mov
pop
stc
sti
dec
test
imul
sub
out
fisttpll
add
or
call
mov
por
std
mov
ror
dec
mov
popa
mov
mov
push
in
or
add
shrb
pusha
push
jmp
inc
orb
cli
imul
jg
inc
cmp
movsb
lea
xor
sub
mov
mov
ljmp
mov
pop
std
adc
stc
jg
or
fbld
sub
call
sbb
xchg
dec
mov
add
inc
mov
dec
ljmp
cli
inc
mov
mov
mov
mov
add
test
mov
je
aas
sti
testb
fnsave
jge
and
std
mov
add
inc
dec
jne
jo
jns
or
push
mov
mov
sbb
mov
mov
push
lock
mov
scas
add
inc
or
push
mov
mov
dec
or
pop
inc
stos
jmp
std
pushl
add
nop
aad
dec
int3
or
pop
mov
or
out
add
ljmp
imul
pop
decl
clc
cmp
js
fcmove
dec
ja
jbe
adc
test
mov
jmp
xchg
sar
or
mov
push
jae
faddl
movswl
ja
xor
xor
jmp
clc
push
xlat
mov
sti
leave
inc
jnp
and
mov
mov
rdtsc
lret
mov
jmp
ja
cld
mov
fdivrp
ljmp
inc
sbb
or
push
mov
inc
imull
mov
adc
rcl
add
jl
mov
mov
mov
sbb
or
pop
aaa
in
pop
iret
sarb
in
push
mov
lods
sarl
shlb
mov
xchg
fnstsw
mov
lahf
pop
fnstcw
mov
xor
sub
arpl
sbb
ja
scas
cmp
inc
cli
mov
mov
mov
inc
pop
jo
mov
dec
mov
repz
jg
jno
sarl
pop
mov
or
lret
push
add
inc
mov
std
mov
lret
es
jmp
mov
fbstp
loopne
jne
adc
mov
cld
jp
mov
cli
push
and
xor
adc
mov
push
push
inc
icebp
aas
mov
cmp
mov
sarb
outsl
fwait
xchg
fisubrs
xchg
xchg
ja
jbe
mov
mov
fidivrl
cld
mov
dec
sbb
addr16
cwtl
jg
test
sub
out
leave
popf
inc
les
ja
pop
stc
inc
dec
mov
test
xchg
inc
icebp
or
jle
out
cmc
mov
mov
leave
cmovg
mov
mov
shll
bound
clc
dec
out
test
mov
pop
jb
js
imul
add
sbb
or
add
iret
ja
iret
fisttpll
mov
push
mov
mov
leave
sub
or
cltd
sbbb
ljmp
stos
stc
ja
dec
mov
xchg
fnstsw
repnz
sbb
incl
out
or
pop
mov
jb
mov
and
je
xchg
jl
or
inc
add
and
lods
mov
jbe
cmp
dec
aam
stc
mov
or
or
out
mov
scas
cld
pop
pop
mov
pusha
mov
ficoms
mov
orl
add
pop
jl
fistpll
rsqrtps
int
mov
push
loope
iret
inc
fdivrs
mov
ret
dec
fs
lcall
idivl
insl
push
js
cmp
lcall
jnp
xor
mov
mov
fs
mov
pop
movsb
mov
adcb
inc
bound
push
jle
repnz
dec
dec
inc
push
mov
jmp
dec
add
lahf
movsb
mov
orb
aad
fwait
mov
jle
aas
aaa
out
outsl
cmp
ljmp
push
mov
mov
loop
mov
mov
or
push
lea
push
push
sbb
les
push
incl
xchg
pop
aaa
mov
in
jecxz
add
movsb
jg
ja
mov
push
inc
fldenv
test
jle
cmpsb
out
sarb
inc
lea
das
fdivrs
sbb
push
sub
or
sbb
cwtl
ja
leave
push
add
push
enter
mov
mov
or
loope
mov
mov
adc
imul
cmp
pop
loopne
and
mov
neg
or
mov
mov
inc
xchg
lods
std
loopne
incb
dec
pop
mov
mov
fimuls
xchg
dec
xchg
stos
mov
mov
adc
inc
adc
imull
fsubs
adc
mov
push
add
loope
jg
in
xchg
or
cld
xchg
pop
inc
xchg
adc
fdivrp
add
xchg
inc
xchg
xor
mov
jnp
push
xlat
mov
out
pop
jno
mov
jmp
mov
cmp
mov
mov
inc
jae
dec
fwait
mov
movsl
mov
adcb
adc
mov
jle
or
sub
ret
decl
cld
out
lds
inc
mov
fndisi(8087
scas
mov
imul
cmp
insb
pop
add
repz
aad
cmp
jo
push
js
inc
mov
inc
lea
dec
pop
cs
lret
cmp
call
mov
mov
xchg
xor
mov
push
push
scas
leave
je
push
push
aad
repnz
mov
jl
jbe
mov
mov
push
mov
mov
test
mov
mov
mov
ja
rcll
test
lds
jo
sub
call
mov
repnz
jg
das
call
je
fisubrs
mov
cmp
scas
out
mov
stc
sub
sbb
mov
sub
mov
push
out
pop
xchg
into
mov
cmp
and
mov
mov
pop
jno
mov
inc
in
add
std
mov
xor
xor
mov
fsubs
pop
inc
es
pop
inc
mov
push
out
mov
cmp
mov
out
lret
mov
addr16
mov
mov
xlat
rcrl
dec
jle
in
pop
ljmp
in
stc
adc
jp
mov
mov
push
ss
xor
into
cli
or
mov
ret
decl
xchg
push
add
push
mov
mov
mov
enter
scas
enter
cmpl
pop
idivb
sub
sbb
std
jg
add
pop
sahf
lahf
cmp
and
mov
fidivs
pop
push
mov
add
mov
sbb
mov
sbb
movsb
popa
aaa
mov
fs
lods
lea
mov
cmp
jg
stos
inc
repnz
ja
sarl
int3
fs
jne
xchg
dec
push
stos
pop
mov
popa
stos
pop
or
mov
ja
jae
mov
pop
jmp
pop
clc
incl
push
xchg
pop
mov
inc
pop
test
or
push
aaa
mov
loop
jle
ja
imull
push
clc
adc
fstpl
mov
xchg
daa
icebp
rcrl
scas
and
mov
out
stos
pop
and
mov
jae
mov
cmp
mov
or
inc
push
jo
int3
mov
mov
in
mov
lahf
pop
jmp
mov
jmp
pop
add
cli
cmc
sbb
inc
add
lock
push
push
mov
sar
or
dec
dec
jmp
xchg
out
mov
das
aas
push
jp
mov
xchg
jle
imul
jmp
mov
aaa
mov
in
dec
icebp
lret
push
or
inc
ja
mov
ljmp
out
mov
push
xor
push
out
jg
daa
adcl
inc
jge
daa
mov
dec
lret
fsts
mov
fcomip
dec
xor
xor
xlat
xor
mov
aas
sbb
mov
das
in
xchg
cmc
jmp
mov
mov
sarb
push
lea
scas
sub
dec
mov
cmp
mov
push
jns
and
mov
imul
jg
dec
ss
dec
sub
xchg
mov
es
mov
out
ret
mov
aas
jmp
and
xor
lahf
in
popa
inc
or
imul
outsb
out
inc
xor
mov
sbb
push
mov
jg
mov
jle,pn
push
push
out
lcall
std
add
rcrb
popf
mov
out
lahf
lock
mov
jge
cs
ljmp
dec
outsb
sub
pop
mov
and
fchs
lret
mov
loope
or
cmp
clc
sbb
lods
cmp
mov
mov
mov
push
mov
out
mov
aad
xchg
mov
std
lcall
fisubrs
adc
aad
test
fidivl
das
and
sarb
push
aas
std
out
movsl
xchg
mov
sbb
sarl
mov
in
icebp
stos
fistps
and
push
iret
mov
jg
sbbl
pop
scas
cld
repnz
pop
jp
push
test
cmp
xchg
loopne
sbb
xchg
cmp
cmpb
sub
fistpll
dec
movsl
xchg
mov
xchg
sub
and
and
cmc
jg
mov
js
push
out
addr16
orl
subl
cltd
inc
mov
jmp
mov
mov
mov
jge
mov
mov
ds
cmc
call
mov
psubb
dec
lret
sti
mov
pop
mov
lret
push
mov
and
lds
lea
test
push
movsl
hlt
mov
loopne
mov
in
cmpsl
mov
scas
xchg
inc
idivb
dec
imul
loope
aas
xor
outsl
mov
sub
mov
mov
xchg
mov
mov
and
in
sub
loope
mov
pop
inc
inc
daa
sbb
outsl
mov
cld
adc
or
add
push
aam
cmp
pop
test
aas
mov
pop
imul
pushf
jae
scas
mov
daa
or
jo
sbb
xchg
rcrl
call
jno
lahf
xchg
xor
mov
out
dec
orb
sbb
mov
popf
dec
or
pop
or
bswap
mov
ljmp
outsl
mov
decl
inc
push
cmc
fcoml
shll
sub
decl
push
sbb
je
pop
push
inc
std
leave
push
out
adc
push
repz
mov
xchg
mov
pop
daa
hlt
int3
cmp
sbb
imul
popf
sti
jg
mov
lret
scas
mov
sbb
adc
popf
cmpl
cmp
xor
sub
hlt
lcall
xchg
jmp
and
stc
arpl
xchg
mov
sti
lret
cmp
cmpsl
sub
cld
add
mov
push
cld
aas
pop
jmp
dec
loop
mov
clc
sub
stos
cmp
sbb
push
loope
inc
addr16
adc
push
sbb
fstps
jge
mov
jg
inc
bound
in
mov
jg
pop
push
adc
int
mov
push
mov
dec
incl
arpl
sbb
inc
or
xlat
mov
ss
hlt
sub
mov
das
cmc
or
lods
loope
fnstsw
ss
hlt
fcmovnu
mov
jbe
cmpb
jg
cltd
addl
aas
sub
jle
insb
mov
inc
push
mov
inc
lds
gs
les
sub
mov
xor
push
stc
cs
mov
dec
push
loop
ficoms
das
mov
inc
mov
ds
cld
adc
dec
jno
inc
cmp
pusha
push
not
xchg
xor
sbb
xchg
mov
mov
call
movq
xchg
lods
mov
pop
fstl
jg
popf
pop
mov
insl
stos
das
call
test
daa
sbb
shll
outsb
mov
mov
jg
pop
inc
push
add
jle
pop
mov
ret
fnsave
lods
mov
inc
ljmp
movd
jle
mov
jmp
repz
dec
outsb
test
ja
sbb
sbb
mov
dec
cmp
mov
ljmp
jo
sahf
mov
leave
pop
stc
jb
jl
mov
aas
fld1
cli
mov
adc
into
mov
mov
cmp
sbb
mov
fistl
jbe
ret
or
pop
cwtl
xor
mov
mov
xor
pop
mov
mov
sub
sar
test
push
inc
fdivrl
pop
clc
add
ret
popa
loop
or
mov
pop
xchg
xchg
mov
push
mov
mov
mov
mov
jnp
int
sub
lahf
xlat
jecxz
xchg
jecxz
fistps
cld
call
sbbl
out
add
or
mov
and
xor
mov
jns
mov
mov
push
cli
fstpt
sbb
mov
mov
mov
mov
fsubrs
jae
dec
lea
mov
ljmp
ja
jmp
cmp
push
lds
fcompl
add
mov
and
out
inc
idivb
fisttpll
mov
loop
orl
js
sbb
push
cwtl
mov
insb
jne
cld
das
push
jmp
gs
pop
hlt
std
lahf
lahf
inc
mov
mov
pop
dec
xchg
push
xchg
xor
out
mov
pop
mov
enter
jo
xchg
ds
add
push
dec
jo
mov
fwait
int
and
xchg
mov
sub
or
dec
push
dec
sbbb
mov
xchg
cmpb
jmp
aam
or
add
lahf
insb
lock
mov
lret
and
sub
mov
in
movsb
cmp
push
inc
sub
decl
or
push
xchg
or
xchg
icebp
add
hlt
daa
ja
mov
dec
xchg
aas
mov
lret
sbb
jmp
mov
jg,pn
mov
mov
addb
inc
or
mov
jbe
inc
adc
mov
sbb
loopne
fnstsw
inc
inc
fnstsw
add
pop
insl
pop
xchg
add
mov
and
sub
fisttps
daa
push
lret
stos
imul
imul
xchg
xor
cld
nop
lret
pop
inc
adc
sar
pop
adc
mov
xchg
fcoms
mov
jne
dec
enter
xchg
mov
lahf
in
dec
mov
xor
pop
imul
testb
sar
dec
jmp
scas
test
jmp
ja
mov
in
mov
mov
mov
sbb
inc
decl
clc
jae
mov
shll
xlat
fstps
dec
sub
inc
mov
mov
xchg
mov
mov
shll
sbb
add
aas
icebp
inc
lock
mov
cltd
mov
mov
imul
pushf
pop
ret
cmp
sub
sarl
stos
iret
hlt
lret
movsl
add
mov
jnp
mov
xor
pop
pop
loope
mov
inc
push
int3
mov
sub
xchg
in
in
adc
fwait
inc
repnz
fnstcw
in
xor
mov
ljmp
cwtl
cwtl
insl
push
dec
dec
mov
jne
mov
jge
sbb
sbb
pop
cli
push
les
cld
rorb
jmp
cmp
sbb
jbe
imul
out
cld
jg
push
std
test
mov
jns
mov
or
mov
mov
sti
jg
mov
jnp
mov
inc
dec
dec
cmpsb
inc
cld
jg
or
inc
ret
loopne
mov
outsb
sbb
mov
shlb
loope
pop
mov
leave
inc
xor
jle
mov
enter
xchg
cmp
fstpt
sbb
push
add
mov
add
xor
in
stos
cld
add
hlt
fs
push
push
mov
mov
cmp
jg
xchg
rol
pop
je
pop
insb
mov
mov
imul
cld
and
mov
fcom
inc
aam
scas
jmp
push
test
add
xchg
jge
jg
pushl
jbe
pop
sbb
rcll
push
incl
movsb
mov
leave
push
cmp
sbb
jnp
mov
inc
mov
paddsw
in
dec
jg,pn
shl
xchg
adc
sub
pushl
das
mov
std
std
fisubrl
xor
mov
push
sahf
idivl
fnstcw
inc
pop
dec
sbb
jnp
mov
jecxz
icebp
ljmp
jns
pop
iret
mov
mov
fistpl
imul
jg
sbb
call
clc
pop
dec
mov
add
hlt
mov
je
mov
mov
pop
repnz
sahf
cmp
mov
rcrl
fcomps
out
add
addr16
stos
scas
push
test
adc
insl
jge
cld
aas
jno
xchg
out
dec
fisttps
sbb
cmp
xor
in
mov
jl
adc
jecxz
mov
adc
es
jo
jg
inc
sbb
mov
adc
sub
sub
js
adc
lock
in
arpl
dec
jbe
test
jne
cmp
pop
fucomip
pop
push
fldt
xchg
icebp
pop
aam
xor
and
xor
std
or
loope
fs
loope
mov
clc
pop
rorb
add
imul
add
sti
jl
shll
jnp
shll
push
cltd
and
xlat
ja
mov
mov
jmp
test
mov
adc
mov
repnz
mov
mov
fdivrl
jbe
std
push
cli
insl
push
bnd
mov
addr16
loope
jne
mov
jo
imul
repnz
sarl
mov
cwtl
cltd
mov
sub
das
add
cmp
test
lods
lods
fwait
clc
lds
popa
aam
mov
ja
xchg
stc
bound
fistpl
adc
ljmp
add
dec
sarl
xor
nop
push
push
shl
pop
clc
pop
or
lds
aaa
mov
out
add
mov
fdivp
out
rorb
dec
int3
add
push
inc
xor
pop
in
inc
arpl
or
lods
pop
imul
repnz
pop
mov
xchg
gs
pop
aaa
jle
lret
adc
ds
cld
stc
jge
mov
sbb
mov
mov
scas
sub
daa
cmpsl
dec
sahf
mov
pop
cmpsb
pop
test
cwtl
pop
cmp
lock
and
add
sti
lcall
fidivl
fcomps
jns
mov
jecxz
pop
jle
clc
pop
mov
mov
insb
je
mov
mov
push
cmp
xor
mov
mov
orb
pop
lahf
mov
js
cmp
jbe
loopne
xor
jge
pushl
jne
rolb
mov
and
pop
adc
mov
shlb
pop
sti
and
add
pop
and
push
mov
aad
out
in
lcall
mov
pop
mov
jb
pop
add
xchg
pop
fisttps
jp
fidivs
xor
lahf
sbb
jmp
aad
cmp
pop
and
jle
pop
add
das
push
imul
stc
mov
xchg
js
adc
mov
mov
in
mov
pop
int
lahf
popa
lcall
orl
pop
xchg
mov
mov
notb
rorl
int
les
sbb
lds
sarl
popf
mov
imul
sti
mov
mov
mov
fnstsw
cmpl
xchg
push
loopne
mov
mov
cmp
pop
mov
movsb
mov
loop
mov
mov
or
mov
ljmp
mov
dec
stc
jg
sub
jg
mov
mov
mov
mov
cwtl
in
adc
aad
ljmp
mov
mov
inc
mov
in
inc
cli
mov
lock
imull
mov
mov
rcr
and
movsl
cmpl
aad
or
cld
mov
into
mov
ds
in
push
mov
push
mov
mov
and
mov
xchg
insb
pop
pusha
adc
dec
push
mov
jne
push
xchg
cltd
std
push
inc
mov
je
dec
mov
movsl
mov
mov
clc
ficompl
cmpsl
push
aam
pop
or
jmp
mov
fistpll
mov
inc
jae
mov
mov
ds
std
je
cld
mov
sarl
jno
push
push
aas
fscale
or
dec
mov
mov
arpl
repnz
insb
push
js
pop
mov
loope
shlb
bound
mov
nop
sub
popa
adcl
add
adc
or
inc
sbb
jae
mov
inc
jnp
mov
jmp
sbb
mov
lea
lds
mov
inc
arpl
dec
out
push
xchg
out
jg
ret
jg
outsb
xchg
ja
mov
inc
divl
insb
jl
add
mov
add
mov
out
xchg
pop
scas
mov
loope
call
cli
jecxz
repz
xchg
and
outsl
sub
cli
daa
loopne
cmpsl
cmpsb
inc
pop
push
mov
cmpsl
pop
cld
insl
mov
fistpl
or
lock
push
mov
xchg
jns
mov
mov
mov
lahf
in
out
and
sbb
loopne
outsl
mov
pop
lcall
or
sbb
enter
std
leave
push
call
dec
shrl
lea
imul
cmc
add
push
sub
negl
push
add
mov
cli
ljmp
loopne
pop
ret
mov
fnstenv
add
jmp
pop
fldcw
out
daa
xchg
cwtl
mov
pop
cmc
dec
ficoml
ds
adc
push
movsb
lds
sbb
imul
jecxz
xchg
mov
dec
lods
mov
jnp
scas
cltd
sub
pop
jno
mov
sub
arpl
mov
frstor
mov
stos
fwait
in
outsb
jne
mov
sbb
mov
mov
mov
in
lock
jecxz
in
dec
stos
fidivrs
mov
or
xor
daa
mov
sub
jnp
jecxz
dec
pop
push
pop
aas
add
mov
inc
jg
cmpl
aas
mov
jg
pop
aaa
jmp
aas
xor
inc
lret
movsl
dec
jbe
mov
leave
pop
arpl
xchg
test
movsl
movsl
mov
ja
mov
jecxz
push
fnstcw
cmp
xchg
dec
sarl
cli
mov
jmp
mov
ljmp
rorb
pushf
stos
xchg
mov
mov
pop
mov
adc
scas
paddusb
mov
cmpb
outsl
mov
jmp
and
xor
cli
das
push
sbb
dec
cld
fucomi
dec
mov
push
xor
mov
ret
mov
imul
das
lock
imul
test
cltd
mov
mov
mov
xchg
adc
pop
mov
js
dec
jno
jg
push
insl
in
cld
or
mov
outsl
dec
shll
lcall
les
inc
imulb
jo
loopne
inc
ljmp
pop
mov
sti
gs
jmp
mov
ljmp
xchg
in
mov
add
mov
clc
adc
das
mov
xor
out
cltd
pop
jge
pushf
arpl
aaa
fnstsw
mov
xchg
icebp
gs
jno
cmpsl
popf
cmc
fstps
mov
lock
and
xlat
iret
mov
mov
cmp
insl
cmp
andl
ret
into
movsl
outsb
add
cmp
in
iret
and
mov
sti
outsl
out
leave
fucomi
cmpsb
mov
pop
adc
outsl
adc
loopne
dec
fsubr
ja
jnp
cmp
lds
jg
lret
inc
lret
push
jl
pop
js
mov
outsb
push
and
mov
xchg
sbb
push
out
mov
das
xchg
sub
test
add
pop
sub
xchg
push
xor
mov
dec
loope
mov
sbb
jg
push
jnp
mov
lcall
loop
nop
push
repnz
mov
mov
imul
inc
in
lea
les
pushl
xchg
mov
cmp
in
mov
pop
clc
mov
xchg
xchg
sarl
mov
popf
les
inc
iret
inc
mov
clc
push
jmp
dec
test
push
mov
das
aaa
dec
mov
mov
dec
or
adc
sbb
or
aam
insl
inc
in
movsb
call
add
adc
xchg
or
leave
push
dec
pop
or
iret
loope
mov
xor
dec
jge
pop
rorb
mov
repz
in
mov
pop
mov
test
mov
sahf
mov
js
incl
test
iret
sub
data16
sahf
scas
cmp
scas
jmp
sub
cltd
sub
sahf
popl
and
mov
dec
out
push
cli
aad
shll
daa
dec
mov
and
stos
adc
and
adc
clc
cld
sbb
mov
sub
icebp
or
pcmpeqd
adc
call
push
mov
repnz
imul
dec
filds
aad
mov
andl
cmp
lock
dec
js
mov
or
mov
jecxz
xchg
out
dec
fwait
push
push
imul
jge
mov
push
dec
cmc
pushl
pop
sahf
shll
popl
in
dec
clc
pop
pop
pop
lods
iret
mov
mov
fcomps
xor
jl
in
gs
pop
lea
lea
pop
cld
xchg
lods
pop
into
mov
fistpl
lahf
in
cmc
jg
sub
sub
mov
pop
insl
push
mov
je
push
jae
aas
adc
mov
sar
loopne
xor
inc
bound
clc
outsl
addr16
xchg
mov
fnsave
test
and
out
dec
sbb
das
loop
inc
jo
dec
cmova
mov
out
pop
ret
xor
xchg
xor
out
push
imul
aas
insl
out
mov
cmc
loope
pop
xlat
pop
xor
mov
pop
fucom
lock
mov
mov
mov
push
cld
outsl
sub
pop
mov
mov
jle
out
adc
add
cmp
push
cs
data16
lock
push
push
loopne
ja
sahf
jmp
mov
leave
mov
decb
ret
fs
ljmp
xchg
dec
enter
mov
icebp
mov
stos
insl
ret
loopne
in
dec
in
xor
std
xchg
mov
cmp
mov
test
mov
push
lock
push
cld
ss
repnz
shr
jge
mov
test
bt
sub
aas
fscale
daa
mov
mov
lods
mov
sarb
push
loopne
aas
adc
add
mov
mov
or
aad
xchg
pop
cld
add
aaa
sbb
test
mov
decl
add
jmp
mov
lret
in
cmp
loope
iret
mov
xchg
insl
mov
jns
mov
out
lret
mov
aas
push
aas
mov
imul
fistpll
and
mov
push
sbb
mov
add
dec
imul
loopne
js
mov
stc
xchg
decb
fisttpl
stc
loope
dec
mov
mov
pop
or
jns
add
cld
dec
ss
jp
arpl
dec
dec
aaa
loopne
int
mov
lea
out
adc
dec
cli
cs
mov
mov
imul
into
xchg
and
mov
mov
xchg
mov
add
mov
pop
cmc
arpl
mov
sti
push
inc
mov
sub
xchg
mov
cli
fistpl
adc
aam
push
icebp
ljmp
mov
jo
xchg
xor
repz
jle
mov
lods
mov
jbe
mov
cmp
fisubl
loopne
mov
push
xchg
sub
ret
add
xchg
dec
in
jg
dec
clc
pop
mov
dec
jns,pn
mov
mov
lret
mov
adc
cmpsb
lods
mov
sub
in
aaa
cmc
orb
sbbb
loopne
add
push
fdivrs
sar
dec
mov
xchg
int3
fidivs
lret
mov
in
inc
inc
cmc
test
das
data16
ja
jg
out
dec
pop
cld
outsl
je
loopne
ret
inc
lods
clc
cmc
incl
and
jle
push
icebp
adc
outsl
gs
pop
pop
mov
jle
push
mov
jge
or
mov
adc
push
mov
pop
stos
jp
pop
lret
jmp
cmp
or
and
inc
sbb
or
mov
mov
xchg
xchg
jg
icebp
pop
aaa
jbe
cmp
xchg
mov
mov
call
push
out
rolb
mov
insl
cmpl
ss
fsubs
mov
mov
inc
scas
inc
lret
push
pop
ss
into
pop
clc
mov
sbb
leave
daa
sahf
ds
mov
pop
push
mov
sbb
adc
inc
mov
sub
ljmp
outsb
push
mov
sub
outsl
clc
cmp
jae
adc
mov
dec
mov
jno
lret
dec
je
test
decl
xchg
out
pop
sub
xchg
jbe
inc
mov
loope
sbb
fmul
jmp
jg
imull
push
pop
les
xor
xlat
cmp
push
jns
in
lds
outsb
addb
mov
fldl2e
lods
fwait
jge
mov
ja
notb
cmp
xlat
adc
aas
lods
jbe
adc
sbb
mov
movsl
mov
xor
mov
mov
sarb
std
fs
setbe
cld
repnz
aam
sarl
rcrb
push
and
xor
jmp
mov
pop
adc
rorb
repnz
xor
jle
push
xor
fistpll
pop
push
push
mov
rorl
loope
or
cmp
icebp
mov
push
jg
jo
mov
push
pop
int
iret
mov
sub
mov
sub
adc
jmp
push
gs
call
sbb
in
sbb
cmp
inc
pop
xor
dec
push
mov
std
add
mov
paddd
addr16
or
jecxz
shll
lahf
in
decb
jle
and
ficoms
pop
jne
lods
fisubl
sub
rolb
push
dec
outsl
call
adc
adc
clc
es
mov
inc
jns
mov
sbb
popf
dec
aad
or
push
mov
push
jnp
hlt
mov
jmp
divl
add
rcll
aaa
arpl
sub
lret
sub
jno
pop
xchg
lret
in
and
adc
mov
and
scas
xorb
test
cs
maskmovq
testl
popa
mov
stos
out
jg
lods
dec
loopne
mov
shll
out
rolb
inc
mov
mov
decl
mov
repz
frstor
xchg
mov
inc
test
xchg
mov
push
mov
xchg
push
clc
dec
mov
xchg
sub
das
test
cwtl
xor
jl
repz
aas
or
dec
and
inc
decb
cld
daa
xlat
cmp
fwait
sbb
jne
mov
add
jle
mov
aas
pop
jecxz
jnp
sbb
or
or
cld
repz
cmpsl
test
add
xlat
pop
call
lret
or
cmp
mov
int3
fadd
jge
cmp
push
loop
mov
dec
xorl
pop
xor
jg
mov
data16
and
pop
mov
or
pop
lds
push
cmp
jl
jl
pop
mov
jno
cmc
xchg
ja
pop
movsb
pop
fldcw
mov
popf
stos
fidivrl
sub
sbb
dec
out
loopne
in
mov
lret
push
or
cmpsb
cmp
mov
ficoms
iret
icebp
ja
repz
mov
sbb
xor
jg
mov
jle
fwait
clc
dec
ss
push
nop
mov
add
xchg
imul
mov
adc
inc
dec
ljmp
jge
inc
clc
pop
clc
outsb
test
sti
ljmp
shrl
inc
mov
jl
jg
inc
shrl
mov
adc
das
add
bound
xchg
dec
out
decl
xor
rcll
jae
sbb
stos
dec
mov
push
mov
idivl
push
xchg
ljmp
pop
mov
mov
testb
ret
stos
in
and
xor
jbe
lcall
mov
repnz
mov
xor
incl
adc
xchg
sub
sahf
cld
mov
adc
pop
mov
xor
enter
cltd
pop
ljmp
mov
xor
inc
jge
imul
mov
pop
lahf
mov
arpl
mov
jbe
push
xor
fcmovbe
xadd
jg
insb
fwait
jns
inc
sbbl
hlt
push
adc
mov
cltd
mov
mov
mov
push
fs
in
mov
adc
jnp
mov
cltd
cmp
jo
pop
mov
cwtl
leave
push
push
dec
mov
in
mov
xchg
xchg
lock
fildl
test
gs
push
mov
cmpsl
inc
insb
stos
sbb
mov
pop
lret
incl
test
mov
daa
push
cld
push
adc
aaa
leave
add
bound
xchg
mov
xchg
jecxz
lcall
pop
subb
dec
cmp
cwtl
icebp
mov
mul
ret
xor
lea
loopne
lods
adc
mov
push
mov
jp
shrl
mov
fs
pop
push
cmp
lods
orb
sti
test
out
ja
scas
xchg
xchg
sahf
mov
add
aad
pop
jl
incl
jg
mov
aam
in
sbb
xorb
aaa
lods
cld
test
or
repz
mov
hlt
mov
inc
dec
jmp
cmp
mov
js
sahf
xchg
int
clc
movsl
or
pop
sub
outsl
idivb
test
outsl
inc
inc
mov
pop
cld
movsb
js
dec
movb
aaa
movsl
lea
stos
notl
dec
sbb
cs
shl
js
stos
cli
dec
fisttpl
into
mov
sub
insb
xchg
sarl
mov
mov
mov
sub
sub
or
mov
push
push
ja
jno
mov
mov
lock
adc
inc
ret
mov
pop
dec
jg
xor
xchg
jbe
in
in
scas
mov
pop
jno
jnp
pop
mov
iret
dec
andl
iret
aas
push
je
icebp
mov
leave
lcall
inc
cmpw
stc
ljmp
mov
imul
lret
hlt
pop
sbb
gs
cmp
mov
mov
clc
hlt
mov
dec
roll
cmp
push
jo
xchg
test
icebp
bound
push
dec
inc
ljmp
sarl
add
repz
mov
jmp
inc
das
and
adcb
cmp
inc
ret
into
addl
in
xor
enter
mov
leave
sarl
subl
mov
xor
test
dec
stos
mov
ljmp
cltd
repz
repz
pop
js
loopne
and
icebp
pop
cmpl
jp
sub
cmp
sbb
inc
xchg
loop
repz
adc
in
clc
ljmp
mov
and
ja,pt
loopne
lock
mov
jmp
clc
aas
add
fldl
xchg
daa
push
ret
jo
and
mov
pop
scas
insb
hlt
add
movsb
push
mov
xchg
in
add
and
pop
rolb
stos
insl
and
std
or
sbb
sbb
fildll
pop
jge
cld
xchg
sbb
mov
js
mov
cmpsl
das
pop
test
inc
mov
hlt
jecxz
loopne
imul
addb
mov
das
add
rcr
mov
mov
pop
mov
pop
jp
mov
cmp
clc
aad
repnz
and
sbb
jo
aam
jl
and
out
inc
stc
icebp
incl
call
cli
ljmp
jle
jne
mov
mov
sub
adcl
testl
sbb
and
enter
adc
sarb
lods
lock
iret
aam
imul
in
mov
sub
in
fcomip
repz
aam
lea
mov
and
call
xchg
jmp
repnz
mov
sub
notb
adc
mov
and
jbe
jne
mov
dec
adc
mov
mov
jge
mov
ljmp
mov
sub
xchg
pop
in
xor
jecxz
mov
and
mov
cltd
dec
dec
shll
in
sahf
in
arpl
leave
lock
pop
aam
cltd
sbb
scas
imul
or
inc
out
js
pop
clc
pop
aas
cld
mov
sub
jo
sbb
mov
mov
mov
cmp
aam
pop
out
test
mov
mov
movsb
mov
push
gs
add
xor
in
pop
rcll
mov
lret
mov
and
jp
pop
scas
mov
jl
fistps
sub
jae
mov
incl
mov
xchg
orl
daa
je
cltd
loopne
test
je
out
testl
or
into
lds
jne
movsl
sarl
lds
scas
xchg
fstl
aam
sbb
movsl
ljmp
sti
mov
loopne
dec
pop
jo
addr16
jp
rolb
std
inc
push
push
adc
jp
cmp
xchg
iret
roll
adc
aad
lahf
jb
mov
pmuludq
pop
add
cmpsb
or
les
cs
decl
mov
mov
stos
decl
adc
mov
idivb
imul
out
mov
push
sarl
or
out
dec
mov
pusha
inc
pop
ljmp
lcall
sub
pop
cmp
popa
jle
and
stos
lock
and
insl
dec
mov
incl
mov
xchg
jno
ljmp
mov
icebp
push
xor
test
xchg
cmp
or
repz
push
ret
aas
repz
push
clc
hlt
mov
ja
add
dec
lock
js
cld
jg
pop
xchg
testl
mov
xchg
push
dec
cwtl
jae
mov
jg
repz
es
rcr
aad
dec
dec
ljmp
mov
push
jg
pop
enter
cmpsl
sub
hlt
sbb
sub
aad
or
sbb
mov
sub
jp
jne
or
fistpl
xchg
sarl
mov
sbb
cmpl
inc
mov
insb
inc
rclb
leave
rorl
inc
mov
add
fwait
sub
stos
mov
sub
push
lret
mov
loope
nopl
mov
dec
iret
or
xchg
cmpsb
dec
jno
ret
xchg
mov
fildll
and
movsb
es
es
adc
pop
mov
dec
inc
cmp
mov
loope
jbe
xor
mov
lcall
dec
popa
pop
mov
aam
add
outsl
rcrb
into
aas
pop
stos
dec
stc
push
lahf
movl
cmp
das
in
dec
mov
adc
outsl
clc
add
and
push
insl
int
test
fisubrs
fistps
dec
ljmp
adc
jle
mov
jbe
scas
cld
pop
in
test
rcll
mov
xor
daa
pop
mov
dec
insl
dec
jmp
add
imul
fsin
add
mov
subw
leave
mov
xor
daa
push
sbb
cmp
dec
rorb
lahf
dec
rcrb
sub
rcrb
and
pop
jg
dec
and
mov
mov
clc
adc
lods
or
sub
mov
jg
push
jp
xor
lock
xchg
push
jge
dec
loop
pop
mov
shlb
and
push
ja
jl
andb
stos
and
test
into
addl
jno
add
mov
fstpt
lods
sub
sub
fistpll
cs
test
push
mov
add
out
in
add
mov
sub
or
adc
mov
das
pop
sbbb
push
daa
cld
out
mov
mov
mov
stos
sbb
inc
sti
pushf
push
or
cli
mov
jle
roll
aad
enter
mov
add
fnstcw
js
imul
lods
repnz
lock
jnp
insb
mov
loope
or
jg
shll
mov
inc
data16
jo
lcall
mov
inc
outsl
push
jmp
ret
in
sbb
fldcw
dec
jne
jle
xlat
sbb
jae
xchg
push
mov
jle
or
add
xchg
ret
jns
icebp
pop
jmp
movsl
icebp
and
das
mov
dec
lods
sub
mov
mov
push
jg
cltd
push
dec
mov
rolb
clc
call
jg
sub
add
repnz
pushf
fisttps
sti
call
push
and
add
ds
add
jge
inc
sarl
mov
jp
in
enter
jecxz
mov
mov
fisttpll
mov
xchg
test
aad
pop
dec
push
and
leave
adc
xor
jno
ret
test
outsb
in
in
jo
dec
cmp
addr16
jecxz
inc
movsb
sbb
ret
inc
inc
in
add
push
lock
cmp
mov
mov
cmpl
jmp
lods
lock
std
lahf
pop
cmp
jecxz
push
insl
mov
and
cld
mov
sub
cmpsb
enter
decl
aas
loopne
aaa
lahf
pop
jecxz
scas
mulb
add
or
pop
ja
jg
xchg
loope
and
fdivrs
idivb
and
jne
movsl
adc
shl
notb
scas
lahf
lcall
and
fabs
aas
imul
mov
sub
add
and
jg
cmpl
pop
cmp
jmp
sub
test
movsb
jno
push
stos
leave
inc
and
mov
adc
xlat
dec
xorb
inc
cmp
inc
push
push
mov
pop
dec
jge
xchg
mov
inc
loope
cmpsb
arpl
dec
rorl
bound
arpl
jl
testl
lea
adc
cmp
imul
mov
mov
int3
mov
dec
pop
repz
cmp
clc
leave
push
inc
dec
cs
mov
bnd
hlt
mov
mov
aas
aas
imul
call
lods
aad
lret
xchg
push
out
mov
mov
pop
std
cmp
push
mov
stc
cli
inc
popf
xlat
inc
xchg
push
cmpxchg
or
dec
fwait
inc
and
inc
and
rcll
jecxz
mov
mov
mov
lea
add
or
push
mov
leave
aas
inc
dec
shll
data16
mov
jge
xchg
nop
and
sub
cli
icebp
xchg
add
pop
ffree
inc
cld
pop
jo
sub
incl
fwait
out
data16
mov
ficomps
dec
sub
clc
int3
jp
fdivrl
sbb
fs
addl
jg
inc
js
les
movsl
mov
mov
aaa
lds
push
pop
mov
popf
fs
iret
inc
jl
inc
lret
ret
dec
jmp
aad
fistpll
in
mov
mov
pop
rcrb
xchg
sub
jmp
xchg
cltd
ret
mov
das
into
mov
mov
rcll
push
scas
mov
add
sti
popa
add
and
push
xchg
dec
sub
adc
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
aad
add
aas
inc
adc
and
test
aaa
dec
clc
sti
pop
push
push
push
mov
popa
jmp
fcomip
cmp
repz
pop
call
adc
jo
xor
fisubs
adc
rcr
jmp
ud2
dec
sarl
sbbb
push
and
mov
push
sbb
shll
pavgw
add
dec
xlat
mov
cmpsl
das
nop
adc
inc
adc
cmp
out
jmp
xchg
add
jnp
pop
test
or
cmp
insb
fidivrl
int3
test
jecxz
movsb
cmp
cmpl
lahf
arpl
pop
xor
mov
sub
jae
lods
insb
dec
call
adc
xor
sub
sub
and
subb
sub
test
pop
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
ljmp
fldl
test
in
out
cmp
jmp
std
and
cld
aad
stc
mov
out
stos
clc
mov
aad
mov
mov
cmc
mov
push
cmp
cs
lods
je
and
xchg
mov
je
das
inc
std
push
sahf
clc
clc
out
fwait
push
loopne
sahf
cld
adc
cli
xor
mov
fldt
push
ds
std
mov
stc
xchg
xchg
mov
lret
iret
mov
jae
ljmp
call
xchg
mov
cmpl
call
hlt
add
lcall
mov
mov
hlt
xchg
sahf
nop
in
mov
stos
pop
mov
mov
jns
add
mov
pop
xchg
xchg
xchg
das
clc
movsl
sub
sub
cld
cmp
push
mov
inc
pop
fwait
mov
sarl
jbe
mov
xchg
lods
mov
roll
jge
fsubrp
xor
shrl
mov
jg
add
stos
mov
jecxz
cs
shr
jne
lock
cld
push
movsl
idivl
pusha
push
mov
push
mov
xor
jns
testl
test
orb
xor
mov
test
out
in
pop
xchg
rcrb
mov
mov
call
cld
mov
aas
mov
mov
and
outsb
lcall
vmread
inc
jl
aad
clc
xchg
shrl
ss
call
mov
das
cltd
xchg
movsl
or
mov
scas
add
out
std
cmp
js
les
add
cmp
xchg
fildll
lea
fcmove
xchg
push
out
sbb
mov
add
repz
xchg
test
mov
sti
inc
into
aaa
pop
jl
movsb
pop
fwait
jle
mov
jl,pn
pop
lock
xchg
mov
nop
dec
lea
addb
push
xchg
xchg
xchg
dec
xchg
cltd
test
test
xchg
jge
loope,pn
cmp
testb
sbb
shll
push
out
fistps
inc
lahf
jge
cs
or
rcll
nop
mov
xchg
insb
fdivr
loopne
mov
mov
jno
mov
out
shll
insl
stc
pop
stc
insl
cli
pop
push
out
mov
dec
jl
cs
mov
push
lcall
dec
repz
es
add
insl
sti
ljmp
jb
push
or
shl
lahf
in
shl
xchg
and
mov
sti
jg
fwait
idiv
xchg
repnz
push
push
inc
addl
ds
add
or
push
imul
mov
hlt
sbb
in
pop
outsl
jg
jle
push
sbb
sbb
mov
shl
dec
std
xlat
loope
inc
cs
std
push
mov
cld
push
xor
jge
fldl
mov
pop
shll
or
js
mov
jle
jno
pop
dec
cmc
das
sub
outsb
pusha
pushl
hlt
mov
mov
dec
xchg
in
sub
orb
fwait
jbe
fcmovnbe
into
ficomps
xor
flds
push
lret
decl
jge
leave
jle
push
sub
je
aad
sub
ds
mov
pop
ljmp
add
scas
xor
pop
dec
hlt
mov
xor
test
cmp
decl
call
jp
sbb
popf
testl
std
jecxz
add
jecxz
jle
cld
pop
cmp
jbe
inc
imulb
and
test
pushl
test
xchg
mov
mov
mov
mov
fs
lcall
mov
sub
xchg
lods
inc
cli
subl
cmp
lods
jl
and
pushl
cs
hlt
into
rorb
xchg
out
xlat
roll
fwait
rcrb
sbb
shlb
stc
cmp
mov
cltd
pop
xchg
incl
insl
nop
cmp
pushl
cmpb
xor
xchg
int3
test
jg
fdivl
call
je
sahf
hlt
loope
mov
sahf
pop
int3
jmp
pop
fisttpl
dec
or
mov
test
mov
pusha
pop
xorb
cmpsb
adcl
lock
push
mov
sbbl
icebp
mov
xor
jne
mov
push
je
mov
or
call
jb
cmc
shll
cmp
mov
jbe
jmp
mov
lcall
ljmp
push
cmc
mov
imul
pop
sub
je
out
cmp
out
cmp
adc
incl
ljmp
push
jl
fst
stos
insl
pop
push
out
movb
incl
repz
cs
cmpsl
push
cwtl
push
pop
push
push
pop
cmp
incl
dec
jge
push
idivl
daa
mov
push
arpl
stos
mov
pcmpgtd
cmp
mov
or
aam
mov
cmpsl
dec
je
lds
jb
mov
or
pop
ret
mov
lea
mov
inc
push
es
adc
mov
push
push
incb
out
imul
enter
mov
lds
jns
lock
dec
adcb
sbb
pop
das
int3
mov
cs
jbe
add
decl
bound
mov
push
shr
aaa
sub
push
insb
inc
std
jno
idivl
xchg
mov
es
jmp
adc
aaa
ds
in
jo
and
pushf
fnstenv
call
jne
mov
fs
lock
dec
mov
and
ficomps
adc
mov
or
push
imul
sar
ljmp
dec
lcall
cwtl
test
jae
cld
ss
jbe
lock
adc
gs
xor
push
jo
dec
outsb
jae
xor
push
pop
jp
bound
dec
inc
push
dec
jae
dec
imul
xor
inc
inc
jbe
ja
inc
xor
push
jno
dec
fs
push
dec
imul
dec
mov
push
ljmp
pop
xor
inc
jae
arpl
outsb
addr16
push
outsb
inc
outsb
imul
outsb
xchg
arpl
xor
jno
je
cmp
dec
pop
gs
dec
jp
imul
pop
arpl
xor
dec
cmp
ja
dec
jae
dec
push
inc
outsl
pop
jno
xor
jno
ja
mov
push
jns
data16
inc
js
push
outsb
dec
push
push
inc
pop
bound
pusha
sti
fwait
dec
ja
push
dec
aaa
movsb
jno
push
ja
insb
jns
push
dec
push
cmp
pop
xor
addr16
push
jo
inc
push
insl
js
outsl
gs
inc
imul
lcall
pop
dec
ja
xor
jbe
dec
jo
ss
inc
pop
insl
push
or
jno
pop
push
dec
jno
jp
jo
insb
push
jne
aaa
push
js
popa
push
aaa
pop
push
sar
mov
arpl
cmp
xor
inc
push
gs
push
jbe
inc
xor
je
call
jo
or
fs
inc
pop
xor
pop
dec
xor
jg
xchg
stos
push
push
push
pop
fs
imul
xor
inc
jb
insl
dec
pop
loopne
or
jae
push
inc
aaa
xor
mov
push
imul
dec
imul
cmc
outsl
mov
and
jp
pop
jne
imul
sub
mov
mov
push
and
add
sub
mov
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
xchg
sub
add
inc
jnp
fcos
outsb
add
inc
pop
push
pop
dec
cmp
insb
dec
pop
push
pop
inc
dec
psubusw
dec
xor
cmp
inc
adc
ja
jns
out
imul
inc
packsswb
inc
ds
fldenv
add
inc
je
arpl
push
pop
fnstcw
insl
push
adc
xor
setns
inc
gs
adc
daa
inc
xor
inc
inc
xor
dec
fistpl
push
inc
gs
push
das
cmp
popa
pop
jno
dec
jp
xor
inc
dec
cmp
sti
and
popaw
je
jb
pop
dec
jp
fs
xchg
adc
inc
ss
imul
into
outsb
jg
jo
jmp
aaa
imul
movd
mov
adc
push
push
push
daa
imul
jle
in
outsl
mov
imul
daa
push
jne
dec
pop
mov
push
aaa
dec
sbb
jbe
das
mov
lret
jns
incl
or
sti
out
dec
inc
jo
dec
outsl
dec
outsl
pop
adc
dec
push
push
mov
or
lock
jmpw
inc
imul
incb
jno
dec
xor
xor
js
push
pop
mov
aas
sti
testb
xchg
arpl
js
imul
pop
inc
ja
addr16
inc
outsl
jo
dec
js
add
jle
inc
inc
inc
insl
adc
mov
and
bound
fs
inc
dec
jp
cmp
add
icebp
daa
ss
je
outsl
jmp
adc
loope
push
xor
jp
lock
mov
xlat
imul
fistl
int3
dec
fstl
aaa
jae
outsl
dec
ja
addr16
in
xor
into
mov
pop
fistps
sbb
dec
dec
inc
je
push
pop
iret
pop
repnz
jbe
dec
dec
jne
inc
push
ss
pop
inc
jo
inc
mov
mov
adc
inc
mov
push
xchg
loope
xchg
dec
jne
inc
add
pop
pop
xor
je
mov
sbb
and
sti
pop
push
cmp
pop
mov
sbb
push
bound
mov
mov
aaa
call
mov
or
dec
addl
sub
int3
sub
iret
add
dec
addb
in
imul
enter
addb
add
add
in
leave
addb
jle
add
adc
add
mov
pushl
push
rcll
cwtl
unpckhps
lret
xchg
sbb
mov
outsl
pop
push
adcb
sarl
sub
mov
mov
call
lds
or
add
jecxz
mov
dec
pop
cmpsb
popa
outsl
out
inc
add
cmp
sbb
dec
imul
push
inc
adc
cmp
add
jae
push
add
cmp
push
adc
shrl
jecxz
jg
shll
adc
pop
iret
cmp
in
push
icebp
dec
popf
movsl
mov
jnp
cmpsb
sbb
ja
add
cmp
iret
push
push
loopne
or
add
test
imul
loopne
adcl
adc
push
sub
mov
add
in
ja
jmp
imul
pop
inc
inc
xchg
add
imul
xor
dec
and
sti
inc
popa
or
int
addr16
adc
add
fucomip
inc
adcl
cmp
push
mov
lcall
out
testl
add
push
pop
and
mov
mov
into
loopne
icebp
push
push
push
sbb
add
push
push
imul
fildll
jge
or
mov
pusha
lock
sub
mov
arpl
xor
xchg
dec
push
imul
insb
dec
scas
cs
jmp
push
into
loope
loopne
test
leave
mov
push
add
scas
pop
jno,pn
jecxz
out
push
mov
fwait
jnp
sbb
lds
loopne
pop
ja
imul
mov
mov
add
icebp
pop
cld
push
push
push
pop
pusha
or
push
lcall
mov
scas
cltd
pop
mov
shll
add
daa
dec
repz
loope
bound
lods
in
push
pushf
scas
xchg
cmc
pusha
mov
gs
roll
loopne
mov
loopne
loope
mov
lcall
cmpsl
dec
rcrb
sbb
cltd
dec
popa
add
inc
lretw
push
sub
push
dec
aam
push
inc
arpl
dec
jno
mov
xlat
ret
ds
rcrl
lret
aas
loopne
das
xor
aad
dec
imul
or
sbb
stos
mov
movsl
lock
ja
sbb
inc
ret
xor
mov
and
dec
jnp
add
pop
fisubrl
lods
std
aam
push
sub
pushl
sbb
add
cmpsl
imul
sbb
outsl
lcall
stc
jmp
xlat
lcall
xor
cs
std
fwait
ja
mov
jno
add
inc
add
fisubl
sub
pop
bound
aad
mov
or
iret
aas
lock
mov
sub
push
xchg
dec
sbb
xchg
xchg
xlat
add
cmp
add
aas
in
fldcw
xor
sbb
std
shll
add
or
xchg
add
jo
lods
mov
xor
mov
xchg
testl
or
mov
sub
lcall
cwtl
popa
pop
dec
jnp
and
and
repnz
inc
dec
rorl
xor
pop
lods
int3
mov
mov
mov
fidivl
jp
fsin
fsubrs
inc
xor
enter
push
stos
fisttps
add
out
lock
clc
test
xor
fdiv
add
stc
mov
es
dec
das
xor
jle
push
mov
push
jle
mov
dec
jno
push
mov
imul
add
sub
dec
cmp
dec
xor
jns
sub
fisttps
jge
or
add
in
add
jb
lcall
rep
pop
cld
int3
inc
lret
pushf
or
faddl
call
shrb
in
push
lock
add
adc
fsubr
mov
cld
jmp
and
add
mov
inc
add
mov
pop
lock
xor
sahf
js
in
iret
insl
testb
imul
lcall
mov
pop
cmp
inc
inc
add
or
decl
sub
xlat
aas
or
mov
jle
mov
sub
lret
mov
and
fldt
hlt
mov
cld
fimuls
rcll
mov
movsb
test
inc
ja
mov
lods
mov
nop
add
mov
mov
fnstcw
scas
adc
mov
jb
cmp
lret
dec
dec
dec
add
dec
and
into
dec
adc
mov
enter
dec
rcrb
std
dec
popf
add
mov
fs
ds
ljmp
incl
std
popf
popf
inc
jo
in
in
push
inc
mov
lods
movsl
add
loop
outsl
inc
mov
mov
adc
inc
add
cmpsb
fwait
loope
testb
cmp
repnz
sub
test
xchg
pusha
imul
or
scas
je
push
cld
fisttpl
mov
je
test
mov
sub
xchg
jo
nop
mov
mov
mov
das
mov
push
add
mov
icebp
pop
fnstsw
loop
add
jecxz
lret
mov
rol
pop
movsb
add
test
xchg
add
adc
out
or
push
sahf
repnz
jo
add
nop
or
push
mov
mov
jecxz,pn
adc
inc
xchg
xor
dec
test
push
xor
and
adc
mov
mov
mov
pop
fldenv
adc
and
or
inc
shrb
fbld
and
mov
fdivs
dec
scas
lcall
es
dec
push
push
out
loopne
jge
dec
hlt
ljmp
cli
or
data16
shrl
in
or
or
cmp
pop
jg
fistpll
push
xchg
loope
lock
jge
dec
loop
xor
push
mov
out
or
lock
or
cmove
orl
pop
rcll
cmc
dec
sbb
out
hlt
std
sbb
add
mov
pop
aas
pop
lock
xchg
adc
add
mov
sbb
movsb
inc
push
incb
xchg
cwtl
jne
movsb
cmpsl
sbbb
mov
sub
jl
push
sti
mov
lock
push
add
pop
push
popf
add
icebp
sub
decl
insl
mov
push
mov
adc
ja
inc
xor
add
ret
pop
pushf
and
push
dec
add
push
push
test
popa
shrl
xor
and
push
je
sarb
adc
js
adc
ficomps
clc
dec
movsl
insb
mov
shll
and
sbb
mov
and
stos
sbb
add
loop
mov
adc
mov
popa
mov
sti
jo
mov
cmc
mov
jo
adc
adc
lea
pop
fcmovnu
into
fnstsw
and
add
inc
add
insb
int3
leave
int3
fstpt
adc
mov
push
int3
xchg
int3
fs
lods
adc
stc
fwait
mov
int3
test
arpl
mov
int3
mov
jl
enter
mov
jle
js
repz
jnp
xchg
jp
or
je
mov
stc
fwait
lods
ja
xchg
int3
jbe
test
int3
mov
jo
adc
in
int3
jb
in
or
int3
iret
adc
int3
hlt
int3
or
lret
add
int3
ror
int3
aad
int3
xlat
int3
add
ret
sbb
int3
mov
cld
int
pop
int3
mov
sbb
popf
adc
int3
mov
adc
int
scas
sub
int3
into
sub
test
cld
int
cld
int3
ror
int3
aam
int3
int3
and
ret
fmul
cmp
mov
cld
int
aas
int3
test
cmp
pushf
xor
int3
mov
xor
scas
xor
in
jmp
add
fcmove
stc
scas
jl
ljmp
pushf
je
cld
iret
ror
clc
outsb
loopne
mov
or
add
or
jbe
jns
and
xchg
adc
iret
les
iret
in
shl
outsl
fcmovne
ror
xor
mov
into
cmc
int3
outsb
into
fwait
xchg
xchg
push
imulb
mov
popa
into
stos
int3
jle
lcall
faddp
insl
repz
out
into
stos
into
xchg
jb
xchg
mov
or
mov
fistpl
add
out
mov
or
into
xchg
into
or
into
cmpsl
cmp
xchg
into
int3
adc
into
loop
into
fimull
into
out
fdivr
addr16
mov
or
into
cli
xor
mov
das
adc
aas
mov
repz
insb
leave
imulb
cmp
sar
leave
sar
sbb
push
leave
aas
std
push
insb
std
gs
outsb
std
fs
dec
push
std
leavew
fs
popa
leave
cs
pusha
leave
sub
arpl
sub
leave
push
std
jge
xor
jl
dec
outsl
std
jg
imul
jns
gs
js
addr16
jnp
data16
jp
pusha
std
jne
std
je
dec
jl
ja
jle
jbe
js
jno
jp
jo
je
jae
jbe
jb
jo
or
dec
or
bswap
or
push
leave
or
or
add
std
or
push
std
or
add
add
dec
add
pop
leave
add
push
leave
pop
std
add
sbb
int
adc
std
add
adc
sbb
push
std
dec
sub
std
push
leave
das
std
sbb
sub
sbb
sub
sbb
and
pop
cmc
call
leave
es
pop
leave
and
push
leave
and
adc
and
fdivrl
std
adc
push
lcall
std
adc
push
sahf
enter
enter
enter
enter
enter
enter
out
lret
or
jmp
lret
or
jmp
or
ljmp
enter
enter
enter
jmp
lret
add
loope
int
loopne
add
jecxz
add
loop
sbb
enter
enter
enter
dec
sbb
stc
lret
sbb
clc
lret
sbb
sti
lret
sbb
cli
lret
adc
enter
enter
enter
decl
lret
das
enter
enter
enter
enter
enter
enter
enter
incl
lret
daa
enter
enter
enter
enter
enter
enter
enter
lcall
lret
aas
enter
lret
lahf
cli
lret
sahf
dec
lret
pushf
lds
cltd
push
lret
cwtl
or
fwait
pop
lods
pop
mov
lret
lcall
sbb
xchg
push
cld
mov
lret
xchg
leave
popa
lret
xchg
and
pop
leave
arpl
xchg
sub
xchg
leave
mov
lret
fucomi
jl
iret
leave
jg
into
cmp
adc
leave
pop
icebp
mov
inc
lret
enter
adc
lret
lret
lds
leave
ja
loop
cld
mov
pop
lret
leave
jno
shll
leave
jae
ret
in
clc
adc
leave
or
std
leave
bswap
cld
adc
mov
lret
stc
leave
or
clc
mov
mov
or
xchg
lret
fldcw
adc
lret
hlt
lret
idiv
int
mov
test
lret
lock
repz
sbb
lret
jg
decl
leave
push
lret
mov
sbb
mov
lret
sti
leave
pop
icebp
mov
lret
leave
adc
xchg
pop
lret
cli
fcmove
test
adc
mov
lods
clc
or
lret
test
lret
mov
xchg
jecxz
lret
fsubrl
lret
jmp
lret
fnstcw
push
lods
pop
xor
fdivr
lret
jmp
lret
call
lret
aad
aam
xlat
lret
inc
cmp
ror
and
rorb
lret
ror
cmp
lret
loop
lret
fcomip
decl
leave
cmp
out
leave
cmp
out
leave
cmp
leave
cmp
pop
mov
pushl
lret
out
aaa
lret
fisubl
lret
in
lret
loopne
xor
jmp
lret
ljmp
dec
into
outsl
lret
outsb
lret
imul
aad
stos
lret
lret
gs
fs
lret
arpl
dec
ljmp
fsubr
jl
fidivrl
pusha
into
jle
arpl
jns
into
js
pop
into
jnp
lcall
pop
into
jp
test
lret
je
push
into
ja
jge
jbe
add
or
pop
into
ud0
dec
pop
into
push
lret
or
pop
into
or
pop
into
or
pop
into
or
pop
into
add
lret
pop
dec
push
into
push
lret
add
push
into
int
push
into
add
push
into
add
push
into
sbb
lret
pop
outsl
jbe
scas
lret
lret
sbb
out
sbb
sbb
push
jle
call
lret
sub
jl
das
lret
cs
lret
sub
cld
jmp
add
lret
jp
and
lret
daa
lret
int
push
es
adc
lret
add
and
sbb
into
aas
lret
loopne
dec
ds
cmp
or
cmp
or
cmp
or
cmp
dec
xor
dec
xor
add
insb
lds
outsl
vpsubsb
add
imul
in
out
imul
call
out
lds
lds
lds
lds
popa
lds
pusha
lds
arpl
insl
out
lds
out
jge
popa
out
jno
test
out
jae
test
jb
out
or
pextrw
out
or
lret
vpxor
sbb
add
pop
in
add
lods
out
sbb
xlat
out
pop
lds
std
out
push
lds
adc
in
adc
out
adc
ljmp
imul
cmp
pop
int3
ss
ljmp
lds
xor
pop
in
xor
in
xor
pop
in
adc
out
jmp
sub
pop
call
mov
shr
jmp
jmp
es
fucomp
and
ljmp
call
and
icebp
call
cmp
les
in
pushl
les
cmp
shr
cmp
cmp
stc
call
xor
sarl
into
in
outsl
iret
in
outsb
test
imul
lret
fbld
push
in
gs
in
addr16
fsubrp
popa
out
jmp
call
jg
sahf
cs
cltd
in
jg
cwtl
in
jle
fwait
in
jns
lcall
xchg
in
jg
jp
xchg
in
jne
in
jbe
fucomip
jno
in
jo
jecxz
jae
out
push
xchg
in
or
call
in
or
xchg
in
add
out
in
pop
scas
jmp
or
int
jp
add
push
call
add
call
sbb
aam
pop
shr
push
shr
sbb
shr
sbb
in
sbb
in
clc
pushl
popa
call
adc
jnp
adc
add
adc
arpl
sub
fildll
data16
pusha
call
sub
jo
sub
loopne
outsl
outsl
in
sub
addr16
and
jno
daa
cmpsb
jmp
sahf
jmp
scas
clc
insl
sar
and
stos
jmp
test
cmp
in
aas
in
in
ds
ljmp
push
ljmp
mov
jmp
jmp
jmp
mov
push
sti
push
fsubr
ss
cmc
in
xor
xlat
in
xor
inc
icebp
add
repz
jle
mov
push
out
push
mov
pusha
or
xchg
add
aad
add
pop
out
add
das
clc
imul
mov
sbb
out
adc
jg
push
adc
outsl
out
xor
outsb
push
rcr
sub
sar
lcall
das
rcrl
rcrl
sub
sbb
sub
sbb
sub
sbb
sub
sbb
and
sar
call
daa
rcll
rcll
and
adc
and
adc
and
adc
and
adc
cmp
sar
ljmp
aas
shrl
shrl
cmp
sub
cmp
sub
cmp
sub
cmp
sub
xor
sar
jmp
aaa
shll
insb
ror
outsl
ror
outsb
ror
imul
enter
lret
ret
push
lcall
dec
ret
gs
fs
addr16
rol
popa
rol
pusha
rol
arpl
ljmp
ret
rol
jge
ffree
jl
fadd
jg
ffreep
jle
faddp
jns
fld
js
fdivr
inc
jnp
fcmovnb
jp
fcmovb
jne
aad
je
aam
ja
xlat
ret
jbe
ret
jno
rol
jo
rcl
inc
jae
rol
jb
rol
or
shr
xadd
ret
push
shr
or
or
call
ret
or
ljmp
shl
pop
shl
push
shl
add
jmp
ret
int
loopne
add
jecxz
add
loop
sbb
sar
pop
sar
push
sar
sbb
stc
ret
sbb
clc
ret
sbb
sti
ret
sbb
cli
ret
adc
shl
pop
shl
adc
repz
adc
push
ret
sub
rorb
rorb
sub
mov
sub
mov
sub
decl
ret
and
test
daa
rolb
and
add
cmp
sar
lcall
rcrb
cmp
cwtl
ret
cmp
fwait
ret
cmp
lcall
sar
call
outsl
ret
cld
outsb
ret
cld
imul
clc
cld
imul
cld
push
cli
cld
gs
push
cld
fs
hlt
cld
addr16
idiv
retw
idiv
popa
ret
icebp
cld
pusha
ret
lock
arpl
repz
repnz
jge
decl
cld
jg
cld
jle
mov
jns
mov
js
mov
jnp
mov
jp
mov
jne
incl
cld
ja
xchg
jbe
xchg
jno
cmp
jae
cmp
ret
cmp
ret
lcall
cld
movnti
cld
or
cltd
cld
or
cwtl
cld
or
fwait
cld
or
lcall
call
cld
pop
ret
xchg
cld
push
ret
xchg
cld
add
xchg
cld
int
nop
cld
add
xchg
cld
add
xchg
cld
sbb
ljmp
cld
pop
ret
scas
cld
push
ret
scas
cld
sbb
fcompl
fcompl
data16
insb
fcompl
fcoml
insb
ss
int
push
fcoml
fcoml
fcoml
fcoml
int
mov
fsubrl
fsubrl
insb
ss
sub
sub
sub
sub
and
fsubl
daa
fsubl
fsubl
fsubl
ljmp
fsubl
fsubl
ret
mov
cld
cmp
mov
aas
ret
mov
ds
dec
cld
cmp
dec
cld
cmp
dec
cld
cmp
inc
cld
cmp
inc
cld
xor
and
mov
fdivl
rcr
xor
dec
fisubs
idiv
pop
mov
lahf
int3
jo
sahf
int3
jae
mov
insl
in
add
sahf
out
outsb
imul
out
fs
jns
jae
lds
add
out
sahf
out
rol
fimuls
jns
xor
int3
popf
jmp
pushf
call
cmp
repz
cmp
fwait
out
lcall
iret
jnp
push
loope
out
ds
repz
loopne
push
loop
into
dec
addr16
sbb
in
inc
inc
aas
jns,pn
idivl
mov
sahf
out
mov
out
sahf
call
push
push
sahf
out
in
out
push
push
in
mov
out
push
push
push
loopne
cmp
repz
jecxz
cmpsl
iretw
repz
cmpsb
popa
mov
out
cmp
bound
cmp
jnp
push
lods
jg
jle
repz
scas
jns
js
jnp
iret
repz
jp
jne
leave
add
jae
jb
fmulp
leave
or
push
out
sahf
out
or
jns
or
jns
out
add
pop
mov
out
sahf
out
add
jns
add
dec
sbb
jns
dec
pop
dec
push
out
sahf
out
sbb
dec
sahf
out
sahf
sub
das
insb
outsl
cmp
repz
outsb
int3
and
daa
out
iret
repz
xchg
mov
jle
stos
nop
fldl
lock
xchg
lea
addl
sti
js
arpl
push
add
loopne
out
addb
inc
push
cmpsb
flds
stc
push
jns
ffreep
cwtl
mov
push
pop
add
scas
dec
pop
mov
jp
inc
push
sub
iret
jnp
aas
pop
sahf
add
add
lcall
jnp
cmp
cmp
push
xchg
leave
out
ja
jnp
mov
add
mov
dec
fistpll
sbb
cltd
push
int
std
push
lods
and
mov
sti
js
repnz
leave
push
in
scas
fwait
mov
popa
push
mov
pop
push
push
pop
out
ljmp
mov
cmp
je
mov
scas
push
arpl
out
mov
faddl
icebp
push
and
fistpl
mov
push
imull
push
cmp
out
push
shr
xor
push
aaa
ljmp
sub
ds
or
negl
push
pusha
push
fidivrs
iret
repz
lahf
pop
xchg
faddp
cmp
mov
jle
popf
idivl
loopne
outsb
lea
faddp
repz
xchg
fisttpll
sahf
sbb
js
push
lds
pop
jnp
jmp
repnz
push
xor
dec
std
push
neg
sar
and
incb
xor
and
out
mov
push
idivb
lods
out
jns
jnp
arpl
mov
mov
cmc
push
out
fisttpll
cmp
fcomip
push
sahf
lds
into
pushf
faddp
xor
fisubl
push
xchg
mov
push
pop
out
mov
push
rcr
jns
mov
pop
push
jg
jnp
inc
push
stos
xor
push
sahf
ja
mov
ds
sahf
inc
jmp
push
xlat
fisubrs
adc
sahf
and
adc
fld
ja
push
push
pusha
mov
mov
imul
rcrb
xchg
sbb
int
ret
inc
pop
cmc
or
in
jmp
mov
cmp
and
push
cld
addb
jp
push
pop
mov
mov
jg
in
pusha
xor
jb
push
mov
sbb
into
adc
push
sub
insb
fwait
adc
test
or
pop
mov
loope
adc
imul
or
add
or
push
cmp
cmp
push
inc
inc
fisubl
or
add
arpl
pop
sarb
push
jne
stos
adc
popa
or
addb
add
imul
arpl
xlat
andb
inc
or
add
mov
outsl
fisttps
sbbb
or
sbbb
or
or
rorl
cmpsb
add
jb
mov
out
pop
jmp
aad
shll
sbbb
adc
sbb
andb
mov
shrb
imul
push
rorb
in
jp
ljmp
jl
sbbb
mov
out
cld
shl
addl
sbbb
sbb
push
popf
insl
movsl
mov
sbb
mov
inc
mov
dec
in
add
push
lds
aaa
mov
and
and
push
sbb
adc
mov
or
rolb
adc
jge
xchg
call
push
push
push
test
add
pop
mov
lods
lods
sbb
add
pop
mov
dec
fisttpl
sbb
loope
rcrw
add
sbb
aad
rcrb
mov
daa
enter
fidivrs
lock
or
fisubrs
rolb
inc
popa
and
mov
imul
data16
sti
out
cs
shlb
rolb
cli
add
push
rol
sub
and
pop
imul
dec
cmp
or
loopne
pavgb
outsl
in
stos
mov
jge
pop
rcrb
in
cmp
popf
aaa
jg
jne
push
dec
out
shlb
inc
aaa
test
loop
lods
and
icebp
push
fwait
and
adc
inc
inc
scas
push
loopne
cmpsl
xorl
addb
sbb
mov
test
in
adc
sub
cmp
lcall
pop
rorb
cmpsl
sub
popf
mov
arpl
ret
negl
add
or
ret
aad
hlt
divps
and
push
and
mov
fcmovnu
and
push
adc
dec
jne
and
pop
pop
loopne
push
or
ss
cld
dec
inc
js
imul
xchg
loopne
orl
fcmovnu
aaa
lods
or
add
shl
je
rorl
loopne
mov
cmpsl
inc
push
push
pop
jne
ds
es
add
out
loopne
or
loopne
xchg
incb
jnp
sbb
push
test
add
loop
xor
repz
loopne
cmp
movsb
ds
xlat
add
sbb
loopne
jno
loopne
insl
sbb
loopne
inc
clts
fsubrs
mov
loopne,pt
imul
dec
std
mov
xor
pop
pusha
pop
fidivl
xor
andb
pop
mov
sbb
dec
sti
dec
loopne
add
imul
add
add
in
out
clc
jmp
xchg
push
jecxz
std
cld
incb
clc
sti
cli
cmc
hlt
add
ljmp
add
scas
test
movsb
add
mov
mov
mov
and
lods
clc
fidivl
pushl
xor
add
xor
lods
add
add
int3
iret
into
leave
enter
add
std
pop
call
ret
mov
cld
add
in
incl
loopne
add
push
add
fadds
inc
add
adc
insl
shl
in
add
add
adc
or
scas
negl
mov
xor
lret
push
mov
adc
inc
mov
sbbl
incl
aad
xlat
and
rcl
rcl
cmc
xor
in
and
xor
div
lock
push
repnz
ljmp
es
xchg
nop
or
xor
xor
dec
dec
add
dec
dec
dec
inc
inc
inc
aaa
std
incl
inc
inc
inc
inc
inc
pop
pop
pop
add
pop
pop
loop
push
add
push
push
push
insl
insb
sbb
imul
enter
jmp
jl
add
js
jp
je
add
jo
jb
or
add
or
or
add
sbbb
push
mov
sbb
sbb
adc
or
adc
sub
sub
and
and
scas
clc
and
cmp
cmp
cmp
xor
xor
maxps
out
outsb
add
inc
prefetch
or
mov
mov
decb
sbbb
fwait
lcall
mov
cmc
psllq
jno
pusha
and
push
add
pushl
dec
jae
dec
add
popl
adc
xor
xor
scas
add
add
add
fistpll
jp
mov
dec
incl
repz
and
add
clc
push
addb
and
test
or
jp
xchg
mov
mov
ds
dec
jg
mov
adc
movb
pop
xor
push
or
jge
in
xlat
add
fisttps
add
clc
pop
lds
dec
inc
andb
pop
jg
icebp
jg
cmpsb
add
jle
jnp
add
jp
ret
cmp
jl
mov
jg
mov
adc
xchg
mov
mov
push
lcall
add
gs
lods
push
shrl
and
mov
pop
test
sbb
fcomp
cmc
dec
mov
inc
or
dec
scas
add
mov
mov
cmpsb
mov
call
repnz
shl
mov
enter
mov
sti
jmp
xchg
pop
shlb
add
mov
lock
cmp
adc
push
and
bound
xchg
pop
hlt
ljmp
xchg
enter
insl
mov
add
sahf
enter
mov
in
mov
fwait
inc
incl
pop
test
stos
xchg
sub
insb
shl
les
negb
cmp
mov
mov
or
inc
lcall
mov
push
sub
xor
addr16
shr
add
xlat
pop
lock
add
push
adc
mov
sahf
jne
xor
icebp
aaa
cld
or
mov
add
xchg
adc
jg
lcall
icebp
lods
icebp
and
mov
cmp
dec
data16
mov
movb
fldenv
push
xchg
or
stc
ja
xor
mov
je
mov
mov
jmp
xor
lock
lock
lock
mov
mov
sti
mov
jecxz
cli
push
pop
cmpb
mov
mov
push
lret
sub
js
outsb
sub
scas
cli
imul
sub
dec
jbe
dec
inc
into
mov
lret
hlt
repz
call
cld
sbb
sub
sub
push
mov
and
addb
out
pushl
std
scas
cli
mov
xchg
mov
aaa
pop
add
mov
adc
fnstsw
inc
mov
sahf
in
add
mov
add
mov
sti
add
fwait
mov
sub
xchg
add
repnz
adc
pop
repnz
repnz
call
pushf
add
hlt
in
xor
pop
adc
cmp
mov
rcr
jmp
leave
std
add
std
fscale
sar
jmp
std
icebp
inc
mov
or
mov
or
cmp
adc
mov
inc
mov
int
imul
bound
inc
popa
std
jns
jno
or
add
sbb
adc
sub
add
add
stos
push
and
push
dec
push
xor
push
cmpsb
int3
lock
jle
xor
out
pop
add
cmc
adc
cmp
xor
sub
lea
out
insl
add
add
cmp
adc
dec
les
and
in
pop
test
mov
dec
std
inc
std
and
push
std
imul
out
ss
lods
or
or
ficoml
outsb
cmpl
mov
push
cld
jmp
pop
or
mov
xor
in
lock
push
je
adc
cmp
xor
mov
repz
dec
cmp
push
mov
cld
fsubrl
divb
xor
mov
pop
std
data16
sub
aas
std
xor
push
outsl
inc
popa
popa
mov
call
mov
lds
rcll
call
push
fdivr
add
clc
push
sti
daa
sti
test
insb
cmc
lret
sar
jmp
rol
sub
jecxz
dec
jg
add
sbb
jbe
cmp
lods
jle
jmp
test
inc
icebp
or
and
add
lret
mov
insl
test
add
stos
xor
jne
sbb
stos
sbb
in
push
cld
add
fdivrp
icebp
cld
cld
data16
push
cld
add
adc
outsl
adc
cld
cs
mov
pop
stos
push
insl
fbld
daa
movsl
inc
add
in
cmp
cmpsb
jg
and
add
in
scas
mov
clc
sbb
clc
add
cmp
sub
cmp
aaa
clc
iret
push
sti
jae
addb
gs
mov
fwait
imulb
scas
ficompl
in
sbb
pop
test
mov
decb
sti
pop
sti
push
adc
push
xor
arpl
cld
mov
jl
mov
add
aaa
add
mov
loope
push
push
mov
cmc
sti
cmc
repz
mov
adc
xor
js
in
cmpsb
fstpt
sub
pop
push
jmp
inc
add
fdivs
outsl
clc
fwait
cmpsb
imull
testl
sbb
insb
adc
outsl
cli
incl
lret
iret
add
cvtps2pi
sub
inc
mul
outsl
jg
aaa
and
xchg
icebp
push
test
xor
icebp
xchg
adc
jmp
outsb
icebp
jno
or
stc
mov
push
dec
jg
jnp
adc
ja
in
leave
cli
adc
mov
inc
lock
loopne
lock
lock
cli
fcomi
push
adc
pop
lods
xor
enter
sub
jle
decl
cs
enter
loopne
test
jge
iret
sbb
into
cmp
or
jo
push
adc
push
sub
xchg
or
xor
adc
ljmp
mov
add
dec
mov
imul
mov
idiv
addb
mov
jg
jg
popa
mov
into
add
out
enter
mov
fwait
or
mov
jmp
clc
sti
clc
xchg
clc
and
jno
or
mov
mov
dec
cmp
jge
inc
dec
push
push
cs
insb
aaa
cs
ja
jg
xchg
mov
jnp
fcomip
xor
out
repz
jg
outsl
clc
repz
repnz
xor
mov
popf
push
adc
jg
inc
add
push
and
outsb
jmp
dec
loope
ss
mov
movsl
stos
mov
mov
mov
xor
push
sbb
das
adc
pop
in
push
jle
and
jae
shl
push
push
enter
rol
mov
mov
push
add
aam
cmp
aam
cld
or
pop
out
mov
addr16
add
lcall
popl
or
jns
cld
and
dec
mov
js
ret
fdivl
add
push
jno
lcall
mov
loop
lods
outsb
cmp
jae
fs
ja
sbb
incl
inc
xor
hlt
dec
rorl
or
jmp
xchg
mov
xor
lcall
dec
cmp
and
sbb
add
addr16
scas
jne
push
xlat
mov
pop
lcall
das
jae
jnp
insb
je
jge
clc
in
das
call
test
int
testl
repz
sbb
cmc
cmp
push
and
dec
mov
das
test
jmp
mov
mov
push
gs
pop
jae
jmp
xchg
decl
mov
add
mov
inc
mov
pop
outsb
iret
int3
adc
dec
sub
ffree
jle
add
int3
or
into
into
lds
sub
loop
add
xor
inc
add
add
cmp
sub
lcall
inc
or
int3
mov
data16
rcrl
iret
adc
add
adc
inc
std
lea
add
inc
sbb
ja
lea
ljmp
imul
inc
or
add
into
inc
mov
bound
rolb
add
pop
xor
push
out
mov
bound
data16
sbb
jecxz
add
mov
mov
or
sbb
les
push
loopne
stos
sbb
dec
xor
cmpsb
imul
jae
pop
push
loope
data16
push
or
adc
sbbb
lcall
or
add
push
cmp
mov
fbstp
mov
sub
mov
mov
xor
cli
jg
jecxz
cmp
bound
in
mov
loope
sub
neg
int3
addb
loop
or
push
mov
ficomps
adcb
xor
scas
aam
dec
or
jo
bound
sbb
adc
dec
xor
mov
filds
jecxz
pushf
sub
or
add
in
add
sub
xchg
inc
mov
lcall
loopne
je
ds
add
loopne
add
mov
into
lods
or
xor
es
cmp
aaa
int
and
lods
test
jbe
jl
lods
mov
movsl
sti
inc
clc
push
in
dec
mov
add
pop
frstor
movsb
insb
test
and
stos
cwtl
mov
dec
iret
mov
and
into
addl
lods
push
stos
or
scas
mov
adc
pusha
sti
mulb
lods
and
scas
pusha
testb
fimuls
xor
lds
bound
les
andb
add
xchg
xor
and
mov
pusha
push
inc
add
in
outsl
outsb
mov
push
mov
or
add
or
add
or
rolb
imul
lock
pusha
aas
ss
lods
call
rol
std
fs
int
mov
loopne
adcb
mov
adc
sbb
insb
mov
dec
inc
adc
mov
call
add
sbb
bound
mov
add
insl
mov
inc
add
add
movsb
sbb
idiv
add
movsl
stos
add
popf
loopne
or
stos
sbb
movsw
inc
adc
cmpb
sahf
push
mov
inc
test
xor
mov
mov
test
lods
test
mov
fidivs
lcall
mov
add
and
mov
push
push
out
out
adc
sahf
add
cltd
add
jecxz
adc
push
mov
loopne
adc
mov
addl
les
or
and
jecxz
and
subb
movsb
mov
stos
add
mov
ljmp
add
sahf
cwtl
sahf
inc
mov
xchg
mov
sub
and
and
mov
call
outsb
orb
test
repnz
xchg
dec
fwait
test
ss
push
add
jg
clc
outsl
cmp
adc
cltd
ret
adc
jb
std
mov
xchg
mov
roll
or
mov
add
add
sbb
ficoms
xchg
xor
addl
mov
and
mov
add
mov
xor
and
push
lds
adc
decl
loopne
test
mov
lcall
mov
scas
add
test
stos
add
mov
in
xchg
or
sbb
mov
xor
jmp
adc
cmpsl
dec
push
fimull
std
jecxz
sub
stos
xor
push
sbb
mov
add
push
mov
pop
popl
jmp
addl
add
jo
and
je
jb
add
decl
cs
cmp
xor
xor
cmp
xor
ds
xor
xor
mov
cmp
sub
add
xchg
xchg
mov
in
std
add
jecxz
out
in
pushl
jecxz
add
and
adc
sbb
xor
out
hlt
fadd
enter
in
fcmove
inc
into
lret
scas
shl
insb
aaa
jmp
cmpsb
mov
mov
mov
adc
jmp
jns
sbb
and
sub
sub
das
sbb
and
and
xor
sub
pushl
and
cmp
pop
add
sbb
jo
fwait
ja
lcall
add
cwtl
mov
xchg
mov
test
sbb
imul
call
rorb
loopne
jb
adc
insb
ljmp
xor
push
gs
js
jns
outsl
and
jnp
add
js
mov
xchg
lret
mov
repz
iret
shll
stc
adcb
cmc
xchg
pushf
xchg
loopne
mov
mov
scas
adc
xchg
mov
fs
pushf
lahf
mov
mov
push
pop
dec
dec
pop
dec
add
pop
ret
data16
jle
data16
jg
jmp
add
jno
dec
push
pop
in
dec
dec
pop
push
dec
push
pop
pop
pop
mov
icebp
jg
add
imul
add
jne
jo
jo
loopne
hlt
or
je
outsl
jae
sahf
push
inc
dec
dec
dec
or
jg
add
jl
nop
outsb
cmp
add
lcall
or
sbb
sbb
or
pop
sbbb
jmp
inc
pop
icebp
add
add
xchg
mov
lock
jmp
fcomip
mov
mul
call
rcr
jecxz
in
out
icebp
call
div
jl
lret
lret
enter
fdivr
mov
rcr
cmpsb
outsl
add
pop
pop
and
jge
add
ljmp
clc
jns
jle
add
xor
pusha
insb
adc
arpl
outsb
imul
js
jle
adc
push
push
adc
pop
pop
pop
or
add
or
or
outsb
push
push
cld
dec
or
add
push
pusha
xor
xor
imul
add
aam
add
popf
fcmovnb
fcmovu
mov
dec
dec
push
mov
mov
mov
test
lods
cmp
lahf
clc
cmpsb
idiv
loop
std
mov
scas
xor
lods
add
push
mov
scas
inc
adc
outsl
repnz
dec
dec
dec
lock
push
xor
dec
inc
inc
inc
dec
inc
dec
adc
adc
push
jb
mov
dec
jle
sub
stos
mov
xor
loop
xchg
mov
xchg
xchg
xchg
cwtl
xchg
xchg
xchg
xor
js
stos
out
call
jmp
addb
add
stos
test
movsl
loop
mov
rorb
jle
clc
add
mov
decl
push
mov
jnp
pusha
aaa
ja
inc
push
jnp
gs
call
and
popa
arpl
jno
dec
outsb
jb
outsl
insl
jbe
gs
aas
fdiv
bound
add
int3
cmc
repnz
fninit
add
out
loope
mov
in
hlt
add
std
iret
jecxz
sti
and
add
xchg
test
ljmp
cltd
stos
xchg
xchg
xorl
jno
jbe
jne
outsl
bound
ljmp
popa
insb
fs
xor
jb
addb
add
add
popa
addr16
jge
pop
xchg
pop
loop
add
push
ljmp
push
sbb
push
or
and
sbb
push
sbb
lea
push
sbb
sbb
lcall
or
add
cmp
pop
or
or
cmp
inc
cmp
add
adc
sub
and
sub
cmp
rcrb
inc
jns
push
push
dec
jae
data16
push
ljmp
jp
cld
push
inc
outsl
ss
clc
sbb
pop
dec
add
cmpsl
mov
cmpsb
test
data16
stos
stos
loopne
push
inc
push
jge
inc
pop
mov
sub
pop
pop
dec
mov
mov
cmpsl
cmpsl
scas
adc
fcomip
xchg
stos
out
mov
test
imul
jecxz
js
pushf
mov
ja
jnp
add
add
pop
cmp
movl
push
or
or
push
and
and
sub
add
cmc
in
testl
in
jmp
ljmp
inc
dec
push
js
push
add
inc
inc
dec
dec
pop
jne
std
push
js
inc
push
push
or
ret
iret
xlat
std
mov
enter
jae
ss
dec
jno
dec
jno
inc
nop
mov
cmp
test
add
pop
sub
adc
sbb
or
jg
inc
enter
xchg
xchg
xchg
xchg
nop
add
icebp
mov
sub
jo
je
outsl
mov
pushf
out
sti
cld
mov
inc
xlat
mov
lret
icebp
les
mov
jg
mov
lock
dec
mov
daa
cmp
cmp
cmp
fsubp
out
cld
adc
into
clc
fwait
out
data16
int3
lret
fld
into
fnsave
into
fmulp
fdivp
in
loopne
add
loop
ljmp
mov
mov
ljmp
ret
xor
int3
ror
shll
and
mov
cmp
cs
xor
mul
loopne
outsl
jbe
outsb
lock
aam
outsb
fcmovne
sar
ret
ret
add
rorb
cwtl
xchg
fsub
sti
decl
repnz
cmc
jmp
repz
std
push
insl
inc
aaa
shl
repz
lret
rolb
mov
inc
icebp
add
and
xor
loop
or
inc
push
dec
push
dec
inc
push
inc
pusha
pop
dec
inc
mov
incl
cld
add
or
es
popf
repz
insb
inc
jb
dec
hlt
jg
inc
add
xor
xor
aaa
hlt
ljmp
cli
and
sbb
push
or
cmp
pop
or
push
pop
adc
adc
push
sbb
mov
inc
push
push
aas
imul
jmp
cld
adc
add
lret
push
das
ret
mov
sbb
pop
inc
out
rcl
ret
aaa
or
insl
cld
jmp
aam
mov
cmp
sub
sub
cmpsb
testl
insb
cwtl
ja
ja
insl
jae
aas
jl
fnstsw
fcmovbe
fcmovnbe
pop
jno
jno
jno
fs
jp
sub
and
jmp
repnz
es
ret
sbb
lds
cmc
icebp
mov
std
jmp
loope
stc
mov
mov
fstp
fmul
push
and
pop
or
call
mov
xchg
xchg
test
ljmp
pop
loop
lret
loope
pop
cmc
mov
jae
fs
arpl
or
push
decl
dec
dec
push
jle
int3
jb
pop
pop
pop
add
lahf
incl
xchg
mov
mov
mov
lahf
cli
iret
jg
stos
scas
mov
mov
push
inc
dec
jb
inc
inc
inc
dec
push
or
int
mov
add
mov
mov
jns
pusha
xlat
decl
scas
pop
jge
pushl
int3
stc
out
in
loop
icebp
xchg
push
rcr
rcl
pop
and
mov
popf
sti
decl
adc
pop
add
and
cmp
daa
cmp
cmp
and
xor
and
jnp
dec
mov
cmp
lods
mov
pop
out
fistpll
nopl
cs
and
pop
aad
inc
rcl
mov
mov
das
test
xchg
xchg
cltd
xchg
lcall
repz
lods
sti
dec
jmp
stos
out
cmpsl
movsb
add
adc
mov
test
push
sbb
mov
adc
in
loope
jmp
stos
test
shlb
sub
and
push
movsl
cmc
outsl
jb
push
stos
call
xchg
mov
xchg
mov
lahf
pushf
xchg
cltd
xchg
nop
xchg
repnz
loope
out
aaa
pop
stc
ja
js
push
imul
pushl
lcall
adc
pop
push
push
int
mov
mov
mov
mov
dec
inc
push
dec
arpl
push
cli
jmp
hlt
mov
es
pop
dec
pop
pop
push
push
pop
decl
lock
push
jmp
cld
out
jmp
cmp
neg
rol
out
clc
cmc
sub
fdivrp
cltd
add
add
adc
xor
xor
cmc
xchg
adc
fcmovb
int3
mov
lret
aam
rclb
fwait
insl
negl
inc
or
ret
pop
push
add
int
jg
sub
dec
adc
sub
mov
repz
jmp
adcb
stos
jl
lcall
movsb
mov
mov
cmp
mov
loopne
std
jecxz
inc
lds
add
imul
mov
sbb
cmovs
clc
ljmp
stos
lods
mov
xchg
mov
mov
inc
insb
inc
pop
cmp
pop
inc
inc
add
int3
rol
fistpll
lcall
dec
popa
push
pop
dec
fs
pop
push
pop
pop
or
sub
or
imul
je
inc
sbb
cmp
and
sub
push
push
movaps
daa
cmp
cmp
xor
jae
push
data16
sbb
adc
adc
mov
cmpsb
test
orl
fcompl
xchg
fwait
xchg
mov
pushl
mov
push
lea
xchg
movsl
mov
jmp
scas
cmpsl
pop
push
jge
imul
ljmp
mov
cmpsb
hlt
xchg
mov
mov
imul
lcall
int3
rcr
mov
ret
enter
pop
int
lock
jns
cmp
dec
or
inc
dec
xchg
inc
jge
mov
nop
jno
push
jo
insl
jno
jae
jbe
push
outsb
push
sub
bound
jle
push
addr16
add
jmp
mov
repz
lock
sti
call
push
loop
mov
lock
cmp
inc
inc
inc
dec
push
dec
push
rclb
inc
dec
dec
dec
dec
pop
inc
pop
inc
sub
out
pop
cmc
out
or
sub
sbb
rol
jle
xchg
clc
iret
int3
fmul
enter
adc
leave
int3
push
adc
decl
mov
arpl
sub
and
loopne
and
inc
cmp
and
push
jl
jp
push
loop
imul
push
bound
imul
gs
push
push
inc
inc
push
jns
pop
dec
lcall
lcall
dec
add
loopne
add
inc
dec
dec
dec
cmp
rcr
loope
into
aad
idivb
mov
aas
xor
pop
pop
add
in
lock
mov
or
lret
jmp
imul
cmc
call
ffreep
fcmovnu
ffree
repnz
aas
xchg
mov
push
stos
jg
decl
xor
sti
cmc
out
jecxz
lock
out
mov
cli
cli
add
jmp
xchg
xchg
add
test
xchg
mov
add
jae
pop
inc
dec
inc
add
dec
dec
leave
mov
decl
sbbb
xlat
mov
test
xlat
fstpl
mov
in
sub
dec
out
push
jb
es
push
cs
faddl
into
popf
xor
mov
push
jmp
push
push
push
inc
mov
mov
lods
mov
xchg
mov
xchg
lcall
adcb
xchg
mov
popf
mov
out
fdiv
test
test
mov
fiadds
jle
add
lahf
sahf
xchg
xchg
out
add
lock
aam
xlat
shl
ror
rcr
aad
in
stc
pushl
lods
clc
fld
rol
aad
cwtl
cli
mov
in
lock
fcmovnbe
imul
std
jmp
stc
jg
ljmp
inc
inc
je
stc
rcr
fst
fdivr
dec
ljmp
ja
inc
push
push
inc
push
inc
jo
inc
dec
into
pop
inc
push
inc
push
jg
out
cmp
push
pop
dec
pop
or
imul
pop
push
push
jg
addr16
outsl
sbb
pusha
jo
add
inc
push
add
dec
dec
push
cmp
inc
pop
push
inc
inc
push
inc
push
popa
jno
pop
dec
push
dec
push
push
dec
aas
lock
call
inc
dec
pop
push
insb
push
pop
inc
jp
jb
dec
pop
jb
jae
arpl
incl
jg
cmp
jae
insl
fs
jno
gs
jl
and
icebp
jg
out
push
stos
adc
adc
adc
adc
xor
inc
lock
sbb
inc
push
or
inc
pop
pop
dec
pop
jg
daa
xor
and
jg
cld
sub
cmp
jo
js
pushf
out
cmc
jecxz
jmp
out
cld
mov
idiv
jmp
bnd
out
in
out
movsl
jmp
loope
in
lock
fcom
sar
lcall
cwtl
xchg
cwtl
mov
xchg
stc
xlat
ror
mov
idiv
fcmove
mov
mov
mov
cmpsl
xchg
mov
mov
stos
mov
test
mov
lods
mov
sti
std
addl
nop
pushl
push
xchg
sbb
pushf
xorl
js
arpl
decl
jge
cmp
cmp
arpl
movq
jnp
jg
push
fwait
push
jg
push
inc
push
dec
inc
pop
dec
pop
adc
dec
inc
call
dec
inc
jne
inc
push
dec
dec
add
cmp
push
cmp
aaa
xor
js
das
cmp
mov
dec
dec
xor
aaa
adc
outsb
ds
adc
pop
or
add
pop
and
pop
movd
wbinvd
pop
int
push
sbb
inc
dec
or
jmp
call
hlt
mov
shr
clc
in
mov
mul
push
cmpsl
stc
mov
jecxz
rcr
faddp
ljmp
fmuls
jecxz
sar
cs
mov
mov
ljmp
test
call
xlat
loope
jecxz
push
scas
and
sbb
daa
das
loop
mov
aaa
outsl
insb
jb
jb
jl
cmp
jge
or
sbb
jmp
or
mov
test
cwtl
nop
test
dec
dec
bound
xor
mov
icebp
mov
repnz
xchg
cld
sbb
sbb
pop
inc
pop
inc
push
movsl
ret
aad
ret
shr
in
in
loopne
or
outsl
mov
out
fdivr
stc
out
xor
cmp
adc
ret
mov
ljmp
mov
outsb
mov
mov
add
out
out
xchg
test
add
inc
inc
jg
mov
mov
pop
xor
push
add
fbstp
cld
add
add
push
push
mov
dec
mov
sbb
fwait
dec
pushf
test
cli
push
pop
scas
mov
fwait
fisubl
lods
mov
mov
push
scas
inc
dec
push
inc
inc
push
push
outsl
inc
dec
inc
dec
inc
inc
stc
fwait
add
fdiv
fstl
into
aam
in
fcmovbe
iret
lret
ljmp
add
sub
add
or
movhps
jp
inc
inc
mov
call
and
xor
clc
hlt
pop
int3
iret
enter
das
jb
in
enter
lret
cmpsb
cmpsb
rcl
aam
ret
cltd
lock
in
mov
mov
enter
shll
or
jb
je
inc
push
push
add
inc
mov
pop
pop
adc
std
or
push
push
pop
pop
pop
adc
sbb
lcall
lcall
and
test
mov
in
lods
test
mov
out
sub
lahf
iret
ret
mov
sbb
nop
fiadds
xchg
addl
xchg
xchg
mov
jp
pop
dec
into
xchg
cwtl
xchg
mov
cmp
in
pop
inc
pop
data16
sub
push
outsl
arpl
xor
out
pushl
jp
cmp
jae
jg
jp
js
adc
mov
xchg
mov
pop
clc
jmp
loop
aam
xor
push
pop
pop
push
pop
push
pop
xor
decl
xchg
xchg
mov
test
aad
xlat
test
fdivr
mov
dec
ficoms
jecxz
rol
xchg
fcomp
iret
push
xchg
cmc
std
ja
das
adc
mov
mov
subb
mul
loop
lock
jmp
dec
dec
mov
lock
dec
clc
sub
jle
sbb
jle
ret
fisttps
imul
call
mov
and
insl
inc
lcall
js
push
pop
jl
or
pop
jo
clc
pusha
add
xor
sahf
jns
iret
clc
xchg
mov
scas
cmpsl
cwtl
repnz
out
lea
out
iret
bound
movsl
repnz
std
jle
cld
loope
mov
push
xchg
imul
decl
adc
dec
dec
inc
inc
or
or
or
adc
inc
inc
pop
adc
sbb
lcall
sbb
xor
adc
sub
xor
push
es
and
addr16
decl
mov
jecxz
test
scas
stos
loop
cmc
cmpsb
mov
mov
mov
lods
mov
test
test
lahf
fstpt
mov
fstps
lds
mov
lret
jle
in
xor
jo,pn
add
out
in
push
adc
add
stc
popf
mov
pushf
adc
mov
fwait
out
pop
in
nop
cltd
mov
mov
xchg
bound
mov
pop
popl
sbb
inc
data16
lock
ficoml
imull
mov
or
movsb
stos
in
test
movsb
push
sbb
pop
add
and
addr16
xor
and
insl
loop
mov
insb
jae
out
in
subb
or
into
mov
outsb
mov
or
loope
mov
mov
sbb
add
stos
test
addr16
test
mov
sahf
mov
nop
mov
movsl
mov
dec
pop
cld
adc
movsb
mov
mov
adcb
aaa
mov
jg
mov
mov
sbb
mov
daa
cmp
das
sahf
lods
mov
faddp
decl
rolb
adc
rorb
push
rolb
sub
les
push
mov
sub
xlat
lock
jnp
pop
out
mov
scas
pop
dec
cwtl
cmp
xchg
mov
lods
outsb
and
xchg
inc
movsb
inc
sbb
xchg
lods
les
iret
mov
sti
xchg
add
or
inc
pop
push
test
jns
scas
movsb
mov
mov
mov
mov
nop
test
cmpl
pop
outsl
fbld
pushf
mov
stos
ret
ret
mov
xor
outsb
xchg
ds
push
outsb
rcr
int
movsb
pop
add
aas
push
cld
adc
lods
mov
aam
push
fimuls
sbb
mov
out
imull
pop
ret
push
pop
add
or
pop
add
inc
cld
pop
add
mov
inc
movsb
imul
inc
imul
mov
add
mov
add
loop
or
add
adc
inc
push
test
push
data16
std
incl
mov
push
add
dec
and
add
outsb
jl
mov
inc
js
xor
and
mov
roll
mov
push
fcoml
inc
nop
cmp
incl
shlb
dec
or
dec
mov
or
incl
add
xor
das
jmp
iret
add
mov
mov
add
inc
jo
hlt
and
add
jo
xor
xorl
nop
aas
mov
or
cli
fistpll
add
sub
fmull
mov
add
mov
inc
int3
addb
call
adcl
shrb
add
fiaddl
pop
xchg
xchg
inc
push
xchg
xchg
pextrw
outsb
cld
sahf
paddd
mov
inc
mov
and
or
das
clc
inc
dec
xor
push
add
inc
or
inc
push
add
and
fwait
jle
cli
dec
or
decb
push
jl
add
movsl
addb
dec
mov
or
fistpll
stos
adc
sub
shrb
add
mov
mov
mov
jbe
push
mov
popl
pushl
pop
imul
xor
push
xor
adc
int3
hlt
int
subb
mov
or
adc
pusha
sbb
test
and
push
xor
jnp
jp
sub
shlb
add
push
les
sbb
out
int3
add
jnp
or
dec
and
std
cmp
dec
lret
cmpsl
lds
adc
adc
inc
dec
cmp
arpl
jge
test
mov
lcall
decb
inc
push
mov
push
inc
adc
test
push
mov
clc
jg
orb
cmp
cmp
and
shufps
inc
movsb
dec
insl
addb
adc
adc
cmpsl
into
inc
push
dec
add
push
or
cmp
or
aaa
inc
mov
pop
lock
mov
cmpsl
mov
dec
jbe
lods
lods
inc
xor
testb
nop
aaa
sbb
out
jmp
inc
adc
cmp
and
push
cmpb
out
cmp
outsl
inc
add
sbb
mov
cmc
jg
cmp
testb
mov
test
cmp
popa
clc
iret
lds
cmp
and
lds
stos
shl
mov
inc
adc
fs
dec
mov
mov
and
lds
push
aad
test
and
or
sbb
and
add
push
adc
addr16
and
mov
fstpl
cmpsb
aaa
pop
es
mov
push
and
stos
clc
leave
push
bound
mov
fwait
decb
in
inc
lock
add
inc
push
mov
inc
mov
fisttps
testb
in
jg
test
and
insb
movsb
or
es
pop
lcall
std
incl
or
inc
fadds
or
dec
repz
xor
pop
cmp
cmovbe
mov
add
add
add
ficomps
mov
movsb
xor
add
enter
mov
mov
inc
lret
dec
in
adc
insb
xor
add
test
add
fdivl
mov
enter
shr
aas
divb
call
inc
sub
add
add
out
add
inc
lock
pop
push
rcrb
jns
sbb
and
mov
outsb
jae
loopne
popa
adcl
in
pop
mov
fldl
push
push
and
and
and
fldt
cld
and
bound
sub
add
mov
fnsave
mov
leave
lods
lods
mov
es
les
leave
adc
dec
add
inc
mov
inc
lds
loope
hlt
cwtl
fnstsw
add
or
add
into
or
je
rolb
mov
out
stos
in
add
pushf
into
loopne
lcall
mov
and
adc
into
arpl
dec
lcall
sub
jge
aad
nop
fnstsw
dec
sbb
loopne
inc
mov
xchg
nop
pmaxsw
stos
dec
add
or
sub
shlb
in
rcr
lock
mov
loop
enter
sbb
lcall
add
adc
ja
insl
pusha
mov
addb
loopne
jo
loopne
jg
add
pop
pusha
ss
cmp
mov
decl
mov
inc
inc
shlb
mov
and
inc
and
cmp
sysenter
subl
sub
or
xor
cmp
push
in
sbb
sarb
shll
andb
decl
mov
fisubl
ret
adc
pusha
add
add
rcr
jg
mov
inc
push
add
push
ret
add
lea
mov
sub
xchg
jmp
push
adc
sahf
push
and
in
nop
cmpsb
or
jg
mov
inc
add
testb
into
inc
mov
jbe
movsb
adc
inc
add
sbb
mov
and
shll
rcr
hlt
incl
fs
add
push
mov
and
add
jle
xchg
shll
pop
cmpsb
fwait
fcomip
call
sub
daa
aad
mov
pop
andl
test
sub
cmpb
xor
or
out
inc
add
sarl
adc
fildll
mov
roll
or
or
lcall
add
inc
xor
sub
sahf
inc
pop
xor
shrb
xchg
ret
or
nop
cmp
dec
xor
cmpsl
push
push
je
iret
xchg
and
cmpsl
push
inc
push
in
xchg
sub
push
fwait
and
fs
jo
cmpsl
xchg
inc
shrb
cmc
mov
shll
push
add
jp
add
in
add
inc
aam
daa
aam
popf
inc
ss
fwait
test
and
pusha
and
add
inc
inc
pusha
add
jg
mov
movsl
pop
sub
sarb
and
pop
cli
adc
and
aad
mov
fcomip
pushl
add
cmpsl
loopne
pop
xchg
cmp
cmp
sbb
add
mov
mov
mov
inc
xorb
push
dec
add
xor
dec
or
cmp
and
cmp
pushf
mov
add
outsb
or
test
es
add
jg
or
sub
add
rorl
pop
loop
nop
subb
and
cli
or
add
sbb
mov
clc
scas
xchg
inc
xor
into
xchg
mov
lds
out
cmc
push
add
inc
test
sbb
inc
icebp
jg
mov
push
inc
mov
popa
popf
inc
cwtl
cmp
inc
cwtl
jge
lock
jne
loop
rolb
inc
jo
std
lock
pop
sub
incl
js
aaa
xor
xchg
mov
fsubl
or
xchg
mov
push
arpl
scas
js
add
fisttpl
add
add
xchg
shlb
add
icebp
mov
and
and
and
in
clc
jmp
or
sub
insb
xor
or
mov
add
into
cmpsl
lret
xchg
adc
mov
or
inc
jmp
add
lods
push
jge
cmpsb
xor
inc
dec
adc
sbb
shrb
fmull
cli
pop
pop
and
subb
adc
cmpb
stos
ljmp
mov
push
or
rorl
mov
jbe
mov
mov
mov
mov
cmp
in
and
and
dec
adc
xor
mov
roll
stos
mov
or
dec
sub
cli
outsl
pop
fcmove
jecxz
test
add
or
inc
int3
push
call
add
or
sub
add
test
dec
pushf
sarb
stos
outsb
mov
inc
add
testb
addb
stos
out
or
ud0
inc
or
mov
in
or
push
mov
adc
lcall
rorl
push
mov
rorl
mov
pushl
lcall
xor
adc
or
push
divl
sti
and
push
imul
int3
mov
inc
cmp
mov
es
inc
mov
incl
into
dec
or
pop
cmp
fwait
outsb
inc
loope
leave
mov
sbb
add
pusha
add
aaa
std
xchg
cmp
dec
pop
add
inc
add
push
inc
adc
loop
popf
and
xchg
jg
add
adc
and
std
add
pop
call
inc
popl
sarb
mov
and
adc
mov
lds
nop
adc
shrb
cli
fwait
adc
andb
adcb
jno
outsl
shrb
cld
aaa
push
loop
mov
jle
test
and
mov
pop
xor
add
adc
xor
add
sbb
scas
inc
cmp
mov
pusha
inc
loopne
and
or
xor
mov
pop
cwtl
jns
add
movsl
xorb
incl
cmpsl
cmc
popf
shrb
add
lods
add
mov
and
mov
xor
mov
cmpsl
and
fists
add
add
fs
sub
lcall
add
push
dec
ret
pop
xchg
pop
jb
fstpl
mov
pop
mov
in
inc
sarb
mov
cmpb
push
adc
into
push
pusha
sbb
dec
add
cmp
cmp
idivb
mov
xor
aad
push
dec
or
jne
mov
adc
addb
dec
popa
cmp
or
push
or
sub
mov
fs
mov
add
or
mov
and
jo
jp
jp
or
fdivrp
mov
hlt
mov
ret
xchg
push
inc
rolb
and
andb
or
into
xchg
rol
mov
or
adc
inc
fisttps
dec
filds
mov
or
inc
ficoms
add
sti
xchg
or
popa
and
subb
sti
pushl
hlt
add
mov
cmpb
mov
rorl
mov
mov
inc
xchg
test
add
jg
hlt
dec
mov
add
push
rcll
jo
repnz
inc
add
jl
leave
repnz
add
insl
insb
xchg
add
cmc
sbb
fidivrs
inc
fldt
xchg
or
push
mov
mov
or
mov
test
push
add
pop
lock
push
clc
mov
into
xchg
and
hlt
jg
dec
sahf
inc
orb
fs
cwtl
mov
and
insb
cmp
adc
add
testb
jo
enter
sbb
xchg
adc
sbb
pop
lock
decl
sbb
add
push
mov
add
leave
int3
fwait
insb
cmp
rorl
movsl
jno
shll
push
in
pop
cmpsl
shll
call
mov
inc
add
test
nop
inc
or
aad
cmp
stos
rcrb
add
mov
add
inc
mov
decl
xor
and
sbb
stos
ret
push
xor
je
insb
cmpsb
lock
mov
loope
push
and
cmpsl
sub
call
ret
orb
fldl
lds
add
or
icebp
dec
jno
xchg
push
pusha
adc
push
nop
fisttpll
aam
xor
or
xchg
into
adc
lds
int3
cmp
mov
stc
out
push
out
jbe
icebp
fnsave
mov
mov
inc
sahf
leave
adc
lds
sbb
cmp
sub
les
cmpsb
cwtl
push
negb
mov
adc
mov
mov
inc
insl
xchg
mov
into
ficoms
fstpl
repnz
cmpb
inc
test
mov
mov
or
leave
imul
adc
mov
int
je
sbb
mov
test
punpckhbw
lock
or
jne
xor
stc
iret
cli
jg
xchg
ficompl
inc
mov
add
lea
cs
push
push
filds
pop
sub
lock
lcall
pushf
mov
adc
push
mov
cwtl
in
pop
mov
pop
dec
push
fidivrl
adc
xchg
ss
add
push
sub
sub
sbb
cmpsb
cmc
pushl
aam
inc
sub
pop
add
jge
pop
nop
int
cmp
add
or
dec
adcb
test
sar
aad
inc
add
addb
ss
lret
in
dec
mov
dec
and
lods
dec
mov
shlb
jl
mov
adc
mov
rolb
dec
add
xchg
adc
jnp
adc
fldl
js
push
mov
jbe
add
clc
or
mov
call
and
xlat
xchg
or
pop
cwtl
and
out
faddl
inc
int3
dec
ljmp
mov
test
cmpsb
push
dec
ss
adc
mov
jl
pop
pop
sub
cmpsb
and
pop
outsl
test
push
mov
sbb
incb
insb
push
inc
lret
jp
inc
icebp
lds
add
xor
adc
lock
sarb
cmp
fnstsw
fucom
sub
or
or
add
rolb
cs
std
jmp
add
lcall
pop
call
inc
jle
jo
es
scas
cli
ss
icebp
les
xchg
dec
push
mov
mov
ret
push
jg
std
adc
xor
int3
stos
pop
add
pop
push
into
cmp
mov
test
mov
pop
ss
or
inc
outsb
lea
iret
adc
es
and
aam
pop
fstl
ljmp
lret
icebp
lock
cmpsb
icebp
sub
mov
call
cwtl
xor
mov
dec
icebp
std
mov
enter
mov
dec
repz
push
cld
jg
mov
inc
add
add
add
and
out
mov
addb
add
or
into
add
add
adc
and
adc
and
xchg
leave
add
xchg
rclb
movsl
inc
sbb
cmp
and
into
es
xor
inc
cmpl
push
loopne
sub
dec
xor
mov
xor
mov
out
dec
sbb
xor
add
mov
mov
fwait
sbb
jb
enter
xor
outsb
xor
mov
dec
lods
mov
xor
and
cmpsb
fwait
mov
inc
mov
jle
add
test
mov
sub
lret
fwait
test
add
push
and
rorl
jb
add
mov
pop
aam
sub
mov
and
divb
ret
hlt
cwtl
pop
and
dec
inc
inc
or
cli
lahf
movsl
pop
add
push
push
add
cmp
lcall
push
sbb
and
mov
mov
and
sbbb
mov
add
xor
and
xor
rolb
mov
leave
pushf
rclb
cmpsl
lock
sbb
mov
push
shll
imul
push
pusha
inc
add
stos
scas
adc
push
push
rolb
push
mov
loopne
pop
push
cld
push
repnz
xor
xchg
aas
xor
clc
add
add
xor
scas
clc
fcomip
loopne
fiadds
sbb
adc
pop
or
add
push
mov
les
jne
jo
jmp
xchg
inc
cwtl
dec
add
add
add
mov
lcall
inc
fxch
inc
mov
shll
mov
ret
inc
dec
push
or
fisttpl
lcall
or
inc
ret
into
push
and
aam
sti
into
cli
sahf
or
dec
mov
rol
or
fcomp
hlt
sub
xchg
mov
push
addb
inc
and
inc
mov
add
sub
es
or
and
jno,pt
das
xor
push
jecxz
orb
mov
mov
mov
cwtl
popf
pushf
loope
out
scas
pusha
addl
leave
and
adc
sub
sub
add
push
loopne
add
fildl
mov
add
dec
add
loopne
jae
jecxz
add
mov
pop
jmp
addb
je
jmp
mov
loopne
ds
mov
shlb
jo
fisttps
iret
rolb
or
inc
lods
mov
test
mov
fmuls
push
roll
sub
nop
or
inc
inc
mov
decl
decb
mov
or
movsl
inc
xchg
insb
cmpsl
adc
fwait
ret
pusha
aaa
lods
sub
cmp
xor
fsubs
popa
lds
xor
fcoms
jmp
jl
enter
push
lods
mov
jle
jg
add
xchg
adc
lds
das
icebp
fbld
dec
add
shll
iret
jne
popa
pusha
cmp
lcall
mov
or
sub
es
add
add
and
mov
sti
add
inc
dec
mov
jg
mov
adc
mov
movsl
pop
lods
das
adc
push
loop
popf
inc
and
js
xchg
pop
add
jno
push
mov
and
push
mov
mov
add
or
mov
inc
paddb
inc
push
add
xor
cs
aaa
jecxz
and
adc
adc
dec
xor
aad
mov
sarb
cli
jmp
or
add
enter
dec
scas
aam
in
cs
mov
lds
std
pusha
push
xor
and
add
add
add
popa
sti
pop
aad
sbb
or
gs
cmp
testb
xor
daa
sbb
or
not
ret
adc
into
loopne
outsb
push
xor
push
add
push
add
or
ficoml
lcall
or
cmp
xchg
pusha
push
xor
hlt
jno
loopne
mov
test
ja
es
lret
adc
add
lods
push
or
incl
or
rorl
shr
pusha
adc
add
adc
ljmp
incl
jo
adc
push
cmp
fwait
movsl
xor
mov
jbe
mov
dec
xor
mov
mov
sti
xor
lcall
xor
popf
movsb
push
mov
fdiv
mov
adc
push
iret
add
ss
fisttps
or
arpl
jo
aaa
std
icebp
shll
pop
sarl
sub
and
cmc
filds
xor
icebp
sub
shlb
add
popf
push
cli
xchg
or
jbe
push
sbb
add
inc
dec
clc
mov
sahf
sub
dec
jae
stc
adc
mov
shl
inc
mov
adc
lcall
add
jno
shlb
mov
rolb
push
mov
dec
fsubrs
add
and
notb
or
mov
js
adc
add
xchg
movsl
add
outsl
clc
adc
outsb
sub
sbb
add
adc
adc
std
cmp
ss
hlt
lock
adc
mov
lcall
ljmp
mov
xchg
mov
std
inc
xor
or
cmp
jne
add
jg
mov
adc
jge
int3
xchg
adc
xchg
shlb
rcll
sbb
xor
adc
mov
and
das
mov
or
sbb
les
jo
imul
aas
popf
jecxz
add
jo
pop
and
add
clc
imulb
pusha
add
or
add
hlt
mov
fldcw
add
cli
inc
sbb
decl
mov
push
add
xor
loop
idivb
popa
inc
and
pusha
cmp
push
movsl
ud1
inc
fstpt
add
add
test
outsl
lods
push
pop
or
add
add
test
dec
movsl
imulb
stos
fucomip
xor
adc
stc
sarb
xor
movb
and
push
xchg
xor
adc
aad
sbb
lods
scas
rcll
aaa
std
das
dec
sub
jb
movsl
loopne
xor
rorb
inc
push
sbb
fs
and
adc
incl
and
movsb
mov
hlt
mov
or
inc
outsl
dec
and
shlb
or
shlb
dec
add
adc
adc
test
inc
dec
inc
jle
adc
and
int3
sbb
or
addb
aad
call
xor
fsub
pop
add
rcll
dec
jbe
sub
inc
and
fwait
jo
roll
push
mov
add
icebp
push
sahf
inc
ljmp
loope
pop
xor
lahf
mov
sbb
mov
lds
inc
dec
data16
incb
cmp
into
xorb
xchg
jge
xchg
aam
nop
xor
rorl
ret
icebp
adc
inc
mov
fdiv
or
cmp
icebp
inc
ljmp
inc
mov
stos
dec
mov
mov
xchg
mov
jg
mov
add
or
cmpsl
int3
fstpt
add
xor
pusha
mov
sbb
push
fwait
adc
std
test
insb
fisttpll
icebp
sbb
push
mov
and
or
cmp
rolb
adc
push
inc
pop
dec
sub
xor
adc
xchg
movsl
sbb
fcmove
shl
clc
or
and
cmp
icebp
cmpsl
cmp
cmp
adc
mov
idiv
mov
jbe
fiadds
pop
fmuls
lods
push
or
daa
es
and
lock
fwait
xor
cmc
cmpsb
and
dec
and
shlb
imul
or
int3
iret
loope
add
lea
jno
and
or
dec
cmc
dec
das
scas
out
and
adc
inc
js
mov
int3
ss
xor
pop
loopne
sbb
pusha
movsb
and
into
fmuls
sub
mov
push
sbb
and
sbb
jne
mov
and
or
shrl
or
addb
sar
mov
inc
mov
iret
inc
lock
cmp
addl
push
out
or
rcrb
bndldx
mov
and
mov
les
sahf
add
jns
mov
sub
sub
movsl
inc
push
repnz
and
fisttps
dec
push
xchg
mov
jo
and
lret
std
lcall
sub
jno
std
inc
adc
nop
repnz
jecxz
or
push
jb
ljmp
xor
xchg
or
loop
popf
push
dec
inc
mov
adc
mov
xor
mov
dec
outsb
inc
shlb
repnz
pop
int3
scas
mov
add
movsl
inc
mov
push
or
adc
xor
dec
ss
push
std
mov
push
xchg
cmp
sahf
or
rolb
or
incl
and
rorl
enter
daa
xor
enter
aad
data16
cld
xor
shlb
int3
add
fs
std
lods
inc
adc
push
xor
and
inc
rcl
lcall
jno
and
mov
mov
loopne
jo
mov
and
hlt
xchg
dec
in
add
flds
or
inc
inc
es
je
sbb
adcb
roll
adc
or
inc
or
or
movsb
adc
dec
subl
cmpsl
shlb
shlb
sarb
mov
add
sbb
in
popf
xor
xchg
jo
aam
cmpsb
adcl
out
xor
pushf
jle
arpl
push
data16
mov
jb
sahf
add
outsb
mov
in
or
add
or
add
inc
dec
add
leave
jmp
push
add
add
push
lea
subb
cmp
adc
cmpb
cld
push
lcall
outsl
test
xlat
and
dec
rcll
push
adc
mov
sub
stos
dec
jg
adc
subl
dec
stos
popa
in
fcmovnu
into
inc
mov
add
inc
or
bound
inc
call
inc
inc
test
lcall
pushf
inc
xor
jo
enter
and
leave
or
lods
dec
ljmp
mov
add
inc
mov
xor
sbb
clc
loopne
ljmp
dec
test
sbb
xchg
mov
fadd
mov
push
pusha
xor
es
or
int3
inc
add
sbb
test
pop
mov
lret
inc
jge
push
test
xorb
dec
pushf
lret
push
add
push
adc
mov
sbb
adc
insb
loop
cli
data16
pusha
into
add
iret
xchg
cmpsl
fsub
dec
pop
lock
jle
and
pushl
inc
and
xor
add
lret
inc
pop
jo
pop
xorb
pop
inc
add
subb
pop
sub
or
sbb
mov
leave
xor
mov
mov
mov
addb
pop
ret
aam
adc
mov
lds
inc
scas
ret
pop
aad
les
sub
push
fiaddl
mov
pop
adc
sbb
add
push
fs
ficoml
sarb
pop
add
enter
std
inc
call
inc
push
into
rorl
into
mov
rolb
stos
scas
decb
inc
jnp
popf
inc
mov
mov
loopne
xor
fdivs
ret
push
xor
jp
mov
add
or
mov
sub
mov
rolb
out
sahf
xchg
mov
jo
test
xchg
and
ret
into
call
iret
mov
xchg
inc
popa
fisubrl
jp
idivb
inc
mov
sub
sbbl
je
add
pop
into
sbb
ljmp
inc
pop
testb
sub
bound
push
push
jmp
ret
lcall
inc
cmpsl
sbb
and
sbb
sub
stos
popa
je
pop
jmp
xchg
andl
cmp
xor
mov
add
loop
enter
and
xchg
mov
add
inc
and
cmpsl
fabs
pop
adc
lds
and
fistl
sbb
or
and
roll
cmpsl
mov
mov
and
mov
inc
sbb
and
shlb
stos
dec
mov
dec
aam
dec
push
movsl
frstor
jne
mov
vaddsubps
cmp
and
stos
push
mov
or
or
pop
inc
push
mov
clc
and
push
clc
ret
xor
mov
decl
fimull
popa
or
mov
or
mov
jne
xorl
hlt
cmp
scas
mov
and
sbbb
push
add
or
xor
inc
mov
jmp
sbb
lea
in
sub
fwait
loopne
jp
push
mov
fadds
frstor
push
ss
push
vunpckhps
loop
add
mov
dec
fdivp
arpl
xor
sub
test
cmpsl
lds
rorl
mov
and
and
xchg
pop
push
add
mov
sub
loope
dec
sub
es
popl
inc
and
jg
ret
lret
into
adc
mov
addl
push
xor
int3
and
out
cmp
sbb
mov
pop
adc
mov
mov
movsl
mov
daa
xor
loope
jb
cmp
mov
and
xchg
arpl
aad
push
add
mov
and
sbbb
sarl
fcoml
es
adc
pop
dec
lds
add
lods
stos
clc
mov
retw
push
xadd
and
add
out
mov
xor
mov
cmp
pop
icebp
out
add
mov
mov
and
jge
mov
lcall
add
ficompl
aaa
mov
pusha
xchg
xchg
and
movsb
add
mov
fwait
mov
pusha
mov
add
add
cs
sub
es
rol
fnstsw
mov
mov
jnp
push
call
and
xor
or
inc
mov
pop
fs
push
xchg
inc
dec
rolb
test
lds
cmpsl
roll
movsl
push
mov
cli
rolb
add
jmp
adc
popa
jb
add
bound
cmp
sbb
sub
xchg
pushf
lea
loopne
mov
insl
dec
add
pop
std
lcall
jbe
clc
subl
stos
xor
mov
inc
shlb
je
xorb
aaa
push
sub
inc
inc
mov
push
rcrb
mov
inc
push
lcall
jp
push
push
xor
clc
icebp
sub
xor
lcall
je
inc
mov
cmc
rolb
mov
cmp
pop
popa
cli
xchg
or
lret
mov
add
push
rorl
ss
mov
cli
and
inc
mov
or
add
pushf
adc
test
test
lds
xor
xor
inc
jo
mov
fnsave
cmp
dec
das
repnz
mov
mov
add
jge
sbb
push
ds
mov
movb
add
add
jno
xchg
adc
fdivrp
incl
xor
movsl
popf
lock
or
outsb
pop
lock
inc
push
inc
adc
xchg
pop
cmpsb
sub
shll
std
push
inc
or
xor
aad
add
fstl
lock
mov
sahf
adc
fstl
fcom
add
xchg
stos
inc
mov
mov
rorb
insb
lds
fsubl
jmp
push
loope
sahf
popf
push
push
add
xor
xor
in
and
loope
add
insb
clc
jg
out
adc
add
push
add
mov
jo
push
pmaddwd
bound
cmp
cmp
cld
mov
aaa
aam
pop
and
stos
dec
mov
xor
jl
leave
xor
roll
pop
pusha
push
push
fs
popf
pop
xor
scas
jmp
pushf
inc
pop
lret
mov
fwait
lock
mov
inc
sbb
add
jo
xchg
jae
ljmp
fcoml
ss
xchg
push
push
data16
add
lods
mov
dec
mov
or
shrl
xchg
or
push
add
std
incl
lret
mov
mov
jb
aad
add
loopne
jmp
inc
mov
dec
push
xor
out
push
outsb
sub
or
add
and
sbb
adc
flds
and
ds
mov
and
jmp
mov
imul
loop
fnstsw
adc
add
push
shrl
nop
add
out
pop
pusha
xchg
dec
jbe
or
pushf
and
adc
push
mov
add
mov
sahf
shrl
sbb
mov
sarb
cli
incl
pusha
mov
or
mov
mov
or
or
ljmp
test
or
add
sub
add
fs
xor
inc
and
decl
rorb
inc
adc
xor
inc
push
pop
or
push
adc
sub
ljmp
int3
wrmsr
cli
dec
jp
xor
xor
cmpsl
jo
hlt
add
mov
or
add
into
or
mov
and
stc
xor
adc
rclb
cmp
and
dec
in
push
test
add
jo
add
les
jmp
imul
push
push
mov
cmc
testb
push
data16
sti
or
dec
cmp
js
add
loopne
mov
mov
or
jno
jo
adc
shll
and
je
mov
mov
jo
and
mov
mov
aas
shrl
adc
dec
cmpsb
cmpsl
fldl
xchg
aaa
shlb
fucomi
inc
jbe
scas
js
orb
fidivs
or
mov
sbb
cmpsb
pop
push
loopne
inc
pop
loope
lahf
loop,pt
sub
pop
shlb
xchg
xor
or
dec
adc
cld
subb
push
xchg
rclb
add
sub
movl
clc
or
les
xor
cmc
inc
add
xchg
inc
push
cmp
push
xor
and
in
jmp
and
xchg
adc
sbb
adcl
or
lcall
add
ljmp
in
or
sti
ret
ret
sub
mov
leave
test
jbe
pushf
push
frstor
sbbb
ret
mov
in
and
ss
nop
xorb
cmpsl
rolb
cli
inc
adc
ds
dec
cmp
mov
loope
loopne
or
jp
xchg
mov
test
mov
push
and
test
and
ret
fdiv
cmpsl
mov
cmc
mov
enter
sbb
loopne
clc
xor
sub
daa
popa
mov
into
rclb
pushf
push
pop
pusha
mov
jo
and
ljmp
cmpsl
push
push
add
pusha
outsb
sahf
fwait
xor
push
mov
dec
ja
pop
mov
mov
fnstsw
sbb
sbb
or
leave
popa
sub
and
push
add
je
dec
mov
les
jne
mov
lret
lods
les
cmpsl
push
xor
cmp
or
push
add
push
add
ss
sbb
cmp
cltd
inc
aam
pop
push
xorl
and
mov
pop
inc
pop
add
cmc
mov
mov
mov
cld
aas
and
add
push
and
rclb
mov
jae
or
mov
pop
sub
add
ret
push
mov
rcr
xor
xor
and
adc
shrl
cmp
and
pusha
inc
sbbb
mov
mov
cli
jmp
mov
lcall
push
inc
ljmp
arpl
aaa
or
movsl
xchg
inc
aad
lock
cmp
sub
jbe
stos
in
pop
xor
push
aad
stos
adc
inc
add
dec
pop
jo
jbe
sbb
pop
addb
js,pn
add
jo
sbb
jno
add
adc
add
inc
jmp
mov
and
icebp
pop
inc
cld
pushf
dec
add
mov
lcall
aam
ret
les
popf
mov
addb
mov
divb
stc
jge
adc
js
mov
pop
add
pop
lock
inc
nop
mov
or
or
push
inc
fdivs
clc
lcall
enter
or
jmp
movb
push
je
add
add
rcrb
mov
incl
xor
push
dec
rolb
iret
jge
int3
test
adc
lods
test
push
into
push
pop
or
jp
addb
outsb
inc
pop
sbb
inc
test
jmp
roll
or
or
dec
inc
mov
xchg
jmp
lcall
adc
push
andb
cltd
mov
xchg
pop
fwait
hlt
jbe
addb
and
or
jp
ret
das
push
incb
xchg
and
xchg
cmp
js
mov
cld
testb
fsubr
and
sbbb
mov
dec
and
andb
inc
ret
adc
pop
cmpsb
xlat
fbld
pusha
test
into
cmp
cmpb
pusha
testl
stos
pushl
dec
jmp
hlt
stos
hlt
mov
testb
pop
jl
test
cmc
mov
popf
subb
inc
adc
xor
jno
jg
pop
bound
mov
mov
jg
stc
inc
add
rclb
dec
insb
subb
subb
sbb
or
sar
jnp
inc
in
push
aad
out
rolb
subl
rclb
or
ss
inc
out
push
mov
nop
inc
jl
call
std
cmp
shll
iret
test
addb
in
add
shlb
and
in
mov
or
incb
in
jp
add
inc
arpl
fwait
push
cld
call
or
sahf
inc
or
aaa
in
les
jge
inc
test
rclb
pop
push
inc
jl
fisubl
je
adc
pusha
stos
push
cld
mov
test
leave
add
push
ret
sub
jp
loopne
popa
addl
int3
ret
cli
add
add
adc
fmuls
mov
fwait
xor
dec
loop
xchg
pop
xchg
aaa
mov
leave
inc
and
sub
add
and
orb
adc
cmc
inc
push
mov
adc
ss
test
cld
lahf
and
les
pop
jp
sbb
cmc
inc
or
inc
mov
mov
pusha
mov
inc
out
mov
jmp
push
cmp
jmp
out
in
add
lods
and
mov
push
movsl
inc
lock
fdiv
leave
xchg
and
fmuls
iret
mov
push
mov
int3
sarb
cmpsb
and
sbb
popf
dec
or
mov
adc
adc
and
mulb
adc
lods
fadds
push
jb
adc
sarb
add
push
mov
call
inc
xchg
push
test
sbb
pusha
sub
jo
and
adc
mov
cld
pop
or
stos
jno
ret
ret
push
add
popa
lods
es
add
inc
cmp
sub
and
shll
jl
decl
cwtl
xor
adc
mov
jo
cmp
sub
mov
push
scas
mov
loopne
or
add
lea
stos
test
loop
xor
mov
adc
in
inc
mov
mov
ret
stos
fsubrs
mov
xchg
or
add
roll
fstpt
int
add
in
sub
adc
fs
xor
add
repnz
sbb
mov
sar
mov
push
insb
es
pop
rol
cmpsb
movsl
rorl
or
jl
cmp
pop
sub
loopne
andb
into
outsl
andb
push
insl
popa
lcall
in
into
xchg
push
xor
add
into
mov
jmp
scas
push
or
insb
popa
add
add
movb
lock
pop
leave
jl
stos
cs
lock
fsubs
mov
jbe
nop
lds
inc
xor
jbe
and
pushf
jle
or
push
inc
xchg
cltd
dec
jl
into
or
push
xor
jp
add
sub
shlb
ret
insl
pusha
jo
sbbb
es
xchg
and
outsb
jg
dec
and
jb
popa
push
js
inc
add
push
rorb
xchg
add
scas
mov
cwtl
lds
sahf
movsl
xor
and
mov
inc
sbbb
and
leave
sub
ret
and
loope
cld
pop
dec
pop
or
sbb
adc
inc
inc
shll
cmp
movsl
aaa
add
or
cmpsb
push
cld
sbb
xchg
loope
and
mov
mov
mov
xchg
sub
mov
jne
push
stos
cmpsl
leave
stos
sub
push
je
lock
dec
and
xor
pop
jle
adc
mov
out
sub
jno
in
lds
mov
roll
scas
clc
fcomip
and
add
roll
mov
dec
test
and
out
std
or
add
push
test
cmp
mov
mov
roll
and
and
sbb
stos
mov
push
inc
popf
movsl
and
js
test
mov
mov
dec
xor
add
cmpsl
aad
add
dec
adc
or
call
and
cmp
or
mov
aad
addb
out
inc
push
xor
leave
rclb
lock
js
pop
jecxz
push
dec
addb
lret
or
lea
jbe
lcall
add
ret
dec
test
mov
aad
aaa
jnp
add
out
loop
push
add
xor
or
fisttpll
cmp
in
add
and
add
jmp
dec
or
imul
and
mov
cwtl
popf
push
rorb
sub
fsubrs
pop
pushf
js
cmp
je
cmp
mov
lcall
cmpsb
dec
pop
and
sub
mov
add
sbb
call
int3
mov
inc
push
and
sub
pushl
pusha
mov
adc
cli
or
xor
xchg
or
ljmp
ljmp
xlat
adcb
xor
mov
inc
adc
cld
push
mov
dec
stc
mov
mov
and
pop
sahf
add
xchg
xchg
or
ss
mov
sub
add
adc
sahf
jg
inc
aaa
xor
adc
pusha
or
and
out
or
or
inc
jnp
inc
add
lea
idivb
dec
push
lock
inc
or
mov
dec
icebp
push
inc
push
mov
mov
pusha
or
rol
loope
decl
mov
pop
out
or
mov
or
xor
pop
mov
mov
mov
pop
add
jg
enter
jl
add
and
adc
and
scas
mov
adc
inc
pusha
jne
jb
lret
add
jg
ljmp
stos
adc
inc
cmp
xor
mov
jp
call
inc
rorl
and
loopne
adc
mov
fsubl
sbb
mov
dec
or
mov
out
xor
add
and
mov
rolb
decl
dec
mov
shrb
inc
inc
lds
mov
xor
mov
adc
xor
jno
dec
subl
cli
das
xchg
cmpb
cwtl
es
pop
and
cmp
incl
leave
dec
loope
lret
out
add
jg
hlt
nop
fisttps
lock
enter
pusha
adc
xor
mov
adc
test
cmp
pop
rcll
rolb
cmp
dec
and
rorb
adc
mov
mov
sarl
hlt
icebp
lds
popa
or
adc
or
add
add
inc
incb
leave
lret
pop
shll
inc
cwtl
cmp
push
pusha
ss
xchg
notb
decl
inc
leave
xor
js
dec
xor
sbb
cmp
shrb
addl
rclb
into
lds
roll
inc
mov
incl
xor
fnstenv
cmp
add
xchg
loope
cmp
or
rolb
inc
push
int3
inc
add
add
push
or
sbb
inc
and
or
xor
xchg
shlb
and
and
test
stos
cmp
rorb
mov
adc
int
add
sarb
sbb
pop
jo
and
movsb
into
outsb
dec
dec
and
lock
and
lret
lea
xor
push
call
nop
lds
call
mov
jecxz
jg
pusha
test
xchg
inc
xor
dec
es
inc
mov
scas
xor
mov
add
lock
pop
push
es
adc
cmp
and
push
pusha
mov
cmp
stos
add
mov
adc
add
mov
and
add
pushf
movsb
rol
sarb
out
popf
lock
mov
out
sbb
sub
scas
adc
xorl
inc
dec
jmp
rolb
test
or
push
xor
xchg
cmc
mov
stos
in
mov
shrb
shl
in
adc
lock
call
in
pop
inc
lea
sub
ficomps
lods
bound
mov
xor
insl
adc
or
bsr
scas
ret
or
push
push
dec
and
loopne
and
sbb
pop
pop
mov
mov
lock
xor
int3
cmpsl
mov
add
inc
jne
push
xlat
mov
mov
and
or
xor
bound
es
xor
cld
cmp
int3
mov
int3
mov
xchg
loopne
das
mov
dec
adc
lret
sbbl
icebp
push
mov
mov
mov
mov
xchg
fimull
out
and
jmp
push
push
bound
fstps
jbe
call
sbb
inc
xor
pop
add
xor
fsts
xorb
xchg
aam
fwait
shr
jg
popa
outsl
or
lds
orb
xor
xor
leave
mov
xchg
add
sub
fcomip
scas
pop
addb
push
fnstcw
loopne
dec
rclb
mov
cs
pop
adc
adc
test
rcrb
aam
xchg
rcr
sbb
loopne
add
je
pop
cmc
xchg
sahf
mov
pop
pusha
mov
mov
test
push
outsl
xor
or
dec
loop
mov
adc
data16
add
add
fldenv
inc
test
es
stos
jle
inc
jbe
pop
mov
push
mov
add
inc
cmp
lds
cli
xor
pusha
add
fildll
adc
pop
orb
cli
mov
lock
or
fucom
sbb
or
cmp
jp
push
test
and
fsubrs
push
sahf
ret
push
aad
adc
addr16
push
xor
xor
mov
sbb
outsl
lods
add
ret
adc
loope
push
shll
push
vmovdqu
sbb
mov
and
loopne
je
cld
idivb
in
inc
iret
cwtl
es
or
rcrl
lock
xorb
std
shll
xor
lock
ljmp
rorl
in
mov
or
mov
xor
add
or
pop
push
adc
push
lea
push
push
jno
cmc
repnz
rcr
add
popa
sbb
add
mov
mov
dec
repnz
hlt
add
les
push
fidivrs
ffree
lds
jmp
mov
rcll
add
fisttpl
loopne
mov
in
add
xlat
clc
aam
lds
jp
mov
lcall
shlb
sbb
add
test
adc
loope
orb
fwait
roll
inc
mov
mov
sbbb
jl
lret
jge
lret
pop
sub
jbe
mov
or
push
inc
and
or
cmp
into
jnp
add
jl
push
xchg
add
enter
and
push
fldl
mulb
add
enter
in
dec
rclb
repnz
cmpb
add
push
add
sbb
mov
inc
and
dec
addb
or
test
enter
adc
lods
js
xor
subb
sbb
cwtl
pop
sub
and
mov
movsb
ds
and
or
mov
std
cmpsl
lds
orl
rorl
adcb
adc
jl
orl
xor
lcall
add
or
js
cmpb
add
add
cmp
dec
cmp
mov
xor
and
or
lret
add
roll
stos
or
adc
aaa
call
es
xor
rcl
pop
lock
xor
ret
addl
iret
xchg
into
and
and
or
fidivs
dec
sti
inc
outsl
cmpb
sbb
fstl
push
inc
and
sarb
loopne
add
flds
jb
sbb
pusha
ret
add
and
cmp
or
lock
test
sbbb
pop
leave
add
mov
pop
fisttpll
xchg
xor
sbbb
aaa
call
movsl
rolb
data16
mov
lock
xor
add
decl
lods
lret
call
push
cmp
or
ja
ret
lcall
aaa
cs
add
mov
hlt
adc
sub
fildl
jb
orb
leave
lock
es
outsb
fisubl
sbb
inc
orl
inc
or
ds
inc
inc
imul
jmp
sar
sub
add
mov
jo
inc
add
sbb
stc
mov
ljmp
pop
fadds
add
repz
cmpsl
add
pop
lea
add
push
or
or
mov
jle
mov
rolb
cmpb
pushf
es
cmpsl
inc
push
mov
xchg
or
jbe
sbb
cmp
xchg
dec
or
cmp
mov
add
add
aam
add
cmp
xchg
cld
ret
dec
hlt
outsl
push
cmp
and
clc
cmpsb
dec
cltd
enter
push
jge
icebp
shlb
fisttpll
and
sbb
add
mov
xor
xchg
adc
adc
or
or
fyl2x
fistpll
test
shll
and
lret
lret
add
lret
xchg
popf
adc
mov
or
mov
mov
fmuls
push
in
mov
cmp
inc
aam
push
xor
decl
out
ret
sbb
aas
xor
fwait
sbb
inc
lock
xor
cmp
dec
push
pop
xchg
popa
lock
std
add
and
mov
int
pop
out
mov
cmpsb
lret
inc
ljmp
and
int3
mov
aad
adc
add
ret
mov
decl
into
cmp
subb
cltd
icebp
iret
mov
jmp
add
rol
add
add
sub
fisttpl
sub
or
cmp
es
fcomip
ljmp
jmp
arpl
add
cli
add
lods
aam
cli
mov
cmp
jo
mov
pop
out
xor
ret
gs
fs
insb
lret
int3
and
sub
in
cwtl
mov
js
sbb
nop
fstpl
call
inc
mov
fisubrl
or
inc
insb
shrl
xchg
out
insb
mov
add
inc
or
add
push
mov
xchg
sub
xorb
lcall
fstpl
rolb
aaa
negl
mov
out
inc
inc
or
dec
movsl
xor
enter
jnp
sarb
add
adc
jmp
iret
and
cmpl
or
mov
mov
sbb
fidivrs
mov
or
in
mov
incb
and
aaa
mov
and
and
ret
rorb
leave
pusha
adc
sub
dec
lock
cmpb
sahf
and
popf
push
cli
jmp
jmp
and
xor
mov
rolb
or
sub
loopne
add
mov
mov
paddq
mov
add
push
push
insl
or
shlb
pop
jge
subb
mov
add
xorb
xor
loope
mov
gs
or
popa
mov
xlat
aaa
pusha
lock
push
mov
neg
insb
mov
dec
or
cmpsb
loopne
and
lods
addb
ljmp
loopne
xchg
rcrb
adc
pop
sub
or
sbb
loop
aas
ljmp
sbb
repnz
or
fwait
movsl
fisubl
aas
addb
fwait
loopne
cmpsb
es
inc
push
sub
sub
ss
insb
add
and
int3
ret
and
mov
adc
push
sub
and
adc
mov
aad
das
add
sub
inc
mov
and
bound
stos
int3
les
mov
add
add
or
pop
pushl
cmpsl
ret
leave
scas
or
roll
mov
decl
xchg
outsl
adc
rorb
adc
adc
jo
cmpsl
ret
pop
add
aam
ss
sbb
sub
prefetch
or
sbb
pushl
push
adc
push
or
outsb
xor
sbb
stos
pop
lock
add
es
jne
mov
jmp
lds
mov
sub
add
inc
ret
loop
lds
test
inc
fsubp
negb
lea
lock
mov
or
xor
rcrl
or
mov
or
nop
sub
loopne
pop
rorb
inc
xchg
hlt
push
fwait
mov
mov
and
pop
push
loopne
inc
idivb
jg
test
jbe
adc
sub
inc
or
subb
cli
and
mov
add
lock
mov
rcr
or
jne
adc
pop
hlt
or
adc
push
adcb
pshufw
mov
negb
movsb
add
inc
adc
lods
cmp
int3
inc
jg
push
pop
sbb
xor
add
jge
add
mov
adc
stos
adc
mov
xchg
adc
sbb
xchg
inc
add
mov
stos
sbbb
mov
cltd
adc
inc
dec
loopne
inc
sbb
pushl
inc
cs
xor
mov
loopne
xor
nop
sahf
sarb
lock
inc
xchg
clc
fcomip
roll
lea
xor
lret
es
pusha
add
add
push
dec
add
and
mov
adc
inc
loop
cwtl
and
mov
cmpsl
or
in
pop
and
jo
or
sbb
or
or
std
ljmp
or
cmp
sbb
dec
dec
nop
mov
test
xchg
int3
shlb
fldenv
or
cs
ja
lock
sbb
inc
inc
jle
and
jp
jle
or
rclb
xorb
and
fcmovu
sub
jg
sub
xor
popf
movsl
and
in
aad
cmpsb
incl
mov
pushf
adc
xor
mov
loop
fwait
scas
cli
gs
push
nop
sbb
icebp
jg
gs
lcall
insb
mov
xor
and
incl
add
popa
lcall
xor
xor
loope
adc
or
hlt
das
mov
and
jge
shrl
inc
and
decb
fildll
or
rcrb
icebp
add
mov
cwtl
dec
inc
clc
into
adc
mov
jg
test
rolb
add
clc
shlb
adc
rolb
in
push
cld
decl
cld
ror
lock
add
ja
pop
lock
sbbb
ret
aad
jo
aaa
or
stos
mov
add
pop
or
testb
xor
dec
and
add
inc
adc
and
jg
xor
mov
inc
nop
lods
xor
push
xor
clc
inc
mov
popf
test
or
clc
std
icebp
popf
inc
adc
cmp
cld
add
xchg
out
or
jmp
adc
fsubr
int3
and
and
jmp
test
mov
test
or
lcall
or
adc
popf
add
leave
ret
sbb
adc
aad
sub
push
incl
fisubs
fcoms
and
orl
push
and
add
sub
cmpsl
test
push
pop
fbstp
ss
int3
xor
jle
rcll
jg
decb
or
mov
add
adc
int3
mov
es
cmpsl
sbb
outsl
clc
add
rcrb
push
jp
jmp
je
mov
xchg
jo
sub
sbb
cmpsl
lret
xchg
mov
jle
addb
shll
call
cmpsl
cmp
fnstsw
mov
shll
aad
aas
mov
xchg
xorb
ja
adc
xchg
sbb
push
rolb
inc
mov
stos
incl
jno
mov
es
push
adc
pushl
dec
or
push
roll
dec
js
mov
add
int3
xchg
mov
xchg
hlt
setg
add
rolb
mov
and
and
ret
and
inc
mov
add
or
movb
and
xor
sub
je
cmp
ljmp
es
cmp
cli
mov
cwtl
xor
negb
inc
lret
mov
in
lcall
outsl
jg
pop
rcll
lret
in
adc
xor
pushf
pushf
cmp
mov
push
xor
inc
push
pop
jmp
dec
mov
cmpsl
and
in
ss
xchg
or
push
inc
xor
cmp
lret
or
xor
adc
sahf
sub
jno
or
adc
xchg
sub
jmp
or
pop
mov
push
sar
fbld
idivb
inc
cwtl
add
inc
fldl
inc
cwtl
movb
inc
frstor
testb
mov
mov
add
inc
xchg
xor
push
xlat
push
fwait
add
and
push
addb
xchg
or
pushf
xchg
add
xchg
incb
add
sahf
fwait
push
cmp
add
aad
clc
test
outsl
movsb
xor
enter
mov
sahf
call
loopne
dec
es
pusha
and
or
dec
js
decl
inc
mov
cmp
xor
sub
pusha
fmul
and
push
lock
jg
aaa
xchg
mov
jno
test
int3
roll
cld
ret
inc
mov
inc
leave
sbb
and
mov
cli
lcall
add
pop
inc
pusha
mov
push
orb
add
add
mov
mov
add
lahf
push
lock
adc
pusha
mov
adc
js
add
sbb
repnz
or
lret
mov
sbb
movsl
int
mov
inc
add
push
or
mov
inc
mov
or
lods
pop
or
in
sub
sub
lds
fstpl
fbstp
dec
fcomps
fadds
fidivrs
add
sub
int3
adcb
rolb
fnstenv
jnp
xor
sbb
jmp
aad
dec
pusha
repnz
sar
push
orb
xor
adc
sub
frstor
stos
cmpb
ficompl
cmp
test
lahf
pushf
push
add
sar
add
mov
xchg
rorb
mov
stos
mov
dec
out
sub
sub
adc
sar
add
cmp
mov
cmpsb
adc
and
sub
cmpsl
xor
stos
stc
cmp
inc
add
out
adc
push
aad
jne
ljmp
and
inc
add
add
xchg
sbb
movsl
dec
cld
lods
and
or
sbb
lds
dec
and
inc
pop
or
add
inc
push
testb
sub
addr16
out
dec
rcrb
orb
add
add
mov
or
dec
and
mov
fs
into
sarl
into
shlb
mov
inc
std
jg
insb
add
int3
pushf
inc
inc
or
fsubrs
flds
push
inc
imul
mov
lcall
ret
test
popa
push
shrl
cmpsl
or
lret
add
into
add
pop
cmpsb
ds
xchg
popf
xor
rcll
xorb
insb
push
mov
and
cmp
xor
add
sahf
jo
mov
aaa
rorb
stc
jle
lods
dec
sbb
jbe
cld
leave
xor
jg
and
ret
xor
mov
add
addr16
je
cli
mov
cwtl
dec
dec
sbbb
ds
mov
or
test
ret
inc
mov
lods
xchg
inc
add
ja
incl
inc
int3
add
push
inc
push
mov
add
jle
add
leave
xchg
add
sub
mov
mov
and
and
push
cwtl
andl
jle
and
lock
mov
dec
inc
mov
and
add
mov
test
adc
mov
inc
mov
sbb
mov
pop
jl
push
mov
loopne
and
jg
or
roll
xor
ret
and
out
std
ja
nop
fs
inc
push
xor
rorl
add
cli
adc
push
add
pushf
xor
inc
sti
add
loopne
cmp
sahf
pusha
sub
lods
or
mov
mov
dec
mov
cmp
push
sub
jmp
inc
pop
mov
fisubrl
cltd
sbb
push
mov
cmp
push
or
pop
add
push
pop
add
jp
flds
fstpl
adc
pop
add
dec
add
cmp
or
int3
es
testb
imul
test
hlt
mov
and
shlb
pop
sub
and
adc
or
sarl
jge
jnp
enter
cmp
jecxz
inc
sahf
inc
xor
mov
clc
inc
push
es
lock
mov
lock
ret
lock
lock
add
rcrb
ss
pop
inc
into
mov
inc
les
sub
mov
xor
mov
nop
or
es
push
jle
xchg
mov
scas
sbb
daa
dec
jmp
addl
adc
inc
addl
mov
mov
push
jge
nop
pop
enter
and
jmp
inc
adc
inc
cmp
aaa
cmp
je
inc
mov
adc
repz
int3
adc
and
inc
insb
add
sahf
inc
mov
popf
cwtl
fsubl
xchg
loopne
adc
cmp
cmp
inc
dec
pop
push
mov
aaa
mov
aaa
mov
xor
int3
mov
test
fisttps
fucomi
cmp
popf
pusha
mov
test
xlat
and
popl
lds
mov
mov
mov
add
add
std
sbb
mov
jg
loopne
ret
sbb
sbb
cmpl
lock
adc
inc
pop
inc
pop
mov
je
mov
adc
push
fcomip
add
pop
sbb
pusha
add
iret
add
pop
incb
hlt
sbbb
push
rcrb
pop
testb
inc
add
outsl
mov
jp
negb
sbb
movb
cmpsb
add
out
test
adc
push
daa
and
sbb
les
or
add
adc
lock
mov
xchg
push
lods
xor
cmpsl
shrl
cltd
outsb
and
jg
pop
sbb
das
dec
add
jmp
sar
lods
dec
int
adc
xchg
fwait
jle
jne
mov
test
sarl
dec
rclb
add
mov
xchg
add
xchg
mov
fimuls
shlb
mov
pop
cli
lcall
pop
sahf
inc
cwtl
fwait
hlt
lcall
loope
inc
stos
leave
nop
inc
and
jle
add
add
das
js
out
cmpb
mov
push
jecxz
push
push
dec
cmc
add
std
dec
aas
lock
mov
and
or
push
xor
and
lods
jmp
filds
and
xchg
adc
push
adc
sbb
fs
add
nop
shlb
dec
clc
jg
add
adc
cmp
and
push
jle
aam
insb
mov
inc
xor
dec
pusha
clc
inc
pop
hlt
lcall
stos
mov
xor
jbe
sbb
and
jmp
xchg
xor
ret
mov
fdivr
mov
xchg
xor
call
and
sub
incb
fldl
fstpt
adc
xor
xor
adc
out
xor
dec
or
clc
add
dec
mov
xchg
add
jge
sub
hlt
sub
and
push
or
xor
or
outsl
sar
inc
push
lcall
xchg
stc
jge
int3
loope
xchg
imul
pusha
dec
jb
rorl
or
mov
idivb
adc
pushw
loope
ss
sbb
pop
jmp
pop
inc
or
xchg
orb
incl
push
xor
hlt
mov
mov
dec
inc
push
shlb
xor
sub
push
jo
push
adc
lock
mov
test
dec
loop
fdivs
pop
decb
xor
xor
add
lea
shr
add
add
iret
ror
lret
out
sub
xchg
aaa
std
pop
popa
sbb
gs
movsb
xor
or
xor
adc
fildl
dec
sub
or
adc
xor
inc
and
add
lcall
in
or
add
sub
mov
stos
fadd
jg
xor
adc
sub
pop
xchg
call
or
mov
loopne
xchg
add
shlb
push
xor
test
add
aaa
add
cli
pop
inc
mov
mov
mov
mov
addb
mov
inc
adc
insb
les
rorl
jno
pop
mov
xchg
inc
cwtl
out
iret
mov
movsb
add
or
movb
mov
cmpsl
adc
inc
loopnew
xor
xor
scas
cmp
mov
out
aad
mov
inc
add
fistps
add
xchg
pop
sar
and
mov
mov
jo
jno
sbb
jno
sub
loopne
sub
out
ljmp
mov
pop
lock
xchg
and
popf
adc
andl
sbbb
cmp
subb
or
rorb
test
sub
call
add
es
xor
and
filds
lods
dec
mov
push
pop
movsl
fwait
outsb
sub
movl
sbb
mov
fwait
and
pop
lret
mov
ret
and
fdivl
xorl
cld
add
cmp
mov
xchg
and
dec
lcall
inc
or
pusha
loopne
adc
iret
mov
jle
aam
outsl
adc
inc
dec
add
push
fwait
xchg
and
fiadds
andb
cmp
add
inc
mov
shll
lods
mov
cwtl
jp
or
fdivp
pushl
push
data16
or
adc
jg
mov
das
and
rolb
ret
roll
sbb
mov
pop
adcb
xlat
jmp
sub
mov
hlt
inc
mov
mov
lcall
jg
test
or
push
sbb
or
mul
push
inc
flds
es
mov
cmp
mov
aaa
lds
enter
cmpl
popa
das
cmp
loope
rorb
imulb
pusha
and
test
add
ror
add
cmp
dec
test
add
inc
lcall
std
into
pop
popf
movsl
mov
xchg
jp
mov
mov
mov
jb
add
push
push
add
not
add
adc
pop
jb
and
inc
pusha
mov
mov
adc
loope
mov
sbb
xor
cmpsl
lds
rorb
inc
ficompl
push
addb
mov
pushl
cld
call
adc
xchg
rorb
mov
in
nop
add
jmp
lods
daa
push
and
incl
add
sbb
jno
mov
ret
lods
call
inc
mov
add
repnz
loop
incl
add
adc
or
orl
mov
insl
pusha
sub
xchg
negb
nop
pop
les
fdivrl
adc
insb
or
cwtl
sar
cmp
leave
mov
test
mov
lea
mov
mov
lods
dec
test
inc
adcb
popf
mov
std
outsl
dec
push
cltd
popf
ror
sti
arpl
and
js
jo
nop
insb
cltd
adc
movsl
adc
test
fildl
nop
add
jo
fldenv
push
jmp
mov
adc
rorb
inc
mov
add
xor
inc
loopne
sahf
sahf
movsl
icebp
inc
mov
popf
and
adc
sahf
and
inc
jmp
das
mov
faddl
sbb
pusha
add
add
filds
addl
mov
mov
orl
popf
rolb
xchg
mov
mov
cmp
adc
loopne
rcll
push
bound
or
movsb
jo
xchg
xor
pushl
jmp
and
add
and
mov
inc
inc
jmp
arpl
add
inc
mov
fwait
sub
add
es
push
iret
test
add
lock
mov
movsl
pop
decb
loopne
adc
bound
mov
sbb
add
das
pop
test
ret
jno
lea
inc
in
sar
pop
xchg
xchg
sub
pusha
fwait
pop
lcall
insb
push
inc
cwtl
cmp
imul
mov
clc
add
and
insb
ret
inc
leave
xlat
cmpsl
shlb
dec
bswap
xchg
or
or
or
rcr
fadds
xlat
loopne
inc
pop
das
xchg
mov
cmpsl
mov
mov
dec
pop
jp
es
and
push
enter
loop
dec
mov
sahf
ss
sbb
dec
or
sub
into
add
popl
or
cmp
mov
sbb
fdivl
inc
mov
fucomip
or
rclb
outsl
jl
inc
stc
add
lods
dec
inc
cltd
into
cmp
and
fs
adcb
mov
imul
pop
pusha
es
add
adc
pop
pusha
ds
add
cmc
mov
inc
roll
add
out
pop
add
xor
pop
cld
add
mov
outsl
hlt
cmp
inc
xor
xchg
cwtl
rcll
jle
or
pop
fstpl
pop
std
inc
lds
lea
jbe
std
inc
dec
inc
test
orb
lcall
xchg
cmp
and
inc
mov
cmp
aas
cmpsb
inc
mov
inc
mov
cmp
enter
cmp
andb
add
sbb
add
pop
sbbb
add
dec
sub
es
xchg
mov
lods
decl
sub
jnp
and
jge
dec
lock
add
push
xor
loopne
incl
xor
mov
mov
inc
frndint
pop
vmovups
test
leave
cld
xor
xor
jg
mov
mov
leave
std
jecxz
and
ficomps
jl
cmp
pop
scas
or
jbe
inc
mov
iret
es
roll
enter
lds
cmc
das
ss
movsb
nop
mov
inc
add
add
inc
leave
xchg
cmpsl
into
or
mov
cmp
ret
lods
or
lret
sub
fiaddl
xor
adc
push
mov
mov
jp
xchg
xchg
pusha
leave
ret
dec
popf
aam
mov
in
or
sub
jne
add
es
xor
add
ret
fs
mov
mov
jb
sbb
test
out
pop
fcoml
mov
or
or
iret
push
inc
adc
repz
xor
xchg
js
cmp
adc
jge
and
and
inc
pop
sbb
mov
and
xor
aad
test
insl
sub
rolb
sub
outsb
rorb
out
dec
adc
inc
fbld
mov
insb
inc
std
jb
mov
sbb
sbb
cmp
inc
fimull
dec
jle
insl
jo
data16
push
fwait
push
sbb
sbb
mov
stos
jmp
and
jo
je
push
mov
or
or
mov
les
push
adc
ret
adc
adc
mov
xor
fsubr
mov
add
shll
pop
pusha
sub
dec
lcall
xor
hlt
sub
inc
sbb
icebp
pop
fistps
pusha
push
pusha
push
and
or
lcall
addl
pushf
push
loopne
jle
insb
mov
movsb
les
jecxz
add
inc
push
std
mov
cmp
or
enter
sbb
push
lret
insb
popf
sub
ficomps
mov
adc
push
mov
test
cmp
aaa
or
popf
lcall
inc
mov
cmp
pop
push
roll
pop
push
add
pop
adc
add
ss
fcompl
ret
pop
call
add
dec
pusha
pop
pop
es
mov
add
mov
mov
aam
fildll
fisubrl
mov
pop
addb
inc
inc
mov
xchg
hlt
incl
xor
jne
or
aas
pusha
sets
inc
xor
and
shrb
push
jno
mov
in
ret
fidivs
and
and
fbld
xchg
and
mov
mov
mov
shlb
mov
pusha
sbbb
cmp
loopne
adcb
add
clc
mov
nop
mov
sarl
lock
mov
pusha
adc
inc
dec
push
lods
mov
sub
mov
cli
push
jne
mov
fwait
movsl
mov
pop
inc
test
loope
mov
movsl
mov
fimull
add
jle
mov
sub
or
imul
test
dec
inc
dec
mov
push
popa
add
push
loope
iret
inc
xor
adc
xchg
push
jp
loopne
ret
popa
aam
cli
mov
inc
pop
or
sub
aaa
std
mov
dec
xor
mov
dec
push
jbe
pop
cmp
shlb
leave
add
pop
xchg
mov
pop
or
adc
xorb
fsubrs
sub
fnsave
adc
popf
clc
pop
mov
add
test
pusha
mov
and
nop
inc
xchg
jp
arpl
andb
mov
inc
shl
mov
xchg
and
sarl
ljmp
rorb
mov
add
and
jg
mov
jo
sbb
leave
jle
loope
jmp
sbb
push
loopne
incb
lea
jne
add
lods
rcrl
and
sbb
loopne
inc
mov
pop
hlt
stos
cmp
inc
cmp
ret
lret
lcall
cld
jg
jecxz
add
in
repz
sbb
sti
inc
pop
inc
cld
inc
mov
mov
fildl
pop
sarb
add
les
jg
aad
and
je
adc
mov
sbb
mov
adc
cmp
lds
push
mov
fsts
inc
inc
push
ret
or
inc
andb
inc
lret
andb
std
cmp
dec
sarl
fsts
dec
iret
xor
mov
loope
fcomps
cmpb
ss
push
and
ljmp
hlt
nop
sarl
cltd
adc
xor
adc
jmp
nop
adc
add
cli
adc
push
es
out
push
inc
popf
lds
iret
push
cmp
faddl
out
inc
lahf
add
push
pop
testb
out
add
aas
xchg
mov
and
pop
sbb
in
mov
leave
dec
sub
je,pn
push
ljmp
lret
mov
imul
push
clc
jg
cmpl
xchg
fwait
and
xchg
subb
cmp
sbb
sbbl
mov
inc
pushf
and
movl
in
and
push
rcrb
mov
or
lcall
or
mov
int3
add
push
xchg
add
and
pusha
sbb
cli
ja
jmp
or
cmp
mov
mov
and
sub
xor
ljmp
inc
into
pop
rolb
stos
mov
xchg
das
cmp
sbb
loopne
pusha
or
shrb
add
cld
xchg
cli
mov
jbe
push
push
and
in
shrb
push
cmp
pop
push
out
push
inc
js,pn
icebp
pop
adc
ret
add
fildl
pusha
adc
cmp
into
in
bound
add
rcrb
es
push
rolb
fcmovu
enter
mov
push
rolb
es
roll
or
add
adc
stc
pushf
lcall
and
jno
adc
rolb
ret
inc
mov
std
lock
test
jno
shrl
add
and
dec
repnz
add
inc
ljmp
sbb
mov
mov
sbb
adc
cmp
sbb
js
or
add
add
and
nop
adc
ljmp
cmp
dec
xor
mov
loope
dec
xor
lret
inc
push
popa
xor
and
fwait
and
jl
pop
je
push
js
ret
addb
ss
xchg
add
xor
in
lcall
sub
add
dec
test
mov
jge
and
ret
lds
mov
add
push
and
adc
data16
jg
add
lock
lcall
out
or
push
mov
rolb
push
mov
mov
cmp
add
lret
popa
mov
mov
xlat
and
and
adc
adc
or
push
sahf
fwait
repnz
jmp
add
inc
pusha
push
sahf
sbb
ret
cmc
incl
inc
pop
pop
dec
cs
mov
and
lock
dec
pop
jo
dec
rorb
jo
cli
scas
mov
and
test
cwtl
mov
add
adc
add
mov
add
or
push
adc
and
mov
mov
jl
pusha
sbb
push
inc
xor
jo
xor
cli
mov
loop
dec
mov
js
shll
cld
movsl
inc
or
or
outsb
ret
and
lds
cwtl
push
adc
mov
jmp
scas
pushw
sbb
stos
rolb
inc
aad
sbb
cmp
aad
dec
mov
jo
or
push
push
loope
std
fwait
std
pop
add
mov
inc
push
sub
push
and
mov
sub
loope
xchg
movsb
mov
movsl
xor
push
scas
push
jmp
sbb
pop
mov
and
mov
mov
xor
cs
jle
jo
lods
fwait
sahf
and
inc
jg
aas
pop
dec
cld
xchg
add
mov
dec
mov
notb
nop
inc
cs
fldl
clc
rcrb
movsl
fnsave
or
outsl
xor
and
inc
adc
and
movsl
add
pusha
sar
push
ds
mov
mov
andb
xor
popf
and
inc
inc
rclb
scas
scas
adc
or
mov
sub
test
mov
and
push
data16
jno
dec
jge
inc
xor
cmp
aad
adc
shr
lock
xor
testb
adc
inc
dec
push
push
test
in
pop
sbb
add
fisttps
inc
hlt
rorl
movsl
push
ds
push
cld
pop
cmp
mov
jge
loopne
and
jg
shll
js
add
bound
idivb
mov
sbb
jns
lea
add
dec
mov
add
add
ljmp
fstpl
cltd
cmp
insb
jno
add
movsb
sbbb
jg
and
inc
xchg
mov
inc
or
bound
out
adc
stos
ljmp
cmp
loope
mov
enter
lock
leave
pop
mov
mov
leave
jno
push
mov
pop
subb
pusha
add
push
inc
adc
lcall
dec
add
xor
push
shlb
icebp
push
hlt
cmp
cmp
push
mov
shlb
or
lcall
sbb
jg
mov
popf
mov
mov
clc
adc
pusha
out
pop
mov
xlat
pop
pop
shl
jbe
out
aam
or
scas
mov
into
orb
ja
push
les
inc
and
jne
call
xor
sbb
sub
or
and
cmp
adc
repnz
jmp
ret
pop
cs
push
mov
incb
fsubrl
es
add
sbb
roll
test
jo
and
add
mov
ret
in
stos
or
cmp
jbe
jmp
rorb
adc
int3
iret
cmp
dec
mov
pusha
mov
mov
je
lock
dec
sub
and
xchg
cmp
fsubrp
mov
shrb
out
gs
or
push
imul
movb
cwtl
enter
cmpb
mov
or
or
add
test
adc
clc
push
out
sbb
push
jns
inc
dec
dec
add
jne
dec
push
fiaddl
push
or
adc
push
in
add
dec
add
push
movl
in
or
add
or
inc
lcall
sub
cmpsb
adc
sbb
xchg
or
popa
inc
jmp
fwait
or
mov
loope
jle
add
xor
and
popf
cmpsl
add
cld
and
adc
sbb
je
add
cmp
dec
add
test
loop
cmp
mov
push
das
js
pop
pop
cmpb
mov
or
loop
add
leave
mov
adc
bswap
or
inc
fwait
rorl
and
mov
cmp
ljmp
in
lods
or
adc
xor
clc
ja
andb
mov
push
dec
pushf
int3
add
movd
inc
xchg
mov
jmp
pusha
idiv
push
mov
repnz
inc
inc
jb
subb
add
push
and
in
adcl
es
addb
popf
orb
add
lahf
rolb
fisttpl
mov
mov
orl
cmp
jns
pop
call
xorl
clc
and
push
mov
inc
sbb
das
or
or
sarb
sarl
cmp
push
or
xorl
adc
dec
repnz
insl
xchg
pop
mov
or
push
scas
sbb
cwtl
lock
ret
gs
mov
add
jg
filds
add
xor
pop
add
pop
jl
ljmp
inc
in
mov
inc
arpl
adc
decb
shlb
vphaddbq
cwtl
cmp
mov
pop
inc
fs
arpl
arpl
add
xchg
lcall
sahf
jg
es
inc
xchg
insl
or
inc
clts
arpl
ljmp
dec
fcoml
or
or
ret
sub
add
mov
popa
pushl
or
test
add
inc
jl
adcb
inc
inc
add
out
inc
pop
sbb
xchg
and
inc
or
add
rolb
jo
push
and
mov
fldcw
mov
ret
fsts
addl
add
iret
cmp
out
pop
out
inc
fstps
inc
inc
fld
pusha
pop
inc
jle
movsl
adc
leave
inc
and
incb
test
inc
dec
rolb
sub
pusha
rolb
jae
adc
add
xor
inc
shl
es
add
and
nop
fimuls
addb
add
call
lcall
push
add
xchg
pop
es
mov
addb
xchg
dec
or
adc
and
ss
jno
mov
push
iret
and
cmp
add
incl
pusha
subb
push
aaa
and
aam
inc
mov
lock
or
andl
mov
mov
sub
cwtl
add
es
mov
in
lods
mov
adc
roll
in
dec
roll
lods
into
add
adc
ret
adc
loopne
inc
adc
adc
pop
inc
add
mov
push
add
ljmp
adc
pop
es
fwait
add
add
and
jg
xorb
or
out
inc
notb
loopne
fistpll
mov
cmp
es
mov
dec
mov
pop
loope
inc
mov
add
inc
add
fwait
incb
mov
add
xor
sub
add
call
bound
or
add
pop
mov
add
adc
rorb
aam
inc
shlb
xor
inc
xor
inc
test
lret
and
add
inc
cmp
mov
loopne
xor
mov
aas
jmp
sbbl
gs
lret
mov
vpunpckhwd
xchg
enter
and
inc
mov
cmp
push
loopne
notb
js
loope
inc
mov
add
aam
lcall
ret
aad
pop
dec
sub
inc
fldl
aad
adc
push
lcall
and
outsb
shll
mov
pusha
push
loopne
dec
push
loopne
inc
pusha
int
and
and
test
pop
pop
js
or
and
mov
movsb
or
in
add
sbb
ljmp
nop
or
and
call
loop
fldl
jmp
inc
popf
push
or
add
pushl
rolb
ds
pop
loopne
push
push
mov
mov
add
rolb
lods
push
mov
leave
sub
jno
es
lock
mov
add
xor
pushf
add
sbb
fcmovnbe
jb
add
push
fnsave
nop
imul
scas
imul
outsl
dec
push
add
test
or
fld
jle
call
addb
test
dec
les
es
data16
xchg
dec
cwtl
cmp
decl
flds
dec
push
out
in
fildll
inc
out
sahf
leave
xor
mov
dec
inc
mov
mov
xchg
mov
dec
lea
dec
and
cmp
push
clc
jg
inc
je
inc
shlb
dec
push
mov
test
push
dec
push
jge
lods
loopne
dec
sub
adc
inc
lock
out
adc
xor
ljmp
cmp
and
shlb
xlat
lock
add
pop
sub
dec
mov
into
add
add
sbb
iret
mov
adc
nop
adc
add
push
into
mov
push
in
inc
stos
dec
pop
mov
loopne
pushf
shlb
sarl
adc
mov
es
clc
aad
adc
cmp
fdiv
fwait
pop
fildll
mov
rolb
adc
aam
sar
cmpsb
ljmp
or
push
jo
addb
and
fidivrs
inc
mov
into
mov
adc
es
cli
das
xchg
and
cmc
roll
ret
push
mov
or
es
and
push
dec
inc
rolb
xor
addl
mov
addl
int3
es
mov
mov
pop
push
sbb
decl
fstpl
inc
add
test
or
adc
cld
call
xlat
add
rorl
add
sub
mov
or
and
add
cmp
and
sti
fcomip
scas
aam
loop
mov
call
out
stos
push
push
add
arpl
outsl
call
and
adc
sbb
or
pop
mov
xor
or
push
ret
push
cmpsb
mov
push
cmp
ds
add
push
pop
mov
mov
push
in
fbstp
int3
push
or
and
jo
fdivp
adc
fwait
xchg
idiv
insl
xchg
decb
or
inc
jle
pop
sub
and
fwait
and
leave
inc
sub
cmp
mov
divb
enter
xor
ret
es
pop
cmovbe
add
sub
shlb
pop
push
jo
and
or
decl
adcb
dec
and
es
repz
xor
outsb
dec
lret
xor
orb
negb
mov
popf
sub
sub
or
test
out
push
les
xchg
int
pusha
cmpsl
cmp
mov
lcall
or
lds
leave
and
inc
jbe
add
push
mov
pop
in
pop
rolb
add
sub
and
hlt
add
add
aaa
std
jmp
ret
adc
push
add
and
inc
mov
or
lcall
dec
add
add
mov
sub
mov
dec
xchg
cmpsb
cld
jg
xchg
sarl
xor
sarb
lock
and
enter
in
popf
push
sub
aaa
add
add
mov
mov
inc
aas
adc
sbbb
aas
test
rorb
hlt
bound
and
or
nop
push
je
ret
mov
loopne
jp
sbb
into
inc
arpl
push
shrb
scas
insl
lock
popa
sub
push
dec
jl
outsl
fidivrl
dec
mov
add
push
dec
mov
add
and
dec
shrb
ja
push
add
pop
std
pusha
add
pop
ljmp
mov
xor
lock
adc
pop
addl
mov
cwtl
lock
pop
adc
or
cld
xchg
adc
adc
add
fistpl
or
adc
cmpsb
clc
mov
add
insl
dec
add
dec
adc
test
int
or
xchg
repnz
xor
or
or
shl
jo
add
and
add
push
or
sbb
rclb
and
add
adc
decl
icebp
mov
add
lock
xchg
push
or
dec
add
cmp
sahf
or
call
loopne
faddl
jo
and
push
into
xchg
ficoms
xor
daa
mov
aad
mov
enter
sar
aad
inc
test
cmp
inc
push
loopne
mov
das
cli
jae
dec
outsl
pusha
xor
add
iret
adc
cmp
loopne
lcall
mov
inc
jp
mov
or
cmpsl
and
jo
into
nop
cmp
mov
push
mov
inc
into
inc
xor
add
add
dec
rcrb
mov
add
add
inc
jmp
fucom
push
in
add
xchg
add
mov
lret
out
fsubrs
adc
in
loopne
adc
in
scas
inc
lret
mov
popa
sahf
fdivrs
dec
or
mov
mov
jl
add
sbb
test
clc
add
in
xor
mov
adc
add
roll
add
in
decl
sub
push
mov
das
adc
add
mov
mov
pop
add
incb
sti
lods
mov
stos
add
lcall
cld
lods
into
inc
mov
inc
sbb
jb
lods
out
lcall
sbb
int
daa
sub
data16
lcall
cmc
pusha
and
or
das
pop
das
push
fucom
pop
add
jp
out
push
mov
inc
sub
mov
into
mov
ss
imul
andb
adc
pop
sbb
fdivrp
add
fxch
inc
add
add
fldcw
add
iret
add
inc
push
mov
mov
testl
fs
dec
xor
pusha
test
ljmp
fsubl
sbb
push
negl
ljmp
cmp
aas
add
pop
mov
ljmp
sbbl
lds
cmp
fs
pusha
pop
push
add
call
jg
hlt
fwait
inc
arpl
lods
adcb
inc
lock
sar
xorl
xor
fidivs
push
sbb
push
pop
and
jl
or
push
sbb
adc
cli
call
mov
orb
call
call
mov
xlat
pushf
mov
ficomps
pusha
add
or
pop
stos
mov
pop
xchg
dec
repnz
vunpckhps
push
sbb
xor
sub
sub
aam
sbb
aas
adc
pushf
sbb
clc
pop
adc
mov
xchg
dec
sbb
dec
adcb
pop
ficomps
and
rorl
dec
xor
xchg
xorb
mov
mov
jge
cmpl
pusha
add
mov
mov
xor
and
push
or
daa
adc
mov
sbb
call
cmp
xor
les
adc
and
or
add
inc
xorl
or
cmc
and
fdivrp
stos
rcll
rol
and
xchg
xchg
add
cltd
push
orb
and
adc
ret
xchg
dec
mov
mov
jb
movsb
push
add
push
add
push
cmp
lock
notb
fists
and
fmull
push
and
cmp
push
inc
push
addr16
stos
ffreep
cmp
imul
lret
push
mov
cmp
or
or
xlat
push
mulb
push
cld
jg
arpl
sbb
cmp
loopne
cmpl
popa
addb
mov
loop
or
ds
and
iret
xor
push
dec
fstpt
adc
push
sbb
mov
add
loopne
add
popa
popf
test
and
add
popa
insl
test
dec
and
lcall
sbb
xor
cltd
xor
andb
mov
movsb
fs
sub
enter
dec
es
add
inc
push
loopne
xchg
dec
test
clc
movsl
dec
pop
es
loopne
jle
cs
push
test
jae
sub
push
mov
ss
add
je
push
mov
add
adc
dec
mov
inc
stos
into
cs
dec
aaa
ss
adc
repnz
idivl
es
add
ret
test
pop
movsl
mov
orl
xchg
ss
mov
nop
sbb
jmp
inc
shll
and
xor
ret
call
out
in
in
filds
testl
mov
mov
fildl
ret
cwtl
mov
loope
jmp
iret
and
fwait
mov
pop
cli
rcrb
pop
pusha
add
xchg
pusha
jbe
ja
add
outsl
mov
mov
mov
orb
mov
add
or
mov
bound
mov
test
filds
scas
mov
and
orl
mov
mov
sub
fisubs
and
les
xchg
add
fisubrs
fwait
imul
sub
xor
es
sub
pushl
jns
fisttpll
add
push
add
in
or
hlt
add
outsl
xor
aas
rcrb
xchg
pusha
mov
sbb
sbb
idiv
fists
add
mov
adc
insb
inc
pop
jo
push
dec
inc
aaa
add
push
and
cmp
inc
ljmp
in
xor
insb
inc
dec
pusha
adc
mov
add
cld
es
xor
mov
xor
mul
pop
xchg
fdivs
shlb
mov
stc
rcr
dec
sub
mov
mov
adc
aam
mov
idivb
fstpt
testb
and
and
dec
mov
fisttps
lods
pop
sarl
xchg
insb
dec
dec
pop
push
cwtl
ljmp
mov
inc
pop
mov
pop
pop
movsb
dec
add
test
in
dec
add
inc
add
inc
add
stc
dec
ljmp
es
mov
sub
pop
adc
inc
cmpsb
mov
pop
xor
mov
aaa
adc
aaa
mov
in
fstps
call
lcall
inc
xchg
add
xor
add
shll
notb
mov
testl
mov
mov
mov
sub
es
add
jmp
inc
adc
movsb
rcll
sub
push
out
jo
pop
pop
dec
in
lcall
int3
xchg
ret
lds
into
adc
jl
or
add
cmp
cli
inc
shlb
lock
loopne
mov
cmp
es
jno
rol
fldt
pop
pop
cmp
xorl
sub
jl
or
and
sbb
xchg
xor
xchg
lds
xchg
sbb
rcr
incl
and
mov
lds
inc
add
cmp
add
jo
inc
jbe
sbb
cmpsb
aam
fcompl
or
adc
or
or
fmuls
nop
cmp
fcoml
in
bound
sarb
pop
pop
and
mov
and
or
pop
shlb
je
add
in
xchg
insb
stos
lock
cmp
adc
add
cmp
outsl
add
dec
jno
mov
frstor
xchg
dec
mov
mov
adc
push
adc
mov
sbb
mov
xor
add
shrl
xor
mov
xor
and
mov
xor
fistl
jno
ss
insl
loopne
or
cmpsb
jne
pusha
mov
push
xor
push
pop
insl
cs
mov
xchg
mov
scas
ljmp
adc
leave
adc
rol
inc
mov
lret
ret
and
into
xor
push
sbb
pop
lock
ficoml
into
add
decb
mov
xor
and
fstpt
pop
add
addb
xor
mov
ljmp
fisubrl
lret
or
xchg
repnz
mov
into
sbb
ljmp
call
mov
mov
subb
ret
and
dec
cltd
loope
xor
jnp
inc
mov
jmp
or
sbb
push
mov
js
ret
dec
mov
inc
xor
data16
fwait
mov
push
insb
xor
movl
js
add
scas
cli
shlb
rolb
sbb
pop
pop
mov
ret
mov
cmpsl
or
cmpsb
or
and
enter
add
add
adc
push
inc
adc
ja
imul
or
adc
into
js
ljmp
sbb
add
xor
rorb
mov
sarl
sbb
fadds
xchg
push
ljmp
xor
daa
test
call
mov
dec
jae
rcrb
and
decl
pop
and
inc
pop
mov
popf
adc
popa
mov
xlat
lock
and
push
es
iret
add
add
cmc
push
add
adc
adc
jl
roll
cmp
jo
je
add
lea
adc
sbb
or
cld
or
add
lds
das
leave
push
es
pop
pusha
aas
pop
inc
cltd
movsb
mov
inc
out
sbb
add
add
dec
out
in
adc
out
add
lock
add
add
and
scas
inc
and
or
lods
jle
int3
adc
mov
or
inc
repnz
adc
mov
cmp
lret
mov
pop
shlb
sub
mov
inc
jg
mov
ljmp
jne
add
sub
adc
mov
or
mov
iret
inc
fxch
inc
orb
leave
inc
add
mov
fucom
mov
ret
inc
inc
lds
inc
inc
dec
sbbb
pop
jbe
andl
sub
mov
dec
leave
adc
push
xchg
push
lock
addb
test
stos
xchg
test
cmc
es
push
add
mov
xchg
lret
sub
or
in
add
lods
iret
lahf
into
add
mov
loopne
fwait
add
nop
inc
icebp
faddl
idiv
mov
inc
mov
leave
adcl
pop
xor
clc
call
inc
jns
or
push
jecxz
sahf
andb
adc
clc
orb
and
pop
jmp
cltd
mov
ret
or
cmp
add
adc
or
push
mov
inc
mov
add
shlb
or
ret
inc
mov
ret
lock
movsb
jnp
inc
ss
addl
inc
in
je
xchg
push
call
or
test
into
lea
test
sbb
pop
push
push
sbb
lcall
loopne
mov
dec
xor
push
mov
mov
inc
add
stos
stos
ds
jbe
pop
aam
adc
dec
inc
sbb
retw
nop
xorb
xor
fdivs
fldl
insb
add
mov
or
xor
cmpsb
mov
inc
or
in
lcall
jo
adc
adc
mov
or
subl
cmp
mov
test
fs
scas
inc
incl
adc
and
mov
addl
and
add
mov
dec
mov
inc
fcoms
loopne
lea
sahf
sub
cmp
jle
mov
and
cld
or
lds
mov
ljmp
add
call
dec
mov
pop
gs
xor
sub
cmpb
sbb
insb
sbb
and
lret
xchg
cmp
hlt
mov
sub
inc
push
sub
sbbl
in
andb
cmpb
out
mov
pusha
mov
flds
es
or
add
mov
arpl
outsb
inc
subl
lcall
addl
scas
mov
rclb
inc
xchg
lock
aad
jg
mov
rclb
mov
mov
dec
jbe
jg
cwtl
sar
adc
inc
sbb
adc
stos
add
sar
insl
inc
stos
js
out
add
mov
sub
and
mov
call
or
add
or
ja
dec
data16
movsl
or
ret
and
inc
push
aam
clc
enter
shrl
mov
aaa
add
rcrl
cmp
pop
adc
xorb
test
and
rcl
add
in
or
aad
mov
add
or
add
add
add
push
mov
or
mov
inc
nop
adc
and
push
fstpt
and
insb
xchg
and
and
sub
pop
lock
adc
add
and
add
add
jb
add
mov
mov
ljmp
popf
es
inc
pop
sbb
add
push
and
xchg
mov
xor
and
cmpsb
mov
incl
adc
mov
pop
in
or
add
jg
repz
mov
fwait
mov
cwtl
test
shlb
mov
dec
push
je
push
and
sbb
mov
shlb
imul
inc
dec
jb
jo
icebp
mov
mov
mov
and
orb
mov
movsl
and
and
shl
add
inc
mov
imul
jo
dec
add
adc
adc
pop
jmp
fisubl
push
or
add
add
inc
mov
sbb
push
ret
add
add
dec
or
orb
xor
ret
mov
in
inc
ja
dec
and
faddl
inc
pop
insl
and
outsl
sarl
lock
addb
fs
dec
inc
mov
add
aaa
dec
add
fcompl
aam
push
or
mov
push
scas
ds
push
jle
mov
mov
xchg
pushf
mov
mov
mov
mov
add
clc
mov
sti
fbstp
mov
fsubr
mov
pop
test
or
dec
fdiv
add
roll
or
add
push
pop
jge
inc
test
out
data16
es
and
adc
es
cmc
jmp
mov
add
push
outsl
dec
jo
add
enter
adc
mov
imul
ret
fnsave
sbbb
insl
in
mov
mov
mov
push
add
push
fistl
xor
push
or
and
cmc
add
lods
adc
pop
mov
pusha
adc
push
lahf
pop
pop
or
adc
push
lods
mov
adc
add
popl
adc
imul
pop
adc
movsl
xchg
mov
push
add
sub
data16
into
pusha
fsubrl
shl
jl
repz
mov
mov
mov
ret
data16
adc
sbb
push
and
lcall
lea
lea
xor
sti
push
pop
inc
push
add
mov
lahf
mov
cmp
push
push
mov
mov
int
daa
push
xor
in
sub
in
pusha
add
xchg
xor
lock
add
jmp
inc
faddl
scas
xchg
push
and
mov
or
or
add
test
test
dec
inc
daa
adc
or
dec
adc
shr
in
outsb
pop
and
adc
out
out
and
inc
rcr
push
and
loopne
test
loop
test
stc
in
aad
lea
icebp
or
imulb
or
or
icebp
lock
xorb
xchg
fimull
ljmp
sbb
fbstp
push
shrb
xorb
mov
push
mov
mov
xor
and
les
add
pop
mul
dec
jp
mov
lea
add
fidivs
adc
add
add
push
sbb
cmc
add
sub
add
nop
lock
push
and
mov
sbb
xor
neg
add
cmp
cmp
push
jg
or
add
fsubr
icebp
add
nop
mov
or
sub
lods
inc
and
cmp
jge
jne
ss
psadbw
cld
test
mov
cs
cmp
push
mov
out
das
mov
sbbb
testb
jno
sbb
mov
adc
or
sub
pop
sub
in
dec
cmp
push
adc
aad
or
ljmp
ljmp
dec
lea
xchg
add
or
nop
add
sub
testb
jmp
es
xor
mov
inc
jne
aaa
or
fcmovbe
lahf
cmpsb
add
jl
fisttpl
lahf
mov
adc
adc
or
ljmp
lods
es
mov
out
es
jmp
lock
and
rcrl
out
add
sar
xlat
out
pop
andb
mov
test
or
shr
ds
in
add
cmp
into
or
in
fisttpll
stos
cld
pop
mov
push
inc
add
shll
or
enter
mov
cmp
push
jno
sub
dec
pop
mov
mov
push
add
xor
roll
les
or
fwait
sub
rorl
rcrl
test
push
jo
adc
inc
mov
nop
add
repnz
in
jg
rolb
lea
js
xor
cltd
xchg
add
mov
mov
inc
jo
in
xlat
aaa
mov
add
mov
ret
leave
push
cmpb
in
xchg
inc
jo
cwtl
dec
flds
shrb
push
adc
in
sub
push
inc
mov
and
sarl
out
enter
stos
mov
mov
test
popf
jp
push
insb
cmp
rol
jg
mov
cmc
and
xorl
rolb
xchg
jo
add
xor
or
mov
pusha
sbb
xor
cmp
mov
and
leave
sbb
push
dec
add
sbb
rcr
mov
pop
and
rorl
addl
ljmp
push
mov
shll
ds
lods
icebp
stos
push
sbb
lret
pop
loope
mov
cmpsl
adc
sub
sbbb
out
add
sub
lcall
outsb
push
xchg
cmp
testb
int3
cmpsb
xor
inc
mov
xchg
mov
xchg
push
add
adc
xor
inc
lock
add
leave
repnz
dec
push
mov
dec
mov
mov
int3
add
mov
mov
mov
adc
shll
add
adc
jne
out
rcrb
xor
pop
call
lret
fcoml
push
mov
sub
rorb
or
mov
bound
fsubs
sub
mov
adc
mov
sbb
mov
mov
inc
repz
add
dec
sub
and
adc
inc
adc
push
dec
outsb
sbb
inc
bound
add
fs
push
cld
inc
or
dec
xchg
pusha
xchg
mov
or
sub
bound
mov
mov
add
ds
xor
addb
lcall
xor
filds
xor
xor
js
cmp
icebp
add
inc
jmp
shlb
sar
cld
fwait
enter
dec
add
divb
testl
add
lods
es
aaa
mov
mull
mov
sbb
imul
push
adc
lock
or
clc
sub
jnp
inc
jo
push
adc
outsl
ljmp
and
mov
or
jbe
sbb
dec
adc
clc
adc
add
outsl
add
inc
xlat
inc
xchg
shll
xor
insb
add
movsl
fadds
adc
fsubr
incl
addb
push
insb
xorl
inc
inc
and
in
push
test
out
add
orb
sub
outsl
mov
push
or
or
fnstsw
rcrb
and
insb
and
popf
adc
add
cmp
cmpsb
pop
push
push
dec
mov
in
pop
add
leave
lock
mov
les
mov
xchg
adcl
cwtl
and
je
sbb
stos
out
lock
aad
pusha
or
mov
jb
jae
jo
jo
adc
push
mov
or
out
testb
lea
cli
das
mov
es
orl
or
lods
int3
test
pusha
insb
ss
lods
test
dec
push
xor
add
js
inc
dec
inc
fsubr
adcb
inc
lcall
push
pop
add
add
addl
hlt
cmp
push
lea
sub
sbb
sub
sub
cli
lock
addb
adc
negb
in
jg
inc
sbb
add
dec
or
es
mov
add
mov
int3
mov
mov
xchg
insb
inc
xchg
notb
mov
xor
mov
and
repz
fwait
orl
cmc
into
inc
cltd
add
inc
add
fcmovbe
adc
rcr
mov
cmp
inc
arpl
add
pop
jne
mov
mov
shlb
addr16
cli
sbb
ret
stos
loop
leave
mov
push
dec
test
and
cmovo
stos
xorb
faddl
sub
xchg
shl
aam
mov
test
rorl
inc
loope
inc
data16
inc
cmp
dec
in
and
stos
aam
sarb
jl
stos
mov
xor
cmp
adc
sbb
sar
xchg
clc
test
test
mov
sub
sbb
and
inc
and
lcall
inc
cmp
fbstp
dec
xor
inc
mov
xchg
js
into
popf
add
dec
shr
jmp
dec
or
add
add
push
cmp
pop
hlt
mov
movsb
push
hlt
shlb
and
notb
sbb
and
dec
ss
decb
xor
mov
add
call
in
neg
or
arpl
pushf
leave
mov
cmpsl
xor
dec
sahf
dec
lods
mov
nop
lcall
divb
add
xor
sahf
cmpsl
cmc
xchg
push
out
xchg
and
push
and
adc
push
and
add
inc
add
mov
xor
mov
outsl
movsb
icebp
inc
jb
push
pusha
pop
inc
or
cmpsl
fstps
ror
lods
add
and
sbbl
mov
ret
or
int
mov
out
add
and
in
jbe
test
mov
inc
or
or
xor
cmp
aaa
sbb
add
mov
pop
add
fwait
adc
mov
nop
add
inc
and
jne
jecxz
fldt
mov
jmp
push
inc
imul
enter
or
sbb
jg
inc
sbb
push
mov
movsl
pop
pusha
sbb
pusha
fsubs
mov
adc
mov
cmp
hlt
and
les
push
mov
mov
aaa
mov
mov
mov
push
lds
add
out
std
inc
mov
xchg
push
roll
add
push
leave
and
sub
fadds
mov
pop
push
fwait
adc
es
lds
in
subl
mov
cs
leave
mov
subb
stos
dec
mov
mov
pusha
in
je
roll
mov
mov
das
clc
fbstp
sub
inc
adc
inc
mov
popf
shl
or
decl
rcr
mov
inc
cmp
inc
test
clc
sub
lods
mov
mov
jo
adc
movsb
jo
sub
sub
dec
pusha
cwtl
mov
push
adc
mov
add
shrb
inc
add
lea
sbb
out
dec
xor
jp
mov
loope
pop
push
add
shll
xor
add
shl
dec
mov
or
inc
cwtl
adc
test
fucom
add
mov
sub
add
sub
adc
loop
mov
icebp
xor
jp
fldl
or
inc
push
leave
cmpsb
add
and
mov
popa
sarb
sahf
and
add
sbbb
xor
and
or
jl
inc
repnz
push
push
mov
mov
call
xchg
push
popf
loope
or
sub
dec
push
ss
xor
jg
mov
cmpb
push
lret
dec
jo
or
movsb
adc
nop
mov
or
fbld
cmpsb
jb
push
mov
outsb
mov
cmpsb
cwtl
mov
inc
addb
jge
int3
adc
sub
mov
ret
cs
call
es
ret
das
sahf
mov
and
mov
inc
leave
insb
push
in
xor
sbb
fisttps
mov
mov
or
add
adc
xchg
loopne
mov
cmc
cmp
lea
or
add
inc
stos
or
incl
adcb
mov
jecxz
xor
mov
mov
stos
inc
adc
test
sub
nop
add
push
out
dec
pusha
add
lcall
sbb
aaa
adc
xor
mov
xchg
add
clc
add
in
or
stos
mov
add
fldcw
lock
mov
inc
decl
loope
pushf
and
mov
lcall
rclb
or
fwait
dec
flds
jg
mov
push
push
add
jno
sbb
cmc
mov
les
ret
sbb
xchg
push
jo
int3
ficoml
stos
and
mov
out
pusha
sbb
lcall
push
push
stc
inc
push
fldl
jmp
dec
push
inc
fucomp
mov
arpl
rclb
mov
xor
push
inc
cmp
mov
dec
adc
push
sub
add
lock
lcall
lods
or
inc
fxch
shrb
rorl
or
sbb
mov
lahf
add
cmc
lahf
and
jbe
adc
xor
test
mov
adc
rclb
nop
xor
jg
and
int
or
test
call
inc
mov
xor
shlb
data16
inc
pop
rcr
decl
cmp
xor
push
nop
add
test
push
xor
xchg
pop
je
dec
mov
cmp
or
leave
mov
mov
ret
incl
xor
mov
add
cmp
or
cltd
nop
lret
lds
xor
divb
and
or
or
cmpsb
out
xchg
inc
jl
add
clc
fldl
lret
lea
inc
jo
xchg
pusha
pop
inc
xchg
mov
xorb
les
mov
ss
mov
push
add
sbb
or
mov
rolb
jb
and
popl
sub
dec
push
pop
addl
and
add
out
mov
xor
pop
push
mov
scas
add
push
lcall
inc
xchg
stc
add
lock
pop
add
add
ret
and
addl
pop
add
add
pop
add
scas
jo
xor
rorb
fwait
jae
decl
add
or
fisubl
rcrl
inc
jno
or
enter
js
add
pusha
add
inc
mov
add
popf
int3
sbb
pop
dec
fs
lea
push
imul
ret
or
jle
hlt
push
or
add
out
or
adc
push
popa
pop
adc
pop
std
push
test
out
incb
mov
test
mov
push
or
or
scas
shrb
xchg
scas
or
jo
ljmp
or
inc
call
stos
fidivrs
out
pusha
xor
xor
add
add
xchg
xchg
push
cmp
imul
shlb
and
inc
xchg
push
adc
std
stos
loop
adc
xchg
int3
cmpsl
lret
xchg
sub
bound
lock
or
inc
adcl
sub
cs
mov
test
xor
pop
lock
bound
lds
iret
xor
adc
popf
les
es
mov
fistl
cmpsl
stos
xor
mov
lock
lret
and
adc
into
or
xor
rcrb
ss
hlt
xchg
filds
xor
hlt
mov
and
ljmp
xchg
push
cwtl
inc
mov
inc
call
loopne
mulb
xchg
xor
add
fwait
testb
in
addl
aas
xor
mov
bound
call
inc
in
pop
xorb
inc
xor
inc
in
roll
adc
inc
lock
xor
push
pop
cmp
push
sbb
adc
les
inc
jecxz
xchg
andb
push
imul
adc
lds
push
fisttpll
inc
add
rolb
xchg
nop
xchg
mov
outsb
stos
jmp
nop
imul
lds
add
mov
add
and
fisttpll
test
push
or
loopne
and
sti
adc
add
jo
aam
xchg
jmp
ljmp
add
fmull
scas
movsb
dec
push
fwait
mov
ljmp
ret
inc
pop
lock
inc
lock
inc
add
add
outsl
hlt
inc
inc
or
fwait
jne
movsl
insb
jp
pop
je
sbb
mov
jne
shll
mov
fwait
push
fisttpll
mov
cmpsb
jbe
mov
loopne
mov
test
mov
adc
jo
xchg
inc
adc
xor
popf
out
fnstsw
test
jb
daa
nop
sbb
stc
sbbb
jb
sbb
add
cmc
in
xchg
lds
icebp
rclb
push
push
movsl
orl
jno
or
rolb
xlat
sbbb
sar
mov
adc
and
adc
jge
ds
shll
fdivs
inc
xor
push
loopne
aaa
std
pop
repnz
aam
leave
rclb
pushf
push
outsb
xor
testb
cmp
mov
shlb
std
adc
test
fldcw
arpl
hlt
rorl
inc
mov
and
shrb
add
mov
loope
xor
and
inc
rolb
out
xchg
pop
clc
push
jo
lcall
fsubrl
sbb
push
push
push
and
mov
mov
movb
cmp
adc
testb
lcall
int3
or
mov
aad
mov
mov
push
and
adc
out
fcompp
push
mov
sub
rorl
rcll
je
sbb
mov
xchg
xchg
les
lds
xchg
sarl
adc
sbb
pop
xor
add
add
sahf
mov
cs
sub
cmp
and
mov
or
and
push
mov
dec
or
inc
sbb
add
iret
aam
add
gs
cmpsb
test
mov
int3
mov
fstpt
adc
xor
adcb
push
mov
add
pop
out
jmp
loopne
inc
mov
cmp
aas
and
popa
jnp
fiadds
inc
dec
push
int3
cli
stos
push
shrb
repz
xchg
and
lcall
inc
nop
sahf
rcr
comiss
inc
adc
xchg
popf
sti
pop
inc
jecxz
fsubrs
inc
and
int
stos
add
lea
cltd
xchg
add
mov
cwtl
or
sbb
ljmp
or
mov
ffree
inc
inc
rcrl
jb
cmp
or
das
inc
add
or
and
mov
addl
and
mov
mov
mov
sbbb
mov
sbb
add
sbb
out
adcb
fdivrl
xor
subb
adcb
fdivrs
sub
mov
pop
call
aaa
cmp
aam
cmp
aad
cmp
mov
add
imul
insl
adc
mov
add
mov
add
insb
test
mov
cltd
ljmp
imul
xchg
add
xchg
pop
xchg
mov
jg
hlt
push
push
inc
mov
xchg
inc
rorb
inc
push
popf
jne
aas
and
test
inc
ret
enter
push
inc
push
addb
jbe
cmpl
jb
cmpb
or
mov
lds
sarb
cmp
es
sub
and
dec
mov
mov
pop
subb
inc
mov
add
rcrb
xor
dec
mov
dec
xor
sub
cmpsl
les
lock
or
dec
ss
xor
push
push
cmp
mov
movsb
pop
test
addb
call
xchg
nop
movb
jle
sar
add
cmp
xorl
dec
repz
add
pop
adcb
mov
leave
inc
dec
sbb
push
das
mov
roll
addb
test
xor
inc
outsb
or
fisttps
pop
sbb
roll
subb
add
mov
loop
shlb
inc
js
cmp
push
inc
lds
das
orl
adc
mov
sub
push
adc
mov
dec
or
inc
or
sarb
or
test
orl
mov
xor
add
and
inc
push
inc
popl
enter
lods
inc
jecxz
xchg
adc
and
inc
fimull
nop
inc
test
push
cbtw
inc
pop
add
or
dec
add
int
push
cltd
add
test
lret
test
je
push
pop
adc
lods
imul
or
mov
fwait
jo
andb
in
mov
adc
cmp
xchg
mov
lret
into
mov
cmc
test
pusha
aaa
pop
and
or
icebp
aaa
mov
nop
sbb
cmp
es
add
adc
stc
or
test
or
andb
xchg
cs
mov
fldcw
shll
mov
insb
jecxz
in
cwtl
mov
loope
std
cld
push
imul
loope
and
test
bound
or
or
out
cmp
add
inc
ret
loopne
cltd
add
test
cltd
adc
lahf
ljmp
xchg
inc
xchg
mov
sahf
and
aad
push
mov
loopne
cmc
mov
jbe
rclb
jbe
les
roll
out
movb
cmpsb
addb
mov
inc
and
inc
dec
and
add
in
xor
lcall
insl
or
pop
and
cmpsl
xchg
or
push
xchg
add
ja
adc
pop
hlt
jnp
sub
xor
ret
mov
sub
cmc
orb
leave
fldl
inc
or
adc
ljmp
and
xor
add
adcb
hlt
push
sbb
sar
add
in
inc
dec
add
and
ret
movsl
inc
add
jbe
pop
movsl
pop
push
sub
xchg
mov
xchg
adc
mov
in
and
jbe
shlb
es
inc
adc
mov
mov
sub
add
outsb
inc
mov
or
sub
mov
jl
in
inc
orb
add
inc
nop
sub
mov
mov
call
call
cmpsb
int3
ss
rorb
imul
add
lcall
dec
or
adc
adc
je
mov
incl
inc
cli
and
xor
push
shl
nop
sahf
stc
divb
sub
or
and
jle
mov
int3
scas
jne
pop
mov
in
test
mov
and
sbb
add
pop
iret
lds
shl
stos
add
mov
int3
jae
loope
fwait
loopne
sub
sbb
adc
sbb
push
in
fcomps
cli
push
pop
fwait
inc
hlt
shrd
fiaddl
testb
and
ret
pop
roll
int
clc
and
rorl
loopne
mov
pop
decl
orb
mov
int3
sub
test
das
xchg
andb
rolb
test
cwtl
rorb
add
push
sub
movsl
or
push
cmp
or
dec
aas
and
cmp
pusha
or
inc
call
inc
aam
jbe
inc
adc
stos
mov
and
mov
xchg
add
hlt
pushl
jl
push
xor
xor
mov
push
mov
cmpb
push
pop
pusha
add
or
pusha
sar
loopne
in
or
gs
jmp
and
xchg
inc
cmp
mov
addb
fisubrs
inc
bound
xor
or
addl
les
cmpsb
xchg
adc
inc
mov
sub
mov
dec
popf
out
inc
es
mov
mov
jne
and
cmp
sbb
hlt
mov
ret
loope
scas
and
inc
sahf
aad
mov
adc
adc
int3
mov
ret
lock
cmp
outsb
add
bound
push
fsts
sarl
movsb
mov
mov
cs
xchg
add
repnz
fistl
outsl
scas
or
cwtl
movsl
sub
into
mov
outsl
fcomps
es
push
fstpl
mov
and
or
lret
push
push
lcall
cmp
int3
mov
mov
and
dec
repnz
fmull
es
fisubs
imul
cli
push
shrb
loopne
or
add
add
inc
add
pushf
out
mov
fisttps
cmp
adc
push
lcall
sti
fs
push
sub
sbb
add
cmp
add
dec
jmp
mov
sbb
hlt
lods
push
adc
cmp
mov
sbb
pushf
lds
or
or
jg
movsl
push
nop
or
int
loope
shll
fwait
lea
add
rolb
lret
icebp
das
jb
and
cmpsl
shl
push
push
mov
adc
xchg
popf
adc
rclb
std
rcr
cs
in
stos
fs
push
xchg
loope
push
notl
jno
fisttpll
and
or
popa
add
adc
nop
add
and
mov
add
mov
cmp
popa
add
lea
push
push
add
mov
cmp
dec
xor
ljmp
push
sbb
loopne
addl
jle
popa
ds
lock
push
dec
shlb
mov
xchg
pop
add
scas
out
movsl
mov
loop
sbb
sbb
iret
mov
addb
dec
add
push
sub
xor
ret
int3
add
cmp
mov
ljmp
das
mov
into
and
sti
mov
push
push
std
xor
jl
and
cld
lcall
movsb
imul
lock
rclb
xor
imul
pop
stos
test
mov
incl
loope
fwait
push
pop
and
xchg
and
clc
mov
pop
lcall
sbbb
dec
or
sub
shrb
adc
cmp
add
xor
fidivl
fildll
jb
dec
lock
sub
lock
ret
add
mov
sbb
xchg
add
adc
push
and
pop
xchg
ret
sub
pop
and
push
std
fldenv
add
lret
mov
xchg
test
adc
scas
ja
mov
lret
rol
bound
adc
ffree
fwait
push
insl
or
mov
es
add
and
adc
mov
xor
or
and
sub
es
push
pop
lock
lcall
mov
sarl
mov
or
push
in
sub
add
in
jmp
and
add
pop
and
sarb
incl
mov
frstor
jge
pop
jo
pop
sbb
mov
movsl
and
bound
xchg
es
cmpl
cltd
mov
push
or
pop
mov
jo
push
lcall
popf
rclb
nop
xor
lods
lds
nop
adc
xrstor
outsb
add
les
xor
xor
lock
xor
andl
fwait
push
roll
jg
cmpsl
in
mov
fadd
xchg
xor
mov
and
in
pop
es
adc
negl
push
idivb
shl
js
jmp
jo
add
decl
or
rolb
faddl
pusha
jle
inc
push
cmpsb
shrb
xor
roll
lds
fmul
and
cmp
adc
je
jle
fmuls
or
inc
jb
scas
and
dec
or
mov
idivb
insl
add
orl
adc
or
and
or
xor
push
fbld
push
mov
or
sbb
xor
nop
pop
fcoms
mov
adc
and
add
xor
enter
push
push
and
test
adc
aas
add
lods
fs
or
rorb
out
adc
and
adc
xor
lock
mov
stos
push
mov
ftst
insb
rcr
dec
or
pop
int3
inc
and
nop
pop
pusha
xchg
xchg
fsts
sbbb
sti
pushl
das
and
jno
xchg
sbb
xchg
aam
popf
int
or
lock
iret
nop
pop
mov
insb
and
sub
in
mov
add
pop
sbb
popa
ss
test
xchg
xchg
xchg
into
enter
mov
xchg
out
mov
lret
inc
lea
jmp
mov
and
adc
rolb
dec
pop
or
xchg
sbbb
add
mov
rorb
xor
mov
cmp
mov
ficompl
popa
adc
inc
add
add
pop
add
add
dec
js
test
cmp
pop
jp
xchg
and
or
adc
ljmp
adc
jbe
cmp
or
pop
xorb
pop
mov
push
out
mov
xor
jecxz
adc
mov
ds
mov
and
push
pop
add
add
add
add
jl
lock
nop
cmpsl
and
mov
dec
fimuls
add
fsubrl
mov
or
push
inc
dec
xor
fcom
fwait
mov
xor
mov
cmp
adc
out
jo
or
pushf
sub
sub
and
cld
andl
mov
cwtl
sbb
and
and
orb
or
sub
lret
sub
mov
inc
cltd
mov
lcall
add
or
cli
mov
mov
popf
orb
add
lret
add
or
ja
inc
pop
and
pop
nop
pop
sbb
pextrw
add
dec
and
je
gs
dec
je
xorb
js
mov
subb
insb
test
idiv
adcb
xchg
dec
fwait
lods
push
or
movsl
push
xorb
mov
push
cld
pop
jno
scas
ss
test
in
ret
and
sbb
dec
cmp
hlt
nop
adc
push
add
inc
stc
push
loop
outsb
aam
rcrb
movsl
mov
or
inc
test
fildl
inc
mov
and
ss
add
pop
adc
mov
je
pop
shll
js
into
lcall
fisttpll
fwait
mov
adc
mov
lcall
sub
mov
mov
fs
or
nop
cmp
fwait
popf
ljmp
add
sub
inc
pop
adc
push
mov
fildl
ss
mov
lret
xchg
inc
loop
lcall
cwtl
inc
inc
or
push
sbb
pop
cmc
push
in
push
push
ds
fwait
loope
mov
loope
pop
sbb
pop
sub
idiv
fidivrs
add
dec
cmc
add
xorl
test
push
sbb
mov
outsl
and
data16
jl
xchg
fmuls
ss
jecxz
mov
pop
xor
insb
add
pop
or
pop
sub
sbb
add
dec
jle
mov
call
outsl
dec
pop
out
jno
add
ds
jns
adc
lock
adc
mov
roll
pop
xchg
push
xchg
andl
add
adc
incl
out
pusha
mov
lcall
in
dec
cmc
pushf
lcall
cmp
decb
pop
mov
inc
cmp
in
jns
mov
fwait
shll
push
mov
or
shrb
cs
push
fnsave
les
pop
push
mov
rorb
dec
in
add
sbb
or
add
in
push
cld
inc
ljmp
test
insb
stos
pop
dec
jmp
add
push
xor
shlb
mov
sahf
movsl
xorb
jle
push
arpl
or
mov
push
dec
push
or
testb
mov
jo
cmc
or
cmp
cmc
lds
ret
outsb
loope
add
loopne
hlt
or
mov
cmp
jne
nop
rcrl
jne
aad
pushf
add
xor
je
rcll
mov
adc
sub
pop
sahf
cmp
add
bound
cmp
pushf
insb
outsl
cld
add
add
inc
sbb
pop
popf
pop
aam
inc
cmp
pop
daa
test
pusha
jg
jo
mov
outsb
icebp
ffree
jg
inc
adc
push
ret
dec
nop
adc
and
sbb
mov
pop
push
and
push
rcrb
dec
inc
push
dec
xor
cmp
dec
loopne
xor
popa
inc
rorl
mov
sbb
jb
insl
inc
xchg
rorl
and
push
inc
es
ret
add
out
outsb
stos
add
ds
and
adc
fistpll
leave
test
iret
inc
adc
mov
mov
mov
and
cmp
lds
push
fistpll
inc
idivb
pusha
xor
or
and
add
rol
push
xchg
movsb
xor
outsl
push
push
pop
nop
xchg
mov
lods
sub
loop
mov
lcall
add
daa
mulb
xchg
rorb
pop
mov
je
shr
shlb
movsl
add
pop
rolb
loop
sbbl
loopne
sbbb
jbe
pop
adc
push
ljmp
sbb
test
mov
add
fadds
xor
mov
add
jge
mov
mov
ss
lahf
inc
cwtl
xor
cmp
xchg
and
orl
repz
add
and
inc
roll
cmpb
adc
cmpl
frstor
jnp
cld
dec
popa
mov
outsl
fildll
mov
add
inc
xchg
and
sbb
or
jbe
dec
xchg
sub
add
sti
decl
mov
lds
inc
rorb
pop
shrb
add
mov
enter
or
mov
sub
xor
mov
test
ret
or
ret
stos
lock
in
clc
std
mov
out
jp
mov
enter
or
xchg
into
sbb
test
stos
hlt
sub
incl
inc
mov
in
and
xchg
enter
jge
add
es
add
and
dec
bswap
or
into
dec
add
int3
inc
cli
xchg
orb
ljmp
push
mov
push
sub
pusha
and
cmp
pop
int3
add
mov
adc
xor
mulb
ret
sar
xchg
or
inc
lret
xchg
lcall
adc
cld
adc
shll
and
push
and
mov
mov
idivb
test
mov
sbb
mov
incl
mov
mov
nop
addl
inc
or
or
or
adc
aam
mov
mov
shlb
sahf
rorl
fcomi
add
xor
call
addb
jg
mov
inc
pushf
sbbb
or
push
cmp
pusha
sbb
mov
arpl
fimuls
or
dec
cmc
push
push
mov
inc
inc
xchg
in
add
add
add
mov
xchg
and
test
add
subb
mov
into
sahf
lret
xchg
or
sub
pusha
sbb
movsb
xor
or
sbb
mov
mov
dec
or
add
std
inc
pop
lods
push
push
jbe
scas
push
or
rcr
mov
inc
fsubrs
adc
cmp
mov
inc
ret
or
bound
sbb
das
xchg
out
pop
cmpsl
les
loopne
std
pop
lret
dec
or
std
stos
into
aas
mov
sub
add
sbb
shll
add
inc
cld
stos
mov
inc
pushf
iret
xchg
push
mov
and
add
outsb
decl
ja
lds
or
adc
add
sbb
add
and
ror
and
push
mov
add
loop
add
les
pop
cli
dec
jecxz
clc
add
push
bound
or
sarl
pop
fdiv
cmp
xor
daa
ret
ret
or
int3
inc
add
mov
cmp
add
lock
mov
mov
dec
sbb
das
dec
xor
sbb
push
mov
push
test
pusha
add
jp
push
in
nop
adc
mov
sti
sbb
lock
aam
call
xor
add
adc
hlt
sub
or
lds
lret
sti
sbb
adc
shl
sub
mov
fmulp
adc
jbe
out
pushl
add
jmp
or
push
and
pop
imul
fwait
ret
outsl
xchg
les
cmp
leave
mov
jbe
pop
push
jno
and
test
lcall
and
fcmovne
add
test
and
sarl
cld
mov
mov
and
sbb
je
xchg
inc
adc
add
out
mov
add
add
rolb
mov
stc
add
es
rclb
enter
mov
dec
or
mov
lret
push
decl
int3
jle
mov
ja
mov
cmp
clc
leave
xchg
or
xchg
lret
scas
and
push
pop
push
add
ror
rcr
lret
call
idivb
dec
xor
pop
and
dec
jp
inc
add
outsb
xor
pop
arpl
mov
mov
pop
xor
lea
pop
out
lea
test
lods
mov
and
sub
lock
mov
jb
xchg
xor
data16
push
xlat
sahf
add
pusha
outsl
inc
imul
inc
les
pusha
mov
and
decb
roll
inc
mov
mov
mov
pop
rcrl
adc
lahf
pop
or
loopne
mov
dec
cli
dec
xor
lds
inc
jmp
jo
fdiv
outsl
push
out
inc
icebp
ljmp
pop
mov
inc
add
negl
xor
mov
or
xor
rcll
pop
je
push
or
std
sarb
add
roll
ds
dec
inc
xor
inc
xor
or
cmp
adcl
inc
or
inc
sbb
mov
outsl
js
call
or
or
adc
cli
mov
jg
les
mov
mov
mov
add
ret
push
or
mov
dec
ss
adc
pusha
xor
stc
inc
ret
xchg
add
jg
pusha
mov
mov
push
adc
adc
add
cmc
sarb
inc
or
push
mov
mov
or
sbb
adc
sub
addb
scas
xor
fisubs
lds
lahf
mov
inc
push
lock
lods
mull
test
or
push
int3
or
xchg
shl
test
dec
scas
add
jbe
lock
or
pusha
or
cli
call
inc
inc
push
add
and
cld
pushl
mov
and
mov
ret
dec
sbb
lds
sbb
dec
lods
inc
and
lods
xor
lods
mov
add
xor
xor
ja
fimull
scas
nop
jae
sysenter
and
or
mov
mov
adc
mov
mov
loop
hlt
fidivrl
sar
inc
adc
es
mov
iret
xor
jo
cmp
je
adc
xorb
push
dec
pusha
iret
lods
adc
mov
adc
les
mov
and
incl
adc
rcll
sub
jmp
inc
nop
add
ljmp
and
and
int3
cs
mov
pushf
ret
inc
clc
dec
icebp
sub
sub
or
stos
sbb
pop
fsubrs
or
mov
shll
rcrb
jp
loope
adc
inc
jg
add
xchg
pop
repnz
xor
xorl
cmp
or
xchg
xor
or
jo
add
xchg
xor
mov
pop
mov
mov
add
out
shll
std
or
jb
and
into
mov
add
ret
add
push
add
push
call
mov
sub
lds
filds
push
push
jo
and
dec
sbb
mov
mov
test
xchg
pop
pop
stos
adc
cmp
dec
cs
aam
cmp
mov
add
ds
xchg
sbb
pushf
pop
add
or
inc
add
adc
and
and
std
pop
sar
insl
mov
inc
lret
jae
ret
out
cld
adc
add
pushf
mov
add
hlt
loopne
mov
call
je
mov
add
jno
dec
shl
aas
xor
add
rclb
mov
sub
fsubrs
shl
ds
inc
and
push
out
aas
xor
and
push
or
cmc
xchg
rcr
sbb
push
sarb
insl
sbb
mov
mov
add
or
inc
in
js
cwtl
sbbb
cld
out
sbb
sub
push
es
mov
push
call
push
shrb
aam
and
add
adc
aas
cmpsb
iret
add
pusha
dec
js
mov
xor
pop
mov
aas
and
cmp
push
lds
imulb
dec
fucomip
inc
adc
inc
inc
aaa
pop
xor
adc
ret
pushf
jle
xor
ret
inc
mov
add
cwtl
and
mov
imul
jp
pusha
nop
or
loope
mov
repz
xor
outsl
movsb
mov
orl
inc
loopne
sub
adc
adc
test
mov
jl
and
mov
add
lods
add
or
sldt
jge
add
stos
inc
adcb
adcb
xor
add
inc
es
jb
adc
mov
inc
and
pop
and
mov
xor
push
rolb
xorb
sahf
in
repz
iret
and
add
add
add
adc
fwait
scas
aam
push
rcr
xor
mov
outsl
out
shlb
fs
pushw
out
adcb
or
push
ss
jle
mov
push
adc
inc
sub
insb
pop
addb
and
add
xor
push
mov
dec
clc
lcall
xor
mov
shl
xchg
mov
add
add
mov
popf
xor
sub
cmpsb
add
inc
xorl
pop
or
or
xor
add
into
out
into
adc
lods
or
mov
mov
or
stos
les
or
add
add
add
aad
or
movsb
call
jmp
movb
int3
icebp
mov
mov
add
inc
sbb
add
mov
push
cmp
mov
lret
movl
inc
ret
inc
pop
pop
push
jo
lret
rcr
lcall
cmpsl
add
add
popf
and
and
adc
mov
mov
mov
test
mov
jo
jae
dec
clc
pop
cmp
divb
mov
xchg
aad
jo
and
aad
sbb
pop
sete
into
add
sbb
mov
inc
and
ret
cltd
xchg
sbb
and
inc
rcrl
not
mov
sbb
and
pusha
inc
dec
aad
and
adc
notl
add
and
push
roll
or
inc
std
and
mov
mov
inc
xchg
xor
clc
call
fdivrs
inc
xchg
inc
enter
es
fcoml
stos
je
rolb
adc
mov
xor
pusha
mov
and
notl
mov
ss
popf
mov
jmp
cli
outsl
jp
or
xorl
push
push
cmc
xchg
and
or
or
mov
es
mov
shlb
pusha
add
pusha
test
or
cltd
lock
push
cli
pop
mov
loope
movsb
outsl
or
pop
testb
loopne
xchg
lcall
hlt
mov
or
inc
xchg
mov
sbb
leave
add
mov
fbld
fcmovb
mov
mov
or
pushf
and
mov
fists
mov
in
push
adc
xchg
xor
and
or
mov
into
add
mov
mov
jg
adc
bound
hlt
and
mov
into
insl
pop
stos
pop
or
and
dec
cmp
cli
in
lods
cmpsl
ror
and
push
add
cmp
andl
rol
imul
adc
cmpsl
or
xchg
inc
inc
test
rorb
add
mov
dec
adc
fistps
mov
pop
sbb
jp
push
mov
xor
mov
push
lods
add
add
test
mov
sub
cmp
fwait
cmpsl
and
mov
mov
mov
lea
sub
enter
and
aam
xchg
dec
xor
push
int3
mov
sbb
es
mov
sub
and
cs
xor
mov
leave
mov
or
inc
add
add
loope
mov
inc
xchg
aad
xor
jbe
aam
lea
fldt
lds
sub
add
push
vpcmpeqd
leave
xlat
outsb
testb
lock
and
cmp
frstor
ret
loope
inc
ds
mov
sarb
lcall
and
movsb
fs
cmp
decl
inc
ljmp
and
popa
mov
mov
fadds
rcll
dec
cmpsl
cmp
add
pushf
sahf
push
add
pusha
shlb
loop
test
out
adc
and
pusha
daa
test
lcall
sub
pop
loopne
popa
arpl
aaa
icebp
loope
cmpsl
sbbb
cld
fwait
and
sub
and
ret
mov
dec
sbb
dec
cmpb
cs
andb
incl
cwtl
loopne
and
in
add
call
ret
jecxz
bound
hlt
and
ret
shll
inc
lcall
test
fdivs
cmpsl
inc
and
insl
xorb
popf
dec
shlb
add
mov
inc
lret
jmp
and
mov
cltd
mov
pop
mov
shrl
and
mov
pop
push
in
cmpsl
repnz
add
push
mov
xchg
fcoms
inc
pop
fsubs
subb
add
adc
xor
ja
aaa
rolb
cli
out
sub
rclb
in
cwtl
or
outsl
mov
add
cmp
dec
mov
and
lea
mov
cmp
sbb
loopne
movsb
mov
dec
lods
imulb
mov
adc
pusha
call
pushf
in
loope
lds
or
addb
fcomip
test
lret
cltd
pusha
or
inc
add
scas
mov
add
adc
pop
shll
hlt
stos
mov
inc
ss
dec
adc
lcall
lea
push
fldl
lea
xor
add
and
ror
aaa
cmp
sarb
push
lock
imul
add
jg
in
test
rolb
mov
push
into
rolb
xchg
out
mov
and
popa
xchg
push
movsl
jo
cmp
or
dec
fcmove
lock
pop
loopne
test
add
or
les
cld
add
mov
dec
sti
mov
test
adc
inc
and
push
rorb
lock
cmp
mov
inc
add
mov
push
add
sub
lret
je
sbb
inc
inc
daa
cmp
adc
dec
adc
adc
dec
cltd
or
nop
inc
xchg
mulb
inc
jbe
mov
or
pop
jg
dec
mov
adc
icebp
fcomip
xchg
ds
cmp
add
jno
cli
push
stos
inc
les
lock
aad
mov
incb
adc
mov
es
fidivs
icebp
dec
mov
push
jecxz
imul
fbstp
in
int
outsb
movsl
jb
dec
adc
loope
xor
add
fldl
fstl
leave
inc
push
adc
sub
xor
mov
test
popf
rolb
adc
and
mov
mov
jo,pn
push
add
push
push
add
cld
loopne
and
dec
stos
mov
decb
lahf
pusha
push
xor
mov
lock
and
adc
xchg
iret
or
dec
or
push
shll
mov
out
jo
rcll
rcrb
rcl
pop
jo
xor
xchg
movsl
jmp
outsb
int3
mov
test
push
dec
dec
leave
sbb
push
pop
int3
sahf
sarb
xor
dec
pop
int3
adcb
sbb
in
fdivs
sbb
pusha
push
and
cmp
and
and
pushl
xorb
cmp
lahf
adc
cmp
add
nop
cmp
mov
aad
jae
sbb
push
lahf
movsl
cmp
mov
mov
ja
sbb
adc
mov
data16
inc
cmp
and
out
cli
lock
dec
lds
xchg
push
push
fsts
leave
aam
es
sbb
xor
mov
mov
shll
cld
es
adc
sbb
jp,pn
andb
mov
addb
mov
cmp
sub
xor
orb
push
mov
xor
add
push
push
int3
ret
add
pusha
mov
adc
js
iret
mov
lcall
and
into
push
filds
incb
add
cmp
push
fists
and
movsb
push
jno
inc
lods
shlb
or
push
xchg
pushf
xchg
or
adc
push
loopne
or
xchg
pop
or
or
adc
sti
add
addl
push
notb
lock
out
movsb
in
jecxz
loopne
adc
flds
sub
loopne
loop
mov
sbb
and
jns
sbb
sbbb
push
xor
aaa
outsl
add
and
xor
pushl
mov
repnz
xor
pusha
js
or
pop
sarb
addl
in
dec
mov
add
loopne
xor
sar
push
rcrl
push
pop
jo
rolb
fsubl
pop
addl
or
add
sub
je
fwait
cmpsl
stos
les
cmp
adc
outsl
mov
pop
enter
push
mov
push
xor
movsb
test
sub
xchg
cmp
add
or
in
push
jecxz
mov
nop
daa
subb
cld
xchg
mov
adc
and
ret
add
lret
xchg
popa
ret
or
hlt
lock
test
fisubrs
rcl
or
jo
add
je
inc
push
add
cmpsb
jbe
inc
and
fs
or
mov
add
enter
cli
test
xor
jnp
sbb
aaa
inc
push
clc
popa
sub
inc
loopne
jmp
mov
popa
and
jae
cld
cmpsb
incl
dec
ret
sahf
mov
in
jo
inc
jae
mov
inc
test
sti
and
adc
and
sbb
inc
js
mov
xor
icebp
inc
faddl
mov
push
add
adc
and
fwait
dec
negb
jb
mov
ret
and
das
xorl
outsl
mov
and
popa
leave
xchg
inc
inc
push
inc
add
jo
or
cmp
stc
popa
pop
and
add
and
adc
mov
mov
test
jg
shll
push
pop
cmp
repnz
jne
inc
adc
sbb
test
sub
push
push
and
mov
adc
push
repnz
xchg
ja
cmp
jg
add
dec
push
pusha
pop
xor
outsb
or
pop
jns
sbb
push
add
popa
mov
add
push
out
roll
push
inc
add
enter
cwtl
scas
sahf
fildl
fsubrs
cmpsl
xor
cmpsb
sbb
add
pusha
push
xchg
push
call
test
hlt
cmpsl
mov
bound
jno
inc
pusha
loopne
lock
push
and
add
mov
pop
add
les
and
sub
xor
mov
cmpsl
test
pop
pop
lods
mov
xor
clc
cmp
loop
inc
js
xor
test
mov
out
idivb
je
mov
stos
shl
sbb
mov
mov
mov
je
dec
and
dec
add
ret
and
cld
outsl
aad
repnz
mov
andb
and
and
push
and
mov
call
dec
sub
add
mov
jb
rolb
andb
lcall
mov
and
lret
mov
sbb
jp
adc
adc
adc
stos
add
adc
sub
or
lock
and
mov
sbb
subl
outsb
enter
jl
iret
add
insb
into
lds
orl
inc
gs
inc
mov
sahf
inc
xor
dec
out
fwait
adc
loopne
testb
stos
cmpsl
nop
xor
and
movsl
bound
cs
fcos
jg
popf
jbe
add
or
xor
push
and
xchg
loope
add
data16
inc
and
daa
aam
add
cwtl
les
adc
adc
nop
repnz
or
inc
add
xchg
insb
mov
jecxz
test
popf
inc
ds
xchg
rcll
push
into
pushf
lock
push
hlt
add
adc
sub
arpl
gs
roll
push
lcall
outsb
lret
neg
std
aaa
xchg
and
inc
andl
xchg
add
sbb
or
loop
or
aas
jmp
mov
inc
add
inc
mov
push
pusha
mov
decl
movsb
push
sahf
cmpl
dec
and
sarl
roll
incb
scas
lret
shlb
loope
leave
or
mov
sub
mov
xor
push
faddl
and
pop
rorb
push
dec
push
popa
ljmp
mov
pop
push
sbb
subb
into
jp
add
push
jl
inc
rcll
popf
shlb
dec
sub
roll
movl
lahf
cmpsl
fucom
push
pop
adc
shlb
or
mov
or
mov
add
push
lds
rol
cmp
inc
push
and
inc
add
lods
push
scas
inc
mov
add
add
mov
fists
sub
add
adc
hlt
aad
or
cmp
dec
test
movb
outsl
xor
ret
mov
xor
je
or
sbb
jge
and
add
push
test
orb
cmpsl
lea
and
imul
sub
add
loopne
loopne
add
hlt
xchg
shlb
loop
dec
adc
inc
mov
cld
das
clc
add
or
pushw
mov
adc
incl
add
pusha
cmp
pop
mulb
mov
add
dec
mov
xor
aad
outsl
es
inc
sub
and
scas
subl
xchg
arpl
pop
rcrb
call
lock
add
loopne
addl
xor
mov
rolb
bound
add
fdivr
jg
dec
push
add
pusha
sub
dec
loopne
movsl
insl
mov
add
xchg
pop
sub
rolb
cmpsl
cltd
dec
cld
push
cwtl
bound
cmp
xchg
push
test
lret
dec
cwtl
out
call
test
sar
roll
rolb
in
push
ljmp
mov
outsb
jbe
mov
mov
xor
xor
inc
mov
popa
add
sub
loope
cmp
popf
adc
fmull
add
add
stc
mov
popf
andb
stc
incl
mov
sbb
add
pop
icebp
sub
add
mov
sahf
inc
pop
sub
cmpb
sbb
andb
adc
xchg
cwtl
add
add
add
add
add
add
and
lea
add
iret
push
int3
sub
add
or
and
and
or
add
and
mov
aas
add
inc
es
mov
push
cmp
stos
sarb
cmc
sub
decl
cmp
mov
inc
sbb
xor
push
dec
les
fbld
dec
lcall
mov
jb
aaa
cli
or
push
pushf
dec
lock
leave
mov
sub
stc
inc
addb
and
jne
insl
in
add
push
jg
cs
mov
dec
dec
inc
loopne
into
xchg
inc
sarl
daa
inc
push
lock
and
fwait
add
outsl
ret
xchg
inc
outsb
es
jne
mov
and
mov
loopne
and
in
out
sahf
inc
push
out
cmovbe
xor
jo
sub
clc
add
push
inc
push
je
pop
popl
mov
idivb
jmp
pop
inc
leave
mov
cld
fildll
mov
mov
add
xor
add
es
xchg
mov
shll
bound
addb
add
les
fwait
cmpsl
mov
mov
inc
push
inc
add
dec
adc
pusha
ficompl
or
jmp
xorb
dec
roll
movsl
rorl
call
xor
lds
mov
push
push
aas
lcall
push
inc
mov
add
imul
int3
xor
test
repnz
adc
lret
cs
call
mov
add
and
loope
inc
clc
push
pusha
adc
dec
iret
xor
imul
pop
popa
jl
add
les
addr16
inc
add
adc
inc
sbb
aad
inc
xorl
js
js
scas
push
xor
stc
and
scas
cli
out
add
pop
cmpsl
sbb
in
rcll
add
inc
pop
popa
loopne
pop
cmp
xor
sbb
inc
aad
add
add
in
shlb
fdiv
xchg
andb
sbb
mov
mov
subl
xor
xchg
xchg
movsb
and
icebp
push
dec
bound
fwait
pop
add
inc
roll
push
lea
dec
nop
xor
jnp
add
roll
fldl
fbstp
in
test
bound
retw
pop
add
in
addb
js
mov
cli
mov
ds
rolb
lods
flds
cltd
mov
ss
push
ja
xchg
xor
mov
test
push
or
in
inc
mov
mov
aad
add
sahf
pop
shl
push
jnp
fmul
add
sbb
xor
mov
lcall
into
jg
addb
or
pusha
mov
jle
or
fnsave
cli
fldenv
int3
xchg
adc
les
outsb
insb
out
and
add
add
ljmp
push
jl
mov
fwait
and
inc
push
mov
push
sub
dec
pop
xchg
jae
xchg
pop
lcall
pushl
lahf
add
push
mov
dec
push
cmp
decl
mov
adc
xchg
and
push
mov
test
jo
mov
and
and
fs
bound
cmp
jmp
decb
jb
push
popf
sahf
add
js
cld
shr
sahf
mov
mov
daa
filds
pop
or
jo
cmp
mov
jle
call
xor
mov
fnstsw
popa
push
rolb
mov
xchg
ret
pop
mov
sahf
cltd
and
xor
mov
lret
shlb
inc
popa
aas
cmp
adc
add
sub
loopne
xchg
pushf
fnsave
pop
mov
and
lock
cmp
lcall
or
add
enter
test
fbstp
rorl
aas
mov
aas
nop
in
pop
add
fwait
and
jb
dec
les
pop
bound
pop
sub
and
mov
mov
rorb
dec
sub
int3
icebp
cmp
decl
push
rorb
outsl
cmp
dec
arpl
push
sbb
sub
ljmp
data16
inc
mov
xchg
cmp
add
cwtl
sarl
nop
add
cmp
xor
bound
je
lock
or
dec
repnz
push
jne
mov
or
adc
dec
xchg
add
push
jne
mov
rcrb
ja
into
xchg
adc
test
dec
loopne
sbb
inc
cmp
or
dec
je
mov
mov
sbb
test
mov
jge
pusha
mov
push
xchg
push
cs
aas
mov
add
adc
inc
mov
xor
or
sbb
lcall
bound
jbe
mov
pop
dec
or
cmp
jno
sti
out
cli
cmp
jns
xor
and
stc
popa
cmp
sub
jmp
cmp
mov
lcall
pop
mov
movsb
pop
nop
inc
cltd
jmp
xlat
popa
pop
or
inc
rcrb
mov
loopne
ljmp
push
add
es
int
add
and
cmp
enter
cmc
inc
lock
nop
movsl
movsl
cmp
js
jle
dec
or
rolb
aaa
sub
ljmp
jb
addb
jb
jne
push
dec
and
cmp
push
hlt
ja
mov
cmp
lret
les
enter
rolb
enter
sbb
ljmp
dec
and
js
pusha
adc
inc
loope
pop
icebp
add
orl
shrb
mov
pop
test
add
lds
adc
das
shr
nop
inc
inc
sub
xchg
inc
inc
dec
jnp
jo
incl
outsl
cmp
or
jo
les
xor
xor
xlat
inc
dec
xor
jmp
and
loope
dec
lret
mov
inc
jae
inc
jno
nop
cmpsl
sub
ret
mov
inc
inc
add
fnstenv
mov
inc
adc
inc
leave
mov
mov
jecxz
sub
and
outsb
push
mov
adc
out
loope
call
jno
orb
nop
adc
sahf
adc
hlt
adc
mov
mov
shlb
loope
shlb
jmp
imul
adc
jp
pushf
adc
xchg
mov
cs
add
sarl
cmpsl
jo
jmp
outsl
and
adc
fcomps
insl
cmp
add
and
bound
push
sbb
add
inc
loope
aad
lods
clc
and
data16
cmp
add
or
push
add
dec
xor
mov
jle
and
sahf
xchg
clc
push
and
push
and
dec
adc
push
push
shrb
jbe
test
daa
or
aam
jbe
pop
mov
cmpb
add
jno
cld
add
pop
add
add
fisubl
inc
fldcw
jl
insb
pop
pusha
push
fldl
inc
je
or
inc
mov
sub
pop
insl
les
addl
jne
push
jecxz
adc
pop
imul
pop
in
push
stc
sahf
pop
adc
inc
and
mov
subb
xchg
fimuls
inc
dec
adc
popf
jae
add
add
outsl
push
std
adc
sub
adc
orl
pop
jg
jle
scas
add
insb
and
bound
add
fwait
ds
orb
mov
add
addl
mov
mov
fbstp
dec
aam
lods
mov
inc
rorb
jl
add
insb
adc
add
rorb
add
and
orb
push
jmp
fbld
xor
aaa
add
dec
orl
adc
xor
popf
pop
add
adc
adcl
call
mov
jo
push
and
fisubrs
nop
mov
std
jne
cmpb
popa
in
add
pop
add
popf
push
mov
in
dec
xor
lret
aad
jbe
pop
xchg
xor
add
inc
dec
mov
sub
jg
mov
pop
add
popf
les
cmp
push
mov
jne
inc
push
lahf
inc
add
adc
and
jmp
add
out
rolb
and
sbb
sbb
sub
xorb
add
push
sbb
leave
iret
sbb
sarb
or
mov
and
incl
pop
and
and
inc
adc
outsl
push
pop
add
add
jge
hlt
fucomip
add
push
test
imul
flds
shrb
jne
fisttpl
cwtl
adc
in
out
add
push
std
mov
movsl
mov
inc
out
inc
fucompp
or
add
cmp
mov
and
std
orb
rorb
mov
sar
lock
cmp
sbb
hlt
movsl
jne
mov
mov
sbb
dec
in
pop
add
and
mov
or
lahf
rcr
jmp
sti
inc
stos
ret
push
mov
pop
out
roll
int
loop
add
scas
mov
mov
cmovo
es
mov
cli
inc
loopne
outsb
mov
xor
jg
inc
stos
and
push
mov
add
jne
push
inc
pop
inc
decb
jmp
push
jmp
adc
mov
pushf
jne
mov
mov
test
push
xor
fstps
or
add
sbb
jmp
jmp
adc
dec
loopne
in
mov
mov
push
sbb
outsl
xor
mov
jge
aad
fisttpl
jmp
adc
cmpb
add
push
sarb
pop
jmp
dec
xorb
shrl
or
lock
jo
popf
mov
push
adc
push
in
mov
pushl
cmpsb
jo
add
outsl
fwait
ss
ja
and
cld
add
dec
pusha
mov
pusha
lds
add
dec
cmp
mov
sbb
lret
lea
add
fcomip
inc
fwait
and
mov
fsub
xor
mov
popf
shrb
or
push
jg
imul
ds
add
loopne
decl
xchg
fwait
cmp
jp
and
imul
or
filds
sbb
xor
rclb
imul
sarb
andb
jle
add
and
inc
inc
int3
andl
add
inc
test
iret
adc
dec
add
inc
mov
testl
add
add
and
add
stos
inc
fldcw
mov
dec
pop
jmp
adcb
and
mov
sbb
fadds
jp
cld
jg
jnp
fdiv
dec
push
js
or
push
mov
inc
in
sub
adc
push
loope
mov
push
jecxz
adc
mov
push
push
jne
test
add
addl
add
adc
test
fwait
jbe
push
repnz
add
mov
fstpt
sub
inc
mov
aaa
orb
sbbb
mov
pop
xchg
jecxz
in
inc
sbbb
or
lret
cmpb
add
test
cmc
fcmovnbe
imul
pusha
push
repnz
sbb
int3
xor
inc
adc
shlb
stos
inc
lea
mov
popa
test
mov
mov
es
add
testb
pop
mov
push
inc
adcb
ljmp
popf
inc
loopne
test
add
push
and
push
test
icebp
loopne
es
mov
mov
mov
fcomip
and
xor
dec
xor
shrb
adc
and
inc
fs
lret
loopne
in
nop
insl
test
mov
fst
mov
xchg
inc
sbb
mov
xor
and
incl
or
pusha
sub
adc
int
jo
add
mov
jg
test
pop
adc
mov
add
and
call
mov
sub
popa
imul
add
sbb
adc
add
popa
push
sub
xor
lret
cmp
shlb
sub
mov
jg
jo
subb
mov
cmp
enter
hlt
adc
xchg
lret
ds
mov
test
or
sub
outsl
adc
xor
movsb
pop
es
add
in
pop
xchg
inc
testb
mov
cmc
testb
loope
lret
into
dec
popf
push
jmp
out
inc
sub
push
sarb
ja
pop
stc
xchg
stc
rcrb
icebp
decl
nop
insb
mov
rcll
mov
sub
cmp
mov
dec
and
shlb
sub
adc
js
sbb
adc
xchg
clc
jmp
dec
pop
and
lock
inc
sahf
js
jg
mov
add
adc
mov
jne
xchg
add
out
push
xor
xor
push
add
mov
icebp
cmp
pushl
mov
jbe
shll
js
rorb
push
jno
lret
pop
cs
sbb
add
push
shrl
xor
sub
insb
ljmp
cmpsb
add
mov
add
jl
adc
movl
shll
mov
mov
sbb
aad
adc
shrl
nopl
stc
jo
push
adc
sub
xor
add
xchg
nop
lahf
js
jge
push
sbb
js
shlb
adc
mov
mov
jle
sbb
addr16
lahf
xorl
add
ljmp
pop
mov
dec
adc
das
lea
inc
loopne
sbb
and
inc
xorl
add
and
or
stos
add
cmp
rcrl
jg
and
ljmp
faddl
cmp
ljmp
inc
outsb
out
enter
cmp
xchg
rcll
mov
inc
or
shlb
push
lods
xchg
stos
or
mov
xchg
push
std
movsl
jg
dec
jns
inc
xchg
mov
loopne
and
jg
inc
add
int3
mov
mov
push
into
mov
adc
fwait
rolb
mov
sub
shlb
and
pushl
fnstenv
add
xor
adcl
lret
jne
addl
sub
xor
jnp
push
sbb
jne
adc
bound
mov
dec
sahf
xorl
sub
scas
cli
in
fildl
lods
dec
pop
or
cmp
and
adc
stc
ljmp
add
inc
clc
xchg
shrb
xor
xor
orb
xchg
cli
call
cmc
stos
popf
push
add
adc
std
sbb
add
sbb
push
sti
sub
mov
add
ljmp
adc
orb
add
push
test
jp
or
push
push
mov
test
sbb
clc
popa
add
push
add
cmp
mov
adc
push
add
inc
lret
fwait
and
aad
mov
icebp
xorb
icebp
xchg
jp
jo
jno
pop
sbb
stos
outsb
or
mov
inc
add
xchg
xor
ss
loopne
add
xchg
loope
pop
cmpsb
cwtl
inc
xchg
enter
into
rolb
outsl
nop
pusha
add
lock
xchg
push
cmc
into
jg
cmc
outsl
fimuls
aad
aam
dec
icebp
xchg
cmp
jo
mov
push
sbb
lea
xchg
fst
adc
aad
push
jae
inc
jecxz
aaa
out
les
inc
pop
lds
adc
in
mov
cmp
in
data16
push
or
in
mov
and
add
filds
dec
cmp
and
or
incl
into
xchg
add
pop
jnp
add
mov
jmp
leave
mov
inc
adc
or
adc
xchg
insl
mov
test
mov
inc
sbb
out
loop
jne
cwtl
push
add
bound
push
mov
lcall
ds
cmp
iret
add
mov
inc
sub
enter
adc
sub
adc
js
movsb
inc
push
push
cmpb
cmp
jle
add
add
jns
fs
adc
cmc
int3
jne
push
sbb
adc
rcrb
fs
add
movsl
inc
repz
xor
sahf
cmp
inc
arpl
ds
xchg
add
lods
idivb
pop
jo
out
inc
aaa
movsb
test
str
cmp
add
je
rorl
jle
int3
andb
shlb
pop
stos
sub
or
decl
adc
pop
add
testb
sub
jbe
mov
xchg
nop
scas
mov
js
xchg
add
xor
lret
cmpsb
and
push
mulb
and
and
je
mov
int
ret
dec
fimuls
int3
and
add
sub
add
sarb
pop
add
cmp
push
addl
dec
sub
fs
addb
lds
dec
sub
rcrb
pop
shlb
and
test
test
ret
xchg
aaa
mov
push
adc
rclb
testb
or
fwait
jne
sub
jg
mov
cmp
add
mov
insb
inc
add
jne
adc
inc
jne
imul
in
push
ret
inc
jne
je
inc
jne
pop
pushf
or
jne
sub
decl
pop
jne
orl
jne
and
jbe
ds
iret
push
es
ds
jne
sub
cmpsl
ret
adc
sbb
out
sub
jne
insb
imul
loopne
insb
ficompl
in
jne
lcall
push
leave
adc
or
or
jne
and
jns
inc
xchg
ds
and
jne
and
jne
inc
cmpsb
jno
sbb
jae
mov
xor
pcmpeqw
add
or
jne
add
or
insb
fimull
shl
and
mov
and
lods
jns
add
inc
add
inc
out
insl
jnp
jne
mov
sbb
andb
adc
pop
pop
ljmp
lcall
fldt
das
jne
sti
xchg
or
ljmp
sub
fnstsw
pop
ds
push
jae
and
sarl
repnz
or
jne
inc
lret
aas
mov
or
xor
das
and
iret
fwait
lods
or
push
hlt
test
call
imul
inc
push
or
jne
inc
or
or
and
rclb
jbe
lock
pop
and
jne
cmpsb
sub
jne
jl
sub
decb
dec
ret
sbb
add
jne
ret
sub
stc
das
js
rclb
fnstenv
jbe
add
jne
rclb
aad
and
mov
les
xlat
jne
movsb
sarl
mov
inc
add
jne
add
imul
decl
lock
je
div
inc
jmp
inc
cli
div
decl
jmp
adc
je
inc
pop
mov
xor
mov
push
pop
clc
xchg
add
je
add
ljmp
pop
inc
add
push
bound
jne
cmp
jb
scas
jne
lock
incl
add
add
test
xorl
add
hlt
xchg
inc
jge
pushf
jne
outsl
pushf
xchg
mov
cli
ret
cmp
xorl
popf
jne
and
jmp
orl
outsb
jmp
imul
lcall
xchg
push
or
add
mov
lods
jne
mov
and
test
stos
or
mov
dec
movsl
jne
cli
lock
jne
cmpsb
subb
std
push
mov
pop
mov
inc
shll
mov
mov
ja
push
call
push
or
add
mov
into
jg
lea
or
iret
dec
xor
inc
inc
pusha
xchg
mov
jle
mov
lcall
and
and
les
sbb
fwait
mov
stos
cltd
mov
dec
sbb
mov
add
out
leave
stos
inc
lods
xchg
mov
je
xchg
mov
jmp
loopne
outsb
flds
sbbl
cs
into
push
push
sbb
add
loopne
push
jmp
lcall
sbbb
data16
subb
and
and
adc
inc
or
inc
pop
sub
std
lahf
orb
inc
int3
dec
add
dec
fiadds
cwtl
lds
and
loopne
loopne
and
pop
mov
pop
test
sub
xchg
push
inc
adc
retw
cwtl
bound
test
mov
inc
push
pop
pop
outsb
notl
add
inc
loopne
flds
addl
popf
pop
and
or
inc
dec
sub
or
lahf
mov
xchg
cmpsl
pop
jo
lock
and
sub
mov
icebp
stos
sbb
loopne
and
mov
aas
test
jo
pop
addb
or
xchg
pop
jg
sbb
or
jo
xor
repnz
add
xor
in
add
xor
jl
jb
cmp
and
xor
or
cmp
shll
mov
push
inc
je
push
insb
sub
out
out
jo
or
pop
add
and
push
push
mov
daa
inc
pusha
add
sub
loope
push
push
push
inc
fnstcw
test
mov
cmpsb
add
and
add
sarl
and
cli
mov
jne
xchg
inc
lret
or
jne
rolb
fsubrs
push
jo
add
rolb
aad
decl
push
mov
clc
cmp
jne
adc
inc
jb
rolb
mov
clc
and
mov
mov
push
movsl
inc
pop
push
sar
jbe
enter
mov
sbb
adc
sub
xchg
mov
add
xor
cld
out
and
add
xchg
icebp
enter
pop
pushf
mov
adc
add
jne
pop
repnz
es
add
outsb
std
or
inc
ds
jne
inc
roll
cld
push
pusha
mov
sbb
xchg
adc
ss
push
rolb
push
cmp
mov
nop
clc
and
sbb
sub
andb
and
lret
adc
pusha
xchg
add
mov
inc
rorb
mov
clc
and
decl
jecxz
aam
mov
cmpl
orl
mov
ljmp
ffreep
add
movsl
outsb
cmpsl
lds
arpl
pop
scas
and
and
ja
and
sbb
push
dec
es
and
lods
insl
or
push
push
mov
mov
in
mov
mulb
mov
inc
loop
fisubs
and
popa
cmp
push
mov
adc
in
shll
adcb
xor
lcall
fnstcw
aam
fcoml
outsl
xor
add
add
rcll
or
mov
cmp
movsl
xor
rolb
movsl
aam
hlt
lock
xorb
enter
test
clc
in
mov
iret
and
xchg
xchg
pop
ret
or
inc
or
inc
mov
in
mov
mov
rclb
in
dec
xor
sbb
iret
adc
lret
and
adc
inc
sti
decl
and
push
add
ljmp
notb
inc
and
sbb
mov
fs
mul
fwait
cltd
mov
dec
xor
nop
fdivl
hlt
mov
fsubs
add
ret
sbb
hlt
insl
rolb
sub
mov
mov
mov
push
pop
hlt
fistpl
xchg
ljmp
or
pop
in
inc
rolb
roll
adc
and
pop
fdivs
cmpsl
leave
add
xchg
sahf
dec
cmp
mov
ret
add
je
daa
shr
sub
daa
add
mov
sub
rcll
fs
or
pop
cmp
jbe
inc
std
and
pop
push
dec
in
icebp
or
pop
mov
repnz
mov
nop
or
add
jmp
jp
hlt
mov
ffreep
or
ret
rorb
mov
sbb
xor
repz
and
loopne
cmp
repz
inc
cmp
rcll
stc
dec
cmp
cmp
and
push
push
or
jo
pushf
sahf
mov
int3
std
adc
in
push
sub
jmp
aaa
xchg
add
movlps
xchg
in
cmpb
sar
int
xor
stos
inc
adc
sbb
fbld
sub
or
add
add
mov
test
test
sarl
push
fidivl
jnp
xchg
and
sub
cmpsb
mov
fisubrl
dec
or
ss
lcall
xor
mov
push
xchg
xchg
or
pushf
cs
arpl
int
pop
mov
or
sub
or
sbb
add
pushf
lahf
scas
movsb
cs
movsl
xor
dec
lcall
subb
ret
ret
scas
xchg
xor
cmp
fcoms
adc
ss
mov
xchg
loopne
add
xchg
fadds
inc
decl
movsl
cli
push
lret
xor
add
ljmp
pushf
dec
mov
add
mov
icebp
repz
add
fisubs
nop
lret
jge
lea
mov
mov
adc
inc
mov
inc
cmp
shll
pop
ja
push
add
mov
movsb
je
ret
daa
push
mov
add
cwtl
and
mov
clc
jg
enter
fldl
xor
adc
out
mov
lds
mov
sbb
mov
movsb
xor
shll
fbld
cltd
xor
adc
cmovo
pop
pusha
ja
and
add
nop
push
cmpsl
loope
mov
add
hlt
adc
xchg
in
loope
add
dec
cmp
adc
and
push
scas
fwait
add
adc
pop
pop
mov
or
pop
cmpsb
scas
xor
fisubl
popa
test
lods
clc
and
and
or
mov
pusha
in
fst
dec
mov
mov
movsl
dec
jo
mov
or
or
push
inc
lret
pusha
jecxz
and
inc
je
lock
sbb
ljmp
cmpps
add
cmpsl
enter
and
movsb
and
mov
mov
js
and
add
clc
adc
stos
jle
cmp
insb
push
add
cmpsb
mov
adc
sbb
dec
lret
xor
enter
adc
inc
aam
and
testb
dec
ret
data16
xchg
xor
pop
and
aas
and
divps
or
or
add
cwtl
and
sub
icebp
mov
test
outsb
lock
imulb
push
lcall
inc
aas
sbbl
jo
mov
and
dec
jg
roll
dec
mov
push
lcall
inc
stc
and
dec
subl
push
sub
and
add
add
sub
ret
sbb
mov
adc
aaa
into
adc
sub
sbb
add
mov
outsb
adc
rclb
shr
mov
mov
pop
int3
jnp
pop
inc
push
adc
pop
inc
mov
sbb
xchg
insb
add
push
cmc
pop
sbb
sbb
pop
jo
adc
or
sbb
dec
lock
cmp
mov
and
inc
sarb
mov
and
or
mov
js
sbb
or
inc
cwtl
insb
mov
shl
pushf
aad
sbbb
int3
adc
shlb
fistpl
mov
addl
rcl
fisubrl
inc
dec
es
dec
cmp
xchg
add
and
lods
cltd
adc
insb
sub
inc
pop
push
fadd
xorb
subb
sar
push
add
lock
repnz
orb
mov
pop
mov
xchg
jle
add
cmp
addl
add
rorl
out
andb
cvtps2pi
iret
rolb
and
les
or
mov
sbbb
testb
sbb
mov
ja
inc
inc
push
and
dec
dec
insl
inc
icebp
dec
adc
pop
ret
rorl
es
or
adcb
and
inc
rol
add
xchg
ss
dec
arpl
out
adc
mov
ret
subb
sub
push
add
inc
fcomps
roll
dec
mov
inc
pop
fcomip
jmp
mov
test
xchg
dec
xor
xchg
cli
incl
cmpl
add
std
scas
int3
sahf
add
addb
ja
ficoml
dec
and
fldl
or
andb
jb
xchg
or
or
xchg
and
in
fcom
pop
movsl
xor
and
sub
xchg
add
out
xor
mov
and
les
push
sbb
mov
lret
pop
hlt
cmpsb
movsb
sbb
cld
clc
sbb
jl
dec
adc
dec
and
mov
add
mov
js
add
mov
into
out
xchg
icebp
pop
nop
ret
dec
call
or
int3
andb
add
movsl
orb
mov
jecxz
stos
test
rcrb
mov
dec
pop
and
add
fcoml
mov
pop
lcall
int3
les
mov
aam
fucom
adc
push
push
cmp
inc
cmp
push
incl
rcrb
vminps
shld
iret
loopne
popf
sbb
ljmp
mov
rorl
xor
js
rolb
add
xor
add
pusha
mov
es
sub
insl
push
sbb
ds
outsb
loope
lcall
je
jns
lods
inc
or
mov
mov
sub
icebp
and
adc
pop
hlt
inc
pushf
js
cmc
pop
mov
push
jne
dec
movsl
popa
ss
mov
ret
xchg
stos
jmp
mov
sub
scas
and
adc
dec
pusha
arpl
flds
mov
add
cmp
aad
call
xchg
dec
add
les
in
mov
add
test
pusha
add
sarb
popa
inc
or
jnp
or
loopne
mov
push
and
add
outsb
jmp
clc
arpl
mov
inc
mov
push
bound
mov
imul
cli
adc
push
or
cmp
xor
mov
lret
xor
add
outsb
adc
and
sarb
ret
push
std
leave
mov
jle
mov
cmc
rorb
pop
mov
test
out
dec
sub
inc
push
xchg
push
mov
popf
sahf
popa
daa
add
or
inc
dec
ret
aaa
push
sbb
rolb
out
sbb
les
loopne
mov
add
dec
cld
xor
jge
pushf
sbb
mov
mov
push
inc
adc
jl
push
outsb
add
fstl
pop
loopne
fadds
dec
and
or
xchg
pop
inc
cmp
push
jno
fwait
popf
ret
int3
in
ret
push
mov
mov
jp
push
inc
push
dec
mov
decl
iret
pop
addb
and
stc
gs
loopne
and
lock
gs
and
cmpsl
fcoms
lods
fmul
es
in
testb
pop
lds
mov
and
inc
jl
cmp
incl
or
inc
frstor
or
les
inc
out
jo
xchg
pushf
outsb
shrb
les
loopne
loopne
nop
lcall
mov
mov
out
aaa
cmp
sbb
subb
mov
adc
add
mov
pusha
pop
mov
jne
sar
or
xor
xor
jne
fwait
test
adc
pop
enter
pushf
shrb
xchg
mov
pop
add
ret
ss
repz
add
bound
add
add
lea
push
enter
pop
sahf
gs
adc
pop
mov
and
testb
pop
cmp
mov
out
loopne
pusha
imul
cmp
ljmp
cmp
mov
inc
and
sub
inc
and
xor
inc
inc
or
mov
test
loop
gs
and
add
call
popa
add
hlt
out
xorb
shl
mov
or
es
sbb
and
loop
adc
cmpb
add
dec
fildll
cmp
and
and
pushf
pushf
fs
fidivl
add
xor
pop
stos
call
in
lock
decl
rcll
leave
addl
stos
movsl
call
adc
xchg
push
mov
add
or
ss
add
shl
js
adc
movsl
lahf
push
sub
aam
adc
fs
mov
mov
in
nop
dec
dec
rorl
adc
and
nop
test
sub
xchg
pusha
ret
jmp
add
xor
sbb
dec
inc
jmp
stos
orb
orl
mov
shrl
out
mov
mov
pop
cld
incl
or
add
push
mov
mov
pop
filds
sbb
incl
aad
push
mov
mov
sub
bound
mov
push
cld
sbb
sub
cmp
add
cmp
aaa
pop
cmp
mov
movsb
push
or
xor
xchg
shlb
leave
and
and
mov
roll
mov
imul
incl
xor
xchg
icebp
or
inc
lret
inc
lock
ljmp
push
cmc
xchg
ret
push
sti
outsl
clc
outsl
fs
out
imul
push
sbb
jne
movsl
es
or
cmpsb
aaa
adc
xor
mov
adc
jmp
push
push
xchg
push
mov
andb
xchg
inc
add
pop
jne
jae
mov
and
dec
xor
xor
push
lds
cmp
scas
add
jno
notb
aad
lret
inc
loop
adc
inc
or
mov
clc
xor
jge
inc
add
xor
jb
in
adc
aas
add
sbb
jne
inc
add
fldt
stos
and
pop
xor
xchg
lods
sbb
sbb
std
pushl
add
aaa
movsl
adc
rorl
scas
adc
rcrl
sub
adc
xor
cmpsl
adc
sbb
and
or
in
sbb
mov
jle
sbb
scas
xchg
add
cs
orb
xchg
mov
inc
inc
jo
shlb
and
xchg
popa
es
rcrb
pop
out
jg
and
adc
sahf
pop
inc
ds
or
inc
and
sti
inc
lret
inc
mov
fidivs
inc
pusha
jecxz
push
or
mov
nop
adc
loope
leave
imul
std
mov
mov
inc
inc
lea
xchg
rol
inc
add
icebp
divb
adc
and
mov
in
xchg
ljmp
je
push
test
push
sbb
mov
aas
push
jge
in
enter
cmpsb
inc
jl
and
movsl
cmp
cld
or
mov
mov
inc
sbb
sahf
test
dec
cmpsb
icebp
outsl
xchg
es
or
fldt
sub
add
xchg
xchg
mov
lods
loop
adc
add
shll
movsl
dec
loopne
mov
pop
adcb
mov
pop
add
nop
sahf
notb
dec
adcb
inc
mov
aaa
sbb
inc
js
or
cmp
adc
push
or
mov
add
push
mov
push
incb
gs
pop
test
jo
mov
dec
ljmp
and
es
mov
xchg
popf
jl
pop
dec
mov
pusha
push
sbb
aaa
je
cmp
sarb
testb
aas
ficompl
push
xor
mov
mov
jo
lret
or
int3
and
call
add
cmp
imul
cmp
push
neg
test
push
xchg
or
xchg
or
pop
ss
ljmp
xor
clc
outsl
xchg
jbe
or
or
aaa
inc
shlb
xchg
and
rcrb
xchg
lock
cltd
leave
pop
repz
fistpll
adc
inc
adc
cmp
fcoms
add
popl
push
xor
pop
ss
add
jno
cli
dec
lcall
sbb
dec
pop
in
ja
and
push
inc
cmp
push
ret
cmp
testb
nop
adc
cmc
dec
nop
or
pop
icebp
adc
mov
mov
sarl
push
es
add
outsl
ret
ds
xor
sahf
mov
push
and
shrl
jbe
sbb
loop
movsb
or
xchg
cmpsb
pop
or
clc
jo
mov
mov
sbbb
and
sub
and
inc
xchg
scas
incl
lods
mov
ds
sub
and
outsl
jle
add
lock
push
js
mov
xor
and
inc
add
mov
enter
nop
les
push
push
inc
sbb
movsl
fs
mov
add
jno
les
push
mov
sahf
inc
cwtl
dec
rolb
loopne
cltd
lods
inc
push
cmp
xor
adcb
lods
lcall
push
out
ja
lds
add
sub
ret
xchg
add
inc
mov
loop
loopne
dec
sub
or
sbb
or
jo
mov
add
cli
xchg
xor
and
outsb
mov
cmpsl
out
xchg
lock
test
pop
je
cmp
cld
cmp
xor
xor
icebp
or
ss
add
addb
ja
mov
gs
xor
cmpl
ss
addb
sub
incb
push
fwait
add
fs
notb
add
adc
and
cmp
sarb
pop
aas
cmpb
cmpsb
inc
jmpw
inc
add
xor
mov
pop
inc
addr16
or
sahf
add
xorb
push
push
push
mov
ds
popa
decl
fs
inc
pop
subb
or
dec
pop
inc
pcmpgtw
sarb
add
mov
outsl
mov
add
xchg
pop
inc
daa
pushf
ficompl
pop
cmc
pop
jl
or
cmp
cs
push
cli
adc
adc
push
or
inc
jmp
cwtl
loope
shrl
fistps
out
cmpsl
flds
andl
add
dec
aad
loop
dec
push
cs
leave
rorb
or
cmp
je
inc
pop
stos
pop
bound
test
lcall
sarl
test
ret
jo
mov
lds
aaa
pop
fdivs
adc
xchg
subb
jecxz
imul
test
sbb
add
divb
lds
cmc
cltd
xchg
loope
addb
cli
cs
addr16
mov
inc
xor
or
roll
in
add
adc
loopne
mov
mov
testb
add
and
adcb
mov
sbbl
ficompl
push
into
in
inc
into
sub
sbb
clc
call
rcrb
aas
testb
mov
mov
push
mov
cmp
cmc
fdivrl
bndldx
dec
or
lret
or
rolb
ret
test
fadds
jne
dec
mov
inc
jg
lock
and
add
out
adc
mov
mov
push
outsl
mov
sub
xchg
leave
mov
inc
xor
cld
or
jg
and
inc
mov
pop
stc
inc
ret
xor
xor
loop
pushf
adc
cs
in
int3
dec
sub
xchg
xor
int3
push
and
xchg
icebp
ljmp
adcl
fwait
loopne
rorb
push
mov
and
add
incl
mov
addb
dec
out
rclb
adc
xchg
inc
jle
sbb
in
xor
or
loopne
enter
adc
mov
mov
roll
push
test
fsubrs
xchg
test
outsl
adc
add
or
bound
inc
jno
call
inc
mov
inc
shl
rorb
outsl
aaa
cmp
in
add
jns
movsb
cmpsl
test
lea
and
jno
jecxz
add
inc
push
test
push
loopne
push
inc
dec
inc
out
out
and
xchg
les
add
jnp
mov
inc
mov
pop
ret
push
or
inc
push
mov
sbb
xchg
dec
or
mov
lcall
call
stos
xor
xchg
pop
and
ret
add
jecxz
mov
loope
mov
push
movsl
lret
mov
loopne
movhlps
inc
cmova
addr16
adcb
or
es
pop
mov
or
add
cmp
pop
push
rclb
and
popa
dec
fwait
orl
inc
sub
inc
sub
pop
inc
adc
sar
pop
xorl
and
pop
adc
pop
sar
pop
lret
adc
jmp
hlt
add
mov
ljmp
inc
or
add
loopne
add
mov
cli
decl
sbb
and
mov
and
es
clc
xchg
add
and
sbbl
xor
push
and
and
loopne
mov
adc
add
mov
in
xchg
orl
mov
adc
adc
data16
inc
call
or
and
and
and
xor
mov
pop
inc
js
pop
sbb
pop
add
and
mov
dec
hlt
pop
add
test
jg
mov
or
jecxz
add
jmp
out
push
iret
mov
sbbb
xor
adc
mov
shrb
js
sbb
jmp
es
jle
lock
sbb
es
outsl
je
push
push
sbb
test
cmp
clc
jmp
xorb
pop
jbe
inc
mov
jae
and
xchg
jmp
pop
mov
dec
mov
je
mov
sbb
es
jns
rolb
lock
xor
lods
sbb
lock
test
mov
popa
xor
push
icebp
or
dec
call
loopne
loop
dec
lock
xchg
and
ljmp
and
lock
sbb
rcrl
adc
adc
pusha
pop
cmc
jg
daa
aaa
sbbb
adc
xchg
sbb
add
out
popf
xor
adc
jne
xor
sub
aas
movsb
cmp
xchg
lcall
popa
cld
loopne
lock
mov
inc
rcrb
add
test
insb
popa
mov
or
aaa
sub
jae
and
cltd
lock
xor
and
add
add
sti
aas
into
sub
dec
jo
mov
into
sub
iret
mov
mov
inc
push
add
inc
add
mov
push
mov
or
pop
cmpsb
sbb
mov
and
int3
mov
data16
or
xor
inc
hlt
xor
jl
fmull
or
jb
jno
push
cld
xchg
mov
decb
xor
or
pop
sub
rcl
fstpt
call
dec
adc
inc
dec
scas
xor
jle
add
or
incb
add
push
call
mov
xor
mov
mov
fists
movsl
stc
mov
outsb
insl
mov
and
adcb
nop
adc
fsubrs
sbb
adc
outsl
mov
jp
mov
ljmp
addl
pusha
aaa
add
lret
pop
push
scas
lock
add
mov
movsb
add
insl
cld
int
push
pop
jo
and
mov
push
lock
cli
mov
adc
add
loopne
add
push
jae
rolb
and
push
push
scas
pop
aam
push
inc
or
mov
mov
cld
mov
out
mov
loopne
add
mov
sub
pop
xchg
inc
gs
cmp
inc
sub
jne
mov
or
loopne
mov
ret
mov
add
mov
adc
bound
xchg
rorl
xor
outsb
jl
mov
add
cmp
dec
fmull
mov
jmp
mov
add
ficoml
dec
shrb
sub
das
mov
iret
mov
scas
add
add
ret
aam
lock
pop
mov
jecxz
out
inc
xor
bound
adc
or
add
and
jo
rorl
xchg
add
pop
and
jo
inc
push
in
mov
adc
dec
incl
mov
enter
cmp
xchg
aam
cmpsl
adc
adc
push
jno
push
inc
ss
add
inc
mov
add
add
inc
and
inc
icebp
xchg
mov
xor
or
adc
incb
icebp
dec
aaa
mov
push
add
jae
add
mov
mov
and
movb
fisttps
xor
add
daa
add
ja
mov
repnz
inc
sarb
jne
loopne
add
xor
push
dec
cwtl
push
fmuls
inc
xchg
fdivr
mov
mov
add
pop
cmpl
mov
data16
fmuls
insb
rol
lret
or
das
mov
add
cmpb
lods
mov
add
sub
xor
or
add
adc
mov
xchg
cs
stc
inc
roll
mov
popa
or
fiaddl
push
add
mov
test
adc
lret
cmc
pusha
dec
fstpt
add
pushf
inc
aam
dec
mov
cmpsl
testb
das
adc
int3
dec
repz
or
jmp
data16
push
push
or
outsb
loope
push
call
or
loop
jo
rolb
jmp
mov
add
sahf
lcall
mov
jo
rol
lcall
fcomp
jo
push
nop
add
clc
xchg
jns
mov
mov
lret
jle
jo
jg
sbb
pusha
mov
fistps
push
push
and
xor
je
es
cmp
lods
add
or
fbld
push
or
or
cmp
push
add
mov
test
cmp
xchg
jecxz
xchg
mov
insb
fimuls
push
add
nop
add
sbb
ljmp
mov
mov
push
add
add
add
or
lret
lea
add
in
push
cmp
mov
std
jg
push
mov
xchg
ret
es
adc
mov
iret
xor
or
sbb
rorb
mov
mov
sub
std
jg
mov
and
mov
ret
or
lock
and
movsb
pop
lds
dec
inc
sbb
and
enter
push
adc
repnz
call
hlt
sbbb
call
push
jnp
out
loopne
test
add
mov
nop
cld
mov
add
push
push
mov
dec
xchg
jl
repnz
jb
pop
cmp
fs
inc
add
mov
inc
incl
push
icebp
mov
repz
lcall
and
add
inc
leave
repz
lods
adcb
add
mov
out
fisttps
sbb
inc
add
push
pop
sub
cld
sub
les
mov
inc
mov
push
dec
adc
or
ficomps
fldenv
add
or
icebp
shl
jp
cld
sbb
and
jo
push
mov
jl
popa
das
pusha
mov
lock
dec
aas
sarl
out
mov
mov
add
dec
xor
sbbb
xor
xchg
pusha
sbb
mov
sahf
fisubs
popa
dec
cltd
out
ljmp
add
add
and
ret
xor
idivb
mov
aad
test
cmp
add
pop
add
add
jne
addb
sbb
dec
and
sahf
cmp
stos
sub
pop
jp
mov
lock
xor
xchg
cwtl
inc
add
int3
das
inc
insl
mov
xchg
test
push
push
fidivrl
scas
dec
shlb
mov
loopne
jb
dec
sbb
out
cli
xor
pop
movsl
xor
sub
mov
xchg
int3
xor
pop
or
or
aad
lds
nop
inc
leave
aam
xchg
xor
jp
mov
push
dec
test
jge
add
xor
mov
xchg
les
rolb
xor
sbb
mov
cmpsb
insb
inc
dec
in
or
add
cmp
in
imul
stos
push
std
mov
jle
lods
mov
or
filds
push
push
adc
push
xchg
fbld
fldt
sbb
dec
sub
aaa
les
push
push
xor
lret
std
iret
pop
add
addb
std
xchg
xor
dec
das
adc
lss
call
std
int3
inc
cltd
popf
xor
nop
cmp
rcrl
mov
sub
dec
add
mov
cli
cmp
andb
inc
sbb
loopne
ljmp
jae
fmull
jne
fiaddl
adc
or
aad
rol
leave
mov
pop
call
mov
ret
or
addb
outsb
shlb
push
in
mov
lcall
sbbb
out
xchg
ret
aaa
mov
mov
addb
test
orb
outsl
aaa
mov
mov
sahf
add
test
call
and
idivl
mov
dec
pop
adc
mov
push
mov
out
inc
ljmp
sub
rolb
mulb
sahf
pop
mov
mov
pop
shlb
sar
mov
dec
aaa
add
mov
and
clc
sub
mov
mov
hlt
add
mov
lods
leave
xor
into
sub
outsl
lock
adcl
jbe
push
lods
shlb
xchg
into
int3
inc
into
mov
icebp
test
push
mov
dec
and
push
push
xchg
adc
stos
rorb
push
add
cmp
outsb
xor
lcall
sbb
inc
adc
xor
xor
xor
fbld
jb
cmp
or
inc
pop
cld
cmp
add
idivl
mov
sbbb
aad
and
in
stos
out
adc
enter
add
rclb
inc
push
imul
pop
sbb
push
andb
adc
add
pop
imul
dec
outsb
andb
gs
cli
out
push
add
scas
mov
les
popa
mov
xorb
push
mov
cmp
out
test
movsb
push
or
shrb
lcall
addb
adc
negb
jo
dec
jb
fwait
pushf
into
push
popf
and
jl
inc
fiaddl
cmp
sub
in
rclb
add
in
mov
xor
and
add
mov
scas
adc
out
into
ds
es
clc
call
cmp
xor
cmp
int3
mov
ret
cmp
das
nop
inc
sbb
sub
rcrl
mov
adc
pop
dec
or
and
sub
mov
or
push
pop
and
iret
and
cld
scas
clc
sub
repnz
loop
or
inc
push
jne
mov
pop
fs
push
pusha
mov
outsl
cli
scas
mov
iret
cmovne
pusha
cmp
nop
fld
inc
push
add
or
jle
and
dec
and
pop
sbb
inc
mov
inc
push
leave
dec
pop
and
jbe
rclb
pop
inc
or
int3
lock
enter
test
or
test
adc
sub
pusha
xchg
fmuls
dec
mov
enter
and
idivl
mov
pusha
adc
mov
lcall
mov
shll
adc
push
fwait
and
adc
add
push
add
int3
andb
jmp
adc
mov
icebp
inc
ret
aad
adc
push
sub
shlb
or
ja
xor
loopne
jmp
jle
push
mov
push
out
xchg
sub
ds
mov
fbstp
test
rolb
cld
xchg
inc
push
mov
inc
lcall
fildll
out
fwait
and
fldenv
mov
cltd
add
xorl
mov
mov
xchg
xchg
sbb
inc
add
lret
or
cmp
adc
adcb
data16
dec
or
cmc
mov
nop
into
decb
pop
loope
and
data16
sub
xchg
hlt
xchg
adc
or
push
shlb
pop
test
lea
sahf
lds
inc
add
orl
inc
and
loopne
mov
dec
add
pop
adc
fs
cmp
scas
fdivs
fs
or
shlb
fdivrs
jg
fdiv
outsb
mov
add
mov
sub
mov
adc
add
pop
loopne
lock
sbb
loopne
xchg
mov
xor
push
jne
inc
in
push
and
cs
ja
mov
adc
add
ret
leave
ret
jl
loopne
pop
push
testb
icebp
xchg
loopne
nop
ret
add
int3
fs
mov
lods
bndldx
fs
push
rcr
lcall
out
nop
sbb
and
pop
outsl
lds
sbb
and
sahf
movsl
shll
mov
stos
movsl
push
dec
sub
insl
ret
or
loopne
sub
lcall
add
pop
sahf
sub
mov
add
ffree
adc
sub
inc
mov
dec
pop
xor
inc
mov
mov
mov
and
loopne
and
add
out
dec
add
mov
push
xchg
sbb
and
add
dec
sbb
mov
xor
pop
popa
adc
xchg
sahf
add
lea
sub
add
pop
jo
push
add
adc
or
mov
jns
mov
ret
out
jne
push
les
mov
sbb
clc
pop
mov
loop
sbb
icebp
jg
movsb
add
push
cld
jbe
rolb
add
xchg
sbb
push
or
popa
ret
fbld
pop
in
pusha
adc
mov
or
xor
movsl
pop
push
xor
xor
sub
push
inc
ds
sbb
xchg
lret
mov
popf
sbb
adc
loopne
scas
aam
xor
sub
xor
and
mov
push
dec
andl
add
push
and
not
lret
cmpsl
adc
mov
ror
jo
mov
push
mov
cmp
push
push
sbb
pop
cmpsb
inc
or
and
lock
jle
or
andl
ljmp
ret
stos
stos
or
or
xor
mov
pop
xchg
adc
cmc
add
sahf
addb
movsl
in
adc
push
add
cmp
lock
pusha
sbb
shl
jl
mov
f2xm1
adc
fistl
and
test
add
xorb
sbbl
mov
lret
add
push
xor
lds
xchg
add
adc
push
pusha
int3
and
popa
push
cmpsl
test
movsl
mov
pop
repz
xor
outsl
enter
xor
aam
push
xchg
inc
insb
cld
fildll
fdiv
and
iret
jle
add
fbstp
cwtl
lock
add
dec
mov
inc
add
sub
xchg
mov
mov
inc
xor
adc
and
rorb
push
sbb
lcall
leave
cli
push
rorb
mov
js
incb
add
inc
or
gs
loope
xchg
dec
jne
iret
adc
mov
mov
inc
mov
dec
addr16
xor
adc
add
movsl
push
cmp
ficoml
jno
inc
adc
push
mov
xchg
test
and
or
es
xor
lods
insl
orl
ret
clc
adc
add
or
dec
and
sub
loope
icebp
push
outsl
les
ret
push
adc
bound
roll
xor
loopne
cmp
mov
sti
push
add
adcb
mov
add
add
test
inc
adc
and
hlt
sarb
xchg
mov
mov
nop
inc
es
push
or
lcall
or
test
es
loop
xor
bound
ss
add
lret
add
pop
fs
sarl
je
sbb
and
je
xchg
dec
pop
add
clc
xchg
add
inc
lret
or
ret
mov
mov
mov
daa
mulb
add
incl
add
lcall
adc
mov
xor
add
dec
xor
enter
mov
mov
shrl
push
clc
inc
ljmp
xchg
sub
in
and
pop
mov
and
push
xchg
sarb
ret
and
jle
push
push
and
and
push
rclb
mov
stc
jne
cmp
xor
sbb
and
jg
mov
add
rcrb
orb
hlt
rorl
mov
inc
xor
inc
cmc
cmpsb
mov
cmpsl
dec
add
leave
and
dec
or
add
adc
ss
pop
incl
jne
rcll
testb
roll
fmull
sub
mov
nop
xchg
mov
lock
in
mov
inc
shrl
inc
add
es
imul
jg
or
add
loopne
aad
xor
inc
push
pusha
das
add
fistpl
push
jne
inc
hlt
faddl
inc
add
adc
loop
loope
lret
add
adc
in
or
fmulp
cmpsl
lea
xor
jmp
fwait
into
stos
jl
pop
xchg
lret
mov
sbb
inc
les
add
sbb
call
fxch
push
xor
inc
dec
ss
cs
inc
rcll
filds
push
lea
pop
or
add
and
rcl
add
sarb
bound
popa
mov
int3
and
push
xor
fisubrl
popf
and
incl
xor
fidivrl
lods
cmp
leave
test
add
xor
enter
pop
mov
mov
mov
lock
push
or
mov
sub
loope
sub
add
mov
rorb
in
scas
adc
dec
add
nop
or
enter
mov
mov
inc
rorb
stos
call
sub
out
pop
scas
xchg
lret
add
push
cli
sbbb
cmp
aam
inc
ret
lea
xor
mov
pop
or
pop
pusha
adc
subb
mov
jo
cmc
nop
sarb
fdivr
in
add
shlb
mov
testb
xchg
faddl
add
mov
loopne
ss
push
bound
sbb
test
or
mov
mov
rorb
hlt
add
jo
stos
hlt
add
pop
sbb
incl
push
add
or
or
or
cmp
or
dec
mov
popa
test
stc
sub
cld
push
test
in
dec
mov
add
push
jne
inc
in
aam
ss
test
jmp
push
adc
ret
addl
dec
scas
add
sbb
into
add
xor
mov
ss
fadds
adc
fcomi
xor
pop
ficoml
cmp
fs
lds
lds
add
add
lods
add
je
cmp
add
inc
inc
stos
xor
fs
cmp
lock
add
add
das
cmp
sbb
add
sbb
ret
stos
cld
adc
xchg
mov
nop
add
pop
nop
outsb
scas
push
cmp
and
imulb
add
sbb
inc
adc
mov
das
inc
rcll
nop
aaa
iret
mov
xor
out
sbb
add
es
xor
push
adc
pop
andb
fcoms
add
outsb
adc
add
push
adc
out
cwtl
sbb
inc
adc
pop
sub
jns
jecxz
or
out
addl
sbb
iret
adcb
orb
cmpb
sub
scas
test
pushf
add
iret
dec
and
adc
mov
inc
ret
fwait
in
inc
pop
orl
scas
fs
sub
inc
dec
mov
fisubs
mov
enter
xchg
add
lods
fsubrs
lret
addb
sahf
add
into
push
jno
jge
mov
mov
adc
push
movsb
xor
orb
inc
push
jae
push
mov
add
fisubrl
mov
mov
std
testb
mov
out
and
adc
rorb
into
aas
fadd
mov
ret
lret
inc
bound
add
movb
pop
or
inc
and
aam
sbb
push
mov
add
out
add
in
xor
nop
sbb
sbb
lock
rolb
movsl
mov
sub
loopne
add
shl
add
scas
stos
test
and
jl
in
push
cli
dec
mov
sahf
inc
fisttpll
jmp
int
or
inc
and
or
les
mov
sbb
inc
movups
cmp
and
cmp
mov
push
jb
stos
add
xchg
test
add
out
orb
sbb
scas
xchg
bound
nop
ret
mov
inc
test
sub
dec
inc
dec
ret
and
loope
adc
stc
inc
dec
imul
add
push
ljmp
mov
adc
inc
orl
add
xor
stos
jle
jg
roll
xor
mov
arpl
popa
inc
add
nop
push
pop
cld
add
call
inc
xor
pop
pusha
mov
or
addb
pop
pushf
out
testl
fldt
mov
jg
cmp
xchg
shlb
shrb
leave
sub
sbb
adc
pusha
and
and
ret
pop
push
jns
sbb
add
inc
xor
jnp
subb
or
testb
mov
jb
test
add
pushf
shr
fsubp
pop
and
pushf
or
or
enter
fistps
dec
addb
pop
jge
lock
jo
add
adc
jb
in
pop
outsl
popf
es
push
adcb
or
sub
add
or
cmp
test
sbb
xor
dec
or
in
loopne
js
push
xor
mov
add
fs
dec
bnd
pop
xchg
rcrb
sbb
and
jle
mov
sbb
orb
dec
std
aad
pop
xor
lret
sub
movsb
xchg
mov
or
aas
pop
addl
bound
shl
add
xchg
pusha
js
add
and
repnz
outsb
xor
mov
fimull
push
stos
cltd
lods
sarl
hlt
nop
sbb
cmp
pop
mov
inc
and
cli
jecxz
push
je
mov
mov
add
push
adc
and
push
gs
add
int
pop
nop
dec
jne
pusha
out
shrb
mov
mov
decb
mov
hlt
subb
or
jg
jg
push
pop
or
add
sub
into
xor
push
and
mov
inc
push
push
testb
ret
mov
lret
push
xor
hlt
int
mov
sub
inc
es
addl
xchg
movsl
mov
sahf
into
or
push
xor
imul
and
adc
inc
loope
cmp
cmpsb
pop
addl
jnp
repnz
jle
mov
push
inc
jl
add
push
and
das
mov
shlb
inc
les
stos
push
adc
inc
stos
into
xchg
mov
and
pop
mov
cmp
cmp
add
lods
repz
mov
mov
pop
rclb
pop
adc
xor
pop
mov
cmpsb
jl
mov
out
test
and
add
jne
and
lods
xchg
jle
and
push
mov
bound
shlb
or
lods
fcoms
pop
pop
sub
sub
aad
mov
jo
xchg
fists
push
call
loope
adc
mov
pusha
andb
mov
pop
sub
sbb
push
loopne
sbbb
es
cmp
loop
pop
mov
adc
loopne
es
arpl
or
and
mov
xchg
pusha
out
ss
pusha
stos
add
divb
add
scas
bound
movsb
or
cmp
xor
or
push
xchg
movl
push
outsl
cmpsb
mov
fsts
imul
rorl
lcall
pop
add
rolb
xchg
movsl
jg
xchg
in
orb
es
add
inc
arpl
mov
inc
mov
sub
push
mov
push
adc
or
mov
jbe
sarb
inc
inc
inc
or
push
pop
dec
adc
cmc
jo
push
mov
sahf
mov
ror
cs
lods
ret
inc
pop
out
inc
add
mov
and
mov
sbb
xchg
sub
fnstenv
rolb
movsb
ss
loop
and
loopne
pop
or
lock
xor
daa
fnsave
ljmp
inc
or
jnp
mov
fadd
sbb
or
lds
xchg
lock
add
and
dec
popa
bound
mov
add
pop
adc
adc
lea
dec
xchg
sbb
pushl
push
adc
and
sbb
lcall
es
adc
cs
pusha
cmp
leave
iret
loope
xor
outsb
stc
add
sbbb
mov
movb
cmp
or
loopne
xchg
loopne
jo
ss
loopne
push
sbb
in
out
clc
out
push
shrb
dec
pop
inc
push
inc
jb
adc
ljmp
inc
xchg
dec
pop
mov
xchg
and
xchg
cmp
sub
sub
incl
and
inc
in
pusha
push
or
sub
mov
scas
add
mov
sbb
aad
sbb
jbe
fsubrs
fildll
ret
adc
and
imul
sub
adc
and
lahf
mov
stos
jmp
scas
push
mov
leave
add
lock
fsubrl
or
adc
cli
subb
push
cmp
shll
push
mov
in
enter
aam
adc
or
add
jg
or
ss
clc
pop
clc
push
es
leave
inc
xor
jo
outsl
push
jo
add
enter
adc
sbb
mov
inc
sub
and
dec
inc
inc
add
mov
call
clc
push
push
or
lcall
in
ret
mov
roll
lret
fildl
xchg
and
pop
sub
jmp
lock
inc
rolb
fadds
mov
add
mov
mov
adc
cmp
xor
inc
add
adc
adc
mov
mov
lcall
fmull
push
add
lea
sbb
add
sub
jg
lret
movsb
cmp
add
cmp
mov
test
lcall
mov
popl
push
pop
movsb
pop
ds
clc
inc
out
jmp
sbb
or
add
and
inc
cmp
push
mov
and
push
cmc
and
nop
inc
push
xchg
push
push
rolb
adc
pusha
or
add
inc
mov
iret
add
and
std
loopne
ds
or
std
scas
add
scas
mov
out
std
and
mov
mov
mov
cmpsb
xor
xor
int3
inc
sbb
sub
lds
movsb
pop
lods
or
iret
adc
lock
mov
push
adc
inc
mov
roll
hlt
mov
lock
jg
add
lock
add
and
or
or
ljmp
add
decb
inc
xor
push
cld
ss
incb
add
cwtl
and
adc
pop
or
aaa
or
adcb
mov
in
or
cmpsl
std
fwait
test
iret
push
add
mov
ljmp
add
icebp
mov
inc
or
and
or
inc
and
cmp
cmp
inc
mov
sub
xchg
inc
fnstsw
addb
and
insb
xchg
adc
xor
push
inc
add
ret
mov
jno
push
fimull
and
mov
pop
fildll
loope
mov
xor
and
push
xor
cli
or
subl
ret
int3
sar
ljmp
inc
mov
adc
xor
int
lcall
push
sub
faddp
lret
ret
inc
inc
inc
inc
jo
add
outsl
fistps
add
rcrl
mov
outsl
outsb
pop
xor
push
inc
pop
popf
adc
jg
scas
jo
fisubl
push
push
popf
push
faddl
xorb
xlat
cmpsl
cmc
dec
mov
jnp
movsl
xchg
mov
adc
mov
dec
add
inc
xor
add
mov
push
adc
xchg
xor
ret
lock
movsb
add
outsl
fisttps
xor
add
movsb
dec
pop
pop
add
jo
cmpsb
lock
xchg
mov
adc
add
add
mov
xchg
les
add
loop
and
xchg
mov
outsl
jg
mov
jmp
mov
jecxz
les
or
or
add
xlat
xchg
push
scas
rolb
outsb
and
ljmp
fadd
xor
mov
dec
loopne
push
xchg
xchg
xchg
loope
add
mov
lods
sti
sub
xchg
add
mov
imul
xor
pusha
adc
mov
rclb
adc
data16
lods
and
icebp
mov
add
mov
jo
push
mov
xchg
pop
and
add
clc
xor
scas
add
mov
loope,pt
sbb
add
push
lock
and
lock
hlt
xor
sub
jno
add
cmpsl
out
rolb
mov
mov
add
and
adcb
rcll
and
inc
xchg
add
daa
dec
add
or
and
pusha
loop
fwait
push
inc
hlt
pusha
or
inc
fsubrs
xor
and
mov
or
adc
push
js
ror
dec
or
orl
xchg
or
inc
sbb
add
and
sub
adc
mov
add
test
js
adc
bound
popf
inc
out
and
sbb
and
push
push
dec
ret
mov
aam
push
xchg
icebp
adc
mov
xchg
jl
or
jp
add
jg
pop
clc
test
push
push
rcr
and
repnz
inc
add
sbb
lea
cltd
jle
inc
outsb
aad
pop
or
outsb
popf
or
cmpsl
jecxz
outsb
sbb
adc
or
arpl
or
dec
inc
push
shrb
repnz
outsb
fldl
and
ja
mov
fildl
shrb
or
vmovdqu
or
and
or
or
hlt
rolb
sub
andl
je
test
mov
int3
rcl
mov
cmpsb
lret
inc
and
add
movd
icebp
fwait
movsl
mov
and
out
and
add
orl
lahf
sub
add
mov
mov
sub
sub
ret
pop
fwait
sub
or
orb
or
or
adc
sbb
push
arpl
inc
inc
xor
push
and
out
adcb
adc
push
inc
or
xor
jg
xorl
fs
rorl
fwait
inc
cmp
cmp
push
cmpsl
into
inc
dec
dec
shll
push
test
ss
add
push
mov
xchg
add
mov
aam
adc
adc
subb
mov
or
ret
and
and
xchg
adc
inc
add
xor
cli
and
cmp
popa
mov
inc
mov
sub
add
in
enter
sub
sbb
ror
pusha
jge
mov
cmpsl
add
sub
inc
clc
sub
stc
or
out
xchg
lods
gs
call
inc
test
jg
add
xor
mov
rorb
mov
ret
into
and
push
aam
enter
inc
mov
or
pop
ret
and
inc
add
addl
pop
insb
inc
es
loopne
adc
addb
inc
mov
jo
mov
mov
dec
hlt
jb
adc
sahf
rol
leave
fucom
mov
int
pushl
pushf
or
mov
addb
xchg
mov
dec
and
dec
cmpsb
es
cld
cwtl
rorl
stos
ja
mov
test
push
mov
dec
pminub
add
popf
mov
or
leave
cwtl
mov
or
andb
icebp
mov
ret
rcr
sbb
cmpsb
call
push
cmp
push
out
push
sbb
adc
or
push
fildl
or
add
lock
mov
cmp
mov
cmpsl
out
or
insl
data16
movsb
adc
ja
int3
dec
in
cmp
mov
out
xlat
mov
loope
and
pop
scas
add
mov
mov
inc
mov
cmp
pop
or
add
and
sbb
ljmp
jmp
sahf
mov
pushl
pop
insl
jb
xchg
and
or
inc
lcall
xchg
ret
cwtl
add
jnp
adc
xchg
xor
mov
fsubr
cld
incl
add
inc
mov
push
lahf
and
add
pusha
or
bound
push
xchg
iret
fs
add
jae
lret
cli
fs
leave
repz
ret
inc
loope
inc
jbe
into
ss
dec
loopne
sbb
pop
add
cmpsb
es
push
ret
loope
inc
test
cld
outsl
aas
and
mov
js
inc
jg
sbbl
sub
in
mov
add
lds
adc
and
hlt
push
inc
inc
pop
mov
add
enter
sahf
inc
xor
lock
add
test
mov
iret
push
ret
pop
xor
fwait
jae
movsl
push
not
stos
push
add
xor
sbb
mov
shll
ret
cmpsb
lcall
and
cmc
inc
ret
loopne
dec
or
lcall
inc
xchg
adc
add
cmp
adc
je
loopne
sbb
mov
in
dec
out
shll
or
mov
ret
lcall
xchg
adc
adc
jae
das
xchg
lods
push
int3
ds
test
xorb
orl
or
rolb
xor
mov
fisubrs
inc
movsb
or
clc
aam
shlb
inc
mov
cmp
mov
mov
inc
or
rcrl
mov
loopne
and
xor
in
xchg
test
xor
test
and
sub
cmp
rolb
movsb
ss
jbe
lds
out
cwtl
xor
adc
es
rolb
or
sub
scas
push
xor
loopne
inc
test
inc
add
mov
mov
lock
daa
jmp
in
fsubl
and
fwait
test
in
loopne
cli
inc
or
inc
mov
stc
pop
pushf
push
push
adcb
push
repnz
jmp
or
shl
mov
or
dec
inc
nop
fisttpl
in
pop
lcall
and
test
xor
add
rcrl
add
rclb
shll
inc
push
push
addb
popf
and
inc
xchg
insb
test
jmp
jno
sbb
mov
add
mov
or
stc
ret
sbb
pop
loopne
icebp
icebp
add
aam
xchg
outsb
dec
jo
and
push
ret
or
fcom
dec
fldl
add
aaa
xchg
pop
or
sbb
push
loopne
sub
inc
into
rolb
push
incl
mov
cmc
leave
and
mov
icebp
mov
adc
lea
test
imulb
adc
leave
into
popa
sub
je
cwtl
adc
int3
imulb
orb
loope
lret
jo
cmp
icebp
and
int
or
push
pusha
add
flds
jbe
jo
mov
or
jb
and
adc
push
lcall
je
adc
xor
xchg
and
shlb
xor
lret
inc
sbb
push
dec
add
mov
lods
pop
inc
loopne
and
daa
and
je
add
push
push
jge
shll
pop
sbb
cmp
push
and
add
xchg
rcr
popf
es
xor
out
sub
adc
adcl
cld
insw
xor
shlb
and
mov
mov
adc
xchg
adc
rcrb
pusha
pop
mov
cmc
ret
adc
mov
add
icebp
and
xor
push
mov
cmp
insb
push
mov
sub
ror
add
cld
iret
adc
and
lock
ja
push
adc
sub
fldl
loopne
mov
popf
and
mov
xor
fsubr
mov
mov
ja
cmpsl
enter
nop
sbb
aaa
mov
push
fs
mov
lea
leave
es
jo
inc
movsl
sbb
xchg
and
out
sub
jo
add
dec
or
and
mov
lret
and
cltd
les
fimuls
movsb
rorl
xor
add
or
mov
lods
mov
xchg
mov
vcmpss
sahf
pusha
cmp
add
rolb
push
nop
fsts
dec
aas
cmp
loopne
cmp
ss
xchg
out
dec
test
lcall
loope
xchg
and
dec
mov
mov
ljmp
negb
cltd
add
js
popf
adc
sub
sub
call
sbbb
and
dec
bound
and
pushf
sub
dec
loopne
shlb
pop
inc
aad
mov
xchg
add
call
mov
xor
movsl
sbb
and
push
push
pop
lock
or
sbb
shrl
mov
inc
decb
adc
stos
inc
or
incb
test
and
rcrb
fwait
addb
mov
add
je
sbb
xor
add
xchg
call
cwtl
loopne
cmp
adc
nop
xchg
or
ss
dec
mov
cmp
sub
mov
xchg
lds
lock
and
mov
add
lock
rcr
pushf
inc
add
add
adc
stos
negb
xchg
mov
inc
xchg
mov
stos
insb
adc
sarb
and
mov
mov
cld
fwait
add
into
pusha
and
or
push
and
cmpsb
loop
aaa
imul
js
nop
jg
sbb
roll
lods
lock
cli
add
sub
and
jbe
and
adc
or
into
jbe
dec
incl
aam
adc
inc
and
popa
add
lock
ja
scas
ss
add
icebp
add
pop
and
jns
mov
cmp
cmp
mov
xor
data16
testb
lock
dec
jo
ret
push
inc
ds
or
jge
and
outsl
outsl
pop
and
cmp
in
add
add
fidivl
add
inc
add
or
add
cs
lcall
sub
inc
ret
add
sahf
mov
adc
push
pop
pop
xor
xor
inc
adc
mov
pop
xchg
and
fwait
inc
mov
and
mov
dec
push
rolb
fs
adc
movsb
add
inc
loopne
xchg
mov
adc
js
inc
add
mov
adc
jp
cli
push
or
cmc
and
stos
inc
mov
stos
push
mov
cmpsl
int3
rclb
cmc
cmpsb
and
add
ja
mov
xor
inc
bnd
decl
and
mov
mov
psadbw
data16
fcmovu
rcl
lahf
inc
sbb
in
add
scas
pop
into
subb
jp
outsb
adcl
jl
inc
jg
test
adc
pop
push
mov
loope
in
xchg
das
and
mov
or
dec
imul
dec
or
cmp
mov
or
cmpsb
call
jg
inc
inc
mov
loope
jl
or
sbb
ja
or
and
inc
mov
add
mov
push
dec
outsl
fcomip
pushl
scas
ret
rcrb
push
add
mov
loope
cmp
pop
clc
jg
mov
fs
push
jo
add
scas
int3
dec
add
sub
lods
sub
movsl
xor
and
fsts
andl
cs
mov
cmpsb
or
or
mov
mov
xor
adc
repnz
pop
dec
call
mov
sahf
mov
cmp
in
dec
mov
xchg
inc
mov
xorb
cwtl
into
cmp
xor
add
add
out
inc
inc
incl
xor
cwtl
test
addr16
clc
ljmp
fisubs
adc
es
stc
cmp
mov
mov
mov
push
adc
loop
mov
js
add
inc
int3
xchg
lods
add
test
sub
push
ds
xchg
xchg
rcrb
cmp
pop
push
inc
adc
inc
imulb
lret
inc
adc
lret
pushl
call
movsl
add
cmpsw
lcall
daa
orb
inc
mov
ds
xchg
inc
test
aad
push
shl
xchg
or
pop
push
xchg
sbb
clc
jg
or
add
add
imul
xor
nop
pop
cmp
add
jo
jmp
es
pop
nop
push
jbe,pt
mov
movsl
add
gs
and
add
arpl
jle
and
sub
and
add
into
sahf
push
sub
xor
add
int
mov
rolb
or
fmuls
inc
fsubs
stos
or
pop
mov
cmp
sbb
pop
xor
and
nop
lea
and
pop
stos
jo
jmp
addl
xchg
mov
or
mov
mov
mov
test
push
movsl
mov
jge
dec
shll
add
test
lcall
xor
add
lock
push
fiaddl
and
ficompl
dec
mov
push
push
mov
pop
ds
jl
hlt
add
adc
jmp
adc
loope
mov
movsl
outsb
add
cmc
lock
dec
addb
gs
sar
push
jo
xchg
into
adc
push
dec
outsb
add
dec
inc
mov
sub
mov
push
imul
rcll
inc
jle
push
adcb
jb
inc
inc
sub
ljmp
rcrb
roll
pop
cmc
in
mov
shl
pop
jg
aas
push
outsl
pushl
sarb
xor
sub
pop
ret
dec
lock
inc
inc
jle
mov
lds
into
int3
es
outsl
sahf
test
int3
and
inc
jno
inc
cli
cmp
mov
pop
xchg
sar
push
rclb
inc
and
mov
inc
push
mov
adc
inc
nop
lods
mov
jmp
inc
jno
add
pop
mov
sub
in
push
jle
decb
dec
ret
or
rclb
and
xchg
push
aam
adc
sub
outsl
inc
and
inc
adc
jmp
pop
out
add
test
add
pop
scas
xorb
sub
push
add
rcr
inc
data16
jmp
inc
pop
pushf
clc
sbb
xchg
es
daa
flds
jmp
fstpl
pop
jmp
mov
xor
push
xchg
addb
and
inc
mov
mov
imulb
xchg
subb
add
sahf
jo
adc
inc
subb
sub
aas
fsqrt
xor
xchg
stos
lods
adc
add
sub
aaa
dec
mov
and
xor
lret
das
mov
add
popa
add
and
inc
clc
fildll
loopne
arpl
jne
dec
cli
push
nop
pop
add
insl
add
popa
subb
and
pop
adc
ss
and
insl
mov
add
cmp
mov
movsb
ss
data16
inc
and
ss
test
inc
clc
mov
cmp
adc
or
inc
add
dec
rcrb
pop
ret
ljmp
dec
cmp
mov
and
popa
xchg
xorl
pop
push
shll
and
lock
call
mov
pop
or
or
sub
test
es
cli
and
inc
mov
dec
sub
and
test
stc
movsb
dec
add
jmp
hlt
dec
adc
sbb
inc
push
mov
mov
xchg
pusha
add
cld
out
add
pusha
js
call
es
mov
lds
add
add
or
xchg
and
mov
or
es
mov
std
mov
clc
test
add
xor
rolb
or
es
dec
aad
mov
push
mov
and
xor
insl
lret
fwait
andb
bound
mov
inc
xchg
mov
mov
sub
jg
and
pusha
imul
stos
hlt
sbbb
adc
stos
pop
sbb
and
fidivrs
and
int3
jne
add
dec
xorb
pop
sbb
dec
sbb
xchg
loopne
leave
and
roll
dec
rorl
gs
mov
mov
leave
clc
pop
adc
jo
add
and
pop
adc
jmp
adc
loopne
or
add
inc
int
fprem
mov
lock
mov
cmpsb
or
pusha
push
mov
test
cmp
or
mov
xor
push
cmp
mov
mov
inc
mov
add
jecxz
and
out
add
int3
rolb
dec
jl
xchg
add
pop
hlt
cltd
mov
xor
mov
icebp
mov
pop
jbe
insl
dec
insb
mov
shlb
mov
xchg
fmuls
and
jmp
orb
mov
fbld
orl
mov
inc
sti
imul
mov
inc
or
loope
push
cmp
inc
mov
cmpl
add
xchg
dec
xor
pop
scas
xor
aas
andl
rolb
pop
hlt
or
or
dec
xor
mov
cmp
jmp
fiaddl
ds
int3
mov
shl
cmp
das
shlb
aad
push
fstl
or
mov
push
add
or
and
xchg
test
inc
add
and
aam
add
mov
sbb
shld
xor
cwtl
mov
movsl
lea
loopne
mov
sbb
fs
pop
mov
push
xchg
mov
sbb
xor
cmpb
ret
pushf
and
jg
addl
data16
push
xor
or
adc
inc
adc
or
enter
mov
clc
in
fildll
es
or
add
mov
outsb
mov
push
sub
cli
lods
cli
outsb
pop
push
sarl
add
jge
mov
lcall
sub
mov
pusha
mov
add
cmpsb
insb
mov
adc
cmpsb
mov
in
mov
dec
mov
popf
cmp
and
mov
outsb
dec
sbb
mov
dec
add
sbb
mov
mov
add
cmp
or
aam
adc
jnp
mov
sbb
sub
sub
std
inc
push
add
jns
stos
xor
rcll
testb
jge
stos
or
outsb
scas
idivb
lds
mov
sbb
sub
add
jne
js,pt
repnz
push
test
roll
pop
shlb
in
jl
jge
jno
add
cmpsl
cmc
clc
ljmp
clc
movsl
jno
outsb
sub
inc
inc
push
push
das
clc
popa
adc
movsl
mov
inc
xor
mov
cmp
aam
mov
xor
adc
ret
add
adc
add
std
rcrb
inc
adc
add
xor
xor
movsb
push
in
push
xchg
in
aaa
rcl
mov
sub
inc
dec
push
or
dec
rorb
cmp
dec
ss
inc
stos
ljmp
sbbb
xchg
adc
and
or
sarb
icebp
and
mov
icebp
jae
lods
mov
adc
jge
incl
enter
lahf
roll
sahf
and
and
fisttpll
dec
rcrb
fildll
dec
scas
cli
cmp
lock
or
loopne
mov
movsb
mov
mov
xchg
mov
adc
js
ss
roll
add
idivb
xchg
loope
rolb
filds
std
dec
or
test
dec
sbb
or
jo
loope
mov
dec
nop
popf
and
adc
or
push
push
dec
bound
popf
pop
adc
dec
les
jle
jne
outsb
xchg
xchg
cld
fstl
mov
mov
add
mov
ret
xchg
nop
or
decl
je
mov
jge
call
add
and
inc
push
mov
inc
mov
adc
xlat
jne
outsb
add
pop
popa
add
dec
call
add
dec
js
jo
dec
adc
lea
push
pop
mov
jne
rcrb
and
jg
mov
mov
or
add
shlb
and
sub
push
std
sbb
int3
fwait
fwait
xor
rorb
icebp
test
mov
or
stos
and
mov
adc
xor
mov
lcall
and
rorb
lea
pop
outsb
notb
cmp
js
dec
mov
lret
popa
cmpsb
mov
xor
xor
xchg
cld
cmp
adc
cmp
cmp
adc
pop
push
clc
or
ds
cli
dec
nop
fdivs
cmp
in
sahf
hlt
stc
out
pop
mov
jle
xor
cmp
in
imul
pop
pop
cmpsl
dec
adc
loop
call
ja
mov
sub
adc
or
mov
jb
dec
rcrb
mov
jb
jb
cmp
push
loop
fsubr
in
fisttps
movsb
cli
xor
pop
andl
sbb
xchg
sbbl
les
out
add
outsl
jg
pop
push
dec
pop
fs
cmc
or
ret
pop
push
jne
push
inc
xchg
pop
xchg
mov
dec
sbb
add
sbb
fbstp
xchg
bound
xor
or
push
xor
mov
inc
dec
in
cmp
out
insb
bound
cmp
or
cmc
insb
test
cmpl
pop
cld
jg
cmp
lock
jo
inc
xchg
sbb
in
push
pushf
adc
pop
cmp
lock
test
cwtl
mov
fdivrs
in
and
mov
adc
sbb
add
jo
sub
cli
shll
cmpsb
jo
push
or
mov
push
pop
fsubl
add
sbb
jmp
xchg
mov
call
aad
jg
and
sbb
shrb
fiadds
mov
scas
add
inc
js
push
sbb
in
ljmp
or
and
or
add
bound
pusha
mov
mov
cmpsl
and
mov
cmp
inc
scas
movsl
mov
fadds
fistpll
and
add
inc
es
jg
sbb
stc
add
push
incl
sbb
pop
sbb
dec
out
addl
jecxz
sbbb
loop
clc
add
sar
cwtl
js
or
mov
or
jp
sbb
imul
xchg
add
popl
jo
mov
mov
push
lcall
add
cmc
out
outsl
fdivp
mov
mov
xchg
ret
loop
xorl
movsb
xchg
inc
orl
gs
add
ljmp
mov
xor
int3
pop
clc
outsl
adc
or
dec
aas
mov
sub
in
push
add
inc
sbb
inc
sbb
pop
push
mov
mov
call
push
loop
sub
sbb
arpl
dec
push
push
add
adc
ljmp
fwait
and
loopne
call
rorb
enter
push
and
loope
test
push
adc
mov
subb
cmp
add
jnp
dec
xor
popf
sub
sbb
xor
mov
cld
add
push
xchg
stos
fcomps
test
push
and
xchg
call
cmpsl
adc
or
jge
outsl
ss
in
mov
add
add
add
sub
incb
sub
sbb
mov
inc
in
pop
xchg
inc
lods
adc
and
or
int3
add
inc
add
roll
and
fisttpl
push
inc
nop
cmp
mov
or
addb
add
xchg
shlb
iret
insb
mov
bound
subb
adc
lock
adc
outsb
enter
stos
xorb
pusha
add
lret
pusha
mov
dec
add
cmpsl
fimull
mov
xor
jge
pusha
mov
pop
cmpsb
mov
adc
adc
cmpb
push
mov
or
add
js
adc
orb
mov
addb
pop
xor
cmpsb
clc
outsb
pusha
orb
xchg
les
adc
idiv
add
orb
add
or
add
add
andl
add
idivb
adc
test
mov
add
fildll
cmp
xor
pop
add
dec
inc
jg
fs
sti
outsb
std
cld
inc
and
enter
sahf
push
mov
inc
loop
call
sahf
fisubs
push
test
popf
mov
inc
mov
mov
sbb
xor
mov
daa
inc
repz
jne
xor
insl
dec
dec
incl
or
dec
xchg
inc
test
mov
and
inc
jbe
pop
push
sbb
adc
test
mov
fldenv
mov
pop
and
ret
adc
adc
sahf
adc
out
out
xchg
inc
push
mov
jle,pn
outsb
mulb
xchg
and
and
movsl
ja
int
sbb
fcompl
repnz
adcl
add
inc
jne
fisttps
cmpsb
dec
clc
add
test
inc
add
xor
leave
rorb
add
aas
ror
popa
jecxz
inc
xchg
lret
pop
sbb
add
out
pop
inc
call
daa
lret
xor
mov
push
cmc
inc
dec
orb
aam
es
mov
xor
dec
dec
and
adc
fistps
decb
fwait
add
jo
or
dec
sub
test
mov
inc
sub
mov
outsl
xor
add
hlt
xorb
and
es
mov
xchg
pop
rdmsr
call
push
adc
es
and
add
jbe
insb
or
add
loopne
pusha
cmp
movsl
dec
inc
adc
lea
test
pusha
or
xor
mov
and
or
push
mov
or
in
pop
fs
mov
xor
push
mov
add
shll
and
aam
jne
add
cli
out
pusha
or
jmp
shll
mov
cltd
or
sbb
mov
fisubrl
inc
mov
test
clc
sbb
mov
mov
dec
add
add
bound
and
sbb
popf
mov
xchg
outsb
push
pop
mov
testb
loop
inc
cli
and
add
add
loope
sub
push
push
mov
cmp
fwait
and
jl
xor
rcl
mov
sub
aad
inc
mov
cltd
fsts
orb
test
xchg
push
jb
adc
cmpsl
into
ss
push
mov
in
arpl
or
and
and
faddl
push
push
outsb
scas
subb
adc
fadd
and
inc
pop
inc
mov
jo
loopne
rolb
sbb
mov
aaa
rcrl
or
xor
add
fcmovb
data16
cmp
mov
inc
pop
sub
xchg
pushf
test
mov
and
rcll
ljmp
rcl
rcrb
sbb
push
xor
and
push
std
or
lods
mov
or
loop
call
loopne
loopne
and
mov
dec
cmp
lret
xchg
xchg
loopne
pop
addb
and
pusha
dec
and
mov
fbstp
sbbl
lahf
sarb
pusha
mov
and
or
mov
in
test
je
pop
decl
adc
mov
movsl
xor
add
inc
inc
or
sahf
shlb
xchg
sbb
ljmp
jb
pop
icebp
push
mov
ficoml
adc
ljmp
and
popf
pop
mov
rcrl
call
jecxz
rcll
jb
push
inc
or
notb
pop
cs
or
es
mov
fwait
in
adc
dec
adc
lock
or
and
mov
sbb
add
inc
call
movl
xlat
adc
and
lcall
jg
pusha
sbb
pop
lods
shlb
and
push
call
fcmovu
into
mov
inc
and
adcb
dec
enter
lods
mov
pop
mov
fisttps
test
or
outsb
mov
loopne
sub
call
out
and
mov
and
push
mov
mov
clc
ja
cwtl
mov
mov
jp
stos
mov
cmp
outsl
xorb
lcall
sar
lcall
sub
adc
push
shl
pop
sbb
lahf
popa
rolb
pop
js
sbb
or
add
and
incl
xor
addb
cwtl
and
sbb
fnsave
sbb
xor
cmp
clc
adc
clc
sbb
aam
add
fs
push
rorb
inc
cli
movb
xor
inc
or
and
ja
lds
dec
push
ds
jg
lods
dec
or
std
fsub
xor
ficoms
push
push
xor
mov
icebp
xchg
inc
pop
pushf
frstor
and
adc
jbe
hlt
cmp
mov
dec
or
or
mov
incb
pop
push
add
pop
mov
icebp
add
call
inc
les
inc
jns
sbb
pop
gs
cmp
inc
jb
xor
test
mov
dec
stos
push
or
ds
xor
fiadds
mov
loope
jno
stos
out
imul
jg
sbb
inc
add
rorl
pusha
je
sbb
mov
add
pusha
sti
fwait
outsb
gs
push
mov
and
push
andb
ljmp
adc
mov
mov
jno
dec
aam
push
mov
cmpsl
loopne
popf
pop
incl
inc
push
push
nop
xor
or
mov
fsub
adc
sbb
jo
mov
add
movsl
add
outsl
fcoml
add
rorl
and
xor
add
add
add
inc
xchg
sar
sub
and
mov
dec
ret
add
test
dec
or
rcll
sbb
mov
lcall
loopne
mov
mov
pop
shlb
dec
xchg
cmp
push
imul
iret
adc
mov
add
inc
jle
add
pop
movsl
push
hlt
or
xor
cmc
int3
mov
aas
repnz
cli
loopne
je
cld
sub
into
add
jbe
mov
ror
sub
lock
lock
xor
adc
int3
flds
adc
and
ficoms
push
outsb
push
enter
lret
add
incl
rcll
and
movsl
mov
xor
adc
jg
push
mov
inc
push
addr16
xor
mov
sub
pop
shl
push
xor
mov
xchg
icebp
mov
or
mov
fdivs
push
jo
out
sti
outsl
test
and
in
insb
and
adc
push
clc
cs
and
data16
jb
or
ljmp
clc
mov
xchg
loope
xchg
subl
icebp
xchg
xchg
in
mov
data16
nop
add
js
lcall
movsb
pop
mov
push
rcrl
negb
shld
loop
inc
nop
ret
xor
dec
fsin
fisttps
inc
mov
loopne
mov
addb
fldenv
andb
lock
sub
dec
ljmp
mov
in
aas
add
pop
mov
pop
jb
or
jbe
pusha
mov
dec
inc
push
adc
mov
ljmp
fadds
dec
pushf
pushf
movsl
rcll
daa
sbb
imul
adc
fistpll
add
push
and
test
cmpsl
les
jg
outsb
mov
xor
add
cli
cs
pusha
add
mov
enter
mov
or
sub
test
and
xchg
gs
and
pop
std
cmpb
dec
aam
xorl
shrb
or
inc
dec
les
jg
sub
or
or
lea
loopne
xorl
cmpsl
sbb
add
xor
loopne
enter
mov
mov
cld
decl
jl
push
into
pushf
add
cmc
pop
pop
stos
jo
adc
notl
pop
loop
dec
inc
xor
orb
xor
fidivs
push
rorl
jg
and
pop
add
clc
xor
mov
xor
pop
mov
dec
jo
movsb
loope
xchg
add
notb
ret
stos
mov
fs
ret
testl
xor
pop
push
push
loopne
arpl
push
shlb
sbb
test
testl
pop
and
call
frstor
sahf
rorb
push
cmpsl
fsubs
inc
popf
sbb
es
xlat
and
rcl
xchg
push
rolb
or
shl
add
adc
add
push
jl
addb
mov
cmp
or
mov
mov
shlb
jo
add
nop
mov
mov
psadbw
pop
scas
call
lea
pop
sbbl
adc
and
lods
sub
es
add
nop
xor
mov
lock
mov
cwtl
test
icebp
jb
xchg
in
mov
adc
int3
inc
or
mov
fwait
orb
sahf
inc
dec
cmp
add
je
cwtl
inc
xchg
lods
scas
add
cmp
pop
mov
xor
mov
lcall
pusha
or
fimull
fdivrl
sti
mov
adc
adc
pusha
in
add
dec
inc
sbb
push
and
pop
lea
add
fnstenv
add
jb
mov
incl
andb
leave
sub
neg
icebp
push
notb
push
add
insb
or
lock
jmp
add
xor
mov
or
insb
data16
int3
dec
push
cmpsl
lock
ret
add
ret
dec
add
cmp
adc
arpl
ficoms
mov
clc
cmp
push
add
and
add
adc
les
adc
jbe
js
lret
adc
inc
test
mov
fmull
jmp
popf
int3
xor
cmp
lret
int3
movsb
stos
add
push
mov
pop
mov
out
or
lock
add
mov
dec
iret
add
fiaddl
fnstsw
inc
pop
je
filds
push
add
ss
push
pop
add
mov
jge
bound
mov
jno
adc
add
lret
add
imul
pop
sub
mov
lds
adc
lods
mov
push
movsb
adc
add
push
mov
icebp
lds
stos
dec
and
push
cli
stos
loopne
movl
testb
orl
mov
dec
fwait
mov
in
stos
sub
adc
push
stos
into
add
fsubrs
adc
int3
int3
ficoml
pop
pop
inc
inc
mov
movsb
ss
fbld
sub
fisttpl
cmp
in
adc
add
jns
add
jg
cmp
add
pop
push
add
aam
sub
add
ret
add
or
mov
sbb
mov
push
cmp
ja
push
or
mov
sti
ficomps
pusha
or
or
dec
mov
add
popa
sti
xchg
and
inc
add
inc
sub
and
inc
add
pop
cmp
mov
push
filds
fistpl
hlt
addl
orb
xor
mov
mov
add
jmp
dec
jle
ret
rorb
lock
ret
pop
pusha
xlat
fwait
cmp
add
adcb
xorl
cmp
test
incb
mov
xor
out
rorb
push
test
mov
add
mov
and
or
mov
enter
and
and
fwait
inc
add
mov
fistpll
test
adc
adcl
and
orl
inc
and
dec
mov
and
or
adc
into
and
lret
add
roll
clc
paddusw
dec
mov
mov
add
lret
add
pop
arpl
dec
icebp
lock
fisttps
testb
add
jecxz
icebp
enter
fldl
pop
jb
int3
mov
pop
cmpsb
sbb
add
mov
sub
mov
or
xchg
rolb
pusha
inc
or
jle
cs
mov
mov
ret
adc
xor
mov
and
or
or
and
or
pop
jl
mov
add
dec
ret
or
add
dec
nop
scas
pop
mov
or
add
or
icebp
mov
add
pop
cmp
mov
scas
sbb
cmp
xor
and
sbb
mov
pusha
or
icebp
ret
xor
mov
or
add
jo
leave
ret
ficoml
pusha
adc
icebp
rcr
fs
inc
sbb
mov
lds
mov
and
add
push
dec
pop
xor
rolb
or
mov
jo
lcall
aam
loope
das
stos
lods
scas
inc
popa
push
adc
inc
sbb
mov
xor
mov
icebp
mov
push
inc
fwait
mov
fsubs
add
sub
add
dec
sub
in
fidivrl
std
inc
outsb
les
fldcw
orb
subb
hlt
in
lcall
add
mov
ss
pusha
or
dec
or
orb
hlt
aaa
pop
jnp
inc
sub
lcall
push
or
in
and
xchg
inc
div
inc
add
aad
or
jbe
or
addb
in
mov
cwtl
push
mov
push
aam
je
jle
push
or
incb
pop
mov
mov
jge
inc
mov
and
out
mov
repnz
movsb
pop
xlat
mov
pusha
mov
sahf
popa
push
rcrl
pop
hlt
sub
cmpsl
addb
cmpsb
int3
inc
pop
xchg
mov
incl
lret
mov
js
and
inc
or
sub
mov
ljmp
mov
sahf
mov
adc
cmp
andb
inc
push
mov
inc
outsl
sbbb
and
add
sbb
add
pop
sti
inc
pop
inc
inc
pop
dec
push
pushf
mov
call
bound
in
fsub
mov
mov
pushf
cvtps2pd
push
loopne
pop
shll
jg
fldenv
movsl
add
cmp
add
mov
sbb
xor
and
rcl
xor
popa
orl
ret
mov
loopne
sub
fdivrs
movsb
dec
push
and
std
pop
call
int3
ret
dec
sub
add
jmp
mov
push
ret
pop
ljmp
mov
loope
lock
loope
in
dec
lods
lock
xchg
imul
dec
pushf
cld
dec
adcb
add
push
push
and
dec
mov
jo
shlb
lock
inc
pop
fsts
adc
loopne
shll
outsb
es
out
jo
adc
les
mov
lods
fisttps
cwtl
or
inc
inc
jb
fiaddl
sbb
rolb
test
push
roll
ss
or
xlat
xor
xor
aam
mov
push
iret
insl
pop
subb
jmp
sbb
mov
pop
fbstp
add
add
rol
xor
push
mov
loop
or
leave
icebp
adc
xchg
mov
sub
push
jp
push
hlt
and
push
mov
hlt
pop
ret
in
xchg
xor
dec
loop
jo
cmp
add
cmp
push
aaa
nop
push
jno
adc
xchg
pop
js
cltd
ljmp
test
test
inc
repz
lock
ss
push
inc
shlb
ret
jg
int
fwait
lods
add
in
jmp
aaa
jo
cmpsb
shlb
mov
add
lods
jno
mov
pusha
add
add
fwait
imul
imul
mov
mov
and
pusha
xor
ds
shrl
out
pop
lret
scas
pop
mov
push
sbb
jmp
arpl
push
outsl
outsl
jp
insb
je
cmp
add
and
add
jecxz
idivl
dec
sbbb
fisubl
push
push
out
dec
sar
pop
cwtl
dec
mov
jmp
sbb
push
add
jae
outsl
inc
ljmp
push
add
filds
rolb
cmc
xor
sub
inc
sti
dec
ds
mov
push
lret
push
and
sbb
adc
xchg
pusha
inc
add
pushl
pop
out
pop
adc
loop
sbb
jg
or
mov
or
mov
add
mov
lds
and
lock
mov
pusha
jl
cld
xor
pushf
stos
and
mov
jbe
les
pop
lock
xchg
ret
lea
fimull
scas
jo
mov
mov
mov
stos
mov
cli
pop
sar
jb
cwtl
mov
add
pusha
es
ja
sub
roll
cmpsb
add
add
out
sbb
add
scas
sbb
ficoms
scas
add
adc
push
add
loopne
in
mov
jecxz
or
and
shll
repnz
dec
sbb
mov
mov
ljmp
sbb
inc
lock
mov
ss
int3
add
mov
in
inc
mov
cmp
in
or
xchg
mov
insb
jo
clc
jmp
nop
pop
sbbb
rolb
mov
xchg
cmp
adc
mov
inc
mov
subl
pop
inc
pushl
psrlq
and
nop
dec
outsl
aaa
insl
subb
cmp
in
mov
inc
subl
xor
in
cmp
test
or
shlb
mov
aad
les
jo
ffreep
inc
and
ss
xchg
pop
pop
out
add
jg
mov
mov
lods
push
pop
rolb
cmpl
add
out
jle
sbb
mov
sbb
clc
clc
imul
je
ret
mov
loopne
sbb
and
dec
aaa
lods
adc
into
lret
sbb
aad
loope
push
xlat
data16
aaa
in
mov
pop
dec
clc
frstor
jb
lds
xor
jge
mov
jno
lock
add
pop
inc
fildl
or
inc
lds
inc
mov
xor
sbb
cmp
push
pop
or
push
jg
push
adc
and
shl
into
mov
aas
pusha
dec
and
xor
push
push
push
adc
lds
insl
clc
inc
adc
inc
in
loope
push
mov
mov
enter
or
fcmove
inc
lock
ss
lock
dec
jo
cmp
mov
sbb
rcrb
xchg
or
and
inc
out
xor
bound
fidivs
aaa
adc
and
cmp
mov
ljmp
movsb
outsl
cmp
mov
mov
pop
sti
inc
add
int
stos
ret
mov
adc
mov
sbb
rcrl
or
test
mov
xor
iret
inc
xor
das
shrb
inc
outsb
or
push
or
adc
test
das
clc
scas
xor
imul
psubusb
outsb
adc
push
xchg
out
pop
jbe
loope
dec
mov
mov
lret
mov
add
loope
lock
loope
add
into
fwait
jne
mov
push
hlt
pop
push
in
pop
ret
pop
incl
mov
add
add
xchg
push
sbb
mov
add
jle
sbb
lcall
push
xor
inc
stos
sbb
mov
les
lods
or
sar
add
out
fnsave
xchg
push
inc
dec
xchg
js
mov
lret
xlat
xorb
add
add
clc
mov
movsl
inc
add
ret
or
sub
insl
add
push
int3
ret
jne
aaa
mov
ret
or
imul
jbe
push
jl
imul
test
add
dec
mov
aaa
inc
lock
lds
in
out
xor
push
incl
sub
push
and
push
pusha
cmpl
in
mov
stos
pop
dec
push
add
sbb
and
sbb
ss
popf
adc
push
inc
push
add
sub
mov
lds
imul
xchg
movb
test
clc
push
xor
xor
and
pop
js
mov
and
clc
aad
or
pop
adcb
add
andb
leave
clc
add
dec
decb
sub
ljmp
or
orb
fcoms
sbb
and
dec
push
push
add
mov
int3
mov
pop
adc
push
adcl
mov
mov
adc
inc
test
add
iret
or
shrl
jo
les
rcll
andb
cli
and
fdivs
push
stos
cltd
and
push
jle
xchg
ss
or
cmp
in
or
scas
or
add
les
sub
adc
dec
stos
insl
outsb
out
subb
adc
fisubrs
fcmovbe
sub
clc
lea
push
push
out
das
mov
push
mov
cmove
loope,pn
insl
lcall
add
gs
add
pusha
cmpsl
mov
rcll
mov
push
imulb
lds
adc
daa
cmp
add
sbb
adc
add
dec
shlb
sub
inc
faddl
js
push
repz
add
sub
fwait
inc
add
sti
adc
fildll
ret
shrb
add
fldl
mov
add
cmp
inc
xchg
es
adc
into
push
and
jbe
add
mov
inc
dec
or
into
add
sub
leave
je
decl
fcoml
add
add
cmovo
popf
int3
and
popf
leave
dec
bound
fildl
xor
add
test
xchg
outsb
rorl
testb
inc
outsb
or
pop
daa
lea
into
lds
nop
addb
or
add
sub
out
out
add
adc
cmp
sbb
add
mov
lds
out
mov
movsb
stos
rolb
push
shll
lods
stos
ss
int
and
adc
dec
xor
add
cmpsb
or
aaa
jb
cmp
push
lret
into
push
xchg
mov
inc
imulb
sbb
je
dec
add
shlb
inc
jl
gs
add
inc
shll
lea
fisttpl
inc
stos
pop
ret
into
mov
test
push
lock
push
loope
in
xor
xchg
enter
add
mov
adc
cmp
sbb
mov
jmp
in
leave
and
in
cmp
inc
mov
ljmp
fnsave
rorl
aam
mov
dec
insb
xchg
ficoml
out
dec
flds
out
or
hlt
mov
clc
out
out
xchg
lret
pushf
popf
cmp
add
pop
dec
xor
orl
and
push
sbb
cmp
es
adc
pop
ror
dec
pop
shrl
test
call
mov
dec
xchg
mov
cs
cwtl
test
and
movsl
shrl
nop
cmp
xor
and
adc
xchg
mov
and
push
mov
cmp
loop
mov
mov
inc
pop
sbb
cmp
and
stos
shrl
lret
push
mov
mov
adc
sub
loope
sbb
ljmp
add
fcoml
xchg
enter
add
roll
lcall
dec
int3
add
xchg
mov
add
adc
push
mov
mov
adc
add
fstpt
cmp
popa
add
xor
xchg
out
mov
shll
add
aam
push
mov
sbb
sbb
test
mov
pusha
and
mov
lret
aaa
lds
ret
in
js
push
and
inc
stos
mov
and
call
cli
sbb
loope
sub
adc
add
jb
rclb
imul
push
mov
sbb
xor
lock
adc
mov
nop
and
mov
mov
and
xor
mov
xchg
loopne
sub
shll
or
loopne
dec
scas
outsl
inc
outsb
jmp
data16
lock
mov
cmp
ljmp
scas
and
mov
push
jecxz
push
xchg
or
inc
inc
test
out
rorb
and
ljmp
rolb
push
add
add
xchg
into
sbbb
js
pop
insb
inc
inc
inc
pop
rclb
pop
add
and
adc
add
mov
lea
adc
mov
loopne
dec
add
jl
pop
es
sbbb
fdivr
outsl
push
sbb
lret
mov
xlat
cmp
mov
lock
pop
cmp
dec
ss
mov
inc
mov
add
sub
push
cmp
push
dec
mov
rolb
inc
ja
jns
ja
fwait
mov
fidivs
add
mov
mov
pop
cmp
or
std
out
ret
hlt
nop
xorb
mov
pusha
fildl
ret
in
es
inc
add
sbb
orb
mov
mov
or
sahf
add
into
lret
mov
xor
sub
add
mov
mov
and
pop
std
mov
cmp
test
mov
and
imul
rclb
pop
push
inc
add
testb
mov
push
lock
adc
es
add
add
outsl
sbb
add
xchg
cmc
xor
lret
adc
inc
icebp
fbld
cmp
les
push
decb
sub
dec
xchg
or
mov
sbbb
or
aaa
add
push
mov
sub
inc
mov
adc
xor
mov
and
add
push
mov
xchg
sub
stos
dec
cmc
inc
pushf
fcoms
adc
sub
and
xor
xchg
test
icebp
dec
and
and
or
adc
addb
shll
pcmpeqw
mov
sbb
push
cltd
aaa
xor
mov
add
add
addr16
imul
cmpsl
jmp
inc
sbb
adc
adc
or
inc
and
outsl
cmpsb
aaa
sbb
jle
push
loope
add
xor
sbb
sub
sub
es
lahf
inc
sbb
inc
cmp
mov
cmp
enter
cmp
xor
loopne
inc
insb
jecxz
jl
ret
adc
in
ljmp
icebp
add
jge
lds
insb
insb
and
daa
and
pop
es
in
lcall
cmc
dec
xor
mov
adc
sahf
add
jle
push
or
or
sbb
mov
andb
sarl
stos
std
popf
and
repnz
popa
sahf
wbinvd
loopne
pop
shlb
nop
mov
jne
fld
add
adc
orb
mov
call
mov
xchg
cs
lahf
lcall
xor
pusha
add
add
call
cmp
popf
adc
cmp
push
pushf
and
mov
and
roll
call
dec
mov
notb
xor
shll
adc
loope
add
repnz
nop
add
add
insb
out
push
in
loop
enter
les
inc
outsl
or
lock
rcrb
mov
xor
xor
sbb
inc
dec
test
decl
aam
rclb
ljmp
add
jge
ja
or
push
insb
mov
sarb
inc
scas
cli
addb
es
inc
and
push
mov
or
pop
dec
cli
nop
and
roll
mov
outsb
or
lock
lret
shll
add
rorl
lds
cwtl
and
push
mov
xchg
gs
clc
fldt
xor
sub
and
cwtl
push
test
dec
xor
hlt
adc
andb
jle
jecxz
sar
push
pop
mov
cmp
push
add
repnz
sbb
mov
push
js
inc
push
lds
dec
inc
sbb
pushf
mov
add
insl
inc
add
mov
or
mov
or
loopne
mov
sbb
jo
add
sbb
xor
xor
mov
and
outsb
or
dec
outsl
inc
pop
mov
mov
push
add
in
mov
aam
es
loopne
fyl2x
lea
aaa
shrl
es
jle
cmpsb
lcall
jg
lock
adc
mov
inc
adc
fdivs
ss
das
or
aad
add
push
cld
hlt
loopne
adc
mov
movsb
in
dec
pop
push
dec
enter
jo
pop
cwtl
lods
sbb
iret
cmpb
pop
cld
pop
dec
add
adc
mov
es
movsb
cmp
and
inc
xor
jb
dec
add
jg
pop
dec
mov
in
mov
test
mov
aam
sar
mov
mov
add
inc
mov
push
and
insb
add
sub
ljmp
adcb
dec
add
cmp
adc
pop
dec
mov
std
xor
rorl
cmpsl
push
pop
fistl
mov
std
and
test
push
add
clc
xor
add
ja
and
jno
icebp
xchg
mov
lret
ret
xlat
push
mov
dec
adc
subb
frstor
push
pop
mov
jl
push
ds
jmp
pusha
or
adc
ja
fwait
push
pop
fdivrl
xor
dec
and
nop
rorb
ja
xor
sub
mov
cld
filds
dec
repnz
cmc
lds
and
sbb
dec
adc
sar
loopne
call
xor
pop
fmuls
jo
hlt
cs
mov
ds
push
inc
cmp
hlt
enter
ret
pop
imul
jle
inc
mov
les
jb
sub
or
mov
add
or
jg
in
mov
in
mov
es
notb
clc
adc
sbb
adc
cmp
and
cmpsl
flds
add
mov
test
cld
popf
cmpsl
lret
adcb
out
incl
and
push
add
cltd
mov
in
mov
lds
and
ljmp
sbb
iret
adc
out
call
add
in
testb
out
mov
data16
test
cmpsl
fdivrs
dec
mov
mov
add
icebp
and
add
ss
test
icebp
adc
stos
insb
or
cmp
pushf
mov
leave
cmpsb
cmp
clc
cli
mov
call
lret
cwtl
add
push
push
fsubs
jo
push
rolb
mov
nop
add
stos
cmp
or
andb
hlt
pop
inc
loopne
loopne
pushf
sub
add
sbb
scas
pop
shll
hlt
popa
shll
inc
sahf
xor
fistpl
ret
adc
jno
addb
imul
jg
mov
cmpsl
fiadds
sbb
or
cmc
pop
or
add
mov
mov
add
add
and
sbbb
je
push
adcb
push
icebp
and
push
adc
loopne
xchg
push
add
jo
push
or
mov
test
ja
adc
mov
pop
adc
inc
push
cmpsb
insl
mov
xchg
push
ljmp
pop
xchg
ss
mov
movsb
cmp
xor
sub
mov
mov
je
mov
xor
ror
dec
mov
pop
xlat
add
ss
hlt
cmpsb
jne
lods
orb
xor
ljmp
push
mov
xor
xchg
dec
add
push
aas
add
push
std
adc
inc
inc
mov
xor
mov
and
jle
repz
fwait
dec
ss
and
aaa
std
ret
adc
hlt
ret
dec
ss
add
inc
push
push
dec
call
lret
call
scas
mov
mov
pop
rclb
aaa
add
cmp
dec
mov
and
push
adc
stos
lock
pop
xchg
aam
inc
jae
loop
clc
ja
xchg
ret
cmpsl
roll
jecxz
rcll
push
fsts
test
sub
add
add
mov
dec
sbb
inc
xchg
lcall
bound
filds
adcb
xor
popa
inc
bound
adc
out
adc
sbb
faddl
xor
cmp
pop
data16
cmc
pop
out
sbb
enter
or
loopne
mov
mov
xor
add
add
ja
mov
xor
ret
clc
add
fsin
and
xchg
fwait
jbe
pop
movsb
mov
ljmp
inc
cmc
orb
icebp
xor
mov
mov
cmp
sbb
int3
add
pop
mov
cmp
sbb
or
scas
mov
lcall
pop
xchg
mov
inc
or
aas
fstps
lcall
negb
fldcw
nop
stos
sahf
pusha
mov
cld
xchg
and
cwtl
cmp
roll
mov
or
scas
out
js
add
xchg
dec
mov
jle
pusha
or
inc
inc
es
mov
inc
xchg
cld
daa
dec
sbb
push
leave
insb
jmp
aas
sbb
fwait
mov
mov
rclb
inc
or
adc
ffree
in
adcb
mov
rorl
or
mov
inc
adc
mov
cmp
dec
add
ss
push
inc
icebp
jb
mov
adc
outsl
jl
rcl
jbe
or
and
dec
std
fldl
adc
andb
call
sub
pop
inc
ret
into
add
xor
rolb
sahf
jp
lahf
or
test
sbb
xor
cmp
pop
sbb
adc
imul
ds
addl
xor
pop
xchg
mov
out
lcall
test
adcl
call
mov
xor
push
adc
outsl
mov
push
adc
mov
into
into
lcall
dec
orb
add
and
testb
inc
add
ret
flds
rcrl
aas
shl
fisubrs
hlt
mov
ret
dec
stos
or
nop
and
add
mov
fwait
jle
adcb
and
jo
or
mov
loop
and
push
add
mov
add
xchg
pop
push
cwtl
iret
rcl
add
fsts
and
inc
dec
inc
xchg
cmp
fnstcw
cwtl
sub
sub
pop
lods
inc
aad
sub
loop
cmp
adc
ds
mov
sbb
mov
xor
daa
subl
insl
lret
repnz
or
xor
and
mov
add
jp
inc
add
push
cmpsl
jbe
test
movsb
sbb
mov
test
sbb
pop
or
out
and
push
test
test
fstps
pop
int3
xor
xorb
popa
xor
mov
lret
xor
sub
into
into
adc
divl
mov
inc
mov
movsl
add
outsb
outsb
out
shlb
outsl
mov
mov
cmpsl
add
sbb
pop
gs
bound
cli
jp
add
lret
push
adc
jge
hlt
stos
lea
xchg
and
pop
add
mov
add
loop
xchg
testb
mov
inc
jecxz
cmp
mov
mov
shl
adc
test
jbe
mov
add
inc
shlb
sub
sub
into
mov
mov
lret
leavew
fiaddl
push
xor
mov
add
sbb
pushf
sub
and
mulb
decl
add
dec
ret
inc
cs
cmp
adc
bound
xor
fstpt
outsl
repnz
cmp
add
inc
loop
and
and
inc
and
xchg
rcrb
loopne
mov
add
dec
insl
or
jno
push
rclb
fsubrl
xchg
outsb
or
arpl
and
fdivrs
mov
scas
cmp
leave
lcall
add
sub
sub
outsb
notb
popa
mov
xor
add
dec
sub
jmp
and
pusha
xor
push
stc
add
push
lcall
and
rcll
pop
aam
push
jmp
and
cmp
adc
push
dec
sub
std
stos
loope
jge
in
add
mov
pop
and
mov
push
push
es
sbb
outsb
push
pusha
add
dec
popa
xchg
cs
nop
loop
and
jl
loop
and
cmp
sbb
add
iret
sahf
lcall
add
and
jbe
incl
mov
dec
pushf
pop
movsl
cmp
and
or
or
aaa
inc
cmpsb
stc
or
or
lret
dec
adc
stos
mov
jecxz
loopne
clc
or
insl
cmpsl
xor
or
adc
bound
mov
add
mov
mov
xchg
push
mov
or
insl
pop
inc
test
daa
mov
xlat
cmp
pop
mov
and
mov
enter
jo
and
out
and
push
mov
add
iret
or
cmp
clc
and
xor
scas
in
stos
loop
movsb
or
pusha
push
lock
mov
mov
pushl
insl
lret
in
aad
push
mov
andl
dec
and
incl
sahf
loope
rorl
popf
movsl
fisubs
xchg
pusha
xor
fsubp
mov
and
test
add
and
mov
jo
inc
ret
adc
sbb
and
xor
sbb
adc
icebp
icebp
jmp
shrb
add
and
orb
outsl
dec
loop
pusha
daa
push
jge
add
es
fidivs
aam
cwtl
inc
loopne
loope
cli
aas
rclb
es
cmpsl
loope
add
or
sbb
mov
push
in
and
sbb
ds
cmc
inc
inc
push
mov
cmpl
lock
add
cmp
and
loopne
dec
loope
add
push
push
int3
out
mov
cmp
pmulhw
pusha
sbb
pusha
cld
cmovns
mov
sub
mov
sahf
mov
mov
mov
push
jo
xor
scas
xor
nop
fwait
movsl
add
jmp
inc
and
nop
mov
pusha
add
push
jbe
mov
mov
add
xor
and
pop
cmp
xchg
cmp
je
lods
orl
sub
out
cmpsl
movl
pop
add
add
outsb
xchg
movsb
nop
cmpsl
mov
push
imul
inc
xchg
and
scas
imul
ret
es
xchg
div
add
and
out
ret
sti
push
pop
pusha
add
arpl
sti
testl
jle
jecxz,pt
ret
dec
pop
in
add
testb
push
push
push
test
jns
xor
mov
pop
add
ljmp
scas
aam
adc
xor
cmpsb
mov
sbb
mov
ficoml
nop
jbe
stos
adc
dec
xor
pop
sbb
inc
into
pusha
test
push
incl
xor
pushf
mov
ljmp
pop
mov
xchg
cli
aaa
test
nop
cmp
shrl
push
add
pop
dec
inc
add
jno
xlat
adc
shll
aas
out
jo
cli
fcos
jmp
sbb
inc
mov
into
inc
test
mov
and
xchg
add
sbb
rcrb
movsl
ja
lea
xchg
add
adc
mov
adc
std
add
ja
add
lock
and
dec
jmp
mov
ja
js
lods
insb
fldenv
add
jno
cmpsl
or
cli
ja
jecxz
sub
mov
pop
rcl
das
ret
sbb
into
xchg
in
rol
mov
fwait
aad
xor
sahf
mov
stos
fimull
ret
les
shlb
inc
pusha
enter
xchg
dec
xor
stos
imul
aas
and
sbb
or
add
inc
jae
lcall
and
outsl
and
and
mov
add
inc
imul
ret
push
lods
icebp
jg
dec
mov
arpl
lock
inc
call
mov
add
jmp
dec
popa
and
dec
xchg
jg
movsl
mov
mov
xchg
fwait
push
icebp
push
daa
xchg
nop
push
loopne
jno
jo
jno
inc
ljmp
push
inc
push
inc
loop
xchg
and
or
jo
jmp
inc
adc
adc
or
lods
ret
ficomps
mov
sub
mov
scas
call
into
ffree
jecxz
inc
std
jne
sub
xchg
xor
jmp
jbe
push
mov
rolb
popa
push
pop
sub
mov
std
jno
shll
icebp
pop
insb
fstpt
dec
mov
int
add
cmp
xor
scas
repnz
add
sbb
adc
subb
scas
lock
xor
and
aad
inc
mov
mov
or
nop
xchg
arpl
dec
jae
mov
sub
push
pop
lcall
or
inc
mov
cmp
push
rcrb
inc
mov
inc
add
pop
in
mov
fs
call
push
sarb
test
pop
mov
test
mov
xor
lock
xchg
filds
mov
mov
sbb
add
sbb
or
inc
mov
sbb
cwtl
std
add
adc
add
fimuls
mov
adc
add
jmp
negb
mov
sub
nop
add
lcall
xchg
push
add
adc
popf
mov
add
pusha
mov
cmp
shll
add
adc
lds
dec
jle
fisttpll
imulb
adc
jle
inc
call
shrl
stos
dec
push
popa
enter
dec
mov
lods
adc
je
mov
add
mov
pop
cmp
mov
lcall
push
add
leave
movsb
mov
shlb
stos
mov
push
or
jmp
rcrl
inc
roll
ja
dec
scas
sub
outsb
add
lret
leave
and
dec
inc
loope
jno
fisubrs
cmp
decl
rorb
loopne
nop
adc
add
xchg
call
pop
dec
pusha
jne
shll
mov
test
bound
mov
test
sbb
and
call
push
and
adc
sub
mov
push
enter
or
mov
adc
test
mov
test
jp
mov
or
aad
lcall
mov
mov
xchg
xor
test
jo
xchg
add
inc
mov
mov
in
adc
orl
dec
jnp
pop
scas
xchg
mov
push
int3
ljmp
inc
loop
push
mov
mov
adc
xchg
mov
push
xor
mov
xor
js
data16
mov
xchg
cmpsl
lds
adc
lcall
or
push
repnz
xchg
inc
orb
mov
mov
fwait
add
adc
inc
addb
xchg
pop
popf
mov
ss
xchg
insb
and
sbb
mov
cmp
fisttpll
lock
ret
das
inc
cwtl
incl
pop
sbb
sar
test
add
icebp
mov
js
pop
add
add
adc
cmpsl
cmp
or
add
mov
insl
xchg
sbb
adc
test
push
or
test
jo
je
data16
add
ljmp
jge
sbb
and
orb
pop
mov
in
shrl
mov
or
push
int
mov
insb
in
mov
mov
push
inc
lret
adc
inc
add
add
cmc
fildl
jb
enter
and
push
incb
leave
fs
lret
or
das
add
dec
add
adc
xchg
call
add
add
sbb
addb
movsl
or
add
sbb
or
and
testb
or
and
add
std
sub
add
adc
inc
mov
pop
aad
dec
hlt
inc
mov
pop
add
rorl
cmc
fwait
orb
das
les
xor
cmpb
push
fnstcw
xor
cld
clc
xorb
push
mov
orb
push
sub
fidivrl
lock
or
fs
and
jno
daa
sbb
and
jo
push
fmull
jmp
push
sbb
fwait
ret
mov
ds
cmp
mov
ret
movsb
dec
or
inc
adc
adc
pusha
pop
mov
push
aam
mov
cwtl
jp
inc
lret
mov
lock
mov
iret
into
cmp
xchg
nopl
testl
mov
pop
xchg
add
or
ret
lahf
add
dec
mov
and
subb
jo
hlt
and
ret
cs
inc
nop
ret
addb
fcoml
stos
fs
add
scas
add
cmp
xorl
into
push
das
hlt
mov
incb
add
test
xor
xchg
xor
and
mov
sub
push
inc
xchg
sbb
cmp
sub
leave
stos
into
pop
push
and
dec
rcr
fidivs
sar
jg
movsl
int3
add
push
roll
cli
test
pop
cld
jg
test
dec
add
lea
loope
inc
push
shlb
or
adc
cltd
or
mov
cli
outsl
flds
xchg
es
xorb
push
inc
hlt
mov
mulb
sbb
notb
std
clc
inc
fadds
insb
cmp
das
add
fwait
ret
mov
add
lret
movsb
add
jo
ret
add
mov
inc
test
bound
mov
xor
or
adc
leave
mov
fwait
push
ds
inc
lea
or
decl
shlb
test
lahf
and
xor
dec
mov
std
fwait
cmpsb
push
outsl
adc
ret
stos
pop
xor
bound
cmp
xchg
push
mov
mov
clc
sub
jnp
into
aas
add
ss
jmp
or
sbb
dec
push
sbbb
movsl
rolb
fldenv
into
adc
mov
ss
jmp
lock
movsl
or
fisttpl
loopne
cmp
shlb
mov
mov
inc
add
adc
rcrl
mov
lods
xor
sahf
add
fiadds
icebp
ja
inc
fiadds
mov
loope
iret
roll
cs
ljmp
loopne
into
cmpb
decl
dec
mov
xchg
shl
and
and
popa
xor
cmp
dec
out
or
mov
cwtl
fld
inc
add
inc
adc
data16
xor
adc
cmp
adc
xor
add
or
sbb
leave
mov
mov
and
cmp
inc
pop
sub
sbb
nop
add
pop
cmc
test
decl
jbe
mov
pusha
notb
jb
mov
fnsave
cmc
insl
pop
sub
mov
add
cmp
loopne
mov
xchg
mov
sbb
into
scas
sub
sbb
sbb
int3
lahf
add
pushf
mov
and
and
data16
mov
out
sub
out
fcoml
mov
ret
dec
xor
notb
nop
jle
inc
sub
and
cmp
or
add
or
outsb
loopne
sbb
sbb
in
sbb
adc
lret
add
cmp
loopne
inc
mov
enter
cmp
nop
adc
out
xor
mov
test
mov
pop
into
adc
faddl
or
lret
xor
notb
xchg
or
sub
adc
jmp
dec
adc
and
loopne
es
insl
jmp
pusha
xchg
mov
jl
aad
sbb
sar
fdivrp
idivb
sub
sub
cmp
add
sbb
or
dec
inc
push
ret
incl
xor
pop
int3
adcb
les
lea
sub
inc
mov
pop
fistpl
clc
loop
orb
cmp
and
and
mov
gs
flds
rcrb
add
add
xor
sub
push
or
insl
jb
sbb
stos
loop
xchg
clc
mov
and
sbb
call
sbb
pusha
add
loop,pt
bound
and
and
adc
adc
or
push
pushf
and
add
mov
push
push
cld
or
xor
and
rcrl
xor
mov
inc
icebp
ret
mov
lret
jno
and
mov
shlb
fisubrl
int3
adc
int3
outsb
mov
cmp
add
cld
push
add
dec
sbbb
adc
sbb
sub
cld
or
push
data16
mov
mov
push
push
sub
lea
push
shrb
test
xchg
sbb
out
mov
mov
fiaddl
pusha
or
aam
or
sbb
orb
pop
test
add
and
cli
data16
dec
sbbb
cmp
add
cmpb
ret
dec
loope
xchg
mov
mov
int3
jg
test
cwtl
ss
inc
lret
and
and
gs
push
shlb
vpsubb
es
shrb
inc
mulb
or
xchg
cmpb
lcall
popf
mov
into
mov
and
add
and
mov
xchg
sahf
adc
int3
nop
adc
xorb
xor
ret
adc
jg
outsl
add
sarb
or
sbb
mov
adc
dec
test
add
jne
add
orb
inc
mov
dec
das
xor
loope
cmp
sarl
loop
jg
cmp
sub
xor
cmp
mov
add
inc
xor
mov
inc
in
push
push
sarl
mov
cltd
addl
sub
add
leave
les
jle
fadds
jo
scas
test
cmp
hlt
rol
mov
or
hlt
ljmp
and
mov
ret
cmp
cmp
cmp
xchg
mov
or
pop
sti
cmp
dec
rcrl
jo
into
sub
dec
dec
cld
cmp
cmp
data16
jecxz
add
scas
cli
aaa
xchg
and
mov
and
cmp
sbbb
ret
ljmp
push
aas
call
into
sub
add
add
cmpb
pop
jge
inc
mov
xor
sub
pusha
mov
aam
clc
es
jl
mov
adc
es
inc
cltd
insb
xor
mov
rolb
stos
or
xchg
sahf
sahf
sub
dec
mov
dec
frstor
es
cs
repnz
adc
sbb
aas
lods
loope
cmp
push
ss
mov
dec
pop
lods
and
hlt
cmp
xor
cmp
or
mov
mov
inc
add
je
xor
sub
data16
aas
mov
insl
in
dec
hlt
sub
inc
mov
dec
cmp
adc
sub
jg
and
xor
rcrb
cmp
test
adc
and
lret
jle
es
adc
test
or
test
mov
xor
daa
xor
adc
adc
incl
add
les
dec
pop
and
pop
nop
add
and
pop
push
mov
dec
push
inc
cmp
add
jno
ds
sti
fildl
sub
nop
add
push
orb
push
add
push
adc
adc
sub
inc
sbb
jae
cmp
lds
rorl
incb
ret
mov
or
fidivl
aas
push
xor
mov
xorl
ljmp
mov
jne
in
xor
in
loopne
ss
data16
dec
jbe
jne
ljmp
inc
or
hlt
mov
and
inc
lds
add
es
inc
adc
cli
daa
pop
insl
jns
xor
jo
fdivrs
adc
cmp
jno
push
xchg
adc
aam
jno
insl
ljmp
sbb
andl
mov
add
mov
data16
in
jl
jl
and
ss
sub
jo
sub
incb
push
adc
jo
sub
mov
jge
bound
out
ds
lcall
pop
inc
xchg
jecxz
hlt
icebp
sub
mov
rclb
xchg
std
adc
jl
aas
sub
xchg
loopne
inc
jl
sub
jl
and
inc
aas
push
test
fisttpl
adc
push
insb
inc
enter
or
std
inc
pushl
fstpt
adc
inc
pusha
sar
aaa
add
jnp
or
add
into
in
mov
jo
inc
mov
mov
and
dec
in
mov
xchg
and
push
push
mov
and
xchg
inc
and
mov
sti
idivl
dec
and
inc
mov
inc
xlat
push
jle
data16
incb
jle
push
jle
adc
xor
sbb
idiv
pusha
cmp
jbe
xor
test
aas
or
add
mulb
sub
rcr
shl
xor
sub
mov
push
adc
loop
push
pop
inc
inc
icebp
add
mov
mov
add
jns
sbb
cwtl
mov
push
enter
adc
call
sub
jg
jle
sarb
inc
fsubl
inc
dec
icebp
aas
bswap
push
push
ret
xchg
mov
aas
sub
jge
aaa
mov
push
and
adc
sub
jp
enter
in
fwait
mov
roll
daa
sub
aam
add
inc
cwtl
andb
xchg
ror
ds
inc
adc
push
scas
or
inc
jp
stos
in
cli
xor
xorb
mov
or
xchg
aas
mov
adc
xor
aad
add
adcl
inc
shl
and
nop
sub
test
xor
idivl
lods
test
push
cwtl
and
int
jo
in
push
cmp
mov
xor
sub
ret
enter
inc
cltd
jle
and
jg
popl
sbbl
or
pop
mov
loopne
in
or
inc
jle
shll
fs
loopne
mov
test
add
fxch
lock
mov
lea
mov
adc
and
mov
std
lds
push
std
into
add
inc
mov
fstps
dec
flds
mov
xchg
into
sbb
inc
clc
das
pop
dec
int3
mov
inc
add
inc
aad
fistpl
cld
dec
inc
cmp
in
add
orl
mov
ret
sub
movl
mov
inc
add
or
insb
sbbb
mov
adc
pushf
enter
or
push
push
fcom
in
add
xor
fdiv
aam
push
and
sbb
stos
inc
and
stos
or
or
inc
and
sbb
fs
xor
sub
int
es
push
add
push
mov
mov
js
dec
mov
mov
mov
mov
or
movsb
adc
dec
push
movzbl
les
push
inc
add
mov
or
clc
and
cmp
mov
ss
adc
push
rorl
jmp
lds
rcrb
mov
xchg
sbb
sti
add
test
and
ds
loopne
insb
dec
hlt
adc
push
sbb
inc
cmp
and
arpl
dec
adc
add
mov
orb
add
sarb
add
lret
push
insl
cld
rolb
and
inc
jp
and
aad
xor
add
sar
sbb
adc
testb
rol
and
sbb
push
inc
add
push
stc
lret
mov
imul
ret
mov
addb
mov
inc
adc
mov
adc
ja
addl
adc
adc
adc
sub
or
ret
adc
push
cmp
push
mov
movsl
mov
adc
inc
jg
jl
clc
adc
mov
add
sub
add
or
xchg
vpalignr
adc
xor
mov
fldl
add
mov
add
add
or
int3
push
add
or
cmp
mov
pusha
cmp
clc
popf
stos
and
lahf
add
add
sbb
arpl
mov
jmp
cwtl
inc
and
scas
adc
je
in
add
clc
lcall
or
dec
add
pop
test
test
xchg
rcrb
fildll
fistpll
int3
sub
add
xor
into
lock
xchg
mov
mov
es
cmpsb
loopne
or
mov
jge
or
mov
cli
decl
inc
sbb
ret
and
adc
or
and
enter
ljmp
hlt
add
sub
add
jmp
sbb
adc
or
xor
dec
repnz
inc
mov
jmp
loopne
push
movsl
dec
mov
inc
or
jae
lcall
inc
ret
mov
ret
xchg
popl
adc
mov
loopne
fimuls
andb
or
xchg
mov
or
popf
pushf
sahf
inc
outsb
sbb
add
aam
popf
movsl
in
adc
dec
dec
mov
adc
bound
mov
clc
fstpl
dec
cmpb
cld
fwait
mov
pop
mov
addb
std
dec
loope
mov
gs
loope
or
sub
inc
mov
js
xchg
mov
mov
out
push
data16
ret
vmovhps
out
push
dec
ret
lods
mov
test
lds
cli
inc
inc
orl
pusha
inc
es
xlat
mov
fsubs
xor
mov
or
mov
lcall
pop
xor
cmp
movsb
push
out
loopne
jmp
xor
and
push
in
and
adc
and
hlt
jbe
mov
repnz
cmp
shll
enter
stos
cmp
cmpl
adc
fistpl
test
aad
bound
add
es
cmpsl
test
inc
add
sbb
inc
das
js
add
jne
fwait
and
cmp
xchg
inc
leave
gs
in
pop
xchg
or
and
insb
addb
loop
and
mov
push
sub
sbbl
ss
and
mov
das
inc
or
dec
sub
push
inc
sbb
sbb
sti
xchg
inc
pop
mov
lds
inc
push
rorl
sub
sub
or
fisttpll
loop
add
hlt
jp
dec
aam
push
jl
enter
push
pop
push
stos
call
add
ret
adc
mov
outsb
mov
xor
or
mov
and
push
adc
dec
sub
adc
mov
add
xor
jecxz
mov
je
and
sub
jo
dec
int
inc
mov
add
xor
shrb
loop
and
icebp
and
xchg
and
xchg
sub
sar
decl
add
enter
je
loopne
stos
and
rorl
nop
and
lock
or
pop
and
inc
fsubs
jp,pt
leave
sub
or
fldl
pusha
and
sub
or
or
jae
and
imulb
cwtl
rolb
shll
xor
stos
mov
stos
mov
sbb
or
push
out
jmp
sbb
mov
ret
mov
pop
loope
push
movb
sahf
lds
shlb
int
xchg
orb
shr
subb
movsb
pop
push
or
ffree
adc
sbb
or
adc
mov
and
enter
jo
inc
mov
inc
bound
inc
pusha
std
decl
inc
push
cmp
addb
mov
push
inc
or
add
sbb
mov
push
jge
mov
mov
adc
pushl
fsubrl
mov
imul
lds
popf
rclb
mov
in
mulb
sarb
push
ss
mov
cs
ud0
aas
inc
jne
adc
adc
sub
dec
addb
push
xor
mov
test
fcoml
dec
fwait
push
mov
test
mov
lock
mov
and
inc
ds
cltd
out
ljmp
aad
mov
shl
pop
das
push
inc
enter
sub
push
adc
cld
cs
or
xchg
adc
outsl
push
push
rorb
inc
mov
xor
and
mov
ja
leave
jp
stos
dec
mov
fidivrl
or
mov
add
inc
xchg
pop
pusha
push
dec
clc
xchg
pop
int3
rorl
add
cmovns
mov
sub
inc
sbb
or
es
les
jmp
lock
xchg
or
xor
jg
mov
ret
out
popa
or
aam
enter
xor
adc
and
push
adc
or
rorb
lret
and
xor
test
pop
mov
mov
arpl
int
push
rolb
outsb
and
mov
clc
inc
bound
add
dec
inc
sti
dec
test
or
push
cmpsb
shrb
sub
inc
or
and
das
cmovl
inc
aas
repz
sbb
aas
das
add
pusha
rorl
cwtl
lock
test
sub
xlat
sahf
mov
add
enter
mov
lcall
sub
int
jg
sbb
add
rclb
jbe
enter
sub
push
adc
cmp
or
loopne
lret
and
add
dec
fcom
sub
rorb
xor
adc
sub
and
mov
push
push
nop
pop
enter
mov
inc
xor
jg
add
int3
dec
das
int3
testl
pop
insl
push
ret
fiadds
add
ds
sub
mov
ret
add
data16
cmp
das
clc
testb
push
leave
dec
add
aam
lds
cmp
jmp
loop
iret
jmp
jo
xchg
mov
dec
or
push
fdivrs
add
inc
mov
dec
dec
fcoms
test
dec
adc
or
dec
push
and
or
adc
in
mov
lcall
sbb
les
sbb
aad
fbld
lret
adc
filds
or
adc
push
cli
pop
inc
push
adc
insb
lret
subb
cld
adc
das
jno
movsb
je
jo
call
es
mov
or
daa
and
fldenv
adc
mov
icebp
mov
mov
movsl
lods
test
pop
mov
sbbb
mov
push
add
fadds
hlt
clc
decl
pop
xchg
lret
hlt
test
mov
fs
mov
ljmp
shlb
dec
cmpsb
add
popa
xor
mov
or
sub
ss
mov
add
loopne
mov
in
or
or
loope
movsb
les
sbb
add
adc
mov
xor
sub
cmpsb
mov
js
pusha
iret
sub
scas
inc
jo
or
inc
rcrb
mov
out
stos
xchg
cmp
xor
mov
inc
mov
mov
add
push
je
loopne
sbb
add
add
add
or
insb
mov
sbb
inc
xor
pusha
int3
inc
cmp
out
aaa
cmp
fsubrs
dec
mov
sbb
xor
push
xchg
pop
inc
pop
mov
jle
adc
mov
and
add
lret
pushf
xchg
fildll
movsl
test
es
inc
loopne
testb
bound
lock
sbb
xchg
sahf
addb
popf
into
test
sbb
loopne
mov
lret
mov
or
xor
nop
shrl
pushl
movsl
add
fs
xor
dec
scas
jmp
aad
adc
loope
xlat
hlt
or
adc
mov
arpl
pop
and
mov
xor
jbe
cwtl
clc
aas
push
dec
mov
or
fisubs
pop
jno
and
add
xchg
mov
pop
icebp
daa
jb
test
and
adc
inc
and
and
xchg
lock
mov
fcoml
jno
add
dec
lahf
dec
push
pop
inc
ds
and
pop
jno
fwait
cld
es
pop
push
std
sbb
sbb
mov
or
cld
pop
mov
mov
mov
and
and
and
cs
inc
ret
lock
pop
mov
ficompl
cmp
iret
or
std
add
pop
sub
test
test
xchg
jo
into
dec
pop
int3
loopne
adc
and
fmull
sbbb
inc
setae
sbb
das
jle
xor
sahf
cmpb
mov
nop
push
mov
scas
insl
hlt
cmpl
mov
and
dec
sub
push
fs
dec
lcall
ljmp
mov
push
xorb
nop
js
hlt
adc
and
cmc
popf
mov
add
enter
aaa
mov
mov
in
scas
pop
sar
les
sbb
inc
orb
add
jmp
shlb
inc
adc
sarl
mov
add
adc
ljmp
add
outsl
mov
outsl
addb
and
xorl
add
call
test
and
sarb
fisubrs
sbb
sbb
scas
lods
or
adc
popf
mov
adc
ret
jb
sbb
push
fildll
hlt
or
jo
bound
ljmp
dec
std
fcoml
and
xor
push
jbe
xorb
cmp
insb
mov
mov
cmp
jo
and
cs
push
push
sbb
mov
push
out
dec
mov
add
test
fs
cmp
jg
pusha
es
mov
push
push
aas
inc
test
test
pop
add
iret
add
ds
jg
sub
push
fiaddl
jl
push
jge
lea
std
rolb
rorl
and
inc
and
lock
push
js
dec
xorb
fs
inc
sub
cli
std
mov
fldl
orb
adcb
addb
adc
push
adc
push
loope
jmp
repz
xchg
mov
ss
mov
cwtl
xor
loopne
pop
add
out
mov
sti
movsl
popa
adcb
cld
adc
or
enter
shlb
adc
adc
push
ret
sub
rolb
and
push
sbb
popa
add
dec
test
in
fdivr
xchg
fnstsw
mov
add
ja
cs
xorb
inc
add
les
clc
dec
mov
or
movsl
dec
pop
lods
fildl
clc
fsubr
subl
mov
mov
sbb
sub
dec
cmc
mov
lret
rol
add
popa
pushf
sub
mov
fcmove
sbb
mov
inc
or
bound
inc
arpl
scas
pusha
and
rolb
mov
out
es
sbbb
mov
mov
fwait
mov
mov
or
movsl
fadd
inc
mov
push
or
fldenv
xchg
sbb
jp
enter
cmpb
cmpl
addb
repz
xlat
es
jmp
or
es
push
aad
add
es
push
sub
or
and
es
jmp
fmuls
adc
and
in
or
xchg
adc
shlb
mov
and
pop
test
pop
sbb
push
add
data16
add
rolb
rorl
cltd
jo
add
lock
pop
inc
add
or
add
fucomp
or
imul
ret
mov
xor
xlat
adc
mov
push
inc
and
and
inc
dec
ss
inc
mov
sbb
or
inc
xchg
and
mov
sbb
add
push
ss
push
out
and
roll
lds
or
push
out
sbb
inc
push
fldl
push
sbb
ret
cmp
jo
xor
or
push
or
fisttpl
fisttpl
lcall
add
insb
add
rcll
arpl
inc
psrlw
cmpsl
mov
and
mov
fmulp
lea
sbb
addb
sbb
and
mov
imul
sub
aam
sub
enter
xor
inc
popa
std
push
xor
inc
mov
mov
sbb
dec
add
mov
pop
js
lds
sbb
sbb
add
sbb
movsl
sub
subb
dec
or
push
inc
xor
and
pushf
scas
inc
pusha
sub
mov
rorb
add
sbb
ss
pop
pusha
add
ljmp
sub
inc
mov
lds
push
inc
inc
andb
lods
addl
push
rolb
push
in
xor
outsl
lret
adc
cltd
rcrb
pop
ret
mov
xor
movsb
xchg
or
adcb
aaa
xchg
mov
adcl
call
add
mov
insl
jo
adc
adcl
cmp
pop
cmc
or
or
mov
ret
jg
sub
xchg
inc
xchg
xchg
loop
pushf
push
mov
adc
mov
and
fildll
or
out
sbb
shlb
adc
pop
and
or
pushf
hlt
xor
incb
adc
cmpsb
mov
push
mov
mov
std
mov
and
shrl
mov
pop
movsb
xchg
pusha
pop
bound
inc
rcrl
lret
add
out
and
add
pop
stos
dec
add
cmp
outsb
pushf
cli
popa
adc
and
pusha
jb
add
pop
cs
je
pop
mov
call
xlat
add
test
and
and
popf
mov
jg
pop
rcr
xor
fiadds
sub
mov
cmp
xor
sbbb
inc
mov
add
cmp
lock
std
inc
add
leave
dec
jno
add
test
ljmp
adc
je
and
subb
jl
sbb
and
nop
xchg
dec
or
push
pcmpeqb
pop
mov
sub
push
cmp
lahf
jl
inc
push
xchg
subl
test
es
enter
mov
sbb
jle
negb
mov
loope
in
shll
hlt
lds
insb
add
fsubs
adc
test
dec
lock
fidivs
sub
jp
adcl
mov
add
fisttpll
adc
inc
or
and
adc
in
or
push
out
xor
xor
movsb
xchg
cs
scas
cmpsb
gs
mov
xchg
mov
test
dec
rorb
sub
mov
cmp
andb
dec
pusha
mov
xchg
jb
add
icebp
push
cld
scas
cmp
addb
sbb
out
mov
fcoml
mov
push
inc
cli
sbb
shrb
dec
add
add
sub
mov
orb
adc
xchg
int3
mov
fisttps
ret
add
insl
mov
push
sbb
ljmp
xorb
aam
add
or
je
adc
and
dec
xchg
push
add
adc
ljmp
jg
add
test
jo
inc
clc
movsl
mov
sub
test
mov
mov
insb
or
lds
nop
loop
andl
add
int
outsb
sbbb
iret
lock
cmp
push
movsl
aam
push
push
imul
sbb
mov
xor
or
sbb
sbb
mov
cwtl
out
adc
pop
or
in
add
pop
add
add
nop
pop
pop
add
cs
shlb
andl
lods
ds
lcall
add
hlt
add
decl
movsl
rclb
add
movsb
or
add
or
mov
add
sbb
xchg
test
out
and
mov
inc
mov
hlt
repnz
sbb
shll
or
inc
pop
xor
icebp
mov
sub
pop
and
dec
jg
xchg
movsl
dec
shlb
in
mov
mov
adc
int3
rolb
cmpsb
cld
jle
xchg
sarl
cli
adcl
divl
and
dec
and
sub
leave
xor
adc
loope
or
adc
shlb
pop
push
imul
repnz
out
adc
xchg
inc
mov
cmpsl
pop
jecxz
test
orb
adc
xor
adc
pusha
or
and
nop
add
test
popa
add
or
call
jle
adc
mov
mov
dec
lods
mov
dec
and
cmp
adc
add
and
leave
nop
pop
inc
and
adc
movsl
jg
push
and
es
lret
dec
pop
fs
dec
add
popf
mov
fdivrs
and
pop
adc
enter
xchg
mov
dec
or
cld
xor
sub
nop
cwtl
inc
imul
cmpsb
sarb
inc
sar
mov
adc
jb
mov
xor
pop
mov
and
adc
imulb
clc
sbb
loopne
rolb
mov
aas
cmc
and
xor
imul
frstor
or
and
lock
rorb
fsts
mov
add
pop
inc
shlb
jecxz
mov
pop
sub
jns
push
roll
inc
mov
sub
cmp
fmuls
outsl
stos
fstl
cmpxchg
and
inc
and
incl
shlb
add
lods
stc
xor
sub
mov
sti
pop
mov
pusha
or
les
and
cmc
lods
mov
push
fmul
adc
adc
or
mov
mov
lds
adc
adc
push
mov
lock
faddp
mov
ret
jmp
popf
into
dec
testb
push
movsb
in
sti
pusha
jo
sbb
add
cli
lret
xchg
sub
mov
push
sbb
inc
adc
pop
dec
push
mov
inc
fcompl
add
add
push
lret
mov
xor
ljmp
inc
jmp
inc
sub
mov
shl
mov
mov
mov
add
or
or
mov
adc
ljmp
dec
rolb
rcll
loop
sub
stos
mov
inc
mov
dec
repz
es
mov
bound
adc
outsl
ja
out
or
leave
bound
shll
dec
xor
loopne
add
rolb
and
push
and
cmc
mov
lret
shlb
subl
add
ljmp
insl
out
push
pushl
into
popf
enter
add
fwait
xor
inc
or
loop
mov
jle
inc
nop
test
aaa
xor
hlt
mov
aaa
mov
out
fwait
clc
in
jg
dec
push
xchg
add
jo
dec
jbe
mov
ret
sbb
add
mov
jge
in
cmp
into
mov
and
push
dec
push
add
add
andl
daa
mov
sbb
add
xchg
or
movsb
adc
jno
enter
sbb
mov
adc
fwait
dec
movsb
das
rorb
in
mov
sub
or
or
fwait
cmp
adc
dec
cs
pusha
add
inc
shlb
inc
xor
pop
dec
adc
mov
jo
mov
fiadds
aam
push
xor
mov
cli
scas
push
mov
faddl
jmp
std
fildll
xor
loope
xchg
inc
or
sbb
enter
sbb
loopne
jle
and
xchg
int3
test
loope
push
mov
aad
add
clc
push
and
adc
add
loop
pop
shlb
addl
jg
push
inc
sbb
je
inc
add
fnstenv
negb
add
enter
add
fcom
test
xchg
inc
adc
or
fmull
loop
mov
popa
shrl
rcr
roll
rorl
pop
and
or
cmc
sbb
leave
inc
sub
mov
ret
iret
movsb
shlb
sbb
mov
add
push
fiaddl
xchg
lahf
movsb
aas
push
xor
rorb
lods
das
and
xchg
clc
es
and
in
mov
loopne
cmp
inc
pusha
push
push
and
jmp
sub
add
mov
test
push
fidivl
jp
insl
adc
mov
xchg
pop
jge
out
mov
cli
and
notb
and
les
fnsave
push
jo
cwtl
movsb
or
dec
das
lahf
inc
and
test
sbb
or
xor
jo
add
pushf
mov
xchg
mov
or
pop
dec
mov
es
push
mov
xchg
cmp
mov
cmpb
push
cs
cmp
pusha
and
sbb
popf
mov
sub
ss
dec
mov
mov
add
adc
int3
cmp
mov
test
lock
push
and
adc
mov
push
jmp
enter
and
lret
inc
faddl
incb
adc
add
incb
out
in
lret
andb
xchg
out
test
dec
pop
add
test
pop
pop
stos
ljmp
mov
ficoml
add
and
adc
xor
dec
sub
stos
lahf
cmp
sbbb
jmp
rcr
fadds
mov
adc
xor
pop
pusha
adc
gs
xor
sbb
mov
nop
and
aas
pushl
mov
je
out
cmp
xchg
push
ss
test
xor
mov
movsl
mov
test
pop
mov
push
and
sti
test
adc
insb
lods
inc
push
loopne
fiadds
out
add
clc
jnp
sub
mov
adc
jbe
push
push
orb
pop
outsb
sbb
incl
jo
cld
xchg
pop
dec
test
xchg
dec
mov
dec
or
pushf
and
loopne
cld
popa
std
fadds
cmpsl
roll
ret
pop
add
imul
xchg
or
out
inc
dec
xchg
decb
dec
xor
sub
sbb
lods
push
pop
cmp
push
jb
inc
push
jne
add
fistpll
shll
push
mov
push
fldl
insl
or
push
push
dec
rolb
rcrb
lods
xchg
shrl
inc
pop
add
xor
and
mov
sub
dec
sub
ss
clc
cmp
and
dec
sbb
add
mov
push
xor
inc
dec
pushf
ja
adc
clc
mov
adc
cmpsb
inc
jno
and
and
and
jo
mov
push
sbb
insl
inc
push
in
test
mov
pop
dec
pop
insb
jne
repnz
mov
xor
mov
sahf
lcall
shlb
mov
xchg
inc
push
mov
mov
rolb
mov
std
shlb
in
inc
add
rol
add
rcl
xchg
inc
call
cmp
or
test
sub
xchg
sbb
bound
inc
aad
adc
stos
es
shrl
invd
scas
jg
shrb
lods
xor
xor
inc
das
cld
xor
enter
adc
mov
inc
inc
test
test
or
or
dec
subb
scas
adc
mov
fistps
lock
add
dec
inc
cli
inc
and
or
hlt
movsl
pop
mov
dec
add
aam
add
sub
mov
rcll
sub
mov
push
and
inc
mov
pop
dec
adc
ss
rolb
decl
sbb
add
shrb
or
push
cmp
pop
rcrl
mov
int3
test
in
out
sub
inc
or
mov
add
inc
aas
and
out
inc
xor
cmp
pop
add
fisttpl
cmp
dec
push
lret
add
stos
mov
lret
jne
or
or
jbe
add
push
cmc
mov
cmovb
sub
and
lcall
enter
lock
sub
fs
pop
mov
mov
test
add
inc
test
aad
xchg
or
xor
ja
pop
inc
out
add
ret
jp
frstor
lods
adc
ljmp
sub
dec
and
xchg
aaa
loopne
mov
or
jne
adcb
ss
and
push
negb
into
enter
shrb
dec
sub
sar
loop
addl
push
lds
hlt
call
pop
xchg
xchg
push
aam
loope
rolb
rorb
popaw
push
arpl
stos
dec
mov
inc
sub
sbb
rolb
add
or
in
shll
cmp
fwait
cmpsl
or
test
mov
jo
dec
push
jmp
mov
xchg
sbb
pop
sub
insb
mov
out
ficoml
or
shll
and
mov
inc
mov
adcb
test
aad
add
mov
mov
dec
ret
pushl
jbe
pusha
inc
cmpsl
and
add
or
rcrl
mov
add
outsl
add
mov
and
rcl
or
addr16
inc
ret
mov
and
mov
add
mov
fwait
mov
enter
clc
xor
bound
loopne
lods
loopne
sti
sbb
das
lcall
inc
mov
and
sbb
aaa
push
daa
add
mov
inc
push
push
sar
mov
adc
pusha
ss
mov
mov
push
and
xchg
sarb
sbb
lds
frstor
mov
adc
inc
js
xor
outsl
mov
aaa
sar
mov
jne
add
outsl
sub
iret
xchg
inc
cs
pop
fimuls
cld
add
mov
add
or
xchg
lock
ret
add
mov
addl
iret
cmp
jge
test
es
jne
shl
dec
or
aad
add
and
jbe
mov
jb,pn
shlb
fidivl
push
add
jle
push
sub
notb
inc
mov
adc
sahf
sbb
mov
dec
fldl
push
push
mov
mov
aad
xchg
push
sub
fisttps
das
mov
rclb
mov
pop
push
fldenv
adc
call
mov
in
icebp
add
xor
adc
sbb
clc
or
mov
mov
or
fnsave
mov
mov
add
xchg
or
sub
mov
sub
push
cmp
adc
and
rcr
loopne
inc
pop
sbb
add
cmc
jne
pop
sbb
pop
mov
or
push
add
popf
sar
xorb
dec
sub
inc
push
add
and
das
repz
inc
sub
adc
cmp
aam
ja
mov
arpl
cmpsb
inc
xor
popf
inc
or
and
mov
bound
mov
sbb
hlt
or
dec
dec
loopne
sahf
mov
xchg
adc
ret
or
mov
add
adc
jecxz
mov
dec
stc
cwtl
inc
add
xchg
push
ds
mov
lret
insl
inc
hlt
cli
inc
int3
xor
inc
sarb
lcall
add
pop
ja
jnp
aad
dec
or
cmp
lock
mov
mov
mov
add
pusha
add
cmpsb
fsubl
loope
cld
inc
mov
ds
cmp
push
add
mov
and
inc
xchg
fidivrs
sub
shlb
inc
dec
mov
ret
out
ret
sahf
add
adc
ret
adc
mov
icebp
jne
mov
roll
jecxz
mov
push
and
test
mov
add
mov
shl
loope
add
sub
ret
jg
mov
mov
movsb
mov
mov
rcrl
fldt
push
hlt
repz
and
mov
lds
mov
pop
rcr
and
inc
test
mov
xchg
mov
and
add
pop
jg
test
xchg
popf
and
lock
adc
mov
mov
or
ds
into
push
pop
movsl
adc
ret
fs
out
push
cmc
popf
movsl
add
mov
sbb
adc
mov
jmp
push
and
enter
jge
rorl
push
inc
push
push
outsb
mov
mov
jmp
insb
enter
je
int3
test
xchg
mov
test
and
sahf
and
sar
xor
mov
es
popa
mov
push
add
or
adc
les
add
sbb
es
mov
xor
arpl
mov
pop
and
mov
rcrb
and
add
ljmp
shl
or
push
inc
daa
in
aas
jle
in
mov
and
push
and
jno
loopne
xchg
test
jp
push
aaa
mov
xchg
push
jg
and
in
xchg
xor
leave
mov
add
movsl
movsl
test
sbb
xchg
stos
mov
or
add
cmc
add
xchg
outsb
bound
mov
stos
mov
push
jl
loope
jg
add
dec
add
add
test
sbb
add
sahf
enter
add
xchg
rolb
nop
dec
mov
popf
shlb
pop
push
cld
pop
and
mov
lret
mov
adc
fbstp
add
adc
fldl
xorb
jg
mov
sarb
loopne
aam
mov
push
xorb
lret
add
mov
pop
mov
cs
pop
adc
mov
sbb
or
imul
xor
add
push
pop
lods
adc
sbb
aad
sbb
shll
cmp
add
mov
sarb
mov
sub
pop
mov
andb
movsl
mov
pop
insl
clc
xor
push
test
jbe
xorb
jno
cmpsl
jg
movsb
fs
loopne
and
shrl
xchg
mov
xor
mov
pop
adc
insb
pusha
mov
andb
aam
insb
and
ror
test
and
mov
inc
add
icebp
mov
shlb
cmpsb
popf
es
inc
fldcw
pop
test
sbb
add
xchg
movsb
in
idivb
rclb
add
xchg
imul
mov
addl
lret
add
in
pop
and
movsl
decb
push
pop
loope
pushl
sahf
bound
fs
pusha
les
loope
and
inc
pop
inc
lret
mov
filds
jo
or
jo
in
sub
xor
inc
and
in
push
rcrb
cmp
push
dec
pusha
mov
jmp
lock
clc
push
pop
aaa
sbb
pusha
mov
jmp
leave
mov
mov
out
inc
rcll
add
add
sub
add
inc
leave
or
dec
inc
or
sub
cmpb
and
sahf
orb
loopne
rorb
adc
call
jno
cs
mov
push
pop
dec
insb
cli
lock
lret
sarl
addl
popa
xchg
dec
sub
cmp
call
mov
push
inc
pushf
mov
jmp
dec
pop
push
push
jmp
cmpsb
mov
push
sahf
ret
xchg
mov
jg
lret
jge
jo
and
loope
jno
test
rcll
mov
cmp
xor
ret
push
adc
push
decl
xor
add
inc
dec
adc
imul
add
iret
push
jle
call
pop
mov
or
subb
sub
fs
push
mov
lods
arpl
xchg
push
sarb
cs
or
xor
mov
and
loope
and
push
or
lock
xor
nop
mov
and
jl
pusha
es
jnp
add
inc
adc
ficoms
inc
lock
xlat
xchg
mov
dec
int3
and
mov
inc
test
or
add
rorb
scas
popf
xor
pop
test
nop
outsb
cmp
adc
mov
popf
add
dec
jp
pop
sbb
inc
subb
cmp
jmp
add
lods
and
add
jecxz
mov
fnstsw
add
insb
mov
and
xchg
test
cmp
mov
popa
les
fistpl
add
cmp
lcall
jmp
xchg
pop
fdiv
mov
mov
movsb
dec
cld
add
mov
cmp
or
add
xchg
gs
add
adc
pusha
cs
inc
adcb
and
or
dec
orl
add
xchg
push
clc
orb
push
mov
dec
sbb
lods
das
mov
jp
jmp
call
hlt
loop
out
dec
or
dec
cli
lea
mov
push
xchg
lret
sbb
adcl
pop
call
mov
or
addl
pop
and
pop
xor
and
dec
js
fwait
jae
adc
je
mov
fstps
mov
sbb
out
add
popf
and
xchg
lcall
sub
inc
hlt
xor
add
inc
pop
add
lods
push
lods
add
inc
fsts
bound
mov
xchg
adc
sbb
std
ja
adc
imul
mov
add
rolb
cltd
dec
lods
adc
xchg
mov
aaa
xchg
or
push
scas
add
movsl
ss
xor
push
cwtl
inc
out
cli
or
bound
add
xchg
adc
test
xchg
and
lock
scas
add
xchg
jl
dec
les
mov
or
lods
jno
inc
inc
dec
jb
shrb
out
xchg
cmpsl
icebp
sarb
fmull
nop
dec
adc
sub
mov
icebp
xchg
andb
dec
and
add
inc
sub
inc
xchg
and
inc
loopne
stos
or
push
push
push
add
shlb
pop
or
and
test
pop
jle
popf
daa
inc
inc
cwtl
inc
inc
sbb
xchg
push
addl
push
mov
enter
push
xchg
and
pop
inc
cmp
mov
xchg
orb
adc
push
jo
jge
cs
add
push
push
cmp
rclb
push
cmpb
stos
fwait
mov
roll
adc
inc
adc
dec
ss
shrb
lock
rorb
fcmovb
stos
sbb
sub
push
mov
add
mov
and
add
fmull
sub
adc
xorl
or
and
xor
inc
sub
fcompl
popa
js
test
and
xor
and
roll
mov
xor
fsubs
pop
push
enter
fmull
fwait
xor
pop
ret
jmp
push
ret
push
and
push
inc
push
or
and
jmp
dec
jmp
and
pop
pusha
pop
adc
pushl
fimull
pop
mov
fsubs
mov
inc
cmp
add
dec
cmp
add
jl
pusha
cmp
cmp
ficoms
mov
dec
dec
cmpb
ret
leave
mov
decb
push
push
fisubrs
xor
and
add
mul
inc
cmp
arpl
jmp
adc
cmp
aam
sbb
aaa
stos
mov
incl
or
scas
testb
iret
mov
fisttps
inc
fcos
incl
sbb
inc
fpatan
dec
scas
adc
xor
iret
mov
iret
or
fsubrs
push
add
add
mov
mov
out
fidivl
pop
stos
outsb
jae
or
ss
or
mov
jbe
insl
add
and
add
mov
nop
stos
rorl
or
mov
jle
enter
mov
aaa
stos
push
ret
xchg
mov
push
mov
cmpb
shlb
mov
je
rcrb
adc
cs
cwtl
xlat
jb
mov
lods
das
mov
add
pop
test
jbe
in
fadds
push
test
dec
negl
xchg
add
add
xor
inc
push
cli
adcl
push
fildll
int
jmp
test
xor
test
lock
mov
mov
aam
clc
mov
inc
jp
fldenv
or
xor
hlt
cmp
fisttps
in
fmull
out
insb
in
inc
or
or
ds
push
mov
shld
in
gs
ljmp
push
add
inc
mov
jecxz
jp
int3
mov
loope
loopne
or
pop
es
incl
mov
add
xor
jae
cmp
adc
mov
loope
std
neg
pusha
in
mov
popf
ret
or
xchg
and
sbb
sahf
jbe
cmc
nop
fsts
xor
js,pt
hlt
popf
adc
les
push
dec
test
sbb
xchg
xchg
jbe
gs
or
js
xor
lods
xchg
mov
pushf
xchg
sub
cmp
inc
inc
test
dec
test
lods
test
jle
fstl
data16
and
in
push
js
sbb
loopne
and
iret
inc
adc
sub
ss
mov
xchg
push
sbbl
rolb
dec
jmp
jg
lcall
mov
test
or
add
inc
adc
dec
add
ret
add
insb
push
sub
or
adc
mov
sub
add
lods
or
shlb
scas
insl
add
es
mov
adc
dec
fwait
dec
mul
xor
sub
cmp
lods
das
mov
dec
mov
clc
hlt
loope
stc
clc
push
aad
fdivrs
hlt
xor
roll
xor
in
data16
roll
cmpsl
xor
jb
lock
or
nop
jg
dec
ljmp
mov
xor
xor
divb
mov
sub
bound
ret
push
clc
mov
jmp
call
pop
fwait
stos
outsb
xchg
xchg
mov
dec
imul
adc
mov
stos
adc
jae
add
adc
ss
mov
xor
shl
mov
data16
int3
insb
ljmp
or
xor
test
fcom
mov
mov
aad
and
add
es
or
mov
and
call
jo
mov
loope
icebp
add
jo
or
jg
push
and
bound
test
xchg
or
fwait
jmp
or
rorb
push
sarl
add
hlt
and
mov
popf
mov
sbb
sub
orps
mov
add
sahf
adc
xor
and
cmpb
and
loopne
fdiv
int3
rolb
adc
movsl
subl
cli
sub
int3
add
push
inc
mov
daa
cli
orb
sub
sbb
pop
xchg
add
jne
and
adc
fst
jne
decl
rcr
mov
insb
and
add
iret
lock
fmuls
or
add
push
push
mov
pop
jno
out
clc
incw
or
scas
pop
xor
xor
lret
filds
inc
xchg
sub
es
call
dec
mov
pushf
cmp
add
cwtl
jo
add
and
aad
divb
std
mov
inc
or
jb
ret
call
mov
add
clc
add
or
les
jnp
fildl
adc
loope
orl
in
shlb
xor
lock
ret
imul
lcall
xor
scas
xor
rorb
outsl
lret
or
adc
mov
xor
and
jmp
mov
mov
fmull
rclb
jp
inc
and
inc
mov
subb
ss
add
push
adc
xor
xor
cmp
and
and
cmp
outsl
inc
cld
mov
ss
sbb
aad
xor
jne
push
inc
mov
cld
outsl
sbb
pusha
or
lock
xor
cli
stos
movsb
sub
movsl
frstor
lock
lock
adc
lock
sbb
call
loop
ds
and
cmpsl
rcll
pusha
std
mov
inc
jmp
outsb
push
pop
and
add
adc
decb
xchg
push
stos
rolb
add
nop
fmul
jl
cmp
mov
clc
pusha
push
sbb
mov
push
adc
std
dec
push
pop
push
or
mov
mov
sarb
mov
push
add
scas
inc
or
add
lock
aad
sti
lcall
cs
fsubs
mov
or
dec
pop
and
cs
mov
or
andl
mov
push
cmp
das
mov
mov
add
sub
cwtl
popf
xor
add
mov
xorl
incl
or
add
push
jno
in
mov
sbb
icebp
adc
roll
jo
or
sub
xchg
add
push
test
lods
call
sbb
xor
lret
fwait
or
testl
adc
push
mov
push
lods
ljmp
popf
popa
add
lock
push
std
scas
xchg
pop
jb
push
dec
push
inc
pop
ss
cmp
or
std
or
cmp
jo
inc
push
mov
xchg
fiadds
or
fstl
mov
stos
jl
add
or
adc
or
mov
add
jge
pushf
and
mov
mov
adc
and
sub
pop
and
int3
gs
adc
mov
lahf
add
rcrl
fwait
add
out
push
and
sbb
daa
and
or
xchg
adc
clc
add
push
int3
or
rolb
stos
add
and
push
sub
shll
movsl
aad
fimuls
loopne
adc
sub
jmp
shr
loop
rorb
mov
xor
mov
mov
add
sub
add
je
sbb
and
fs
xchg
mov
push
xor
nop
test
jl
inc
jnp
popa
and
pushf
or
jle
pushw
cmpsb
jno
movsl
sar
movsl
xchg
add
inc
outsb
mulb
and
sbb
or
jl
xor
pop
imul
add
lcall
in
test
cmpsl
icebp
scas
and
cld
fwait
stos
mov
inc
dec
mov
fldt
add
or
idivb
aam
or
cmpsb
addb
add
dec
orb
dec
jmp
push
add
mov
adc
inc
divb
fisttpl
adc
lcall
out
sub
add
inc
xchg
or
inc
fdiv
jg
cmp
in
mov
popa
push
xor
and
loope
ds
test
xor
fldt
andb
xchg
xor
aam
fnsave
adc
in
or
jp
fldenv
ret
sbb
loopne
enter
clc
add
loope
nop
adc
or
add
pop
inc
out
xor
cli
pop
insb
cmp
into
cmp
clc
mov
jb
iret
fadds
pop
or
and
xchg
cltd
pop
shlb
add
inc
cli
ret
inc
add
test
rorb
pop
inc
in
or
or
mov
sarb
mov
movsl
pop
or
sub
sub
popa
xchg
add
jo
jo
mov
push
dec
add
add
xchg
cmp
loopne
and
jb
rolb
mov
and
sbb
and
xor
fcmovnu
jnp
cli
fsubl
mov
or
jg
add
movsl
jno
aas
jbe
add
mov
or
sbb
stos
movsl
es
add
add
add
inc
inc
mov
lock
js
dec
mov
mov
jno
xorb
push
add
js
mov
loop
push
outsl
mov
pop
add
add
les
fists
cmp
mov
add
push
add
sahf
or
dec
sbb
inc
add
bound
inc
in
ret
add
out
or
lods
mov
out
fldl
dec
push
rcr
incb
push
adcb
rcrb
pop
adc
dec
pop
ret
sbb
cmc
nop
add
in
pop
lock
andb
add
adc
jl
push
adc
add
dec
push
xchg
inc
push
cld
xor
cmp
add
inc
mov
xorl
cmpsb
xchg
cmpl
mov
lods
add
test
push
push
or
lret
fmull
lret
lock
test
es
mov
roll
mov
hlt
mov
mov
test
sub
orb
sub
rclb
xor
dec
push
jle
mov
jl
sbb
gs
or
cltd
cli
aas
xchg
push
xor
mov
fld
inc
fcoms
test
dec
pop
shrl
inc
mov
and
add
lock
xor
add
insb
incl
ret
pop
xor
or
inc
je
xor
orb
add
mov
xor
das
mov
inc
outsl
inc
sbb
add
inc
insl
test
mov
mov
push
inc
rolb
ss
mov
push
mov
lock
pop
out
rorb
cmp
imul
inc
pop
lds
movsl
adc
lods
ret
bound
add
or
xor
inc
je
push
or
jnp
fsubr
fs
xchg
int3
je
add
out
adc
je
and
sub
jne
push
xchg
rcrb
rcll
and
jg
lret
les
sahf
ret
jmp
push
adc
or
mov
fucomip
and
aad
adc
pusha
xor
and
ret
movsb
mov
mov
clc
cmp
add
push
jecxz
aad
jne
mov
test
sbb
rcl
mov
push
inc
mov
dec
mov
call
and
sbb
nop
pop
fs
inc
sbbb
jmp
aad
add
aaa
dec
cli
insl
bound
rcrb
push
pop
andl
movsb
mov
rolb
mov
je
push
outsb
mov
add
dec
sbbb
adc
loopne
cld
adc
add
out
jno
mov
sub
inc
into
or
or
in
enter
jnp
push
rclb
out
popf
or
adcb
or
sbb
lret
in
data16
mov
xor
cmp
popf
push
popf
and
out
pop
test
and
or
mov
sub
push
mov
cmp
ret
mov
mov
add
mov
mov
iret
inc
and
inc
jp
jmp
and
ljmp
pushf
mov
mov
cwtl
call
js
mov
push
xchg
lods
mov
cmp
add
js
je
pop
or
mov
loope
mov
mov
jbe
shlb
jbe
and
pusha
gs
test
ret
insb
repz
mov
jo
jecxz
xor
inc
xchg
jecxz
dec
xchg
mov
push
add
outsl
mov
xor
jne
xchg
push
and
cmp
pop
mov
add
popf
mov
loopne
in
jmp
cmp
inc
mov
icebp
push
and
and
ret
addb
dec
gs
add
push
loopne
gs
and
pusha
lock
inc
ror
rolb
pusha
adc
or
sbb
add
addr16
and
add
sbb
popa
loop
xchg
addb
mov
aam
test
movsl
add
cltd
test
lock
xor
adc
or
adc
jbe
nop
inc
jmp
loopne
in
test
lock
xor
or
ds
lock
and
rorb
aaa
sbb
testb
adc
mov
and
mov
in
add
mov
mov
subl
add
mov
aas
add
mov
sub
paddq
fisubrl
icebp
jecxz
lds
cmpb
aaa
add
rolw
or
pusha
sub
dec
mov
pop
sbb
enter
cmp
out
mov
mov
popa
add
outsl
stos
sbb
pop
add
mov
ret
inc
adc
pop
lret
push
add
lcall
into
mov
cs
add
fimuls
and
ljmp
jno
sar
dec
data16
adc
pop
push
outsl
and
ds
lret
and
loope
nop
mov
mov
adc
sahf
push
pop
incb
xor
push
cmp
xor
inc
mov
sub
call
and
add
jb
push
idivb
mov
testb
mov
mov
fadd
testb
hlt
cmp
sbb
inc
inc
mov
inc
popf
fidivs
push
or
add
and
lds
clc
das
push
daa
pop
xor
into
add
mov
pop
rorl
inc
and
in
je
pop
lea
lock
adc
xor
arpl
push
dec
popa
outsl
push
mov
mov
add
pushf
cli
loopne
xor
cli
loop
cwtl
dec
xchg
ficoml
pop
test
jl
jl
push
cld
in
push
inc
adc
decb
push
or
repnz
mov
jo
jg
sbb
dec
lcall
add
adc
bound
test
pushw
movsl
pop
mov
shl
xchg
mov
lock
hlt
pusha
mov
add
dec
dec
test
fadds
xchg
cs
or
push
fiadds
test
jb
mov
adcb
adc
cmp
and
scas
test
andb
adc
fistpll
xor
cmp
add
cmp
xor
push
addl
bound
mov
add
push
push
cld
movb
adc
add
add
or
cs
jb
jne
inc
std
xchg
cltd
shlb
lcall
jo
lret
push
adc
jne
and
popa
lock
and
adc
pop
jne
or
inc
cmp
rorl
mov
mov
add
aaa
mov
cmp
sub
push
adc
dec
push
pop
fcompl
lods
packsswb
inc
adc
adc
jg
ret
cmc
fwait
fwait
push
sbbb
negb
fnop
add
insl
test
sbb
in
into
test
sti
cmp
inc
add
decl
loop
call
push
add
cmpsb
icebp
fisubrs
push
cmpsl
xchg
xor
adc
cmc
call
enter
inc
daa
inc
add
jmp
inc
add
add
pop
push
les
mov
sbb
enter
movsl
cmpsl
test
push
hlt
fisubl
push
xor
xor
and
pop
mov
xchg
mov
js,pn
pop
mov
xor
nop
push
or
rolb
push
and
and
add
in
leave
sarb
int3
sbb
icebp
and
hlt
dec
xor
push
mov
add
nop
cmpsb
incb
out
and
add
xchg
mov
dec
push
pandn
rorl
test
push
xorb
ret
das
orb
fsubl
push
les
push
and
scas
dec
in
adc
stos
ret
dec
insb
push
nop
jno
cmpsb
mov
or
jle
test
fcoml
and
mov
test
std
mov
sbb
jb
or
add
push
add
incl
sub
push
mov
daa
inc
adc
sbb
sar
nop
add
add
in
pop
js
xchg
add
add
adc
or
lret
push
and
outsl
or
jo
leave
shll
mov
xchg
jo
mov
pop
adc
xor
sub
sbb
fcomp
enter
add
fwait
adc
xchg
pop
xorb
out
ret
mov
mov
lds
push
in
outsl
outsl
and
adc
xor
dec
xchg
popf
ret
fsts
jge
mov
mov
or
dec
pop
or
push
sub
sahf
cmp
ja
xor
sub
sbb
lock
loopne
mov
hlt
dec
sbb
roll
stos
cmpsb
jne
lea
cmc
js
lcall
stc
gs
pop
sub
xor
dec
adc
or
pop
or
or
cmc
push
sub
xor
inc
jo
or
cld
or
add
xor
or
dec
or
adc
xor
add
incb
arpl
adc
and
cli
nop
inc
shll
xchg
pop
adc
lock
or
push
push
push
test
push
js
fnsave
in
rorb
sbb
lds
adc
lods
add
dec
pop
lock
pop
nop
pusha
mov
xor
test
sub
inc
dec
cltd
adc
push
lret
clc
fwait
cli
cmpsl
mov
push
dec
xchg
aam
mov
push
jle
add
outsb
inc
and
xor
fidivs
jo
push
pop
push
xchg
jg
jne
add
mov
lcall
adcl
mov
fadd
mov
enter
flds
add
nop
add
cmp
and
lock
dec
mov
cld
mov
pop
lock
in
jnp
or
pop
dec
sar
or
mov
inc
add
jge
cltd
push
and
rorl
roll
sahf
dec
dec
rorb
pop
mov
or
inc
mov
jge
fbld
lods
push
dec
and
das
dec
or
add
sbb
fisubs
ss
cmpsb
lock
adc
inc
sahf
pop
dec
loop
cmpsb
push
fwait
xor
adc
outsl
call
ret
xchg
xchg
icebp
insl
add
icebp
outsb
insb
add
das
jle
push
subb
pop
push
push
jo
pushf
iret
inc
cmovne
and
xorb
stos
add
es
mov
adcl
add
push
mov
lock
scas
int3
lea
mov
ffree
mov
leave
add
fisttpll
leave
or
fmull
xor
dec
sbbb
subb
add
mov
loope
test
push
cmpsl
inc
inc
add
iret
cs
xlat
and
mov
add
or
outsl
xor
cmpsl
pusha
sbb
mov
xchg
leave
mov
in
es
adc
push
mov
loopne
ret
les
fidivrl
xor
push
orb
xor
stc
dec
fisttpl
sbb
or
xchg
xchg
sub
loope
add
adc
in
popf
leave
inc
dec
inc
rorb
mov
xchg
inc
or
popa
cmpsl
fldl
loopne
scas
adc
ja
mov
push
and
lahf
xor
dec
les
push
sarb
pop
popf
movsb
mov
add
push
cmp
push
pop
add
aaa
or
sub
add
outsb
add
mov
inc
xor
jg
shl
pusha
inc
pusha
sub
sbb
adc
incl
xchg
rolb
dec
add
add
loopne
loop
sub
push
mov
test
sbb
ret
inc
addb
push
int
inc
nop
test
adcb
dec
adc
mov
jb
mov
lds
cli
add
pop
or
push
cmp
fsubrs
mulb
mov
insb
cmc
sbbb
ret
push
andl
xorl
inc
jecxz
fdivs
sbb
pop
hlt
inc
shrd
sbb
sahf
or
jle
pop
rcrb
sbb
scas
xor
or
mov
ja
add
mov
rcll
jp
or
xchg
lods
pusha
loopne
xchg
mov
or
pop
inc
inc
add
jmp
movsl
adc
fwait
cmp
push
add
mov
lock
adc
shrl
push
push
sbb
adc
dec
mov
mov
lock
xor
sbb
or
push
adcb
ja
in
and
frstor
jmp
xor
or
and
outsl
outsl
and
adc
adc
addl
jp
xchg
pushl
lcall
test
cmpb
xor
adc
add
sub
rcr
cld
outsl
pop
and
rclb
add
add
mov
jmp
adc
and
lret
sub
dec
add
add
add
loop
idiv
ja
sarl
or
idiv
std
inc
daa
inc
xchg
mov
call
sbb
dec
add
dec
sub
outsb
rcrb
fstl
sub
adc
roll
aad
or
rclb
or
or
out
push
imul
cs
sub
sbb
cmp
cs
mov
sub
fldcw
mov
add
mov
dec
mov
inc
inc
and
dec
and
or
or
and
or
fistpll
mov
mov
fcmovu
and
sub
outsl
mov
lods
or
stos
and
push
in
cmp
or
pop
xor
mov
and
sti
jle
sub
push
mov
mov
or
mov
pop
or
mov
enter
inc
fisttps
cwtl
sbb
int3
and
pop
pop
or
mov
hlt
iret
jecxz
call
add
jo
push
add
lds
jb
pop
test
fwait
push
inc
sub
loop
adc
mov
int3
push
sub
push
or
stos
mov
inc
sti
or
inc
je
push
std
sub
and
inc
in
mov
jmp
repz
lds
and
std
adc
loop
and
adc
jg
adc
lret
or
xor
data16
push
push
mov
xor
les
push
mov
ss
aad
jmp
xor
mov
les
add
inc
push
add
add
add
jp
ja
sbb
push
cmc
mov
adc
xchg
movsl
cmp
roll
xchg
lock
or
inc
mov
sub
add
mov
or
inc
lcall
fstpl
fnsave
out
insl
or
push
xchg
ss
sahf
sbb
jbe
push
rcr
insl
loopne
jo
dec
pusha
es
insl
and
mov
inc
push
or
push
sbb
loop
push
ret
push
in
xor
pusha
inc
lahf
roll
push
in
jp
dec
push
inc
push
loope
cwtl
add
mov
das
cmp
xchg
mov
popa
orb
fldenv
decb
push
sbb
sbb
test
cmpsb
adc
pusha
popa
add
or
add
push
outsb
adc
es
test
lea
cmp
insl
push
add
mov
and
dec
cld
xchg
insl
cld
fstl
insl
fwait
and
and
lret
in
sub
lcall
xor
clc
and
mov
stos
push
sub
push
movsl
dec
mov
rcrb
pusha
mov
mov
mov
cli
inc
mulb
add
sub
and
sub
out
add
xor
imul
jmp
lds
and
subl
cmp
dec
ljmp
sahf
adc
pop
or
jmp
xchg
lret
int3
pop
jb
xor
test
lods
rolb
rcll
mov
jmp
stos
push
loop
movsl
loope
and
push
stos
js
push
out
outsb
in
sti
aad
aam
xchg
mov
das
push
adc
jmp
dec
lock
push
insb
das
cli
mov
pop
mov
xorb
sbb
add
sub
add
cmpsb
and
loope
adc
fnsave
movsb
outsb
or
pop
insb
jno
xor
std
jb
ss
push
sbb
add
call
or
push
sbb
addr16
fcomip
and
cmpsl
loopne
xlat
mov
shrb
inc
es
cmpl
test
jo
mov
jmp
jns
xchg
push
xchg
adc
inc
inc
inc
roll
add
add
pusha
push
add
cld
mov
in
stos
push
push
inc
mov
cld
adc
jo
dec
pmuludq
add
inc
pop
insb
dec
fidivrs
dec
push
aam
js
inc
xor
fiadds
push
inc
fdiv
push
and
ret
adc
mov
sarb
sub
addl
stos
sbb
push
mov
or
and
dec
mov
or
ljmp
cmpsb
or
or
mov
and
fisubs
jb
jg
cmc
pop
insb
mov
or
mov
loope
dec
addb
add
dec
xchg
pop
jp
lock
or
dec
inc
xlat
rcr
imulb
and
add
pop
xlat
adc
sbb
movhps
cmpsb
cmp
and
ud2
clc
xor
xor
or
outsl
inc
cmp
movsl
out
es
mov
shlb
and
stos
adc
dec
nop
dec
ljmp
cmpsb
rolb
mov
lods
cmp
mov
and
rol
adc
roll
rclb
lahf
leave
jl
aas
add
nop
sbb
lret
mov
add
xor
add
pop
add
in
aam
inc
jp
clc
jge
insb
inc
push
jecxz
jne
movsb
and
or
loopne
adc
push
fstl
loopne
and
addb
loope
cli
adc
and
xchg
xor
inc
shll
pop
jo
mov
sbb
xchg
push
mov
roll
mov
xor
ljmp
les
xor
inc
popf
push
push
sahf
push
pextrw
dec
xchg
insb
xchg
mov
loopne
mov
or
add
push
add
rcrb
mov
lret
jno
cmpsl
lds
rolb
add
rclb
adc
lcall
push
sbb
stos
mov
iret
xor
add
xor
xchg
js
gs
pop
sub
int
mov
or
rorb
sahf
sahf
xor
cli
xchg
sarl
shlb
or
and
mov
mov
push
push
and
adcl
push
int
jle
xchg
dec
lock
push
outsb
in
mov
repnz
and
popa
xor
mov
mov
loop
mov
xor
add
mov
xchg
test
sbb
je
xor
rolb
icebp
pushl
rcrb
and
push
rclb
lock
ret
insb
push
cmp
inc
push
test
cmp
add
testl
or
xchg
push
pop
icebp
sbb
push
jo
adc
cld
aas
mov
push
jbe
and
dec
add
inc
repnz
mov
sbb
mov
incl
adc
xor
sbb
cmp
push
sub
fsubrs
pusha
adc
jecxz
lock
sub
add
cmpsb
loop
das
sub
jo
hlt
test
or
mov
int3
lock
push
jg
lea
cmp
test
xchg
adc
adc
cmp
add
test
jae
hlt
cmp
movsl
mov
add
cwtl
or
xchg
xor
lock
adc
int
outsb
xchg
adc
rolb
aaa
dec
cmp
inc
adc
mov
sbb
cwtl
or
js
add
xor
ret
rol
fisubrl
cmp
cs
lea
dec
sub
and
lock
sahf
jne
dec
and
pusha
adc
add
mov
cmpsb
lcall
ret
cmp
or
xor
mov
aas
and
or
loopne
or
and
jbe
cs
es
pop
add
inc
add
insb
pop
sbb
xor
ret
mov
mov
add
cmp
mov
add
data16
mov
loopne
pop
sbb
add
sub
pusha
outsb
or
xchg
add
js
test
sbb
adc
ss
push
add
rclb
add
mov
push
test
clc
mov
add
lcall
or
pop
inc
adc
das
add
xor
push
mov
xchg
data16
and
sahf
orl
push
cltd
loopne
es
and
stos
dec
and
daa
mov
push
loop
lea
inc
and
push
cmpsb
push
enter
mov
inc
popf
jb
dec
dec
inc
shrl
in
inc
cmc
jne
cmp
adc
pop
fs
xchg
fcoms
test
lcall
cltd
fiaddl
ret
mov
add
andb
je
push
xor
sub
pop
jo
cmc
dec
fiadds
sub
nop
pop
mov
mov
add
divb
aas
xor
lods
outsb
inc
sbb
sahf
and
adc
insb
inc
fstpl
scas
xchg
add
sbb
adc
mov
dec
mov
add
mov
dec
icebp
xchg
xchg
dec
add
sbb
adc
xchg
imul
add
xor
xor
mov
mov
rcrb
ja
insb
push
add
push
inc
shlb
inc
jp
rol
dec
loope
rclb
add
std
pop
and
xchg
mov
dec
add
or
mov
push
mov
jne
inc
adc
inc
js
adc
jle
pop
xor
dec
xor
push
addb
dec
lods
pop
adcl
inc
test
mov
daa
and
aaa
lea
inc
or
or
cmp
push
es
mov
test
or
or
lea
hlt
lds
cmpsl
mov
jge
xor
push
pop
adc
clc
dec
and
or
and
das
aaa
lcall
leave
inc
imul
mov
or
lock
adc
pop
pop
and
or
div
mov
xorb
mov
leave
sbb
jae
fdivr
or
sub
and
shlb
jp
js
cmp
ss
insl
xor
inc
mov
add
adc
sbb
pop
adc
subb
mov
call
add
dec
inc
mov
sbb
cli
movups
aad
and
adc
dec
sbb
into
rcrl
mov
inc
pop
add
sub
test
cwtl
ret
dec
mov
xor
je
mov
roll
pusha
loopne
dec
pop
push
js
xor
sub
lahf
inc
jb
dec
shll
pop
push
adc
es
add
cmp
cmc
inc
arpl
jbe
movsl
loope
movsl
fs
aad
add
or
pusha
or
imul
loope
jg
or
lods
push
inc
or
sarb
smsw
or
cmp
test
xor
push
dec
fisttpl
out
and
andb
inc
add
xor
test
stc
test
out
lcall
sar
add
and
into
jle
dec
jno
jg
inc
and
push
sarl
je
and
data16
test
or
andb
fidivs
loopne
test
jnp
push
loopne
push
fadds
lods
and
xor
nop
and
nop
roll
xor
call
inc
xchg
adc
and
outsb
jns
popf
push
int3
jp
inc
inc
sti
pop
in
mov
loopne
fs
inc
sub
inc
inc
scas
out
hlt
adc
mov
faddl
or
das
sbb
orb
insb
orl
loopne,pn
inc
enter
in
dec
jo
xor
sub
stos
add
cmp
roll
inc
jge
movsl
mov
and
lea
loopne
and
dec
mov
push
add
movsb
pop
out
inc
push
and
add
jl
inc
pop
xchg
and
xchg
shlb
and
inc
sbbl
xchg
adc
push
sub
outsl
cli
and
sub
and
jns
and
adc
pop
xor
inc
adc
lock
xor
lock
and
mov
fstl
lock
cmpsb
into
xchg
and
mov
test
imul
loope
pop
inc
sub
lea
mov
jmp
mov
fsub
mov
fcmovnb
push
rolb
dec
imul
and
cs
mov
div
or
nop
or
ret
dec
push
adc
movsl
mov
call
mov
stos
jbe
decl
or
int3
dec
xor
and
gs
pop
sub
call
clc
add
and
sub
aas
push
rep
outsl
and
nop
loop
mov
add
push
add
adc
hlt
jo
or
add
sbb
xor
and
push
jmp
jbe
test
mov
addb
fiaddl
leave
in
mov
push
push
sbb
aam
adc
push
mov
testb
add
adc
movsl
sar
pop
cmc
or
cmpsb
or
adc
loopne
mov
sbb
and
or
fsts
jg
std
xchg
rol
mov
fstl
dec
push
mov
rcrb
or
xchg
lods
push
mov
decl
adc
push
inc
lret
test
sbb
and
cmp
sub
sbb
aaa
test
jmp
fisttps
pusha
les
mov
push
andl
xchg
jecxz
cmpsb
or
es
add
lods
fwait
int3
insl
mov
loopne
aad
test
icebp
or
sbb
lcall
clc
and
and
inc
adc
mov
inc
dec
lods
or
rolb
dec
hlt
jo
filds
popf
fdiv
xchg
push
and
clc
add
add
incb
dec
call
cmpsl
inc
fistpl
loope
add
dec
shrb
mov
adc
inc
fs
ljmp
andl
adc
repnz
hlt
int
in
add
ficoml
popf
mov
cli
mov
and
mov
sbb
outsl
mov
jmp
mov
sbb
mov
sbb
addl
aad
fidivl
loopne
push
std
movsl
sbb
mov
inc
xorl
xchg
dec
adc
jo
add
pusha
and
icebp
push
or
cmp
jmp
push
ljmp
add
mov
enter
rol
ljmp
cs
mov
loop
mov
hlt
ljmp
mov
jo
fsubs
jae
mov
les
rolb
inc
ljmp
adc
or
add
mov
jbe
add
add
nop
push
lea
xor
ljmp
xor
mov
push
rcll
pusha
dec
inc
rolb
inc
or
pop
ret
push
out
xchg
add
or
sbb
xor
push
ret
dec
mov
mov
add
cmp
std
add
cmc
mov
cs
nop
mov
cmp
push
addl
sub
ret
sahf
adc
inc
rorb
jne
scas
xchg
and
lret
dec
pop
movsb
pop
nop
xor
adc
aam
cmp
rcll
mov
adc
mov
dec
cmp
and
cmc
pop
shlb
jne
or
jo
dec
jo
inc
shlb
add
mov
cmp
lcall
adc
xor
out
push
in
sub
xor
mov
or
jp
and
loopne
notb
hlt
ja
and
mov
xchg
call
lret
rclb
iret
es
jo
xor
and
mov
fdivrl
xchg
outsb
adcb
xor
loopne
xor
add
push
dec
add
jg
mov
add
sub
xchg
cmp
iret
and
clc
fists
jb
pusha
ljmp
adc
mov
add
shrl
push
jne
mov
xor
sbb
or
into
popf
dec
xor
lock
add
mov
sbb
add
pop
push
fsts
mov
pop
push
mov
jo
xchg
push
mov
mov
or
xchg
add
jp
fldenv
mov
jne
lret
clc
fwait
cltd
sub
lds
xchg
add
sub
hlt
push
jb
shr
mov
je
clc
xor
add
pop
or
pop
jo
rcrl
fcoms
das
lcall
dec
in
jmp
dec
ss
or
inc
jne
jo
test
sbbb
xchg
push
ret
movl
inc
dec
adc
stos
shl
push
inc
adc
xchg
mov
xor
and
in
dec
rcrb
cmp
incl
stos
adcb
inc
out
xchg
jb
push
leave
mov
int3
mov
int3
nop
and
mov
cmp
addl
shlb
push
add
in
add
sbb
mov
mov
stos
cmp
es
bound
jmp
sub
mov
cmpsb
or
cs
bnd
or
loop
cwtl
fisubrs
adc
bound
ret
mov
cwtl
andl
icebp
decl
lea
and
dec
xchg
sbb
adc
insl
mov
jg
mov
movsl
shrl
out
or
mov
jp
lock
dec
jb
mov
cmpsb
jg
inc
or
loopne
lock
lcall
mov
push
loopne
xchg
rorb
add
and
gs
jae
mov
pop
ljmp
lret
add
es
ret
fidivl
xchg
fisttpll
test
add
jl
subb
cmp
xor
add
cs
xor
pop
add
movsl
addb
dec
and
mov
out
test
sbb
pusha
fs
test
adc
stc
push
or
inc
repz
push
inc
or
or
add
xor
inc
mov
mov
jo
add
xor
dec
jecxz
or
xchg
xor
push
aaa
dec
mov
inc
cmp
mov
divb
mov
add
movsb
or
fnstcw
and
cmc
rolb
notb
nop
or
aam
mov
adc
push
inc
in
loopne
adc
mov
add
sub
dec
dec
hlt
mov
enter
sub
push
sbb
ret
add
nop
fstpl
call
or
push
inc
sbb
sub
mov
jge
sbb
out
mov
inc
sub
in
inc
mov
ja
decl
and
ja
adc
aad
add
or
push
cmp
dec
ss
fsubl
pusha
and
add
lock
jg
dec
insl
ret
add
enter
xchg
dec
xor
mov
decl
in
lock
rolb
or
cmp
insl
adc
add
lock
mov
cmp
bound
jmp
not
pop
scas
adc
mov
aad
mov
mov
or
add
pusha
add
pusha
aam
test
jg
call
cmpsl
or
es
shlb
xchg
cmp
fldt
push
or
fists
sbb
movsbl
pop
cwtl
and
decl
jle
pop
mov
es
adc
add
out
and
mov
add
jmp
movsb
out
loopne
lret
jbe
or
movsb
aam
pop
add
out
add
add
outsb
call
jne
cld
mov
es
jb
repz
add
pop
sub
adc
fdivl
rorb
push
lock
add
jbe
adc
dec
cmp
call
pop
sub
andb
adc
xchg
sub
and
inc
stos
mov
dec
inc
cli
add
loopne
int3
push
stos
outsb
aam
std
add
rclb
lods
fmuls
xchg
add
inc
addb
add
stos
notb
or
pop
adcl
mov
add
dec
mov
mov
xchg
sahf
jb
testl
cmp
rcr
jo
in
hlt
push
push
fcoml
fldl
jo
sbb
aam
inc
icebp
add
or
and
lcall
jb
addb
sbbb
or
dec
add
mov
sbb
ss
sub
xor
xor
subb
and
push
pusha
sbbb
pop
add
leave
add
sbb
inc
es
sbb
pop
push
leave
mov
mov
push
lcall
lock
int
cmp
push
and
test
or
adc
sub
and
adc
adcb
mov
xor
test
xchg
loopne
adc
cltd
mov
inc
or
cli
add
stc
cmpsl
cmp
inc
and
xchg
mov
jmp
push
cmp
sbb
test
dec
jecxz
mov
hlt
or
std
push
fadds
add
cld
mov
or
stos
aad
jne
gs
inc
test
jo
and
xchg
loopne
orl
mov
es
mov
pop
hlt
sbb
inc
xchg
ret
jp
adcb
stos
mov
mov
lcall
mov
dec
loop
dec
add
rcll
dec
adc
out
addr16
or
adcb
bound
adc
and
jnp
mov
jp
clc
inc
push
in
ss
adc
xchg
add
sub
push
or
mov
mov
es
adc
add
orb
xor
jp
loopne
cld
mov
cmpl
jl
mov
pop
out
mov
rcrl
jmp
or
and
fdivl
mov
add
lea
hlt
mov
orl
xorl
jno
and
orb
insl
push
shr
adc
cmp
jl
pusha
jae
add
mov
andl
or
push
cmpl
push
inc
je
cmpsb
outsl
mov
cmp
cmp
rcrb
push
dec
xlat
fisttpl
dec
pop
je
cmc
xchg
cmpsb
dec
adc
dec
or
add
mov
das
ss
and
lea
es
cmc
and
xor
incl
push
jmp
and
inc
and
inc
push
lds
or
lea
push
adc
fbstp
and
sbb
addb
jecxz
mov
ret
or
insb
loope
xor
mov
fwait
adc
adc
lock
adc
pop
icebp
inc
int3
test
notb
mov
cli
sbb
in
sbb
ret
sbb
push
add
lods
add
lcall
outsl
inc
sub
adc
xchg
inc
push
test
mov
cmc
and
push
mov
sbb
dec
shl
aam
sarb
add
nop
int3
test
filds
cmpsb
fists
loopne
mov
fwait
mov
add
adc
sbbb
add
mov
in
push
arpl
add
mov
xchg
or
push
add
xor
call
add
shll
addb
mov
aas
daa
mov
bound
cmp
adc
js
add
cmp
dec
insb
insl
jns
mov
gs
cmp
nop
xor
push
add
rolb
fdiv
add
in
push
add
stos
and
xor
mov
incl
jecxz
sbb
or
push
add
rclb
js
mov
pushf
lcall
add
aaa
push
loopne
adc
call
test
add
or
sub
aam
xor
dec
aam
lret
or
adc
inc
add
int3
inc
ror
inc
push
sbb
pop
mov
movsl
mov
nop
pushf
dec
sub
in
jmp
mov
ror
shl
ret
xor
sub
adc
or
xor
adc
pusha
and
stos
ret
shll
jbe
lods
loopne
out
sbb
sahf
je
ljmp
push
mov
add
ret
mov
push
mov
pusha
mov
fcoms
insb
or
xor
sub
aas
sub
or
xchg
mov
dec
inc
add
mov
add
inc
pop
cmpb
fisubl
push
aaa
add
push
sbb
das
ret
and
lret
movb
pop
add
push
cld
dec
inc
jg
and
mov
sub
inc
inc
ret
add
in
cmpsb
ds
inc
std
add
push
pop
lock
pop
pusha
add
adc
push
pusha
fsubl
inc
nop
cmp
mov
xor
test
sbb
sbb
inc
sub
pop
and
sbb
ljmp
jmp
inc
and
int3
pusha
cmovbe
outsb
add
bound
loope
lcall
mov
add
cwtl
mov
pusha
add
dec
lcall
mov
add
icebp
cmpb
call
mov
bound
or
push
mov
out
mov
add
lret
cmc
aaa
pop
jb
sbb
lret
nop
sub
inc
ljmp
or
cmpsb
je,pt
cli
add
enter
mov
xorb
das
leave
or
mov
inc
dec
cmp
pop
js
xor
xorl
inc
mov
xor
mov
inc
lret
push
mov
pop
mov
lock
mov
mov
jo
mov
inc
jg
add
dec
lods
int3
or
int3
out
cmp
xchg
lcall
xor
hlt
je
or
push
push
fidivl
pop
lahf
and
std
add
fnsave
std
rcr
mov
pusha
and
pushf
add
js
sbb
int3
test
add
and
ljmp
jo
loopne
stos
aam
cmp
ret
mov
adc
cmp
mov
lret
fcmovne
pop
jp
mov
and
rcll
sub
insb
inc
leave
sbb
cmpb
push
jo
frstor
fildl
imul
push
rcl
inc
mov
xor
push
sbb
rol
sbb
adc
les
lock
xchg
mov
pop
jmp
dec
daa
mov
mov
testb
xchg
aas
cli
cmp
nop
es
sbb
mov
inc
pop
and
insl
add
lock
imul
push
loopne
movb
add
mov
jle
add
into
lret
cmp
or
pop
or
adc
pop
insb
sbb
call
aam
fmuls
and
pusha
ret
xor
adc
inc
mov
and
es
push
pop
out
add
dec
clc
in
incl
xor
or
shl
mov
and
or
add
and
adc
ljmp
add
jns
add
lock
ds
nop
ds
inc
ljmp
mov
adc
or
mov
adc
push
dec
inc
push
push
or
andl
mov
addb
add
test
pop
stos
sbb
jo
cwtl
sbb
cmp
aaa
and
adc
inc
dec
jbe
std
xchg
adc
pop
adc
js
or
add
push
and
push
add
pop
dec
or
push
fmuls
inc
cmpsb
push
inc
dec
cmp
adc
sbb
or
add
std
and
mov
xor
insl
cmp
cmp
rcrb
and
decb
and
push
or
or
fs
movsb
lret
add
pop
into
mov
sbb
or
les
shlb
sahf
sbb
pop
aad
mov
ret
and
push
push
add
add
add
dec
or
xchg
movsb
adc
aaa
mov
adcb
mov
mov
les
mov
idivb
mov
nop
shl
orb
pushf
les
incl
mov
inc
adc
mov
mov
inc
cmp
sbb
add
and
inc
push
andb
fnop
pop
sub
xorl
ljmp
inc
clc
or
imul
adc
sahf
outsb
arpl
xor
inc
ss
inc
cld
lcall
inc
adc
push
or
fistl
adc
xor
fsts
imul
xabort
inc
hlt
call
pop
add
add
xchg
and
mov
cmp
into
ss
add
push
mov
push
mov
cmp
sbb
push
fdivrl
cmp
scas
mov
add
negb
pop
jbe
adc
push
adc
adc
orb
lret
sbb
int3
fpatan
adc
fisubs
xor
mov
push
rcrb
mov
bound
or
lcall
add
jb
into
inc
mov
fdivrl
add
fbld
mov
xor
add
repnz
and
into
aad
jle
ljmp
mov
adc
decl
cld
fucom
popa
sbb
mov
cwtl
rcrb
jb
pop
fs
movb
rcrb
mov
and
add
inc
ds
push
mov
xor
add
or
pop
cli
cmp
divb
call
or
jp
enter
out
sbb
push
cmp
out
or
and
mov
push
jno
movsb
dec
mov
hlt
sti
incl
andb
and
pop
mov
test
insl
pop
cmpsl
or
ret
inc
test
and
mov
add
pop
xor
and
inc
adc
adc
pop
dec
push
add
sahf
cwtl
scas
pushl
push
ret
mov
xor
inc
dec
or
adc
jp
aad
lahf
ljmp
xchg
test
roll
dec
jmp
mov
call
adc
inc
xchg
lds
push
inc
mov
sbb
out
mov
aaa
adc
out
mov
incb
mov
movb
mov
push
scas
xor
movsl
icebp
lea
mov
out
and
add
pusha
idivb
mov
popa
add
and
leave
cmp
rclb
mov
inc
push
test
adc
and
loopne
cwtl
inc
movsl
jle
fs
xchg
ficomps
fldcw
adc
daa
nop
xor
inc
frstor
jne
add
xchg
clc
int
test
add
add
js
sbb
adc
stos
les
sbb
es
xorb
inc
loope
inc
scas
xchg
pop
fisubs
or
lcall
jl
mov
and
out
inc
or
gs
pushf
data16
dec
dec
rclb
jge
lds
xor
sub
push
add
add
scas
push
fnstcw
loop
call
ss
gs
sub
dec
incb
cmc
and
or
clc
addl
and
push
mov
stos
mov
filds
cs
inc
add
popa
add
pop
shrl
in
adc
fdivs
cmpb
jg
cwtl
push
add
fsts
mov
lock
sbb
add
xor
int3
xor
cmpl
cmp
sbb
mov
or
mov
or
adc
popf
inc
cmp
pop
add
int
fstpl
mov
testb
cmp
cmp
and
data16
rcrb
jnp
scas
ret
xor
orl
es
hlt
xchg
push
jo
add
and
mov
and
adc
pop
insb
cli
test
xacquire
and
xor
add
mov
and
ret
cmp
mov
call
inc
inc
test
outsl
adc
test
in
outsb
pop
xor
inc
mov
fadds
rorb
or
dec
push
lock
stos
dec
inc
fcomp
outsb
cmp
rclb
push
sbb
mov
lret
cmc
xchg
push
pop
ret
ret
sbb
ljmp
shrb
sub
xor
mov
imul
mov
insb
add
outsb
and
add
pop
test
pop
std
data16
adc
add
subl
es
rcrb
orb
leave
add
mov
and
jmp
adc
xor
push
loope
xchg
in
jg
sub
or
inc
fs
inc
scas
sub
inc
sbb
pop
fs
xor
cmp
or
or
add
sbb
inc
stos
dec
cld
add
add
rorl
and
xchg
push
sbb
sbb
sbb
sahf
cmp
ds
dec
stos
or
sar
cmp
into
adc
ret
mov
cmp
les
es
movsb
enter
loopne
push
pop
add
cmpsb
in
cli
stos
push
adc
xchg
or
ja
xchg
ret
sahf
pushf
jbe
or
add
andb
mov
addb
pop
inc
into
pushf
popf
xchg
xchg
nop
xchg
xchg
icebp
inc
out
sbb
inc
rcr
inc
insb
shlb
hlt
int3
adc
mov
or
loop
cmpsb
or
je
rorb
test
outsb
cmc
pop
add
seto
dec
adc
js
inc
xchg
push
mov
pusha
orl
lcall
cli
mov
shr
sub
mov
loopne
mov
test
dec
or
or
bound
and
lock
pop
loopne
pop
jecxz
add
push
and
pusha
pop
lock
jnp
push
sbb
movsb
fwait
and
out
or
mov
add
and
es
fiadds
incb
xchg
cmp
jmp
add
push
or
xorl
add
mov
sub
pusha
sub
sbb
into
add
into
push
xchg
adc
adc
adc
pop
test
and
loop
or
adc
xchg
mov
sub
add
add
fs
pusha
or
jo
push
outsb
loope
std
das
adc
inc
dec
pusha
add
push
andb
or
jg
jae
les
and
popf
aad
jmp
loope
std
das
dec
femms
pop
movsl
jne
adc
mov
adc
mov
setge
mov
pminsw
outsl
in
stos
es
add
add
or
pop
rcll
orb
outsb
inc
cltd
sbbb
mov
jg
pop
aad
add
bound
pop
or
pop
lret
mov
sar
ret
popa
sub
add
push
adc
loope
inc
insl
jb
pusha
adc
clc
mov
push
push
hlt
in
mov
jbe
rclb
stos
cwtl
adc
adc
mov
push
xlat
and
out
push
xorb
pushf
mov
fdivs
xor
call
pusha
sbb
lods
imul
xor
adc
adc
mov
inc
sub
add
lods
faddl
stos
xchg
mov
cltd
push
cmp
shll
icebp
push
push
stc
mov
adc
out
sub
hlt
xlat
in
loopne
mov
add
mov
mov
test
popa
add
pop
xor
xor
mov
ret
in
popa
fwait
push
pusha
jl
push
push
mov
pop
dec
adc
jnp
stos
loopne
cs
dec
fistl
jns
or
stos
insl
cs
jae
jbe
push
add
jbe
das
pop
popa
sbb
in
jmp
mov
lock
or
pop
push
icebp
shll
cmp
popa
push
sbb
add
loope
cmpsb
imul
aad
stc
scas
and
leave
add
cmpsb
imul
add
fcmovnu
lahf
and
lock
sbb
jb
jae
add
mov
add
inc
mov
add
cltd
idivb
jge
popa
jmp
push
divb
pop
add
inc
sbb
add
mov
push
lods
push
sub
add
push
cltd
pop
popf
or
shll
cmp
test
jle
subb
stc
mov
shrb
pusha
stc
inc
push
mov
leave
gs
rdmsr
cmp
mov
lods
nop
test
sub
ds
sbb
in
rorb
jg
stos
jg
testb
pop
jg
add
je
stos
sbb
fidivl
in
add
push
stos
test
out
in
lcall
sbbl
or
stc
mov
loope
push
push
pushf
out
add
mov
jp
repnz
sbb
xor
push
aam
sbb
add
push
lock
add
adc
sti
add
hlt
sub
add
pop
iret
add
dec
jno
outsl
mov
fcoms
push
adc
fistpl
ret
mov
pop
xor
xchg
lock
push
aam
repz
dec
test
or
lcall
jae
push
xchg
cmc
dec
popf
pop
imul
xchg
push
loope
mov
mov
pop
mov
jo
jne
or
adc
jo
jbe
lock
jne,pn
and
js
lock
jne
repz
notl
sti
imul
mov
add
jge
xchg
cmp
add
add
aas
xor
daa
in
imul
mov
pop
add
pop
xor
mov
xchg
sbb
push
jae
je
stos
add
testl
xor
sub
sti
sbb
sbb
imul
mov
push
inc
lock
mov
jno
popa
mov
out
pop
cli
push
xchg
aas
cld
std
sub
mov
movsl
or
lcall
or
cmpsb
mov
cmp
ljmp
out
add
mov
sbb
jnp
xor
addl
sbbl
xchg
add
sahf
fisubs
sti
mov
jmp
sbb
inc
dec
mov
and
imul
popa
pop
push
popa
imul
insl
cwtl
bound
mov
mov
mov
subb
or
subl
aad
pop
pushf
fs
adc
std
ds
movsl
loope
std
sbb
movsb
lock
jno
adc
jge
je
lock
push
jo
stos
in
xor
mov
repz
lcall
push
push
scas
push
sbbb
ret
rcrl
mov
in
rorl
mov
push
cmpsl
sti
loopne
push
sub
insl
popf
lahf
lock
cmp
and
sub
fisubrl
sbb
sbb
int
xlat
sbb
fbstp
cmpsb
imul
into
imul
pop
push
push
adc
pop
inc
dec
popf
dec
std
inc
lds
mov
mov
dec
sahf
sub
or
test
sysexit
lods
jge
push
jae
ja
or
jnp
jg
arpl
fdivs
push
push
add
pop
push
xor
imul
inc
inc
sbb
mov
xor
shll
mov
add
xchg
add
stos
fwait
push
lahf
add
dec
repz
div
xor
repz
jmp
out
pop
repz
out
rcl
fcmovnu
add
sub
push
iret
add
cmpsl
imul
cmp
and
dec
shll
pop
add
xor
or
jae
jnp
xor
repz
imul
xor
repz
pop
pop
inc
inc
dec
repz
dec
dec
mov
mov
xor
cmpsl
stos
scas
xchg
repz
repz
fwait
lahf
addl
repz
pushl
jmp
shl
xor
repz
fcmovnu
ret
cmpsb
or
lret
add
xor
xor
jnp
aas
and
sbb
das
adc
clc
pop
rorb
cmpsb
or
ja
jns
cmpsb
jnp
arpl
lcall
pop
pop
inc
jns
cmpsb
jns
dec
dec
mov
cmpsb
jns
cmpsb
mov
lcall
fwait
lahf
cmpl
jns
mov
lcall
add
insb
pop
sub
push
fildl
loop
lcall
lret
rolb
xor
cmp
aas
sbb
push
daa
sbb
das
adc
push
inc
pusha
mov
pop
shl
mov
cmpsl
xor
xchg
xchg
lcall
jmp
movsb
rcl
insb
in
cli
sbb
loop
sbb
mov
rcrl
lret
movsb
addb
add
dec
nop
pusha
stos
movsl
mov
push
cmc
mov
xor
and
pushf
pop
cmp
subl
push
add
pop
push
cwtl
dec
scas
cmp
pavgb
or
jnp
cmp
xor
imul
cmp
push
push
pop
pop
inc
inc
cmp
sarl
dec
mov
mov
mov
xor
xchg
fwait
push
mov
out
loopne
lret
xor
add
add
shll
sti
jmp
out
jmp
imul
imul
imulb
call
loopne
dec
jnp
sbb
das
adc
xor
fwait
movsl
pop
sbb
pop
or
rcll
dec
jae
mov
cmp
stos
shl
push
mov
andl
sbb
mov
adc
add
sbbl
test
pusha
sahf
add
adc
pusha
dec
aas
sub
int3
jle
dec
jnp
rorb
fcomp
or
inc
cmp
enter
lcall
lea
and
sub
divl
int
add
lcall
js
fdivs
add
xor
and
mov
out
or
in
and
les
fildl
pop
add
sub
ret
inc
push
ds
xor
xor
sbb
into
add
out
loop
xchg
xor
mov
xchg
xchg
dec
or
nop
pusha
mov
jo
cld
testb
adc
adc
or
addl
inc
stos
and
mov
movsl
ss
insl
leave
dec
ds
adc
outsl
nop
in
cli
inc
cwtl
ret
or
sbb
cmp
leave
pop
add
call
sub
fisttpl
push
rolb
mov
roll
add
lret
adc
enter
xlat
incb
fiadds
leave
mov
loopne
jecxz
and
pop
push
int3
out
and
pop
fistpl
adc
or
rclb
push
fwait
cwtl
stos
xchg
and
fstpt
add
and
add
adc
loop
mov
aaa
jmp
add
enter
popa
add
inc
add
xor
sbb
in
mov
and
loop
out
and
adc
inc
add
or
adc
decl
pop
out
inc
add
jb
dec
mov
ret
push
and
pop
cmp
roll
adc
dec
adc
ja
mov
add
add
and
clc
dec
pushf
or
push
daa
xchg
pop
cmp
loope
or
mov
mov
or
or
dec
loopne
mov
aam
mov
xlat
cmp
or
add
je
int
dec
ss
add
fldl
cmp
add
xor
les
in
push
pop
stos
adc
std
fildll
adc
dec
mov
int3
roll
divb
icebp
or
adc
push
mov
add
jg
jae
lret
enter
frstor
mov
fcomps
lret
push
pop
mov
add
das
out
out
test
fildl
jp
pushl
sbb
arpl
and
outsl
add
mov
or
les
ret
adc
push
mov
adc
test
mov
adc
mov
sbb
lods
xchg
in
jae
mov
stos
push
popa
push
out
jne
adc
ja
pushl
imul
shlb
add
inc
dec
or
add
add
pop
pusha
push
pop
adc
adc
or
add
add
int3
mov
aam
or
adc
sbb
and
mov
lcall
js
rolb
test
into
add
xlat
xor
sub
ret
leave
ret
outsl
nop
push
outsl
xchg
add
sub
test
add
add
int
dec
icebp
testb
dec
or
push
repz
and
mov
mov
add
subl
shlb
push
push
lret
aam
out
cmp
outsl
js
lret
rcl
add
rolb
push
ljmp
cltd
aam
lret
push
inc
or
push
call
mov
addb
sub
adc
orb
inc
fcmove
xor
xor
in
in
icebp
or
rolb
iret
xor
jne
add
mov
sub
insl
or
or
lret
jbe
pusha
jg
add
rolb
add
and
ja
mov
xor
add
lahf
and
test
lock
out
pop
loop
jmp
xchg
mov
mov
pop
xlat
lret
inc
and
es
popa
inc
mov
xor
sbb
push
jecxz
and
sub
add
std
jg
sbb
xor
dec
fbstp
mov
sub
and
or
shrl
push
push
adc
mov
mov
in
mov
pop
outsb
mov
loopne
fwait
nop
movsb
or
sub
pop
and
sbb
inc
mov
mov
and
adc
rol
dec
pop
clc
outsb
fstpt
and
mov
inc
or
sbb
fildll
push
add
add
in
adc
sub
and
add
or
push
hlt
fstpt
fsubs
insl
icebp
or
insb
or
push
cmpsb
add
xorl
imul
movsbl
mov
or
mov
imulb
imul
inc
inc
scas
gs
and
or
cmp
pop
cld
cmp
ja
sbb
pop
divl
dec
rclb
add
or
mov
mov
push
adc
mov
jbe
pop
mov
jp
push
pop
mov
pop
adc
mov
push
ljmp
add
mov
xor
adc
repnz
rolb
aad
shlb
es
push
add
cld
cmpb
add
inc
pop
cmpsb
jne
adc
pop
sub
movsb
xor
outsb
sbb
jg
add
inc
push
sbb
inc
orb
or
iret
push
pop
add
imul
icebp
arpl
or
aaa
or
bound
or
filds
stos
call
or
jbe
add
in
stos
test
pop
mov
push
imul
add
jecxz
mov
jmp
popa
mov
roll
inc
sub
xor
add
icebp
sahf
sub
mov
add
pop
cmp
add
cmp
inc
push
lcall
or
lds
adc
xor
roll
or
add
int3
lock
inc
add
mov
sarl
addl
inc
jb
xor
addb
push
or
fisubl
movsb
inc
add
scas
and
aad
ss
rorl
adc
ret
pop
sub
daa
leave
inc
or
sub
ret
sub
insb
adc
xor
pop
add
scas
add
dec
xorb
mov
popf
mov
adcl
add
addb
addl
aad
icebp
fisubrl
cld
add
sub
es
mov
mov
cmp
andl
and
andl
mov
aaa
inc
sbb
push
mov
shl
sarl
sbb
adc
cmp
shlb
mov
mov
jg
mov
lret
sbb
ljmp
add
jo
cwtl
orl
mov
mov
push
mov
lahf
pop
or
xchg
sbbl
out
push
das
clc
jg
ret
sbb
or
inc
dec
and
push
xor
pop
cld
sbb
or
inc
sbb
js
pop
sub
mov
daa
roll
mov
xchg
pop
add
daa
inc
inc
shlb
out
mov
xorb
push
and
imul
and
cmc
negb
sar
ret
fisttps
bound
aas
fs
fimull
sarl
bound
sub
add
adcl
or
and
arpl
adc
loope
outsb
aas
dec
sub
add
mov
sbb
mov
rorl
lods
adc
fs
imulb
push
dec
loopne
orb
aaa
adc
cmc
push
adcb
lea
pop
sti
mov
adc
pusha
add
leave
call
add
add
sub
push
stc
mov
mov
insl
test
add
inc
jns
or
add
out
scas
adc
inc
fadds
pusha
adc
test
adc
loope
insl
outsl
insl
stos
dec
pop
xchg
loopne
mov
leave
add
jecxz
and
and
cs
mov
and
stos
test
or
lock
cmp
ret
lahf
js
das
push
stos
jecxz
insb
scas
loope
add
pop
sub
pusha
push
push
push
mov
aam
or
insl
pop
or
pop
cmp
add
push
fisubrs
lea
mov
sub
roll
cwtl
or
imul
ja
sub
push
pusha
xor
xchg
call
pop
push
push
lock
cs
pop
push
mov
xorb
xchg
push
adc
pop
clc
je
push
push
xchg
or
sub
inc
push
or
jo
ret
push
and
nop
push
push
jns
pusha
loope
and
loope
test
push
push
push
lods
xchg
add
ljmp
sbb
movsl
bound
sbb
mov
push
std
movsl
pop
jmp
mov
jmp
mov
sub
ficoms
insl
inc
leave
pop
mov
dec
mov
jno
movsl
sahf
not
insl
sbb
out
aas
xor
or
and
add
shl
or
add
out
in
pop
lea
inc
mov
das
xorb
pop
push
add
xchg
or
scas
movsl
cmp
stos
je
mov
push
jecxz
add
jns
mov
rolb
daa
add
adcl
cmc
out
jns
inc
mov
rcrl
lock
adc
lods
incl
and
stos
jo
icebp
and
and
mov
dec
sarb
les
add
lock
ljmp
mov
mov
jae
jae
inc
sbb
mul
imul
fidivl
lahf
lret
aas
lock
sub
aad
das
pop
clc
lahf
lret
addb
push
sub
jp
push
sub
push
lock
scas
ret
xor
test
jmp
push
mov
pop
dec
mov
stos
adc
jle
add
pop
lods
fstps
pop
mov
dec
stos
inc
dec
mov
ds
add
push
or
push
ret
dec
orb
dec
add
cs
sbb
add
pop
xor
pop
es
xchg
pop
cs
dec
lods
aas
push
xor
or
fsubrl
dec
pop
sub
mov
sbb
or
dec
or
call
dec
adc
roll
xor
pusha
dec
mov
pop
mov
jl
outsl
aad
pop
jo
ret
addb
or
jo
ret
mov
or
sub
stos
hlt
dec
push
cs
sbb
pop
dec
mov
clc
fldenv
push
pop
mov
sub
cs
lea
pop
jbe
pop
adc
dec
stos
fnstsw
mov
add
faddl
add
mov
gs
data16
sub
popa
dec
pusha
popa
sti
orb
imul
sahf
add
jnp
rolb
dec
outsl
or
push
ret
out
sbb
pop
or
dec
hlt
int3
mov
test
xchg
push
or
mov
xor
subb
into
push
rolb
imul
test
pop
adc
inc
lcall
es
incl
mov
mov
push
mov
or
mov
mov
mov
test
mov
push
test
jnp
jne
cwtl
das
iret
test
mov
nop
mov
pop
movsb
scas
jbe
sahf
daa
and
sub
div
into
adc
jp
in
or
in
add
lret
bound
add
lcall
fnstsw
test
scas
inc
add
xor
cltd
nop
lcall
mov
or
sbb
mov
hlt
scas
jle
or
add
mov
mov
cmp
mov
bound
orb
mov
and
mov
dec
or
decl
add
add
mov
data16
cmp
adc
jecxz
push
push
dec
lock
add
mov
sbb
lods
mov
std
insl
rcrl
add
cli
xchg
push
and
pop
mov
add
add
inc
xor
add
lock
inc
outsb
mov
mov
sbbb
call
add
mov
lods
mov
adc
mov
or
and
popf
lods
mov
pop
lock
pusha
sbb
xchg
add
int3
add
pop
pop
mov
xchg
lods
rcrl
mov
push
adc
add
xchg
js
mov
add
aas
in
and
leave
sahf
sbb
inc
test
or
pop
popa
xchg
int3
mov
xor
ret
add
mov
sub
insb
mov
sub
mov
push
test
scas
mov
adc
andb
push
mov
mov
add
or
inc
inc
ret
mov
xor
inc
inc
rorl
movsb
repnz
xchg
add
int3
push
mov
ret
jae
adc
pusha
add
add
into
sbb
sbb
popf
movsb
and
mov
mov
inc
pop
les
popa
mov
sbb
dec
pop
mov
adc
divb
xchg
fsubrl
mov
test
mov
mov
scas
addb
popf
mov
icebp
outsl
inc
or
cltd
mov
test
jne
add
jle
sbb
or
fidivl
fld
leave
or
xchg
push
pop
fdivrs
mov
adc
aaa
das
mov
add
mov
mov
ret
shll
mov
arpl
xchg
xchg
add
jl
adc
aas
cld
xchg
add
hlt
ljmp
add
add
lcall
scas
nop
push
pop
adc
repnz
and
mov
sub
cmp
mov
push
sub
test
add
mov
dec
jb
lods
mov
mov
sbb
repnz
add
inc
mov
leave
cwtl
mov
ja
das
test
test
add
add
cli
jmp
orb
inc
mov
jle
sbb
movb
xchg
cmp
cmpsb
in
mov
add
test
enter
call
gs
inc
mov
in
xchg
fsubs
push
shrl
clc
das
lock
repnz
shlb
clc
scas
lcall
inc
and
imul
sarl
and
ret
sbb
add
mov
push
shrb
ret
lds
ret
or
adc
adcb
or
test
mov
mov
movb
jg
aam
test
add
roll
inc
ja
and
add
add
scas
js
jno
xchg
incb
inc
pusha
inc
add
inc
cs
rolb
cltd
insl
fdiv
mov
adcl
pop
test
fimuls
test
stos
mov
adc
aaa
sbbl
and
ret
xor
andb
stos
xchg
push
add
in
out
hlt
mov
shl
mov
inc
ljmp
add
daa
clc
sbb
adc
pop
cmp
and
in
loop
ljmp
and
xchg
in
popl
lds
push
ret
rol
in
rcll
mov
aam
inc
push
nop
add
incl
orl
dec
push
jp
mov
pushl
lods
pusha
inc
cwtl
test
push
fsubrs
test
mov
movsl
sbb
stos
lods
mov
loopne
adc
inc
adc
push
hlt
aas
inc
outsl
dec
or
add
mulb
sub
inc
adc
add
bound
mov
aam
inc
lds
and
fwait
xor
imul
leave
inc
and
jne
out
jno
or
jg
jg
and
loop
test
mov
psrad
dec
and
add
mov
add
mov
mov
sub
gs
mov
icebp
xchg
and
sbb
or
lods
movsl
ljmp
scas
mov
inc
mov
popf
and
or
mov
add
incl
inc
loope
aad
xchg
xor
gs
push
pusha
xlat
outsb
jmp
mov
and
mov
lahf
sbbl
add
push
adc
mov
cmp
add
pop
lcall
jg
and
lahf
and
mov
sbb
outsl
mov
ljmp
pusha
push
mov
xor
dec
sub
loopne
cmp
les
testl
add
inc
add
iret
adc
mov
add
mov
adc
push
jo
insl
and
or
pop
in
and
jecxz
cwtl
or
fs
loop
and
push
enter
hlt
popf
cwtl
mov
in
mov
mov
and
and
movntq
cmp
gs
mulb
xor
add
mov
or
jg
push
lret
movsb
dec
nop
xor
in
out
loope
cmpsb
decl
pusha
xchg
loopne
mov
movb
dec
das
ret
loopnew
inc
loop
xor
xor
sbb
data16
ja
daa
push
fidivrs
mov
ret
cmp
in
or
add
or
decl
mov
aaa
push
add
andl
mov
loope
xorl
or
jb
dec
and
call
in
loope
mov
and
lock
aas
cltd
ret
rclb
or
adc
testb
inc
mov
adc
push
sahf
inc
jl
or
lcall
rcl
pop
pushf
mov
fsubs
call
sbb
mov
pop
add
push
aad
leave
gs
ficomps
mov
push
addb
dec
ljmp
xor
mov
rolb
scas
ficoml
mov
add
xorl
mov
cmpsb
add
push
stc
lock
icebp
or
jne
pop
or
movsb
mov
mov
stos
lods
add
mov
clc
adc
xor
cltd
xor
in
clc
notb
mov
xor
lret
mov
adc
fidivl
and
or
adc
pop
les
xchg
orb
push
pop
mov
rorb
xchg
adc
or
xor
mov
shll
movsb
cmp
add
ror
jo
cmc
ja
mov
pushf
adc
mov
out
add
mov
mov
add
xor
lcall
add
clc
or
es
aaa
cs
pushf
mov
sub
cmp
cs
sub
adc
add
incl
aam
test
push
scas
nop
mov
or
rclb
mov
sbb
fildll
aad
test
loop
mov
test
mov
mov
add
js
and
lock
xlat
pushl
and
dec
adc
push
mov
addr16
test
lret
cwtl
loopne
cmp
jno
std
lods
or
or
adc
xor
sarb
add
mov
jecxz
pop
push
xor
or
adc
scas
cmpsb
popf
out
mov
add
lcall
push
add
adc
test
inc
mov
mov
add
insb
mov
sbb
fimull
jecxz
add
movzwl
adc
in
or
add
or
into
mov
jmp
fst
add
packsswb
test
fwait
push
mov
pop
imul
call
sub
ljmp
mov
sarb
adc
loopne
mov
xchg
or
xor
out
xchg
and
fs
lods
mov
add
std
mov
add
mov
push
movl
mov
jo
cld
call
loopne
stos
mov
stos
and
lock
lcall
sahf
jo
mov
dec
ds
xor
or
daa
mov
incl
jp
add
cmp
jnp
cwtl
testb
sti
adc
orl
xor
pop
stos
mov
xchg
icebp
add
add
cltd
mov
mov
mov
into
repnz
mov
push
scas
mov
mov
sbb
push
jl
dec
loop
mov
es
add
rcrl
adc
mov
ffreep
sub
add
adc
lahf
mov
mov
xchg
outsb
jnp
pop
add
rcll
push
adc
adc
jl
dec
or
clc
jg
scas
mov
lods
xor
into
push
jle
xorl
in
aaa
or
add
pop
loop
add
mov
loopne
pushl
orl
lret
adc
inc
and
add
bound
mov
fs
adc
add
xchg
add
das
mov
ret
ds
or
mov
xor
xchg
lock
repnz
nop
aam
test
push
cmp
cmp
shrb
cs
movb
mov
test
mov
cmp
mov
fwait
mov
jmp
push
in
push
in
add
test
jb
loop
insl
cld
test
mov
cwtl
pop
roll
mov
clc
data16
outsb
mov
loopne
add
nop
cwtl
lahf
and
outsl
cld
add
or
push
pop
les
adc
std
cmp
xchg
sbb
jp
mov
scas
adc
in
inc
add
push
dec
push
mov
les
dec
add
pop
cs
ret
out
int3
mov
add
cmpl
mov
xchg
push
sbb
stos
and
sbb
mov
test
mov
aaa
add
hlt
int3
cwtl
mov
mov
rcll
mov
dec
or
push
or
or
or
movsb
sub
es
mov
adc
mov
mov
add
jbe
mov
mov
sbb
and
nop
add
pop
scas
movsl
push
adc
stos
adc
add
mov
mov
push
out
mov
xchg
loope
add
mov
sub
loopne
or
sbb
or
out
mov
and
add
test
mov
mov
incl
and
call
ret
cmpsb
addl
das
cli
sbbl
pushf
add
dec
adc
mov
cmp
lock
mov
mov
orb
mov
sbb
orb
test
mov
adc
subb
loope
pusha
mov
mov
test
inc
das
xor
movsb
iret
add
test
mov
push
xorl
sahf
fs
cmp
test
inc
ss
and
scas
mov
adc
lahf
add
stos
mov
jb
aam
fiaddl
sahf
subb
adc
adc
lds
js
inc
inc
push
jle
repnz
mov
add
incb
inc
adc
adcb
negb
into
sbb
inc
mov
lods
fldl
mov
jecxz
enter
fidivs
or
inc
rorb
add
les
push
test
enter
or
mov
mov
addl
pushl
in
push
sbbl
mov
out
add
add
jbe
std
scas
inc
add
inc
add
sbbl
adc
xchg
mov
scas
mov
cli
roll
add
ja
adcb
inc
add
inc
je
push
data16
inc
stos
sbb
mov
add
fdivr
xchg
or
shrb
aam
fisttps
insl
dec
sarb
cltd
sbb
popf
mov
pop
adcb
sahf
push
jo
sub
cmp
mov
insl
add
subb
xchg
dec
stos
mov
add
inc
popf
ffreep
shrb
ret
dec
mov
jg
adc
call
mov
add
mov
test
and
sub
movsb
js
loope
jo
xchg
popf
cltd
push
in
and
scas
in
or
nop
sahf
sub
xchg
push
cmc
jnp
mov
jp,pn
jmp
add
out
add
push
jle
inc
or
pusha
dec
sub
fsubrs
push
mov
roll
stos
scas
sbb
push
cmpsb
add
and
in
dec
mov
aaa
fimuls
lahf
mov
mov
arpl
or
mov
jp
push
ljmp
je
adc
adc
xchg
call
mov
pop
sahf
jns
or
adc
push
sahf
decl
in
outsl
movsb
loopne
lahf
inc
and
xchg
lahf
xor
mov
mov
std
incl
call
cmpsb
or
cmp
push
and
aad
add
lea
shrb
ljmp
in
loopne
mov
call
lcall
pusha
add
loope
jg
xchg
imul
or
test
jg
orl
mov
cwtl
test
aam
sti
aas
xchg
popa
mov
aas
adc
subb
aaa
dec
mov
call
push
or
mov
gs
int3
xchg
jo
ljmp
imul
mov
ja
pop
add
and
xor
jbe
jle
lret
fmuls
aam
enter
adc
xchg
mov
and
xor
xchg
mov
add
mov
sub
outsb
mov
movsb
leave
xchg
mov
mov
mov
sbb
decl
loopne
mov
mov
and
jge
call
mov
or
mov
dec
insb
cli
mov
inc
into
sbbb
cwtl
shlb
add
jg
adc
leave
stos
and
add
push
xchg
jecxz
mov
pop
js
mov
mov
sub
mov
pop
aam
inc
dec
inc
push
sub
push
stos
mov
fdivrp
push
into
adc
pop
pusha
imul
aad
lds
pop
mov
es
xchg
mov
sbb
mov
aaa
lds
popf
push
push
or
jmp
aam
sti
or
mov
adc
inc
stc
mov
insb
loopne
mov
nopl
push
js
out
pusha
or
mov
xor
sub
add
aam
dec
lea
ret
enter
inc
clc
out
cli
xor
insl
mov
push
filds
dec
je
jb
add
imul
test
mov
mov
mov
dec
adc
jno
add
cmp
cli
mov
jno
inc
adc
ss
pushf
mov
cs
ljmp
mov
jmp
in
fisubl
arpl
or
aaa
mov
push
ret
cmp
sub
mov
mov
dec
decl
insl
aam
outsb
mov
loop
sarl
js
scas
ljmp
pop
hlt
add
clc
jne
and
or
testb
xchg
xor
lcall
cli
lods
xor
mov
nop
inc
xor
stos
addr16
xor
mov
mov
dec
mov
in
inc
iret
lahf
lods
or
add
pop
std
ja
cmpsb
ss
mov
xchg
mov
notb
adc
mov
cmp
add
loope
aam
xchg
fidivrl
sbb
repnz
pop
or
pop
or
and
jnp
adc
enter
dec
es
lock
push
sub
pop
jb
sub
loopne
lock
xor
xor
lods
dec
fdivrl
adcl
pop
pop
sub
pop
adc
fnstenv
push
adc
lea
pusha
sarl
bnd
mov
cld
lods
jle
repnz
cwtl
xchg
or
jl
insl
cld
lcall
repnz
and
inc
lret
jae
scas
mov
repnz
daa
mov
out
mov
insb
sub
mov
ljmp
or
repz
mov
add
add
dec
lock
pop
add
sbb
scas
call
inc
lcall
dec
add
add
lcall
jl
cs
mov
testb
mov
mov
lret
cmpsb
rcrl
out
push
jmp
test
pop
xchg
hlt
imul
ljmp
dec
imul
das
add
push
mov
test
movsb
ja
jmp
sti
add
sbbb
push
imul
or
push
sub
push
icebp
jb
dec
out
aad
add
test
dec
inc
lret
add
fsubl
push
add
imul
test
xor
fs
and
push
and
xlat
stos
sbb
lock
xor
sbb
stos
xchg
dec
mov
lods
orb
pop
cmp
sbb
popa
jecxz
jno
cmp
shl
pop
sub
insl
aad
inc
sbb
cmp
mov
pop
clc
orl
add
push
push
xlat
or
test
mov
push
add
and
sar
add
xchg
sub
fimull
jge
daa
add
scas
movsl
sti
add
clc
mov
dec
outsb
fcmovnu
imul
dec
loop
mov
leave
mov
pop
xorb
adc
mov
mov
sbb
mov
jge
mov
dec
les
sub
imul
mov
adc
inc
sti
or
sub
mov
xchg
es
fnstenv
xlat
pop
adc
adc
inc
cwtl
sub
insl
mov
insb
mov
push
jl
sub
mov
jg
sub
adc
jno
add
cmp
push
adc
and
loop
push
insb
add
cli
xchg
inc
cmc
sub
inc
mov
iret
incb
pop
pop
fcomp
add
mov
aas
lods
repnz
dec
aas
push
cli
in
js
cli
pop
cli
jmp
cmp
pushl
hlt
imul
mul
aam
test
pushl
shl
jmp
hlt
icebp
hlt
mov
xor
test
hlt
fisttpl
test
push
hlt
imul
jno
out
idiv
decl
hlt
add
sbb
adc
sub
and
cmp
shl
jmp
push
icebp
testl
mull
testl
push
imull
popa
idivl
incl
add
sbb
adc
sub
and
cmp
xor
leave
test
fdecstp
shl
call
jmp
div
testb
xchg
notb
idivb
testb
push
pop
notb
imul
jno
or
add
sbb
imulb
mulb
idivb
idiv
outsl
pushl
test
shl
icebp
shl
jmp
icebp
add
icebp
xchg
icebp
test
xor
mov
icebp
inc
icebp
pop
icebp
push
icebp
imul
add
icebp
adc
aaa
cltd
ret
mov
icebp
xor
leave
lock
lock
cld
push
jmp
lock
lock
xor
test
cltd
ret
inc
dec
lock
lock
lock
lock
ret
jl
sbb
adc
out
lock
xor
leave
repz
repz
pop
mov
loope
stc
lcall
mov
xor
test
repz
dec
repz
repz
repz
repz
push
jno
or
add
sbb
adc
sub
and
cmp
xor
leave
repnz
repnz
sub
mov
repnz
repnz
repnz
movsl
and
jmp
jns
jno
or
add
sbb
adc
cli
and
lea
movsl
popa
movsl
sub
std
sbb
ljmp
std
cmp
test
test
sub
adc
ljmp
dec
mov
cmp
xor
leave
cld
sar
cld
sar
jmp
loope
cld
stc
xchg
mov
cmp
xchg
cmpsb
push
mov
into
cmpl
in
ret
in
jmp
clc
jge
jns
add
adc
stos
cmc
xorl
repnz
bnd
or
fisubrs
or
std
idiv
xchg
push
push
cmpsb
fucomip
enter
jb
cld
out
add
ljmp
sub
popa
hlt
lcall
rcll
scas
hlt
pop
or
inc
push
dec
idivl
sbb
daa
repnz
mul
imulb
push
fsubrs
iret
ljmp
mov
sti
std
mov
mov
xchg
std
test
mov
mov
std
push
std
push
std
fisubrs
dec
popa
ret
lcall
cmp
adc
cmc
dec
stc
in
pop
stc
sub
fdivr
out
mov
lea
add
mov
sti
push
jg
sub
sar
jmp
loope
or
repnz
mov
cmp
push
fdiv
scas
sti
stos
sti
in
mov
lcall
cli
andl
xchg
cli
lods
cli
test
cmpsl
cli
mov
cli
dec
fsubrs
mov
push
mov
hlt
dec
hlt
inc
hlt
push
hlt
push
hlt
hlt
adc
div
notl
fcomps
lcall
jmp
testb
test
sbb
es
icebp
loopne
orb
dec
popa
icebp
call
fildll
and
xor
into
dec
fdivp
aam
out
loop
push
clc
in
lock
lock
lock
xor
orl
repz
add
iret
repnz
repnz
sbb
lret
std
aaa
lcall
cld
and
cmp
push
pushl
jmp
fsin
clc
fwait
mov
dec
insb
imul
dec
popa
imul
inc
stc
pop
lcall
push
stc
das
stc
and
and
add
leave
clc
xbegin
xor
push
lock
in
into
ficomps
sti
mov
sti
out
cli
cmc
cli
xchg
cmc
or
decb
and
cli
inc
out
dec
popa
mov
sbb
push
dec
mov
cld
aaa
cmp
std
cld
in
push
push
lcall
inc
cmp
xor
out
sub
out
fdivrp
or
xabort
clc
arpl
sar
push
cld
cmpsb
call
cli
mov
xchg
cli
mov
xor
mov
mov
idiv
xchg
dec
idivl
notl
idivl
repnz
icebp
js
adc
daa
loop
inc
lock
lock
lock
lock
scas
repz
repz
repnz
loopne
repnz
add
and
clc
pop
scas
jle,pt
or
mov
ss
and
xor
into
cmc
push
das
add
sar
hlt
cmpsb
decb
ja
sub
cmp
out
clc
lcall
stc
popf
stc
mov
stc
jl
or
sbb
cmp
xor
mov
nop
lcall
std
clc
scas
clc
mov
inc
clc
insl
clc
imul
clc
sbb
xor
sti
in
sti
cli
sti
lock
sti
cwtl
sti
xchg
sti
mov
sti
outsl
sti
je
jb
and
xor
fdivr
out
jg
jg
cli
mov
cli
imul
mov
cmc
push
aas
cmp
push
jae
or
push
cmc
sbb
adc
and
cmp
pusha
push
loopne
shl
stos
out
lock
cli
mov
imul
sbbb
test
cld
mov
inc
dec
adc
add
out
cld
scas
sub
cld
sub
lret
decl
lcall
pushl
lcall
sub
mov
or
jo
push
stc
ss
pop
std
das
clc
loop
mov
out
cmp
cli
adc
cmc
adc
std
hlt
inc
hlt
js
ds
cs
rolb
cli
sahf
or
lahf
les
dec
jp
jo
aad
loop
std
lock
pop
cld
jnp
int
sbb
or
incl
inc
push
insb
jl
sbb
adc
das
push
stc
enter
sti
int
dec
cli
inc
cli
cltd
ljmp
cwtl
hlt
nop
hlt
stos
hlt
mov
hlt
pop
hlt
push
hlt
jne
add
xor
divl
mov
sub
shl
mov
rolb
ret
repz
repnz
sbb
scas
jbe
cld
mov
clc
mov
dec
divb
xor
sub
lock
es
std
jb
or
mov
fdiv
mov
mulb
shlb
idiv
icebp
mov
jae
dec
lock
aaa
repz
repnz
js
push
clc
insl
repnz
repnz
aas
cmp
lds
stos
stc
push
clc
push
clc
outsl
mov
jnp
ja
jae
sar
clc
psubb
clc
pop
clc
add
pop
clc
sbb
pop
clc
adc
das
add
clc
and
cld
aas
sbb
push
xor
sti
sti
ret
sti
add
sbb
jecxz
sti
add
ljmp
idiv
repz
sti
mov
xchg
cmp
sti
fwait
sti
xchg
sti
xchg
decl
push
ljmp
sti
mov
dec
sti
dec
sti
inc
sti
inc
sti
in
aas
pop
sti
pop
sti
push
sti
push
jp
sti
addr16
arpl
jg
jnp
ja
jae
cli
mov
cli
cli
mov
xchg
orl
scas
cli
pop
pushl
stos
jp
stos
mov
mov
icebp
push
cli
inc
cli
inc
ret
push
cli
push
cli
outsl
cli
imul
cli
arpl
jg
jnp
sar
jmp
jae
psubd
cli
pop
cli
add
pop
cli
sbb
pop
add
cli
sub
daa
cli
and
aaa
cltd
cli
aas
cli
cmp
jge
mov
jb
adc
mov
or
jl
xor
test
fbstp
shlb
outsb
addr16
adc
ret
add
data16
or
adc
mov
cli
fistpl
cli
movsl
adc
sar
push
inc
cli
outsb
cli
popa
cmc
or
or
sub
cld
das
inc
mov
xchg
ljmp
aaa
hlt
lret
div
inc
push
into
shl
mov
dec
lret
imull
mull
divl
decl
outsb
xlat
imul
testb
out
mov
decb
inc
imulb
pop
sahf
adc
daa
div
pop
icebp
push
les
icebp
mov
icebp
inc
icebp
push
icebp
add
ret
data16
inc
cld
pop
cld
ljmp
adc
fs
jo
jle
ljmp
incl
call
decl
push
dec
stc
inc
stc
jle
mov
push
pop
incb
pop
data16
je
push
cli
int
cs
call
cmp
cmc
test
mov
dec
cmc
add
and
in
hlt
mov
mov
mov
testl
idivl
adc
negb
testb
sub
iret
icebp
xlat
icebp
mov
cmp
icebp
xor
xor
icebp
cltd
lock
call
pop
ret
sub
and
scas
repz
je
psllq
repnz
cmp
lock
repnz
loop
bnd
test
ret
std
sahf
std
xchg
std
jg
adc
std
mov
push
enter
pop
pushl
sub
inc
outsb
incb
incb
add
lods
xor
loopne
xchg
clc
jo
ret
jmp
dec
sti
sbb
aad
pop
xchg
hlt
adc
mov
ljmp
call
jnp
jle
or
sar
loop
idiv
movsl
push
stc
outsb
stc
dec
clc
stos
jg
inc
sahf
or
test
add
mov
inc
cmc
jl
imul
negb
mov
repz
repz
test
sub
outsl
sahf
mov
repnz
add
mov
or
add
cmpsb
mov
xchg
lcall
std
aaa
dec
push
popf
sti
insb
sti
cmp
int3
outsb
sub
cmc
aam
icebp
cmc
scas
cmc
push
aad
sbb
sub
negl
dec
pushf
lock
repnz
mov
add
lock
lock
sub
dec
repz
out
repnz
pushl
xchg
pushl
repz
mov
repnz
clc
lods
sti
mov
lcall
pusha
cmc
xchg
jp
hlt
cmpsl
hlt
adc
or
lcall
icebp
lcall
ljmp
or
pop
call
sbb
pop
loop
cmc
in
hlt
lcall
and
popf
clc
ljmp
cmp
int3
lock
mov
les
repnz
out
jle
bnd
or
pop
repnz
sbb
xor
or
pop
mov
rolb
icebp
std
loop
clc
rolb
sbb
ss
cmp
push
fwait
pop
push
dec
stc
mov
adc
stc
jnp
roll
clc
outsb
clc
adc
rcll
loop
dec
dec
sti
sbb
xor
es
rorb
sbb
mov
hlt
xlat
mul
push
pop
notl
aam
addr16
mov
xchg
icebp
ja
xor
mov
push
lock
push
aad
pop
and
push
dec
std
scas
loopne
jmp
add
sar
out
mov
or
pop
mov
jmp
aas
clc
push
add
enter
sar
sbb
sbb
clc
mov
stos
clc
mov
clc
push
mov
jo
sbb
add
pop
mov
mov
andl
push
mov
decl
sti
add
sbb
adc
cs
xor
cli
fdivr
push
out
pop
mov
cmp
xor
dec
cmc
cmc
hlt
gs
sbb
incl
out
push
fdiv
cli
icebp
jp
icebp
inc
icebp
jnp
or
inc
rcrl
lock
repz
repnz
sbbb
cld
decl
cltd
std
xor
cli
incl
add
pop
std
adc
pushl
jmp
out
mov
xchg
bound
push
icebp
sar
jne
and
xor
aam
mov
stos
stc
pop
outsb
sbb
stc
js
jae
or
add
adc
lcall
inc
adc
sti
sti
hlt
test
pop
inc
mov
sti
into
mov
xchg
cltd
fisubrs
fmull
xor
mov
out
imul
out
ret
push
icebp
lock
repz
pushf
repz
shl
dec
inc
xchg
insl
outsb
inc
scas
std
add
out
cld
pop
cld
adc
xchg
push
out
stc
mov
sti
aas
sti
push
loopne
je
cli
inc
mov
inc
inc
dec
pop
popa
inc
stos
add
shll
incl
push
hlt
repnz
dec
adc
push
dec
cmp
ljmp
insl
icebp
imul
icebp
sub
icebp
and
outsb
call
aas
sub
mov
cwtl
lock
lock
adc
ljmp
aas
std
xor
inc
cld
imul
cld
or
pop
jg
and
cld
xor
sar
xchg
movsb
jmp
cli
mov
jo
cwtl
pop
clc
sbb
and
loope
mov
out
and
fwait
cmc
xlat
hlt
in
mov
cld
push
lods
hlt
cmp
xchg
pushf
notb
cmp
out
inc
pop
cmp
call
idivb
imul
into
cwtl
icebp
nop
es
adc
aad
imul
lock
clc
call
outsb
lock
adc
and
xchg
repz
call
idiv
nop
xor
bound
sbb
sub
pop
push
cld
adc
into
xchg
mov
jp
mov
mov
mov
rorl
loopne
cld
stc
cmc
stc
repz
loopne
jmp
cmp
fwait
stc
xchg
stc
lods
into
cmpsl
stc
mov
stc
mov
mov
jbe
inc
stc
pop
mov
insb
stc
pop
loopne
cmpsl
imul
push
add
add
das
mov
push
sbb
mov
cmp
cmp
ss
enter
clc
aam
sar
out
clc
in
loopne
mov
cli
sbb
mov
xchg
add
clc
mov
clc
mov
dec
lds
movsb
clc
clc
dec
clc
iret
mov
push
clc
in
sti
mov
inc
bound
jns
jae
push
adc
clc
int
sbb
adc
or
dec
xor
leave
sti
les
ja
cmpb
sti
shlb
ljmp
mov
mov
mov
xchg
xor
js
lcall
add
inc
fsubl
push
adc
fs
bound
adc
roll
jno
pop
sti
push
adc
and
jp
lods
mov
pop
cli
insb
insb
add
cmc
mov
loope
nop
aam
jns
jb
out
ficompl
pop
xchg
pop
hlt
sbb
lods
mull
push
push
adc
inc
add
xchg
dec
mov
pop
shlb
icebp
push
icebp
and
leave
lock
sbb
inc
cmp
jecxz
pop
outsb
dec
pop
popa
mov
or
shrb
push
je
and
xor
adc
sbb
std
out
add
loopne
cli
sahf
std
xchg
std
mov
rorl
mov
inc
int3
add
or
adc
les
stc
dec
call
shll
fisttpll
xchg
dec
clc
popa
adc
lret
adc
cmp
dec
andb
sbbb
lret
add
cmc
jmp
fnstsw
sub
push
mov
fisubrs
sbbb
aam
mov
sub
mov
icebp
repnz
add
insb
lret
push
add
ds
lcall
incl
push
dec
inc
loop
sbbl
fdivl
push
aam
loop
push
in
xor
xor
divb
jmp
divb
idiv
loop
mov
outsl
xor
ljmp
ds
adc
add
leave
repz
repz
adc
cs
popa
shl
push
in
loope
mov
or
lea
aam
push
jo
adc
adc
or
rep
test
mov
lods
push
mov
adc
adc
pop
fisttpll
jne
mov
insl
lods
adc
jge
or
inc
mov
repz
adc
pop
sbb
lret
sub
and
incl
xchg
repnz
shll
outsb
decl
lcall
cli
mov
sbb
sub
daa
add
cmp
cli
mov
cmc
xor
shlb
testl
sub
xor
out
add
push
pusha
add
stos
xsha1
cmpsb
dec
orb
fbld
cs
sar
jecxz
mov
cs
in
fwait
cld
xchg
adc
add
jg
fbld
data16
push
and
adc
incb
cmp
icebp
jmp
cli
sub
jg
das
mov
mov
cmc
mov
cmc
inc
xchg
lods
inc
repz
pop
cmc
push
outsb
in
repnz
mov
xchg
test
stos
idivb
inc
xchg
push
repnz
push
xchg
lock
lock
sbb
shll
scas
mov
push
jp
pop
std
lcall
mov
jmp
cmp
push
mov
mov
jg
decb
aam
andb
and
aas
hlt
outsl
imull
fisttps
in
sbbb
icebp
jg
shrd
icebp
and
aas
cwtl
fdiv
jecxz
mov
push
sbbb
lock
mov
outsb
push
int3
data16
int
addl
mov
push
icebp
repz
lods
add
leave
add
mov
fsts
aad
in
bnd
incl
push
lods
shlb
std
xorb
std
mov
mov
inc
mov
mov
pushl
or
sub
cmp
sbbb
clc
mov
sbb
adc
mov
cmp
pop
cmc
jmp
test
inc
hlt
or
jne
aad
mul
mull
jae
push
inc
stos
xchg
aas
inc
lret
push
notb
filds
popa
das
lea
mov
cmpsl
std
popa
pusha
bound
cld
loope
push
add
mov
int3
mov
and
int3
stc
add
jp
sarl
loope
push
jbe
clc
mov
xchg
sti
inc
pushl
or
mov
in
mov
std
hlt
in
testl
mov
icebp
or
cmp
pop
jle
xor
lcall
mov
jb
jbe
repnz
popf
iret
leave
cmp
scas
rorb
lcall
lock
faddl
jnp
stos
pop
xchg
stc
movsl
stc
or
inc
add
push
pusha
data16
stc
add
lcall
clc
clc
stc
cmp
jp
mov
clc
lcall
or
add
jo
mov
insb
pop
fmuls
sti
sub
cli
mov
xor
push
cli
jo
pop
cld
call
or
cli
aad
cmc
test
and
pusha
inc
bound
daa
lods
push
bound
adc
hlt
add
arpl
jp
jae
ss
loope
adc
push
lods
mov
adc
mull
pop
movsl
scas
ljmp
push
adc
or
add
xlat
icebp
ljmp
fisttps
cmpsb
sub
shl
lock
pop
cld
jne
or
stos
cmp
repz
inc
pusha
xchg
and
mov
inc
xor
xchg
cltd
repnz
pop
loop
loop
adc
adc
xor
lods
iret
bound
shr
das
push
cld
ret
sbb
es
cmp
dec
ljmp
mov
cld
xor
fcos
icebp
incl
bound
jge
outsb
cli
enter
aad
mov
test
inc
adc
sbb
fbstp
push
clc
mov
andl
mov
cli
ret
sbb
inc
cmc
fdiv
mov
arpl
js
into
in
lcall
mov
hlt
cwtl
xchg
xchg
cmpsb
mov
sahf
push
mull
loopne
sbb
sbb
mul
testb
xchg
inc
pushf
icebp
xchg
xor
imul
pop
icebp
rolb
ljmp
ror
repz
out
add
mov
dec
push
repz
xlat
inc
push
jmp
mov
dec
repnz
repnz
sub
mov
cmp
mov
mov
pushl
mov
std
sbb
lret
jbe
lret
movsl
adc
push
cld
arpl
sbb
aam
push
push
ljmp
pusha
or
outsl
adc
inc
lcall
pop
add
bound
push
ret
cmp
push
adc
mov
ljmp
clc
fstpt
cmpsb
ljmp
clc
mov
push
test
loopne
pop
clc
push
clc
outsb
inc
fs
js
jbe
lods
adc
or
adc
ljmp
mov
sub
hlt
sti
test
lcall
mov
pop
pop
sti
push
inc
sti
popa
xor
insl
hlt
pop
and
cmp
xor
cli
test
add
fs
icebp
pushl
inc
add
sbb
adc
aaa
and
sub
cmc
out
stos
in
jecxz
xchg
adc
adc
outsl
cmc
jle
and
pop
adcb
shlb
rclb
and
data16
jge
dec
push
add
mov
cmp
hlt
and
and
cmp
dec
sub
sti
testl
pop
dec
push
imull
ss
fsts
cmpsl
into
push
enter
adc
or
mov
mul
push
std
icebp
shrl
push
sti
xchg
popf
icebp
cmpsb
adc
adc
clc
jg
mov
add
scas
repz
and
vpsubd
repnz
mov
es
std
daa
std
sar
add
cld
popf
cld
scas
cld
mov
icebp
orb
push
nop
orb
in
inc
and
decb
push
decb
insb
dec
nop
inc
jo
ror
or
cmp
data16
lret
test
clc
jmp
aaa
subl
pushl
mov
sbb
mov
stos
pop
adc
das
push
pop
dec
add
fstl
lcall
inc
xchg
cli
mov
out
cmc
std
or
add
cmc
pop
dec
hlt
out
hlt
test
call
mov
testl
dec
neg
icebp
cmp
add
nop
insb
xchg
repz
push
jecxz
cmpb
iret
dec
or
jo
lods
in
std
ljmp
jge
das
add
call
data16
add
adc
and
mov
fs
shrb
sti
call
push
mov
mov
cmp
sbb
cmc
call
outsb
lret
call
mov
jl
aam
cmp
cli
jl
xorb
ljmp
nop
hlt
testb
dec
inc
mov
loopne
push
sub
xor
adc
push
or
repz
sbb
cmc
jmp
mov
dec
repz
lock
jb
xchg
aad
pop
jo
cs
adc
pop
xor
incl
or
or
sbb
add
fisubs
incl
xchg
ljmp
mov
sti
jg
mov
sub
popa
jge
jno
or
call
cmpb
jmp
rolb
cmp
test
push
sar
in
jmp
jbe
mov
xchg
stc
adc
decb
decb
popf
cltd
xchg
and
adc
add
push
imul
decb
adc
rcrb
leave
stc
fsts
sbb
stc
cltd
stc
or
pop
stc
imul
mov
sub
xor
push
mov
mov
jg
clc
mov
mov
clc
cmp
mov
sti
mov
or
ljmp
pop
sti
add
jns
sbb
sub
cmp
mov
cli
fsqrt
add
cli
lea
and
lods
and
incb
out
push
mov
push
mov
pusha
mov
addr16
push
jmp
pusha
imul
std
adc
mov
fdiv
cmp
clc
aaa
xchg
and
mov
push
mov
or
lret
xchg
push
lock
push
jns
add
js
int3
clc
cli
stos
ljmp
cltd
ss
add
pop
pop
aaa
jno
pop
es
cmpb
cmc
push
dec
ficompl
sub
mov
pop
and
ljmp
mov
mov
dec
jge
pop
popf
mov
loope
adc
mov
das
cwtl
fmull
sub
popa
mov
cli
mov
mov
xchg
mov
add
and
negb
mov
mov
mov
jecxz
cli
and
pop
or
fistpll
push
cmp
adc
subb
mov
movsb
test
add
fwait
add
clc
mov
mov
fsubrl
lods
lret
push
mov
mov
test
xor
cld
push
rorb
mov
sbb
shll
out
adc
inc
lea
in
adc
inc
add
testb
lods
andl
push
dec
mov
and
in
mov
mov
cld
lret
xor
or
cmp
pop
inc
mov
mov
xchg
jg
adc
push
ljmp
mov
sub
cmp
jecxz
jg
fbld
cli
mov
jp
mov
dec
add
dec
add
mov
or
or
add
dec
je
inc
mov
mov
or
pop
add
xor
test
add
dec
cmp
mov
lea
pop
jecxz
aaa
mov
les
fld
push
dec
push
add
jne
data16
call
fisubl
mov
mov
ret
mov
aam
daa
mov
ret
hlt
movsl
mov
cmp
mov
mov
hlt
testb
push
fld
pop
add
jle
and
incl
je
dec
data16
add
mov
pushf
mov
xchg
add
sbb
faddp
mov
lret
pop
imul
popa
adc
cmp
xor
fstpt
cmp
and
enter
aaa
ret
clc
lcall
fldcw
pop
std
addl
sub
loop
clc
decl
clc
rcrl
add
add
jp
fdivrl
mov
mov
jp
xor
enter
insl
movb
call
popf
lock
pop
filds
mov
loopne
aaa
mov
outsl
js
fiaddl
lcall
jge
pop
adc
jp
loop
jecxz
jg
aam
clc
les
pushl
lods
sbb
lahf
mov
adc
mov
mov
imul
jb
je
arpl
gs
cmp
out
push
je
es
outsb
outsw
push
and
cmp
imul
testl
push
adc
gs
jne
js
mov
mov
arpl
jae
jb
jb
and
outsl
jbe
insl
outsl
dec
imul
inc
jb
mov
loopne
mov
inc
inc
mov
adc
jge
aam
rclb
inc
outsl
push
sub
sub
adc
fimull
repz
push
gs
imul
adc
xlat
dec
pop
adc
imul
add
sub
mov
sub
pop
and
xchg
xor
or
aad
iret
push
loopne
mov
mov
or
cmpsb
inc
mov
popa
lods
jnp
push
inc
and
mov
push
jb
mov
rcll
sbb
loope
pop
sbb
jmp
sub
or
xlat
inc
push
adc
rol
inc
mov
cmpsl
pop
inc
push
push
addr16
dec
bound
xor
insb
dec
push
inc
xor
rcll
fisubrl
int
and
lds
mov
sbb
fisttpll
in
ja
add
cmp
lods
stos
push
xorb
fisttps
insb
insb
sbb
arpl
add
mov
mov
imul
ja
dec
or
jbe
je
outsl
push
push
and
sbb
inc
outsb
fs
cmp
addl
gs
adc
outsb
loopne
dec
push
cmp
outsb
pop
arpl
inc
fisttpl
push
jne
jns
divb
push
jo
push
inc
popa
arpl
sbb
push
mov
gs
and
jae
addr16
push
dec
ds
popa
inc
inc
imul
xchg
cmp
je
and
fcoms
xchg
imul
sbb
adc
js
mov
call
fs
inc
inc
outsb
jne
add
cmp
arpl
je
cmpsl
iret
cmpsl
popa
das
mov
inc
out
dec
popa
sub
lock
jbe
inc
sub
fnstsw
sbb
pusha
dec
xchg
insl
add
mov
cltd
inc
adcb
push
mov
xchg
or
dec
pop
mov
adcl
in
test
ja
jbe
sbb
push
mov
fwait
add
ds
xchg
and
and
dec
add
sbb
cmpsb
ret
adc
and
mov
inc
jg
stos
and
int
subb
in
rcll
aam
inc
sbb
mov
mov
mov
pusha
pop
pop
add
mov
mov
iret
jae
test
mov
test
xchg
adc
adc
mov
nop
stos
dec
repz
lea
lods
movsl
sbb
outsl
add
call
rcll
push
dec
clc
cld
mov
add
jne
arpl
addl
jns
out
push
sbb
neg
inc
inc
outsl
push
imul
movsb
jne
and
push
push
jbe
jg
mov
sub
jo
bound
jle
outsl
fs
inc
add
cmpsl
fstl
and
jmp
push
push
push
dec
push
popa
dec
ja
sub
lods
stos
and
ret
pop
shll
xor
jno
mov
shll
add
adc
dec
jae
lret
in
or
inc
outsl
inc
push
sbb
or
pushl
and
repnz
jle
lds
push
lret
imull
xor
add
cltd
or
adc
fs
loopne
shrl
imul
aad
fisubrl
popf
leave
push
or
xor
shll
popf
insl
mov
add
jo
cmpsb
sub
push
add
jns
jecxz
bound
xor
mov
inc
mov
sub
pusha
jmp
aam
int
fs
sub
repz
fisubl
mov
popa
add
and
mov
leave
shrl
shr
lea
into
cmp
add
pop
mov
xor
lahf
adc
xchg
inc
cmc
pop
rolb
mov
push
adc
sbb
or
shl
or
lcall
xor
and
mov
sbbb
inc
push
dec
mov
adc
xchg
lret
sub
loopne
adc
pushf
or
push
add
jnp
push
mov
xor
jo
jae
mov
add
outsl
adc
lock
lods
and
push
subl
sbb
push
je
push
xchg
push
add
cmp
pusha
cs
jbe
cmpsl
inc
mov
dec
cs
cs
push
xor
or
out
inc
jae
arpl
xlat
out
mov
ds
sbb
and
adc
add
insb
add
add
add
add
add
test
xor
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
or
add
and
add
pusha
add
addb
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
push
add
add
lock
in
add
add
add
add
add
rolb
add
add
add
test
add
add
add
add
add
add
add
add
add
cwtl
add
add
mov
add
in
add
add
add
add
add
add
add
rolb
add
test
add
add
in
add
add
add
add
inc
add
push
add
arpl
or
push
insl
lds
arpl
lea
push
fimull
mov
dec
sub
adc
xor
sti
hlt
add
mov
pop
dec
cmc
rcll
test
stos
negb
pop
or
sub
push
jp
sub
or
aad
cmc
jle
loop
adc
aaa
jne
movsb
mov
pop
ljmp
in
lea
nop
in
and
jnp
pushl
out
pop
insb
les
jg
jge
popf
stos
notb
push
aad
or
sub
aaa
lock
jno
dec
scas
int
pop
push
leave
dec
inc
xor
and
cmpsl
push
insb
fistpll
pop
add
or
pushf
or
or
pop
jno
mov
ffreep
mov
and
add
ret
mov
pop
jle
or
or
scas
sbb
clc
out
pusha
in
pusha
jp
hlt
es
mov
add
mov
fldl
and
dec
jge
mov
push
push
test
adc
lods
cs
shlb
jo
mov
xchg
repz
sub
mov
cmpb
insl
push
jmp
and
xchg
fs
ret
fs
dec
xor
adc
cs
cli
jle
mov
sbbb
cmp
pop
out
inc
in
into
sahf
xor
or
ljmp
aad
jge
jl
cmp
xchg
cwtl
cmpsl
ss
nop
js
xchg
lods
mov
out
and
or
ss
test
jle
push
fsubrs
adc
mov
xchg
movsb
mov
std
lods
dec
divl
mov
mulb
pop
test
mov
add
adc
xchg
xor
mov
clc
dec
enter
les
addl
mov
ficoms
imul
inc
mov
popa
sbb
adc
cmp
dec
dec
gs
mov
orb
fld
sbb
enter
mov
fiaddl
pop
testl
iret
rcrb
out
mov
mov
cmpsl
xchg
es
inc
clc
loopne
pop
mov
add
jb
jge
sbb
cmp
mov
scas
neg
stos
add
fmul
scas
pop
std
test
push
lock
xor
mov
addr16
js
repnz
jmp
int
adcb
dec
outsb
dec
dec
out
out
test
scas
sahf
pushf
inc
jae
imul
add
xor
dec
and
jl
testb
dec
pop
lret
in
in
imul
xlat
mov
int3
jg
jbe
pop
jns
push
adc
dec
pop
arpl
jns
push
dec
jo
xchg
cs
movsb
sbb
xlat
shll
lds
add
sahf
pop
lds
sub
andb
pop
add
xchg
fnstcw
xchg
xchg
mov
lds
cltd
sbb
in
inc
movsl
xchg
jecxz
mov
iret
out
and
mov
rclb
sahf
mov
inc
fs
xchg
pop
hlt
mov
into
ds
dec
js
adc
je
pusha
sub
jg
inc
mov
cli
cld
adc
pop
mov
add
sbb
mov
mov
cmpsb
inc
scas
fsubr
and
ds
push
inc
inc
xchg
inc
jl
std
lock
pushf
push
mov
mov
push
popf
call
stc
cmp
cmpsb
mov
and
mov
fcomp
inc
leave
cmc
dec
adc
jne
out
repz
dec
test
lcall
mov
fisttpl
or
clc
or
in
js
jns
mov
adc
cmp
xor
cmp
dec
add
lods
shll
pushf
mov
mov
repnz
xor
sub
xor
push
or
xor
dec
je
mov
xor
lods
idiv
inc
adc
lcall
bound
inc
sbb
ja
and
add
lods
or
enter
jmp
in
test
popa
push
fwait
or
fucomip
orl
or
aaa
dec
adc
add
pop
repnz
mov
popa
or
je
test
sbb
insb
and
shlb
bound
imul
cmp
lock
out
loopne
mov
lock
cmpsl
rcl
fdivs
test
andl
jnp
mov
jae
dec
das
cld
rolb
popl
mov
ret
mov
andb
sbb
add
sbb
inc
pop
jg
dec
popf
xchg
stos
icebp
xchg
pop
cmpl
pushf
and
std
mov
loop
int3
xchg
cltd
test
js
xor
out
fiadds
lahf
pop
shll
or
outsb
mov
fcomi
jbe
xor
push
and
cli
iret
sbb
ret
dec
xor
sbb
enter
and
inc
pop
fadds
inc
add
sub
push
mov
sub
mov
or
ret
mov
inc
push
dec
push
and
lcall
mov
and
or
in
cmp
mov
outsl
sub
mov
cld
rolb
mov
bnd
test
mov
cld
cltd
cltd
dec
inc
repnz
daa
movsl
leave
subl
stc
cs
and
push
lret
das
loopne
jo
bound
movsl
jl
sub
inc
cltd
mov
sbb
pop
xchg
push
shlb
fdivl
clc
in
sub
jp
sbb
mov
push
int3
adc
mov
aad
adc
pop
xchg
and
mov
jle
stos
push
xchg
pop
push
imul
syscall
and
cwtl
sti
push
add
jecxz
xchg
push
out
push
daa
loopne
sbb
aas
mov
repnz
sbb
sahf
int
dec
jmp
ja
fldl
or
dec
dec
jg
lods
imul
push
ss
inc
mov
movsb
das
and
xor
mov
lcall
mov
mov
add
push
dec
out
mov
sbb
enter
sbb
mov
stc
dec
xor
cmc
push
push
mov
loopne
cltd
mov
sub
xor
mov
mov
mov
dec
in
lods
ja
in
or
movsl
fs
popa
mov
dec
inc
loopne
and
rorl
cmp
pop
or
jle
imul
loop
xlat
inc
inc
imul
fadd
inc
lahf
sbbb
into
dec
cmp
or
cs
xor
dec
xor
aaa
fmull
aaa
imul
data16
cwtl
jge,pn
inc
in
loope
sahf
jg
hlt
out
mov
and
lahf
jl,pn
sbb
notl
out
add
ret
dec
pop
adc
inc
xor
push
call
pop
ja
push
mov
mov
jb
mov
icebp
pop
fs
int
push
sub
mov
mov
push
arpl
stc
adc
pop
cs
mov
push
out
pop
xor
push
into
cmpb
push
inc
idiv
rcrb
mov
movsl
lret
sub
pop
test
dec
xor
aaa
lds
mov
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
jo
add
add
xor
xor
xor
cmp
xor
xor
add
add
push
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
push
add
outsb
add
add
je
jb
add
and
push
add
data16
add
jb
add
add
outsb
add
add
add
add
pop
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
and
push
add
add
add
outsb
add
sub
add
arpl
imul
add
and
inc
add
add
outsb
add
add
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
je
add
outsb
add
insb
add
popa
add
add
add
push
add
inc
add
add
add
sub
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
imul
add
je
jb
add
and
push
add
data16
add
jb
add
add
outsb
add
add
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
inc
add
xor
add
add
add
add
add
pop
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsb
add
add
and
push
add
add
add
outsb
add
sub
add
arpl
imul
add
and
inc
add
add
outsb
add
add
add
sub
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
mov
add
insb
add
insb
add
insb
add
add
insb
add
insb
add
mov
add
mov
add
mov
add
mov
add
insb
add
mov
add
add
into
mov
add
add
xlat
mov
add
add
fidivs
insb
add
mov
add
add
icebp
mov
add
add
mov
add
add
add
mov
add
mov
add
mov
insb
add
mov
insb
add
mov
insb
add
mov
insb
add
mov
insb
add
insb
add
mov
add
insb
add
mov
add
add
add
pop
mov
insb
add
insb
add
add
jb
insb
add
add
jge
insb
add
add
mov
insb
add
mov
add
insb
add
mov
add
insb
add
mov
add
mov
add
mov
insb
add
mov
insb
add
mov
insb
add
mov
insb
add
mov
insb
add
mov
insb
add
mov
insb
add
mov
insb
add
mov
insb
add
mov
insb
add
mov
insb
add
mov
insb
add
mov
insb
add
mov
insb
add
insb
add
mov
add
insb
add
mov
add
add
mov
add
insb
add
mov
add
insb
add
mov
add
insb
add
mov
add
insb
add
insb
add
insb
add
insb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
insb
add
mov
insb
add
mov
insb
add
mov
insb
add
mov
insb
add
mov
insb
add
mov
insb
add
insb
add
add
or
mov
add
mov
insb
add
mov
insb
add
insb
add
add
xor
mov
add
mov
add
add
add
dec
mov
insb
add
add
mov
add
insb
add
mov
add
insb
add
mov
add
add
mov
add
insb
add
mov
add
mov
add
mov
add
mov
add
insb
add
mov
add
mov
add
mov
add
mov
add
mov
insb
add
mov
insb
add
mov
insb
add
mov
insb
add
mov
insb
add
mov
insb
add
mov
insb
add
insb
add
insb
add
mov
insb
add
insb
add
insb
add
push
dec
inc
dec
xor
cs
dec
dec
add
imul
add
gs
aaa
cs
insb
add
push
xor
fs
insb
add
dec
push
push
push
cs
insb
add
push
cs
insb
add
insb
add
fs
insb
add
cs
insb
add
cmp
cs
insb
add
arpl
cs
insb
add
dec
jbe
fs
insb
add
push
cs
insb
add
dec
push
imul
insb
add
insl
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
cs
insb
add
dec
cs
insb
add
xor
cs
insb
add
data16
inc
cs
insb
add
cs
insb
add
dec
inc
jo
fs
insb
add
inc
dec
cs
insb
add
fs
insb
add
fs
insb
add
je
js
fs
insb
add
jo
fs
insb
add
pop
dec
cmp
fs
insb
add
dec
inc
inc
cs
insb
add
jno
dec
xor
fs
insb
add
je
jb
cs
insb
add
jbe
push
cs
insb
add
insb
outsb
cs
insb
add
cs
insb
add
dec
jae
fs
insb
add
cs
insb
add
cs
insb
add
pop
cs
insb
add
jo
insl
cs
insb
add
cs
insb
add
xor
fs
insb
add
inc
cs
insb
add
ja
inc
cs
insb
add
je
push
fs
insb
add
dec
outsl
pop
cs
insb
add
cs
insb
add
push
dec
cs
insb
add
jbe
fs
insb
add
push
xor
fs
insb
add
pop
xor
cs
insb
add
cs
insb
add
push
cs
insb
add
inc
push
cs
insb
add
inc
inc
insl
cs
insb
add
cs
insb
add
cs
insb
add
push
cs
insb
add
cs
insb
add
jb
fs
insb
add
cs
insb
add
je
outsl
cs
insb
add
ja
cs
insb
add
imul
add
push
cmp
cs
insb
add
arpl
je
fs
insb
add
push
cs
insb
add
data16
imul
insb
insb
add
dec
push
cs
insb
add
inc
cs
insb
add
inc
cs
insb
add
pop
jno
cmp
fs
insb
add
inc
inc
cs
insb
add
push
imul
insb
insb
add
cs
insb
add
imul
fs
insb
add
insl
insb
imul
push
popa
push
push
push
cs
insb
add
inc
je
fs
insb
add
dec
xor
fs
insb
add
cs
insb
add
fs
insb
add
cs
insb
add
push
inc
cs
insb
add
cs
insb
add
outsl
dec
push
cs
insb
add
cs
insb
add
ja
pop
outsb
cs
insb
add
dec
inc
cs
insb
add
cs
insb
add
addr16
cs
insb
add
imul
js
push
pop
cs
insb
add
dec
cs
insb
add
jbe
dec
cs
insb
add
inc
cs
insb
add
push
cs
insb
add
dec
xor
cs
insb
add
jo
push
cs
insb
add
cs
insb
add
cs
insb
add
push
inc
gs
insb
add
inc
gs
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
jb
gs
imul
inc
outsl
outsb
outsb
arpl
