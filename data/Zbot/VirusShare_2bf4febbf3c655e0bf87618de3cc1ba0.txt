push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
shlb
pop
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
ret
xor
mov
sub
mov
mov
shl
xor
sub
mov
mov
movl
mov
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
push
pop
jbe
popf
push
pushl
decl
ret
or
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
push
push
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
push
mov
sub
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
add
lea
sub
sub
mov
pop
mov
mov
lea
mov
push
mov
xorl
pop
sub
or
mov
mov
push
push
push
pop
push
pop
stos
pop
pop
subl
neg
clc
sbb
pushl
lea
lea
pop
repz
sub
test
jne
mov
pop
lea
add
call
add
in
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
add
sub
add
adc
add
adc
add
hlt
and
add
and
add
add
pop
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
and
add
add
dec
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
push
and
add
add
add
add
ss
add
and
add
add
add
add
pusha
and
add
add
add
and
add
and
add
and
add
add
adc
add
add
mov
add
add
add
add
add
nop
and
add
add
add
add
jo
add
movsb
and
add
add
sub
add
adc
add
adc
add
hlt
and
add
and
add
add
pop
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
and
add
add
dec
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
push
and
add
add
add
add
ss
add
and
add
add
add
add
pusha
and
add
add
add
add
je
imul
bound
gs
add
push
add
outsl
jae
dec
popa
outsb
fs
add
add
gs
outsl
jbe
inc
imul
jns
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
gs
popa
jae
inc
jb
outsl
jb
add
add
popa
jo
jb
add
push
push
je
imul
inc
add
aad
inc
imul
add
inc
jne
jb
outsb
je
push
add
dec
add
popa
insb
inc
insb
popa
addr16
add
add
je
jne
jb
outsb
je
jb
arpl
jae
call
inc
imul
bound
gs
add
movsl
add
je
gs
imul
addl
jb
popa
je
inc
imul
jns
add
and
gs
outsl
insl
insl
inc
jb
popa
imul
repnz
imul
jb
je
arpl
add
pop
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
je
inc
jbe
outsb
je
add
cmp
push
jb
jbe
je
push
jb
imul
inc
add
add
outsl
bound
dec
outsl
arpl
add
push
dec
inc
dec
xor
cs
insb
add
movl
outsl
insl
gs
mov
dec
jae
imul
jae
popa
addr16
add
jnp
inc
gs
imul
outsb
addr16
add
jnp
push
gs
outsl
arpl
add
cltd
push
inc
gs
insb
addr16
jb
arpl
xchg
inc
gs
imul
js
push
add
rolb
jae
imul
xchg
push
push
gs
jae
addr16
add
mov
inc
imul
dec
gs
popa
addr16
add
sbb
ja
jo
imul
or
jae
dec
gs
popa
addr16
add
int
dec
outsl
popa
fs
jne
jae
jb
add
push
gs
jne
jae
jb
outsl
jae
add
inc
push
xor
cs
insb
add
pop
add
dec
inc
outsl
outsb
outsb
arpl
or
push
push
dec
inc
jb
outsl
jb
add
inc
popa
outsb
arpl
add
add
dec
inc
imul
arpl
push
dec
push
inc
dec
xor
cs
insb
add
or
dec
jae
popa
je
push
push
inc
add
push
dec
push
push
dec
cs
insb
add
push
les
cmp
inc
xor
sub
sti
xor
das
fidivrl
mov
sub
repz
repnz
in
ror
push
clc
loope
fisubs
ja
enter
adc
popf
lea
aas
cs
mov
enter
cmpsb
jmp
imul
and
push
test
cmc
push
testb
xchg
out
popf
mov
sub
xor
inc
push
loope
pop
sub
lock
lret
mov
mov
jg
lock
dec
dec
dec
sbb
mov
xor
les
mov
repnz
or
xor
inc
xchg
sahf
mov
pop
dec
jne
ret
rorb
and
lcall
sahf
lret
dec
cmp
cmovae
pop
int
add
jl
or
cld
push
pushf
pop
shll
fs
adc
nop
fdivl
inc
dec
and
xchg
xchg
mov
or
jle
lods
dec
push
dec
ja
out
jle
int
fs
ret
sahf
push
add
pop
es
inc
fcompl
xchg
int
adc
adc
lahf
sti
push
pop
outsl
nop
ficoml
mov
dec
xchg
iret
stos
movsl
push
cltd
popf
fsubl
icebp
roll
push
stos
cld
clc
push
push
xchg
fst
push
repnz
mov
in
adc
xchg
testb
js
pop
pop
jno
repz
sbb
fisubrl
arpl
jmp
jne
xchg
insb
sub
dec
imul
mov
int3
lret
pop
addr16
lcall
inc
mov
dec
inc
pushf
jns
insl
jae
mov
pop
out
pop
popa
jno
jle
adc
out
cmp
fbld
or
test
sbb
decb
add
add
add
add
xor
add
add
add
jo
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
or
add
adc
add
or
add
and
add
or
add
add
add
add
add
add
add
add
push
popa
add
test
add
clc
xchg
add
add
add
add
add
or
add
mov
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
push
sub
sub
xchg
xchg
xchg
add
scas
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
stos
lods
lods
mov
mov
cltd
pop
xchg
xchg
xchg
or
jge
jp
jp
lods
lods
lods
add
test
push
mov
mov
mov
ret
ret
leave
leave
lret
into
rcl
in
rcl
shl
rcl
shl
int3
int3
int3
hlt
leave
mov
out
mov
in
mov
mov
lods
stos
lods
lea
cltd
fwait
and
je
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
lahf
add
mov
jae
mov
out
lret
rcl
sar
xlat
fdivr
xlat
xlat
fdivr
fcom
aam
aam
rcl
iret
dec
int
aam
aad
iret
ror
inc
ret
ret
std
mov
mov
lods
iret
movsb
mov
mov
xor
add
add
add
add
add
add
add
add
add
add
lods
stos
lods
add
scas
sbb
mov
jnp
mov
sar
mov
lret
lret
iret
iret
sar
aam
aad
call
fcom
call
aam
int3
into
int
int3
int
call
aam
into
int3
int3
inc
mov
mov
ljmp
cmpsb
cmpsb
ljmp
push
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
push
add
inc
add
pop
add
or
inc
or
sbb
push
add
add
or
or
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
enter
int3
call
rcl
call
call
xlat
call
aam
dec
into
int3
dec
lret
int3
int
inc
rol
mov
mov
ljmp
mov
fwait
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
imul
pop
pop
pop
fs
ds
sbb
push
das
or
push
sbb
aaa
cmp
cmp
and
and
push
push
pop
pop
add
add
add
add
arpl
mov
or
mov
xlat
mov
mov
mov
rol
ret
inc
leave
call
iret
sar
aad
aam
aam
aad
ror
iret
dec
leave
inc
mov
mov
mov
ljmp
movsl
mov
cwtl
xchg
cwtl
lcall
addl
add
inc
add
add
add
add
add
add
add
add
add
adc
add
or
add
push
add
outsl
xor
jl
jge
jg
jo
jno
bound
mov
cmp
cmp
mov
outsb
jo
nop
popa
bound
inc
inc
inc
xor
add
add
add
add
movsl
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
enter
leave
lret
dec
lret
leave
enter
mov
mov
lods
lods
scas
jmp
fwait
call
xchg
xchg
xchg
xchg
cwtl
cltd
cltd
lcall
ds
push
push
push
or
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
jo
add
pop
or
jl
xchg
mov
xchg
xchg
xchg
incb
jl
jp
jnp
jo
outsl
out
data16
push
ret
jle
js
js
gs
inc
cmp
sbb
sbb
adc
or
lods
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
cmpsl
cmpsb
lcall
xchg
incl
test
xchg
xchg
xchg
lahf
mov
mov
mov
jp
js
cs
add
add
add
add
add
add
add
add
add
add
mov
pop
push
addl
in
mov
incl
xchg
std
mov
jle
jo
jo
je
je
jge
jge
addb
pushw
cmp
cmp
and
es
jge
jge
fwait
lcall
test
lods
stos
sti
stos
stos
stos
lods
stos
stos
test
test
std
cltd
cltd
cltd
xchg
xchg
xchg
decl
jle
jns
jns
jp
jns
mov
xchg
movsl
mov
scas
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
push
adc
add
or
add
add
add
add
add
add
pop
pop
adc
movsb
test
mov
mov
xchg
xchg
incl
test
std
xchg
xchg
xchg
std
xchg
cwtl
cwtl
stc
xchg
xchg
xchg
in
mov
or
addl
mov
pop
pop
push
push
push
rdmsr
inc
inc
inc
dec
insb
insl
imul
test
fwait
fwait
cltd
fistps
fwait
cltd
stc
xchg
std
mov
xchg
mov
mov
mov
cltd
jmp
scas
mov
mov
mov
mov
mov
std
mov
mov
movsl
mov
jnp
lods
cmpsl
stos
add
pop
adc
scas
call
lcall
incl
mov
xchg
xchg
xchg
popf
pushf
popf
std
movsl
movsb
movsl
stc
mov
xchg
xchg
in
nop
nop
in
xchg
push
jne
prefetchw
add
inc
or
or
sub
push
dec
dec
dec
data16
jb
mov
xchg
rclb
xchg
std
nop
decb
xchg
xchg
lcall
movsl
cmpsb
ljmp
test
pushl
lahf
mov
mov
xchg
mov
mov
ljmp
sahf
adc
add
add
pop
pop
adc
mov
jmp
sahf
cltd
fwait
decl
mov
call
nop
xchg
xchg
xchg
pushf
pushf
popf
mov
stos
test
mov
xchg
xchg
fstpt
jnp
push
push
push
outsl
dec
dec
dec
pushaw
popa
bound
je
mov
jg
orl
int
nop
xchg
in
xchg
xchg
testl
mov
jmp
mov
mov
pop
mov
mov
xor
ja
mov
cmpsb
mov
mov
lods
lods
mov
movsl
mov
add
pop
pusha
adc
mov
ljmp
sahf
decl
nop
call
xchg
xchg
call
xchg
cwtl
fwait
lcall
lahf
mov
movsl
std
mov
cltd
fwait
out
xchg
xchg
xchg
xchg
les
fwait
in
xchg
cwtl
out
lea
stc
xchg
test
std
xchg
je
lcall
jmp
inc
jge
mov
jnp
mov
jae
mov
insl
ljmp
pcmpgtd
lods
or
lods
or
mov
jle
mov
mov
stos
pushf
movsb
movsl
movsb
and
add
shll
xchg
mov
ljmp
lahf
call
xchg
xchg
lcall
sahf
sahf
jmp
popf
sahf
call
xchg
xchg
call
xchg
xchg
call
fwait
cld
cwtl
cltd
pushf
stc
sahf
lcall
sahf
mov
xchg
insb
xchg
xchg
pop
jge
xchg
dec
jp
fwait
jne,pt
fwait
sub
popf
push
push
jmp
ljmp
adc
lods
pcmpgtw
scas
adc
mov
imul
mov
insb
mov
lcall
scas
lods
scas
scas
movsl
movsb
movsl
sub
movsb
mov
add
add
add
mov
pop
pop
adc
mov
ljmp
pushf
call
popf
pushf
jmp
mov
movsb
jmp
xchg
xchg
decl
mov
decl
mov
lcall
xchg
dec
jp
xchg
jo,pt
nop
sub
decl
pop
decl
push
pop
call
pop
lcall
adc
ljmp
sbb
pushl
pop
outsb
mov
and
and
shll
inc
aas
test
les
cli
scas
lods
lods
mov
sahf
mov
mov
add
add
add
pop
pop
adc
lods
mov
mov
lcall
mov
cmpsl
cmpsb
jmp
test
jmp
pushf
popf
call
pop
ja
mov
decl
sub
mov
pop
incl
add
incl
add
mov
push
call
add
cltd
add
sahf
add
or
mov
outsb
pushl
sub
mov
sub
ret
inc
sub
cmp
leave
inc
mov
leave
scas
inc
mov
mov
mov
mov
movsl
add
push
push
adc
test
ljmp
popf
jmp
stos
test
ljmp
mov
lods
scas
scas
jmp
mov
xchg
push
incl
pop
push
incl
add
addb
incl
add
mov
push
call
add
fwait
add
sahf
add
add
ljmp
sub
aaa
cmp
aaa
cmp
cmp
dec
cmp
call
cmp
call
dec
xchg
dec
mov
std
mov
mov
movsb
movsb
movsl
push
mov
mov
add
add
add
mov
dec
dec
adc
mov
mov
lahf
fwait
sahf
jmp
scas
lods
pushl
mov
pushl
mov
ljmp
decl
or
mov
pop
decl
or
xchg
push
incl
add
mov
push
call
add
pushf
add
mov
add
lods
add
mov
jb
ret
cmp
int3
inc
call
inc
mov
roll
call
dec
xchg
call
dec
xchg
fisttpl
ficoml
call
test
std
mov
mov
movsl
mov
mov
add
dec
dec
adc
jp
movsb
popf
mov
lcall
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
mov
pop
call
sbb
lea
decl
push
decl
add
xchg
add
pushf
add
mov
add
stos
add
mov
fs
and
dec
inc
call
push
xchg
call
push
fwait
fistl
fistpl
ficomps
fists
jmp
pop
lahf
jmp
pop
mov
call
test
mov
mov
jne
mov
lahf
add
inc
inc
adc
js
sahf
fwait
lahf
jmp
mov
lods
lods
pushl
mov
mov
mov
mov
ljmp
inc
je
xchg
and
and
call
and
xchg
sbb
xchg
or
call
add
fwait
add
mov
add
lods
add
mov
fs
mov
xor
ficompl
fbld
fisubs
jmp
cmpsb
jmp
gs
call
imul
fildl
ret
mov
cmpsb
cmpsb
mov
mov
add
add
add
xchg
xchg
xchg
add
inc
inc
adc
jp
xchg
lcall
popf
popf
ljmp
mov
pushl
mov
mov
mov
mov
jg
xchg
sub
cltd
xor
lcall
call
or
xchg
add
lcall
jmp
add
mov
pushl
adc
roll
fldt
jmp
outsb
lods
jmp
jno
jmp
jo
ljmp
in
je
out
jne
out
jbe
out
jb
jmp
mov
mov
cmpsb
cmpsb
lcall
lahf
add
jge
cmp
insl
insl
js
lea
sahf
fwait
fwait
pushl
mov
mov
mov
mov
mov
cmpsb
scas
lcall
xor
mov
cmp
xor
fwait
push
call
pop
lcall
add
stos
add
mov
arpl
mov
fs
mov
sbb
fistl
in
mov
ljmp
in
cmpb
lock
repnz
push
cmpl
mov
mov
test
cmpsl
pushf
sahf
popf
daa
mov
lahf
sahf
add
add
add
popa
add
aaa
cmp
jne
jg
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
sarl
ret
pushl
insb
mov
lcall
jmp
ss
cltd
sbb
add
popf
add
movsl
add
test
pusha
ljmp
add
mov
add
iret
es
movsw
call
mov
push
pop
push
xchg
sar
nop
ret
push
nop
xchg
xchg
mov
out
mov
fidivl
clc
stos
lods
test
xor
pushf
popf
add
add
add
inc
aas
add
xor
push
inc
dec
inc
jb
pop
dec
in
push
decl
mov
mov
mov
sar
ret
ret
ret
ret
mov
jge
lcall
dec
cmp
dec
test
movsl
xor
pusha
lcall
add
cmpsb
add
lods
add
mov
fs
mov
add
movl
mov
call
xchg
push
lcall
repz
push
fwait
enter
leave
push
sahf
int3
cld
popf
into
sti
sahf
int
cld
cwtl
leave
push
xchg
ret
fidivs
enter
mov
lahf
mov
popl
lcall
add
xor
or
cmp
jecxz
pop
pusha
call
mov
mov
mov
sar
ret
mov
inc
mov
ljmp
jg
stos
push
xchg
scas
push
xchg
mov
push
pop
lcall
add
lods
add
mov
mov
add
leave
add
rorb
fiadds
out
mov
push
cmpsb
int
mull
int
cld
cmpsl
sar
cld
cmpsl
into
cld
test
cld
stos
sar
cld
stos
sar
test
jmp
mov
dec
lret
mov
mov
sahf
lahf
mov
add
cltd
fwait
add
add
add
xor
sub
inc
inc
inc
bound
push
xlat
jne
jno
mov
mov
ret
sarl
ret
inc
inc
leave
inc
rol
mov
test
movsl
push
test
scas
push
mov
scas
dec
xchg
sahf
sbb
pop
jmp
add
mov
arpl
mov
add
int3
add
xlat
add
ficoms
out
pop
cmpsl
push
lahf
leave
sti
lods
sar
sti
scas
cld
mov
sti
mov
cld
mov
mov
std
mov
std
mov
std
mov
mov
push
cmpsb
jmp
mov
call
lret
mov
mov
lahf
lahf
mov
or
add
add
xor
add
dec
dec
outsl
outsb
jo
cwtl
lcall
aam
jmp
fdiv
rcl
sar
lret
int3
into
dec
lret
leave
dec
lret
leave
lret
lret
inc
enter
lods
ljmp
push
mov
lods
jle,pt
sahf
or
pop
ljmp
add
add
movb
dec
add
fadds
jb
filds
jae
ljmp
cli
lods
sar
mov
fcos
cld
mov
cld
mov
cld
mov
fcos
mov
fdivr
divl
enter
int3
mov
lahf
lahf
jo
xchg
xchg
or
add
add
xor
xor
add
add
pop
pop
pop
or
leave
movl
ljmp
loop
loop
fsubp
fdiv
xlat
cli
aad
xlat
std
int3
rcl
mov
push
ljmp
sub
mov
add
mov
arpl
mov
add
lret
call
add
fldl
jne
jecxz
jbe
in
xor
cld
mov
loope
std
ret
inc
loop
inc
loopne
inc
std
leave
fdivrp
dec
fdivrp
std
leave
fdivrp
std
dec
loope
sti
mov
leave
call
lret
into
mov
mov
xchg
adc
add
add
incl
incl
std
std
incb
repnz
or
in
in
pop
in
out
in
sub
out
in
dec
ljmp
xchg
out
call
aad
fstp
jmp
mov
xchg
cmpsl
cmp
movsl
push
jmp
add
mov
mov
add
int3
add
add
loopne
ja
call
inc
pushf
cld
mov
in
std
lret
dec
in
dec
in
dec
loop
dec
loope
std
int3
loope
std
iret
in
std
iret
in
shl
shl
cld
fcos
out
mov
xlat
inc
ret
cmpsb
cmpsl
test
xchg
xchg
xchg
sbb
cltd
cltd
add
std
add
std
std
add
stc
testb
repnz
repnz
push
in
repnz
pop
in
icebp
lock
out
in
pop
loope
les
xchg
sti
sahf
es
movsb
add
lods
add
mov
inc
add
leave
add
roll
jb
fildl
je
in
jp
jmp
jle
cmc
pop
test
sti
mov
shl
std
iret
jecxz
std
shr
std
shl
shl
call
out
std
fsubr
jmp
fldl2e
std
shl
push
ret
jmp
aam
dec
leave
leave
rep
stos
stos
fwait
xchg
xchg
xchg
and
cwtl
xchg
add
sti
add
clc
add
sti
stc
add
div
or
aam
sarb
negb
add
test
pop
ljmp
add
les
addr16
add
roll
jo
fildl
ja
out
ja
in
sbb
sti
fld1
std
fucomi
fucomi
fucomi
fldl2e
fucomi
std
fsubr
fucomi
fsubrp
jmp
in
fsubrp
cld
aam
push
ret
call
ror
clc
stos
lods
lods
lods
xchg
xchg
xchg
outsb
jo
add
add
mov
loopne
add
leave
sbb
lods
jl
repnz
jmp
add
mov
add
into
add
add
filds
jne
jmp
sub
shr
jmp
out
fucomp
std
fldl2t
fldpi
std
xlat
call
cld
shl
cli
shl
sti
shl
clc
into
test
xlat
in
mov
jmp
rcr
fcomp
sti
mov
mov
lcall
add
add
add
aad
mov
mov
mov
jmp
add
mov
fs
mov
add
iret
add
xlat
add
loopne
jp
call
ss
cli
xchg
enter
loopne
cld
lret
cli
test
aam
repz
into
push
mov
into
ljmp
jmp
rcl
ljmp
cmc
loopne
loopne
mov
mov
xchg
add
add
add
lret
add
rol
mov
movsl
loopne
xor
pop
ljmp
add
mov
add
dec
or
rorb
jmp
sbb
call
scas
lret
call
scas
std
loop
mov
cli
fstpt
lock
int3
in
lret
aad
loop
fcmovnb
out
loope
in
out
test
out
out
popf
call
leave
lret
lods
stos
adc
cmpsb
cmpsb
test
mov
ret
rolb
rolb
ret
mov
stos
aam
dec
cmp
sbb
test
imul
es
mov
js
mov
inc
xchg
ret
push
mov
lret
gs
test
mov
shll
rcl
mov
int3
rcl
int3
mov
iret
shll
aam
jg
fcmovu
jb
loopne
gs
jecxz
out
jmp
xor
cmc
cmc
mull
lock
or
mov
int3
add
add
add
rolb
roll
mov
test
imul
sbbb
mov
cmpsb
sarb
mov
les
rcrb
int
ror
iret
addr16
iret
push
iret
rcl
dec
aam
aad
rcr
aad
aam
fsubs
ficompl
fcmovnu
fstl
fucom
loop
in
out
jmp
in
icebp
out
add
cli
testb
sti
add
std
std
add
incl
mov
mov
shrb
mov
mov
mov
scas
xchg
mov
mov
mov
mov
ret
mov
ret
enter
int3
lret
daa
lret
ror
and
rcrb
rcl
rcll
iret
aam
or
fcom
push
rcr
fadds
add
add
jecxz
add
in
jmp
lret
aad
incb
mov
mov
add
ret
ret
or
mov
mov
mov
push
ret
or
leave
movb
enter
int
add
aam
add
add
aam
fcom
add
fadds
loope
fildl
loopne
fstp
loopne
in
call
add
std
add
std
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
ret
ret
ret
mov
mov
mov
ja
test
test
pop
add
add
add
add
add
add
scas
mov
adc
mov
enter
iret
jmp
aad
cmc
aam
sar
iret
ror
cli
int3
int
stc
lret
hlt
mov
mov
iret
lods
lods
lods
fwait
xchg
xchg
xchg
dec
ds
aas
and
add
sbb
add
adc
add
push
add
add
addb
add
push
push
add
add
add
add
add
add
add
add
add
mov
mov
mov
leave
cld
into
iret
into
aad
xlat
call
xlat
call
rcl
dec
iret
into
dec
lret
sarb
cld
stos
stos
stos
icebp
xchg
xchg
xchg
mov
or
or
add
add
add
add
add
add
add
add
add
add
jne
jae
jne
jne
fs
dec
dec
dec
cmp
sub
sub
xor
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
mov
ret
ret
lret
lret
rcl
call
aam
dec
lret
mov
inc
mov
mov
stos
test
popf
xchg
xchg
xchg
jmp
jo
xchg
adc
add
xor
add
add
add
add
jg
jg
jnp
jp
addl
aam
imul
pop
pop
movsb
push
push
push
stos
push
push
push
pop
pop
cmp
cmp
pop
jo
outsl
adc
mov
fstpt
mov
ret
mov
mov
mov
ljmp
fwait
fwait
call
xchg
cltd
cltd
cltd
out
test
dec
adc
wrmsr
add
add
add
add
add
pop
cltd
lcall
popf
cwtl
lcall
addb
jnp
jl
jns
jp
jp
jns
jp
jp
jae
jb
push
push
push
cmp
jae
pushf
sahf
pushf
mov
scas
scas
repz
scas
lods
sti
lods
scas
scas
std
test
cmpsl
std
popf
pushf
pushf
call
xchg
call
mov
scas
jmp
lods
scas
leave
cmpsb
movsl
movsb
cltd
jb
je
adc
adc
add
add
add
add
insl
insl
outsl
pop
lods
mov
sahf
incl
mov
sti
xchg
xchg
xchg
lock
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsb
outsb
jo
mov
cwtl
lcall
std
mov
mov
xchg
xchg
xchg
lcall
movsl
test
mov
scas
std
mov
scas
mov
xlat
cmpsl
movsb
movsl
pop
cmpl
add
add
add
popa
or
lods
mov
cmpsl
sahf
mov
decl
mov
cwtl
cwtl
xchg
std
sahf
sahf
lahf
sti
sahf
mov
cwtl
call
push
push
push
jo
pop
push
outsl
insl
outsl
insl
xchg
subb
xchg
lock
nop
xchg
ljmp
jg
pushl
pop
mov
mov
jnp
mov
lods
stos
insl
stos
test
add
add
add
popa
pusha
pop
or
mov
in
mov
nop
call
cwtl
call
cltd
fwait
cltd
fwait
fwait
pushf
lahf
popf
cli
xchg
xchg
cltd
jmp
xchg
lea
jecxz
orl
cld
xchg
pop
cmp
dec
jp
movsb
inc
js
lods
ss
mov
jae
mov
outsl
ljmp
sbb
mov
scas
mov
mov
mov
movsl
mov
add
add
add
pop
popa
popa
or
mov
in
mov
xchg
lcall
mov
mov
decl
addl
xchg
jb
cld
xchg
pop
cmp
dec
js
cmp
nop
daa
call
lcall
push
popa
ljmp
sbb
mov
insl
pushl
push
jno
mov
pop
xchg
mov
lods
scas
xchg
popf
popf
sahf
adc
add
add
pop
pop
pusha
or
mov
stos
mov
mov
ljmp
test
lcall
pop
jns
mov
imul
mov
pop
incl
or
mov
decl
add
fwait
add
or
mov
jae
mov
jge,pn
ret
jg,pn
leave
xor
dec
pop
xchg
inc
test
imull
cmpsl
cmpsl
sbb
add
add
popa
popa
pusha
or
movsb
test
jmp
mov
pushl
mov
jmp
aas
jb
mov
pop
decl
or
xchg
decl
add
xchg
add
mov
add
mov
insb
inc
cmp
call
inc
call
inc
mov
inc
xchg
fadds
call
popa
lahf
inc
cmpsb
mov
mov
movsl
mov
add
add
add
popa
or
sahf
mov
ljmp
mov
pushl
mov
stos
lcall
sbb
decl
or
push
call
add
add
scas
add
mov
dec
nop
call
pop
lcall
pop
lahf
jmp
pop
mov
fisubrs
int3
test
cld
mov
mov
movsl
lods
cmpsl
xor
add
add
dec
pop
jl
jl
pushf
xchg
cltd
jecxz
sahf
mov
pushl
mov
mov
jmp
sub
insl
call
push
pop
call
add
test
pop
pushl
push
imul
fisubl
jmp
outsb
stos
jmp
jo
call
jo
in
jae
call
cmpsl
mov
shrl
jg
add
add
add
dec
pop
insl
outsl
push
mov
cwtl
pushl
mov
mov
mov
je
lcall
jbe
popf
sub
cwtl
or
lcall
ljmp
inc
or
call
inc
xchg
jmp
jp
jmp
cmpl
xacquire
push
xchg
mov
test
push
fwait
fwait
cltd
add
sub
sub
push
push
dec
pop
pushw
mov
mov
mov
mov
ret
mov
sahf
jmp
inc
cmp
sub
lcall
ljmp
add
mov
adc
jmp
pusha
mov
push
xchg
push
cwtl
push
xchg
stc
cltd
enter
lret
xchg
jmp
stos
mov
stos
popa
mov
add
add
xor
inc
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
ret
ret
ret
ret
pushl
push
mov
lods
dec
test
mov
add
ljmp
add
mov
add
and
push
movsb
int3
clc
cmpsl
iret
stc
test
sti
test
sar
cld
lods
sar
stc
cmpsl
int
out
enter
in
stos
stos
stos
jne
popf
sahf
or
add
add
push
push
dec
aaa
je
jb
stos
test
into
out
iret
int
lret
lret
enter
enter
mov
mov
stos
inc
jg
mov
add
mov
arpl
rolb
dec
add
flds
jbe
call
xchg
sti
mov
std
mov
fcos
std
mov
std
mov
sar
ljmp
repz
scas
mov
add
add
add
add
pop
or
aad
dec
loopne
jecxz
loopne
fcmovnu
fcmovnb
fcmovu
fcmovnu
xlat
fsubr
shll
cmpsl
jb,pn
movsb
or
scas
add
mov
add
add
loop
jp
repnz
mov
cld
inc
loope
inc
loopne
std
leave
fdivrp
dec
fdivrp
dec
loope
sti
out
mov
leave
divb
sahf
sbb
add
add
std
add
incb
jmp
or
in
in
sbb
jmp
xor
loopne
loop
les
mov
mov
add
pushl
add
into
add
faddl
jbe
ljmp
sti
std
shl
shl
std
shl
std
shl
xlat
call
shl
push
fdivr
fcmovne
sar
mov
mov
and
add
add
incb
std
incb
std
std
cld
pop
aam
push
mov
pop
xchg
sahf
or
ljmp
add
add
rolb
outsl
filds
jne
out
and
shl
fldl2e
fucompp
cld
fsubr
std
fsubr
cld
xlat
call
std
aad
push
enter
rcl
sti
mov
popf
lahf
das
add
add
int3
into
int
mov
arpl
ljmp
add
movb
call
add
loop
ja
out
xor
stc
int
clc
leave
test
bnd
aad
bnd
lock
aam
out
in
shl
in
shl
in
fucomp
enter
test
test
std
std
add
add
add
aad
mov
jb
or
insl
inc
pop
jno
int3
and
xlat
sub
lcall
mov
out
loop
lret
mov
loope
mov
lret
leave
loopne
sarb
jecxz
fistpl
in
out
jns
rcl
dec
mov
add
add
mov
inc
scas
xchg
movsb
les
pop
mov
mov
xchg
fidivrl
andb
into
mov
ret
nop
sarl
int3
insl
aad
iret
pop
ror
rorl
xlat
fdivrs
fildll
in
fsubl
jecxz
lock
in
jmp
faddl
incb
std
std
add
mov
outsb
scas
mov
lods
mov
push
mov
mov
xor
enter
rcl
pop
mov
rcl
or
loopne
or
int
add
std
std
incb
std
std
add
add
add
int
shufps
or
int
int
lods
stos
stos
add
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
fwait
lcall
ret
enter
enter
enter
rol
mov
scas
scas
scas
insb
stos
stos
stos
xor
jae
add
add
add
add
add
add
add
add
add
add
add
add
stos
lods
stos
add
mov
enter
sar
aam
aad
rcl
sar
int
iret
std
mov
mov
roll
pop
add
add
add
add
add
add
add
add
jae
jae
addr16
inc
das
das
cs
and
add
add
mov
mov
cmpl
dec
into
into
call
rcl
dec
into
into
inc
mov
mov
scas
scas
jmp
mov
push
add
add
add
add
jne
jne
test
aad
outsb
outsl
ret
bound
outsb
outsb
outsl
jb
popa
popa
cmp
pop
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
xchg
lcall
cltd
cltd
lds
jb
and
add
pop
add
add
jae
jae
popf
xchg
pushf
mov
test
xchg
xchg
test
addb
push
dec
dec
inc
mov
fwait
into
movsb
movsb
mov
sti
xchg
xchg
xchg
decb
mov
ljmp
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorl
cmpsl
test
mov
xchg
xchg
xchg
cld
pushf
pushf
popf
cmc
cltd
cltd
lcall
push
push
imul
jle
lea
xchg
notl
mov
pushl
xchg
mov
test
call
stos
stos
stos
add
add
add
mov
scas
cmpsl
lods
cld
xchg
xchg
xchg
call
fwait
lcall
fwait
cltd
std
xchg
xchg
xchg
out
xchg
mov
loope
jbe
out
xchg
arpl
std
pushf
inc
ja
cmpsb
aaa
jbe
scas
sub
pushl
sbb
ss
mov
mov
imul
int3
add
xchg
pop
scas
movsl
lods
test
popf
sahf
lahf
jmp
movsb
movsl
call
imul
nop
inc
je
mov
imul
nop
adc
xchg
or
mov
sbb
jne
mov
sub
ret
ds
mov
mov
subl
jae
push
mov
mov
cmpsl
ljmp
mov
jmp
sub
mov
pop
incl
add
decl
add
mov
adc
ret
dec
ds
rolb
call
inc
mov
aam
xchg
dec
cltd
mov
mov
mov
mov
add
add
push
test
lahf
movsb
cld
scas
lods
scas
pushl
mov
movsl
call
sbb
pop
decl
add
mov
add
mov
push
xchg
fistpl
jmp
pop
mov
jmp
movsl
call
pushf
mov
mov
mov
cmpsl
cmpsl
test
add
add
popa
popa
popa
adc
sahf
fwait
pushf
cld
mov
mov
mov
mov
scas
lcall
xor
cltd
and
xchg
push
pop
jmp
add
mov
xor
jmp
ja
in
jp
push
jle
out
jle
fistpl
mov
and
add
add
adc
imul
mov
mov
mov
rol
mov
bound
lcall
add
pop
pushl
pop
outsb
fmull
out
lea
push
xchg
xchg
enter
jmp
cmpsb
mov
cmpsb
sub
inc
inc
inc
adc
push
xchg
mov
cld
rol
inc
sarl
ljmp
sbb
movsl
add
mov
fs
add
aam
ja
jmp
scas
push
cmpsl
into
clc
lods
iret
sti
lods
sar
sti
scas
sar
lods
sar
in
mov
inc
mov
movsb
ds
incl
xor
xor
jno
outsl
inc
scas
mov
mov
aad
mov
aam
rcl
out
lret
enter
xchg
jmp
add
ret
call
add
call
mov
std
mov
fdivr
inc
fdivr
std
ret
std
ret
out
mov
shl
cmpsl
cmpsl
dec
addl
stos
add
in
in
or
call
in
outsb
fisubl
mov
add
mov
add
add
push
cmp
std
into
in
call
in
call
in
call
out
shl
push
fdivr
rol
into
in
lods
lods
lods
popa
cmpl
add
std
incl
incl
int3
int
sub
lahf
sbb
lods
add
mov
add
loop
jp
repz
cmpsl
std
loopne
cld
aad
aam
std
shl
cld
aad
cli
shl
push
xlat
fmul
shl
mov
mov
xchg
xchg
xchg
pop
ret
adc
mov
push
arpl
mov
or
cmp
out
mov
shl
call
ror
call
lret
call
fcmovnu
scas
fwait
lcall
mov
sahf
stos
xchg
inc
and
push
mov
shll
int3
jbe
mov
xlat
mov
lret
adc
into
outsl
xlat
lret
into
pop
xlat
dec
in
fistpll
call
in
in
sbb
rol
add
mov
cmp
movsb
lods
arpl
stos
mov
les
les
ret
sbb
fstp
bswap
int3
int3
or
aad
push
std
incb
jg
addb
incl
lods
std
add
incb
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
std
adc
xchg
sub
arpl
dec
mov
rcl
repz
rclb
icebp
mov
fidivs
push
cld
xchg
scas
mov
sbb
and
iret
push
pop
push
xchg
jae
cmc
movsb
mov
pop
in
jl
testl
lds
mov
jp
mov
add
inc
push
pop
mov
gs
xchg
mov
xor
call
or
cmp
adc
outsl
push
mov
lea
in
mov
push
add
jno
lret
xchg
icebp
mov
test
xsha256
cmpsb
push
std
push
popf
cmp
mov
mov
fsubrl
push
hlt
pusha
mull
inc
jle
js
movsl
cmp
cltd
pushf
xor
ret
pop
or
mov
js
inc
fsubrs
jge
xchg
scas
xchg
testb
out
stos
sbb
cmp
push
cmp
leave
push
pop
lock
mov
mov
bndstx
and
add
pop
test
ds
and
outsl
and
push
nop
inc
fcmove
jae
out
mov
sbb
dec
lods
jg
fists
mov
es
fldcw
mov
test
jmp
adc
aas
pushf
xor
push
lods
js
mov
lret
into
gs
xchg
out
push
out
mov
outsb
add
cmp
pop
mov
nop
pop
mov
push
mov
lahf
fnstsw
mov
int3
std
push
push
lds
stc
nop
shlb
dec
jecxz
adc
iret
inc
subb
fs
in
xchg
aad
pop
pop
mov
or
sub
sub
les
pop
mov
pop
dec
loope
mov
es
push
inc
xor
push
push
jmp
inc
movsb
cmp
jb
xchg
ret
notl
ja
dec
scas
insl
pusha
mov
ja
andl
push
clc
lahf
xchg
sub
sbb
mov
and
sti
xchg
mov
les
in
xor
mov
or
sub
jae
pop
sub
mov
dec
ffreep
or
mov
jecxz
std
adc
aaa
mov
add
mov
xor
xchg
sub
jbe
mov
mov
adc
in
inc
add
arpl
fsubr
orl
sub
lahf
pop
sti
jmp
sub
dec
or
add
stc
push
repz
fsubl
arpl
jbe
sahf
xor
leave
sbb
ss
cmp
stc
nop
hlt
nop
adc
stc
nop
adc
ss
scas
addr16
xor
or
ficoml
or
sub
mov
inc
in
es
into
gs
lods
inc
add
in
orl
mov
stos
ljmp
mov
std
push
inc
fldl
mov
inc
ret
stc
hlt
dec
mov
sbb
mov
ss
push
out
inc
cli
xchg
jae
fdivl
xchg
sbb
xchg
out
int
mov
scas
out
push
jmp
or
into
cmp
push
in
mov
nop
daa
shrd
fbstp
scas
inc
bound
xchg
sub
or
mov
mov
test
ljmp
sub
lahf
pop
cli
in
subl
mov
jle
inc
lahf
sub
push
icebp
inc
frstor
jae
sbb
lahf
ss
xchg
sbbb
sbb
aaa
sbb
jae
cmp
xchg
repnz
jae
adc
mov
loope
xchg
adc
into
xchg
xor
scas
push
mov
cmp
pop
inc
fimull
xchg
xor
sarl
mov
sub
rol
jns
pop
add
pop
xchg
insl
add
ret
hlt
mov
pop
jecxz
mov
push
jmp
xchg
shrl
ret
repz
repz
nop
sarl
xchg
das
js
pop
popl
lcall
jne
popf
cs
in
pop
mov
jbe
lds
int
push
pop
icebp
pop
mov
xchg
fbstp
and
push
call
scas
rcr
je
iret
in
std
sub
xor
int
push
jns
xor
iret
dec
in
ret
jecxz
cmc
sbb
push
inc
insb
push
lods
cltd
gs
xchg
mov
sbbb
adc
lret
rcrl
ja
cwtl
popa
fbstp
mov
std
xchg
in
ds
outsb
inc
mov
jne
cmc
mov
test
mov
and
stos
pop
push
daa
mov
add
je
dec
pop
push
in
mov
adc
lret
and
lods
inc
mov
jne
or
jo
dec
pop
shrl
cwtl
rcrl
mov
dec
dec
xor
test
sbb
or
jge
and
fisubl
es
dec
sub
jge
jns
rep
scas
inc
xchg
cs
dec
iret
data16
xchg
sub
lods
sub
scas
inc
push
mov
pop
scas
popa
cmp
push
rcrl
push
out
hlt
cmp
popf
xor
mov
cltd
xor
cmp
add
lds
clc
inc
mov
je
pop
mov
fwait
xor
dec
movsl
cmp
sbb
dec
stos
dec
in
fsubrl
push
inc
fiadds
and
adc
add
add
add
and
xchg
sub
sbb
sub
sti
test
sub
cmpsb
scas
rep
cmp
jns
mov
sub
out
cld
mov
fsubrl
jg
push
scas
or
mov
mov
leave
pusha
add
notb
mov
fs
outsb
jno
lahf
push
es
popl
cwtl
mov
outsb
dec
out
sbb
jl
fucomp
jg
push
out
xchg
xchg
sti
xchg
leave
jecxz
data16
jbe
add
xor
hlt
mov
pop
stc
nop
mov
push
cmp
iret
sbb
xchg
or
jne
sbb
mov
add
scas
push
call
xchg
icebp
pop
and
xor
into
in
jne
and
je
out
pop
sahf
sbb
adc
inc
and
mov
enter
push
ljmp
jp
xor
or
pushf
xor
push
aam
addb
push
xor
cld
sub
xor
xchg
mov
ss
dec
or
inc
fwait
aaa
into
shlb
add
icebp
push
in
es
xchg
sub
push
inc
xchg
scas
mov
fdiv
xchg
out
bound
mov
cltd
in
repnz
mov
loop
add
lahf
outsl
cmp
mov
loop
pop
fistpll
fsubrs
mov
push
jecxz
insl
and
mov
xor
in
popa
clc
and
popf
jnp
jecxz
cs
xchg
fdiv
shrl
inc
insl
jb
xor
sub
repz
icebp
jns
and
or
imul
jnp
aad
and
pop
cs
adc
es
sub
testl
dec
das
jl
fdivl
cmpsb
inc
xchg
sahf
xor
test
daa
mov
cmp
enter
lea
iret
adcl
out
pop
call
adcl
rcrb
scas
lea
cltd
jnp
add
gs
out
mov
and
sbb
jns
aaa
into
mov
fistpll
rorb
fsubrs
xor
dec
js
mov
fidivl
shrl
rolb
or
push
fidivs
ja
stos
movsb
jbe
rol
dec
mul
cmpsb
mov
dec
xor
lahf
gs
or
ret
xchg
lods
hlt
fnstenv
dec
dec
sub
xchg
xchg
cs
fisubrl
lds
bswap
gs
pop
testl
fcmovbe
les
std
inc
sub
jno
dec
stos
inc
addl
lock
or
adc
sub
mov
jge
ds
sahf
fsubr
iret
lret
sub
std
lock
and
fsubr
push
inc
push
and
mov
les
push
push
adc
testl
les
inc
ficoml
add
cmc
mov
data16
lea
scas
inc
loopne
inc
fmuls
push
xor
aaa
das
pop
negb
gs
sub
push
in
pop
out
aam
and
push
pop
push
xchg
stos
rorb
mov
cmpsl
sbb
dec
push
jns
nop
lods
iret
mov
je
push
push
lret
sti
leave
stc
nop
sti
sbb
jle
xor
lock
les
sbb
repnz
inc
lock
sub
cli
jl
insl
testl
xor
jle
or
mov
sti
push
sbb
mov
or
test
or
xchg
inc
mov
gs
movsl
jbe
mov
jbe
shrb
mov
stc
js
mov
dec
bound
add
repz
or
ds
and
jmp
xor
and
add
pop
xor
xchg
jne
leave
repz
mov
negb
mov
sbb
xchg
mov
gs
lahf
test
push
and
xchg
ret
int
cmpsl
mov
std
repnz
cltd
aam
js
xor
dec
cmp
fsubr
cmc
jbe
and
shll
lds
cld
push
mov
or
test
imul
scas
add
pushf
insb
dec
pop
mov
in
cmp
loop
xor
mov
jae
movsl
in
fstl
jg
dec
lahf
adc
push
mov
into
adcl
xchg
or
inc
je
sti
jle
lock
xor
jle
call
lahf
insl
adc
xor
imul
arpl
insl
inc
adc
loop
mov
mov
push
xchg
loope
ficoms
lea
in
sbb
rcl
push
mov
jbe
push
addr16
iret
sub
fisttpl
mov
mov
cmpsb
sbb
sub
int
cmp
popa
dec
sti
sar
jns
pop
movsl
int
push
jmp
push
inc
stos
and
stos
xor
xchg
dec
icebp
movsl
loope
mov
jbe
push
jne
loopne
lcall
sbb
or
nop
ds
sbb
mov
pop
push
test
pop
lods
cmpsl
push
mov
mov
or
cmp
stos
call
cmp
icebp
inc
sbb
jae
fnstcw
add
jb
push
popf
and
push
cmpsb
std
outsl
push
jne
lods
xchg
add
lcall
pop
jecxz
mov
adc
movsb
pop
popf
xor
push
arpl
xor
mov
xchg
rcrl
add
fidivrs
incl
mov
xchg
lcall
aas
cmp
scas
push
adc
jge
jmp
xor
repnz
adcl
cmp
in
data16
idiv
jb
pop
enter
and
xchg
fisubrl
cs
fwait
and
xor
push
dec
cmc
push
scas
loopne
mov
cmpsb
gs
or
xor
jno
ss
in
xlat
cli
data16
dec
jns
addb
mov
sbb
pop
xor
inc
fldcw
mov
sti
leave
int
add
adc
xor
adc
mov
rol
mov
call
jo
mov
push
out
or
xchg
add
push
mov
or
enter
inc
jmp
movsb
cmp
push
scas
or
mov
jo
sbbb
and
in
lods
inc
and
insl
add
dec
fidivs
ret
in
cld
xchg
ret
or
sbb
lods
cmp
iret
dec
xchg
push
in
xchg
rolb
jno
je
mov
and
sub
xor
and
push
call
out
mov
sbb
or
test
mov
mov
push
out
sar
lret
bound
sbb
inc
sub
adc
data16
push
std
pop
sahf
jnp,pt
sbb
fisubl
lret
mov
xor
popa
clc
stos
pop
shrl
ret
jg
cmp
pop
mov
outsb
lcall
mov
dec
loope
push
call
call
testl
imul
pop
lea
and
jp
pop
hlt
les
add
fdivrp
xchg
and
mov
sahf
dec
sbb
jae
test
roll
xchg
pop
mov
pop
out
pop
xlat
aad
mov
jbe
cwtl
loopne
mov
lahf
les
mov
aad
sub
jb
dec
dec
loop
jge
nop
xchg
ja
add
xchg
fiadds
ss
mull
jmp
arpl
or
nop
daa
aas
add
xchg
jns
mov
xor
sar
addl
or
gs
mov
lods
lea
int3
mov
stc
cmc
in
outsb
pop
pop
inc
fcomps
add
js
pop
divb
and
enter
std
loope
xor
push
dec
in
adc
add
fsubrs
fisttpll
lea
aad
stos
cld
xlat
outsb
in
push
xor
cmpsb
or
cltd
mov
int
mov
dec
outsl
push
mov
ret
cmp
dec
loope
fldcw
call
add
jle
dec
add
popf
inc
bound
mov
mov
leave
sub
in
inc
dec
loop
cmpsl
jnp
clc
xchg
imul
in
mov
inc
push
mov
cmp
cmp
pop
mov
int3
loop
pop
push
and
inc
pop
xor
lahf
outsb
push
mov
mov
cmp
in
jle
push
push
pop
repnz
das
pushf
xor
jb
adc
xchg
sarl
pop
test
shrl
inc
and
jne
add
pop
cmpsl
pop
mov
inc
push
jmp
jmp
aam
fiadds
repnz
push
mov
adc
idivl
das
xchg
int
jae
mov
ljmp
jge
lahf
sbb
mov
adc
jp
xor
mov
repz
fisttpll
and
jnp
fimull
add
cltd
xor
fidivl
ds
jbe
jl
js
pop
popf
addb
je
shlb
xchg
adc
hlt
xor
lds
pop
or
repnz
sub
jle
jns
pop
cwtl
dec
loopne
jbe
cs
out
push
mov
call
adc
jnp
push
movsb
cmp
add
add
stos
push
sub
ja
jge
leave
fsubrl
mov
stc
enter
and
adcb
dec
cmp
js
sahf
xor
or
jbe
pop
ror
popa
mov
shr
jg
mov
mov
fcoml
cmpsl
sbb
adc
push
inc
xlat
add
cmc
mov
push
sub
jl
cltd
inc
mov
xor
pop
cmpsb
cmp
daa
mov
pop
loope
pop
add
jecxz
fwait
sub
mov
mov
pop
mov
lret
pop
ds
cmp
jb
pop
repz
fdivrs
leave
outsb
js
ret
das
adc
testb
add
ja
movb
mov
xchg
mov
fs
add
sbb
add
cs
aas
xchg
nop
daa
gs
pop
out
mov
jbe
adc
arpl
xchg
mov
mov
ret
scas
sub
or
add
out
test
popa
clc
sub
mov
push
shrl
sbb
dec
fildll
lods
inc
xor
pop
lret
pop
test
outsb
mov
scas
jle
mov
and
aam
mov
stc
mov
repnz
fsubrs
out
and
cmpsl
aaa
pop
mov
mov
lods
inc
mov
fxch
bound
push
data16
nop
or
mov
mov
fsubs
fldcw
ret
dec
ss
push
insb
insb
add
jl
xchg
sbbl
mov
cmp
cmp
pop
daa
xchg
pop
repnz
inc
out
jns
das
outsl
repz
dec
mov
popf
sbb
mov
mov
aas
test
enter
dec
in
ss
inc
or
add
mov
int3
and
pop
xlat
inc
xlat
add
outsb
push
sub
popa
jg
mov
jl
sti
cmp
mov
adc
xor
cmp
push
lret
ret
ftst
xlat
outsb
add
imul
sub
mov
mov
dec
jnp
stos
bound
lds
dec
out
dec
out
adc
imul
lds
call
jno
sbb
add
icebp
sub
enter
stc
loope
loope
adc
incl
lds
xchg
mov
aam
cwtl
sti
fdivl
mov
xchg
in
sbb
aaa
add
jnp
adc
in
lods
xor
inc
push
cltd
xor
push
in
push
mov
dec
ds
add
data16
cwtl
adc
xorb
rcrb
es
dec
ds
fildl
push
out
xlat
push
stc
xchg
icebp
test
mov
mov
xor
inc
aas
mov
jbe
fcmovu
jno
in
test
daa
clc
jo
or
int3
lcall
sti
xor
repz
push
in
insl
sbb
cmp
jno
scas
cmp
es
scas
inc
xchg
int3
arpl
sahf
in
cmp
ljmp
sbb
dec
outsl
ss
popa
push
out
xchg
pmulhuw
push
stos
ret
jge
inc
push
loopne
xchg
test
arpl
fsubr
xor
pop
or
mov
daa
mov
cmp
inc
fcoml
popa
push
cli
inc
push
xchg
scas
cmp
mov
ret
pop
sbb
cmp
push
pop
lret
cmp
test
cmpsb
or
js
shl
lock
sub
dec
fildll
les
xchg
mov
test
jo
test
cltd
mov
cmp
fdivs
pop
sub
into
gs
fbstp
sahf
clc
pop
push
std
xchg
lcall
mov
lock
icebp
cmp
or
fs
andb
out
pop
stos
sbbb
jb
or
jnp
aaa
mov
fisubrl
dec
clc
fmul
arpl
adc
mov
movsb
adc
arpl
mov
ljmp
sbb
mov
test
mov
jae
inc
fsubl
iret
arpl
add
lret
bound
xchg
aam
lahf
ss
sbb
pop
jbe
mov
dec
arpl
or
es
fidivrl
sbbl
je
and
mov
mov
add
or
jo
sub
in
inc
nop
mov
fisubrl
adc
add
mov
fistl
test
fisubrs
pop
repz
sti
xchg
cs
addr16
xor
dec
adc
adc
mov
xchg
push
mov
test
cmp
cmp
jmp
push
in
fsubrl
xor
sbb
xchg
sub
ds
imulb
test
mov
mov
xor
add
jle
xor
testl
shrb
pop
pop
pop
and
mov
ds
or
mov
sti
cmp
lret
add
mov
dec
scas
sub
mov
push
iret
dec
jmp
jcxz
add
ds
cmp
pop
arpl
gs
lea
rcll
int3
xchg
mov
fistpl
mov
xchg
sbb
dec
les
dec
inc
test
cmp
sarb
sub
jnp
scas
movsb
or
xchg
popa
or
dec
aas
pop
and
or
aad
mov
pop
mov
inc
gs
addl
dec
mov
pusha
or
mov
sub
jbe
dec
imul
loopne
mov
jle
mov
inc
xor
aad
push
sub
adc
shlb
sbb
icebp
fisubs
aad
sti
testl
aaa
insb
mov
paddq
xchg
fcmovne
jmp
push
bound
xchg
mov
or
fs
pushf
je
arpl
push
mov
aad
sbb
test
mov
jl
dec
out
dec
push
mov
dec
inc
idivb
test
xorl
dec
stos
push
cs
inc
push
inc
xchg
sti
mov
sahf
aad
cmp
hlt
cmpsb
dec
xor
push
sub
loop
in
dec
test
and
fdivrl
out
outsl
push
mov
adc
lret
cmp
xchg
movsl
js
dec
jl
add
push
mov
mov
push
cmc
sahf
mov
stos
stc
fwait
xor
ficoml
mov
sub
test
sbb
addr16
jmp
bound
sub
stos
mov
repz
jl
out
or
nop
mov
push
xor
xor
ret
pusha
jecxz
out
not
int3
movb
rclb
xchg
pusha
mov
and
cmp
adc
add
cmp
lock
pushf
add
test
divb
push
sarb
shrl
inc
mov
ljmp
mov
repz
aaa
out
jg
mov
ret
pop
xchg
add
jnp
mov
stos
or
push
xor
mov
ja
mov
mov
shl
loop
lcall
xor
xchg
in
lods
mov
and
je
adc
test
insl
enter
pop
jle
negb
aam
dec
mov
and
xchg
mov
jp
mov
clc
xor
sbb
stos
mov
stc
ljmp
aad
ss
and
jns
jns
test
imull
clc
sub
xor
aaa
cli
pop
bound
popf
sbb
adc
bound
ljmp
outsb
test
sub
mov
pop
stc
jmp
cmp
idiv
adc
js
test
aaa
call
jmp
fld
out
mov
add
mov
cmc
sbb
aad
mov
xor
pop
jecxz
adc
mov
sarb
mov
mov
mov
pop
ss
in
jge
movsb
fdivrl
mov
adc
xor
into
cmpsl
aad
movsl
jns
cmp
shlb
push
mov
cwtl
push
stos
mov
push
inc
xchg
out
ljmp
sti
stc
cmp
loop
aam
cs
mov
in
out
mov
pop
xor
mov
jmp
sub
cmp
inc
add
ljmp
mull
xchg
jno
sbb
addr16
imul
cs
xchg
iret
imul
mov
or
out
fidivl
imul
ljmp
outsb
xchg
push
fs
les
fisubrl
stos
std
jl
push
dec
imul
xchg
pop
mov
dec
iret
or
fs
movsl
lret
sub
int3
scas
or
cmp
lea
data16
jbe
cmp
jnp
cmp
cwtl
fsts
mov
sub
sti
push
mov
out
pop
out
arpl
shll
dec
sub
mov
cmpsb
mov
leave
xor
sarb
aas
bound
aas
imul
cmpsb
data16
and
lds
push
mov
mov
push
mov
imul
cmpsb
or
ss
cmp
pop
jno
loopne
jns
dec
dec
push
push
and
mov
cmp
sub
adc
mov
shlb
sbb
xchg
std
inc
xor
dec
or
jecxz
and
jge
stos
test
mov
jmp
and
ret
or
sbb
mov
sub
xchg
or
ftst
xor
mov
lahf
cmp
xchg
les
push
ljmp
fmull
scas
dec
icebp
xchg
adc
mov
into
add
push
loop
jns
in
add
in
dec
aad
xor
loope
in
sarb
or
in
xchg
and
add
mov
jnp
push
lret
push
mov
xchg
push
sub
xor
push
or
divb
xchg
decl
jg
sub
gs
xor
lret
and
adc
je
push
aad
insb
lods
jo
mov
mov
test
mov
xchg
inc
mov
jl
cmp
and
cmp
mov
sub
cwtl
mov
sub
enter
mov
sub
pop
cld
bound
pop
sbb
fwait
adc
shll
inc
sbb
push
jnp
lds
out
je
ret
sbb
lcall
int3
andb
cmp
test
push
add
add
cmc
cs
dec
inc
fwait
sbb
mov
mov
sbb
xor
mov
sub
test
push
fs
and
pop
jno
insb
test
test
adc
aad
into
jns
adc
inc
jmp
test
and
inc
cmpsb
push
mov
pop
push
arpl
mov
mov
hlt
stos
pop
push
inc
add
shl
adc
jbe
mov
or
mov
add
mov
shrb
mov
xchg
jne
dec
jg
push
and
rorl
sub
data16
fsubs
mov
jne
outsb
mov
movaps
add
jbe
pop
or
mov
aaa
pop
cmpsb
sub
lods
jns
inc
xor
rol
mov
ret
sbb
mov
dec
pop
std
pop
jle
loope
push
imul
test
and
mov
pop
mov
cmp
dec
mov
jle
dec
and
dec
or
repz
andl
dec
sahf
aas
out
fstpt
inc
inc
movsl
jle
sub
jecxz
ret
fmuls
mov
jg
xor
inc
push
push
mov
push
ds
pop
cmp
inc
dec
mov
fbstp
sub
jnp
iret
add
sub
je
mov
andb
inc
push
lock
dec
fisubrs
pop
adc
repnz
daa
ret
dec
rsm
and
cmp
fidivl
lret
inc
call
out
mov
mov
shlb
pop
fwait
and
rcrl
sbb
es
push
mov
sub
bound
out
aaa
cmpsb
shr
jae
xchg
and
pop
sbb
mulb
add
out
jno
out
test
insl
call
adc
and
icebp
inc
pop
dec
push
rorb
in
cmp
push
jmp
sarb
sbb
mov
fisubl
fnsave
push
xor
mov
add
jg
adc
test
and
cmp
jne
les
fisubs
aam
xor
adc
jp
adc
call
fidivrs
insb
xchg
test
sbb
movsb
mov
sub
push
pop
rolb
mov
and
xorb
mov
mov
movsb
jae
into
stos
push
pop
push
sbb
sbb
jnp
pushl
mov
in
pop
into
fsubrs
pop
int
stos
push
rorl
pop
popa
cltd
stos
lahf
adc
out
xchg
dec
loop
and
jmp
mov
fcoms
enter
jp
dec
mov
fisttps
daa
add
out
cmp
hlt
push
mov
inc
dec
lahf
jbe
fbstp
push
pop
lock
or
pusha
xchg
insl
mov
push
or
test
sti
inc
sbb
out
test
jmp
pop
jae
rol
out
push
xor
cmp
sub
outsl
lret
inc
lock
xor
lret
mov
push
sahf
pop
lods
pop
jns
push
push
jb
dec
pop
insl
es
dec
inc
or
testl
les
cmp
loope
dec
cmp
mov
loop
mov
dec
stc
test
outsb
fwait
std
scas
sub
popf
rcl
jp,pn
lods
pop
push
xchg
jbe
mov
aaa
sub
sub
insb
jg
sahf
mov
in
cmpsl
jecxz,pt
jmp
push
aaa
das
fiadds
or
jne
add
adc
pop
sbb
sbb
push
jnp
push
ja
sub
test
mov
int3
test
cltd
in
nop
fdivp
or
mov
mov
add
pop
or
mov
lret
pusha
frstor
inc
lods
cmp
pop
imul
lcall
je
pop
dec
and
mov
adc
lods
xchg
sub
clc
cmp
sub
test
repz
sbb
lods
aam
add
or
sti
lods
aad
pop
fucom
sub
rcr
mov
mov
cmp
sbb
into
out
aad
rcrl
movsl
clc
cld
nop
mov
clc
outsb
and
mov
xchg
rcrb
mov
je
cs
cmpsb
mov
cld
stos
dec
in
add
mov
sbb
dec
es
aad
xchg
jmp
imul
lods
fstl
xchg
xchg
rcrb
lods
fwait
sub
stos
popf
jb
out
xor
inc
xchg
sbb
inc
adcb
rcrb
push
xchg
jns
pop
mov
push
sbb
mov
mov
cmp
mov
rorl
ja
cmp
mov
pop
adcb
mov
xchg
nop
cmp
pop
cmp
jns
ret
aam
push
mov
mov
xchg
add
add
sbb
clc
jae
or
jecxz
negb
inc
and
and
rcll
mov
ss
mov
lock
xchg
shlb
or
int
jb
dec
ss
mov
cmp
lods
aam
add
xor
pop
jns
inc
push
push
xchg
mov
ss
lods
in
lret
test
shr
xor
rol
mov
mov
lahf
mov
jl
xor
cmp
mov
mov
lcall
fstl
mov
arpl
pop
fwait
dec
xor
in
hlt
in
inc
gs
rcrl
lds
xchg
push
jl
xchg
fucompp
lcall
add
or
and
dec
and
fistl
loope
js
sbbl
cltd
rcrb
pop
xor
fadds
inc
pop
cmp
dec
imul
or
cwtl
push
mov
mov
sbb
subl
pop
fbstp
sbb
call
mov
xor
mov
mov
mov
sub
xlat
mov
loopne
push
flds
inc
xchg
dec
test
xchg
or
adc
push
icebp
inc
das
jnp
int3
pop
ljmp
popl
aad
lods
popf
push
fdivrp
inc
decb
inc
or
jae
sub
fs
xor
outsb
js
xor
push
lcall
or
scas
lock
mov
scas
push
push
das
pusha
push
andb
xchg
cmpl
ja
sub
das
sbb
sbbb
and
in
xchg
insb
cmpsb
mov
pop
add
xor
test
lahf
stos
inc
rcll
sub
push
xchg
int
mov
jne
cmp
ds
ljmp
push
lahf
push
out
icebp
inc
jbe
mov
pusha
ljmp
pop
movsb
adc
jbe
mov
movsb
pop
mov
push
fsubrl
ss
mov
dec
leave
movsl
int3
leave
shll
mov
jns
ret
daa
loop
cmp
imul
fcmovnu
clc
int3
jp
outsb
push
sub
stos
xor
lods
mov
xor
add
jg
cmpsb
push
mov
push
std
mov
mov
xchg
dec
faddl
in
pusha
aad
call
pop
shlb
shr
les
jmp
and
jnp
cmp
popf
lods
push
jle
add
stos
pop
jmp
cwtl
mov
sbb
adc
cmp
xchg
pop
popa
and
sbb
push
addr16
enter
ret
lcall
fstpt
inc
add
lds
mov
lock
cmpsb
adc
xchg
cmp
pop
aad
inc
in
xchg
jnp
call
inc
loope
cmp
aad
lahf
ret
insb
jnp
sahf
mov
ret
xor
push
jne
cmp
dec
or
or
adc
imul
jbe
pop
rcll
sub
outsl
dec
mov
mov
mov
outsl
and
mov
push
lahf
int
push
add
cmc
inc
jbe
stc
xchg
sub
cmpsl
mov
dec
int3
jg
jno
adc
jnp
lcall
mov
and
jl
sbb
jae
test
inc
sbb
mov
idivb
jo
fiaddl
add
push
xlat
orb
lods
in
in
mov
xchg
pop
adc
mov
sahf
fistl
test
xor
sbb
and
and
int
cmp
cmp
scas
sbbl
add
addr16
mov
mov
xor
mov
in
inc
not
lahf
and
outsl
push
xchg
inc
es
cmpsl
mov
imul
xor
int3
das
jns
sbb
lods
mov
arpl
or
sub
js
push
mov
or
out
pop
cli
inc
add
or
push
cwtl
mov
scas
push
pop
popl
push
jmp
mov
jl
rcll
vandpd
lds
mov
mov
adc
mov
and
sti
sbb
movsl
loopne
cmpsl
sbb
sub
jl
sahf
dec
adc
dec
icebp
roll
adc
sti
cmp
pushf
mov
push
test
and
inc
sub
vxorpd
jmp
imul
pop
insl
cwtl
repnz
mov
adc
ds
arpl
dec
nop
fldl
popa
popf
loope
xor
imul
cmp
aaa
fnstenv
call
addr16
jmp
or
cmp
jge
and
push
sub
pop
push
nop
inc
stos
pop
xor
dec
xchg
mov
adc
sub
mov
and
cmpsb
sahf
inc
movsb
xchg
jnp
mov
ret
mov
push
pop
cmp
test
xchg
xchg
or
mov
adc
lcall
or
out
jp
pop
and
sub
mov
mov
fdivl
sti
xlat
sub
data16
and
xor
movsb
sbb
out
iret
cwtl
adc
pop
mov
mov
mov
sub
xor
mov
test
adc
testl
add
addr16
xchg
sub
pop
mov
nop
shll
and
pop
sahf
pop
fadds
les
inc
je
fs
rclb
neg
call
int3
fwait
insl
or
xchg
push
imul
outsb
test
daa
pop
imull
jbe
inc
loopne
loop
mov
mov
xlat
paddq
xchg
test
xor
in
lahf
sub
jb
push
xchg
xchg
cmp
lcall
mov
fstpt
mov
cmp
inc
dec
pop
popa
xorl
aas
mov
das
jl
dec
push
push
mov
out
jp
jnp
push
inc
and
movsb
bound
sbb
sub
jae
nop
shrb
js
lret
sbb
in
ret
sbb
jne
lods
pop
xchg
loope
wbinvd
dec
mov
outsl
mov
frstor
mov
fstpt
inc
dec
movzwl
in
dec
adc
mov
or
mov
shlb
sub
mov
lods
mov
inc
movsl
into
dec
inc
jle
pop
sbb
push
sbb
jp
insl
mov
cmc
cwtl
test
mov
lret
out
fstpt
jmp
add
std
pop
outsl
and
jnp
mov
adc
xor
ret
add
push
add
mov
pop
mov
aam
stc
insb
adcl
fs
mov
cmp
cmp
sahf
jb
push
hlt
mov
xor
in
test
inc
cmp
shr
fstpl
dec
sbb
fistpl
sub
add
repnz
test
xchg
mov
orb
pop
fbld
add
mov
or
jnp
rep
lret
out
and
mov
pusha
call
repz
jbe
dec
mov
cmp
fnstsw
xor
add
and
pop
jo
cld
dec
cmp
push
push
push
mov
adc
sbb
loop
out
add
divl
es
xchg
rcrb
add
jge
and
adcl
fstpt
push
mov
or
push
or
enter
push
scas
cmp
cmp
movsl
inc
dec
sub
lcall
push
loop
add
ror
fldcw
in
testb
jecxz
dec
cmp
fisttps
repz
dec
xor
mov
movsb
adc
push
jno
cvttps2pi
xorl
sub
arpl
mov
jge
xor
aad
sub
mov
xchg
push
movsl
lcall
stc
je
orb
fs
xor
movsb
cmc
jnp
push
jae
movsl
mov
jo
or
mov
sub
mov
clc
movsl
jmp
mov
ret
xchg
pop
ss
icebp
pop
pushf
dec
movsl
test
adc
or
adcb
stc
push
and
mov
or
std
insl
les
or
dec
jne
ret
and
mov
push
shr
iret
hlt
xchg
add
hlt
test
je
sbbb
xchg
insb
mov
dec
imul
ret
aam
pushf
xchg
scas
adc
sahf
aaa
cmp
push
shll
or
lock
int3
adc
pop
lcall
sbb
push
mov
xlat
and
sub
stos
jecxz
scas
sbb
addr16
je
clc
mov
pop
lret
addl
jns
jno
jae
shll
jne
mov
cld
sahf
jecxz
subl
ja
add
fistps
fsubrs
mov
xchg
sbb
or
dec
stos
lock
sub
nop
sub
xor
sbb
xor
call
xchg
adc
in
dec
dec
jp
xchg
mov
mov
cltd
imul
adc
stos
dec
or
mov
sub
test
jle
es
mov
xor
fidivrl
cmp
push
imul
cltd
mov
scas
outsl
mov
cltd
sbb
stc
cmp
sub
add
mov
add
in
dec
insb
dec
and
outsb
insb
fldenv
pop
das
adc
dec
jo
pop
and
lret
mov
pop
fs
push
sbb
dec
cmp
jae
ljmp
jle
inc
push
push
aas
test
insb
rol
mov
aas
rep
inc
pop
adc
rolb
add
mov
scas
popf
push
or
int
or
gs
pop
cltd
mov
cmp
sub
xor
push
inc
pop
nop
clc
jnp
in
jne
jb
mov
mov
in
test
jmp
sar
and
fwait
jne
fwait
fwait
mov
js
jns
stos
fsubrs
ljmp
test
lods
notl
and
xor
push
pop
aaa
xchg
xchg
hlt
rolb
insl
add
call
daa
jecxz
inc
dec
and
jge
xor
fs
cmc
test
jmp
mov
sub
cmp
sub
sub
or
cmc
mov
pushf
negl
cmc
out
call
mov
cmp
test
out
daa
add
xor
lods
ret
mov
stos
add
iret
push
sbb
imul
pop
popa
lret
jns
cmpl
pop
adc
sub
loope
or
test
pusha
ljmp
push
cmpb
outsl
xchg
dec
and
xchg
pop
add
mov
leave
setbe
fsubs
cld
jecxz
out
outsl
inc
inc
test
xchg
scas
or
mov
repz
adc
jae
fldln2
mov
dec
addr16
jmp
push
mov
mov
fdivrl
push
loop
filds
mov
fs
pop
test
xor
lea
frstor
mov
inc
popa
cli
cld
icebp
or
lahf
push
div
sub
sarl
sub
repnz
pop
jnp
sbb
es
lret
push
add
mov
cs
xlat
lahf
xchg
xor
sub
cmp
mov
imul
icebp
test
and
jecxz
imulb
mov
xorl
arpl
xor
flds
enter
subb
daa
cmpsb
mov
es
ja
mov
test
inc
push
inc
cmp
xor
shll
cli
lock
dec
push
lock
adc
shrd
insl
aas
test
dec
pop
inc
push
cmpb
dec
add
mov
xchg
xorb
push
imul
stos
loop
push
and
rcrl
xlat
in
dec
jbe
ljmp
punpckhbw
xchg
adc
mov
loope
icebp
ds
lcall
and
pop
mov
cmp
and
push
adc
fbld
fwait
imul
ficoml
xor
fwait
jo
adcl
adc
xchg
insb
lods
adc
in
push
pop
jle
cmp
sti
cmc
in
push
arpl
cmp
ja
hlt
push
lock
adc
adc
xchg
xchg
cmp
subl
out
mov
and
dec
cmp
mov
fcoml
mov
pop
arpl
jle
mov
lods
ror
cmp
adc
and
or
jle
repz
fdivrl
adcb
jmp
in
int3
cs
into
adc
push
push
xor
cmpsb
stos
cmpsl
push
mov
and
dec
cli
fs
mov
jbe
cmpsb
jno
add
sarl
mov
push
div
subb
scas
mov
inc
cwtl
lea
inc
dec
je
xor
mov
mov
into
dec
icebp
lret
lock
mov
add
or
orb
pop
fisubrl
mov
push
fucomi
call
or
sbb
mov
ja
push
lods
or
popf
mov
jno
call
mov
cmp
shll
mov
inc
mov
fptan
fisubl
mov
dec
inc
js
sbb
cs
cmpsl
jnp
imul
sahf
repz
fnstenv
out
shll
test
and
inc
lcall
xchg
push
loope
shlb
sub
sarl
mov
mov
jle
nop
aam
cwtl
clc
leave
ss
mov
jle
cmp
inc
shl
inc
push
jmp
cltd
jmp
vpsllq
push
mov
test
bound
push
aam
sti
adc
icebp
pusha
insb
add
and
lods
mov
inc
cmp
push
push
lods
adc
scas
sub
iretw
pop
inc
lahf
xor
add
pop
pusha
clc
clc
fs
jge
lds
inc
and
mov
jp
or
add
pop
faddl
fadds
push
mov
sub
lea
stos
icebp
cltd
sbb
mov
or
cltd
loopne
mov
rcr
test
shlb
mov
insl
inc
dec
jle
inc
cmpsl
push
push
sub
and
mov
inc
es
rcr
sub
jne
sub
jmp
dec
xchg
fsubr
mov
hlt
lcall
cld
mov
punpckhdq
imul
lods
sub
adc
leave
fdivl
pop
ds
scas
roll
pop
push
bound
inc
insb
into
lret
jecxz
shrb
and
jbe
and
cwtl
jb
call
inc
into
scas
add
lcall
test
push
mov
xor
push
fistps
hlt
daa
movd
in
test
jp
mov
addr16
imul
xlat
out
movsl
arpl
xchg
or
sbb
icebp
dec
and
xchg
in
adc
sbb
xlat
dec
push
jecxz
fsubrl
mov
lret
cmpsb
out
cmpb
in
jno
sbb
lcall
ss
scas
nop
in
call
jecxz
loop
xor
mov
lcall
mov
or
movsl
inc
mov
inc
js
cmp
and
jno
add
call
fildl
div
jle
addb
xchg
xorl
and
syscall
add
imul
ss
dec
iret
sbb
divl
mov
xchg
insl
stos
hlt
sbb
pop
dec
andl
mov
popa
ljmp
jo
and
fdivrs
add
jb
sub
cmp
sti
popa
cltd
xchg
and
mov
cmpsb
lahf
int
add
jle
jmp
out
xchg
xchg
scas
mov
inc
adcb
lock
jl
mov
cmp
js
cwtl
fs
inc
jb
cli
xchg
push
outsl
aam
in
jp
shll
sbb
test
xor
decl
filds
cmp
cmp
test
mov
out
or
outsb
stc
out
sbb
inc
jg
add
push
out
sarl
loopne
clc
bound
inc
sub
out
sbb
iret
pop
push
adc
sub
mov
lods
cmp
cli
mov
std
movsb
insb
xchg
xchg
or
add
psubw
dec
mov
inc
add
or
test
lahf
bound
js
mov
xchg
push
jp
inc
js
push
push
and
jne
out
jmp
pop
mov
pusha
jb
and
cmp
mov
cmpl
jmp
xchg
mov
mov
pop
or
dec
lahf
push
cmp
xchg
jecxz
mov
adc
aad
or
xchg
out
push
fdivrl
mov
pop
sub
xor
pop
pushf
dec
push
or
insl
fcomps
cmp
leave
out
sbb
adc
pop
out
sub
xor
mov
push
out
mov
pop
dec
ds
add
stos
loopne
adc
pop
inc
xor
and
inc
pusha
lea
add
hlt
aam
mov
cmpsb
lea
add
data16
jno
stos
push
mov
imul
sub
pop
das
enter
stos
in
mov
adc
es
popf
pushf
dec
jl
aaa
mov
sar
aaa
sub
lods
mov
adc
lahf
dec
clc
cs
mov
push
dec
ret
js
enter
cmc
push
sbb
inc
and
push
cmpsb
pop
clc
xchg
dec
fsubr
jecxz
jmp
icebp
pop
push
out
push
jb
or
call
insl
push
xchg
pop
or
je
insb
daa
cmp
mov
and
adc
in
pop
mov
inc
lock
xor
inc
lds
sti
aas
movsl
jle
aad
lods
inc
imulb
popa
loope
lret
bound
jmp
or
pop
sahf
xchg
pop
sahf
and
es
sub
clc
jge
pop
notb
lahf
sbbl
push
mov
das
mov
fbstp
js
xor
insb
fs
add
mov
mov
ret
ret
pop
lock
dec
loopne
es
pusha
mov
jns
mov
frstor
dec
xchg
xor
pop
bound
jbe
pop
lock
xchg
or
mov
pop
lods
daa
mov
lods
incl
xor
push
out
call
sti
andb
or
test
aad
xchg
sub
mov
stc
dec
mov
bound
ja
insl
repnz
rorl
repnz
pop
scas
jb
xor
inc
xchg
sub
les
jecxz
in
jmp
mov
jb
imul
nop
daa
mov
addr16
int3
arpl
out
xchg
sub
mov
or
lahf
pop
stos
sub
fsubrl
es
jnp,pn
fldt
pusha
idiv
mov
js
push
hlt
mov
and
into
hlt
mov
cltd
cmpsb
cmp
inc
in
scas
sbb
ds
mov
test
mov
ss
aam
in
push
js
lea
loopne
pop
scas
cli
xchg
fdivrs
test
and
mov
incb
adc
adc
enter
xchg
jmp
dec
loop
xor
popa
outsb
psubb
mov
addl
jp
pop
add
cmp
xchg
add
es
fstps
es
mov
ficoml
add
cmp
pop
add
cmp
or
leave
cli
xchg
repz
pop
scas
loopne
pop
mov
add
push
cwtl
pop
or
jecxz
rclb
test
add
sarb
pop
mov
mov
test
cmp
fcomip
mov
test
push
enter
cli
xchg
xchg
cmpsb
cmp
xor
jnp
cmp
pop
inc
fiaddl
test
push
shl
enter
push
ljmp
mov
aas
fcomps
enter
jnp
pop
inc
in
jg
sbb
ficompl
add
and
pop
addb
jp
lea
fwait
loop
xchg
es
and
shlb
xchg
jnp
cmp
lret
pushf
jmp
in
dec
in
call
xor
jo
addr16
insb
xchg
imul
mov
lock
fldenv
mov
popa
and
add
rcrl
xchg
sub
push
adc
repz
jae
pop
lods
outsb
std
xchg
cwtl
into
movsb
cmp
mov
cmpsb
cmp
cmp
pop
xchg
sub
test
pop
repz
es
dec
sbb
fcomps
sub
and
jbe
push
inc
adc
jge
inc
fisubrs
or
xchg
mov
push
out
aad
lcall
mov
mov
fxam
jl
xor
jmp
pop
pop
and
test
pop
movsb
leave
inc
xlat
icebp
push
jmp
adc
dec
and
pop
insb
testl
loop
xchg
cs
xchg
and
adc
cmpsl
push
cmp
add
pop
mov
mov
jb
sti
lods
cmpsl
test
loopne
aaa
into
clc
add
cmp
lea
gs
sub
faddp
or
sub
sbb
dec
fbstp
mov
sahf
xchg
dec
loop
sarb
adc
ss
ljmp
mov
sub
jmp
xchg
adc
lahf
ss
xor
adc
xchg
pop
pop
mov
fldcw
mov
aaa
and
pop
push
mov
outsl
cmpsb
mov
hlt
in
scas
inc
add
cmp
aaa
and
lahf
pop
push
pushf
xor
mov
xor
decb
jo
dec
push
pop
icebp
lea
xchg
lods
popf
xor
mov
pop
in
clc
stos
inc
and
sbb
jnp
jg
sbbl
jecxz
xor
add
cmp
mov
imul
mov
inc
xlat
dec
loope
add
xor
pop
mov
test
scas
movsl
dec
iret
pop
hlt
idiv
pop
scas
sub
inc
fiaddl
call
xor
mov
dec
fists
ss
into
jo
stc
mov
popf
xor
jmp
ds
mov
xor
sub
mov
xor
fsubr
test
adc
aaa
xchg
jo
xchg
sub
mov
inc
ficoms
push
jmp
jno
popf
xor
xchg
pop
xchg
sti
xchg
fwait
and
jns
adc
test
xchg
and
mov
inc
fstl
aam
and
shrl
xchg
xchg
sub
je
dec
movsl
call
mov
dec
ja
cwtl
das
inc
cwtl
hlt
mov
shrb
repnz
in
adc
inc
xchg
sub
lret
popa
push
jmp
in
or
out
inc
fisubrl
insl
add
nop
inc
xlat
leave
bound
cltd
ljmp
lock
test
jbe
mov
inc
xchg
cmpsb
cmp
xchg
in
dec
adc
aam
push
mov
jg
push
sbb
or
and
and
stos
inc
jge
jns
fs
lcall
xchg
sub
cs
dec
enter
mov
cld
mov
enter
clc
xor
fwait
push
pop
mov
mov
ds
rcll
adc
xor
mov
cmpl
push
idivb
pushl
daa
push
andl
dec
movsl
inc
ja
mov
fistpl
loop
sub
add
mov
aaa
xor
insb
xchg
inc
in
andl
sbb
sbb
cmp
sub
mov
test
pushf
sub
and
push
je
dec
stos
jge
fwait
movsb
int
cli
lret
sbb
notb
das
mov
pushf
addr16
movsl
out
mov
fsubr
add
aam
add
outsl
popa
push
xchg
push
insb
stc
nop
mov
jle
jecxz
sahf
daa
xor
pop
scas
aaa
xchg
test
icebp
xchg
aad
iret
push
sub
and
and
fbld
dec
push
cmc
je
out
ja
pushf
andl
adc
cmp
test
pop
cmpsl
mov
fisubrl
aam
cli
or
pop
adc
sub
outsb
inc
imul
mov
leave
outsl
push
add
mov
cs
jecxz
xorl
mov
in
jmp
in
aas
pop
outsl
or
inc
push
mov
lret
mov
mov
sbb
jb
and
mov
push
je
test
mov
rcr
or
mov
add
aas
mov
jp
outsb
lods
inc
movsb
mov
loop
testl
adc
xchg
test
sub
add
loop
fisubrs
inc
movsl
push
lea
jns
shll
xchg
int3
sbb
movsl
dec
push
push
das
leave
jge
fstps
sbbl
mov
ret
add
jno
xor
sbb
arpl
lret
scas
add
pushl
cmp
fisubrs
mov
mov
jge
sub
jne
mov
decl
cmp
push
mov
dec
adc
push
mov
dec
cmc
test
adc
cli
inc
adc
push
mov
xchg
aam
lods
push
mov
fxch
jne
push
daa
leave
jb
call
or
lcall
shr
sub
mov
dec
icebp
push
mov
or
and
pop
gs
mov
and
adc
les
sub
push
fs
data16
pop
popf
scas
rolb
mov
xlat
or
dec
pop
cmp
xchg
ja
enter
sub
cmpsb
pop
sbb
jmp
test
testl
aaa
aam
pop
jecxz
push
sub
mov
push
aad
jnp
xor
std
addl
rcrb
xchg
sub
cmp
fisubrs
mov
cld
mov
mov
loopne
sbb
jno
andb
push
movsl
cmc
xchg
into
inc
fxch
pusha
or
ficomps
mov
sbb
adc
rcrl
mov
popa
ret
and
mov
out
addr16
cmpsb
pop
mov
cmp
and
pop
mov
les
lods
sbbl
insb
and
xor
mov
testb
push
fsubs
adc
popf
xor
dec
cli
xchg
jle
les
lahf
and
rcrb
mov
sub
and
js
jne
scas
inc
xor
push
dec
in
jmp
imul
cmp
insl
stc
mov
sub
cmpsl
ds
inc
pop
lods
lds
int3
arpl
jecxz
and
add
dec
xor
mov
dec
daa
mov
mov
inc
fld
rcrb
or
push
out
sbb
adcb
cmp
mov
les
mov
mov
adc
jecxz
jae
mov
sbb
adc
cld
lea
stos
inc
aas
out
pop
repz
jo
push
push
jb
call
cs
fld
pop
cld
lea
mov
sbb
sub
adc
ss
repz
lcall
cmpsl
mov
xchg
hlt
mov
and
inc
mov
xchg
xorb
add
lea
fstps
scas
inc
dec
cld
test
push
mov
rcr
test
or
xchg
iret
mov
adc
fbstp
cli
inc
ficomps
ja
adcb
sbb
sbb
hlt
sub
adc
xchg
sub
pop
mulb
mov
xchg
xorl
loopne
popf
xor
add
lea
xor
dec
add
adc
ss
or
das
lods
fmul
inc
out
jmp
pop
ret
das
add
arpl
loope
jnp
shll
fwait
xor
pushf
jmp
push
cmpb
out
jo
fdiv
push
adc
ret
hlt
cld
adc
cmc
mov
push
iret
cmp
cmp
xchg
lcall
clc
in
cmpsb
xor
mov
lahf
lret
out
js
jb
mov
in
mov
fiadds
sub
jp
inc
xlat
pop
fwait
jle
or
mov
in
test
dec
into
jmp
jge
jp
cmp
int3
pop
sbb
fisttps
cmp
fs
jmp
jge
xchg
in
add
add
and
lahf
adc
and
shrl
xchg
mov
fstps
xchg
int3
sub
das
pop
in
fbstp
jae
in
movsb
inc
fidivl
lds
scas
iret
sbb
andb
inc
xlat
fwait
inc
sub
je
mov
popa
leave
setp
inc
ljmp
xchg
cmp
pop
outsb
mov
cmp
mov
mov
insb
push
and
divb
mov
aad
push
cwtl
ficoml
enter
adc
dec
xchg
rol
xchg
push
lods
and
jp
sub
bts
ficompl
loopne
imul
aas
call
sub
loopne
cld
push
xorl
mov
pop
repz
mov
dec
cli
loope
adc
mov
inc
push
imul
add
stc
xlat
inc
mov
ret
push
aad
out
fdivrl
push
pop
fidivs
popf
je
dec
sbb
lret
int
fwait
push
xorb
push
icebp
rcll
aaa
orb
jns
enter
loope
mov
bound
shl
mov
sbb
mov
out
inc
loop
cltd
je
adc
push
xchg
cld
jle
add
mov
insb
pop
sbb
sarb
cmpl
arpl
scas
mov
jne
cmpsl
pop
xchg
test
xchg
out
lcall
dec
pop
popf
shll
mov
popf
xchg
mov
mov
xor
dec
sub
pop
cltd
loopne
cmp
mov
mul
adc
pop
test
clc
cmp
mov
pushf
dec
mov
psrad
adc
jns
mov
hlt
outsb
mov
test
pop
cld
shlb
jno
das
bound
divl
stos
inc
push
lahf
testl
sub
call
out
dec
clc
cmp
out
ret
sahf
mov
mov
pop
scas
push
inc
fildl
mov
mov
push
out
filds
paddb
out
daa
loopne
pop
out
lea
jb
push
movsl
in
dec
xlat
int
cmpsl
std
push
loope
mov
testb
mov
fsubrs
inc
xor
xor
pop
lock
inc
pop
lock
insb
mov
int3
pop
lock
dec
pushf
xor
pop
insl
dec
push
mov
inc
arpl
xchg
jae
jo
rcl
repz
or
lret
or
lods
xchg
dec
jno
cmp
inc
mov
xor
push
in
dec
xor
mov
aad
lret
lds
or
push
jb
inc
sbb
aad
mov
repnz
das
sub
lahf
add
or
pop
xor
nop
adc
inc
xchg
lock
mov
adc
add
fnsave
in
ss
icebp
mov
mov
push
arpl
xor
cmp
push
push
push
aad
sbbl
or
dec
cmp
cmp
adc
add
jae
mov
adc
cmp
xor
adc
fidivrl
xchg
insb
dec
push
inc
mov
pop
xchg
jmp
leave
bound
inc
fisubrl
fsubrl
iret
fdivs
pop
jae
jle
push
sub
hlt
xorb
mov
dec
loope
insb
movntq
mov
pop
push
test
mov
lods
movsb
int3
fbstp
into
mov
add
push
in
pop
xor
test
ret
cmc
pop
pop
repnz
sbb
inc
fdivr
gs
xchg
lcall
scas
out
shlb
out
insb
add
sbb
data16
arpl
dec
mov
mov
mov
mov
xchg
sub
mov
lret
cmp
adc
pop
pop
sahf
dec
push
jb
xchg
adc
xlat
out
or
dec
aas
in
or
xchg
jl
xchg
scas
repz
ror
arpl
or
push
jnp
xor
test
sub
aad
fidivs
mov
jb
sub
repnz
inc
adc
movl
and
pop
aaa
imul
aas
repnz
jecxz
sbb
xchg
sub
pop
lods
inc
push
out
leave
sbb
insb
fs
cmpsl
cmp
jecxz
scas
jmp
mov
dec
gs
jno
lea
mov
aad
mov
or
jae
xor
xor
xor
mov
rcl
insb
add
cwtl
das
pop
jb,pn
popa
fwait
int3
arpl
adc
es
mov
or
in
push
testb
in
aam
ffreep
xchg
sub
push
mov
xchg
pop
xor
dec
ret
fidivl
addr16
cwtl
test
push
sbb
repz
push
push
scas
inc
sub
inc
popf
loopne
adc
adc
or
in
cmpl
jnp
sub
pop
icebp
mov
lea
cmpl
lea
and
xchg
clc
repz
jl
lea
mov
stos
and
aaa
repz
pop
and
jae
test
popa
clc
mov
push
popf
jmp
add
jecxz
imul
test
loop
or
sbb
test
cwtl
and
or
pop
push
in
pop
daa
mov
cli
dec
stc
nop
lock
nop
jecxz
add
aaa
call
incl
cmp
xlat
outsb
in
js
jns
cli
imul
stc
adc
jmp
std
lods
inc
out
imul
ljmp
add
dec
and
cmp
inc
fdiv
pop
shrl
sbb
jp
jnp
sbb
test
xchg
outsl
adc
repnz
mov
pop
dec
push
pop
testb
stc
lcall
pushf
out
pushf
xor
adc
aad
inc
fistpl
mov
jp
lret
mov
rcrb
mov
and
and
pusha
notl
aam
jne
pop
add
mov
pop
repz
mov
outsl
insb
sti
inc
fldt
jo
ljmp
aad
gs
test
push
and
pop
inc
mov
arpl
inc
fcoml
pop
sub
stc
jne
rclb
add
sbb
in
cmp
and
add
iret
push
rcrl
test
sbb
adc
fs
sub
pop
mov
pop
shll
cli
sbb
test
fwait
push
andb
jmp
inc
fisttpl
and
stos
inc
nop
addb
mov
out
mov
pop
pop
sti
xchg
mov
mov
iret
into
lds
test
sub
pop
ret
daa
mov
mov
lret
std
sub
mov
inc
js
or
jns
xchg
outsl
add
mov
pusha
pop
lds
push
popf
push
cmpsb
cli
fadds
add
and
cmp
rorl
cmp
test
jns
jecxz
and
notb
sbb
pop
or
push
mov
out
les
cmp
cli
jp
xlat
outsb
sbb
pusha
sub
push
lock
sub
jle
imul
lret
out
cmp
dec
loop
cmp
pop
lods
ds
xorl
lods
pop
lcall
push
in
ret
adc
ds
bound
cmp
cmp
mov
push
mov
adc
inc
lods
inc
jb
dec
out
pushf
dec
loop
xlat
pop
enter
sbb
cmpsb
jle
mov
fs
fwait
insl
mov
shlb
arpl
lret
bound
xor
es
dec
adcb
jmp
jle
lods
xor
loop
scas
jnp
and
ja
xchg
in
mov
pop
fdivs
aaa
sub
or
jge
lret
rolb
add
xor
jno
fmuls
push
loop
lret
popf
xor
and
adcl
cld
das
orb
mov
movsl
pusha
notl
pop
mov
add
fimull
mov
jae
lods
inc
pop
adcl
je
sbb
iret
and
ficoml
lds
cwtl
das
mov
stc
xchg
leave
stc
mov
mov
mov
cli
mov
mov
jecxz
in
pop
icebp
inc
push
test
xchg
mov
out
mov
pop
loop
mov
fimuls
cli
ds
add
mov
xchg
xlat
mov
inc
fdivl
pusha
test
pop
jmp
cmp
mov
scas
dec
sbb
ja
mov
mov
rclb
rcrb
testb
inc
sub
pop
lock
pushf
mov
push
jmp
or
insl
pop
mov
xchg
lea
mov
fnsave
test
sub
or
mov
pop
scas
lods
sub
mov
add
xor
lods
inc
push
push
imul
test
leave
jmp
cmp
inc
les
outsl
sub
pushf
popf
fidivl
mov
clc
xchg
es
add
inc
push
mov
pop
mov
lea
mov
in
sbb
rcrl
or
loopne
adcl
xchg
jecxz
inc
adc
aaa
into
imul
cmpl
mov
and
sub
je
inc
fnsave
aam
sti
add
dec
sbbb
xor
cmp
xchg
ret
push
sbb
xchg
cs
pop
fsubrs
cmp
imul
adc
vmread
lret
testl
movsl
dec
push
ds
mov
scas
adc
mov
push
jno
std
mov
leave
add
adc
ds
in
add
mov
leave
xlat
outsb
sti
adc
faddl
lds
mov
pop
lcall
mul
sub
loopne,pt
pop
rcrl
mov
aam
test
pushf
sar
push
das
repnz
js
inc
fimuls
lret
dec
in
in
mov
push
mov
pop
mov
das
mov
mov
mov
dec
out
pop
lds
call
pop
adc
push
cmpsl
and
pop
xchg
iret
sbb
sbb
scas
inc
pop
pop
add
fildll
ret
cmc
add
adc
ret
push
add
pop
mov
push
jecxz
inc
faddl
or
idivb
pop
adc
enter
rorb
std
xchg
jl
push
ljmp
hlt
mov
js
loop
xchg
sub
loope
inc
shr
xor
pop
adc
lea
shll
mov
mov
pop
scas
loope
clc
or
or
pop
pop
scas
mov
sub
sub
mov
lods
fwait
adc
and
xchg
lahf
movups
jmp
add
xor
movsb
pop
pop
xor
mov
mov
movsb
aam
xlat
lcall
xor
mov
mov
or
dec
aam
es
xor
or
mov
sub
mov
xchg
sub
movl
inc
mov
into
mov
rcll
jl
loop
aaa
adc
pop
xchg
aaa
into
outsl
mov
shlb
pop
call
add
sub
ds
jns
cs
aas
sbb
hlt
fistpll
rcrb
enter
out
aad
pop
imulb
ret
clc
cmc
call
nop
daa
dec
jmp
mov
addr16
mov
loopne
rclb
aaa
into
test
pop
out
aas
mov
lahf
sub
xchg
movsb
mov
jle
fidivl
and
hlt
pop
mov
mov
jge
jns
push
out
mov
pop
cli
out
xor
adcb
nop
add
fdivs
jmp
repnz
and
cmp
leave
dec
inc
fidivrs
jmp
sbb
adc
adc
push
test
fwait
push
filds
adc
push
cmp
outsb
insb
push
jo
mov
rolb
sahf
add
xlat
popa
sub
rcll
aaa
into
test
aaa
into
add
xor
movsl
cmp
aad
lret
lds
fs
cmc
xor
in
pop
mov
adc
cmp
push
shrl
rol
fidivs
test
sbb
jge
clc
pop
xor
dec
adc
mov
fwait
sub
mov
leave
pop
icebp
cli
mov
inc
sti
pop
bnd
cltd
xor
int3
ds
lret
push
ljmp
and
les
push
jmp
xor
and
jge
push
jmp
cwtl
fs
mov
aam
imul
push
popa
clc
aas
daa
es
js
dec
jecxz
xchg
pop
hlt
mov
and
add
loope
sub
lock
push
mov
lret
loop
loop
or
dec
es
nop
ds
loope
mov
and
push
sub
ret
pop
movsl
inc
pop
hlt
jbe
arpl
jbe
cli
xchg
shlb
xchg
data16
popf
xor
ja
xor
cmp
ja
ds
lahf
fdivl
lcall
sub
outsl
push
inc
inc
sbb
js
or
xor
sbb
xor
fsubrs
nop
pushf
xor
int3
imul
jmp
rcrb
mov
fdivl
cs
mov
movsb
cmp
push
jmp
mov
push
pop
dec
xor
in
imul
sti
xchg
or
nop
daa
lods
and
int
cmp
scas
std
int
out
enter
and
xchg
adc
adc
or
mov
and
push
cmpsb
push
out
sbb
sub
adcb
mov
repnz
inc
fstp
sbb
ret
dec
out
enter
lret
bound
mov
push
popf
sub
or
dec
pop
mov
dec
arpl
sahf
or
pop
dec
pop
lods
and
pushf
xchg
sbbl
dec
stos
lods
inc
fnstsw
xchg
insb
cmc
dec
loop
lahf
mov
addl
mov
frstor
sub
daa
pop
call
andl
jle
xchg
testb
daa
cmpsl
inc
fcoml
push
lods
inc
andb
mov
stos
stos
inc
sbb
jbe,pn
mov
shrl
rol
sub
iret
add
ja
lret
bound
ja
pop
push
imul
mov
mov
lods
inc
or
xchg
dec
loop
cmpl
scas
imull
call
jmp
rcr
adc
inc
inc
psllw
mov
leave
in
test
sbb
mov
inc
fdivl
int
insl
sub
sahf
sbb
nop
mov
mov
int3
add
add
sbb
lea
mov
leave
mov
xchg
sub
jo
shll
adcl
subl
lahf
loope
int3
arpl
scas
imul
add
push
mov
inc
push
lods
inc
mov
push
xchg
mov
dec
in
cld
in
xchg
cs
mov
cmp
and
or
aam
dec
out
xchg
in
fisubl
cmp
imul
sbbl
sub
fsubrl
push
loope
dec
loope
in
in
jg
test
fimull
mov
push
mov
lret
das
pop
mov
rorl
cmpsb
ret
daa
inc
fcomps
clc
in
out
movsl
out
jne
int
sbb
sbb
mov
daa
mov
mov
sarb
mov
push
in
and
icebp
mov
daa
mov
sub
lret
scas
xor
loopne
clc
jge
xlat
cs
xor
repz
test
repz
ret
add
out
xchg
sub
ja
sbb
test
leave
out
mov
mov
mov
mov
mov
into
gs
xlat
outsb
cmp
imul
lahf
lcall
mov
movsl
mov
incb
stos
add
xor
xchg
cs
dec
xor
jle
adc
lret
ja
loope
inc
adc
movsb
cmp
sbbl
dec
fnsave
out
mov
push
movsl
fisttps
outsl
inc
cmp
push
and
mov
aad
clc
or
and
push
mov
add
mov
lds
imul
inc
fstl
pop
scas
ss
js
dec
fnstenv
movb
cmp
and
lods
outsb
lds
adc
loope
enter
add
fbld
mov
mov
mov
xchg
sbb
jg
adc
xchg
and
sub
outsw
mov
pop
cmpb
or
sub
shl
imul
aas
mov
out
stos
test
iret
inc
or
jg
mov
mov
mov
jg
std
xchg
mov
sbb
pop
sarl
das
filds
ds
inc
dec
ds
jno
pop
jmp
adc
ds
or
lock
adc
les
xor
adc
inc
push
mov
test
mov
mov
cli
xor
movl
add
add
out
test
push
pop
jns
clc
icebp
leave
imul
iret
xchg
divb
das
pop
sub
sbb
sub
testb
pop
fstpt
jo
clc
mov
xchg
mov
cwtl
scas
int3
mov
lahf
mov
popf
stc
jle
ljmp
ret
stc
repnz
sub
push
and
xor
inc
pop
fmuls
dec
inc
add
pop
pop
add
cld
push
outsb
jp
lea
loop
push
jae
jnp
dec
push
enter
cmp
pop
xor
push
or
xchg
ret
adc
dec
mov
push
lcall
in
mov
mov
mov
cwtl
sbb
int3
mov
push
mov
mov
inc
add
xor
flds
insl
xchg
or
test
jl
loop
icebp
jmp
cmc
aam
scas
jge
push
and
popa
insl
xchg
popf
les
pop
dec
pop
jp
push
xor
cmc
push
shrl
lds
ljmp
sbb
push
stos
mov
push
jmp
and
mov
dec
sbb
cmp
ss
sbb
push
pop
out
mov
mov
or
mov
xchg
sub
lods
fnsave
mov
addl
shlb
push
outsl
push
test
mov
and
dec
mov
inc
sub
leave
popa
in
cli
xchg
and
jmp
scas
je
pop
sahf
mov
and
jmp
incl
xor
jb
div
stos
inc
and
xchg
sub
leave
pusha
jne
mov
sahf
xchg
out
enter
icebp
jmp
out
xchg
and
or
cs
clc
lcall
adc
pop
jne
stos
je
xchg
adc
ficoml
xor
inc
sti
scas
inc
sub
dec
int
loop
lahf
mull
jns
es
adc
js
int3
lods
inc
call
int3
arpl
sbb
jae
test
adc
fistl
xor
inc
cld
scas
inc
arpl
xchg
dec
int3
movl
fidivs
adc
push
ljmp
jno
js
mov
stos
test
adc
sti
pushf
mov
and
sarl
test
out
rol
pop
clc
icebp
testb
inc
adc
je
add
mov
push
out
adc
inc
cmp
imul
or
jl
pop
ret
inc
icebp
adc
or
mov
adc
and
or
and
cld
test
shll
push
xor
ss
mov
test
shll
stc
fildl
jb
sub
push
push
pop
insb
add
mov
and
mov
inc
xor
push
pop
mov
loop
bound
add
cs
push
mov
push
and
pop
mov
pop
icebp
stos
hlt
pop
hlt
and
inc
jnp
js
xchg
cs
cltd
cltd
xor
jae
dec
movsl
in
mov
push
shrl
aas
aad
jno
repnz
mov
insl
adc
push
shrb
icebp
aaa
das
push
mov
mov
inc
stos
mov
mov
lods
outsl
lds
cmc
popf
fdivl
data16
mov
and
nop
sbb
outsl
int
addr16
cmpsl
ret
int
js
sbb
clc
sbb
or
fwait
mov
dec
stos
sub
inc
cmc
popf
jae
icebp
lret
adcb
mov
loope
inc
into
jnp,pn
movsb
xchg
cmp
and
inc
fldl
inc
mov
aad
jno
fst
and
jp
mov
sbb
call
aas
jge
cmp
scas
sub
add
in
cmc
inc
cld
mov
pop
mov
sbb
pop
sbb
dec
jge
cli
lods
insb
popa
negl
sarb
and
xor
push
mov
rcr
divl
popl
repnz
adc
cwtl
adc
ljmp
in
aas
add
xor
jae
scas
push
insl
add
mov
nop
sub
icebp
test
es
dec
mov
enter
aam
add
lea
or
test
sub
jo
xor
add
mov
pop
in
sub
dec
in
dec
fcomip
mov
or
cmpl
push
mov
dec
jae
jae
mov
rolb
movsb
shr
pop
mov
outsb
aaa
pushl
sbb
loop
fnsave
dec
add
lcall
out
and
xchg
cmp
pop
jo
pop
lds
inc
push
subb
lods
jnp
movsb
es
push
leave
xor
mov
and
enter
jmp
dec
stc
sti
mov
cmp
inc
push
push
loopne
dec
sarb
jmp
mov
fwait
outsl
push
in
lods
xchg
scas
push
mov
stos
jno
inc
xchg
inc
mov
or
repnz
jno
pushf
push
jl
scas
push
dec
ficompl
xchg
jecxz
test
and
std
lahf
dec
push
movsl
dec
push
ret
dec
mov
in
push
dec
mov
stos
mov
lds
jnp
aas
push
sub
push
pop
in
cmp
in
sar
inc
lds
dec
cmp
mov
push
dec
lahf
arpl
lahf
mov
fldz
sub
ret
loop
adc
or
out
sbb
push
xor
ds
jbe
jecxz
push
cwtl
fwait
xor
in
or
mov
rcr
bound
into
loop
xchg
rcl
testb
mov
xor
outsl
mov
add
scas
pop
jle
mov
jb
xor
adc
into
xchg
pop
inc
push
int
mov
lods
je
in
mov
or
cmp
arpl
mov
adc
adc
push
adc
mov
rorb
fsubl
gs
cltd
sbb
fs
jo
jnp
xor
into
mov
mov
adc
div
ret
lea
ffreep
mov
push
and
cltd
out
data16
jnp
or
xor
pop
push
sub
jmp
cwtl
inc
push
or
cwtl
pop
test
push
iret
sbb
je
cmp
cmp
mov
lret
and
push
rolb
mov
lcall
mov
sub
sub
insb
sub
inc
test
cwtl
cmp
je
xor
inc
mov
out
mov
dec
mov
es
pop
fs
rcl
or
dec
xchg
imul
add
ja
in
mov
pop
cld
cmp
add
jp
mull
fs
lea
mov
add
jle
inc
fadds
push
or
add
push
shrl
mov
jecxz
xchg
cli
push
sub
bound
ret
jns
sbbl
ret
xchg
and
add
mov
mov
push
mov
xchg
out
mov
xchg
es
pop
test
ss
inc
xchg
fs
arpl
sarl
push
or
and
loop
lcall
sbb
mov
cmp
ljmp
push
pop
shrb
inc
adc
sbb
lahf
std
add
test
aas
popf
mov
sub
or
dec
add
push
push
ret
int3
sbb
sbb
aas
cltd
pop
inc
mulb
rclb
out
pop
add
repnz
xchg
jp
adcl
cmp
mov
push
jle
pop
mov
loope
cld
pop
imul
cmp
daa
cmp
clc
in
and
fcompl
fisubl
sbb
inc
mov
sub
lcall
xor
adc
cs
add
push
adc
adc
das
into
mov
inc
push
dec
mov
push
xlat
sarb
ffree
mov
fimuls
sub
inc
jl
inc
and
push
sahf
or
lcall
cmp
xor
mov
mov
std
pop
mov
mov
aaa
into
mov
std
push
sahf
outsl
mov
xor
or
adc
xchg
les
rcr
rclb
sub
and
xchg
inc
or
sub
inc
mov
and
mov
dec
cmp
pop
in
jl
das
sti
push
mov
push
js
cmp
loop
adc
int3
iret
pop
jns
dec
push
lods
cmp
hlt
call
and
out
mov
sub
hlt
ds
scas
xchg
and
mov
rcll
sub
pop
call
into
pop
push
adc
arpl
jo
mov
pushf
outsb
sub
lcall
cwtl
stc
mov
add
fcmovbe
ja
push
lea
xlat
and
out
or
push
stc
dec
cmp
cmp
sub
xor
das
ljmp
cmpb
testb
test
call
ret
mov
mov
push
cmp
leave
push
sub
addl
aam
movd
push
push
xor
pop
sub
mov
lods
pop
sahf
pop
and
jbe
and
pop
mov
adc
adc
xchg
js
mov
jne
pop
pop
fsubrs
adc
pop
dec
aad
popa
jae
pop
xchg
lret
int
xchg
aam
lret
bound
jnp
cmpsl
aaa
xlat
sub
sub
sbb
add
xchg
push
loope
cmpl
mov
loope
outsb
sub
sub
jnp
jmp
lods
out
out
jbe
mov
mov
mov
aas
movsb
sub
stc
stos
fidivs
int
out
mov
mov
dec
pop
fistps
gs
sub
out
aam
inc
daa
push
pop
clc
sub
ljmp
mov
testl
inc
pop
push
pop
xor
push
test
or
cmp
jo
pushf
add
ds
mov
xchg
roll
aad
jl
sub
loope
pop
data16
dec
scas
mov
cmpsl
cld
jns
fsubl
call
cltd
xchg
xor
pop
lcallw
mov
push
js
mov
dec
loop
mov
sti
jae
gs
jbe
dec
ds
xchg
jbe
cmp
ds
add
mov
test
xor
das
and
pop
xchg
adc
pushf
sub
dec
aam
idivb
call
mov
out
lods
add
int
outsb
sti
xchg
mov
ret
repz
or
adc
int
aaa
lahf
imul
push
mov
fstp
jb
lcall
nop
arpl
push
test
mov
mov
test
push
xor
cld
push
jle
or
sbb
xorl
icebp
addl
sbb
cmpsb
jg
call
rorl
inc
mov
adc
mov
call
inc
les
pop
cmp
mov
cld
and
pmullw
push
xor
push
pop
test
xchg
xlat
or
xor
sub
ret
mov
loopne
jae
insl
movsl
int
inc
hlt
mov
pop
xchg
dec
jb
cmp
ret
mov
loope
dec
movd
popf
bound
out
mov
inc
out
cmp
inc
or
pusha
cmp
icebp
xchg
pop
out
lea
pushf
filds
xchg
ljmp
inc
ljmp
xor
mov
dec
and
int3
push
addr16
pop
adc
aas
imul
ljmp
pushf
cli
movsl
aaa
lret
fsubs
sbb
xor
inc
loope
xchg
mov
lret
cmp
notl
sbb
sub
or
sub
sbb
xor
inc
loopne
pop
dec
dec
dec
push
je
fst
cmp
xor
lds
inc
pushl
fistl
add
movsb
lock
mov
movb
jae
lahf
ss
xchg
pop
icebp
lds
sahf
out
rcr
repnz
xchg
inc
mov
xchg
imul
xor
xchg
in
cmp
push
movsl
mov
jae
xlat
sub
or
dec
loope
add
inc
ss
ljmp
xchg
fsubl
movsl
cmp
std
or
cmpsb
dec
sub
push
rol
nop
mov
lds
rclb
dec
jecxz
jecxz
jne
out
push
and
cld
xchg
outsb
inc
cmc
mov
or
dec
push
aas
inc
jmp
dec
loop
mov
popf
xor
cmpl
stos
std
pop
sub
mov
shrl
xor
push
mov
std
and
fbstp
inc
xor
xor
push
loope
dec
xchg
push
ljmp
lods
inc
mov
dec
and
add
push
mov
lock
es
xchg
cmp
mov
jmp
pop
ss
out
addb
add
into
adc
mulb
imul
aaa
sbbl
scas
lret
mov
fdiv
mov
es
mov
or
xor
jae
jne
fistl
shlb
push
cltd
xor
jg,pn
pop
dec
ret
decb
sub
dec
push
sarb
repz
cmp
lret
mov
scas
pop
jno
mov
pusha
jns
xor
sbb
add
scas
cmova
cmp
sbb
sbb
shrl
mov
and
fs
pop
mov
push
or
mov
int3
sahf
add
fnstenv
filds
or
add
addr16
nop
xchg
push
mov
xchg
lea
lods
lea
outsl
pop
scas
xor
pop
add
inc
inc
popf
xor
jecxz
and
pop
testb
out
in
pushf
xor
cltd
xor
pop
ret
pop
mov
int
push
sbb
shrl
mov
dec
and
in
mov
sbb
xor
ret
pop
mov
repnz
cs
push
addr16
out
repnz
xchg
jp
loope
int
inc
adc
outsl
push
fisubl
addr16
xchg
jle
in
mov
pop
and
mov
pop
inc
sbb
sbb
mov
sub
pop
jne
fs
jl
push
outsb
inc
pop
test
in
test
outsb
add
dec
mov
gs
fdivl
shlb
pop
cltd
xor
add
pusha
push
mov
je
jl
repz
xlat
outsb
xchg
add
sbb
call
stos
xchg
cmc
mov
and
iret
aaa
sbb
loop
je
xor
shlb
fdiv
lea
xchg
data16
or
scas
inc
fwait
imul
lahf
mov
mov
push
adc
inc
bound
push
out
dec
loopne
jne
insb
addr16
dec
fisttps
and
hlt
mov
data16
sub
push
adc
mov
mov
inc
ds
iret
push
in
repnz
cltd
dec
test
add
xor
pop
imul
addr16
test
ret
and
rcl
sbb
mov
flds
ljmp
sbb
jg
mov
pop
adc
push
jmp
cmpsl
lods
in
adc
ss
subb
lret
gs
xchg
in
mov
stc
data16
ljmp
adc
orl
lret
cmp
fsubrs
sub
xchg
stos
ret
mov
xor
xchg
mov
ret
ficomps
inc
cltd
icebp
inc
fnclex
xor
mov
aas
xchg
pop
pop
add
fwait
mov
sub
mov
aaa
into
mov
adc
pusha
gs
push
and
outsl
push
or
sarl
cli
xchg
not
dec
filds
sbb
iret
mov
pop
negb
insb
add
pop
cmpsb
cmp
shrb
aaa
mov
or
rcrb
and
in
xor
xor
shrl
jns
lcall
iret
sub
xchg
mov
cmp
arpl
into
inc
maxps
push
fs
gs
cli
insl
add
js
jae
lret
bound
mov
lods
ds
out
mov
mov
or
gs
test
ficoml
push
lahf
ss
mov
aad
pop
push
dec
filds
ret
mov
sub
xor
xchg
scas
inc
add
inc
fcomi
inc
or
lret
pop
in
test
push
out
insb
dec
jecxz
dec
push
in
cmpl
lret
push
or
lret
pop
cmc
xchg
call
cmp
sub
fwait
xor
nop
in
icebp
pop
les
mov
sub
enter
dec
rep
lahf
ss
adc
aam
ds
clc
pop
cmpsb
sbb
sbb
pop
stos
mov
push
int3
fsubrs
insb
out
cwtl
fistps
mov
cmp
jg
add
js
fdivrs
arpl
stos
mov
in
sub
jl
test
mov
push
add
mov
pop
inc
and
shlb
pop
jno
dec
ja
cmp
pop
testb
lea
sbb
xchg
fwait
mov
inc
and
push
jmp
in
sub
cmpsb
add
pop
xchg
inc
faddp
jnp
sbb
jb
int3
cmpsl
mov
sar
cmp
lea
daa
mov
push
dec
jecxz
sbb
pop
inc
inc
shrl
repz
movsl
es
xlat
outsb
dec
xlat
mov
add
mov
test
jno
mov
jo
inc
push
lods
lea
call
xor
jmp
mov
dec
xchg
sub
pop
das
dec
insl
outsb
add
bound
jae
addl
test
pop
aam
lods
test
insl
sbb
leave
mov
push
mov
xchg
inc
fdivrs
fists
jg
repz
fucom
xlat
insl
sti
add
lods
inc
leave
cwtl
push
out
or
dec
pushf
ds
fisttps
cmp
lea
lock
sbb
imul
out
imul
jb
std
movsb
pop
repnz
mov
nop
imul
xchg
mov
mov
popa
inc
mov
xor
push
mov
dec
cli
shlb
push
in
pop
rorl
push
jge
push
outsl
mov
leave
pusha
add
sbb
je
or
dec
inc
add
cmp
xchg
sub
pop
adc
cli
insb
stos
inc
pop
loope
mov
dec
pop
nop
xchg
fnstenv
mov
dec
xchg
out
out
das
mov
popf
xor
dec
and
loop
push
call
shlb
xor
gs
scas
mov
push
xchg
sub
cmp
outsl
push
sbb
mov
addr16
lds
into
jmp
rsqrtps
pop
sahf
adc
ror
popa
xchg
aam
rcrl
sbb
inc
aad
jp
cmp
mov
aam
leave
mov
mov
push
test
loope
adcl
xor
xchg
xor
lret
jno
sub
jmp
mov
ss
scas
push
mov
nop
ficomps
loop
cmp
or
cwtl
ret
fidivrs
push
popf
movsb
sub
xchg
lds
mov
pop
mov
pop
push
out
mov
ret
and
xchg
add
sahf
mov
cmp
cmpsb
test
cmp
xchg
movsl
push
call
repz
and
inc
lea
xor
je
push
outsb
popa
movsb
cmp
dec
loope
jl
je
inc
or
inc
ss
out
movsb
push
leave
addr16
icebp
jne
stc
or
sub
mov
mov
jb
push
adc
rolb
cmp
lret
mov
std
mov
add
push
xlat
outsb
push
pop
cmp
xchg
testl
imul
insl
push
divl
andl
iret
inc
ret
mov
jb
inc
testb
ret
sti
xchg
mov
mov
push
adc
xchg
sub
mov
add
add
out
xchg
mov
add
push
inc
cld
xchg
movsl
ja
xchg
inc
movb
jg
cwtl
cld
stc
lret
arpl
xor
in
sub
inc
fcomps
mov
addr16
ja
pop
lock
fmuls
or
stc
adc
aad
xor
or
inc
roll
xchg
sub
xchg
es
rorl
cmp
lcall
xchg
sti
push
popf
mov
cmp
cli
inc
mov
jno
mov
push
scas
es
mov
lfs
pop
adc
push
int
stos
dec
mov
std
sub
rcll
pusha
push
sub
imul
cwtl
in
mov
outsb
hlt
out
and
mov
mov
xor
add
mov
mov
lds
jecxz
dec
incl
xor
mov
adc
mov
cmp
xchg
xor
lock
lock
pushf
xchg
movsb
pop
in
into
cs
mov
xor
shll
dec
mov
cmpsl
insl
loopne
mov
jecxz
cmc
mov
add
sub
push
popa
out
cmp
push
xchg
daa
shrb
in
nop
mov
das
scas
repz
lret
out
cmp
fidivrs
lret
mov
adc
push
mov
xchg
push
pop
sahf
mov
jl
mulb
dec
loop
pop
xchg
push
mov
inc
flds
or
inc
inc
insb
mov
dec
cmp
xor
jnp
lods
imul
out
sub
jmp
mov
cld
jnp
leave
or
ret
fstpl
aaa
in
or
sarb
cli
imul
cmp
mov
fisubrs
incb
movsb
sbb
inc
sbb
jge
ljmp
mov
lret
push
lods
imul
lds
scas
inc
xchg
ds
insl
mov
xchg
cs
xchg
sub
xor
cmpsb
cmp
push
ret
jecxz
fdivl
xchg
popf
xor
push
in
cmp
fnstenv
pop
cmp
imul
mov
aad
push
jmp
sub
pushf
imul
adc
ja
adc
pop
add
cmp
addr16
popf
inc
mov
jno
push
call
sbb
arpl
cmc
cmp
adc
ror
shl
pop
out
ret
add
jbe
mov
faddl
or
call
leave
pusha
aam
or
mov
mov
pop
cld
sbb
cmpsb
mov
mov
push
outsb
mov
popa
cwtl
hlt
mov
sub
rcrl
test
jp
cmp
sbb
mov
pop
cmp
mov
jno
and
cmc
js
xchg
inc
mov
fucomi
or
cli
xchg
jmp
outsb
mov
cmp
jno
mov
inc
mov
cwtl
pop
daa
mov
cld
scas
and
xchg
lock
sub
ss
mov
adc
pop
or
pop
repz
mov
shll
jae
push
fs
enter
push
jmp
sti
mov
push
popf
pop
cmpsl
aas
fdivrs
outsb
xor
imul
ja
xchg
gs
add
scas
inc
jmp
mov
push
xor
cmp
sahf
xor
repz
mov
cmp
ljmp
and
add
sahf
xchg
push
mov
xor
or
ljmp
inc
inc
fnstenv
mov
iret
popw
xchg
sub
sbbb
movsl
dec
out
sbb
pop
popl
xlat
outsb
je
jg
push
movsb
sbb
ret
jecxz
repnz
adc
cmp
sub
int
add
fwait
out
pop
icebp
jmp
arpl
fsub
inc
or
add
and
ds
add
inc
jge
out
push
xchg
scas
inc
add
pop
andl
xchg
nop
rcrl
fbstp
addr16
pop
inc
push
in
xor
imull
push
jge
fdivl
sti
out
test
movsl
cmp
into
xchg
sub
jg
mov
cmpb
pop
jge
dec
shlb
mov
pushf
movsl
dec
loopne
cld
sub
out
jg
fnsave
ja
or
adc
dec
and
and
mov
or
mov
call
jb
ficomps
adc
cmpsl
ficomps
cmc
mov
and
cltd
jbe
adcb
xchg
jl
pop
mov
ljmp
popf
or
dec
dec
js
pop
outsb
lcall
pop
mov
aaa
fimull
loop
mov
les
fadds
xchg
loop
mov
adc
mov
int3
arpl
xchg
lods
cmp
cli
xchg
ljmp
outsl
push
xchg
xchg
sub
stos
mov
or
outsl
push
shrl
popf
adc
jle
nop
es
pop
xorb
push
or
fnsave
jecxz
and
nop
daa
pop
sub
pop
jns
jno
jnp
push
inc
pop
movsb
cmp
cld
xchg
cmp
sbb
xor
cmc
mov
or
sbbl
mov
stc
nop
and
inc
inc
fcoml
and
jne
cli
dec
icebp
int
les
cmpsb
dec
in
or
mov
sub
jmp
or
mov
jle
sbb
ror
cmp
ljmp
mov
mov
push
popf
mov
fbld
out
fs
cmp
pop
imulb
int3
and
mov
fimuls
sub
cmc
sti
push
out
mov
lds
adc
xor
scas
xor
jmp
rcll
repnz
add
jmp
and
xchg
pop
mov
test
pop
and
push
mov
aad
jb
lds
daa
sub
mov
lret
leave
mov
sti
in
insb
add
sbb
mov
xchg
mov
les
out
mov
outsl
or
mov
nop
test
loope
add
test
mov
push
es
and
cli
test
adc
ss
sub
cmpsl
or
mov
pop
repz
cltd
xor
rorb
lahf
adc
int
lods
xor
jmp
shrl
rcrl
inc
fiaddl
test
cmp
adc
icebp
out
push
xlat
mov
andl
jge
mov
mov
lahf
mov
cli
sub
pushf
addb
jmp
or
and
jo
aas
shrb
adc
jb
into
gs
fidivl
insl
xchg
sub
int3
lret
out
out
and
nop
daa
sbb
cwtl
mov
pusha
jg
inc
shll
fwait
popf
sub
test
lods
add
enter
popf
add
call
push
rcrl
xchg
sbbb
inc
jge
jne
mov
xor
aaa
mov
cmp
cltd
xor
pusha
sbbb
ljmp
xchg
xor
sbb
fdivl
jecxz
fcom
jne
cld
push
cli
or
push
jle
out
insl
pop
jns
ja
scas
inc
ljmp
es
testb
pop
sub
std
xchg
mov
int
adc
imul
fnstenv
movl
pop
inc
and
jbe
push
jmp
in
data16
fdivp
push
popf
pushl
in
ret
xlat
mov
mov
fistpll
pop
cmc
sar
fwait
int3
loop
scas
adc
test
xor
popf
xor
xchg
mov
flds
lods
xor
dec
test
mov
push
popa
dec
in
mov
cld
jecxz
jge
movsl
add
pop
ss
mov
clc
push
xchg
cs
adcl
enter
scas
dec
cmp
xchg
dec
cmp
inc
push
jno
jmp
jle
and
jo
fstl
lock
mov
lahf
jb
iret
mov
add
cli
xchg
xchg
insl
jmp
test
fnstsw
adc
test
mov
jb
bound
and
stos
dec
int3
arpl
in
mov
push
jecxz
jbe
jb
pop
movsb
or
inc
jns
xlat
sub
lods
mov
adc
jne
inc
cmpsl
cli
mov
xor
push
mov
pushf
call
leave
jb
mov
fiadds
clc
aaa
mov
pop
adc
xchg
insb
pop
mov
scas
inc
push
dec
andb
push
pop
movsb
cmp
jecxz
xchg
adc
popa
inc
pushf
pop
test
pushf
fnstcw
int3
pop
mov
adc
stos
or
test
xor
shrb
rorl
std
lock
mov
sti
addr16
mov
push
lret
mov
jmp
fstpl
dec
roll
push
cmp
xchg
xchg
sbb
lods
aad
aad
jmp
pushl
repz
scas
and
push
mov
inc
out
mov
pop
lret
loopne
pop
lret
sbb
shrl
inc
jb
push
out
adc
aad
jge
mov
and
test
jb
in
sub
pop
cmp
push
in
pusha
push
adc
or
push
push
insl
mov
xor
pop
lods
add
and
or
jp
xchg
sub
pop
inc
int3
gs
and
paddusw
das
inc
ds
into
outsl
push
adc
mov
pop
inc
or
insl
jno
or
pop
imul
xorb
lret
and
jbe
mov
std
push
or
jno
mov
cmp
daa
dec
pop
iret
pop
imul
sub
out
push
adc
in
jo
loope
inc
inc
out
add
sub
push
or
mov
mov
ret
movl
xor
sbb
int
or
aaa
into
dec
sub
in
jg
sahf
xor
mov
pushf
xor
xlat
push
mov
add
movsl
pop
sbb
mov
add
mov
mov
sbb
insl
mov
das
mov
pusha
mov
sub
ljmp
push
lods
out
jns
ret
mov
daa
mov
fcmove
pop
ljmp
adc
push
mov
add
je
pop
push
or
fmuls
pop
cmc
mov
lods
jne
ficomps
rorl
dec
add
or
push
iret
mov
hlt
into
mov
jne
and
popf
xor
fdivl
push
aas
xchg
fnstenv
cmpsl
sbb
and
inc
dec
loope
and
xor
push
loope
fwait
or
dec
mov
in
pop
mov
out
xchg
sbb
dec
xchg
sub
addb
inc
jbe
pop
mov
jae
pop
dec
rorb
pop
scas
es
xchg
loop
pop
mov
stc
nop
daa
sub
cmp
std
cmp
push
adc
mov
cli
push
or
dec
pop
lcall
pop
lods
pop
or
push
incb
sub
mov
dec
in
sub
imul
cmpsl
lcall
outsl
mov
xchg
lret
mov
xor
out
xchg
cmp
pop
stos
aaa
out
test
rcrl
mov
inc
or
pushf
sbb
pop
cmc
push
dec
in
xchg
and
popa
cmp
fildll
int
repz
stos
mov
decb
aad
aad
mov
test
lock
fdivr
stos
popf
loope
imul
fcomps
adc
cwtl
das
cmp
test
add
repz
jmp
daa
in
scas
adc
ja
inc
mov
stos
sti
pop
mov
mov
test
sub
pusha
dec
or
jo
jl
data16
cwtl
iret
lock
mov
in
mov
inc
loope
sarb
add
xchg
sub
mov
sti
arpl
lods
xor
pop
clc
sahf
inc
int3
es
and
inc
mov
pushf
loope
jbe
inc
mov
data16
push
popf
in
sbb
jne
mov
incl
and
cltd
bound
add
sub
lret
and
shrb
sarl
loope
mov
inc
fnstsw
or
sub
imul
jge
aad
or
dec
sub
or
xor
and
mov
or
outsb
cmp
in
mov
je
pop
fst
outsb
push
ret
mov
lret
mov
cmp
repnz
popf
out
fldl
adc
in
lcall
aas
cmp
pop
lds
add
dec
xor
sahf
jo
inc
movsl
sbbl
popa
push
lret
lds
cmpb
lcall
adc
mov
call
dec
jp
mov
mov
pop
jae
ret
stos
or
and
aaa
push
jp
mov
add
xor
or
jge
lahf
ss
in
xchg
mov
cmp
jnp
scas
lds
movl
pop
lahf
mov
cmp
nop
jne
and
ljmp
pop
dec
mov
inc
outsb
sti
dec
outsb
pusha
adc
hlt
inc
sbb
mov
fimuls
or
pop
fs
and
sbb
inc
cmc
mov
shlb
xchg
dec
fs
jg
cmp
mov
fisttpl
in
xor
jb
test
add
jbe
cmp
mov
mov
inc
andb
arpl
lods
pop
xchg
stos
or
movsb
pop
pop
int3
test
push
jp
lcall
mov
lods
jae
loope
loop
pop
xchg
xchg
int3
insl
ljmp
lret
xchg
out
mov
and
adc
or
out
cmpsb
adc
outsl
adcl
push
inc
arpl
es
mov
jae
pop
push
inc
xlat
jns
in
stos
clc
int3
mov
cmpsb
addr16
out
inc
in
sbb
je
xor
pop
xchg
lea
dec
jbe
fsubl
jne
fnsave
and
jecxz
add
scas
in
ljmp
mov
adc
inc
pusha
daa
add
adc
mov
sub
adc
fmulp
ljmp
mov
cmp
push
les
mov
xchg
mov
or
je
lea
dec
out
aaa
pop
std
mov
icebp
mov
and
push
aas
rol
or
dec
push
xor
mov
sbb
or
push
mull
mov
into
gs
in
xchg
mov
mov
and
jnp
mov
add
jb
mov
mov
insb
enter
stc
popa
clc
sub
jge
inc
push
loope
mov
je
mov
or
xor
cmpsb
and
or
sub
stos
xchg
sub
add
daa
sub
jbe
imul
cmp
jg
sbbl
xchg
inc
mov
ja
mov
xchg
mov
jns
loopne
xchg
outsb
in
mov
loopne
daa
loope
je
cmp
cwtl
push
pop
add
fmuls
lret
es
pusha
lock
cmp
aas
sar
repz
into
mov
imul
out
lods
pop
lret
push
and
andl
insl
lods
push
fstpl
fsubs
addl
jae
mov
sbb
arpl
or
mov
and
mov
lahf
fimuls
mov
sbb
mov
inc
xlat
mov
mov
ljmp
fdivr
mov
in
jp
jmp
jg
enter
ds
mov
in
out
sbb
dec
es
loopne
ja
dec
sahf
jle
sbb
les
aam
adc
das
xor
xor
add
dec
outsb
jns
lods
mov
add
aam
pusha
add
imul
imul
dec
dec
arpl
jl
dec
dec
mov
insb
aaa
fmull
push
adc
pop
xor
lea
fnstcw
mov
pop
inc
jnp
movsb
mov
xchg
xor
mov
call
jle
rolb
int
std
adc
fdivrp
mov
jmp
cmp
push
jmp
imul
shlb
ror
jle
sbb
pushf
xor
lcall
out
fsts
repnz
leave
adc
xchg
lock
pause
test
cmpsb
mov
cltd
lds
iret
push
xchg
xchg
clc
imull
shll
loope
into
mov
out
inc
out
and
or
fsubs
xlat
loopne
push
daa
das
pop
jno
les
es
scas
pop
sbb
sahf
lret
sti
loope
cli
inc
sub
sub
inc
bnd
push
ljmp
dec
loope
add
sbb
insb
add
mov
xor
stos
aas
xchg
shlb
popf
push
pop
into
push
jmp
les
lock
ret
or
pop
mov
sub
pop
sub
shlb
lea
dec
adc
jg
imul
scas
xor
inc
fcmovbe
sub
notb
adc
xor
ss
mov
push
loopne
and
addr16
jg
add
jp
dec
movsl
jae
xchg
sub
dec
test
imul
mov
mov
push
xchg
push
movsb
push
inc
mov
roll
insl
dec
in
shrb
dec
call
and
push
jge
jmp
daa
scas
cltd
cltd
sarl
pop
std
dec
dec
xor
insb
outsl
mov
cmp
xchg
push
mov
lods
push
lds
jle
cltd
ljmp
jmp
aad
movsl
pop
xchg
aam
jae
shlb
xchg
push
sbb
mov
popa
cmp
sub
mov
movsb
rcll
add
mov
fistl
or
gs
lods
pop
out
fidivrs
sub
jno
jl
inc
xchg
aam
and
mov
rolb
imull
fs
jne
adc
mov
pop
push
dec
out
pop
cmp
fisubs
pop
xchg
push
aas
cmpsb
xchg
popf
jmp
adc
or
xchg
mov
add
dec
roll
or
pop
scas
inc
lea
mov
int3
pop
daa
movsl
xchg
dec
inc
inc
fdivl
arpl
clc
nop
daa
sub
nop
or
dec
xchg
sbb
enter
fists
leave
xchg
iret
dec
hlt
inc
inc
mov
sti
les
cmc
add
xor
enter
xchg
mov
lret
test
pop
fcmovne
aad
idivb
call
sbb
pop
mov
pop
scas
xorb
dec
cmp
mov
push
out
ret
cmp
in
push
jp
dec
inc
inc
fildll
arpl
imul
mov
outsl
push
cmp
fwait
mov
cwtl
mov
gs
xchg
pop
mov
push
mov
popf
lret
shr
cli
stc
jmp
shr
cld
jl
fstp
add
adc
pop
adc
adc
mov
mov
adc
insb
not
mov
testl
movsb
fsubl
imul
xlat
push
xchg
mov
inc
inc
push
das
out
int
cs
and
push
sub
push
cmpsl
mov
std
add
jecxz
fidivs
movsl
dec
cmp
push
sti
int
sub
add
or
jno
and
add
rcll
scas
pop
adc
cmp
jae
shrl
dec
fdivr
jl
xor
mov
jmp
and
mov
inc
out
dec
pushf
xor
leave
mov
stc
daa
and
leave
jno
sahf
push
jecxz
outsl
push
pop
or
xchg
int3
gs
push
mov
inc
into
jo
sbb
shll
ds
push
clc
mov
es
sbb
dec
adc
orb
inc
insb
in
dec
xor
out
mov
fadds
mov
sub
ds
cmp
jnp
and
inc
aas
pop
repz
xchg
arpl
movsl
cmp
test
flds
outsb
test
cmpsb
in
sbb
mov
sub
mov
sub
push
cmp
pop
call
mov
xchg
ret
vprotw
sub
jns
scas
loope
gs
push
call
gs
mov
pop
pop
in
xor
mov
pusha
leave
mov
mov
fcom
cmp
aam
mov
fisubrl
mul
mov
or
in
popf
xchg
lret
sub
lcall
mov
dec
cwtl
fpatan
mov
pop
pop
xchg
adc
push
xor
add
leave
jb
push
pop
jbe
jmp
pop
test
mov
push
mov
mov
sub
fcmovu
repz
cmp
cmp
pop
ds
insb
sbb
mov
jl
mov
xor
adc
pop
ss
int
push
xor
bound
cmc
mov
ds
xorb
push
inc
xor
mov
or
out
imul
loopne
sub
push
mov
fwait
mov
sbb
mov
rorb
shrb
div
das
test
cwtl
repnz
push
repz
stos
pushf
xor
int
inc
mov
mov
outsb
lret
sub
push
lahf
dec
shlb
mov
add
adc
rolb
mov
in
shrb
sub
lock
cld
and
pop
hlt
repnz
sarl
mov
ret
sbb
or
add
xchg
jmp
das
cmp
jle
jp
xchg
jbe
lods
push
mov
or
and
push
mov
mov
jg
loop
or
cmp
test
pop
sub
les
inc
mov
xor
xor
sub
loop
jge
hlt
cmp
inc
call
push
or
test
mov
pop
test
add
cwtl
push
or
mov
inc
sub
sti
addr16
or
mov
loopne
push
addr16
xchg
clc
cmp
inc
ret
push
xchg
push
das
adc
nop
int
and
cmp
fdivl
cmp
mov
stos
mov
bound
jno
or
mov
and
mov
adc
sub
repnz
cltd
fstpt
sub
jmp
xchg
push
push
gs
test
loop
rolb
adc
stc
nop
and
testl
xor
push
lret
jne
enter
pop
jmp
mov
insb
cmp
mov
or
shll
gs
cli
orl
sub
mov
je
shl
lret
add
xor
mov
sub
fcompp
sub
push
cmp
xor
dec
lahf
push
fmuls
and
pop
out
insl
sti
add
popa
pop
cmp
cmpsl
iret
push
or
mov
add
add
hlt
scas
and
mov
pop
notl
cmp
xlat
and
xchg
out
pushl
pop
fidivrl
push
and
arpl
dec
aaa
into
lds
rcr
adc
xchg
es
ja
and
push
daa
outsb
idiv
push
pop
or
imul
xchg
inc
repnz
test
cli
fildll
insb
mov
mov
sbb
int
inc
out
mov
dec
push
test
subl
aam
test
out
arpl
popa
mov
jae
fists
and
out
cmp
je
call
xor
lock
inc
xor
imul
push
and
mov
sbb
test
mov
xlat
push
xchg
jo
sbb
jge
mov
add
pop
imul
jg
pop
mov
sbb
loope
cmp
jne
sub
push
cmp
and
pop
pop
xchg
mov
xor
scas
push
pop
inc
fwait
mov
lods
jmp
xchg
sub
jg
imul
inc
pusha
xor
mov
jg
lods
mov
stos
push
mov
loop
insb
mov
fsubs
adc
dec
daa
dec
inc
sbb
mov
pushf
pop
jle
pop
les
fsubs
jb
xor
pop
dec
jns
xchg
roll
mov
adc
jp
jns
adc
cmp
xor
xchg
sbb
dec
es
out
es
outsl
popf
out
fisubs
fndisi(8087
mov
sub
xor
sahf
lret
test
cmp
add
enter
pop
push
push
jecxz
jge
xchg
scas
movsl
jno
inc
sub
lahf
cmp
pop
popa
cmp
mov
pop
inc
mov
pop
adc
es
dec
lret
fists
add
idivl
call
or
bound
push
scas
xor
daa
mov
xchg
jecxz
push
out
sub
cmp
push
incl
xchg
mov
test
adc
fwait
adc
xor
inc
adc
mov
pop
pop
sub
or
fiadds
adc
rcl
in
push
pop
vshufpd
or
scas
rolb
fstps
add
addr16
adc
pop
ret
mov
jne
mov
pusha
mov
sbb
xchg
aad
push
mov
mov
jp
jg
sub
push
jp
lds
jp
mov
ficompl
movsl
shrl
clc
aaa
xchg
xor
push
inc
repnz
mov
and
push
and
sub
cmpsl
aas
xor
push
mov
stos
lods
inc
faddl
lods
js
je
insb
xchg
xchg
imul
arpl
das
mov
sbb
mov
jo
push
cltd
outsl
gs
jnp
sub
mov
mov
cmpsb
mov
push
vmovlps
in
jmp
lahf
sub
dec
sbb
cmc
xor
ficompl
lcall
jb
mov
jbe
test
push
sti
jmp
test
lods
imull
arpl
out
sar
xorl
test
aam
popf
insb
xor
jbe
fmul
shll
mov
call
mov
jbe
out
cmp
or
sbb
mov
fnstsw
inc
lcall
outsb
lods
into
into
movsb
fucom
jnp
mov
mov
lahf
ss
movsb
inc
cmp
daa
mov
push
fcompl
mov
add
fdivl
out
or
add
xchg
shrl
mov
jmp
jns
mov
movb
xchg
int
mov
std
scas
pop
leave
or
lea
test
mov
jne
xor
scas
push
subps
push
shll
xchg
pop
jp
nop
mov
mov
mov
ja
or
sarb
add
xchg
ss
pop
lock
mov
lods
ja
fisubrs
xchg
sub
cld
pop
lock
dec
ja
andb
sub
stc
out
xchg
cmc
mov
jecxz
dec
loopne
add
imul
xchg
sub
cmp
ja
add
test
aaa
mov
mov
xchg
ret
je
int
and
lahf
xor
pushf
fwait
jb
cmpsb
sbb
xorl
loope
shrl
mov
idivb
push
outsb
adc
test
xorb
pop
fistpll
into
scas
xchg
bound
movsl
inc
mov
mov
mov
in
js
lods
pop
jo
mov
nop
inc
sub
push
cltd
cld
leave
stc
ret
inc
fidivrs
popf
fsubl
pop
dec
cli
lea
or
mov
dec
fstpt
sbb
and
inc
fnsave
pop
mov
cwtl
out
pop
cld
and
dec
lcall
addr16
cmp
or
shl
jns
add
xchg
insb
xchg
outsb
add
cwtl
xlat
hlt
push
out
lods
jmp
sbb
dec
push
push
imul
pop
xchg
pop
mov
ret
loope
popf
or
xor
iret
gs
sbb
sub
shrl
and
inc
rcrl
iret
xchg
mov
jecxz
lcall
mov
cmp
inc
jg
mov
push
mov
inc
push
xor
arpl
sub
scas
dec
push
push
ret
pop
sahf
xrelease
or
and
insb
lahf
pop
cmp
jae
cmc
and
mov
out
xor
sub
cmpl
stc
jne
and
mov
xchg
lods
push
mov
push
mov
jecxz
out
sbb
mov
jp
mov
dec
sarl
lods
gs
mov
fdivp
push
or
adc
dec
push
sbbl
cltd
xor
and
mov
repz
dec
test
pop
adc
sbb
and
scas
inc
push
sarb
pusha
push
in
aas
add
ret
jl
aam
and
or
xchg
mov
dec
shll
int
daa
outsb
lcall
call
sbb
test
pop
mov
push
sbb
jno
adc
push
adc
xchg
mov
pusha
fidivrs
mov
fxch
fisttps
movsl
xchg
and
cwtl
jge
pop
sub
xchg
fadd
xchg
mov
cmc
sbb
fwait
mov
xorl
or
xorl
and
push
out
push
xor
xor
xchg
xchg
hlt
lcall
jo
std
movsl
inc
adc
xchg
adc
and
out
ret
mov
adc
xor
les
aaa
push
jo
ret
sti
addr16
sbb
sbb
cli
ljmp
mov
daa
inc
repnz
xchg
sub
lods
dec
lods
and
mov
cmovns
lea
lods
xchg
jnp
adc
loope
dec
add
sub
fdivl
ss
std
dec
sub
or
repz
cmpsl
test
adc
push
push
mov
lcall
sysexit
adc
leave
pusha
leave
subb
xchg
mov
aam
std
lock
lds
sti
cmp
inc
cmp
cmp
loop
sbb
jp
cmp
jae
test
aam
pop
cmpsb
mov
rcrb
aam
pop
xchg
mov
sub
pop
fwait
add
sbb
push
xchg
add
cltd
divb
in
dec
rclb
cmp
call
call
xchg
sbb
push
ret
stc
jecxz
mov
dec
or
push
xchg
mov
icebp
cmc
mov
test
and
cli
xchg
in
xchg
inc
mul
mulb
push
je
xchg
push
mov
repnz
mov
fbstp
and
lds
lea
fsubl
push
or
jnp
dec
inc
and
sahf
cmc
jns
rcrl
or
rorl
push
out
xchg
mov
fs
lcall
sub
cmp
movsl
in
xlat
push
stos
sub
outsl
ss
mov
cmpsl
movsl
sub
div
insb
mov
xor
es
jbe
jmp
pop
jno
mov
cmp
add
bound
adcl
pop
push
adc
push
mov
cmp
sbb
xlat
jne
cmp
jge
push
xor
cmp
adc
and
pop
pop
xchg
cmp
pop
mov
add
mov
stos
sub
int
ret
enter
cwtl
das
pop
push
je
fbstp
pop
ja
inc
cltd
std
xchg
int
lods
and
xchg
dec
fcompl
mov
dec
std
push
jmp
and
xchg
arpl
repnz
lea
xor
movsl
shll
lock
in
mov
shrl
imul
outsl
std
js
add
out
js
je
movsl
decb
xlat
adc
jge
lret
icebp
xlat
jg
pop
pop
inc
or
pop
mov
test
int
ds
pop
out
mov
enter
and
stos
cwtl
pop
add
in
clc
bound
mov
lret
mov
lahf
add
mov
fcoml
out
test
loope
lods
push
push
mov
addb
sub
or
sub
pop
jge
popl
mulb
fistpl
jb
jb
or
fmul
test
aam
and
outsb
and
loope
mov
loopne
out
call
loope
push
xchg
rcll
mov
ret
shrl
sbb
sbb
mov
jmp
mov
ret
repz
sbbl
cmp
jl
hlt
mov
daa
inc
xor
scas
mov
push
rol
fstpl
xor
test
into
sub
add
inc
fucomip
out
xor
pop
test
inc
inc
sub
fsubrp
insl
sbb
add
jno
pop
pop
xor
and
push
mov
push
inc
mov
jp
jne
scas
pop
lods
nop
or
shlb
jno
push
cmpsb
mov
stos
and
inc
ficoml
leave
sub
popa
sub
in
test
add
pop
ret
xchg
pop
repz
popa
and
cs
mov
jl
push
scas
and
bound
dec
xlat
and
das
push
cmc
push
adc
push
cmp
rcrl
imul
adc
jae
push
mov
push
jae
mov
xor
sbb
push
fdivl
push
mov
pop
std
ret
jne
fdiv
dec
xchg
mov
sarb
xchg
loop
pop
jne
pop
pop
mov
sub
flds
fwait
out
jmp
sub
cld
lret
mov
bswap
xor
and
and
mov
add
push
out
fstps
pop
jbe
xchg
cmp
push
xchg
imull
lods
les
insb
enter
das
cli
cmpsb
std
scas
pop
dec
push
mov
shrl
mov
xchg
mov
mov
inc
fsubrl
or
and
aaa
push
cmp
cmp
add
inc
bound
jge
sub
fimull
or
in
jns
inc
in
adc
bound
test
mov
mov
imul
xchg
mov
lods
rcrb
add
jns
cmpsl
ds
popf
push
in
aad
mov
xchg
fnstcw
sub
xor
sbb
stc
in
and
in
cmpsb
insb
add
pop
bound
fsubr
cmpl
into
gs
int3
mov
xchg
in
add
push
lods
cmp
test
cmp
pop
sbb
push
fsubrs
test
insl
lahf
lret
sbbl
pop
test
out
cmpsl
inc
lods
mov
sub
in
ljmp
mov
pop
ret
and
loopne
adc
xor
test
push
add
out
in
call
push
cmp
dec
lret
xchg
mov
jo
push
outsl
push
add
ret
xor
xor
repz
cmp
mov
sub
insb
popa
ret
cmpsl
ret
arpl
clc
iret
mov
pop
inc
xchg
sub
cld
adc
jns
mov
add
jns
daa
mov
popf
movsl
jne
xor
and
rcrb
test
adc
sub
fmuls
xchg
push
fwait
or
std
aam
mov
pop
xchg
scas
inc
adc
push
push
cmc
jl
mov
int3
xor
ljmp
cmp
and
add
jle
call
mov
push
hlt
out
icebp
insb
fcompl
clc
pop
ja
fwait
xor
dec
aaa
and
mov
cli
arpl
lods
inc
dec
out
inc
cmc
sub
inc
into
cmpb
and
imul
int
sbb
or
mov
shrl
fdivr
xchg
jb
jb
fs
xchg
sub
shl
jp
cld
mov
xor
inc
mov
push
sub
xor
notb
cmpsl
jno,pt
jl
sbb
mov
shlb
mov
sbb
sahf
mov
les
in
xchg
gs
cmp
addl
sub
pop
rcrb
dec
push
jns
clc
sub
shr
aad
inc
ja
sub
in
ret
flds
pop
cmc
mov
pushf
test
sbb
sub
sbb
cmp
and
lea
sti
inc
or
push
push
outsb
int
ja
push
in
xor
push
xchg
or
mov
shrl
push
lods
movsl
mov
adc
int
pop
loope
test
pop
jbe
adc
dec
leave
or
lock
sub
test
inc
dec
in
jg
jp
fimuls
mov
lcall
xor
rcl
push
daa
out
lds
push
test
lret
cld
push
push
in
cmp
sti
scas
or
enter
imul
cltd
xor
sbb
add
or
cli
or
outsl
enter
sbb
push
dec
out
jge
test
push
movl
fcomps
popa
fstps
int
cmp
lods
pop
movsb
mov
sahf
mulb
jae
and
push
sub
ret
pop
cli
sbb
sub
mov
and
pop
addb
subb
pop
adc
sbb
popa
cmp
xorb
and
cmp
js
xor
or
mov
xchg
stos
inc
add
mov
jno
mov
dec
arpl
aaa
mov
cmpsb
cmp
andb
mov
or
mov
data16
cwtl
xor
fstps
push
pop
icebp
daa
mov
js
clc
mov
ss
mov
sbb
fst
adc
mov
in
jae
fisubs
xchg
popa
mov
add
fsubrs
jae
fisubl
cmp
arpl
adcl
gs
pop
jl
xlat
sub
jb
push
sub
xchg
xor
xor
fsin
xor
mov
popf
andl
jb
dec
jb
dec
push
insb
xchg
sub
loopne
ja
jmp
ja
mov
dec
out
adc
aam
aad
out
out
cld
mov
pushf
std
xor
das
mov
out
xchg
fs
sahf
or
and
pop
in
div
pop
xor
fadds
fistl
dec
fnstenv
sub
sub
mov
mov
inc
inc
adc
xor
jecxz
pusha
lods
sbbb
or
cs
pop
adc
jne
inc
shl
inc
pop
lods
ss
xchg
mov
nopl
cmp
mov
cmp
push
mov
cli
and
lahf
insb
iret
dec
xchg
lret
imul
lahf
pop
scas
xlat
inc
into
push
push
loop
leave
movsb
dec
mov
lahf
xor
jge
fisttpll
cs
xor
popa
or
pop
cmp
mov
inc
sbb
popw
je,pt
push
aas
add
lds
out
int3
rorl
adc
cmc
aas
push
cmp
push
call
das
push
or
frstor
cmp
lods
mov
cmp
xor
sbb
and
fs
cli
enter
adc
mov
stc
incl
xorl
cmp
popf
ljmp
add
mov
lock
mov
xchg
sbb
xor
cmp
mov
int3
xor
dec
cmp
call
rcll
in
xchg
cmp
or
into
jno
mov
pop
pop
push
inc
push
xchg
mov
outsb
jnp
stos
incl
xor
pop
sub
push
decl
hlt
pusha
aad
and
or
jo
fsubrs
dec
mov
lock
movb
mov
popa
das
pop
cmpsl
cmpl
adc
enter
fsubl
and
loopne
jne
outsl
dec
xlat
inc
mov
in
mov
dec
and
mov
xchg
mov
jmp
pop
inc
xchg
push
jae
lahf
jmp
icebp
pop
dec
dec
sub
js
ljmp
inc
push
cmpsl
add
sbb
ja
insb
idivl
shld
sub
sahf
scas
iret
popf
int
or
jb
popa
cmpl
xor
insb
mov
popf
and
movsb
scas
and
clc
jg
movsb
add
dec
addr16
mov
jle
xor
fdivs
inc
jno
ljmp
and
inc
lds
cmp
add
fdivl
movb
cmp
aam
inc
lahf
inc
mov
or
out
dec
mov
xor
in
cmpsl
adc
arpl
jg
push
add
ret
aaa
test
jecxz
scas
and
jae
cmpsb
cld
mov
or
and
call
sti
xchg
out
pop
add
in
call
xchg
sub
ret
iret
cmpsb
push
xchg
dec
push
dec
xor
in
jge
inc
mov
mov
imul
inc
adc
inc
aad
xor
xchg
jae
or
rcrl
jp
xor
pop
lds
out
pushf
xchg
dec
mul
add
fidivs
mov
xchg
add
data16
sbb
mov
pop
test
adcb
pop
sub
popf
ror
xchg
cld
shrl
jb
cwtl
ja
sbb
repz
mov
push
add
rcrb
jnp
cli
adc
sbb
or
and
inc
add
mov
sbb
dec
xor
mov
dec
inc
in
adc
xor
inc
inc
fnstenv
std
pusha
adc
push
loopne
shl
das
mov
sbb
dec
ret
mov
loope
xchg
xchg
sbb
rcrb
cmc
outsl
xchg
mov
pop
sub
jp
sub
out
and
mov
repz
xor
data16
mov
push
nop
jbe
sti
cmp
adc
add
xor
add
into
dec
in
mov
pop
add
jae
nop
push
mov
and
in
dec
mov
jnp
test
cwtl
pusha
pop
outsb
mov
movsl
mov
leave
lods
xlat
outsb
fistpll
pop
adc
aad
add
lea
data16
rcll
lods
call
bound
test
shlb
xlat
pop
out
mov
fwait
imulb
inc
fiadds
dec
mov
dec
adc
sbb
jnp
test
into
dec
nop
jne
fidivs
xchg
ja
mov
lods
inc
add
sahf
clc
xlat
sbb
ret
mov
or
add
inc
adc
cmp
sub
imul
jg
fidivs
jl
inc
arpl
rcl
cmpsb
test
mov
clc
push
je
mov
aas
ds
in
pop
ret
pop
pop
mov
or
jo
adc
mov
bound
push
or
imul
frstor
mov
cmp
ret
leave
pusha
std
das
xor
push
push
xor
ret
stc
sub
and
inc
push
jmp
js
xchg
jge
mov
pop
jmp
rorl
fmull
jne
jne
mov
jge
jno
mov
jb
das
cmp
pusha
sbb
xchg
loop
adc
rorl
aas
and
inc
out
xor
ss
lds
cltd
aam
xchg
ja
movsl
fsubrs
or
xor
pushf
aad
rcrb
mov
jne
js
adc
mov
rcl
shr
out
mov
fists
jo
ja
or
pushf
out
decb
push
lret
decb
adcb
pop
movsl
adc
dec
pop
test
sahf
scas
mov
push
push
shlb
adc
push
add
std
mov
pop
pusha
jnp
outsb
mov
sbb
rclb
adc
mov
cmp
sbb
imul
mov
pop
jne
aaa
and
inc
les
jbe
stos
arpl
push
lcall
in
pop
in
js
push
lcall
scas
cltd
imul
out
daa
dec
mov
jne
push
sbb
xchg
adc
in
dec
in
orb
xchg
add
das
adcb
jp
idivl
rcrb
in
pusha
mov
sbb
inc
or
adc
lds
fdiv
ret
hlt
pop
pop
adcb
adc
and
inc
xorb
sub
loopne
xor
fldcw
in
mov
xor
dec
cmp
jo
push
xchg
and
les
flds
jmp
aaa
into
scas
hlt
adc
data16
push
mov
jo
and
xor
stc
cld
xchg
sub
call
inc
repz
mov
fnsave
fs
pop
out
xor
fsubrl
inc
push
cmpsb
sahf
mov
lret
fcomps
inc
or
or
mov
or
aad
lods
outsl
outsl
cmpsb
decl
cltd
mov
sbb
imul
mov
or
inc
mov
rep
or
adc
xor
cli
pop
imul
testb
mov
int
push
hlt
mov
andl
or
pop
rclb
repz
repz
mov
dec
adc
int3
in
sub
out
cli
jne
mov
adc
push
mov
int
decl
mov
push
cltd
daa
inc
lret
jno
lea
fcoml
mov
push
bound
mov
sbb
xchg
test
cmp
cmp
cmp
stos
cmp
fldl
sahf
push
mov
shlb
shl
jl
subb
xchg
pop
jne
jns
scas
fcompl
dec
dec
push
pop
repz
insl
mov
xchg
sub
jle
pop
sbb
dec
sbb
jo
pop
sbb
push
mov
mov
cmpsl
mov
and
out
jp
jp
or
jne
dec
mov
fwait
lods
mov
sbb
or
xor
and
pop
hlt
enter
movsl
cmp
jo
add
sub
mov
pop
int3
sti
mov
jg
test
push
lret
data16
cmp
pop
dec
dec
aad
imul
out
cmp
inc
pop
bnd
lahf
addl
sub
push
insb
pop
mov
nop
cmp
fisubrl
mov
mov
cmp
mov
inc
add
inc
lcall
and
ror
sbb
pop
sbb
cmp
xlat
insb
repz
jge
clc
inc
and
adc
pop
lret
sahf
cltd
js
jo
lahf
mov
xchg
out
enter
sti
xor
leave
mov
pop
lods
mov
test
mov
ret
adc
pop
mov
stos
add
cmp
sarb
sbb
das
lods
jmp
imul
nop
stc
or
fildll
push
push
and
mov
sub
or
loope
xor
jle
sbb
nop
mov
sub
rcr
xchg
xorl
mov
shlb
stc
jmp
cmp
or
mov
aaa
call
cmp
rcrl
scas
and
adc
ds
fisubs
xchg
sub
add
test
pop
pop
sub
mov
mov
or
jne
mov
mov
outsb
ss
fwait
imul
ficoml
jmp
dec
jno
jle
push
jno
mov
cmp
sbb
cmp
push
mov
or
adc
jb
adc
or
add
and
mov
outsl
and
mov
xchg
push
int
loope
fs
mov
xor
out
into
dec
cmpb
insb
and
ficoml
and
mov
fsubrs
repz
pushl
in
inc
xor
xchg
bound
mov
cltd
cmp
jle
push
and
and
inc
dec
push
pusha
stos
imul
push
lahf
pop
insb
fistpll
fadds
pusha
xor
push
sub
in
push
popa
mov
leave
pop
jg
cwtl
mov
sub
out
xor
lcall
or
sub
jb
jle
iret
outsl
fisttpll
out
icebp
xlat
ljmp
movsl
inc
mov
mov
insl
mov
js
and
cmp
js
int3
mov
cwtl
push
pop
inc
aas
add
xchg
add
xchg
mov
mov
push
xor
ja
js
ficompl
lea
pop
test
adc
pop
xchg
rcrb
cmp
xchg
scas
xchg
or
fwait
sbb
lahf
adc
into
test
in
sti
js
fmull
sub
in
mov
int
mov
sub
mov
xchg
sbb
mov
bound
xchg
test
xlat
stos
rolb
shll
add
testl
pop
lcall
data16
push
cmpsb
mov
stos
inc
push
and
mov
jmp
pop
dec
inc
shll
mov
pop
repz
inc
add
inc
jmp
mov
add
xchg
in
inc
lock
push
xchg
mov
in
jge
movsb
gs
or
sbb
pop
shrb
dec
std
cmpps
sub
cmp
fs
pop
jl
add
push
sahf
movd
je
movsb
mov
cmp
cwtl
inc
sbbb
ret
shl
pop
insl
sarb
lahf
sub
test
and
lahf
xor
stos
inc
xchg
out
push
pushf
cld
cli
push
ljmp
jno
and
mov
aam
sahf
aaa
rcrl
xlat
xlat
xchg
aam
pop
inc
incl
mov
lcall
mov
out
test
pop
push
movsl
das
or
jmp
push
sub
jbe
dec
mov
mov
jmp
cwtl
and
test
gs
test
xchg
ficoms
cmpsb
cld
add
out
dec
in
jg
xchg
mov
sub
popa
add
es
mov
lods
je
or
movsl
sbb
jmp
mov
loopne
lcall
cmpsb
sarl
ja
dec
push
xlat
sbb
push
test
addb
mov
xor
dec
push
lods
jmp
aad
gs
mov
ljmp
xchg
dec
fisttps
lock
add
cwtl
repnz
cli
pop
out
imul
lahf
gs
in
cmp
jnp
popa
stos
rcrb
mov
dec
inc
test
cli
jnp
lret
pop
jecxz
mov
xor
lahf
scas
mov
icebp
imul
ret
mov
sbb
inc
mov
mov
lea
push
inc
pushf
dec
push
lret
in
js
inc
and
or
and
aam
or
push
lods
fdivrl
or
mov
sub
xchg
stc
vmovd
pop
cwtl
dec
mov
cltd
in
adc
inc
std
fwait
sub
out
adc
repnz
xor
notb
lock
loope
adc
cld
and
cmpsl
pushl
dec
test
shlb
scas
bound
pop
sub
jl
or
adc
or
dec
iret
adc
sbbb
lods
in
xchg
sti
adc
sub
mov
scas
or
xchg
cwtl
and
test
mov
jge
fsts
dec
and
fucomip
orl
xchg
sbb
stos
dec
in
xor
push
jp
adcl
dec
inc
imul
popa
or
stc
gs
daa
leave
aam
adc
out
sbb
scas
inc
push
lahf
fidivs
xchg
dec
push
imulb
mov
jb
cli
sub
fwait
xchg
rorb
int3
arpl
add
mov
popa
notl
fistpl
jmp
fwait
sub
pop
push
cmp
repnz
sub
jg
xchg
movsb
cmp
or
mov
mov
cwtl
sbb
add
and
and
inc
dec
xchg
rorl
mov
dec
cmp
add
sub
rolb
xchg
and
test
jo
lcall
pop
pop
jecxz
jb
sets
xchg
jge
mov
leave
pop
jne
jl
jle
aaa
shlb
fimuls
ljmp
mov
mov
push
outsl
xor
mov
sbb
sub
in
fmuls
mov
dec
sub
push
add
add
bound
xor
xchg
loop
adc
int
xor
xchg
adc
call
popl
enter
in
xchg
int3
sub
push
imul
jo
icebp
xchg
dec
hlt
cmp
psllq
imul
jle
add
movsb
inc
fcomps
popf
jns
in
stos
cld
xchg
in
push
inc
mov
fwait
divl
enter
sub
sar
mov
ljmp
adc
jne
adc
push
outsb
pop
test
movsb
push
fsubl
in
dec
repz
and
aaa
mov
xchg
xchg
or
or
cmp
mov
leave
dec
mov
test
jno
pop
pushf
lods
dec
rolb
loope
scas
addr16
cld
cwtl
iret
jnp
pop
or
sbb
inc
lret
mov
cld
dec
cmp
mov
cmpsl
push
jmp
dec
mov
mov
sub
mov
mov
addr16
inc
xlat
mov
mov
movsb
jecxz
insb
ljmp
mov
repz
call
or
xchg
xor
shll
or
push
dec
jns
mov
loopne
lret
dec
popf
lea
cmpsl
xlat
mov
out
fcmove
pushf
mov
imul
mov
xor
push
imull
fdivp
dec
jle
dec
xchg
pop
dec
pusha
xorb
push
ret
mov
imul
popf
popa
adcb
and
cmpsb
pop
jb
push
enter
sbb
fisttpl
std
int3
shll
add
or
in
daa
cmp
dec
pop
sbb
adcb
dec
arpl
or
mov
pop
cmpsl
aam
mov
cmp
movsb
ja
cmp
jno
mov
inc
xorl
inc
sbb
pop
das
mov
stos
fsubs
jmp
gs
js
mov
clc
or
test
xor
ds
mov
popf
pop
xchg
insb
sbb
repz
cmp
cmp
adc
pop
imul
aam
test
push
mov
mov
mov
mov
aam
xchg
aam
sbb
rolb
mov
cli
lea
lea
lret
mov
jge
xchg
dec
mov
cmc
push
cmpsl
sbb
mov
pop
subb
insb
cmp
negb
das
fidivl
in
dec
cmp
in
cltd
jp
mov
adc
stc
push
dec
pop
mov
inc
stos
cli
dec
dec
fdivl
lcall
and
rcrl
stc
leave
loop
test
push
and
je
or
sbbl
popa
or
sbb
outsb
cmpsb
add
scas
add
mov
sahf
into
out
arpl
push
jmp
lahf
inc
icebp
xchg
sarb
adc
inc
mov
mov
add
push
push
rcr
pusha
lods
and
xor
fsubl
mov
xchg
jns
scas
push
xlat
imul
jb
outsl
test
mov
push
movsl
mov
mov
jnp
daa
and
rcll
or
jnp
xlat
lods
push
nop
pop
jne
test
subl
mov
cmp
daa
inc
jle
xchg
jo
mov
mov
adc
orb
mov
sbb
add
sahf
jb
nop
les
shl
xchg
pop
xchg
mov
jns
in
icebp
mov
enter
mov
aad
lods
inc
or
jmp
bound
lret
popa
sub
mov
leave
pop
cmp
push
mov
push
enter
sti
and
inc
je
mov
sbb
xor
insb
or
scas
out
mov
cmpsl
adc
add
leave
test
fxch
and
inc
jno
lods
mov
or
mov
jg
fildll
cmc
sub
testl
xor
mov
pop
jecxz
or
cmc
push
test
xchg
bound
lret
shl
cltd
pushl
dec
xor
jne
cmp
or
in
cmp
popf
or
push
vpandn
sbb
std
shll
mov
rol
ljmp
sub
fcomps
pop
dec
jmp
adc
dec
cmp
mov
jmp
fwait
bound
and
inc
jmp
or
jo
pop
imul
or
inc
inc
pop
outsl
repz
mov
daa
or
adc
pusha
xchg
fbld
mov
add
pop
dec
movsb
dec
sbb
xchg
int3
sub
std
xchg
outsb
pop
jae
mov
sbb
push
imul
jmp
nop
sti
pop
repnz
and
lret
push
sub
stos
cmp
sbbl
out
insb
filds
testb
imul
cmp
xorl
lds
movsb
lret
adc
jb
int3
xorl
mov
mov
fcomi
addr16
xchg
add
xor
pop
xchg
sub
cltd
daa
cmp
jb
fdiv
xor
push
cmp
outsb
pop
mov
add
inc
lahf
pop
mov
es
adc
jb
cs
xor
or
in
loop
sbb
cmpsl
push
mov
add
test
jb
insl
dec
jecxz
xor
cmp
daa
mov
add
push
loop
movsb
xchg
sbb
dec
mov
pop
out
scas
and
sub
stc
push
ret
sbb
repnz
sub
and
push
add
mov
dec
jecxz
arpl
xchg
push
lods
add
mov
sahf
insb
push
call
jo
dec
dec
cwtl
push
loope
sub
sbbl
sbb
push
jb
test
nop
leave
mov
xor
jnp
or
mov
mov
xlat
pop
and
mov
fcompl
imul
and
or
pop
sub
sub
sub
adcb
xor
daa
mov
mov
mov
or
or
stc
mov
or
leave
ds
repz
jbe
push
fists
jbe
pop
das
jbe
mov
mov
sub
clc
ret
jo
jb
sbb
pop
xchg
std
addb
das
mov
xor
mov
icebp
mov
out
jo
mov
ret
and
sub
std
jo
paddusw
sbb
dec
fsubrl
adc
sub
cltd
cwtl
stos
pop
mov
loope
addr16
lds
out
je
mov
aaa
pusha
push
fwait
mov
out
mov
movl
xor
cmpsl
inc
mov
adc
sbb
jne
sub
dec
dec
pushf
dec
and
fucom
orb
mov
pusha
sbb
dec
orb
in
dec
mov
ret
jns
gs
mov
dec
imul
dec
add
loope
addr16
int
mov
fldl
cs
daa
cmp
dec
and
es
push
mov
sub
cmpsl
adc
test
popa
aam
xchg
dec
ret
pop
dec
fwait
or
or
sti
fwait
dec
nop
sub
test
cmp
xchg
xor
rcrb
push
dec
mov
xchg
push
cli
sbb
movsl
movsl
aaa
xchg
mov
sti
jmp
ss
outsl
shlb
xor
pop
in
inc
js
add
filds
cld
xchg
data16
mov
add
int3
inc
and
shrb
mov
or
movsb
int3
xchg
bnd
or
movsb
loope
shl
out
xor
dec
xlat
adc
mov
popa
andl
sbb
out
dec
sti
push
mov
outsb
scas
popa
das
fucom
data16
xor
or
jg
stc
xor
pop
jmp
push
push
gs
pop
inc
ret
pop
mov
sbb
loopne
jb
push
fbstp
or
aad
dec
push
imul
jno
fstp
push
mov
test
pop
in
push
inc
pop
clc
xor
sbb
fiadds
rorb
xchg
hlt
dec
mov
sbb
rcrl
dec
or
jo
dec
mov
mov
or
mov
mov
pop
mov
sbb
aad
jno
call
jp
jo
and
add
push
mov
jns
add
test
pop
xchg
dec
jecxz
out
add
leave
jne
cmp
mov
lea
mov
cli
cmp
adc
add
xchg
add
pop
pusha
aaa
int
and
jecxz
int3
dec
cmp
push
stos
fnstcw
jle
mov
mov
in
add
test
mov
imul
cli
es
mov
xor
xchg
jp
adc
mov
stc
popf
dec
lods
jnp
sahf
cltd
add
cwtl
pop
cs
hlt
push
lret
jmp
std
cmp
icebp
mov
and
repnz
lea
cmp
ljmp
cmp
adc
or
dec
pop
scas
pop
push
sbb
add
push
inc
mov
fucom
xchg
pushf
mov
dec
pop
lds
lods
jecxz
mov
aam
imul
movsb
repz
push
rclb
sbb
sbb
std
inc
push
movsl
lret
cmp
testl
jge
and
and
push
push
or
mov
lds
inc
pop
stos
and
mov
sbb
leave
sbb
mov
cltd
push
insl
stc
cmp
add
loopne
aad
decl
ret
rol
xchg
testb
mov
shl
shr
sub
aas
arpl
sbb
fldcw
pushf
push
leave
push
or
adcl
push
pop
pavgw
mov
int
popf
mov
and
gs
lods
fwait
ret
jae
cmc
mov
jge
outsb
insl
aad
lahf
vpcmov
pop
sti
mov
push
sahf
lods
inc
shlb
jbe
shll
adc
je
mov
or
or
or
mov
xchg
jle
adc
out
fstpt
cmp
xor
mov
fildll
sub
jg
mov
decl
or
adc
ss
dec
not
push
test
lret
mov
pop
sbb
ficompl
in
dec
pop
xchg
les
add
xlat
and
outsb
popa
or
dec
adc
dec
mov
push
fst
cmp
pop
adc
shrl
cltd
aaa
push
out
jno
shl
std
fstpl
add
jb
jb
hlt
mov
lret
adc
mov
test
cmpl
xor
pusha
pop
stos
sahf
and
es
mov
fnstenv
or
test
sub
lods
add
nop
cwtl
pop
dec
mov
or
in
into
lcall
inc
inc
in
out
add
lret
jae
repnz
xchg
das
add
jecxz
push
insb
outsb
or
mov
push
mov
hlt
cmpsl
and
and
mov
and
pop
ljmp
aaa
lcall
adc
fistps
shl
xor
add
push
out
stc
in
mov
mov
pusha
jge
push
enter
lods
mov
adc
sbbl
and
dec
test
call
jae
mov
out
mov
push
pop
popf
hlt
in
sbb
cld
inc
mov
loop
ja
pop
popf
fldcw
mov
dec
jne
inc
fcoms
stos
cmc
push
cmp
pop
fucompp
iret
jl
rcrb
or
pop
pop
push
clc
imul
xchg
clc
dec
add
cmp
xor
fidivl
push
sub
aam
push
call
leave
mov
clc
arpl
mov
adc
ds
ds
xchg
push
les
leave
repnz
dec
ljmp
call
or
jl
adc
cltd
inc
cmp
add
adc
xorl
ss
roll
mov
sbb
es
adc
and
cmp
jno
xor
ds
aad
std
or
or
jmp
test
pop
jns
adc
stos
xchg
aam
int3
pushf
mov
insb
popa
cmp
cs
ja
rol
rcrl
pop
cmp
mov
sbb
and
jb
mov
ja
push
fcmove
dec
pop
inc
repz
jmp
enter
pop
mov
push
push
scas
movsb
mov
sbb
int
cld
hlt
addr16
jo
inc
push
pop
insl
inc
push
jno
mov
sub
cld
adc
jae
stos
xchg
mov
int
scas
cmp
in
xor
cwtl
xchg
mov
lahf
into
add
and
xchg
jne
mov
test
mov
gs
push
insb
movsb
cmp
ret
mov
sub
cli
mov
mov
mov
dec
sbb
jnp
pop
push
mov
mov
and
pop
dec
inc
xlat
cmp
cld
subb
cmpsb
mov
or
sti
xchg
jg
mov
pop
pop
dec
push
add
xor
mov
push
dec
mov
ss
sub
andb
push
mov
movsb
mov
lods
insl
ljmp
mov
inc
fcmovnbe
jbe
sub
in
call
or
filds
jnp
jg
fs
cmpsl
leave
fsubs
add
add
into
test
adc
out
sahf
adc
mov
adc
repz
mov
out
mov
push
cli
xchg
mov
cmpsb
lcall
jbe
out
adc
outsl
inc
int3
push
push
jns
jecxz
adc
dec
cmp
push
dec
pop
mov
into
stc
aaa
sub
cmpsb
jae
mov
mov
adc
mov
and
xor
daa
jne
sbb
xor
jo
loop
push
xor
push
fldl
mov
iret
out
dec
add
bound
mov
scas
and
scas
out
mov
cs
cld
sub
push
adc
cmp
cmp
or
jge
test
or
lea
lahf
imul
sti
dec
in
xorb
mov
add
js
mov
fcmovb
cwtl
addb
lahf
and
mov
lds
push
xchg
jge
dec
cltd
add
fs
inc
fsubrl
add
push
ss
scas
push
pop
adc
mov
dec
mov
cmc
xor
insl
push
mov
xor
lahf
xorl
push
or
and
inc
cltd
adc
int
push
jbe
clc
out
inc
ljmp
in
fmul
mov
cwtl
pop
sbb
popa
leave
push
jns
call
jle
inc
or
outsb
dec
pop
jo
adc
cmpsb
dec
and
add
cli
pusha
aas
mov
adc
or
dec
in
mov
shl
faddp
data16
loopne
xor
mov
dec
xor
xor
imul
jp
adc
sub
inc
inc
dec
std
ds
mov
sub
cmp
adc
loope
out
cmp
xor
inc
xor
adc
test
mov
mull
dec
inc
out
xchg
aad
sub
js
sub
push
mov
add
sub
mov
lcall
inc
test
ss
cmpsb
insl
sbb
xor
mov
fsubs
dec
cmp
push
sub
jnp
and
push
xchg
add
or
mov
push
xor
and
ds
subb
mov
mov
in
aam
ss
pop
jg
push
out
test
mov
shl
push
cmp
mov
iret
or
jmp
jae,pn
pop
pop
jno
ja
xchg
mov
test
testl
aam
fnsave
aaa
mov
cwtl
cmp
dec
pop
ret
aam
pop
jnp
mov
add
jg
lea
push
ja
bound
xchg
adc
xchg
ja
mov
icebp
je
sub
sahf
xor
xchg
xchg
xchg
pop
repz
lret
fwait
pop
sub
mov
adc
sbb
jne
cmp
outsl
fmull
add
inc
inc
stos
xlat
pop
xchg
in
sbb
ds
pop
aam
je
std
xchg
xor
xor
push
sbb
mov
sub
int
ja
ret
jbe
push
jnp
jp
or
jne
mov
aam
inc
rcr
lret
std
cmpl
push
pop
aaa
stos
pop
imulb
mov
sbb
aas
movsb
push
aad
fwait
sti
repz
pop
mov
mov
lds
sbb
cmp
ja
cmp
scas
aam
sub
repz
push
movsl
xchg
stc
inc
enter
out
push
sbb
pop
ljmp
out
fidivrs
fmuls
stc
stc
subl
dec
inc
cli
pushf
loopne
pushf
sub
arpl
test
cmp
gs
mov
call
mov
dec
mov
xchg
fldcw
aam
aam
sub
movsl
daa
lcall
push
jge
stc
pop
cli
mov
loopne
scas
adc
repz
shrl
add
addb
aam
and
test
sbb
add
gs
cmp
negl
out
adc
fimull
stc
push
mov
or
js
lods
inc
fisubrs
add
add
lock
cmp
xlat
push
das
pushf
mov
mov
into
add
insb
sub
sbb
mov
cmp
scas
shll
sbb
shll
andl
fs
xchg
outsl
mov
lds
xor
test
notb
fsubl
std
xor
xor
mov
xlat
stos
push
pop
adc
push
and
dec
orb
sbb
sbb
fdivs
mov
lods
test
inc
in
cld
or
loope
mov
cld
dec
push
repnz
enter
incb
mov
cmpsb
xor
add
mov
xchg
xor
ss
roll
insb
mov
ja
mov
movsl
cmp
mov
xchg
test
lret
jno
lock
pop
inc
call
scas
or
jge
xchg
jmp
inc
push
and
call
or
mov
lds
ljmp
std
leave
call
or
jl
pop
xor
lds
pusha
push
dec
addr16
popf
xor
fnstsw
push
sub
dec
loop
and
cmp
mov
popf
stos
faddl
enter
adc
mov
cmpsl
cmp
enter
xchg
loop
sub
fs
imul
pop
xchg
data16
jo
add
jnp
ret
pop
ljmp
test
clc
std
test
pop
sar
fisubrs
xchg
pop
imul
test
jp
push
je
pop
mov
mov
and
aaa
xor
je
cmp
arpl
call
jle
in
test
sti
or
cmpsl
pop
xor
aam
scas
fmul
cmc
jg
es
aas
dec
sti
aas
mov
pop
lock
jl
cmp
sbb
xchg
sbb
mov
pop
ss
jge
std
insl
inc
pop
fisubrl
popf
xor
int3
jns
pop
cmp
jge
scas
inc
mov
ror
xor
push
mov
out
or
inc
cmp
and
and
pop
fadd
and
lock
dec
sbb
test
jl
push
das
jmp
fstpl
xchg
inc
xchg
push
jno
jb
cld
adc
fucomp
dec
test
mov
sbb
pop
push
arpl
xchg
mov
or
lahf
jo
iret
sub
dec
push
and
and
xor
outsl
inc
jno
xchg
mov
test
mov
movsb
add
gs
cld
roll
inc
fsubl
lcall
sahf
addr16
mov
test
incb
push
subl
pop
cli
or
in
push
rclb
popa
cmp
mov
inc
or
mov
sbb
adc
movsb
inc
jae
popf
inc
inc
mov
xor
imul
mov
test
adc
xchg
pop
push
ret
dec
cmpl
cmpsl
loop
push
dec
sub
into
mov
call
lea
add
sbb
sub
and
cmp
push
addl
test
sarb
push
bndstx
das
cli
imul
cmp
and
xor
mov
mov
cmc
test
push
pusha
add
call
cmp
inc
leave
mov
in
push
fdivr
xchg
mov
ret
or
inc
push
sbb
mov
rorl
repnz
sub
sub
pmaxub
add
adc
mov
mov
push
mov
insl
lock
pusha
fidivs
jg
push
mov
or
mov
mov
shrb
xor
pop
dec
std
cltd
and
std
cmp
in
into
jnp
call
insl
sbb
dec
add
xchg
in
jp
jecxz
mov
push
stc
dec
sub
lret
cld
mov
push
pop
xchg
ror
movl
rclb
cmp
fsubp
stos
fs
leave
sub
aad
xor
idiv
xchg
es
push
add
add
mov
out
xchg
push
test
pop
bound
push
push
lds
rorb
movsb
cltd
scas
pop
inc
sbb
pop
xchg
out
mov
jl
fsubrl
inc
fstps
xor
outsl
jmp
movsl
cmp
or
pop
shlb
pop
cmp
lahf
mov
add
push
or
rorl
xor
jecxz
jo
mulb
popa
ja
cmp
push
cmp
push
fiaddl
movsl
sar
pop
je
xor
xchg
loope
out
fcmovnu
mov
lret
outsl
sarl
flds
and
icebp
fcompl
movsb
enter
fs
aas
es
scas
lret
fwait
jb
pop
and
push
shl
cwtl
mov
cmc
adc
mov
or
clc
mov
push
rorl
sub
jns
inc
inc
sbb
arpl
shl
push
push
pop
jns
inc
and
sub
bound
or
shll
mov
push
out
mov
jmp
mov
mov
jb
cwtl
rorl
jns
inc
sub
je
dec
push
nop
jp
lods
lea
jp
xor
push
mov
insl
cmp
test
jl
adc
mov
faddl
popf
int
lock
inc
inc
dec
int
arpl
ds
adc
in
mov
mov
std
subb
push
xchg
xor
pusha
and
sbb
mov
or
pop
mov
add
xor
hlt
pop
push
fwait
mov
add
std
xor
out
das
and
aad
add
pop
pop
push
xchg
dec
loope
xchg
xor
sub
xchg
bound
fnsave
push
adc
dec
out
jno
sub
popl
or
das
mov
mov
adc
mov
mov
jbe
pushf
outsb
out
lahf
std
jg
mov
sbb
dec
scas
ss
icebp
mov
fwait
add
or
ficoms
fiadds
es
es
mov
push
aas
xchg
inc
out
adc
jo
bound
inc
cmp
xchg
jno
mov
adc
push
fsubl
call
xor
notl
xor
sahf
cwtl
pop
add
or
jo
inc
dec
dec
xchg
testb
mov
std
push
sbb
inc
inc
in
add
xchg
mov
mov
xchg
push
dec
loop
mov
fnstenv
sbb
sti
cmp
lock
push
adc
inc
fsubl
aad
mov
gs
add
inc
shlb
das
inc
mov
xchg
sub
out
sub
push
in
dec
pop
jmp
dec
in
nop
mov
mov
leave
into
es
mov
rcll
mov
int
insl
insb
inc
pop
push
out
and
push
std
mov
xor
jnp,pn
xor
int3
pusha
insb
push
pop
hlt
dec
popa
arpl
push
movsl
pop
loop
xor
inc
shrl
decl
scas
nop
push
mov
mov
lahf
pop
xchg
cmp
mov
push
jae
cld
outsb
sub
sahf
pop
xchg
or
add
lods
ss
dec
push
bound
mov
jmp
jo
mov
xor
or
cmp
pop
push
fidivrl
ror
adc
bound
mov
inc
inc
clc
pop
mov
nop
push
bound
mov
aad
mov
add
outsb
and
inc
cmpsb
scas
cmp
push
mov
int
push
push
aam
mov
cwtl
xor
push
mov
or
xor
in
incl
xor
and
scas
jnp
pop
jo
enter
cmp
pop
pop
mul
xchg
sub
xchg
fdivs
pop
mov
add
xor
adc
gs
cld
mov
lods
mov
xchg
sbb
add
or
filds
jbe
aam
sub
cmc
push
popa
mov
xchg
jbe
mov
jge
pop
scas
out
out
push
xchg
ljmp
mov
adc
sub
fcompl
je
insl
jns
fcmovnb
les
in
cmc
in
negl
inc
fcmove
mov
fsubr
sbb
dec
jecxz
aas
inc
fiadds
out
stos
sahf
imul
lret
lea
cmp
int3
pop
pop
sub
orl
sti
stos
scas
ljmp
loope
push
out
mov
pop
xor
inc
daa
sbb
movsl
pop
dec
in
mov
mov
ja
xchg
mov
imul
adc
mov
stc
mov
out
sti
mov
mov
insl
adc
insb
hlt
test
mov
xchg
dec
cmp
mov
sar
nop
add
or
loope
jnp
jbe
adc
mov
cmp
and
sti
outsb
push
jp
dec
mov
dec
mov
sbb
mov
repz
add
xor
mov
cmp
sub
inc
sbb
xchg
dec
inc
xor
xchg
sub
je
adc
leave
fwait
pop
add
fs
mov
movsl
mov
sbb
dec
cmpsl
inc
fisubrs
ljmp
jl
push
and
mov
sbb
sub
mov
sub
cwtl
mov
pop
dec
mov
jb
nop
stos
jge
pop
inc
les
cmp
add
inc
lret
lret
adc
xchg
push
push
not
adc
fwait
add
fs
or
movsl
ret
pop
movsb
sbb
mov
cmp
pop
movsb
sub
jmp
or
movsb
cmp
cmpsb
jno
lret
pop
hlt
popf
movsl
test
or
push
scas
inc
test
into
bound
ljmp
repnz
aaa
push
xchg
mov
pop
cltd
push
push
push
xchg
das
aaa
inc
lret
jo
xchg
pop
shl
aas
cmpsl
out
pushf
jns
into
sbb
sarl
fcmovnb
inc
loope
and
bound
cli
ds
mov
in
ds
imul
push
pop
cmp
pop
fistps
out
xchg
imul
pop
imul
adc
and
dec
ffreep
add
mov
scas
add
ret
push
or
fildl
stos
hlt
cld
and
sti
xchg
imul
pop
cli
cli
pushf
sbbl
mov
sub
std
aam
shlb
iret
fwait
in
xchg
insb
jle
inc
cmp
push
outsl
xchg
add
pop
pop
stos
push
mov
push
xor
cmpsl
cmp
sub
mov
rcrl
jl
pop
pop
lock
stc
push
imul
push
push
lock
lret
xor
les
gs
nop
les
sub
xchg
pop
leave
mov
mov
cmc
iret
sub
cld
out
xchg
enter
pop
scas
mov
ret
repz
gs
adc
mov
repz
push
leave
mov
inc
jb
adc
xchg
lret
inc
cli
push
inc
mov
loope
testl
sbb
xchg
jle
and
icebp
push
ss
cwtl
xor
mov
pop
mov
cmp
push
mov
test
xchg
pop
jp
adc
ficompl
mov
xchg
nop
jne
push
and
inc
push
repz
fsubrs
mov
cmc
mov
aad
in
mov
jl
cmp
jg
leave
daa
xorb
lods
cmpsl
mov
xor
and
push
and
movsl
mov
out
outsb
push
es
popf
jmp
fcomps
test
push
out
mov
xchg
cmpsb
std
or
movsl
lret
fidivl
in
adc
jno
js
add
sub
movsl
mov
and
mov
ljmp
sub
stc
pop
dec
jecxz
mov
mov
outsl
pop
shlb
mov
sti
or
scas
sahf
fs
jb
loop
sarb
sub
sub
pop
pop
repnz
inc
test
sarb
push
dec
adc
pop
xchg
fwait
lcall
xor
push
lahf
ss
cwtl
outsl
push
lret
xchg
add
pop
and
push
pop
add
fucom
inc
dec
popf
xchg
and
or
and
movsb
loopne
repnz
mov
adc
ret
rol
mov
mov
mov
lret
push
jle
push
cmp
imulb
repz
cltd
fldpi
fsubrs
inc
fs
push
cli
pop
xchg
mov
dec
jne
xlat
xorl
or
ljmp
xor
pusha
clc
inc
lods
in
and
aaa
pop
pusha
cmp
sub
xchg
inc
notl
ret
pop
ja
mov
cmpsb
movsl
inc
fists
mov
mov
xchg
fcmovnu
into
sub
hlt
mov
or
mov
clc
out
push
sbb
leave
mov
nop
sti
jno
je
and
adcb
sarb
lods
mov
test
jae
adc
sti
cmp
lea
lahf
std
lods
add
je
sub
push
sarl
push
xchg
push
nop
hlt
data16
movsb
or
jbe
popf
xlat
pushf
cli
pop
loope
dec
push
stc
mov
lods
xlat
jle
not
ret
sub
xchg
outsb
fnstcw
ljmp
adc
in
in
stos
inc
insb
and
fimull
jo
sti
jecxz
sbb
addl
jecxz
push
mov
loopne
inc
xor
inc
scas
push
xchg
xchg
shr
data16
test
inc
inc
test
insb
xor
sahf
inc
inc
ja
mov
std
lods
fcompl
dec
pop
js
push
pop
dec
or
repz
dec
pop
fidivrs
xchg
push
or
push
popf
sub
shrb
mov
cmc
movsl
test
mov
pop
daa
fistpll
mov
lahf
movsl
daa
les
fisttpll
mov
mov
mov
lcall
stc
and
insb
jae
pop
ljmp
stc
add
jle
add
or
test
sub
sub
pop
cli
cs
xlat
rorb
jne
loope
fcmovnu
test
out
and
sbb
mov
xchg
aas
inc
jge
xchg
test
shrb
movsl
nop
or
mov
fidivs
push
xor
sub
in
xor
je
lock
add
push
in
bound
fsubl
dec
xor
out
mov
fidivrs
out
push
jne
add
shlb
xlat
cmpsb
sbb
push
les
jge
add
inc
loop
fcoms
addr16
stos
xor
xor
aad
mov
xor
lods
scas
call
cmpsb
or
scas
inc
fsubp
jecxz
pop
daa
mov
js
les
cmc
in
or
aam
adc
jle
pop
lret
cmc
leave
movsb
jle
mov
mov
daa
xchg
aas
or
cmp
pop
and
cmp
add
push
aaa
cltd
and
aas
jmp
movsl
iret
cmc
out
and
or
inc
add
xchg
aad
pop
imul
cmp
mov
cmp
lcall
stos
mov
push
call
lea
mov
sbb
mov
cmc
adc
sub
pop
xor
add
inc
mov
add
cmp
fnstcw
sub
jmp
push
push
iret
jl
fs
movsl
movsb
mov
xlat
adc
push
and
stos
mov
push
add
add
lret
dec
dec
pop
jge
out
dec
in
pop
je
and
cmpsl
jno
sbb
inc
sub
pop
sbb
pop
mov
outsb
adc
dec
or
fwait
ds
cmp
xchg
sahf
dec
out
mov
rsm
sub
xacquire
sbb
mov
jno
jnp
adc
sbb
cmp
add
stos
push
and
test
xchg
popf
adc
cwtl
out
hlt
pop
js
xor
mov
fs
push
and
stos
pop
sub
lret
pop
and
movsl
xchg
inc
mov
sti
sub
sbb
mov
out
and
adc
pop
cmpsl
jge
sub
jecxz
insb
add
div
mov
mov
dec
pop
lahf
push
fldl2t
mov
aad
sub
hlt
mov
outsb
cmp
clc
and
lea
lea
or
imul
je
mov
in
aad
add
jecxz
add
jb
mov
out
push
add
mov
inc
jo
imul
repnz
pop
les
idivb
stc
mov
add
das
sti
pop
les
loopne
aas
and
pop
push
dec
rol
dec
xorb
jmp
mov
xchg
mov
sub
movsb
pushf
cli
pushf
int
cmp
es
clc
mov
sbb
std
cltd
addr16
ficoms
or
dec
hlt
gs
dec
loop
sbb
dec
iret
fs
rcll
lahf
jmp
rcrl
sarl
or
punpckhwd
and
cmp
dec
pop
xor
inc
insl
cmpsl
js
dec
fidivl
loop
xchg
and
or
or
aaa
in
mov
subb
fdivl
mov
stos
sub
insl
sub
sub
mov
lret
lcall
sbb
stos
adc
adc
pusha
ret
jmp
clc
xor
loope
adc
cmp
add
add
pop
adc
or
das
dec
iret
cmp
inc
in
mov
or
leave
fldcw
repnz
into
inc
fyl2xp1
push
arpl
pusha
mov
movsl
loope
ss
cmpsl
jns
ss
inc
push
lock
test
incb
in
andnps
loopne
cltd
jnp
pop
cmp
call
xchg
mov
call
jl
fcmovbe
lds
das
push
mov
push
mov
dec
inc
outsl
mov
stos
dec
faddl
sbb
fs
bound
fsubl
push
aad
es
lret
push
sbb
mov
imul
shl
mov
sbb
imul
sub
data16
imul
pop
push
sbb
nop
cmpsb
aad
mov
add
xchg
jle
sbb
mov
mov
inc
sub
arpl
insb
out
dec
in
loop
mov
fst
mov
in
fs
bound
cmp
pop
mov
push
mov
shll
mov
push
adc
inc
cmp
sar
fstpl
in
adc
adc
adc
outsl
cmp
mov
jno
je
inc
push
hlt
inc
push
push
cmp
stc
cmp
aaa
iret
mov
leave
push
das
xchg
mov
les
mov
xchg
mov
movsl
mov
mov
inc
es
aam
sub
push
add
imul
ret
push
mov
repnz
adc
lds
test
andb
push
sti
xchg
mov
fadds
inc
lock
out
or
lods
sbb
or
or
repz
add
xchg
movsl
pop
loope
data16
je
and
jb
jle
adc
int3
dec
gs
fcoml
repnz
stos
in
push
dec
push
dec
out
jge
push
pop
repnz
inc
movsl
jns
sub
inc
add
jg
inc
ret
jl
icebp
mov
lahf
les
and
cwtl
sarb
xchg
cmp
push
into
jae
pop
addr16
scas
mov
xchg
mov
pop
adc
push
mov
sbb
data16
jl
mov
mov
sbb
or
push
sti
mov
sub
rcrl
fstpl
push
ja
int3
jne
cmp
dec
dec
dec
dec
mov
in
rorl
sub
push
push
mov
test
lret
xor
jmp
push
mov
mov
loope
push
mov
lods
jae
or
movsb
cmpsl
mov
cld
jecxz
ret
popf
or
push
xor
pop
mov
fiaddl
out
pop
imul
cmc
lea
adc
cmc
sub
push
pop
sbb
mov
clc
jnp
daa
mov
lret
pop
add
adc
cmc
movsb
lahf
in
adcl
push
jp
mov
or
fnstenv
test
mov
je
xor
push
pop
loope
xchg
notl
pop
cmp
xor
dec
mov
pop
xchg
pop
addr16
or
dec
add
add
icebp
adc
rcl
movsb
inc
dec
in
ss
lcall
scas
xor
pop
add
push
cmc
mov
mov
out
mov
jbe
dec
stos
or
test
adc
push
lret
and
notb
lret
das
inc
cmpsl
int
call
push
inc
sub
rol
add
nop
les
pop
mov
stos
push
stc
nop
xchg
mov
dec
dec
push
cmp
je
and
jg
add
cli
stos
hlt
lret
mov
push
xchg
add
xchg
loopne
jnp
orb
push
xor
shrb
cwtl
pop
dec
mov
lock
loopne
and
in
out
out
lret
push
cltd
and
arpl
and
cmc
inc
xor
push
xchg
pop
out
inc
jg
ror
mov
mov
lret
addr16
or
lret
insb
push
lret
mov
sahf
inc
xor
or
jno
and
cmpsl
mov
inc
xlat
xchg
andl
stos
push
in
test
inc
cmc
das
cmp
push
cld
adc
inc
mov
int3
scas
sub
pop
sti
std
pushf
test
and
stc
push
cmp
or
nop
stos
xorb
or
mov
jmp
shl
cld
adc
pop
jmp
dec
push
rcr
repnz
dec
in
inc
fildll
xchg
push
mov
jp
frstor
fidivrs
sbb
xor
scas
mov
push
jge
out
imul
test
in
mov
outsl
pushf
popa
mov
and
rcrl
stos
mov
inc
nop
stos
ja
xor
pushf
and
mov
fldenv
in
in
inc
out
lods
push
mov
cli
iret
inc
loopne
cmp
test
scas
inc
das
mov
push
loope
enter
pop
jbe,pn
jp
sbbl
scas
sbb
in
jns
dec
push
xchg
dec
push
cs
mov
cmpsb
dec
loop
iret
mov
add
sub
inc
adc
sub
pop
add
inc
out
cmp
mov
mov
dec
std
xchg
jle
std
mov
imull
pop
mov
ret
les
sbb
dec
pop
hlt
push
mov
ja
pop
iret
jge
inc
std
inc
stos
outsb
xchg
adc
pop
orl
sub
fwait
adc
pop
dec
repz
pop
add
xchg
scas
scas
ficoml
jae
mov
adc
add
insl
outsl
adc
cli
enter
lea
fstl
call
add
and
add
dec
pop
or
cmp
mov
jb
mov
es
call
movsl
sub
or
and
sti
sbb
sub
leave
data16
dec
dec
mov
roll
mov
pushf
dec
in
xchg
mov
add
faddp
sbb
gs
leave
lea
stc
int
push
lret
insl
imul
sahf
jge
stc
xlat
push
mov
sub
repz
xchg
enter
rcl
adc
jge
stos
mov
pop
and
cmp
nop
pop
cmpsb
hlt
test
ja
add
mov
rsm
dec
shrb
dec
arpl
add
or
jae
in
pop
xchg
test
popf
rcll
jg
es
int
dec
jnp
cmp
inc
cmp
neg
xlat
outsb
or
cmp
mov
or
sub
mov
lods
mov
pop
or
push
mov
in
in
mov
push
ret
pop
fucomp
imul
scas
cmp
push
imul
jmp
mov
xchg
inc
push
cld
mov
jae
enter
or
xchg
inc
es
sbb
jmp
cmp
cmp
sbb
pop
push
jmp
shrb
movsb
push
ss
cmp
ss
push
add
sbb
xor
addr16
jb
push
mov
test
sbb
orl
add
test
insl
sub
jbe
mov
cld
stc
pop
insl
sub
fdivrs
fcompl
sbb
push
lcall
in
ret
cmp
aad
js
ds
xor
or
or
add
xchg
repnz
js
test
xchg
cmp
mov
fisubrs
jg
lods
ljmp
mov
adc
dec
push
daa
std
cwtl
fwait
scas
mov
adc
mov
movl
insl
pop
call
ret
scas
inc
dec
push
jl
ret
sbb
push
in
pushf
or
jae
test
movsl
jns
fildl
fiaddl
in
sti
lahf
pop
aad
test
lcall
out
dec
sbb
pop
xor
xor
add
xchg
icebp
lcall
or
sbb
mov
ja
sub
cmp
xor
mov
and
vmwrite
push
xchg
cli
test
or
jne
xchg
sub
and
gs
mov
incb
jmp
outsb
push
mov
pushf
mov
xchg
stc
rcrb
add
or
out
push
push
out
xchg
test
inc
or
adc
sub
mov
adc
sbbb
sbb
adc
mov
and
mov
mov
mov
pop
pop
jne
bound
jb
jae
and
xlat
and
negl
sub
fwait
in
test
ja
stos
cmc
ja
rorb
cli
cltd
xor
into
cmp
inc
in
std
cmp
inc
bound
lods
lds
rolb
inc
cmp
fcmove
jno
mov
pusha
ffreep
cli
pushf
cmp
mov
repz
rcr
xor
push
jb
jge
shll
jge
in
xchg
cmp
rclb
inc
jns
sbb
mov
lahf
ss
jl
xor
mov
std
pop
push
sti
mov
and
mov
insb
nop
sub
inc
sub
dec
mov
addr16
test
mov
mov
or
inc
cmpsl
arpl
ljmp
bsf
and
je
lahf
adc
lock
mov
std
pop
and
in
mov
gs
push
mov
mov
aas
xchg
iret
xlat
imulb
adc
mov
push
andb
lods
test
xor
subb
mov
xlat
ljmp
addr16
inc
xchg
pop
push
jle
mov
rolb
push
pop
outsl
rorl
test
stos
repz
daa
inc
inc
cli
movsl
stc
lds
push
mov
adc
push
stos
in
leave
dec
lock
xor
neg
sub
pusha
outsb
movsb
mov
add
pop
jecxz
fdiv
mov
data16
loopne
xchg
loop
scas
push
fcompl
repnz
std
lcall
sub
jmp
mov
mov
jle
mov
mov
dec
outsl
mov
push
cltd
sub
repz
call
adc
cmp
and
add
inc
inc
bound
jns
or
aad
mov
imul
ss
mov
or
pushf
std
pop
adc
les
test
mov
xchg
popa
outsl
and
movsl
clc
arpl
mov
mov
sti
rorb
shr
imul
xor
mov
pop
pop
daa
fwait
push
sbb
cmpsl
testb
jle
in
cmp
mov
cmp
xlat
ficoml
push
cmp
movsb
data16
cmpsl
jp
pop
mov
or
call
fcmovnbe
sahf
cmc
xchg
lock
lcall
mov
insb
jle
add
loopne
inc
incb
nop
cmp
repz
xchg
mov
aam
cmc
mov
jge
inc
out
jns
jmp
sti
mov
roll
mov
je
cli
adc
lock
or
inc
jg
mov
pop
ret
pop
inc
popa
inc
pop
loope
fadds
je
imulb
mov
lds
std
aaa
pop
xor
lods
jmp
pop
inc
or
loopne
ja
or
int3
arpl
cmp
stos
int3
jne
and
fdivrl
lods
lock
inc
je
jp
out
fucomi
sbb
mov
loopne
sub
mov
push
subl
aas
int3
inc
mov
mov
pusha
aam
push
sahf
imul
mov
lret
popf
rcll
shlb
inc
rorl
sbbb
pop
mov
dec
push
mov
sarl
subb
xchg
dec
movsl
dec
push
in
adc
data16
cltd
inc
daa
leave
mov
cmp
les
jae
lret
lret
lahf
mov
test
pop
js
dec
and
sarl
repnz
imul
loop
push
jno
pop
mov
fcoml
push
inc
inc
xlat
pop
out
cmc
mov
outsl
jl
jne
ret
or
sbb
xchg
fistpl
mov
mov
ror
fwait
mov
mov
jge
mov
mov
xchg
add
xchg
test
imul
jno
pop
fsubrs
push
and
pshufw
daa
movsb
sub
lcall
and
punpckldq
sbb
imul
push
dec
cmp
adc
lahf
inc
sub
mov
xchg
inc
xor
popa
stos
jmp
pop
cmp
inc
mov
data16
cmc
dec
mov
ljmp
and
call
sahf
out
jne
cwtl
stos
adc
jo
ja
adc
test
and
or
outsb
push
push
out
sahf
mov
imul
mov
fbstp
xchg
addr16
xlat
std
pop
or
sbb
add
or
sahf
out
inc
dec
inc
mov
mov
push
mov
pop
xor
cmp
data16
repz
push
ljmp
inc
data16
inc
out
cmpsb
jle
pshufw
add
js
fildll
dec
ljmp
mulb
daa
pop
daa
mov
xchg
and
xchg
inc
push
add
push
and
fistl
sbb
mov
lret
and
mov
push
xor
pop
lds
sbb
cmc
loop
and
add
adc
and
fwait
jb
cmp
xchg
loop
cli
xchg
inc
add
packssdw
and
pusha
into
xor
inc
or
cmp
sbb
mov
xor
int3
jl
jle
pop
and
xchg
ss
mov
push
rcl
addl
cmp
mov
jo
sub
inc
ja
mov
dec
push
push
mov
pop
cmp
sbb
gs
inc
rcrb
test
push
and
outsl
call
popl
cltd
insb
mov
stos
xchg
int
or
cmp
std
lcall
sub
lahf
repz
dec
aaa
es
int3
mov
in
sbb
movsl
mov
inc
cli
xchg
mov
cwtl
fwait
lods
stc
into
cmp
jp
bound
out
mov
xor
ss
cs
mov
inc
push
cmpsl
testb
dec
jecxz
jnp
and
or
lds
cs
loop
fcomps
sub
dec
je
jg
mov
push
push
std
xor
test
repz
repz
rcll
xor
mov
lret
xor
mov
jne
inc
fstps
jae
pop
push
cmp
out
stc
adc
sub
mov
mov
fistps
cmp
shlb
inc
xchg
sub
out
popf
sbb
jg
out
mov
sbb
in
dec
mov
ljmp
mov
int3
push
insl
pop
sub
mov
scas
adc
cld
ss
ds
outsl
sub
pop
mov
out
aad
bound
das
add
leave
repz
rcrl
aam
cld
dec
dec
cs
ret
xchg
fidivl
push
mov
nop
add
std
gs
cmp
popa
push
inc
loop
std
adc
das
imul
or
xchg
mov
fcmovnu
add
dec
dec
pop
jle
cli
jne
adc
test
lahf
cwtl
xor
or
push
cld
mov
jp
push
es
mov
adc
mov
lds
test
jbe
push
push
and
inc
sub
ficoms
lret
mov
jmp
xchg
push
mov
push
movsl
xchg
cwtl
lods
cmpsl
mov
aam
and
dec
rorl
pushf
jp
jecxz
fstps
int3
out
mov
or
dec
pop
push
outsl
sub
fidivs
hlt
cmpsb
dec
mov
jns
rcr
dec
in
loope
into
dec
icebp
cmp
mov
les
int3
fs
and
and
pop
enter
lea
jecxz
out
xchg
push
mov
insb
xchg
sub
ljmp
scas
and
lahf
insl
aaa
and
jne
dec
test
scas
aaa
add
push
insl
decb
iret
mov
stc
push
lock
jno
cld
ds
or
mov
rorl
clc
repnz
rorb
adc
lock
xlat
mov
rclb
int3
xchg
loope
fdivs
adc
jb
add
aas
xor
jne
js
inc
pop
jp
add
ret
mov
and
xlat
push
fpatan
idiv
pop
sub
push
cmpsb
mov
pop
test
movsl
xor
aaa
test
or
fstpl
sti
push
repz
sub
pop
xchg
stos
int3
pop
fdivr
ljmp
xchg
out
std
cmp
sti
xchg
mov
loopne
aam
shlb
inc
jno
fisubl
sub
cmp
jp
lds
dec
xlat
push
fistpll
mov
frstor
mov
popa
cmp
pop
and
mov
mov
or
out
and
movsl
mov
sub
dec
add
push
pop
imul
in
cld
pop
aam
xchg
sbb
xlat
jo
mov
cmp
lcallw
mov
and
data16
testb
mov
shr
dec
mov
scas
pop
addr16
mov
lret
sub
push
sbb
inc
dec
mov
sub
std
adc
imul
mov
loope
pop
mov
sub
ret
int
bound
push
dec
push
sub
jo
aaa
rolb
test
ljmp
jbe
add
ds
inc
adc
dec
repz
fisttps
adc
xor
stos
cld
lods
mov
jne
test
xchg
js
inc
adc
ret
outsl
mov
mov
rol
push
ret
into
cltd
stos
phsubd
and
jmp
shll
sub
and
push
hlt
scas
add
xor
lods
nop
mov
jg
add
pop
movsb
clc
stc
sub
movsb
lahf
or
adc
push
je
jnp
jl
insb
xor
dec
lret
inc
inc
or
sbb
xchg
test
movsl
xchg
pop
push
cmpsl
cmp
and
xchg
sahf
add
pop
pop
pop
add
cmp
sbb
dec
outsl
loopne
push
cmp
fisttpl
mov
push
rcrl
sbb
jnp
ret
pop
leave
mov
daa
jg
dec
mov
dec
ror
aas
arpl
xchg
fdivr
test
imul
cmp
push
testb
mov
add
push
xchg
or
lock
push
movsl
call
imulb
fisubs
popa
mov
xor
push
jne
pop
sub
and
std
mov
pushf
ljmp
or
xor
adc
mov
jbe
faddp
sub
sub
adc
push
lcall
pop
push
gs
xchg
adc
and
daa
dec
les
roll
daa
mov
dec
rolb
inc
mov
clc
inc
shrl
push
popf
mov
fisubs
ss
mov
out
das
les
lds
cmc
dec
push
rcll
xor
mov
xor
or
pop
std
repz
mov
or
adc
cltd
jae
repz
iret
push
sub
push
movsl
pop
mov
sub
subb
dec
push
jge
inc
mov
call
inc
mov
sub
inc
int
cmp
push
xchg
cmp
repz
mov
outsb
sub
xlat
sub
popl
call
dec
or
out
clc
enter
or
setae
fs
cld
pushf
sbb
adc
incb
in
dec
sbb
icebp
in
push
pop
neg
mov
js
and
inc
inc
fdivr
jmp
fadds
mov
lea
and
roll
js
into
cmp
xchg
sbb
rcrb
and
jb
jle
sbb
loopne
fcoms
stos
lcall
in
add
aas
rcrb
sub
jo
add
arpl
adc
push
add
mov
movsb
repnz
aam
push
sbb
cwtl
data16
pop
cs
pusha
jnp
fidivrl
xchg
adc
adc
inc
inc
shll
mov
cmpsl
inc
adc
aad
scas
push
xchg
add
int
mov
xchg
mov
jns
les
sub
jo
push
fisubs
mov
push
adc
push
add
scas
in
push
stc
push
jp
frstor
push
jns
jmp
adc
push
ss
jl
out
xor
es
sbbb
push
lcall
add
push
mov
adc
repz
mov
or
pop
push
pop
xchg
js
clc
cmpsb
sbb
push
mov
xlat
adc
pop
mov
jg
sbb
sbb
pushf
add
stos
or
jbe
jle
xchg
or
pop
cmp
sbb
mov
test
ret
call
fsub
sub
imul
add
loop
out
iret
jecxz
fcoml
fstps
daa
lahf
xor
fisubl
sub
enter
cwtl
jmp
dec
fidivrl
sub
daa
in
fs
jnp
dec
pop
cmp
cmpsb
aaa
xor
inc
scas
rorb
sbbl
pop
in
dec
jnp
mov
fdiv
sub
std
in
jbe
jno
mov
mov
addr16
imul
arpl
ljmp
xor
insl
pop
dec
lahf
add
sbb
dec
clc
cs
xlat
leave
pop
insb
repz
xor
mov
icebp
subl
adc
pushf
int3
stos
pushf
push
sbb
jl
stos
cmp
rcrl
sar
sub
jno
stc
mov
adc
sbb
add
cmp
mov
call
cmp
out
ror
mov
rcr
xchg
dec
jecxz
cmpsl
push
cmpl
dec
aam
push
lcall
in
push
push
and
mov
daa
xor
inc
push
fists
sbb
leave
mov
cli
cmp
into
gs
mov
and
jne
sbb
repnz
sub
adc
cmp
cwtl
push
rcrl
push
cmp
idivl
xchg
cmc
clc
jns
ss
movsb
test
dec
add
inc
dec
xchg
jmp
cwtl
das
lock
cmp
sub
mov
callw
dec
gs
stos
jge
xchg
repz
hlt
sahf
clc
shr
add
xchg
in
xchg
or
cwtl
push
fdivrs
xchg
pop
jbe
adc
inc
adc
in
clc
arpl
xchg
pop
push
out
cmpl
and
inc
add
in
movsb
push
mov
dec
cmp
add
clc
rcrl
lods
fiadds
pop
xchg
pop
movsl
addr16
jno
cmpsb
xor
cmp
or
lds
rolb
or
xchg
movsl
xchg
push
call
decb
push
mov
out
mov
xor
mov
push
pop
stos
leave
cs
inc
fidivl
iret
adc
jno
pop
daa
inc
mov
clc
jnp
fmulp
xor
stc
sbb
xor
gs
mov
xchg
xor
push
xchg
push
xor
rclb
mov
xor
inc
stos
cmp
mov
aad
pop
or
xchg
push
sub
aad
xor
out
push
dec
subl
pop
jb
out
mov
shlb
push
daa
enter
aad
scas
push
testb
in
mov
lcall
add
lahf
mov
inc
loop
or
test
test
test
xor
mov
clc
jo
lcall
es
lods
pop
mov
fucom
incb
cs
sub
lret
mov
test
xchg
pop
pop
jge
mov
xor
daa
fnstenv
pop
cmp
mov
mov
mov
outsb
cmc
ja
sub
mov
lods
stos
mov
stos
test
jb
push
push
mov
shr
out
ja
pop
leave
xlat
mov
ud2
loop
ja
sub
imul
push
cmp
xor
rcl
je
test
mov
sub
mov
mulb
jecxz
ss
push
cmpb
je
mov
repz
mov
xor
cmc
lea
jge
shl
cltd
sahf
adc
rcrl
mov
loopne
jg
sub
popa
outsb
and
inc
rclb
push
std
call
or
jnp
ret
add
addr16
out
out
dec
sti
test
xchg
mov
mov
int
mov
sub
lods
outsl
cmc
out
mov
je
jbe
cld
iret
mov
pop
mov
mov
mov
push
and
lret
lret
cmp
fisttpl
lcall
dec
adc
int3
rclb
xor
mov
ret
jl
sub
in
sub
outsl
test
xchg
out
cs
in
cmc
ds
xchg
int
sahf
sbb
mov
sub
adc
mov
xchg
mov
ret
je
push
ljmp
inc
mov
rclb
les
cmp
jmp
aaa
cwtl
pop
cltd
or
adc
pop
push
nop
mov
pand
pop
mov
outsl
xchg
cmp
sbb
adc
jb
lods
jmp
fstl
sbb
ret
aaa
sti
rcl
dec
xchg
xchg
test
int3
fnstcw
neg
jae
ljmp
jno
cmp
notb
scas
mov
cltd
mov
push
and
cmp
jbe
outsl
jge
push
mov
aaa
rol
jo
sbb
aam
loope
sahf
dec
inc
xchg
mov
sbb
xchg
movsb
pop
pushf
sub
xchg
mov
and
mov
imul
or
sbb
lcall
cmp
inc
sahf
xchg
dec
cld
lock
outsl
cwtl
xlat
outsb
lret
insl
aad
insb
cvtps2pi
js
add
mov
fld
pop
or
push
fistpll
out
lds
pop
ficoms
mov
inc
adc
mov
xor
mov
subb
cs
dec
filds
fwait
jecxz
test
cmp
lahf
insl
aad
inc
lcall
jbe
test
pop
dec
aaa
shr
pushf
dec
fst
insb
adc
mov
push
out
adc
mov
nop
mov
unpckhps
adc
xchg
loopne
cmp
lcall
subl
xchg
jno
xchg
jo
mov
testl
xlat
jecxz
test
pusha
and
ss
jo
pop
mov
or
mov
cmp
mov
fstpl
lar
sbb
pop
ds
sub
and
sbb
jmp
bound
fs
dec
jbe
divb
mov
arpl
xlat
mov
mov
clc
out
jp
cmp
mull
inc
adc
je
xor
sahf
aaa
cmp
leave
add
sub
ds
pop
scas
mov
jecxz
add
xchg
mov
jg
sub
cmp
or
pop
mov
movsl
clc
test
loope
and
dec
inc
fdivrs
mov
testl
dec
push
push
xchg
cmpsl
mov
cltd
stos
xchg
lret
pop
insl
cmpsb
in
inc
dec
fbstp
xchg
scas
and
loope
pop
inc
or
icebp
stos
mov
fstl
std
dec
shrl
repz
cwtl
adc
into
xor
jne
adc
and
push
dec
sbb
jnp
jae
cmp
icebp
sbb
adc
mov
mov
xchg
and
insb
jnp
xchg
jmp
lds
loopne
adc
sbb
pop
pop
imul
jns
loopne
push
fimuls
xchg
js
call
pop
inc
repz
fcompl
shll
add
sbb
cmpsl
xchg
in
lds
mov
fdivr
push
mov
or
pusha
icebp
sub
xor
dec
dec
pop
lea
xchg
pop
jns
inc
cmpsl
jae
add
sub
mov
dec
and
pop
imulb
cwtl
xor
leave
xchg
stc
add
sub
cmp
mov
dec
mov
inc
loopne
pushf
pushf
mov
mov
xor
xchg
jp
or
xchg
dec
cmp
call
divl
jmp
push
or
or
int
scas
xchg
xacquire
cmp
push
fwait
mov
in
and
idivl
and
cmp
push
sbb
subb
cmp
stos
inc
enter
sbb
push
les
mov
lock
adc
pop
aaa
xchg
jecxz
scas
js
cmp
aaa
into
mov
xor
shlb
ret
jo
adc
roll
adc
bnd
and
and
mov
insb
jg
sti
mov
jae
mov
nop
sbb
xor
sahf
les
pop
es
addr16
loop
cmp
jno
mov
lods
inc
movsl
out
push
jmp
fs
inc
lahf
or
push
out
pop
adc
std
js
and
push
mov
sbbl
pop
push
ljmp
push
add
cmp
cmc
cmp
ffreep
test
daa
cmc
mov
clc
adc
cmp
mov
lret
pop
repnz
iret
cmp
xor
and
add
addb
sbb
stos
jno
out
pop
das
inc
call
jle
inc
xlat
xchg
scas
mov
sahf
inc
mov
ret
hlt
outsl
xchg
mov
adc
mov
in
fcmovnb
iret
push
or
cmp
cwtl
popa
pop
mov
jae
sahf
inc
in
adc
xor
enter
cwtl
sub
dec
and
pop
and
cmpsl
das
cmp
rorl
ljmp
out
sub
mov
test
call
mov
mov
gs
lret
jmp
xchg
lods
mov
xchg
sub
xor
mov
push
xchg
cmp
xchg
loope
pop
push
mov
xor
fidivrs
aas
sbb
lods
subb
stc
nop
push
dec
cmp
pop
scas
sub
jmp
or
daa
push
add
pop
mov
pop
mov
std
mov
adc
xchg
cwtl
call
lea
push
je
cmpsb
mov
daa
xor
push
stos
sub
sahf
dec
fisubrl
pop
mov
xor
push
adc
or
sbbl
lea
aas
ljmp
outsl
and
or
xor
popf
inc
mov
sbb
ss
mov
xchg
sbb
cmp
xor
les
xor
ss
js
loope
jecxz
lock
mov
jb
ja
jno
add
jp
repz
mov
rol
js
enter
push
or
inc
fdivrl
xchg
push
lahf
arpl
inc
pop
aad
add
lods
mov
adc
outsb
inc
in
mov
sub
mov
sbb
cmp
ja
mov
pop
adc
jp
push
xchg
dec
lods
cmpl
mov
in
add
arpl
in
test
adc
mov
mov
cmc
and
mov
mov
cmc
mov
or
ljmp
inc
pop
lret
sub
in
lret
jbe
test
xchg
rcl
subb
mov
jmp
push
inc
repz
add
xchg
push
xor
shr
and
inc
lea
popf
mov
dec
shr
jb
loope
xor
scas
leave
nop
mov
out
lret
stc
imul
enter
std
pop
ja
adcb
cmc
ja
pusha
call
jl
mov
sub
jg
nop
addl
mov
add
xlat
inc
inc
sub
and
xchg
and
clc
mov
repz
stos
cmpsl
sub
rorb
imul
andb
sahf
hlt
inc
inc
pop
in
ret
or
ds
adcb
jno
mov
cmp
cmp
mov
lea
inc
rcll
icebp
icebp
movsb
repnz
ja
push
sbb
add
sarl
jae
clc
push
jle
leave
pushf
cmp
adc
outsl
and
jo
sahf
imul
adc
pop
or
in
incb
outsl
cltd
test
lods
mov
push
sub
aad
cltd
out
cld
ret
in
or
bound
loopne
push
icebp
insb
dec
lea
cmp
iret
andb
es
divb
xchg
xchg
mov
xchg
fidivrl
add
add
fbstp
xor
insl
add
scas
fwait
and
mov
je
or
xchg
shrl
mov
push
mov
out
das
aas
pusha
lcall
push
nop
popf
xor
or
mov
inc
stos
and
mov
mov
cltd
jl
jb
bound
into
pop
mov
outsl
aad
sbb
jnp
or
and
sbb
insb
mov
mov
in
jl
xchg
cmp
inc
jecxz
in
jo
test
jo
and
pop
xor
push
xchg
lock
ret
adc
shrb
xchg
xchg
stos
mov
fdiv
adc
jo
pop
das
sbb
and
add
jbe
mov
mov
mov
cmc
ror
in
xchg
ljmp
and
inc
or
hlt
sub
mov
pop
lret
xchg
cli
test
gs
xchg
scas
push
xor
jecxz
into
lahf
mull
std
test
es
cmp
cltd
adc
sbb
repz
in
subb
xchg
outsl
clc
xchg
inc
popa
insl
sub
stc
dec
sub
pop
mov
in
xchg
xchg
out
int
test
popf
xchg
mov
cld
push
xor
imul
fwait
test
push
js
and
cmp
frstor
shrb
adc
ss
fcomi
lahf
imull
jb
push
hlt
pushf
sbb
je
jl
pop
lods
adc
pop
enter
sub
insb
jmp
je
notl
push
dec
fistpll
stc
scas
pushf
stos
in
arpl
repz
pop
cmp
lret
and
cmp
std
inc
sub
pop
aaa
add
sbb
pop
adc
fmull
outsb
jo
cmp
cwtl
mov
ljmp
and
lret
push
jbe
dec
push
imul
lock
mov
mov
pop
int3
aaa
fidivrl
das
cmp
mov
icebp
or
mov
js
repnz
fcoml
sub
iret
cmp
xlat
loop
aas
pop
into
movsl
mov
fidivs
push
sub
pop
lret
bound
cmc
xorl
cwtl
repnz
pop
das
adc
test
dec
test
mov
pusha
push
cmp
mov
jns
inc
data16
ret
frndint
mov
outsb
subb
pop
sub
in
mov
push
push
jmp
jmp
in
or
xchg
jp
icebp
inc
adc
cmpb
jno
cmp
or
iret
pop
jne
ljmp
jo
addr16
mov
js
addr16
je
xchg
sub
xor
popa
sub
jno
inc
fsubrs
dec
scas
jl
cmp
dec
aaa
stos
fs
out
in
adc
inc
or
xchg
add
into
cmp
int3
sbb
jno
mov
divb
loope
popa
jbe
sbb
insb
in
xor
push
xchg
jle
not
aaa
dec
pop
imul
fbstp
aam
or
push
jecxz
test
and
adc
push
je
and
cwtl
push
stos
add
pop
sbb
mov
pop
xchg
pop
sarl
push
mov
xchg
sahf
jl
jmp
inc
cwtl
adc
mov
pop
pop
ljmp
jno
xor
fistpll
add
scas
jmp
popf
cmc
jge
stos
lcall
sbb
fwait
cmpsb
shl
adc
outsl
xchg
adc
xor
insb
mov
adc
xor
pop
pop
xor
lods
pop
xor
or
mov
pop
icebp
jne
jnp
sbb
int3
pop
test
enter
mov
std
mov
les
sub
pop
into
pop
in
mov
aam
int
cmp
pop
and
imul
mov
and
cltd
mov
cmp
pop
jp
pop
inc
scas
pop
mov
xchg
xor
pop
mov
jbe
loop
movsb
aaa
lret
or
in
adc
cmp
sub
les
rcrb
arpl
push
pop
cmp
mov
mov
lcall
icebp
lret
pop
dec
jg
dec
lods
cmovle
xlat
dec
cmp
out
adc
jp
in
mov
mov
inc
or
mov
sub
mov
inc
aaa
sar
movntq
dec
ja
adc
adc
cmpb
cld
pop
dec
dec
icebp
outsb
mov
add
stc
rcrl
dec
gs
inc
ja
mov
push
mov
imul
lret
mov
jg
sar
or
add
insl
shlb
jnp
pusha
push
sbb
rol
cmpsb
mov
test
in
mov
std
jns
and
cmc
cmp
mov
mov
jne
lret
jg
jl
sbb
shll
test
call
sub
inc
push
jmp
lods
sub
sub
loop
fistps
aad
fadd
push
xorb
in
lods
mov
mov
popf
lds
sub
pop
fcompl
idivl
sub
mov
inc
sbb
ret
sarb
imul
cmc
stc
nop
and
add
lods
sbb
lcall
lcall
in
std
xchg
pop
or
jae
inc
sbb
mov
aaa
call
xchg
sbb
jecxz
mov
loopne
out
cld
dec
ja
jle
lcall
fldenv
fldl
pop
jmp
add
rcll
mov
shr
dec
xor
xor
push
cmp
fcoms
aam
pop
repz
stos
mov
mov
popf
stc
sub
xor
int3
clc
dec
or
push
fstpt
fisubs
sub
or
rcl
imul
sub
outsl
std
pop
xor
lea
aaa
inc
pop
mov
push
adc
inc
xchg
cmp
add
dec
mov
xor
aam
xchg
mov
cmpb
leave
push
xchg
in
imul
idiv
aad
test
jecxz
pusha
enter
dec
cmp
neg
stos
cmp
sub
iret
gs
fmuls
dec
dec
and
or
dec
xchg
nop
xor
sbb
es
mov
andb
ja
or
and
popa
in
inc
stos
mov
push
dec
dec
aaa
sub
sbb
inc
jp
add
jle
test
jb
pop
xchg
fists
adc
loope
jae
jbe
clc
lods
adc
jbe
jl
stos
stos
jle
mov
outsb
cmp
fmuls
xchg
ja
or
call
aaa
hlt
dec
pop
aam
jae
mov
jns
push
xchg
mov
mov
shl
jns
scas
pop
sub
adc
fimull
and
shlb
mov
lcall
add
xrelease
mov
pcmpgtb
mov
mov
fcoms
inc
gs
sub
xor
out
sbb
orb
xchg
adc
je
ljmp
and
and
subl
cmp
inc
dec
dec
xchg
iret
mov
push
cmp
dec
pop
lods
hlt
fidivs
or
sub
js
pushf
stos
mov
sub
ret
add
jnp
testb
mov
js
jne
or
jp
insl
inc
and
ss
fnstcw
lds
mov
aad
xchg
adc
imul
xor
hlt
push
leave
pusha
lods
sar
lret
jl
pop
mov
jns
std
and
je
clc
fdivs
lret
andl
sub
jo
insl
push
sbb
ror
cmp
pop
xor
in
push
popa
lret
jo
mov
lret
pop
sahf
pop
stc
pop
out
xor
lds
dec
test
mov
test
in
cmp
adcb
push
sub
jb,pt
out
filds
test
mov
fldt
and
cmpsb
ss
mov
stos
cmp
clc
mov
icebp
sbb
jle
mov
jb
aas
leave
push
call
and
test
repz
xchg
decb
or
insl
dec
in
pop
xor
hlt
loopne
test
sahf
pop
out
add
sbb
push
adc
mov
in
and
add
mov
mov
mov
stos
repz
stos
pushf
mov
test
mov
aam
fisttpl
push
push
add
push
scas
icebp
shr
or
xor
stos
sub
dec
and
jp
xchg
inc
lods
inc
das
jecxz
jb
xchg
xor
mov
push
cmpsl
testl
scas
sbb
add
int
mov
imul
enterw
imul
loopne
sarb
inc
inc
sbbb
insb
lea
clc
std
xchg
jno
push
in
xor
ja
cltd
push
push
pop
pop
mov
pop
lcall
dec
in
push
in
dec
cmp
mov
push
mov
jmp
or
sub
arpl
jne
loop
push
dec
sub
sbbl
pop
jmp
jbe
inc
push
cmp
mov
inc
aas
push
test
popf
lods
in
or
iret
in
das
add
cwtl
das
xchg
aam
sub
pop
and
jnp
and
sbb
lds
shll
and
aaa
js
push
cmp
int3
dec
xor
xchg
pop
leave
lods
push
movsb
das
loop
imul
je
insl
adc
sbb
mov
cmp
ret
cld
outsl
sarl
lea
mov
popf
fwait
popa
mov
aaa
and
jecxz
pop
adc
cmpsl
jle
jb
sbb
or
lods
pop
jmp
jnp
xor
lea
scas
std
cmp
out
faddl
dec
xchg
leave
shrl
scas
loopne
add
cltd
in
lret
movsb
popa
sub
clc
add
and
hlt
or
push
rolb
cmc
mov
fisttpl
xor
sbb
sbb
stc
lods
sbb
xchg
push
leave
mov
pop
lods
and
xchg
mov
cltd
pop
and
push
fst
addr16
aas
lcall
pop
out
cmp
adc
pop
cld
xchg
dec
sbb
xor
add
jecxz
gs
jle
rcrl
adc
outsb
pop
mov
pop
ja
dec
pop
and
xor
jge
jne
inc
into
incb
imull
enter
dec
inc
ss
adc
fldcw
and
loopne
jmp
roll
imul
sbb
out
sbb
mov
mov
aam
adc
add
jo
mov
push
xor
mov
jmp
bswap
jne
inc
push
and
push
das
jge
ja
jbe
xor
lahf
xor
mov
jg
or
mov
mov
fsubrl
dec
or
add
cltd
mov
sub
mov
jmp
scas
add
lock
push
xor
adc
add
out
mov
sub
pop
mov
xlat
std
insb
adc
mov
adc
dec
mov
mov
inc
rcll
pushfw
popa
push
mov
lret
bound
in
xchg
adc
dec
push
dec
push
test
jge
mov
fwait
int3
aad
scas
push
std
pop
imulb
je
jo
pop
jge
test
and
imull
mov
sbb
leave
movsl
dec
pop
fcoml
lret
cmpsb
lock
or
inc
cli
jecxz
mov
imul
jg,pt
xchg
sub
add
fdivrl
pushf
or
test
in
nop
jae
inc
bound
pusha
jo
push
adc
push
sbb
popa
movsl
jecxz
and
push
data16
scas
mov
ret
xor
cmp
sti
xlat
insl
in
lea
mov
dec
xchg
out
sbb
xchg
dec
stos
outsb
mov
mov
roll
jnp
stos
mov
lret
fwait
pop
sbb
mov
mov
iret
movsl
cmpsl
mov
push
roll
inc
andl
pop
sti
pop
jge
mov
mov
cmpsb
adc
pop
jl
das
inc
sbbb
mov
jns
dec
bound
mov
ja
push
pop
inc
fimuls
xor
add
jge
jne
push
insl
rcll
out
loop
subl
xrelease
shll
lret
pop
cmpsb
push
in
rcrb
push
and
mov
xchg
cmp
data16
cltd
cmc
dec
push
je
test
xchg
xchg
out
pusha
leave
and
repz
in
xchg
push
lret
jbe
or
movsl
add
mov
int
je
neg
and
mov
lods
mov
mov
shr
enter
loop
xchg
je
popa
test
fwait
adc
in
pop
addr16
aas
lret
lds
cmp
fcompl
mov
or
imul
pop
int
jbe
lock
xchg
cmp
or
lret
outsl
ss
mull
sbb
jns
inc
fcompl
daa
bound
jmp
sbb
into
mov
icebp
insb
sarb
dec
push
pop
rorl
mov
pop
inc
sub
fdivl
inc
dec
mov
add
jecxz
sub
xor
sahf
or
shrb
lock
fistpll
imul
sub
mov
lods
jo
or
cs
and
ret
mov
fidivrs
add
sub
out
rcl
je
mov
xor
xchg
jecxz
ret
cmp
test
inc
fcmovu
mov
ljmp
jno
xchg
aam
fidivs
mov
dec
push
xchg
mov
ficomps
in
push
pop
dec
ds
jns
fidivl
pop
inc
add
adc
enter
lahf
fwait
or
sti
out
popa
xchg
cmp
sbb
sub
shll
adc
jp
cli
pop
sub
fisttpl
nop
mov
daa
sarl
lock
lds
jnp
jb
shrb
push
jmp
sbb
icebp
subl
inc
lea
mov
pusha
inc
adc
mov
mov
iret
aaa
push
add
shrb
and
lock
add
das
arpl
mov
les
ret
xchg
jl
cmpsl
test
dec
data16
mov
vpsraw
jg
test
cmp
sub
sbb
hlt
fwait
ss
lods
nop
xchg
rclb
push
aam
repz
out
aas
aam
mov
push
repnz
lds
sti
jge
jmp
rcrl
loopne
cs
xchg
pop
out
xchg
jg
jg
loop
mov
mov
xor
push
ret
enter
in
and
mov
sarl
or
fdivrl
jo
push
xor
mov
mov
push
int
mov
out
out
popa
push
test
dec
dec
mov
subl
repz
mov
jg
ss
mov
lret
adc
lahf
scas
jno
lret
fimuls
outsl
inc
cltd
out
jae
leave
imul
loopne
cmp
push
sub
scas
mov
test
sbb
push
xchg
cs
sub
int3
cmc
mov
fwait
xchg
in
orl
sub
sbb
adc
cmp
xor
popf
jae
cmpsl
pop
lahf
in
mov
cli
je
mov
test
sbb
fidivrs
xchg
clc
xchg
or
cmpsb
pop
push
cmp
stc
sub
fcom
mov
sbb
sbb
jnp
insl
add
into
pop
push
push
jmp
addr16
movsl
mov
jno
add
push
ljmp
sarb
inc
cmp
aas
adc
mov
push
mov
xchg
test
sbb
jno
cs
insb
nop
scas
xchg
dec
popa
fsubrl
lret
xchg
ljmp
pushf
sub
pop
jno
lea
cmp
insb
lods
xchg
mov
jl
shll
inc
mov
jbe
mov
lods
sub
adc
shll
xor
lock
push
push
adc
or
shr
or
loop
addr16
and
pop
loopne
fadds
shrl
cmp
ljmp
cli
rorb
sub
fsubl
mov
addb
jbe
mov
loope
add
aaa
das
push
add
les
xor
lods
inc
jnp
arpl
cmp
add
call
enter
addr16
push
movb
inc
aas
add
out
inc
mov
or
pop
xor
movsl
mov
sti
mull
imul
nop
jle
dec
daa
mov
mov
xor
inc
jae
push
push
push
movsb
cwtl
das
fsubrs
int3
iret
mov
mov
pop
xchg
das
xchg
add
mov
cmp
in
lea
adc
cli
mov
lcall
mov
push
jle
es
aam
hlt
adc
mov
adc
sbb
je
push
inc
loopne
or
xor
shlb
pop
imul
jmp
add
xchg
cs
cld
lret
xor
lea
sub
lahf
aam
shrb
mov
push
inc
inc
in
movsb
aaa
dec
or
adc
stc
mov
mov
xchg
decb
and
sbb
add
cmp
inc
mov
out
adc
fisttps
jp
push
pusha
jp
imul
push
sbb
aad
or
stc
inc
mov
fwait
push
ds
mov
mov
pop
xor
cs
pop
mov
aam
add
dec
add
stos
sarl
jl
mov
mov
or
sbb
repz
xchg
and
sarl
repz
mov
sub
daa
ljmp
dec
ficoms
test
inc
sbb
mov
sbb
xchg
insl
push
and
or
jle
jno
mov
out
mov
lret
xor
mov
add
cld
inc
cld
loope
ret
sbb
mov
out
cwtl
and
std
out
aas
push
inc
and
adc
js
data16
xor
lea
outsb
subb
add
cmpsl
scas
sbbl
fucomi
std
or
add
nop
or
jae
sbb
shlb
sti
mov
inc
mov
xor
test
cltd
cmp
adc
cmp
jge
sarb
into
cs
test
mov
inc
and
sahf
mov
adc
lret
xchg
divl
pop
xor
jmp
into
adc
test
dec
mov
xchg
mov
jg
mov
push
pushf
cli
scas
fistl
lods
aad
ja
jecxz
fnstenv
pop
popf
adc
divl
stc
loopne
dec
in
xor
mov
or
mov
iret
mov
cmc
nop
aaa
inc
in
inc
jmp
jp
pop
and
fbld
shlb
gs
mov
ljmp
insl
enter
fisttps
jno
into
mov
sbb
ret
pop
out
and
mov
ret
inc
flds
cmpsl
pusha
jnp
pushl
dec
lods
testl
or
loope
jne
cmpsb
test
out
xlat
cmc
jecxz
out
test
mov
push
sbb
inc
pop
sbbl
icebp
int
daa
aas
xchg
andb
outsl
mov
loop
je
push
push
mov
scas
jecxz
sbb
scas
call
rcl
and
hlt
idiv
push
dec
xchg
cmpl
fisubl
push
data16
stos
mov
and
cs
xor
jmp
sbb
mov
pop
lcall
mov
popf
loope
cltd
std
adc
jo
sbb
pop
fnstcw
dec
movsb
add
mov
inc
push
lds
xor
push
insb
sbb
mov
aaa
hlt
dec
call
pop
in
sub
je
outsb
pop
cmp
mov
push
loope
cmp
jecxz
call
scas
xchg
es
cmp
ret
adc
and
jns
sti
mov
inc
fistl
mov
or
cli
sarl
adc
push
mov
gs
imul
sub
inc
sub
mov
js
push
aad
aas
mov
in
in
orl
or
stc
pop
xchg
cs
or
test
sub
xor
sub
in
clc
leave
data16
mov
pop
test
call
sbb
jnp
filds
pop
cmp
and
lock
mov
fs
adc
clc
or
test
add
mull
ffree
pop
lret
popf
mov
mov
mov
loop
lods
adc
mov
fstpl
jnp
in
mov
in
imul
push
fadds
add
shlb
das
and
mov
clc
icebp
push
xchg
mov
cmp
jp
repz
dec
fadd
xchg
xchg
sub
daa
les
bound
hlt
mov
stc
inc
iret
cli
icebp
test
out
push
inc
pop
not
pop
push
pop
mov
jnp
cld
push
fxtract
or
stos
push
flds
mov
push
jmp
jnp
xor
enter
push
mov
mov
inc
mov
or
idiv
addb
jge
push
jno
mov
ja
fsubl
or
lock
mov
movsl
pop
or
jg
xchg
pop
jno
jmp
cmp
std
pusha
push
dec
mov
neg
lret
enter
int3
mov
pop
gs
mov
or
push
lds
cmpsl
adc
push
ret
dec
jge
dec
mov
outsl
mov
jnp
adc
pop
and
shrl
push
repz
jbe
pop
cld
daa
call
nop
idiv
jb
std
add
lahf
fcomps
daa
mov
aad
leave
inc
xchg
sbb
leave
popf
mov
rorl
pop
mov
inc
xchg
je,pn
dec
insl
jno
sub
xchg
repnz
push
test
cmp
stos
xlat
adc
mov
mov
xchg
pop
in
adcl
mov
fldpi
add
jg
repz
fimull
pop
test
add
mov
push
push
push
test
movl
jb
sbb
mov
mov
mov
bound
pop
ja
insl
rcl
sub
xchg
outsb
push
xor
lea
outsl
pop
jmp
sub
into
notb
test
icebp
xchg
adc
mov
add
and
shlb
inc
mov
sbb
stc
or
add
outsb
dec
jmp
sarb
in
jo
jge
lret
xchg
jae
ret
leave
jne
movaps
xor
fwait
into
lods
push
in
pop
pop
lods
rorb
mov
gs
push
pop
in
test
aad
cmc
nop
aas
das
cmp
in
gs
int
push
testl
enter
mov
mov
add
in
in
mov
nop
pop
add
mov
sub
dec
jnp
inc
and
xor
cmp
ds
pop
movzbl
outsl
in
lea
inc
ljmp
fidivrs
pushf
cli
xor
mov
pop
xchg
mov
pop
imul
sbb
cs
sub
jne
testb
sbb
dec
push
mov
jb
mov
test
mov
and
pusha
lahf
imul
cmp
cmpsl
sub
cmp
in
add
add
cmpsl
cmp
stos
push
scas
pop
and
in
mov
cmpsb
das
es
adc
movl
sub
xchg
idivb
mov
mov
stos
aas
test
xor
xchg
adc
mov
dec
imul
xor
add
repnz
pop
push
xlat
xchg
adc
stos
hlt
adc
into
push
fisttpll
sub
idivb
lods
xlat
push
ficomps
push
bound
div
fldenv
dec
lcall
sub
pop
out
dec
jns
aas
leave
mov
mov
in
popa
sub
mov
test
outsb
jge
sbb
fsubl
js
or
push
mov
pop
sarl
test
mov
push
pop
or
mov
loope
scas
idivb
popa
lahf
sub
sub
jge
jns
add
ljmp
inc
in
push
fildl
xchg
adc
out
inc
and
jbe
cwtl
scas
push
fbstp
adcb
xor
rcl
rolb
aas
cmpsl
arpl
popa
jns
in
sbb
sbb
pop
jae
or
js
idivb
jns
rcl
ljmp
mov
stos
rcll
mov
repnz
test
or
test
test
xchg
push
cs
or
fwait
test
outsl
loop
pop
adc
mov
xchg
fidivs
enter
push
cmc
mov
sub
xor
xchg
push
jne
or
clc
adcl
mov
or
xchg
mov
jno
mov
pop
aaa
pushf
stc
sub
sub
mov
or
cmp
stos
inc
mov
orb
pop
lods
add
mov
movsb
and
jg
rorb
aad
and
dec
sub
and
ljmp
aas
push
mov
sbb
push
cmp
jge
xor
inc
pop
xor
movsb
inc
sub
mov
xchg
xlat
or
das
xlat
jl
in
mov
sbb
push
ja
dec
adc
or
lods
jno
imull
mov
cmp
mov
dec
inc
out
fsubrs
lea
or
mov
inc
popa
movsl
jmp
or
stos
mov
adc
mov
push
pop
mov
dec
and
fcomi
mov
push
mov
popf
clc
inc
mov
mov
aad
dec
pop
sub
out
jp
and
cwtl
xchg
out
sub
xor
arpl
sub
fadds
and
repnz
lea
xchg
push
lods
out
push
pop
dec
mov
mov
inc
push
jecxz
xchg
xorl
stos
loope
scas
iret
fistpl
fisubs
adc
test
ja
and
push
or
sti
xor
notl
jg
lds
cld
pop
cmp
and
bound
mov
or
fwait
sahf
dec
pop
dec
adc
pop
les
lock
ret
mov
into
ja
add
insb
jnp
jbe
jp
sbb
pop
pop
xchg
in
cmpsb
cmp
jecxz
popa
dec
dec
insl
cmp
in
dec
push
sbb
jle
adc
adc
push
xor
mov
adc
stos
popa
add
dec
scas
call
outsb
icebp
sahf
and
add
push
xchg
inc
shrl
daa
rcl
movsb
and
inc
std
pop
jns
mov
mov
imul
daa
jne
pop
pusha
in
andl
in
test
rcl
xchg
scas
add
push
in
mov
xchg
push
dec
int
dec
dec
push
push
gs
in
leave
dec
js
xor
test
call
xchg
js
mov
push
jge
pop
mov
sahf
xor
in
pop
xchg
and
mov
test
or
sbb
enter
or
out
xchg
cmp
xchg
mov
int
dec
fidivl
jp
lods
xor
std
push
daa
mov
je
add
xor
addr16
fcompl
loopne
sub
and
je
fs
or
or
pop
int
push
adc
pop
push
popa
mov
test
notl
movsl
cmpsl
sbb
inc
adc
mov
lcall
mov
adc
mov
testl
clc
mov
ret
pop
jg
std
packssdw
fs
ds
sahf
push
mov
call
nop
mov
inc
dec
mov
in
jmp
or
das
mov
sub
pop
xchg
nop
jp
sbb
insb
mov
inc
dec
scas
push
pushf
and
mov
in
adc
filds
jbe
inc
cs
cld
mov
repnz
mov
insb
imul
pop
imul
jge
lods
pop
push
sbb
mov
mov
sub
sbb
notb
inc
add
test
xlat
data16
into
jno
stos
push
xchg
adcl
push
push
ds
xchg
xlat
cmc
and
jns
out
lret
xchg
scas
cld
stc
fsubrs
mov
outsl
fcoms
xor
jbe
pop
hlt
cmp
push
cs
std
cmp
pop
jg
jmp
ds
imul
add
mov
shrb
inc
xlat
outsb
jae
inc
pop
mov
rcrl
lret
into
ss
rcrb
or
mov
dec
jecxz
xchg
add
push
xchg
rcll
xor
mov
jl
mov
fidivrl
nop
daa
movsb
nop
in
inc
jne
fnstsw
gs
jbe
clc
cmp
sub
pop
xor
mov
dec
cmpsl
aaa
bound
jge
in
xor
jmp
int3
movsl
cmc
shrl
int3
adcl
cmpsl
rclb
add
and
iret
mov
loopne
sbb
in
nop
gs
addb
lods
les
scas
inc
fmull
mov
js
lret
lcall
inc
xchg
cmp
dec
or
dec
roll
mov
lret
stc
mov
pop
mull
xlat
xlat
test
jns
clc
inc
inc
pop
jne
cmpsl
sbb
repz
sub
xchg
mov
mov
jbe
xor
or
jne
adc
inc
test
sub
cmpsb
movb
xchg
std
arpl
pusha
rolb
lahf
push
out
movsb
xchg
pop
sub
xchg
add
sbb
cmp
and
out
mov
js
sti
cmp
xchg
adcl
push
sbb
pop
dec
mov
fnstcw
ljmp
pushf
sti
arpl
insb
cmc
popf
mov
push
call
mov
inc
push
xchg
frstor
jne
sbb
mul
ljmp
xchg
ret
les
fbstp
repz
xchg
es
movb
jecxz
arpl
or
ja
jle
cmp
aad
roll
sbb
test
and
add
or
mov
scas
jg
jge
inc
adc
sub
in
in
push
in
sub
push
add
nop
hlt
xchg
jae
sti
loop
fstl
int
xchg
or
ret
xor
mov
ljmp
mov
pop
jg
or
shll
xchg
dec
dec
lds
and
lea
mov
xchg
rorl
shlb
sarl
inc
cmp
mov
lret
xor
fisttpll
push
jl
fadd
repnz
and
push
aam
xchg
or
xchg
cmp
ljmp
mov
and
fnsave
jmp
mov
cmp
and
mov
jno
jne,pn
fwait
aam
mov
aaa
ds
sti
push
mov
imul
mov
cmpsb
stc
je
push
loop
jno
out
push
ret
fistps
push
addr16
cltd
or
mov
int
and
push
pop
mov
pop
jne
test
scas
pop
xor
jnp
mov
mov
mov
test
mov
or
insl
sbb
movsb
push
out
nop
adc
xor
inc
je
repz
and
dec
push
test
arpl
inc
mov
mov
cs
arpl
mov
lods
dec
bound
cmc
scas
call
aad
jecxz
jp
xor
push
mov
jge
insl
sub
lds
int3
pop
hlt
std
add
xlat
jno
sbb
mov
pop
adc
or
push
xchg
sub
dec
dec
mov
xchg
jno
pop
or
aam
pushf
xor
push
and
pop
mov
ja
sti
rcrl
mov
sbb
mov
mov
insb
inc
iret
dec
outsl
shl
aad
repz
aad
fwait
mov
push
and
pop
adc
inc
xchg
roll
cmp
sbb
mov
add
push
sbb
add
mov
dec
push
enter
orb
test
add
mov
repnz
adc
arpl
dec
aas
push
inc
pop
xchg
mov
xchg
cltd
mov
aas
mov
adc
add
cmpsb
cmc
loopne
xchg
xlat
xor
cmpsl
std
mov
cmp
mov
mov
movsl
dec
push
mov
push
or
ds
jmp
enter
push
mov
push
dec
sets
xchg
adc
jae
sbb
ror
clc
and
leave
sbb
pop
mov
mov
mov
dec
popf
std
push
xchg
ss
out
dec
mov
mov
fisubrl
sub
pop
dec
or
and
aad
jg
dec
inc
xor
mov
insl
scas
inc
mov
pop
xchg
mov
popa
inc
push
clc
mov
es
nop
test
lock
and
adc
push
sarb
ljmp
das
push
shlb
sub
insl
mov
inc
in
dec
dec
ja
push
in
jge
cmp
adc
jae
xor
and
or
xchg
push
xchg
andb
outsb
fiaddl
dec
or
adc
jo
jae
leave
lea
fcoms
test
je
xor
aad
insb
add
sti
aas
xor
mov
pop
ret
xchg
mov
inc
xlat
mov
fsub
adc
mov
sahf
icebp
mov
out
mov
mov
out
icebp
mov
roll
stos
inc
ljmp
divb
test
test
add
lahf
out
xchg
nop
cmp
das
sub
rcr
sbbl
inc
add
xchg
mov
pop
mov
lret
dec
pop
repnz
inc
ja
clc
mov
pop
out
lret
imul
xchg
out
sub
and
inc
sti
pop
filds
jne
xchg
sub
es
push
ds
jecxz
pushf
outsl
dec
mov
nop
aas
and
sbb
int
and
je
xchg
mov
inc
adc
sti
push
jp
or
loop
pop
adc
and
pop
fadds
sahf
or
push
sub
and
jge
push
jnp
mov
fiadds
ret
sub
pop
lret
ret
imul
int
cmpsl
in
push
mov
out
mov
jmp
fsubrs
cld
loope
fistl
mov
and
fs
stc
inc
inc
sbb
mov
push
outsb
int3
mov
sbb
xchg
outsb
xor
subb
xor
mov
add
jmp
loop
scas
push
stc
sahf
xchg
cmp
repnz
lods
outsb
enter
dec
scas
dec
xchg
sarl
inc
ret
xchg
repnz
pop
aaa
push
add
ja
std
push
sbb
aad
jge
sbbl
stos
mov
xor
in
std
cmpsl
jbe
adc
mov
hlt
mov
bound
das
out
enter
xchg
add
xchg
xchg
mov
test
cmp
test
xchg
fcoml
movsl
stc
or
pop
push
jge
pop
das
add
imul
push
pop
xor
cli
cmp
pop
stos
ret
test
mov
mov
rclb
inc
add
out
fsubrp
dec
pop
dec
popa
jo
popf
test
outsb
stos
push
lret
sbb
mov
jmp
shrb
cmp
sub
jecxz
in
adc
mov
and
push
push
inc
sub
xor
lret
testb
popa
and
mov
lock
es
aam
mov
js
mov
les
cwtl
jb
jmp
mov
push
pop
inc
test
xorl
outsl
rcl
lock
sub
push
out
dec
cmp
mov
cmpps
cmp
jno
rorl
cmp
or
adc
fistl
inc
and
push
fdivs
sub
pushf
push
or
add
push
or
sbb
sub
xor
imul
inc
out
inc
mov
xchg
sub
out
jnp
add
ret
or
inc
or
mov
jne
push
push
in
call
scas
fsts
or
repnz
jb
dec
sarl
testl
arpl
loope
or
pop
lcall
insb
call
rclb
cmp
lods
dec
fidivs
test
into
pop
popf
xor
lock
pusha
scas
pop
in
mov
data16
add
leave
add
adc
insl
lds
lcall
or
bnd
shrl
xchg
dec
cmc
call
xchg
cmp
xor
addb
in
mov
stos
cmp
fsubrs
aas
mov
arpl
or
cmp
pop
xchg
mov
imul
pop
and
ja
es
mov
std
jmp
and
xlat
and
dec
loope
dec
daa
iret
sbb
mov
sub
push
movlps
shlb
xlat
outsb
bound
cmp
out
dec
mov
mov
adc
cmp
dec
movsl
mov
outsb
or
dec
rcll
add
dec
call
fwait
pushf
xor
cltd
cmp
xchg
fwait
xor
nop
jl
scas
mov
sub
inc
dec
mov
je
jns
xchg
mov
mov
cmovs
push
or
ljmp
jb
cs
bound
stc
int3
mov
test
addr16
inc
ret
ds
sbb
mov
enter
in
rcl
in
jg
pop
pop
push
or
xor
mov
sahf
sbb
sbb
icebp
icebp
sbb
movsl
js
daa
push
test
jne
lea
sarl
pop
jp
or
cmpsl
xlat
jb
pop
push
insl
add
push
arpl
cmp
mov
pop
push
jbe
or
pop
add
xchg
stos
pop
lahf
add
jge
mov
cltd
ret
hlt
dec
divl
movsl
dec
je
adc
xchg
xchg
repz
inc
and
mov
rsm
xorl
cmpsl
sarl
add
push
hlt
xor
xor
and
lea
lret
jg
push
test
lret
inc
or
push
pop
imull
adcl
dec
addr16
fldcw
inc
inc
sbb
cmpsb
inc
xchg
sti
ja
out
or
sti
mov
add
cwtl
mov
in
sbb
cmp
pushf
mov
cmp
sbb
testb
fldcw
pop
cld
js
and
dec
divb
lret
mov
hlt
add
mov
pusha
shlb
add
cs
push
data16
pop
adc
mov
lods
subl
loopw
lea
sarb
dec
sub
and
lock
pop
rclb
push
push
xor
gs
in
mov
inc
and
lods
insl
mov
js
scas
jnp
fcmovnb
sub
ja
into
mov
shrl
pushf
stos
jbe
jge
sbb
cli
movsb
sbb
push
inc
pop
iret
addr16
scas
hlt
mov
cli
es
adc
out
or
or
ja
into
xor
in
pop
stos
add
loope
add
mov
dec
and
xchg
push
sbb
insl
push
or
xor
lcall
xor
sub
xchg
sub
lock
fsubrs
rclb
aaa
adc
mov
pop
sbb
in
cmp
jae
scas
mov
sbb
sti
inc
fsubrl
imul
sub
lea
ss
out
and
bswap
adc
rorl
test
pop
or
xchg
dec
outsb
out
data16
cs
mov
mov
adc
pop
or
scas
xchg
inc
add
lcall
inc
sbb
xor
in
adc
rcrl
mov
push
daa
xor
aam
and
jo
fisttpll
ret
arpl
cmp
lcall
dec
jno
repz
jl
push
inc
inc
int
add
mov
sahf
jns
jmp
pop
fistpl
sar
andl
and
adc
xchg
in
pop
xchg
pop
dec
aaa
fwait
out
push
or
hlt
xchg
in
mov
rol
xchg
mov
inc
adc
sub
das
inc
inc
fdivs
pop
fwait
push
mov
test
xor
dec
adc
testb
mov
into
jecxz
xchg
mov
mov
jne
dec
out
sbb
out
int3
mov
push
and
test
shll
dec
and
push
cmp
jle
mov
cltd
movsl
stos
ret
jmp
movsb
rorb
inc
push
or
stc
add
jae
pop
xor
cmp
sbb
mov
shll
sahf
mov
add
aas
jg
mov
jnp
cmp
sarb
mov
ja
call
jp
inc
xlat
cmp
fcmove
add
sbb
cmpsb
push
pop
mul
cmp
add
mov
ds
loopne
adc
pop
inc
lock
adc
xchg
jmp
fidivrs
sbb
sbb
imul
fstps
push
lods
lds
stos
push
jb
ljmp
push
dec
cmpsl
or
push
sub
mov
xor
lds
out
dec
subl
jp
or
imul
xor
pop
in
gs
jl
xor
lret
jle
and
jg
jg
adc
mov
sub
test
lahf
mov
dec
icebp
mov
fistps
ret
jne
int3
rorb
fyl2x
push
sbb
sub
sub
push
out
int
das
xchg
in
in
hlt
mov
lds
in
xor
popl
call
outsl
xor
dec
inc
in
inc
aad
nop
push
out
das
sub
jo
sub
xchg
std
jle
mov
aam
dec
mov
add
pop
inc
xchg
xlat
aad
fcomps
or
jnp
rorb
fdivrp
push
into
fistpl
sub
jae
inc
pop
mov
add
cmp
fdivrs
addl
test
cmc
sbb
mov
into
cmp
jne
inc
inc
sbb
cltd
ss
nop
test
cld
jnp
test
pop
sub
iret
xchg
hlt
mov
sbb
cmp
inc
jno
shll
push
jmp
pop
mov
imul
mov
add
orb
cmpsb
outsb
imul
mov
xor
pop
dec
xchg
xor
cmp
inc
clc
mov
js
mov
ja
add
gs
dec
cltd
addl
cmp
or
or
popf
and
add
mov
pop
inc
scas
enter
cmp
sub
call
imul
outsl
add
push
mov
push
das
cmp
and
push
test
scas
xor
mov
jg
notb
jl
inc
sub
std
cs
or
cld
shll
addr16
add
inc
mov
fisubs
or
faddl
push
fdivrs
mov
jne
dec
mov
jns
clc
add
pop
push
lea
xor
fadd
jo
add
in
aas
popf
pop
cwtl
imul
mov
sub
cmp
mov
lret
inc
xor
and
mov
pushl
leave
fidivl
nop
jl
sub
mov
jnp
push
call
inc
mov
push
fs
jl
scas
pop
inc
xchg
cmp
mov
xlat
in
ret
test
push
add
fwait
gs
loop
add
je
lea
test
sti
daa
xlat
mov
mov
ret
outsl
mov
mov
jo
stc
imul
pop
fimuls
outsl
iret
aam
in
or
adc
and
je
jle
mov
sarb
xchg
dec
and
dec
pop
add
mov
dec
xchg
add
test
shlb
inc
inc
mov
push
sbb
scas
movsb
dec
lea
or
jne
shrb
and
inc
in
and
adc
fdivs
je
jecxz
in
popa
aam
outsb
loope
jp
push
mov
pop
fildl
filds
sbb
divl
lret
fwait
mov
push
fcomps
push
jbe
out
and
lea
jle
push
test
fists
add
fstps
call
aam
popa
add
lods
in
aad
mov
inc
inc
jae
clc
sub
addr16
clc
sahf
mov
andl
ja
test
ret
in
scas
les
movsl
lahf
xor
and
icebp
cmp
xor
arpl
xchg
mov
notb
loop
sahf
add
pop
pop
xor
stos
lcall
in
shll
subb
loope
dec
pusha
add
push
jns
sub
xor
xchg
xchg
xor
add
leave
push
add
inc
fdivrp
ret
sub
adc
ficompl
bswap
loop
fst
imul
xchg
int
fistl
aad
lock
std
insl
iret
mov
lret
sub
mov
rsqrtps
cmp
lea
icebp
aaa
jle
aam
xchg
push
bound
xor
cli
jbe
add
adc
sub
cmpsb
dec
imul
push
lahf
flds
lds
xchg
jae
inc
stos
xchg
repz
incl
std
mov
paddsw
push
or
aas
std
mov
test
call
sarl
push
fdivl
pop
adc
push
cmp
jb
faddl
pop
and
and
mov
popa
xorl
push
pop
dec
int3
push
ret
pop
mov
lret
jp
mov
mov
push
outsb
stc
shl
dec
std
or
adc
cmp
xchg
pushf
cmpsl
and
inc
fucom
inc
jae
ja
push
mov
xchg
leave
data16
std
adc
insb
jle
dec
add
ret
cmpsl
or
testl
add
js
test
cld
pop
or
ret
bound
or
dec
loopne
out
mov
xor
aad
insb
add
aam
inc
mov
push
cmp
cmc
inc
pop
adc
inc
adc
fdivrl
outsl
xor
nop
mov
xlat
ja
dec
or
mov
and
sub
push
xor
stos
jae
mov
aaa
pushf
or
ss
into
pop
mov
mov
xchg
test
xor
xor
sub
lds
dec
arpl
mov
lahf
scas
nop
cld
orl
and
xor
ljmp
mov
jecxz
pop
mov
roll
fs
xchg
ret
lret
mov
repz
sbb
fmuls
sahf
out
js
add
cmp
xor
call
aad
lret
mov
jnp
mov
add
push
dec
inc
jmp
fadds
mov
loopne
or
dec
out
push
imul
repnz
jge
add
inc
pop
jge
loope
fdivrl
xor
ret
xor
arpl
sbb
cmp
cmp
insb
test
and
icebp
push
jne
aaa
stc
mov
roll
out
push
sahf
and
call
pushf
lods
push
in
fucom
mov
push
mov
push
adc
dec
jns
lds
ljmp
mov
jecxz
jmp
push
int
push
sbb
sbb
sbb
aad
sbb
cwtl
icebp
pop
or
mov
ret
sub
xchg
sub
repz
divb
in
mov
cmp
pop
imul
popa
in
out
jle
and
daa
cli
push
push
ja
sub
jl
push
fbstp
xchg
insl
sub
nop
movsb
mov
dec
pop
filds
mov
fs
bound
outsl
mov
ret
imul
push
clc
insb
adc
sbb
sub
dec
jbe
mov
int3
mulb
cltd
outsl
cli
aad
jnp
mov
pushf
push
repnz
pop
inc
movsb
inc
mov
push
aam
daa
xor
push
sbb
add
add
push
pop
fisubl
dec
inc
cmpsb
scas
cs
lea
sbb
cli
imul
mov
push
stos
sub
add
mov
test
xor
jp
loope
pushf
ret
data16
cmpsl
ljmp
pop
xor
mov
mov
sti
cmp
fcmovu
ds
jb
jae
shlb
push
stos
inc
or
jp
jns
mov
test
mov
fistl
stos
fs
xchg
sti
aas
test
enter
cmc
mov
leave
pop
sub
sub
cmpsl
ds
xchg
mov
dec
dec
and
mov
stc
enter
ds
dec
loop
ljmp
jbe
int3
and
ljmp
dec
rcll
pop
xor
push
sub
mov
in
mov
add
bound
push
js
sub
pop
push
lcall
jmp
dec
jecxz
cmp
pop
push
jmp
mov
out
outsb
jne
mov
inc
in
push
push
lds
ja
das
cltd
dec
mov
mov
cmpsl
dec
xor
mov
jae
dec
push
cmp
in
mov
mov
add
sub
or
inc
hlt
aad
je
sub
lods
int3
fsubrl
cmpsb
bound
inc
xchg
stos
mov
sbb
sbb
mov
mov
scas
ljmp
or
xchg
jbe
cmp
inc
xchg
jb
imul
jb
sub
stc
nop
or
mulb
test
inc
ljmp
lea
mov
cld
mov
icebp
mov
lea
negb
and
sahf
or
adc
push
nop
sub
sahf
or
fcmovnb
cmp
sarb
push
cs
lods
jbe,pn
out
fists
andl
fwait
je
sarb
popa
sub
shll
and
mov
sub
clc
pop
lods
sub
rorb
inc
call
push
inc
repz
clc
clc
test
mov
cli
insb
dec
dec
push
mov
je
adc
jnp
imul
add
jbe
add
pop
addr16
imul
mov
lret
in
pushw
mov
xchg
ja
ret
les
test
mov
and
mov
in
test
or
jne
jp
fnstenv
dec
push
mov
adc
inc
pop
cld
invd
xor
sub
mov
sbb
or
data16
scas
imul
push
call
leave
test
es
inc
cmp
jmp
dec
fs
fbld
lfs
adc
std
lcall
daa
sti
push
dec
pop
xchg
mull
rcll
add
inc
pop
sbb
cmp
arpl
cmpsl
adc
cmp
inc
sub
arpl
into
push
push
pop
and
out
sub
sub
xchg
push
cmp
xlat
lcall
xor
sbb
xlat
adc
gs
inc
and
mov
mov
pop
aas
xor
xor
xchg
mov
incl
sarl
push
push
inc
mov
sub
imul
ficomps
add
mov
mov
call
mov
repnz
or
xor
mov
inc
fsubl
fsubrs
sbb
pop
mov
or
push
inc
mov
out
inc
adc
popa
sbb
pop
cmp
arpl
iret
movhps
and
data16
data16
insl
out
into
push
in
gs
push
mov
nop
mov
sub
call
cmpsb
inc
mov
shr
cmp
pop
jbe
cmc
mov
iret
mov
jno
in
lds
push
lods
and
or
push
mov
cltd
cmc
jmp
out
push
and
sbb
xlat
cmpsb
shr
pop
loopne
cmpsl
mov
loope
pusha
fstpt
scas
dec
pop
in
jae
xor
lds
push
mov
ljmp
inc
push
jnp
or
cmp
clc
jl
rep
push
sub
mull
shl
pop
fisubrs
push
aad
add
inc
pop
outsb
loope
out
dec
fsubr
xchg
jl
inc
push
cmp
mov
fldt
push
pop
out
mov
and
pop
lea
dec
mov
repnz
ret
jae
test
pop
popa
cli
pop
cmp
dec
xchg
shrb
leave
jmp
loope
rcll
add
mov
mov
aas
lea
mov
jmp
mov
cmp
and
jecxz
mov
ret
mov
inc
pop
adc
push
ljmp
sbb
jge
and
inc
jecxz
mov
dec
fisubrs
popf
imul
addr16
lods
in
jl
ficoml
faddp
adc
push
aam
sub
loope
sti
adc
xor
cltd
xlat
jle
leave
push
pop
jbe
out
and
xor
and
mov
daa
imul
mov
pop
lods
jmp
mov
loope
push
jne
loopne
push
push
add
mov
jbe
push
mov
ljmp
pop
repz
mov
lret
imull
sbb
in
sbb
mull
imul
int
je
mov
adcb
pushf
pop
outsb
pop
cwtl
bound
movsl
xchg
inc
jne,pt
mov
pop
out
ret
jl
notb
adc
iret
dec
jb
arpl
sbb
dec
ret
and
adc
add
aaa
and
cmp
shlb
pop
das
jg
push
pop
movb
add
mov
jns
or
add
in
lret
push
inc
fdivrs
ljmp
lods
cmpsl
insl
xor
inc
dec
aam
bound
cmpsl
jle
cmp
or
sbb
xlat
mov
mov
frstor
jno
adc
inc
lock
mov
add
ljmp
xor
pop
lret
cmp
cmp
jle
cmpsl
xchg
loopne
cmp
xchg
adc
xor
shlb
push
fdivs
fldl
cmpsb
imul
rolb
cmp
push
pop
xchg
pop
icebp
dec
sub
fwait
mov
fldenv
jne
ja
std
xchg
push
out
xor
ret
xor
fcomi
pop
jb
pop
xchg
dec
mov
test
divb
mov
mov
sub
xlat
fnstsw
jle
push
and
push
push
add
mov
js
lret
mov
lret
sbb
jge
pop
imul
mov
aam
in
movsl
cmc
jp
mov
jl
inc
ljmp
pop
inc
subl
or
fwait
mov
es
mov
cmp
xor
mov
rorb
data16
ljmp
mov
adc
nop
inc
add
les
push
sub
sbb
mov
mov
add
sub
dec
mov
fldenv
jge
lahf
aaa
pusha
jecxz
xorl
push
sub
popa
and
jne
aaa
shr
push
add
add
adc
inc
and
push
jo
inc
fs
mov
mov
lret
mov
adc
mov
jb
mov
lret
int3
popa
or
arpl
scas
push
sub
popf
cmp
sbb
cmc
sbb
int
repz
sbbl
inc
fbstp
loope
sbb
cld
shll
mov
lods
dec
sub
xor
lds
das
adc
fdivrs
push
push
pop
dec
mov
clc
pop
mov
dec
stc
inc
jg
pop
mov
inc
negb
aam
in
movlps
pop
int3
xchg
push
add
sahf
push
sub
sbb
jmp
movsb
ja
scas
fcmove
loopne
xchg
xchg
adc
xchg
adcb
shlb
xlat
sbb
pop
mov
xor
fs
xor
jmp
inc
mov
or
lahf
push
push
add
movsb
mov
pop
in
jo
jnp
jecxz
cld
testl
mov
popa
xchg
test
aas
mov
mov
and
push
or
mov
inc
ljmp
jb
xchg
out
xor
push
ljmp
jno
mov
or
testl
scas
or
add
fsubrl
out
jmp
and
loope
and
imul
fisubs
movsb
cmp
xor
mov
fcoms
or
xor
je
js
fwait
jbe
cltd
icebp
addr16
mov
stc
test
mov
and
jo
adc
shlb
sub
insb
xor
mov
and
mov
pop
imul
or
bnd
xchg
andl
dec
or
out
sarl
orb
lret
cmp
sub
mov
jb
outsl
loop
mov
ljmp
jno
push
xchg
and
in
subb
xor
mov
hlt
push
push
fbstp
cmpsb
pop
cmc
add
add
jo
xchg
adc
in
pushf
andl
les
inc
cmpsb
lock
sub
or
xor
leave
push
out
addr16
cmp
aas
sub
push
inc
fs
mov
jns
and
inc
lret
jl
fsubs
cwtl
dec
frstor
rcll
inc
test
imul
mov
dec
mov
shrl
lret
pop
insl
lret
movsb
cmpsl
mov
pop
sbb
xchg
mov
sub
scas
mov
pop
je
fsubrs
js
mov
test
lret
jne
mov
scas
lcall
jge
sbb
mov
call
rolb
out
mov
cwtl
xchg
xlat
push
or
out
xchg
popf
scas
mov
jae
mov
add
cmp
jbe
inc
cmpsb
fiaddl
or
ret
cmp
cwtl
js
out
xor
and
xchg
loop
pop
movsl
add
fdivrl
push
test
js
adc
or
dec
loopne
adcl
mov
pusha
test
scas
inc
and
add
mov
xor
int
jl
xlat
out
or
cs
frstor
rcr
push
lds
test
pop
into
jne
jmp
jge
cmpsb
mov
xor
and
mov
add
test
dec
jo
out
aaa
xchg
stos
sahf
jmp
mov
dec
pop
pop
xchg
call
pop
subl
je
fdivrl
fisubl
add
sbbb
ficoml
mov
or
sub
add
pop
mov
in
ds
push
lret
cld
test
dec
jne
in
mov
fmull
inc
xor
cmpsl
aad
cmc
sbb
das
inc
mov
sub
cwtl
sbb
testl
mov
inc
sbb
or
mov
sbb
insb
leave
xchg
inc
mov
add
xor
icebp
or
stos
mov
outsl
mov
adc
sarb
jg
and
adc
xchg
test
mov
mov
sub
xchg
pop
jg
pop
jecxz
xchg
sub
push
cmp
nop
cli
push
push
mov
jno
movsl
mov
or
mov
mov
fstl
and
pop
mov
mov
sti
adc
sahf
mov
jno
jle
mov
in
sbb
je,pt
sbb
cs
iret
xlat
out
push
insb
imul
sbb
fwait
insl
cmpsl
dec
jge
jo
or
xchg
leave
xor
nop
aas
push
push
pop
push
ficomps
xor
lret
sbb
jns
add
ja
sub
movsl
lds
sbb
test
push
sbb
jb
das
test
dec
imul
pop
stos
mov
fbstp
mov
es
sub
lcall
jno
sbb
push
sub
push
into
hlt
sti
xlat
jbe
les
js
je
inc
stc
nop
cmp
roll
adc
stos
aas
mov
repnz
lds
nop
sub
loopne
jl
jmp
jne
add
cs
push
add
out
sbb
icebp
sarb
jnp
xchg
scas
mov
fmul
push
fwait
sbb
and
lea
adc
and
push
xlat
cmp
mov
repz
cmpsl
insb
jns
outsl
pop
and
push
adc
repnz
xor
test
popa
enter
and
sahf
jno
subb
cmp
and
mov
push
in
mov
pop
sub
cmp
cmp
lahf
sbb
cld
test
mov
mov
stc
sbb
std
dec
fcmovb
out
shlb
mov
testl
or
cld
inc
or
js
scas
jge
test
lods
icebp
movsl
jbe
fnstenv
push
pop
cmp
mov
test
call
cmp
push
lods
nop
cmpb
xor
arpl
lcall
loop
ret
xchg
mov
adc
lret
xchg
shll
sbb
call
xor
push
cmc
insl
lds
das
cmp
outsl
je
pop
sub
jg
ret
out
mulb
inc
push
dec
lret
lock
dec
clc
xor
xor
roll
mov
int3
mov
stos
rcrl
loop
dec
push
xlat
popa
jmp
mov
fs
mov
add
mov
lret
mov
inc
xchg
sub
adc
icebp
addb
sbb
xchg
dec
cmpsl
sti
dec
out
mov
push
mov
test
insl
scas
mov
std
push
out
add
xchg
aaa
inc
stos
addr16
lea
ror
cmp
lcall
imul
repz
sbb
aaa
testl
jmp
and
cmpsb
call
xor
data16
xchg
neg
jo
mov
in
lea
shrb
outsl
push
aad
lods
fsubl
lea
shlb
xchg
daa
ret
adc
lahf
add
mov
sahf
loop
ret
pop
lock
js
or
lcall
ret
and
cltd
test
fucomip
mov
mov
loopne
stos
test
aaa
xchg
inc
scas
push
xchg
icebp
ja
and
push
out
lock
jb
jo
cmp
lea
pushf
ds
rclb
repz
fcoml
mov
fcomi
sub
inc
shll
imul
dec
imul
and
cmp
mov
cwtl
mov
add
mov
clc
aad
push
mov
mov
mov
lea
push
sub
xchg
inc
idivb
jecxz
pop
aad
ljmp
jnp
add
mov
jecxz
adc
mov
sub
jns
insl
push
lcall
test
out
inc
push
add
clc
mov
ret
pop
cmp
aad
push
jmp
mov
shll
in
sub
xchg
sti
mov
adc
jae
call
out
pop
push
jmp
inc
mov
dec
lcall
push
ljmp
mov
in
push
mov
cmc
inc
jmp
dec
cmpsb
les
imul
xchg
rorl
out
adc
adc
sub
aam
push
xchg
pop
jae
in
notb
ljmp
out
cmp
mov
inc
mov
cmp
cs
mov
jno
pop
outsb
jne
cmpsb
xor
or
add
sbb
pop
push
stos
push
sbb
cmp
add
popa
js
sarl
fwait
out
and
mov
pop
ds
leave
cmc
push
add
lock
cmpb
and
xor
je
std
incl
inc
in
negl
xchg
pop
sar
and
cmp
xchg
xchg
sub
rorl
gs
and
sub
movsl
push
inc
fs
shll
flds
sub
mov
and
cltd
mov
ret
sub
test
sbb
inc
imul
in
jo
mov
pop
xor
arpl
mov
mov
insb
cmpsb
mov
sbb
inc
mov
add
dec
cmp
jno
mov
ds
push
sub
addr16
jecxz
fs
es
orb
sbb
and
add
aas
push
stc
pop
arpl
test
popf
ljmp
dec
movsl
test
into
xor
fwait
xchg
movsl
fildl
or
cmp
push
mov
cmp
lods
scas
xchg
push
mov
push
xlat
mov
mov
sbb
cltd
add
ljmp
outsl
push
cmpl
cwtl
xor
or
fcomps
js
or
outsb
mov
xchg
rorb
jnp
fsubl
cs
mov
ret
aas
test
inc
push
ds
jmp
aaa
sub
sahf
jecxz
pop
cmp
jae
cmpsl
pop
xchg
cmp
cli
pop
lods
inc
cli
xor
xor
sub
inc
xchg
inc
scas
hlt
xor
lods
pop
aad
inc
cld
pop
jge
pop
mov
jae
mov
push
xchg
inc
js
sbb
jb
cmpl
lock
adc
mov
pop
outsl
outsb
imul
mov
cld
scas
mov
cmp
dec
sbb
in
dec
shlb
les
xor
lea
hlt
mov
fcmovnu
cmp
mov
stos
mov
mov
xor
imul
push
aaa
nop
mov
push
jmp
addl
out
lods
jo
test
sbb
xchg
ret
sahf
jne
icebp
sub
stos
pop
into
jne
arpl
xor
ss
shr
mov
or
push
cmpsb
lock
ret
xchg
mov
sub
rcrl
xchg
fptan
fbstp
rcll
xchg
pop
pop
les
adc
sub
jns
dec
pop
lret
push
jg
icebp
fiadds
stos
pop
aas
pop
repnz
lods
fwait
pop
pop
mov
mov
sbb
stos
xchg
push
inc
loopne
dec
test
sti
mov
sti
orl
inc
mov
pop
add
xchg
dec
je
xchg
sbb
xchg
adc
add
cmp
into
and
xor
js
mov
fwait
mov
mov
mov
shrl
dec
and
cli
lock
test
cmovnp
and
lods
sub
dec
test
lahf
loopne
adc
jl
sbb
jnp
inc
or
adc
aam
cmp
daa
xor
fwait
sub
lret
xchg
xor
and
iret
outsb
add
test
out
lods
cpuid
imul
js
adc
mov
mov
nop
or
push
enter
xchg
jp
subl
jge
sti
mov
es
insl
adc
cmpsb
mov
iret
stos
test
decb
push
xor
rorl
fisttpl
ss
pop
arpl
fldcw
insl
and
mov
jae
cmpsl
bound
inc
mov
mov
outsb
inc
cld
inc
mov
push
out
sbb
xchg
movaps
hlt
inc
push
push
mov
js
leavew
fldenv
mov
inc
push
mov
dec
arpl
mov
pop
xor
pop
or
das
loopne
push
lret
mov
iret
pop
jmp
jl
mov
mov
lods
sbb
pop
lahf
or
mov
outsb
out
lret
dec
and
add
scas
or
pop
mov
lods
inc
data16
cmp
mov
sub
add
mov
les
out
cwtl
sub
sbb
pushf
push
stc
clc
jle
mov
push
out
xor
subb
shlb
dec
test
inc
xor
xor
or
cwtl
das
addr16
or
mov
mov
xchg
mov
dec
in
or
ret
sbb
add
pop
inc
push
loop
push
rsm
test
pusha
rorl
xor
push
mov
xcrypt-ofb
cmpsl
test
mov
cmp
aam
inc
inc
sbb
insb
xor
cmp
xor
cmp
cmp
add
and
clc
in
vcomisd
stos
mov
sbb
or
mov
sbb
mov
mov
popf
mov
mov
mov
imul
out
inc
aam
fs
lock
in
repnz
icebp
sbb
inc
push
fnstsw
lock
cmp
mov
push
push
cmpl
add
insl
shl
mov
scas
faddl
or
push
mov
fisttpl
add
test
and
jecxz
imul
cmp
fstps
insb
xor
dec
mov
sbb
pop
push
ds
add
inc
das
cwtl
sub
int
fmul
fisttpl
cld
or
xchg
sbb
decb
xor
mov
xor
dec
outsb
sbbl
lds
jle
pusha
out
fld
xor
push
jnp
popf
cmc
iret
and
sbb
cmc
mov
or
mov
push
pop
popf
ret
lds
decl
clc
repz
dec
fwait
mov
xorl
inc
xchg
notl
fistpl
fdivs
sub
ds
mov
test
in
xchg
in
lods
dec
orb
xor
adc
xchg
jge
je
dec
sahf
pusha
stc
adc
add
lods
xor
pop
popf
imul
pushf
dec
and
xchg
dec
mov
adc
mov
pop
xor
ljmp
sahf
push
scas
fbstp
mov
sub
mov
faddl
mov
sbb
mov
pop
ds
int
loop
add
rcr
aam
add
addr16
enter
frstor
cmp
fistpll
push
pop
xor
jo
js
adc
add
cs
mov
clc
push
mov
inc
xchg
jnp
lock
xor
and
cmc
adc
jge
imul
fldenv
lock
or
rolb
mov
jp
bound
shlb
mov
std
addr16
jne
cli
mov
jp
fs
pop
mov
loopne
and
in
daa
push
mov
mov
or
inc
jno
es
jae
mov
pop
xchg
mov
fiaddl
pop
mov
inc
xor
in
adc
mov
xchg
xor
pop
movsb
or
pop
jp
cmpsl
cmp
das
fistpll
nop
adc
xor
pop
mov
ss
je
xchg
or
mov
add
or
sbb
jg
cltd
cmp
mov
jmp
mov
pop
sahf
adc
mov
movsb
jns
mov
jns
dec
xchg
rcrl
in
mov
out
inc
xchg
and
sbb
ficompl
fstpl
mov
faddp
ds
popa
mov
sbbb
imul
xchg
fstps
movsb
aas
loop
xlat
neg
pop
cmp
int
loope
xchg
and
xchg
sub
in
add
stos
dec
shll
pusha
imul
gs
and
movsl
in
jl
mov
lock
enter
mov
inc
sbb
sub
mov
cmp
pusha
orb
pop
jne
insb
rol
les
jo
mov
cmpsb
adc
addl
leave
sub
dec
dec
jg
jp
imul
push
push
dec
cs
xchg
cmpsb
out
clc
pop
mov
push
cmp
jg
ficompl
or
popa
aas
dec
or
mov
rcll
je
mov
cmp
mov
shll
mov
fdivr
pop
pop
sbb
cltd
cli
inc
push
aaa
mov
es
cmp
sub
xchg
pop
pushf
or
aas
mov
xchg
pusha
nop
sbb
xchg
pop
imul
andl
add
bound
mov
stos
sub
cmp
jb
jecxz
mov
pusha
mov
addr16
xor
xchg
rcrb
xor
es
inc
push
mov
dec
push
push
sub
movsb
lods
push
pop
sahf
inc
xorl
pop
dec
aad
push
pop
iret
addl
sbb
jmp
in
or
inc
mov
xor
in
xor
sub
ss
out
and
dec
sbb
mov
push
scas
mov
jns
jle
sub
xchg
es
pushf
arpl
pop
repz
push
ror
flds
pusha
rcll
inc
and
loope
out
sub
loopne
mov
sbb
mov
pop
sbb
sub
cmpsb
and
clc
dec
xchg
enter
xor
cmp
mov
xchg
adc
enter
pop
mov
jae
sar
loopne
aas
pop
enter
sbb
scas
and
xchg
aad
jns
dec
ja
jbe
loopew
arpl
imul
out
mov
pop
mov
enter
clc
and
or
add
loopne
cwtl
adc
loopne
ja
pop
outsb
or
clc
pop
xlat
push
pop
inc
test
ljmp
in
lahf
filds
pop
pop
jae
mov
scas
movl
jnp
add
push
sub
add
sbb
mov
arpl
aas
loop
imul
iret
sahf
rcll
inc
ret
jge
inc
sahf
adc
xchg
popf
sbb
inc
sbbb
push
adcl
and
push
sahf
xlat
or
popf
mov
fisubrl
push
xchg
push
in
sbb
mov
ljmp
adcb
sbb
sbb
mov
rol
jmp
mov
adc
cmp
lea
or
mov
out
xor
xor
addr16
icebp
xchg
loopne
mov
xor
iret
in
les
add
data16
pop
xlat
insl
stc
or
inc
push
and
lods
inc
push
mov
js
lret
lret
adc
dec
loop
stos
pop
out
fsubr
mov
lock
and
add
movsb
xor
mulb
sbb
mov
fsubrl
mov
loope
xor
jmp
sbb
sub
enter
lahf
in
inc
pop
adc
mov
insl
inc
aaa
push
mov
test
fistpl
mov
or
into
ljmp
dec
outsb
sbb
imul
cmpl
cwtl
rcrl
mov
cltd
xor
push
call
sbb
mov
inc
cmp
test
dec
push
or
orl
or
mov
out
jge
nop
daa
inc
pop
inc
stos
data16
and
ret
out
insb
cld
adc
mov
adc
testb
add
xor
in
subl
jle
push
dec
or
xorl
pop
lock
inc
repz
aad
lock
sbb
imull
fsubl
push
testb
lods
and
mov
push
dec
je
aas
data16
lcall
push
adc
jge
andb
addl
inc
and
mov
pop
mov
pop
cmp
push
test
xchg
in
movsb
dec
xor
mov
dec
sub
insb
mov
cmp
inc
in
xchg
fnstsw
sbb
sahf
clc
iret
mov
mov
in
cmpsl
adc
pop
adc
ret
jb
sub
sub
decl
aad
xchg
filds
adc
cmp
dec
shr
or
pop
imul
xor
adc
shlb
xor
jne
gs
mov
lock
movsl
adcb
jecxz
les
outsb
rcrb
in
push
insb
aas
mov
push
mov
mov
ret
adc
loope
mov
xor
addr16
sub
push
jae
ffree
sbb
ss
pop
jnp
arpl
pusha
add
pop
xor
daa
jmp
shlb
out
mov
in
ja
pop
cs
inc
pop
dec
push
loope
inc
fsubr
xchg
arpl
pop
movsl
and
sub
push
loop
jns
mov
addr16
call
cltd
fisttps
adc
cmp
fwait
jno
xor
dec
jg
repnz
insb
hlt
or
insb
lock
cmp
js
cmpsb
xchg
and
mov
out
add
sbb
cltd
fs
xchg
adc
shll
dec
fadds
sarb
mov
pusha
pop
mov
mov
or
in
cltd
mov
imulb
add
push
mov
sbb
sub
enter
popl
sahf
cmpsl
setp
add
inc
pop
int3
fiadds
mov
loope
add
daa
jne
stos
mov
shl
jp
loope
lahf
pushf
or
std
xchg
xor
lock
sub
je
stc
dec
aaa
sbb
imul
mov
jl
ret
test
js
jle
xchg
mov
mov
stos
lds
stos
ja
and
fisubs
lds
inc
xor
sub
xchg
jle
pop
mov
int
aad
loope
xchg
push
scas
mov
fidivs
or
and
push
or
jb
out
aam
ret
jne
repnz
insb
js
jns
xchg
mov
push
cmp
movsl
in
movd
loope
and
fwait
add
scas
and
sbb
cli
mov
lret
mov
roll
sub
dec
loopne
gs
push
add
mov
scas
add
push
dec
push
jne
add
sbb
mov
pushl
inc
insl
and
push
mov
movsb
outsl
or
adc
rol
sub
rclb
ss
out
cmpsl
loop
inc
enter
stos
push
push
ds
dec
pop
jb
shrl
xchg
jecxz
out
push
xchg
and
sbb
pop
les
call
cmp
cmpsb
lods
push
out
cmpsl
jno
push
or
pop
scas
sub
mov
mov
pop
dec
mov
repnz
push
pop
push
dec
cli
shr
pop
xlat
pop
mov
lahf
ljmp
sarl
xchg
popf
pop
or
das
out
mov
mov
xchg
push
in
clc
aam
mov
arpl
mov
inc
xor
jnp
adc
xchg
nop
incb
mov
adc
pop
outsb
out
mov
pop
in
mov
or
sbb
sahf
inc
movsl
je
mov
leave
fsincos
add
jb
xchg
jne
ret
mov
pop
push
mov
mov
loope
femms
xchg
shll
imul
test
mov
dec
clc
daa
rcl
sbb
sahf
dec
fimull
or
xchg
dec
loope
nop
movsb
cmp
push
xchg
out
dec
jne
repz
xor
rcrb
gs
adcl
jle
out
jbe
iret
cmpsl
or
cmc
xchg
out
loope
gs
mov
dec
jmp
loope
adc
xor
adc
push
loopne
repz
ljmp
dec
scas
cmp
dec
add
mov
enter
ret
sbb
outsb
iret
mov
sub
scas
jge
lds
mov
leave
pusha
fimull
cmp
mov
xchg
sub
mov
mov
mov
sbb
mov
mov
jmp
sahf
ret
cld
adc
and
xor
sbb
cwtl
dec
jg
cmc
test
jge
cmpsb
jno
lcall
inc
gs
push
or
pop
rclb
shlb
mov
stos
lock
and
add
fdivs
pushf
cmp
test
dec
and
insl
icebp
inc
mov
notb
testb
mov
cmpsb
lods
mov
je
or
fstpt
jnp
adc
push
xor
popf
or
jl
dec
xor
jl
mov
popf
cmp
and
adc
push
stos
out
outsl
mov
leave
and
shrb
imul
adcl
scas
mov
bound
jne
sbb
jl
nop
stos
mul
jl
dec
mov
jnp
ljmp
pop
xchg
imul
call
sbb
fwait
loopne
ja
sub
jp
pop
cmpsb
jg
add
lahf
fwait
sub
cld
jg
sbb
sbb
aam
sub
or
cli
pop
cli
movsb
mov
data16
jbe
and
test
lret
pop
mov
xchg
lea
data16
jnp
or
adc
sbb
dec
adc
lcall
mov
fdivrl
je
and
sbb
inc
lahf
mov
pop
jb
test
push
in
sub
aam
daa
sarb
ljmp
xor
loop
sbb
int3
lods
jne
sub
outsb
cmc
push
jg
and
mov
jb
xchg
imul
or
jmp
shrl
mov
push
bound
inc
aas
mov
int3
adc
and
aam
cmp
mov
inc
xor
add
test
aaa
clc
cmp
ret
dec
mov
scas
and
mov
add
jns
mov
repnz
in
fidivl
cmp
mov
ror
movsl
mov
popa
sbbl
lahf
or
test
shlb
inc
ds
jbe
jmp
sub
push
xor
std
fistpll
mov
dec
mov
push
lock
fdivl
adc
lods
adc
insl
clc
das
icebp
imul
jl
test
cmp
adc
movsb
sbb
rcll
rcrb
xor
jne
dec
js
inc
fs
sti
xchg
xchg
lods
je
sbb
pop
mov
fisttpl
mov
jb
jp
test
mov
test
das
cwtl
sti
xchg
lret
lock
mov
jmp
jbe
ss
lock
es
cli
xor
mov
jne
aaa
out
test
fidivrl
adc
or
mov
imul
and
int3
fwait
addb
lret
ret
jbe
insl
pop
lock
ja
shl
pushf
mov
pop
sahf
mov
mov
test
mov
mov
push
mov
stc
outsl
daa
faddl
or
in
xorl
lods
push
cltd
xor
test
jl
push
test
mov
sub
dec
stos
inc
and
cltd
jo
call
push
mov
out
mov
aaa
movsl
in
jno
fldl2e
shlb
cmp
cmpsb
pop
sub
outsb
sbb
scas
or
bound
test
mov
push
outsl
adc
shlb
iret
jecxz
sbb
jns
cmp
xorl
jl
mov
inc
xor
adc
test
mov
push
ljmp
jno
xor
jmp
push
movl
cmpsl
mov
mulb
cmp
dec
or
xchg
mov
iret
aaa
xchg
and
jbe
inc
push
fsubrp
rep
inc
in
xchg
pop
mov
sbb
inc
lock
shr
jbe,pn
ljmp
jno
movsb
mov
push
nop
sbb
sub
xchg
mov
shl
mov
in
cmp
jae
pop
out
xchg
adc
adc
aaa
leave
fistpl
xchg
mov
xlat
and
cmp
in
inc
jnp
pop
out
aad
inc
mov
inc
into
pop
ss
xor
sub
lods
sahf
stos
cmp
pop
and
hlt
or
and
pusha
push
xor
pop
std
rcl
pop
xchg
fsubrp
and
popf
repnz
fs
nop
daa
or
xor
cmpsb
sbb
cmpsl
push
add
pop
imul
test
cmp
lock
aas
shrb
push
adc
mov
xchg
loop
xchg
fwait
dec
jp
dec
test
or
jp
aad
jp
insb
lods
jecxz
mov
stos
cmpsl
fnstsw
cmp
fwait
adc
inc
inc
shrb
adc
inc
push
iret
jge
pop
repz
inc
add
popa
pop
adc
or
in
ja
scas
jno
rolb
pushf
jae
movsl
testl
popa
cmp
clts
divb
adc
sti
sbb
add
inc
pop
leave
repnz
hlt
xor
cmpb
outsb
sub
jns
out
mov
aaa
sbb
sbb
leave
insl
pop
icebp
cmp
push
rorb
add
jno
push
push
or
leave
push
out
xor
aam
sub
in
push
test
lea
fs
mov
loopne
sbb
shlb
scas
jg
aad
mov
pushf
outsl
push
into
test
repz
xchg
daa
add
xlat
cmp
or
sbb
decl
std
rcr
pop
and
mov
push
pop
mov
ret
outsl
fwait
je
pop
xor
mov
mov
inc
pop
stos
sarl
jb
and
sub
mov
sub
cmp
inc
mov
lahf
pop
ds
mov
imul
or
mov
pushf
cmc
stos
lods
daa
pushaw
push
or
jecxz
add
cmpsb
add
mov
cld
roll
push
cltd
scas
inc
lret
and
shlb
pop
das
fimuls
and
jp
andl
or
rclb
rcrl
push
jl
fistpl
bound
dec
sub
loope
loop
mov
pusha
cs
mov
jge
inc
mov
xchg
sub
xchg
pushf
or
sahf
mov
rcrl
add
sub
sbb
pop
dec
iret
mov
pusha
ss
addl
push
jo
sbb
jb
addr16
xchg
pop
or
pop
mov
movsl
ja
aam
movsb
ret
push
add
mov
push
test
mov
fucom
cli
imul
insl
xor
shlb
pop
pop
es
cmp
inc
dec
push
fisubrl
ret
pop
add
push
test
loope
cmp
arpl
jne
out
stc
mov
decl
inc
push
add
out
lcall
orb
mov
pusha
pop
call
ss
sahf
xadd
repz
testl
imul
push
data16
clc
or
mov
test
clc
mov
mov
xchg
fstpl
stos
pop
mov
addr16
adc
les
out
cmp
movsl
mov
inc
sbb
pop
stos
and
and
hlt
dec
lahf
shlb
sbb
cmp
lds
fsubs
fistpl
nop
mov
sbb
shll
xchg
fimuls
fmull
or
loope
dec
lahf
xchg
ret
pop
pop
jle
les
outsb
je
cmp
or
lock
fistl
out
push
jmp
int3
je
push
stos
inc
xchg
out
sbb
cmp
mov
push
adc
adc
sbb
mov
hlt
jns
shll
insb
nop
ss
xchg
in
aad
aad
push
push
stos
mov
add
fsub
jge
jbe
out
xorl
or
dec
cmp
jmp
rcll
cmp
xchg
adc
test
loopne
cmp
xlat
es
add
unpcklps
nop
test
push
int
stc
push
roll
mov
xor
inc
inc
mov
lea
ja
mov
popf
sbb
aaa
rcrb
dec
gs
insb
xchg
pop
jno
adc
xchg
sbb
into
sbb
pop
sahf
push
or
lcall
mov
jnp
daa
mov
adc
rcll
lahf
pushl
mov
shr
icebp
mov
fistps
lcall
leave
test
daa
aas
adc
or
addr16
jb
xchg
outsb
imul
dec
shl
sbb
adc
pushf
es
sbbb
mov
out
xor
pop
outsb
add
inc
add
ljmp
arpl
mov
enter
jb
imul
mov
and
in
and
pushf
pusha
hlt
push
fsts
cmc
or
jo
jg
add
xor
std
mov
cld
or
xor
loop
fwait
xchg
mov
mov
sarl
ret
lcall
enter
xlat
sub
pop
mov
in
pusha
jecxz
aas
loop
je
mov
xchg
adc
mov
test
gs
pop
mov
fimull
cltd
lods
js
jb
jmp
sbb
inc
mov
add
sub
lret
xlat
mov
or
sub
sub
push
lds
jmp
lret
in
bound
gs
mov
pushl
pcmpgtd
xchg
addr16
jmp
in
aaa
out
cmpsl
cmp
cld
or
je
out
pusha
daa
roll
jns
pop
sub
fcoms
xchg
insb
repz
rcrb
mov
or
xor
dec
cmp
mov
push
dec
pop
cmpsb
cs
add
add
ds
div
lock
inc
and
push
in
and
imul
or
imul
xchg
sti
xchg
shll
and
sti
nop
stos
sub
testb
push
out
outsb
lock
imul
outsb
xor
xchg
out
dec
fidivrs
sbb
push
push
mov
in
lret
dec
shrl
mov
push
inc
call
jl
add
mov
dec
pop
mov
lods
dec
or
ljmp
out
test
mov
jb
int
daa
aas
sub
mov
subl
cmp
sbb
inc
fildl
pop
mov
xchg
iret
stos
test
in
jne
xchg
mov
mov
sbb
dec
aam
sub
sahf
lods
lods
xchg
jo
or
loope
jo
push
insb
cmpsb
in
icebp
sbb
sub
lret
je
cld
jp
ljmp
jno
out
cmp
out
test
jb
jne
pop
pop
dec
loopne
sbb
push
add
mov
stos
add
xor
xor
adc
pusha
jp
pop
or
mov
inc
stos
sahf
shll
pop
or
xor
inc
cmpsl
inc
mov
mov
and
mov
repz
out
dec
loop
sbb
cmp
mov
inc
jmp
lods
ret
or
mov
lahf
mov
or
lock
inc
pop
add
pop
pushf
or
mov
dec
scas
xchg
xorb
pop
inc
mov
lret
data16
push
gs
inc
movl
rcll
test
scas
pop
sbb
xor
lea
mov
sub
in
or
leave
and
vpcmpeqd
outsb
hlt
sahf
xchg
inc
adc
mov
inc
leave
out
xchg
pop
pop
adc
dec
xor
xchg
mov
push
xorb
pop
aad
add
mov
sti
mov
push
jg
jb
push
push
test
scas
in
fs
mov
xor
mov
push
mov
xor
sub
sbb
aad
sbb
fst
sbb
mov
cs
ja
inc
jge
mov
loop
into
jecxz
aaa
mov
jns
fists
or
movnti
or
test
push
jne
scas
ljmp
pushf
cli
adc
mov
adc
pop
mov
scas
jmp
jle
repz
sbbb
les
je
and
mulb
pushf
or
aaa
ljmp
push
sbb
mulb
dec
divb
adc
push
push
cmp
pop
repz
imul
and
out
inc
mov
pop
inc
adc
inc
or
sub
imul
test
pop
ljmp
pop
dec
outsb
or
mov
in
inc
loop
add
add
mov
mov
shll
cmp
xor
push
ret
xlat
dec
fisttpl
jp
dec
cmpsb
and
mov
mov
in
push
xor
sub
pop
loopne
push
dec
pop
int
scas
cmp
movsl
mov
into
cmp
sub
sahf
inc
fldt
or
test
in
ret
shlb
adc
out
aaa
adcl
ss
out
sbb
loopne
mov
mov
scas
mov
sbb
andb
sub
dec
sub
dec
jae
pop
pop
pop
xor
sub
insl
loopne
adc
ror
out
pop
adc
sub
lock
inc
mov
mov
xchg
sahf
call
jl
subb
dec
xchg
testb
aam
popa
ret
add
js
jge
test
sti
xchg
jb
dec
dec
in
pop
fwait
xor
inc
decb
mov
scas
stos
adc
ss
inc
cmp
cmpb
popf
xor
dec
inc
fmull
cld
arpl
or
lahf
and
cmp
jmp
pop
rolb
imul
repnz
mov
cmpl
notl
pusha
pop
int
popa
or
sub
fwait
xor
and
and
mov
lea
adc
pop
scas
mov
lea
ret
adc
outsb
jo
in
pop
push
js
enter
xor
ljmp
dec
out
adc
sbb
mov
fwait
cmpsl
dec
pop
push
mov
push
shl
mov
roll
lahf
andl
aad
lahf
mov
daa
and
inc
std
ror
out
jae
push
cltd
cmpsb
cltd
or
inc
sbb
dec
add
rorl
dec
lahf
out
or
jge
mov
jo
cmpsl
cmpb
jl
leave
popa
test
cmp
lcall
jmp
cmp
ror
lea
push
das
push
dec
inc
cmp
lea
and
mov
ja
and
les
sub
sub
rcrl
imul
in
arpl
cltd
into
sbb
btc
push
or
loop
mov
ror
fnsave
jnp
out
das
pop
push
cmp
pop
and
popa
jne
xor
xlat
sub
mov
popa
xor
aam
jno
sti
fadd
mov
loop
mov
jl
imul
jnp
stc
jne
rorb
cmpl
cltd
stos
jle
mov
loope
add
aam
cmp
xchg
fidivl
cmpsb
xchg
outsb
je
and
pop
lock
inc
fcmovb
fidivrl
dec
push
fmulp
pop
je
jbe
aam
mov
repnz
cmpsl
add
pop
mov
jle
imul
push
cmpsb
or
jge
mov
loope
pushf
mov
out
add
or
movsl
repz
lret
stc
subb
push
xchg
sbb
imul
jne
cmp
inc
cmp
sub
ds
rcll
popf
in
es
repz
lea
adc
mov
lods
mov
mov
mov
es
sub
shrl
adc
out
xchg
sbb
movsl
dec
or
sub
fnstcw
or
repnz
mov
mov
pusha
mov
fwait
cmp
sub
outsb
or
push
or
adc
aas
xlat
lods
mov
xchg
adc
fnsave
pop
lock
fidivrs
mov
test
popf
jmp
test
mov
mov
out
push
lds
lcall
mov
in
mov
sbb
fwait
int
ja
imul
setle
lcall
push
je
cmpb
adc
push
sti
pushf
xor
test
xlat
mov
fcompl
lea
xchg
pop
cmp
pop
jp
or
std
or
popf
dec
or
push
sub
lods
out
jne
jmp
outsl
xchg
add
dec
pushf
jmp
ret
test
pop
jb
adc
mov
std
aam
fwait
add
push
jne
inc
mov
xor
fsubp
fmuls
mov
aas
and
inc
push
cwtl
jb
test
lcall
sub
adc
jne
cltd
shll
lret
cltd
in
push
or
sti
ja
ficoml
mov
negl
inc
jns
cli
sahf
lcall
mov
rorl
add
call
or
cmp
rep
jno
cmc
stos
push
fcmovne
int
push
jmp
and
js
test
int3
inc
lret
mov
lds
xchg
pop
mov
jo
push
das
jbe
js
cmp
outsb
icebp
lods
inc
and
push
add
pop
pop
outsb
inc
icebp
mov
dec
add
jg
push
xor
sbb
dec
mov
ljmp
setns
push
mov
jb
xchg
add
and
int
leave
lret
jge
shlb
test
xlat
cld
stos
or
push
push
inc
mov
add
test
xchg
dec
pop
jle
pop
pop
repnz
mov
push
mov
sti
sub
inc
jmp
cmpsl
out
or
pusha
aas
mov
je
push
fisttpl
movsl
or
loope
out
ret
mov
in
push
repz
push
inc
dec
ds
dec
icebp
mov
mov
out
mov
in
cmp
pop
sub
nop
xlat
adc
jl
xchg
lea
fldenv
test
ss
cmp
cmp
ja
or
out
dec
mov
jmp
int
xor
fcompl
mov
xchg
popf
outsb
pop
sbb
in
scas
stos
imul
fsubl
popf
sub
pop
mov
test
xchg
in
pop
dec
mov
fists
inc
and
add
sub
std
stos
xchg
or
and
imul
xchg
aaa
aad
imul
iret
sub
fmul
imul
fnclex
add
imul
add
adc
popf
push
xchg
insb
push
mov
outsb
aad
push
inc
cmp
inc
and
push
mov
test
and
insb
cmpsl
pushf
push
push
cmpsb
or
in
cmp
fs
clc
push
lahf
stos
push
insl
outsb
bound
das
mov
ljmp
jae
cmp
hlt
shrb
rcrb
mov
push
xor
cmp
and
rorl
sub
push
test
mov
adc
inc
adc
inc
sahf
mov
mov
jae
shlb
pop
aas
test
es
xor
push
or
mov
nop
addr16
mov
out
adc
jl
lea
and
mov
popf
out
jp
fdivl
xchg
dec
jge
mov
in
and
jp
mov
lods
jno
das
mov
adc
fisttpll
add
xor
jbe
shrl
loopne
mov
inc
sbb
dec
pop
dec
xor
ljmp
pop
nop
dec
pop
shlb
sub
inc
test
sub
fimull
jns
rol
into
adc
in
psraw
dec
scas
sub
std
scas
ljmp
add
scas
cmp
test
push
mov
loop
xchg
push
dec
inc
inc
mov
pop
inc
stos
cmp
jg
dec
cltd
scas
mov
xchg
pop
jb
add
fwait
repnz
and
push
pop
stos
xor
mov
jne
leave
pop
sub
cmp
push
mov
adc
mov
rcr
sarl
dec
mov
in
lret
inc
gs
mov
cli
mov
leave
gs
repnz
aas
pushf
adc
cli
jne
push
cmp
andl
aam
sti
lret
jbe
push
adc
xor
out
ret
test
mov
loopne
mov
jmp
mulps
xlat
jecxz
clc
and
jno
cli
and
fnstsw
cmp
push
addr16
lock
fisubl
stos
push
and
inc
es
jle
test
test
xchg
adc
cltd
push
mov
xchg
mov
ret
out
push
jae
cmp
adc
and
sbb
xchg
leave
push
stos
inc
leave
mov
jno
mov
lret
in
dec
cmpsl
push
hlt
cmp
adcl
xor
aaa
dec
mov
xchg
push
mov
pop
sahf
sbb
call
stos
inc
jg
imulb
arpl
pusha
cltd
or
in
xor
outsb
es
mov
call
dec
outsl
mov
mov
xchg
repz
roll
inc
adc
xchg
out
notb
addl
inc
adc
ljmp
imul
outsl
fwait
inc
fisttpl
stc
daa
xchg
mov
arpl
mov
cli
pop
iret
dec
divb
xchg
movsl
push
ret
push
xchg
mov
sbb
jno
outsb
push
sbb
orl
jmp
in
jecxz
push
xor
xchg
mov
je
out
dec
int3
sahf
lret
lock
cmp
dec
push
and
sub
mov
mov
xchg
lock
sub
test
dec
call
cmp
push
pop
xchg
push
rorb
ja
or
icebp
jb
mov
push
inc
sbb
fadds
insl
fsub
or
out
or
dec
lods
outsl
ja,pt
add
data16
dec
loopne
dec
movsl
shr
filds
js
outsl
outsl
fwait
aam
cmp
movsb
jecxz
dec
mov
and
push
or
or
fwait
call
fsubr
int
ja
movsb
fidivl
outsb
cmp
iret
mov
or
jb
pop
movsl
mov
test
push
dec
jle
lea
stc
mov
mov
mov
pop
xchg
sbb
adc
int
loope
or
popf
leave
test
and
and
pop
mov
es
add
repz
push
popf
and
dec
dec
add
and
adc
mov
or
in
cmp
lods
mov
ljmp
add
pop
or
mov
pop
incb
and
sub
add
cmp
pop
scas
pop
xlat
xor
or
fldenv
insb
sub
rcll
and
hlt
rol
xchg
push
ret
movsl
cs
mov
popa
andl
xor
pusha
arpl
jg
jge
adc
rol
mov
decb
sub
cmp
xchg
and
jae
push
xchg
hlt
mov
stc
cmp
push
dec
adc
push
call
xchg
in
in
scas
ja
in
inc
lcall
push
jne
je
push
out
xchg
fists
fadds
sbb
dec
xor
cmpb
dec
push
pop
test
cmc
cmp
lods
mov
rcl
add
sbbb
lea
sub
fcomip
lahf
div
mul
pop
movsb
fwait
pop
scas
int3
mov
adc
fbld
stos
cmc
cmp
stos
jb
mov
or
aaa
stos
add
rorb
or
stc
cld
jl
jle
shll
fwait
rol
xlat
cmp
jl
icebp
xor
dec
es
xchg
scas
xchg
inc
rcrb
push
xlat
jb
and
sbb
imul
call
or
rcl
pop
add
or
fstps
testb
sub
fistpl
mov
movntps
pushf
aas
das
push
fnstsw
notb
out
or
loope
jb
jno
in
sbb
push
mov
test
in
and
cmpsl
es
jl
fsubrl
sti
mov
pop
xchg
xchg
out
je
xor
push
jp
fucom
mov
adc
clc
out
div
xchg
out
popf
adc
test
mov
lea
adc
aaa
mov
imul
ja
ret
lock
rcl
or
ja
adc
ss
test
repz
add
sub
adc
xchg
sub
xchg
lods
mov
shll
or
out
ss
hlt
sbbb
sub
jno
out
push
inc
enter
sarl
pop
bound
xchg
sub
lret
test
mov
lds
lahf
cltd
push
inc
mov
scas
inc
ljmp
push
loope
int3
mov
mov
dec
lret
push
out
mov
ret
mov
mov
lret
push
and
xchg
add
lret
xor
es
js
inc
stos
fisttps
scas
and
je
xchg
popa
rol
out
lds
shlb
jbe
fldl
in
jno
xchg
sub
jb
mov
push
sub
test
sbb
scas
aaa
cmp
xlat
outsb
lock
mov
lahf
cmc
mov
inc
les
jge
cli
scas
sbb
xor
lcall
xchg
lea
mov
adc
leave
imul
lock
adc
mov
push
ret
adc
inc
in
sub
or
lret
sub
pop
mov
sub
cli
pop
out
cmp
add
lar
sub
cltd
push
xchg
lods
aas
mov
repz
loopne
fcomps
into
rcrl
fs
repnz
ds
adc
mov
mov
xchg
xor
xchg
test
int3
lock
test
lret
shlb
mov
add
call
or
std
mov
aaa
pusha
and
sub
jp
xchg
test
ja
popa
test
js
adc
jbe
inc
shrb
mov
lret
enter
or
shrl
jle
pop
insb
dec
lock
or
jg
inc
cmpsl
adc
divl
dec
clc
dec
jns
aas
push
enter
or
adcb
push
js
adcl
test
push
or
das
gs
pop
xchg
dec
in
cmp
or
mov
or
jne
jbe
lods
adc
sub
addr16
or
cmp
lret
xchg
sbb
sbb
inc
mov
jns
xor
ljmp
xlat
mov
pop
mov
imul
mov
ret
adc
push
sub
mov
sbbb
lods
push
popf
push
mov
jmp
ja
jle
iret
es
shrb
jle
cmc
cmp
mov
dec
aam
pop
dec
aaa
imul
insl
mov
loopne
lea
sub
mov
mov
lret
add
in
cmp
in
cs
fdivrl
iret
in
cli
xchg
addr16
sbb
cld
fsub
mov
arpl
pop
gs
mov
idivb
mov
out
xchg
mov
pop
mov
mov
iret
popf
and
mov
enter
shll
jp
cli
jns
fwait
scas
sbb
inc
adc
dec
out
lock
jge
cmp
or
mov
xor
divb
sub
xchg
inc
outsl
xchg
push
hlt
pop
jge
mov
sbb
test
push
mov
fcmovb
inc
jg
js
xchg
inc
sub
cwtl
dec
loop
movsl
inc
fidivrs
lock
loop
roll
std
push
out
add
stc
adc
orl
or
xchg
cmp
aas
loope
ficompl
sub
mov
push
subb
or
jge
andl
push
call
push
mov
mov
mov
std
push
fldenv
aam
xchg
loope
adc
shrl
mov
jecxz
enter
dec
data16
mov
into
xor
nop
mov
push
push
insl
mov
leave
xchg
negb
sbb
test
adc
fidivl
adc
stos
rcll
lret
pop
pop
std
stos
jmp
push
arpl
test
jp
sbb
enter
inc
rcrb
icebp
add
stos
orps
adc
fwait
rclb
and
mov
cmpsl
pop
lahf
sub
cmpsb
pop
jo
loop
cli
sub
xor
iret
enter
ret
imul
sahf
lods
mov
imul
lea
jae
add
jo
popf
xor
cmc
or
mov
cmp
test
and
push
insb
xchg
inc
sbbb
insl
jo
dec
shll
scas
fadds
jp
push
lods
ja
mov
fisubrl
inc
icebp
loop
mov
imul
andl
pop
dec
nop
jge
test
test
sbb
sub
xchg
pop
fisubs
in
pop
push
dec
bound
test
mov
mov
cli
xchg
add
push
lds
mull
bound
mov
sti
dec
pop
and
mov
arpl
shrl
mov
test
rclb
sti
cmp
cli
adc
pop
out
push
insb
mov
adc
mov
leave
cmp
dec
mov
dec
fdivp
xor
mov
dec
enter
loopne
xor
dec
xchg
pop
repz
jno
adc
mov
push
ret
cmpsb
and
mov
insl
xor
sub
jge
clc
cs
lds
or
cmpsl
sbb
and
cmpsb
mov
lods
mov
idiv
or
jo
cli
push
shlb
popf
dec
dec
push
mov
mov
mov
mov
cwtl
dec
push
out
add
add
cmp
push
add
mov
mov
xchg
test
xchg
add
xchg
add
add
mov
xchg
xchg
xor
stc
mov
sbb
sub
jne
leave
shll
fidivrl
inc
inc
dec
fs
mov
sbb
test
xor
lods
add
rclb
lcall
push
mov
rorl
iret
xchg
nop
inc
jns
add
fimull
loopne
test
adc
ljmp
mov
fwait
mov
pop
or
popa
rcrb
jo
pushf
xor
cmp
imul
add
add
stos
stc
in
push
cli
sub
adc
adc
filds
jb
cmp
xchg
in
imul
inc
mov
jg
xor
sub
cli
and
mov
in
clc
bound
push
sub
inc
sub
dec
xchg
aaa
loop
decl
insb
cmp
xchg
test
ss
push
popa
cmp
loop
or
pusha
mov
xchg
add
cs
xor
sub
hlt
insl
jns
xchg
stos
dec
or
js
push
mov
pop
pop
das
in
adc
jae
movsb
jle
and
fbstp
cld
rcr
leave
add
test
pop
mov
jb
dec
popf
and
mov
adc
cmp
cmp
in
push
mov
scas
mov
adc
aaa
fdiv
jle
mov
jecxz
aas
fcomps
testb
out
mov
xor
push
jle
xor
rcll
fs
and
dec
push
jbe
inc
xor
cltd
push
inc
cwtl
and
mov
or
pop
adc
cltd
les
cmc
adc
shll
pusha
subb
repnz
test
into
or
and
ljmp
push
push
rcll
pop
repnz
add
sbb
jge
std
test
push
loopne
xor
add
fstpl
mov
in
int3
test
mov
mov
cmc
icebp
xor
dec
push
dec
pop
cmp
scas
cmp
pop
imul
cmova
dec
gs
lret
aad
mov
bound
mov
pop
fisubrs
and
out
add
and
pop
lods
xadd
repz
movsl
xor
sub
adc
lods
push
cmp
push
aad
xlat
daa
pop
negb
lret
push
ss
pop
pop
lret
mov
insb
aad
sahf
fdivrl
jmp
jle
in
stos
sbb
pop
outsl
push
mov
add
sahf
or
or
mov
push
mov
adc
cld
mov
fmuls
orl
push
aas
push
mov
lods
xchg
jle
stos
clc
imul
loop
xchg
lods
orl
fdivl
mov
xor
ret
bound
push
adc
mov
rcrb
add
jo
push
mov
mov
sarb
cmp
lock
mov
add
adc
lret
ljmp
lcall
cmp
pop
inc
push
shll
stos
repnz
rclb
inc
dec
jg
jns
bound
sub
movsl
xchg
xchg
jmp
xlat
lret
or
and
xchg
aaa
test
pop
push
adc
mov
xor
stos
add
push
imul
pop
out
xor
pop
sbb
mov
imul
lock
jmp
loope
xchg
xchg
push
xor
test
pop
mov
fldt
pop
jnp
clc
jge
mov
sbb
andb
or
ret
out
sub
push
mov
into
and
or
add
bound
pop
scas
mov
popf
lahf
push
push
push
scas
pusha
xor
mov
xchg
xor
dec
out
xchg
out
test
outsb
xchg
in
or
or
clc
adc
outsl
mov
fs
in
imul
jae
inc
mov
add
gs
xchg
add
push
xchg
push
loope
rcl
mov
enter
add
in
inc
das
ds
stos
lea
shlb
sbb
mov
pop
rcl
test
mov
push
jae
cmpsb
mov
es
sti
or
movsl
xchg
adc
sbb
push
pop
aaa
fistl
xor
in
cmp
cmc
addb
dec
pusha
aam
lcall
das
mov
jnp
mov
adc
inc
lret
xchg
dec
or
bound
adc
or
pop
lock
pushl
xchg
in
les
fmuls
push
pop
std
arpl
test
std
mov
sarl
and
push
fnsave
out
or
and
aad
cld
xchg
icebp
in
mov
pop
cmp
test
sub
xchg
mov
xchg
out
repz
xchg
call
mov
fdivl
lds
jne
outsl
mov
dec
cmpsb
cmp
sub
aas
add
fwait
test
sti
pop
jae
pop
push
and
decl
cmp
imul
cmp
or
fstpl
xchg
push
js
jecxz,pt
ret
addr16
jbe
in
mov
xor
ss
dec
sub
subl
sub
push
movsl
mov
in
ljmp
in
push
mov
aas
push
xchg
inc
andl
xchg
and
leave
addr16
sbbl
push
movsb
lahf
ss
jnp
outsl
jle
sbb
or
cs
rcrl
cmp
dec
insb
pop
cwtl
out
dec
push
bswap
inc
daa
jmp
pop
jo
fsubrs
je
dec
outsb
ret
push
push
dec
loop
je
das
insl
add
or
sti
inc
xchg
cmp
in
loop,pt
jl
insb
add
add
sub
lcall
shrl
sbb
push
mov
xchg
jp
add
inc
and
xchg
push
mov
adc
adc
or
test
mov
inc
scas
dec
sbb
fcompl
sti
fidivs
stos
mull
sub
or
sub
imul
sbb
imul
add
fisubs
push
sarb
xchg
sbb
mov
push
mov
loope
icebp
enter
movsl
rorb
adc
add
aad
mov
addr16
in
popaw
lods
lret
push
js
xor
xchg
fwait
and
mov
jo
mov
push
sbb
inc
mov
ljmp
lret
mov
adc
mov
or
bound
lahf
jp
ror
imul
jnp
jae
sahf
insb
ret
fsubrp
sbb
mov
cmp
dec
loop
mov
imul
mov
or
jnp
xchg
jmp
xchg
mov
mov
adc
aad
jo
mov
dec
push
jae
xchg
outsb
fsubl
popa
mov
add
imul
mov
in
mov
mov
sub
cmp
lcall
ja
inc
inc
sub
inc
loopne
test
test
repz
mov
cmp
sub
cmp
push
int3
sub
dec
jns
ret
xchg
lea
and
inc
fdivs
xchg
bound
aam
dec
mov
popa
xor
dec
mov
js
inc
sub
dec
inc
inc
jns
mov
jg
lret
mov
out
arpl
push
adc
sub
aas
pop
dec
mov
pusha
pop
push
out
pusha
and
mov
xchg
scas
inc
les
dec
lock
ret
mov
les
add
add
fs
push
xor
mov
mov
testl
test
lea
or
ss
push
lods
enter
or
sbb
loope
lahf
xor
jne
xchg
lret
or
cmp
dec
es
lahf
dec
sbb
nop
fmull
mov
movb
test
add
iret
ficomps
mov
jae
push
pop
xor
xchg
jge
mov
cmp
jns
fs
ds
sbbl
add
push
xchg
dec
dec
jae
inc
pop
in
out
jnp
imull
fdivrl
xor
mov
std
dec
push
sti
jl
lahf
xchg
add
div
fucom
pop
lret
fwait
daa
aad
addr16
push
int
fcomip
adcl
cmp
push
mov
adc
mov
nop
mov
push
lods
sbbl
inc
jbe
andl
xchg
dec
pop
fisubrl
fidivl
mov
jecxz
out
pop
iret
jecxz
jne
sbb
cmpsb
mov
scas
xchg
add
adc
lea
mov
pusha
lods
push
push
mov
xlat
lods
mov
sahf
pop
inc
cmpsl
or
lods
mov
lret
inc
push
and
jae
testb
cmp
and
iret
xchg
sub
punpckhdq
pop
repnz
mov
clc
out
daa
and
adc
mov
test
call
or
std
lods
movsl
outsb
and
rcl
adcb
mov
dec
adc
mov
ret
lods
jmp
inc
fs
inc
cwtl
in
jnp
adc
fisttpll
aas
out
xor
cmp
adc
mov
cli
xchg
jo
or
adc
cmp
roll
out
test
lods
mov
cld
push
insb
push
pop
pop
sahf
popa
fs
mov
add
cmp
cmp
pusha
jmp
insb
sub
test
out
pop
xorb
cmp
dec
push
jecxz
pop
es
int
xor
in
rcr
pop
rcll
mov
sbb
push
jae
mov
push
mov
mov
es
fs
push
iret
lods
fsubrl
push
ss
mov
loop
jmp
out
rorl
dec
adc
jbe
imul
lret
cmp
cli
jne
in
inc
fstpt
fidivrs
insb
sub
fcmovb
movsl
mov
shr
pusha
shrl
dec
ret
pop
lock
imul
sub
es
dec
pusha
stc
ss
bound
sub
xchg
jb
or
loop
and
mov
scas
ja
xchg
sub
cmp
into
fsubrl
pop
mov
inc
mull
pop
cmp
daa
clc
mov
hlt
push
insb
sti
cltd
pop
xor
cmp
scas
pop
inc
xchg
add
dec
test
bound
lret
adc
aad
icebp
pop
dec
and
rcll
add
cmp
sub
fwait
mov
test
in
imul
imul
pop
mov
jnp
iret
fwait
ret
icebp
push
sbb
pop
or
cmp
outsl
pushf
sub
cld
and
mov
stos
xor
pop
loope
nop
pop
ja
pushf
inc
hlt
clc
shl
sub
or
jp
inc
pop
pop
fwait
call
mov
arpl
fwait
test
inc
inc
push
popa
jnp
imul
mov
les
lods
loope
sbb
test
sti
daa
push
or
dec
jnp
or
insl
pushf
sub
pop
or
pop
stos
push
push
scas
shrb
add
sub
xlat
xchg
popw
mov
pop
pop
sub
decb
jp
xor
mov
mov
das
imul
jge
test
xchg
cld
jnp
xor
dec
fisubrl
pop
stos
cmpsb
inc
sbb
adc
jl
xchg
idiv
dec
shrl
ss
mov
int
lea
dec
or
push
pop
or
mov
adc
pop
mov
xchg
push
push
test
ljmp
inc
sbb
pop
shll
mov
dec
add
mov
fdivs
in
push
shrl
ss
inc
fisubrs
push
loope
lret
rcll
test
cmpb
out
add
dec
or
mov
adc
andl
and
cmpsl
fs
mov
movb
pop
es
push
cmpsl
sub
jge
pop
jae
ficoms
sub
jg
xorl
rcl
jae
movsb
cmp
xchg
pop
push
neg
out
xchg
sbb
cmc
cmp
loop
sub
jo
cmp
popf
bound
jne
inc
ret
push
outsl
adc
insb
adcl
bound
rcrb
push
xor
out
fbstp
xchg
iret
fldcw
jno
jp
in
sbb
fdiv
pop
dec
ret
mov
push
insb
sbb
inc
mov
iret
cwtl
xchg
sbb
out
int
xchg
es
add
es
and
dec
pop
movsl
sbb
cs
pusha
push
jge
or
mov
push
mov
cmp
call
dec
sbb
test
pop
xchg
aas
adc
inc
mov
jb
test
or
into
pop
idiv
push
push
lahf
xchg
cld
mov
ret
and
pop
push
in
xor
lret
sbb
push
mov
loope
sbb
mov
nop
das
pop
stos
clc
cmpsl
cld
jp
pop
push
stos
fs
test
xchg
enter
inc
jp
and
pop
pop
fnsave
mov
adc
aad
cmp
push
mov
pop
lods
ds
mov
in
stc
je
sbb
ja
jae
in
inc
pushf
add
adc
fadds
test
int3
arpl
mov
das
sbb
imul
sub
iret
adc
fisubrs
scas
nop
popa
ljmp
mov
dec
xchg
push
fldl
imul
xor
imul
jne
dec
ds
adcl
push
orl
or
sub
ljmp
roll
mov
add
test
call
rol
cmp
sub
jp
leave
loop
mov
loopne
rclb
stos
sub
das
loope
jecxz
push
and
mov
es
mov
cmp
mov
dec
loopne
scas
mov
dec
and
mov
cmp
popf
adc
pop
add
push
cmpb
mov
gs
push
push
add
sbb
inc
sbb
xlat
jmp
lea
es
lcall
loope
out
imulb
jle
pushf
jbe
into
cld
sbb
xor
sub
push
push
cwtl
xor
mov
mov
leave
int
cld
fstpl
mov
push
jg
nop
adc
inc
sbb
xchg
ret
pop
xor
and
setg
add
cwtl
inc
dec
dec
or
gs
subb
inc
cmc
mov
fsincos
push
leave
jnp,pn
xor
inc
sbb
sub
push
mov
dec
cmp
sub
xchg
jl
pop
outsb
adc
out
mov
clc
inc
sbbb
jbe
or
nop
pushf
push
imul
cwtl
xorl
sbb
and
nop
mov
push
sub
pop
lret
inc
bnd
popf
out
xchg
xor
clc
xchg
or
aad
sub
lods
in
loopne
sub
ja
jmp
mov
pop
movl
ror
int3
pop
jle
push
mov
mov
movsl
cmp
or
out
pop
xchg
sub
adc
ret
mov
shl
std
pop
bound
cmp
jne
cltd
cmpsb
cmp
mov
loope
mov
lods
xor
lods
lea
adc
xor
addr16
lret
lret
jb
sub
iret
scas
push
adc
jno
popa
stos
dec
adc
pop
ret
inc
cmp
cltd
lds
fwait
xchg
mov
pop
adc
fdivr
xchg
push
stos
arpl
add
add
lea
into
mov
ljmp
xchg
xlat
dec
push
sbb
fst
xor
adc
jle
pop
in
shrb
inc
sub
pop
out
add
mov
popa
jmp
in
popf
mov
push
xchg
cwtl
and
mov
mov
push
subb
int
repz
sub
push
mov
scas
insb
xor
ret
gs
subl
dec
and
popl
pop
or
cmp
push
fs
push
popf
mov
sbb
lds
bound
pop
add
jle
mov
cli
fnstsw
arpl
arpl
adc
mov
in
aaa
nop
cltd
cld
iret
lods
pop
ljmp
and
sub
pop
ret
mov
mov
xor
push
repnz
in
das
and
scas
mov
xchg
pop
mov
jbe
insl
pop
mov
dec
pop
loope
xchg
sahf
mov
adc
pop
clc
incb
rclb
test
cld
mov
inc
out
inc
cld
push
test
cmpsb
adc
mov
cld
adc
es
mov
xlat
adc
jo
dec
cmp
lret
scas
shrl
mov
mov
adc
jbe
ss
xchg
lret
insb
stos
cmp
in
xor
dec
stos
sbbl
loop
adc
lods
push
jmp
push
inc
jg
int
arpl
shlb
lods
shl
cmp
outsb
shll
mov
mov
inc
fidivs
sahf
fsubr
iret
fimull
mov
mov
movsb
or
scas
mov
or
mov
jmp
loopne
rorb
movsb
and
es
bnd
pop
in
das
mov
pop
test
cmp
or
aas
mov
inc
jle
push
mov
mov
sub
xchg
adc
iret
pop
bnd
mov
pop
testl
push
scas
mov
jge
movsb
sarl
leave
fcomps
loope
rcl
or
sub
jmp
cmp
or
sbb
push
scas
mov
cwtl
cltd
stc
pop
mov
push
push
fisubs
add
pop
leave
jne
push
scas
loopne
je
jmp
stc
nop
ret
pop
push
push
je
mov
add
sti
xchg
iret
loop
inc
pop
push
out
xor
jmp
insb
pop
xor
and
cld
sbb
xchg
add
rcrb
inc
add
xchg
lods
sub
dec
cmpsb
dec
pushf
pop
mov
mov
scas
or
sar
scas
out
sub
cmp
push
shlb
test
push
jne
lds
sub
mov
mov
jp
sub
xchg
mov
cs
xchg
ljmp
mov
xor
pop
add
xchg
inc
cs
mov
sub
or
shr
int3
pop
loope
sbb
in
pop
cmp
data16
lds
popl
xor
sub
cmp
sbb
mov
sub
popa
orl
pop
dec
loope
out
cld
cmp
mov
fsubp
and
inc
repnz
mov
mov
aaa
lret
imul
dec
mov
dec
mov
sub
outsb
add
daa
pop
test
ds
lret
enter
mov
add
clc
outsb
mov
cmp
or
pop
pop
test
cmc
mov
xchg
pop
and
jl
mov
xchg
xlat
sbb
mov
out
inc
data16
idiv
xor
push
bound
cltd
mov
ret
les
addr16
fistpll
push
popf
data16
lcall
cwtl
stos
push
std
push
mov
rcr
insl
cmp
pop
adc
adc
js
mov
push
addr16
shl
into
xchg
lods
fucomi
or
cmp
std
xchg
xchg
sbb
arpl
push
inc
enter
jo
out
or
nop
mov
dec
ficompl
mov
fmulp
xchg
sbb
inc
lcall
aad
mov
fldcw
lret
lret
adc
jle
jne
adc
mov
sub
lods
ret
push
fdiv
fcomps
pop
xchg
xchg
sbb
sub
jno
jge
mov
mov
mov
shl
cmpsb
loop
rorb
mov
jle
lea
sbb
jo
sbbl
fistpl
arpl
rcr
xchg
movsl
in
mov
push
mov
arpl
mov
clc
add
sub
in
idiv
add
movb
mov
mov
imul
addb
add
xor
mov
jmp
cmp
dec
iret
lret
js,pt
aaa
add
jp
sahf
ret
dec
lods
shl
lock
push
mov
sub
jnp
out
hlt
mov
pop
sbb
lret
mov
stc
push
test
aaa
xor
ret
push
push
push
mov
loope
xor
sbb
mov
cltd
inc
ret
pop
jb
sbb
sub
mov
mov
push
loopne
xor
xchg
aas
jb
cmpl
loope
xchg
adc
jl
push
stos
adc
lea
loopne
mov
xor
cmpsb
jnp
jge
cmp
movsl
inc
add
add
sbb
jge
imul
idivb
add
mov
sbb
jbe
xor
lret
imul
xchg
movsb
repnz
mov
xchg
push
jb
je
inc
sbb
mov
sbb
sbb
enter
out
dec
inc
sbb
movsb
sbb
roll
cmp
movsb
imul
or
or
adc
push
inc
inc
push
inc
jae
cmc
and
repz
mov
and
jb
popa
movsl
jp
and
lahf
fldenv
cs
pusha
leave
insl
loopne
push
or
pop
dec
out
jno
hlt
push
sub
inc
mov
jo
jns
xchg
mov
sahf
and
mov
sub
push
sbb
popa
xlat
sbb
sub
lea
push
xchg
sub
fcmovnbe
aaa
gs
mov
sbb
in
push
and
dec
mov
test
pushf
pop
addb
adc
nop
rcll
int3
dec
inc
or
inc
stos
dec
mov
pusha
imull
repz
std
pop
push
cmc
std
dec
inc
daa
inc
jbe
xchg
addr16
pop
mov
mov
sti
int
sub
fildll
sub
mov
push
sti
add
or
and
push
and
xchg
sbb
or
or
dec
jmp
xchg
xor
jmp
push
pop
mov
pop
cmp
icebp
aaa
into
and
sbb
scas
ret
or
das
jg
inc
inc
hlt
in
fidivs
loop
rclb
pop
mov
xchg
pusha
jo
jo
insb
rolb
cwtl
loopne
dec
in
ljmp
test
lahf
sbb
into
mov
arpl
jmp
int
in
cmpsb
lods
js
sbb
arpl
xor
call
subl
call
push
jno
cmp
push
fwait
push
fsubs
inc
test
int
mov
imul
cld
sub
mov
xchg
xorl
stos
add
sub
gs
mov
inc
pop
sahf
jae
jmp
and
pushf
mov
test
fwait
mov
nop
pop
aad
dec
mov
mov
loopne
sbb
movsl
repz
cmp
stos
inc
pop
cmp
xlat
cli
out
xor
xchg
scas
addr16
cwtl
popa
jmp
or
negb
and
pushf
inc
sti
cmp
adc
or
mov
xchg
add
in
loopne
out
sbb
lods
push
pop
mov
mov
dec
loop
popa
pop
in
loop
mov
loope
dec
cmp
and
dec
mov
lret
dec
mov
jp
jp
addr16
dec
jo
mov
cmpsl
sahf
call
repnz
push
data16
movsb
cmc
icebp
mov
popa
stos
pushf
and
insb
pop
ss
andl
xchg
scas
pop
repnz
mov
lock
pop
data16
xchg
cmpsb
mov
and
mov
cmc
movsb
xor
jne
test
cmp
or
fnsave
fmulp
movsl
push
jb
push
mov
mov
loope
loop
jp
cld
jp
setb
xchg
hlt
into
dec
push
pop
popf
in
sbb
push
mov
jl
adc
xorb
xor
or
pop
push
data16
jae
out
jns
dec
or
cmp
mov
popa
stos
shlb
xchg
aam
pop
sbb
es
mov
das
fildl
push
inc
mov
push
push
push
or
ficompl
mov
mov
dec
shrl
push
pop
add
inc
std
or
fs
shll
adc
xchg
hlt
jp
cs
adc
inc
inc
push
mov
xor
movsb
sbb
mov
inc
push
repz
cmp
adc
xchg
sub
cmpsb
and
loope
xchg
mov
iret
inc
mov
mulb
jge
adc
add
mov
mov
jb
lret
pop
jle
xchg
dec
pop
pop
adc
dec
mov
test
sub
div
or
sub
test
testl
cmp
jns
ljmp
inc
pop
repz
and
jnp
mull
pop
mov
lea
jle
xor
pushf
ss
sub
pushf
push
jl
sub
cld
dec
das
sbb
mov
shrb
lods
aam
test
mov
mov
sbb
popa
cmp
mov
mov
sbb
sahf
lods
loopne
lcall
popf
int3
lret
add
inc
push
xor
add
sti
hlt
jge
fcom
pop
icebp
imul
repnz
mov
subl
in
or
mov
mov
or
mov
and
sub
jp
and
std
lea
lret
lahf
in
sub
ljmp
lock
xchg
mov
add
cmp
jbe
pop
mov
and
fisttpll
cmp
mov
adc
in
das
sbb
fbstp
enter
sbb
add
nop
das
sbb
sbb
rorb
lcall
outsl
inc
mov
stos
mov
out
fcmovnu
jns
xchg
sbb
mov
aam
mov
ljmp
xchg
mov
jbe
jge
pop
cmpl
add
test
pop
imulb
inc
mov
or
add
jbe
mov
das
rcrb
fnstsw
mov
dec
in
ret
adc
dec
icebp
push
aas
shrl
in
in
mov
fiaddl
mov
sbb
stos
xchg
in
repnz
pop
cmp
cmp
daa
mov
and
int
xchg
dec
repnz
hlt
addr16
fildl
lods
rolb
es
icebp
je
mov
out
cmc
jns
dec
pop
mov
mov
cli
aad
out
and
cmp
mov
ret
pop
out
hlt
data16
addr16
jbe
shll
or
into
fdivrs
lds
nop
dec
pop
out
xchg
push
or
fs
mov
bound
data16
daa
sbb
imul
rcrb
rorb
jne
sub
sub
xchg
mov
mov
leave
mov
rcr
or
or
mov
mov
in
insl
das
pop
push
or
mov
mov
inc
enter
ss
mov
fcompl
fisubs
shl
jle
outsb
add
repz
mov
shll
mov
call
leave
push
out
ss
insl
aad
addb
dec
mov
cld
xchg
xor
push
test
mov
mov
imul
int
fiadds
adcl
adc
adc
loope
xor
push
movsl
jl
in
mov
mov
les
push
in
mov
cld
xchg
xchg
inc
pop
hlt
jbe
mov
daa
inc
rclb
mov
lods
imull
sti
fsubs
notl
bswap
rol
mov
push
scas
leave
loope
sti
shrb
push
xchg
xor
cwtl
mov
sub
ficoml
in
movsl
js
sbb
and
jecxz
stc
inc
fnstenv
scas
cs
js
subl
add
sbb
nop
sti
push
pop
jae
xchg
jno
mov
mov
rolb
mov
lods
in
clc
jno
cmpsl
fistpll
adc
mov
xchg
out
adc
fadds
and
lods
test
push
lods
xlat
sbb
xchg
cs
loop
imul
cltd
test
les
loope
adc
notl
cltd
xor
inc
pop
insb
jp
mov
lret
mov
jno
in
jmp
cli
aas
jg
out
in
test
cld
inc
fnsave
cltd
pop
cmc
ror
cli
xchg
adc
sbb
bound
rol
or
mov
sub
mov
jecxz
cltd
push
repnz
mov
push
cmp
aaa
jp
jp
adc
push
jae
and
movsl
hlt
mov
test
mov
dec
sub
mov
jp
fs
sbb
cmc
mov
loope
loopne
mov
xchg
outsb
jmp
pop
aas
test
xchg
dec
aas
adc
sahf
mov
out
push
stc
and
cmc
xchg
mov
fcmovu
int3
notl
testl
xchg
mov
dec
sbb
mov
jle
push
mov
jmp
jbe
push
cs
stos
sarl
inc
mov
scas
out
add
lods
mov
dec
or
cmp
aad
outsb
lret
lcall
adc
adc
push
rcl
rcl
rcrl
bound
subb
sbb
rcll
adc
xchg
mov
xchg
jl
movsb
push
decl
sub
mov
iret
js
add
push
push
cltd
popa
stos
mov
jle
jne
call
xor
pop
pushf
popf
lcall
dec
mov
in
sub
and
cld
or
addl
out
mov
inc
pop
mov
mov
clc
stos
dec
push
shrl
stos
arpl
mov
cmp
jb
and
sub
sar
je
rol
jle
lret
ljmp
cmpsl
fs
pop
xor
and
mov
orb
lahf
mov
cld
inc
sbb
or
aam
dec
push
mov
adc
mov
fcoms
push
fidivl
mov
shll
dec
add
pop
test
and
shlb
pop
xor
push
jo
sti
shl
dec
sub
jl
sahf
jnp
lds
movsb
in
cs
cwtl
loope
int3
punpcklbw
jl
decl
fs
outsb
test
inc
lret
mov
cld
fisubrs
cmc
stos
mov
imul
sbb
jno
out
and
xchg
jne
lds
and
add
sbb
jg
cmp
jle
imul
popf
add
popf
xor
mov
jbe
mov
rclb
outsl
loop
std
push
out
sub
mov
decl
pop
jl
or
shlb
mov
into
imul
loope
push
adc
imulb
leave
loope
mov
in
push
out
shll
cmc
imul
call
add
adc
dec
pushf
add
mov
and
xlat
stos
xor
aad
shrl
adc
or
and
mov
jns
sbb
mov
adc
cmp
mov
hlt
sbb
es
push
loop
dec
sbbl
nop
loope
in
adc
outsb
jp
adc
nop
jb
pop
xor
pop
out
cwtl
pop
dec
ret
aaa
lahf
aaa
int3
pop
push
mov
repnz
sbb
cmpsl
into
mov
loopne
mov
shl
jge
and
xlat
jge
sahf
or
popl
push
jecxz
dec
adc
push
add
daa
or
dec
int
mov
mov
ja
inc
out
repnz
pop
scas
fidivrs
outsl
xorl
insl
cmp
inc
into
pop
fisubs
sahf
xchg
aas
out
sbb
adc
mov
adc
idivl
jbe
shl
lods
fs
and
stos
in
stc
and
xchg
pop
or
jbe
outsb
rorb
int3
hlt
test
scas
jg
and
adc
add
into
popf
ja
cmpsb
out
rorl
leave
push
out
aam
orl
mov
lretw
iret
mov
adc
movsb
pop
das
mov
push
or
add
in
test
pop
popa
add
or
lods
into
or
dec
das
bswap
call
js
mov
and
ret
js
lds
and
pop
lret
fimuls
fbstp
in
inc
shll
xor
jnp
lds
or
push
popf
arpl
or
inc
pusha
sti
push
inc
or
pushf
push
loope
lahf
mov
mov
dec
pop
push
dec
mov
pop
or
sbb
stc
and
fs
xchg
lods
shlb
jbe
and
ss
movsb
push
mov
enter
mov
cmp
fsubrs
sbb
dec
cmpsb
jbe
sti
cmpsl
push
xor
shrb
jb
jle
push
aas
aad
or
pop
outsb
out
cltd
mov
sahf
into
jns
fs
adc
adc
mov
cmp
jae
repnz
fiaddl
mov
scas
cs
std
leave
jne
ret
xchg
or
jmp
aad
int3
aaa
inc
inc
imul
jp
jne
popl
push
and
jge
mov
ss
stos
repz
fucomi
lods
fstl
sub
loop
pop
dec
adc
scas
jp
add
mov
jge
mov
xchg
sub
sbb
je
adc
gs
leave
pop
lock
xor
mov
jle
or
or
xor
movsl
pop
movsb
pop
xchg
jmp
sahf
cwtl
xchg
repnz
aam
mov
mov
push
fstcw
xor
or
mov
pop
popa
faddl
cmp
test
lret
test
fwait
icebp
adc
insl
in
mov
out
cs
icebp
sub
sbbl
stc
xor
dec
fwait
dec
adc
shrb
dec
adc
cld
out
inc
sbb
mov
imul
nop
sub
adc
fbstp
pop
cmpsl
mov
loop
and
test
aaa
or
outsb
js
mov
loopne
fisttpll
sub
sbb
movswl
xchg
in
xor
mov
xor
mov
cmpsl
lods
imul
insb
fisttps
call
les
pop
lods
add
iret
xor
scas
lock
test
cli
inc
xchg
inc
xchg
xchg
jnp
lret
mov
js
add
scas
testb
adc
loope
je
lods
leave
lds
lock
sub
lcall
movsb
arpl
pop
repnz
jmp
pop
pop
push
mov
repnz
out
fistpl
xchg
adc
inc
addr16
int
fcompl
mov
ss
out
ljmp
or
dec
xchg
adc
mov
cmpsb
cmpsb
jno
mov
aam
in
cvtpi2ps
stos
mov
out
ret
in
and
push
addr16
adc
outsb
lea
rcll
inc
jl
or
data16
cmc
insl
pusha
jb
xchg
mov
movsl
js
pop
fdiv
mov
push
and
stos
cmc
mov
aaa
arpl
jno
pop
pusha
testl
and
add
xchg
ret
push
dec
push
leave
movsb
add
mov
add
test
jo
jmp
sbb
pop
adc
xchg
or
push
sahf
insl
jge
xor
jmp
or
outsl
ret
jbe
int
outsb
dec
fldenv
pop
xchg
aam
repnz
jbe
cs
xchg
addr16
xchg
lret
pop
add
rcrb
stos
lds
dec
repnz
test
or
xor
sbbl
push
outsl
add
jecxz
cmpsl
ret
fwait
nop
loope
mov
test
fwait
ret
insb
cltd
std
lcall
and
popl
add
in
into
sub
cmc
insb
jge
xor
inc
out
lcall
repnz
pop
mov
mov
sahf
push
lods
fdivrs
and
xor
xor
movsb
inc
enter
mov
sbb
rorl
cmpl
out
adc
xor
inc
xor
jmp
ret
leave
xchg
pop
movq
and
add
insb
xchg
jbe
stos
add
push
mov
test
mov
rclb
repnz
push
das
rorl
add
mov
ljmp
lock
push
sahf
fwait
add
lcall
dec
mov
jnp
and
sbb
idivb
and
lock
push
popa
pop
jo
stc
cli
andl
inc
mov
cmp
subl
lock
int3
enter
sbb
das
test
sub
pop
pop
adc
clc
fstpl
push
sub
sti
pop
jbe
test
jns
push
or
jbe
pop
jle
add
fdivs
push
dec
ret
out
popa
aad
loope
xchg
jns
pop
addr16
mov
ljmp
movsb
lret
loope
scas
jmp
rclb
dec
xchg
dec
and
arpl
aas
ds
cmpsl
rcrb
andl
cmp
cmpsb
mov
shll
dec
icebp
clc
outsl
insb
sub
jns
xchg
jne
add
ljmp
and
mov
adc
loop
out
push
xor
das
hlt
negb
jbe
ret
sub
jmp
jecxz
fdiv
loopne
imul
adc
xchg
or
lcall
xlat
jl
inc
lcall
add
sub
inc
jl
mov
scas
stos
pop
outsb
sub
xchg
mov
sub
jbe
cmpsl
andb
cs
mov
ss
popa
dec
add
push
mov
mov
push
mov
aaa
push
shlb
jle
pop
lahf
stos
cmp
rorl
repnz
int3
enter
push
jmp
dec
lea
xorl
out
jmp
mov
push
mov
ss
jl
arpl
xchg
repnz
sbb
andl
adc
jl
sbb
lock
imul
sub
or
cmp
sub
mov
dec
jnp
or
push
ss
fimull
push
loop
xor
inc
sbb
stos
cwtl
idivl
es
mov
pop
adc
loopne
mov
sbb
loopne
push
repnz
cli
aam
in
adc
fxch
dec
loopne
xlat
incl
out
in
pop
scas
sub
lods
lods
jmp
sub
push
mov
mov
push
inc
sti
test
fstl
fsubrs
cmc
cmp
ja
out
cmpsl
cld
cwtl
mov
in
pop
sbb
int3
out
push
stos
inc
incl
xchg
lock
cmp
aad
icebp
test
xchg
cmpsl
lret
clc
adc
scas
in
in
push
rcrb
dec
or
decb
push
sub
push
cmp
push
inc
jmp
sbb
insl
popl
adc
sub
sbb
jg
lock
xor
mov
je
inc
push
cmp
mov
mov
mov
xchg
mov
out
mov
scas
dec
inc
fcompl
addl
repnz
aas
push
push
in
push
aas
dec
orl
and
out
inc
lods
std
or
mov
xor
or
pop
xor
je
in
push
xor
xlat
rol
pop
stos
pusha
clc
push
fadd
movsb
test
pop
es
mov
cmpsb
sbb
inc
lds
dec
pop
stos
loopne
cmc
scas
pushf
test
inc
repnz
push
lods
andb
std
xchg
cs
ret
repz
push
ljmp
jo
push
dec
dec
pop
pop
pop
dec
es
sub
ljmp
pushf
repz
cltd
popa
cmp
and
pop
push
mov
xchg
outsb
cwtl
mov
lret
clc
push
push
aaa
and
jns
or
dec
test
stos
inc
or
or
sub
cmp
dec
push
subb
outsl
mov
in
cmc
xchg
add
cmp
loope
dec
cmp
leave
int
add
cmpsl
pop
mov
push
lods
push
inc
ret
mov
test
inc
and
jmp
xchg
movsb
cmp
jne
cmp
rcrl
popf
pcmpgtb
stos
jno
fwait
sub
aas
sbb
adc
ret
or
scas
das
andl
rcrb
pop
mov
mov
stos
add
addb
out
in
cmpsb
addb
mov
bound
sbb
xlat
outsb
shrl
insb
mov
into
es
dec
aas
mov
inc
movsl
cwtl
stos
mov
rcrl
mov
push
sub
aad
ret
sarl
fs
xchg
jle
sbb
xchg
pushf
ljmp
mov
pop
mov
xchg
and
pop
push
mov
push
loop
jg
loopne
lahf
lcall
and
in
aad
xchg
enter
nop
addr16
repnz
xchg
and
xchg
cli
in
cld
dec
pusha
cs
outsl
or
out
movsb
ja
sbb
nop
addr16
and
out
dec
mov
sub
imul
aad
out
sbb
bound
pop
xor
mov
or
out
jmp
push
xchg
adc
hlt
cmp
or
xchg
sbb
xlat
push
push
repz
ja
inc
lcall
mov
cmp
std
xchg
outsb
push
ror
push
inc
mov
fsubs
sbb
dec
into
dec
test
jle
rcll
mov
fstps
mov
fwait
fldt
mov
or
jno
adc
mov
mov
mov
faddp
in
mov
insl
imul
sbb
mov
cmpsb
std
test
dec
into
push
std
adc
loopne
mov
and
lcall
std
fldl
push
out
jecxz
inc
jp
stos
imul
xor
jnp
js
std
jg
xchg
hlt
mov
xchg
mov
pop
in
inc
dec
jnp
cld
aas
jo
and
pop
shrl
out
sarl
addr16
ja
js
adc
lock
sub
shl
mov
xchg
or
jae
fdiv
pop
pop
push
mov
out
pop
mov
insl
sub
imul
mov
dec
cmp
fbstp
push
dec
shlb
hlt
mov
insb
lsl
xchg
jge
mov
bound
les
push
insb
fwait
cmp
shlb
push
in
adc
call
cmp
mov
sbb
subb
ror
sbb
daa
lcall
shlb
pop
fimull
pop
mov
cmp
lret
jne
jmp
push
shrb
cmp
out
out
pop
xchg
adc
xor
sub
rcrl
mov
ja
mov
in
push
and
aam
stc
fidivrs
out
lret
sub
nop
jno
vprotd
ret
repz
dec
repnz
jbe
jge
into
inc
lret
cld
daa
cmp
cwtl
cmpsl
sbb
ds
mov
call
ss
xor
cmp
cld
mov
outsb
cmpsb
rcll
inc
push
movsb
addr16
in
notl
and
fdivrs
dec
mov
fwait
push
sahf
pop
jl
mov
jecxz
stos
mov
test
mov
jecxz
rclb
mov
iret
push
lret
cmp
fisubl
xchg
insl
sub
icebp
negl
cmp
adc
fsubs
into
cli
fs
fwait
stos
aaa
and
xchg
mov
pushf
or
outsb
lahf
sbb
cmp
xor
mov
pop
push
sbb
idivl
inc
aam
mov
xor
jmp
add
pop
mul
add
mov
dec
testw
adc
scas
sti
inc
loope
mov
in
mov
xchg
in
sub
iret
lret
stc
test
sbb
loopne
fdivrs
jno
cwtl
cli
cltd
inc
sarb
sbb
or
cmpsl
out
xor
and
xchg
pop
push
shrl
jmp
es
push
bound
add
sbb
ss
or
movsl
icebp
icebp
fdiv
mov
xchg
sub
in
pusha
sbb
mov
dec
cmp
jns
cmp
cmp
popl
jb
shlb
fsts
inc
jo
jne
enter
leave
mov
push
pop
xchg
cld
xlat
sbb
les
mov
jno
hlt
mov
repnz
push
movsb
addr16
dec
addl
and
push
xor
movsl
and
sbb
scas
rcll
cmp
push
aad
pop
and
push
xor
sbb
push
cmp
fsubs
dec
mul
lds
mov
xchg
cmp
loopne
pusha
mulb
jne
lcall
sarb
daa
pop
jne
fcompl
leave
sub
rorb
outsb
outsl
enter
mov
pop
sbb
out
aaa
ret
cwtl
xchg
lds
mov
pop
cmp
adc
dec
pop
in
das
and
mov
sbb
xor
jno
ficompl
or
sbb
dec
jmp
loop
scas
inc
popf
sbb
pop
popa
aaa
in
push
popa
mov
dec
icebp
add
adc
roll
cmp
mov
iret
mov
xor
stc
xchg
loopne
lret
sub
idiv
jnp
lods
popa
sahf
fisttpll
movsb
cmp
xor
ja
mov
lea
fmul
iret
mov
inc
and
int3
ja
jnp
bound
cmpsl
sbb
mov
jns
mov
sbb
xor
out
xor
mov
inc
jmp
ljmp
icebp
jns
inc
and
fisttpl
or
ds
sbb
and
fisubrl
int3
popa
mov
idivb
push
mov
push
fdivl
iret
gs
gs
jae
dec
shll
xchg
xchg
inc
push
std
jp
das
je
xchg
subb
xor
rcr
inc
mov
dec
mov
jmp
pop
sub
mov
popa
in
push
jle
inc
inc
push
jo
xor
mov
out
pop
shrb
int
pop
inc
mov
inc
dec
idivb
outsl
repnz
or
mov
insl
sbbl
into
fldenv
sbb
xchg
jae
sbb
repnz
lcall
cwtl
inc
pop
fisubrs
rorl
icebp
mov
enterw
lods
daa
pop
mov
or
in
loop
or
lret
jle
mov
jnp
and
add
fs
lret
pop
stc
and
aaa
pop
lret
pop
mov
jnp
aaa
lds
adc
dec
adc
stos
rcl
jge
add
push
cltd
pop
sbbb
ljmp
dec
xchg
out
jp
rcll
decl
lcall
jbe
mov
adc
in
test
mov
ss
pop
data16
push
in
push
pop
sub
popf
addr16
test
mov
mov
out
mov
mov
mov
cmp
xlat
add
sbb
idivl
jp
cwtl
sub
adc
mov
lret
inc
fidivs
inc
stos
lods
mov
xchg
gs
sbb
mov
in
roll
or
pop
scas
jecxz
loopne
fwait
or
in
mov
push
lods
lods
jb
mov
dec
je
mov
add
dec
adc
in
inc
dec
ds
and
mov
stc
aas
jne
mov
dec
jge
out
or
xchg
ja
in
or
aam
lahf
lock
xchg
jp
repz
pop
test
hlt
mov
fcomps
mov
lods
fucomi
pop
loope
scas
inc
pop
movsl
arpl
xor
xor
sbb
in
mov
adc
ds
mov
popl
ljmp
clc
pusha
inc
movsl
pop
adcb
xor
rclb
sbb
gs
xchg
push
adc
testb
mov
push
xchg
dec
loopne
push
lret
insb
repnz
mov
push
jmp
nop/reserved
xor
sub
arpl
cmp
hlt
insb
mov
mov
scas
js
popa
out
sub
adc
sbb
lret
test
es
sbb
mov
fwait
sti
pop
jnp
mov
les
cmp
sbb
cs
cld
scas
mov
sub
jno
out
call
sbb
aam
out
je
adcl
add
int3
test
adc
push
push
or
jo
pusha
fbstp
outsb
lahf
fincstp
setp
cmpl
out
js
imul
xor
sti
adc
xrelease
test
repz
mov
idiv
sub
int3
push
bound
or
ret
cwtl
push
cmc
rorl
cmpsl
sbb
sub
test
xchg
pop
int3
mov
pop
bound
call
mov
test
sbbl
scas
and
fcomps
mov
cmp
orb
test
or
mov
mov
cmp
fdiv
or
mov
xchg
jg
cmp
pop
sbb
ja
popf
sub
pusha
cli
int3
jo
adc
and
xchg
mov
subl
ret
out
pushf
cmp
lret
add
jbe
jae
loope
shlb
rcrb
out
jmp
subl
loopne
push
mov
inc
sub
push
pop
icebp
xchg
mov
ss
lods
push
rorb
data16
jno
std
jmp
ret
add
icebp
or
addr16
mov
pop
lods
rcl
ds
std
int
cmp
imul
ds
xchg
jnp
fxch
mov
std
xor
imul
xchg
sub
push
push
add
xlat
aad
fimuls
and
cld
pop
rorl
fldt
dec
rol
add
xor
xor
adc
xor
jp
cli
adc
ret
roll
jp
js
cmp
movsl
cmpsb
out
xchg
mov
or
int
adc
ret
test
mov
popa
das
flds
popf
ljmp
jb
sbb
jmp
call
jns
xchg
inc
inc
add
gs
dec
xorl
pop
mov
jg
cmpsl
cltd
das
and
sub
std
push
insl
cmp
movsb
je
mov
jnp
inc
loop
xchg
add
iret
enter
dec
inc
push
mov
aad
xor
xchg
movsb
xorps
cmpsl
cmp
mov
loopne
mov
mov
addr16
sbb
cltd
xor
adc
jmp
add
out
test
dec
inc
jmp
notb
xchg
les
cs
mov
es
xchg
push
xor
ljmp
dec
mov
mov
lea
imul
addb
xor
inc
push
arpl
mov
mov
lods
xchg
fsubs
mov
lahf
push
ds
mov
or
add
andl
cwtl
and
aam
jecxz
push
dec
pop
bsr
mov
lret
push
cmp
pop
mov
hlt
mov
inc
stc
leave
and
movsl
xchg
popa
xlat
outsb
aas
or
jo
push
mov
loope
das
cmp
and
enter
mov
add
cmp
xchg
cmp
mov
push
fwait
mov
lds
jg
repnz
sub
pop
out
test
movsb
inc
pop
fnsave
loopne
test
enter
into
xchg
insl
add
fldl
or
shlb
ret
jge
dec
xor
xor
push
daa
mov
jle
inc
rcrb
dec
shlb
mov
push
dec
inc
inc
mov
stos
inc
fidivrl
mov
addl
dec
adc
mov
int
bound
adc
mov
xchg
or
cmp
js
xchg
outsb
and
cmc
cmp
aam
pop
and
pop
icebp
arpl
scas
frstor
test
mov
xor
ljmp
xor
inc
movb
and
cmp
out
popa
pop
jg
mov
loopne
aas
xchg
icebp
push
int
loop
pop
mov
lods
arpl
sub
and
mov
movsl
pop
arpl
js
pop
cwtl
push
xchg
mov
outsl
jns
add
xor
or
pop
xchg
add
pop
jp
sub
push
outsb
sti
addb
outsb
repnz
xor
jno
dec
popa
sbb
jecxz
jle
sub
and
add
daa
mov
repz
sar
push
mov
jb
lods
fcomp
pop
test
mov
in
adc
jge
dec
and
pushf
hlt
iret
push
xor
test
lret
xor
xorl
mov
das
mov
push
inc
je
pop
sub
inc
repnz
xor
adc
cld
imul
pop
rorb
cmpsl
jo
mov
fcmove
arpl
out
bound
cwtl
outsb
aas
clc
call
add
mov
dec
mov
pop
fildl
adc
notl
gs
xchg
out
out
cld
jnp
pop
cwtl
lret
mov
and
xor
ss
test
inc
fldt
cld
or
repnz
mov
dec
add
adc
and
pusha
stos
nop
imul
mulb
adc
push
mov
inc
mov
test
jmp
test
ret
hlt
and
fldenv
fwait
sbb
or
pop
cmp
insl
cmp
fistl
jecxz
xchg
sbb
or
sub
add
scas
add
sbb
mov
scas
mov
cmc
lds
push
leave
flds
dec
aad
loopne
mov
dec
mov
je
insb
cwtl
test
or
mov
jae
push
nop
sub
add
insb
leave
bound
sbb
int3
ljmp
int
push
and
insl
sub
xchg
push
pop
jae
cmp
insl
out
fidivrl
pop
dec
out
sahf
test
jl
mov
push
into
or
outsl
hlt
aad
and
and
pop
add
dec
dec
nop
in
mov
rcrl
mov
lea
in
mov
jg
and
mov
enter
idiv
sbb
sbb
sti
inc
adcl
adc
inc
stos
xor
push
xor
test
movsb
sbb
mov
dec
mov
outsb
cmp
inc
testb
addr16
int
ljmp
adc
decb
inc
leavew
jp
push
xchg
in
gs
mov
je
shlb
rolb
sbb
jmp
pop
mov
es
sysenter
test
addr16
sahf
sub
and
repz
shrb
cmp
lock
fs
fnstenv
cmp
fbld
lods
or
cmp
mov
pop
std
cmp
repnz
insl
sahf
aaa
popf
pop
fwait
jns
js
shlb
lds
cld
mov
fstpt
push
or
cmp
popf
cmpl
loopne
sbb
ja
bound
xchg
mov
mov
and
pushl
sarl
xchg
fisttps
repz
mov
shll
add
push
mov
pop
movsb
adc
jl
mov
es
push
pop
push
mov
lcall
test
scas
or
into
dec
mov
mov
into
dec
in
pop
dec
pop
hlt
das
cmpsl
dec
cmc
movsb
add
sub
decl
jmp
mov
push
add
mov
aad
add
aad
jns
adc
sub
fistpll
in
les
test
stc
xor
in
jnp
push
mov
outsb
aad
rcr
jg
ss
mov
push
sarl
push
push
adc
mov
sub
sti
shrl
add
insl
imul
ret
scas
inc
cmp
xchg
sbb
jnp
repnz
stos
bound
add
shll
jnp
lods
pop
stc
js
jne
repnz
pop
fwait
mov
xchg
jae
push
push
ret
push
nop
sub
dec
loop
push
inc
imull
repnz
call
mov
fsubr
cmp
ret
jle
fldcw
fidivs
jge
iret
mov
rorl
and
sub
mov
pop
fbstp
les
fwait
aam
mov
pop
daa
stos
cmpsl
ret
xor
mov
test
enter
cld
ljmp
mov
insl
mov
dec
sub
ds
sbb
xchg
cs
jge
cmc
stos
jne
sbb
xor
flds
lahf
fstpl
mov
sub
sti
shrl
xor
dec
mov
adcl
push
decl
push
push
xor
repnz
sbb
mov
xor
lret
outsl
xor
pop
push
push
dec
push
sbb
aam
shr
xor
inc
outsb
cwtl
pop
push
or
popa
dec
outsb
mov
jl
jno
sahf
and
xchg
push
or
stc
inc
leave
aaa
xchg
lods
jo
cmp
cmp
xlat
fistl
call
push
pop
and
dec
int
imul
push
mov
shrb
lods
sub
inc
jecxz
sahf
mov
and
or
enter
mov
cltd
pop
push
movsl
push
mov
mov
clc
inc
loopne
cmpsb
jns
xor
jno
faddl
and
sub
cmpb
loope
cli
xchg
xchg
ret
fcoms
sahf
repz
jno
cmp
aas
outsb
popf
jae
jnp
inc
lods
dec
fidivs
ljmp
jmp
into
sub
dec
dec
sub
cmc
lds
cmp
push
cmpsl
icebp
sti
nop
sbb
testl
cmp
xor
out
adc
call
jg
mov
je
dec
xadd
xchg
std
and
push
sbb
in
add
xchg
sub
add
mov
xchg
scas
ret
dec
dec
mov
jmp
adc
sbb
pop
ret
jle
sti
in
loop,pt
orl
cmpsl
ja
in
mov
mov
test
movsl
fs
enter
mov
jmp
push
sbb
scas
xor
aam
add
call
insl
jecxz
mov
imul
inc
push
sub
pop
mov
in
imul
jb
lret
insl
or
push
pop
lret
jno
and
sub
inc
dec
pop
test
pop
scas
dec
cmc
xorl
out
lret
in
cmp
nop
jg
outsl
daa
fstl
rolb
dec
lods
enter
xchg
mov
jp
hlt
lods
mov
mov
mov
pop
jmp
add
pop
idivb
in
rep
add
scas
jo
lcall
xchg
gs
xchg
mov
xlat
mov
push
jo
mov
aaa
std
mov
gs
inc
xor
or
aad
call
pop
movsl
sahf
ss
mov
dec
or
fbld
out
pop
rolb
dec
xchg
mov
in
hlt
jbe
popf
mov
push
cwtl
and
test
pushf
cli
push
push
hlt
push
push
daa
mov
pop
int
mov
fimuls
dec
es
sub
test
pop
push
ret
or
mov
xchg
scas
sub
push
ja
loopne
cwtl
flds
rorl
xor
in
test
dec
cmp
sub
add
mov
gs
inc
dec
jl
imul
dec
jb
mov
and
push
out
les
mul
outsb
mov
mov
mov
and
push
pop
fnstcw
xchg
fldenv
lahf
pop
mov
xor
add
push
in
xchg
sahf
cld
dec
push
aaa
daa
push
out
inc
pop
outsl
cmpl
ja
xchg
pop
sahf
ret
add
xor
outsl
daa
dec
push
mov
call
lret
cld
lods
daa
xchg
cwtl
fnstsw
jae
outsl
push
cmp
cmp
push
xor
cmc
and
imul
adc
mov
sbb
inc
jmp
repnz
in
push
xchg
adc
push
sub
repz
sbb
cld
imul
fwait
mov
stos
mov
push
inc
in
sti
jbe
xor
outsb
mov
fcomip
aaa
adc
push
ja
sbb
push
jp
mov
lret
or
out
fnstsw
in
int
jl
push
decl
sahf
repz
ret
jg
push
cld
outsl
nopl
fisubrs
jnp
cmp
pushf
mov
sbb
add
xorb
lods
bound
adc
pusha
ss
cmp
mov
fcoms
lahf
cmp
sub
popf
fld
test
mov
pop
leave
dec
dec
sarl
cmpsl
popf
push
pop
icebp
or
mov
test
addb
lock
aad
insl
adc
cmp
push
pop
mov
fbstp
ja
sbb
test
mov
scas
jp
nop
push
insb
pop
out
push
lea
mov
mov
std
cmpsb
pop
ss
test
repz
jnp
dec
push
add
lcall
dec
in
cmp
push
inc
xor
add
push
sti
lcall
loop
adc
push
imul
hlt
jg
mov
pop
and
leave
xlat
pop
js
int3
lea
ja
push
xchg
dec
fidivs
mov
push
out
jnp,pt
jbe
lock
outsb
lcall
bound
sti
jbe
add
push
add
iret
ss
daa
push
sub
out
repnz
and
push
jnp
inc
rol
loopne
addr16
push
ret
dec
dec
int3
in
outsb
shl
cmp
fldcw
inc
pop
fimuls
push
inc
push
mov
mov
repnz
push
cld
adc
jb
mov
mov
cltd
xor
pop
mov
add
mov
mov
push
cld
and
mov
pop
aad
jbe
lds
repnz
jge
in
dec
mov
addb
pop
test
xor
jo
push
movsl
xor
repz
and
popa
testl
cs
mov
sub
jp
dec
out
cmpsl
mov
push
xor
cwtl
pusha
call
push
psadbw
cltd
add
cwtl
jmp
addr16
cmpsl
pop
xor
incb
jns
dec
sahf
push
pushf
mov
jmp
mov
pushf
pop
cmp
pop
cmp
pshufw
mov
lock
andb
jmp
aad
xchg
push
push
pop
mov
mov
xor
sbb
jmp
aaa
nop
adc
je
cwtl
xchg
stos
hlt
les
mov
dec
aad
arpl
mov
xchg
jno
push
movsb
jae
pop
and
test
lods
popf
bound
into
aas
mov
icebp
das
stos
mov
mov
loope
int3
jl
fstpl
sti
dec
es
es
push
mov
fs
xchg
aad
and
stc
mov
ret
movsl
fsubrs
jecxz
push
or
int
xor
adcl
pop
push
insl
test
je
adc
fcom
sbb
leave
sub
xor
loopne
add
and
daa
jnp
std
gs
jbe
ljmp
push
test
cltd
out
jecxz
xchg
dec
mov
push
mov
notb
sub
mov
add
mov
push
lret
stos
sahf
jmp
into
inc
stos
inc
xchg
push
xchg
stos
sub
mov
loopne
sbbb
mov
pop
addb
roll
sbb
rorl
pushf
sub
jne
xchg
scas
mov
in
mov
sub
dec
fbstp
arpl
sbb
jno
sti
fnstenv
lahf
lds
test
cmp
aam
dec
jg
data16
mov
scas
jno
or
jne
push
je
adc
xchg
gs
dec
pusha
push
xchg
mov
sub
push
inc
push
mov
cmp
sub
cli
aad
loopne
mov
movsb
insb
adc
pop
mov
jecxz
mov
jp
imul
bound
sbb
hlt
iret
dec
test
lret
cmp
jle
jmp
notl
mov
sbb
jle
pop
inc
pop
inc
mov
arpl
imul
imul
mov
leave
jnp
sub
dec
dec
repz
cmpl
loop
hlt
adc
popf
sbb
sbb
aad
andl
sbb
push
dec
dec
xchg
jb
mov
xor
int3
xchg
adc
fwait
lods
and
iret
push
push
add
mov
mov
ret
xchg
aas
add
mov
fiadds
stc
js
sub
xlat
mov
pop
and
cs
or
sbb
sub
lret
mov
jns
aas
outsl
mov
adc
pop
jp
mov
push
sub
popl
ret
lods
ljmp
mov
cmpsb
mov
sahf
shll
jb
xchg
repnz
inc
and
sbb
lcall
jne
popl
cwtl
xor
mov
add
mov
pusha
dec
inc
popf
adc
in
push
jmp
mov
test
sub
mov
pop
xor
popa
cmp
dec
outsb
subl
stos
inc
jge
cltd
or
jge
mov
mov
dec
or
adc
stos
cmp
jle
notb
add
sub
outsl
sti
dec
incb
shrl
pushf
mov
xor
xor
pushf
call
mov
jae
adc
cs
mov
insb
popf
xchg
xchg
mov
xchg
fstpl
lods
dec
cmpsb
inc
je
scas
or
mov
inc
pusha
xchg
pushf
leave
fnstcw
mov
mov
cmp
cmp
nop
xchg
mov
ret
jmp
cmp
jmp
cwtl
aam
es
add
sbb
pop
ret
xchg
or
and
sbb
xor
pushf
add
fwait
rclb
fldcw
in
stc
pop
std
ret
sbb
ficoml
ficomps
jnp
ret
mov
cld
inc
jo
and
clc
xchg
cmp
mov
ret
pop
xor
pop
gs
mov
jle
or
pop
xchg
sti
push
call
je
outsl
mov
pop
jmp
xchg
xchg
mov
push
xor
mov
xor
pop
add
nop
shrl
pop
jne
pop
adc
xchg
mov
push
mov
mov
push
or
test
aas
lods
jns
pop
ljmp
into
xor
sbb
push
jp
inc
mov
xchg
sbb
push
mov
shlb
cmp
push
jg
adc
sbbb
bound
xchg
leave
int
jno
jne
cmpw
push
lods
inc
cmp
push
inc
pushf
jg
mov
inc
divl
aad
int
mov
push
mov
cmpsl
push
and
mov
stos
mov
inc
hlt
mov
sbb
out
psrad
inc
push
nop
stos
mov
pop
pop
and
shl
mov
mov
push
in
icebp
orl
int
pop
mov
jnp
lret
jp
lret
sbb
pop
shl
shrl
jbe
aaa
das
mov
sbb
pop
lcall
or
mov
push
stos
in
rorb
hlt
loop
cmp
sarb
dec
add
pop
mov
rcrl
adc
bound
cmp
inc
fimuls
and
fistl
shrb
add
ficoms
inc
fldpi
in
in
hlt
lods
jmp
jnp
arpl
push
and
imul
pusha
mov
push
sub
mov
loopne
push
insl
adc
mov
xchg
lods
iret
imul
mov
icebp
fwait
cmp
mov
out
arpl
bound
arpl
out
gs
mov
lea
fidivrl
adc
cmp
test
jmp
sub
test
pop
mov
xchg
adc
and
sub
pushf
push
scas
and
loopne
outsb
scas
rcrb
cmp
mov
pop
sub
sbb
jo
mov
or
inc
pop
fstps
jae
sahf
movsb
jae
pop
popf
out
dec
push
mov
dec
jg
jmp
aad
loope
popa
sbb
sbb
sarb
jp
pop
adc
call
xchg
cmp
xchg
mov
lock
mov
loopne
inc
icebp
jbe
cmp
sub
in
pusha
adcl
mov
jmp
push
es
jns
int3
fsubrs
imul
aaa
testb
inc
out
mov
in
pop
sahf
xor
jno
sbb
fists
dec
popf
mov
adc
mov
sub
aas
stos
pop
gs
pusha
push
xchg
arpl
sbb
or
cwtl
sbb
sahf
mov
adc
out
lock
insb
or
or
movsl
push
addr16
sbb
rorb
lcall
mov
jg
sub
dec
adc
ret
push
pop
jecxz
enter
cmc
mov
pop
jl
out
xor
rcr
je
dec
js
adc
pop
mov
mov
xchg
ljmp
ret
push
push
pop
out
rcll
push
inc
sti
push
clc
fdivl
sbb
cmp
push
mov
jbe
pop
mov
adc
or
test
mov
jnp
movsl
lea
lret
xchg
gs
and
xchg
adc
push
scas
loope
jmp
popa
lock
add
adc
mov
inc
sub
clc
in
rcrl
enter
dec
jecxz
lret
loopne
xor
sub
leave
pop
cltd
mov
stos
out
jle
lods
shlb
cs
jno
lahf
notb
or
data16
dec
icebp
mov
clc
jno
sub
jmp
inc
int3
out
pop
cmc
test
fdivp
pop
iret
lods
mov
mov
hlt
mov
iret
leave
rorl
sub
or
clc
jl
cmp
adc
mov
mov
in
lret
movb
cmp
jno
xor
jp
outsl
into
bound
sbb
jb
stos
aas
adc
pop
mov
push
inc
mov
pusha
mov
rcl
and
pop
add
or
daa
xor
cmp
in
ljmp
sbb
mov
and
test
add
daa
cmp
icebp
or
mov
jmp
push
dec
jo
adc
lret
cmp
inc
scas
or
lods
pop
inc
int3
sbb
xor
in
fsubrs
in
jb
adc
imul
mov
jae
cltd
xchg
add
shr
or
stc
repnz
ljmp
inc
inc
push
sbb
insb
cli
sbb
mov
push
scas
out
sti
clc
ja
jmp
inc
add
push
xor
aaa
pop
bound
aaa
pop
pop
or
aaa
cmp
mov
jge
lret
sbb
leave
sub
popf
nop
push
add
stc
andl
push
jmp
mov
mov
out
mov
adc
bound
and
jbe
push
sub
push
pop
cld
push
xor
insl
mov
aad
cli
jns
jg
mov
loope
mov
mov
push
andb
leave
pop
je
aas
mov
mov
repnz
mov
mov
sti
cwtl
cmp
in
enter
fcompl
or
fildl
or
xchg
scas
mov
movsb
pop
cmpsb
jge
pusha
arpl
int
jae
or
push
std
sub
into
movsb
xor
aad
lds
imul
cs
mov
in
jbe
xor
sti
sbb
cmp
push
sbb
xchg
int3
insl
call
repz
arpl
mov
push
cmpsb
leave
xchg
call
fdivrl
or
test
out
mov
mov
and
outsb
fwait
mov
cmpsl
push
adc
ret
and
dec
loope
addl
push
mov
dec
in
mov
xchg
fs
mov
sub
retw
push
dec
arpl
or
sub
cmc
or
xlat
into
aad
jne
mov
mov
shlb
cmpsl
out
sti
out
lea
and
shll
pusha
cmp
adc
mov
subb
mov
or
cmp
cli
ret
lods
xor
adcl
loop
ljmp
or
cmp
loopne
scas
sbb
mov
outsb
std
mov
faddl
inc
out
cmpsl
sbb
out
inc
cmpb
and
xlat
xchg
or
inc
fstpl
dec
sahf
fmull
jecxz
fxch
xchg
jg
sbb
insb
lret
sbb
insl
insl
aaa
cmpsb
es
fcomps
push
dec
sbb
data16
hlt
jae
dec
loope
xchg
rorb
xor
xchg
xor
pushf
or
mov
inc
or
mov
lret
and
sub
mov
addr16
popa
sbb
jae
pushl
fsubr
bound
inc
adc
xlat
xchg
pop
fwait
ret
push
scas
pusha
dec
dec
cmp
repz
xchg
lcall
int
shlb
jg
mov
fidivl
push
mov
sbb
jns
sahf
adc
das
inc
imul
xor
popf
int3
mov
cmpb
shrl
dec
jmp
xor
ficoml
or
imul
or
sub
push
mov
mov
cmc
bound
sbb
adc
daa
pop
cmpb
test
xchg
repnz
repnz
xorl
jae
insb
js
pusha
push
push
jo
fwait
xchg
mov
in
movsb
xchg
dec
add
inc
xchg
mov
mov
loopne
push
mov
xchg
mov
add
in
cwtl
shlb
xchg
fnstcw
shrl
and
dec
or
add
xchg
add
mov
pop
cwtl
sbb
lock
clc
xlat
adc
or
jmp
cs
and
pop
mov
es
inc
mov
adc
adc
and
and
adcl
iret
jle
cmp
jb
jne
mov
movsb
pop
xorb
inc
lcall
fdiv
cmp
je
dec
fisubrs
push
cmp
lret
adc
aaa
into
inc
out
out
lods
test
shlb
out
sbb
sti
test
sahf
sbb
adc
lret
js
je
mov
int3
fwait
and
imul
data16
je
jbe
sbb
xor
in
mov
add
and
adcb
js
push
test
scas
xchg
mov
cmp
aas
pop
jo
mov
jnp
cld
fldenv
inc
push
mov
shrl
mov
jle
add
or
popf
into
sbbl
pop
fbstp
pushf
cmp
or
xorl
mov
xor
leave
cwtl
jb
mov
dec
out
jne
in
sub
fdiv
addr16
push
mov
jbe
std
adc
inc
jg
stos
sub
xchg
std
int
fstps
out
mov
popf
sahf
scas
addr16
cmp
mov
adc
scas
cmp
inc
cmpsl
insb
and
push
fnstenv
loop
push
pop
out
mov
sbb
jp
aaa
push
cmpsl
xor
movsl
movsb
dec
or
adc
imul
mov
jns
push
ret
adc
push
inc
jecxz
jg
in
daa
mov
sahf
add
ret
insb
ret
jo
jg
in
rcrb
aam
sub
push
ds
jne
add
out
popf
sbb
sti
inc
cmp
in
dec
and
adc
out
xchg
jg
shll
adc
inc
inc
ja
mov
int
dec
push
push
in
aas
push
sub
pop
jae,pt
xor
dec
mov
mul
lea
mov
mov
pop
call
push
shr
pop
cmc
mov
stos
inc
sub
mov
test
inc
push
sub
into
pop
fidivrl
sub
mov
push
pop
aas
push
scas
jl
fwait
xor
shlb
pop
dec
scas
pop
mov
test
mov
mov
orl
pusha
xor
jbe
sbb
aaa
mov
addl
enter
andl
xchg
out
adc
out
dec
mov
or
dec
fwait
mov
cmp
and
notl
pushf
les
ss
icebp
out
lret
fs
inc
stos
and
sbb
adc
lds
push
add
xchg
mov
fsubrp
jbe
mov
sbb
jne
int3
lods
mov
gs
pop
mov
insb
sbb
nop
cmc
jmp
mov
dec
aas
dec
xchg
outsl
aad
out
pop
scas
sub
sarl
jns
fidivs
imul
jmp
dec
mov
xchg
mov
test
add
add
out
imul
cmp
aas
push
mov
in
lcall
mov
test
inc
es
push
mov
addr16
stc
shrl
lret
dec
adc
jae
insb
add
pushl
fucomip
pop
sbb
mov
aaa
stc
or
xchg
cli
test
pop
rcrl
adc
inc
add
xchg
sti
push
fwait
cmpsl
sbbl
lds
push
push
or
sub
mov
enter
lea
mov
cmp
cmc
hlt
leave
pop
cmpsl
stc
sub
test
lods
call
xchg
sub
add
cli
xchg
sub
fnsave
mov
xlat
fwait
xor
mov
push
cmp
mov
inc
pusha
test
into
mov
inc
mov
in
dec
das
push
push
adc
test
inc
and
push
ja
lahf
mov
mov
ljmp
add
imul
mov
cmc
scas
xchg
aam
out
xchg
sub
lock
xchg
dec
pop
repz
ret
jp
cmc
xor
mov
mov
jl
pop
ss
pop
pusha
mov
out
ret
sbb
push
leave
mov
or
add
mov
ret
dec
add
xor
cs
fnstenv
outsl
lcall
push
add
pop
xchg
and
cmpsb
lret
push
or
gs
mov
movsb
idiv
jae
roll
push
mov
fs
jo
sub
sub
int
fdivp
and
dec
mov
movsl
cli
mov
call
lcall
or
pop
lds
adc
add
les
cmp
mov
arpl
sub
or
das
mov
cmp
pop
test
sub
cmpsb
mov
ljmp
insb
ja
call
or
xchg
jg
pop
cltd
rcll
incl
inc
fcmovbe
sbb
inc
ss
shl
dec
in
hlt
jmp
addr16
pop
out
push
movsl
cmp
lret
inc
xchg
je
mov
out
cmp
fcomps
lods
lds
idivl
rorl
xchg
jg
enter
lock
jne
cwtl
in
adc
jp
dec
imul
in
shr
or
pushf
jg
mov
mov
imul
scas
std
mov
sbb
int3
arpl
adc
addb
add
loop
les
push
or
je
dec
pop
adcb
scas
sbb
lcall
sub
jmp
fdivr
push
out
das
lcall
in
aad
dec
imul
add
leave
mov
aam
clc
rclb
sub
int3
inc
aaa
dec
cmp
jmp
and
dec
imul
das
test
out
mov
aad
lret
pop
repz
or
aaa
inc
rcrl
and
scas
and
outsl
test
loope
cltd
insb
cmp
jmp
gs
repnz
jne
adc
and
test
mov
jns
push
test
inc
lea
sbb
inc
fnstenv
lock
aas
fiaddl
in
mov
xchg
sbb
pop
shll
sub
je
and
mov
sarb
add
add
and
and
test
sub
or
ret
insb
or
pop
test
js
push
ret
cmpsb
lock
iret
sbb
leave
sahf
and
je
mov
aam
fnsave
shlb
or
cmp
push
out
jle
lahf
jae
imull
sbb
pusha
addr16
gs
mov
lret
enter
in
xor
fld
mov
adc
lret
rcrb
shl
scas
inc
mov
inc
clc
mov
enter
jle
popf
inc
push
push
adc
movb
popa
xor
in
les
and
sarb
insl
negb
cmp
lret
cmp
shrl
jbe
push
adc
fs
outsl
mov
roll
popa
and
dec
mov
cmp
jb
les
sub
fs
fnstcw
sbb
push
lds
mov
sbb
insl
les
in
ja
cli
dec
mov
cmp
cs
fstl
mov
mov
insl
ja
fiaddl
pop
cmpsb
mov
insl
jge
xchg
sbb
fsub
shlb
sbb
sbb
testl
rclb
sahf
add
sbb
dec
dec
jne
jecxz
call
imul
sbb
dec
loope
cmp
icebp
mov
pop
and
adc
clc
add
mov
ret
add
mov
lret
pop
xchg
test
lret
negl
jbe
ds
test
dec
inc
aas
aad
out
mov
mov
dec
inc
mov
nop
xchg
pop
xlat
insl
mov
das
lds
hlt
mov
mov
insb
mov
add
mov
or
sub
mov
pop
sub
mov
insb
mov
mov
jo
or
xlat
jnp
dec
fldcw
outsl
cmp
sub
lock
ret
subb
jl
aaa
xchg
shll
jle
cmc
fcoml
ds
xchg
out
mov
pop
mov
pop
sub
dec
add
cmp
fstl
pop
add
add
dec
dec
adc
cmp
cli
xchg
mov
in
int3
mov
inc
popa
fildll
xor
sbb
pop
call
cmp
loop
lcall
arpl
ljmp
and
xor
inc
icebp
mov
push
mov
into
pop
jns
mov
push
xchg
dec
pop
push
test
insb
xchg
add
les
push
pop
test
lahf
pop
dec
xchg
addl
mov
in
xchg
test
push
xor
shr
int3
fnstsw
xor
fs
ja
mov
cld
pusha
fstpt
push
jle
pop
loopne
pop
pop
cld
pop
ds
cmp
es
mov
mov
je
push
xor
sbb
pop
cmp
std
dec
and
sub
pop
outsb
out
out
int3
fbld
js
xor
test
fcmovu
das
cli
adc
mov
cmpsb
jp
xchg
pop
or
mov
dec
push
xor
jecxz
scas
dec
push
addb
sub
test
jno
push
pop
xchg
sub
pop
lret
mov
push
dec
cmpsb
les
fnstenv
lds
outsl
jmp
rcl
add
push
mov
int3
daa
aas
dec
mov
cmpsl
mov
fnstenv
cli
cmp
mov
and
jl
cli
imul
jg
shl
lahf
es
mov
jno
dec
cmp
ficoms
fdivrl
or
adc
jge
and
rcr
sbb
inc
lret
sub
sti
mov
lods
sub
pop
into
sarb
shl
fisubs
ds
or
stos
fbstp
fsubs
test
in
cmpsb
mov
jae
fxch
pop
and
lcall
jmp
inc
fnstcw
sub
jne
pusha
mov
xor
out
loopne
push
sbb
lret
mov
lock
pop
les
scas
subb
jl
stos
mov
xor
orl
or
xchg
mov
fldcw
das
push
mov
push
xor
filds
movsb
inc
lock
inc
mov
test
mov
xor
sub
stos
pop
cs
fidivl
cld
iret
test
sbb
mov
test
ret
in
cmpsl
out
add
cmp
xchg
mov
mov
and
xor
xchg
lods
cmpsl
jne
xchg
lods
dec
pop
sub
andb
int3
xor
test
sub
mov
popa
jmp
addr16
and
mov
insl
or
bound
jecxz
mov
mov
fdivrl
shl
pop
mov
mov
daa
mov
mov
adc
in
sbb
sbb
dec
jge
dec
dec
pop
out
stos
mov
in
pop
pop
aad
rolb
lahf
sbb
ds
fdivl
push
sub
ja
ds
pop
dec
pop
test
inc
gs
ret
or
cmp
sarl
mov
inc
sbb
mov
cmp
in
add
sbb
adc
jb
insb
push
add
mov
inc
mov
addr16
loope
push
sbb
std
in
fwait
fs
mov
sbb
mov
pop
js
aas
push
mov
dec
sbb
pusha
sti
ss
cmpsl
out
or
lret
in
xchg
mov
sbb
mov
sarb
hlt
xlat
outsb
sub
mov
insl
jns
test
add
mulb
inc
iret
dec
into
icebp
mov
in
int
cmpsl
push
imul
iret
loope
popf
stc
test
and
lea
adc
test
std
xor
fists
stos
dec
xchg
push
mov
xor
ds
dec
out
xchg
cmp
mov
mov
bound
out
xchg
mov
and
mov
jno
adc
test
and
insb
sub
nop
imul
cmp
popa
cs
dec
movb
mov
addr16
negl
fiaddl
in
inc
cmp
and
jmp
xchg
aas
in
push
mov
test
ja
stc
mov
int
mov
add
test
sbb
and
mov
stc
gs
pop
mov
sarl
jge
call
xor
mov
data16
pop
push
cwtl
or
into
dec
jnp
xchg
out
cmp
mov
inc
and
pushf
jo
std
movsl
or
and
dec
popa
xor
xchg
mov
iret
mov
aam
inc
dec
adc
int3
outsl
fistpll
int3
add
push
call
cwtl
cwtl
outsl
or
in
ds
sbb
fwait
test
inc
mov
sbb
add
jecxz
shrb
push
mov
xchg
in
add
jmp
lock
cld
jge
and
push
and
jno
push
fmul
jmp
gs
fcomip
push
jmp
xor
pop
sahf
sahf
sahf
sbbb
sbb
adc
jae
stos
xchg
imul
jne
and
jecxz
cltd
mov
jmp
sbb
setae
sbbl
outsl
xor
test
inc
aam
and
inc
xor
enter
out
dec
adc
jecxz
fildll
xor
cmpsl
js
sbb
cmp
mov
loopne
leave
push
cmp
xor
fwait
mov
int
cmp
cli
or
jbe
mov
push
jne
cmpsb
popf
or
mov
mov
sub
fs
xor
pcmpgtb
dec
fildl
stc
ret
decl
mov
cmp
xor
xor
mov
stos
jecxz
mov
mov
mov
mov
mov
xchg
fisttpl
loope
jle
cmc
test
out
sbb
adc
addr16
jnp
enter
sub
adc
shll
jno
lock
xchg
fisttpll
in
mov
dec
xor
and
lods
cmpsl
jne
fwait
bnd
aam
adc
push
xor
loope
push
cmp
and
cwtl
fs
roll
adc
repnz
sbb
adc
inc
sub
mov
sbb
add
scas
lret
mov
adc
enter
call
add
hlt
push
jns
inc
inc
fwait
pop
xchg
mov
mov
dec
fsubrs
mov
mov
ret
add
mov
fsubp
test
mov
mov
testb
adc
mov
in
insb
add
daa
adcb
dec
cmp
ret
sub
xchg
subl
push
inc
xchg
rolb
jl
cmp
es
dec
movsl
inc
mov
or
push
jae
cs
clc
sbb
cltd
dec
mov
xor
cmp
movsb
pop
andb
dec
jge
je
das
in
pop
xchg
xchg
sub
insl
adc
leave
leave
nop
test
dec
sub
inc
dec
divb
and
push
sbb
xlat
jecxz
stc
lahf
dec
cld
or
cwtl
xchg
jmp
and
cltd
and
je
shll
fsubs
aam
xchg
push
pop
mov
jae
andl
mov
cmp
xor
sub
loope
add
dec
lods
nop
in
or
jge
and
nop
test
jmp
lret
pop
or
and
cmp
cmp
jle
int
cmp
jo
jb
jecxz
or
sbb
lcall
adc
mov
out
sub
mov
lock
adc
lahf
mov
jl
into
lods
add
xor
cmp
gs
mov
loopne
les
mov
ret
jp
in
cmp
jnp
xor
in
push
out
add
lds
xchg
scas
into
pusha
and
cmpsl
inc
push
fnstsw
mov
scas
enter
js
push
jae
xchg
cmpsl
inc
sub
sub
cmc
cmc
sbb
inc
sub
in
std
inc
push
in
or
imul
arpl
lcall
insl
movsl
push
mov
fists
push
divl
jns
and
or
sti
cld
lea
imul
lock
xchg
cmp
add
out
jbe
in
mov
addb
inc
loopne
loop
mov
pop
cmp
jne
jb
jl
or
aaa
sbb
cmp
in
push
call
xor
and
fs
push
jbe
in
in
insb
scas
xchg
sbbb
push
aaa
dec
fdivrl
xor
push
stos
add
xchg
punpckhwd
mov
dec
jmp
rorb
add
gs
push
push
xchg
daa
in
and
push
daa
cld
xchg
push
pop
mov
out
addr16
cwtd
cmp
aas
arpl
rcrl
cwtl
inc
fstpl
sbb
xor
popa
cmp
jl
dec
and
add
mov
inc
push
outsb
pop
test
movsl
out
xor
jge
cld
cmp
mov
test
push
notl
test
jno
jnp
mov
movsb
adc
pop
mov
or
adc
cld
es
jnp
and
or
add
fdivs
into
cli
xchg
in
nop
cmpsl
cmp
or
lods
repz
outsb
out
fldenv
test
fistpll
mov
xchg
sbb
pop
ljmp
cltd
fdivs
in
jp
xchg
test
cltd
das
jno
add
cli
and
sub
lods
bound
fnsave
jmp
cmp
push
lock
jge
dec
and
inc
push
inc
ret
push
shl
test
sbb
push
scas
and
mov
push
jae
mov
mov
xchg
out
pop
gs
pop
outsl
outsl
test
inc
sbb
mov
testb
xchg
mov
mov
insl
idiv
je
sti
mov
out
mov
std
aad
dec
inc
loope
cmpsb
insl
int3
sar
push
jns
xor
mov
iret
lock
outsl
sti
pop
ficomps
ss
jbe
inc
jge
repz
in
ds
push
repnz
mov
ret
inc
bound
add
dec
inc
lods
fnstsw
popf
cmpb
pop
notb
subb
test
rorl
imul
xor
cmp
stos
pop
idivl
push
scas
jge
xor
push
test
push
hlt
imul
xor
rolb
push
roll
jmp
frstor
xchg
std
movsl
icebp
adc
imul
jmp
ret
pop
jl
out
lods
sub
sbb
lcall
sub
jo
xchg
mov
mov
dec
call
or
repnz
dec
loop
aad
test
pop
ja
mov
aas
es
and
loop
lods
pop
ds
xchg
sub
sbb
jecxz
pop
cmp
pusha
loopne
pop
out
fbstp
outsb
shrb
shlb
pushf
sub
ret
dec
add
pop
cltd
xchg
loope
rcr
mov
xchg
or
int3
subl
sbb
mov
push
imulb
insl
ret
pop
imul
cmpb
jle,pn
xlat
pop
xchg
gs
pop
sub
mov
loopne
xchg
push
outsb
mov
imul
sbb
aad
sti
jb
out
xorb
push
inc
sbb
jmp
or
mov
lock
inc
push
adcl
mov
shrb
jmp
xor
outsl
js
mov
stos
lahf
lahf
push
pop
lods
loopne
mov
xchg
push
sub
ja
mov
rclb
add
push
out
sbb
inc
sbb
cld
jmp
test
cltd
notl
mov
xchg
add
jnp
add
ret
ja
jno
insl
fdiv
push
aam
js
fisubs
mov
bound
sbb
ja
iret
cmpl
pop
jge
pop
loopne
inc
testb
jl
dec
rcr
jne
jbe
adc
inc
inc
jge
fidivs
in
inc
push
mov
adc
fst
mov
aad
js
xor
pop
rorb
and
shrb
popa
cld
out
inc
or
ss
lahf
enter
orb
xchg
xor
add
inc
arpl
loope
xor
cmc
scas
mov
stc
pop
clc
cmp
lret
jle
sub
dec
mov
incb
cld
shl
pop
and
add
xor
mov
mov
outsb
sbb
cld
or
adc
iret
fsubl
out
stc
add
aaa
shlb
repnz
add
jne
sbb
rcll
pop
push
push
jl
mov
sub
sub
in
test
xor
test
data16
fisttpl
push
sbbl
repz
adc
lds
or
int
mov
sub
cmp
push
sahf
sahf
sbb
es
std
jo
pop
cmp
in
push
out
rol
aam
je
out
rclb
jnp
popa
in
mov
cmpsl
sub
xor
cmp
pusha
add
jecxz
mov
xchg
xchg
adc
out
xor
push
add
push
dec
cmp
adc
cmpsb
inc
push
cwtl
cld
call
cmp
adc
xchg
jae,pn
xchg
add
cltd
xchg
mov
popa
jg
fwait
hlt
mov
clc
es
adc
ja
cli
mov
mov
in
aad
mov
jge
hlt
out
push
dec
xor
test
mov
push
cltd
and
jmp
repz
mov
pop
xchg
cmpsb
addr16
sub
mov
enter
inc
dec
adc
mov
fnstenv
shll
clc
fmul
push
dec
sahf
ds
mov
lock
loopne
dec
pushf
inc
rcrl
xchg
mov
sbb
xchg
outsb
cmpsb
pop
icebp
mov
xchg
push
fcmovne
inc
inc
in
xchg
call
aad
iret
repnz
fsubrs
js
add
roll
sbb
scas
mov
xchg
repz
xor
pop
in
mov
gs
and
outsl
roll
push
lcall
jae
insb
call
scas
mov
add
js
mov
sbb
inc
fsubrl
cmpsb
dec
mov
sub
sub
jne
test
sbb
sahf
mov
je
cli
push
sbb
sbb
cmp
gs
mov
mov
inc
mov
or
test
popa
call
ret
sahf
stc
mov
mov
add
mov
sub
clc
or
add
lcall
cmp
cmp
sbb
fstpt
jp
inc
cmpsl
jecxz
test
push
add
sub
mov
dec
std
clc
lods
scas
and
shl
pusha
sti
ret
add
xor
push
cmpsl
sti
int
sbbl
inc
add
inc
or
test
or
cmp
rorl
cmpsb
dec
mov
xor
ret
mov
daa
lret
mov
out
into
xchg
iret
adc
sbb
pop
adc
cmp
aad
insl
or
loop
adcb
cmpsl
and
stc
nop
push
push
scas
inc
mov
sub
es
xor
jns
fidivrl
cmp
nop
out
dec
sbb
test
mov
mov
lahf
lods
or
dec
dec
lahf
mov
orl
inc
adc
sti
icebp
inc
in
dec
rclb
adc
or
mov
push
mov
ret
sbb
arpl
jne
and
inc
jb
mov
iret
shlb
inc
or
bound
ja
mov
imul
subb
out
sbb
sub
testl
rorb
stc
fwait
mov
xor
leave
xchg
and
aad
sbb
iret
push
mov
push
lea
and
loopne
mov
sub
push
mov
arpl
das
rorb
loopne
xlat
pushf
sarb
mov
lahf
fldl
jl
cwtl
data16
mov
mov
cmpsb
aad
mov
aad
push
pop
jge
dec
rcr
xchg
fcom
fbld
and
aaa
pop
ss
aas
xchg
mov
fildl
add
jo
in
inc
test
fdivs
shll
ret
sub
lea
jge
arpl
imul
xchg
adc
mov
jnp
bound
inc
mov
add
pop
push
loopne
jl
inc
test
std
push
in
bound
xchg
and
xor
jmp
xchg
xchg
rcrb
addr16
loopne
cmp
pop
jg
push
adc
cmpsl
iret
xchg
sub
push
aam
mov
inc
les
loopne
fcoms
fwait
xor
xchg
inc
dec
aam
adc
iret
mov
xor
incl
mov
adc
push
cmpsl
nop
pop
fnstenv
out
insb
fisubs
rorl
sub
popa
jmp
dec
int
cmp
into
lods
adc
cmp
gs
stc
mov
ret
sti
cmpsb
movsl
ss
and
aas
aam
cltd
loopne
cld
lods
pop
scas
push
int3
mov
test
xchg
dec
or
xor
mov
adc
cs
call
pop
js
mov
insb
cltd
out
mov
xor
cltd
mov
movsl
ljmp
xchg
shr
mov
mov
mov
rcrl
add
clc
sahf
addr16
scas
test
or
xlat
push
jae
cmp
jno
sahf
loope
iret
sub
into
or
fidivrl
xchg
and
ficoms
cld
out
stc
sub
sub
pop
add
stos
and
push
adc
test
cmp
das
fadds
xor
ficoms
fs
sahf
ljmp
rcr
lock
pop
and
insl
or
xchg
arpl
jp
mov
add
das
or
pop
mov
jo
cmp
mov
cmpsl
dec
hlt
rcrl
ret
adc
loope
jmp
popf
push
xchg
les
jae
sbb
jb
pop
mov
bound
cmp
fstp
xrelease
mov
inc
pop
or
cmp
push
shll
fidivl
cmc
mov
sub
mov
jmp
or
dec
insb
ret
dec
fsubrp
push
pop
push
mov
pop
stc
mov
sub
push
xor
mov
push
xor
jecxz
sub
cld
add
mov
add
cmp
test
jno
adc
pusha
inc
xor
aas
xchg
and
fsts
fimuls
in
js
nop
lcall
jp
push
shl
cwtl
inc
pusha
rorl
or
push
lods
ja
pop
or
pop
scas
xchg
movsl
fbld
shl
enter
jg
mov
loop
xchg
adc
mov
dec
in
mov
jnp
pop
adc
mov
inc
cli
add
mov
leave
dec
push
mov
mov
pop
dec
mov
mov
cmp
pop
push
cmp
sub
and
xchg
sub
xchg
or
sbb
jle
fdivrl
pop
mov
ret
adc
ret
mov
imul
dec
cmp
sti
pop
inc
push
in
and
pop
int
push
inc
movsl
dec
repz
ret
lods
adc
lock
stos
push
movsb
mov
or
inc
sub
daa
or
inc
not
in
adc
aaa
divb
sub
sbb
cmp
adc
imull
addl
inc
or
shrb
out
pop
push
jae
rolb
xor
imul
or
mov
jno
cmp
outsl
int
mov
out
inc
notb
jne
ss
fisubs
dec
loopne
cmpsl
lcall
nop
daa
or
cmp
loope
cmpsl
inc
ss
or
lods
or
push
mov
lds
cli
inc
out
std
orl
add
xor
sub
cmp
and
pushl
mov
aas
orb
outsl
jnp
mov
scas
mov
in
adc
mov
pop
bnd
push
mov
or
push
sub
jmp
dec
loope
push
repnz
lahf
mov
imul
std
sbb
faddp
xchg
lret
icebp
xor
orb
mov
add
mov
adc
add
mov
sub
dec
dec
dec
repz
sbbl
test
mov
fidivl
inc
aas
sub
sahf
addl
movsb
ss
fwait
test
bound
in
sub
sub
flds
sbb
int3
mov
sbb
ret
jge
outsb
push
xor
in
xchg
jbe
js
lods
mov
and
dec
and
es
inc
inc
ja
call
test
call
push
into
xchg
lret
xchg
sbb
push
es
inc
pop
jns
stos
shrb
and
insl
orb
jo
out
inc
cli
movsl
ljmp
ficompl
mov
dec
mov
leave
pop
mov
adc
mov
dec
fstl
pop
aas
imul
fldl2t
jg
lock
inc
mov
hlt
inc
addr16
loopne
xor
ret
jns
stc
inc
stos
lcall
es
out
xchg
andb
push
push
inc
xchg
sbb
xlat
xchg
rcrl
dec
mov
adc
push
mov
sub
cmp
rorb
cmpsb
inc
stos
ss
cli
jae
add
and
mov
push
scas
push
test
stos
test
lock
fcomp
lods
mov
sbbb
stc
mov
cmp
repz
int
cmp
shl
push
sub
imul
lea
gs
sbb
dec
sbb
jp
push
cmpl
loop
test
mov
inc
jmp
push
psubb
jl
inc
and
sub
stc
nop
mov
and
testb
icebp
jnp
jg
outsb
lcall
inc
inc
xchg
addl
pop
stos
jl
arpl
dec
sahf
outsl
cld
dec
pushf
mov
cmp
mov
jns
adc
pop
inc
mov
les
jle
dec
test
mov
fcmovb
mov
push
rol
bnd
xchg
xchg
dec
loopne
dec
fwait
sub
mov
sbbl
imul
repnz
ljmp
and
fldt
cltd
incb
mov
xor
fildl
pop
mov
cld
stos
inc
cs
dec
orb
and
dec
cmpsl
sbb
int
jl
add
popf
adc
mov
fildll
loope
push
mov
pop
lret
mov
dec
lret
add
jg
or
jecxz
sub
int
iret
add
repnz
jae
push
dec
adc
jge
sti
es
adc
jnp
cld
jne
dec
sbb
insl
das
jmp
imul
call
dec
loope
incb
cmpsb
dec
push
sahf
test
rcrb
ds
rep
inc
gs
xchg
xor
adc
stos
iret
cmp
js
cmc
push
cmp
sub
xchg
sti
jb
lock
cmp
enter
xor
fstps
outsb
test
jmp
loopne
mov
inc
int
rorl
loopne
movlps
pop
mov
cli
or
sub
jno
stos
push
shrb
test
pop
ds
jno
xchg
cmc
and
mov
cmp
dec
flds
sub
adc
icebp
mov
ror
add
std
orb
add
xchg
push
and
or
xor
mov
ljmp
hlt
ja
jle
addl
xlat
and
sti
data16
mov
arpl
out
and
imul
cmpsl
pusha
xchg
mov
test
push
imul
xor
stos
int3
pop
jne
xchg
mov
stos
and
leave
test
pop
out
shl
imul
ficoml
in
pop
mov
pop
les
pop
jecxz
mov
mov
jp
jecxz
sahf
xor
inc
adc
sahf
popa
scas
data16
sub
decl
dec
cmp
jl
push
jmp
cmpsl
into
jmp
aaa
cli
pop
push
cmpsl
pop
sub
add
jmp
mov
push
add
sarl
xchg
sbb
sahf
insb
mov
push
lock
cmpsl
mov
mov
push
inc
lea
inc
mov
dec
mov
add
pop
fnstsw
pop
add
adc
mull
iret
jbe
scas
cmp
push
cmpsl
jl
jo
fisubrs
fbstp
das
dec
call
loopne
xchg
sar
cmpsb
xchg
xor
test
in
repnz
jmp
in
mov
jmp
adc
push
inc
cmp
mov
pusha
dec
xchg
mov
jle
xchg
xlat
insl
movl
mov
and
mov
sub
pop
scas
loopne
mov
stos
test
outsb
jge
mov
jle
mulb
inc
cmp
outsl
movsb
fildl
test
mov
icebp
addb
outsb
sar
fmuls
pop
and
imul
adc
mov
pushf
and
push
ljmp
jmp
int3
rcll
and
sub
xor
aam
cmp
pop
lods
inc
dec
out
out
mov
lcall
dec
jnp
call
sarb
lret
shrl
xchg
shr
sbb
sub
loop
xchg
arpl
adc
cmp
in
lret
popa
ja
xchg
pop
sbb
xchg
push
sub
and
inc
test
cmp
jmp
movsb
and
leave
mov
pop
popa
or
jbe
cmp
stos
mov
ret
xor
cmp
and
mov
pop
sub
inc
int
ja
ljmp
data16
cwtl
rcll
lret
fsubrl
or
iret
imul
cmp
shll
nop
lds
test
inc
push
push
fs
dec
mov
les
pop
cmp
add
push
scas
xlat
repz
subb
or
fnsetpm(287
std
dec
or
dec
movsb
insb
loopne
pusha
xor
and
lock
sub
ret
loop
jge
or
fidivs
addr16
cwtl
aaa
and
popfw
or
out
push
std
enter
loope
cli
stc
in
imul
fwait
out
cs
inc
sub
inc
icebp
xchg
in
dec
mov
jnp
cwtl
lea
push
in
sbb
je
push
insl
popa
clc
sahf
in
mov
push
xchg
pop
xchg
or
rclb
mov
out
out
push
out
arpl
mov
mov
jl
in
bound
fwait
cmp
jecxz
insb
les
mov
xor
mov
in
sub
jb
mov
ret
nop
daa
mov
mov
dec
shll
mov
ret
adc
jns
ds
mov
mov
loopne
test
xchg
pushf
je
jnp
xor
fdivrp
pop
xchg
push
inc
mov
or
jae
faddl
nop
addr16
inc
cmp
aad
out
and
loopne
pop
cmp
mov
lods
adc
nop
lds
ss
out
adc
xchg
add
outsb
inc
cmc
andb
push
and
out
sarl
or
orb
ljmpw
inc
popf
fisttps
ljmp
cwtl
cmp
lahf
sub
adc
mov
and
jbe
out
xchg
pop
mov
leave
repnz
pop
jne
add
aam
push
stos
in
jne
or
lock
insb
xor
rorl
shlb
jno
xchg
jecxz
lahf
and
vmwrite
loope
shrl
mov
jmp
lret
jge
pop
scas
popa
and
inc
hlt
lret
and
push
push
mov
mov
sbb
jle
inc
std
mov
xor
mov
jbe
fidivs
mov
popa
mov
or
inc
jle
js
es
fs
adc
inc
cmp
fldt
movsb
pop
push
dec
mov
jge
ss
pop
or
pop
jp
pop
cmp
ds
jl
sbbl
jecxz
inc
sbb
mov
call
push
stc
add
xor
push
test
mov
adc
lret
sti
push
sbb
sbbb
fdivr
jge
dec
push
inc
jnp
outsb
fdiv
xchg
cld
dec
and
jnp
jmp
fiaddl
sarb
outsl
sbb
dec
and
add
fldl
jae
je
push
in
fistl
pop
xchg
cs
fiaddl
lret
cld
lcall
in
psraw
mov
push
insl
push
in
stos
fnsave
mov
repnz
xchg
mov
movsl
xchg
xchg
hlt
push
pushf
and
cld
push
jno
imul
sub
fbstp
arpl
push
fcmovnu
aaa
lret
ljmp
cmpsb
icebp
mov
std
jg
dec
and
mov
mov
xlat
enter
jecxz
pop
fwait
out
jnp
loope
mov
cld
xchg
or
adc
mov
push
clc
mov
sbb
sbb
std
stos
or
xlat
pop
xor
aam
leave
pusha
out
out
push
jmp
jno
loop
sbb
lods
pusha
ret
mov
mov
mov
arpl
imul
jno
pop
and
movsl
xor
cmp
stc
loope
sub
push
imul
ret
and
jb
iret
dec
shrb
rclb
into
jl
sti
in
test
data16
repnz
push
jecxz
xor
stc
xchg
xchg
dec
xchg
xchg
push
cli
cmpsb
cmp
jp
dec
loopne
xchg
or
jmp
push
test
popa
stos
add
lock
call
test
xor
mov
jae
pop
sbb
sub
cmp
mov
adc
push
sub
cltd
pop
sub
aad
sbb
jo
jnp
or
sub
nop
repz
adc
xor
pop
adc
inc
sbbb
ret
xchg
shll
xor
in
in
adc
adcb
add
xor
mov
inc
mov
mov
xchg
mov
rclb
pop
out
nop
addr16
jle
mov
cmp
clts
sbb
and
cmp
jg
sub
cmp
mov
inc
add
je
cmp
mov
in
cmpsb
push
inc
xchg
test
jge
test
xchg
sub
fbld
pop
or
push
cmp
scas
shll
loope
lret
fsubrs
scas
sarl
repnz
ds
icebp
pop
cmp
and
or
adc
int
and
jo
test
andb
and
jmp
popa
gs
mov
fdivl
mov
jle
cmc
stos
sarl
ja
adc
xchg
or
xlat
lahf
fsubrl
mov
push
fsubrs
jo
in
xchg
jb
inc
jo
je
imul
sti
mov
adc
jmp
cmp
dec
es
xor
jle
mov
scas
and
das
stos
shll
icebp
adc
push
inc
scas
push
cmc
hlt
adc
std
andb
mov
in
test
pop
icebp
pop
mov
xchg
insl
outsb
popf
xor
or
jge
mov
shll
rcrb
flds
or
stos
hlt
sub
xchg
mov
fisubl
std
pop
cmp
in
test
scas
dec
pop
cli
sbb
or
push
jno
mov
shl
ds
pop
xchg
inc
fistps
sarb
mov
jmp
mov
test
pop
les
es
pop
mov
insb
adc
sbb
mov
sub
aaa
flds
sahf
out
xchg
push
xchg
add
and
addl
arpl
lods
es
jns
lret
and
mov
test
jb
mov
gs
rcr
repnz
cmp
mov
xor
push
or
cli
adc
xor
push
mov
xchg
test
or
idiv
fildl
es
cli
pop
mov
dec
dec
cmp
loop
in
adc
cmp
std
sub
pop
cmp
add
xor
imul
enter
xchg
add
lret
mov
push
fnstenv
mov
cli
fistpl
xor
push
cltd
repz
inc
sub
data16
pop
push
jmp
xchg
mov
xchg
mov
shrb
mov
test
ds
and
mov
xchg
ficompl
mov
test
negl
jecxz
push
out
mov
jl
sub
into
adc
mov
jg
pushf
pop
lret
mov
hlt
es
test
loope
sbbl
lock
jmp
and
leave
hlt
mov
std
shl
dec
mov
loope
popa
cmpsb
lock
mul
outsl
sub
mov
dec
mov
test
cmpsl
sub
mov
add
addr16
mov
jno
jl
daa
outsl
daa
aam
jle
popf
icebp
fnstcw
loop
push
test
sti
lret
xlat
push
fsubrs
icebp
xor
push
sahf
test
mov
push
or
fucomip
mov
or
xor
inc
mov
cmc
decb
jns
or
add
fidivs
rolb
cmc
add
inc
les
pop
pop
call
and
pop
test
mov
and
cs
push
fdivp
nop
sub
jecxz
add
and
inc
adcl
mov
pop
jge
leave
dec
add
lea
dec
mov
sbb
push
fiaddl
jmp
add
bound
and
xchg
test
inc
or
movsl
mov
fildll
dec
test
add
mov
insb
jle
imul
pop
mov
daa
lods
cwtl
sub
int
add
ljmp
jno
or
aas
mov
mov
iret
xchg
shl
xor
mov
stos
ficompl
jg
mov
scas
movsl
stos
clc
or
dec
adcl
ss
je
lret
mov
in
shl
jmp
jmp
xchg
lods
dec
dec
xchg
pushf
int
inc
mov
int3
cs
mov
and
add
in
mov
stc
cltd
cmpl
lret
xlat
shr
std
fs
jmp
lods
jg
pop
stos
fwait
lock
adcl
cmp
pop
cmp
dec
cmp
sub
or
loopne
pop
cmp
out
cmpb
cmp
in
repnz
jo
shll
int3
lret
rcl
aas
mov
or
hlt
mov
jb
pop
mov
rorl
addl
add
fisubrl
mov
pop
mov
incb
in
iret
fstpt
mov
fmulp
cmp
lret
rolb
push
jo,pn
int3
fcoms
ss
loopne
std
inc
xchg
inc
jno
ja
adc
lea
cwtl
das
mov
pop
ds
iret
cld
push
adc
mov
sub
filds
pop
sub
cmpsl
mov
push
clc
inc
sti
push
out
fstpl
rcr
push
outsb
ret
inc
pushf
mov
adc
stos
xor
and
jns
inc
leave
jle
adcb
or
stc
sbb
enter
shl
xchg
loop
pop
mov
gs
das
sahf
enter
pop
cmpsl
clc
lods
sti
pop
sub
or
mov
ja
or
sbb
or
fs
lock
mov
int
imul
pop
cwtl
int3
int
xor
inc
lret
test
or
pop
mov
data16
lret
filds
repnz
xor
mov
mov
in
ret
stc
jb
add
sti
xchg
sub
subb
mov
fadds
loop
stc
scas
cli
inc
fstpl
aam
mov
mov
out
inc
fldt
cmp
aaa
insb
dec
in
mov
jecxz
shr
adc
adc
sbb
push
mov
cmp
fmulp
mov
pop
shrb
xchg
inc
sahf
mov
notl
aaa
decb
in
push
les
cmp
std
jb
pop
stc
xchg
lret
cmp
out
ljmp
call
jecxz
dec
push
sahf
and
leave
call
mov
into
push
outsl
lret
or
sbb
gs
repnz
and
fs
pop
in
jge
scas
mov
xor
mov
or
lds
aas
push
sub
sbb
negl
fcompp
shll
add
mov
xor
mov
pop
push
fwait
mov
jns
xchg
push
or
loopne
mov
sahf
push
or
sarb
push
sub
xchg
sub
dec
dec
das
xor
fs
mov
lods
ds
lahf
or
loopne
or
mov
lods
dec
lds
fmuls
and
popf
cmp
insb
xchg
or
mov
cwtl
pop
push
mov
les
call
jle
jle
ret
cmp
pop
hlt
xchg
dec
loopne
inc
pop
mov
fidivs
ljmp
loope
xchg
xor
or
pop
mov
adc
or
and
out
andl
push
push
in
ficompl
or
sub
jmp
or
sub
popf
fwait
mov
cli
and
sbbl
mov
lods
inc
and
cli
sub
jp
orb
pop
mov
sbb
shll
imul
dec
mov
mov
testb
mov
push
mov
fsts
rol
mov
xchg
pop
hlt
adc
adcb
pop
mov
icebp
sub
jnp
cli
cmp
and
add
testb
pop
or
cli
pushf
bound
mov
int
movsl
xchg
cmp
test
mov
rorb
xlat
mov
andb
nop
jl
mov
lcall
sbb
mov
repnz
sti
adc
insl
ret
sti
rclb
mov
sub
loope
aas
add
jecxz
sar
push
push
jae
jae
jae
pop
or
rcll
mov
rorb
jae
xor
stc
bound
adc
xchg
cwtl
adc
jo
inc
dec
imul
add
adc
das
cltd
add
cwtl
mov
fcoms
inc
mov
add
movsb
imul
inc
push
or
xchg
cld
int3
dec
outsb
mov
shlb
add
stc
arpl
mov
loopne
or
sarb
add
sub
mov
test
jbe
aad
iret
cwtl
dec
mov
es
cmp
das
inc
lret
inc
loope
loop
ss
out
aaa
arpl
ss
mov
and
js
movsb
jmp
aad
addb
fbld
repnz
and
push
addr16
jmp
adc
fstl
cmpsl
mov
dec
pop
scas
cs
push
mov
mov
imul
inc
fcompl
mov
dec
daa
sbb
scas
jns
pop
adc
or
sub
push
les
popf
sahf
lea
push
mov
hlt
pop
lahf
mov
mov
and
out
cmpsl
mov
fcomps
orl
pop
dec
gs
inc
pushf
outsl
std
aad
cmpsb
addl
pop
dec
or
cltd
insb
mov
loop
or
iret
pop
in
ds
cmp
jg
cld
outsl
add
jne
xchg
xchg
stos
jmp
sbbl
and
fnstsw
and
daa
leave
push
lcall
insl
pushf
sahf
xor
mov
push
xchg
sub
enter
push
in
lock
sahf
scas
adc
inc
sti
int3
jne
je
xorl
mov
cmp
pop
sbb
loope
sahf
std
sub
mov
repnz
insb
popf
cmp
pop
add
lds
jle
mov
je
insb
sub
decl
loopne
fadds
cmp
pop
inc
iret
std
movsb
jne
fisttps
push
sahf
insl
sub
lods
add
xsha1
cmpsb
dec
xor
popa
lods
aaa
int
cmp
mov
cmp
pop
shl
dec
add
vcvttss2si
loope
dec
sbb
cmc
pop
es
lahf
insl
sar
stc
push
and
out
add
xor
jb
mov
leave
and
aas
in
stos
je
cmpsb
mov
sahf
push
mov
mov
sbb
mov
aad
aaa
loopne
or
fs
add
push
lret
in
fisttps
fcmovnb
dec
popa
mov
xchg
pushf
push
out
mov
in
pop
idivb
lret
in
rcrl
jmp
cmp
pop
adc
cwtl
mov
or
sbb
sahf
adc
call
cmp
inc
divl
dec
jecxz
mov
mov
popa
xchg
sbb
inc
loope
icebp
adc
jle
push
add
jnp
mov
cmp
cmp
pushf
dec
push
dec
mov
stos
jbe
push
cmp
xor
dec
fidivrs
pop
fistl
es
dec
mov
inc
cmp
jl
cmc
lahf
movsb
fucomp
jmp
mov
lods
ffree
mov
je
pop
repnz
fwait
outsl
enter
and
sbb
int
mov
pop
pop
icebp
push
or
into
insb
sub
lea
aam
cld
and
or
and
sub
cmp
out
jle
out
nop
outsb
test
xchg
add
mov
lcall
in
stos
es
pop
in
fld
push
fldl
shr
jp
gs
xchg
rcl
sub
enter
xor
andl
push
ss
and
je
dec
pop
shll
sti
and
cmpb
movsb
aas
xchg
pop
cmp
add
add
dec
cmp
and
xchg
shll
clc
xchg
and
adc
sub
cmp
jne
loope
hlt
mov
ret
cmpsb
jmp
lds
dec
out
movsl
imulb
or
je
pop
mov
inc
or
push
sar
or
xorb
mov
push
fwait
mov
push
jne
das
outsl
mov
pop
je
xchg
cmp
push
das
mov
arpl
push
jb
stos
sbbl
inc
push
push
cli
cmp
push
pop
iret
push
dec
mov
pop
xor
or
sarb
rcrb
icebp
or
push
imull
les
das
out
pop
lahf
xchg
out
movsb
cmp
out
popa
mov
rcrl
mov
imul
orl
inc
pop
adc
dec
es
std
rcl
imul
mov
mov
jns
pop
push
or
fcoms
shl
daa
call
shr
outsb
outsl
adc
sbb
outsb
add
gs
xchg
sub
jb
mov
sub
or
adc
sub
mov
push
mov
test
or
pop
or
gs
in
inc
cltd
jp
inc
lcall
inc
clc
sbb
outsl
lcall
cmp
cmp
insb
lret
cmp
cmp
icebp
xchg
mov
lret
pop
decb
bound
inc
add
jge
or
cli
fcoml
repnz
and
gs
xchg
out
scas
jbe
fnstcw
push
scas
inc
add
ds
andl
arpl
cld
sti
aam
ljmp
xor
mov
mov
adc
lcall
adc
roll
push
iret
scas
push
fimull
pusha
push
hlt
adc
out
xor
mov
fisttpll
loopne
and
dec
cmpsb
and
call
out
xchg
adc
cmp
lahf
imul
popf
popa
std
jo
cmp
test
ss
jo
ds
addr16
cs
popa
int3
aaa
lds
les
cld
sub
mov
je
pop
in
xchg
aad
fwait
adc
mov
jl
lods
call
scas
cmp
lret
test
mov
orl
jne
mov
testl
addr16
push
out
sbbl
or
cmp
fidivs
aad
dec
mov
repz
movsb
xchg
lea
add
adc
dec
iret
add
cmc
mov
mov
pop
in
test
into
cmpsb
and
jecxz
dec
dec
into
pop
imul
das
dec
sti
out
popa
leave
out
add
push
movsl
sbb
jecxz
jg
mov
cmp
pop
xchg
cmp
mov
mov
mov
jmp
pop
mov
xor
push
mov
push
or
jl
mov
adc
rcrb
jge
rcrb
xchg
jno
movsb
xlat
lahf
in
add
stos
pop
mov
std
pop
mov
sub
and
rcr
add
sbb
out
out
out
cli
dec
add
xchg
hlt
jae
jne
leave
push
mov
or
scas
and
mov
jmp
push
add
sbb
sub
in
sti
xchg
pop
sahf
adc
or
imul
test
mov
nop
repz
xchg
in
aad
rcr
sbb
loope
or
pop
push
sub
repnz
jp
hlt
xchg
sub
cmp
cmp
mov
mov
mov
into
push
scas
adc
pop
jbe
inc
cli
jmp
es
inc
mov
inc
sub
jmp
jno
loopne
or
push
inc
and
xlat
jmp
outsb
add
adc
mov
mov
and
stos
jmp
cmp
lods
mov
mov
lds
jns
js
mov
mov
rclb
mov
std
int3
insl
cmpsl
xor
rclb
jne
ret
jo
and
lods
pop
mov
push
mov
shll
jmp
clc
pop
lods
xchg
test
dec
push
lcall
inc
stc
lea
xchg
cmp
xchg
dec
filds
cmp
sub
jl
fsubrs
cld
out
and
subl
insl
cld
frstor
jmp
jle,pn
pusha
add
fwait
ss
lds
mov
enter
pop
mov
cmp
dec
jecxz
cmp
adc
mov
das
arpl
jbe
jo
sub
repnz
xor
add
inc
ss
push
cmp
add
xor
cltd
stos
loopne
adc
sub
dec
lods
add
repz
mov
xchg
imul
iret
lds
push
mov
mov
and
xchg
out
sbb
jecxz
bnd
adc
pushf
lods
and
jle
cwtl
mov
lds
inc
int3
mov
shrb
cmp
sbb
mov
cmp
and
add
popa
sbb
outsb
hlt
xor
push
jge
mov
nop
in
inc
sub
outsl
mov
outsb
nop
insb
filds
pop
push
sub
cmp
xchg
outsb
sahf
pop
btc
insb
fadds
sbb
jle
jo
sub
push
dec
mov
mov
call
mov
mov
je
mov
mov
aaa
dec
cmp
push
popf
sbb
cmpl
cld
aaa
sbbb
mov
out
in
jecxz
out
icebp
mov
dec
loopne
aas
adc
mov
mov
lods
imulb
add
mov
ljmp
jle
es
fs
pushf
dec
in
sahf
addr16
and
dec
sub
cs
clc
add
cli
push
fcompl
pop
aaa
sbb
adc
add
xor
jno
jl
cmpsb
dec
jns
jnp
xor
inc
out
jmp
inc
and
out
xor
notb
and
sub
lods
gs
sub
loop
xor
outsl
push
andl
add
cltd
push
xor
sub
pushf
dec
xchg
push
mov
mov
loop
inc
in
mov
and
push
pop
cmp
shlb
stos
lds
pop
not
imul
scas
mov
nop
je
add
mov
mov
jne
pop
ljmp
and
add
and
push
je
sub
repz
and
mov
mov
add
mov
xchg
cmc
lods
or
test
push
mov
stc
repnz
jg
cmp
pop
lahf
mov
lea
popf
cmp
rolb
jb
jno
push
scas
imulb
divb
sbb
and
pop
jno
stos
sub
sub
test
mov
adc
lcall
sbb
fmull
xchg
jns
xchg
or
pop
repnz
mov
push
xor
cs
and
or
push
xchg
sub
mov
pusha
in
lods
ds
mov
jge
xchg
popf
test
cmp
shrb
pop
imulb
adc
ret
lock
fildll
leave
sbb
or
std
cmp
loopne
mov
add
test
xchg
sbb
add
shrl
imul
xor
hlt
bound
into
rclb
icebp
jnp
jno
fwait
xor
or
mov
xchg
mov
inc
test
sbbb
fdivl
jnp
in
jb
bound
stos
out
ret
push
inc
jmp
subb
fxch
call
pusha
pushl
outsl
or
sbb
mov
cmpsl
out
sub
pop
or
mov
cmc
cmp
and
fstpl
xchg
fdiv
std
pusha
ljmp
add
xor
mov
dec
loopne
dec
adc
shrb
push
dec
pop
adc
lock
lds
mov
adc
lret
jg
sahf
or
xchg
push
push
dec
out
push
dec
fmuls
addr16
test
mov
cli
jb
pop
into
jge
stos
sbb
dec
lret
xor
aas
or
fidivl
adc
adc
lcall
mov
push
sti
cltd
jle
jge
jp
xchg
mov
fdiv
xchg
or
jle
dec
push
inc
and
mov
stos
movsw
scas
dec
add
mov
ret
nop
adc
out
push
and
jb
push
arpl
pop
icebp
cmp
sti
inc
push
lock
jb
dec
pop
int
mov
sub
mov
add
push
enter
hlt
sbb
mov
movsl
sbb
xor
shlb
lods
cmp
dec
adc
jl
xchg
test
inc
das
pop
stos
fwait
pop
subb
mov
xchg
xchg
push
aam
pop
insl
push
insl
jo
pop
cld
std
inc
fldl
rol
pop
dec
mov
inc
lcall
cwtl
jmp
enter
mov
cmp
sar
test
jecxz
dec
movb
pop
lea
jo
divl
mov
lret
std
xor
out
xor
mov
xor
sbb
pop
outsl
loop
mov
icebp
movsl
lods
imul
mov
inc
and
loop
arpl
js
movsb
mov
xor
lcall
mov
movsl
dec
push
sbb
xor
ja
jp
daa
cltd
dec
xchg
enter
mov
pop
lock
shl
mov
mov
lock
iret
int
xor
in
lret
jl
jecxz
loop
mov
jmp
scas
dec
inc
fnstsw
push
inc
add
inc
js
sti
aam
mov
push
mov
lret
movb
ss
out
xor
andl
dec
enter
dec
dec
dec
test
xchg
or
xchg
jmp
xchg
push
scas
xchg
cmp
addb
xlat
pop
push
insl
dec
add
jbe
mov
xchg
jmp
xchg
sub
push
mov
test
xchg
pop
lds
cmp
out
xchg
pushf
pop
mov
shrb
inc
mov
insl
jnp
mov
inc
mov
stos
jg
mov
fiaddl
mov
push
mov
subl
push
dec
or
sub
add
xor
and
jmp
test
ret
sbb
mov
outsl
icebp
inc
fsubs
or
pop
mov
out
imul
mov
hlt
jge
test
roll
sub
push
out
fists
jns,pt
ljmp
sub
repz
jns
push
lcall
push
jae
dec
sub
mov
in
cmp
fidivrl
mov
nop
or
test
mov
int
mov
movsb
and
push
or
jno
adc
push
mov
jbe
loope
out
and
hlt
js
loope
std
jo
mov
mov
pusha
insl
enter
scas
jbe
jae
push
je
inc
out
cmp
jge
xor
mov
jo
xchg
lods
adc
into
inc
shlb
lock
jg
cmp
adc
pop
and
xor
sti
stos
fldcw
mov
cmpsl
rolb
data16
clc
nop
popf
arpl
sub
dec
out
pop
sahf
jo
sarb
jle
xchg
adc
popf
sbb
addl
push
sub
aad
push
out
call
sbb
outsb
iret
insb
aad
sahf
out
or
popa
std
xor
or
add
je
stos
and
push
ss
sub
cmp
add
cmp
sbb
push
jmp
ja
fs
leave
adc
ficompl
mov
push
shll
push
gs
popa
sbb
rorb
shr
cmp
movsl
into
dec
or
dec
pusha
cmpsb
sub
jae
fidivrl
or
mov
push
dec
movsb
loopne
das
mov
jmp
fdivl
or
inc
pop
mov
mov
cmp
adc
mov
dec
mov
daa
and
add
stc
popf
adc
add
mov
or
ds
or
and
pop
mov
sub
test
cmp
dec
fwait
sub
and
sub
sub
sbb
cltd
jbe
inc
ret
jne
pop
mov
dec
bound
mov
lds
ja
jno
mov
decl
mov
test
int
push
popf
outsb
adcb
fucomi
fwait
inc
jmp
psubd
out
aas
pop
add
call
xor
bound
in
mov
inc
arpl
and
fcmovbe
stos
out
jo
leave
mov
mov
lods
out
sbbl
adc
pop
shlb
jmp
pop
ss
pop
jno
xor
lods
jb
frstor
iret
xor
test
arpl
hlt
mov
es
jmp
mov
dec
add
mov
sbb
ja
pop
idivb
adc
and
xlat
pop
enter
mov
jo
cmp
data16
idivl
sbb
aas
test
xor
iret
addr16
or
sbb
sti
shl
push
cltd
adc
xor
pop
push
lret
mov
int3
movsb
inc
enter
adc
fwait
pop
cld
mov
mov
mov
mov
adc
outsl
inc
cmpsl
dec
ljmp
lret
add
punpckhwd
cmpsb
jge
mov
in
or
cs
mov
aaa
push
ds
push
popa
jmp
adcb
dec
das
out
shl
loopne
lahf
in
sbb
fsubrs
dec
in
push
xchg
xor
sbbb
add
sahf
jo
sbb
repnz
les
and
int3
jns
xchg
xchg
rcl
inc
fbstp
xchg
and
add
sub
and
cltd
jo
pop
test
ret
fsubrs
popf
sbb
ja
mov
mov
jp
xchg
dec
sbb
pop
repnz
dec
xchg
mov
rdmsr
leave
pusha
frstor
iret
or
push
test
clc
or
jae
mov
cmp
pop
jbe
in
pop
push
or
add
xchg
scas
inc
mov
scas
int
add
pusha
xchg
enter
inc
mov
rcrb
cltd
in
lret
and
sbb
add
arpl
jmp
xor
xchg
test
sti
xchg
ja
sbb
pop
adc
imul
andnps
mov
pop
icebp
stc
and
jle
shll
call
das
orl
loop
out
xchg
jmp
and
xor
push
mov
mov
dec
dec
lret
cltd
pusha
mov
cwtl
jp
mov
inc
aam
push
fcomp
icebp
cmp
sti
addr16
lods
sbb
add
jp
mov
das
mov
dec
cmpsl
idiv
push
mov
mov
into
mov
aad
xchg
fidivl
adc
imul
nop
mov
add
les
loop
cli
mov
and
mov
lock
or
cli
mov
push
xchg
xor
lea
lock
adc
lahf
cltd
std
xchg
lock
dec
jns
jnp
dec
shlb
cwtl
push
add
xor
or
fwait
mov
lahf
ss
mov
lds
cmc
mov
adc
lret
adc
dec
cmpsb
cmp
mov
lea
and
push
add
pop
icebp
sub
int3
test
push
scas
aaa
xchg
mov
cmp
vmptrst
iret
clc
xor
mov
or
inc
pop
daa
orb
scas
cli
mov
movsl
insb
push
sbb
js
push
cs
mov
inc
repnz
inc
das
insl
mov
mov
pop
in
xlat
fidivrl
jmp
arpl
in
sub
add
push
xor
pusha
dec
sbb
ja
pop
outsl
mov
jns
sbb
movsl
mov
jg
int
mov
mov
cmpsb
insl
test
aad
or
icebp
movsl
xor
pop
loope
aad
fidivrl
sub
inc
adc
test
imul
shlb
xchg
dec
pop
roll
push
jnp
lods
xor
jp
movsb
adc
mov
shlb
sahf
mov
sub
sub
sbb
adc
fidivl
pop
cmp
scas
push
call
dec
icebp
outsl
repz
fsubs
xor
sub
xor
outsl
sbb
je
je
cmc
jecxz
aad
mov
sahf
push
fwait
scas
iret
mov
icebp
xor
xchg
sbb
fdivl
mov
jnp
jg
popw
dec
push
jge
push
mov
js
sub
es
push
push
subb
cwtl
test
push
cltd
test
leave
sub
sub
push
sub
daa
xchg
js
jnp
stc
push
aam
or
cmpsl
lret
testb
bound
in
nop
scas
jns
pop
outsb
cmp
daa
addr16
xchg
or
test
repz
outsl
mov
out
popa
mov
push
fsts
lret
test
and
sbb
pushl
fisubs
mov
loope
sub
sub
push
mov
cmpsb
mov
fcmovnb
add
pop
stos
fstps
rcr
xor
ss
xchg
dec
mov
adc
add
or
mov
adc
adc
xor
int
ds
out
mov
xchg
mov
dec
loopne
or
mov
rcll
jle
dec
ja
addb
adc
dec
leave
mov
es
testb
mov
stos
out
jg
inc
das
jb
add
and
out
test
dec
mov
push
cwtl
xor
xor
xlat
dec
andb
into
sahf
sub
in
sub
fistl
iret
and
js
shrb
mov
stos
stc
pop
xor
leave
stos
cmp
es
pop
sbb
mov
mov
or
cld
out
xchg
sub
imul
xor
vhsubpd
xor
dec
enter
cmp
cltd
aas
shrl
nop
std
adc
mov
hlt
and
popf
sub
das
shlb
mov
push
lods
outsl
inc
sbb
push
mov
test
mov
jl
rorb
fs
pop
in
xchg
lock
popa
testb
adc
adc
mov
xlat
xor
insb
and
adc
repnz
stos
dec
pavgb
adc
adc
pop
pushf
mov
and
enter
lahf
fnstenv
push
xchg
cmc
data16
xchg
adc
add
xchg
mov
mov
sbb
gs
in
test
sbb
sbb
movsb
les
mov
push
push
ljmp
xor
roll
rcr
dec
pop
aas
inc
mov
mov
sbbl
mov
mov
fildl
xor
sub
bound
out
addr16
xchg
pop
ret
shll
sub
repz
loope
and
mov
push
cwtl
lock
inc
loope
stos
andl
jecxz
fidivrs
cs
fldl2t
xchg
movsb
sti
fstpt
shlb
push
add
pop
jmp
add
lods
inc
std
movsb
push
sub
dec
or
dec
pop
sbb
mov
mov
pop
in
sub
jo
mov
add
lods
sub
pop
push
fstpt
or
lret
adc
stc
mov
jo
jmp
push
sbb
notl
jb
loopne
jge
sbb
lds
pushf
xchg
mov
in
out
sbb
sub
scas
mov
pop
in
adcb
cmp
sahf
xchg
sub
mov
out
xchg
mov
xchg
notl
js
imul
jmp
push
mov
cmp
and
jbe
inc
aam
movsb
add
jecxz
xchg
sbb
cltd
xor
js
fwait
in
xchg
mov
loop
data16
push
jno
aas
mov
adc
je
fsubl
xor
subl
arpl
sahf
push
loope
jecxz
pop
enter
push
stos
mov
sbb
imul
cmp
inc
pop
jne
sbb
shrb
cs
pusha
cmp
dec
add
push
stc
jl
into
adc
jecxz
fisubl
dec
in
fs
mov
cmc
popa
pushf
mov
dec
mov
xorb
in
add
out
movb
sub
mov
sti
ficoms
cld
jmp
pop
mov
aad
add
aad
push
scas
outsb
mov
aaa
mov
and
rcrl
xor
hlt
cltd
loopne
sub
sub
loopne
sub
shlb
cmpb
mov
imul
or
pusha
mov
push
jecxz
inc
addb
insl
add
ja
aas
test
scas
add
mov
fwait
test
popf
dec
out
bound
mov
stc
out
xchg
inc
rclb
fbstp
inc
outsl
lcall
sbb
xor
sbb
lock
and
jge
popf
jnp
pop
sub
testl
popf
add
jp
mov
nop
jle
sbb
and
inc
fisttpll
out
jae
fs
mov
cmp
and
lds
addr16
xor
clc
ret
insb
test
repz
pop
or
bound
push
adc
shrl
xchg
pop
mov
mov
xor
movsl
nop
fildll
cmp
out
push
decb
aaa
sbb
ror
dec
icebp
cmp
pushf
pop
or
jge
jno
fsubrl
xor
cmp
mov
psubw
js
xchg
pop
loope
in
dec
repnz
shlb
xorb
and
pop
lock
cli
and
sbb
ror
leave
pop
inc
jg
aaa
or
cmp
push
mov
pop
test
lahf
mov
out
popa
xchg
outsl
jo
xorb
in
lods
in
ficomps
push
in
ljmp
and
or
push
pop
jge
add
out
mov
and
jmp
ss
add
cltd
lock
leave
out
fwait
xor
push
mov
xchg
or
iret
push
mov
cltd
out
mov
xor
sub
cltd
mov
ret
scas
cmpsb
jnp
sbbl
jb
mov
inc
mov
mov
xchg
int3
and
aad
lcall
and
daa
inc
aas
add
pop
mov
pop
mov
cmp
iret
add
add
xchg
das
sahf
in
add
mov
fstpt
adc
fiadds
add
imul
jmp
test
shlb
std
mov
mov
das
mov
mov
in
and
push
add
data16
pop
adc
mov
js
fs
pop
cmc
mov
mov
add
mov
and
mov
loope
lock
imul
leave
inc
daa
testl
mov
dec
lret
xor
iret
jbe
cld
subl
xlat
xchg
dec
push
xor
movsb
cmp
xchg
stos
xchg
aam
xchg
inc
sbb
loop
cmp
xchg
int3
adc
gs
push
movsl
stc
pop
cmpsb
sbb
sub
pop
inc
int3
mov
jge,pt
scas
mov
lret
and
and
xor
inc
test
add
and
push
dec
into
faddl
loop
lods
rolb
je
cmpsb
jp
shlb
mov
jo
xor
jbe
in
xchg
xchg
test
adc
xchg
cmp
loope
out
mov
aad
dec
or
mov
xorl
test
rclb
inc
out
lods
and
in
mov
add
cmpsl
inc
pop
mov
insl
add
iret
cmpsl
aas
or
insl
aas
daa
call
jne
jp
insb
dec
cmp
insb
push
jbe
mov
mov
in
xor
or
lahf
push
xlat
outsb
es
bound
and
call
adc
jbe
pushf
xor
int
hlt
pop
mov
outsb
imull
imull
inc
push
call
out
inc
fstp
or
inc
pop
mov
add
cwtl
mov
add
in
ljmp
push
xchg
mov
negl
push
and
call
xchg
in
mov
hlt
jge
lods
cmpb
aaa
cld
mov
cwtl
call
shl
shrb
test
test
repz
xlat
das
mov
aam
into
push
cs
pop
fs
mov
cmpb
xlat
jmp
icebp
dec
pop
dec
gs
xchg
imul
fwait
rep
shrl
insb
mov
outsb
pop
and
pop
adc
sub
sub
arpl
jb
scas
in
rcl
repnz
sbb
mov
testb
test
lret
adcl
hlt
int3
lahf
cmc
inc
pop
in
push
shlb
mov
push
scas
in
fsubl
pushf
mov
xlat
aas
enter
int
pusha
mov
shrl
shl
sbb
mov
xor
push
add
test
fdiv
cmpl
sub
xchg
xchg
pop
decl
inc
sub
cmpl
inc
pop
push
daa
mov
mov
pop
aam
jne
stc
or
loope
sub
xor
pop
test
xlat
leave
js
mov
fwait
sbb
sbb
or
mov
aam
and
inc
in
inc
stos
sub
cmp
repz
pushl
test
mov
shll
jecxz
and
cltd
mov
aad
bound
sahf
rcl
aas
xchg
pop
repz
jmp
daa
xchg
in
pop
std
cmp
lahf
rol
sub
fdivrl
data16
or
stc
lret
sti
sbb
and
jb
repz
data16
test
xchg
sbb
add
push
mov
std
push
cs
push
sub
inc
icebp
xchg
pushl
das
lret
mov
cli
shll
lcall
xchg
mov
mov
setne
ja
ds
outsl
mov
in
cmp
pop
xchg
mov
pop
sub
add
jge
pop
mov
xchg
mov
movsl
adc
and
mov
movsb
call
sbb
inc
mov
jecxz
push
jb
iret
sub
pop
jb
jl
loopne
jecxz
test
cmc
je
cli
pop
aam
cmp
std
bswap
cs
cmc
or
into
andl
lds
and
addr16
sbb
ret
hlt
mov
dec
add
add
outsl
loope
adc
mov
lret
hlt
mov
adc
fdivl
dec
mov
fdivs
into
or
inc
add
aad
enter
test
repz
mov
fadd
orb
fucomp
fidivs
push
mov
jo
xor
insb
adc
in
xorl
addr16
or
add
lods
jbe
cwtl
xor
ja
inc
sub
add
xor
xor
inc
sbb
xchg
dec
pop
or
jp
cmp
xchg
movsb
add
push
sub
cmp
ja
pop
repz
in
mov
test
jbe
mov
xor
pop
testl
jae
or
out
mov
repnz
push
xor
adc
andl
inc
or
xor
xor
mov
dec
cmp
sub
scas
xchg
push
add
fidivrl
or
inc
xchg
cmp
outsb
test
loope
mov
andb
aad
cmp
icebp
fisubrs
mov
cmp
jecxz
stc
shlb
mov
dec
jge
in
scas
insb
or
jge
jl
ljmp
imulb
aaa
and
out
adc
ljmp
popa
icebp
dec
pop
or
cmpsb
push
test
mov
sbb
sbb
cmp
pusha
mov
fsubr
xchg
mov
fistps
daa
ror
fdivrl
pop
jmp
add
cmp
ss
pop
je
mov
mov
xchg
dec
fisubrl
xchg
xchg
fcomip
shr
daa
add
mov
iret
mov
jp
jbe
hlt
fwait
pop
insb
xchg
mov
lea
push
ret
pop
dec
jmp
lods
dec
jo
push
aad
test
insl
pop
xorb
test
mov
mov
dec
shlb
roll
ret
inc
lods
xchg
xchg
or
sti
fs
fidivl
mov
pop
adc
int
mov
in
mov
mov
stc
lea
ret
push
jmp
inc
jmp
pop
fsubrp
cmp
shlb
cmp
push
sahf
cwtl
stos
inc
sti
push
mov
mov
hlt
mov
or
stos
cmp
xor
push
jns
inc
in
and
and
lds
xchg
dec
mul
jecxz
sbb
xchg
cmp
jge
add
push
testl
aas
push
cld
xchg
mov
inc
jp
sbb
mov
mov
or
into
mov
movsb
in
insl
cmpsl
out
ret
add
aad
mov
push
push
inc
in
mov
and
jne
inc
sbb
cmp
shrl
add
mov
xor
sbb
jb
js
sub
mull
stc
jle
fnstcw
enter
jbe
mov
mov
inc
pop
out
js
push
inc
push
push
xchg
push
mov
mov
cmpsl
call
inc
push
inc
pop
lock
adc
stc
dec
pusha
jns
rcl
mov
jno
sbb
adc
cs
outsb
push
repz
sahf
inc
mov
in
add
shr
and
out
imul
imul
or
sbb
lret
repnz
jo
pushf
fs
in
cs
mov
jns
add
lea
movsb
ja
xchg
cmpsb
xor
mov
lock
shlb
adc
xchg
iret
jnp
insb
xor
and
mov
jo
out
lds
mov
mov
outsl
stos
out
mov
js
sbb
jns
pop
lods
lret
out
sub
dec
repnz
insb
sub
les
lea
stc
jg
shlb
pushf
mov
mov
jb
sbb
xchg
addl
insb
adc
adc
repz
jp
xor
mov
cmpsl
push
add
pop
in
sub
inc
xlat
addr16
add
cmp
into
add
add
jno
ljmp
ss
push
js
sbb
nop
mov
xchg
add
and
sti
fiadds
insb
push
into
mov
xchg
pop
cmp
cmp
dec
mov
shrl
jne
jg
xor
andl
outsb
mov
inc
mov
jg
push
push
arpl
or
test
insl
in
imul
mov
outsl
inc
lock
jo
xchg
lods
sbb
sbb
pop
jae
sub
lret
cmp
je
cmp
out
adc
cmp
not
inc
fadd
repz
movsl
dec
in
add
fbld
and
pop
addr16
out
jnp
mov
sub
add
repnz
out
pushf
dec
arpl
enter
in
cmp
cli
fs
clc
cmp
jns
arpl
bound
push
mov
sarb
pop
mov
popa
inc
pop
cmp
cmp
cmp
fidivrs
hlt
in
scas
call
in
adcb
cmp
movsl
sbb
fldt
pop
daa
sub
popa
fwait
xor
cmp
aaa
and
add
push
popf
test
xchg
jno
jno
lock
pop
xor
in
sub
sbb
dec
inc
pop
movsb
mov
mov
add
repz
jbe
sbb
sbb
xor
nop
stos
notl
sbb
hlt
xchg
xor
popa
mov
xor
adc
bound
pushf
pop
mov
jmp
mov
scas
push
xor
jl
sbb
stos
mov
insb
mov
pushf
xor
cmpsb
cli
jecxz
outsb
vpunpckhqdq
sub
icebp
xchg
stc
dec
mov
lods
push
sub
lret
jb
fstps
in
mov
aad
enter
pop
out
fisttpl
add
sbb
jbe
xor
xchg
inc
popa
rol
iret
ficoms
aaa
add
add
add
push
je
add
dec
fstpl
mov
lock
das
popf
mov
push
sahf
lret
imul
sbb
mov
ljmp
decb
rorb
mov
push
adc
lcall
dec
gs
test
fisubl
int3
arpl
es
repz
add
mov
xlat
mov
or
test
sub
mov
clc
mov
mov
sub
enter
lock
dec
pop
gs
xor
cmp
cmp
pop
repnz
out
in
call
insb
add
mov
pop
xchg
insb
add
das
lds
mov
cmpsb
sbb
rcrb
and
mov
push
scas
lret
outsb
fcomps
sub
push
pop
cmp
mov
loopne
sub
mov
add
xchg
sbb
sbb
push
or
sub
lock
adc
stc
push
loop
sub
cmpsl
ds
std
dec
pop
das
xchg
sbb
mov
out
mov
gs
jmp
sub
jp
pop
and
andb
or
cs
aam
fidivl
testb
cmp
icebp
cmp
cmpsl
loop
dec
adc
loop
push
or
call
jbe
insb
adc
ja
mov
orl
mov
dec
sbb
mov
pop
push
adc
sub
add
fs
xor
pop
inc
cmp
js
test
xor
push
cmp
outsl
adc
nop
and
xor
cmpsb
sbb
out
test
jae
mov
sub
jg
xchg
std
or
mov
sti
das
dec
ficomps
adc
inc
pop
push
jo
inc
jg
xor
pop
push
bound
sar
lods
and
into
or
mov
adc
mov
cmpsb
mov
shrl
cmpl
and
popf
dec
dec
rcll
cmp
div
loop
add
mov
outsb
out
pop
lret
push
pop
stos
mov
inc
add
ljmp
je
aas
cmpsb
pop
sahf
clc
aam
dec
out
int3
add
cmp
sub
out
in
xor
shl
mov
pushf
movsb
inc
sbb
mov
pushf
fs
xchg
sub
rcll
lcall
push
xchg
xor
fsubs
jno
push
inc
sbb
pop
js
add
rolb
test
xor
mov
mov
mov
ss
push
push
rcl
push
lods
jmp
pop
iret
popf
ja
dec
lds
and
enter
mov
hlt
insl
push
cmpsl
icebp
pop
out
cmpsb
lds
cmp
hlt
insb
adc
mov
xor
ja
stos
cmp
repz
and
pusha
sub
popl
jbe
jp
mov
xchg
lcall
jmp
xchg
movsb
jo
mov
into
and
into
enter
pop
cld
dec
add
sbb
sbb
lahf
mov
in
movsb
jmp
push
or
push
mov
cmp
fcomps
pop
lods
fistpll
cmc
mov
push
and
negl
adc
fwait
push
aam
jp
sub
leave
pusha
sti
dec
pop
scas
movsl
push
inc
add
xchg
and
or
fisubs
stos
mov
sub
out
popa
repz
mov
adc
in
sub
cmp
loope
adc
cmp
nop
mov
cmpsb
lock
and
pop
sub
popf
xchg
xor
push
outsl
in
dec
jecxz
loop
xchg
rcrb
shll
sbb
jbe
cmp
in
aaa
int
loope
push
pushf
xchg
push
pop
push
test
push
andb
xor
xchg
or
fbstp
cmpsb
sbb
pop
cmp
or
xor
xor
imul
jp
mov
das
push
or
sbb
sti
jbe
inc
fs
in
cld
pop
mov
jge
lock
sahf
iret
es
paddd
sbb
pop
js
add
scas
loope
movsl
cmp
add
push
sbb
dec
dec
ja
ficomps
xchg
xchg
jge
ja
mov
lds
ds
push
aam
pop
and
pop
mov
inc
popf
pusha
add
dec
lods
xor
out
xchg
mov
je
jns
push
mov
jle
push
fidivl
sbb
push
cmpsb
outsb
lret
mov
and
gs
mov
jle
ds
inc
jne
sti
sbb
mov
xchg
jmp
or
sub
loope
nop
cmovno
jge
aam
je
pop
mov
add
cmp
push
sbb
pop
mov
and
ja
lds
jb
pop
popa
faddl
jmp
pop
mov
in
fbstp
jecxz
inc
mull
loope
decb
sbbb
or
mov
and
mov
jg
jnp
and
push
ja
mov
xchg
pop
into
pop
xchg
pusha
lods
fwait
sub
int
add
popa
insb
daa
in
sahf
adc
push
es
in
push
ja,pt
xchg
mov
je
add
cmpsl
mov
popf
cmp
push
testb
pop
dec
repz
sbb
rcl
pop
loope
push
mov
sub
into
lcall
mov
xor
loopne
or
std
dec
cli
push
in
fimull
or
cmp
cmp
jmp
mov
call
sub
movsl
cmp
imul
adc
cmp
int
jae
inc
fbstp
and
lahf
lock
dec
adc
cmp
jg
out
out
insb
loop
and
lea
push
aas
movl
pop
xor
xorl
jno
fisubl
inc
gs
cs
out
mov
xchg
xchg
test
daa
mov
fpatan
inc
jnp
testl
sti
aam
mov
jp
xor
fwait
inc
sbb
enter
lahf
movsb
js
mov
ss
lret
lock
push
test
adc
fidivrs
mov
daa
cmp
fmulp
dec
pop
lret
ss
sub
loopne
or
loope
mov
jo
inc
push
setg
or
pop
outsb
icebp
jno
jl
mov
stos
imul
fcmovu
mov
aam
lret
popa
addr16
ljmp
inc
mov
jae
out
js
out
add
mov
movsb
jge
in
mov
sti
out
sbb
int3
add
jp
loop
adc
je
pushf
mov
jne
and
fisubrs
dec
stos
mov
mov
mov
xor
push
ffreep
dec
dec
fmuls
cmpsl
and
or
xor
or
push
xor
sbb
insl
lock
and
mov
insb
inc
sub
mov
mov
icebp
cwtl
mov
mul
mov
mov
sbb
mov
mov
ret
outsl
hlt
ss
outsb
leave
jno
mov
les
xor
jle
jnp
inc
lahf
push
cmpsl
sub
cs
int
out
dec
in
outsl
add
push
insb
push
ret
and
cmc
je
dec
mov
mov
inc
adc
and
xchg
lods
ret
cltd
xor
aam
pop
ret
jl
cmpsb
inc
and
fadd
into
push
std
int3
jg
jo
test
repnz
xor
lret
jb
daa
lcall
sub
jmp
ja
push
mov
xchg
add
dec
jmp
mov
jl
loopne
xor
dec
imul
js
outsl
jb
mov
call
adc
out
xchg
ficoml
pop
and
mov
test
mov
clc
enter
mov
inc
fsubl
addr16
pop
nop
daa
mov
aad
and
scas
mov
mov
ja
xchg
mov
jo,pt
adc
rclb
cmp
inc
test
mov
shl
lahf
add
data16
loope
mov
js
xchg
popa
mov
jnp
daa
enter
jle
gs
outsl
xchg
add
xor
pop
cwtl
mov
lahf
in
jg
mov
mov
push
and
push
add
aad
jo
jne
jl
in
adc
popa
xor
call
arpl
cs
dec
shlb
jno
in
xor
sbb
test
hlt
fcomps
mov
and
fiadds
jge
pop
stos
mov
adc
xor
push
pop
jmp
xchg
sub
jle
aam
mov
push
mov
cli
jae
iret
xchg
movl
and
lock
xchg
mov
xlat
adc
xor
jp
jbe
ja
call
sbb
lret
pusha
add
pop
repz
js
inc
mov
pop
lahf
jl
pop
add
xor
pop
pop
or
xchg
cwtl
das
fsubr
test
dec
cmpsb
lock
fwait
xor
outsb
push
jne
in
in
test
movsl
js
faddl
repz
mov
or
xchg
xor
jno
movsb
pop
gs
add
sbb
ret
in
inc
ljmp
sub
fildl
lock
xchg
dec
xor
push
push
bound
rcr
inc
mov
adc
mov
cmp
stos
outsl
push
and
fisubl
shll
cltd
pop
cmp
in
mov
xorl
std
cltd
sub
call
lods
mov
movsb
sti
adc
and
mov
mov
add
push
xchg
dec
push
or
push
jo
mov
xchg
and
int3
jle
ljmp
add
sti
cld
xchg
cs
xor
add
dec
cmpsb
js
and
insb
inc
dec
insl
cmp
sub
mov
enter
arpl
imul
out
mov
popf
ljmp
cmp
jae
movsb
xor
mov
shll
mov
adc
sbb
push
into
xchg
and
and
clc
mov
fsubrl
imul
imul
push
aam
icebp
pop
mov
dec
in
rcrb
dec
mov
mov
js
lret
and
xchg
mov
cmc
sarb
inc
mov
pusha
out
mov
mov
sbb
mov
inc
sahf
adc
inc
jecxz
add
imul
pop
or
cmp
cwtl
mov
mov
push
or
dec
insl
jge
clc
mov
jne
lret
and
pop
mov
popa
mov
cli
movsb
inc
sbb
popa
adc
push
adc
outsb
add
jns
les
aaa
lcall
sub
aaa
shrl
add
aad
mov
or
sbb
jecxz
xchg
das
fcmovbe
hlt
mov
repz
ds
adc
enter
cmp
inc
lret
push
add
jp
insl
shll
inc
cmp
jne
das
mov
push
fnsave
pop
lea
and
stc
inc
cmp
insb
inc
ljmp
xor
clc
cmpsl
jno
xchg
dec
add
xchg
mov
add
ljmp
mov
pushf
jb
nop
arpl
or
je
lahf
test
in
mov
adc
imul
sbb
dec
popf
inc
loope
insl
arpl
pop
cmpsl
fs
sub
xchg
dec
xorl
test
jno
push
stc
nop
xchg
hlt
call
sbb
jle
shlb
aaa
popf
cmp
cmpsl
jmp
or
test
jg
adc
add
xchg
xor
fisubs
seta
mov
dec
cltd
mov
rcrl
scas
popa
jge
or
xchg
adc
push
insl
aad
stos
fidivrs
icebp
cmpl
mov
cmp
iret
imul
or
adc
or
mov
enter
push
inc
inc
jae
je
dec
and
inc
lahf
lods
push
dec
outsb
mov
sarl
icebp
mov
pop
scas
jecxz
xchg
jne
les
sub
xchg
fsubrs
mov
imul
add
repz
lahf
adc
push
and
insb
push
mov
cmp
lock
sub
add
pop
scas
aad
mov
das
or
call
addr16
enter
out
inc
mov
test
add
pop
movsl
add
loop
cmp
ret
add
pop
adc
xor
cld
dec
push
cmp
jae
sbbl
xchg
imul
fbstp
pop
repnz
jp
mov
and
pop
pop
in
js
stos
jg
sbb
adc
fdivrl
test
lods
loop
arpl
jge
inc
cltd
inc
mov
and
dec
mov
dec
loopne
sbbl
cmp
cmp
mov
lds
adc
ja
mov
into
fnstsw
push
scas
sti
push
push
xorl
call
cmc
outsb
outsl
les
cmovl
mov
sbb
jmp
fisttps
inc
mov
inc
mov
sub
and
insb
mov
test
outsb
or
mov
cmp
mov
movsl
add
je
add
cld
cmc
mov
je
call
inc
ret
jb
std
add
hlt
jne
pop
jl
bound
movsb
cld
jle
xchg
jge
mov
insb
in
xchg
xchg
pop
dec
ljmp
cmpsl
pop
or
jns
scas
jl
js
fldenv
mov
mov
arpl
cld
pop
subl
adcl
push
push
stos
repnz
and
inc
xchg
push
or
loope
cltd
mov
rcrl
push
cmpsl
jl
mov
fdivs
dec
add
cwtl
enter
xor
inc
inc
cmp
cltd
clc
inc
lcall
and
sahf
mov
sbbl
mov
cmp
sbb
test
rcrl
sub
mov
insb
lds
mov
dec
movsl
sbb
mov
dec
inc
lcall
and
std
in
inc
add
sbbl
sbb
lods
xchg
add
or
jae
inc
insl
movsl
sti
cli
dec
pop
push
dec
cmpsb
stos
mov
sub
mov
mov
adc
data16
fisttpl
jecxz
push
in
push
notl
icebp
xchg
movsb
push
movsl
sbb
sub
es
push
push
aaa
pop
cmp
xlat
lods
mov
lahf
mov
loop
rclb
pop
gs
cmpsb
sbb
push
or
adc
stos
lea
mov
repz
xlat
xchg
pop
push
int
clc
pushf
cmc
jmp
inc
adc
mov
arpl
xor
ljmp
bound
lahf
xchg
mov
sub
xlat
inc
add
fistpll
pop
push
rcrl
or
adc
ss
mov
fcoms
ss
mov
lahf
and
imul
push
sahf
sahf
sub
scas
and
sbbl
dec
push
adc
ss
push
inc
fdivr
fdivr
inc
popa
sub
popl
adc
pop
sbbb
call
sbb
jo
popa
aaa
cltd
jmp
mov
ret
pop
clc
sub
repnz
sbb
aas
dec
inc
mov
std
sahf
xor
mov
test
enter
out
pop
inc
int3
in
icebp
hlt
lods
ja
loope
cmp
mov
shrl
cmp
insl
icebp
sbb
mov
mov
xchg
sbb
lcall
jae
sub
decb
jnp
xor
lcall
dec
fstps
sub
xchg
test
add
adc
add
pop
push
ja
mov
cmp
xchg
enter
add
cmc
or
daa
mov
xchg
roll
dec
movsb
sbbb
insb
int3
mov
and
inc
fcmovne
and
jg
in
fcoms
push
inc
clc
add
cmpsb
cmp
push
push
cmp
add
mov
jae
out
fisubl
mov
pop
sarb
icebp
mov
push
das
xchg
adc
mov
xor
outsl
cmp
and
sub
lret
lock
push
mov
xchg
shrl
push
fs
pop
push
xor
lock
mov
into
jmp
add
divl
mov
xchg
cmp
subl
test
stos
cmp
or
scas
sub
aad
adc
fnstsw
jecxz
mov
xchg
stos
inc
xchg
movsb
mov
mov
enter
push
add
push
lods
pop
mov
lods
mov
jmp
jbe
js
fimull
scas
popa
add
or
sub
mov
aaa
stc
test
sub
adc
popf
adc
mov
int
pushf
xor
test
or
xor
lock
xchg
push
push
ljmp
pop
mov
jae
outsl
or
mov
sub
sbb
dec
hlt
arpl
and
es
daa
ret
push
shll
sarb
out
and
mov
adc
out
in
pusha
sahf
jns
clc
stc
mov
shl
lods
insl
imul
mov
outsb
add
xchg
xor
subb
push
mov
gs
push
push
jno
lods
and
jle
jle
sub
jo,pn
into
fwait
push
pushf
ret
repz
cs
arpl
stc
push
jl
xchg
dec
add
jecxz
addl
add
cli
sbb
mov
imul
fisttpl
jns
or
mov
shl
pop
xchg
repnz
cmp
push
xchg
jae
shlb
mov
mov
cmp
xor
push
inc
sarl
mov
cmp
into
lea
aad
mov
jge
cwtl
push
cltd
xchg
xchg
or
dec
mov
fldt
push
cmc
cmp
xchg
cmpsb
mov
and
inc
shrb
pop
push
sar
mov
jb
insb
mov
mov
int
icebp
mov
pop
into
fimuls
lret
scas
and
loopne
ds
xchg
add
in
pop
jo
popa
sbb
push
sub
push
cs
ljmp
sbb
es
push
xchg
ds
pop
nop
add
les
mov
cmpsb
mov
inc
lea
fdivl
aad
into
dec
pop
ljmp
test
cld
sbb
mov
pop
pop
out
or
xchg
mov
mov
test
mov
test
mov
mov
or
or
aad
movsb
pushf
mov
xchg
add
repnz
push
popa
pop
rolb
out
dec
mov
mov
xor
ljmp
cltd
cmpb
pop
push
mov
sub
bswap
push
jle
lods
cs
mov
xor
sub
lea
popa
or
rol
jo
or
scas
clc
in
sbb
pop
imul
fldenv
adc
mov
lds
pop
xor
je
jnp
imull
jle
jp
lret
and
mov
scas
add
popf
std
dec
add
adc
in
dec
xchg
or
daa
out
aas
stos
and
pop
fbld
xchg
out
xchg
je
imul
cmp
add
sub
mov
pop
sahf
mov
iret
pop
cmp
jge
mov
cwtl
push
ljmp
xchg
mov
mov
loop
dec
je
inc
ficomps
jb
mov
in
lahf
or
xor
fadd
lret
stos
sub
xor
arpl
popf
sbb
dec
iret
inc
and
adc
jno
push
jp
mov
mov
push
mov
jnp
and
cmpsl
sbb
pop
jb
push
in
or
bound
leave
jp
push
push
stos
addl
dec
mov
insb
scas
push
xor
pushf
mov
or
sti
xchg
icebp
icebp
int
push
or
arpl
wrmsr
or
dec
ds
sub
ss
push
mov
sbb
int3
sub
jns
mov
pushf
dec
jb
ret
inc
and
daa
adc
mov
xchg
add
stos
xchg
dec
mov
push
jecxz
lds
outsl
je
dec
pop
xchg
xchg
testb
shll
push
int3
jb
cmpsl
mov
es
xchg
add
sti
imul
fnsave
or
fbstp
mov
push
out
push
jle
icebp
out
outsb
insl
cld
jle
int3
scas
sbb
test
adc
in
adc
inc
dec
shlb
push
adc
aad
lahf
push
mov
pop
std
or
xor
xor
sub
mov
enter
loopne
sarb
add
in
xor
fists
pusha
ret
testb
mov
repz
pop
cmp
sub
mov
fildl
shl
mov
xor
mov
inc
std
sub
and
adc
push
inc
cld
cmpsl
xor
adc
xor
fs
xchg
xchg
sub
imul
popa
push
jno
test
and
jp
daa
mov
xchg
ficoms
push
add
loop
adc
mov
inc
jl
scas
sbb
ror
enter
push
push
or
pop
cmc
push
pop
jp
mov
sbb
xor
cmc
movsb
mov
mov
push
jnp
xchg
pop
jecxz
pop
enter
jb
dec
push
inc
dec
aam
adc
jne
insl
jecxz
xchg
scas
out
insl
jmp
pop
ss
mov
push
mov
push
hlt
addr16
sti
xchg
sub
outsb
adc
pusha
hlt
out
mov
xlat
outsb
clc
sub
test
cmc
adc
cmpsb
call
ljmp
push
push
mov
jg
loope
or
mov
push
cld
outsl
cmp
adc
sti
mov
je
push
jle
mov
fstps
adc
mov
daa
and
stos
jg
cs
xchg
cmp
jnp
or
jl
jmp
xchg
mov
jns
popa
mov
xchg
mov
faddl
std
push
scas
into
ja
mov
push
lds
ds
hlt
xor
scas
ljmp
imul
push
lds
xor
mull
add
cmp
out
lods
ljmp
movsb
xor
jb
das
outsl
push
popa
push
push
ljmp
call
xor
ffreep
aam
sbb
mulb
leave
mov
addr16
arpl
pushf
push
out
pop
and
popf
cmp
pop
insl
cli
fnsave
mov
mov
add
xor
call
dec
push
int3
mov
mov
mov
fsubrs
out
xchg
ja
stos
ljmp
call
sahf
inc
js
inc
stos
jmp
leave
fldcw
mov
mov
adc
mov
mov
sbb
mov
push
hlt
mov
insl
stos
pop
out
pop
clc
icebp
lea
xchg
lea
add
in
insb
mov
loopne
movsl
dec
popf
push
sbb
sub
xchg
sahf
jns
mov
cmc
in
xchg
xchg
pop
jecxz
push
adc
jae
mov
mov
pushf
xchg
repz
pop
xchg
push
dec
aad
cmp
or
cmpsb
xchg
xchg
addr16
in
js
lret
sbbl
push
cwtl
leave
into
sub
xchg
xor
and
sbb
add
scas
jge
add
dec
repnz
and
mov
xor
cmp
fisubl
xchg
lds
jmp
sbb
inc
in
into
cmc
or
decb
mov
dec
xchg
div
xchg
arpl
push
ds
xor
and
aas
cmp
push
push
jmp
imull
mov
pop
dec
inc
pop
cmpb
outsl
test
repnz
push
lock
cmpsl
lea
mov
stos
cmp
lea
out
xchg
adc
push
lea
frstor
jge
addr16
test
lret
repz
push
lods
xchg
mov
addps
stos
mov
sbb
jae
imul
mov
mov
jo
mov
and
and
xchg
fdivrl
or
int3
and
add
adc
rclb
ss
and
mov
mov
adc
inc
cmpsb
lock
mov
jns
jmp
sbb
pushf
mov
frstor
sub
adc
xor
sbb
ret
xor
pop
out
cs
xchg
adc
sbb
js
scas
add
inc
addr16
jne
nop
pop
test
pop
push
test
aas
test
push
cmp
lcall
mov
inc
sbb
and
push
fcomip
inc
mov
insl
adc
jne
xchg
fidivl
movsb
cmp
mov
jge
adc
dec
jo
ds
rcrl
cmc
jnp
pop
adc
sbb
jae
aam
mov
fldenv
xlat
mov
inc
push
xor
dec
pop
push
push
in
inc
mov
pop
sub
into
insl
sub
pop
lcall
cmp
lds
pop
adc
lcall
movsb
or
movsl
cs
xchg
scas
add
jge
jne
jmp
or
xchg
aaa
cmp
imul
dec
mov
sbb
test
mov
jbe
pop
push
inc
push
and
cmp
cmp
test
add
das
cltd
xor
sub
mov
js
xor
push
pushf
fstpl
cld
and
cmp
scas
inc
mov
mov
fs
push
sbb
fstpl
cmp
aaa
pop
dec
mov
pop
mov
ficompl
mov
repnz
cmp
cmp
roll
sbb
aaa
or
or
data16
stos
pop
ja
out
lcall
aas
imul
push
ljmp
lock
dec
xchg
sub
negb
mov
rorb
xor
and
or
mov
js
cmp
xchg
sti
lret
daa
mov
pop
push
mov
cmpsb
cmpsb
movsb
cmp
enter
scas
cmp
das
jb
sub
jno
mov
mov
loope
pop
xchg
push
jne
mov
xchg
sub
jl
inc
bound
add
inc
sbb
imull
mov
aad
dec
fnsave
inc
inc
mov
ret
pop
or
pop
push
sub
mov
ret
cmc
ss
mov
in
in
xchg
movsl
sub
ljmp
les
mul
out
and
jg
and
lods
leave
add
fisttpll
pop
shrb
in
sti
push
dec
or
jl
stc
enter
mov
xchg
inc
ss
test
xchg
sub
js
mov
xchg
sub
xchg
jmp
add
pop
lock
dec
and
pop
in
int
mov
ja
ret
fwait
imul
out
sbb
iret
push
popa
inc
fbstp
popf
cmc
insb
jmp
adcb
insb
pop
es
arpl
mov
ficoms
sbb
cmp
leave
add
clc
ljmp
dec
stc
shl
aaa
rclb
push
pop
clc
mov
sub
cs
cs
sub
fsts
or
cmp
push
aas
push
dec
aam
cmp
pop
adc
rcr
xor
mov
or
test
jbe
cmp
dec
loope
ljmp
addl
ficoml
fmul
pop
mov
lods
in
aaa
jbe
nop
xor
shrl
data16
mov
add
xor
cs
in
sub
cmp
dec
cmc
into
sbb
aad
mov
mov
jecxz
data16
loop
fs
cltd
push
cwtl
mov
ret
inc
push
or
fdivl
dec
sub
xorb
sbb
dec
mov
xlat
cmp
mov
iret
dec
ja
sbb
mov
xchg
mov
push
out
cld
mov
stc
repz
jge
stc
inc
loop
cmc
dec
stos
out
mov
and
cmp
xor
cs
iret
addr16
rcll
jbe
loop
sbb
lcall
mov
popa
pop
lods
es
ficoms
loope
jns
cmp
in
xchg
xlat
mov
xor
cmp
aad
repz
cmp
sarl
lods
jns
cmp
outsl
mov
stos
pop
or
xor
pop
mov
xchg
fcmovnu
dec
out
inc
dec
test
mov
mov
xlat
dec
push
mov
es
xchg
push
mov
mov
xchg
mov
idivl
jnp
pop
xchg
xlat
movl
pop
sbb
es
adc
xorl
cmp
dec
pop
icebp
inc
dec
dec
hlt
negb
aad
clc
and
call
cld
cltd
mov
mov
mov
inc
scas
push
xchg
stos
xchg
adc
lcall
cltd
mov
mov
push
sub
movsl
dec
and
ljmp
xchg
in
push
int
push
int
jo
sub
iret
mulb
scas
jb
cmp
js
push
arpl
out
sbb
in
insb
or
mov
mov
mov
mov
insb
out
ljmp
xchg
cmp
push
jl
lahf
xor
jne
xor
mov
arpl
jbe
imul
mov
mov
notl
mov
movsl
add
fistl
dec
push
jae
jmp
push
and
mov
lcall
lds
test
int3
sub
es
mov
int
cmp
xchg
andl
pop
cmpsl
in
cmp
adc
cmc
jle
and
push
movsb
xchg
sbb
dec
leave
jno
popf
mov
push
aaa
nop
dec
push
mov
sbb
lret
cmp
testl
mov
pop
test
inc
aas
or
jmp
aad
movb
clc
cwtl
sahf
xor
cwtl
mov
mov
fs
or
jge
es
in
push
xchg
outsl
mov
xchg
leave
jp
sub
loope
sub
mov
cmp
ret
outsb
push
popf
xor
lcall
cli
dec
xchg
mov
es
push
adc
aam
sahf
mov
pop
xchg
dec
gs
jo
mov
sub
adc
dec
aas
shl
leave
pusha
call
mov
pusha
insb
mov
add
xor
ja
mov
inc
std
loope
lock
mov
rorl
cmp
stos
and
xor
jno
test
inc
sbb
jmp
jae
jo
outsb
xchg
and
add
std
xchg
dec
fcoml
scas
addr16
cmp
fcmovnbe
insl
or
mov
push
shll
xchg
push
pop
mov
enter
mov
fstl
adc
sbb
add
divb
ss
pushl
inc
in
sbb
mov
movsl
mov
mov
sbbb
xlat
jle
hlt
andl
mov
or
and
testb
push
adc
inc
cmp
outsb
add
mov
jecxz
imul
cmp
insl
jae
or
sbb
dec
mov
and
lret
lcall
or
ja
mov
fmull
lret
inc
lds
adc
jp
add
out
dec
out
push
loopne
cmp
adc
pop
pop
decl
jnp
sbbl
jecxz
sub
add
lahf
cwtl
test
sti
mov
stos
dec
out
rcrl
jl
mov
rcrl
xor
lret
and
adc
inc
sbb
mov
sub
xchg
das
jp
js
stos
rolb
xchg
popa
mov
add
push
icebp
je
adc
ljmp
xchg
lret
add
jnp
jno
cmp
gs
mov
mov
pop
clc
push
pop
fcomps
aad
mov
popf
mov
sbb
ja
jg
movsl
movsb
sub
jnp
cmpsl
lods
rol
insb
mov
inc
adc
daa
inc
xor
gs
push
mov
or
mov
xlat
lds
or
xchg
pusha
mov
lahf
test
mov
test
stc
xchg
pusha
jns
in
jnp
push
test
dec
cmp
dec
fbld
out
popa
sbb
inc
push
test
stos
adc
xchg
dec
cmp
xchg
mov
daa
cmp
add
inc
mov
dec
mov
push
fbstp
mov
xchg
jmp
repz
dec
or
cmc
lret
fs
movsb
ja
inc
aam
icebp
jae
ljmp
push
aad
push
pop
jb
inc
mov
stc
push
xchg
push
shlb
pusha
addb
ret
xchg
jle
pop
mov
push
jne
or
int3
add
ds
sti
and
ljmp
imul
cmp
dec
aaa
into
mov
ficoml
xchg
jg
cmp
fisttps
adc
sbb
and
xlat
dec
add
jnp
cmc
xchg
adc
fwait
xor
gs
sbb
inc
push
insl
jnp
ret
pop
pushf
jno
jmp
and
insb
adc
imul
test
and
or
push
or
stos
jno
ss
sub
outsb
scas
es
sahf
sub
les
shl
xor
lret
incl
jno
ffree
int
fwait
xor
daa
mov
push
insl
mov
add
cs
mov
dec
cld
jae
xchg
ds
neg
lea
loopne
push
gs
inc
pop
cmpsl
cld
sbb
cmp
mov
andb
lods
jae
out
inc
mov
jae
inc
pop
cltd
jbe
mov
mov
test
xlat
and
push
sub
add
mov
mov
je
pop
sbb
fwait
repnz
mov
sbb
mov
ret
lds
test
fcomps
lock
cli
adc
in
pop
add
mov
movsb
cmp
sbbl
scas
push
pop
das
mov
adcb
xchg
and
stc
ficoml
pop
fs
ja
inc
pop
repz
pop
outsb
lret
adc
mov
aad
push
add
cmp
and
inc
ds
push
cltd
pop
xchg
aas
mov
lea
cmpsl
xor
or
mov
fidivs
push
addr16
add
shlb
fistpll
push
ja
in
xor
mov
pop
dec
addr16
cmp
notb
adc
pop
repz
mov
lahf
jb
xchg
add
lock
nop
frndint
fs
jno
es
stos
adc
bound
aad
mov
lods
cmp
out
mov
fisubl
aas
imul
dec
fdivrl
sti
push
bound
xlat
sbb
xlat
inc
cmpsb
mov
lds
xor
adc
insb
js
icebp
pop
add
cmp
pop
ja
fsubrs
scas
loopne
addr16
scas
fwait
mov
inc
sbb
and
sti
lock
popf
stc
fcompl
lret
add
mov
out
cmp
push
lods
adc
mov
das
sbb
xchg
hlt
sub
dec
add
dec
push
sbb
lods
imul
jno
js
push
push
lcall
push
inc
movsb
and
test
test
xchg
repz
lock
and
test
sbb
sbb
push
adc
ja
shrl
mov
dec
fldl
xchg
gs
lret
sbb
pop
mov
sub
pop
xchg
push
mov
add
lock
jmp
jbe
jmp
jle
sub
sub
sbbl
inc
outsb
and
xor
jbe
popa
gs
xlat
sti
in
ja
hlt
inc
push
fdivs
enter
or
mov
iret
xlat
pop
in
popl
sub
sub
pop
mov
push
cmpsb
inc
mov
xlat
adc
add
jnp
xchg
push
das
xchg
xor
scas
cltd
std
test
aaa
fldenv
and
pushl
push
cld
popl
jmp
mov
dec
sbb
mov
int
pop
cmp
push
ss
outsb
in
fsubrs
or
mov
jb
inc
popf
popa
inc
push
jb
mov
or
imul
lret
orb
fsts
xchg
xchg
lds
and
ja
lret
sub
or
ljmp
popa
cmp
or
test
jmp
in
xchg
in
xchg
sbb
outsl
add
lahf
xor
fs
pushf
cmpsb
cmpsb
js
mov
pushf
dec
mov
cvtdq2ps
iret
mov
sbb
jmp
fistl
pop
mov
mov
jecxz
stos
jo
aas
xchg
shrl
out
sub
stos
add
add
adc
mov
adc
outsb
cwtl
and
mov
push
inc
xchg
mov
addr16
out
cmp
push
lcall
adc
jb
jmp
xchg
scas
dec
dec
adc
pop
lahf
inc
sahf
adc
out
lret
sbb
repz
stc
test
inc
adc
iret
cmp
or
mov
inc
cmp
cmp
pushf
push
adc
jmp
repz
add
or
cmpsl
push
ficompl
iret
adc
push
jb
in
pop
movsldup
std
repz
sub
pop
ret
pop
jle
cmp
idivb
subb
popf
lea
int
push
cmc
imul
sbb
jno
dec
sbbl
out
lcall
mov
fdivl
xchg
dec
loope
sub
sbb
test
xchg
aas
imul
mov
xchg
rclb
popf
push
arpl
fidivrs
push
shr
rcl
mov
repz
movsb
push
ja
icebp
mov
mov
rolb
loop
imul
fsubs
and
pop
mov
add
push
out
das
jl
stc
mov
movsb
cmp
decb
in
ret
sub
xrelease
or
sub
xchg
or
sbb
aad
cmpsb
in
dec
ret
outsb
mov
push
outsl
cmpb
test
mov
xor
scas
push
imul
iret
ljmp
loopne
cwtl
push
mov
iret
jno
jnp
gs
mov
js
sub
movsb
pop
movaps
lret
push
lret
mov
mov
pushf
mov
lods
cmpsl
push
sub
test
sbb
jnp
adc
jnp
add
inc
push
xor
xor
or
dec
push
sbb
or
push
xor
xor
pop
xchg
out
xor
xor
inc
pop
lods
test
das
dec
cmp
pop
into
enter
movntq
pop
fimull
push
mov
scas
xchg
sub
lahf
subl
push
or
lahf
ss
push
and
xchg
inc
inc
popfw
add
fsts
test
inc
repz
inc
push
dec
add
les
cli
jae
ds
inc
xchg
inc
stc
adc
stc
fld
divl
cli
push
lods
jmp
or
add
lcall
add
cmp
mov
xchg
imul
movb
xor
xor
lock
int3
fiadds
sbb
dec
into
jb
int3
lahf
ss
xchg
clc
push
pusha
rcll
mov
jle
xchg
sbb
pop
addr16
imul
mov
adc
mov
jecxz
inc
cmp
pop
lds
xlat
pop
cmpsl
fiadds
push
rorl
cmp
jecxz
or
test
and
mov
jae
adc
mov
mov
loope
xor
mov
test
adc
ret
xor
mov
xorl
loope
frstor
add
adc
push
fbstp
jae
mov
popa
mov
inc
pop
ror
pop
gs
or
sub
inc
mov
daa
in
mov
call
shlb
movhlps
inc
icebp
push
pmulhw
inc
jg
inc
sub
shlb
xor
pushf
lods
rcll
mov
fsub
sbb
ds
cmp
xchg
sub
jb
cli
dec
mov
push
pop
in
imul
sub
sub
inc
ret
adc
sbb
push
cmpsl
jp
push
or
cmp
cmp
test
adc
into
mov
clc
mov
xor
sub
pop
mov
pop
sahf
adc
jecxz
xor
cli
dec
hlt
inc
mov
std
push
xor
mov
mov
ret
pop
xchg
dec
mov
inc
cmp
jo
jmp
cmp
or
repz
cmp
idiv
xlat
outsb
out
add
fucomi
cmp
mov
pop
sahf
xor
in
add
nop
out
jb
inc
out
or
lahf
mov
sbb
mov
lds
divl
inc
out
ljmp
ja
inc
mov
cwtl
shrl
imull
fisubrl
cmpsl
lret
sub
xlat
pop
adc
add
mov
out
mov
fcom
add
testl
push
aam
sbb
loop
or
popa
pop
ds
aam
add
enter
push
loop
sbb
pop
push
pop
pop
repnz
ds
cmp
fisubs
mov
jo
lahf
mov
loopne
sahf
and
sarb
and
xchg
fdivs
and
adc
and
test
inc
lock
mov
mov
add
jl
sbb
inc
arpl
subl
xchg
in
das
inc
into
mov
bound
shrl
sbb
pop
xor
sbb
inc
mov
cld
decb
fimull
stos
movups
xor
pushf
bound
clc
pop
stos
ljmp
or
sarl
ja
out
sub
dec
cmp
stos
or
stc
cmp
inc
bound
sub
mov
push
imul
rcll
ss
movsb
icebp
xor
popf
mov
les
outsb
repnz
pop
cmpsl
adc
imul
add
pop
adc
leave
fcmovbe
push
scas
aaa
mov
jg
shl
bound
lret
rep
xor
push
call
cmp
xchg
insl
js
adc
mov
lcall
dec
and
popf
ret
aas
aaa
loop
imul
jo
mov
pop
and
loope
cmp
push
mov
into
mov
fcomip
xchg
xlat
mov
mov
pop
hlt
pop
dec
andb
jl
jp
out
fmuls
insl
cmp
push
jo
push
cmp
gs
mov
pop
jmp
pop
scas
std
imul
adc
mov
xor
jno
sahf
fists
sarb
mov
cwtl
lods
fsubr
std
dec
in
ficomps
cmc
dec
inc
mov
ds
inc
xchg
push
push
pop
push
push
inc
ffreep
cmpsb
push
adc
sbb
lret
mov
iret
sbb
popf
dec
inc
sbb
adc
cltd
push
sub
inc
aad
pusha
negl
call
adc
inc
je
int3
sub
cmp
pop
cmp
pop
xor
or
mov
jae
adc
not
sub
loope
dec
filds
in
scas
fnstenv
in
inc
pop
xchg
jno
or
jge
pop
mov
push
jo
loope
inc
das
jg
scas
cwtl
sub
jmp
xor
cmp
pop
fnstsw
xchg
aas
fs
add
outsl
xchg
popf
daa
mov
mov
inc
inc
jns
into
gs
mov
jne
xor
add
sarl
cmp
out
xchg
sbb
or
mov
jno
push
add
adcl
sbb
jb
iret
cmp
scas
and
cli
jne
xor
pop
or
adc
dec
fdivrl
lahf
test
test
je
and
scas
push
int
and
inc
arpl
lods
ss
fiadds
pop
test
push
and
xorb
movsb
lret
clc
and
or
push
shrb
jo
mov
imul
loope
jl
subb
and
cltd
cmpsl
push
mov
adc
mov
frstor
mov
cli
and
mov
aam
nop
xlat
xchg
sub
imul
mov
push
out
add
jmp
stc
jo
cmp
pcmpgtb
mov
sbb
xchg
outsb
popf
in
adc
insb
orb
inc
ss
movsb
mov
sbb
scas
repnz
push
shr
aaa
int
outsb
jp
mov
or
mov
add
mov
xchg
imul
out
pop
cmpsl
or
mov
adc
xchg
cmp
insb
in
push
jge
incl
adc
sbb
faddl
fisubrl
aad
into
cmp
jge
dec
pop
shl
in
test
sub
inc
out
rolb
aad
ljmp
scas
leave
dec
jns
push
incb
test
cmp
pop
sub
mov
push
rcr
repz
and
data16
adc
and
iret
pop
call
repz
add
adc
mov
in
jle
push
cltd
popf
mov
sbb
stc
aaa
pop
pop
jg
cmp
xchg
add
loop
pop
mov
pop
test
jle
aam
mov
sub
repz
mov
lcall
sub
sub
jno
push
and
xchg
mov
in
int
push
pop
mov
shll
dec
fs
vpmacsdd
xor
sbb
jnp
mov
adc
rcll
insb
mov
arpl
mov
jb
mov
cld
loopne
inc
cmp
call
test
or
jne
pop
jne
lret
mov
mov
mov
test
push
or
imul
mov
xchg
in
dec
pop
sahf
daa
cwtl
stos
pop
adc
pop
mov
dec
nop
and
rcrl
imul
sub
mov
xor
xchg
jecxz,pt
inc
sbb
cmp
fcmovb
dec
repnz
mov
loope
in
mov
lret
mov
iret
sub
sbbl
adc
sti
cmp
sbb
ljmp
mov
xor
push
jle
inc
push
xchg
mov
sahf
outsb
mov
lods
inc
pushf
xor
and
sub
cmc
mov
cld
pop
xor
divps
mov
pop
ds
lods
xchg
cmpsb
cmp
mov
fidivrl
mov
test
std
loop
push
fwait
adc
loopne
ljmp
repnz
xchg
in
pop
jns
fdivs
and
sbb
fiadds
add
sub
inc
fwait
mov
push
fsubrl
inc
cmp
push
subb
pop
and
pop
lahf
xlat
jbe
and
std
test
insl
and
pop
mov
cmp
pop
in
ret
mov
and
adc
mov
fwait
xor
mov
mov
out
xor
sub
mov
adc
popa
jns
adc
pop
jmp
pop
xchg
int
call
pop
pop
and
insb
dec
mov
frstor
pop
shrb
in
jl
into
mov
repz
out
lret
and
lock
jecxz
sbb
push
mov
lret
data16
xchg
in
push
mov
mov
nop
outsb
or
pop
imul
or
hlt
xchg
add
jbe
xchg
sub
sbb
arpl
sub
mov
adc
jle
pop
rorb
adc
push
dec
cmpsl
and
fisubrs
xchg
clc
int
movsb
out
sbb
frndint
adc
push
and
jg
es
push
xor
lock
mov
je
jl
xchg
push
ds
mov
lods
into
dec
mov
js
ret
mov
packssdw
cwtl
xor
jecxz
ss
inc
cmp
jo
lea
xchg
mov
xchg
jp
inc
jo
fs
cwtl
jno
xchg
cwtl
sub
sbb
mov
xchg
jmp
lcall
cwtl
das
bound
hlt
rclb
and
sbb
addr16
in
repz
rol
jecxz
mov
add
mov
jo
insl
jnp
sbb
sub
mov
ss
data16
mov
mov
sti
xchg
and
fidivs
and
pop
adc
outsl
push
add
and
cli
adc
cmpsl
sbb
sub
sub
cli
cmc
mov
sub
loopne
dec
and
cmp
rcr
pushf
ret
push
push
ret
jp
loopne
gs
mov
push
mov
mov
ljmp
push
incl
fucomi
xor
add
dec
roll
pop
jecxz
out
int3
add
xor
ja
mov
lret
sub
cmp
dec
iret
pop
dec
mov
or
mov
sbb
xlat
mov
addr16
push
out
inc
mov
in
test
loopne
fldt
into
inc
dec
lahf
lea
into
mov
movsb
dec
loope
lret
outsb
insl
scas
dec
dec
rorl
mov
mov
dec
divl
sarl
adc
and
stos
inc
in
loopne
dec
clc
sar
sti
inc
fldt
dec
mov
inc
mov
insb
loopne
ret
add
es
cs
sub
push
dec
notl
jp
jecxz
and
mov
loope
nop
pop
push
xchg
xchg
movsl
push
mov
daa
or
inc
fnstcw
js
push
call
jnp
insl
push
jecxz
ds
cmpsl
cmc
mov
mov
add
and
shlb
fsubl
cmc
inc
cmp
jae
ret
pop
xor
into
iret
xchg
loope
out
jno
inc
shl
xchg
jbe
pop
pop
popa
jns
cmpl
jns
test
popa
test
mov
jl
in
out
and
in
stc
icebp
loop
adc
sbb
xchg
add
add
xor
mov
cltd
in
loope
xchg
lock
rolb
and
scas
push
xor
arpl
mov
icebp
cmp
xchg
enter
cmp
push
mov
test
jo
call
sub
mov
mov
jmp
or
stos
push
pushf
xor
cmp
push
push
lret
add
ds
fdivrl
add
insl
fdivl
ljmp
xlat
push
sub
cmp
and
add
daa
mov
into
lds
loop
addr16
stc
subl
scas
test
or
pop
xor
loope
enter
and
testl
cmpsl
fsubrl
das
mov
fcompl
mov
mov
gs
dec
orl
jb
inc
pop
aaa
inc
pushf
fnsave
jne
and
pop
mov
inc
inc
out
rcrb
adc
push
mov
sbbb
and
lds
mov
adc
lock
xchg
hlt
insb
jbe
stos
sub
pop
or
dec
cmp
xor
dec
aaa
int
cli
shrb
xchg
push
enter
mov
or
dec
cmp
dec
cmp
sbb
sub
test
sub
aam
imul
dec
mov
sbb
repnz
dec
dec
pop
dec
int3
adc
add
imul
lds
lcall
gs
ds
iret
outsl
dec
mov
mov
divb
inc
aaa
xchg
cmp
mov
or
pop
dec
dec
sub
xor
pop
add
data16
fadds
inc
into
imull
push
sub
pop
verw
cmp
sahf
or
call
lahf
mov
fcompl
adc
xor
add
fcmovu
mov
sub
xchg
aaa
inc
xchg
pop
fimull
push
stc
nop
mov
test
mov
lret
cwtl
mov
mov
push
in
test
mov
mov
cmpsb
call
addl
or
and
cmp
push
adc
mulb
jecxz
xlat
jmp
jb
cs
pop
fstpl
cmp
dec
loopne
lock
in
push
pshufw
addr16
jl
sbb
fdivrl
add
aas
inc
ja
jbe
jne
mov
call
mov
icebp
loop
inc
fcompl
pop
sbb
in
stos
inc
pop
bound
cmpl
test
jmp
sahf
outsb
fs
adc
xchg
mov
fcompl
icebp
xchg
and
and
into
xchg
clc
sahf
stos
inc
fistps
loope
aas
push
out
jb
popa
cli
xchg
push
and
cmc
inc
cld
lret
or
std
ffree
sbb
mov
mov
mov
mov
int
pop
shl
push
mov
ret
cmp
jp
pop
mov
lret
sti
xor
mov
xchg
cmp
sub
sbb
push
mov
dec
dec
rcrb
sti
push
inc
sar
adc
dec
sub
out
pop
ja
cmpsl
dec
mov
push
dec
xchg
cmp
hlt
ret
mov
jge
mov
jo
push
mov
pop
pop
addr16
jae
cs
test
sbb
mov
mov
lcall
push
push
test
je
jns
loope
pop
adc
cmpsl
cli
iret
push
lods
mov
addb
lds
add
inc
xchg
jl
pop
sub
int
ss
fidivrs
pop
push
incb
inc
imul
leave
shlb
sbb
into
xor
mov
mov
lret
jne
pop
or
cmpsl
popa
leave
fdivrs
and
loope
add
and
xchg
xor
adc
mov
lahf
fadds
mov
dec
loope
in
adc
je
push
inc
in
sub
cmpsl
hlt
dec
xor
adc
shlb
sub
repz
jo,pn
jbe
loopne
jb
pusha
mov
xchg
sub
cltd
fidivrl
popa
add
cli
cmp
out
shlb
imul
push
sub
xchg
in
xchg
push
fnsave
add
lods
test
sbb
pushf
rolb
je
fwait
movsl
out
jae
les
mov
popf
xchg
push
inc
pushf
jb
addr16
inc
push
stc
xor
inc
repnz
add
jns
test
pop
jg
out
xchg
mov
sub
sub
pop
sbb
inc
popf
not
cmp
xlat
rol
les
insl
enter
mov
and
popl
cmpsl
push
or
lea
sbb
and
out
jnp
jno
pop
test
push
jmp
imulb
ret
outsl
pushf
sub
mov
mov
inc
int
lret
adc
jo
das
daa
ret
pop
pop
dec
ds
scas
inc
fnstenv
iret
mov
push
stos
psadbw
or
jns
inc
sub
xchg
pusha
and
adc
stos
push
add
xchg
pop
dec
mov
sub
insb
and
and
xor
jns
outsl
aad
pop
add
mov
xor
mov
pop
cmp
mov
cld
icebp
dec
dec
pop
and
cld
sub
ds
or
xor
mov
pop
xor
out
loop
xchg
in
out
rcrb
mov
popf
in
fwait
daa
sbb
repz
or
test
in
ja
addr16
push
les
leave
xor
pop
imul
loope
ds
andl
sub
dec
loopne
mov
aam
fbld
std
xor
mov
inc
sbb
subb
cmp
dec
push
loop
mov
pusha
dec
int3
xchg
sbb
add
scas
fcompl
sbb
cmc
push
push
mov
xor
xchg
out
inc
pop
and
cmp
pop
cmp
xor
mov
test
fs
lcall
out
out
lock
adc
test
mov
pop
mov
shr
fisubrl
dec
data16
arpl
arpl
xchg
pop
hlt
cs
cmp
ja
inc
inc
jae
xchg
cwtl
lds
lds
shll
xchg
jb
loope
mov
inc
mov
ret
in
test
dec
int
and
lea
push
inc
adc
mov
push
xchg
and
mov
cmp
inc
jg
push
icebp
mov
add
mov
rcrl
mov
lahf
or
sub
mov
loopne
leave
pop
lcall
mul
addr16
mov
fs
push
les
addl
sub
test
das
addr16
jnp
mov
inc
sti
push
jl
xor
in
push
les
outsb
std
sbbb
lret
pop
lods
lock
gs
xor
cli
adc
jmp
jae
cmp
cmc
or
dec
xchg
push
ret
dec
bound
mov
or
xchg
xor
pop
xor
insl
mov
mov
dec
jo
nop
pop
idivb
mulb
jecxz
arpl
imulb
test
in
jmp
nop
cmp
loop
stc
inc
or
cmp
jb
jne
xor
cmpl
pop
sbb
sub
lock
pop
aam
out
pop
sub
mov
lods
int3
insb
sub
jae
jns
jmp
add
jno
lock
aad
jg
push
out
aad
cwtl
and
xchg
cmc
add
ds
dec
call
sbb
call
out
lods
pushf
pop
lret
test
leave
inc
out
in
arpl
dec
dec
mov
lret
popf
mov
adc
mov
jp
jbe
shlb
xchg
lret
lret
dec
icebp
into
push
arpl
mov
mov
jne
outsb
das
jb
pop
ds
inc
dec
shll
jl
sbb
pop
xchg
add
pop
fldlg2
jl
mov
sbb
or
xchg
iret
adc
push
ret
fs
jp
mov
lds
rcrl
dec
cmp
imul
fildl
sub
pop
pop
in
dec
neg
enter
shrl
jmp
xor
push
add
daa
mov
pop
scas
inc
mov
out
pmuludq
mov
jp
push
cmpl
icebp
repz
add
rcl
sbb
cmpsl
inc
push
and
lret
stos
sar
into
push
dec
loope
xchg
dec
je
cmp
call
sbb
dec
push
mov
out
sub
sti
cmpsl
sub
testl
out
in
push
cwtl
sub
sub
out
pop
sahf
adc
mov
fbstp
je
push
movsl
jp
aad
outsb
inc
sbb
fwait
pop
repz
int
cmp
scas
pop
and
push
add
push
inc
orb
stos
or
add
ja
jg
js
or
xor
mov
xor
xor
orb
into
push
xchg
jne
fnsave
jp
pop
imul
shll
mov
cmp
imul
mov
pop
ror
sbb
pop
mov
jp
test
pushf
insb
add
pop
jp
mov
clc
insl
add
sbb
inc
and
jp
cmp
push
sahf
in
xchg
lds
repz
mov
pusha
sub
out
stos
jmp
ret
adc
jo
push
std
pop
jb
lret
push
shrl
repnz
jno
jge
es
out
pop
in
inc
iret
or
add
push
fsubr
push
lods
pop
mov
insb
jl
mov
sbb
mov
cmpsl
leave
movsb
test
or
or
daa
movsl
pop
and
outsb
je
jo
jmp
pop
cltd
fidivrs
mov
fs
fnstsw
popa
mov
lods
ljmp
fbstp
push
mov
pusha
aas
dec
arpl
orb
mov
or
xor
sbb
testb
stc
popa
sbb
push
aaa
fidivl
test
or
test
add
test
movsb
lds
push
mov
xor
imul
sub
mov
or
pop
push
fcoms
xchg
pop
cmp
mov
repz
ds
push
in
mov
movsb
jge
cmp
push
lea
pop
iret
jp
aas
mov
mov
xchg
sub
mov
pop
mov
insb
inc
push
mov
push
sbb
addr16
outsl
xchg
push
add
or
lds
ss
faddl
daa
adc
xor
imul
sbb
arpl
mov
idivl
orl
adc
fwait
xor
movntq
out
lahf
mov
out
pop
cmp
mov
mov
movsl
and
and
lods
clc
xchg
loope
int
pop
call
pop
pop
mov
mov
jle
and
jecxz
arpl
lcall
mov
jecxz
mov
xchg
imul
or
out
mov
add
xor
mov
imul
or
lea
push
ss
ljmpw
lret
fsubl
mov
shr
ret
fbstp
jne
fldcw
adc
push
mov
imul
outsl
loope
shl
cmp
add
inc
loop
push
sub
fmuls
shlb
fucom
push
dec
pop
push
lahf
aaa
xor
lods
popa
jns
xchg
cli
mov
popa
out
mov
mov
jmp
mov
fwait
test
dec
shll
adc
ficoml
pop
jne
add
push
jl
adc
in
mov
fs
cli
aas
mov
mov
push
fcmovu
in
loope
sub
jecxz
mov
adc
in
adcl
inc
push
cmpsl
ss
jns
imul
fistpll
rcl
or
mov
pop
jno
push
aaa
mov
fbstp
jmp
adc
xor
mov
rolb
mov
xchg
cwtl
jp
add
xor
or
or
jmp
ds
mov
inc
fsubrl
adc
mov
aam
push
inc
xchg
push
imul
sub
aas
repnz
push
or
call
outsl
xor
adc
stos
jg
dec
es
or
ror
inc
test
int
cli
movsl
rcrb
mov
sbb
inc
cmp
out
leave
mov
adc
nop
sbb
add
insl
jge
xchg
fstpt
jecxz
shrb
sbb
and
and
aam
aam
mov
adc
cmp
dec
push
out
jne
cmpsb
std
sbb
fs
int
adc
fiaddl
loopne
ds
inc
xlat
sub
fldl
and
test
js
mov
loopne
dec
push
pop
sti
xchg
daa
mov
jmp
sbb
cmp
in
mov
fidivs
flds
outsb
sub
push
scas
xor
enter
shrb
adc
xor
mov
inc
outsb
insl
aas
sahf
dec
ret
rorb
adc
jo
xchg
out
mov
in
enter
inc
or
fsubrs
cmp
add
mov
xor
das
test
fcoms
test
testl
gs
mov
push
and
push
in
lods
in
test
pop
mov
int3
add
sub
jecxz
movsb
daa
loope
or
mov
je
mov
mov
lret
icebp
cmp
lcall
in
sbbl
out
mov
push
fnsave
mov
enter
add
dec
cmp
popf
popa
mov
cmpsl
stc
jae
mov
shlb
aas
push
das
xlat
sbb
sbb
dec
scas
sub
mov
jg
dec
pop
hlt
jns
inc
add
adc
and
sub
faddl
enter
das
or
push
mov
jmp
and
dec
int
aad
cld
push
mov
cmpsl
jp
fcmove
fimuls
shl
inc
mov
fldt
dec
int3
dec
or
jno
jle
adc
inc
jmp
xor
pop
addr16
inc
cmpsb
lods
mov
outsl
mov
mov
cmp
adc
mov
fistpl
into
or
lock
aad
enter
cmp
pop
mov
scas
je
mov
movsb
adc
lret
push
aas
jmp
in
sbb
ret
mov
fbld
push
sub
mov
pop
adc
pop
outsb
iret
dec
jmp
push
rcl
into
subl
sbb
or
pop
push
pop
aas
imul
outsl
std
iret
repnz
les
sub
leave
dec
adc
scas
sbb
int3
roll
push
loop
lds
sahf
adc
push
jne
hlt
stc
out
dec
inc
lods
clc
jecxz
add
xchg
sbb
into
cli
pop
in
mov
fwait
test
clc
in
call
iret
push
xchg
add
jl
aad
ss
daa
mov
stos
out
cmpsl
cmp
or
inc
popf
inc
rorb
imul
pop
cmpsl
js
cmp
pusha
pop
stos
jg
mov
push
and
aaa
fucomp
loopne
fnstenv
lods
pop
mov
es
add
and
shlb
dec
mov
sbb
shrb
xor
mov
je
and
roll
in
cmpsb
adc
xlat
pusha
lods
cmp
fidivrl
mull
les
hlt
adc
gs
jno
push
scas
test
ds
mov
dec
lea
mov
dec
scas
pop
les
and
mov
mov
scas
mov
jo
xorl
in
jo
add
push
mov
out
jae
cmp
cli
sbb
inc
ja
cld
ret
xor
pushf
jns
pop
jmp
xchg
cwtl
xor
rorb
scas
inc
mov
ss
sbb
loop
push
in
or
jne
in
fnstenv
pop
gs
lret
push
inc
push
xchg
push
cmp
sahf
xor
lods
sub
pop
dec
in
sbb
lds
negb
add
mov
mov
shrl
dec
mov
lods
sbb
push
das
data16
fidivl
mov
popa
in
jbe
cmp
insl
lcall
xchg
cmp
mov
sub
fdivrl
push
insb
bound
leave
sub
movsb
mov
cmp
xor
mov
sahf
sub
and
int
or
jbe
sti
mov
pop
sbb
in
arpl
ss
mov
jl
pop
pop
dec
cmp
mov
push
icebp
sahf
mov
mov
or
pop
lcall
xor
and
push
popl
xor
xor
dec
push
cltd
testb
xchg
cmp
xor
xchg
cmp
jbe
ljmp
mov
testl
dec
adc
adc
insb
imul
call
out
lds
push
fdivr
xchg
test
inc
mov
jge
out
xor
lcall
in
outsl
daa
mov
fdivrl
cwtl
sub
shrl
dec
sub
popa
jns
sbb
or
sub
in
xor
int3
add
cmpsb
js
xor
sbb
dec
xor
dec
mov
out
xor
dec
mov
add
mov
sbb
pushf
jle
dec
pop
adc
scas
jmp
lea
dec
mov
sti
pop
add
sbb
out
fmull
push
pop
cmpb
inc
push
cmpsb
add
add
imulb
sbb
int3
jg
xchg
sti
or
and
rorb
cld
adc
enter
fisubrl
mov
mov
adcl
pushf
movsb
shr
cmp
push
dec
jle
je
or
stos
clc
inc
sub
inc
dec
addb
fwait
or
lea
lods
mov
in
xor
cmc
fwait
icebp
sbb
mov
cwtl
xor
lahf
cmp
pop
mov
xchg
lcall
ja
movsb
loop
popl
out
fisubs
popf
cltd
test
push
push
mov
cmp
test
andnps
jge
test
loopne
push
jae
jge
loop
cmpsb
pop
sbb
dec
push
cld
lcall
sbb
stc
into
push
push
xor
mov
mov
add
inc
call
in
das
repnz
mov
sarb
inc
jne
sub
int3
push
pop
leave
mov
lret
push
test
enter
inc
inc
dec
push
ljmp
lock
repnz
data16
test
orl
jl
add
mov
lods
xor
cmp
scas
cmp
mov
xchg
pop
out
sti
mov
fldl
xchg
outsl
pusha
jecxz
nop
sbb
cwtl
add
lock
pop
mov
mov
lock
or
je
arpl
mov
mov
mov
dec
movsl
cmp
loope
mov
jno
mov
jl
mov
imul
out
inc
cmp
in
aad
inc
gs
sahf
push
lahf
stos
adcl
sbb
popf
lcall
or
cmp
dec
pop
sbb
stos
sub
jle
nop
aaa
dec
scas
insb
jne
movsl
scas
jb
adc
push
and
insb
inc
pmulhuw
fisubs
mov
in
mov
mov
xor
push
adc
fcompl
in
arpl
ljmp
dec
jnp
sbb
mov
sbb
clc
les
repz
inc
inc
xchg
aam
mov
sub
push
sbb
jnp
test
mov
push
adc
and
call
call
pop
bound
mov
les
and
daa
xchg
loopne
loop
cmc
addr16
mov
inc
sbbl
aaa
or
icebp
mov
out
mov
or
fisubs
daa
jnp
popa
call
pop
push
jmp
int
push
repnz
push
int
xor
in
inc
fcomp
mov
rolb
incl
cli
adc
mov
hlt
adc
sbbw
leave
movsb
in
test
adc
push
jg
mov
push
mov
les
mov
daa
notb
mov
popa
lds
rcl
ja
mov
or
dec
sbb
imul
cmpsb
add
call
add
mov
fdivrs
pusha
ror
fwait
sub
addr16
aam
xor
ja
pop
sub
aaa
sbb
push
fidivrs
adc
dec
pop
testl
inc
dec
mov
fbld
aam
mov
test
dec
out
jns
mov
inc
adc
xchg
adc
jnp
or
arpl
pop
movsl
push
aaa
stc
sbb
fsubs
cmp
mov
cmp
rcrl
mov
ljmp
lret
or
or
jmp
and
js
lret
hlt
jno
adc
sbb
push
sbb
mov
stc
and
jb
and
xchg
xor
cmp
xchg
jle
fisubl
stos
pop
repz
jp
adc
pop
divb
mov
pop
enter
cmpl
cmp
xor
xor
ljmp
imul
push
into
mov
adc
xor
ficomps
push
scas
xchg
add
call
jg
insb
push
test
das
add
insl
dec
sti
cmp
addb
scas
xchg
mov
popl
or
or
or
subb
add
std
mov
xchg
pushf
sub
xchg
cs
scas
mov
inc
cmp
clc
popf
addr16
push
xchg
cmc
ret
mov
fwait
je
pop
fs
dec
lock
arpl
mov
adc
int3
jg
imul
push
sub
and
cltd
arpl
jnp
ret
pop
dec
xlat
pop
out
divb
aam
push
inc
out
dec
in
jns
jmp
call
lea
lahf
mov
xor
sbb
inc
fdivl
fiadds
pop
ja
das
push
xchg
lods
inc
lds
mov
jb
sarl
mov
repnz
push
adc
ret
xchg
es
fnsave
pop
pop
popf
xor
mov
mov
testb
stos
mov
shr
js
jmp
push
mov
pop
lds
into
imul
mov
jb
mov
imul
popfw
std
cmp
lcall
and
xlat
jae
aam
push
sbb
out
xchg
adc
and
xlat
inc
test
push
lds
mov
mov
mov
pop
inc
mov
je
mov
mov
int3
arpl
sbb
cmc
push
pop
jecxz
addr16
inc
aam
mov
cmpl
aad
les
cmc
mov
jle
jae
sub
cmpsb
inc
fmuls
mov
ds
pop
insb
or
in
add
stos
inc
imull
mov
cmp
jge
jae
push
jae
mov
lds
hlt
adc
mov
jne
xchg
sub
push
xchg
stos
fisttpll
roll
out
mov
dec
push
inc
fbstp
push
jecxz
pop
arpl
pop
pop
pop
jbe
incb
in
das
iret
std
and
inc
pusha
and
mov
lods
and
sbb
shrb
push
mov
mov
fnstsw
sub
movsl
cli
fdivp
xchg
addr16
orb
xchg
mov
jl
call
inc
xlat
dec
sahf
xor
fstpl
pop
mov
repnz
xchg
add
repnz
aaa
add
add
in
popa
sahf
jno
cmc
cmpsb
mov
call
or
aaa
and
test
inc
in
jno
filds
into
gs
jg
ljmp
pop
push
adc
and
push
cltd
fstpt
push
hlt
pop
and
pop
dec
adc
or
add
imul
call
or
ljmp
mov
jno
ret
jmp
aam
push
lahf
xor
jbe
jne
pop
and
aam
popf
out
mov
pop
les
mov
out
jmp
popf
mov
adc
shlb
fsts
ljmp
push
jns
pop
js
xor
cmp
add
or
call
sar
push
addb
insb
enter
jmp
push
test
sub
lods
subb
sbb
mov
pcmpgtd
sti
adc
mov
mov
jp
cld
add
cmp
cmp
inc
out
ljmp
jne
mov
and
dec
add
clc
mov
imul
xor
jle
push
stos
notl
xchg
int
lret
inc
lock
xchg
xchg
xor
fistl
loope
adc
sbb
mov
push
dec
sub
jb
in
cli
jge
adc
xor
and
mov
icebp
ret
mov
jl
loope
pop
xor
aad
or
sub
loopne
cmc
popl
lret
mov
pop
test
sbb
jge
mov
xor
in
lret
lds
insb
std
test
xor
jmp
negb
fbstp
ljmp
cli
call
lods
dec
nop
mov
fistps
ljmp
pop
imul
push
test
sbb
out
int
fidivl
cmpsb
push
rol
xor
dec
cmpsb
xor
fildll
or
roll
jne
mov
lea
or
imul
dec
push
jmp
jmp
icebp
cmp
adc
or
fnsave
clc
push
test
sbb
lock
mov
ja
xchg
mov
xor
mov
outsb
lds
add
inc
gs
adc
dec
fwait
je
sbb
push
adc
mov
or
sbb
add
in
xor
push
lock
add
add
adc
popa
and
sbb
jl
sub
jge
repnz
out
mov
fwait
imul
and
push
rclb
mov
mov
xor
mov
add
mov
shlb
push
adc
push
ljmp
scas
mov
insb
xor
mov
xor
cmpsb
icebp
dec
mov
pop
rcrl
aad
push
loope
mov
fildl
sbb
in
jmp
cli
push
ds
lods
fldcw
hlt
shlb
roll
rcrl
sub
addl
jo
ret
sbb
and
fsubrl
ja
sub
pop
mov
sarl
sbb
dec
pop
inc
sbb
inc
sub
in
fsubrs
repz
dec
lock
push
in
adc
mov
cltd
imul
scas
pop
pop
aaa
iret
add
dec
cmc
lcall
and
mov
icebp
data16
pop
pushf
xor
push
jl
add
mov
fmuls
dec
leave
mov
mov
out
add
xchg
imul
test
in
push
pop
xchg
lods
add
sbb
out
out
xchg
pop
xchg
adc
lcall
jae
xlat
outsl
inc
test
jae
add
shrb
loope
nop
mov
pop
xchg
mov
scas
out
add
fmuls
int
neg
test
es
je,pt
jl
xchg
aam
cltd
popf
mov
shr
and
loop
inc
xchg
and
dec
lock
push
das
cmp
mov
xchg
jp
jp
push
jae
mov
leave
sbb
cmp
in
mov
push
loope
ja
orl
dec
pop
ficoml
shl
aas
pop
cmpsb
add
adc
inc
xchg
push
adc
mov
xchg
stc
pop
sbb
scas
fidivrs
addl
ret
decb
push
jae
pop
fisttps
add
andl
imul
mov
pop
ret
movsb
pop
mov
pop
mov
xor
jmp
nop
punpckhbw
and
outsb
jo
jns
adc
push
rorl
std
push
mov
mov
and
leave
mov
cmp
js
cmp
stos
fdivr
in
aaa
push
fwait
push
lods
push
std
mov
or
push
sub
push
fidivrl
movsl
iret
das
inc
and
mov
clc
dec
inc
push
out
sbb
fcmovnu
inc
or
sbb
pop
inc
mov
inc
add
mov
fwait
mov
icebp
sahf
xor
in
into
ds
in
insl
or
pushf
pop
repz
rorl
insb
add
movsl
out
fnstenv
xchg
mov
loope
inc
push
in
pop
xchg
add
xor
add
xchg
stc
push
jge
mov
mov
jmp
cmpsb
mov
cmp
test
jle
or
adc
fcomi
push
or
jno
jbe
pushf
scas
mov
xor
mov
arpl
fdivp
adc
adc
jb
jg
ds
jp
fwait
std
js
ret
dec
xchg
xchg
outsl
out
mov
inc
cmp
andl
fsubrs
mulb
scas
mov
in
dec
loopne
xchg
shll
cmpsb
push
inc
mov
mov
sub
mov
scas
pop
xor
pop
pop
cli
and
mov
fldenv
cmp
mov
add
test
addb
outsl
xchg
psubusb
jae
fs
data16
in
cwtl
push
and
mov
xor
sbb
mov
imul
adc
daa
mov
in
scas
mov
rclb
insl
mov
xor
dec
jbe
popf
mov
sub
mov
les
jle
cmpb
dec
clc
sahf
adc
mov
mov
mov
and
fxam
ret
mov
stc
stc
je
jbe
sbb
and
lock
ljmp
cmpb
pop
std
xchg
xor
and
popa
bound
cld
mov
jnp
xchg
stos
out
int3
sbb
xchg
pop
pop
std
test
cmp
adc
sub
lock
lret
lcall
movsl
call
xchg
sub
push
insb
test
sub
fisttpl
dec
fdiv
add
inc
dec
in
lock
out
push
jb
das
jno
jbe
loope
dec
rorb
shll
or
xor
dec
mov
lea
mov
in
sub
sbb
cwtl
push
out
inc
mov
jne
pop
sar
mov
adc
nop
outsb
or
cwtl
addl
inc
movsl
pop
or
push
push
add
mov
push
pop
std
mov
mov
cwtl
nop
ljmp
inc
pop
pop
div
xchg
mov
in
add
pusha
push
and
rol
sub
addr16
push
je
cmpsl
test
imul
xorl
pop
jae
es
scas
inc
call
xor
pusha
clc
xchg
aam
loope
mov
jl
nop
pop
aad
push
outsl
into
mov
outsb
inc
adc
imul
add
mov
jle
lret
movsb
xchg
push
shlb
xor
xor
push
xchg
inc
xlat
mov
out
insb
aam
movsl
das
push
scas
pop
mov
or
test
insb
cltd
in
push
lret
dec
inc
mov
xchg
or
pusha
movsl
sub
jo
jge
add
test
sub
mov
nop
mov
mov
call
mov
lods
loop
jae
roll
test
jb
clc
fwait
pop
push
inc
fstps
push
inc
cmp
cld
mov
sar
aad
push
fildl
jae
outsl
in
mov
jno
and
dec
cmp
add
enter
xor
mov
xchg
xor
add
aas
in
jmp
mov
cmp
mov
shrl
test
lods
aad
mov
sbb
cmp
cld
scas
inc
jle
insl
mov
mov
and
pop
cli
out
subb
dec
add
hlt
cmpsb
mov
test
out
popf
inc
cmp
pop
outsb
gs
rolb
pop
dec
push
adc
add
xchg
sbb
icebp
insl
lret
jbe
das
ja
stc
mov
jno
push
cmp
add
add
or
or
insb
jp
inc
inc
fnstenv
xchg
add
fistpll
sahf
in
mov
mov
sub
into
lea
lcall
or
aaa
test
push
cmpsb
cli
xchg
call
xor
lods
jle
dec
mov
cmp
jnp
out
cs
loop
mov
cmp
pop
or
in
lcall
loop
movsb
mov
outsb
mov
aaa
outsb
add
mov
daa
filds
loop
sbb
dec
fs
sub
inc
lahf
popl
es
fstpl
jo
stc
nop
mov
jnp
dec
add
dec
dec
arpl
mov
pop
mov
loopne
and
xchg
movsl
cld
inc
mov
cmovp
mov
shrb
roll
call
lea
jle
shlb
sbb
pop
xor
int
mov
insl
inc
push
push
xchg
inc
jo
imull
sub
pop
icebp
int3
and
popa
push
xor
das
aam
adc
mov
inc
negb
int3
mov
xor
ja
mov
shl
icebp
push
inc
lret
push
pop
mov
daa
fdivl
shl
inc
daa
incl
xchg
rorb
dec
orb
cmp
dec
jo
mov
fildll
popa
push
imul
enter
mov
mov
enter
sub
loope
jb
sbbl
add
pusha
enter
or
jge
rcl
out
mov
add
xchg
xor
aad
lock
sub
in
cmp
mov
add
mov
adc
jno
push
inc
fsubrp
fs
add
and
ja
inc
sub
lret
outsb
mov
lea
mull
mov
sbb
xor
cmc
js
mov
inc
hlt
mov
lret
push
imul
or
les
add
add
inc
adc
mov
mov
sbb
bound
imul
in
cltd
dec
adc
inc
std
or
and
jmp
ja
js
xchg
lods
popf
fisttps
xchg
fistpll
push
dec
dec
pop
mov
cmp
stc
ret
outsb
leave
xor
mov
lahf
lret
xlat
jno
xchg
jae
imul
jo
xchg
pop
jo
shll
pop
mov
mulb
cmpsb
in
xchg
mov
jp
je
subl
in
pop
lahf
sub
mov
xchg
insl
jo
sahf
mov
xchg
ljmp
arpl
and
lcall
dec
or
adc
mov
mov
jo
imul
dec
es
xlat
cli
xchg
cmp
mov
cmp
mov
or
fisubrl
dec
sbb
dec
push
xor
loop
js
xchg
mov
cli
ja
jmp
dec
fs
jle
push
test
dec
sub
sbbl
nop
movsb
in
pusha
adc
fdivs
loop
dec
into
jmp
and
pop
divl
ja
jb
cmpsl
fwait
mov
out
cld
out
xlat
mov
jns
lret
jae
cmc
xchg
push
fcompl
clc
and
xor
mov
clc
cmp
aad
dec
mov
cmpsb
arpl
pop
cmp
xchg
lock
sub
fiaddl
mov
stos
test
ds
iret
cs
jg
shll
mov
lret
sahf
ds
lret
add
add
mov
mov
sbb
mov
icebp
out
andb
ret
add
stos
shll
mov
fists
dec
fcoml
shr
test
data16
push
out
cmp
lods
mov
outsb
filds
lret
jae
testb
xlat
xchg
lds
out
addr16
nop
mov
mov
xor
movsl
bound
rol
jne
insb
mov
test
mov
int3
ja
addr16
adc
jnp
mov
in
pushf
cmp
cltd
xor
push
push
popf
cmp
and
cmp
mov
jmp
inc
popf
add
add
enter
sub
cwtl
mov
mov
jno
pop
sahf
inc
sbb
aam
adc
sbb
and
shrl
xchg
enter
cmp
pop
mov
pop
pop
or
xchg
add
les
cmp
les
insl
lea
hlt
addr16
or
sarl
lahf
push
psubsb
scas
push
shll
and
inc
insb
jl
xchg
std
mov
push
jl
dec
push
mov
mov
shrb
xchg
adc
mov
jbe
fnstsw
shrb
or
adc
stos
aaa
rorl
cwtl
inc
leave
cwtl
and
fiadds
fsubr
fiadds
mov
cltd
push
sub
imul
mov
lds
mov
adcl
psadbw
cmp
xlat
jne
or
dec
adc
addr16
movsl
adc
cmpl
mov
push
outsl
scas
enter
stc
aam
lcall
mov
aam
pop
pop
clc
sub
sub
xchg
mov
into
test
jns
push
icebp
fistpll
push
stos
in
repz
add
insl
mov
adc
or
mov
cltd
inc
loop
push
ljmp
jno
outsl
pop
xchg
int3
jg
adc
inc
cmp
out
rcrl
mov
lods
sbb
rcll
push
lds
jne
push
fwait
cmp
aaa
insb
mov
jmp
push
mov
lcall
pop
shrb
push
pop
pop
in
dec
filds
pop
repnz
cmp
gs
jae
test
sub
mov
in
sbb
add
sub
mov
cmpl
mov
jmp
jl
adc
imul
aaa
dec
cltd
xor
push
push
sub
mov
mov
sub
mov
pusha
adc
mov
sub
push
mov
cli
push
jae
jo
jo
or
xor
lock
xchg
xor
adc
mov
popa
fidivs
jl
pusha
daa
ret
pop
inc
out
push
xchg
xchg
add
mov
adc
xor
imul
pop
in
stos
jp
sbb
js
movsb
jo
fyl2x
adc
sub
push
fsubrl
or
pop
xchg
sub
testl
insb
cli
pushf
les
pusha
aad
out
push
xchg
repz
cmpsb
adc
mov
jmp
push
outsl
repz
clc
lock
push
add
xchg
mov
out
les
in
adc
das
hlt
pop
push
push
mov
ds
daa
cli
es
or
gs
mov
insl
xor
sbb
sub
dec
mov
pop
addl
xchg
sbb
rcrl
adc
jg
sbb
xor
cmpsb
adc
cwtl
pop
es
push
in
jns
ss
xchg
test
enter
movsb
sbb
sbb
cld
push
in
sbb
cli
arpl
sahf
lret
pop
xchg
call
inc
or
scas
aaa
scas
add
sbb
push
shl
mov
push
cmpsl
pop
sahf
or
pushl
or
inc
lods
xchg
iret
jne
cmc
adc
and
fwait
cmpsl
sbbl
or
xchg
mov
sbb
lods
mov
push
int3
test
jne
cli
or
jnp
test
imul
loope
pop
xchg
popf
aam
rcr
dec
lahf
ss
push
add
and
sub
enter
jbe
in
jg
adc
jbe
mov
add
cmc
adc
mov
push
aad
dec
outsb
shl
pop
xor
insb
add
ret
mov
mov
in
negl
and
jb
ficomps
pop
xor
mov
dec
mov
ret
xchg
jne
aad
in
dec
add
xlat
shlb
lahf
xchg
sub
out
add
and
mov
enter
icebp
int3
push
andb
mov
push
gs
mov
lret
je
cmc
xchg
lahf
push
outsl
push
insb
cld
fpatan
lret
test
mov
fildll
int3
or
cmpsl
jnp
fnstenv
add
and
fimull
lea
hlt
or
jo
mov
mov
mov
ss
fwait
inc
clc
jae
das
fs
int3
mov
pop
repnz
xchg
xchg
mov
clc
aad
pusha
and
xchg
or
daa
cmp
aam
arpl
mov
add
push
loop
popa
push
inc
shll
push
shlb
push
push
cmpsb
lea
cwtl
pop
cmp
pushf
jmp
ljmp
int
test
icebp
jle
push
jbe
jnp
dec
stos
pop
mov
and
sti
les
sbb
cld
sbb
stos
mov
repz
cwtl
je
pop
xor
lcall
xchg
test
jecxz
out
scas
mov
fsubrs
stos
or
divl
mov
lods
shrb
ret
push
xchg
das
mov
enter
xor
addb
fbstp
fimull
xchg
inc
mov
pop
adc
and
xor
or
mov
xor
and
clc
xchg
xor
sbb
push
jnp
pop
inc
aad
mov
in
jae
fnsave
sub
mov
xor
or
dec
sub
xchg
add
ds
jmp
andb
pop
pop
dec
ja
ret
pop
gs
enter
imul
shlb
sbb
fldt
push
push
cmp
dec
mov
lcall
pop
sub
insl
inc
mov
shrb
mov
sub
js
cmc
and
or
lock
sbb
cli
js
push
adc
mov
adcb
mov
in
or
sahf
addl
dec
rolb
or
notb
das
cmp
pop
ret
dec
dec
dec
mov
push
inc
mov
inc
pop
mov
test
fsubl
mov
js
jl
jge
adc
mov
outsl
popf
add
notb
mov
push
add
jle
sub
lahf
fsubr
pusha
aaa
test
aam
mov
inc
cld
cwtl
lds
or
xchg
scas
paddd
xor
in
or
xchg
scas
dec
pusha
ljmp
add
aad
mov
xor
and
cmp
pop
test
ret
popa
incb
stos
pusha
ja
adc
cwtl
mov
test
scas
pop
out
ja
jno
ss
mov
lahf
jp
mov
mov
xlat
inc
push
dec
rcrl
xchg
adc
repz
mov
dec
adc
inc
mov
sub
sub
mov
cmc
les
scas
movsb
mov
in
pop
sbbb
sub
arpl
fld
jno
dec
rcrb
push
int3
arpl
mov
pop
out
fsubrp
dec
fsubr
scas
xchg
xchg
sub
enter
in
push
test
jmp
dec
add
ror
adc
jbe
pop
cwtl
pushf
cmp
imull
jl
and
je
cld
pop
insl
pop
pop
sbb
testl
sub
ds
icebp
aaa
push
or
jge
into
out
add
xor
out
inc
fsub
adcl
pop
fs
mov
ja
inc
aad
cmp
xor
shrb
in
insb
inc
fwait
cld
xchg
sub
fdivs
dec
movsb
mov
addr16
push
stos
xchg
out
sbb
push
mov
xchg
cld
pop
shlb
in
mov
or
enter
push
mov
inc
cwtl
movsb
ja
ss
leave
add
xchg
sub
xchg
cmp
bound
lahf
dec
icebp
mov
lods
imul
and
icebp
dec
sarl
add
lods
mov
fnstenv
stc
arpl
test
push
and
out
jg
cmp
out
pop
xchg
fldenv
mov
fld
mov
sub
and
ss
dec
mov
xchg
movsb
into
mov
cs
in
imul
add
insl
add
or
adc
sbb
sbb
push
cwtl
stos
leave
push
jle
mov
mov
or
sbb
sub
cwtl
lret
in
xor
or
stos
push
jmp
mov
and
std
stos
adc
mov
cmp
scas
add
xchg
cmp
and
out
lods
push
test
icebp
or
jge
mov
jge
lock
or
ffreep
push
sbb
lahf
jp
jnp
jmp
push
aad
shlb
mov
lods
scas
aam
lcall
fs
adc
mov
mov
lret
aam
int
push
xor
fs
movb
jno
stc
nop
ss
xchg
pop
push
pop
mulb
sub
dec
push
jmp
mov
ror
pusha
add
cmp
test
mov
jmp
scas
and
ljmp
les
inc
xlat
fwait
push
fnstenv
in
or
push
sub
loop
inc
mov
mov
sbb
aas
dec
es
lahf
ss
pop
mov
adc
push
mov
mov
cmp
dec
insb
sub
incb
xchg
dec
jg
cli
jne
adc
inc
std
les
shll
ds
add
insb
mov
ss
push
push
push
es
or
mov
scas
jmp
sbb
jmp
std
xchg
testb
xchg
mov
cmpsb
add
ret
icebp
jb
xor
fwait
xchg
int
aas
push
xchg
and
push
mov
xor
fildll
mov
jp
dec
push
sbb
test
frstor
or
lea
sbb
fwait
lret
sub
daa
fbstp
fwait
ds
int
in
aas
fwait
loope
aad
rorb
xor
cmp
dec
rclb
aaa
sbbl
pop
push
lods
jnp
mov
mov
xor
pop
xor
xchg
bound
ficoms
add
push
out
or
adc
sbb
dec
out
ror
cs
aas
dec
fisubrl
adc
mov
pop
pushf
xor
jle
sti
jle
mov
fdivrl
sbb
jnp
and
push
xchg
adc
dec
int3
arpl
dec
sbb
aam
cltd
das
bnd
imul
jp
mov
out
xchg
inc
lret
dec
cli
sub
pop
das
pop
lock
jle
jo
add
xchg
pushf
fldenv
push
aam
into
fnstsw
fiadds
fstl
and
outsb
inc
clc
pop
mov
inc
push
lret
ficompl
jp
push
adc
popf
sbb
xchg
enter
sbb
mov
fnsave
je
inc
stos
or
xchg
sbb
outsl
cmc
and
or
inc
push
push
xor
scas
push
fsubrl
cwtl
jns
jp
sub
fstpt
notb
mov
xchg
mov
jns
inc
fldl
mov
in
mov
ret
lcall
pop
repnz
dec
fcomip
dec
xchg
fstps
or
adc
mov
cmp
xor
das
mov
add
popa
and
mov
add
cmp
ret
mov
add
lock
cs
stos
cltd
pop
jmp
nop
lods
fcoml
inc
mov
je
and
pusha
scas
sub
xchg
adc
jnp
jb
dec
mov
or
stos
jns
xlat
jb
cmpsl
xor
adcb
sbb
xchg
test
mov
xchg
lahf
stos
pushf
mov
in
push
inc
cmpsb
mov
aam
xor
mov
in
xchg
inc
pop
jno
in
cmpsb
les
xchg
call
arpl
ds
push
leave
pop
fxch
aas
inc
shl
mov
jge
cwtl
mov
or
dec
popf
push
cmp
insb
pop
mov
adc
lahf
icebp
insb
push
and
in
jne
sub
stos
add
add
outsb
sti
mov
js
ficomps
or
fbstp
push
pop
imul
out
std
adc
dec
out
jbe
fwait
add
jns
int
sarb
mov
fidivrs
out
sahf
outsb
aad
mov
bsr
push
xchg
jnp
dec
cltd
outsb
jl
xor
xchg
and
shlb
jp
sbb
fstpt
call
or
xlat
mov
pop
in
jbe
push
cmpsb
lock
stos
sbb
push
xor
cmp
out
lock
jno
pop
mov
mov
push
pcmpgtb
arpl
mov
fs
sub
loopne
scas
adc
push
imul
pop
out
sbb
js
aaa
jne
test
xor
xchg
lret
add
ja
shrb
sbb
mov
adc
mov
fwait
sti
push
jmp
lahf
ret
mov
push
mov
push
pop
mov
mov
inc
push
push
inc
outsl
push
cld
cmp
addb
jno
mov
movsb
add
cmp
test
int3
mov
inc
fistpl
inc
in
cmpsb
push
xchg
inc
lods
repnz
aam
les
lea
mov
imul
shlb
dec
dec
cmc
les
orb
and
outsl
fsubrp
in
fs
mov
and
aas
dec
sub
lret
sub
ret
pop
inc
pop
arpl
jmp
enter
adc
dec
repnz
into
call
stos
jmp
add
mov
scas
or
cmp
dec
adc
loopne
jns
adc
cmp
pushf
inc
sahf
add
adc
sbb
xlat
inc
test
in
or
jmp
test
adc
pop
jo
nop
push
sub
xor
mov
cltd
jb
sbb
mov
xchg
outsb
lret
into
push
mov
mov
adc
cmp
out
push
sahf
mov
fisubl
push
test
cmp
out
push
cmp
ljmp
fstps
cs
jnp
dec
lods
mov
mov
mov
cmp
push
add
sub
mov
pop
jae
add
pop
xchg
jl
ret
outsl
pop
push
dec
pusha
cmpb
pop
push
lea
cld
lea
lock
js
imulb
adc
jae
sub
adc
popa
inc
arpl
mov
jns
push
sbbl
pusha
mov
xchg
mov
aam
stos
cmp
icebp
lcall
mov
adc
lret
outsl
in
ror
out
in
incb
lock
fs
inc
pushf
mov
sbb
int
mov
fsubs
and
lods
fisubs
shrl
fdiv
dec
pusha
insb
sub
pusha
dec
sbb
movsl
test
xor
push
stc
cmp
out
xchg
loop
add
adc
xorb
fwait
and
pop
jbe
lret
jb
and
sbb
push
inc
inc
jb
sti
iret
xchg
push
mov
gs
popf
adc
sub
adc
xchg
flds
sbb
dec
lods
xchg
jnp
xor
stos
mov
push
or
nop
fimuls
sub
lahf
jo
cld
pop
cmpsb
insl
sub
dec
sub
push
mov
lods
dec
sub
jmp
stos
mov
pop
xorb
icebp
sbb
fs
jnp
ss
pop
jns
orl
out
imul
mov
mov
push
repz
mov
jge
aas
popf
adc
cld
aad
pop
decl
shlb
inc
arpl
mov
mov
xor
orps
mov
ja
dec
out
cmp
jb
cli
mov
sbb
push
add
sub
jle
sti
mov
jne
and
dec
bound
xlat
fucomip
clc
jns
iret
pop
xchg
je
mov
popa
add
push
push
jbe
rclb
jp
lds
inc
inc
and
jmp
pusha
push
jnp
push
out
lods
pop
jbe
repnz
in
xlat
lock
inc
push
adc
dec
push
cli
push
mov
fsubl
and
aam
sbb
xchg
js
sahf
mov
xor
adc
mov
pushl
into
and
mov
jmp
test
push
xor
cmp
pop
cwtl
jno
mov
add
rcrb
rclb
and
xchg
pusha
xor
fwait
mov
stos
xchg
stc
gs
scas
stos
xor
push
add
sbb
dec
idivl
fimuls
int3
cld
cmp
pop
stos
outsb
test
mov
pop
inc
das
mov
mov
clc
sub
mov
or
or
jne
sbb
pop
in
xor
and
loop
or
bound
mov
loop
sbb
ds
cli
add
sahf
sbb
outsl
out
pop
orl
leave
pop
imul
push
clc
adcb
adc
ja
test
push
out
pushf
adc
dec
test
and
mov
jl
sbbb
cld
jle
mov
movsb
mov
xor
dec
sbb
int
push
jmp
mov
mov
jno
fsubr
ljmp
ret
scas
rolb
inc
push
mov
fs
scas
sub
subb
in
inc
lods
xchg
aaa
or
inc
fdivp
push
and
pushf
jb
das
pushf
or
nop
dec
or
mov
push
adcl
xlat
jl
std
push
imul
inc
inc
movsl
div
aaa
aad
fisubs
mov
jne
mov
test
mov
call
or
mov
and
inc
lock
in
push
fnstenv
out
ret
mov
insb
mov
movsl
mov
push
sub
test
mov
jae
out
lahf
xchg
lcall
out
add
inc
adc
loop
xchg
push
jg
data16
cmpsb
push
mov
aad
add
movsb
sub
stc
cmpsl
pop
push
inc
inc
inc
cltd
sbb
xchg
push
mov
clc
inc
ljmp
lret
js
loopne
aam
mov
dec
push
pop
push
cmc
mov
data16
fwait
push
leave
test
sub
out
pop
cmpsl
and
push
popa
xorl
fistl
adcb
fisubrs
out
jnp
and
xchg
push
mov
and
repnz
idivb
cmc
fisubrl
imul
and
clc
cld
in
cmpl
xchg
inc
clc
or
mov
jmp
mov
fstps
or
cmp
mov
adcb
push
sub
repnz
insb
std
testb
test
adc
scas
pushf
mov
pop
jle
sub
call
jge
fists
or
and
pop
ljmp
mov
out
jle
fimuls
lcall
aam
sbb
pop
jae
xchg
movsl
je
loop
shl
xchg
sub
mov
push
push
mov
loopne
pop
stc
loop
jecxz
popa
cmp
pop
je
xchg
sbb
insb
sbb
and
jae
push
les
lds
clc
push
mov
int
inc
cmp
or
jle
mov
out
ja
scas
jb
xchg
pop
loopne
mov
push
outsb
ljmp
pusha
mov
rorb
cmpsb
das
mov
inc
in
pop
mov
dec
in
xor
bound
xchg
sbb
sub
push
push
adc
add
lret
pop
idivb
subl
shll
or
jp
pop
mov
cmpsb
cld
dec
push
xchg
push
cmovns
aam
jae
mov
sbb
scas
mov
pop
jno
sub
je
ret
repz
imul
insl
out
xor
sbb
mov
cmpb
add
and
add
lods
inc
bound
adc
add
add
lock
cltd
bound
mov
inc
rcrb
dec
loop
ljmp
icebp
mov
inc
add
jle
xor
inc
xchg
fcmovu
dec
push
mov
mov
lcall
and
test
popa
ss
push
pop
mov
dec
cmpsb
arpl
xor
out
xor
inc
das
fs
loope
and
addb
xchg
mov
push
sbb
ret
cmpsl
sub
les
inc
inc
arpl
add
rclb
insb
idivl
cmp
mov
aam
pop
enter
add
jmp
inc
repz
fistl
mov
jne
clc
xorl
out
cmp
outsb
loope
xor
xchg
cmpsb
je
mov
iret
pop
out
xchg
mov
out
inc
jmp
adc
outsb
sbbb
mov
mulps
or
jbe
dec
lret
dec
stos
xchg
fsubrl
data16
cli
add
fwait
xor
sbb
repz
insb
sub
xorl
push
cs
pushl
jecxz
repz
out
xchg
push
mov
mov
jo
subb
daa
outsl
mov
aam
and
sbb
rorl
fs
push
imul
popf
daa
push
repz
or
ds
mov
dec
fnstenv
lods
pop
dec
loopne
scas
sarl
xchg
inc
pusha
imul
mov
data16
sbb
cmp
mov
loopne
pop
daa
jnp
or
ds
inc
test
imul
out
xchg
movsl
sahf
fbstp
ret
outsl
mov
stos
inc
pop
pop
sbb
sub
enter
mov
ss
push
out
xchg
push
xor
imul
sbb
fcomip
jg
sub
mov
mov
mov
or
es
inc
jmp
adc
jl
add
icebp
mov
mov
loopne
lret
fmull
dec
sbb
lods
pop
test
inc
mov
sub
xor
xchg
sub
mov
push
pop
mov
insb
cmp
xchg
jno
ja
adc
mov
ja
out
lock
or
sub
add
add
mov
aaa
mov
outsl
inc
push
jnp
jae
addr16
lret
repz
fs
xor
xchg
out
movsl
xchg
clc
fwait
add
clc
jo
push
inc
dec
daa
mov
int3
fstpl
mov
mov
pop
cmp
xchg
xchg
lcall
shlb
repz
and
or
dec
jns
push
jmp
xor
icebp
pusha
mov
sub
mov
mov
pop
cmp
mov
sub
neg
into
sbb
cld
into
mov
jae
jmp
rcll
cmpsl
test
push
or
cmp
adc
loope
pop
and
mov
outsl
push
push
push
dec
out
test
mov
into
xchg
incl
enter
dec
adc
insl
lretw
xchg
pushf
pushf
cs
and
cs
adc
sbb
and
scas
stos
fs
pminub
xchg
mov
mov
push
movsl
in
out
stos
dec
cmp
subb
ljmp
lcall
das
mov
ficomps
movsb
push
jp
mov
add
dec
orb
movsl
sbb
dec
in
fisttpl
clc
xor
std
push
adc
fildl
in
cmpl
push
fmuls
mov
and
xchg
fmul
sub
shlb
test
cmp
cmpsb
ds
or
repnz
dec
pusha
idivl
jbe
adc
pop
in
cmp
daa
inc
xchg
cmp
sub
mov
cltd
movsb
js
lret
js
jb
jg
cli
push
outsl
sbb
adc
and
xchg
jg
rcrl
and
push
imul
jns
mov
adcl
push
sbb
dec
xchg
les
loop
mov
mov
push
push
aam
inc
test
xor
inc
mov
push
ljmp
mov
mov
orl
in
cmp
sub
lods
in
pop
jmp
mov
push
add
jo
xor
arpl
pop
daa
mov
dec
jae
stos
shl
inc
inc
call
ss
out
insl
jmp
ljmp
arpl
cmpsl
xchg
push
jb
or
sub
jle
insb
fbstp
and
jno
movsb
dec
push
jbe
in
sub
mov
jl
dec
sbb
in
pop
or
gs
arpl
and
ja
add
test
sbb
ficomps
insb
out
mov
ss
dec
mov
clc
cltd
and
orl
dec
adc
leave
pusha
shll
clc
scas
and
jne
mov
insb
mov
mov
jbe
sub
pop
add
push
add
js
out
mov
mov
xor
js
xchg
mov
mov
mov
or
lea
pop
add
mov
jo
movsl
int3
arpl
mov
popf
xor
pop
and
add
push
into
shlb
sbb
mov
push
stc
cltd
ss
sbb
push
sbb
push
dec
sub
and
pop
push
aas
rorb
lcall
insl
sub
mov
out
test
xor
scas
or
fisttps
pushf
or
mov
jl
out
arpl
or
ficoml
jae
jno
jp
fbstp
push
in
jae
cmp
sbb
les
hlt
ret
push
ds
xchg
imul
jg
jmp
loope
sub
pusha
in
fadds
push
jl
cmp
mov
xchg
sub
pop
idivb
outsl
mov
inc
bound
rorl
jb
pop
push
stos
jmp
inc
sahf
lods
cmp
jecxz
test
pop
sarb
lcall
add
stos
cld
outsb
loope
jge
inc
cmp
clc
pop
mov
adc
or
jp
mov
ja
pop
lods
out
test
fcoml
add
andl
popf
sbb
fimuls
sub
jg
mov
stos
rcr
sarb
inc
adc
or
dec
pop
pushf
scas
inc
xchg
out
out
or
xchg
imul
sub
ret
int
xchg
jb
adcb
inc
leave
xor
das
and
and
dec
pop
das
xchg
xchg
and
das
addr16
int
js
cltd
and
test
or
movsl
daa
test
pop
into
jb
loopne
inc
shl
or
xor
inc
adc
mov
in
arpl
mov
negl
popa
mov
cmpsb
mov
add
cmp
push
mov
xchg
pop
jno
add
xchg
sub
push
xor
adc
cmc
cmp
jmp
mov
testl
aaa
lods
pop
repz
xor
popa
in
aam
jmp
fidivs
in
movsl
fldl
fstps
jns
sbb
cmp
imull
lahf
mul
dec
jg
out
or
xchg
cmp
mov
push
faddl
jge
out
test
fwait
sub
imul
fdivl
xlat
mov
mov
incl
adc
stos
lcall
mov
shll
mov
insl
call
lock
cmp
cmp
mov
jp
shlb
scas
adc
cmp
push
pop
scas
icebp
cmp
in
adc
or
jl
mov
je
mov
cmp
sarb
sbbl
shlb
pop
loope
mov
mov
repz
cmp
shr
pop
mov
mov
scas
fcoml
push
pop
sub
in
movsl
add
mov
dec
dec
dec
out
sub
jecxz
mov
shrb
imul
nop
mov
mov
mov
mov
ret
add
addr16
loop
outsb
add
rclb
adcl
les
ja
inc
loope
lcall
and
cmpsl
je
insl
xor
or
in
mov
ds
adc
jno
sbb
sub
rclb
stos
jmp
jae
inc
in
sarb
mov
cld
adc
je
jae
jno
clc
sbb
je
and
aaa
test
adc
xchg
lahf
adcb
fistps
iret
pop
push
jbe
ss
xor
mov
inc
mov
mov
push
movsl
test
jmp
mov
mov
data16
je
into
push
sbb
nop
mov
inc
fisubl
pop
jns
adc
data16
cltd
in
std
lret
jge
mov
cltd
and
xor
pusha
push
jmp
lods
cltd
stos
sarb
aas
and
jb
out
mov
jmp
adc
fnsave
sub
xchg
sub
lcall
add
aaa
push
in
call
or
adc
xor
shrl
mov
call
mov
idivl
int
sarb
roll
sub
cmpsl
pop
leave
pusha
dec
sarl
lods
push
loope
lods
xchg
cmp
or
mov
aas
push
test
inc
das
jo
sub
call
cmp
int
mov
lock
dec
fisubrl
shrl
inc
pop
dec
jns
mov
lds
adc
ret
notb
lods
mov
jl
sub
mov
push
mov
enter
mov
xor
inc
outsb
ljmp
test
sbb
sub
or
pop
mov
pop
fsubrs
jge
cmp
outsl
xchg
rcrl
pop
cmp
xor
push
cmp
in
in
mov
jno
into
pop
fists
sahf
jb
orb
cltd
mov
in
neg
in
cld
jmp
out
daa
cmp
dec
or
jb
sbbb
andb
push
or
in
jnp
mov
mov
or
sbb
pop
mov
push
lcall
pop
or
or
pop
mov
dec
xor
and
dec
adc
sbb
pushf
jle
not
ret
cmp
mov
pop
imul
shlb
add
add
push
es
inc
lods
adcl
sti
sbb
icebp
std
scas
xchg
pop
mov
sbb
xor
cmpsb
mov
dec
dec
sbb
stos
fs
lret
orb
sahf
inc
mov
dec
loopne
imul
pop
addr16
push
imul
hlt
aas
ficompl
mov
pop
outsb
andl
mov
rolb
loope
repnz
loopne
and
lret
sub
outsl
call
jge
sbbl
pop
sub
xor
inc
and
add
out
xchg
and
or
pop
stos
sbb
sahf
pop
popf
push
push
aas
aaa
jnp
lret
jne
sub
enter
or
rorl
dec
adc
scas
inc
xor
negb
jbe
cmp
push
pop
xor
sub
lods
add
push
push
pop
inc
js
js
push
out
mov
outsb
sbb
push
xchg
dec
cmp
std
lods
rcll
push
push
xchg
sub
push
test
cmp
arpl
test
imul
popf
faddl
sub
xor
xor
cld
push
push
cmp
xchg
sub
pop
dec
ficompl
push
lods
das
shlb
add
and
iret
inc
mov
jmp
pop
cs
dec
clc
stos
inc
sub
jns
push
jb
xor
cmc
inc
push
mov
or
das
push
mov
in
xchg
lods
dec
mov
xlat
mov
xchg
sub
fs
aad
mov
imul
leave
pop
mov
fnstenv
subl
add
lock
out
sbb
fsubrp
popf
cmp
mov
loope
sbb
and
je
mov
add
loope
and
push
pop
addl
hlt
mov
mov
cmpsb
or
int3
cmpsl
mov
out
xchg
add
test
addr16
pop
aam
xor
out
lahf
jp
pop
and
pop
out
testl
cmc
aaa
mov
dec
call
fstps
xchg
sti
daa
pop
push
xlat
insb
mov
or
lea
lret
mov
jbe
sbb
stc
push
xchg
sub
sbb
jo
pop
cmp
xchg
dec
out
sbb
cmp
and
and
xchg
cmpsl
adc
xor
aad
xchg
arpl
movsb
rcl
push
mov
jb
addb
sarb
pop
stos
inc
dec
cmp
sub
rcr
push
out
inc
jg
and
in
leave
mov
push
lahf
imul
ljmp
loope
js
leave
mov
movsb
pop
sbb
mov
loopne
or
and
cld
inc
inc
cs
mov
mov
xorb
call
xor
add
push
jmp
movsl
mov
dec
pop
mov
sbb
dec
mov
pushf
xor
call
or
insb
out
out
pop
fisubl
or
sbb
js
mov
dec
roll
daa
sbb
xchg
xchg
repnz
or
mov
and
das
inc
xor
icebp
xor
scas
mov
cmpl
scas
xor
jne
lret
in
sahf
roll
test
jns
cmc
das
es
push
push
adc
imul
lock
sti
ja
sub
movl
jo
add
lods
fcoml
icebp
mov
cmpsb
push
cmc
and
fbld
in
push
xor
and
add
mov
inc
xchg
popl
sub
inc
std
sub
jb
push
divb
repnz
psubusb
jbe
adc
add
mov
push
cmpsl
gs
aas
mov
loopne
and
jae
dec
popl
aas
adc
lahf
push
test
sbb
and
sub
lret
xchg
mov
cwtl
xor
jns
out
push
fcoms
push
dec
jecxz
xor
and
inc
add
dec
xchg
imul
pop
out
out
repz
dec
sbb
popa
insl
cmp
xor
xchg
out
inc
dec
mov
gs
scas
or
loop
cmp
dec
add
mov
jg
jle
ds
sub
mov
mov
lret
xchg
mov
enter
and
add
xorb
xor
into
mov
adc
idivb
out
mov
inc
jl
in
ret
inc
pop
xor
and
test
inc
call
adc
outsl
jnp
aaa
iret
loop
notb
cld
daa
inc
and
inc
lock
push
or
xor
sub
adc
call
shr
inc
push
mov
fs
stos
das
mov
lea
enter
sub
and
push
jmp
mov
out
push
cmp
cmpb
xchg
xchg
mov
adc
jbe
adc
cmovb
adc
js
mov
jne
cmpsl
jecxz
dec
sub
arpl
ss
test
pop
ficoml
jg
int3
int3
jecxz
into
cwtl
ficomps
add
mov
and
xchg
or
pop
mov
dec
cwtl
in
pop
arpl
dec
movsb
pushf
xchg
jns
push
test
ret
orl
xchg
adc
add
inc
movsl
and
cmp
inc
push
fcoms
scas
inc
dec
mov
cmp
cmpsb
cmp
inc
arpl
aaa
into
idiv
ss
sub
fwait
mov
iret
repnz
push
popf
add
daa
pop
je
loope
push
jmp
and
push
sub
clc
pop
das
insb
sbb
testl
sub
sbb
gs
mov
js
rcrb
xlat
sbb
sbbl
or
and
jb
mov
push
cmp
mov
jle
popf
icebp
cmp
roll
pop
push
or
cmp
movsb
mov
sbb
rcl
cmp
xchg
test
inc
dec
adc
add
mov
mov
enter
int
lfs
xchg
adc
xorl
jg
cmc
and
loop
inc
sbb
jge
inc
insb
lcall
fiaddl
shll
push
sbbl
push
and
inc
mov
add
mov
adc
ss
pusha
lds
push
in
imulb
cmpsl
push
cmp
leave
ret
cmc
lea
cmp
or
clc
jbe
lahf
int3
cld
lcall
xchg
out
roll
inc
mov
sub
lods
nop
cmp
xchg
push
cmpsb
fnstenv
aas
dec
sbb
cmp
aas
stos
mov
pop
and
push
lock
adc
push
jge
fcoml
pop
inc
loopne
sbb
push
add
into
cli
ret
std
mov
es
dec
mov
cli
jb
add
or
and
sahf
lret
int
inc
lock
jmp
stos
and
jae
inc
mov
adc
mov
xlat
or
cwtl
mov
imul
push
in
test
sbb
cmc
popl
adc
mov
cmp
adc
add
jns
dec
fwait
and
scas
stc
jl
out
xchg
subb
dec
push
out
jmp
mov
add
movsl
dec
pop
aaa
sbbb
addr16
cmp
mov
dec
mov
and
xchg
pop
dec
rcll
pop
mov
jne
cmpsl
in
pushf
enter
fs
pop
dec
mov
fwait
xor
jb
jns
dec
int3
arpl
adc
or
mov
lods
enter
jl
mov
cmp
mov
dec
pop
ret
pop
lret
cmp
mov
in
inc
mov
sub
cmp
stc
repz
cmpl
js
movsb
push
aad
mov
movsl
pop
pusha
xor
xchg
mov
push
mov
in
movsl
pop
sbb
imul
dec
repz
repnz
call
mov
stos
push
jne
jo
xlat
push
pop
xchg
pop
jns
sub
shrb
sti
and
insl
aam
push
mov
push
lods
pop
repnz
in
das
jg
loope
adc
add
dec
xor
mov
mov
lea
jno
scas
in
fistpll
push
mov
nop
or
call
lods
cmp
enter
movsl
ret
and
fildl
inc
idiv
add
mov
ljmp
out
xchg
sub
sub
inc
mov
pop
into
xchg
add
or
mov
add
and
push
dec
mov
adcl
sbb
pop
or
mov
cmp
rcl
fldl
aaa
lods
sahf
jns
pop
push
popf
scas
cwtl
andl
add
cltd
push
pop
adc
outsb
jl
xchg
mov
cmp
cs
jae
ja
stos
daa
xor
fs
lea
add
push
insl
xor
rorl
xchg
mov
push
push
in
test
scas
push
dec
mov
clc
mov
sub
mov
out
stos
lds
rcl
inc
pop
inc
pushf
sub
lahf
push
mov
add
mov
jecxz
add
stos
testb
pop
sbb
adc
mov
rcrb
sub
test
sahf
cmp
stos
adc
shrl
imul
and
xchg
ss
or
mov
pop
pop
fnsave
dec
orb
push
mov
mov
outsl
sub
or
pop
ret
cmpsb
out
js
xchg
sbb
in
xchg
repnz
inc
movsb
aas
fwait
fs
jns
xchg
mov
push
or
cltd
push
rorl
dec
jecxz
xlat
fstp
outsl
out
pop
leave
and
push
cmpsb
pop
shrl
jmp
sub
dec
or
sbb
mov
mov
fcoml
test
lods
mov
lea
mov
lret
ret
push
clc
mov
into
add
cmp
notl
lds
adc
mov
mov
sbb
sahf
addb
nop
jae
and
test
cmp
jne
daa
iret
mov
xchg
mov
lods
repz
popf
or
je
pop
cmpsb
and
mov
sbb
jne
and
cmp
and
leave
inc
push
fmull
add
cmp
push
xor
inc
hlt
cmp
dec
loop
sub
out
xchg
in
pop
mov
mov
inc
lock
xrelease
inc
into
cmp
dec
mov
outsl
in
hlt
adc
loop
lret
repz
jp
adc
sbb
rolb
das
mov
out
mov
std
sti
xchg
pop
adc
add
pop
jns
xchg
mov
cmp
loop
push
push
adc
pop
fs
and
adc
add
outsb
shlb
pop
arpl
mov
pop
es
ja
mov
lods
mov
jecxz
sub
subps
hlt
cmp
cwtl
cmp
fnstenv
outsl
outsb
jl
data16
test
cmp
movsl
or
and
sbb
insl
cld
das
push
popf
stos
sbb
mov
mov
movsb
int3
lret
sbb
daa
adc
inc
adc
jg
arpl
inc
imulb
push
and
push
push
sahf
adc
xchg
xchg
andb
push
push
addr16
stos
call
in
jle
xchg
loopne
pop
popf
fadds
jg
mov
iret
dec
scas
and
je
mov
cmp
shr
push
mov
pop
imul
and
inc
xor
and
sub
mov
xor
popf
lock
shr
xor
ret
or
out
mov
mov
out
daa
jno
or
nop
sbb
cmp
loopne
mov
adc
sti
ret
sahf
push
rcll
pop
arpl
and
inc
notb
jmp
loopne
lret
sbbl
jb
push
adc
inc
stos
jo
loopne
cmp
mov
dec
adc
and
out
ja
or
testb
addr16
and
fcompl
enter
ds
dec
cmp
scas
push
push
inc
inc
pop
roll
jmp
mov
fwait
mov
push
sahf
cld
andb
xor
xchg
mov
xor
cld
imul
mov
ljmp
test
faddp
xor
int3
mov
arpl
dec
adc
test
sub
mov
aaa
sbb
mov
fldz
mov
push
cmpsb
jp
or
outsl
pushf
testb
and
cmp
xchg
fsubrl
add
cmpsl
jo,pt
adc
cmp
inc
push
rolb
and
into
mov
rcrb
in
pop
cmp
sahf
shr
mov
popa
sbb
fucomi
xchg
push
ret
mov
inc
fidivl
outsl
mov
lds
aaa
xchg
add
xor
pop
pop
adc
adc
jge
mov
movsl
sbb
xlat
pop
ja
mov
jno
mov
push
es
sub
push
shrb
pop
jo
dec
lret
sbbl
cli
shll
inc
sbb
lock
je
loope
ja
ds
cmp
add
sub
add
add
adc
ja
int3
xor
xchg
xchg
and
std
sbb
sbb
cmp
inc
test
cmp
xlat
sbb
sti
pop
dec
mov
dec
ljmp
loope
cmp
pop
jno
push
mov
dec
fisubs
xor
adc
jnp
fsubrl
sbb
xor
js
or
aam
dec
pop
ret
and
stos
jns
cmp
adc
ret
adc
lcall
pop
insl
mov
pop
and
dec
push
mov
adc
or
xor
push
sub
fbld
adc
xlat
movsl
lea
sub
pop
in
ficoml
inc
cld
jecxz
xor
insb
mov
lods
enter
xchg
mov
ja
sbb
jbe
xor
xorl
je
loopne
clc
mov
scas
lcall
sbb
xor
cltd
add
xchg
cmpsb
xor
ds
icebp
shufps
ror
jmp
fucomp
out
aas
cmpl
pop
aam
mov
pushf
adcl
into
jo
iret
mov
and
sbb
xchg
jae
subb
dec
pop
lds
push
test
pop
dec
jo
sbb
cli
inc
notb
xchg
inc
add
shrb
push
or
loopne
and
aad
jecxz
out
in
dec
mov
lcall
jge
adc
sub
xor
dec
cmp
stos
jge
inc
cmp
call
outsb
lret
or
popl
push
add
test
jae
and
repz
dec
dec
dec
push
dec
mov
js
sub
es
imul
mov
js
inc
aas
inc
ficoms
adc
or
push
mov
mov
add
push
inc
mov
fldenv
jbe
or
xchg
xor
aas
push
ds
movsl
loopne
rorl
sbb
mov
jmp
cwtl
xchg
mov
into
enter
icebp
jnp
bound
push
bound
mov
and
sti
adc
movsl
mov
cwtl
aas
addl
cmp
fidivrl
stos
cmp
ds
or
cmp
movsl
gs
dec
and
mov
js
adc
ret
sub
rorl
pushf
fists
sahf
repnz
in
cmpsl
call
sub
sbb
scas
scas
mov
pop
inc
aad
out
ret
pop
imul
mov
inc
fsts
jmp
jne
fdivrp
jns
test
in
add
cltd
addb
mov
and
in
push
andb
aas
int3
xchg
gs
hlt
mov
inc
stc
mov
in
incb
or
jnp
mov
mov
dec
fcmove
jnp
adc
movsb
dec
mov
push
lret
and
stc
inc
push
in
jbe
jmp
dec
insl
jmp
sbb
mov
sbb
divb
jae
dec
jp
pop
jno
cmp
mov
mov
xchg
dec
cmp
mov
shrl
xor
popf
and
or
xchg
inc
mov
xor
and
mov
mov
cmp
push
ret
xor
dec
in
addb
sar
mov
pushf
pop
inc
inc
mov
xchg
sub
xor
sub
rclw
mov
cmpsl
add
sahf
ljmp
inc
sbb
or
roll
xor
test
xor
mov
ljmp
lret
cmp
imul
or
inc
mov
jbe
movsb
jg
jae
in
fisttps
pop
xchg
sub
in
jp
fldl
scas
sarb
push
mov
pop
rcl
les
arpl
sub
into
cmpsb
call
in
cld
push
dec
insl
jnp
xchg
aas
lock
rorb
inc
data16
mov
mov
ja
xor
and
fdivr
sti
jnp
enter
mov
andb
loopne
xchg
dec
iret
mov
jl
dec
hlt
hlt
mov
mov
out
sbb
lods
inc
lods
push
neg
popa
xor
push
scas
mov
xor
flds
and
or
test
cmp
outsb
sbb
mov
sbb
push
or
adc
jmp
imul
or
jo
dec
icebp
inc
pop
add
and
ret
xchg
xchg
mov
rorl
fistl
cmp
push
mov
in
push
icebp
mov
ljmp
pop
imul
stos
into
or
js
incl
repnz
jae
rep
dec
ret
loop
mov
jmp
jmp
or
xor
popa
pushf
addr16
mov
fidivl
mov
test
std
and
movsb
cmc
lahf
mov
sarb
movsb
stos
inc
push
andl
jno
push
and
into
fisubrl
sbb
xor
sbb
fdivrl
and
mov
filds
mov
outsl
add
ret
movsl
nop
out
leave
pop
mov
pop
es
int
fmul
aam
pop
shr
inc
dec
fsubrs
cmp
xchg
imul
adc
in
mov
out
cmp
call
cmp
ljmp
lods
out
or
jp
push
jp
icebp
idivl
sub
xchg
jp
into
add
negl
lahf
cmpb
adc
int3
mov
sahf
popf
push
jb
adc
nop
daa
in
ljmp
sbb
clc
adc
cmpb
pop
fildll
shll
jg
test
or
scas
sbbb
mov
sbb
xor
sti
adc
rclb
pusha
xchg
bound
sub
and
decb
fidivl
mov
sub
aas
or
mov
sub
dec
movsl
rolb
sbb
icebp
sub
iret
loopne
pop
popf
adc
stc
ret
dec
scas
push
push
push
jno
shlb
insb
pop
inc
xchg
jg
pusha
mov
in
jne
test
cli
pop
inc
dec
or
lret
popf
lods
sbb
mov
aam
mov
pop
mov
cli
xchg
push
pop
lret
je
xor
cmp
push
sbb
mov
xlat
not
outsl
adc
mov
and
jbe
movsb
orl
imul
sbb
clc
daa
aam
ficomps
sbb
lds
xchg
cs
xor
pop
cmp
sub
decl
cmp
xlat
push
xchg
outsb
iret
inc
push
mov
mov
shr
aad
jmp
xor
cli
cltd
call
mov
dec
shrb
adc
in
popa
fwait
pusha
mov
jno
add
pop
mov
repnz
outsl
ret
fdivrl
outsb
testb
mov
jno
sub
add
mov
scas
inc
cmp
pop
dec
push
aad
fs
leave
pop
stos
jae
jmp
outsb
je
jg
in
scas
lcall
mov
movsb
int
sbb
mov
mov
out
jae
lea
add
sbb
mov
aaa
xor
ja
shll
in
mov
or
out
cmp
sub
lods
dec
aam
pop
jl
fadds
loop
stc
lcall
scas
inc
loop
mov
fisubrs
push
add
cs
cmp
jg
popf
fsts
outsb
fwait
xchg
mov
jne
mov
cmp
ljmp
mov
mov
pop
dec
mov
scas
add
ljmp
mov
adc
inc
in
pop
out
sub
enter
xchg
mov
xchg
lcall
add
push
popf
cmp
test
pop
js
shrl
paddd
pop
ljmp
sub
sbb
in
push
push
pop
xchg
jmp
sub
adc
lret
mov
je
inc
imul
mov
xor
inc
add
aad
jp
jae
test
and
inc
test
pop
mov
ror
nop
sub
lods
jl
fldz
mov
and
pop
scas
push
dec
loope
jb
leave
mov
mov
out
mulb
mov
cmc
repz
daa
cmp
insl
add
shlb
cmove
xor
cltd
pop
jmp
dec
cli
int3
xor
cmp
xor
pop
inc
scas
lea
push
xlat
bound
push
or
push
imul
loopne
add
dec
sbb
mov
sbbb
inc
cltd
mov
push
mov
dec
xchg
sub
loope
cmpsl
ja
dec
jg
jae,pt
push
scas
fcomps
sbb
push
sub
dec
cmp
xchg
sbb
hlt
push
mov
lock
addr16
dec
mov
dec
into
pop
cmp
lcall
insb
mov
jb
xchg
push
cmpsb
std
push
jmp
mov
loopne
ret
and
or
imul
or
in
cmc
popf
push
pop
mov
xor
ret
sbb
fisubrl
adc
adc
std
dec
sbb
mov
or
adc
cmc
outsl
loop
xor
ljmp
mov
add
pusha
loope
cmpsl
pop
xor
or
xchg
insb
inc
adc
mov
popa
jne
cmpsb
or
sarl
mov
test
mov
rcrl
leave
sub
lods
and
mov
cmp
jp
inc
push
adc
mov
ja
xor
jecxz
in
ret
inc
fdivs
loop
in
inc
fdiv
and
xchg
cmp
xchg
xor
cld
into
inc
pop
add
mov
and
daa
jbe
std
jmp
mov
pop
xchg
push
scas
xor
nop
pop
xchg
icebp
add
mov
or
xchg
inc
arpl
leave
lods
inc
mov
push
test
lret
pop
mov
mov
js
mov
into
dec
mov
mov
imul
pop
and
pop
bnd
push
sbb
in
inc
sbb
mov
ss
dec
fs
je
mov
sti
jb
inc
inc
and
fs
int
xchg
dec
jmp
mov
shl
pop
pop
das
cmp
ret
gs
mov
add
es
loope
mov
and
sbb
notl
cs
push
cmp
scas
mov
push
mov
daa
inc
or
mov
push
pop
int3
dec
pop
cli
jmp
jecxz
push
push
outsl
test
mov
cmp
mov
and
or
jmp
push
lods
jg
bound
shl
mov
das
icebp
xor
or
cmp
shll
ja
add
or
add
insb
and
popa
xor
jns
inc
fsubrp
testl
and
popa
fwait
jge
add
fwait
or
iret
js
cmpsl
jb
movsl
cmp
push
xor
int3
test
loop
pop
pop
rol
lds
fwait
cli
test
in
add
cmp
dec
insb
mov
aad
dec
inc
and
mov
and
jo
and
xchg
add
sbb
or
mov
jge
and
mov
inc
sbb
ret
fcomps
inc
lds
push
pop
and
fisubrl
inc
jne
iret
into
lods
subb
adc
sar
and
adc
jp
adc
cmp
int
cltd
aas
dec
xlat
clc
xchg
push
add
ror
stc
sub
cmpsl
jo
adc
push
sub
ss
adc
push
in
mov
cli
mov
fmuls
xchg
xchg
xor
xchg
out
daa
flds
jne
mov
cmp
mov
pusha
push
push
jo
adc
add
ret
ret
add
pop
test
cmp
sbb
xchg
mov
cmp
inc
inc
pop
jg
pushf
mov
pushf
outsl
xchg
insb
xchg
icebp
sbb
or
mov
lds
pop
pop
sahf
sub
int3
adc
jno
xchg
jg
out
cli
xchg
inc
inc
cmc
scas
fbld
idivl
dec
out
adc
out
test
inc
ds
movsl
stos
aas
ljmp
sbb
push
movsl
in
push
jbe
jnp
add
xchg
adc
jmp
xchg
pop
outsl
int3
sbb
mov
jp
sti
xor
pop
mov
out
andl
movsb
adcb
mov
je
fwait
jo
ja
aas
push
mov
nop
mov
stos
push
js
push
popf
mov
pushf
lahf
cs
mov
dec
sbb
jo
and
dec
arpl
cmp
es
fisttps
adc
mov
or
jl
shl
pop
fdivrs
test
aam
push
iret
pushf
in
aas
notb
mov
test
sub
les
ret
jno,pt
mov
stc
adc
adc
sbb
push
imul
mov
inc
stc
aaa
lock
jne
jmp
mov
lcall
xlat
insl
mov
bound
cwtl
outsl
push
lret
insb
cli
mov
cli
push
mov
les
ret
mov
pop
js
lock
inc
push
dec
jl
jbe
imul
sbb
out
jecxz
pusha
repnz
subl
scas
sbb
int
addb
or
pop
out
das
lcall
push
cmp
movsb
clc
mov
ja
loopne
shlb
fisubl
xor
movsb
clc
idivb
adc
mov
pop
loop
push
or
mov
jmp
sbbl
in
adc
mov
mov
cmp
pop
push
or
ret
or
mov
lea
inc
shrl
dec
push
inc
dec
fbstp
addr16
sbb
push
mov
push
mov
icebp
sbb
sub
cwtl
das
pop
repz
mov
adc
in
int
mov
leave
push
push
lods
sbb
xor
insl
xchg
jnp
xchg
test
pop
cmp
push
fs
jnp
inc
jns
dec
jnp
repz
shlb
repz
cmovge
adc
push
sarl
insl
sub
fldl2t
mov
jno
inc
int3
mov
stc
adc
sbb
dec
xor
nop
add
fwait
push
mov
xchg
add
push
mov
cmp
out
fs
rcll
stos
mov
cmpsb
push
iret
jl
outsl
push
sub
fs
cli
mov
int
lcall
addr16
mov
jg
stos
stos
js
in
or
pop
and
andb
invd
mov
mov
sub
mov
shl
out
cmp
insl
rolb
movsl
les
fidivl
push
sti
xchg
mov
mov
cltd
sbbl
mov
pop
cmp
inc
adc
pop
mov
push
mov
aad
add
and
dec
push
mov
mov
inc
sbbb
mov
push
shl
xor
dec
adc
movsb
sub
pmaddwd
das
cmpsb
dec
movsb
pop
dec
outsl
loop
clc
das
mov
outsb
cmp
call
cmp
outsl
inc
mov
ret
and
rolb
inc
in
xchg
js
js
jae
fs
add
in
popf
jnp
test
or
mov
popa
mov
and
out
inc
arpl
jno
xchg
jne
xabort
xchg
aam
popl
scas
andb
inc
inc
ret
jl
sub
sbb
insl
cld
aam
lods
pop
add
mov
stos
adc
mov
mov
pushf
inc
enter
dec
cmp
dec
dec
pusha
sbb
cltd
dec
sub
push
int
std
lret
push
and
inc
add
insl
mov
sahf
push
int3
fiadds
sub
cmpl
xlat
in
andl
inc
enter
popa
into
movsl
adcl
jmp
sub
lahf
push
rcrb
mov
add
cmc
call
push
cltd
cmp
mov
frstor
ficompl
int
movsl
je
mov
dec
out
rolb
mov
push
push
addr16
mov
add
jbe
and
addl
xor
fsubl
dec
pushw
ds
aam
jb
or
push
xchg
adc
dec
add
inc
push
mov
cmp
mov
leave
popa
shl
jecxz
hlt
mov
mov
jg
aam
aaa
adc
push
jns
xchg
mov
jle
je
xor
fistps
repz
sarl
add
sub
mov
incb
lods
inc
and
pop
in
jge
cmp
cmp
cmp
pop
fiaddl
ret
out
jns
pusha
in
cltd
fimull
mov
repz
mov
cltd
dec
add
jl
mov
push
sahf
dec
cmpsb
mov
outsl
xor
or
fs
adc
fldln2
xchg
in
hlt
addr16
cmp
sub
inc
lahf
out
cmp
lret
adc
popf
push
xchg
nop
dec
js
xchg
outsb
test
in
scas
inc
repz
lret
movsb
aaa
cmp
fucomip
cld
mov
rol
imul
imul
cmpl
lock
or
push
pop
or
popa
scas
push
ja
or
ret
xor
imul
arpl
dec
ljmp
je
test
lahf
push
subl
push
seto
or
xlat
xchg
les
aad
mov
cmp
icebp
rcl
add
pop
sahf
adc
sub
cmc
mov
push
jecxz
xchg
ret
popf
add
sbb
iret
ffreep
jecxz
loope
arpl
lods
push
pusha
cmp
mov
pop
insb
xlat
xchg
jp
sbb
xor
faddl
push
pop
jmp
pop
push
shll
push
in
dec
fldt
lahf
sub
fstl
or
or
cmpsb
sub
nop
daa
jb
lret
push
pop
xor
mov
inc
in
mov
sti
add
daa
jo
pusha
testl
daa
jl
pop
dec
add
imul
dec
dec
add
mov
sahf
push
lods
ret
push
outsl
dec
in
xchg
insb
cltd
xor
inc
aas
jg
mov
sahf
sahf
mov
push
roll
out
lods
cmp
push
inc
xchg
pop
aas
test
add
stos
mov
cs
pop
jp
sub
inc
clc
xor
sub
and
dec
fsubrl
add
xchg
das
pop
or
test
and
fs
xchg
sbb
pop
xchg
aaa
and
mov
fildl
mov
xchg
xor
dec
fs
inc
aam
ret
movsl
xor
pop
call
hlt
mov
fdivrl
push
shl
jg
pop
add
jmp
push
jmp
dec
dec
outsl
std
cmp
aad
fidivl
in
cmp
lea
negl
in
movsb
jb
add
mov
test
jnp
sbb
add
outsl
shl
cmp
pushf
outsl
movsl
jge
mov
shrb
xchg
jo
out
xor
mov
add
les
push
dec
and
mov
dec
scas
out
ds
bound
cs
andb
jl
xor
mov
mov
popf
xor
hlt
sub
pushf
and
and
addl
dec
dec
push
scas
ja
mov
fs
cmp
ficompl
inc
jno
pop
dec
rol
jmp
or
insl
xchg
and
mov
stc
stos
and
test
mov
jle
sub
pop
sub
sub
ds
test
jbe
inc
cli
std
pop
mov
or
pop
adc
mov
mov
callw
xchg
or
sbb
out
sub
dec
push
loope
ljmp
cmpb
pop
cmp
pop
daa
inc
movsb
sbb
push
lea
fidivrs
inc
inc
into
arpl
decb
xchg
fbstp
xchg
mov
scas
imul
jae
inc
out
fstpl
pushf
scas
push
rorb
jb
inc
dec
scas
xlat
fidivs
nop
adc
mov
dec
jne
fwait
push
ret
clc
out
cmpl
shll
cli
add
jge
jmp
add
pusha
add
insl
pop
loope
into
lcall
in
inc
scas
dec
sti
movsl
insl
sub
pop
ret
data16
sub
push
test
outsb
pusha
mov
cmc
mov
mov
adc
daa
mov
push
aam
pop
sbb
mov
pop
insl
dec
and
loopne
sub
lcall
jbe
cmp
push
inc
roll
push
out
xor
js
xlat
jge
or
pop
xor
int
mov
sbb
cmpsl
loope
stc
ja
mov
rclb
popf
roll
jbe
aad
iret
pop
push
xor
push
push
jmp
sarl
push
or
cld
lock
pop
cmp
mov
push
sbb
sbb
cmp
mulb
add
loope
mov
hlt
fimull
dec
pop
fbld
cmp
ds
lods
repz
xor
faddl
lcall
push
fisttpll
mov
add
fwait
sbb
xor
std
out
sub
inc
jnp
jecxz
push
sub
pop
mov
scas
orl
mov
inc
xchg
mov
fbstp
ficompl
mov
mov
pop
icebp
movsl
or
xor
xchg
movsl
adc
dec
jnp
adc
jmp
or
mov
mov
testb
loope
movsl
adc
movsb
fldenv
xchg
rcrl
cmp
insb
pop
fbld
enter
or
test
mov
jmp
jg
cmpsl
mov
fdivs
insb
data16
mov
mov
sti
mov
sbb
pop
dec
or
int3
sub
sub
sub
fmul
daa
bnd
int3
mov
sbbl
nop
sbb
mov
stos
xchg
push
dec
pop
ficoms
mov
inc
in
push
cmp
push
lret
or
call
enter
xchg
jmp
cmp
rol
dec
or
mov
loop
aam
pop
pop
dec
cmc
add
or
into
andb
push
je
mov
pop
es
sbb
pop
je
bound
test
cmp
repz
push
cmc
int3
cs
popa
jmp
repnz
and
sbb
clc
adc
out
fwait
bound
rcl
imul
lock
into
repz
pushw
or
mov
in
test
and
repz
out
pop
out
xor
push
sbbl
pop
je
into
in
and
ss
push
sbb
lret
cmp
shll
shlb
push
jmp
pop
hlt
negb
das
lods
add
int3
mov
or
lret
insl
xlat
lock
inc
xorb
inc
push
inc
push
pop
fidivrl
fistpll
loope
cmp
arpl
xchg
xorl
arpl
lods
jne
jmp
mov
daa
testb
pop
dec
in
mov
cwtl
pop
scas
dec
or
ja
fs
mov
inc
leave
sub
push
loope
xor
mov
fnstenv
enter
jbe
test
mov
enter
or
mov
and
imul
stos
insb
mov
mov
adc
rcrb
cmp
push
sbb
cmp
sbb
or
jecxz
cmp
leave
sarb
stc
js
sub
lods
setle
call
pop
ss
cmp
pop
jae
aaa
pop
push
clc
push
mov
mov
leave
sbb
movsl
cmp
jge
sti
mov
sbb
insl
adc
cmpsl
xchg
mov
jle
xchg
inc
fdivs
ret
cmc
mov
ror
adc
xor
jo
fimuls
sti
xchg
adc
add
imul
push
fucomp
flds
fsubrp
inc
push
sub
push
adc
fsubs
inc
push
mov
in
nop
rorl
sub
mov
mov
and
shrl
push
add
fdivrs
jnp
mov
mov
ja
jno
addr16
mov
jge
int3
scas
push
sub
fs
fcmovne
inc
filds
sub
aas
outsl
and
adc
jmp
je
enter
stos
cmp
leave
jl
mov
out
sbb
sbb
push
or
cmp
mov
push
fdivp
pop
xor
pop
subl
in
xchg
inc
pop
cli
aam
pop
push
sbb
into
aad
mov
jns
push
sbb
fsubrl
fwait
test
in
jle
mov
in
push
or
subb
pushf
push
sti
lock
pop
bnd
aaa
sub
inc
and
pop
push
je
or
mov
push
add
out
sub
dec
pop
daa
stos
sbbb
popf
je
test
fs
xchg
jae
adc
cmp
sbb
mov
in
sub
jne
sbb
test
mov
icebp
sbb
lret
sarb
pop
dec
imul
inc
add
push
movsl
xchg
inc
mov
cmp
or
icebp
mov
idivb
mov
jg
fimuls
mov
jnp
pushf
stos
testl
jns
stc
pop
cmp
dec
scas
sub
fyl2x
push
mov
mov
fwait
adc
and
cwtl
call
pop
and
push
jae
mov
inc
fs
sbb
adc
xchg
cmp
mov
pop
and
xor
test
sbb
rol
lods
or
pop
mov
mov
and
jge
lds
pop
or
xchg
xor
bound
decb
test
jnp
or
adc
jmp
cmc
fsubl
adc
mov
scas
iret
pop
cmp
add
cmp
jle
jbe
xor
sahf
or
inc
add
mov
or
cmp
pop
fnstsw
or
inc
fst
sbb
inc
inc
lret
in
mov
jle
xchg
loope
add
mov
bound
cli
into
sbb
jae
lahf
mov
sbb
lahf
ss
rorl
mov
pushf
or
pop
cmp
ds
ljmp
add
inc
neg
push
imul
inc
outsb
daa
adc
or
or
sbb
adc
mov
push
outsb
pop
cmp
into
xor
jnp
orb
jae
scas
cmp
cmpl
jmp
into
loopne
mov
mov
sbb
fs
dec
add
out
mov
push
iret
ficompl
adc
xor
jo
mov
arpl
sbbl
xor
xorb
pop
sahf
pop
or
iret
jae
inc
int
jae
jmp
aas
imul
xor
mov
and
mov
cmpsl
out
pop
xchg
js
fcmovnu
xor
sbb
icebp
sbb
dec
leave
jecxz
aad
inc
or
push
xchg
mov
inc
out
xor
ror
pop
pop
xchg
mov
push
js
lcall
push
pop
or
jno
dec
daa
jbe
lret
adcb
in
and
imul
cmc
es
jl
inc
cmc
stos
mov
add
out
cmpsb
outsb
repz
loopne
cwtl
test
out
aas
addr16
sbb
loop,pn
jbe
into
lea
xchg
gs
adc
push
mov
and
xchg
inc
cwtl
sbb
pop
ret
insb
adc
cmp
mov
pop
inc
sarb
stos
imul
cmp
scas
inc
lcall
and
adc
and
jecxz
jns
push
mov
lret
aam
dec
cmp
pop
sub
ljmp
lcall
lods
inc
in
push
jle
mov
mov
xor
mov
inc
add
and
cmpl
pop
lret
sbb
rorl
rcrb
pop
xor
sbb
cwtl
mov
popl
mov
std
pop
pop
nop
cmp
repnz
rcll
pop
sti
or
test
shrl
sti
fbstp
test
lock
sbb
adc
arpl
xchg
cmpxchg
xor
or
mov
into
jecxz
test
std
fldenv
test
lods
std
rcr
jg
into
stos
iret
mov
sbb
repnz
lods
adc
mov
dec
jbe
ds
add
inc
xchg
out
dec
mov
pusha
jmp
jno
int
xor
scas
iret
push
icebp
xor
lods
or
xchg
mov
adc
push
or
mov
dec
mov
pop
sahf
into
adc
pop
in
repnz
fsubr
jnp
mov
movsb
insb
sti
push
sbb
iret
fisubrs
mov
sahf
sub
es
sub
mov
lret
pop
dec
pop
add
jne
adc
jns
mov
leave
pop
stos
test
or
sahf
orb
aaa
push
iret
jb
add
inc
pop
shll
in
mov
xchg
inc
int
stos
add
xor
xchg
mov
pop
mov
lock
mov
dec
mov
push
test
imul
adc
popa
iret
cmp
sbb
test
in
mov
sbb
mov
pop
outsb
enter
rclb
ss
xchg
lds
ja
popa
ds
mov
test
xor
and
mov
test
inc
fstl
scas
or
sub
mov
insl
jge
lahf
std
mov
mov
mov
mov
and
aam
ds
mov
out
inc
popa
cs
jl
loopne
jmp
dec
push
xor
mov
out
cwtl
jg
ja
dec
mov
loopne
dec
sub
xor
mov
sarb
sbb
pusha
test
addr16
movsl
sbb
pop
aaa
mov
pop
jns
sub
jl
test
popa
xor
jnp
dec
push
leave
push
call
mov
outsl
push
fsubrs
es
lea
xchg
lods
mov
push
push
ja
xorb
arpl
mov
outsb
add
mov
adc
mov
pop
cmpsl
scas
sbbl
test
pop
fld
sbb
or
sbb
arpl
outsb
xor
outsl
xor
popf
je
sub
jne
loop
fwait
dec
sub
cmp
and
imul
jbe
push
add
mov
out
xor
jge
push
ljmp
lock
mov
pop
cmp
jp
cld
das
and
movsb
rcll
sahf
dec
jg
add
imulb
loop
js
stos
and
push
mov
and
mov
jl
and
lret
psrad
mov
dec
sahf
mov
mov
rcrb
aam
vmovlpd
mov
push
mov
test
dec
fldenv
mov
sar
adc
imul
mov
or
push
xor
fimuls
xor
push
mulb
or
cmp
cmpsb
rclb
cmp
arpl
mov
movsl
sbb
fcmovnbe
cmp
es
xor
and
push
les
nop
push
push
dec
sub
jns
stc
dec
inc
enter
add
dec
fimull
ret
lock
es
mov
aaa
aad
out
cwtl
lea
mov
xchg
test
push
je
or
and
pop
xor
jb
or
inc
movsb
stos
hlt
mov
mov
ss
mov
popfw
or
shrb
test
js
cli
daa
aaa
dec
popf
je
fldt
dec
pop
cmc
jo
in
repnz
pop
push
push
cmp
sub
shlb
xchg
mov
loopne
sbb
xor
push
nop
dec
xor
cmp
out
dec
sahf
lret
sub
aaa
stos
pop
loope
pop
sti
es
in
frstor
xchg
lcall
std
das
xor
cmpsb
scas
lahf
mov
sbb
adcb
dec
jecxz
fimull
sbb
inc
mov
push
popf
xor
xchg
js
dec
pop
pop
cs
mov
inc
fldcw
inc
mov
dec
lahf
ja
xchg
lret
xchg
lods
and
adcb
in
and
ljmp
xchg
cs
adc
jge
loopne
push
mov
mov
je
push
xor
cmpsb
cli
sbbb
in
adcl
dec
rcrb
ss
gs
jno
ror
mov
mov
and
cld
pop
test
cmpsl
cmpb
sbb
mov
add
push
add
leave
xchg
sub
popa
dec
out
ror
mov
and
or
sub
jo
iret
lods
xchg
add
inc
into
sbb
adc
test
pusha
mov
inc
cmp
jb
ds
ret
jbe
and
pop
cmc
sbbb
push
repnz
jo
push
shll
xchg
xchg
fnstsw
orb
cltd
cmp
aad
mov
push
adc
data16
test
push
push
lea
test
cmpsb
lods
test
clc
inc
xor
add
lahf
or
inc
lea
jmp
or
mov
ret
js
leave
xchg
push
pop
in
sub
inc
ret
or
pop
fsubs
jnp
outsl
daa
outsl
ret
adcb
xchg
out
sarb
and
push
imul
sub
stos
cmp
or
add
xchg
or
or
adc
inc
adc
or
mov
xchg
xchg
pusha
dec
mov
stc
jecxz
int3
fs
cmpsb
orb
push
cltd
loope
cmp
test
popa
or
aad
push
pop
mov
pop
cmp
pop
repz
popa
jp
movsl
ljmp
arpl
mov
add
jp
shrl
loop
rclb
jno
js
aam
hlt
mov
add
loopne
cld
addr16
cwtl
sbb
scas
mov
and
aas
clc
loopne
clc
cmp
jno
out
rclb
mov
subb
add
mov
fmuls
xchg
mov
push
leave
mov
and
lods
mov
je
add
test
cld
ljmp
push
xor
xchg
adc
inc
pop
into
jbe
cwtl
cmpsb
fcompl
jo
xlat
mov
ljmp
ret
xor
sub
lods
movl
or
jno
or
js
jmp
jb
outsb
in
adc
fidivl
push
inc
shrl
shll
add
and
pop
aas
out
cmp
imul
cmpsl
loop
int3
scas
rcll
mov
lods
scas
jge
xchg
adc
or
cld
ucomiss
popa
clc
adc
in
dec
loope
mov
xorl
jns
lret
mov
sbb
xchg
insl
inc
push
jne
cld
and
adc
mov
pop
inc
loop
scas
mov
jnp
jne
into
popa
xchg
mov
dec
int3
jb
sbb
lods
cltd
mov
adc
outsb
jno
aam
jg
addr16
fsubr
xchg
lcall
push
mov
jae
jge
xor
pop
cmp
dec
fisubrs
adcl
icebp
adc
insb
or
shr
loope
and
loopne
push
mov
adc
mov
jp
jno
mov
leave
adc
insb
ret
enter
pop
xchg
lret
cmp
sub
popf
pop
xor
sbb
dec
mov
fmull
adc
lds
add
push
arpl
test
xor
les
out
repz
aas
aas
iret
xor
and
push
adc
jne
stos
jb
and
dec
cs
pop
arpl
pusha
jo
pop
push
je
dec
notl
mov
test
mov
pop
sub
loopne
mov
aad
add
pop
repz
sub
imul
lock
sub
rcll
ret
xlat
push
jne
iret
pop
sbb
in
std
enter
out
or
jp
inc
fsubl
sub
jno
out
jp
cmp
adc
mov
mov
test
dec
xchg
adc
sub
iret
jb
add
or
and
mov
call
imul
jo
jns
scas
sbb
jp
sub
subl
sbb
pop
aaa
and
out
push
in
dec
add
cmc
aaa
aad
jecxz
and
pop
loopne
xlat
movsb
subb
push
rcll
fistl
movsl
mov
push
cwtl
lret
cmp
and
jge
fcoms
add
into
stc
lret
push
jae
mov
inc
loop
and
add
sub
call
cmpb
inc
out
pop
push
icebp
push
notl
or
xchg
lds
sbbl
push
and
enter
mov
mov
mov
pop
cld
ss
sub
out
xchg
pop
mov
adc
add
push
inc
call
xor
or
fmull
ret
rcrb
int3
sarl
lahf
imulb
inc
cmp
imul
or
loopne
lods
subb
and
push
dec
inc
and
jne
adc
enter
sar
adc
insb
bound
mov
sti
xchg
in
or
jecxz
mov
mov
sbb
insl
cli
cmp
jnp
jne
sbb
ret
mov
xlat
sbb
out
mov
pusha
adc
pop
xor
call
jp
repnz
pushf
sub
sbb
les
in
add
dec
out
cltd
sbb
mov
insl
sbb
and
ret
adc
sub
sub
enter
jno
loope
mov
aas
add
aas
movb
rol
or
lock
push
push
shll
pop
or
movsl
test
adc
push
pop
cmp
cmp
mull
cmp
pcmpgtb
int
pop
int
repz
mov
mov
aaa
into
mov
mov
int3
loop
mov
cld
push
pushf
int
jmp
call
mov
loopne
push
mov
lds
or
inc
xor
sbb
cmp
pop
adc
je
clc
in
cwtl
xor
scas
mov
push
jp
mov
xlat
loopne
pop
jb
jae
movsb
xor
sbb
lret
fwait
push
sub
xor
cli
iret
loope
outsl
shlb
add
push
jge
mov
sbb
movsl
popa
cld
xchg
and
xor
clc
call
in
cmp
daa
lock
shl
sub
xchg
lods
aas
pop
pop
mov
sbb
mov
rclb
aas
test
mov
ss
loop
adc
add
es
push
jl
jbe
cmp
sbb
xor
int
and
into
mov
rcl
nop
mov
pop
out
dec
imul
fwait
mov
and
mov
dec
jb
jnp
movsb
inc
sub
jbe
cmp
fildll
cwtl
push
ss
add
mov
or
sti
cmp
mov
fldt
shr
je
cmpsl
jle,pt
inc
int
cmpsb
inc
adc
lods
jmp
pop
fsub
and
pop
add
push
xor
lcall
addr16
jne
pop
jecxz
add
test
dec
xlat
bound
inc
sbb
pop
pop
or
mov
cmpsl
in
shlb
lret
gs
pop
in
or
lcall
mov
mov
fdivl
outsb
test
mov
or
inc
add
int
clc
addps
cmp
daa
jnp
pop
sub
shl
incl
xlat
cmp
sbb
lods
mov
and
inc
sbb
pop
int3
fxam
cld
or
call
pop
pop
mov
or
push
push
pop
test
lahf
stos
add
add
pop
cmpsl
cpuid
xor
jmp
xor
aaa
cld
rcll
mov
sarl
ret
adc
data16
sti
add
inc
or
adc
outsl
jb
std
mov
data16
lret
sbb
stos
cmc
adc
cli
dec
sbb
fdivp
mov
mov
sbb
inc
pop
mov
mov
movsb
inc
push
scas
jae
adcb
mov
mov
add
hlt
rcll
les
aaa
into
mov
data16
push
cmc
stos
inc
jmp
das
insb
add
cltd
data16
or
insb
add
add
pop
sahf
push
xchg
xchg
mov
and
je,pt
test
arpl
testb
pop
lea
mov
adc
lods
mov
jmp
loop
or
idivb
cmc
pop
bound
adc
fldt
adc
daa
sub
jo
ret
loop
popf
frndint
cmpsl
int
mov
mov
mov
push
sbb
cmp
xchg
imul
outsl
cmp
mov
add
xor
sbb
dec
test
or
jp
mov
inc
test
ffree
nop
cs
or
das
dec
in
dec
inc
xchg
call
mov
mov
stos
inc
in
mov
fidivl
les
pop
sahf
dec
out
inc
rcrl
fsubl
rorb
call
push
mov
dec
dec
sbb
xor
push
es
xchg
dec
nop
inc
fucompp
xchg
cmp
lds
ja
jmp
add
adc
lret
xor
xchg
mov
rol
or
mov
sbb
pop
push
out
cmpsl
lods
and
cs
push
les
out
roll
sti
ficoms
jno
adc
lds
or
sub
mov
scas
outsb
sbb
fadd
xor
push
sub
and
jmp
sbb
aad
cmp
sub
xchg
or
out
adc
rorl
daa
fwait
adc
jne
pop
paddsb
xor
xchg
jo
or
xchg
cmpsb
inc
sarl
add
jmp
pop
add
gs
fmuls
cmp
pop
fs
mov
mov
pop
ss
add
mov
ja
lcall
cld
int3
arpl
loope
lahf
and
ljmp
jns
andl
push
sub
fists
mov
cltd
fstp
fnsave
push
xchg
dec
lahf
cld
sub
adc
push
cltd
push
mov
or
lahf
mov
mov
cmpsb
mov
adc
add
dec
add
xchg
adc
std
mov
mov
or
les
mov
rcr
aas
sti
mov
ds
xor
lods
nop
repnz
adc
mov
xor
mov
cwtl
pop
mov
mov
cmp
sahf
mov
shl
inc
mov
outsl
pop
cwtl
rcll
and
pop
xchg
or
mov
shl
dec
test
jmp
inc
hlt
sahf
lods
sub
add
into
xor
jo
fdivrs
iret
xchg
xchg
mov
push
cmpsl
fidivrs
lcall
in
lods
mov
test
lock
jo
loopne
xchg
inc
bound
push
int3
sub
push
test
lret
dec
bound
mov
loop
inc
push
pop
adc
incb
mov
jecxz
xor
push
outsl
sub
pop
xorb
xlat
aaa
and
inc
mov
xchg
repnz
aad
out
lret
lahf
stos
sbb
push
repz
pop
xchg
in
lret
pushl
ret
cwtl
movsb
and
adc
dec
leave
push
jbe
popa
in
dec
mov
mov
mov
mov
aam
loop
cld
cmp
sbbl
icebp
dec
jp
push
lahf
add
pop
mov
mov
imul
mov
les
mov
dec
cmp
cs
nop
mov
fldl
and
ds
in
mov
fcmovnbe
jecxz
dec
es
push
push
cmpb
sbb
mov
pop
adc
dec
push
fcmovb
fsubrs
loope
pop
call
mov
push
aam
mov
sahf
push
push
hlt
mov
mov
inc
or
fwait
pop
imul
inc
mov
dec
cmp
mov
mov
popf
sbbl
mov
cmc
mov
add
lahf
leave
mov
mov
sub
gs
or
mov
xchg
into
cmp
repz
cmp
adc
push
inc
and
push
push
out
ljmp
dec
dec
cs
or
or
fdivrs
es
ljmp
pushf
stc
xor
and
lea
data16
cltd
mov
sbb
stc
push
and
imul
gs
cmpsl
cmp
mov
add
jne
or
adc
clc
jae
or
adc
shlb
pusha
out
inc
fs
shrl
mov
out
mov
or
fsubl
dec
and
mov
mov
or
aam
popa
jp
push
movsb
mov
mov
mov
in
cmpsb
stos
dec
mov
cmc
lahf
pop
push
sbb
out
pop
mull
shl
aas
enter
pop
inc
rolb
push
push
add
pop
mov
add
mov
jp
mov
psubw
pushf
pop
cltd
mov
aam
mov
ja,pn
xchg
cs
ds
push
pop
mov
enter
ds
dec
inc
in
jae
and
pop
aam
les
fchs
das
cs
repnz
iret
repz
push
sahf
jb
mov
fldcw
add
movsb
inc
std
add
adc
addr16
pushf
sub
xchg
push
popf
shl
adc
dec
fcomps
stos
arpl
popa
cmp
add
jp
add
aad
inc
out
fcmovnbe
cmpsb
in
in
pop
in
rolb
lret
jbe
push
test
inc
xchg
xor
mov
sti
call
insl
sub
cmp
cmp
fcomps
xor
gs
jne
mov
add
lret
stos
notb
pop
cmp
loop
xlat
pop
cmp
or
inc
cmp
out
push
mov
ret
fiadds
jne
jae
movsb
and
add
or
jae
nop
scas
addr16
dec
lret
fsubrl
out
repz
out
outsb
sub
add
loope
pop
xchg
jns
dec
and
and
stos
iret
push
mov
dec
nop
leave
dec
ffreep
ja
lret
pop
cmp
mov
pop
data16
int3
inc
xchg
enter
test
pop
xchg
movsb
pop
mov
test
sub
adc
je
mov
pop
mov
jo
sbb
cmp
mov
fisttpll
scas
jnp
pop
jp
mov
addr16
popa
ljmp
out
mov
daa
sbb
adc
jmp
xchg
xor
pop
out
inc
inc
imul
sub
and
dec
dec
mov
pop
ss
mov
pop
test
out
imul
inc
leave
jo
pop
mov
test
mov
push
in
mov
pushf
scas
mov
sbb
mov
xchg
sub
push
inc
shll
inc
sbb
jno
loop
cwtl
stos
mov
and
dec
jg
jge
hlt
mov
cmp
outsl
inc
xchg
dec
cli
daa
mov
lods
push
add
test
inc
jae
lahf
xorb
testb
data16
xorl
xchg
xchg
ret
sahf
pop
adc
sbb
call
pop
bound
addr16
pop
lock
in
inc
add
in
dec
pop
sbb
xlat
push
addl
xchg
aam
mov
popf
cmp
je
fildl
pop
push
jg
push
mov
or
loopne
or
andb
sbb
in
lock
addr16
rorb
inc
mov
jl
inc
scas
inc
fidivrs
repnz
pop
cltd
cwtl
inc
cwtl
mov
and
cmp
mov
int
scas
cmp
shll
push
icebp
xchg
sub
cmp
fildl
fdivs
cmp
dec
xor
decb
shl
and
enter
iret
clc
outsb
dec
roll
push
dec
mov
push
test
bound
gs
scas
ja
mov
inc
das
push
xchg
inc
call
sub
pop
inc
jl
xor
lods
xchg
cmp
sahf
cs
pop
in
pop
std
push
lret
je
pop
shr
lret
popa
cs
adc
mov
pop
mov
repz
arpl
and
jns
jmp
adc
cmpsb
test
lret
js
hlt
and
xchg
out
lahf
mov
aad
xor
push
ljmp
push
or
add
jns
int3
pushf
xor
enter
loope
inc
shrl
aam
div
pop
or
push
enter
push
int
sbb
xchg
mov
rcrb
in
sti
or
rorb
and
insl
push
and
insb
adc
incb
out
adc
sub
mov
jo
jp
shlb
shlb
clc
cwtl
in
lret
adc
sbb
mov
scas
xor
out
xchg
pop
jle
fsubrs
lea
jmp
inc
mov
lret
jbe
mov
pop
jl
and
rcr
or
jbe
xchg
test
xchg
testb
pop
xchg
sub
push
mov
dec
mov
call
inc
jecxz
mov
add
es
aam
or
jo
sub
into
enter
shr
jno
push
jmp
inc
lcall
sti
dec
and
adc
addr16
pop
jmp
shl
mov
sub
shrl
sbb
dec
push
mov
into
jnp
out
stos
mov
clc
addb
loop
orb
out
mov
fbstp
cmp
pop
ljmp
fs
stos
jmp
xor
clc
adc
aad
xchg
pop
stos
xor
out
xlat
push
sbb
mov
dec
push
mov
push
sub
cwtl
push
and
out
mov
inc
movsl
jns
and
out
fsts
push
jns
pop
push
inc
faddl
imul
insb
stos
sub
sbbl
lret
ret
and
fisubrs
mov
xor
pop
jno
push
aas
inc
jb
xor
ficomps
leave
jmp
adc
mov
int3
decb
or
dec
mov
or
xchg
leave
dec
xchg
sbb
lods
leave
int
mov
dec
mov
inc
hlt
adc
fcmovnb
loop
mov
rcl
cmc
add
inc
pop
addb
xchg
mov
xchg
cld
add
jo
jo
test
cwtl
inc
ss
mov
movsb
inc
or
int
out
ds
cwtl
jbe
dec
sub
lahf
lock
insl
sbb
jp
sbbl
mov
lea
ss
jle
aad
mov
mov
data16
fisubrs
aaa
xor
enter
rcrl
int3
cmp
jno
fwait
mov
cmp
cli
push
les
mov
and
aam
mov
or
mov
jp
stos
add
cmpsb
cmp
mov
leave
int
gs
out
mov
or
and
adc
movsb
push
adc
adc
test
pop
aaa
popf
mov
pop
in
or
ret
mov
mov
xor
scas
in
dec
cld
in
lods
lods
lcall
pushf
js
ljmp
mov
lds
mov
push
and
or
out
test
cmp
inc
pusha
es
add
roll
jl
mov
lfs
int3
dec
lcall
sbb
xor
scas
mov
les
jb
ds
add
dec
sub
mov
lds
addr16
xor
add
sub
push
jmp
and
ljmp
mov
jae
jg
cld
das
mov
andl
in
jae
or
cmp
fs
sbb
adc
sbb
fdivrs
shrl
or
test
add
dec
mov
inc
mov
push
hlt
mov
fwait
sti
je
clc
aaa
aas
mov
arpl
mov
jp
cwtl
mov
shr
push
mov
leave
push
and
xchg
ds
in
mov
sub
or
and
leave
xor
out
inc
psllw
stc
xchg
cltd
pushf
xchg
inc
imulb
sbb
sub
lahf
ss
mov
and
xor
xor
inc
inc
fnstcw
decb
xchg
xchg
adc
out
sbb
enter
insl
fistpll
mov
inc
scas
jge
mov
ja
aaa
mov
lret
imul
jbe
add
mov
jmp
cmp
and
jo
mov
push
jne
outsl
daa
ficomps
inc
jno
dec
dec
mov
inc
sbb
loop
adc
dec
jecxz
lcall
cmp
lahf
test
pop
and
cmp
fwait
je
push
jno
mov
cld
adc
jns
andb
jns
sbb
add
pop
mov
int3
sbb
inc
icebp
testl
or
pop
sbb
xchg
jmp
and
aam
enter
stos
lds
or
cmp
push
xchg
in
mov
rolb
mov
sub
xor
push
icebp
pushf
cvttps2pi
int
sub
jg
xor
pop
ljmp
xor
shlb
dec
ret
ret
out
pop
cmpsb
mov
cwtl
mov
es
sub
nop
ds
outsb
dec
in
cmp
lods
insb
cmp
movsl
mov
leave
lock
nop
adc
add
xor
pop
scas
mov
ficomps
ficoml
push
sub
xchg
divl
cltd
mov
shr
push
add
inc
mov
lret
inc
pop
jae
push
addr16
add
bound
cmc
jne
shlb
outsb
orl
jbe
sahf
sub
cwtl
outsb
sub
aas
pop
cmp
into
imul
inc
push
out
push
jbe
cmc
repz
loope
jecxz
jnp
sub
movsb
mov
adc
adc
jle
push
movsb
push
push
lret
xor
xchg
add
stos
movsb
in
jns
and
mov
jns
sbb
sahf
sub
pop
xor
pop
push
inc
flds
xchg
sbb
cmpsb
fdivrl
or
jb
mov
sahf
addl
sahf
scas
insl
sub
lcall
lret
imul
pop
xor
or
shrl
sub
leave
sahf
out
ret
pop
mov
std
mov
das
loope
or
xchg
cs
push
rol
sbb
dec
rcll
ret
cmc
pop
inc
ss
cld
dec
stc
ljmp
sbb
inc
mov
sbb
mov
fiadds
lods
out
pushf
repz
jp
dec
in
jne
cmpsl
fs
int
sub
mov
sub
leave
aam
insl
int
or
fisttps
stos
sub
loope
mov
push
cmpb
sub
sti
cmc
out
cmpsb
xlat
mov
and
clc
in
setle
fwait
fs
out
sarl
out
cmpsl
cli
push
repnz
fbstp
js
jmp
push
pop
mov
push
and
add
clc
in
mov
dec
cltd
fdivl
stos
sbbl
pop
pusha
lea
sbb
fisubrs
mov
ret
add
bound
lahf
jl
jb
stc
stc
adc
sbb
add
test
mov
mov
add
shll
jle
repnz
out
inc
inc
nop
daa
jae
bound
push
xor
xchg
adc
and
leave
fwait
xchg
subl
add
enter
pop
loopne
movzwl
mov
aad
sbb
popa
aam
sbb
sbb
leave
ficomps
scas
xor
dec
mov
int3
out
add
dec
xchg
xor
xor
push
in
scas
fcmovbe
sbb
cltd
je
mov
xchg
repnz
xchg
sub
cltd
and
add
pop
jmp
fwait
int
fwait
div
test
xor
xor
inc
das
add
fisubrs
push
mov
sbb
cmpsl
fwait
and
push
mov
mov
lea
stc
je
cmpsl
repz
lahf
out
push
xchg
mov
test
lock
add
pop
jecxz
mov
cmpsl
ds
pusha
lock
icebp
lds
lock
and
jmp
mov
int
or
mov
mov
sbb
data16
enter
roll
into
iret
mov
ja
mov
aas
xor
fcomp
pop
inc
add
loopne
pop
push
mov
std
fisubs
int
cwtl
mov
push
adc
loope
push
xchg
push
out
lds
into
loope
out
mov
scas
mov
int
stos
jbe
xor
xlat
push
xor
cmp
aad
fldcw
pop
push
in
mov
fists
mov
mov
jno
ret
repnz
cmpsb
popf
repz
push
std
mov
sbb
push
call
popa
cwtl
dec
movzbl
or
or
testb
mov
fs
gs
popa
add
int3
fsubl
mov
cmp
add
sti
sbb
xchg
cmp
mov
jnp
shrb
sub
jae
inc
arpl
outsb
add
and
mull
mov
imul
pop
cmpsb
mov
push
jmp
add
jle
mov
pushf
and
clc
nop
daa
in
mov
lods
stos
sbb
imul
sbb
rclb
lods
repz
imul
js
ds
jmp
push
dec
out
movsb
sbb
push
sbb
xorl
psllq
mov
xchg
test
xchg
cmc
cvtps2pi
jle
pop
scas
mov
jge
pusha
jno
addr16
pop
out
inc
push
stc
jge
adc
sbbl
loopne
stos
gs
sbb
les
adc
and
dec
pushf
divb
xor
iret
das
scas
jge
sub
cltd
aaa
cmp
add
push
mov
sub
adc
popa
sahf
aas
ss
in
jae
sub
cmp
lea
in
pop
push
hlt
inc
push
jnp
lea
pop
bnd
std
lods
add
dec
lods
dec
pop
lea
jb
shll
stc
mov
sub
and
aaa
test
push
mov
and
loopne
lret
xchg
xlat
cltd
call
adc
xor
repz
test
into
fwait
jne
cltd
mov
sti
jnp
test
outsb
inc
lods
mov
pop
ret
xchg
push
jnp
out
sahf
mov
into
fdivl
in
sbb
cmp
cmp
xchg
jmp
inc
pop
add
cmp
out
sub
xchg
cmp
popa
xor
fsubr
push
mov
and
push
pushf
jg
sub
lods
add
out
stos
clc
cmp
push
outsb
adc
jae
lods
inc
inc
sbb
lret
daa
loop
inc
fmul
pop
fisubrl
cmp
pop
push
orl
das
stc
xchg
cmp
and
pop
mov
xor
xchg
jmp
or
push
sub
dec
cmp
xor
fs
push
pusha
inc
pop
or
test
loopew
dec
jns
sti
movsl
sbb
into
scas
cmpsl
mov
cmc
loope
dec
add
push
push
std
movsb
shlb
popa
mov
adc
pop
outsb
aas
dec
push
dec
and
xor
imull
les
fnsave
xlat
jb
pop
sahf
inc
mov
clc
and
sahf
xor
out
dec
or
mov
jle
sub
and
dec
pop
jmp
loop
cmp
test
jae
jo
adcl
cmp
fimull
sbb
frstor
cmpsl
mov
dec
stos
mov
xchg
or
and
gs
and
popf
push
xor
cltd
jae
in
bound
mov
push
dec
xchg
jnp
dec
inc
add
xchg
pop
int
insb
div
stos
push
enter
jl
enter
adc
hlt
pop
cmp
inc
aaa
imul
dec
inc
inc
jns
push
or
out
fmuls
mov
out
cmpsl
out
pop
sbb
sbb
mov
xchg
or
add
xchg
sbb
aad
or
daa
lds
test
cmp
inc
mov
fninit
test
pop
sbb
roll
xor
sbb
orb
dec
fld
pop
or
xor
cmp
cmp
mov
add
jno
cltd
les
inc
fldl
pop
adc
ss
sub
push
inc
sub
ljmp
add
adc
out
sub
sbb
enter
pop
mov
fistps
add
sbb
rcll
sub
mov
out
mov
mov
lock
sub
inc
push
xchg
cmp
cld
jo
sub
test
mov
inc
scas
push
sub
jmp
sub
adc
mov
cli
or
xor
push
aam
lea
push
pinsrw
movsl
das
ret
aam
pushf
scas
data16
insl
popa
push
add
out
fwait
pop
jbe
out
pushf
mov
outsb
inc
lea
rclb
scas
ljmp
into
fstpt
into
inc
lret
and
leave
lds
cmp
lods
mov
xchg
roll
fsubrl
jae
inc
sbb
jne
xchg
out
inc
aaa
lret
hlt
dec
ds
jg
xor
add
and
js
mov
fadds
das
xchg
adc
addr16
aad
xorb
pop
stos
sub
and
ret
data16
push
mov
mov
rol
sahf
cmp
pop
jle
cmpsb
ds
mov
rcrl
pop
jmp
out
adc
lods
and
aaa
test
daa
divl
inc
jecxz
adc
adc
out
jns
out
cltd
out
cmc
shrl
inc
outsl
mov
shr
stc
or
push
jp
mov
xchg
bound
or
push
push
popa
test
adc
or
mov
ljmp
sub
push
je
fisubrl
cmp
out
test
or
mov
mov
or
sub
fidivrl
scas
xchg
testb
fistps
mov
jae
popa
stos
jb
xor
das
addb
and
nop
cmp
mov
sub
lcall
and
lds
arpl
pusha
je
imul
loopne
out
leave
pop
icebp
mov
push
outsl
adc
scas
jae
cld
or
arpl
or
test
cmpsb
ljmp
inc
and
push
sub
ja
dec
sbb
cmc
cmpl
mov
scas
ret
inc
gs
das
cs
xor
or
movsb
adc
mov
cs
sbb
mov
daa
cmp
out
pushf
xchg
and
jo
xchg
loop
lret
and
inc
fiadds
inc
add
xor
xor
mov
cmp
jb
outsb
mov
xchg
data16
ljmp
loop
je
push
arpl
jo
and
out
adc
ja
pusha
testl
jle
adc
pushf
test
outsl
ret
in
das
jb
imul
or
fsts
xor
sbb
cmp
ret
gs
imul
cmp
sbb
inc
les
cmp
jnp
enter
shll
mov
lods
mov
xchg
push
andl
clc
hlt
dec
cmp
iret
xchg
push
repz
and
in
jle
scas
cmp
inc
aam
cmp
push
in
addl
enter
sub
mov
outsl
ljmp
pop
mov
add
pop
lahf
jae
fidivrl
fbld
cmpsl
ljmp
decb
ss
sbb
inc
push
scas
adc
loopne
imul
add
cmp
xlat
mov
xchg
sub
pop
scas
or
lret
xor
push
inc
mov
stos
leave
cltd
test
movsb
xor
hlt
inc
jae
lds
imul
sahf
lods
dec
lods
lock
xchg
jecxz
cwtl
adc
mov
stos
lods
ds
and
xor
scas
outsl
mov
popf
cli
jns
xor
dec
mov
jb
sub
adc
jb
mov
jns
jmp
push
jl
les
push
adc
pop
sub
pop
mov
adc
mov
gs
push
xor
xchg
xchg
test
or
inc
push
lock
loopne
or
sti
fwait
dec
mov
rorb
shlb
ljmp
sub
mov
add
mov
int3
ja
adc
jg
mov
dec
in
test
pop
popl
adc
adc
push
and
aam
mov
pusha
push
pop
movsl
int
adc
ss
pop
or
xchg
adc
sbb
add
dec
add
stos
dec
xor
push
adc
lock
and
ficompl
cmp
ret
add
daa
push
icebp
or
cld
pop
or
in
push
dec
ret
imul
sahf
in
es
sti
xchg
pop
fildll
pop
ja
mov
cmpsb
repnz
out
mov
stos
cmp
ficoml
hlt
fisttps
fistpl
xchg
std
hlt
imul
adc
mov
cs
cmpl
push
cmp
mov
pop
shl
mov
jb
fnstenv
xchg
sarl
push
xchg
xchg
rorb
xor
xor
mov
dec
fisubl
imul
cmp
inc
dec
jne
inc
imul
cmc
jle
dec
dec
inc
lahf
cmp
or
and
pusha
mov
fisttpll
sbb
movsl
cmp
pushf
movsl
js
leave
ds
pop
dec
lcall
faddl
push
jmp
adc
notl
sahf
cmp
add
in
outsl
jl
jl
mov
pop
and
cli
sbb
inc
pop
popf
dec
lods
pop
ss
xor
outsl
ret
add
shrb
cld
jge
fcomip
or
sbb
mov
fucomip
test
int3
pop
mov
mov
lods
cmp
cmp
sub
call
test
loop
sbb
lds
xor
jo
insl
push
xchg
cmp
inc
insl
dec
jne
fwait
pop
popf
movsl
inc
lcall
inc
fidivrs
gs
mov
dec
jne
repnz
arpl
outsb
xchg
enter
aas
cmc
sub
xchg
js
xchg
add
and
cli
push
sub
or
jp
scas
sub
das
jne
pop
mov
cmp
inc
je
mov
or
test
test
jns
rorb
adc
xor
xchg
ja
cwtl
xor
push
pop
mov
mov
rolb
mov
adc
sti
pop
dec
je
outsl
push
ficoms
or
gs
cmc
push
ss
mov
ja
fstl
sahf
push
or
repnz
and
cld
scas
rcrb
ret
mov
dec
dec
add
xchg
into
and
and
sbb
cmp
mov
pop
in
cltd
or
sub
fwait
sub
inc
hlt
paddw
popa
jmp
mov
test
int
jb
sbb
and
stc
adc
push
mov
jb
push
dec
js
jg
cmp
aad
push
mov
loop
int3
jmp
pop
and
fistpll
ja
pop
push
jbe
jnp
imul
insb
pushf
repz
shrl
and
pop
cwtl
icebp
mov
imul
jmp
jg
std
mov
popf
xor
xor
push
xchg
ds
fdivr
mov
adc
sub
popf
xor
mov
mov
cli
mov
inc
popa
mov
cmp
xor
push
lea
js
enter
sar
jle
das
cmc
jno
sub
mov
rorb
int3
inc
sub
mov
iret
fsubr
mov
adc
dec
adc
xchg
out
mov
test
shl
es
and
movsb
movsl
inc
sti
adc
pop
push
fsubrs
bound
sub
out
pushf
xor
lods
cmp
mov
movsb
xchg
lret
sti
mov
testb
push
jo
mov
fsubrl
mov
cwtl
push
test
sbb
adcb
and
cwtl
jae
lret
das
ljmp
dec
xchg
daa
sbbb
clc
insb
cmp
mov
push
xor
jnp
dec
loopne
and
cmc
sub
out
je
pop
xchg
sarl
data16
int3
fucomi
std
scas
lret
xor
sti
xor
push
inc
ljmp
xchg
mov
sbb
add
ds
push
lcall
cmp
adcl
in
dec
aad
jg
lods
adc
fldt
enterw
int3
in
adc
jecxz
sbb
dec
mov
mov
insl
lods
mov
call
ret
xor
adc
orl
leave
jo
inc
jae
mov
mov
shl
mov
insl
lock
cli
xchg
push
xor
jb
inc
push
fucomp
ljmp
les
pop
cmp
dec
lret
mov
jno
sti
sub
inc
pop
inc
cmp
pop
xchg
push
out
xchg
push
mov
and
push
push
mov
orps
jge
pop
repz
movsl
dec
mov
sub
sbb
mov
mov
pop
and
push
addr16
shl
pop
cmp
loop
insb
outsl
sbbb
dec
push
mov
push
xor
mov
js
sbb
popf
jnp
add
popf
jle
xchg
push
push
pop
aas
add
mov
cmp
cmp
jns
and
jns
fildl
in
inc
hlt
data16
int
arpl
jecxz
dec
add
push
pop
push
jo
sub
scas
jns
fistpll
push
out
mov
es
sub
adc
shlb
xchg
dec
icebp
xchg
sub
sbb
sar
test
addps
or
mov
pop
mov
mov
lcall
pop
add
inc
shr
les
push
cs
mov
pop
push
fstl
mov
lcall
cmp
fistpl
and
push
or
push
insl
push
pop
sub
cmp
test
xlat
mov
jmp
into
jno
ficoml
mov
adc
scas
orl
xor
lret
lods
in
add
lods
cmc
adc
lret
inc
arpl
and
dec
neg
and
aad
lcall
xorb
lret
data16
jae
mov
es
xor
xchg
push
add
test
in
pop
rolb
jge
dec
adc
cmp
fldcw
and
stos
scas
sub
inc
fistpll
mov
fstps
aad
cmpsl
subl
lods
adc
add
outsl
ret
sbb
lcall
cli
lods
cmp
xor
mov
xor
inc
adc
fstpt
dec
mov
cmpsl
sbb
cmp
ret
push
rcrl
lcall
je
sub
inc
das
addr16
pop
repz
dec
cmpsb
stc
je
in
lds
and
punpckldq
push
fimull
xchg
test
jno
lock
adc
jb
xchg
dec
dec
ret
cmpl
js
inc
adc
xorb
mov
sbb
mov
xor
dec
sbbb
or
push
loopne
jne
in
out
es
sahf
mov
jl
adcl
xchg
dec
leave
push
call
xchg
sbb
in
mov
inc
fscale
pusha
fsubrl
inc
push
loopne
adc
popf
or
pop
jns
imul
icebp
cmp
fs
adc
xor
imul
arpl
test
arpl
mov
rclb
mov
rorl
pop
adc
aad
insl
out
dec
xchg
inc
test
leave
push
pop
push
add
das
mov
loopne
mov
push
sub
add
stos
mov
jno
jge
fmull
and
mov
aaa
insb
decl
stos
jmp
mov
iret
bound
out
inc
clc
mov
and
mov
mov
mov
cltd
inc
out
mov
xor
mov
pop
out
fidivl
adc
cmp
mov
sbbb
cmpsb
lea
xchg
add
dec
test
std
push
aam
sbb
jg
and
daa
dec
dec
fdivrs
jge
xor
sbb
xchg
add
inc
mov
or
iret
dec
into
jne
jg
push
sub
mov
fs
fisubl
into
inc
pop
add
clc
sarl
sbbb
jecxz
pop
test
shll
rdpmc
fdivp
dec
cmp
ret
hlt
stc
les
xchg
pop
orb
cmpsb
icebp
int3
pop
pop
cmp
shrb
shlb
lcall
add
cwtl
das
cmp
push
xor
int
test
xchg
scas
ret
sub
loopne
and
and
cmpsl
mov
sbb
or
outsb
and
mov
mov
add
popf
inc
aad
pop
pop
and
insb
pop
jle
or
mov
push
jnp
adc
jmp
movsl
fidivs
ds
shlb
pop
cmpsb
jae
aaa
cwtl
jp
stos
stos
stc
lods
mov
addb
cld
int3
popf
in
es
arpl
sbb
mov
js
and
and
sbb
xor
xor
fbld
mov
xchg
aas
jp
jge
inc
push
lods
xchg
add
movss
jl
jne
or
jbe
adc
and
and
xchg
lods
xchg
mov
fistps
cwtl
dec
pop
lret
adc
es
xor
pop
mov
out
jns
movsl
sub
imul
loope
push
daa
xor
cmp
outsl
int
rorb
insl
arpl
pop
cmpsb
mov
rorb
mov
fwait
stos
mov
inc
out
je
iret
loop
mov
mov
add
pop
adc
dec
xor
stos
stos
xor
fstpl
jno
shl
mov
push
inc
hlt
lret
sbb
mov
mov
test
dec
pop
clc
cmp
push
arpl
mov
hlt
shrl
fimuls
scas
out
out
push
sub
ficomps
cli
cltd
and
xchg
out
sbb
xor
dec
lock
cmpsb
gs
shrb
cmp
cld
outsl
scas
aam
jmp
jge
cmc
xchg
das
sbb
mov
or
aas
dec
out
out
xchg
jecxz
inc
stc
cmovg
sub
sahf
fwait
or
pop
or
pop
jbe
mov
pop
cwtl
lea
mov
aam
dec
mov
xchg
pop
and
sbbb
mov
xchg
enter
mov
fsubl
in
dec
inc
pusha
dec
iret
cmp
xor
adc
push
cld
pop
mov
jno
sahf
pop
sbb
add
popa
clc
outsl
fsts
add
and
xor
sbb
xchg
jb
dec
and
nop
or
ret
vdivpd
pop
leave
and
jge
or
jnp
mov
xor
testb
gs
xor
push
ja
mov
fidivs
aam
mov
test
dec
daa
arpl
jae
repz
call
in
mov
data16
sbb
mov
adc
aam
xor
callw
aaa
jbe
std
sub
cltd
jne
and
and
inc
shr
addl
mov
lods
push
movsb
sti
mov
stos
inc
mov
push
insl
sbb
adc
repnz
sbb
jge,pt
cmc
cwtl
xchg
stc
les
mov
inc
bound
jl
add
call
mov
loop
cwtl
mov
sarl
pop
xchg
mov
mov
aad
repz
icebp
adc
insb
scas
dec
ss
fisubs
fidivrs
inc
out
jae
jbe
cmp
lods
popf
dec
std
pop
hlt
out
xchg
inc
sub
push
out
insl
jg
push
test
mov
rorb
add
sub
les
push
mov
mov
mov
add
push
aam
sti
inc
mov
call
loope
sbb
add
in
push
movsb
mov
fs
jbe
or
pop
movsb
push
mov
add
sub
pop
dec
adc
clc
pop
mov
pop
aaa
into
popw
xchg
add
xchg
lret
lret
and
xor
ds
lock
push
inc
fs
scas
jo
mov
xchg
cld
popf
cmp
outsb
orb
push
int3
adc
cmc
jae
sub
addr16
ret
add
pop
std
adc
pop
pop
mov
test
shl
jns
scas
imul
pop
dec
mov
mov
pop
lods
add
mov
jp
jmp
inc
test
lock
mov
sub
push
jb
movsb
mov
pop
into
or
leave
mov
sbb
xchg
pop
jle
adc
test
push
xchg
test
adc
mov
adc
ds
popf
lock
popf
cmp
fiaddl
and
mov
imul
sbb
xchg
mov
in
jle
fnsave
nop
push
clc
pop
es
mov
mov
jne
ret
xchg
pop
adc
repnz
sub
jae
add
call
cld
sub
sbb
cli
incb
fidivrl
mov
pop
andb
jge
pop
mov
imul
add
or
lea
pop
and
mov
jmp
jbe
push
inc
push
jne,pn
mov
add
add
stc
mov
in
das
add
push
inc
inc
xor
xchg
fldl2t
repnz
lcall
pop
cmp
mov
sub
add
mov
cwtl
sub
mov
jne
subl
mov
lahf
testl
and
add
or
std
jg
adcb
in
push
mov
cmp
push
leave
mov
pop
leave
push
xor
inc
loope
icebp
push
sbb
mov
lret
dec
fidivl
fsubrl
ret
pop
in
add
aaa
outsb
hlt
jnp
insb
jne
jmp
out
fsubl
sub
sbb
or
insl
mov
mov
pop
sub
or
orb
inc
push
movsl
dec
adc
inc
jnp
mulb
pushf
enter
mov
sbb
cmp
xor
push
fistl
or
mov
test
push
mov
sti
or
push
dec
sbb
xchg
lea
adc
fcomps
jmp
lahf
lea
mov
rol
ret
mov
mov
test
push
mov
adc
adc
mov
rcpps
inc
iret
jno
pop
mov
mov
lret
cmp
ds
sahf
push
inc
cmc
push
mov
std
jo
insl
pusha
mov
in
es
insb
scas
inc
movsl
adc
sub
subb
popa
inc
out
outsb
aad
and
mov
or
mov
xor
adc
add
push
sti
or
insl
add
xor
xor
adc
mov
repz
jmp
int3
lahf
into
push
popf
mov
mov
jmp
push
dec
xor
repz
sub
dec
scas
inc
andb
jbe
inc
int3
sbb
outsl
cmc
add
pop
loope
xor
xchg
stos
int3
cmp
hlt
rol
out
cwtl
push
mov
push
ror
xor
mov
add
cmpsb
inc
adc
test
mov
mov
sub
sti
fwait
insl
mov
repnz
rorl
jns
ret
xchg
in
pop
not
pop
out
xchg
xor
imul
lret
jbe
icebp
xchg
push
mov
push
cmp
mov
in
jecxz
repz
xor
inc
cmpsl
outsl
xor
aad
shlb
mov
ss
lods
inc
sti
outsb
cmp
adc
imulb
stos
scas
sub
pop
adc
test
in
mov
mov
add
jmp
push
dec
es
mov
iret
pop
mov
in
mov
into
jo
sub
lcall
jnp
rcrb
das
cmp
dec
scas
lds
jae
cmp
push
add
mov
sub
imul
pop
sbb
pop
mov
fmul
mov
mov
clc
sti
inc
dec
dec
negl
aad
shlb
leave
jecxz
int3
pop
lcall
dec
adc
js
stos
xchg
rcrb
int3
mov
push
push
or
add
xor
stos
in
xchg
bound
leave
in
sti
inc
sbb
inc
cmc
mov
fstps
pop
fists
mov
test
and
xchg
pop
or
mov
imul
or
lret
push
ljmp
push
leave
sbb
pop
lret
pop
outsb
adc
and
leave
pusha
aam
push
outsl
push
mov
les
pusha
ljmp
mov
in
inc
lods
ljmp
pushf
testl
push
cmpsb
in
dec
repnz
xor
aam
mov
gs
fwait
add
jp
mov
push
xchg
and
adc
push
inc
pop
adc
fwait
cmp
mov
imul
jbe
scas
mov
out
cmc
adc
lock
cmpsl
xchg
repz
data16
mov
in
push
imulb
and
imul
xor
dec
loopne
jne
ret
xchg
or
shlb
and
sbbl
dec
das
xchg
add
inc
jns
stos
pop
adc
test
repz
fucom
fiadds
cmp
push
jne
pop
ret
sahf
cmc
cmpsl
inc
cmpsb
jne
call
test
js
cmpsl
xchg
push
jp
rep
or
adc
mov
jno
adc
jae
inc
testb
scas
mov
popa
mov
fists
enter
outsl
int
mov
or
xor
out
cltd
add
inc
fistpll
idivl
stos
into
cmp
sbb
mov
mov
mov
pop
dec
movl
lcall
lret
sub
sub
ret
repz
aaa
ucomiss
dec
and
push
hlt
and
stos
adc
inc
leave
rolb
dec
loopne
pop
dec
xchg
lea
lock
sbb
inc
stos
movsb
sbbb
mov
test
lret
psadbw
loop
lahf
lods
sbb
insb
fwait
arpl
outsl
ret
arpl
adc
xchg
addr16
cmpsb
sub
cmp
push
or
jo
data16
rclb
mov
dec
popf
addr16
pop
lds
push
popa
inc
mov
xchg
ret
into
gs
adc
mov
or
cmc
ja
aad
in
and
popf
int3
or
inc
out
clc
inc
fucompp
sbb
mov
pop
cmp
xor
pop
loope
xchg
sub
lahf
pop
cli
es
cmp
adc
ss
test
pop
fstps
dec
cmpsb
cmp
sub
sbb
pop
enter
data16
mov
int3
loop
cmp
mov
jl
adc
out
jae
fbstp
xchg
push
jne
sbb
dec
fwait
jle
adc
and
add
sbb
mov
faddl
adc
xor
pusha
or
dec
popa
clc
cmp
pop
iret
outsb
lods
add
mov
jbe
add
cmpxchg
jno
imul
xchg
dec
xlat
xorl
subb
arpl
repnz
sbb
jecxz
mov
mov
mov
into
lock
add
out
pushf
mov
ds
fadd
cmp
sbb
mov
popf
scas
mov
faddl
shrl
fisubs
fsub
je
push
aaa
lret
aas
test
jl
imul
mov
inc
syscall
or
ss
jae
subb
repz
lret
mov
mov
pop
jnp
mov
out
imul
cmp
dec
dec
xchg
dec
push
loope
and
jge
mov
xor
fwait
int3
lds
js
push
mov
lahf
mov
jmp
lret
or
into
jg
ficomps
and
loopne
adc
xchg
sub
mov
xor
adc
loopne
leave
pusha
inc
push
fbld
dec
cmpsb
push
cmp
aaa
and
scas
lcall
adc
sbb
scas
push
pusha
xchg
adc
push
imul
mov
xchg
loope
dec
in
and
ds
je
data16
xchg
jle
jne
mov
test
cmc
out
xlat
push
jno
xor
mov
dec
out
test
sahf
cmp
mov
leave
mov
pop
push
mov
sub
call
xor
test
fsubr
mov
inc
lea
cli
or
sub
out
adc
adc
ss
aam
fwait
repnz
dec
in
test
or
adc
icebp
sbb
inc
push
mov
jle
ljmp
cmp
push
call
sbb
mov
nop
pop
cmp
cmp
enter
mov
xchg
mov
hlt
in
in
in
jnp
insl
mov
adc
mov
testb
and
insb
cli
movsb
aas
jo
andb
xchg
or
hlt
lret
xor
por
mov
subl
pop
scas
icebp
inc
or
jl
push
scas
add
jmp
insb
pop
repnz
cmpsb
nop
sub
dec
cmp
cwtl
repnz
dec
outsl
jecxz
outsb
xorl
popf
lcall
int
pop
pop
dec
cmp
xchg
popa
fdiv
ret
popa
sar
cmp
mov
repnz
mov
pop
mov
repnz
out
jle
mov
div
mov
xor
and
jmp
daa
aas
jmp
push
xor
decb
xchg
fwait
test
cmp
adc
ss
add
xchg
pop
arpl
mov
mov
test
or
or
mov
fimuls
in
out
xchg
shlb
cmp
das
stos
mov
lahf
inc
outsb
int
mov
or
fdivl
fisubs
jg
outsb
inc
inc
movsb
cli
mov
mov
cltd
nop
add
or
pop
stc
jp
jb
add
pushf
push
je
add
les
jmp
int
push
adc
jp
sub
aas
sub
dec
pop
xchg
into
data16
add
push
and
mov
imul
and
push
jo
ja
and
das
inc
addr16
jecxz
adc
or
daa
mov
inc
lret
popa
mov
adc
out
es
repnz
icebp
jns
and
sub
std
push
xchg
pop
xor
out
push
fidivrl
fpatan
popf
sub
adc
inc
push
sbbl
mov
inc
nop
cmovns
call
mov
xchg
jle
adc
mov
sarb
push
cwtl
ds
dec
repnz
cmpsl
out
outsl
inc
pop
test
inc
push
xchg
cld
outsl
sbb
push
popf
pushf
test
inc
jbe
dec
cmp
scas
sub
sub
mov
in
into
mov
out
shlb
insb
popf
xchg
inc
fnstsw
out
xlat
lahf
orl
push
out
movsb
add
ficoml
mov
cmp
or
iret
mov
push
stos
aas
into
adc
shrb
dec
std
nop
mov
xlat
xchg
addr16
pop
roll
xor
push
int3
push
mov
pop
mov
push
mov
mov
or
mov
fidivl
xlat
cmp
pop
inc
pop
sbb
sbb
les
jns
or
xor
das
aas
pusha
fistps
xchg
or
daa
xchg
es
cmc
add
xor
movsb
cmp
inc
std
repnz
cmp
pop
xchg
jns
cltd
sub
xchg
xor
jb
push
cmpsl
and
insl
mov
xor
or
neg
mov
xlat
data16
ja
leave
jecxz
cli
fdivrp
stos
inc
xchg
pop
mov
xlat
outsb
sbb
mov
sub
add
aas
ss
pop
test
loop
ret
lahf
xorl
out
repz
dec
cmpsl
jne
shlb
xchg
imul
mov
inc
call
mov
adc
ss
jbe
mov
adc
sub
adc
mov
ja
jmp
sbbb
test
mov
xchg
andl
push
xor
mov
xlat
ljmp
mov
xor
fucomi
fldl2e
sbb
jg
and
sub
jns
xor
fdivrl
stos
xlat
or
cmpsl
insb
cmpsl
int
ja
dec
decb
push
es
or
xor
outsb
in
int
push
ret
mov
dec
xchg
ret
pop
inc
jmp
loope
ljmp
adc
push
mov
inc
nop
cmpsb
lahf
inc
jl
xor
xchg
dec
cwtl
pop
ds
ss
lea
aas
adc
and
iret
ss
popa
movsl
pop
xchg
movsb
cmpsb
lock
dec
push
jb
add
pushf
ja
jge
rclb
adc
cmpsb
and
xchg
push
dec
cld
lcall
cwtl
stos
loopne
push
xchg
lea
jmp
test
repz
sbbb
decb
mov
loop
out
ljmp
sub
es
test
pop
lock
and
add
adc
jp
out
lret
shll
pop
push
dec
cmp
sbb
or
fisubrs
mov
imul
outsl
push
cs
xchg
jge
xor
xchg
into
mov
insl
add
xor
mov
push
xchg
stos
jle
repnz
jecxz
sub
jp
mov
daa
mov
mov
int3
cmp
jl
hlt
ljmp
loope
and
nop
loopne
popf
xor
test
xor
cwtl
mov
fwait
aas
loopne
sbb
insb
dec
mov
fst
cmp
sbb
inc
les
xor
jmp
pop
dec
inc
lret
in
sarl
stc
repnz
add
cmp
sbb
dec
mov
iret
int3
decb
or
popf
jo
mov
lods
imul
repz
inc
dec
dec
imul
add
cltd
in
lret
mov
test
mov
int
add
call
das
cmc
cld
push
jae
mov
ret
mov
mov
iret
cmp
add
dec
loope
xor
inc
pop
insl
xrelease
fcoms
xor
rcr
call
lds
mov
cmc
cltd
jecxz
lret
adc
sbb
movsb
jg
jge
dec
sbb
or
adc
outsl
xchg
sub
push
cmp
adc
sbb
int3
ljmp
pop
sub
mov
std
sti
pop
xor
dec
aad
rolb
mov
cmp
into
cmp
loopne
ficomps
dec
call
iret
loopne
je
push
imul
test
sarl
dec
test
push
mov
enter
xchg
pop
stos
adc
sub
movb
jle
mov
insb
mov
insl
fs
imul
repnz
shll
mov
xor
popf
or
cmp
testb
ret
daa
mov
adc
inc
shlb
insb
fldl2t
mov
fildll
jp
test
stos
f2xm1
fs
hlt
xchg
sbb
cmpsb
and
pusha
inc
insb
adc
sahf
sahf
es
adc
jge
divl
in
push
pop
xor
mov
cmc
mov
dec
outsl
push
jle
lods
adc
repz
pop
movsb
divl
fdivrs
adc
sbb
push
jge
scas
xchg
and
popa
in
nop
lahf
mull
cmp
std
sbb
cmp
jge
xchg
push
xorl
mov
mov
cmpl
pop
jge
out
dec
dec
sub
stc
nop
insb
mov
das
or
jl
mov
or
and
push
mov
jmp
fdivp
pop
cli
outsb
test
aaa
mov
add
pop
mov
lcall
cmpsb
inc
movsb
outsb
cmpsb
push
inc
xchg
add
ds
push
and
pop
testb
sarl
lret
fnstenv
lods
sbb
lds
in
outsl
mov
xor
jae
dec
sub
enter
mov
aaa
loop
fstpt
push
xor
repz
push
js
push
sbb
test
push
inc
mov
sti
xchg
stos
jl
mov
fmulp
pop
or
les
arpl
jmp
pushf
lods
inc
lock
testb
adc
sbb
ds
push
out
lock
adc
lret
cld
add
or
or
stos
sarb
pushf
and
push
ljmp
push
call
outsb
fildll
icebp
insb
xchg
jne
shll
sti
aad
push
push
sub
inc
dec
add
cmpsl
mov
iret
cli
jmp
pusha
add
loopne
pop
loop
insl
int
xchg
push
les
insl
lret
loopne
aaa
into
push
in
mov
push
cmpsb
dec
dec
in
test
out
loope
rorb
push
xor
fdivrl
shl
jbe
adc
xchg
push
testb
push
adc
in
movsl
int3
mov
mov
test
cs
pushf
push
mov
mov
mov
popa
cmp
sbb
dec
fnstsw
dec
mov
xorl
sub
mov
sbb
mov
rcrl
push
push
sti
mov
jae
test
sbb
mov
call
loopne
dec
mov
loope
jmp
insl
shl
xchg
pop
mov
lods
inc
inc
dec
mov
cmp
das
imul
jbe
push
jne
push
gs
xchg
movsb
xor
add
lcall
xchg
cld
sbb
dec
adc
jb
popa
dec
push
mov
stc
mov
push
movsb
mov
into
jne
pop
cmpsl
out
mov
inc
mov
arpl
pop
sbb
push
jmp
sbb
push
stos
adc
aam
sbb
pop
adc
mov
inc
popf
cltd
test
lret
movsl
jns
dec
stos
mov
push
pop
lock
loope
mov
fstl
sub
icebp
cmpsl
jb
fsts
adc
jp
mov
cmp
add
lock
je
pushf
pop
adc
inc
jecxz
std
out
lcall
lret
dec
outsl
ja
sbb
popf
xchg
cmp
imul
shrl
jp
in
and
pop
sbb
in
adc
mov
cld
or
xchg
mov
mov
add
sar
jns
mov
jecxz
adc
mov
stos
lods
inc
cmp
adc
xchg
sbb
cmp
loope
pop
cmp
divl
xchg
mov
dec
or
jns
rclb
push
in
sbb
mov
sub
jg
ficomps
xchg
xor
rorb
lcall
inc
repz
or
mov
mov
fwait
or
test
and
shrl
popf
xor
push
mov
jb
loope
js
push
stc
std
sahf
mov
mov
lret
sti
fdiv
add
inc
xor
xchg
cmp
sbb
pop
adc
ja
outsb
mov
xorb
mov
sub
or
xchg
fnsave
sub
out
test
dec
or
cmp
jp
icebp
xchg
test
ja
inc
pop
out
dec
lock
mov
inc
stc
mov
enter
inc
lcall
pop
inc
lcall
and
insb
ret
xor
cmp
adc
add
cmpsb
cmp
sti
out
mov
daa
push
in
hlt
mov
mov
and
inc
pop
divb
and
dec
dec
inc
pop
jp
or
call
sub
rcr
push
jmp
sub
sub
add
xor
and
sbb
out
roll
push
sub
out
pop
aas
fmul
and
jo
ds
addl
sub
popf
mov
cmpsl
mov
mov
jae
cmp
jne
sbb
mov
jl
cmp
and
xchg
sbb
xchg
add
cwtl
mov
xlat
mov
es
sarl
cmp
daa
xor
ret
push
push
ljmp
jno
xchg
scas
cmc
ror
mov
adc
add
dec
inc
mov
add
sbb
cmp
add
mov
xchg
stos
popa
iret
movsb
cmp
xorl
enter
out
in
push
xchg
push
in
je
and
inc
push
push
fcoms
jg
dec
inc
scas
outsl
jmp
push
fwait
mov
leave
jmp
jnp
nop
mov
dec
push
call
pop
scas
outsl
mov
repz
popf
sub
inc
popa
inc
dec
mov
aam
mov
cld
dec
or
jbe
pop
xor
stc
mov
lea
daa
xchg
popa
test
mov
rorb
lock
jnp
cmp
push
sbb
dec
aad
addr16
insl
sub
mov
call
call
lret
and
push
sti
cli
jb
icebp
mov
jge
cmp
cmp
xchg
insl
imulb
call
and
jns
xor
push
je
in
xchg
mov
or
xchg
pop
sbb
sbbb
add
test
push
and
push
jne
aaa
ja
push
cmpsb
cwtl
cmp
in
add
test
mov
loopne
inc
adc
arpl
sub
add
stos
push
cltd
add
scas
and
push
imul
or
pop
jo
adcb
test
mov
daa
mov
pop
in
jnp
sub
popf
jno
mov
adc
inc
in
jle
jle
pop
out
mov
add
sbb
pop
js
pop
lds
pop
pop
mov
ljmp
adcl
stos
mov
pop
hlt
xchg
cmp
pusha
das
adc
xor
call
mov
pop
and
cmp
clc
imul
jle
jno
or
insl
add
mov
or
mov
jns
movb
dec
scas
das
xchg
add
xchg
dec
fbstp
icebp
add
lods
mov
repz
or
sbb
add
mov
in
or
fwait
xor
pusha
jb
sbb
mov
movsl
mov
sbb
cltd
lds
call
in
dec
int3
sahf
movsb
cmc
adc
adc
xor
pop
pop
test
dec
push
jle
xor
sub
cmp
add
loop
pop
imul
pop
lods
inc
stos
push
pop
filds
xchg
mov
adc
adc
cmpsl
jp
push
and
xchg
mov
leave
fistl
xor
push
cmp
pop
out
sub
push
stc
adc
push
sub
je
jg
cmp
cmpsl
clc
mov
fidivs
fcmovb
dec
sarl
inc
lds
jle
cmpsb
rol
mov
das
jb
je
xor
addr16
stos
pop
jecxz
jbe
addr16
adc
aaa
adcb
scas
cmc
pusha
data16
and
pop
sub
xchg
enter
xor
hlt
loop
mov
je
xchg
and
sbb
push
test
aam
jecxz
xor
out
jae
push
rcll
hlt
shl
or
test
pushf
fbstp
stos
in
icebp
repz
jl
mov
ret
xor
aad
dec
mov
jle
cmp
movsb
lret
sub
sarl
daa
les
push
repz
sub
insb
mov
xchg
and
pop
ret
adc
xchg
xchg
sub
dec
mov
popf
shll
pop
cmp
pop
dec
sbb
fwait
push
outsl
outsl
mov
mov
cli
jg
lret
out
xchg
sti
subb
cs
lods
jl
sbb
dec
or
ds
push
xor
pop
fwait
push
inc
fs
notl
xor
es
out
adc
dec
mov
lahf
pop
or
test
mov
cmpsb
xchg
in
lret
pop
aad
push
jmp
jmp
repz
mov
shrl
setge
arpl
push
mov
fs
std
jo
idivl
call
jl
dec
cltd
cmpsl
std
ret
bound
push
imul
push
push
push
push
stc
mov
test
and
iret
je
leave
arpl
mov
add
mov
adc
movsl
or
pop
sahf
xchg
sbb
in
jo
aaa
cmc
lret
insl
jb
movsl
bound
xor
scas
dec
imul
xchg
gs
gs
cmp
mov
adc
mov
xchg
cltd
jne
inc
sbb
jl
adc
mov
fsqrt
jns
or
sar
jp
cli
push
sub
sbb
mov
icebp
xchg
jne
into
ja
leave
jmp
test
rol
push
fpatan
std
shlb
fnclex
inc
andb
sbb
mov
in
movb
pop
xor
inc
repnz
int
xor
or
and
cmp
push
mov
mov
mov
push
bound
xor
jecxz
movsb
cltd
pop
mov
mov
iret
fistpl
sub
fmul
inc
loope
jno
loopne
jmp
xchg
add
enter
dec
jns
lds
adc
fsub
sbb
xchg
pop
int3
dec
out
jnp
add
sbb
cli
popl
adc
je
icebp
xor
call
add
pushf
in
xchg
dec
adc
xor
xor
add
cmc
mov
ljmp
out
or
cs
cwtl
mov
popf
stc
jmp
mov
sbb
scas
adc
loope
mov
fs
push
sti
flds
adc
xor
cmp
push
push
mov
imul
xchg
stos
cltd
pop
sub
or
add
mov
push
sub
mov
dec
sbb
inc
push
gs
xchg
ja
or
lahf
enter
jl
pop
leave
dec
movsb
mov
inc
pusha
or
in
push
test
jmp
pushf
gs
bound
nop
das
repz
inc
imul
mov
sti
cmpsb
cmp
adc
arpl
movsl
mov
mov
inc
mov
mov
dec
jge
cmp
imul
insl
mov
add
in
inc
lock
xchg
pop
icebp
mov
sbb
jno
xor
cmp
pusha
popa
jmp
mov
fimull
mov
pop
sub
test
sbb
mov
loopne
bound
out
aaa
dec
inc
in
mov
add
push
inc
and
mov
js,pt
pop
jbe
pop
mov
dec
sahf
in
shr
or
movsl
pop
add
jnp
shll
mov
sub
test
ret
jg
pusha
jp
jmp
xlat
movb
dec
add
xor
push
inc
add
push
test
jb
add
movsb
loopne
dec
cli
add
pusha
mov
into
lret
jne
mov
std
xchg
cld
mov
insl
andl
adc
mov
push
lods
mov
jge
jp
mov
pop
into
out
inc
pop
imul
movsl
xchg
rcl
add
sbb
pop
xchg
pop
sbb
and
xchg
cmp
lods
fidivs
lahf
push
arpl
xor
pop
and
std
imul
mov
cmpsb
fidivs
pushl
mov
sbb
jb
mov
jg
xlat
and
popa
int
pusha
jp
stos
stos
mov
and
cmp
popa
or
dec
fisubrl
add
test
rcl
push
pop
jge
ficoml
or
jne
pusha
cmp
pop
ljmp
or
int3
lds
jnp
aad
push
xor
mov
bound
sbb
int3
push
mov
test
add
cli
adc
pop
ffreep
pop
jg
pop
lods
push
dec
ja
loopne
cwtl
iret
arpl
cmc
jne
shlb
scas
inc
outsl
les
push
int
rorl
repz
inc
ljmp
jno
sbb
mov
and
dec
xlat
sti
aaa
fwait
sbb
in
notb
push
mov
dec
shrl
or
cmpl
popf
fdivr
scas
and
push
inc
push
js
rol
mov
hlt
adc
push
idivl
addr16
pop
push
cmp
sbb
and
mov
icebp
jb
cmpsl
das
rcrl
lods
aam
ja
add
cmc
rolb
dec
std
pop
ds
pop
sub
push
cmp
and
dec
lods
dec
int3
sub
les
js
addr16
push
lcall
cwtl
test
loopne
pusha
leave
jb
mov
mov
lods
int
adc
fsubrl
roll
mov
inc
xor
lcall
and
jo
lea
mov
testb
sub
xchg
jp
lahf
imul
pop
lret
pop
dec
pop
mov
dec
in
mov
ss
sbb
dec
inc
fstpt
xchg
lods
push
cmpsl
sub
pop
push
and
mov
rol
jle
dec
pop
iret
dec
in
jecxz
mov
scas
fs
jno
ret
aad
sub
mov
sbb
sub
test
adc
adc
inc
jb
pop
iret
rcrl
dec
mov
mov
mov
inc
push
mov
imul
jge
inc
out
dec
mov
inc
repz
cmp
cmpsb
sub
xchg
pop
sahf
or
pop
lock
pushf
mov
and
inc
push
sahf
inc
xchg
repnz
adc
adc
inc
inc
mov
inc
sbb
imul
pop
mov
mov
and
flds
rcrb
mov
icebp
and
dec
popf
xor
mov
sbb
and
vcvtdq2pd
adc
adc
stos
stos
ret
ss
fsubl
je
pop
lods
or
sub
mov
loop
jbe
fidivrl
pop
pop
sahf
lds
test
ret
push
popa
out
notb
popf
jle
into
xchg
dec
cmpsb
mov
mov
add
or
sub
sbbl
dec
inc
dec
pop
xchg
inc
sbb
cltd
add
in
test
mov
roll
pop
mov
out
sub
dec
push
cmp
mov
shlb
out
fsts
in
cmp
dec
aaa
mov
scas
sub
sub
ss
push
sahf
pop
cmp
enter
hlt
dec
pop
out
mov
fwait
jne
mov
inc
cmpsb
in
out
aaa
sbb
aaa
into
shrb
scas
sahf
dec
lods
mov
mov
cmc
outsl
adc
sti
adc
xchg
outsl
pop
test
pop
scas
xor
out
xchg
push
cwtl
lahf
pusha
cli
sub
jo
pop
decb
dec
mov
dec
xchg
jnp
or
mov
incb
add
dec
repz
jno
cltd
int3
xchg
ret
push
push
lcall
xor
ret
inc
filds
mov
push
xchg
fists
pop
adc
leave
mov
ja
or
pop
stos
jo
xor
push
aas
leave
pusha
popf
sub
rcrl
fisubl
lock
nop
ss
test
xchg
cmpsb
fildll
jnp
pause
xchg
insb
or
xchg
std
cltd
sub
push
cmc
cwtl
hlt
push
jne
mov
or
sti
sti
push
mov
and
dec
inc
test
shrb
xchg
loop
fdivrs
pusha
inc
out
fidivrl
mov
cmp
movsl
data16
xchg
add
pop
fucompp
iret
dec
push
je
or
sti
and
pop
mov
ret
mov
add
mov
jge
inc
xchg
xchg
mov
push
mov
mov
pushf
adcb
es
xor
dec
imul
pusha
inc
jp
out
ds
jno
cld
dec
out
dec
jle
cmpsb
out
xchg
test
popl
sbb
stc
xor
sub
jp
dec
dec
in
dec
insl
fs
pop
insl
sub
jmp
push
cs
sbb
lock
cs
jg
add
int
shll
jnp
or
decl
and
lods
push
test
lret
popf
xor
push
jno
push
pop
cmp
leave
in
sti
pop
add
mov
fs
sub
pop
repnz
xlat
lret
smsw
and
sub
popf
outsb
sbb
jns
cmp
stos
mov
lods
jle
out
pop
push
flds
jnp
cmp
pop
pop
in
jno
neg
dec
sub
shrb
pop
or
shl
xor
sub
rcrb
loopne
popf
lods
xor
cmp
jne
jecxz
popf
sbb
out
icebp
call
xor
pop
xchg
mov
xchg
mov
lcall
rcrb
adc
cli
inc
jo
dec
cltd
pushf
fists
adc
into
xchg
dec
add
out
xor
insb
add
pop
pop
shlb
sti
stos
jbe
xchg
fldl
xor
pushf
stc
pop
fnstcw
dec
fldl
push
in
insl
add
mul
mov
xor
repz
addr16
mov
daa
repnz
jecxz
jbe
sbbb
lahf
jl
mov
cmpsb
dec
add
pop
jne
add
mov
mov
push
clc
mov
frstor
dec
jo
lock
sub
xchg
jl
hlt
xchg
mov
out
lret
cmp
add
and
and
div
insb
jg
test
scas
mov
adc
outsl
movsl
mov
imul
mov
xchg
sub
xchg
out
ja
jns
dec
stos
sub
shll
mov
icebp
std
jbe
cmp
xrelease
jle
std
or
dec
dec
pop
lcall
dec
pop
and
fsubrl
arpl
jecxz
push
pop
inc
stos
je
cmpsb
cli
xchg
aad
and
adc
push
pop
inc
xchg
mov
dec
rorl
sbbl
pop
lock
cld
orb
sbb
add
jg
and
xor
inc
jmp
leave
xor
pop
pop
adc
je
cwtl
mov
fsubs
sti
ret
push
adc
scas
jb
xor
repnz
cmp
cmp
outsl
inc
fmul
into
jmp
out
inc
pushf
xchg
mov
sub
pop
add
mov
das
lcall
stc
adc
cmp
inc
add
sahf
jno
cwtl
inc
cltd
in
popf
adc
inc
sarb
sahf
or
and
sub
mov
ss
jp
push
in
cmpsb
aas
push
in
mov
cmp
fwait
out
mull
lret
pop
push
popa
jno
pop
push
or
mov
jae
lcall
call
test
xor
jge
in
stos
es
aaa
add
aas
jg
xchg
sbbl
filds
xchg
in
or
mov
mov
xor
and
jge
stos
arpl
mov
leave
sbb
pop
pop
cmpsb
insb
inc
ljmp
lret
sub
mov
sti
dec
mov
lahf
test
push
sub
sub
mov
mov
ret
lret
dec
jmp
cs
cmp
sub
nop
repnz
dec
idivb
rolw
jge
loope
jl
ret
lcall
push
or
or
push
jle
mov
pop
popa
ljmp
push
rcr
insl
inc
movsb
aas
dec
daa
stos
mov
shlb
xchg
add
sub
jge
jns
enter
and
arpl
insb
xlat
cmc
xlat
aam
mov
pop
cli
jl
test
jb
scas
movsl
jb
and
cmp
inc
inc
xor
xor
dec
jmp
scas
pop
lock
lods
enter
cmp
xchg
gs
int3
mov
mov
xchg
sub
ret
es
jno
rolb
adc
daa
imul
mov
cmpsl
cmp
cmp
jmp
nop
dec
push
inc
jmp
inc
push
jbe
insl
repnz
jmp
adc
sbb
push
stos
fxch
iret
aad
popa
ss
lcall
daa
aad
daa
imul
jne
mov
loope
lahf
jo
cli
aam
ja
add
jmp
dec
lea
mov
adc
pop
test
lods
push
or
iret
lcall
inc
adc
mov
mov
jns
insb
add
dec
push
inc
fwait
jbe
and
fs
mov
inc
cmp
divb
aam
or
sub
inc
jle
pusha
ss
push
inc
and
xchg
push
dec
lea
dec
fs
xchg
push
ret
dec
lahf
out
mov
push
nop
adc
adc
mov
push
xor
stc
mov
and
cli
test
jle
jl
cmpb
shll
outsl
jp
adc
mov
fdivl
push
cmp
xchg
xor
pop
hlt
aaa
add
lcall
inc
push
jo
rclb
js
mov
inc
nop
mov
ss
mov
cltd
mov
scas
ret
lcall
jbe
sti
out
sbb
fistl
inc
lret
sub
mov
adc
fidivl
jmp
cmp
gs
inc
lock
push
jnp
rcrl
add
rcl
loopne
jmp
dec
andb
jno
cltd
xor
fcmovnb
ss
fbstp
jns
pop
xchg
xchg
shrl
je
cmp
mov
movsl
mov
push
iret
data16
push
popf
jo
in
test
sub
or
imul
inc
xchg
mov
enter
mov
dec
mov
mov
mov
add
bound
sbb
mov
scas
mov
lds
mov
inc
in
cmp
negb
sbb
lods
leave
pop
fcomps
jl
repz
cmp
iret
push
inc
stos
out
and
cli
rdmsr
rcr
outsb
mov
movsb
std
add
mov
add
add
sbb
je
pop
sbbb
mov
jo
pop
pop
dec
push
mov
pop
cmpl
pop
loopne
aad
ret
not
les
inc
ret
dec
stos
mov
adc
inc
pop
add
leave
fsubrl
mov
sbb
fnstsw
test
rcr
lock
inc
gs
dec
mov
jle
dec
sbb
cmc
sbb
add
mov
aas
out
sbb
jmp
ljmp
cltd
mov
lcall
push
je
pushf
mov
and
add
popf
mov
sbb
in
call
hlt
mov
movsl
mov
test
es
scas
and
lds
in
call
lret
cltd
xor
mov
loope
push
imul
mov
ficoms
out
add
imul
dec
push
pop
cmpsb
aam
idiv
pop
cmp
mov
pop
lret
sub
leave
add
jl
or
mov
push
clc
inc
cmp
inc
das
ret
and
movb
pop
xchg
into
shll
shrl
jne
add
jbe
stos
out
xchg
shrl
jp
sub
dec
jmp
lods
jne
or
dec
cmp
icebp
dec
mov
pop
dec
add
cli
mov
lods
fmull
pop
mov
hlt
or
lea
ret
lcall
std
or
xchg
fists
lock
jbe
fstps
cmp
or
cmpsl
ss
out
push
xchg
xor
cmp
test
sbb
sbb
mov
mov
push
pushf
jg
stos
rorb
arpl
mov
or
cmpsl
dec
adc
mov
xchg
ja
adc
add
sub
mov
pop
mov
pop
adc
mov
fcmovne
in
sub
aas
in
sbb
shrl
mov
les
ret
push
add
jmp
negl
and
imul
seta
push
popa
icebp
jne
mov
dec
jb
push
and
mov
cwtl
test
test
xchg
dec
inc
push
mov
fwait
mov
pop
xor
loop
and
ret
cmc
jns
xchg
or
mov
ds
adc
test
add
xlat
pop
inc
push
push
mov
mov
stos
xlat
clc
inc
mov
in
iret
popa
lods
popa
repnz
aas
jle
xchg
mov
repnz
dec
jbe
jnp
dec
inc
sub
jno
inc
call
mov
or
jb
enter
dec
adc
cltd
mov
loopne
mov
lods
mov
pop
mov
sarl
jp
xor
loope
xchg
ja
xchg
xor
inc
vpcmpeqb
jle
and
add
in
cmp
stos
jp
movsb
push
jno
and
adcl
mov
rorl
fwait
popa
fld
dec
jmp
cli
sahf
ror
call
xor
aad
mov
and
jne
fdivl
mov
mov
xchg
pushf
inc
fcoml
xor
jle
xchg
stos
cld
pop
loopne
mov
pop
ret
push
sti
mov
cmp
jb
es
lods
mov
mov
cmp
popa
pop
ja
sbb
jmp
aas
xor
jl
iret
popf
pop
in
sti
ret
sahf
test
dec
sbb
or
rclb
xchg
push
push
sub
push
imul
jae
mov
ja
cs
adc
mov
mov
xor
ja
fcomps
xor
loop
jnp
and
sbb
mov
lods
orb
arpl
push
jns
std
xchg
mov
push
or
cld
movsl
pop
enter
mov
or
lock
sub
xchg
mov
clc
hlt
das
inc
test
push
mov
pop
movsb
movswl
push
jb
mov
adc
movsl
addr16
icebp
js
in
pushf
sbb
push
adc
lods
or
adcl
hlt
inc
and
add
add
movl
cmp
adc
std
test
jge
ds
scas
fidivs
fldenv
decl
enter
jle
imul
sub
ret
xlat
adc
mov
fimull
mov
dec
ret
xor
movsb
push
into
in
push
aas
sub
xor
push
pop
shrl
int
out
std
cmp
xchg
jbe
in
in
pop
push
sub
pop
fisubrl
out
mov
mov
pusha
sub
inc
xchg
in
adc
in
movsl
inc
outsl
aad
ljmp
lock
pop
or
inc
cld
mov
loopne
rolb
push
xchg
sbb
dec
push
repz
es
pushl
icebp
sbb
popf
push
jb
inc
add
jecxz
xor
sar
push
cs
ds
jle
or
jg
sub
xchg
mov
aas
add
out
or
aas
dec
fistpll
xchg
add
mov
adc
repz
jae
xor
xchg
dec
dec
sub
lret
loope
mov
in
jbe
cmc
into
iret
insl
scas
call
outsl
cmp
push
fbstp
jge
test
jge
jl
push
insb
lahf
movsb
nop
or
lret
mov
aad
fcoms
inc
lahf
dec
dec
xchg
mov
cmp
lahf
sbb
jp
mov
test
jmp
dec
pop
icebp
jnp
dec
cmp
xchg
and
or
bound
jp
andb
jmp
inc
dec
adc
ror
aaa
mov
pushf
ds
dec
hlt
xchg
imul
addl
lahf
int
rcrb
push
out
xor
loopne
addl
arpl
jb,pn
cltd
push
dec
scas
add
lcall
xchg
add
push
imulb
xor
or
push
jbe
popf
mov
cmpl
popa
push
pop
test
pop
lret
mov
mov
aas
pop
dec
out
rorl
sub
out
aad
into
lea
xchg
arpl
jmp
push
cld
inc
lret
xor
mov
ror
shrb
imul
addr16
xchg
mov
cmp
jle
mov
or
xor
adc
daa
and
pusha
push
jmp
out
push
adc
xor
ljmp
mov
ret
sti
xor
dec
or
inc
push
mov
test
pop
jmp
or
js
xchg
jle
es
out
push
enter
or
pop
imul
mov
lea
mov
addr16
std
or
mov
ja
pop
cs
mov
jns
leave
int
and
adc
insb
repz
mov
into
xchg
xchg
add
fdivl
bound
adc
push
adc
inc
inc
fwait
xchg
jecxz
jnp
inc
push
jmp
movsl
add
in
mov
fidivl
adc
lods
inc
stos
cs
sti
jae
or
mull
jb
in
sete
xor
rcrl
or
push
fcomip
loopne
push
outsl
push
mov
jne
dec
mov
dec
dec
test
dec
add
sbbl
je
enter
jne
outsb
orl
xor
sbb
fs
mov
xchg
jge
xor
mov
in
push
add
popl
mov
and
mov
cli
lret
jns
sbb
inc
push
and
jo
jae
mov
jp
test
sbb
psrld
push
aas
out
mov
sbb
ljmp
adc
rcrb
mov
push
ja
pushf
cmc
sbb
sbb
outsb
xor
add
dec
cltd
inc
pop
and
js
pop
stos
add
xchg
mov
inc
dec
movsb
stc
jbe
pop
pop
push
or
sub
mov
insb
pop
aam
mov
fidivl
fsubrp
mov
bswap
sub
int3
lret
test
or
clc
jmp
sbb
loope
pop
push
lods
outsb
inc
shll
xchg
pop
mov
inc
movsb
jb
int
adc
mov
int
pop
cmp
dec
subl
lods
jb
ficoml
stc
lret
adc
sbb
sbb
sbb
mov
or
sub
mov
push
push
cmp
cmpsb
dec
adc
test
cmp
js
mov
movsb
addr16
ret
outsl
jnp
pusha
mov
clc
and
pop
int3
dec
adc
mov
dec
fadds
pop
jecxz
cmp
xchg
testb
mov
and
inc
xor
sbb
mov
loop
ljmp
xor
movsl
dec
cmc
xchg
jbe
adc
xchg
icebp
and
das
lret
cmp
mov
int3
incl
out
xor
inc
cmpsl
sub
pusha
and
and
rol
xor
leave
pusha
call
or
lods
mov
pop
fidivrl
int
xor
dec
nop
push
pushf
in
sub
jbe
ljmp
fnsave
cld
sub
mov
ret
outsl
dec
in
aam
jo
jo
loope
inc
xlat
aam
inc
in
nop
pop
adc
cmp
mov
in
jno
push
stc
adc
pop
xor
xchg
pop
cmc
enter
dec
std
int3
aam
add
xor
into
lea
push
jno
mov
adc
clc
add
dec
push
nop
pop
out
loopne
xchg
addl
jno
ret
xchg
mov
add
pop
mov
cmpsb
insl
popa
xor
xchg
fsub
into
push
lds
jnp
les
bound
pop
dec
sbb
test
and
stos
xor
mov
dec
jae
divb
sbb
mov
pop
testl
stos
ret
inc
xchg
xchg
arpl
cmp
or
pop
mov
mov
addr16
int3
rorb
nop
dec
sbbl
mov
push
and
mov
shrb
fistpll
fmull
clc
scas
inc
push
xchg
test
les
inc
fnstenv
mov
divl
rclb
add
rolb
xor
push
jbe
dec
inc
cli
ffreep
sbb
repz
and
inc
pop
aas
inc
and
adc
std
sbb
ljmp
mov
int
incb
mov
mov
pop
insl
push
push
mov
pop
push
sub
xor
cmc
scas
adc
adc
mov
push
iret
jmp
lahf
ficomps
pop
push
jbe
mov
shr
gs
in
imul
jo
aaa
stos
push
mov
popa
test
mov
into
push
xor
push
mov
or
jecxz
pop
dec
cmpsb
sar
inc
mov
imul
std
push
jg
arpl
xor
sub
outsl
out
das
call
insl
test
pop
das
inc
mov
push
les
aas
cmp
shrb
sbb
jecxz
and
pop
adc
xchg
sub
sub
or
pop
sar
push
ljmp
mov
add
js
or
cmp
aam
pop
sbb
jne
aas
mov
fsubrl
outsb
lods
fstl
jecxz
call
loope
lock
pushl
dec
xchg
pop
loopne
in
mov
jge
pushf
xchg
pop
out
add
xchg
mov
dec
ds
mov
pop
mov
jno
jae
mov
hlt
lret
test
xchg
add
sbb
dec
jp
imul
xchg
mov
dec
push
test
or
cmp
add
xor
and
and
in
xor
pop
mov
fnstcw
je
into
movsb
repnz
and
sbb
jl
lret
inc
jge
add
mov
test
in
adc
lods
xchg
jp
insl
sub
clc
pop
dec
movsl
xchg
xor
aad
rclb
mov
pop
jl
mov
sub
cmp
push
fdivrs
sub
dec
pop
imul
lods
and
aad
stos
fistps
jae
fs
fs
mov
and
adc
xchg
pop
xor
and
das
mov
cmpsl
pop
std
cltd
shlb
jl
mov
mov
sbb
jbe
rcrl
add
mov
ja
out
sbb
dec
lods
jge
cmp
stc
push
xchg
fiadds
dec
mov
ret
jl
jg
imul
int
imul
mov
in
enter
out
aam
push
mov
and
mov
outsb
adc
mov
in
insl
adc
inc
sub
mov
sbb
lea
inc
repnz
push
sub
loopne
xor
mov
jnp
cmp
jle
iret
fdivs
sbb
push
testb
ss
lahf
mov
insb
jg
xchg
mov
xor
jmp
fwait
dec
inc
arpl
mov
mov
inc
mov
hlt
aas
outsb
fbstp
repnz
in
sbb
cmc
int3
out
jecxz
mov
and
xchg
push
aaa
or
or
jg
add
or
mov
push
cmp
push
xchg
push
mov
aaa
mov
add
loopne
jnp
add
mov
mov
xchg
or
sub
test
aas
dec
inc
repz
je
out
aas
outsb
adc
pop
xchg
addr16
pop
out
rclb
inc
pop
in
pop
mov
out
add
push
jns
scas
xlat
fwait
cmp
int3
ret
adcl
lock
sbb
add
inc
outsb
sub
fmuls
in
sbbb
or
mov
mov
ja
std
pop
and
leave
es
and
cmpsl
adc
mov
sbb
jae
xor
sub
sub
into
push
lock
movntq
xchg
mov
imul
lods
push
mov
xor
dec
test
xchg
mov
ljmp
test
jns
mov
sbb
scas
xchg
cmp
sub
adc
out
sub
jle
mov
or
pusha
xlat
popf
das
outsb
andb
mov
jno
iret
es
out
out
ret
inc
ss
adc
sbb
lds
cld
jb
pusha
jp
xchg
test
scas
sbb
inc
push
inc
sbbl
add
std
xor
pop
stos
test
outsl
lcall
int
cmp
scas
int3
adc
and
xchg
aad
mov
jmp
adc
scas
test
outsl
inc
xor
sti
addr16
rcrl
adc
cmp
outsb
ss
mov
roll
pusha
push
pop
add
in
cmp
out
gs
sub
movl
call
pop
sub
leave
adc
popf
adc
xchg
mov
rcll
fdivl
daa
mov
dec
clc
adc
or
mov
push
lods
je
adc
xchg
jne
pushf
xlat
arpl
or
sbb
and
adc
mov
jecxz
and
mov
icebp
stos
jnp
push
out
sub
stos
aad
dec
lea
cmp
push
in
int
ljmp
rclb
push
leave
stos
inc
fwait
mov
pop
and
fists
jp
inc
data16
cs
sub
or
cmp
mov
jno
out
or
and
dec
outsb
sub
jecxz
sub
ficoms
loope
pop
scas
jno
and
add
xchg
xor
sbb
sahf
mov
cmp
and
push
or
aas
movsl
cmp
ja
push
jbe
ret
lds
cmp
adc
lret
out
iret
or
add
imul
inc
mov
push
sahf
inc
int
sahf
gs
sbb
dec
sbbl
xchg
in
roll
pusha
mov
mov
push
mov
jbe
cmpsb
stos
lock
sti
xchg
repz
push
and
cmc
jl
insb
arpl
shll
sub
aas
or
arpl
sarb
call
inc
ljmp
loopne
pop
mov
dec
push
pop
sahf
sub
xchg
pop
repnz
xor
mov
mov
outsb
ss
push
jecxz
lahf
sbb
lods
outsl
and
out
dec
jmp
shlb
cmp
mov
inc
call
add
xor
or
and
push
push
adc
and
mov
daa
jge
sbbb
aas
cmpsl
sub
add
js
mov
dec
stc
popf
jne
adc
stos
outsl
daa
xchg
and
or
pop
ljmp
inc
scas
pop
xchg
cwtl
dec
and
fdivl
clc
and
sbb
xchg
xor
xor
loope
lret
ret
push
outsl
dec
push
loope
sub
mov
mov
hlt
inc
pop
daa
mov
callw
movsb
rcl
sahf
lods
loop
mov
adc
push
sti
and
mov
leave
mov
fsubrs
scas
mov
lahf
cmp
in
adc
add
jns
mov
xchg
sub
das
ja
dec
and
xor
dec
int3
sub
sbb
sbb
adcl
stos
out
rclb
sub
stos
fsubs
adc
divl
inc
jmp
pop
or
fs
out
test
push
lcall
in
mov
sbb
bound
mov
shll
les
pushf
ret
adc
cmp
jl
sbb
xchg
scas
add
aas
leave
int
sbb
xor
mov
and
cmp
mov
cmp
xchg
mov
neg
mov
dec
loopne
stos
ror
dec
ds
stos
bound
cli
rcrl
lods
inc
jb
leave
popa
jns
dec
cmp
fcmovu
mov
sarl
fldcw
mov
lods
add
mov
cmpsb
cmp
inc
mov
pop
stc
sub
pop
outsl
add
outsl
dec
and
andl
fmuls
or
aam
fsubs
push
push
cltd
stc
repnz
inc
fidivs
pop
xchg
push
add
xor
dec
cld
test
cmpsb
sub
xor
xor
ret
jnp
push
mov
pushf
dec
loope
xchg
push
adc
push
mov
cmp
add
adc
pop
xchg
das
mov
pop
xor
or
pop
jno
enter
mov
pop
mov
clc
ss
push
dec
jnp
sti
cmp
insl
insb
sbb
mov
test
xor
cmp
mov
cmp
jae
scas
in
gs
aam
dec
or
in
jnp
cmp
mov
fldenv
stos
cmp
rol
pop
test
outsb
insb
movsl
filds
pop
hlt
roll
into
in
test
test
inc
rorb
dec
adc
inc
or
clc
fcmovnbe
mov
or
lea
fcomps
es
je
sbb
xchg
and
jae
fisubl
lcall
xchg
sarl
pusha
ss
mov
stos
in
test
mov
pop
rcrl
aaa
jb
mul
rorl
adc
cmpsl
mov
push
and
arpl
cmp
fstps
or
sub
or
jge
fwait
mov
in
hlt
push
lret
push
push
out
adcb
or
and
or
pop
imul
test
adc
adc
xor
inc
aaa
aaa
es
je
dec
rclb
rcrb
mov
hlt
jge
sysexit
lret
les
mov
inc
fwait
arpl
cld
push
fstpl
gs
jl
or
loope
xor
fadds
fstl
faddl
xor
jne
sbb
push
out
cmpsb
mov
mov
psubq
jbe
sbb
inc
and
popf
loopne
lcall
jbe
das
xor
push
ljmp
cltd
mov
cmp
jo
sti
jno
test
adcl
subl
mov
mov
shrl
movsl
mov
insl
scas
inc
inc
mull
in
mov
insl
mov
jmp
outsl
imul
pop
jg
xor
jbe
inc
pop
in
adc
jle
inc
into
int
xchg
pop
push
sub
pop
jno
movsb
sub
repnz
mov
mov
insl
sub
pop
aam
jecxz
inc
sbb
inc
hlt
ja
pop
or
sbb
nop
sbb
cwtl
mov
and
pop
outsl
adc
push
popa
mulb
cs
lock
pop
aaa
fcmovbe
or
cmp
fildll
lock
inc
add
add
xchg
test
cmp
cltd
insb
aaa
sub
iret
fsubrl
or
insb
sbb
pop
inc
imul
cmc
mov
push
aas
push
sbb
pop
stos
xor
dec
jecxz
loope
ljmp
aad
xchg
mov
push
inc
lret
int
sar
mov
cltd
icebp
into
jne
cs
inc
idivl
inc
mov
idivb
xchg
inc
mov
push
lods
fdivrl
sahf
xor
cmp
add
mov
sti
outsb
leave
push
rcrb
shll
loop
lahf
add
adc
mov
jmp
nop
loope
icebp
adc
ljmp
and
cmp
in
inc
repz
mov
stc
or
xlat
mov
mov
or
and
mov
nop
lret
push
push
sub
mov
pop
movsb
jb
aaa
pop
jns
jns
xchg
roll
and
shlb
testb
jnp
ss
in
cli
inc
inc
orl
out
sub
ret
sbb
cmc
int3
imul
popa
push
sbb
aaa
cwtl
ss
mov
clc
cmp
inc
or
sub
pop
xchg
add
lea
fstl
push
cmp
xor
nop
jecxz
rcrb
cmp
sbb
pop
xor
mov
inc
call
mov
pop
scas
addb
add
dec
dec
lds
dec
jmp
rorl
xchg
sbb
enter
adc
sub
in
rcll
sti
fs
xchg
in
test
adc
xchg
lock
ljmp
in
mov
out
cld
ret
push
cwtl
xchg
in
adc
arpl
movsb
call
test
nop
loop,pt
or
dec
xorb
das
adc
inc
divb
daa
sub
fists
lods
push
push
hlt
lea
inc
cwtl
js
insb
adc
iret
inc
cpuid
mov
stc
les
in
pop
mov
sbb
pop
cltd
cmp
fcoms
enter
pop
xchg
test
jo
stc
jns
out
mov
out
inc
lret
aam
push
lcall
repnz
testb
in
xor
addr16
rcrl
mov
and
jno
pop
sarb
sub
and
aas
hlt
and
mov
or
mov
mov
dec
ja
push
mov
pop
mov
pop
out
jmp
clc
jae
jge
mov
mov
add
xchg
aam
cld
lcall
shrl
sub
mov
outsl
in
xor
adc
mov
mov
aad
lcall
repnz
dec
pushf
inc
call
jecxz
pop
ficoms
jmp
sbb
xchg
inc
jns
sahf
sub
mov
pop
jg
mov
mov
mov
lds
mov
sub
pop
push
mov
and
push
pop
inc
fisttpl
xchg
adc
popa
xlat
je
pusha
test
xchg
dec
daa
int
data16
enter
jmp
cmp
xchg
jmp
out
lock
and
jg
add
inc
lods
push
mov
stos
test
mov
stos
call
test
inc
aas
push
mov
pop
add
test
lds
mov
movsb
jge
mov
iret
and
inc
xlat
xor
pop
pop
or
js
push
sub
xchg
push
jno
movsb
push
lcall
adc
ds
insw
stos
aam
fisttpll
imul
sbb
dec
sbb
jg
sub
jne
xor
dec
jbe
jb
inc
xlat
test
inc
jbe
pop
cmc
pop
inc
xor
inc
and
mov
mov
scas
aad
loope
imul
aam
xchg
repnz
cmc
lret
cmp
ljmp
inc
fcomps
inc
inc
lds
fdivl
ja
mov
shr
sbbl
decb
fsts
push
loopne
jmp
inc
fs
sub
and
test
xchg
mov
add
xor
pop
xchg
or
xchg
add
inc
out
and
xor
jne
cmp
lcall
push
mov
lret
xor
pop
fistpl
add
rcrl
mov
bound
fildll
lds
test
iret
lret
rcrl
jbe
adc
or
pop
into
lret
add
lcall
jno
ss
inc
test
xchg
insb
ds
mov
xor
xor
sub
repnz
add
xor
sub
jg
sub
addr16
mov
outsl
es
mov
push
aas
ljmp
js
lahf
pop
cmp
sub
cs
fs
cmp
fucomp
push
std
cltd
sbb
mov
and
push
hlt
or
xchg
ss
jecxz
in
fimuls
xchg
inc
loope
sub
inc
pop
aas
push
fwait
cwtl
or
inc
fldt
cs
sbb
jmp
out
int3
mov
data16
mov
mov
push
fwait
leave
dec
data16
pop
cli
and
cmc
push
lods
sti
cmp
dec
scas
xchg
ret
pop
lea
or
pop
sub
and
clc
loop
mov
imul
call
inc
push
or
lds
pop
outsl
push
mov
fs
cmp
mov
xchg
cmp
pop
sub
stos
lock
sub
jbe
pop
jmp
or
mov
iret
pop
hlt
pop
add
lcallw
ret
aas
outsb
pusha
adc
pop
gs
mov
pusha
lret
push
inc
jmp
aaa
cli
push
pop
lds
dec
cmp
imul
in
cmp
icebp
push
adc
fadds
stos
or
inc
imul
cmp
pop
cmc
and
add
loope
mov
inc
sbb
fldl2t
add
dec
rolb
arpl
dec
xor
cmp
push
sub
mov
xor
inc
pop
push
mov
pop
xor
pop
movsl
push
lods
loopne
xchg
clc
or
inc
lods
lds
nop
or
fistpl
movsl
xchg
imul
fistpl
push
mov
mov
pop
enter
lods
push
rorl
jno
mov
repnz
adc
mov
subl
enter
outsl
jp
xchg
out
push
movsb
je
shrl
out
push
addb
lods
std
nop
mov
adc
or
xor
xor
xor
jo
stos
xrelease
xor
sti
fidivrl
andl
inc
jge
cmpsl
out
cmp
xchg
out
lahf
mov
push
in
mov
stos
jne
mov
or
xlat
push
xor
inc
lods
jp
in
std
sub
lods
inc
outsb
dec
xor
out
push
push
in
xor
ret
cmp
je
in
imul
adc
fcoms
mov
mov
or
lahf
test
repz
sbb
lcall
popa
xchg
dec
pop
cmc
mov
pop
jecxz
loope
repz
add
repnz
fs
or
or
mov
push
jnp
idivl
pop
aam
cmp
xchg
mov
outsb
dec
faddp
das
insl
out
dec
in
je
repnz
pop
and
and
push
jb
mov
cmpsb
mov
and
mov
mov
sub
inc
jo
cs
pop
rclb
xor
dec
pushf
mov
lods
mov
mov
push
push
mov
pusha
or
bnd
push
test
repnz
cmpsb
and
loopne
lea
mov
lea
jle
dec
inc
in
ja
sbb
popf
lock
test
pop
lahf
inc
mov
aaa
sbb
pusha
dec
cli
xor
in
dec
in
mov
adc
lret
or
insb
aaa
loopne
push
push
mov
push
adc
mov
bound
pop
clc
adc
push
sbb
cmp
dec
push
dec
out
clc
js
sub
call
ds
add
pop
and
bound
xor
cmc
arpl
pop
sub
ret
push
shlb
sbb
pop
mov
or
outsb
jl
mov
shlb
in
sub
mov
fists
negl
cld
jge
imulb
jg
outsb
xchg
movsl
add
in
xor
addr16
pop
xchg
aad
loop
dec
mov
mov
insl
sti
in
sbb
aas
inc
cmpsl
jecxz
cmpsb
push
adc
loop
pop
adc
int
ret
icebp
mov
mov
sarl
adc
repnz
out
fcmovnb
dec
bound
shll
test
push
outsl
and
lods
js
xor
pop
adcb
add
data16
jecxz
xor
lret
pop
fcoms
int3
lahf
subl
mov
movsl
inc
leave
and
pop
mov
jnp
outsb
int3
test
ss
jmp
cmp
mov
adc
int
jmp
mov
fistpll
aad
lcall
jecxz
push
cmp
mov
ret
call
mov
sub
aaa
decl
fisubrs
fs
mov
rclb
and
xor
pop
andl
je
add
jecxz
orb
cltd
enter
int
xchg
imull
icebp
mov
adc
dec
gs
xchg
xor
ljmp
push
mov
xchg
lods
aam
rclb
loopne
xor
arpl
push
sub
cs
rcr
jmp
jae
and
sbb
je
push
xor
or
xlat
lret
push
cmp
jecxz
push
xchg
gs
imul
sbb
sub
cmpsl
add
mov
lret
call
pop
sbb
dec
jl
lcall
addr16
xor
xchg
push
sbbb
mov
ljmp
dec
dec
lahf
clc
pop
and
xchg
sbb
mul
or
cltd
or
shll
add
out
xchg
repnz
icebp
and
mov
push
jmp
adc
daa
mov
sbb
push
mov
das
int
cmp
sub
loop
insl
sbb
lea
add
cmp
xchg
scas
and
stos
imul
filds
test
jns
sbb
cmpsl
fs
push
jge
fldt
or
sub
leave
sub
lea
jnp
sub
inc
stc
stos
mov
sub
xor
fiaddl
roll
or
cld
fs
lret
push
dec
test
jae
jne
xchg
cmpsl
xchg
into
loop
test
xor
popl
lret
shrb
repz
repz
dec
inc
mov
lea
ds
shlb
loop
sti
pushf
xchg
fwait
cli
clc
ss
sub
mov
loop
pop
scas
subb
or
call
mov
mov
and
test
xor
stos
push
frstor
ljmp
loop
pop
fwait
inc
dec
push
cmp
ds
negl
sbb
cli
insl
jle
push
push
pcmpeqd
lret
icebp
fldcw
sbbb
xor
sub
lahf
std
sbb
ret
addl
shrl
jg
scas
in
sbb
cmp
mov
push
mov
aad
mov
sub
out
fcoms
movb
pop
scas
and
shr
aas
add
mov
jg
out
pop
bound
sbb
fsubs
sti
insb
test
sbb
fs
insl
cmp
inc
push
in
test
in
out
test
add
push
jmp
push
mov
nop
adc
dec
ds
lcall
popa
adc
enter
rorl
test
pop
mov
addl
adcb
inc
int3
test
testl
xor
and
int
xchg
jmp
dec
jecxz
int3
pusha
jecxz
pop
in
loopne
or
mov
sub
dec
and
adc
cmp
imulb
movsb
andl
add
nop
push
cmp
and
push
push
or
push
mov
movsl
mov
outsb
sahf
clc
ret
fadds
push
test
xchg
push
dec
dec
mov
and
mov
adc
push
push
js
cmpsl
push
out
popl
leave
shlb
inc
pop
jp
jle
sub
scas
add
and
stc
mov
xor
sahf
fidivl
xchg
cmp
push
aam
jecxz
lds
and
push
stos
outsl
or
or
jmp
gs
cwtl
mov
into
popf
sbb
es
jl
jae
xchg
push
pusha
adc
arpl
xchg
mov
jnp
inc
popf
mov
mov
mov
dec
or
cmp
bound
std
pushf
popf
ljmp
imul
pusha
cld
pop
jl
ljmp
xchg
data16
sub
ficoml
dec
jnp
mov
mov
lea
jae
sbb
jns
popf
bound
jmp
hlt
pop
popf
cmpsl
mov
roll
and
mov
cltd
test
ss
cmc
push
fisubrs
cli
ds
dec
and
pop
orl
int3
mov
push
mov
jnp
out
sti
jno
xor
scas
aaa
aas
lock
xor
arpl
xchg
repz
insb
shl
repnz
mov
jns
cmp
cld
sbbl
inc
cmc
mov
xchg
or
xchg
test
dec
mov
push
arpl
repnz
jo
xor
aad
mov
aaa
adc
in
sbb
xchg
jmp
hlt
shl
mov
adc
or
pop
adcb
imul
pop
int3
and
cld
xchg
lcall
ljmp
rol
cmpsl
pop
gs
inc
rcrl
or
add
popa
lret
js
fildll
in
pop
jp
scas
inc
and
cmovg
rcrl
popf
test
mov
xor
test
xchg
rclb
xor
inc
bound
or
or
scas
clc
int3
pop
in
daa
mov
add
lods
dec
sahf
pusha
inc
dec
push
out
in
lods
mov
icebp
or
into
push
mov
jecxz
out
leave
shlb
mov
stc
jno
mov
and
xlat
xchg
jbe
jnp
xchg
outsl
lahf
lods
shrl
js
add
mov
popa
inc
dec
std
fs
xchg
jo
stos
rolb
sbb
fidivs
ss
dec
cmovo
inc
cmpsl
inc
or
stos
mov
test
xor
push
in
sbb
js
aam
xlat
inc
pop
pop
pop
push
or
mov
and
mov
fistpll
test
or
call
mov
cmpsl
push
ljmp
sub
out
filds
fistpl
inc
out
lods
jecxz
or
lods
xchg
add
cmpsb
mov
adcl
pop
mov
or
push
scas
cs
fsubl
pop
mov
sub
lret
and
arpl
adc
add
fisubrs
xor
fs
mov
inc
lret
jbe
aas
pop
inc
and
aad
cmp
dec
ja
push
lea
add
pop
fcoml
aad
movsl
and
aam
sbbb
pop
push
add
cmpsl
mov
adc
daa
jg
cld
ror
xor
pop
pop
out
push
std
and
adc
leave
inc
aas
sbb
icebp
popa
lods
adc
mov
adc
adc
adc
xchg
and
fisubrs
jae
fidivrs
ret
lods
mov
sbb
rcll
rolb
add
loop
daa
push
mov
and
jl
stos
enter
sbb
mov
mov
xor
sub
cli
jmp
dec
push
adc
js
loop
inc
into
inc
add
cmp
xchg
jecxz
scas
orb
les
aaa
pop
dec
fdivrp
adc
pop
xchg
push
cli
daa
icebp
stos
sub
adc
out
and
stos
sarb
in
mov
hlt
xchg
push
pusha
test
mov
stos
leave
les
lea
jp
fcompl
mov
loope
ljmp
jecxz
adc
push
ret
ret
stos
jmp
sbb
out
scas
dec
loope
jns
inc
lods
xchg
jb
call
xchg
inc
dec
gs
fidivs
inc
test
mov
jnp
jb
add
jbe
or
cmp
xchg
std
xchg
aas
push
sbb
inc
decb
pop
adc
insb
mov
ret
into
out
mov
add
sbb
hlt
outsl
pushf
cwtl
sub
adc
jmp
or
mov
push
mov
mov
mov
push
xchg
sub
subl
pop
pop
lea
mov
loope
and
or
scas
add
mov
filds
das
mov
test
imull
adc
idiv
in
loopne
pushf
int
rcrl
orb
icebp
inc
stos
stos
sbb
and
dec
sbb
xlat
push
dec
jae
jae
out
cmp
mov
jl
dec
movsl
dec
dec
xor
cmp
icebp
movsl
int3
ret
ja
cmp
js
sbb
add
sub
cmpsl
inc
lds
dec
pop
sti
pop
nop
imul
leave
cmp
xor
int
rcr
enter
adc
mov
arpl
inc
xlat
dec
add
push
sarl
mov
in
push
push
add
push
cld
pop
sub
mov
or
pop
cmpsb
nop
jns
and
cmp
loopne
dec
add
mov
cmp
mull
testb
xor
ljmp
mov
out
fdivl
and
mov
test
arpl
xor
jge
push
mov
and
xchg
push
mov
loopne
pop
xlat
adc
jecxz
mov
add
mov
pop
pop
std
mov
les
and
dec
push
mov
shll
in
dec
jge
pop
push
shrb
das
push
mov
jecxz
or
push
adc
cmp
fisubs
jl
sub
inc
or
aas
mov
dec
push
sub
lret
jo
cmc
xchg
adc
test
inc
and
and
movsl
push
xor
adc
pop
out
adc
and
rolb
and
push
test
je
outsl
xchg
sbb
or
movsb
mov
push
popa
cmp
rcr
inc
inc
inc
scas
out
loope
and
push
aas
cmpsb
inc
fisubs
push
xor
into
in
adc
xchg
cmpsl
incl
fcomi
sbb
xchg
or
lods
mul
scas
cmp
stc
inc
fcom
jle
jmp
sub
jmp
cmp
sarl
outsl
fisubl
leave
sbb
and
xor
std
push
pop
stos
sub
mov
mov
or
ljmp
mov
or
sub
divl
stos
jle
popa
cmp
ret
sbb
aad
cmc
xchg
add
std
mov
in
mov
jecxz
inc
sbb
in
lea
dec
mov
push
cmp
fbld
ficompl
jbe
mov
and
mov
pop
hlt
fsubr
add
inc
daa
inc
xchg
popf
xor
ljmp
adc
not
push
push
in
mov
cmc
sahf
icebp
jae
dec
and
call
ret
mov
out
sbb
xchg
into
jmp
jo
hlt
insl
add
movsl
shlb
rorb
add
or
das
ja
sahf
imul
cwtl
add
xor
and
inc
mov
pop
cli
dec
push
rol
in
pusha
or
lea
jne
inc
pop
sahf
or
dec
out
fs
or
push
sbb
and
jmp
push
adc
cmc
mov
rcrb
jno
sub
stos
imul
addl
stc
popf
xchg
mov
sbb
jnp
jge
push
insl
dec
dec
into
pop
sub
iret
outsb
cmp
dec
xor
fiaddl
cmpsb
fsubl
pop
sub
mov
shr
or
hlt
aad
and
pop
mov
jne
popa
mov
adc
bound
rcrb
jb
cmc
iret
repnz
cmpsb
stos
cld
mov
mov
fildl
cmp
shrb
iret
pop
pop
test
ja
test
out
jge
and
mov
arpl
cmpsb
mov
repz
mov
popf
xchg
dec
adc
div
in
cs
pop
insb
mov
int3
pop
cs
rcrb
jmp
inc
call
pop
pop
popa
test
jge
mov
cmpsb
adc
icebp
aad
jle
lods
aaa
fstps
adc
jno
dec
and
xchg
in
js
fdivl
dec
xor
sub
pop
inc
aaa
loopne
cmp
imul
adc
jno
push
repnz
cmp
scas
into
fdivr
iret
negb
adc
cmpsb
jne
cmp
ja
out
xchg
ret
or
mov
push
sub
subb
adc
and
xchg
cmp
out
cmp
mov
xchg
addb
xor
cwtl
das
or
stc
es
sub
pop
inc
aam
adc
ss
sub
or
jl
mov
fwait
dec
aam
mov
leave
adc
dec
shl
add
xor
xchg
scas
push
icebp
mov
arpl
into
gs
pop
sub
shr
addl
mov
mov
jge
dec
or
aaa
push
je
sahf
and
test
cmp
clc
repnz
mov
inc
int
imul
mov
inc
out
cmpsl
out
push
jns
or
fucomip
and
sub
in
pop
mov
jae
xchg
jne
add
lds
xor
adc
loopne
outsl
adc
mov
xchg
mov
cltd
xchg
cli
cmc
push
stos
inc
cmp
clc
xchg
and
mov
xchg
fildl
into
inc
outsb
std
data16
lods
cmp
outsl
push
sti
push
xor
inc
bound
ss
fnstenv
popa
xchg
into
cmp
mov
pavgb
lcall
lret
arpl
outsl
test
mov
inc
movsl
mov
fildll
adc
push
mov
adc
and
xchg
sub
sbb
mov
fnstcw
xor
iret
xchg
lahf
mov
inc
mov
aad
or
pusha
sbbb
repz
data16
add
stos
sbb
mulb
mov
je
pop
sub
out
data16
mov
mov
aad
mov
xor
aaa
gs
push
repz
dec
test
icebp
dec
pop
shlb
jp
repnz
xor
loop
add
xor
and
dec
pusha
idivl
and
adc
test
cmp
out
insl
std
ss
cld
xor
outsb
pop
dec
and
movsb
lods
mov
sub
js
sub
push
gs
gs
add
mov
dec
mov
into
inc
pushf
fnstenv
and
mov
adc
in
cmpsl
xor
xlat
pop
outsl
movsl
push
repnz
in
imul
jns
ret
or
pop
fistl
add
sahf
add
mov
loop
jmp
xchg
test
pop
imul
lock
int
mov
gs
aad
push
cwtl
xor
out
fsubr
jge
add
add
cmc
adc
mov
or
es
gs
cmc
ljmp
adc
mov
int3
sbb
xor
inc
pop
test
jg
pop
pushf
push
out
xchg
xor
jbe
cmp
adc
or
dec
and
sub
fstl
movsl
js
adc
or
leave
bound
jge
inc
and
cmp
rcrb
mov
add
and
ja
enter
arpl
dec
les
xchg
lea
pop
and
mov
cmc
mov
ret
in
clc
mov
sub
jp
mov
mov
or
aas
stc
sahf
cmp
call
dec
mov
imul
cmc
mov
in
lahf
stos
mov
ja
mov
xchg
rclb
jge
jno
or
cld
lcall
in
stos
inc
int3
ljmp
scas
rol
add
hlt
repz
in
test
aad
mov
shll
mov
adc
in
and
inc
shlb
lcall
xor
aam
mull
xchg
inc
adc
inc
fldenv
addr16
xchg
mov
push
aas
movsl
mov
cmp
adc
dec
cmp
aaa
mov
in
dec
rcrl
adc
cmp
add
aad
mov
cld
jns
push
or
daa
cmp
adc
add
dec
sub
fildll
mov
loop
jecxz
lcall
les
jns
je
dec
call
and
pop
pop
adc
xchg
gs
sahf
and
mov
ja
jp
xor
sub
roll
sbb
out
aas
hlt
push
ja
or
mov
mov
sbb
fcoms
or
cmp
push
adc
inc
xorb
or
mov
adc
lret
fistpl
xor
push
lods
jg
pop
sbbb
push
inc
push
fstps
push
jmp
aaa
inc
sbb
movhps
cmc
push
sub
add
and
int
xor
cmc
and
inc
in
jge
jo
push
jbe
lods
dec
dec
test
cmp
mov
pop
add
and
adc
xchg
xor
sub
sbb
dec
pop
jno
add
push
mov
imul
adc
in
dec
aaa
sahf
xor
add
xchg
add
push
mov
mulb
repz
fsubl
jne
arpl
sub
add
xchg
je
inc
cmp
in
lcall
scas
push
flds
and
gs
pop
ds
adc
dec
inc
push
js
lock
sub
add
jnp
fidivs
push
jl
jge
jae
mov
ja
mov
sub
hlt
or
cmp
je
sub
pop
ret
in
aaa
in
out
loope
les
or
pop
sti
adc
mov
push
xor
lods
mov
sahf
sbb
sbb
iret
out
and
or
stc
inc
xlat
jbe
sub
repnz
adc
jb
mov
outsb
inc
pop
mov
decb
mov
sub
mov
xchg
fildll
out
std
cmp
cmp
jl,pt
dec
pop
push
movsb
dec
dec
lea
gs
int3
and
ljmp
adc
inc
xchg
aad
out
aad
leave
xlat
outsb
sti
sbb
xchg
fstl
lock
loope
jne
push
repz
cmpsb
fldt
sub
mov
push
jo
or
mov
jb
lea
adc
popf
sbb
xchg
xchg
jo
push
outsb
pop
mov
in
sbb
in
pushf
mov
jmp
loop
push
loope
jb
cmpl
jp
nop
push
xchg
cmp
insl
xor
je
fnstsw
mov
in
sbb
int3
xor
repnz
sub
cwtl
pop
push
dec
lods
jg
and
nop
out
inc
push
jbe
dec
mov
adc
rcrl
call
or
xchg
jg
inc
or
fcoml
xor
shrl
push
sarb
push
mov
or
cmp
pop
mov
adc
mov
jmp
andl
add
push
aas
inc
into
xor
fildl
dec
mov
jno
lds
out
mov
inc
jge
or
adc
add
jb
push
adc
and
xor
sub
lret
jae
pop
repz
test
daa
mov
jne
jb
dec
push
mov
enter
iret
cmp
mov
loop
lret
push
or
cmpsl
shl
sub
xchg
pop
jl
inc
out
xor
adc
inc
mov
cmp
adc
lret
push
cs
sbb
lret
jle
mov
mov
or
mov
test
mov
cli
mov
icebp
data16
pop
stos
pusha
adc
mov
jle
xchg
scas
mov
aam
incl
lods
mov
adcb
push
lods
in
inc
sahf
xor
cmpsb
imul
and
dec
bound
sub
mov
xchg
mov
leave
ret
pop
ljmp
sub
in
test
call
xchg
and
adc
cmp
and
popl
test
sbb
cmpsl
shrl
jmp
cmp
rcrl
inc
stos
outsb
add
pop
jns
sahf
and
push
movsl
xor
add
adc
xor
outsl
push
stos
mov
mov
daa
test
imul
dec
pop
xor
sbb
jg
xchg
sub
aad
cmp
shrb
int
lea
out
lods
jbe
aas
sbb
jne
adc
test
cs
push
inc
test
std
cmp
rclb
mov
aas
repz
iret
adc
xchg
sub
es
add
int
fcomps
push
add
je
sahf
je
xchg
imul
sbb
xorb
dec
loope
xor
cmp
repnz
mov
popf
int
iret
imul
andb
fbstp
enter
ljmp
mov
js
sti
test
xchg
cmc
in
dec
pop
outsl
nop
daa
add
mov
daa
xchg
mov
std
adc
pushf
or
inc
add
scas
fwait
sub
shrl
es
fildll
icebp
mov
or
ljmp
xchg
test
adc
mov
insb
pop
sahf
jle
xchg
jmp
in
jno
pop
mov
cwtl
inc
pop
negl
loopne
push
push
dec
fisubrs
sarb
add
and
and
int3
xor
insl
cmp
or
sbb
movsl
cmc
cmp
into
lret
repnz
lds
out
or
mov
fdiv
dec
cwtl
pop
mov
jmp
in
stos
or
or
adc
int3
fldt
cmpsl
sti
jmp
xlat
xchg
add
xor
mov
lods
mov
mov
push
push
sti
in
add
call
mov
std
outsb
sbb
xlat
aas
lcall
cmp
es
das
insl
or
mov
inc
dec
pop
push
pushf
aam
nop
cs
and
ljmp
push
clc
inc
out
or
popf
outsl
inc
mov
ss
mov
xor
sbb
jl
incb
movsb
push
and
pop
fstpt
pop
add
cmpsl
sub
pop
imul
mov
popf
xchg
push
xor
xchg
pushf
cwtl
sub
pop
mov
cmpb
cmp
rorl
mov
movsb
cmp
mov
mov
ljmp
icebp
lods
stc
jbe
xchg
xchg
jmp
cmpsb
mov
pop
push
fs
les
push
fldcw
jp
pop
aaa
push
imul
ss
inc
mov
in
sbb
dec
nop
mov
int
in
pop
out
and
js
mov
rorb
rol
lret
call
enter
and
cld
je
insl
mov
cmp
mov
bound
jne
mov
lcall
push
adcb
mov
stos
stos
roll
mov
sbbl
fldl
test
adc
xchg
sub
or
jmp
inc
pop
js
inc
jbe
cli
xor
xor
pop
push
lret
xlat
dec
in
mov
repnz
xchg
dec
xchg
cmp
mov
xor
pop
testb
pop
lret
repz
push
xchg
push
xchg
lock
test
repnz
or
lock
cli
notb
sbb
cmpsb
or
jle
int
mov
or
test
inc
lds
push
int3
outsl
pop
jae
mov
cs
adc
xor
push
inc
mov
arpl
xorl
cmp
dec
loop
jno
dec
mov
push
movsb
faddl
mov
mov
jns
mov
fs
pop
cmp
inc
push
insb
cmp
push
sub
cwtl
das
jle
cmpsl
cmp
jne
movsb
ljmp
mov
mov
or
mov
pop
xchg
into
aam
lods
mov
sbb
jmp
sub
inc
push
adc
jne
jne
push
xchg
mov
add
add
pop
repnz
lods
movsb
and
adc
out
cld
mov
sbb
add
das
outsb
sub
cmp
mov
aad
clc
push
sbb
cmpsb
lock
subb
int
loopne
mov
dec
lret
ret
daa
add
scas
clc
orl
ljmp
jge
sub
mov
mov
jmp
add
mov
or
test
jnp
and
call
sarl
into
and
dec
mov
clc
xor
push
mov
cmc
out
mov
or
dec
ficoms
push
xchg
adc
addr16
cwtl
test
mov
inc
lret
pop
loopne
mov
xorl
enter
imul
das
mov
rcrl
sbb
lret
sbb
inc
lcall
adc
and
and
mov
jmp
sub
ja
xchg
add
push
push
push
out
xchg
push
aad
mov
int3
pushf
cs
cmp
sub
sarl
jmp
loop
dec
das
add
loop
xor
scas
mov
pop
add
cwtl
cmc
std
iret
and
sbb
or
and
pushf
cmp
adc
xor
in
sub
test
popa
test
push
fistps
mov
pop
push
jmp
stos
jmp
in
xchg
shl
es
je
es
pushf
dec
inc
push
add
mov
test
sbbl
lret
jp
lret
data16
rcl
lock
inc
loopne
mov
imul
lahf
std
ficomps
pop
daa
fwait
stc
fnsave
shrl
inc
add
in
xchg
stos
add
fnstsw
les
mov
pusha
loop
cwtl
jo
pop
mov
or
push
pop
add
lods
fdivrl
inc
fnsave
mov
arpl
xlat
stos
pusha
mov
scas
xor
call
pop
mov
shr
iret
xchg
out
sbb
sbb
imulb
shl
push
sbb
mov
push
lcall
push
insl
fdivrl
or
sub
dec
sub
arpl
ja
int
sub
sbbl
or
inc
push
sahf
rorb
add
or
sbb
ds
out
cmpsl
inc
xchg
cltd
std
push
lods
cs
stos
test
repz
and
pop
loopne
lds
out
stos
addr16
push
push
daa
inc
mov
sahf
mov
sbb
lret
adc
out
aam
jae
mov
mov
mov
incl
xor
pop
divb
pinsrw
or
or
cli
and
sub
ljmp
pop
and
repz
mov
mov
xchg
stc
into
push
aam
xor
iret
data16
inc
in
xchg
mov
iret
or
pop
lods
aaa
jnp
cmp
out
jne
sbb
jo
jbe
and
pop
das
call
adc
xor
std
test
mov
add
or
mov
pop
mov
inc
xchg
int3
dec
in
mov
xor
xor
adc
stos
out
aaa
pop
and
lret
sti
cmp
lahf
cwtl
jbe
lods
jmp
pop
loope
push
lods
mov
dec
jg
outsb
out
inc
pusha
fnstcw
aam
jecxz
mov
inc
or
and
mov
mov
fsubs
andb
push
js
and
inc
ret
sbb
loope
sbbl
push
jo
addl
xchg
insl
movsb
mov
aas
test
adc
xchg
ljmp
inc
jp
js
push
nop
sbb
adc
mov
adc
movsl
clc
ror
stc
loop
movsb
leave
sub
out
enter
dec
insl
dec
repz
sub
ja
push
jmp
cwtl
dec
loopne
mov
xchg
arpl
popa
add
cmp
sbb
pop
jl
sub
dec
in
imull
pop
lahf
pop
xchg
dec
xchg
jle
xor
dec
push
fwait
xchg
ss
dec
mov
pop
dec
test
pop
shrl
adc
test
mov
cltd
jnp
out
lods
adc
inc
mov
iret
aam
call
cmpsb
test
add
adc
mov
mov
test
aad
std
mov
mov
sbb
imul
rol
pop
add
mov
lds
sbb
adc
push
adc
cmp
pop
xlat
outsb
jne
mov
flds
and
lea
imul
pop
xchg
outsb
sahf
and
stos
push
lods
xchg
or
inc
push
nop
mov
mov
xchg
loop
jge
mov
or
mov
movsb
out
enter
popa
jmp
out
push
popf
xor
xchg
mov
imul
dec
add
mov
mov
fistps
pop
fld
cmp
pop
jg
or
cmp
or
and
pop
cwtl
jns
divb
loope
fnstsw
mov
add
and
int
stos
jns
mov
mov
dec
mov
sub
fnstcw
dec
pop
lods
daa
mov
mov
pop
add
out
dec
sahf
inc
daa
cli
jle
push
pop
xchg
sarb
mov
sbbb
faddl
or
or
sti
xor
test
inc
outsl
inc
repnz
out
fnstcw
xchg
cmp
inc
push
mov
pusha
clc
enter
and
loope
into
pop
inc
cmpl
adc
jbe
adcb
xchg
in
addr16
xor
push
inc
lcall
frstor
adc
add
hlt
mov
inc
adc
push
sbb
push
les
int
dec
jp
insb
fistpl
outsb
add
mov
mov
test
jne
pcmpgtw
icebp
and
xchg
xor
dec
ss
mov
inc
mov
dec
push
scas
pusha
insl
push
push
dec
jb
xchg
lahf
pop
int
push
adc
movsl
cmp
sub
ret
xchg
sub
jb
in
dec
or
jne
or
jae
mov
sbb
test
and
icebp
cmp
int
adc
loop
xchg
ret
pop
or
cmpsl
dec
ljmp
push
nop
jmp
pop
mov
jecxz
insl
cmpsl
pop
mov
mov
mov
out
shl
cwtl
out
aad
dec
or
sbb
aad
pop
sahf
xchg
mov
imul
cld
xchg
test
inc
add
and
xchg
sahf
adc
pop
imul
mov
adc
or
mov
iret
sahf
add
xchg
jb
scas
cld
adc
lea
mov
dec
pop
sub
outsb
movsb
pop
push
into
fmul
push
pop
mov
mov
hlt
xor
adc
inc
mov
mov
dec
test
sbb
or
mov
int
popf
out
add
fs
rcrl
inc
sub
sub
pop
mov
out
dec
add
adc
loop
xchg
mov
test
xor
aad
cs
shll
test
aaa
sub
push
lahf
sub
fisttps
sub
mov
sub
or
mov
push
movsl
fidivl
in
jbe
enter
add
aad
cmp
es
pop
inc
pop
cmpsl
out
mov
pop
cmp
inc
icebp
mov
mov
xor
sub
std
fwait
jb
push
lret
jnp
push
sub
lea
adc
xchg
xor
mov
lret
testb
and
shll
dec
adc
mov
and
and
pop
out
jle
cmp
cmpsl
repz
cmp
jne
cmp
outsb
addr16
mov
imull
js
cmc
mov
movsb
sub
jle
pop
lcall
repz
sti
inc
push
mov
cmpsb
test
mov
inc
aad
aam
lock
sub
inc
pop
adc
add
xor
popf
inc
inc
sti
jecxz
sub
sahf
and
or
mov
sbb
mov
lock
daa
fiaddl
fmuls
sub
addb
stc
shlb
xor
cld
lret
mov
test
fmull
fidivl
xchg
mov
insl
push
add
sbb
xchg
dec
cmp
popa
xor
insl
rorl
lods
mov
loopne
int3
dec
testb
inc
mov
sub
mov
xchg
push
sub
and
fs
aas
pop
xchg
aas
dec
mov
ficomps
pop
imul
jecxz
xchg
lcall
test
cs
test
sub
jbe
jecxz
out
test
dec
xchg
and
int
mov
inc
std
pop
cmp
shrl
fcompl
shrb
popf
fwait
xor
pop
mov
jmp
cmp
sbb
lret
add
dec
frstor
and
loopne
insl
push
push
inc
cmp
fcoms
push
jne
sbb
out
fcom
mov
cmpsl
pop
js
insb
push
inc
cs
push
pop
rcrl
push
push
mov
test
cs
lods
andl
push
sub
repz
sbb
lea
adc
stos
mov
xor
mov
pushf
fldl
lds
cmp
pop
lahf
dec
outsb
sarb
out
stos
out
push
test
or
inc
inc
out
push
ljmp
jno
cli
jle
divl
idivl
sub
xor
aaa
push
add
pop
mov
jecxz
es
xchg
xchg
clc
jne
filds
cmp
shl
pop
pop
out
mov
lods
shll
mov
test
pop
aas
dec
out
test
mov
jae
mov
mov
add
in
xlat
push
xor
popf
outsl
jecxz
imul
out
mov
jnp
and
mov
add
into
fwait
stos
verr
out
int3
push
xlat
inc
adc
mov
fisttps
aam
out
push
cs
repz
mov
test
mov
xor
insl
mov
pop
push
aas
clc
stos
es
jmp
xor
das
push
daa
cmp
into
fadd
sub
daa
or
cmp
jns
adc
pop
mov
jns
enter
jno
and
adc
push
in
jae
or
mov
inc
push
aad
fisttps
mov
push
or
push
jg
rcrl
or
jl
imul
and
iret
cli
dec
cltd
cmpsb
add
mov
ficomps
fistpll
nop
push
mov
out
mov
pushf
sbb
les
movsb
pop
mov
jns
ss
jne
sbb
lret
cli
imul
xchg
stc
loope
sub
or
adc
xor
repz
scas
cmp
aad
xor
cmpsl
cwtl
xchg
cli
push
jo
mov
lods
inc
sbb
outsb
gs
inc
in
cli
xchg
adc
mov
inc
sbb
cmp
lds
inc
jb
fsubp
add
xchg
or
and
in
inc
add
nop
xor
inc
fdivrl
fwait
jl
sahf
arpl
out
loop
movsb
sbb
sub
mov
scas
imul
imul
sbb
loope
orb
sbb
lret
sub
jnp
bswap
cli
cmp
push
pop
pop
rclb
jmp
cmp
sub
xor
push
daa
adc
or
out
lock
std
ficomps
test
or
mov
lret
pusha
xchg
sub
movsb
xchg
movsl
mov
xchg
fbstp
fs
fistpl
aas
arpl
lret
je
jb
and
ja
cmp
dec
test
stc
int3
cwtl
adc
loop
jecxz
inc
popa
dec
mov
or
shll
pusha
push
adc
inc
jb
inc
mov
dec
addl
pop
fldt
cmc
or
xchg
gs
lods
rorb
cwtl
aad
les
xor
test
pop
xor
adc
lea
popf
cmpsl
orl
insb
out
mov
out
lods
and
pop
cmp
xchg
out
jne
scas
inc
fcoms
sarl
jbe
or
sbbl
inc
adc
aas
mov
inc
sub
pop
cmp
jge
or
mov
jp,pn
xorl
nop
mov
jge
not
dec
xlat
or
cmpl
stc
sbbb
pop
addr16
jo
cmc
cld
push
test
mov
jne
out
jl
jl
inc
mov
out
aas
in
or
adc
shrb
add
ds
lods
push
and
jno
or
mov
int
cmp
rorl
test
out
test
mulb
icebp
mov
jae
movsl
cmpsl
cltd
push
dec
or
shlb
test
testl
and
out
aas
cmp
std
xchg
nop
pop
out
cli
rcrb
in
sbb
stos
jle
push
decb
jmp
pmullw
gs
lcall
mov
mov
loope
xchg
pop
xor
call
lret
cmp
sbb
lahf
lcall
mov
add
mov
nop
mov
imul
pop
enter
sub
call
jo
push
xor
xor
xor
pop
sti
setae
cmp
movsb
push
cmp
aas
jmp
out
dec
in
rolb
jecxz
ja
cmpsl
fstps
lock
jl
fcomps
lcall
rolb
pop
add
sub
jbe
jnp
sbb
mov
int
sbb
lret
out
test
stc
sbb
mov
repz
jae
inc
xor
sbb
cmp
ljmp
push
add
add
scas
push
adc
test
sahf
and
dec
cld
sub
ljmp
ret
repnz
sbb
shll
imul
mov
ret
adc
or
pop
cli
ds
incb
bound
loopne
lret
push
stos
cmp
adc
xchg
repnz
or
mov
fwait
mov
xor
gs
rorb
push
cmp
out
loop
sarb
mov
mov
out
cmp
sbb
jge
adc
clc
mull
mov
in
movl
lret
cs
jmp
lock
mov
hlt
dec
jae
movsl
outsb
jnp
stos
pop
aaa
repnz
inc
cltd
cmpsb
lods
mov
lea
lea
or
cmp
inc
push
in
lahf
gs
mov
bound
sub
add
dec
cmp
xchg
xor
cmp
ja
dec
jbe
sub
xchg
dec
pushf
repz
mov
push
movsl
pusha
fsubrl
rorl
lret
pop
push
call
lea
ljmp
adc
subb
or
pop
pop
lock
mov
add
sub
out
call
or
dec
dec
push
int
mov
divb
push
lods
jo
scas
cmp
sub
insb
test
inc
xlat
hlt
jecxz
hlt
adc
mov
mov
sbb
fidivl
je
pop
dec
roll
out
sub
sub
xor
xor
cmp
sub
shl
cmp
mov
repnz
xchg
bound
mov
adc
mov
add
daa
orb
push
das
inc
in
sbb
out
add
xchg
mov
jb
xor
cmp
jle
movsb
push
rcr
jae
lcall
cltd
mov
mov
xchg
out
and
shll
cmp
shl
scas
ret
das
enter
dec
inc
fidivl
enter
stc
dec
xor
std
outsb
pop
sbbb
icebp
mov
jecxz
push
push
adc
cmc
mov
fs
ljmp
imul
out
xchg
xchg
pop
jae
nop
or
test
and
ds
icebp
les
sbb
push
js
addb
and
pop
outsl
ljmp
dec
out
jne
stos
inc
faddl
mov
sbb
sbb
and
addr16
sub
subl
dec
push
adc
cmp
inc
outsb
aam
dec
push
inc
push
jmp
daa
shrl
mov
emms
mov
mov
call
ja
int3
je
cmp
lods
sub
aam
inc
xorb
dec
data16
push
out
sti
dec
sbb
cmp
stos
fldt
shll
xchg
sub
fdivrs
xchg
mov
mov
mov
mov
imul
imul
fiadds
int
xor
sub
pop
inc
add
shlb
cmp
decl
jne
and
loope
or
inc
das
mov
ror
loop
mov
sub
aam
addl
push
xlat
pop
and
mov
lret
pop
jb
cmp
dec
loop
idivl
xchg
jbe
sbb
xchg
scas
xchg
pop
push
sbbl
jno
sub
ds
xorb
mov
dec
cmp
jg
push
hlt
cmp
sub
cmp
sahf
sub
mov
add
enter
ror
pop
negb
xchg
mov
leave
loopne
sti
loopne
inc
loopne
and
cmp
insb
xchg
lods
push
stos
lea
ss
xchg
loope
cmp
xor
push
and
adc
movsl
lret
test
in
cmp
rclb
pop
xor
add
sbb
push
xlat
sbb
jb
shlb
test
mov
adc
repnz
sbb
shl
clc
andl
nop
add
out
cld
pop
push
insb
rcll
pushf
or
inc
inc
sti
jb
mov
stc
push
mov
fidivl
or
push
xor
je
adcb
movsb
cmp
push
dec
pop
jo
ret
push
pusha
mov
pop
loopne
shlb
xchg
cmc
jb
xchg
cmpsb
testb
mov
shrb
cltd
sbb
dec
pop
in
test
pop
inc
jle
lea
jl
or
mov
lcall
lock
cs
adc
mov
iret
icebp
push
mov
movsb
dec
xor
outsb
lds
xchg
adc
dec
int
insl
fcomps
or
lds
mov
pusha
mov
js
xchg
stos
cmp
add
xlat
pop
je
setp
inc
sub
popf
pop
out
hlt
or
cmp
dec
or
inc
cmp
push
mov
xchg
cs
adcb
test
jno
in
sbb
dec
or
or
ja
cmpsl
sub
mov
pop
push
fwait
int
or
adc
hlt
mov
cwtl
pop
mov
std
adc
in
in
daa
mov
cli
test
bound
xchg
lods
outsl
lds
and
cli
xchg
mov
mov
inc
or
cmpsb
iret
mov
jo
add
cmp
mov
cli
mov
and
cltd
push
pop
cli
xchg
inc
jbe
scas
data16
nop
xor
sarl
loop
insl
and
hlt
adc
pop
int
cmpsl
mov
fisubs
sarl
cmp
fcmovu
scas
or
xchg
mov
pushf
jecxz
mov
dec
mov
pop
push
xchg
pop
cmc
adc
push
mov
repz
ds
jecxz
xchg
or
jne
fisttps
fsubs
test
movsb
pop
jb
sub
data16
cmpsb
sti
dec
xchg
push
fisttps
adc
in
sbbl
inc
pop
dec
inc
mov
scas
mov
push
scas
mov
stos
xchg
mov
pop
mov
or
push
jae
sub
enter
iret
popa
add
add
movl
pushf
inc
inc
fdiv
or
push
mov
mov
daa
scas
stc
pusha
imul
mov
jbe
loope
int3
adc
adc
out
adc
sbb
and
call
lcall
dec
pop
mov
mov
addr16
xlat
pop
dec
mov
sub
arpl
sub
test
jl,pn
into
xchg
jnp
loop
cmpsb
psubusb
sbb
js
push
xchg
dec
shrl
mov
lds
pop
jb
push
shrl
mov
je
push
aad
scas
rcll
inc
cmpb
push
mov
jb
adc
cmpsl
insl
adc
rcr
js
gs
inc
xor
push
out
pop
and
cmp
pop
incl
cmc
and
daa
and
scas
sahf
mov
inc
mov
inc
in
jnp
imul
fs
xchg
mov
dec
aaa
pop
mov
push
popf
notl
adc
pop
lret
outsl
daa
sbb
js
pop
push
pop
dec
pop
repz
xchg
sub
testl
cmp
and
mov
aaa
sarb
push
xchg
das
inc
wrmsr
sbb
dec
daa
sub
movsl
fidivs
dec
adc
push
push
cmp
scas
xchg
cmp
sar
mov
add
jl
gs
cmp
ret
mov
out
out
lods
dec
lods
or
orl
repnz
mov
mulps
xchg
jp
mov
testb
in
adc
push
out
inc
sbb
leave
std
call
sarl
enter
addr16
sbb
mov
inc
nop
mov
pop
adc
test
inc
pushl
push
inc
xchg
and
add
nopl
repz
dec
loope
mov
jge
daa
push
sbb
xchg
int3
mov
movsl
xor
sbb
jge
fs
dec
adc
jl
inc
rcl
jb
xchg
into
adc
mov
add
pop
add
test
sbb
pop
mov
mov
or
stos
in
add
shll
das
cmpsl
sub
daa
repz
add
negb
add
lret
xor
nop
scas
pop
jbe
in
lds
dec
dec
enter
mov
out
dec
clc
fimull
pushf
dec
xchg
xorb
xchg
gs
pop
adc
mov
loop
scas
push
add
mov
lds
loopne
push
dec
xlat
add
out
stc
aam
sub
outsb
rolb
ja
insb
addr16
cltd
cltd
fidivl
inc
leave
xor
mov
into
loop
repnz
lahf
jo
loop
loop
scas
jmp
fsubr
icebp
ficoms
out
data16
inc
adc
addr16
scas
scas
jb
and
push
fwait
jg
pop
std
outsl
add
insb
push
loop
adc
mov
in
sbb
cwtl
jne
jl
sub
sbbb
gs
in
ss
xor
js
sub
pop
mov
test
mov
or
jg
pop
mov
push
inc
icebp
jle
std
imul
mov
popa
push
out
mov
mov
orl
sub
inc
mov
mov
mov
subb
fst
cmpsl
cld
rcrb
iret
loope
ror
lods
test
inc
mov
sahf
jns
jne
mov
fcmove
xor
cmp
cmp
pop
loop
orb
xchg
loopne
push
sbb
hlt
arpl
or
fadd
es
idiv
push
scas
inc
mov
inc
inc
cld
nop
mov
xor
and
xor
subps
mov
clc
lahf
xor
mov
sti
fwait
rcrb
out
mov
cltd
sub
sub
push
ss
lret
iret
int3
repz
loopne
out
push
sbb
jle
xchg
sub
clc
inc
in
dec
jge
loop
inc
xlat
adc
pop
gs
lret
mov
sarl
call
sbb
jns
notl
xlat
inc
fbld
mov
xchg
xor
pop
mov
mov
fsubs
or
xchg
and
and
lret
dec
fwait
sti
mov
cmpsb
cltd
or
sti
or
adc
sub
sbb
mov
mov
popf
mov
dec
mov
push
adc
push
sbb
cmc
je
outsl
lahf
mov
repz
pop
add
dec
popf
fs
mov
xchg
pop
jb
shrl
movsl
add
mov
je
int
shr
add
dec
lret
popa
daa
jecxz
ss
mov
pop
adc
jl
sarl
cli
jecxz
rol
in
in
inc
outsl
xchg
xchg
adc
push
mov
arpl
cmp
pop
xor
or
add
and
es
xor
mov
pusha
cli
mov
push
ret
cmp
ftst
inc
repnz
aam
jecxz
or
mov
lods
icebp
push
loopne
rclb
js
mov
es
scas
add
cwtl
and
loopne
push
and
add
xor
pop
push
push
call
outsl
aas
cmp
mov
andl
in
mov
mov
xchg
push
xor
insl
and
cmp
pop
imul
inc
ror
out
add
push
mov
jb
cmp
ja
aad
adc
mov
out
arpl
jge
mov
mov
jnp
adc
and
or
addb
sti
push
fs
pushf
test
add
pop
and
dec
sub
daa
add
notl
cmp
xor
add
push
xor
fcoml
mov
ret
sub
imul
aaa
stos
mov
mov
js
rcll
pusha
xor
mov
jmp
daa
call
cmp
scas
push
lret
xor
jecxz
iret
and
or
jp
ret
pop
ss
jg
outsb
lods
push
out
add
cmc
or
fldt
fwait
xchg
inc
out
out
dec
in
push
js
rclb
xor
nop
cmp
in
mov
js
rcrb
shl
call
test
jecxz
stos
adc
xchg
xor
mov
inc
push
test
fistps
ds
mov
fcmovu
enter
repnz
test
test
aas
addl
push
cwtl
insb
and
dec
lock
in
mov
in
pop
notl
orl
les
sti
jbe
push
dec
mov
mov
push
fimuls
sub
mull
xor
mov
xor
dec
jno
sti
xor
loopne
and
inc
lods
popf
push
mov
mov
insb
or
fbstp
pop
jle
aad
clc
mov
loopne
loopne
test
adc
loope
and
dec
mov
stos
shrl
mov
in
lds
adc
inc
xchg
dec
mov
rolb
shll
in
fmull
mov
jo
mov
dec
test
roll
sub
dec
fildll
dec
mov
jmp
pop
sbb
stc
adc
mov
shlb
push
movsb
dec
ss
pushf
lret
and
jno
into
cld
fdivl
std
mov
sti
pop
or
test
cmp
and
lods
push
popa
and
addr16
ljmp
mov
fisubrl
pop
dec
dec
icebp
leave
inc
lret
sub
imul
insb
mov
aad
icebp
or
fcomps
imul
les
and
out
push
push
mov
int3
dec
pop
repnz
push
adc
call
incb
sbb
add
pop
es
loopne
stos
mov
hlt
insb
inc
fistl
sbb
mov
out
and
mov
ds
mov
xchg
xchg
jecxz
repnz
loopne
cmp
jg
test
in
cmp
mov
es
in
daa
mov
les
gs
push
in
push
ret
ds
jl
lds
frstor
mov
in
sarl
xchg
imul
push
add
popa
pop
push
xchg
pop
mov
negl
scas
jmp
sahf
sbb
mov
arpl
pop
mov
inc
xchg
xchg
cmpb
add
lock
fsubrs
adc
stc
inc
xor
cmpsl
push
and
ljmp
popf
xor
mov
ret
das
into
in
pop
clc
inc
shlb
inc
xor
rol
pop
or
dec
dec
rclb
dec
mov
jne
fistpll
cmp
sqrtps
and
das
and
loop
jne
jp
jle
dec
mov
hlt
hlt
imul
mov
lret
sbb
and
fistl
mov
or
and
push
mov
or
inc
mov
jno
mov
cmpsb
les
test
dec
inc
xchg
cmp
jns
mov
dec
mov
pop
mov
rclb
call
lcall
loop
scas
jno
mov
rcl
xor
push
popf
xor
mov
outsb
shrb
cs
mov
cmp
xor
sbb
cs
and
clc
movsl
rcrb
add
fwait
dec
clc
scas
fnstsw
popf
pop
iret
push
test
add
pusha
push
xor
xchg
xchg
das
adc
imul
mov
mov
hlt
subl
xchg
jno
lock
push
js
xorb
xchg
popf
cmp
repz
push
inc
pop
out
mov
out
out
fcoms
jg
mov
daa
loop
lea
adc
push
xor
mov
xchg
or
insb
mov
lahf
cs
mov
lret
mov
inc
aaa
mov
pusha
js
leave
push
push
mov
xor
iret
adc
or
iret
lret
mov
mov
fyl2x
push
pop
in
mov
hlt
xchg
inc
push
jg
cltd
dec
pop
jns
out
push
jp
and
repz
aas
sub
std
mov
fdivl
das
out
cmc
insl
jno
push
cmp
mov
mov
ret
insl
insb
push
stc
inc
or
inc
dec
ret
into
jae
adc
mov
mov
int
es
add
daa
and
lcall
add
mov
icebp
mov
aam
shr
sbbl
sub
orb
add
fcmovu
in
je
jb
lock
mov
adc
sbb
jne
jbe
adc
call
adc
nop
ss
and
ficoms
mov
cmp
pop
adc
dec
add
popf
xor
jae
jne
mov
xchg
jle
lret
push
sbbb
in
scas
dec
shrb
popa
mov
int3
stos
cld
cmp
scas
es
cmc
imul
je
xchg
sub
xchg
mov
out
and
sub
jo
lea
scas
or
stos
movsl
jns
mov
dec
xchg
cli
mov
mov
rclb
adc
push
sbb
leave
dec
gs
and
cmp
dec
movsb
hlt
xchg
xor
mov
int
ljmp
movsb
mov
cmpsb
push
jae
pop
jns
notb
jp
insl
addr16
pop
push
insl
cmp
sbb
mov
insl
mov
push
in
dec
mov
stc
gs
inc
cltd
dec
xchg
lcall
fs
repz
and
jmp
pop
mov
or
fdivrs
es
nop
lods
mov
repnz
push
push
dec
jns
jnp
jecxz
pop
pop
cltd
xor
stos
out
mov
popl
loopne
sub
add
xlat
jmp
repnz
mov
movsb
in
jne
nop
bound
mov
mov
notl
in
mov
pop
stc
cmp
push
dec
cmp
dec
pop
cmp
in
xchg
imul
stos
sub
push
mov
pop
lods
push
jb
aam
jmp
fldt
jns
pusha
enter
sub
fcmovnb
sbb
pop
fwait
push
dec
xor
jmp
std
sbb
fistps
fwait
mov
add
fnstenv
cld
xchg
js
and
mov
loopne
fstps
das
cmp
cmp
imul
and
inc
in
mov
loop
les
mov
rclb
pushf
popa
sub
push
sahf
scas
cmpsl
insl
test
gs
pop
pop
js
inc
mov
lret
dec
or
loopne
int3
fnsave
pop
mulb
insb
xchg
mov
xchg
jnp
jae
inc
data16
pop
test
sbb
push
jo
and
xchg
jno
enter
movsl
push
dec
push
inc
dec
testb
jecxz
add
movsb
push
cmpsl
inc
loope
jae
inc
test
int
adc
stos
ds
xchg
pop
sub
xor
pop
and
jmp
mov
xchg
stos
test
mov
int
mov
cmp
mov
mov
sbb
adc
mov
clc
lcall
in
inc
xchg
test
fidivl
jmp
outsb
dec
jno
daa
sub
int
ret
and
xchg
xchg
addb
ja
sbb
jge
es
pop
lret
flds
sbbl
xchg
pop
mov
outsb
xchg
cs
out
out
inc
cmp
enter
ret
sbb
push
xor
mov
rorl
test
shrl
sub
dec
push
mov
or
aad
fnsetpm(287
jnp
push
pop
test
out
jle
in
daa
notl
inc
jbe
movsl
jg
sbb
jno
movsb
mov
xchg
cmp
ret
adc
sub
ror
flds
pop
push
stos
pop
sub
mov
mov
mov
lods
or
mov
pop
xchg
xor
shll
mov
fdivs
push
fsubr
jno
cli
xchg
std
adc
gs
mov
push
mov
divl
jg
xchg
sbb
mov
jg
les
sbb
in
test
fadd
mov
pop
in
sbb
cmp
mov
subl
arpl
decb
mov
out
pop
mov
pop
gs
in
cmp
pop
add
mov
pop
ljmp
jno
push
rclb
fdivp
popa
or
cmp
insb
inc
nop
sub
into
push
xchg
call
enter
lea
nop
daa
sarb
lds
mov
dec
int3
pop
xchg
sub
sbb
mov
sub
test
xchg
dec
imulb
jg
aad
xor
std
sbb
mov
jo
jmp
lock
gs
sahf
stos
xchg
dec
jb
pop
fsubrl
ret
sub
mov
fld
cwtl
adc
push
pop
mov
mov
sbb
testb
testb
push
lods
mov
sbb
or
cwtl
cs
push
sbbl
mov
fs
xor
inc
mov
push
cmp
push
sub
inc
shll
cmp
scas
dec
xchg
aaa
inc
pop
imul
cmp
add
fnstcw
push
out
push
stos
pop
enter
mov
ja
sub
ss
js
adc
push
bound
jge
sbb
jmp
mov
jb
push
cmp
xor
inc
outsb
mov
andl
ja
out
roll
add
outsb
mov
xor
and
rep
shrb
xchg
iret
jecxz
cwtl
xor
dec
jmp
or
bound
cltd
out
pop
fcomi
test
stos
out
pop
mov
cmp
jb
mov
or
int
or
or
mov
mov
jge
inc
xor
into
pop
nop
push
out
cmp
mov
cmp
and
gs
into
mov
jle
mov
jno
aad
lret
cld
into
ljmp
cmp
dec
aaa
outsb
push
jo
push
mov
push
pop
pop
mov
pop
icebp
mov
pop
popa
pop
cmp
add
stc
out
fsubp
cmp
jnp
aam
popf
sub
outsl
popf
vpmulhw
movsb
cmp
popf
pop
insb
and
hlt
lea
or
and
out
ret
inc
stos
jecxz
jmp
push
push
sbbb
or
sbb
cmp
jne
adc
mov
fcoms
insb
loop
dec
out
adc
mov
jmp
lock
xor
lret
mov
aaa
jmp
sub
add
cmp
sahf
insb
sti
cmpsl
call
xor
jnp
cmp
test
or
je
add
cmp
shlb
xor
loopne
xchg
jmp
push
sub
pop
cmp
lock
jmp
aad
aas
pushf
lcall
sahf
and
mov
es
and
xchg
insl
inc
in
icebp
jg
add
sahf
int
outsb
mov
mov
jle
jl
sbb
and
sub
sti
mov
mov
adc
mov
stos
jno
in
mov
add
xchg
addl
mov
sbb
inc
cmp
sbbl
cmp
jp
arpl
lds
inc
dec
xor
add
xor
xor
adc
pop
icebp
inc
xchg
sub
or
add
mov
cwtl
or
outsb
xchg
lods
sbb
pop
stos
mov
push
movsl
or
rcl
inc
pop
hlt
jmp
mov
cwtl
arpl
inc
out
into
lcall
mov
xchg
popf
bound
push
add
and
cwtl
aad
cmp
pushf
sbb
movb
movsl
and
das
push
ret
or
mov
mov
xchg
or
icebp
les
inc
or
cld
push
xchg
imul
dec
and
sbb
add
sbb
ds
pusha
outsb
xor
stos
inc
bound
jge
gs
mov
dec
loope
pop
fwait
ljmp
insb
test
inc
dec
call
inc
ljmp
xchg
xchg
scas
and
mov
inc
outsb
push
mov
fnstenv
sub
aaa
sub
xchg
scas
ret
hlt
push
imul
popa
test
aam
hlt
add
mov
push
in
pop
jnp
push
dec
cmp
cmp
inc
cmp
dec
sbb
std
dec
insb
cmpsb
cmp
push
out
les
mov
nop
repnz
sbb
xor
push
aad
je
push
jle
push
shlb
and
lcall
decb
push
ds
dec
xchg
repz
and
ret
and
mov
pop
and
push
push
les
push
cld
push
cmp
push
cltd
cwtl
ss
jb
hlt
mov
sbb
shll
call
add
out
push
lock
outsb
pushf
lods
mov
rolb
pop
lret
pusha
mov
mov
sahf
daa
sub
pushf
pop
inc
fdivrs
out
jmp
adc
aam
mov
mov
ljmp
mov
icebp
xor
adc
inc
out
mov
add
arpl
test
jp
add
mov
pop
sub
mov
xor
push
test
mov
push
jb
shll
pop
out
fimuls
add
xor
and
shr
push
test
imul
inc
xchg
sub
lods
in
xor
call
mov
imul
fcomi
mov
mov
outsb
gs
push
ret
dec
push
xor
sarl
add
push
sub
jb
ret
imul
mov
aam
icebp
jae
addr16
fnsave
int
ss
inc
sub
jns
clc
xor
lret
mov
sub
cmp
sub
mov
imul
lret
inc
and
mov
and
ljmp
fidivl
pop
pop
sbb
push
lods
fsubs
insb
jno
and
imul
hlt
mov
test
ret
adc
mov
stc
sbb
inc
push
dec
pop
outsb
ss
push
lods
out
icebp
nop
bound
jp
cmc
es
jg
pop
mov
mov
xor
jg
call
ret
mov
jmp
jns
add
adc
jns
loope
sub
pop
mov
movsl
or
mov
pop
hlt
inc
sbb
dec
ret
clc
and
loopne
lret
pop
adc
sbb
jle
fbld
loope
lds
sub
inc
or
insl
jecxz
test
clc
add
sbb
sahf
push
mov
jl
sbb
xchg
cmp
loopne
into
fidivrl
popf
fwait
mov
cmp
jecxz
inc
lcall
or
fmuls
test
push
sbb
rcr
je
arpl
cmpsl
mov
mov
mov
pop
cmp
xchg
inc
sahf
dec
sub
inc
pusha
out
push
pop
leave
push
xor
adc
inc
fmull
jb
cld
out
pop
adcl
nop
add
insl
pmulhuw
xchg
sub
and
and
cmpsb
imull
in
pushf
lea
sbb
add
sub
pop
test
iret
lcall
pop
hlt
or
negb
loop
adcb
jnp
shl
xor
mov
inc
sti
push
or
inc
gs
push
in
mov
pop
cld
shl
loopne
fiadds
pushf
rcr
jbe
pop
repnz
adc
out
inc
sub
push
iret
ret
mov
jmp
xor
mov
pop
mov
out
mov
in
mov
add
inc
or
test
jne
in
ret
mov
dec
ret
fisttpl
add
xlat
stos
sub
dec
cmp
fcoms
dec
out
imul
mov
insl
and
adc
cmp
fidivs
shll
gs
sub
sub
fldl
inc
fstl
mov
cmpsl
movsl
push
push
hlt
jo
fsubs
inc
popa
ret
ljmp
xchg
xor
es
pop
xchg
mov
push
inc
mov
xchg
jb
popf
lret
pop
scas
das
cltd
sbb
cmpsb
mov
lods
insb
dec
fistps
xor
shrb
xor
gs
xor
cmp
roll
add
pop
test
insl
mov
out
xchg
movsb
int3
notl
stc
jo
add
out
jecxz
pmulhuw
cltd
test
xchg
mov
mov
enter
jg
fxch
es
in
sub
push
push
mov
pop
jp
jb
test
call
fbstp
jne
aaa
push
mov
adc
outsl
insl
inc
mov
cmp
xchg
xor
dec
daa
mov
jp
dec
push
pop
mov
pop
fnstenv
pop
lahf
ss
call
sub
js
mov
cs
and
ret
mov
les
or
sbb
stc
cmp
jns
xchg
sub
aas
out
cmc
mov
into
adc
push
inc
scas
push
outsb
and
js
out
test
dec
pushl
and
cmp
aaa
fs
jo
and
pop
test
hlt
imul
in
sbb
mov
flds
mov
xchg
mov
sbb
cmpsb
inc
push
ja
sbb
fs
stos
push
sti
in
mov
and
pop
adc
icebp
mov
pusha
sbb
xlat
push
jo
adc
arpl
pop
aam
fcompl
arpl
ljmp
add
sbb
or
and
js
cmpsl
je
or
xchg
mov
es
imul
test
je
ljmp
jnp
sbb
int3
pop
inc
pop
fldenv
cmp
mov
dec
aam
jg
fwait
arpl
lea
mov
pop
mov
mov
shll
jo
int3
lret
pop
xchg
sbb
mov
js
jnp
jecxz
imul
js
mov
add
test
iret
dec
or
mov
mov
fiaddl
inc
inc
lcall
lock
xor
or
mulb
push
in
or
push
mov
mov
rcl
das
mov
jo
in
pop
xchg
or
dec
jl
xor
in
scas
lahf
dec
enter
aad
subb
jbe
cltd
jno
xchg
add
add
lret
outsb
xlat
mov
das
stos
scas
xor
adc
xchg
add
dec
in
jge
hlt
dec
inc
xchg
cli
xchg
add
movsl
jp
rcrl
rcl
adc
shll
nop
inc
lea
bound
lods
cmp
cli
or
test
mov
rorb
std
dec
push
or
imulb
cmp
jle
or
xor
push
push
insb
int3
mov
das
in
mov
mov
jp
fisubrl
sbb
inc
sbb
inc
outsb
andl
mov
icebp
mov
fmul
xchg
inc
fbstp
fisttpll
mov
cmp
xor
mov
clc
popf
cmp
or
test
jmp
leave
inc
fnstenv
test
fsubl
and
cmpsb
pop
in
sub
movsl
xlat
je
sbb
lds
insl
mov
mov
xor
mov
lea
push
cmp
ljmp
pop
hlt
psubq
or
cltd
hlt
mov
fsubrs
mov
mov
insb
mov
call
xchg
insb
inc
fldenv
mov
inc
jecxz
rolb
jns
ja
lret
hlt
ret
shrl
jo
test
xor
mov
fldenv
dec
in
xchg
scas
inc
add
dec
fists
ret
out
jmp
mov
arpl
mov
iret
lcall
ficomps
and
jno
daa
jle
es
sub
cmp
xchg
jl
loopne
sub
xchg
fisubl
xor
mov
mov
imul
daa
or
mov
cmp
movsb
inc
fcom
push
lods
mov
or
cmp
in
stos
ljmp
xchg
repnz
sub
les
jp
jo
stos
sub
imul
push
loop
xchg
mov
inc
scas
movsb
popf
aas
mov
scas
adc
push
fadds
ljmp
push
mov
pop
add
mov
stos
push
decb
inc
mov
sbb
push
or
stc
js
test
jp
scas
rcll
fdiv
sbb
inc
xlat
pop
das
mov
sbb
or
push
fcmovnb
push
jl
add
ss
pop
jp
inc
pop
bound
lods
push
popa
jae
cwtl
addr16
xchg
jns,pn
insb
adc
mov
aas
inc
pop
add
mov
int
jge
mov
pop
and
fwait
mov
add
jae
mov
dec
lods
jmp
std
sti
xchg
into
mov
jge
js
clc
jne
push
cmp
imul
rorl
fsubrl
add
xor
sbb
or
cmc
pop
outsl
add
loope
mov
adc
dec
loope
loope
orb
cs
sub
dec
das
cli
imull
aaa
sbb
jne
or
jbe
aaa
or
sub
mov
dec
div
mov
aaa
adc
mov
mov
ds
adc
cmp
movl
mov
shrl
arpl
cmp
lret
loope
mov
pop
inc
lret
scas
inc
add
aad
cld
push
pusha
sub
push
jmp
sub
fiadds
icebp
mov
pop
mov
inc
sbb
cmp
push
add
cmpsb
xor
dec
icebp
fnstenv
adc
gs
cltd
dec
mov
cmp
mov
inc
add
dec
xchg
jae
add
sbb
add
lock
xchg
push
out
imul
pusha
cmpsb
movsl
in
fisttpl
mov
je
imul
dec
into
jge
dec
xchg
inc
adc
lret
adc
fwait
mov
test
test
fs
rcll
inc
jns
add
dec
lahf
or
sbb
scas
lods
fbstp
ret
add
aas
jle
es
outsl
jmp
jl
dec
dec
push
mov
xchg
pop
imul
lock
jae
add
xor
jbe
fmuls
push
jbe
xor
shrb
out
pop
jmp
add
mov
mov
sub
xor
cltd
test
aaa
scas
stc
pop
data16
mov
and
cmpl
adc
sub
popa
mov
stc
andb
test
mov
cmc
test
xchg
sub
test
imul
bnd
addl
adc
lret
andb
lcall
jmp
shlb
xor
out
test
imul
and
jae
xchg
pop
lcall
cmp
or
test
aam
sbbb
xchg
fidivs
or
iret
movsl
add
inc
cmp
dec
xorl
push
lods
xchg
sub
mov
mov
inc
pushf
push
dec
cltd
out
lds
mov
cmp
insb
cwtl
sbb
sub
jo
jmp
or
or
jb
or
std
cltd
insl
bound
jo
mov
mov
int
mov
push
lods
jge
scas
lds
xchg
cmp
dec
push
xchg
test
mov
sbb
dec
mov
push
inc
and
out
sahf
mov
les
mov
push
pop
dec
je
mov
jmp
aam
addr16
repz
xor
orl
fwait
in
out
mov
icebp
pop
hlt
xchg
mov
lds
testb
mov
push
jp
and
sub
mov
cmp
lods
inc
push
mov
lret
sahf
fiadds
fldcw
faddl
cwtl
inc
fbstp
sub
jbe
pop
scas
ljmp
pop
lock
xchg
add
stos
rorl
add
popf
sub
or
mov
mov
cld
dec
adc
shll
mov
inc
fldlg2
imul
jl
movsb
pop
out
lds
mov
insb
clc
ret
mov
push
inc
mov
out
addr16
push
cmp
popa
clc
repz
cmp
pop
fsubp
dec
cmp
or
mov
and
outsl
inc
and
incl
cmp
cmp
adc
inc
sub
stos
mov
outsb
ret
insl
push
push
mov
and
loop
clc
lcall
ja
xor
mov
idivl
and
lea
jae
dec
loope
or
or
cmpsl
lea
or
cwtl
fidivs
aad
sub
mov
pop
shlb
inc
mov
nop
in
sub
mov
test
shr
push
jle
dec
test
add
outsb
xchg
sub
dec
sub
repnz
cli
xchg
xchg
jmp
int3
aad
sbb
xchg
or
iret
lret
cli
push
xlat
fbld
mov
pop
push
and
adc
jge
or
js
out
pop
out
xlat
incb
mov
in
ss
adc
loopne
lcall
and
mov
xchg
mov
push
pop
scas
cmpsb
jle
clc
mov
fsubrl
push
add
gs
xor
cltd
in
scas
xor
xlat
jnp
mov
adc
xlat
inc
imull
cld
jg
inc
push
loop
jbe
xor
mov
sbb
dec
ficoml
sbb
pop
jnp
push
stos
es
and
cwtl
das
arpl
mov
and
xor
cmp
xchg
stos
mov
add
sahf
mov
cmp
jne
or
movsl
add
sub
inc
cli
xchg
fidivrl
pop
jmp
mov
ficompl
mov
in
cmpsb
sub
pop
jnp
outsl
and
lds
fidivl
mov
outsb
mov
add
mov
jb
cltd
add
mov
outsb
mov
inc
fcompl
fsub
add
mov
daa
sbb
aaa
inc
cmpsl
cmp
inc
outsb
enter
inc
push
push
hlt
mov
jg
sahf
fnstsw
test
lret
dec
mov
ret
dec
dec
sub
rcl
mov
or
mov
xchg
out
mov
inc
adc
aam
jmp
and
inc
xor
in
cmp
inc
xchg
jo
aad
ljmp
and
data16
push
xor
xor
pop
xor
loope
or
fstl
insb
test
inc
and
adc
cmp
addr16
sbb
mov
pop
pop
in
std
lret
adc
test
xor
adc
pop
dec
xchg
je
dec
fildl
xchg
sbb
adcl
bound
stos
lcall
cltd
sub
jae
test
loop
jmp
in
add
xchg
or
add
rorb
mov
cmp
push
mov
gs
cmp
hlt
xchg
stc
mov
cmpsl
cmpl
popf
inc
or
in
outsl
jns
add
es
inc
push
imul
aad
push
mov
sbb
rcrb
xchg
dec
sub
scas
subb
int
jmp
mov
mov
jle
adc
into
popa
xor
pop
jo
push
call
leave
push
stos
jmp
cmpsl
bound
fcomip
mov
fidivrl
pop
pop
aaa
pop
push
jg
rcrl
insb
mov
negb
insb
push
addr16
and
pop
scas
jnp
pop
mov
ljmp
aam
scas
stos
mov
mov
push
faddl
stc
andb
fists
pop
adc
shrb
aam
lret
in
int
adc
aaa
aad
mov
jbe
repz
jmp
loop
xchg
adc
fucompp
cmpsb
jge
idivl
in
xchg
xchg
lds
es
nop
ret
mov
mov
repz
cld
mov
lods
outsl
mov
scas
ret
add
scas
and
push
sub
and
jl
fisubrs
andl
cmp
xchg
shr
shrl
pop
lock
or
mov
scas
sbb
in
adc
ljmp
aas
mov
sub
pusha
mov
and
mov
fidivl
push
push
rep
sbb
fmull
call
scas
mov
pop
scas
dec
dec
cmc
cli
add
ror
lcall
lcall
outsl
jmp
jb
xor
pop
fwait
xchg
sbb
pushf
les
bound
lods
add
je
scas
fdiv
jo
or
setb
es
inc
mov
adcl
mov
push
pushf
pop
repz
pop
insl
loopne
inc
faddl
jne
hlt
loope
jge
and
push
setnp
call
dec
js
push
cmp
jecxz
loop
dec
xor
stos
int3
pop
iret
pop
adc
dec
mov
sti
fwait
mov
imul
or
cmc
lcall
push
jmp
fwait
cmpsl
fwait
das
testl
inc
pop
outsl
mov
aaa
dec
cli
xchg
fnstcw
or
sahf
push
jbe
repnz
push
mov
lret
decl
notb
inc
xor
sbbl
daa
test
data16
insb
jbe
bound
fstps
lcall
clc
inc
add
sti
sbb
out
lret
movsb
ret
jmp
pop
xchg
repz
lret
aas
dec
rol
enter
arpl
imull
adc
and
xor
xor
in
mov
dec
sbbl
mov
sub
or
adc
add
inc
das
movsl
adcb
cmp
pop
xchg
jmp
pop
js
mov
adc
fcomps
divl
test
xchg
sub
int3
inc
leave
cmp
mul
dec
sbb
push
jns
test
popa
adc
pusha
subb
divb
scas
dec
icebp
pop
fsubrl
push
jno
cwtl
cwtl
loopne
adc
mov
loopne
lret
mov
mov
lea
add
add
loope
jecxz
daa
adc
popa
xor
sub
loopne
out
mov
sbb
rolb
dec
xchg
pop
insb
and
push
fcoms
aaa
pop
jmp
les
xchg
dec
and
sub
add
inc
out
lods
subb
push
sbb
xchg
aam
fdivl
jecxz
rcrl
jg
xor
in
or
pop
pop
cmp
jl
and
icebp
jae
ffree
mov
cmpsb
inc
fistpll
icebp
mov
iret
dec
push
shrb
ret
aad
out
push
or
mov
jae
out
hlt
sbb
addb
push
inc
push
lods
inc
in
inc
cld
push
ss
bound
mov
push
push
pop
in
std
sahf
test
cmp
lock
xchg
xchg
andl
push
test
dec
leave
ret
pop
pop
sub
shrb
push
jp
shl
out
mov
dec
dec
pop
jle
icebp
inc
or
lret
cmp
pop
insl
pop
xchg
in
jb
push
xchg
dec
cld
xchg
dec
ds
mov
js
sbb
jb
test
sub
jp
aad
out
sbb
and
mov
cmp
cmp
cmpsl
pop
jle
sbb
clc
cs
sub
add
add
push
mov
shlb
fwait
ret
cmp
fdivrs
xchg
inc
mov
fs
push
sub
aas
divb
and
loopne
cmp
fimuls
popa
das
sub
add
popf
xchg
push
addr16
cmpsb
enter
push
lret
mov
jge
rorb
iret
sahf
pop
test
lret
jae
sub
xchg
fnstenv
or
int
scas
hlt
movb
adc
mov
push
loop
sbbl
jl
aaa
in
lods
mov
test
push
or
add
ss
adc
add
xor
push
jne
nop
cltd
in
test
pop
jb
imul
and
xrelease
pop
leave
mov
std
enter
mov
mov
xchg
scas
adc
jmp
scas
or
jbe
mov
inc
es
pop
and
ror
stos
push
rcll
not
cli
pop
imul
add
outsb
pop
push
popf
mov
and
arpl
xchg
shrl
inc
inc
mov
gs
fdivrs
xchg
xchg
or
and
push
mov
and
shl
jle
rcrl
imul
movsb
gs
inc
or
add
es
in
icebp
jmp
fldenv
sahf
add
inc
pop
out
jge
in
mov
xchg
outsb
adc
out
sub
negl
cmp
cltd
pop
or
and
xchg
in
add
test
xor
pop
cmpb
and
or
push
stos
xchg
pop
sti
jbe
pop
icebp
jl
stos
sahf
lret
inc
fs
in
mov
sub
add
aas
fs
jo
inc
fsubs
xchg
cli
add
or
popa
lahf
sbb
push
fisubrs
orl
sub
mov
iret
cs
or
inc
fsubrl
and
sub
or
outsl
cwtl
mov
mov
lods
mov
popf
mov
mov
scas
shl
rcl
jns
or
icebp
jle
cmpsl
and
mov
push
fisttpl
scas
and
pop
and
and
jp
aaa
mov
xor
enter
pop
cmp
push
popf
add
sub
lods
and
andb
cmp
out
sbb
dec
xchg
sub
cmc
gs
xchg
push
push
sbb
ljmp
das
daa
stc
fsub
movl
cld
mov
call
test
and
jg
or
stos
add
push
mov
xchg
pop
loopne
fisubs
out
and
fdivl
push
pop
icebp
mov
mul
adc
sub
pop
out
cmc
aad
in
add
jno
xchg
jg
fdivr
sahf
pop
stos
lret
and
sbb
mov
test
inc
push
jae
jle
insl
jg
mov
xchg
pop
jnp
sti
xchg
cmp
fidivs
pop
sbb
jg
ret
pop
push
cld
mov
adc
xchg
xor
orl
pushf
lret
push
inc
sbb
test
mov
out
cli
sub
mov
and
xor
rorb
arpl
or
std
repz
test
lea
loope
and
decb
push
adc
or
in
xchg
adc
inc
mov
push
xchg
and
jnp
mov
test
daa
cmpsl
push
adc
and
push
cmpsl
mov
push
fcmovbe
shrl
xor
jns
mov
and
inc
in
xchg
sub
mov
dec
sbb
lock
and
into
enter
cld
insb
cmp
sub
or
mov
mov
mov
inc
mov
mov
or
sbbb
xor
repz
in
mov
cmp
inc
push
push
push
je
jne
and
mov
imul
xchg
imul
fimull
dec
into
fnstsw
sbb
cmp
jg
leave
clc
je
pop
sbb
jbe
cld
stos
xchg
loope
cmp
hlt
imul
fisubl
fsubl
movsb
das
xchg
xor
xchg
ret
stc
cmp
ret
notl
dec
cwtl
lahf
je
in
jle
scas
lods
dec
jmp
inc
cmc
pop
xor
bound
ss
push
push
popf
in
mov
or
inc
xchg
dec
xor
and
pop
cmp
or
fsts
les
iret
inc
fsub
cld
pusha
mov
xchg
or
test
mov
insl
in
mov
lds
sar
adc
enter
stos
lcall
je
adc
or
pushf
adc
out
xor
mov
in
dec
data16
sbb
sti
push
stc
mov
xchg
jmp
mov
pop
mov
jne
mov
push
arpl
mov
cmp
bound
lret
and
into
push
add
cmp
sub
pop
cli
ret
out
cmpsl
hlt
sbb
pop
faddl
outsl
push
cltd
cmp
mov
push
mov
in
add
cmc
xor
jne
iret
idivb
pushf
ss
pop
popa
je
push
test
bnd
or
fwait
rcll
rorb
in
shlb
sbb
nop
adc
push
lds
mov
jb
inc
cld
xchg
fcmovnb
pop
xchg
cmpsl
pop
sbb
andb
jo
shl
xor
bound
and
push
in
insl
stc
mov
enter
sbb
aas
test
dec
loope
sbbl
pop
mov
jmp
insl
clc
jo
mov
xchg
orl
pushf
and
insl
mov
pusha
hlt
mov
push
andl
add
dec
movsl
cmp
lea
inc
je
ret
pop
jmp
dec
xchg
pop
and
hlt
inc
pop
mov
shrb
cwtl
pusha
mov
adc
scas
adc
lods
or
les
loopne
mov
test
stos
les
and
add
or
loopne
mov
xorb
in
test
push
test
in
es
movsl
insb
jne
lods
cmp
and
and
cmp
popa
std
inc
in
out
mov
in
daa
ss
push
rcr
in
loope
sbb
cltd
pop
push
mov
xor
push
scas
js
dec
push
outsb
fwait
xor
lret
jae
adc
imul
pop
sub
sub
push
push
mov
jge
lds
jae
jne
dec
rolb
adcl
pop
mov
sbb
lahf
dec
adc
push
mov
and
mov
gs
ljmp
jno
jge
push
movsl
rcl
mov
ret
and
adc
jno
in
and
adc
dec
loopne
xor
pop
arpl
inc
push
mov
sbbl
cli
push
rcll
aas
jno
imul
or
inc
fldt
push
push
lods
xor
inc
adc
sbb
mov
cs
outsb
ret
jmp
jl
scas
sub
adc
inc
push
pop
outsl
and
in
sub
pop
push
xor
divb
push
or
repnz
ss
jle
bound
into
jno
test
mov
leave
test
jp
stc
cwtl
dec
fwait
dec
mov
pop
and
sub
lcall
frstor
out
mov
xchg
jmp
push
mov
fistl
jbe
sub
xlat
aam
hlt
add
data16
sub
pop
popf
insb
pop
jns
xchg
pop
lods
jmp
inc
in
push
sahf
push
leave
xlat
adc
into
out
ja
cmp
scas
cwtl
outsb
cmp
imul
lock
pop
repz
or
vmovdqa
cmp
stc
mov
sti
mov
mov
xchg
cmp
xchg
add
push
movsl
je
pusha
lret
cmpsb
out
or
int3
dec
push
cmp
mov
cmp
iret
mov
xchg
insl
cmp
addl
inc
and
mov
mov
xchg
stos
popa
sub
add
mov
xchg
jne
std
ljmp
inc
inc
cli
push
out
sub
cmc
sbb
ljmp
xchg
outsb
cld
out
and
lods
push
xchg
lods
repnz
lods
inc
add
adc
nop
xor
pop
dec
xor
jp
jo
hlt
sub
pop
lods
inc
dec
xlat
stos
push
and
test
lret
or
movsl
xor
xlat
pop
call
sub
add
rorl
cmc
dec
outsl
push
jge
jbe
cmc
ja
popf
inc
fsubrs
or
mov
sbbl
loop
test
inc
push
or
test
jns
into
outsb
cld
loop
stc
mov
cmp
sub
jnp
mov
push
adc
adc
shlb
sub
fwait
inc
mov
stc
out
sub
adc
mov
mov
js
mov
stc
test
cli
pop
popf
or
addb
jmp
lods
xor
pop
xchg
lods
xchg
sbb
rolb
lret
inc
mov
push
jb
mov
iret
push
sub
jns
mov
push
out
test
push
mov
push
mov
arpl
lock
inc
xchg
push
pop
aad
lea
bound
testb
ss
inc
sub
subb
and
outsb
or
ds
rorb
sbb
cmc
in
nop
and
add
scas
dec
rolb
mov
sub
stos
adc
mov
fs
lcall
inc
icebp
xchg
pop
insb
mov
bound
jp
shll
or
fstpl
jge
dec
or
sub
notb
aas
imul
mov
cmp
inc
jmp
loopne
mov
loope,pt
bound
shl
jnp
scas
sbbb
add
xchg
push
sbb
mov
pop
add
mov
cmp
insl
pop
mov
dec
mov
shlb
inc
arpl
sti
cwtl
das
and
xchg
das
lret
cld
inc
push
push
cwtl
mov
mov
adc
hlt
iret
rorb
jmp
dec
xor
pop
add
aam
or
lods
cmp
mov
adc
or
cmc
js
and
incl
pop
push
pop
jmp
mov
dec
lods
pop
out
imull
shlb
fsts
sahf
xchg
push
push
sub
nop
call
dec
roll
into
xlat
mov
shrb
or
movsb
in
rcll
jp
imul
notl
repnz
stos
cmpsb
icebp
sub
addb
pop
out
mov
cmp
out
or
repz
lcall
jo
mov
cmp
fmull
add
or
jne
es
mov
mov
sbb
lea
out
jg
sub
insb
movaps
lods
bound
mov
inc
ss
push
sti
mov
repnz
mov
cli
pop
mov
lea
cmpsl
pop
fstl
or
sbb
fstps
clc
shll
std
in
jg
hlt
mov
sahf
mov
xor
push
push
pop
insb
adc
cld
fbstp
inc
jg
shll
add
repz
mov
stos
dec
dec
enter
xor
lret
or
push
xor
arpl
lahf
loopne
test
or
call
popa
cld
xor
sub
cmc
iret
fcmovnbe
mov
push
add
xor
mov
es
cmp
orl
dec
sub
ja
adc
sbb
mov
addr16
add
lcall
in
and
mov
jae
push
and
or
test
cmp
pusha
stc
cmp
in
stos
mov
sbb
arpl
mov
jl
sub
adc
pop
pop
adc
ret
daa
outsb
fwait
pop
sbbb
and
dec
sbb
cld
dec
popa
pop
daa
fs
fdivs
leave
jb
push
fsts
mov
pop
cmp
sahf
jge
movsb
jns
or
call
iret
test
in
incb
push
in
out
leave
push
lret
jne
call
or
outsl
movups
loope
xor
xchg
stos
popa
jl
mov
fsubr
addb
mov
sbb
mov
mov
sbb
stos
not
push
mov
dec
icebp
iret
mov
dec
shl
in
mov
push
jb
call
add
xlat
jmp
adc
dec
fdivr
icebp
jle
jno
das
je
add
pop
mov
in
mov
inc
mov
cmp
stos
sbb
cmp
dec
loop
movsb
inc
call
cmp
xor
dec
lods
mov
sub
jmp
aad
stos
mov
pop
aaa
mov
out
pop
test
mov
test
js
int3
lret
das
or
sbb
pop
fadds
in
xor
mov
jmp
inc
mov
pop
pop
xchg
push
cwtl
scas
repz
sbb
inc
push
icebp
popa
mov
insb
cmp
cli
inc
xor
mov
cwtl
or
lret
sub
filds
sti
fnstsw
or
ss
aam
pop
shl
jp
pop
lods
adc
xor
lahf
ret
push
pop
pop
jp
sbb
pop
inc
adc
scas
lahf
mov
and
mov
dec
xor
cmp
and
call
jae
movsl
cmp
pop
sub
cltd
mov
sbb
push
dec
das
sub
stc
aas
mov
incl
ljmp
fldl
add
pop
out
test
je
pop
sbbl
jge
ds
add
adc
xchg
push
stos
dec
pop
jl
jecxz
cmc
mov
cmpsl
or
mov
lds
data16
cltd
pusha
xchg
popa
mov
shl
mov
mov
or
adc
mov
inc
ja
dec
inc
lods
sub
loope
rorl
scas
pop
out
ljmp
push
jbe
vpxor
fwait
pop
jae
icebp
add
cltd
jae
and
loopne
push
xor
add
mov
decl
sahf
xchg
adc
imul
xchg
jno
in
cmp
lea
xchg
mov
fwait
es
xchg
sbbl
inc
push
lock
xchg
jb
sahf
jns
sub
loopne
stos
xlat
or
les
pop
loope
cmp
push
aas
out
sarb
add
fcmovnu
pop
add
mov
outsb
cmpsl
inc
ss
scas
add
sahf
pop
clc
xor
sub
mov
shl
mov
call
mov
inc
sub
lret
ja
jecxz
rcl
daa
ret
xchg
mov
scas
call
popf
and
stos
notb
sub
dec
cmpsb
mov
dec
push
decl
inc
jno
lock
imul
insl
fs
mov
jle
shrl
test
call
add
out
xchg
adc
dec
cmp
movsb
hlt
push
sbb
sbb
and
cmc
mov
movsl
and
push
xor
lret
vmovdqu
inc
mov
pop
ja
xchg
lcall
popa
fdivl
arpl
add
fmulp
inc
shrl
pusha
scas
xchg
mov
mov
daa
icebp
or
jno
repz
pop
inc
pop
cmp
outsb
push
mov
rolb
sub
je
mov
js
adc
dec
mov
aas
es
fistpll
add
cmp
pop
pop
and
mov
in
xchg
adc
sbb
addr16
data16
mov
fimuls
cltd
jnp
pop
mov
aaa
clc
fcompl
pop
xchg
jnp
push
mov
divb
mov
faddp
sub
mov
int3
push
pop
or
sbb
mov
xchg
fistl
popf
jl
pushl
fidivrl
shlb
ret
jo
pop
cmp
mov
dec
inc
adc
lcall
iret
push
call
mov
cmpl
cli
jmp
adc
stos
and
mov
push
mov
pop
rcl
imul
xchg
add
push
repnz
js
cmpsl
test
mov
sbb
sbb
fisttpll
add
push
in
fimuls
cmp
cmp
pushf
popa
push
mov
fisttps
jae
cmp
push
out
loopne
test
inc
sbb
adc
insl
adc
lea
aaa
clc
push
xor
pushl
hlt
adc
int3
sbb
push
lcall
push
xor
sti
or
out
adc
xor
dec
cld
or
adc
mov
repz
pop
out
leave
dec
int3
andw
dec
shr
clc
lock
bound
jge
sbb
xchg
test
fdivl
idivb
mov
or
movsb
fistpl
in
test
shlb
push
add
fcomps
movzbl
inc
mov
notl
cmpsl
or
jno
dec
out
mov
out
push
call
mov
in
shll
out
push
sbb
pop
push
add
push
jno
lods
into
push
sub
bound
leave
and
mov
popf
or
and
dec
arpl
arpl
enter
loop
out
lret
or
jge
mov
in
jg
test
jnp
stos
jecxz
movsl
hlt
mov
xchg
lcall
push
arpl
out
sbb
add
inc
mov
cmpsb
stc
and
in
sbb
loopne
jae
and
es
mov
out
sbb
pop
mov
sbb
insl
sub
push
imul
cld
gs
dec
int3
mov
sbb
dec
pushf
ret
lea
push
push
mov
in
jb
push
mov
jb
in
insb
daa
inc
stc
xor
jp
jmp
adcl
adc
mov
sub
adc
ret
mov
and
loope
leave
iret
mov
jmp
jge
loopne
mov
outsl
pop
sub
pop
nop
add
mov
aaa
push
daa
cmp
fdivl
push
pushw
xor
mov
cmp
cltd
out
mov
in
std
and
aaa
push
adc
adc
fnsave
cmp
repz
dec
out
cli
cmpsb
xchg
mov
fdivrl
push
fiadds
fldt
cmp
and
repnz
pop
mov
mov
mov
mov
lret
mov
xchg
aas
outsb
jle
mov
and
and
pop
adc
loope
arpl
ret
mov
rorb
sbb
or
gs
sbb
cmpl
push
fcomps
fnsave
lds
dec
add
jo
sub
movsl
ret
pop
and
loope
pop
inc
sub
movsl
bound
loope
rclb
lds
push
movsl
add
rcrl
loop
push
adc
dec
lret
or
push
stc
sub
jns
daa
das
mov
or
pop
lcall
shrb
jo
test
push
add
cwtl
push
js
push
xchg
mov
dec
shll
out
jnp
jle
dec
lods
mov
sub
enter
fwait
incb
dec
xor
inc
ljmp
jle
and
pop
pop
cmp
add
dec
push
lods
testb
ds
push
mov
enter
adc
inc
or
dec
int3
fidivrs
das
data16
xor
fistpl
sbb
dec
ret
jecxz
cmpsl
fwait
out
jle
les
int
xor
int
das
xor
ja
rorl
or
adc
rcr
andb
inc
int
cmp
jns
lea
mov
pop
and
add
push
cwtl
jnp
xchg
imul
dec
mov
std
ds
or
pop
mov
cld
add
push
mov
add
test
int
sub
mov
rorl
and
orb
sbb
or
xchg
xor
aaa
into
cmc
in
adc
xchg
push
sub
sbb
mov
loopne
sti
roll
out
hlt
pop
mov
or
sbbb
scas
outsl
cmp
mov
sub
pop
dec
cmc
push
outsb
outsb
loope
scas
pop
push
xchg
jo
dec
pop
cmc
scas
mov
mov
clc
jg
mov
negl
or
aaa
mov
ljmp
jo
ret
repnz
sarb
jp
push
int3
xchg
icebp
push
repz
mov
bound
cmpsl
outsb
ds
pop
mov
js
sub
xor
and
shrb
inc
out
lods
clc
notb
aaa
dec
insb
subl
out
addl
and
mov
xchg
pop
stos
dec
into
pop
insl
push
out
movsl
popf
popa
push
jp
bound
popf
sti
dec
ja
xor
xchg
inc
imul
xlat
sub
push
imul
js
je
jns
sar
xchg
add
xchg
in
sbb
inc
sub
scas
inc
pop
push
mov
ret
fsubrs
mov
fdivrl
gs
dec
jo
or
push
push
fwait
das
or
cmpsl
outsb
sbbb
pop
addr16
or
lcall
lds
mov
nop
mov
cld
lods
scas
in
movsb
cmp
dec
ss
jl
cmp
cmp
push
js
jecxz
mov
pop
push
out
mov
or
jle
sub
sub
adc
push
inc
push
loopne
xor
roll
mov
aaa
push
and
add
push
mov
dec
dec
mov
xchg
dec
cs
inc
xchg
inc
xchg
pop
sub
xchg
test
test
add
into
mov
xchg
jns
xor
enter
and
repz
int3
and
movsb
cmp
xor
and
sub
mov
xchg
push
inc
stos
jns
xchg
mov
lods
ret
push
cs
hlt
push
movsb
pop
insb
clc
mov
cmpsl
and
pop
push
daa
mov
inc
xchg
dec
xor
xchg
sbb
push
aam
mov
lods
and
dec
popf
cli
adc
add
xchg
mov
xchg
xor
inc
jecxz
fwait
jecxz
mov
ret
rolb
cmp
xlat
cmpsb
int
lds
ss
dec
repnz
out
ja
incb
dec
ret
adc
std
mov
mov
in
mov
stc
mov
enter
loop
addl
sbb
bound
cltd
mov
push
xor
and
jo
cmp
xchg
add
daa
cmp
xor
bound
lods
pop
inc
out
in
ljmp
push
ljmp
ret
jnp
adc
mov
ret
jns
bound
mov
push
cmpsb
mov
leave
mov
je
jae
pop
rorl
cmp
fiadds
xchg
jle
in
dec
xlat
mov
push
inc
cmp
mov
cmpsb
gs
imul
lea
mov
bswap
mov
jle
xor
shl
test
cmc
jne
inc
mov
mov
sub
mov
cmp
pop
idivb
aad
mov
xchg
sub
pop
cmp
cmp
push
xchg
fwait
stos
inc
add
dec
sarb
dec
add
add
lock
bound
inc
lods
inc
xor
ss
ret
adc
add
jge
fwait
mov
pop
jno
insl
jg
push
ss
mov
mov
rorl
mov
xor
mov
sub
add
cmp
sbb
popf
out
test
ljmp
nop
clc
popf
scas
and
or
add
int3
mov
orl
in
lds
sub
and
jecxz
inc
int3
sbb
push
jmp
mov
mov
divl
aad
insl
mov
lret
sbb
js
in
inc
fs
fdivrs
or
xor
lret
test
and
push
jge
jbe
dec
cmp
add
mov
movsl
mov
movsl
jb
imul
pop
rcrb
scas
and
repnz
or
mov
jbe
jne
dec
push
xchg
sub
lds
lods
sbb
dec
into
data16
ljmp
pop
add
test
push
sub
or
inc
pop
jnp
and
push
xchg
call
or
aad
add
movb
xor
push
mov
mov
mov
sub
xchg
cltd
repz
xor
adcb
sub
cmc
cs
daa
test
xor
out
aaa
repnz
dec
or
xor
loope
icebp
je
popa
scas
les
cld
nop
cmp
mov
loope
enter
stos
aaa
ds
out
and
nop
es
in
push
push
cs
push
and
jge
mov
ret
jae
repz
mov
sbb
mov
jno
pop
xlat
stos
or
xchg
arpl
jno
lods
dec
les
sbbb
sub
cmc
mov
lcall
loop
sub
dec
jl
les
aas
lcall
push
inc
popa
add
pusha
aaa
inc
lock
jns
out
out
int3
mov
popf
sbb
or
cmc
dec
or
stos
sahf
imul
xchg
pusha
or
or
pop
test
cld
pop
daa
les
jnp
jne
sub
xchg
rorb
and
jl
jne
fdivrs
test
xchg
xor
xchg
sbb
dec
ret
cli
out
sub
mov
mov
in
inc
int3
inc
adc
mov
push
movsl
jecxz
ljmp
inc
lds
xor
cmp
out
leave
sub
inc
pop
sub
or
idiv
imull
xor
push
mov
clc
cmp
gs
aam
jno
stos
shrl
daa
inc
es
mov
sub
imul
lock
mov
push
mov
stos
stos
lods
add
xor
ljmp
cmp
fdiv
jno
push
cld
push
lcall
insb
jp
cmp
pop
bound
repz
cltd
xchg
pop
and
sbb
sahf
or
cmc
mov
pushf
push
push
push
xchg
mov
sahf
or
subl
aas
inc
sahf
sub
jp
in
rolb
pop
jo
sbb
xor
jp
push
push
test
out
adc
lods
and
loopne
ret
mov
jns
inc
lcall
or
loop
or
mov
pop
jb
dec
pusha
sti
or
sub
stc
fdivs
lret
bound
mov
test
adc
lds
fs
icebp
cmovno
test
lret
stos
jmp
or
ret
repz
mov
mov
xor
mov
lods
fistpll
cmp
ljmp
cltd
xor
push
std
call
into
cmp
adc
adc
dec
pop
data16
das
notb
ds
jno
cmp
mov
into
test
mov
decb
mov
pop
cs
fmull
adcb
out
fidivs
test
mov
out
mov
aam
out
jg
add
daa
cmp
push
and
push
xor
loopne
imulb
enter
jecxz
pop
xor
pop
push
ss
stos
adc
in
adc
jae
out
dec
and
ret
sub
jne
outsl
out
cmp
addb
add
out
xor
fdivs
pop
cmp
loope
cmpsl
imul
dec
push
popf
mov
fisubl
sahf
and
into
mov
push
pop
ds
xchg
mov
cmp
data16
and
jg
jmp
mov
fwait
test
ljmp
ror
mov
insb
outsb
jp
pop
mov
daa
sub
cmpsb
pop
rol
hlt
jp
xor
push
mov
fildl
adc
fcmovnbe
jno
fsubl
pop
outsl
inc
xchg
call
push
call
mov
loopne
xor
cltd
cmp
mov
xchg
or
cwtl
mov
lock
mov
ret
jecxz
ficoms
mov
jo
cltd
cmp
inc
push
push
jnp
dec
cltd
xchg
into
jle
adc
movsb
cmpsb
lock
adc
xchg
xchg
xchg
pop
movsb
cmp
mov
push
sub
sbb
mov
sub
test
nop
lock
movsl
in
inc
jecxz
or
sub
cmp
or
das
clc
cmp
leave
xor
xchg
dec
mov
pop
mov
mov
cmp
je
les
aam
or
das
addr16
adc
push
lahf
sub
or
daa
in
cld
lcall
in
test
fmul
push
dec
pop
xchg
mov
cmc
mov
sub
in
pop
clc
cmp
clc
mov
cmp
cmp
pop
sbb
push
daa
cs
sub
inc
sbb
pop
fstl
out
stos
mov
data16
ret
jbe
mov
in
mov
bound
fsubr
push
int
js,pt
pushf
cli
fs
data16
mov
cs
int3
jno
ja
add
xchg
inc
out
and
cli
push
cld
jb,pn
push
movsb
inc
push
sub
jl
cmpsl
out
cltd
gs
mov
pop
cmp
ljmp
jmp
icebp
add
jl
ds
adc
mov
inc
popa
fnstsw
test
scas
adc
push
xchg
adc
push
iret
aas
dec
cmc
jl
aas
popa
and
aad
mov
pop
insl
loop
lcall
push
sub
mov
rcrb
dec
test
outsb
sahf
jmp
jb
lods
cmp
add
popf
lods
xchg
scas
sub
jle
std
xchg
adc
cmp
mov
pop
in
add
addr16
xchg
cmp
mov
adc
mov
scas
movsl
cwtl
or
dec
sbb
fs
sub
dec
pop
cs
outsb
cmp
hlt
cmp
dec
mov
pop
cmpsb
xchg
scas
hlt
or
pop
rcrl
dec
mov
jno
or
or
pop
clc
mov
sub
insb
mov
and
cmpsb
xchg
add
push
dec
pop
in
sbb
in
ja
push
inc
push
aad
xchg
cmp
aam
dec
push
call
push
inc
push
xchg
jge
mov
xorl
pushf
leave
std
adc
das
out
test
push
sub
lahf
add
loop
and
add
es
jbe
ljmp
push
out
jb
ljmp
inc
ret
hlt
fildll
sahf
add
add
stos
xchg
outsl
dec
jge
in
inc
loop
mov
aad
sub
in
addl
inc
cmpsl
ljmp
push
push
inc
mov
xor
pop
dec
cmp
addb
jg
and
mov
ds
imul
or
ret
mov
push
mov
or
cmpsb
inc
pop
inc
pop
dec
mov
pop
mov
sub
rorb
jne
shlb
xchg
push
mov
loopne
sarl
sub
lahf
fcomp
and
test
or
popa
stc
adc
add
insl
andb
cmp
mov
jae
dec
sub
inc
lret
pop
je
fucomip
mov
push
test
dec
movsb
in
test
loopne
fnstsw
adcb
pop
lea
clc
or
fdivrp
inc
mov
xchg
test
jne
icebp
mov
sub
dec
xor
xchg
push
pop
in
xchg
jne
outsl
idivl
sub
inc
push
stos
stc
adc
mov
dec
loopne
fdivrp
mov
insb
adc
in
je
aam
pop
push
adc
mov
jecxz
inc
cmp
rolb
sbb
insl
das
inc
gs
aas
jmp
call
mov
push
push
pop
mov
call
sti
mov
roll
mov
inc
enter
clc
pop
ficompl
or
sbb
insl
les
sbb
sub
jecxz
xchg
or
sub
mov
xlat
jp
mov
lea
pop
sbb
lods
push
xor
jecxz
je
inc
and
jbe
test
jae
fisubs
pop
andl
mov
enter
mov
mov
and
cmp
jp
mov
lcall
fisubrl
xor
adc
dec
inc
and
dec
push
fs
add
scas
xchg
cmpsl
inc
mov
mov
inc
mov
push
inc
push
dec
ret
cld
ss
jp
call
sahf
mov
rol
int
pop
mov
mov
insb
jnp
mov
popl
xor
test
dec
push
lret
inc
cmpsl
sub
stos
add
add
mov
cld
lcall
mov
ret
loop
add
jae
stos
jae
xchg
adc
mov
and
test
sub
int3
into
sub
lret
and
cltd
repz
dec
inc
pop
jle
jp
pop
push
clc
push
nop
cli
cmp
or
lret
cltd
rorb
inc
pop
outsb
inc
push
pop
outsb
lea
mov
rcrb
fwait
cmpsl
insb
dec
xor
mov
push
in
out
ds
push
lea
mov
ret
addr16
call
es
test
dec
and
and
cs
ret
je
js
cmp
mov
inc
outsb
out
repz
inc
dec
dec
cmp
cmp
ret
negb
notl
stc
push
adc
ret
mov
idiv
xchg
sub
cmp
sbb
lock
popl
sbb
inc
and
lcall
adc
arpl
jne
jo
mov
int
into
js
iret
jmp
jno
push
adc
je
jns
sub
jle
or
push
dec
hlt
jnp
scas
cmpsl
imul
jle
pop
enter
inc
pop
jo
test
inc
xor
popf
lods
push
sbb
xor
or
lea
push
add
mov
add
es
dec
fists
lret
fnstenv
data16
and
pop
shl
out
inc
add
xor
adc
adc
mov
xor
rorl
aad
hlt
dec
jle
xchg
sbb
cwtl
mov
add
add
xchg
test
neg
mov
dec
test
jle
push
pop
fwait
ss
imulw
xchg
jle
mov
lods
call
cmp
mov
shlb
or
mov
jno
mov
in
mov
pop
mov
add
sti
sahf
test
rcrb
inc
data16
in
jnp
inc
cmp
push
inc
out
mov
mov
icebp
push
mov
call
cmpsb
out
pushl
xor
pop
popf
lds
in
loopne
and
scas
add
jmp
pop
dec
push
cmp
xchg
pop
mov
adc
sbbb
cmp
fists
adc
stos
add
jo
mov
fdivrl
pop
sahf
push
inc
xchg
push
mov
stos
adc
mov
jbe
clc
or
stos
inc
out
ja
insl
aad
push
jmp
jns
in
call
loopne
jnp
mov
push
jae
inc
gs
xlat
dec
cwtl
movsl
vminps
test
mov
pop
out
or
imul
mov
jne
popa
cld
mov
icebp
mov
adc
pop
lcall
push
dec
mov
insb
aam
out
mov
mov
lret
mov
test
add
ret
mov
fwait
jne
dec
pop
das
cld
xchg
adc
sbb
jns
scas
mov
mov
fwait
popf
fstps
mov
fldl2t
addr16
cs
xor
sub
insl
out
jns
lcall
xor
out
cmc
mov
mov
adc
fwait
shl
stos
in
or
stos
mov
lods
cli
sub
scas
js
fsubrp
jp
pop
jle
xor
pop
adc
xchg
inc
out
sahf
rcrb
clc
sub
or
and
pop
xchg
inc
push
out
jb
and
pop
ja
add
or
xchg
mov
dec
test
std
nop
repnz
lret
pop
test
ja
std
lods
xchg
lods
stc
rol
fs
push
stos
xchg
pop
mov
aas
or
push
xorb
dec
sbb
sti
fwait
fisubrl
push
shl
outsl
xchg
out
loope
loope
mov
insl
mov
add
lods
cmp
lcall
imul
cmp
test
jne
lcall
adc
mov
dec
leave
jl
popf
pusha
cld
pop
fs
fldl
sub
cmp
inc
lret
es
cmp
inc
into
pop
adc
outsb
mov
lcall
gs
outsb
aad
idiv
imul
mov
sub
mov
xchg
repnz
xchg
xor
mov
ds
push
push
repz
call
inc
jnp
addb
enter
inc
stc
clc
adc
fmul
push
leave
pop
pop
inc
mov
pop
and
or
add
mov
jo
push
dec
pop
in
repz
aas
movsb
or
xchg
mov
test
mov
xchg
inc
pushf
pop
repnz
xor
flds
pop
sub
fldl
push
hlt
mov
jne,pt
rcrl
adc
mov
mov
incb
in
sti
cmp
and
add
jne
stos
ret
test
dec
out
push
dec
inc
add
sbb
sbb
mov
fidivrs
loopne
int3
arpl
sbb
rorl
push
insl
dec
fistps
push
inc
loop
fisubrs
jo
shlb
push
incl
mov
push
adc
inc
push
adc
xchg
or
clc
mov
and
inc
nop
repz
pop
sub
leave
addr16
pop
arpl
pop
clc
addr16
pop
mov
inc
and
or
fs
fbstp
cld
inc
jp
mov
bound
fdivrl
xchg
lcall
or
data16
bound
enter
jmp
out
in
fmull
fimuls
je
cmp
bnd
hlt
scas
mov
aaa
or
lret
sub
dec
nop
mov
out
inc
ss
cs
sarl
xor
jge
pop
loope
movsl
push
vfmadd231sd
shlb
xor
insl
sbb
icebp
rcrl
ret
push
cmpsb
inc
data16
rcll
add
in
mov
lcall
sti
les
mov
xor
call
dec
aas
mov
xchg
add
push
jne
int3
das
mov
stc
movsb
dec
ja
cmp
xchg
sub
mov
repnz
sub
fwait
push
popa
mov
jo
mulb
fcompl
inc
inc
inc
mov
xor
das
ret
add
xchg
xor
sub
pusha
sti
or
cmpsl
pop
leave
push
loope
mov
scas
xor
shll
stc
mov
loope
call
lret
cmpsl
insb
dec
jl
cltd
in
popf
or
xlat
dec
sub
dec
rorl
add
call
mov
scas
gs
add
sub
loop
mov
sysenter
mov
mov
negl
mov
dec
movsl
fdivrl
or
jbe
bound
add
std
popa
jmp
cltd
cmp
dec
test
jp
in
adc
int3
ljmp
add
mov
pop
pop
std
clc
xchg
jne
fiadds
insb
pop
in
dec
cmp
je
das
out
xchg
pop
rorl
adcb
out
pop
mov
mov
push
and
ss
push
xor
pop
test
cmpl
push
mov
and
in
icebp
repnz
divl
xor
rcrl
inc
daa
mov
add
idiv
sbb
xchg
xchg
pop
xchg
add
test
jnp
outsb
lods
sub
aad
inc
xor
jnp
cmp
arpl
push
xor
mov
cli
ficompl
aaa
jl
je
pop
cmp
and
push
inc
pusha
fnstenv
je
mov
pop
mov
dec
loope
jecxz
cs
sahf
mov
ja
xchg
in
dec
cmpsb
xchg
dec
xchg
inc
movsb
dec
dec
and
lock
jne
xor
add
jmp
mov
bound
outsb
push
stos
sbb
push
cmp
push
in
leave
or
pop
lahf
pop
iret
mov
xchg
shl
in
les
sub
scas
icebp
or
sbb
into
lds
ja
or
leave
mov
je
mov
push
push
or
jne
jp
pop
mov
xchg
push
mov
cmpsb
repnz
push
cmp
mov
push
inc
out
mov
mov
movsb
lods
insb
mov
popf
cs
and
sub
sarl
mov
popf
push
jg
into
jb
dec
lock
push
mov
aad
inc
mov
in
and
add
movsl
cmp
sahf
sub
rclb
imul
mov
test
jo
fwait
je
int
negl
test
mov
andb
hlt
adc
inc
adc
xchg
sub
insl
and
icebp
jle
push
mov
insl
add
icebp
inc
xlat
loope
jge
push
add
or
jl
xchg
sub
mov
in
mov
lret
es
lds
pushf
xor
gs
lret
es
ljmp
call
mov
lock
pop
xsha1
cmpsb
dec
ret
repz
imul
bound
fldcw
mov
inc
sub
and
pop
mov
gs
lret
adc
push
data16
jo
mov
mov
pop
scas
inc
dec
fsubp
jns
insb
int3
lret
push
movsl
cmpb
insb
cmp
cli
pushf
mov
pusha
loope
push
fnstsw
xchg
mov
inc
lcall
pop
mov
mov
pop
jo
xchg
orb
ds
mov
scas
shrl
int
pusha
scas
adc
xchg
imulb
loope
pop
xor
andl
xlat
push
mov
mov
or
adc
xchg
inc
ds
mov
nop
xchg
lret
jae
inc
or
jbe
cli
xchg
ja
sub
lds
mov
daa
xor
andl
or
aad
push
popf
icebp
pop
push
popf
adc
mov
adc
inc
fiaddl
sbb
cwtl
insb
cmp
mov
aam
mov
je
shlb
pop
lock
icebp
testl
xor
insl
push
pop
cmc
mov
ss
into
mov
incl
aas
ja
iret
push
cwtl
pop
into
jae
mov
outsb
dec
in
push
loop
test
imul
movsl
stc
pop
inc
fnsave
push
fs
xchg
shlb
ljmp
test
jge
movsl
call
adc
jne
sti
cmpsb
cmp
cmc
nop
or
roll
js
dec
ljmp
sahf
or
fdivr
xor
sub
adc
test
ficomps
xchg
sub
pop
in
mov
inc
jb
add
leave
jmp
xchg
sbb
in
cmp
mov
cltd
imul
nop
data16
sar
push
xor
jg
push
xlat
outsb
test
sbb
stos
adc
aaa
xor
push
mov
mov
addr16
xchg
push
inc
fadds
lahf
loope
into
data16
orb
mov
addr16
sub
mov
mov
sahf
lea
push
in
xchg
push
shrl
mov
mov
pushw
xchg
push
fnstenv
lea
lret
pop
test
mov
jo
xchg
sub
ret
lcall
mov
mov
jne
into
pop
clc
mov
insb
mov
stc
nop
ret
out
mov
xchg
xchg
mov
mov
adc
mov
int
sub
int3
xor
jae
xchg
shrl
test
sbb
sub
fcompl
mov
bound
into
movsl
cmp
pushf
sub
leave
sbb
pop
scas
pop
insl
loop
fwait
inc
sbb
jmp
or
mov
push
repz
xchg
leave
pusha
vmread
ds
out
xchg
mov
je
or
mov
push
iret
sbb
je
fisubrl
rorl
aas
mov
mov
push
cwtl
or
jl
push
insb
xlat
outsb
mov
jbe
dec
cmpsl
sub
inc
test
jle
repnz
xor
fs
pusha
stos
mov
inc
in
cmp
lods
xor
int
jns
lock
mov
loope
jg
out
lods
xor
arpl
mov
in
popa
clc
lods
xor
jns
mov
mov
jge
jl
add
mov
mov
popf
xor
cltd
xor
mov
pop
jecxz
out
xchg
pushf
ja
shll
sbb
stos
sti
xchg
fidivl
out
xchg
cwtl
sub
int3
mov
or
imul
jmp
subl
xor
mov
adc
imul
mov
push
xor
pop
test
lahf
clc
data16
xchg
sub
mov
add
xchg
sub
pop
xchg
add
in
fwait
adc
inc
mov
jp
shl
js
insl
jnp
mov
jb
jle
fxch
gs
mov
test
jge
adc
arpl
mov
mov
xchg
clc
lds
mov
pop
test
mov
push
mov
xor
mov
mov
push
rcrb
mov
mov
jbe
push
cmpsl
inc
adc
pushf
mov
dec
loopne
inc
mov
jne
add
jmp
daa
adc
pop
fstpt
or
or
or
cmp
shrl
negb
es
mov
sbb
outsl
push
inc
fistpll
iret
or
sub
pusha
and
add
mov
insl
add
xlat
inc
xlat
or
mov
push
sub
dec
loop
jns
add
int3
mov
stc
push
xor
dec
dec
jno
push
rcrl
mov
jl
lret
enter
push
call
add
lcall
jbe
pop
cmpsl
iret
add
stos
and
jb
jne
jecxz
lret
lea
jp
mov
jbe
dec
cmpsl
lret
mov
cli
jp
fwait
stos
sub
scas
pop
js
jns
ret
repz
sti
mov
jg
mov
repz
jno
das
and
scas
sarl
je
vphsubdq
jne
scas
cmpsb
jnp
cwtl
test
ja
movsb
movsl
jbe
fldenv
pusha
div
jne
mov
pop
jg
loop
jl
divb
cld
cmpsl
xor
pop
gs
mov
ja
adc
sub
xchg
pop
sbbb
imulb
loopne
das
mov
pop
xchg
cwtl
mov
push
inc
lahf
cs
pop
mov
mov
mov
jno
or
lret
sub
jg
orb
jnp
and
aam
xchg
add
jno
pop
and
push
jge
cs
jne
icebp
mov
shll
dec
push
test
outsl
push
out
mov
xchg
repz
lret
mov
inc
add
push
push
pop
add
mov
movsb
mov
cmp
mov
jns
dec
test
jge
adcb
popf
fidivs
cld
enter
out
sbb
cmp
mov
push
lods
mov
loopne
jno
push
ss
aaa
xor
fs
movsl
flds
daa
ds
jbe
or
inc
jl
test
pop
popf
mov
pop
scas
out
dec
fs
fdivp
add
add
and
push
xchg
testl
sbb
cmpsl
ds
cmp
rorl
xlat
outsb
shrl
popf
out
in
mov
loope
outsb
adc
sub
shrb
popf
in
dec
pop
mov
loopne
dec
and
out
mov
hlt
jle
add
rolb
das
jmp
aaa
sub
xlat
adc
add
sbb
nop
dec
xor
cltd
mov
cmp
and
popa
cmp
xor
insb
lcall
sbbl
push
sub
inc
test
push
dec
jecxz
mov
inc
popf
mov
jb
test
cwtl
pop
adc
sbb
dec
test
lcall
push
mov
ret
lods
sbb
dec
cmp
pop
scas
add
out
mov
cs
adc
pop
jne
das
inc
pop
sbb
jno
add
movsl
jns
test
rclb
dec
jge
push
hlt
mov
mov
ljmp
jp
test
pusha
lcall
daa
out
mov
int
insl
mov
loopne
jno
jns
stos
dec
imull
rolb
push
mov
pushf
loope
lcall
addb
jno
int3
into
xor
in
les
aam
and
mov
push
sbb
stos
gs
jle
nop
mov
xchg
xchg
jne
push
in
xlat
xor
mov
jecxz
xchg
adc
ja
addl
pop
jns
test
pop
lret
push
mov
into
inc
lret
adc
fidivrl
cld
es
pop
aam
mov
jo
push
inc
lret
stc
xor
out
out
test
adc
popf
inc
outsl
mov
or
sbb
ret
call
cmpsb
lods
pop
sbb
pop
lock
fwait
mov
ja
loopne
js
sub
pop
into
cmpb
and
or
cmp
and
or
loope
sahf
pop
or
push
adc
sub
fiaddl
cmp
jecxz
jo
and
pop
rcrl
fwait
xchg
sub
add
ljmp
adc
ret
pop
insb
cltd
outsb
cltd
xor
pop
je
push
sub
mov
ja
data16
cmp
jp
mov
icebp
outsb
pop
sarb
fisttps
xchg
cmp
or
cltd
jbe
mov
lods
sbb
mov
xchg
testb
test
xchg
xchg
or
pop
cwtl
cli
or
jle
in
inc
leave
mov
xchg
cs
aam
fwait
rcll
dec
jo
jns
out
lods
inc
xlat
cvttps2pi
scas
fcompl
test
ljmp
jge
lds
sti
lahf
xchg
mov
and
push
or
sub
stos
outsl
ss
out
bound
cmp
add
pop
jge
cmp
jp
test
arpl
mov
test
aam
cmpsl
pop
enter
fisubl
popa
das
shrb
xor
ret
lds
cmpb
pop
add
in
std
sub
or
sub
mov
add
push
cmp
lret
ficompl
popf
rcrl
pop
fsts
out
pusha
idivl
push
ror
lahf
mov
cwtl
xchg
sub
stos
sub
das
icebp
es
das
enter
imul
ss
lret
mov
sbb
inc
xlat
add
inc
into
ja
rcrl
ds
cmp
pop
int
jge
fdivrs
daa
inc
test
ja
aam
xchg
das
cli
adc
psraw
add
mov
outsb
mov
into
push
push
out
dec
ret
mov
lret
push
jmp
mov
out
int3
xchg
sbb
shlb
fisubrs
cmpb
fsts
pop
stc
and
scas
xchg
clc
push
fdivl
mov
mov
adc
rorl
out
add
pop
xlat
jmp
aad
fcoml
mov
lds
cmp
stos
pop
xlat
insb
inc
pop
fidivrl
test
mov
sahf
dec
gs
lea
inc
pop
rcrl
pusha
cli
xchg
sbbb
adc
test
push
scas
cmp
jl
mov
sub
shrb
adc
pop
inc
sub
mov
cmpsb
ret
test
fisubs
mov
fisttpll
movsb
popa
cs
xor
lea
repnz
adcb
or
ret
inc
mov
xor
incb
addr16
ret
test
cmpsl
xorb
hlt
jecxz
aaa
leave
mov
int3
xor
adc
lret
aad
xor
xchg
divb
fsubl
or
lret
lcall
mov
pop
or
cs
mov
add
mov
test
imulb
xchg
notl
inc
loop
ficoml
jae
pop
adc
xchg
xor
outsb
mov
sbb
out
scas
jo
outsl
imul
mov
test
pop
mov
js
imul
push
int3
sti
pop
jl
push
sub
vpshad
sbb
ret
addb
lock
cmc
ds
sbb
cltd
decl
sub
mov
adc
sub
inc
jecxz
sub
out
add
cmp
jns
int
jns
inc
iret
dec
mov
mov
push
aam
adc
adc
leave
cwtl
sub
sbb
inc
enter
push
cld
sub
mov
lret
sbb
fs
mov
fbld
fiadds
lods
pop
loopne
popf
lds
std
xchg
test
cmpsb
pop
lds
mov
and
mov
dec
dec
ret
jns
in
pop
cmp
jmp
pop
sbb
test
clc
jl
lds
pop
lock
cltd
sbb
add
mov
xchg
repz
repz
xchg
out
scas
jg
mov
mov
mov
mov
inc
jge
mov
fsts
jmp
mov
je
dec
sub
dec
shrl
jo
sub
xchg
cmp
and
or
jl
aas
xchg
mov
and
jg
lahf
xorl
jl
adcl
jge
xor
fwait
jmp
mov
or
push
inc
fsubp
xor
cmp
push
jb
cwtl
push
xlat
push
cltd
in
jg
mov
mov
fcoms
mov
add
add
push
and
jne
filds
inc
jo
js
mov
cmpsb
jae
cltd
mov
adc
insl
lahf
addb
test
jb
fisubs
fs
daa
ljmp
pop
filds
mov
sahf
jae
in
loope
jno
je
add
push
xchg
cmc
xchg
pushf
test
mov
jno
shrb
adc
jbe
jecxz
loop
repnz
add
in
xor
mov
loope
inc
cmpsb
loopne
add
stos
inc
andb
jge
cmp
cmp
adc
inc
movsb
push
cwtl
xorl
dec
sahf
xchg
or
adc
push
lods
lahf
adc
das
out
inc
jp
pop
stos
in
push
jl
pop
inc
jnp
and
mov
inc
and
daa
jmp
call
es
or
lret
out
pop
sti
nop
pop
adc
xchg
pusha
pop
aam
adc
mov
out
pop
dec
loopne
gs
aam
mov
loop
dec
sub
scas
sub
in
dec
inc
mov
jl
push
rcrl
push
inc
shlb
loope
mov
in
in
fidivl
fisubl
pop
mov
adc
jno
dec
xchg
out
dec
inc
mov
mov
sbb
dec
pushf
outsl
xor
pop
sbb
cmp
xchg
mov
sub
js
mov
testl
cs
mov
sub
outsb
outsl
push
mov
lock
push
out
xsavec
test
lret
loope
nop
mov
mov
cmp
sarb
mov
aaa
fistl
cld
inc
fsubrl
dec
and
pop
fiaddl
ljmp
lds
sbb
stos
inc
add
xchg
loopne
inc
int3
shrl
pop
hlt
mov
lock
out
cmp
xchg
adc
adc
inc
push
movsb
cmp
fs
inc
lret
jmp
and
dec
mov
aaa
jmp
lods
jne
or
scas
ljmp
ret
lock
add
arpl
adc
clc
sbb
adc
je
fmull
add
les
bound
push
inc
dec
mov
push
or
push
dec
pop
ret
adc
push
push
xor
xor
push
jl
mov
cmp
lds
cmp
jge
sbb
cmp
push
mov
cmp
lods
inc
or
push
push
sub
imul
xchg
js
cmpsb
aas
out
inc
rcrb
or
scas
inc
cltd
xchg
pop
fdivl
jns
add
lds
push
int3
arpl
sarl
jp
pop
imul
or
mov
test
pop
cwtl
xchg
popf
mov
sbb
sti
mov
and
pop
rcrb
mov
or
aam
ja
fcmovnu
sub
rcll
or
repnz
mov
jno
shrl
push
in
shrb
inc
mov
leave
std
push
int3
les
sub
jmp
mov
fmull
insl
add
dec
xor
jne
pop
aam
cmp
pop
inc
mov
xchg
pop
pop
hlt
popa
mov
into
repnz
mov
pop
iret
xchg
nop
orb
push
adc
outsl
sbb
test
jecxz
xchg
call
xlat
push
int
stos
inc
cmp
mov
pop
inc
fisttpll
pop
inc
fucomip
and
aaa
lods
clc
push
bnd
inc
mov
xchg
outsl
dec
push
inc
mov
mov
jbe
testl
inc
jp
push
cmp
lret
xchg
pop
mov
outsl
sbb
or
and
pop
in
mov
mov
inc
divl
xchg
sub
leave
push
stos
inc
lock
in
cmp
inc
in
xor
xchg
ds
cli
sub
cmc
rorb
test
data16
mov
into
lcall
and
fsub
xchg
sub
std
cli
push
mov
repz
ds
leave
aas
sti
repz
scas
lods
push
mov
in
pusha
mov
pop
shl
repz
roll
push
add
loopne
bound
fcomps
ljmp
loop
jp
ja
ret
iret
movsb
pop
mov
out
and
call
int3
push
int
mov
popa
push
out
popf
xorb
lods
mov
ljmp
dec
mov
in
dec
sbb
das
je
jp
mov
cli
dec
mov
sbb
push
cltd
out
xchg
in
mov
mov
fwait
sbb
mov
or
out
pop
sub
jb
bound
xchg
pop
sarb
mov
lock
sub
rcr
sahf
xor
fldcw
das
fidivrl
loopne,pt
aaa
sbb
nop
rcll
insl
test
popl
push
daa
or
jnp
fisubs
sub
sub
jne
push
cmp
push
push
out
rcrl
jmp
cmp
pop
int3
push
movsb
int
xor
fucomi
push
out
sbb
stos
jne
loop
or
fcoms
push
mov
cli
test
dec
test
popf
shlb
jmp
out
mov
fisubrl
das
xchg
push
scas
les
aaa
xchg
xchg
mov
test
mov
mov
dec
into
mov
sub
jge
adc
aam
cmp
and
cmp
mov
in
and
rorl
imul
ror
inc
lret
lods
or
mov
ljmp
xorl
iret
cwtd
test
call
icebp
scas
adc
stc
ret
push
mov
and
fidivs
push
cmp
inc
add
jne
sbb
js
adc
push
cmpsl
pop
xchg
sub
enter
fcomip
sbb
enter
mov
cltd
adc
shrb
out
rorb
mov
ret
adc
xchg
lds
pusha
add
iret
test
iret
data16
inc
into
ja
cs
adc
test
sbb
or
popf
lods
sti
xchg
fucomip
push
adc
add
sbb
jmp
add
cmpsb
fstpt
cmc
iret
cmc
mov
push
cmp
push
add
xor
or
inc
cmpl
push
lods
outsl
lea
stc
push
cli
out
push
aas
fcoml
push
shlb
sub
int3
dec
iret
xchg
call
pop
mov
jmp
cmp
inc
aad
ds
push
icebp
mov
or
pusha
test
lds
aad
fidivrs
out
mov
adc
xor
jno
fs
adc
push
sbb
ja
les
sbb
inc
lock
xlat
add
sub
gs
sbb
das
lds
lahf
arpl
outsl
lea
cmp
pop
xchg
pop
mov
add
sub
sub
sub
mov
aad
repnz
sarl
sub
ficoml
jnp
cmp
cmp
scas
jno
mov
sbb
jns
mov
lock
or
sbbl
sub
fists
sub
push
mov
mov
pop
xchg
in
icebp
cmp
adc
xlat
push
xchg
push
jo
push
orb
pop
jae
outsl
div
sub
and
das
mov
xlat
cmp
cld
loop
sar
addr16
fcmovu
je
movsb
cltd
sbbb
xchg
cltd
outsb
movsb
daa
cld
mov
shll
aaa
mov
sbb
cmpl
adc
repz
sahf
add
adc
ss
fidivl
cmp
stc
ficoms
xor
cmpl
xchg
pop
dec
adc
sbb
pop
les
xchg
xchg
fstpl
pop
decb
or
fcoml
mov
mov
sub
sub
or
pop
paddd
loopne
push
xor
aad
and
push
in
ja
int3
mov
rorl
sbbb
nop
jo
jmp
scas
pop
fstpl
mov
fstl
ss
test
sub
data16
aas
sub
push
mov
or
push
call
pop
pop
jb
dec
gs
repnz
dec
mov
push
jno
popa
pop
pusha
mov
scas
pop
sub
mov
mov
sbb
cld
cmp
mov
ficompl
in
dec
mov
sub
mov
push
ss
jmp
cmpsl
xchg
cmc
push
jge
dec
aad
enter
cmp
mov
push
imul
jl
push
in
sub
test
mov
sbbl
test
les
nop
mov
test
clc
ja
inc
xlat
inc
mov
xchg
push
mov
xchg
mov
leave
notb
add
xchg
in
mov
pushf
aad
fisttpll
or
mov
add
fstl
and
int
xchg
sub
sbb
and
leave
sahf
and
sbb
or
loope
sbb
sbb
scas
mov
mov
push
pop
or
cmp
mov
mov
iret
add
cmp
aad
mov
jp
inc
jno
insl
mov
xor
arpl
mov
pop
out
and
push
adc
rolb
jl
or
adc
sahf
inc
repz
inc
fnstcw
jl
inc
inc
jb
add
dec
scas
xchg
pop
inc
hlt
sub
test
push
jecxz
xor
mov
adc
xchg
xchg
cmp
aad
adc
lcall
hlt
jl
cmpsb
dec
fstpt
loope
testb
lret
sub
stos
iret
adc
cld
in
mov
sub
in
loopne
js
jnp
push
sub
dec
mov
mov
jl
pop
ret
ret
jnp
mov
repnz
popl
mov
popf
cltd
ret
pop
icebp
add
cmp
dec
adcb
and
insb
sbb
jno
mov
inc
cmp
sub
push
mov
dec
repnz
jo
into
fs
push
lret
adc
xor
test
inc
out
pop
add
cli
repnz
test
push
push
push
shll
out
repnz
arpl
mov
aam
js
or
lea
stc
movsl
push
lods
add
dec
les
jne
sub
jne
int3
dec
jne
mov
jno
cmc
inc
lea
cmovb
cld
push
mov
hlt
pop
cmp
push
fs
testb
icebp
daa
popf
das
loope
andl
sbb
dec
or
fidivs
adc
loopne
out
mov
jmp
adc
inc
dec
push
xlat
out
test
jns
dec
dec
mov
stc
dec
mov
aad
pop
xchg
sub
mov
stos
add
pushl
movl
jg
enter
fnsave
sub
repz
push
inc
mov
iret
es
stos
je
add
xchg
mov
lods
sbb
rorl
loopne
push
les
loop
not
pop
dec
cld
fwait
push
inc
ficomps
mov
adc
sahf
mov
sar
stc
xor
icebp
pop
rol
ror
aas
out
shrb
mov
xchg
mov
sub
insb
sub
into
test
add
addr16
jmp
out
and
mov
cli
xchg
mov
jnp
sub
arpl
adc
subb
dec
add
outsl
repnz
test
out
cmc
loope
les
sarl
push
out
stos
data16
lock
nop
fwait
xor
in
pop
lods
cmp
push
mov
testb
in
lea
popa
aam
movsl
push
cs
inc
sahf
jmp
jb
push
cwtl
leave
mov
stos
jne
imul
or
lea
repz
fstpl
adc
mov
rclb
cltd
call
fisubs
in
iret
sub
loope
cwtl
mov
fisttpll
xchg
fistpl
cmc
iret
lds
shrb
mov
mov
or
sub
out
data16
into
inc
mov
xchg
divl
cmp
mov
dec
insl
outsb
mov
stos
pop
sub
cmpsb
out
mov
int3
mov
mov
dec
mov
sub
into
aam
sbb
call
scas
sub
cmpsl
mov
cli
jmp
repz
and
push
and
jmp
mov
and
xchg
lret
in
add
notb
repnz
cli
ss
arpl
xchg
dec
ret
ret
imul
loope
push
sbb
push
xchg
or
mov
pop
neg
sbb
cmpsb
sbb
add
add
out
or
rolb
in
pop
out
jle
xor
lock
sbb
mov
cmp
pushf
sbb
subb
enter
jmp
daa
push
and
dec
jl
fidivs
pop
scas
jno
out
xchg
mov
pop
mov
cli
imul
enter
dec
fnstsw
loope
pop
jbe
popa
rcrl
repnz
dec
mov
xchg
jge
shrl
sarl
and
call
push
call
scas
lods
jne
outsb
mov
xor
jge
stos
gs
jle
mov
gs
movsb
sbb
mov
jge
adc
dec
mov
xchg
and
test
les
dec
fistps
out
lcall
outsl
mov
jl
dec
inc
mov
cmc
icebp
push
inc
shl
pushf
andb
repnz
add
sbb
sbb
loop
fwait
aam
pop
movb
cmp
movsl
fcomps
fsub
push
adc
loope
xchg
mov
outsl
mov
xchg
iret
pop
lret
fildl
imul
mov
mov
scas
adc
mov
in
movsl
add
xchg
add
sbb
mov
jae
mov
jmp
pop
lock
filds
lcall
jl
nop
into
orl
or
enter
mov
test
push
dec
scas
iret
push
out
cmp
mov
lock
ljmp
popf
sbb
push
ja,pt
aam
pop
out
push
pop
lret
cmp
pop
es
sub
ds
adc
dec
int3
xchg
cli
xor
and
add
sarb
mov
fsts
js
mov
pop
or
pop
fs
movsl
mov
sbb
pop
les
adc
out
scas
shr
loop
or
mov
icebp
mov
fcmovnu
jb
push
cs
pusha
rolb
pop
mov
out
stc
nop
mov
out
sbb
or
icebp
pushf
fbstp
adc
je
add
sbb
pop
mov
scas
mov
in
aad
xor
je
iret
inc
loopne
stos
je
scas
mov
mov
cwtl
adcl
pop
roll
push
ds
rep
cmpsb
imul
mov
insl
fwait
stos
data16
mov
xchg
arpl
or
pop
add
pop
int3
lret
inc
mov
lock
push
lret
dec
pop
mov
stos
mov
xor
mov
lds
inc
sbbb
xchg
cmp
or
out
xor
push
jb
push
push
cwtl
sub
leave
inc
mov
or
cld
out
cs
mov
repz
jnp
rol
lret
mov
rorb
test
fsubrl
fnsave
push
das
push
sti
xchg
adcl
andb
aad
aaa
into
daa
test
in
jp
loop
jl
jae
int
add
and
push
mov
inc
scas
inc
je
cmp
jae
int
xchg
pop
icebp
sbbb
js
sbb
mov
insb
mov
mov
mov
loope
imul
mov
out
mov
imul
mov
xor
loop
or
repz
xor
mov
jp
inc
adc
cwtl
das
lcall
inc
in
mov
iret
or
mov
xorb
jo
push
cmc
bound
outsl
dec
mov
fidivrl
cmc
mov
mov
push
movsl
pop
hlt
aam
es
js
inc
jb
ljmp
pop
cmp
pop
add
dec
mov
mov
imul
fwait
bound
aad
mov
pop
mov
inc
in
jns
cmp
xor
add
ret
out
pop
lock
pusha
notl
inc
ja
jg
ds
mov
pop
mov
xor
fisubl
cmp
jne
popa
mov
aam
aas
push
sbb
lcall
xor
outsl
gs
gs
cs
inc
and
dec
js
test
lret
push
in
mov
mov
xor
or
add
fwait
jno
or
fwait
lds
ja
fsubp
ja
aas
dec
cmp
out
dec
stos
lea
orl
cmpsb
jge
sub
std
aad
jne
sahf
popf
jae
push
lcall
inc
sahf
lea
cmpsl
sub
fnstcw
xor
fs
and
mov
int
jmp
dec
jmp
xlat
jo
adc
mov
lock
pushf
mov
shrb
fisttpll
popf
sti
insl
data16
sbb
outsl
mov
inc
push
dec
mov
push
shll
lods
inc
lahf
pop
add
and
sub
inc
and
stc
shlb
es
xor
inc
test
xchg
pop
pop
ds
dec
pop
aad
or
mov
xchg
hlt
mov
xchg
mov
pusha
sarb
dec
or
xor
xchg
xor
dec
push
push
push
jnp
push
mov
iret
xchg
ret
mov
cs
xor
mov
cmp
cld
in
jb
test
mov
mov
aam
sarb
into
inc
cmp
aam
jns
btcl
in
jmp
mov
stos
mov
push
and
push
lods
dec
sbbl
inc
lock
mov
stos
add
mov
or
shrl
ds
das
test
movsl
imul
jne
cmp
pop
push
or
lods
fucomip
push
xchg
test
cvtps2pd
in
aam
mov
fnsave
or
sahf
cmp
mov
xchg
mov
dec
inc
add
les
xchg
in
das
cmp
pop
mov
mov
mov
xor
in
lock
sub
push
stos
adc
in
add
test
mov
cwtl
repz
int
pushf
js
xor
or
enter
adc
cmc
mov
inc
test
sub
sub
lret
pop
imul
pop
scas
shlb
push
push
loope
inc
sbb
ret
pop
mov
and
dec
mov
mov
fdivl
in
push
or
mov
sbbb
pop
lea
cmp
xchg
cs
in
lahf
xor
shlb
dec
dec
in
shll
fisubrl
dec
push
insl
jb
pop
clc
sbb
jb
int3
arpl
adc
adc
xchg
sub
cmp
mov
in
lock
mov
fidivs
jno
movsl
ljmp
scas
mov
mov
out
mov
das
enter
push
and
dec
mov
xlat
jecxz
pop
adc
fidivrs
dec
in
and
push
add
cmp
or
cltd
xor
ret
xchg
in
and
stos
adc
mov
imul
in
mov
lods
sub
inc
adc
in
inc
bound
mov
bound
mov
jb
mov
sub
xchg
sbbb
mov
hlt
cmp
pop
cmp
inc
mov
aad
cwtl
push
lds
push
sbb
lods
jl
stc
and
hlt
pop
rolb
ja
jnp
xor
out
xchg
cmp
daa
push
stc
pop
cmp
mov
pop
call
cli
mov
mov
test
push
cld
movsb
mov
out
jne
mov
addr16
dec
adc
dec
adc
adc
movsb
xor
icebp
int3
jae
jne
pop
dec
push
test
mov
xchg
out
int3
xchg
pop
imulb
stos
push
cwtl
inc
cld
mov
insb
cmc
test
mov
adc
dec
adc
scas
out
cwtl
inc
and
push
jne
sbb
xchg
mov
mov
ror
out
add
inc
xchg
scas
data16
xor
insl
cmc
movsl
and
sbbl
mov
test
dec
adc
aas
jns
inc
xchg
sub
popa
xor
out
jno
sub
jg
aas
mov
sbb
out
div
pop
lods
cld
sarb
mov
jmpw
aam
xchg
mov
sub
imul
or
popa
enter
jbe
jmp
lahf
jg
or
repz
jmp
std
pusha
in
xchg
pushf
loopne
enter
js
add
mov
sbbb
jmp
pop
mov
clc
gs
or
in
adc
xchg
pusha
mov
divb
push
pop
loope
test
stos
js
pop
xor
clc
gs
or
pop
add
pop
insl
pop
add
test
js
fcmovnb
ss
or
pop
inc
adc
pop
decb
mov
je
push
sub
lock
jle
in
insb
pop
addr16
push
test
pop
std
sbb
popa
lock
inc
cwtl
cmp
xchg
inc
ret
sbb
in
pop
fs
xchg
xlat
test
pop
popa
out
pop
inc
jo
clc
test
mov
js
lods
sub
push
add
xchg
mov
sbb
jmp
loopne
test
scas
ret
loopne
sbb
cwtl
pop
bound
pop
test
test
test
adcb
jnp
pop
dec
jae
incb
repz
jae
mov
add
jnp
test
sti
push
add
sti
pop
inc
mov
mov
mov
inc
adc
movsb
pop
notl
adc
es
inc
adc
add
dec
jnp
iret
xor
lret
sub
xchg
iret
mov
mov
repz
push
jmp
xchg
inc
rcll
test
push
int
xor
js
jbe
push
gs
inc
lea
cmp
mov
pop
stos
cmp
cli
fidivrs
out
or
sbb
mov
mov
test
stos
cmp
ds
add
hlt
pusha
mov
jae
mov
mov
insb
call
xchg
mov
imul
push
in
imul
adc
ja
dec
or
xlat
in
imul
sub
pop
sarb
push
or
int3
mov
xlat
in
push
or
dec
pop
in
imul
or
bound
rol
xchg
xlat
xchg
push
or
into
sub
rclb
rcl
and
mov
or
popa
adc
mov
push
inc
adc
in
test
or
cmp
pop
sbb
xorl
sub
sbb
sbb
cmc
cmp
push
icebp
and
mov
and
mov
aaa
push
sbb
pop
mov
mov
sbb
or
and
jnp
push
push
jae
adc
mov
mov
lock
cmpsb
push
add
mov
ja
inc
rolb
and
xchg
inc
jge
pop
idivl
cmpsb
rolb
mov
dec
out
adc
push
mov
lret
ljmp
in
or
repnz
push
pop
pusha
out
xchg
and
ss
add
test
lds
sar
pop
push
cmpb
rorl
rcl
jl
sbbb
jle
in
je
jo
nop
outsb
mov
dec
adc
inc
add
outsb
dec
in
je
adc
dec
in
in
jp
fs
dec
insb
loopne
rcrb
inc
or
fs
add
dec
jg
jno
mov
fs
jns
clc
popa
dec
insb
outsl
hlt
push
lahf
lods
xor
sbb
fadds
repnz
lea
loope
mov
inc
insl
push
rcll
or
pop
jno
add
lods
lea
push
clc
jmp
push
pop
in
lods
xor
repnz
in
mov
sub
inc
xlat
mov
xchg
cmpsb
sub
lahf
or
movsb
imul
out
lahf
inc
cmp
ret
xor
jo
inc
inc
or
mov
imul
movsb
daa
sbb
xchg
cmp
cmpsb
and
inc
mov
lods
push
shll
or
mov
insl
push
mov
mov
cwtl
inc
xor
stos
xor
addl
js
jl
dec
adc
jae
jge
je
and
xor
mov
jge
iret
nop
jl
orb
or
jge
flds
test
jmp
inc
imul
sti
xchg
rorb
imul
xchg
inc
pop
cld
mov
xchg
mov
arpl
mov
pusha
lock
sub
std
push
bswap
add
mov
pushf
pop
int3
lea
mov
adc
xor
xor
mov
cmp
loop
int3
lea
call
sub
arpl
pop
sbb
ret
ud1
adc
stc
pop
cmc
dec
push
push
fdivp
or
out
xchg
lds
outsl
rcrl
xchg
out
cmpsb
fcmovne
dec
or
add
mov
inc
paddsb
push
aam
in
inc
push
pop
addr16
imul
pop
stc
xchg
lods
push
fidivs
stos
insb
dec
or
mov
les
test
popa
mov
jle
enter
lods
icebp
fs
movsb
nop
push
sbb
in
das
adcl
push
and
fdivrl
cmp
ret
mov
cmpsb
xor
test
call
lahf
xchg
jp
shl
mov
scas
mov
and
fwait
mov
inc
stos
lds
testl
xchg
inc
outsb
repz
lods
xchg
or
nop
mov
lods
das
mov
in
mov
push
or
xchg
push
shl
pop
xlat
jp
loope
sti
mulb
insb
jge
pop
add
mov
pop
nop
cmp
mov
sub
jp
mov
and
lcall
aad
and
mull
xor
data16
mov
pop
std
push
les
mov
mov
addr16
dec
or
in
push
and
fnstenv
sub
pop
push
push
sbb
lods
xor
adcb
xor
scas
mov
add
icebp
fs
vmread
add
or
adc
mov
mov
and
sub
or
inc
ja
ret
push
insl
fwait
ds
mov
pop
imul
or
xor
ds
dec
adc
xor
cld
call
inc
or
mov
inc
pop
push
mov
xchg
cmp
and
jle
or
in
and
popf
inc
lea
imul
push
sti
into
mov
push
jp
mov
and
xor
mov
mov
adc
outsl
fs
jne
pop
push
mov
stos
loopne
je
insl
repnz
arpl
aam
xchg
jno
add
adc
mov
jns
mov
jmp
sti
mov
pusha
shl
jo
mov
jne
cmc
shrl
xchg
and
inc
adc
stc
pop
pushf
mov
and
fists
xlat
or
push
popf
cmp
mov
inc
jge
cmp
xchg
or
mov
hlt
pusha
xchg
in
push
data16
shlb
xor
mull
mov
jmp
or
in
inc
cmp
xchg
jl
lds
lret
mov
outsl
mov
fbstp
cltd
daa
nop
ret
cmp
movsl
andps
test
lods
aam
sbb
es
pop
jmp
cmp
dec
and
fiadds
jmp
ljmp
inc
mov
iret
loope
sub
add
mov
stos
xor
cli
and
adc
cmp
jp
sub
movsb
push
adc
and
pop
js
mov
popa
rolb
dec
in
lret
cltd
push
add
pusha
push
gs
cmc
pusha
push
jne
ljmp
es
andb
mov
ret
lods
outsl
jmp
mov
jns
cmpsl
mov
xchg
movsl
mov
fdivl
call
cli
xchg
cmp
aad
loopne
and
shll
sub
test
jae
push
pop
add
adc
push
rorb
test
pop
call
mov
popa
insl
jmp
add
mov
mov
mov
fiaddl
ficoms
shr
dec
jmp
xor
call
enter
dec
sbb
push
sub
mov
fbstp
sarb
dec
data16
ljmp
jno
movsl
jmp
or
and
in
aas
imul
imul
fcom
jle
mov
psrld
enter
lahf
filds
and
xor
test
mov
dec
xchg
sub
jnp
vmaxsd
imul
mov
mov
push
xor
mov
adc
dec
pop
lods
xchg
fistpll
mov
fs
dec
adcl
dec
or
dec
sbb
dec
lods
cmp
fisubrs
and
fildl
cli
inc
jne
outsb
ljmp
xor
shlb
orb
dec
or
xor
sahf
sbb
inc
add
mov
mov
adc
shlb
jg
sbb
sahf
inc
insb
insl
repz
xchg
jge
outsl
xchg
repnz
mov
mov
scas
scas
add
out
mov
fidivrl
or
pop
cmpsb
sub
jge
sbb
mov
jmp
add
fidivrl
xchg
xchg
pop
xor
cli
pop
cwtl
test
adc
mov
pop
call
add
arpl
push
addr16
add
mov
push
cmp
and
aam
pop
inc
adc
enter
data16
pop
dec
pop
inc
bswap
xchg
arpl
arpl
sbb
or
xor
inc
pop
sbb
mov
mov
outsb
xor
mov
iret
rolw
lcall
hlt
pop
orl
jecxz
lock
mov
cmc
mov
add
cmp
popa
adc
sbb
dec
fiaddl
sub
mov
cmp
es
inc
scas
jmp
add
xchg
pusha
icebp
into
outsl
adcl
push
andb
dec
or
jae
add
imull
lret
cld
out
iret
mov
stc
pop
cmp
sub
stos
pop
sbb
pusha
aaa
test
add
scas
sub
pop
aad
punpckhbw
mov
push
xchg
inc
sub
popf
cmp
pop
xchg
cltd
mull
rcrb
daa
adcb
clc
sub
jo
cmp
out
sbb
cmp
jne
inc
adc
ds
rorl
leave
or
pushf
xor
mov
popa
insb
fiaddl
pop
data16
movsb
mov
mov
dec
lods
xor
cld
inc
mov
push
std
jge
aam
and
rcl
ss
adc
add
daa
sbbl
lret
sub
rolb
sar
lret
mov
mov
dec
outsl
push
stos
mov
cmc
pop
xlat
xchg
ret
cmpsl
xchg
adc
std
movsl
jp
mov
mov
aas
int
mov
mov
test
scas
xor
mov
jnp
sbb
subb
xchg
aad
sub
ret
call
decb
aad
and
addr16
out
ret
fwait
lret
inc
into
add
mov
lods
xor
movsl
inc
std
pop
sbb
das
scas
out
out
insl
inc
mov
push
les
mov
inc
adc
or
dec
repnz
test
lds
mov
or
nop
cmp
or
outsl
jg
cmpsl
jl
xchg
push
mov
fwait
seto
int3
and
inc
movsb
das
pop
dec
outsb
ljmp
pop
cld
rorb
sbb
sub
inc
dec
push
lds
cmpsb
mov
data16
sbb
pop
int
and
push
ds
mov
scas
sbbb
push
outsl
aam
cmpsb
test
imul
repz
lret
jne
pop
cld
pop
push
ret
lret
adcb
std
inc
sub
sbb
xchg
dec
xchg
cmp
outsb
or
icebp
jl
inc
in
sbb
jne
inc
or
and
pop
notl
stc
nop
ds
fsubp
insb
in
add
add
mov
daa
scas
das
mov
stos
mov
pusha
xchg
mov
mov
into
rolb
lcall
stos
push
jecxz
dec
xchg
scas
daa
dec
shlb
cmpsb
insl
xchg
push
mov
cs
xor
test
mov
jp
mov
or
adc
push
leave
leave
test
jecxz
push
stc
sahf
notl
mov
add
int
jmp
add
jbe
mov
push
add
mov
mov
and
sahf
mov
jp
fisttpl
ljmp
mov
cmp
mov
mov
mov
outsl
out
subl
dec
adc
inc
outsb
enter
xchg
cmp
push
cld
mov
xor
out
lock
cmc
mov
add
faddl
xchg
jno
jne
ret
or
cwtl
jge
cmp
into
mov
adc
dec
lcall
and
int3
pop
clc
fmull
js
sbb
sbb
fiaddl
popa
dec
sub
mov
lds
stos
xor
aas
or
out
hlt
lds
gs
rorl
fsubrs
mov
mov
push
movsb
sub
sti
fs
lea
cmp
fwait
sbb
inc
pushf
sub
popf
lret
xchg
sbb
mull
inc
sub
outsl
adc
xchg
inc
add
pop
outsl
out
lret
cmp
adc
sub
sub
scas
mulb
mov
and
stc
dec
or
cwtl
mov
cli
xchg
cli
mov
jns
push
add
lods
les
xchg
aad
cltd
inc
mov
mov
pop
mov
mov
mov
pusha
out
lds
enter
fidivrl
mov
sahf
cmp
sub
mov
jno
ret
xchg
inc
arpl
ja
ret
sbb
sbb
mov
dec
sbb
sarb
xor
mov
and
call
mov
fimull
int
pusha
test
mov
jl
std
pop
shll
or
or
test
lcall
xchg
out
imul
shll
mov
mov
cmp
cli
xor
pop
jmp
int3
arpl
mov
loop
ljmp
dec
push
sarl
adc
arpl
push
push
jae
xchg
pop
faddl
test
mov
xchg
int3
psrld
fdiv
pop
mov
mov
cltd
inc
fnstenv
cmp
fidivrl
in
fdivs
gs
add
orl
adc
repz
adc
mov
pushf
dec
jecxz
ds
nop
or
push
sti
scas
pusha
fs
fistps
push
test
aas
mov
add
dec
adc
fwait
inc
xor
movsb
add
jnp
cli
push
mov
push
xchg
or
arpl
rorl
or
insl
and
and
mov
mov
out
adc
mov
pop
dec
xchg
xor
xor
push
call
xchg
stos
std
pop
fimuls
mov
add
xor
ds
push
push
dec
adc
ret
mov
xchg
push
shl
ljmp
cwtl
addw
push
cli
mov
fildl
pop
jb
bound
movsl
lock
stc
test
mov
jmp
hlt
movsb
scas
jae
sub
jnp
cmp
les
sub
pop
xor
jns
jnp
idivb
js
lea
cs
or
pop
push
rcr
rorb
dec
adc
add
push
imull
xor
ja
lea
popa
mov
inc
inc
mulb
fwait
pop
stc
gs
xlat
fists
rclb
add
jge
fnstsw
data16
pop
push
roll
cmp
and
rcrl
ret
je
xchg
insb
leave
pusha
sahf
or
cmp
dec
adc
pop
push
sahf
and
out
das
ret
mov
lock
xchg
arpl
mov
xchg
ret
dec
xor
or
push
stc
mov
push
and
sti
pusha
jle
pop
add
insl
mov
push
and
loopne
into
xchg
ja
mov
push
mov
dec
aad
aam
pushf
push
aam
cmpsl
push
mov
mov
test
outsb
mov
mov
mov
aam
inc
pop
test
mov
inc
pop
add
jns
inc
out
jb
sub
daa
cmp
fadds
sub
jp
inc
lret
mulb
stos
dec
push
push
leave
sub
mov
aam
subb
and
mov
imul
and
jg
and
sahf
inc
aam
mov
cmp
xchg
jp
mov
nop
jle
jle
popa
imul
dec
jno
sbb
inc
sbb
cmp
std
adc
mov
cmp
jae
push
sbb
inc
je
cmc
xor
add
push
movsl
sub
mov
popf
xor
mov
sub
in
addr16
cli
pop
or
push
cmp
sbb
sbb
pusha
repz
cmc
or
pop
cli
sub
jle
sbb
mov
jge
stc
push
call
push
dec
sub
push
mov
outsb
or
xor
shrl
cmp
fisttpl
ljmp
xor
aad
stc
push
fs
or
fidivrl
cmpxchg
cmp
sub
or
fstpt
pop
and
pop
aad
xlat
push
mov
jbe
inc
pop
cmc
js
cmc
pop
call
stc
xchg
jp
mov
adc
dec
ljmp
inc
movsl
sub
testl
push
mov
add
dec
adc
pop
aaa
cwtl
ret
add
cmp
pop
inc
jmp
mov
mov
addl
fcomi
fsubs
scas
repnz
stc
icebp
out
movsb
add
arpl
or
mov
push
or
mov
stos
and
outsl
xor
in
jns
stos
cmp
adc
filds
adc
test
push
div
ja
and
jmp
adc
pop
push
mov
mov
mov
and
imull
sti
pop
mov
cmp
xchg
aam
fdivrl
push
push
dec
negb
ljmp
mov
and
int
movsb
xor
lock
or
and
jecxz
in
imul
call
lahf
mov
and
fwait
stc
mov
mov
repz
lret
dec
loop
inc
leave
clc
gs
or
jmp
sbb
ret
jge
in
cld
outsl
jb
pop
mov
movsb
daa
xlat
mov
push
clc
mov
cmp
fcomp
pop
add
leave
dec
or
ljmp
out
jmp
int3
in
sbb
mov
inc
adc
fnstcw
and
and
sub
lods
pop
out
add
sbb
pop
inc
xchg
mov
pusha
inc
sarl
movsb
cltd
jle
jno
rcll
inc
fisttpll
adc
sti
push
xor
cmp
flds
fildl
sub
adc
je
ds
cmp
idivl
scas
in
xchg
and
cltd
mov
or
lret
ficoml
addl
or
test
mov
roll
xor
pop
jp
int
call
cld
pop
mov
sbb
lods
stos
dec
sbb
ds
push
fcompl
or
filds
adc
jns
inc
add
jno
adc
inc
sub
outsb
and
out
jnp
in
sub
push
shll
lds
insb
or
jne
adc
xchg
mov
lods
sti
data16
push
cld
dec
shr
jbe
mov
fadds
xor
ja
cvtpi2ps
icebp
nop
addr16
call
gs
lock
das
scas
shr
cmpsl
aaa
sbb
pop
shrl
je
mov
pop
clc
add
mov
insl
lods
mov
dec
push
test
mov
mul
xor
pop
stc
popf
xchg
push
mov
pop
mov
sbbb
xchg
ljmp
sub
cmc
js
dec
stos
push
lods
xor
mov
negb
lahf
xlat
jge
in
sbb
inc
dec
bswap
and
lcall
pop
add
outsb
add
cld
cs
pop
sbb
test
sbb
mov
test
jnp
sarl
insl
mov
sbb
xchg
mov
push
mov
cmp
mull
daa
xchg
inc
insb
mov
add
push
cmp
daa
mov
xchg
cmp
shl
in
mov
fsubr
jae
call
testl
sub
mov
aaa
into
mov
imul
push
gs
xor
inc
adc
mov
pop
adc
add
sub
xor
cltd
xor
push
dec
xlat
jl
sahf
ss
jmp
std
pop
add
mov
pop
leave
lret
add
iret
cmpsl
daa
test
mov
pusha
hlt
xlat
jne
repnz
push
mov
pop
adc
ds
das
imul
mov
decl
xor
loope
outsl
adc
aaa
pop
add
cli
sub
insb
adc
test
mov
test
mov
loopne
fidivrl
hlt
mov
daa
xor
ret
ret
xchg
cs
lret
adc
aaa
iret
icebp
pop
les
mov
adc
push
stc
repnz
das
inc
jo
dec
cmp
lret
stc
sahf
movsl
sub
lock
adc
scas
gs
incb
mov
xchg
ffree
xchg
inc
roll
push
push
cmp
push
add
cmpsb
lock
pop
std
pop
sub
sbb
dec
out
inc
adc
shlb
decl
movsb
push
mov
jne
nop
push
add
in
push
pop
sub
adc
inc
fsubs
and
ss
movsl
loop
movsb
sub
mov
sarb
call
std
mov
repnz
push
sbb
outsl
xlat
inc
mov
xchg
jge
lea
rclb
xchg
push
add
mov
or
rorl
xchg
cli
lock
shlb
nop
mov
loope
loop
inc
xlat
jle
push
cmp
mov
and
inc
jg
sub
jp
sbb
pushf
outsl
push
pop
leave
orl
mov
jmp
std
mov
inc
pusha
iret
sbb
push
pop
lds
mov
jl
pop
mov
and
jne
cmp
mov
or
cmpsl
call
lahf
inc
pop
insl
sub
fidivs
pop
cmp
and
das
dec
adc
scas
sub
xor
push
enter
or
jmp
test
mov
adc
lock
fnsave
icebp
mov
sbb
lret
call
mov
cmp
pop
xchg
inc
dec
pusha
vprotw
das
dec
dec
push
push
xor
movsl
sub
inc
adc
xor
aam
stc
outsl
call
xor
lea
sub
adc
jge
adc
rcl
jns
arpl
mov
mov
xlat
jp
pop
add
dec
iret
xchg
outsl
push
xlat
jp
jl
cmp
loope
in
aaa
incb
lret
ja
cli
pop
addr16
lods
sub
andb
xchg
roll
popf
testb
out
int
notl
lret
cli
daa
iret
pop
sbb
pushf
sbb
or
fisubs
xchg
cmp
mov
add
repz
cmp
fidivrl
sub
fisttpl
sub
ret
xchg
rolb
out
and
cmp
dec
push
and
xchg
dec
mov
jae
pop
fsubs
mov
orl
cmc
ret
sub
inc
je
jno
lcall
fcoml
push
push
push
sub
xchg
mov
cltd
dec
negl
repz
stc
pop
loope
sub
int3
and
adc
rcll
jge
dec
or
pop
call
and
enter
pushf
xor
rclb
mov
dec
addb
lahf
cwtl
inc
cltd
popf
xor
cli
jbe
xor
int3
popf
aas
stc
insb
jge
in
xchg
inc
ret
sbb
dec
or
push
cwtl
mov
add
out
jecxz
jnp
and
xchg
inc
fdivrs
leave
rcll
adc
cmp
test
ds
mov
and
mov
and
adc
fnstcw
dec
mov
and
sub
ds
and
inc
mull
nop
pushf
scas
daa
mov
mov
mov
mov
jl
fdivrs
or
cs
repz
das
arpl
mov
stos
mov
fistps
ret
mov
jp
adc
aad
insb
pop
add
add
add
popa
push
cld
mov
mov
push
adc
and
jp
pushf
inc
mov
ds
fimuls
cwtl
pop
bound
or
mov
in
movsb
adc
adc
mov
and
pop
jmp
mov
mov
icebp
mov
test
dec
adc
jns
add
pop
cld
pop
pop
xchg
adc
and
or
lds
insl
test
out
dec
lds
add
insb
and
into
xorl
and
shlb
sbb
jns
adc
outsb
jo
std
xchg
add
es
add
ss
mov
imul
lcall
and
test
inc
inc
adc
mov
jl
sub
adc
in
in
stc
mov
and
repnz
pop
mov
in
sub
dec
gs
or
loop
ss
test
mov
cld
xor
das
mov
mov
jle
xchg
aaa
imul
enter
insb
std
pusha
es
sarb
xor
dec
int
pop
add
dec
repz
adc
inc
sbb
repz
fidivs
test
mov
fucomip
push
push
cmp
pop
in
jae
cld
sub
jno
xchg
cmp
pusha
out
nop
jo
stos
ror
xchg
sbb
in
inc
cmpsb
jl
sub
inc
push
pop
testl
ljmp
mov
cmc
enter
xor
mulb
sub
popf
test
fstpt
mov
push
bound
cmc
pop
sbb
insb
dec
jl
arpl
lahf
mov
lock
lock
movsb
es
in
cltd
xor
jl
lea
imul
lock
jno
and
mov
sbb
dec
orl
lock
add
push
div
outsb
inc
or
out
xchg
out
jbe
insb
add
add
insl
lods
push
add
imul
push
push
lahf
ud2
int3
inc
ret
mov
fwait
hlt
mov
out
shrl
in
push
leave
sarl
pop
outsl
rclb
add
jecxz
mov
stos
das
dec
mov
cmp
divl
cmpsb
aaa
cltd
cmp
pop
add
sti
xchg
push
cld
outsb
jl
mov
movsb
cmpsb
inc
adc
mov
es
inc
adc
fisttps
jbe
and
dec
dec
sub
add
shlb
in
outsb
inc
push
cmc
mov
sub
ja
pop
push
sub
ss
add
inc
mov
js
fwait
inc
fsubrl
mov
xchg
push
imul
lock
or
push
popf
idivb
lcall
popf
ds
aam
bound
mov
lea
pushf
inc
adc
aad
ss
mov
mov
dec
or
mov
pop
cli
xor
jmp
add
pop
clc
pop
dec
es
dec
jo
arpl
xchg
fs
push
pusha
hlt
in
scas
sub
sti
js
add
mov
jmp
lock
xchg
repz
pop
or
inc
xlat
sbb
aas
push
ljmp
dec
pushf
cmp
adc
les
cmp
stc
nop
dec
jbe
js
lods
pop
scas
fmulp
filds
adc
cmp
mov
inc
adc
mov
mov
mov
or
mov
mov
push
lahf
and
pop
into
js
adc
pop
push
testb
ja
mov
or
jns
dec
adc
mov
add
aas
jl
mov
push
dec
dec
and
pop
inc
jmp
or
jo
pop
mov
fldenv
push
and
sub
hlt
inc
mov
lret
arpl
test
ds
test
and
mov
jecxz
adc
inc
xchg
ds
scas
outsb
repnz
cmp
cmp
jl
sbb
push
fidivrl
cmp
sbb
pop
lods
cs
jb
mov
xchg
cmp
loope
mov
pop
mov
cmp
sbb
sub
insl
repnz
mov
cmp
mov
jns
lods
inc
cltd
mov
xor
out
test
jmp
xor
ret
sbb
fwait
iret
rorl
rcll
sub
cltd
stc
cmp
pop
jmp
mov
ffreep
mov
in
std
adc
test
sub
push
jl
into
mov
scas
rcrl
pop
out
cltd
add
ja
mov
xchg
xchg
sbb
fldenv
dec
xchg
cli
cmp
sub
out
jge
lock
sahf
jbe
rcrb
movsl
mov
xchg
sub
lods
sub
fiadds
jbe
dec
loope
cwtl
shlb
push
push
test
ds
outsl
mull
ret
pop
jl
dec
fists
loopne
shlb
xchg
and
sbb
jne
mov
ror
rclb
pop
out
sbb
jbe
insl
aad
xchg
pop
xchg
sub
sub
mov
loop
dec
adc
cmp
lods
xor
push
in
decb
jne
push
fisttpl
or
xchg
sub
mov
clc
jg
fbstp
shll
add
test
rorb
jbe
cmp
leave
rclb
dec
loopne
sbb
jbe
mov
out
std
xchg
mov
ret
repz
movsb
cmp
scas
ret
pop
out
xchg
add
js
mov
call
cmp
pop
mov
nop
stc
cmp
sub
pop
lock
lock
popf
ja
iret
pop
push
movsl
mov
xchg
sub
stos
sub
faddl
dec
jne
dec
loope
xchg
shrl
dec
push
xchg
xchg
outsb
cmc
movsb
cmp
nop
sub
rorl
jp
dec
loopne
pushf
loopne
into
xor
gs
xchg
and
sbb
jae
mov
rol
sub
pop
out
sbb
jbe
imul
xchg
push
lea
pop
loopne
dec
adc
shrb
int3
push
out
std
xchg
test
or
sub
mov
idivl
fildll
iret
data16
add
sahf
and
lock
cmp
mov
loope
sbb
jbe
mov
jmp
insl
std
xchg
lahf
pop
xchg
cmp
sbb
mov
cmp
inc
lods
ret
pop
fbld
xchg
add
jns
mov
or
test
xchg
sub
movsl
push
mov
pop
mov
mov
cmp
sub
pop
icebp
jp
lock
push
push
movsl
xchg
xchg
sub
fiaddl
dec
jae
dec
loope
xchg
shrb
dec
push
xchg
mov
push
movsl
insb
rep
cmp
inc
ret
loopne
loope
lcall
arpl
xchg
pop
test
mov
fsubs
les
ret
in
out
push
jg
ja
aaa
jbe
imul
xchg
sub
fidivs
shrl
lret
sti
test
test
xlat
or
or
sub
sub
rcrl
dec
cmc
jnp
fildll
data16
imul
sbb
mov
mov
les
vaddpd
pusha
dec
loop
sbb
ja
mov
add
imul
popf
add
sbb
out
pop
cmpsb
cmp
inc
stos
les
bound
xchg
loop
xor
add
cmp
mov
cmc
cmp
es
shrb
inc
pop
icebp
js
icebp
mov
js
lret
push
montmul
cmpsb
xchg
xchg
sub
fnstcw
mov
jno
dec
loop
xchg
shrb
dec
imul
sbb
push
movsl
push
movsl
cmp
mov
mov
fimuls
setp
js
xor
popa
in
call
mov
sbb
cmp
xchg
cmp
les
ret
in
lock
jge
ja
aaa
ja
imul
xchg
sub
and
push
fidivs
shll
enter
test
xchg
xlat
or
sub
sub
ret
mov
repz
loopne
adc
imul
lock
mov
movsb
cmp
ret
pop
dec
loop
sbb
js
mov
add
imul
popf
add
mov
push
cmpsb
cmp
inc
test
pop
icebp
xchg
cld
loop
cs
movntq
xchg
orb
cmp
mov
repz
and
shrl
inc
pop
icebp
jbe
repnz
js
leave
push
adc
sbb
cs
mov
outsl
cli
dec
jecxz
xchg
shrb
dec
push
jle
lock
mov
push
movsl
push
mov
mov
fmull
or
cs
xchg
push
addl
cmp
xchg
cmp
ret
daa
ret
in
icebp
adc
ss
push
mov
mov
fnsave
movsl
xor
imul
lock
push
movsl
pop
insb
xchg
sub
sub
pop
mov
dec
loope
adc
imul
xchg
mov
movsl
cmp
or
pop
negb
lea
loop
dec
scas
imul
fwait
add
mov
push
cmpsb
cmp
aas
cmpsl
les
pusha
pop
repnz
cli
loop
sub
jns
in
add
cmp
mov
mov
cmp
and
pop
icebp
je
repz
xchg
js
push
adc
sbb
mov
insl
clc
dec
in
shrb
dec
imul
loop
xchg
mov
shlb
cmpsl
and
lds
dec
loope
cwtl
jecxz
lret
lcall
add
mov
pop
mov
shlb
shll
repnz
ja
xor
adc
xchg
incb
sbb
dec
or
cmp
mov
les
cmc
xor
mov
js
dec
rorl
cmpsb
add
xchg
sub
push
mov
dec
loop
adc
push
leave
imul
xchg
sbb
pop
dec
mov
cmpsb
out
cmpsb
cmp
cmp
les
pop
dec
jecxz
adc
push
fisubrs
cwtl
cltd
decl
mov
push
cmpsb
cmp
movsl
les
pop
pop
pause
clc
loop
sub
add
aaa
popf
push
mov
pop
mov
mov
cmp
and
icebp
jb
repz
xchg
js
push
adc
sbb
mov
insb
testl
rorb
jnp
lock
popf
mov
iret
xor
movsl
lock
and
lds
dec
loope
xchg
jecxz
leave
sub
pop
ljmp
mov
pop
mov
shll
shlb
push
loope
repnz
ja
xor
gs
xchg
std
xchg
mov
fnstenv
shlb
ret
pop
lock
jg
mov
rorb
cmpsb
add
sub
push
mov
dec
loop
psrlq
enter
mov
out
cmpsb
cmp
cmp
les
pop
dec
jecxz
adc
jp
stos
push
frstor
cwtl
cwtl
decb
mov
push
cmpsb
cmp
cmp
pop
pop
repz
mul
jns
mov
adc
dec
add
ss
push
mov
push
mov
mov
cmp
pop
stos
aad
fldl
icebp
jno
repz
xchg
js
lds
test
out
sub
aad
mov
imul
in
shrb
dec
imul
loopne
xchg
pushf
mov
into
xor
movsl
fs
cmpsl
and
lds
dec
loope
xchg
jecxz
enter
pop
jmp
xchg
insb
shlb
mov
loopne
repnz
ja
xor
fs
cld
test
mov
fdivs
shlb
ret
repz
mov
rorl
cmpsb
add
sub
push
mov
dec
loop
push
shrl
imul
xchg
sbb
cmpsb
in
cmpsb
cmp
aaa
rol
repnz
dec
jecxz
adc
jp
stos
push
fsubl
cwtl
xchg
std
mov
das
mov
cmpsb
cmp
cmp
les
pop
pop
repz
loop
sub
add
xor
push
mov
mov
cmp
push
stos
aad
fdivrl
pop
icebp
jo
repz
xchg
js
les
test
in
sub
aam
mov
push
dec
in
mov
imul
fwait
mov
int
push
movsl
arpl
cmpsl
and
lds
dec
loope
xchg
jecxz
sub
pop
call
xchg
imul
cmp
lea
pop
push
fistps
adc
ja
xor
arpl
xchg
sti
test
mov
xlat
mov
or
shlb
rcrl
jge
mov
rorb
cmpsb
add
sub
push
mov
dec
loop
or
imul
xchg
sbb
cmpsb
in
cmpsb
cmp
ss
dec
jecxz
adc
jp
test
add
cs
cmpsb
cmp
cmp
pop
repz
cmc
loop
daa
scas
jp
loope
add
xor
push
mov
push
mov
xchg
cmp
sbb
ds
icebp
outsl
cld
repz
xchg
js
ret
dec
adc
push
mov
mov
imul
shrb
inc
imul
fdivp
xchg
lcall
in
cmpsl
ds
test
mov
lds
dec
loope
xchg
jecxz
sub
pop
out
cwtl
sbb
sbb
push
movsb
cmp
mov
pop
push
ficomps
pcmpeqw
ja
xor
enter
adcl
dec
mov
or
rcrb
rcrb
jl
mov
iret
montmul
cmpsb
add
sub
push
mov
dec
loop
or
push
lds
negl
mov
mov
cmpsb
jecxz
cmpsb
cmp
xor
push
dec
jecxz
adc
jp
test
add
add
sub
dec
cmpsb
cmp
cmp
pop
repz
loop
es
jp
loopne
add
xor
mov
xchg
cmp
sbb
aad
fidivrl
repz
dec
adc
adc
ss
push
mov
imul
mov
lret
xor
movsl
popa
in
cmpsl
ds
subl
aas
lds
dec
loope
xchg
jecxz
lds
push
cwtl
pop
jp
sbb
imul
cmp
pop
push
fcompl
or
jns,pn
pusha
call
mov
push
mov
aam
dec
push
insl
cmp
sahf
daa
shrl
mov
icebp
mov
fs
cs
pop
lds
mov
jmp
or
imul
add
pop
repnz
mov
cmpsl
loope
cmpsl
ds
add
xor
in
pmulhuw
cmpsb
imul
bound
cltd
xchg
stc
mov
sub
cmpsl
jle,pt
aas
cmp
pop
hlt
mov
jecxz
and
jnp
fiadds
cwtl
jbe
cltd
xor
cwtl
pop
mov
push
mov
test
cmp
insb
fdivrs
repnz
stc
repz
jns
rorl
loop
cs
das
shlb
dec
in
mov
push
inc
imul
fdiv
mov
xchg
mov
leave
das
pusha
ljmp
mov
lds
dec
loop
xchg
jecxz
ret
imul
adc
ss
mov
int
cmp
mov
pop
push
ficompl
or
cmpsb
sub
adc
add
mov
pop
mov
shlb
aam
and
pop
repnz
js
mov
lret
cld
arpl
lds
mov
call
or
insb
cmp
push
repz
repz
scas
adc
cltd
add
xor
dec
in
or
insb
add
pusha
add
sub
test
jge
aas
ss
pop
rclb
hlt
mov
in
and
add
das
xchg
and
sub
aad
movsb
aad
cmp
div
mov
mov
rorb
jnp
cwtl
das
adc
mov
out
dec
in
mov
imul
repnz
adc
sbb
lds
dec
jecxz
jecxz
shll
cwtl
adc
pop
stos
xor
mov
int3
cmpsb
cmp
mov
lds
pop
repnz
jp
sub
pop
movb
idivl
cs
sbb
mov
shlb
aad
and
push
mov
icebp
mov
leave
cli
bound
lds
dec
out
dec
jecxz
or
insl
cmp
hlt
mov
scas
adc
xchg
add
enter
pop
ljmp
jnp
movsb
insl
add
pop
add
sub
test
xor
pop
iret
push
pop
hlt
xchg
in
and
add
sub
dec
mov
sub
sbb
pop
hlt
imul
mov
lea
mov
loopne
xor
fwait
das
int3
xor
in
xchg
insb
mov
mov
mov
lds
cmpsl
sbb
lds
dec
in
jecxz
mov
loopne
cwtl
adc
and
lret
cmpsl
ds
test
pop
push
pop
repnz
jb
jnp
sub
pop
lds
cltd
idivb
lods
pop
and
add
fwait
and
push
mov
icebp
mov
clc
popa
lcall
mov
dec
out
dec
jecxz
pop
xlat
outsb
cmp
cmc
mov
adc
xchg
pushl
enter
pop
jmp
or
jnp
mov
add
sub
test
xor
hlt
test
in
and
add
sub
and
jg
aas
sbb
pop
hlt
push
repz
mov
mov
fistps
lret
xor
in
xchg
insb
mov
fpatan
mov
xchg
mov
les
test
in
ds
jg
mov
lds
dec
in
mov
jp
and
push
filds
cwtl
adc
and
lret
cld
cmpl
dec
aad
repnz
jno
jnp
daa
jns
pop
les
cltd
cmc
jp
lods
push
and
ljmp
cltd
and
imul
hlt
jmp
repnz
adc
xchg
sbb
dec
mov
dec
in
dec
in
add
imul
pop
cmc
mov
stos
adc
xchg
std
xor
cs
pop
call
or
jl
mov
add
es
and
jns
inc
xlat
xor
pop
cmc
test
in
pop
cmpsb
jl
fadds
lcall
and
jle
aas
push
mov
pop
hlt
push
mov
mov
fstpl
lret
dec
jmp
in
test
insb
mov
insb
add
repz
xchg
mov
ret
sub
test
in
aas
push
jge
scas
aaa
pop
imul
in
mov
fiadds
cltd
pcmpeqw
mov
enter
cmpb
mov
pop
dec
aam
repz
es
pop
ret
repz
das
stos
adc
mov
data16
xchg
pop
aad
push
mov
repz
adc
pop
xor
dec
mov
dec
loop
dec
in
add
outsb
xor
push
cmc
mov
test
test
enter
pop
out
dec
out
or
jge
lahf
insl
add
pop
add
mov
mov
and
and
ja
inc
fdivs
cwtl
pop
lret
testb
jge
xlat
add
sub
mov
adc
xlat
outsb
shll
cmc
mov
jnp
mov
fistpl
enter
dec
pusha
ljmp
mov
insl
add
aad
mov
nop
mov
ret
test
jecxz
inc
adc
ss
pop
push
mov
jl
pop
insb
add
add
movsl
and
clc
cmpb
mov
pop
dec
rcrb
add
jl
and
adc
add
test
lret
cld
fs
xlat
xchg
sbb
pop
cmc
out
hlt
mov
ret
adc
lea
mov
out
add
outsl
xor
testb
cmpsl
adc
fcomps
inc
xchg
stc
xor
sub
push
out
push
out
cmp
add
and
lods
and
jne
inc
fsubrs
xchg
enter
pop
testb
jge
aad
add
outsb
negb
mov
jnp
inc
xlat
adc
pop
cmc
gs
mov
xchg
inc
adc
or
xor
sub
dec
out
adc
add
aam
mov
mov
test
adc
stos
xor
pop
data16
dec
in
xchg
jl
push
insl
add
fiaddl
lcall
and
idivl
scas
sbb
pop
dec
rcrb
add
sahf
and
push
mov
cltd
xor
enter
arpl
xchg
sbb
insl
dec
mov
mul
outsb
hlt
mov
rcll
repnz
pushf
xor
mov
out
add
push
idivb
jmp
add
in
dec
scas
mov
jmp
push
mov
insl
push
mov
dec
in
mov
jp
adc
push
lret
or
add
mov
add
xchg
mov
mov
pop
call
mov
fndisi(8087
lret
sahf
add
leave
in
jnp
sub
xlat
inc
or
sar
cmp
int3
cmp
cwtl
xchg
cs
in
xor
and
mov
xchg
stc
cmp
add
push
mov
ret
cmp
push
inc
cli
lock
sub
data16
pop
push
fsubrs
std
clc
mov
addr16
inc
pop
sub
inc
xchg
insb
das
cmp
jno
divb
lods
jmp
int
adc
mov
sbb
aad
lds
stos
jmp
adc
inc
lods
inc
out
rorl
shlb
hlt
jae
push
push
fiaddl
cmpsl
and
mov
shrb
ret
ret
int3
mov
pop
xchg
lcall
adc
sbb
pop
mov
or
outsb
pop
ffreep
ljmp
and
cmp
test
jne
push
pop
sbb
nop
sahf
add
sahf
add
mov
add
test
mov
dec
inc
stc
jle
ret
jl
out
aas
popf
lods
jne
and
cmpsl
xchg
je
cmp
jnp
push
enter
xchg
ficoml
mov
xchg
in
cmp
inc
ret
push
add
out
das
or
xorb
xchg
xchg
sti
cmp
sbb
icebp
jl
test
int
push
sbb
scas
es
pop
lds
iret
xor
gs
sti
inc
cmp
stos
and
pop
jns
mov
in
sahf
sub
cld
jbe
mov
cmp
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
mov
fwait
bound
imul
cwtl
div
test
leave
cmpl
jae
int
push
xchg
jp
fldcw
loope
push
orb
mov
loope
rcll
adc
aad
adc
outsl
xchg
rorb
insl
inc
insl
xchg
mov
inc
imul
cmp
sbb
or
cmpsb
mov
jnp
loopne
stos
xchg
jns
int3
cmpsl
pop
mov
psubb
push
cmp
or
cld
cmp
dec
ljmp
or
push
adc
addr16
sti
push
ss
andb
sbb
outsl
xor
aam
loopne
push
insb
xchg
push
test
xchg
insb
push
dec
or
loope
enter
jp
cmpb
jge
adc
cmp
mov
ljmp
je
or
mov
push
in
dec
sub
mov
sub
or
xor
lock
cli
inc
loope
pop
into
mov
add
push
sbb
dec
iret
mov
or
mov
stc
outsb
outsl
iret
xor
test
push
adc
add
mov
pop
pop
inc
inc
xor
stc
psadbw
lret
mov
divb
pusha
nop
lret
sub
jns
cmp
into
and
repz
clc
and
pop
mov
es
push
gs
sub
out
sahf
aaa
scas
pop
lds
dec
dec
add
lcall
jmp
dec
int3
pop
popa
push
outsb
push
mov
test
cmpsl
mov
test
scas
xor
pop
cmp
loope
xchg
test
cmc
lods
adc
add
xor
mov
mov
fbstp
mov
push
cmpsl
xor
and
pop
scas
enter
xchg
add
and
sub
insl
clc
add
ds
hlt
lcall
inc
pop
jp
imull
out
jl
adc
fstpt
jno
daa
push
out
leave
mov
sub
inc
into
cltd
mov
mov
shll
xlat
mov
stos
dec
in
dec
xchg
insl
push
aaa
add
lret
stc
xchg
int3
iret
mov
cwtl
dec
xchg
mov
xor
ret
mov
lret
hlt
or
aaa
out
mov
ss
lret
cmp
std
les
lret
ja
jmp
cltd
push
fldenv
out
adc
add
lds
lea
insl
sbb
std
jp
jmp
or
cmpsb
lock
stos
pop
lods
xchg
jo
notl
adc
stos
lea
jae
insb
shll
pop
incl
adc
in
out
mov
loopne
pop
and
push
icebp
xor
xor
aad
imulb
shrb
mov
ljmp
test
add
cmp
in
sbb
loop
push
mov
jmp
cmpsl
in
mov
call
nop
jno
mov
mov
dec
mov
dec
mov
mov
cmp
shll
aaa
orb
fbld
pop
les
inc
mov
mov
mov
sti
into
xor
std
icebp
jbe
xchg
cmp
je
cmp
fnstenv
adc
out
fidivs
test
cs
scas
mov
sub
mov
ljmp
daa
mov
cmp
daa
mov
push
cmpsl
xor
mov
movsl
cld
mov
ja
pop
mov
pop
mov
cli
out
cli
lock
mov
das
add
aam
das
pop
pusha
fcoms
sahf
bound
cmp
xchg
cli
and
fldl
dec
mov
cmp
mov
stos
xchg
dec
cmp
push
jo
jmp
cmp
pop
lods
lods
das
je
aad
rcrl
sub
daa
mov
xor
cmpsl
std
jl
add
mov
cmpb
mov
outsl
js
adc
test
pop
in
inc
ret
and
mov
sub
cmpsl
pop
icebp
int3
daa
lea
xor
cmp
inc
add
mov
mov
mov
jp
sub
xlat
cmpsl
xor
sahf
pop
mov
add
icebp
test
inc
push
js
adc
jo
jno
pop
or
iret
mov
push
mov
xlat
dec
scas
push
mov
lods
repz
inc
std
and
add
or
dec
sub
sbb
rorb
mov
pop
bound
cli
repz
xchg
add
cwtl
into
clc
jg
insb
sarb
sub
xor
dec
push
inc
mov
push
push
inc
repnz
pop
arpl
adc
psrld
xor
jns
mov
pop
insb
xchg
mov
out
shlb
jno
and
fdivl
lods
add
adc
iret
mov
jbe
mov
fst
in
lahf
daa
cmpsb
mov
pop
dec
fs
sub
mov
pusha
pop
and
sub
push
std
pop
xchg
sub
scas
lods
add
jno
gs
out
jne
arpl
xor
add
xchg
add
mov
mov
cmpsl
add
add
fs
mov
sti
lock
cmpsl
pop
fmulp
jns
test
testl
sub
inc
cld
insl
pop
movsl
bound
scas
xor
pop
mov
mov
push
mov
cli
int3
lods
mov
out
aam
lret
cli
jno
push
je
mov
xchg
fiadds
inc
or
mov
sub
sarl
pop
notb
pop
inc
sbb
lea
in
mov
sbb
xchg
mov
sub
inc
add
in
lahf
sbb
incl
cmp
enter
std
mov
lods
xchg
aad
les
inc
sti
pop
mov
mov
dec
push
or
mov
idivl
ret
lret
and
fnstcw
mov
out
out
rol
dec
es
sbb
dec
cmp
and
xor
xchg
mov
mov
push
fwait
inc
dec
popa
adc
out
sahf
push
inc
popa
addr16
ficomps
mov
pop
mov
jnp
negb
mov
mov
dec
cltd
jno
adc
mov
ljmp
int3
dec
call
movsb
sahf
pop
ljmp
jbe
push
mov
daa
fildll
xor
imul
stc
add
fcomp
cwtl
mov
push
std
and
into
cmpsl
lods
outsb
fnstcw
dec
int
cltd
xchg
xchg
addr16
pop
loope
xlat
sarb
jns
jge
popfw
outsb
ret
dec
add
dec
add
lahf
dec
add
mov
mov
lret
stos
add
stos
lret
stos
sub
push
aad
outsl
loop
jne
sub
test
notb
lods
push
xchg
repz
cmp
adc
int
test
iret
