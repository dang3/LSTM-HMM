push
xchg
pusha
mov
testb
dec
pop
xor
mov
xor
push
push
xor
mov
int
outsl
jo
cmp
aas
adc
dec
test
cmp
test
push
mov
shrb
fdivl
nop
push
mov
into
pop
bound
xor
jl
aaa
fimuls
sbb
lds
ss
xor
xor
shll
pusha
movb
sub
or
inc
and
je
lds
outsl
jno
js
xchg
or
aaa
fimull
xor
cltd
pop
bound
mov
lahf
or
pusha
mov
fsubp
xor
movsl
push
cld
push
sbb
xchg
cmp
push
lahf
cmp
or
outsb
cmp
cmp
shrl
cmp
mov
mov
sbb
dec
or
lahf
cmp
or
adc
pusha
scas
mov
cmp
sbb
addb
cmp
insb
out
fiadds
xchg
jnp
jg
adc
test
cmpb
out
sbb
clc
mov
cmp
leave
mov
push
ud2
push
mov
into
pop
adc
or
pushf
pop
out
cs
jb
outsl
mov
or
push
shr
int3
insb
dec
dec
stos
popf
leave
dec
ds
adc
lods
or
xchg
aaa
clc
jmp
jle
lret
or
leave
ja
inc
jle
pop
cmpsb
ret
mov
test
or
imul
stos
leave
cli
clc
outsl
mov
xchg
push
xor
add
and
sub
neg
xor
add
mov
inc
inc
inc
inc
xor
mov
add
loop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
push
push
call
add
mov
mov
mov
cmpb
jne
inc
mov
mov
cmp
je
cmp
jne
cmpb
jne
inc
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
testb
je
movzwl
jmp
cmpb
jbe
inc
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
jmp
jmp
push
push
call
pop
pop
ret
xor
ret
ret
jmp
jmp
jns
pop
dec
inc
push
jo
inc
pop
inc
js
pop
imul
dec
pop
dec
pop
inc
push
pop
outsb
pop
push
dec
add
add
insl
imul
dec
pop
je
imul
dec
dec
js
popa
inc
ja
dec
popa
outsb
popa
push
pop
dec
imul
push
je
dec
add
dec
inc
insl
add
dec
ja
push
outsb
outsl
dec
dec
push
pop
push
je
push
imul
push
dec
inc
push
push
addr16
inc
push
dec
pop
pop
insb
jne
jne
dec
insl
dec
popa
js
add
add
imul
pop
pop
dec
push
fs
dec
jo
pop
inc
dec
dec
arpl
popa
pop
imul
push
pop
dec
dec
dec
inc
jb
bound
dec
outsl
inc
jno
popa
add
add
push
dec
push
pop
outsl
jae
pop
pusha
jb
pop
push
push
gs
dec
pusha
bound
inc
popa
pop
pop
outsb
dec
pop
push
push
inc
pop
jne
push
jno
push
jno
jne
add
add
add
add
push
gs
inc
imul
insb
bound
gs
add
add
add
dec
dec
je
jae
inc
outsb
push
inc
pusha
dec
imul
inc
inc
push
insb
push
imul
add
bound
push
dec
jae
insb
jne
push
imul
jne
jae
insl
dec
pop
push
popa
inc
jne
je
pop
data16
add
add
push
addr16
add
popa
imul
pusha
pop
inc
jbe
inc
pop
ja
jbe
fs
js
imul
push
je
push
inc
pop
push
inc
push
ja
push
outsb
dec
jb
inc
imul
add
lock
add
and
add
and
add
add
fsubs
add
js
add
inc
and
add
and
add
add
push
dec
inc
dec
xor
cs
insb
add
dec
xor
cs
insb
add
push
inc
push
push
cs
insb
add
add
adc
add
sbb
add
and
add
add
add
and
add
add
and
add
add
add
add
fs
je
insl
inc
add
add
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
mov
add
shlb
add
and
add
and
add
and
add
and
add
and
add
add
sbb
add
sub
add
cmp
add
add
add
add
add
mov
add
shlb
add
and
add
and
add
and
add
and
add
and
add
add
sbb
add
sub
add
cmp
add
add
pop
imul
insl
add
add
js
je
add
pop
pop
arpl
inc
imul
gs
je
add
add
arpl
insb
outsb
add
add
addr16
popa
imul
add
pop
pop
jae
je
jae
jb
popa
je
gs
add
add
pop
popa
fs
jae
pop
imul
add
jo
pop
arpl
insl
outsl
fs
add
pop
pop
jo
pop
insw
outsl
fs
add
pop
pop
jae
je
popa
jo
pop
je
jo
add
add
pop
gs
gs
pop
push
gs
add
add
pop
arpl
je
outsl
insb
data16
add
add
add
add
add
add
add
outsl
jb
add
pop
cs
repz
dec
les
mov
xchg
dec
and
inc
and
rol
dec
or
xchg
inc
xlat
jge
out
xchg
dec
repz
jo
add
std
fs
dec
stos
repz
sbb
rolb
jae
mov
add
cmp
lock
data16
push
or
rol
inc
sbb
out
cmp
adc
cmp
push
lret
inc
mov
pop
jno
sbb
pusha
sub
push
je
pxor
push
test
push
jp
pusha
mov
cli
lds
add
or
cmp
xchg
outsl
jmp
stos
and
out
test
adc
cltd
cmp
xlat
lahf
cmp
mov
lahf
cmp
xor
js
out
outsl
mov
mov
test
sub
push
aad
xchg
cmpsb
xchg
cmc
sti
or
or
mov
outsb
js
jno
lock
xchg
arpl
mov
mov
add
test
push
jnp
mov
pop
xchg
mov
sbbl
arpl
cmp
out
test
arpl
jbe
xor
jp
xchg
aad
enter
jbe
loopne
bound
decl
mov
or
pop
movsl
ret
rdpmc
jg
js
shl
add
out
jne
test
cli
ret
xchg
push
call
movb
add
bound
and
jecxz
popa
pop
push
mov
aam
and
test
btc
sub
push
in
push
push
adc
in
mov
fdiv
in
ds
aam
ror
push
mov
outsl
in
add
inc
pop
call
jns
xchg
fimuls
lcall
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
and
rol
mov
add
test
mov
sub
gs
and
je
push
adc
clc
in
insb
jmp
jp,pt
pusha
dec
dec
movsb
js
jbe
and
jp
mov
sub
jns
pop
dec
inc
xor
jb
and
int
testl
lea
loop
push
xchg
cmc
decl
add
repz
jb
cmp
push
mov
xchg
sti
icebp
jmp
popa
movb
test
xor
lea
add
push
dec
lahf
push
repz
jp
adc
test
sub
decl
or
mov
icebp
jb
xor
xor
pop
repz
jb
test
mov
lret
adc
lea
loop
push
xchg
cmc
sti
or
test
adc
pop
lea
pusha
mov
and
xchg
in
stos
repz
jp
fs
pop
push
pusha
pop
jnp
pusha
dec
inc
push
movsl
test
jecxz
add
icebp
test
into
jecxz
pop
xor
imul
pusha
movb
push
push
inc
imulb
test
lahf
mov
test
pop
in
jcxz
adc
push
and
test
into
cmp
inc
cmp
movsb
call
adc
jmp
mov
cmc
pop
adc
sbb
jb
xchg
inc
xchg
mov
std
sbb
jp
pusha
add
test
repz
mov
mov
inc
ret
pop
mov
inc
mov
sub
jp
adc
dec
pop
add
push
cmp
in
mov
add
sub
mov
sbb
cmpsl
arpl
mov
sub
cmc
add
repz
pusha
cmp
mov
jg
sbb
mov
scas
add
repz
testl
or
or
or
or
or
or
or
or
or
or
cmp
xlat
test
push
repz
dec
inc
mov
lahf
cmp
rcll
sti
push
fwait
push
cli
cmp
add
or
mov
inc
push
test
aaa
cs
push
or
repz
and
cltd
pop
repz
push
test
push
mov
mov
movsb
inc
call
mov
aas
je
mov
iret
fdivp
jge
inc
pushf
mov
incb
push
pusha
movb
xchg
xor
mov
test
test
or
iret
add
add
repnz
cmp
add
jae
jp
sub
testl
cmp
push
mov
out
es
stos
repnz
adc
sti
xor
rolb
add
or
insl
cmp
scas
xor
sti
inc
jnp
loopne
add
clc
xchg
outsl
mov
sti
dec
jne
cmpsb
loop
in
push
jnp
sbb
mov
lods
test
mov
outsl
cmp
push
adc
dec
sub
sub
lret
jge
xchg
and
pusha
enter
call
jo
imul
insb
insl
lock
in
jb
jnp
pushf
add
mov
sti
sub
add
and
mov
pcmpgtd
pop
mov
add
cwtl
mov
mov
test
cld
mov
adc
loopne
lahf
adc
out
xchg
push
mov
in
int3
xor
aam
notb
mov
mov
clc
mov
mov
sbb
test
mov
dec
push
jno
push
add
jo
adc
loop
or
and
cmp
mov
mov
fcoms
cmp
sub
int
sbb
cmpb
mov
dec
pop
jnp
imul
sbb
or
or
or
or
or
or
or
or
sub
or
cltd
inc
jo
jp
test
sub
bound
pop
jge
mov
sbb
sbb
pop
sub
jge
sub
cmp
jecxz
icebp
cli
push
pop
jne
xchg
xor
in
in
jnp
repz
jb
and
mov
fadds
or
shr
sbb
xlat
mov
xchg
icebp
pop
es
jbe
mov
aam
mov
inc
push
test
cld
cli
push
scas
loop
loopne
lahf
repnz
push
add
bound
push
insl
in
in
and
repz
jb
and
mov
push
inc
sahf
inc
out
lds
push
mov
lret
dec
xchg
sub
imul
and
inc
cmpsb
and
addb
adc
es
sub
fs
insb
xlat
mov
lahf
icebp
dec
shlb
aam
mov
jl
jno
cld
dec
cmp
stos
scas
mov
push
and
pop
xchg
mov
push
xchg
ljmp
xor
xchg
mov
lea
loope
pop
scas
sub
shll
xor
mov
push
mov
js
inc
in
inc
call
push
nop
mov
or
xchg
push
ljmp
aaa
pop
in
pop
xor
test
lods
inc
mov
mov
stc
iret
sbb
mov
mov
inc
mov
xchg
xchg
sub
mov
dec
insb
cmp
adc
in
in
push
lcall
mov
out
inc
mov
ret
imul
mov
aam
mov
or
xchg
nop
sub
jp
push
cmp
add
scas
fbld
cmp
jns
inc
iret
nop
in
jae
repz
lock
inc
xlat
fmull
jmp
inc
xor
or
or
or
or
or
or
or
or
mov
and
outsl
ljmp
adc
sub
imul
ret
shrl
pop
jno
adc
shrl
push
les
mov
push
lds
cmp
shlb
int3
mov
test
sbb
scas
nop
mov
shlb
inc
fdivrs
std
push
mov
lcall
xlat
mov
cwtl
mov
inc
insb
int
mov
and
push
and
inc
cmpsl
push
test
mov
xchg
es
lret
push
popa
fnstcw
cmp
inc
stc
sti
jecxz
andb
in
cmp
xor
add
int
and
out
rcrb
jl
dec
call
inc
clc
lock
cmpsb
out
or
enter
pop
and
adc
mov
jae
and
or
negl
sub
mov
adc
or
add
imul
insb
mov
pop
adc
or
and
sub
rcrl
mov
pop
sub
jns
inc
mov
push
adcl
fdivp
jmp
mov
xlat
xchg
fwait
data16
imul
out
andb
adc
movsb
mov
daa
or
adc
xor
dec
push
cld
out
orl
mov
and
test
aaa
into
jg
ret
enter
mulb
pop
addr16
pop
outsb
mov
adc
icebp
and
ljmp
xor
insl
decb
imul
popfw
mov
jno
dec
lret
lds
xchg
sub
aas
pop
cmp
insb
sbb
rcl
imul
xchg
cmp
sbb
push
adc
xchg
into
out
pop
aam
xor
push
inc
fsubl
push
jecxz
adc
or
or
or
or
or
or
or
or
sub
push
jmp
pop
or
sub
pop
and
sbb
loop
loop
jnp
in
pop
lods
bound
nop
stos
mov
push
mov
push
fisubrs
pop
mov
rcll
test
imul
mov
add
and
imul
in
fwait
sub
mov
lret
sub
mov
mov
pop
aam
js
jl
cltd
cmp
adc
adc
insl
or
loop
sub
stc
sub
jne
xor
lods
jno
insb
int3
loop
xor
icebp
jmp
insb
cmpsl
pop
mov
imul
pushf
mov
inc
xchg
aam
xchg
pop
stos
mov
loope
pop
mov
in
sub
pop
xchg
movl
mov
out
adc
cmpsl
dec
cmpb
xor
push
dec
jmp
jno
lret
jl
xchg
sub
push
cmp
mov
push
xchg
inc
add
loop
adc
mov
add
sbb
mov
push
sub
ss
mov
jecxz
icebp
ficoml
cltd
ror
outsb
pop
adc
or
jp
mov
lods
jp
imulb
sahf
lcall
pop
or
or
std
ret
adc
sbb
icebp
jbe
in
in
cmpsb
repz
mov
dec
push
xor
cli
sub
mov
loop
aad
push
or
leave
imul
mov
jg
sbb
push
and
in
xor
add
das
xor
push
push
cmc
into
repz
and
xchg
sub
push
pop
push
mov
ret
inc
jmp
xchg
test
mov
fdivrs
imul
dec
adc
mov
fistpl
pop
jno
push
cmc
mov
inc
fcmovb
push
rclb
stos
jno
dec
mov
loopne
lock
xchg
mov
leave
dec
jp
push
adc
mov
xchg
mov
sub
adc
clc
mov
mov
mov
pop
popf
mov
add
cli
inc
loope
cs
mov
jno
push
jo
lret
mov
add
repz
jecxz
mov
lods
xlat
jle
xchg
sub
xchg
sub
push
jns
into
loop
cmp
dec
int3
mov
xchg
aaa
js
repnz
aas
jge
pusha
inc
loop
test
pop
rol
pop
js
mov
ds
mov
add
loop
push
pop
xchg
and
inc
mov
mov
cmp
cmp
xor
lret
sub
imul
ss
cltd
adc
mov
dec
jo
shrl
push
jae
jbe
hlt
loop
jecxz
xor
pop
mov
jns
adc
or
xchg
sbb
jno
inc
adc
ss
cmpsb
xchg
sub
push
cmp
sbb
loopne
mov
addl
sub
in
popw
enter
adc
mov
loope
fdivrl
jnp
add
addb
inc
test
pop
cltd
jae
jae
pop
mov
fucomi
sub
in
in
inc
out
mov
pop
stos
inc
sub
jno
push
mov
mov
jmp
mov
sub
push
adc
out
xor
es
dec
and
push
loope
pop
xchg
cwtl
xchg
push
cmovg
mov
stos
push
rorb
cmpsb
ret
push
fstpt
and
lcall
fadd
cmp
lods
push
xchg
repnz
cmp
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
lds
cmp
lds
cmp
lds
dec
inc
mov
cmp
int3
push
inc
mov
push
adc
mov
scas
cltd
lret
adc
mov
out
mov
js
xchg
mov
mov
xchg
xchg
imull
icebp
mov
scas
dec
outsb
cmp
mov
scas
lret
cmp
mov
scas
fmul
addr16
mov
scas
lret
jns
dec
mov
scas
or
push
pop
sahf
cmp
pusha
mov
adc
fimull
jmp
out
lock
loop
hlt
jmp
out
dec
ljmp
dec
cld
jmp
cmc
dec
mov
mov
sub
icebp
dec
mov
and
dec
pushf
jmp
cli
dec
nop
call
movsl
adc
xchg
sbb
daa
fs
dec
repnz
mov
dec
ret
mov
clc
sub
push
divb
or
and
inc
adc
les
xchg
sarl
mov
repz
stos
lret
or
push
cmpsl
sti
es
sbb
loope
pop
mov
adc
sbb
iret
add
jae
and
or
fldt
test
mov
clc
and
cwtl
in
xchg
lods
or
fisubrl
enter
cmc
shl
adc
adc
push
leave
sbb
adc
dec
xchg
std
fstps
in
std
outsb
push
mov
adc
movsb
lods
test
divl
pop
dec
shll
adc
stos
lcall
mov
cld
mov
add
cmc
add
stc
mov
add
in
gs
jg
sbb
in
jmp
sbb
in
repnz
sbb
in
stos
mov
sbb
cmpsb
mov
sbb
in
movsl
mov
sbb
in
mov
sbb
in
mov
sbb
mov
sbb
int3
jb
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
xchg
leave
mov
mov
adc
aam
jb
inc
stos
xor
arpl
leave
mov
xchg
xor
gs
mov
addr16
mov
jge
ret
mov
jae
sarl
xor
mov
dec
xor
mov
dec
xor
mov
inc
xor
mov
inc
xor
mov
inc
xor
mov
inc
xor
mov
xor
mov
movsb
cmc
mov
and
iret
mov
xchg
add
mov
int
sbb
lret
mov
add
mov
leave
mov
xchg
push
cmc
addb
mov
xchg
or
addb
mov
xchg
or
test
ret
mov
or
xchg
rorl
add
mov
xchg
adc
lcall
cmc
pushf
add
mov
adc
sahf
add
mov
xchg
push
cmc
nop
add
mov
xchg
sbb
xchg
add
mov
daa
cmc
jmp
xchg
and
mov
and
in
add
mov
and
out
add
mov
das
cmc
loope
in
jae
sub
mov
sub
in
loopne
ja
sub
out
decb
stc
add
mov
decl
je
sahf
push
pusha
loopne
je
sahf
insl
out
sar
mov
pushl
popa
out
shl
cmpb
pop
sbb
repnz
es
pop
mov
or
add
outsl
inc
lret
incb
addr16
inc
rorl
ret
mov
cmp
out
adc
push
cmp
or
xchg
or
adc
add
mov
add
popl
inc
cmp
adc
sbb
addb
cld
xor
outsb
adc
incb
dec
cltd
lock
adc
jne
pop
clc
and
or
stc
fistpl
mov
out
pop
out
fdiv
or
or
or
or
or
or
or
or
or
or
or
or
jns
adc
repz
sbb
pxor
lea
out
pop
mov
jl
repz
outsl
sub
je
sbb
jle
out
push
fisttpll
adc
ss
ss
dec
and
insl
xchg
bound
xchg
rcll
andb
and
cmpsl
jnp
inc
pop
jl
ljmp
clc
hlt
xchg
in
xor
mov
sbb
pop
inc
clc
lock
shll
popl
inc
loop
mov
xor
xchg
fbstp
addl
clc
incb
sub
xchg
fidivs
xchg
dec
clc
cli
xchg
aam
test
jne
fcomps
jp
ljmp
and
rcr
out
sub
jl
aam
in
stos
sub
cs
fsub
sbb
fcmove
add
iret
fisubrl
in
int
jecxz
mov
fisubrl
in
rcr
and
mov
dec
pusha
in
mov
dec
in
mov
dec
fs
mov
clc
and
mov
cli
and
mov
cld
and
mov
and
stos
fcmovb
and
test
mov
in
scas
fsubl
fprem1
sahf
out
push
mov
jl
cmc
nop
out
daa
mov
jl
cmc
mov
and
cmc
out
and
pop
xchg
mov
sbb
ret
clc
mov
pop
mov
sahf
mov
daa
sbb
jne
nop
push
cmp
iret
inc
lret
pop
add
inc
int
add
pop
int
inc
iret
pop
add
pop
scas
xchg
inc
rcrl
push
int
jns
push
add
xchg
add
cltd
pushf
and
push
adc
sahf
andl
adc
movl
sbbl
adc
out
adc
out
adc
or
or
or
or
or
or
or
or
xchg
and
cld
imul
fdivr
insl
or
xor
cli
cld
popa
or
hlt
cwtl
adc
mov
clc
gs
and
cli
xchg
mov
xor
mov
xor
ds
pop
xor
aam
jp
push
popf
fimuls
push
jl
cli
out
in
dec
sbb
inc
sbb
cld
xchg
xchg
adc
ficompl
add
inc
sub
sarb
sbb
push
pop
shlb
xchg
shll
iret
notb
pop
leave
mov
enter
push
dec
testb
out
testb
adc
addb
arpl
cmpsb
out
sbb
daa
and
mov
fldenv
adc
es
roll
mov
es
loop
ja
adc
es
fnstenv
xor
mov
cmpsb
adc
es
es
mov
stos
adc
es
mov
sub
cld
or
clc
mov
ss
shlb
cmpl
mov
dec
into
sbb
jb
mov
adc
pop
adc
outsl
ljmp
outsl
out
leave
scas
clc
jle
rcrb
ljmp
daa
shrl
mov
dec
xor
fimull
in
movsl
fcmove
and
pop
fcmovne
leave
mov
out
and
xor
vprotq
jo
out
test
sub
mov
jp
inc
mov
sbb
mov
pop
push
xchg
into
stos
pop
jl
push
lret
cmp
inc
int3
outsl
test
cmc
into
out
test
push
jl
cmc
shr
mov
sbb
xor
cwtl
pop
lret
cs
les
outsb
push
arpl
je
or
or
or
or
or
or
or
or
or
or
or
or
pop
enter
add
sub
lods
cmp
mov
daa
push
cmpl
mov
leave
into
daa
jmp
mov
cmc
dec
lret
add
xchg
sti
xor
divl
mov
xchg
push
xor
movsb
in
lcall
out
shll
sahf
shll
shll
xchg
sarl
nop
sarl
xchg
sarl
sarl
mov
cmpb
push
adc
mov
cmpb
push
adc
mov
test
icebp
push
push
testb
testb
sbb
add
movsl
mov
cmp
cmpsl
dec
lock
fmulp
fs
mov
enter
pop
hlt
call
enter
pop
cli
call
lret
out
scas
outsl
clc
leave
insb
add
aas
subl
adc
mov
xorl
adc
out
adc
out
adc
out
adc
mov
mov
and
adc
out
adc
cltd
sbb
int3
cltd
sbb
lret
addl
lea
enter
add
adc
cltd
adc
les
adcl
cltd
adc
adc
cltd
pop
orl
xchg
ficomps
cltd
adc
cltd
or
ficompl
popf
adc
cltd
jae
cltd
add
aam
add
rcrl
call
andl
adc
cltd
jp
and
in
adc
cltd
jl
and
out
adc
cltd
jle
cs
adc
cltd
jo
sub
loop
in
jb
sub
in
jecxz
je
ss
adc
cltd
push
adc
cltd
push
xor
cld
adc
cltd
insb
xorl
adc
cltd
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
outsb
cmpl
lock
cltd
pusha
andl
js
mov
lret
negl
mov
popf
adc
out
adc
out
adc
xchg
adc
out
adc
out
adc
out
adc
jmp
mov
out
adc
out
adc
out
adc
jecxz
mov
jne
jnp
in
mov
ja
jns
out
into
cltd
imul
add
cltd
insl
addl
std
adc
cltd
outsl
addl
call
cltd
popa
orl
icebp
adc
cltd
arpl
ret
orl
cmc
adc
cltd
orl
notl
ficomps
leave
adc
cltd
pop
adcl
cmp
xchg
and
out
push
sub
fists
jecxz
fisubl
cmpb
sub
in
jne
cmp
dec
or
stc
fildl
cs
rorl
xchg
pop
inc
sub
inc
jo
xchg
ss
sub
dec
ret
aaa
out
xor
cltd
inc
xorl
mov
adc
cltd
mov
xor
es
cmp
sbb
and
cmp
xchg
sbbl
push
js
rolb
scas
xchg
mov
fidivs
push
inc
shrb
pop
mov
das
mov
or
xorl
and
sbb
pop
icebp
in
inc
loope
push
test
dec
sub
inc
xchg
dec
lea
pop
pop
and
and
cmpsl
sbb
sbb
movsl
sub
jge
in
enter
cwtl
add
push
test
hlt
sub
cltd
sub
or
mov
pop
sbb
mov
and
icebp
mov
cmp
jg
stos
sub
adc
lods
inc
loop
bound
pop
scas
and
pushf
and
sbb
or
or
or
or
or
or
or
or
or
or
or
or
sbb
shrb
jge
pop
lea
and
sub
insb
sbb
sbb
pop
cmp
sub
loop
loopne
lahf
pop
sbb
subb
popa
sub
inc
lahf
sbb
rolb
push
sbb
and
mov
xchg
sbb
sbb
lcall
push
inc
mov
imul
std
and
shll
sbb
sbb
mov
jge
jge
inc
sub
ds
lods
dec
jnp
cmp
push
test
jmp
mov
mov
lea
pop
in
sub
dec
shrl
out
push
sub
inc
push
pop
shll
and
push
jmp
push
lcall
pop
into
lods
stos
jecxz
popa
stos
lcall
and
and
leave
das
cmp
popa
jmp
je
pop
add
aad
inc
cmp
mov
popa
repz
fwait
add
adc
pop
cmp
sbb
pop
and
test
mov
call
cmp
movb
xchg
fldenv
outsl
lret
pop
iret
mov
icebp
push
xchg
addr16
lock
add
xor
jbe
outsb
arpl
mov
test
popa
movsb
add
rorb
pusha
add
and
lret
adc
mov
popa
ror
fimuls
lahf
in
push
add
jp
xchg
js
out
stc
daa
ds
loopne
hlt
mov
sub
mov
popf
jmp
shlb
push
movsb
mulps
cli
xlat
xchg
pusha
stc
cs
scas
mov
test
xchg
xchg
rep
std
jg
repz
jb
sbb
in
pop
movb
xor
pusha
mov
push
adc
gs
pop
or
pop
jg
jp
add
push
jno
sbb
mov
pushf
mov
xchg
dec
gs
mov
and
lcall
sbb
pusha
pop
ret
xchg
and
shr
xor
sbb
or
ljmp
mov
scas
aam
xor
pop
mov
jb
sti
in
sub
fwait
repnz
dec
push
sbb
fcmovb
in
shlb
test
or
mov
push
movsl
mov
gs
xchg
ja
mov
and
cli
pop
test
xchg
mov
cld
mov
xchg
out
insb
jb
pusha
mov
lods
xchg
push
sub
mov
mov
test
pop
xchg
sub
inc
lods
pusha
jnp
adc
pop
xor
fldt
xor
call
jge
stc
pop
std
add
dec
xchg
inc
outsb
mov
daa
mov
ret
arpl
adc
mov
pop
push
xor
jbe
sarl
sti
add
or
rol
or
lea
pusha
aas
fdivl
mov
adc
jge
pop
pusha
push
iret
add
mov
in
je
xchg
jnp
outsb
or
pop
repnz
cmc
dec
scas
mov
sbbb
js
mov
fmull
addr16
lods
xchg
jge
fldcw
and
push
aam
mov
push
pop
add
les
fildll
fcmovu
mov
repz
fadd
ret
out
lcall
ja
push
je
sbb
pop
ds
sub
jge
icebp
adc
das
stos
xchg
test
jp
fcompl
mov
sub
into
imul
dec
iret
jp
push
shrl
jmp
pop
jo
sbb
cmpsl
dec
mov
mov
imul
dec
add
adc
daa
adc
cld
pop
fsubl
out
cld
jge
and
stos
test
sarl
mov
repnz
std
cmp
repz
outsl
imul
stc
push
push
outsb
rcl
test
inc
inc
hlt
ss
cmp
mov
push
dec
or
pop
cmpsl
js
jbe
xchg
add
scas
and
sahf
push
pop
pushf
loope
icebp
fcmovnu
mov
test
jbe
in
outsb
notb
out
rcrl
stc
pmaxub
je
adc
loopne
out
inc
sbb
pop
fprem1
repz
arpl
lcall
dec
mov
jle
lds
xchg
jl
inc
cmp
adc
fwait
jno
sub
mov
imul
arpl
addr16
xchg
dec
mov
mov
enter
dec
pop
enter
insb
fisttpl
sub
push
pushf
icebp
testb
push
shr
cli
sbb
xor
cs
in
adc
notb
hlt
mov
xor
pop
mov
or
mull
push
movsb
sbb
xlat
or
enter
ficoms
leave
mov
iret
mov
lret
lds
jae
and
pop
or
or
push
roll
jae
bound
jo
mov
ljmp
out
in
cwtl
dec
pusha
inc
stos
push
imul
loop
loopne
lahf
dec
sbb
mov
imul
lods
pop
and
push
stos
inc
gs
and
test
test
inc
pop
mov
inc
push
and
aas
jg
mov
mov
mov
pop
cs
jae
and
lcall
add
sbb
les
mov
shll
dec
testl
fstpt
adc
sub
dec
pop
xlat
aam
outsb
sbb
cmpsb
sub
push
adc
mov
mov
fiaddl
aas
mov
sahf
pop
push
pop
repnz
outsl
mov
pop
sbb
leave
push
or
or
or
or
or
or
or
or
or
or
or
or
xor
mov
sub
cmpsl
je
insl
into
add
xor
jg
xchg
popa
mov
add
xor
xchg
scas
jns
mov
sbb
xor
add
pop
mov
sahf
sub
dec
andb
inc
or
leave
fdivrl
push
xor
sub
in
pop
add
push
loope
mov
push
rcrl
push
inc
lds
xor
xchg
jl
push
add
cmpl
adc
xchg
pop
insl
cmpsb
leave
cs
push
cli
sub
mov
pusha
shll
mov
mov
dec
sbb
mov
fimuls
xchg
iret
mov
push
out
mov
add
xchg
roll
sub
ret
jne
mov
bts
scas
dec
mov
dec
loop
push
or
push
cmp
push
in
xchg
push
inc
jae
jb
jle
mov
cmp
jb
inc
loope
aad
mov
sub
aam
lret
outsb
xchg
adc
pop
mov
dec
sub
call
rolb
stc
or
std
pop
jecxz
pop
fsub
jnp
pop
jbe
push
sub
dec
sbb
inc
iret
jl
xchg
push
jb
and
mov
sahf
inc
cld
icebp
sarb
dec
push
mov
sub
jge
xchg
aas
sbb
dec
sbb
jmp
xlat
arpl
jno
ljmp
sbb
sub
and
outsb
mov
testl
imul
push
into
mov
aaa
das
roll
pshufw
inc
stc
mov
stc
jo
mov
mov
call
jecxz
pop
lock
jo
push
pop
movsl
movsb
push
add
shl
push
push
push
xchg
sbbb
and
or
or
or
or
or
or
or
or
or
push
js
push
pusha
mov
pause
xchg
push
not
inc
or
mov
sarb
fs
sahf
jbe
les
adc
sti
sub
popf
sbbb
push
test
out
movsl
insb
sub
into
lock
adc
xchg
jns
test
pop
sub
dec
int3
bound
add
xor
mov
ljmp
add
popa
add
loope
or
push
pop
xor
push
lret
je
das
lret
movsb
out
cmp
mov
lds
and
mov
jbe
icebp
das
test
mov
add
daa
mov
or
mov
mov
mov
repnz
inc
sbb
xchg
int3
addr16
dec
add
adc
lahf
xor
xchg
rcll
mov
push
sbb
sbbl
cmp
push
xlat
add
in
xor
jns
cmp
testb
test
add
add
test
cwtl
sbb
mov
lds
out
repz
mov
and
movsb
mov
dec
push
cwtl
stos
push
adc
cwtl
add
jle
xchg
pop
ss
mov
mov
push
fwait
add
fmuls
dec
inc
xchg
lcall
stc
out
mov
int
push
sub
sub
clc
mov
add
stc
adc
jmp
jo
adc
push
add
test
repz
mov
pop
into
or
loopne
cmpsl
pop
dec
scas
stc
inc
rcr
scas
sbb
inc
push
aam
sbb
dec
fsubrp
pusha
pop
mov
loope
rcr
sub
movsl
lds
jg
and
icebp
shr
enter
sub
push
cmp
in
lods
pop
repz
int3
xor
push
push
sbb
pop
or
or
or
or
or
or
or
or
or
or
or
or
push
and
data16
inc
mov
adcb
cmp
fcoms
xor
mov
test
cld
mov
mov
nop
movntq
out
dec
daa
mov
enter
insl
leave
mov
loope
jge
adc
cli
inc
lret
jmp
sub
xor
in
lods
bound
ja
mov
nop
test
std
sub
xchg
sbb
jo
and
xchg
in
std
inc
aaa
jne
mov
jb
pop
inc
jne
shrb
lahf
jnp
cmpsl
jo
add
xor
bnd
dec
push
mov
push
push
xchg
cs
xchg
jg
add
mov
clc
push
sbb
pusha
ret
add
in
xchg
insb
pop
pop
out
jmp
int3
jae
fistl
sbb
and
add
pop
fstps
fstps
cmp
pop
push
fs
cmp
mov
pop
pop
inc
mov
jp
pop
mov
inc
xchg
test
jo
in
mulb
xor
std
fldenv
imul
nop
lock
cmp
dec
mov
mov
js
sbb
loopne
outsb
aam
or
pop
or
pop
push
pop
ret
mov
mov
mov
xchg
sarl
push
dec
adc
pushf
call
dec
cld
mov
test
mov
cmp
xor
sbb
out
and
cmp
push
jbe
in
test
cmp
pop
cmp
mov
push
outsl
stc
push
daa
cmpsl
in
sbb
cs
inc
dec
rcrb
mov
mov
push
mov
das
ret
imul
adc
cli
fistps
cmp
in
jp
dec
jmp
popf
in
sub
push
lcall
mov
xchg
adc
pop
fldt
or
xchg
dec
notb
outsb
cmp
cmp
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
lds
scas
leave
call
adc
and
sbb
insb
sbb
jns
adc
xor
sbb
jbe
add
fnstcw
adc
xor
dec
sti
adc
pop
adc
mov
or
or
stos
dec
add
adc
push
xchg
loopne
adc
dec
sub
ja
mov
xor
fmull
aas
lret
or
fnstenv
les
ficompl
mov
mov
popfw
stc
xor
sub
pushf
mov
in
jno
cmp
inc
mov
sub
xor
popa
pop
fwait
and
fsub
outsb
dec
stos
jg
outsb
test
cmpsl
inc
mov
cmp
mov
push
fs
sbb
inc
insb
xchg
fidivl
inc
cmc
and
and
adc
cmp
jle
xchg
in
mov
lret
fwait
pop
imull
push
or
adc
cmp
insl
fadds
and
pusha
and
add
mov
int
cmpsb
ret
jnp
push
mov
pop
pop
enter
rolb
push
xor
mov
mov
xor
das
inc
xor
sahf
sbb
arpl
subb
mov
add
and
test
or
inc
enter
mov
in
jp
jne
imul
adc
loopne
adc
sarl
fidivl
std
gs
jecxz
add
mov
out
xchg
push
xor
loopne
pop
cwtl
sbb
adc
lock
shlb
loopne
sub
pop
adc
mov
repz
pop
add
ret
and
mov
or
push
cmp
outsl
aad
in
addr16
movaps
mov
jno
sti
pop
into
cltd
rorl
fisttpl
or
or
or
or
or
or
or
or
scas
mov
fs
gs
or
and
loopne
fidivl
ret
jo
or
out
jae
outsb
rorb
insb
daa
jo
inc
insb
mov
bound
cld
mov
popf
add
push
push
mov
aaa
repz
xchg
lret
in
mov
jno
or
mov
cmp
arpl
pop
dec
mov
inc
stc
sub
sbb
adc
es
outsb
cmp
push
jecxz
add
mov
fidivrl
scas
push
in
and
lods
repz
jge
xchg
xor
inc
in
and
sub
sbb
fucomip
fdivrl
jle
lret
sbb
xchg
scas
pop
add
push
push
push
das
imul
cmpsl
lret
out
aaa
push
push
sahf
lcall
ret
mov
sbb
sarl
mov
fildll
out
and
sbb
xchg
adc
addr16
cltd
imull
xchg
push
fidivl
in
add
je
pop
sti
and
inc
cmpsl
cmpsl
cmp
mov
push
or
aam
xor
inc
or
imul
mov
fadds
dec
jb
jo
mov
jb
aad
int
lods
dec
incl
lea
pop
or
cmp
push
or
jl
mov
iret
std
cli
jb
data16
ljmp
dec
or
imull
mull
mov
dec
cld
das
jl
arpl
stc
pop
sbb
fdivrs
pop
add
adc
mov
mov
sarl
std
push
dec
xchg
lods
jg
addr16
sbb
mov
shl
pop
scas
mov
addr16
cmpb
je
outsb
xchg
insl
int
add
push
lcall
xor
mov
inc
dec
sbb
ja
sarl
jmp
aas
xchg
push
or
lcall
pushf
xor
lock
or
or
or
or
or
or
or
or
or
or
or
or
or
or
jae
popa
mov
cltd
or
out
cmpsb
jl
mov
shlb
xchg
rolb
dec
sub
loopne
call
mov
outsb
cmp
mov
insb
imul
lcall
cwtl
ret
fs
add
rcr
es
mov
xor
push
push
pop
enter
insl
pop
les
inc
sbb
push
fdivrl
cwtl
js
mov
sub
inc
mov
test
es
mov
push
xor
aas
sub
outsl
leave
jge
xchg
push
out
fdivrs
sbb
dec
dec
lock
and
std
xchg
mov
sub
mov
push
xchg
aas
repnz
mov
inc
xorl
jo
push
outsl
and
dec
aad
test
and
or
sbb
add
mov
test
and
push
add
cmpsb
dec
cmp
pop
cwtl
inc
scas
sub
or
bound
insl
xor
push
mov
insl
sahf
outsb
mov
pusha
sbb
mul
cld
lds
mov
cmc
jns
aas
flds
outsl
adc
sub
testb
ds
rcll
xor
popa
lret
adc
out
iret
leave
popa
adc
add
jle
shl
in
fisttps
xor
xchg
icebp
scas
loop
and
sti
sub
adc
loope
sbb
daa
lock
pushf
ret
test
mov
lds
xchg
ret
mov
cmp
fcmove
cltd
pushf
and
leave
xchg
repnz
cmp
loopne
push
or
dec
sub
sbb
call
aad
out
scas
dec
jle
or
dec
mov
sub
push
or
and
dec
repz
jge
add
dec
mov
xchg
shrl
mov
or
or
or
or
or
or
or
or
or
or
or
or
mov
cmpsl
push
inc
lods
insl
pushf
les
ljmp
inc
gs
movsl
cmp
sub
jle
mov
int3
test
and
mov
loope
loopne
add
adc
sti
push
push
xor
sbb
fcoms
insl
and
mov
mov
pop
xchg
dec
hlt
call
fiadds
jbe
stos
test
sub
mov
cwtl
lds
iret
dec
mov
mov
gs
stos
sbb
out
pusha
mov
add
inc
shl
cli
mov
cmp
scas
movsb
mov
movsl
iret
cmpsl
data16
notl
leave
sub
add
into
pshufw
enter
sbb
push
divb
adc
ss
aad
dec
and
cmp
xor
jle
mov
cmp
jle
push
shr
jne
adc
and
mov
sub
fists
dec
pop
xchg
sbb
mov
fucom
sti
cmp
iret
iret
mov
jns
add
in
int
les
mov
aad
xor
jno
pop
int
repnz
movb
jl
pop
add
add
inc
sbb
lcall
out
inc
or
loop
cmpl
xchg
jae
sbb
inc
in
lock
sti
psrlw
sbb
arpl
cmp
mov
sub
in
hlt
ljmp
mov
adc
mov
sbb
outsb
cmp
sbb
adc
mov
add
in
jns
add
subb
xchg
jbe
fwait
sub
movsbl
add
std
push
lret
dec
or
mov
shl
cmp
enter
or
and
adc
arpl
mov
or
or
or
or
or
or
or
or
or
or
or
push
jecxz
and
pop
jmp
xchg
test
ljmp
mov
cmp
or
lcall
xchg
dec
outsl
push
mov
xchg
ds
pushf
xchg
inc
cmpsl
clc
sti
daa
test
aas
std
mov
arpl
cmp
xlat
jge
push
jo
lret
xchg
fadds
fldenv
lret
aaa
mov
pusha
cmpsb
adc
push
movsb
out
sbb
lods
cmpsb
rclb
dec
pop
mov
mov
sahf
loop
or
out
pop
adc
aaa
test
dec
jae
xchg
mov
pop
insb
pop
add
outsl
dec
add
decl
mov
int
mov
jb
jp
and
jae
pop
push
add
cmp
add
aaa
mov
inc
adc
cmp
xor
cmpsl
shlb
jecxz
push
je
ficoml
dec
cmp
enter
dec
and
and
xchg
inc
outsb
pop
sub
les
pop
xor
add
add
movsl
data16
pop
loopew
cmc
ljmp
cmp
inc
in
nop
sub
pop
fwait
cmpsb
cmp
fdivrs
mov
stos
out
sbb
hlt
jmp
nop
aaa
pop
push
or
ss
test
imul
lahf
out
clc
mov
rol
mov
xor
xchg
aas
insb
pop
lods
cli
fucomp
rcr
cmp
mov
mov
xchg
les
sbb
in
or
enter
mov
movsb
scas
dec
sub
js
jns
fisubrl
dec
push
mov
in
orl
pop
filds
xor
add
stos
mov
xor
mov
inc
data16
sbb
cmp
jl
lea
ja
aad
mov
loopne
xchg
push
fs
data16
sub
lock
out
xchg
inc
dec
divb
lds
or
or
or
or
or
or
or
aas
addr16
push
pop
mov
aad
js
xor
iret
cmp
adc
in
ret
sub
lock
aaa
pushf
or
iret
mov
imul
jno
push
testl
std
incb
xchg
push
xchg
rorb
mov
sbb
stos
mov
mov
js
xlat
aaa
xor
xchg
cmp
mov
adc
cmpsb
je
cmp
out
lea
test
ja
dec
push
xchg
jns
jns
sub
or
add
mov
inc
lahf
inc
mov
ja
xchg
call
popa
jne
test
scas
mov
adc
mov
pop
cltd
into
xor
mov
jecxz
rcl
jno
or
xchg
jae
adc
add
repz
cmp
cmpsl
leave
mov
les
cmpl
mov
inc
sbb
mov
inc
lock
mov
sub
mov
daa
inc
stc
pop
out
mov
add
inc
hlt
fisubrl
xchg
push
adc
pop
cmpsl
mov
fcoml
pop
mov
xchg
daa
ds
out
int3
add
mov
xlat
inc
movsb
out
inc
add
aas
mov
mov
shll
push
aam
pushf
mov
add
add
mov
fnstenv
xor
adc
sbb
testl
or
sbb
sbb
mov
into
mov
mov
dec
push
sub
sub
xlat
std
mov
out
aam
mov
dec
aaa
pop
dec
jmp
lcall
aas
rcr
jno
push
mov
push
stc
jns
and
mull
pop
and
mov
repz
movsb
mov
stc
jp
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
fwait
aas
out
or
and
sub
shr
dec
test
fstl
xchg
lret
mov
loope
pop
cld
mov
mov
add
arpl
pop
fs
xchg
stos
lret
repz
or
in
fs
dec
es
xchg
into
push
or
clc
inc
repnz
mov
jmp
jmp
cli
sub
testl
fstps
sub
pusha
jmp
aaa
ja
xchg
jge
sahf
sbb
loope
pop
shrl
push
and
fcompl
push
lods
nop
mov
mov
xor
shrb
jle
or
dec
jns
mov
sbb
lret
cmpsl
adc
pop
dec
push
test
add
cltd
in
xor
lock
xlat
lret
pop
ret
xor
addb
xchg
out
cld
pop
sub
subl
push
push
test
sbb
insl
shll
stos
icebp
push
and
fisubrs
add
hlt
pop
je
inc
cs
fstl
mov
pop
and
fcmovne
stc
fwait
dec
pusha
push
iret
jne
sarb
push
mov
pop
repnz
ljmp
inc
add
lcall
xor
call
aad
cmp
les
inc
or
je
lcall
mov
xchg
add
sbb
mov
mov
jo
add
insb
fsubrs
jae
xlat
movsb
ds
cli
cmp
cmove
or
push
jp
movsl
sbb
subl
push
clc
test
call
test
xchg
cmpsl
adc
push
enter
sbb
adc
dec
and
sbb
fistps
ljmp
fildll
push
cltd
ss
xchg
inc
sbb
into
pop
dec
pop
jecxz
and
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
and
push
xlat
hlt
xchg
pop
add
scas
fisubrs
sub
jbe
pop
es
push
icebp
andl
ret
js
sub
pop
in
daa
mov
pop
out
xor
mulb
cmp
cmpsl
jbe
xchg
and
pop
cmpsb
icebp
mov
mov
not
mov
xchg
clc
insl
lret
add
push
adc
push
pop
arpl
leave
pusha
loop
push
out
add
mov
mov
into
pushf
loop
out
pop
addr16
jmp
stos
das
ljmp
fsubrl
insb
imul
cld
sbb
pop
push
mov
nop
ja
pushl
mov
leave
inc
inc
mov
xchg
std
insb
pop
rcrb
test
into
pusha
or
out
push
loop
cmp
adc
cmp
sub
push
out
bound
pop
mov
lahf
bound
xorl
xor
push
insb
orl
and
jo
test
lcall
ja
pop
add
ja
out
cmp
sub
lret
out
cs
adc
aad
mov
push
sub
scas
jle
clc
das
push
xor
and
arpl
push
pop
xor
mov
xor
scas
mov
inc
dec
lcall
lods
cmpsl
repnz
cld
inc
mov
dec
pop
or
nop
mov
mov
xor
jmp
mov
push
mov
lret
inc
subb
outsb
sahf
xchg
add
sub
movsb
icebp
rdtsc
inc
cmc
fistps
call
adc
sub
push
enter
push
nop
push
nop
jmp
movsb
or
and
enter
sub
add
inc
push
adc
js
adc
xchg
cmp
fsubr
pushw
lret
push
mov
shrl
hlt
xlat
ret
setno
scas
jbe
rcrl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
call
lock
pop
popa
xor
pop
mov
push
push
stos
dec
dec
shlb
add
or
mov
aad
cmp
cmp
pop
mov
aad
andl
push
or
adc
bound
xor
push
clc
or
mov
in
or
rcrb
or
mov
jg
fwait
xor
jns
push
aam
std
pop
iret
jbe
icebp
loopne
test
xor
push
movsl
sbb
sbb
outsl
shll
rcll
lahf
jae
stc
movsb
mov
and
fmull
mov
in
addl
mov
xchg
fcoml
test
in
jo
jmp
inc
cmp
fisubs
rorb
into
adc
rcll
insl
jmp
push
lahf
push
add
gs
pop
mov
xchg
in
xorl
dec
dec
or
out
addr16
push
cwtl
repz
imul
mov
ret
cmc
out
push
dec
lods
loop
sub
fwait
fwait
sub
ljmp
out
outsl
sbb
repz
test
sbb
scas
cmpsb
leave
mov
mov
movsb
mov
inc
jb
cmp
int3
jle
jae,pt
iret
and
add
cld
repz
adc
add
int
call
bound
jp
inc
dec
imul
aas
pop
cld
adc
dec
iret
and
lods
jns
lds
clc
and
xchg
inc
cmp
push
xchg
jbe
popf
mov
add
jg
rol
add
and
es
push
cld
fldt
pop
and
ljmp
sub
or
stc
lods
std
lds
mov
sti
pop
xor
insb
mov
adc
mov
mov
int3
push
inc
lock
test
or
xor
jo
inc
out
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
sbb
sub
dec
push
leave
xor
sar
pop
mov
ror
push
fs
adc
int
cmp
insb
pop
pop
inc
cmc
js
bound
ret
push
in
adc
cmp
test
lcallw
push
pusha
subl
push
pop
jl
xlat
xchg
out
cmp
fisttpll
sbb
dec
lods
push
cmp
add
jns
fsubrs
es
les
stos
loope
dec
sub
enter
mov
outsb
pop
mov
add
aas
loopne
iret
pop
adc
dec
std
mov
xor
inc
mov
loope
pop
push
xchg
test
imul
call
shll
and
sub
pop
test
lock
sbb
xchg
jns
outsl
sti
in
rclb
lret
mov
jle
lock
pop
push
repnz
pop
fnstcw
shlw
mov
cmp
test
aam
inc
xor
mov
pop
and
pop
add
or
scas
in
add
xchg
hlt
jnp
sbb
lret
pop
xchg
xchg
loopne
outsb
adc
subl
iret
gs
or
stos
mov
call
sbb
dec
pmulhw
out
push
jbe
outsb
test
fldenv
xor
fnstcw
sub
insl
adc
xor
aaa
dec
bswap
push
icebp
repz
movsb
and
sbb
jnp
aas
out
adc
cmp
out
jge
jb
sahf
jg
or
dec
push
cmp
rolb
into
mov
daa
adc
push
add
ss
aaa
add
add
dec
mov
test
shll
dec
sbb
sbb
or
imul
das
ficomps
mov
in
nop
loop
ret
ror
jbe
push
lock
mov
push
add
sbb
add
inc
lret
popl
imul
cmpl
ret
jecxz
aam
and
dec
add
jbe
xchg
fbld
jmp
pop
push
jnp
filds
mov
jg
adc
mov
into
xor
hlt
push
dec
es
sub
xchg
mov
subl
lret
pusha
pop
test
cwtl
scas
stc
xor
aaa
push
out
jno
stc
or
cmp
inc
in
idivl
push
cs
mov
enter
ja
sbb
repz
scas
mov
out
aas
insl
lret
es
mov
loopne
out
pop
push
xchg
clc
pop
mov
ja
call
or
stos
imul
clc
dec
jbe
jbe
jns
gs
push
sahf
outsl
jmp
pop
lods
xor
add
xchg
cltd
les
sbb
adc
jo
mov
leave
mov
mov
mov
push
push
dec
inc
jo
sub
in
jb
sub
outsb
popf
in
cld
dec
push
mov
and
daa
pop
mov
test
ds
scas
jns
push
jbe
xchg
or
scas
scas
jmp
movsl
shrb
insb
push
or
jo
or
inc
dec
and
xor
lods
sbb
fidivrl
inc
es
arpl
insb
je
mov
adc
js
push
leave
orb
dec
mov
xchg
fmull
cmp
push
inc
pop
in
push
dec
inc
inc
mov
adc
sub
xor
insb
lods
inc
repnz
adcb
add
dec
insb
in
and
jb
lock
sub
sub
addr16
sub
add
hlt
or
sbb
adc
adc
arpl
fldcw
sbb
mov
pop
xchg
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
mov
mov
sub
testb
and
cmp
fwait
stos
cmpl
data16
mov
dec
push
mov
xor
bound
in
dec
icebp
jge
sbb
divb
dec
push
sahf
xchg
sbb
mov
lea
jl
adc
add
cs
push
xchg
push
ja
jnp
test
cli
mov
ja
push
divl
jae
seto
int
lods
add
jmp
scas
int
fsubr
inc
rcrb
sub
out
sub
in
push
mov
pop
faddl
test
nop
je
jle
fnsetpm(287
dec
sarb
mov
pop
jecxz
sub
dec
dec
mov
dec
lods
shl
lods
movsl
lods
push
push
scas
popf
cmp
jo
or
push
and
jle
ret
push
out
push
sti
aam
clc
fldcw
ja
mov
lods
pusha
mov
in
dec
push
xchg
mov
jmp
shll
cmp
pop
lods
clc
jmp
push
mov
cmp
mov
and
ret
pop
mov
lods
leave
popa
or
mov
pop
dec
mov
push
jmp
or
shlb
adc
clc
leave
int3
dec
mov
ds
jo
jg
test
notb
adc
outsb
outsb
cmpsl
loope
push
xchg
inc
repz
sub
jb
jno
cwtl
mov
mov
or
mov
mov
int
sub
inc
xor
mov
push
adc
data16
sbb
adc
mov
pusha
push
sbb
mov
xchg
or
pop
fadd
xchg
mov
inc
sahf
adc
insl
je
xor
sub
call
shll
icebp
pop
and
mov
hlt
add
adc
in
or
or
or
or
or
or
or
or
aaa
scas
and
and
xorb
push
sbb
imul
aaa
mov
pushw
ljmp
cwtl
cwtl
add
cmp
pop
inc
mov
out
adc
in
sbbb
outsl
lods
xlat
insb
jne
xchg
xchg
jmp
stos
aas
nop
aad
xchg
jb
inc
data16
jp
xchg
and
lcall
pop
sbb
bound
inc
idivb
jge
pusha
out
and
lcall
pop
inc
sar
popa
int
mov
xor
fidivl
mov
iret
and
sbb
and
jo
clc
ffree
adc
stos
je
add
stc
push
loop
scas
clc
adc
push
test
in
xor
cli
psubsw
enter
sub
ja
lods
hlt
cmp
gs
inc
sub
rcrb
repz
fdivr
lock
xor
mov
jns
mov
dec
push
sub
pushf
mov
addr16
test
jp
push
arpl
mov
add
mov
jae,pn
or
lods
sahf
jnp
and
or
mov
adc
cmc
jmp
test
push
cwtl
inc
mov
mov
sbb
adc
test
cs
mov
mov
loop
aaa
inc
insb
mov
lret
pop
jnp
std
lret
or
movsl
cltd
pop
pushf
shrl
ljmp
add
push
and
xchg
push
sbb
lea
mov
lret
add
jb
add
cmp
outsb
jo
arpl
jge
push
pop
adc
push
xchg
adc
adc
xor
clc
scas
mov
xorb
adc
pushf
sahf
loopne
xchg
insl
fcompl
inc
jmp
cmp
sub
add
je
xor
cmc
fiadds
jns
fs
mov
jecxz
enter
or
or
or
or
or
or
or
or
or
or
or
adc
mov
and
xor
je
inc
inc
xchg
call
mov
mov
jb
xor
cltd
xchg
insl
lea
sbb
sub
call
cli
pop
jns
pop
int3
add
inc
jb
pop
std
test
mov
and
je
scas
imul
arpl
repz
vcvtss2si
xor
mov
inc
push
mov
lcall
mov
out
imul
mov
xlat
cmp
adc
fisubrl
xchg
je
ret
dec
iret
and
and
mov
mov
pop
popf
mov
add
dec
scas
push
fst
jecxz
call
inc
inc
lds
push
nop
call
mov
cwtl
popf
iret
hlt
xchg
cld
cmp
jo
rcrb
sub
out
dec
sub
dec
mov
mov
mov
iret
mov
sbbb
ss
jmp
les
xchg
adc
sarl
lret
mov
add
clc
dec
inc
adc
clc
iret
sbb
dec
iret
mov
stos
xor
cli
add
inc
mov
push
pop
mov
js
push
mov
adc
cmp
sbb
lret
or
cmp
jle
fcom
sbb
lods
aad
sbb
roll
jb
enter
out
loopne
cmpb
andb
dec
jg
push
push
nop
mov
fs
js
adc
inc
bound
cmc
add
test
lahf
add
inc
push
sbb
popf
jl
imul
lea
push
xchg
push
and
push
xor
xor
adc
dec
mov
ud1
ds
bnd
movsb
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
jp
jg
movsb
xor
mov
aas
push
in
push
cmp
pop
fucom
push
loop
and
rorl
fwait
sub
aam
jb
daa
xchg
in
xor
push
sbb
dec
mov
inc
insl
idivl
adc
pop
cli
sbb
cmp
xorl
xchg
sbb
je
cmp
movsl
mov
divl
lret
div
xchg
das
loope
xchg
jae
repz
enter
aam
pop
in
dec
pop
sub
fstpt
mov
or
jb
xchg
in
sbb
mov
sbb
inc
hlt
cs
mov
cmp
inc
pushf
jns
insb
aam
imul
out
stos
xor
and
sti
movsb
data16
pop
sbb
lret
jge
sub
in
pop
pushf
test
dec
hlt
sbb
mov
addb
mov
cmp
or
add
call
sub
orb
jecxz
xchg
loopne
xchg
call
jmp
xchg
and
pop
js
xor
add
jl
dec
mov
jno
push
jle,pt
repz
loope
sbb
ss
scas
jb
or
push
cmp
int3
cmp
xchg
cmp
test
mov
mov
cld
push
push
shll
and
push
ds
rorl
jmp
inc
dec
shll
xchg
push
fdivl
cli
push
xchg
std
fcmovu
sbb
loop
mov
into
inc
sub
push
outsl
mov
jge
clc
movsb
in
lahf
hlt
sbb
inc
mov
inc
inc
dec
pop
sub
and
sti
xor
add
in
mov
pop
and
xchg
or
cmp
mov
dec
adc
in
les
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
lret
mov
mov
nop
adc
in
int3
test
mov
cmp
and
add
adc
lret
outsl
push
hlt
jg
addr16
sbb
cmp
out
xchg
das
out
es
sub
cmp
stos
pop
popa
outsb
sbb
fisubrs
loopne
jmp
lcall
push
cmp
adcb
adc
sbb
dec
loop
mov
and
mov
xchg
inc
int
stc
out
sub
xchg
xchg
scas
dec
cmp
outsb
call
xor
bound
mov
push
nop
enter
jbe
pop
insl
push
and
jmp
push
nop
jbe
sbb
mov
jno
xchg
shrb
inc
jns
lock
aam
sub
jb
jns
mov
call
movsb
cmpsl
mov
ljmp
aas
mov
jo
es
and
and
icebp
mov
fcmovb
xor
sbb
cwtl
pop
out
and
shrb
push
xor
mov
fisubrs
push
push
push
nop
ret
push
lods
mov
js
sti
test
pop
cmpsb
cmp
inc
cmp
cmp
push
cmp
cmp
pusha
pop
sub
scas
lcall
dec
fwait
push
push
inc
add
shlb
xchg
push
mov
jmp
lea
fwait
dec
cli
cwtl
dec
lods
jmp
cmc
jno
cmpsl
adc
int3
mov
insb
aaa
cmp
lock
add
mov
xchg
daa
xchg
add
xor
or
movsl
pop
sub
in
pop
arpl
xchg
push
mov
sub
add
jne
test
aad
xchg
pop
in
std
adc
call
stc
les
fadds
xchg
xchg
sgdtl
stos
sbb
mov
mov
push
xor
aad
addb
dec
sahf
in
test
cmp
data16
dec
ja
pop
push
xor
dec
sub
in
adc
cmpsb
dec
and
in
insl
shlb
movd
dec
movsb
js
or
add
pushl
cmp
addr16
pop
jne
mov
cld
in
push
xchg
mov
call
in
jecxz
loopne
in
pop
ljmp
not
or
xlat
jbe
xor
jno
das
movsl
icebp
push
xchg
push
adc
sahf
outsb
bound
daa
js
jb
gs
cli
mov
fadds
xor
mov
lods
mov
ret
test
incb
add
sub
in
xchg
stos
ds
add
or
push
mov
push
xor
shrb
scas
jge
mov
fsub
push
mov
insb
pop
popa
push
stos
imul
xchg
adc
faddl
mov
xchg
daa
adcb
outsb
loope
pop
jg
adc
sub
fldcw
test
ljmp
repz
xor
dec
sbb
es
pop
inc
imul
aas
xor
push
jb
adc
cltd
xor
jp
scas
push
jl
cmp
in
repz
clc
mov
dec
and
jo
sub
add
sti
pop
and
mov
loope
lock
pop
cli
scas
ljmp
inc
ja
bound
into
out
jnp
lea
jmp
mov
rorb
pusha
or
jbe
cld
stc
data16
ret
pop
imul
jge
mov
out
aaa
push
jns
sbb
icebp
sub
mov
jl
sti
inc
xchg
lds
repnz
xchg
jb
aas
dec
out
sahf
bound
stc
push
cld
cwtl
push
mov
mov
adc
push
pushf
roll
push
dec
insl
cs
shrb
mov
scas
pop
sub
dec
lret
in
cmp
icebp
movsb
jnp
test
leave
sub
or
insl
enter
or
adc
lahf
xor
retw
cs
in
jae
cmp
mulb
sbb
repz
dec
cli
dec
pop
jns
jne
js
xor
fimuls
fdivr
shll
mov
pop
idivl
cmpsb
sub
sbb
pusha
or
pop
rol
rcl
push
iret
inc
jmp
xchg
stc
sbb
jo
cli
loopne
mov
shlb
insb
lock
ret
xor
outsb
xchg
fldt
leave
adc
lods
test
mov
mov
jne
hlt
xlat
sub
loope
mov
pop
inc
shrd
int3
clc
loopne
fsubrl
fisttpll
xor
fcoml
leave
or
mov
sbb
mov
and
push
and
enter
out
stc
outsl
xchg
addr16
lret
lret
lds
jmp
stos
jo
sub
fsubs
lea
or
stc
fildll
scas
cmp
mov
in
cmp
aaa
jl
jo
into
dec
cmp
in
jbe
nop
sbb
mov
leave
mov
jl
mov
mov
insb
jnp
fdivrs
mov
xlat
ljmp
pop
xor
adc
push
cld
or
out
movsl
cmp
icebp
add
cmp
addl
push
cmpsb
pop
aas
js
xchg
iret
rorl
mov
pushw
jno
nop
imul
dec
sub
push
lret
in
mov
movsb
push
xchg
adc
fs
rclb
jecxz
jmp
xor
adc
push
incb
xchg
jecxz
jl
lahf
test
sub
xor
mov
imul
call
mov
or
or
or
or
or
or
or
or
or
or
or
pop
push
push
movl
jae
xor
int
lret
stos
push
push
mov
jb
cmp
xor
shrl
inc
mov
repz
sahf
xchg
jmp
cmp
xchg
shl
jo
mov
cltd
fsubp
push
out
push
mov
sub
fistps
sbb
outsb
mov
dec
jp
es
pop
cmpb
je
mov
cwtl
push
pop
mov
push
enter
jl
cmp
mov
testb
in
mov
inc
cmp
mov
xor
dec
fstpt
xorb
xor
push
scas
dec
mov
pop
jge
andl
xlat
and
sbb
das
lahf
loope
mov
add
add
lcall
adc
xor
inc
add
add
add
sbb
add
add
add
add
add
adcb
add
nop
add
addb
add
sbb
add
add
add
add
add
add
pusha
add
andb
add
add
sbb
add
add
add
add
add
rolb
add
add
add
mov
dec
add
add
add
add
add
add
cmp
add
add
add
sbb
add
add
add
add
add
cmp
add
add
add
sbb
add
add
add
add
add
test
add
sbb
add
add
add
add
add
cmp
add
les
fbstp
pop
loopne
fwait
testb
mov
mov
dec
push
xchg
cmp
sbb
push
out
test
fadds
add
jne
xchg
push
inc
mov
movsb
adcl
sarb
std
enter
popf
test
mov
sahf
jg
fs
inc
bound
jecxz
add
ds
stos
test
adc
dec
test
xor
push
inc
mov
rorl
pop
sub
jp
loop
and
imul
inc
mov
mov
repnz
push
test
stos
out
mov
mov
cmc
scas
mov
cmp
adc
pop
dec
mov
icebp
fmuls
or
insb
fnstenv
in
sub
pop
jmp
adc
adc
mov
test
loop
jmp
scas
shrb
add
cs
pop
jle
arpl
push
or
fadd
shlb
inc
or
rcll
daa
and
in
mov
sub
cwtl
xor
cmpb
mov
icebp
testb
sbb
cld
and
push
addr16
clc
test
jp
ss
pop
clc
mov
iret
jno
mov
fs
sbb
out
xor
cmp
or
popa
imul
hlt
lods
mov
std
repz
push
jecxz
sub
push
inc
add
mov
out
mov
cs
jg
or
mov
mov
inc
add
cmpsb
xor
and
inc
mov
xor
aam
push
shrb
pop
push
sarl
addr16
fdivrp
xchg
jno
cld
add
int
out
test
dec
inc
imul
clc
imul
shlb
pop
ja
pusha
sub
xchg
shr
fcmovnu
mov
fstps
pop
lea
stos
cmpsl
adc
imulb
and
pop
ret
shl
and
roll
iret
int
nop
mov
xor
inc
adc
or
dec
int3
cmp
lahf
ds
ss
push
sbb
mov
loop
pop
mov
mov
fdiv
add
cli
sub
loope
xchg
jo
xchg
push
push
xlat
push
clc
push
mov
jb
mov
xor
out
jo
mov
sbb
les
mov
lcall
cmc
or
and
push
popl
orl
xor
pop
aad
out
in
mov
loopne
bound
ficompl
sub
into
push
fwait
and
loop
inc
mov
pop
add
jae
cmp
fmuls
cs
inc
icebp
pop
and
mov
jle
push
dec
jne
inc
pop
sarb
rcrl
or
jb
push
push
mov
push
cmp
outsl
in
jbe
lret
sub
inc
dec
jne
mov
xor
aam
cltd
jge
xor
inc
fcomip
push
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
add
sub
test
jmp
cmp
mov
test
shll
in
ret
sbb
data16
cmpl
inc
arpl
cld
sbb
leave
int
rcrl
in
add
jne
int3
mov
and
pop
mov
lock
stc
and
das
out
mov
lds
sbb
cmpsb
insb
inc
push
add
fcoml
aas
in
xchg
dec
push
or
sarb
sbb
xchg
outsb
jge
mov
in
jl
lods
jmp
ret
imul
sbb
sbb
mov
adc
xchg
fstpl
push
stos
lea
cmp
sub
jbe
ja
mov
add
xor
popf
stos
mov
pop
add
roll
or
and
inc
je
iret
mov
test
cmp
inc
xor
xchg
test
cmp
inc
dec
sub
sbb
sbb
fildll
mov
fcompl
jae
add
cmp
insb
pushf
pop
data16
cmpsl
dec
iret
scas
and
or
js
nop
and
movsb
lahf
mov
dec
fcomps
fidivrl
mov
jns
jmp
xchg
or
insb
call
pop
call
jmp
das
int
std
jge
mov
les
cli
inc
cli
popa
or
mov
cmp
sub
xchg
push
xor
imul
sbb
mov
wbinvd
enter
call
adc
mov
and
bound
mov
arpl
jb
jo,pn
push
or
sub
inc
mov
outsb
dec
std
mov
subb
xchg
sub
test
mov
ret
scas
or
or
or
or
or
or
or
or
xor
cmp
inc
fwait
mov
iret
inc
lahf
add
jecxz
adc
pop
or
repz
jl
mov
aad
out
xchg
mov
sbb
cwtl
addr16
mov
add
xchg
mov
mov
push
xor
cs
icebp
mov
jl
mov
inc
rcr
xchg
mov
pop
in
loopne
mov
push
insl
sub
mov
push
and
add
cmp
push
jl
jns
aad
and
ds
int
enter
jo
lea
sub
mov
mov
les
in
inc
cmp
sub
or
and
jmp
inc
xchg
pusha
add
mov
push
loope
xor
adc
push
jmp
mov
and
mov
lods
push
and
sub
stos
sbb
cmc
push
inc
mov
push
cld
or
aad
std
les
adc
lea
mov
mov
sbb
add
aas
jnp
das
and
jae
cmp
xor
std
dec
jno
pop
or
loope
data16
jne
mov
movsb
cmp
lahf
in
pushf
fidivs
xlat
sbb
or
jnp
xchg
mov
jp
out
adc
lods
loop
or
mov
mov
xchg
inc
sbb
andl
mov
cli
mov
push
and
sub
xchg
cmp
mov
cwtl
sti
insl
jns
add
inc
sub
bound
mov
pop
ficoml
negb
sub
add
mov
xchg
xor
cld
pop
sub
or
test
cwtl
icebp
jae
sub
push
jmp
mov
push
jno
inc
out
push
sbb
inc
adc
xchg
pop
add
sbb
mov
mov
adc
ss
xchg
dec
and
lret
imul
cmp
imul
push
pop
mov
lret
push
das
out
ja
in
jmp
sbb
mov
call
aaa
bound
bound
in
ds
xchg
int
xor
ror
fdivrl
idivl
stc
andb
inc
insb
jae
popa
movsb
decb
movb
jns
fistpl
cmp
aaa
vmwrite
into
or
adc
in
push
lret
js
dec
cld
xchg
loop
icebp
sub
push
mov
pop
lock
inc
sbb
add
rcrb
icebp
cmpb
mov
or
fisttpl
dec
vmread
inc
js
inc
mov
cli
pusha
adc
fcomps
or
xor
adc
movsl
imul
add
cli
dec
inc
fdivs
nop
outsb
int
iret
nop
lahf
lods
pop
lcall
jne
rcll
or
cmpsl
aas
filds
pop
out
push
lret
pop
dec
imul
or
fisttpll
xchg
mov
aaa
out
sbb
aas
and
pop
aam
into
xchg
push
sbb
xor
aad
hlt
and
mov
repnz
loopne
or
out
inc
xor
les
jae
cmp
pop
mov
dec
xchg
sbbb
jecxz
inc
adc
mov
sub
sti
ss
or
push
or
fs
inc
movsb
lock
xchg
stos
and
test
inc
dec
icebp
pop
int
enter
jo
dec
mov
or
and
add
xor
cmp
add
sbb
inc
stc
sbb
push
mov
sub
jmp
or
leave
adc
sub
leave
xor
js
cmp
scas
xor
cmp
loopne
lret
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
outsl
insb
lret
cld
add
call
int
jnp
int3
or
repz
loopne
sbb
cli
inc
adc
into
or
sti
sti
sub
mov
insb
jns
mov
ret
mov
fwait
mov
sub
sahf
xchg
les
jae
clc
and
inc
in
cwtl
push
pop
mov
jne
sub
lret
pop
fisttpll
jno
int3
sbb
stos
push
test
xchg
pusha
lret
jb
and
add
inc
xchg
pop
jb,pn
popf
std
adc
sub
jp
int3
ja
push
addr16
xor
dec
enter
adcl
ja
lret
add
and
pusha
xchg
xchg
xor
xchg
cmp
or
shll
cmpsb
repnz
scas
adc
xchg
sub
pop
cmp
fisubs
sbb
addr16
inc
xchg
lods
insl
jns
pop
scas
fdivr
cs
movsb
cmpsb
cmp
int
pop
xor
jo
ljmp
loopne
insb
ss
push
mov
cmp
cmp
scas
negb
xor
sub
fcompl
cmp
cmpl
xor
call
xlat
and
stc
or
fsubs
xchg
clc
or
lcall
push
and
jns
jle
out
xchg
push
fstpl
testl
ret
dec
lret
jno
sub
xchg
bound
push
mov
or
push
pop
insl
inc
xchg
fldpi
fiaddl
push
jg
ljmp
mov
inc
cs
mov
mov
jge
or
cmp
test
fldenv
or
mov
ss
clc
push
rcpps
inc
push
push
icebp
les
fmul
enter
stc
pop
sub
xor
lcall
sub
pop
leave
popa
cli
adc
ret
push
or
das
lahf
not
test
adc
out
xor
mov
xor
sbb
or
cmp
and
icebp
out
mov
in
adc
xor
mov
pop
jbe
stc
push
pop
lods
test
xchg
and
mov
in
jnp
cmp
xor
hlt
bound
mov
inc
test
pop
in
incb
shlb
sub
mov
dec
rcll
jl
add
xchg
jo
mov
fdivrs
jge
ja
xorl
and
ds
push
add
ss
ud2
cld
and
ret
les
loop
jnp
loope
mov
xchg
dec
gs
outsb
notb
dec
xlat
pushf
push
int3
mov
sub
inc
adc
mov
aam
adc
fwait
jg
sbb
lods
cmp
add
mov
pop
and
pop
movsb
jnp
test
sahf
mov
in
mov
mov
sti
data16
mov
jge
mov
and
pop
dec
das
bound
stos
sub
push
or
andb
insb
xchg
dec
lock
inc
out
ror
in
push
and
aaa
call
data16
sti
movsl
mov
gs
jl
add
in
or
std
fdivrl
loope
xchg
outsb
lret
xchg
pop
mov
lds
loope
test
inc
cltd
mov
push
test
mov
pop
mov
mov
addr16
add
add
add
lret
adc
repz
jge
or
or
mov
push
dec
and
sub
lock
jmp
cs
pop
adc
stc
mov
ss
push
shrl
adc
scas
mov
data16
shl
ljmp
repz
in
int3
mov
mov
out
stc
pop
mov
pushf
or
pushf
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
rcr
add
scas
stc
jmp
mov
jnp
xor
outsb
iret
mov
or
cmp
dec
pop
mov
repnz
es
jmp
les
leave
imul
dec
bound
lods
push
adc
push
in
mov
xchg
insl
cmpb
add
jae
mov
mov
loop
sub
imulb
aaa
jle
call
push
or
testl
jbe
or
jecxz
mov
or
idivl
in
jbe
mov
fmull
xor
or
inc
or
addr16
sahf
sub
jp
pop
mov
pop
mov
push
imul
insl
pushf
rorl
jo
add
arpl
push
dec
add
lret
dec
shlb
xchg
jg
popf
sbb
jl
int
and
cmp
push
push
inc
pop
shr
push
ljmp
icebp
push
negl
lods
in
cmpsb
cmc
fwait
shrl
in
test
ret
nop
fs
push
inc
mov
insb
imul
inc
sbb
xor
ja
or
xchg
mov
mov
ss
sub
mov
orl
outsb
clc
ljmp
jecxz
xchg
mov
data16
dec
out
arpl
test
loopne,pn
dec
xchg
imul
lock
lahf
movsb
jb
lea
jno
rcll
cmp
sub
orb
cwtl
mov
adc
ret
adc
loop
add
and
push
push
aaa
push
test
in
mov
cmp
mov
popf
adc
mov
pop
aas
add
loop
lret
or
sub
aaa
loop
sbb
movsl
xchg
cmp
pop
dec
aas
mov
in
adc
orb
movsb
movsl
mov
fs
and
cmp
or
or
or
or
or
or
or
push
in
in
dec
mov
pop
pop
mov
jns
in
mov
xor
inc
leave
pop
mov
call
mov
lds
cld
sbb
mov
and
sub
jno
mov
jmp
or
jl
push
inc
jnp
cs
and
xor
push
scas
xor
loop
setnp
out
cmpsb
pusha
adc
scas
mov
out
xchg
add
and
sbb
scas
dec
nop
ffree
lods
and
xlat
and
stos
mov
pop
push
icebp
and
adc
sbb
mov
dec
movl
hlt
or
xchg
mov
inc
cwtl
push
xchg
push
xor
xchg
and
shrb
and
jge,pt
outsb
push
fldenv
pusha
dec
ret
xor
xchg
mov
pusha
sbb
fnstsw
cmp
mov
je
dec
mov
dec
cs
xchg
sbb
aas
mov
push
push
lahf
push
and
push
data16
lock
mov
pop
and
divl
in
nop
inc
ljmp
and
jnp
mov
pop
pop
xlat
adcb
fs
mull
push
insl
data16
push
push
dec
scas
ss
mov
test
insl
popa
jle
icebp
xor
adc
xchg
fmull
push
rorb
ss
xchg
aaa
sub
imul
mov
decl
jg
xchg
adc
loop
or
jbe
movsl
rcll
or
dec
inc
sub
out
mov
dec
lret
mov
or
or
jo
xchg
sti
test
xor
aaa
push
inc
jecxz
je
mov
or
mov
ficomps
icebp
stos
push
loope
mov
add
repnz
repnz
int3
adcb
mov
cmpb
sbb
pop
addr16
call
movsl
out
and
ss
adc
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
aaa
ret
inc
mov
push
lahf
aas
addr16
jnp
xorb
mov
mov
push
out
ja
push
cmp
add
push
hlt
scas
cmp
pop
inc
add
jne
bound
test
ret
shlb
out
add
and
fdivrl
ljmp
cmp
xor
jo
and
lods
jns
fcoml
out
pop
mov
adc
mov
ficoms
lea
mov
lcall
test
ss
xor
cmpsb
push
in
jbe
push
push
pop
out
repnz
repz
dec
fstpt
sahf
enter
xchg
jo
push
stos
xchg
cmp
icebp
jle
jno
js
fdiv
add
push
cmp
add
xor
ret
sub
adc
roll
push
pop
shl
or
xchg
pushl
jg
jg
pop
in
mov
mov
std
repz
mov
jnp
jae
and
outsb
push
xchg
rol
push
dec
mov
sbb
mov
mov
shll
data16
ja
mov
aad
xchg
add
push
iret
push
and
cltd
adc
push
mov
fcmovnbe
int
fcoms
mov
sbb
in
push
les
ds
orb
sbb
cwtl
popa
ret
and
mov
popf
cmp
test
ds
in
lods
pop
push
addl
pop
lahf
sbb
mov
pop
jmp
aad
adcl
js
or
jb
rorl
into
lret
pop
cmp
cmp
jecxz
sbb
outsb
push
mov
outsb
ret
mov
push
dec
aad
fnstcw
xor
mov
xchg
dec
mov
lcall
jno
fisubl
mov
cmc
sbb
mov
addr16
mov
or
or
or
or
or
or
or
or
or
or
or
or
insb
aaa
xchg
lods
not
adc
ljmp
inc
into
mov
test
cmp
adc
pushf
ss
jbe
jb
sbb
scas
and
mov
mov
cmp
pop
or
aad
enter
fcmovnu
xlat
dec
arpl
push
aas
inc
sbb
and
sahf
mov
push
andl
mov
addr16
fwait
inc
jnp
outsl
lret
cmpb
inc
shlb
inc
je
adc
insb
adc
outsl
sub
xor
ja
jmp
jmp
iret
jmp
xchg
cmp
jl
pushf
mov
mov
faddl
daa
filds
fnsave
adc
call
cmp
mov
sbb
jmp
lcall
push
and
sub
pop
adc
pop
jle
in
and
xor
enter
push
std
jo
jle
leave
xchg
mov
jmp
ljmp
adc
xor
insb
pushf
xchg
dec
mov
mov
push
adc
rorb
incl
mov
lcall
adc
aaa
fs
arpl
sub
xchg
cmp
fimuls
loope
shr
fcoml
div
addr16
cmp
iret
xor
cs
cli
jp
mov
pop
and
ret
call
sbb
je
cmp
adcb
shl
cmp
dec
enter
adc
xlat
xor
jae
pop
pushf
lcall
adc
mov
andl
fimull
mov
int3
sub
jns
push
sub
sub
sub
pushf
lock
aaa
jl
push
imulb
test
push
stc
pop
sub
dec
orps
imul
xor
ljmp
or
or
or
or
or
or
xchg
xor
imul
int
inc
sub
cmc
out
shr
cmpsl
add
jmp
mov
sbb
add
inc
mov
sbb
cmpsb
or
dec
adc
pop
push
icebp
cmp
fstpl
jo
mov
stos
lahf
mov
xor
add
clc
lds
loope
dec
xor
cld
lods
scas
pop
movsl
inc
add
lock
inc
push
imul
and
outsb
gs
sti
ja
push
lcall
mov
and
pop
inc
lea
les
sbb
jns
gs
imul
fnstenv
push
out
test
dec
sub
pop
bound
inc
mov
inc
js
cwtl
dec
cmp
inc
pop
imul
out
lahf
mov
pop
in
cmpsl
adc
cld
inc
adc
out
sub
xchg
out
ljmp
mov
sbb
fnsave
xor
jb
push
pop
pop
mov
insl
mov
mov
cmpsb
dec
mov
lcall
mov
xor
hlt
cmp
les
mov
sbb
outsb
sbb
inc
jns
jl
cmp
dec
xchg
hlt
cmp
neg
mov
mov
mov
inc
jl
inc
in
lds
sub
aas
and
test
je
and
negb
repz
xchg
call
in
xor
imul
add
std
loop
lock
mov
xchg
add
outsl
jb
jae
mov
xchg
repnz
movsb
fimull
test
push
ret
or
xchg
fcomps
test
outsb
inc
stos
ds
cli
xor
aas
xchg
pop
fcomps
insl
rcrb
sub
sbb
xchg
lods
push
mov
jbe
dec
adc
pop
pushf
adc
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
mov
xor
push
aaa
bnd
mov
rorb
add
and
xor
sbb
in
outsb
mov
xor
xorb
pop
movsb
jno
and
popa
dec
pop
mov
shlb
add
jmp
fcomp
icebp
ret
mov
inc
aas
mov
mov
jmp
mov
or
rclb
int
push
ss
call
or
mov
mov
fwait
mov
cmp
ja
mov
fcmovb
outsb
sbb
insb
cmc
ret
movsl
icebp
addr16
mov
stc
jo
jl
jle
cmp
test
lret
push
pop
push
imul
lods
inc
out
cmp
stos
mov
mov
push
xor
dec
pop
clc
iret
fsts
lds
dec
cmp
call
jbe
mov
fstp
dec
mov
and
js
add
nop
les
call
cli
fidivrl
mov
test
add
dec
mov
sub
push
jle
xchg
iret
icebp
aaa
mov
clc
sbb
pop
lahf
lcall
andb
jns
rorb
jecxz
or
insl
cmp
add
xor
iret
cmp
push
jo
movsb
out
scas
aam
inc
pop
xchg
or
jmp
shlw
sub
scas
mov
loopne
xor
insb
into
rol
push
jae
ljmp
add
std
push
mov
leave
adc
jp
mov
loopne
into
dec
test
inc
mov
push
lea
dec
in
and
aaa
sti
sar
and
cmp
inc
mov
iret
dec
push
push
pop
loope
fdivrs
dec
mov
jge
leave
ds
push
mov
xor
or
or
or
or
or
or
or
or
push
ds
pop
jbe
scas
xor
popf
or
es
fstpt
push
or
sbb
loope
push
outsb
adcb
dec
hlt
pop
je
sbb
or
or
sub
and
sub
or
mov
orl
mov
inc
pop
test
cli
ds
mov
outsl
mov
pop
and
push
adc
xor
cmp
inc
jnp
add
loopne
test
sbb
jmp
mov
lds
jl
movsb
lods
sbb
pop
cwtl
outsb
movsl
jb
xor
or
sbb
dec
fs
dec
mov
loop
fiaddl
sbb
cmp
scas
adc
add
aaa
jo
sbb
sti
ret
out
in
popa
stos
and
cmp
or
push
mov
inc
sarl
cltd
mov
mov
aam
jb
xor
outsb
lds
pushf
ja
push
pushf
inc
ja
fstpt
inc
push
pop
jnp
inc
mov
sub
cmovp
and
jnp
jl
sbb
mov
stos
push
xchg
add
jl
xor
cmpsl
jno
cwtl
rol
out
xchg
xor
lret
mov
ljmp
repnz
push
cmp
xor
jle
push
into
jns
jl
pop
out
sbb
adc
or
mov
mov
push
imul
jae
jno
or
aas
dec
leave
push
ret
push
cli
imul
cmpsb
lock
call
or
ficoms
inc
enter
jo
js
pop
and
sbb
mov
adc
and
jecxz
pop
dec
jle
into
call
out
aam
roll
add
fs
div
dec
mov
lea
add
cmp
mov
scas
std
pavgb
into
iret
xchg
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
jle
add
scas
push
jb
sbb
sub
ret
sbb
mull
lret
mov
dec
cmp
mov
and
shlb
icebp
jnp
sub
or
xlat
test
mov
xchg
shlb
bound
cwtl
das
cmpsl
rolb
out
stc
sub
loop
stos
stos
lcall
mov
scas
fildl
clc
cmp
incb
testl
scas
outsl
sub
in
repnz
push
add
jecxz
ss
adc
fnstcw
push
ret
lock
mov
push
xchg
xchg
mov
pop
inc
jle
int3
ljmp
xchg
jnp
adc
mov
lahf
jo
jae
call
loopne
lea
iret
je
lahf
das
adc
mov
cmc
xor
std
cmp
push
pop
dec
pop
ret
sbb
gs
xchg
stos
mov
xchg
xorl
push
xor
mov
mov
add
adc
pop
orl
mov
xchg
aam
or
outsl
push
adc
sub
inc
movsb
cld
mov
adc
and
mov
or
cmp
roll
jg
dec
mov
inc
sub
cmpsl
xor
sbb
mov
jecxz
fadds
mov
cmp
test
sub
inc
cmp
push
xchg
addr16
mov
mov
pushl
mov
add
pushf
imul
adc
mov
cld
xor
loop
mov
mov
iret
dec
into
sbb
lgdtl
in
inc
and
mov
hlt
adc
cmc
push
add
lret
into
push
push
sub
ret
push
fimull
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
pushf
je
fcomp
pop
test
test
out
sbb
jecxz
xchg
int3
cmp
jb
jne
dec
out
cmpsb
ret
dec
inc
pushl
fbstp
cwtl
mov
add
ret
push
shrb
xchg
push
cmp
dec
mov
mov
add
xchg
xchg
add
divl
inc
ficomps
outsl
or
inc
jp
js
sub
add
loope
mov
xchg
cmp
icebp
sub
int3
xchg
cmp
je
mov
sub
or
push
stc
pop
or
int
aam
lcall
loope
and
push
mov
xor
pusha
push
jg
and
cld
push
mov
mov
adc
lret
adc
scas
call
in
lock
cs
popa
loop
mov
xchg
call
stos
fstl
fmull
roll
xor
shlb
and
stos
nop
in
cmpsl
out
lcall
cmp
xor
mov
cmp
ret
and
pushf
mov
fldt
addb
movsl
popa
lock
pop
add
pop
xchg
in
orb
cmp
jecxz
data16
push
dec
ja
jp
adc
pop
lock
es
push
das
and
sbb
add
xchg
lds
jp
push
std
and
and
ret
jo
sub
pushf
adc
mov
arpl
mov
hlt
lcall
cld
int3
or
out
ss
xor
push
mov
add
mov
into
cmp
lods
add
js
out
aas
repnz
xor
ss
dec
into
outsl
pop
push
add
adc
xchg
test
faddl
js
ss
test
sub
bound
xor
cmpsb
push
mov
out
movsl
cltd
push
mov
les
addr16
or
or
or
or
or
or
or
or
or
or
or
or
dec
mov
dec
dec
insb
xchg
fstl
les
in
aas
stc
test
add
dec
inc
or
mov
xchg
xor
loopne
jno
push
out
and
inc
jmp
push
sub
cmp
repz
outsb
inc
enter
push
adc
dec
test
and
sub
stos
xadd
es
popa
adc
shlb
pusha
out
aaa
push
lock
mov
push
std
xchg
iret
mov
pop
mov
mov
mov
or
je
xor
sti
jo
test
cwtl
mov
sbb
mov
jnp
mov
cs
cmp
adc
sarb
test
adc
inc
into
adc
mov
into
add
push
dec
pop
stos
sbb
rol
les
in
mov
das
test
dec
fcompl
and
xlat
and
lods
sarb
push
decl
popf
adc
xor
xor
outsl
aaa
ret
xchg
nop
les
xor
inc
ret
imull
xor
je
mov
dec
xchg
push
shrb
inc
int
jae
loope
and
inc
sbb
idivl
pop
jb
push
fisttpll
adc
sub
movsb
jno
aad
inc
dec
push
pop
sub
sub
jno
sub
out
rolb
ret
aas
or
movsb
ret
jecxz
inc
pop
cmovae
jae
aad
js
daa
inc
aas
nop
sub
pop
xor
pop
rorb
mulb
push
rcr
push
jno
movsl
frstors
aam
push
add
xor
mov
add
nop
fs
cmc
icebp
pop
mov
jecxz
ret
add
jbe
jb
sarb
testb
mov
cmp
or
pop
xor
xlat
adc
lock
mov
iret
mov
jnp
lret
cmpsb
into
js
mov
mov
ja
or
or
or
or
or
or
or
or
clc
and
mov
add
mov
mov
sahf
jmp
xchg
lods
test
push
xchg
pop
decb
pop
cmp
mov
enter
inc
xchg
dec
xchg
add
fs
in
xchg
out
std
shrb
aam
gs
outsl
dec
push
shll
mov
imul
jb
roll
clc
jge
push
jl
inc
scas
jb
push
xchg
in
sub
mov
add
adc
add
pop
jae
and
cld
jae
popa
imul
mov
hlt
test
xor
xor
xchg
or
cmp
or
xor
test
or
popf
jle
pushf
dec
pop
sub
scas
sub
inc
subl
call
xor
in
lahf
movsb
mov
bound
push
scas
adc
dec
lock
xchg
cmp
jns
mov
xchg
call
cmp
int3
mov
sbb
fwait
push
dec
fsubrl
imul
cmp
arpl
cld
jo
movsb
inc
lods
pop
adc
leave
dec
aad
jmp
jg
pop
stos
cmc
mov
cmp
test
pop
pop
fidivs
sub
ret
mov
mov
cmp
adcl
fcomp
and
repnz
and
roll
xchg
pop
loopne
xchg
movsl
cli
loop
cwtl
sti
cmp
rorl
mov
call
xchg
lcall
cmp
ret
add
mov
fcmovnbe
push
dec
mov
or
in
sarb
xor
ret
into
jge
inc
lcall
inc
xor
inc
pop
outsb
insb
jno
rol
dec
repnz
dec
gs
cs
shll
call
jne
ss
ljmp
mov
dec
inc
mov
or
or
or
or
or
or
or
or
or
or
or
or
xor
jno
xor
fwait
movsl
pop
mov
ficoms
popf
not
arpl
jns
sbb
and
inc
xchg
je
mov
mov
inc
dec
out
bnd
insb
add
fistpl
hlt
cmp
push
popf
pop
enter
xor
mov
cmp
mov
repnz
pop
add
mov
pop
sar
xchg
lods
mov
cli
rcr
adc
adc
and
xor
lods
xchg
inc
test
dec
push
adc
adc
add
push
mov
mov
jns
outsb
inc
movsl
and
and
jo
mov
bound
fst
push
std
bound
sub
sti
int3
pop
cmp
cli
ljmp
stos
jecxz
dec
dec
xor
leave
dec
cmpsb
or
sbb
pusha
mov
pop
jecxz
sub
mov
insl
pop
xlat
xlat
mov
aaa
adc
mov
jae
push
fstpl
cltd
push
dec
fwait
cld
cmp
dec
sbb
hlt
dec
out
sub
mov
mov
pop
mov
cmc
sbb
jmp
jne
cmpl
cmpsl
or
mov
and
in
loope
push
andl
sbb
pusha
in
mov
cli
fbld
jbe
enter
push
js
cmp
pop
test
sbb
rcr
cmp
xor
idiv
fwait
or
pop
or
ret
sub
add
fmull
jns
pop
mov
adc
ss
sbb
in
mov
jle
xchg
adc
sarl
add
in
cli
insl
inc
inc
mov
loope
jno
sub
xchg
mov
push
jl
dec
xchg
adc
adc
adc
cmc
test
fildl
inc
mov
mov
cmp
std
int3
mov
imul
jle
cmc
jp
aam
mov
mov
imul
cmpsl
mov
insb
sti
adc
pop
jae
mov
fwait
rcl
and
dec
in
icebp
add
and
mov
sahf
arpl
sub
xchg
mov
xchg
sub
movsb
mov
test
les
xor
add
ret
mov
mov
clc
inc
cmp
push
inc
jnp
repnz
adc
cmp
add
cmpsb
inc
es
sub
cmp
inc
ljmp
bnd
push
cwtl
pusha
rcll
ret
mov
inc
xor
xor
or
enter
fwait
shll
loope
push
hlt
insb
and
xchg
popa
sbb
in
enter
sbb
push
call
mov
in
adc
lods
jmp
movsb
sbb
aaa
xchg
pop
nop
and
test
fnstsw
mov
cmpb
add
jmp
and
dec
or
jb
adc
test
mov
pop
cs
nop
ud2
and
mov
mov
cld
push
shrb
std
sub
and
in
mov
outsl
xchg
loop
inc
mov
inc
mull
xorl
js
sbb
adc
rorb
sbb
mov
jmp
popf
ficompl
jo
jp
push
popa
into
xor
ljmp
iret
pop
loope
jo
inc
mov
movsb
out
push
arpl
cld
and
into
shlb
int
add
cmp
mov
in
fnstcw
mov
loopne
pop
mov
push
testl
lahf
lcall
jmp
in
popa
pop
xor
fwait
jg
in
jecxz
mov
xchg
int3
sub
sahf
bound
jb
xchg
xchg
fdivp
mov
xor
mov
rcr
xor
out
or
pop
push
xlat
bound
mov
outsb
insl
js
sbb
aas
ficomps
dec
pushf
repz
arpl
jl
and
pop
flds
fistl
ud1
test
inc
cmp
call
cmp
dec
dec
add
jle
push
aam
push
insb
outsb
or
or
jns
xchg
fdiv
and
fisttps
ret
movsl
xor
adc
or
repnz
loop
sbb
jno
sbb
jmp
movsb
movsl
mov
xor
adc
push
jbe
dec
add
lcall
inc
cli
out
and
adc
push
fcoml
jns
pop
test
in
dec
cmp
adc
mov
inc
mov
jp
mov
push
pop
push
cmp
je
scas
fisttpl
and
dec
lds
sub
ss
loope
pop
push
test
mov
arpl
pop
ficomps
sahf
gs
mov
xor
int3
inc
mov
ds
fiaddl
dec
lods
mov
jmp
sub
and
or
shrl
es
insl
sbb
insl
jge
cs
cltd
jns
mov
mov
es
cmp
jno
adc
and
xor
jle
clc
out
iret
call
test
repnz
pop
xor
outsl
and
dec
sub
fcomps
stc
mov
in
aam
add
sub
sbb
lods
pop
jne
imul
push
jge
in
mov
std
jns
pushl
lea
shr
and
or
or
or
or
or
or
or
or
jl
fimuls
aam
mov
mov
repz
pop
mov
inc
arpl
xor
adc
mov
add
push
loop
jae
adc
or
push
loope
fimuls
movq
sbbl
lods
stos
stos
jecxz
rclb
out
dec
jge
ror
adc
ret
test
push
push
ret
nop
xchg
sub
in
cld
push
pop
sbb
test
dec
xor
out
xchg
aad
add
mov
jb
jbe
nop
in
or
shlb
std
cmp
or
repz
adc
loope
outsb
jmp
je
push
dec
jne
iret
mov
mov
adc
test
or
pop
subl
mov
out
in
pop
or
cmp
cmc
sbbl
push
std
xchg
mov
push
jl
outsl
cmp
mov
sti
lea
cmp
xor
js
aaa
push
sbb
subl
mov
mov
xchg
stos
and
sub
add
aam
movsb
ret
xor
add
loope,pt
xchg
cmp
test
pop
mov
iret
decb
or
sbb
rcl
sub
jecxz
in
rcrb
cmpl
jns
pop
jb
enter
out
jmp
fldcw
out
nop
cmp
jne
scas
in
and
fmuls
lods
cmp
push
decl
leave
adc
or
fldenv
adc
sbb
mov
int
ret
and
cmpsb
addr16
mov
loop
dec
jne
adc
sbb
pop
out
push
or
inc
in
and
inc
xchg
xchg
sbb
hlt
dec
pop
pop
je
pop
sti
mov
imul
rcrl
jae
push
xchg
mov
movsl
xor
sbb
fsubrl
ja
xlat
pop
testb
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
push
je
cli
adc
clc
test
xchg
pop
jp
mov
mov
testl
lea
lahf
xchg
fsubr
push
test
jmp
xchg
push
ds
loop
in
xlat
insl
xchg
mov
js
lods
lret
dec
dec
xchg
mov
pop
sbb
xlat
ljmp
add
test
in
mov
lahf
jg
jne
into
out
imul
inc
rcr
in
sbb
shl
jo
jb
mov
jnp
inc
cwtl
data16
stc
jne
pop
fbld
mov
jp
add
mov
movsb
mov
dec
dec
cmc
pop
lret
inc
movsl
xlat
movsb
mov
and
mov
mov
mov
jmp
xchg
fisttpll
pop
out
mov
pop
inc
cmp
inc
inc
into
cld
mov
or
pop
pop
mov
jle
jns
pop
pusha
mov
mov
pop
jne
mov
test
js
ds
adcb
popa
out
scas
xchg
cmpsl
jge
xchg
inc
sub
subb
ja
imul
loope
lret
sbb
imul
mov
push
rolb
push
inc
dec
shll
out
xor
popf
or
int
fimuls
cld
fnsave
dec
data16
loopne
or
lret
insb
adc
sub
call
sahf
out
adc
mov
shlb
mov
and
inc
or
rcrb
dec
pushf
xlat
cmp
shlb
adc
jbe
rcll
lock
mov
scas
mov
scas
ljmp
scas
sub
or
and
jae
in
dec
ljmp
pop
push
inc
sub
movsl
add
sub
adc
xchg
cli
fmulp
pushf
outsl
push
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
push
add
nop
jno
add
mov
mov
xchg
aam
mov
clc
fstpl
sub
inc
scas
jno
add
aam
cmp
shrb
ja
push
xlat
xlat
fnstsw
mov
mov
repz
hlt
xor
cs
lcall
or
loop
sub
add
jg
test
mov
outsb
ljmp
test
dec
sub
std
iret
test
fcmovbe
inc
dec
bound
sti
add
fldenv
xchg
faddl
push
icebp
jae
es
mov
testl
movsb
xor
lock
gs
jmp
hlt
aad
add
mov
test
faddl
mov
mov
repnz
mov
or
cwtl
call
pop
fidivl
push
add
dec
add
aaa
xor
adc
xor
sti
repz
stos
xor
pop
loop
lea
jns
dec
adc
mov
mov
into
sahf
dec
xchg
insl
movsl
or
pop
and
mov
aam
scas
test
testb
popa
jo
roll
or
and
dec
lods
adc
test
adc
xor
pop
dec
daa
les
lcall
dec
in
adc
xchg
mov
test
das
push
pop
mov
jle
sbb
adc
stc
repz
push
push
sbb
jb
jl
repz
and
jns
adc
enter
fbld
gs
dec
loope
fs
fucomp
cltd
sub
shlb
hlt
int
lcall
sub
jae
in
fiadds
push
inc
ret
decl
lock
loopne
in
fdiv
add
shl
jp
fstpl
lret
fucomip
sbb
mov
and
aaa
xlat
fwait
repnz
je
out
rorb
xor
dec
adc
enter
out
mov
mov
inc
mov
das
xor
imulb
jae
inc
aam
sbb
mov
stc
cmp
adc
xchg
and
lods
jecxz
test
jb
stos
fsubr
outsb
mov
insb
sub
mov
xchg
push
lret
mov
inc
cmp
das
aad
cld
jmp
subl
push
outsb
ret
icebp
repz
and
or
inc
mov
repnz
and
shll
hlt
jecxz
fnstenv
js
fisubrl
pop
pop
lock
dec
jns
ds
push
pop
fcomp
mov
sbb
repz
fs
or
mov
sub
cwtl
pop
ljmp
jp
sub
pop
jl
stos
out
dec
pop
adc
add
and
sbb
inc
data16
stos
mov
mov
push
push
xchg
vorps
mov
addr16
adc
lods
clc
lea
mov
ss
ret
jge
push
add
mov
aaa
or
cmp
pop
xchg
fistpll
cmpsb
sar
ss
bound
and
mov
mov
fcompl
inc
ret
in
mov
ja
xchg
out
inc
cmp
fildl
out
addr16
fdiv
add
dec
jp
rolb
xor
les
cmp
inc
dec
hlt
mov
dec
lret
int
into
mov
jb
mov
lret
shrl
pop
jmp
mov
inc
xor
test
aam
mov
push
aaa
andb
shrb
inc
icebp
ret
popa
push
or
add
inc
sbb
fbld
or
push
jbe
out
jo
ss
add
push
cmp
fs
std
loopne
add
mov
dec
cs
mov
clc
lock
xor
and
push
xchg
jnp
out
rclb
pop
shll
jo
fistl
inc
xlat
dec
push
mov
jb
xchg
add
mov
ret
xchg
xor
test
inc
fs
movsb
fcoml
int3
dec
adc
mov
lock
iret
sbb
ret
xchg
hlt
add
cmpsl
clc
enter
mov
jmp
nop
leave
jmp
shlb
push
sub
mov
scas
push
add
cli
sbb
int
sbb
mov
sbb
jle
mov
test
movsb
sbb
out
popa
xchg
mov
pop
ret
dec
test
sub
cld
xchg
addr16
outsb
jb
add
mov
cmp
sarl
adcl
pusha
inc
lahf
mov
je
cmpsl
sbb
fisubs
fcoml
push
push
jbe
lahf
add
into
mov
clc
push
inc
test
cmp
fnstsw
sbb
xchg
xor
pop
mov
jae
or
mov
movb
jnp
cmpsb
pop
loop
mov
adc
mov
adc
leave
filds
add
jmp
fidivrs
mov
pop
adc
jecxz
into
xchg
cli
or
call
xchg
add
mov
cmp
mov
mov
imull
or
outsb
hlt
dec
sub
js
sub
pop
jl
and
cmp
jge
scas
dec
sub
jmp
cmp
not
cmp
pushf
mov
mov
ret
and
out
jecxz
cli
ret
in
loope
add
dec
and
jbe
lret
cmp
cmp
sub
js
sub
fsubs
cmp
addl
rolb
rcll
pop
popa
add
divb
cltd
sbb
pop
sbb
jecxz
jnp
jno
cmp
jecxz
aaa
insl
jo
aaa
out
decb
js
std
mov
jmp
cmp
mov
pop
imul
xchg
xor
xor
lods
sub
or
jno
subb
lods
sbb
idiv
out
xor
push
cli
icebp
cmpsb
jae
xchg
inc
jne
dec
xlat
sbb
cmp
call
pop
ds
mov
inc
jl
xor
xor
repz
inc
std
xchg
or
out
iret
pop
outsb
movsb
test
andb
aaa
mov
cmp
or
cli
mov
jns
rcrb
push
gs
cld
aaa
pop
adc
mov
cmp
xchg
mov
jae
leave
ret
std
sbb
pop
scas
push
aam
and
or
faddp
pop
fstp
mov
cld
call
jl
icebp
adc
push
aaa
ljmp
clc
inc
mov
cmp
xchg
mov
push
mov
lret
jmp
mov
es
jmp
xchg
insb
enter
bound
rorl
xlat
mov
cmp
mov
sbb
inc
add
das
jmp
push
lcall
adc
dec
in
mov
add
and
inc
cmp
rolb
mov
xchg
cld
iret
testl
jp
push
add
mov
push
and
dec
mov
jns
xlat
lea
repz
cld
dec
insb
pusha
leave
pop
shlb
mov
lret
lahf
popf
jmp
fs
adc
mov
pushf
test
sahf
mov
adc
test
fildl
dec
icebp
lock
mov
jae
push
inc
clc
outsb
pop
cli
ret
gs
mov
scas
in
or
jb,pt
popa
push
push
push
add
xchg
jle
mov
add
inc
cmp
xchg
stc
xor
outsb
mov
arpl
ljmp
sbb
mov
adc
divl
dec
add
sub
dec
xchg
testl
shrl
sbb
jmp
imul
ds
out
mov
cmpsl
inc
jecxz
push
ror
push
cli
and
sbbb
sbb
xchg
lds
and
inc
and
sbb
push
sbb
jne
pop
ficomps
xchg
xchg
aad
xor
push
mov
mov
mov
mov
stos
shl
bnd
rclb
add
iret
out
dec
fbld
inc
outsb
dec
loop
xchg
pop
notb
repnz
xchg
lock
add
stos
out
dec
loopne
and
xor
mov
nop
push
mov
jnp
jne
lea
xor
jl
pop
cmpsb
dec
in
testl
pop
cli
cwtl
aas
mov
clc
mov
mov
push
ret
fmulp
mov
fsubp
mov
pop
je
mov
paddb
and
or
pop
ficomps
and
pop
fmuls
cwtl
mov
add
jne
push
ljmp
xchg
lret
jle
mov
sahf
sub
inc
out
mov
loop
into
jmp
sbb
leave
pusha
cwtl
mov
fsts
subl
in
lret
mov
cwtl
sub
sarl
loope
or
inc
stos
mov
daa
xor
jg
add
mov
lret
cwtl
jle
adc
jp
scas
je
dec
movsb
pop
adc
jb
shll
add
push
mov
push
in
cmpsl
or
ljmp
or
in
mov
cmp
data16
pop
push
in
stos
lret
fidivrs
jp
loop
out
jne
sub
imul
loopne
hlt
es
jmp
adcl
bound
ret
inc
mov
rcrb
jo
xchg
imul
cli
cmp
push
pop
cmp
negb
shll
lods
in
cmpsl
add
les
push
mov
and
mov
and
je
or
sarl
push
test
add
inc
in
dec
push
popl
xchg
es
jg
mov
lcall
ljmpw
icebp
add
ljmp
stos
jae
dec
fisubrl
test
or
jns
in
sar
mov
mov
and
in
mov
or
inc
jno
addr16
fwait
idiv
adc
add
out
loop
loopne
ljmp
xlat
push
mov
rolb
push
mov
push
popa
stc
and
pop
ret
das
das
int3
add
or
subl
adc
push
pop
jno
nop
or
dec
sbb
fcom
cld
sub
pushf
inc
popa
push
stos
push
adc
mov
pop
jle
sahf
test
lea
stc
out
mov
jle
outsl
xchg
out
in
push
mov
mov
pop
popf
iret
pop
xchg
jmp
cvtps2pi
and
clc
arpl
out
mov
sub
push
adc
mov
jp
lods
movsl
jbe
clc
test
rcrl
mov
pop
add
int
cltd
mov
inc
xlat
dec
jno
mov
sub
icebp
stos
and
lds
inc
pushl
xchg
mov
ucomiss
inc
mov
mov
movl
mov
push
push
dec
jne
mov
jmp
dec
pop
inc
adc
cmp
in
fs
out
xor
mov
dec
inc
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
in
jb
lret
or
adc
adc
into
inc
or
fwait
or
ret
mov
int3
mov
stc
dec
jecxz
and
popa
rorl
sti
adc
pop
shll
out
mov
mov
rclb
pop
add
pop
sbb
gs
jp
sbb
adc
push
mov
inc
or
loopne
fidivs
mov
mov
dec
ljmp
push
sub
mov
push
and
in
enter
cmpb
fnclex
push
int3
lret
pop
or
test
bound
pushf
out
loope
cmp
rcll
test
push
xchg
mov
mov
cmp
and
mov
add
sub
push
cmc
je
jmp
inc
or
adc
sub
std
mov
cmp
cmp
or
mov
and
aam
sbb
cmp
xor
test
nop
mov
pop
adc
or
mov
stos
dec
pop
mov
push
pop
push
and
lods
dec
mov
push
push
lods
push
push
xchg
jne
ja
out
mov
movsb
dec
lods
sti
push
orl
and
movsb
mov
or
xchg
pop
dec
push
xor
dec
imull
loop
inc
addr16
mov
mov
test
addl
ss
clc
out
lahf
movsb
sub
mov
out
xchg
cmp
push
dec
xchg
jae
or
sub
ret
mov
pop
arpl
jmp
sbb
xchg
push
xchg
mov
test
sbb
arpl
mov
dec
roll
xchg
cmp
mov
jecxz
pop
nop
stc
in
adc
xor
cmp
arpl
movsb
pop
addr16
out
push
frstor
icebp
jmp
incl
xchg
inc
fcmovbe
mov
add
sub
dec
test
or
clc
std
xchg
clc
mov
pop
add
and
bound
sbb
icebp
xor
add
xchg
aaa
fs
mul
fnstsw
test
rorl
jg
xchg
aaa
mov
xor
add
dec
iret
es
and
and
mov
sbb
js
orl
aaa
dec
xor
stos
mov
xchg
movsb
sahf
xor
enter
pop
insb
mov
mov
adc
jp
sbb
dec
cmp
or
or
lds
and
push
das
jge
dec
mov
lds
adc
mov
test
mov
iret
scas
popa
fwait
add
sub
sbb
adc
cmp
repz
aam
dec
pop
pop
ljmp
xlat
push
sub
add
pop
bound
enter
lea
or
push
cltd
in
mov
mov
repnz
pop
cli
rcrl
xor
fisubl
sbb
dec
adc
test
imul
out
jp
add
jne
jbe
mov
mov
jnp
iret
and
insb
aaa
stos
mov
pushf
xchg
mov
jp
movsl
pop
test
inc
jns
xchg
notl
xor
mov
pushf
jl
lock
jg
inc
or
mov
cmp
repz
inc
lock
xor
jecxz
out
ss
outsb
xchg
mov
pushf
imul
out
xchg
push
pop
rol
push
inc
jno
and
xchg
cld
mov
jecxz
pop
in
movsl
jmp
mov
leave
sub
test
cmp
pop
mov
push
loopne
inc
int3
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
lock
or
jae
push
adc
sbb
pop
xor
cmc
sub
mov
int
out
and
jle
inc
daa
pushf
pop
mov
outsb
xchg
clc
fdivs
stos
sub
inc
test
fmul
lcall
mov
or
loopne
mull
popf
sbb
push
lcall
daa
pop
mov
push
cmp
fs
xchg
in
ficompl
stos
mov
icebp
in
loopne
sub
inc
adc
xchg
xor
pop
xchg
xor
sub
and
js
ret
clc
sbb
ja
in
cmc
mov
sub
mov
adcl
leave
movsb
dec
cli
shl
cs
mov
out
and
test
and
or
dec
sbb
pop
scas
lock
mov
jl
mov
mov
in
add
mov
sub
push
cmp
pop
add
add
pop
pop
lock
xchg
rcrb
adc
aas
push
rcrb
pop
jns
dec
cltd
sbb
sbb
jmp
xchg
sbb
push
lock
inc
xchg
fwait
xor
ds
jno
cmpsl
ja
xchg
lods
sarb
fwait
inc
in
gs
cs
lea
imul
jg
data16
and
or
test
xor
insl
dec
clc
dec
xchg
stos
out
xchg
movsb
dec
mov
lret
movsb
mov
pop
outsl
inc
sarl
xchg
push
cmc
push
mov
pop
dec
xchg
jnp
lds
insl
gs
mov
mov
cwtl
sub
testl
sub
xor
or
outsl
test
lods
xor
mov
jae
pop
fnstenv
lret
aad
loop
sti
loop
loop
icebp
iret
leave
mov
shl
xchg
mov
das
jle
jmp
dec
mov
push
jp
out
lahf
icebp
pop
cmpsb
jg
or
or
or
or
or
or
or
or
or
or
or
or
in
cs
aas
enter
imul
or
xor
test
xchg
adc
add
add
data16
ret
add
jnp
shlb
inc
cmp
gs
test
insb
pop
pop
fsts
or
adc
fnsave
test
popa
mov
lds
inc
pop
roll
xchg
lds
mov
cwtl
repnz
aas
dec
cmp
xchg
cmp
repnz
int
add
popf
jecxz
out
aaa
mov
adc
xchg
cs
or
insb
adc
ljmp
decl
jg
hlt
out
pop
xor
mov
dec
cli
lea
dec
adc
adc
pop
ficompl
dec
sub
cltd
outsb
aas
dec
jno
adc
and
negl
clc
out
nop
repnz
sub
loop
outsb
outsb
sub
sbb
and
xchg
lock
push
into
sub
ljmp
inc
lock
aas
xor
push
add
sub
pop
lods
jle
movsb
and
mov
pushf
and
xchg
cltd
adc
lret
mov
xor
cmpsb
mov
ljmp
mov
jo
pop
addb
dec
sub
and
into
rcrb
into
dec
jle
mov
ds
mov
repnz
repz
orb
in
dec
movsb
lret
out
aaa
lea
jns
xchg
sbb
push
fs
out
mov
stc
pop
xchg
cld
adc
sbb
and
mov
sahf
enter
stos
fdivl
leave
jl
jecxz
fs
sbb
fmuls
adcb
adc
lret
bound
sbb
sbb
push
push
adc
sbb
sahf
orb
xchg
sbb
xor
pop
pop
mov
jecxz
push
cmp
sbb
iret
pop
add
sbb
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
cmpsl
mov
sbb
jge
and
xchg
bound
rcrl
jne
cld
push
cmp
pushf
and
les
icebp
sti
divb
cmp
pop
fwait
aas
jo
enter
push
lcall
or
jne
xor
divl
test
loopne
scas
mov
xchg
cmp
dec
jo
clc
cs
dec
int3
add
jge
jl
dec
inc
repz
ljmp
adc
or
pop
cmp
push
popf
popa
andb
sub
std
pop
xchg
in
test
push
xor
adc
push
mov
and
jle
lret
pushf
push
and
lret
push
negb
movsl
into
je
insb
jb
jb
outsb
mov
or
sbb
mov
rcrb
push
mov
cmpsb
pushf
bound
push
dec
xlat
add
and
insb
jb
push
rorl
sbb
clc
push
sub
mov
arpl
jb
push
xchg
lret
addr16
adc
xchg
popa
push
mov
xor
aam
mov
fnstcw
mov
sahf
rol
cld
leave
xor
fnstsw
sbb
pop
or
das
mov
adc
andl
mov
sbb
xchg
cmp
or
les
xchg
pop
dec
pusha
out
call
lock
sub
adc
adc
outsb
sub
pop
repnz
gs
cli
push
leave
fsts
lds
dec
add
adc
sbb
push
loope
pop
xchg
push
xor
lcall
test
mov
es
js
popf
test
fdivrp
cmp
dec
fisubl
arpl
or
out
out
cmpl
setno
push
pop
outsb
add
or
or
or
or
or
or
or
or
or
or
or
mov
pop
jl
test
mov
cwtl
jmp
sarl
mov
ret
in
in
sbb
loop
hlt
fisttps
xchg
mov
pop
dec
fprem1
jbe
add
adc
or
pop
pop
jg
enter
jo
push
roll
and
fwait
out
hlt
rolb
mov
push
adc
cmpsb
jne
icebp
fwait
adc
xor
popf
cmp
data16
inc
xor
rorb
mov
sub
scas
out
jbe
imull
imul
fldcw
outsb
cmp
lds
mov
add
repz
pop
pop
call
stc
nop
adc
push
dec
arpl
lret
lds
aam
lahf
stos
stos
lret
add
ds
jb
fmuls
sbb
aas
jl
popa
ss
in
mov
dec
push
add
dec
rcl
pop
add
inc
push
ljmp
andb
mov
or
dec
cmpsb
and
dec
push
movsl
loopne
stos
fstl
dec
dec
adc
and
lock
sbb
or
in
cld
fildl
outsb
je
xchg
cs
jne
mov
sbb
xor
in
sahf
jo
push
sub
jg
sub
in
hlt
lea
cmp
push
aas
lock
xchg
enter
dec
xchg
pop
div
jmp
or
dec
inc
stos
setle
mov
adc
jmp
mov
and
sub
xchg
les
sbb
mov
mov
sub
jne
sbb
data16
outsl
out
clc
and
jnp
push
and
cs
jnp
fbld
and
pop
jnp
sbb
mov
mov
lcall
xchg
lods
xor
dec
lock
cmpsl
call
loopne
sub
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
stos
jns
and
int
or
sub
inc
js
cs
mov
repnz
insl
sbb
outsl
mov
adc
sub
mov
outsb
pop
mov
nop
lds
shll
mov
xchg
dec
sub
jmp
adc
add
lea
lret
cmc
lcall
jp
mov
fisubs
dec
xlat
rolb
push
add
imul
ss
and
in
inc
loop
cmp
add
lods
mov
xchg
das
jo
cwtl
loopne
cmc
pop
sbb
mov
adc
or
jecxz
mov
stos
rcrb
mov
mov
inc
jp
repnz
mov
sub
bound
jns
mov
popa
lock
sub
cmp
out
icebp
scas
push
mov
mov
icebp
xchg
push
adc
call
push
xor
mov
daa
enter
mov
mov
loop
and
push
pinsrw
fiaddl
sti
push
in
mov
xchg
push
pop
fistl
sahf
outsb
sbb
mov
push
mov
in
aas
add
mov
push
test
and
repnz
mov
fimull
push
pop
and
add
das
shl
cld
ss
mov
in
cmp
std
mov
dec
insl
cltd
dec
push
int3
test
jge
mov
loop
enter
out
shll
pop
call
sbb
mov
lret
nop
insb
loope
decb
dec
add
fildl
call
sub
xchg
push
dec
call
scas
js
sbb
jae
pop
out
clc
add
mov
pop
push
clc
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
aaa
test
mov
push
scas
inc
ret
and
vpmacsdql
addl
sti
push
push
push
andl
lods
out
add
push
push
cmc
fadds
inc
ss
push
movsb
lret
sub
add
jo
rcl
cmp
insl
icebp
and
add
add
pop
imul
inc
push
jecxz
dec
imul
fidivs
call
mov
cmp
xor
cmp
nop/reserved
xor
push
xor
mov
into
xchg
inc
pusha
add
dec
sbb
adc
cmp
xchg
push
test
lea
fxch
pop
push
jle
push
in
jae
std
lcall
aam
pop
jmp
loopne
nop
xchg
add
pop
cltd
pusha
xorb
int3
repnz
inc
nop
popf
flds
mov
mov
js
jmp
jle
leave
roll
ficompl
cwtl
dec
mov
and
dec
xlat
in
xor
xchg
por
jnp
pop
out
in
out
aaa
test
loopne
dec
aas
xor
jnp
mov
mov
mov
and
xlat
mov
in
xor
jo
repnz
iret
mov
jl
pop
lret
and
call
out
adc
inc
jae
sub
and
dec
imul
sbb
sbb
mov
in
dec
jnp
in
mov
xor
lret
out
ret
sarl
insb
lcall
and
ret
xor
push
int
stos
das
mov
inc
test
xorb
xchg
outsb
loop
add
xor
js
inc
aam
enter
pop
ret
sub
mov
add
int3
xchg
xchg
dec
in
cmc
jb
xchg
out
push
pop
clc
cwtl
shlb
in
push
push
mov
sahf
das
aad
push
movsb
xor
or
or
or
or
or
or
or
or
or
or
or
or
fnstcw
inc
xchg
lods
jl
fwait
mov
or
subb
add
out
pop
and
jmp
js
mov
decb
dec
shrl
dec
jae
jno
push
int
cli
out
aam
mov
sub
aaa
jno
inc
imul
and
loopne
andb
xchg
jns
inc
xlat
dec
das
test
or
lods
cmpl
sbb
inc
fistps
push
sbb
xchg
movsl
inc
push
push
add
mov
push
enter
scas
fs
sarb
dec
push
dec
cltd
jae
nop
pop
insl
push
out
pop
inc
or
xchg
fdivrs
inc
jl
or
pop
xor
cmpb
inc
mov
jge
dec
scas
leave
mov
imul
scas
loop
cmp
jb
insl
cmp
sbb
inc
es
dec
sbb
sbb
out
cmpsl
or
mov
divl
inc
dec
xchg
inc
xlat
es
shr
adc
jmp
pop
icebp
add
mov
jg
cmp
lcall
outsl
arpl
lret
mov
inc
fs
xchg
call
sbb
add
push
ljmp
jnp
into
cwtl
jb
sub
roll
adc
or
frstor
andl
add
in
mov
loope
mov
in
pop
cs
cltd
cmp
inc
or
sbb
xor
in
mov
sahf
mov
shrl
or
lcall
fsubp
or
lea
sub
cmc
cmp
jno
sub
mov
mov
shlb
inc
addr16
fwait
jecxz
xor
xchg
xchg
mov
fdivs
mov
ss
imul
mov
inc
lea
adc
cmc
out
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
jae
je
lock
or
mov
lcall
dec
repnz
popa
push
jecxz
stos
xorl
ret
out
or
out
sahf
jge
imul
push
push
cmp
inc
sub
push
push
dec
outsb
push
push
loopne
ret
pop
jo
into
movsl
push
pop
cmpsb
gs
imul
mov
cmp
inc
xor
addr16
repz
movsb
mov
icebp
jmp
and
or
xchg
and
or
cmp
in
pop
ja
xchg
sub
pop
fsubs
fsubrp
dec
lods
or
rcl
and
lea
inc
or
arpl
or
cmp
xor
rol
nop
js
sbb
mov
jmp
mov
jmp
inc
inc
mov
lret
jge
or
imul
mov
outsl
mov
sub
pop
mov
sbb
push
inc
xchg
pop
pop
lcall
sti
pop
add
iret
ljmp
push
clc
movsb
clc
enter
aaa
adc
mov
nop
inc
les
xor
sbb
inc
jnp
dec
dec
fdivr
or
xchg
arpl
inc
jp
lods
cli
lea
shl
mov
adc
push
out
mov
jecxz
push
xchg
xlat
push
pop
aaa
bound
inc
sbb
pop
jp
sub
add
and
jno
jmp
inc
rorl
and
std
pop
mov
pop
out
mov
mov
pop
cmp
jmp
ss
xor
lock
xor
push
adc
xchg
dec
bound
inc
imul
outsl
mov
dec
lds
jb
push
les
or
xor
or
or
or
or
or
or
or
or
or
or
or
or
add
popa
push
xor
hlt
xchg
in
lods
stos
insb
aad
inc
fcmovnb
and
xchg
cmc
loope
pusha
cltd
xor
test
in
test
sbb
and
mov
loope
pop
int3
and
push
not
mov
leave
push
jmp
xor
jo
sub
jnp
imul
shrl
pop
push
ja
cmc
sti
stc
or
lcall
into
dec
in
nop
repnz
fs
add
or
mov
popa
je
xchg
cmpsb
bound
jl
cmc
call
fs
push
dec
sbb
mov
adc
sbb
sbb
sbb
jae
push
ret
mov
inc
lret
paddd
pop
push
js
bound
rcl
ficoms
bound
mov
insb
xchg
and
cmp
push
push
arpl
cmc
out
pushf
enter
push
mov
push
test
pop
dec
aaa
fldenv
ret
mov
call
clc
cmpxchg
repz
cmp
out
inc
inc
cli
mov
dec
out
add
cmp
xchg
clc
sbb
outsl
xchg
sub
and
pop
dec
mov
jnp
push
int3
inc
and
lods
cmp
xor
sbb
dec
mov
rolb
aas
pop
xchg
aam
mov
or
mov
mov
andl
fistl
call
nop
lret
mov
and
std
push
push
and
popa
scas
or
xor
adc
sub
aam
hlt
push
mov
dec
rorl
cmc
fsubr
mov
push
dec
out
or
mov
mov
movsl
icebp
out
scas
pop
into
xlat
inc
mov
iret
lahf
popa
loop
mov
and
jecxz
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
xchg
adc
xchg
push
fsubrl
cs
fdivrs
lret
fcmovnu
notl
insb
jmp
mov
out
and
pop
inc
fildll
adc
pop
fbstp
ja
push
xor
and
addr16
lret
std
xor
fiaddl
push
ret
dec
mov
aas
sbbl
pop
xchg
cmp
in
loop
addr16
test
or
outsl
cmp
jmp
cli
xchg
xchg
sbb
sub
inc
or
lock
add
mov
xchg
cmpsl
push
or
push
mov
jp
pop
lods
mov
and
shl
pop
loop
nop
cmpsl
and
enter
add
into
mov
es
hlt
outsl
adc
or
jae
loope
loope
clc
dec
loop
dec
sub
sti
push
or
sub
mov
or
jecxz
pushf
rclb
in
jns
mov
ja
mov
movsl
imul
cmp
sub
insl
sbb
jb
push
pop
and
xor
out
or
ljmp
xor
sbb
aam
and
mov
pop
jle
popf
xor
cmovnp
popf
int3
adc
cmp
leave
js
out
repz
insb
mov
pushf
mov
inc
cmc
or
sub
pop
or
loopne,pt
ljmp
and
mov
daa
mov
dec
cmpsb
add
or
cld
sub
lahf
or
cltd
sub
fistl
out
sub
aam
stc
add
jno
jp
push
inc
aad
lods
jo
iret
lret
inc
mov
xchg
jle
dec
push
dec
sbb
lahf
cwtl
sub
lcall
fst
push
aad
adc
and
fadds
ret
xor
and
cmc
fbld
or
call
lock
mov
movsl
rcrl
test
cmc
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
out
pop
pushl
cmp
jne,pn
js
push
jecxz
iret
or
and
xor
cmp
push
pop
inc
jg
xor
inc
sti
es
roll
adc
or
cmp
xchg
jecxz
mov
dec
mov
hlt
inc
filds
inc
addb
je
stc
lcall
mov
add
test
dec
insb
xor
lock
insb
int3
xor
inc
out
and
pop
in
shll
rep
or
jnp
sarl
xor
sarl
cmp
jl
mov
je
rcl
jg
mov
mov
inc
ds
jmp
fwait
bound
mov
dec
addl
xlat
mov
cltd
test
mov
cmp
imul
sbb
xchg
pop
xor
fsubp
jb
dec
cmp
out
gs
test
cmp
xor
xchg
pop
enter
xor
jno
ja
out
mov
and
sub
in
push
cltd
dec
push
inc
inc
sub
cwtl
int
das
loope
push
push
mov
xor
insb
xor
pop
push
sub
adc
xchg
xor
outsb
fmull
mov
mov
sub
inc
addr16
push
mov
xchg
lahf
mov
mov
fdivl
xchg
in
ss
arpl
ret
push
adc
mov
fstp
xchg
scas
push
sbb
and
mov
sub
out
xchg
sub
inc
sbb
std
sbb
add
pop
cmp
aas
je
xor
out
xor
add
aaa
jae
outsb
push
cmp
fidivl
mov
cmp
cmp
dec
outsb
cmp
fiaddl
inc
add
movsb
sbb
jb
mov
clc
das
fs
ret
push
inc
xchg
rcr
repnz
fdiv
in
or
or
or
or
or
or
or
or
or
or
or
or
or
test
daa
cs
dec
mov
call
pop
push
shlb
inc
out
lods
jnp
dec
pop
dec
ds
mov
and
push
inc
aas
ror
and
jmp
sub
mov
cld
push
enter
add
and
mov
cmc
test
mov
push
sti
ret
push
gs
rclb
xor
push
jae
lcall
xor
adc
pop
adc
jmp
and
stos
mov
pop
mov
lcall
adc
out
jns
fdiv
insb
icebp
inc
rclb
insb
lods
pusha
xor
and
cmpb
mov
mov
inc
fs
fsubrs
ror
icebp
out
repnz
popf
ret
rclb
jns
fwait
sbb
leave
mov
cmp
mov
inc
cmp
adc
daa
inc
xchg
xchg
sbb
sub
cmp
orb
push
sub
sub
mov
xchg
lahf
test
cmpb
and
push
addr16
cmp
sub
shll
mov
cmp
shl
arpl
xor
dec
notl
bound
fistps
loope
in
sub
push
loop
add
jno
mov
dec
push
cld
in
jmp
sbb
and
cmp
movsl
sbb
or
cli
bound
stc
cmp
and
mov
clc
xchg
mov
xchg
add
push
cli
shrl
out
lcall
pop
dec
xor
xchg
aam
xor
into
add
pop
push
in
mov
push
xor
cltd
repz
movsb
pop
fdivs
fsubrs
loop
or
push
daa
orl
ljmp
sbb
dec
xor
test
js
jne
adcb
dec
or
or
or
or
or
or
or
or
or
or
or
or
in
mov
push
mov
mov
jnp
pop
xchg
inc
push
nop
jmp
sarl
popa
loopne
sub
sub
sub
filds
popf
loope
outsb
sbb
pop
inc
jnp
ds
add
pop
movsb
dec
cmp
out
jle
mov
push
dec
lods
ljmp
mov
ret
jmp
push
inc
in
push
loop
iret
jmp
push
cmp
icebp
push
xchg
dec
stc
std
sub
stos
sbbb
adc
xchg
mov
and
fcomip
jp
jb
or
or
jne,pt
out
stos
xchg
les
scas
push
pop
lock
push
pop
sbb
andl
add
sbbb
cmp
divl
jmp
scas
jae
leave
sbb
out
adcl
jge
into
cs
dec
dec
sub
cld
xchg
pop
jo
pop
fdivrl
ljmp
fld
jno
push
sub
jbe
jmp
pop
mov
cmc
rep
pusha
call
cs
out
imul
sub
jle
push
mov
hlt
push
xchg
push
mov
lahf
jmp
cmp
rolb
sub
inc
rcl
push
xor
add
out
dec
ret
out
lods
inc
rclb
insl
das
bound
mov
pop
jbe
les
or
cmp
xchg
and
out
lret
mov
imul
in
add
testl
test
sbb
aad
add
out
jne
scas
inc
dec
cmp
pusha
jecxz
repnz
lock
mov
sub
addr16
push
pop
or
sarb
clc
cmpsl
sti
inc
mov
mov
inc
stc
lock
xchg
push
push
sti
mov
mov
out
fmull
or
or
or
or
or
or
or
or
neg
dec
xchg
jae
mov
stos
jo
fmuls
dec
cmp
loop
lods
divb
lcall
pop
and
sub
mov
ret
je
add
xchg
popa
mov
adc
movsb
test
xchg
cmp
sub
dec
inc
lea
xchg
jae
outsb
enter
mov
rclb
cmpsb
cs
cmp
hlt
and
int3
clc
sbb
adc
fisttpll
jg
jecxz
adc
xchg
push
out
push
cwtl
or
xor
jo
push
adc
cs
pop
arpl
in
call
inc
popa
xor
mov
cs
sub
test
test
popa
pop
xchg
sbb
sbb
sbb
xor
push
loop
and
outsb
loope
loope
cmp
insb
push
in
scas
in
aaa
and
pop
inc
mov
xor
mov
lret
inc
jae
push
daa
xor
or
sbb
jg
je
sbb
lock
and
push
cmpsb
rol
adc
out
nop
in
popa
mov
ret
leave
push
addr16
xchg
int
pop
dec
mov
xchg
hlt
xchg
add
ss
aaa
pop
jg
outsb
fs
sub
fldenv
insl
hlt
movsl
sub
xor
xchg
sub
nop
mov
jmp
sbb
sub
sahf
dec
push
sub
jb
std
rorb
int
inc
filds
into
scas
inc
pop
lods
mov
cld
cld
sub
jnp
ss
cmc
dec
and
or
ret
sbb
jb
jb
movsl
cli
not
xchg
mov
jbe
or
xor
push
leave
repz
mov
cmp
fists
orl
inc
inc
cmpsb
xor
and
push
mov
sbb
dec
mov
shll
inc
hlt
into
and
mov
push
mov
or
or
or
or
or
or
or
or
or
or
or
jno
popa
test
push
xor
mov
fsubrl
add
mov
clc
enter
pop
xor
xchg
mov
jbe
aaa
movsb
xor
adc
cltd
jecxz
inc
sub
les
and
cs
mov
sti
mov
xchg
into
cmc
jbe
addr16
inc
adc
xor
pop
xor
bound
in
xlat
adc
fdivrl
cli
jne
aas
fcmovu
mov
repz
pop
mov
mov
jbe
mov
stc
in
lea
imul
mov
neg
cltd
aaa
fcomi
movsb
push
xchg
mov
adc
adc
and
jecxz
sub
enter
test
clc
pop
call
push
or
loope
stos
xchg
mov
imul
push
dec
push
xchg
andb
mov
ret
mov
arpl
ror
lret
sbb
mov
jmp
lea
enter
int3
and
sbb
in
aaa
bound
dec
jnp
in
mov
loop
inc
hlt
addr16
gs
xlat
shl
std
mov
das
sbb
sub
xchg
jns
pushf
or
mov
push
mov
outsb
popa
inc
aad
add
dec
mov
xchg
mov
push
cmpsb
ret
xchg
jmp
fstpl
in
mov
add
mov
sub
addr16
push
repz
pushf
inc
out
jbe
icebp
int
imull
js
mov
jbe
pop
into
inc
popf
ficoms
dec
sub
je
aam
bound
sub
add
fiaddl
pop
and
push
shr
sbb
dec
scas
int3
lahf
in
fistpl
xchg
and
cld
lods
cmpsb
imul
outsl
add
rorb
and
mov
jb
negl
iret
mov
push
adc
add
lcallw
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
jmp
adcl
cmp
cmp
or
sub
jb
inc
test
and
lea
push
xchg
or
cli
push
adc
pusha
repz
popf
add
pop
xlat
dec
lret
sbb
pop
arpl
movsb
cltd
nop
test
push
cli
mov
pop
incb
mov
jo
out
push
inc
xor
jo
or
xchg
push
sub
sbb
pop
aaa
and
pop
into
jo
ds
mov
jne
xor
xchg
dec
nop
sub
sub
add
dec
fidivrl
sub
negb
pop
sbb
xor
push
daa
mov
loop
in
or
imulb
movsb
or
jne
pusha
shrb
imul
pop
sbb
sub
cmp
aaa
loope
mov
hlt
push
adc
sbb
sbb
pop
pop
rol
mov
test
pop
idiv
pop
jo
inc
lock
sbb
lock
clc
pop
push
mov
mov
inc
idivb
mov
xor
loopne
hlt
lock
leave
pop
and
outsb
lds
xor
jbe
inc
loope
mov
sbbl
mov
lods
xchg
jno
push
mov
aad
or
or
cmpl
fnstcw
add
push
pushf
ds
mov
or
rcrb
jb
push
inc
dec
es
jb
outsb
repz
js
sub
repz
cmp
sbb
mov
sbb
add
mov
pop
cld
push
std
pop
jmpw
push
add
je
out
pop
setp
or
jno
push
cld
push
aaa
mov
sahf
js
in
cmpb
jb
inc
sbb
or
stos
push
clc
xlat
lret
adcl
js
pop
out
addb
or
or
or
or
or
or
or
or
or
or
test
mov
bound
lret
xchg
inc
push
and
dec
call
icebp
cmpsb
push
mov
cmp
jmp
hlt
xchg
imul
push
btr
loopne
and
jb
mov
or
push
push
sbb
cmp
repz
lods
adc
data16
push
or
fstl
loope
sbbb
mov
fcmovne
adc
fcoml
add
inc
outsl
in
andl
xor
mov
xor
lods
sub
adc
jbe
or
push
adc
push
test
ret
cmp
xchg
xor
add
loop
xlat
int
jge
push
push
jb
out
cmpsl
push
fcmovbe
pushf
loope
leave
mov
clc
mov
dec
jp
sar
or
sub
jecxz
hlt
jo
push
inc
insb
fldcw
ss
inc
loope
and
ljmp
inc
int
adc
push
xlat
lret
adc
dec
sbb
fstpt
adc
xchg
mov
xor
cs
pop
addr16
jbe
enter
es
push
or
inc
rcrb
inc
inc
addr16
pop
mov
insl
sub
pop
sub
xor
sbb
pop
sub
leave
xchg
ret
shlb
lcall
repz
sbb
mov
lock
call
out
pop
pop
bound
fwait
mov
repnz
mov
scas
gs
fdivs
call
sub
aam
iret
icebp
ss
lcall
sbb
inc
movsl
lods
cld
addl
add
repz
push
ja
dec
jp
stc
xlat
sbb
repnz
mov
or
lea
stos
enter
adc
adc
push
push
or
repnz
lock
inc
and
xor
push
xchg
ret
sub
or
or
or
or
or
or
or
or
sbb
add
jae
xchg
cmp
imul
in
scas
mov
ljmp
sub
fiadds
xchg
dec
jo
pusha
or
call
daa
dec
adc
aas
or
push
adc
cmp
push
pop
adc
xchg
xchg
out
divl
cmpsb
lock
insb
test
inc
push
sub
hlt
xchg
bound
lods
into
popa
aam
jmp
pop
push
inc
jae
lods
sbb
test
les
daa
mov
or
jg
dec
push
clc
xchg
fwait
ljmp
xchg
xor
fldenv
jmp
mov
fistps
dec
fists
imul
add
xchg
dec
imul
sahf
dec
les
mov
dec
mov
or
cs
mov
mov
hlt
xchg
cmp
cltd
inc
adc
test
movsl
mov
inc
loope
mov
or
pushf
loop
aad
popa
or
mov
hlt
jle
and
arpl
out
or
loopne
shl
push
cmp
mov
call
adc
sbb
xchg
out
pop
pop
adc
addr16
push
push
cmp
mov
sbb
dec
lock
es
pop
inc
xchg
push
add
dec
sbb
pop
inc
mov
mov
mov
adc
sub
and
mov
sbb
shlb
ds
xor
xor
cmpsl
lea
add
outsl
lods
in
mov
int
sbb
lods
insl
push
and
iret
lods
mov
loopne
or
dec
movsl
in
cmp
into
orb
mov
xor
insl
xor
fstl
mov
in
sub
jle
xchg
inc
hlt
sbb
lcall
mov
stos
cmpsl
aad
std
pop
pop
popf
jbe
jmp
jne
shrb
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
dec
out
push
xor
xlat
push
int3
imul
jp
sub
jno
push
mov
adc
sahf
xor
adc
fdivrl
in
lcall
or
hlt
int3
cmpsb
inc
sbb
bound
jno
fnstcw
pop
mov
cmc
jl
jp
pop
sub
lds
inc
std
push
sub
roll
or
cltd
push
xor
jae
xorl
notl
ret
xchg
fwait
imul
in
ss
xlat
pop
out
pop
cmp
out
icebp
adc
and
lods
ja
leave
jecxz
cmpsl
in
lret
ror
test
add
out
cltd
inc
pop
mov
mov
sbbb
ficomps
xor
js
ja
sub
xor
lods
lods
pop
call
sbb
divb
pop
and
popf
pop
fwait
push
sub
mov
sub
push
sbb
rep
lock
mov
jo
inc
pop
sub
inc
testl
or
pop
ret
test
lods
or
shlb
test
sbb
daa
imul
cmpsb
fcompl
cmp
push
into
lock
push
js
adc
loop
insb
push
dec
inc
sbb
jmp
lret
sahf
repz
outsb
xchg
push
aad
test
sbb
mov
pop
push
dec
arpl
jg
push
sub
xchg
out
fistps
push
pop
aaa
xchg
rolb
pop
xchg
xor
mov
or
jno
jno
adc
mov
sub
out
jl
mov
mov
mov
divb
sbb
faddl
scas
jmp
push
xlat
xorb
idivb
and
lret
xor
mov
add
push
aas
insl
mov
rorb
les
rorb
inc
aam
dec
cwtl
mov
mov
push
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
jge
mov
out
addr16
daa
adc
call
inc
jg
push
ret
popf
and
mov
mov
test
repnz
icebp
sarb
pop
mov
jo
jns
enter
movl
jb
xor
sbb
sub
push
pop
mov
out
sbb
test
cs
ss
inc
sub
les
test
jecxz
push
fsub
das
inc
imul
ljmp
and
addr16
std
dec
call
cld
adc
and
inc
and
xor
xor
loop
push
xor
push
cmp
mov
loopne
adc
fmull
loope
dec
sbb
pop
adc
sbb
hlt
out
push
jmp
cld
sub
or
xor
push
jns
inc
cltd
jne
aad
in
into
jecxz
lods
nop
out
lret
sbb
mov
mov
shll
cmpsb
les
insb
mov
nop
sbb
aad
add
popa
jle
movsl
bnd
cwtl
lds
in
add
mov
and
xor
pop
jle
push
pop
sub
ret
sarb
add
push
or
mov
push
pop
push
xchg
dec
sbb
pop
mov
pop
cmpsl
shll
mov
fwait
inc
std
xchg
sbb
sahf
icebp
inc
lret
cli
popf
pop
js
ret
dec
pop
insb
sbb
sbb
pop
mov
call
imul
inc
push
ljmp
sub
push
movsl
ret
and
cmp
xor
dec
xor
test
pusha
leave
mov
xchg
xchg
and
inc
and
mov
dec
cwtl
jnp
testl
jno
add
cmp
pop
mov
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
jno
cmpb
pusha
push
out
int3
rcr
in
jns
mov
ret
loope
out
scas
shlb
cmp
mov
jns
adc
adc
mov
dec
xchg
fcomps
bound
les
jp
sbb
mov
aaa
lds
adc
lods
adc
in
sbbl
dec
in
fistpll
andl
sbb
mov
push
int3
fcomip
jae
jecxz
loop
fidivl
sub
mov
lods
int
add
daa
push
xor
outsl
shr
sub
mov
je
sbb
cmp
inc
imul
insl
gs
push
sbb
rclb
push
sbb
aaa
mov
push
js
xchg
or
xchg
add
or
arpl
in
cmp
adc
sti
clc
jne
jne
clc
adc
add
and
or
mov
call
and
adcb
sahf
mov
pop
repz
icebp
leave
xchg
lods
lock
mov
pop
xchg
aad
sahf
jmp
arpl
mov
cmpsb
or
mov
add
sbb
adc
outsl
xchg
out
stos
xchg
lods
inc
mov
mov
in
lret
test
scas
bound
test
pop
jns
repz
std
sbb
in
cmp
adc
popa
xchg
adc
pop
ss
ror
adc
sbb
push
jmp
add
js
jae
dec
pop
adc
pop
in
and
fsubrp
lea
jp
es
dec
repnz
mov
or
xor
sub
and
or
clc
xor
cmc
push
or
mov
add
adc
into
stos
clc
mov
mov
jae
mov
lock
std
xchg
fmuls
cli
xchg
out
andb
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
cmc
pushf
inc
arpl
cmp
enter
daa
mov
xchg
sti
xchg
sub
inc
out
int3
add
xlat
nop
out
out
add
call
popf
jg
push
aaa
and
jl
dec
sbb
cmp
fimuls
push
jle
inc
ja
pop
adc
shr
mov
insl
mov
lods
adc
sahf
dec
fbstp
cmp
dec
sub
push
lods
mov
xchg
scas
adc
lds
mov
xchg
sbb
mov
adc
adc
lahf
scas
lods
and
cmpsl
push
cmovnp
xchg
xchg
cmovp
lods
pop
out
gs
mov
push
mov
push
out
sarb
daa
stos
or
fisubs
or
outsb
in
push
cmp
jb
shrl
or
in
cmp
cli
dec
xorl
addr16
mov
mov
je
aam
mov
loope
dec
mov
jno
roll
push
ja
idivb
and
xor
mov
ret
xlat
imul
repz
sub
sahf
mov
mov
jno
cwtl
or
cmp
sub
add
xchg
and
jl
mov
jl
xor
test
xchg
cwtl
imul
pop
jbe
push
adc
mov
lea
jp
adc
lea
and
or
pop
sub
adcl
xchg
aaa
push
rcrb
or
and
sub
xchg
imul
xor
sub
cmpsb
jp
decl
add
push
outsb
scas
add
iret
ret
cmp
and
repnz
push
mov
bnd
into
xor
fs
add
pop
loope
lret
xchg
sbb
mov
in
or
pop
dec
adc
pop
and
or
loope
ret
dec
lock
jbe
in
mov
rcrl
xor
call
pop
test
adc
ret
fdivrp
popf
cmp
push
add
out
pusha
dec
cltd
cmp
ljmp
daa
movsb
mov
pop
rcl
aaa
pushf
mov
push
lahf
cmp
or
lods
mov
icebp
jbe
je
push
ja
and
mov
mov
sarb
sar
inc
or
rcl
and
aaa
js
xchg
imul
sbb
xor
push
sbb
pop
test
loopne
dec
push
sub
pop
insl
incb
mov
dec
mov
sbb
jp
dec
dec
inc
pop
xor
pushf
dec
push
sbb
cmp
in
ffree
push
dec
sub
jg
sbb
dec
xchg
aam
lods
or
call
ljmp
lods
sbb
or
jle
add
pop
pop
in
pop
daa
xor
adc
sti
sbb
pop
imul
xor
ss
cmp
cmp
mov
dec
repz
mov
scas
pop
les
xchg
push
insl
xchg
iret
sbbb
int3
add
cmp
pop
loop
cmc
mov
mov
mov
jle
stc
cli
sahf
mov
sub
adc
out
add
xor
sti
repnz
mov
lcall
and
popf
insl
sbb
dec
inc
adc
das
xchg
adc
insb
pusha
enter
xchg
inc
sahf
adc
pop
inc
stos
cmp
outsb
pop
enter
add
add
push
mov
leave
call
or
arpl
dec
dec
fsubr
jns
inc
jo
pop
mov
cwtl
call
add
xor
scas
or
xlat
pop
or
jnp
cltd
push
enter
nop
imul
in
or
lret
jle
movl
movsb
call
mov
xor
fnsave
mov
out
pop
adc
inc
jge
shlb
dec
cmpsl
test
call
dec
in
cld
inc
mov
into
push
gs
into
adc
lcall
inc
add
or
lock
dec
iret
mov
divb
pop
push
jg
lds
lock
mov
pop
js
jmp
adc
das
xchg
int
rorb
jb
jp
sbb
mov
cld
xchg
je
sub
dec
fcoml
jb
adc
cli
sub
jne
or
jp
ficoms
cmovae
mov
iret
or
rcrl
mov
jbe
and
into
out
sub
lret
sbb
aad
mov
mov
push
repz
fistps
pushf
icebp
mov
or
mov
mov
dec
dec
mov
pop
jg
sbb
in
mov
lahf
sti
cmp
rclb
rorb
fmuls
adc
ret
or
dec
push
lret
mov
mov
mov
adc
or
outsb
jg
sub
ret
cli
add
cltd
ljmp
lret
lock
xor
call
mov
inc
and
dec
push
add
add
add
mov
dec
pop
or
rolb
add
outsb
loopne
lret
bnd
mov
sahf
xchg
or
pop
dec
and
dec
dec
ljmp
xor
pop
push
dec
mov
imulb
push
inc
sbb
jmp
dec
pop
add
psllq
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
push
pop
ljmp
sbb
aas
mov
outsl
fcom
insl
rcrb
sahf
or
lods
dec
xor
mov
cltd
xorb
mov
jno
arpl
lea
pop
in
out
jo
dec
and
xchg
insb
sbb
inc
sahf
cmpsl
xchg
jecxz
jne
movsl
shrl
mov
aaa
pop
popf
repnz
loopne
ljmp
jecxz
gs
rcrl
push
test
sub
ljmp
pop
inc
stos
inc
enter
jne
clc
sub
test
sbb
out
mov
call
mov
or
mov
mov
inc
lods
adc
out
in
sbb
out
or
or
push
dec
fstpt
mov
leave
jae
push
sbb
imul
in
insb
decl
sahf
shl
jo
fsubrp
push
movsl
fsubs
js
loope
imul
ljmp
xchg
aam
ljmp
mov
mov
fildll
jle
or
out
shlb
arpl
jo
sbb
jmp
fsts
pop
mov
pop
addl
fcom
jmp
jo
xor
sbb
lret
cmp
das
push
xchg
iret
scas
pushf
sub
or
xor
andb
pop
adc
aaa
dec
mov
mov
rep
mov
push
xchg
jge
and
addr16
sarb
xor
push
push
fwait
loopne
outsb
cmp
inc
adc
mov
pop
push
add
sub
xchg
dec
rep
es
pop
fistpl
cmpsb
push
mov
mov
shl
out
icebp
push
or
dec
mov
sub
inc
sahf
divb
subl
xchg
adc
push
jp
repz
jecxz
or
mov
pop
mov
cmp
xor
popf
mov
or
or
or
or
or
or
mov
cmp
imul
xlat
mov
sub
pop
movsl
fs
loop
idiv
insb
movsl
xchg
arpl
jns
and
sub
in
mov
int3
js
outsb
pop
inc
fcmovb
inc
mov
loope
dec
daa
repnz
mov
into
ffreep
inc
dec
sbb
xchg
pop
push
pop
mov
and
std
xlat
shrb
mov
stos
pusha
and
cmpb
xchg
mov
inc
dec
xchg
dec
lds
hlt
add
mov
mov
mov
jp
mov
pusha
sti
sub
negl
mov
mov
int3
mov
cmp
sbb
test
hlt
and
adc
pop
call
hlt
aam
lds
outsl
xor
lock
ds
dec
xorl
hlt
and
and
lea
mull
cmp
mov
sbb
adc
fistpl
jp
xor
aas
or
dec
inc
xor
aas
iret
iret
sbb
push
mov
in
push
xor
aaa
popa
cmp
sub
or
sahf
dec
jo
repz
js
sub
outsb
mov
push
and
sbb
mov
stc
sbb
dec
cmp
test
push
pop
xor
test
dec
pop
movsl
stc
adc
sahf
push
xor
mov
ret
pop
push
popa
jle
mov
scas
add
cltd
add
cmp
sub
idivl
cmc
mov
les
mov
test
stos
sub
cmp
into
add
cli
add
or
jle
movl
insb
sti
aas
daa
xchg
jl
cmp
fimuls
add
fstps
sbb
mov
mov
jnp
cmp
push
cmp
add
rcrl
out
movsl
or
or
or
or
or
or
or
or
sarb
xor
jg
xor
xor
insb
push
enter
out
enter
or
mov
je
call
jg
pop
mov
push
mov
xlat
rolb
aad
aam
shlb
mov
shll
xor
leave
lds
mov
sub
lret
outsb
inc
or
adc
out
out
mov
fs
es
dec
push
dec
aaa
inc
rorl
mov
in
sbb
dec
push
add
out
xchg
lock
imul
rcrw
inc
jne
fwait
mov
xor
pushf
ds
outsb
inc
or
pop
push
add
adc
dec
out
or
jle
rolb
pop
push
pop
sub
mov
xchg
sub
mov
mov
nop
inc
sub
out
lods
xor
icebp
pop
mov
sub
inc
addr16
int3
mov
fwait
mov
jmp
xchg
push
daa
inc
or
out
jle
test
sbb
lock
test
mov
lea
inc
push
push
inc
push
inc
or
or
fs
mov
cmp
push
ss
loop
sbb
js
mov
adc
mov
mov
stos
inc
stos
hlt
sbb
aaa
adc
pop
xchg
mov
shr
mov
push
pop
sub
xchg
cmpsl
pop
ja
fstpt
pusha
loopne
xchg
push
xchg
adc
inc
add
out
sbb
shl
push
stc
ja
xor
adc
fsubp
and
fs
mov
push
out
enter
lret
sub
int3
and
sbb
add
sub
lahf
out
in
rclb
insl
cmc
cmp
ds
xchg
cmp
xor
jae
in
and
xor
mov
adc
int
or
or
or
or
or
or
or
or
or
or
or
or
dec
test
test
xor
shll
push
jl
dec
cwtl
xchg
xor
shr
repnz
add
inc
inc
mov
mov
std
or
pop
add
fisubrs
or
loopne
in
push
dec
imul
adc
and
inc
adc
jle
movsb
pop
sbb
xor
jb
xchg
je
insb
sub
push
xchg
jnp
lret
cli
add
jp
mov
cld
or
cmp
sub
mov
cmpsl
jbe
push
mov
jne
jge
jg
inc
push
in
sub
lods
jnp
jge
je
cli
mov
dec
or
insb
stos
adc
push
or
cwtl
mov
fnstsw
lret
mov
xchg
movsb
arpl
push
pop
mov
bound
test
add
mov
or
mov
push
mov
xor
inc
movsb
or
into
mov
sbb
sub
dec
dec
mov
fadd
dec
lea
and
int
xor
shl
ljmp
cmp
sub
lret
ljmp
bound
movsb
stc
push
push
and
push
loopne
pushf
outsl
and
cmp
or
sbb
pop
fimull
fnstsw
stos
xor
sub
jne
cmp
xchg
sub
arpl
jge
aaa
push
jecxz
jnp
adc
int3
add
out
aad
cmp
pop
or
icebp
sbb
sub
adc
push
dec
jl
insl
dec
mov
lret
lret
inc
jb,pn
rcll
enter
push
rcl
jl
mov
out
mov
pop
insl
enter
mov
js
mov
xor
sahf
test
shl
mov
jmp
push
faddl
aad
pop
call
xchg
and
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
cmp
sbb
mov
mov
movswl
fsubl
or
or
sub
je
inc
andl
lahf
push
xchg
mov
movsl
out
inc
push
scas
sbb
push
inc
cs
scas
insl
daa
add
jbe
adc
push
movsb
mov
push
adc
push
fisubrs
xor
push
or
ljmp
es
and
xchg
cmp
out
pop
add
mov
in
jns
scas
jp
xchg
and
cs
and
xchg
mov
mov
jecxz
mov
pop
lods
sti
xchg
pop
adc
and
dec
fwait
and
psubusw
add
fsubrs
sub
addb
xor
cmp
pop
stc
mov
pop
dec
sarb
inc
mov
xchg
jno
into
fsubl
cli
lods
or
in
into
push
mov
jb
adc
sbb
fadd
dec
jge
test
test
mov
dec
push
mov
push
call
cmp
notl
clc
add
jno
adcl
insl
jg
mov
pop
xor
jno
imul
add
mov
les
out
repz
mov
or
jecxz
int
xor
sub
out
add
in
subl
call
cmp
test
stc
cmp
jle
insb
mov
push
jp
jne,pn
testl
adc
incl
fimull
dec
jmp
fisubl
adc
add
mov
xchg
cmp
jno
ja
mov
xor
adc
mov
orb
xchg
push
out
cwtl
ljmp
xlat
mov
pop
adcl
aas
mov
fistpl
dec
iret
adc
lea
sbb
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mulb
icebp
cmp
lods
popf
stc
xchg
sarl
push
mov
jbe
rcrl
frstor
lods
shlb
pop
popf
inc
loopne
push
out
cltd
push
popf
fsts
lods
cmp
xor
pop
icebp
mov
inc
mov
cld
fisttpl
jae
jo
dec
pop
lds
unpcklps
scas
shrb
imull
in
aam
dec
xchg
cld
mov
adc
or
sarb
sbb
pop
test
pop
int3
lret
mov
test
popa
sub
xor
bound
aam
std
cmp
xor
pusha
call
inc
or
xor
sbb
xchg
das
arpl
shlb
mov
mov
mov
mov
pop
call
xchg
call
int
divl
and
inc
xor
ja
jns
repnz
xlat
xchg
mov
adc
push
mov
ljmp
stc
aaa
sbb
pop
subl
or
add
cmp
add
cmp
adc
dec
popf
sti
roll
xlat
fmuls
call
sti
and
mov
jmp
loope
imul
mov
and
sub
lcall
cltd
outsb
and
sub
hlt
fldt
mov
mov
dec
ret
xchg
adcb
sub
inc
rol
dec
mov
mov
mov
xchg
dec
repnz
js
scas
in
xor
jnp
cwtl
icebp
imul
lret
jns
adc
mov
or
cmp
lcall
mov
jns
fs
call
mov
sbb
xchg
in
int
mov
gs
xchg
sahf
adc
sahf
ret
outsl
lea
js
push
das
mov
lock
mov
in
mov
xchg
call
loope
dec
pusha
cltd
neg
and
adc
test
std
xlat
iret
inc
cmp
ja
cltd
push
add
cmp
andb
fnstcw
mov
mov
sub
pop
iret
fidivrs
ret
or
jae
ljmp
jae
add
dec
divb
aas
inc
shlb
push
or
rorb
dec
loopne
jmp
add
in
insb
ds
rclb
push
mov
mov
lcall
push
pop
leave
iret
imul
xorl
insb
mov
dec
and
fcoml
sub
mov
fmul
or
push
mov
repz
insb
sbb
ds
hlt
das
adc
push
movsb
movsb
out
iret
dec
aad
and
daa
addb
push
stc
mov
scas
popa
jae
nop
fnsave
out
lret
push
inc
stos
mov
int3
pusha
ja
xorl
sub
inc
xor
fimuls
mov
inc
jl
iret
gs
dec
push
cmp
mov
dec
iret
es
jbe
cmp
sti
lea
mov
aad
or
mov
test
leave
dec
scas
bound
test
iret
pop
adc
fbld
jne
out
push
xor
pop
test
jle
inc
scas
aad
cmp
repz
xor
pop
mov
iret
adc
xchg
ret
or
in
pop
adc
sbb
xchg
pop
jo
mov
stos
dec
jb
mov
jb
xchg
mov
inc
sbb
unpcklps
repnz
lret
orl
mov
xlat
out
push
ror
pushf
sbb
nop
jg
push
xchg
stc
test
pop
adc
add
cmp
mov
test
outsb
xor
mov
inc
mov
mov
outsb
push
fisttpl
daa
loop
and
sbb
cmpl
pop
mov
fildll
push
jnp
cs
daa
push
cmp
inc
leave
xor
enter
mov
cmp
iret
dec
mov
rorl
xchg
sbb
xchg
stos
arpl
adc
dec
ret
dec
push
add
fbstp
and
nop
push
push
mov
add
adc
sbb
adc
mov
cmp
nop
ljmp
jnp
or
out
jmp
sbb
out
and
stos
mov
outsb
wrmsr
std
fwait
popf
xchg
cmp
push
adc
repz
dec
insl
and
scas
aad
xor
dec
inc
orl
push
xor
cs
sbb
cwtl
mov
lret
or
mov
adc
push
adc
mov
pop
scas
inc
cmp
dec
cs
mov
stos
ds
xor
leave
in
add
dec
mov
dec
inc
cmp
test
inc
filds
sbb
adc
aas
adc
fcmovu
add
cmpsl
jno
jno
xor
fadd
dec
lods
sbb
dec
es
jbe
popf
or
movsb
push
xchg
jle
push
sahf
ja,pn
xorl
ljmp
mov
iret
lcall
add
mov
int
repz
add
mov
jo
push
mov
jns
mov
jecxz
and
arpl
inc
jl
cmpsl
std
aas
hlt
add
clc
sti
sbb
mov
push
in
jnp
in
and
cmp
cmp
or
bound
lds
scas
sti
adc
test
mov
in
inc
cmp
out
sub
lret
in
xchg
fucomp
popa
jo
aam
cmpsb
ss
ds
faddp
adc
fcmovb
jbe
and
dec
pop
sbb
leave
ss
xchg
fildl
enter
jle
pop
cmp
iret
and
or
mov
or
mov
push
ret
jl
mov
and
xchg
jo
push
aaa
push
adc
push
jge
std
and
inc
xor
jne
icebp
inc
ss
shlb
outsl
cs
ret
inc
and
jle
cmc
sub
jmp
push
in
dec
cmc
aaa
cvtps2pi
xchg
ret
jae
or
jecxz
cld
push
cld
divb
std
loop
loop
ljmp
jecxz
lcallw
bound
push
test
or
or
and
pop
or
hlt
lds
addw
out
bound
fwait
push
xchg
cmp
cmp
sub
cs
pop
sub
das
push
repnz
ret
hlt
xchg
mov
jnp
lret
push
call
jge
mov
rcll
popf
lahf
sbb
cltd
mov
sar
jns
call
add
cmpsl
movl
loopne
or
xchg
test
insl
mov
cli
mov
lahf
push
jno
inc
push
xor
punpckhdq
cwtl
aad
or
sbb
les
push
or
lock
mov
out
mov
mov
push
das
lret
cmp
icebp
cmp
xlat
popf
in
mov
ss
stc
movsb
icebp
mov
mov
out
xchg
xchg
and
jb
addr16
mov
sbb
dec
xchg
mov
xchg
aaa
int
imul
mov
fwait
inc
push
adc
iret
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
dec
or
je
and
push
lods
clc
jmp
or
jb
and
adc
xor
js
inc
cld
int3
sahf
stos
into
push
add
adc
nop
xor
xor
mov
aam
es
mov
pop
sub
arpl
adc
push
push
ds
addl
dec
shll
lods
divl
mov
pusha
push
xchg
lock
in
mov
jge
adc
lods
cmc
sbb
pop
fisttps
scas
dec
adc
mov
aad
call
imul
imul
lds
mov
push
xchg
jb
mov
sub
gs
xor
add
cmc
or
add
aaa
addr16
xor
cmp
xchg
or
shr
mov
ljmp
jnp
xchg
or
ret
cmp
idivb
push
bound
cmp
adc
cmpsl
mov
xor
aaa
mov
repnz
push
popa
fcmovu
lret
mov
das
dec
dec
add
cmpsl
loopne
adc
fs
test
in
movsl
loopne
push
or
dec
lahf
lret
daa
mov
sub
sub
lds
orl
xchg
push
jnp
pop
ja
sahf
cltd
jmp
xor
in
cld
sub
dec
adc
mov
mov
cmpsb
xchg
cmp
xor
xchg
push
pop
cmp
and
test
js
ds
lods
jnp
pushf
das
mov
xor
dec
fimull
dec
jne
add
sbb
cmp
inc
xor
bound
jmp
loop
xlat
out
xchg
in
adc
divl
sarb
dec
das
stos
pop
sahf
jns
and
repz
xchg
push
popa
jmp
leave
push
cmp
pop
in
jo
ret
sbb
dec
mov
aam
push
hlt
decb
aas
in
or
stos
add
or
or
or
or
or
or
or
or
or
or
or
or
es
dec
jl
pop
mov
loope
mov
cld
aam
dec
stos
jle
cs
pop
jnp
aas
sbb
xchg
cmp
hlt
mov
hlt
loope
lret
shlb
xlat
ljmp
lcall
mov
imul
and
mov
cmp
xor
dec
ret
scas
cmpsb
pop
mov
add
jle
cmpsb
stos
or
aam
fidivl
mov
mov
jo
orl
sub
and
cmc
cmp
ret
cld
and
orb
or
pop
push
test
mov
ficoms
pusha
jmp
or
in
enter
adc
add
mov
jbe
loope
push
and
inc
lock
popf
xchg
pop
loope
jmp
ss
add
stos
dec
sub
outsb
or
scas
jnp
ss
mov
bound
adc
cmp
ljmp
fadds
jp
mov
cmp
fs
dec
sub
iret
ficompl
mov
push
repnz
jmp
push
call
jg
rcr
stc
aaa
cmpsb
mov
aad
incb
rorb
clc
pop
push
xchg
js
pop
es
mov
mov
or
xchg
repz
insl
das
mov
push
aas
das
clc
insl
push
and
fwait
adc
outsl
dec
sub
and
sub
inc
iret
bound
sub
loop
lret
push
xor
adc
lret
pop
pop
sub
mov
jnp
ds
sti
jbe
jg
int3
mov
xlat
lods
mov
inc
push
adc
jnp
loope,pt
mov
fildl
lret
add
add
mov
push
mov
stc
sub
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
jnp
out
pusha
mov
push
pop
or
sub
out
imul
outsb
pop
mov
mov
pop
xorl
jb
lret
clc
sbb
mov
rolb
dec
sub
xlat
sbb
cmp
adc
jnp
jno,pt
or
jnp
out
mov
xor
mov
push
test
and
inc
je
mov
jge
in
mov
push
add
xor
aaa
sub
sbb
insb
cmp
fdivrl
cltd
cmp
leave
dec
pop
inc
leave
insb
lock
xchg
sub
mov
je
dec
mov
mov
push
mov
cltd
or
scas
sbb
push
testl
sbb
add
js
jbe
icebp
xchg
or
fnstsw
sub
jo
adc
lea
fmuls
xchg
jmp
cmp
mov
xchg
test
lahf
repz
in
je
mov
fwait
push
push
push
add
xchg
push
pop
sbb
into
in
adc
popa
pop
mov
mov
add
add
cmp
pop
in
incb
or
pop
dec
add
push
or
xchg
arpl
stos
pop
dec
in
cmp
mov
push
or
dec
push
mov
popa
xchg
pop
fldenv
and
rcr
sbb
loop
xchg
sbb
push
popf
and
sub
pop
xchg
outsl
jp
sahf
pop
sub
ror
adc
mov
mov
loope
stc
and
stos
fmull
add
mov
xor
in
cli
das
cmp
mov
pushf
rorb
rolb
xchg
inc
mov
outsb
pop
jbe
and
jg
add
and
xor
add
hlt
mov
adc
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
lods
dec
adc
movsl
iret
gs
xchg
sub
idivb
jae
jmp
dec
mov
mov
out
push
sub
leave
inc
adcb
mov
stos
pop
sub
jl
and
add
pop
push
or
cmp
inc
scas
pop
mov
jae
cmpsl
repz
stos
loop
jae
imul
out
cwtl
sbb
jae
adc
mov
fwait
mov
les
sbb
mov
outsb
imul
xchg
push
test
and
clc
jmp
dec
mov
shll
mov
dec
sbb
or
fstpl
xchg
jbe
sti
mov
xchg
pop
fs
mov
mov
imul
sbb
dec
sub
divl
inc
std
push
pop
xchg
sub
mov
xor
pop
cmpsl
or
mov
cmp
inc
and
push
push
cmp
in
stos
mov
xchg
inc
comiss
pop
push
js
scas
in
adcb
lret
cmpsl
or
pop
lcall
adc
jl
pop
mov
mov
or
mov
sub
mov
setb
clc
push
cwtl
or
ror
lahf
xor
xchg
mov
subb
mov
sub
sbb
leave
push
nop
imul
sub
in
or
rorb
sbb
rsqrtps
push
cli
das
lea
leave
loope
das
push
pushf
fildll
sti
lea
jno
ljmp
arpl
in
stos
inc
pop
gs
xchg
push
in
push
xorb
sbb
jb
jmp
dec
lds
lock
shlb
mov
mov
into
and
aas
and
jmp
jp
cmp
jns
xchg
cmpsb
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
push
fisubs
aam
mov
mov
notl
out
mov
pop
jle
mov
jae
sub
fsubrp
cmpsb
xchg
jb
insb
ljmp
and
inc
inc
popa
movsb
mov
insl
rorb
sti
or
insb
into
or
outsb
jae
ret
sub
add
out
and
sahf
outsb
stos
fwait
das
outsl
add
and
sbb
sarl
mov
xchg
mov
adc
daa
cmp
sub
cwtl
cmc
lahf
imul
mov
adc
lods
scas
add
sti
mov
xchg
pop
add
insl
add
ret
dec
mov
sbb
test
pop
and
outsb
inc
mov
rorb
push
adc
xchg
sub
in
mov
lahf
pop
fdivrl
aas
jns
adc
xchg
sub
pop
hlt
addr16
cmpsb
xchg
or
jo
decl
repnz
ror
imul
outsb
lock
cmp
xor
wrmsr
xor
inc
dec
push
mov
pop
orb
dec
mov
adc
scas
ja
inc
or
and
lods
add
daa
xchg
mov
xor
je
or
xor
ret
jl
or
dec
inc
mov
rorl
add
mov
lret
dec
and
dec
mov
stos
xlat
add
arpl
push
cld
or
jmp
imul
push
or
jp
sbb
mov
sbb
movsb
jns
xchg
imul
adc
jo
xor
inc
cmp
loop
adc
mov
out
push
cmp
or
movsb
cmp
mov
add
int
cwtl
imul
outsb
in
stos
lock
ds
mov
adcb
movsb
mov
rorl
sbb
pop
jb
xchg
mov
in
in
jmp
je
in
xchg
xlat
xchg
jo
insb
loope
xor
dec
pop
inc
nop
dec
into
sti
mov
sub
popa
xchg
push
mov
pusha
sbb
add
loop
dec
mov
cld
pop
jns
push
dec
push
push
les
cmc
sub
mov
stos
push
scas
inc
stos
movsl
mov
out
cmp
cmp
inc
jns
fs
cmp
das
int
push
push
inc
jno
jae
xchg
loop
adc
and
lods
pmaxub
inc
jns,pt
pop
xlat
adc
mov
cmpsl
xor
sbb
and
ret
and
inc
push
jns
roll
test
jne
je
cmp
mov
fidivrs
jmp
divb
or
xchg
adc
sub
adc
dec
mov
pop
sbb
or
and
add
mov
jl
in
rorb
or
cmpsl
adc
out
loopne
ret
or
out
jecxz
lock
ja
repz
shlb
or
out
push
push
mov
push
jo
data16
repz
cs
cs
pop
xor
cli
mov
pop
cs
add
cmp
adc
mov
jle
adc
push
jae
mov
nop
cmp
jbe
sub
and
ja
cmp
es
sub
lods
popf
jnp
cli
jb
adcb
or
icebp
imul
cmp
cmp
mov
in
les
ja
popf
dec
addr16
ja
outsb
sarl
out
cmp
dec
je
inc
sarl
add
pop
scas
icebp
lock
push
mov
in
push
mov
sbb
sbb
popa
sbb
shr
xchg
mov
jnp
fimull
sub
fisttps
dec
testl
adc
add
nop
int
sbb
add
lea
rcrl
in
test
xchg
in
arpl
xor
cmpsb
add
js
loop
mov
ja
add
add
cmp
pop
mov
push
test
jne
lock
mov
inc
xchg
enter
add
push
mov
jae
cmpsl
push
outsb
in
in
pop
mov
mov
cli
jo
jb
sbb
jg
fs
enter
pop
ss
cmpsb
sub
push
fists
aad
stos
cmp
adc
sub
fistpll
xor
fsubrp
inc
jno
mov
negl
aam
mov
inc
mov
push
xchg
cmp
repnz
ss
imul
mov
sub
notl
sub
ja
cmovo
aam
loopne
cmpsb
xchg
int
es
pop
push
xchg
push
mov
mov
lods
inc
pop
cmp
lret
mov
in
adc
inc
pop
mov
js
adc
mov
or
jbe
loopne
sub
jns
adc
lcall
xor
loop
adc
call
mov
dec
leave
push
repnz
test
arpl
push
scas
mov
sahf
xor
lock
rol
dec
adc
rcrb
lcall
jo
ds
mov
jmp
mov
cli
out
xchg
fwait
mov
push
cmp
enter
cmp
in
jmp
xor
insl
shr
inc
clc
adc
lcall
dec
jp
push
push
xchg
sbb
xor
mov
inc
or
in
lea
add
xchg
xor
stos
lret
cmp
ret
sub
mov
xchg
sbb
mov
fldl
fdivs
into
divb
sbb
jnp
faddp
xor
lock
mov
fistps
data16
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
rolb
inc
pop
jb
adc
sbb
dec
sub
in
jb
or
testb
cwtl
imul
mov
arpl
je
mov
jp
scas
add
push
mov
aam
in
mov
mov
pop
adc
iret
daa
out
out
or
popa
mov
test
out
mov
push
add
adc
sbb
jp
dec
cmp
push
dec
mov
js
push
stos
movl
dec
xor
push
jecxz
fcomps
je
adc
xlat
les
and
into
adc
insl
dec
cmp
out
cli
or
into
fs
push
cmp
lret
jecxz
fsub
pusha
mov
sub
or
lret
mov
loop
mov
insl
mov
mov
jl
sub
jnp
xchg
cmp
mov
mov
movsb
xchg
addr16
cli
dec
jnp
mov
repz
js
add
rcrb
dec
mov
cmpl
lock
loopne
inc
mov
mov
lods
js
pop
mov
push
adc
lret
pushf
sbb
andl
test
push
fiaddl
pop
jmp
rcll
hlt
and
mov
addr16
scas
sbb
and
and
push
inc
cmp
pop
xor
jne
mov
fdivs
dec
stc
test
and
insl
xchg
adcl
inc
cmpsl
in
andb
xor
out
jns
dec
push
sbb
loop
pshufw
mov
mov
push
repz
movsl
out
cwtl
fwait
das
ljmp
jmp
dec
inc
jbe
negl
sahf
ret
daa
movsb
xlat
jmp
sbb
cmp
fbstp
js
mov
insl
das
shrl
jle
in
add
scas
inc
fbld
push
insb
fldz
imulb
jbe
divps
cs
xchg
dec
loop
and
insb
lds
jge
std
mov
cmp
cmp
sub
shrl
mov
dec
xchg
adc
cmp
mov
enter
mov
stos
mov
ljmp
fistpll
inc
push
adc
cmp
mov
movsb
push
jb
std
sub
les
mov
adc
test
pop
mov
mov
das
data16
mov
daa
addr16
aad
out
cli
insb
or
cld
and
lret
lods
scas
cmpsl
mov
ljmp
popf
pop
mov
push
cmp
or
pop
inc
mov
in
push
or
jno
std
pusha
pop
jne
and
ret
pop
stc
dec
enter
fwait
ret
pop
pop
popa
add
in
aas
cmpsb
or
sub
xor
push
lods
jmp
lret
mov
aam
xor
dec
ret
fnstcw
jmp
adc
dec
sbb
movsl
add
stos
jbe
xor
sbb
adc
and
shrb
mov
mov
add
jecxz
daa
and
into
pop
cmp
pop
jle
jecxz
clc
mov
xor
fistl
popf
mov
push
xchg
push
mov
jmp
dec
cltd
dec
add
mov
push
xor
sbb
dec
xchg
orb
stc
ss
test
fldenv
add
pop
dec
pop
add
xorl
jns
stos
faddl
sub
jp
cld
in
mov
mov
ljmp
pop
or
cwtl
mov
mov
je
push
mov
in
jp
sahf
loop
mov
icebp
dec
cmp
push
cli
popa
jae
mov
rcrl
sbb
xor
xorl
dec
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
sbb
cs
pop
ss
sahf
loopne
mov
jae
std
sti
lock
stc
loope
mov
notl
sub
ret
pop
out
mov
cmpsb
or
into
mov
pop
lcall
loop
imul
subl
mov
loope
cmp
xchg
ret
sar
adc
fwait
fwait
cmc
sub
loopne
out
in
pop
jne
xchg
sti
cmp
jb
jnp
push
movsb
fwait
xchg
cmp
cmp
push
xor
aam
mov
mov
xor
add
xor
shlb
mov
hlt
daa
inc
dec
pop
insl
and
push
test
mulb
xlat
lea
inc
outsl
add
bound
push
arpl
in
aas
rcll
pop
test
lea
testb
jno
std
int3
ja
or
add
mov
stc
lds
repz
adc
rcll
mov
pop
les
or
movsl
xchg
cmc
loop
es
aaa
aas
mov
in
sarl
xor
popa
ret
push
repz
loop
enter
in
mov
ss
es
int3
frstor
dec
pop
es
pop
xchg
pop
adc
xor
push
enter
test
xchg
adc
adcl
loope
xchg
call
daa
daa
push
jne
push
pop
pusha
mov
pop
cmp
jge
mov
testl
jecxz
sbb
jge
aaa
clc
fstps
ss
cs
test
insl
dec
idivl
clc
inc
inc
shlb
aam
cmp
cli
or
add
arpl
jae
test
adc
jns
mov
aas
and
shlb
pushf
mov
test
or
or
or
or
or
or
or
or
add
xor
pop
in
pop
push
icebp
dec
xchg
cmp
push
test
test
out
and
jecxz
call
mov
jp
cmc
dec
outsl
movsb
pop
add
xchg
cli
adc
dec
mov
cmc
adc
cmp
xchg
rol
ljmp
les
xor
jecxz
or
cwtl
adc
cmpsb
pop
xchg
in
fidivl
gs
jnp
popf
int3
dec
inc
mov
in
mov
mov
loope
aad
pop
scas
mov
inc
xchg
js
sbb
sarl
mov
push
jecxz
mov
out
mov
movsl
jg,pt
inc
sbb
sbb
rcrl
and
mov
fcmovnbe
pop
dec
push
jl
inc
mov
add
enter
int
in
or
pop
pop
jg
push
jmp
loop
add
in
mov
lods
out
dec
or
push
and
cmp
adc
enter
cmp
dec
xchg
add
cs
xor
fstpt
cmc
jl
sbb
out
sbb
cmpsb
into
add
test
mov
pusha
inc
adc
popf
arpl
or
loop
sbb
pop
pop
mov
push
les
scas
sahf
jecxz
jl
inc
js
jae
ret
adc
push
mov
icebp
inc
aas
ret
test
out
xchg
pop
into
inc
push
fbld
mov
arpl
jb
movsl
mov
push
inc
mov
jns
or
adc
inc
shll
lea
jo
jb
cmovs
cmp
je
sub
out
stos
cmp
ret
jns
dec
ljmp
and
in
mov
pop
and
push
test
mov
sbbl
bound
cmp
dec
mov
xor
inc
test
mov
inc
test
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
xchg
jo
inc
bound
mov
loope
push
pop
sub
test
inc
shrl
xchg
ret
subb
jbe
das
mov
dec
mov
xor
in
ljmp
fwait
rcrl
mov
adc
push
sub
jle
mov
xchg
push
out
push
dec
and
xor
iret
fstpl
mov
sbb
sar
and
outsb
sbb
jns
cwtl
mov
mov
into
fcmovnb
pusha
or
push
repnz
pop
adc
pop
mov
mov
aas
fs
cmp
jno
pop
fldenv
adc
jmp
mov
fidivrl
mov
popa
les
mov
cwtl
jg
adc
aaa
mov
rcrb
subb
cld
shll
test
fists
test
inc
xchg
mov
add
inc
jl
push
mov
iret
outsb
shrb
xchg
sar
mov
lcall
mov
into
mov
mov
cmp
scas
sbbb
fwait
sub
test
inc
in
js
fsubs
gs
fwait
mov
negb
mov
pop
add
mov
xchg
push
dec
andb
jo
jbe
adc
mov
out
push
add
or
fcomi
daa
int
mov
sbb
ret
les
out
lods
hlt
ja
and
outsl
xor
cmp
clc
pop
xlat
sbb
dec
adc
cmp
mov
outsb
mov
and
jg
adc
cmc
jb
enter
ficoml
lods
outsl
mov
add
xor
aas
xor
pop
mov
cmp
aaa
inc
hlt
sub
cmp
jo
int
call
call
arpl
dec
push
inc
lea
jbe
cld
ss
aas
inc
jnp
rorb
or
or
or
or
or
or
or
or
or
or
or
or
xchg
xchg
sub
add
and
out
testb
sub
orl
out
icebp
ror
fldl
loop
cmp
add
inc
inc
or
push
sbb
mov
xor
cmpb
xor
mov
outsb
sahf
pop
loopne
and
fisttpll
cmp
pop
mov
push
stos
mov
and
pop
outsb
adc
add
and
aad
rcl
sub
mov
lret
and
inc
push
mov
mov
test
decl
push
loop
mov
mov
and
movsl
mov
push
xchg
shll
or
jmp
xchg
inc
fldcw
je
jb
insl
movsl
adc
lock
push
sub
in
loop
inc
pop
jg
into
les
imul
ds
in
andb
cmp
fsubrp
test
jb
inc
out
pop
movsb
lret
or
rorl
add
add
dec
dec
loop
jbe
scas
pop
xchg
dec
sbb
mov
cmp
lcall
pop
sbb
pop
mov
enter
add
ss
xchg
test
sarl
jge
imull
call
loopne
pop
cmp
jbe
in
pop
jl
orl
pop
faddp
dec
jle
or
shl
dec
jp
test
mov
or
cwtl
movsb
xor
pop
in
loope
xor
inc
jge
inc
aad
or
push
imul
jno
cwtl
xlat
push
in
iret
nop
sbb
cs
scas
mov
jl
sbb
jle
sub
test
mov
adc
popa
xchg
mov
insl
xor
pop
add
aam
push
xchg
scas
mov
add
jge
out
test
mov
xor
xchg
loope
push
mov
mov
fmuls
jae
add
mov
sbb
cwtl
jmp
ja
loopne
pushf
aad
scas
sbb
cltd
push
sbb
lret
mov
jb
ljmp
mov
es
dec
pop
stos
jge
rcrb
mov
not
sub
sbb
inc
jge
lcall
insl
sub
mov
aas
xor
and
cli
push
sbb
fs
popa
loop
inc
inc
xchg
sub
ret
mov
in
cmc
call
clc
push
lcall
movsb
xor
mov
loop
jmp
mov
add
xchg
cmp
xchg
mov
cmp
cmpb
pop
scas
add
mov
cmp
hlt
cwtl
cld
ds
enter
out
arpl
mov
ljmp
jge
adc
mov
jg
loope
mov
fldcw
push
jle
and
add
lock
lods
ja
jo
imul
jl
jecxz
pop
mov
sbb
or
movsb
xchg
daa
cs
mov
mov
lods
imul
pop
adc
ja
xor
sub
dec
jp
movsl
and
fistl
test
mulb
lods
movsbl
mov
icebp
mov
add
cmp
or
and
pop
mov
jp
fildll
dec
clc
dec
xor
ja
insl
sub
test
mov
or
outsb
mov
neg
push
jnp
fsubrs
sti
jae
inc
aam
lock
mov
push
nop
inc
ss
popa
repz
test
call
jns
nop
out
pop
dec
cmp
xchg
aaa
ret
mov
inc
jne
data16
push
or
xchg
jmp
repnz
cltd
addb
dec
lret
pop
mov
out
sub
or
clc
rclb
and
popf
jecxz
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
sbb
clc
pushf
mov
in
lods
sti
inc
sbb
popa
jge
mov
test
dec
or
sar
pop
icebp
ds
jne
xchg
jmp
xchg
fs
pushf
add
add
xchg
repnz
xor
not
cmpsb
and
sti
fneni(8087
xor
jnp
pusha
or
push
icebp
lock
xchg
lret
imul
pop
repz
adc
fldenv
pop
and
xchg
mov
aas
inc
add
hlt
sub
out
mov
dec
cltd
cmp
arpl
dec
add
jl
outsl
add
mov
mov
mov
push
inc
cmp
enter
je
and
cmp
add
arpl
orl
xor
mov
into
addb
js
lret
lea
pop
dec
cmpsl
sti
sbb
shlb
jae
cld
adc
daa
add
jmp
sbb
andb
push
xchg
mov
cmp
xor
outsb
fcmovnb
cmpsb
cmpsl
jno
aas
cs
jb
and
push
pop
jne
outsb
iret
xor
test
inc
fiadds
inc
jnp
xor
pop
and
pop
mov
pop
into
pop
into
and
dec
lahf
xchg
clc
das
and
int3
aam
lea
cli
mov
inc
add
mov
out
cmc
pop
cwtl
loopne
int3
mov
mov
cli
push
in
icebp
insl
inc
add
cmc
out
push
jl
sarb
int
cmp
outsb
les
cmp
fs
jg
into
mov
cmp
cmp
bound
and
jecxz
mov
sbb
out
or
add
inc
in
jle
fwait
incl
hlt
jp
gs
and
push
aaa
push
mov
adc
stc
rcl
xchg
ret
sbb
sub
pushf
icebp
test
or
or
or
or
or
or
or
or
frstor
jle
jl
aad
xchg
test
lret
add
xor
fdivr
dec
clc
add
cltd
adc
clc
mov
inc
lcall
insb
cmp
adc
sub
cmp
in
je
dec
dec
mov
lret
cmpl
or
dec
jle
repz
mov
cmp
or
mov
fsubp
aam
insb
iret
orl
call
adc
xor
call
pop
xor
movsb
lahf
fdivrp
dec
test
xchg
push
int
daa
nop
testl
shl
push
mov
cmpsl
push
push
fs
mov
sub
pop
xor
push
pushf
push
js
jecxz
xor
ja
xchg
cwtl
push
add
push
icebp
in
adc
enter
daa
push
iret
push
cmp
push
stc
or
rol
ja
repnz
movsb
sahf
outsb
mov
hlt
cmp
add
aas
hlt
push
es
jnp
lret
std
or
into
int3
test
mov
lods
adc
cwtl
pop
test
mov
jbe
icebp
sub
std
imulb
int
mov
push
add
sbb
pop
xchg
daa
cmp
out
mov
cmp
mov
xor
lock
push
dec
xchg
inc
or
adc
aad
stc
lea
mov
ret
sub
dec
fldl
sbb
repnz
stc
push
fstp
scas
inc
cmc
loopne
shlb
imul
pop
pop
orb
in
push
mov
jo,pt
jnp
cld
popa
out
test
mov
mov
imul
cltd
adc
sbb
loopew
popl
into
pusha
ds
and
dec
cmp
fs
cmpsl
pop
cmp
mov
pop
mov
imul
sub
jle
icebp
rol
bnd
mov
pusha
jg
clc
or
or
or
or
or
or
or
or
or
or
or
or
mov
incb
or
popa
loope
lcall
mov
loope
pop
mov
shll
push
scas
adc
push
outsb
mov
mov
add
lds
movb
pop
push
std
xchg
jns
pop
outsb
jns
cmp
lock
fs
cmp
insl
cli
dec
sbb
or
mov
cmp
mov
inc
cmp
sub
rorb
repz
pop
mov
orl
push
add
jbe
adcb
or
loopne
jnp
lock
mov
push
adc
xchg
pop
mov
and
ljmp
popf
lcall
out
cmpsb
push
ss
out
jl
push
test
xchg
dec
pop
or
leave
pop
or
scas
or
push
cltd
loope
sub
addr16
stos
rcl
cmp
sub
bound
mov
push
and
lods
adc
cmp
mov
inc
pop
add
pop
and
fiaddl
mov
es
dec
lods
je
repnz
jb
or
jnp
push
scas
adc
xor
insl
sub
lret
xchg
cmp
push
dec
loop
pop
mov
cmp
or
ret
outsl
fimuls
stos
or
cmp
sub
aad
ja
xchg
cmp
push
in
sbb
stos
dec
sbb
out
add
enter
push
test
mov
imulb
cwtl
inc
cmovae
inc
cmp
lcall
addr16
pop
lcall
stos
lea
enter
pop
xchg
scas
dec
sub
cmp
mov
ret
leave
in
aas
mov
xlat
clc
int
fucomp
sahf
lret
pop
mov
or
or
or
or
or
or
or
lret
sbb
lea
inc
jmp
mov
jb
std
cmp
jp
dec
adc
in
dec
dec
addl
ss
mov
and
and
mov
mov
std
imul
and
jns
lods
out
cmp
es
and
sub
jge
mov
jne
xchg
cmp
mov
inc
in
lds
pop
cmp
mov
ficomps
shl
test
jb
mov
daa
pop
pop
mov
mov
lea
mov
or
push
cmp
sub
repz
lret
push
xchg
loop
std
push
cli
and
repnz
sti
out
jg
cmp
inc
lds
jmp
or
in
in
jae
cmp
or
xchg
adc
jecxz
xlat
sub
push
ljmp
mov
mov
or
lret
sbb
insl
xor
insb
pushf
out
js
jmp
arpl
stos
pusha
xchg
scas
and
rcrl
shll
aad
loop
inc
loopne
cmp
lahf
fdiv
add
push
or
lcall
js
stc
movb
insl
js
lahf
mov
push
lds
scas
dec
gs
or
andl
cmc
mov
xchg
add
pop
xchg
stos
sub
and
and
adc
xchg
enter
fsubrs
js
mov
push
loop
mov
adc
pop
dec
push
adc
outsl
adc
pop
mov
mov
pop
orb
sti
pop
cmp
dec
lock
stc
in
jns
and
cmp
arpl
mov
and
pop
push
inc
inc
in
push
mov
mov
mov
in
scas
sub
lcall
leave
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
and
push
mov
xchg
xchg
adc
sbb
outsb
shlb
cmp
shr
mov
enter
out
data16
mulb
shlb
iret
mov
xor
cmpsl
mov
add
mov
xor
ss
jno
rolb
aas
test
arpl
jnp
mov
dec
pop
call
sbb
dec
dec
bound
repz
dec
pushf
stos
negb
xchg
bound
out
mov
jp
sbb
stos
in
mulb
xlat
push
push
mov
rol
sub
jmp
dec
adc
add
jno,pt
insl
mov
enter
cli
jge
rcrl
and
into
sbb
or
and
aam
les
cmpsl
loop
aaa
pop
jno
inc
orb
mov
cmp
push
xor
xchg
pop
and
sub
dec
push
outsl
xchg
cmpb
iret
dec
lret
xlat
jp
add
dec
cmpsb
add
or
or
dec
pop
ret
ror
dec
sub
inc
adc
adc
pop
sub
rcr
dec
push
hlt
mov
jle
adc
mov
les
xor
insl
dec
cld
insl
lea
jecxz
imul
push
lea
adc
adc
xchg
cs
push
or
insb
test
and
shll
in
jno
cltd
jmp
sub
ret
loope
push
jns
sub
dec
mov
sti
xor
popa
and
or
and
push
and
xchg
push
movsb
iret
mov
shl
scas
ret
mov
ret
sarb
xchg
orl
das
adc
rol
or
fimull
or
ret
push
mov
cmp
in
cmp
aaa
xlat
addb
or
or
or
or
or
or
in
cs
pushf
xlat
bound
repnz
xor
jl
ror
stc
push
push
inc
xchg
sub
out
loope
sub
clc
sub
sub
sahf
sub
xchg
fwait
icebp
mov
inc
mov
in
mov
fsubrl
lcall
jnp
and
xlat
test
mov
sarl
cmpb
xor
mov
out
outsl
xor
hlt
out
push
jl
cmp
out
stc
mov
movb
dec
cmp
mov
or
stc
lret
xchg
and
dec
mov
aad
xor
sub
push
mov
inc
push
mov
test
jg
aas
es
scas
mov
sub
push
push
mov
and
xchg
inc
inc
jmp
frstor
test
adc
and
out
or
sub
xor
cwtl
push
fstpl
jns
test
xor
sub
mov
movsb
mov
cli
push
cmp
fisttps
jae
push
dec
sub
lcall
cmpsb
dec
dec
stc
fs
movl
xchg
dec
xchg
sbb
roll
push
shlb
rorb
lret
pop
mov
and
iret
mov
push
loope
out
pushf
jmp
arpl
pusha
dec
cli
aam
out
jmp
add
inc
pop
inc
pop
mov
aad
inc
inc
es
or
leave
popf
dec
pop
test
cwtl
in
std
mov
cli
mulps
and
mul
stc
js
mov
jl
out
insl
cmp
and
dec
jae
push
shlb
and
fcoml
stos
xor
adcl
jb
dec
jp
dec
add
mov
iret
jle
shr
js
xchg
inc
jo
adc
mov
test
mov
xchg
push
popa
enter
mov
or
or
or
or
or
or
or
or
or
or
or
or
aas
and
add
push
aam
xchg
movsb
xor
ljmp
jo
mov
or
or
add
ss
lock
add
aam
call
pop
add
jno
nop
xor
jne
mov
popl
mov
or
push
or
fs
fisttpl
in
or
dec
shl
test
jo
jl
ret
out
mov
add
inc
mov
or
add
jo
inc
cmp
ss
sub
popa
push
jle
test
stc
add
cmpsb
daa
inc
outsb
lock
xor
imul
in
and
jge
mov
sti
rorb
mov
hlt
mov
mov
pop
and
pop
loope
dec
lods
push
cli
test
cmpl
push
lahf
adc
pop
jne
push
mov
aam
and
sarl
xchg
cld
frstor
cmp
das
sub
mov
lret
stos
inc
pop
dec
insl
test
inc
jp
sbbb
in
insb
loop
mov
adc
pop
mov
mov
sar
push
jno
inc
jmp
cmp
mov
packssdw
adc
cmc
aad
mov
lret
xlat
dec
fninit
sub
jl
iret
mov
cmp
xchg
imul
mov
inc
xor
int3
add
mov
xchg
das
jbe
or
jle
sub
mov
sub
inc
cli
daa
pushf
scas
insb
dec
sub
inc
xchg
imul
mov
or
xor
test
xorl
imul
pop
mov
sbb
xchg
dec
popf
xchg
xor
jae
pop
sahf
cmp
push
mov
je
out
adc
sbb
add
cmpsb
pop
les
repnz
inc
addr16
popf
gs
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
lds
pop
or
add
outsb
mov
jnp
aad
aaa
mov
lret
mov
scas
pop
mov
aam
pop
sbbl
cmpsl
and
sbb
bound
push
aad
push
cmp
inc
ljmp
and
cs
sbb
xor
les
or
aad
pop
jnp
inc
cmp
or
test
add
aam
insb
xchg
dec
adc
jg
lcall
stos
fwait
mov
icebp
cwtl
cltd
shll
jno
idivl
or
pop
insb
mov
ret
dec
inc
add
jo
divl
fmuls
push
inc
push
push
lret
sub
pop
cltd
fwait
xor
mov
jb
lret
add
xchg
das
xor
clc
testl
mov
push
movsb
push
aad
call
cmp
popa
ficoms
pop
and
fsubrs
push
mov
mov
or
or
or
adc
sub
xchg
cmp
test
pop
sbb
dec
sub
lock
leave
cmpsl
dec
dec
movsl
dec
push
xchg
mov
icebp
add
jnp
mov
aad
push
xchg
loop
adc
stos
in
cmp
mov
pop
or
mul
sub
rcrb
mov
test
mov
push
add
sti
notb
jmp
shll
lret
lods
cld
add
sbb
pop
xor
push
decl
sub
hlt
cmpsb
pop
sub
pop
ret
dec
subl
push
test
mov
loop
call
jns
dec
es
inc
dec
mov
or
adc
mov
cmp
or
push
insb
jne
in
sbb
arpl
sub
xor
sti
dec
mov
inc
nop
jmp
dec
lods
jle
jl
adc
jbe
aad
sub
pop
xor
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
push
scas
enter
xor
or
mov
sub
xchg
xor
inc
mov
out
inc
cld
mov
call
or
ret
lods
sbb
mov
xchg
scas
jno
jne
repz
mov
negl
or
movsb
xlat
xchg
test
iret
bound
dec
fcom
cltd
pop
lds
popa
sahf
out
daa
jb
add
push
inc
rolb
lea
jno
mov
mov
in
and
xor
cmp
xor
inc
mov
mov
stos
jle
cmpsb
ret
cmpsl
mov
xchg
xchg
rolb
shlb
adc
sbb
shrl
cwtl
out
outsl
xchg
or
jb
push
and
aad
or
mov
xchg
andl
movups
inc
xchg
push
xor
mov
add
and
xlat
popa
daa
or
push
add
xor
daa
push
sub
sbb
push
push
or
cli
lahf
and
pushf
movsb
sbb
inc
cwtl
mov
push
xchg
cmp
pop
stos
pop
jbe
xchg
int
call
push
xchg
lds
fwait
jnp
out
stc
sti
or
xchg
test
js
repz
mov
xchg
push
push
movsb
lret
dec
sub
jle
inc
bound
jl,pn
and
adc
out
push
pop
mov
int
imull
cli
xchg
incl
pop
fmuls
pop
xchg
loopne
push
mov
jecxz
cmc
inc
pop
adc
movsb
jle
pop
mov
out
push
xor
lret
movsl
xor
lods
lods
and
mov
or
bound
or
sbb
mov
sbb
icebp
div
adc
pop
es
push
loop
and
ljmp
rcl
pop
jmp
stc
lock
or
or
or
or
or
or
or
sub
sbb
mov
xor
icebp
lea
popf
inc
outsb
xor
sub
call
rol
cltd
mov
cld
push
sub
out
adc
cmc
out
jbe
movsl
mov
ljmp
mov
pop
js
dec
stos
pop
mov
cmp
push
jecxz
bound
xor
mov
cmpsl
xor
push
cmp
inc
jae
pop
pop
aaa
mov
es
push
jmp
jmp
hlt
faddl
insl
cmp
mov
imul
fiaddl
out
jecxz
cs
and
fnstcw
cmp
jle
loope
clc
push
xchg
jmp
mov
fldl
inc
test
int3
xchg
and
jnp
stos
pusha
sbbb
jb
outsb
xor
adc
inc
or
imul
adc
lret
inc
test
pop
das
xchg
mov
push
lods
test
mov
fidivl
xlat
ljmp
testl
mov
add
fadds
push
pop
xor
sti
sub
lcall
and
into
push
cli
js
adc
mov
pop
xchg
in
hlt
ss
sarl
jge
jmp
iret
aaa
jp
mov
mov
leave
loop
inc
outsl
fimuls
mov
popa
cs
inc
fsubrl
mov
dec
mov
imul
int
adc
mov
xchg
shrl
mov
divl
dec
pop
xor
push
push
mov
push
and
sbb
jecxz
push
lcall
lahf
aam
pop
cmovnp
xchg
push
pop
cmpsb
cmpsl
adc
pop
test
in
idivl
sub
mov
xchg
push
push
xlat
add
or
lea
jne
pop
mov
imul
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
aas
mov
adc
subl
test
inc
aas
adc
push
adc
cmpsl
mov
push
push
dec
mov
and
mov
sub
xor
xchg
pop
mov
dec
inc
repnz
dec
fs
icebp
out
out
outsl
sbb
add
movsb
int
and
mov
dec
mov
stc
sti
fildl
rol
push
iret
push
ds
icebp
test
cltd
test
das
dec
cmp
add
std
daa
mov
repz
mov
cli
es
mov
adc
fistps
inc
or
cmc
push
out
lea
les
xchg
or
cmp
sub
push
push
dec
lds
sbb
adc
and
mov
scas
mov
addr16
dec
iret
sub
inc
pushf
fldt
mov
mov
je
pushf
mov
lock
mov
jmp
icebp
pop
rol
inc
push
imul
mov
sub
inc
add
dec
in
data16
out
push
ds
dec
mov
inc
cmp
cmpsb
push
cs
lcall
js
or
mov
push
sbb
outsb
inc
stos
push
and
sbb
jmp
mov
and
mov
shrb
movsb
xchg
out
xor
mov
inc
push
mov
ljmp
push
xor
xor
mov
jg
push
data16
shl
and
cmpsl
xor
pop
dec
push
dec
std
sti
add
fisttpll
sbb
push
cwtl
cmp
jns
and
scas
in
sub
fs
xchg
or
leave
pop
in
xchg
js
jo
loop
mov
mov
mov
sbb
addr16
test
mov
dec
mov
scas
repnz
or
or
or
or
or
or
or
sub
pusha
stos
sbb
in
push
pop
arpl
jmp
jae
cmp
ficompl
mov
scas
dec
cmc
sbb
add
and
pop
pushf
popa
inc
cmpsb
hlt
lock
pop
dec
inc
jl
inc
and
stos
inc
xchg
ret
push
and
movsl
sbb
aam
in
out
add
mov
out
dec
les
stc
sbb
cwtl
jg
stos
jno
cmp
out
ja
nop
pushf
dec
xchg
lods
roll
les
leave
push
loop
sti
jmp
popf
pop
or
iret
mov
pop
fdivs
inc
ja
pmullw
ret
in
int
lahf
loop
insb
das
cld
xchg
mov
fsub
popf
jg
mov
gs
mov
pushf
sub
jp
lahf
push
add
sbb
dec
jge
add
or
mov
dec
dec
sub
xchg
mov
ja
or
ja,pn
inc
sub
mov
sbb
jae
push
in
rcrb
mov
jns
fidivs
pop
in
xchg
pop
iret
fisttpll
in
add
pop
and
adcb
insl
xor
sub
add
subb
ret
mov
mov
mov
push
jmp
jae
jo
cmp
dec
inc
sysret
dec
repz
nop
cmc
lods
popf
xchg
enter
jo
shr
cmc
out
inc
jno
jbe
cli
ja
and
aam
or
fcmovne
jns
bound
lods
sbb
or
fdivrl
lcall
insb
pop
sub
xchg
jb
out
js
mov
lock
jmp
in
xor
into
sub
sub
push
out
adc
dec
test
mov
pop
xor
jg
mov
jns
roll
mov
aam
mov
sbb
stos
ss
jp
pandn
movsl
pop
mov
xlat
int3
dec
adc
fimull
xchg
add
jo
leave
mov
or
or
or
or
or
or
or
or
or
or
or
sbb
sarl
sahf
push
xor
xor
bound
fiaddl
xor
mov
inc
mov
or
and
push
pop
pop
xor
inc
mov
in
mov
mov
dec
sub
pop
push
or
faddp
add
pop
ret
in
test
xor
jl
out
out
pusha
dec
in
adc
mov
js
mov
aam
adc
loop
mov
stos
xor
and
inc
test
xchg
outsb
mov
push
xor
adc
out
inc
loope
xor
in
mov
dec
pop
xor
push
mov
repz
sti
inc
mov
rcrl
test
enter
shlb
out
sbb
rcrl
test
nop
inc
fistpl
cs
nop
std
push
ds
fs
push
sbb
adc
fidivs
jecxz
je
pop
add
and
mov
add
push
mov
ja
sbb
adc
xchg
aaa
pop
sarb
mov
testb
cmp
and
push
inc
out
lods
ror
jno
ret
stos
inc
pop
pop
repz
and
fwait
cmp
je
mov
xor
ret
imul
xor
scas
mov
adc
dec
addb
mov
mov
jne
cmp
data16
jbe
mov
push
test
inc
pusha
popf
shlb
lcall
push
mov
jecxz
repnz
pop
add
insl
sub
rcll
repnz
pop
and
dec
mov
outsl
adc
or
or
fs
aaa
pop
cltd
movsb
sub
push
sub
jb
stos
aad
xchg
xor
cmc
ret
and
repz
add
jle
iret
idivl
dec
cmp
jo
sbb
inc
dec
repnz
mov
jecxz
or
mov
clc
dec
lret
inc
adc
pop
rorb
fs
je
mov
and
lods
movsb
je
mov
dec
mov
push
add
aaa
push
jne
pop
mov
mov
lret
add
push
mov
add
dec
jl
add
in
imul
xchg
pusha
jecxz
bound
out
in
jo
pop
sub
lods
inc
jb
jne
ss
inc
mov
fimuls
sub
xchg
push
mov
cmpsl
ja
sub
addr16
in
out
jp
outsl
out
mov
fisttps
ret
jmp
fwait
testb
dec
mov
mov
jb
cmp
mov
pop
dec
int
aas
mov
daa
jb
shr
or
pop
insl
push
sarl
mov
outsl
mov
pop
mov
in
push
inc
inc
jbe
or
xor
cmp
xchg
jnp
fdivrp
addr16
push
push
icebp
mov
cld
test
mov
mov
push
imul
mov
outsl
imul
jno
js
mov
cwtl
jbe
mov
pop
testl
xchg
std
fistl
std
shl
add
js
out
push
divl
add
push
jno
fdivs
sbb
lods
mov
push
popa
xor
push
mov
mov
jae
jnp
fisttps
sub
sbb
mov
jge
push
aam
or
out
inc
or
in
xor
insb
mov
lcall
inc
out
stc
jo
cmovne
shll
pop
inc
mov
jnp
scas
pop
push
js
cmp
loopne
or
sub
sub
js
mov
rorb
push
lock
add
or
jg
adc
sub
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
push
push
pop
mov
test
test
mov
cmpsb
xor
outsb
rolb
jns
sbbb
push
loop
leave
outsb
cli
push
insb
rol
inc
add
add
mov
inc
cld
cmp
xlat
call
lods
or
xchg
clc
pop
daa
jg
jo
mov
outsl
sbb
jl
jg
push
mov
push
jle
loopne
mov
jae
and
cmp
aam
sti
xchg
repz
lods
pop
mov
mov
inc
out
cld
fidivs
lods
lahf
hlt
mov
cmpsl
lahf
repz
int3
jno
xor
daa
and
pop
aaa
daa
pop
xchg
call
xor
xchg
xor
push
je
mov
sti
mov
sbb
sbb
cmp
inc
bound
or
inc
xor
inc
stc
inc
lret
mov
movsb
inc
mov
aam
push
jae
or
adc
int3
pushf
push
addr16
sti
aad
or
pop
lock
lcall
push
and
dec
mov
xchg
repnz
push
add
jno
mov
and
dec
jbe
mull
cmp
ds
sub
jbe
jne
inc
inc
adc
scas
rclb
push
fcompl
cmp
cs
rcrl
dec
xor
adc
repz
sbb
pop
sub
popf
repnz
pushf
inc
push
stc
icebp
jae
addl
ss
dec
in
jb
out
aaa
pop
mov
jb
jmp
adc
sar
data16
mov
sub
sub
loop
in
sub
inc
frstor
add
mov
and
imul
call
test
icebp
pusha
and
add
jno
cwtl
mov
cli
clc
dec
das
sbb
cmp
jmp
or
or
or
or
or
or
or
or
or
or
or
or
mov
mov
lock
lds
daa
jnp
add
ret
loope
insb
xor
mov
pusha
movl
lods
fcmovbe
sub
pushf
and
iret
pusha
push
cld
std
mov
push
lds
dec
inc
out
pop
mov
sub
leave
sub
sbb
pushf
les
mov
and
jbe
fistpll
inc
xchg
or
dec
mov
adc
lods
push
not
mov
push
add
in
mov
jne
inc
xor
pop
adc
sbbb
jmp
lods
sahf
pop
push
mov
push
sub
dec
in
push
mov
cmpsl
cmp
pop
rorl
xchg
sbb
call
mov
push
pop
cmpsb
jg
add
jns
pop
cwtl
cltd
mov
mov
jnp
pop
inc
je
xchg
scas
fwait
sub
loopnew
cld
cmp
out
sarb
push
cld
clc
xchg
cmc
inc
scas
xchg
aas
scas
xor
lods
mov
int
mov
xor
pop
scas
ds
and
mov
subl
cmp
arpl
xchg
ret
pop
repz
adc
nop
out
pop
mov
sbb
push
clc
jle
inc
sub
bnd
pusha
mov
jmp
test
lods
inc
pop
mov
pusha
shr
incb
xchg
mov
inc
into
or
push
movsb
mov
jae
and
lods
jb
inc
jae
int3
and
cltd
xchg
loop
jmp
ret
xor
cmpsb
xor
sub
mov
xor
xchg
mov
push
inc
or
and
and
jp
xchg
addr16
in
dec
cwtl
icebp
call
push
movsb
mov
movsl
cld
pusha
bound
test
iret
jno
rolb
pop
in
loope
arpl
sbb
jg
dec
inc
test
push
xchg
cmpsl
add
jbe
xor
scas
xor
cli
test
insl
xor
call
xchg
data16
or
or
idivb
cmp
push
dec
roll
add
adc
clc
mov
out
or
insb
stos
jno
mov
add
push
xchg
sub
repnz
inc
shll
mov
and
test
inc
or
push
stos
sti
push
push
dec
or
movsw
mov
imul
or
add
adc
mov
loope
mov
push
stc
pop
mov
testl
dec
xchg
stc
popa
jecxz
bound
cmc
or
fidivl
sbb
imulb
xchg
jecxz
nop
hlt
or
xor
dec
pop
enter
sti
add
loop
add
iret
rol
pop
ds
cmp
dec
adc
rclb
dec
shrl
shl
and
out
mov
jge
call
jmp
mov
jb
sub
adc
cmc
push
imul
cmpsb
lahf
cmp
sbb
imul
mov
pop
cs
cltd
or
cmp
ja
and
js
stc
fmuls
int
sbb
fildll
fcomps
cld
dec
mov
ljmp
sbb
outsb
into
cmpb
jo
mov
test
lret
lea
jno
mov
daa
cmp
sti
iret
mov
pop
icebp
fwait
push
outsl
pusha
sub
cmpsb
mov
aaa
cmp
push
stos
and
xchg
jne
rcr
sbb
jo
dec
dec
sti
dec
xchg
pop
cmp
mov
mov
mov
fnsave
test
popw
and
pop
jmp
lods
inc
lods
fbld
xor
fs
push
mov
arpl
mov
cld
lods
jno
outsl
mov
mov
mov
nop
aam
mov
and
imul
mov
dec
clc
adc
push
outsl
cmpsb
outsb
mov
jecxz
mov
repz
das
negb
mov
cld
stos
sub
bound
xor
push
jp
mov
lods
dec
mov
mov
jo
push
cmpb
xchg
loopne
or
fwait
shll
push
jmp
mov
xlat
sbb
pop
mov
mov
mull
hlt
mov
or
cmp
xchg
jge
hlt
mov
inc
ljmp
inc
xchg
repnz
jae
mov
or
push
rcr
mov
dec
rol
jmp
mov
add
lret
and
mov
and
lods
jb
push
mov
adc
ret
and
cmp
add
ljmp
cmc
ret
jmp
xor
or
daa
int3
mov
jbe
jge
xorb
and
push
xchg
in
std
test
jb
popf
jbe
jl
lods
jle
dec
scas
or
ss
fs
testl
jl
inc
add
pop
jns
adc
leave
mov
jp
aaa
ficoms
xor
xor
scas
dec
in
xchg
mov
jmp
inc
fwait
inc
mov
mov
js
orl
lret
push
and
or
out
mov
pushf
gs
xchg
sbb
add
mov
rorl
repz
aad
or
inc
pop
sub
pop
jmp
stc
or
add
xchg
jl
dec
inc
cwtl
nop
int
in
or
jo
inc
adc
bnd
adc
loop
ret
sbb
and
out
push
inc
adcb
adc
cmp
clc
rcll
jle
or
or
or
or
or
or
or
or
or
or
or
or
pop
inc
outsb
adc
cltd
inc
jl
jno
std
jmp
cmp
outsl
jne
sub
push
xor
mov
mov
aam
fwait
clc
pop
sbb
rol
add
loop
clc
xchg
sub
inc
jns
push
incb
cmpsb
push
cs
push
mov
movsl
fildll
in
jb
xchg
lods
rol
test
in
add
in
mov
or
cmp
testb
inc
loope
xor
lret
lahf
dec
jns
in
pop
push
jmp
js
lods
loopne
sbb
xchg
clc
rclb
sub
into
cmp
pop
js
test
cmp
mov
test
in
sub
test
inc
adc
repnz
push
inc
mov
xchg
lock
fs
jbe
aaa
dec
pop
mov
stos
inc
xchg
inc
push
sub
lcall
xlat
cmpb
jp
push
movsb
ja
sahf
ds
gs
pop
dec
push
jg
push
mov
jmp
cmp
in
ret
in
pop
rol
int
enter
jns
push
and
or
ljmp
call
lock
js
mov
lds
and
sub
in
stos
pop
std
adcb
dec
fists
hlt
aaa
push
cmc
hlt
sub
pop
mov
repz
mov
sub
icebp
in
push
cltd
daa
mov
xor
push
fs
ljmp
pop
lds
in
sub
ds
inc
aaa
lcall
jns
lcall
push
add
icebp
cmpsl
sbb
dec
and
dec
mov
sbbl
push
adc
into
popa
in
in
mov
idivl
xchg
cmp
adc
xchg
dec
orl
cs
xchg
in
sbb
das
inc
and
lods
sbb
js
dec
mov
mov
xchg
in
mov
sbb
mov
push
xchg
mov
mov
adc
ds
int
aaa
fdivl
imul
stos
pop
push
sbb
xor
scas
int3
and
sub
cmp
inc
mulb
dec
mov
mov
outsl
push
mov
or
call
mov
mov
popa
jmp
pop
pushf
xor
jecxz
push
and
cs
pushl
pusha
ret
and
dec
into
fcom
lods
outsl
inc
xchg
into
sti
jnp
repz
xor
dec
mov
lock
clc
adc
xor
jg
ds
add
xchg
push
ljmp
nop
xor
xchg
cmp
mov
aam
insl
jp
js
pop
sub
out
movsl
mov
add
enter
inc
in
xchg
clc
popa
in
lea
shrb
pop
or
adc
sbb
fcompl
mov
loope
push
jbe
or
les
cmp
add
dec
cld
in
xor
mov
add
or
xchg
or
scas
sti
dec
cmpsb
dec
and
adc
inc
dec
bound
add
out
popa
rcrb
lock
push
jl
pop
adc
das
sub
adcl
repnz
outsl
sub
cmp
add
cmp
xchg
or
out
xor
stos
sub
lret
jp
xor
fistps
bound
xlat
xchg
or
jle
and
sub
push
or
aaa
js
fcomip
push
add
push
ljmp
adc
xchg
fdivl
mov
rcrb
cmp
dec
sbb
inc
xchg
aam
xlat
mov
push
movsb
in
push
movsb
xlat
dec
or
xor
xchg
enter
enter
int3
xchg
repz
mov
out
pop
scas
sub
lahf
or
stc
xlat
adc
or
or
or
or
or
or
or
or
inc
push
push
and
sub
jns,pn
fisubs
or
pop
and
sbb
xorl
mov
sbb
mov
fs
sbb
lds
xchg
js
stos
jle
cli
xchg
push
aam
or
movsb
dec
cmp
xor
out
scas
jo
out
xor
add
js
sbbb
fisttps
ja
icebp
add
adc
call
mov
int3
pop
xchg
pushf
sub
jle
clc
mov
push
jp
cmp
divl
jno
xchg
inc
dec
sbb
jne
pop
xchg
mov
xchg
dec
inc
xor
test
mov
push
popf
fsubrs
push
mov
or
sbb
push
push
jmp
ja
lods
out
arpl
cs
mov
test
push
xor
in
or
cs
adc
shrb
ss
inc
sbb
lds
pop
lret
mov
loopne
stos
mov
test
ja
sub
dec
sub
pop
sbb
jo
imul
mov
sbbl
sub
cld
imul
pop
or
das
xchg
lods
jns
aas
outsl
enter
cld
mov
test
xor
lods
orl
jno
add
cmc
cmp
rcrb
dec
push
aad
pop
ja
mov
gs
repnz
sbb
jnp
adc
popa
shrl
pop
adc
mov
or
dec
dec
mov
jno
jno
popa
dec
xchg
ss
add
mov
nop
in
and
add
jae
data16
in
scas
or
jge
sbb
in
mov
fimull
vmread
cs
pop
ret
or
pop
cmpsl
and
cmp
sub
dec
push
xor
sbb
cmp
xor
arpl
aam
lea
je
mov
lods
pusha
cmpsl
mov
mov
mov
mov
cs
jle
dec
jbe
clc
push
ret
sub
pop
fdivrl
and
clc
dec
jle
sub
cmp
cmp
pop
ret
mov
mov
xchg
cmp
in
or
sbb
xchg
sub
lock
xor
fcmovnu
jmp
les
add
popf
pop
cmp
mov
clc
xlat
pop
repz
mov
sbb
icebp
push
jp
mov
fistl
add
jno
cmp
xchg
out
cmp
popf
inc
pushf
call
mov
in
adc
mov
stc
or
int3
out
or
mov
loope
in
loope
mov
outsl
js
mov
pop
push
mov
or
ljmp
mov
je
cmc
ficompl
je,pn
repz
mov
je
mov
push
loope
repnz
mov
jle
xor
mov
enter
sbb
shll
cmpb
and
jecxz
iret
fmuls
mov
data16
cmp
sbb
gs
push
xlat
and
call
dec
iret
xor
inc
jno
push
andl
mov
scas
jp
shr
pop
test
xchg
repz
mov
fsubl
sbb
and
stos
push
push
push
add
les
movsl
sti
pop
mov
les
add
sbb
jno
pop
sar
ss
lahf
popa
mov
in
sub
jae
mov
iret
mov
xchg
sahf
cld
xchg
aaa
dec
imul
add
or
or
or
or
or
or
or
shrb
dec
popa
mull
das
lahf
add
inc
or
popf
ret
insl
mov
fsubrs
cld
cmpsb
cmp
test
ds
xlat
adc
pop
imul
neg
mov
xchg
les
and
incb
or
mov
call
mov
shlb
adc
mov
out
das
xchg
dec
enter
dec
out
cmpsl
dec
pop
mov
dec
outsb
ret
jno
or
dec
adc
mov
outsb
jae
dec
cwtl
jle
pop
mov
pop
into
adc
xchg
push
rep
cmpb
cmc
sub
xor
scas
leave
insb
cs
pop
jle
jp
mov
inc
or
dec
data16
jl
pop
movsb
je
cmp
jno
lods
xchg
fdivs
dec
and
or
aas
rcrl
mov
cmpb
pushw
push
cwtl
cli
jg
cs
push
addr16
sub
out
outsl
push
sbb
xchg
inc
pop
rolb
sub
imul
clc
inc
les
mov
inc
scas
lret
inc
inc
cmp
je
cli
cli
cmp
ljmp
cmpb
pop
pushl
mov
xchg
add
dec
clc
shrl
xchg
aam
ret
hlt
add
jle
mov
cmpsb
or
ljmp
rolb
fsubrs
rcrl
adc
cmp
inc
pop
mov
aad
dec
pop
ret
in
jl
mov
add
data16
scas
jno
jno
push
pusha
stos
lods
in
xchg
xor
sbb
adc
jp
or
and
movsl
dec
mov
xchg
loope
sbb
outsb
icebp
or
or
or
or
or
or
or
or
ljmp
cmp
lods
or
add
inc
push
mov
ret
sub
mov
insl
pop
xor
and
repnz
mov
stos
adc
mov
stos
push
faddp
jo
mov
mov
sbb
sbb
xor
sar
mov
outsb
lods
lods
push
lods
enter
mov
rcl
mov
mov
xor
cmp
fwait
movsl
adc
lods
mov
push
jle
aad
aad
or
mov
cmp
or
xor
xchg
test
or
sub
mov
dec
mov
add
aaa
cmp
dec
in
push
lret
xchg
jmp
and
sbb
mov
loope
pusha
cli
gs
and
scas
or
lahf
popf
add
fs
jnp
inc
push
movl
dec
repnz
xchg
sbb
adc
test
fbld
inc
jg
in
mov
ret
cmpsb
adc
scas
clc
lods
jnp
add
addl
stos
pop
mov
cmpsl
fsubs
mov
xor
psubusb
fldenv
pop
adc
sahf
stos
pop
sbb
adc
sub
outsl
test
xchg
dec
inc
js
sarb
mov
jg
into
fwait
xchg
fstpt
fimuls
sbb
push
inc
aaa
mov
and
and
mov
jle
lds
mov
push
clc
push
and
sub
imul
aam
sbb
ss
jge
pushf
inc
push
out
fwait
and
dec
mov
jae
daa
pop
test
add
repz
ljmp
addl
inc
movsb
xchg
or
hlt
xlat
insl
and
stos
sbb
fcoms
iret
push
lds
inc
idivl
aas
dec
pop
jmp
inc
or
or
or
or
or
or
or
or
or
or
or
or
xchg
add
cs
sti
mov
pop
rolb
jp
mov
insb
test
cmpsl
jl
rolb
jae
xor
sub
fucom
imul
lahf
mov
add
aad
sbb
dec
cwtl
jo
push
and
jecxz
push
cltd
sbb
fxch
xor
pop
lds
sarb
xor
adc
mov
in
push
cs
movsb
xchg
and
cwtl
push
jecxz
cmpsl
xchg
lods
cmp
xchg
inc
jne
fsubl
in
movsb
in
mov
repnz
sub
jb
sbb
xchg
popa
test
add
dec
inc
fwait
shlb
jg
cmp
jne
cwtl
adc
xchg
insb
pop
or
mov
out
push
aam
xor
jp
add
mul
insb
mov
cmc
rcll
and
in
cmp
jo
push
or
negl
push
xor
mov
push
lods
mov
mov
pop
out
aaa
pop
jg
inc
sub
mov
pop
nop
icebp
ja
push
mov
int
pop
jb
jb
js
xor
cli
frstor
arpl
aam
jno
jle
rorl
loopne
xor
in
dec
add
pop
es
or
jo
lds
sahf
bound
sbb
add
stos
movsb
leave
push
jb
jns
cmpsl
and
lahf
stc
push
push
into
hlt
or
repz
inc
stos
and
ljmp
xchg
mov
outsl
rcrl
mov
mov
add
xchg
aam
out
mov
and
and
xchg
add
int3
mov
jae
cmp
mov
dec
mov
or
jge
call
mov
sub
fxch
add
mov
es
jmp
out
dec
xor
mov
inc
push
lea
mov
mov
adc
clc
add
sbb
cmpsb
ret
dec
ret
insb
sub
inc
movsl
mov
pop
adc
mov
push
sub
fbld
sbb
into
in
bound
xchg
dec
sbb
sub
sahf
das
mov
insl
cmpsl
fs
sub
es
mov
inc
adc
add
jl
mov
pop
ret
jae
cltd
daa
gs
or
pop
mov
cmp
push
ret
rcrb
inc
das
sti
xchg
adc
fldt
mov
sbb
jbe
addr16
mov
mov
lods
xor
push
shl
popa
add
cmc
test
jmp
outsl
fnstenv
xorw
sbb
daa
push
shlb
jae
imul
in
push
or
mov
and
push
sar
dec
sarb
insl
sub
fistps
sbb
xchg
add
clc
int
or
in
out
jnp
insl
mov
lea
inc
push
ret
scas
repnz
in
add
mov
cmp
xor
add
hlt
jbe
arpl
cmp
pusha
insl
jns
dec
mov
inc
movsb
inc
and
adc
pop
aaa
out
aas
fistl
ret
fnstsw
cmpsb
dec
clc
dec
aam
and
std
inc
cs
jge
mov
xchg
lea
xor
mov
pusha
rcr
dec
loop
push
mov
push
add
push
mov
push
addr16
pop
outsb
clc
or
outsb
mov
sti
pushf
inc
jg
pop
lcall
data16
pushf
stos
cmp
sub
scas
lock
jecxz
adc
adc
inc
sti
dec
xchg
push
fildll
lock
idivl
xchg
xor
and
or
or
or
or
or
or
or
jns
sbb
inc
adc
jg
sbb
sub
push
push
lcall
add
rclb
add
jle
sub
leave
xchg
arpl
pop
xchg
daa
push
xchg
mov
mov
iret
sbb
sub
lahf
lahf
xor
leave
aad
aas
mov
xor
inc
sahf
adc
and
mov
cs
incl
jae
idivl
jbe
std
addl
lds
push
sbb
clc
xchg
mov
xchg
insl
mov
adc
dec
sub
in
fistps
in
push
aam
out
ljmp
xchg
rolb
push
jne
cmpsb
inc
xchg
shlb
inc
les
xor
jp
or
in
andnps
mov
leave
imul
mov
and
mov
iret
inc
push
pcmpeqw
loop
lea
in
xchg
das
cmc
push
inc
sbb
mov
enter
or
dec
sbb
test
popf
les
push
and
sub
sysret
xor
sbb
cld
daa
and
adc
sub
jbe
fidivrl
and
xchg
jb
insl
xlat
les
in
and
cmovp
fsubr
push
std
push
ret
int3
push
not
fistpl
and
mov
ret
call
ret
mov
push
das
adcb
jbe
out
loop
sub
inc
adc
sti
xchg
xchg
and
adc
xchg
dec
mov
call
sbb
into
lret
icebp
jo
inc
scas
sti
pop
in
xorb
xchg
mov
aad
push
add
hlt
and
mov
xchg
push
sbb
mov
mov
inc
in
das
jnp
add
add
ret
jecxz
outsb
mov
jnp
stc
sbb
scas
fildl
andb
xchg
sbb
mov
and
shl
test
lods
and
jno
pop
lds
loopne
jl
fwait
dec
dec
xchg
mov
scas
xchg
data16
movb
pop
inc
mov
dec
push
stos
nop
je
aam
pop
mov
jl
or
pop
push
xlat
das
paddusb
in
xchg
shl
fwait
sub
or
sub
mov
mov
fs
jecxz
adc
out
xchg
mov
pop
cs
je
jno
shr
sbb
pop
dec
jnp
mov
jge
loope
mov
add
add
adc
in
jbe
xor
shr
mov
mov
mov
sub
push
loope
adc
xchg
sub
sub
insb
inc
stos
dec
jbe
mov
cmc
mov
test
test
fwait
sub
repnz
imul
arpl
fisubrl
sub
jp
sbb
or
add
lcall
push
dec
and
and
xchg
daa
addr16
imul
sbb
sub
push
ficoml
sahf
cmp
ret
cmp
sbb
jl
ja
loope
fldcw
mov
and
jmp
mov
cmp
rorl
rolb
addb
dec
and
roll
imul
push
out
jae
xor
mov
and
xchg
fstpl
daa
outsb
jg
add
imull
fildl
lret
cmp
pop
xor
push
xor
icebp
dec
leave
imul
mov
xchg
xadd
sub
iret
mov
xchg
xchg
push
out
data16
fwait
popf
mov
ja
jo
inc
in
in
jmp
cmovg
in
les
and
lcall
pop
insl
xchg
movsl
push
jle
aaa
dec
repz
sbb
sbb
or
aas
sub
adc
jae
loop
shrb
out
xchg
repz
xlat
and
jmp
cwtl
rol
inc
scas
mov
test
push
xor
push
lock
jmp
xchg
jne
aas
jns
or
lret
pop
mov
jp
and
aad
aaa
ret
cmp
jmp
ret
mov
loopne
cwtl
adc
xor
mov
idivb
add
cs
popa
pop
shll
repz
push
sbb
sub
dec
xchg
into
fsubl
add
sbb
cmpb
dec
cmc
cmp
ljmp
lock
push
call
mov
cmpsl
int3
adc
mov
sahf
dec
inc
jmp
repnz
cmp
push
sbb
mov
rclb
jo
call
jle
cmp
mov
fildll
sbb
sbb
into
cmp
adc
in
push
test
adc
rolb
push
mov
add
mov
adc
mov
in
lea
mov
xor
adc
decl
mov
rorb
repnz
cwtl
data16
aam
cwtl
push
outsb
jp
lods
outsl
scas
lcall
mov
xor
out
push
sti
fistps
out
inc
aam
sahf
not
mov
out
addr16
cmp
mov
xchg
dec
sahf
out
mulb
lds
mov
loop
outsb
sub
mov
aam
mov
mov
inc
xor
enter
aas
loope
jle
and
in
mov
lods
xchg
lods
orl
mov
js
xor
in
mov
mov
cs
jge
cmp
or
or
or
or
or
or
or
or
or
or
or
or
or
or
dec
ss
loop
mov
cs
test
push
sub
lods
sbb
sub
stos
stos
pushf
test
dec
cld
sbbb
cmp
daa
push
lock
fmuls
and
js
pop
lods
xchg
xchg
jo
lock
sbb
mov
int
pop
mov
mov
push
popf
cmpsb
sub
roll
jl
xor
add
fidivl
jl
jno
data16
outsb
xor
jecxz
xchg
mull
rol
imul
jb
loope
out
inc
xchg
fs
nop
stos
hlt
pop
scas
inc
and
pop
pushf
out
cmp
xor
out
icebp
sbb
je
adc
iret
dec
and
cwtl
mov
ljmp
xorps
mov
icebp
jmp
lret
mov
push
xchg
jnp
adc
adc
sbb
dec
mov
pop
nop
dec
inc
and
mov
ret
mov
adc
and
push
mov
lret
jle
mov
mov
mov
sbb
mov
aad
push
pop
insb
out
sub
pop
jmp
dec
mov
mov
out
test
outsb
lcall
js
xlat
popf
in
xchg
mov
cs
and
mov
mov
mov
mov
hlt
cld
jno,pn
lock
in
sub
or
add
idivl
jmp
inc
movsl
inc
mov
xchg
std
sahf
dec
andb
shrb
cli
or
je
cmc
test
jp
ljmp
arpl
decl
dec
or
push
pop
lcall
push
mov
dec
or
cmc
es
xchg
push
sbb
test
sub
cmpsl
iret
and
cmc
push
stos
pop
or
jns
out
and
cmp
jae
push
xlat
mov
enter
mov
or
or
or
or
or
or
or
or
or
or
or
or
adc
mov
push
dec
scas
and
hlt
mov
popl
adc
icebp
test
hlt
lds
xchg
ficomps
add
imul
push
addr16
and
aaa
sbb
or
jb
bound
push
xchg
add
nop
pop
in
mov
dec
push
outsb
inc
in
xorb
ljmp
adc
int
cltd
cmp
das
jge
jmp
data16
ficompl
push
jnp
push
aad
ljmp
inc
xor
jnp
mov
push
daa
sarl
popf
jae
mov
lock
mov
ret
dec
xor
cltd
lahf
or
inc
mov
sbb
push
out
mov
loope
cmp
sub
js
out
mov
imul
jno
jg
sahf
xchg
cmp
fnstenv
mov
andl
cmp
inc
inc
jb
sub
and
out
cmp
mov
loopne
inc
and
insb
test
in
aaa
inc
rclb
xchg
icebp
repz
fidivs
dec
pop
mov
cmp
out
stc
sbb
mov
and
aad
divl
lods
inc
jbe
cmp
fistl
jb
inc
in
push
mov
sti
lds
ja
jmp
roll
insl
and
mov
sub
shll
jno
rcll
xor
jmp
xchg
xchg
adc
sub
xchg
in
and
mov
dec
cwtl
rclb
adc
jp
je,pn
jecxz
lret
jns
imul
outsl
mov
scas
cwtl
lds
jae
sbb
dec
stos
dec
and
mov
xor
and
mov
lods
fdiv
xor
inc
stos
sar
push
cs
push
jle
or
inc
stc
sub
cli
cmp
fsubl
nop
mov
sub
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
test
sbb
and
push
fs
arpl
push
js
xor
or
xchg
push
dec
add
int3
push
mov
std
inc
imul
cld
into
mov
inc
les
les
adc
enter
test
bound
push
cmp
iret
jmp
jl
pop
mov
aaa
inc
pop
shll
jno
iret
and
cltd
jl
aam
addr16
std
outsl
dec
jle
cltd
sub
cld
ja
or
sub
or
xor
mov
pminub
test
inc
jg
mov
mov
pop
scas
xor
push
leave
mov
enter
mov
aaa
inc
cmp
cmpsb
jge
mov
fs
fidivrs
insl
inc
xor
jg
adc
loopne
stos
sti
inc
mov
sbb
mov
xor
mov
in
in
jnp
mov
int3
mov
je
clc
lret
sahf
cltd
in
sbb
mov
add
addb
push
or
testb
dec
adc
popl
add
sarb
mov
add
pushf
cmp
mov
pop
icebp
mov
xor
test
adc
mov
iret
rcll
sbb
add
or
ret
lock
into
cmp
adc
xor
leave
xorl
dec
mov
push
add
out
popf
scas
jge
xchg
push
xchg
aaa
pusha
mov
and
mov
lea
mov
push
and
scas
bound
stc
cmp
xor
add
jp
pushf
xor
test
icebp
pop
test
test
lret
jecxz
jo
mov
cs
add
cmc
cmp
popf
push
pop
aam
adc
sbb
xor
cwtl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
xchg
in
pop
lret
imul
mov
sub
pop
sarl
call
xor
roll
push
and
jecxz
mov
fwait
movsb
gs
and
inc
jp
pop
je
cwtl
pusha
adcl
movd
das
push
sahf
popf
arpl
fistpll
aad
pop
add
jl
push
push
add
mov
mov
add
jns
mov
in
mov
pop
out
xor
hlt
stos
jp
fwait
dec
aaa
test
push
popa
cmc
sti
out
push
jp
arpl
icebp
xchg
notl
stos
sub
add
mov
mov
pop
mov
or
in
enter
mov
adc
pushf
xor
push
int3
lods
aas
filds
ds
push
hlt
in
push
inc
lcall
outsb
insb
and
push
push
cs
das
xor
pop
cli
pushf
in
out
dec
jb
hlt
aam
inc
fidivl
push
xor
cmc
jle
bound
add
xor
mov
push
stos
and
sub
cmp
in
imul
pop
sub
rcrl
jbe
mov
add
or
xor
mov
adc
pushl
aad
add
dec
mov
divb
xchg
dec
and
clc
push
aaa
xchg
mov
cli
push
jle
shll
jae
sbb
addr16
shll
mov
movsl
sbb
jbe
push
ficoml
mov
push
repnz
cld
lret
push
nop
xlat
inc
shl
mov
inc
push
adc
rorb
insb
fwait
imul
mov
stos
lret
pushw
jno
cmpsb
add
dec
es
add
mov
test
fs
mov
in
mov
cwtl
ss
dec
scas
cld
sbb
int3
cmp
sbb
and
mov
fwait
mov
mov
jbe
outsb
fdivr
jecxz
mov
lret
push
jge
lret
jle
cld
or
test
lods
inc
sub
aam
cmp
outsb
push
jl
fstl
je
js
xor
cltd
and
jg
scas
xlat
or
aaa
push
fisubrs
and
jbe
jns,pt
insb
xor
in
xchg
cmpsl
nop
decb
jecxz
movsb
push
pushf
jne
add
sbb
clc
and
les
jns
xchg
mov
dec
fwait
nop
mov
inc
mov
xchg
sub
in
fucomip
dec
or
pop
xchg
xor
mov
mov
dec
inc
pusha
pop
jge
xor
add
es
pop
dec
insb
cld
mov
jbe
jb
dec
iret
mov
sahf
sub
out
test
out
test
popf
mov
out
ss
push
sti
mulb
cmp
push
std
shrb
pop
sub
pop
sbb
jmp
lock
arpl
jl
test
mov
sbbl
sbb
loope
push
mov
cltd
pop
dec
orl
out
adc
mov
adc
jne
test
jle
cmp
sbb
and
pop
cmp
and
mov
xor
push
cmp
add
das
mov
mov
or
adc
mov
rclb
test
sbb
mov
lahf
orb
sub
and
dec
xor
mov
inc
or
push
dec
jbe
andb
sbb
add
pop
out
cmp
mov
jnp
jbe
inc
cmpsl
fpatan
scas
pop
dec
dec
xchg
dec
sub
dec
or
in
sbb
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
sbb
mov
repnz
movb
or
jbe
cmc
mov
cmp
sub
ja
push
inc
aam
ror
daa
shl
mov
pop
fisttpl
and
push
mov
push
push
mov
push
cli
sbb
or
add
mov
xchg
cli
mov
test
push
pop
cmp
pop
mov
addr16
jmp
and
loopne
jno
fdivrs
hlt
in
push
push
dec
sub
pushf
in
pusha
or
cmp
adc
lock
sub
mov
xchg
push
inc
push
mov
cmp
and
dec
xor
xor
cltd
fildll
loopne
std
pushf
xchg
adc
sbb
in
sub
add
js
enter
lahf
loope
int3
cs
loopne
ds
test
pcmpeqb
dec
push
push
rolb
stc
cmp
fisttps
fsubrp
add
dec
mov
xor
cmp
adc
lret
cmp
sub
jl
ret
sbb
in
push
pop
adc
push
or
cltd
popf
repnz
pop
stos
push
call
cld
push
sub
enter
fwait
sbb
lret
jo
mov
pop
add
clc
pop
lcall
mov
pop
insl
int
mov
jp
sti
das
inc
pop
xor
shlb
sub
and
ja
xchg
jg
pop
cli
movsl
int3
movsb
pop
xchg
or
mov
xchg
sbb
sbb
dec
scas
movsb
insl
sti
cmp
shrb
push
test
lods
shl
ja
inc
test
lea
subl
imul
mov
int
incl
xchg
repnz
xchg
aas
pop
cmpb
in
xor
add
imul
pop
sub
jb
loopne
rolb
lret
dec
or
or
or
or
or
or
or
or
or
or
or
or
dec
mov
xor
and
inc
mov
or
sbbb
incb
lret
or
negb
scas
ret
add
mov
lods
push
xorl
jne
in
pop
addr16
movsl
outsb
lcall
sbb
fs
sbb
jge
outsl
dec
fsubrp
loope
repz
mov
mov
mov
xchg
jns
push
mov
das
rolb
pop
lret
pop
mov
bound
push
inc
clc
stc
or
xchg
mov
sbb
adc
cmp
pop
jle
mov
fwait
loope
mov
push
xchg
pop
inc
xor
repz
push
movsb
cmp
or
mov
sbb
lret
sbb
dec
addr16
ret
clc
mov
fstl
or
sub
push
pop
loopne
cmp
cmpsb
push
daa
sbb
out
aas
lahf
and
mov
nop
movsb
xor
enter
sbb
call
aaa
adc
sarl
sbb
stos
in
push
sbb
pop
les
xor
mov
imul
dec
out
adc
jno
iret
dec
jg
mov
data16
add
push
xchg
and
dec
mov
dec
mov
adc
aad
add
cs
fdivrs
popa
dec
xlat
mov
fisttpl
mov
cmp
sbb
gs
or
lea
or
cwtl
sbbl
outsb
movsl
jae
sub
mov
push
xor
mov
xlat
push
xor
imul
das
out
es
jmp
sbb
cmp
push
cmp
inc
stc
outsl
int3
mov
pop
add
lods
lea
xor
mov
popf
ret
adc
xor
std
jo
out
or
int
insl
scas
xchg
loopne
sbb
insl
icebp
test
cmp
jl
stc
cmp
repnz
icebp
les
and
add
out
arpl
inc
lret
rcll
push
push
push
cli
shrl
pop
mov
inc
push
lcall
adcl
lahf
mov
hlt
inc
or
push
lock
mov
sbb
fcmovne
cwtl
jae
add
adc
hlt
ss
jecxz
test
test
mov
pushl
out
cwtl
jns
push
sarl
cmpl
mov
pushf
pop
jne
js
cld
stos
enter
movhps
shll
in
sbb
mov
add
xchg
push
xchg
lcall
divl
push
dec
dec
shlb
shll
mov
or
shlb
push
mov
cli
int
push
in
sub
int
and
xchg
pop
xchg
inc
enter
push
loopne
lret
jecxz
fimuls
out
test
out
orl
pushf
jle
push
cli
movsl
cmp
cmpsl
in
jbe
arpl
out
hlt
repz
add
idivb
call
jecxz
movsb
pushfw
pop
adc
push
jge
mov
inc
inc
enter
shrl
cmp
and
sub
and
lock
adc
dec
mov
sbb
inc
cltd
cmpsl
test
imul
int
das
lret
dec
push
cld
xlat
sarl
mov
push
int
subl
jp
cs
cmp
mov
jnp
popf
or
insl
cmp
dec
addl
lret
fcompl
jae
xchg
inc
test
xchg
dec
mov
pop
xchg
mov
mov
or
int
cmp
xchg
stos
cmpsb
jecxz
mov
jmp
insl
mov
push
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
icebp
inc
outsl
test
clc
jb
xor
cmp
jecxz
adc
pop
dec
aad
repnz
and
dec
jle
cmp
cmp
xlat
fs
pusha
fwait
adc
cltd
pushf
add
xor
xlat
cmp
repnz
out
sub
into
cmc
roll
mov
sbb
cs
inc
mov
sarl
insl
pushf
icebp
dec
or
cs
jb
inc
inc
jns
and
fstl
sub
xor
cmpsb
inc
out
xor
cltd
xchg
xchg
fidivrl
jge
jo
sbb
scas
ficomps
xrelease
loopne
test
imull
mov
enter
arpl
jb
adc
mov
pop
inc
pop
cmp
imul
jno
pop
sbb
sbb
outsb
inc
notb
mov
int3
xor
mov
loope
lret
les
shrb
aas
loopne
push
dec
inc
mov
inc
scas
mov
cld
je
enter
lds
sbb
mov
bound
psrlq
shrl
aam
jns
pop
jns
and
or
sti
aaa
jg,pn
cmc
or
and
enter
mov
add
and
pusha
or
or
push
and
divb
outsb
jno
pusha
mov
push
pusha
or
or
and
fcoms
xor
pop
inc
cmp
cwtl
push
bts
inc
add
popf
testl
sub
mov
add
mov
dec
inc
cmp
sbb
imul
cmpsl
jge
cwtl
int
lret
je
loopne
jbe
rcrl
ret
outsl
xor
inc
mov
rclb
stos
fs
lds
mov
push
inc
push
xchg
je
jne
sbb
test
decl
push
insl
shr
jle
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
adc
xchg
inc
mov
pushf
jl
add
hlt
jle
sub
jecxz
add
push
pshufw
dec
dec
call
mov
jno
fwait
scas
mov
je
xchg
xor
scas
mov
sahf
push
xchg
push
add
movsl
ja
adc
pop
mov
adc
push
adc
or
insb
or
sbb
les
in
imul
imul
sub
lret
dec
xchg
in
addb
push
xor
adc
popa
jnp
xchg
pushf
cmc
pop
pusha
sbb
pop
loopne
pop
scas
mov
loop
inc
out
int
cmp
stos
and
cmp
imul
das
imul
lds
push
jle
mov
cmp
cmp
hlt
sub
jbe
xor
xchg
cmpsb
push
outsb
sarb
icebp
js
mov
xchg
inc
mov
lcall
cmp
jmp
sub
or
lret
xlat
push
jo
stc
lahf
cmc
iret
push
sbb
js
push
sbb
push
imul
cmp
sbb
lret
inc
das
lcall
inc
js
xlat
adc
xor
push
daa
push
xor
sarl
pop
pop
push
adc
xor
es
pop
mov
out
xchg
repz
dec
sub
xor
test
stos
aad
mov
jns
push
inc
insl
daa
sbb
les
ss
and
rol
cs
jp
xchg
and
adc
repz
cmp
jo
jg
adc
clc
cmpb
adc
and
pop
mov
mov
sarl
jecxz
popf
dec
dec
inc
out
test
fs
cltd
out
pop
icebp
cld
xor
lods
xor
test
std
pop
clc
mov
add
mov
push
add
sbb
pop
outsb
xor
aad
orl
roll
divb
mov
aas
pop
movsl
adc
in
add
fucomi
pop
jno
dec
push
mov
mov
jecxz
int
add
jmp
adc
jmp
mov
cmpsb
pop
gs
adc
shlb
call
mov
ja
insb
loope
inc
inc
jecxz
gs
and
gs
sti
or
xchg
hlt
xor
mov
add
adc
push
out
xor
das
repz
repnz
int3
popa
mov
scas
mov
adc
add
out
jne
add
das
dec
roll
in
test
add
mov
sub
cmp
mov
pushf
mov
jbe
std
adc
mov
xchg
outsb
cs
js
call
sub
xchg
jne
fdivrl
jbe
add
fwait
cmpsl
addr16
xchg
lcall
outsb
cmp
push
pop
movsl
clc
mov
gs
inc
mov
jle
pushf
mov
inc
inc
xor
sbb
adc
repnz
ret
cwtl
pop
pop
mov
pop
lods
xor
adc
xor
dec
test
repnz
and
adc
rcrl
pop
fbstp
shlb
das
lock
sbb
sub
in
outsl
les
adc
aas
cld
inc
in
ffree
jno
xor
sbb
ficoms
in
lcall
mov
adc
ret
jmp
cmp
or
addr16
sbb
sub
dec
repz
insb
sub
or
btl
dec
xor
popf
and
mov
lds
popa
sti
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
add
stc
inc
xor
sbb
jmp
in
sti
push
or
jne
push
xstore-rng
cmpsl
inc
dec
outsb
xor
cmc
sub
mov
mov
rcll
loopne
cmp
add
sbb
dec
inc
pop
lret
pop
es
push
push
cmc
pop
sarb
adc
cmp
adc
push
clc
jmp
cld
dec
and
mov
dec
adc
mov
xor
mov
inc
and
loope
xor
mov
pop
test
cld
inc
xchg
enter
adc
lcall
jmp
shrb
dec
pop
outsb
xchg
insl
icebp
or
clc
fsubrs
in
mov
push
xor
imul
mov
cwtl
push
push
mov
and
bound
cmpsl
sub
cmp
adc
cmpsb
out
push
xor
adc
aas
sub
push
divl
xchg
add
mov
adc
testl
cmp
xlat
in
aaa
add
mov
mov
jecxz
neg
loop
push
or
mov
ja
xchg
sbb
mov
sub
inc
pop
icebp
dec
rolb
fnstsw
push
mov
in
or
sbb
bound
jae
mov
cmp
mov
mov
int3
inc
push
sbb
and
mov
cmpl
jmp
xor
dec
outsb
stos
cs
insb
out
insl
out
adc
mov
push
or
jo
clc
in
mov
sti
lock
xchg
subb
inc
add
enter
pop
or
out
sub
cmc
cmp
addl
xor
and
orl
cmp
pop
push
test
xor
sbb
cmpsb
movsb
adc
adc
xchg
jecxz
imul
jbe
push
push
fnsave
in
push
lahf
cmpsb
mov
pop
push
push
sub
lds
cmp
sti
sahf
xor
scas
pop
lahf
lret
aaa
scas
sbb
dec
popa
jg
shl
xchg
stos
pushf
mov
inc
and
push
loop
lret
xor
and
dec
jb
jae
fcompl
mov
rorl
fcomps
dec
xor
or
cmp
xor
dec
gs
lods
mov
inc
mov
xor
dec
pop
int3
xor
cmp
call
fsubrl
out
xor
xor
js
or
xor
or
cmp
cmp
lds
movsb
or
data16
js
sub
mov
sub
pop
clc
adcl
mov
xor
xor
push
imul
shl
orl
cmp
out
sbb
jno
lcall
int3
int
pop
test
into
fs
lahf
ss
aas
fildll
jns
pop
push
mov
jo
scas
sub
dec
je
or
sbb
jbe
cmp
inc
test
std
out
mov
lcall
ss
push
pop
xor
pop
and
aam
mov
inc
ds
in
mov
adc
sbb
or
sbb
fucomip
imul
pop
sub
xor
popf
test
xchg
push
in
push
push
jl
ljmp
xor
push
sbb
lret
je
adc
movsl
jmp
stos
dec
imul
xchg
test
mov
sub
add
jbe
imul
cmp
pop
inc
shlb
push
dec
sub
inc
push
sbb
inc
lret
bound
or
rol
jae
icebp
sub
cmpsb
add
dec
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
sub
xchg
or
add
cmc
inc
jmp
mov
fcoms
pusha
inc
lahf
sbb
andb
inc
push
dec
cmp
pop
mov
inc
test
sbb
sbb
rolb
or
or
jge
xchg
xchg
mov
dec
mov
aam
mov
dec
xor
or
and
cs
inc
fiadds
jecxz
jbe
mov
int
xor
ds
push
xchg
or
fsts
fsubs
insb
xchg
mov
icebp
jp
adc
lods
and
ficompl
mov
push
out
xlat
fnstenv
mov
pop
clc
mov
filds
lahf
sub
jno
pop
inc
mov
jmp
adc
and
shlb
andl
inc
mov
js
stos
and
pop
imul
and
jmp
ss
sbb
sub
or
sbb
inc
into
lods
push
cmp
jbe
movsb
xor
movsb
pushf
dec
cmp
xorb
jae
push
sbb
in
in
adc
repz
stc
out
push
mov
es
ss
cli
inc
pop
lahf
push
addb
pop
push
mov
ljmp
mov
inc
into
inc
lods
jbe
outsb
lds
lret
pop
sbb
sbb
pop
and
stc
sub
dec
pop
int
roll
imul
xor
inc
sub
jge
outsb
lea
push
mov
icebp
pop
aaa
pop
push
push
ss
loop
pop
fldt
or
jmp
cmpsb
pop
int3
scas
pop
and
push
push
mov
xchg
xchg
xlat
xor
mov
pop
mov
aam
mov
inc
outsb
test
mov
push
sub
jp
jmp
ljmp
mov
stos
mov
aam
mov
inc
mov
in
inc
repz
jb
and
scas
repnz
aam
xor
mov
in
iret
mov
addr16
sbb
sti
in
jecxz
jns
xchg
mov
shrb
and
inc
inc
aad
test
mov
mov
dec
and
sbb
jmp
outsb
sbb
sti
sub
fdivs
push
stos
or
mov
push
call
sub
ret
push
mov
add
or
jbe
or
cld
dec
pushf
mov
in
push
mov
jo
or
jmp
sub
jge
sahf
cld
loope
pop
jne
mov
jge
iret
inc
mov
dec
inc
or
xlat
push
xor
shll
sbb
sysret
sti
shll
pop
mov
and
das
xchg
loopne
xchg
adc
cli
mov
addl
xchg
and
xchg
imul
xor
jb
and
mov
mov
fcomps
in
enter
mov
aam
mov
in
in
iret
ss
imul
cmp
sub
loopne
mov
sbbb
aas
pop
adc
push
dec
mov
js
inc
cs
cli
shl
repz
jb
and
dec
xchg
fsubr
lock
xchg
roll
mov
loope
pop
daa
dec
mov
push
cmp
mov
mov
movsb
stc
xlat
popf
mov
in
mov
jge
mov
dec
pop
mov
inc
int3
test
in
in
pop
test
fwait
jb
and
mov
dec
inc
and
clc
sub
loop
loopne
lahf
or
push
subb
insb
push
bound
and
inc
and
mov
cmp
sub
jge
loopne
mov
adc
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
sub
xchg
mov
data16
in
or
xor
pop
mov
nop
mov
aam
mov
in
in
cmp
add
push
mov
je
push
pop
xchg
sub
loop
loopne
lahf
in
sbb
orb
inc
mov
pop
dec
and
outsb
and
mov
movsl
sub
jge
mov
pop
sub
xchg
sahf
sarl
pop
dec
dec
and
jp
adc
jmp
lock
lcall
jge
and
jecxz
adc
repz
dec
mov
push
mov
pop
dec
rcrb
xlat
xchg
xor
mov
cld
mov
aam
mov
in
in
cltd
push
and
mov
mov
mov
cmp
pop
loop
loopne
lahf
dec
sbb
mov
push
mov
addr16
into
cmc
pop
js
push
cmp
lret
jmp
call
es
fsubrs
mov
in
in
inc
mov
arpl
cmp
mov
mov
pop
hlt
sub
push
sub
sub
test
in
in
test
int
loope
pop
jns
and
cmp
cli
xor
mov
sub
fstps
sbb
jmp
enter
or
das
cmp
or
lret
jmp
call
es
fsubrs
das
loope
pop
sti
inc
mov
int3
test
in
in
pop
test
fwait
jb
and
mov
dec
inc
and
clc
sub
loop
loopne
lahf
or
push
subb
insb
push
bound
xchg
shll
lock
mov
cli
cmp
inc
call
pop
sbb
push
and
sbb
sbb
aaa
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
gs
mov
mov
mov
sbb
jle
fdivl
div
or
outsb
mov
les
inc
inc
aam
lret
in
push
nop
repz
mov
inc
inc
sub
loop
loopne
lahf
adc
push
andb
push
push
out
inc
pop
jg
test
and
sbb
sbb
fldcw
jge
fmuls
sub
enter
or
cmp
clc
push
inc
call
fisubs
and
mov
cmp
jl
push
loope
pop
xchg
sub
shrl
mov
ljmp
inc
jmp
pusha
xor
mov
and
mov
in
in
int
repz
xchg
in
mov
xchg
loop
loopne
lahf
jl
out
stos
mov
mov
sbb
test
in
in
sub
repz
out
stos
out
sub
jne
push
mov
dec
inc
cmp
cmp
inc
divl
mov
dec
xchg
fsubr
daa
push
jne
xlat
xor
icebp
adc
gs
mov
mov
iret
test
in
in
pop
stos
repnz
lds
jl
pop
cli
in
je
or
mov
adc
mov
dec
jns
rcrl
aad
test
pop
imul
repz
sub
movsb
loope
out
cmp
xchg
cmp
pop
add
jge
not
xor
jp
je
mov
cltd
push
lods
ficoml
sti
xor
cmp
adc
jp
cli
cmpsb
dec
mov
jb
add
ficoml
rorb
sub
call
adc
dec
xchg
and
sub
push
arpl
jno
mov
xor
cmc
iret
imul
add
stc
mov
or
or
or
or
or
or
or
or
or
or
or
or
sub
cmc
out
pop
insl
dec
rcll
cwtl
js
xor
aas
pusha
jg
hlt
andl
imul
cli
or
push
inc
xchg
push
push
mov
adc
hlt
cwtl
cli
testl
fs
mov
mov
sbb
inc
mov
in
addr16
in
jae
inc
jnp
jno
and
xor
popa
sub
lahf
adc
test
cmp
jo
lods
lods
jecxz
into
sbb
fwait
jnp
call
shrl
cld
or
loope,pn
cs
js
mov
mov
in
mov
fmul
stos
shrl
mov
rorl
xchg
pop
data16
nop
jecxz
jp
xchg
movsl
inc
jb
and
jbe
inc
shll
add
repz
jmp
ljmp
pop
inc
ret
les
and
in
or
lds
xlat
ss
adc
nop
stos
repz
add
pop
or
mov
jg
arpl
fs
mov
pop
sub
fiaddl
and
lock
mov
out
sbb
or
pop
jns
out
push
pop
sub
pop
enter
lods
push
rcrl
cs
inc
movl
xor
and
lahf
lods
jp
jbe
mov
shlb
cmp
leave
xor
dec
and
bound
fisubrl
inc
push
xchg
jge
jle
and
xorb
aas
sub
addb
dec
ret
lcall
lds
adc
subb
bound
pop
or
cltd
test
dec
cmp
or
call
sbb
or
add
sub
sbb
imul
sbb
inc
aad
add
jp
pusha
out
hlt
daa
cmp
std
xchg
pop
dec
or
movq
push
xchg
mov
and
insb
mull
mov
ror
push
shlb
push
jecxz
rcrb
mov
jne
xor
mov
icebp
pop
jmp
dec
mov
xor
xchg
lods
scas
push
loope
and
push
loopne
cmp
sub
ds
adc
into
andl
xor
cltd
idivl
sub
lds
ss
sbb
stos
xchg
mov
push
call
dec
cmp
sbb
mov
out
rorb
mov
shll
inc
sbb
dec
and
push
pushf
popf
repnz
cwtl
sub
mov
inc
push
push
and
sub
insb
pop
pop
or
popf
xor
fs
test
nop
lahf
jecxz
andb
push
sub
jo
and
lods
xchg
sbb
cs
movb
lret
mov
in
and
loopne
jns
xchg
push
xchg
push
cmc
addl
popf
adc
mov
jl
jne
outsl
int3
mov
jl
cmc
ss
add
jb
subl
daa
push
aaa
fmul
cltd
inc
cli
lds
dec
pop
call
inc
xchg
pop
loopne
add
sub
xchg
push
fadd
mov
sbb
jp
je
popa
mov
pop
ja
inc
or
aaa
inc
jmp
sbb
mov
das
fidivrs
pop
sbb
dec
xlat
mov
mov
or
clc
and
sbb
addr16
add
movsb
into
into
inc
inc
arpl
jle
and
cmpsl
ret
sbb
cwtl
add
jp
roll
out
mov
jnp
mov
jecxz
jmp
daa
cmovle
xor
ds
mull
xlat
sub
jns
popf
cmp
cmp
or
or
or
or
or
or
or
or
or
or
int3
pop
hlt
nop
pop
add
enter
or
xchg
pusha
xchg
sub
xor
loop
push
add
push
dec
push
shl
mov
pushf
mov
cli
xor
pop
popa
les
in
cmpsb
je
mov
mov
inc
sub
jae
hlt
pop
out
popf
sbb
leave
cmp
pusha
jp
popf
xchg
test
xchg
adc
int3
mov
in
pop
mov
or
mov
inc
nop
pop
bound
js
ret
lret
and
stos
sbb
jp
xor
outsb
sahf
aam
test
pop
mov
pushf
xor
xorl
sbb
in
fistl
jp
push
pop
iret
das
lret
divb
cmpb
cmp
xchg
inc
mov
mov
jnp
pop
mov
fdivs
roll
mov
push
dec
loopne
jg
lods
xor
movsl
dec
pushl
xchg
dec
outsb
adc
inc
inc
mov
sbb
in
dec
mov
and
test
bound
adc
stos
out
aam
jnp
jae
push
jecxz
push
mov
jb
inc
incb
xchg
xchg
sub
loop
loopne
lahf
mov
xchg
add
xor
mov
test
loopne
or
push
xchg
xor
mov
sub
popa
hlt
sub
shr
inc
xchg
into
jae
sub
push
aas
jno
in
mov
iret
cmp
fdivrl
mov
pop
pop
sub
xchg
scas
rcrl
cmp
pop
jb
js
lea
test
and
xchg
ds
fmuls
mov
fs
xchg
pop
insl
and
jle
gs
sbb
add
je
inc
loopne
nop
sbb
xchg
gs
int3
mov
rolb
cmp
shrl
or
or
or
or
or
or
or
or
jge
mov
mov
shll
call
sub
dec
and
stos
pop
es
push
inc
fwait
sub
mov
or
push
sub
push
loopne
lahf
inc
sbb
sbb
mov
fmuls
in
in
jg
repz
jb
and
mov
enter
loop
in
or
lods
pop
mov
mov
ss
in
jl
cwtl
lret
inc
dec
and
cmpsb
loopne
lahf
cld
sbb
sbbb
push
mov
push
xchg
pop
pop
pop
sub
or
aas
sub
adc
enter
add
in
cmp
aaa
mov
imul
ret
loop
loopne
lahf
push
sbb
inc
pushf
jnp
fs
shr
jmp
fimull
xor
xchg
inc
mov
pop
or
or
push
mov
adc
mov
mov
sbb
sbb
mov
inc
and
jge
jecxz
jle
inc
rolb
cmp
or
lea
mov
sub
ds
jbe
add
imul
jmp
inc
push
inc
rclb
adc
mov
pop
je
xor
push
cli
outsl
mov
stos
inc
sbb
adc
xor
xchg
sub
sub
lcall
add
push
xlat
scas
xor
mov
ds
aam
mov
inc
repnz
sub
mov
fcoms
mov
decb
movsb
push
clc
push
lcall
mov
es
pop
xor
jecxz
imul
mov
push
push
cmp
mov
push
icebp
mov
sahf
mov
jl
mov
test
pop
lea
xchg
mov
cmp
jae
dec
jb
jns
fiaddl
cli
or
sub
xchg
pop
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
sub
sub
cmp
xlat
or
sbb
mov
push
cli
sbb
add
pop
mov
mov
fadd
or
jle
add
or
popa
test
les
movsl
cli
pop
add
dec
out
cmpsl
sbb
inc
pop
push
insb
xchg
popa
shr
jge
das
mov
mov
mov
xor
or
or
jo
xchg
bound
test
cmc
ss
shl
dec
aaa
xchg
pushf
mov
inc
out
movsb
stos
pop
or
stos
insb
pop
nop
jle
push
cmp
dec
ljmp
imul
push
mov
jle
xchg
pop
adc
sbb
cmp
cwtl
aaa
andnps
mov
or
xchg
aas
icebp
push
mov
lods
adc
sub
xchg
adc
xor
out
jle
dec
mov
and
cli
insl
or
movaps
data16
scas
mov
adc
lret
add
sub
inc
lock
push
sub
dec
ffree
rolb
sbb
cmpsl
in
inc
adc
pop
cmpsl
popa
insb
mov
cs
pop
xchg
ret
and
negb
sub
rcrb
ds
fistl
cltd
lods
or
test
pop
push
push
out
dec
cld
and
aaa
stos
jecxz
lret
add
les
dec
leave
testb
mov
js
fcomi
mov
push
or
pop
cmp
or
lea
mov
loop
shlb
aas
cmp
xor
mov
fucomp
push
xchg
sti
movl
xor
cmp
xlat
push
addr16
cmpsl
push
js
popf
mov
mov
xchg
popa
roll
pop
xchg
popf
mov
aad
push
jns
dec
movsb
in
dec
lea
sub
jmp
xor
push
cltd
jbe
mov
mov
inc
and
sbb
mov
roll
lret
hlt
pop
sbb
cmp
inc
mov
push
push
lea
inc
mov
std
lock
mov
je
add
shlb
and
and
enter
mov
cli
mov
fidivrs
test
push
push
add
iret
int3
bnd
xchg
jo
mov
mov
xchg
movsl
mov
mov
dec
int
ss
aam
mov
pop
test
cmp
xor
inc
and
mov
aaa
dec
cmp
loopne
inc
aam
jns
and
mov
lcall
int3
cmp
sarl
call
pop
xchg
insb
mov
sbb
loopne
mov
aaa
iret
divl
sub
adcb
cmp
inc
pop
das
inc
andl
ret
inc
stos
sub
scas
clc
jmp
nop
in
xchg
mov
and
or
xorl
icebp
test
mov
outsb
pop
sti
push
xchg
fbld
jg
nop
pop
data16
pop
je
cli
adc
lcall
arpl
dec
test
push
mov
cmp
inc
push
mov
push
mov
jmp
jmp
mov
lret
adc
mov
inc
std
loopne
jl
mov
mov
push
mov
and
push
jne
mov
and
cmp
push
clc
mov
mov
mov
xchg
fcmovbe
push
ds
in
inc
xor
xchg
clc
in
loope
dec
in
push
inc
dec
mov
test
add
loopne
jle
ja
xor
test
jecxz
inc
push
mov
out
arpl
lret
sub
repz
xor
xchg
adc
movsb
rcrb
mov
lods
popa
fbld
mov
and
sbb
mov
mov
push
mov
lods
jbe
inc
in
test
push
push
sub
movsl
and
stos
push
and
sub
mov
in
loope
jl
testl
mov
mov
mov
dec
jo
out
add
and
mov
xor
out
out
out
test
jns
sbb
push
mov
pop
mov
xlat
adc
xchg
mov
or
repz
push
sub
mov
nop
out
fidivrl
sub
sar
pop
int
xchg
pop
out
pop
cmpxchg
cmp
es
inc
lods
ljmp
mov
push
xor
mull
and
les
sti
out
xor
icebp
aaa
ss
aad
push
xor
or
jmp
mov
adc
jmp
iret
and
pop
mov
and
lcall
lds
inc
jl
and
xchg
inc
adc
ljmp
xor
arpl
xchg
stos
push
add
dec
int3
ficoml
push
xchg
push
or
add
dec
xor
hlt
cmc
mov
or
cmp
jmp
pop
mov
popa
sub
sbb
sbb
pop
ljmp
das
dec
fwait
xchg
inc
push
dec
cmc
adc
add
xchg
scas
xchg
or
push
xchg
mov
and
sti
jle
cltd
and
mov
pusha
mov
aam
adc
fnstcw
loopne
add
movsl
mov
add
dec
iret
fisubrs
cmpb
leave
scas
mov
jge
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
clc
movsb
gs
jae
imul
adc
xor
out
das
test
bound
lret
inc
adc
dec
pop
mov
outsl
push
adc
leave
jno
scas
fsub
sbb
cli
jge
pop
int
jmp
mov
pop
adc
push
or
rolb
test
sbb
call
pop
cmp
lods
notb
ljmp
sbb
mov
sbbl
loope
adc
pusha
std
clc
imul
sub
ss
sbb
xor
mov
and
test
and
outsl
mov
jle
mov
push
rorb
jb
sbb
mov
les
mov
push
cmp
mov
sbb
imul
cmpsl
adc
inc
sub
inc
pop
add
add
xor
or
push
imul
test
js
scas
and
add
les
jae
mov
sub
outsl
push
movsl
shlb
aaa
or
dec
fcoms
mov
fiadds
mov
pop
sahf
std
gs
jo
jnp
jmp
lods
fstpt
xchg
xchg
adc
jle
into
lcall
rolb
loopne
push
push
movsl
mov
xchg
jo
cld
inc
mov
ss
adc
cmpb
sub
adc
out
pusha
sub
inc
loope
nop
mov
add
cmp
add
add
jbe
xor
subl
cmp
arpl
cmp
das
pop
inc
out
loope
pop
cltd
mov
fimull
add
addr16
test
shl
cmp
mov
jae
xchg
or
imul
fcoms
scas
push
xor
outsb
cmpl
or
or
or
or
or
or
or
or
or
or
or
or
or
cmc
lods
fnsave
ret
mov
sbb
or
pop
adc
jmp
dec
cmp
sbb
mov
je
xchg
add
aaa
xchg
sbb
bound
jo
out
and
shll
loope
sbb
sub
shrb
fcomip
mov
jno
ja
and
jo
je
repnz
sbb
or
add
ja
mov
and
sarb
or
in
mov
test
inc
mov
cwtl
pushf
xor
jmp
push
cmp
outsl
cwtl
lods
das
push
or
mov
test
sub
je
push
pop
das
jmp
jmp
push
mov
xor
push
adc
add
outsb
xchg
mov
jns
ss
call
pop
cmp
mov
ficoml
in
aad
xor
adc
bound
push
adcb
push
std
mov
mov
lea
dec
cmp
add
cmp
jo
push
outsb
mov
lds
cmpsb
in
popa
mov
fimuls
loope
ljmp
xchg
mov
xor
out
mov
js
and
sti
and
jo
push
shlb
fisttps
dec
outsl
es
xor
ret
loopne
sti
cwtl
insb
imul
sub
mov
push
jmp
test
push
lcall
scas
mov
xchg
shrb
ja
and
ss
orl
imul
push
cmp
dec
mov
popa
jmp
mov
inc
or
pusha
jge
push
or
sarl
mov
and
insb
xor
pop
push
inc
scas
inc
stc
das
push
aad
outsb
cld
jle
icebp
mov
popa
xchg
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
adc
gs
rorl
push
mov
adc
or
loop
cmp
mov
and
mov
ds
lret
xor
pop
fsubrs
daa
adc
loopne
inc
dec
push
lock
in
fsubrs
iret
dec
adc
mov
or
push
andb
inc
iret
xchg
mov
out
cmp
inc
or
mov
addr16
decl
int
jp
jle
jae
mov
mov
fsubrl
xor
insb
push
das
mulb
ret
push
xor
mov
les
adc
loop
test
jb
int3
lcall
shlb
je
pop
je
sbb
shrl
fadds
dec
cmc
xchg
adc
bound
cmp
jg
mov
movsb
add
lcall
cmp
pop
adc
imul
imul
js
cld
add
leave
dec
mov
push
cmp
lods
loope
xor
cmp
ret
int3
mov
and
pop
sbb
mov
loope
mov
add
jo
in
jmp
push
inc
out
shlb
jns
scas
dec
into
jp
and
aaa
cmc
leave
adc
cmpsb
sbb
pop
incl
sti
jno
pushf
pop
push
ja
sub
mov
dec
rclb
popf
in
cmp
mov
mov
sbb
xchg
or
fwait
adc
cmp
nop
xchg
out
lcall
aam
fcmovnu
stos
lahf
add
insb
sbb
mov
sub
push
add
mov
and
push
xchg
mov
insb
ljmp
cmp
cltd
or
fwait
pop
imul
push
int3
mov
xchg
scas
bound
mov
xor
mov
scas
mov
or
or
or
or
or
or
or
or
or
or
or
or
lea
mov
aam
and
popa
sub
mov
in
call
sbbl
or
insl
inc
or
out
inc
cmp
in
adc
inc
push
and
cmp
and
add
add
imul
dec
inc
mov
cmc
clc
ljmp
mov
data16
fs
xor
outsb
loop
sub
lods
mov
arpl
push
adc
cmp
mov
jnp
dec
jp
shlb
inc
mov
cmp
xchg
pop
inc
testb
std
jo
pop
and
enter
mov
inc
mov
cmpl
out
xlat
xor
sbb
and
aam
dec
fdivrl
int
std
icebp
lods
ds
add
lret
ret
inc
aaa
aas
roll
dec
xchg
push
inc
push
loopne
aas
cmp
call
movsb
inc
js
jl
fs
xchg
fwait
sbb
pop
in
leave
aaa
movsb
push
enter
lret
sbb
dec
in
cmpsl
aas
divb
mov
xor
leave
push
adc
pop
inc
or
push
cmp
inc
or
xor
ret
inc
test
jns
jl
adc
fistpll
sub
cmp
stos
loopne
mov
imul
ljmp
mov
mov
fcomps
std
xchg
lret
clc
pop
idivl
jbe
je
sbb
push
int
cmp
lds
pop
push
xchg
repnz
lds
js
ja
test
cmp
mov
lds
xchg
lds
inc
xor
iret
sub
pop
repnz
xchg
cmp
int3
push
push
pop
mov
aam
mov
pop
push
cmp
stos
inc
xchg
pop
jb
adc
xor
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
pop
adc
je
ljmp
std
or
rorb
adc
cmp
mov
scas
xchg
lret
hlt
cmp
mov
scas
mov
aam
mov
xor
stos
mov
scas
jb
adc
lret
scas
adc
je
ljmp
xor
inc
xor
inc
sub
xchg
add
jne
xchg
div
add
push
xchg
mov
aam
mov
xor
stos
mov
add
mov
xchg
adc
je
ljmp
add
inc
xor
pop
sub
xchg
cmovp
hlt
punpckhdq
aam
mov
xor
stos
xchg
bswap
xchg
pushf
adc
je
ljmp
inc
add
out
xor
dec
clc
xor
icebp
dec
popf
jne
xchg
jecxz
adc
popf
push
xchg
popf
mov
push
jecxz
adc
popf
xchg
xchg
adc
lret
xchg
jecxz
adc
popf
aad
xor
push
adc
inc
xor
sub
fwait
adc
adc
popf
jne
xchg
jecxz
adc
popf
push
xchg
popf
mov
push
jecxz
adc
popf
xchg
xchg
adc
lret
xchg
jecxz
adc
popf
aad
cmp
lods
int
mov
mov
fisttpll
cli
std
in
or
insl
cltd
lcall
cltd
mov
subl
mov
insb
pop
pushf
push
cli
outsl
inc
xor
xchg
mov
push
cmp
xchg
cltd
movsl
xchg
testw
xchg
xchg
ret
mov
js
jl
cltd
fsubrp
pushf
out
mov
xor
call
ja
push
jl
mov
push
lcall
push
gs
pop
mov
addr16
cmc
divb
testb
into
leave
jmp
or
sbb
lret
cli
loop
mov
lret
adc
xor
push
or
or
or
or
or
or
or
or
rcl
ret
push
and
cmp
xchg
rorb
pop
movsl
cmp
into
xchg
pusha
cmp
fildl
pop
cmp
sbb
ljmp
pop
mov
aam
fwait
inc
fwait
pop
jg
pop
int3
loope
outsb
xlat
xor
xor
jbe
jno
call
jbe
ss
jg
jb,pt
mov
dec
pop
int3
aam
rcrl
or
movl
pop
lock
out
icebp
rcr
aaa
loop
sti
aaa
or
mov
jnp
push
jp
mov
std
stos
xchg
xor
imul
push
push
pop
or
xor
fstl
mov
lcall
ds
fdivrl
faddl
lcall
xchg
rolb
lcall
dec
add
scas
pop
lret
or
mov
scas
adc
jb
jecxz
lret
aaa
mov
fnstenv
lahf
iret
and
hlt
mov
mov
pop
enter
push
addr16
push
xor
movsb
sbb
sahf
add
leave
aaa
aas
data16
sbb
push
adc
jb
out
xor
cmp
lret
pop
mov
fstpl
adc
std
pop
or
fiadds
cmp
adc
flds
pop
sub
pop
std
pop
inc
ss
cmp
rcr
cmp
dec
xor
les
dec
and
xchg
xor
int
and
mov
inc
add
in
lahf
mov
clc
pop
xchg
xchg
sub
jl
jp
loopne
aas
pop
mov
push
add
std
pop
lret
scas
pop
cmp
andb
sub
out
xor
mov
push
int
xor
in
cmp
fstpl
dec
inc
lcall
push
es
inc
shl
push
or
or
or
or
or
or
or
or
leave
icebp
xor
lds
pop
dec
mov
mov
jns
js
dec
mov
popf
add
pop
xor
dec
jae
mov
roll
mov
popa
cld
jp
add
push
js
lea
mov
sub
add
insb
je
mov
outsl
fwait
imul
push
mov
sbb
cmpb
stos
xchg
mov
jp
dec
repz
sahf
jb
lock
sub
pop
insb
mov
pushf
shll
movsl
xchg
cmpl
jnp
unpckhps
fcmovnu
or
insl
imul
xchg
mov
loop
mov
or
js
pop
enter
sbb
mov
xor
sub
mov
test
loope
out
imul
push
dec
leave
je
scas
xlat
aad
test
gs
mov
je
sbb
or
mov
sbb
xchg
push
dec
inc
mov
scas
mov
ficomps
dec
or
cld
das
int3
cmp
sbb
daa
popa
mov
mov
movaps
pusha
add
das
out
adc
fwait
out
stc
push
xchg
movsb
and
lds
scas
jp
lea
inc
push
inc
jp
lea
mov
dec
sub
xchg
jecxz
adc
popf
rolb
gs
mov
fnstsw
adc
std
add
mov
sub
mov
add
loope
out
jbe
idivl
xchg
fists
loopne
daa
mov
sarb
ret
xchg
sbb
xchg
xchg
push
xor
repz
sbb
mov
inc
stc
sub
mov
std
dec
push
cs
mov
cmp
jne
das
cmp
adc
movsb
mov
push
notb
pop
adc
cwtl
loopne
mov
xor
iret
xchg
in
push
mov
xchg
outsl
sbb
loopne
sbb
je
dec
icebp
into
out
xchg
adc
out
pop
push
ds
push
inc
ret
jbe
xchg
inc
sbb
push
mov
loopne
xor
addr16
push
sbb
insb
lret
jmp
and
insb
pop
pop
das
push
adc
inc
xlat
cmpsl
fldcw
jbe
xchg
jge
imul
or
inc
inc
mov
xor
mov
addr16
add
mov
mov
jl
int
push
leave
loope
cli
dec
mov
notb
or
mov
imul
pop
movsl
jno
out
jg
adc
fadds
mov
mov
fwait
sub
and
icebp
mov
jae
sbb
sbb
and
loopne
es
repnz
cmp
ja
lahf
in
sbb
mov
cmp
in
xchg
sbb
adcl
or
push
daa
and
inc
xchg
jle
mov
pop
nop
fidivl
jle
loope
clc
xor
out
in
shll
aas
loope
mov
repnz
add
sbb
jae
xor
stos
mov
dec
movsb
or
dec
aad
scas
xor
js
scas
or
inc
xor
push
cltd
lret
and
and
pop
push
lahf
gs
call
jle
pop
rcpps
int
jp
testb
stc
je
lods
lahf
cmp
or
mov
stos
cmp
leave
negb
mov
sarl
or
je
sub
or
out
cs
jb
mov
inc
mov
pop
xchg
xchg
xchg
sbb
adc
mov
xchg
out
mov
stos
in
lret
xchg
test
xchg
xlat
push
mov
call
mov
sbb
inc
push
popa
std
pushl
adc
ss
lret
cmp
jp
mov
jae
xchg
fnstsw
or
or
or
or
or
or
fisubrl
std
mov
popa
sbb
int
aas
std
push
or
or
loope
insl
ss
mov
cmp
sub
dec
dec
mov
mov
in
mov
in
repz
mov
out
lcall
orl
xchg
mov
mov
sbb
cmp
fwait
sbb
add
add
loop
scas
insl
and
sub
mov
daa
sub
sub
aaa
addl
test
loopne
inc
subl
cmp
in
jne
mov
mov
jno
fwait
ss
lods
in
imull
into
inc
out
ds
cltd
add
fs
scas
lds
xchg
andl
sbb
xor
scas
or
mov
mov
pop
repnz
mov
dec
mov
jno
out
mov
or
xchg
sub
pusha
data16
add
daa
or
xchg
shll
jle
push
inc
adc
and
subl
aam
ret
mov
push
mov
sub
clc
jmp
lcall
pop
and
dec
mov
shrb
loope
popf
xchg
or
test
xchg
dec
nop
add
dec
xchg
pop
fwait
inc
sub
sub
movsb
lret
adc
shrl
fiaddl
pop
and
adc
lcall
sub
popa
xchg
lahf
mov
ljmp
lock
push
push
xchg
pop
push
orl
lock
pop
dec
dec
addr16
add
out
mov
test
sbb
pop
mov
mov
loopne
scas
in
add
and
sub
bound
or
jbe
jo
nop
add
cld
mov
and
mov
call
or
or
or
or
or
or
or
or
or
or
or
sbb
or
movsb
mov
popf
pushf
jbe
mov
jle
add
pop
popf
sbbb
into
xchg
pushf
sub
push
push
nop
or
cld
std
mov
ja
inc
negb
test
sahf
je
push
insl
ret
mov
or
les
jle
call
std
test
xor
sar
jae
inc
call
and
xor
cmp
adc
lcall
stc
in
fmul
xor
outsb
ret
push
inc
inc
ljmp
push
or
push
das
or
fs
pop
mov
fistpll
mov
xchg
scas
jae
push
int3
lds
push
outsl
stc
add
adc
jmp
sti
stc
dec
xor
test
jle
jp
int3
cmp
int
sbb
push
std
pop
inc
stos
sub
test
mov
dec
paddd
adc
jae
loope
xchg
mov
sbb
int3
hlt
leave
mov
sbb
dec
and
imul
adc
rclb
stc
js
fs
inc
xchg
ret
inc
xor
cld
pop
mov
sub
cmp
imul
xchg
int
and
sub
inc
fnstsw
push
test
pop
ds
pop
jmp
pop
add
cmc
movsl
xor
jbe
aaa
jo
adc
jne
jmp
push
pop
mov
lock
sub
into
jl
dec
ss
shrb
mov
or
leave
adc
pop
lahf
cmp
sub
test
sub
cli
ds
lock
pop
jno
jp
xchg
add
xor
xor
imul
and
negl
in
mov
outsl
repnz
out
orb
fcmove
ljmp
or
or
or
or
or
or
or
or
or
or
or
mov
shrb
inc
test
inc
ja
pop
mov
enter
cmpsb
rcr
mov
loop
inc
cmpsl
aam
sub
pusha
rolb
fisubrl
jo
mov
xchg
xchg
lods
push
jbe
fldl
xor
mov
cmp
add
subb
lock
in
or
inc
repnz
mov
fsub
js
test
fnsave
cmp
fstl
xchg
lret
stos
jo
out
cmp
xor
pop
aam
orl
or
inc
je
es
add
and
and
jno
mov
fs
sbb
jl
cmp
repnz
dec
sbb
or
test
xchg
lcall
cmp
inc
pop
icebp
mov
and
clc
nop
fwait
in
movb
pop
pop
iret
cmp
and
pop
inc
dec
ss
dec
lret
xor
jno
jns
sbb
out
push
rcrb
xchg
cmp
std
mov
pop
adc
or
mov
int3
cwtl
push
cmpsl
fdivrl
jmp
sbb
sbb
int3
push
xchg
lcall
jo
inc
add
add
mov
stos
ss
mov
rcr
mov
sub
int
mov
jle
inc
mov
adc
out
adc
mov
dec
repnz
push
push
bnd
push
fidivrs
mov
dec
inc
outsb
pop
fwait
cmp
mov
or
push
in
push
and
adcl
sbb
xchg
mov
and
stos
mov
adc
data16
pop
fcompl
je
test
in
in
cmp
dec
inc
mov
shll
rcr
jge
xchg
and
dec
shlb
push
lock
pop
jbe
ja
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
stc
int3
es
cmp
leave
out
xor
pop
xchg
fldpi
into
mov
out
or
xlat
loopne
lret
das
fcompl
cmp
and
in
xchg
mov
mov
in
push
int3
sbb
mov
fstpt
and
cmp
inc
subl
mov
bswap
call
jbe
out
jge
pop
js
ds
pop
mov
xchg
cmp
stos
mov
aam
lahf
aam
xchg
adc
lds
dec
inc
mov
in
test
fimull
cmp
js
push
jno
out
cmc
rol
stos
pusha
out
cs
adc
jge
sbb
mov
dec
icebp
xchg
adc
daa
pusha
sub
mov
pop
mov
inc
scas
mov
sub
push
arpl
fcomp
out
pushf
hlt
ds
sbb
test
js
lea
js
and
scas
mov
jp
adc
outsb
push
pop
push
xor
cmp
push
jge
sbb
imull
or
xor
mov
inc
cmc
mov
xchg
and
cmp
scas
push
mov
lahf
xor
add
into
out
incb
sbb
idivb
mov
or
cmpsb
aas
ljmp
mov
ret
aas
adc
sub
lock
sbb
adc
fsubrs
aas
cs
push
call
mov
loop
jl
xchg
in
out
xor
add
add
lea
dec
lret
or
cmovns
test
cmpsl
ret
test
push
fsts
sub
shlb
cltd
inc
cmpsl
pop
pop
mov
scas
movsl
int
stos
in
xor
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
stc
mov
int3
inc
jbe
add
xor
pop
testl
lock
mov
aad
jle
xchg
sub
scas
fdivrl
fadds
lahf
out
enter
lea
ljmp
xchg
mov
fmulp
jbe
inc
cmp
push
movsl
addr16
mov
fisttpll
jmpw
mov
jbe
add
cmpsb
pop
cmpl
jbe
push
fidivrl
test
xor
dec
lcall
je
jmp
sub
jp
pusha
movb
push
jp
mov
add
sbb
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
js
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
xor
cmp
xor
xor
inc
add
add
pop
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
nop
nop
dec
add
outsb
add
push
add
add
add
add
popa
add
jo
insb
add
and
jo
jb
outsl
add
jb
popa
add
add
dec
add
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
dec
add
and
jb
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
nop
nop
xor
add
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
dec
add
push
add
inc
add
add
pop
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
