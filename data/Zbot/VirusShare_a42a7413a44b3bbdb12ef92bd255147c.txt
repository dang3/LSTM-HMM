sbb
add
mov
aaa
mov
or
inc
cs
popa
daa
inc
iret
dec
enter
dec
lods
stos
jl
push
add
shr
push
sbb
push
outsl
sub
dec
popf
cmpsb
sub
sbb
imul
add
sbb
hlt
in
cmp
mov
lods
out
das
xorb
loop
jno
mov
xchg
mov
es
or
jmp
mov
hlt
lcall
insl
jns
pop
pop
lret
sbb
inc
stos
jmp
xchg
mov
pushf
and
mov
add
xor
inc
ror
mov
jge
iret
out
pop
movsl
xor
pcmpgtw
jne
jmp
je
dec
clc
add
insb
inc
and
stos
pop
cwtl
jge
fisttpl
sub
mov
and
sub
cmpsb
mov
sti
mov
mov
int
cs
aas
leave
pop
sahf
mov
add
mov
call
push
or
jae
aam
push
mov
divb
mov
lds
in
fimuls
jmp
lock
and
fistpll
dec
adc
fs
sub
xor
or
sub
mov
lods
popa
mov
shr
jmp
mov
and
insb
mov
cmp
out
and
loop
xor
or
iret
popf
jle
cld
mov
sbb
fldcw
mov
mov
mov
jmp
mov
inc
fistpl
xchg
lcall
xchg
repz
jo
dec
bound
push
jae
lahf
scas
addr16
jg
cmp
push
movsl
pop
call
enter
in
lahf
js
dec
daa
xor
push
dec
push
fldcw
es
into
outsl
jbe
jp
mov
std
leave
jb
xchg
lods
inc
mov
gs
popa
inc
loopne
lock
mov
mov
pop
aas
pop
push
in
jge
insl
clc
sarl
movsl
lods
fbld
adc
and
dec
cwtl
lods
xor
add
sbb
call
lock
pop
mov
outsl
pop
stc
stc
clc
ljmp
sbb
cmp
inc
pushf
push
mov
es
cmpsl
popa
leave
adc
mov
lcall
outsb
mov
fdivs
inc
pop
or
xchg
mov
sub
enter
mov
cmp
roll
das
sbb
repnz
sbb
add
lret
hlt
cmp
mov
add
lods
imul
push
jne
ds
jmp
or
xor
les
imul
ljmp
mov
stos
test
fists
stos
aam
jecxz
repz
mov
push
xor
dec
push
shrl
sub
cmp
cmpb
lahf
dec
loope
push
dec
jmp
cltd
ss
sbb
xchg
xor
xchg
movsb
or
dec
hlt
sarb
lahf
fmul
test
cmpsb
andb
pushf
pop
test
add
mov
in
adc
dec
mov
sbb
pop
xlat
adc
cld
sarb
mov
mulb
lods
cmp
and
rorl
dec
xrelease
enter
ret
pop
cltd
int
push
dec
shlb
adc
or
mov
dec
std
jl
inc
or
xor
loop
cli
mov
mov
mov
mov
and
in
subl
sarb
adc
push
stc
push
mov
and
loopne
test
test
lahf
cmp
mov
jmp
mov
add
or
call
and
pop
mov
mov
imul
inc
insb
push
fldcw
rol
fdivs
mov
lahf
cmp
faddp
addr16
les
push
sti
xlat
lock
movsb
inc
popf
sahf
stos
fidivs
cwtl
shlb
inc
cmp
fwait
aaa
test
or
lods
xor
fstps
push
pop
pop
dec
cmp
sub
adc
das
mov
outsl
ljmp
mov
xchg
dec
rol
inc
lods
daa
loop
int3
sbb
hlt
jp
and
add
emms
mov
xchg
aad
push
push
in
mul
add
push
mov
mov
mov
repnz
decb
cmp
inc
insl
test
mov
aaa
inc
testl
daa
sbb
fidivl
lds
mov
jbe
movb
rcrb
jae
test
arpl
push
mov
inc
out
gs
out
hlt
popf
pushw
std
test
cmc
jg
jo
mov
fcom
xor
lret
adc
fwait
push
aam
mov
sbb
mov
xor
stos
adc
imul
arpl
adc
loope
push
cld
dec
inc
jb
arpl
psadbw
loop
out
fwait
mov
xchg
mov
push
andps
and
jo
arpl
cld
dec
out
sbb
testl
out
push
sub
pop
clc
cmc
xchg
ljmp
cld
daa
jmp
mov
mov
jnp
es
inc
mov
stc
push
adc
gs
mov
mov
call
lods
pop
testb
mov
sti
inc
push
lcall
jmp
sub
subb
sub
dec
stc
int3
fcomp
nop
or
imul
int
push
js
out
pusha
pop
cmp
cs
out
lahf
leave
mov
shlb
add
adc
shrl
stos
cmpb
mov
repnz
pop
xchg
in
adc
cwtl
repz
add
lods
mov
dec
xor
lcall
shlb
sub
push
adc
mov
js
mov
inc
stos
pop
fcomi
fs
and
xchg
cmp
ss
fidivl
iret
mov
loope
mov
movsb
jnp
faddl
pop
xchg
or
push
imul
sub
arpl
test
or
pop
roll
addr16
iret
ja
sbb
adc
jbe
push
imul
test
mov
out
icebp
aaa
push
sub
movsb
jecxz
xor
test
icebp
bound
out
lret
repz
and
mov
clc
test
lods
addb
xor
sub
es
lret
mov
dec
inc
xchg
lret
mov
sahf
add
pop
and
xor
les
and
mov
sub
inc
bound
iret
lods
ljmp
imul
and
jmp
mov
add
pop
xorb
xchg
into
or
mov
test
out
inc
jmp
or
ret
mov
adc
lahf
std
mov
inc
cld
bound
xor
pop
cwtl
addr16
fidivl
lret
jae
int3
inc
mov
mov
inc
xor
dec
dec
movsl
cli
mov
jmp
jp
jo
xor
and
insl
xor
adc
inc
fnstcw
roll
inc
adc
lcall
scas
loope
xor
and
jle
shrb
add
mov
ficoml
push
jno
jnp
idivl
mov
imul
and
cmp
and
push
inc
xor
pop
addl
xchg
mov
sub
jne
scas
repz
xchg
mov
insb
xchg
or
and
cli
outsb
and
aad
jl
ficoms
pop
cli
sahf
add
jbe
cmp
cltd
cmp
adc
pop
push
jns
pushl
push
jp
mov
dec
mov
les
test
es
push
or
pop
cld
mov
icebp
lods
inc
adc
fstl
dec
stos
or
jns
dec
jno
xchg
aaa
lods
inc
scas
sub
sbb
std
iret
mov
cmpsl
mov
push
lock
and
gs
sub
stos
data16
cltd
or
sbb
cmp
jbe
test
je
push
mov
idivb
cmp
lahf
sub
cmp
pop
lock
cmp
addb
out
iret
or
lods
dec
sbb
cltd
cmc
lcall
rcrb
out
or
push
cmc
cmp
cmpsb
pop
popa
adc
dec
lret
test
orb
push
push
fwait
mov
stos
mov
jbe
ret
pusha
mov
jno
add
sbb
xchg
mov
sub
sarl
and
or
inc
std
in
push
popa
stc
inc
jne
lret
xchg
push
mov
mov
dec
cmp
and
jns
sarb
xchg
push
stos
scas
std
les
cs
ret
out
dec
push
dec
mov
mov
pop
sahf
mov
int3
xchg
ret
cmp
in
out
rcrl
in
xor
cmp
add
mov
mov
aaa
loope
test
mov
jno
mov
addl
mov
andb
jbe
addr16
incl
or
jb
and
cmp
stos
repz
decl
push
mov
pop
imul
testb
mov
push
dec
dec
add
rolb
jnp
ljmp
imulb
jge
sbb
mov
mov
lods
jnp
adc
jmp
dec
jp
pop
and
cli
les
or
jno
lcall
push
pop
adc
jo
mov
jp
pop
sub
ret
into
cld
pop
roll
jecxz
mov
cmc
pop
rorl
jne
push
inc
sub
lea
jnp
popf
mov
insb
mov
loope
lahf
sub
xchg
adc
jae
mov
fwait
mov
mov
rclb
xor
popf
mov
dec
ja
jge
dec
pusha
mulb
xchg
push
scas
inc
outsl
jb
imul
rclb
jae
dec
sub
add
inc
cmp
adc
mov
aad
mov
push
jb
cmp
cmp
mov
mov
push
xor
lret
pop
insl
shrl
adc
lahf
and
std
xor
pusha
or
les
mov
int
arpl
or
lods
test
add
test
outsl
mov
jb
push
inc
or
cmp
dec
call
ret
jle
and
popa
sub
jo
ret
or
push
xor
xchg
inc
scas
popa
lahf
arpl
out
xchg
mov
lods
loope
jge
adc
push
lods
inc
inc
pop
cmp
aam
mov
lods
jno
mov
enter
sub
push
fstpl
filds
lods
js
lea
in
dec
cld
js
dec
or
mov
mov
and
rclb
ljmp
mov
adc
mov
dec
negl
sbb
sahf
dec
cmp
outsl
call
mov
adc
rclb
test
jl
xchg
cmc
push
out
rolb
fldt
mov
dec
sti
js
inc
int
in
mov
lea
hlt
dec
int
push
in
test
lret
mov
jne
sahf
mov
add
mov
or
dec
xchg
mov
pop
mov
pop
test
bound
mov
dec
sbb
sahf
adc
ljmp
push
fwait
rclb
lcall
lret
pop
repz
fldenv
add
fstpl
jecxz
pushf
mov
mov
pop
xchg
lret
mov
add
inc
fildl
ss
repnz
orl
push
push
sbb
or
movb
mov
and
xchg
jnp
lret
xor
sar
push
xor
sbb
xor
lcall
popa
pushf
push
add
andl
nop
stos
add
lret
sbb
in
loop
push
rcl
adc
mov
mov
adc
dec
out
nop
cltd
add
xor
fsubrs
test
dec
xchg
dec
xchg
ret
inc
stos
popf
jle
adc
sub
pop
jb
mov
xchg
fsubrl
hlt
push
pusha
mov
adc
enter
pop
xor
cmpsb
imul
stos
arpl
andl
xor
sbb
loope
pop
mov
cmp
decl
dec
inc
test
inc
loope
insl
xchg
add
out
data16
daa
mov
or
repz
xor
dec
inc
jne
sub
pop
insb
mov
cmpsb
mov
xchg
push
stos
jno
rcl
rcr
adc
scas
fcmovbe
xor
pop
movsl
shlb
hlt
ds
xchg
scas
lcall
or
dec
repz
rcl
and
int3
scas
into
inc
cmc
or
xchg
cmp
sbb
stos
adc
aaa
inc
mov
and
shll
loop
mov
xchg
outsb
mov
xchg
outsl
rolb
mov
dec
sub
ret
pushf
inc
sub
and
shll
mov
mov
mov
nop
dec
xchg
mov
sbb
push
mov
cltd
add
movsb
mov
fdivl
mov
stos
sti
test
cli
outsl
jmp
cwtl
aad
loop
sti
or
inc
lcall
daa
xchg
clc
and
or
add
sub
enter
jo
xchg
and
push
push
mov
out
mov
test
mov
scas
pop
in
out
mov
or
sbbl
dec
stc
push
mov
inc
inc
insb
jmp
inc
insl
jns
inc
aaa
nop
sub
xor
roll
sbb
jmp
mov
fldl
xor
scas
xor
mov
bnd
test
xchg
or
xor
dec
or
hlt
cltd
cmp
mov
ja
push
insb
sub
sub
add
dec
adc
mov
stos
sahf
xchg
icebp
dec
testl
sbb
fs
jno
push
mov
inc
ds
test
mov
jge
jae
out
inc
adc
mov
aaa
jo
std
jp
inc
jmp
stos
xchg
dec
jmp
inc
pop
in
and
faddp
dec
scas
enter
cmp
enter
bnd
and
outsl
sahf
dec
mov
mov
loope
bts
call
in
movsb
sub
outsb
jle
fdivs
push
outsb
xlat
insl
jecxz
mov
lret
addr16
int
xchg
insb
rol
jnp
jl
rcll
sbb
jp
jno
jge
sbb
xchg
push
add
loope
mov
loope
nop
addl
sbb
fcoms
out
faddl
mov
mov
pushf
clc
mov
inc
leave
sti
add
or
insb
cmpsl
push
out
jbe
xchg
lret
xor
push
shll
cmpsl
aas
push
mov
gs
sbb
pop
in
sbb
cmp
xlat
sub
dec
lods
ret
cli
clc
jl
add
xchg
dec
xchg
xchg
aad
scas
aaa
sti
clc
push
mov
sti
cmp
jge
mov
loopne
negb
gs
stos
sbb
or
out
movsl
sbb
fimull
sub
adc
xor
out
cmp
dec
jbe
pusha
inc
insl
filds
in
cld
cmpsl
sbb
mov
xchg
xchg
call
dec
pop
cmovns
xchg
jns
mov
dec
xchg
pop
gs
shll
adc
data16
repnz
rol
mov
dec
aam
scas
add
add
out
cmp
cmc
in
gs
lock
cld
aas
or
scas
mov
into
mov
pusha
push
shrb
and
cmp
inc
movsb
adc
cmc
mov
xor
cmc
jbe
pop
mov
dec
sub
loopne
add
nop
jp
sbb
jbe
xlat
jg
push
je
and
enter
out
neg
adc
and
rcrb
xorb
sub
sub
sti
cmpsl
xor
cltd
inc
outsl
fs
push
lods
add
inc
fistl
and
sbb
pop
mov
inc
pop
dec
or
sbb
ret
push
push
fwait
push
sbbl
arpl
jl
cmp
xchg
push
clc
or
inc
dec
xchg
nop
xchg
adc
stos
or
movsb
in
test
lret
popa
pusha
push
jge
fiadds
mov
aam
std
and
stc
or
jb
mov
dec
xlat
xor
inc
int3
lods
sbb
xor
jp
outsl
inc
out
or
mov
aad
gs
sub
add
add
ja
std
inc
sbb
stos
aas
or
and
mov
jmp
or
int
dec
dec
loope
dec
je
lret
jmp
xor
test
mov
adc
jmp
push
testl
xchg
addr16
into
sbb
icebp
push
xchg
fimuls
out
das
fcomps
movsb
xchg
add
loopne
adc
stos
mov
or
jnp
dec
xchg
sub
std
lcall
faddl
push
fnstenv
pop
cmpsb
iret
add
add
cmpsb
subl
mov
sbb
mov
fcomps
das
push
bound
out
add
xchg
jbe
xchg
pop
cmpsl
jne
mov
push
mov
cltd
sbb
hlt
movsl
aaa
xor
pop
mov
iret
xor
add
mov
and
lock
insb
addr16
pop
mov
pop
mov
ljmp
mov
xor
ds
jmp
cmp
or
push
rorb
jge
repz
inc
push
jg,pn
mov
ficoml
mov
shlb
movsb
adcb
out
bound
pushf
mov
cli
adc
and
xchg
int
mov
and
rcrb
ror
pop
insb
out
js
test
daa
inc
fiaddl
mov
mov
adc
cld
loop
xchg
adc
and
sub
int
lahf
loopne
add
mov
mov
add
mov
int3
fnstenv
and
xchg
insl
mov
scas
lret
jp
xor
push
clc
cmpsl
inc
in
scas
ret
pop
pop
add
sbb
mov
in
push
xchg
xor
xor
in
pop
pop
xor
xor
cltd
xchg
jp
mov
or
das
pop
mov
mov
jg
pop
and
push
mov
cmp
fists
scas
insb
fnstsw
add
and
cmp
lcall
mov
sbbl
cmp
lahf
sub
and
pop
push
jmp
mov
fdivl
arpl
xchg
std
xchg
or
lcall
dec
ja
jl
and
jle
outsb
outsl
mov
sub
cltd
inc
test
xchg
das
push
inc
adc
arpl
out
daa
mov
sbb
icebp
cmp
stos
lret
push
jns
add
gs
cmp
sbb
pop
cmpsl
test
aas
test
lea
add
jno
repnz
and
mul
mov
setns
mov
enter
lods
ljmp
mov
pop
dec
fstps
aad
sbb
jbe
xlat
jmp
fwait
les
into
cli
push
icebp
clc
dec
daa
or
sub
xlat
cmp
push
out
sarl
sbbb
inc
fisubrl
sub
repnz
adc
repnz
mov
and
cmp
push
test
lret
or
pop
jp
icebp
enter
pop
sbb
mov
arpl
sti
and
and
mov
or
xor
sub
push
loopne
mov
and
subl
scas
rcr
cmpsl
add
sarl
int3
jmp
adc
cwtl
clc
xchg
add
scas
mov
mov
or
es
adc
ss
ret
inc
aad
push
test
dec
xchg
in
imul
aad
mov
scas
lea
out
mov
pop
push
clc
popl
loopne
xchg
xchg
js
cmc
std
in
rcrb
shlb
fcomps
cmp
imul
sub
test
push
inc
cmpsl
push
out
lret
lret
dec
push
push
lahf
cs
pushl
fnstcw
or
fstpt
andb
xlat
pop
adc
xor
cmp
in
data16
xchg
loope
mov
add
sub
incb
fiadds
xchg
lcall
inc
pop
mov
sub
add
movl
dec
xchg
ljmp
ja
push
fmull
lahf
sub
into
inc
in
inc
fimuls
lahf
or
lret
jp
mov
lods
mov
in
icebp
or
adc
mov
inc
pop
fidivrl
aad
shlb
xor
jmp
push
add
fistps
jmp
or
loope
lock
std
hlt
cmc
jmp
jno
dec
int
ja
data16
mov
cs
mov
mov
stos
dec
adc
div
mov
cltd
inc
jle
xchg
push
stos
jns
adc
add
mov
jb
sub
ja
stc
and
out
sub
mov
and
cmp
pop
pop
mov
lods
aas
mov
ret
or
push
je
mov
xchg
or
xchg
mov
push
scas
mov
les
mov
shrl
add
adc
add
cmp
sbb
in
dec
xchg
stc
shl
or
xchg
fcompl
pop
xchg
outsl
cltd
cmp
push
aas
cmpsl
fidivrl
jmp
imul
roll
ds
pushw
cmp
ds
addr16
shr
in
aas
pop
sbb
jle
adc
xchg
pop
clc
inc
stc
xlat
adc
xchg
std
shrl
imulb
int3
in
and
cmp
or
roll
sbb
mov
popf
movb
call
jle
cmpsb
cmpsb
icebp
jg
mov
xor
pushf
insl
out
loope
out
lods
lcall
pop
push
leave
icebp
iret
bound
fbld
sub
pop
stos
push
std
hlt
leave
xor
test
lahf
lock
push
enter
xor
orl
aam
push
dec
pop
sub
mov
addr16
rcrb
outsl
and
lods
lds
loop
or
ret
test
lret
xor
movsb
mov
jp
and
xor
push
xchg
push
mov
test
xor
cmp
mov
decl
jnp
int
into
daa
push
fiadds
mov
fwait
cwtl
nop
mov
dec
push
mov
mov
femms
or
mov
les
rcrb
jns
jecxz
mov
xchg
cmp
enter
cmp
stos
std
lret
fwait
dec
popf
mov
in
push
in
add
or
lcall
inc
or
fsubs
mov
repz
mov
mov
mov
mov
call
jo
push
dec
iret
insb
test
fucomi
pop
xchg
jo
push
outsl
repnz
std
aam
pop
sbb
mov
mov
adc
cwtl
adc
xor
jnp
out
jns
mov
in
push
push
cmp
cmp
stos
outsl
sbb
dec
mov
rcrl
jae
fwait
mov
sub
dec
scas
xchg
mov
out
push
or
fldl
or
sarb
jecxz
push
outsl
int
fldt
fidivrs
lcall
xchg
lret
es
or
repnz
cltd
xor
push
jge
test
dec
fiadds
or
mov
push
cmp
test
test
jecxz
fldl
cmc
addb
jbe
mov
hlt
add
and
mov
in
xchg
adc
aam
xor
inc
data16
inc
test
mov
add
pushf
in
cmpsb
mov
pop
inc
imul
inc
push
xchg
repnz
push
int3
jbe
dec
lods
cmc
or
xchg
push
jmp
pop
insl
pop
aam
test
mov
cmp
or
dec
add
dec
mov
cmp
movsl
push
dec
stc
mov
mov
scas
out
or
xchg
push
stc
fs
xchg
dec
xchg
add
in
xlat
ret
push
stc
fwait
in
lcall
adc
repz
inc
dec
xlat
or
sub
mov
pushf
in
faddl
mov
sbb
push
lret
jne
inc
add
push
sbb
or
xor
add
sub
xor
mov
xchg
leave
cmp
cmp
pop
lods
test
daa
xor
xchg
cli
lret
movsl
xchg
enter
out
mov
or
movsl
pushl
aad
insl
cmc
lcall
mov
xlat
xor
or
fimuls
jle
hlt
jl
in
lcall
inc
pop
and
mov
mov
jg
les
mov
adc
mov
repz
jo
pop
sbb
out
bnd
add
mov
mov
divb
arpl
mov
lea
sbb
xchg
mov
ret
and
add
je
adc
mov
enter
jmp
pop
push
loopne
cmpl
jno
sbb
repnz
fbstp
xorl
fld
icebp
leave
xchg
sub
pop
scas
dec
and
je
push
or
add
xlat
mov
stos
mov
cmpsb
push
jmp
cmp
cli
and
dec
xor
push
mov
insl
repz
inc
cwtl
repnz
scas
data16
mov
lret
cmp
cltd
push
inc
push
arpl
and
sbb
rcl
ret
mov
mov
mov
xchg
push
call
add
cmp
lds
sbb
xchg
mov
add
mov
jmp
sbb
sub
pushf
jnp
inc
mull
sub
sbbl
sub
xchg
sbb
mov
fiadds
out
sub
xchg
pop
sbb
push
sub
xor
call
xchg
int3
arpl
inc
xor
xchg
lock
mov
jbe
dec
adc
xchg
not
lods
cmp
ret
sbb
test
push
mov
pusha
inc
mov
cmpsb
repz
jae
cmpsb
test
sub
cmp
ss
out
mov
sub
sub
jge
sahf
xor
xchg
ss
andb
lods
addr16
jmp
jp
mov
shlb
insl
movsl
in
xchg
mov
sbb
ja
mov
fiaddl
sti
loop
mov
adc
roll
inc
dec
xchg
rcl
cltd
lret
push
xlat
push
or
fiadds
das
and
movsb
adc
mov
and
or
xor
xor
adc
inc
in
in
fs
mov
mov
jle
ss
xor
jl
insb
fidivrl
pop
hlt
inc
jbe
sub
ja
inc
push
cmp
push
pop
cmp
shll
cmp
push
xchg
mov
inc
sbb
push
and
je
sub
mov
les
shll
inc
stc
outsb
lods
scas
add
jbe
outsl
jae
mov
adc
cld
fmuls
loop
mov
rolb
lret
lock
dec
mov
adc
jmp
test
bound
ljmp
repz
mov
lock
rorl
jo
jmp
sysret
and
dec
ds
movsb
sarl
xchg
inc
sub
in
out
sahf
int
es
mov
lret
pop
sbb
sbb
stos
push
or
mov
movsl
cmpsb
dec
test
insb
enter
arpl
ds
sub
mov
xchg
mov
scas
clc
repnz
and
sahf
aam
lret
xchg
test
push
mov
dec
in
test
mov
call
lcall
xchg
data16
cmp
jge
sti
mov
test
push
push
aas
fmul
int
jge
or
testl
push
mov
repz
and
dec
rcrb
and
incb
pop
push
lea
pop
hlt
mov
outsl
insl
std
ficompl
sub
inc
jae
aad
js
xlat
jne,pt
fstps
mov
and
cmp
xchg
fstp
or
push
cmc
cli
dec
loope
xor
bts
mov
mov
inc
std
add
inc
pop
mov
xorl
les
push
fsubrs
out
mov
jnp
xor
jle
dec
push
sahf
xchg
sbb
je
mov
cmp
scas
rcl
mov
psubq
xor
mov
inc
andl
xchg
pop
add
aad
aad
int3
aam
xlat
add
test
pop
xor
je
dec
shrb
sub
mov
fsubl
int
fistps
and
test
jl
decb
insl
push
push
xor
mov
ds
mov
ret
push
add
in
iret
shrl
dec
lea
jg
negl
lret
sbb
lock
orl
add
dec
dec
pushl
stc
js
jmp
sub
pop
inc
inc
mov
pop
test
aas
push
mov
bound
add
mov
xchg
mov
test
int3
ret
out
out
jle
jb
add
mov
enter
xchg
fwait
mov
cmc
cmp
in
stc
cmp
je
fidivrl
rorb
adc
sbb
dec
lods
push
pop
adc
sub
cld
es
pop
sub
mov
insl
icebp
test
leave
cwtl
out
aaa
and
mov
push
inc
out
jo
lahf
jmp
sbb
je
push
pop
sub
clc
dec
cmpsb
push
mov
mov
shll
mov
inc
nop
and
aas
popa
jbe
sbb
push
fisttps
pop
sub
out
incl
jmp
in
push
out
cwtl
pop
pusha
cmp
ds
fs
mov
or
rolb
repnz
mov
pop
pop
sbb
dec
fsubs
stos
sbb
ja
outsb
mov
xchg
pushf
mov
sbb
shrb
outsl
mov
jmp
mov
js
pop
jbe
into
call
sub
sub
fiadds
push
jle
scas
sbb
jne
stos
xchg
in
jo
fcom
scas
insl
bnd
jle
int3
movsl
jnp
mov
sbb
xchg
loop
cmp
js
adc
negb
rol
inc
je
mov
out
shl
loope
mov
loop
xchg
das
mov
pop
enter
ret
cmp
test
ljmp
sub
insb
push
pop
mov
test
dec
sub
or
out
inc
pop
push
out
test
cmp
ss
scas
push
or
jmp
inc
xor
and
push
inc
shr
jle
cmc
imul
dec
jbe
push
incb
mov
push
lods
mov
push
xor
cmpsl
fs
nop
fadd
sbbb
dec
jg
mov
rcrl
pop
adc
sub
or
push
in
sahf
xor
sbbl
push
or
les
sbb
pop
sbb
sub
fimuls
pop
pop
pop
jnp
sti
or
testb
in
imul
inc
enter
loopne
or
int3
lcall
fistpl
cltd
cmp
sbb
pop
imul
ror
pop
xchg
rclb
cmp
sub
cmp
add
xchg
ret
jns
jle
jmp
rcl
ljmp
movsb
dec
mov
jmp
fwait
pop
pop
in
jl
mov
gs
lret
sub
inc
add
outsl
mov
std
or
leave
sbb
xchg
nop
fs
icebp
cmpsb
jb
ja
sbb
sar
cmp
inc
outsl
in
pop
jne
add
mov
add
hlt
hlt
sbb
push
inc
jbe
mov
rolb
leave
mov
call
stc
in
lcall
test
popa
sbb
pop
xchg
aaa
repz
push
stc
test
cmpsb
pushf
sub
test
fsubrs
mov
mov
dec
dec
pop
les
dec
lods
or
or
dec
cmpsl
adc
mov
mov
ret
jne
imull
pop
std
fucomi
repz
sub
ljmp
scas
cmp
fidivrs
std
mov
lods
mov
mov
cwtl
pop
cmp
pmulhw
jmp
pop
std
ss
lea
adc
xchg
or
push
cmc
mov
jecxz
std
test
push
aas
cli
and
mov
push
insl
shrl
xchg
add
xor
push
int3
mov
std
inc
shl
push
test
pop
xchg
mov
gs
sub
arpl
mov
flds
std
xor
loopne
cmc
xor
xchg
sarb
add
sbb
dec
mov
fwait
sub
and
outsb
mov
mov
cmp
pop
push
adc
nop
movsl
repz
mov
mov
pop
adc
lods
sbb
mov
pop
sbb
inc
add
into
jae
cmp
sub
cmp
test
cmp
mov
movsb
mov
sbb
cld
dec
aas
sbb
push
lret
cltd
push
xlat
pop
xor
aaa
mov
test
aaa
cmp
shl
cmp
add
sti
xchg
test
jg
inc
add
mov
add
cld
stc
or
xchg
cld
mov
fisttpll
mov
sub
mov
jbe
leave
jnp
mov
cmc
sub
cmpsl
xchg
mov
out
pusha
cmp
sbb
jnp
je
and
push
rorb
lods
xchg
pushf
hlt
scas
inc
dec
jno
dec
dec
mov
nop
out
call
fimuls
addb
sti
pop
ss
aaa
push
sbb
and
add
outsb
pop
imul
push
int
mov
rcl
jb
call
adc
jg
enter
cmp
dec
stos
cmp
sbb
ffree
imul
loop
fadd
push
push
mov
sti
push
addr16
adc
es
xor
iret
shrl
sub
xchg
sarl
out
jno
xchg
mov
mov
ud1
push
inc
aad
sbb
test
lahf
nop
dec
xor
jae
mov
xor
xor
mov
xor
pop
inc
lods
pop
push
daa
jne
lea
sub
shlb
push
ljmp
mov
sbb
mov
call
loopne
dec
push
pop
into
xchg
fsts
subb
scas
and
and
cmp
sbb
int
and
jle
sti
mov
mov
xchg
inc
into
push
pop
xlat
in
pushf
ret
inc
rorl
push
cmp
cwtl
adcl
shrb
xor
mov
adc
mov
aas
lahf
mov
inc
inc
mov
fnstcw
pop
into
push
mov
les
ljmp
or
aas
sbb
cmp
lcall
inc
pop
andl
mov
xchg
push
ffree
daa
xchg
and
fcoms
aam
sahf
or
mov
lcall
sbb
xor
push
sub
enter
and
dec
inc
imul
cmp
outsb
je
push
mov
pushf
icebp
lret
movsl
mov
test
test
push
push
xchg
fcmovnbe
adcb
cmp
negb
das
jg
subl
data16
inc
pop
fwait
pop
in
lret
jp
xchg
inc
add
div
mov
inc
pusha
mov
aam
inc
cmpsl
xchg
xchg
jae
xchg
push
loopne
lahf
daa
lods
xor
jo
mov
push
rcr
data16
mov
push
pop
mov
in
cltd
fdivs
cmpsb
jno
sbb
fs
and
mov
add
ret
sbb
in
jl
cmc
ret
ret
cs
es
stos
adc
psubq
and
or
cmp
pop
scas
jne
sub
test
lret
mov
mov
and
add
cwtl
je
xchg
cmc
adc
sub
xchg
clc
pop
ret
inc
stos
shl
decl
shll
call
push
jp
ljmp
adc
sub
pusha
sahf
inc
lret
popa
and
jmp
mov
fs
pop
aas
aas
mov
cs
pop
ficomps
dec
xor
sub
lods
mov
pop
add
inc
pop
lock
xchg
dec
aas
push
mov
cmp
clc
push
xor
lock
inc
imul
and
mov
outsb
loope
hlt
in
push
sub
adc
shrl
div
cmp
add
push
ja
fldcw
xor
addr16
cmp
inc
ret
dec
xchg
sbb
xor
into
adc
test
lds
cmp
jne
adc
dec
push
stos
push
in
xchg
out
shlb
aaa
push
inc
mov
add
pop
cli
ficoms
fldenv
test
push
bound
jne
pop
sbb
fwait
jl
mov
ljmp
mov
fnsave
or
pop
pop
sahf
cld
nop
lahf
mov
sbb
in
out
add
and
sub
mov
cmp
push
cmp
outsl
xor
sbb
fstl
and
push
jb
out
cs
cli
cmc
cmp
fidivs
pop
aaa
cmp
ret
outsl
clc
mov
dec
lret
test
jecxz
pop
loopne
cmpsb
jne
sub
rolb
inc
dec
mov
cmp
cmpb
xor
test
mov
aas
test
lock
fcomip
mov
ret
leave
repz
fs
jmp
cmp
sti
jl
jbe
test
cwtl
push
and
cwtl
inc
mov
dec
push
fadds
cld
std
sbb
rol
cmp
aaa
cmp
sbb
cmp
and
inc
jno
andl
sbbb
push
lahf
es
or
rorl
mov
bt
jmp
orl
fdivl
outsl
pop
jbe
cmp
or
mov
stos
icebp
aaa
xchg
inc
es
xchg
jecxz
ret
ja
cmp
add
mov
call
mov
mov
sub
sub
nop
fadds
push
sub
test
push
sbb
stos
add
lods
jae
add
enter
je
or
cs
divb
mov
das
jmp
aaa
pop
movhlps
inc
mov
call
or
jecxz
jae
mov
add
mov
fs
adc
cmp
and
ss
add
sbb
xchg
and
mov
add
mov
pop
sub
lret
cmp
pop
sahf
out
mov
xchg
icebp
cmp
jae
mov
fdivl
fnstsw
xchg
hlt
cmp
stc
ret
jmp
pusha
push
es
sub
jmp
pushl
test
mov
xor
jns
mov
bound
or
mov
cmp
imul
sbb
cmp
cmc
adc
repz
fwait
sbb
sbb
and
add
pusha
mov
cmp
fsubs
pop
push
mov
addb
or
mov
enter
and
stos
mov
scas
fdivs
adc
adc
into
outsl
xchg
xchg
lods
push
lock
jae
inc
rcll
and
push
add
fldt
pop
inc
and
pop
lret
loopne
gs
repz
aam
mov
insb
repz
lock
sub
lods
out
cwtl
mov
out
roll
sub
mov
mov
and
push
mov
add
or
jae
ja
data16
xchg
mov
ljmp
aaa
mov
jle
orb
inc
nop
test
inc
stc
adc
jecxz
shl
xchg
test
pushf
jnp
and
shl
mov
cmpsl
sbbb
pop
xor
inc
mov
ljmp
fidivrs
int
scas
adc
and
mov
lret
add
lods
sub
test
or
sysret
add
adc
jle
sti
sbbl
xor
adc
clc
jne
les
xchg
add
rclb
imul
push
sbbl
dec
pop
daa
adc
xchg
pop
cmp
addr16
dec
xor
enter
pop
or
xchg
pop
aaa
lds
cwtl
fcompl
jne
in
popl
push
fmuls
rcrl
sbb
sub
sub
das
mov
pop
jp
das
add
inc
adc
xchg
fnstsw
xchg
je
neg
enter
ja
and
je
add
jne
dec
scas
xchg
fs
sahf
in
inc
loopne
lds
adc
xor
push
insl
test
xlat
fcompp
movsl
ret
call
mov
cs
cmp
pop
sti
test
ss
not
in
or
dec
mov
pop
fwait
mov
xchg
into
xchg
push
dec
cmpl
mov
addr16
test
fwait
pxor
hlt
sub
xor
popa
sub
xchg
hlt
push
cmp
int3
fwait
and
setge
das
rep
outsl
nop
data16
ret
imul
adc
mov
fisttps
test
xchg
adc
jns
sub
in
cmpsb
enter
jmp
inc
out
adc
out
scas
sub
cmp
sbb
xchg
nop
sbb
jae
xor
jb
or
scas
add
ds
aas
jno
inc
popf
cmpsl
add
and
loope
push
movsl
jle,pt
pop
cmc
fiadds
daa
or
lds
leave
add
pop
adc
pop
scas
or
test
pushf
jo
push
pop
dec
mov
adc
xchg
scas
inc
jp
fs
popf
std
and
call
das
cmp
adc
xchg
mov
fdivrs
mov
in
cmp
repz
out
pushl
aas
les
xchg
mov
pop
jo
in
add
mov
jo
jg
jge
sti
push
jle
xor
dec
ljmp
sbb
push
xchg
jno
cmpsb
mov
fmuls
idivb
sub
cld
jp
mov
rorl
aaa
scas
popa
inc
or
jne
iret
nop
push
and
mov
push
stc
daa
shrb
std
sbb
fstpt
lods
sub
sti
ds
test
push
cmc
cmc
add
sarb
sbb
lret
cmp
cmpsl
pop
adc
arpl
shlb
das
cwtl
cmp
xor
or
in
test
mov
sbb
lock
lods
out
push
cs
jp
jge
int3
call
mov
or
push
dec
lods
sbb
adc
mov
je
adc
sub
push
icebp
testl
sub
pop
cwtl
sbb
adc
enter
ljmp
add
insl
sbb
push
repz
pop
inc
inc
lods
and
pushf
mov
push
jg
cmp
pop
aaa
enter
mov
mov
sahf
jl
sti
sbb
push
inc
clc
fisttps
rcll
shl
test
stc
sub
sbb
leave
xor
les
test
stc
mov
adc
sub
sbb
pop
cld
divl
jl
and
loope
jno
out
jns
sti
xchg
cmp
aad
pop
lock
mov
cmovs
xor
mov
xchg
and
movsb
xchg
cmp
out
or
and
jae
push
mov
jno
movsl
and
aad
psubsw
loopne
int
sub
or
jae
mov
jae
add
inc
mov
pop
fildl
push
push
cwtl
xor
fs
popf
sti
ficoms
mov
stc
adc
lock
or
dec
filds
xlat
into
pop
jb
fstpt
or
dec
aaa
pop
jmp
cltd
mov
arpl
dec
lcall
in
fcmovnu
cli
sub
clc
pop
lods
out
pushf
jge
inc
fs
mov
pop
adc
dec
cwtl
lahf
out
dec
jg
in
cmovae
xchg
cmp
xlat
xor
mov
xchg
rcl
jae
pop
dec
out
testl
in
add
subl
dec
sub
std
cmp
push
mov
mov
out
xor
out
andb
mov
inc
repz
sub
lcall
in
cmp
lods
mov
test
lret
cmpl
mul
mov
stc
inc
test
cmp
dec
pop
xchg
pop
int3
mov
xchg
call
xor
add
cmp
imul
mov
and
stc
mov
sbb
sti
fdivr
pop
lds
pushf
sub
add
or
mov
jmp
sarb
push
imul
leave
pop
ja
cmpsb
cmp
leave
jl
sti
mov
cmp
jnp
or
push
hlt
pop
cmp
xor
aam
out
rorb
adc
jg
insb
into
mov
andl
js
out
test
xchg
test
cmpsl
inc
pop
mov
repz
mov
aaa
sbb
cmp
push
cmp
fists
cmp
mov
xor
movsl
push
je
jne
lahf
add
lods
lods
push
inc
addl
jmpw
or
pop
loopne
xlat
pusha
mov
ret
dec
sbb
cmp
inc
test
sbb
add
jne
aaa
xor
scas
into
stos
out
add
sahf
movsl
push
andb
insb
push
je
dec
jns
xchg
imul
gs
test
fdivl
sbb
sahf
cltd
inc
repnz
pusha
mov
xchg
xor
iret
jno
xor
aas
imul
push
dec
and
add
fidivrs
pop
in
cmpsl
lock
dec
jns
cmc
xor
pop
idivl
lcall
lahf
xlat
mov
push
fxch
sub
xchg
jg
int3
cmpsl
es
je
dec
and
jp
sbb
mov
in
adc
xchg
fcoms
jle
sub
imul
mov
adc
jb
pushf
pop
cmp
sbb
int
mov
test
mov
cmp
jle
data16
repnz
inc
loopne
mov
sub
push
cli
loop
cs
add
jnp
jmp
roll
jnp
mov
scas
and
mov
xor
cmp
sarb
sub
push
mov
mov
repnz
pop
jge
nop
movsb
decb
mov
push
in
icebp
dec
in
std
icebp
dec
sti
mov
ljmp
cwtl
aam
mov
pop
sub
adc
cmc
dec
mov
aad
adc
fwait
and
iret
and
push
add
add
test
mov
jnp
aam
outsl
xchg
pop
jb
jae,pt
cmc
out
push
mov
enter
dec
daa
sahf
sarl
add
inc
hlt
mov
cmp
sub
int3
sbb
mov
jne
fnstcw
mov
rclb
rclb
xor
mov
pushf
push
fucomp
repz
sahf
xchg
loop
rorb
sti
aaa
jmp
mov
pop
stos
mov
aaa
scas
push
jbe
ja
fs
mov
pop
jae
pop
sarl
test
adc
repz
nop
jno
cmpsb
jmp
mov
fwait
inc
shr
ss
std
dec
pop
out
test
stos
std
push
xchg
dec
pop
lahf
ret
jp
add
fwait
add
ljmp
mov
aas
mov
stos
pop
dec
test
add
out
leave
mov
movsb
jmp
jle
test
mov
jg
clc
shrl
mov
stc
lods
fs
pop
filds
mov
out
adc
loope
jp
pop
jl
or
dec
dec
pop
sbb
sarl
mov
call
push
add
fmul
mov
cmpb
push
pop
add
dec
fdivl
cmp
addr16
pusha
sahf
enter
or
add
jno
add
xchg
mov
shll
pop
enter
jg
pop
scas
xchg
jmp
mov
sub
test
adc
sub
int
jge
shl
xchg
cmp
push
push
vpsubusw
push
int
clc
fldt
dec
nop
aad
xor
inc
mov
popa
push
pop
clc
int
call
shll
insb
lret
pop
fs
xlat
out
mov
repz
test
sbb
pop
sbb
xor
xchg
sub
shld
adc
js
xlat
xchg
lock
or
xor
cli
rcll
xchg
mov
in
loope
int3
inc
push
enter
scas
aas
adc
xor
insb
aam
sahf
nop
insl
mov
icebp
scas
fnstcw
pusha
aaa
or
inc
mov
push
cmp
in
jns
lahf
movsb
and
pop
pusha
mov
fs
cmp
lahf
jnp
jnp
out
push
scas
push
fidivrl
adc
xchg
push
push
imul
dec
and
mov
mov
loopne
sub
sub
test
mov
mov
add
mov
add
inc
ffreep
aam
sbb
loopne
mov
pop
int3
mov
cmp
lcall
sbb
iret
dec
cmp
dec
aam
lahf
call
fadd
mov
mov
cwtl
cmp
fisubl
les
mov
xchg
out
out
fiadds
aad
cmp
icebp
inc
mov
mov
add
mov
xchg
out
lock
pop
cmpsl
sbb
mov
ret
add
sbb
test
push
mov
enter
xchg
sub
sbb
mov
pop
mov
jns
mov
in
sbb
aad
lcall
cwtl
rolb
leave
mov
sti
push
ret
add
xchg
pusha
jmpw
imul
dec
and
xor
adc
jbe
mov
xor
in
jne
or
lret
std
pusha
leave
sbb
icebp
stc
adc
mov
inc
scas
mov
ds
mov
sub
imul
or
cld
mov
add
push
pop
mov
adc
pop
shll
and
push
mov
nop
xchg
cmp
mov
inc
adc
aad
xchg
push
xor
push
scas
in
mov
insl
jbe
pop
repnz
popf
into
in
mov
push
popf
dec
adc
cli
add
fistl
sub
xchg
icebp
jns
push
mov
aaa
int3
aas
adc
or
and
pop
add
test
mov
mov
mov
mov
add
mov
push
pop
push
outsb
jle
out
mov
addb
out
mov
mov
jecxz
out
repz
popa
jg
jnp
movsl
dec
lahf
xchg
sarl
pop
iret
out
das
out
or
add
adc
push
sahf
mov
fisubs
or
cltd
mov
stos
lea
stos
les
ja
cltd
xchg
or
xchg
call
int3
and
add
jle
loopne
sub
ljmp
pop
test
lods
js
loope
dec
jmp
nop
wrmsr
out
inc
mov
scas
lcall
xor
inc
mov
add
arpl
repz
int
nop
fistps
and
adc
rorb
clc
and
cmp
mulb
enter
clc
loopne
mov
icebp
cwtl
add
std
negb
and
lock
shr
icebp
jno
sar
sarb
xchg
bound
lret
mov
test
dec
mov
mov
incb
pop
push
pop
sbb
fwait
dec
push
fisubrl
loope
in
jp
ret
sub
xchg
cwtl
fstpl
push
pop
mov
popl
mov
repnz
sbb
call
pop
jge
mov
xor
test
clc
add
rorb
lret
mov
add
mov
lods
out
jo
lea
inc
mov
jle
int
testl
fildl
sbb
mov
jl
imul
add
xchg
adc
pusha
lods
cmc
aam
and
andl
arpl
lret
mov
jmp
pop
jmp
imulb
adc
cltd
and
mov
pop
fs
sbbl
test
dec
out
jb
lahf
add
and
xor
movsb
sub
sub
mov
cmp
xchg
xor
inc
shrl
and
out
mov
push
ds
xor
mov
sbb
repnz
jg
xchg
mov
aas
imul
dec
dec
aas
mov
cbtw
lods
mov
mov
mov
xor
push
js
lds
lret
push
rorb
fs
imul
mov
lods
jnp
cmp
jg
jmp
fcompl
jno
mov
ja
sbb
mov
loop
jp
out
pop
pop
mov
jne
sbb
pop
cmp
cmpsb
dec
fldl
sti
jle
icebp
stc
jns
rcrl
mov
in
push
les
repnz
repnz
push
adc
jge
js
dec
jge
insb
mov
sub
insb
cmpsb
mov
pop
sbb
jae
aad
stc
ds
sahf
xor
mov
movl
adc
xor
pop
inc
scas
inc
push
inc
sets
mov
dec
pop
shlb
lods
movsl
dec
nop
mov
xchg
dec
inc
enter
jne
mov
pop
icebp
lds
push
scas
scas
in
pop
pusha
mov
mov
jle
test
sbb
jp
sub
or
adc
xchg
out
clc
add
fnsave
fs
mov
mov
outsl
cmc
xor
stc
addr16
repz
pop
mov
push
push
xor
and
cmpb
call
pop
jns
mov
imul
sub
push
test
sub
in
rcrl
in
ficompl
sbb
or
leave
lahf
in
iret
add
sbb
das
lods
and
ss
in
shrb
pop
addr16
rol
in
pop
aaa
mov
xor
pop
and
mov
inc
jmp
mov
mov
mov
jecxz
push
stc
lahf
movsl
daa
mov
in
dec
lock
xchg
dec
pop
mov
lcall
jg,pt
inc
cmpsl
push
fnstsw
jne
cltd
xor
daa
popa
pop
inc
loope
pop
sysret
ret
jbe
pop
and
mov
pop
cmp
push
clc
dec
xchg
rcl
cmp
jno
or
rcll
inc
subps
ja
inc
mov
mov
cld
sub
incb
shl
dec
stc
jg
stc
inc
lock
dec
repnz
mov
or
pop
stos
add
sbb
pop
out
pop
mov
aaa
jns
jge
adcl
xchg
outsb
test
into
aad
xorb
sbb
add
in
or
inc
mov
sahf
mov
loope
js
hlt
xchg
mov
jo
xor
pushf
call
lods
call
decb
push
add
gs
mov
stos
jl
lods
xchg
push
add
dec
sarl
fadds
gs
sub
ret
pop
or
int3
cmpsl
pop
fidivrl
pop
lret
or
sarl
test
es
adc
loop
loopne
je
push
xchg
inc
aas
add
cmc
jg
popa
push
andb
pop
out
ret
fs
jb
jmp
xchg
push
and
pushf
ljmp
mov
leave
mov
inc
push
sbb
popf
sbb
push
mov
or
lea
cwtl
dec
mov
push
cmpsb
repnz
sub
fsubp
lods
and
mov
mov
jg
lcall
pop
test
aas
ret
pop
mov
xchg
insb
test
push
or
mov
inc
paddusw
push
int3
enter
jb
push
mov
jl
sti
aaa
xor
xor
push
pop
pop
inc
jge
mov
push
lahf
inc
xor
pop
adc
push
mov
das
sti
adc
mov
call
popa
jb
shl
popa
inc
xchg
cmp
cmp
popf
es
mov
xchg
sahf
lcall
int
sbb
lods
sbb
xchg
js
lret
dec
mov
push
sbb
adc
cmp
pop
cmpsl
sbb
xor
push
aas
aad
xchg
sbbb
jmp
add
fidivrs
cmp
adc
xchg
ret
sbb
sbbb
xchg
mov
or
fucomi
lea
imull
outsb
add
pop
mov
loop,pt
or
jmp
leave
stos
push
inc
outsb
scas
jnp
jno
and
jecxz
push
push
xchg
dec
lods
xchg
cmc
outsb
imul
sti
xor
sub
nop
loope
and
dec
inc
mov
xchg
adc
cmp
xor
mov
push
ret
inc
xchg
and
es
lods
dec
sbb
and
mov
lock
int
pop
rcrb
add
decb
jno
push
and
decl
mov
adc
je
mov
out
addl
cmp
jge
dec
mov
sub
jne
mov
mov
lret
push
xor
in
inc
fsubs
xchg
fidivs
cltd
sbb
loop
dec
add
lret
dec
sub
and
jecxz
jno
popa
or
test
mov
jl
int
jle
inc
call
push
test
and
dec
rcr
pop
inc
test
jl
or
push
negl
or
xchg
decl
mov
scas
push
daa
mov
stos
mov
push
insb
std
stc
or
jo
pop
mov
ljmp
mov
scas
test
jo
out
xchg
inc
or
push
ss
ret
popf
push
add
adc
in
jne
cmpl
arpl
mov
mov
cmpsl
mov
addl
out
jae
fucomp
cmp
sbb
clc
rorb
dec
cmp
push
push
adc
negb
cltd
imul
rcr
xchg
test
sub
xchg
shlb
and
addb
cmpsb
cmp
or
jl
lds
add
or
pop
jbe
adc
test
insl
sub
sub
loop
dec
mov
sti
adc
arpl
or
nop
leave
and
outsb
test
fwait
inc
push
mov
mov
aaa
cmpb
scas
mov
fnstcw
fldt
fisubs
cmp
add
push
jno
and
mov
adc
stc
ficoml
mov
hlt
jl
jmp
jae
test
adc
pop
xchg
pop
inc
cmp
sub
and
scas
adc
xchg
or
dec
repz
ljmp
shrl
fcompl
fnstsw
cs
or
xchg
cmp
mov
add
push
inc
inc
sbb
inc
sub
into
sub
mov
sbb
out
test
mov
cmp
jg
shll
xchg
mov
add
lods
push
insb
arpl
in
cmpb
add
mov
jb
adc
iret
fs
stc
repnz
sbb
mov
lret
mov
in
pop
cs
out
hlt
fcmove
pop
loop
fldlg2
cmp
mov
insl
xor
pop
mov
jnp
popa
add
jmp
mov
lahf
scas
xlat
add
mov
test
imul
inc
addl
shl
add
jmp
sub
in
rolb
lcall
insb
out
and
mov
jbe
sbb
loop
scas
lahf
jg
adc
and
mov
inc
rolb
cli
cwtl
adc
out
leave
pop
cmp
dec
imul
movsb
and
add
add
mov
jp
inc
cltd
mov
mov
or
sub
imul
xchg
sub
xor
mov
xchg
mov
movsl
xor
nop
test
dec
aas
sbb
fs
nop
dec
ss
sub
add
push
and
mov
push
fwait
sarb
add
and
sahf
sub
mov
push
mov
ret
repz
mov
pop
or
inc
imul
adc
sub
insl
jno
jp
xor
xchg
addr16
cmp
ret
xchg
mov
mov
push
dec
mov
out
aad
pushf
in
push
ss
pop
bound
sarb
popa
fistpll
mov
inc
push
or
ljmp
xor
arpl
jl
mov
fs
loopne
jo
std
out
jecxz
sub
jmp
jg
add
loope
shll
mov
mov
pop
adc
pop
xor
outsl
ss
xchg
nop
jle
sar
aaa
xorb
fisubs
push
cs
loop
xor
mov
das
xor
into
cmp
cmp
in
fcmovbe
movsb
pop
aas
lea
cwtl
aaa
cmp
fildll
pushl
pop
daa
sbb
ret
dec
jmp
test
mov
mov
cmpsb
loope
or
setl
dec
addr16
movsb
insl
pusha
jmp
movb
data16
dec
adc
and
out
test
jmp
xlat
or
jmp
jmp
mov
icebp
bound
out
xor
add
adc
mov
out
fsubrl
xchg
xor
mov
popa
pop
loopne
pop
cmp
daa
in
mov
pop
lret
pop
nop
jp
mov
or
sbb
sbb
daa
in
test
cld
repz
push
and
or
mov
sbb
add
movsl
dec
aas
testl
mov
sub
mov
xchg
lods
or
sub
push
xchg
adc
adc
mov
inc
xor
push
mov
dec
push
dec
xor
xor
mov
cmp
xor
je
test
xor
loope
outsb
sub
shll
ja
leave
dec
outsb
out
xlat
test
sbb
jge
fidivrl
scas
loopne
lret
dec
push
fldl
mov
shll
sub
sbb
ljmp
scas
mov
mov
loop
mov
mov
lret
push
movsl
inc
or
xchg
jbe
pop
lds
ja
stos
repz
dec
js
jg
jae
sbb
pushf
sub
and
scas
cmp
pop
into
pusha
inc
loopne
dec
nop
cmpsb
mov
outsb
lds
cmp
inc
les
sbb
xor
arpl
leave
ret
ljmp
pop
sbb
out
push
stc
iret
sub
rclb
addr16
jp
add
outsl
rcrl
jle
dec
cmpsb
dec
push
xchg
add
imul
es
dec
idivl
aam
mov
cmc
pop
sbb
sbb
ljmp
cld
scas
jae
pushf
mov
outsb
or
jmp
fs
arpl
jns
fnsave
int
jl
push
adc
clc
or
add
jmp
inc
cli
shl
imul
imul
or
xor
popf
mov
push
rorl
gs
fnstcw
movsl
mov
test
adc
mov
sti
pusha
clc
sub
sub
in
cmp
ja
sahf
xchg
fidivs
jb
movsb
adc
outsl
push
or
or
jnp
push
add
push
jae
jp
inc
mov
aas
insb
dec
mov
rol
sbb
aas
ljmp
bound
lahf
fwait
mov
xchg
jecxz
aaa
lret
jp
fistpl
pop
pop
mov
test
cmpsl
cld
insb
add
and
or
jns
dec
sub
das
adc
jp
xchg
jl
jl
push
fwait
int
push
xchg
lock
cmp
or
or
ss
jno
ljmp
sub
cwtl
inc
mov
arpl
pushf
popa
aam
outsl
dec
orb
jnp
pop
inc
test
rcl
jmp
and
rol
cmp
inc
xchg
pop
mov
neg
loope
rcll
stc
push
mov
ret
xchg
aam
and
cmp
xor
mov
hlt
jmp
outsb
sub
in
push
test
jmp
data16
testb
xor
loopne
imul
into
cmp
lods
mov
hlt
into
sbb
sti
sub
push
jmp
push
push
idivb
cs
addr16
pop
cmp
lock
cmc
and
jg
gs
and
insb
arpl
outsb
cmp
xchg
int
mov
scas
pop
xchg
dec
xchg
rorb
sbb
and
jne
lods
mov
inc
cmp
mov
xchg
aas
pop
insl
iret
ret
dec
add
adc
dec
push
jmp
roll
inc
sbb
in
jb
rcl
jmp
xchg
gs
in
mov
sub
into
ret
pop
push
mov
out
data16
scas
mov
clc
mov
xchg
or
push
adc
mov
lds
push
mov
sbb
mov
push
inc
xor
leave
fld
xor
lret
push
sti
leave
jb
cli
loope
sub
decl
pop
push
add
xor
loopne
or
mov
arpl
aam
inc
xor
push
push
and
movsl
ret
xor
push
into
nop
mov
ljmp
dec
ficoms
push
addl
out
call
dec
hlt
aas
test
addr16
mov
xor
mov
je
jnp
movsl
aad
xor
and
push
insl
in
aad
push
jne
push
scas
xchg
int
dec
sbb
xchg
fsubrl
mov
pop
ficompl
popf
test
gs
out
xchg
adc
lret
sar
int
sahf
add
out
sub
cs
cmp
sar
and
cli
stc
xchg
push
mov
push
adc
or
out
xchg
or
rep
sbb
loope
fs
sbb
sahf
adc
pop
push
dec
mov
cmc
xlat
xor
cwtl
push
test
lock
and
outsl
dec
xchg
loop
inc
stc
scas
sbb
mov
into
movsb
js
add
icebp
test
jle
mov
cli
mov
mov
arpl
cmp
lock
lret
pop
fs
mov
dec
imul
and
inc
rcrb
fwait
insb
add
adc
xchg
inc
lea
lds
add
call
outsl
cmp
andb
mov
pop
and
inc
adc
or
mov
dec
mov
dec
aad
xor
push
lea
pop
int3
or
int3
lea
shrb
repnz
das
sub
or
cmpsb
pushl
jne
jns
add
add
mov
mov
push
sub
loop
and
pop
sbb
or
pop
jmp
lds
pop
repnz
and
repnz
jne
cmovge
shlb
sub
cmp
iret
mov
rcrb
subl
loop
adc
repz
push
and
or
jl
xor
push
in
decb
cld
ja
lcall
pop
sbb
pop
test
pop
xchg
outsl
mov
push
sbb
insl
pop
imul
adc
and
pop
lds
daa
rcrl
xor
mov
mov
bound
adc
lds
push
or
inc
imul
ret
jl
xor
leave
pop
push
imul
xchg
mov
ret
filds
xorb
aaa
enter
loopne
stos
mov
adc
xor
mov
xor
lret
jecxz
cltd
fsubl
int3
xchg
dec
cmp
jb
pop
or
ljmp
mov
shlb
leave
sarl
aam
imul
cli
cmpb
adc
cltd
dec
lret
inc
movsb
push
cmp
lds
clc
fcomp
mov
or
fsubrl
pop
and
test
dec
fistpl
es
xchg
aaa
add
into
xor
nop
xchg
leave
clc
cmp
pop
in
outsb
jecxz
sbb
inc
jae
movsb
add
add
pop
xor
jno
mov
or
dec
in
scas
and
int3
adc
mov
mov
outsb
pop
out
jmp
hlt
js
xchg
rcll
insl
mov
inc
jge
pop
mov
inc
mov
sbb
xchg
xlat
test
std
push
insb
sub
sub
fbld
cmp
push
jl
lock
mov
xorl
adc
adcb
jmp
mov
ja
jle
xlat
in
xchg
fbstp
jbe
fnstenv
adc
inc
pop
outsl
pop
lods
cli
push
ret
sti
es
orl
lahf
mov
xchg
inc
sbb
pop
repnz
jmp
jge
push
lods
mov
sbb
adc
rcl
mov
mov
sbb
dec
or
fstpt
lods
mov
jge
ljmp
push
test
sub
popf
pop
xchg
lds
sar
mov
in
push
sub
ret
neg
fnstcw
bound
arpl
cmpb
mov
inc
push
xchg
rcrb
dec
jbe
aas
xchg
pop
cs
jbe
push
push
cmp
call
lea
ficompl
xchg
ds
insl
fsubrs
push
sub
fisubl
pop
sbb
loop
xchg
sub
and
inc
adc
add
lock
mov
xchg
pop
pop
incl
mov
sarb
lods
xchg
bnd
mov
cli
and
mull
xlat
or
jns
xchg
mov
mov
xchg
cmp
lods
out
sub
enter
insl
cmp
shl
mov
sbb
into
sbb
or
daa
rorl
jnp
dec
aaa
icebp
dec
add
stc
cmp
pop
js
repz
dec
test
xor
cmpsl
and
lcall
rcrl
push
insl
or
push
sti
scas
push
push
adc
add
hlt
jle,pn
dec
add
test
popa
lock
repz
xor
push
sub
dec
mov
adc
xor
cli
out
sbb
dec
push
mov
jecxz
clc
or
cld
mov
push
daa
sbb
sbb
mov
loop
jge
xchg
jae
hlt
out
xorb
out
dec
mov
imul
xor
fdivs
mov
mov
ret
cmpsl
mov
push
push
adc
mov
pop
mov
scas
adc
lahf
cmp
aaa
push
inc
xchg
ss
and
dec
xor
aas
les
ret
jmp
mov
lret
jle
lods
inc
in
xor
xor
sar
call
mov
repz
int3
call
and
dec
arpl
pop
bound
fiadds
xchg
xor
iret
out
mov
cs
outsl
push
adc
push
movsb
adc
ss
jb
sub
jecxz
mov
cmp
cmpsl
fbstp
jno
repz
push
cmp
in
test
and
je
cld
loop
aas
dec
mov
push
repnz
pop
mov
xlat
test
sbb
xor
stc
mov
out
and
leave
sbb
nop
add
adc
into
jb
stos
movsb
mov
stos
nop
and
loope
cmpsb
mov
jl
ss
icebp
mov
pop
movsl
or
xchg
inc
pop
push
xchg
or
xlat
das
out
add
push
xchg
aad
data16
mov
adc
mov
loop
mov
lcall
adc
sbb
in
jl
repnz
mov
inc
sub
push
popf
inc
xchg
push
dec
or
bound
aad
and
fwait
push
pop
cld
ret
rcr
inc
mov
jl
cmp
and
jg
sbb
ret
xchg
ljmp
pop
add
jno
out
lods
fsts
push
sub
sub
test
outsl
pop
lods
lods
lds
sbbb
inc
in
jecxz
sbb
test
lock
leave
fistpll
int
stc
sbb
adc
clc
sub
aam
dec
or
push
mov
inc
dec
cmp
mov
das
loop
sbb
add
in
mov
pop
fs
cmc
jns
cwtl
mov
or
dec
jle
mov
cmp
inc
out
lds
xchg
fsubr
out
adc
adc
test
add
insl
fndisi(8087
add
mov
pop
jbe
cmc
xor
filds
sub
mov
push
fsubl
ljmp
xchg
or
mov
clc
jmp
imul
fadds
inc
pop
in
cltd
xchg
stc
clc
pop
xchg
int
cmp
test
adc
mov
jbe
push
cmp
mov
imul
cmpsl
xchg
mov
and
dec
fs
or
and
ja
mov
mov
ja
jp
sahf
loopne
daa
pop
mov
mov
sbb
lcall
movsl
popa
aam
jl
outsl
test
and
data16
popf
cld
rcrl
dec
in
int
iret
mov
cmp
lcall
or
fldcw
repz
loop
jmp
shl
rclb
and
jmp
mov
sub
xor
mov
js
clc
call
in
sarb
adc
lds
push
ret
push
mov
push
sbb
addl
pop
adc
popf
jmp
and
ljmp
inc
mov
lock
aaa
sbb
dec
mov
call
cld
ss
or
sti
mov
and
lea
mov
sar
sub
sub
jg,pt
adc
mov
ljmp
loope
jmp
adc
adc
movsb
fdivrs
jne
pop
jg
fcmovb
dec
movsl
mov
pop
movsb
push
mov
das
sub
fs
inc
mov
sbb
cmpsl
xchg
cmpsb
xlat
xor
jne
arpl
cwtl
insb
mov
movsb
add
mov
push
faddl
lock
int
adc
loopne
mov
mov
fcompl
scas
inc
mov
jle
mov
xor
aad
out
mov
in
test
notl
mov
jns
enter
add
popa
je
add
gs
xchg
pop
scas
insl
cmp
mov
test
jne
pop
test
mov
cmp
loope
xchg
sbb
in
cltd
cmp
test
jp
xchg
xor
in
xor
mov
shr
xchg
xchg
jle
daa
aam
mov
arpl
jbe
jge
insb
jmp
lock
mov
fsubs
sub
inc
mov
rcrl
arpl
ljmp
cmp
sub
js
fisubrl
cmp
clc
push
sub
cmc
fcoms
cmc
rcr
mov
add
mov
nopl
sub
mov
movsb
mov
jne
shl
ret
mov
ljmp
jle
push
xor
and
mov
aaa
repnz
xchg
cmp
sarb
mov
mov
inc
push
das
and
add
adc
push
push
sub
pop
out
inc
dec
mov
outsl
ja
je
aaa
jge
push
das
cs
data16
minps
es
pop
aaa
push
mov
adc
aam
xor
mov
shrb
push
idivb
sahf
pop
jecxz
lcall
out
mov
and
popf
xchg
fisubrs
dec
idivl
rorb
addr16
fwait
imul
fisubl
and
inc
mov
add
pop
add
push
inc
imul
adc
and
je
subb
mov
orl
xchg
jo
xchg
mov
stos
xlat
ja
clc
mov
add
push
mov
call
sbb
mov
stc
xchg
lock
jne
xchg
insl
push
ret
pop
push
mov
push
inc
pop
insb
sbb
xchg
jo
cmp
lcall
add
jl
std
fstpl
ret
jae
push
mov
repz
lods
xchg
js
xlat
ja
push
cmpsb
xor
add
cwtl
sbb
mov
push
inc
or
xor
in
jb
stos
pop
ljmp
test
aas
or
or
insw
mov
xor
shl
call
sbb
xchg
dec
xchg
or
scas
in
call
xlat
sahf
cld
fcomp
out
lret
adc
std
dec
inc
cld
xchg
out
je
inc
adc
sub
sbb
cmp
scas
pop
insl
dec
mov
out
cmpsb
push
imul
adc
repnz
std
leave
or
jo
sbb
dec
lds
fiadds
int
fisubrs
or
iret
out
stos
call
addr16
jp
dec
jp
mov
cltd
xor
leave
cmpl
in
mov
nop
popa
jno
add
test
dec
movsl
aas
loopnew
gs
add
rol
adc
loopne
add
sbb
addl
add
outsb
adc
xor
push
and
push
jmp
jnp
inc
or
cmp
in
dec
ret
add
jmp
sti
ficoml
loop
mov
stc
mov
dec
mov
mov
enter
mov
cmc
mov
mov
hlt
xor
test
outsb
cmp
scas
scas
xchg
xlat
mov
pop
sub
sbb
inc
rorl
push
jae
and
sbb
test
mov
mov
add
sub
les
add
cmp
je
adc
hlt
add
jnp
mov
insb
adc
sub
cmpsb
mov
push
mov
addr16
mov
cli
or
inc
popa
cld
cld
das
jmp
push
int3
das
lock
push
cmp
je
pop
mov
inc
fidivrs
insl
xchg
cltd
sar
ljmp
bound
aaa
imul
pushf
les
cmp
add
movsl
sub
into
dec
scas
outsl
push
rcrb
into
cmc
mov
lock
add
cmpsl
in
std
clc
cmc
rcl
add
popa
outsl
and
mov
pop
xchg
ds
mov
test
rol
sbb
cld
in
fistl
pop
hlt
dec
mov
jnp
out
shlb
adc
inc
xchg
sbb
cmp
pop
fsub
pop
enter
fwait
or
dec
inc
mov
sar
adc
aas
xchg
mov
mov
imull
scas
fiaddl
fnstsw
rorb
icebp
adc
inc
xor
out
inc
push
push
aas
dec
push
xor
imul
pushf
fstpt
subl
push
mov
mov
fucom
adc
or
adcl
jo
sarb
xchg
rol
sbb
and
lods
shlb
mov
clc
jns
sti
sbb
sub
aad
stc
cld
xor
or
jbe
mov
insl
sub
movsl
lock
push
and
test
pop
inc
mov
lret
xchg
imul
and
jmp
mov
sahf
in
in
pop
stc
mov
mov
jp
add
incb
lea
push
adc
inc
mov
imul
int3
mov
data16
push
lds
dec
testb
xlat
add
or
mov
mov
pop
jp
notl
outsb
xor
add
dec
cld
cmc
out
fildll
in
pop
dec
mov
jp
jmp
push
fisubs
push
pusha
test
stos
leave
aas
rorb
or
or
inc
fbld
cld
inc
scas
jecxz
push
jb
aas
in
imul
mov
pop
push
rclb
dec
frstor
loopne
cmp
leave
lods
push
and
in
lods
and
pusha
call
ljmp
imulb
mov
mov
outsb
out
dec
repnz
mov
in
mov
mov
add
inc
dec
psubb
dec
stos
imul
sbb
mov
inc
les
lods
or
lock
dec
aam
pop
pop
testb
test
jl
inc
cld
adc
adc
inc
or
push
cli
in
inc
test
test
xor
sub
xor
lock
sbb
into
out
cmp
mov
dec
mov
xor
jg
gs
jbe
dec
nop
sub
mov
push
dec
pop
je
jge
roll
stos
mulb
jns
push
dec
aad
jge
lods
fstps
sti
mov
fiaddl
nop
sbb
mov
loop
fists
fstps
jbe
cmp
das
dec
jae
add
cmp
or
in
jge
imul
cmpsl
cmc
sti
test
sahf
sbb
hlt
xor
mov
mov
pop
movb
pop
sub
pusha
add
scas
xchg
or
popa
or
xor
or
push
in
dec
fdivrs
add
shrl
mov
jp
adcb
lds
inc
pop
sbb
cmp
fidivrl
xchg
in
xchg
pop
pop
xor
int3
lock
scas
pop
roll
test
pop
rclb
loop
clc
mov
jle
cmc
test
push
fwait
scas
push
icebp
xor
stos
lds
mov
in
or
movsb
jne
mov
cmc
bound
imul
xor
jne,pt
imul
fcmove
pop
stos
fldcw
stos
aad
sub
hlt
jo
fcompl
aam
xchg
cli
mov
repz
mov
pop
jo
mov
nop
jle
push
or
adc
jo
push
mov
ja
push
jo
gs
lds
cld
dec
xchg
scas
addb
test
pop
repnz
std
outsb
shll
xchg
mov
jns
dec
adc
push
or
lahf
sub
lret
fdivrl
ficomps
cmc
adc
es
lret
jmp
test
cltd
test
or
enter
xchg
test
or
das
jnp
daa
sub
jge
out
pop
mov
mov
lock
dec
pop
out
xor
xchg
fwait
repnz
jmp
pop
or
in
js
testl
cmc
sbb
or
jmp
out
jecxz
adc
inc
mov
mov
lret
push
movsl
stc
mov
fstl
xchg
fdivl
scas
adc
cmp
iret
ret
lahf
sbb
adc
jns
cmp
or
sbb
mov
icebp
testl
add
mov
add
jns
jno
xchg
mov
orl
filds
or
test
call
pop
enter
xchg
clc
and
or
test
sbb
daa
mov
pop
add
das
push
mov
es
rorb
add
mov
inc
jb
sub
es
aam
shrb
jle
sbbb
daa
test
dec
cmp
add
sub
pop
sbb
mov
cld
cmpl
loope
xchg
jae
and
fsubr
sbb
in
adc
and
inc
es
mov
and
andl
out
and
out
dec
ret
push
int3
mov
and
sub
fucomip
mov
xchg
mov
cmp
fisttps
out
jecxz
pop
xchg
xor
hlt
or
inc
sub
roll
cmp
mov
iret
mov
xor
pop
lret
adc
popa
out
aas
iret
mov
pop
in
xor
mov
xchg
xchg
mov
rorl
push
mov
mov
dec
lods
aad
insl
jne
inc
cli
ret
xchg
xchg
loope
dec
add
jecxz
leave
in
sbb
iret
scas
or
adc
stos
out
pushf
call
cmp
cmp
inc
cmovp
sbb
add
iret
or
sbb
push
xor
jle
les
pushf
cmp
jo
out
bound
sbb
jnp
pop
popa
rorb
add
out
shrl
sbb
sub
lahf
sub
inc
xchg
mov
rorb
push
out
insb
pop
cmpsb
dec
jmp
or
xchg
sbb
cmc
addr16
xchg
and
or
inc
lods
call
mov
es
std
push
push
ret
stos
mov
mov
das
inc
mov
pop
in
dec
mov
cmp
jmp
add
pop
sub
push
push
jns
adc
nop
push
push
sbb
xor
enter
sahf
das
movsl
mov
ljmp
movb
ret
xor
sbb
stos
test
lock
push
aam
or
fistpl
cwtl
lods
cmpl
arpl
fistpll
pop
movsl
es
mov
movsb
stos
fimull
rol
jl
sarl
popf
and
inc
xchg
add
add
montmul
cmpsb
add
dec
arpl
sub
mov
sub
jmp
mov
add
fimuls
cmp
jl
inc
xchg
xchg
adc
jl
mov
xorl
mov
dec
outsl
push
leave
stos
add
cmpsb
mov
aaa
cli
js
pop
lret
add
push
jne
xor
xchg
cwtl
xor
mov
and
stc
xchg
jb
sarl
push
push
and
cmp
add
mov
sti
or
xchg
inc
outsb
js
mov
mov
das
dec
in
daa
or
cmc
mov
inc
inc
ja
jg
pusha
jmp
in
sub
jle
mov
movsb
in
repnz
push
cmp
sub
pop
lods
mov
cltd
mov
loope
xchg
bound
imul
es
sbb
scas
sbb
stos
and
test
popa
cld
adc
iret
jge
push
jecxz
adc
scas
adc
ret
inc
leave
push
stos
cli
jle
cwtl
leave
test
mov
jg
pop
dec
das
mov
ss
fmull
sub
sbb
cwtl
incl
stc
xor
test
shrl
mov
loopne
pop
out
dec
push
mov
data16
fmuls
jl
test
xchg
cltd
mov
sti
mov
or
cmpsb
mov
lods
sub
fdivr
nop
icebp
enter
shrb
idivl
mov
cmpsl
cmp
xchg
mov
popl
in
and
test
push
sub
jo
fcomp
and
mov
insl
fisubs
sbbl
cltd
jge
sbb
pop
loop
lahf
cmp
push
jl
mov
movsb
stc
add
mov
aaa
repnz
push
jbe
scas
js
xor
fsubl
dec
jge
or
dec
frstor
and
lea
sbb
cwtl
ljmp
std
mov
std
lcall
imul
stc
jmp
cmpsb
fildll
call
sbb
lods
and
dec
shl
in
pop
lods
xchg
mov
dec
les
test
add
call
pop
sub
sub
call
adc
repz
jle
out
adc
sbb
out
sub
lock
neg
js
aaa
loopne
std
ds
jmp
xor
cmp
adc
data16
mov
add
out
mov
mov
mov
xorb
adc
add
aaa
fcomp
mov
jne
sti
pop
adc
mov
in
repnz
push
mov
pop
mov
lods
loop
jb
mov
and
pushf
pop
pop
loopne
shll
push
imul
mov
rcr
cld
divb
sbb
jnp
cmc
sbb
xor
jo
jne
lret
enterw
pop
dec
shrb
out
pop
dec
jno
and
or
movsb
pop
push
stos
lock
xor
sbb
pusha
imul
shrl
and
out
sbb
pop
push
push
inc
jae
test
xrelease
loop
pop
aas
dec
xor
outsl
inc
popf
in
clc
cmpsb
dec
rcr
orb
mul
mov
loopne
add
fsubr
data16
pop
pop
lret
clc
in
push
icebp
sti
dec
xchg
mov
lret
xor
jbe
xor
xor
bound
stc
xchg
ljmp
adc
lods
cmp
xchg
jb
les
sub
sahf
loopne
and
in
icebp
outsb
loop
jle
out
lods
pop
push
rcl
in
and
scas
mov
in
cmc
jle
das
mov
pop
cld
adc
sub
push
enter
mov
jmp
xchg
repz
pop
sub
es
and
test
pop
cmc
push
shl
scas
push
jo
pushl
push
mov
sti
pusha
mov
jecxz
clc
push
dec
jp
test
xor
mov
dec
sbb
cmp
jp
xor
hlt
scas
mov
popa
mov
sbb
nop
pushf
sar
mov
shrl
mov
dec
stos
mov
inc
cmc
jle
das
test
mov
add
outsb
sbb
jnp
das
mov
out
test
jmp
inc
leave
scas
std
stos
inc
mov
dec
daa
add
fcoml
insb
mov
sahf
decl
in
mov
int3
xor
adc
pop
icebp
lcall
jno
ja
daa
cld
jae
push
push
movsl
cld
adcb
das
jb
lahf
enter
xchg
ss
aas
and
gs
movsl
call
cmp
xchg
imul
jecxz
test
fidivl
enter
mov
mov
xor
inc
dec
outsb
cmp
aaa
push
pop
popf
movups
stos
xchg
cmp
cmpsb
lods
push
inc
ss
hlt
popf
pop
repnz
stos
xor
aad
jmp
xor
or
fidivrs
or
mov
sbb
leave
cmp
or
test
mov
iret
push
xor
mov
fiadds
aad
int
out
subl
ret
out
repnz
mov
ficompl
inc
xchg
pop
lea
inc
fisubl
push
sub
sub
test
pop
sub
hlt
js
jnp
xor
mov
movsb
ljmp
add
shrb
adc
xchg
mov
xchg
std
cwtl
adc
dec
stos
or
int3
js
adc
fbld
aas
inc
or
xchg
or
xchg
sbb
out
test
jnp
cmp
ja
leave
out
push
ret
or
xchg
or
mov
sbb
mov
jge
lret
mov
outsl
cmp
cmpsl
dec
mov
xchg
push
and
adc
out
out
jg
fnstenv
stc
rcll
lea
xchg
sbb
fisubl
dec
pop
xor
frstor
and
sbb
mulb
addr16
icebp
fldt
aaa
test
fldcw
mov
mov
stos
pop
nop
shrl
jae
jnp
out
lcall
xor
rolb
pop
push
xor
sub
pop
jae
and
ss
add
and
cmp
stos
es
sub
lock
xchg
repz
pcmpgtw
push
stos
fnstcw
movsl
mov
in
mov
pop
das
sbb
sahf
rclb
pop
xchg
cmp
gs
jno
inc
sbb
in
inc
das
cmp
shlb
nop
iret
mov
loope
or
push
mov
imul
jnp
add
mov
inc
cli
mov
negb
pop
or
cwtl
mov
dec
push
mov
mov
call
aam
and
pop
aaa
dec
adc
push
in
in
das
xchg
mov
fnsave
out
mov
in
filds
dec
lret
rcl
leave
cltd
xchg
mov
pop
mov
nop
and
movl
bnd
mov
jae
loope
mov
mov
bound
lret
lcall
loope
and
pop
jo
fnstsw
hlt
jg
push
je
pop
or
rcr
xor
jg
or
psrad
shll
adc
xchg
pushf
mov
js
pop
cli
mov
gs
jecxz
jno,pn
mov
adc
sub
pop
pop
xor
into
fwait
mov
push
ja
pop
ret
push
outsb
fisubl
cmpsb
ret
ds
and
outsb
sti
imull
mov
and
xorl
mov
push
movsb
divl
lcall
out
arpl
dec
das
push
sub
mov
adc
mov
pop
sbb
jb
mov
cwtl
lret
fnstsw
dec
stc
or
xor
xor
inc
and
mov
dec
mov
push
cmp
not
push
negl
je
lret
call
bound
push
outsb
rolb
lock
outsb
aad
sub
jo
lea
lods
int
cmp
inc
enter
and
scas
push
xchg
mov
xlat
or
jnp
cmp
push
cld
into
mov
jecxz
mov
ds
cwtl
or
fdivrl
sbb
add
mov
aaa
and
mov
mov
and
je
or
dec
ja
sti
pop
pop
cli
leave
leave
mov
inc
in
je
xchg
aaa
or
sub
push
and
and
es
cmpsb
mov
imul
mov
fistl
lods
movd
out
mov
mov
sub
cvtps2pd
pop
push
or
fnstsw
xor
pushf
cmp
mov
imul
mov
mov
scas
jnp
movsl
xchg
leave
lahf
test
pop
mov
sub
pop
xor
or
fiadds
call
push
add
sbb
push
orl
loope
push
rorb
jmp
add
push
jg
out
inc
insl
fmuls
jp
mov
jo,pt
aad
cmp
mov
add
test
aam
lods
cmpsb
lahf
stos
pop
fucomi
in
pop
pop
in
push
fstpl
mov
adc
mov
psubd
cltd
leave
push
jg
out
mov
mov
dec
or
dec
jns
and
jge
scas
das
adc
clc
pop
stos
push
cmp
ds
mov
add
rolb
aas
rcl
xchg
mov
ja
ja
add
sbb
push
lea
pop
mov
mov
out
icebp
lcall
ljmp
lahf
data16
add
sub
lds
push
pop
lahf
push
imul
repnz
shll
and
push
push
jno
loop
cs
dec
add
xchg
fisttpl
add
test
arpl
fsts
icebp
addr16
shr
dec
jl
arpl
inc
xchg
mov
adc
jnp
stos
test
pop
les
outsb
insb
ret
lret
inc
addr16
add
fcoms
clc
pop
inc
jge
xor
fstpt
outsl
stos
in
xchg
mov
nop
mov
mov
lea
add
xchg
mov
jmp
enter
mov
stos
movsl
or
je
mov
imul
mov
int
ss
call
xchg
imul
mov
decb
inc
push
xor
cmp
xchg
mov
mov
jl
mov
js
xchg
or
push
imul
pop
cmp
adcl
or
nop
or
adc
adc
les
jnp
mov
or
sbb
pop
mov
mov
pop
inc
inc
fnsave
in
push
push
mov
add
pusha
xor
pop
les
scas
jnp
dec
mov
mov
mov
mov
js
fisttpl
or
popf
push
jnp
sahf
add
inc
outsl
cmp
repnz
jle
cmp
loop
and
pop
stos
xlat
je
stos
mov
add
or
aaa
mov
sbb
stc
jl
outsb
shrb
push
mov
pop
mov
aaa
inc
push
cmc
inc
push
out
inc
mov
cmp
pop
jns
xor
inc
lahf
push
jge
aas
call
add
cli
arpl
mov
cmpsb
jecxz
and
jg
push
push
mov
fildl
mov
test
cli
cli
and
add
mov
cmpsb
push
xchg
inc
cld
mov
pop
outsb
in
repnz
cmp
inc
int3
inc
jo
mov
clc
insl
push
sbb
fdiv
jl
mov
lcall
decl
test
push
sahf
sbb
lahf
in
in
shlb
rcrl
mov
mov
ret
fisubrl
xchg
mov
adc
test
mov
mov
sbb
add
push
je
cmp
push
sbb
ds
pop
pop
cltd
repz
call
decl
pop
movsb
loope
push
test
and
sar
sub
mulb
xor
and
sub
mov
dec
adc
and
es
js,pn
or
in
test
sbb
push
out
xchg
inc
and
es
aad
cmp
xchg
ja
out
test
push
leave
stos
lods
jbe
pop
imul
fwait
and
std
mov
fwait
adc
pop
lcall
and
cmp
mov
imul
pusha
or
or
xor
mov
add
cwtl
cmp
sub
rorb
mov
jmp
daa
xorl
fwait
xor
lea
test
pop
ja
sub
sbb
adc
aad
pop
pop
sub
pop
neg
int
fsts
in
mov
dec
pop
xor
jp
faddl
out
dec
outsl
jo
add
loop
fistpl
pop
pop
fistps
repnz
inc
lahf
pop
mov
push
pop
imul
pusha
xchg
xor
add
fcmovbe
aam
lods
pop
test
dec
push
push
test
in
push
mov
and
sub
out
inc
pop
dec
mov
fsubs
jno
loopne
popa
pop
and
int
push
scas
das
hlt
icebp
mov
cmc
fcmovu
mov
outsb
stos
xlat
cmc
out
add
lcall
cmp
xchg
out
inc
mul
loop
jmp
popa
jae
in
and
add
push
mov
or
push
xchg
cmp
mov
xor
icebp
cltd
fdivrl
adc
sbb
jb
xchg
jl
adc
pop
mov
mov
out
or
in
lcall
cmp
jecxz
pop
or
xor
sub
pop
rorl
or
hlt
daa
out
push
jnp
jbe
push
or
adc
rorl
or
dec
bound
lock
rol
outsl
xchg
dec
mov
dec
fnstsw
xchg
jns
cmp
mov
pop
popf
and
shl
dec
bnd
sti
xor
aam
in
cmp
dec
out
gs
lea
mov
leave
and
cmp
stos
cmpsb
inc
mov
mov
aaa
loop
or
cmp
sbb
lock
sub
sub
sarb
test
pop
pop
nop
xor
dec
insl
or
cmp
lock
stos
add
push
inc
das
mov
jl
ret
or
test
in
cltd
mov
ret
cltd
rorl
test
jo
xchg
sub
out
mov
popa
jmp
sub
mov
pop
sbb
mov
daa
mov
sbb
dec
jb
adc
es
loopne
xchg
jecxz
clc
cld
aam
pusha
jae
pop
mov
shll
sbb
out
pop
outsl
or
data16
pop
pusha
insl
fcmovnb
dec
mov
mov
fnsave
popf
and
aaa
sub
mov
dec
into
lea
stc
mov
out
xor
or
mov
inc
mov
test
sub
jmp
sbb
cmp
out
sbb
insl
js
scas
insl
ret
push
insl
movsl
inc
cmp
sti
xchg
scas
xor
mov
and
movsl
out
pop
push
xchg
cli
pushf
xchg
arpl
xchg
lret
mov
pushf
push
jle
sbb
rcll
daa
aad
inc
mov
mov
ja
and
mov
fmuls
add
add
pop
rorl
sub
inc
adc
xchg
aas
pop
cmp
out
bound
dec
mov
movsb
jne
cmp
cmp
sbb
mov
clc
or
fisubrl
or
adc
cld
mov
mov
mov
ja
lcall
loopne
std
pushw
or
push
or
cmp
sbb
xchg
xchg
dec
int
push
vpinsrw
ficoms
sub
std
loope
test
fstpt
shll
dec
inc
out
movsb
shll
add
mov
dec
mov
dec
sub
or
fistps
xchg
sbb
and
outsb
or
or
roll
jnp
push
ljmp
lods
add
xor
insl
xor
mov
mov
adc
rclb
fists
pop
push
scas
iret
fsubrl
fcompp
mov
mov
aam
pop
cmpl
cmp
jmp
xchg
adc
shrl
jb
xchg
sarl
or
mov
out
lahf
std
into
dec
subl
jmp
insl
xchg
cltd
lret
push
stos
xor
adc
push
cmpsl
stos
and
mov
inc
dec
incb
int3
jl
pop
add
mov
mov
xlat
push
or
fwait
mov
ds
mov
push
mov
add
cwtl
cmp
into
fwait
lods
mov
xchg
bound
cmp
jno,pn
lods
jmp
addr16
test
and
pop
jl
push
loop
das
je
outsl
and
cmp
inc
icebp
or
movl
sub
or
ret
sub
imul
andl
nop
adc
ja
or
lock
inc
rcll
ret
inc
stos
mov
mov
ja
in
dec
sahf
or
rclb
sub
push
inc
lds
inc
xor
cmp
or
jl
sub
fsubrl
xchg
aam
loope
cmp
pop
fldl
and
push
fs
shlb
cmp
ds
cli
stos
inc
add
loop
les
adc
xor
pop
rcrl
cmp
lahf
test
imul
pop
and
sar
xor
lods
jge
cmp
inc
sub
jmp
pop
in
mov
pop
dec
ret
sbb
clc
ljmp
sub
mov
mov
pop
jb
inc
aaa
xchg
jb
popf
jmp
in
cld
rcrb
mov
sarb
lds
xchg
int
into
mov
cltd
jl
enter
sbb
repz
ret
mov
fstp
sub
dec
or
jmp
jg
idiv
test
imul
jp
bound
mov
mov
jle
imul
rclb
adc
fmuls
in
jge
lcall
mov
in
push
lret
aas
jnp
inc
fs
mov
inc
mov
dec
mov
lahf
inc
xchg
shl
add
sbb
push
icebp
movsb
and
nop
cmp
fdiv
daa
cli
cmp
xor
popf
call
mov
dec
pop
sbb
mov
imull
test
dec
sub
push
xor
sub
add
and
fldt
push
jg
adc
leave
fwait
out
xchg
cmp
cltd
or
mov
xor
pop
das
mov
aad
fwait
addr16
int3
in
mov
loop
addr16
push
cwtl
mov
jb
xchg
js
pop
movsl
std
in
lock
dec
cmp
pop
push
inc
push
lahf
clc
add
sti
dec
sbb
scas
push
push
jecxz
sbb
xchg
sbb
xchg
fwait
test
imul
negb
das
dec
into
mov
jnp
popa
cmp
hlt
stos
movsl
xchg
pop
out
mov
cmc
or
xchg
fstl
fldenv
adc
mov
ljmp
rol
inc
sti
xchg
test
fbld
or
and
add
xchg
xchg
mov
push
sahf
jnp
scas
xchg
out
sub
inc
inc
sub
sti
addl
rcll
jns
jnp
sub
inc
jle
mov
aas
mov
push
ljmp
mov
mov
icebp
es
dec
ljmp
loope
push
push
scas
sbb
dec
and
sub
mov
dec
pop
mov
mov
sarl
xchg
and
aas
push
ret
push
int3
jnp
pop
movsb
repz
cli
sbb
in
lock
inc
xor
sbb
std
adc
test
dec
cltd
push
mov
jno
sbb
and
cli
pop
mov
mov
cmp
push
pop
lahf
imul
pop
adc
fs
loop
cmpsb
adc
mov
arpl
sbb
daa
mov
stc
xchg
jle
fistpl
sub
xor
push
dec
jbe
add
dec
mov
inc
cmp
inc
mov
xlat
fbld
cmp
in
cmpsl
and
inc
mov
int3
arpl
lds
mov
jo
adc
mov
adc
jecxz
lahf
scas
mov
enter
lea
push
cmc
ffree
divl
jmp
add
mov
roll
inc
ret
and
and
fistpl
scas
cltd
lds
cwtl
xchg
in
push
pop
mov
mov
pushf
push
sbb
pop
ficomps
inc
test
or
pushf
add
rorb
adc
sub
adcl
and
fldenv
fmull
adc
jns
std
inc
lods
jl
aaa
push
std
icebp
repz
and
sbb
add
xchg
jmp
cwtl
nop
add
push
lods
dec
add
and
int
push
dec
pop
inc
je
ljmp
sbb
je
dec
leave
lds
movsl
daa
in
imul
push
mov
push
stos
jae
enter
push
mov
out
cmp
mov
xor
call
scas
cmp
cmp
xchg
insb
mov
cltd
mov
stc
or
shrb
insb
push
jmp
jle
sub
shrb
sti
mov
cltd
adc
and
push
jb
cmp
imul
dec
orl
xor
mov
mov
sub
outsl
push
popf
inc
mov
cwtl
xor
dec
jecxz
xchg
jg
mov
ljmp
stos
and
movsb
pop
dec
call
cmpsl
scas
add
and
or
dec
repz
and
cmp
insb
into
iret
mov
inc
out
lea
add
sbb
jmp
test
lret
inc
add
imul
mov
stos
add
inc
outsb
push
arpl
std
sti
call
je
in
nop
adc
arpl
push
jg
pop
ds
push
ss
int
stos
fcoml
aas
psraw
cmpl
xchg
mov
lcall
ljmp
pop
pop
and
push
xchg
in
pop
sbb
sub
aad
sub
or
mov
cli
pop
xchg
pusha
jge
lcall
sbb
mov
pop
adc
mov
and
inc
cmp
mov
loope
dec
push
sbb
imul
jnp
mov
shr
test
xor
push
cmpsb
mov
inc
xor
dec
inc
jmp
mov
sub
or
cli
jmp
imul
dec
into
lea
or
add
add
jae
fcompl
push
xor
and
or
add
push
mov
add
pop
in
pop
jg
sub
or
or
addr16
cld
pop
add
shrb
xchg
mov
inc
push
sub
ds
adcl
inc
jp
movsb
mov
jl
and
lock
push
ret
pusha
rcrl
inc
test
mov
mov
or
repz
test
ds
fcmovbe
sbb
popf
cmp
add
cmc
xlat
dec
sbb
out
ljmp
rcl
repnz
pop
pop
xor
sbb
cmp
xchg
lds
xor
bound
add
adc
xchg
and
mov
mov
cli
push
inc
jl
fs
mov
cli
mov
in
dec
dec
pop
mov
ficoms
bound
mov
dec
cmpsb
decl
push
test
das
or
cmp
adc
test
adc
mov
daa
jge
pop
cmc
pop
ja
dec
ljmp
pop
icebp
shll
jo
lcall
mov
std
jns
dec
adc
xor
cmpsb
add
inc
ret
pop
mov
xchg
popf
dec
repz
aam
aas
in
push
pop
ss
dec
inc
dec
sbb
popa
inc
xchg
add
sbbb
inc
mov
mov
and
fcomps
in
fidivrs
loope
jge
push
cmp
push
inc
push
mov
outsl
xchg
cld
cmp
subb
jge
adc
push
mov
insb
enter
into
sub
xor
rcll
lret
xchg
bound
sbb
sub
addb
mov
inc
jns
ds
clc
pop
aaa
add
sbb
mov
shrl
inc
jg
mov
hlt
dec
xor
sbb
jmp
and
pop
mov
in
pop
adc
lods
call
inc
and
icebp
mov
xor
or
xlat
add
cmp
pop
dec
pop
pop
insb
mov
pop
and
lret
lahf
add
inc
dec
push
ljmp
adc
cmpsb
inc
shlb
ja
ds
insb
ret
xor
shl
pop
jno
sub
mov
in
and
fwait
mov
inc
es
inc
ret
aad
jmp
adc
icebp
push
adc
or
sbb
sbb
inc
sub
mov
push
xchg
les
push
pop
movsb
in
push
mov
push
sub
dec
outsb
pusha
xchg
jecxz
add
add
mov
fstps
push
shlb
inc
mov
bound
outsb
pop
insb
inc
inc
clc
pop
xchg
punpckldq
push
adc
dec
mov
mov
faddp
mov
push
ja
pop
ljmp
pop
in
adc
int
aad
inc
mov
loop
and
mov
xchg
imulb
mov
popa
xor
pop
fucom
jge
rcll
mov
lock
enter
xor
lods
push
xchg
fcoms
inc
mov
ljmp
jle
lods
sub
mov
inc
mov
xchg
cmp
lods
mov
test
out
cmp
and
std
and
xchg
out
mov
scas
filds
xchg
les
jnp
push
sahf
pop
cwtl
pushf
daa
ficoms
adc
pop
xor
icebp
outsb
jecxz
jb
lahf
xor
mov
jmp
lea
js
out
fidivl
insb
ljmp
cmp
jp
mov
pop
inc
xchg
sti
out
adc
xchg
jns
mov
daa
out
fsubl
jne
xor
mov
ljmp
shl
jmp
mov
seta
xorb
inc
cmp
add
add
cmpb
and
mov
mov
pop
push
jne
shrl
movsb
dec
fcmove
mov
dec
sbb
insb
adc
mov
pop
fisubrl
cmp
sbb
sbb
test
aam
je
cli
jo
mov
jb
push
mov
pop
clc
leave
adc
lock
outsl
aas
fwait
lret
scas
add
das
and
pop
ds
mov
or
jno
ret
leave
push
sbb
mov
xchg
push
mov
cltd
call
mov
repz
push
inc
dec
in
and
lret
dec
or
lds
add
pop
loopne
push
fsubl
cmpb
rep
jb,pt
sbb
arpl
cmp
sub
mov
push
popa
inc
and
mov
xchg
mov
lock
das
jge
mov
xchg
divb
push
cmc
mov
mov
ss
jae
cltd
jns
aam
stos
imul
rcrl
in
sbbl
jbe
sbb
xchg
inc
adc
nop
mov
mov
mov
dec
or
sbb
and
push
xchg
out
mov
add
xchg
pop
push
aas
mov
mov
or
xchg
call
xchg
popa
repnz
xor
mov
pop
lret
push
test
mov
cmpb
dec
iret
sbb
add
mov
cmp
pop
jg
fs
popf
cli
mov
icebp
pop
sbb
push
imul
and
inc
imul
ljmp
loope
pop
pop
ret
sbb
mov
jle
xchg
lods
xlat
cmpsl
adc
and
subl
xor
dec
jns
in
loope
push
mov
xchg
jne
lahf
pop
jmp
push
mov
pushf
test
mov
rcrl
cmp
push
or
call
outsb
fwait
gs
shrl
imul
out
xchg
xlat
scas
lahf
fistpll
mov
push
pop
xchg
lds
shll
mov
mov
repnz
sub
add
lods
dec
das
cld
pop
mov
add
dec
lods
and
jmp
leave
cli
lods
test
mov
sub
fimuls
xor
mov
or
mov
mov
push
bound
inc
jo
jne
loope
xchg
fisubs
sub
or
add
gs
loope
ds
fsubrs
aad
mov
xor
jmp
sbb
push
mov
sub
adc
jmp
aaa
jl
jns
mov
cwtl
cmp
repnz
inc
ficompl
jne
ds
aam
push
xor
sbbl
js
ja
or
leave
jb
faddl
in
scas
and
fcompl
sbb
and
adc
mov
fldl
pop
sub
test
fidivs
jo
mov
push
lret
pop
outsl
xchg
xor
lahf
fs
jb
xor
jg
mov
jmp
push
cmp
inc
jge
adc
push
clc
add
cmpsb
addl
int
mov
fistpll
cli
mov
cmc
shrb
lea
sti
in
ret
nop
mov
cmpsb
cmp
cmc
jb
xor
xchg
sub
or
xor
pop
mov
cs
fstpl
rorl
js
adc
push
stos
mov
dec
sub
add
add
inc
scas
mov
mov
scas
test
pop
mov
lds
mov
cmp
sub
test
frstor
in
push
push
mov
mov
adc
dec
xor
ret
cmp
push
mov
mov
mov
movsl
mov
lods
add
mov
lock
push
sbb
out
push
sbb
xchg
int
xlat
clc
adc
pusha
cmpsl
push
aaa
popf
aad
andnps
adc
leave
test
jp
or
or
stc
jge
test
mov
pop
test
sub
add
bound
mov
in
jae
sub
xchg
mov
test
daa
jns
mov
cld
cmp
xchg
jns
pop
xchg
mov
add
out
add
dec
pusha
fwait
test
out
pushf
xchg
pop
add
cs
xchg
pop
dec
mov
cltd
pop
lret
jb
ds
or
jno
jmp
mov
xchg
xchg
outsb
sarb
adc
cld
mov
ds
mov
mov
aam
fs
add
mov
and
lret
pop
jg
test
jp
add
pop
add
mov
sub
mov
shrb
sub
lock
aas
mov
rclb
or
and
or
sarb
jne
jecxz
pop
xor
test
mov
daa
pop
ss
ficompl
test
fildl
pop
lret
inc
push
push
sahf
push
pop
rcrl
nop
outsl
sub
inc
inc
xchg
cmp
push
js
or
lods
movsl
cli
repnz
dec
xchg
sub
imul
jb
lods
mov
sbb
leave
mov
shl
push
push
outsl
in
sub
subl
pop
leave
in
repz
adc
jb
or
dec
and
xchg
ja
inc
rcl
inc
or
sbb
xchg
add
sarb
gs
inc
bound
add
cmova
sti
test
xchg
push
cmp
adc
add
mov
pop
ss
add
stos
push
shlb
push
push
enter
aam
or
cmp
jne
sub
inc
stos
enter
scas
cmp
js
xorl
daa
lret
js
cli
repnz
sub
out
ljmp
jmp
push
xor
je
dec
xor
cmp
cmpb
and
cmp
jns
push
mov
jle
insl
sub
jg
cmpsb
dec
cmp
sti
add
jne
lock
ds
outsb
data16
shlb
mov
movsl
add
sahf
imul
idiv
push
aad
out
cmp
dec
dec
data16
adc
out
jne
mov
dec
inc
sub
clc
out
and
and
sub
pop
js
sahf
xchg
outsl
rcll
sbb
adc
jle
xchg
or
sub
mov
cmp
jl
mov
push
scas
pop
xchg
cli
cld
and
cli
mov
dec
cmpsb
and
int
out
sub
pop
mov
mov
mov
cmpsl
fidivrl
hlt
out
fdiv
lret
add
popa
fbstp
xchg
negl
nop
out
mov
xor
adc
out
shrb
leave
pop
xchg
icebp
enter
push
fs
mov
sub
repnz
xchg
cmp
add
icebp
inc
test
out
mov
mov
push
mov
repnz
mov
lds
fdivrs
aam
dec
pusha
das
jbe
pop
jecxz
dec
push
jo
jns
ret
aad
sti
dec
rol
or
pop
pop
cmp
mov
jb
mov
add
push
bound
gs
mov
push
mov
rcll
pop
jne
inc
and
adc
in
dec
arpl
mov
scas
sub
enter
mov
lret
js
imul
pextrw
and
mov
xchg
mov
push
lods
sti
daa
loope
insl
mov
pusha
adc
rcrl
rorl
mov
fnstenv
xor
in
sbb
pop
insb
xor
dec
mov
adc
les
or
repnz
aad
xor
fimuls
mov
ja
div
cltd
inc
out
ds
lds
ret
cs
push
loop
sbb
and
fcoml
subl
adc
add
imul
mov
decb
filds
into
in
adc
cwtl
enter
sbb
popa
rorl
push
outsb
into
dec
fs
insb
test
cmc
jb
xchg
cltd
cld
adc
into
fisttps
cmp
sub
cmc
test
xor
les
int3
leave
test
sarl
andb
addr16
adc
pushf
jge
mov
je
in
movsb
enter
dec
jb
aas
imul
jl
call
loop
lahf
gs
mov
lret
sarb
leave
push
idiv
jecxz
jg
mov
inc
rol
pop
shl
arpl
xchg
test
pop
ja
push
fcmovne
mov
jbe
std
std
push
lcall
leave
dec
lods
lea
hlt
adc
iret
mov
mov
and
and
cmpsl
pop
lods
add
dec
repz
orl
xor
jle
mov
adc
cmp
out
aaa
mov
xchg
xchg
and
scas
and
lock
mov
leave
mov
movsl
gs
push
es
ljmp
cld
test
sub
push
xchg
lods
sub
add
jle
loopne
test
sub
dec
sbb
mov
lods
xor
sbb
or
das
xor
mov
ja
lock
mov
cmp
aam
mov
ret
fildll
inc
ss
inc
jle
add
enter
inc
sbb
push
inc
xchg
adc
push
hlt
push
mov
xchg
jecxz
stos
sbb
mov
cmp
fmul
mov
or
clc
push
addr16
dec
pop
jbe
gs
and
in
int
mov
mov
mov
jbe
pop
push
sbb
ret
pop
xor
cmp
pop
mov
into
sbb
cwtl
push
ds
mov
xchg
mov
push
fildl
cltd
jle
jle
sbb
push
pop
and
out
repz
nop
rcr
mov
pop
xchg
mov
arpl
ja
mov
divps
jle
jge
and
mov
insl
ret
sbb
mov
pop
mov
add
in
fs
loopne
jo
pop
adc
shlb
cmp
push
push
sub
jae
pop
ss
mov
rorl
jg
shlb
sub
adc
icebp
ffree
lahf
or
pushl
movsb
mov
icebp
cmp
jns
sar
lcall
pop
xor
jae
push
lahf
adc
pop
mov
pop
mov
sub
dec
xchg
data16
ret
push
xchg
dec
xlat
lret
lods
in
out
adc
mov
ffree
pop
dec
mov
mov
test
add
shrb
adc
inc
jge
imulb
cmp
push
dec
out
fisttpll
dec
cmp
adc
xchg
unpckhps
cmc
enter
iret
lock
jp
fsub
in
and
les
push
adcb
test
clc
dec
xchg
gs
or
insl
stc
movsb
xchg
jbe
and
or
mov
sub
in
or
mov
ret
insb
fistl
xor
push
je
cmp
ljmp
jg
xchg
mov
and
cmp
daa
sbb
dec
cmp
sub
int3
inc
int3
mov
push
mov
lret
pushf
dec
xchg
mov
xchg
inc
sti
adcb
adc
das
dec
insl
lods
xchg
jo
cmpb
inc
jbe
icebp
arpl
out
in
jne
inc
and
lock
loope
pusha
add
into
sahf
int3
pminsw
sub
cmp
and
push
sbb
cmp
jnp
lock
imul
mov
cmp
xor
jb
setb
test
mov
push
int3
mov
shll
push
dec
mov
popf
lds
fldt
push
aam
push
clc
adc
sbb
xor
rclb
mov
rolb
fisubrs
cmp
mov
fmul
imul
sti
mov
mov
sub
test
push
and
pop
insb
in
loope
leave
rcr
shlb
sbb
mov
and
call
movsb
cmc
stc
cmpsl
ror
cmpsb
cmp
xchg
or
mov
adc
pop
shll
cltd
imul
jmp
mov
cmp
cmp
imul
aad
lock
addr16
mov
es
loop
in
insl
push
and
arpl
dec
leave
test
jl
xchg
das
jge
aam
ja
sub
lods
mov
pusha
adc
xor
shlb
rcr
inc
sub
lock
adc
xor
mov
scas
dec
inc
sub
insl
out
sahf
push
sub
cmp
lret
xorl
call
sbb
dec
das
inc
and
xor
inc
incb
cmp
jmp
shrl
ja
in
add
pop
cli
ljmp
cmpsb
jp
mov
fcompl
icebp
mov
pop
inc
jge
test
mov
rcrb
ret
mov
sub
mov
sarl
inc
add
nop
mov
jp
mov
imul
add
mov
xchg
add
lds
cmpsb
mov
cmp
test
out
and
cltd
dec
stos
cld
fistps
scas
and
pop
jmp
mov
mov
enter
aad
pop
cmp
faddl
dec
cwtl
pop
sbb
mov
mov
les
popf
xor
mov
into
cmp
sbb
dec
adc
aam
mov
add
mov
jg
or
sbb
test
aas
mov
out
pop
in
out
push
pop
test
adc
mov
popfw
pop
xor
jp
lods
daa
mov
sbb
loop
add
dec
lcall
pushf
mov
jnp
repz
sbb
sub
and
fmuls
insb
test
out
mov
inc
shlb
ficomps
sbb
jl
add
leave
xchg
lret
lret
lea
and
mov
push
mov
jecxz
xlat
jne
cmp
mov
jno
cs
sahf
and
enter
fildll
aas
cmp
mov
and
test
in
mov
mov
icebp
ljmp
ljmp
enter
pop
mov
sbb
jmp
cltd
pop
hlt
in
rorl
aas
sbb
mov
and
mov
call
push
sti
xchg
in
inc
cmp
add
push
test
sub
fstps
sub
xchg
lret
in
ss
out
test
les
xchg
pop
dec
adc
sub
xchg
testl
jge
push
clc
and
ljmp
mov
xor
aam
cmp
xor
sahf
mov
rcrb
std
add
test
or
push
lahf
call
out
xchg
ljmp
jnp
iret
add
fcmovnb
inc
jle
sub
shlb
or
sub
data16
mov
dec
rorl
and
xor
jne
mov
cwtl
inc
mov
cs
inc
jg
int
mov
repnz
xchg
mov
sbb
aam
adc
jb
iret
push
mov
stc
push
cmp
mov
ret
add
cmp
shlb
lcall
stos
jecxz
fwait
inc
mov
xor
add
enter
pop
aad
pop
xor
inc
cwtl
fcoms
push
sbb
cli
xor
pop
ja
stc
push
scas
lds
xchg
sbb
pop
sub
and
aaa
xor
ficoml
cmp
inc
mov
or
imul
mov
mov
xchg
adc
call
jle
jo
aas
jnp
gs
and
xor
rorl
xorl
push
adc
hlt
loop
or
mov
aas
mov
icebp
xchg
cltd
movsl
pop
mov
xchg
push
test
sbb
mov
movsl
inc
xchg
mov
out
call
or
jecxz
int3
and
stos
loop
mov
mov
mov
sub
arpl
rol
xchg
cmp
enter
fisubrs
sbb
mov
std
dec
aas
jno
filds
stos
inc
clc
sub
pop
fbld
int3
add
lahf
jae
jb
testb
mov
mov
into
gs
test
les
stos
outsb
xchg
loope
stc
fildll
adc
rcll
pop
sbb
jp
mov
cmp
xchg
mov
je
sub
je
fisubl
decl
mov
mov
lods
push
adc
push
push
add
shrl
icebp
das
adc
jge
and
push
fs
mov
or
cmpb
sarl
sahf
addr16
sbb
cmp
xchg
popf
jmp
inc
iret
mov
mov
and
inc
cltd
psllw
loope
mov
and
stc
jg
jno
mov
xlat
fstpl
inc
rol
lret
inc
sarb
aas
cmp
fcompl
dec
xchg
dec
sub
sub
es
jns
jg
jno
dec
push
mov
in
pushf
shlb
pop
pop
aam
fwait
pop
and
inc
and
fadds
push
cwtl
jg
lret
stos
lds
leave
adc
mov
dec
ds
dec
adc
adc
and
pop
dec
jbe
imul
scas
cmpb
push
pusha
lds
jb
mov
cli
inc
xor
mull
rcl
xchg
mov
out
adc
or
adc
add
pop
jp
jle
ja
out
lods
cltd
in
int3
daa
add
and
cwtl
cltd
xchg
pop
dec
fprem1
dec
or
outsb
push
sbb
xor
stos
and
sbb
pop
lahf
rcrb
pusha
lahf
js
mov
xchg
stos
insl
dec
fistps
push
jb
mov
cmp
fwait
add
lea
cmpsl
aam
cmp
push
or
add
jl
sbb
mov
lcall
addl
mov
mov
mov
sti
icebp
repz
andb
pop
xlat
add
adc
jle
lcall
pop
enter
in
imul
movsl
lcall
mov
shl
mov
mov
mov
js
imul
imul
jne
mov
pop
cmp
mov
xchg
pop
add
xor
aas
aad
cmp
push
jle
sub
mov
rol
jae
lret
int3
aaa
mov
leave
std
mov
aam
inc
push
xchg
jp
mov
stos
push
addl
andl
fimuls
flds
mov
push
pop
dec
dec
shrb
sbb
clc
push
inc
cmp
cmp
js
loop
or
loope
or
imul
cmovp
xor
mov
out
loop
outsb
xlat
das
adc
pusha
pop
jmp
sbb
shlb
test
sbb
lret
fldcw
inc
or
popa
test
and
pop
fnstenv
dec
xchg
dec
adc
mov
mov
aas
xor
mov
mov
jns
jb
or
mov
inc
inc
pop
cwtl
sub
test
mov
adc
pop
mov
shrl
imul
xchg
popl
ds
jmp
sbb
nop
or
push
dec
fstps
xchg
popa
push
adc
dec
dec
xor
fbld
or
inc
movsb
mov
cmpsl
sbb
lret
cwtl
and
mov
and
sub
ljmp
pop
adc
fs
in
or
fstl
mov
sbb
sub
aaa
outsb
cmc
mov
movsl
xchg
jmp
in
popf
and
and
push
sbb
call
xor
cmpsl
lods
pop
jbe
or
and
pop
sbb
or
je
mov
sbb
push
xor
out
fwait
jb
sarb
stc
jb
dec
dec
jl
jns
int
mov
dec
sub
rol
lods
add
jl
mov
int3
es
js
shl
jmp
pop
int
shr
mov
sti
pop
mov
in
push
ljmp
out
dec
std
inc
call
dec
fucomip
pop
dec
push
dec
repz
and
subb
sbb
push
pop
iret
mov
push
inc
cmc
decl
ret
orb
sbb
das
sub
xor
fsts
xchg
rolb
xchg
dec
cmp
cmp
call
push
adcl
aad
inc
mov
adc
or
push
es
cmp
shll
pop
test
insb
mov
aaa
jmp
adc
loop
mov
cmp
in
jp
add
cmp
or
sarl
addr16
xor
popa
mov
cs
fcomps
jne
inc
cmp
call
daa
ret
add
xor
dec
insl
pop
js
cmc
cli
push
imul
sbb
jae
mov
push
dec
arpl
in
int3
add
push
inc
adc
bound
xor
mov
mov
pop
movsb
inc
sub
xchg
lock
fnstcw
inc
stc
cmp
dec
adc
cwtl
jmp
outsl
cmp
imul
mov
mov
or
movsb
xor
push
incl
sub
adc
mov
xor
jecxz
sbb
negl
pcmpgtd
mov
mov
dec
lock
xlat
sub
mov
into
pop
fstl
mov
sarb
enter
ret
or
inc
daa
icebp
imul
shr
outsl
mov
divb
ret
jg
adc
int3
pop
and
cmp
movsb
dec
jmp
adc
mov
sti
sub
dec
test
add
mov
xchg
into
adc
stc
addr16
rorb
sub
xor
fndisi(8087
adc
jns
sub
sub
int
negl
int
leave
add
out
cmp
cmp
mov
inc
es
ljmp
es
iret
and
mov
pusha
mov
xor
cmpsl
ss
push
fsubs
je
andl
mov
dec
push
std
nop
adcb
add
inc
clc
and
dec
mov
jmp
pop
pop
sub
pop
mov
test
das
add
inc
mov
cmpl
cmp
sub
call
adc
mov
or
mov
cmp
push
jl
pop
outsb
sub
aaa
pop
imul
sub
imul
fmul
mov
roll
pop
push
pop
js
jl
gs
call
out
push
mov
test
popa
in
lock
outsl
xchg
ljmp
shrb
mov
cmp
arpl
insb
das
out
xchg
or
in
and
push
jo
andl
push
arpl
inc
sti
es
call
sbb
pop
mov
add
sbb
adc
movsb
xchg
rclb
mov
into
mov
mov
dec
jns
repnz
insb
adc
and
jg
ds
out
fs
movlps
les
hlt
mov
adc
testb
ret
ds
or
and
jnp
pop
insl
inc
sbb
and
imul
jae
or
loopne
mov
add
cmp
cltd
in
xchg
aaa
adc
dec
ja
popa
and
add
xchg
lcall
daa
int
add
loope
add
movsl
mov
es
ljmp
sbb
enter
lds
sub
fisubrl
arpl
stos
pop
icebp
in
gs
adc
sbb
mov
leave
mov
push
xchg
repz
jg
ret
test
cmp
add
cmpsl
adc
mov
cmc
push
jg
pop
pop
dec
inc
cmp
push
repz
add
les
insb
sbb
adc
das
push
rorl
cmpsb
sub
jge
sub
mov
and
mov
push
mov
fst
mov
pop
sbb
test
sti
rcrl
xchg
es
or
insb
xchg
aas
daa
pop
fnstsw
xor
mov
ficoml
ret
and
loope
lods
mull
cmp
jno
bound
int3
js
push
and
stos
cld
mov
push
jnp
repnz
sbb
popa
insl
sub
inc
sahf
fistpl
push
pop
jne
popf
jge
adc
xchg
and
or
aas
mov
cmp
fcom
scas
cmc
and
cwtl
pushf
mov
jnp
jnp
into
mov
aad
inc
xchg
pop
push
imul
pop
aad
xchg
popf
sub
repz
and
in
mov
sub
fyl2xp1
test
cmp
pusha
jbe
jns
sti
add
orb
mov
jle
mov
jne
mov
repz
scas
loopne
sub
mov
mov
xor
adc
cwtl
push
sar
sarl
mov
stos
inc
xor
and
fisubl
clc
lock
lcall
pop
push
mov
push
or
jmp
mov
mov
jmp
ljmp
push
mov
andb
cs
pop
mov
aaa
lcall
jno
ljmp
int3
pusha
dec
jns
popa
sti
fdivrs
xchg
push
repz
dec
sbb
jne
jb
jb
cmp
incb
cmp
sub
xchg
sbb
popa
pushf
sbb
mov
fcmovbe
inc
pop
inc
sarb
outsl
call
and
jnp
xchg
xor
add
pop
ja
or
lahf
mov
push
push
loop
jns
ds
mov
movsb
daa
mov
ds
add
movsb
test
stc
adcb
movsl
push
sub
sub
adc
icebp
mov
add
xor
and
and
and
pop
test
test
sub
ds
scas
addr16
scas
pop
and
jp,pt
mov
cmp
mov
sub
mov
movsb
shll
cmp
imulb
sbb
mov
scas
mov
call
mov
xor
cmp
pop
arpl
jmp
int
imull
int
sbb
movsl
ret
loopne
das
inc
add
push
mov
mov
test
mov
push
or
sbb
xchg
enter
fwait
lcall
es
dec
mov
xlat
sub
in
push
std
inc
in
insb
rcr
sub
and
gs
stos
insb
add
nop
cmp
aam
or
in
xor
mov
push
lods
jb
and
add
cld
mov
lahf
ret
push
mov
iret
stos
arpl
mov
jge
loopne
inc
mov
sub
fsubrp
dec
lds
push
add
popa
mov
pop
mov
jp
mov
mov
jbe
into
fmul
pop
mov
data16
jbe
addl
xor
sub
je
adcb
loop
pop
aas
frstor
sbb
pop
mov
outsl
xorb
mov
push
loop
scas
push
mov
add
jge
inc
in
stos
rorl
pop
jno
dec
stos
and
sub
aaa
fdivrp
sbb
stos
adc
mov
mov
aas
pop
shlb
les
mov
pop
mov
andb
sbb
sub
lea
adc
lret
mov
imul
stos
test
jle
std
bound
fcoml
lds
xchg
pop
fidivrl
mov
mov
comiss
xchg
xor
fldt
mov
in
lret
mov
jbe
iret
inc
jno
lret
dec
cmc
pop
cs
pop
lahf
lcall
inc
pmuludq
fmull
mov
in
loope
push
data16
pop
mov
xchg
enter
jp
test
outsl
insb
pop
ja
roll
cmp
xor
mov
loopne
daa
lret
das
test
inc
jb
push
ret
add
sub
addr16
mov
into
mov
cli
aas
int
xchg
scas
sub
xchg
jne
iret
mov
subb
lods
mov
jge
pop
xchg
cmp
jo
pop
aas
mov
out
test
sbbl
or
jb
push
jne
sbb
xorl
aam
dec
lret
inc
xor
divl
lods
lcall
sub
fcomps
cmp
lods
mov
lock
pxor
jge
pop
cwtl
mov
nop
add
iret
push
fmull
dec
inc
inc
sti
icebp
mov
cmpsl
fld
or
xor
aaa
cld
sub
cmpsl
adc
xor
mov
movsl
and
fstpl
stos
lods
adc
enter
mov
mov
lods
es
adc
jl
divb
dec
inc
and
addr16
or
xchg
out
sub
xor
push
dec
push
mov
jb
inc
push
int
fiadds
sbbl
ja
xchg
ret
jae
adc
ficompl
mov
or
inc
cmpsl
or
addr16
mov
dec
fs
jns
aas
lds
enter
stos
enter
jne
fs
cmpsl
in
cmp
or
push
repz
fistpll
push
int
mov
and
mov
add
xor
fsubp
xor
and
test
scas
scas
sbb
sub
xorb
xchg
popa
popa
mov
jnp
mov
aaa
std
xchg
inc
sbb
int3
je
add
cmpsb
fimull
test
dec
insb
xchg
dec
mov
pop
jbe
xchg
adcb
clc
mov
mov
cmp
clc
sbb
sub
adc
push
cmp
dec
cltd
pop
mov
out
fnsave
mov
jne
cmp
and
jbe
push
mov
scas
sahf
mull
mov
push
addl
pop
mov
mov
jmp
or
call
mov
rolb
cwtl
or
mov
ja
mov
mov
cwtl
xor
repnz
cs
fs
arpl
loopne
xchg
inc
out
sti
test
xor
mov
adc
pop
cwtl
pop
and
xor
adc
xchg
lret
jb
xchg
mov
cmp
jb
outsb
test
mov
xchg
pop
xchg
repz
jg
movsb
cmp
xchg
incl
push
dec
jmp
dec
js
int
sub
loop
mov
clc
jbe
push
or
test
cs
leave
add
push
fidivrl
adc
les
mov
cmp
aaa
cmpsb
lds
stos
int
cld
push
mov
dec
cmp
and
cmp
push
dec
sti
pop
xor
fistpl
inc
aad
addr16
shrb
enter
xchg
sbb
sti
xor
inc
cmp
inc
jge
scas
jno
ds
xor
jmp
dec
push
pop
fisttpll
xor
rorb
mov
sbb
cmp
into
stos
jmp
push
lods
fdivr
sbb
pop
pop
les
fldl
push
pop
add
xor
or
aaa
dec
push
inc
mov
push
loopne
stc
jb
cmc
pop
mov
js
inc
jbe
mov
popf
add
jge
ds
cmpsl
mov
cmp
dec
cmpsb
aas
inc
pop
lea
pop
push
inc
out
int
icebp
sbb
adc
xchg
movsl
insb
fdivp
fistpl
out
sbb
ret
leave
and
pop
gs
xor
subl
mov
push
ftst
dec
imul
pop
mov
cmp
cmp
in
jno
into
pop
shrl
mov
stos
shrb
mov
fiadds
xchg
jle
jmp
sub
inc
cmp
lcall
pop
stos
and
cmp
addr16
ficoml
inc
sub
inc
xor
or
xor
jne
jecxz
mov
sub
inc
xchg
cmc
sbb
sbb
pusha
cmp
lahf
icebp
into
jb
xchg
mov
sti
add
add
fld
push
cmpsl
pop
and
icebp
aad
ss
imul
bound
pop
push
cltd
scas
ret
or
or
and
rcll
xor
lret
gs
ss
xchg
jb
lcall
sbb
jmp
add
cmpl
insb
and
push
jnp
xchg
movsb
iret
jg
dec
out
jno
sti
xor
adc
clc
popf
mov
push
adc
idivb
xor
mov
in
ja
xchg
mov
mov
aaa
shll
mov
adc
movsb
add
or
je
fwait
divb
fucom
repz
add
ljmp
addr16
cmp
rcrl
xchg
jecxz
pop
test
ficoms
inc
fldcw
push
les
sbb
inc
inc
popa
scas
std
cmp
cmpsb
mov
dec
movsb
repz
jne
xchg
insl
cmp
jnp
mov
dec
repnz
jno
popa
and
add
pop
lcall
pop
fidivl
or
icebp
jp
ds
push
jg
jle
fidivrl
sub
sbb
mov
loope
cmp
lock
js
sub
loop,pt
fxch
xor
push
stos
insb
in
fwait
xchg
fisubrl
rcrl
jb
pop
and
xchg
xor
mov
xchg
mov
mov
mov
inc
mov
xor
mov
insb
xor
lods
mov
fs
push
push
pop
rol
and
out
cmc
cli
decb
add
push
mov
cs
sub
push
outsb
sbb
ficoml
sbb
and
push
xchg
push
jno
inc
loope
mov
dec
or
scas
imul
and
insb
mov
xor
aas
push
jp
jo
cs
mov
jno
mov
cmpsb
push
sti
cli
xchg
mov
addb
adc
cmc
lock
nop
xchg
and
sub
pushf
hlt
cmpsl
xchg
jmp
cld
adcl
testl
psubd
mov
adc
push
test
ljmp
jecxz
imul
stos
xor
test
cmp
out
mov
pop
nop
add
movsb
mov
add
jb
nop
loop
outsb
mov
movsb
add
or
es
or
and
aaa
push
stc
ljmp
mov
or
stos
or
lds
pop
test
inc
sub
aas
pop
rcrl
cmp
mov
mov
nop
dec
xor
jp
stc
lret
and
fldenv
incb
lret
stc
mov
mov
subb
icebp
mov
sbbb
xor
sbb
ss
dec
dec
insl
xchg
mov
adc
movsl
xchg
cmp
notl
dec
mov
sbb
lret
add
or
jno
insb
cmp
scas
dec
inc
inc
gs
adcl
pop
stc
jno
lock
cli
add
sarl
lret
inc
mov
pop
jnp
lds
rcr
pop
push
test
rcrl
frstor
sahf
in
or
sub
popa
dec
test
jo
subl
jo
sub
add
jl
sub
movsl
nop
lcall
lret
das
jmp
and
mov
pop
adc
iret
aad
aas
into
leave
inc
adc
jno
mov
into
cmp
jl
add
fnstsw
dec
and
and
stc
insl
ret
xor
sub
or
sub
jno
lods
popa
mov
dec
xor
inc
adc
xor
cmpsl
inc
cld
jno
cmp
jno
pop
adcl
scas
inc
sar
aam
sar
push
cmp
mov
stc
fwait
cmp
jne
sarb
sbb
mov
mov
out
jp
pop
aaa
pop
inc
add
data16
push
lahf
pop
dec
inc
outsb
mov
cmc
xor
insb
adc
ret
and
cltd
inc
jg
loop
rorb
fimuls
sub
mov
cmp
seto
hlt
icebp
movsw
gs
out
adc
adc
mov
jno
lods
cmp
lea
mov
adc
jno
xchg
mov
je
lret
or
push
xor
sbb
test
mov
mov
pusha
fs
add
adc
xlat
adc
xor
add
scas
and
enter
push
sub
shlb
aad
daa
adc
ficomps
mov
test
and
add
inc
insb
mov
andl
push
pop
enter
and
sub
in
cltd
scas
cld
icebp
xor
cmp
stos
sbb
sub
jno
jge
push
xor
jle
add
out
add
mov
lahf
arpl
enter
std
add
aaa
std
cmpsl
aam
lock
sti
stc
dec
cmpsl
mov
pop
push
fcomi
and
push
lcall
cmp
test
push
jbe
addb
and
inc
push
rorl
and
ljmp
fstpl
mov
popa
aam
and
pop
xchg
cmp
sub
jg
xor
cld
mov
sti
mov
sub
fiaddl
push
dec
jmp
xchg
sbb
outsb
or
cmp
sub
mov
loope
ljmp
daa
out
mov
sahf
fisubl
mov
lahf
adc
jns
inc
and
movsl
daa
jg
jb
fwait
jo
rcl
stc
dec
sar
push
jno
lods
clc
jb
outsl
in
mov
mov
data16
inc
and
mov
dec
aad
xor
rcr
mov
mov
cwtl
xchg
mov
int3
xchg
movhps
cmpsl
aad
add
clc
ret
test
xlat
pusha
cltd
inc
out
mov
ja
xor
loopne
pop
repnz
cwtl
cmp
in
dec
into
jns
jle
cwtl
das
cmpsl
ss
mov
or
enter
outsl
test
cs
mov
in
imulb
mov
xchg
les
mov
das
adc
int3
dec
aam
ljmp
loopne
in
mov
fimuls
cwtl
jne
xor
lds
mov
test
xchg
sub
testb
test
push
xor
inc
mov
or
push
mov
rcr
popf
outsb
sti
xor
xor
push
sub
xor
cmc
data16
lods
fists
stos
daa
popf
inc
inc
div
test
cmp
and
cld
mov
cmpsb
mov
outsl
testb
add
ret
popa
pop
mov
ficoml
sub
aad
sahf
adc
mov
mov
cmpsl
or
imull
lods
inc
and
sub
pop
arpl
int3
mov
in
or
mov
cmp
jg
sub
push
add
mov
icebp
aaa
cli
sub
xchg
je
or
mov
nop
mov
and
dec
rolb
xor
test
mov
mov
or
mov
imul
fbld
add
inc
xchg
jp
popa
ret
aas
xchg
xchg
adc
and
mov
dec
add
or
lret
iret
push
mov
jno
mov
sub
jbe
pop
data16
adc
scas
pop
pop
fstp
ds
shl
sbb
movsl
sbb
mov
cld
dec
cwtl
fisubs
frstor
and
or
push
and
mov
call
jns
pop
and
in
cwtl
dec
int
dec
add
mov
mov
mov
jmp
mov
cmp
xlat
add
inc
xchg
hlt
test
jecxz
lahf
scas
xor
push
mov
repnz
in
add
idivl
scas
jecxz
cs
enter
mov
or
dec
jnp
fwait
cmpsb
sub
sarl
sub
sub
xchg
jbe
cmp
mov
mov
adc
test
insb
inc
adc
pop
adc
mov
mov
pusha
icebp
daa
lds
sarb
scas
mov
in
lods
jg
push
daa
in
lods
ret
cld
pop
mov
fwait
mov
loop
cmp
cltd
and
out
sahf
and
push
shlb
pop
rol
pop
inc
or
fdivl
inc
std
push
ret
lret
xchg
adc
xor
stos
add
jle
test
pop
ja
sub
mov
and
pop
scas
in
pop
mov
mov
xchg
jp
pop
sbb
inc
sbb
xchg
mov
in
ds
fdivs
imul
mov
outsl
mov
inc
jle
mov
dec
int
add
iret
inc
add
decb
mov
mov
and
ja
cltd
push
dec
mov
mov
mul
add
clc
mov
ficompl
out
mov
out
jg
pop
inc
xchg
push
inc
out
sbb
push
ret
in
aad
or
mov
popa
mov
push
add
cwtl
mov
orl
mov
scas
clc
ret
loop
adc
bound
sub
mov
std
add
jge
adc
jmp
inc
sarl
mov
mov
xchg
sub
and
rolb
test
xchg
xor
xchg
and
inc
adc
sbb
cmpsl
mov
jb
cmc
sub
aam
out
sbb
out
sub
adc
cmp
lea
stc
aam
icebp
in
jecxz
ror
movsl
imul
or
out
sub
push
add
outsl
fsub
dec
mov
popa
testl
shrb
add
mov
mov
or
mov
pop
lds
stos
push
fsubl
pop
fadd
jo
push
ljmp
cmpsl
test
psrld
dec
and
in
jnp
test
dec
dec
hlt
xor
fnstcw
out
lcall
sub
andl
dec
adc
mov
jmp
je
sbb
sbb
jle
pop
mov
fisubs
xchg
fnstenv
test
movsl
dec
bndldx
push
lcall
sbb
sti
lret
and
aad
dec
mov
test
cmp
sbb
loopne
hlt
sbb
fdivrs
sbb
xor
loopne
es
sub
pushf
mov
and
cmpb
mov
mov
inc
inc
movsb
fistps
pushf
inc
mov
xchg
push
stos
inc
jne
pop
lds
sarb
dec
ja
cmp
fwait
gs
and
sbb
out
in
add
jbe
pop
ret
dec
mov
enter
jb
mov
pushf
inc
push
cmp
xchg
fadd
xchg
jg
push
push
or
cmp
cli
std
fs
cmp
imul
arpl
std
add
aaa
lcall
test
fs
popa
and
repz
lods
adc
xchg
inc
fisttps
fucomip
out
ss
cld
aas
push
mov
inc
pop
push
stos
ljmp
gs
cmp
ja
lea
lret
add
sbbl
jg
jo
pop
push
pusha
mov
mov
pop
sbb
xchg
xor
or
loope
test
inc
mov
dec
loope
mov
pop
fwait
ds
fistps
jge
add
shl
fildll
jl
insl
and
fsts
mov
fildll
enter
add
mov
sti
hlt
and
sub
mov
mov
dec
dec
cltd
fisubrs
in
and
lret
xchg
out
jmp
adc
xchg
jle
jo
outsb
or
fistpll
jecxz
add
bound
icebp
jb
or
aas
cmp
int
loope
fs
icebp
inc
fstps
push
fisubl
jo
js
cmp
outsb
fdivrs
inc
pop
adc
repnz
leave
and
push
dec
call
xchg
rclb
jno
fcmovu
outsb
dec
fmulp
xlat
lea
mov
xor
in
stos
and
cmp
xlat
iret
scas
xor
aad
loopne
lds
or
pop
sub
cli
shll
shrl
pop
xchg
sub
adc
adc
jns
insl
inc
or
adc
xchg
shrl
pop
sbb
dec
ds
fwait
dec
andb
mov
out
aaa
xor
sahf
lret
dec
addr16
pop
fnstenv
movsb
dec
jg
xor
in
outsl
sahf
or
stc
rclb
je
jecxz
outsb
mov
jae
ljmp
mov
and
sub
lahf
lcall
jo
aaa
out
sub
mov
or
mov
loop
clc
mov
mov
ds
enter
sahf
cmp
aaa
inc
mov
sbb
mov
dec
or
and
add
mov
xor
inc
ss
jp
lds
std
addl
insl
loopne
icebp
gs
xor
mull
jle
lcall
adc
lcall
mov
pop
rolb
inc
rcll
out
jp
mov
jg
cwtl
jmp
dec
fdivrs
sub
mov
fsubrs
cld
mov
repz
leave
addr16
fiadds
cwtl
pusha
das
mov
daa
xlat
mov
or
lods
das
in
xor
out
mov
push
js
sub
sbb
dec
sbbb
xor
int
inc
sbb
cmp
lahf
add
or
ss
pop
mov
pop
mov
mov
test
mov
mov
out
push
inc
stos
jne
jmp
mov
or
mov
add
adc
add
sub
mov
dec
xor
inc
ds
mov
push
cmp
jb
leave
cld
les
and
test
xchg
fsub
inc
push
jge
mov
adc
data16
test
lods
dec
lret
out
mov
and
add
lahf
xor
sbb
pop
das
push
or
repz
mov
data16
or
sbb
shr
test
aad
adc
hlt
add
out
mov
icebp
dec
ja
je
fistpll
sbb
outsb
js
mov
mov
mov
pop
clc
insl
testb
inc
cwtl
sbb
dec
xchg
out
push
or
jbe
xchg
or
push
fnstsw
inc
adc
in
aad
xor
mov
sub
and
cmp
leave
mul
sbb
fsub
cmc
add
adc
sbb
dec
cmp
sarb
cmpl
hlt
test
pop
cmp
and
cwtl
xchg
hlt
mov
lea
scas
int3
cmp
rol
lret
rol
idivb
mov
sbb
lea
mov
sub
jae
adc
xor
mov
xchg
pop
fs
stc
lret
mov
xchg
jb
imul
sbb
iret
sub
and
gs
cld
inc
js
lds
cwtl
mov
add
aaa
fprem1
das
mov
cs
pop
inc
aam
cli
pop
pushf
mov
lods
lret
hlt
mov
lods
lea
adc
xchg
cmp
movsb
adc
lds
push
pop
xor
stos
aad
inc
cld
imul
aas
or
mov
inc
pop
xor
push
insb
jns
lods
mov
inc
loope
inc
xor
cmc
push
es
imul
jns
lods
mov
or
pop
sbb
pop
out
or
into
pop
inc
push
hlt
fcmovb
mov
adc
or
mov
cmp
sub
jge
sub
cmp
mov
les
addb
inc
gs
cwtl
jo
jecxz
inc
cmpsb
adc
cld
imul
pop
mov
mov
and
subb
sbb
cli
jae
fadd
mov
ss
cld
jno
cmp
push
iret
jle
inc
xchg
add
aam
xchg
movsb
in
and
mov
out
lds
add
leave
test
sub
sbb
inc
pop
push
mov
inc
shll
or
lret
ret
cld
inc
sbb
add
je
inc
hlt
nop
xor
sub
cwtl
and
pop
push
iret
jnp
mov
loope
rorb
loop
rolb
mov
mov
cwtl
rclb
jbe
mov
push
lcall
dec
inc
jo
adc
les
incl
sti
aas
push
mov
jg
imul
pop
add
lcall
test
xor
dec
movsb
fnsave
jle
call
sbbl
daa
mov
jl
in
add
jg
mov
lret
jecxz
sbb
pop
mov
xchg
insb
pop
in
add
inc
in
ja
adc
lea
jb
sub
ljmp
dec
cmp
pop
inc
or
and
movsl
ss
pop
mov
mov
fcmovbe
jecxz
mov
sar
inc
fs
imul
shrb
push
push
loopne
repz
cld
nop
insb
jno
in
push
out
stos
jbe
add
push
arpl
dec
mov
xor
psllw
and
xor
or
imul
pop
lods
adc
jnp
sbb
stos
clc
shlb
ljmp
xlat
ret
lret
push
shlb
std
gs
inc
in
sbb
mov
adc
cmpl
mov
aad
adc
push
cmp
lea
jae
sub
fmuls
and
mov
jl
negl
mov
mov
and
je
pop
stos
scas
arpl
jo
outsl
jno
lcall
pusha
mov
mov
cmp
mov
clc
out
icebp
iret
nop
inc
cltd
test
mov
dec
jnp
cltd
mov
mov
outsb
pop
mov
pop
mov
int3
cmp
mov
mov
mov
bound
adc
scas
lahf
push
fidivs
and
push
pop
inc
rcr
test
push
out
loop
sub
and
insl
push
xchg
sbb
push
fistpll
pop
jnp
int3
mov
jns
inc
inc
jg
sahf
inc
dec
sub
fildl
test
adc
xorl
fnstenv
add
test
mov
push
mov
and
push
cmp
sbb
jge
cmp
or
xchg
xor
fdivrl
dec
cmp
in
mov
shr
sub
jl
sahf
adc
rcrl
aam
enter
popf
inc
les
loopne
sbb
shl
ds
movsl
and
cmp
mov
xchg
scas
fstp
pop
mov
adcb
stc
inc
in
les
decb
lcall
inc
es
sub
mov
imul
cmpsb
div
mov
notb
js
mov
arpl
mov
cmovae
neg
aam
in
fnsave
imul
push
ds
xor
shrl
add
cmp
jo
push
popf
cmpb
pop
inc
mov
mov
jns
dec
aas
xchg
add
ss
popa
pop
dec
add
mov
insl
jge
dec
and
movsb
ljmp
pop
or
rorl
mov
adc
and
loop
push
adc
cmc
arpl
popf
dec
sub
sbb
or
mov
xchg
rcll
adc
popa
sbb
inc
fcompl
sbb
pop
lds
mov
mov
inc
out
mov
icebp
pop
push
xlat
mov
xor
xchg
xor
and
cmp
add
jns
jne
in
and
or
movb
fsubrs
scas
mov
ds
xor
lock
mov
ret
loope
clc
pop
ret
aad
js
inc
sbb
inc
icebp
mov
adc
nopl
xchg
jp
mov
xlat
fdivl
test
aad
stc
or
xor
mov
fwait
in
xorb
pop
and
sbb
or
jns
cld
out
mov
xor
out
jbe
iret
cmpsl
aad
jmp
xor
rol
ror
or
xor
xchg
xor
lcall
adcl
mov
xchg
mov
sarl
ljmp
pextrw
shlb
ret
ds
ret
popf
ljmp
gs
stos
adc
rclb
jg
jmp
aaa
pop
cli
movsl
inc
add
add
pushf
xchg
mov
mov
std
jne
insb
inc
nop
insb
sub
pushl
data16
mov
mov
imul
and
inc
push
les
stos
jp
cmp
adcl
adc
sub
cmp
mov
dec
push
jl
leave
les
rorb
lcall
jae
jno
data16
adc
outsl
movsb
pop
or
es
test
aaa
xchg
add
mov
adcb
dec
push
inc
pop
sbb
and
inc
add
dec
test
imul
sbb
sub
sbb
fwait
mov
mov
ds
and
imul
bnd
adc
adc
or
lret
pop
aaa
imul
js
shlb
push
jecxz
inc
cmc
pop
cmp
push
pop
cmp
sub
lret
mov
push
or
sahf
cmp
mov
mov
icebp
jle
lods
add
loopne
lret
stc
mov
jns
mov
popf
mov
ffree
rclb
cmc
inc
pushf
scas
pop
sbb
cs
rolb
aam
mov
dec
mov
mov
push
cs
adc
dec
mov
mov
add
ficoms
dec
jg
adc
fisubrs
mov
outsb
jp
xchg
add
or
mov
in
ss
in
nop
repnz
inc
in
jecxz
inc
nop
jl
outsl
jnp
es
mov
fistpl
jns
mov
xchg
cmpb
jns
pop
inc
xor
and
or
sbb
adcl
and
or
cmp
popa
adc
and
sbb
ja
adc
add
into
lea
inc
and
mov
jp
xor
out
lds
inc
repz
dec
mov
adc
jl
loopne
push
pushf
mov
shlb
mov
lret
sbb
rcrb
xchg
and
lcall
jns
fisubrs
outsb
pop
pop
cmp
jo
jo
ficomps
loope
jns
cmp
xchg
loop
rorb
movsl
stc
xchg
fstpt
imul
xchg
and
int3
mov
mov
and
dec
insl
mov
and
xchg
and
mov
out
mov
in
jbe
out
frstor
or
pushf
sarl
popa
pop
repz
sub
mov
sarl
jp
test
or
push
ja,pn
mov
sbb
sbb
insb
stc
mov
clc
push
std
cmpb
cmp
std
sbbb
xchg
lock
ss
cltd
es
ljmp
stos
pusha
dec
push
mov
pop
into
ret
pushf
lret
sub
jmp
push
dec
sbb
test
arpl
push
incl
in
mov
mov
mov
popf
ljmp
mov
adc
pop
mov
xor
rcrl
xlat
loop
inc
mov
aaa
pop
xchg
jo
fidivs
loopne
scas
jae
jno
or
ficomps
inc
popf
adc
ds
mov
sahf
je
jb
sub
add
mov
loop
inc
dec
popa
jo
mov
jg
mov
jnp
cmp
int
insl
pusha
test
sbb
neg
aad
in
mov
cmpsl
nop
cmp
cmp
jle
lret
scas
mov
ss
xchg
sub
outsl
sub
subb
fdivs
popf
mov
arpl
push
test
and
vpaddusw
in
jp
cmp
push
xchg
jne
inc
ds
jg
xchg
or
bound
xor
and
aaa
and
outsb
add
and
or
imul
push
mov
bound
xchg
sbbb
cmp
jnp
dec
insb
jle
sub
xchg
idivb
sbb
jbe
jo
push
cmpsb
fsubrs
mov
scas
lea
bound
insb
pop
sbb
jns
hlt
shrb
cmc
adc
outsl
or
inc
mov
ffreep
dec
test
sbb
adc
mov
cmp
push
adc
outsb
ljmp
les
jecxz
imul
cmc
rorb
xor
lret
fildll
xchg
insl
jb
add
mov
cmpsl
jmp
and
jns
in
ja
mov
inc
dec
inc
lret
vpcomw
out
shlb
repnz
jb
push
ret
fmulp
pop
mov
arpl
mov
jl
push
mov
movsl
mov
pop
push
push
mov
jne
cwtl
jbe
dec
cmpsb
roll
daa
jo
enter
dec
sar
sub
inc
pop
mov
sbb
sahf
and
sti
not
dec
out
fs
mov
sub
jmp
cmc
adc
or
das
in
dec
xchg
int
pop
into
adcl
orl
insl
test
iret
sub
les
sbb
xchg
sbb
mov
jl
lds
sub
sub
pop
iret
fbstp
movsb
ss
pop
add
sub
cwtl
inc
test
or
repnz
mov
inc
gs
add
push
rcl
push
ljmp
lods
adc
fldt
outsb
popa
pop
jno
clc
hlt
sub
pop
jge
call
push
xor
inc
xor
fsubrl
jns
outsb
mov
or
je
lahf
cmp
idivl
inc
inc
sbb
outsl
mov
fstpl
add
hlt
outsl
fadds
mov
popf
je
arpl
loope
add
mov
mov
enter
pop
fucom
sub
cs
push
xchg
inc
jns
mov
dec
cltd
xchg
xchg
andl
cltd
flds
shll
ss
mov
sub
or
inc
mov
sub
push
mov
or
dec
test
repnz
mov
and
nop
rcrl
sti
mov
push
mov
cld
aad
hlt
fdivrl
mov
jmp
ficoml
lds
repnz
sub
sbb
aam
push
adc
sbb
lahf
out
pop
iret
dec
jmp
nop
pop
outsb
xorb
push
insl
in
bound
insb
add
dec
or
lds
sbb
es
roll
pusha
hlt
addr16
inc
cmp
in
add
ja
push
sub
scas
xchg
mov
push
xchg
pop
outsl
movsb
jo
mov
pop
and
subl
adc
cltd
incl
and
sub
dec
push
andb
lea
xchg
push
daa
bound
cmpsb
shrl
hlt
or
fwait
xor
lods
cmpsb
popa
mov
sbb
mov
sahf
dec
jo
xchg
jl
sub
fst
das
adc
mov
imul
pop
les
push
mov
inc
insl
scas
cmp
mov
jmp
inc
test
cmp
cs
call
pop
lock
or
dec
pop
push
mov
pop
sub
push
inc
fs
jmp
enter
mov
rclb
push
jns
jno
xchg
xor
push
jne
scas
jmp
jo
jno
outsb
mov
std
cli
rcrl
jg
adcl
ret
ret
dec
cltd
cltd
sub
pop
or
adc
into
push
sub
loope
out
push
sbb
mov
sub
sbb
fdivs
dec
sahf
inc
mov
cmp
bnd
xor
sub
jp
sub
int
in
or
out
icebp
pop
stos
std
ds
push
push
lods
test
push
sub
mov
arpl
or
cmpsl
inc
jecxz
add
sbbl
add
mov
inc
pop
dec
xchg
nop
movsl
and
aam
inc
fists
loopne
lods
xchg
data16
daa
dec
lahf
int
and
lods
cmp
sbb
shll
lock
into
xor
xor
jle
das
dec
movaps
inc
out
jmp
inc
ljmp
xor
xor
add
inc
int3
and
xchg
rep
sub
pusha
push
or
es
filds
push
sbb
in
ja
jp
cmp
cli
je
pop
add
jbe
aad
es
jg
cmp
pop
movsb
mov
std
imul
int
addr16
in
sub
mov
test
inc
test
mov
push
in
mov
inc
xor
cmp
xchg
xchg
push
test
insb
adc
dec
fcoms
mov
scas
out
fwait
and
mov
xor
xchg
push
scas
bound
push
mov
shll
xor
lds
adc
movb
es
xor
pop
stos
popa
mov
or
mov
mov
iret
add
sbb
push
mov
mov
add
flds
xchg
es
xor
movsl
insb
add
pcmpgtb
test
xchg
mov
movzwl
lret
jno
inc
mov
dec
cltd
adc
jnp
add
std
enter
xor
and
pop
int
xor
jnp
and
insb
dec
push
stc
adc
sbb
dec
dec
and
repnz
out
jge
cltd
jle
aaa
outsb
jmp
stc
clc
gs
dec
sub
out
sti
jp
sahf
adc
jno
lds
imul
mov
mov
pop
jp
pop
es
push
pop
es
test
push
mov
into
fwait
loope
mov
ja
shr
cwtl
pop
notb
push
lcall
sbb
dec
adc
xor
pop
cmpb
and
stos
sbb
mov
dec
push
bnd
lcall
ss
inc
xchg
push
xchg
cmp
mulb
dec
and
subl
stos
push
iret
mov
and
jne
sub
inc
sub
mov
sub
decl
and
push
inc
insb
xchg
ret
pop
sub
rol
sbb
int
cmp
mov
cmp
adc
dec
aad
xchg
out
test
cmpsb
lods
lods
iret
adc
jecxz
outsl
push
cltd
ljmp
out
mov
dec
out
push
ds
push
and
dec
sub
cmpsb
adc
dec
cmpsb
jmp
ret
add
out
jg
popf
out
mov
add
mov
ficomps
outsb
test
es
ds
rcrl
mov
xchg
dec
test
cwtl
xchg
jne
sub
push
pop
movsl
shrl
rcl
mov
or
xor
andb
sub
ror
jns
es
cld
fnstsw
cmp
sub
xchg
xlat
in
popf
sbb
push
imul
lret
fcomip
icebp
pop
mov
inc
mov
aad
into
mov
sbb
ss
or
stos
inc
pop
loopne
mov
scas
pop
push
sbb
dec
xchg
xchg
xchg
fidivl
mov
jno
addr16
lock
push
cmc
mov
cmpsb
dec
jmp
sbb
cmp
push
dec
sub
ja
subss
cmp
mov
cltd
or
cmp
cmp
out
xor
imul
cmp
cld
aam
mov
sbb
or
adc
sub
push
xor
cmp
lahf
testb
aad
mov
out
popa
cmp
pop
stos
pop
cwtl
xor
inc
push
js
movsb
shll
xlat
cmc
test
mov
dec
xlat
mov
sar
fadd
roll
cmp
push
adc
call
sahf
lea
cmp
adc
add
or
push
dec
push
mov
jmp
push
sbb
jg
aas
fdivl
add
sub
jmp
subb
pop
or
pop
bound
xor
out
pop
xor
dec
in
or
add
fs
js
cmp
sub
jecxz
cld
test
fsubrl
imul
into
icebp
mov
in
cmp
jecxz
scas
ret
call
stc
and
popf
and
inc
sarl
addr16
inc
xor
cmp
sub
cmp
mov
jne
sbb
push
xor
in
sbb
mov
imul
sbb
push
je
ljmp
push
daa
mov
pop
adc
jne
or
mov
xor
push
stos
or
inc
or
mov
stos
jecxz
not
jns
loope
fs
in
out
xchg
gs
inc
adc
mov
inc
mov
adcb
push
and
loope
or
adc
test
test
jle
and
adc
enter
jg
mov
or
insl
push
mov
imul
ret
xchg
aam
mov
lods
aas
adc
pop
and
sub
cwtl
outsl
jns
push
mov
jb
pop
jmp
adc
shll
call
push
mov
xor
aaa
adc
dec
xorb
ret
jecxz
dec
push
mov
pop
lret
mov
notl
adc
stos
loop
stc
ss
cmp
xchg
mov
sub
and
inc
repnz
call
in
bound
lea
mov
or
pushf
sbb
push
outsb
in
pushf
fstpl
je
cmp
adc
stc
clc
popf
mov
sbb
sbb
dec
inc
and
sbb
jnp
test
out
lcall
xlat
xchg
aad
cmp
ja
or
xchg
fistpl
sub
jo
xor
and
mov
test
adc
test
loope
xchg
push
insl
push
fsubs
lock
outsb
stc
or
scas
cld
mov
arpl
nop
jns
push
sbb
test
movsb
sbb
popa
cmpsb
pushf
rorl
add
adc
mov
sub
repz
bound
sahf
lods
les
test
insb
mov
adc
xor
and
mov
shrb
jecxz
jns
inc
cmpsl
jae
test
mov
rcll
sbb
test
popf
mov
lcall
or
pop
fs
adc
out
cmp
ljmp
outsl
mov
insl
add
ret
mov
mov
insb
mov
mov
add
je
cmp
out
pop
fwait
xor
inc
cmp
movsb
jne
subl
jle
ljmp
imul
push
ret
push
mov
scas
call
ss
pop
jns
icebp
dec
loop
xor
xor
pusha
push
xchg
inc
fcoml
mov
add
ds
stos
es
xchg
and
test
in
or
pop
xor
rorb
xchg
out
out
push
loope
xor
lea
pop
dec
xchg
es
mov
pushf
hlt
xchg
xor
pop
dec
or
jnp
jl
outsl
sub
and
sub
test
mov
push
fwait
mov
das
lret
fyl2x
mov
mov
and
push
repnz
mov
movsb
jg
call
pop
mov
jmp
push
jl
lods
push
add
and
sub
lods
jle
mov
fsubrs
pusha
dec
ret
cld
shll
jae
ret
or
push
lret
adc
jb
inc
int
dec
imul
and
xchg
sbb
mov
test
movb
fnsave
inc
mov
lea
stos
and
sahf
ja
dec
xor
mov
ss
dec
inc
sbb
ja
jg
daa
test
test
xchg
add
cmpsl
aas
sub
ja
pop
imulb
jno
inc
daa
outsb
jecxz
lret
push
lock
in
push
lret
inc
scas
imul
sbb
imul
mov
sarl
sahf
cmpsb
fnstcw
jns
cmc
pop
pop
negl
add
jecxz
lret
mov
jle
and
and
leave
fwait
nop
es
add
movsb
stos
pop
jge
pop
add
pop
jno
loopne
cmp
iret
adc
dec
jne
or
xchg
lds
and
js
ss
cmc
xchg
jae
pop
fiadds
inc
xchg
cmc
jae
jne
push
les
frstor
aaa
clc
dec
dec
adc
aas
aaa
pop
imul
int3
rol
enter
mov
xchg
mov
pop
mov
adc
add
inc
dec
mov
push
xchg
or
inc
mov
dec
imul
fistl
dec
and
and
cmp
popf
pop
loope
push
sbb
daa
mov
cli
mov
xlat
inc
xor
dec
push
add
inc
in
out
fnstcw
inc
in
daa
sbb
test
pop
psraw
lock
clc
mov
lods
sub
mov
add
lret
mov
mov
scas
sbb
mov
cmp
jne
aas
repz
xor
ret
or
inc
lds
sub
negb
clc
sbb
faddl
and
rcl
fs
add
sub
sub
lea
mov
iret
movsb
outsb
sarb
pop
out
fwait
sbb
and
stos
lret
fcompl
mov
mov
or
mov
jne
fs
mov
leave
jnp
cmp
leave
faddl
cwtl
inc
cmpsl
mov
lock
in
inc
lcall
fcoml
and
and
sub
push
jnp
in
enter
les
incl
lock
xor
push
or
mov
les
jecxz
fadds
and
push
int
cmpsb
cmpsb
dec
fists
out
into
stc
repz
mov
or
lcall
push
stc
cmp
and
daa
and
xor
mov
enter
fldt
mov
fdivl
mov
imul
ss
pop
xor
imul
sub
adc
fisubs
out
rclw
roll
js,pn
pop
cmpsb
mov
popa
sub
repnz
imul
lret
mov
enter
mov
cmpsb
icebp
adcb
mov
test
fsubrs
lods
jmp
add
mov
fcompl
sti
add
std
fdivrl
and
pop
les
and
or
pop
addb
into
push
mov
cmp
je
push
pushf
push
int
pop
xor
loop
push
xor
mov
shl
lods
adc
ret
imul
clc
inc
push
sub
push
fsubl
adc
out
sahf
mov
mov
or
xchg
mov
insb
cmc
cmpsb
jo
cmc
sbb
or
cld
leave
jne
sub
ja
hlt
and
sti
jne
mov
lods
jecxz
mov
push
test
lret
std
dec
ret
push
and
sbb
push
sub
fcompl
jns
mov
cmpsl
cmp
add
aad
mov
adc
xor
clc
push
dec
std
xor
hlt
mov
das
sub
cmp
js
ret
dec
jecxz
pop
lods
push
mov
mov
lock
in
cmc
mov
fstl
adc
dec
sbb
xchg
in
pop
dec
stos
and
shr
aam
inc
out
enter
jb
xchg
sbb
inc
ds
cmp
pop
and
dec
cmp
mov
paddusw
sbb
sbb
xchg
popw
scas
rolb
mov
pop
leave
sahf
stc
xlat
mov
mov
fcoms
xchg
jae
xor
fisttpll
sub
pop
inc
std
std
in
cmpsb
push
push
and
adc
push
xor
dec
clc
sbb
push
add
jb
adc
xor
stc
imulb
sbb
xchg
adc
aaa
mov
cmpsl
mov
pop
icebp
fsubrs
scas
aaa
dec
enter
pushf
and
push
imul
iret
popf
and
mov
dec
mov
ljmp
inc
push
sub
daa
mov
or
repz
sbbl
insb
ljmp
popa
xchg
pushf
cmc
movsl
test
ja
lods
dec
mov
xchg
sbb
lds
movsl
lods
sub
dec
aas
lods
cmc
xchg
push
lods
mov
and
adc
les
jno
cltd
cmpsb
lea
xchg
fwait
push
sub
xor
repz
and
call
add
jmp
rcll
js
adc
push
les
fwait
pop
mov
mul
jg
insb
idivl
in
scas
xchg
cmp
mov
jns
pop
orl
adc
cmpsb
mov
cmpsl
jae
add
mov
push
add
sub
push
leave
xchg
popa
divb
push
icebp
div
sub
loopne
scas
jecxz
enter
dec
lahf
test
inc
pop
add
push
out
xor
or
and
inc
inc
call
push
cwtl
xchg
sub
xor
jo
cmpb
jp
jnp
jb
jg
jp
xchg
pop
xor
xchg
inc
lahf
insb
nop
push
enter
fsubrl
pop
jecxz
jp
jbe
push
pop
pop
lcall
push
or
add
mov
outsb
in
push
pusha
inc
outsl
call
inc
or
and
pop
rorb
push
fdivrs
xor
cmp
and
dec
dec
sbb
mov
or
jecxz
pop
out
sbb
movsb
int3
jnp
xchg
xor
sarb
loope
or
or
and
adc
in
and
data16
push
cld
sub
ja
cld
jecxz
cmp
adc
rclb
add
pop
cltd
cwtl
xchg
lock
adc
jns
cmp
adc
jb
in
xchg
addr16
outsl
aad
sbb
ljmp
fs
push
int
movsb
adc
push
add
adc
cs
pop
stc
pop
cli
popf
pop
mov
inc
addb
mov
shrl
mov
loope
outsb
mov
call
pop
and
push
adc
cmp
add
lods
push
ret
jle
lock
pusha
in
sub
adc
adc
jo
lahf
lahf
xorb
mov
adcb
lea
adc
insl
or
roll
lock
cltd
and
in
mov
xor
loopne
rep
mov
push
cmp
sub
orb
mov
xchg
lods
xchg
outsb
push
rcrb
mov
jns
add
xchg
les
or
pusha
add
push
cwtl
les
pushf
and
pushf
loopne
cmpsb
mov
push
arpl
addr16
out
outsb
push
dec
pop
jb
adc
inc
jp
pop
iret
loop
xchg
dec
inc
mov
mov
jne
cwtl
xchg
push
lret
jno
jnp
shlb
jo
lahf
sub
and
mov
mov
adc
int3
cwtl
gs
xchg
pop
push
adc
jl
or
sbb
and
test
in
sbb
add
je
cld
clc
dec
or
test
jmp
scas
add
aaa
aam
jecxz
push
sub
xor
nop
jge
inc
divl
iret
int
shrl
xor
and
gs
fmuls
test
cmp
bound
in
cmc
inc
fnstsw
dec
iret
sti
push
lcall
cmp
mov
mov
or
and
cmp
into
dec
mov
lret
fcomip
jns
lret
sbb
add
jo
jo
es
xor
lcall
testl
xchg
loop
test
es
lods
inc
mov
stos
add
movsb
outsb
adc
pop
nop
ja
sub
mov
out
mov
cwtl
mov
insb
out
cs
es
pop
mov
pop
and
pop
out
sub
loope
pop
mov
sub
mov
pop
jo
cmp
add
lods
mov
ret
fldl
sub
bound
adc
pop
ja
lods
outsl
and
push
mov
lahf
jno,pn
rorb
xor
mov
xlat
push
outsl
mov
xor
dec
mov
stc
insl
mov
loope
shll
fstl
lret
pop
xor
js
insl
jb
mov
jmp
jg
dec
inc
xlat
gs
icebp
jge
lea
pop
je
or
test
mov
add
mov
mov
in
daa
inc
mov
icebp
fisubl
data16
jge
jno
push
lahf
sub
xchg
lea
loopne
pop
loope
daa
sbb
lea
enter
sub
scas
push
cwtl
mov
int3
out
icebp
call
and
divl
sub
adc
mov
lcall
mov
test
xchg
fdivrl
and
iret
aam
repnz
lcall
xor
dec
pop
push
adc
mov
fsubrl
lahf
dec
in
test
fwait
inc
or
shl
sub
sub
enter
mov
inc
aas
ret
jg
push
dec
mov
out
ret
mov
inc
xchg
lahf
shrb
shll
aad
mov
xchg
jns
enter
xor
pop
mov
jl
xchg
rcrb
push
in
push
sti
mov
sbb
cmpsl
push
sub
push
rorb
inc
push
xchg
push
scas
out
mov
cli
jb
cmp
inc
mov
leave
cmp
push
aam
das
andl
testb
xchg
unpcklps
outsl
mov
add
clc
cmp
test
adcb
pop
xor
mov
fmull
loop
jmp
mov
jge
sbb
in
daa
fs
adcl
jl
sbb
mov
aaa
int
xchg
push
scas
xchg
jp
int
cs
addl
inc
inc
dec
mov
cmpsb
adc
xor
bound
push
xorb
hlt
adc
jg
or
sub
je
and
mov
nop
fs
sbb
arpl
sbb
jmp
cmp
sti
ja
ja
in
push
outsl
dec
sar
xchg
push
cs
iret
je
push
jecxz
popf
and
and
mov
faddl
add
pop
push
scas
push
xor
scas
pop
add
out
sub
fsubrs
sub
out
jns
dec
inc
lods
inc
xchg
xlat
xlat
je
dec
ds
sahf
std
push
andb
ja
sub
jo
rcll
xor
cld
icebp
xor
or
sub
jg
xor
subb
fldl
ds
xchg
cmp
or
in
cmp
aam
mov
adc
in
adcl
cmp
jno
repnz
add
adc
or
and
arpl
clc
jecxz
daa
mov
nop
insl
fsts
icebp
mov
out
imul
out
cli
pop
sbb
jno
aam
xchg
add
adc
in
sub
fistps
add
or
popf
addl
shlb
ds
pop
out
cli
ret
in
mov
call
fsubs
aam
mov
jnp
fwait
add
fildl
inc
lock
dec
fisubs
cmp
rcl
mov
cmc
cli
mov
test
movsl
pop
mov
out
pop
sub
push
inc
rcrb
mov
sub
inc
aas
hlt
inc
leave
adc
insl
shll
xchg
pop
inc
addl
ljmp
test
adc
mov
es
pop
cli
dec
out
insb
mov
test
call
aaa
lds
adc
std
test
ss
fwait
pop
xchg
push
add
mov
js
test
dec
nop
jmp
cltd
add
repz
jns
xchg
push
cmc
cltd
jae
mov
orl
xchg
push
stc
in
adc
popf
xor
divl
adc
add
popa
es
lahf
adc
dec
or
mov
mov
mov
stc
fstpl
aam
push
out
test
ljmp
fwait
push
outsb
add
sub
xor
fidivl
ljmp
out
pop
jmp
xor
cld
mov
mov
gs
jnp
push
arpl
mov
imul
inc
lock
mov
xchg
cmp
ficoml
int
pop
out
cmc
mov
pop
xchg
iret
push
add
mov
mov
cli
iret
jmp
dec
fdivl
aad
in
add
pop
ret
mov
xor
lret
add
and
sti
push
or
mov
and
or
mov
cs
fwait
ljmp
aas
bound
add
sbbl
push
xor
push
xchg
fstpt
pop
xchg
mov
inc
mov
cwtl
movsl
int3
push
sub
or
lret
outsb
xor
addr16
dec
sub
dec
daa
or
xor
push
mov
jmp
cli
out
adc
mov
xor
mulb
data16
mov
ds
mov
jmp
push
ficoms
and
push
inc
mov
pop
icebp
mov
lcall
sub
push
cld
dec
xchg
mov
inc
in
shlb
cs
and
enter
decl
lods
mov
jno
push
mov
mov
jecxz
nop
imul
test
jecxz
sub
inc
dec
push
sub
sar
sbb
add
cltd
xor
inc
test
insl
push
and
adc
nop
repz
xchg
lea
loop
jbe
or
outsb
push
adc
mov
popf
sub
mov
cmpsb
mov
pushf
ret
sahf
push
lcall
dec
insl
mov
sub
cmpsw
mov
aas
aad
xchg
in
data16
aas
xor
jmp
pop
int3
out
add
inc
push
and
mov
jge
orb
xchg
scas
pop
ret
fdivl
xor
adc
dec
mov
stos
insl
das
lods
jno
mov
or
inc
int
insb
push
sahf
add
call
jne
push
and
testb
mov
mov
in
dec
ja
jnp
ret
dec
ror
sbb
sbb
daa
adc
scas
test
xorb
stos
imul
sahf
in
jo
add
pop
stos
adc
add
inc
sub
xchg
lcall
push
out
pop
push
mov
je
int
cmp
insl
inc
stc
rcrl
fmull
hlt
dec
movb
clc
call
xlat
mov
xchg
ss
fldenv
clc
repnz
inc
xchg
enter
pop
fcomps
xchg
dec
cmp
sub
push
pop
test
pop
int
mov
or
std
add
popa
and
in
lods
pop
lds
mov
cli
fs
sbb
sbb
hlt
jg
pushf
cmp
push
nop
rclb
fcomi
mov
pop
sub
pop
xchg
xchg
adc
cmp
xchg
int
jmp
popa
imull
dec
mov
dec
shlb
pushf
cmpsl
daa
push
push
push
push
pop
jg
pop
loopne
mov
in
xchg
movsl
loop
pop
lods
adc
or
test
xor
std
adc
ret
aam
xchg
mov
mov
inc
pop
inc
lcall
inc
gs
push
sbb
xchg
shrb
test
adc
adc
inc
in
arpl
in
xchg
lock
js
fcoml
cld
in
sbb
lods
jmp
hlt
insl
mov
nop
mov
dec
sbb
rcrl
pop
lahf
enter
popw
pop
pop
aaa
scas
xchg
inc
jecxz
lahf
loope
mov
rcll
cmpsl
adc
std
dec
pop
ja
cmc
xchg
xor
loop
xor
lds
in
dec
rcl
insl
call
hlt
ja
jp
mov
daa
cmpsl
adc
push
cmp
inc
outsl
arpl
cmpsl
lret
pop
movsl
outsb
xor
pop
filds
pop
xchg
add
cltd
and
xorb
xor
ficompl
xor
mov
dec
add
in
adc
jmp
dec
testb
aas
xor
mov
notb
je
dec
insb
inc
pop
ret
mov
mov
shlb
or
mov
scas
lret
lahf
in
mov
mov
icebp
es
scas
jno
adc
sahf
int
cmpsl
lahf
pop
sub
and
imulb
dec
filds
push
fistpl
in
shlb
jge
lret
je
ljmp
out
clc
nop
lds
iret
add
jnp
mov
enter
out
jmp
inc
imull
iret
push
orps
je
cmp
add
inc
mull
in
xchg
and
addr16
rcr
pushf
loope
adc
and
mov
fadds
add
mov
push
mov
xchg
pop
xchg
mov
dec
fs
rclb
pop
pop
cmp
fcomps
lahf
cmpsl
dec
mov
and
inc
setnp
pop
mov
inc
daa
loop
es
cmp
movsl
lcall
fldcw
pop
mov
add
ror
mov
shrb
lock
inc
xchg
das
outsb
popa
and
icebp
outsl
push
ljmp
add
cli
mov
mov
sahf
cmp
in
lea
fwait
mov
hlt
fisttpl
xchg
arpl
push
or
inc
xchg
fs
in
pop
jge
jne
subl
or
mov
fstl
test
ja
xchg
sub
in
insb
icebp
push
hlt
enter
pop
mov
int
das
faddl
test
pop
mov
sbb
roll
loopne
subl
pop
fisubs
out
xor
add
inc
test
shrb
les
out
push
out
push
cmp
and
add
mov
mov
or
inc
test
es
xchg
pusha
sbb
add
mov
inc
mov
push
frstor
and
jge
mov
jmp
adc
lods
je
adc
imul
dec
sti
test
xor
xor
js
loope
dec
inc
lods
fldl
jne
mov
jns
cmc
int3
out
mov
lcall
mov
jmp
xlat
or
mov
scas
push
mov
das
xor
sub
push
add
and
in
inc
jae
int3
and
pop
push
dec
inc
les
jecxz
mov
mov
aad
mov
addb
clc
xor
out
pusha
pop
pop
popl
add
shr
sub
aam
jecxz
add
cmpsl
icebp
outsl
dec
ljmp
movsb
sti
mov
sub
testb
inc
push
pusha
enter
test
and
mov
insb
jo
fistpl
xor
pop
dec
aad
xor
push
sbb
hlt
or
in
push
js
inc
cmp
dec
fdiv
push
xor
and
xchg
or
enter
nop
inc
or
test
adc
push
dec
mov
dec
cmpsl
popf
add
loope
xor
loope
mov
xchg
push
ljmp
jbe
push
call
inc
push
loop
sub
mov
mov
push
fmul
xchg
or
icebp
adc
bnd
call
push
cmc
xor
xchg
xchg
push
aas
les
cmpsl
movsl
imul
jmp
jbe
push
imull
or
iret
out
shl
les
cmp
jmp
mov
int
push
out
jne
xor
mov
and
popl
rorb
arpl
mov
cltd
sub
ljmp
imul
jae
xchg
test
push
adc
in
loop
ret
push
inc
push
push
fiadds
sbb
int
std
movsb
jns
pusha
lods
jno
movsl
ss
mov
dec
pop
adc
aad
xchg
out
scas
adc
xor
cs
xlat
std
fwait
push
or
fwait
mov
or
mov
mov
incl
aaa
xor
push
dec
decb
inc
cli
int
add
cmc
test
jns
xchg
fcmove
add
add
xor
mov
cmpsl
xchg
push
or
clc
push
cmp
enter
ss
or
jae
mov
sbb
fstpt
mov
sbb
xor
push
adc
orps
xchg
and
data16
icebp
mov
pop
and
andb
icebp
mov
fcoml
push
push
sbb
and
inc
pushf
push
lods
inc
push
sbb
insb
iret
inc
sar
dec
cmpsb
mov
iret
pop
movl
pop
and
adc
cmp
sbb
outsl
xor
push
mov
repnz
adc
push
scas
dec
mov
idiv
jp
ds
out
cmp
pop
ret
out
ss
and
pop
in
mov
aam
push
pop
push
mov
and
jg
nop
addr16
fisubs
sbb
in
push
mov
lds
jmp
or
xchg
sbb
push
mov
dec
in
cmpsl
je
cmp
sub
pusha
jo
adc
cli
leave
xlat
pop
mov
sub
sbb
out
or
dec
xor
inc
adc
dec
xlat
outsl
fs
jae
or
push
ljmp
jmp
iret
aam
inc
fimull
xor
jp
jmp
sbb
in
in
es
xor
mov
add
xchg
push
jb
xor
cmp
push
popf
rclb
fnsave
sub
adc
push
fdivl
cmp
pusha
add
lods
push
jb
mov
add
scas
imul
and
inc
sub
xchg
les
mov
push
ja
add
jp
out
sbb
adc
and
movsl
push
insb
aaa
pop
or
loop
xor
rorl
mov
aam
push
mov
sub
push
fs
lret
xorl
and
adc
mov
and
push
inc
jl
incl
pop
pop
insl
fists
xor
adc
adc
stos
adc
mov
dec
daa
fistpll
dec
or
xchg
das
sbb
and
divb
movsb
dec
jge
dec
pop
inc
sbb
cmpsb
sti
and
insb
jecxz
mov
sarb
inc
xchg
shll
movsl
rclb
cwtl
aaa
cltd
hlt
xor
push
daa
imul
mov
dec
or
fisubs
aam
jl
jle
cld
mov
int3
push
add
add
ds
mov
shr
pusha
sbb
sbb
cli
int
push
mov
test
xor
sbb
sub
adc
pop
dec
cmp
in
xor
inc
in
insb
fs
push
jge
mov
mov
cmp
popa
jno
out
cmp
adc
je
shlb
xor
jecxz
jl
dec
jns
mov
push
mov
jbe
adc
cmp
mov
ret
dec
pop
pop
xor
push
cwtl
dec
pop
scas
add
icebp
xor
mov
or
ret
pop
sti
idiv
mov
xchg
pop
js
icebp
ret
mov
dec
js
fnsave
push
xchg
sbb
sbb
dec
and
jbe
and
loopne
mov
add
mov
inc
push
in
mov
mov
inc
push
lret
push
neg
cmp
inc
in
nop
idivl
and
lret
inc
adc
mov
add
in
les
in
sbb
mov
loope
jne
fs
mov
test
aas
mov
mov
xor
xchg
and
pop
mov
pop
inc
adc
sub
dec
vminsd
jo
add
int3
and
outsl
sbb
push
jg
push
cli
in
pop
cld
xchg
xchg
pop
cmp
add
dec
inc
dec
loopne
jno
pop
cwtl
jo
xor
xchg
sbb
shll
mov
pop
fstpt
fcoml
sahf
mov
cmpsb
sbb
out
sub
cmp
aam
push
lods
loop
or
add
sub
lahf
lods
inc
push
xor
dec
jmp
xchg
icebp
xorb
pop
mov
jo
push
std
sahf
lret
xor
sub
pop
rcl
stc
cmpsl
subl
fsub
jg
fstps
xchg
sbb
lret
mov
mov
cmp
scas
int3
jmp
jg
jp
mov
fldenv
das
jnp
xchg
test
xchg
loopne
add
sbb
dec
adc
js
cmp
in
sahf
lret
arpl
jno
stos
jbe
pushl
adcb
cli
insl
xor
dec
mov
inc
lock
or
stos
push
pop
jl
mov
adc
jge
lcall
subb
ret
sbb
push
or
jecxz
push
push
cmp
jno
or
push
mov
xor
xchg
in
cmp
out
add
inc
popf
xor
and
flds
sti
cmp
sub
push
mov
outsb
mov
jnp
or
lret
cmp
dec
mov
sub
cmp
ffreep
mov
pop
inc
rcrb
rorl
or
dec
ret
fisttpll
cmp
push
sub
sahf
cwtl
mov
loop
sub
push
cmc
sahf
pop
or
test
sbb
push
mov
aas
filds
mov
pop
sbb
aaa
ja
sbb
or
cmp
in
xchg
and
rolb
repnz
rolb
and
dec
jmp
cmp
sahf
or
lods
sub
aad
lods
fisubrl
in
imul
sub
insb
sub
cmpsl
fisttpl
jmp
addl
xor
mov
repz
mov
call
inc
das
test
je
insl
jbe
inc
out
pop
dec
lods
xor
add
push
sub
loopne
es
adc
mov
push
sub
cmp
adc
cwtl
mov
mov
cmpsl
sahf
inc
add
cs
dec
pop
cs
mov
or
test
out
ja
add
push
pop
test
test
mull
sar
ja,pt
std
xchg
fiaddl
orb
cmc
es
les
fcompl
mov
pop
inc
pop
mov
sti
call
cmp
mov
cmp
pop
ljmp
lret
pop
stos
pop
pop
imul
or
aam
jo
loope
lret
arpl
lea
xchg
nop
loope
out
cwtl
sub
rorl
jp
xchg
fwait
int3
and
add
mov
rorb
cmp
mov
jno
cvttps2pi
sarl
in
js
sahf
sti
mov
repz
dec
lret
jle
loopne
outsb
dec
jo
fs
bts
je
cmp
xchg
or
aas
loope
neg
and
cmp
roll
adc
rclb
push
aam
and
inc
inc
icebp
push
fbld
fs
push
sub
icebp
ficoms
mov
int
out
mov
inc
notl
fwait
stos
fnsave
scas
je
bnd
pop
dec
mov
std
rorl
inc
jne
cmc
mov
nop
aam
loope
pop
imul
inc
cmp
aaa
sarl
out
out
mov
add
shl
movsl
testb
push
testl
rcll
ss
jge
push
repnz
rcrl
pop
in
mov
jae
add
xchg
jo
inc
imul
enter
fsubs
or
out
or
in
into
fcmovne
sbb
sbb
xchg
mov
lods
cmp
mov
pop
test
leave
gs
aam
repnz
xlat
adc
inc
or
movsb
mov
mov
jbe
cmp
test
int
xlat
or
and
pop
inc
bound
fs
enter
scas
adc
sbb
mov
or
lods
push
shlb
cmp
outsl
xor
pop
gs
xchg
xchg
sub
lret
sbb
push
pop
stos
sub
cmpsl
cld
inc
pushf
rep
lcall
and
jo
sbb
xchg
iret
inc
pusha
cmc
fbld
mov
adc
and
test
inc
jnp
mov
cli
add
sub
insl
ljmp
out
sbb
pushf
dec
aas
imul
lods
ja
clc
dec
inc
data16
mov
or
test
xchg
inc
gs
mov
jge
inc
mov
enter
test
inc
scas
nop
js
cmp
xchg
xor
fimuls
fiadds
or
jmp
es
insb
xor
mov
ret
jl
test
or
pusha
add
jle
mov
cmp
inc
add
ds
mov
sub
push
scas
pop
sahf
leave
popf
aas
out
pop
cmp
in
rorl
add
incb
jae
sbb
or
dec
repz
ret
push
or
call
lahf
mov
mov
sub
xor
xchg
incb
cs
js
cltd
jbe
in
int
test
insl
clc
stos
popf
in
and
pop
data16
out
sbb
stc
jne
or
push
push
pop
xor
jnp
inc
push
jmp
xchg
xchg
push
mov
lds
js
xor
out
jge,pn
sbb
cs
shl
rclb
aaa
lods
jle
xchg
pusha
popa
fwait
ret
fwait
xchg
dec
jle
mov
xchg
subb
xor
add
aaa
push
jb
shr
pop
push
stos
fisttpll
mov
xor
ret
int
add
inc
push
testl
jmp
push
faddl
dec
loope
dec
xor
and
icebp
cmpsl
jno
mov
push
xor
dec
mov
loope
cltd
testl
adc
xchg
xor
popl
test
cmpsl
xor
in
out
lds
push
fmulp
sub
push
mov
cmc
jo
loopne
mov
mov
and
aaa
push
inc
dec
sahf
xchg
dec
test
mov
xlat
and
pop
movsb
mov
mov
data16
enter
sub
jp
std
daa
cmp
mov
pop
adc
pop
lock
mov
in
sbbl
add
into
ficompl
inc
jbe
ja
push
je
xor
outsb
lret
mov
daa
into
iret
jle
lods
mov
dec
xchg
xor
and
cs
lahf
or
xor
fbstp
in
rcr
cmpsb
aas
pop
das
sub
fsub
push
test
loopne
sub
movb
mov
loopne
and
ret
mov
sub
cmpsb
xchg
fadds
inc
or
scas
cld
jg
mov
test
testb
sbb
mov
xchg
jo
and
push
loop
fdivs
or
jns
repz
fldenv
mov
xchg
xor
push
jmp
out
sbb
adc
inc
adc
add
out
ret
pop
ficomps
out
push
data16
xor
and
push
aas
outsl
cmp
mov
mov
inc
cmp
stc
xor
cmp
rorb
ja
addr16
shlb
fstpl
shr
adcb
jge
rcrl
imul
test
addr16
dec
mov
adc
pop
aas
sahf
lcall
mov
jnp
mov
jb
inc
mov
cmpsl
fcompl
insl
dec
and
rorb
popf
jg
or
cli
les
xchg
mov
jo
cmc
scas
pop
jge
adc
xchg
imull
jle
fdivs
ret
adc
jge
andl
movsb
fisubrs
lods
insl
test
rorl
std
xchg
xor
movl
fs
mov
arpl
enter
fisubrl
jbe
jno
push
pop
jns
xchg
shl
push
out
dec
jecxz
in
mov
arpl
mov
mov
cwtl
sbb
xor
xchg
lcall
dec
cld
adc
dec
mov
into
stos
rcrl
inc
lods
push
push
dec
sub
sbb
shrb
add
mov
mov
das
dec
xor
imul
sub
int3
in
imul
jp
sub
mov
sbb
push
ret
mov
addr16
popf
mov
aad
scas
fs
and
mov
mov
rcrb
inc
xchg
scas
mov
int3
mov
imul
in
clc
sbb
insb
mov
adc
adc
data16
out
pop
dec
pop
xchg
out
jno
aam
sbb
cmp
pop
lods
mov
inc
push
ja
in
pop
sbb
or
cmp
inc
enter
lret
mov
push
mov
jmp
out
pop
in
repnz
in
test
imul
test
jmp
push
push
dec
inc
in
pop
test
lcall
push
mov
xchg
or
sti
or
gs
mov
aaa
adc
loope
testb
loop
or
int
pop
sbb
push
imul
push
das
shll
sbb
jno
sub
pop
sub
orl
pop
bnd
test
pop
dec
jbe
and
xchg
adc
sahf
into
je
fs
add
mov
pop
mov
test
in
stc
orb
fcompl
mov
pop
roll
pop
gs
cmp
dec
pushf
pop
inc
cwtl
pop
sbb
adc
mov
fisubrl
je
imul
shrl
movsl
movsb
je
jmp
mov
jb
in
and
jb
fwait
mov
jno
sub
cmpsb
pop
outsb
mov
ljmp
cmc
adc
or
sub
or
mov
cmp
lock
xchg
scas
ljmp
in
testb
jge
cmp
pushf
xor
cmp
xchg
inc
popa
movsl
mov
daa
xlat
pop
cmp
arpl
mov
sbb
sarb
call
xchg
mov
inc
xlat
cwtl
in
or
stos
stc
mov
push
jle
lods
pusha
mov
mul
or
ljmpw
ret
jle
rcll
rcll
mov
mov
fistl
imull
imul
leave
out
xor
inc
inc
dec
movsl
pop
dec
jp
pop
sub
imul
pop
cmc
enter
mov
or
mov
mov
sysenter
gs
pop
mov
je
xchg
adc
cmc
cmpsb
add
mov
js
inc
inc
jp
inc
scas
outsb
sbb
pushf
sbb
popa
push
xchg
jge
xchg
pop
repz
mull
aas
ds
andb
or
loope
pop
xchg
push
je
jg
in
cld
insl
ficoms
sub
aas
jnp
repz
push
cmp
sti
inc
sti
test
lret
enter
and
adc
loopne
mov
and
xchg
push
lcall
andb
mov
cmp
out
aas
sub
jmp
into
ljmp
orb
pop
mov
fisubrs
out
push
mov
cli
cs
adc
push
stos
xchg
mov
test
nop
repnz
push
shll
jae
and
arpl
mov
daa
xchg
xchg
arpl
pusha
inc
hlt
cmpsb
inc
popa
and
or
test
mov
push
orl
and
xchg
mov
test
mov
aam
mov
xchg
dec
scas
daa
jmp
sbb
mov
inc
jno
nop
jle
fcoms
ss
icebp
mov
sub
adc
out
mov
sbb
inc
mov
push
fcmove
clc
sub
in
movsb
push
push
movsb
int3
enter
xor
push
ret
test
sub
daa
and
mov
xchg
cmc
xchg
ds
out
dec
data16
sbb
mov
xchg
and
insl
or
or
test
pop
cmpsb
mov
cmp
xchg
xchg
test
push
mov
insl
cmp
into
mov
popa
pop
xor
mov
rcl
sbb
and
js
lods
pusha
mov
sub
into
in
add
loop
loop
mov
mov
xor
xor
cmp
mov
arpl
test
in
jnp
mov
mov
adc
adc
repz
mov
movsb
inc
inc
popf
outsb
fnstenv
pop
repnz
or
sbb
notb
lahf
mov
push
xor
enter
xlat
and
subl
repnz
cmp
dec
or
cmpsb
mov
cmp
mov
data16
push
in
insb
ret
mov
jae
scas
sbb
fdiv
mov
lcall
ret
inc
out
das
xchg
jge
mov
cmp
hlt
rcl
push
addr16
aad
xchg
mov
movsb
enter
pop
daa
xchg
jge
cltd
out
aad
sub
outsb
jge
inc
fwait
addb
add
push
xchg
lods
sbb
push
imulb
xor
mov
mov
test
add
loopne
lea
gs
jae
popf
push
decl
inc
lea
stc
add
imul
jns
and
cmc
push
call
mov
lret
xchg
push
leave
mov
in
jl
adc
cmpl
mov
in
enter
mov
stc
jo
lods
scas
mov
dec
jge
nop
stc
jae
pop
mov
lret
int3
ret
aam
and
les
jne
sub
rolb
mov
sahf
inc
fst
dec
sub
or
sarl
mov
fs
push
ja
scas
je
pop
jbe
or
test
test
cmp
int3
das
in
mov
mov
cmpsb
push
lahf
jge
movsb
add
mov
dec
cwtl
add
gs
mov
fldenv
movsl
mov
jle
mov
ljmp
lahf
popf
pop
inc
add
sub
aaa
clc
inc
loop
aas
popf
pop
or
jp
outsb
test
pop
aas
movsl
jns
pop
jne
imull
lods
test
jge
shll
mov
mov
sbb
aas
scas
push
bound
pusha
daa
and
jns
and
cwtl
dec
ret
aas
out
mov
cmp
fisubs
push
and
dec
rol
movsl
pusha
sub
and
ret
jno
ret
xor
lods
repnz
out
dec
repz
cmp
add
inc
mov
push
or
jge
fidivrs
ljmp
mov
scas
xchg
in
cltd
cltd
ljmp
clc
dec
inc
adc
cmpsl
leave
xorl
sbb
add
mov
xchg
add
cld
pop
ds
adc
mov
cs
mov
insb
sbb
fdivrl
inc
xor
movsb
icebp
adc
jmp
testl
sub
aaa
outsb
hlt
in
ja
testb
add
int
mov
jne
clc
inc
jae
test
add
pushf
push
scas
bound
cmp
cli
scas
bound
test
cs
xor
addb
jecxz
xor
fnstsw
push
test
addl
movsl
rolb
lret
jo
sub
fldcw
jae
stc
xlat
pop
mov
mov
jp
mov
jle
xchg
mov
xor
fdivrl
loope
lcall
and
jne
xchg
pop
stos
mov
cmp
cli
lret
repz
jns
jge
push
inc
lahf
hlt
fs
push
inc
ret
ret
dec
and
std
aad
aas
dec
daa
xor
shlb
fwait
mov
test
sbb
sub
fsubl
test
cld
dec
pusha
frstor
sbb
mov
sub
sbb
sbb
pusha
js
roll
jb
cli
imul
ret
pop
bnd
sbb
pop
sub
pop
adc
add
sbb
pop
sti
clc
xchg
enter
sar
rcrb
stos
pushf
rol
in
test
ds
xchg
ret
mov
arpl
and
dec
mov
pop
sbb
lahf
jmp
addr16
pop
jno
push
ret
hlt
and
pusha
add
jp
mov
movsl
adc
cltd
mov
sub
je
lock
das
sub
cltd
imul
mov
xchg
pop
jl
or
cltd
dec
arpl
aas
sbb
add
arpl
cmp
vpshuflw
fmul
and
lahf
pushf
push
fs
aaa
imul
push
insl
inc
inc
enter
je
jl
push
fistps
mov
add
sbb
or
mov
pop
fidivs
popa
xor
std
into
pop
pop
mov
pop
testl
lret
in
addl
popf
dec
or
mov
fldl
sbb
fidivrl
popa
xchg
out
fdivrs
dec
shlb
xchg
les
cmc
in
push
fisttpll
shlb
out
push
mov
pop
lahf
mov
jg
inc
out
or
outsl
or
jmp
fwait
in
lahf
aaa
push
adc
imul
push
inc
addr16
inc
sarb
jae
cld
in
add
sbb
cmp
and
jg
test
movsb
shll
jbe
and
mov
sarl
sbb
shrl
fsubrl
idiv
je
aaa
add
shll
sbb
sbb
jp
pop
adc
popf
outsl
icebp
add
dec
xchg
or
test
repz
jmp
adc
movsl
adc
fimuls
and
ja
or
icebp
popf
jne
aam
pop
dec
fdivrl
daa
xchg
and
pop
aaa
push
sbb
test
dec
sub
inc
pop
push
mov
test
lods
add
push
roll
jo
jae
out
jnp
xchg
cs
add
and
repz
push
clc
fisubrl
or
cmpsb
xchg
mov
outsb
push
sub
inc
xchg
xor
mov
inc
xchg
insb
xor
xchg
dec
dec
dec
popa
fildll
dec
xchg
inc
jns
aad
cld
fs
loopne
xor
out
jecxz
popf
dec
xchg
test
stos
add
and
jge
fldt
push
jno
jae
mov
or
lods
and
ja
inc
out
popl
cmp
xor
push
cli
lea
pop
add
mov
pop
cmp
lea
or
push
jno
xor
dec
add
adc
lods
dec
cmpsl
iret
sahf
cmp
jae
mov
mov
lods
xchg
or
pop
fisttps
sbb
lock
out
out
ljmp
adc
xor
and
jb
sahf
mov
repz
sub
pop
outsl
mov
sub
lcall
add
int
inc
mov
sub
fstl
or
jns
cld
sarl
sub
lods
push
mov
push
ja
fdivrl
fistps
pusha
lock
xor
incb
mov
out
fdiv
push
pop
stc
sbb
mov
dec
pop
jno
rclb
adc
pop
add
add
dec
adc
pop
cmp
iret
lret
sub
into
sti
rcrb
jb
out
mov
sub
mov
out
pop
sub
insl
pop
dec
pop
cmp
xor
xchg
les
pop
and
cltd
mov
sbb
push
nop
movsb
jecxz
fsubrs
fiaddl
mov
out
xchg
pushf
xor
sub
or
and
fdivs
xchg
movl
mov
jl
loop
cmp
sub
sbb
out
into
je
fldl
loopne
incl
aad
adc
adc
inc
jge
adcb
add
cmp
and
ljmp
pop
mov
sbb
cld
adc
loopne
mov
data16
jg
ljmp
xlat
pushf
sub
roll
dec
adc
lods
or
je
sarb
mov
lds
cmpsl
int3
mov
xchg
arpl
out
vcvttss2si
pop
repnz
inc
iret
inc
or
xor
xchg
nop
out
mov
je
in
sub
mov
adc
aaa
dec
xchg
pop
lea
push
mov
rol
jne
mov
scas
push
dec
sub
les
mov
andl
repz
std
or
int3
adc
setb
daa
repz
ja
lds
and
and
rorl
cs
aas
rcl
push
test
adc
lcall
dec
dec
add
lret
inc
mov
dec
cli
in
push
xor
xchg
lds
daa
sub
les
test
andb
or
hlt
xchg
sarb
sbb
xchg
daa
and
push
dec
popa
mov
xor
sbb
and
mov
sub
inc
mov
cltd
pusha
push
push
fisubrs
int3
mov
dec
popf
cmpsl
xchg
xchg
lahf
pusha
mov
push
lock
xchg
xor
loope
inc
and
imul
mov
test
mov
pop
stos
cmp
and
rclb
in
jl
jecxz
aaa
cmp
test
and
mov
scas
mov
sub
mov
add
das
or
iret
push
andl
push
xchg
lahf
pop
lcall
fs
jecxz
aam
das
mov
mov
jo
xchg
mov
add
mov
or
pop
imul
out
addr16
pusha
cmp
js
inc
js
and
enter
es
dec
adc
adc
outsb
dec
aam
fidivrl
mov
test
xchg
xchg
cmp
loopne
repnz
push
in
dec
adc
push
jo
inc
pushl
xchg
mov
in
stos
jg
outsb
loopne
sub
aaa
or
in
pusha
shrb
imul
add
mov
repnz
addr16
sbb
stos
jb
negb
outsl
xor
push
ret
jb
ss
cli
iret
fwait
dec
aad
mov
push
sbb
push
insb
daa
aad
in
or
adc
cmpsl
repnz
push
cs
std
mov
nop
jb
push
mov
sbb
movsb
jmp
xchg
faddp
daa
dec
lret
pop
ljmp
sbb
pop
dec
cmpsb
adc
or
adc
je
dec
mov
out
sub
inc
jmp
insb
mov
sbb
mov
mov
ss
je
dec
dec
dec
pop
lds
push
xchg
or
ds
in
lret
sbb
daa
scas
jb
scas
sbb
int3
fcmovnb
inc
fcoml
loopne
rclb
xor
clc
sub
stos
xchg
iret
pop
stc
mov
hlt
std
and
add
sbb
xchg
adc
add
xchg
popf
out
mov
xchg
adc
dec
xchg
xor
or
mov
sub
imulb
scas
sub
cmp
lret
clc
and
xlat
push
add
shll
cmp
xchg
movsl
mov
nop
cmpsb
inc
push
hlt
jecxz
pop
lea
outsl
and
imul
cmp
jg
mov
jl
jmp
pop
inc
sub
bswap
jecxz
mov
fwait
into
ljmp
xchg
shr
in
mov
cmp
dec
mov
cmp
mov
gs
push
sub
jle
out
cli
push
mov
push
lahf
inc
xor
cmp
xor
in
add
jecxz
sbb
leave
sbb
jo
xchg
sbb
xor
adc
adc
jns
xchg
in
pop
daa
mov
sub
or
sbbl
stc
cmc
inc
xchg
xchg
adc
lods
cmp
sahf
insb
jle
add
mov
xor
cwtl
mov
pop
xor
aad
mov
mov
pushf
jmp
cmp
rclb
fwait
xor
in
jmp
aas
movsl
cmpsl
jnp
jne
and
jbe
clc
adc
outsb
inc
pop
sbb
xchg
mov
lock
pop
mov
lret
xchg
fwait
xchg
xor
fs
aas
mov
mov
or
bound
icebp
push
jl
outsb
adc
fsubrs
cwtl
loop
adc
stos
cltd
out
lret
xchg
mov
jg
iret
inc
and
jns
out
test
jb
mov
or
scas
xor
mov
insb
inc
in
jmp
mov
push
lock
xor
mov
jo
in
lds
int
es
rclb
aas
cli
xlat
inc
ret
fldenv
lock
inc
lods
pop
popf
pop
push
out
aas
andl
mov
call
pop
outsb
loope
aaa
sub
outsb
lret
mov
imul
mov
push
aas
mov
addb
xor
iret
mov
adc
jb
mov
add
fs
sbb
daa
in
scas
cmc
xchg
in
sbb
andb
dec
je
loop
nop
sub
pop
push
add
cmp
jp
xor
mov
mov
jecxz
add
xchg
inc
addr16
in
push
cltd
test
pop
cmpsb
pushf
add
test
xor
or
add
inc
out
fdivs
in
scas
lea
adc
cltd
inc
adc
mov
xor
fs
push
or
jnp
out
das
dec
int
ds
add
dec
jae
cmpsl
pop
cmp
and
mov
out
es
aaa
mov
cmpsb
fcomps
and
jns
enter
sbb
jl
cmpb
cld
mov
mov
in
mov
pop
outsl
dec
or
dec
lock
xchg
out
aam
mov
mov
sub
and
sbb
fsubrs
jnp
ret
push
cmp
test
pop
adc
test
lret
mov
cltd
loopne
or
jecxz
push
rorb
xchg
outsb
lahf
push
pop
lret
ja
rclb
lret
popa
mov
adc
and
push
sbb
jl
push
popa
pop
insb
ss
scas
sahf
es
sbb
std
call
dec
mov
jns
les
push
cld
flds
into
jp
ror
aad
sbb
jb
xchg
push
sarb
mov
cmp
inc
and
inc
rcr
sbb
mov
arpl
cltd
sub
lcall
cmp
xchg
test
sbb
jno
repnz
jle
adc
xchg
mov
fwait
xor
scas
jmp
fnstenv
push
pop
push
xor
sub
aas
into
popf
repz
xor
mov
jg
out
lock
jl
adc
cli
outsb
xor
fsts
ss
xor
fmulp
pop
imul
sbb
mov
lods
xchg
inc
jo
push
js
mov
mov
outsb
sti
xor
adc
lods
loopne
loopne
jmp
jnp
cmc
ja
popa
outsl
cltd
mov
mov
and
and
sar
stos
sarl
test
inc
xor
faddp
into
jne
sbb
pop
orl
xor
in
in
enter
insb
jg
dec
jb
pop
mov
popa
pop
bound
push
aaa
push
repnz
dec
dec
dec
push
aam
mov
mov
mov
call
sub
je
andl
xchg
cmpsb
xchg
adc
imul
lods
adc
or
jbe
mov
adc
jle
out
cmpsb
in
outsb
mov
out
dec
aam
movsb
push
aam
sti
push
mov
jb
fnstsw
mov
and
mov
mov
imul
adc
mov
in
inc
or
pop
dec
das
jl
in
fwait
pop
push
cmp
fwait
cltd
mov
enter
mov
mov
jo
imul
add
jecxz
cli
xor
pop
xchg
sub
popa
jbe
mov
out
addr16
push
or
into
jbe
pop
test
jg
xor
mov
scas
jg
int3
pop
je
lods
jnp
std
movsl
sub
cmp
mov
popf
and
xor
sti
pop
push
aad
xor
ret
aam
sub
cmc
pusha
sub
cltd
jge
out
dec
adc
out
push
and
rolb
push
fiaddl
and
test
jge
adc
inc
cltd
movsb
sbb
jle
pop
les
jecxz
xor
cmp
sar
push
pop
xchg
and
push
or
test
aas
fcomp
mov
aad
and
push
insb
std
lret
push
adc
cmp
cmp
comiss
inc
sti
and
mov
fs
sbb
js
pop
cmp
add
mov
andb
mov
repz
in
fcmovnu
mov
test
stc
jle
jle
cmpsl
stos
outsb
out
mov
pop
mov
mov
add
add
pusha
std
out
xchg
into
jo
mov
out
push
and
hlt
inc
loope
pop
jge
dec
xchg
popa
int
int3
adc
fldenv
imul
cmc
and
adc
pop
pop
inc
das
stos
cmpb
mov
in
push
xchg
addb
jl
adc
mov
cmp
imul
dec
pop
mov
insl
inc
xchg
push
addr16
loopne
dec
push
inc
jno
nop
aam
data16
xor
inc
inc
cld
mov
jns
sbb
cmp
cmp
aam
dec
add
add
mov
sbb
lods
test
sub
inc
daa
mov
pop
xor
lods
xchg
imul
notl
in
insl
mov
or
inc
jno
inc
sub
pop
int
sti
out
mov
xor
mov
adc
ror
jae
rcl
xchg
push
adc
mov
adc
cwtl
outsl
cmp
pop
adc
pop
aad
scas
and
xchg
inc
jg
mov
fildll
sbb
out
xlat
jp
xchg
outsl
int
jecxz
pop
mov
in
jecxz
adc
repnz
or
or
mov
pop
push
mov
leave
movsl
sbb
and
mov
mov
mov
adc
ret
jbe
iret
aam
mov
dec
pmullw
mov
xlat
xchg
in
push
addl
dec
xor
xor
push
or
mov
pop
mov
out
push
mov
mov
and
cs
push
fbstp
insl
push
es
fistps
mov
out
and
in
sub
sub
je
inc
push
sub
imul
sbb
xchg
jbe
lahf
repz
jmp
adc
xor
int3
mov
push
mov
mov
mov
jecxz
xor
das
insl
lea
in
adc
aam
or
es
mov
dec
repnz
and
push
fidivrl
dec
inc
in
pop
lods
dec
fs
je
adc
pop
inc
or
ret
pop
stc
psrlw
lods
pop
cmp
jle
fistpll
ds
mov
out
sbb
rorl
outsb
cmp
pop
stos
pusha
pop
sub
leave
dec
daa
mov
addr16
out
jg
mov
outsb
es
aad
inc
in
pop
mov
lods
jge
dec
inc
das
cmc
pop
test
push
jg
mov
pop
fs
pop
mov
adc
cs
loope
loopne
lret
stos
xlat
inc
push
sbb
jecxz
sbb
xchg
push
mov
cmpsb
es
push
mov
mov
daa
jbe
and
adc
jae
push
dec
pop
lods
or
std
and
into
ficomps
add
push
adc
mov
in
jmp
cmc
push
mov
scas
pop
cmp
cmp
xor
mov
test
icebp
jp
xchg
mov
les
aas
test
inc
ret
aaa
xor
arpl
add
jbe
sbbb
and
push
cmpb
inc
subb
xchg
mov
pushf
or
sahf
bound
stos
and
xor
bound
or
dec
pop
lock
mov
xchg
lea
xor
out
hlt
cmp
jno
push
shll
sub
xchg
pop
scas
mov
bound
jae
push
dec
data16
lds
pushl
test
stc
xchg
stc
or
xchg
xor
cltd
sti
imul
out
jne
aad
rorl
mov
lods
stos
inc
mov
mov
jae
add
jge
test
mov
or
imul
out
stos
fwait
add
sbb
mov
popa
lock
rolb
jne
adc
mov
imul
shlb
jmp
fcomp
enter
andb
lock
adc
loopne
call
sbb
lods
aam
mov
push
mov
and
cmp
stos
xchg
scas
xchg
pushf
in
or
shlb
cmpsb
xchg
push
jecxz
data16
js
push
pop
xor
mov
push
push
stc
adc
test
stos
xor
lock
jns
icebp
cmp
popa
repz
xor
add
mov
xchg
jo
sub
add
adc
stc
inc
nop
icebp
into
lods
stos
adc
leave
movsl
pop
add
adc
andb
enter
out
jmp
push
int3
fisttps
sub
dec
pop
sub
fsts
inc
call
jae
push
xchg
lret
mov
push
mov
add
lea
push
mov
push
pop
lock
dec
bound
mov
adc
or
sti
mov
cmpsl
scas
mov
pushf
mov
sub
adc
cwtl
jp
mov
ljmp
enter
xorl
sti
scas
stc
dec
sbb
lods
in
inc
mov
add
fstl
int
loope
shlb
data16
repz
push
out
icebp
push
out
push
sbb
push
into
loope
dec
sarw
hlt
adc
dec
and
cs
xor
jno
lret
sbb
jns
mov
stos
adc
idivb
das
or
push
pop
orb
sbb
push
iret
jmp
fisttps
mov
push
inc
fldt
mov
push
fadds
xchg
idiv
jle
add
cmpsl
cmpsl
and
cmp
xchg
pusha
xchg
lods
push
movsl
xchg
push
frstor
xlat
fwait
sbb
and
mov
fmulp
stc
mov
sub
sbbb
or
setl
jbe
lods
fs
xlat
push
and
push
adc
sarl
iret
les
or
pusha
das
mov
and
aad
add
mov
jno
outsb
comiss
push
mov
or
ss
popf
adc
out
cs
out
xchg
outsl
cs
jnp
cli
aas
rclb
sub
cmp
dec
dec
ja
jp
loopne
mov
adc
cmp
adc
adc
xchg
push
push
mov
mov
ljmp
inc
pop
sbb
dec
jbe
mov
dec
xor
or
lahf
dec
mov
jge
call
fs
rolb
out
mov
pushf
jle
stos
xchg
sub
arpl
mov
out
mov
movsl
mov
push
std
jmp
sti
leave
fldl
iret
adc
jnp
xor
out
mov
xchg
repz
push
pushf
nop
add
aad
daa
jb
sbb
fcomps
inc
sub
mov
add
xchg
ljmp
jae
sahf
ret
scas
aam
icebp
in
ss
jae
out
stc
adc
into
xor
xlat
stos
shl
dec
adc
bound
nop
dec
adc
lods
xchg
bound
popa
cmp
adc
cmp
pop
mov
mov
clc
pop
dec
cwtl
dec
sub
mov
jno
cs
insb
stc
or
jecxz
dec
jp
sub
lods
mov
into
xchg
je
pop
jne
and
fsts
pop
adc
mov
xchg
pop
int
jp
data16
pop
inc
sub
mov
cmpsl
cmp
shll
test
fcomps
cmpsb
ret
in
icebp
lods
and
jne
andl
fs
ss
repnz
jo
inc
adc
dec
pop
je
sbb
pop
enter
cmc
pop
dec
fdivr
xchg
xchg
repnz
fmull
mov
fnsave
lods
adc
fsubr
stc
dec
cwtl
push
or
jbe
mov
push
shrl
dec
fsubs
add
pop
fdivs
lea
adc
test
adc
jmp
fbstp
xchg
sbb
xchg
nop
adc
xor
jmp
fisubs
js
js
jnp
stc
push
loop
adc
jne
shrl
cmc
jo
push
add
cmpsb
cmp
fwait
cmpl
push
leave
repnz
mov
inc
sti
lods
mov
ret
xor
arpl
faddl
jo
ret
shrl
fidivs
mov
hlt
sbb
jle
imul
inc
int3
mov
dec
test
andb
lret
and
or
stos
push
das
lods
aaa
sub
mov
testb
adc
sbb
ss
and
nop
push
test
lret
jbe
inc
or
rcrl
into
fnstsw
mov
add
pushf
lcall
fists
xor
out
fucom
dec
nop
gs
imul
cs
pop
adc
xor
jns
mov
jmp
sti
jp
imul
les
into
xor
in
mov
and
pop
pop
mov
dec
inc
mov
pushf
out
testb
sub
insl
xorl
movb
in
add
cmp
ja
jbe
fsubp
lahf
push
push
adc
cmc
aas
sub
bswap
sbb
xlat
xlat
mov
push
sbb
pop
or
insl
stos
in
jne
mov
dec
xor
arpl
jmp
xor
loope
in
adc
jge
inc
and
scas
aas
loopne
stos
and
pop
mov
out
xor
lock
lret
in
dec
cmp
stc
ficoms
lret
test
cmp
dec
stos
iret
lcall
and
test
daa
mov
js
aaa
adc
push
mov
in
push
fistps
sbb
cmp
pop
cmpl
cli
ljmp
push
cltd
sub
in
mov
rclb
jns
cmp
sbb
add
cltd
cmp
xchg
fwait
mov
bound
dec
std
lods
aam
stos
mov
xor
loopne
cmp
push
pusha
mov
pop
mov
ja
mov
into
push
jno
cmpsl
xchg
sub
mov
rcr
data16
pop
imul
mov
aaa
je
iret
fsubrs
mov
xchg
scas
test
cmpb
fstpl
push
pop
jle
sbb
lret
fs
push
cwtl
popa
push
jnp
rclb
dec
fisubl
out
jb
popf
jbe
lret
out
into
and
loopne
lret
aaa
insb
bound
xchg
sub
mov
add
pop
jecxz
or
mov
add
enter
jecxz
fisttpll
mov
shll
popf
inc
push
outsb
add
jbe
mov
fimuls
repz
mov
jb
xchg
dec
scas
and
pop
push
outsb
gs
cmc
in
test
pop
outsl
mov
mov
inc
loopne
fyl2xp1
push
sub
jne
cmpsb
xchg
lea
in
jns
fdivp
ljmp
adc
fidivs
mov
out
xor
sti
out
or
sub
mov
js
or
xor
in
sub
xor
mov
jg
push
inc
arpl
mov
cmp
nop
loop
pop
lret
dec
in
mov
daa
cmovbe
iret
das
inc
out
cmp
repz
mov
adc
repz
jae
sbb
mov
add
mov
jmp
test
stos
es
jne
jge
inc
jae
in
cmp
and
jmp
push
xor
xchg
call
xlat
xor
or
lods
rorb
and
push
lret
sahf
ja
aad
inc
mov
cltd
mov
jnp
ljmp
popf
adc
lret
stc
inc
out
int3
movsb
pop
fisttpl
sub
lcall
in
pop
cmpsl
and
rcl
jge
sbb
lahf
push
and
sbb
pop
mov
stc
add
jb
inc
fnstenv
push
shl
dec
es
repz
mov
mov
cld
clc
movsl
iret
rclb
cs
adc
inc
and
cmpsb
pop
jno
inc
sbb
cmp
add
xor
in
scas
lret
and
popa
pop
aaa
push
push
stc
outsb
push
ret
pop
cmp
cmpsb
call
add
out
sbb
out
movsl
out
aas
addr16
shl
jmp
js
ljmp
sbb
jmp
sub
xor
in
pop
add
xor
or
jbe
mov
sbb
and
jo
cmp
mov
scas
stos
nop
and
cmpb
ljmp
mov
fwait
push
aaa
xor
mov
pushf
cli
insb
dec
lcall
dec
cmpb
inc
xor
shlb
lahf
sti
xchg
sbb
aaa
in
add
int3
pop
daa
aad
inc
loop
mov
jmp
test
fwait
jge
adc
dec
js
pop
sbb
les
pop
data16
sbb
push
enter
sub
lcall
pop
in
xor
stc
jne
dec
shlb
xor
ret
mov
je
mov
push
cmp
jnp
add
mov
out
rcl
mov
call
lea
into
jb
push
ljmp
cli
outsb
fisttpll
mov
and
cmp
mov
or
xchg
push
dec
mov
pop
cs
movsb
enter
sbbl
pushf
jle
jmp
insl
jbe
inc
mov
sbb
sti
mov
adc
test
xchg
in
cmp
mov
out
xlat
ja
iret
inc
outsl
cmc
int
popa
out
inc
sub
je
sbb
das
inc
xchg
mov
and
ret
push
dec
lret
mov
and
jecxz
jae,pn
rorl
sub
lock
push
jae
addl
or
pop
and
xchg
lock
ss
xor
test
dec
mov
sbb
aam
cmpsb
stc
das
nop
cmp
inc
xchg
inc
stos
sbb
jnp
xchg
arpl
das
push
adc
addr16
sbb
pop
push
icebp
sarb
je
loope
sbb
scas
cld
cs
cmp
lahf
mov
or
sti
scas
push
push
loopne
mov
clc
inc
push
and
ds
and
mov
fmull
aam
iret
arpl
push
sub
clc
cld
mov
mov
jb
mov
pop
xor
adcb
or
hlt
adc
cmp
out
dec
cmpsb
sub
lahf
jle
pop
mov
lds
xchg
pusha
add
xlat
test
cltd
sub
movsb
xchg
inc
neg
xor
push
daa
sahf
mov
popf
cmpsb
pop
xchg
daa
or
lret
test
out
popa
je
mov
push
pop
dec
inc
rcrl
push
jle
and
fwait
mov
cmp
sbb
cwtl
cs
imul
stos
push
mulb
daa
mov
imul
or
or
inc
dec
movsl
mov
push
xchg
cmp
push
xchg
dec
xchg
scas
movsb
bound
cmp
mov
repz
mov
pop
cmc
cmp
inc
shl
push
jns
int
out
mov
push
aas
dec
sub
jae
dec
aam
jne
add
mov
jp
jmp
and
test
incb
jae
pop
mov
xchg
int
out
data16
aam
and
and
xchg
inc
and
aas
fs
jne
out
pop
orl
xchg
cld
push
mov
daa
and
in
enter
push
sbb
mov
mov
ds
enter
rorb
mov
lock
aaa
pop
cltd
inc
pop
xchg
aad
lds
push
or
and
aad
dec
ljmp
out
pop
into
sbb
rol
jmp
jecxz
mov
lret
stos
movsl
xchg
and
test
jo
mov
pop
dec
push
xchg
jmp
enter
dec
insl
dec
nop
add
jae
mov
inc
shll
and
scas
subl
orb
test
push
lds
stos
dec
arpl
addr16
out
out
es
pop
sub
and
imul
in
push
insl
aas
rorb
pop
adc
repnz
cmpsl
cmpsb
scas
loopne
dec
psubw
mov
sub
fwait
idivb
cmp
or
in
cmp
jo
cmp
xor
dec
in
jp
sub
inc
pop
dec
movsb
dec
mov
xchg
test
sti
and
out
push
pop
sbb
inc
rcrl
mov
or
xchg
inc
mov
lcall
int
mov
jnp
in
push
and
ret
xchg
into
movsl
adc
ret
cmp
stos
cwtl
push
sahf
push
xchg
dec
movsb
and
dec
aas
ja
fwait
and
out
aad
push
mov
lahf
pop
rcl
cmp
sub
inc
mov
inc
xchg
push
add
inc
inc
pop
int
xchg
or
push
pop
mov
and
loopne
movsb
std
mov
push
or
in
lock
fisubrs
incl
gs
stc
add
loope
in
add
push
pop
xchg
push
jae
repnz
loop
pusha
mov
xchg
jb
xlat
push
int
jnp
lods
mov
cmp
pop
xor
stc
push
mov
daa
lock
cmp
mov
cmp
daa
xchg
mov
ljmp
push
hlt
ljmp
dec
mov
fcoml
jb
shll
xchg
notb
pop
sub
mov
and
push
fcomip
clc
or
jmp
add
push
ljmp
dec
data16
cmp
jmp
int
fists
push
mull
roll
or
inc
mov
popw
push
lods
test
lods
ja
into
adc
xor
or
mov
fs
arpl
sbb
sub
addr16
jnp
orb
adc
xchg
cli
xchg
adc
mov
fsubs
sbb
jmp
movsl
mov
in
or
mov
lcall
or
cmc
pop
push
cs
int
scas
or
sbb
stc
jno
popa
jl
xor
cld
xorb
outsl
jnp
jnp
jne
push
xor
adc
cmpb
ficomps
cmpsb
push
adc
xchg
push
insb
sub
imul
lret
or
add
or
add
dec
aas
leave
and
les
fwait
or
pushf
mov
inc
and
data16
inc
sbb
pop
mov
lahf
int3
dec
push
adcl
inc
mov
push
push
inc
jnp
adc
pop
or
andb
push
cli
pop
mov
psllw
fnstcw
movsl
movsb
je
test
add
test
push
lret
mov
cmpsl
insl
mov
loopne
enter
mov
or
cmp
and
mov
push
out
clc
rorl
lret
sti
pusha
rcll
pushf
pop
add
push
sub
mov
add
es
jecxz
and
arpl
mov
mov
dec
jo
pop
shl
pop
adc
sub
mulb
inc
aas
lods
cld
push
dec
cmp
adc
mov
sti
ds
lods
rcl
fcomps
icebp
rcrb
dec
or
mov
loop
or
popa
xchg
inc
imul
out
jge
cmp
enter
aaa
test
mov
fcom
and
mov
es
inc
lds
fdivp
cmp
mov
inc
jp
add
jmp
je
pop
or
cmp
pop
shlb
hlt
and
into
inc
jnp
adc
int3
jge
outsl
mov
lahf
cmpsl
mov
pushf
add
mov
scas
pop
jecxz
mov
shll
imul
sbb
mov
inc
pop
cli
lods
sbb
sub
mov
or
mov
or
aaa
pop
rorl
hlt
out
adc
xchg
scas
and
or
push
xor
mov
push
pushf
and
ljmp
cli
mov
nop
xor
pop
dec
and
jnp
out
outsb
xchg
cmp
jge
imul
jbe
lret
cs
movsl
test
push
ds
stos
loop
add
cmpsl
mov
sub
cmp
jge
loop
xchg
adc
mov
clc
pusha
xlat
sbb
push
arpl
movsl
insb
sbb
pop
inc
mov
mov
sbb
mov
clc
int3
add
aad
cmp
inc
xchg
fldcw
mov
xchg
push
adc
adc
jle
push
sbb
mov
lret
sahf
rorl
nop
or
and
pushf
jecxz
ret
adc
sub
clc
enter
adc
mov
jmp
dec
jg
out
mov
adc
adc
xchg
stos
cld
jp
pop
cli
arpl
adc
mov
and
xchg
adc
xchg
inc
jmp
popa
fisttpl
mov
dec
and
lds
adc
lret
es
push
bound
into
sbb
xchg
pop
cmp
lods
dec
jmp
xchg
lahf
dec
mov
std
xor
popl
mov
or
pop
leave
push
ret
lds
mov
mov
jns
int3
icebp
imul
xchg
push
imul
and
aas
xchg
cld
lret
push
sbb
bound
sti
test
jge
imulb
mov
mov
and
cwtl
addr16
mov
add
aas
cld
inc
das
xchg
aaa
aaa
xlat
ja
cmc
mov
fidivrl
loope
cs
icebp
sarl
negb
push
stc
cmp
dec
jl
lret
movsb
lahf
mov
in
jo
or
jecxz
inc
inc
leave
imul
sub
jae
outsl
repnz
xor
jl
ficoms
xor
lea
aaa
lock
add
xor
dec
fwait
les
xchg
xchg
mov
in
pop
dec
stos
xchg
popa
dec
push
lcall
or
push
test
orb
lea
in
repz
adc
mov
imul
andb
jp
iret
jo
jg
jno
clc
ss
and
out
and
hlt
cmpsb
scas
in
arpl
add
jae
int
inc
and
push
add
subl
and
push
loope,pn
or
push
mov
adc
ret
inc
addr16
mov
jne
shr
push
mov
data16
and
cmc
mov
inc
int
fdivrl
adc
xchg
and
sub
pop
inc
dec
lds
je
xchg
push
add
iret
dec
mov
xchg
je
aad
adc
jmp
or
bound
jne
sub
sbb
and
cli
xor
nop
jno
lds
xchg
imul
outsb
and
push
out
xor
nop
in
mov
imul
xlat
and
sbb
int
scas
push
cmp
or
dec
sub
adc
shll
and
push
outsb
mov
fs
inc
inc
sbb
push
int
into
xor
xchg
sub
xlat
push
mov
cltd
adcl
cmp
cmp
outsb
nop
mov
add
lahf
fwait
inc
sbb
dec
mov
pop
sbb
xchg
xor
sahf
push
loope
mov
xor
addr16
mov
int
add
ret
cmp
shll
mov
or
lahf
dec
loopne
push
push
fildl
enter
loop
das
add
iret
daa
fdivp
mov
xchg
dec
les
fnstsw
inc
adc
or
das
jecxz
ds
sub
fldcw
out
ds
add
in
aam
in
negl
pop
outsl
jno
loopne
sbb
sbb
test
sub
add
int
rcll
scas
std
mov
and
mov
fsts
mull
inc
loop
mov
dec
xor
push
pushf
test
inc
sti
repz
cltd
add
movsl
inc
mov
jns
stc
icebp
cmp
imul
iret
xchg
and
cmp
out
mov
out
lcall
test
sub
add
push
xchg
push
xchg
int3
shr
xlat
out
xor
es
jb
in
std
xchg
dec
ret
lods
sbb
mov
cmp
icebp
jg
dec
xor
dec
movsb
sub
shl
adc
shl
inc
test
xchg
mov
loop
mov
mov
and
xorb
sti
mov
stc
das
mov
mov
out
dec
in
cmpsl
popf
push
jle
xor
pop
push
shr
inc
inc
adc
pop
mov
jecxz
cmpsb
fmuls
mov
mov
fwait
adc
pop
or
insl
sbb
pop
xor
repz
cmp
mov
je
rorb
stos
fwait
outsb
cmp
and
arpl
and
data16
jp
xchg
xchg
or
cli
sub
push
jb
into
jae
xorb
outsl
jnp
test
pop
mov
push
push
ss
push
cpuid
setle
and
cmp
sbb
ret
mov
inc
lods
push
or
pop
scas
push
lea
rcrl
adc
cmp
lock
adc
push
fstl
sbb
xchg
in
int3
inc
mov
mov
lahf
mov
test
fsubs
xor
inc
xchg
fldenv
js
pop
dec
xchg
and
jno
inc
mov
or
bnd
test
in
xchg
in
dec
adc
cmp
dec
loopne
pop
pushf
lds
adc
jae
loop
xchg
int3
sub
and
xchg
mov
xor
cld
and
leave
push
xchg
sub
sub
jbe
add
std
arpl
sub
or
out
xorb
outsb
mov
pop
in
or
andb
sbb
adc
inc
scas
push
jo
dec
xchg
sbb
test
ficoml
adc
xchg
addr16
loop
cmp
sub
sahf
jp
xchg
sub
bnd
and
inc
jl
mov
push
lret
sbb
jo
push
into
ds
ret
cmp
fisubl
adc
lahf
es
daa
rorb
adc
push
cld
and
movsl
dec
inc
rclb
push
xchg
sbb
rcl
fstpt
pushf
jle
add
xor
push
sbb
sbb
movntq
ret
in
adc
sbb
int3
fwait
and
js
or
or
cmc
xor
xlat
sub
jns
scas
xchg
arpl
sbb
and
sub
push
mov
fwait
xchg
rcrl
mov
xchg
jno
sub
sahf
or
imul
cmp
pop
jp
out
push
iret
scas
stc
aaa
xchg
int3
xchg
int
inc
jbe
jle
pop
push
sub
pop
mov
mov
aad
imul
and
push
lds
mov
add
xchg
mov
sub
xor
lds
sti
call
les
sbb
jl
pop
or
stos
adc
adc
jmp
cmpsb
mov
lret
pop
sub
outsb
pop
xor
add
mov
cld
daa
je
adc
fs
es
movsl
div
cltd
sub
fs
mov
stos
mov
jl
loop
aam
aad
stc
push
test
push
xchg
int
mov
dec
jnp
sarb
out
xchg
add
xlat
les
loopne
call
jbe
or
andb
dec
inc
dec
test
movsb
clc
lahf
sti
inc
xchg
test
xchg
add
loope
fidivl
std
hlt
enter
loop
cli
push
pop
lcall
pushf
rorl
sahf
xchg
push
xor
dec
mov
jb
ret
or
repz
ljmp
pop
cltd
scas
or
add
dec
stos
jb
dec
lods
xchg
push
enter
add
xor
xor
out
push
stos
jne
dec
test
fcmovne
lea
sub
int
sbbb
jle
lret
push
ss
mov
or
insl
icebp
sub
add
add
cmp
aaa
cld
xlat
add
aad
xor
dec
sub
sbb
xchg
jne
sti
sub
icebp
in
add
fldenv
pop
jae
add
sbb
fists
dec
add
jnp
sbb
mov
data16
int3
adc
int
pusha
div
jg
jl
push
mov
mov
aaa
xor
xor
push
loopne
lahf
mov
mov
mov
int
cli
add
dec
xorl
pop
lods
cmpsl
dec
adc
sbb
adc
mov
add
xor
ljmp
fcomps
cli
sbbb
dec
push
push
cmp
lock
testb
lds
shl
nop
xchg
push
bound
arpl
sub
sbb
push
push
in
jp
ss
push
pusha
pop
cmpsb
std
adc
jg
inc
mov
sbb
repnz
cmpsl
sub
out
mov
imul
test
dec
lods
ljmp
mov
cli
adc
cmp
call
adc
mov
adc
xor
dec
jo
xchg
icebp
jnp
push
mov
addr16
cmc
inc
sub
inc
fistpl
dec
xchg
pop
scas
into
fstps
push
and
sbb
sbb
mov
gs
popf
jns
pop
mov
mov
call
jmp
push
xor
idiv
std
sbb
adc
les
fucomp
fistl
loop
push
inc
add
push
lret
fwait
push
popl
or
popa
bound
inc
ds
xchg
add
xchg
push
pushfw
push
outsb
push
fs
shl
mov
aas
xor
scas
xchg
loopne
outsl
and
out
mov
mov
out
cmp
jp
mov
orl
dec
into
mov
mov
xor
popa
pop
aaa
mov
mov
jg
xor
dec
cmc
adc
pop
lret
jmp
cmpsb
stc
pop
jg
inc
sahf
push
dec
rorb
cld
or
sub
bound
or
lret
leave
inc
roll
xchg
mov
gs
pop
insl
shlb
stc
xchg
xchg
scas
jg
psrlw
int3
sbb
dec
repnz
dec
dec
adc
xor
mov
mov
cmp
sub
cltd
in
stc
jnp
imul
pop
jmp
loopne
jge
push
outsb
fxch
push
movsb
mov
xor
jge
cmc
xchg
jne
shlb
sbbb
in
movsb
movsb
or
aad
mov
es
xchg
xor
repz
pop
push
aad
lea
pop
sbb
fmull
cld
lock
nop
or
sbb
outsl
jb
lock
jne
iret
mov
lahf
test
ret
push
insb
lea
jo
cmp
or
xchg
push
inc
dec
cmpsb
pushf
mov
sub
lret
jmp
push
cmp
sbbl
cs
jge
dec
jne
popf
inc
push
bound
jge
mov
or
aas
mov
mov
xchg
add
testb
int3
jge
jecxz
fs
cmp
int3
lods
push
dec
jb
add
xchg
dec
add
sub
insl
mov
add
jge
mov
xchg
push
inc
aam
push
or
mov
push
cwtl
clc
pop
pop
mov
inc
out
or
pusha
lret
and
das
sbb
rorb
repnz
push
or
in
out
idivb
jae
mov
js
imul
test
mov
jecxz
and
jp
jns
push
push
nop
or
push
sbb
fildll
mov
enter
shrb
cmpsl
sub
sarl
mov
inc
mov
push
sbb
mov
lods
sbb
call
stc
push
xchg
sbb
roll
mov
out
dec
pop
xor
rorl
cltd
es
dec
nop
jns
mov
cmp
push
cmp
xchg
mov
mov
fisttpl
mov
pop
inc
mov
jnp
jp
lock
cltd
add
test
imul
pushf
xor
scas
dec
sbb
jnp
je
dec
jnp
bound
out
call
jo
test
mov
int
inc
cmp
addr16
sbb
repz
sbb
mov
dec
xor
in
aam
lock
stc
lret
xor
lods
xor
pop
and
cmp
out
push
xor
push
pop
sub
ja
insl
mov
pusha
pop
movsl
jecxz
mov
fs
mov
pop
dec
out
les
shrb
shll
and
cmp
test
popa
jecxz
pop
xchg
sub
daa
pushf
data16
sbb
sbb
dec
cmpsb
xchg
push
mov
icebp
es
inc
inc
mov
mov
shlb
imul
iret
imul
or
pop
lock
lret
mull
pop
cli
sbb
ja
sbb
and
xor
mov
popa
fdivs
andb
or
push
cmc
outsl
aaa
jge
mov
xor
mov
icebp
inc
fwait
arpl
mov
inc
jnp
jbe
add
sbb
jg
jno,pt
out
cwtl
shlb
int
pop
mov
mov
cmp
cltd
lods
vcmpgtss
pop
and
fcompl
jo
cmp
push
pop
shll
out
sar
repz
adc
push
cmp
adc
or
pop
xor
inc
roll
sub
mov
pop
sbb
aad
lcall
iret
xor
mov
adc
add
push
std
cld
int3
cwtl
cmpsl
int
fs
sbb
inc
or
or
jecxz
inc
iret
sbb
push
sbb
in
dec
iret
out
fdiv
dec
mov
sti
loopnew
and
bound
shlb
mov
ret
int
sub
adc
jmp
mov
mov
gs
push
jae
outsb
nop
inc
cmp
shll
dec
int
dec
into
bound
ljmp
ret
cmpsb
and
cmpsb
xchg
cltd
js
xor
cmp
addr16
mov
loope
push
cltd
push
addb
repz
popa
push
das
push
dec
inc
push
inc
inc
xchg
in
adc
inc
mov
hlt
add
std
mov
or
adc
xchg
inc
scas
in
add
stos
orb
leave
pop
jnp
sti
dec
add
push
sahf
lock
mov
cmpsl
stos
mov
pop
add
or
sub
int3
xchg
mov
or
aas
scas
push
add
test
lret
inc
es
lret
imul
in
sbb
in
mov
jnp
or
adc
popf
lret
inc
lods
pop
adc
ror
stc
jmp
inc
popf
xchg
lret
jp
adc
jno
iret
mov
pop
mov
xchg
push
xchg
into
into
jbe
jle
sub
rorb
out
sub
inc
sub
jbe
xchg
nop
repz
or
sahf
mov
into
push
jle
lock
push
pushf
sub
fcmovnb
test
cmc
test
movsb
adc
mov
mov
mov
outsl
jecxz
pop
popl
sbb
push
jb
push
sarl
test
outsb
lock
and
in
adcb
dec
lahf
push
cli
pop
mov
js
fs
stos
pop
jb
adc
mov
mov
aad
ret
adc
pop
imul
cmp
cltd
ja
pop
scas
imul
push
in
jle
es
pop
jae
sub
or
mov
repnz
cld
inc
in
enter
push
rorl
aas
add
sbb
in
pushf
xchg
jp
push
and
je
cmp
cmpb
popa
pop
sub
dec
pop
inc
imul
mov
rorb
lret
cltd
outsl
xchg
sti
jl
adc
cld
jmp
fldcw
cmp
daa
mov
js
fld
dec
inc
jo
test
add
cmpl
aam
test
inc
xchg
xchg
dec
lret
lea
adc
popa
test
mov
mov
push
and
jl
fstl
loopne
jle
fld
mov
das
decl
in
fwait
and
jb
mov
shlb
bts
jne
and
mov
inc
dec
mov
mov
rep
dec
adc
sbb
lods
shlb
jo
fimuls
mov
aad
or
pop
lods
mov
hlt
push
aaa
xor
inc
inc
cmovae
adc
mov
xchg
je
pop
fnstenv
xor
fmulp
or
jne
bound
or
iret
je
das
push
stos
test
mov
adc
mov
xorb
mov
jp
aam
inc
push
xchg
out
outsb
mov
into
int
xorb
ret
out
ljmp
jmp
pop
sub
jge
sbb
fldl
xchg
mov
in
xchg
push
test
push
aaa
es
je
and
xor
xlat
loopne
aam
psubsb
mov
mov
loop
inc
imul
mov
fistpll
adc
mov
xor
mov
add
in
pop
iret
and
lods
ret
pop
mov
addb
stos
push
test
lods
jo
push
inc
mov
lahf
lahf
adc
jl
xchg
xchg
outsl
jmp
js
jnp
pop
sbb
mov
lods
jns
jo
cmp
inc
xchg
sbb
xor
jns,pn
cld
loop
jle
jp
dec
and
xchg
cmp
mov
clc
movsb
sub
iret
xchg
xor
mov
popf
jae
ficomps
cs
sbb
push
inc
out
loop
cmp
ja
popl
mov
test
add
loopne
push
test
repnz
pop
int
repz
mov
daa
aad
mov
out
cs
jns
jb
add
int
rcll
pop
or
cmp
push
je
dec
mov
xchg
pop
push
mov
add
mov
sar
fildll
pop
and
outsb
roll
jecxz
mov
pop
js
imul
xor
repz
xchg
and
mov
add
and
test
mov
dec
int3
xchg
xor
push
stc
movq
cwtl
xor
xor
add
inc
subl
ss
adc
movsl
fld
mov
inc
lock
adc
jecxz
repz
add
outsb
inc
push
aaa
adc
jne
mov
pop
loop
mov
je
popa
cmp
sbb
inc
xchg
out
cmp
xchg
cmp
frstor
out
enter
aad
fwait
dec
jle
push
inc
aas
mov
nop
icebp
mov
mov
je
push
outsl
es
aad
push
sub
dec
dec
cmp
adcb
mov
outsb
mov
fwait
sbb
inc
out
adc
push
sbb
pushf
inc
pusha
jg
imul
adc
mov
jge
mov
dec
enter
cmp
cmp
test
les
lcallw
inc
out
fnstsw
and
lcall
pop
dec
js
xchg
loopne
mov
or
add
call
and
cmp
mov
in
mov
nop
push
mov
lock
jmp
subl
subb
inc
cmpsl
imulb
lahf
sub
lcall
mov
dec
and
fstpt
lret
inc
sub
scas
outsb
sub
ja
iret
btc
mov
xchg
sub
sbb
aad
inc
stos
movsb
push
enter
lret
cmp
add
fs
sbb
repz
jne
cmpb
pop
pop
and
test
sbb
daa
mov
mov
mov
mov
lds
xchg
inc
notl
mul
fsubrs
xor
mov
sti
sub
inc
ja
jecxz
pop
jmp
sub
sbb
dec
popf
xchg
idivb
cmc
repnz
mov
push
mov
popa
jbe
jle
mov
movswl
inc
adc
repz
std
ja
adc
sbb
lret
roll
push
lcall
mov
xlat
aaa
repz
mov
mov
adc
sub
sbb
sahf
cmp
xor
mov
pop
adc
push
jbe
cwtl
lods
sbb
mov
fstpt
ja
sub
bound
mov
sahf
adc
out
pusha
xchg
mov
je
cmpsb
adcl
mov
inc
pop
dec
sub
orl
jmp
dec
test
stc
jnp
xchg
mov
fdivl
add
loope
sbb
mov
mov
insb
lock
or
cmp
sti
xor
cwtl
dec
pop
xor
sub
inc
mov
dec
mov
mov
mov
mov
mov
push
lret
test
imul
mov
int3
inc
fs
push
or
cmp
fmull
xchg
loope
push
popf
loopne
mov
mov
mov
mov
jae
dec
xchg
push
pop
orl
inc
xor
roll
push
ljmp
xchg
adc
mov
cmp
push
add
xor
sub
xor
jge
icebp
xchg
sbb
fs
lret
aad
jbe
mov
sbb
cmp
xchg
inc
inc
mov
and
sahf
xchg
cltd
xchg
sub
inc
cmpsl
cmp
faddp
mov
mov
cld
icebp
xor
pop
xchg
push
ljmp
and
das
loope
jo
pop
cmp
std
push
jno
push
add
xchg
sbb
ljmp
sbb
sbb
test
mov
call
insl
or
adc
nop
mov
or
xchg
or
mov
les
les
cmpsl
push
les
cltd
jp
test
mov
cwtl
in
mov
in
cmpsb
inc
push
and
cmpsb
inc
push
call
and
push
je
xchg
fmull
subl
push
xchg
stos
loopne
fdivs
add
adc
pop
inc
cli
jmp
addb
outsl
dec
fbstp
fstpl
repz
dec
cmp
sub
jns
stc
jge
cli
scas
in
sbb
push
xor
ljmp
sbb
repnz
clc
mov
movsb
sarl
xchg
aad
lds
xor
inc
jmp
and
mov
jg
cmp
lret
shr
mov
or
icebp
inc
fldt
fidivrs
cmp
aam
outsl
xchg
xor
repnz
orl
pushf
nop
mov
xor
je
pop
iret
inc
mov
sarb
cmp
xchg
mov
mov
test
or
pop
adc
shrl
cmpsb
lahf
test
cmp
dec
in
xor
mov
fucomip
inc
sub
jmp
clc
dec
rep
in
pushf
fistpl
fsts
cmc
in
scas
sub
fcmovbe
xor
xor
push
mov
cmp
les
xor
jnp
sti
jp
mov
pop
xchg
ljmp
adc
add
jb
cmpl
or
sub
pusha
xchg
push
sub
dec
inc
pop
xlat
out
pop
ja
xchg
shll
lock
pop
pop
mov
adc
js
fidivrl
pusha
int3
dec
shr
icebp
andl
sub
jecxz
xor
out
mov
xchg
pop
cmp
dec
out
jp
cmc
imul
aad
test
int3
add
movsl
mov
pop
jg
xchg
roll
ret
xchg
cmc
pop
inc
push
dec
clc
js
mov
and
mov
dec
mov
dec
lods
adc
jno
imul
comiss
jge
or
ds
aam
scas
ja
cld
movsl
popf
das
inc
cmp
mov
in
nop
pop
sub
cld
dec
mov
mov
push
gs
test
mulb
fisttpl
mov
xchg
sub
add
adc
cmpb
mov
xlat
jp
jmp
out
mov
stc
in
dec
aas
mov
dec
sub
test
lea
out
lret
jnp
cmp
scas
mov
sahf
push
enter
push
insl
jbe
mov
into
adc
int3
add
sub
adc
es
imul
mov
out
jl
fimuls
mov
test
sub
push
shll
scas
insl
mov
lods
inc
hlt
fiaddl
idiv
scas
loopne
xchg
aad
repnz
cli
ja
mov
xorb
scas
mov
or
adc
dec
data16
subl
mov
or
out
cmpsl
push
xor
pushf
mov
mov
add
ljmp
add
inc
ljmp
sub
mov
and
movsb
xor
xorb
not
imull
pop
push
add
dec
or
rcl
stos
test
pop
jge
loope
int
out
popf
test
sub
jle
test
sub
push
adcl
mov
xor
call
mov
mov
jns
pop
jle
dec
mov
test
inc
fcoml
mov
orl
xchg
mov
addr16
dec
test
fsubrs
jg
pusha
xchg
sbb
ret
pushf
mov
dec
enter
mov
in
roll
iret
mov
push
in
loope
xchg
push
in
popf
add
shrb
fst
stos
add
mov
push
sub
pop
shlb
and
or
mul
cmpsb
push
scas
inc
insl
jns
rcrb
sub
xchg
rcrb
sbb
sub
repz
clc
cmc
in
mov
leave
jbe
addr16
rcrl
mov
jo
lcall
es
push
push
sti
adcl
and
xchg
lret
shlb
fwait
icebp
out
mov
mov
shl
mov
idiv
push
push
jae
pop
repz
push
jg
lea
mov
adc
jmp
movsl
shlb
aam
dec
push
pop
or
pop
and
sbb
jp
sahf
push
addr16
jno
bound
adc
lods
mov
loopne
add
jl
lock
loop
imul
push
xchg
stc
in
jne
cmp
mov
add
add
sbb
mov
jns
inc
in
pop
dec
ret
lahf
add
adc
or
pusha
push
jmp
int3
orl
and
mov
mov
mov
jae
cld
jg
mov
mov
nop
xor
sub
push
addl
shl
hlt
or
pop
cmpsl
outsb
std
and
push
std
cmpsl
add
mov
or
imul
push
stos
scas
sbb
movsb
daa
mov
pop
and
push
fs
shrb
neg
fwait
add
popf
out
mov
cmpsl
cs
xchg
movsb
scas
mov
mov
mov
inc
ss
fisubrs
js
inc
xchg
insb
in
das
xor
jmp
cmpsl
pop
jle
add
lcall
repz
jb
fwait
dec
into
arpl
sub
add
aaa
push
xchg
scas
outsb
je
inc
jg,pn
jns
inc
xchg
inc
fmul
adc
pop
mov
pop
movsl
insl
repz
aas
cmp
dec
jb
daa
mov
lcall
data16
stc
rclb
adc
xchg
sub
mov
aaa
imul
fdivrl
fwait
rcl
or
clc
mov
cmpsb
cld
adc
mov
mov
cmpsl
lcall
sub
add
cmp
lret
stos
jne
push
js
je
lahf
add
je
sub
xor
orb
inc
call
lahf
fs
sub
push
pop
dec
mov
popa
mov
sub
lcall
sarl
jl
movsb
sbb
dec
mov
scas
cmpsb
out
or
int
ds
scas
inc
ss
arpl
adc
push
insl
fldt
adc
imul
sub
aas
push
repz
jmp
je
ja
fisubrs
inc
test
cmc
or
cmp
jns
adc
and
add
iret
int3
fists
testb
mov
loopne
mov
or
out
arpl
out
pop
add
push
jp
sbb
insl
leave
lea
stos
inc
jg
in
unpckhps
mov
popa
xchg
mov
mov
push
cmp
xchg
sbbl
or
inc
pop
icebp
ss
pusha
sub
jbe
or
adc
scas
lret
int3
shlb
sbb
jle
adc
or
and
push
data16
inc
popa
adc
xor
mov
sub
bound
pop
arpl
push
xchg
scas
sub
lds
mov
aad
daa
cmpsl
divb
imul
enter
jl
xchg
xchg
xchg
jb
mov
negb
cmp
test
inc
jg
jnp
outsl
js
mov
lahf
and
pop
dec
add
mov
sbb
hlt
inc
cwtl
pop
adc
adc
or
cwtl
xor
adc
out
add
push
or
adc
push
sub
out
mov
icebp
pop
std
lea
ljmp
mov
dec
imul
xchg
repz
inc
add
ret
sbbl
sahf
sbb
sti
arpl
xchg
cmp
inc
mov
jge
push
scas
push
das
or
rep
cmp
pop
inc
les
imul
push
bound
and
inc
test
xlat
push
aam
repnz
pop
dec
test
jmp
rolb
test
xchg
dec
ljmp
xor
call
mov
pop
leave
or
mov
insb
and
aad
jnp
fnstcw
push
clc
rcll
mov
adc
dec
cmp
cmpsb
mov
mov
dec
fstps
insb
cmp
les
and
data16
mov
pusha
int3
pop
jle
inc
mov
je
mov
sbb
jne
in
shll
sahf
je
lods
pop
outsb
rcl
int3
sbb
sub
pop
lcall
cmp
pop
and
mov
mov
sub
icebp
and
das
je
lret
and
mov
arpl
lahf
orl
mov
shlb
push
push
push
and
stc
bnd
lods
in
dec
mov
pop
mov
mull
and
sbb
cmp
pop
dec
scas
push
scas
repnz
adc
jge
push
nop
cmp
arpl
add
cmp
cmp
test
pop
lods
stc
jb
scas
adc
mov
jl
mov
inc
jecxz
ret
dec
loope
das
repnz
cmpsb
mov
call
jno
jmp
pop
ljmp
mov
or
jle
pop
cmpsl
push
lods
push
adc
rcrl
mov
or
cmp
dec
jae
mov
and
and
push
int3
ja
aam
js
cwtl
movsl
sub
xchg
push
insb
mov
ficoms
add
leave
dec
fistpl
fs
xchg
popf
jne
test
fwait
arpl
fildl
xchg
dec
bound
lret
mov
adc
mov
test
mov
pop
sbb
pusha
mov
ret
fdivr
adc
mov
ret
movl
dec
push
inc
and
sub
stos
jg
xchg
adc
mov
jne
fucom
das
jge
test
dec
pop
mov
cmp
loop
ja
jne
mov
mov
jae
imul
lahf
jp
fidivrs
hlt
insl
push
push
mov
pop
mov
in
lret
test
xorl
int
pop
clc
adc
inc
hlt
mov
sub
aas
int3
mov
xchg
jno
xchg
jmp
push
fnsave
xorb
add
call
xor
enter
lods
ret
lods
movl
pop
and
fldenv
out
fimuls
xchg
ljmp
push
in
fstps
add
hlt
push
repnz
xor
xorl
xor
adc
int3
jb
lods
push
xchg
pop
mov
cmp
imul
jp
add
adc
test
cltd
popf
fstps
xor
add
mov
mov
push
adc
push
outsb
or
or
fs
movntps
jecxz
inc
loopne
popf
sar
imul
sar
lods
das
push
call
mov
sbb
leave
insl
xor
jo
das
mov
mov
mov
repz
popf
lcall
adc
iret
mov
push
xchg
pop
mov
enter
jo
rcll
or
xor
pop
je
cmp
mov
mov
inc
mov
aaa
pop
push
add
outsb
mov
stos
or
mov
sti
sbb
mov
incl
dec
sub
lea
jno
leave
adc
testb
shrb
fstl
popa
adc
sub
xorl
leave
and
mov
test
push
cmpsb
mov
and
xor
cltd
inc
aaa
or
mov
into
test
test
inc
aad
push
sbb
pop
leave
inc
aas
xor
js
scas
adc
arpl
xor
scas
mov
dec
jae
sub
jae
mov
popf
sbb
js
pushf
sbb
insb
fwait
sti
mov
test
jge
sub
outsb
jne
xchg
adc
inc
arpl
xor
filds
mov
sbbl
movsb
push
lods
ret
and
loop
sbb
pop
lea
daa
mov
jl
cmp
rorl
xchg
test
movb
mov
dec
dec
xor
xlat
mov
or
mov
jg
sub
dec
push
mov
xchg
add
aas
stc
push
dec
rcrl
fcomps
push
les
cmpsb
movsb
in
out
out
shl
jne
faddl
jbe
xchg
ret
loope
ja
or
std
mov
and
cmpsl
stos
add
or
imul
adc
aaa
mov
xchg
xchg
iret
popw
add
push
mov
xor
pop
dec
xchg
lahf
gs
dec
adc
mov
sahf
xchg
and
sub
outsb
leave
jge
les
dec
pop
sbb
addb
push
push
cmovl
xchg
mov
xchg
mov
push
cli
pusha
sbb
xchg
imull
cmp
out
pushf
lret
mov
pop
pop
fildl
cmp
sti
sbb
sbb
pop
pop
call
ss
into
int
lret
or
push
icebp
lret
fsubr
outsl
lret
sbb
inc
mov
xchg
jge
loope
add
or
fwait
mov
aad
xor
lods
add
pop
sub
and
test
je
mov
pop
pushf
int
pop
mov
std
fs
test
mov
gs
test
sub
cmp
lock
fstpl
fwait
xchg
mov
mov
inc
lds
mov
shrb
cmpsb
and
scas
or
cld
or
add
scas
scas
inc
inc
mov
lahf
mov
lods
cmp
mov
or
xor
sahf
push
jae
push
dec
fdivrs
and
and
bound
sbb
or
pop
ret
and
mov
cmp
pop
jno
movsl
mov
mov
push
pop
pop
mov
and
in
jae
outsl
orb
xor
xor
cmp
cltd
pop
cmova
sub
mov
shr
xor
test
popf
lcall
mov
xor
add
incb
or
aad
lret
inc
leave
out
ficoml
mov
jae
movsb
xchg
repz
push
arpl
adc
pop
jo
mov
rclb
fnstenv
sub
rorl
push
add
push
push
fnstenv
xchg
sbb
push
pop
test
ljmp
push
jmp
in
inc
je
cld
and
mov
push
inc
add
lds
dec
mov
addr16
pushf
stc
clc
push
inc
add
mov
pusha
cmp
xlat
scas
stos
xor
sub
cmpsl
or
adc
and
and
out
test
add
mov
in
jg
cmp
ljmp
mov
sbb
or
sub
sbb
push
adc
cmp
pop
outsl
xchg
or
jle
and
aaa
push
jne
dec
nopl
mov
or
shr
int
adc
jb
ljmp
cmp
cli
mull
dec
xor
or
push
cmp
adc
test
push
lock
aad
loope
inc
lods
ja
add
shll
aad
add
je
pushf
sbb
bound
movsb
aas
fistl
sahf
jne
sub
push
push
popa
cmp
xchg
addr16
sahf
push
inc
sarl
das
inc
cli
iret
or
fbld
cmpsl
daa
cmp
mov
push
lock
jnp
std
mov
cmp
stos
sub
bnd
fisttpl
xchg
push
xor
das
aaa
add
rcrb
jo
jnp
sti
pop
insl
adc
sbb
loopne
test
adc
daa
sub
decl
insl
inc
insl
sub
jp
fs
xchg
out
mov
pushf
push
in
mov
cwtl
clc
jmp
cmpl
pop
lock
dec
push
cmpl
sbb
and
test
in
addb
jo
inc
sub
rclb
push
xchg
sbb
stos
and
jg
decb
fnstenv
jo
cwtl
loop
xchg
xchg
in
adc
lcall
sub
fstl
test
rclb
mov
sub
mov
je
pushf
or
rcrl
add
pop
mov
sub
mov
push
dec
jo
fmull
repnz
mov
mov
mov
sub
inc
mov
mov
adc
and
fisubs
cwtl
add
cli
or
or
daa
std
xchg
lock
in
inc
add
sahf
push
lock
cs
lcall
sub
insb
inc
mov
inc
mov
test
sbb
jne
adc
daa
pop
jns
aaa
imul
enter
cmc
in
jmp
shrb
sti
ja
loopne
xchg
xchg
dec
mov
fcmovnb
xlat
into
pop
mov
repnz
add
push
dec
cli
adc
mov
mov
hlt
sub
sbb
xor
andb
and
rcll
mov
mov
mov
imul
hlt
test
repnz
adc
mov
cs
push
cmp
aas
xor
sti
inc
jl
pushf
jb
push
data16
ja
cli
xchg
inc
std
cmp
cwtl
out
popa
xchg
test
inc
js
decb
iret
mov
adcl
fucomi
fcoms
shll
jnp
aad
sub
sub
gs
inc
and
stos
pusha
outsb
add
cltd
mov
test
outsb
dec
pop
daa
and
stc
cmp
clc
sub
xchg
jne
adc
push
pop
clc
ljmp
adc
das
adc
xor
loope
stos
sub
mov
mov
xor
add
or
mov
aas
sti
inc
aam
sbb
pop
jno
insb
cmp
repz
mov
outsl
pop
lahf
sub
add
xchg
test
loop
push
cld
gs
pop
out
xchg
mov
push
ljmp
jo
imul
sarl
cmpsl
jne
aaa
sbb
xchg
lret
arpl
fsub
sbb
jmp
inc
ret
jmp
and
push
add
leave
push
and
stos
and
jb
stc
in
les
out
sbb
out
dec
cmpsb
insl
lret
fucomi
lds
sub
add
aad
pop
jecxz
js
mov
fnsave
fnstenv
jbe
pop
mov
jbe
insl
sub
popf
mov
push
mov
add
nop
and
fcomp
xchg
xlat
xlat
lods
adc
mov
cld
fldenv
jmp
add
push
lods
inc
lea
aam
cmp
push
and
xor
cmp
shrl
push
cmp
jb
inc
sti
adc
fcomp
xor
sub
aas
gs
push
inc
lock
movsb
or
pop
cmp
movsl
movsb
mov
mov
dec
mov
int
inc
les
mov
sti
push
das
push
and
push
adc
push
mov
filds
mov
adc
add
mov
jne
sub
dec
or
test
out
in
mov
sub
cltd
ljmp
cli
mov
int
loopne
testb
loopne
scas
dec
dec
int
mov
enter
push
push
les
push
xlat
femms
mov
push
adc
movsl
jno
sub
lods
loopne,pn
add
sub
pusha
sbb
jg
mov
rorb
cltd
je
jne
hlt
jae
in
lret
and
scas
mov
std
pushf
scas
adc
je
cmpsl
sbb
rol
push
sub
pop
testb
leave
insl
jnp
rcl
dec
push
pop
adc
sbb
mov
or
call
add
lcall
inc
or
xlat
in
add
movsb
mov
mov
div
pop
leave
rorl
bound
cli
insb
js
sbbb
out
sahf
adc
mov
outsb
stc
lods
push
or
in
sbb
mov
aad
out
add
mov
jb
cwtl
inc
push
lcall
ret
outsl
mov
jns
sbb
add
cmp
add
mov
insl
int
mov
call
cmp
sub
dec
clc
lods
mov
cs
call
mov
cmpsl
inc
popf
mov
xchg
jno
xchg
rcrl
lret
insl
in
scas
inc
adc
pop
cmpsl
add
push
push
sbb
lret
mov
add
mulb
test
pop
fmuls
pop
ret
xor
ds
insl
cwtl
push
and
fsubl
push
xor
jl
pop
jo
mov
push
shlb
jae
mov
jo
ss
int3
pop
lods
sub
ret
mov
scas
shlb
mov
arpl
pusha
in
fwait
xlat
hlt
jo
cmc
cmpsl
cli
outsl
jns
cmc
or
dec
repz
loope
bound
stos
negb
stos
jo
lahf
push
outsb
mov
pop
adc
lret
arpl
repnz
imull
cmp
out
loop
mov
jecxz
push
sbb
mov
sahf
dec
aad
movsl
jmp
popa
sbb
das
sub
ss
adc
jp,pn
into
pop
inc
ljmp
daa
ret
xor
sub
push
jb
test
sbb
loope
repnz
outsl
mov
cld
hlt
mov
mov
imul
loop
cs
jo
mov
sbb
aad
push
stos
loopne
jo
push
rorl
push
clc
adc
xchg
sbb
nop
sbb
mov
ret
xchg
or
mov
dec
xchg
leave
daa
outsb
sbb
and
je
xchg
jnp
jns
mov
mov
stc
js
ret
xor
pop
int3
sbb
cmp
pushf
sbb
sarb
int
enter
lret
gs
sbb
add
fsubs
jl
add
popf
aaa
mulb
mov
dec
lret
sbb
push
dec
cmpl
inc
sub
jp
push
sbb
test
ljmp
jle
rcr
bound
dec
popf
inc
fbstp
sub
add
and
popa
mov
push
dec
mov
mov
mov
add
jb
popf
mov
movl
inc
jns
xchg
mov
loope
dec
repz
int3
dec
inc
leave
lock
into
mov
xor
cmp
repz
xchg
inc
fsubp
mov
push
aaa
cmpsl
or
in
adc
pop
mov
xor
adc
push
inc
xacquire
aam
nop
ja
jnp
adc
sti
inc
sbb
int3
cltd
xor
sub
repnz
push
mov
adc
dec
jns
addr16
xor
insl
mov
hlt
mov
push
inc
int
jae
adc
out
pop
jnp
xor
mov
lahf
in
pop
movsl
push
clc
outsl
xor
sarl
sbb
mov
ss
lahf
sbb
les
loopne
dec
xor
hlt
arpl
ss
ja
bnd
lock
xchg
mov
out
sub
and
xlat
andl
mov
pop
or
das
mov
or
fldenv
in
lds
cmpsb
sbb
sbb
lods
push
dec
daa
outsl
les
mov
push
lret
je
push
jl
xchg
mov
adc
jl
dec
decb
test
fcoms
lea
xchg
push
push
leave
test
push
inc
cli
and
in
roll
inc
imul
cli
and
aas
mov
test
into
mov
addr16
pop
fisttpll
test
scas
mov
loop
adc
pushf
shll
cli
mov
xor
stc
jo
js
int3
mov
imul
int3
cltd
cmp
cmp
xchg
or
push
mov
lcall
addl
loope
and
and
mov
mov
xchg
fwait
ret
xor
add
add
or
sarl
out
sbb
sub
pop
mov
aaa
or
sti
sti
cmp
insb
mov
sbb
scas
in
int
dec
mov
fiadds
loopne
aad
mov
nop
and
fiaddl
pusha
mov
inc
aaa
xchg
mov
subb
or
xor
adcb
jae
dec
icebp
call
movsbl
sbb
verr
sub
mov
adc
lea
aaa
xlat
xchg
scas
pop
loop
mov
addr16
lds
xor
push
xlat
test
out
icebp
adcl
scas
popf
jg
popf
sbb
push
les
rcll
ret
lods
test
lock
insl
push
pop
sbb
aas
and
outsb
testb
aam
xor
pop
xchg
pop
xor
mov
and
mov
jp
out
xor
ret
jns
inc
lea
test
xor
fs
lret
fdivl
sbb
dec
xchg
int3
jno
fsubr
mov
adc
mov
inc
mov
aad
call
arpl
or
mov
xor
mov
or
mov
pop
mov
xchg
sub
xchg
or
stos
mov
fidivrs
push
add
xchg
pop
xchg
jae
push
test
negb
dec
jnp
or
jg
adc
ret
bound
or
std
int
sti
or
loope
in
pop
outsb
in
push
sbbl
mov
xor
inc
and
mov
jge
pop
arpl
jns
sbb
and
leave
decl
add
cmp
sub
mov
sbb
mov
mov
cs
test
pop
cmpsb
xor
iret
xchg
and
pop
shrb
enter
stos
xorl
cmp
rcll
mov
inc
inc
pop
movsl
jmp
out
test
arpl
movsl
lock
leave
or
sbb
test
into
xchg
lds
std
cmpsl
inc
xchg
pop
rcrb
push
or
in
xor
adc
inc
jno
sub
and
stos
imul
jb
jno
daa
xlat
add
lock
sub
or
aad
roll
fisttpll
pop
loop
pushf
lret
popf
orl
je
lods
push
mov
jmp
fisttpl
js
cli
addl
jl
or
or
mov
pop
or
int3
ror
mov
lea
cmp
jns
or
inc
repz
and
leave
push
sti
aad
popl
int3
mov
cmp
ficomps
push
xor
mov
pop
inc
mov
rep
orl
das
jnp
inc
fsubrp
or
int3
lods
jg
or
ds
imul
and
aad
push
xchg
mov
xchg
sarl
incl
popf
cmpsb
cmpsb
leave
adc
cmpsb
aaa
xchg
insb
enter
mov
loopne
fnsave
fsubl
cmc
xorl
jp
mov
popf
push
or
test
pop
fldenv
fsubrs
dec
lods
or
addr16
cmp
mov
pop
push
subb
insl
nop
sbb
xor
in
and
lea
push
lret
out
pushf
lcall
pushf
add
mov
xchg
les
repz
cmp
stos
cs
out
dec
sbb
adc
sbb
jge
imul
out
loop
scas
dec
jb
adcb
fists
inc
add
mov
or
add
push
inc
or
sbb
jmp
data16
and
ljmp
cmp
in
push
sbb
push
mov
inc
js
sbbb
sub
mov
dec
inc
out
subb
sub
pop
into
pop
sbb
scas
mov
clc
repz
pop
mov
xlat
testl
sti
test
insl
xchg
mov
lds
cmp
add
cmp
fadds
add
call
adc
dec
mov
xor
test
jo
lock
cmc
adc
cmc
mov
ret
jns
shlb
mov
fstpt
push
bound
in
cs
jl
in
sub
je
sub
notb
sub
inc
cmp
pop
ror
pop
and
jnp
das
dec
sub
xchg
mov
jecxz
pop
fcomi
in
cli
arpl
push
push
mov
mov
lahf
jp
sbb
push
jl
cmpl
or
pop
push
int3
add
ljmp
fstl
fistl
int3
ror
repnz
stc
jbe
test
adc
or
mov
inc
adcl
je
negb
in
sbbb
sub
in
loopne
ret
jle
cmp
mov
shr
je
cmc
xchg
mov
pop
loope
in
sub
mov
pop
ds
push
lods
testb
std
jle
orl
jg
pop
aad
out
test
adc
lahf
cmpsb
jge
out
enter
dec
mov
out
fisttpll
fs
cld
jmp
stos
jl
jecxz
mov
lcall
iret
gs
push
xchg
inc
rorl
and
mov
stos
mov
test
xor
ds
push
sub
icebp
sub
insl
xor
stos
sub
jle
jg
pop
sub
ss
mov
push
lea
pop
jg
sub
or
icebp
mov
repz
mov
push
scas
das
push
mov
test
push
rolb
inc
dec
xor
into
ret
cwtl
test
sbb
out
cld
sub
cmp
add
push
xor
xchg
or
pop
pop
adc
in
rorl
aad
fs
pushf
stc
mov
or
cmpsb
nop
and
push
out
add
jno
or
adc
add
stos
cli
sbb
jbe
mov
mov
cmpsl
pop
imul
jle
cli
mov
lods
adc
lcall
negl
lret
es
test
popf
repz
gs
and
lock
mov
xchg
in
int3
jmp
sub
pushf
stos
ds
sbb
out
jbe
mov
int3
and
jns
sbb
lcall
adc
push
lcall
xchg
dec
loope
je
xchg
int3
mov
jnp
adc
dec
mov
js
adc
pushl
out
out
push
stc
fistpl
movsb
xor
enter
xchg
in
cmp
cmp
mov
adc
imul
lret
mov
arpl
lahf
aam
movsl
ret
add
stos
scas
mov
shr
sub
cmpsl
sbb
mov
mov
sub
add
sub
es
js
jns
push
outsb
out
dec
sub
jb
pushf
mov
xchg
xchg
rcrb
jmp
ds
out
test
sbb
inc
sub
dec
ljmp
pop
aas
inc
jo
leave
fdivr
lret
add
or
pop
aas
flds
inc
lret
xchg
mov
call
testl
mov
sbb
lea
sub
xchg
stc
test
insl
int3
std
movsb
mov
mov
ds
jle
and
mov
fadd
scas
cld
sbb
xor
sbb
lret
and
into
xor
lea
add
mov
lds
lock
movsl
movsl
pop
outsl
xor
inc
inc
push
mov
sub
rorl
pop
jmp
xlat
push
mov
inc
dec
add
xchg
das
cmpxchg
jne
dec
push
dec
mov
mov
fcmovnu
cwtl
fs
repz
mov
mov
das
int
pop
xchg
mov
or
ret
aam
xor
cltd
pop
es
fbld
cmp
dec
dec
inc
sub
fildll
scas
inc
dec
lcall
ret
lahf
enter
inc
push
js
fnstcw
mov
icebp
lahf
and
cmpsb
sbb
cs
or
or
mov
das
jnp
mov
cld
sub
fdivrl
push
mov
push
lds
push
sub
jne
jecxz
repz
cltd
loopne
mov
mov
out
sbb
mov
popf
mov
xchg
insl
lods
push
fsubp
xor
push
scas
adc
out
sti
and
daa
repnz
jp
aad
jnp
call
out
pop
nop
std
jnp
push
popa
push
lret
and
scas
sbb
mov
incb
sub
popf
nop
mov
xchg
test
lock
out
ss
lcall
sbb
mov
call
jns
into
adc
repnz
out
push
mov
cld
jmp
call
lea
adc
movsb
idiv
mov
xor
mov
in
add
sub
inc
fisubrl
adc
lock
jns
decb
inc
pop
push
fs
rolb
loopne
push
mov
pop
andb
mov
imul
mov
mov
add
mov
rcrb
xor
mov
or
lahf
subl
xchg
hlt
add
and
sub
jecxz
xlat
fidivl
loop
dec
dec
and
jl
out
mov
sbb
aas
push
cli
push
push
pop
sti
dec
rorl
and
push
adc
inc
sub
call
test
pop
bound
ja
add
dec
xlat
cld
ror
mov
ljmp
inc
push
xlat
lea
xchg
xchg
or
xchg
addb
jle
xchg
insl
or
inc
xchg
pop
inc
mov
outsl
stc
adc
test
mov
xorl
cmp
loope
cmp
mov
out
push
dec
sub
cltd
jecxz
xlat
sbb
ljmp
or
or
dec
xchg
mov
repnz
add
xor
dec
xchg
fcmovnu
arpl
pop
daa
das
cmp
pop
sbb
in
in
xor
and
std
mov
or
dec
pop
push
enter
pop
mov
scas
or
mov
es
xor
cmp
pushf
nop
xor
mov
cmp
movsb
sub
adcb
int
ret
movsb
cs
sub
cmp
inc
pusha
and
testb
popf
dec
cmp
bound
adc
or
add
xorl
in
mov
int3
push
jne
dec
or
adc
ficoms
and
xor
fidivl
sub
push
xchg
lcall
mov
add
cmp
or
cmpb
mov
cmc
lock
fcmovb
fsubl
xchg
inc
int3
test
dec
stc
cmpsb
dec
jle
add
mov
daa
push
fisttpll
push
push
mov
xchg
sub
jg
lcall
cli
xor
xchg
fsubp
cmp
cmc
dec
bound
repz
sar
scas
mov
in
and
jg
push
rcll
pushw
fisubrs
or
or
push
into
pop
jne
inc
sub
test
ficoms
add
mov
add
jmp
inc
mulb
int
cmp
leavew
inc
int3
test
xor
inc
repz
or
and
add
mov
in
jae
aaa
arpl
mov
mov
lret
fwait
xor
mov
push
gs
mov
mov
mov
rolb
ljmp
push
adc
add
mov
push
pop
int3
mov
hlt
aas
loope
and
fisttpll
jp
jle
add
aad
inc
add
js
lock
dec
sub
incl
pop
cmp
fnsave
mov
sub
jb
inc
jle
push
xchg
sbb
int3
shlb
out
jne
data16
xlat
adc
lea
adc
push
mov
lods
adc
notb
loope
mov
loopne
and
xchg
out
jno
ja
jae
cmp
jmp
sbb
dec
and
test
orb
lcall
jl
xlat
call
pop
gs
repz
filds
ljmp
pop
ss
mov
cmp
fistpll
xchg
jmp
inc
subl
out
imulb
int
mov
add
test
dec
cmp
jo
mov
mov
ret
pushf
pop
sub
je
and
push
leave
call
dec
xor
push
xor
loope
mov
jl
shlb
sbb
bound
jo
mov
cld
jg
ret
jg
fwait
adc
int3
sub
cmc
mov
push
push
stos
jnp,pt
cli
jae
cmpb
inc
mov
xchg
dec
lods
mov
mov
out
xchg
sub
pop
sbb
xchg
loop
adc
xchg
repnz
and
mov
xor
sti
cmpsl
stos
addb
push
mov
idivl
cmp
or
cmp
sub
in
xchg
add
shrl
lret
bound
idiv
iret
dec
mov
mov
fs
push
fisubrl
in
xor
inc
mov
std
xor
mov
dec
adcl
pop
scas
cmpsl
idivb
lods
mov
dec
mov
inc
jae
clc
mov
pushf
sbb
inc
shll
imul
ret
mov
or
out
clc
loop
iret
stc
outsb
cmp
cmp
lcall
aam
mov
incb
push
push
cmp
int
jbe
lret
repz
int
lret
lret
add
dec
ficoml
out
sbb
mov
stos
inc
xor
lcall
mov
jle
imul
hlt
sbb
ret
lds
jecxz
imul
or
sbb
es
cmpsl
lret
scas
pushf
inc
nop
int
jne
movl
fs
inc
or
inc
imul
or
sbb
mov
mov
inc
sub
fwait
cli
in
out
jb
or
inc
and
xchg
adc
incl
inc
andl
imul
xchg
sbb
loopne
adc
or
push
sub
mov
mov
sarb
xor
xchg
lahf
add
sub
xor
js
inc
dec
popl
dec
push
xorb
lods
shlb
in
sahf
add
movsl
cwtl
xor
lods
lock
lret
js
adc
cmp
pop
jbe
daa
jbe
xchg
lds
test
push
cmp
xor
stos
gs
push
mov
jbe
mov
jge
push
js
in
int
movsl
ret
mov
shlb
mov
addr16
jp
leave
out
arpl
dec
add
mov
imul
xchg
mov
pop
pop
insl
notl
cmp
es
sbb
outsl
imul
das
sub
push
mov
cs
addr16
jp
add
or
test
mov
fiaddl
mov
cltd
inc
and
lock
xchg
int3
inc
xor
mov
int3
push
imul
dec
or
and
cmp
sbb
lods
test
or
das
repz
ret
popa
mov
mov
stos
jmp
aaa
jno
or
call
mov
ja
mov
adcb
push
sbbb
lret
mov
in
sbb
stos
insb
push
sahf
mov
mov
lea
push
xchg
je
jecxz
inc
push
inc
or
addr16
xchg
rcr
rcrb
out
xor
xor
xor
jnp
das
fdivrs
outsb
pop
scas
or
dec
shll
divb
rolb
arpl
xlat
test
aad
ret
dec
xchg
mov
xor
f2xm1
sub
adc
rorl
or
cmp
or
sub
add
sbb
mov
dec
insb
or
fsubl
push
fistpl
jns
insl
roll
insl
aaa
in
sub
stos
adc
push
iret
pushf
mov
pop
cmp
cmc
clc
cli
aam
push
clc
push
jp
push
stos
stc
xchg
xchg
or
mov
ljmp
sti
push
jg
cmc
pop
sahf
push
push
fwait
bound
loope
lea
xchg
lret
stos
jge
cmc
mov
scas
and
jo
inc
testl
or
insb
lock
adc
das
rclb
mov
sti
push
test
mov
subb
test
cwtl
aad
in
jecxz
stc
call
rolb
and
adc
and
mov
gs
sub
cmp
mov
push
sub
rcll
ljmp
dec
jns
jecxz
add
cltd
or
in
pop
stc
dec
pop
and
out
jns
xchg
in
jns
sbb
pop
addl
gs
or
mov
add
xchg
es
fdivrl
and
orl
mov
dec
sbb
roll
pop
adc
mov
addr16
dec
jne
add
push
pop
dec
repz
pusha
bound
sti
mov
lods
out
cvtps2pi
out
lcall
pusha
cli
fdivrs
lock
sbb
repz
mov
add
cld
xchg
sbb
out
xor
mov
push
push
push
lods
cli
adc
fs
pop
les
cmp
je
cmc
or
mov
sbb
repnz
mov
adc
ljmp
mov
adc
and
es
push
add
rol
sti
gs
stos
in
jne
jp
push
dec
rol
xor
push
jl
pop
int3
je
pop
xor
fcmovu
scas
jno
pop
xchg
icebp
mov
lods
orl
js
jmp
in
pusha
out
outsb
and
lods
fwait
sub
push
push
xchg
push
dec
sub
dec
ja
lods
push
sub
xor
adcb
nop
mov
jns
out
fwait
sbb
je
loope
jbe
xchg
inc
or
push
push
jge
sbb
mov
mov
pop
into
jnp
cmp
int3
mov
mull
mov
dec
int
stos
cmp
insl
or
jno
stc
fisttpll
sub
pop
dec
repz
jp
adc
mov
xor
mov
sub
sub
ds
arpl
in
inc
enter
xchg
popa
cmp
je
sbb
stos
lcall
rclb
cmp
xor
loopne
adc
push
pop
popf
jbe
and
mov
es
xor
fidivs
hlt
aas
loop
sbb
sti
subl
sub
add
cld
loope
push
aam
repnz
mov
xchg
mov
mov
aam
fcmovnbe
push
mov
xor
mov
lcall
movsl
sub
push
inc
in
daa
pusha
jns
lea
rcrl
divl
jno
test
mov
ret
lahf
and
pop
into
fwait
mov
sub
in
mov
and
out
dec
push
fcmovnb
or
xchg
push
outsb
insl
outsl
popf
lock
mov
mov
push
cmovbe
lahf
push
lret
out
xor
ret
xchg
gs
mov
xor
das
push
cmpsb
rcrw
cltd
xchg
lock
movsl
pusha
xchg
lods
nop
pop
or
sar
enter
jle
popa
lock
or
pop
cmp
or
push
int
outsl
mov
pop
jne
push
enter
addr16
pop
xor
sbb
xor
insb
pop
xor
pop
mov
xorb
faddl
jl
fucomp
fistl
sub
xor
daa
cmpsb
xor
fisttpl
repnz
inc
iret
out
jbe
xchg
inc
xchg
inc
cmpsb
loop
adc
test
into
dec
iret
sti
inc
test
xor
lcall
xor
mov
dec
into
insl
inc
cmpb
jp
shl
sbb
aaa
in
pop
nop
mov
pop
test
inc
in
mov
lock
inc
mulb
lock
hlt
jo
cmp
lods
mov
mov
mov
or
jae
jl
outsl
jns
jmp
and
add
jne
jo
sahf
fadds
or
or
inc
push
daa
mov
mov
mov
fwait
jg
mov
aaa
call
mov
pop
push
fnstenv
mov
and
sbb
jge
sub
lret
and
enter
sbb
mov
subps
cmpsl
mov
flds
adcl
lds
leave
notl
repnz
mov
movb
mov
pop
pop
sar
leave
mulb
fstpl
inc
dec
sbb
hlt
fwait
sbb
les
imul
cmp
mov
xor
or
pop
or
into
sahf
shrl
jmp
push
ja
mov
push
js
test
popfw
xchg
pop
hlt
adc
and
ds
pop
aas
pop
icebp
jge
fwait
mov
cmp
in
lea
test
rcrl
mov
sub
cwtl
pusha
sub
xor
mov
hlt
aad
insl
movb
push
addr16
outsl
test
and
add
mov
mov
in
add
les
cwtl
mov
imul
aam
add
dec
mov
inc
adc
and
leave
gs
xchg
jle
push
pop
gs
pop
xor
rorl
call
inc
shl
push
rolb
sub
arpl
fisubrs
fstpt
fcoms
data16
hlt
out
push
out
adc
sub
cmp
pop
xor
daa
scas
sbb
xor
scas
aad
mov
sbb
jae
subl
rorl
xor
notb
xchg
scas
dec
fstpt
lea
imul
dec
jmp
inc
pop
inc
cwtl
and
and
stos
ja
cmc
lods
stos
jnp
scas
adc
pop
leave
movsl
in
add
call
enter
push
jmp
arpl
mov
lahf
lahf
fdivrp
jg
dec
or
inc
aas
lock
and
data16
cs
int
aaa
xchg
addps
jb
fsubr
dec
insb
push
imul
xor
out
xchg
sbb
xchg
mov
dec
add
jns
test
add
pop
inc
pop
test
mov
loope
mov
dec
pop
cmp
cmp
in
scas
sbb
xchg
into
stos
mov
sub
pop
inc
add
pcmpgtw
push
out
stos
dec
inc
sub
add
sbb
push
pop
lods
in
mov
xor
nop
xchg
les
pop
les
mov
lahf
inc
jmp
push
mov
add
sti
outsl
loop
add
out
push
fstl
loopne
jnp
mov
out
lret
lahf
icebp
stc
jnp
xchg
cmpsb
jmp
jbe
pop
sub
lret
adc
inc
gs
xchg
pusha
lret
inc
push
mov
repz
or
imul
adc
sub
into
rclb
xchg
add
or
movsl
mov
add
adcb
xor
jl
jp
cwtl
out
iret
adcl
leave
sub
xor
push
lods
es
fisttpll
les
daa
ss
xchg
and
push
mov
adc
in
mov
push
mov
xchg
mov
xchg
and
fisubrl
in
jb
mov
and
into
jmp
sub
cmp
pop
and
xchg
jns
push
repz
testb
xchg
mov
jp
loop
xchg
push
adc
int3
out
xchg
jno
iret
adc
mov
loop
cmpl
outsl
jb
sbb
movsl
bound
outsb
sarl
and
dec
mov
cmp
shll
add
sbb
push
loop
in
js
in
mov
je
cltd
lods
pop
ds
jns
mov
hlt
xlat
scas
lods
push
wbinvd
fnstenv
outsb
clc
cmp
movl
mov
push
adc
sub
stos
mov
ds
xchg
aas
clc
mov
pop
subb
scas
add
mov
mov
mov
loope
cmp
rclb
pusha
popf
sub
gs
mov
lret
or
call
inc
int3
inc
jle
mov
shrb
cmp
jno
xor
pop
xchg
add
jo
pop
enter
out
pop
sbb
adc
movsb
mov
out
and
fwait
pop
mov
dec
lahf
sbb
inc
pop
daa
pushf
pop
dec
sub
dec
cmp
or
or
test
roll
add
adcl
sub
jge
pop
dec
xchg
and
out
cmc
scas
iret
push
jp
mull
add
fwait
or
stos
imul
daa
jecxz
cmp
scas
fcomps
loopne
add
fsubrl
mov
jne
jmp
lock
xlat
or
jg
je
and
inc
mov
bound
gs
shll
cmp
negb
jle
icebp
lds
or
mov
mov
jg
inc
ficoml
shrl
das
repz
mov
pop
cmc
and
leave
out
aaa
addr16
inc
inc
mov
jae
and
lea
lret
push
cmp
mov
mov
ljmp
pop
cmc
mov
jno
popf
jbe
fdivl
xor
popf
jb
pop
cmp
enter
arpl
jne
aas
orl
mov
push
cmp
mov
push
xor
xchg
push
sub
jecxz
xchg
bound
sbb
mov
mov
clc
sti
pop
sub
push
mov
jmp
jb
adc
lock
bound
insb
push
out
mov
rorl
std
push
adc
das
lahf
in
addr16
or
lods
ljmp
sbb
sub
pop
mov
mov
hlt
mov
fwait
testb
sub
fidivrs
jbe
or
jae
shlb
push
or
adc
xchg
pop
fisttpl
xchg
or
jbe
icebp
xor
subb
imul
scas
mov
in
mov
iret
pop
leave
scas
dec
lret
inc
add
cmp
mov
flds
lea
xor
jo
lahf
adc
xor
or
mov
add
rorb
fiaddl
jnp
add
rolb
sar
push
mov
lds
xchg
insb
jnp
stos
xor
or
mov
pop
push
xchg
xor
mov
and
xor
push
mov
mov
lock
leave
bound
popf
jno
add
mov
fldl
mov
inc
dec
sbb
add
and
push
mov
adc
or
add
cmp
aad
shlb
lcall
cld
rcrl
loopne
pop
popf
xor
fildll
mov
aas
add
fs
xor
jg
es
cmp
pusha
imul
push
icebp
jb
pop
jmp
add
jo
sub
pop
add
fsub
es
cmp
arpl
lock
test
movsl
ja
adc
cmpsb
jle
xchg
bound
test
xchg
push
fisubs
cmpsb
inc
jecxz
mov
incb
aaa
mull
bound
scas
dec
ljmp
and
mov
mov
xchg
mov
pop
ss
lea
ret
std
pop
adc
mov
out
ja
jno
jmp
jg
xchg
out
mov
dec
jno
jmp
xor
subl
sbb
std
mov
mov
push
cwtl
arpl
jb
jmp
sbb
hlt
xchg
adc
adc
and
shll
ret
inc
pop
sbb
cmpsl
arpl
sub
jp
jge
movsb
sub
mov
pop
jl
mov
or
jo
fwait
movb
cs
or
cmp
jp
pop
cmp
jge
lahf
cmp
in
xor
dec
stos
pushf
and
daa
fmull
aaa
sbb
shll
xchg
jmp
xor
icebp
scas
pusha
sub
dec
mov
pop
jne
ljmp
int3
push
sub
mov
jbe
jg
test
fld
mov
inc
cmp
dec
std
out
out
inc
cmp
mov
adc
cmp
aam
aad
inc
pop
jo
pop
jl
mov
adc
test
mov
mov
mov
lods
xor
das
test
inc
into
pop
sub
mov
les
pop
scas
sbb
je
add
sub
cmp
mov
xchg
sahf
sub
push
dec
lret
imul
push
icebp
pop
push
cs
imul
or
jne
scas
scas
pushl
cmpsb
mul
xchg
push
fstps
or
bound
jne
arpl
add
pop
mov
pop
lcall
in
stc
push
dec
popa
sub
stos
rclb
je
sub
add
ret
cltd
mov
push
xorb
hlt
cmp
addr16
neg
out
pop
adc
aas
push
shl
in
cmpsl
jl
and
xchg
xor
fmulp
fs
rcr
push
dec
or
or
das
data16
ljmp
notl
or
cmpsb
test
jl
rol
push
push
fwait
sahf
mov
sbb
sub
xchg
inc
add
aaa
push
popa
ret
mov
mov
aas
pop
mov
out
push
and
lea
cmp
dec
xchg
jae
sbb
push
inc
xor
mov
imul
dec
inc
test
ja
jp
in
int
xchg
adc
adc
stos
insl
subb
loop
testb
cmpsb
cmp
out
jns
xor
andb
dec
test
stc
ds
add
jp
push
into
xor
push
xor
push
pop
or
movsl
pop
cwtl
repz
cmc
rcll
mov
popf
pushf
cltd
push
gs
fmull
jp
clc
lahf
divb
push
imul
jmp
popf
je
dec
pop
paddusw
rcrl
int
inc
ret
aas
js
outsl
jle
and
mov
fs
scas
adc
sub
lret
mov
insl
leave
ljmp
in
clc
xchg
std
pop
push
jl
movsb
shl
and
fwait
scas
xchg
in
and
cli
sub
sub
or
dec
push
repz
loopne
stos
dec
idivb
dec
cmp
andl
fiadds
lcall
jnp
aam
cwtl
imul
in
lods
sbb
xchg
xor
test
sbb
nop
mov
popa
stc
xchg
cmp
dec
outsb
and
mov
orb
xchg
cld
mov
inc
push
bound
mov
addb
negl
dec
and
add
xchg
mov
push
gs
cmpsb
repz
cmp
mov
jo
pusha
sbb
out
push
lret
rol
cmp
jmp
rol
cmpsl
fistl
lods
sub
and
or
addr16
push
push
sbb
imul
pop
inc
cltd
out
dec
repz
or
je
test
mov
int3
cmp
dec
mov
call
aas
fwait
stos
das
add
xor
adc
xchg
loopne
rorl
shlb
cmp
sub
pop
pop
bound
xorb
jge
add
sbb
mov
fists
xchg
clc
dec
scas
cmc
lods
leave
mov
out
fdivr
jbe
in
pop
stos
fiaddl
nop
sbb
and
dec
stos
rcrl
mov
adcl
cmp
iret
mov
fidivs
sbb
or
lods
push
lock
xorl
and
roll
dec
and
cmpsl
iret
orb
inc
push
pusha
fsubrp
inc
jo
ja
xorb
mov
iret
cmpsb
push
cmc
dec
ds
js
cwtl
pop
std
loop
in
mov
pop
mov
xor
int3
stos
shr
and
mov
jecxz
jns
dec
outsl
mov
mov
je
rcrb
adc
nop
scas
fisubrl
out
and
loop
ret
pcmpgtw
out
bound
mov
hlt
mov
clc
dec
movsb
xchg
loope
cmpss
inc
data16
push
cld
mov
call
jg
or
cs
and
or
movsb
lret
and
push
movl
sub
sub
sub
jmp
in
cli
cmp
sbb
rcll
cmp
add
jnp
xchg
loope
ss
pop
xorb
sub
iret
add
nop
dec
mov
mov
push
pop
push
inc
xchg
test
sub
mov
xchg
mov
stc
hlt
push
ret
cmc
add
insb
out
sar
fisttpl
push
or
or
cmpsl
add
and
push
jbe
pop
jae
bound
pop
mov
cmp
or
lock
sub
sub
fisttps
xchg
psllw
cli
sub
in
aad
adc
das
icebp
test
je
loopne
and
pop
adcb
cld
loop
lret
ret
mov
arpl
inc
or
inc
pop
pop
adc
jl
adc
pop
mov
cmp
int3
mov
sbb
movsl
sub
jbe,pt
xor
fisttpll
sub
add
outsb
mov
scas
dec
out
int3
mov
jbe
pop
mov
add
out
xchg
mov
xchg
insb
pop
insb
xchg
incl
fdivl
clc
or
xchg
rol
or
cmpsb
cmp
bound
sbb
sbb
dec
into
mov
rcr
in
jp
insb
push
cmc
call
outsb
and
subl
scas
xor
or
popl
outsl
stos
lock
lock
jno
adc
adc
testl
or
or
pop
push
sub
ficoms
xlat
push
sti
mov
std
int3
cmp
pop
test
mov
sbb
jns
and
test
aaa
ds
ret
jmp
adc
and
or
faddl
addr16
outsl
popf
xor
pop
xor
movsb
repnz
insb
xor
out
lahf
cmpsb
jno
push
mov
sbb
iret
cmc
jmp
dec
loope
cmp
mov
adc
icebp
clc
add
sbb
cltd
dec
dec
mov
lret
in
psubusw
add
sahf
sub
mov
call
xor
shrl
inc
jo
hlt
idivb
push
cmpl
fstpt
out
pop
pop
mov
adcl
repnz
inc
xchg
sub
jmp
into
adc
insl
sbb
push
xchg
rclb
dec
jno
por
inc
add
popa
fnstenv
push
jmp
addr16
shll
or
leave
push
cmp
in
dec
pop
fwait
push
fwait
lea
cmp
pop
out
pop
popf
jge
lahf
fisubs
mov
arpl
mov
sub
add
cmp
cmp
push
inc
inc
xor
adc
loopne
cmp
add
jg
jle
fninit
shll
popf
cs
mov
lock
or
rcrb
push
adc
mov
sub
jge
pop
add
adc
out
push
cld
jecxz
das
push
repnz
adc
iret
pop
jo
cmc
rolb
adc
sbb
cmc
xor
mov
xchg
loope
pop
aaa
stos
fdivl
insb
lock
push
pop
divb
jp
xor
cmovne
inc
call
cmp
add
shlb
jne
lcall
cmp
mov
pop
pop
orl
mov
dec
negb
mov
and
ljmp
jnp
and
mov
lcall
and
adc
dec
xor
cmpsl
mov
sti
pop
jae
xor
lds
rsm
out
pop
test
xchg
or
ds
dec
leave
lcall
xchg
sub
into
loope
outsb
cmp
mov
xchg
pusha
pusha
mov
lock
push
aaa
pop
es
repz
mov
fwait
test
addr16
xchg
adc
pop
adc
imul
fwait
mov
inc
out
das
mov
pop
popf
inc
mov
andb
push
push
jge
sbb
pop
lock
push
test
and
cmp
js
jb
in
cmpsl
dec
lods
xor
jb
arpl
push
inc
pushf
enter
dec
not
loop
or
pop
imul
jp
pop
jbe
lahf
mov
push
pushf
add
cli
add
nop
push
movsb
movsl
adc
outsl
rcrl
jge
mov
test
xchg
pop
ljmp
mov
cmp
cmp
xor
xor
jo
sbb
push
fs
inc
mov
ret
icebp
jecxz
xor
jns
nop
insb
sub
cmp
out
sbbl
push
pop
addr16
aam
xor
xor
sbb
push
or
xchg
cmp
cltd
push
ficoml
push
xchg
fdivrp
xchg
xchg
inc
out
arpl
std
repnz
loop
mov
fs
sub
xor
cmp
in
lea
pop
xchg
in
fsubrs
int3
pop
dec
das
sbb
push
mov
adcl
add
fwait
mov
aam
sub
imul
ljmp
jle
xchg
nop
add
dec
add
cmp
fbstp
jbe
cmp
xchg
repz
push
cmpsb
xchg
movl
xchg
and
pop
test
fadds
jecxz
test
mov
rcrl
push
cld
shlb
xchg
imul
sti
mov
or
mov
add
sbb
loopne
jp
aas
add
popa
dec
daa
inc
or
outsb
and
inc
das
jl
xchg
mov
out
pop
fwait
pop
pop
and
mov
in
jbe
or
jb
daa
push
adc
repz
sbb
leave
lret
push
mov
dec
and
adc
lea
scas
xchg
mov
mov
inc
mov
ljmp
pop
dec
jp
push
mov
dec
xchg
fwait
jno
adc
pop
xchg
jbe
xchg
adc
add
cmp
xchg
fidivrl
fldenv
mov
out
jp
jmp
and
clc
jno
cmpsb
fs
das
icebp
lods
clc
sbb
or
jg
roll
rcll
ss
cld
stc
sub
sub
lret
and
je
inc
bnd
inc
repz
rcrb
jns
aad
mov
stos
mov
loope
mov
test
sbb
lods
scas
iret
jg
push
lods
insb
stos
adc
ret
lock
sub
idivb
mov
into
inc
mov
addr16
push
iret
out
push
das
add
xchg
push
adc
cltd
pop
out
xchg
jge
lds
pop
fmuls
lea
xor
lcall
ss
sbb
rorl
sub
or
jmp
xchg
mov
jg
pop
lret
roll
leave
ret
jnp
pushf
sub
cltd
in
cmp
sbb
repz
lea
jl
sahf
sbb
movsb
jno
hlt
dec
push
ss
sub
dec
sbbb
test
clc
or
test
cmp
mov
dec
xchg
mov
or
ljmp
pusha
mov
call
inc
mov
lock
ss
inc
mov
push
pop
xchg
into
popa
cmpsb
data16
push
out
clc
test
add
aam
lods
mulb
sbb
pop
orl
out
int3
ss
hlt
mov
xchg
pop
loope
test
in
rcrb
cmp
xor
lret
test
push
or
mov
dec
nop
popf
out
jns
sbbb
push
mov
pop
xchg
push
mov
or
add
xlat
iret
mov
xor
fidivrs
fisttpll
call
fsub
sub
ucomiss
std
pop
mov
sub
icebp
jae
fldenv
lret
sub
lcall
insl
jae
xchg
test
cld
jne
sub
mov
les
jns
pusha
push
fs
and
rcrl
out
lock
or
icebp
xchg
jne
fstps
xchg
jno
jne
out
test
ret
xchg
ja
pop
in
lret
les
test
mov
inc
popa
sub
int3
inc
punpckhdq
mov
jnp
xchg
push
lcall
push
inc
mov
mov
rorl
fwait
sub
sub
or
in
sbb
xchg
test
push
jne
bound
int
adc
jb
scas
hlt
out
pushf
call
add
dec
dec
mov
jmp
jno
push
adc
xchg
mov
or
stos
dec
fildl
jns
dec
lods
dec
inc
cli
cwtl
pop
jo
push
sub
sbb
dec
jg
dec
loop
fstpl
icebp
loopne
pushl
aas
push
add
pop
inc
fisubl
lods
leave
mov
jb
sub
jmp
lret
adcl
cltd
jp
sub
fmull
jb
dec
push
repnz
in
cltd
mov
clc
mov
inc
adc
xor
and
aaa
lods
iret
pusha
fnsave
xchg
xor
mov
mov
aam
dec
jge
xchg
pushf
jae
stc
imul
aad
mov
aad
rep
dec
add
jp
fimuls
je
sbb
in
test
jnp
cmpsb
mov
hlt
push
pushf
inc
mov
inc
cmp
aas
pop
push
cmp
mov
sub
stos
pop
mov
aam
lret
mov
fcoml
rclb
dec
rcrb
mov
lret
arpl
cmpsl
rorb
gs
nop
outsl
rcrb
sbb
xchg
pop
sbb
pop
ficompl
cs
pop
test
lds
lods
lret
dec
lret
add
jbe
sbb
adc
xchg
add
test
jb
or
adc
mov
pop
mov
mov
cmpsl
cwtl
mov
jns
or
cwtl
pushf
push
int
xor
dec
mov
fdivl
mov
push
pushf
je
cld
sbb
pop
pushf
mov
fisubrs
inc
lea
push
push
loop
out
fxtract
mov
jmp
incl
test
fnsave
jnp
icebp
push
jae
insl
or
dec
adc
mov
ljmp
push
mov
jle
lret
les
aas
inc
jmp
outsl
sti
add
mov
jg
inc
cltd
fdivl
lods
pop
mov
enter
xchg
jg
repz
loope
ljmp
add
adc
fsubr
or
fcomp
push
or
in
sbb
sub
mov
addr16
sbb
incl
jo
enter
jp
les
cwtl
mov
bound
lret
lods
daa
clc
mov
adc
cltd
mov
js
ja
loop
lods
or
mov
iret
std
lea
bound
adc
xor
test
inc
sbbl
lods
mov
ja
pushf
push
pop
push
stos
out
xchg
test
pop
cmpsb
aas
lahf
pop
sti
js
shl
jl
inc
and
mov
cmp
pop
dec
sub
fistps
xor
mov
xor
dec
andl
mov
add
xor
shl
aam
dec
std
je
add
cmp
in
push
xchg
imull
enter
fs
jmp
lock
pop
fldt
aad
jecxz
cli
jecxz
xchg
jl
xchg
adc
xchg
xchg
out
pop
test
sub
test
mov
push
cs
xor
cmp
and
or
nop
inc
cmp
adc
push
cmp
push
mov
enter
xor
push
cs
movsb
gs
movsl
hlt
cmpl
adc
mov
xor
xor
mov
sbb
add
mov
fistps
add
loop
adc
ja
lods
mov
ffree
fxch
xor
fsub
cltd
adc
fdivrl
nop
pop
ret
dec
dec
mov
jl
mov
mov
jno
sbb
aaa
adc
inc
mov
and
test
mov
or
mov
xor
dec
fsubl
aad
cmp
push
and
push
daa
js
clc
cmp
lret
xor
js
fwait
xlat
inc
jle
jg
outsl
and
add
cmc
xchg
fst
mov
mov
pop
mov
push
add
iret
call
and
lea
cmp
sbb
push
popf
test
cwtl
mov
rol
loopne
xchg
cli
data16
push
ds
rolb
add
mov
dec
and
ljmp
mov
rcr
pop
out
loop
repnz
mov
xor
cmp
and
adc
push
and
xchg
push
or
and
cs
arpl
pop
enter
sub
scas
cltd
test
push
cmp
scas
data16
fdivl
fnstcw
push
sub
jge
or
pop
movsl
cltd
xor
dec
jp
mov
or
fmull
stc
push
pushf
je
adc
loop
cmp
lret
or
push
ja
cmp
out
in
jno
jae
mov
and
cmp
pop
or
loop
push
mov
out
mov
lret
ss
xchg
xchg
jg
mov
pop
mov
mov
iret
jg
fmulp
jo
cld
fwait
aad
pusha
out
mov
stos
das
mov
jno
push
mov
imul
adc
dec
iret
dec
mov
adc
or
adc
loop
xchg
and
xor
xchg
or
jmp
arpl
aad
jp
scas
fcom
idivl
cmp
pop
mov
jmp
push
mov
icebp
mov
pop
sbb
mov
ret
sbb
jne
aaa
stos
mov
cmpsb
loop
xlat
shll
ret
dec
lret
pushf
xor
hlt
adc
xor
inc
sbb
addr16
mov
push
sub
mov
dec
add
dec
push
jae
adc
sub
dec
int
aam
ja
das
repz
dec
sbb
xchg
cmp
and
jae
lcall
test
mov
cmp
stos
out
xchg
cmpsl
lock
cmpsb
cmpsl
nop
aaa
sbb
dec
mov
inc
xor
push
mov
shlb
mov
mov
fs
js
pop
pop
sbb
out
add
mov
ljmp
push
mov
add
adc
or
movsl
or
and
rcrb
mov
sbb
mov
sbb
or
mov
arpl
mov
cld
adc
jae
inc
lcall
and
xorl
mov
out
cmpsl
or
cld
mov
or
cmp
das
mov
add
and
cmp
repnz
xorl
pop
std
das
test
scas
sar
insl
ja
lahf
aad
lcall
mov
arpl
lds
loop
jg
push
dec
mov
fs
add
dec
data16
movsl
aam
or
push
js
cmp
cmp
repz
outsb
push
repnz
pop
iret
daa
mov
and
insl
sar
std
repz
jmp
pop
test
or
mov
mov
aam
dec
push
dec
aam
repz
out
mov
adc
mov
in
out
xchg
lret
cmp
out
add
push
sbb
fimull
es
pop
in
call
fs
sbbb
cs
cmpsb
jne
scas
push
push
or
sub
pusha
aas
scas
sub
out
outsb
sar
rclb
test
pop
inc
orb
jg
loop
push
push
lock
mov
xor
push
inc
out
pop
inc
inc
sub
xor
jl
sbb
adc
ja
fs
push
inc
adc
icebp
dec
test
movsb
pusha
int3
xor
in
xchg
out
xor
mov
cmp
lods
mov
jo
xor
xor
add
shrl
add
cld
adc
test
or
mov
negb
out
xor
fidivl
sbb
push
and
std
std
rclb
test
arpl
fbld
mov
or
out
xor
ds
pop
sub
aaa
lret
cmp
test
addl
mov
sbb
inc
ljmp
xchg
sub
mov
testl
dec
xchg
mov
in
and
movb
and
and
jnp
aaa
out
mov
push
sub
aad
daa
sti
sbb
add
jg
fcomi
dec
xor
mov
cmpl
cmp
or
or
lcall
into
pop
enter
inc
jle
ja
addr16
dec
mov
pop
divps
out
fidivrl
ret
jmp
out
sub
je
mov
xor
sub
xchg
mov
xor
in
mov
cld
and
inc
out
mov
add
dec
sub
pop
sbb
xchg
fcomps
sbb
sbb
xchg
xchg
push
mov
int
mov
mov
dec
add
and
addr16
out
cmpsb
sarl
stc
or
scas
cmp
adc
mov
dec
inc
mov
add
pop
iret
es
jge
mov
mov
js
sbb
out
clc
repz
sub
or
pop
sbb
arpl
adc
movsb
stc
fwait
ljmp
jle
mov
mov
sti
xor
lret
and
xchg
dec
lds
jne
mov
stos
ja
fwait
repz
aaa
xor
dec
dec
inc
inc
out
stos
jo
icebp
pop
aad
add
notb
stos
lods
fistps
mov
sub
in
out
mov
pop
pop
das
ds
lods
mov
int3
dec
cmc
ds
mov
scas
fstpt
jne
adc
cmp
and
cmp
mov
in
mov
inc
xor
clc
int
lahf
pop
add
fcmovnbe
daa
mov
cs
jae
xchg
cmp
repz
and
test
cmpsl
popa
jmp
add
shr
and
rolb
push
cli
jbe
push
xor
mov
fdiv
pop
and
jle
das
pop
aaa
pop
std
jg
adc
flds
int
mov
jl
mov
ret
xchg
jno
jns
fwait
mov
or
add
ret
lods
daa
mov
xor
lds
pop
mov
jae
shlb
push
stos
cmp
loopne
es
push
xchg
xchg
jl
sbb
inc
pop
bound
sbb
mov
xor
sbbb
pop
inc
adc
xor
lock
jecxz
pop
and
add
xor
jl
cmp
fidivs
ja
xchg
popf
aaa
xchg
ret
sbb
sub
jp
fistl
jl
fdivrp
fdivrl
and
jbe
push
jg
neg
mov
lods
test
push
jnp
cmpsb
imul
sub
shll
in
or
dec
pop
push
and
dec
cmc
push
insl
lcall
dec
cmpb
sahf
jnp
aaa
mov
cs
hlt
nop
pop
dec
shlb
and
jns
fucomi
mov
jg
gs
mov
cmp
pop
js
mov
inc
das
lret
xchg
sub
jae
jne
lcall
mov
inc
xchg
pop
out
rorl
xchg
out
jo
test
and
and
add
in
fldt
imul
mov
gs
push
movsl
roll
sbbl
xchg
dec
and
sbb
and
rolb
shrb
dec
xchg
push
lods
faddl
imull
xor
sbb
int
push
in
mov
and
mov
mov
stc
loope
xchg
jb
mov
test
xor
inc
mov
add
repz
daa
out
or
push
iret
push
iret
or
inc
cld
mov
aam
loop
add
or
sbb
mov
nop
jnp
mov
dec
ja
jbe
inc
ja
sub
or
cmp
pop
mov
mov
js
arpl
repnz
gs
jl
push
enter
imul
adc
insb
mov
lret
lods
jle
push
mov
pop
cmpsl
inc
stc
add
in
push
sbb
into
xor
dec
nop
aaa
and
leave
pop
push
mov
shlb
mov
roll
adc
mov
xor
mov
dec
repz
xor
lret
imul
es
int
daa
mov
cmpsl
push
stos
and
rorl
or
in
shrl
jo
das
fisttpll
sbb
push
rcll
cmp
sbb
int
push
adc
pusha
xor
sub
sti
popa
icebp
adc
pusha
inc
inc
test
cli
sub
and
pop
popf
mov
sbb
pop
movsl
cmp
mov
lds
or
add
repz
mov
enter
cli
jecxz
cli
sbb
jbe
mov
sub
rcl
sbb
push
pop
in
xor
scas
jae
sbb
cli
adc
test
outsb
add
clc
cld
xor
inc
in
lock
roll
test
fisttps
jg
lock
lret
movsl
xchg
pop
sbb
inc
pop
fildl
into
adc
push
mov
lods
movsb
sub
cld
dec
adc
outsl
lret
and
lret
jmp
mov
xor
leave
out
jb
sub
mov
jp
scas
dec
sub
xor
lock
mov
mov
push
mov
aaa
xor
xchg
xchg
sbb
pusha
mov
stos
ret
test
adc
fcmovnb
test
push
inc
adc
push
ret
ret
mov
push
data16
test
mov
inc
pop
xchg
stos
fsub
loope
aaa
adc
ret
shr
push
insb
and
repz
xchg
ljmp
or
test
lods
pop
cmp
test
rcl
mov
and
mov
push
lea
pop
and
loopne
xor
add
push
js
pop
popa
xlat
inc
push
jmp
shl
mov
sub
mov
insl
shll
adc
cmc
jge
inc
pushf
pop
bound
roll
repnz
cli
aam
jge
test
sbb
xor
shlb
addl
daa
icebp
pusha
sub
jne
into
mov
shl
hlt
mov
punpckhdq
mov
ret
xor
push
nop
or
jmp
xor
adc
and
out
in
and
inc
mov
mov
loope
jae
push
sub
sete
aam
adc
or
sbb
pop
adc
test
ljmp
cmp
insb
dec
xchg
push
inc
mov
in
arpl
sbb
inc
push
leave
out
xchg
mov
cwtl
and
das
sbbl
aad
add
xchg
adc
enter
test
sarl
rol
aaa
shr
xchg
mov
pop
test
sub
enter
adc
inc
sbbb
ja
sub
mov
dec
sub
jp
out
jl
push
mov
inc
lahf
sbb
xchg
aam
icebp
push
xchg
lock
mov
push
data16
mov
daa
inc
push
dec
sbbb
sbb
mov
fwait
out
cwtl
pop
shlb
cld
xchg
out
dec
inc
stos
in
sbb
sbbb
push
inc
xchg
dec
mov
or
daa
aaa
sti
and
ljmp
mov
jnp
mov
mov
mov
aam
icebp
pushf
repnz
pusha
mov
cmp
add
jne
sarl
mov
mov
sbb
sbb
scas
xchg
jle
mov
imul
incl
add
adc
dec
jmp
sarl
arpl
mov
ja
dec
or
inc
mov
adc
test
add
lds
jb
or
popa
push
xlat
sar
fcompl
mov
stos
add
mov
or
add
repz
jecxz
fs
repnz
pop
bound
mov
icebp
out
mov
pop
add
mov
jne
gs
push
sarl
loop
sbb
mov
jbe
outsl
jmp
lods
sub
adc
sub
jmp
cmpsl
dec
jb
adc
jle
sbb
out
mov
mov
mov
mov
je
movd
jb
enter
xchg
scas
dec
cli
inc
lods
mov
sbb
aaa
jno
popa
lret
das
das
mov
je
inc
or
cmp
loopne
inc
sbb
or
orl
jmp
inc
cmpsb
ss
lods
rcrl
ds
xchg
leave
jge
les
in
push
out
sub
pop
adc
test
addr16
mov
push
out
xchg
pop
cmp
sbb
pop
mov
mov
mov
sub
dec
les
xchg
pop
jg
popf
xchg
lahf
das
lds
pop
pop
dec
pop
cwtl
jae
cld
arpl
out
inc
in
subl
in
fimuls
enter
mov
cmpsl
test
mull
xor
cmpsl
cmpsl
sub
pushf
mulb
nop
xchg
popa
inc
and
or
orb
add
push
scas
pushf
addr16
ja
jle
push
push
loopne
pop
cwtl
pop
mov
ret
mov
flds
xchg
stc
jnp
cmp
lcall
sub
bound
xchg
pop
dec
pusha
pusha
mov
adc
out
lahf
test
mov
sbb
ret
pop
push
das
adc
mov
xor
add
stos
fnstcw
xor
test
pop
adc
std
frstor
std
ja
sbb
push
clc
push
popa
dec
in
push
stos
push
sbb
pop
data16
mov
cmpsb
add
adc
stos
pop
std
cmp
lods
fld
std
xor
shrl
add
jae
or
pop
or
sub
push
adc
inc
jl
push
mov
push
fstpt
cmpsl
and
stc
cltd
loope
xchg
nop
jle
mov
addr16
cmp
mov
loope
cmpsb
pop
mov
mov
and
xor
mov
popf
lahf
jb
pop
and
ret
repnz
fildll
fldenv
loopne,pt
mov
cmpsb
cmp
shr
adc
into
addr16
fidivrl
and
repz
notb
aad
ret
and
jb
or
xor
ret
cli
sub
insl
sahf
jno
je
mov
lcall
xorl
add
icebp
ds
cmpsb
sbb
sub
int3
inc
das
push
jle
mov
push
fadd
cmpsl
rclb
repnz
mov
mov
push
in
rcrb
mov
cmp
rolb
in
inc
mov
dec
fists
xchg
mov
ja
scas
push
lea
decb
mov
jno
call
mul
xor
gs
mov
cltd
add
dec
mov
mov
inc
movsl
leavew
jle
sbb
ja
jno
mov
and
loopne
cltd
push
add
addl
dec
inc
pop
mov
sti
les
call
push
pop
mov
sbbb
push
or
loop
addr16
bound
imul
mov
loopne,pn
inc
dec
xchg
lahf
rolb
out
lahf
inc
jmp
sub
jns
jg
mov
adc
popa
outsl
stc
xor
and
les
fdiv
arpl
aaa
bnd
into
pop
fwait
cmp
sub
ror
repnz
out
pop
imul
out
cmp
mov
sti
outsl
das
fcoml
inc
mov
mov
sub
ret
cmp
pop
pop
pop
lea
mov
dec
xor
add
popf
sahf
adc
inc
and
mov
fcomps
iret
insb
mov
pushf
int3
push
into
mov
push
push
test
pop
jo
or
into
push
incb
arpl
lret
xor
cmp
outsb
push
sarl
and
fwait
iret
lret
sbb
nop
xor
xor
fistpl
and
sbb
sub
shll
xor
movsb
popf
ja
xor
mov
mov
jecxz
mov
sbb
or
sbb
insb
daa
int3
insl
jmp
pop
movsb
fnsave
mov
mov
lcall
dec
outsl
out
inc
pop
int
sbb
fstpt
or
jl
xor
adc
adc
or
add
ret
loop
cld
pop
bound
xor
mov
in
jb
js
push
in
jp
subl
dec
push
add
mov
and
mov
ret
das
jmp
fwait
pop
mov
add
popf
scas
lds
mov
inc
jle
int
ss
out
adc
cs
jmp
or
test
data16
mov
jnp
frstor
mov
push
mov
fdivl
jp
cwtl
pop
push
sbb
loope
pop
dec
enter
mov
stos
rcrb
xchg
test
stos
and
test
daa
int
int3
mov
fisttpll
adc
insl
xchg
adc
xor
imul
mov
cmc
fldenv
sbb
inc
cltd
repz
or
sbb
xor
lods
adc
pop
cmpsl
ftst
out
jbe
hlt
or
gs
pushf
ret
std
ss
dec
push
ljmp
iret
adc
xchg
repz
outsl
in
mov
push
ds
stos
loop
pop
push
jbe
jb
nop
lock
in
mov
iret
stos
bound
pusha
test
push
je
jecxz
std
cwtl
jae
jno
int
loopne
push
aas
pop
lret
xchg
data16
mov
add
push
and
dec
fwait
cmp
daa
out
pop
or
daa
leave
push
add
xchg
pop
xchg
cwtl
cwtl
repnz
shrb
xchg
clc
outsl
outsl
scas
mov
arpl
jno
in
lcall
aas
cwtl
inc
jno
xorl
lret
stc
adc
fadd
lcall
rcl
jne
inc
adc
fldl
xor
cmovs
call
ljmp
xchg
aas
xlat
mov
xor
aad
call
mov
xchg
add
mov
and
pop
mov
in
dec
adc
clc
dec
xchg
jmp
push
add
in
aam
stos
call
lods
sub
aad
mov
cmovo
fiadds
cmp
fdivrs
lahf
xchg
and
je
pop
mov
push
inc
adc
push
and
pop
movsb
jp
lahf
lea
arpl
sahf
xor
loopne
adc
xchg
push
mov
lcall
or
inc
mov
call
cli
shll
in
pop
scas
seto
dec
jne
push
sub
xchg
mov
shrb
jno
pop
cmp
cmp
jno
fisubrl
ficomps
loope
sub
shrb
es
jg
mov
mov
imul
icebp
add
mov
push
add
in
mov
mov
jmp
in
inc
add
jbe
hlt
mov
fstl
xor
loop
inc
fbld
popf
idivl
or
in
insl
ficoms
fists
pushf
fists
adc
in
push
mov
mov
cmpsb
rcrb
mov
adc
add
pop
and
ss
pop
jle
jle
and
sub
lock
aaa
and
adc
xchg
clc
mov
push
lods
fwait
inc
pop
mov
xor
xor
inc
push
test
out
aaa
adc
popa
or
cwtl
loop
pop
andb
sti
aad
add
mov
and
and
pop
lret
jbe
sub
pop
or
xchg
mov
lret
pop
lret
gs
mov
cmp
scas
pop
ret
xchg
lea
pop
out
jle
in
adc
mov
sahf
jo
cmp
shlb
push
xchg
push
mov
push
es
mov
insb
lcall
lcall
shrb
mov
jae
cmp
lcall
pop
addr16
daa
nop
mov
mov
xchg
jecxz
ss
mov
push
fsubl
mov
lret
cmp
mov
mov
je
not
aaa
xor
add
push
popa
push
jae
movsl
push
sub
push
int
cmp
fwait
sbb
add
jmp
push
add
cmp
pop
adc
lods
add
xchg
sub
stos
push
shlb
out
scas
sbb
pop
xor
dec
fdiv
lret
leave
push
aad
out
push
das
jbe
mov
mov
or
xchg
out
mov
or
or
je
and
fcmovb
sbbl
addr16
sti
pop
mov
fwait
mov
pop
pop
inc
dec
mov
fsts
leave
push
mov
insl
jns
insb
andl
or
push
loop
or
fldenv
inc
sub
push
inc
fimull
std
in
sbb
pop
mul
pop
adc
mov
add
dec
push
bound
icebp
mov
pop
mov
mov
pop
inc
mov
mov
xor
fld
adc
jnp
idivl
add
xor
xchg
into
pusha
pop
mov
add
stos
out
clc
pop
add
mov
aaa
das
sahf
mov
pop
icebp
and
pop
popf
pop
push
jp
pop
pop
and
and
jecxz
enter
sub
jae
pop
jno
repnz
pop
cmp
and
insl
adc
jno
rep
fiadds
mov
ret
xlat
test
stos
cltd
hlt
in
idiv
frstor
jae
mov
call
mov
mov
pusha
outsb
sbb
loopne
sbb
push
adc
test
fsts
std
xor
leave
rcrl
sarl
imul
pop
lret
ret
jnp
leave
dec
push
inc
jecxz
fwait
orl
fs
fadds
mov
adc
cmp
mov
jg
jo
cld
out
inc
pop
repz
nop
loop
mov
jae
sub
stos
jp
jae
or
add
xchg
xchg
fdiv
mov
aaa
mov
fldcw
mov
inc
pushf
mov
in
and
fs
jbe
test
pop
mov
imul
pushf
sub
mov
fcmovne
dec
xadd
pop
sbb
push
mov
inc
sbb
mov
lret
int
popa
outsb
into
mov
mov
mov
lret
rclb
jp
mov
mov
cmp
xor
lock
ret
fcmovbe
adc
mov
or
outsl
dec
pusha
adc
es
push
xchg
push
mov
shlb
rcl
andb
pop
adc
fnsave
stc
aam
dec
jno
mov
out
sub
jae
das
push
and
enter
out
pop
cwtl
jb
xchg
andl
mov
pop
call
insl
sbb
sub
push
mov
sar
push
pop
mov
push
add
dec
or
popa
xor
and
shrb
adc
mov
sbb
jmp
mov
inc
push
xchg
sub
and
or
pusha
scas
inc
loop
cs
add
scas
movsl
push
or
daa
push
mov
pop
roll
push
add
scas
sbb
inc
jo
cwtl
lock
addr16
mov
inc
outsl
cltd
dec
int3
in
dec
scas
sub
out
xchg
push
orl
in
clc
mov
test
pusha
repnz
sbb
mov
fwait
aaa
rclb
lea
mov
pop
lret
test
inc
addb
cmp
call
xchg
int
mov
das
fwait
xchg
or
add
in
flds
jmp
imul
fabs
mov
mov
int3
pop
fidivl
addb
mov
or
jle
push
out
dec
jle
into
dec
mov
loopne
xor
and
roll
pop
push
pop
mov
js
les
orl
or
mov
fmul
push
mov
inc
mov
xor
or
data16
fcoml
push
cli
mov
enter
push
cmp
xchg
cmp
pop
fcmovu
push
mov
jns
js
ret
push
cmpsl
jmp
push
jns
enter
sti
inc
incb
int3
dec
cltd
add
jmp
mov
dec
sbb
dec
push
jae
lret
dec
outsl
clc
adc
scas
int
sbb
inc
icebp
mov
cmp
sbb
lahf
push
fsts
jbe
pop
mov
test
xor
mov
sahf
loopne
dec
pop
push
mov
test
xor
filds
jecxz
dec
popf
adc
pusha
sub
fcompl
sbb
mov
dec
test
sbb
or
aas
int
mov
cmpsl
sbb
dec
lods
mov
out
pop
popf
pop
rcrb
push
inc
mov
jp
jg
jb
rcr
movsl
adc
push
cmpsb
fdivs
sub
lahf
fisttps
sti
aad
jl
push
ret
jns
hlt
in
mov
fwait
lcall
fisubs
out
lahf
dec
mov
popl
mov
or
not
and
mov
cmpsl
pop
fidivs
push
jmp
pop
test
push
push
test
inc
xchg
mov
mov
mov
loope
xchg
rorl
cmp
pop
xlat
adc
mov
mov
cmp
push
add
mov
lock
push
ja
mov
out
xor
mov
jecxz
push
sbb
lods
mov
mov
ret
mov
lahf
jg
xor
and
test
movsl
pop
test
mov
pop
pop
xchg
rep
cmp
popa
cld
sub
inc
icebp
mov
mov
inc
test
inc
gs
jg
fldt
cmp
push
inc
jecxz
ret
rcr
stos
cs
push
inc
sub
repz
or
pop
cld
add
add
in
popa
add
mov
mov
arpl
imul
sbb
sub
adc
push
cmp
mov
imul
lock
repnz
fwait
stc
mov
ss
call
or
bound
mov
stos
outsl
ret
pop
push
gs
je
out
out
out
shl
into
fsub
add
push
orl
test
mov
adc
or
arpl
test
sub
js
cmp
pop
js
mov
mov
ret
sti
mov
in
xchg
popf
gs
ffreep
aaa
xor
outsb
repnz
daa
test
jecxz
pop
mov
scas
je
xchg
sub
adcb
loope
mov
pop
inc
add
fcoms
cmpsb
mov
pop
xor
scas
and
rcll
hlt
xor
inc
xor
lret
sub
jmp
sbb
cld
fdiv
loop
jmp
lcall
add
push
dec
aas
mov
idiv
inc
lods
xor
lretw
sbbl
xor
lock
push
jae
xchg
aad
icebp
dec
jg
fcom
sbb
mull
into
aam
nop
out
push
mov
mov
jo
sbb
mov
out
sahf
mov
xchg
cmpb
jp
cwtl
aam
pop
add
xchg
xchg
push
mov
dec
sbb
sbb
inc
jecxz
sub
push
in
dec
daa
mov
gs
xor
mov
imul
jae
or
dec
mov
pushf
sub
lods
pop
and
mov
xchg
gs
iret
ljmp
aaa
and
fadds
out
mov
pop
push
addr16
add
and
push
mov
or
jnp
inc
hlt
negb
pop
dec
lahf
mov
mov
jnp
lods
das
fwait
sub
cwtl
insb
movsb
arpl
or
xor
mov
sbb
jb
cs
daa
adc
fs
inc
scas
pop
adc
push
test
dec
cmpsl
sti
iret
pop
aad
stos
sub
mov
popa
fwait
int3
mov
inc
dec
add
call
push
inc
mov
mov
in
scas
mov
cmpl
sbb
arpl
cmp
gs
push
psubusw
test
mov
mov
mov
adc
jecxz
gs
mov
lret
hlt
roll
insb
or
push
pop
ljmp
dec
test
mov
inc
ljmp
and
push
repz
sbb
mov
repnz
lea
fdiv
mov
mov
sbb
xchg
jns
sbb
add
scas
cmp
gs
in
and
dec
test
cli
xor
pop
mov
mov
jl
in
loop
pop
adc
pop
mov
push
jp
mov
insb
movsb
jno
ds
aas
lods
int3
je
aaa
clc
add
push
ret
inc
gs
mov
mov
repz
inc
scas
movsb
cmp
gs
cmpsb
mov
pop
cmpb
dec
mov
pop
mov
mov
push
dec
js
or
xor
inc
mov
test
fiaddl
ja
push
cmc
leave
cmp
push
cmp
mov
mov
scas
inc
push
ret
pop
sbb
int
push
ljmp
test
mov
xchg
ss
xchg
sub
cmpsl
jecxz
insl
jmp
in
daa
sti
cmp
sahf
adc
dec
jmp
pop
cltd
imul
inc
cmp
inc
lock
shlb
ss
or
rcl
jnp
pop
mov
cmpsl
and
aas
pusha
sbb
inc
out
out
mov
stos
fwait
xor
lcall
cmp
leave
xchg
dec
jb
lds
imul
pop
xor
inc
mov
mov
lods
or
pop
jg
pop
pop
mov
push
bound
jb
shl
adc
out
fisubl
sahf
cmp
aad
xor
movsb
adc
add
inc
mov
xchg
js
fisubrl
popf
inc
loopne
xchg
lods
ss
loopne
add
dec
out
rcrb
xchg
xchg
fdivl
mov
jmp
xchg
sti
mov
sbb
lcall
aad
xchg
fstl
lret
push
testb
movsl
stos
push
xor
mov
lods
sti
jmp
fimuls
mov
ss
xchg
push
push
xor
push
lahf
push
out
jbe
mov
ret
jnp
inc
rcrl
test
pop
mov
lods
xchg
adc
add
xor
and
dec
test
and
dec
sbb
mov
and
rol
into
stos
lds
repnz
inc
jg
mov
add
insl
in
xor
insl
in
xchg
addb
cmc
push
clc
inc
pminsw
notb
test
insb
fs
jne
lret
or
fucomp
fdivr
fadds
push
data16
mov
out
add
lods
addr16
cmc
ss
ljmp
cmp
adc
movsl
add
nop
fmul
or
pop
mov
pop
sub
shll
jo
aad
mov
lret
jl
jb
adc
sbb
sti
sub
aad
sbb
stos
jle
fisubl
pop
imul
popa
cltd
test
movsl
loope
lods
bound
movsl
and
and
pop
jmp
repnz
test
xorb
ret
ret
mov
test
shrb
fidivrs
xor
pop
loopne
inc
lods
outsl
push
leave
test
mov
and
or
sbb
mov
shrl
jle
xorl
cltd
xor
add
rcr
mulb
sub
pushf
jne
adc
insl
mov
clc
insl
cwtl
movsb
addr16
test
push
xor
call
sub
std
lea
gs
or
cmp
inc
mov
les
push
jno
cmp
jle
jp
rol
int3
jl
sub
out
xchg
xor
xchg
test
mov
inc
in
jge
xor
sub
pop
pop
cmpsb
adc
jp
add
mov
inc
xchg
pushf
xor
jae
jge
dec
adc
xchg
lcall
adc
sahf
lods
nop
lret
xor
mov
movq
aaa
push
movsb
pusha
mov
sub
mov
mov
xor
stos
test
call
test
cmp
sub
cmp
imull
movl
jge
push
int3
jle
xor
inc
aaa
cmp
daa
hlt
mov
xchg
arpl
or
adc
mov
jb
addr16
or
push
scas
inc
xchg
cmc
sub
popa
xlat
mov
out
push
adc
sbb
ljmp
nop
nop
add
movsl
mov
je
xchg
jne
rcl
jns
mov
sbb
xor
mov
pop
mov
mov
into
dec
enter
adc
cmc
xor
jnp
in
test
and
jg
iret
ret
mov
fwait
inc
pop
pushf
je
sub
jp
cmpl
push
sbb
mov
std
cmc
fidivl
mov
in
movsb
or
add
pusha
ds
xchg
int
jo
incl
lret
or
sub
test
xchg
fwait
loope
mov
out
mov
sahf
jne
xchg
push
es
mov
push
or
hlt
pop
and
cli
sub
add
and
adc
test
jns
imulb
push
push
jmp
adc
or
sbbl
dec
ljmp
rorb
cld
mov
sub
adc
mov
xor
mov
or
ficomps
jmp
cs
xor
jmp
pop
aam
icebp
xor
fstl
pop
fsubrp
ljmp
arpl
push
push
xor
xchg
dec
push
loope
or
mov
data16
stos
jbe
jne
ret
popa
add
mov
sahf
inc
jo
cmpb
inc
aas
cmp
jle
fadds
int3
jne
mov
fwait
stos
ljmp
shl
roll
mov
ljmp
adc
scas
inc
adc
jmp
sub
push
adc
dec
cld
mov
xchg
movsb
sub
xchg
stc
cmp
fcomps
subb
subl
adc
movsl
sbb
jae
adc
stc
js
lcall
mov
adc
sub
xchg
or
xchg
fldl
outsb
fisttpl
xchg
ret
rclb
sub
sub
dec
int3
cmc
or
test
fst
pusha
push
fists
mov
pop
sbb
dec
add
in
movb
inc
icebp
xchg
sbb
daa
fwait
or
hlt
jae
dec
fimull
aad
mov
add
cmpb
out
sbb
and
imul
jne
jae
jecxz
mov
test
push
lods
lea
sbb
stc
mov
sti
call
jbe
pop
mov
arpl
adc
cmpsl
cmpsb
incl
jle
dec
mov
pop
fwait
pop
in
pop
push
fmuls
js
aad
pushf
xchg
sbb
jmp
dec
int3
dec
jne
js
jne
mov
push
in
out
add
adc
mov
mov
push
dec
out
sbb
fwait
and
xchg
mov
mov
fwait
mov
sar
add
in
jecxz
pop
ljmp
xor
loopne
pop
lahf
fnsave
lret
push
ds
cmp
aam
mov
addr16
std
xor
dec
addr16
xor
lea
dec
ljmp
stos
js
add
and
jb
mov
pop
icebp
inc
dec
out
leave
subl
or
jbe
or
jnp
ja,pt
adc
push
jmp
dec
cld
test
pop
inc
cmpsb
mov
push
jl
jae
push
fnstenv
lret
add
scas
adc
ss
xor
sbb
enter
fidivrs
enter
arpl
enter
or
sbb
jb
cs
mov
dec
mov
adc
hlt
pop
movsl
out
xchg
cmp
lods
jo
jecxz
or
bound
or
cwtl
int3
pop
add
bnd
lcall
lods
cmc
fistps
pop
in
mov
gs
stc
movsl
andl
xor
xchg
out
pop
shr
sub
push
xchg
and
aas
ret
lcall
mov
cmp
out
in
and
outsb
mov
dec
hlt
jl
repz
cltd
jl
inc
outsb
movsb
ljmp
xor
movsb
adc
xchg
mov
jae
dec
aas
dec
xor
sbb
sbb
sbb
es
sti
dec
addl
divb
scas
jle
mov
mov
jb
pop
cmp
sbb
ret
cmp
gs
pushf
fisubs
cs
lcall
ljmp
movsl
or
fistps
call
cs
mov
xor
mov
pushf
pop
xchg
pmulhw
mov
jge
xorl
pushf
and
ss
idiv
idivb
mov
sub
ret
rol
fadd
in
pop
mull
test
sbb
jns
sub
mov
bound
xor
xbegin
outsl
cld
sbb
push
scas
fdivs
mov
adc
sub
pop
icebp
outsl
nop
sub
pop
mov
gs
xchg
stos
add
cmp
xchg
insb
mov
cmc
sbb
out
jp
push
jg
mov
cmp
sub
cmp
mov
mov
lods
lock
cmp
mov
jo
inc
nop
xor
dec
clc
rorl
iret
xchg
fcmovb
lods
inc
aam
xchg
xor
lret
fcoml
lea
gs
mov
jl
je
insl
push
ss
test
clc
aas
stos
movsb
pop
add
mov
mov
dec
cmp
in
movsb
mov
test
dec
adc
mov
xchg
addl
push
jbe,pn
sub
in
aas
repz
mov
pop
and
sub
into
jecxz
sbb
aaa
dec
mov
out
js
inc
mov
cmc
stos
push
push
in
xchg
jbe
call
cmp
inc
mov
iret
scas
rclb
push
sbb
cmpl
std
lahf
mov
add
mov
insb
in
mov
xor
xchg
jp
jmp
mov
in
jno
ljmp
gs
add
pop
cmpb
shl
push
pop
lods
pop
daa
jnp
pop
js
cmp
out
push
sbb
and
test
jb
mov
push
jge
ljmp
repz
ret
push
stc
out
dec
cwtl
push
and
addr16
bound
or
inc
xor
clc
fucomip
nop
leave
dec
adc
dec
lcall
jmp
push
xor
ss
jne
jle
popa
sahf
inc
push
dec
jb
mov
xchg
or
adc
fcmovnu
pop
sbb
mov
mov
into
pop
dec
cmp
fldl
aad
sub
mov
add
cmpb
mov
and
rcll
insb
iret
xorb
in
pop
mov
pop
sbb
inc
mov
jl
adc
xchg
jmp
fisttpll
cwtl
push
pop
pop
xchg
mov
sub
push
and
push
push
pop
adc
test
push
jp
mov
dec
adc
mov
sbbl
add
jae
mov
movsl
shrl
lcall
jbe
les
fnstcw
and
pop
mov
push
icebp
xchg
push
out
pop
or
adc
mov
push
std
shlb
arpl
call
decb
sbb
xor
movsb
pop
shll
xchg
clc
imul
pop
ljmp
jbe
lods
out
sbb
fmull
jg
jge
adc
dec
jo
and
ds
mul
pop
mov
xor
ss
iret
inc
xor
es
cmpsb
pusha
cmpsl
inc
mov
or
ja
jb
sub
xor
jno
add
inc
aas
cmp
mov
push
mov
jae
inc
outsl
push
decb
shlb
outsb
cmp
outsb
mov
in
leave
xor
ss
mov
aas
pop
shlb
xlat
xor
imul
jnp
pop
lods
sub
repz
rorl
pop
std
adc
pop
call
gs
fnstcw
push
sub
dec
mov
sub
ror
mov
sub
sub
mov
out
loope
and
jae
negl
lcall
xlat
or
ror
inc
and
sbb
add
mov
pop
test
icebp
sahf
leave
dec
push
ja
pop
pop
xor
roll
sbb
push
pop
lods
push
add
iret
dec
sub
adc
int3
ss
add
pop
cmpsl
cmp
add
lret
pop
xchg
mov
jmp
out
jg
cwtl
gs
mov
push
out
andl
les
jne
push
stc
aam
shlb
daa
xchg
pop
mov
jecxz
aam
add
sbb
push
js
adc
adc
jno
lods
outsl
lds
dec
xchg
in
xchg
lock
or
push
jp
mov
sti
push
sub
add
sbb
fcoms
sub
ss
pop
lock
fcoms
mov
sub
sbb
pop
jne
sti
push
lahf
cmpb
jo
insb
fcomi
nop
divb
int3
scas
mov
aaa
stos
pop
and
jb
push
nop
adc
lods
scas
push
sbb
push
dec
roll
add
pop
xchg
in
add
pop
shll
out
test
sbb
and
cltd
stos
push
roll
mov
sahf
repnz
xchg
pop
dec
aaa
not
inc
push
ljmp
push
cmpsl
pop
push
adc
test
pusha
out
aam
adcl
jb
mov
pop
in
push
cld
xchg
mov
shlb
call
adc
mov
das
repnz
addr16
jo
add
dec
clc
fimull
mov
arpl
lods
inc
cmp
mov
dec
jle
jbe
xchg
jge
sub
push
inc
jns
mov
jp
mov
repnz
dec
aaa
repz
mov
sub
lock
adc
mov
xchg
test
or
pop
aad
mov
dec
xor
mov
pop
dec
imul
adc
mov
insb
out
pop
mov
ret
popa
dec
subl
fidivrl
lret
mov
aaa
push
inc
mov
mov
cmpsb
imul
ljmp
inc
add
xlat
mov
iret
add
jle
xor
jmp
inc
mov
jae
ljmp
mov
mov
icebp
lret
in
xor
xor
aas
mov
loope
lods
push
repz
pop
repz
push
shlb
jge
push
jmp
mov
adc
scas
lcall
pop
shlb
aaa
ret
push
or
in
lods
pop
idiv
add
mov
xlat
sub
loope
inc
jno
xor
cmp
pop
rcll
sbb
xchg
icebp
out
or
mov
ja
fcoms
mov
stos
mov
inc
icebp
jmp
enter
scas
lahf
adc
mov
push
xchg
mov
cwtl
jns
bnd
cltd
cld
mov
cld
loop
add
roll
fwait
test
popf
inc
and
pop
lea
repnz
add
mov
imul
je
test
fld1
shrb
stos
loopne
scas
cli
outsb
sub
mov
mov
push
pop
and
jg
es
push
and
outsl
dec
jmp
jecxz
and
enter
add
jle
pusha
xor
add
push
pop
into
xlat
outsb
add
aam
cld
dec
and
xchg
xchg
lret
mov
cwtl
adc
mov
pop
push
jnp
push
fs
sti
sbb
mov
test
addr16
dec
fiadds
popa
mov
pop
adc
out
sbb
pop
and
pop
into
inc
xor
std
jp
insb
pop
pop
ljmp
mov
jmp
and
aaa
loop
mov
pop
mov
sti
fwait
mov
inc
mov
dec
xchg
imul
shrb
scas
dec
pop
or
mov
les
inc
popa
out
push
lret
pop
xchg
sub
stos
add
push
cmp
lds
jo
loope
xor
pop
out
call
clc
inc
mov
pop
sub
xchg
std
mov
jo
insb
and
addl
pop
pop
flds
jg
cmp
push
stos
xchg
cli
xlat
pop
jo
xchg
aaa
add
cmp
sub
jmp
push
test
out
sahf
xor
aaa
jae
mov
jno
dec
movsl
fsubrp
inc
jae
lea
js
add
pop
bound
adc
mov
out
lods
out
test
std
xor
fistpl
sub
mov
push
lock
jl,pn
jb
inc
push
inc
pusha
sub
pop
jns
clc
cwtl
push
adc
inc
mull
js
nop
jecxz,pn
daa
out
fdivp
sbb
or
push
sbbl
les
pushf
or
lcall
dec
mov
dec
mov
fld
adc
sub
inc
xchg
ss
xchg
loop
out
xchg
bound
dec
push
and
loope
int3
int
mov
inc
sbb
cld
lcall
dec
push
shl
mov
std
push
mov
push
notb
loope
hlt
and
in
adc
scas
loopne
out
cmp
fcompl
hlt
adc
jl
push
sub
xor
cmp
and
out
adc
jg
iret
ror
sbb
cmpsb
mov
aad
mov
js
dec
jo
and
xchg
add
int3
sahf
test
push
loope
xor
mov
inc
jne
mov
xor
or
loopne
and
cmp
cli
pop
fxch
sub
mov
scas
mov
adc
shl
repnz
insl
jno
outsl
fstpt
fidivl
addr16
repz
xchg
imul
push
int
aam
adc
jp
pop
out
add
lahf
adc
fidivrs
test
cli
mov
mov
sbbl
inc
mov
int3
data16
jns
jo
xchg
push
fwait
imul
jl
xlat
jl
negl
sub
hlt
addr16
inc
push
hlt
in
add
ret
loope
push
xchg
gs
shrb
pop
mov
imulb
sarb
sub
shrb
ret
jae
cmc
cltd
pop
lret
pop
cmp
push
leave
ljmp
add
lock
stos
dec
in
and
in
add
push
pusha
faddp
sbb
pop
mov
int3
sbb
or
pop
cmp
mov
das
gs
mov
add
in
pushf
out
or
push
orl
pusha
push
in
addb
and
imulb
and
mov
sbb
rorl
imul
xor
cmp
dec
in
add
std
movsb
je
sbb
xlat
xchg
cmpsb
dec
in
sub
xchg
xchg
adcb
inc
jmp
sbb
jle
mov
xor
jnp
jl
sarb
fneni(8087
sbb
sbb
xchg
inc
and
repz
push
and
stos
jae
movsb
sbb
sub
xlat
int
cwtl
adc
xchg
push
push
cmp
aas
mov
lret
mov
outsl
inc
in
and
out
cmp
pop
xchg
xor
andl
xchg
aaa
dec
add
outsl
pop
cmp
sbb
nop
sbb
mov
xorb
movsb
dec
ljmp
and
mov
insw
sti
sbb
xor
ret
sbb
fnstsw
ret
dec
and
mov
clc
xchg
cmp
into
das
sbb
lds
std
sbb
pop
ficomps
loopne
and
arpl
mov
sub
jp
mov
mov
popf
out
test
out
add
lds
xor
lret
clc
sub
shl
hlt
out
dec
cmp
test
sbb
test
sbb
xlat
sarb
mov
cmc
dec
mull
xchg
xchg
loopne
mov
and
cld
lret
mov
addr16
fldl
add
in
push
jb
jle
jle
xchg
sbb
add
sti
outsl
das
jae
fldcw
divl
adc
add
in
aaa
lret
aam
sbb
lds
cltd
mov
mov
or
or
lret
jno
repnz
mov
mov
leave
mov
cmp
jmp
ja
ret
or
push
add
xchg
mov
pop
pop
mov
in
out
inc
cmp
imul
fxch
ret
inc
adc
lcall
mov
lret
dec
imul
ds
push
sbb
xchg
orb
sbb
push
sbb
and
ljmp
xor
push
ret
popa
mov
test
insb
rolb
inc
push
outsl
add
iret
pop
imul
in
xchg
in
xchg
cwtl
sbb
out
fstps
sbb
out
push
inc
sbb
orl
jae
movsl
ret
dec
imul
pop
pop
adc
push
pushf
movsb
mov
pop
jo
mov
addb
jae
mov
push
test
dec
lock
leave
adc
sbb
pop
fwait
rcrl
jae
sub
aam
into
pop
jne
loopne
lods
shll
loop
mov
pop
and
cmpsl
jbe
movsl
icebp
xor
dec
lcall
cmpsb
popf
push
divb
dec
mov
dec
add
popf
cmp
sbb
jge
cmp
fmull
sbb
pop
jae
mov
fdivrl
stc
lods
mov
jecxz
push
ds
xor
xchg
or
ret
ljmp
sub
mov
and
cmp
int3
pop
stc
push
lock
xchg
jmp
and
xor
mov
add
jns
inc
sub
jno
ficomps
xor
pop
in
cmp
add
les
sahf
pop
lcall
stc
je
dec
rol
push
push
rsm
les
adc
xchg
adc
repz
out
je
sub
addl
mov
mov
es
lret
ss
mov
sbb
jmp
decb
jnp
jno
xor
adc
ret
add
mov
int
mov
shrl
jg
loopne
leave
xchg
push
cltd
mov
movsl
jae
hlt
test
insb
lods
sub
stos
inc
decl
push
pusha
and
sbb
data16
and
ret
ret
in
fsubl
pop
mov
mov
cmp
addb
and
sbb
mov
mov
xlat
leave
dec
ror
enter
dec
pop
inc
jb
sub
cmp
xlat
or
add
dec
loope
pop
pop
inc
cltd
es
fidivrl
sahf
popa
fsubrs
sarl
sahf
push
clc
cmc
test
scas
mov
lret
mov
push
imul
add
loopne
into
pop
xchg
xchg
jp
push
fiadds
out
xorl
ficoml
jae
push
pop
cmc
push
movsl
fcoml
fadds
das
dec
int
cmp
mov
push
push
jns
dec
jb
out
dec
push
dec
push
js
jae
repz
inc
sbb
ss
and
sub
int
push
insb
mov
ljmp
xor
xchg
shrb
fwait
mov
fmull
and
adc
jmp
xchg
enter
das
imul
inc
adc
jne
sarl
adc
loopne
fcoml
insl
inc
mov
std
mov
adc
mov
fisubrs
pop
lcall
mov
xchg
xor
pushf
jae
fwait
sbb
popf
pop
push
cmpsl
sarl
int
ljmp
xlat
sbb
es
and
out
pop
push
aaa
dec
xchg
test
stc
pop
ss
pop
pop
fwait
stc
push
stos
pop
add
mov
incb
cld
clc
test
push
mov
adc
fmul
loop
sbb
pop
dec
out
jge
inc
fdivrs
add
into
mov
and
pushf
add
stc
lods
test
scas
loope
sub
push
in
nop
jo
popa
ret
fnstcw
jmp
jp
or
mov
pop
insb
mov
stos
adc
dec
call
cld
das
arpl
lea
fdivs
lods
lcall
sarb
push
idivl
mov
mov
mov
xchg
rclb
test
cmp
les
adcl
push
dec
xor
or
and
push
dec
fwait
pop
add
roll
jl
das
insl
cmc
xchg
push
adc
jmp
inc
push
inc
aaa
inc
mov
sub
cmp
lahf
out
lea
xchg
dec
xchg
ja
sub
xor
lcall
mov
cmpsb
lds
pop
out
cmp
mov
mov
loope
mov
movsl
cmp
and
or
xchg
lea
or
cmp
frstor
ds
jmp
and
xor
jb
inc
xchg
je
pop
mov
sub
xchg
or
iret
pop
xor
shlb
push
xchg
push
jmp
push
or
jle
xchg
add
pop
xchg
js
mov
cltd
outsl
mov
into
orl
aas
adc
in
js
ret
mov
lahf
or
sahf
loopne
sarl
movsl
inc
inc
fsubrs
and
jno
ss
ja
in
daa
xchg
mov
out
push
mov
mov
out
bound
xchg
dec
pop
jg
mov
call
push
in
fmuls
outsl
push
push
fdivrs
jge
pop
pop
clc
mov
lret
lret
fsubs
movups
outsl
adc
iret
movsb
gs
fimuls
mov
mov
add
jno
or
in
mov
push
mov
daa
or
js
xchg
addb
pushf
and
ds
fcmovne
fbld
lret
test
pop
ret
or
cmp
push
mov
jbe
add
aaa
out
sbb
add
cs
lock
or
mov
jmp
mov
pop
aaa
xchg
mov
lcall
mov
rcl
add
fisttpl
je
das
inc
outsl
jo
out
dec
or
lcall
mov
shlb
pop
and
push
out
js
fists
xor
jmp
out
jne
ret
andb
inc
inc
fdivs
int
into
push
les
outsl
mov
pop
xor
pop
cmc
movsl
sbb
or
dec
inc
arpl
scas
xor
pop
rol
xlat
fstp
sar
pop
outsb
sub
leave
mov
inc
sbb
xchg
mov
pop
nop
cld
dec
rolb
push
fstps
enterw
fucomp
inc
sahf
jno
mov
out
inc
add
inc
mov
xchg
cmp
push
inc
shll
and
repz
in
pop
xchg
pusha
lods
xor
add
add
mov
jns
xlat
xchg
mov
scas
mov
add
pushl
sbb
loopne
and
xor
xchg
xchg
insl
test
mov
test
aad
subb
mov
adc
shr
fidivrs
aam
or
mov
ret
popa
inc
mov
stos
mov
nop
and
ss
jnp
mov
call
in
mov
sahf
popf
clc
mov
cmp
xlat
outsl
jl
nop
sbb
cli
pop
leave
adcb
leave
in
iret
mov
mov
cli
cmp
cmpsb
push
push
jb
cmc
out
pop
stos
into
mov
mov
cmp
push
adc
lock
repnz
sub
adc
je
dec
push
icebp
cs
adc
mov
popa
cmp
and
outsl
lods
inc
jo
mov
and
mov
movl
or
cmpxchg
mov
scas
mov
sub
incl
popa
and
dec
xchg
sub
addr16
insb
mov
es
add
mov
inc
mov
sbb
xchg
xor
mov
xor
sub
push
icebp
pop
mov
repnz
mov
insl
cmp
add
sub
arpl
jno
xor
push
xorl
addb
jbe
adc
pop
dec
test
orb
jae
imul
out
pop
sti
cmp
fs
push
adc
fmul
ret
cmp
call
cli
cmc
mov
pop
movsl
inc
sti
xor
mov
inc
les
mov
pusha
fdiv
mov
mov
aas
xchg
sti
jmp
dec
sbb
cmc
add
jle
fcmove
xor
pop
nop
jmp
nop
cmp
and
fstpl
ljmp
dec
adc
fwait
hlt
dec
pushf
dec
mov
repz
or
and
aaa
xorb
cmp
insl
mov
mov
mov
adc
push
or
inc
lcall
and
jae
push
or
and
dec
mov
add
out
pop
popa
cmp
mov
cs
pop
rcrb
and
in
out
mov
mov
cmp
scas
jle
mov
xor
and
dec
mov
jmp
std
icebp
and
xchg
adc
and
mov
mov
loop
pop
push
sub
jg
xchg
mov
lock
daa
insl
fisubrl
ljmp
ss
arpl
rorl
push
mov
sbbb
fisttpl
and
push
hlt
jp
xchg
cmc
xor
sub
imul
fisttpl
adc
jg
add
lret
fidivrl
out
adc
es
cmp
push
out
add
mov
or
push
and
icebp
and
push
int3
push
fldt
push
mov
gs
inc
rcrb
pusha
pop
imul
jge
mov
push
cmp
daa
mov
repz
mov
lret
inc
jl
sahf
jle
arpl
xchg
dec
daa
das
ret
sti
xlat
pop
repz
fwait
outsl
sbb
in
gs
pop
into
xchg
call
push
ljmp
fnstsw
lods
or
lods
sbb
jg
out
shlb
inc
test
mov
into
clc
into
pop
cld
imul
or
jae
cmp
movsl
mov
arpl
push
xor
fistl
jb
fidivrs
shll
cltd
pop
clc
push
xchg
xchg
stos
imul
mov
cltd
lret
lds
lods
jl
push
inc
add
mov
es
mov
aam
inc
push
test
mov
and
inc
mov
mov
or
push
dec
in
sbb
rolb
test
xor
in
sub
fstpt
adc
addb
inc
sbb
mov
or
pop
cmp
rorl
faddl
fdivrl
pop
repz
cld
sbb
mov
xchg
mov
cmp
push
push
daa
sbb
insb
js
sbb
jecxz
add
bound
int3
iret
std
jle
adc
mov
mov
push
sahf
jge
jno
add
mov
mov
jo
pop
rolb
xor
mov
clc
mov
das
sub
dec
mov
mov
gs
and
sbbb
out
dec
xor
sbb
xchg
inc
adc
pusha
push
and
jp
adc
aaa
daa
test
add
push
push
enter
rclb
out
out
sahf
push
pop
fldcw
daa
lds
dec
pop
sbb
xor
xchg
pop
mov
cs
into
repnz
adc
sbb
fiaddl
fwait
add
sub
sub
xorl
ljmp
adc
daa
cmp
or
mov
cmpl
js
push
scas
fcmovnb
add
add
or
xchg
adc
fwait
dec
pushf
lret
mov
mov
popa
or
es
add
adc
rorl
lods
pop
mov
push
mov
fcompl
sbb
cmp
push
pushaw
xchg
push
gs
jne
mov
ds
push
pushl
pop
dec
or
stos
adc
mov
popa
imul
and
std
shl
cmp
cmp
push
loopne
push
lods
shl
ret
cwtl
mov
das
popa
mov
dec
sub
jge
aas
cmpps
adc
cmp
scas
out
cmpl
add
ja
pop
dec
and
mov
jo
or
std
mov
push
pushf
jle
lds
rclb
lret
or
xchg
mov
mov
das
xchg
movsl
mov
push
data16
add
mov
cmp
pop
loop
inc
mov
les
pop
sub
in
and
push
mov
xor
mov
lret
inc
cmp
sbb
pusha
inc
cltd
das
jg
mov
insb
inc
mov
in
or
ror
loopne
aas
cvtps2pd
add
xor
cmpsl
push
insl
pop
out
jb
popa
incl
hlt
pop
inc
jle
pop
pop
add
pop
popl
repnz
fiaddl
in
cmp
and
jae
pmaxsw
add
lods
pop
sti
out
sahf
je
cld
sub
incb
xor
jg
loope
sahf
add
repz
fadd
lcall
in
xlat
js
mov
pop
add
push
rcl
sub
push
push
inc
aaa
out
cli
sbb
divl
mul
mov
out
inc
inc
push
dec
xchg
rorl
dec
imul
inc
xchg
sub
outsl
jae
mov
sbbb
mov
sub
inc
add
jge
mov
lret
adc
orb
test
adc
lds
push
ds
add
mov
jge
xor
push
fcom
into
es
mov
pop
pushf
dec
fcoms
shrb
ret
arpl
test
mov
dec
adc
icebp
xchg
xor
out
fucom
lock
or
test
dec
stos
mov
les
cmpsl
or
movsl
ficoml
jno
pushf
ret
dec
out
pop
adc
nop
ret
mov
stos
rolb
add
jmp
repz
jmp
out
sbb
fdivs
push
fdivr
add
push
xor
scas
pop
and
dec
or
push
push
cmp
mov
dec
mov
pop
sbb
iret
jmp
xchg
popa
enter
lods
push
in
or
xor
xor
mov
xchg
leave
add
fists
cmp
sahf
cmpsl
pop
cmc
adcb
rolb
iret
sbb
das
js
movsw
adc
sub
mov
pop
mov
mov
xchg
push
xchg
or
inc
loopne
xchg
outsl
jb
imul
aas
push
or
sbb
pop
cs
imul
jnp
and
lret
xor
test
mov
jne
scas
push
sbb
movsl
decb
ret
in
xor
loope
jmp
sbb
xchg
mov
sub
lret
movsb
enter
jp
xchg
inc
or
iret
fldt
adc
xor
fistpl
xchg
loopne
push
push
mov
cmp
iret
jno
cmp
clc
mov
mull
sub
push
mov
int3
add
inc
iret
ror
push
or
loope
scas
insl
arpl
mov
mov
daa
adc
cmp
mov
mov
jle
ss
cmc
cmc
orb
scas
cli
xchg
jne
call
mov
imul
pop
stos
inc
shrb
mov
fmul
sub
stos
flds
les
push
enter
in
xor
je
pinsrw
ret
pop
and
gs
inc
xchg
stc
and
push
push
push
fwait
sbb
lret
jo
xor
lods
scas
mov
jle
inc
call
inc
pop
mov
cmpsb
add
loope
jle
insb
ljmp
adc
sub
inc
cmp
xchg
je
imul
jno
sbb
sahf
and
add
ds
std
rcll
insl
mov
jge
xchg
pop
addb
mov
inc
sbb
test
ja
xor
aaa
push
sub
pop
jo
xor
jl
pop
dec
out
mov
lret
dec
loop
jno
mov
outsl
or
mov
sub
lds
test
sahf
rcrl
cmc
or
fsubs
popf
cmp
clc
int3
sub
inc
jmp
inc
and
jge
and
pop
scas
jg
mov
cli
xor
pop
xchg
out
jns
out
pop
pop
sub
fistps
mov
insl
mov
arpl
scas
pop
dec
sbb
pop
dec
mov
mov
add
inc
mov
push
sbb
xchg
jns
push
xchg
in
cltd
inc
dec
out
mov
add
imul
loop
jb
pop
or
jle
in
pop
inc
push
stos
cltd
pusha
or
xchg
outsb
popf
add
repz
mov
xor
ds
adc
mov
dec
popf
nop
cmp
in
xlat
xor
into
sbb
adc
adc
mov
inc
int3
subl
jg
shll
and
cwtl
and
jecxz
ret
push
aad
mov
scas
dec
popf
and
mov
pop
and
lcall
std
sbb
loop
cmp
popf
test
mov
inc
pop
pusha
outsb
pop
repz
pop
lret
mov
add
sub
add
pushf
or
outsb
jle
push
adc
insl
nop
jp
test
ja
mov
pop
jne
push
jne
pusha
add
and
sub
lret
cld
and
dec
repz
pusha
repnz
dec
mov
jnp
cltd
mov
cmp
jns
pop
hlt
inc
xchg
scas
mov
mov
push
adc
jne
pop
into
mov
sbb
and
jo
mov
and
inc
dec
lret
mov
mov
sub
xor
sub
and
xor
xor
cmc
dec
mov
popf
aaa
dec
sahf
orl
and
mov
data16
dec
addb
inc
int
mov
mov
gs
or
mov
lds
mov
leave
inc
adc
sti
mov
push
or
sub
jge
call
loop
mov
mov
push
icebp
div
cmc
sub
adc
scas
cmp
lret
fcompl
hlt
loop
xchg
lods
jnp
xchg
cmp
inc
mov
jae
jmp
cmpsb
es
vminsd
mov
sub
stos
push
loop
dec
cmp
mov
xchg
pop
into
test
mov
xlat
ret
lods
inc
pop
mov
dec
mov
enter
mov
mov
and
mov
clc
push
je
push
ljmp
mov
or
and
mov
sub
jge
arpl
rcr
stos
mov
out
cs
mov
icebp
in
or
pop
adc
dec
in
nop
in
push
mov
jle
es
sbb
out
sbb
adc
enter
xchg
jecxz
lcall
loope
lods
ss
sar
xchg
andl
inc
stc
inc
mov
das
mov
or
jne
lods
pop
cs
mulb
popf
inc
mov
xorl
rcr
jnp
fst
mov
mov
icebp
fimull
mov
clc
mov
pop
test
ret
loope
fsub
inc
into
mov
add
and
inc
movsb
inc
gs
lcall
rol
stos
mov
push
mov
test
xor
mov
dec
fnsave
rolb
inc
popf
movsb
stos
push
cld
and
push
imul
sub
lds
fucom
cli
mov
sti
push
pop
or
push
out
jg
imul
das
mov
add
xchg
call
and
adc
xlat
pop
cmp
ret
jmp
int3
fs
push
ret
or
in
mov
jns
mov
push
shr
ja
pushf
lea
mov
mov
rolb
push
rolb
mov
arpl
push
xbegin
daa
lahf
and
push
aaa
xchg
sub
inc
mov
jp
sub
test
adc
pop
popa
clc
jle
scas
push
les
das
jle
cmp
aaa
jns
imul
xor
repnz
pop
adc
scas
add
inc
lods
scas
sbb
cmpsl
int
in
xorl
xchg
leave
int3
insl
leave
sbb
ret
sub
ss
leave
sbb
lods
adcb
jns
into
or
fsubrs
pusha
ret
les
push
pop
pop
stos
inc
cwtl
ret
bound
in
jnp
test
push
mov
mov
push
push
push
cmp
adc
lret
push
add
pop
repnz
mov
jmp
loope
test
in
adc
jmp
mov
mov
test
jae
leave
or
sub
int
std
mov
mov
or
xor
pop
mov
mov
xchg
out
pop
test
imull
arpl
mov
loope
sub
mov
addr16
sbb
push
pop
inc
cmp
adcb
mov
lahf
ficoms
mov
adc
int
jmp
lods
in
mov
inc
xchg
mov
or
out
fists
or
mov
mul
arpl
movsb
inc
incb
inc
insb
fwait
jns
sbb
cs
mov
push
and
dec
adc
jae
sub
test
inc
xchg
push
sub
push
insb
mov
fnstenv
pop
mov
push
insl
sbb
in
js
jle
fsubrl
loop
dec
rdpmc
mov
pop
int3
cmp
daa
jnp
lock
jle
and
ficompl
adcl
push
aas
cwtl
and
mov
or
leave
sbbl
inc
pop
push
outsl
sub
daa
mov
mov
lods
xor
pop
sub
les
jecxz
pop
and
inc
inc
cmovg
pop
dec
imul
cmpsl
add
out
mov
push
fptan
pusha
inc
sub
sbb
and
sbb
mov
xchg
xor
mov
lods
das
int3
sbb
jmp
lahf
call
ja
movsb
and
divl
shll
jp
sub
call
pop
mov
fnstcw
je
mov
jns
out
fidivrs
push
sub
leave
repz
add
dec
and
out
insb
pop
pop
in
dec
pop
mov
lret
sub
pop
lahf
out
ljmp
mov
and
imul
push
outsl
sub
inc
aas
rorb
cli
push
aas
gs
repnz
repz
mov
lahf
rclb
xlat
jecxz
xor
mov
mov
cli
pop
dec
push
imul
jecxz
fstps
mov
and
dec
mov
cltd
lds
xchg
push
lea
dec
sbb
or
dec
movsl
xchg
in
test
mov
lods
clc
and
push
orb
mov
sub
lock
lea
leave
mov
iret
xchg
jbe
add
dec
xor
shlb
and
arpl
jmp
mov
jecxz
clc
dec
xchg
mov
sbb
pop
pop
mov
js
or
int3
cmp
and
fmuls
ja
push
outsb
add
lret
fcmove
pop
aas
lods
inc
adc
pop
mov
mov
xchg
out
mov
xor
int3
cmpsl
push
cltd
push
int3
adcl
ficoms
pop
in
sbb
sbb
xor
scas
adc
pop
mov
pop
cld
add
pop
mov
std
in
push
mov
ss
sbb
mov
sbb
test
aas
les
inc
js
adcb
xchg
lock
jle,pn
test
cli
fsubl
in
out
xor
mov
popf
lods
sub
xor
add
mov
das
stos
cwtl
daa
filds
rol
xorl
xchg
mov
pushf
or
jg
xor
pop
loopne,pn
fs
das
bound
lcall
mov
sbb
fcomps
inc
cs
mov
in
cmp
fildll
jnp
fcomi
insb
adc
cli
xchg
adc
add
xchg
xor
jns
aam
lock
sub
inc
gs
pop
dec
ret
push
pop
mov
popa
jnp
inc
stc
mov
cmpsb
push
and
or
rorb
dec
subl
pop
add
stos
dec
add
xchg
add
xchg
dec
outsb
test
fdivs
or
movsl
jle
sahf
stos
sbb
inc
push
jo
pop
out
push
jnp
lods
popa
outsb
movsl
or
cvtps2pi
ret
jge
pop
xchg
movsb
xlat
adc
dec
iret
mov
push
fcomps
rolb
iret
jbe
shrl
lret
mov
or
add
test
loopne
test
cmp
aad
dec
data16
out
ss
mov
pop
clc
or
loop
adc
shl
xor
aam
or
nop
jp
xchg
es
add
lret
into
mov
aaa
mov
mov
lock
int3
ja
cs
jl
jmp
mov
xor
sbb
cltd
xor
or
bound
stos
xchg
or
test
pop
loop
dec
hlt
xchg
into
das
mov
pop
adc
fstpt
pop
in
out
sbb
aad
mov
sbb
and
lea
inc
lret
jns
mov
out
mov
sbb
adc
cmpsb
enter
push
cmp
insb
push
push
jmp
pop
and
inc
daa
popa
mov
sbbl
popa
adc
pavgw
scas
repnz
test
loopne
fsub
scas
inc
ds
mov
rcr
movsl
add
and
xor
adc
jae
mov
dec
shlb
outsl
xor
pop
xchg
daa
shll
xchg
out
scas
xchg
loope
pop
inc
mov
pushf
mov
iret
xchg
mov
ljmp
adc
bound
cmpsl
les
sbb
xor
pushf
cvtdq2ps
fs
mov
jns
mov
outsl
push
setno
sbb
lods
dec
lahf
jmp
push
arpl
mov
jbe
lcall
push
ret
xchg
jns
dec
jne
in
jae
add
mov
xor
dec
or
in
pop
jo
in
push
push
mov
sub
sub
cmc
pop
jle
mov
mov
jp
arpl
push
iret
leave
imull
js
rcrl
inc
sbb
cmpsb
bound
push
xchg
or
std
push
xchg
sub
divb
jl
push
push
scas
mov
lds
add
insl
loopne
add
and
or
inc
sub
mov
pop
xor
mov
imul
jo
or
outsl
fcoms
orb
sbb
adc
and
push
add
push
lea
data16
push
call
push
push
fldt
test
push
loope
xchg
lahf
das
out
sbb
or
mov
call
jecxz
rcll
enter
mov
hlt
cmp
mov
aad
mov
inc
shll
pusha
sub
pop
stos
mov
mov
pop
aaa
dec
sub
lods
mov
cs
fmull
stos
cli
pop
lds
cmpsl
fimull
nop
xchg
xchg
mov
and
cmp
imul
add
int
je
in
add
xor
test
arpl
rolb
sti
aad
cwtl
out
imul
cmp
mov
jb
xchg
mov
pop
sbb
cld
int
ja
inc
jb
stos
push
loope
outsb
mov
popf
inc
or
int3
sbb
pop
jns
sbb
test
mov
sbb
cwtl
aad
jb
cs
add
and
cmp
xchg
push
sbb
lods
movsl
pop
sbb
sar
sbb
cltd
in
jle,pt
clc
out
shll
pop
and
add
nop
jmp
lret
jle
jns
ja
mov
cld
test
lahf
rcrb
xchg
andb
mov
mov
cmp
aam
insb
mov
and
pop
adc
cmp
lods
das
xor
cltd
leave
movsb
mov
jnp
xchg
xchg
push
out
call
ficoml
loope
add
repnz
push
lcall
xorl
int
loopne
lret
mov
int
xor
mov
dec
sub
mov
xchg
out
in
jo
lret
les
sub
aaa
insl
test
fcomp
or
lods
int3
daa
addb
pop
pop
dec
clc
and
cmp
movsl
punpckhwd
xchg
jp
pop
inc
add
imul
dec
enter
loopne
xchg
adc
mov
data16
jecxz
sbb
cmp
add
inc
fldt
sbb
jp
and
imul
in
xchg
pusha
pop
loopne
push
roll
fs
or
fnstsw
pop
sub
xchg
clc
imul
pop
pushf
push
repz
scas
inc
xor
testl
sbb
dec
insl
scas
or
lods
pop
adc
sbb
mov
xchg
scas
jne
mov
sbb
negl
mov
in
mov
mov
mov
sbb
sub
ret
loopne
test
ds
fldt
dec
sahf
push
dec
mov
mov
shrb
fimuls
and
loopne
mov
mov
imul
sarl
imul
loope
push
inc
cmp
clc
mov
pushf
mov
inc
adc
sbb
mov
and
neg
mov
add
jg
and
and
pop
roll
stos
adcl
scas
add
sub
xchg
add
inc
outsl
mov
aaa
in
jno
ffree
ficompl
les
mov
hlt
inc
sbb
fmulp
rorl
adc
scas
xor
pop
add
pop
mov
xlat
rcr
sub
push
or
into
ret
daa
xor
int
jge
outsl
and
sub
mov
mov
adc
adc
fisttps
mov
outsl
out
cmp
in
adc
xor
jl
cltd
xchg
push
cltd
bnd
cmp
or
dec
fdivl
movsbl
movsb
ljmp
adc
mov
jns
lock
push
cmp
hlt
cltd
mov
mov
sarl
popf
jo
insl
mov
jl
cmc
int
xchg
mov
add
push
outsb
jmp
inc
push
or
mov
loopne
push
jbe
sti
shlb
inc
icebp
or
cmpsl
inc
aad
enter
inc
lret
out
cmpsb
lock
shll
cwtl
in
call
movsb
adc
fisubrl
loope
add
stos
xchg
arpl
mov
xor
cli
stos
or
mov
stos
out
test
push
das
lds
popf
xor
in
out
repz
les
add
mov
xor
aas
mov
ss
std
mov
std
pop
cmp
es
mov
clc
icebp
imul
lret
sbb
daa
dec
out
adc
xchg
fwait
int3
mov
lret
add
xor
xor
push
push
mov
jb
imul
push
jbe
lret
addr16
push
popa
out
and
pop
adc
add
and
mov
xor
repnz
jge
cmp
ljmp
cmp
movsl
jne
pop
int
imul
push
arpl
insb
and
ret
in
cli
lds
pop
inc
pop
jp
std
cmpsb
mov
adc
sub
icebp
pop
xchg
mov
xchg
jecxz
popf
or
add
push
addr16
pushf
repnz
xchg
push
mov
stos
stos
mov
xor
dec
data16
pop
cwtl
pusha
std
xchg
lock
test
bnd
push
push
lret
add
mov
in
xchg
pushf
mov
sbb
sub
push
lea
lret
outsl
jecxz
ret
fstl
arpl
les
or
pop
outsl
not
fldl
xchg
lea
adc
fistl
fmulp
jbe
cmp
mov
mov
lods
sub
push
mov
fldt
loopne
pop
sbb
push
push
pop
popa
mov
sbb
mov
insl
sub
xchg
bound
lock
mov
mov
dec
loope
lods
ljmp
cli
adc
dec
rclb
mov
cmp
testl
out
shr
movsl
pop
dec
inc
cltd
ja
sub
popa
push
push
sbb
push
jbe
movsb
popf
repnz
or
add
lods
pop
shlb
enter
jb
push
sbb
insb
test
or
loope
es
sub
cmp
xchg
ret
mov
push
pop
or
hlt
nop
mov
or
jns
push
pusha
movsb
cmp
bound
dec
insl
je
jmp
push
dec
rclb
gs
aam
stos
loope
fdivrs
mov
fs
sub
mov
lcall
cli
sbb
jmp
pop
pusha
fs
xchg
jb
and
cmp
rcl
pop
scas
repnz
push
fs
add
push
jnp
je
ljmp
arpl
or
je
push
cmp
add
lret
mov
sbb
xlat
pop
pushf
ljmp
rorb
and
or
dec
mov
sbb
sbb
es
push
add
and
xchg
ret
sbb
arpl
daa
ret
loopne
jns
dec
dec
mov
push
inc
inc
xor
mov
push
stc
cld
jmp
jo
fistl
das
ret
sub
mov
movsb
cmpsl
andb
adcl
cltd
push
jns
bound
sbb
bound
jg
shrl
cmp
js
cmpsb
fsubs
fidivl
loop
neg
pop
ss
das
cmc
cmp
data16
push
jge
inc
roll
pop
ss
aas
jb
fnsave
repz
into
jp
jmp
and
jns
mov
mov
adcl
push
jg
mov
cmpsb
push
call
rol
bound
push
aad
dec
les
xchg
xor
or
into
push
nop
sahf
scas
cmpsl
icebp
mov
mov
sub
int
mov
imul
mov
jge
loop
jo
dec
push
jns
lock
loope
or
push
shrb
push
out
enter
cwtl
xorb
xor
inc
cs
in
ret
mov
movsl
nop
dec
jns
fnstsw
ja
in
push
sti
jmp
cmc
test
and
jnp
test
mov
sbb
sbb
add
lds
clc
aas
xchg
fidivrl
or
push
sbb
cmc
jne
movsb
stc
xor
hlt
imul
jl
fstpt
data16
sub
ljmp
and
adc
fdivl
fabs
dec
push
add
inc
ds
fstpt
mov
loopne
push
mov
add
push
xor
or
pop
sahf
mov
cmp
jge
jge
sbb
test
out
push
test
inc
mov
rorb
js
pop
mov
mov
lods
adc
clc
fs
stc
imul
or
inc
inc
inc
in
movsb
out
push
es
mov
fldl
sbb
mov
xchg
add
les
mov
leave
sar
mov
or
inc
adc
loopne
call
xlat
sub
jbe
repnz
cwtl
jl
sti
sbb
ret
xor
fdivr
test
push
stos
das
mov
fs
mov
jp
cmp
int
out
je
lods
and
mov
clc
roll
pop
jp
notl
movsl
inc
mov
lods
in
mov
push
cmp
mov
repnz
popf
mov
sub
push
pop
mov
push
xchg
data16
dec
lret
insb
jmp
dec
test
iret
dec
bound
sub
add
vpmacsdqh
cmpsb
dec
out
jmp
xchg
sbb
and
push
mov
adc
dec
dec
dec
mov
mov
cmp
mov
ljmp
cld
ss
aaa
ret
fwait
call
or
pop
in
ja
bound
sbb
pop
inc
and
test
shrl
repnz
cltd
sbb
popa
add
lods
jae
mov
fistl
popa
pop
mov
loopne
sub
jl
cmp
mov
std
rol
xchg
stos
js
cmc
out
aad
dec
es
sbb
jp
xchg
mov
leave
jmp
and
adcb
sbb
adc
gs
movsb
stos
mov
mov
adc
daa
roll
sub
mov
into
xchg
xor
xor
sysexit
test
dec
in
orl
icebp
push
inc
push
add
or
xor
push
aas
and
inc
add
repz
jg
jg
enter
cwtl
imul
lret
pop
mov
fiaddl
rclb
ret
jns
data16
jo
cmp
adc
mov
aam
iret
sbb
in
mov
jecxz
into
xor
and
jle
sub
imul
or
dec
iret
sub
push
cmpsl
sarl
sti
outsb
pop
jb
mov
or
mov
sti
jne
js
rcr
push
arpl
enter
and
push
ret
and
cmp
scas
insb
popa
lahf
pop
scas
mov
and
aad
xchg
rcl
enter
inc
mov
out
cmpsb
test
cmp
lret
call
cmp
or
enter
mov
fucomip
pop
xchg
push
in
out
lret
cmpb
lcall
xchg
cli
cltd
mov
push
jl
xchg
xchg
aad
or
xor
xchg
outsl
sub
lret
xchg
in
jae
push
add
sbb
les
loopne
mov
sub
mov
mov
arpl
decl
js
mov
jp
movl
insb
jbe
aaa
pusha
das
xchg
lods
mov
and
jp
or
and
ss
push
insb
xchg
stc
or
dec
out
dec
leave
stos
pop
cmp
test
add
loope
inc
xor
jno
xor
inc
xorb
test
mov
jmp
add
mov
bound
mov
sar
call
ret
mov
popf
xor
aaa
test
dec
aad
add
rcr
stc
movsl
mov
dec
jno
dec
das
or
pop
mov
clc
mov
sub
mov
xchg
cwtl
push
push
nop
out
lods
mov
pop
test
xlat
sub
push
fdivrl
in
jnp
es
mov
mov
sahf
cmp
cmc
aas
add
xor
shlb
pop
nop
dec
adc
cmp
data16
dec
push
popa
outsl
mov
push
mov
ja
jns
insb
or
sub
or
push
inc
adc
lds
push
pop
mov
out
mov
sbb
add
outsb
das
jecxz
enter
fsubrs
xchg
arpl
adc
mov
outsl
pop
xor
cwtl
sub
push
lea
dec
inc
xchg
cmpsb
pop
test
lret
leave
add
scas
add
into
sub
shl
adc
xchg
pusha
mov
jle
arpl
add
es
mov
lods
mov
dec
icebp
add
xchg
scas
fisttps
jbe
paddsw
dec
or
dec
ret
xor
jecxz
sbb
jo
jge
call
cmp
pop
push
out
inc
mov
mov
sub
mov
sbb
push
loopne
mov
mov
push
adc
pop
push
dec
dec
sub
and
cltd
jns
cltd
inc
mov
jb
jecxz
and
push
outsb
lret
std
push
mov
mov
testl
pop
jmp
mov
xchg
test
or
pop
cmp
or
sbb
iret
mov
jb
out
sub
popf
jl
mov
imul
cld
sub
pop
xor
sarl
fsub
pop
jne
test
dec
movsb
scas
fistpl
sbb
mov
cmpsl
insb
xor
mov
movsb
in
or
adc
aas
in
cs
mov
enter
out
pushf
testb
mov
dec
lret
push
mov
out
test
sti
pop
xor
movsl
mov
lret
stc
mov
cmp
fbld
xchg
les
jl
movsl
xchg
enter
sbb
jecxz
movsb
in
sbb
scas
jle
cmp
into
loope
mov
lahf
mov
pushl
and
mov
shlb
and
mov
mov
int3
stc
jge
test
lcall
xor
sub
inc
and
nop
sbbb
pop
call
hlt
test
xchg
add
rol
cmp
lods
jl
push
push
fisubs
sbb
fsub
cmp
or
mov
push
sbb
sub
inc
inc
or
js
nop
push
in
ljmp
pusha
outsl
adc
popf
xchg
dec
stos
les
cwtl
xchg
xchg
cmpsl
mov
mov
push
xchg
pop
mov
cmp
mov
loope
pop
sub
ret
adc
fbld
pop
xchg
mov
xchg
dec
add
movsl
xchg
sbb
les
loope
aam
jecxz
push
lahf
insl
jnp
in
pop
stos
or
mov
pop
cmpsl
cmc
enter
or
and
rolb
and
xchg
add
inc
hlt
add
rorl
jp
mov
aam
and
dec
mov
cmovae
mov
lods
jo
push
or
aaa
pop
xchg
dec
push
icebp
mov
mov
xor
adc
rorl
jmp
cmp
sbb
cmp
adc
push
hlt
or
insb
jae
xchg
mov
call
mov
push
jb
int
and
xor
xchg
or
mov
outsb
popa
pushf
in
xor
mov
xchg
dec
iret
lahf
repz
enter
aas
lret
lock
sbb
cwtl
aad
jbe
or
lahf
test
cmp
in
loope
sub
push
push
adc
fldcw
jno
cmpsb
xchg
and
icebp
mov
dec
ret
mulb
sbb
leave
in
mov
clc
sti
outsb
mov
sbb
xchg
addr16
inc
push
in
mov
test
xrelease
mov
nop
fnstsw
in
mov
inc
jp
movsb
adc
pop
pushf
sub
or
lock
push
adc
test
cli
hlt
sbb
cmpsl
pop
stos
mov
xlat
cmp
fs
xor
add
cltd
xor
ret
sti
push
iret
testb
out
movsl
fs
pop
adc
popa
push
lret
dec
inc
repz
add
pop
xchg
cs
inc
das
imul
add
lods
aam
shrl
adc
jp
mov
aaa
xlat
jbe
fsubl
jecxz
lds
jae
dec
cmp
sbb
rcrb
jb
in
lret
jae
dec
out
test
in
mov
sbb
lds
sbb
scas
mov
mov
sahf
push
ss
push
rcr
sti
js
shll
xor
xor
cs
dec
scas
jo
setg
mov
jp
das
jns
push
jno
scas
push
sub
enter
sahf
mov
cmp
dec
int3
xlat
pop
das
jo
ja
jp
imul
pop
test
outsl
fsubs
into
mov
data16
pop
xchg
jne
cmp
inc
push
lods
adc
xchg
inc
mov
and
inc
dec
add
jg
int
inc
dec
mov
inc
idivl
dec
cmpl
mov
stos
sarb
mov
fcmovnbe
adc
cmpsb
mov
testl
pop
inc
jmp
mov
pop
dec
mov
pop
out
mov
cmp
mov
outsb
rcll
xchg
insl
xor
inc
stc
or
out
clc
inc
jns
hlt
dec
mov
sbb
insl
adc
addr16
stos
mov
test
xor
sub
movsl
jmp
xchg
in
sbb
ror
cwtl
cmp
movl
mov
lock
imul
cld
mov
pop
adc
xchg
push
mov
fcoms
dec
mov
int3
fs
lret
push
movsl
lret
lcall
imul
lods
aas
sub
ret
jo
mov
add
jp
mov
sub
push
sbbb
mov
mov
test
mov
bswap
insb
mov
jg
pop
insl
mov
adc
adc
out
pop
adc
jp
repz
es
fistl
ret
xor
push
pop
adc
jmp
shll
imul
xor
mov
or
adc
xchg
data16
push
fs
xlat
in
pop
outsb
ss
stos
lret
in
jo
push
cld
inc
ljmp
fstpl
hlt
jl
rcrl
gs
hlt
xor
mov
mov
sbb
stc
test
nop
jmp
mov
int
xchg
repnz
adc
mov
aad
faddl
add
das
cmp
cli
pop
xor
in
jns
sub
mov
test
lea
clc
jns
sbb
mov
into
scas
mov
out
push
mov
cld
cs
mov
inc
xor
cltd
sarb
test
addr16
bound
imul
or
punpckhbw
pop
sub
mov
aad
call
scas
out
test
scas
out
nop
cmp
or
hlt
lock
jae
das
addr16
ret
sub
daa
test
jmp
mov
in
pop
cmp
fadds
addr16
inc
ss
push
enter
and
inc
popf
xor
add
int
mov
shll
push
ja
ret
std
jnp
mov
mov
stos
mov
adc
decb
out
adc
mov
mov
das
aad
mulb
fwait
jne
sub
popa
xlat
shlb
sti
leave
jne
je
das
sarl
mov
ds
in
jp
test
decl
shrb
leave
unpckhps
stos
imul
sarl
dec
scas
mov
je
mov
flds
addr16
jmp
popf
xor
inc
pop
in
jnp
popf
cmpsl
into
sub
jp
mov
pop
stos
sbbb
fucom
or
adc
rorb
mov
outsb
mov
add
and
subb
cmp
mov
inc
adc
push
daa
mov
clc
pop
xor
push
xor
mov
inc
les
pop
or
lahf
test
xor
lods
push
add
push
pop
adc
out
leave
lock
rcrl
lock
inc
push
adc
mov
mov
daa
imul
push
mov
popf
push
add
mov
cmc
test
mov
push
jl
push
js
push
data16
iret
rcrl
test
xchg
stos
js
xchg
xorb
rcll
and
loop
inc
or
ret
imul
jmp
addps
pop
lahf
bound
pop
jmp
xchg
arpl
cmp
sahf
cwtl
pushf
jb
add
into
cs
pop
mov
push
jecxz
fcmovbe
popa
inc
mov
je
push
and
jo
xchg
outsl
cli
gs
loopne
cmp
ret
pop
icebp
scas
jne
mov
cwtl
inc
int
jg
imull
mov
es
les
shlb
xlat
dec
pop
ja
adc
pop
out
in
mov
inc
gs
orb
sti
aas
adc
loope
mov
jg
push
and
or
mov
jae
or
jbe
push
and
pop
lahf
daa
sbbb
repnz
and
stc
push
popf
rcll
sub
repnz
xchg
push
mov
jge
nop
and
lcall
dec
hlt
push
or
add
data16
push
aad
ss
loopne
ret
xchg
sub
jecxz
mov
mov
aaa
cld
add
mov
into
xchg
stos
mov
sub
sahf
mov
cld
push
add
push
stos
or
sub
movsb
cmp
lahf
fnstenv
sarl
pop
jecxz
cmp
xchg
jo
into
cltd
inc
sub
jl
push
hlt
push
mov
incl
jae
sahf
loopne
inc
fildl
call
mov
mov
bound
and
cs
push
addl
jne
mov
mov
fildll
mulb
push
fcoms
inc
out
cmpsb
stos
mov
cs
jecxz
sahf
pop
adc
idivl
clc
repz
push
xor
inc
ja
mov
pushf
mov
mov
cltd
xchg
lock
and
gs
cmp
push
pop
cmp
sahf
push
mov
sub
mov
nop
xchg
xadd
add
xor
or
test
cwtl
sub
rorb
add
sbb
add
outsb
rcrl
pushf
push
mov
aaa
mov
dec
aad
scas
addr16
cmp
jl
mov
fdivs
add
jb
jae
mov
std
push
inc
cmp
hlt
pop
in
int
add
sti
cmc
mov
jae
xchg
lods
ficoml
mov
inc
shll
fcomp
subl
sbb
cmpl
jne
adc
in
mov
or
dec
bound
fistps
inc
inc
loop
inc
scas
add
inc
aam
pop
outsl
jecxz
int
mov
cmpl
xorb
imul
pop
cli
lcall
test
xchg
std
cli
out
xchg
scas
clc
mov
sarl
mov
cltd
mov
popa
roll
mov
mov
xlat
hlt
mov
fadds
pop
push
fistpl
gs
movsl
je
push
jle
pop
or
inc
mov
hlt
bound
push
push
jne
xchg
pop
inc
mov
mov
lea
mov
sub
or
pop
push
add
mov
das
push
mov
inc
add
rcrb
sub
pop
sbb
adc
or
les
call
out
push
xchg
sub
orb
add
add
or
dec
fstpl
add
daa
pop
in
push
or
push
je
sub
sub
imull
jne
xor
loop
xchg
mov
push
jns
into
daa
insb
jg
shll
loop
adc
movsb
fdivr
push
sub
mov
inc
and
dec
xor
rorb
and
outsb
mov
lods
dec
or
stos
sbb
dec
xor
gs
cmpsl
stc
data16
push
int
cmp
lahf
and
or
inc
loope
sbbb
inc
negb
or
rcrl
ljmp
outsb
in
mov
arpl
sbb
out
pushf
outsl
mov
adc
div
jns
inc
lcall
jmp
pop
pop
mov
cltd
inc
cmpl
stos
cmp
add
lcall
mov
pop
lea
pushf
cltd
bound
mov
pop
mov
dec
addr16
imul
daa
push
jb
push
loopne
mov
pop
stos
enter
pop
sub
and
pusha
sbb
jbe
rclb
lock
jb
or
insl
mov
jmp
fdivrs
sarb
xor
es
out
or
add
dec
add
gs
iret
cltd
push
lea
je
or
cs
loop
daa
push
enter
imul
std
movsb
jge
dec
jo
push
hlt
leave
in
dec
nop
mov
icebp
imul
jmp
mov
or
add
repnz
aam
inc
inc
push
lods
adc
pop
or
and
cmp
lods
lds
cmc
out
jnp
pop
mov
push
daa
std
stos
fisubs
fmul
in
psrlw
mov
nop
pop
xorb
pop
dec
enter
xchg
dec
fcoml
cmc
cltd
jno
xchg
loope
pop
movsb
popf
hlt
and
add
inc
jno
jecxz
add
cmc
xchg
in
add
enter
and
movsl
enter
aam
or
or
stc
add
add
jecxz
flds
jge
shl
push
popa
lret
call
lcall
rcr
div
mov
movsl
adc
ret
inc
and
mov
mov
sbb
icebp
aaa
nop
push
movsb
in
cs
add
inc
xor
push
inc
shl
inc
js
test
das
and
lcall
imul
fs
int
hlt
sbb
push
xchg
fistps
lods
loop
or
sahf
push
rol
std
xlat
pop
movsb
cmp
cmp
aaa
hlt
mov
jae
push
lcall
mov
pop
mov
jne
pushf
jns
mov
fimuls
int3
adc
adc
xchg
add
mov
jbe
pop
add
cmp
sub
jo
js
jb
mov
mov
sub
loopne
out
jns
outsb
xchg
dec
mov
fwait
sbb
iret
push
xor
fcomps
mulb
aas
xchg
pop
push
outsb
mov
fstp
mov
lahf
jne
mov
movsb
sub
add
mov
cmp
cmc
pop
push
sbb
adc
or
leave
mov
xchg
call
cmpsl
add
mov
xchg
arpl
incl
lock
es
mov
xchg
mov
cmp
inc
dec
lock
inc
test
fists
aam
add
or
movsb
repz
lock
ret
sub
outsl
shrl
xor
xchg
mov
or
fldt
dec
jp
jns
fdivrl
ja
test
push
push
mov
jg
adc
int
popa
add
cmp
jo
push
sub
sub
sbbl
loopne,pn
sub
test
push
lret
adc
inc
cmpsl
xchg
test
push
jmp
push
sbb
lea
mov
mov
mov
fs
fwait
xlat
inc
mov
sbb
mov
jp
sahf
pusha
movsb
push
jp
into
and
dec
push
test
sbb
sub
fsubrl
push
out
inc
push
xchg
xchg
pop
or
jo
mov
fdivp
int3
into
xor
jle
xchg
mov
lret
push
jb
sub
bound
adc
aas
mov
xchg
call
rorb
jnp
pushf
jge
rcll
sbb
push
lret
jnp
push
lahf
iret
ficompl
add
loopne
cmp
popf
or
lret
incb
loope
push
push
stc
out
dec
and
loopne
add
sbb
aas
sahf
inc
xor
inc
pop
adc
clc
pop
inc
imul
test
leave
dec
mov
out
xor
clc
arpl
in
in
movsl
test
iret
fistpll
cli
dec
jmp
ficomps
je
rolb
pop
xchg
mov
push
stc
push
pop
mov
js
xchg
imul
mov
push
dec
fcomps
cmp
push
cmp
sub
outsl
mov
roll
jle
in
inc
les
les
mov
out
fldcw
mov
push
sub
push
andl
pop
loop
popa
clc
dec
mov
mov
aaa
fisubl
outsl
and
xor
or
mov
dec
out
jge
mov
stos
rorl
addr16
sarl
inc
ret
dec
mov
inc
ss
inc
jb
lea
jecxz
sbb
and
add
dec
roll
sti
xchg
stos
lock
clc
xchg
inc
in
aad
in
xchg
mov
ds
cmpsl
popa
fwait
dec
mov
jb
mov
and
jns
dec
fnsave
test
aas
add
sahf
test
pop
leave
jg
xlat
jge
cmp
idivb
xchg
fldt
lcall
dec
inc
push
aad
pushf
adc
loope
xchg
fwait
lods
inc
push
push
pushf
pop
iret
popa
inc
dec
rcrl
inc
lods
icebp
clc
mov
xchg
in
sub
mov
fstpl
jb
js
stos
push
and
je
xchg
test
bound
sbb
push
mov
ret
mov
idivl
mov
mov
clc
xlat
into
fcompl
push
mov
sbb
stos
mov
popa
out
test
repnz
repnz
pop
inc
xchg
sbb
aam
fcoms
sbb
sbb
xor
push
pop
sar
pop
lret
or
inc
roll
dec
push
dec
dec
mov
lcall
push
and
inc
lds
icebp
xor
pushf
lret
imulb
mov
pop
mov
gs
or
lret
loop
scas
and
outsb
mov
xor
mov
cmp
lret
ljmp
das
xchg
repz
std
jl
je
sarl
jl
mov
mov
jb
icebp
xor
xor
jmp
loop
loopne
insl
and
test
cmp
lahf
dec
push
jecxz
mov
mov
adc
and
aam
push
orl
or
cltd
or
jge
aas
hlt
scas
mov
clc
dec
imul
sbb
pusha
push
lidtl
cmp
mov
popf
and
push
insl
pop
rolb
roll
test
shlb
mov
jecxz
and
aas
inc
bound
dec
xlat
sbb
movsl
ror
fs
sub
pusha
pushf
pop
scas
mov
cmpl
pop
xchg
or
fnclex
pusha
ret
fimull
mov
fisttpl
enter
and
xor
sbb
inc
dec
mov
cmpsl
arpl
into
xor
insl
add
daa
movb
inc
cmc
adc
ljmp
sub
cmp
scas
inc
mov
dec
scas
pop
outsl
insb
test
pop
out
cmp
cwtl
arpl
sbb
test
addr16
sarl
lds
cmpsb
mov
rclb
ss
call
or
test
bound
fs
dec
sub
stos
jg
push
add
mov
dec
call
fs
cmp
and
push
lock
add
testl
adc
xchg
fmull
pusha
push
adc
in
lret
add
jns
xor
xchg
ja
mov
add
push
cli
clc
adc
mov
inc
push
fidivrs
lock
cmp
mov
in
sbb
cmp
leave
push
lahf
mov
in
rcll
xchg
gs
movl
pop
pushf
and
shll
sub
jge
sbb
adc
jne
lea
test
and
in
imul
dec
in
push
cmp
lret
in
and
daa
mov
mov
xchg
aad
scas
jecxz
mov
dec
sub
movsb
mov
or
xchg
rcrb
movb
jno
jbe
and
fs
mov
fnstcw
cld
repz
out
cmp
and
movsb
inc
lret
out
mov
int3
add
dec
sbb
pop
xchg
jmp
test
sbb
mov
lea
inc
fsub
cmp
xor
data16
adc
mov
add
or
cmp
jae
into
jne
mov
shll
mov
stos
hlt
push
shr
pop
mov
mov
and
mov
dec
mov
xchg
fcompl
cmpsl
idiv
ss
movsb
adc
imul
pop
rcll
dec
xchg
mov
dec
sahf
jge
jmp
test
test
jae
add
fsub
lods
mov
scas
cltd
shrl
addr16
ret
mov
or
das
out
icebp
mov
arpl
push
cs
roll
xor
jge
and
fstpl
jl
loope
nop
dec
mov
jl
bound
add
mov
pop
xchg
pop
arpl
dec
or
jo
aas
in
inc
ss
xor
jle
or
rorl
xor
push
popa
cmc
adc
cmp
aad
cmc
ja
xchg
mov
jnp
mov
std
es
ljmp
cmp
pusha
lock
jbe
lahf
lcall
dec
insl
sub
mov
push
rol
adc
or
and
inc
cli
cs
sub
andl
enter
mov
push
mov
inc
adc
int
push
ret
adc
rcrl
mov
xchg
out
es
das
push
inc
ja
shr
mov
mov
mov
mov
inc
and
lahf
out
cmc
xor
dec
lods
sbb
cmp
int
das
dec
pop
pusha
movsb
outsl
roll
pop
mov
inc
out
jns
scas
mov
jecxz
jl
pop
std
add
nop
mov
xchg
daa
push
and
in
lret
shll
add
sti
push
push
test
fiadds
out
mov
sbb
out
insb
lds
int
push
lcall
adc
xchg
loop
iret
sub
pop
fwait
stos
pop
rolb
iret
xchg
mov
stc
jge
or
mulb
add
dec
jb
and
sub
push
jge
movsb
adc
lret
call
jmp
jle
pop
pop
pop
xchg
push
dec
push
jno
js
adcb
cmp
negl
leave
cmp
or
push
inc
int
jl
mov
outsb
jmp
cmc
repnz
or
or
bound
std
dec
add
cmp
or
outsl
mov
mov
testb
lahf
pusha
inc
fwait
inc
loop
and
pop
aad
outsl
inc
into
push
xor
mov
fs
das
xor
xor
pop
and
mov
push
lret
mov
cmpsb
inc
xchg
cmp
cmp
adc
lods
fcoms
mov
sti
mov
xchg
outsb
or
lock
pop
pop
mov
mov
test
pop
push
cmp
imul
arpl
mov
jmp
dec
orb
lahf
xorb
and
movsl
sbb
inc
fisubrs
in
push
into
lret
cwtl
sti
sub
dec
pop
push
mov
nop
xor
imul
repnz
mov
decb
cmp
xchg
lods
dec
ucomiss
jmp
stc
aad
pop
stos
dec
ds
mov
xchg
add
jae
scas
adc
es
cli
adc
imul
cld
mov
jns
sahf
push
inc
out
jno
ss
push
inc
jmp
wbinvd
sti
insb
adc
mov
xor
push
or
idivb
jnp
sbb
lds
inc
adc
add
movsl
jne
sub
cltd
jo
fsubr
xchg
cmp
bound
push
inc
movsl
insl
sub
aas
hlt
push
subb
xor
outsb
popa
leave
mov
push
pop
or
dec
push
aad
jnp
adcb
loopne
jbe
out
hlt
pusha
jbe
rorb
mov
dec
mov
pop
inc
pop
popf
mov
ret
push
ret
and
pop
int3
imul
pop
leave
mov
inc
xbegin
call
dec
mov
cmp
es
test
dec
xchg
out
aas
sub
and
loop
addb
enter
mov
out
cmp
xor
mov
inc
mov
lea
test
rcll
push
and
and
out
decl
je
or
sbb
mov
jno
sbb
dec
popf
push
xchg
jmp
add
loop
stc
lea
popf
testl
in
push
fisubrs
xchg
adc
jbe
sub
lahf
call
cmp
jbe
mov
ljmp
das
test
insb
dec
jb
sarl
mov
push
clc
push
jl
mov
das
das
xorb
and
mov
fmull
sahf
xchg
push
cmp
shrl
cmp
outsb
jo
nop
fnstcw
sub
std
and
dec
stos
dec
iret
ds
xor
add
pop
inc
das
loopne
xchg
gs
push
add
loop
ss
xor
jno
push
int3
sbb
stos
jl
dec
outsl
lret
jmp
gs
mov
xlat
dec
fcmovnbe
repnz
rcll
repz
inc
data16
addr16
mov
sbb
arpl
pop
dec
mov
xchg
stc
fstl
cli
shll
cli
int
in
push
xchg
scas
pop
outsb
outsb
dec
bnd
xor
sub
mulb
push
lods
je
pop
sub
loope
rcr
jmp
out
pop
mov
sub
inc
pushl
aad
lahf
mov
subl
cmp
ret
cmp
shll
jb
mov
outsb
movsb
mov
out
fidivs
mov
sbb
int
mov
gs
jg
jnp
ds
adc
mov
jne
hlt
dec
mov
cmp
add
lcall
cld
cmpsb
cmp
mov
shll
test
mov
xor
fwait
in
mov
test
push
mov
adc
cmpsb
in
sub
jecxz
popa
in
xor
push
mov
sub
ljmp
mov
pop
xlat
mov
in
hlt
mov
icebp
outsl
or
add
out
add
lahf
xor
shr
call
and
inc
mov
add
dec
sbb
bound
inc
lds
leave
ficoms
mov
enter
les
mov
inc
sbb
push
adc
stos
aas
and
js
jnp
test
lea
dec
rclb
loope
dec
jo
imul
push
imul
outsl
ss
xor
pop
add
push
dec
outsl
and
jp
mov
repz
xchg
das
jl
pop
dec
stc
xor
inc
mov
mov
cmp
fstpt
add
aas
fistpl
hlt
mov
cld
bound
int3
scas
sbb
push
mov
pop
mov
add
push
mov
mov
std
jle
inc
inc
es
xchg
and
fucomi
pop
lret
xor
enter
xchg
push
jo
ja
push
cltd
mov
out
in
mov
sbb
adc
dec
cwtl
cmp
test
imul
addb
test
mov
es
cmpsl
stc
imul
loope
inc
jo
loop
insb
pop
xlat
es
add
lahf
add
into
std
rcll
xlat
mov
mov
sbb
insl
outsl
xchg
ret
cmp
dec
jb
mov
hlt
jnp
dec
pop
popf
das
lds
dec
sarb
test
aaa
mov
sbb
int
fadd
mov
mov
repnz
and
mov
out
cld
push
jle
movl
push
pop
lds
gs
scas
pop
mov
stos
mov
std
mov
out
outsb
out
or
hlt
dec
pop
orl
pop
mov
lock
mov
inc
cltd
pop
dec
cli
and
fwait
or
pop
stos
mov
ljmp
fisubrl
into
repz
pusha
movsb
mov
mov
mov
scas
jbe
bound
aas
cmp
sahf
lahf
mov
mov
xchg
out
jo
dec
in
ret
daa
jb
pop
out
clc
adc
outsb
push
stc
cmp
std
shl
shlb
idiv
inc
cltd
addr16
cmp
dec
and
rcrl
in
mov
push
pop
into
pusha
movl
cmpb
mov
push
mov
pop
movsl
arpl
das
roll
dec
out
dec
sub
pop
movsb
jp
scas
sub
stc
or
das
jbe
arpl
out
jecxz
jnp
xor
loope,pn
push
pop
fistps
xorb
inc
shll
xor
xchg
mov
loop
sub
orb
out
movsl
aaa
movsb
and
adc
push
jecxz
pop
test
push
adc
xor
nop
and
cltd
mov
repnz
ljmp
add
mov
push
or
xchg
in
xchg
mov
push
cld
repnz
popf
inc
dec
xor
mov
jecxz
test
cs
dec
jmp
sbb
xlat
mov
mov
test
dec
pushf
cmp
cmp
xor
dec
ds
or
pop
mov
pop
push
sbb
outsl
cwtl
mov
mov
pop
inc
jg
insl
push
dec
cli
mov
scas
sbb
rcrl
movsb
movsl
ret
dec
push
lock
jp
mov
test
dec
aam
inc
hlt
ljmp
test
push
loope
sbb
dec
jge
jnp
mov
inc
pop
je
lds
mov
cltd
xor
cli
fld1
mov
in
jp
jg
xor
insb
sub
data16
dec
jbe
out
cmpsl
scas
adc
lahf
sbb
mov
pop
nop
sbb
shll
mov
or
add
fmull
insl
sub
adcl
sbb
iret
mov
fucomp
dec
lret
in
push
xor
pop
jmp
in
arpl
mov
sub
dec
sbb
shlb
or
inc
insl
nop
pop
lea
pop
clc
xchg
pop
mov
sbb
fldenv
inc
stos
inc
imul
sbb
dec
cwtl
mov
aad
xor
mov
test
pop
inc
sbb
push
lds
dec
lock
popf
pop
iret
fnsave
pop
inc
dec
dec
inc
out
push
sub
xchg
push
in
pop
sbbb
push
ficoml
cmp
mov
jnp
icebp
sub
lods
cltd
dec
cmovno
mov
jae
xor
into
mov
mov
inc
rcr
roll
test
adc
push
dec
lods
and
cmpsl
repz
sub
mov
fidivrs
adc
add
js
outsb
fdiv
push
mov
lcall
xor
shll
and
loope
mov
inc
jns
pop
xor
ja
add
xor
mov
inc
mov
sarb
pop
xlat
pop
movq
adc
sub
inc
xchg
push
sbb
out
popa
lods
push
and
repz
adc
iret
bound
call
jl
ss
loop
fdivl
fstpt
jmp
mov
add
jp
inc
dec
mov
mov
into
push
inc
fmul
inc
out
neg
ret
rclb
out
add
aaa
jno
sti
jb
push
dec
ret
repnz
icebp
icebp
mov
mov
jo
mov
fwait
loopne
jnp
mov
jo
mov
ds
push
orl
xchg
addb
sbb
mov
add
lock
inc
inc
sbb
mov
fstl
scas
loop
push
int
int
and
pop
pop
inc
jp
xor
sub
adc
leave
scas
sbb
mov
dec
fldcw
cltd
sbb
cltd
xor
xchg
dec
pop
jae
and
mov
xchg
cmpb
shlb
mov
pop
push
mov
pop
pop
mov
dec
fdivrl
mov
in
pop
and
inc
add
data16
mov
or
xchg
jne
push
test
mov
dec
mov
dec
cmp
movsl
sbb
loope
js
add
mov
int
clc
icebp
repz
add
cmp
sbb
sub
cmpsb
and
and
pop
lea
std
add
adc
std
mov
fs
mov
push
leave
and
imul
mov
xchg
and
mov
pop
add
cmpsb
ret
mov
mov
jns
sarb
insb
jmp
pushf
mov
idivb
xor
mov
mov
js
ds
mov
pop
icebp
loope
and
adc
push
sti
or
in
cld
js
mov
hlt
mov
jnp
fiadds
dec
mov
or
jmp
cltd
inc
rolb
adc
xor
push
cmp
or
mov
je
movb
nop
xor
je
lods
push
jns,pt
sbb
xchg
lahf
fs
jp
xor
cltd
push
cwtl
movsl
shrb
xchg
cld
mov
mov
filds
dec
in
int3
cmp
or
iret
mov
lea
outsb
test
rcl
in
in
in
push
in
xchg
adc
push
testb
popa
push
xor
add
out
inc
push
popf
cmpsl
loope
ds
cwtl
xor
stc
testl
adc
cmpb
inc
cli
int3
sbb
movsl
movsl
in
in
shr
dec
mov
loope
sub
mov
dec
or
cmpsb
xchg
imul
xchg
pushl
and
pop
dec
pop
and
xchg
roll
shld
lods
pop
fwait
icebp
iret
popf
pop
jne
sbb
sub
jae
pusha
pop
loopew
fcoml
pop
lds
cmpsl
pop
jg
movsb
gs
ss
cltd
pop
cmc
sbb
loopne
jecxz
adc
adc
jnp
or
sub
xor
dec
test
lret
sahf
lods
stos
mov
js
imul
sub
shl
jecxz
dec
pop
rcll
call
lds
cmp
mov
add
mov
jmp
mov
std
sbb
out
mov
popa
imul
std
jmp
std
adc
push
std
sar
dec
lds
mov
cmp
and
dec
xchg
lods
push
dec
sbb
loope
xor
pushf
or
or
aad
lods
jb
xor
lcall
in
sub
or
push
dec
rcrb
ret
loop
int
push
jo
mov
mov
fs
test
ljmp
inc
int3
rorl
fdivs
out
pop
sti
outsb
sbb
cwtl
jmp
sbb
jae
adc
outsl
ljmp
gs
lret
jbe
push
fnstenv
add
in
inc
mov
loop
cli
rcr
ljmp
inc
sub
popa
repz
adc
ds
mov
and
sub
idivb
sbb
rcll
jns
mov
pusha
xor
leave
ja
sbb
add
outsl
jb
daa
sub
inc
xchg
mov
adc
leave
jae
fldenv
repz
ds
aam
not
jge
imul
gs
sbb
testb
ds
test
aam
fucomi
mov
fisttps
mov
mov
movl
cmc
jnp
insb
pop
jno
ljmp
nop
enter
inc
pop
adc
incb
adc
std
mov
and
icebp
xor
mov
mov
and
pop
or
ja
cli
add
cmc
les
faddl
ror
cltd
and
dec
dec
dec
mov
call
call
dec
mov
iret
push
add
hlt
in
or
subb
ss
lds
inc
sbb
pop
dec
dec
fistps
es
orl
jmp
insl
cltd
aas
add
ss
lock
stc
cmp
or
mov
sbb
loopne
pop
pop
sbb
add
int3
push
and
jl
mov
pop
in
cmpsl
out
lea
lea
mov
push
ret
rolb
sub
mov
mov
and
dec
arpl
pop
and
fdivl
jle
fldl
push
cmpsb
ljmp
lcall
or
cmp
loop
mov
das
mov
cmp
into
fiaddl
mov
fstl
clc
or
xor
xlat
cmp
xor
div
popa
mov
mov
push
lods
int3
add
ljmp
inc
jge
sub
ss
xor
loopne
rcl
add
cld
xor
ret
in
push
fnstsw
popa
cmc
repz
mov
lret
repz
jg
call
or
cmp
out
xchg
inc
jo
js
push
jg
push
xor
aad
pusha
jo
lret
push
and
jns
lahf
lret
mov
and
jmp
pushf
mov
and
dec
jp
fidivl
dec
ret
adc
or
into
mov
push
das
xchg
adc
mov
and
mov
inc
mulb
xor
out
sbb
jl
fcompl
jb
jns
or
and
icebp
jb
lret
adc
mov
adc
push
xchg
bound
fidivs
stos
mov
rcrl
mov
pop
jns
cmp
stc
add
fdiv
dec
mov
leave
jp
push
cmpsb
jns
sbb
ljmp
push
mov
or
outsl
push
insb
out
and
fdivs
movsl
xchg
jbe
sti
mov
mov
sub
aam
sarl
push
int
adc
clc
rcrb
sbb
cmp
adc
push
pushf
aaa
sub
pop
repnz
push
ja
hlt
lods
dec
adc
sar
cmp
ficomps
pop
mov
fsubrl
cmpsb
dec
sti
in
pop
out
sub
std
adc
jmp
xchg
inc
dec
ds
pop
ss
lea
in
sbb
jne
pop
ret
in
enter
pushf
xchg
mov
xchg
cmp
and
jl
cld
mov
fwait
and
xor
cmp
gs
lods
cltd
mov
das
test
icebp
xchg
adc
push
or
lock
xor
sbb
test
cmp
sub
ja
xor
fnsave
mov
inc
or
pushf
aas
mov
in
jg
clc
jo
and
pop
lcall
xlat
outsl
push
aad
aas
and
lret
xchg
js
xchg
push
push
movhlps
int
dec
movsl
inc
adc
lds
mov
xchg
xor
lcall
xchg
hlt
or
jmp
jb
mov
and
fwait
data16
jmp
outsl
xor
adc
mov
enter
movsb
mov
inc
call
cmpsl
jp
scas
pop
fcomps
adc
in
mov
aad
ss
cmp
or
mov
pop
mov
sar
mov
addr16
adc
mov
push
int3
jbe
push
adcb
addl
out
adc
repz
iret
or
jbe
and
push
cmp
scas
xor
mov
insb
sbb
or
pop
test
insb
and
jmp
dec
sub
pop
mov
add
pop
jnp
sbb
push
and
sbb
dec
mov
fisttpl
in
out
jmp
mov
push
jae
mov
fidivrs
es
and
loopne
cmp
pop
sarb
popa
testl
cli
bnd
mov
sahf
cs
std
dec
mov
adc
scas
test
jmp
sub
shl
gs
loop
pop
into
rolb
loop
les
pop
mov
call
jge
pop
sub
mov
add
and
inc
inc
test
mov
hlt
test
outsl
fwait
in
push
cmp
or
loop
gs
test
bound
aam
hlt
lock
movb
xlat
sbb
mov
sub
adc
mov
sbb
lods
stos
mov
es
test
test
fnstcw
rolb
xchg
or
add
mov
pop
mov
sbb
inc
dec
bswap
jle
cmpsl
outsb
scas
jmp
clc
mov
ret
jb
mov
xchg
test
dec
lret
inc
mov
or
cmp
js
jbe
adc
outsl
mov
sahf
std
stc
jae
popl
xor
movsl
dec
push
inc
dec
mov
ds
jg
loopne
push
aam
inc
leave
fidivrl
ret
int3
cmp
lods
jno
in
mov
or
inc
cmp
mov
lods
imul
xchg
nop
pop
sbb
shrb
mov
sub
inc
ljmp
add
adc
inc
jmp
imul
les
hlt
push
stc
cld
out
fadds
lds
fadds
or
mov
clc
loopne
sbb
mov
mov
mov
dec
call
jecxz
pusha
sbbb
into
popf
mov
incb
xor
ss
insb
daa
mov
mov
xchg
movsb
lret
rolb
push
dec
imul
xchg
mov
mov
int
xor
scas
ds
sahf
jecxz
xchg
mov
sbb
add
push
dec
xor
daa
outsl
sahf
je
sbb
xorb
jp
xor
mov
mov
jns
jmp
lea
jne
mov
pop
or
sbb
andl
loopne
cmp
and
daa
fmuls
xor
loopne
dec
jnp
fs
sub
ds
insl
aaa
jmp
inc
ds
fimull
push
pop
adc
nop
sub
jl
xor
inc
test
divl
mov
xchg
out
or
push
jns
push
mov
rolb
jmp
clc
fdivrl
sbb
repnz
out
sub
add
sub
in
push
xor
mov
sahf
add
dec
push
inc
scas
mov
xor
aas
cmc
fs
je
dec
and
stc
stos
xor
and
and
fadds
je
cli
les
mov
cmp
sub
imul
ja
ret
frstor
bswap
shll
loop
push
jne
mov
lret
gs
stos
and
out
fwait
or
cld
or
pop
clc
push
inc
lahf
les
lret
nop
push
jmp
mov
push
loopne
xchg
daa
xchg
jecxz
into
push
pop
loop
clc
and
add
sub
sub
add
movsl
push
adc
int
jae
sbb
lods
out
in
push
cs
dec
shlb
push
pop
test
or
out
dec
imul
sbb
bound
sub
pop
mov
cmp
dec
aas
xor
mov
mov
out
call
lods
jns
push
pushf
cwtl
lock
lret
jne
outsb
sbb
roll
inc
sbb
sub
outsb
stc
push
ja
cmp
push
add
pop
fs
or
fnsave
shll
out
sbb
jle
cmp
and
sbb
lea
or
lahf
cltd
xor
push
xor
aaa
aad
stos
fwait
or
pop
mov
push
add
cmp
cmp
cmp
aaa
stos
sbb
loop
shl
jg
faddp
mov
ret
mov
mov
add
lods
add
cltd
iret
cmp
lock
sar
icebp
sbb
xor
adc
mov
push
lahf
out
es
and
jo
cmpb
pop
xchg
lods
clc
mov
xor
call
inc
fistpll
movsb
dec
sbb
call
sub
sub
test
jl
dec
cmp
add
pop
xchg
cmp
stos
test
enter
add
das
dec
and
aad
hlt
sbb
lahf
rcll
out
orl
xchg
rorl
out
add
cmp
push
addr16
shll
hlt
insb
out
test
adcb
sarb
cmp
fiaddl
adc
jns
daa
pop
stc
in
push
sub
push
cmp
sahf
inc
add
jecxz
adc
jp
rcl
sar
sbb
rcll
insl
adc
xchg
xchg
repnz
fs
nop
xor
add
dec
xchg
icebp
or
lret
inc
jge
out
pop
push
cmp
jmp
xchg
in
mov
dec
or
es
adc
dec
js
jb
rol
repz
jo
movb
xor
leave
jl
fldt
dec
add
stos
mov
jae
pop
loop
test
inc
dec
ja
jnp
mov
cmp
jns
add
pop
push
or
js
add
dec
inc
mov
fsubrl
jmp
mov
lcall
in
xchg
aas
mov
lock
ret
dec
or
pop
je
xor
mov
andb
lock
push
jl
scas
adc
cmpb
lock
shr
testb
xor
fdivl
popf
daa
mov
into
roll
xchg
xor
inc
into
sti
popa
out
inc
dec
mov
mov
leave
mov
lds
adc
test
testl
movsb
dec
mov
and
push
cmp
sahf
dec
enter
xchg
or
pop
rep
push
cmp
movsl
cmp
stc
push
in
stos
decl
jo
xlat
shll
std
es
adc
in
dec
pop
movsl
cmp
and
xor
dec
inc
iret
in
jae
dec
add
fwait
or
hlt
dec
das
push
push
sub
pusha
out
fwait
push
mov
or
jge
mov
adc
cmp
xchg
emms
inc
imul
mov
enter
ret
xlat
popa
repz
sub
pop
push
jns
pop
jge
in
mov
cmp
cmc
pop
xor
test
std
sbb
iret
sub
and
or
push
ffree
lcall
or
popf
jbe
pop
repz
test
add
jmp
les
and
adc
sbb
out
jecxz
imulb
je
mov
push
xchg
sub
push
xor
mov
push
imul
fidivs
les
mov
lcall
jo
or
arpl
fidivrs
popf
imul
mov
adc
jnp
mov
lret
je
mov
mov
loopne
mov
xchg
push
repnz
add
nop
and
and
push
out
shrb
xchg
cli
cmp
adc
dec
in
in
or
jmp
rcrl
insb
push
test
jecxz
adc
mov
pop
loope
push
inc
repnz
or
pop
adc
imul
xorb
nop
into
push
pop
icebp
mov
leave
popl
cwtl
mov
adcb
mov
in
iret
sahf
jg
mov
push
fld1
inc
push
xor
pop
into
push
je
rclb
in
xor
fdiv
dec
enter
mov
test
xchg
cmc
or
jnp
mov
ljmp
je
hlt
notl
es
push
pop
sub
dec
in
inc
mov
popf
sbb
add
push
mov
adc
add
dec
fwait
inc
inc
dec
enter
rol
iret
sbb
adc
xchg
or
pushf
lds
movl
mov
sti
loope,pt
ljmp
movsl
jo
clc
mov
dec
mov
jecxz
ljmp
outsl
pop
adc
lods
daa
mov
fimuls
test
into
mov
ret
loop
xorl
insl
dec
filds
mov
push
sub
push
push
or
or
sub
push
mov
cmc
cmp
js
flds
dec
out
push
ja
jnp
pop
push
js
cwtl
xor
mov
cmc
push
and
add
jp
nop
jl
cmp
dec
mov
mov
sti
fisttpl
les
xor
cmp
pop
cltd
dec
mov
aaa
scas
hlt
jo
int
hlt
in
nop
call
test
cmp
jo
ds
jmp
add
and
dec
popf
cmpsb
int
loopne
ret
xor
divl
addr16
or
inc
icebp
orb
cmc
lret
cwtl
nop
das
fwait
dec
popa
or
mov
pop
mov
shrl
out
jnp
push
sti
mov
lar
mov
stos
cmp
popa
ss
call
pop
sbb
cmp
js
adc
xchg
jmp
je
sbb
dec
mov
add
shll
jbe
inc
into
mov
xor
sarb
je
lods
bound
outsb
inc
sbb
ret
sub
pop
insb
pop
push
or
inc
data16
les
adc
sub
sub
or
push
aaa
add
push
fists
inc
sub
xor
sbbb
jmp
fsub
cltd
movlps
cwtl
adc
pop
cmp
test
in
enter
xor
dec
mov
jg
or
sti
push
xor
fcompl
fstpl
enter
or
mov
js
mov
sub
jae
es
fninit
or
mov
push
mov
in
jbe
pop
sub
es
loop
inc
sahf
cmc
mov
test
mov
shl
xchg
cmpb
clc
loop
out
fdivrs
lods
aas
xchg
pop
loop
push
mov
mov
push
pop
adc
or
leave
mov
or
aad
mov
xchg
daa
arpl
js
mov
ss
scas
test
fisttps
pop
sahf
in
out
adc
test
mov
lea
or
pop
push
dec
lods
cmp
mov
lahf
mov
fiadds
sbb
push
sarb
cmc
insl
mov
es
jb
dec
daa
popa
je
stos
push
out
push
popa
loope
ss
push
xchg
pop
add
sbb
sbb
inc
addr16
jo
aas
push
scas
fdivr
mov
fucom
fdivrs
popa
fs
rcrl
mov
inc
imul
lds
push
sahf
daa
cmp
sbb
jns
mov
mov
xor
ss
mov
jno
sahf
cmp
pop
outsl
pushf
mov
les
xor
dec
pop
imul
jl
and
nop
fsubrp
repnz
push
pop
dec
push
push
cli
out
push
and
sbb
sub
test
and
xor
repz
mov
gs
cmc
ffreep
jmp
std
ljmp
ficoms
ret
sub
imul
jb
out
es
imul
push
push
scas
mov
add
mov
in
inc
dec
pop
in
xchg
sub
dec
popf
jmp
jbe
int
ret
inc
mov
mov
pushf
andl
lods
test
nop
pop
lcall
jne
cmp
cs
scas
jb
pop
cld
or
bound
push
add
scas
xchg
fiadds
and
ficoml
enter
int3
les
xor
xchg
pop
int
push
dec
cld
fimull
in
ret
pop
xchg
std
cmp
pop
push
mov
mov
int
out
sub
or
loopne
pop
sbb
jb
push
out
pop
ret
lds
dec
inc
jg
int
fidivrs
fcmovbe
popf
rcll
pop
inc
lret
jno
cmp
adc
mov
and
and
stos
shlb
roll
cmpsb
dec
pop
cltd
xchg
push
push
mov
aas
dec
sbb
mov
movsb
cmpsl
popa
scas
pop
movsl
loopne
in
iret
cmp
jle
mov
jmp
nop
mov
inc
insl
mov
ret
cmp
aad
cltd
mov
bound
ja
lcall
popf
xor
mov
mov
cmp
and
hlt
add
push
movsb
mov
ret
xchg
pusha
pushf
inc
mov
cmc
mov
int
pushf
xlat
or
loopne
mov
mov
sub
shrb
out
in
roll
gs
lret
xrelease
mov
leave
pop
mov
mov
ljmp
xor
pop
rclb
adc
fmuls
mov
dec
test
mov
int3
xor
xchg
pop
nop
cltd
xchg
cli
or
jno
es
inc
push
dec
adc
jno
push
pushf
xchg
sub
ja,pt
inc
xchg
inc
pop
inc
inc
pop
jne
repz
mov
push
imul
jbe
sbb
and
inc
dec
sarl
lcall
push
loopne
jns
lahf
dec
cmp
xchg
cs
mov
pop
jg
xor
mov
incb
mov
jo
xchg
cmpsb
or
mov
inc
xchg
iret
jne
pop
test
and
inc
xor
movb
adc
es
outsb
jnp
pop
cmc
popa
cmp
repnz
mov
shll
push
ret
push
or
out
jecxz
xor
add
adc
test
jbe
pop
push
sbb
cwtl
popa
pushf
sub
loope
ja
int
std
cld
out
add
jo
sub
or
jl
mov
add
cmc
mov
cmp
ss
xor
mov
and
jnp
jo
mov
rcr
sahf
cmp
jge
xlat
aam
mov
aas
jmp
ds
lcall
dec
lods
sbb
insb
test
mov
cli
std
rolb
je
jg
shlb
mov
dec
and
iret
or
lahf
imul
xor
dec
loope
iret
mov
push
out
rorl
in
test
add
addr16
add
lcall
movb
mov
inc
mov
lea
test
cli
rep
out
xchg
add
sbb
jb
pop
sbb
dec
mov
and
mov
or
sub
arpl
push
pusha
outsl
lods
mov
fistl
jns
in
mov
and
cmp
adc
xchg
mov
int3
or
lock
lea
cmpsb
cmp
sbb
sbb
int3
mov
xchg
fwait
adc
fadds
insl
xor
lahf
mov
mov
lock
push
call
cmp
fwait
cmp
cmpsb
mov
in
fsubl
cmp
jnp
dec
cwtl
fldenv
loop
mov
adc
es
lret
pop
xorb
xlat
xchg
int3
or
repz
jae
xor
sbb
int3
and
lret
or
sub
cwtl
cld
movsb
movsb
cmc
test
ja
push
aam
jp
into
sbb
rcrb
das
aas
test
inc
and
cmpsl
les
mov
mov
jae
cltd
cltd
push
jg
push
mov
lret
add
sub
icebp
movsb
add
scas
add
insb
insb
loop
cmp
add
inc
mov
outsl
cmc
pop
jae
adc
push
xchg
icebp
cmp
aad
sbb
jmp
loopne
imul
insl
fcoml
mov
xor
out
insl
dec
nop
mov
lcall
mov
mov
jae
cli
adc
xor
push
ficoml
mov
pop
jg
sub
jno
and
push
sahf
cmpsl
mov
dec
cmp
in
adc
inc
adc
notb
cltd
lret
push
inc
fnstenv
cmp
in
loope
ljmp
enter
loopne
das
cmpsl
fs
hlt
or
push
and
pop
jmp
jecxz
fisubrl
dec
cmp
pushf
sbb
and
dec
pop
push
xchg
loop
xorb
xchg
xor
std
push
lods
sbb
jecxz
sbb
inc
sahf
loopne
add
cmpl
cmp
xor
test
add
cmp
sbb
pop
mov
pop
lods
cmp
add
inc
repnz
mov
clc
ret
xlat
push
orl
add
jp
int3
aaa
out
mov
jge
mov
sbb
pushf
ficoms
push
popf
mov
shlb
test
call
pop
push
idivl
aaa
cmp
push
sbb
in
sub
dec
bound
xor
cmpsb
sbb
in
sahf
shl
adc
scas
lret
xchg
out
cmc
xlat
jnp
sbb
lahf
lret
cs
or
movsl
lret
aas
or
aaa
fwait
push
add
leave
cmp
test
fimuls
lret
dec
adc
push
mov
lea
popf
mov
test
icebp
cmp
pop
mov
mov
add
and
out
push
insl
and
jbe
mov
insl
jg
and
fidivrs
and
les
jecxz
pop
imul
into
mov
cltd
stc
div
mov
in
cmp
mov
jmp
inc
aaa
jge,pt
mov
sub
or
mov
pop
pop
leave
call
lcall
stc
lods
mov
testl
xchg
mov
fidivrl
div
fsub
shll
icebp
pushf
jbe
loop
insl
jmp
inc
cmp
and
pop
sbb
cmp
repz
sahf
test
xchg
int3
testl
xor
sub
insb
imul
push
jg
xor
or
sahf
pop
jmp
mov
fucomip
jmp
les
out
mov
movsl
je
loope
test
movsb
jmp
lock
in
mov
pusha
pop
xchg
decb
cltd
cmp
arpl
mov
popa
scas
outsb
shlb
repnz
pop
mov
sub
dec
sbb
pusha
adc
fistpll
mov
inc
movsl
int
iret
subl
ret
xor
xchg
test
xor
das
and
adcl
decb
pushf
push
dec
add
ja
xchg
cs
push
add
insb
push
mov
xchg
cli
pop
incl
sub
mov
push
pusha
adc
mov
stos
cmp
js
iret
outsl
dec
dec
pop
and
dec
fcoms
cwtl
mov
fimull
fists
push
jns
jl
ljmp
pop
push
aaa
pop
call
push
mov
je
je
outsb
sub
sub
daa
push
frstor
fldt
inc
sti
in
fcoms
mov
fildll
jbe
jg
imul
inc
sub
nop
imul
adc
adc
lods
in
jle
icebp
fldcw
push
ljmp
xchg
jnp
notl
int3
mov
or
add
mov
sti
xchg
pop
mov
mov
cld
xchg
and
xor
xor
push
xchg
cmp
jecxz
idivl
daa
xchg
insl
sub
aaa
int
call
das
push
mov
xor
mov
inc
xor
mov
aad
add
stos
jbe
or
pop
popf
mov
and
xor
mov
stos
mov
or
int
std
dec
mov
inc
and
arpl
push
xchg
ja
pop
cld
xchg
daa
test
aam
mov
pop
xlat
inc
cmp
mov
stc
inc
jo
int3
in
sub
daa
and
rcrb
pop
add
xchg
scas
rorl
add
inc
mov
lods
inc
mov
mov
cwtl
aaa
push
jmp
mov
js
stc
or
push
sbb
xchg
repz
inc
pop
fs
push
int3
add
xor
cwtl
lahf
xchg
dec
lahf
ja
cltd
jge
stos
dec
push
adc
and
popf
or
add
or
popa
fs
mov
cmp
xor
test
jge
ret
mov
outsb
nop
or
push
icebp
popa
mov
mov
cld
push
mov
xchg
sbb
push
scas
lea
mov
movsl
je
add
shlb
xchg
rclb
sti
loopne
aas
pushf
pop
or
aam
into
mov
cmc
rorb
rclb
sbb
inc
movsb
test
mov
repz
popa
pop
ss
or
mov
in
lods
pop
arpl
push
nop
aam
bound
pop
and
int
fs
mov
push
fisttpll
cmp
fwait
arpl
je
mov
mov
test
rclb
iret
cmp
leave
lcall
push
sub
sub
or
pop
dec
daa
sub
jle
jnp
fmul
aaa
sub
mov
lds
mov
or
push
popa
cbtw
in
or
stc
test
jecxz
sub
insb
xchg
fwait
xor
inc
pop
movsb
sub
dec
sub
dec
or
jne
lods
pop
sub
in
popf
dec
push
xchg
clc
and
inc
jns
sub
lcall
mov
cltd
movsl
out
sarb
adc
pop
xchg
test
aad
xchg
xor
dec
mov
scas
gs
xchg
xor
xchg
popa
push
push
jbe
test
adc
mov
ret
jo
popf
stc
fstps
stc
xchg
xchg
dec
xchg
add
popa
mov
test
es
mov
outsb
dec
pop
bound
insb
inc
push
cmovns
jg
pop
aaa
ficoms
pop
xchg
rolb
xor
jge
inc
jne
cli
push
icebp
mulb
sub
pop
jne
mov
mov
pushf
lahf
jl
or
pop
rcll
int3
xchg
and
pop
call
adc
insl
rcl
and
mov
push
imul
test
gs
xor
inc
js
mov
popa
stos
dec
subl
data16
data16
data16
in
cmp
cmp
test
inc
cmp
mov
or
pop
dec
xchg
mov
cltd
decb
xchg
jns
mov
lods
call
fisttpll
push
stos
push
lods
or
sbb
push
push
lahf
pop
or
sub
xchg
pop
sub
mov
fidivs
jns
jnp
sti
out
ret
outsb
xchg
addb
mov
into
sbb
cwtl
fisubs
sub
rcl
sbb
xchg
xlat
xor
dec
loope
clc
ret
sub
mov
lcall
jnp
xchg
imul
ljmp
xchg
test
jg
addr16
push
rolb
out
jnp
clc
in
sbb
je
shrl
mov
add
cmpsb
std
in
mov
cmpsb
dec
in
inc
stos
or
notb
lcall
fstl
mov
shr
inc
ja
cmp
clts
mov
or
inc
xchg
es
fwait
js
lret
lret
pop
roll
jecxz
xchg
xchg
and
aaa
xorl
or
arpl
mov
mov
out
xor
and
lods
rol
pop
add
sub
ret
std
repnz
ja
dec
push
dec
adc
push
sbbl
into
add
fwait
ret
sarl
mov
js
dec
mov
std
add
xor
pop
les
ret
test
aam
jb
cmp
xchg
rorl
push
jle
imulb
sub
movsb
xor
pushl
rclb
and
insb
imul
jl
or
push
mov
test
or
inc
iret
sbb
test
pushf
insl
shl
icebp
loope
rcrl
mov
in
ss
cmc
pop
leave
test
rclb
cli
add
into
ljmp
shrb
dec
dec
push
and
movsl
cli
in
xchg
xlat
jmp
fsts
adc
rorb
insb
shlb
push
jb
stos
mov
out
jb
out
pusha
test
or
pusha
push
mov
cld
fbstp
inc
popa
movsb
aas
adc
and
jo
xor
loopne
push
push
sahf
push
mov
adc
mov
es
rolb
popf
cmp
xor
ljmp
mov
push
lret
sbbb
add
inc
je
push
cmp
push
rcrb
aaa
cmp
emms
shrl
fimull
push
aam
inc
lret
popf
push
mov
mov
mov
and
mov
test
xor
jle
mov
negb
js
cmpsb
test
adc
pop
mov
and
shlb
out
sbb
sub
mov
push
xlat
sub
les
push
or
outsb
pushf
sub
pop
pop
das
aad
adc
add
pop
add
pop
inc
pop
shl
hlt
jne
sub
into
repnz
cmp
and
std
mov
push
sbb
bound
or
sahf
imul
dec
into
pop
dec
lea
insb
out
pop
xor
add
je
or
sub
fnop
in
loope
pop
mov
jge
xchg
cmp
test
mov
outsl
sub
inc
stos
jg
stos
outsl
popa
push
adc
adc
pop
mov
sub
sti
dec
daa
ja
in
mov
sbb
cmp
jg
je
fisubrs
pop
xchg
fimull
inc
pusha
jb
or
ret
mov
adc
shl
loope
pop
int
lock
lahf
mov
inc
mov
mov
into
mov
jecxz
xor
or
jg
push
das
adc
adc
idivb
aaa
ds
add
stos
xor
fbld
cltd
inc
mov
xchg
pop
lcall
xchg
cmp
nop
adc
lds
inc
cmp
inc
movsl
fs
jmp
and
shlb
addb
std
stos
mov
cs
decb
dec
or
xchg
push
es
popf
les
sub
or
lods
pop
gs
aam
cmp
outsl
xorl
sbb
cs
movsl
outsl
imul
add
jle
jg
and
fdivl
dec
xor
sbb
dec
pop
dec
lret
pop
cltd
inc
pop
xor
add
jno
dec
add
jle
jp
push
jecxz
sbb
jmp
inc
mov
push
scas
jne
mov
jle
je
iret
pop
sub
jbe
mov
pop
aam
adcl
xorl
inc
mov
xor
or
adc
or
rclb
or
adcl
inc
pop
cmpsl
jne
inc
dec
pop
adc
fidivs
mov
jne
lcall
mov
jnp
and
fucomip
fisubs
cmp
aaa
dec
jecxz
push
subb
lret
lahf
sarb
mov
xor
sub
jne
addr16
lock
xchg
iret
cmp
jmp
dec
jle
shrl
sarl
out
sub
cmp
das
push
xor
push
pop
imul
fmulp
sbb
jmp
fldl
xchg
call
adc
add
cmp
inc
in
jne
adc
sub
iret
dec
fmull
cmp
dec
out
test
notl
mov
sbb
push
push
push
loop
jl
mov
lock
rorb
mov
mov
ret
and
in
lock
push
pop
mov
inc
xor
jge
lds
mov
jno
xchg
testb
lods
xchg
jnp
push
adc
orb
adc
dec
aaa
cmp
xchg
inc
pop
daa
lea
inc
and
shld
or
xor
mov
cmp
int
lods
js
sbb
stos
test
mov
loop
icebp
data16
lods
daa
imulb
js
sub
dec
enter
jbe
sahf
mov
adc
mov
dec
inc
pop
std
mov
cmpsb
mov
fstp
push
cmp
inc
ror
fcmove
or
sbbl
mov
mov
jns
mov
ror
fstp
mov
xchg
xchg
test
inc
lahf
orb
pop
sahf
fcompl
add
mov
inc
data16
addl
push
rorl
shrb
xor
jae
int
adc
push
pusha
aas
xchg
imul
or
ss
dec
cmp
loop
cwtl
mov
lret
jge
xchg
pop
aaa
cmpb
rcll
das
data16
lret
scas
leave
pop
jo
sbb
jb
sti
push
sbb
fimull
rolb
loope
cmp
ret
aaa
adc
arpl
loope
inc
outsl
pop
decl
in
mov
call
addr16
mov
cmp
xchg
mov
dec
mov
callw
mov
or
call
data16
sub
pop
into
xchg
cmp
sub
push
lods
js
out
movsb
es
jl
jle
push
icebp
mov
ljmp
shlb
test
cmp
cli
sub
lcall
inc
pop
push
jmp
xor
sti
sbb
and
mov
ffreep
dec
inc
jbe
leave
xor
bound
iret
clc
push
inc
shll
add
and
cmp
pop
arpl
repz
test
jo
adc
jns
xlat
lods
repz
not
adc
push
xor
xchg
mov
jmp
inc
stos
gs
aaa
jmp
mov
xchg
out
movsl
aam
mov
imul
stc
mov
inc
pop
or
add
inc
pop
mov
dec
and
js
push
cmpsb
pop
adcl
xor
mov
lcall
pushf
rol
inc
lahf
mov
sbb
outsl
push
fistpl
dec
inc
pop
and
popf
fldl
ficoms
sarb
or
fisttpll
and
xor
fcomi
int
inc
inc
sub
add
insb
fstps
loop
sahf
stc
push
adc
iret
inc
xor
adc
jge
movsl
cmp
daa
xor
sub
adc
jmp
pop
jg
xchg
mov
test
inc
xorl
jecxz
jb
cmp
jns
sti
push
add
xchg
shll
add
mov
or
pop
push
sbb
xor
pop
popf
mov
loop
out
mov
lods
mov
xchg
out
lods
cltd
sti
in
pop
jg
inc
cmpsl
add
ljmp
push
mov
lock
dec
into
dec
cmp
sarb
mov
cltd
lods
mov
mov
ss
out
xchg
mov
ljmp
outsl
in
lods
xchg
jg
out
shl
cwtl
rorl
popa
fidivrs
fildl
sbb
pop
add
sarl
push
xchg
dec
jnp
mov
rcrb
dec
push
out
fs
sti
sub
pop
inc
syscall
add
jb
xlat
insb
repnz
sub
repnz
pop
adc
push
pop
add
mov
xchg
xor
rol
movsl
std
repnz
out
or
daa
sub
pop
leave
out
push
repz
out
xchg
xchg
lea
in
jp
ljmp
popa
push
ret
gs
mov
and
inc
leave
jle
rcrl
scas
adcl
cld
sub
cltd
fwait
lock
es
adc
xchg
inc
add
cmpb
pop
cmp
sbb
dec
ss
loope
fiadds
jo
and
fisttpll
inc
aad
in
add
push
xchg
adc
mov
hlt
cmpsl
xchg
push
sbb
gs
or
mov
inc
pop
in
cmp
cmpsb
rorb
fstpl
movl
add
pop
mov
popf
aaa
dec
int
pop
nop
inc
js
mov
mov
push
insl
pop
inc
adc
hlt
std
sub
orb
jge
xor
mov
push
dec
mov
mov
mov
jns
mov
in
iret
mov
movsb
cmp
xchg
sbb
mov
addr16
xchg
fldl2e
inc
sbb
repz
push
xlat
push
insl
and
dec
ss
shl
push
hlt
loope
jae
pop
nop
mov
jae
dec
int
xor
push
jg
pushf
mov
push
mov
jmp
dec
jo
mov
mov
add
shlb
jnp
jnp
sbb
or
lret
mov
mov
jmp
out
sub
sub
out
clc
inc
in
jns
cs
mov
test
mov
fisttpl
fistpl
adc
cltd
pushf
adc
mov
adc
out
cmp
arpl
sbb
pop
sahf
inc
insl
je
arpl
mov
test
dec
add
dec
loop
push
loopne
ja
inc
push
popa
or
push
lcall
push
js
imul
pop
inc
adc
and
ret
jle
scas
adc
andb
repz
or
inc
push
xchg
mov
mov
sub
push
orb
jecxz
xor
adc
outsb
pop
loop
imul
mov
pop
pop
ja
add
jp
repz
xor
sub
inc
dec
add
mov
xchg
lds
mov
clc
or
sbb
push
mov
mov
jae
stc
in
pop
leave
or
pop
adc
xor
out
adc
add
or
jmp
adcb
dec
sahf
pop
xchg
xchg
inc
call
imul
jg
sahf
mov
ret
push
out
out
es
data16
cmp
ss
cmc
push
shlb
insl
lret
andb
sbb
jmp
adc
pop
push
mov
mov
sub
fistl
jg
cld
and
xor
push
jg
mov
lret
rcll
mov
add
xlat
sahf
loope
es
pop
dec
sbb
or
dec
xlat
lods
mov
adc
xor
int
push
sub
mov
jne
push
das
inc
mov
mov
mov
xorl
add
sbb
pop
dec
jp
inc
fwait
sbb
mov
fcomps
push
push
dec
push
mov
call
fwait
cmpl
mov
adc
and
cmp
xchg
scas
push
loopne
test
push
push
div
lods
jmp
cmpsb
int3
aad
xor
std
filds
push
gs
fstp
movsb
clc
cmpsb
movsb
sti
ja
jo
and
pop
hlt
jno
cmp
fbld
dec
insl
in
mov
outsl
cmpsb
es
add
and
sub
int
mov
sbb
frstor
and
addr16
jecxz
pop
or
sbb
mov
inc
add
outsl
xchg
fisubrs
and
mov
int3
lret
inc
pop
imul
and
or
mov
xlat
and
inc
sub
pop
test
fldenv
andl
mul
cmp
pop
add
xchg
decl
cltd
push
jae
jmp
mov
or
pop
je
aaa
and
mov
scas
mov
xchg
lock
sub
mov
out
mov
inc
push
cmp
std
mov
xor
push
aad
nop
dec
lret
inc
scas
loop
insb
cmp
lahf
push
aad
shrl
insb
cltd
pop
add
cltd
jns
int
xor
fisttps
cmp
enter
dec
mov
and
inc
adc
mov
push
pusha
dec
dec
mov
cmpsb
test
aam
inc
call
out
lcall
or
fadds
mov
dec
dec
fwait
or
push
push
jno
mov
mov
dec
sub
movsb
test
lds
ja
or
lods
out
push
rcll
jge
xchg
hlt
ret
lods
loopne
adc
out
lret
int3
dec
inc
push
sbb
negl
out
cmpsb
sbb
inc
jbe
dec
mov
lods
mov
out
or
jecxz
pop
mov
push
popa
cmpsb
or
inc
cmc
dec
inc
dec
roll
out
shlb
sbb
sti
mov
pop
pop
in
adc
into
sarb
push
out
data16
iret
mov
hlt
mov
jp
fs
and
mov
jg
in
adc
xchg
pushf
aas
or
fsub
repnz
sahf
or
int
out
std
cmp
fabs
insb
dec
imul
stos
xchg
sbb
push
sub
repz
adc
mov
fs
xchg
nop
lock
dec
xchg
rcll
sbb
ljmp
pop
fisubrl
test
push
aam
aaa
outsb
mov
rcll
andl
push
pop
push
aam
popf
adc
loopne
xor
push
cs
lcall
outsb
adc
mov
inc
fidivrl
mov
or
fwait
adc
out
mov
ljmp
orl
icebp
pop
xor
mov
mov
scas
cltd
dec
xor
es
arpl
fadds
outsl
jbe
ficoms
inc
adc
xor
mov
push
lahf
pop
push
sarl
and
push
test
imul
and
mov
sub
sub
insb
mov
sub
mov
mov
jl
pop
cmp
mov
adc
jl
lods
stos
in
and
ss
jbe
subl
aaa
das
icebp
aaa
xor
shll
int3
scas
rolb
loop
fnstenv
jge
fdivrs
push
xorl
pop
or
adc
int3
jl
mov
or
fcmovb
in
loopne
nop
test
outsl
push
lea
jmp
test
jb
test
lods
sub
mov
push
fwait
xchg
movsl
pusha
mov
ret
loope
jge
in
daa
inc
and
lock
add
add
inc
and
aam
int
add
pop
push
mov
cs
inc
cmpsb
mov
or
jle
mov
iret
mov
lods
fiaddl
or
popf
dec
sarb
xor
scas
mov
clc
mov
in
mov
jnp
ss
adc
js
push
test
push
aad
push
push
push
call
and
jle
shrl
jnp
xchg
iret
cmp
inc
fistpll
push
xchg
mov
dec
push
xchg
mov
add
cmp
enter
pushf
sbb
cmp
pop
lock
inc
push
and
inc
stos
shl
push
out
sub
bnd
xor
dec
cwtl
scas
mov
jbe
and
and
notl
inc
inc
and
loope
sbb
mov
cmpsb
pop
mov
mov
xchg
bound
sub
sbb
jle
leave
dec
in
lret
mov
std
mov
in
lea
pop
pop
std
inc
cmp
mov
lret
mov
mov
je
inc
movsb
mov
enter
imul
add
sub
jp
fiaddl
push
push
and
cmp
movsl
mov
sbb
sbb
push
xchg
mov
or
xchg
jp
mov
xchg
sti
adc
push
mov
push
xchg
push
mov
pushf
pusha
je
jmp
cld
push
push
ja
mul
jge
cmp
jl
lret
jmp
cmp
ss
jl
pop
es
fwait
xchg
movsl
inc
mov
mov
scas
aad
fwait
mov
dec
push
cs
nop/reserved
scas
push
pop
sub
adc
aaa
call
push
mov
lds
push
cli
lret
push
int
in
bnd
push
mov
scas
lcall
cmp
xchg
inc
outsl
das
push
nop
fwait
push
jae
push
mov
test
mov
ret
ret
inc
fdivl
enter
jo
push
inc
int3
cltd
mov
leave
sub
sbb
inc
sarl
xchg
or
xor
loopne
scas
pop
out
in
fmull
js
out
mov
pop
sub
jo
out
adc
dec
int3
jne
xchg
sbb
lret
push
daa
jo
js
subl
dec
ss
add
and
mov
test
push
imul
enter
rorb
shlb
nop
es
pop
out
repz
imul
fcmovnu
pushf
outsl
adc
xchg
sub
mov
mov
nop
aaa
jnp
mov
lret
mov
adc
rorl
scas
pop
sbb
mov
lret
popa
dec
mov
lods
sbb
test
lods
inc
add
mov
xor
test
and
rorb
mov
insb
mov
sbb
pushf
lahf
fcomi
and
jge
sbbl
push
inc
clc
inc
pusha
sub
sub
popa
mov
cmp
mov
cwtl
xchg
dec
inc
rolb
push
cmp
push
pop
jle
mov
ljmp
jnp
iret
push
test
bound
cld
push
lods
jne
inc
push
sarl
mov
sbb
xlat
inc
mov
orl
das
or
inc
fsts
bound
pop
in
fldenv
jno
and
mov
enter
xor
mov
xchg
rclb
aaa
inc
mov
mov
xchg
addr16
push
fldt
xlat
inc
aaa
fcmovnu
cmp
lahf
addl
push
adc
shr
mov
xchg
add
fidivrs
lods
aaa
stc
lret
scas
dec
ret
mov
ja
jae
and
xor
mov
lock
mov
cmp
mov
push
sbb
mov
jge
mov
shlb
or
ret
in
mov
bound
jbe
rclb
fistpll
bound
xor
ds
sub
pop
mov
xor
je
es
fs
sbb
push
lea
cld
push
add
xchg
js
mov
js
testb
bound
cli
jg
mov
adcl
and
or
movsb
mov
std
push
xor
pop
shrb
popf
cs
popa
mov
mov
shrl
sub
pop
lock
sub
and
insl
sub
rorb
dec
hlt
notl
adc
imul
dec
jge
testl
int
pop
out
sbb
inc
fs
lret
int3
add
cli
popa
sub
rolb
cmp
jb
int3
add
je
pop
adc
adc
iret
rcrb
ss
or
dec
idiv
lcall
mov
cmp
out
repnz
sysexit
add
aaa
push
dec
add
arpl
xorl
scas
inc
sbb
js
and
aam
daa
ds
imul
mov
mov
pop
lds
fnstenv
xor
push
out
push
pop
fimuls
test
xchg
js
and
pop
scas
lods
sub
shl
inc
push
lock
loopne
sbb
dec
sbb
mov
js
mov
lret
xor
movsl
cs
data16
xchg
or
stc
or
mov
stos
std
push
adc
cmovno
insb
scas
in
pop
pop
mov
hlt
push
outsl
sbb
mov
sbbl
loop
negb
mov
in
jge
xor
stc
pop
aad
and
dec
jne
pushf
sti
adc
loopne
xchg
dec
sti
out
cmp
daa
cld
mov
jae
fwait
in
cmp
outsb
mov
inc
xlat
cmp
std
pop
mov
inc
xchg
sub
pop
dec
xor
les
jle
nop
pop
test
pop
mov
jl
xor
cmp
mov
dec
test
sbb
dec
push
pop
in
aas
dec
adc
out
aas
jno
cld
lock
xchg
popa
xchg
icebp
sub
sub
and
cld
sbb
push
scas
xchg
jl
mov
outsb
add
xor
stos
push
dec
or
pusha
dec
jnp
imul
loop
daa
loope
dec
or
stos
es
inc
inc
cmp
sbb
test
lcall
shll
xchg
lods
lods
shrb
mov
test
ja
dec
ret
push
jnp
bound
fs
cmpl
dec
and
ja
xor
dec
fstpl
add
or
xchg
inc
jl
jbe
andb
or
jno
xor
mov
bound
jne
xchg
mov
mov
jp
sub
add
pop
out
pop
sbb
into
or
mov
inc
xchg
xor
daa
inc
mov
in
and
inc
cmp
int3
pop
sbb
dec
loope
ljmp
pop
mov
into
loop
mov
inc
cmp
subl
loope
mov
aam
subl
xchg
test
out
xchg
sbb
xor
adc
je
dec
or
pop
mov
ficoms
shl
dec
fcmovnu
mov
push
cmp
mov
xor
pop
lret
xchg
ljmp
mov
pop
clc
stc
jb
xor
hlt
jg
in
popf
orl
push
imul
push
xor
push
inc
hlt
mov
cmc
test
pop
and
cmpsl
cmc
adcl
mov
inc
popa
ficoml
inc
notl
arpl
cltd
sbbb
arpl
pop
mov
in
out
pop
and
sbb
add
sub
repnz
in
pop
adc
movsb
xor
flds
inc
shll
mov
repz
mov
movsl
outsb
pop
cli
in
call
lret
mov
lret
gs
mov
enter
fcoms
mov
sti
ret
adc
aam
out
les
and
mov
es
pop
xor
xchg
pop
hlt
int3
test
test
test
fnstenv
mov
or
jecxz
add
daa
outsb
push
aad
dec
mov
js
mov
adcb
inc
stos
fwait
mov
jae
es
or
leave
clc
fwait
pop
dec
dec
pop
xchg
cs
nop
xor
arpl
add
pop
xor
push
mov
push
cmp
xchg
mov
orb
faddp
repnz
pop
scas
mov
dec
mov
lret
loope
mov
jns
push
xchg
sub
sarb
rcl
pop
movsb
push
push
xlat
jnp
jb
hlt
ffree
or
jl
out
jl
push
push
out
jae
cmc
lret
cs
push
cmp
sub
shl
dec
sahf
jmp
sub
add
lret
movsl
xor
pop
jbe
loopne
leave
enter
ret
jnp
rorb
fstpl
addr16
cmp
sub
dec
cmpsl
sub
xor
add
lahf
bound
push
divb
dec
fnstcw
pop
xor
sti
arpl
xor
push
out
lahf
inc
jno
sub
bound
popa
sbb
fsubrs
adc
mov
push
repz
loopne
pusha
mov
and
xchg
inc
mov
insl
mov
outsl
xchg
pop
adc
pop
imul
mov
dec
push
xchg
xor
jne
push
clc
aad
xchg
cmpsl
xchg
loop
xchg
cmp
adc
cmp
rorl
xchg
es
dec
mov
imul
int
clc
cli
mov
ret
jl
sub
scas
push
pop
sub
arpl
xor
sbb
inc
aas
or
and
sarb
adc
cwtl
call
pop
mov
add
loop
sub
and
jb
jnp
lret
xchg
mov
movsb
data16
ja
dec
mov
leave
sbb
aad
fwait
pop
xor
mov
popf
xor
icebp
xchg
mov
repnz
cmp
sbb
mov
lcall
push
mov
push
ds
inc
sbb
xchg
js
stc
divl
xchg
popa
icebp
mov
movl
xor
mov
jae
mov
jmp
rorb
insl
inc
mov
or
cmp
leave
cmp
cmp
loope
adc
fidivrs
ja
in
in
and
pop
test
and
push
mov
and
mov
ss
stos
push
xor
scas
pushf
cld
ss
push
add
inc
sub
lds
popa
xor
jg
pop
pop
addb
mov
pop
pop
loope
lds
mov
xchg
adc
jl
sbb
push
lcall
pop
mov
fwait
jle
and
xchg
sbb
dec
mov
scas
out
push
sub
inc
add
mov
xchg
aad
call
and
mov
jcxz
jns
rcl
notb
inc
push
outsl
into
sub
lds
push
pop
xor
loopne
dec
mov
cmc
arpl
add
rclb
outsl
or
xchg
cli
cmp
inc
add
lcall
pop
nop
sbbb
pop
lock
and
push
jg
or
lods
bound
rclb
subl
add
lahf
imul
outsl
sub
and
mov
cmp
push
frstor
xor
push
mov
sub
ret
repnz
cs
iret
hlt
cmp
mov
cmp
mov
mov
pushf
add
mov
fistl
cmpl
mov
jecxz
sbb
push
push
mov
ja
mov
cld
repz
bound
sbb
mov
push
arpl
jg
fnstsw
fbstp
mov
cmp
jecxz
push
jnp
cmovl
push
xchg
sub
aas
out
and
cs
jg
or
adc
cmp
cld
push
sbb
xchg
pop
fistl
and
mov
or
fxch
jmp
lds
jmp
inc
pop
and
sbb
mov
test
pop
mov
dec
out
inc
mov
xchg
adc
and
sub
lret
aaa
cmp
xchg
jae
push
or
ljmp
inc
sarb
adc
insl
lret
scas
fsubs
jp
xor
insl
test
sti
sbb
test
inc
add
pop
hlt
test
ljmp
push
faddl
sahf
pop
cwtl
fbld
cmp
mov
push
or
pop
xchg
popa
inc
inc
mov
xchg
std
aam
add
add
inc
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
andl
andb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
orl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
nop
nop
nop
nop
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
push
add
add
add
add
loopne
add
addb
addb
add
loopne
add
push
add
adcb
add
push
add
addb
add
or
add
orb
add
nop
add
sub
add
mov
add
add
add
add
movsb
add
mov
add
or
add
cmpsb
add
call
add
add
add
add
add
add
mov
add
add
add
add
or
add
xor
add
pop
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
movsb
mov
add
add
or
add
add
lock
add
add
add
add
add
addb
add
add
addb
add
sbb
add
inc
add
cmp
add
push
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
loop
add
or
add
add
add
add
add
add
add
add
add
add
add
inc
lret
add
push
add
add
add
add
add
add
int
add
add
or
add
roll
cmp
add
or
add
add
add
add
movsb
add
add
add
add
add
add
add
sub
add
sub
add
add
add
or
add
add
add
fadds
addb
add
add
add
add
add
add
dec
flds
or
add
add
add
add
add
add
add
cmp
add
add
sub
add
sub
addb
add
or
add
faddl
xor
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
or
add
add
js
add
cwtl
add
add
add
add
add
add
add
or
add
and
add
add
add
add
add
fiadds
addb
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
mov
add
add
xor
cmp
xor
xor
inc
add
add
add
sbb
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
outsl
add
imul
and
push
add
arpl
push
add
add
jns
sub
and
dec
add
arpl
add
add
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
je
jae
and
push
add
popa
add
jae
and
inc
add
insb
add
je
add
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
cmp
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
imul
and
inc
add
insl
add
jae
and
inc
add
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
js
jno
add
add
js
add
add
add
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
jbe
add
add
sub
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
cmp
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
daa
add
add
daa
add
add
daa
add
add
add
add
daa
add
add
daa
add
add
add
add
sub
add
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
insb
add
gs
xor
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
insb
jne
push
add
inc
gs
gs
outsl
popa
jb
push
je
je
