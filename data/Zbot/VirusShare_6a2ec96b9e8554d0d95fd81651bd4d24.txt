call
dec
shrb
jb
dec
add
jmp
push
out
out
and
sub
movsl
xchg
inc
test
inc
inc
pop
inc
repnz
add
test
aam
mov
out
ljmp
into
cmp
ret
paddusb
sub
cmpsb
and
xlat
bound
aad
mov
clc
mov
mov
xchg
xchg
fiaddl
mov
jno
decb
scas
cld
enter
xchg
les
add
lods
mov
cmp
sbb
adc
fdivrp
fidivs
dec
fnsave
push
jns
add
fwait
adc
xor
pop
xor
mov
decl
pop
cmp
jp
arpl
mov
pop
mov
enter
pop
scas
sub
push
mov
add
sub
out
xorl
jecxz
xchg
ljmp
pop
dec
lea
cld
mov
cmpsl
test
mov
stos
fistl
push
or
call
cmc
je
int
mov
push
cmp
call
sbb
aam
test
xor
sbbb
inc
or
jo
jle
negb
dec
mov
or
adc
sub
call
insb
test
push
in
negl
orl
dec
push
mov
outsl
clc
lcall
loopne
mov
test
mov
jbe
push
push
test
add
push
stos
dec
lock
and
stos
ret
sub
dec
xchg
cs
popf
and
xor
mov
mov
pusha
ret
decl
data16
cmp
mov
mov
movb
shlb
in
mov
inc
xor
lcall
add
jecxz
mov
fdivs
push
dec
dec
xchg
xchg
jb
insl
out
sahf
fwait
outsb
dec
push
mov
inc
cmp
sub
jmp
adc
loop
out
mov
adc
adc
jno
stos
call
incl
sub
xchg
adc
test
mov
mov
mov
push
or
lret
pushl
icebp
in
or
jmp
shlb
hlt
jns
xchg
jns
add
adc
or
add
sub
call
aas
mov
test
mov
push
movsl
ret
cltd
rcll
jg
cmp
mov
jne
pop
cltd
lret
imul
mov
das
jae
xor
and
dec
insb
jmp
jg
rclb
or
xlat
out
jns
lods
dec
mov
mov
arpl
jg
mov
call
pop
inc
cli
cmpsl
or
aaa
jecxz
xchg
inc
insb
push
and
push
int
mov
loope
stos
pop
cmc
or
call
pushl
cmp
cmp
aam
jno
int
and
frstor
lahf
loop,pn
dec
and
jns
push
or
incl
cli
xor
mov
and
lahf
lret
testl
out
jge
inc
adc
jle
call
push
imul
arpl
call
sbb
jno
mov
js
loop
clc
sub
xlat
and
sbb
pusha
cmp
jae
pop
ds
ja
cmc
out
jg
mov
jmp
push
movsb
xchg
and
mov
js
xlat
jmp
dec
jo
and
inc
shrb
outsl
addb
jg
call
orb
xchg
push
xchg
and
sbb
loope
or
mov
nop
cltd
mov
cmc
dec
push
cld
xchg
call
mov
clc
pusha
dec
das
orb
and
adc
jg
jb
cmpsb
pop
sbb
aam
dec
sbb
mov
dec
dec
in
sub
incl
test
dec
pushf
ret
cltd
adc
enter
mov
jo
push
repz
fadds
cltd
dec
fbstp
or
orl
rcrl
icebp
or
scas
js
in
cld
ret
xchg
mov
sbb
in
cwtl
xchg
sub
das
xor
in
mov
loopne
andb
jmp
fld
adc
in
or
or
leave
pop
rolb
pop
adc
cwtl
out
into
add
inc
hlt
idiv
ljmp
int3
scas
loope
jo
loop
cmpsl
push
mov
sti
and
shl
stc
push
test
aas
xlat
mov
stos
mov
add
pop
inc
in
jmp
popf
shll
idiv
roll
call
jl
js
push
pop
adcb
jge
dec
aam
mov
mov
inc
add
or
xor
or
incl
mov
fst
adc
aaa
mov
testl
adc
mov
ja
adc
out
adc
loopne
cmp
imul
adc
dec
mov
add
in
je
cmp
lcall
je
test
sub
sbb
mov
pop
dec
popf
push
mov
or
mov
out
ljmp
mov
sbb
xchg
adc
sarl
les
xchg
call
cmp
jmp
mov
arpl
mov
xor
nop
or
or
push
loope
jb
ret
and
lods
push
push
std
jns
dec
pop
in
repz
test
mov
cmp
test
movsb
pop
int3
push
test
call
loope
adc
dec
int3
adc
sub
xchg
ret
pop
outsb
xor
mov
and
decl
cwtl
adc
out
stc
fisubrs
es
shl
xor
bound
cmp
stos
xchg
jmp
out
jp
mov
xlat
jb
outsb
xorl
cmp
inc
je
mov
push
pop
dec
mov
sbb
lret
push
mov
push
test
scas
mov
mov
cmpsl
push
call
jle
aad
lret
aam
aad
inc
mov
jp
pop
notb
pushf
mov
mov
or
xchg
cmp
or
xchg
xor
pop
pop
hlt
loopne
push
aas
test
sbb
pop
rorl
or
adc
add
hlt
push
xchg
lods
add
out
mov
fdiv
xlat
popa
mov
js
pop
cmp
xor
cmp
scas
repz
cmp
mov
jbe
inc
mov
adc
arpl
inc
jge
inc
in
jl
mov
mov
cld
or
bound
jge
xchg
mov
mov
xor
addr16
xor
lcall
fsubs
into
sub
lods
jne
dec
pop
aad
fidivrl
shrl
cmp
jg
mov
aam
aas
or
lock
vsubsd
mov
xchg
inc
test
jmp
cs
aam
add
xchg
clc
jns
mov
xor
cmp
push
fsts
push
std
pushl
pop
mov
jbe
jnp
into
jnp
lret
xor
jae
pushl
leave
js
js
fildl
in
or
mov
aaa
xlat
stos
mov
mov
ret
add
stos
mov
sti
shrl
mov
ja
xchg
dec
cmp
ret
ljmp
jmp
and
popf
adc
out
fsubrl
fadd
fdivl
cmpsl
jnp
call
ljmp
pop
or
mov
add
xchg
pushf
clc
and
std
inc
cli
decl
repnz
pop
mov
jb
cmp
popa
cmp
movsl
cld
xor
mov
mov
call
adc
sub
nop
inc
mov
xor
dec
mov
mov
ds
test
inc
ja
call
cs
or
inc
mulb
jecxz
inc
scas
pop
mov
cltd
push
jae
fstps
ljmp
jo
sbb
jg
rorb
inc
out
or
jge
testl
incl
jns
mov
and
sub
pop
cs
sub
jmp
cmp
bnd
lret
mov
mov
mov
sub
adc
ljmp
les
xor
cmpsl
jecxz
lahf
xor
cmc
repz
imul
inc
enter
lcall
ds
pop
push
fwait
mov
hlt
rcll
mov
push
js
clc
jae
xlat
cmc
pop
mov
cmp
and
aas
addb
sarb
outsl
insl
cmp
sti
pop
mov
sbb
es
iret
sub
add
decl
adc
pop
cmp
inc
loope,pt
cmpsl
decb
adc
ret
mov
push
push
sbb
dec
mov
lahf
xchg
addr16
mov
inc
or
sbb
aas
dec
add
pop
cli
mov
add
lcall
push
shll
mov
dec
in
jo
or
incl
jge
mov
dec
test
into
cmp
fsubs
xor
mov
call
ds
pop
stos
roll
stos
fwait
mov
adcb
test
jmp
jmp
out
sub
inc
adc
loop
xor
push
mov
xor
iret
mov
mov
mov
and
mov
mov
add
sbb
add
mov
push
sti
mov
and
mov
pop
mov
dec
mov
mov
int
mov
dec
cmovae
xchg
lret
pop
fidivrs
dec
lods
mov
popf
in
mov
test
inc
sub
mov
test
decb
jae
sbb
jge
mov
mov
shlb
imul
mov
add
scas
out
in
add
sbb
xor
aas
jge
sti
into
mov
cmc
pxor
cmp
into
data16
popl
dec
pusha
int
test
xchg
loope
das
pusha
mov
jg
pop
aad
loopne
ret
push
push
sub
mov
add
inc
jno
and
jmp
sahf
daa
js
loopne
or
xchg
daa
pop
in
jnp
add
add
cmp
fbstp
mov
xchg
and
fisubs
mov
and
adc
xchg
and
xor
fimuls
adc
adc
mul
rolb
pop
shl
fsts
sbb
mov
rorl
sub
dec
jmp
lahf
mov
xor
add
sbb
or
test
mov
inc
mov
std
push
andl
scas
adc
sbb
inc
sarb
lret
xchg
fcom
loopne
clc
insb
incl
in
dec
mov
stos
lock
mov
scas
mov
adc
push
cmp
subl
jg
enter
flds
sahf
dec
and
inc
push
clc
push
jns
es
rcr
sub
aad
mov
push
lds
shlb
fimuls
push
test
xor
leave
push
fists
filds
aam
lcall
js
fbld
mov
mov
clc
fwait
outsb
dec
jns
mov
xchg
xor
jmp
loopne
xor
sub
movl
add
jns
sub
mov
xlat
call
pop
repz
insl
push
dec
out
push
and
jnp
pop
sbb
decl
data16
and
jl
or
sbb
push
adc
mov
popf
scas
scas
out
movsl
punpcklwd
jmp
push
movsl
aaa
aad
push
pop
add
clc
mov
adc
out
mov
push
and
gs
adc
or
cmp
out
mov
xchg
or
pop
and
and
mov
jbe
mov
pop
jge
fwait
notb
cltd
pop
cmp
or
in
fnstenv
in
and
sbb
add
xlat
sub
or
mov
popl
or
pop
das
pop
cmp
xchg
or
xlat
mov
out
and
lock
or
sub
mov
in
nop
fistpll
or
adc
add
push
ret
lcall
insb
pusha
pop
pop
mov
or
rorb
pop
sub
in
pop
inc
int
cli
jbe
mov
sbb
pop
inc
add
nop
push
add
add
adcl
add
xor
xchg
or
dec
sub
push
add
in
add
loope
sbbl
dec
adc
enter
dec
and
inc
inc
push
xorl
inc
or
test
cmp
adc
push
xchg
add
add
add
push
xchg
add
test
inc
add
subl
inc
add
fs
fsubs
dec
mov
add
add
and
outsb
mov
push
iret
repz
jl
mov
fdivp
cmp
testb
sbb
es
idivb
ss
push
pop
mov
push
nop
jns
out
push
test
into
out
repz
repz
mov
iret
repz
push
data16
pushf
lods
ds
repz
int3
in
adc
sub
push
out
mov
repz
cli
or
and
dec
pop
cmp
repz
adcb
repz
fdivp
or
and
jns
out
push
data16
lahf
out
sahf
xchg
scas
fdivp
or
out
sahf
ja
push
xor
bound
xchg
test
aam
cmp
repz
adc
es
repz
repz
outsb
jle
cmpsb
out
cmp
mov
fsubrp
add
sahf
out
sahf
sbb
dec
pusha
jbe
jns
out
sahf
mov
fsubrp
repz
out
push
lds
dec
iret
repz
pop
insb
jl
stos
ret
repz
out
push
sub
sahf
out
inc
pop
push
cwtl
out
sahf
out
rcl
test
cmp
push
push
xor
bound
iret
repz
lcall
repz
or
sbb
out
sahf
out
dec
fs
sahf
out
sahf
pushf
lods
mov
iret
sarl
sbb
cmp
repz
repz
lcall
fsubr
clc
adc
sahf
out
sahf
and
dec
pop
jbe
jns
out
xchg
scas
out
cmp
out
push
lret
push
xor
iret
repz
push
push
nop
mov
cmp
fdivp
or
sbb
sahf
out
sub
push
insb
and
sahf
out
test
into
fmulp
cmp
lahf
out
dec
xchg
push
cs
repz
outsb
jle
stos
stc
cmp
repz
clc
or
out
sahf
cmpsl
sbb
inc
push
outsb
sahf
out
sahf
jle
movsb
mov
loopne
dec
repz
or
sbb
cmp
cmp
repz
bound
xchg
iret
repz
mov
add
adc
xor
jns
out
outsb
test
out
lock
and
iret
repz
inc
push
data16
pushf
ds
repz
mov
jns
out
adc
xor
out
sahf
out
xchg
jns
fsubrp
push
shrl
cmp
repz
jo
nop
mov
mov
repz
roll
sbb
inc
push
outsb
iret
repz
test
out
cmp
cli
adc
sub
jns
out
dec
pop
jbe
xchg
out
sahf
out
out
iret
repz
push
and
push
push
cmp
cmpsb
mov
out
cli
or
and
inc
out
sahf
out
bound
stos
int
jns
mov
fsubrs
cmp
repz
pop
outsb
jle
repz
repz
out
out
sahf
out
fstps
inc
pop
sahf
out
sahf
outsb
jle
movsb
mov
jns
repnz
adc
repz
repz
outsb
jle
repz
mov
sahf
cmpsl
stc
cmp
adc
and
push
jns
out
push
sarl
shl
testb
push
iret
repz
cs
data16
cmp
repz
mov
sahf
cmpsl
stc
push
frstor
ss
push
out
sahf
out
jbe
pushf
mov
out
fmulp
fstp
fiadds
cs
sahf
out
push
outsb
test
ret
add
sbb
repz
inc
pop
insb
jl
cmp
repz
out
ds
call
push
ss
repz
repz
xchg
mov
mov
loope
out
sahf
adc
xor
insb
jns
out
test
ja
out
repnz
push
ss
jns
out
pop
outsb
xchg
ret
add
sbb
repz
sub
dec
pop
jbe
cmp
repz
mov
iret
repz
push
xor
pusha
cmp
repz
mov
iret
repz
fdivp
add
adc
jns
out
xor
push
fs
out
sahf
je
mov
int
jns
cli
adc
es
repz
pop
jbe
sahf
iret
repz
scas
aam
cld
or
out
lcall
jns
out
nop
mov
xor
out
adc
sub
iret
repz
push
push
lcall
or
sbb
out
xor
je
out
sahf
out
mov
fsubr
jns
out
add
pop
push
xor
push
jns
out
xchg
mov
jl
loop
push
jmp
ss
cmp
repz
jb
xchg
mov
mov
add
into
cmp
repz
push
repz
repz
imul
in
and
sahf
out
sahf
inc
pop
je
xchg
movsb
jl
out
mov
add
repz
rcll
sub
dec
pop
iret
repz
outsb
jle
sahf
scas
sahf
out
cmp
hlt
add
adc
jns
out
cmp
adcb
mov
loop
iret
repz
or
sbb
dec
pusha
js
iret
repz
cwtl
test
enter
repz
push
icebp
push
es
sahf
out
inc
push
insb
jl
out
sahf
xchg
mov
cmp
sarl
adc
cmp
cmp
repz
js
cwtl
test
repz
mov
repz
out
sahf
and
push
push
nop
jns
out
cmpsb
mov
fsubr
repz
repz
sbb
cmp
repz
pop
outsb
test
cmp
in
add
sbb
jns
out
inc
pop
outsb
xchg
ret
repnz
into
jns
out
testb
cmp
out
sahf
out
test
sahf
aam
cli
data16
push
cmp
jns
out
pop
je
lcall
fsubrp
push
clc
cmp
repz
ds
fs
cmp
repz
imul
stc
and
sahf
out
sahf
inc
pop
push
nop
cmpsb
xor
out
mov
adc
cmp
repz
dec
pop
outsb
iret
repz
xchg
sahf
out
ds
sti
push
cs
pop
jns
out
push
xchg
cmpsb
mov
jns
out
out
decb
cld
iret
repz
and
dec
pusha
jo
cmp
repz
mov
fsubr
jns
cmpsl
stc
add
adc
cmp
jns
out
jo
nop
mov
mov
fsubr
add
sbb
repz
inc
push
bound
cmp
xrelease
imul
lcall
cs
out
sahf
ds
fs
mov
mov
fsubr
add
push
push
cs
fs
out
jl
movsb
mov
sarl
aam
cli
adc
and
repz
cmp
push
repz
mov
sahf
out
decb
add
ss
out
sahf
out
insb
jl
test
out
sahf
mov
add
iret
repz
dec
fs
repz
repz
enter
jns
out
add
sub
push
sahf
out
sahf
insb
jl
stos
mov
jns
decb
add
out
sahf
dec
pop
jb
lcall
shr
clc
adc
repz
shrl
ds
pop
jbe
repz
mov
sahf
out
ds
pop
es
push
sahf
out
jp
mov
sahf
out
out
adc
and
repz
cmp
jo
cwtl
cmp
repz
fsubr
cld
jns
cmpsl
stc
or
and
dec
out
sahf
out
mov
jns
enter
or
xor
repz
pop
jb
out
sahf
addr16
push
mov
sahf
ja
hlt
or
pushw
sub
pop
out
sahf
out
adcb
sahf
fsubr
pop
adc
push
inc
out
sahf
out
insb
jl
movsb
lahf
out
sahf
mov
aam
cld
or
cmp
repz
cmp
bound
cmp
repz
mov
jns
iret
clc
adc
es
sahf
out
sahf
data16
sahf
scas
les
out
fsubr
cld
or
and
cmp
repz
push
iret
repz
xchg
test
enter
iret
cmp
rcl
push
and
dec
repz
repz
jo
nop
mov
mov
shr
clc
or
sbb
inc
pop
push
jle
movsb
mov
out
hlt
or
and
iret
repz
push
pusha
jo
xchg
cmpsb
ds
repz
into
in
add
jns
out
sbb
inc
push
insb
out
sahf
out
xchg
lods
mov
lahf
fsubr
adc
push
sub
out
sahf
out
pop
jb
mov
mov
out
add
sbb
repz
dec
pop
outsb
jle
cmp
repz
movsb
mov
aam
imul
push
adc
sahf
out
sahf
inc
pop
outsb
test
fdiv
or
and
cmp
repz
jbe
iret
repz
pushf
lods
add
adc
xor
jns
out
bound
xchg
mov
mov
fsubr
add
iret
repz
adc
cmp
jle
iret
repz
cmpsb
mov
iret
repz
sti
in
sbb
push
sub
dec
cmp
repz
jb
lcall
fsubr
decb
sbb
cmp
repz
insb
test
cmp
repz
stos
rcl
out
lcall
inc
sahf
out
sahf
push
insb
jl
movsb
mov
int3
fsubr
add
adc
cmp
repz
dec
pop
jb
repz
mov
sahf
cmpsl
stc
cmp
push
push
push
xor
jns
out
pop
jb
mov
out
loopne
or
pop
push
ss
out
dec
fs
xchg
out
sahf
out
mov
in
iret
repz
add
adc
cmp
cmp
repz
mov
out
repz
and
push
and
cmp
repz
push
push
xchg
repz
repz
sahf
out
mov
push
push
es
jns
out
push
insb
sbbb
rcl
lock
shl
dec
adc
ds
insb
iret
repz
mov
cwtl
push
cmpsb
mov
ds
repz
fsubrp
cli
or
repz
out
push
and
inc
dec
pop
cmp
repz
js
xchg
mov
mov
int3
iret
cmp
mulb
mulb
iret
repz
pusha
jo
nop
cld
cmp
repz
and
add
or
bound
leave
push
adc
lods
adc
add
adc
rol
jmp
sbb
cltd
and
lods
das
sbb
mov
int
dec
mov
xchg
imul
lcall
xchg
cmp
sti
mov
jno
pusha
jo
cwtl
or
rorl
fsubs
imul
mov
incl
orl
lock
out
sub
or
push
cs
imul
call
add
cmp
inc
rcl
iret
mov
icebp
fsubl
xor
push
cmp
das
push
shlb
lods
ja
lock
push
add
out
scas
imul
adc
ljmp
aas
push
xor
jne
addl
cmc
cmp
std
xor
mov
jae
mov
push
ja
sub
mov
and
push
fwait
cs
pushl
push
cmp
mov
pop
lock
jne
stos
push
xor
jl
adc
xchg
xchg
xlat
call
repnz
test
mov
push
mov
dec
jg
xor
loop
loope
mov
cmp
in
mov
sub
scas
mov
mov
push
rcll
cmc
outsl
xchg
mov
jmp
inc
push
push
mov
dec
fisubl
movsl
jle
leave
push
pop
outsb
int
jmp
les
call
xor
or
inc
rcr
sbb
mov
in
in
loopne
call
add
jne
pushf
mov
and
leave
mov
cmp
jl
mov
dec
jg
cs
cmpsb
push
jmp
xchg
ds
pop
push
lea
xchg
add
dec
lea
cmp
inc
clc
dec
cmpsb
pop
xor
xor
pushl
push
xchg
in
aas
jge
out
sbb
imulb
inc
mov
imul
jmp
adc
sbb
inc
add
pop
xchg
outsl
fincstp
dec
js
pop
jg
mov
mov
dec
shrb
call
movsb
xchg
jp
dec
arpl
int
daa
inc
sar
ljmp
addb
pop
sub
mov
jns
mov
inc
lcall
pusha
push
cwtl
test
mov
insb
notl
cwtl
push
ljmp
cld
bound
call
jmp
mov
retw
in
or
mov
ret
fadds
out
jns
repnz
xchg
jmp
in
sub
enter
iret
mov
jmp
and
sbb
push
mov
jg
or
add
outsb
sub
xchg
lds
mov
add
sub
add
subl
push
adc
pop
aas
add
or
hlt
insb
arpl
dec
push
jno
mov
call
stos
mov
cmpsb
ja
mov
mov
adc
and
inc
clc
test
dec
dec
push
mov
insb
inc
leave
popf
in
inc
jno
cmc
adc
fbstp
mov
enter
jno
xchg
pop
adc
adcb
popa
xorl
mov
xor
and
sbb
push
sbb
xlat
lret
xchg
int3
arpl
mov
gs
jno
ret
inc
or
pop
cmp
mov
jne
sbb
outsl
cmc
enter
shrl
lret
xchg
inc
ss
and
push
scas
scas
sub
clc
sbb
into
dec
adc
je
xchg
jne
loopne
jmp
outsb
out
mov
fwait
mov
es
sbb
dec
repz
notb
js
mov
dec
inc
es
add
cwtl
hlt
and
mov
fstpt
add
into
pop
sbb
cmc
xchg
pop
fcoml
mov
xor
daa
lret
fcomip
jle
or
xor
adc
lret
cmpsl
int
jns
ret
push
xchg
shufps
pushl
mov
adc
testb
jge
jmp
movl
adc
adc
mov
pop
cld
popf
xor
repnz
mov
lock
in
jo
mov
incl
mov
addl
rorb
push
jbe
add
mov
mov
sbb
out
mov
jp
mov
ficomps
sbb
fcomp
ficompl
pop
push
sbb
or
lret
into
mov
mov
mov
call
movsl
push
mov
andl
mov
pop
jae
jle
lods
mov
into
adcl
stos
and
iret
mov
fwait
jl
daa
mov
pop
dec
inc
mov
das
clc
mov
dec
mov
in
xor
dec
cmc
popf
pop
cmp
fisttpl
mov
roll
ficompl
out
rclb
mov
jmp
cmc
xchg
pop
inc
mov
in
aaa
mov
andb
sbb
add
loopne
outsl
jg
sbb
stc
pusha
rorb
daa
outsl
jg
sahf
lods
xchg
fsubrs
mov
mov
push
popl
fisttpl
cmpsl
push
sarl
xor
push
pop
pop
daa
fcomi
imul
pop
dec
pop
in
pop
pop
mov
or
jle
xor
enter
mov
mov
mov
popa
loopne
cltd
sub
jo
pop
in
mov
ss
sbbl
outsl
sbb
pop
outsb
mov
mov
xchg
or
jne
mov
push
fidivs
loope
outsl
pop
cld
or
mov
js
mov
pushl
montmul
cmpsb
add
gs
stos
lock
incl
and
and
jbe
scas
jg
jl
outsb
dec
shll
hlt
int
pop
xchg
dec
mov
sahf
pop
dec
mov
in
stc
mov
sub
pop
mov
ljmp
es
in
push
insb
sub
test
mov
ljmp
ljmp
repz
out
xor
scas
and
fistpll
jmp
mov
nop
jae
sahf
jmp
mov
sti
cs
and
jo
sbb
call
inc
loop
jg
loop
std
cwtl
push
sbb
sti
stos
aad
sub
fs
jo
fs
and
jmp
je
aas
cmc
sub
outsb
fbld
lods
xlat
mov
mov
fs
adc
push
sti
mov
stc
jo
jle
dec
mov
xchg
add
mov
int
xchg
jecxz
cmp
jae
std
sahf
stos
dec
loop
int
and
dec
sti
nop
push
and
pop
pop
dec
jae
mov
stc
xor
movsb
jne
in
lods
mov
loopne
dec
jb
mov
aaa
pop
outsb
cmp
loope
ljmp
clc
sti
test
mov
les
xor
cwtl
push
xor
outsb
loop
cmpsb
std
cmp
movsl
scas
cmpsb
mov
repnz
mov
pop
push
push
xor
pop
outsl
cld
or
pop
insb
ljmp
sub
outsb
das
jge
jg
pushl
dec
lods
cmp
dec
sub
es
in
call
jle
add
ljmp
imul
faddl
push
xchg
cmp
sub
sbb
scas
mov
subl
jno
repnz
xor
xchg
ss
fsubrs
clc
stc
and
pop
mov
mov
mov
es
lock
stos
mov
push
mov
cmpsb
or
into
add
mov
mov
scas
fsubl
out
mov
mov
mov
lcall
or
sub
fdivp
dec
pusha
popa
cmp
outsl
in
xchg
imul
cmp
push
pusha
pusha
sub
push
sub
insb
lcall
outsl
pusha
pop
adcl
mov
divb
push
mov
data16
shr
in
mov
sub
call
das
clc
ljmp
sbbl
cmp
insl
pop
sbb
loop
mov
xchg
pop
sbb
sbb
imul
push
jle
cli
lcall
in
mov
les
push
push
ljmp
push
shlb
dec
insb
or
daa
nop
mov
mov
xor
ljmp
imulb
jecxz
shrl
adc
pushf
fwait
mov
iret
test
push
into
decl
push
push
mov
push
in
mov
sbb
enter
outsl
in
mov
cld
lods
cmp
scas
es
loop
push
ret
lcall
adc
mov
mov
mov
sarb
pop
out
pop
xchg
push
aas
adc
xorb
jmp
bound
pop
dec
bound
ja
cmp
ja
pop
dec
jbe
inc
fs
jb
push
jne
pushl
cmp
push
jne
outsb
pop
inc
imul
ds
inc
dec
dec
inc
fs
je
std
in
arpl
add
jns
imul
insb
jb
pop
jb
aaa
std
pushl
inc
push
jno
cmp
jp
dec
inc
fs
xor
dec
jb
dec
push
push
xor
idiv
decl
pop
pop
xor
inc
inc
bound
dec
data16
aaa
popa
addr16
push
inc
inc
xor
ja
decl
inc
mov
outsb
xor
inc
jp
mov
insl
dec
outsb
ss
push
fidivrs
push
bound
dec
outsb
dec
push
inc
add
push
imul
push
ss
in
incl
dec
push
inc
imul
insb
push
inc
inc
dec
push
jae
jo
dec
gs
aaa
inc
push
data16
lcall
std
inc
cmp
jno
inc
jbe
push
mov
xor
jns
xor
jbe
incl
ja
outsl
addr16
push
inc
jns
push
push
imul
push
je
xor
xchg
dec
jp
imul
push
push
dec
xor
jne
jbe
ss
push
outsl
xor
aaa
xor
inc
push
cli
xor
popa
pop
xor
add
push
inc
xor
xor
push
divb
aaa
sbb
cmpsb
fs
outsb
push
inc
inc
data16
inc
xor
push
mov
xor
xor
push
xor
push
dec
js
imul
inc
sti
or
inc
inc
cmp
jns
dec
insl
dec
push
xor
outsl
sub
inc
or
push
jo
add
adcb
mov
xchg
add
cmpsb
imul
sub
add
or
or
or
mov
push
fcom
sbb
roll
daa
lock
test
movsb
int3
xlat
loopne
jae
iret
jbe
mov
xor
or
adc
and
mov
and
add
push
repz
lcall
pop
repnz
and
test
pop
out
jg
inc
mov
jo
mov
mov
sub
outsb
sbb
jbe
push
or
data16
sub
push
and
sahf
xor
push
sub
cs
sbb
sbb
jbe
dec
lahf
xor
push
push
and
inc
mov
lods
aad
rcrb
push
jle
xor
loop
loopne
insl
sti
imul
rcll
rcll
mov
jbe,pt
pop
subl
cmpsb
xchg
push
std
incl
cmpsl
xchg
adc
lcall
push
std
adc
jp
ja
popf
push
daa
out
dec
fdivl
dec
push
popf
inc
faddl
ds
ja
js
shl
push
rolb
aas
sti
jbe
adc
fsubs
adc
cvtps2pi
add
sub
aas
lds
das
fsub
es
fisttpll
inc
push
sbb
adc
add
aaa
xor
cmpsl
dec
jo
jmp
xor
cmp
pop
jbe
cmp
pusha
xchg
xchg
loop
xlat
inc
aas
inc
add
jnp
push
cmpsb
test
or
pop
jbe
pop
jge
lock
test
outsl
outsb
push
cmp
mov
cmp
inc
adc
fnstenv
sub
pop
xor
cmp
sti
pop
push
sub
add
scas
leave
les
push
push
push
mov
mov
pop
push
jo
out
fldcw
icebp
sarl
add
mov
nop
sar
data16
push
mov
jmp
lds
jns
mov
push
out
mov
sti
or
lds
jge
sti
fiaddl
das
jge
insb
les
iret
lock
jb
decl
dec
or
into
loope
lods
fdivrs
daa
push
jae
loop
pop
inc
icebp
dec
fucomi
dec
mov
scas
ds
mov
lds
in
xor
push
shrl
aaa
or
ja
push
pop
imul
gs
xor
cs
insb
pop
inc
mov
fistps
gs
inc
jb
je
arpl
push
arpl
outsl
outsb
cs
gs
jbe
mov
aad
add
pop
jb
dec
outsb
and
std
aad
and
imul
inc
jb
fldt
outsl
arpl
or
pop
in
lods
loopne
xor
push
xchg
imul
call
pop
push
jne
jns
push
outsw
jb
popa
outsb
arpl
sbb
fildll
push
push
adc
sbb
jb
mov
push
push
fs
push
mov
pop
sub
fs
das
fstpl
data16
dec
jmp
cld
fldt
loop
popa
jb
outsl
dec
jne
mov
jns
sub
das
int3
pop
sub
sub
movsb
add
sti
mov
inc
add
arpl
sbb
testb
dec
jns
js
push
dec
and
push
cmc
and
popa
divb
mov
jbe
rolb
push
jb
inc
fs
jae
imul
or
gs
push
or
inc
mov
arpl
insl
sub
mov
inc
mov
cmp
sbb
insl
mov
pop
imul
sbb
fs
jb
xor
fisubrs
jae
sub
imul
in
shr
push
push
outsb
push
jo
mov
adc
fwait
push
outsl
neg
ss
and
dec
data16
push
je
sub
cmpl
popa
imul
mov
pop
in
mov
sbb
pop
and
xchg
xchg
rcl
outsb
jno
adc
push
gs
sbbl
jae
int3
mov
outsb
addr16
fsubl
gs
outsl
mov
mov
jmp
push
inc
jbe
jo
adc
addr16
add
or
mov
mov
mov
mov
popa
jne
jg
jns
mulb
sbb
pop
pop
aas
and
dec
mov
daa
lret
in
loopne
sbb
or
jno
cmpsb
leave
inc
out
push
xor
sub
mov
lcall
push
insb
push
dec
bound
repz
jo
cmpsb
pop
cwtl
pop
or
scas
loop
mov
xlat
fldl2e
mov
mov
jne
cmp
roll
adc
lret
sub
fstps
xchg
arpl
and
test
fimull
add
mov
cwtl
loopne
jo
lods
popl
jne
insb
inc
insb
push
sbb
adc
xchg
sahf
jae
mov
jo
jae
inc
push
mov
xchg
sub
fistl
xorb
rclb
inc
sbb
rclb
ret
frstor
adc
insl
add
inc
loop
int
mov
insl
inc
or
xor
jo
loop
movsb
mov
movsl
mov
jmp
mov
sti
push
sbb
or
add
out
imul
inc
push
loopne
pusha
xor
lds
pushf
add
data16
in
jmp
ret
fistl
push
xor
inc
imul
sub
stos
xchg
cwtl
rcrb
movsl
jecxz
pusha
jno
inc
int3
idivl
icebp
push
jo
add
xor
and
cmp
adc
jbe
and
aaa
js
jo
lock
movsl
shr
jecxz
outsl
push
fdivs
pop
inc
inc
cmpsl
push
xchg
and
inc
daa
sbbl
je
incl
jne
cld
roll
push
dec
addr16
or
push
push
test
in
out
xchg
pusha
mov
sbb
fdivs
in
fldl
inc
push
movsl
lret
push
lret
xlat
outsb
decl
xchg
add
inc
push
sub
andl
stos
adc
add
and
mov
inc
adc
xchg
adc
adc
mov
test
adc
subl
inc
add
fs
add
nop
push
add
test
add
and
or
push
subl
inc
add
adc
adc
nop
inc
or
and
adc
enter
nop
inc
add
cmpsb
push
add
xchg
dec
ljmp
inc
adc
mov
sub
mov
test
push
add
subl
push
cmpsb
mov
addl
push
adc
dec
or
adc
mov
sub
sub
test
pop
add
xorl
and
adc
call
mov
sub
add
add
ljmp
subl
inc
add
pusha
adc
adc
add
inc
add
adc
adc
nop
inc
add
mov
inc
adc
adc
orb
inc
add
nop
push
add
add
add
inc
push
leave
sbb
mov
mov
adc
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
mov
ljmp
mov
add
incl
xor
pop
pop
xor
xor
jmp
aaa
scas
inc
mov
add
add
fnstenv
pop
add
add
add
add
add
divb
dec
orl
adc
add
addl
cli
add
incb
pop
push
add
cmp
sbbl
sub
sti
fcmovnu
sbbl
xchg
xchg
fcmovnb
push
roll
adcl
test
in
mov
and
jnp
cwtl
mov
scas
push
xchg
sbb
je
gs
sbbb
incl
sarl
sub
pusha
rcll
rorb
and
jg,pt
mov
fcmovb
inc
or
add
rcl
gs
rclb
adc
shrb
and
loop
or
push
incl
jg
pop
les
aaa
out
pop
call
add
stc
and
pusha
add
aas
dec
imul
push
pop
add
sbb
or
pusha
ds
imul
fisttps
das
adc
fildl
push
add
push
aad
imul
test
cmpsb
jge
jge
xor
icebp
fmul
fldcw
sti
fcmovnb
or
loope
pavgb
stos
xor
dec
add
int
fisubl
mov
mul
jecxz
pop
push
fucomip
xchg
mov
add
push
fiadds
aad
pusha
add
loopne
lds
sbb
pop
pop
loopne
aaa
addl
shll
add
test
arpl
aas
cmpsb
sbb
sub
iret
test
fcmovne
mov
mov
add
dec
test
stos
iret
cmpsb
sub
push
out
cmp
mov
sarb
jns
pusha
push
dec
shrl
sar
pop
movsl
pusha
or
int3
mov
and
jle
mov
add
stc
rcrl
in
or
mul
imul
mov
movsb
dec
shll
add
addr16
cmpl
jns
loope
stc
lods
jecxz
dec
xadd
cmpsb
cmc
add
adc
int
mov
insl
mov
fwait
mov
shrl
sbb
cmp
mov
jnp
dec
push
jge
xchg
test
mov
addr16
mov
loopne
pop
lret
cld
aaa
xor
fcoms
insl
stos
push
pop
xchg
mov
mov
out
add
add
push
jnp
mov
loop
sbbl
xor
fimuls
test
or
and
cmp
imul
clc
and
pop
je
add
sbbb
testb
pop
mov
add
inc
add
loopne
fisubs
fidivrl
sbb
aas
xlat
sbb
cmc
or
pop
sbb
sbb
push
jne
push
sbb
fidivs
or
add
push
call
push
mov
push
stos
cmpsb
xchg
popf
jbe
lahf
or
loope
pop
xor
outsb
and
cmp
addb
retw
wrmsr
dec
std
xlat
jmp
lret
push
rcrl
cmpsl
sbb
imul
cmp
fisttpll
add
fadds
dec
or
cmpsb
cmp
mov
xchg
mov
sbb
sbb
sub
and
out
or
shl
mov
je
stos
sbb
lcall
andl
rcrl
jmp
lock
jo
stos
pop
cmp
outsb
imul
or
lcall
test
std
jg
cmp
fsubl
and
push
mov
pop
sti
lcall
jae
imul
ror
pop
lock
sbb
xor
inc
jns
xchg
in
mov
in
incb
mov
nop
test
lock
ljmp
repnz
fsts
sti
and
mov
imul
add
or
sbb
jge
mov
cld
push
in
rcr
out
int
out
aaa
xor
in
fwait
jo
jmp
xor
addb
call
xor
lock
int
push
sbb
outsl
sub
push
mov
push
lahf
jo
xor
imul
jge
jp
decl
mov
pop
mov
jle
xor
leave
jnp
add
dec
push
add
mov
mov
add
push
add
popl
cmc
scas
push
rcll
jbe
jb
decl
addr16
fimuls
jno
cld
or
xorb
and
fnsave
add
inc
lock
push
enter
cli
mov
inc
jns
push
adc
sub
pop
cmp
sbb
dec
pop
ja
jg
inc
das
adc
testl
add
xor
in
fiaddl
sbb
sbb
cmp
lcall
inc
movsl
or
mov
lahf
jbe
add
jle
mov
add
inc
imul
in
cmp
aam
outsb
jbe
xchg
jo
and
mov
lea
jo
mov
gs
mov
xchg
je
in
jg
fisubrl
adc
adc
xor
insl
cmp
lock
addb
mov
add
xchg
sbb
add
test
test
add
push
ljmp
decl
ljmp
daa
add
scas
push
adc
fisubs
xor
push
push
mov
and
adc
jg
mov
push
clc
js
or
jo
jo
bound
and
add
or
add
pop
sti
icebp
pusha
js
add
add
test
cmpsl
repnz
std
or
add
gs
add
push
adc
add
xchg
push
fadds
push
insb
add
add
pushl
mov
adc
add
aaa
lock
fstp
cmpsb
mov
shlb
xor
add
inc
inc
cmpsb
insl
pop
cmp
pusha
add
inc
jo
xor
xor
je
cs
adc
ss
jnp
add
adc
rcr
mov
push
sub
mov
push
push
es
loopne
add
divl
nop
mov
pop
xor
lods
call
or
xchg
mov
xchg
or
add
pop
or
lods
movsb
add
xor
ljmp
lock
mov
mov
mov
add
cmp
fimuls
add
add
add
std
push
int
adc
add
add
xor
xor
add
inc
add
cld
add
mov
stos
add
sbb
add
incb
cli
push
add
fcmovnu
outsb
aas
xlat
lock
pop
xor
and
and
mov
sub
xor
lret
xor
cmp
mov
loop
decl
imul
jno
jae
jne
jbe
xchg
mov
pop
mov
lcall
lahf
incl
testb
jge
incl
cld
pop
aas
mov
aas
add
cmp
in
testb
aas
sbb
xor
add
add
insl
sti
pushl
rorb
or
push
add
add
or
bound
ja
ds
lock
sub
jbe
sub
es
mov
add
pop
xchg
mov
xor
mov
in
jbe
out
push
loopne
sub
mov
and
adc
mov
and
mov
fnsave
popf
jnp
push
jnp
inc
in
and
sar
fwait
incb
dec
jp
stos
cmp
lret
xchg
stos
gs
orb
inc
xchg
in
jns
sbb
pop
ret
js
push
mov
call
push
int
pop
inc
mov
nop
pop
std
fwait
mov
ss
mov
lods
mov
in
scas
mov
push
push
testb
out
lods
mov
adc
repz
out
lret
add
lret
or
cli
sbb
cmpsb
into
add
adc
pop
jl
lock
sub
xchg
fld
pop
and
pop
nop
mov
rolb
mov
inc
mov
lret
jno
cltd
sti
repz
test
ljmp
sti
inc
pop
int
mov
sbb
int
lds
mov
pop
xchg
xor
es
ja
inc
mov
neg
out
mov
mov
out
std
sub
sbb
pop
inc
shlb
std
xchg
or
arpl
decb
mov
sbb
sub
loope
or
fisubs
mov
adc
add
push
in
jg
xor
ficompl
addb
pop
jae
or
inc
xor
push
imul
or
add
inc
sub
inc
push
push
negb
push
push
or
and
testb
adc
rolb
shr
mov
or
ret
rorl
add
add
pop
shrl
adc
add
repz
push
mov
adc
cmp
les
push
inc
scas
push
mov
in
push
add
cmp
sub
test
outsl
adc
push
xor
ficoms
inc
fstpl
add
dec
lret
pop
inc
imul
stos
push
cmp
add
add
jae
add
mov
push
adc
daa
push
add
sarl
xchg
dec
rclb
mov
test
sub
rorb
xor
outsl
fiaddl
push
pusha
testl
pop
out
fistps
rorb
or
jo
and
lret
add
js
imul
pushf
jge
enter
add
mov
lock
push
add
lcall
push
mov
fcom
lcall
in
inc
sbb
mov
fistpl
nop
or
cs
outsl
outsl
mov
or
sub
pop
mov
fnsave
push
dec
mov
lahf
pop
je
add
inc
stc
or
sbb
jo
outsl
data16
add
cs
into
pop
adc
adc
or
pop
outsl
fisubrs
add
inc
fcmovnb
inc
dec
lea
rcll
cmp
lahf
add
movl
lods
jbe
and
push
imul
das
sbb
add
push
test
in
loopne
and
loopne
fisubrl
ja
sahf
lock
adc
push
std
loopne
mov
add
add
dec
mov
lcall
add
dec
pop
out
cmp
or
idivb
sbb
es
loopne
loop
push
pop
jbe
loopne
lods
jns
jle
iret
add
mov
mov
dec
add
rcrl
and
and
rorl
mov
int3
mov
nop
sbb
and
in
dec
repz
mov
into
mov
test
cli
add
loopne
notl
je
and
jo
loopne
lcall
ja
mov
add
fneni(8087
sbb
add
xchg
test
jle
loopne
cmp
loopne
outsb
popa
xor
xor
js
or
inc
and
fwait
mov
xlat
out
shll
push
pop
ret
dec
mov
adc
shl
sar
rcrb
push
loopne
or
movzbl
jp
cmovp
stos
mov
gs
fldt
loopne
or
push
push
ljmp
push
aas
outsl
cmp
xlat
loopne
stos
pop
loopne
xor
ss
ret
orl
add
fidivl
inc
cmpsl
or
loopne
stos
mov
es
pushf
xor
xor
loopne
stos
lret
adc
adc
stc
sbbb
cmp
push
jmp
jp
pop
stos
repz
push
add
dec
or
xlat
push
in
dec
add
ret
inc
sbb
push
push
jg
jg
shll
addr16
loopne
jae
loopne
imulb
shrl
push
pop
fwait
sbb
mov
add
in
scas
adc
jbe
lds
xchg
inc
add
mov
xlat
jecxz
add
out
push
push
ficompl
jmp
ss
xchg
or
mov
pop
dec
xor
adc
add
loop
cld
xor
dec
and
adc
rcrb
fimuls
loopne
push
and
inc
sbb
and
cmpsb
jecxz
adc
sub
xor
lret
scas
sbb
outsb
out
sti
ret
dec
lods
loope
fsub
pop
fmuls
fnstenv
sahf
adc
jb
mov
xchg
int
or
mov
sbb
sbb
dec
out
loopne
or
adc
or
adc
jecxz
adc
cmp
mov
ds
and
mov
ret
xor
add
jo
lret
jo
lods
xor
roll
or
or
jo
and
pop
push
sub
add
inc
pop
push
fwait
jno
scas
cmpsb
pop
js
lock
jo
jb
push
push
lock
or
shlb
sbb
mov
pop
mov
lock
rcrl
adc
outsl
xchg
jo
out
lock
lock
fwait
aas
xchg
mov
sub
jo
fs
add
adc
add
cmp
cmpsb
cltd
mov
jnp
cwtl
lock
insb
jno
stc
shll
jo
mov
imul
jecxz
shl
inc
loopne
std
add
shlb
push
movsb
add
rclb
sub
jo
pop
jo
lock
mov
mov
jns
jbe
lahf
mov
sub
pusha
and
arpl
inc
mov
push
adc
xchg
xor
sbb
mov
adc
stos
cvtps2pd
add
adc
push
inc
stos
jecxz
lock
xor
or
add
or
inc
add
cltd
orb
sub
push
dec
pop
rcr
sti
cmpsb
shl
sbb
outsl
push
pop
sbbl
fdivrp
mov
mov
fwait
sbb
lock
mov
and
jmp
cmpsb
test
insb
int
inc
jl
and
mov
das
or
jno
clc
into
or
xchg
lock
add
scas
xor
jo
xchg
cmc
cwtl
adc
cmpsl
shlb
incb
repz
std
adc
mov
ja
in
xor
test
loope
mov
mov
add
outsl
adc
roll
stos
or
pop
mov
pop
int3
pop
add
add
cmp
pop
add
push
add
push
adc
insb
fwait
mov
adc
push
add
dec
add
add
repz
stc
dec
add
add
add
movl
inc
add
inc
push
scas
jg
add
jp
add
bound
jle
push
jl
add
push
add
add
roll
adc
adc
aaa
fs
xor
mov
or
sbb
cmp
add
add
ss
imulb
cs
add
fadds
daa
add
add
and
pushf
int
jg
add
add
nop
or
add
add
sbb
pop
add
add
mov
add
cmp
add
movb
mov
dec
adc
or
lret
or
add
pop
push
add
add
mov
in
pusha
mov
push
mov
cmpsb
add
dec
xor
xor
and
jp
pop
js
mov
cmp
or
sbb
and
daa
sub
hlt
and
insb
adc
add
or
fucomi
mov
or
sbb
add
enter
add
shl
add
xchg
add
add
add
add
add
adc
add
add
inc
int
fwait
sub
cmp
pop
add
add
mov
addr16
push
add
outsb
js
aaa
xor
add
add
add
add
ror
adc
add
add
add
and
push
add
sbb
adc
adc
sub
movl
jae
add
fbstp
add
pop
add
pop
add
xor
xor
out
xchg
adc
sti
xor
repnz
add
xor
mov
push
add
xor
cmpsl
push
add
xor
jecxz
add
xor
testb
ret
xor
cld
adc
mov
out
fbld
xor
test
dec
add
xor
stos
out
decb
lods
xor
scas
inc
add
xor
mov
add
xor
mov
out
inc
add
xor
mov
aas
add
ds
xor
popa
out
add
cmp
xor
add
inc
lret
add
outsl
out
adc
add
xor
add
ss
xor
shlb
out
out
add
xor
xor
add
xor
xor
add
out
cs
xor
loop
sub
sub
xor
add
fwait
mov
add
xor
add
es
xor
lcall
add
and
xor
add
and
add
sub
inc
add
pop
adc
add
and
and
cmp
push
cmp
push
aaa
add
mov
xor
sub
xor
push
xor
xor
adc
add
xor
add
xor
add
sub
sub
es
cmp
add
inc
mov
add
inc
sbb
inc
sbb
fwait
mov
add
dec
adc
add
add
dec
adc
adc
add
orb
push
adc
push
push
add
fistl
pop
push
stos
pop
push
push
adc
into
pop
sbb
push
adc
repnz
push
pop
adc
push
push
mov
sbb
push
pop
adc
cmp
adc
add
pop
imul
and
add
mov
fiaddl
adc
add
incb
aad
loopne
and
adc
or
or
inc
push
or
add
or
inc
push
or
mov
xor
mov
adc
push
jo
cmp
sbb
cs
cmp
adc
js
cmp
rorl
add
cmp
adc
push
xor
push
xor
adc
rcll
push
frstor
inc
xor
mov
sub
push
adcl
xchg
sub
inc
adc
mov
sub
inc
adc
sub
cs
cwtl
adc
dec
ss
dec
adc
mov
dec
adc
pop
movsb
mov
adc
pop
mov
push
data16
arpl
pop
popa
adc
adc
sbb
sub
adc
ss
testb
or
loopne
adc
push
xor
add
adc
push
add
bound
pcmpeqb
loopne
or
insb
pop
repnz
or
mov
or
or
adc
add
push
sbb
xchg
adc
sbb
inc
add
sbb
adc
outsl
setno
xor
pop
pop
xchg
pop
pop
mov
add
pop
aaa
jg
add
mov
stos
add
mov
mov
mov
adc
add
test
adc
dec
pop
lods
mov
aas
dec
pop
scas
jle
scas
nop
pop
lret
pop
nop
add
int3
out
add
int
pop
lret
addb
add
add
pop
xchg
add
pop
xchg
cld
pop
xchg
cmp
xchg
add
pop
xchg
add
pop
xchg
fbstp
xchg
pop
pop
cwtl
rolb
add
lcall
add
pop
pushf
add
pop
popf
add
pop
sahf
add
pop
lahf
lret
add
add
mov
rolb
movsb
xor
push
pusha
pop
movsl
xchg
pop
cmpsb
rolb
cmpsl
add
pop
test
jmp
pop
test
add
pop
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
pop
pusha
add
mov
adc
pop
mov
cli
pop
mov
add
pop
mov
add
pop
rolb
pop
roll
decl
pop
ret
pop
les
or
lds
or
movb
pop
movl
mov
pop
or
and
pop
or
and
and
pop
or
and
jmp
push
or
and
cmpsb
and
and
popf
and
sahf
and
mov
jmp
dec
or
inc
or
inc
or
inc
or
and
or
or
cmp
and
or
or
xor
aam
xor
shlb
xor
popa
and
or
and
or
and
or
and
or
and
or
and
or
and
mulb
or
xchg
jbe
mov
lret
push
xchg
and
push
and
or
fistps
and
sbb
or
sbb
or
and
sbb
mov
or
and
or
and
adc
and
adc
cmp
adc
mov
fcomip
or
or
or
and
or
or
or
and
add
pop
xor
and
add
pop
or
pop
std
mov
or
push
or
push
or
and
and
or
and
and
call
or
or
dec
or
dec
or
dec
or
dec
or
dec
or
mov
mov
inc
or
and
sub
inc
or
cmp
outsl
add
cmp
pop
and
or
cmp
pop
and
or
xor
sar
jmp
xor
lret
and
das
or
and
or
and
or
cld
and
or
and
or
and
push
daa
and
lods
and
and
mov
and
iret
jg
loope
sbb
scas
and
or
or
cli
sbb
mov
sbb
and
or
and
adc
cmpsb
es
adc
arpl
adc
adc
gs
add
and
daa
or
pop
daa
aad
outsl
pop
in
outsl
es
inc
sbb
inc
cld
imulb
es
ss
and
or
and
mov
or
nop
push
or
scas
pop
jle
or
cmp
or
mov
call
xor
xchg
and
or
lds
sub
or
sub
out
rolb
mov
sub
clc
pop
and
or
add
decl
add
sbb
roll
sbb
add
pop
or
add
decl
add
adc
fildl
adc
add
loopne
push
sbb
loope
or
or
add
or
add
cli
mov
pop
or
push
jmp
pop
or
decb
pop
or
pop
pop
or
pop
fdiv
fwait
jbe
push
pop
jo
push
or
push
push
push
fldt
push
push
or
push
push
or
push
push
or
adc
decl
dec
or
adc
dec
or
adc
dec
or
push
push
dec
or
sbb
decl
inc
or
sbb
inc
or
sbb
inc
or
push
push
inc
or
and
ds
and
cmp
inc
cmp
cmp
ljmp
cmp
push
ss
sub
xor
sub
xor
pushl
or
cs
xor
xor
cs
xor
sub
xor
sub
ljmp
or
ss
sub
cmp
cmp
lock
call
cmp
and
push
pop
or
inc
push
sbb
or
decl
inc
push
sbb
inc
push
pop
or
dec
push
adc
or
insl
sar
dec
push
adc
push
call
push
mov
fwait
jbe
or
push
pop
or
push
or
or
pop
push
pop
cmp
pop
dec
xor
push
sub
xor
xor
xor
xor
insl
cmp
pop
cmp
push
xor
xor
mov
lcall
aas
xor
xor
mov
imul
fiaddl
ljmp
inc
xor
addb
xor
dec
xor
sub
mov
dec
xor
xor
xor
xor
addb
dec
xor
lods
mov
push
xor
xor
xchg
repnz
xor
push
xor
fdivs
and
xor
inc
pop
xor
sbb
insb
push
pop
xor
xor
pusha
or
xor
xor
xchg
ret
shlb
loop
adc
push
lods
fdiv
test
adc
lds
inc
scas
adc
adc
pop
mov
mov
jb
adc
adc
mov
mov
adc
mov
shr
pop
mov
mov
loop
adc
mov
mov
adc
mov
inc
fdivs
push
mov
jb
adc
cmp
add
xchg
insl
xor
imul
mov
adcl
sbb
xchg
add
and
adc
lock
adc
cs
pushl
dec
adc
adc
inc
adc
pop
and
fwait
int
add
and
and
and
add
push
and
jns
add
testb
hlt
out
sahf
out
repnz
in
dec
repz
in
add
add
cmp
fisubrl
iret
repz
repz
test
idivl
jnp
sahf
push
rcrl
iret
repz
rclb
jg
ja
sbb
fbstp
repnz
out
fdivp
push
insl
push
mov
out
sahf
imul
out
push
jns
sahf
out
arpl
gs
fdivp
dec
sahf
out
frstor
push
ror
repz
pusha
rcll
push
xchg
cmp
repz
xchg
push
xchg
push
jns
iret
repz
push
nop
add
iret
repz
dec
push
sahf
dec
popf
dec
pushf
cmp
repz
fwait
dec
lcall
dec
cwtl
inc
xchg
daa
pop
cmp
inc
xchg
inc
out
inc
aas
out
daa
daa
ds
out
sahf
mov
mov
mov
jns
out
xchg
xchg
test
jns
out
test
jns
xorb
xor
jns
xor
jge
jns
out
jl
jnp
sahf
out
sahf
jp
jns
js
jns
out
pop
sbb
cmp
out
pop
add
pop
adc
pop
adc
adc
mov
ds
mov
aas
mul
pop
jae
push
inc
mov
frstor
insl
jle
cmp
mov
and
push
cmp
sbb
xor
movsb
add
push
xchg
jno
lahf
pop
jle
fs
imul
and
outsb
jp
pop
add
mov
dec
std
nop
inc
std
daa
mov
in
inc
stos
je
fldl
adc
scas
aaa
imul
dec
xor
and
cmp
bound
cmpsl
ficoms
push
xchg
mov
ljmp
mov
mov
or
cmp
and
and
sub
lcall
mov
aas
popw
sbb
mov
test
or
mov
push
out
jns
sub
adc
cmpsb
add
leave
sub
push
dec
add
add
outsl
loopne
mov
stc
mov
sbb
subb
mov
mov
sarb
outsl
dec
data16
outsb
dec
xorb
outsb
lret
xchg
ss
jmp
xchg
mov
mov
push
mov
mov
mov
sbb
mov
mov
cmp
mov
sbb
jle
mov
xchg
xor
xor
xor
ljmp
xor
xor
icebp
jbe
imulb
sub
in
mov
test
lret
sahf
aas
sti
call
dec
xor
push
gs
inc
jge
push
xchg
movsl
jg
xor
mov
sub
data16
mov
jl
sbb
mov
insb
xor
xor
lcall
push
push
fisubrs
imul
pop
fistpll
dec
cli
push
lds
xor
xor
xor
xor
xor
xor
xor
xor
xor
imull
scas
dec
sarb
call
outsl
and
push
int3
pop
or
int3
xor
xor
xor
xor
xor
xor
xor
pushl
jne
rolb
in
pop
insb
jno
fs
div
ret
outsl
out
pop
jb
movsl
inc
mov
pushl
pushf
xor
dec
xor
iret
jo
dec
jo
ljmp
mov
ds
fldt
dec
pop
pop
adc
lret
ss
mov
ss
ss
ss
inc
rcrb
outsb
stos
andb
aad
or
mov
jp
lods
xor
clc
sub
sar
mov
pop
xor
xor
ja
mov
jg
mov
xor
push
arpl
out
adc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
rorl
mov
shrb
test
inc
cltd
lret
fmul
jo
dec
cmp
aas
aas
sarl
lcall
aas
in
mov
filds
hlt
pusha
mov
and
cmp
mov
divb
repz
xor
xor
xor
pop
filds
xor
clc
jae
xor
xchg
xlat
xor
mov
dec
incl
pushl
and
lahf
xor
jl
jge
xchg
incl
sub
cmpsl
or
or
dec
ret
loop
add
ss
mov
pop
shll
mov
mov
mov
mov
mov
out
clc
lahf
inc
adc
ret
mov
fwait
push
sub
mov
inc
aaa
shlb
cmp
outsb
cmp
call
xorb
cmc
insb
push
sbb
clc
filds
adc
sbb
cmp
jmp
ljmp
cmp
cmp
cmp
xor
mov
stos
lds
ret
and
jmp
cli
add
add
sti
push
cmp
cmp
cmp
fidivrl
decl
aad
push
cs
loop
inc
jb
mov
cltd
add
jmp
loope,pt
test
jb
xchg
ds
ds
ds
or
sub
dec
push
mov
add
js
nop
data16
call
xor
xor
xor
xor
xor
xor
sbb
inc
cmp
push
sub
cmpsb
outsb
ja
or
into
push
jge
add
mov
enter
icebp
cmp
cmp
cmp
mov
lcall
push
std
pushw
sbb
arpl
cmp
cmp
cmp
cmp
cmp
xlat
or
jle
repz
lahf
les
pop
fs
fldcw
sahf
out
pop
adc
fdivrs
sub
sahf
add
xorl
sar
decl
push
or
jns
sbb
js
sbb
bound
and
pop
je
lahf
xor
or
push
mov
scas
or
push
mov
xchg
cs
or
repz
adc
jmp
push
pop
out
sbb
jecxz
push
pop
addb
cmp
sub
sub
ss
ret
xor
ret
cmp
in
adc
cmp
cmpsb
fsubr
and
pop
mov
aas
jnp
out
adc
addl
mov
mov
call
addr16
lcall
mov
cmpsb
cmpsl
push
test
scas
scas
dec
mov
pushl
inc
mov
mov
ret
cmp
mov
leave
lret
int
iret
das
rcl
call
sub
xlat
daa
fstp
fistps
loope
jecxz
in
out
jmp
out
out
psllw
and
clc
push
or
div
pop
stc
cli
sti
add
inc
adc
mov
add
decl
add
inc
inc
inc
add
dec
dec
dec
add
push
push
push
xchg
lock
adc
adc
add
add
add
xchg
add
sbb
add
add
add
add
xchg
add
adc
out
push
decb
inc
loop
sbb
incl
andl
adc
imull
clc
mov
outsb
rolb
mov
sbb
orb
pop
in
incl
test
add
addb
lea
sbbl
movq
add
push
rclb
rorl
addb
push
jb
sbb
ret
add
or
in
mov
in
adc
jg
fildl
bswap
sbb
daa
rcr
sbb
dec
mov
adc
rolb
add
popa
add
and
mov
imul
fwait
insb
insb
sub
gs
je
lcall
inc
fwait
fs
imul
add
or
mov
inc
lcall
pushl
jns
adc
add
orl
lret
push
xlat
inc
xchg
cld
mov
clc
jmp
jmp
xchg
outsb
push
pushf
je
mov
push
push
shlb
cs
xor
aaa
and
icebp
out
lock
push
roll
add
dec
jae
sti
cmp
add
add
or
or
clc
jbe
iret
or
add
data16
js
push
inc
lds
mov
pop
sahf
inc
loop
cld
xchg
push
insl
ret
sub
or
add
add
ficompl
rorl
rolb
fs
add
or
add
sub
xacquire
lret
inc
inc
xor
adc
mov
add
popa
add
pusha
add
ficoml
test
inc
xchg
sub
jno
sub
dec
into
arpl
pop
push
outsl
loopne
je
push
add
adc
pop
call
or
and
paddsb
stos
add
add
mov
push
push
mov
pusha
outsb
push
pop
mov
bound
mov
imul
pusha
adc
pusha
and
mulb
or
xchg
pusha
xor
cmp
aas
or
loop
cmp
lds
das
ja
idiv
or
je
cs
sbb
das
loope
call
test
outsb
jmp
lcall
gs
push
test
jbe
lods
pusha
or
loop
cld
xorb
xchg
push
imul
or
stos
icebp
sub
push
add
and
loopne
mov
lods
inc
inc
loopne
iret
xor
cs
xor
jl
add
mov
outsb
inc
add
mov
lret
jl
push
jg
mov
push
dec
xchg
xorl
sbb
outsb
mov
mov
mov
ja
fildll
fs
mov
out
sbb
pop
jecxz
mov
mov
je
inc
push
pop
test
pop
addl
cmpsl
loopne
shrl
xor
adc
push
add
cs
out
notl
std
jmp
sti
xor
jmp
add
sub
add
add
in
call
lods
lods
inc
hlt
popa
adc
and
enter
mov
scas
sbb
cmp
and
xor
mov
cmp
cmp
cld
push
sub
sbb
sub
add
jmp
pop
sbb
fwait
inc
jmp
shlb
in
std
push
out
and
jmp
inc
xor
out
out
shrb
pop
movsb
stos
mov
outsl
xor
inc
mov
movsl
add
popa
or
testb
lods
ljmp
sbb
hlt
stc
add
in
hlt
clc
fcomip
outsl
jo
mov
mov
dec
stos
mov
sub
cmp
ds
sub
pop
add
mov
fdivrs
mov
mov
mov
jo
cmpsl
mov
ljmp
cli
mov
sbb
in
lds
pusha
push
addb
jp
incb
sti
testb
push
dec
cmpsl
dec
and
push
pop
push
mov
pop
cmpb
outsl
jae
jo
arpl
mov
adc
xchg
sub
rcr
adc
rcr
add
das
clc
fucomi
sti
movsb
push
in
mov
or
repnz
add
mov
inc
sbb
push
je
add
gs
xchg
ja
ret
scas
clc
xchg
sbbb
xorb
mov
pushf
gs
arpl
loope
into
and
js
sub
add
mov
mov
mov
popl
mov
std
mov
sahf
xchg
jl
stos
mov
andl
mov
andb
call
xor
pop
out
dec
and
mov
popl
push
jno
scas
clc
add
push
out
xor
push
pop
outsl
in
sbb
inc
add
stc
add
outsb
shrb
mov
jbe
and
jne
xchg
xorl
sarb
divb
xor
jg
inc
mov
dec
sbb
call
cmp
inc
add
mov
aaa
cmp
nop
pop
pop
pop
cmpsl
inc
pop
mov
adc
mov
push
xor
inc
or
or
scas
adc
sbb
outsb
mov
clc
scas
inc
movsl
or
push
push
ret
pop
insl
sbb
or
sbb
sbb
pop
out
cs
out
shll
loope
sbb
push
inc
or
mov
inc
mov
inc
jp
icebp
jg
movsl
add
push
out
add
inc
fdivl
cmp
in
dec
divl
mov
cwtl
cmp
or
pop
add
jg
lock
dec
push
mov
dec
add
adc
pop
sbb
cmp
fistpl
sbb
sbb
push
shrb
insb
cld
pop
imul
lcall
decl
inc
std
jmp
mull
loopne
div
mov
add
push
cld
lcall
filds
ffreep
add
movsb
mov
mov
dec
stos
mov
clc
mov
pop
inc
push
sahf
mov
pop
mov
cmpsb
pop
std
out
cmc
cld
lock
in
icebp
add
dec
es
ljmp
loope
sub
pop
dec
pop
mov
dec
mov
inc
dec
mov
orb
arpl
mov
or
cmc
mov
fistpl
loop
add
testb
jbe
fwait
sbbb
decl
xchg
nop
and
adcl
xchg
xchg
mov
inc
aaa
cld
pop
cld
xchg
cmpsb
add
pop
mov
je
dec
dec
call
mov
cmpsb
jae
mov
push
add
mov
pop
add
lock
aas
rol
adc
add
ss
loopne
and
aam
scas
mov
sbb
fbld
mov
mov
mov
dec
pop
ret
lcall
pop
push
and
push
push
inc
mov
shr
ljmp
out
decb
sbb
add
loopne
in
adc
push
pop
decl
or
jg
jl
ja
mov
jae
xchg
or
add
lcall
mov
test
lods
xor
jbe
mov
lahf
jno
fwait
mov
mov
test
xor
xchg
mov
mov
je
jle
sbb
add
push
sbb
mov
mov
mov
das
out
and
outsl
sar
inc
lds
lret
jecxz
xor
roll
xor
add
js
incl
jp
add
mov
add
out
lds
in
decl
hlt
or
sbb
jecxz
sub
stos
aaa
xchg
or
mov
jae
mov
mov
and
dec
icebp
add
int3
loope
or
out
cmc
add
and
and
mov
fiaddl
cmp
adc
lret
xor
mov
repz
mov
data16
xchg
fcomip
ja
xor
add
inc
or
sbb
push
ljmp
mov
sub
or
jae
sahf
mov
fcomip
xchg
mov
and
sbb
push
clc
xor
and
out
sbb
sbb
std
jmp
cltd
mov
jno
mov
pop
movsb
mov
inc
nop
lods
mov
incb
jmp
mov
xchg
xchg
cltd
mov
lahf
pop
hlt
outsl
clc
addb
adc
lsl
btr
lods
xchg
mov
es
out
dec
mov
mov
mov
jns
je
addr16
adcl
data16
xor
gs
mov
push
add
addr16
pop
cmpsl
push
test
mov
inc
pop
idiv
pop
mov
mov
movsb
and
jno
leave
adc
mov
xchg
or
mov
jb
or
pusha
pop
mov
dec
pop
inc
jb
pop
cmc
mov
aas
jo
pop
inc
push
arpl
mov
push
mov
jmp
insb
and
dec
mov
add
rolb
fldenv
lret
and
cmp
or
repnz
fs
add
in
jmp
or
jg
add
push
and
data16
xorb
mov
push
push
or
dec
dec
dec
mov
dec
dec
add
rcrb
sbb
add
cmpl
aam
push
es
das
cmp
push
shrb
ss
pop
jo
stc
adc
into
push
or
fidivs
add
std
adc
add
sbb
cmpb
push
inc
lock
push
je
call
mov
mov
jns
lahf
and
jno
jg
add
mov
sbb
cld
dec
xor
std
mov
add
push
and
lcall
push
lea
mov
pop
dec
xchg
call
pushl
mov
xor
xor
fcmovbe
adc
mov
jmp
pop
ja
lahf
add
xchg
stos
mov
lods
mov
jmp
dec
sahf
test
mov
pop
mov
dec
mov
mov
add
xchg
lea
mov
inc
test
add
pusha
inc
ds
jmp
shr
in
xor
bsr
movsl
mov
inc
mov
and
mov
sub
fistps
lock
repz
pop
or
dec
xchg
repnz
mov
ret
repz
cld
call
xor
js
mov
mov
fldl
and
xor
stc
sahf
lcall
xchg
push
push
in
cld
out
adc
in
cli
adc
pusha
cli
fadd
sarb
aam
xor
fmuls
fcmovu
xor
in
mov
or
push
mov
arpl
or
iret
rol
roll
mov
subb
pushf
cld
pop
icebp
cmpsb
fwait
push
mov
decl
outsl
pop
movsb
sbb
ja
jle
rolb
or
data16
mov
scas
aas
add
ja
jns
jp
add
xor
sbb
fbld
pop
pop
push
test
pop
in
out
mov
pop
bound
xchg
popf
popa
mov
adc
sub
les
sub
adc
or
or
adc
fildl
sub
pop
cmp
sbbb
loop
add
std
add
sbbl
test
pop
stos
movsb
dec
inc
adc
mov
repnz
mov
incb
pusha
xchg
cltd
test
out
pop
pop
and
ret
subb
incb
jecxz
ror
les
call
mov
cmpsb
pop
add
inc
xor
mov
int3
cwtl
mov
je
mov
scas
pop
icebp
dec
mov
add
jb
mov
test
mov
fcmovu
add
jo
mov
pop
add
incl
add
scas
adc
ltr
ja,pt
add
jl
or
jns
jl
jae
add
and
aaa
jle
in
cmp
xor
ljmp
adc
fs
cli
out
call
into
push
add
scas
aaa
std
stos
add
dec
mov
pop
hlt
ljmp
clc
push
cmp
or
push
ljmp
jmp
mov
aam
loope
sti
divb
loope
lods
inc
mov
add
sub
inc
ret
mov
js
imul
mov
cmp
sbb
jg
loop
sub
rol
in
dec
sub
iret
iret
add
dec
out
movl
ss
pushl
repz
add
adc
cli
sub
sub
jecxz
push
jg
in
loop
pop
cmc
mov
repnz
jmp
mov
scas
cli
fwait
jle
cmp
fwait
les
or
mov
jge
call
scas
lods
or
rolb
shll
rcr
outsb
mov
scas
push
aaa
adc
cmpsb
pop
sbb
lcall
push
ljmp
insb
and
call
dec
mov
push
xor
enter
fdivp
clc
add
lret
aam
mul
hlt
add
sbb
dec
dec
inc
cmpsl
inc
pop
jno
or
inc
add
ljmp
mov
or
xor
ret
cmp
jo,pn
mov
push
cltd
push
mov
sarb
sub
mov
jecxz
dec
dec
inc
push
push
push
add
mov
add
jmp
xor
clc
imul
add
pushf
in
shll
les
lea
das
movsb
das
decl
out
into
or
clc
enter
fldl
loope
mov
sbb
adc
add
cmp
jbe
ss
push
dec
cmp
xor
ja
hlt
pushl
sbb
push
shrb
and
ret
add
es
int
xor
ret
add
fnstsw
and
mov
ja
aaa
lds
ds
shll
das
or
out
add
decl
lea
dec
mov
sahf
pop
pop
inc
outsb
push
mov
pushf
pop
push
push
mov
xchg
pop
adc
std
in
aaa
clc
cmp
aaa
les
and
aaa
orl
cmp
fdivrp
mov
xor
cmpsl
pop
mov
mov
scas
mov
add
lahf
inc
mov
mov
outsb
add
pop
addb
xchg
jnp
nop
add
leave
outsl
pop
mov
lcall
jmp
add
clc
add
and
cmp
mov
add
aaa
lods
sahf
dec
pop
and
mov
insl
jb
xchg
movsl
add
pop
add
or
movsb
pop
inc
jne
jl
inc
inc
dec
push
push
lcall
or
adcb
push
push
sbbl
arpl
add
das
push
int3
shrb
mov
ss
push
inc
movsb
pop
pop
mov
scas
pop
xchg
push
dec
push
incl
inc
mov
inc
xor
add
xor
loope
inc
mov
mov
clc
or
sbbb
jo
xchg
jb
sbbb
xchg
mov
xor
fistps
add
test
arpl
aaa
cltd
lret
daa
xor
xchg
xlat
jnp
data16
inc
lcall
mov
ljmp
add
orb
inc
add
xchg
mov
pop
push
icebp
jmp
xchg
jle
test
sahf
mov
std
adc
sbb
mov
sbb
lods
mov
idiv
mov
ja
mov
mov
rcll
inc
dec
dec
pop
push
inc
push
add
pushl
imul
aad
mov
test
mov
mov
rorl
nop
pushf
sahf
push
xor
cmp
jae
jle
fbstp
push
pop
push
mov
dec
pop
xchg
jge
cmp
pop
inc
pop
mov
loopne
clc
sub
arpl
add
lahf
pop
push
dec
mov
clc
xchg
ja
popf
js
jl
push
jle
orb
jo
loope
in
mov
and
outsb
lcall
rclb
dec
push
add
das
int3
ror
daa
push
sti
aaa
adc
sub
daa
rol
int3
or
push
ljmp
insb
push
std
jmp
jmp
add
dec
pushf
dec
dec
pop
test
sbb
push
mov
pop
add
cmpsl
dec
pop
pop
stos
push
or
mov
hlt
das
push
push
inc
jle
cmp
cmp
cmp
out
arpl
jo
andb
jnp
push
insb
mov
das
cli
jl
push
sbb
or
unpcklps
adc
push
pop
push
cmpsb
adc
mov
std
cltd
rclb
xchg
nop
xchg
inc
xorl
lcall
sahf
cltd
lcall
xchg
xchg
sahf
jns
scas
add
adc
out
add
push
pushl
push
mov
movsl
jo
mov
scas
push
mov
mov
les
lock
std
inc
ret
rcrl
std
add
and
into
les
add
and
es
test
lcall
xchg
addr16
xlat
or
scas
add
call
pusha
ljmp
dec
out
cli
sbb
sti
out
mov
add
adc
fldl
cmp
add
mov
dec
or
jmp
dec
jg
testb
add
and
and
xor
cmp
add
das
cli
mov
hlt
and
cmp
cmp
cld
xor
daa
ret
ja
cmp
push
mov
icebp
add
add
inc
pop
dec
loop
std
in
decl
cmp
cmp
popa
and
sahf
data16
xchg
nop
jnp
test
in
pop
icebp
insb
jl
test
jg
xchg
xchg
jbe
push
cli
ljmp
mov
out
jmp
dec
cltd
loop
pop
lock
hlt
fst
test
subl
mov
cmc
jmp
pushf
pop
mov
add
mov
inc
mov
aad
pop
call
pushf
push
stos
lods
fstl
add
loope
push
cmc
mov
jle
je
mov
push
dec
pop
dec
loop
sbb
jg
xchg
fwait
insb
adc
sub
test
das
xchg
xchg
push
clc
stos
cmp
sbb
test
and
inc
mov
test
inc
mov
cltd
pusha
dec
sbb
popa
add
cmc
rcr
cmpsb
push
repz
roll
mov
outsb
arpl
mov
add
inc
mov
sbb
or
mov
mov
add
sub
in
cwtl
test
dec
mov
std
cmp
js
xchg
movsl
xchg
arpl
push
cwtl
ja
jae
aaa
cld
jg
ficoml
dec
add
pushf
mov
xchg
mov
rclb
inc
add
mov
add
stc
sbb
sbb
inc
loope
inc
test
int3
popa
add
fbstp
mov
scas
mov
loopne
jge
mov
pushl
or
jo
add
cmp
and
lret
jle
and
cmp
loope
cli
sub
xor
icebp
push
mov
sub
sub
sub
xor
jnp
jg
jb
push
fstps
pop
mov
mov
mov
scas
std
call
pusha
or
les
jne
test
dec
adc
add
aaa
jg
mov
push
les
jbe
xor
cmp
jnp
add
decl
test
pop
and
pusha
add
lcall
cmp
add
int3
iret
add
and
inc
xor
movl
pop
cld
sub
jnp
leave
cmp
aas
lret
gs
sub
fsubrs
dec
jecxz
inc
inc
push
push
dec
repnz
or
mov
bnd
adc
call
out
loop
jmp
jmp
cmp
dec
dec
dec
ret
clc
lds
xchg
adcb
lret
xor
jge
lea
outsb
enter
mov
push
sbb
pop
icebp
call
mov
adc
adc
sbb
addl
insb
jg
call
mov
imul
inc
xchg
mov
jmp
test
packsswb
adc
jae
sarl
add
xchg
int
mov
fsubl
into
mov
mov
in
sub
sbb
mov
sbb
pop
aam
or
or
jg
sub
sbb
std
mov
inc
and
and
and
fcom
iret
xor
mov
mov
pop
mov
push
add
out
sbb
pop
sub
nop
add
adc
in
inc
or
nop
sbb
sbb
int3
pop
sbb
add
mov
ret
subb
lods
fimull
loope
in
fcmovnu
xor
std
les
loopne
push
mov
call
xor
xchg
cmpb
inc
clc
jl
in
cs
push
ljmp
mov
test
pop
ret
mov
ljmp
xorb
push
scas
pop
outsl
pop
sbb
sbb
mov
mov
and
sbb
pop
loop
clts
out
adc
pop
sbb
jmp
setle
andl
dec
inc
hlt
push
dec
scas
stos
mov
mov
in
mov
adcl
test
cld
push
mov
sub
and
add
imul
lock
mov
pop
lcall
jg
movsl
inc
inc
inc
mov
adc
pop
mov
mov
lds
call
sbb
pop
loopne
dec
pop
inc
cmp
mov
popa
xchg
jle
jno
add
cwtl
gs
outsl
xchg
jo
inc
cmpsl
add
call
movsb
mov
push
mov
mov
dec
mov
mov
out
std
or
pop
stos
mov
test
lcall
mov
jbe
lret
outsl
cli
mov
mov
cmp
add
add
inc
dec
in
dec
add
in
aaa
cld
dec
dec
push
scas
push
push
ss
push
push
pop
cmpsb
pop
out
bound
imul
push
insb
insl
outsb
nop
jo
add
je
jbe
js
add
dec
hlt
inc
pusha
pusha
and
das
xor
shll
nop
jae
mov
js
outsb
add
add
fildl
lock
and
inc
inc
add
rolb
or
pop
orb
or
add
pop
push
pop
pop
pop
mov
arpl
out
imul
lcall
dec
sub
sbb
gs
push
cmpsl
pop
sub
mov
push
pusha
xchg
pusha
les
jmp
ret
hlt
mov
rcrb
ret
subb
test
add
fadds
into
xchg
adc
mov
add
lock
insb
inc
mov
add
add
push
lock
jae
pop
fdivl
aaa
test
mov
mov
xchg
add
hlt
jbe
dec
pop
add
mov
mov
nop
adc
push
jle
lods
adc
push
out
je
push
jo
decl
scas
add
jb
mov
es
popa
fs
bound
jb
neg
sahf
jb
inc
mov
mov
inc
jb
popa
je
stos
push
mov
hlt
int3
stos
pop
and
lcall
adc
inc
cmpb
mov
dec
xchg
outsw
jb
push
int
call
sbb
push
jb
arpl
lods
je
push
or
add
ss
push
je
lea
fiaddl
nop
rolb
xor
out
lcall
xor
outsb
fwait
insb
cli
adc
fs
mov
or
in
pop
cld
and
je
sbb
dec
in
ret
js
push
in
and
mov
ss
push
push
mov
inc
inc
push
inc
push
adc
mov
push
bound
and
push
inc
dec
mov
jmp
inc
add
inc
mov
mov
or
push
xor
dec
inc
inc
stos
adc
dec
stos
jecxz
inc
mov
lods
or
dec
dec
dec
mov
push
jmp
mov
or
mov
adc
xor
dec
push
inc
mov
inc
dec
mov
insl
lock
inc
dec
icebp
add
stos
push
nop
jno
decb
incb
add
and
sub
dec
mov
out
xor
fs
inc
xor
clc
out
xchg
in
inc
pushf
outsl
outsb
outsb
lcall
adc
popa
push
sub
arpl
pop
icebp
push
outsb
mov
bnd
outsb
je
and
lock
or
shlb
outsb
arpl
jmp
push
sub
jo
and
cmp
outsb
xchg
gs
call
gs
popa
insb
imul
xor
cld
aaa
fdiv
mov
bound
xor
lock
ja
pop
mov
add
sub
add
mulb
gs
mov
add
inc
add
das
sub
mov
cmp
push
pushf
jno
or
and
mov
loopne
xchg
cs
bound
push
jae
lods
mov
addr16
push
inc
xchg
jae
dec
xor
add
add
xor
dec
fcoml
inc
cmpl
call
dec
pop
xor
rclb
mov
imul
outsb
hlt
xor
and
fbstp
and
push
orb
mov
imul
bound
mov
imul
cwtl
add
or
xchg
dec
pop
mov
notb
popa
jb
push
jo
xor
testb
mov
outsb
repnz
pushl
cld
imul
inc
dec
push
mov
push
add
nop
sbb
pop
hlt
jae
loopne
pop
xor
icebp
add
xor
repnz
loop
or
imul
add
rcr
jle
lcall
or
in
sbb
mov
pop
mov
add
pop
dec
popl
push
mov
pushf
imul
mov
sub
add
xor
lods
ret
push
mov
push
lea
hlt
push
std
mov
lcall
repz
mov
sub
ljmp
pop
addr16
jle
dec
into
adc
adc
jle
mov
mov
mov
jle
inc
std
jnp
push
mov
xchg
rorl
and
test
jns
inc
jge
mov
inc
cld
sbbl
add
xchg
push
xchg
or
xchg
rcll
decl
xchg
lock
xchg
jo
xchg
mov
lea
cmp
or
add
jb
xchg
sub
shlb
mov
xor
mov
xor
frstor
and
and
add
call
adc
jb
xor
inc
sbb
mov
jp
xchg
insl
rorb
push
sbb
lea
xor
sub
xchg
je
imul
or
lds
insb
and
and
jg
inc
imul
out
and
and
cwtl
inc
mov
outsl
test
outsl
fbstp
shll
nop
and
add
das
mov
lods
inc
lcall
mov
sbb
shlb
fistpll
sub
pop
frstor
mov
mov
pushf
push
sbb
xchg
inc
repnz
pushl
add
dec
pop
jge
add
mov
call
inc
adc
call
sbbb
push
push
sti
or
dec
cs
adc
adc
outsl
inc
cmp
xor
ja
stos
xor
aaa
or
add
sub
add
jmp
pop
cmp
call
xor
cmp
mov
add
movsb
push
call
xchg
xor
pop
ret
push
nop
in
jle
test
add
push
loope
push
cmp
pop
stc
dec
fimull
jne
push
fistpll
ljmp
sub
incl
add
in
out
call
dec
pop
sti
and
subl
mov
push
scas
iret
std
ds
leave
call
mov
push
call
add
sbb
pop
adc
jo
jg
pop
addb
pop
fmull
shlb
and
mov
push
pop
ljmp
mov
inc
push
clc
dec
enter
mov
cmp
insl
cli
xchg
lea
cmp
js
push
cld
lea
std
repnz
jo
test
and
inc
call
mov
sbb
jmp
lock
add
outsb
je
add
jne
call
add
pop
leave
ret
orl
mov
ljmp
pop
mov
scas
js
call
bswap
add
jne
call
pop
shl
mov
pop
push
mov
xor
add
inc
cmp
mov
or
aam
xchg
xchg
add
inc
mov
and
pop
imull
mov
xor
mov
xor
clc
xchg
mov
mov
faddl
push
lock
es
call
cwtl
scas
push
mov
add
mov
inc
dec
or
jne
das
lea
pop
or
loopne
add
mov
jg
loopne
ret
jg
divb
xor
inc
ds
ret
dec
add
imull
jo
push
lods
push
lea
push
sbbb
ljmp
and
mov
mov
nop
xor
add
sahf
xchg
adcb
mov
or
jl
je
test
mov
or
jg
jge
add
jge
add
out
mov
mov
incl
jmp
mov
jmp
mov
ret
inc
cmpb
inc
adc
std
mov
cmp
or
je
cmp
jbe
addl
call
and
test
je
loop
test
sahf
sbb
outsl
jg
add
push
pop
fbld
rcrb
push
jge
nop
clc
enter
ret
adc
sbbl
lea
push
cmp
or
sti
mov
cmp
ret
test
mov
xor
ljmp
shlb
pop
pop
ret
clc
add
mov
andl
std
add
or
adc
rcrb
jl
adc
mov
or
inc
or
leave
push
add
push
adc
and
add
mov
adc
icebp
in
dec
nop
pop
adc
xor
out
jb
cld
fimuls
aaa
mov
push
add
push
rorb
addb
int
jb
ret
xchg
or
adc
mov
mov
test
add
add
ss
adc
adcl
loopne
dec
and
mov
xor
loopne
lcall
mov
push
shll
sarb
mov
mov
ret
mov
aas
cmpl
add
mov
call
jae
mov
hlt
rolb
shll
cmc
jg
sti
rolb
add
dec
mov
mov
jbe
add
cmp
push
jnp
dec
adc
mov
ds
or
pop
pop
leave
add
push
push
outsb
add
je
data16
shll
cmp
and
in
add
push
or
fdiv
scas
movsb
push
ret
sub
push
fcoml
push
mov
ss
loope
int3
add
xchg
add
sbbb
dec
dec
je
sbb
cltd
or
cmp
mov
push
adc
adc
cmp
hlt
push
loopne
clc
pusha
mov
in
adc
loopne
test
mov
pusha
outsl
sbbb
aaa
cld
in
mov
xchg
sub
push
jne
and
and
inc
jl
movsb
inc
repz
pushl
add
or
cmp
add
je
jmp
mov
or
pusha
inc
sub
lods
add
pop
xor
ljmp
jp
push
dec
sub
loopne
pop
pusha
jge
cmp
jmp
popa
inc
loope
clc
mov
fadds
pop
loopne
in
sbb
inc
pop
push
push
push
mov
adc
loop
clc
fs
fdivl
adc
pop
push
test
pusha
adc
jb
push
xchg
pusha
mov
clc
addb
cmp
jp
pusha
sub
add
xlat
call
and
push
cld
filds
loope
loopne
push
add
add
or
pop
out
sbb
divb
pusha
je
push
ds
push
and
or
cli
inc
pusha
daa
dec
lock
jl
and
int3
rorl
xor
jle
jbe
loop
ja
mov
inc
or
ljmp
or
in
cs
pop
add
add
mov
or
fdivrs
jmp
adc
adc
or
dec
inc
insb
incl
cli
add
repz
pop
sbb
sarl
and
sub
cmp
cmp
testb
xchg
mov
add
push
xchg
add
add
sub
xchg
outsb
and
or
cwtl
lcall
cmp
push
loopne
and
push
mov
pop
andb
push
push
popa
push
ljmp
addl
xchg
inc
call
pop
push
push
decl
inc
movsb
pusha
pusha
add
mov
add
push
adc
push
adc
test
es
pop
xchg
and
push
insl
mov
outsb
pusha
mov
jl
je
in
aam
cmp
add
push
push
mov
pop
mov
shl
add
mov
xchg
add
or
cld
adc
push
mov
into
pop
add
mov
jne
add
les
or
inc
jae
jmp
pusha
mov
call
jmp
xchg
add
ja
movb
push
or
jl
sarb
jg
add
verr
jne
pusha
inc
add
nop
call
scas
jb
movsb
test
push
inc
pusha
pop
loope
pusha
dec
incl
inc
in
or
lea
mov
mov
jl
mov
mov
int3
call
mov
enter
je
inc
inc
loopne
loop
push
cmp
repz
loopne
sbb
push
pusha
test
jo
lret
fs
mov
cli
push
call
add
mov
loop
je
test
je
add
mov
cli
add
push
loope
pop
fisttpll
aam
adc
adc
mov
test
mov
les
or
in
scas
call
push
js
movsb
cmpb
sub
push
call
fcmovnb
inc
add
ds
mov
push
mov
cmp
adcb
pop
sar
dec
mov
dec
jne
adc
pop
jle
mov
push
idiv
sbb
popa
add
sarb
popa
add
dec
pusha
add
pusha
das
push
loopne
mov
mov
in
divl
data16
or
sbb
lea
jno
mov
or
or
mov
add
call
or
pop
notb
push
push
mov
mov
sub
push
cmp
jb
mov
decl
inc
jge
aas
std
push
hlt
add
inc
sub
cli
test
incb
mov
add
mov
jbe
add
mov
sbb
out
xor
mov
loop
scas
pop
fmull
push
fs
add
loopne
aam
inc
and
jl
adc
test
arpl
cs
xchg
push
fildl
jo
pushf
jae
mov
push
fdivs
pop
rcrl
add
push
pop
or
mov
les
jmp
es
mov
in
ja
addb
mov
repnz
jbe
aam
bnd
jne
push
call
cmpl
xor
or
xor
cmp
incl
mov
xor
push
test
add
cmp
cmp
jmp
test
and
add
mov
scas
decl
xor
mov
push
pushl
xor
pop
mov
and
add
cmp
or
jno
and
mov
add
cmp
cmp
in
mov
push
pop
inc
lock
pop
jno
cmp
and
jmp
incl
ljmp
cmp
add
pop
ret
push
enter
jno
push
ljmp
shlb
or
dec
add
or
out
xor
jno
push
lcall
aam
or
adcb
mov
xorb
mov
xor
lock
lea
mov
call
pop
adc
jb
inc
jo
outsl
jp
jmp
push
mov
sub
shr
fistps
cmp
jo
jg
dec
inc
mov
insb
mov
int3
leave
inc
push
mov
and
push
mov
icebp
mov
loop
loop
sbbb
clc
shll
enter
daa
push
call
scas
push
adc
fwait
xor
dec
arpl
mov
arpl
push
pushf
dec
jae
mov
push
inc
fdivl
insb
dec
std
ljmp
lea
push
mov
xor
les
jbe
lock
adc
or
fwait
xor
push
push
pop
ljmp
mov
sbb
in
dec
push
or
mov
mov
ret
mov
push
lahf
mov
xor
mov
cmp
sbb
jae
push
mov
xor
call
mov
jp
jge
sbb
inc
into
xor
pop
lret
xor
clc
xchg
sub
cmc
add
jmp
mov
call
fbld
clc
mov
jb
ss
call
push
sbb
incl
mov
push
fs
mov
push
add
add
push
or
inc
add
aam
and
xchg
fs
pop
cmp
xor
int3
adc
faddp
dec
jb
mov
xchg
adc
mov
push
push
lea
movsb
cli
incl
fld1
xchg
mov
ficompl
inc
or
mov
aaa
jge
loope
test
inc
test
xor
cmc
lock
cld
sar
add
xchg
pushl
xchg
push
icebp
adc
and
push
cmp
mov
or
je
push
mov
jne
add
adc
or
xor
addl
pop
mov
xor
push
fnsave
xchg
add
addr16
push
push
mov
imul
jne
hlt
jbe
mov
sub
xchg
scas
push
out
aaa
std
es
iret
jmp
xor
inc
adc
sbb
das
rcrb
and
pop
test
add
and
mov
lcall
cmp
push
cmp
mov
add
add
add
cmpl
add
or
out
mov
lock
stc
add
sbb
add
add
jne
xchg
adc
xor
test
int
imul
inc
rolb
dec
dec
je
andl
sub
push
pop
mov
orl
cmp
jle
mov
xor
adc
nop
addb
mov
push
xor
pop
pop
jp
data16
andl
and
mov
lock
xor
fdivrl
ret
mov
addl
mov
sbb
jge
push
loop
sbb
xchg
pop
mov
jp
je
xchg
mov
shrl
push
lcall
lock
stos
pop
add
jle
add
shr
jb
sub
add
cmp
jne
mov
aam
je
mov
adc
adc
lea
inc
inc
cld
add
push
icebp
scas
add
or
cmp
jne
bound
jmp
xor
decl
mov
fcomps
add
inc
jmp
je
xor
add
lock
repz
mov
jmp
xor
add
loop
cs
xor
xchg
paddd
mov
add
mov
dec
add
hlt
and
mov
jb
ljmp
je
adcl
jb
adc
sahf
jno
mov
xorl
loope
mov
push
push
pop
daa
stos
push
add
or
xor
adc
jle
std
xor
jmp
or
or
testl
je
out
clc
mov
jb
je
pop
icebp
xor
sbb
cmpsb
mov
movd
or
add
xor
cmp
fstpt
call
mov
adc
in
fisttpl
mov
or
jp
mov
je
or
incl
cmp
add
jo
ret
push
push
je
and
or
test
xchg
les
jmp
jnp
cmp
mov
cli
std
test
sub
or
xlat
outsl
mov
jb
jmp
push
imul
sub
repnz
mov
and
ljmp
imul
mov
inc
jecxz
outsb
inc
je
jno
incl
je
imul
add
xor
push
mov
mov
ret
movsb
cmpl
dec
sbb
jbe
loopne
mov
or
pop
out
xor
adc
pop
sbb
sub
fildl
out
je
mov
out
lock
xor
ljmp
shlb
movsb
xor
cmp
push
in
loopne
mov
pop
jmp
push
xor
adc
jbe
call
jbe
cwtl
aad
push
pusha
test
or
xor
sub
pop
jg
inc
mov
enter
lea
add
pop
sub
push
sub
dec
jne
jne
pop
std
clc
je
jp
jne
lods
call
aaa
sbb
push
imull
mov
adc
cmc
add
jae
in
inc
mov
ret
unpcklps
mov
adc
sbb
clc
call
or
shl
xchg
sahf
mov
or
je
jl
outsb
inc
mov
mov
jl
xchg
cmp
rcrb
dec
push
push
push
add
adc
in
pop
lret
or
rclb
jl
sbb
insl
outsb
test
mov
paddd
pop
test
mov
call
jp
xor
sti
je
mov
or
add
shrb
repnz
or
fisubl
adc
mov
js
xchg
ljmp
movsb
or
adcb
out
call
jne
sbb
insl
fwait
sbb
repz
pop
push
pop
fcmovu
mov
push
stos
mov
adc
fnstsw
clc
xor
jmp
js
int3
cli
andb
mov
test
xor
sub
stos
push
push
rcrl
mov
orl
lret
subl
mov
sarb
rclb
add
xlat
sbb
jo
mov
cmp
repz
mov
mov
or
movl
aam
push
xlat
pop
in
pop
adc
push
sarl
lds
sahf
sbb
cli
push
push
incl
cs
scas
ljmp
add
orl
add
enter
das
clc
pop
je
push
fcoml
stc
mov
mov
push
mov
or
inc
or
pop
push
add
add
inc
and
in
add
and
or
cli
jmp
push
xchg
add
mov
orb
sub
or
mov
mov
and
push
jne
repnz
xchg
cmp
out
or
push
inc
mov
js
sti
mov
pop
add
push
push
xchg
add
loopne
ja
cmp
jp
je
adc
test
pop
test
shlb
pop
ret
call
lahf
stos
mov
insb
mov
mov
mov
fsubl
sar
lock
lea
jle
dec
xchg
add
roll
xchg
call
test
hlt
decb
ret
lcall
push
inc
in
push
push
notl
jl
or
pop
adc
mov
jbe
lret
and
aaa
data16
je
push
testb
fimull
adc
cmp
sub
mov
cmpsb
sbb
lock
incl
push
sbb
scas
push
mov
scas
call
aas
inc
les
add
insb
sbb
mov
add
or
outsb
or
inc
out
test
push
loop
xchg
data16
push
pop
imulb
faddl
std
shlb
jb
ljmp
les
add
push
xorb
adc
int
les
push
int3
jo
sbb
shrb
pop
mov
out
cmp
xor
inc
sub
or
rcll
sahf
mov
pop
lods
push
push
inc
pop
icebp
incb
fildl
push
test
je
shrl
aad
adc
or
mov
lret
add
lock
jno
fnsave
loopne
in
mov
aam
mov
jne
out
mov
shlb
add
inc
mov
dec
cmpsb
mov
lods
sub
nop
jbe
jo
or
rolb
inc
sbbb
rcrb
fisubl
cmp
push
inc
hlt
pop
add
outsl
mov
les
inc
mov
mov
pop
shrl
mov
insb
sahf
mov
pop
insb
mov
movsb
sbb
outsl
push
pop
jb
add
call
cmpsb
ret
push
pusha
jle
push
out
pop
mov
add
sti
and
mov
add
fistpll
or
insb
inc
push
test
push
call
add
add
sbb
adc
mov
mov
mov
add
lds
aas
mov
div
aaa
cmp
push
test
cmp
mov
and
inc
sbb
and
inc
xor
loopne
or
push
hlt
test
je
call
ljmp
sbb
stos
add
sbb
loopne
pop
scas
clc
mov
nop
pop
xor
jp
jne
inc
lea
popa
pop
mov
stos
push
push
fadds
movl
or
or
sub
adc
and
mov
mov
xor
jbe
lock
or
add
cld
outsl
adc
cmp
jbe
jge
lock
push
inc
outsb
ds
mov
jp
test
jg
aaa
cld
stos
cmp
add
push
push
mov
lret
pop
or
bound
pop
decl
lods
dec
cmp
lea
mov
mov
ljmp
andb
push
mov
fiaddl
sbb
cmp
xchg
add
cmp
add
movb
inc
or
pop
addl
sub
je
push
cltd
in
push
lods
int3
push
sbb
mov
jg
or
jmp
or
mov
mov
xor
mov
clc
mov
or
pop
or
mov
push
loopne
orl
or
mov
jbe
clc
mov
call
mov
push
or
imulb
je
jb
push
mov
call
js
cs
or
ss
scas
jl
pusha
mov
mov
add
jb
mov
ja
xorb
or
xor
adc
or
xchg
mov
mov
add
add
int3
mov
mov
or
xchg
inc
mov
push
sub
jg
jbe
pop
adc
loopne
and
adc
xor
loopne
je
pop
add
sub
test
pop
inc
pusha
insb
mov
inc
fistl
pop
popa
add
jb
add
aam
push
adc
cli
fldt
add
mov
dec
or
lea
loopne
mov
add
add
inc
in
inc
sbb
loopne
push
fs
fcomip
aaa
js
fistl
push
add
pusha
add
push
pusha
or
pop
andb
cmp
jmp
push
and
out
aaa
xsave
imul
and
das
push
fidivs
inc
and
scas
mov
xchg
je
pop
add
repz
in
lods
push
push
pop
dec
cmc
das
cld
push
and
push
call
ret
cmpsb
jmp
push
cmovne
cmp
mov
loopne
add
jb
hlt
mov
syscall
test
pusha
xchg
add
rcrb
push
add
lret
dec
cmpsb
incl
adc
call
push
sahf
jo
std
sub
xchg
add
ljmp
andl
daa
push
bound
loopne
mov
jbe
mov
test
stos
bound
cmp
mov
push
xor
hlt
scas
movb
xchg
repz
jmp
add
in
inc
adc
push
add
adc
push
push
sub
decl
adc
out
xor
mov
push
add
mov
jle
ljmp
or
mov
cmp
add
jno
jmp
mov
ljmp
inc
sub
pop
gs
jo
sti
notb
mov
pop
mov
jge
or
call
adc
pop
xor
scas
cli
mov
mov
cmp
in
ret
sbb
jl
and
adc
sbb
lods
cmp
push
push
test
mov
jne
testb
clc
rolb
sub
jg
xor
xor
inc
cmp
lock
xchg
in
jle
add
je
push
cmp
lea
jg
xor
add
std
ret
aad
aad
mov
adc
push
inc
add
inc
icebp
gs
test
mov
pop
rep
dec
lock
mov
and
into
dec
pop
cmc
pop
call
mov
sub
aaa
fwait
pop
aad
es
lock
push
add
pop
andl
test
xchg
jo
or
hlt
das
rcr
mov
nop
jo
and
lock
xchg
arpl
sahf
loopne
inc
sahf
je
push
inc
scas
call
pop
sub
scas
mov
push
out
mov
push
adc
ljmp
pop
pusha
ljmp
mov
daa
mov
sarb
das
mov
jl
mov
add
idivb
sti
je
add
pop
mov
loopne
faddl
xchg
add
out
dec
movsl
fs
stos
sub
daa
and
mov
dec
sub
xor
les
push
movb
mov
jecxz
divb
mov
mov
mov
xor
adc
movl
or
jge
sbb
jge
inc
imul
sbb
push
testb
clc
mov
in
lock
xor
and
sbb
inc
rolb
and
pop
push
lcall
outsb
inc
insb
iret
mov
jo
xor
jbe
sbb
mov
or
mov
loopne
sub
jb
add
decl
mov
push
sbb
jge
cmovb
push
lock
cmpl
add
push
jno
shrl
xor
add
sbb
mov
aam
add
ds
cmp
mov
fs
add
std
dec
pop
jo
xorb
mov
mov
addl
or
sub
inc
push
incl
fs
push
xchg
rorl
mov
jmp
xor
add
ret
gs
out
push
push
test
subb
stc
sbb
jo
cmp
add
data16
ret
push
loopne
sti
add
cmc
mov
aas
xchg
inc
or
shr
test
inc
pushl
dec
repz
sbb
push
and
popa
mov
shrb
xor
push
xchg
data16
cmp
jbe
xchg
sub
push
jb
cmc
jo
push
sti
fisttpl
push
test
mov
call
xchg
jecxz
push
adc
inc
cmp
ror
dec
lcall
cld
jo
jo
jl
inc
insl
scas
add
adc
cmp
jbe
addb
in
mov
jne
mov
jle
jae
mov
frstor
cmp
jle
loopne
fucom
ljmp
lock
push
mov
mov
icebp
push
sbb
mov
adcl
mov
loop
push
pop
add
mov
ret
and
fists
test
lcall
or
add
xor
mov
loopne
inc
add
add
mov
or
and
add
pop
lock
jg
scas
add
fyl2xp1
lock
cs
lock
roll
pusha
sbbb
cs
cmpb
loopne
icebp
push
sbb
inc
xorl
xor
xor
mov
mov
ja
sub
dec
mov
pop
and
push
insl
mov
jp
mov
xor
imul
addb
icebp
cltd
das
mov
xor
orb
js
xor
jmp
decl
add
mov
add
inc
mov
push
add
jl
add
dec
fstpt
jns
clc
scas
mov
dec
inc
jo
inc
jb
push
in
sub
xor
sbb
jp
popa
inc
push
sub
jb
pop
orb
mov
adc
pusha
addr16
fs
in
inc
mov
mov
sbb
sbb
icebp
push
std
sub
push
mov
loopne
pop
mov
ja
fadd
jo
in
test
add
cmp
xchg
jg
mov
xchg
pushl
add
cmpsb
or
xor
iret
mov
add
pop
push
lock
jno
push
sub
or
adc
cmp
pop
cmp
icebp
mov
rclb
icebp
test
cmp
clc
decl
adc
call
jno
push
push
test
dec
push
lods
add
aad
rclb
decl
jg
fbstp
add
ljmp
push
adc
mov
enter
bound
mov
cmp
divb
loope
jmp
test
out
aaa
cld
lods
loopne
inc
mov
inc
adc
cmp
inc
adc
lock
mov
cmpb
xor
dec
adc
dec
dec
icebp
or
adc
adc
push
clc
popf
inc
xchg
aam
and
inc
push
call
fildll
lcall
or
sub
sti
jg
mov
xor
push
repz
mov
adc
fists
jno
pop
fnstenv
xor
or
icebp
js
add
arpl
or
xor
cmp
out
pop
or
je
add
jo
jmp
or
or
filds
jl
adc
xchg
cmp
cmpsb
or
pushl
xor
add
scas
xchg
mov
mov
push
pop
pop
fisubl
aaa
add
adc
hlt
pop
or
add
add
xchg
je
mov
test
fimull
mov
insb
push
xor
adc
filds
or
inc
sbb
mov
push
test
sbb
outsb
xor
mov
pop
fdivl
shlb
mov
add
shl
pushf
jne
mov
lock
mov
ss
mov
or
das
mov
call
je
adc
adc
jmp
push
jae
mov
mov
sbb
push
pop
add
and
jo
mov
pusha
nop
pop
imul
mov
hlt
enter
sbb
or
sahf
inc
sub
fmuls
sbb
and
cmpsl
ljmp
outsb
jo
add
jl
clc
sbb
rorl
lret
divb
add
and
loopne
add
add
mov
dec
adc
push
cmp
or
dec
mov
add
add
adc
cmp
jecxz
cmc
add
je
mov
add
fidivs
pop
js
shr
or
lods
pop
jmp
jl
test
and
out
testb
or
sub
sti
mov
cmp
lea
call
mov
lds
outsb
js
mov
test
push
inc
adc
mov
sub
adc
loop
pop
dec
mov
inc
sub
xchg
mov
clc
out
cli
pusha
sub
mov
xchg
lock
add
out
add
sub
add
sarb
sarb
lock
and
enter
inc
adc
add
push
fcoml
adc
mov
pop
dec
testl
andb
or
scas
incb
out
mov
add
andl
rcr
cmp
jp
or
mov
jg
test
je
test
cmp
pop
loope
push
lock
test
adc
mov
add
pop
clc
call
sbb
jns
imull
aam
xchg
sbb
jge
call
test
cmpsl
jg
ljmp
pop
push
pop
inc
push
inc
test
subb
push
add
add
sbb
aaa
cmpsb
imul
add
push
addl
add
dec
adc
or
push
inc
fisttpl
or
xchg
add
inc
stos
aad
cli
pop
sbb
ret
inc
call
call
mov
outsl
add
add
cli
pop
mov
or
jne
cmpl
jne
bsr
scas
repnz
mov
adc
mov
add
jle
test
and
ljmp
or
ljmp
lods
add
add
je
mov
add
sub
pop
push
xchg
push
je
pushl
leave
rolb
stos
or
mov
sub
xchg
sbb
xor
push
dec
aaa
sar
sub
push
rclb
cmp
sub
and
ss
movsl
fidivrs
cld
xor
ret
jbe
dec
sbb
rolb
dec
fdivs
adc
xorl
outsb
and
pop
mov
lds
xor
ret
ret
int3
push
enter
jle
adc
lock
test
or
dec
add
call
jo
push
fs
bound
adc
push
cmp
push
push
mov
rorl
jbe
mov
repz
pop
neg
and
lods
or
jo
decl
sub
jmp
mov
mov
and
push
shlb
xchg
or
xor
fsubl
roll
add
fidivl
testl
xadd
into
out
cmpl
mov
mov
cld
aaa
add
push
mov
clc
aaa
test
pop
mov
and
add
xor
mov
sarb
jbe
add
stos
mov
mov
push
mov
add
insb
popf
inc
jl
jb
mov
loop
push
cmovns
movzbl
add
jmp
jg
dec
scas
les
push
xor
add
loopne
jae
cmp
cs
or
sub
dec
loope
out
dec
add
aas
or
jecxz
jle
in
xor
jmp
test
push
push
test
loopne
call
or
aas
jl
jmp
xor
mov
dec
mov
mov
ret
test
es
push
fsubr
add
or
mov
pusha
ss
or
mov
push
push
shlb
sar
sahf
inc
dec
mov
pop
cli
pusha
sub
pusha
inc
jl
mov
incb
jb
loopne
pop
inc
adc
movb
movl
sbb
inc
add
loopne
adc
mov
lock
fisubs
hlt
lods
mov
push
xchg
adc
ret
or
testb
push
in
mov
test
fdivr
mov
data16
int3
jb
clc
mov
call
cmp
fdiv
andb
add
push
push
push
popa
fwait
popf
jo
mov
int3
fsubs
add
inc
and
and
jo
jne
or
pusha
pop
push
scas
jne
mov
cld
subl
or
stos
test
es
cmp
decl
mov
or
cld
je
mov
sub
lcall
cmp
mov
adc
mov
mov
lcall
loopne
mov
pusha
sub
sub
aam
add
lea
ss
pop
std
decl
jb
les
inc
mov
cmp
int
loopne
movl
jl
inc
movsb
cmpsb
outsl
outsb
sbb
cld
pop
fcoms
loope
mov
ds
jge
and
testl
movsl
add
int3
mov
outsl
adc
cmp
stc
loopne
inc
mov
mov
outsb
or
jb
jecxz
add
loopne
mov
hlt
je
in
loop
or
pop
sub
arpl
pop
lret
fwait
inc
shr
js
push
push
subb
inc
and
inc
mov
pop
pop
adc
loop
inc
sbbb
int3
cs
pop
push
inc
ud2
mov
mov
outsb
sti
ja
lea
addl
lea
push
and
pop
cld
mov
and
jp
je
fisubl
pop
push
push
push
je
push
sub
and
xor
pop
cs
cmp
loopne
iret
jne
push
andb
jg
push
loopne
adc
add
loopne
or
icebp
jg
xor
adc
es
testl
decl
dec
sbb
andb
negl
lock
hlt
sarb
pusha
mov
ja
or
insb
pop
loopne
orb
decb
mov
cmpsl
sbb
outsl
push
and
bound
inc
sbb
mov
jmp
push
add
popf
pusha
sub
pop
lea
loopne
mov
pop
loopne
add
or
mov
fdivr
mov
ja
movl
les
test
inc
imul
imul
pusha
test
and
and
sbb
into
pusha
ja
xor
mov
xchg
cmp
pop
int3
loopne
fcomp
jg
sahf
je
data16
pop
and
push
lea
or
mov
pop
or
cltd
mov
inc
lock
and
pushl
cltd
shl
cltd
or
mov
mov
cmp
je
mov
or
mov
lods
aam
add
mov
ljmp
mov
xor
data16
push
or
ds
scas
nop
mov
cmp
mov
mov
mov
add
insb
mov
sub
das
mov
push
xor
push
push
lock
xor
inc
push
dec
pop
mov
adc
sbb
jne
mov
ljmp
add
jno
inc
decl
ljmp
cmp
inc
leave
push
xor
in
mov
das
mov
pop
jecxz
inc
jle
mov
cs
lock
lock
cmp
mov
push
mov
mov
inc
cmp
push
aas
or
inc
add
or
sub
push
jg
jge
push
push
call
pop
jo
repnz
adc
ret
xor
inc
movl
or
sbbb
dec
cmpsb
testb
pop
mov
pop
adc
jb
repz
test
sub
push
or
out
add
jae
jecxz
dec
jecxz
lret
jne
mov
jg
jmp
pop
lea
mov
jae
imul
decl
movzbl
xchg
add
adc
mov
scas
insl
ret
jg
add
aas
sub
mov
repnz
cld
imul
push
or
xor
push
nop
lock
cld
fcmovnu
mov
sub
xchg
repnz
push
sbb
adc
mov
mov
cli
aaa
insb
and
inc
lock
lea
push
push
dec
fistpl
pop
inc
fs
ret
sub
add
mov
inc
fists
push
test
add
pop
sbb
push
shrl
inc
push
push
ljmp
mov
pop
push
pop
ret
jo
cs
dec
in
out
out
or
jo
pop
add
int3
jle
cmp
pop
inc
inc
mov
mov
mov
inc
repz
push
push
je
scas
cli
sbb
xchg
jp
and
xor
pop
mov
xchg
add
pop
or
xor
pop
cmc
test
movsb
mov
mov
pushl
or
mov
and
add
add
call
nop
jo
jecxz
fcomip
and
sbb
pop
lea
fiadds
xor
adc
nop
dec
shrb
sub
out
or
cmp
fbstp
add
icebp
jne
jbe
adc
movsl
lock
inc
jbe
je
jl
test
call
mov
rorl
dec
jne
jno
xor
call
incl
hlt
rol
lock
shr
adc
xor
dec
push
icebp
push
add
sbb
call
inc
aam
mov
pop
cmp
mov
jo
rcr
in
sub
and
imul
sub
mov
add
pop
sbb
adc
test
hlt
push
fcoms
lock
xchg
mov
je
pop
inc
cmpb
cmp
test
aam
sub
mov
aam
call
incl
sbb
push
je
add
sbb
xor
xor
movsb
inc
jo
adc
and
lea
push
jecxz
mov
lods
jbe
adc
dec
lea
jg
mov
or
int3
test
mov
mov
jle
mov
cmp
mov
cmp
xor
add
pop
icebp
fwait
jo
push
cwtl
mov
jns
loope
or
inc
in
pop
enter
lret
aam
int3
idivb
jne
or
push
pop
pushl
push
call
jne
and
lock
cwtl
call
xor
jmp
into
add
and
pop
addb
pop
shlb
in
cmp
addb
lock
pop
fidivl
inc
call
push
das
mov
cmp
and
in
xchg
fldt
aam
mov
mov
jne
and
add
orb
jle
pushl
fiadds
adc
jge
cld
jge
cwtl
mov
mov
cmp
pushl
mov
push
lea
mov
or
out
mov
xor
icebp
incl
je
add
adc
inc
pushl
fiadds
and
jp
lock
adc
fbld
jo,pt
jb
jb
inc
fsubr
rorl
mov
and
insb
das
cli
inc
cli
or
fdivr
push
push
hlt
xchg
add
cmp
mov
pop
and
sub
jne
mov
call
stos
fiadds
daa
cld
lods
call
lock
push
pop
icebp
pop
xor
je
call
sub
xor
jg
cmpb
xor
call
mov
mov
icebp
jo
add
add
clc
add
mov
sub
pop
js
inc
inc
mov
js
jmp
xchg
mov
inc
arpl
push
inc
mov
or
dec
xor
sbb
and
loopne
and
call
sbb
or
or
repz
clc
mov
and
mov
add
adc
lea
call
es
jo
ret
xor
subl
les
enter
loope
test
mov
xor
outsb
and
mov
add
fs
out
insb
fsubp
mov
cmpsb
inc
jmp
adc
je
mov
lock
ret
mov
or
ror
mov
call
cmp
push
pop
call
or
and
call
jecxz
icebp
loop
je
jne
mov
push
imul
mov
aas
add
push
loopne
sbb
or
push
gs
aam
cld
sbb
xor
jl
rol
cmp
inc
push
jae
mov
adcl
test
add
push
dec
cmp
lods
push
jl
mov
jo
bsf
jbe
xor
xchg
addb
call
or
cmpb
mov
inc
jo
jne
jo
test
adc
pandn
adc
pop
and
scas
daa
orb
rcr
sub
add
adc
je
cmp
cmpsl
mov
mov
pusha
lock
jnp
lock
pushl
xor
mov
jb
mov
push
push
xor
divb
cmp
test
push
jo
mov
and
pusha
add
sbb
loopne
sub
push
lock
cmp
adc
push
lock
xorb
jo
fdivl
and
repnz
mov
pushl
or
andl
adcl
lock
jbe
and
sbb
or
lods
loop
lock
jmp
scas
push
push
add
sbb
sub
lcall
and
addb
sbb
mov
inc
out
mov
push
xor
lcall
js
ljmp
js
xor
call
lock
aas
xchg
call
divb
sbb
jg
add
pop
repz
test
adc
cmp
add
jp
mov
mov
jl
adc
xchg
and
cmp
lock
aas
in
mov
cmpl
clc
inc
sti
jl
subb
jmp
dec
adc
and
pop
and
je
jae
mov
dec
jmp
clc
xor
adc
sbb
ret
std
incl
das
push
stos
push
pop
pop
nop
cli
test
push
xor
cmp
sbb
inc
pop
mov
xor
pop
jle
mov
mov
cli
insb
inc
repnz
cmp
in
and
mov
std
sbb
push
xchg
mov
push
imul
sbb
hlt
add
xor
mov
stc
mov
pop
xchg
clc
pop
addb
sub
jbe
loopne
imul
push
call
outsl
cs
fsubl
inc
fsubl
aad
xor
adcb
in
enter
outsb
lcall
mov
jge
cmp
andl
cld
ss
dec
or
add
cmp
decl
lock
adc
adc
hlt
addl
sub
clc
repz
in
iret
aad
xchg
cmp
dec
add
mov
test
push
or
cmp
cmp
incb
rcll
test
dec
mov
add
imul
xor
fildl
mov
mov
outsl
fsubrp
pop
or
les
jne
test
xor
adc
jmp
push
cs
into
fmulp
mov
loop
jmp
cmp
fimuls
xlat
add
adc
or
inc
push
mov
je
inc
lods
mov
mov
jl
cli
mov
test
sub
push
adc
pop
lcall
int3
call
clc
mov
testl
mov
sub
cld
lock
andl
inc
mov
test
or
and
push
test
xor
bound
rclb
mov
jecxz
pop
shl
inc
add
pop
int
jmp
sbb
adc
dec
cld
stos
add
push
cwtl
fiadds
out
sub
lock
call
xorb
or
testl
lcall
aas
or
push
sub
xchg
and
stos
inc
pop
lock
loopne
mov
adc
std
mov
in
mov
xchg
outsb
mov
xor
inc
cltd
in
roll
push
jb
out
fdecstp
add
add
std
cs
or
pop
data16
ja
push
lods
popa
add
mov
jnp
test
ficomps
mov
mov
jl
adc
add
stc
clc
push
add
js
scas
adc
fsubs
dec
add
sahf
jo
mov
mov
test
test
add
test
out
div
dec
out
je
cmp
popl
repz
stc
pop
push
filds
in
aas
ret
push
jge
jne
lea
outsb
dec
lea
jmp
jbe
jb
jl
pop
call
xlat
aad
out
cmpsl
paddd
cli
add
cld
fs
sbb
jge
int
pusha
add
aas
and
cmpb
jb
inc
xor
mov
jecxz
rcll
push
add
call
jb
orl
pop
jecxz
fistps
mov
lea
scas
decl
mov
subb
in
jge
cs
out
lea
push
push
das
adcb
mov
sbb
add
mov
and
mov
jge
mov
test
sbb
pop
out
aaa
or
dec
sarb
aaa
push
call
push
and
add
jbe
daa
push
hlt
scas
subl
ja
movzwl
mov
inc
lea
mov
mov
mov
out
fadds
adc
mov
call
scas
push
jb
cmp
ja
testb
jne
sub
push
jae
adc
lea
imulb
inc
cli
ss
dec
sti
punpckhdq
mov
or
dec
call
cmp
rorl
in
xor
sub
scas
cmpsb
and
aas
inc
mov
pop
inc
jne
cmp
ret
jne
jb
mov
and
aam
push
lret
or
mov
scas
sub
lea
call
gs
mov
in
inc
imul
add
mov
ss
pop
sub
out
add
test
add
pop
add
jl
mov
push
dec
clc
add
mov
call
mov
scas
mov
pop
imul
inc
cmp
add
fmull
pop
fbstp
mov
push
decl
cmpsb
or
add
jo
out
int3
call
cs
xor
vmaxsd
in
cmp
pop
push
fbstp
jnp
sbb
dec
addl
cwtl
or
push
call
cltd
test
gs
mov
mov
into
cmp
add
int3
mov
test
add
repz
xor
mov
mov
add
adc
mov
icebp
mov
loope
xchg
inc
scas
fldz
push
or
outsb
xor
jle
imul
lods
movb
xor
clc
jbe
jge
push
nop
je
call
adc
lock
fimuls
cmp
mov
pop
push
xchg
add
das
push
outsb
fcomi
sub
jecxz
mov
mov
scas
mov
enter
cmp
and
or
call
inc
ficoms
adc
xlat
xor
cmp
mov
mov
jmp
pop
fs
int3
adc
pop
mov
pop
cmp
inc
add
and
push
loopne
xchg
sbb
inc
mov
or
cmp
add
pop
inc
adc
mov
data16
push
je
inc
or
addb
jne
mov
jecxz
inc
and
mov
daa
lea
jl
test
sbb
cmp
add
je
scas
cwtl
jecxz
mov
es
lods
cbtw
lock
xor
ds
push
mov
pop
mov
cmpb
or
mov
add
into
push
les
fdivrl
push
ret
loopne
jle
cmp
es
cwtl
leave
push
fmuls
add
xor
or
adc
mov
push
and
call
mov
adc
cmp
xlat
test
mov
mov
hlt
lcall
pop
xchg
and
lcall
lock
dec
insb
in
scas
xor
movsb
jl
lock
clc
data16
pop
adc
adc
stos
je
sbb
inc
int
fmul
xchg
mov
add
gs
add
push
mov
cmp
mov
fwait
loopne
adc
cmp
cli
sbb
stc
or
lea
dec
emms
xor
mov
jnp
adc
or
jae
mov
notb
add
pop
ss
add
jns
mov
sub
ja
cmpsl
add
or
in
jae
push
xchg
jo
jecxz
push
xchg
mov
dec
pop
ret
outsl
mov
sbb
in
pop
xchg
movsl
into
push
in
cmpsb
sub
jnp
popa
sti
mov
mov
mov
call
push
nop
sbb
or
gs
add
decb
clc
dec
cld
and
dec
ljmp
or
jnp
fwait
push
fcom
sub
lea
into
testb
pop
cltd
pop
sub
lods
data16
loop
shr
call
push
in
push
xchg
push
jo
mov
or
jo
add
enter
jmp
push
dec
clc
cmp
push
cmp
je
cmp
je
cmp
lcall
sti
xor
jmp
mov
jmp
mov
jmp
mov
jmp
mov
inc
je
sbb
xchg
mov
notl
scas
into
sbb
add
call
movsbl
call
mov
dec
fimuls
mov
mov
add
sub
cmpsl
add
cmp
jne
into
pop
repz
pushf
andb
test
mov
jno
sub
jns
xchg
testb
pop
je
pop
push
les
mov
call
incl
clc
add
shrl
lea
hlt
pop
sub
fimuls
xchg
insb
or
inc
fmuls
cmp
jle
loopne
insl
inc
in
clc
out
mov
int3
leave
mov
cmp
cs
movsb
pop
imul
mov
inc
iret
daa
xchg
data16
sbb
in
mov
clc
xor
xor
aas
mov
call
out
jmp
adc
push
or
mov
sub
lcall
jbe
xchg
push
lahf
insl
inc
xor
test
dec
cmp
clc
incb
test
clc
pop
test
vmwrite
mov
outsl
push
push
stos
adc
testb
shll
mov
push
or
pop
cmp
mov
sbb
fsubrs
mov
lcall
inc
mov
addb
out
xorl
mov
push
es
scas
sub
cmpsb
or
add
xor
or
out
dec
pop
mov
jl
and
rcrl
div
mov
addb
push
idivb
xor
jmp
testb
dec
icebp
jg
sbb
xchg
int3
xor
ss
out
adc
push
test
jge
pop
pop
xchg
mov
mov
jmp
or
adc
fmull
cmp
fldt
cmpsl
loopne
pop
cmovl
xchg
test
addb
outsb
jbe
push
lea
jg
es
cli
movb
xchg
cmp
jne
std
and
jb,pt
adc
and
imul
or
shlb
xchg
adc
dec
inc
aad
cmpsl
call
adc
push
cmp
add
mov
mov
pop
adc
mov
xchg
sbb
cmp
hlt
jno
inc
push
push
xchg
sub
adc
pop
loopne
inc
test
je
cmpw
jae
xchg
and
pushl
dec
adc
cmp
inc
jmp
push
inc
or
pusha
lds
lods
hlt
pop
test
push
push
ds
pushl
lea
push
push
or
pop
lds
jne
push
lea
or
push
lea
insb
jg
lea
dec
out
test
mov
inc
pop
or
sub
inc
rorb
add
inc
or
incb
inc
mov
push
push
clc
sbb
mov
leave
push
testb
jbe
adc
xchg
sub
sub
or
sub
and
lock
sbb
or
lcall
call
ja
dec
scas
into
into
push
call
es
je
sbb
jne
out
cmpl
stos
add
push
iret
add
dec
outsb
loopne
add
dec
lods
cmp
aas
clc
sbb
add
call
ficoms
add
insb
data16
sbb
mov
push
cli
iret
jb
psubd
push
cmpsl
xchg
sbb
mov
cmp
push
inc
dec
cmp
jbe
testb
imul
cli
xor
fsubrp
fisubl
lods
clc
pop
pop
ja
cld
mov
outsb
inc
mov
jae
js
adc
and
pop
aad
dec
push
add
je
pop
sti
sub
add
sbb
in
mov
pop
sub
addb
push
push
in
push
and
or
pop
jb
inc
sahf
push
ret
fbld
cmpsb
enter
add
lock
adc
jg
jne
jb
add
lahf
jecxz
imul
cld
jne
add
nop
jne
scas
dec
mov
sbb
ds
sti
cltd
loopne
jbe
sahf
daa
jmp
call
add
mov
xlat
cmp
sub
xchg
jbe
or
in
mov
decl
insb
inc
enter
int3
ds
rorl
or
jmp
jg
jbe
xor
push
ds
je
pop
mov
decl
bnd
je
cmp
lea
cmp
ja
data16
adc
sbb
lock
sub
inc
cmp
jae
pop
cmc
aas
push
dec
push
mov
sub
xchg
jbe
hlt
dec
push
add
shrl
add
sahf
add
or
or
in
xchg
pop
clc
add
add
mov
mov
test
push
test
hlt
outsb
lock
mov
fiadds
clc
push
pushf
add
xchg
rolb
push
dec
inc
cwtl
test
insl
mov
adc
stc
jne
imul
inc
mov
add
cmp
mov
cmp
mov
ja
js
faddl
mov
enter
add
adc
mov
pop
cltd
sbb
cld
enter
add
rolb
popa
je
cmp
add
mov
pop
and
dec
add
push
test
push
pop
push
out
add
mov
add
enter
push
div
push
jae
mov
add
inc
cmp
mov
mov
adc
jmp
add
mov
jo
loopne
jecxz
jle
mov
xor
pinsrw
test
xchg
test
cltd
mov
fcompl
or
jl
cmp
call
pusha
ret
sbb
cld
add
call
add
loop
cmp
cmpb
pop
or
pop
or
cmp
push
sub
orb
push
call
cmp
lock
hlt
xchg
subb
cld
jge
xor
ja
je
fdiv
stos
fiadds
push
mov
inc
iret
out
xorl
adc
ret
cs
adc
mov
out
xorl
add
mov
pop
add
sbb
addl
cmp
or
idiv
lcall
xorb
xchg
dec
add
rcll
fistps
add
in
add
mov
mull
sbb
addl
call
dec
fisttps
mov
fimuls
orb
jns
rclb
mov
mov
mov
js
add
in
das
adc
aam
push
xor
mov
mov
add
push
fbld
jp
test
incl
inc
mov
in
pop
mov
add
je
add
jl
test
movsl
push
sub
mov
add
imul
ficoml
out
sbb
push
mov
in
sub
jmp
call
loope
push
test
mov
sub
mov
or
sarb
adc
mov
jbe
orb
adc
mov
cmpsb
inc
add
rolb
push
pop
add
leave
add
cmp
dec
ret
mov
inc
rolb
pop
adc
and
rorb
test
push
insl
push
and
mov
jmp
push
fisttps
ret
mov
mov
test
add
hlt
lahf
js
test
add
mov
mov
mov
mov
pop
cld
pop
ja
ret
fidivrs
sub
mov
lock
call
adc
shlb
cld
mov
mov
pop
mov
add
daa
add
fwait
xchg
jo
or
pop
mov
mov
mov
call
orb
push
mov
hlt
sbb
mull
mov
rolb
lods
jbe
jbe
mov
sbb
sahf
and
add
ficomps
or
imul
or
add
sub
add
scas
dec
bound
hlt
test
pop
ret
fiaddl
cmp
fsubrs
push
xor
push
ret
test
inc
pop
add
push
xor
out
repz
cmp
out
sbb
into
mov
cwtl
mov
rcrb
pop
std
in
cmpsb
mov
cmp
push
jg
mov
add
pop
and
addb
hlt
add
mov
data16
js
mov
aaa
test
test
movsbl
test
add
push
lods
push
push
shlb
xchg
and
cli
dec
faddp
sbb
addb
addr16
pusha
xchg
dec
push
push
or
testl
and
pushf
sub
int3
xchg
mov
and
mov
cmpb
fwait
je
add
dec
add
leave
jo
js
cmp
test
test
add
aam
sahf
mov
or
mov
cmp
push
inc
adc
ret
sub
pusha
bound
jg
xor
call
xchg
xor
pusha
mov
dec
or
adc
es
fwait
xchg
dec
cmpsl
call
popf
rolb
add
or
add
bound
dec
insb
xor
mov
push
inc
repz
cli
pop
test
push
and
pop
sub
mov
loopne
and
lds
loop
jo
rorl
loope
ret
xor
inc
jl
outsl
adc
cmovp
xor
ret
add
cmpsb
lock
or
out
push
mov
inc
cwtl
outsb
ret
push
in
and
mov
push
pop
jp
das
jmp
popl
sub
loope
loopne
dec
pusha
pop
pusha
addr16
or
or
push
pop
cld
outsl
jp
pusha
xor
jge
jbe
pop
adc
or
cld
xchg
cmpb
jb
loopne
loopne
sbb
xor
loopne
pusha
push
sbb
inc
mov
cmpsb
adc
and
subb
cld
mov
xor
call
popa
aas
out
fcoml
incl
mov
in
mov
fistps
outsb
add
sub
pop
sbb
mov
sub
jp
test
aaa
adc
fucomip
pop
push
push
daa
mov
add
call
mov
inc
and
push
pop
loopne
jp
js
adc
xor
cmp
sub
cmp
orb
mov
add
dec
mov
and
inc
clc
jb
mov
xlat
jl
jbe
pusha
pavgb
fisttps
popa
sub
incb
xor
pop
xchg
dec
adc
sti
jne
add
sbbb
sub
adc
idiv
jno
incl
sbb
mov
inc
add
and
push
shlb
scas
push
push
push
jmp
jae
mov
add
test
sub
sbb
rclb
dec
add
leave
inc
push
or
or
outsl
jg
repnz
or
lret
push
adc
into
pop
jae
in
mov
mov
pusha
add
out
jne
dec
dec
add
push
xchg
mov
insb
shlb
inc
les
lret
add
pop
dec
clc
addl
mov
in
les
cmp
push
jne
push
or
btc
sbb
or
xchg
rolb
jb
fstpt
ret
je
gs
or
or
and
outsb
popa
enter
lods
fldt
or
mov
pop
push
xchg
pop
add
pusha
mov
push
cli
test
fists
call
cmp
std
inc
sub
das
push
jno
add
lods
pusha
dec
ljmp
mov
loope
xor
adc
jns
inc
jne
shl
movsb
adc
loope
and
push
bound
cmpsb
inc
xor
pop
xor
mov
fdivrl
mov
or
dec
jb
je
movsb
mov
xor
inc
fdiv
jne
xor
jge
test
ljmp
jbe
shlb
mov
lock
jb
mov
std
add
mov
movl
aam
add
icebp
jg
add
sbb
and
or
vmwrite
cmp
mov
pusha
inc
sti
inc
mov
sarb
clc
sbb
mov
jbe
je
xor
repz
clc
lea
pusha
vsqrtss
mov
jb
cmp
sub
mov
add
add
adc
xor
dec
xor
pop
xor
push
aam
xor
mov
pop
pop
jecxz
push
sub
sar
xchg
nop
add
adc
pop
cmp
xor
jne
incl
aaa
mov
int3
lods
push
sbb
in
jne
pop
push
add
scas
push
add
inc
js
add
add
inc
ficoml
andb
xor
lea
fnstenvs
push
pop
mov
loopne
mov
pop
je
push
pop
incl
inc
in
mov
xchg
incl
pushl
dec
jb
sti
add
push
call
stos
xchg
add
adc
decb
insb
outsl
jo
call
mov
push
and
and
clc
jne
hlt
call
or
lcall
or
push
push
sti
xchg
pop
and
sbb
nop
mov
jne
cmpsb
xchg
lock
test
xor
pop
inc
add
cmc
lea
clc
jmp
orb
cli
inc
xor
dec
and
clc
mov
stos
inc
das
dec
and
cmp
nop
xchg
push
or
dec
add
sbb
fbld
adc
mov
or
int3
mov
call
jecxz
lock
jg
sub
cmpb
test
or
push
leave
jmp
lea
cmpsb
mov
jnp
cmp
jne
in
cli
imul
mov
adc
cli
cmp
mov
jp
icebp
pop
dec
mov
shrb
je
xor
dec
or
leave
or
daa
inc
icebp
testb
jg
mov
cmpb
jl
incl
lds
push
push
lret
add
jb
in
clc
adcl
mov
fdivp
mov
cmovs
push
adc
mov
mov
je
call
mov
out
data16
ss
xchg
add
decl
lcall
jbe
mov
mov
dec
add
sarl
or
mov
sbb
add
xor
addb
out
vcvtps2pd
rorb
dec
add
mov
cld
mov
scas
clc
insl
mov
out
imul
sub
jo
push
sbb
jne
subb
pop
aas
fs
cmpb
add
rolb
lods
lea
cld
in
add
add
ror
adc
insb
add
mov
sbb
mov
add
mov
mov
stos
adc
pop
fistl
call
xor
add
pop
sub
add
pop
pop
scas
mov
call
or
mov
add
xor
mov
add
push
sub
add
mov
out
jmp
lret
adc
insb
call
lock
lods
test
jo
push
xchg
pop
pop
loopne
jg
aaa
call
or
addl
add
lea
pop
jmp
and
orb
push
outsl
cmp
popf
xchg
xchg
rdpmc
fcmovnb
mov
mov
fldt
mov
call
mov
mov
push
lods
add
xor
jne
js
jl
jnp
mov
icebp
adc
ds
in
jp
lock
popf
push
pop
test
dec
push
push
pop
mov
jg
or
or
mov
mov
mov
jbe
and
sbb
mov
fldcw
xor
adc
push
sbb
dec
and
sbb
xor
and
dec
sub
sub
xchg
addb
pusha
cmpsl
adc
mov
mov
mov
pop
xor
test
mov
cld
xor
arpl
sub
lcall
and
dec
xchg
inc
pop
inc
sbb
inc
and
dec
in
fisttps
dec
repnz
jb
dec
stos
sub
hlt
push
push
icebp
add
pop
sub
clc
incl
xor
cld
lock
xchg
adc
stos
mov
jnp
sbb
mov
call
test
pop
mov
add
repz
jl
sub
or
rclb
mov
push
xchg
jecxz
fisttps
inc
adc
dec
cmp
cmp
add
movaps
mov
dec
or
bound
jo
pop
mov
and
add
add
ja
pop
loopne
push
mov
lock
mov
dec
adc
xor
cmpsb
push
cmp
loopne
popa
push
and
fdivrp
inc
cmp
popf
sbbb
adc
xor
shr
ja
add
fdivrs
pshufw
je
push
sub
jg
push
pusha
pop
push
shl
and
push
push
fs
sub
and
adc
call
in
mov
jg
cmp
mov
add
add
sub
pop
int
adc
test
icebp
add
lock
add
sarb
push
jp
mov
daa
mov
ljmp
mov
lock
call
add
and
adc
dec
adc
mov
lcall
and
mov
movb
add
inc
adc
add
shlb
mov
xor
sbb
push
cltd
addl
mov
stos
cltd
push
adc
sar
xor
int3
adc
pusha
imul
and
jbe
push
mov
cmpsb
ljmp
mov
add
mov
sti
call
shlb
push
aam
xor
pusha
or
scas
icebp
ss
mov
je
aas
lods
aaa
add
add
or
push
add
add
lea
jecxz
loopne
pushl
xchg
ds
call
divl
push
test
pop
add
cld
xor
in
add
hlt
lea
cmpsl
mov
xlat
repnz
andl
testb
mov
out
add
hlt
mov
push
jp
jo
fmull
jle
test
dec
xor
cwtl
xor
jmp
inc
mov
jb
dec
sbb
mov
fdivrl
shlb
orb
std
push
inc
adc
cld
xor
decl
xor
xor
adc
add
shrb
xorl
addr16
fwait
ds
loopne
mov
dec
cmp
or
inc
movsb
xchg
push
jb
dec
test
fs
mov
nop
jmp
add
loop
push
inc
inc
push
arpl
jmp
ja
push
push
mov
pop
ret
jmp
add
push
inc
clc
cmp
add
add
push
je
inc
cmpb
inc
adc
dec
push
sbb
xchg
sub
call
dec
into
and
add
adc
fwait
or
push
dec
ja
add
call
movsl
cmp
add
push
xchg
jp
push
push
arpl
push
pop
xor
inc
pop
mov
inc
jmp
fwait
or
push
pushf
push
mov
dec
out
add
aas
ficomps
add
fsubrs
xorb
pop
push
or
cmp
adc
int
jo
push
sbb
pop
dec
push
pop
int
fs
sbb
mov
add
test
jne
dec
dec
cwtl
orl
sbb
and
push
das
cmp
push
mov
ret
sbb
cli
add
or
ljmp
mov
je
testl
xlat
outsl
xchg
jmp
rcrb
mov
insb
andb
jmp
adc
inc
mov
rcll
orb
ja
sbb
lea
fiadds
xchg
push
xchg
nop
sbb
leave
mov
repz
sub
popa
adc
iret
mov
ret
loopne
push
dec
lock
je
std
push
ljmp
and
gs
cmp
andb
int
icebp
cmp
bound
xorb
arpl
mov
nop
cmp
add
lods
adc
fisttpl
sbb
iret
push
andl
jb
add
mov
sbb
mov
call
shll
in
cmp
paddsb
add
or
inc
call
dec
dec
or
repnz
inc
outsl
rclb
mov
push
lds
mov
inc
push
cmp
mov
pusha
cld
int
jne
call
imul
lock
mov
jp
je
jb
ss
lods
pop
sbb
rol
into
sub
ss
mov
sbb
or
les
jne
or
inc
std
cmp
je
adc
icebp
add
cmp
shrl
add
mov
test
pop
mov
and
adc
adc
add
rcl
cwtl
adc
add
shl
add
adc
dec
clc
aaa
dec
mov
xadd
mov
jmp
sub
aaa
lods
call
fcoms
arpl
mov
jp
or
pushf
fcoms
addb
jbe
dec
push
xor
outsb
or
adc
enter
adc
add
xor
cmpsb
mov
pop
push
push
lea
add
dec
adc
inc
rolb
mov
add
shl
add
test
xor
lcall
int3
add
pusha
roll
lock
inc
adc
mov
sub
lcall
add
dec
jecxz
fwait
sub
xchg
or
add
add
mov
call
test
leave
mov
jg
sub
pusha
lahf
ljmp
push
dec
jg
and
call
sbb
mov
add
call
inc
je
rclb
iret
jge
test
rclb
test
or
push
aaa
pusha
divps
int3
mov
adc
aam
cmp
fwait
pop
je
lea
mov
jo
mov
add
cmp
sub
loopne
aas
or
adc
pusha
or
jb
clc
inc
add
cltd
aam
sar
pop
imul
cwtl
xlat
jae
add
jo
jmp
loopne
mov
into
sbb
mov
xchg
pop
decl
insl
aas
lods
add
out
cmp
and
xchg
shlb
loopne
rorb
lcall
push
sbb
aas
cmp
nop
mov
lretw
push
jb
mov
or
cmp
into
call
sti
out
das
ljmp
loopne
je
and
rcrl
or
add
inc
or
adc
sub
inc
out
xorb
out
xor
pop
jo
or
loope,pt
data16
push
jo
hlt
enter
mov
fucomip
cmp
xchg
lea
pusha
jb
or
xchg
xchg
lea
inc
sti
lea
enter
adc
fcomps
mov
mov
xor
mov
sub
into
inc
nop
ss
outsl
jbe
dec
shlb
mov
testb
or
cld
loopne
or
sarb
push
jle
icebp
jg
mov
testl
or
push
cld
push
enter
pusha
add
xorb
mov
les
mov
cmp
jb
xorl
ret
mov
push
add
lea
push
mov
and
std
jg
call
rolb
loopne
mov
add
or
mov
hlt
jmp
mov
lock
loopne
add
mov
xchg
leave
sbb
add
shl
mov
inc
int3
pop
ret
add
dec
ret
mov
ss
add
inc
divb
sub
xor
std
sbb
push
call
adc
or
ljmp
mov
jle
mov
cmc
sbb
scas
and
pop
and
mov
pop
pusha
jle
mov
adc
inc
aam
mov
pop
inc
fdivl
shrb
outsl
cmpsb
cmpl
or
mov
scas
cli
jne
inc
pop
leave
iret
lea
aaa
int3
add
outsl
xchg
out
insl
in
inc
sar
imul
add
aam
std
pop
pop
mov
mov
cld
fisubrs
pop
cmp
and
rclb
sbb
jb
or
add
mov
mov
movb
mov
testb
add
out
mov
std
popf
xor
and
mov
push
add
or
je
mov
sub
pop
sub
inc
out
call
or
imul
cs
loope
mov
call
sub
test
xchg
push
test
aaa
mov
ret
dec
cli
test
loope
add
cmp
pushl
int3
in
pushl
mov
das
call
ja
call
and
call
lret
bound
mov
inc
lds
ss
or
push
fcomps
outsb
mov
add
outsb
lock
mov
mov
nop
je
je
loope
ret
hlt
ljmp
adc
imul
or
mov
js
jne
js
je
test
and
ljmp
mov
and
cmp
in
push
mov
imul
pop
call
fidivrl
inc
pop
movsb
ret
push
dec
sub
add
lods
push
xchg
xor
add
xor
add
fwait
sti
jg
loopne
jb
scas
push
loopne
mov
adc
dec
lds
ss
pusha
pop
add
jp
sub
mov
jb
fs
neg
jg
data16
je
lea
nop
xor
xor
stc
xor
loopne,pt
jne
call
test
lock
test
leave
fs
ljmp
add
adc
mov
enter
mov
mov
pop
sbbl
unpcklps
push
jl
or
call
inc
stos
enter
jo
pop
popa
test
fsubr
jle
cli
sbbb
aad
lock
jo
into
jb
inc
mov
je
add
push
sub
xchg
addl
add
std
pushl
add
std
jo
xor
push
xchg
sbb
dec
inc
iret
xor
push
pop
cs
loopne
incl
data16
dec
insb
jo
je
data16
cmp
mov
pop
pop
sarb
icebp
lea
aas
add
iret
mov
and
loopne
mov
stos
shlb
in
inc
insb
es
cmpsb
insl
mov
je
sbb
sub
or
lods
ljmp
jo
test
rclb
xor
jb
and
mov
mov
sbb
push
aam
incl
mov
add
pop
add
and
xchg
jae
jmp
push
mov
inc
xorb
push
push
push
pop
nop
mov
mov
dec
adc
xor
adc
push
incw
mov
pop
int
call
push
je
les
cmp
inc
pop
push
mov
push
mov
test
lock
xor
jge
sub
aaa
lcall
test
mov
add
jo
xchg
jl
or
clc
push
test
mov
ljmp
add
fwait
dec
stos
pop
mov
push
push
and
add
add
loope
and
jne
xchg
cld
xor
call
add
das
clc
add
xor
add
inc
incl
or
cltd
mov
ljmp
jmp
ljmp
aas
mov
xor
inc
xor
cmp
jle
cmp
cmpsl
mov
in
js
inc
in
mov
lea
scas
call
imul
xlat
mov
xchg
ret
mov
jnp
ja
jle
add
mov
fcoms
ja
mov
mov
je
push
lea
int3
addb
lock
push
hlt
add
and
jmp
daa
shl
lahf
ret
call
and
xor
adc
fildl
xchg
call
int3
pop
flds
cli
pop
lock
add
cmp
mov
push
jbe
mov
xor
aam
cmp
jp
int3
mov
lock
mov
test
jmp
fmull
out
ja
lock
mov
pop
jbe
lods
inc
xor
call
cmp
ret
lret
adc
push
mov
nop
xor
mov
jno
nop
push
in
lods
lret
xor
push
sub
dec
push
addl
inc
sub
inc
push
xor
inc
cmp
loopne
push
add
add
sbbb
sbb
pop
mov
pop
cmp
add
inc
sub
push
ja
adc
incl
mov
adc
in
xchg
and
in
fwait
mov
lret
sub
aad
mov
loopne
jge
loopne
incb
adcb
mov
xor
clc
mov
xor
mov
roll
test
jo
in
inc
roll
cs
xchg
jo
mov
enter
sahf
scas
cmpsb
jo
jl
jo
jo
pushf
pop
xchg
das
add
test
mov
fyl2x
add
inc
int3
stos
inc
bound
lock
test
lods
std
mov
xor
add
ret
add
mov
scas
add
icebp
lcall
data16
test
xchg
imul
inc
out
test
mov
inc
add
mov
or
clc
mov
sbb
ret
or
scas
mov
scas
fsubl
in
outsb
sub
mov
rcr
stos
ljmp
scas
stos
in
test
test
add
mov
pop
inc
ret
or
jo
je
call
push
mov
inc
adcb
mov
mov
dec
out
sbb
pop
ss
xor
push
mov
xchg
call
fsubrl
jb
call
jne
xchg
sub
jbe
or
int3
jnp
cltd
lea
outsl
sub
and
cli
call
inc
testl
fs
or
lock
pusha
movsl
jle
dec
loope
add
push
pop
pop
je
jbe
lret
lds
incb
push
mov
xor
mov
test
inc
test
data16
add
fwait
cmp
or
dec
or
pop
je
pop
pop
push
and
push
push
cmp
jl
enter
pop
pop
fbld
and
xchg
and
mov
and
adc
mov
push
call
jp
jae
bound
mov
cmp
repz
sti
jo
mov
inc
loop
in
outsb
push
push
icebp
imul
setbe
push
sub
fwait
xor
movsb
in
shlb
dec
mov
test
dec
dec
fbstp
jno
lcall
mov
inc
xchg
mov
fbstp
addl
ja
mov
mov
or
inc
sub
xor
lock
inc
push
xor
inc
out
push
add
jno
fdiv
das
xchg
lock
sub
jbe
int3
inc
xor
std
add
xor
push
out
lock
aas
adc
arpl
les
xor
test
add
mov
nop
inc
sti
jmp
and
xor
fistl
incl
adc
cmp
je
sbb
int3
ret
mov
shl
stos
push
fs
sarb
lods
repnz
fnstcw
mov
cmpsb
xor
outsb
or
movl
add
push
clc
das
push
mov
jo
adc
adc
cld
mov
pop
repnz
cwtl
add
fcoms
aam
or
lock
incl
cwtl
cmp
lea
adc
or
push
call
fisubrs
leave
sub
sub
pusha
push
sub
inc
adc
or
add
push
test
dec
pop
shrb
or
push
mov
adc
jo
jno
or
pop
adc
iret
or
int
movsb
sub
and
jno
pop
and
pop
fidivl
adcl
andl
jnp
mov
shlb
std
sbb
cmpsb
xor
lock
mov
jae
movsb
and
daa
les
inc
push
inc
lret
lcall
test
add
les
adc
or
xor
insb
push
mov
cmp
call
dec
pop
je
mov
sahf
lods
push
mov
or
or
outsb
mov
jp
xorb
or
mov
shr
mov
ret
sub
popf
movsb
mov
push
add
jo
dec
lock
push
push
add
fsubr
adc
ret
movsb
ret
sahf
xchg
push
cmp
outsl
pop
icebp
cmp
andl
jo
dec
inc
pop
add
xchg
ja
cmp
ret
js
dec
js
mov
push
cmpb
pop
movsb
js
or
jmp
push
and
jl
adc
pop
mov
mov
inc
add
lea
ss
sub
jo
cmp
or
sub
add
subb
xchg
aam
sbb
lea
xorl
add
ljmp
sub
xchg
mov
adcl
mov
xchg
push
push
aam
pop
loope
dec
cwtl
cmpb
sub
add
inc
and
push
fwait
and
scas
lcall
in
push
and
nop
out
test
push
movsb
xor
leave
cmp
or
fucomi
outsb
ret
aad
mov
jl
sub
mov
mov
push
adc
xor
aam
push
test
or
bound
or
push
push
fists
fcompl
movsb
outsb
cmp
repz
ja
scas
add
int3
mov
stc
outsl
fnstsw
test
jbe
call
and
and
inc
push
fwait
push
xor
jb
or
inc
jno
push
orb
cmp
and
sti
add
call
insl
push
je
jb
pusha
mov
je
pusha
scas
mov
aaa
add
lock
sub
xor
ret
mov
jo
pushf
ss
adc
mov
add
jmp
dec
push
inc
push
jecxz
mov
ret
push
sarb
pop
push
and
mov
add
call
pop
mov
mov
into
mov
and
cmp
sbb
push
rcrb
and
add
mov
lea
mov
aaa
add
add
add
rclb
and
add
scas
push
andl
test
roll
jno
dec
call
les
fists
call
je
sarb
add
rolb
pop
mov
push
adc
sbb
pushl
in
pop
out
addl
shlb
cmpb
jne
les
lcall
sub
je
iret
add
jl
push
clc
sarb
rorb
push
ja
push
pop
enter
cmp
dec
out
call
adc
push
jb
aam
xchg
jae
jg
adc
add
xchg
ret
rorb
aam
push
stos
add
insl
xor
cmp
scas
sbb
push
push
xchg
sbb
outsb
mov
push
or
insb
and
test
adc
rol
in
pop
icebp
outsl
pop
and
jne
call
jo
dec
xchg
mov
loopne
xchg
mov
insl
clc
call
dec
cmp
aas
mov
fs
roll
add
add
xchg
outsl
pop
orb
cld
mov
clc
outsl
add
add
or
inc
repz
test
mov
clc
jmp
orb
fstpt
test
test
fistpll
or
push
fdivl
inc
cld
push
test
push
repz
out
popf
dec
pop
xchg
add
cld
pusha
hlt
inc
ljmp
pop
or
fwait
push
ud0
jmp
or
loopne
mov
pop
sarl
mov
int3
xor
inc
sbb
or
orb
fadds
dec
push
scas
lea
scas
pop
scas
mov
inc
out
or
dec
or
pop
inc
sub
push
add
or
popa
add
lret
das
jo
call
mov
inc
clc
testl
pusha
cmp
ret
inc
add
loopne
jecxz
clc
dec
push
js
cmpl
call
daa
hlt
fldl
or
loope
in
xor
test
push
mov
js
adc
xor
jp
push
mov
jl,pt
cs
push
mov
pop
or
sarl
adc
push
or
outsl
mov
sbb
pop
punpcklbw
je
rorb
fcomp
je
cs
xchg
cmp
pusha
xor
fs
call
sbb
imul
lcall
mov
shll
dec
loopne
jl
mov
fwait
js
jmp
fneni(8087
add
push
dec
mov
add
add
call
ror
jg
mov
push
push
push
je
jno
mov
jb
decb
sbb
jne
push
lea
push
pop
add
in
inc
inc
aaa
and
aaa
or
inc
cwtl
je
add
ss
decl
adc
idiv
subl
pop
pop
loopne
mov
inc
cmpl
and
lock
and
push
push
and
push
cmp
call
mov
xchg
enter
adc
jg
adc
inc
sbb
push
inc
enter
cmp
mov
or
jg
loopne
inc
sti
mov
andb
or
cmpsb
int
loop
mov
jmp
push
adc
adc
cmp
addb
mov
pusha
push
repnz
cs
shrb
jg
out
mov
loopne
sbb
pop
dec
stc
popa
es
push
add
xchg
mov
cmp
dec
push
lods
call
call
mov
clc
loop
aad
xchg
sbb
jo
add
js
push
push
js
loop
xorb
call
in
loope
fsub
lahf
pop
in
call
pop
lock
test
jbe
push
rolb
testb
je
pusha
jno
std
cld
popa
adc
add
inc
movsl
ja
add
cwtl
test
cli
hlt
fwait
xor
mov
pop
out
xor
push
pushl
ret
pusha
inc
sub
call
dec
and
mov
bound
add
mov
jl,pn
andb
mov
out
lcall
std
inc
pushf
push
scas
call
push
popa
sbb
call
jne
popa
pop
mov
sbb
js
mov
pop
xchg
add
outsl
mov
add
loopne
test
rolb
andb
jbe
push
push
add
decl
sbb
pusha
mov
shlb
sbb
leave
aaa
cld
incl
into
call
xchg
pusha
sbb
fldenv
mov
fs
jbe
push
loopne
lea
rolb
sahf
pop
cltd
and
jge
mov
or
jp
ss
cwtl
sub
in
mov
stos
mov
pop
add
push
and
cld
jnp
add
pop
imul
sbb
or
mov
dec
iret
mov
clc
incl
jb
sbbb
je
call
pop
jno
mov
add
mov
lock
mov
mov
test
fistpll
jno
xchg
inc
mov
sbb
adc
clc
add
or
xor
dec
sbb
jns
mov
nop
test
ja
add
arpl
rcrl
jne
dec
add
clc
subl
loopne
mov
mov
sub
hlt
jo
mov
lret
and
insl
js
icebp
in
cmp
jge
mov
jg
mov
inc
hlt
add
xchg
push
int
jbe
cmp
and
sub
dec
inc
and
mov
lock
call
xchg
es
fs
jg
dec
xchg
das
call
jne
cmp
sahf
gs
popa
push
xchg
mov
adc
mov
adc
cmpsb
or
xchg
dec
dec
add
js
jbe
sar
std
sub
movb
or
jo
jbe
js
adc
mov
add
adc
packssdw
sub
in
xor
mov
adc
es
jmp
sbb
xchg
mov
xchg
jae
mov
cmp
cmp
push
cmp
adc
mov
sbb
nop
es
dec
sbb
mov
sahf
and
xor
mov
je
push
stos
push
shlb
mov
mov
and
add
movsb
sub
xor
push
push
lock
sahf
push
mov
jno
mov
push
inc
pop
stos
mov
mov
leave
jmp
xor
mov
mov
fdivr
adc
cmpsb
pop
jmp
stc
cmp
cmp
sbb
fs
mov
push
call
adc
pop
cwtl
mov
pushl
cmpsl
pusha
decl
xor
inc
jecxz
add
xchg
inc
shlb
jle
push
icebp
scas
and
push
cmp
adc
incl
sub
fdivrs
add
adc
xchg
add
fwait
mov
cmp
add
mov
outsl
sbb
or
test
or
or
stc
or
clc
mov
inc
jb
pop
pop
je
pop
ret
xor
mov
daa
stos
xchg
and
push
cmp
adc
xor
dec
es
dec
add
icebp
inc
jge
mov
push
mov
je
push
xor
cmp
repz
mov
push
jo
pop
loope
clc
push
adc
ljmp
divb
xor
pop
jbe
pop
pop
jbe
fistl
xor
lock
mov
sub
mov
mov
jno
iret
aam
popa
jo
mov
in
lock
add
mov
add
or
xor
add
xchg
cmpsb
adc
pop
mov
xlat
adc
adcl
cmp
sub
cmp
and
jo
mov
adc
adc
rcrb
sub
mov
adc
jnp
or
xor
jmp
adc
push
pop
mov
fsubrp
cmp
jmp
mov
add
adc
xchg
mov
popl
jge
add
lods
push
pushf
ficoml
jo
ja
adcl
cld
js
aas
add
cmpsb
jl
in
loop
or
dec
xchg
mov
clc
call
xor
pop
dec
mov
or
lret
mov
xor
dec
push
add
jg
jo
mov
or
add
mov
mov
loopne
or
cld
add
iret
jbe
push
inc
fisubrl
dec
test
or
mov
out
push
xor
xor
jo
xchg
jmp
cmp
jo
dec
call
lret
inc
jg
jo
inc
repz
rcrb
push
adc
pop
inc
fists
jns
pushf
loopne
mov
pop
dec
incb
in
dec
ret
mov
push
or
sub
xor
call
mov
decl
loopne
fistpl
pop
call
movl
inc
add
mov
fimull
pop
cmpsl
call
inc
jo
sub
push
call
imul
add
lock
jl
mov
mov
jl
ljmp
stos
sbb
sub
or
jl
dec
rol
sub
scas
adc
add
jno
mov
add
mov
mov
fcoml
sbb
xchg
sti
repz
xor
pushf
out
push
inc
jl
dec
and
clc
adc
mov
pop
repz
sbb
out
sub
pop
cmp
call
cli
and
clc
or
or
pop
mov
andl
mov
pop
and
cld
xor
sbb
jg
loopne
std
xor
sahf
jo
add
jg
cld
jl
mov
in
mov
mov
mov
jmp
imul
stos
sub
jle
call
xor
sub
cmp
or
inc
testb
lret
sti
pop
xchg
out
pusha
xchg
imul
jb
hlt
jg
enter
jg
loop
ss
pop
mov
out
scas
adc
xor
cli
notb
mov
inc
cmp
clc
inc
xor
or
jns
cmp
push
pop
add
clc
push
inc
data16
sbbl
int3
in
sub
ss
test
je
in
push
sub
push
mov
pop
jmp
sub
incl
int3
imul
adc
test
in
imul
lock
mov
jne
fwait
jmp
xorl
test
add
adc
fidivs
pop
ret
xor
call
negl
idivb
stc
mov
ljmp
mov
pop
and
mov
push
shl
xor
push
add
add
ja
mov
call
push
push
pop
sbb
and
clc
and
cld
adc
fnsave
je
into
dec
or
das
adc
xor
test
inc
ficomps
jo
push
xchg
inc
aaa
andl
push
mov
lcall
dec
pop
ret
or
rorl
push
xchg
pusha
mov
mov
adc
adc
insl
mov
mov
jnp
imul
jae
pushf
je
call
push
pop
add
test
push
inc
bound
mov
adc
popf
jb
pop
mov
fcomps
sbb
scas
je
and
fdivs
or
push
inc
out
xor
rolb
imul
inc
jmp
or
mov
sub
pop
mov
mov
add
pop
stos
mov
and
jp
pusha
mov
mov
dec
jmp
sbb
fistpll
jne
push
out
push
pop
ja
or
mov
ljmp
out
mov
decl
out
mov
inc
lock
dec
adc
jle
hlt
fildl
cld
push
andb
mov
xchg
add
mov
xchg
mov
push
dec
add
cltd
jbe
test
icebp
ljmp
mov
ljmp
jo
decb
arpl
xchg
inc
icebp
pop
ror
add
add
cwtl
lock
clc
cmpsb
insb
cmp
xchg
inc
jmp
movsb
sti
push
je
mov
call
mov
inc
stos
mov
fstp
cmp
ret
cmovns
cmp
scas
cld
inc
pop
ljmp
ljmp
enter
or
pushf
add
rclb
cmp
jne
into
hlt
sub
mov
adc
mov
adc
jo
and
adc
bound
inc
sbb
mov
aam
test
cld
cmpb
rorl
ja
mov
xchg
hlt
in
adc
mov
dec
add
les
outsb
cmpsb
rorb
inc
pop
add
incl
pop
movsb
mov
mov
add
sub
nop
pop
jo
rorb
dec
in
lret
hlt
das
clc
cld
pop
adc
lods
adc
or
dec
mov
arpl
push
mov
or
inc
xor
loop
jge
aas
push
dec
sub
lock
nop
shll
mov
rclb
pop
cmpsb
repnz
jg
push
repnz
jecxz
xchg
or
add
adcb
dec
or
and
pop
cmpsb
cmp
cmp
and
pop
imulb
dec
jmp
call
push
loop
daa
testb
cmpb
push
pusha
lea
jp
shll
movsl
mov
aaa
or
mov
mov
testl
add
mov
mov
mov
mov
je
mov
les
fcoms
test
hlt
add
cmp
add
fistps
mov
xorl
or
addr16
stos
or
pop
out
push
sbb
sub
sar
call
or
pusha
testl
pop
loopne
jbe
sbb
aad
jmp
ret
xchg
dec
outsb
jns
inc
rol
push
int3
aas
icebp
jp
jne
push
mov
pop
push
adc
mov
mov
mov
lahf
scas
loopne
push
stos
sbb
push
jne
out
fsubrs
sbb
ds
je
shl
inc
dec
or
jl
push
and
shlb
enter
clc
daa
ret
fbstp
std
rorb
push
mov
icebp
ljmp
lods
xor
jbe
or
pop
and
mull
mov
incl
lret
rcrb
sub
std
sub
and
pusha
pop
xchg
subl
adc
adc
mov
jmp
or
inc
sub
pusha
cmp
int3
jp
loopne
or
bound
loope
mov
push
mov
lea
add
jp
gs
add
andb
push
lock
int3
jnp
popa
inc
add
add
loope
add
lahf
loopne
xchg
mov
cmp
aam
or
jo
pusha
cmp
pop
push
das
aad
xchg
push
stos
call
lea
loopne
xor
js
add
jecxz
jo
cmp
loopne
loope
mov
in
jbe
sbb
jmp
jl
or
inc
pusha
add
flds
popa
push
out
push
push
cmp
in
js
bound
add
ja
or
pusha
sbb
pop
dec
ljmp
xor
popa
xchg
call
dec
mov
and
daa
ljmp
loopne
mov
mov
insl
cli
decl
fsubs
jo
jns
or
add
jp
ljmp
mov
pop
popa
add
and
mov
jp
inc
cmpb
sbb
pop
adc
in
fs
jle
xor
fsubs
and
scas
dec
popa
das
fcomp
subl
jg
repnz
pusha
adc
cld
pop
mov
add
mov
push
loope
loopne
imul
pop
jbe
lods
cmpb
stos
or
sbb
adc
mov
xchg
test
adc
addb
arpl
push
inc
mov
pusha
mov
cld
or
hlt
inc
dec
xorb
cli
enter
inc
cmp
jle
push
pop
fs
pop
add
or
adc
dec
sub
adc
pusha
and
subb
add
dec
clc
mov
pop
in
sub
mov
mov
pop
cmp
hlt
gs
fsubrs
add
mov
rcll
xchg
jmp
in
add
lea
push
scas
push
mov
push
fs
in
sub
cmc
fisttpl
xchg
ror
testb
jb
popa
jb
data16
inc
pop
fdiv
add
dec
lock
sbb
pop
call
and
loope
mov
add
add
loopne
xor
shlb
jmp
addl
outsb
add
xorb
ss
inc
lcall
adc
mov
lock
mov
sbb
push
lock
push
pop
add
std
cmpl
push
shrl
push
in
pushl
aaa
mov
push
shl
outsl
or
pusha
add
loopne
std
or
cmp
faddl
jg
popa
xchg
loopne
lods
loopne
int3
mov
jge
fimuls
xchg
aas
dec
and
movsb
or
ret
cmp
cmp
lock
and
mov
dec
jecxz
out
movsb
sub
pop
inc
pusha
adc
and
pop
or
add
cwtl
addl
das
call
out
adc
cld
es
xchg
push
lret
loopne
ljmp
mov
add
mov
loop
repz
icebp
adc
dec
mov
cmp
std
jo
add
add
push
roll
push
or
loope
inc
mov
mov
jne
mov
lret
jo
inc
adc
data16
outsl
pushl
or
jne
jo
lea
scas
lea
scas
call
xchg
sub
add
add
push
pop
add
stos
mov
sti
jmp
lock
cld
xor
mov
repnz
sbb
xor
push
loopne
enter
nop
mov
xchg
cmp
xorl
lea
outsb
and
aaa
inc
outsl
push
cmp
sbb
push
add
movsb
incl
jmp
mov
mov
and
mov
lcall
push
fdivp
decl
dec
je
idiv
jmp
mov
mov
stos
das
js
aam
pusha
dec
jmp
push
add
xor
movsb
adc
loop
sub
or
jo
mov
add
mov
and
rcrb
ds
push
lock
push
inc
or
inc
js
lock
clc
cmc
dec
aam
call
mov
push
pop
inc
jo
scas
shlb
mov
aam
push
mov
je
push
or
loopne
enter
lods
push
xor
testb
add
jge
jg
aam
je
or
insb
jno
adc
cs
pop
inc
sbb
incl
mov
add
jmp
je
call
mov
jo
repnz
jmp
test
inc
dec
icebp
fcoms
or
xor
fcomps
or
pop
sub
lock
pop
inc
data16
jo
jne
imul
mov
daa
call
dec
insb
hlt
mov
mov
mov
lahf
xor
loopne
scas
push
mov
mov
or
push
icebp
add
jne
sbb
jno
rorb
in
lahf
jl
ret
stos
je
jb
testb
nop
xchg
push
bound
in
mov
add
or
push
adc
xor
ret
cmp
fdivs
or
sub
sbb
sbb
out
out
or
jo
out
push
or
push
lcall
mov
cmc
push
or
shl
loopne
call
in
idiv
aaa
jmp
xor
call
or
push
push
jb
outsl
js
cmc
push
je
sti
and
sbb
xor
jo
add
push
cmpsb
lock
je
mov
sbb
repz
pop
sti
mov
pusha
jne
jmp
fbstp
mov
xor
mov
adc
ret
roll
loope,pt
add
out
and
or
loop
dec
or
cmp
mov
mov
push
push
fstpt
sti
scas
pop
call
js
xchg
jne
mov
jnp
int3
and
dec
add
or
pop
adc
jmp
repnz
adc
jb
sarl
rolb
jne
pop
mov
sub
mov
por
addl
shlb
les
repz
mov
mov
pop
repnz
jg
out
cld
mov
inc
mov
aas
repz
cmp
je
jo
movsl
mov
jne
loopne
fdivrp
pop
push
rclb
pop
jb
test
movsb
in
aam
mov
jl
das
movsb
jmp
call
mov
lcall
in
push
movsl
push
mov
fidivs
jb
or
jne
les
inc
mov
lock
adc
mov
pop
or
pop
popf
fimull
insb
xor
jbe
adc
mull
push
mov
cltd
xor
sbb
test
std
push
push
test
not
ret
adc
cmpsb
mov
call
and
pop
mov
inc
pushf
outsb
xor
je
cmp
rol
aas
aam
adc
xor
sti
xor
sbb
inc
shrb
aam
xlat
xor
mov
pop
cmp
add
stc
xor
pop
jo
pusha
inc
out
inc
xchg
pop
pop
pop
jo
push
test
dec
leave
and
mov
mov
xor
push
and
lock
jb
rorl
jo
nop
add
pushf
inc
jg
pop
mov
cld
incl
notl
lock
xchg
aas
jmp
jo
sub
cld
mov
add
mov
adc
lock
push
test
cltd
call
sbb
ja
cwtl
mov
pop
lea
add
jmp
mov
xor
rol
ret
out
das
mov
stos
stos
push
shlb
push
clc
push
adc
inc
push
xor
clc
mov
enter
sbbb
mov
shll
fbld
addb
lock
cltd
dec
mov
pop
mov
inc
xor
add
or
push
decl
dec
lret
popa
xchg
inc
cli
ret
ja
adc
in
mov
into
push
jmp
shrb
cmp
or
sbb
aad
dec
push
ret
movzbl
add
test
inc
push
xchg
sub
lods
add
xor
add
js
ss
decl
imulb
outsb
add
dec
add
sub
int3
shlb
fisubrs
mov
stos
outsb
xlat
cs
lcall
sbb
outsl
insl
xor
xor
stos
or
lea
jno
jp
push
out
test
shr
push
or
add
je
inc
fildl
jmp
jae
jno
mov
ljmp
test
cmpsl
mov
pop
xorb
loop
push
or
push
add
sbb
stos
push
les
inc
fsubs
hlt
insb
cmp
or
cld
sub
inc
jmp
jb
push
pop
pop
mov
sub
inc
pop
je
adc
jl
xor
imul
mov
or
adc
fwait
jb
adc
or
sbb
adc
notb
call
jbe
mov
jo
xchg
dec
jg
call
sub
sarl
add
divb
mov
mov
add
dec
jle
mov
add
aam
mov
mov
add
sbb
jne
test
jg
rolb
sbb
inc
add
or
fisubrl
fbstp
cmp
add
jmp
xor
in
fsubrp
xor
or
aas
and
je
jmp
and
inc
testl
insb
fldcw
lcall
scas
je
dec
jo
and
jle
jbe
int3
lcall
shlb
mov
and
cld
cmp
ja
loopne
jg
jmp
xor
dec
dec
push
add
add
push
dec
std
sub
sarl
je
cmpb
hlt
jmp
xchg
xor
jmp
add
adc
xor
insb
adc
rcl
push
movsb
dec
insb
nop
pushf
jo
jb
outsl
stos
jg
xchg
sub
inc
mov
je
repnz
cli
lods
mov
enter
shll
pop
mov
test
stc
or
es
sbb
mov
insl
sbb
pop
shlb
nop
les
out
cltd
sub
cs
xchg
inc
mov
adc
js
cwtl
mov
rcrb
inc
mov
fcomi
fists
xor
movl
dec
or
dec
sbb
lcallw
pop
adc
add
push
fs
pop
jl
hlt
inc
test
jae
adc
mov
add
pop
jmp
fildl
push
test
mov
mov
stos
or
stos
inc
pusha
ljmp
lret
dec
clc
mov
nop
add
sub
faddp
pop
sbb
or
int
mov
adc
adc
imul
lcall
add
sarb
out
jge
test
inc
fistpll
adc
push
lods
xchg
dec
xor
popa
sahf
dec
sub
xchg
add
adcl
filds
push
orb
and
push
push
adc
push
add
ret
je
add
shlb
xor
mov
addb
test
addb
lock
jbe
mov
sub
aam
fcmovnu
adc
push
orb
icebp
and
mov
and
lret
mov
add
mov
xchg
push
or
cmp
lock
sahf
xchg
or
mov
push
scas
cmpb
andb
daa
mov
pusha
push
add
inc
and
adc
std
mov
rclb
pop
cmpsb
fsubs
push
cmp
push
add
cld
dec
add
mov
cmpb
add
mov
jl
adc
dec
rorb
add
or
movsb
ljmp
mov
jne
jg
push
invd
jp
add
jb
pop
sub
arpl
test
ret
gs
mov
sbb
xlat
inc
out
mov
and
or
movsb
fstl
dec
push
imul
lret
jnp
inc
data16
sub
add
rcll
cmp
mov
shlb
inc
add
push
shlb
hlt
and
lock
or
mov
fsubs
jle
dec
loope
pop
movsb
or
add
loope
inc
lret
clc
xchg
add
out
ds
insb
js
fbstp
in
shlb
adc
xor
daa
add
xchg
call
pusha
or
add
addl
negb
xor
cmp
daa
sbb
add
mov
loop
add
ret
sub
sbb
mov
hlt
mov
mov
jmp
loopne
decb
aas
ret
add
dec
call
add
adc
je
xchg
ror
inc
sti
data16
aas
inc
and
call
xorl
mov
inc
mov
jmp
dec
pop
dec
jmp
push
and
sub
ret
test
inc
cmp
mov
cwtl
loopne
fcoml
push
je
or
sbb
adc
mov
dec
mov
stos
adc
sarb
mov
adc
shlb
leave
inc
shlb
pop
mov
imul
int3
leave
cmp
lock
mov
dec
sti
nop
test
loop
cmp
mov
mov
pop
loopne
dec
add
pushl
or
add
mov
shl
adc
or
push
call
inc
jle
push
xor
loop
incb
add
and
mov
cltd
hlt
add
adcb
push
inc
and
movsl
cmc
mov
cmp
mov
sbb
mov
je
call
pusha
mov
jmp
add
cmp
jo
or
aam
mov
or
loopne
jnp
insl
aaa
cmpsb
in
mov
mov
je
jg
sbb
gs
push
add
adc
jmp
mov
fwait
and
test
pusha
std
incl
fsubr
pop
lret
fs
add
loopne
ret
loope
test
stos
cmp
xor
jg
sbb
or
insl
adc
jmp
jmp
inc
loopne
fs
mov
add
pusha
push
adc
in
ljmp
js
cmp
and
jmp
cmp
xchg
jb
mov
pop
js
or
cmpl
jo
lcall
xchg
mov
or
popl
lcall
mov
inc
inc
mov
lea
add
jbe
je
adc
lea
adc
inc
mov
scas
ds
mov
andb
or
push
mov
aad
roll
add
jle
xchg
sbb
jg
push
pop
sar
faddl
lds
cld
outsl
sub
pusha
jns
lea
jp
add
xchg
aaa
pop
int
dec
testb
pop
dec
clc
popl
cmpb
add
loopne
movl
mov
jge
xor
test
ds
cli
ljmp
cltd
in
mov
push
mov
mov
rcrl
mov
xor
xchg
add
sub
adc
xchg
jg
mov
and
pop
mov
pusha
cltd
loopne
cmp
pop
punpckhdq
ja
data16
lea
out
and
in
mov
pusha
xor
and
add
pusha
xchg
out
and
addb
test
cmc
aas
push
je
mov
add
add
jl
push
mov
sbb
adc
ljmp
xchg
push
xchg
loopne
repnz
int
inc
call
mov
clc
loop
inc
inc
mov
sub
je
lret
popa
dec
jg
loopne
adc
adc
lret
inc
daa
icebp
and
outsl
xchg
lret
repz
loope
inc
and
pop
pop
dec
loopne
push
sbb
or
call
push
and
cli
ja
cld
and
or
adc
fs
testl
nop
pop
jno
jbe
icebp
add
sub
mulb
dec
popa
aas
lcall
lret
push
push
cmp
je
pusha
or
mov
enter
mov
add
outsl
aaa
cli
adc
adc
je
jno
dec
sbb
add
or
rorb
or
stc
pop
ret
ss
pop
cmp
cs
xchg
movsl
xor
testb
and
stc
pop
dec
movsb
xor
mov
push
popf
lcall
mov
fwait
cmp
icebp
dec
enter
push
add
icebp
and
les
jl
or
mov
dec
add
call
repz
mov
movsb
nop
jbe
mov
jno
ret
aam
aaa
mov
mov
push
in
aaa
lds
xor
xor
sbb
test
es
mov
dec
ljmp
lods
push
jno
adc
adc
add
in
push
cmp
sti
push
je
movsb
push
or
mov
lods
xchg
mov
loop
fdivrp
out
clc
call
mov
pop
xor
gs
incb
mov
jo
mulb
lock
sub
xorb
sbb
dec
or
mov
cmpb
xchg
lock
add
push
and
cmpl
push
aad
cmp
cmp
in
pop
sbb
add
fnstenv
jmp
or
out
sub
in
cmp
sub
jns
dec
xor
and
add
sbbb
test
icebp
xchg
ss
push
out
shlb
outsl
cli
in
sbb
enter
add
pop
xor
lds
mov
imul
sub
mov
inc
cmp
inc
sub
jmp
lock
les
jmp
outsb
mov
or
aad
cmp
pop
mov
jmp
testb
sbb
mov
fnstenv
push
sbb
je
mov
hlt
and
hlt
cmc
add
push
insl
add
sub
and
mov
hlt
cmp
mov
xchg
mov
jg
ds
rol
mov
xchg
jl
addb
add
mov
inc
jle
mov
lock
mov
jle
sbb
pop
pop
and
faddp
jae
mov
fildll
popa
sub
xor
or
sub
mov
xchg
add
jne
rcrl
mov
mov
je
jne
add
mov
je
inc
add
push
fldt
jmp
adc
pop
inc
popa
or
cld
push
sbb
pop
lock
sub
ret
mov
jb
and
or
jecxz
mov
sarl
jne
int3
rorb
adc
dec
inc
mov
rcl
aaa
cli
ja
mov
mov
sub
loopne
push
outsl
jo
xchg
xchg
lcall
leave
inc
and
jmp
adc
leave
push
mov
inc
add
rorb
inc
and
out
inc
test
fwait
or
roll
ss
push
into
xchg
or
clc
add
lcall
mov
ret
dec
lock
adc
push
add
add
call
pop
loopne
cli
inc
addb
or
sarb
repnz
inc
clc
push
ljmp
cmp
setne
inc
je
mov
test
repz
stos
adc
test
xor
add
filds
sarl
inc
sbb
fs
inc
lock
jmp
jmp
cmc
or
repz
adc
cld
adc
pop
jnp
icebp
mov
inc
les
sbb
jl
shlb
or
ss
inc
jbe
pop
xor
add
int
mov
pop
jmp
std
fbld
or
sti
xor
sbb
adc
push
je
adc
sbb
lock
decl
testl
hlt
add
adc
and
push
lcall
dec
repnz
pop
adc
jmp
outsl
sub
mov
jmp
mov
sbb
jl
or
mov
push
sbb
pushl
andb
pusha
and
daa
shrb
xchg
add
in
dec
mov
xchg
inc
pusha
pcmpgtb
mov
aad
icebp
fdivl
adc
aas
cmp
ss
xor
inc
push
lds
jo
sbb
add
mov
and
cmp
inc
ja,pt
mov
andl
or
cmp
pop
sahf
scas
mov
insb
nop
fists
lods
cmp
ljmp
subb
outsl
push
ret
xorb
and
cmc
adc
or
mov
jnp
jo
pop
and
mov
insl
mov
bound
xor
mov
rol
shl
rolb
add
xor
or
sub
sbb
and
mov
mov
xor
sub
xor
fucomi
jno
add
repz
repz
add
xor
add
xchg
or
lods
enter
mov
loop
xor
pop
push
call
xor
mov
add
mov
lock
pop
call
insb
dec
jo
jb
adc
xchg
popf
ret
add
subb
mov
test
insb
out
scas
pop
test
jo
mov
data16
lods
mov
xchg
adc
add
jns
icebp
add
mov
mov
xor
ret
std
jae
shl
ret
adc
jo
adc
or
ss
cwtl
scas
add
rcll
push
dec
jne
inc
shlb
push
dec
roll
ljmp
hlt
ret
inc
or
dec
jbe
ret
dec
ja
mov
jg
mov
jno
stos
rorl
int
jg
xor
mov
ret
cmp
jne
subb
or
and
push
cld
add
add
mov
loop
pop
and
loope
mov
inc
adcb
lods
sbb
mov
xor
jo
xor
mov
les
pop
xor
inc
jbe
adc
cmp
push
or
scas
fisttps
lret
pop
push
out
mov
jnp
jo
add
data16
cld
fadds
jle
mov
cmp
sbb
add
add
sbb
push
xor
out
add
and
jmp
jne,pt
mov
add
lcall
test
mov
jbe
pushl
jmp
add
lds
add
mov
cmp
inc
andb
jo
xor
lock
lods
mov
mov
push
sub
idivb
or
mov
mov
pop
adc
jg
add
call
or
cmp
or
add
dec
push
hlt
jmp
add
sub
jbe
sub
push
std
push
jmp
lret
or
lock
or
mov
xor
add
mov
aad
insb
roll
cld
mov
clc
insl
test
mov
adc
cmpb
adc
add
orb
lret
jl
movsb
inc
stos
sbb
in
ret
cltd
fmuls
sbb
adc
xor
or
hlt
push
xchg
and
add
xchg
clc
sub
mov
adc
add
mov
or
jbe
add
xchg
xor
cmp
scas
mov
inc
sub
insb
xor
dec
popf
push
sbb
add
add
into
loop
add
pop
jmp
xor
or
jb
xor
push
orl
push
and
inc
adcl
jb
adc
pop
add
dec
test
xchg
push
or
lds
lock
cmc
or
int3
adc
das
clc
mov
fadds
lea
jl
add
ja
es
pop
cmpb
adc
adcl
push
inc
negb
inc
stos
ret
in
inc
xor
test
dec
xor
orb
loope
push
mov
orb
jmp
push
inc
cmp
xor
adc
sub
inc
dec
and
incb
mov
imul
rorb
mov
pop
add
in
jge
cwtl
adc
rclb
in
lock
add
mov
fwait
loop
jl
lods
sbb
adc
pop
divl
mov
filds
mov
rclb
jge
fwait
sub
dec
cmp
clc
adc
gs
rcrb
loop
pop
xlat
js
popa
imul
pop
mov
imul
mov
insl
imul
add
xchg
rorl
data16
stc
jl
int
jbe
sub
stc
mov
inc
mov
ret
xor
add
fisttps
shll
in
sbb
jp
or
fcom
adc
jge
add
add
rolb
inc
insb
outsb
popa
pop
je
sub
test
jl
jbe
push
xchg
inc
mov
jbe
cmpsl
cli
dec
pop
hlt
mov
sbb
dec
pop
mov
rclb
xchg
jge
das
jo
xchg
test
rcll
or
lock
xchg
sbb
outsb
push
lock
aaa
or
test
icebp
adc
xchg
lcall
jp
lahf
rorb
add
inc
out
mov
gs
je
shrb
repz
pop
pusha
cld
std
cmp
or
lock
jmp
lret
cmpsb
push
inc
inc
cmp
cld
adc
lcall
movsl
rol
ficomps
rorb
mov
lock
test
or
bound
int3
jp
cld
fcompl
sarb
fcmovb
cwtl
cmp
lock
adc
fbld
jbe
shrb
jmp
shrl
mov
push
les
movl
mov
jb
adc
sbbl
popa
adcb
loopne
subb
push
clc
jp
jbe
dec
leave
adcb
cmpsb
push
loopne
jg
xor
call
mov
or
inc
mov
or
adc
pop
fbld
lret
sub
loop
cmp
xor
jecxz
ret
pop
xorb
push
mul
and
cmp
in
adc
jle
popa
jnp
addr16
cltd
xor
mov
mov
or
sbb
pop
or
or
cmpb
jl
mov
mov
pushl
ja
aaa
mov
adc
mull
lock
pop
test
into
loopne
mov
inc
rorb
loopne
and
fildl
nop
orb
addl
hlt
les
ljmp
mov
cld
mov
jmp
lock
loopne
nop
ss
ret
test
and
lret
sbb
test
jecxz
push
cmc
jmp
or
or
and
xor
mov
loopne
loopne
or
adc
imul
xchg
jne
clc
imul
and
sti
xchg
dec
jp
xor
idivl
das
nop
sub
or
aaa
mov
rcrl
popa
insl
jecxz
push
mov
lahf
push
std
loope
lret
pop
add
cmpsb
mov
aas
popa
pusha
cltd
pop
imul
push
pusha
mov
hlt
sub
xchg
fs
int3
in
dec
sub
fwait
add
imul
dec
loop
mov
mov
push
push
or
adc
cmc
subb
sbbl
fs
or
outsl
dec
mov
fucomp
fwait
mov
mov
or
pusha
add
or
add
mov
pushl
jl
and
vmread
adc
and
adc
cld
adc
add
dec
cmp
push
pusha
int3
dec
in
ljmp
ss
dec
jo
add
nop
jbe
dec
scas
mov
lea
cmp
or
inc
xor
sbb
sub
xor
dec
loope
outsb
ljmp
fcomi
andb
lds
mov
iret
lods
add
mov
cs
mov
push
xchg
add
sarb
and
and
inc
jmp
inc
pusha
bound
mov
pusha
adc
inc
addl
mov
dec
add
jle
and
cli
bound
xchg
repz
jle
pusha
or
arpl
ljmp
mov
nop
or
inc
jmp
cmp
popa
aas
pop
cwtl
cmpl
mov
ret
add
inc
fsts
mov
loop
adc
ffreep
sbb
sbb
add
or
pop
mov
fisttps
loopne
std
or
add
mov
cli
fbstp
hlt
add
sub
or
insb
jmp
add
fcmovnu
jle
sarb
testb
adcl
xchg
jo
mov
mov
push
aaa
fucompp
arpl
jae
add
and
ljmp
mov
inc
cmpsb
jle
or
add
inc
cmp
xor
ret
mov
icebp
inc
ret
cld
fbstp
jo
aaa
inc
add
or
out
jg
pop
hlt
inc
and
je
or
mov
jmp
push
push
fcomi
mov
and
push
ja
shlb
mov
mov
or
dec
xchg
push
popa
dec
push
mov
jo
xor
stos
mov
jl
aaa
jg
add
data16
mov
adc
push
mov
push
icebp
mov
lock
jle
adc
outsb
jle
jg
mov
jl
sub
add
add
add
ds
test
jg
pop
jnp
lock
incl
jle
mov
xor
xchg
in
push
jno
xchg
or
or
mov
dec
inc
bswap
xchg
fsubl
add
std
stos
mov
js
xchg
cmp
jae
test
jle
jne
sub
sbb
pop
add
fdivrp
push
jecxz
add
add
push
jno
loop
sbb
fcoms
mov
ljmp
inc
mov
cmp
inc
cmp
mov
out
fdiv
xor
xor
scas
jl
not
sub
mov
aam
cmp
orb
mov
xor
icebp
lock
in
cmpsb
clc
xor
in
inc
or
jo
es
push
adc
xor
push
icebp
mov
sub
cwtl
jmp
mov
jp
add
jge
je
rcrb
daa
jae
mov
jo
or
adc
inc
xchg
xor
fucomi
and
jno
sbb
mov
mov
push
call
hlt
je
cmp
mov
and
mov
out
xchg
and
jmp
xor
rorb
outsl
xchg
lock
repnz
jb
inc
cmp
xor
fs
fcomip
pop
hlt
adc
sub
lock
shlb
jo
adc
adc
mov
pop
add
repz
fisttpl
mov
inc
push
jl,pt
call
jno
cmpxchg
and
lock
fwait
xor
lock
repz
xlat
idivb
or
dec
test
lock
mov
pop
mov
sub
enter
pop
hlt
xor
sti
push
rorl
push
sbb
inc
fucompp
js
mov
repnz
loopne
pop
jo
cmp
adc
xor
loop
sti
cs
jo
jb
push
mov
push
push
mov
mov
jp
inc
pop
sahf
jne
fsubrp
mov
jbe
ret
ficoml
inc
xor
jmp
mov
out
add
aad
xor
dec
lock
pop
incl
xor
adc
das
cld
ret
lock
push
or
cmp
mov
adc
push
nop
adc
xor
xor
sub
cmp
lods
std
loopne
sbb
lods
push
add
jbe
push
dec
xlat
xor
cmpsl
sub
push
adc
popf
add
push
repnz
add
popf
add
and
add
scas
dec
in
xor
mov
jo
ljmp
cmc
push
cmp
jae
add
pop
add
les
adc
jae
xor
scas
clc
pushl
popa
orl
movl
add
and
jmp
xor
push
out
ficoml
add
mov
or
rclb
sbb
add
mov
mov
lea
icebp
jmp
push
add
add
addb
mov
shrl
xorb
hlt
cmpsl
add
xchg
inc
mov
dec
rorb
xchg
mov
inc
pop
cmpsb
cld
lcall
int3
jp
mov
mov
sahf
test
cmp
sub
je
mov
nop
sub
mov
fdivr
ljmp
scas
hlt
xchg
pop
clc
xchg
xor
repz
xorb
push
add
js
or
stc
cmp
add
cmp
jmp
push
jmp
test
xor
fistpl
incb
decl
std
lock
inc
outsl
add
adc
mov
adc
incl
add
inc
jo
or
adc
shr
insb
addl
or
sbb
cli
jge
inc
pusha
xor
push
pop
xor
or
jmp
test
inc
jmp
mov
ljmp
xchg
jmp
mov
jmp
fdivs
dec
xor
add
jno
jno
mov
jb
add
inc
fildll
jmp
rclb
inc
clc
addb
sbb
cwtl
mov
enter
nop
popa
decl
les
adc
and
push
in
scas
xor
pop
add
loopne
inc
and
push
cld
pop
jo
add
mov
jno
das
inc
jo
xor
ljmp
jo
or
pop
sbb
pop
lock
outsb
or
and
or
and
in
mov
or
pop
jo
add
ret
shr
jo
mov
mov
in
add
insl
cmp
push
and
xor
ret
xchg
or
push
add
xchg
inc
cmc
or
inc
mov
add
pop
or
jmp
xor
mov
mov
loop
adc
mov
repz
in
or
jp
or
mov
mov
adc
and
jle
cmp
shlb
xorb
cmp
jle
loop
loopne
cmp
out
add
cld
data16
dec
mov
lret
add
nop
fiadds
push
xchg
inc
push
add
incb
mov
shl
je
adc
adc
dec
pop
lcall
aam
add
mov
mov
loopne
ljmp
call
loopne
push
or
cli
or
fsubr
and
andl
xchg
mov
addb
nop
add
jg
jl
je
lret
ja
andb
fldl
andl
test
xchg
jno
mov
stos
es
and
out
inc
cmp
sub
adc
cli
mov
out
addl
mov
or
dec
or
mov
cmp
lea
pushf
scas
decl
ficompl
mov
rcll
rorl
test
lods
or
orl
push
push
aam
dec
add
pop
je
or
rclb
pop
adc
std
aaa
hlt
ja
out
mov
add
hlt
inc
add
dec
mov
aas
and
sti
inc
inc
popa
mov
jl
out
stc
test
add
add
adc
vpcmpeqb
push
add
test
mov
js
add
cld
aaa
jl
enter
xchg
pop
inc
inc
rorb
subl
rclb
sbb
shlb
lahf
push
jg
lea
push
mov
enter
sub
lcall
jg
clc
pop
push
push
add
push
sarl
adc
popf
jbe
fcoml
push
or
add
add
rorb
sbb
popa
pop
or
adc
out
xchg
inc
and
jg
js
rclb
cld
push
and
mov
dec
adc
shll
rclb
mov
lahf
lock
xchg
rolb
rolb
pushf
ret
rorb
ret
sbbb
xor
cmp
sar
incl
inc
sub
pusha
inc
jg
sbbl
mov
add
data16
shlb
mov
stos
es
jg
outsl
dec
mov
and
pop
lea
lock
fs
aas
jo
je
out
in
cmp
mov
out
dec
dec
cmp
fadd
push
je
ret
add
sar
into
pushf
adc
pextrw
or
or
ret
push
jmp
fists
int3
ror
call
adc
add
je
inc
add
xor
jp
adc
jb
out
pavgb
sub
or
dec
call
decb
or
mov
cs
jmp
and
fildll
jecxz
push
xlat
loopne
xor
in
bound
adc
loopne
pop
lret
cld
pusha
outsb
adc
enter
xchg
adc
pushf
fisubl
je
cld
pop
and
or
test
add
je
jl
sbb
jb
inc
or
mov
pop
pop
push
popl
jo
out
movsl
outsl
movsb
sbb
lret
and
and
loope
xor
push
dec
clc
call
jecxz
lret
loopne
call
loope
inc
sbb
pushf
mov
jae
jg
mov
dec
addl
in
sub
mov
add
test
xchg
or
cli
das
sub
es
mov
add
clc
es
cmp
lcall
insb
int3
loopne
add
or
sarb
test
cli
or
call
lods
xchg
nop
jnp
and
arpl
add
jmp
push
xchg
and
outsb
adc
popa
adc
roll
insb
movsl
add
push
enter
ljmp
icebp
xchg
loope
test
inc
icebp
stos
shl
loopne
mov
decl
clc
jl
aam
movsb
nop
push
cmp
sub
test
jmp
std
pop
xchg
sbb
sbb
addr16
push
jne
lods
sbb
mov
mov
andb
mov
sub
jecxz
pusha
adc
sub
dec
push
jecxz
pusha
mov
test
js
mov
adc
jmp
loopne
popa
push
push
push
lock
repnz
add
jmp
loope
out
jo
call
shl
inc
xchg
popa
add
push
pop
add
inc
fwait
or
xor
mov
faddl
inc
lods
daa
popa
dec
loopne
xor
jmp
cmp
add
cmp
adc
xchg
cmp
push
nop
insl
pushf
lea
cmp
ret
xor
movsl
mov
aaa
push
cld
jmp
push
mov
push
fsubs
inc
jmp
ror
fistl
icebp
push
ljmp
je
inc
arpl
jecxz
cmp
pusha
pop
popa
cmp
shl
cmp
inc
adc
ret
jecxz
popa
mov
std
scas
add
xlat
je
popa
pop
lret
push
sub
out
mov
test
and
in
and
loopne
mov
lods
cmp
and
ficoml
mov
pop
ljmp
adc
into
es
ftst
repnz
xlat
bound
pop
cld
mov
add
xchg
or
cld
mov
or
jmp
fildl
pop
add
pusha
loop
clc
and
mov
cmpsb
and
push
sbb
inc
and
mov
cmp
loopne
ret
call
jne
out
test
cli
and
add
ja
mov
and
sbb
inc
push
cmp
inc
rclb
or
and
xor
sar
cmp
lock
outsb
call
adc
and
ja
addb
pop
inc
add
test
xchg
cwtl
cli
pop
pop
outsb
call
cmp
xor
sub
mov
push
mov
loopne
add
push
lods
or
jo
adc
je
incl
jo
inc
push
xchg
mov
jp
pop
loop
add
cmp
adc
popa
add
add
jp
jno
mov
mov
jmp
sbb
pop
lea
ss
mov
jp
push
pop
inc
bound
adc
jbe
roll
fcmovb
test
add
xor
ror
out
jp
add
lds
add
or
mov
or
adc
adc
jmp
pop
enter
add
adc
mov
loope
clc
add
add
add
add
cmp
roll
nop
or
pop
inc
notb
mov
mov
out
sbb
mov
jo
lods
insl
sub
add
stos
cmpl
mov
sbb
inc
dec
inc
outsl
pop
adc
inc
push
sub
insl
sti
xchg
imul
adc
out
add
imul
and
and
data16
add
int3
push
jl
mov
shll
into
fldcw
or
pop
or
adc
mov
add
fcoml
lock
dec
push
lahf
data16
insb
test
std
xor
repz
lods
sub
push
jle
lods
and
cmp
add
fisubrl
add
pop
shlb
and
push
dec
mov
mov
cmpsb
mov
mov
sbb
lcall
in
incb
add
mov
dec
repnz
clc
xchg
mov
push
out
dec
lds
out
stc
jg
enter
in
sbb
loope
and
add
and
and
and
in
add
dec
cld
fstpt
sub
mov
add
das
add
mov
xor
or
sarb
mov
les
aas
mov
out
cs
nop
mov
adc
pop
fistpl
push
insb
or
movsl
push
fiaddl
lock
or
adc
cld
inc
or
inc
test
dec
xor
mov
cmp
jo
mov
int
or
adc
cmp
xchg
das
lcall
or
in
mov
xor
xchg
out
inc
jns
push
pop
or
adc
and
push
inc
cmp
mov
insl
add
mov
addl
push
lock
hlt
or
outsb
enter
out
or
and
int
out
jo
fcmove
cld
ret
fwait
ret
clc
decl
mov
dec
fdivs
add
mov
test
outsl
pop
nopl
out
pop
pushf
and
int
stc
aam
jno
shll
mov
aaa
push
cmp
dec
out
or
mov
sbb
dec
pop
std
fbld
jge
push
jmp
inc
sbb
mov
jp
aam
jbe
inc
add
movzwl
loopne
push
cmpsb
inc
inc
adc
adc
and
lea
loope
pushf
sub
lock
add
mov
pop
cmp
sbbb
cmpl
pop
fisttpl
push
inc
lock
rsqrtps
xchg
test
or
mov
add
popf
cld
push
and
pop
jo
mov
ds
call
jp
inc
test
push
xchg
mov
xchg
mov
sbb
lret
cmovs
push
cld
cs
sbb
jb
mov
scas
aaa
pop
popa
jge
cld
out
rorb
mov
inc
ja
xorb
mov
mov
adc
pop
jo
or
or
call
sbb
lods
add
shlb
pop
sbb
add
fiadds
sbb
in
test
mov
cmp
clc
xor
mov
outsb
fcmovnu
testb
add
push
ret
lcall
sub
xor
bound
xchg
cmp
add
and
add
dec
int
inc
pushf
mov
sbb
hlt
or
pop
jp
add
add
mov
mov
mov
fsubp
mov
sbb
ds
cld
ljmp
push
cmp
sbb
sbb
scas
mov
add
jmp
or
cmc
roll
lock
inc
jg
pusha
cmp
insb
sbb
ret
es
mov
jmp
je
data16
push
rorl
mov
cwtl
mov
mov
dec
push
aad
sahf
rcrl
cmp
mov
push
mov
jle
cmp
cs
mov
aaa
sarl
test
push
sub
lea
mov
ja
test
sbb
jbe
mov
push
pop
add
xchg
xor
repz
dec
add
jp
xor
pop
mov
or
je
pop
xchg
repz
pusha
icebp
stos
fidivrs
sbb
pop
ljmp
add
pushw
pop
test
stc
jo
adc
cli
mov
hlt
enter
cltd
add
and
adc
cld
mov
shll
testb
jbe
cmpsb
test
add
adc
mov
mov
mov
outsl
jp
aas
mov
xor
dec
movsb
outsb
fdivs
mov
xor
add
mov
out
jg
fisubs
xchg
call
cld
mov
mov
jl
mov
je
or
pop
dec
push
repnz
xor
rcl
add
mov
xchg
jmp
enter
jl
xchg
cli
mov
mov
cmpl
cld
ja
jb
or
add
loope
or
jle
arpl
testl
mov
mov
je
push
jp
call
notb
sti
je
push
inc
push
xor
fs
add
cs
mov
dec
push
add
ss
jl
cmp
aaa
push
add
mov
in
lock
inc
add
or
sbb
clc
xor
xchg
incl
js
stc
jae
sub
dec
add
jmp
add
xchg
addl
pop
push
mov
mov
sbb
insb
loope
lods
pop
pop
xor
or
xchg
sub
mov
fdivl
jmp
push
mov
jp
mov
cmp
push
jne
addl
adc
add
jmp
inc
les
jb
mov
mov
aas
inc
in
testb
addl
test
clc
daa
je
jmp
fisubl
movsb
xor
sti
cmp
rcl
xor
lods
mov
push
inc
cld
in
jmp
popf
test
scas
push
sahf
loop
adc
lret
push
scas
popl
sbb
push
mov
add
inc
mov
pop
cmp
xchg
push
cmp
jae
add
mov
mov
cmp
cmp
pop
and
mov
sbb
adc
mov
pop
push
jle
or
add
mov
enter
sti
lea
mov
mov
je
incl
in
imul
pop
dec
or
cmpb
mov
and
cmp
cmp
insb
lock
cmp
add
mov
repnz
or
stos
in
jne
push
pushf
jne
cmp
sbbl
sbb
cmp
inc
outsb
pop
mov
aas
add
fmulp
jbe
inc
les
sbb
push
sahf
lock
or
je
cmp
jb
jmp
aaa
dec
cmpsl
pop
insb
flds
and
pop
fistpl
out
stos
test
inc
jmp
adc
dec
sbb
fsubs
icebp
scas
mov
mov
jb
add
inc
pop
call
call
push
mov
mov
shrb
or
sahf
push
mov
scas
sub
mov
jne
push
xchg
jp
mov
mov
xchg
mov
out
out
incb
jmp
nop
cmp
mov
lea
jbe
fisttps
cmpsb
cmpsl
inc
das
je
cmp
jbe
inc
xchg
clc
mov
mov
jo
cs
adc
push
jbe
adc
push
divb
adc
jae
test
test
aas
adc
pop
add
jmp
daa
mov
mov
clc
jbe
inc
loopne
lcall
outsl
aaa
inc
clc
cmp
ja
mov
jne
adc
mov
and
incb
mov
outsb
cmp
lods
dec
movsb
cwtl
pop
std
dec
pop
dec
add
call
jl
mov
nop
adc
or
sbb
repnz
mov
mov
loopne
ret
push
xor
repz
sub
ljmp
or
ljmp
pop
pop
shlb
cmp
mov
in
sbb
push
and
jecxz
jle
fcmovnbe
dec
ss
sbb
xor
sti
jmp
jmp
dec
mov
jne
cmp
add
fucom
pop
outsl
add
mov
mov
pop
outsl
add
shrb
imul
movsb
int
mov
ss
mov
rcrl
push
sub
pusha
idivb
jbe
popa
mov
pop
dec
cmp
jge
mov
les
push
nop
sub
sbb
cmp
and
mov
adc
jbe
add
cld
push
pop
enter
dec
scas
lock
push
cmp
add
push
outsl
xor
mov
andl
ret
adc
pop
mov
push
pop
aas
xchg
add
xchg
aad
loope
loopne
sbb
test
push
arpl
adc
sub
dec
data16
ds
pop
push
add
adc
inc
or
movsl
lock
popa
shlb
daa
int
mov
pop
movsb
jp
cmc
cmpsb
adc
push
movl
std
es
data16
xor
mov
adc
testb
jnp
jb
or
jle
xor
lock
insb
loopne
inc
and
add
ror
clc
lock
push
cmp
add
adc
sub
jo
lea
sub
dec
adc
push
idivb
test
adc
rdmsr
jbe
jne
iret
sub
movsb
pmaddwd
add
sbb
cmp
repnz
adc
cli
mov
je
ror
mov
sbb
mov
push
xchg
inc
push
es
out
jmp
mov
jle
das
and
xor
movsb
std
mov
ds
pop
lret
cld
lods
cmp
and
push
fistl
jo
insb
pushf
daa
jecxz
lcall
sahf
aam
jg
mov
jb
pop
daa
jle
mov
mov
int
mov
xchg
cmp
or
pop
push
test
pop
fs
jbe
sub
jbe
mov
jl
push
cmpsb
mov
out
sahf
jo
lock
loopne
jge
jge
adc
mov
jge
push
push
loopne,pt
xor
push
cld
lcall
push
push
inc
jge
test
push
adc
push
xor
test
sub
adc
or
out
mov
push
add
sbb
dec
imul
js
mov
and
in
loope
adc
loopne
pop
jne
jmp
xor
xchg
mov
outsb
js
int3
dec
or
decl
dec
std
movsl
pop
jl
jp
imul
lock
xor
lret
imul
ljmp
mov
dec
fcomi
mov
cmpsl
out
inc
sub
jo
dec
scas
repz
cltd
jbe
cmp
dec
cmp
dec
dec
and
xchg
int3
push
or
inc
jp
mov
pop
sbb
pushl
xlat
pop
cmpsl
push
pop
cmpsl
fidivrl
push
xchg
repnz
sbb
sub
push
in
mov
mov
mov
das
imul
outsl
mov
ljmp
inc
aas
out
cmp
mov
pop
fldt
push
out
movsl
push
daa
js
and
jnp
in
in
xor
stos
in
aaa
add
pop
inc
mov
fildll
movsb
mov
pusha
jge
lods
push
adc
push
push
pop
xchg
inc
dec
dec
jl
adc
xor
or
xor
mov
push
mov
xchg
push
mov
push
es
mov
push
out
push
push
push
cmp
add
insl
inc
jp
dec
or
mulb
ljmp
jp
cmp
sbb
push
test
sbb
adc
sbb
rclb
cld
cld
jle
xchg
mov
es
sti
insb
orl
mov
cmp
mov
add
push
out
cli
push
movsb
sub
hlt
addr16
inc
scas
jb
jle
xchg
inc
push
incb
rorb
pop
pop
and
enter
shrl
sub
pop
sbb
aas
push
or
ficoms
lea
pop
xchg
mov
add
xchg
push
cmp
enter
jo
jmp
push
adc
mov
int
lods
push
subb
and
add
push
add
fisubl
jecxz
xor
ffreep
imul
int3
sbbb
xchg
or
int3
rolb
call
adc
divb
mov
and
xchg
adc
ljmp
nop
add
icebp
jbe
mov
add
sbb
jne
incl
cmpl
je
mov
or
xchg
push
jmp
jbe
rcll
fnstenv
push
mov
or
push
sarb
inc
mov
lea
inc
cld
stos
mov
push
setns
in
loopne
push
add
daa
dec
lret
subb
imul
and
scas
push
push
mov
xlat
xchg
xchg
decl
inc
push
or
add
repnz
mov
mov
lea
out
mov
es
lea
push
cmp
sub
push
push
cmp
dec
les
insb
xchg
stos
cld
ret
pop
call
mov
sbb
xchg
cmp
push
or
xchg
push
outsb
jns
icebp
rcll
addr16
xchg
fidivrs
cld
sti
mov
sub
mov
mov
sbb
lea
out
into
pop
or
sub
xor
nop
jge
jbe
and
push
je
das
push
jp
push
mov
sbb
xor
push
loop
outsl
or
shr
or
lea
add
or
fmuls
mov
fdivl
lods
lea
loopne
pop
add
nop
xchg
pop
pop
loope
add
shlb
mov
cltd
cmp
je
stos
and
pop
jl
in
push
pop
je
bound
cld
js
add
ss
add
lods
pushl
std
incl
pop
shlb
sti
or
add
inc
icebp
shr
fisttps
sti
add
mov
and
leave
adc
and
cli
ja
add
paddd
or
adc
pop
data16
jl
add
sbb
jo
jbe
scas
push
mov
xor
test
mov
lods
mov
lcall
sub
mov
mov
data16
and
push
je
fiadds
adcb
pop
test
rclb
xor
aaa
rclb
mov
dec
ret
jns
sub
or
mov
mov
add
adc
adc
in
push
inc
divb
in
es
pusha
imul
je
scas
dec
jmp
pop
jne
rcrl
pop
add
cmp
jmp
std
mov
sbb
adc
in
ficoms
cltd
mov
fwait
nop
out
xchg
and
or
nop
cmpsl
add
negb
inc
sbb
aas
add
outsl
pushf
add
cmp
and
and
cld
push
jl
imul
adc
add
out
inc
jecxz
cmp
call
std
sub
fstpt
push
lahf
pusha
pop
mov
mov
sub
push
rcll
ss
popf
fldl
jb
sub
mov
shrb
pop
adc
arpl
or
icebp
xor
mov
sub
call
cld
movsb
or
mov
push
pushf
testb
cmova
push
dec
hlt
push
mov
inc
js
xchg
add
pushf
into
shr
inc
fs
jl
pushf
sub
shll
je,pt
jbe
outsb
xchg
cs
dec
fdivl
mov
pop
sbb
dec
and
jg
std
xor
jg
lds
call
cmp
movb
jp
int3
subl
outsb
cmovs
jnp
pop
push
inc
dec
scas
invd
lods
test
movsl
stos
scas
sahf
js
adcb
add
call
dec
std
ja
insl
mov
pushl
decl
pop
or
cs
ja
js
mov
cmp
je
lea
dec
dec
or
dec
movsl
or
adc
call
mov
or
arpl
push
fs
mov
push
push
cld
out
sbb
movsb
fsubrl
add
push
outsb
push
mov
dec
mov
aad
icebp
out
jg
push
aad
sub
jne
push
faddl
mov
inc
inc
dec
mov
nop
dec
dec
inc
jp
pop
jg
add
clc
jmp
add
and
dec
push
xor
add
and
mov
or
stc
fcoms
cmp
test
roll
mov
inc
dec
push
jmp
movsb
sbb
sub
sahf
pop
cmpsb
sbb
push
or
addr16
lret
subb
testl
subb
repnz
outsl
fsubs
inc
das
xchg
jne
inc
push
mov
testl
in
and
lea
out
push
mov
mov
rcll
cmpsb
pop
and
pop
ret
xchg
or
js
pusha
add
xchg
xchg
mov
cmpsb
ret
sub
insl
sbb
call
lock
xchg
push
push
in
and
lock
lods
addr16
mov
dec
or
cs
pop
mov
or
sbb
push
push
les
fcoml
push
lds
daa
add
lea
or
xchg
cmp
int3
cs
adc
cmp
aas
lcall
push
test
dec
lods
test
fsubrs
sbb
outsb
rcr
xchg
push
push
inc
into
mov
lret
fiadds
data16
out
scas
dec
adc
pop
push
jne
lcall
insl
popf
add
mov
xor
sti
push
inc
int
cmp
add
test
or
inc
or
mov
inc
xor
push
push
testb
je
addr16
inc
dec
push
movsb
cli
jle
push
inc
mov
andb
add
ss
adc
lods
jo
push
decb
lcall
and
xchg
data16
es
call
shrb
adc
mov
or
add
lcall
push
add
dec
in
or
aad
pop
clc
pop
lods
loopne
clc
mov
addb
add
or
mov
lret
lret
aam
pop
scas
add
pop
into
inc
jne
inc
jo
push
and
push
les
cmc
push
add
sbb
ss
add
cmp
popa
push
add
add
ficoml
stos
hlt
xchg
pusha
push
push
inc
lock
jecxz
adc
xchg
and
and
xorb
ret
addb
or
movsl
cmpb
lcall
inc
or
cmp
and
lcall
adc
push
cmp
adc
and
sti
cmp
dec
add
add
rclb
mov
or
xorb
sbb
mov
cli
enter
addr16
into
add
cmpl
rcr
adc
add
mov
and
mov
cld
mov
ja
les
dec
add
sub
mov
rclb
mov
xor
add
outsl
cli
clc
sub
lock
pop
jne
mov
movsb
pop
scas
int3
add
ds
or
or
cmc
out
push
pop
pop
mov
loopne
jne
mov
data16
mov
sub
and
movsl
pop
hlt
cmp
ret
lods
xchg
shrb
xor
pusha
ss
std
push
inc
add
adc
pop
and
rcrb
shlb
lds
adc
push
push
rclb
mov
add
movsb
mov
pop
mov
pop
scas
stos
test
div
je
call
mov
add
es
jg
xchg
push
jb
aam
stos
outsl
test
sub
adc
push
add
cmpsb
mov
es
outsb
push
fcoml
or
imul
fadd
movsb
rolb
xchg
adc
pop
lods
stos
int3
adc
dec
inc
call
js
mov
sub
adc
rcll
adc
es
sbb
dec
shr
mov
push
jmp
mov
clc
push
jno
dec
mov
inc
sub
in
rolb
nop
pop
adc
rorl
adc
dec
push
roll
es
insl
rorl
pop
out
fstpt
mov
pop
xor
cmp
push
push
cli
push
adc
dec
adc
adc
push
or
xchg
ret
ret
loopne
push
adc
dec
inc
cmp
lea
in
fildl
jbe
stos
xor
mov
lock
push
adc
test
hlt
mov
sbb
ljmp
cmc
cmp
mov
test
cltd
cwtl
push
sub
or
or
bound
imul
jmp
test
pop
pcmpgtd
nop
rorb
mov
adc
mov
mov
sub
push
xor
lock
sti
cmp
testl
and
dec
call
add
push
int3
adc
lret
lock
in
or
push
push
je
imul
std
js
loop
in
loopne
xor
or
pushf
xor
pusha
gs
loopne
or
loopne
out
je
lea
push
and
call
or
scas
fcom
pusha
or
add
loopne
pop
pusha
arpl
sbb
cmp
inc
loop
xchg
or
pusha
nop
inc
or
loop
pop
xor
and
and
jno
mov
clc
mov
loopne
ret
lock
call
add
mov
mov
lahf
push
mov
outsb
fstps
pop
rcrb
push
pusha
or
stos
mov
push
adcb
mov
std
loopne
or
lock
daa
xor
cmp
sti
fwait
test
mov
cmp
shl
ja
pop
ja
jmp
mov
xor
mov
andl
fdivl
jne
testb
test
or
adcb
std
jg
add
push
or
inc
push
cmp
in
in
sbb
lret
ljmp
cld
testb
or
sub
fistps
push
or
pusha
and
ret
push
add
adc
xor
int
je
addb
fisttps
jb
and
pusha
scas
mov
jg
andb
sub
aad
pop
bound
pop
loopne
popa
mov
adc
loop
adc
push
aam
and
loopne
pusha
jle
cwtl
sbb
mov
decl
mov
por
jl
clc
nop
add
andb
cld
lock
je
push
and
pusha
and
xlat
xor
mov
femms
nop
clc
call
lea
bound
cmp
xchg
adc
testl
and
add
inc
add
icebp
call
lret
push
jp
jle
xor
addb
jmp
test
ja
test
and
cld
add
dec
pop
dec
stos
test
sar
inc
iret
jge
test
sub
or
push
push
mov
dec
mov
jge
adc
sar
pop
mov
icebp
add
loopne
cmpsb
and
adc
popa
outsb
aas
shlb
mov
sbb
dec
push
pop
inc
mov
mov
jp
mov
adc
sub
mov
adc
test
loope
mov
orb
dec
cmpl
jle
mov
loopne
jne
add
push
jmp
cmp
add
or
jp
add
mov
jmp
push
fcomip
in
pop
mov
sub
xchg
and
dec
lea
inc
rolb
aas
movl
je
inc
cmpb
jne
arpl
test
add
lahf
out
jl
push
call
pop
and
add
cld
push
add
jl
cmp
leave
popa
pop
xchg
push
ljmp
push
pop
cld
pop
mov
cmp
or
adc
cmp
push
je
jb
inc
fdivl
or
cmpl
imul
out
call
cmp
dec
aam
or
mov
out
adc
ja
test
mov
test
xor
or
and
push
and
push
je
push
mov
les
mov
add
mov
or
lahf
and
and
mov
jmp
shlb
mov
mov
or
push
xor
pushw
inc
adc
and
scas
push
push
push
jp
sarb
lods
add
mov
push
mov
call
mov
sub
je
faddl
lock
push
adc
jo
xor
in
sub
dec
lea
and
shlb
cmpb
sub
jno
pop
mov
leave
pop
sub
and
or
ret
xlat
lock
fcoms
int
stos
jne
add
push
jne
add
sub
lods
or
out
pop
loopne
scas
call
xor
imul
add
test
and
rolb
add
lods
jp
outsb
test
jl
ret
inc
add
mov
lock
or
add
push
das
add
ss
pop
jg
push
mov
adc
xchg
cld
push
adc
mov
imul
xor
cmp
decl
stos
enter
pop
mov
mov
mov
je
xor
mov
addb
or
movsb
lock
hlt
lods
in
or
stos
add
or
in
iret
repz
clc
mov
icebp
add
inc
pop
pop
ljmp
cmp
subb
or
mov
dec
xlat
ja
gs
sub
fmul
rcrb
lcall
inc
push
xor
lods
jno
lret
mov
sbb
adcb
std
lock
mov
idiv
call
jl
push
test
push
lea
jo
or
jmp
lea
add
mov
xor
jbe
adc
inc
mov
or
pop
cmp
inc
inc
cld
in
mov
adc
push
orb
fiaddl
ret
out
scas
and
push
shll
shll
mov
push
add
lods
mov
cmpsl
pop
test
lds
jle
jl
xchg
pop
mov
inc
ljmp
cmp
addl
fcoml
mov
pop
imull
pop
pusha
adc
fistl
mov
mov
pop
jo
mov
pop
cmpsb
out
or
insl
lcall
xchg
or
outsb
stos
mov
lret
dec
iret
xor
adc
add
mov
push
xchg
xor
mov
dec
call
sub
push
mov
or
pushl
imul
mov
add
jbe
xor
outsl
clc
jg
push
and
mov
jle
bound
mov
mov
cmpsb
repz
lock
sbb
clc
insl
mov
orl
lcall
xchg
loopne
stc
jb
or
movsb
adc
test
xor
and
sbb
and
lret
or
pop
gs
push
adc
jle
pop
pop
dec
xorl
or
or
sbb
aaa
xor
jo
mov
sbb
jno
cmpb
add
mov
mov
sbb
or
and
ss
inc
mov
cmp
adc
loopne
cmp
jb
jbe
sti
lahf
fistpll
add
push
lock
add
and
pop
or
xchg
sbb
add
mov
or
js
pop
pushf
lock
mov
jecxz
pop
adc
lock
sbb
decl
pop
pop
lock
mov
adc
add
dec
sahf
rorb
inc
test
je
jo
sbb
out
mov
xor
adcb
cmpsb
popa
scas
cs
call
pop
icebp
or
or
and
add
mov
mov
add
xor
repz
add
pop
loopne
mov
mov
adc
mov
jne
rolb
sub
std
ljmp
adc
hlt
jg
adc
clc
xor
inc
les
add
sbb
pushl
mov
mov
mov
cmp
push
adc
lcall
xor
xchg
xor
xor
loope
add
cmp
mov
scas
ljmp
sbb
add
adc
rorb
pop
clc
mov
add
add
pop
mov
and
lock
and
ss
mov
test
stos
addb
inc
adc
sbb
es
mov
mov
leave
int3
add
mov
or
in
jb
mov
add
les
in
shr
sub
mov
pop
or
js
lahf
lret
pusha
scas
dec
inc
adc
jg
call
adc
push
mov
mov
dec
loopne
sub
orl
pop
sub
and
out
insb
jb
dec
mov
lea
iret
hlt
out
icebp
mov
add
jo
call
outsl
push
mov
sub
jo
inc
xor
rclb
ret
rcrl
adc
xchg
lcall
pusha
jl
or
dec
mov
out
adc
mov
push
push
cwtl
push
mov
mov
test
in
pop
jo
hlt
mov
jo
sahf
cmp
pop
adc
add
add
pop
pop
lods
jecxz
data16
jb
lock
daa
push
sbb
and
pop
add
mov
cwtl
push
mov
jo
je
jo
adc
dec
aad
or
add
xor
jno
push
or
test
dec
clc
push
fidivs
mov
jl
sbb
pop
stos
dec
or
je
xor
jmp
mov
sub
icebp
push
cli
push
or
mul
and
lock
jb
pop
jle
mov
push
and
push
pop
addr16
adc
ret
pop
cld
pop
pop
pop
jae
push
xchg
and
jne
mov
inc
mov
scas
shrb
jnp
sub
mov
pop
push
test
jecxz
push
jle
loop
fwait
or
mov
jno
mov
lcall
loopne
and
test
dec
push
add
pusha
sti
mov
aaa
mov
or
xor
cmp
jl
mov
ja
je
and
test
call
out
test
xor
mov
cli
or
aad
pop
jecxz
sub
hlt
push
xchg
push
sub
scas
add
clc
mov
mov
or
or
pusha
adc
jno
pop
sub
je
cwtl
pop
mov
inc
sub
pop
push
sbb
mov
pusha
push
mov
push
lock
imul
and
js
jae
cmc
add
rcr
les
add
mov
jae
mov
pop
add
cmp
outsb
add
inc
fdivrl
imul
xchg
inc
or
out
ficoml
movsb
lock
and
std
scas
lcall
or
cmp
pop
or
sbb
ja
jnp
repz
fucomip
mov
pop
das
push
out
repz
push
mov
lret
outsb
cld
mov
mov
dec
fists
cmp
pop
repnz
ja
inc
mov
and
jo
mov
cmpsl
das
pop
push
adc
add
sbb
int
mov
add
xlat
sbb
lods
xor
ret
dec
test
sub
sub
pop
pop
cmpsl
add
dec
popa
dec
push
inc
andb
lcall
inc
loopne
shll
leave
test
mov
jmp
mov
out
pop
sbb
cmpsb
clc
jg
cmpsl
filds
mov
lret
mov
sub
test
decl
cmp
js
cmpsl
inc
mov
and
repnz
jg
stos
mov
mov
negl
xsaveopt
or
jae
sarl
xchg
push
add
adc
addb
and
aas
clc
pop
sbb
test
dec
scas
ret
cwtl
mov
ret
adc
test
push
push
xchg
mov
push
aam
dec
inc
addl
cmp
xlat
shrb
mov
mov
add
push
call
stos
decl
pop
lea
test
pop
push
inc
fcomi
les
ret
adc
pop
test
mov
jg
xchg
lock
xor
ret
add
nop
jp
adc
xchg
loopne
int
scas
out
push
pop
or
lcall
jmp
movl
hlt
adc
pop
adc
pushl
aas
aam
add
sub
add
int3
mov
sbb
and
arpl
out
and
outsb
call
mov
xchg
sub
sub
cmp
hlt
ljmp
jb
inc
jp
int3
cs
add
lods
fisttps
or
and
mov
mov
pop
pop
fdivrl
mov
ljmp
jmp
xor
xchg
pop
out
lret
add
fst
mov
les
cmp
in
fcoml
call
adc
mov
inc
sbb
pop
xlat
dec
add
jns
ret
das
pop
cld
das
mov
add
ds
outsb
sbbl
xor
sbb
add
mov
pop
add
adc
pop
out
in
mulb
sbb
add
jecxz
fimull
add
mov
push
icebp
rorb
pop
jl
ficompl
pop
push
jl
pop
lret
inc
fmull
in
pop
and
les
add
mov
ret
orb
insb
push
adc
or
fistl
int3
mov
add
shl
add
aaa
hlt
push
sbb
loop
cmp
add
push
mov
xor
add
scas
fiadds
and
sbb
rcl
add
test
pop
push
lea
addl
push
test
pushf
sub
inc
and
push
add
or
inc
xor
mov
std
loopne
adc
scas
mov
sbb
add
add
mov
inc
add
add
arpl
pop
addl
loopne
cmp
mov
jmp
pop
pop
fs
and
pusha
mov
xchg
loopne
sub
add
scas
mov
push
push
mov
clc
fiadds
sti
loopne
loopne
adc
cmp
mov
aaa
pop
call
pusha
sbb
aam
lock
or
ja
push
pop
push
dec
mov
scas
inc
cmp
xchg
mov
hlt
and
ja
pop
jb
movsb
push
ss
notb
push
arpl
xchg
insb
sbb
popf
loope
or
ds
mov
outsl
adc
adc
push
push
push
pop
or
add
push
clc
xor
xchg
sub
push
test
adc
dec
cmp
stc
loopne
pusha
sahf
pushl
cmp
add
out
sbb
cmp
mov
sub
insb
pop
and
loopne
orl
rorb
sub
ljmp
or
mov
sub
xor
test
add
dec
imul
cmp
lods
cli
push
push
in
push
or
orl
popa
pcmpeqw
dec
iret
or
add
adcl
nop
sbb
in
cld
or
sarb
mov
aas
lcall
mov
pop
xchg
push
push
adc
and
inc
jo
mov
sub
call
es
sub
xor
cmpb
imul
inc
mov
lcall
shll
sub
mov
adcb
jb
mov
imul
in
xchg
sbb
cli
test
mov
pop
sub
adc
jb
adc
mov
int3
js
mov
test
aaa
loopne
add
pop
loopne
lcall
push
sub
mov
jge
mov
cld
pusha
es
jecxz
push
pushw
test
pusha
add
push
fucomip
enter
sbb
dec
inc
repnz
adc
add
roll
add
and
enter
pop
or
adc
cmpl
and
comiss
adc
call
mov
aam
popa
mov
ret
test
mov
stos
enter
jo
push
pushl
mov
mov
or
jb
outsl
pop
sub
mov
or
inc
add
cltd
mov
adc
bound
or
push
jne
movsb
mov
push
push
pusha
and
cmp
je
add
test
add
loopne
pop
cmp
or
jecxz
aad
pop
loopne
je
sub
jb
aaa
lea
mov
inc
hlt
stos
mov
add
push
cwtl
pushl
adc
pop
sbb
mov
into
cld
in
sub
clc
dec
mov
pusha
pusha
jnp
push
mov
call
cmpl
jo
jbe
sub
xor
sub
add
cmp
call
push
jecxz
filds
mov
or
adc
jo
clc
outsb
ja
sub
adc
jbe
push
sbb
fisubrs
mov
es
call
ljmp
test
cs
dec
jne
jbe
inc
hlt
mov
pushf
mov
or
jmp
mov
mov
incl
xor
jne
push
jl
dec
sbb
pop
adc
cmp
std
jno
movsb
jg
icebp
call
push
rclb
inc
hlt
sub
push
sub
inc
add
inc
pop
jo
adc
insl
inc
mov
bnd
mov
cmc
sub
sub
lods
cs
mov
add
je,pt
mov
adc
sub
mov
sub
rcr
xor
movl
jl
aaa
add
mov
mov
adc
xor
add
jle
test
test
adc
xor
fiadds
add
icebp
push
clc
icebp
dec
ss
dec
cmp
jl
mov
mov
jg
add
mov
jne
je
or
mov
call
fidivs
scas
or
bswap
lock
filds
or
push
jns
sub
jo
pusha
int
adc
cld
adc
pushl
inc
pop
outsb
and
jo
mov
mov
pop
mov
xor
pop
pop
mov
cwtl
pop
push
in
in
ja
xchg
and
or
push
pop
add
insb
fbstp
or
hlt
jne
pop
xor
cld
adc
mov
les
aas
lock
inc
dec
sbb
adc
fs
sbb
add
or
inc
scas
push
push
sbb
xchg
movb
jno
jmp
mov
lock
and
cs
loop
jo
mov
xchg
mov
pop
adc
ljmp
jg
loopne,pt
add
cmp
adc
call
xchg
add
jo
call
data16
adc
add
fildl
sbb
sbb
shlb
aaa
or
daa
and
xor
jo
push
mov
cld
push
xor
call
sbb
les
lock
mov
cmp
roll
es
sub
fildll
je
lea
cmpb
mov
and
mov
es
cmp
mov
je
cmp
jne
or
jmp
jno
pop
orb
cld
lock
sbb
pop
and
pop
pushf
mov
fsubrl
inc
loop
and
jne
push
mov
jne
add
or
fisttps
into
adc
and
mov
std
out
inc
mov
mov
mov
das
push
adc
sbb
les
adc
loopne
adc
jle
mov
pop
popf
sbb
inc
add
mov
mov
mov
aam
decl
add
es
pop
addb
stos
lcall
mov
pop
sbb
jle
lock
mov
lret
sub
cwtl
jmp
ljmp
mov
add
sbb
adc
push
rorb
jne
push
adc
adc
pusha
mov
add
jmp
ja
movsb
mov
and
xor
mov
sub
sub
adcb
add
and
in
and
iret
inc
lock
adc
jl
sbb
sbb
sbbb
cli
into
or
push
data16
stos
pushf
inc
test
xor
push
jo
and
loopne
jnp
loopne
jl
pop
adc
outsb
dec
push
xor
icebp
dec
je
aad
pushf
mov
sbb
stc
inc
cmp
push
repz
call
jl
fdivrs
insb
das
cld
test
adc
call
push
mov
mov
jg
push
mov
js
jne
jbe
jge
jmp
push
xor
js
push
sub
call
loopne
jg
mov
rorb
pushl
sti
jno
mov
adc
xor
jo
push
pop
mov
sub
add
ret
dec
outsb
ret
ret
mov
mov
xchg
inc
push
jo
cmp
stos
and
sti
or
add
call
std
and
jo
decl
andl
lea
add
test
cmp
cmpsb
call
clc
mov
cmpl
je
pop
cmpsb
mov
mov
inc
call
pop
and
dec
test
xor
xor
cld
das
and
sarl
je,pn
dec
sub
pusha
xchg
mov
xchg
lock
je
stos
inc
push
fs
movsb
jl
jnp
and
pop
stos
push
inc
je
les
push
test
es
push
xorb
xchg
add
call
or
je
cmp
jmp
mov
cmp
cmp
and
rcrl
fbstp
and
je
mov
pop
cmp
jmp
cmpl
mov
mov
push
lock
loopne
sbb
sub
mov
test
push
push
inc
test
or
jb
scas
xchg
xchg
mov
out
xor
repz
hlt
fadds
aad
lock
fisubs
test
rolb
shl
test
loopne
sbb
xchg
clc
pop
inc
sub
inc
clc
xor
int
and
inc
roll
jo
or
rol
push
sahf
add
sub
jg
lods
push
push
icebp
push
adc
divl
pusha
andl
scas
movsb
push
test
pop
or
test
mov
cmpsb
inc
jle
lock
test
cmpsl
mov
push
in
lock
out
arpl
push
mov
and
adc
lock
jo
jge
roll
pop
jle
push
xchg
movsb
mov
out
pop
mov
js
and
cmp
fcomps
outsb
push
jne
test
scas
ret
mov
addl
push
aaa
dec
lock
xchg
xor
xor
clc
jb
or
jno
mov
xor
jecxz
push
lods
push
xor
movsl
cmc
inc
pop
xor
xchg
sbb
cld
incl
mov
push
shl
out
or
push
xchg
or
imul
lock
lock
call
and
lret
lahf
sbb
or
andl
jl
ja
pop
mov
cmp
jmp
icebp
xchg
add
cmp
cwtl
push
cmp
add
mov
int
sti
xor
and
inc
pusha
pushl
sarl
sbb
icebp
jns
mov
enter
mov
insb
mov
jo
add
mwaitx
je
cs
and
test
faddl
pusha
or
pop
test
add
addl
dec
aas
call
cmp
adc
out
sbb
insb
mov
cmp
es
notb
fimuls
mov
icebp
add
maskmovq
idivl
xchg
mov
mov
push
mov
ror
add
cmp
cli
dec
push
jmp
adc
inc
ffree
fnstsw
pop
addb
inc
call
push
mov
cmp
sbb
sbb
or
sub
push
xor
stos
mul
mov
negb
xchg
add
ret
sahf
flds
test
insb
dec
inc
sub
int3
data16
mov
xorl
mov
push
sbb
sub
outsb
add
push
push
or
pop
mov
movb
test
shr
mov
je
and
xchg
cs
je
pop
cld
imul
inc
cmc
xchg
jecxz
mov
pushl
mov
insb
sub
sbb
push
fisttpll
pop
add
pop
mov
ja
push
pop
pushf
mov
cmpsb
es
mov
roll
xchg
push
push
test
mov
stos
xchg
js
rcrb
loop
add
gs
and
cmp
adc
cltd
pusha
mov
scas
test
mov
xor
inc
popa
push
cmp
jo
shll
add
in
inc
push
stos
fiadds
mov
add
adc
jb
add
das
sub
sbb
cltd
cmp
mov
in
jno
cld
repnz
jno
imulb
push
mov
mov
je
jmp
cmc
gs
dec
sbb
call
sub
push
push
call
add
or
mov
mov
mov
mov
pushf
or
and
sti
xor
cmp
push
push
cmp
js
lea
pushf
and
or
mov
sub
mov
cmpl
push
mov
notb
jb
mov
out
jbe
adc
push
fdivp
cmp
mov
stos
push
or
and
mov
adc
sarl
push
push
push
jbe
cmp
ja
decl
cmp
jbe
mov
inc
outsb
add
jmp
adc
add
jmp
xchg
or
pop
arpl
sti
adc
sub
xchg
adc
cwtl
mov
sbb
push
aaa
or
cwtl
jbe
aad
stos
sarb
push
mov
push
push
rolb
push
shrl
or
dec
pop
push
push
pop
sbb
popa
xor
hlt
fmull
pop
loop
loopne
fidivrl
pop
xchg
fdivrl
pop
lret
xor
mull
cs
mov
jne
call
and
pop
pop
xlat
or
pop
xor
loop
mov
gs
pop
adc
push
bound
push
push
push
jg
inc
cmp
movl
add
jbe
add
mov
and
je
xchg
or
inc
fisubs
push
or
dec
push
mov
add
adc
out
add
movsb
ja
fisubs
xchg
and
in
jmp
sub
push
sti
incl
fisttpll
add
sbbl
test
mov
dec
jmp
xor
add
or
pop
push
push
push
mov
in
add
push
xor
mov
push
cmp
push
addl
inc
hlt
es
mov
jne
mov
lds
and
int3
int3
inc
fsub
loopne
loopne
add
cmp
insb
push
sub
sub
mov
mov
rolb
jo
ficoms
imull
add
mov
call
shlb
lret
in
in
mov
std
fdivr
xorl
inc
jnp
push
int3
xor
test
add
push
push
pop
adc
xlat
push
cwtl
push
icebp
jmp
outsl
shll
adc
mov
mov
mov
shlb
iret
cmp
xchg
outsb
ds
sub
lea
lods
mov
pop
or
sti
sub
inc
cld
adc
fidivs
jnp
push
call
sub
sbb
out
mov
pop
sti
aas
push
cmovs
insb
in
faddl
mov
jbe
jl
pusha
shlb
push
sbb
and
stos
hlt
and
xor
jle
mov
mov
xchg
lock
shrb
inc
mov
add
insl
daa
adc
nop
push
mov
nop
adc
pop
sarl
je
mov
xor
mov
lock
push
xor
fiadds
add
test
xchg
hlt
jmp
sbbw
add
ja
es
inc
repnz
ljmp
sbb
and
ret
push
fimull
pop
arpl
mov
nop
call
jmp
inc
mov
aam
loope
ss
push
pop
inc
push
push
inc
xor
push
or
addl
pusha
addb
dec
bound
mov
pop
rorl
lret
stc
jg
pop
int3
adc
cmp
jg
in
fs
movsl
mov
lods
and
push
or
movsl
sub
inc
inc
das
insl
pop
jecxz
and
dec
mov
sub
and
jne
push
push
push
mov
and
hlt
stos
dec
inc
push
or
or
outsb
movsb
push
loopne
cmpb
loope
addr16
or
xchg
gs
mov
int3
lea
aas
and
pop
xorb
decb
pop
sub
sahf
xor
and
je
dec
nop
call
subb
stc
jne
add
pop
into
inc
inc
xchg
xchg
lcall
cmc
shl
add
pop
push
adc
cmp
nop
test
enter
and
push
call
add
adc
js
mov
fiaddl
loop
pushf
cmp
jbe
mov
xor
pop
movsb
in
adc
out
insb
sahf
cmp
adc
dec
inc
xlat
in
scas
out
xor
cmp
jbe
push
push
sti
mov
js
or
sub
push
aam
lret
mov
mov
pop
js
jg
push
out
mov
inc
jmp
mov
jbe
cwtl
inc
mov
pop
daa
or
je
inc
fiadds
lret
push
pop
cmp
fisubl
inc
xchg
and
aam
or
inc
scas
call
out
xor
push
add
sbb
push
pop
je
mov
inc
incl
push
or
push
add
jmp
or
mov
out
clc
int
ljmp
sub
jl
inc
jb
push
pop
je
push
mov
jmp
sbb
cwtl
adc
push
jg
movb
jb
ds
jbe
mov
je
jnp
mov
data16
leave
mov
jmp
push
lret
and
ss
jg
mov
cmp
jae
mov
inc
int3
lahf
xchg
sbb
notb
mov
jmp
movzwl
jne
std
notl
pop
iret
push
adc
loopne
aad
fisubrs
out
shl
mov
xor
adc
repnz
subb
xor
add
mov
cwtl
notb
dec
adc
adc
repz
lcall
cmpsl
or
data16
pop
sbb
or
iret
or
mov
pop
cmpsb
cmp
sbb
pop
call
rcrb
push
jne
mov
sub
fdivr
mov
imul
sub
add
sbb
sub
in
inc
mov
int
pop
and
mov
ja
pusha
scas
sbbb
or
xchg
aam
mov
jns,pn
call
gs
lods
iret
xor
mov
pusha
stos
call
in
stos
adc
jmp
loop
mov
fsubl
mov
dec
adc
mov
mov
jne
das
fmuls
ja
cmp
decl
push
stos
mov
xor
jge
fmuls
push
lods
in
xchg
hlt
adc
cmp
mov
ffreep
pop
adc
rol
jne
pop
mov
jne
ss
jl
dec
fiaddl
ja
stos
dec
call
add
cmpl
jle
les
cld
inc
jmp
jl
loopne
jbe
jbe
jo
xor
adc
scas
push
in
call
or
inc
push
lock
clc
test
sub
push
flds
mov
sbb
bound
jmp
push
push
jbe
addb
outsl
outsb
add
add
lock
sbb
inc
daa
cmpb
or
idivb
add
or
mov
add
aaa
push
jne
push
test
in
rcrb
push
decl
xor
aaa
add
mov
jbe
sarb
cmp
inc
sahf
fcmovnbe
jo
loopne
pop
add
push
aam
and
outsb
adc
push
push
andl
jg
adc
out
sahf
mov
xor
dec
aam
jg
ret
jl
sahf
add
outsb
or
dec
rolb
ficomps
es
in
sahf
sbb
fdivs
faddl
out
movsb
lods
mov
jle
cmp
mov
adc
jo
leave
sbb
add
jmp
rorl
andb
push
rclb
lods
inc
cld
dec
adc
out
add
add
inc
and
lds
xor
lea
insb
xchg
mov
aam
push
es
call
rcl
lods
adc
shlb
imul
shrb
jp
inc
shrb
pop
sahf
or
mov
fsubl
add
int3
cmp
addb
and
mov
lea
sbb
or
call
push
test
mov
or
or
decl
or
jne
mov
dec
adc
stc
xor
pop
aam
cld
incb
cltd
or
out
mov
cmp
push
and
mov
dec
add
aaa
andl
adc
add
or
mov
fsubs
mov
xor
in
ss
mov
mov
call
push
std
incl
movsl
push
cmpsb
pop
mov
or
sub
pushf
std
inc
mov
test
ds
lock
sub
mov
push
add
pusha
stos
sti
je
repz
mov
ja
push
jle
mov
inc
jmp
or
xchg
mov
aam
push
rol
inc
mov
scas
adc
push
jbe
scas
pushf
lock
pusha
lods
dec
dec
jle
call
ret
scas
idivb
dec
insl
cld
std
ja
call
sub
inc
mov
pop
inc
lret
mov
inc
in
out
mov
jl
rclb
jbe
xor
cmp
call
repz
lods
jp
leave
ret
jl
lods
xor
inc
int3
xchg
push
pop
andb
push
cmc
call
cmpsl
or
sbb
push
inc
enter
cld
fimuls
xchg
sub
add
leave
xor
test
data16
pop
and
dec
aas
pop
mov
mov
in
aad
ficompl
xchg
fmuls
jb
push
pop
dec
mov
cmpsl
push
xchg
lock
and
mov
cwtl
inc
mov
jl
mov
stc
mov
push
hlt
outsb
or
mov
xor
mov
add
fs
divb
jl
add
stos
xchg
call
aam
push
fisttps
stos
hlt
sub
pushf
call
fldt
daa
repnz
je
lds
push
sub
push
nop
stos
in
inc
push
push
jecxz
dec
std
cmpsb
add
inc
cmpxchg
inc
out
sarb
pop
adc
mov
jne
outsb
aam
dec
cmc
push
mov
mov
add
int3
rcrb
ss
outsb
int
ja
xchg
dec
aas
lods
lea
outsb
dec
enter
pop
nop
enter
repnz
mov
scas
sbb
popa
add
push
adc
test
push
je
data16
mov
and
push
and
inc
mov
pop
scas
clc
decb
clc
and
sub
testb
lock
sar
aas
cmp
add
add
xchg
add
bound
mov
fdivl
dec
sbb
je
cmc
inc
scas
dec
mov
push
test
push
push
orl
cli
push
pop
cltd
int3
nop
push
add
xchg
cmpl
aaa
push
es
jmp
scas
inc
movsb
push
push
or
shr
inc
sub
out
cs
cmpsb
add
push
test
jbe
mov
and
fdivrs
push
insb
js
mov
call
bound
clc
cmpsl
test
mov
push
pushf
call
cmp
xchg
xor
add
cmp
pop
add
pop
push
inc
cmp
out
push
push
xchg
decb
adc
mov
enter
or
inc
dec
add
pop
adc
dec
and
add
lcall
ficoml
inc
das
in
cmp
cld
test
stos
loopne
or
loopne
scas
jg
ljmp
movb
mov
icebp
ds
or
push
mov
std
ljmp
test
mov
mov
fmull
ja
mov
xchg
fmul
jae
mov
shll
cmp
rorb
mov
js
add
add
push
xor
fmuls
test
lods
inc
pop
je
sbb
sarb
mov
add
imul
aad
lret
fistl
hlt
cmp
lock
adc
dec
and
xlat
enter
setp
sub
sbb
pop
std
xchg
dec
sbbb
loope
mov
push
dec
add
mov
je
lea
dec
testb
sbbb
jge
cmp
jne
xchg
jle
mov
pop
out
jge
lret
inc
jne
test
cld
or
addr16
gs
in
push
hlt
dec
push
jmp
adc
aad
or
mov
repnz
mov
stos
pop
ret
stos
push
in
xchg
cld
add
in
stos
cld
sub
jbe
mov
dec
call
lcall
shll
loop
lods
pshufw
imul
or
clc
add
imul
add
aaa
cld
cmp
movsb
sbb
in
imul
jmp
jo
xchg
pop
sbb
or
testl
sahf
jl
push
add
or
scas
lock
clc
ljmp
cmp
pop
rol
xchg
lret
push
sbb
push
inc
scas
dec
xor
dec
adc
int3
push
adc
adc
mov
xor
cmc
push
je
mov
push
mulb
xor
stos
mov
out
adc
ret
xor
jo
insb
mov
jge
and
and
sub
push
mov
mov
inc
rorb
mov
mov
fisttpll
xchg
adc
fdivrp
add
enter
add
hlt
push
sbb
fsubr
pop
call
adc
fisubl
add
and
xor
jns
xchg
enter
rorb
mov
sub
stos
push
es
adc
mov
xor
loopne
mov
movl
mov
shrb
fmull
ret
test
sarb
cs
xchg
aad
fmuls
xlat
cmova
orb
sub
ljmp
mov
ljmp
ljmp
rcll
mov
inc
loope
pop
add
scas
add
sti
adc
aaa
add
hlt
mov
mov
je
shrl
inc
push
insb
push
decb
out
test
inc
shr
ja
add
push
push
repnz
xor
and
cmp
test
push
pop
cmp
mov
mov
lcall
rcrl
test
mov
or
push
call
ja
mov
and
add
mov
fldl
push
ljmp
or
fstpt
pop
jmp
and
in
mov
pop
loop
data16
dec
inc
bound
fidivrs
mov
pop
outsl
jb,pt
mov
cld
xchg
sub
into
jne
bnd
jne
mov
mov
movsb
lret
jg
call
mov
mov
xor
add
push
mov
clc
insb
ja
lret
mov
sbb
rorb
sub
clc
jg
cmpsb
pusha
dec
dec
or
dec
push
add
pop
fistps
mov
cmp
test
sbb
cmp
lahf
xchg
inc
add
das
and
fmulp
data16
add
lds
add
jbe
fsubrl
in
mov
in
or
sbb
lahf
pop
push
ret
lock
fmuls
or
push
push
aaa
inc
mov
jle
or
cli
stos
lock
inc
mov
mov
push
maskmovq
testl
insl
shlb
adc
push
or
lock
data16
pop
jb
les
push
or
push
into
mov
jb
xor
and
aas
pop
push
mov
iret
je
push
clc
push
movb
movb
xchg
mov
push
cmpsb
mov
iret
cmp
mov
fcmovb
outsb
stos
inc
add
je
sbb
pusha
cld
enter
lcall
dec
adc
enter
adc
cmp
pop
or
dec
jb
shlb
add
pop
jb
repz
push
test
jg
rcrb
inc
mov
xchg
cmp
mov
push
sub
add
and
je
mov
xor
cmp
cld
push
cmp
lret
mov
jmp
ljmp
testb
test
mov
loopne
lock
jae
je
adc
lsl
mov
dec
fs
mov
add
rolb
imul
idiv
inc
inc
imul
sbbl
dec
push
or
mov
mov
jb
add
adc
add
mov
lea
fcoml
xchg
cmp
scas
popa
sbb
cld
or
loopne
ds
jbe
repnz
fistps
cmp
push
lock
std
scas
leave
hlt
and
scas
mov
jl
add
or
push
mov
clc
roll
jmp
into
inc
mov
cmp
jne
dec
push
push
pop
es
jle
data16
test
lret
adc
sbb
mov
sarb
push
push
dec
sub
insb
push
push
sub
sub
call
add
mov
sbb
stos
fcomps
cmp
in
mov
sub
pushf
xor
push
psubsw
test
outsb
pop
test
mov
cmp
pop
dec
test
mov
or
sub
xchg
jle
mov
js
mov
int
es
mov
pop
lea
sbb
sbb
xor
xor
inc
adc
or
addb
ds
add
cld
call
jnp
pushl
leave
jmp
shr
ds
je
fwait
lea
cmp
add
ja
rcrb
movsl
or
in
or
pusha
add
movsb
add
xchg
rolb
scas
ret
mov
and
xchg
clc
cmc
push
js
jbe
mov
xchg
push
cmc
lds
pop
pop
push
inc
decb
push
scas
cwtl
sub
ljmp
scas
push
adc
mov
out
dec
mov
mov
adc
xchg
push
push
dec
push
cmpsl
dec
imul
das
fbstp
test
je
and
outsb
pop
or
inc
lea
ja
pop
je
jbe
inc
and
inc
and
cltd
pushw
push
xchg
shlb
fld
inc
and
incb
add
and
adc
mov
pop
push
iret
or
adc
push
mov
sub
jl
cmpsb
pop
aam
push
sub
iret
in
es
pop
les
hlt
pop
mov
popf
and
push
sbb
push
pop
scas
daa
sub
incb
or
inc
or
mov
fidivl
jbe
jne
mov
push
add
loope
adc
adc
push
adc
sub
outsl
adc
shlb
adc
in
push
orb
fsubr
fildll
movb
movsb
in
jbe
dec
int
or
call
sbb
out
call
push
pop
jecxz
lcall
dec
incl
inc
push
cmc
shlb
adc
rorl
jle
sbb
or
add
pop
cld
mov
es
inc
ss
jns
shrb
or
es
fbld
push
add
add
mov
adc
les
ret
add
xchg
push
push
xor
mov
lret
lcall
xchg
ja
ljmp
in
push
push
call
pop
push
jb
enter
loop
inc
inc
pop
push
adc
pop
dec
inc
xor
jb
movb
push
inc
int3
call
adc
mov
mov
mov
mov
rcrl
or
std
jle
ret
or
data16
xchg
out
in
pushl
jle
inc
push
in
mov
test
mov
push
shll
hlt
or
mov
mov
mov
loopne
test
dec
clc
cmpsb
hlt
lret
xor
push
sbb
je
sbb
push
int3
and
and
mov
fisubs
mov
adc
outsb
dec
lret
pusha
mov
mov
push
shrl
daa
hlt
stc
das
call
orb
divb
jne
dec
fsubrl
push
xor
jb
call
dec
popa
or
outsl
pop
daa
adc
mov
sub
mov
loopne
or
mov
xchg
xchg
pushf
cltd
sbb
dec
dec
or
add
and
cltd
and
inc
sahf
mov
sbb
mov
mov
inc
sbbb
push
adc
cli
in
flds
mov
out
lea
or
mov
mov
mov
cmc
fildl
xchg
inc
test
push
pushf
call
pop
xchg
sub
adc
adcl
adc
ret
loopne
pop
outsb
or
push
push
aaa
push
adc
bound
ja
shrb
cmp
pushf
cs
xor
jmp
jb
mov
ret
jo
ficomps
add
push
dec
lahf
jns
popa
jp
psllw
xor
or
lret
push
mov
js
fnstcw
mov
push
or
push
cmp
ss
shll
adc
outsb
icebp
inc
mov
ljmp
or
xlat
xor
xor
add
jle
jb
cltd
or
jbe
push
pusha
loopne
cwtl
xchg
lahf
dec
insb
or
scas
nop
mov
cmp
clc
push
adc
jne
push
outsb
clc
jne
adc
jl
divb
lea
sub
mov
testb
in
out
sub
xor
divb
sub
nop
test
xchg
aam
scas
ljmp
jmp
or
daa
xor
push
sbb
mov
icebp
cld
icebp
xor
cwtl
mov
xchg
and
add
in
sarb
cs
mov
mov
dec
xchg
xchg
test
jp
lods
cmp
addb
js
sti
mov
pusha
add
cmp
sub
or
rol
ljmp
adc
insb
jae
or
sub
push
jo
inc
pop
sub
xor
add
push
push
sub
int3
cmp
jno
jmp
or
mov
pushf
lcall
jmp
adc
add
add
inc
push
or
repz
inc
mov
subb
and
cltd
cmp
mov
jge
in
les
repz
inc
add
decl
jne
lock
and
jg
add
xor
dec
xor
sbb
mov
loope
cmpl
jmp
int3
leave
and
movswl
outsb
clc
mov
loope
jl
or
mov
sar
and
mov
inc
cli
or
lock
data16
mov
ds
or
dec
pcmpgtb
dec
xor
inc
adc
shlb
test
pop
and
add
hlt
lock
or
mov
call
mov
ja
cld
and
negb
add
lock
mov
in
repz
ljmp
cmp
sub
sbb
adc
rorb
sbb
add
pop
jecxz
sbb
mov
cmp
add
mov
dec
push
mov
jmp
cs
xchg
lcall
ljmp
xchg
and
push
jmp
mov
in
cmpsb
int3
ret
das
pop
add
or
clc
dec
in
iret
rcl
testl
sbb
cmp
push
push
cmpl
mov
jne
push
lods
cmpsb
dec
mov
testb
jge
inc
orb
jne
cmp
pop
xor
leave
mov
fwait
icebp
in
cmpsb
mov
add
mov
or
sub
xchg
xchg
add
das
pop
rcrb
dec
add
sbb
and
dec
mov
sbbb
arpl
push
or
dec
aaa
rclb
roll
cltd
jb
pop
loopne
or
ds
lea
loope
clc
adc
jns
or
leave
or
cmpsl
popa
sbb
xor
push
mov
std
int
ljmp
mov
ds
daa
mov
cli
or
or
push
and
or
mov
mov
dec
push
adc
or
jne
mov
add
aad
fistpll
dec
jb
jmp
scas
je
dec
mov
push
mov
adc
repnz
into
sahf
out
jp
xchg
push
mov
inc
xlat
pmuludq
or
out
sbb
jne
jl
sbb
or
inc
adc
xchg
xor
xchg
mov
addl
adc
ret
and
stos
push
test
mov
push
sbb
fsqrt
out
cmp
orb
mov
sub
sub
int
mov
enter
push
or
pop
add
negl
inc
mov
or
jp
mov
lea
bound
push
inc
mov
pop
add
inc
orb
mov
add
call
pop
pop
idivl
imul
in
call
push
cmovae
sub
xor
jmp
cli
push
scas
je
mov
jb
inc
bound
push
cmp
inc
pop
adc
cmp
les
sub
mov
inc
mov
xor
out
decl
or
add
shll
cs
xor
movsl
scas
out
add
add
imul
ret
push
cmpsl
fistl
inc
out
push
addb
je
inc
divl
clc
ljmp
push
or
stc
or
mov
cmpb
jne
push
imul
push
fnsave
cmp
mov
jmp
push
jl
or
adc
pusha
mov
stc
jp
fistl
xchg
push
fsubs
sbbl
adcb
lcall
adc
inc
adc
and
mov
and
cmp
add
adc
fdivrl
jne
std
sub
daa
aas
cmpl
jle
addl
daa
and
mov
jg
push
add
xor
jmp
mov
aam
es
add
test
cmp
jbe
mov
add
lcall
or
hlt
jl
je
add
cs
push
pop
fistpl
in
mov
aas
inc
inc
jnp
pop
das
sub
add
pop
inc
inc
xor
loop
add
xor
mov
call
cmpsb
push
insl
inc
and
cwtl
stos
pop
push
push
scas
xchg
mov
jb
inc
adc
mov
push
lea
in
test
mov
cmpsl
cs
push
enter
fs
xor
js
lea
stos
outsb
dec
popa
xchg
pop
and
xchg
or
je
ret
and
cmp
add
pushf
lret
sbb
add
test
mov
das
ss
push
adc
sub
adc
and
shll
data16
mov
xor
mov
xor
shlb
mov
addr16
adc
mov
ljmp
mov
lods
insl
fsub
pop
dec
mov
aam
add
stos
sub
or
call
sbb
ret
fsubrl
dec
fdivrs
je
cs
push
sub
or
sbb
pop
cld
pop
out
xor
data16
jb
mov
decl
daa
ja
push
lea
daa
lock
loopne
test
pop
push
jp
mov
or
icebp
add
popf
or
pop
and
jne
push
pop
sbbl
mov
call
sub
jmp
and
dec
shl
add
push
jne
inc
add
or
push
add
test
mov
mov
sub
lea
sub
inc
push
imul
icebp
xchg
mov
push
sub
outsb
mov
mov
push
mov
dec
push
jbe
out
xchg
push
mov
sub
aam
jb
test
pop
push
dec
stos
rcrb
xor
jae
lods
or
pop
icebp
push
cmp
xor
loope
sbb
int3
scas
call
cmp
je
xor
fwait
push
or
std
push
hlt
testl
in
sti
jb
icebp
mov
aam
or
push
mov
xchg
jbe
push
pop
pop
in
mov
push
sti
pop
inc
adc
xor
pop
mov
mov
std
add
aaa
push
pop
je
jbe
in
mov
inc
sti
mov
sbb
mov
xchg
out
mov
push
pop
decb
lcall
xchg
sarb
pop
jne
test
add
aas
mov
push
adc
cmpsl
cmp
jp
cmp
add
lea
and
je
mov
ljmp
call
xor
push
push
push
jno
sbb
data16
in
pop
push
jae
vmwrite
pusha
push
into
lret
mov
rcrb
imull
arpl
cmp
int
mov
loopne
cld
pop
jb
shl
mov
cmpsb
ja
mov
mov
stc
sti
mov
les
out
lea
adc
push
inc
add
pop
imul
leave
push
insl
mov
adc
push
or
rcll
push
mov
cmc
mov
stos
jmp
incl
mov
cmpb
mov
mov
call
mov
jmp
sub
push
or
cmp
dec
inc
add
jp
push
push
call
pop
jle
data16
jge
in
cmp
cmp
dec
idivl
cmp
push
daa
cmp
addb
jne
fistpll
lods
out
add
lock
or
push
lock
aam
ljmp
jmp
add
cmpsb
and
out
jle
fs
or
stos
mov
sbb
cmp
insb
test
push
hlt
mov
push
pop
pop
cmp
subb
and
addb
lds
jg
nop
mov
inc
fsubrs
cmp
adc
push
inc
out
dec
cmc
xchg
pop
jne
sbb
aaa
test
nop
inc
mov
cmpsb
je
das
and
pop
mov
inc
mov
sub
dec
pop
jg
mov
es
into
movsb
out
clc
pop
ds
adc
and
idivb
push
and
xchg
adc
dec
or
sbb
push
add
or
pop
or
cmp
mov
pop
add
push
jb
jmp
mov
into
lret
ret
and
or
xchg
lcall
inc
or
cli
inc
cmp
cmp
sub
mov
ja
call
fisttpl
or
and
mov
mov
jbe
test
jmp
push
lods
insb
ret
nop
sbbb
sbb
inc
mov
cmp
jmp
test
mov
leave
mov
inc
push
sbb
insb
cmp
sub
inc
add
sub
notb
and
lahf
call
push
lods
push
adc
insl
int
sbb
ljmp
pop
nop
in
xlat
and
outsb
mov
jge
push
mov
xor
mov
stos
pop
add
ljmp
js
loop
sub
or
shll
es
adc
addb
mov
push
mov
pop
cs
movsl
push
pop
push
clc
lea
mov
add
decb
call
push
lods
inc
rolb
pop
stos
mov
loop
add
adcl
hlt
push
enter
adc
sub
add
push
adc
es
jmp
push
pop
mov
mov
inc
xor
js
or
sahf
pop
call
push
inc
jl
add
lea
arpl
clc
jle
mov
shl
dec
pop
mov
mov
mov
dec
push
mov
rolb
adc
mov
and
jb
add
js
loop
sub
mov
addl
adc
mov
cwtl
push
dec
jmp
xchg
sbb
sti
mov
aas
push
neg
in
and
mov
push
movsb
loopne
clc
jl
add
hlt
sub
jne
add
adc
scas
cld
mov
adc
fidivs
je
mov
cli
lcall
or
xor
cmp
sbb
call
jge
dec
pop
idivb
push
and
xor
cmp
stos
test
cmp
dec
std
aaa
mov
sbb
ds
jae
sub
jno
adc
les
je
enter
adc
lods
cmp
jbe
xchg
add
cli
mov
inc
xlat
mov
subb
add
add
loop
mov
cmp
and
cmp
jne
arpl
dec
sbb
stos
or
ficompl
cld
pop
pop
or
clc
inc
out
pusha
inc
ret
outsl
fisttps
push
outsb
sbb
sub
sub
insl
jns
adc
mov
or
mov
jne
or
aaa
mov
fcomps
and
cmp
push
jb
data16
sbb
jb
ja
or
stc
add
inc
adc
sbb
sub
call
jo
pop
xchg
aaa
into
lods
sbb
mov
daa
imul
cld
push
cmpb
jge
pop
push
mov
call
inc
lods
sahf
mov
outsb
inc
sti
add
add
xchg
mov
mov
mov
add
hlt
out
mov
outsl
je
jl
add
andb
pop
push
push
in
and
or
movsl
decb
and
call
jbe
out
add
repz
add
sbb
rcl
loop
pop
mov
push
mov
add
fs
stc
pop
sbb
loope
int3
adcb
ds
repnz
imul
push
adc
jecxz
dec
push
mov
xchg
idivb
add
push
dec
cmpsw
jg
jb
shr
js
or
adc
pop
pop
movsb
sahf
pop
cmp
popf
dec
inc
pop
adc
or
xchg
lock
add
adc
sbbl
mov
cli
jle
cld
xor
xor
dec
add
fs
popa
cmp
inc
sub
push
mov
dec
push
lea
in
pushf
pusha
or
dec
cmp
cmp
jle
and
add
movsl
push
lods
or
add
mov
add
cmp
idivb
sub
insb
mov
cli
push
add
fcom
xchg
cmp
ret
or
sbb
imul
scas
dec
mov
ss
insl
hlt
jno
test
inc
jl
sub
mov
subb
adc
andl
test
dec
test
mov
dec
push
jmp
fwait
scas
inc
lds
adc
add
imul
and
insb
cld
mov
scas
call
add
loop
lods
cli
loopne
sti
cmp
jle
fstpt
addb
clc
flds
fsubr
xchg
hlt
inc
cli
sbb
sub
inc
pusha
lock
lock
lods
add
dec
cmp
divl
mov
dec
pop
sub
adc
mov
sarb
or
insb
add
ret
mov
or
filds
mov
and
cwtl
mov
or
mov
addb
push
movsb
sbb
or
sbb
add
test
lea
pop
icebp
push
push
mov
stos
dec
je
fmuls
cmc
push
rorb
or
insb
lcall
push
daa
je
outsb
add
fcoms
xlat
test
rorl
rorb
pop
outsl
rorl
sbb
sub
or
ret
in
mov
pop
popf
lock
rol
repz
adc
jecxz
push
mov
mov
jl
mov
rclb
mov
pop
cwtl
jne
int3
mov
add
inc
and
call
ret
mov
xor
pusha
adc
rcrb
std
dec
sbb
decb
lock
stos
enter
xor
stos
aaa
popa
fistl
test
xor
rolb
add
outsl
mov
cmp
dec
xchg
cmp
push
pusha
xchg
enter
rolb
xchg
adc
sbb
pop
mov
or
lret
rclb
mov
xor
pop
xchg
add
adc
sti
jb
jmp
or
cmpsb
xchg
push
icebp
stos
push
adc
cmp
mov
sarb
adcb
cli
fwait
mov
push
adcb
fs
subb
mov
or
mov
incl
or
adc
jo
and
add
xlat
cmovo
loope
shlb
fcoms
ljmp
test
std
sbb
cld
mov
and
lahf
xchg
inc
insb
or
gs
and
rorb
push
sub
add
mov
addl
je
pop
sub
icebp
pusha
sbb
je
into
jle
div
call
or
mov
or
je
xchg
dec
xchg
aas
cmp
sub
js
orb
sahf
inc
roll
imul
pop
ljmp
push
push
ss
pop
je
and
loope
sub
sub
test
xchg
lock
loopne
test
jp
cld
jp
pusha
sub
insb
popf
mov
sub
call
pushf
push
std
fbld
pusha
push
cmp
mov
and
xorb
and
pop
icebp
mov
pop
insb
sub
adcb
push
adc
or
pop
out
dec
pusha
sbb
cmp
jbe
inc
popa
push
xchg
sar
pusha
push
ret
xchg
or
ds
jle
and
cmp
and
jmp
divb
mov
inc
add
das
call
mov
fldt
push
rolb
fcoml
pop
or
movsb
sbb
sbb
inc
es
fs
add
and
arpl
adc
cli
call
jge
mov
loopne
and
and
pop
mov
jmp
test
cli
add
jne
push
pop
data16
push
jmp
push
pop
xchg
cmc
pop
int
adc
cmp
mov
scas
call
xor
lods
cs
xor
adc
in
and
mov
cltd
add
lods
js
pop
movsb
or
loope
std
jecxz
add
shlb
lock
mov
cli
clc
mov
shr
sub
das
jp
lods
xor
push
lods
loopne
test
adc
inc
pusha
pop
loope
jo
jle
call
sbb
dec
cmp
clc
pop
pop
add
repz
dec
mov
loop
or
pop
push
mov
xorb
or
loopne
mov
pop
andb
jle
inc
je
pusha
xor
repz
push
scas
mov
and
or
js
add
jmp
int3
dec
outsb
adc
add
loop
nop
mov
insb
ljmp
rorb
xorl
cmp
out
push
xor
or
inc
pop
jecxz
repnz
stos
addl
xchg
or
js
mov
add
mul
sbb
pop
fisubrs
mov
pusha
aaa
sbb
movsb
dec
adc
push
xchg
adc
js
icebp
jecxz
pop
jbe
add
jle
aaa
mov
add
andl
in
pop
add
jle
or
je
jl
push
pusha
adc
neg
mov
js
mov
lahf
adc
pop
js
jb
dec
dec
add
push
push
roll
add
jno
xchg
push
push
xchg
jo
popa
dec
mov
nop
or
mov
les
dec
adc
or
loopne
rorb
pop
pavgw
fildl
sub
std
iret
or
popa
out
xor
das
push
mov
xor
add
in
push
mov
sarb
ljmp
pcmpgtd
mov
sbb
idivb
cmp
mov
loop
xchg
or
rcrb
sarb
mov
cmp
cltd
mov
ret
loope
or
push
adc
hlt
mov
add
sbb
shlb
jg
mov
call
fisttps
hlt
ds
or
mov
into
cwtl
mov
push
lock
push
test
sbb
movb
add
add
push
sub
nop
sbb
mov
lea
and
call
pop
fcmovne
dec
mov
push
cwtl
or
and
fisttpl
jbe
movb
lock
loopne
push
lcall
les
jne
add
adc
push
mov
inc
push
push
in
pusha
or
pop
or
cld
adc
adcb
lods
pop
pop
inc
sbb
mov
mov
test
das
jl
addl
rcr
test
xchg
repz
and
movsb
mov
inc
push
push
mov
fwait
lcall
push
jo
enter
mov
fstpl
push
pop
cs
pop
enter
fsub
clc
push
cmp
rorl
adc
js
pushf
xlat
filds
call
call
hlt
aad
sarl
push
lods
icebp
add
sbb
inc
std
xchg
sub
push
mov
mov
jle
add
test
jle
sbb
or
push
or
or
sti
ja
fcoml
add
jl
sub
jmp
lods
dec
bound
ljmp
add
mov
ljmp
mov
or
sbb
push
lods
mov
or
ret
push
push
clc
es
mov
scas
shlb
enter
ja
sbb
std
pop
and
loope
push
fdivr
add
adc
jmp
inc
jp
pop
pusha
push
lahf
repnz
and
add
mov
inc
xor
shl
mov
mov
ret
add
fs
xchg
in
stos
test
lock
mov
das
loope
into
push
sbb
add
or
mov
subb
xor
mov
mov
icebp
cld
or
orl
pop
js
inc
lods
mov
jmp
ds
movsl
clc
das
jl
inc
add
je
je
cmp
mov
dec
lds
faddl
hlt
mov
mov
or
mov
insb
pop
and
and
add
xor
cld
call
mov
call
je
mov
push
xor
jmp
ret
or
or
add
xor
and
mov
mov
xor
inc
popa
loopne
ja
loop
cli
or
test
test
jle
xor
mov
add
mov
aaa
add
xchg
cli
fisttpl
add
jo
inc
mov
sub
ret
xor
mov
jmp
or
sbb
and
jmp
dec
dec
jns
adc
jbe
jo
testl
and
mov
add
icebp
lahf
cmp
xor
lock
inc
xor
add
imul
cli
sbb
icebp
xchg
in
sbbb
repnz
adc
push
loop
call
or
ret
adc
mov
cmpsb
jne
xor
or
inc
out
jg
inc
lock
add
sbb
sub
mov
jl,pt
xchg
xchg
lea
mov
add
jne
push
loopne
imul
mov
cmpb
movsl
cmp
jo
cli
addb
ljmp
add
cmp
jne
push
nop
sbb
loop
add
ficompl
xchg
cmp
jb
push
jne
jo
dec
lcall
adc
andb
xor
adc
xchg
je
sub
adcb
int3
shrb
mov
add
push
cmpsb
cld
push
push
inc
push
je
in
pop
or
aam
add
dec
inc
and
push
aaa
mov
and
clc
adc
cmpsl
mov
call
xchg
adc
and
addb
out
and
lea
test
jbe
scas
test
and
cmovs
mov
or
adc
jo
jb
mov
cmc
cmpsb
subb
cmp
in
add
add
daa
orl
sbb
rorb
cmp
adc
mov
jb
orb
add
out
fwait
rolb
dec
mov
outsl
jp
test
inc
xchg
jbe
sub
inc
jo
push
negb
mov
jno
je
fisubrs
mov
cld
add
add
fisubs
je
sar
cwtl
add
pop
ret
lcall
rcrb
ds
cmp
sti
xchg
cli
or
ss
repnz
clc
repnz
je
add
xor
sub
xchg
sbb
and
jmp
jo
je
add
sbb
cli
lds
jns
jmp
hlt
or
push
push
mov
out
xchg
cmp
xchg
sub
loope
mov
adc
mov
dec
mov
push
ljmp
or
stc
or
jo
stos
data16
pusha
and
mov
jmp
fidivl
dec
jecxz
cmpsb
xor
pop
add
xor
push
cli
dec
lret
adc
sbb
push
or
clc
push
and
clc
mov
or
cmpsl
dec
adc
xor
and
jnp
push
ljmp
jb
xor
call
sub
jge
repnz
inc
cltd
shlb
movsl
icebp
bound
repz
or
adcb
cli
dec
jl
mov
insb
push
fldcw
bnd
in
mov
les
pop
pop
push
mov
mov
xor
cmp
dec
jo
and
pop
xor
arpl
das
adc
jl
jmp
shlb
jo
fs
add
pop
sub
add
mov
lcall
add
test
iret
add
rol
les
sbb
inc
push
dec
or
sub
shll
add
dec
push
pop
shll
jb
push
and
pusha
fiadds
add
pop
adc
add
sub
mov
inc
inc
inc
sahf
pushl
popf
xor
lods
int3
leave
xchg
div
lahf
rorl
aas
cmp
std
lcall
adc
and
mov
shll
xchg
mov
or
adc
or
xor
adc
fldt
inc
mov
mov
push
rolb
aam
adc
jmp
cmp
push
adc
sbb
rolb
mov
sub
mov
cwtl
into
sub
adc
jo
push
lock
lret
cmp
mov
jmp
push
scas
push
rorb
sti
xor
adc
or
rcl
loopne
test
sbbb
and
jo
sbb
sbb
mov
ret
or
pop
js
imul
les
movsl
and
inc
sub
push
pushf
sub
test
or
xchg
cli
cmp
loope
js
repnz
mov
jnp
orb
ret
insb
mull
bound
and
adc
inc
or
sarb
add
mov
mov
test
add
push
or
lea
xor
cmpsb
pop
inc
das
or
add
cmp
sub
jp
repz
cmp
mov
nop
pop
hlt
repz
push
lods
mov
pop
inc
mov
movsb
ret
pop
enter
test
sbb
jle
cmpsb
sub
pop
push
mov
ret
notb
push
pop
in
leave
dec
es
ret
dec
mov
repz
call
cmp
push
fs
lret
stos
sub
clc
xchg
adc
xor
pop
mov
test
repnz
ds
fidivrs
lea
call
cli
push
cmc
pop
ss
outsb
push
adc
loope
push
call
std
and
jns
jo
out
outsb
popa
xorb
enter
dec
mov
sub
mov
movsb
xor
ret
or
cmp
push
mov
or
xchg
or
mov
call
les
jb
ret
dec
test
push
scas
jb
add
or
shll
loop
orb
loop
sarb
push
dec
shrb
stc
cld
push
add
iret
cmpb
dec
in
shlb
and
cltd
in
or
pop
je
or
jo
lods
out
pop
and
cmpl
outsb
and
inc
inc
mov
ss
fadds
or
jl
or
or
jb
lcall
push
shrl
cmp
mov
cmp
add
jne
je
rcrl
lret
lock
xor
testb
xor
adc
pop
inc
je
mov
mov
xor
or
push
sub
mov
in
movl
lods
sub
lea
mov
push
inc
cmp
pop
adc
mov
test
les
lea
push
outsb
add
xor
clc
xor
aad
test
xchg
add
add
sbb
cmp
jne
push
jle
int
out
push
sbb
mov
lahf
mov
lock
mov
hlt
add
adc
je
sbb
stos
adc
je
neg
mov
dec
mov
add
and
ja
stos
loop
xchg
mov
push
mov
mov
daa
push
aaa
add
clc
sbb
inc
or
movsb
cmp
je
in
sbb
je
addb
cli
or
jne
mov
jne
push
cmp
pop
cmp
in
adc
jp
ss
cs
cmp
push
or
xor
sti
cmp
addr16
aaa
jl
inc
hlt
inc
pop
fxsave
add
cmp
int3
sbb
je
out
movsb
push
push
xlat
pop
or
test
sub
jae
cmp
mul
xchg
movsb
and
dec
jmp
add
out
call
inc
lret
lock
mov
inc
test
sub
mov
popa
jo
outsb
loope
rcrb
sbb
push
inc
mov
mov
sahf
out
inc
pusha
and
sbb
cltd
push
leave
dec
pop
mov
rcll
lods
mov
or
fidivrs
sti
push
cmpl
push
aad
adcb
push
scas
call
cli
inc
add
sub
lods
xchg
xlat
add
push
jl
xlat
pop
clc
push
push
push
out
hlt
lods
movl
fwait
push
dec
cltd
movsb
loopne
fsubl
add
fnstcw
cmp
mov
js
call
call
pop
test
jg
call
xor
lock
imul
sbb
xorl
pop
and
shlb
sbb
cmp
pop
aas
test
xor
ret
int3
push
add
cwtl
std
and
outsb
sub
and
and
notl
mov
mov
js
inc
or
sub
cmp
dec
insb
idivb
push
pushf
es
push
sub
and
int3
sub
daa
sub
and
pop
movsl
ds
mov
mov
test
mov
dec
push
sahf
jmp
test
loopne
xchg
pop
pushf
es
mov
fwait
xor
sub
lea
insb
lock
scas
ds
jle
into
fcmovb
test
std
popa
add
push
lock
and
sbb
les
js
jne
aaa
stc
xor
leave
mov
sbb
jg
pop
daa
pop
jg
int
push
or
dec
pop
add
inc
sub
and
insb
sub
out
idivl
pop
add
sahf
adc
ds
add
mov
sahf
and
and
ss
cmp
test
sub
roll
mov
xor
testb
push
pusha
mov
adc
mov
pop
int3
lcall
mov
sub
or
lock
push
sti
lds
push
pop
shlb
int
fstpt
scas
add
test
icebp
mov
xor
adc
roll
jmp
mov
leave
clc
incl
jb
mov
movb
ret
add
and
pop
enter
cmp
mov
push
mov
jbe
ss
xor
sti
stos
adcb
cmp
sti
mov
mov
jb
pop
movsb
pop
inc
ret
xor
mov
jne
cmp
mov
jmp
dec
rorb
pop
loopne
push
enter
iret
push
into
mov
loop
mov
mov
rcrl
lock
in
add
sub
stc
negb
fldl
sar
lret
loope
mov
mov
xor
sub
pop
pop
mov
testb
insb
mov
pusha
cwtl
add
ds
or
add
inc
jns
pop
lock
add
test
push
ret
inc
in
shl
clc
mov
fidivrs
dec
repz
adc
add
test
jne
clc
dec
test
fidivrs
ljmp
lcall
xchg
stos
stc
and
mov
rcrl
shr
or
jno
lods
movl
jle
ja
cmc
jbe
inc
dec
add
loop
rcll
or
jne
outsl
aas
mov
cmp
scas
cli
jl
aas
adc
outsl
sub
ret
mov
test
into
add
into
jne
insb
or
pusha
inc
jbe
add
dec
push
dec
push
push
adc
in
pop
cli
negb
mov
push
add
imul
add
std
ret
enter
lea
push
stos
add
xchg
mov
test
mov
mov
sub
xor
test
jne
cmpb
hlt
je
cmp
jmp
lea
ret
dec
ja
loop
mov
out
rorl
mov
mov
repnz
jb
shrb
dec
js
lds
jo
incl
inc
mov
inc
cmp
jl
outsb
dec
pop
dec
jmp
inc
push
mov
aas
mov
add
sarl
mov
push
or
call
jo
push
testb
push
mov
clc
scas
jo
hlt
jle
mov
jne
or
inc
and
add
mov
jmp
lock
hlt
cmpsb
push
ret
pop
sub
mov
jbe
lea
mov
xor
mov
cmp
adc
and
call
jne
lods
iret
or
dec
mov
xor
and
pop
mov
fmull
sub
bound
ficoms
test
push
cs
insb
into
jecxz
sahf
and
mov
data16
push
mov
push
inc
in
pop
push
mov
mov
add
out
data16
ja
add
push
add
adc
hlt
mov
or
xchg
andb
mov
cli
aaa
sbb
mov
mov
pop
call
jmp
mov
daa
cld
and
pusha
sub
push
mov
mov
pop
push
dec
mov
jne
je
mov
decb
inc
mov
ss
push
push
push
les
andb
ret
jle
sub
xchg
ret
pop
jl
jg
dec
push
fsubrs
mov
cmp
insb
ss
std
pop
or
shl
sbb
mov
test
add
add
push
sbb
nop
jg
dec
inc
mov
lds
push
addb
fistpl
pop
div
int3
rcrb
pusha
nop
xchg
add
sbb
add
ds
xor
enter
fldcw
lods
cwtl
mov
mov
sub
cmp
mov
call
inc
jecxz,pn
or
mov
nop
push
mov
call
add
ret
scas
hlt
fmulp
pop
ret
sti
les
pop
xor
dec
cld
dec
mov
jne
rcll
push
fimull
clc
sub
loop
mov
ret
decl
or
dec
mov
adc
pop
jl
or
mov
lea
lock
push
push
or
decl
xor
shl
scas
rorb
push
ret
sub
jbe
mov
add
pusha
scas
ja
add
add
adcb
je
test
mov
mov
fists
fisttps
hlt
pop
xor
es
push
add
sbb
ret
push
add
pop
or
inc
push
add
vfmsubss
jb
rorb
xor
pop
add
adc
xchg
in
jl
add
push
push
les
push
mov
adc
cmp
mov
or
and
inc
push
shl
pop
add
and
mov
mov
call
icebp
add
or
and
cld
jmp
data16
hlt
sub
shll
mov
jae
ss
or
or
daa
mov
adc
fistpll
inc
and
jbe
in
xlat
rolb
jp
cmp
adc
enter
test
fisubl
daa
mov
outsb
fs
lcall
xchg
loopne
cli
or
mov
xor
sti
mov
mov
mov
rorb
pusha
outsb
xchg
and
ror
pop
icebp
loopne
mov
push
fcomip
insb
and
adc
push
pop
inc
sbb
jp
push
cs
ret
cmpb
xchg
mov
nop
mov
xchg
sbb
cmp
cmc
sub
outsl
mov
ja
pop
mov
xchg
clc
jle
xchg
push
sbb
cmp
lock
fimuls
rorb
cmpl
gs
jecxz
adc
sub
pop
cmp
shrb
jecxz
aam
sub
ds
push
and
scas
jno
push
or
dec
sub
xor
inc
dec
mov
inc
mov
std
mov
lret
cmpsb
roll
test
out
testl
decb
xchg
dec
les
xchg
clc
mov
inc
sbb
es
sub
mov
data16
mov
pushf
fdivs
pop
sbb
nop
sub
inc
fstpt
ljmp
cmp
mov
cmpsl
sub
shrb
lock
scas
cwtl
loope
adc
sub
call
cmp
inc
in
cs
add
test
push
in
adc
push
inc
addb
add
pushf
cmpsl
xor
fadds
notl
jbe
outsb
sub
cltd
notb
js
mov
mov
xchg
adc
mov
loopne
je
push
inc
cmp
jo
add
outsl
or
xlat
jne
push
push
xchg
or
push
jg
cwtl
adc
mov
aam
cmp
cmpsb
xor
hlt
gs
pop
adc
mulb
dec
mov
push
inc
pop
inc
in
sub
mov
sbb
int
adc
xchg
xor
push
mov
add
xchg
mov
sub
sti
adc
xlat
mov
sub
mov
pop
js
pop
sti
sbb
or
hlt
xor
sti
std
jl
ja
add
add
lods
push
adc
mov
jge
jmp
in
adc
or
sub
mov
sbb
dec
or
mov
mov
pusha
cmpsl
arpl
es
mov
sti
das
cmp
inc
xchg
jle
and
inc
mov
mov
fcoms
add
adc
movsb
or
scas
repnz
loopne
test
add
les
fdivl
xchg
push
in
outsl
cmp
ljmp
cmc
enter
and
add
loop
add
cwtl
pop
hlt
divb
fdivl
push
sbb
mov
outsb
in
cmp
jp
je
pop
sbb
in
movsb
gs
les
cmp
mov
lock
mov
sbb
jle
and
adc
data16
sbbb
ss
mov
stc
inc
movsl
mov
mov
add
lcall
dec
or
sarb
mov
mov
mov
sbb
sub
or
pop
dec
push
testl
mov
sub
add
imul
lods
fldt
es
subb
lahf
mov
cwtl
dec
mov
insb
add
adc
mov
rcl
subb
mov
mov
lock
sub
sbb
sbb
test
jo
jne
cli
push
add
or
push
push
add
jb
xor
fistpl
imulb
decb
in
push
leavew
sbb
stos
cmp
dec
lret
pusha
add
xchg
adc
repz
add
xchg
aaa
or
out
jbe
imul
push
or
clc
push
push
scas
pusha
jl
fadd
lea
push
aam
xchg
pop
push
loopne
add
fdivrs
pop
stos
mov
call
add
inc
mov
add
push
mov
and
imul
push
addr16
push
sahf
add
or
adc
mov
jbe
loopne
xchg
adc
mov
scas
jg
je
test
shlb
rclb
adc
rcrb
into
dec
leave
pop
daa
pop
push
push
aaa
rcrb
sarb
or
and
decb
nop
call
inc
addl
shlb
sub
hlt
aas
lea
insb
mov
add
arpl
jb
enter
push
clc
xchg
sub
add
call
cmp
fimuls
int3
stos
jp
push
in
add
sub
repz
sbb
mov
inc
pop
mov
inc
das
dec
xchg
cld
test
jae
inc
insb
jne
fdivrs
test
dec
add
adc
sbb
push
cmpb
and
xchg
xchg
xor
aad
cli
imulb
ficoms
ret
dec
leave
push
js
jl
mov
rol
xor
sbb
and
xor
pusha
aas
addb
out
insl
add
pop
call
imul
ja
mov
add
sbb
cs
mov
adc
mov
xchg
popa
add
mov
add
mov
dec
enter
adc
cli
pop
pusha
jno
call
cld
mov
mov
std
add
jge
jecxz
add
xor
push
or
mov
fisttpl
adc
adc
xchg
add
test
dec
outsb
or
jl
adc
xor
sub
xchg
and
mov
pushf
loopne
push
mov
loopne
rcrb
imul
xchg
je
loope
xchg
fstps
pop
jg
jno
sbb
cmp
into
lea
add
call
or
push
je
cwtl
inc
push
addb
mov
jmp
dec
andb
dec
pusha
mov
xchg
cwtl
fsubrs
or
mov
orb
adc
out
nop
dec
dec
add
sub
sbb
aas
rorb
pop
jae
scas
or
insb
loopne
loopne
in
push
call
std
inc
add
mov
test
adc
rclb
loopne
pop
ret
std
inc
sbb
ja
cltd
mov
add
scas
adc
in
addr16
jmp
cmp
xchg
push
xchg
fidivs
jae
orb
xchg
xor
out
loopne
jg
add
sbb
jne
bound
push
mov
into
test
data16
add
lea
inc
fneni(8087
push
mov
pop
or
clc
add
pusha
push
xchg
call
add
push
popa
push
test
punpckhdq
imul
dec
add
clc
mov
mov
movsl
leave
es
cmp
fimuls
lods
add
cmp
rcrb
mov
adc
bound
scas
clc
fildll
sbb
je
and
ds
je
lea
test
mov
add
mull
cwtl
mov
addb
push
clc
add
jb
or
es
xchg
adc
inc
je
mov
push
jmp
dec
jl
arpl
lods
pusha
or
adc
mov
addb
arpl
lret
adc
mov
loope
xchg
cmp
pop
ljmp
cltd
mov
xchg
bound
nop
pusha
cli
mov
adc
popf
or
pop
jmp
cmp
cli
mov
or
and
lock
retw
loopne
adcl
adc
sub
bound
add
ljmp
xor
decl
sbb
call
dec
shl
cld
pusha
or
add
adc
mov
cmp
dec
fsqrt
into
subb
pop
mov
dec
js
loop
in
loopne
pop
fidivl
push
push
ret
push
pop
sub
idivb
or
fs
pushl
inc
pop
push
xor
xchg
mov
test
movsb
or
hlt
loopne
mov
adc
mov
notb
faddl
xor
mov
adc
mov
adc
push
or
and
or
inc
mov
pop
pusha
and
js
call
ret
inc
loopne
ret
jnp
mov
cmp
lock
cwtl
pop
or
adc
dec
mov
sub
push
push
xor
mov
mov
cmp
or
in
push
shrb
sbb
push
xor
inc
dec
xor
adc
cmp
sbb
xor
pop
jo
mov
sub
jg
sub
mov
or
pop
and
test
inc
inc
shll
add
dec
aaa
sbb
xor
lock
dec
inc
push
add
mov
hlt
and
fbstp
test
mov
shlb
jecxz
jnp
lock
mov
add
pop
hlt
lret
ret
add
cltd
add
ja
cmp
nop
sbb
push
adc
lock
and
xor
shr
xor
cmp
add
sub
lea
fldl
push
in
fwait
add
push
jno
pop
cmp
mov
jo
call
sbb
into
lock
arpl
push
push
xchg
push
lock
lock
or
hlt
filds
pushl
or
push
adc
sub
xor
mov
ja
fcomps
mov
adc
mov
lock
lods
cmp
adc
mov
shlb
mov
or
inc
xor
mov
add
in
jo
mov
data16
clc
filds
icebp
pop
call
add
xor
bound
jne
xchg
pop
xor
push
and
lock
add
filds
push
add
js
or
movsb
mov
repz
inc
sti
in
push
mov
ljmp
andl
mov
xor
adc
push
push
std
mov
shlb
jge
sbb
xor
or
orb
je
enter
inc
adc
adc
inc
fdiv
cli
fbstp
or
add
xor
sti
jb
test
push
subb
movsl
ljmp
mov
test
pop
cmc
pushl
and
hlt
add
adc
cmpsb
and
je,pt
pop
inc
mov
dec
and
and
subl
mov
adc
cmp
mov
test
or
pop
jno
imulb
gs
push
ret
adc
lret
and
inc
lods
std
andb
mov
mov
sarb
xchg
mov
or
insb
mov
push
mov
add
pusha
mov
fisubrs
push
add
mov
idivb
or
and
and
mov
adc
test
mov
stos
sub
fbstp
in
xor
repz
gs
pushl
cmp
fwait
lea
push
xchg
add
lods
lock
aam
add
jne
fistpl
sar
xor
call
push
cwtl
inc
les
push
pop
xor
and
sub
decl
and
push
adc
jne
popf
sti
add
add
dec
add
push
inc
test
push
dec
dec
cli
sub
rorb
int3
stos
lods
shlb
stos
or
push
fisttpl
mov
je
mov
add
xor
jo
ret
inc
pop
sbb
lea
xchg
scas
mov
lea
lods
sbb
add
inc
jge
out
orb
mov
add
or
cmp
test
aas
add
push
sub
icebp
cmp
decl
inc
mov
fs
or
pop
call
rorb
inc
or
or
mov
adc
sbb
mov
xchg
roll
xor
push
pop
movsb
sbb
and
sbb
or
mov
jg
test
es
ja
ret
cmp
jo
fs
cli
lahf
xor
fistl
dec
add
wbinvd
pop
add
fneni(8087
or
mov
in
jg
nop
jle
push
push
add
test
xchg
adc
movsb
mov
mov
cmp
mov
sti
mov
out
jo
out
push
push
xor
add
xor
fdivr
sbb
sar
mov
jo
pop
xor
add
test
pop
inc
mov
dec
mov
add
call
inc
testb
add
jp
xor
xor
xor
add
xlat
jno
ja
add
or
ljmp
xchg
stos
mov
test
adc
mov
fs
nop
and
xchg
negl
adc
cmp
and
or
hlt
or
mov
push
inc
bound
or
inc
inc
or
xor
add
cmp
jo,pt
inc
lock
add
adc
mov
rorb
shrb
cmp
sub
push
clc
lea
call
sbb
adc
pusha
mov
inc
adc
pop
mov
xchg
and
add
orb
jg
fs
mov
push
xor
imul
xchg
repnz
outsb
jne
loopne
pushf
xor
mov
jmp
pop
test
out
add
jp
leave
adc
jg
push
jne
je
call
int3
push
outsl
jp
das
pop
sub
and
jnp
fisttpl
test
lods
in
lcall
jb
out
xor
xchg
jo
push
push
add
aaa
cld
call
jmp
adc
ficoml
jge
cwtl
xor
mov
out
xor
not
xorb
icebp
mov
incl
lcall
sbb
lret
mov
cli
push
jmp
and
outsl
xor
mov
mov
mov
sub
fdivrp
aaa
cmp
push
mov
int3
or
sub
adc
pop
jb
mov
xchg
and
jbe
testb
or
inc
and
pop
andb
sbb
popf
in
mov
lds
mov
jge
xor
mov
rcrl
cmp
lock
mov
testl
xor
add
insl
shrb
inc
xor
stos
call
push
roll
mov
pop
popl
nop
cmp
xor
xor
add
add
cmp
adc
test
pop
adc
loopne
inc
cwtl
mov
mov
xchg
subl
mov
or
sub
ficompl
pop
stos
sti
ljmp
add
push
mov
and
and
fiadds
lds
mov
test
out
or
add
mov
inc
adc
andb
jg
addb
or
xorb
repz
test
addb
hlt
mov
fiaddl
fsubrp
add
mov
sbb
xor
push
cmp
sar
ja
mov
sbbb
adc
das
add
push
sub
imul
add
adc
inc
inc
cmp
mov
mov
imulb
dec
cmp
xorb
or
sub
loope
fadds
orb
orb
rorl
divl
jo
inc
and
mov
ds
xchg
sub
fcoms
mov
and
scas
mov
jmp
mov
push
rclb
inc
ret
jnp
sub
pop
or
sub
rorl
or
ret
push
aad
push
stos
mov
shrb
str
push
ret
add
jg
or
push
or
mov
ret
sub
or
push
repnz
mov
loopne
adc
push
push
sbb
addl
int
push
les
and
or
push
decb
adc
jg
and
xor
xor
fucomi
lcall
es
xor
sub
adc
inc
sub
mov
test
shrl
mov
sub
hlt
shll
add
outsl
xchg
jo
call
ds
aas
adc
mov
add
test
add
dec
push
xchg
jb
or
sub
sti
rolb
xchg
ljmp
outsl
loop
sub
nop
adc
scas
push
dec
mov
rolb
inc
in
les
sarb
pop
dec
movsb
add
dec
dec
cs
mov
xor
movsl
add
dec
add
push
movsl
ljmp
rcll
cld
je
icebp
push
cmp
mov
cmp
fistpll
adc
insb
call
push
addb
push
divb
push
lds
add
pop
rclb
rolb
rcrb
sbb
and
rcr
hlt
push
jl
adc
lret
movsl
add
dec
or
inc
add
cmpsb
pop
push
pop
or
and
push
loopne
jg
push
mov
lods
push
push
add
decl
add
pop
or
stc
popa
sbb
add
add
ds
add
and
inc
loopne
cmp
dec
sub
imull
cmp
and
adc
cld
lea
add
enter
sahf
adc
mov
fiadds
jmp
bound
mov
fsubrl
pop
and
dec
insb
pop
mov
inc
push
cmp
add
push
jecxz
and
pop
sub
fiadds
mov
or
clc
outsl
pop
and
add
nop
or
pusha
inc
out
push
popa
addr16
test
push
xchg
or
dec
sub
pop
add
fsts
mov
xchg
iret
mov
addb
xchg
add
push
loopne
loope
xor
pop
pop
pop
adc
inc
cld
fs
xor
je
push
jp
sub
out
pusha
and
lods
ret
add
add
and
iret
repnz
loop
cmp
mov
xor
mov
xor
loopne
or
loopne
inc
lds
mov
xchg
cmpsb
or
lods
mov
pop
or
movsb
add
mov
jmp
adc
adc
sub
rcll
jp
mov
dec
pop
dec
mov
inc
and
pop
mov
call
push
cmovp
mov
mov
loopne
lret
inc
dec
ljmp
out
mov
or
pop
or
push
adc
fists
lods
pusha
or
ret
add
cs
push
xor
loopne
into
inc
inc
xchg
sub
lock
shl
pop
adc
push
pusha
add
mov
add
arpl
outsl
fwait
cmpsb
cmp
sbb
xchg
or
bound
and
or
add
out
loopne
fcomi
mov
lock
sbb
out
adc
or
fcoms
push
sbb
jg
hlt
addl
loop
or
jl
loope
cwtl
jp
mov
xor
or
mov
push
mov
pop
loopne
js
aas
pop
ret
push
add
les
or
loope
add
and
mov
pop
xor
pop
xchg
out
lods
loope
jg
or
pusha
rorb
cmpsl
loopne
sti
jae
jle
cmp
out
movsb
rolb
add
std
mov
pushf
loopne
mov
es
hlt
add
into
loopne
add
inc
movsb
mov
jmp
mov
cld
pusha
add
add
mov
add
jo
or
and
jle
or
pop
and
sbb
add
daa
push
push
stc
data16
in
mov
sub
popa
popa
lods
mov
ret
scas
insb
mov
pop
mov
pusha
stos
stos
cmp
push
add
or
mov
ret
shlb
mov
popaw
es
test
mov
fs
les
outsl
add
dec
ficompl
add
xchg
mov
jbe
data16
nop
sbb
mov
pop
dec
fists
push
sbb
or
dec
mov
loopne
gs
jne
add
popf
loope
pushf
jl
inc
mov
in
cmpsb
mov
or
push
dec
hlt
cmp
aas
add
xor
out
lock
clc
stos
jb
jmp
ljmp
or
jg
sbb
pop
fs
push
pushl
adc
loopne
xor
or
int3
inc
ljmp
push
mov
adc
add
sub
or
xor
xor
jmp
xorb
xchg
pop
decl
out
push
mov
cltd
mov
push
jp
dec
jbe
or
jb
mov
ljmp
adc
call
rorl
call
das
inc
orl
movsl
test
je
call
ljmp
xchg
fistpll
pop
pop
jg
lock
addb
inc
ret
lock
cltd
sar
xor
jo
push
je
lock
lcall
add
or
stos
pushw
orb
mov
hlt
fisttps
xor
push
cmpsl
mov
sbb
icebp
sbb
sbb
inc
adc
jb
push
ss
test
mov
insb
sbb
or
pop
push
daa
xor
clc
rcll
jbe
movsb
stos
push
nop
jbe
inc
into
jp
sbb
leave
and
fsubs
loop
in
or
and
cld
sbb
rcll
jmp
sub
or
aas
or
push
lcall
mov
cli
arpl
xor
shlb
adc
test
dec
shrb
call
loopne
xchg
test
scas
scas
xchg
addl
jg
cwtl
movsb
push
lock
pop
inc
incl
pop
mov
stc
push
add
add
mov
outsb
loope
or
mov
push
stos
aaa
add
sbb
mov
adc
pop
clc
mov
loopne
ljmp
mov
and
cli
mov
adc
cli
pop
cli
dec
and
push
ss
inc
lcall
mov
out
inc
dec
mov
mov
push
pop
adc
inc
and
inc
iret
icebp
sbb
int
adc
or
es
or
dec
lock
adc
movsb
pusha
mov
shl
mov
xor
and
sub
inc
adc
push
jmp
std
mov
mov
pop
mov
call
xor
push
lock
push
add
rorb
dec
fisttps
pusha
xorl
inc
aaa
mov
std
xchg
sti
bound
pop
les
cmp
rcrb
out
add
jge
test
into
xor
push
dec
jo
lock
xchg
incl
xor
push
mov
call
jge
mov
hlt
push
adc
jo
divb
aaa
test
mov
mov
inc
mov
jp
sub
and
ret
cli
push
inc
add
jno
dec
adc
pop
cli
decl
sub
jp
pop
lea
pop
shrl
or
pop
loopne
add
pushl
inc
call
sbb
call
sub
scas
push
push
mov
xor
jo
push
adc
xor
ret
mov
pop
dec
and
add
loop
xchg
xor
adcl
clc
mov
psubd
incb
add
ret
mov
stos
xor
push
jae
xor
inc
hlt
mov
xchg
xor
repz
insb
popa
mov
jb
icebp
push
mov
and
aam
icebp
js
add
rolb
sbb
scas
push
push
sbb
or
mov
or
or
cli
in
adc
push
mov
inc
push
bound
scas
loope
nop
sbb
sub
es
adc
dec
stos
mov
jo
mov
dec
pop
or
xchg
dec
lock
mov
push
mov
test
das
test
pop
adc
inc
repz
inc
push
inc
pop
jge
mov
lods
mov
push
les
ret
add
push
lods
push
fsub
jbe
sbb
clc
repnz
nop
cmc
dec
rolb
xor
mov
loope
xchg
scas
or
icebp
dec
jne
ss
test
xor
xor
icebp
daa
xor
call
sub
cld
xchg
cs
push
mov
cmc
xchg
cmc
mov
or
aaa
mov
xor
mov
xor
nop
or
hlt
or
iret
ret
push
inc
inc
dec
cmp
mov
adc
lock
aad
mov
rclb
xor
out
inc
lock
or
mov
call
xor
push
inc
sbb
sub
je
hlt
mov
inc
sbb
add
and
push
jbe
cwtl
adc
shlb
mov
hlt
push
adc
and
test
stos
decl
or
mov
mov
inc
mov
xor
fnstenv
andl
jg
fidivs
xor
icebp
add
add
jo
xchg
jo
push
xor
mov
mov
mov
mov
jne
clc
mulb
ljmp
xor
jo
ja
mov
call
add
dec
add
sbb
outsl
pop
pop
enter
jb
push
mov
jo
push
mov
lea
inc
divl
test
fadds
cmp
mov
add
pop
and
or
or
outsl
andb
lcall
add
fmull
adc
outsl
push
outsb
call
dec
clc
pop
mov
inc
fs
inc
and
mov
and
jl
and
pop
icebp
pushl
inc
or
xor
inc
test
mov
adc
das
mov
xor
cmp
pop
cld
mov
jo
test
xor
adcb
and
negl
movsl
inc
add
xor
test
inc
mov
pop
or
loope
decb
cmp
xor
inc
jo
bound
mov
and
in
ret
mov
and
ss
outsl
push
hlt
and
push
ljmp
cmp
add
mov
gs
inc
mov
scas
pop
xor
mov
std
mov
sbb
inc
data16
divl
sub
and
call
mov
jo
call
or
call
or
in
jle
je
fnstcw
xor
xor
push
mov
add
add
cld
call
push
mov
cmp
adc
cmp
add
xchg
mov
bound
loopne
icebp
mov
cld
jge
xor
hlt
dec
and
inc
orb
test
nop
cmp
jg
dec
and
cld
lea
xor
clc
in
insb
push
stos
or
rorl
mov
push
add
push
ds
aad
orb
mov
or
out
inc
daa
test
repz
test
mov
clc
add
adc
call
dec
mov
hlt
mov
cmp
lock
inc
lea
loopne
push
loopne
mov
js
leave
shlb
inc
add
loop
add
cmpsb
lret
iret
push
jae
pop
sbb
sub
mov
cmp
test
les
pop
mov
push
sub
movsl
loop
sub
mov
or
repnz
clc
outsl
and
orb
xor
test
inc
add
insb
test
xor
sub
outsb
jl
hlt
push
mov
inc
lods
bound
sbb
je
pop
je
add
jno
push
dec
xor
testb
lock
pop
aam
insb
jp
sbbb
push
push
or
insb
push
xor
bound
cs
sbb
cmp
push
add
adcb
or
mov
int3
es
push
adc
or
add
sahf
mov
or
cltd
adc
cmp
or
shrb
mov
test
inc
mov
mov
adc
push
pop
ret
int
or
outsb
mov
fmuls
test
and
enter
mull
aam
rorb
inc
cs
sbb
cli
inc
inc
sbbb
mov
sbbb
lock
or
push
mov
lea
mov
testl
inc
mov
cmp
mov
int3
add
imul
pop
push
test
push
mov
stos
aas
xchg
cmp
dec
and
call
push
std
or
jo
or
or
xchg
cmp
sub
inc
or
fisttpll
cld
xor
mov
call
add
call
xorb
sbb
stos
sbb
cmc
sub
shrl
repz
adc
or
popa
and
call
inc
pop
adc
lcall
dec
loop
test
or
mov
sub
call
adc
xor
cmp
insb
scas
or
and
es
xor
mov
inc
sarb
jmp
dec
ljmp
jle
add
inc
push
push
dec
add
add
lcall
xor
rcrb
mov
adc
insb
cld
dec
add
fcomi
mov
push
xchg
das
jp
scas
lea
sub
cmpsb
mov
mov
push
mov
shrl
pop
nop
adc
add
and
rorl
xchg
cs
ljmp
inc
pop
dec
andb
push
jle
fistl
adc
cmpb
and
mov
lods
fcoml
adcb
shrb
add
push
jge
jbe
or
lds
call
pusha
mov
out
add
add
mov
adc
push
in
insb
cli
jge
adc
sbb
rorb
push
add
sub
and
out
mov
aas
sub
scas
push
dec
lret
push
or
mov
je
loopne
jl
adc
ljmp
push
idiv
adcb
movsb
rolb
inc
xor
das
dec
cmp
sbbl
dec
shl
jbe
mov
push
mov
loopne
test
cmpsb
or
inc
inc
mov
scas
cs
lea
outsb
cli
and
jl
dec
out
out
push
and
jg
movsb
call
fs
adc
fsubrs
cmpsb
or
adc
cli
add
pusha
push
xchg
lcall
aad
dec
enter
add
jae
sub
xchg
or
inc
push
movsl
jo
loopne
adc
sbb
mov
adc
mov
or
adc
incl
fdivs
loopne
push
push
xchg
sub
incl
cmp
pop
sbb
test
cmc
inc
loope
mov
jne
loopne
xor
and
cmp
and
ret
mov
push
jmp
and
push
add
mov
sub
add
bound
leave
sbb
lock
call
sub
aas
xor
xchg
ret
sbb
shrl
rclb
outsb
xor
loopne
stc
cmpb
sbb
push
je
push
push
jmp
or
movsb
fmuls
inc
sti
add
push
fdivs
loopne
orb
sub
jo
imul
mov
std
fdivrs
sbb
jne
jbe
add
incl
shrb
lea
cmc
inc
jnp
subb
add
jl
push
and
xchg
or
cmp
lock
xlat
fisubrl
add
jmp
mov
jg
inc
pusha
pushf
icebp
js
mov
push
cmpb
sti
in
fwait
loop
inc
pop
hlt
je
jmp
or
mov
loopne
stos
xor
or
dec
push
inc
ljmp
push
lret
addl
xchg
bnd
dec
mov
mov
loopne
pop
lds
test
cld
cmpl
add
les
add
dec
xor
sti
sub
or
push
push
loop
lea
push
push
jp
add
pusha
mov
add
cmp
push
test
nop
in
dec
std
loopne
call
cs
jmp
xchg
inc
outsl
pop
or
mov
shlb
pop
adc
loopne
loope
push
nop
inc
sub
and
mov
test
push
sbb
dec
mov
mov
push
add
hlt
loopne
lcall
dec
push
popa
inc
ret
add
into
sub
je
push
fs
jmp
push
adc
xor
lds
cmpb
mov
sub
pop
ja
inc
mov
cli
pop
daa
inc
mov
scas
mov
outsb
addb
jle
xchg
pop
insl
test
les
loop
inc
test
scas
mov
push
js
dec
xchg
push
add
xor
mov
adcl
loope
adc
cmp
test
push
jne
mov
add
je
xor
xchg
js
jne
add
stos
sub
or
je
adcl
inc
mov
fldcw
adc
jmp
clc
pusha
inc
and
loopne
mov
mov
loope
xchg
loop
jl
push
add
clc
not
and
sbb
add
outsb
dec
mov
pusha
mov
andb
mov
jne
inc
je
sarb
xor
push
mov
ds
imulb
arpl
das
pushf
dec
add
rorl
scas
push
ret
scas
call
push
outsb
fdivrs
je
arpl
enter
and
lea
or
xchg
js
pop
ljmp
ds
je
or
xor
pusha
adc
push
pop
mov
mov
lock
fidivl
and
mov
andl
ret
sub
xor
adc
xor
ljmp
fs
lcall
insb
jecxz
adc
rep
push
scas
mov
aad
je
les
sub
xchg
mov
clc
scas
push
jo
pop
add
or
sahf
jle
mov
movsl
mov
test
hlt
xor
cltd
and
add
cmpsb
pop
add
pop
add
outsb
or
sar
cmp
pop
cmp
je
or
add
rolb
rol
xor
xchg
adc
inc
push
xor
cmp
sub
lock
push
or
mov
push
inc
ja
and
in
mov
shrb
loope
js
nop
ja
push
mov
jo
lea
or
mov
out
clc
xchg
jne
sbb
xor
or
out
jno
dec
test
arpl
or
sub
sub
jp
subb
iret
call
or
pop
fsubr
add
mov
mov
add
lock
adc
test
and
dec
mov
or
and
mov
push
xchg
cmc
call
ficompl
jo
or
jg
stos
add
and
adc
movsl
ds
jo
sub
mov
xchg
pop
push
outsl
xor
sub
addr16
sub
pop
imul
mov
mov
mov
add
jne
xchg
fimuls
or
cld
loopne
lods
ljmp
adc
cmp
dec
pusha
aas
mov
cmp
mov
jo
ret
xor
dec
jo
ljmp
add
add
lret
mov
push
cld
jnp
xor
pop
mov
cmp
and
out
mov
push
cmp
xchg
and
ss
subb
data16
je
movsl
push
dec
jb
ss
call
lea
cltd
lcall
adc
push
stc
mov
push
xchg
ficoms
dec
insl
and
jb
sub
scas
xor
lock
or
and
push
hlt
add
sbb
fistpll
xor
and
ja
add
pop
and
pop
mov
push
mov
add
mov
scas
mov
stc
push
data16
divb
mov
fsubrl
in
mov
sub
ja
pop
add
ja
or
aas
cmp
dec
mov
es
movsbl
pushw
pop
jb
cmp
xchg
cmpsb
cmovno
add
decl
add
jg
xor
push
push
or
xor
mov
sub
push
cmp
push
dec
loop
pop
fmull
push
jbe
cmp
lods
dec
call
cmp
jbe
lcall
mov
push
jb
add
mov
cmp
jb
xorb
inc
repz
icebp
or
ds
jg
jne
in
je
sub
iret
enter
sarb
sbb
aas
inc
mov
pop
loopne
dec
insb
adc
pop
cmp
stos
or
push
mov
hlt
rorl
push
mov
cmp
jp
stc
cmp
jb
cmp
fbld
or
cli
inc
inc
lea
aam
cmp
das
add
xorb
sub
orb
shrb
xor
jo
je
push
xor
cs
jmp
sub
push
mov
and
add
mov
out
push
sbb
scas
sub
mov
cld
inc
add
mov
jne
xchg
subl
mov
adc
hlt
cmp
lea
mov
out
pushl
xor
lcall
cmc
mov
ret
xor
xchg
jo
or
mov
push
or
cmp
loope
push
loopne
es
sbb
jle
mov
outsb
incl
loope
subb
mov
jne
adc
mov
or
adc
jo
sarb
fistps
push
cli
lock
iret
cmp
mov
push
lods
inc
push
xor
mulb
lock
inc
mov
xor
add
das
mov
mov
mov
rorl
jl
inc
jbe
ret
ret
adc
shl
or
sarl
xor
shlb
inc
add
subb
call
xor
add
les
lods
add
mov
or
pop
push
add
movsl
mov
adc
lea
aam
mov
dec
or
lahf
lock
add
popa
test
add
mov
lods
or
dec
jmp
add
or
mov
add
push
mov
cld
mov
sarb
cmp
add
push
stos
in
cmp
in
mov
mov
jmp
jmp
out
mov
or
push
dec
pusha
aad
mov
add
lock
test
repz
adc
std
cmp
mov
jbe
mov
call
or
or
and
je
and
ja
enter
adc
jo
mov
cwtl
xor
adc
push
pop
movl
in
inc
push
jmp
call
ds
xor
bound
hlt
pushl
push
clc
adc
smsw
or
cmpsb
inc
loop
sbb
pop
mov
cmp
or
mov
or
call
pusha
cld
je
into
call
mov
arpl
dec
insb
sti
outsb
mov
add
les
shl
sbb
sub
sub
and
add
shrl
sbb
cmp
mov
movsb
sbb
call
pop
lea
push
clc
pop
xor
sarb
in
js
lock
es
test
mov
mov
xor
jl
cld
push
nop
jb
cld
scas
push
lods
loop
loop
adc
jl
cs
push
jb
push
and
jne
cmp
rolb
mov
mulb
out
pop
cld
xor
xor
sahf
sub
sti
add
ret
sbb
cmpl
mov
in
and
jbe
mov
ret
imul
dec
push
or
cmp
call
add
insb
std
pop
aaa
ret
clc
add
icebp
lret
adc
lods
and
mov
mov
mov
cmpw
jo
jbe
xchg
xchg
pop
jne
incl
std
dec
push
and
push
inc
add
cmp
pop
idivb
jo
lods
das
xor
jo
jg
jno
lret
add
ljmp
fistl
sbb
xor
clc
add
mov
scas
call
mov
jge
push
and
addb
loope
cld
mov
add
and
sub
add
push
pushl
sti
cmp
jne
pop
ret
xchg
lcall
jbe
add
je
xchg
iret
call
sbb
pop
jp
dec
fists
or
arpl
mov
push
fsubrs
xchg
mov
rolb
push
adc
js
push
faddp
outsb
test
mov
ret
dec
cmpb
pop
mov
neg
add
jge
xchg
sbb
add
int3
or
testb
dec
cmp
cmp
repz
xchg
ret
inc
cmp
cmp
and
sub
cmp
andl
cld
jno
jno
add
cmp
jp
popa
test
subl
add
mov
cmp
fcompl
jne
inc
jl
je
add
jle
jae
add
cwtl
inc
lock
sbb
jb
flds
rcll
add
ljmp
mov
out
push
sub
fsubs
cmpsb
cmp
mov
test
or
ss
movsl
pop
xchg
add
ret
or
dec
pushf
sti
loop
ret
pop
xorb
stos
pop
test
xchg
movsl
add
jmp
and
and
pop
xor
mov
cmp
and
incl
andb
sub
incb
je
sub
je
imul
add
inc
inc
push
push
jbe
add
adc
add
push
dec
mov
es
push
add
inc
push
call
add
orb
inc
and
mov
ret
inc
sub
dec
cmpsb
sub
aas
lods
adc
int3
push
cmp
xchg
or
aaa
pushf
sarb
push
rcrw
and
sub
cmp
inc
shrb
call
ja
inc
and
push
outsb
or
clc
test
sar
cmp
adc
es
xchg
xor
call
data16
or
pop
add
sub
or
mov
and
cmpb
and
cltd
mov
roll
xor
lods
adc
test
ja
jb
and
add
test
das
or
cmp
enter
push
cmpsb
cmp
xchg
add
ficomps
insl
mov
inc
and
and
ret
and
iret
jbe
cmp
bsf
lretw
je
or
les
sti
lretw
dec
push
push
fisubs
mov
ljmp
or
inc
nop
sarl
rorl
lea
lods
fmuls
adc
les
push
sbb
jmp
shlb
subb
stos
mov
insb
shlb
sbb
mov
push
stos
push
nop
push
xor
xchg
test
call
mov
jno
and
adc
cmp
sti
jl
sbb
mov
pop
ret
jmp
shlb
add
subb
adc
aad
push
add
adc
pop
out
mov
mov
xchg
jne
pop
xor
or
adc
adc
divl
rol
insb
std
sub
aaa
fdivrs
push
fbstp
data16
xor
in
leave
push
data16
and
movsl
hlt
mov
mov
and
or
lcall
sub
enter
mov
xor
mov
add
inc
dec
mov
jle
adc
aaa
sbb
loopne
jb
sbb
add
cwtl
daa
cmc
or
cmp
rorb
movsb
mov
test
lea
test
fsubl
or
lret
push
pop
xchg
test
test
or
loopne
fiadds
fimull
ds
std
jne
frstor
sub
dec
pop
push
call
fisttps
inc
sbb
add
sbb
test
shlb
add
out
call
pushf
loopne
out
jecxz
out
sbb
cld
sub
pop
leave
test
inc
sbb
je
pop
jecxz
xor
lcall
mov
dec
pushf
jbe
add
adc
lcall
aas
shlb
call
jp
sbb
mov
add
stos
push
or
adc
call
into
or
ljmp
icebp
data16
or
jns
mov
es
or
inc
push
fs
push
xorb
outsb
pusha
xchg
out
adc
sbb
pusha
add
push
lock
or
push
loopne
or
jne
sub
mov
xor
push
cld
pop
add
testb
je
dec
outsl
or
je
loopne
mov
mov
lock
aam
xchg
inc
adc
pusha
pop
inc
and
shld
xchg
in
lea
inc
xor
add
mov
pop
cmc
xchg
xor
loope
pusha
inc
loopne
and
aad
or
int
pop
fbld
andl
jecxz
adc
mov
adcb
adc
shll
mov
mov
int3
cmp
cmpsb
add
mov
add
call
cltd
inc
xor
xor
jmp
jb
inc
jle
popa
pop
pop
pusha
sbb
faddl
pop
loopne
sub
fadds
sub
and
add
add
movsb
imul
loope
dec
push
adc
std
data16
rcrb
lods
sub
dec
xorb
sub
in
and
sar
fisttps
adcl
jne
adc
adc
push
loope
push
jecxz
pusha
rcrl
dec
add
std
or
data16
shrl
fwait
sub
ficompl
loop
sub
and
add
push
push
das
pop
loopne
sub
mov
les
incl
insl
pusha
add
push
or
stos
and
xor
dec
ds
jl
pusha
mov
cli
testb
push
and
scas
mov
les
jl
add
and
pop
or
add
pop
or
push
sbbb
push
ss
pop
loopne
or
jmp
into
ljmp
shr
jp
adc
inc
jmp
pop
adc
add
je
push
push
jp
jmp
xor
in
sub
or
loope
push
loopne,pn
out
loopne
inc
add
xor
in
push
js
cmpsb
sub
mov
lock
fiadds
sub
incb
sbb
push
test
add
add
in
aaa
add
lret
pop
incb
fisttpl
add
mov
adc
add
scas
mov
jl
add
mov
lea
or
inc
dec
sub
loop
mov
add
jmp
mov
adc
stos
movsb
mov
stos
rclb
push
mov
ja
rolb
push
jmp
adcb
push
pop
imul
and
adc
sbb
inc
dec
insl
incl
add
or
out
push
mov
add
push
sub
jg
notb
adc
test
mov
ror
lock
mov
mov
aaa
andl
mov
lock
xchg
jp
inc
or
nop
push
or
gs
cmpsb
mov
stos
dec
lea
add
sar
outsl
out
xchg
adc
jle
add
jne
adc
add
or
iret
add
ja
lock
data16
xor
outsl
or
inc
push
mov
add
jne
xor
add
mov
jle
cmp
lock
cltd
imul
or
cmpsb
cltd
add
shl
data16
xchg
cmp
xchg
jne
add
adc
aam
inc
add
and
and
jmp
imul
fildl
or
pop
setne
or
adc
decl
mov
lea
ret
or
sbb
or
cltd
xor
sti
or
push
icebp
add
xor
and
ljmp
dec
jmp
jp
mov
sbb
mov
aas
or
lret
add
data16
iret
mov
jmp
mov
add
je
insb
or
aam
jp
pusha
jp
mov
or
jmp
lcall
mov
sub
xlat
jb
or
xchg
repnz
cmp
mov
adc
stc
xor
pop
xorb
incb
icebp
or
test
mov
cltd
sub
repnz
idiv
push
xchg
aam
mov
roll
aaa
jo
mov
or
or
pop
lock
and
sub
jg
cmpsl
je
clc
inc
je
sub
aaa
push
or
add
mov
test
or
incl
je
mov
lea
add
mov
addr16
add
push
xor
xchg
adc
push
inc
jmp
dec
add
adc
mov
adc
dec
mov
mov
xlat
add
sbb
hlt
mov
and
xor
push
jmp
in
adc
mov
jae
lock
or
mov
jbe
jmp
jecxz
nop
sub
jo
enter
mov
jb
testb
and
push
push
mov
mov
add
icebp
cmp
sbb
incb
xor
add
ljmp
addl
sbb
mov
adc
fnsave
jmp
cli
out
push
pop
js
push
es
push
es
mov
adc
out
cmp
jmp
or
xor
std
xchg
or
aaa
repnz
divb
js
outsl
outsl
or
mov
sub
add
insb
jmp
lahf
lock
sti
data16
imul
add
push
inc
jl
sti
push
out
jmp
cs
mov
mov
loopne
in
sub
jmp
and
idiv
popa
pop
push
xor
hlt
cs
sbb
pusha
jmp
mov
sbb
jb
jne
ret
push
sub
cld
mov
shll
ljmp
add
xchg
aam
adc
ds
lcall
test
jge
xor
dec
and
dec
fildl
popf
repz
xor
shll
das
cmp
sbb
adc
pop
pop
mov
push
lret
fildll
fwait
mov
push
mov
adc
or
lock
mov
ret
repz
cli
fwait
push
lock
mov
aad
add
mov
pop
xor
add
and
push
sbb
iret
sub
outsb
push
jo
jmp
mov
test
or
xor
push
lret
push
rclb
cmc
jle
cmp
fisttpl
xchg
jl
idivl
psllw
jno
add
orl
jle
push
or
inc
inc
jle
fldl
push
shl
add
sbb
rcl
inc
jnp
push
and
xchg
gs
lcall
xor
out
sbb
mov
icebp
or
mov
cmpsb
or
push
and
push
jb
or
andb
shrb
sti
add
dec
mov
loopne
or
lcall
inc
xlat
dec
arpl
ficoml
int3
mov
mov
cmpsl
insb
fdivl
fidivrl
ret
xor
stos
in
pop
aas
or
call
fisttps
xor
pop
nop
xor
jnp
pop
xor
adc
lock
lret
sbb
mov
inc
js
ss
das
stos
adc
mov
in
js
jo
test
dec
mov
pop
in
inc
mov
imul
fmull
loope
fs
stos
and
jno
div
dec
out
pop
clc
outsl
inc
sbb
mov
je
inc
mov
loop
pop
adc
jno
jo
jno
dec
sbb
add
test
xchg
mov
inc
and
push
push
xchg
lods
loope
les
outsb
enter
fs
sub
adc
or
xor
jae
or
pop
pusha
mov
jmp
dec
inc
or
sbb
inc
sub
repz
add
push
pushf
jmp
adc
lds
cld
icebp
push
pop
mov
push
xor
stc
mov
cld
add
sbb
pushl
out
sub
jno
xchg
jo
shlb
jbe
pop
hlt
pop
ror
inc
xchg
ror
lock
xor
cmpsb
inc
in
sbb
inc
jle,pn
adc
add
icebp
add
out
pusha
shrd
icebp
sbb
adc
filds
ja
pop
or
add
mov
nop
or
lock
adc
add
icebp
add
mov
sahf
xor
mov
sbb
mov
sub
stc
add
and
mov
or
nop
adc
inc
rcrb
call
sub
pop
mov
jb
push
or
sbb
imulb
sbb
pop
or
adcb
xchg
push
jmp
mov
repz
sbbb
fimuls
mov
adc
rcl
insb
mov
inc
jecxz
jmp
jbe
shlb
incb
or
dec
loopne
dec
push
hlt
mov
movsl
sbb
xchg
test
add
out
ss
orl
add
hlt
int3
rclb
mov
loopne
adc
outsl
push
jg
imul
filds
lods
mov
aas
inc
outsb
mov
decl
call
add
and
pop
addb
outsb
je
stc
je
fcomi
pop
mov
add
push
add
mov
orb
mov
pop
adc
and
adc
sub
xor
mov
and
mov
mov
insb
pop
xchg
mul
add
orb
cld
push
mov
dec
jno
andl
add
ja
js
and
or
xchg
hlt
or
dec
andl
fildll
push
cli
lock
test
push
movsb
or
hlt
sbb
cmp
xorl
test
or
inc
popa
xchg
inc
ret
incb
mov
and
cmpsb
mov
ljmp
and
sub
ret
xchg
sub
adc
lock
xchg
pop
ret
sar
insl
add
xor
stc
rolb
movb
ret
dec
or
adc
rolb
or
shlb
mov
jmp
jne
xor
bound
pop
push
adc
sub
imul
and
bound
push
sarb
jo
test
fs
rclb
rorb
cli
inc
mov
xchg
inc
shlb
popl
and
sub
push
inc
fsubrs
orb
pushl
sti
jle
adc
cmp
sbb
push
push
and
and
sbb
lds
jmp
js
rorb
jnp
mov
les
xor
mov
js
mov
inc
sub
and
and
ret
das
pop
mov
out
push
add
lds
repnz
stos
sbbb
or
enter
aam
mov
inc
pop
sub
jne
rorl
xabort
mov
sub
adc
inc
je
dec
mov
dec
rcrb
lock
and
out
imul
orb
push
inc
arpl
sar
lock
shl
add
mov
test
pop
icebp
das
add
jp
cmc
sub
mov
jmp
xor
cwtl
xor
or
nop
cmp
into
das
or
push
test
fstpt
jge
mov
js
shl
lock
adc
adc
repz
or
dec
ja
rclb
lret
jg
mov
cs
jp
cs
lock
loop
lock
hlt
loop
sbb
sbb
push
movsb
xchg
clc
divb
cs
sbb
cmp
inc
scas
mov
sbb
loop
push
add
sub
sbbb
test
push
mov
call
shlb
test
je
jl
and
jbe
call
mov
jbe
decb
push
rorb
sbb
movsb
sbbb
fs
icebp
sahf
subb
pop
xchg
das
sarb
jp
dec
hlt
jg
iret
jmp
mov
inc
call
aad
pusha
pushf
xchg
lea
in
push
pop
sbb
push
mov
test
dec
or
push
push
cli
pop
sbb
pusha
or
add
pusha
mov
add
mov
loope
ljmp
add
je
subl
orl
mov
ja
sbb
add
jmp
add
lea
or
pop
out
adc
enter
dec
call
push
aaa
add
inc
and
or
add
jmp
jne
xor
or
ret
jae
lods
roll
xor
decl
loope
mov
add
cli
inc
gs
insb
leave
add
or
pop
or
or
sub
filds
in
ljmp
ror
pusha
xor
repz
and
xor
adc
loopne
or
push
mov
js
mov
mov
pop
insb
adc
adc
or
jmp
test
or
lret
repnz
mov
lock
mov
je
push
jle
and
xlat
popa
jo
repnz
out
bound
loopne
sbbb
ljmp
push
addl
mov
jmp
or
fwait
loopne
popa
jns
adc
mov
loopne
fldt
shl
inc
sub
rclb
fidivrs
jg
push
add
fdivr
movb
add
mov
and
or
test
add
orb
cwtl
push
pusha
add
push
dec
sub
and
ss
das
mov
adcl
add
loope
adc
add
mov
lret
ret
pop
or
xchg
mov
sub
negb
push
dec
pusha
mov
ss
push
popa
or
lods
and
sub
movsl
clc
add
jg
jl
mov
xchg
or
jmp
stc
mov
and
imul
pusha
pop
sub
sbb
add
dec
cmp
and
add
loopne
adc
sub
mov
or
sarl
adc
jle
hlt
ds
cmpsl
pusha
shlb
add
pusha
stos
and
jg
or
push
mov
movb
stos
in
cltd
lret
xor
jnp
add
test
push
mov
aas
sbb
or
loopne
adc
in
ljmp
out
xor
push
jo
add
add
add
inc
push
imul
sub
adc
xchg
sbb
add
jmp
ret
and
pop
xchg
repnz
or
add
decb
mov
mov
js
outsb
cmp
sub
ss
cmp
test
movsl
decl
mov
das
jno
adc
mov
or
mov
add
shl
mov
jbe
inc
cltd
sar
mov
mov
adc
mov
or
push
sub
mov
jno
jne
sbb
add
or
add
scas
pop
test
mov
test
jmp
fildll
xor
lcall
or
sub
jg
je
or
add
ret
mov
gs
outsb
rcr
je
mov
in
pop
mov
je
push
pop
ljmp
out
cmp
arpl
xor
or
add
fmuls
push
int3
and
push
aam
dec
mov
ret
sbb
xor
or
jmp
fs
mov
add
xor
pop
jmp
mov
movaps
rclb
rclb
jb
xor
les
int
idiv
and
xor
adc
cmp
data16
pop
mov
add
lds
jo
pop
in
push
push
les
pop
dec
xor
jl
sahf
icebp
test
lods
push
shrl
orb
inc
adc
push
negb
and
incb
jo
or
jne
aas
ja
inc
add
and
and
das
or
add
les
stos
ret
test
in
dec
add
stos
insl
fwait
cmpsb
mov
push
jl
mov
add
leave
rcr
mov
ror
and
enter
imul
or
sbb
sahf
jns
int
sbb
inc
mov
inc
cmc
or
sub
aaa
add
pop
push
shlb
mov
add
mov
xchg
fimull
xor
inc
mov
add
rclb
in
rcll
rcll
out
cmpsb
mov
dec
sub
inc
push
jge
sti
lcall
dec
popa
test
movsl
add
fidivl
push
adc
push
into
inc
outsl
push
add
jp
add
jbe
adc
push
adc
shlb
or
cld
stos
mov
data16
mov
add
push
pusha
push
adc
dec
sub
and
adc
push
xor
icebp
fimull
xchg
aad
lock
adc
ja
push
sub
and
ret
mov
fiadds
pop
mov
pop
mov
push
fbld
jle
call
mov
sahf
call
dec
popf
add
loop
pop
push
dec
and
push
mov
xchg
lea
jo
mov
mov
stos
pop
pop
jg
pop
push
aaa
dec
xchg
sbb
and
pop
pop
or
pushl
movsl
loopne
les
mov
pusha
cwtl
or
jge
sbb
add
mov
daa
xor
aaa
pusha
jmp
pop
cmp
fs
ret
pop
push
sbb
orb
enter
outsb
jmp
pop
orl
push
int
mov
xor
or
pop
shrl
mov
movl
inc
inc
and
dec
cmpsb
out
ss
mov
push
jge
cmpsl
call
out
push
divb
call
sub
shl
jge
insl
movsb
mov
jbe
jo
addb
mov
add
out
mov
mov
inc
or
aaa
jl
push
adc
cmp
add
or
je
jo
cmc
or
push
aam
push
cmpb
into
push
sarb
out
test
iret
pop
jmp
pop
and
out
lock
xchg
add
cmpsl
add
pop
mov
adc
or
jno
inc
mov
mov
xor
fdivl
xchg
add
cmp
xor
into
adcb
push
jo
rorb
fisttpl
adc
dec
xorb
mov
and
xor
dec
jmp
add
and
movsb
hlt
out
div
inc
cmp
jb
scas
insl
cld
inc
xor
movsb
adc
cmc
jo
or
adc
nop
push
movb
lods
fwait
ret
jbe
adc
sub
xchg
or
mov
repnz
cwtl
fimull
call
lods
or
mov
adc
hlt
into
jb
add
data16
hlt
call
in
xchg
mov
add
mov
in
sbb
or
cmp
lock
insb
add
add
outsb
adc
sbb
lea
into
pop
sahf
test
mov
iret
adc
push
data16
sub
or
setb
or
jl
lea
jp
xor
adc
add
imul
jl
inc
cs
push
movsb
lock
mov
jg
push
cli
lods
push
cmc
add
sub
cltd
mov
aas
jnp
add
xor
push
mov
dec
mov
icebp
adc
pop
inc
ljmp
out
cmp
mov
test
sbb
push
cmp
nop
icebp
cwtl
fisubl
mov
orb
gs
adc
lea
add
push
call
jp
lea
add
xor
add
aam
pop
add
xor
dec
xchg
subb
and
stc
divl
aad
loop
addl
xor
cwtl
or
sub
popa
mov
and
call
or
filds
add
mov
adc
ret
outsl
xor
mov
mov
inc
aam
decl
test
mov
dec
test
xor
push
lock
jmp
cmovo
push
sbb
lods
jno
scas
and
jmp
sub
sbb
pushf
and
pop
add
je
jb
sbb
mov
divb
arpl
xor
push
jo
lcall
movl
xor
mov
inc
mov
loop
js
mov
leave
test
stos
insb
cwtl
mov
mov
jle
add
fisubs
cmp
fistl
inc
nop
xor
lds
or
dec
mov
jl
add
fdiv
and
mov
fisttps
mov
add
dec
orps
popa
xchg
dec
mov
add
cltd
dec
xchg
int3
and
sbb
clc
hlt
enter
lds
adc
sti
nop
test
cli
je
pusha
jbe
sub
mov
test
sub
adc
je
je
jne
popa
jle
insl
pop
inc
sbb
or
ljmp
or
push
push
mov
jg
inc
mov
addb
jg
shr
push
int3
repnz
insb
cld
icebp
mov
mov
leave
clc
add
cmp
loope
or
insb
enter
aam
push
or
and
mov
add
inc
incb
lods
sti
faddl
xor
add
fcomps
jbe
push
push
and
xor
fdivrs
jmp
ss
call
mov
push
fidivrl
inc
jbe
mov
stc
addl
cmc
outsl
jle
xor
add
inc
add
cmp
pop
add
jl
nop
mov
inc
aam
inc
lods
add
call
addl
clc
ds
stc
imul
aam
fidivl
or
jae
rorl
aaa
rcll
ljmp
fidivs
add
add
mov
ljmp
ja
pop
aam
decl
pop
rcll
xor
je
and
inc
pop
pop
add
add
or
mov
or
add
popf
sub
cwtl
push
or
sbb
add
jecxz
push
add
pushf
adc
push
cmpsl
orb
add
mov
inc
add
mov
ss
pop
out
in
roll
cmp
scas
adc
xchg
fsubs
xorb
jb
jnp
mov
dec
ja
cs
test
jne
inc
dec
loopne
call
mov
sub
mov
add
je
sbbl
in
adc
pop
movsb
data16
inc
mov
cmp
sahf
adc
mov
fsubr
xchg
xor
sub
xor
mov
cmp
mov
div
mov
mov
add
sub
scas
ret
or
adc
push
mov
mov
jo
mov
cli
sbbb
sub
inc
cmp
and
enter
aam
loope
pop
add
pop
pop
mov
stos
fisubrl
adcb
xor
movl
inc
add
test
outsb
or
rolb
in
push
int3
fistl
add
push
pusha
mov
or
xorl
add
adc
fnstcw
out
add
pop
loope
xor
out
adc
add
rorl
mov
mov
das
rcll
inc
jmp
into
ja
je
sub
sub
iret
test
mov
mov
lock
call
and
add
adc
push
fistpll
pop
rcrb
push
jne
push
sar
pop
add
inc
inc
or
cmp
cli
mov
add
sub
push
push
or
mov
and
add
ror
add
jmp
ss
mov
mov
test
fadds
js
decl
mov
add
cli
adc
pusha
jo
subb
xorl
add
push
adc
add
jbe
or
mov
call
dec
xchg
addb
cmpsb
adc
call
cli
jg
cmp
loop
lock
mov
in
testb
dec
add
and
fbstp
loop
add
jmp
lock
aam
and
xor
rclb
bnd
xor
jo
adc
mov
stc
popa
subb
jo
jp
or
or
popa
and
adc
and
xchg
je
or
push
mov
push
pop
call
cmp
jae
push
test
hlt
rorb
xlat
xchg
ret
or
xor
xchg
xchg
inc
sti
loopne
pop
pop
leave
add
filds
subb
pop
ja
insb
and
sub
mov
inc
push
inc
push
jp
pusha
jg
pusha
movsl
cld
clc
aaa
mov
dec
xchg
loopne
push
andl
mov
xchg
arpl
lcall
push
xor
mov
mov
lock
fcoml
mov
adc
nop
add
inc
jmp
loopne
bound
ret
xchg
pusha
adc
pop
call
cmp
xor
push
ss
or
bound
xchg
es
adc
jmp
and
popa
push
scas
push
mov
icebp
incl
loop
and
aaa
mov
dec
mov
ret
cmpsl
lea
sub
bound
cwtl
push
xchg
add
shll
push
xchg
cmp
dec
push
cmp
inc
sbbb
pop
pop
int3
sbbl
inc
and
dec
push
lea
loopne
push
jbe
add
adc
and
popa
add
les
addb
pop
jl
sub
scas
fidivl
mov
adc
pop
sahf
nop
jl
jl
fldl
jle
pop
sub
add
popa
and
loopne
mov
xor
arpl
lods
fistpl
outsl
or
mov
sbbl
push
dec
add
and
push
mov
add
nop
mov
ss
jle
xchg
xor
dec
clc
loopne
je
std
sahf
sbb
jle
leave
ret
loop
cmp
pusha
jl
cmp
cmp
std
adc
pop
loopne
mov
add
shrb
inc
cmpl
jmp
mov
push
movsb
pusha
push
in
sti
rorb
clc
ja
cmp
jg
ljmp
loope
xor
or
xchg
data16
add
adc
jne
fwait
sub
sub
mov
mov
lea
jne
negb
mov
pop
add
jno
jmp
addl
adc
mov
loopne
mov
inc
push
and
inc
dec
stos
rclb
loop
inc
lods
pop
pop
or
jnp
rclb
pop
je
ret
negl
mov
add
dec
movsb
enter
pusha
add
call
and
mov
bound
mov
inc
or
ss
jo
mov
sbb
add
aad
mov
adc
pop
mov
push
jl
bound
sub
pusha
adc
push
jecxz
sbb
call
and
scas
ss
loope
push
inc
lods
push
xor
test
sub
cmp
je
sub
lods
jl
add
add
cld
incl
cmp
cmp
popl
and
lret
pusha
cmp
adc
sbb
shlb
or
pushf
popa
ss
jle
or
pop
pop
pop
cmp
ds
ret
scas
call
push
adc
test
and
add
mov
fsubrl
insl
orb
xor
pusha
sub
sar
jns
push
call
jmp
jo
inc
mov
pop
push
mov
jg
mov
inc
imul
orb
add
pop
inc
fwait
sub
insb
mov
add
dec
mov
add
cmp
push
mov
jmp
jl
sub
adc
sbb
ljmp
pushl
push
movl
add
dec
jg
dec
data16
add
dec
xchg
jo
andl
sub
fwait
push
arpl
xchg
repnz
stos
adc
lock
add
push
subb
jbe
loop
add
lret
jo
hlt
cmpl
mov
push
sub
jl
adc
data16
or
add
daa
mov
in
outsb
inc
jmp
sub
decl
inc
inc
ret
out
rcl
shll
push
push
lock
out
cld
jbe
and
test
pop
add
clc
loopne
pop
sub
inc
mov
jns
arpl
sub
and
and
jle
adc
or
rolb
inc
ret
aam
test
mov
add
or
add
jl
add
xor
subb
test
xor
pop
and
test
mov
shlb
mov
push
shrb
mov
repz
sbb
insl
ss
hlt
mov
lock
sub
rclb
lahf
leave
test
push
call
cmp
stc
mov
dec
fiaddl
mov
mov
fdivl
add
mov
test
cwtl
lret
add
mov
adc
call
popa
cld
mov
inc
cmpl
push
jb
idivl
cmp
dec
push
cmp
mov
insb
inc
ljmp
add
jo
jo
sbb
cmp
icebp
or
add
mov
xor
mov
cli
in
and
sbb
cs
loopne
or
lahf
in
jmp
mov
je
push
pop
sub
mov
shlb
mov
jo
jmp
invlpg
ret
mov
outsb
add
jbe
mov
sub
add
les
gs
jo
add
sbb
ja
add
push
push
ds
lods
xor
pop
outsb
mov
pushl
test
pop
gs
ret
pusha
adc
lahf
mov
xor
loope
dec
adc
xor
sub
mov
mov
mov
jge
and
or
jecxz
or
js
and
add
xchg
dec
adc
add
popf
cld
inc
or
pop
pop
pop
adc
push
xorb
repz
pushl
sub
pusha
ljmp
mov
clc
pop
sar
lock
or
xchg
cwtl
add
pop
push
add
les
mov
mov
xor
mov
jb
pop
cmp
inc
lods
sbb
mov
xchg
add
or
xor
or
test
pop
mov
popa
sub
mov
xchg
sbb
call
dec
icebp
and
movsb
pop
jl
sbb
or
pop
jno
pop
movsb
xorb
mov
je
add
shll
jge
lcall
clc
je
icebp
jb
in
mov
xchg
add
xchg
add
dec
clc
pop
sub
jle
clc
rolb
lock
and
loope
or
cmpsb
adc
movsb
mov
out
jno
call
dec
or
push
push
add
jbe
pop
lcall
jmp
or
andb
mov
mov
stos
mov
clc
jg
sti
cld
and
lods
mov
xor
cmp
cli
cmpb
push
mov
and
sbb
sub
mov
cmp
jbe
pushf
push
sar
leave
xchg
mov
push
ljmp
sbb
repnz
sbb
pusha
loop
and
jb
scas
jne
lock
cmc
pop
rorb
mov
push
pop
mov
push
mov
lret
std
fisttpll
sahf
call
ret
icebp
adc
or
adc
xor
test
jle
or
pop
mov
sbb
lods
push
jo
dec
daa
inc
lods
jge
stos
hlt
or
jmp
xchg
inc
ja
fistpl
cltd
add
push
add
jmp
mov
add
xchg
fwait
or
mov
adc
mov
testb
std
adc
adc
cmpsb
decl
jbe
add
icebp
jmp
or
inc
jecxz
lods
or
lock
jmp
sti
out
jg
xor
pusha
inc
or
jmp
mov
sbb
rclb
icebp
pop
pop
test
cmp
fstps
das
jmp
and
pop
sahf
xchg
push
or
adc
push
add
dec
sub
xchg
inc
pop
leave
cmpsb
sbb
data16
adc
subb
lcall
mov
popf
xchg
xor
lret
repnz
lcall
lock
mov
call
jbe
jae
jo
mov
push
add
xor
push
int3
sub
in
enter
sub
outsb
stos
mov
loopne
sub
movl
pop
add
lcall
dec
jp
andb
addl
lods
jo
repz
sbb
add
orb
or
or
cld
jg
jmp
dec
cwtl
pop
pop
mov
pop
and
addb
fistpll
mov
add
xor
shlb
jle
mov
push
jo
mov
lcall
jno
mov
scas
hlt
imul
add
icebp
loope
mov
test
test
xchg
in
jle
add
jl
add
stos
test
clc
lcall
call
push
push
dec
jb
test
jo
cld
lahf
sub
and
jno
jno
clc
mov
in
or
inc
mov
inc
movsb
fs
and
fildll
jo
add
adc
or
sbb
movsb
roll
sbb
loopne
fstpt
xchg
adc
pop
inc
xor
sbb
push
scas
sub
mov
add
icebp
add
jo
inc
fcomip
cmovl
adc
mov
and
pusha
or
sub
cmp
adc
aas
inc
mov
fdivrp
mov
push
cmp
add
jo
mov
mov
out
push
call
testb
lock
das
clc
ljmp
and
hlt
lock
bound
mov
lock
push
dec
frstor
push
mov
push
mov
lret
fildl
sub
enter
movsb
inc
mov
add
enter
mov
add
movsb
loopne
cld
add
dec
mov
jno
jg
fwait
and
sbb
jae
pop
adc
lods
sbbb
jp
and
xor
sbb
cmp
cmp
cmp
int3
dec
mov
mov
jle
push
adc
mov
mov
je
adc
testl
adc
inc
mov
dec
push
cld
and
adc
adc
pop
add
pusha
push
mov
stos
stos
jo
inc
and
into
push
fstpl
out
xor
sub
adc
jge
mov
xchg
sub
mov
inc
inc
adc
les
adc
aaa
push
in
mov
jbe
rcrl
sub
insl
testb
movsb
push
pop
cmp
jle
inc
xor
inc
ret
mov
lcall
fnsave
add
xchg
loop
add
lods
dec
js
rcrb
ja
dec
inc
lods
sub
test
xchg
push
pop
jae
add
je
adc
cwtl
xchg
push
mov
std
inc
push
fdivr
add
jne
lods
scas
lods
mov
mov
jbe
jb
xchg
mov
add
jno
add
fists
les
add
out
jb
inc
or
addl
mov
test
add
aas
and
add
ret
cmpsb
push
xchg
xor
push
les
mov
jbe
lods
andb
enter
inc
mov
test
ror
cmp
mov
push
data16
mov
or
add
sahf
bound
inc
dec
sti
rcr
push
rcr
add
in
rolb
xor
das
add
push
jo
mov
add
mov
mov
and
xor
gs
jbe
dec
movb
je
out
data16
jne
push
pusha
inc
mov
call
cmp
test
insb
scas
push
pop
in
pop
sub
jno
xor
sbb
cli
popa
xor
aaa
scas
cld
into
rclb
push
fs
into
call
js
shrl
jns
inc
test
cmp
sub
jnp
add
inc
xor
imul
lods
je
sbbb
cmp
loopne
sub
and
pop
pusha
jle
push
fsubrl
cmp
ret
add
shrb
orb
xchg
pop
mov
push
ret
adc
movsb
push
cld
add
add
rclb
jmp
jl
decl
shlb
rolb
push
jg
mov
sbb
ret
inc
je
xlat
fildll
sub
shlb
shlb
jecxz
decl
shrb
push
sub
adc
das
rclb
adc
push
pop
xchg
aas
sbb
add
add
and
mov
pop
and
mov
inc
or
lds
mov
outsl
lea
testb
add
inc
cld
aam
adc
popa
jl
arpl
adc
push
rol
adc
jmp
push
or
push
push
pop
inc
xor
inc
js
test
jb
and
cmp
mov
fsubrs
data16
test
clc
shll
push
mov
je
xor
pop
adc
push
add
movsb
jo
mov
mov
ljmp
pop
lock
pop
pop
xor
cmpps
cmp
mov
xor
popa
sub
sbb
and
sub
lahf
ficoml
pop
adc
push
rcr
cld
xchg
xor
and
xchg
pop
inc
rorb
inc
aaa
test
mov
sbb
lock
pop
inc
in
push
push
inc
push
adc
and
enter
daa
lds
push
lods
lods
notl
cmpb
jne
hlt
loop
add
mov
add
loopne
std
mov
sub
mov
test
cmp
fbld
push
lock
mul
sbb
push
xchg
mov
ss
adc
add
dec
cld
in
push
and
aam
nop
pusha
xor
push
mov
orl
aam
push
xchg
loopne
dec
addl
add
cmp
sub
mov
dec
inc
add
and
js
cmpsb
sub
test
stc
call
in
cs
fcmovb
aam
add
or
or
lea
and
dec
mov
sbb
adc
loop
in
jg
incl
cli
mov
and
push
loopne
movb
or
loopne
loopne
add
je
add
testb
call
inc
adc
aam
jbe
aad
jb
rorb
lret
aam
adc
loopne
pop
adc
fcompl
add
cmpb
sbbb
movb
bound
mov
or
out
mov
addr16
inc
add
sub
xchg
sbb
test
cmp
and
int3
jl
pop
inc
mov
lock
test
je
test
add
in
call
and
popa
push
ljmp
sbb
and
add
fmul
ret
add
mov
je
or
inc
or
shrl
add
divb
mov
inc
ret
cmp
loope
xchg
lea
js
jnp
cmp
or
pop
ret
popa
pusha
sub
jl
or
jne
mov
andl
lock
adc
ret
adc
cmp
add
ja
add
cmp
ja
or
orb
add
ss
xchg
add
inc
ss
nop
sub
mov
push
push
push
loope
loopne
or
add
push
sbb
adc
sarl
js
mov
loopne
test
ds
loopne
push
test
add
leave
mov
push
sub
scas
mov
mov
inc
add
test
out
fistps
call
mov
lret
pusha
pop
dec
imul
loope
cmp
dec
push
inc
fldenv
push
pop
mov
clc
pusha
pop
loopne
push
inc
add
xchg
or
gs
leave
call
mov
sbb
insb
cmpsb
icebp
in
and
mov
add
sahf
push
lods
or
in
ja
ds
or
movsl
fcomip
call
and
je
popa
inc
lock
loope
inc
sbb
push
inc
add
sub
and
mov
loope
bound
pusha
adc
loopne
push
ret
aad
fdivs
mov
jecxz
loope
movsb
xlat
loopne
add
loopne
cmp
inc
add
arpl
push
dec
mov
pushl
mov
pusha
push
in
loope
push
in
pop
cli
or
mov
loop
push
loopne
sub
loop
mov
sbb
and
addb
push
pusha
and
aam
and
cmp
aaa
mov
repz
inc
add
pusha
dec
or
sbb
out
std
addb
cmp
imul
xchg
mov
into
adc
lcall
call
sbb
sub
push
lock
sbb
dec
push
mov
call
rolb
jbe
and
xor
mov
add
call
mov
inc
add
hlt
jl
push
inc
adc
loop
and
pop
adc
xchg
loopne
adc
addb
xor
push
imul
dec
jle
sub
rclb
mov
ljmp
push
add
sub
xor
or
rorb
jg
test
fisttpl
repnz
or
mov
pop
jo
fiadds
or
mov
jnp
lret
cmpl
fdivr
rorb
shll
cmp
mov
add
dec
repz
adc
sahf
dec
std
jg
jae
mov
scas
daa
jb
sub
sub
push
les
push
mov
mov
or
add
cmp
push
inc
jo
and
xchg
outsb
data16
into
add
mov
lock
pop
ljmp
lea
incl
pop
and
repnz
add
cld
sbbl
notl
call
jne
dec
mov
push
lea
test
movsb
and
push
mov
mov
jo
add
add
sti
mov
inc
test
fwait
cli
mov
arpl
pop
lock
ja
and
add
mov
movb
push
or
and
sbb
pop
pop
insl
repnz
jmp
sub
adc
addb
add
jo
test
add
inc
ss
aam
pop
push
push
call
or
inc
call
es
sbb
mov
movsb
or
iret
addb
dec
nop
icebp
dec
arpl
test
jo
push
movsb
mov
dec
mov
pop
lock
push
push
inc
mov
mov
mov
xchg
inc
jne
xchg
icebp
add
mov
daa
jg
icebp
decl
inc
xchg
loope
call
push
pop
fxch
adc
xchg
pop
shrl
push
mov
sub
xchg
mov
add
pop
cli
cmpl
sub
adc
mov
xchg
bound
mov
insl
add
push
xor
repz
adc
jge
add
xchg
add
pushf
clc
push
pop
push
or
addb
and
xchg
xchg
pushf
cmp
je
mov
push
loopne
adc
jb
sbbb
mull
ret
xchg
mov
push
mov
ja
pop
or
add
adc
mov
jp
or
loope
pop
add
dec
pop
adc
nop
aam
mov
add
and
and
and
cmp
jo
mov
pop
push
lock
cmp
loopne
aaa
adc
xor
repnz
js
mov
xchg
pop
decl
mov
inc
lock
std
mov
shlb
nop
sub
dec
loopne
mov
pop
adc
inc
rcrb
scas
and
pop
loope
mov
add
pop
add
mov
fmuls
pop
pop
call
xor
inc
insb
push
das
enter
dec
cld
mov
lock
xor
lock
push
push
push
call
dec
sahf
idivb
ljmp
in
inc
daa
cmpb
add
mov
test
cmpsb
je
push
pusha
loopne
mov
es
inc
aam
call
movsb
adc
ljmp
inc
add
ja
idivb
loopne
jnp
mov
push
bound
scas
xor
mov
pop
fsubs
xchg
lock
call
adcb
jne
jl
lock
jmp
cmp
add
cmpsb
dec
mov
push
mov
cld
popf
subb
push
add
push
fwait
and
add
xor
pop
pop
adcb
das
and
jle
lock
ss
and
xchg
cmp
sub
xchg
lcall
mov
out
or
mov
jle,pn
jo
mov
in
add
inc
mov
inc
adc
or
test
add
into
add
pop
sub
outsb
fwait
shlb
jo
push
pop
adc
testb
cmc
add
xor
pushf
xorl
neg
fsubrs
xor
add
lock
je
call
xchg
fadds
stos
xor
sbb
jge
adc
add
xor
sbb
jg
adcl
ss
xchg
mov
push
jo
decl
fadds
ljmp
jo
movsb
icebp
pushf
xor
rcrb
daa
mov
dec
es
pop
jae
or
incl
or
mov
lock
xchg
aaa
pop
pusha
sbb
outsb
mov
cld
xor
jg
push
jo
mov
fidivs
fmuls
add
iret
push
lock
test
and
jne
mov
add
push
subl
divl
stos
jo
je
mov
mov
xchg
jbe
call
jge
call
adc
mov
dec
mov
mov
cmpsb
add
insb
push
mov
rcr
push
xchg
icebp
or
loop
es
jb
push
or
lock
inc
mov
or
jne
push
cmp
jge
sbb
sbb
dec
fisubl
test
rolb
jge
adc
and
movsb
jne
or
hlt
hlt
mov
aam
sbb
or
or
and
adc
push
jne
call
add
lock
cmp
imul
fldl
fs
add
aaa
or
pusha
cmc
jo
test
pop
and
fs
mov
or
mov
jb
or
pop
mov
or
pushf
inc
push
mov
sbb
in
ss
fbld
call
test
inc
jne
xor
fwait
mov
adc
adc
test
popa
call
adc
and
ss
clc
mov
add
je
xchg
push
das
addb
xor
jecxz
ds
lock
mov
or
mov
xchg
rorb
mov
push
xchg
adc
mov
call
jo
jl
nop
pusha
jg
mov
wrmsr
or
pop
or
loopne
add
mov
add
insb
mov
and
or
repz
adc
jl
push
or
inc
xchg
or
mov
mov
rolb
lock
mov
adc
pusha
inc
leave
cli
stos
inc
test
movsb
add
loope
mov
aam
cld
mov
adc
xor
ss
shrb
push
push
xchg
cld
stc
add
sti
push
cwtl
xor
clc
sbb
mov
push
js
shlb
loop
mov
push
push
add
push
out
cmp
push
xchg
stc
sbb
mov
gs
in
ljmp
sbb
out
mov
add
cli
or
in
push
adc
mov
add
pusha
xor
sti
insl
enter
xor
push
ljmp
pushl
outsl
sbb
or
mov
or
notb
andb
inc
pop
insb
inc
cmp
and
dec
inc
push
test
rcrb
jmp
and
jo
cs
adc
subb
cmpsb
faddl
lods
cmp
cli
adc
ljmp
aas
shlb
jmp
xchg
mov
push
dec
fnstsw
add
mov
ss
mov
sar
pop
sub
cld
push
or
xchg
andb
inc
cmp
dec
dec
lahf
xchg
xchg
aam
call
and
test
ret
xchg
enter
fbld
out
dec
pusha
add
out
jp
and
cmp
mov
push
xchg
test
lods
ljmp
scas
insb
xchg
dec
push
sbbb
cld
lods
cmpsl
jns
insb
adcl
sub
adcl
insl
sub
jl
and
cwtl
sbbb
xchg
fisubrs
pop
sub
push
cmp
adc
xchg
andl
stc
loopne
jl
sub
sarb
lock
push
xchg
inc
andb
push
adcb
or
jbe
std
lds
hlt
ret
and
rolb
xor
orb
jg
cli
add
pop
pusha
jne
aas
rolb
and
out
in
in
nop
mov
mov
jl
ljmp
ret
mov
sub
or
xor
enter
js
push
enter
mov
sbb
xor
mov
test
les
mov
add
mov
mov
icebp
add
adc
jbe
test
fstpt
mov
ds
gs
jmp
pop
pop
adc
pop
push
push
add
mov
add
add
pusha
and
sbb
call
sbbb
push
ret
notb
daa
or
dec
mov
push
lods
ja
xor
mov
add
lret
cmp
mov
xchg
xchg
ret
xchg
jge
jnp
adc
pop
push
inc
sbb
pop
inc
sub
mov
out
add
adc
pusha
add
sarb
fs
adc
add
mov
rcl
popa
mov
mov
stos
rolb
lcall
inc
stos
push
add
mov
dec
test
sar
or
incl
adc
arpl
adc
push
sbb
ret
or
fimuls
dec
adc
cmpsb
xchg
xor
adc
in
add
adc
lds
int3
lds
aaa
sub
scas
roll
clc
sub
sub
rclb
xchg
mov
mov
add
or
add
xchg
hlt
inc
jbe
mov
inc
arpl
inc
movb
mov
jbe
cmp
dec
xchg
rolb
jmp
sbb
jmp
imul
push
jmp
aam
adc
xchg
adc
or
or
shr
and
dec
jl
mov
sbb
push
in
and
push
in
cmpsb
sub
cs
push
loope
xchg
loopne
dec
cld
divb
sbb
cmp
adc
mov
mov
clc
popf
lods
add
push
and
popfw
frstor
and
mov
sti
mov
jmp
into
or
loopne
mov
outsb
jp
dec
sbb
mov
jb
adc
sub
mov
int
pop
sbb
call
in
or
mov
loopne
outsb
leave
add
ss
jle
jle
lahf
cmpl
fdivs
test
push
jmp
push
sub
dec
jle
call
lods
mov
bound
mov
les
add
call
push
xchg
push
mov
add
cmp
or
fsts
add
jg
dec
push
pusha
inc
sub
fisttpll
fisttpl
call
lock
dec
adc
or
xorb
addr16
and
ficompl
ss
xchg
pusha
jb
mov
add
xchg
push
push
mov
push
jge
pop
push
mov
shl
ret
loopne
imul
cmp
sub
mov
out
xchg
adc
pusha
jp
pop
or
cmc
jecxz
popa
outsl
push
xchg
pop
fs
jmp
adc
and
jecxz
lods
and
aaa
loope
push
and
clc
hlt
mov
sbb
fmuls
cmp
aaa
add
jbe
orb
add
ljmp
jo
cs
call
bound
out
push
add
outsb
push
adc
or
add
xchg
pop
mov
jle
js
call
push
outsb
xorb
fwait
xchg
cld
aas
fstpl
int3
or
or
mov
and
mov
inc
cmpl
adc
sbb
or
push
push
scas
lods
add
fsub
mov
or
inc
inc
std
f2xm1
loopne
pusha
scas
hlt
notb
outsl
jl
push
stos
adc
fcomps
rcrb
repnz
adc
jb
lret
ficoml
dec
hlt
dec
push
fwait
xchg
test
dec
andl
xor
dec
add
dec
jge
sub
push
outsb
in
push
dec
push
cmpb
dec
shlb
scas
xor
xchg
or
dec
cmp
pop
mov
les
roll
fsubs
fcoms
sub
shrb
loopne
and
clc
test
pop
or
cwtl
enter
xor
jbe
in
push
jmp
pop
xchg
add
or
cmc
jmp
lds
cmpsl
mov
dec
jns
pop
and
add
loope
mov
in
cld
mov
lcall
fisttpl
lock
jl
pop
mov
das
jmp
jb
mov
pusha
dec
hlt
adc
loop
aam
andl
fstpt
add
adc
inc
ret
ja
mov
lea
jp
std
inc
inc
ds
push
pop
loopne
jecxz
and
sub
stos
loopne
ds
pop
add
lea
xor
add
ret
xchg
test
arpl
dec
xchg
add
lock
clc
push
mov
shr
call
daa
add
add
jo
dec
std
jb
mov
lock
xor
jle
shlb
add
popf
dec
call
add
mov
sub
xor
adc
orps
and
imul
jb
cmpsb
loopne
lahf
gs
fcmove
push
rorb
and
xor
pusha
add
inc
jo
insb
clc
incl
addb
inc
cmpb
sbb
lock
filds
out
or
add
sti
inc
add
mov
add
dec
add
insb
clc
test
or
shr
loop
mov
sub
ja
or
inc
bound
mov
adcl
push
test
ss
push
mov
inc
aam
cwtl
dec
add
cmp
mov
ret
outsb
fwait
insl
std
or
mov
je
test
lock
negb
xor
push
jb
test
jge
adc
addl
std
and
pop
je
jl
in
add
ljmp
fildl
hlt
imul
add
mov
aam
dec
add
test
call
pop
mov
mov
adc
add
lock
mov
xchg
dec
push
push
je
cmpsb
add
xor
je
fs
sbb
mov
inc
jbe
xor
cld
insb
add
xchg
dec
ret
pop
push
adc
je
jle
adc
xor
andl
clc
mov
sub
mov
push
xor
add
cmp
push
inc
movb
cmp
test
or
lock
and
inc
lods
and
or
fistpl
or
adc
test
rcl
stos
mov
mov
sub
mov
xor
test
mov
decl
pop
or
pmaddwd
mov
mov
xchg
sub
outsl
outsl
push
in
clc
jo
inc
xor
cmp
add
jo
inc
and
adc
fs
jmp
mov
xor
cmp
mov
xchg
je
lock
int3
add
add
es
add
and
dec
push
mov
and
pop
xor
adc
sub
rolb
in
mov
mov
sub
cli
mov
jecxz
out
pop
test
ja
adc
pop
and
insb
les
push
test
lea
mov
adc
aaa
loopne
cmp
add
or
sarl
inc
mov
jno
loopne
inc
pop
shlb
outsb
ret
xor
mov
ficompl
pop
xor
imul
add
inc
add
jne
jo
jmp
jno
stos
push
add
inc
dec
mov
sbb
push
lods
inc
mov
sbb
mov
dec
cld
das
adc
mov
ljmp
inc
mov
cmpsb
sbb
jbe
jns
movsb
call
and
mov
addb
loopne
inc
fstps
jle
lea
idivb
sbb
and
dec
xchg
jp
adc
int
movd
mov
inc
arpl
call
xor
ljmp
call
shll
icebp
inc
sub
or
out
fstpt
and
cwtl
xor
and
jo
jmp
cmp
push
in
call
cmp
adc
push
dec
push
xchg
jle
mov
aam
dec
cmpsb
xchg
out
mov
adc
mov
push
pop
hlt
ljmp
je
push
mov
xor
xor
add
loopne
je
insb
bound
or
scas
xor
fimuls
lea
pusha
bound
nop
hlt
jg
test
cmp
ficoms
clc
xchg
xor
jbe
pushf
outsb
jg
hlt
out
lock
or
mov
cmp
lea
test
push
mov
xor
or
call
jmp
into
icebp
lret
xor
adc
outsb
mov
xor
push
stos
add
lods
mov
adc
mov
movsb
jmp
mov
dec
xor
and
add
mov
xchg
cld
loope
je
mov
into
push
pop
pop
ljmp
mov
das
lock
ret
pushfw
aam
jmp
jno
stos
add
jnp
inc
in
scas
cli
daa
dec
pop
xor
int3
inc
mov
jb
shll
popf
sarb
mov
jmp
adcb
mov
dec
add
fnsave
clc
adc
je
xor
xor
xor
lret
loope
mov
add
push
int3
data16
and
mov
fmuls
adc
dec
sbb
mov
xchg
mov
lock
adc
add
mov
jle
pop
pop
xor
sub
jno
xor
aad
enter
ljmp
adc
jl
mov
cmp
sbb
aaa
jecxz
push
push
movsl
icebp
sub
fidivs
adc
or
dec
into
pop
cmp
out
or
xor
xor
push
or
push
add
cmp
repz
lods
xor
rol
jg
mov
sbb
ror
jmp
outsb
push
add
mov
mov
je
mov
adc
push
adc
add
aas
sahf
jo
pop
push
cmpb
or
xor
jo
mov
fimull
cmp
out
sub
add
dec
jo
adc
loope
dec
sbb
jo
add
push
ret
mov
xor
mov
xor
jno
cmp
jo
in
push
pop
imul
xor
add
add
mov
sbb
cmp
push
movsb
or
ret
pop
add
test
inc
loopne
push
orb
mov
or
adc
mov
add
shl
test
xor
inc
push
push
into
and
ficomps
inc
xor
outsb
push
mov
sar
sarl
push
mov
fsubrs
mov
jg
je
ss
mov
inc
mov
sbb
cbtw
pop
out
pop
push
xchg
add
mov
loop
lcall
dec
nop
and
and
xchg
cli
jmp
pop
inc
fdivr
push
push
mov
push
push
push
xchg
pusha
es
push
sahf
adc
and
and
cmpsb
dec
inc
imulb
sub
add
fistl
mov
stos
xor
andb
add
jmp
fcoml
lret
adc
sbb
test
scas
add
call
and
adc
pop
mov
push
movb
out
add
add
notb
testb
lods
pop
cwtl
jbe
pusha
aad
sub
mov
xchg
inc
loopne
push
add
imul
js
push
mov
xor
and
fsubrs
mov
add
inc
push
scas
cmp
lcall
mov
mov
and
and
adc
and
sbb
mov
jle
sbb
or
jno
incb
test
test
orl
sub
call
ret
lret
fdivr
push
adc
dec
lods
adc
popf
mov
push
mov
fsubrp
adc
lret
lcall
out
pop
adc
and
add
cmovb
movsb
push
pop
leave
cmp
xadd
add
add
fsubs
add
mov
popf
add
xchg
add
mov
loopne
mov
sub
inc
pop
pop
jns
and
ret
mov
adcl
in
enter
xchg
cmp
add
push
xor
outsb
mov
rclb
add
sbb
cmp
adc
mov
ficoml
jbe
adc
xchg
in
mov
jae
lds
push
push
testb
mov
mov
mov
jg
cmp
shlb
shlb
mov
or
das
in
mov
pop
push
mov
pop
lea
pop
add
push
nop
rorb
rorb
test
or
adc
scas
repnz
pop
sbb
jge
and
mov
add
mov
xlat
ret
push
rolb
ret
add
push
lock
popf
roll
fists
add
lods
das
mov
lods
repnz
mov
outsb
add
adc
xor
and
cmp
lock
add
insb
push
rolb
fisttpll
ret
add
call
jbe
and
push
and
mov
adc
inc
mov
pop
outsb
hlt
int
sub
push
push
and
test
les
lahf
call
cmpl
jl
add
inc
pop
insl
mov
es
sub
psllw
lea
call
ds
arpl
or
fadds
loopne
mov
add
or
out
rorl
incl
rorl
sar
rcl
das
ljmp
mov
pop
push
or
sub
add
outsl
adc
and
repnz
push
dec
bound
outsl
mov
lcall
and
sub
loopne
mov
rolb
out
add
or
mov
xor
xor
daa
sbb
adc
lods
jo
stos
fcomip
std
ljmp
inc
scas
loopne
pusha
sub
inc
pop
es
cmc
add
mov
and
inc
ljmp
pop
fdivl
jge
cmp
or
xor
aaa
loop
push
adc
pushf
xchg
mov
lea
sub
call
mov
push
and
shrb
pusha
orb
enter
push
add
push
test
jp
sbb
push
push
dec
dec
iret
xor
mov
push
dec
cmp
sbb
xchg
loope
insb
fsubr
outsl
ljmp
sub
in
add
and
pop
std
pusha
sub
mov
and
inc
call
bound
mov
dec
sub
dec
pop
pop
fwait
stos
outsl
or
das
outsb
push
inc
test
repnz
jmp
loope
lods
pop
int
or
jmp
inc
and
jle
sbb
dec
hlt
cltd
add
pop
push
cmp
rorb
xchg
dec
loopne
cmp
clc
mov
cld
pusha
bound
adc
or
adc
push
xorl
and
lret
inc
push
pop
es
popf
adc
gs
mov
test
pusha
cmp
adc
and
pushl
faddl
push
es
loopne
out
mov
inc
fisttpl
and
cmp
pusha
pop
insb
and
xor
sub
int
push
inc
add
mov
aaa
inc
cld
into
cvttps2pi
cli
add
push
xor
out
bound
fwait
popa
cmp
jae
jge
mov
cmp
cmp
mov
add
ljmp
pop
sub
lea
and
sub
or
push
add
pop
xor
fwait
dec
lds
xor
mov
add
or
popa
inc
loope
pushf
decl
jb
adc
test
ss
hlt
sbb
add
xchg
add
loopne
pushf
aam
call
add
movsb
mov
pushf
repz
adc
mov
and
addr16
sbb
fwait
or
cld
loop
loopne
fadds
subb
sbb
sbb
mov
and
xor
in
pop
cld
lds
add
jns
pusha
lahf
xor
loope
pop
mov
mov
loopne
fsub
rorb
loopne
pusha
lods
push
inc
arpl
push
stos
xchg
mov
fdiv
inc
and
sarb
in
and
cmp
xchg
loopne
ret
cli
xor
rclb
pop
push
cli
xchg
loopne
inc
ret
xchg
push
call
daa
cmp
and
call
push
cld
enter
or
push
test
lods
or
mov
cmpb
adc
ret
add
int3
adc
push
pop
xchg
dec
enter
mulb
lret
or
stos
or
inc
scas
xor
stc
cmp
jge
add
or
pop
sahf
test
dec
cmpb
push
shlb
test
lret
loop
adc
cwtl
dec
fisttps
cli
add
clc
push
aas
adc
add
jecxz
inc
loopne
daa
notl
cmp
addb
adc
pusha
sub
push
xor
aaa
or
jo
outsl
hlt
xor
mov
mov
jo
push
xor
adc
push
aas
loopne
xchg
cmc
add
push
ja
jb
test
icebp
lcall
push
mov
sub
sbb
dec
and
lods
call
lea
jns
inc
repz
add
jno
push
add
push
jb
jge
mov
add
rcrb
loopne
push
nop
push
xchg
pop
out
inc
add
int3
xor
aaa
mov
int3
call
rorb
xor
or
leave
dec
add
adc
jo
adc
dec
mov
clc
sub
call
scas
and
pop
and
addr16
out
int3
mov
cli
inc
xor
sub
outsb
sub
and
call
mov
js
jno
shrb
adc
xor
lods
test
and
rolb
push
cli
fldl
sbb
pop
mov
jb
cmpsl
lret
call
jo
jno
in
test
pop
sub
pop
mov
sbb
mov
jmp
shl
mov
push
jo
lcall
dec
pop
mov
inc
inc
jo
lret
or
enter
add
mov
adc
aaa
dec
adc
sbb
pusha
cmp
repnz
sldt
inc
test
mov
cld
adc
inc
mov
jl
btr
add
sub
inc
adcl
sbb
mov
mov
les
repz
xor
adc
sub
mov
je
and
mov
jne
xor
lock
cmc
push
arpl
pop
divb
lock
inc
jle
pop
push
pushf
push
inc
subl
xorl
cld
fistpll
icebp
inc
sub
repz
icebp
jo
aam
jmp
aaa
data16
jno
cmp
jl
and
inc
pop
fs
xor
mov
or
xchg
outsl
inc
and
pushl
inc
jno
nop
and
xchg
clc
and
lods
add
das
pop
jecxz
jbe
les
adc
cmp
movsb
mov
jg
nop
push
repnz
orb
mov
lea
lahf
jo
adc
dec
inc
jecxz
int3
xor
movsb
cmc
and
ss
lock
mov
xor
mov
cmp
lock
adc
mov
pop
cmp
decl
mov
inc
mov
orl
pop
add
xchg
lock
test
in
fwait
xchg
dec
add
movsb
xor
lret
call
inc
insb
sub
repz
scas
test
js
dec
sub
dec
add
cmp
push
fs
inc
add
sbb
in
sbb
ret
push
cmpsl
push
xor
push
shlb
cmp
es
orb
clc
dec
mov
mov
jnp
lock
aaa
add
inc
mov
xchg
or
mov
jmp
inc
pop
pusha
add
or
mov
aaa
cmp
test
fcmovnu
cmc
scas
mov
iret
xor
lock
insl
mov
or
dec
mov
pop
outsl
es
movsb
data16
test
inc
push
dec
out
jo
and
es
jo
sbb
add
popf
or
and
jo
cmpb
add
jle
adc
push
test
jg
push
clc
pop
inc
std
lea
mov
xchg
insb
icebp
push
imul
push
xor
xor
ljmp
push
ljmp
adc
aaa
adc
dec
enter
out
or
ret
rorl
into
or
loope
incl
data16
or
xor
aaa
xor
out
call
sub
sub
decl
mov
shl
lock
shl
daa
jo
sub
popa
jo
gs
jmp
add
cmp
cmp
mov
or
jl
push
pop
adc
in
push
jbe
aad
adc
pop
push
js
sub
mov
pop
and
sub
fbstp
fwait
or
fcom
or
xchg
pop
adc
add
test
scas
mov
and
outsl
clc
out
mov
pushl
jns
ss
add
dec
dec
dec
or
or
push
add
aas
inc
or
pop
cmpsl
stos
sub
dec
xor
into
dec
pushf
lock
cmpsb
cmp
fildl
cmp
insb
mov
ret
sbb
pushf
mov
mov
push
cmp
cld
cmp
divb
pop
fucomip
push
push
gs
mov
mov
hlt
push
stc
and
subb
outsb
lock
or
mov
add
outsl
mov
add
test
mov
cmp
incl
cld
inc
cmp
in
loopne
push
sub
xor
push
mov
sbb
leave
mov
cmp
pop
and
cmpsl
mov
icebp
loopne
or
or
rcr
sub
push
pop
sbb
pop
pmuludq
or
lods
add
into
pusha
xor
loope
and
mov
mov
sub
jae
cmp
mov
das
fs
loopne
ret
xor
push
bnd
cmp
rolb
mov
and
bound
adc
sub
mov
cmp
fdivs
adc
popa
jnp
mov
mov
adc
test
adc
xor
add
jb
je,pn
lods
lea
fdivrl
pushl
xor
int
sub
mov
add
cwtl
adc
add
cmp
inc
je
xchg
fcomps
mov
arpl
jmp
pop
lock
or
jecxz
je
in
jmp
cltd
stos
repnz
jmp
adc
jg
fdivs
shll
push
adc
clc
scas
pop
ss
or
cmp
pop
push
jo
lea
jbe
pop
call
repnz
sub
lahf
and
test
mov
arpl
arpl
inc
jo
and
scas
xor
movsb
xor
inc
adcb
inc
dec
mov
sub
and
mull
sbb
addr16
push
xor
call
jl
fistpl
ret
push
jne
ss
bound
cwtl
inc
lock
arpl
repnz
or
in
ds
add
add
test
filds
dec
jp
adc
mov
mov
movsb
pop
jecxz
and
jne
push
lds
mov
mov
push
add
inc
mov
mov
in
or
test
movsb
add
jns
xor
or
mov
mov
les
es
ror
mov
icebp
movsb
je
adc
push
je
and
cmp
xor
loop
jmp
push
jmp
push
push
xchg
push
loop
dec
adc
bound
jbe
add
or
cwtl
in
pop
add
xorb
add
add
mov
and
mov
dec
cmp
inc
popa
lret
in
hlt
or
and
lcall
cmpl
lret
divb
push
icebp
subb
and
ret
sbb
and
push
int3
rorb
test
jecxz
inc
popa
or
and
adc
mov
add
mov
mov
adc
add
out
cmp
jb
lock
xchg
or
dec
push
inc
ja
nop
dec
outsl
cmp
add
xorb
inc
inc
jmp
enter
test
aas
pusha
push
xor
push
movb
fwait
inc
dec
jb
stos
lea
in
jbe
xor
or
lret
sbbb
xorl
je
mov
out
mov
xor
shl
push
add
cmp
jle
call
jmp
fiadds
mov
xchg
add
inc
loopne
pop
and
je
xor
push
jg
testl
jg
cs
mov
ja
or
and
lahf
xchg
xchg
pop
mov
push
xchg
adc
mov
fs
add
rorl
adc
sbb
pusha
add
pop
rorl
inc
pop
sub
into
into
dec
add
ret
or
pop
cmp
mov
js
cmp
repnz
lret
adc
imull
add
test
push
pop
push
popa
push
dec
shlb
rcrl
addl
add
in
mov
mov
jb
xor
add
ds
push
push
push
push
jle
es
lock
sub
je
add
push
add
adc
das
and
add
or
test
jg
inc
jl
imul
pop
arpl
jp
sbbb
rcl
adc
sub
inc
xchg
or
jno
fs
aam
out
sub
cmp
inc
rclb
sbb
mov
test
and
sub
test
xor
sub
scas
pop
rclb
ret
add
add
mov
or
sarl
stos
cmpb
cmpsb
xchg
mov
pop
mov
or
add
jne
rcl
or
test
cmp
pop
rclb
xor
sub
fmull
lret
mov
mov
mov
ret
and
repz
rorb
pushl
sub
sub
lret
rclb
loop
add
or
add
jmp
rorb
inc
add
jbe
je
and
pop
outsl
mov
fdivrs
in
lods
loopne
sbb
add
lock
std
int
jecxz
mov
cmp
lar
cwtl
popa
push
cltd
je
in
arpl
ds
add
sub
andl
mov
sub
fbstp
adc
aas
cmp
add
or
loop
in
in
decl
or
or
sbb
and
sahf
lret
aad
sbb
nop
flds
xchg
xchg
xchg
adc
lods
sar
pusha
sub
sub
mov
por
repnz
add
xor
loopne
cmpb
mov
cs
add
push
dec
add
sub
sub
orb
lods
insb
mov
daa
cmp
push
sbb
pusha
adc
and
icebp
sub
mul
pop
or
sbb
push
or
loopne
call
aaa
shrl
js
push
test
movl
int3
mov
jg
lods
pop
pusha
mov
sti
jmp
loope
and
xchg
mov
fsubr
aam
mov
adc
std
jg
test
adc
loope
es
adc
push
push
sub
and
fnstsw
sbb
jns
sahf
pusha
dec
scas
fadd
mov
daa
mov
imul
movsb
in
bound
jb
jl
loopne
loopne
jg
loopne
mov
nop
add
jne
clc
and
loopne
xor
add
cmp
lods
inc
es
fadd
push
loopne
call
jmp
adcl
aam
adc
sbb
jmp
hlt
pusha
adc
inc
pop
aaa
inc
pusha
push
pusha
pop
mov
popa
es
inc
jmp
cmp
add
pop
pusha
inc
add
adc
push
fistpl
mov
cmpsb
loop
ss
cmp
push
jle
and
test
cmp
inc
mov
nop
dec
lods
cld
pop
mov
or
mov
pusha
or
push
loopne
adc
fs
add
popa
pop
cmp
pushf
mov
xchg
cli
inc
pusha
sub
cmovne
pop
xchg
lahf
mov
xchg
incb
add
ds
fwait
push
rcr
inc
inc
jbe
jp
fwait
or
jb
setnp
push
sbb
xchg
enter
xor
xorl
mov
jecxz
addr16
pusha
xor
ret
jmp
addr16
inc
ljmp
or
push
pusha
xor
push
es
clc
mov
ljmpw
ret
mov
aad
std
mov
nop
push
adc
in
inc
loopne
mov
cwtl
pop
xor
popa
add
cvttps2pi
mov
lea
dec
fsubrs
push
sbb
test
and
shrb
pop
clc
fbld
adc
cmp
mov
or
mov
in
add
and
outsl
mov
sbb
xchg
inc
adcb
loopne
pushl
jg
lock
or
movsb
and
mov
adc
insb
in
inc
xor
addl
xor
fwait
add
hlt
je
addb
shrb
or
add
push
or
movups
jne
in
incl
je
jo
aam
jb
in
jo
jp
call
mov
mov
mov
cmp
push
mov
xchg
cmpsl
mov
clc
or
lret
cmp
mov
int3
xor
mov
outsb
add
aam
or
add
push
mov
and
ret
icebp
nop
outsl
adc
cmpsb
testb
fdiv
add
add
sub
adc
sub
out
adc
add
and
pop
sub
dec
push
ret
push
pop
add
adc
fcoms
clc
mov
add
push
adc
icebp
jo
call
loopne
dec
scas
push
mov
mov
mov
push
inc
lods
jo
dec
mov
add
add
jecxz
fadds
clc
mov
sub
pop
and
or
sub
sbb
xchg
les
xchg
shrb
jl
pop
push
xor
pop
push
jno
add
adc
push
inc
test
cs
jb
pop
xor
add
mov
sub
adc
add
jg
adc
add
or
jmp
mov
add
lock
jmp
movsb
ret
imul
sub
adc
mov
hlt
sub
push
lock
aam
cli
push
mov
jo
xor
adc
std
out
pop
or
mov
mov
aad
xchg
pop
sbb
test
push
stos
popa
add
pop
faddl
xchg
fcomps
and
pop
cmp
adc
inc
lock
and
inc
int
inc
sub
xchg
cmp
icebp
jle
lock
push
test
cmp
pushf
xor
jl
or
inc
add
lock
aaa
rclb
cld
push
and
pusha
nop
sbb
add
mov
xor
dec
add
je
shrl
and
fs
push
push
cmp
aaa
icebp
or
cmp
daa
or
add
xor
lods
fs
rol
ljmp
mov
icebp
xor
mov
adc
lret
lock
leave
repz
push
test
jae
loope
and
mov
je
je
jne
fmull
std
outsb
mov
divl
pop
mov
in
add
add
push
fildl
cs
mov
push
pushf
push
fidivrl
testb
out
pop
mov
jne
mov
clc
jp
sahf
test
lret
add
cmp
mov
dec
jg
jmp
inc
sub
je
add
dec
ss
and
ds
or
or
xor
xor
mov
mov
or
adc
mov
ret
pop
mov
sbb
or
divl
rolb
mov
loopne
or
mov
jge
cmp
cmp
mov
int3
out
add
arpl
decl
jbe
pushl
jo
pop
jmp
aad
aas
push
lock
adc
sub
sbb
popf
testb
jb
add
push
dec
dec
xchg
mov
push
sub
xchg
adcb
sbb
or
leave
cmp
jmp
lock
add
clc
push
jo
jne
cld
je
add
or
shrb
mov
in
add
arpl
push
sbb
ja
pop
fdiv
inc
loopne
popf
jecxz
adc
pop
js
push
bound
fiaddl
mov
dec
inc
dec
dec
push
push
pop
push
fs
outsb
push
add
xchg
leave
clc
scas
in
adc
ss
adc
mov
push
lock
xor
push
add
js
or
sbb
stos
xchg
rcrb
mov
das
jne
jg
add
je
pop
ficompl
andb
addb
jle
mov
jg
repz
je
and
push
pusha
or
cld
sarl
adc
inc
jne
test
dec
jo
mov
push
sbb
fwait
sub
push
jo
jne
psubsb
adc
fidivl
clc
push
and
sbb
sbb
out
clc
in
add
rolb
mov
loop
inc
adc
ds
cli
imul
adc
and
or
ret
dec
mov
or
je,pt
add
inc
xor
clc
fisttps
or
int3
leave
mov
dec
ja
add
mov
inc
inc
xchg
inc
push
xchg
movsb
mov
leave
push
clc
es
cmp
fcoml
dec
or
or
dec
xor
cmp
mov
lods
mov
xchg
lock
lock
repnz
inc
aam
fsubrl
inc
pusha
inc
outsl
loopne
or
adc
pop
into
fisubl
call
test
mov
push
stc
adc
call
pop
fbld
xor
push
mov
std
dec
lret
divl
xchg
adc
in
inc
stos
cmp
lods
pusha
inc
xchg
jmp
into
dec
adc
fistpll
icebp
mov
xor
push
add
inc
call
or
inc
clc
in
sbb
mov
std
and
shr
pop
add
mov
jo
dec
xchg
adc
insb
pop
jne
lock
fnstsw
dec
cmp
mov
inc
cmp
pop
test
fnstenv
cmp
sub
jl
add
add
or
or
inc
in
mov
mov
sub
xchg
mov
cs
hlt
inc
loop
add
add
cmp
fimuls
add
add
lock
add
or
sub
mov
mov
push
andb
pop
jo
push
xchg
call
sar
and
mov
clc
add
and
push
add
jne,pn
and
jle
push
stc
ja
lea
cli
ja
push
add
jne
add
mov
movsb
mov
add
loope
cs
sahf
ret
xor
jecxz
pop
push
mov
ret
xchg
and
stos
ds
and
push
xor
icebp
or
and
xor
mov
jbe
ljmp
inc
inc
or
add
jnp
pop
and
push
movsb
jle
xorb
rorb
imul
inc
push
call
loopne
lods
xor
lahf
je
icebp
pop
xor
cmp
lcall
shlb
or
popl
jbe
ds
cwtl
repnz
inc
jge
or
dec
call
testb
mov
mov
cmpsb
pop
cmp
jae
push
lea
adc
jno
int3
mov
push
hlt
loopne
jne
nop
pop
xchg
adc
hlt
out
mov
mov
je
les
jbe
add
inc
mov
call
mov
repnz
add
push
dec
cmpb
je
xor
test
ret
mov
add
push
fcompl
cs
inc
clc
pushf
adc
add
jmp
sub
repz
mov
mov
bound
dec
or
or
jg
call
fdivr
add
xchg
hlt
add
loopne
cli
or
jb
add
lcall
and
dec
or
in
mov
mov
movsb
ja
hlt
pop
inc
jmp
and
lcall
pop
jb
pop
lea
add
cmp
sbb
cmp
push
cld
push
out
dec
adc
pop
jp
jp
data16
inc
push
imul
xor
inc
js
add
mov
lret
xor
jbe
add
pop
cmp
jae
mov
call
sub
fcmovbe
or
lock
jbe
xor
jns
xchg
add
les
addb
cld
xchg
fildl
add
sbb
inc
push
aam
sub
aam
sub
pop
cld
fidivs
pop
or
or
subl
pop
cmp
push
scas
subb
mov
push
es
push
movsb
and
stos
mov
dec
andl
cmp
loop
mov
mov
fisubs
mov
add
add
dec
mov
add
data16
mov
push
ja
test
je
xor
push
jmp
add
cmpsb
jbe
push
jb
sbb
test
rorb
inc
xor
push
cld
ret
jb
or
push
pop
imul
pop
and
bound
sub
xchg
clc
inc
inc
rorb
hlt
shll
not
adc
mov
mov
lock
xchg
cmpsb
loopne
ficoml
mov
inc
add
rclb
fidivl
out
add
xorb
test
xchg
dec
loop
mov
jecxz
fists
shlb
and
pop
jb
incl
inc
pusha
sub
out
iret
sarb
cmp
mov
sub
xchg
outsb
test
or
das
jbe
adc
adc
and
ja
adc
cmp
rcrb
ljmp
in
and
std
or
mov
rcrb
outsb
shl
mov
mov
mov
andb
dec
mov
scas
pusha
jl
je
pop
insb
add
mov
mov
shlb
mov
push
cmp
shll
test
dec
push
shr
xor
and
and
pop
movsb
inc
jmp
fcoms
shrb
add
aam
das
and
movsb
into
pop
or
cmp
call
mov
subb
mov
sub
pop
push
or
lds
inc
sub
cmp
add
fidivs
push
lods
call
or
shr
pop
fucomp
pop
xorb
push
inc
lea
data16
mov
enter
into
cmp
pop
rorb
xor
shr
sbbl
push
dec
mov
sbb
and
adc
ficomps
adc
rolb
cwtl
or
inc
stos
inc
jmp
push
icebp
pusha
or
or
jbe
jge
mov
adcb
out
adc
jo
push
and
or
out
pop
into
and
dec
cld
mov
cs
or
jl
mov
icebp
mov
xchg
pop
and
ds
add
xchg
sbb
dec
data16
adc
xor
push
lock
sbb
std
rcrl
add
mov
inc
stc
push
out
pusha
or
arpl
lock
xor
aad
mov
jmp
shlb
pusha
push
lcall
jmp
pusha
and
cld
push
mov
or
add
add
xchg
jecxz
add
mov
inc
scas
iret
sub
or
addb
loopne
and
loopne
das
sbb
pop
data16
sti
sbb
jo
push
cmp
pop
xchg
in
neg
or
icebp
data16
adc
adc
dec
clc
mov
add
jb
xor
or
and
loop
pusha
fcom
push
loope
adc
pop
push
cltd
loopne
mov
mov
stos
or
jbe
and
out
adcb
and
push
pop
add
pop
test
mov
adc
mov
call
inc
dec
or
test
psrld
insl
data16
mov
int3
inc
add
in
mov
xorb
or
inc
in
es
pop
ret
sbb
loopne
lidtl
or
push
bnd
ret
aam
ret
add
sbb
adcb
cmp
ss
dec
add
loop
lret
adc
fwait
push
loopne
jo
stos
push
mov
push
popa
push
xchg
test
xor
mov
ljmp
subb
adc
pop
les
sbb
pop
adc
ljmp
adcb
pusha
add
fwait
mov
add
out
cmp
mov
cld
insl
xchg
push
mov
add
push
je
lods
or
and
ret
jl,pt
cld
jmp
pop
lea
cmp
jb
push
call
push
fimuls
inc
add
or
cmp
shlb
add
dec
fdivp
call
in
sbb
mov
adcl
adc
adc
dec
cmp
push
adc
mov
and
or
or
push
pop
mov
cli
and
rclb
shr
in
pop
add
in
loopne
negl
les
or
shll
xchg
add
xor
inc
movsl
lret
add
dec
xchg
out
mov
pop
pop
dec
loopne
and
sub
and
dec
or
and
data16
cli
mov
adc
push
inc
adc
stos
cltd
xchg
rcrb
je
aad
insb
xor
push
inc
cld
xor
fcoms
into
push
push
and
push
add
push
inc
jecxz
addb
and
adc
loopne
push
scas
push
fnstsw
iret
push
incl
sbb
add
push
dec
sub
sbb
jge
and
outsb
add
pusha
outsl
and
cmp
call
push
adc
loop
xlat
nop
call
loopne
idivb
add
sub
arpl
add
fcomip
adc
loop
dec
in
push
loope
or
push
loopne
mov
mov
aaa
orl
inc
pop
cmp
or
fimuls
jnp
jo
cmp
test
jo
jo
test
filds
and
jno
mov
xor
sub
xchg
adc
sub
adc
fadd
adc
xchg
push
mov
sbb
jbe
lock
fwait
dec
add
test
xor
and
jae
inc
mov
inc
and
ljmp
add
lea
subb
inc
xchg
cmc
push
idiv
adc
test
inc
enter
xchg
testb
dec
pusha
add
bound
mov
je
fadds
sub
push
pop
ja
hlt
aaa
pushf
clc
xchg
or
mov
inc
pop
add
and
call
repnz
push
inc
call
adc
loopne
in
mov
cmp
xchg
jl
or
test
icebp
ljmp
inc
add
loope
xor
lock
jl
cli
int3
mov
enter
add
sub
push
daa
xor
push
aaa
sbb
pop
xor
push
call
in
push
push
pusha
mov
push
or
test
sub
outsb
rclb
cld
adc
into
ss
mov
xor
rcrb
and
and
rolb
xchg
mov
push
shrb
std
jg
add
mov
leave
lock
jmp
inc
lcall
push
push
les
lock
call
orl
les
shrb
pop
sbb
jmp
cmp
mov
add
mov
rcll
add
sub
ljmp
cmpsl
and
and
add
roll
lods
push
dec
mov
add
inc
aam
inc
les
pop
push
out
or
lods
andl
xchg
push
bound
push
or
sti
add
push
jp
lock
dec
divl
mov
fisubs
dec
out
add
pushf
xor
out
push
add
push
inc
push
je
test
lea
lock
add
pshufw
dec
neg
mov
jmp
inc
dec
adc
mov
push
mov
sub
pop
les
cmp
inc
add
cmp
and
movsb
cmp
pop
xor
in
mov
push
lods
xor
cmp
pop
jp
dec
push
or
sub
inc
fstl
ljmp
push
push
jne
clc
xchg
add
sbb
mov
leave
fsubrl
je
je
mov
adc
jo
clc
orb
or
adc
inc
pop
das
add
sbb
shlb
push
push
jg
inc
inc
mov
insb
adc
or
dec
inc
dec
es
test
jo
push
data16
mov
mov
adc
shlb
mov
xor
mov
jle
mov
push
xor
rcr
test
add
and
shrb
or
xchg
stos
fnstsw
call
adc
lea
jb
mov
dec
inc
or
cld
jo
pop
add
dec
lret
add
decl
sub
mov
push
shlb
push
add
xor
cld
cld
jbe
clc
sub
or
mov
call
clc
dec
inc
push
sub
stos
das
aam
iret
adc
inc
jo
repz
inc
and
push
inc
xor
add
mov
mov
rclb
leave
hlt
stos
insl
cmp
adc
pop
call
stos
ljmp
mov
pop
sub
adc
test
sbb
xor
push
adc
call
add
push
fidivrl
sti
push
pop
jo
xor
dec
sbbb
mov
clc
call
lock
push
pop
repnz
outsb
mov
and
cmp
fwait
push
inc
insb
lea
test
cmp
mov
xchg
stos
push
inc
in
add
fwait
clc
xchg
or
push
inc
push
pop
dec
fadds
jbe
scas
sbb
in
mov
mov
lret
cld
inc
add
xor
push
ljmp
push
xchg
mov
add
nop
loop,pn
test
lock
lcall
or
mov
dec
cmp
jae
inc
clc
jmp
mov
add
inc
faddl
mov
cmp
pop
testl
jmp
add
mov
ficompl
mov
jg
mov
out
push
adc
sbb
enter
les
add
mov
inc
adc
xchg
js
lods
jo
mov
sbb
nop
inc
xor
mov
push
jo
pushf
push
lock
push
hlt
jo
add
mov
pop
add
push
or
orb
je
adc
or
movsl
or
lock
mov
push
loope
mov
data16
lahf
bound
sahf
adc
mov
adc
mov
imul
mov
jo
jno
lods
cmpsb
dec
add
scas
pop
mov
test
and
mov
sbb
mov
push
pushf
inc
out
mov
hlt
ja
mov
test
dec
push
push
pushl
cld
add
adc
mov
mov
cmp
jg
mov
jp
mov
adc
mov
mov
and
push
xor
repz
or
mov
jb
mov
in
push
inc
jb
fildll
xchg
cmc
dec
sarb
call
mov
dec
pop
and
add
les
pusha
jmp
jne
mov
mov
fmuls
xchg
sarb
mov
out
mov
mov
sub
cld
lods
adc
shr
adc
add
add
cmp
mov
mov
jmp
xchg
andl
add
aaa
push
mov
add
mov
or
inc
pusha
push
push
rcrb
ljmp
test
push
sbb
ret
sub
sbb
mov
dec
testb
jl
out
je
xchg
jno
rolb
fildll
add
hlt
xor
or
push
sbb
mov
push
call
sbb
inc
popa
and
mov
add
dec
cmp
loopne
pop
cmpsb
ret
push
dec
mov
jecxz
or
adc
cmpsb
call
loop
add
mov
call
jo
popf
shrb
adc
jmp
xchg
ret
mov
movsb
or
jb
inc
add
add
aas
sub
icebp
ss
xorl
xor
mov
push
mov
add
jl
pusha
pop
sbb
push
jmp
adc
or
push
lock
add
lcall
and
dec
data16
inc
jo
push
pusha
sbb
or
xor
jmp
inc
pusha
dec
mov
push
xchg
stos
sbb
cwtl
and
adc
mov
fidivs
outsl
outsb
js
cld
mov
add
cmp
xchg
mov
push
sbb
xor
mov
jp
sub
ret
add
shll
stc
out
add
push
aad
mov
dec
add
add
sbb
ss
test
les
je
and
mov
adc
pop
fsubs
and
addr16
mov
jbe
xchg
push
enter
dec
mov
or
cmp
mov
mov
add
jb
insl
std
pop
dec
sahf
pop
dec
or
leave
je
push
lods
push
test
pusha
xor
scas
sub
add
outsb
jp
pop
lods
in
dec
js
and
sbb
push
not
or
adc
or
jnp
mov
dec
aaa
mov
and
push
faddl
mov
lods
call
inc
aam
movl
push
test
pop
les
in
mov
call
ja
call
or
mov
sbb
notl
adc
push
aam
hlt
call
pusha
clc
add
pusha
rol
pop
dec
xor
or
push
lock
dec
jne
inc
mov
lods
xchg
je
mov
push
adc
inc
lock
addl
sub
cwtl
outsb
cmpsb
data16
lcall
icebp
stos
ret
add
decl
cmpsb
xor
fsub
add
clc
adc
stos
lock
mov
cmpb
shl
push
push
inc
add
and
xor
mov
push
or
xchg
sbb
outsb
data16
dec
into
mov
andb
adc
cwtl
inc
adc
or
mov
or
push
or
dec
bound
push
roll
inc
or
add
sub
in
cmp
or
cmp
push
shlb
iret
jmp
test
sub
inc
cmp
cmp
hlt
or
outsb
lods
mov
pusha
mov
scas
inc
sub
adc
mov
in
and
addr16
cmp
inc
push
clc
incl
inc
sbb
rcrb
add
stc
or
and
pushf
out
mov
cmp
pushf
sub
mov
push
rol
adc
dec
jmp
sub
rorb
push
sub
scas
arpl
dec
sti
xchg
sbb
lcall
add
shlb
jg
lds
mov
push
mov
sarl
dec
inc
in
out
mov
les
jns
xor
mov
mov
dec
lods
jle
xor
mov
movzbl
or
pop
pop
loopne
nop
clc
push
ret
mov
inc
dec
stos
add
mov
shrb
rorl
xor
shlb
pop
faddl
lock
add
rcrl
icebp
sbb
lea
xchg
fdivrs
andb
sti
rcrb
add
dec
scas
jb
xchg
and
leave
or
add
sub
xor
fcomps
inc
cmp
or
sub
add
and
sbb
popf
fmull
shrb
orb
sbb
nop
push
loop
loope
add
aas
mov
inc
mov
loopne
pop
and
out
push
imul
and
loopne
mov
push
push
add
sub
fwait
adc
insb
test
cmp
pop
loopne
inc
pop
jl
aas
mov
call
scas
fdivrs
adc
mov
popa
test
jl
push
jne
data16
jb
loopne
adc
push
inc
stos
push
inc
call
jle
add
mov
jmp
or
add
sbb
pop
test
cli
adc
testb
adc
mov
cld
outsb
ljmp
fbld
sbbb
mov
dec
imul
adc
js
sarl
push
idivb
jl
pop
pop
rcrl
add
pop
adc
push
lock
push
inc
dec
adc
adc
hlt
sti
std
jnp
loopne
lock
filds
loope
jp
pusha
push
out
jnp
out
dec
cwtl
fxtract
adc
and
pushf
push
test
push
mov
and
stos
lock
mov
dec
fsubrl
sti
mov
or
or
stos
hlt
loope
fcmovu
pop
mov
sbb
or
in
xlat
stos
in
rcl
int3
cmp
imulb
dec
int3
ja
jnp
cmpsb
test
rcl
dec
jnp
std
cltd
rcl
loop
test
sub
push
mov
pusha
fists
mov
rcrb
adc
stos
addr16
shlb
rcrb
adc
push
inc
ja
inc
enter
and
sub
inc
pusha
stos
push
pusha
push
sub
add
loop
lods
cmpsb
pop
push
outsb
jmp
loopne
mov
pop
push
push
mov
xchg
mov
add
or
push
cmc
add
mov
mov
mov
fsubs
test
jg
and
enter
inc
popa
or
addr16
add
jmp
test
mov
mov
and
sub
pop
dec
cld
pop
inc
jne
jb
lea
call
xor
lock
lret
mov
adc
xchg
shlb
push
sub
jo
cs
sbb
test
add
insb
in
aam
adc
sub
xchg
mov
cmp
xor
jb
lea
call
loopne
or
outsl
das
mov
pop
sbb
sbb
xor
fs
add
add
movb
orl
and
ret
cmp
pushf
and
or
popa
in
lret
jg
adc
incb
adc
push
add
loopne
jbe
mov
and
and
add
add
loopne
sub
add
or
push
and
loopne
mov
add
rcl
pop
and
sbb
int3
jo
lods
fisttpll
lret
push
and
dec
js
pusha
cmpsb
ss
fisubrs
mov
add
or
jbe
inc
in
inc
les
cmp
adc
data16
ja
add
xor
add
je
sbb
sbb
es
test
cmp
test
xchg
add
mov
xor
or
jg
pop
lea
rcrb
sub
mov
fisttps
mov
add
dec
or
inc
adc
pushl
sub
xor
cmp
jmp
outsb
pop
scas
data16
or
sub
push
or
adc
clc
outsl
ljmp
mov
inc
push
cld
inc
add
xchg
and
add
fsubr
scas
pop
xor
jo
ret
sub
mov
cs
xchg
mov
faddl
cmp
or
fcomp
push
and
push
adc
repz
sub
sti
mov
and
sub
and
add
add
jl
inc
push
mov
jp
add
dec
imul
rol
fcompl
inc
faddl
rorb
fcomi
nopl
mov
pop
sbb
mov
sub
cmp
add
test
xor
pop
sbb
stos
jl
daa
xor
jae
in
shr
sub
jb
xchg
call
xchg
mov
add
or
xor
mov
mov
sahf
add
icebp
and
inc
call
in
cmp
add
dec
add
add
adc
ret
jl
inc
adc
mov
icebp
sub
shrb
push
sub
mov
ja
cmp
xchg
mov
adc
sbb
aam
test
xchg
rolb
inc
pushl
js
mov
nop
andl
enter
and
jo
rol
adc
fwait
call
add
loopne
sub
pop
sbb
xorl
pushf
lods
or
incl
cmp
add
daa
xor
pop
add
int3
xchg
cmp
pop
hlt
xor
adc
inc
lahf
sub
dec
int3
call
inc
loopne
jmp
mov
mov
or
or
xchg
push
or
adc
jnp
inc
test
pop
cmp
or
jbe
xchg
and
jmp
push
add
push
and
loop
and
pop
xor
pop
pusha
mov
subb
data16
pop
fisubl
cs
mov
and
mulb
outsb
adc
into
nop
xor
cmp
repz
cld
pop
add
in
or
or
clc
fisttps
in
and
gs
mov
mov
sbb
push
mov
inc
cwtl
shlb
outsb
aaa
outsb
mov
pusha
ret
call
pusha
mov
xor
jle
push
xchg
in
mov
sub
push
movl
jo
push
lock
mov
xor
mov
out
xchg
cld
adc
adc
das
pop
jo
add
test
inc
insb
jg
in
push
mov
or
or
in
das
js
stos
pop
cmp
push
pop
jo
lods
mov
jo
decl
xor
sub
mov
addb
cmpsb
test
inc
andl
mov
mov
leave
lea
call
adc
lea
push
adcl
mov
ret
or
inc
idiv
jbe
mov
adc
je
add
in
in
std
bound
push
mov
jbe
lock
test
or
mov
pop
stc
mov
mov
mov
push
push
xor
push
incl
pop
icebp
add
add
call
clc
pop
pusha
adc
cmp
call
inc
xor
pop
jmp
mov
or
cmpsb
mov
popa
mov
add
sbb
aam
xor
out
sub
cmp
mov
fucomi
lods
jns
or
adc
scas
inc
cs
js,pn
sub
jle
lcall
adc
push
call
push
inc
test
je
push
mov
mov
mov
inc
sbb
pop
fcoml
push
repz
fs
push
aad
dec
sbbb
add
cmp
inc
jg
loopne
scas
push
int3
lock
pop
push
adc
insl
bound
add
jae
movsb
mov
inc
push
mov
xor
push
mov
xor
cmp
in
cld
mov
call
lock
push
mov
mov
cmpl
or
sub
mov
xor
lea
dec
ss
inc
xchg
jno
mov
adc
xor
mov
push
loopne
fcomp
jne
pop
pop
mov
sub
es
jb
mov
out
jb
inc
and
sbb
xor
sub
add
push
sub
sub
xor
sub
xchg
push
xor
test
lcall
lea
add
push
mov
xchg
cli
sub
call
xorb
dec
bound
and
xor
rorl
add
add
and
xchg
mov
dec
scas
and
shl
fisubrl
push
push
scas
mov
push
mov
and
mov
xor
jne
add
or
lret
jmp
fbld
inc
xor
adc
and
inc
shll
adc
mov
push
mov
stos
out
xor
stos
mov
icebp
or
scas
sbb
xor
sub
outsl
add
adc
add
scas
lds
js
mov
movsb
notb
cli
mov
sahf
add
scas
push
test
cmp
daa
mov
and
orb
out
sbb
push
xor
lods
ljmp
or
test
lret
sub
xor
mov
jp
mov
incl
jae
lea
cmpb
loope
incb
mov
inc
jo
mov
or
shl
dec
inc
fisttpll
jl
inc
ret
je,pn
dec
xchg
les
inc
xchg
ds
push
enter
aaa
xor
cmpb
mov
lock
and
outsb
jg
xor
mov
sub
adc
cmpsb
cltd
idiv
nop
xchg
shl
clc
lcall
push
xor
test
cmpsl
sub
subb
sub
add
xchg
lcall
ljmp
add
and
jns
gs
mov
sub
scas
xchg
or
icebp
pmaxsw
xor
mov
fs
push
outsl
adc
aad
add
push
stos
inc
insb
inc
inc
dec
adc
lret
lods
and
insb
roll
jl
mov
push
add
mov
filds
addb
shll
adc
and
insl
adc
jmp
add
fwait
insl
cmp
dec
fistl
sbb
aad
fsub
sub
mov
push
inc
cmpb
cs
sub
cmp
add
addb
jg
fdiv
add
push
movsb
lods
ret
jl
pop
movsb
sub
nop
add
push
je
xor
cmp
add
and
push
mov
mov
jmp
inc
imul
ds
dec
or
sbb
xchg
push
add
sahf
cmp
dec
fdivl
mov
push
dec
cmp
popf
sub
xchg
mov
sbb
nop
mov
insb
adc
lods
add
popa
mov
std
mov
outsb
mov
add
or
add
fcoms
fst
lock
das
xor
int3
outsl
add
push
mov
xor
call
push
dec
shll
and
or
std
xchg
push
outsb
lea
xchg
inc
mov
shr
hlt
add
pop
iret
add
adc
push
aam
mov
add
callw
addb
addb
mov
das
andb
and
xor
dec
loopne
adc
jo
lock
cmc
or
addl
je
mov
mov
in
es
mov
jo
sbb
std
cmp
jae
jno
inc
add
bnd
jl
or
cmp
std
cwtl
subb
add
or
sti
sbbb
jnp
imul
iret
add
es
and
fdiv
je
add
xor
and
add
js
pop
je
jb
inc
add
pusha
andb
mov
gs
pop
push
push
add
popf
rol
test
jb
sahf
xor
adc
lods
jge
mov
inc
or
aam
xor
packssdw
or
stos
test
andl
cmp
push
add
jmp
xor
lock
adc
xchg
mov
xchg
or
jb
call
jno
rclb
mov
sub
pop
data16
std
adc
jp
jecxz
js
pop
dec
nop
xor
sbb
xchg
xchg
out
fwait
clc
xchg
pushf
sbb
popa
loope
jae
or
aad
push
in
mov
adc
js
sub
xadd
shrb
and
sub
mov
inc
out
add
ret
pop
or
mov
jle
push
dec
mov
hlt
jne
add
repnz
test
push
clc
jle
cmp
push
je
or
rorb
lock
xor
dec
loop
push
js
pop
add
inc
xor
cmc
nop
jg
sub
in
push
mov
call
mov
adc
pop
out
push
inc
push
aas
rorl
add
or
ljmp
mov
std
add
adc
je
jo
test
data16
sub
shrb
aaa
or
pop
adc
and
inc
std
fld
or
push
mov
cmp
stos
js
mov
data16
incl
adcb
adcl
push
call
clc
inc
movsb
in
add
adc
shll
push
subps
or
add
inc
es
es
mov
cs
sar
lret
out
push
nop
cmp
imul
aaa
fs
or
and
and
push
stos
mov
fs
sbb
andb
adc
dec
inc
add
mov
push
fs
cmp
pop
fs
fld
mov
call
adcb
mov
sbb
pop
clc
ljmp
add
dec
insb
or
push
add
jp,pn
cmp
sub
mov
aam
imul
pop
adc
adc
lea
xchg
mov
xor
jbe
dec
repnz
sbb
into
les
lea
pusha
push
jb
xchg
sub
int
pusha
add
add
das
jecxz
movsb
jnp
ja
rol
and
adc
cs
sbb
jmp
pusha
std
jg
mov
pushf
pusha
xor
int
pusha
xor
pop
xor
ret
adc
test
into
call
jg
outsb
test
jmp
xor
add
cmp
and
jo
pop
mov
push
jmp
sub
repnz
pop
xorl
cmc
add
sub
mov
jecxz
jmp
and
cmp
jne
pusha
enter
pusha
pop
mov
add
mov
jne
cmpb
pushf
loope
movsl
xor
testl
adc
add
dec
test
add
dec
sbb
shll
mov
pop
add
jbe
add
and
call
scas
inc
pop
xchg
rorl
and
clc
jmp
mull
je
push
push
pusha
jb
movsl
mov
push
clc
or
or
or
cmp
je
sub
popa
and
loopne
into
lea
outsl
test
jl
push
loopne
sbb
inc
mov
xor
out
shr
cli
test
std
dec
add
loop
add
fs
pop
cmp
xchg
dec
cmpb
iret
pusha
sub
cmp
loopne
sbb
pop
inc
pop
aas
push
insb
aam
add
int3
add
movsb
ds
adc
mov
in
aaa
in
enter
and
adc
idiv
mov
callw
loopne
pusha
fwait
or
lds
int
xchg
icebp
cmp
ret
loope
adc
or
push
xchg
add
push
rcr
push
bound
push
inc
testb
loope
rcrb
aaa
leave
mov
rclb
test
call
sub
fcoms
ljmp
push
fprem
push
js
xor
bound
ja
rcrb
add
cmp
int3
lods
add
es
or
add
mov
imulb
in
dec
ss
popw
pusha
lods
clc
loopne
loopne
push
outsb
mov
sub
jmp
mov
dec
mov
test
push
inc
xchg
inc
push
inc
nop
fwait
shrb
push
and
mov
pop
fcoms
into
pop
jb
push
add
pop
dec
loope
loope
push
aam
sub
adc
add
mov
cltd
mov
push
push
push
dec
sar
call
test
and
mov
loopne
nop
pop
pop
sub
pusha
cmp
mov
movb
and
mov
inc
sbb
add
pop
push
fs
xchg
inc
ds
adc
shlb
cmp
pusha
cmp
or
test
loope
roll
xchg
and
or
adc
jne
push
sahf
imul
push
add
xchg
es
pop
cld
stos
or
xor
push
push
nop
fimull
loopne
shl
dec
xchg
adc
push
aam
dec
push
inc
pusha
xchg
in
mov
or
xor
bound
adc
sub
add
stos
fildl
js
inc
push
mov
aaa
dec
sub
out
adc
lock
scas
mov
cmp
hlt
mov
mov
mov
jp
adc
sbb
dec
testb
or
cmp
xor
outsl
cmpsb
push
sub
enter
add
idiv
fistl
push
sbb
sbb
adc
daa
push
shrb
cmpsl
mov
jl
jle
or
xor
xchg
rcrl
movsl
jb
int
int3
mov
lcall
jb
mov
sbb
or
or
and
jo
adc
jg
add
mov
stos
repnz
mov
adc
add
push
icebp
dec
mov
je
mov
sbb
jo
adc
sub
adc
filds
jo
xchg
jb
faddl
adc
push
mov
es
push
je
adc
loopne
stos
xor
sbb
test
je
mov
push
clc
inc
adc
dec
pusha
jnp
add
push
nop
ljmp
pop
sub
mov
mov
in
push
pop
shrb
mov
lock
dec
adc
and
push
sbb
xor
mov
fists
push
cld
jno
lods
jnp
xchg
mov
mov
and
mov
icebp
fwait
test
call
call
clc
xchg
ljmp
jg
dec
add
orl
std
xor
mov
push
call
call
lock
mov
adc
stos
pop
repz
pop
mov
adc
push
mov
cld
mov
pop
add
push
jo
and
xor
inc
xchg
jmp
jo
hlt
jno
sbb
scas
xor
cmp
mov
add
fidivs
mov
inc
cmp
push
mov
push
mov
std
cld
xor
mov
push
mov
add
xor
sbb
lock
adcb
sbb
pop
incb
sub
xor
bound
jmp
sub
mov
push
lods
jno
sahf
sbb
or
insl
ljmp
or
and
lods
fucomip
lock
das
cmp
sti
xor
bound
pop
cmp
insb
enter
incl
cmp
je
add
outsb
lea
dec
shlb
mov
push
sub
clc
call
push
xor
adc
lock
daa
add
dec
rcr
mov
test
add
pop
inc
hlt
add
inc
mov
popf
sub
inc
sbb
add
xor
add
sahf
adc
in
lods
add
sbb
mov
inc
lock
divb
jb
mov
int
rclb
sub
ljmp
adc
lsl
adc
in
push
add
sbb
inc
aam
adc
xor
test
rcll
or
je
and
fdivs
sub
lock
mov
mov
xor
sub
push
cld
sub
mov
or
add
pop
nop
mov
inc
nop
sbb
adcb
loopne
in
hlt
shlb
add
ljmp
mov
push
icebp
push
xor
dec
ss
decl
clc
xchg
int3
lock
push
stos
ds
jge
xchg
xor
xor
or
test
pop
push
pop
sbb
sbb
cld
pop
lea
xor
cmp
repnz
sarb
aad
push
je
pop
or
lods
fcoms
xchg
xchg
add
xchg
loop
inc
or
or
rcrb
mov
mov
addr16
lock
test
push
fsubs
push
in
push
push
in
in
push
adc
adc
xchg
xchg
imul
xor
push
pop
loopne
mov
subb
cltd
xor
dec
imul
add
insb
mov
enter
fsubl
pop
cmp
es
pop
ss
xchg
roll
in
push
mov
push
push
call
mov
cmp
sar
out
mov
repnz
xlat
push
mov
lock
or
aam
and
and
mov
popa
je
lds
pop
and
or
cmp
jg
mov
mov
jle
mov
cmp
loope
inc
cli
dec
or
add
popa
sub
roll
or
or
mov
mov
push
fidivl
mov
sbbb
inc
jo
repnz
xor
push
add
lods
mov
sarb
enter
lods
adc
push
stos
subl
mov
adc
or
js
push
add
and
in
xor
dec
cmp
adc
decb
inc
and
cmp
pusha
mov
pop
hlt
fstpl
inc
fcmove
lock
enter
inc
sub
dec
ret
push
inc
add
add
jbe
push
adc
pop
jle
les
mov
lds
mov
call
push
movsl
and
fwait
jbe
enter
or
call
jo
xchg
jl
jb
jae
mov
ljmp
or
dec
xor
test
call
jb
loopne
adc
inc
mov
xor
sti
inc
mov
clc
adc
jl
xor
cmpb
call
push
cmc
inc
loop
out
hlt
hlt
lods
adc
inc
mov
xchg
bound
lock
cld
sub
mov
or
xchg
mov
push
pop
or
and
sub
mov
cmp
test
mov
push
xor
mov
repz
incl
jb
fcoml
sbb
jo
xchg
pusha
jecxz
xchg
or
in
or
pushl
pop
aas
lock
rclb
jo
mov
outsl
mov
and
in
or
mov
clc
sbb
push
sbb
cld
xchg
jmp
lea
mov
lock
clc
pop
sub
xor
add
sarb
push
adc
cmove
xor
cltd
add
loope
mov
push
mov
adcb
mov
mov
or
add
xor
adc
sub
call
jne
xchg
jg
and
lock
add
outsb
mov
pop
sbb
jg
call
xor
sti
push
push
lock
jno
test
xchg
dec
add
decb
or
es
data16
loop
cmp
loopne
loop
adc
sbb
sbb
dec
pop
sub
lods
hlt
ret
rolb
jecxz
lods
and
in
push
adc
cmp
je
xor
or
push
mov
xor
xchg
xorb
mov
je
jbe
or
dec
xor
or
inc
pop
mov
push
sub
sbb
jo
add
stos
inc
mov
jl
add
mov
pop
push
adc
jb
push
mov
loop
es
sub
mov
pusha
hlt
pop
std
dec
sbb
lods
inc
repnz
and
stos
fcomps
jo
xor
sub
mov
xlat
jbe
sub
mov
push
loopne
pusha
mov
mov
sub
dec
pop
or
fs
test
cltd
adcb
jbe
sti
add
pushf
dec
or
xchg
push
test
test
or
adc
or
or
orl
inc
adc
push
cmpsb
sub
insl
and
movsl
inc
cli
ret
and
adc
das
inc
mov
push
sub
shlb
sub
push
sub
insb
mov
push
jg
sub
outsl
mov
cmpb
mov
mov
push
mov
inc
sub
lcall
fs
sub
xlat
add
fistps
xor
rolb
or
call
and
adc
rcl
add
sbb
rcl
lahf
jle
and
cmp
adc
push
test
fidivl
cmp
scas
push
int3
push
mov
decl
scas
roll
movl
rclb
push
das
or
cmp
in
mov
addr16
cmpsl
push
cmpb
xchg
ret
rcll
inc
jmp
add
lds
loope
shll
clc
push
cld
sbb
enter
dec
and
push
andb
cmovb
or
call
enter
test
adcb
push
cmpsb
out
jo
xchg
inc
xor
add
pushf
in
mov
icebp
fildll
inc
inc
cmp
jbe
add
pushf
in
push
add
or
jle
push
push
cld
xor
jne
add
or
or
movsl
cld
and
rcll
jb
imul
out
add
in
jmp
mov
mov
fs
pop
icebp
pop
adc
test
shrl
lret
and
jmp
mov
push
pop
jecxz
pop
mov
pusha
adc
mov
add
rclb
mov
addl
mov
adcb
rclb
insb
push
or
push
or
mov
sub
lock
add
inc
cmp
outsl
decl
mov
scas
push
call
mov
ret
or
dec
dec
shlb
mov
and
jno
iret
mov
cmp
outsb
sub
push
mov
mov
jbe
shlb
ret
leave
cmp
and
jg
stos
xchg
mov
cltd
stos
xor
rolb
add
mov
xchg
subb
mov
push
test
add
and
imul
and
xor
loopne
sub
jg
je
popa
cmp
pusha
daa
push
test
push
and
cmp
mov
mov
and
and
jp
inc
mov
ds
ds
clc
sub
rolb
lock
push
ret
out
mov
adc
pop
or
xor
scas
mov
nop
inc
outsl
add
add
in
cmpsb
loopne
jno
fiaddl
flds
xchg
or
xchg
fs
rcl
push
or
jb
call
mov
loopne
pusha
and
mov
notl
hlt
dec
les
inc
orb
sub
loopne
adc
dec
adc
mov
jne
pop
inc
movsb
dec
loopne
adc
jp
xor
push
pusha
jge
cmp
pop
dec
cli
call
lcall
ret
inc
add
sbb
rcrl
sbb
or
mov
sub
cmp
xor
test
xchg
or
in
clc
loop
out
or
push
cmpsb
sbb
sbb
inc
jecxz
loopne
cld
loopne
or
stos
add
add
out
cmp
cmp
cmpl
mov
stos
or
loopne
xor
subl
fldenv
jg
test
call
cmp
add
rorl
xor
mov
psubsb
sbb
xor
lcall
xchg
orb
push
and
adcl
adc
pop
mov
sbb
sub
or
add
int
push
ljmpw
loop
clc
sarl
xchg
into
and
movsl
adc
ret
ja
jg
mov
idivb
xorl
addb
sub
and
scas
js
inc
xor
mov
repnz
xchg
add
ret
dec
sub
enter
mov
adc
fnstenv
pusha
add
pop
adc
inc
inc
inc
loopne
sub
mov
sbb
jno
pusha
sbb
lock
xor
call
loop
push
js
loopne
dec
pusha
lods
loopne
jb
pop
add
or
clc
scas
mov
gs
nop
xor
push
or
adc
call
cli
and
jo
cmpsl
sbbl
inc
jnp
cld
int
loopne
outsb
inc
repnz
xchg
and
loopne
mov
add
clc
xchg
loopne
aad
mov
pop
idiv
cmpsb
adc
fs
and
pusha
mov
add
xchg
pop
loopne
push
add
rorb
int3
loope
jecxz
pop
and
xchg
rorb
adc
inc
mov
enter
xchg
ret
stos
loopne
lea
test
sub
mov
es
inc
lcall
enter
or
iret
mov
sub
xorb
add
pop
shlb
test
cmp
adc
pop
mov
sbb
les
loopne
rolb
add
mov
je
loope
mov
fistps
test
or
and
dec
fistpl
adc
adc
outsl
or
and
loope
jo
mov
test
push
idiv
dec
std
and
push
data16
pusha
stos
test
inc
add
mov
popa
pop
push
dec
mov
cld
out
jp
xor
pop
dec
cmp
nop
jo
adc
test
adc
jno
add
add
jb
sti
orl
cs
push
inc
lock
xor
push
cmpsb
xor
xorl
jo
fs
fisttpl
adc
inc
es
and
mov
lods
subb
inc
mov
dec
mov
add
dec
or
in
data16
call
push
ret
incl
xor
mov
fucomi
rcll
push
or
xor
lods
jmp
sbb
cmp
or
jne
mov
sub
mov
sbb
lock
add
or
fcoms
or
and
fcomi
mov
out
xor
je
shrb
int3
nop
std
test
jl
call
lock
mov
pop
mov
or
push
mov
adc
test
adcb
pop
stos
scas
ljmp
and
and
jp
sti
mov
mov
adc
lods
push
sbb
stos
cmp
sbb
lahf
sbbl
push
sbb
negb
jo
call
ss
and
add
mov
pusha
add
or
mov
inc
aas
jne
test
cltd
push
mov
jo
std
jno
hlt
fidivs
pop
pop
mov
aam
and
jo
jbe
and
push
aam
jle
rcrb
addl
cs
jecxz
sbb
incl
daa
out
icebp
inc
add
fisubrl
incb
jge
jb
and
decl
xor
push
rdmsr
pop
inc
jl
add
push
idivb
inc
cmp
mov
ljmp
fucomi
inc
jl
test
or
inc
les
sti
push
inc
es
adcb
add
inc
shrb
mov
adc
dec
cmp
add
mov
std
inc
shlb
jp
jb
imul
mov
xor
jno
adc
push
push
push
push
xchg
arpl
push
into
leave
add
clc
dec
aas
or
das
push
call
or
xchg
pushf
xor
cmp
int3
mov
subb
sub
sbb
mov
clc
xor
je
cld
add
mov
push
push
jo
push
lock
dec
dec
sbb
in
jg
adc
mov
call
shrb
push
pop
sub
cmp
shll
jb
cmp
adc
add
pop
xorb
int3
cld
jg
lcall
lock
dec
cmp
mov
lea
mov
mov
dec
sbb
cli
mov
mov
jl
sbb
sbb
test
jmp
xor
test
xchg
jb
mov
jbe
mov
sub
mov
mov
xchg
xchg
mov
mov
dec
sub
adc
push
ss
dec
sub
sbb
xor
mov
test
repnz
push
pushf
test
mov
adcb
cli
lock
jno
dec
adc
mov
or
or
cmpsb
mov
mov
lock
inc
pop
add
jno
mov
push
or
stos
and
je
cmp
or
xor
or
leave
xchg
cmpsb
outsb
cmp
adc
xor
pop
or
icebp
aaa
call
xor
fwait
mov
stos
xchg
and
call
incl
icebp
lds
testb
mov
divl
pushf
sbb
std
dec
push
cwtl
mov
mov
gs
mov
cmp
mov
mov
lea
adc
cmpl
mov
lods
sub
mov
push
jno
test
cli
cmp
negb
nop
pop
xchg
xor
xor
clc
outsb
data16
aas
cmp
scas
orl
pop
add
add
jl
and
push
les
incl
sbb
or
push
add
outsl
ja
mov
jne
cltd
add
jno
rol
fwait
mov
insb
mov
or
add
and
mov
dec
add
dec
rclb
add
cltd
mov
mov
or
roll
adc
push
test
test
lret
aas
jl
and
jne
push
pusha
lea
push
enter
loopne
xor
jno
test
out
add
xchg
and
mov
adc
shlb
pop
nop
xchg
aam
in
les
dec
insb
inc
jl
jb
add
pop
icebp
mov
jne
rclb
or
add
lea
fcomi
or
xchg
or
sbb
dec
std
pop
push
jno
test
lea
xor
mov
dec
or
and
pushl
push
je
xor
in
dec
mov
hlt
adc
add
cld
fbld
insb
andl
movsl
mov
lret
lock
mov
mov
cmp
sbb
repnz
jae
sbb
lea
lret
inc
mov
in
sub
fs
es
mov
shrb
andb
imul
xor
push
outsl
jle
aas
adc
or
pushl
divl
mov
in
ja
xor
cwtl
jo
sbb
fisttpl
jbe
loopne
xor
adcb
add
ljmp
inc
pusha
jne
xchg
lea
jb
or
fwait
mov
inc
mov
jle
mov
dec
call
std
decl
mov
mov
mov
sub
outsb
adc
add
xchg
add
repz
pop
push
mov
push
push
cmpsb
inc
pusha
xchg
xor
leave
rcl
or
rol
pop
call
jb
jmp
lods
cmp
or
imul
pop
mov
or
and
push
mov
stos
mov
or
dec
jbe
sub
cmpsb
jle
repz
dec
mov
adcb
jle
cmpsb
sbb
aas
cmp
mov
add
je
add
dec
or
in
cs
jle
sbb
inc
out
adc
sbb
mov
adc
int
enter
pop
imul
pop
mov
enter
and
add
mov
inc
mov
sub
enter
pop
jmp
test
and
pop
out
add
sub
and
and
into
lea
movsb
and
clc
pusha
add
fsub
or
sbb
add
out
nop
or
sub
repz
push
out
adc
adc
notl
inc
sahf
rorl
inc
xchg
sbb
add
mov
push
sbb
mov
popa
and
push
mov
dec
adc
andb
fists
add
std
mov
and
jge
add
pop
xchg
adcb
in
das
push
test
call
push
hlt
pushl
mov
gs
mov
mov
dec
mov
call
fsubr
or
shll
or
xorl
or
sbb
xorl
xchg
or
dec
leave
enter
rclb
push
and
inc
loop
jb
cmp
sub
lcall
dec
nop
jge
push
xchg
sarb
add
lcall
xorb
rolb
add
loopne
xorb
jb
and
shl
xorb
in
mov
decl
clc
outsl
add
shrb
mov
imul
or
lea
add
mov
outsb
mov
add
les
outsl
mov
push
inc
xor
into
xor
inc
inc
push
lret
andl
xorb
or
mov
ljmp
and
adc
push
pop
jb
inc
lds
lret
cli
push
cli
nop
test
rclb
and
mov
loop
push
push
repz
es
xchg
movl
cwtl
rcrl
ret
pushf
je
or
inc
adc
fisttps
shrb
rorb
xchg
inc
adc
aaa
enter
add
aam
loop
add
mov
mov
call
or
movsb
iret
fstpt
addl
jb
je
push
push
aas
xor
lret
and
fistpl
ror
xchg
shrl
lcall
shrb
jb
jmp
lods
jb
add
dec
lcall
and
sub
jg
or
mov
xchg
adc
sub
lret
and
shrb
call
add
xor
shrl
dec
sub
jbe
xchg
sub
or
gs
cld
cmp
push
frstor
data16
xor
add
dec
adc
jp
cmp
je
mov
out
clc
add
sbb
cmc
cmpl
shlb
sub
cmpsb
lcall
orb
sub
jmp
pusha
xor
rclb
mov
loopne
sbb
add
xor
inc
or
bound
lock
mov
and
insb
ljmp
xor
mov
cmpsb
sti
loopne
fucomip
stos
add
or
adc
xor
aam
add
pop
sbb
xlat
aad
mov
cmp
loope
push
fmull
add
pusha
or
loopne
decb
cmp
or
xchg
inc
ljmp
cmpsl
ds
xor
pop
pop
out
inc
inc
cltd
out
lods
adc
aas
leave
mov
data16
mov
adc
dec
or
push
jecxz
fsubrl
fs
jecxz
in
in
loop
and
rorb
fsubr
or
nop
inc
pop
outsb
mov
add
fbstp
or
push
pop
ret
push
aad
pop
pop
add
jp
daa
outsb
jp
dec
and
rclb
out
adc
clc
loopne
call
add
or
je
pop
cmp
lods
dec
loope
or
mov
sbb
adc
ss
add
repnz
mov
jmp
push
add
dec
mov
xchg
or
xchg
dec
push
mov
adc
pop
pop
pop
adc
sub
shlb
cmc
fistpl
test
pushl
cs
rcrb
and
inc
mov
push
jnp
jne
mov
dec
cwtl
inc
leave
lret
sbb
adc
and
dec
mov
xorb
dec
inc
adc
add
aaa
pop
cmpb
aas
push
loopne
dec
lea
push
mov
add
aaa
xchg
xchg
sbb
pusha
sub
mov
lock
or
cwtl
loop
pop
hlt
xchg
add
fsubrl
cwtl
mov
pop
enter
xchg
jmp
push
mov
add
mov
push
inc
std
sub
movb
mov
adc
mov
add
test
loopne
hlt
or
inc
scas
mov
in
aam
ja
push
sbb
mov
int3
push
hlt
and
popa
mov
jo
jbe
push
mov
inc
pop
jo
cld
loopne
mov
pop
in
lods
jmp
sbb
in
inc
loope
mov
loop
addr16
sub
int3
xchg
stos
cs
dec
fisubs
jp
jns
loopne
pop
call
loope
lods
adc
pusha
lock
cld
call
add
mov
xchg
fisubrs
cld
fists
add
jmp
mov
les
xchg
aad
xor
rorb
lea
sub
inc
daa
or
inc
push
scas
adc
int3
add
rcl
pop
add
jmp
mov
mulb
mov
jbe
mov
jge
pop
pusha
or
jle
push
xor
test
fs
pop
call
in
pop
mov
xor
je
aam
std
mov
mov
cli
mov
or
out
pusha
add
add
and
stc
sbbb
push
cmp
cld
jo
pop
ds
push
jecxz
fdivr
outsb
leave
inc
ret
mov
xchg
loope
hlt
inc
dec
clc
add
pusha
sub
adc
int
cmp
and
es
fldenv
xorl
jb
shlb
hlt
mov
into
fsubrl
lock
push
call
fs
call
jb
and
ljmp
jno
push
mov
in
xor
lock
lock
inc
sub
push
js
je
mov
out
pop
jo
test
ljmp
mov
repnz
mov
or
xor
popf
mov
call
stos
outsb
adc
sub
ret
or
js
or
push
cld
add
ljmp
in
cmp
ja
das
imul
mov
cld
add
or
pop
notl
cmpsl
mov
or
lret
push
inc
pop
das
jl
dec
xor
or
stos
pop
pop
leave
mov
jecxz
orl
mov
push
aam
dec
jmp
cmp
in
insb
add
shlb
jg
sub
lock
mov
movsl
xor
movb
dec
push
lock
or
ja
bound
dec
jo
andb
xor
inc
or
icebp
add
test
jg
xor
xchg
mov
add
fstpt
or
rorb
xchg
idiv
pop
xor
icebp
xor
push
xor
pop
jbe
pop
inc
push
or
mov
mov
xor
jo
repnz
xchg
out
aam
xor
iret
jo
adc
jo
loopne
adc
add
jne
xchg
ss
rorb
xchg
mov
das
arpl
jge
push
std
sbb
xchg
test
cld
shlb
or
xor
cmp
dec
fsubl
or
add
inc
stos
movsl
fwait
mov
imul
mov
jns
orb
add
or
es
adc
nop
add
dec
ficompl
insl
mov
cmp
xchg
fmuls
dec
inc
inc
adc
xor
mov
mov
adc
jecxz
add
push
and
add
or
xor
stos
fwait
or
mov
cmp
inc
test
incb
push
dec
jecxz
push
es
jge
add
fisttpl
push
cmp
pop
add
in
subl
and
lret
mov
mov
ret
dec
sub
mov
pop
add
inc
fisubrl
ret
mov
pop
mov
cmp
pop
movsb
jo
mov
pop
imul
adc
sub
lock
dec
imul
mov
add
mov
incl
xor
jp
pop
hlt
inc
pushl
notb
stc
adc
inc
inc
stos
adc
add
outsl
jl
xchg
push
dec
pop
jb
xchg
pop
mov
pushf
add
xor
fisttpl
adc
pop
sub
jo
cmp
xchg
test
jo
push
xor
inc
pop
cli
mov
aaa
adc
loopne
js
push
add
push
jo
dec
add
sub
das
sbbb
add
sbb
mov
lock
jb
nop
and
inc
lods
icebp
or
jl
mov
pop
jl
call
inc
scas
mov
xchg
mov
push
mov
xor
sub
clc
push
sub
sub
rol
push
aad
xor
ret
jle
movb
loope
ja
je
pusha
push
xor
push
jne
or
inc
push
pop
sub
pop
lock
push
andb
xor
xchg
call
mov
sub
xchg
cld
add
and
xor
movsb
sahf
add
sbb
push
lock
shlb
cmp
fisttpl
mov
xor
lock
inc
and
sbb
mov
or
jbe
add
push
xor
inc
lahf
cld
out
and
je
add
jmp
inc
mov
and
xchg
xor
mov
stc
push
cmp
adcb
popa
std
out
inc
add
js
ret
pop
ret
jae
cwtl
pop
call
xor
test
out
lea
dec
adc
push
adc
xchg
xor
or
xor
mov
lock
sbb
je
mov
shrb
cmp
pushf
cmp
push
outsl
mov
add
cmpsl
ds
je
or
sbb
cmp
mov
mov
mov
inc
push
lock
or
xchg
ret
outsl
mov
mov
lods
xor
jg
aaa
dec
lods
push
inc
ss
nop
data16
aas
cmp
mov
sub
jo
xlat
cmp
xor
xchg
out
dec
imul
jo
pop
and
repz
adc
out
test
sbb
add
cmp
je
icebp
mov
push
mov
push
xor
test
es
call
rolb
mov
add
icebp
mov
pusha
add
shl
lock
test
std
outsl
scas
es
push
sbb
and
data16
icebp
fildll
lock
xchg
lock
xchg
xor
pop
mov
push
push
add
add
xor
jp
icebp
fbld
bound
lea
jae
sar
dec
mov
push
mov
mov
clc
mov
rcr
imul
mov
and
aaa
adcl
or
ljmp
popa
pop
push
and
arpl
lock
mov
test
xor
cli
push
lock
in
add
inc
std
sbb
in
mov
xor
sub
in
fwait
decl
sysret
icebp
pop
enter
or
inc
mov
scas
clc
xor
mov
icebp
pop
aam
mov
add
push
dec
dec
adc
gs
test
or
and
ffreep
add
or
cmp
dec
and
test
cli
lock
inc
push
fdiv
push
add
lcall
and
out
hlt
add
lock
mov
add
mov
stos
icebp
pop
cmp
ftst
lock
mov
fcmovnu
ficoms
mov
push
cltd
xor
xor
xchg
out
mov
pop
fcoml
aam
mov
push
bound
loope
pop
jbe
dec
cmp
jb
xchg
outsb
push
adc
push
es
lods
add
out
fidivs
fs
and
call
xchg
adc
ss
jb
pop
sti
add
push
pop
outsb
clc
mov
lods
push
and
sub
add
xchg
push
incb
xor
add
xor
or
mov
jbe
cmpl
out
add
inc
lcall
cmp
int
mov
sub
inc
sbb
into
dec
add
push
adc
push
mov
outsl
jl
js
pop
jb
dec
pop
push
enter
in
jbe
test
movsb
mov
add
inc
mov
call
je
in
lock
add
sarb
cmp
dec
jmp
and
mov
ljmp
xchg
fcom
jp
mov
in
fisttpl
and
inc
or
or
mov
inc
loopne
adc
xchg
testb
loop
push
xchg
mov
mov
or
or
mov
mov
mov
fidivrs
in
or
mov
mov
cmpsb
mov
int
test
test
sub
in
lods
mov
mov
inc
add
mov
rcrl
int
std
xor
jo
push
add
mov
ret
mov
sarb
mov
insl
imul
push
mov
mov
mov
or
push
mov
int3
mov
imul
inc
pop
rolb
xor
imul
mov
or
sti
das
fcomps
fsub
orb
fidivrs
out
cmpsb
jns
inc
xlat
outsl
sbb
std
mov
int
stc
adc
mov
xchg
adc
fidivrs
mov
rolb
inc
popl
or
incl
push
int
daa
add
mov
add
and
mov
std
ret
aam
iret
fwait
dec
std
mov
push
and
push
sbb
dec
rcl
or
pop
icebp
out
fwait
lock
mov
inc
xchg
ret
jge
push
mov
sahf
inc
push
xchg
shlb
inc
or
in
mov
sbb
push
mov
push
pop
add
in
mov
or
dec
and
push
dec
and
inc
adc
rol
fisubl
fnstcw
mov
sub
sarl
inc
imull
ret
or
sarl
fstpt
add
out
and
mov
xor
lock
sarl
inc
mov
fadd
loop
dec
call
or
dec
xor
adc
mov
inc
shlb
mov
or
inc
inc
xchg
ja
loopne
sbb
mov
dec
inc
inc
inc
mov
pop
mov
mov
jmp
bound
push
inc
mov
lods
mov
cltd
lock
push
or
or
push
push
cmpsb
push
pop
inc
or
inc
fsubp
or
pop
or
inc
dec
pusha
or
ss
and
inc
push
hlt
or
fs
outsl
or
stc
push
or
mov
stos
inc
push
shll
ljmp
add
push
clc
adc
jecxz
je
sub
sbb
movl
push
sbb
push
jbe
mov
push
xchg
incb
addl
jnp
dec
jb
mov
dec
ret
pop
pop
gs
fwait
add
stos
stos
or
adc
das
add
xchg
fmull
adc
mulb
sbb
xor
adc
ret
mov
sbb
adc
ja
add
and
call
inc
adc
jmp
inc
mov
add
push
dec
or
ret
push
cltd
xor
incb
xchg
lea
lock
xor
cmp
lahf
or
sbb
xchg
cmp
test
adc
lea
mov
xor
fld1
push
popa
scas
je
sbb
add
lea
pusha
shr
addb
fimuls
call
push
fnstenv
dec
js
aam
and
push
xchg
loopne
mov
imulb
loopne
jp
mov
loopne
cwtl
cmp
stos
pusha
ret
mov
push
jecxz
mov
hlt
aaa
leave
or
sub
lods
dec
mov
mov
or
lea
inc
mov
mov
inc
mov
rcrl
call
sub
add
outsb
roll
repnz
bound
jbe
adc
out
push
jne
mov
incb
cmp
push
fcoms
push
pop
cs
in
sbb
mov
mov
add
imul
mov
mov
shrb
rorb
inc
fisttpl
in
adc
rclb
rcll
mov
xchg
popf
cmpsb
pop
dec
aam
or
pop
rol
add
addl
fsubl
sub
ss
cmp
cmp
test
and
cmp
sbb
mov
outsb
xchg
pop
insb
stc
sbb
jle
cli
push
mov
call
and
inc
int
test
add
xchg
push
pop
adc
lcall
jmp
sahf
lock
ljmp
add
sbb
inc
insl
xor
xor
pusha
loop
sub
lock
xor
push
cld
push
cmpl
loopne
fs
inc
lods
xor
ljmp
test
add
je
call
xchg
add
call
mov
inc
fwait
add
stos
mov
or
add
mov
cmp
mov
adc
outsb
xchg
xor
mov
push
ret
lea
ja
mov
lods
nop
sbb
sub
or
add
pushf
loop
sub
loopne
pusha
sti
lock
popl
inc
and
inc
enter
sbb
and
inc
sbb
insb
xor
and
inc
push
inc
dec
inc
shrl
pop
idivb
add
xchg
add
xor
jne
mov
xchg
cld
lret
push
dec
js
sbb
fdivs
clc
and
and
or
mov
push
xchg
xchg
in
and
push
push
push
loopne
inc
xor
pop
and
mov
insb
mov
mov
mov
mov
lret
or
jo
call
mov
icebp
shlb
jno
bound
or
bound
jg
lock
in
pop
outsb
mov
out
xchg
sti
pop
push
out
mov
jae
cli
insl
jne
sbb
mov
adc
pop
cmp
dec
nop
and
push
mov
push
negb
loop
mov
mov
lock
and
sbb
cs
xchg
jmp
pop
inc
and
data16
mov
add
add
mov
insl
xor
mov
repz
ret
sbb
repz
scas
xor
jbe
je
pop
xor
add
std
jle
or
fistl
and
cltd
cmp
mov
and
sbb
stos
inc
add
fisubrl
les
pusha
addl
pop
push
sbb
mov
pusha
sub
loopne
pop
test
jp
lcall
cmovs
enter
pusha
and
add
push
adc
out
push
jle
pop
mov
ds
imul
pop
ret
jl
into
dec
add
adc
mov
xor
sub
cmp
ds
jge
stc
sub
jmp
addl
rcr
sub
adc
push
push
add
dec
leave
call
icebp
rolb
add
add
push
jae
pop
les
adc
clc
and
push
icebp
neg
jmp
pop
mov
mov
jo
test
adc
scas
jg
jbe
push
scas
lcall
shll
stc
ss
pusha
adc
pop
lods
lret
inc
add
sbb
or
and
loop
or
add
es
push
dec
xchg
ss
and
out
sub
in
ja
sub
cld
mulb
push
test
incb
push
iret
inc
sub
outsb
int
pop
cld
jl
icebp
pop
dec
add
nop
ds
jmp
mov
stos
inc
add
loopne
mov
jo
sub
push
clc
in
clc
sub
scas
repz
sub
and
cmp
ret
sub
jae
pop
xchg
dec
nop
pusha
and
or
add
mov
fucomp
or
std
mov
mov
test
xchg
incb
sbb
inc
add
jmp
cmp
mov
pop
mov
cmpsb
lock
sbb
inc
jmp
or
push
pusha
insb
lret
sub
mov
int3
inc
or
and
imul
sbb
imul
jo
lock
sub
push
inc
pop
and
cmp
pop
jg
andb
inc
push
xor
and
sbbb
mov
jo
or
xchg
and
dec
insb
insb
jb
enter
adc
shlb
sbb
mov
sbb
loop
push
mov
mov
adc
jl
lock
push
adc
pusha
inc
aad
mulb
js
add
and
xchg
adc
sbb
jo
mov
cld
add
ljmp
add
lock
pop
mov
push
mov
add
das
ljmp
lcall
inc
jg
sbbb
test
adc
xorl
mov
mov
fadds
dec
loop
mov
mov
pop
shrb
clc
or
ds
mov
je
or
mov
loop
sbb
aas
adc
inc
call
adc
punpckldq
inc
push
mov
jno
dec
jg
add
mov
dec
sub
movl
adc
loopne
mov
scas
mov
xor
jg
sahf
or
inc
mov
cmc
push
scas
push
push
push
stos
js
sahf
mull
filds
xor
or
jno
push
xchg
rorb
cld
je
icebp
adc
adc
xchg
push
int3
stos
ds
xlat
and
jb
mov
or
test
or
addr16
push
lahf
add
add
sbb
outsb
lods
add
inc
xchg
xor
pop
and
push
lock
sub
cmp
ja
lret
xchg
or
pop
cs
icebp
add
cmp
mov
jo
mov
add
jo
outsl
adc
lret
cmp
fmuls
jae
dec
add
push
pop
add
jbe
out
and
sar
aaa
mov
jmp
or
inc
xchg
andl
scas
js
fs
or
adc
or
jg
pop
inc
icebp
pop
lods
pop
adc
and
adc
shlb
or
leave
ret
ja
out
jp
lcall
push
xor
ss
mov
cmpb
sbb
mov
add
test
in
lea
cwtl
test
xor
add
sub
sbb
or
shlb
in
jg
int3
push
jo
adc
mov
jo
aad
adc
xor
adc
dec
hlt
sub
mov
add
mov
mov
in
mov
or
add
mov
mov
xor
cld
and
push
outsb
fistl
mov
dec
or
scas
push
pop
fadds
rcr
mov
pop
insl
or
dec
es
fadds
add
sub
dec
jle
sbb
push
jle
inc
jmp
sub
popa
jbe
add
add
xor
fsubrs
xchg
inc
xchg
enter
add
or
ficomps
enter
lds
aaa
inc
xor
inc
xor
push
xchg
jo
add
aaa
push
jg
and
test
lock
xorb
sub
add
mov
clc
push
push
push
xor
push
mov
push
sub
adc
or
jne
jbe
mov
add
and
push
or
pop
add
addr16
pop
push
push
inc
sub
fcomip
xorl
xchg
sti
push
push
push
test
mov
or
sub
mov
mov
xor
cs
out
mov
pushf
les
mov
add
aad
bound
and
adc
fnsave
ret
adc
add
cmp
pop
add
adc
inc
xor
movsb
pop
lcall
imul
mov
xor
loopne
repz
pop
js
mov
adc
or
mov
xor
push
outsl
add
add
xor
aam
push
shlb
jg
stos
adc
cmpl
mov
mov
js
cmpsb
jne
mov
push
push
or
popa
and
inc
stos
fs
push
add
xor
inc
xchg
stos
fs
jmp
pop
and
es
add
hlt
xor
bound
or
cld
xor
int
add
or
dec
mov
jle
outsb
inc
mov
je
mov
cld
call
inc
ret
ja
add
mov
xchg
adc
adc
mov
dec
or
cmp
fstl
mov
jp
std
sbbb
xorb
add
out
hlt
cli
cld
loopne
rol
inc
dec
or
xor
pop
mov
add
imul
mov
and
incl
pop
sar
xchg
push
xor
add
int3
pop
and
test
xchg
orb
inc
test
mov
mov
sub
cmpsl
in
push
shll
push
test
xchg
add
jno
inc
js
push
inc
cli
fistpl
jle
inc
pop
sub
testl
pusha
inc
insl
shlb
add
aaa
sbb
jns
or
add
push
push
cwtl
inc
mov
stos
or
adc
les
addb
orb
loope
lahf
decb
clc
or
shlb
je
inc
add
rorb
cmpsb
clc
sub
adc
push
imul
or
mov
push
ds
push
fnstcw
shlb
movl
mov
shlb
inc
adc
jo
movsb
jl
test
in
rclb
rolb
and
mov
inc
repz
xor
ret
pop
scas
add
sete
add
adc
mov
adc
out
xchg
je
pushl
pop
sub
testb
and
nop
jne
lods
jmp
mov
pop
lds
rcrb
mov
sbb
adc
adc
push
xchg
push
add
dec
sbb
mov
xor
ret
int
adc
add
in
es
mov
or
mov
inc
mov
rolb
xchg
and
push
rcrb
jecxz
mov
loop
and
mov
jge
mov
pushf
loopne
or
or
andl
ljmp
rolb
jbe
rclb
mov
dec
sbb
jo
les
inc
lret
cs
lock
inc
mov
divl
and
mov
adc
push
ret
rcrb
sbb
add
mov
fisttps
inc
rcr
out
shrb
cmp
sbb
and
scas
ljmp
mov
sub
jle
cltd
inc
jns
pusha
or
rorb
sub
inc
push
pop
mov
inc
andb
hlt
ljmp
hlt
jl
addb
andl
add
or
loop
cwtl
adc
daa
hlt
outsl
xor
lcall
or
dec
xchg
out
insb
and
jle
nop
adc
pusha
or
jg
mov
ret
cmp
add
jbe
lock
je
test
out
add
jl
dec
xchg
jmp
adc
outsb
jp
insb
push
hlt
sbbb
xor
loopne
loope
mov
and
push
push
pushf
loope
scas
push
jne
cmp
loopne
and
ret
rcll
adc
cmp
loopne
jb
jge
andb
test
ss
das
jp
lea
push
loop
add
bound
push
lock
or
orb
data16
test
repz
lods
nop
push
decl
adcl
inc
mov
cmp
xor
add
call
push
sub
pop
xor
lods
cld
push
imul
dec
push
or
adc
add
loop
divb
pop
cmp
pusha
cli
add
cld
adc
pop
adc
cs
std
inc
mov
imul
pushl
fs
sbb
sbb
sub
adc
loopne
jmp
jecxz
aaa
dec
out
sbb
je
or
mov
mov
adc
pusha
lea
cmp
lds
or
inc
dec
jb
jmp
sub
adc
and
imul
or
pop
sub
and
adc
es
inc
clc
repz
pop
jmp
repnz
jg
xchg
loopne
pop
ret
add
js
push
adc
pusha
cmp
mov
call
sub
xchg
adc
pop
jecxz
pop
adcl
loop
ds
lret
push
loopne
pop
loope
loopne
push
iret
cmpsb
inc
cmp
cmc
add
pusha
sub
add
shr
and
lcall
popa
mov
or
stc
push
loopne
pusha
dec
cmc
push
pop
js
insb
lds
jmp
lock
push
xorl
mov
or
faddl
rolb
mov
pop
mov
push
add
sub
stc
nop
addl
popf
push
jecxz
jne
or
sbb
pop
push
adc
ss
and
cli
or
testb
add
je
mov
fwait
cmp
and
les
loope
sbb
push
mov
dec
pusha
push
cli
push
leave
nop
ret
test
push
shl
adc
insl
pusha
loopne
addb
mov
xor
call
addl
xor
add
push
push
mov
sub
cmp
out
xchg
xchg
in
xor
cmp
sbb
fistpl
inc
push
inc
loopne
or
pusha
add
mov
mov
call
cli
mov
and
test
add
mov
mov
nop
jo
push
cmp
jle
je
push
push
hlt
sub
adc
sbb
adc
push
std
pop
rcrb
sbb
in
adc
jmp
test
and
pop
insb
pusha
inc
pop
daa
add
jne
or
xorb
or
pop
testb
xor
sub
fisttps
rcl
add
imul
test
inc
pop
sub
ljmp
mov
push
dec
cs
mov
and
in
push
mov
push
xchg
shrl
pop
stc
in
das
xchg
xchg
loopne
add
jg
push
rcrl
xchg
movsb
lcall
adc
push
push
mov
inc
adc
sahf
test
push
decl
nop
dec
mov
inc
in
jo
ja
ret
shufps
daa
jle
add
push
and
adc
push
jo
push
incl
inc
dec
adc
xor
std
lock
test
xor
pop
aas
je
out
add
inc
and
ret
js
pop
leave
jno
popa
mov
and
push
xor
lcall
mov
push
and
lock
xor
mov
mov
and
add
shlb
and
into
addl
incl
sbb
in
pop
add
and
adc
push
xor
or
cmpl
hlt
and
mull
add
leave
lods
scas
decl
lret
push
call
adc
sub
mov
fsubrp
fldcw
push
push
jo
mov
push
push
clc
jmp
outsb
sub
inc
nop
xor
add
test
pushf
sub
mov
jge
hlt
xor
shlb
fs
fisttpll
mov
cld
cmp
insl
push
fdivrs
test
add
sbb
lcall
inc
push
add
push
xor
movb
stos
dec
xor
mov
jmp
cs
and
add
lea
cmp
nop
push
fisubrl
js
mov
add
pop
mov
add
lss
dec
pushf
addl
cmp
ljmp
filds
dec
sbb
mov
nop
popa
mov
fxtract
test
jg
push
repnz
je
addb
adc
xchg
dec
push
sbb
mov
inc
push
xchg
add
orb
pop
adc
jne
inc
push
push
sbb
jbe
push
xchg
inc
jo
fstl
jmp
loop
mov
stos
dec
mov
hlt
jo
push
clc
ja
mov
and
add
mov
and
imul
sub
mov
push
jl
es
enter
adc
jo
jne
ret
and
stos
xor
dec
dec
xor
idiv
cmp
rcl
adc
pop
lret
outsl
ds
cwtl
add
inc
ja
js
or
pusha
mov
bound
les
aas
rolb
gs
clc
or
bound
xorb
decl
fsubrs
add
mov
mov
and
test
mov
cmp
xor
bound
mov
or
cmp
ljmp
insb
mov
je
lock
push
add
or
insb
mov
repnz
fimull
fcoml
bound
jo
nop
mov
adc
mov
and
add
pop
shlb
mov
dec
nop
aaa
dec
mov
popf
icebp
jl
lock
aad
ds
push
xchg
mov
call
xchg
sbb
pushf
push
pop
jo
icebp
dec
movsl
push
mov
lods
fistps
and
add
xor
je
out
andb
pop
aaa
call
test
mov
inc
adc
mov
jo
lret
xchg
adc
jb
mov
and
or
sar
jl
xchg
jne
jb
or
sahf
call
movsb
cmp
xor
movb
or
pusha
adc
shlb
mov
jecxz
inc
rcrb
loopne
adc
jbe
aaa
adc
xchg
fdivs
mov
rorb
mov
mov
clc
clc
mov
data16
or
xor
dec
mov
mov
in
add
lock
pop
add
mov
mov
sti
movl
mov
pop
insl
in
xor
les
test
jo
lock
ljmp
cld
int3
int
adc
ret
mov
mov
jo
xor
add
add
cmp
mov
lock
test
movsb
shlb
mov
shll
in
push
mov
fldl
dec
mov
inc
clc
decl
dec
pop
or
pop
mov
add
je
sub
push
dec
and
sub
cli
jbe
xor
fadds
or
push
jmp
sbb
xchg
rolb
cld
inc
sub
aaa
fdiv
ja
lea
and
jl
jo
adc
adc
rol
jle
in
dec
mov
jbe
or
add
push
pusha
mov
hlt
add
fdiv
pop
mov
sbb
sbb
add
ret
pop
dec
jne
out
lock
pop
fadds
xor
stc
out
movsb
mov
imul
ret
jb
cli
or
xor
fnstcw
insb
mov
xor
xor
cmp
adc
test
call
push
mov
xchg
js
out
xor
pop
enter
dec
jp
lret
or
adcb
or
pop
nop
push
hlt
mov
decb
loope
adc
call
or
pop
xor
ret
push
clc
aaa
mov
dec
lock
incb
add
pop
dec
mov
jbe
adc
adc
push
or
div
mov
cmp
mov
pop
and
fildll
adc
push
push
push
push
shll
shr
sahf
mov
jo
outsb
das
je
sbb
call
push
push
lods
push
or
add
adc
xor
orb
sbb
mov
inc
sub
jno
inc
jns
mov
les
sbb
pop
mov
mov
jo
mov
addb
in
adc
mov
in
mov
scas
add
sbb
jge
mov
jbe
mov
push
scas
add
ja
mov
cli
add
call
loopne
and
dec
mov
jmp
adc
push
hlt
adc
add
icebp
push
or
mov
jg
cmp
testl
repz
cld
xor
add
push
mov
je
test
mov
add
push
rcl
insb
aam
rclb
adc
inc
xor
je
stos
pop
and
aam
sub
pop
sub
jae
and
lea
test
ret
bound
fildll
js
cmp
jae
fiadds
sbb
lock
add
fwait
jbe
pushf
inc
jb
or
test
ret
push
inc
sub
fmulp
inc
fisubs
add
icebp
push
jne
jl
add
hlt
call
mov
mov
fcos
je
xchg
test
xchg
pusha
lret
adc
dec
mov
out
mov
push
scas
imul
dec
sub
sbb
push
adc
clc
add
push
push
je
xchg
pushf
inc
jmp
dec
sub
insb
xchg
xor
push
or
inc
dec
sbb
mov
mov
pop
imull
mov
and
or
xor
mov
xor
subb
fists
xor
lea
insb
pop
jp
or
xchg
mov
add
addb
or
and
mov
orb
repz
adc
fs
cli
fwait
sub
fs
mov
je
inc
and
inc
add
jnp
or
daa
mov
or
enter
cmp
xchg
enter
push
or
xlat
into
decl
and
nop
mov
inc
sub
mov
jno
add
mov
push
push
add
or
push
pop
mov
ljmp
mov
addb
stos
nop
hlt
xor
movsb
mov
pop
xor
sahf
push
std
add
mov
add
orb
add
mov
clc
xchg
inc
loopne
cmpb
push
push
call
add
push
outsb
xor
loopne
sbb
push
push
and
call
clc
cli
stos
or
int3
xor
enter
push
inc
xchg
je
push
mov
mov
adc
iret
add
inc
inc
cmp
xorb
xchg
pushf
or
add
int3
or
xor
xchg
or
cld
iret
xor
fistpl
loop
data16
rorl
shlb
testb
sbb
sbb
dec
cmc
fstl
adc
dec
test
pop
cmc
sub
pop
mov
xchg
adc
add
test
test
sub
jnp
cmp
dec
int3
cmpl
mov
sub
daa
push
cwtl
lock
je
frstor
hlt
sarb
dec
or
cli
adc
xchg
mov
dec
into
int
cmpl
mov
or
mov
add
adc
fs
lret
mov
adc
or
call
aad
inc
adc
pop
repz
mov
add
sbb
pop
mov
adcb
mov
mov
mov
add
xchg
mov
fiaddl
add
and
or
roll
loop
dec
mov
or
rclb
mov
adc
movsb
push
add
inc
push
mov
adc
lret
pop
push
and
call
arpl
adc
sarb
pop
push
and
xor
rorb
sub
mov
xchg
rolb
or
mov
add
jnp
xor
cltd
mov
test
inc
and
data16
pushf
ror
add
js
decl
add
xchg
mov
push
and
rolb
pushf
pop
mov
add
ret
cwtl
out
movsb
add
roll
in
inc
movb
imull
mov
fildll
mov
sbbb
ljmp
add
movl
lock
and
mov
jp
cld
pop
aad
test
nop
and
int3
test
push
mov
sbbb
rorb
jo
push
loopne
test
fiadds
jbe
shl
js
adc
mov
fadd
testb
lock
fwait
add
cmp
decl
jmp
pusha
add
or
add
push
rcr
lock
rcr
or
jne
inc
test
subb
out
mul
add
push
add
divl
cmp
js
sub
testb
sbb
mov
outsb
fdivrs
ljmp
fdivrs
incb
test
inc
cld
dec
outsb
popa
mov
push
mov
hlt
push
push
or
out
xchg
xor
jl
ds
mov
add
imul
push
adcb
pop
pop
movsb
ret
or
ret
data16
loopne
inc
xor
fstpt
shrb
add
fdivp
ret
mov
test
push
sarb
xor
push
mov
sete
push
cmpb
out
fiadds
mov
pop
into
add
aaa
pushf
adc
cmovs
push
push
test
push
mov
or
add
je
or
es
cmc
inc
movb
jp
cmp
sbb
xchg
cli
push
or
imul
inc
out
push
shll
scas
push
cmp
mov
sub
pusha
jnp
cmp
outsl
lcall
out
shr
or
inc
roll
inc
inc
mov
and
clc
push
xor
mov
pusha
xchg
mov
adc
pusha
ljmp
jp
ja
mov
pusha
and
hlt
or
aam
lock
or
mov
loope
sub
loope
push
pushf
dec
lds
fadds
loope
add
xor
xor
lock
data16
jbe
insb
and
jb
add
loopne
or
jo
and
test
lds
gs
pop
or
andl
dec
mov
cs
and
fwait
mov
adcb
mov
push
xchg
inc
xor
cs
lock
push
inc
jle
and
mov
loopne
mov
ret
nop
dec
or
adc
jb
lock
cmp
xchg
ljmp
je
jo
pop
jae
fdivr
fdivs
mov
scas
call
and
popa
sbb
test
mov
add
aaa
dec
inc
andl
dec
loope
or
adc
pop
pop
rcll
cld
test
test
inc
fcomps
dec
push
or
jmp
hlt
leave
and
lock
hlt
push
sub
loopne
adc
cld
roll
pop
adc
or
dec
stos
clc
jo
add
mov
xor
and
pusha
cmp
pop
and
add
adc
sbb
pusha
cmp
sbbl
das
push
inc
mov
xchg
push
xchg
call
lahf
loopne
inc
or
xor
mov
push
mov
cmpsb
sbb
xlat
hlt
imul
pop
xor
pop
xchg
insl
in
pop
mov
out
cltd
clc
out
push
lock
adc
add
in
pop
lods
outsl
mov
adc
push
adc
pop
inc
pop
fldt
pop
fildl
push
push
fs
mov
imul
sbb
xor
add
and
sbb
mov
sbb
sbb
icebp
add
and
mov
add
cld
jo
clc
and
insl
cs
sub
mov
sub
addb
fadds
in
loopne
mov
add
in
push
aad
shrl
mov
push
xchg
mov
imul
xor
jl
frstor
mov
sub
cld
mov
sbb
and
std
or
add
or
and
sbb
add
dec
stos
sub
xor
insl
imul
push
mov
sbb
add
out
cld
fidivs
rcrb
lock
push
lock
aam
imul
or
pop
cmp
movsb
scas
fnstcw
push
das
jo
cmpb
xor
mov
sbb
movsb
cmpsl
pop
ss
xor
mov
cs
push
fistpl
fsubrs
icebp
add
dec
push
and
repnz
inc
test
dec
stos
xor
stc
mov
and
mov
ret
mov
add
out
adc
cld
push
stos
lock
cmp
jbe
lds
push
icebp
add
loop
int3
sarb
push
jg
or
jg
jbe
add
rcr
lahf
jbe
int3
cmc
add
push
fs
xchg
sbbb
mov
insb
mov
loopne
xchg
jo
jp
push
mov
aad
jo
daa
mov
div
frstor
push
sbb
or
outsl
pop
push
or
push
xor
xor
or
xchg
js
jl
jne
mov
or
lock
mov
sbb
add
push
lock
push
sub
lock
push
mov
adc
lds
sub
pop
push
mov
roll
jb
call
sahf
add
mov
mov
nop
xlat
icebp
jecxz
ja
adc
pop
rorl
ljmp
jns
lods
lock
loopne
or
jne
ds
or
xchg
jmp
mov
popa
movsb
pop
std
in
add
imul
ljmp
push
xor
fidivl
cmpsl
pusha
mov
pop
sbb
sbb
ja
inc
mov
jne
ja
push
xor
push
adc
imul
push
andl
int3
ss
push
add
adc
sbb
nop
loope
sbb
out
sbb
inc
lcall
push
stc
stos
mov
test
add
clc
call
test
js
je
mov
out
or
rorl
push
addl
or
je
pusha
aam
dec
lock
outsb
jo
test
mov
cld
rclb
xor
mov
sub
lods
stos
adc
movsb
jo
inc
push
test
push
sub
add
bound
pop
mov
or
jp
sub
add
stos
jnp
add
stc
imul
lods
cld
or
adc
leave
stos
in
stos
fmull
imul
push
js
pop
jae
and
pop
mov
jge
xchg
jae
pusha
pop
pop
adc
fwait
or
stos
dec
rcr
subb
dec
xor
cmp
push
add
xor
sahf
or
lcall
lods
push
xchg
add
dec
mov
stos
xchg
addb
fdivr
sbb
stos
jbe
push
sbb
daa
and
pushw
bound
jnp
add
push
stc
xor
scas
imul
in
jmp
subb
int
push
hlt
stos
aad
roll
stos
sbb
imul
mov
add
mov
testb
popf
add
stos
cltd
adc
dec
jae
cmpsb
add
lea
dec
repz
jns
movb
ret
ficompl
mov
mov
scas
push
sbb
mov
out
lcall
lcall
outsb
push
imul
imul
imul
out
and
sbb
adc
imul
cli
dec
imul
repnz
push
ljmp
cmp
fcmovbe
ror
ret
cmp
ror
mov
in
add
jne
mov
mov
push
sbb
mov
repz
repz
repz
jp
jb
push
xor
repz
pop
pop
push
push
repz
repz
dec
inc
inc
ds
repz
cmp
xor
sub
xor
repz
push
sbb
adc
xor
repz
or
add
shlb
mov
imul
sbb
sahf
cmpsb
imul
cmpsb
imul
loope
inc
lahf
mov
push
les
mov
add
add
push
inc
xor
insl
cmpsb
shl
mov
mov
mov
push
imul
sarl
pop
push
sbb
in
sahf
adcb
sbb
imul
data16
shll
pop
pop
push
push
imul
or
sbb
inc
loopne
or
sbb
imul
xor
sbb
and
sbb
adc
in
cmpsb
push
popf
or
inc
add
push
decl
xor
repnz
ljmp
loop
fiaddl
add
mov
xor
inc
fiaddl
popf
arpl
movsb
call
cmpsb
sbb
in
loopne
pushf
xchg
movsb
add
shll
jbe
movsb
add
adc
stos
movsl
mov
in
loopne
pop
add
add
add
dec
cmpsl
sbb
jo
cmpsl
push
sbb
adc
sub
jbe
pusha
stos
movsl
mov
cwtl
cmpsl
imul
cmp
stos
mov
mov
and
sbb
mov
xor
cmp
push
dec
dec
stos
in
roll
pusha
sahf
add
adc
andb
hlt
shrb
sbb
fadds
jno
sub
jecxz
add
stc
dec
imul
cmp
push
jmp
dec
sarl
inc
repz
das
sbb
mov
sbb
xchg
inc
test
push
xor
inc
fadd
inc
and
and
pop
lcall
stos
push
and
xorb
jne
or
push
outsl
sub
add
inc
sti
adc
add
aas
aam
inc
dec
sbb
sbb
add
inc
das
pop
movsl
pop
adc
pop
pop
sbb
mov
and
xor
notl
xchg
sar
xor
sti
addl
push
shl
add
in
mov
loope
adc
add
out
mov
sti
shrb
das
ret
add
adc
xor
pop
add
sbb
ret
sub
sub
cmp
sti
add
mov
std
xor
push
data16
mov
mov
mov
sbb
inc
rcrl
or
xor
aam
call
and
adc
fs
dec
add
jne
call
jbe
mulb
cmp
add
dec
or
xor
outsl
sub
and
pop
das
add
push
pop
and
mov
jl
jl
add
cmp
pop
mov
sub
cmp
adc
push
mov
fbstp
inc
mov
add
call
mov
and
pushl
out
push
mov
jb
mov
pushl
mov
adc
and
pop
mov
fisttpll
mov
cmpsl
add
or
push
add
jp
jg
add
push
ljmp
mov
jg
enter
in
or
lock
mov
xor
call
mov
repnz
or
js
roll
push
call
dec
dec
adc
mov
mov
adc
add
adc
adc
mov
xor
stc
sub
xor
xor
push
cmp
mov
nop
xor
cltd
xor
cmp
call
clc
xor
ret
addb
xor
sub
das
clc
outsl
aaa
xchg
repnz
call
cmc
or
sub
pop
mov
pop
incl
adc
je
fidivs
out
mov
fdivrs
stc
add
and
call
inc
jo
lock
and
mov
add
ljmp
sbb
fs
cmp
call
xor
mov
mov
stc
jno
std
xchg
mov
sbb
add
sbb
cltd
movsb
gs
add
inc
pop
mov
popa
imul
xor
out
jo
and
jo
mov
aaa
sbb
mov
call
movsb
popa
pushf
pop
pop
call
adc
decl
sbb
loop
mov
in
and
and
or
adc
pop
jo
inc
incl
mov
xor
mov
mov
cld
lock
add
pop
fists
or
sbb
cld
nop
xor
cld
mov
jge
lret
sti
in
jmp
int3
imul
cmp
xor
outsb
or
xor
cltd
xor
mov
cld
insl
addl
ret
jbe
add
mov
fnstsw
xor
push
lock
sti
cmp
es
loopne
test
sbb
xor
add
and
ss
add
mov
mov
inc
sbb
ljmp
test
push
add
jno
mov
adc
inc
fimull
hlt
add
xor
sbbb
fwait
insb
push
repz
xchg
jno
xor
incl
mov
movsl
call
test
jno
dec
adc
add
cli
jo
outsl
mov
push
hlt
add
call
jne
repnz
repnz
add
pop
call
sbb
add
jg
int
push
pop
shl
sti
jb
add
call
adc
xor
sub
sbb
pop
adc
lods
cmp
mov
fistpl
adc
pop
sti
or
jno
imul
jo
push
mov
testb
mov
lahf
inc
xor
inc
xchg
loope
jne
mov
add
adc
jo
add
ds
xchg
div
fsubrs
mov
push
jo
sbb
ja
test
out
call
add
fldt
jp
xor
sbb
push
shll
push
xor
shl
mov
sub
aad
add
sbbb
lds
lcall
jae
sub
das
pop
cmpsb
fwait
lock
xor
adc
inc
mov
pop
jl
xor
or
xchg
sub
jb
shll
stos
jbe
stos
test
mov
and
push
cs
push
adc
jne
xor
call
or
inc
jbe
pop
or
add
cmp
mov
out
or
mov
push
mov
lcall
fildll
mov
or
push
push
clc
jno
ljmp
outsl
or
call
cmp
pop
mov
jo
and
adcb
or
clc
jbe
test
sub
mov
xor
ljmp
inc
add
xchg
clc
test
pusha
sub
or
or
pop
xor
loopne
cmp
jmp
pop
mov
ds
or
test
in
aam
sti
js
jbe
cmp
sahf
cmp
mov
mov
test
cmp
adc
in
sbb
and
add
call
xor
lods
call
add
pusha
push
aam
add
outsb
lock
addb
cmpsb
jae
xor
sbbb
outsl
add
aaa
jmp
or
sub
call
pop
fidivrs
mov
negl
loopne
addl
dec
inc
cmc
test
fsub
fxch
test
or
or
iret
or
fs
loopne
inc
add
testl
mov
std
clc
outsl
jmp
xor
call
cld
cmp
mov
subl
pop
addl
mov
scas
mov
fdivs
jl
addb
or
test
or
add
dec
cmp
or
out
add
xor
inc
and
and
add
xorb
or
push
rcll
mov
je
mov
and
sub
push
mov
xorl
mov
add
andl
mov
in
cmp
je
adc
loope
jmp
add
pcmpeqb
jb
jae
insb
orb
xchg
mov
inc
sar
fbld
add
nop
ret
rolb
add
sub
nop
je
ret
movsb
push
cmp
movsl
je
ret
cmpsb
adc
ret
ja
mov
stos
adc
ret
stos
je
ret
lods
inc
lods
je
int
outsb
fcmovnb
scas
adc
ret
mov
adc
insl
je
ret
outsb
or
add
ret
outsl
hlt
ret
movups
push
or
int
shlb
pusha
ss
lret
and
mov
fsts
call
mov
push
add
lret
push
ret
or
ret
jno
pop
les
inc
cli
xor
mov
rolb
mov
pop
les
mov
add
jo
dec
incl
add
hlt
or
rol
jle
outsb
ret
aam
xchg
mov
or
jle
mov
add
or
inc
ret
icebp
incl
shrb
call
push
call
add
arpl
adc
rclb
mov
and
loope
add
xchg
out
in
in
sbb
call
inc
push
jne
push
add
imul
add
in
or
test
cmp
lcall
pop
xchg
fdivrp
inc
rolb
shll
adc
mov
push
mov
shlb
inc
aas
pop
push
push
inc
and
cmp
jg
sub
xor
xadd
std
inc
pop
jl
jbe
ljmp
cmpsb
push
addl
je
mov
and
addb
xor
sbb
adc
movsb
sbb
sbb
loop
cmp
sbbb
fistl
scas
clc
or
addl
je
loopne
pop
inc
jg
inc
call
ljmp
or
and
ds
push
or
call
cli
mov
jmp
imul
cmp
inc
loope
pop
cmp
inc
sbb
adcb
mov
hlt
xor
bound
and
lds
push
ret
test
ljmp
pop
xchg
or
cmp
cmc
hlt
adc
add
loop
fwait
incl
pusha
dec
ret
sub
mov
inc
push
loope
or
int3
in
cli
mov
imul
popa
cmp
add
inc
xor
push
mov
push
loope
mov
in
inc
out
add
xor
push
sbb
lcall
jle
ljmp
punpcklbw
clc
jle
in
add
fs
imul
pop
popa
add
or
add
das
xor
mov
inc
inc
mov
subb
and
pop
je
dec
movsb
call
inc
push
or
mov
add
arpl
add
and
test
adc
add
arpl
out
fisubrl
insb
ret
pop
sbb
ja
and
cld
sub
adc
push
xlat
pusha
add
shll
imul
out
inc
or
lret
jbe
push
rorl
inc
dec
pusha
or
enter
js
mov
cmp
pop
inc
xor
loope
outsl
loopne
fldt
jp
sahf
loope
adc
fwait
push
call
andb
lcall
sti
scas
push
sbb
call
adc
cmp
pusha
and
xchg
add
je
repz
cmp
inc
in
inc
inc
cmp
inc
add
add
ja
mov
add
jae
xchg
inc
adc
fidivs
sbb
fyl2x
dec
adc
in
add
pavgb
or
adc
push
and
mov
cld
add
push
jo
jmp
push
jne
push
push
or
jnp
xchg
mov
push
rorl
pop
xor
in
mov
icebp
add
cwtl
divb
aas
add
rcll
inc
or
fcmovnu
scas
jno
mov
stos
xchg
mov
or
fdivrs
push
pop
add
lods
aaa
dec
shl
jle
lods
dec
out
cmpsb
fisttpll
movsl
mov
out
add
or
push
cli
mov
lcall
andl
push
inc
adc
pushl
out
sarl
scas
mov
pop
mov
mov
fisubrs
add
stos
jmp
cltd
or
adc
cmp
dec
lcall
mov
or
adc
add
push
stos
pop
xchg
jmp
pop
add
jo
xchg
negb
mov
stc
aaa
cs
pop
push
test
cmp
mov
or
sbb
cs
xor
imul
mov
imul
or
or
add
pop
cmc
lock
sub
mov
jno
imulb
pusha
idiv
push
cmpsb
add
mov
and
xor
cmp
addr16
shll
sbb
jecxz
das
sahf
cmpsb
stc
or
sbb
cmp
jne
mov
ss
push
mov
shll
lock
call
mov
aad
int
xchg
loop
popa
imul
shll
stos
mov
sarb
jo
dec
push
inc
adc
lahf
sbb
and
stos
lock
push
loop
sub
xchg
mov
xchg
sbb
ljmp
divb
and
stos
shrb
jl
shl
jo
add
mov
inc
in
imul
test
popf
push
add
icebp
outsb
pop
xor
or
jb
test
fmulp
xchg
je
push
sbb
add
inc
popl
dec
add
jb
gs
int3
push
dec
mov
mov
lcall
imul
and
fs
mov
pop
pop
les
dec
cmpl
or
push
sahf
mov
shlb
jb
add
mov
add
add
idivb
pop
push
outsl
inc
outsl
mov
inc
popa
je
push
sbb
bound
add
jo
adcb
pop
add
pop
mov
ss
mov
bound
push
nop
lcall
outsl
or
add
in
es
fiaddl
gs
mov
xchg
jb
inc
gs
je
push
int
mov
ss
das
shlb
or
add
xchg
add
add
fcom
and
push
mov
mov
push
sahf
adc
push
fadds
sub
xchg
ds
jae
add
add
jb
jb
pop
cld
mov
inc
and
gs
sahf
outsb
fs
mov
out
mov
or
add
int
xor
cmp
jl
add
add
xor
jns
jo
scas
pop
or
popf
inc
dec
xor
push
add
jge
popa
or
mov
imul
adc
gs
mov
imul
rcl
aam
xchg
loopne
jle
jbe
mov
bound
xor
idivb
icebp
add
pop
out
add
mov
add
add
lods
gs
test
cmc
inc
jbe
pop
lcall
sbb
inc
shll
jb
sbb
mov
imul
mov
jb
adc
add
jbe
xchg
push
or
add
add
push
inc
or
add
mov
add
pushf
xchg
jb
lea
inc
cmp
jne
pop
or
pop
cltd
gs
addl
sub
cs
or
or
inc
add
mov
js
and
cmp
int3
out
cmpsb
inc
push
inc
nop
jne
sub
xor
rclb
inc
daa
mov
push
loop
loop
add
add
jmp
loopne
adc
ss
xor
enter
and
jg
dec
add
pop
mov
push
fnsave
in
add
sbb
mov
push
inc
mov
and
sarl
xor
inc
mov
je
add
sub
xor
lcall
mov
nop
insb
push
subb
mov
orb
adcl
push
sti
in
call
orl
jbe
andb
sub
aaa
and
push
ljmp
pusha
xchg
jne
mov
lods
mov
inc
stos
push
and
subl
pop
mov
loop
jns
adc
mov
outsl
test
jb
jo
int3
js
sbbb
outsl
insl
adcb
fsubrl
rolb
sbb
xchg
and
dec
cltd
andl
shll
sti
fists
mov
cmpw
cs
jns
mov
jo
in
cmpsb
mov
add
insb
stos
mov
push
std
pop
inc
mov
add
jne
xchg
xchg
pop
int
sbbb
inc
cmp
loope
addr16
ret
sbb
inc
js
ret
pop
add
imul
rcrb
cld
call
mov
sub
and
icebp
lds
xchg
or
push
xchg
loopne
fists
adc
add
and
mov
gs
adc
lds
dec
sub
jg
mov
gs
xchg
popa
lds
push
dec
sub
ss
jbe
push
xchg
movsb
dec
and
sti
cmpsb
outsb
dec
add
outsb
pop
push
push
and
push
fwait
and
mov
rorb
mov
fcoms
mov
and
js
and
std
pushl
pop
push
push
rcrb
sahf
mov
imul
cmp
imul
in
cmpsb
aas
mov
shrb
adc
call
rorl
loop
inc
stos
add
sub
lock
lret
inc
js
rol
shll
fmull
mov
ljmp
cmp
or
clc
pushf
imul
sbbb
lret
cmp
rorl
fiadds
and
push
ss
add
inc
int
leave
test
loop
sahf
sarl
lods
sarb
lods
shrb
outsb
into
out
mov
mov
imul
shlb
mov
inc
jns
inc
sbb
and
fs
add
jns
subb
sbb
jg
add
dec
push
imul
popa
cmp
lcall
ljmp
or
jmp
loopne
fwait
inc
bound
jg
loope
insb
add
mov
adc
add
sbb
in
icebp
out
xchg
add
xchg
jne
aaa
add
insb
mov
or
jne,pn
stos
gs
push
xchg
enter
and
jb
sahf
inc
test
dec
mov
push
lock
loope
in
popa
add
cmpsl
loope
icebp
lcall
jb
outsl
fwait
adc
imul
fists
adc
loopne
jmp
sbb
mov
jg
add
pop
popa
loope
out
push
out
adc
pusha
push
jne
mov
xor
inc
filds
add
add
dec
dec
or
pusha
outsl
xorb
mulb
lds
push
scas
mov
loope
gs
sbbl
mov
imul
push
push
sub
data16
int3
add
pushf
loopne
mov
push
add
or
loopne
mov
bound
xorb
pusha
and
cmp
push
pop
push
xchg
arpl
outsb
scas
repnz
push
mov
add
loope
cmp
push
loopne
ret
int3
loopne
add
insb
or
pusha
lods
bound
insb
mov
loope
jl
test
popa
push
push
jae
adc
sahf
shll
pop
adc
popa
xchg
cmpsb
cwtl
loopne
ret
jl
popa
push
jecxz
pop
ret
xchg
sub
arpl
sbb
ds
fs
push
outsb
sahf
and
jb
cwtl
leave
push
sbb
mov
outsl
sarb
sahf
popa
bound
cwtl
cmp
arpl
int3
adc
loop
add
out
dec
gs
mov
dec
add
stos
add
shll
fwait
adc
add
loopne
sahf
lock
loop
jb
or
sub
js
addb
pop
pop
dec
bound
xchg
int3
cmp
mov
cmp
or
loopne
sub
dec
jae
lods
loopne
mov
shlb
movsb
popa
adc
rclb
test
popa
add
icebp
cmp
leave
pusha
push
push
adc
add
bound
outsl
outsl
call
sub
dec
pusha
in
fimull
add
push
xchg
popa
jae
inc
xor
stos
gs
shlb
outsl
ja
out
inc
sub
je
in
and
xor
add
inc
add
inc
outsl
in
pusha
or
add
icebp
ja
pushw
push
gs
jmp
cs
mov
mov
mov
out
adc
bound
and
testl
add
jae
mov
push
loope
or
add
mov
mov
and
je
mov
or
mov
jbe
mov
data16
pushf
ja
pusha
loop
push
lods
xor
or
stos
imul
mov
repnz
insb
add
bound
fs
xchg
mov
mov
xchg
jb
push
add
add
sahf
outsb
jae
lock
clc
jg
jl
dec
lcall
aam
push
mov
test
xor
ficoml
lds
mov
je
xor
push
or
ljmp
cmp
mov
aaa
sbb
xor
add
icebp
push
or
test
cmp
outsl
mov
and
mov
cli
jno
push
fs
jb
push
push
gs
xchg
out
cmp
jl
ss
xor
lock
dec
je
jo
insb
pop
adc
sub
jno
or
push
xor
cmp
outsb
cmpsb
fsubrl
cli
push
sahf
sub
jns
add
std
mov
data16
xchg
nop
ja
xor
or
inc
insb
sahf
ja
pushl
test
cmovbe
andb
push
push
popa
cmc
add
and
cmp
inc
cld
aad
pusha
jg
mov
sbb
xor
mul
jg
xor
ss
mov
push
mov
stos
add
dec
out
fcomip
xchg
jne
sbb
xor
jns
dec
inc
rorb
mov
jno
xor
and
inc
insb
addr16
push
mov
add
push
jo
add
call
add
jg
adc
cmp
dec
inc
push
cmp
ljmp
mov
jo
cs
xor
in
icebp
enter
pop
mov
xchg
jo
adc
jae
scas
addb
orb
outsl
sub
mov
fistpll
arpl
jo
jo
test
into
icebp
dec
stos
mov
dec
mov
xor
mov
mov
mov
dec
mov
addb
data16
xor
jle
jmp
mov
dec
xor
in
fcmovnbe
test
repnz
lcall
in
inc
rclb
inc
inc
icebp
mov
adc
add
push
mov
add
xor
incl
inc
mov
ss
pushf
jbe
mov
int
push
dec
cmp
or
and
add
nop
repz
mov
scas
add
mov
ljmp
add
sahf
mov
sub
add
je
jo
dec
inc
bound
cli
dec
out
xor
dec
dec
pushf
mov
and
cs
mov
add
repnz
or
fidivs
inc
add
pusha
jb
xchg
jo
xor
jle
pop
ret
notb
cli
add
or
outsb
mov
push
je
mov
add
ja
mov
mov
ja
mov
lock
mov
imul
jo
cli
loop
movb
jno
or
add
test
insl
add
aaa
pop
out
add
mov
mov
jp
adc
jae
cwtl
push
hlt
das
fdivrs
push
int3
cmp
or
shl
sbb
lret
decl
mov
jno
outsb
jno
xor
lea
shl
inc
sub
add
xor
push
mov
xchg
outsl
mov
pop
add
mov
nop
repnz
or
imul
outsb
xor
mov
mov
aam
xchg
or
gs
jbe
inc
jns
push
arpl
cmp
jo
mov
push
js
pop
fdivrs
lock
pushf
jb
jbe
jb
sahf
arpl
int
push
dec
rolb
sbb
add
xor
scas
jbe
mov
arpl
call
ljmp
arpl
jo
loopne
add
adc
push
push
push
inc
jg
mov
mov
cmp
mov
dec
sbb
dec
add
pop
xor
out
jno
lock
mov
push
xor
add
xchg
gs
gs
pop
lock
mov
jns
xor
dec
mov
mov
xor
xor
jns
adc
pop
pop
ljmp
dec
mov
cwtl
je
push
xchg
lock
stos
outsl
outsl
add
and
push
mov
pop
add
push
ljmp
jb
push
imul
gs
inc
insb
dec
outsb
dec
outsb
jb
sub
fldt
data16
les
cmp
and
or
lock
xor
enter
test
mov
incl
mov
or
mov
and
sbb
push
orb
sbb
and
and
cmp
or
xor
mov
add
imul
add
lods
jne
inc
mov
dec
outsl
xor
and
imul
outsb
ds
jb
add
loop
and
ss
lods
popa
mov
fisubrl
adc
jecxz
sbb
add
inc
jae
cmp
inc
xchg
cmp
ja
adc
gs
add
adc
push
mov
mov
inc
xchg
jl
inc
inc
dec
int
dec
lods
test
and
add
movsb
lret
jne
ret
cmp
popl
dec
inc
gs
mov
arpl
add
mov
outsb
jb
pop
inc
jnp
or
xchg
outsl
fsubl
gs
jno
mov
imul
lcall
push
inc
insl
jo
test
add
loope
sub
sbb
add
add
imul
and
loopne
aaa
pop
pusha
add
push
sbb
stos
cli
aaa
bound
push
xorb
subb
and
sbbb
fiadds
ja
jbe
push
aam
test
mov
jae
jb
mov
sbb
andb
popa
xchg
sub
push
and
push
rorb
or
incl
inc
adc
xchg
subb
orb
fs
add
sub
fcmovne
xchg
jae
adc
int
or
lcall
adcb
mulb
or
arpl
movsb
and
xchg
push
test
cwtl
or
inc
inc
and
jb
xor
fiadds
add
push
inc
push
mov
insb
xchg
add
add
inc
xor
outsl
insb
fwait
inc
jl
sahf
jo
fisttpll
mov
dec
xchg
stos
aaa
std
mov
jb
addr16
daa
rclb
insb
inc
inc
xchg
mov
scas
clc
jne
shlb
sbb
mov
bound
test
addb
push
stos
or
lods
loop
lcall
xor
popa
xlat
aaa
mov
push
dec
mov
and
out
mov
test
shrl
or
fists
sub
int
add
sbb
mov
mov
popa
mul
cli
insb
rolb
jp
mov
xchg
and
std
fdivs
add
mov
add
jns
rcl
mov
mov
sub
bound
sarl
les
mov
push
rorb
or
add
pushf
ret
xchg
lds
xchg
add
mov
fcoms
enter
inc
inc
inc
add
adc
adc
outsl
mov
add
adc
add
mov
jmp
mov
adc
inc
mov
add
jne
mov
mov
sub
jecxz
lods
rorl
mov
lods
adc
nop
jb
sub
lea
sub
into
adc
add
dec
xchg
xchg
mov
and
xor
inc
xchg
movsb
lret
mov
pusha
sbb
adc
ss
push
icebp
test
add
xchg
in
into
xchg
inc
insb
sbb
jle
or
inc
mov
cmp
lods
ja
mov
outsl
mov
sbb
mov
fs
add
pop
int3
test
inc
mov
xchg
insb
ret
outsl
lock
push
mov
and
cwtl
cmp
cmpsb
aam
inc
inc
jbe
inc
mov
sar
pop
fs
arpl
lods
daa
popa
cmp
xchg
jne
dec
lcall
xchg
imul
adc
loope
adc
aad
dec
xchg
popa
xchg
lds
insb
inc
push
ficoms
pop
lods
or
xchg
push
int
fldl
sub
mov
and
fcoms
or
je
mov
loopne
arpl
sub
jl
add
jns
mov
popa
xor
dec
in
add
mov
repz
loopne
pop
add
inc
pop
add
insb
cmp
jg
pop
shl
add
mov
insl
call
loop
les
and
insb
loop
loope
add
dec
mov
adc
call
jmp
cmpsl
repnz
ss
lcall
push
inc
dec
push
xor
jo
xchg
jo
xor
push
xchg
and
mov
mov
cmpsb
push
push
in
add
push
sub
je
push
mov
jne
cmp
loopne
cmpsb
dec
sbb
sub
dec
push
push
pusha
jo
out
add
sbb
jb
lcall
add
mov
and
sub
sub
lea
sbb
lock
mov
inc
jbe
xchg
pusha
cmpsl
mov
es
popw
push
or
clc
mov
lahf
pushw
lods
loopne
popa
movsb
inc
add
jmp
push
dec
jp
pusha
adc
bound
xchg
fs
aad
cs
loop
nop
mov
adc
insb
mov
push
push
mov
test
bound
mov
jle
imul
pop
lock
lods
bound
lcall
mov
adc
outsb
jb
pusha
sbb
and
add
adc
add
fcomps
bound
push
loop
test
pop
mov
and
outsb
cld
adc
push
adc
sub
mov
test
adc
in
loopne
push
adc
std
mov
loopne
inc
mov
fcompl
das
mov
inc
outsl
jbe
adcb
dec
dec
inc
stos
loop
dec
dec
mov
cmc
push
push
gs
dec
xor
add
cwtl
fsubl
pop
sub
inc
vpshaw
ljmp
pop
push
std
popa
add
popa
push
inc
push
or
inc
ljmp
add
xchg
pusha
ja
add
xchg
arpl
and
mov
jae
jmp
sub
or
mov
in
iret
mov
cld
inc
pop
jo
lcall
adc
loope
insl
outsl
mov
add
ljmp
pop
ja
outsl
or
inc
add
mov
sahf
pop
ja
xchg
jae
arpl
aaa
mov
icebp
jbe
dec
jne
jne
pusha
or
jne
jecxz
lock
xchg
sbb
movsb
add
in
aaa
add
xor
addb
cmp
sbb
xchg
fwait
mov
dec
jo
cmpb
xchg
jb
movsl
add
or
xor
mov
xor
and
call
scas
cli
add
pop
gs
jo
add
add
add
stos
aas
add
cld
cmpsl
sub
adc
inc
inc
mov
add
add
adc
ss
or
loope
jecxz
xor
push
subb
and
in
pusha
in
add
aad
pusha
push
mov
enter
xchg
mov
pushf
and
scas
ret
jle
jge
jp
hlt
inc
adc
or
or
sbb
pop
mov
xor
add
add
lock
cmp
cmc
pushl
sub
mov
pop
std
and
add
jmp
inc
mov
sarb
xor
mov
adc
or
cmpsb
xor
dec
pop
xchg
sarl
nop
loopne
push
or
xchg
test
inc
test
jg
call
fdivrs
testl
popf
sti
jmp
subl
jmp
add
repnz
jnp
es
scas
pop
stos
pop
scas
adc
pop
cmp
cmp
cli
inc
adc
aam
add
jmp
dec
test
xchg
icebp
cmpsb
pop
mov
shrl
repnz
enter
aaa
cld
xchg
leave
dec
dec
loopne
in
insb
cmp
inc
stos
ja
clc
mov
push
mov
or
lds
sub
jg
test
bound
lock
and
push
add
aaa
popa
cs
mov
ljmp
je
and
add
clc
repz
fldl
xchg
dec
mov
add
les
int3
int
pop
mov
sti
aas
mov
ljmp
sub
fs
mov
xchg
outsb
in
add
sub
out
loop
pop
dec
loope
clc
call
icebp
aas
das
add
and
and
aas
mov
aaa
cld
xchg
xchg
aas
int3
scas
mov
xchg
xor
out
aaa
std
cmp
add
aas
rolb
dec
pop
loope
les
aas
out
cli
insl
les
mov
aas
and
addr16
push
dec
add
xchg
aas
add
and
loop
add
jp
jl
pop
roll
jle
std
lcall
sub
das
stc
add
inc
dec
shlb
ljmp
sub
subb
das
fstl
pushf
add
int3
fcoml
push
mov
add
cmp
test
arpl
cmp
jmp
sarl
jge
xchg
mov
and
call
jecxz
cmpsb
mov
mov
jne
or
int3
jno
rcr
adc
out
mov
pop
cmp
xchg
or
mov
mov
pop
add
mov
dec
in
leave
xor
push
push
add
imul
faddp
jge
call
stos
push
mov
mov
xchg
cmp
push
and
jg
sbb
scas
stc
xchg
jge
add
enter
and
fmuls
imulb
jns
outsb
mov
and
dec
inc
jp
ljmp
test
inc
jl
add
push
push
shrl
adc
jge
add
test
mov
pop
ret
add
xchg
daa
sti
or
push
add
sub
lods
jge
ror
adc
adc
std
fwait
sti
add
or
mov
fimull
push
sub
pushf
sti
add
or
les
les
scas
mov
aaa
dec
sti
sahf
push
scas
test
adc
sub
dec
mov
mov
push
dec
scas
cmp
xor
add
data16
add
sti
call
fidivs
dec
or
scas
cmp
or
pop
or
xor
ffree
jg
inc
or
pop
inc
or
jbe
mov
mov
decl
addr16
mov
ret
movl
cmpsl
fisubrs
mov
jnp
aas
or
sti
data16
addl
push
mov
iret
add
push
push
fists
cmpsb
imul
pop
push
cmpsb
xor
pop
and
dec
aaa
jg
xor
inc
aad
push
arpl
or
sti
pop
cmpl
add
jae
ja
imul
xchg
mov
filds
inc
sbb
add
aaa
jmp
sbb
dec
sub
lret
cmp
mov
adc
cmp
insb
cmp
mov
loope
mov
cmp
cmp
mov
jae
call
add
repz
fstpt
add
ret
ds
ds
push
xchg
push
dec
les
mov
mov
test
jae
xchg
arpl
movsb
ds
mov
clc
fwait
mov
ds
and
in
adc
add
add
rep
call
aas
jecxz
and
rcll
xor
ret
aas
fidivl
sub
fs
xchg
jle
insb
mov
add
aas
fcoml
and
inc
aas
les
xor
fnsave
adc
or
aas
add
and
test
or
add
or
mov
xor
xor
lret
cmpps
mov
fprem
xor
insb
xor
xor
xor
mov
data16
rcr
xor
xor
sub
jb
sub
xor
mov
sbb
sub
lret
xor
mov
loop
mov
xor
jl
jnp
mov
pushf
xor
mov
xor
stc
fwait
mov
sbb
in
xor
cld
xor
xor
xor
repz
jg
mov
cmp
mov
pop
xor
aaa
jg
xor
xor
xor
jg
mov
pop
xor
xor
xor
cld
xor
xor
outsl
adc
jbe
adc
xor
pop
adc
out
xor
pop
xor
inc
pop
inc
adc
or
sub
xor
fwait
mov
xor
xor
or
cld
xor
pusha
xor
mov
das
sub
or
jo
xor
sub
mov
adc
adc
sub
xor
xor
xor
dec
xor
mov
int3
adc
neg
or
xor
inc
out
dec
xor
dec
stos
xor
insb
push
addl
loop
mov
das
xchg
adc
xor
in
or
sub
jle
xor
mov
sbb
sub
scas
mov
xchg
add
mov
cmp
fwait
cmp
pop
ds
dec
cmp
andb
pop
loopne
mov
mov
pop
loopne
adc
mov
add
test
dec
das
andb
mov
cmp
lea
insb
cmp
sti
or
add
pushl
cmp
adc
cmp
pop
cmp
and
ds
adc
adc
pop
inc
cwtl
loopne
xchg
movsb
mov
adc
mov
inc
mov
movsb
push
jge
inc
lahf
or
lds
adc
inc
adc
pop
xchg
mov
decl
mov
xor
xchg
sahf
xor
fcomip
xor
xor
inc
xor
xor
and
and
ja
push
xchg
int3
xchg
xor
pop
add
es
or
xor
and
icebp
adc
inc
mov
cltd
add
adc
and
int
shlb
sub
fidivl
and
in
push
ss
ss
fdivs
cmpsb
aaa
push
add
add
fisttpl
movsl
adc
cmp
add
cmp
mov
mov
cmp
in
jbe
inc
mov
add
inc
adc
add
push
cmp
les
outsl
adc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
push
push
mov
cli
aaa
jg
mov
cmp
cmp
lods
add
jmp
dec
pop
jns
cmp
and
push
push
mov
jns
pusha
ja
sub
jp
pop
std
mov
shlb
xor
xor
xor
add
push
adc
xor
loopne
mov
mov
ss
sbb
into
cmp
cmp
cmp
cmp
cmp
mov
sub
cmp
add
add
adc
cmp
je
add
cmp
aam
cmp
push
cmp
mov
das
iret
add
add
js
push
shl
ds
ds
ds
xor
xchg
and
inc
loopne
xor
aad
adc
les
add
dec
inc
js
add
loopne
out
xor
cmp
lods
xor
xor
xor
add
fnsave
fdivs
dec
xor
adc
and
aaa
mov
add
cmp
sub
push
test
cmp
cmp
cmp
pop
cmp
lret
jno
and
lret
or
dec
sbb
xor
dec
xor
cmpb
mov
xor
push
aaa
test
lock
testb
cmp
cmp
cmp
mov
cmp
sub
push
icebp
arpl
lods
cmp
sub
aas
fistpll
xor
mov
add
and
mov
movsl
jg
std
aaa
hlt
pop
xor
xor
lock
xor
data16
xor
jmp
xor
scas
divb
mov
cli
push
push
ds
xor
ss
or
mov
xor
xor
or
sub
and
aad
cmp
or
das
sbbb
cmp
lret
pusha
dec
or
fnstsw
push
cmp
filds
cmc
pop
cmp
or
fdivrl
mov
sar
pop
je
nop
cmp
cmp
cmp
ds
mov
pop
mov
fdiv
outsl
lcall
xor
mov
lock
call
rclb
xor
xor
rcrb
popf
xor
sti
ja
mov
xor
xor
andb
xchg
test
xor
fwait
lcall
ss
push
divl
push
aaa
jmp
repz
jg
aaa
cs
aaa
inc
scas
aaa
pop
aaa
xchg
aaa
jne
aaa
nop
aaa
pop
aaa
test
inc
aaa
push
aaa
mov
inc
nop
add
cmp
adc
or
cmp
out
cmp
cmp
cmp
cmp
adc
jae
lret
cmp
jne
loop
scas
cmc
cmp
ds
ds
adc
push
fsubrl
outsl
lock
mov
insb
mov
xor
push
inc
nop
push
cwtl
xor
jl
push
enter
ljmp
clc
push
xor
inc
xor
fstl
adc
cmp
sub
inc
test
adcl
mov
inc
mov
jg
jo
testl
aaa
adcl
pushl
cli
push
jg
call
cmp
cmp
push
outsl
aas
cmp
les
popf
cmp
lds
jmp
aaa
cmp
cmp
into
adc
pop
cmp
cmp
loopne
pop
sbb
cmp
lea
hlt
adc
dec
aas
jb
sbb
dec
es
inc
xor
xchg
xor
nop
sbb
xor
jg
xor
pop
sbb
sbb
pushf
ss
jg
and
jo
icebp
push
or
pop
cmp
sub
and
ds
aas
and
add
subb
enter
aad
les
cmp
cmp
lds
repz
adc
xorl
jo
ss
jmp
jg
cmp
in
cmp
sarl
imul
cwtl
jnp
inc
cmp
cmp
mov
mov
mov
sbb
ljmp
push
add
push
mov
or
xchg
lock
mov
idiv
pushl
xor
nop
pop
xchg
xor
pusha
and
adc
cmp
pushl
incl
shlb
xor
xlat
xor
arpl
out
dec
out
adc
lcall
ss
ss
ss
or
ss
rorb
fcompl
cli
or
daa
ss
das
ss
push
inc
les
aas
ss
nop
add
push
movsb
ss
ss
addr16
test
xchg
outsl
mov
ja
adc
mov
cld
aaa
pop
aaa
hlt
aaa
getsec
add
mov
ljmp
mov
aaa
aam
das
int3
aaa
add
aaa
aas
aaa
add
aaa
sbb
ljmp
push
sbb
aaa
outsl
aaa
mov
ja
sbb
sarb
cld
in
xchg
je
aaa
insb
aaa
xchg
aaa
ficomps
mov
scas
dec
sbb
jg
aaa
insl
cmp
or
sbb
notb
pop
cld
jo
sti
xor
aad
inc
adc
stos
out
clc
mov
sub
dec
add
push
in
xor
cmpsl
xor
scas
xor
xor
xor
add
lods
push
in
adc
xor
xor
ret
adc
xor
dec
pop
in
and
dec
mov
adc
cli
cmp
mov
pop
nop
or
imul
adc
cmc
xor
cmp
mov
jne
lods
cmp
std
cmp
cmp
cmp
push
insl
cmp
cmp
cmp
cmp
mov
sub
aas
push
jg
cmp
sub
xor
in
sub
rclb
loopne
xchg
jl
inc
shll
shrb
nop
and
testb
xor
cmp
and
add
xor
std
adcl
xor
push
xor
xor
xor
rorb
inc
jo
jg
sti
inc
sbb
jle
or
xor
add
fistpll
aam
ss
ss
adc
aaa
mov
pushl
dec
rclb
loop
cmp
push
cmp
jmp
add
cmp
cmp
loopne
mov
ljmp
push
cmp
cmp
jmp
enter
imul
adc
orb
ja
mov
daa
cmp
cmp
push
fidivrs
cmp
incl
ds
adc
add
les
dec
cld
incl
jae
std
xor
xor
jp
xor
jp
xor
ljmp
xor
mov
mov
dec
add
and
rorl
add
jp
xor
cld
decl
xor
ja
sahf
adc
pop
rclb
xor
loope
fcomip
scas
ljmp
inc
cmp
cmp
cmp
std
jp
push
cmp
cmp
cmp
and
cmp
cmp
cmp
jp
stos
sub
ret
mov
xor
cmp
mov
in
movsb
cmp
and
cmp
cmp
cmp
inc
cmp
inc
cmp
out
push
cmp
dec
cmp
mov
stos
xchg
aas
inc
aas
loop
mov
mov
jo
jg
push
movsb
xor
jbe
xor
mov
scas
test
or
pop
add
mov
inc
cmp
jecxz
push
xor
xor
cld
add
push
xor
repz
adc
cli
jge
outsl
xor
call
and
loop
jmp
fbld
mov
xor
cmp
and
xor
xor
mov
or
arpl
xor
lock
xchg
xor
ss
into
adc
aaa
or
in
cmp
dec
cmp
cmp
cmp
cmp
and
loope
xor
imul
fs
xor
shll
sbb
sbb
xor
adc
sub
lock
jo
pusha
test
test
cmp
cmp
mov
push
cmp
sti
cmp
mov
xorb
nop
cwtl
or
dec
mov
test
cmp
ds
lock
outsb
aas
and
lock
mov
mov
rol
jmp
xor
shlb
dec
ljmp
jmp
cli
xor
xor
xor
lcall
jnp
in
fisubl
cmp
mov
mov
cs
cmp
cmp
cmp
inc
loop
ljmp
insb
cmp
push
adc
jecxz
push
lcall
and
xor
xor
adc
inc
jge
xor
xor
fidivs
sbb
push
clc
outsl
clc
mov
sub
xor
icebp
mov
sarb
outsl
cmp
xor
fnsave
movsl
xchg
divb
test
cmp
sbb
fnstcw
adc
jnp
call
cld
in
xchg
cmp
jecxz
add
or
cmp
cmp
test
out
cli
mov
xchg
add
cmp
cmp
jo
mov
inc
cmp
mov
mov
sahf
repnz
cmp
idiv
cmp
cmp
cmp
mov
xor
mov
lcall
sub
aaa
ds
ja,pt
jbe
mov
xor
add
push
in
cli
mov
aas
test
aas
aad
nop
add
les
xor
leave
xor
nop
jbe
xor
movsb
loopne
or
sbb
and
and
lcall
xorb
xor
in
mov
les
sub
xorb
fdiv
aaa
and
xor
enter
mov
popf
xor
push
mov
xor
dec
ss
cmp
xchg
mov
add
insb
test
jle
aaa
shlb
xor
sbb
cmp
cld
or
adc
cmp
cmp
cmp
cmp
cmp
jnp
sub
sarb
xor
cmp
pop
push
out
adc
cmp
jecxz
scas
mov
adc
sbb
mov
jne
test
cmp
cmp
fnstsw
jl
in
lret
jle
mov
cmp
cmp
adc
jg
call
cmp
cmp
mov
and
hlt
decl
adc
ds
loop
js
repnz
dec
aas
mov
lret
js
add
xchg
dec
loopne
ljmp
xor
or
xor
frstor
xor
xor
into
out
fidivl
pop
xchg
push
xor
jl
adc
xor
cmc
testb
out
sbb
nop
and
xlat
adc
xor
xor
roll
jb
xor
fsubp
push
dec
jl
or
sbb
repnz
ficompl
pusha
std
mov
xor
fildl
adc
xor
xor
adc
bound
adc
jg
in
push
adc
xor
xor
xor
mov
add
sbb
push
push
loopne
add
sbb
jl
add
mov
and
addb
add
divb
sarb
fcomip
shll
ds
lods
jbe
pop
nop
imul
pop
push
mov
inc
adc
je
addb
ret
and
jp
aaa
imul
aaa
sub
movsl
mov
clc
cmp
cli
jb
xorb
sti
das
fisubrs
cwtl
cmp
mov
cmp
repz
outsl
decb
sahf
pop
cmp
lret
cmp
out
cmp
popf
cmp
cmp
cmp
xor
pop
cmp
cmp
mov
sub
jmp
cmp
xchg
sbb
jge
xchg
ds
sti
and
mov
sbb
cmc
aas
add
add
dec
ret
clc
incb
sub
fcompl
xor
divb
cld
xchg
orb
dec
xor
xor
push
sbb
fnstenv
adc
or
jbe
xor
xor
jno
stc
dec
xor
xor
adc
or
outsb
inc
push
dec
xor
inc
test
mov
mov
cs
xchg
xor
push
mov
xor
xchg
lock
adc
xor
pop
cmp
push
addb
pop
ret
cmp
insb
ds
lcall
cmpsl
shlb
and
test
mov
xor
shll
inc
in
dec
loop
or
cli
xor
inc
jp
mov
xor
ret
xor
xor
xor
lahf
xor
xor
aaa
xchg
pop
push
cmp
cmp
cmp
mov
clc
dec
mov
cmp
into
aas
mov
rol
mov
mov
jge,pn
stos
xor
xor
cwtl
xor
arpl
jns
hlt
ret
xor
xor
mov
adc
xor
xor
xor
and
inc
jmp
xor
pushl
or
add
sarb
sbb
loop
and
fwait
mov
rclb
xor
lret
ss
mov
fistpl
stos
ss
mov
push
mov
aad
push
sti
jns
xorb
adc
jb
xchg
adc
mov
mov
push
ss
jge
mov
dec
cmp
cmp
pop
movsb
sub
fmuls
inc
rorl
cmp
xchg
cmp
cmp
outsl
jg
fists
call
cmp
mov
cmp
int3
cmp
cmp
loop
mov
cmp
adc
cmp
cmp
lods
add
dec
mov
and
les
and
icebp
mov
cmp
mov
incb
cmp
out
pop
lods
mov
les
sahf
pop
ds
ds
aas
xchg
sub
dec
ret
aas
leave
test
cmp
xor
int
sbb
push
pop
and
pop
loopne
adc
cmc
xor
xor
or
divb
mov
push
shlb
sbb
xor
xor
pop
loopne
sub
jg
lret
bound
std
cmp
cmp
and
push
ds
cmp
adc
cmp
cmp
cmp
cmp
xchg
cmp
mov
xchg
cmp
cmp
cmp
out
clc
mov
fdivrs
mov
adc
bound
mov
pusha
lea
or
outsb
cld
cmp
call
pusha
sbb
loopne
mov
pusha
sbb
cmp
cmp
sbb
cmpsb
add
xchg
fcmovu
cmpb
pusha
cmp
rcrl
fnstcw
jne
outsb
aas
hlt
lock
mov
popa
xor
add
test
xchg
iret
cmp
xor
dec
mov
push
jmp
iret
xor
ljmp
incb
push
or
pop
ss
cmp
or
out
mov
jg
dec
sub
test
mov
mov
loope
sub
cmp
loopne
pop
inc
insb
fdivs
cmp
mov
nop
std
fisttps
cmpb
mov
arpl
mov
push
push
orb
rclb
ret
fdivrs
xor
xor
xor
adc
xor
mov
dec
mov
and
or
test
adc
xor
pusha
dec
adc
sar
cmp
inc
ss
mov
lret
aaa
xchg
aaa
pusha
aaa
mov
ljmp
arpl
mov
cmp
cmp
cmp
cmp
adc
cmp
add
in
cmp
cmp
push
pusha
inc
adc
or
ret
add
and
mov
in
cmp
adc
cmp
push
fists
mov
test
inc
cmp
cmp
cmp
and
xor
mov
cmp
cmp
cmp
add
cmp
add
in
out
clc
inc
mov
ds
ds
adc
or
outsl
mov
add
add
sub
sbb
xor
andl
lods
loopne
out
xor
xor
inc
inc
rcrl
loopne
in
aad
cmpsb
or
cwtl
xor
push
push
lea
pusha
mov
sbb
adc
push
pop
pop
jo
mov
cwtl
cmp
cmp
pushl
cmp
cmpl
fsubp
push
ds
aas
cmpsl
aas
test
aas
pop
loope
inc
push
shrl
mov
inc
hlt
xor
aas
push
int3
out
lret
xor
add
xor
xor
add
stos
call
inc
push
in
xor
xor
xor
sar
pushl
loopne
cmpb
outsb
pusha
adc
in
cmc
mov
push
lds
xor
xor
mov
rorb
les
xor
mov
mov
push
sbb
xchg
aaa
cmp
in
out
jb
mov
insb
and
mov
movsb
mov
cs
aad
in
pop
cmp
cmp
stos
xor
pusha
xor
push
loopne
mov
shrl
or
xchg
xor
xor
xor
mov
jb
test
lret
bound
int
jg
jnp
xor
adcb
pushf
aaa
jge
test
les
sbb
scas
cli
pusha
stos
cmp
cmp
data16
pushl
cli
and
dec
jl
cmp
loop
or
inc
loopne
aad
pusha
fwait
aad
xor
aas
xor
aaa
ljmp
mov
mov
mov
and
test
add
add
dec
mov
xor
jbe
cmp
cmp
push
inc
and
in
stos
push
adc
repz
popa
mov
jle
xor
xor
xor
clc
decl
loopne
sub
fbstp
and
xor
xor
xor
fcmovnu
lock
mov
xor
push
cld
mov
xor
xor
notb
jne
jg
jnp
mov
repnz
addr16
xor
xor
sub
mov
xor
outsl
jg
pop
sub
in
xor
xor
xor
xor
xor
adc
sub
or
xor
jo
cmp
incb
xor
test
lahf
xor
jl
jo
jnp
jbe
mov
imul
dec
xor
adc
add
cld
in
ja
xor
xor
xor
adc
inc
ret
daa
push
adc
xor
adc
fwait
cmpsb
outsb
cld
add
insl
xchg
cmpsb
aaa
add
add
out
push
ret
cmp
adc
cmp
loop
fsts
pushf
add
cmp
icebp
decl
lock
cmp
push
dec
cmp
ds
ds
shl
push
cld
aaa
add
stos
lock
add
cmp
or
mov
in
push
jno
add
sbb
nop
xor
push
jmp
xor
pusha
cwtl
aaa
sub
leave
aaa
pop
cmp
shr
aam
scas
mov
cmp
add
jo
push
cmp
aas
into
push
icebp
jb
lock
mov
loopne
pop
push
xor
xor
xor
xor
pushl
cli
inc
xor
xor
xor
xor
add
xchg
adc
call
xor
add
mov
fistps
mov
push
aaa
lds
loopne
lcall
cmp
push
in
mov
jbe
or
sbb
aaa
add
cmp
lock
sarl
cmp
jg
mov
or
and
int
xor
notb
sbb
xor
push
xor
xor
xor
push
add
and
lods
mov
icebp
sbb
shrb
add
cmp
sti
cmp
mov
cmc
pop
mov
sbbb
sbb
xor
lcall
add
fs
mov
mov
xor
cmp
pop
cmp
dec
fdiv
cmp
cmp
adc
cmp
in
mov
cmp
add
cmp
stos
shrb
jg
sub
cmp
cmp
cmp
mov
push
dec
das
sub
ljmp
fnstsw
add
adc
add
push
nop
sbb
add
outsb
push
push
pop
outsl
cmp
cltd
ds
nop
sbb
faddl
aas
icebp
aas
cmp
js
aas
loopne
sbb
xor
call
call
loop
xor
nop
addl
mov
sub
and
int
dec
or
xor
add
clc
xor
xor
add
cmp
jl
lock
call
push
add
dec
in
adc
mov
mov
adc
pop
lock
mov
aas
pop
aas
sahf
adc
mov
aas
jnp
jle
imul
aas
push
adc
fisttps
js
and
lock
je
push
das
cmp
push
rolb
cmpsl
xor
decl
push
and
addr16
mov
scas
xor
insb
loopne
push
insb
es
xor
pushf
xor
add
mov
xor
pushf
push
sahf
pusha
lea
and
loop
fadds
je
add
jo
cmpb
aam
or
hlt
lock
adcb
dec
xor
sbbb
push
insb
aam
inc
and
adc
and
dec
push
adc
inc
jnp
pop
xor
aam
sbb
sti
or
xor
mov
push
in
add
mov
add
jb
mov
pop
in
pop
bound
hlt
stos
mov
jg
pushl
push
test
adc
out
sbb
fbstp
mov
aaa
xlat
sub
iret
aaa
xor
or
mov
push
ljmp
mov
faddl
jo
cld
or
fadds
cli
sbb
testb
add
mov
inc
mov
and
daa
dec
cmp
pop
mov
stc
xor
std
decl
or
stc
inc
push
cmp
sbb
in
adc
in
iret
lcall
jmp
stos
pusha
add
ja
add
rcll
jg
lret
in
adc
pop
faddp
mov
in
pop
jbe
jnp
xchg
cwtl
pusha
jo
ljmp
aam
add
push
push
pop
push
add
sbb
addb
fildl
add
int
das
sub
push
outsb
pop
xchg
in
rcrb
mov
lods
add
xlat
int
add
lea
sarl
enter
jp
lods
aam
clc
out
ret
daa
xchg
sub
add
lcall
mov
fcoml
loope
cli
cmp
mov
std
out
cmp
dec
test
jnp
addr16
sahf
aam
rol
incl
loop
xchg
cli
xor
mov
in
xchg
sub
mov
mov
inc
mov
outsl
fbld
cmpl
jle
pop
adc
imul
ljmp
adc
jl
or
cwtl
je
stos
lahf
fisubrs
and
jmp
arpl
fbld
pop
stc
shlb
out
dec
aad
pop
add
cmp
dec
xor
jp
dec
add
mov
rcrl
xor
fsubr
js
dec
and
incb
xchg
lods
inc
or
mov
xchg
lds
std
jmp
movb
jmp
rolb
cmc
stos
jge
mov
jo
xor
cmp
add
pop
pusha
pop
out
mov
xchg
push
mov
jmp
testl
jno
push
xchg
mov
test
popf
sbb
push
std
mov
sbb
sahf
data16
and
adcb
stc
aam
or
inc
arpl
cld
mov
sbb
imul
fdivs
cmp
test
dec
adc
dec
push
pop
add
jg
adc
sbb
ja
add
xchg
iret
sub
cli
mov
int3
dec
pop
add
sbb
and
repnz
pop
es
aam
pushl
mov
sti
cmpsl
in
add
and
push
jbe
mov
pop
divb
push
jg
jp
out
pop
xchg
push
clc
dec
shrb
jb
dec
add
mov
mov
push
out
out
and
sub
outsb
inc
inc
pop
inc
repnz
add
xchg
mov
sarl
aam
mov
out
test
xor
ret
movswl
add
pop
cmpsb
and
xlat
bound
cmc
push
push
adc
mov
aam
cmp
incl
fiaddl
mov
decb
scas
cld
enter
incl
dec
cmp
sbb
adc
xor
decl
popf
push
push
jns
add
fwait
adc
xor
pop
xor
mov
call
cld
pop
cmp
jp
jl
dec
pop
pop
pop
mov
enter
cld
push
pop
scas
sub
jno
add
sub
out
cmp
jg
inc
jecxz
xchg
ljmp
pop
int
mov
cld
mov
cmpsl
incl
mov
stos
fistl
push
or
adc
je
int
mov
push
cmp
call
sbb
aam
test
xor
inc
or
jmp
negb
dec
mov
or
adc
sub
xlat
insb
test
push
in
push
sbb
orl
dec
push
mov
lahf
fwait
dec
xor
loopne
mov
test
jg
lcall
jbe
push
push
test
add
dec
lock
and
stos
ret
fcomip
call
mov
popf
and
xor
xorb
or
cmp
cli
cmp
mov
mov
movb
shlb
fistpll
ljmp
xor
lcall
mov
mov
aas
xor
rcr
mov
aam
cmp
push
dec
dec
xchg
xchg
jb
insl
out
sahf
fwait
outsb
dec
push
mov
inc
cmp
ljmp
xchg
cmp
loop
lcall
out
mov
adc
adc
jno
stos
call
or
push
xor
sub
loopne
test
mov
mov
mov
dec
scas
push
iret
push
or
lret
mov
test
aad
and
ja
xor
jns
xchg
xbegin
repnz
adc
or
add
aas
mov
test
mov
ljmp
sub
cld
cmp
mov
jne
pop
cltd
lret
imul
mov
ljmp
jae
xor
and
dec
insb
and
rclb
or
xlat
out
jns
lods
dec
incl
mov
arpl
jg
mov
mov
cli
cmpsl
or
aaa
jecxz
call
and
push
int
mov
loope
stos
pop
cmc
or
call
sub
out
aam
jno
ljmp
and
frstor
lahf
loop,pn
dec
push
out
push
or
cli
xor
cmp
sub
push
addr16
lahf
lret
mov
clc
out
jge
ret
adc
jle
call
push
imul
arpl
call
lcall
sub
jno
mov
js
loop
clc
sub
xlat
and
sbb
pusha
cmp
jae
pop
ds
pushl
cmc
out
jg
mov
and
xchg
and
mov
js
xlat
jmp
dec
jo
and
inc
sar
ljmp
outsl
addb
jg
inc
movsl
cmpsb
xchg
orb
xchg
push
xchg
and
sbb
loope
or
pushl
mov
nop
cltd
mov
cmc
lret
xchg
call
mov
clc
pusha
dec
das
ljmp
push
jge
adc
andl
dec
dec
sbb
loop
cwtl
mov
in
sub
test
dec
pushf
ret
cltd
adc
enter
out
mov
jo
push
repz
dec
fbstp
or
orl
mov
pop
fdiv
or
scas
js
in
cld
ret
xchg
mov
sbb
in
cwtl
xchg
sub
das
jg
xchg
jecxz
dec
in
mov
loopne
andb
ret
sbb
or
fcomip
decl
ror
pop
rolb
pop
adc
cwtl
out
into
add
inc
hlt
mulb
ds
mov
scas
loope
outsb
push
clc
cmc
jo
loop
inc
jbe
sti
and
pushl
shl
stc
push
test
aas
xlat
mov
stos
mov
add
pop
inc
in
jmp
popf
inc
es
int
roll
call
jl
js
push
pop
adcb
jge
dec
pushl
int
cmp
inc
add
or
xor
sar
testl
aas
mov
mov
call
loope
testl
adc
mov
mov
push
dec
sbb
jmp
out
pop
ja
movsb
loopne
cmp
imul
cmpsb
dec
mov
inc
or
shr
je
cmp
decl
fdivs
loop
sub
sbb
mov
pop
dec
popf
push
mov
or
mov
fucom
mov
mov
sbb
xchg
adc
sarl
les
xchg
call
cmp
mov
arpl
mov
xor
nop
or
or
push
loope
jb
ret
and
pushl
push
jns
dec
pop
in
repz
test
mov
cmp
test
movsb
pop
int3
call
clc
push
test
push
dec
int3
adc
sub
xchg
mov
ret
pop
outsb
xor
mov
and
cwtl
adc
out
stc
fisubrs
es
jmp
shl
xor
bound
orl
out
jp
mov
xlat
jb
outsb
cmp
inc
mov
pop
mov
filds
dec
mov
icebp
pop
dec
mov
sbb
lret
push
mov
call
xlat
scas
mov
mov
cmpsl
push
pop
cmp
pop
jle
aad
lret
aam
aad
inc
mov
in
jae
jp
pop
notb
pushf
mov
add
notl
sbb
xchg
xor
pop
pop
hlt
loopne
push
aas
test
rorl
or
lcall
adc
add
hlt
push
xchg
lods
add
mov
repz
popa
mov
jmp
jg
jecxz
cmp
xor
cmp
scas
repz
mov
jbe
inc
ret
lcall
in
arpl
inc
jge
inc
in
jl
mov
mov
jg
cmpsb
bound
jge
xchg
mov
mov
xor
pop
insb
addr16
xor
fdivr
jmp
into
sub
lods
jne
dec
pop
aad
fidivrl
shrl
cmp
mov
int3
sbb
fcomip
push
aas
or
lock
vsubsd
mov
xchg
inc
test
jmp
jg,pn
icebp
incl
aam
add
xchg
clc
jns
rolb
cmp
jg
call
push
ja
add
mov
jbe
jnp
into
jnp
lret
xor
jmp
xchg
cmp
outsb
js
fildl
in
or
mov
aaa
call
stos
mov
mov
ret
add
stos
mov
sti
shrl
mov
ja
xchg
dec
mov
sti
gs
jecxz
and
popf
adc
out
fsubrl
fadd
fdivl
cmpsl
jnp
call
inc
in
push
pop
or
mov
add
xchg
pushf
clc
and
inc
cli
dec
cmp
xor
cmp
popa
cmp
movsl
cld
xor
mov
pushl
adc
sub
nop
inc
mov
xor
dec
mov
mov
ds
test
ljmp
in
jg
mov
inc
mulb
jecxz
inc
scas
pop
mov
cltd
push
jae
fstps
lods
jle
ds
int
inc
sbb
jg
rorb
inc
out
or
jge
testl
bound
pop
sbb
mov
and
sub
pop
cs
sub
popf
cmp
bnd
lret
mov
cmp
pop
loopne
gs
fisttpll
dec
les
xor
cmpsl
jmp
scas
lahf
xor
cmc
repz
imul
inc
enter
lcall
sbb
push
fwait
mov
hlt
sar
call
mov
push
js
clc
jae
xlat
cmc
pop
mov
cmp
and
addb
sarb
outsl
insl
cmp
sti
pop
mov
xchg
cmp
pop
sbb
es
iret
sub
add
dec
jmp
cmp
cli
inc
loope,pt
cmpsl
decb
adc
ret
mov
mov
sbb
dec
mov
lahf
xchg
addr16
mov
decl
scas
aas
dec
daa
mov
xchg
mov
pop
jge
dec
xchg
pop
jbe
mov
jbe
dec
inc
push
fbstp
fs
xchg
and
xchg
fidivl
jb
mov
icebp
dec
inc
psubb
cmc
test
out
mov
jbe
or
push
cld
jg
and
dec
std
push
xchg
dec
lock
lret
in
aam
jmp
sbb
xchg
inc
mov
inc
xchg
arpl
xchg
mov
push
push
dec
xchg
insl
mov
ss
push
jbe
out
mov
fcomip
int
js
loop
in
xor
insb
add
lea
push
in
adc
fwait
sbb
lods
xor
dec
cmpsb
jae
adc
daa
dec
test
xor
popa
cwtl
stc
push
icebp
sbb
loop
jmp
imul
std
mov
pop
insl
pop
pushf
push
aam
shrl
subl
arpl
daa
ret
into
jmp
decl
dec
dec
push
loop
int
repz
ss
jnp
jmp
popl
mov
rcrb
pop
sbb
sbb
add
sbb
ret
ja
cmp
xlat
jmp
xchg
mov
xor
inc
loop
mov
xor
fldcw
sub
rorl
ljmp
mov
jo
jnp
xchg
mov
or
jmp
mov
sub
loopne
jg
inc
frstor
mov
mov
add
cmp
push
in
movsl
xor
decl
push
mov
push
mov
pop
mov
adcl
jmp
iret
sub
cmpsb
xor
mov
data16
inc
pop
push
sbb
xchg
inc
mov
call
mov
mov
nop
enterw
adc
add
loopne
stos
int
sbb
xchg
ficoms
inc
xchg
jge
sub
pop
repnz
scas
lods
inc
mov
cmp
outsl
mov
out
or
jl
and
ljmp
xchg
insb
pop
xchg
sti
stc
lea
popf
mov
push
mov
ljmp
fisubl
inc
cs
ds
std
sti
jle
repz
push
negb
or
jmp
sarb
inc
fistl
fldt
loopne
inc
and
cmp
jb
leave
ret
aad
decl
sti
popa
pop
jecxz
in
xchg
popa
insb
aaa
inc
xor
in
jg
dec
cmpsb
cs
adc
push
cmp
ljmp
sahf
push
or
dec
ss
push
jmp
mov
pop
clc
pop
push
imul
inc
aam
cmp
inc
ljmp
fwait
xchg
test
adc
call
jmp
mov
sti
cwtl
adc
jbe
ds
mov
mov
das
daa
out
pop
cld
dec
jb
sarb
insl
sbb
mov
icebp
pushl
addr16
loope
aas
test
mov
xlat
roll
lods
lods
in
sahf
scas
jae
decl
add
xchg
jecxz
jg
pop
xor
and
mov
mov
cwtl
xchg
jns
cmp
lcall
adc
jo
dec
mov
je
addr16
cld
int
push
pop
dec
push
cmp
mov
mov
jmp
neg
mov
rorb
fs
dec
sbb
clc
jg
push
xor
cs
insb
mov
mov
dec
or
sub
jl
jg
sbb
inc
mov
add
cltd
lods
cmp
jle
sub
into
mov
imul
jmp
nop
dec
call
mov
scas
lcall
pop
mov
jno
insl
push
sahf
pop
ret
test
out
xchg
mov
int
fcoms
incl
fsubl
mov
ret
jle
mov
ds
scas
cmpsl
idiv
out
pop
dec
mov
lds
cmp
lods
sti
lret
imull
inc
inc
test
decl
add
cmpsl
hlt
push
xorb
enter
imul
cmp
aaa
ljmp
push
and
add
daa
and
into
fildl
lret
push
push
sub
das
clc
call
int3
sub
sbb
add
sub
icebp
pushl
iret
imul
dec
fisttpl
push
sub
push
subb
insl
sbb
data16
call
fcompl
pop
or
leave
out
push
lahf
aam
mov
cmp
arpl
stos
dec
sbb
add
in
fwait
push
jno
cmpsb
icebp
inc
in
in
inc
ja
dec
stos
lret
add
lahf
mov
jg
sub
rclb
out
clc
decl
mov
cmpsb
jno
sub
dec
sub
outsl
inc
incl
ds
sbb
imul
jp
fildl
pop
xchg
fsubl
in
pop
mov
incl
pop
and
popa
pop
push
add
dec
pop
mov
sbb
lock
mov
cmpsb
add
push
rorb
pop
orb
inc
imul
imul
cmpsb
mov
sti
and
dec
sbb
dec
mov
out
adc
dec
mov
int
cwtl
outsl
imul
cld
jg
fucom
fdivl
adc
push
pop
mov
out
aaa
fnsave
jns
mov
sahf
add
sbb
int
inc
cmpsb
pop
in
ret
iret
mov
stc
jle
jmp
shll
cmpsb
mov
cmp
iret
iret
pop
addr16
dec
mov
mov
iret
mov
mov
pushl
inc
push
mov
iret
push
repz
jge
push
sub
sbb
out
int3
xchg
jmp
dec
or
push
addr16
out
push
mov
lea
mov
adc
xchg
adc
ljmp
pop
mov
in
pop
int
xor
pop
add
in
jne
lcall
js
rcl
andb
inc
pop
cmc
stos
dec
insb
push
std
jle
add
stos
les
inc
pop
xor
mov
jmp
std
aaa
xchg
fnsave
and
aad
fcomip
xor
mov
bound
lcall
hlt
mov
mov
iret
rorl
loop
lods
xchg
mov
leave
inc
jo
imul
fdivrl
inc
imul
scas
mov
add
mov
das
cli
push
push
cmp
fldcw
dec
out
notl
loopne
loope
jp
inc
push
ljmp
cmc
imul
pop
fstps
lock
cmp
in
lcall
decl
outsb
lret
push
jnp
mov
pusha
xor
cwtl
stos
les
test
call
fsts
in
cmp
mov
sti
fsubrl
xchg
xchg
sbb
cmp
inc
and
call
fmull
jp
push
push
mov
lods
mov
std
clc
mov
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
adc
rolb
or
popf
test
push
add
sub
stos
and
sub
inc
add
jmp
cli
pop
xchg
add
add
push
je
jb
jne
dec
push
insb
pop
cs
and
imul
mov
insb
gs
insl
pop
dec
bound
pop
sub
movsb
insb
outsl
fildll
inc
adc
jo
sbb
push
dec
imul
fdivs
push
dec
shll
insl
push
jp
pop
scas
fnstsw
gs
aas
inc
xchg
outsl
fs
gs
sbb
jne
jns
push
in
mov
xchg
adc
jne
xchg
cmp
popa
mov
push
xor
add
jbe
xor
mov
in
mov
aas
push
xor
inc
fs
jae
dec
in
add
insb
clc
sbb
popa
pushf
inc
jbe
push
insb
sbb
lcall
neg
insl
lock
insb
push
sbb
imul
int3
push
jns
push
imul
inc
movsl
xchg
stos
inc
je
push
das
add
or
imul
sub
push
out
or
xchg
fdivrs
inc
pop
add
push
mov
inc
ds
bound
hlt
push
sub
xor
xchg
in
sti
adc
jb
xor
arpl
sub
and
mov
xchg
andb
arpl
or
or
test
adc
inc
sbbb
sub
lds
mov
push
mov
aaa
push
add
or
andb
pusha
and
push
xchg
cmpsb
adc
adc
sbb
mov
stos
sub
cmp
inc
lea
and
aad
stos
test
adc
test
sahf
mov
mov
push
inc
test
cmp
and
add
and
or
or
xchg
mov
mov
pop
lods
push
shrl
adc
sub
mov
xor
lcall
aas
or
inc
mov
or
adc
mov
sub
pop
rorl
push
xchg
inc
adc
stos
and
mov
dec
mov
dec
xor
push
or
inc
lods
jae
add
inc
push
fwait
cmc
pusha
push
xchg
add
shll
repz
bound
sub
xchg
adc
dec
lds
daa
inc
push
and
adc
popa
add
sub
fwait
cmp
aad
adc
sbb
mov
les
div
and
ja
add
inc
pop
bound
adc
xor
push
inc
add
and
movl
adc
push
push
scas
jg
insb
popa
and
outsb
push
sub
xor
pop
and
test
pop
inc
add
push
lods
adc
pop
xor
inc
popa
add
mov
mov
sbb
jae
mov
mov
lea
push
dec
aad
add
in
inc
dec
dec
arpl
mov
int
dec
add
inc
dec
stos
xchg
mov
add
inc
sbbb
or
mov
xchg
or
add
or
addb
popl
or
inc
repz
daa
adcb
lds
test
push
dec
pusha
push
xchg
scas
filds
and
cmp
and
sbbb
popf
pusha
inc
stos
andl
out
sub
outsb
and
or
mov
or
cmp
push
mov
inc
and
mov
popa
add
or
cmpsl
adc
xchg
sub
adc
xor
lds
push
xor
inc
mov
fwait
or
mov
adc
mov
cltd
sub
jnp
add
xor
xor
sub
add
or
push
les
aas
sub
in
mov
push
cmp
cmp
or
adc
adc
inc
mov
pop
add
push
inc
inc
mov
shl
sub
xchg
inc
imul
dec
push
adcb
and
inc
dec
sub
push
inc
cmpsl
sbb
pop
cwtl
mov
xchg
mov
sub
iret
xchg
stos
addb
lds
movsb
push
push
jae
push
shrb
or
adc
push
daa
es
inc
sub
insl
test
adc
mov
or
cmpb
and
mov
sbb
dec
pop
mov
pop
shrl
mov
cltd
and
jne
mov
pop
inc
or
push
add
mov
add
or
ret
lea
mov
inc
aas
push
push
adc
xor
mov
mov
outsl
jns
adc
les
adc
sub
add
xchg
push
jno
push
or
mov
push
shll
mov
xchg
loop
add
popa
push
lds
dec
loopne
stc
mov
daa
adc
sbb
or
or
and
test
jmp
daa
pop
stos
push
pop
add
adc
mov
aad
inc
sti
test
inc
pop
push
xor
inc
cmpsl
adc
pusha
xchg
push
or
mov
sub
sbb
sub
add
subl
test
mov
fwait
sub
inc
inc
inc
mov
test
pop
mov
adc
inc
dec
xchg
mov
mov
add
nop
jmp
nop
mov
xor
mov
push
push
dec
jmp
xor
sub
xor
sub
data16
inc
jnp
int3
inc
stos
mov
push
push
and
ret
int
or
adc
pop
lcall
xor
add
aam
sub
sbb
push
add
loope
adc
subl
sbb
adc
or
push
cmp
push
inc
mov
push
adc
mov
lods
add
push
add
loopne
nop
or
fldcw
and
sub
add
or
mov
and
add
inc
in
fldcw
push
push
test
or
scas
add
aad
sub
mov
adc
gs
test
mov
mov
sub
sbb
jmp
or
sbb
adc
pop
add
daa
inc
mov
repz
add
inc
aam
stos
nop
or
jne
sbb
adc
or
int3
les
stc
sbb
and
add
stos
cltd
cmp
sub
inc
pop
add
mov
or
jns
inc
and
pop
mov
add
adc
sbb
popa
adc
adc
cmp
test
mov
fldl
add
push
dec
add
add
outsl
sti
push
repz
add
add
sub
push
daa
repnz
in
incb
inc
pop
and
fnstenv
inc
sbb
mov
add
lea
nop
repnz
and
push
cmp
cmp
sbb
pop
or
sbb
mov
nop
bound
push
add
and
dec
mov
add
je
jbe
inc
push
cmpsb
mov
int
mov
inc
outsb
dec
push
xor
cmp
nop
mov
add
shll
rorb
loope
dec
lcall
push
lock
scas
cmpsb
xor
dec
adc
mov
inc
add
push
xchg
and
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
and
add
loopne
add
add
add
add
add
add
or
add
add
js
add
mov
add
add
add
addb
add
add
addb
add
inc
add
addb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
inc
add
add
add
add
add
add
add
add
add
add
mov
xchg
inc
add
add
add
add
add
add
add
add
add
add
loopne
add
in
xchg
inc
add
add
add
add
add
add
add
add
add
add
or
add
rcrb
add
in
add
add
add
add
add
add
add
xor
add
mov
inc
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
test
add
pusha
cmpsb
inc
add
add
add
add
add
add
add
add
add
add
rolb
add
inc
test
add
in
add
add
add
add
add
arpl
add
clc
add
addb
add
add
add
add
add
add
add
add
add
adc
add
add
add
pop
add
add
add
add
add
and
add
in
lock
stc
inc
push
ret
cs
push
xor
sbb
xchg
xchg
fstl
lock
pusha
add
ja
dec
and
push
call
out
pop
fidivrs
in
pop
mov
jnp
addr16
jo
jge
not
aas
add
push
stc
pop
push
ftst
lret
lret
xor
add
and
in
rcrb
mov
pusha
stos
fsubrl
int
pop
jnp
lea
stos
push
mov
mov
pop
mov
hlt
daa
xchg
adcb
add
jmp
fcoml
loope
test
or
jmp
test
test
aam
aas
les
sbb
xor
mov
sbb
xchg
in
rcll
mov
fistps
mov
add
push
lret
xchg
and
pop
add
inc
xor
or
pusha
add
bound
xchg
cmp
pushf
and
mov
xchg
out
dec
sub
pop
push
les
data16
aaa
adc
add
mov
lods
xor
js
dec
fcoml
pop
fsts
jg
fcomps
cmpb
addr16
sub
rolb
cmc
stos
jge
mov
rol
mov
cmpsb
rclb
mov
pusha
movsb
out
mov
fldenv
jmp
xor
data16
xchg
dec
out
test
out
stc
jg
push
push
mov
and
repz
stc
int
jle
or
and
lods
movb
cld
cmp
lcall
push
aas
pusha
adc
fdivs
cmp
test
mov
insl
fdivl
pop
aaa
orl
out
imul
cli
mov
in
lods
and
sti
std
push
imul
push
fdivp
movsb
sahf
clc
sbb
rorl
pop
jge
xchg
or
pop
pop
lret
mov
mov
jb
int
jp
iret
aaa
jne
or
jbe
imul
mov
nop
xchg
xchg
sbb
repnz
adc
push
cli
sbb
jp
and
ds
fnsave
hlt
pop
js
adc
aas
out
push
roll
cwtl
cmpsb
sbb
xchg
or
out
xchg
jg
ret
in
es
ljmp
xor
xchg
mul
dec
push
sbb
je
mov
push
push
add
mov
js
test
cmpsl
jp
jecxz
das
leave
call
dec
xlat
fcmovnbe
stc
popa
xchg
nop
and
mov
adc
or
mov
mov
sub
sti
loopne
adcl
push
jle
xchg
add
lock
stc
inc
push
ret
cs
push
xor
sbb
xchg
xchg
fstl
lock
pusha
add
ja
dec
and
push
call
out
pop
fidivrs
in
pop
mov
jnp
addr16
jo
jge
not
aas
add
push
stc
pop
push
ftst
lret
lret
xor
add
and
in
rcrb
mov
pusha
stos
fsubrl
int
pop
jnp
lea
stos
push
mov
mov
pop
mov
hlt
daa
xchg
adcb
add
jmp
fcoml
loope
test
or
jmp
test
test
aam
aas
les
sbb
xor
mov
sbb
xchg
in
rcll
mov
fistps
mov
add
push
lret
xchg
and
pop
add
inc
xor
or
pusha
add
bound
xchg
cmp
pushf
and
mov
xchg
out
dec
sub
pop
push
les
data16
aaa
adc
add
mov
lods
xor
js
dec
fcoml
pop
fsts
jg
fcomps
cmpb
addr16
sub
rolb
cmc
stos
jge
mov
rol
mov
cmpsb
rclb
mov
pusha
movsb
out
mov
fldenv
jmp
xor
data16
xchg
dec
out
test
out
stc
jg
push
push
mov
and
repz
stc
int
jle
or
and
lods
movb
cld
cmp
lcall
push
aas
pusha
adc
fdivs
cmp
test
mov
insl
fdivl
pop
aaa
orl
out
imul
cli
mov
in
lods
and
sti
std
push
imul
push
fdivp
movsb
sahf
clc
sbb
rorl
pop
jge
xchg
or
pop
pop
lret
mov
mov
jb
int
jp
iret
aaa
jne
or
jbe
imul
mov
nop
xchg
xchg
sbb
repnz
adc
push
cli
sbb
jp
and
ds
fnsave
hlt
pop
js
adc
aas
out
push
roll
cwtl
cmpsb
sbb
xchg
or
out
xchg
jg
ret
in
es
ljmp
xor
xchg
mul
dec
push
sbb
je
mov
push
push
add
mov
js
test
cmpsl
jp
jecxz
das
leave
call
dec
xlat
fcmovnbe
stc
popa
xchg
nop
and
mov
adc
or
mov
mov
sub
sti
loopne
adcl
push
jle
xchg
loopne
cmp
loop
lock
stc
inc
push
ret
cs
push
xor
sbb
xchg
xchg
fstl
lock
pusha
add
ja
dec
and
push
call
out
pop
fidivrs
in
pop
mov
jnp
addr16
jo
jge
not
aas
add
push
stc
pop
push
ftst
lret
lret
xor
add
and
in
rcrb
mov
pusha
stos
fsubrl
int
pop
jnp
lea
stos
push
mov
mov
pop
mov
hlt
daa
xchg
adcb
add
jmp
fcoml
loope
test
or
jmp
test
test
aam
aas
les
sbb
xor
mov
sbb
xchg
in
rcll
mov
fistps
mov
add
push
lret
xchg
and
pop
add
inc
xor
or
pusha
add
bound
xchg
cmp
pushf
and
mov
xchg
out
dec
sub
pop
push
les
data16
aaa
adc
add
mov
lods
xor
js
dec
fcoml
pop
fsts
jg
fcomps
cmpb
addr16
sub
rolb
cmc
stos
jge
mov
rol
mov
cmpsb
rclb
mov
pusha
movsb
out
mov
fldenv
jmp
xor
data16
xchg
dec
out
test
out
stc
jg
push
push
mov
and
repz
stc
int
jle
or
and
lods
movb
cld
cmp
lcall
push
aas
pusha
adc
fdivs
cmp
test
mov
insl
fdivl
pop
aaa
orl
out
imul
cli
mov
in
lods
and
sti
std
push
imul
push
fdivp
movsb
sahf
clc
sbb
rorl
pop
jge
xchg
or
pop
pop
lret
mov
mov
jb
int
jp
iret
aaa
jne
or
jbe
imul
mov
nop
xchg
xchg
sbb
repnz
adc
push
cli
sbb
jp
and
ds
fnsave
hlt
pop
js
adc
aas
out
push
roll
cwtl
cmpsb
sbb
xchg
or
out
xchg
jg
ret
in
es
ljmp
xor
xchg
mul
dec
push
sbb
je
mov
push
push
add
mov
js
test
cmpsl
jp
jecxz
das
leave
call
dec
xlat
fcmovnbe
stc
popa
xchg
nop
and
mov
adc
or
mov
mov
sub
sti
loopne
adcl
push
jle
xchg
shrb
add
in
lock
stc
inc
push
ret
cs
push
xor
sbb
xchg
xchg
fstl
lock
pusha
add
ja
dec
and
push
call
out
pop
fidivrs
in
pop
mov
jnp
addr16
jo
jge
not
aas
add
push
stc
pop
push
ftst
lret
lret
xor
add
and
in
rcrb
mov
pusha
stos
fsubrl
int
pop
jnp
lea
stos
push
mov
mov
pop
mov
hlt
daa
xchg
adcb
add
jmp
fcoml
loope
test
or
jmp
test
test
aam
aas
les
sbb
xor
mov
sbb
xchg
in
rcll
mov
fistps
mov
add
push
lret
xchg
and
pop
add
inc
xor
or
pusha
add
bound
xchg
cmp
pushf
and
mov
xchg
out
dec
sub
pop
push
les
data16
aaa
adc
add
mov
lods
xor
js
dec
fcoml
pop
fsts
jg
fcomps
cmpb
addr16
sub
rolb
cmc
stos
jge
mov
rol
mov
cmpsb
rclb
mov
pusha
movsb
out
mov
fldenv
jmp
xor
data16
xchg
dec
out
test
out
stc
jg
push
push
mov
and
repz
stc
int
jle
or
and
lods
movb
cld
cmp
lcall
push
aas
pusha
adc
fdivs
cmp
test
mov
insl
fdivl
pop
aaa
orl
out
imul
cli
mov
in
lods
and
sti
std
push
imul
push
fdivp
movsb
sahf
clc
sbb
rorl
pop
jge
xchg
or
pop
pop
lret
mov
mov
jb
int
jp
iret
aaa
jne
or
jbe
imul
mov
nop
xchg
xchg
sbb
repnz
adc
push
cli
sbb
jp
and
ds
fnsave
hlt
pop
js
adc
aas
out
push
roll
cwtl
cmpsb
sbb
xchg
or
out
xchg
jg
ret
in
es
ljmp
xor
xchg
mul
dec
push
sbb
je
mov
push
push
add
mov
js
test
cmpsl
jp
jecxz
das
leave
call
dec
xlat
fcmovnbe
stc
popa
xchg
nop
and
mov
adc
or
mov
mov
sub
sti
loopne
adcl
push
jle
xchg
mov
in
lock
stc
inc
push
ret
cs
push
xor
sbb
xchg
xchg
fstl
lock
pusha
add
ja
dec
and
push
call
out
pop
fidivrs
in
pop
mov
jnp
addr16
jo
jge
not
aas
add
push
stc
pop
push
ftst
lret
lret
xor
add
and
in
rcrb
mov
pusha
stos
fsubrl
int
pop
jnp
lea
stos
push
mov
mov
pop
mov
hlt
daa
xchg
adcb
add
jmp
fcoml
loope
test
or
jmp
test
test
aam
aas
les
sbb
xor
mov
sbb
xchg
in
rcll
mov
fistps
mov
add
push
lret
xchg
and
pop
add
inc
xor
or
pusha
add
bound
xchg
cmp
pushf
and
mov
xchg
out
dec
sub
pop
push
les
data16
aaa
adc
add
mov
lods
xor
js
dec
fcoml
pop
fsts
jg
fcomps
cmpb
addr16
sub
rolb
cmc
stos
jge
mov
rol
mov
cmpsb
rclb
mov
pusha
movsb
out
mov
fldenv
jmp
xor
data16
xchg
dec
out
test
out
stc
jg
push
push
mov
and
repz
stc
int
jle
or
and
lods
movb
cld
cmp
lcall
push
aas
pusha
adc
fdivs
cmp
test
mov
insl
fdivl
pop
aaa
orl
out
imul
cli
mov
in
lods
and
sti
std
push
imul
push
fdivp
movsb
sahf
clc
sbb
rorl
pop
jge
xchg
or
pop
pop
lret
mov
mov
jb
int
jp
iret
aaa
jne
or
jbe
imul
mov
nop
xchg
xchg
sbb
repnz
adc
push
cli
sbb
jp
and
ds
fnsave
hlt
pop
js
adc
aas
out
push
roll
cwtl
cmpsb
sbb
xchg
or
out
xchg
jg
ret
in
es
ljmp
xor
xchg
mul
dec
push
sbb
je
mov
push
push
add
mov
js
test
cmpsl
jp
jecxz
das
leave
call
dec
xlat
fcmovnbe
stc
popa
xchg
nop
and
mov
adc
or
mov
mov
sub
sti
loopne
adcl
push
jle
xchg
xorb
add
in
lock
stc
inc
push
ret
cs
push
xor
sbb
xchg
xchg
fstl
lock
pusha
add
ja
dec
and
push
call
out
pop
fidivrs
in
pop
mov
jnp
addr16
jo
jge
not
aas
add
push
stc
pop
push
ftst
lret
lret
xor
add
and
in
rcrb
mov
pusha
stos
fsubrl
int
pop
jnp
lea
stos
push
mov
mov
pop
mov
hlt
daa
xchg
adcb
add
jmp
fcoml
loope
test
or
jmp
test
test
aam
aas
les
sbb
xor
mov
sbb
xchg
in
rcll
mov
fistps
mov
add
push
lret
xchg
and
pop
add
inc
xor
or
pusha
add
bound
xchg
cmp
pushf
and
mov
xchg
out
dec
sub
pop
push
les
data16
aaa
adc
add
mov
lods
xor
js
dec
fcoml
pop
fsts
jg
fcomps
cmpb
addr16
sub
rolb
cmc
stos
jge
mov
rol
mov
cmpsb
rclb
mov
pusha
movsb
out
mov
fldenv
jmp
xor
data16
xchg
dec
out
test
out
stc
jg
push
push
mov
and
repz
stc
int
jle
or
and
lods
movb
cld
cmp
lcall
push
aas
pusha
adc
fdivs
cmp
test
mov
insl
fdivl
pop
aaa
orl
out
imul
cli
mov
in
lods
and
sti
std
push
imul
push
fdivp
movsb
sahf
clc
sbb
rorl
pop
jge
xchg
or
pop
pop
lret
mov
mov
jb
int
jp
iret
aaa
jne
or
jbe
imul
mov
nop
xchg
xchg
sbb
repnz
adc
push
cli
sbb
jp
and
ds
fnsave
hlt
pop
js
adc
aas
out
push
roll
cwtl
cmpsb
sbb
xchg
or
out
xchg
jg
ret
in
es
ljmp
xor
xchg
mul
dec
push
sbb
je
mov
push
push
add
mov
js
test
cmpsl
jp
jecxz
das
leave
call
dec
xlat
fcmovnbe
stc
popa
xchg
nop
and
mov
adc
or
mov
mov
sub
sti
loopne
adcl
push
jle
xchg
pusha
xor
add
in
lock
stc
inc
push
ret
cs
push
xor
sbb
xchg
xchg
fstl
lock
pusha
add
ja
dec
and
push
call
out
pop
fidivrs
in
pop
mov
jnp
addr16
jo
jge
not
aas
add
push
stc
pop
push
ftst
lret
lret
xor
add
and
in
rcrb
mov
pusha
stos
fsubrl
int
pop
jnp
lea
stos
push
mov
mov
pop
mov
hlt
daa
xchg
adcb
add
jmp
fcoml
loope
test
or
jmp
test
test
aam
aas
les
sbb
xor
mov
sbb
xchg
in
rcll
mov
fistps
mov
add
push
lret
xchg
and
pop
add
inc
xor
or
pusha
add
bound
xchg
cmp
pushf
and
mov
xchg
out
dec
sub
pop
push
les
data16
aaa
adc
add
mov
lods
xor
js
dec
fcoml
pop
fsts
jg
fcomps
cmpb
addr16
sub
rolb
cmc
stos
jge
mov
rol
mov
cmpsb
rclb
mov
pusha
movsb
out
mov
fldenv
jmp
xor
data16
xchg
dec
out
test
out
stc
jg
push
push
mov
and
repz
stc
int
jle
or
and
lods
movb
cld
cmp
lcall
push
aas
pusha
adc
fdivs
cmp
test
mov
insl
fdivl
pop
aaa
orl
out
imul
cli
mov
in
lods
and
sti
std
push
imul
push
fdivp
movsb
sahf
clc
sbb
rorl
pop
jge
xchg
or
pop
pop
lret
mov
mov
jb
int
jp
iret
aaa
jne
or
jbe
imul
mov
nop
xchg
xchg
sbb
repnz
adc
push
cli
sbb
jp
and
ds
fnsave
hlt
pop
js
adc
aas
out
push
roll
cwtl
cmpsb
sbb
xchg
or
out
xchg
jg
ret
in
es
ljmp
xor
xchg
mul
dec
push
sbb
je
mov
push
push
add
mov
js
test
cmpsl
jp
jecxz
das
leave
call
dec
xlat
fcmovnbe
stc
popa
xchg
nop
and
mov
adc
or
mov
mov
sub
sti
loopne
adcl
push
jle
xchg
inc
cmp
loop
lock
stc
inc
push
ret
cs
push
xor
sbb
xchg
xchg
fstl
lock
pusha
add
ja
dec
and
push
call
out
pop
fidivrs
in
pop
mov
jnp
addr16
jo
jge
not
aas
add
push
stc
pop
push
ftst
lret
lret
xor
add
and
in
rcrb
mov
pusha
stos
fsubrl
int
pop
jnp
lea
stos
push
mov
mov
pop
mov
hlt
daa
xchg
adcb
add
jmp
fcoml
loope
test
or
jmp
test
test
aam
aas
les
sbb
xor
mov
sbb
xchg
in
rcll
mov
fistps
mov
add
push
lret
xchg
and
pop
add
inc
xor
or
pusha
add
bound
xchg
cmp
pushf
and
mov
xchg
out
dec
sub
pop
push
les
data16
aaa
adc
add
mov
lods
xor
js
dec
fcoml
pop
fsts
jg
fcomps
cmpb
addr16
sub
rolb
cmc
stos
jge
mov
rol
mov
cmpsb
rclb
mov
pusha
movsb
out
mov
fldenv
jmp
xor
data16
xchg
dec
out
test
out
stc
jg
push
push
mov
and
repz
stc
int
jle
or
and
lods
movb
cld
cmp
lcall
push
aas
pusha
adc
fdivs
cmp
test
mov
insl
fdivl
pop
aaa
orl
out
imul
cli
mov
in
lods
and
sti
std
push
imul
push
fdivp
movsb
sahf
clc
sbb
rorl
pop
jge
xchg
or
pop
pop
lret
mov
mov
jb
int
jp
iret
aaa
jne
or
jbe
imul
mov
nop
xchg
xchg
sbb
repnz
adc
push
cli
sbb
jp
and
ds
fnsave
hlt
pop
js
adc
aas
out
push
roll
cwtl
cmpsb
sbb
xchg
or
out
xchg
jg
ret
in
es
ljmp
xor
xchg
mul
dec
push
sbb
je
mov
push
push
add
mov
js
test
cmpsl
jp
jecxz
das
leave
call
dec
xlat
fcmovnbe
stc
popa
xchg
nop
and
mov
adc
or
mov
mov
sub
sti
loopne
adcl
push
jle
xchg
and
cmp
loop
lock
stc
inc
push
ret
cs
push
xor
sbb
xchg
xchg
fstl
lock
pusha
add
ja
dec
and
push
call
out
pop
fidivrs
in
pop
mov
jnp
addr16
jo
jge
not
aas
add
push
stc
pop
push
ftst
lret
lret
xor
add
and
in
rcrb
mov
pusha
stos
fsubrl
int
pop
jnp
lea
stos
push
mov
mov
pop
mov
hlt
daa
xchg
adcb
add
jmp
fcoml
loope
test
or
jmp
test
test
aam
aas
les
sbb
xor
mov
sbb
xchg
in
rcll
mov
fistps
mov
add
push
lret
xchg
and
pop
add
inc
xor
or
pusha
add
bound
xchg
cmp
pushf
and
mov
xchg
out
dec
sub
pop
push
les
data16
aaa
adc
add
mov
lods
xor
js
dec
fcoml
pop
fsts
jg
fcomps
cmpb
addr16
sub
rolb
cmc
stos
jge
mov
rol
mov
cmpsb
rclb
mov
pusha
movsb
out
mov
fldenv
jmp
xor
data16
xchg
dec
out
test
out
stc
jg
push
push
mov
and
repz
stc
int
jle
or
and
lods
movb
cld
cmp
lcall
push
aas
pusha
adc
fdivs
cmp
test
mov
insl
fdivl
pop
aaa
orl
out
imul
cli
mov
in
lods
and
sti
std
push
imul
push
fdivp
movsb
sahf
clc
sbb
rorl
pop
jge
xchg
or
pop
pop
lret
mov
mov
jb
int
jp
iret
aaa
jne
or
jbe
imul
mov
nop
xchg
xchg
sbb
repnz
adc
push
cli
sbb
jp
and
ds
fnsave
hlt
pop
js
adc
aas
out
push
roll
cwtl
cmpsb
sbb
xchg
or
out
xchg
jg
ret
in
es
ljmp
xor
xchg
mul
dec
push
sbb
je
mov
push
push
add
mov
js
test
cmpsl
jp
jecxz
das
leave
call
dec
xlat
fcmovnbe
stc
popa
xchg
nop
and
mov
adc
or
mov
mov
sub
sti
loopne
adcl
push
jle
xchg
mov
lods
inc
add
lods
inc
add
add
shrb
add
lods
inc
add
add
out
inc
add
lods
inc
add
inc
add
lods
inc
add
lods
inc
add
add
add
lods
inc
add
add
add
inc
add
add
add
inc
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
outsl
ja
gs
add
arpl
xor
add
outsb
jae
popa
jb
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
insb
insb
inc
gs
gs
imul
jb
outsb
jae
popa
je
dec
popa
insl
gs
add
addr16
jb
push
inc
popa
jb
push
xor
imul
