sbb
inc
add
push
inc
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
add
add
lret
add
cs
nop
xor
clc
cwtl
xor
mov
xor
lret
add
add
pop
aaa
xchg
cld
push
cld
js
je
mov
aaa
sti
std
aaa
mov
rep
cmp
repnz
cmp
icebp
movsl
cmp
lock
mov
notl
cmp
lock
hlt
cmp
lock
add
icebp
outsl
cmp
inc
icebp
fwait
cmp
and
mov
cmp
dec
icebp
or
mov
icebp
pop
ds
icebp
jne
test
xchg
ds
icebp
fdivrs
pslld
ds
add
mov
sbb
pushf
repnz
repnz
aas
jbe
dec
aas
jne
push
aas
jnp
pop
aas
dec
bnd
dec
bnd
xor
lahf
aas
add
repz
aas
repnz
sahf
repnz
mov
add
lret
add
mov
sti
pop
xor
jae
sti
sti
xorl
sbb
mov
sub
enter
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
lret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
lret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
lret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
lret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
lret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
lret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
lret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
lret
add
mov
add
mov
add
mov
add
mov
add
add
inc
add
scas
je
shlb
mov
movsb
popa
outsb
mov
jns
mov
popa
outsb
mov
jns
push
add
insl
scas
je
dec
scas
jne
dec
andl
cmpsl
gs
mov
add
jno
gs
ds
inc
imul
mov
je
mov
add
cmc
test
push
add
mov
inc
imul
mov
add
cmc
test
dec
lds
popa
outsb
into
lahf
gs
mov
add
scas
into
inc
add
into
inc
add
into
inc
add
into
inc
add
inc
add
inc
add
into
inc
add
je
pusha
mov
jb
popa
mov
popa
fs
bound
mov
add
add
mov
add
jb
pop
mov
insb
insb
mov
add
pop
mov
cs
mov
insl
jae
mov
jbe
loopne
cs
lahf
add
test
arpl
mov
add
movsb
jb
lods
insb
inc
lahf
outsl
arpl
mov
imul
lahf
add
je
lods
insb
push
add
mov
add
popa
jo
lahf
insb
outsl
push
lret
add
pop
test
outsb
dec
lahf
xor
mov
add
cmc
cmpsb
je
and
dec
adc
add
addr16
add
and
add
and
add
and
add
and
add
and
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
jmp
add
lret
jmp
add
mov
jmp
add
lret
jmp
add
lret
jmp
add
lret
jmp
add
lret
jmp
add
lret
jmp
add
lret
jmp
add
lret
jmp
add
lret
add
add
lret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
jge
add
and
jmp
mov
add
scas
leave
add
mov
add
jnp
add
xchg
lret
add
mov
add
aam
add
ror
jmp
add
lret
add
scas
lret
add
mov
add
mov
add
sahf
lret
fwait
lret
mov
add
mov
lcall
lret
mov
adc
mov
add
pop
lret
pop
fiaddl
add
add
jnp
add
pop
lret
pop
lret
out
add
repz
sbb
add
sbb
add
or
add
or
add
add
lret
sbb
add
or
add
add
fcmovne
add
fcmovne
add
lret
leave
add
lret
leave
add
fcmovne
add
fcmovne
add
mov
add
mov
add
mov
mov
add
and
add
fiadds
add
and
add
and
add
and
add
lret
add
and
add
and
lcall
and
add
add
add
ret
add
mov
pop
add
and
add
lret
jmp
add
lret
test
jb
mov
sub
mov
jmp
aaa
mov
jmp
add
mov
jmp
add
lret
test
add
lret
jmp
add
lret
jmp
add
lret
jmp
add
lret
jmp
add
lret
jmp
add
lret
add
mov
add
mov
add
mov
add
add
lret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
into
add
lret
into
add
lret
into
add
fcmovne
add
fcmovne
add
lret
into
add
lret
into
add
fwait
into
add
fwait
into
add
mov
add
mov
add
fwait
into
add
fwait
into
add
mov
add
mov
add
pop
into
add
pop
into
add
dec
into
add
dec
into
add
pop
into
add
pop
into
add
dec
into
add
dec
into
add
sbb
add
add
into
add
or
add
or
add
sbb
add
sbb
add
or
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
dec
add
repnz
add
ljmp
add
xor
mov
push
add
push
add
in
push
add
fcoml
mov
push
add
inc
push
add
pop
push
add
sbb
mov
push
add
lret
sti
push
mov
lds
lret
fists
lret
sub
lret
sbb
push
scas
lret
notl
lret
pop
push
scas
lret
lea
lret
xchg
push
scas
lret
sub
lret
xor
push
mov
mov
add
scas
lret
xchg
push
mov
jge
scas
lret
rcll
lret
stc
push
scas
lret
pop
push
mov
jmp
dec
mov
rorl
lret
movsl
dec
mov
test
lret
test
dec
scas
lret
rorl
orl
add
lret
add
jle
add
jbe
add
iret
add
jle
add
jbe
add
imul
add
add
add
jns
add
iret
add
iret
add
or
add
iret
add
mov
add
in
add
mov
add
cli
iret
add
ljmp
cltd
cli
iret
add
ljmp
aas
cli
iret
add
in
iret
add
jne
add
insl
iret
add
sti
xchg
add
test
xchg
add
add
xchg
add
popf
xchg
add
push
xchg
add
arpl
add
pop
xchg
add
cmp
add
leave
xchg
add
mov
xchg
add
leave
xchg
add
dec
xchg
add
cmp
add
sbb
add
jecxz
add
xchg
xchg
add
xchg
xchg
add
pop
xchg
add
jnp
add
gs
add
loop
add
out
add
add
mov
cmp
mov
cmp
mov
cmp
xchg
add
dec
cmp
pushf
cmp
pop
cmp
push
cmp
inc
cmp
xor
add
add
add
adc
add
push
cmp
cmp
data16
cmp
test
add
cmp
cmpsb
cmp
ret
mov
cmp
xor
add
mov
cmp
add
adc
add
pop
cmp
add
sahf
cmp
add
lret
lea
scas
lret
xchg
cmp
lret
jmp
mov
xchg
fwait
inc
mov
int
scas
lret
mov
mov
out
inc
scas
lret
sti
inc
mov
roll
inc
mov
sub
lret
sbb
lret
or
lret
sti
inc
mov
out
scas
lret
jnp
add
lret
cltd
inc
mov
das
inc
scas
lret
dec
inc
mov
inc
inc
scas
lret
xor
lret
out
inc
scas
lret
sti
inc
mov
testl
lret
mov
scas
lret
popf
inc
mov
add
loop
add
in
add
iret
add
iret
add
iret
add
iret
add
jnp
add
jae
add
jae
add
add
add
jo
add
jno
add
jno
add
jo
add
movl
mov
movl
xor
movl
cmp
movl
push
movl
movsl
cmc
movl
add
mov
aad
add
in
add
pop
xchg
add
pop
xchg
add
gs
add
add
xchg
add
icebp
xchg
add
add
add
or
add
xchg
add
add
lret
into
add
jecxz
add
ror
add
lret
into
add
xor
add
jp
add
add
mov
add
pop
js
add
add
pop
into
add
insl
js
add
rclb
add
repnz
add
ficoms
mov
push
add
dec
push
add
mov
add
mov
add
jp
add
js
add
xchg
push
add
rclb
and
add
enter
sub
mov
push
add
jb
add
inc
push
add
jbe
add
mov
mov
push
add
call
add
mov
push
add
lock
add
lock
add
mov
push
add
xor
add
lret
and
ds
lret
aaa
ds
and
scas
lret
inc
ds
inc
ds
lret
push
ds
popa
ds
lret
pop
cmp
lret
adc
mov
add
scas
lret
loope
mov
in
scas
lret
push
cmp
lret
lods
cmp
lret
fwait
cmp
lret
out
mov
mov
add
scas
lret
sub
mov
jnp
scas
lret
pop
cmp
lret
fistpll
mov
cmp
lret
pop
cmp
movl
xor
movl
xchg
inc
add
mov
add
out
add
xchg
add
jle
add
add
add
popa
movl
add
popa
movl
dec
add
add
fwait
movl
and
mov
add
jge
add
movl
xchg
in
add
in
add
or
jnp
add
add
das
jnp
add
add
xor
add
and
add
sbb
xlat
add
jno
add
add
add
and
add
mul
add
popa
loope
add
add
xor
add
and
add
arpl
add
pop
loopne
add
loopne
add
ja
add
jp
add
jp
add
jp
add
loop
add
into
cmp
add
idivb
add
xor
mov
ds
mov
ds
cmp
push
add
inc
push
add
xor
add
jle
add
mov
add
xor
add
mov
dec
add
sub
add
pop
dec
add
or
mov
dec
add
je
add
nop
dec
add
lcall
mov
add
mov
dec
add
add
add
testb
xor
fldl
add
dec
jmp
mov
testb
dec
orl
dec
addr16
scas
lret
imul
xchg
dec
scas
lret
mov
mov
stos
dec
scas
lret
hlt
add
lret
out
mov
rorl
lret
in
mov
jecxz
scas
lret
ljmp
dec
hlt
add
dec
inc
add
dec
cmp
dec
in
add
mov
out
add
dec
lahf
dec
scas
lret
in
mov
add
mov
add
stc
movl
jmp
cmc
movl
or
movl
cmc
cmc
movl
mov
movl
mov
movl
jmp
ljmp
jno
add
movl
add
mov
add
jne
add
movl
iret
jl
add
je
add
movl
cmp
fcmovnb
add
lret
movl
repz
repnz
sub
fisubs
and
dec
mov
loop
testb
out
jbe
lahf
cmp
mov
xor
xor
jae
loope
sbb
mov
pop
dec
test
cs
jg
mov
outsl
and
dec
enter
pop
scas
push
mov
sub
and
mov
stc
lahf
pop
cmc
lret
adc
add
adc
loop
mov
movsl
xor
idiv
std
jmp
sub
test
into
ja
aam
xchg
popf
ja
mov
in
inc
fcomp
mov
adc
sub
movsl
mov
mov
lahf
in
std
jge
data16
push
fdiv
js
mov
pop
jl
push
pop
rol
dec
insl
mov
outsl
mov
pop
sbb
addb
insb
push
repz
sub
lods
xchg
mov
cmpl
add
mov
add
add
jmp
imul
push
ss
jmp
popf
mov
mov
jmp
shll
pop
cmp
mov
lret
mov
scas
lret
aaa
sbb
mov
cltd
in
add
cs
movl
cs
add
add
in
add
scas
lcall
lret
adc
jle
std
je
mov
cltd
cmp
dec
sti
andl
mov
std
adc
cmp
xchg
xchg
push
jmp
pushf
std
adc
sbb
xor
cld
adc
lret
adc
mov
pop
sbb
mov
adc
shrb
test
insl
mov
std
adc
cmp
push
pop
or
add
mov
and
mov
rclb
dec
pusha
add
jno
addl
mov
adc
decl
xchg
int3
push
pop
scas
lods
inc
pop
and
adc
ja
rolb
lahf
dec
jae
push
hlt
dec
adc
movsb
inc
and
push
add
add
add
sbb
add
add
std
mov
push
into
adc
roll
add
add
adcb
xchg
adc
stos
add
mov
fistl
mov
and
push
sahf
out
test
mov
xorl
not
mov
in
std
lods
pop
test
rolb
ret
inc
pusha
add
cltd
mov
inc
jecxz
cltd
mov
shlb
gs
mov
or
rol
jle
add
cltd
mov
inc
push
iret
mov
and
cs
out
pop
push
icebp
ljmp
xchg
cld
pop
popf
sarl
loope
bound
pop
cmpl
add
inc
add
add
lret
pop
jne
jno
in
mov
loope
scas
lret
sub
lret
in
add
lret
sub
lret
in
mov
or
lret
test
add
lret
mov
add
lret
or
lret
mov
add
lret
imul
icebp
lret
loope
xchg
lret
imul
jno
add
mov
add
mov
add
popf
mov
or
mov
add
scas
lret
adc
mov
jmp
mov
add
lret
add
test
mov
add
lods
mov
jmp
test
or
fldcw
add
test
imul
mov
dec
add
test
sub
fldcw
add
test
cmp
cli
add
add
dec
sarb
sbb
rolb
or
adc
or
push
add
mov
sbb
or
or
mov
or
dec
add
lock
int
add
mov
adc
mov
sub
lret
mov
xor
fwait
ror
mov
or
add
shrb
add
movl
lret
dec
pop
add
sbb
pop
rcrb
mov
or
or
and
fdivs
and
insb
mov
or
and
mov
mov
or
and
clc
mov
add
mov
or
and
adc
adc
or
mov
or
mov
or
mov
add
mov
or
and
and
and
add
and
inc
mov
or
mov
add
mov
or
lret
jmp
or
lret
std
add
lret
jmp
or
lret
jmp
add
lret
jmp
or
lret
jmp
or
lret
jmp
add
js
jmp
add
lret
jmp
or
cli
add
lret
jmp
or
lret
jmp
add
lret
jmp
or
lret
jmp
or
jmp
or
add
mov
add
test
mov
jmp
mov
add
test
roll
jmp
add
mov
jmp
mov
dec
add
test
inc
add
mov
str
lret
add
test
mov
add
mov
add
test
fiaddl
jmp
mov
add
test
ljmp
test
dec
add
pop
les
pop
mov
add
add
push
add
pop
add
sbb
pop
mov
cmp
dec
les
sbb
cmp
sbb
adc
or
imul
sbb
or
or
mov
fcmovnb
dec
add
mov
add
lret
ret
push
add
ret
adc
add
ret
jne
fwait
ret
xor
add
or
add
mov
add
shrb
mov
or
mov
or
mov
add
mov
or
and
sbb
mov
add
and
jge
and
cmp
mov
add
mov
or
and
sub
mov
or
mov
or
and
cli
mov
incl
mov
or
mov
or
mov
or
mov
add
mov
or
and
xor
repz
mov
or
lret
jmp
or
or
lret
jmp
or
add
lret
jmp
or
std
add
lret
jmp
or
lret
jmp
add
lret
jmp
or
fxch
jmp
or
lret
jmp
or
lret
scas
lret
jmp
or
lret
cli
add
int3
jmp
or
fdivs
movsb
add
mov
pop
add
test
inc
add
mov
sbb
add
mov
lods
add
add
test
jmp
mov
in
fidivl
pushf
add
mov
dec
add
test
cmp
jmp
scas
or
jmp
mov
cwtl
add
mov
add
mov
shlb
mov
or
fwait
shlb
shlb
mov
add
add
rolb
dec
mov
add
add
sbb
dec
mov
cmp
sbb
js
sbb
cmp
or
adc
sbb
push
add
mov
or
fstpt
dec
add
mov
add
fstpt
adc
mov
sub
mov
or
or
hlt
or
mov
decb
hlt
or
or
hlt
or
mov
or
hlt
or
mov
incb
mov
or
or
hlt
or
mov
or
or
hlt
or
mov
push
mov
or
or
hlt
or
mov
or
mov
or
or
mov
cld
add
lret
jmp
or
int3
cli
cld
ror
jmp
or
lret
jmp
cld
mov
int3
jmp
or
jmp
or
lret
jmp
or
frndint
mov
jmp
or
lret
std
cld
jo
jmp
or
fmul
jmp
cld
mov
lret
jmp
or
lret
jmp
or
lret
jmp
or
lret
into
into
add
mov
loope
sub
mov
add
test
push
add
mov
add
mov
mov
jmp
mov
push
add
test
test
fmuls
add
mov
jmp
add
outsb
add
mov
leave
add
test
add
push
out
jmp
stc
mov
jmp
jmp
push
add
lret
add
add
pop
cld
add
add
fildl
add
add
add
aad
add
add
add
imul
add
add
add
add
add
addb
add
add
loop
imul
add
pop
add
sbb
dec
pop
xchg
add
aad
add
add
add
add
add
pop
rolb
ljmp
add
add
add
pop
mov
mov
cli
or
repnz
dec
mov
sti
repnz
or
mov
cli
push
mov
cli
adc
add
add
hlt
cli
je
hlt
cli
xor
hlt
sti
lret
or
mov
cli
and
hlt
sti
stos
mov
cli
add
hlt
cli
test
hlt
sti
ljmp
cli
pop
mov
cli
sbb
hlt
sti
lcall
cli
jl
hlt
cli
cmp
hlt
sti
fidivl
hlt
cli
insb
add
lret
jmp
sti
mov
jmp
sti
lretw
jmp
or
lret
jmp
sti
jo
cli
or
lret
jmp
sti
loopne
jmp
or
int3
jmp
cli
adc
jmp
sti
xor
jmp
cli
push
lret
lods
lret
jmp
sti
add
lret
std
or
jmp
sti
fmul
jmp
fstpt
jo
jmp
call
rolb
jmp
fsts
fdivrs
pushf
add
mov
add
add
cltd
jle
jmp
mov
add
mov
outsb
add
jns
add
add
add
imul
add
pop
mov
jmp
mov
cmpsb
add
cmp
add
sub
std
mov
xchg
add
add
add
add
add
rcrl
add
add
or
cs
pop
mov
add
add
add
pop
incb
jmp
add
in
add
mov
rolb
adc
stos
roll
add
roll
outsb
roll
inc
imul
add
add
ja
and
outsl
roll
and
or
popa
roll
or
addl
imul
add
add
rcrl
add
add
pop
mov
pop
add
or
xchg
and
add
sbb
add
push
or
mov
mov
pop
add
mov
add
and
add
sti
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
call
add
lret
call
add
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
ljmp
lret
ljmp
lret
in
add
lret
in
add
lret
in
add
lret
in
add
lret
jmp
repnz
leave
jecxz
test
int
add
lret
jmp
add
mov
jmp
call
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
lret
add
mov
add
mov
add
mov
add
mov
add
mov
add
pop
int
add
add
dec
int
add
add
sbb
add
sbb
add
or
add
or
add
sbb
add
sbb
add
or
add
or
add
fxch
add
fmul
add
int3
int3
add
lret
int3
add
int3
or
push
or
add
enter
int3
or
test
or
pop
enter
int3
or
out
or
cmpsl
or
daa
or
xchg
or
inc
or
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
in
or
movsb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
and
lret
mov
add
lret
out
add
lret
scas
add
mov
lret
inc
add
lret
pop
add
lret
push
add
lret
pop
add
lret
xchg
add
lret
pop
add
lret
xlat
add
lret
testl
stos
lret
daa
add
lret
lahf
add
lret
xlat
add
lret
pop
add
lret
jg
mov
lret
pop
add
lret
add
scas
roll
mov
add
add
roll
xlat
mov
add
roll
call
mov
add
mov
add
mov
add
roll
mov
roll
fdivs
roll
cwtl
mov
add
mov
add
scas
roll
cwtl
mov
add
roll
fdivs
roll
jo
roll
and
roll
shlb
mov
add
scas
roll
xorb
or
adc
or
mov
leave
or
xchg
or
adc
or
or
add
enter
leave
or
enter
leave
or
enter
enter
enter
leave
or
mov
or
out
or
enterw
leave
or
enter
or
inc
enter
jbe
or
out
or
mov
or
mov
or
dec
or
jle
or
out
or
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
or
roll
mov
add
or
roll
roll
mov
add
or
stc
add
mov
add
mov
add
mov
add
mov
xor
lret
xor
mov
lret
rolb
stos
lret
rolb
lret
inc
add
lret
rolb
stos
lret
rolb
lret
inc
add
mov
lret
loop
stos
lret
push
add
lret
ret
lret
ret
lret
xor
mov
lret
ret
lret
ret
lret
xor
mov
lret
bound
lret
bound
stos
lret
rolb
lret
rolb
mov
lret
out
stos
lret
add
les
data16
add
mov
add
mov
add
mov
add
add
les
dec
mov
add
les
into
mov
add
mov
add
les
inc
mov
add
mov
add
mov
add
les
push
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
les
push
mov
add
mov
add
mov
add
int
add
int3
or
adc
or
add
or
in
or
int3
or
push
int
add
or
fs
add
add
int3
or
movsb
int
add
or
hlt
int3
or
test
or
push
int
add
add
or
hlt
int3
or
push
into
or
int3
or
aam
or
hlt
int3
or
xor
or
add
or
push
iret
or
je
or
mov
add
mov
add
pop
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
testb
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
or
lret
mov
mov
lret
lret
lret
jmp
add
lret
roll
mov
in
add
lret
in
scas
lret
in
add
lret
fildl
mov
jecxz
scas
lret
roll
add
lret
testl
scas
lret
out
add
lret
fadds
mov
loopne
scas
lret
rolb
mov
in
add
lret
in
scas
lret
in
add
lret
fiaddl
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
out
into
pop
loope
ret
or
test
test
or
mov
rorl
scas
rorl
cmpsl
rorl
mov
ret
scas
ret
cmpsb
ret
mov
or
lods
or
movsl
or
mov
or
lods
or
movsl
or
mov
enter
enter
les
or
inc
or
or
add
les
push
fstp
push
push
mov
fisttpl
push
fisttpl
push
jge
push
push
popf
fisttpl
push
popf
fisttpl
push
fisttpl
push
pop
fisttpl
push
jge
push
push
pop
fisttpl
push
dec
fisttpl
push
jge
push
push
pop
fisttpl
push
pop
fisttpl
push
dec
fmull
subps
fmull
nop
fmull
paddb
nop
nop
sldt
add
add
adc
bsr
in
shrd
or
loop
adc
push
pop
adc
pop
sbb
les
pop
movsl
std
adc
sbb
ljmp
lret
sbb
lret
sbb
sbb
cwtl
clc
sbb
cwtl
call
sbb
enter
mov
lret
add
test
add
test
repnz
shl
sbb
shl
sbb
rcl
sbb
rolb
sbb
shl
pop
sahf
xlat
in
pop
xchg
xlat
in
into
iret
fstpl
iret
aad
mov
iret
add
pop
cmpsb
iret
cmc
pop
sahf
iret
in
pop
add
iret
fstpl
iret
aad
mov
iret
add
pop
cmpsb
iret
hlt
and
shl
and
rcr
and
rolb
aam
rcrb
add
rcrb
hlt
rcl
sbb
in
rcrb
aam
rcrb
add
rcrb
jmp
lods
leave
pop
icebp
add
or
lods
mov
or
out
mov
psubw
fistl
fadd
fcoml
fadd
fcoml
fcmovnb
fstl
fcmovnb
fstl
cli
mov
ficoms
std
movsl
xlat
adc
popf
xlat
adc
pminub
fsts
fcoms
adc
fcoms
push
std
xlat
push
push
or
std
xlat
push
push
cld
pop
pop
cld
pop
pop
int3
pop
pop
mov
aad
sbb
aad
sbb
aad
sbb
aad
sbb
iret
sbb
adc
sbb
sbb
push
sbb
adc
sbb
aam
sbb
cld
sbb
cwtl
cld
sbb
enter
enter
add
sbb
sbb
int3
sbb
cwtl
std
pop
sbb
in
pop
sbb
in
pop
sbb
sbb
pop
sbb
loop
add
in
add
fiadds
add
loopne
add
ljmp
mov
add
mov
add
mov
add
add
lret
add
lret
std
add
lret
add
lret
stc
add
lret
test
add
lret
cltd
add
lret
dec
add
lret
sub
lret
or
lret
jmp
add
lret
call
add
lret
in
add
lret
loope
mov
fldl
add
lret
add
lret
leave
add
lret
sub
lret
or
lret
add
lret
add
scas
lret
add
lret
add
scas
lret
add
mov
add
and
lret
add
test
lret
add
mov
lret
add
adc
jmp
jno
add
xchg
lret
add
mov
add
lds
add
les
pop
bound
cld
add
jmp
sti
sub
push
test
adc
pop
sbb
jno
sbb
dec
stos
cmp
add
out
mov
sbb
add
mov
sbb
pop
aam
aam
roll
fistpl
fs
xor
add
xchg
add
mov
or
lea
fisubrl
testl
add
sbb
outsb
outsb
or
movsl
popa
popa
mov
iret
dec
mov
inc
add
lods
mov
daa
fsubs
xor
not
or
add
jecxz
push
xlat
push
and
add
dec
scas
mov
rol
jl
mov
pop
xchg
jnp
mov
hlt
push
stos
or
aaa
outsl
popf
repz
push
repz
out
sbb
inc
faddl
fsts
and
outsl
mov
aas
mov
mov
or
mov
insb
stos
push
add
fsubrs
ret
pop
sub
pop
call
push
fldenv
and
inc
scas
add
stc
inc
xchg
mov
shlb
shrb
mov
dec
xchg
mov
inc
cwtd
lods
cmp
inc
popf
mov
out
xor
call
add
test
out
nop
and
jle
push
pushl
lret
repz
push
sub
xchg
mov
add
xor
scas
jl
incl
jne
lods
data16
das
jae,pn
mov
pop
iret
inc
test
into
xor
ljmp
mov
rclb
out
int
stc
mov
xlat
leave
or
jae
lcall
mov
out
or
testb
sbb
scas
push
mov
ljmp
ret
add
add
and
in
aaa
inc
sub
and
je
out
add
jle
std
pushf
add
fiaddl
fcmovu
jae
shll
pmulhw
xchg
mov
or
push
femms
in
and
xchg
insb
jo
or
cmp
lock
arpl
push
aad
push
imul
sbbb
sbb
insb
jmp
aam
jnp
rorl
xchg
frstor
mov
mov
pusha
mov
mov
insb
push
cmp
mov
jns
fisttps
add
adcl
mov
popf
out
mov
cmp
or
sbb
dec
dec
dec
add
movsb
pusha
test
test
lret
jbe
add
outsb
jo
jns
jg
push
shrl
shlb
div
cmp
pop
dec
or
add
pusha
clc
mov
inc
gs
mov
out
sub
lock
shlb
pop
xchg
flds
mov
mov
into
lret
test
pop
repz
pop
into
orb
inc
push
cli
scas
hlt
imul
pop
ficompl
into
imul
inc
ds
cmp
push
filds
loope
and
jb
cmpb
mov
imul
sub
push
jae
xchg
enter
dec
mov
pop
loope
cmp
mov
inc
ret
dec
dec
mov
call
mov
xchg
dec
pop
andb
sbb
pop
roll
pmullw
add
out
xlat
cmp
and
cmp
outsb
cmpsl
mov
je
mov
movsb
cld
lods
out
std
fmuls
jne
inc
cltd
pop
pushl
cmp
daa
test
push
jno
inc
nop
add
xor
ljmp
mov
sbb
pop
and
sub
mov
adc
push
jle
add
pop
aam
mov
mov
movsb
jae
jne
jbe
fisubs
mov
xor
ret
add
stc
add
pop
sub
sub
or
sbb
dec
lods
xor
sub
fs
and
add
inc
inc
dec
xchg
push
ret
dec
out
cli
and
hlt
jecxz
mov
mov
push
sbbb
mov
xlat
push
js
hlt
js
test
add
aaa
mov
cwtl
sbb
push
addl
addb
jo
sub
test
aam
push
insb
aad
icebp
inc
out
add
xchg
call
lahf
es
mov
xchg
cmp
mov
xlat
test
jno
jbe
push
or
imul
scas
jo
fmull
sub
xlat
in
sbb
mov
push
jo
ret
daa
imul
mov
pop
cmp
xchg
sbb
fbld
and
jle
movsb
lret
mov
mov
loope
dec
cmp
jno
or
mov
inc
cmp
movsb
xor
insl
loope
or
jns
aas
sub
push
push
shrl
in
push
mov
jbe
inc
shrl
add
and
jl
jb
dec
jne
push
push
pop
sbb
pop
adc
aas
out
ds
jbe
aas
cmp
pop
out
sbb
or
call
bound
imul
cmp
lock
add
add
mov
and
outsl
test
dec
cltd
out
pop
push
push
push
inc
xchg
adc
cmp
lret
and
sbb
jb
xor
and
xchg
lods
mov
xor
xchg
mov
cmpl
sti
adc
loop
mov
fnstsw
mov
dec
lcall
add
add
gs
inc
jle
lds
std
pop
cmp
aad
outsl
lret
int3
rcr
addl
mov
test
push
cmpl
jg
and
mov
and
out
pop
jne
hlt
inc
inc
lock
insl
pop
loop
je
mov
aas
ljmp
ja
mov
xor
mov
pop
add
add
push
sbb
je
push
jb
insb
pop
mov
cmp
mov
mov
add
adc
cmp
sbb
ret
xchg
fld
lret
add
jg
gs
xor
popf
sub
or
imul
jo
jp
pop
mov
fiaddl
xchg
adc
fisttpll
add
in
aad
call
out
dec
mov
mov
shrl
or
mov
mov
das
int3
and
and
loope
or
xchg
sbb
dec
dec
inc
inc
pop
sti
and
mov
out
scas
cmp
mov
fildl
rcrl
bound
mov
jno
insb
cmpsl
aam
mov
std
mov
jbe
imul
xor
out
sbb
inc
cmp
dec
ror
out
stos
lds
cli
scas
mov
mov
push
test
mov
jb
orl
xchg
shll
repnz
in
push
xchg
cld
pusha
int3
insl
xlat
and
into
fidivrs
fwait
in
jl
stc
jp
stos
punpckldq
push
dec
sub
pop
es
sbb
sub
add
je
inc
push
aas
xchg
insb
push
push
jnp
shll
and
cmpsl
or
rcrl
xchg
test
cmp
jg
mov
dec
lret
add
inc
out
jle
mov
or
add
inc
mov
std
pop
xchg
aas
inc
dec
jo
mov
out
icebp
cltd
std
pop
jbe
fsubl
loopne
out
inc
repz
idivl
or
or
aas
mov
xor
lret
lret
fs
std
sti
addl
jno
add
or
jo
lret
push
or
add
or
iret
pop
xchg
or
add
inc
push
or
shrb
fdivrs
pop
inc
pop
test
movsl
mov
mov
mov
std
cs
mov
stos
lcall
xor
rorl
jae
loopne
cmp
adc
std
sahf
dec
jns
movsb
das
lahf
jp
aam
dec
ljmp
leave
fldcw
stos
or
fdivs
jle
shr
mov
mov
daa
pushf
popf
lret
ffreep
js
call
push
pop
pushf
xchg
sbb
lcall
cltd
cmpsl
inc
js
cmpsl
addr16
xor
movsl
ss
test
loopne
stos
or
into
stos
add
mov
leave
sub
cwtl
std
xchg
mov
pop
add
sub
add
dec
gs
sub
pop
negb
mov
pop
cmc
loopne
push
add
jecxz
cmp
pop
push
add
jp
jle
aam
jg
pop
iret
jge
xchg
or
dec
orb
lods
mov
jp
clc
add
cmp
insb
data16
insl
inc
dec
mov
insl
lds
sbb
lcall
xchg
sub
out
ret
js
popa
mov
std
and
or
fs
mov
data16
xchg
jmp
leave
push
rorl
jle
pusha
jecxz
dec
aad
stc
dec
mov
fldcw
dec
cs
dec
add
inc
in
push
inc
cmp
sti
addb
inc
test
cmovo
popa
cmp
push
arpl
push
lods
int
push
aad
jne
and
mov
xchg
push
clc
push
and
push
imul
mov
pop
mov
and
xor
jp
movsb
pop
out
aas
jmp
fsubs
outsl
pop
add
fcompl
mov
jb
jae
mov
jno
mov
sbb
add
fdivrl
es
stc
loop
dec
lcall
pop
dec
mov
in
dec
pop
out
stos
dec
xchg
dec
imul
xor
rcrl
push
sbb
or
fdivr
and
push
pop
ljmp
ret
out
loop
dec
inc
ret
push
inc
or
int
lea
movsb
inc
inc
js
inc
in
mov
xchg
negb
mov
add
popa
test
lcall
notl
sbb
inc
add
lahf
in
pop
sar
fnstenv
dec
std
sbb
std
fsubs
ds
fsincos
adc
dec
pop
or
mov
ret
or
add
ja
dec
mov
jmp
sbb
mov
pop
stos
push
xor
jecxz
repnz
push
or
test
push
xchg
pop
in
movsb
xchg
add
cs
cmpb
xchg
movsb
ss
mov
pop
lahf
sahf
jecxz
sahf
jg
mov
pushf
int
push
cwtl
cli
stos
pusha
cltd
xor
lcall
or
out
jo
mov
dec
mov
cmp
popl
dec
mov
sbb
mov
mov
xor
orb
mov
cmpb
jp
add
rcll
xchg
pop
loop
add
and
xchg
popf
movsb
stos
fbstp
daa
scas
pop
outsl
lods
mov
lods
lods
adcl
pop
xor
add
ljmp
sbb
jl
mov
mov
xor
add
dec
bound
cmp
mov
push
int
mov
mov
mov
sub
adc
mov
mov
fdivrp
popa
mov
pop
insl
xlat
xchg
fs
add
pop
int3
or
pop
push
jno
mov
mov
fidivrs
dec
inc
or
push
or
enter
jecxz
add
popa
call
adc
fists
mov
cmp
sbbb
or
jg
or
lcall
push
imul
addr16
xor
notl
and
xchg
and
xchg
jg
add
mov
nop
inc
sub
ja
xor
les
lret
and
pushf
sub
sarl
in
movsb
fldl
cmp
data16
xchg
cwtl
mov
jne
cwtl
testb
add
outsl
repz
loop
sbb
jns
mov
adc
fwait
leave
shll
cmp
pop
xor
imul
or
push
out
add
jnp
lea
ds
dec
xchg
mov
mov
pop
inc
fisttps
negb
test
fnstcw
and
sbb
pop
adc
or
lods
enter
mov
push
fwait
sub
pop
mov
inc
out
and
fldl
dec
insb
adc
cs
imul
jbe
ret
dec
lods
lret
cmpsb
sbb
cmc
into
popa
lods
xchg
adc
pop
jle
inc
jns
clc
sti
add
xchg
data16
sar
fcoms
in
mov
mov
add
movsb
js
or
shll
and
cmp
mov
sub
cmp
cmp
repnz
sub
lret
add
dec
push
xor
icebp
cmpsb
ja
xchg
shlb
inc
mov
mov
lock
loop
leave
imul
mov
outsb
aas
imul
ss
mov
lods
pop
push
push
xor
mov
push
je
jl
in
mov
movsb
lods
inc
subb
call
dec
jns
loopne
cmp
push
pop
xchg
in
xor
push
in
pop
sti
jmp
mov
cmp
in
inc
xchg
data16
mov
push
and
rcll
or
int
roll
andb
mov
push
jmp
mov
pop
push
rcrb
rcrl
fdivrl
add
mov
insl
jp
sub
cld
inc
es
cmc
cmp
fildl
sti
xchg
shl
jmp
or
sbb
adc
rcll
jno
mov
push
mov
loop
cld
ret
inc
pop
xor
pop
scas
in
enter
test
mov
or
addr16
sbb
clc
das
push
mov
push
or
and
mov
sub
les
cmpb
pusha
daa
push
add
call
sub
daa
mov
push
mov
std
sub
inc
jle
mov
fcmove
je
mov
shl
shll
xchg
mov
inc
mov
and
mov
add
xchg
or
jg
push
jg
cmp
add
xchg
xchg
mov
outsb
push
es
adc
pop
mov
xor
in
test
push
sub
add
push
loopne
call
mov
dec
xor
push
icebp
ljmp
aam
add
jle
mov
ds
shrl
add
add
inc
jbe
inc
and
sbb
loope
aad
repz
dec
xor
lret
adc
les
out
push
jle
mov
cltd
test
into
fnop
lahf
in
xor
gs
adc
les
pop
rcrl
jne
add
push
mov
or
mov
iret
cmp
mov
add
add
xchg
aad
mov
cmp
or
jno
mov
je
add
mov
add
sbb
or
dec
or
frstor
hlt
xor
outsb
and
sbbb
scas
dec
lods
jbe
pop
inc
loopne
jle
rcpps
pop
pop
mov
aam
mov
fstps
addl
add
jae
repnz
into
loope
mov
jl
mov
push
fisubl
sub
sub
or
mov
fdivrp
add
jge
add
repz
fildll
or
mov
rolb
popf
sub
out
and
pop
adc
add
fwait
push
aaa
iret
orl
and
sub
xor
add
dec
fst
aas
fildl
imul
movsl
arpl
pop
iret
dec
pushf
lods
sbb
cmp
inc
jnp
sahf
inc
imul
adc
mov
pop
and
jg
cltd
cmpl
mov
inc
or
mov
mov
cmpsb
loop
fimull
mov
jg
sub
scas
stos
aaa
rcrl
nop
call
inc
stos
mov
pop
pop
inc
mov
add
push
pop
add
je
movsl
subl
or
mov
mov
lds
mov
jp
insb
xchg
sub
mov
popa
bound
test
xchg
in
loopne
movsl
jnp
mov
les
ja
jmp
jne
ljmp
sbb
sahf
test
add
jg
repz
dec
gs
sbb
push
into
sub
add
xor
mov
mov
repz
mov
lods
hlt
dec
imulb
jmp
and
mov
mov
mov
mov
pop
or
or
pushl
xchg
add
jae
adc
mov
mov
aam
test
dec
sbb
add
arpl
sbb
scas
test
jnp
cmp
xor
pop
pop
fxtract
push
insb
pop
iret
pop
adc
push
mov
lret
ljmp
gs
add
mov
jp
mov
movsb
dec
lret
and
dec
cmc
es
mov
push
cmc
aad
or
repnz
cld
add
jl
add
push
popf
push
add
xor
std
repz
sub
push
xchg
loope
pushf
cmp
sub
popa
mov
stos
clc
mov
clc
xchg
adc
cmp
ret
fisttps
mov
lahf
add
push
insl
jmp
and
mov
cs
mov
lock
rcr
xor
add
add
dec
fbstp
inc
popa
mov
mov
push
mov
lea
iret
popf
mov
and
stos
adc
or
out
sub
jnp
aam
shlb
xchg
mov
push
enter
cwtl
xor
jg
lahf
mov
scas
sbb
add
repnz
jmp
xchg
or
movb
int
aas
cltd
aam
test
push
adc
sbb
subb
adc
push
sub
test
cmpb
add
and
and
jecxz
mov
in
jne
outsb
pop
sbb
daa
pop
cld
sbb
shll
ja
pop
out
int3
push
add
rorb
pop
mov
sub
or
popa
lahf
push
iret
out
adc
loope
roll
add
roll
inc
inc
and
dec
mov
call
cmc
mov
xchg
popf
stos
cmp
or
scas
xorl
iret
lea
repnz
push
ret
push
xchg
add
pop
mov
mov
mov
push
fwait
shrl
jp
lock
cli
lret
les
leave
leave
shll
fstps
pop
sub
daa
insb
mov
add
mov
shr
ret
fcmovbe
dec
adc
add
dec
sbb
push
cs
mov
stc
adc
cwtl
add
xchg
inc
push
insl
xlat
push
bound
insb
cmpsb
xchg
and
mov
fcmovnu
xchg
bound
push
bound
fsubp
imul
in
cs
add
pop
pop
push
scas
je
pop
ret
ficoml
xchg
fwait
btc
pop
push
shlb
sbb
sub
aad
pop
sub
mov
mov
push
and
add
stos
cmpsl
sarl
out
add
mov
lea
and
iret
xchg
sub
mov
xor
repnz
std
imul
int3
mov
rcrl
push
xor
add
xchg
jne
shll
sti
aad
mov
xchg
out
cmp
pop
js
add
pusha
dec
mov
push
jp
cmp
rorb
mov
jle
sbb
xchg
sbb
add
lds
add
fld
inc
sub
or
and
cmpsb
vpmacsdql
mov
or
jl
dec
movsl
push
arpl
rcll
push
push
dec
ds
push
seta
in
shrb
mov
decb
xlat
push
mov
mov
mov
test
mov
lret
and
sbb
imul
pop
push
add
cmp
mov
scas
adc
addr16
xchg
ficoms
rolb
loopne
cmp
iret
sbb
lock
std
mov
imul
dec
test
adc
add
push
sub
mov
js
jp
inc
and
aaa
in
mov
mov
cmp
jg
sub
cmp
or
rol
nop
jo
cmp
mov
fadd
jb
mov
cmp
inc
push
popw
add
lret
aad
push
push
push
aaa
popf
notl
es
push
stos
test
add
add
ret
int
and
dec
jg
cld
or
pop
leave
dec
add
mov
xor
clc
jo
sbb
cwtl
xchg
mov
movsb
fdivr
hlt
adc
fucom
aas
pop
push
fucomi
pushf
pushl
lret
adc
add
xchg
jnp
sbb
pop
and
jo
xchg
testl
add
add
push
test
fs
sub
mov
in
enter
dec
add
fildll
cmc
enter
sbb
inc
daa
and
cmpl
dec
dec
nop
loopw
mov
mov
movsl
pop
int
mov
dec
and
pop
std
dec
das
or
and
jg
mov
add
add
movsl
inc
xor
fbstp
push
xorb
icebp
mov
rclb
dec
leave
insl
out
push
xorl
cmp
and
into
daa
jno
xlat
adc
dec
test
push
or
or
mov
cmp
mov
or
repnz
es
xor
int
int
out
add
lock
testb
add
loope
bound
lock
push
dec
lds
cld
imul
mov
movsl
dec
call
bound
repz
and
pop
sbb
mov
pop
sar
push
sbb
lret
mov
arpl
push
inc
dec
dec
int3
dec
je
mov
out
mov
aaa
insl
test
fsubrl
mov
inc
roll
push
jle
lcall
jne
fdivs
lahf
ret
stos
mov
cmp
jns
or
mov
push
cmp
xor
dec
cmc
and
jb
imul
call
ljmp
adc
out
cli
adc
mov
jbe
jns
cmp
mov
hlt
mov
scas
loopne
pop
ret
gs
pop
push
repz
or
int
cmp
shrl
int3
inc
xchg
inc
push
push
ss
call
shrb
pop
sahf
ret
loopne
js
fstpt
fiaddl
clc
add
cmpsb
stc
mov
jne
adc
fucomip
dec
jnp
cmpsl
cmpsl
dec
mov
add
aad
sbb
and
mov
wrmsr
dec
or
mov
cmp
push
gs
and
ret
mov
add
sti
mov
mov
js
ljmp
jecxz
out
and
lods
xchg
pop
leave
mov
mov
imul
sub
inc
popa
inc
adcl
hlt
inc
pop
ja
gs
leave
lcall
mov
ljmp
scas
stc
jae
cltd
mov
jb
cmpsb
adc
dec
mov
in
lock
fwait
ja
jnp
stos
in
cmp
mov
fildl
add
enter
enter
lds
and
lret
mov
xchg
paddsb
aad
mov
xchg
cmp
xchg
mov
inc
fldt
jecxz
pop
xlat
pop
push
push
mov
cmp
imul
imul
xor
xor
cmpsb
shll
xor
add
pop
sub
rorb
decb
shll
mov
mov
gs
fstps
xchg
pop
sbb
adc
cli
mov
in
mov
leave
or
pop
sahf
lods
cltd
inc
sub
xchg
mov
add
rcrb
mov
and
stos
fdivrl
movsl
push
out
adc
add
add
aad
or
mov
add
fmul
jp
pop
xor
push
out
xor
mov
add
mov
nop
pop
push
mov
mov
in
and
add
je
xor
addr16
daa
lahf
pop
popf
shll
push
push
xor
inc
inc
fisubrl
cmp
scas
mov
jle
xor
es
and
sbb
cmp
mov
cli
gs
int
pop
pusha
ret
add
mov
jo
jecxz
std
mov
push
dec
and
dec
mov
inc
aam
fadds
addr16
push
pusha
fnstenv
dec
jmp
add
sub
jno
dec
cltd
sbb
out
adc
pop
xor
jle
movsb
ds
cltd
out
int3
mov
cmp
mov
rolb
scas
test
aas
les
ret
icebp
mov
cmp
insl
icebp
add
ror
call
push
xchg
repnz
cld
fnsave
inc
pushf
xor
stos
ds
inc
jmp
ljmp
rol
or
lods
add
dec
cmp
jns
cmp
add
sub
jbe
addr16
mov
lods
inc
adc
insb
sub
pop
sub
popf
into
sub
neg
cmp
dec
xor
lahf
sub
fisttpll
inc
scas
imul
and
dec
sub
lret
pop
loopne
inc
data16
pop
xchg
jmp
add
mov
outsb
mov
add
mov
lock
test
or
dec
clc
cmp
lds
jnp
mov
dec
sarl
xor
mov
jbe
test
inc
lcall
repz
mov
and
jb
jmp
pop
popa
rolb
add
push
xor
inc
mov
xchg
stos
addb
fstpt
dec
jmp
mov
add
adc
orl
push
pop
push
push
sarb
fstpl
mov
pop
jecxz
sub
push
mov
dec
stos
gs
dec
add
pop
jbe
fwait
add
fmull
iret
lds
mov
sti
cli
arpl
mov
add
add
add
outsb
lods
add
push
inc
sbb
fs
xchg
ficompl
adc
or
rcrb
jmp
add
lods
arpl
lods
sbbl
inc
clc
gs
inc
add
mov
imul
xchg
xchg
xchg
es
mov
pop
dec
pop
pushf
sub
xor
add
add
and
or
pop
out
mov
icebp
out
xor
jns
push
dec
mov
lret
outsb
mov
xlat
shll
mov
shl
pop
and
sbb
sub
push
sbb
fwait
mov
jbe
inc
sbb
out
sbb
pop
xchg
subl
mull
hlt
into
enter
add
lods
inc
pusha
fsubl
inc
push
lods
mov
mov
lret
jg
enter
popa
testb
adc
adc
enter
inc
mov
sbb
pop
push
out
xor
mov
repnz
mov
mov
cvtpi2ps
pop
inc
shl
test
rcll
ljmp
and
and
jns
test
xchg
fisubl
fdivrl
cld
in
dec
xchg
xchg
mov
cmc
lahf
es
inc
cmp
popf
sub
push
mov
jl
cld
or
aam
add
xchg
imul
jg
push
loopne
ret
jb
sar
leave
lods
push
sbb
mov
mov
aaa
add
push
and
sub
xlat
les
stc
pop
mov
shll
mov
inc
jb
lcall
jbe
cmp
xor
dec
jnp
insb
mov
or
mov
movsb
out
sub
addl
push
aad
loope
mov
lcall
dec
daa
les
add
inc
rorb
cmc
cmpsb
insl
add
xor
das
sub
dec
dec
cltd
in
jbe
adc
xchg
adc
mov
sbb
fstpt
cs
xor
shlb
movsl
xchg
pop
pop
sbb
jecxz
jns
push
xchg
xchg
mov
out
repnz
movsb
sbb
je
rorl
or
mov
js
aaa
add
fnstcw
jno
mov
add
lods
push
stc
push
clc
popa
xor
mov
rorl
mov
movsb
xchg
or
adcl
stc
test
xor
fnstcw
mov
pop
lret
hlt
and
popw
cmp
mov
cld
lock
icebp
nop
mov
xchg
in
scas
cmp
adc
xor
in
mov
jb
add
xchg
and
dec
fwait
sub
jecxz
push
and
push
xor
shll
sub
rcrl
pushf
xchg
pop
xchg
cmp
int
aam
into
iret
or
insb
in
je
inc
fstl
gs
cmp
sti
jmp
xchg
or
and
xchg
xlat
jg
mov
add
mov
shll
in
xor
roll
cs
insb
bound
or
sti
bnd
mov
repnz
dec
inc
xchg
xor
add
leave
movsb
arpl
mov
lods
fwait
dec
add
jl
addb
mov
ja
pop
call
push
scas
add
adc
or
sbb
outsl
rcr
movsl
scas
addr16
adc
add
loopne
dec
icebp
cwtl
imul
push
stos
out
dec
xor
mov
mov
and
lods
jge
push
sub
pop
mov
out
ljmp
add
mov
add
mov
add
mov
add
mov
add
clc
leave
adc
add
lret
enter
test
jno
add
mov
add
enter
leave
add
jmp
adc
jmp
adc
mov
leave
adc
stos
leave
verw
leave
adc
jns
adc
push
leave
adc
jg
adc
jg
adc
outsb
leave
adc
pop
leave
adc
jnp
leave
add
leave
add
pop
leave
add
pop
leave
add
dec
leave
add
add
mov
add
mov
add
mov
add
mov
add
mov
incb
lods
mov
adc
lret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
popl
adc
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
call
arpl
sub
mov
sub
xchg
daa
or
test
sub
ss
lock
jecxz
and
out
shl
mov
aaa
fidivs
inc
fidivs
out
mov
in
xorl
push
adc
dec
cld
add
push
insl
add
mov
divl
xor
test
sub
jecxz
into
cmc
lret
out
movsl
fcmovnbe
shl
push
call
subl
push
mov
imul
cmp
loope
lret
or
test
lret
add
scas
lret
add
push
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
and
jmp
scas
lret
add
mov
add
mov
add
or
mov
out
add
fimull
add
add
add
add
insl
stos
incb
insb
addb
xchg
cmp
pop
add
into
addr16
iret
arpl
xchg
add
insb
add
iret
add
lds
je
jbe
add
aad
dec
inc
cmpsl
stos
inc
imul
mov
pusha
imul
pushf
jb
fsubl
add
or
adc
inc
add
add
inc
incl
inc
incl
push
incl
jmp
add
mov
add
mov
add
and
outsb
mov
add
add
add
incb
mov
add
mov
fnsave
add
arpl
adc
incl
mov
inc
mov
outsl
inc
mov
jno
mov
adc
jno
mov
insb
inc
mov
outsb
inc
mov
jo
mov
jno
mov
outsb
inc
mov
insl
inc
mov
add
mov
add
mov
add
mov
add
mov
mov
stos
add
add
lret
iret
mov
lret
in
add
lret
mov
add
lret
xchg
mov
incl
mov
imul
loopne
mov
filds
mov
pop
jge
lret
in
mov
jecxz
mov
lock
lret
fbstp
lret
filds
mov
lock
lret
lock
lret
fildl
mov
hlt
jb
mov
in
add
lret
cli
add
lret
loop
mov
add
add
add
scas
lret
add
scas
lret
add
scas
lret
add
scas
lret
add
scas
lret
add
scas
lret
add
lret
add
scas
lret
add
or
add
or
add
popa
lret
add
add
lret
add
inc
lret
add
mov
add
inc
lret
add
int3
add
scas
lret
add
and
add
scas
lret
add
sbb
add
mov
sbb
add
sbb
add
add
ficompl
add
cmp
add
jmp
lret
fcomps
add
mov
sbb
add
sahf
sbb
add
sbb
add
sbb
add
sbb
add
leave
add
bound
add
leave
add
push
sbb
add
leave
add
popa
sbb
add
leave
add
xor
add
mov
pop
jo
mov
add
mov
jo
mov
add
mov
outsl
add
clc
outsl
add
or
add
outsl
add
pshufw
daa
add
mov
jno
mov
add
add
and
mov
add
add
add
mov
add
mov
jno
mov
add
mov
jo
mov
add
mov
jo
mov
add
mov
popf
jo
lret
lds
mov
sahf
jo
lret
movb
mov
jg
mov
iret
add
lret
rolb
lret
gs
lret
xchg
add
lret
cwtl
add
lret
jns
mov
sub
lret
jp
mov
test
add
lret
stos
outsl
mov
push
add
lret
stos
outsl
mov
xor
outsl
mov
ss
lret
lods
outsl
mov
pop
add
lret
scas
outsl
mov
adc
lret
scas
outsl
add
lret
add
mov
add
adc
lret
add
add
lret
add
mov
add
lret
add
aad
add
lret
add
push
aad
add
lret
add
push
lret
add
mov
add
mov
add
add
lret
add
lret
add
mov
add
mov
add
cmp
add
imul
add
clc
movl
add
into
add
icebp
xor
add
movl
add
add
out
xor
add
into
add
xor
add
push
into
add
ljmp
add
aas
add
cmp
add
pop
add
pusha
add
pop
add
add
into
ja
into
jnp
sbb
jns
jp
add
jns
flds
push
into
add
add
mov
add
push
add
or
add
out
add
mov
add
inc
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
les
inc
mov
add
mov
add
lea
jo
pusha
add
xchg
add
xchg
add
mov
add
mov
add
mov
add
mov
xchg
add
lret
mov
lret
push
je
arpl
outsl
add
lret
jo
add
lret
pop
add
lret
push
add
mov
int3
lret
lret
ret
add
lret
sahf
lret
xchg
lret
or
add
lret
test
sub
add
lret
mov
lret
outsb
lret
mov
lret
ror
add
lods
add
add
decl
stc
incl
repz
in
push
lods
mov
cmp
and
call
mov
call
mov
jl
add
add
adc
sub
in
jmp
icebp
call
mov
add
lods
ltr
mov
decl
lods
sbb
les
add
add
inc
lods
out
jmp
lds
add
movb
dec
add
xor
add
add
imul
push
add
stc
sahf
or
clc
sahf
or
xor
sahf
sti
xor
sahf
mov
xor
sahf
movsl
xor
sahf
cmpsl
xor
sahf
test
xor
sahf
in
add
sahf
out
test
cli
xor
mov
xor
sahf
movsb
xor
lret
test
ds
stos
xor
xor
add
mov
sbb
mov
sub
mov
incl
mov
orb
mov
loop
add
loop
add
loop
add
loop
add
ret
lret
add
in
int3
ret
int
fildl
into
mov
jmp
add
mov
in
fildl
ret
add
loopne
rolb
loop
add
loop
mov
call
fdivrl
decl
fcompl
fcomp
xchg
xchg
dec
fcmovnb
inc
fstpt
sub
scas
incl
sbb
push
test
lds
inc
lds
rol
sub
rol
sub
rol
and
lds
xchg
lds
decb
lds
decb
lds
cltd
lds
mov
xor
fadd
add
and
push
sbb
push
mov
mov
push
mov
mov
push
lahf
add
aam
xchg
mov
push
nop
mov
push
ret
mov
push
mov
or
mov
or
test
adc
xchg
adc
push
mov
pop
inc
mov
pop
inc
mov
pop
push
mov
pop
dec
mov
pop
inc
mov
pop
aas
mov
pop
push
mov
pop
sbb
cld
push
sbb
cltd
push
add
jns
push
add
cltd
push
add
cltd
push
add
cltd
push
add
cltd
push
add
cltd
push
add
cltd
push
add
cltd
pop
add
cltd
pop
add
cltd
pop
add
cwtl
pop
add
cwtl
xchg
add
cwtl
pop
add
cwtl
pop
add
cwtl
adc
jp
add
cwtl
add
cwtl
add
cwtl
add
cwtl
add
add
cwtl
pop
add
cwtl
push
add
cwtl
or
cwtl
or
loopne
or
cwtl
or
cwtl
mov
add
push
mov
sti
dec
scas
jecxz
das
mov
sti
xor
lock
xor
jb
inc
scas
imul
inc
scas
pop
pushl
mov
cmp
cmp
cmp
push
cmp
jno
cmp
scas
xor
dec
mov
aas
scas
xor
add
add
xlat
incb
loopne
xor
mov
decb
jmp
dec
mov
ss
mov
decb
inc
cli
iret
cmp
jmp
pop
incb
iret
or
ret
xlat
iret
add
ror
std
cmpsb
iret
vpsrlw
into
std
mov
iret
sar
std
lret
std
mov
mov
iret
std
cmpsb
iret
xchg
lahf
iret
xchg
std
xchg
iret
js
fmul
jns
std
ror
jae
ror
pop
std
ror
push
std
lahf
iret
pop
std
mov
iret
inc
std
cwtl
iret
inc
std
mov
lock
push
out
and
jecxz
pop
inc
icebp
add
aas
loop
dec
ss
add
push
add
inc
add
inc
add
add
add
dec
add
test
dec
add
test
data16
imul
pop
test
cmp
ds
mov
xor
pop
add
mov
cmp
sub
ret
mov
xchg
add
ret
add
add
add
add
ret
out
pushf
add
ret
aad
sahf
add
mov
add
ret
aas
ret
dec
ret
cmp
ret
inc
ret
repnz
sub
mov
sub
mov
aas
shll
shll
jecxz
mov
add
mov
or
mov
or
push
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
or
inc
or
and
dec
or
mov
xchg
or
add
xchg
or
fwait
roll
or
sahf
rcl
or
ror
xchg
or
jmp
xchg
or
ljmp
iret
jmp
daa
or
jmp
sub
jmp
pop
or
jmp
xor
ljmp
xchg
jmp
rorl
ljmp
lret
jmp
add
add
jmp
or
lret
mov
or
jmp
or
jmp
or
cmpsb
or
out
xchg
je
add
mov
and
test
and
test
and
mov
shlb
mov
inc
test
and
mov
xlat
and
test
and
mov
mov
push
and
stos
push
and
mov
out
and
scas
fbld
fisubs
leave
and
test
and
mov
int3
and
ret
and
ret
mov
adc
add
adc
out
lds
and
lds
and
and
sbb
push
and
push
and
push
and
lds
add
lds
lds
vxorpd
in
pop
and
lds
and
lds
and
daa
and
cs
lds
and
lds
xlat
lds
lds
push
lds
push
lds
and
lds
es
lds
and
sub
lods
and
cli
les
and
push
or
sarl
or
add
xor
xor
cmp
sbb
xlat
rolb
ror
pop
mov
loop
iret
xchg
add
out
add
stos
xchg
push
or
xchg
enter
mov
pop
and
roll
xlat
mov
pop
mov
int3
jge
push
aam
or
xchg
xchg
push
or
push
or
xchg
push
or
xchg
push
or
add
lret
fwait
or
jmp
xchg
or
jmp
orb
jmp
jb
popf
ljmp
cwtl
jmp
or
jmp
or
lret
orb
in
daa
or
out
sub
mov
sub
mov
lret
xor
mov
in
and
or
stc
out
or
in
scas
or
out
mov
xor
mov
or
out
add
mov
add
lods
jp
mov
jl
test
jbe
xchg
js
xorl
jne
inc
mov
outsl
add
lods
outsb
add
movsl
jno
inc
mov
stos
add
add
lods
add
mov
cmpsl
add
lods
cmpsb
add
movsb
test
add
mov
add
stos
mov
add
mov
int
add
ret
das
ret
ds
sub
ret
arpl
or
repnz
push
icebp
les
push
add
or
out
or
test
push
push
and
or
add
sbb
adc
dec
lds
push
dec
lds
push
fadd
adc
ffreep
adc
into
les
push
mov
les
push
add
push
add
sbb
xlat
les
mov
push
aad
push
push
push
les
push
mov
or
mov
or
lods
popa
or
movsb
push
or
lods
pop
or
movsb
pop
or
add
or
lods
pop
or
movsb
pusha
or
or
mov
or
lods
aad
das
movsb
aam
xor
or
lods
mov
xor
or
lods
int
aaa
movsb
or
cmp
or
lods
out
movsb
lods
or
mov
ret
or
lret
leave
pop
jo
lret
mov
add
add
les
ja
int
insb
mov
mov
pop
imul
pop
stc
mov
jl
out
mov
js
jecxz
jns
loopne
jp
loope
pop
pop
fidivrs
pop
pop
cld
mov
aas
pop
cli
mov
mov
sbb
or
fiaddl
out
dec
or
fiaddl
add
fimull
fstp
dec
or
fiaddl
inc
mov
shrl
xchg
stos
shrb
lea
into
das
jg
int
xchg
stos
int3
das
jns
or
js
or
jnp
or
pop
stos
or
push
mov
push
xor
add
xor
add
xor
add
mov
mov
das
stos
std
das
xchg
stos
cld
das
sub
cli
das
sub
clc
das
and
mov
cmc
das
add
ret
ret
ret
rol
push
xor
ret
inc
lds
pop
lds
lds
cmp
lds
sub
pusha
xor
lds
sbb
bound
clc
les
shrb
shlb
adc
test
add
push
shrb
and
scas
adc
shrl
adc
shll
adc
shll
jmp
shll
adc
rolb
mov
mov
lret
push
mov
mov
cwtl
add
ret
popl
ret
dec
add
ret
mov
add
add
inc
add
andl
jecxz
add
jecxz
add
jecxz
add
jecxz
add
ret
dec
add
mov
incb
stc
mov
push
rep
xchg
pusha
repz
mov
repz
mov
repz
push
and
xchg
push
and
push
stos
inc
and
dec
and
inc
and
and
dec
and
inc
and
dec
stos
inc
and
xchg
and
stos
mov
stos
les
dec
stc
push
adc
stc
push
adc
push
adc
stc
xor
cmpsb
jecxz
or
xor
or
adc
arpl
adc
stc
xor
mov
xor
cmpsb
loope
lret
clc
xor
pushf
xchg
ror
clc
es
movsl
ret
or
add
pop
dec
cmc
adc
sub
dec
cs
jle
mov
dec
dec
lcall
dec
adc
push
dec
mov
pop
dec
push
aaa
pop
dec
dec
jmp
dec
cmc
incl
dec
dec
fadds
dec
scas
xchg
fimuls
lret
dec
dec
adc
ret
dec
dec
mov
mov
or
pop
dec
or
rorb
mov
jmp
mov
add
add
lret
add
mov
add
mov
add
pop
int3
add
pop
int3
add
dec
lods
add
scas
call
sub
sbb
xor
fdivs
aaa
repz
add
int3
add
or
arpl
test
push
outsl
jnp
jo
jg
je
jae
js
fcmovne
pop
pop
imul
outsl
jb
addr16
test
imul
add
add
mov
je
mov
js
xchg
jle
mov
add
mov
add
pop
lret
add
pop
lret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
je
add
je
add
je
add
je
add
je
add
je
add
cmc
push
ljmp
push
xchg
pop
xchg
push
xchg
dec
xchg
inc
xchg
push
cmp
xchg
push
sub
xchg
push
sbb
mov
jecxz
mov
out
cld
add
call
test
cld
test
faddl
mov
test
push
fldl
iret
push
int
push
lds
mov
test
faddl
mov
test
push
xchg
test
push
test
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
lret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
enter
enter
enter
enter
enter
enter
enter
enter
enter
leave
lcall
leave
incl
sbb
incl
or
incl
or
incl
sbb
incl
sbb
incl
or
decl
leave
incl
fcmove
incl
fcmove
incl
lret
add
into
incl
fcmove
incl
fcmove
incl
add
into
incl
lret
add
enter
enter
jae
add
jae
add
je
add
je
add
je
add
je
add
je
add
je
add
je
add
je
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
call
add
lret
jmp
add
lret
jecxz
mov
jmp
add
mov
lret
push
add
lret
das
add
lret
add
pop
add
lret
xor
lret
pop
je
lret
lock
lret
ja
mov
lret
add
enter
or
sbb
int
sbb
or
mov
add
mov
add
add
cmc
mov
add
fimuls
add
mov
add
mov
add
mov
add
mov
add
sahf
or
mov
sahf
or
repz
add
jle
add
mov
add
orl
add
popa
or
inc
mov
add
pusha
or
divl
or
add
std
inc
add
or
xchg
std
inc
add
dec
int3
add
jecxz
inc
add
push
add
cld
inc
add
pop
add
cld
inc
add
cld
inc
add
or
push
std
inc
add
add
add
std
inc
add
int3
or
jg
inc
add
std
inc
add
std
inc
add
or
iret
std
inc
add
adc
lret
std
inc
add
pop
add
out
cmc
inc
add
mov
add
mov
je
mov
add
mov
je
mov
add
mov
je
mov
add
mov
je
mov
add
mov
jbe
mov
add
inc
mov
add
mov
je
mov
add
inc
mov
add
inc
mov
add
mov
ja
mov
add
mov
ja
add
mov
add
mov
jbe
mov
add
inc
mov
mov
jbe
lret
stos
add
lret
pop
add
jo
mov
lret
ljmp
lret
outsb
add
lret
arpl
lret
sbb
lret
fldl
mov
lret
xor
test
sub
lret
xor
add
lret
roll
lods
lret
jmp
jb
mov
outsl
jb
popl
mov
lret
std
add
xchg
mov
stos
outsl
jb
add
mov
add
scas
movl
repnz
add
or
lcall
add
or
inc
scas
les
imul
movl
add
add
mov
add
or
lods
scas
movl
iret
mov
add
or
fwait
scas
mov
add
movb
mov
lods
add
scas
movb
pushf
or
xor
or
add
enter
out
inc
add
enter
out
inc
add
leave
push
add
inc
add
leave
add
imul
add
add
add
in
inc
add
in
inc
add
cmp
sbb
inc
add
in
inc
add
in
inc
add
push
add
inc
add
enter
in
inc
add
in
inc
add
in
inc
add
enter
in
inc
add
cli
inc
add
jbe
inc
mov
add
add
clc
add
mov
jo
mov
add
mov
outsb
inc
mov
add
mov
outsb
inc
mov
add
mov
outsb
inc
mov
add
mov
outsb
inc
mov
add
mov
push
mov
add
mov
push
mov
add
inc
mov
add
mov
insb
inc
mov
add
pushf
push
mov
add
cld
insb
inc
mov
add
insl
inc
add
mov
inc
mov
movsl
add
lret
outsl
add
lret
out
jb
mov
mov
jmp
jb
xchg
add
cwtl
add
lret
pushf
add
lret
mov
mov
sub
lret
es
lret
pop
insl
repnz
sbb
lret
cs
lret
repnz
mov
lret
insb
repnz
dec
add
mov
lret
scas
add
lret
sbb
insb
repnz
add
add
xchg
add
xchg
or
bound
or
mov
pop
or
push
mov
add
mov
add
mov
add
mov
add
or
fwait
mov
add
or
mov
or
in
mov
add
mov
add
mov
add
mov
add
or
scas
mov
add
lret
add
adc
jmp
inc
add
loop
add
iret
das
add
inc
add
in
add
or
arpl
inc
add
int3
or
and
add
inc
int3
add
add
int
add
in
add
add
arpl
inc
add
add
cmp
inc
add
int3
add
jae
inc
add
push
add
jecxz
add
int
add
inc
add
inc
add
int3
push
add
inc
add
ret
mov
add
mov
push
push
mov
inc
mov
add
mov
inc
mov
add
mov
inc
mov
add
mov
inc
mov
add
inc
inc
mov
add
mov
mov
or
sbb
or
rolb
mov
mov
or
mov
add
mov
mov
or
mov
add
inc
mov
sub
lret
inc
mov
add
lret
flds
sahf
lret
dec
mov
mov
shll
cmpsb
lret
add
mov
shll
test
lret
fiadds
mov
xchg
mov
ret
mov
mov
lret
add
lret
pop
mov
ret
lret
pop
mov
movsb
lret
jnp
repnz
filds
mov
lret
add
mov
lret
les
mov
lret
add
filds
insl
adc
add
adc
add
push
or
in
roll
test
scas
aam
lea
add
push
or
xchg
mov
add
or
pop
mov
add
mov
add
adc
add
into
add
adc
add
add
add
push
or
ljmp
add
roll
push
or
jae
pop
add
adc
add
sub
pop
leave
cs
sub
scas
iret
add
test
adc
out
inc
add
adc
subl
add
iret
push
add
jmp
sbb
jmp
inc
add
jmp
add
add
enter
jmp
add
stos
out
inc
add
enter
call
aaa
add
inc
add
sub
stos
call
add
add
call
add
mov
popa
inc
mov
add
mov
arpl
rolb
loop
inc
mov
add
mov
bound
xor
or
cli
bound
inc
add
mov
arpl
nop
add
mov
bound
mov
adc
mov
bound
cmpsb
add
mov
fs
mov
add
mov
fs
mov
add
mov
bound
syscall
es
pusha
inc
mov
add
mov
bound
jns
adc
mov
pop
add
lret
sbb
lret
dec
add
lret
pop
lret
cli
add
repnz
movb
lret
cmp
lret
lods
add
lret
pop
add
lret
das
bound
lret
add
mov
mov
lret
add
lret
mull
lret
push
add
lret
bound
in
stos
lret
lret
bound
stos
add
lret
testb
lret
and
lret
xchg
add
lret
out
mov
out
mov
add
xlat
lock
dec
icebp
lock
mov
mov
jge
lock
je
out
dec
push
jne
xor
out
fcmovu
dec
add
inc
mov
fnstsw
mov
mov
mov
aam
sbb
imul
in
in
test
mov
and
xor
and
enter
dec
pop
insb
sbb
icebp
stos
sbb
or
add
iret
mov
xchg
add
jne
test
mov
loopne
lcall
f2xm1
adc
sub
add
push
sti
mov
xchg
ljmp
scas
xchg
pop
sbb
jmp
aad
push
pop
scas
sti
movsl
test
xlat
lods
pop
mov
push
and
xchg
sar
adc
pop
push
out
pop
mov
pop
mov
mov
xor
push
in
mov
repnz
hlt
out
xor
es
lods
sub
lods
sbb
inc
lcall
xor
jg
dec
cmpsb
mov
jge
movsl
jg
adc
lods
sub
add
mov
add
mov
pushl
pop
add
mov
or
add
mov
add
mov
add
mov
or
add
loop
pushl
push
add
mov
pushl
lahf
add
mov
pushl
fadds
add
lret
or
lret
out
mov
call
add
int3
call
add
lret
mov
call
add
add
leave
jmp
add
mov
jmp
add
mov
jmp
pushl
int3
call
add
lods
out
mov
ljmp
lret
mov
ljmp
lret
mov
call
call
mov
add
scas
leave
add
mov
add
add
mov
or
stos
mov
adc
mov
rcrl
int
int
leave
mov
rcll
mov
pop
mov
xor
lods
cmp
popa
lds
rcll
mov
pop
cld
jno
inc
clc
jne
inc
hlt
pop
fimull
pop
mov
popa
test
call
imul
or
insl
add
jo
inc
cmp
das
js
dec
xor
dec
addl
inc
mov
sti
pop
xchg
xchg
out
xchg
xchg
jecxz
fwait
fwait
out
push
lahf
lahf
jmp
mov
cmpsl
repz
stos
lahf
in
scas
fwait
clc
mov
xchg
mov
xor
mov
mov
ret
ret
xlat
lods
mov
add
lret
mov
mov
cld
xlat
mov
adc
fildll
int3
out
mov
sub
leave
outsb
daa
out
lds
repnz
mov
pop
aaa
mov
add
mov
incl
test
xchg
adc
mov
lcall
xchg
and
xchg
xchg
and
mov
out
test
repz
xorl
sti
cmp
idivl
xchg
xchg
imul
ss
jne
cmp
pop
push
lret
xchg
jae
movsb
mov
imul
addr16
xchg
shlb
xchg
into
pop
adc
ficompl
imul
dec
subl
pop
mov
pop
xchg
and
push
xchg
add
push
popf
sbb
cltd
adc
dec
adc
inc
popa
or
inc
insl
or
cmp
add
cmp
pop
xor
cld
and
jge
es
hlt
sub
inc
lock
in
xchg
and
xchg
sbb
in
sbb
jle
push
faddl
fimull
xchg
insl
loop
xchg
jno
add
jns
stc
xchg
cmc
andb
add
cli
in
jp
jmp
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
scas
lret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
sbb
add
sbb
add
or
add
add
into
add
fcmovne
add
fcmovne
add
lds
add
fcmovne
add
fcmovne
add
lret
int
add
int
add
int
add
lahf
std
pop
fwait
int
add
int
add
int
add
std
add
std
xchg
int
add
add
dec
int
add
add
add
int
add
add
adc
jb
add
jb
add
jb
add
shll
aad
xor
dec
jb
add
jb
add
jb
add
jae
add
jae
add
jb
add
xor
add
gs
add
jb
add
jb
add
jb
add
lret
add
add
lret
call
add
lret
out
mov
out
mov
call
add
dec
call
pop
cmpsb
fistl
sahf
rcll
mov
out
mov
call
push
add
mov
fsts
mov
dec
push
or
mov
mov
fsts
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
lret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
pop
lret
dec
lret
dec
lret
sbb
add
sbb
add
inc
add
jo
add
ret
add
jo
add
mov
add
ret
add
mov
inc
add
mov
inc
add
outsl
call
mov
inc
add
mov
incl
inc
add
ret
inc
add
mov
add
pop
ret
inc
add
sbb
add
sub
inc
mov
cmc
add
in
mov
adc
mov
in
mov
adc
and
mov
adc
and
inc
mov
in
mov
adc
mov
in
mov
adc
test
add
test
add
lret
mov
adc
add
push
add
add
jns
add
lret
add
mov
negl
icebp
lret
hlt
adc
lret
in
mov
xlat
sbb
lret
in
lret
nop
adc
lret
pop
out
lret
inc
adc
lret
or
mov
xor
lret
or
mov
and
lret
or
mov
adc
lret
lret
adc
lret
int3
adc
lret
int
mov
xlat
sbb
jno
into
adc
lret
psrad
lret
add
mov
mov
icebp
lret
adc
mov
mov
add
add
push
int3
add
rorl
les
add
push
int3
add
adc
add
adc
inc
rorl
sbb
arpl
xor
arpl
and
shll
adc
push
add
shll
inc
rorl
xor
lret
add
lahf
push
add
mov
lret
add
mov
lret
add
lahf
push
add
mov
add
pop
mov
add
mov
add
pop
mov
add
dec
mov
add
pop
mov
add
add
mov
add
jb
inc
add
add
ret
add
add
sarb
add
ret
add
insb
add
jb
inc
add
insb
add
cmpb
add
imul
ret
add
insl
add
jb
inc
add
sbb
inc
mov
loop
mov
adc
lods
loop
mov
adc
mov
loop
mov
adc
cmpsl
loop
mov
adc
cwtl
loop
mov
adc
test
adc
and
add
and
add
inc
loopne
mov
cmovae
mov
loopne
mov
adc
pop
loopne
mov
cmovae
stos
cmovae
mov
aas
loop
mov
rclb
lret
xor
mov
mov
icebp
lret
and
mov
mov
loop
lret
nop
adc
lret
inc
loop
lret
rclb
lret
xor
mov
mov
icebp
lret
and
adc
push
loop
lret
nop
adc
loope
lret
inc
adc
enter
xor
jno
leave
loope
lret
and
jno
lret
lret
adc
jno
mov
mov
inc
adc
jno
mov
mov
xor
jno
loope
lret
and
icebp
lret
add
ret
push
mov
add
movsl
or
inc
mov
add
mov
add
dec
int3
add
dec
int3
add
movsl
or
add
int3
add
dec
int3
add
or
add
sbb
aas
movsl
or
fadds
cld
lret
ljmp
movsl
or
mov
lds
add
lds
add
movsl
or
pushf
iret
lret
add
movsl
or
add
mov
add
inc
mov
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
dec
mov
add
add
mov
add
push
mov
add
add
inc
mov
add
mov
add
mov
add
mov
add
push
add
mov
add
push
add
inc
add
fwait
push
inc
mov
lock
lock
in
lss
in
lss
adc
add
sub
mov
in
lss
adc
mov
in
lss
in
lss
adc
mov
in
lss
adc
mov
in
lss
adc
mov
out
mov
adc
mov
out
mov
adc
add
add
add
add
lret
jnp
mov
inc
adc
mov
xor
add
lret
pop
out
lret
adc
mov
rclb
jo
mov
mov
icebp
lret
popa
in
lret
mov
in
lret
nop
adc
lret
and
lret
rclb
je
mov
mov
icebp
lret
gs
lret
mov
in
lret
nop
adc
lret
xchg
or
lret
mov
std
pop
xor
lret
mov
in
pop
and
jno
add
mov
lret
sahf
or
dec
xlat
lret
sahf
or
dec
ror
fld
push
add
lret
add
ret
push
add
mov
pop
mov
push
add
rorl
adcb
nop
rorl
push
inc
int3
mov
push
int3
add
adc
add
add
int3
add
adc
add
push
add
mov
insl
add
xchg
mov
add
ret
add
add
jb
inc
add
add
cmpb
add
mov
add
ret
add
add
mov
inc
add
mov
inc
add
pop
add
adc
add
add
inc
add
insb
add
jb
inc
add
insb
add
add
add
push
mov
add
inc
mov
add
jb
inc
add
fwait
adc
cmpsb
filds
mov
adc
movsl
filds
mov
adc
test
add
cmpsl
repnz
test
add
test
adc
mov
jecxz
test
pushl
adc
sbb
jmp
adc
sub
adc
push
jecxz
inc
mov
inc
mov
jecxz
xor
and
jmp
xor
call
lret
aaa
adc
lret
cmp
mov
xor
jno
sbb
mov
and
jno
sbb
mov
adc
jno
cmp
add
lret
cmp
mov
xor
icebp
lret
sbb
adc
lret
push
loop
lret
adc
icebp
lret
mov
adc
lret
mov
mov
mov
icebp
lret
mov
adc
lret
xchg
loope
lret
nop
adc
lret
ret
loope
lret
rclb
lret
mov
mov
mov
jno
movsl
loope
lret
mov
xchg
adc
add
adc
add
mov
lret
add
ret
dec
ror
add
ret
dec
ror
add
mov
lret
mov
lret
ret
setae
add
ret
push
xchg
int3
add
mov
int3
add
test
add
mov
add
dec
int3
add
dec
int3
add
dec
int3
add
inc
or
test
dec
int3
add
cmp
pop
inc
add
add
and
add
sti
push
inc
add
add
mov
insl
add
xchg
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
pop
inc
add
add
add
pop
inc
add
add
adc
add
jo
add
pop
inc
add
jo
add
inc
add
sbb
inc
mov
in
mov
testl
je
inc
mov
add
mov
add
mov
add
mov
out
in
add
mov
out
aad
add
mov
out
lds
add
arpl
add
movsl
arpl
add
arpl
add
arpl
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
call
add
lret
mov
call
add
lret
mov
call
add
iret
in
scas
iret
jmp
add
iret
jmp
mov
in
scas
iret
jmp
mov
in
scas
iret
jmp
mov
in
scas
iret
jmp
mov
in
scas
iret
jmp
mov
in
scas
iret
jmp
mov
in
scas
iret
out
mov
out
mov
out
mov
out
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
lret
add
mov
add
mov
add
mov
add
xlat
lret
fimuls
add
xlat
lret
fimuls
add
xlat
lret
mov
lret
mov
push
xor
push
and
push
adc
add
xchg
rolb
add
bound
add
pop
inc
add
push
insl
add
and
add
add
jb
inc
add
insl
jmp
inc
add
je
call
inc
add
pop
inc
add
pushl
insb
add
mov
insb
add
xchg
pop
inc
add
insb
add
mov
insb
add
jb
inc
add
pop
inc
add
call
pop
inc
add
incl
mov
push
pushl
inc
add
sbb
inc
mov
loopne
mov
repz
mov
loopne
mov
repz
mov
loop
mov
repz
mov
loopne
and
addr16
adc
jp
incl
leave
repz
or
inc
mov
loop
mov
repnz
mov
loop
mov
repnz
mov
loop
mov
repnz
add
or
inc
mov
loopne
movsl
pushf
repnz
mov
fcos
xchg
lods
repnz
mov
cmc
incl
lret
push
repz
shl
lret
jmp
mov
mov
lock
adc
mov
mov
loop
lret
nop
icebp
lock
shl
mov
shl
lret
ret
loope
push
mov
jo
aam
adc
lret
push
pushf
clc
jo
push
repz
add
add
push
inc
icebp
jo
pop
loop
lret
xor
jo
clc
loope
lret
and
jo
stc
loope
lret
adc
jo
mov
inc
icebp
lock
fndisi(8087
movsl
push
xor
lock
mov
icebp
lock
add
jp
add
adcl
adc
add
push
lret
add
push
lret
add
push
lret
add
add
or
mov
or
mov
add
popf
add
push
incb
or
test
loop
add
ret
stos
rorb
ret
stos
rorb
mov
dec
xor
pop
call
pop
inc
add
jmp
pop
pushl
inc
add
xchg
pop
jmp
push
inc
add
push
inc
add
push
inc
add
push
inc
add
pop
jmp
inc
add
pop
call
inc
add
pop
jmp
push
inc
add
pushl
inc
add
pop
jmp
pop
call
pop
jmp
push
push
push
inc
add
popf
fwait
cmc
inc
mov
cmc
decl
cs
jge
cmc
inc
mov
repz
testl
sbb
inc
mov
repz
testl
cmp
inc
mov
hlt
ljmp
cwtl
repz
cmpsl
repz
mov
std
cmp
inc
mov
cmc
in
or
inc
mov
cmc
fstpl
add
add
stos
testb
in
mov
testb
mov
mov
inc
div
lret
mov
popf
dec
sbb
lock
mov
lea
out
lock
hlt
jge
sahf
icebp
lock
dec
rep
dec
inc
repnz
aas
iret
pop
dec
mov
lock
push
ret
mov
out
dec
xchg
cmc
lock
adc
mov
shl
lret
add
sbb
lret
adc
add
lret
add
cmc
jo
repnz
dec
inc
cmc
jo
xlat
in
lret
jmp
in
lret
jmp
mov
les
add
xchg
or
popf
xchg
mov
add
add
xchg
or
jg
mov
add
mov
add
mov
add
mov
add
add
xor
jmp
or
and
add
adc
add
add
add
mov
add
pop
mov
add
xlat
mov
add
lret
ljmp
fimuls
add
pop
mov
add
push
inc
add
jmp
and
add
aas
inc
add
xor
add
aas
inc
add
xor
add
aas
inc
add
or
aas
inc
add
sub
inc
add
sub
inc
add
sub
inc
add
sub
inc
add
ds
add
aas
inc
add
aas
inc
add
aas
inc
add
add
inc
add
sti
icebp
inc
mov
repz
jmp
inc
mov
repz
mov
icebp
inc
mov
repz
enter
sti
icebp
inc
mov
repz
stos
repz
icebp
inc
mov
hlt
jmp
repz
mov
hlt
call
repz
mov
hlt
incl
repz
mov
scas
jmp
dec
cmc
jmp
shl
adc
scas
hlt
incl
mov
repz
add
dec
inc
bnd
xchg
aad
xor
jo
mov
bnd
mov
mov
adc
lock
dec
shlb
lret
dec
hlt
xchg
dec
xor
lock
dec
hlt
test
repnz
dec
hlt
jne
adc
lock
mov
gs
shl
lret
jg
push
dec
mov
lock
nop
iret
inc
dec
mov
repz
lret
push
repz
add
add
lret
inc
repz
lret
push
repz
lret
add
dec
nop
jecxz
add
jecxz
add
ret
lea
js
dec
and
lea
jnp
dec
adc
dec
incb
lea
pop
nop
dec
xor
dec
and
dec
adc
add
add
add
inc
lea
xorb
inc
lea
jae
dec
nop
and
inc
and
mov
lea
add
call
inc
add
cmp
or
pushl
inc
add
cmp
lcall
add
cmp
fdivrs
push
cmp
add
sub
add
cmp
sub
add
cmp
lds
add
ret
add
add
aas
inc
add
adc
incl
aas
inc
add
inc
call
aas
inc
add
pop
decb
inc
aas
inc
add
decb
repnz
add
jnp
inc
mov
out
lods
imul
mov
hlt
mov
std
repz
add
add
mov
cmc
inc
mov
out
mov
cmc
inc
mov
out
mov
cmc
inc
mov
out
mov
cmc
inc
mov
out
sti
cmc
inc
mov
out
jge
cmc
inc
mov
repz
clc
inc
mov
cmc
lcall
testl
jnp
inc
mov
in
mov
testl
pop
testl
lret
shl
lret
mov
mov
mov
add
movsb
in
lret
mov
in
lret
nop
divb
inc
in
lret
inc
divb
inc
in
mov
divb
dec
in
mov
divb
dec
in
mov
div
lret
or
lods
lret
jmp
in
inc
xor
lock
or
jge
and
lock
or
div
lret
into
out
inc
shl
lret
mov
cmc
lock
rcl
add
lret
add
imul
pop
mov
xchg
adc
add
sbb
add
decl
mov
loope
nop
fisttps
incb
mov
pop
roll
mov
cmp
inc
fnstcw
inc
sbb
mov
mov
sbb
jg
add
addb
jg
add
mov
add
lret
add
inc
inc
mov
mov
add
call
aas
inc
add
incl
inc
add
push
ds
add
cmp
incl
inc
add
cmp
call
inc
add
add
inc
aas
inc
add
add
add
movl
add
movl
incl
push
iret
add
lcall
add
lcall
pop
decl
mov
mov
add
movsb
movsl
das
xchg
mov
jb
pop
inc
test
test
jno
scas
cltd
fimull
cmp
ret
dec
lds
push
pop
popa
into
mov
iret
pop
lds
iret
pop
mov
push
test
stc
lods
add
add
add
jle
cmp
add
cmp
fnstsw
ljmp
mov
push
cmpsl
push
adc
xchg
call
jae
incb
cmpsl
leave
loope
pop
mov
mov
mov
les
enter
mov
and
int
mov
pop
or
mov
pusha
jmp
cmp
xchg
mov
lea
dec
sub
mov
or
cmp
pop
arpl
pop
inc
dec
imul
lods
xchg
in
sbb
test
adc
sbb
leave
loopne
ret
pop
testb
sahf
lea
insb
cltd
mov
xchg
inc
add
adcb
aam
out
scas
xchg
stc
orb
or
sub
fimull
aad
sbb
sbb
mov
pushf
int3
popa
in
push
lret
mov
leave
fildll
cmc
fnstenv
cmp
jg
movl
jnp
dec
add
bound
pusha
pop
idivb
pop
jmp
imul
fwait
ja
lret
popa
int
add
and
or
add
dec
clc
popa
push
inc
sbb
sub
js
mov
add
scas
daa
outsl
insl
xchg
or
ret
je
out
sbb
mov
mov
pop
push
dec
jo
fmul
push
lock
jge,pt
cmp
sbb
fs
pop
imul
repz
mov
fisttpl
fwait
test
fld
outsl
push
xor
xchg
xchg
dec
fcoms
cmp
adc
cmp
fmul
sti
mov
sbb
lods
loop
mov
lcall
lcall
mov
daa
sbb
lret
mov
cwtl
lret
fwait
jmp
int3
stos
fstpt
int3
dec
mov
nop
push
jo
aad
jg
pop
gs
jae
jns
pop
cmpsl
outsb
or
int3
cmp
js
pop
mov
int3
imul
jnp
cmc
out
fsubrs
mov
lret
loope
or
xor
cmp
repz
cld
fcmovnbe
xchg
cld
ret
aam
cld
xor
xchg
push
out
pop
fmull
cli
rorb
add
add
cmpsb
xchg
and
lods
nop
push
cld
adc
cld
imul
sti
mov
loope
mov
dec
shll
das
xchg
insb
cwtl
aam
ljmp
hlt
loopne
test
jmp
stc
mov
aad
stc
lret
aad
stc
jae
inc
cli
pop
aad
insl
add
stos
js
push
mov
jnp
mov
popf
test
shlb
lea
add
xor
test
xor
addr16
movsb
cmp
leave
cmpsb
xor
dec
lods
cli
mov
clc
mov
lock
leave
decl
xor
fildll
xor
xor
gs
push
ja
jg
adc
xchg
xor
add
xor
in
xor
xor
pop
sbb
xor
sbb
sub
mov
fsubl
mov
out
out
data16
adc
xor
xchg
xor
testl
jno
push
mov
pop
push
xchg
pop
sub
pop
lahf
add
mov
mov
inc
or
repnz
out
adc
pop
sbb
mov
mov
push
xchg
pxor
pop
out
sti
push
loop
data16
mov
or
popa
xchg
lret
iret
xchg
fcompl
shlb
les
rcl
mov
lret
mov
sub
adc
inc
xchg
imul
push
jge
int
test
int
in
inc
mov
push
cwtl
enter
mov
add
scas
adc
pusha
fldt
add
sbb
and
push
mov
jae
dec
outsb
lret
lcall
jl
je
jne
or
repz
repz
popa
repz
mov
sbb
jns
lcall
std
popa
jo
fldt
nop
lods
mov
leave
mov
cmp
adc
lret
pop
lret
arpl
cmp
pop
leave
dec
cmc
or
cmc
repz
mov
jno
push
xchg
or
out
sub
or
leave
test
mov
add
stc
test
mov
gs
xor
stc
dec
or
adc
orl
cmp
add
cmp
push
lds
daa
test
cmpsl
mov
fnstcw
int3
add
aad
gs
inc
cmp
test
fs
movsl
cli
add
cwtl
mov
fbstp
lds
lcall
mov
cmp
pop
adc
add
adc
xlat
adc
out
scas
sub
sub
lcall
out
popf
insl
push
push
mov
dec
in
repz
mov
and
in
dec
mov
pop
enter
jp
inc
je
popa
outsb
nop
sbb
cmpsl
int3
jns
lret
fwait
dec
add
sub
add
sub
int3
add
popa
mov
add
add
sbb
inc
mov
add
mov
jle
mov
add
mov
jl
mov
add
mov
jl
mov
add
mov
jl
mov
add
mov
addl
pushf
addl
test
add
sahf
add
mov
jnp
mov
add
mov
jge
mov
add
inc
mov
add
add
mov
lea
mov
add
mov
add
lret
pop
add
lret
lcall
lret
lcall
lret
int3
test
ds
lret
mov
jo
lahf
add
lret
xchg
nop
add
lret
jne
lock
addl
lret
jb
mov
lods
xchg
lret
arpl
lret
popa
xchg
lret
push
add
lret
and
add
lret
jp
lret
add
lret
addl
lret
mov
add
lret
dec
add
lret
cmp
push
dec
xchg
cmpsb
jb,pt
cmpsb
dec
push
xchg
mov
add
scas
lret
add
ror
add
mov
add
mov
jecxz
mov
decl
mov
or
mov
inc
call
mov
outsl
add
mov
sbb
add
add
les
add
out
add
testl
add
std
mov
lcall
add
stos
add
movsb
add
lret
add
test
xor
sbb
xor
add
leave
add
enter
movsl
iret
jno
mov
insb
add
iret
outsb
add
scas
iret
insl
add
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
iret
ja
fmul
dec
add
sahf
add
mov
add
mov
add
add
in
dec
pop
outsl
out
add
icebp
add
mov
add
incb
mov
add
rolb
mov
add
mov
add
mov
add
mov
add
lret
add
mov
push
inc
mov
std
inc
mov
std
inc
mov
std
inc
mov
push
inc
mov
pusha
inc
mov
pusha
inc
mov
popa
inc
mov
pusha
inc
mov
pusha
inc
mov
pusha
inc
add
lret
cmp
jmp
xor
loope
xor
mov
sbb
jmp
add
lret
dec
adc
jg
outsb
lret
inc
fsubrl
lret
lock
jb
and
xchg
lret
xchg
stos
jb
shrb
jb
ret
lret
xlat
fucomi
lret
xchg
in
sbb
repnz
xchg
add
lret
mov
mov
add
lret
out
add
lret
jecxz
mov
faddl
mov
ja
repnz
inc
add
outsl
mov
xor
add
mov
add
mov
add
mov
and
scas
lret
add
mov
add
mov
add
scas
mov
add
scas
addl
or
lret
add
add
mov
add
xchg
mov
lcall
add
mov
jp
mov
mov
icebp
add
mov
add
add
addr16
mov
cs
mov
addr16
mov
jb
xchg
addr16
mov
je
mov
mov
add
add
test
imul
mov
inc
push
mov
jo
cmpsb
jno
jl
arpl
lods
gs
add
inc
test
jo
test
gs
sahf
popa
outsl
daa
test
jp
mov
add
mov
imul
je
aas
arpl
pop
insb
arpl
inc
addr16
and
add
mov
jmp
popa
lea
outsl
popa
divb
xchg
xchg
mov
in
xchg
cld
cli
sub
scas
ficomps
add
aas
mov
loope
mov
icebp
inc
mov
add
mov
testb
testl
pushf
lock
mov
lock
mov
lock
mov
pop
inc
mov
aam
mov
or
fldt
lret
imul
add
lret
filds
mov
lock
lret
loop
mov
fildl
mov
hlt
add
lret
jmp
mov
in
mov
in
add
lret
mov
mov
jb
inc
fsubl
lret
adc
and
lret
sub
jo
insb
adc
jo
jo
stos
inc
decb
scas
inc
push
int3
lahf
inc
add
xchg
add
xchg
add
mov
add
clc
jge
movsb
in
xchg
add
jmp
add
mov
add
mov
add
mov
add
lret
add
xchg
inc
jmp
fs
daa
addr16
jmp
jl
push
cmp
inc
and
jae
push
sub
add
jg
sub
add
cmc
lret
add
xchg
inc
add
nop
add
pop
addl
mov
add
mov
push
leave
add
push
in
inc
or
add
adc
nop
add
sbb
inc
into
movl
push
leave
xchg
inc
push
ret
add
stos
mov
movl
inc
sahf
movl
outsb
scas
cmpsb
je
aam
add
lret
mov
js
in
outsl
mov
arpl
mov
add
js
outsb
je
jmp
outsb
pop
outsb
adc
jbe
popa
or
pusha
add
pop
outsb
rcll
imul
dec
jb
loopne
pop
gs
push
aam
pop
add
add
add
outsl
arpl
pop
add
jg
add
add
aas
mov
fdivrl
mov
sarb
mov
sarl
mov
xlat
aas
mov
inc
inc
mov
inc
inc
mov
loopne
mov
inc
inc
mov
inc
inc
mov
inc
inc
mov
add
mov
out
mov
or
add
int3
out
mov
enter
mov
mov
leave
add
add
add
mov
imul
xchg
data16
cwtl
jne
lahf
popf
jo
movsl
stos
add
lret
mov
ror
add
lret
addl
lret
mov
add
lret
cmp
lret
pop
add
lret
cmp
add
lret
xor
lret
inc
add
lret
out
mov
inc
add
lret
adc
lret
add
lret
push
add
lret
adc
lret
add
imul
pop
scas
mov
incb
mov
add
fildl
adc
scas
fildl
adc
mov
add
loope
add
mov
add
jecxz
je
mov
and
movsl
out
and
popf
jmp
inc
movsl
jb
inc
xor
dec
sub
jg
push
xor
shr
and
rolb
pop
jne
push
scas
arpl
jge
add
imul
fwait
outsl
add
int
add
int
add
jmp
dec
dec
dec
dec
push
pop
jnp
push
inc
xchg
push
pop
push
sbbl
mov
fs
push
mov
outsb
cmp
outsl
jb
mov
ja
imul
xor
fdivl
aaa
jae
sub
dec
int
add
arpl
out
popa
add
imul
add
add
arpl
je
arpl
or
add
in
int3
arpl
xchg
iret
arpl
lret
int3
add
mov
add
mov
add
mov
add
mov
add
mov
outsl
inc
mov
js
mov
jp
mov
lret
aas
mov
lret
aas
mov
fdivrl
mov
jle
mov
jle
mov
jge
mov
add
jns
push
xchg
xor
add
mov
inc
push
out
add
mov
jo
mov
jo
mov
outsl
add
xchg
imul
mov
add
jp
add
mov
add
lret
sbb
mov
jo
lret
add
add
jmp
or
shr
add
leave
jmp
test
repz
jmp
add
lret
cmpsb
push
add
out
mov
dec
jle
dec
ss
inc
jns
inc
daa
pop
lods
or
add
xor
ret
sbb
out
adc
sub
lock
imul
loope
out
cmp
mov
pop
out
mov
repnz
mov
add
add
jge
pop
fstps
cmp
jbe
pop
pushf
add
test
ret
je
cli
fdivrs
jg
iret
es
lret
add
pop
fisubrs
addr16
add
cmpsl
lret
add
mov
add
and
push
or
outsl
add
dec
scas
lret
add
push
and
lret
add
mov
lret
add
add
jle
push
ds
orl
or
mov
enter
lea
jge
add
sarl
add
fwait
leave
add
pop
xor
sti
add
leave
add
imul
add
loop
cmpsl
mov
dec
leave
add
mov
add
add
rorl
or
add
add
dec
mov
pop
pop
or
push
adc
iret
add
jb
jno
mov
jb
push
in
push
jnp
fs
push
mov
adc
push
or
jl
testl
cmp
add
mov
popf
cmpsl
dec
js
mov
cmp
add
adc
in
inc
aas
dec
add
pop
je
aad
add
mov
add
mov
aaa
sub
sbb
mov
adc
mov
idiv
and
ds
pop
or
pop
pushf
lods
out
mov
mov
cmp
mov
outsl
mov
inc
addr16
cmp
cmp
jns
cwtl
adc
jnp
shlb
movsl
mov
jno
les
add
in
call
mov
sbb
add
jo
inc
stc
xchg
add
or
mov
xchg
in
shrb
test
jle
ljmp
jl
xchg
mov
jno
add
xchg
dec
inc
bound
inc
data16
jo
jb
mov
add
xchg
fbstp
int3
add
fdivl
test
adc
mov
add
jb
dec
pop
addr16
or
mov
in
mov
dec
add
add
pop
dec
or
pop
jnp
aad
gs
loope
push
and
cmc
ret
sbb
mov
roll
lahf
lds
icebp
mov
add
pop
adc
cmp
aam
scas
gs
mov
into
add
ret
xor
testl
in
lock
sbb
incb
repz
push
rolb
jl
push
xchg
nop
dec
inc
jae
push
pop
mov
xchg
jne
pusha
dec
xchg
test
adcb
inc
lea
cld
push
xchg
xchg
add
cs
clc
int
out
loope
out
out
or
in
or
stc
or
ret
rcr
sub
lcall
mov
cmc
jecxz
push
and
jecxz
in
cli
xor
add
ror
call
outsb
call
pushl
add
mov
mov
lahf
and
mov
adc
jmp
repnz
mov
fst
test
mov
ror
cmpsb
int3
ficompl
pop
lock
popa
ljmp
insl
data16
pop
pop
inc
xlat
or
out
mov
xchg
shrl
cmpsl
add
sbb
adc
adc
or
and
rorl
leave
mov
and
fcomps
imul
cmc
xor
scas
leave
stc
cmp
add
lret
inc
lret
roll
pop
subl
add
dec
outsb
js
dec
imul
cmp
stos
push
outsb
xchg
mov
push
mov
data16
sbb
imul
jo
inc
mov
dec
xchg
sbb
pop
pop
in
or
lods
lret
add
js
pop
sub
mov
add
add
dec
and
mov
mov
sub
sub
mov
add
gs
cmp
subl
adc
lret
add
ret
and
jge
jmp
or
add
add
add
jmp
outsb
mov
add
outsb
mov
pop
repz
push
mov
pop
out
sub
cmp
add
aaa
cmp
lret
push
ja
add
mov
mov
xchg
outsl
out
add
loope
arpl
leave
add
inc
or
rcrl
lcall
adc
leave
sti
into
dec
cli
xchg
dec
pop
rcr
sbb
in
xor
mov
mov
hlt
idivl
movsl
test
add
ret
jmp
dec
add
mov
call
add
cmc
jb
rorb
daa
rorl
pop
arpl
popa
bound
imul
lret
mov
daa
pop
or
mov
je
test
lods
mov
sbb
add
out
sbb
loopne
pop
mov
sbb
adc
pop
das
clc
pop
ret
int3
add
mov
popf
mov
insb
mov
jge
sub
bound
daa
add
lret
add
cwtl
lret
mov
shrb
hlt
daa
in
call
int3
pop
cmc
lret
mov
je
mov
imul
jo
jb
out
pop
imul
cmp
insb
dec
stos
inc
mov
add
add
aaa
push
lahf
mov
or
pop
aad
cld
sbb
and
jle
sbb
cmc
in
sahf
add
loopne
add
dec
push
hlt
pop
xchg
and
xchg
jne
mov
add
adc
cmc
test
cmpsl
jmp
pop
push
scas
inc
sbb
sahf
arpl
stos
push
push
pop
add
nop
and
movsb
fidivrs
sbb
fsubrs
popa
aam
cmp
mov
add
lea
movsb
xchg
sbb
in
lret
add
lret
add
mov
add
add
sub
pop
mov
and
mov
and
insb
mov
lods
push
push
dec
mov
push
inc
and
jge
add
sbb
dec
roll
push
adc
sub
xor
jns
inc
movsl
inc
jg
stos
jbe
nop
scas
and
pop
bound
and
mov
xchg
dec
mov
jnp
sbb
xchg
mov
stc
push
hlt
aam
jge
xlat
test
test
mov
xchg
call
mov
add
out
jae
lods
mov
or
rcr
js,pn
mov
addb
jbe
xchg
lcall
dec
mov
lret
inc
pop
icebp
call
adc
lods
mov
adc
loopne
inc
scas
xorb
ljmp
adc
lret
mov
aas
rol
jmp
ret
jecxz
test
fistpl
test
add
fimull
scas
aam
or
lds
iret
aad
popa
std
jp
sbb
shl
adc
fmuls
mov
add
lods
mov
or
test
aam
movsb
out
aam
mov
inc
mov
sub
jbe
cmpsl
cld
mov
xchg
imul
aam
mov
daa
mov
repnz
push
divl
int
cmp
mov
add
mov
mov
ret
insb
add
xchg
pop
pop
movsb
jne
es
lcall
loopne
mov
stc
xchg
push
dec
xchg
push
push
cmpl
cmp
cmp
mov
add
mov
daa
inc
out
and
test
sub
cmpsl
rorb
fcomps
lock
add
sbb
mov
add
mov
pop
xor
lret
add
jl
daa
lahf
mov
push
push
pop
mov
fistpll
movsb
roll
mov
pop
inc
shll
jnp
jae
jo
mov
mov
fcmovnu
mov
or
shlb
iret
add
add
scas
imul
test
fwait
jb
adc
jl
inc
jge
xor
test
jl
dec
pop
pushf
js
inc
sub
add
jne
jp
pop
je
mov
pop
jb
and
add
ret
andl
pop
sub
add
sub
push
pop
mov
sub
add
add
cmc
and
or
testb
repnz
mov
dec
ss
add
mov
je
and
add
mov
dec
dec
out
and
add
mov
jle
adc
hlt
outsl
add
lret
sbb
xchg
fimuls
mov
rorl
and
push
call
int
jno
inc
das
mov
xchg
mov
mov
outsb
fdivrs
xor
xorb
jmp
sub
out
sub
jecxz
adc
lret
fildl
ret
leave
fisttpll
stos
mov
int3
add
into
add
bound
pop
and
xor
sub
push
add
pop
mov
mov
add
add
neg
aam
loop
int3
or
scas
imul
mov
mov
and
mov
add
ret
add
fldpi
add
lock
sub
mov
add
jge
and
jg
jmp
mov
lret
add
add
or
mov
jmp
ret
mov
or
lret
fldl
sbb
add
jbe
aaa
mov
or
mov
mov
add
fsubrl
loopne
cmp
in
stos
cmc
sti
lods
cmp
push
fsubp
or
out
std
cli
and
sub
lret
jge
in
and
loope
and
mov
nop
mov
cmp
pushf
sahf
or
pop
into
fldl
lret
push
ret
int
add
aad
or
fnstsw
into
add
mov
adc
sbb
dec
lret
add
and
cmp
adc
inc
lret
or
cwtl
dec
pop
imul
pop
pusha
outsl
jge
push
mov
daa
push
aam
push
pusha
and
add
jne
test
push
jae
mov
add
mov
pop
and
and
add
addl
add
jl
out
mov
in
dec
xchg
scas
cld
mov
add
lret
lcall
mov
in
int3
in
das
mov
cs
out
mov
leave
and
in
adc
enter
add
mov
lock
gs
sahf
mov
cli
stos
jae
std
nop
mov
cmp
dec
and
je
movsb
jns
dec
mov
xchg
adc
jl
push
cmp
inc
adc
stos
push
cmp
sbb
xchg
dec
sbb
adcb
mov
xor
adcb
pop
xchg
sbb
stos
pop
mov
add
pushf
xor
cltd
mov
and
cld
lret
cld
mov
add
dec
cmpsl
pop
pop
dec
nop
sub
mov
add
ljmp
xchg
testb
mov
imul
mov
or
jmp
sub
jmp
mov
lret
add
lret
add
pop
lods
pusha
roll
push
paddd
xchg
push
lret
fstpl
or
ret
add
inc
jo
outsl
sbb
add
int
aad
fldz
adc
inc
xchg
xchg
cwtl
fbstp
pop
xchg
andb
into
and
cld
es
std
imul
add
xchg
xchg
fsts
cltd
jle
add
fucom
cmp
rcrl
mov
add
add
pop
push
stos
aad
add
outsl
jbe
jg
add
outsb
outsb
insb
jno
pop
popa
arpl
stc
push
add
lods
fdiv
dec
and
add
dec
cmp
push
inc
inc
andl
mov
movsl
mov
mov
mov
popa
cmp
xlat
dec
inc
outsb
aam
add
stos
jbe
and
add
add
in
inc
pop
cmp
dec
jae
faddl
mov
insl
jae
shll
lret
arpl
mov
add
push
aam
gs
int3
das
mov
xor
mov
add
lahf
adc
popf
and
xchg
pusha
push
pop
add
mov
cld
movsl
loope
cli
test
shr
add
lret
adc
mov
cld
repz
adcl
ss
dec
push
test
push
push
call
fistps
adc
fdivrl
add
aad
sbb
jae
mov
add
aaa
addb
das
mov
add
jg
cltd
insb
mov
outsb
xchg
lds
add
push
pop
pushf
mov
lret
add
mov
lods
or
mov
add
les
add
lods
ljmp
aam
and
ror
add
stos
inc
or
xchg
push
dec
cmpsl
dec
add
leave
push
pop
mov
add
rcll
add
add
lea
jb
push
and
add
adc
pop
pop
push
pop
and
dec
dec
out
into
add
sti
xor
lods
sub
and
cmp
loopne
and
iret
add
sub
and
scas
stos
sub
mov
fisubrs
shr
xor
scas
stos
xor
fucom
es
in
and
add
add
jno
add
int
cmp
int
jae
add
cld
or
call
hlt
add
mov
inc
push
lock
inc
mov
inc
inc
imulb
push
repnz
cmc
inc
loop
ss
jno
add
mov
repz
or
push
cmpsl
sti
sbb
repz
pop
lods
hlt
add
ret
adc
jecxz
jb
mov
stc
movsbl
negl
das
adc
es
mov
testb
mov
aas
add
aad
pop
push
mov
add
lret
movsl
xlat
mov
and
inc
adc
pushl
push
mov
adc
push
jmp
xor
and
lret
roll
cmpsb
movsb
dec
cltd
lret
adc
pop
sbb
adc
or
xor
cld
push
sub
add
add
imul
repnz
xor
lret
jne
pop
jns
push
dec
lret
in
repz
lds
mov
es
int3
fyl2xp1
cmp
shll
out
sbb
cli
xchg
dec
sub
mov
and
ficomps
or
test
pop
xchg
pop
jb
xchg
xor
and
outsl
imul
and
or
and
inc
pop
pop
stos
cmp
dec
clc
mov
mov
add
lods
scas
xor
cwtl
mov
sarl
mov
stos
fs
jns
jo
add
mov
scas
xor
mov
xor
sub
ja
add
sbb
add
xor
add
xor
mov
add
lret
add
lret
push
push
xchg
inc
inc
adc
outsb
dec
inc
or
inc
add
dec
sbbl
jne
xchg
subb
mov
lret
add
orl
in
mov
test
pop
lea
sub
cmpsl
cmp
pop
fimull
rolb
add
ja
cmc
enter
jp
scas
lret
mov
sarb
mov
mov
data16
mov
rcll
imul
in
pop
xchg
mov
inc
xchg
out
hlt
add
mov
add
mov
cmp
add
push
inc
jbe
fcomi
add
cmp
push
arpl
dec
add
inc
inc
movl
hlt
es
jbe
inc
jne
and
outsb
xchg
cld
arpl
mov
aaa
add
mov
aad
mov
inc
stc
jecxz
add
jle
push
in
lods
mov
mov
shrb
jp
push
ja
popa
mov
and
dec
push
and
add
ss
pop
loope
or
ss
pop
scas
clc
pop
je
or
cmp
or
aas
xchg
out
cmc
add
and
es
cmpsl
das
inc
sbb
loopne
cmp
ret
add
xor
mov
ds
mov
inc
bound
bound
lea
scas
jae
test
pop
push
xor
adc
repz
adc
ljmp
imul
pushf
and
sub
cltd
ret
pop
adc
mov
or
push
ds
arpl
add
or
or
clc
xchg
add
fxch
add
add
adc
dec
sar
pop
add
test
and
and
lret
movl
cmc
push
repz
cmc
ror
das
pandn
push
adc
out
ss
fimull
xchg
divl
call
in
jmp
call
add
jo
popa
gs
js
pusha
insb
jnp
mov
pop
mov
test
or
add
cmpsb
pop
popf
out
adc
mov
movsl
mov
cltd
outsl
cmpsb
and
mov
je
jp
jne
mov
int
roll
shl
mov
or
ljmp
add
enter
lods
sti
sub
mov
and
pop
rorb
negl
idiv
add
pop
adc
ret
inc
and
or
add
cmc
ljmp
hlt
add
mov
pop
outsb
mov
daa
aaa
inc
adcl
jno
inc
inc
jne
mov
add
mov
sub
mov
in
negl
lret
stc
shl
stc
sbb
add
lock
jmp
in
or
lret
in
add
int
jmp
movsl
out
lret
dec
cmp
je
inc
ljmp
xor
sahf
aaa
sub
fwait
xor
cmp
movsb
sub
aam
rclb
xchg
mov
pop
xchg
mov
add
mov
add
lock
les
fstl
lods
xor
add
mov
push
icebp
stos
fisttps
lock
add
add
shrb
lock
adc
xchg
int3
adc
cmpb
outsb
dec
mov
and
mov
add
loope
pop
sbb
jmp
out
aas
inc
clc
jge
cmp
iret
sbb
les
lahf
lret
add
adc
test
sbb
sbbl
fildll
push
and
sbb
lret
add
test
add
mov
add
sbb
add
sbb
add
or
call
inc
add
push
inc
add
inc
add
xor
add
xor
add
add
sti
inc
add
add
push
xor
add
data16
fldenv
jb
test
add
xlat
mov
bound
cltd
ja
pop
lret
add
jne
add
lret
add
or
dec
add
cmp
add
sub
dec
mov
add
inc
add
inc
add
dec
add
add
dec
add
dec
add
mov
add
adc
dec
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
lret
rolb
lret
les
jmp
les
ror
movb
lret
xchg
add
xchg
lret
mov
mov
out
mov
out
in
dec
mov
cmp
in
stc
es
aad
push
lret
out
mov
les
inc
lret
les
inc
lret
out
mov
aaa
ss
or
jae
or
repz
or
repz
pop
ss
or
repz
pop
ss
stos
repz
es
push
xchg
pop
setae
popa
fnstsw
fidivs
pop
add
addb
iret
insl
fs
rolb
add
frstor
mov
mov
into
jnp
ja
mov
mov
scas
mov
xlat
mov
add
decl
add
ret
mov
jnp
push
add
scas
cmpsb
add
test
add
mov
add
scas
test
add
add
data16
call
outsl
add
fsubl
adc
mov
arpl
xchg
sahf
add
pop
popf
jno
pop
mov
addr16
mov
inc
insb
in
imul
or
negl
and
push
imul
and
xor
je
jmp
add
add
enter
movl
push
cmc
add
and
notb
and
fwait
iret
add
insb
iret
popa
add
lar
push
add
mov
add
mov
add
mov
add
add
add
in
add
cmc
in
mov
and
and
lcall
add
mov
imul
inc
and
mov
mov
mov
cmc
inc
mov
stos
aas
mov
or
data16
inc
mov
lods
aas
mov
lods
aas
mov
lods
aas
mov
push
je
iret
adc
cs
int3
or
adc
pop
mov
decl
jnp
push
xchg
cmp
mov
push
int
or
stos
out
mov
setle
jge
cmpsl
popf
jne
jge
jno
or
jae
or
jae
or
jae
adc
lret
cmp
jno
cli
inc
jno
pop
cmp
mov
jae
lret
lret
lret
lret
lret
lret
xchg
xor
lret
lret
inc
es
mov
and
icebp
lret
sbb
icebp
lret
icebp
add
dec
cld
addr16
sbb
imul
shrb
inc
xchg
mov
jecxz
in
test
adc
clc
mov
pushf
mov
cld
addr16
sbb
imul
mov
push
mov
add
hlt
mov
sti
add
adc
stc
sbb
or
test
push
or
in
mov
adc
clc
mov
cmp
xor
adc
or
pop
mov
fisubrs
add
mov
xor
push
gs
fwait
sub
gs
xchg
arpl
jnp
add
cwtl
sahf
outsb
outsb
outsb
imul
cmp
pop
mov
or
pop
lcall
negl
je
and
aas
addr16
je
add
lcall
cmp
arpl
sub
push
add
insl
add
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
in
add
in
add
in
add
in
add
in
add
xor
mov
out
mov
out
mov
cmp
popf
idivl
dec
test
lcall
mov
daa
pop
sub
sahf
sbb
fldenv
add
sti
push
pop
jg
mov
inc
jg
cld
jmp
lcall
shrl
sti
ret
mov
mov
jmp
sbb
bnd
lods
inc
xchg
jmp
lock
mov
mov
pushf
mov
dec
or
fs
add
mov
push
mov
add
xor
sti
icebp
lret
xchg
cmpsb
dec
stc
mov
add
jnp
and
pushf
push
scas
lcall
adc
stos
cwtl
mov
inc
inc
in
sub
jmp
jmp
fdiv
adc
mov
sahf
mov
fwait
std
mov
cmpsl
mov
insb
icebp
js
jb
idivl
cmpsl
lods
jle
pop
mov
pop
add
addb
xchg
std
add
add
add
std
jbe
or
xor
pop
leave
dec
ret
add
cmp
push
icebp
iret
std
ss
fdivl
fwait
iret
cmpl
mov
pushl
adc
push
push
sarb
sub
mov
or
mov
mov
insb
fmull
pop
enter
iret
add
add
divb
push
mov
mov
push
inc
mov
jbe
jb
mov
out
add
loop
xorl
mull
in
mov
pop
xchg
out
mov
shl
outsb
add
das
and
sub
mov
add
mov
add
mov
shll
inc
mov
cmp
adc
mov
add
xlat
les
mov
rcll
inc
add
lods
out
pop
lret
jb
xor
testl
int
push
sarb
sub
lret
out
cmp
notb
push
faddl
lret
push
push
loope
mov
push
or
ss
mov
scas
dec
repnz
mov
enter
mov
pop
mov
xlat
push
push
ja
nop
ss
inc
fwait
fs
dec
imulb
sub
push
dec
cmp
out
gs
sub
frstor
dec
add
lret
sti
icebp
nop
pop
xor
and
adc
mov
pop
mov
mov
jae
mov
push
jmp
dec
shll
imul
and
out
jae
mov
sahf
push
pop
in
clc
push
adcl
inc
jmp
mov
movb
sbb
shl
inc
jmp
pusha
scas
lock
imul
std
hlt
and
inc
add
inc
mov
je
cmpsl
sub
lds
add
outsb
mov
add
pop
mov
and
pop
iret
int3
add
aaa
push
push
and
lea
call
test
jo
pmulhuw
iret
jecxz
push
adc
sub
fwait
mov
enter
popf
inc
mov
lret
and
inc
inc
mov
push
mov
fucomi
inc
mov
add
add
mov
call
adc
es
jle
test
ljmp
mov
mov
push
lcall
pop
les
mov
add
add
mov
mov
add
add
add
jb
or
mov
push
cld
mov
jae
lock
sub
add
adc
cmp
cmc
je
in
add
int3
sub
mov
out
test
push
add
inc
push
mov
jecxz
fdivs
mov
jb
mov
fwait
out
inc
in
popa
fwait
push
push
neg
cmpsl
add
or
es
jb
movsl
pop
stos
inc
and
lea
lret
add
loopne
fcoml
jb
fmuls
push
repnz
bound
lret
push
add
mov
mov
mov
rcl
in
je
mov
xchg
std
decb
enter
subl
decb
movsb
stc
inc
push
daa
mov
add
lods
dec
leave
push
imul
add
add
arpl
nop
daa
or
out
xlat
mov
jb
insl
stc
loopne
jl
jmp
insl
std
lock
cmp
jne
mov
jecxz
push
add
cmp
sub
lret
sti
stos
add
or
enter
cmp
sub
sbb
arpl
fisubrl
rorl
inc
or
lock
lret
mov
rclb
call
xor
xchg
pop
ret
push
mov
rolb
xchg
roll
xor
push
push
hlt
std
mov
xor
mov
adc
clc
cmp
add
and
or
aam
call
add
jns
mov
addr16
scas
rol
ljmp
push
jmp
imul
clc
loop
test
dec
or
xor
pop
pop
mov
clc
cmp
mov
loopne
sub
out
add
sbb
aam
and
out
or
mov
mov
lret
out
fs
rcr
mov
arpl
sarl
push
loope
in
sub
lret
xchg
add
into
sbb
je
mov
lock
out
arpl
aam
mov
push
sbb
xor
call
push
dec
stos
mov
int3
jne
mov
mov
aas
xchg
mov
cs
mov
insb
rolb
pop
scas
out
outsb
mov
dec
sti
jo
cli
sbb
pop
cmpsl
and
movsl
popa
add
iret
cmpsb
inc
add
mull
aad
mov
dec
incb
push
fnstenv
stos
loop
data16
pop
add
stc
shlb
jb
adc
add
mov
clc
pop
ja
xor
jle
cmp
adc
add
lret
icebp
outsl
xchg
ja
push
mov
addr16
jle
shll
jl
sbb
xchg
inc
jmp
jle
xchg
push
add
ja
jno
fdivrs
push
aam
pop
fs
mov
inc
lcall
add
pop
jbe
xchg
call
or
cmp
lahf
add
add
and
call
cmp
cmp
aad
push
cmp
int3
pop
iret
pop
add
mov
mov
jns
lea
arpl
movsb
ja
jmp
push
inc
mov
std
ljmp
mov
xchg
cwtl
test
or
add
pop
mov
imul
or
repz
dec
jnp
das
sub
or
lea
add
mov
pop
imul
dec
mov
in
mov
add
mov
adc
mov
testl
jp
lds
lret
pushf
call
pop
push
add
mov
test
mov
push
lcall
repz
cs
push
sub
gs
jg
daa
out
cmp
sub
mov
sarl
push
mov
cmc
out
test
test
mov
decl
mov
clc
rcl
pop
add
push
add
mov
pop
jo
scas
adc
js
icebp
pop
test
mov
lret
mov
or
pop
pushl
es
je
ljmp
mov
icebp
subb
jno
iret
fcomps
pop
mov
loopne
rcrl
push
pushf
or
jmp
mov
add
add
jmp
add
divl
xchg
and
push
call
bound
lret
xchg
jbe
shlb
mov
mov
or
mov
test
inc
std
pop
sbb
push
jl
repz
dec
lcall
mov
lods
jns
pop
repnz
ret
imul
mov
inc
add
enter
push
add
adcb
aaa
xor
mov
push
cld
js
pushw
cmp
mov
add
ficomps
cmp
add
dec
cmp
cmc
xchg
mov
jmp
stos
and
fistpll
mov
cmp
scas
fldt
xor
lods
je
cmp
repnz
cli
inc
cmp
shlb
mov
gs
add
test
jle
stos
cmc
lock
jno
mov
jg
daa
testb
mov
inc
and
imul
aam
lret
out
or
pop
loope
jecxz
push
shlb
out
mov
sbb
hlt
sub
add
mov
add
int3
pusha
pop
sub
aaa
cmpsl
mov
hlt
clc
mov
jecxz
aas
xchg
mov
jb
cmp
popl
pop
int
test
addb
xchg
lods
lret
push
lds
pop
jge
pop
jge
push
lods
out
xchg
jne
hlt
jecxz
fcoms
jo
in
pop
add
mov
mov
inc
lds
push
push
lds
mov
mov
lret
cmpsb
shll
cmp
cli
cmpsl
adc
mov
cmp
xor
add
and
and
cmpl
mov
stc
into
test
adcl
push
push
fldenv
cmpsl
and
pop
pop
cmp
and
mov
and
xor
int3
movsb
cmp
cs
decb
test
sub
sbb
pop
add
roll
leave
add
leave
fs
outsl
push
and
dec
and
div
jne
dec
out
add
fists
mov
add
jo
push
aam
int
rcrb
xor
cltd
outsb
fisttpll
jmp
add
push
pop
add
push
jb
mov
fwait
add
adc
pop
cmp
adc
add
lea
add
out
mov
sub
aaa
out
cmp
xchg
test
or
shrb
incl
lret
mov
push
loop
jnp
into
ja
mov
add
mov
mov
roll
or
jmp
movsl
push
push
cmp
xor
add
push
mov
or
repnz
add
inc
cs
into
mov
add
popa
lods
lds
dec
dec
xor
inc
mov
out
jns
pushf
xor
ljmp
fs
xchg
and
ror
imull
xor
push
and
mov
mov
out
out
cli
call
and
pusha
lret
pop
das
add
lret
stos
das
es
push
inc
xor
adc
addl
cltd
lret
mov
add
adc
inc
sti
jecxz
dec
mov
add
int
add
push
add
jb
cmpsl
sbb
std
cmpsl
sbb
xor
xchg
out
pop
push
into
shll
adc
sub
call
add
push
in
or
mov
andl
pop
inc
add
mov
adc
cltd
rolb
inc
mov
add
lret
mov
fwait
and
cwtl
and
cmp
xor
ret
mov
loopne
jne
loopne
ret
jne
mov
adc
mov
loopne
xor
loopne
ret
jb
mov
push
incl
pop
in
adc
cmp
push
aad
incl
pop
aad
push
xor
repz
out
mulb
int
rolb
or
je
cmp
push
sub
pushf
or
lods
inc
cmp
iret
lcall
mov
cmc
movsl
movsl
mov
and
pop
mov
ret
push
mov
adc
xor
aaa
sahf
sub
call
xorl
cli
xor
popf
nop
mov
add
ficoms
cld
imul
add
cmpsb
jno
dec
add
xor
cmp
add
pusha
lahf
inc
sub
jge
fidivrs
jo
mov
pop
lock
pop
dec
sub
lret
jb
xor
jg
cli
push
jecxz
or
lret
jb
xor
pop
in
add
jg
push
or
push
in
add
sub
int3
jbe
add
push
ljmp
pop
add
pop
mov
mov
mov
mov
in
inc
scas
dec
fnstcw
lods
lret
cmp
mov
dec
cmp
adc
idivl
pushl
add
mov
mov
push
and
les
push
xchg
mov
dec
mov
addl
xor
add
inc
dec
pop
dec
dec
stc
push
pushf
les
mov
adc
sbb
in
jp
mov
push
jb
scas
adc
sub
jge
cs
adc
lret
mov
std
aam
roll
push
or
cmp
adcl
add
add
xor
addb
jne
popf
xor
jmp
dec
sbb
xor
nop
pop
pop
pop
jl
in
mov
mov
jne
fmul
lea
out
pop
xor
mov
push
dec
cld
andl
mov
mov
pop
add
clc
jp
mov
or
sbb
add
decl
stc
sbb
call
add
add
add
or
or
sub
cltd
or
add
xchg
ja
jge
loop
add
sub
pop
test
push
mov
mov
fs
jecxz
lea
push
incl
jp
cmc
in
cmpl
sub
cmpsb
out
mov
add
ljmp
sub
jp
push
fwait
ret
mov
or
add
cmp
imul
scas
cmc
pop
jno
cmp
stos
xor
das
mov
mov
fs
iret
movsl
inc
add
inc
xchg
imul
add
loopne
mov
adc
mov
pop
fcoms
pusha
jecxz
cmpsb
flds
inc
daa
cld
dec
lret
rorb
inc
lock
out
fldenv
add
add
fistl
inc
imul
pop
inc
movsb
fistps
leave
out
adc
vandnps
sub
mov
add
scas
and
mov
andb
mov
inc
adc
into
push
dec
sarl
cmp
cmpsb
pop
fldenv
mov
rclb
mov
mov
mov
ret
loope
mov
lret
add
jns
adc
out
xchg
jle
out
icebp
jmp
pop
sti
xchg
int
or
jecxz
pop
adc
mov
cmp
mov
add
jo
adc
inc
sbb
push
inc
or
movl
sbb
mov
inc
cmp
mov
addb
add
add
out
xchg
scas
nop
cmp
test
jge
imul
jmp
mov
inc
or
push
mov
jecxz
jmp
mov
inc
or
and
inc
into
cmp
decl
push
test
ljmp
or
in
jge
into
mov
mov
out
adc
cmc
orl
dec
or
fiaddl
movsl
addr16
cltd
or
mov
jne
mov
test
std
mov
rdtsc
out
decb
inc
add
mov
add
cs
inc
cmp
inc
inc
sub
or
aaa
ljmp
add
add
sub
stc
jae
mov
cmp
xchg
repz
aas
xor
lds
add
lret
lcall
nop
mov
daa
les
ret
mov
filds
out
jnp
mov
push
mov
ljmp
ret
repz
inc
and
xchg
inc
cs
mov
dec
mov
xchg
lea
xlat
add
inc
ss
xor
out
xchg
mov
add
rcrl
cmp
bound
jecxz
shll
jecxz
shll
ret
add
movl
or
bound
shrb
lcall
mov
lret
mov
inc
pop
stc
scas
hlt
mov
sub
icebp
sub
push
push
int3
add
das
leave
mov
add
dec
xchg
jmp
lret
mov
stos
ret
mov
add
dec
icebp
fcompl
and
push
or
dec
xchg
jmp
lods
and
psubusw
or
lret
cmp
add
icebp
incb
fwait
into
jae
sbb
adc
push
pop
je
repnz
add
and
repz
add
add
add
cmp
je
sbb
pop
into
mov
loope
sub
fwait
jo
std
dec
into
call
mov
inc
fisttpl
fdivr
decl
inc
lret
call
fwait
stos
and
sahf
mov
mov
add
mov
dec
or
adc
add
xor
pop
je
mov
inc
flds
push
add
cmpsb
add
mov
fwait
add
or
inc
out
dec
pop
adc
jge
cmp
sub
imul
inc
mov
in
sarb
jle
loope
mov
mov
adc
jne
and
xchg
mov
add
loop
orl
sub
sub
pop
sbb
pop
lea
fninit
add
push
out
outsl
sti
jecxz
mov
jmp
sub
negb
mov
add
mov
daa
cltd
subb
inc
mov
mov
push
scas
shrb
lret
out
scas
dec
fsubr
sahf
push
cmp
push
loop
rolb
xlat
add
popl
sbb
lock
scas
in
sbb
shl
add
mov
insb
lcall
add
push
add
hlt
movsb
inc
cmc
xor
jmp
cmpsb
inc
in
mov
add
sti
iret
std
jmp
jbe
test
mov
fs
mov
or
movsb
dec
lods
int3
or
sub
cmpsl
cmp
stc
aad
call
add
jnp
outsb
mov
ss
std
jmp
jno
subl
jg
add
leave
add
xchg
or
mov
addr16
pop
xchg
and
repnz
lret
dec
shll
call
inc
or
xchg
fucomi
add
cmp
add
push
jg
push
mov
add
fwait
movsb
inc
lea
daa
out
pop
mov
cmc
add
andb
add
fwait
xor
into
mov
jl
or
mov
fwait
ret
pop
mov
call
adcl
iret
mov
std
cld
or
pop
inc
and
or
in
dec
or
cli
lods
add
sub
pcmpeqw
aas
mov
push
les
mov
push
xor
add
add
xlat
das
mov
cld
movsl
out
out
shlb
mov
pop
in
pop
xor
adc
loop
or
pushf
pushl
add
insl
loopne
xor
loop
divl
cmpsl
add
inc
lock
ret
jno
xor
mov
out
mov
sub
mov
aaa
lea
xor
add
int3
out
add
cmp
add
inc
jle
aad
out
cmpsb
inc
cli
inc
mov
data16
int3
out
out
insl
xchg
movb
mov
push
mov
mov
lods
inc
mov
cld
pop
mov
cmp
add
jnp
out
xor
ds
jo
int3
out
addr16
pop
ds
stos
fdivl
jecxz
scas
scas
add
add
lret
jmp
adc
sub
mov
pop
lret
inc
push
hlt
movl
push
lret
std
aad
mov
inc
jmp
loope
icebp
notl
insb
inc
aas
adc
ret
jb
cmp
mov
add
out
add
pop
aas
sub
push
lahf
mov
add
pushf
push
in
push
xlat
mov
stos
push
push
jb
std
jecxz
add
sbb
dec
jle
mov
decl
inc
aas
std
jne
decb
add
js
into
fs
push
stc
add
out
rorb
inc
ja
add
add
std
jne
push
lret
fidivrs
je
arpl
add
fwait
pop
int
leave
ficompl
adc
jae
add
imul
add
sar
ret
or
jb
push
add
xchg
mov
jmp
dec
jmp
mov
ljmp
sub
rcl
xor
loopne
mov
bnd
xor
add
add
fldl
lock
and
push
jno
mov
add
into
xchg
inc
das
lds
aaa
flds
add
or
inc
mov
incl
mov
add
imul
xorl
add
bound
mov
iret
repnz
int
mov
out
sbb
cmp
dec
call
loopne
dec
jno
sbb
dec
movsb
add
adcb
cltd
push
xor
mov
lea
push
pusha
aaa
mov
push
xchg
sub
sbb
ss
xor
enter
and
pop
mov
arpl
and
insb
aas
jecxz
stos
bound
add
daa
int3
fildll
daa
idivl
adc
mov
mov
xor
pop
out
dec
jl
add
jno
pop
or
out
jb
sbb
aas
cmp
int
or
sarl
cmp
sub
push
inc
shrl
and
pusha
sahf
jecxz
orl
std
hlt
inc
fiaddl
fsubrl
sbb
out
and
cmp
and
movsl
jge
push
xchg
mov
je
int
aas
cmp
and
add
mov
jecxz
adc
sub
pop
dec
add
loope
sbb
fcmove
add
out
inc
pushl
inc
jmp
stos
inc
jmp
stos
inc
push
dec
jns
leave
add
pop
adcl
sbb
testb
out
jne
pop
je
dec
aad
push
arpl
ret
dec
jmp
jmp
add
xor
testl
inc
ja
inc
inc
mov
add
notb
add
jno
push
push
xor
sub
dec
fdivs
out
faddl
sbb
in
sbb
lods
cmc
add
in
jg
lock
shl
cmp
ja
adc
mov
nop
in
mov
rorb
ds
mov
shr
adc
aaa
loope
xor
dec
daa
int3
stos
out
sbb
out
into
out
mov
pushf
sub
call
popf
test
out
add
jne
xchg
or
push
nop
sbb
xor
sahf
lret
out
mov
call
cli
dec
cmpsl
add
jbe
cli
cltd
jg
jno
adc
into
pabsb
lret
out
mov
push
xor
mov
out
stos
cmp
rdmsr
xor
adc
adc
bound
jmp
add
push
add
jb
push
lods
cld
xor
sub
int
push
dec
lds
add
add
sbb
jmp
mov
or
pop
fistpl
mov
push
jl
sbb
int
push
je
jno
std
aad
xchg
aad
mov
aad
xor
mov
je
xchg
push
mov
cmp
push
push
addr16
mov
mov
push
jno
and
add
add
mov
mov
in
into
add
push
mov
sbb
into
add
orb
pop
mov
and
dec
jmp
push
int
jne
inc
fcos
sahf
ret
mov
jne
pop
je
lret
fs
mov
dec
fs
test
fcmove
add
mov
fisubrl
cmp
add
sub
cltd
loope
mov
mov
les
mov
lcall
add
jmp
xchg
mov
inc
mov
lret
mov
add
sub
add
cmp
int
push
scas
call
outsl
add
sbb
xchg
xchg
jns
cmp
add
mov
lret
out
divl
bound
mov
rorl
xchg
int3
out
pop
adc
jl
out
adc
loope
repz
lcall
sar
test
jp
movsl
jns
and
shlb
in
or
fwait
add
mov
or
jne
and
mov
or
cwtl
out
pushf
jg
ljmp
aaa
cli
sbb
shrb
add
and
cmp
sub
jnp
aas
sub
or
icebp
mov
out
cli
dec
sbb
std
jmp
mov
push
insb
cld
inc
add
mov
cmp
mov
mov
cltd
lret
fcoms
add
lret
outsb
int3
add
mov
int3
test
pop
or
out
cmp
stos
lret
jae
add
inc
std
sbb
std
rolb
clc
std
mov
int3
add
push
jle
in
int3
add
rolb
push
or
add
xchg
arpl
inc
inc
jb
stos
inc
repz
dec
mov
add
test
jmp
cmpsl
sbb
add
fimuls
out
mov
mov
inc
add
or
inc
das
adc
sbb
jmp
lret
sbb
add
or
add
inc
mov
sbb
add
mov
add
repnz
pop
add
daa
ret
js
xchg
cwtl
xor
jge
fisubl
mov
aam
pop
sbb
mov
ret
mov
add
sbb
js
jne
ljmpw
cltd
xor
add
stos
sub
add
lret
popf
sub
inc
mov
cltd
add
add
adc
les
lret
out
mov
mov
jle
out
jle
push
fistpll
out
jle
jo
sub
add
out
lret
pop
dec
lea
out
daa
fidivs
into
jecxz
inc
fbld
cmp
jb
jmp
ds
push
fistpll
out
shll
ljmp
push
js
mull
add
aas
lret
out
jbe
xchg
mov
shrl
mov
mov
and
mov
add
gs
call
adcb
and
call
in
dec
shl
mov
in
lret
dec
mov
dec
leave
adc
or
xor
jmp
add
or
in
add
mov
pop
mov
jecxz
lods
lea
adc
pop
mov
in
std
jmp
jno
add
add
decl
ds
pop
mov
pop
ret
push
mov
dec
push
xorb
ror
add
sar
iret
push
adc
stc
pop
add
sbb
add
add
clc
test
lea
dec
lea
dec
push
cld
lds
lret
add
fwait
inc
adc
pop
lgdtl
pusha
adc
ficomps
aam
clc
sub
test
sbb
jl
add
sarb
and
into
add
cmp
pop
mov
ret
add
xlat
xor
xchg
enter
clc
xchg
repz
sldt
add
add
sub
outsl
data16
mov
jne
xchg
hlt
mov
sub
and
sub
and
daa
ret
mov
push
and
cs
cmp
lock
ret
jae
insb
or
out
nop
push
ds
push
xor
out
mov
mov
lret
pop
sub
cmp
or
cmp
add
sub
or
das
popf
xor
cmp
or
cmp
jo
xchg
cmpsb
sarl
out
mov
loopne
and
jnp
mov
xor
les
push
mov
cmp
inc
mov
ffreep
dec
xor
adc
fistps
iret
lea
subl
or
test
mov
btc
add
out
adc
out
adc
sub
out
movsl
add
sub
pop
adc
out
adc
push
push
push
test
mov
inc
enter
push
jb
out
inc
pusha
cs
add
mov
scas
lret
xor
test
and
jb
je
call
mov
push
dec
add
push
mov
hlt
std
mov
pop
hlt
push
es
inc
fdivrs
cwtl
dec
fnsave
add
cmp
mov
mov
ja
dec
cmp
and
dec
jno
mov
dec
jno
stos
dec
jno
mov
push
fs
nop
jecxz
sbb
xor
out
mov
test
xchg
test
add
stos
cmp
leave
add
push
divb
lret
lret
add
mov
rorb
dec
add
pushf
repz
roll
incl
sub
call
xchg
xor
aad
pushl
je
into
dec
lods
cmp
cmp
add
out
es
mov
and
push
jl
movups
gs
outsl
fwait
call
incl
mov
movsb
jge
addr16
push
sbb
mov
cmc
lods
lcall
mov
fstl
aaa
push
unpcklps
push
pop
add
cmc
out
pop
pushf
add
into
lret
negl
mov
dec
and
xor
int3
out
cmp
addb
add
add
out
iret
add
cli
mov
jbe
in
mov
pop
cmp
pop
in
sbb
aas
or
or
inc
in
in
dec
scas
add
xchg
shl
xchg
repz
das
les
mov
cld
pop
aas
pinsrw
ds
xor
ds
sbb
roll
add
arpl
repz
orl
call
add
adc
jmp
pop
fstpl
push
dec
fscale
je
mov
in
inc
or
inc
stc
call
cmp
fadds
cmp
mov
jo
cli
mov
xor
mov
fnstenv
inc
or
sbb
mov
stos
bound
jae
push
and
jae
xor
outsb
add
mov
sbb
xor
ret
cmc
mov
mov
out
je
cmp
je
les
std
jne
dec
insl
inc
mov
sti
jmp
mov
fsubrs
xorl
jo
push
xor
es
ja
enter
sar
jne
dec
je
inc
mov
std
push
iret
and
add
mov
inc
dec
and
jl
mov
inc
imul
fidivl
adc
push
jb
arpl
inc
and
mov
loope
repnz
test
mov
leave
and
mov
xor
int
push
dec
mov
orb
fimuls
jmp
mov
adc
add
sbb
jbe
adc
scas
and
add
mov
add
outsb
enter
and
add
jg
sub
sub
cwtl
ja
test
aaa
add
mov
and
and
syscall
int3
mov
jp
mov
dec
fisttpll
add
push
push
jno
rol
cmp
jns
cmpsb
xchg
add
or
mov
fwait
daa
xchg
mov
fs
mov
int3
out
sub
or
cmpl
and
sti
shrb
pop
add
addl
inc
jno
ret
sub
out
xchg
adc
aaa
loopne
inc
xlat
add
rcll
or
jbe
mov
shll
ja
mov
adc
add
and
fxtract
cmp
fldlg2
cmp
stc
jle
mov
fnsave
push
mov
pop
inc
mov
cwtl
dec
in
xor
or
inc
add
mov
jmp
into
inc
clc
fs
adc
loopne
jb
inc
int
cld
std
xchg
sub
add
add
mov
add
jmp
fsub
int3
add
jbe
std
pop
mov
push
mov
and
xor
add
cmp
mov
push
mov
call
add
dec
int3
add
sbb
and
rol
out
shlb
decb
or
add
sar
pop
inc
adc
add
decl
fcmove
mov
inc
mov
add
lea
mov
imul
mov
and
divl
xor
mov
leave
and
popa
and
push
cmp
push
xor
loop
xchg
shll
pop
fsubrl
in
push
xor
sbb
mov
lcall
shlb
add
sti
sbb
add
call
jo
mov
out
cld
clc
sub
daa
fistps
in
mov
jne
lret
cmp
notl
out
imul
add
or
pop
cs
sti
or
inc
stos
daa
mov
dec
out
mov
call
imul
call
add
mov
out
cmp
cld
imul
testl
mov
inc
xor
out
mov
out
mov
fiadds
mov
mov
cmp
std
lods
arpl
add
jmp
push
je
jmp
or
leave
pop
idiv
xchg
inc
dec
lds
mov
mov
mov
rcl
and
push
mov
stc
shlb
mov
jmp
sub
push
imul
and
fs
adc
popa
and
std
jge
sti
mov
xor
sbb
cmp
sarb
add
and
cltd
push
push
add
lret
call
push
mov
adc
and
rcrb
cmc
fucomip
sbb
mov
push
jg
cmp
add
adcb
adc
mov
roll
push
push
dec
cmp
jbe
dec
enter
adc
mov
movl
mov
inc
sbb
pop
pop
add
enter
xchg
inc
xchg
in
sbb
out
sbb
rcrl
and
jae
in
add
into
and
mov
in
adc
into
inc
and
sub
add
mov
cmc
in
sub
sbbl
dec
insl
imul
dec
add
sbb
dec
jecxz
inc
out
shlb
dec
in
add
mov
pop
and
lods
in
mov
jecxz
mov
bound
stos
cmp
es
add
dec
in
addl
lret
clc
sbb
out
idivl
and
mov
mov
xor
mov
repz
data16
mov
call
add
mov
fucomp
cmc
stos
rcrl
repnz
pop
xchg
out
cmp
jg,pn
and
add
arpl
add
lcall
mov
push
and
cmp
test
and
xor
jge
and
rcll
scas
sub
add
cmp
add
add
dec
leave
jae
add
mov
mov
or
push
and
int3
add
cmp
inc
or
in
and
add
test
pusha
bound
adc
lret
jae
push
and
pop
push
inc
and
jl
inc
inc
mov
jnp
std
push
arpl
nop
mov
add
or
add
mov
inc
andnps
xchg
mov
int3
add
dec
push
std
fistl
and
push
inc
jo
loop
inc
ja
xchg
mov
mov
mov
mov
mov
xchg
push
lea
mov
call
enter
pop
int
add
xor
add
add
adc
jge
jbe
inc
aam
out
xor
or
mov
add
mov
lea
cmp
insl
insb
mov
inc
xchg
rorl
aaa
data16
sub
sbb
rcrl
shll
aaa
inc
je
fiaddl
mov
mov
call
sub
xchg
js
add
cmp
dec
test
xor
mov
out
cmpsl
roll
or
test
sbb
mov
stos
pop
outsb
push
daa
lock
pop
jg
and
mov
sbb
mov
mov
add
out
adc
out
sbb
out
adc
out
cmp
out
xor
out
cmp
mov
push
mov
std
test
je
cmp
mov
mov
ret
cmpsb
sbb
push
out
rol
dec
out
rol
inc
out
xchg
ret
xchg
je
out
add
adc
push
mov
scas
dec
sbb
movsl
ret
cmpsb
je
mov
ljmp
mov
or
out
ljmp
popf
test
into
insb
add
ljmp
or
add
sti
push
sbb
and
and
lods
cmpsb
jo
fildll
ret
movsb
je
rcr
outsb
lcall
mov
aad
lahf
fsts
add
hlt
lahf
push
push
add
stc
jmp
ljmp
cltd
push
outsl
dec
leave
mov
daa
test
mov
std
push
add
rorb
add
testb
in
add
add
dec
or
push
mov
sbb
mov
xor
lret
sbb
xor
sbb
sahf
sar
jne
cmp
ja
out
test
pushf
add
test
jle
aam
cmp
into
mov
mov
clc
pop
adc
inc
mov
clc
adc
dec
inc
adc
mov
mov
fdivrp
sub
mov
mov
popf
cmc
pop
push
and
inc
mov
cmc
adc
scas
jo
stos
xchg
hlt
pop
cmpl
in
int
mov
mov
xor
aas
out
push
pop
fstp
daa
sub
out
push
add
cmp
add
mov
out
mov
lods
xor
das
mov
or
mov
mov
out
lcall
arpl
cld
xchg
jo
push
lods
aaa
das
mov
xlat
dec
add
out
outsb
scas
xchg
fcomps
pusha
lret
daa
clc
hlt
xor
inc
pop
subb
test
fs
popa
jno
and
stc
mov
add
insl
cli
xchg
push
sub
sub
push
adc
cli
mov
sub
int3
add
push
mov
jne
shl
sbb
dec
loop
das
je
mov
push
xchg
lods
call
push
shll
or
ret
mov
mov
fucomip
mov
inc
add
stc
std
sbb
roll
add
test
mov
adc
adcl
insl
mov
mov
add
pushf
push
int3
add
push
xchg
loope
les
rorl
insb
dec
add
or
push
pop
repz
fldl
pop
dec
inc
lock
jp
shl
mov
mov
ljmp
dec
push
lock
xchg
loopne
int
inc
add
ja
dec
push
inc
pop
xchg
pop
je
xor
mov
in
jmp
add
cld
std
mov
push
mov
lcall
xor
cmpsb
lcall
jb
add
dec
xchg
in
mov
insl
sarb
call
test
fsubl
fldpi
jmp
sub
inc
mov
popa
sub
addr16
repnz
add
or
enter
dec
cmp
push
mov
out
mov
jl
das
inc
push
ss
imul
cmp
lea
rolb
aas
addr16
dec
pop
test
xchg
in
nop
fidivrl
aaa
mov
dec
add
mov
cmpsl
jnp
pop
out
xchg
cmc
pushl
add
push
xchg
roll
cmpsl
leave
repz
lret
call
add
mov
mov
out
fists
hlt
fiaddl
call
mull
lret
lcall
sahf
cld
jmp
or
xchg
pop
jecxz
cmc
mov
pop
and
jb
or
jb
cs
out
mov
out
in
or
add
lret
outsl
into
hlt
idivb
jns
mov
outsb
in
imul
pop
add
mov
add
into
xor
jmp
repnz
add
xor
mov
xchg
dec
loope
jmp
in
sahf
std
jmp
aas
fidivrl
inc
adc
pop
or
jmp
mov
adc
pop
or
jmp
pop
loop
sub
fiadds
add
add
pop
or
jmp
sub
mov
add
xchg
cmp
lret
dec
mov
fildl
inc
popa
inc
mov
xor
jne
inc
jmp
mov
xor
cmp
mov
outsl
inc
jmp
mov
add
cmp
dec
dec
mov
or
out
dec
mov
mov
dec
mov
or
popa
push
mov
mov
cmp
sbb
mov
bound
mov
push
aas
mov
popa
cmp
jbe
jmp
daa
mov
aas
mov
xor
mov
cmp
or
mov
lock
es
jae
test
add
and
icebp
push
push
mov
rol
jg
push
enter
mov
leave
cs
or
pushf
out
pop
sub
xadd
pop
pop
lret
mov
pusha
divb
icebp
pop
cmc
into
psrad
pop
add
lret
cli
dec
cmp
jb
add
add
por
out
repz
cmpsl
add
mov
jae
cmp
mov
fcoml
loope
iret
add
inc
stc
ret
pop
inc
outsb
xchg
push
fwait
out
or
cs
int3
out
xor
lret
bound
xchg
fstpl
int3
dec
push
add
lret
add
lcall
sahf
add
add
dec
add
mov
adc
or
shl
inc
inc
add
pop
inc
inc
call
jae
pop
mov
fiaddl
scas
fs
and
jmp
cmpsb
or
hlt
inc
dec
call
mov
rcl
mov
ret
mov
test
dec
into
mov
test
aas
push
mov
pop
insb
inc
rol
into
add
cmpsb
cmpsb
dec
mov
xchg
mov
stc
pop
mov
push
pop
pop
stc
push
popa
rclb
scas
xchg
push
jnp
cmc
add
into
je
or
stc
mov
loope
or
add
in
mov
jge
inc
inc
andb
push
pop
or
mov
pop
pushf
push
mov
arpl
leave
cltd
xchg
std
xor
outsl
mov
pop
and
jl
push
pop
mov
jb
rcrb
fs
divb
scas
sbb
jp
xchg
sub
fldenv
lcall
lea
or
pop
mov
push
lds
pop
add
mov
cmpb
sahf
in
dec
popf
lahf
xchg
adc
repnz
mov
dec
addb
into
into
out
add
dec
mov
mov
mov
jae
daa
mov
cmpsb
es
jae
mov
push
loop
mov
std
cmp
rcrb
push
mov
fidivrl
out
lret
pop
pop
pop
call
lds
test
lock
sub
mov
out
pop
jns
cmc
mov
sarl
out
add
inc
sub
fisubs
push
vmovdqu
out
adc
jmp
xchg
pop
mov
call
aam
shll
lret
insb
inc
loope
bound
inc
gs
cmc
pushl
test
push
or
jecxz
icebp
sbb
xchg
jle
sub
inc
out
imul
xor
add
adc
inc
in
sar
push
inc
into
fiadds
ret
inc
adc
into
jb
out
inc
dec
in
imul
in
mov
data16
cmc
shll
add
sbb
call
sbb
das
mov
adc
jge
std
jmp
mov
rcl
dec
enter
mov
pop
adc
push
adc
xchg
add
pop
add
dec
and
push
mov
leave
mov
jno
sbbb
xor
pusha
stc
in
fcmovne
add
or
mov
mov
mov
add
or
jge
push
and
mov
inc
adc
jg
mov
and
or
mov
mov
pop
add
mov
pop
pop
cltd
ret
add
decb
push
add
cmpsb
add
jno
leave
and
sbb
mov
add
jp
jno
xor
scas
mov
outsb
add
loop
mov
mov
addb
fs
imul
sub
or
add
add
inc
mov
test
mov
out
sub
int3
jb
cmp
rorl
iret
pop
mov
jecxz
push
dec
xor
daa
jle
out
aas
bswap
sti
jne
imul
add
fwait
fs
xor
jmp
sti
hlt
pop
ret
daa
mov
out
add
out
pop
push
mov
negl
mov
ret
les
sub
lret
out
imul
call
inc
pushf
pop
lret
mov
out
sub
add
mov
add
add
roll
push
add
les
jmp
out
adc
lds
xchg
xor
sub
pop
and
mov
mov
out
pop
push
add
add
mov
adc
inc
stc
mov
dec
push
jge
test
xor
xchg
jno
mov
call
enter
mov
pop
inc
jno
mov
ljmp
add
cmpsb
orl
mov
add
out
adc
inc
into
pop
add
inc
add
xchg
mov
cmp
jne
jns
mov
add
add
ret
jne
dec
push
ds
mov
ret
sub
sti
push
push
push
fs
mov
push
lea
sub
mov
and
aas
testl
fmull
add
int
ja
inc
push
xor
mov
and
jnp
ja
scas
push
and
jnp
jmp
jecxz
mov
jno
lahf
dec
rolb
loop
daa
add
imul
push
jecxz
cmp
sbb
cmp
mov
pop
mov
shlb
lds
rcrb
cmp
in
pop
jae
movb
sub
idivl
mov
lret
incb
out
mov
xchg
dec
iret
daa
pop
mov
rcrb
aad
sub
insl
pop
jae
mov
push
jg
mov
clc
pushf
nop
sahf
push
inc
stos
xchg
sub
sbb
sbb
out
ror
nop
repz
sahf
dec
sub
repnz
maxps
out
test
in
mov
cltd
imul
pop
sub
cmp
pop
insl
inc
mov
dec
lahf
pop
or
ds
daa
add
sbb
imul
lret
pop
clc
dec
ret
insb
enter
pop
inc
out
pop
sahf
out
ffree
mov
pop
add
pop
inc
lret
xchg
jo
add
push
icebp
pop
xor
mov
stos
mov
dec
in
fnsave
notb
mov
std
push
push
add
cmp
jmp
add
out
push
add
mov
dec
and
ja
adc
sti
push
addr16
std
fdivl
inc
jmp
or
mov
cmp
leave
push
leave
mov
jmp
fs
std
add
inc
and
fwait
inc
mov
hlt
fildl
jne
inc
push
or
pop
mov
and
xor
add
add
out
je
fsubrs
jle
push
push
movb
ds
adc
inc
mov
hlt
dec
pop
dec
lea
in
out
lret
add
out
adc
mov
lcall
fwait
cmp
or
push
cmovle
pushl
scas
pop
out
ret
push
add
popa
insl
add
bound
add
or
mov
imul
cmp
and
lcall
and
and
and
adc
push
fcmovne
mov
mov
mov
in
mov
pop
jae
jb
adc
jno
cmp
sbb
and
popa
and
repnz
and
outsb
sbb
imul
add
fwait
shl
cmp
or
mov
jecxz
stos
inc
sbb
sub
bound
shl
push
test
inc
cmp
mov
push
das
test
jmp
push
mov
stc
cs
repz
xchg
push
adc
outsb
mov
mov
mov
lcall
sti
repz
add
jmp
xchg
incl
mov
scas
xchg
mov
test
mov
jo
movl
add
dec
mov
pop
arpl
and
or
pop
and
loope
cld
loope
inc
jmp
xchg
sub
das
pop
xchg
into
lds
pushf
sub
add
pop
mov
pop
inc
pop
dec
popf
adc
out
sbb
aam
loope
jmp
jbe
inc
testb
cmpsb
scas
xorl
sbb
add
aam
stc
in
or
adc
shll
movzbl
push
idiv
push
cmp
imul
addr16
lcall
push
ds
adc
sbb
or
add
cmpb
nop
adc
add
pop
lock
sarb
lea
int
test
and
sub
lcall
pop
iret
inc
add
sar
je
cwtl
icebp
dec
std
jle
adc
mov
sub
mov
pop
lock
push
cmp
mov
stos
or
or
leave
add
mov
cmp
les
call
cltd
jne
shlb
rorb
jne
or
add
ljmp
or
cmc
nop
aas
add
fnsave
push
stos
popf
das
or
mov
call
lock
add
repnz
sub
cmc
jmp
dec
jno
jecxz
add
ds
scas
ret
in
in
imul
inc
inc
mov
jb
xchg
iret
rclb
out
imul
arpl
push
push
stos
xorb
scas
cmp
repz
iret
enter
ljmp
andb
out
push
and
add
lret
xchg
add
inc
out
add
lret
add
mov
mov
cmp
ret
iret
add
cwtl
mov
in
subl
out
jmp
jecxz
add
mov
je
movsl
lret
add
mov
cmpsl
inc
mov
push
inc
mov
add
es
decl
in
mov
add
jge
cmp
aas
cmc
or
scas
xchg
shll
or
jle
push
call
sub
lcall
jb
stos
sbb
out
aad
jns
lret
add
scas
roll
add
lret
out
sbb
add
hlt
mov
pcmpeqw
out
mov
inc
sbb
adc
test
fwait
add
jecxz
jmp
sub
shr
dec
loop
push
test
jne
push
inc
and
add
std
pop
fwait
lret
add
mov
push
push
xor
mov
and
je
push
ret
jmp
push
jns
xchg
adc
mov
test
xchg
or
xchg
jb
mov
sbb
je
int
mov
add
mov
add
stos
int
xor
push
jae
imull
jae
icebp
aad
mov
mov
add
out
int
insl
adc
pop
or
pusha
mov
mov
mov
xlat
add
cmpsl
add
aas
mov
or
insl
jle
into
push
mov
cld
jb
add
sub
stos
jb
mov
mov
jle
dec
pop
fsub
dec
dec
push
mov
or
mov
add
add
add
in
jle
roll
mov
sbb
adc
fisubrs
inc
inc
shlb
fxch
jecxz
divl
jg
xlat
fs
and
xabort
fldenv
add
int
add
push
fmull
test
lahf
push
aam
mov
jg
sbb
mov
sti
clc
pop
push
test
les
or
jg
mov
imulb
or
xor
test
jmp
push
jno
fidivrl
push
push
jo
adc
sti
aam
add
clc
adc
mov
inc
icebp
add
lods
lret
test
data16
bound
aam
fldl
sbb
jmp
insb
out
incb
cmpsb
add
dec
enter
ret
iret
push
mov
dec
vshufps
and
cmp
fsubl
rcrb
iret
mov
orl
call
or
pop
pop
fmuls
je
adc
push
or
add
cmp
subl
sbb
push
int3
cltd
add
add
inc
push
jb
jl
adc
push
pop
std
lcall
cld
pop
sbb
ret
add
add
mov
mov
cmp
mov
mov
nop
std
inc
mov
mov
rolb
call
jno
and
in
mov
mov
and
std
mov
std
or
nop
stc
mov
add
incb
in
push
and
or
mull
or
ret
dec
inc
xor
mov
cld
mov
add
mov
add
pop
mov
add
lret
je
test
dec
lea
add
mov
scas
dec
push
push
add
push
mov
fcoms
and
add
add
lret
lds
mov
adc
jmp
jb
shrl
popl
mov
in
jp
rcll
add
jecxz
pop
mov
call
sub
out
add
call
cmp
or
roll
adc
loope
inc
int
vunpckhps
push
lods
int
xchg
int
jmp
mov
add
dec
shll
add
sbb
jmp
rcll
xchg
pop
sbb
fsubl
inc
jmp
sub
push
push
mov
or
jo
sbb
mov
add
icebp
jg
out
mov
mov
inc
ret
shrb
and
or
add
mov
shll
mov
xor
push
mov
dec
jmp
sbb
cmp
mov
cmp
jne
and
inc
adc
test
mov
jb
nop
jge
push
iret
cmp
xor
adc
add
orb
lds
decl
incb
incb
adc
test
fwait
mov
mov
pcmpeqw
adc
cmp
sbb
push
jp
xor
js
stos
hlt
int3
adc
je
add
jmp
mov
pop
imul
mov
pop
pop
mov
add
cwtl
adc
je
mov
pop
sar
stc
dec
incb
out
je
jmp
add
add
inc
dec
je
mov
lret
js
fnsave
or
add
loopne
mov
stos
lret
push
lahf
jb
fidivs
lret
xor
ret
xchg
dec
cmpsl
rcll
dec
lods
push
cmp
out
xor
lret
add
dec
pop
jge
mov
adc
ja
cmp
aaa
mov
or
ret
daa
jg
dec
mov
mov
cmp
push
imul
jg
dec
cmp
je
std
jle
dec
jge
sub
scas
lret
out
mov
mov
sbbb
idivb
rorb
jl
ss
sbb
fidivs
and
adc
jbe
fdiv
fiaddl
inc
subl
js
xchg
jmp
addr16
add
xor
sub
add
hlt
adc
scas
push
inc
loope
cmp
xlat
add
mov
mov
inc
jmp
xchg
or
inc
jmp
mov
les
sub
push
andb
mov
mov
je
aaa
int3
mov
mov
stos
clc
dec
or
add
push
or
push
pop
lahf
mov
or
add
sbb
call
shlb
mov
pop
loope
pop
mov
cmp
inc
and
add
iret
push
mov
xor
adc
test
mov
xor
push
stc
add
iret
mov
add
add
add
sub
pop
cmp
add
je
mov
mov
enter
add
mov
mov
xor
adc
cmp
push
mov
jl
stos
xchg
cmp
mov
mov
aas
mov
imul
in
insb
inc
jg
jb
add
xor
mov
incl
mov
mov
dec
mov
add
pusha
jb
add
lret
lods
sti
mov
out
mov
pop
out
jmp
adc
fnsave
lret
in
mov
lret
out
mov
lahf
repnz
lret
jb
lods
and
int
out
add
pop
int
dec
in
xchg
or
orb
movsl
lret
cmp
call
add
imul
fisubrl
popf
les
push
es
pop
mov
in
lret
mov
or
mov
dec
and
sub
jb
mov
daa
or
cmpb
jae
add
in
jne
sbb
adc
shll
push
fnstcw
push
or
icebp
dec
in
in
pusha
pop
push
ds
cld
and
sbb
add
inc
jmp
cli
or
loopne
je
popa
inc
pop
lds
notl
aam
add
mov
dec
icebp
in
cld
and
xor
add
mov
jmp
dec
rcr
and
aad
mov
sbb
ss
call
or
popa
pop
nop
and
fcmovne
add
inc
imul
flds
ret
lret
add
push
daa
adc
mov
push
les
lret
call
mov
xchg
add
in
cmp
inc
mov
push
push
ret
jae
inc
dec
adc
lcall
idivb
aas
js
iret
xor
add
hlt
lret
call
mov
mov
xor
aas
pop
mov
js
add
sub
mov
sub
bound
add
movsl
sbb
aam
mov
fldl
int
in
dec
mov
jle
inc
popf
js
cmpsb
pop
jbe
scas
insl
inc
mov
jmp
push
std
lea
inc
inc
stos
jno
pop
imul
jmp
fs
mov
push
das
add
clc
mov
pop
mov
sub
js
add
xor
lret
cmp
xchg
pop
out
jge
cmpsl
add
fwait
jo
or
jne
inc
cmp
cmp
js
inc
xor
jecxz
jbe
sahf
cmp
addr16
mov
lret
pusha
mov
lods
fists
repnz
jo
movsl
dec
cmpsl
mov
hlt
jne
mov
test
or
bsf
add
in
sub
movsb
call
mov
aad
mov
inc
in
into
es
add
icebp
movsb
std
sbb
dec
stc
cmp
lds
inc
dec
sbb
ret
jno
inc
sbb
sub
mov
lret
adcl
aaa
adc
insl
adc
sub
aad
in
xor
and
and
inc
jmp
insl
test
shr
sbb
sbb
or
sbb
lds
imul
or
add
adc
pop
adc
inc
mov
and
iret
je
mov
pop
jb
jae
xor
sbb
jne
inc
dec
and
cmpsl
sar
fcmovb
mov
push
or
add
adc
inc
call
push
or
loopne
jl
pop
enter
mov
cmc
xchg
daa
imul
lods
add
enter
or
pusha
pop
std
cmpsb
arpl
jne
xchg
jne
or
adc
pop
mov
dec
fcoms
mov
xor
out
cs
mov
add
lea
add
in
xor
aam
fs
mov
mov
call
fadds
mov
js
add
sub
in
int
jmp
incl
mov
mov
cwtl
add
mov
jne
add
xchg
push
in
mov
add
rcrb
mov
inc
mov
nop
add
mov
jne
mov
inc
cmpsl
adc
js
add
mov
imul
into
out
sub
ret
adc
jb
mov
out
mov
imul
into
out
mov
imul
out
inc
imul
out
or
imul
out
lahf
jb
pop
mov
ret
mov
bound
cmp
shrl
inc
xchg
add
lret
bound
sbb
bound
add
add
inc
and
mov
hlt
mov
push
mov
inc
dec
lds
xchg
or
scas
push
and
mov
add
fwait
adc
scas
inc
rcr
inc
test
or
mov
stc
mov
or
add
inc
or
xor
lods
aam
mov
lds
add
lods
add
scas
lret
std
faddl
xor
dec
jo
jmp
inc
lods
sbb
jg
adc
push
fiaddl
xor
and
and
pusha
adc
clc
and
int3
add
out
push
std
xlat
shlb
push
movsb
and
pop
mov
or
add
int3
ret
inc
jmp
push
add
inc
sub
lock
push
jae
push
add
inc
mov
out
leave
add
push
mov
cmovg
test
add
dec
mov
or
pop
std
decl
leave
add
mov
xchg
mov
out
mov
xchg
je
pushl
and
add
jb
clc
test
hlt
push
add
jns
test
or
adcb
ja
mov
add
xchg
add
out
es
inc
rorb
mov
and
xchg
sbb
cs
mov
mov
adc
sarl
xor
cmpb
clc
jmp
loope
jb
adc
and
pop
or
loop
testb
rcrb
jne
add
mov
out
add
cmpsl
sti
add
cmpsl
lret
add
jnp
mov
scas
arpl
mov
bound
adc
xor
jmp
add
mov
push
sbb
add
xchg
jg
mov
out
jns
mov
out
jg
hlt
xor
fistps
cwtl
mov
push
sbb
add
add
or
fisubs
bound
mov
insl
push
jle
jmp
stc
pusha
or
inc
jmp
mov
jbe
mov
arpl
test
mov
jno
mov
call
es
flds
jb
fbstp
mov
mov
out
cld
dec
inc
sbb
call
add
leave
sbb
mov
ret
ds
in
mov
test
daa
push
jb
mov
sbb
out
jae
mov
lcall
cmc
ds
test
std
push
or
call
pop
mov
jae
push
mov
mov
mov
cmp
or
adc
in
jae
push
enter
movl
and
aaa
jb
fistpl
mov
jne
call
js
jb
mov
sar
cmpsl
lret
mov
xlat
ret
iret
push
cmp
inc
mov
mov
cmp
aaa
adc
addr16
push
mov
test
in
mov
out
dec
jae
popa
jo
pop
ja
add
inc
jae
mov
into
gs
sahf
xchg
or
jns
inc
leave
or
call
cmc
dec
xlat
pop
mov
and
xor
adc
pop
push
pushf
or
adc
add
lret
imul
add
int3
jmp
jno
jge
out
jmp
imul
ret
or
mov
push
lock
inc
mov
lret
push
cmp
out
mov
je
shrl
out
push
repz
mov
mov
mov
sub
loope
add
arpl
icebp
insb
iret
xchg
cmpsl
add
push
jmp
mov
push
lds
lret
call
add
je
add
mov
sti
lahf
jns
or
jo
mov
shrb
out
xchg
dec
pop
jb
dec
sbb
dec
and
scas
lret
add
lret
xorl
movsl
cmpsb
push
test
stc
lret
add
fs
xlat
sbb
add
add
sbb
mov
jg
add
fisubs
cmp
sbb
add
mov
dec
xor
lret
dec
mov
imul
jl
test
call
push
mov
mov
add
ss
inc
fwait
dec
mov
add
rolb
or
and
dec
mov
jg
inc
cmpb
jb
pop
enter
inc
adc
nop
and
inc
mov
add
add
inc
add
mov
je
or
pop
sbb
jo
xor
mov
stc
cmp
mov
int
cmp
out
cmp
jno
std
mov
pop
subl
je
inc
into
mov
fstps
add
lods
add
pop
ja
add
and
sbb
sub
lock
xor
add
cmp
jae
add
in
cmc
sahf
and
mov
jle
or
add
scas
ret
std
outsb
shll
hlt
bound
fiaddl
in
aas
bswap
mov
cmp
xchg
add
cld
daa
mov
mov
mov
scas
jmp
add
push
adc
mov
mov
xchg
adc
add
mov
mov
push
cmp
rcrl
loopne
aaa
shl
add
add
mov
sbb
mov
push
mov
stos
sbb
add
popl
scas
push
pop
mov
rolb
cwtl
hlt
cld
push
or
mov
add
je
lods
in
call
bound
std
mov
push
push
jb
insb
pop
mov
mov
maxps
adc
cmp
pop
mov
mov
push
push
into
shll
call
mov
and
mov
push
xchg
pop
pop
mov
out
and
jle
mov
jno
call
mov
movl
repnz
xor
xorb
pop
insl
adc
push
or
cmp
mov
adc
xchg
and
sbb
xchg
sti
je
jne
and
sbb
xor
add
push
xor
pop
sbb
movb
je
xlat
mov
rol
inc
add
call
cmp
mov
movsl
jbe
mov
daa
outsb
repnz
sti
add
cmp
mov
xchg
jge
into
outsb
push
test
pop
mov
sbb
pushf
xor
icebp
sbb
outsl
xchg
mov
idivb
jo
mov
sub
int3
sarl
and
in
outsl
jg
add
add
std
fcomi
jg
test
mov
out
push
cs
add
mov
push
and
shlb
lret
out
cmp
and
int3
cld
fcoms
cli
movl
pop
call
dec
scas
jecxz
push
jnp
out
push
xor
cmp
in
inc
pop
call
add
cltd
fldcw
scas
fdivrs
xor
mov
enter
lret
jmp
fmull
add
add
and
jbe
lock
jecxz
mov
add
rorl
and
add
sbb
mov
cmpsl
lods
jecxz
sub
cs
push
cld
jmp
push
add
pop
daa
lods
jecxz
lods
mov
jmp
add
mov
add
es
add
stos
add
inc
sub
jno
mov
mov
xor
xchg
jg
and
popa
add
mov
rorb
and
jmp
stos
aaa
je
mov
adc
rclb
je
in
xchg
je
mov
ljmp
std
mov
sti
push
lcall
mov
inc
add
daa
mov
sub
add
jmp
sarb
std
push
inc
mov
add
jns
or
push
lret
bswap
mov
xchg
ret
pop
int3
add
push
lahf
ret
aam
inc
fwait
jae
sbb
push
jle
cmovo
cmc
lahf
adc
add
int3
and
xor
xor
add
mov
sar
mov
test
ja
cmpsb
add
add
or
and
xor
add
pop
xor
jb
xor
cmc
pop
push
call
cs
or
outsb
jb
cmpb
sar
mov
popa
jnp
add
add
fucomip
sbb
or
or
add
cwtl
cmp
add
pop
fdivl
ret
or
xor
inc
int3
xor
dec
andb
dec
int3
rdtsc
or
add
rcr
xorb
aad
mov
or
fwait
xor
test
in
mov
fs
popa
mov
call
adc
jb
fs
inc
mov
mov
mov
sti
fidivs
jnp
xchg
sti
divb
pop
xor
or
out
push
fadds
imulb
mov
xchg
rcrl
or
popa
pop
adc
mov
insl
call
mov
add
mov
push
push
jle
adc
scas
push
dec
jno
jp
std
shll
mov
shll
cwtl
jmp
xchg
push
push
into
test
mov
jae
add
in
test
out
cs
pop
dec
test
ret
xchg
add
les
push
adc
dec
sbbl
in
scas
lds
mov
pop
jne
dec
or
sbb
xor
add
inc
push
jb
or
jmp
or
mov
mov
pop
leave
push
mov
inc
loope
lcall
add
add
sub
enter
jo
jbe
fisttpll
jl
in
pop
movb
mov
or
inc
mov
add
ss
add
push
add
test
cmp
push
xor
out
pop
mov
mov
das
mov
add
cmp
add
je
and
add
iret
jo
mov
stc
mov
sub
add
xor
add
jb
dec
mov
fdivs
mov
inc
and
jle
cmc
arpl
mov
out
mov
bound
add
jecxz
movsl
and
scas
mov
mov
imul
cli
inc
jne
stos
iret
sub
and
shll
cmp
stc
pop
pmulhuw
xor
into
add
sahf
mov
pop
push
adc
loopne
fmul
movaps
les
or
rorl
mov
icebp
imul
add
add
push
movsb
lret
lret
out
int3
jmp
add
dec
add
ffree
add
lret
add
and
and
call
adc
inc
enter
call
mov
test
mov
add
into
add
fcompl
add
mov
dec
or
lahf
lret
call
inc
scas
dec
dec
int
jb
shrb
stos
mov
add
push
mov
out
push
pop
jno
shlb
adc
cmp
or
cmp
add
mov
dec
add
roll
addb
adc
dec
mov
ret
lcall
iret
add
int3
fsubs
push
cltd
int
enter
out
js
incl
mov
fadds
ret
rolb
add
mov
movb
mov
iret
add
aam
and
int
add
mov
sub
sarb
add
mov
out
mov
jp
mov
lods
or
stos
jecxz
ljmp
pushl
jmp
pop
mov
fnstenv
bound
into
cmpb
js
into
rorw
out
mov
shr
and
out
mov
pushl
sub
jp
call
mov
and
loop
and
cmpsl
ds
sar
fisttps
adc
mov
add
movsl
out
popa
std
in
lret
xchg
jb
jle
mov
js
ret
dec
arpl
jno
filds
lret
fwait
cmp
out
outsl
imulb
decl
xchg
jp
sahf
jp
inc
fxch
bound
mov
dec
add
adc
mov
add
add
fwait
shlb
addr16
mov
mov
call
arpl
out
jnp
mov
sub
inc
and
aad
sbb
pop
scas
cli
mov
xor
call
out
mov
add
jmp
lahf
inc
insb
int
inc
xlat
rorb
or
jmp
push
lcall
push
xchg
std
ficoms
repnz
call
pop
into
or
jmp
add
dec
and
mov
add
stos
cmp
testl
pop
and
rorb
repz
add
and
leave
add
fwait
shll
mov
jno
mov
inc
and
rclb
cmpsl
dec
divl
fsubr
xor
jle
inc
mov
inc
add
add
add
add
scas
add
add
mov
add
xchg
andl
xchg
je
mov
shll
and
mov
mov
mov
movsl
mov
mov
jp
inc
dec
mov
xchg
mov
iret
les
mov
out
shrb
in
sub
in
cmp
iret
add
sub
in
movsl
hlt
movl
stos
fistl
add
orl
push
test
ljmp
rorb
lds
mov
bound
mov
into
test
and
xor
add
lret
out
aaa
pop
int3
mov
cmc
push
out
subl
out
add
xor
add
dec
and
cmp
or
das
ljmp
ret
arpl
lret
out
lcall
add
push
adcl
loop
sbb
adc
jmp
inc
push
repnz
mov
shr
lret
out
xor
daa
mov
mov
sub
std
jne
idiv
call
rcrl
and
add
scas
pop
call
or
call
xchg
push
xor
icebp
xchg
mov
jmp
mov
push
inc
xchg
push
or
jmp
fdivrs
jmp
lods
ret
mov
loop
mov
add
pop
ds
mov
add
inc
fisttpll
xor
je
inc
dec
testl
add
add
into
add
cwtl
sub
inc
out
mov
jnp
nop
mov
or
mov
or
and
jb
fdivs
and
sbb
jl
inc
imul
ds
and
inc
jno
mov
jbe
cmp
lea
popf
cmp
xor
movl
add
outsl
push
sub
inc
push
and
inc
aas
add
adc
repnz
test
mov
mov
lock
add
push
mov
arpl
insl
dec
add
pop
lea
push
add
xchg
pop
mov
jnp
xchg
bound
lcall
ljmp
enter
mov
pop
nop
mov
add
mov
dec
add
fcmovne
and
in
add
adc
adc
pop
sar
sub
add
mov
mov
lret
notb
lret
mov
lahf
add
pop
out
lret
mov
jb
mov
ds
shll
testl
lret
add
pop
int3
jmp
inc
out
enter
inc
lret
out
aaa
mov
xchg
sbb
jae
fisttps
addb
leave
dec
and
xchg
int3
out
ss
call
ja
dec
out
in
out
xchg
je
popa
dec
testl
lret
adcl
inc
jo
stos
sub
stos
and
add
inc
je
and
idivb
or
mov
fiaddl
ljmp
jl
cmp
and
sub
and
sub
and
add
pop
cmp
scas
lret
add
xchg
push
add
subl
cltd
mov
and
mov
sti
pop
cmp
shl
mov
add
add
push
mov
mov
fimuls
push
lcall
mov
push
iret
inc
xchg
push
and
cld
inc
addl
lret
notl
dec
repz
xlat
arpl
mov
xchg
and
xchg
add
and
push
and
or
push
push
insb
push
insl
push
pop
leave
push
pop
push
or
adc
add
add
add
mov
or
push
test
cli
data16
leave
stos
ret
xchg
je
fld
and
mov
fldl
push
push
push
mov
push
rcll
push
enter
mov
mov
dec
test
jb
getsec
add
jmp
loop
incl
bound
jmp
add
sub
add
add
xorl
mov
lret
sti
fdivp
mov
push
rorl
or
hlt
mov
sub
mov
jo
and
or
addb
aad
sbb
pop
fbstp
out
mov
xchg
add
lret
pop
lds
lret
jb
add
lret
out
aaa
pop
fidivrs
lods
out
stos
jecxz
das
pop
aad
mov
and
sub
mov
jb
mov
inc
add
mov
repz
mov
ret
movsl
push
add
dec
and
mov
add
out
inc
push
xchg
fwait
call
mov
or
gs
call
scas
xor
add
push
out
mov
pop
call
repnz
adc
pusha
mov
call
inc
dec
mov
cmp
jle
sbb
das
push
call
sbb
cmp
and
cmp
movsl
dec
std
aad
dec
rolb
xlat
cmp
out
decb
push
int
add
shll
or
or
push
out
inc
mov
push
inc
and
negl
scas
sldt
dec
testl
jge
jns
test
sub
decl
into
add
sahf
sbbl
dec
or
mov
or
add
pop
popa
std
push
fcomip
mov
inc
lret
fcmove
add
mov
add
mov
jge
add
xor
add
mov
scas
push
xchg
mov
add
inc
pop
mov
mov
sbb
mov
mov
dec
push
xor
je
test
iret
add
jg
adc
jb
xor
cmp
cmpsb
inc
fcomps
push
jp
jae
das
idiv
add
jae
or
inc
subb
xor
mov
add
sbb
add
ror
out
or
int3
push
test
lret
mov
loopne
lret
cmp
out
out
fimuls
int
and
mov
add
mov
lahf
add
lret
out
addb
ljmp
inc
ficoms
lods
andl
cli
repz
add
jl
out
or
out
leave
test
xchg
fcoml
pushf
or
out
jno
xlat
andb
add
sub
mov
push
add
mov
mov
scas
push
test
cmp
cwtl
jmp
push
repnz
jmp
push
pop
add
mov
mov
jmp
add
add
mov
rcll
aad
sub
push
test
mov
inc
ljmp
mov
adc
inc
std
jmp
jo
or
imul
add
shrl
cmp
mov
push
xchg
sub
xchg
rolb
add
push
and
sub
add
fwait
lret
ja
std
decl
lds
add
mov
push
lret
xchg
pop
mov
es
add
inc
mov
sub
mov
sub
push
and
lret
outsb
jne
jmp
pop
add
lret
mov
fstpl
xor
lcall
sbb
mov
dec
insl
test
ror
add
inc
jae
scas
inc
jae
fcomip
sti
lods
xchg
add
inc
sub
add
les
or
sub
xor
and
xor
add
ja
sub
mov
stos
insl
and
xor
add
jle
xchg
repnz
mov
jmp
out
test
les
add
lret
mov
add
out
popa
xor
in
jb
pop
lret
out
sub
pop
add
addl
hlt
mov
inc
je
mov
stos
out
dec
lock
push
pop
out
iret
push
rcrl
loopne
xchg
fwait
call
call
repnz
je
in
fimuls
in
xchg
out
fxch
out
sub
lret
out
sbb
add
mov
lret
add
jge
mov
rorb
cmp
jmp
fstl
int
lret
add
cmpsb
push
sbb
mov
mov
scas
aam
lods
mov
movsb
or
push
xor
add
mov
out
pop
call
inc
cltd
std
pop
add
call
add
lret
push
mul
out
pop
call
dec
cmpsl
call
into
test
inc
rolb
dec
dec
sbb
iret
or
mov
leave
mov
add
dec
jl
scas
arpl
jmp
mov
imul
addl
shrb
enter
cmp
jmp
add
sysenter
pop
add
add
mov
fbstp
pop
add
add
add
xor
pop
into
call
test
lret
sbb
cmp
add
fcompl
sbb
xor
mov
ss
loopne
sub
mov
popa
fcomps
call
mov
mov
add
lods
add
add
push
stc
or
lods
ss
stos
mov
mov
es
ds
mov
dec
mov
mov
and
xor
add
sub
mov
jle
add
push
in
or
test
xor
cmp
xor
cmp
and
add
out
xchg
in
add
sahf
fiadds
add
mov
out
cmp
out
lods
jns
add
mov
repz
jecxz
in
push
pop
mov
inc
out
mov
mov
mov
mov
jge
adc
mov
loope
jb
xor
push
cmp
sahf
fwait
or
jo
inc
insb
or
mov
call
adcb
add
add
lret
mov
inc
std
jmp
cmp
je
negl
ljmp
pop
add
mov
aas
fldcw
add
lods
mov
std
hlt
sbb
mov
leave
xor
jb
fisttpl
int
lret
add
cmp
std
cs
and
scas
lret
add
cmp
inc
sbb
add
or
and
scas
lret
add
xor
add
push
into
test
vpaddd
fistl
push
xor
subl
andl
inc
jl
in
mov
lret
stos
inc
test
in
add
movsb
and
add
testl
mov
dec
mov
add
add
lret
pop
sar
test
inc
test
divl
push
add
inc
stos
sbb
cmp
jmp
mov
int
stos
sbb
mov
adc
mov
xchg
imul
pushf
cmp
cwtl
stos
cmp
sub
in
test
imul
cmp
and
out
xor
push
add
in
lock
cmpl
add
je
addl
add
flds
add
xor
cli
fmul
cmp
inc
into
sbb
add
jb
enter
ja
mov
les
lret
out
pop
pop
adc
add
in
dec
cmp
testb
inc
pop
add
xchg
add
pop
or
mov
add
pop
dec
add
lea
mov
rcll
sbb
testb
jb
aad
pop
push
mov
push
or
inc
sti
xor
incb
mov
ljmp
fsub
add
or
mov
xchg
ret
mov
mov
push
test
inc
adc
mov
aaa
jbe
mov
bound
cmp
cmp
out
cmp
rcrb
add
fisubrs
push
jmp
sbb
jnp
lods
lret
subl
lret
mov
lret
pop
sbb
sub
cld
adc
jmp
fcmove
subl
cmp
sbb
cli
aaa
call
add
cmc
inc
add
iret
add
and
cld
xchg
and
push
and
std
pushl
mov
push
test
jge
test
pop
cmp
xor
ja
iret
add
je
push
stos
mov
decl
cs
jmp
sbb
add
dec
sbb
int
fadds
hlt
dec
dec
and
into
mov
icebp
or
cmovle
add
pop
mov
or
adc
cmp
loope
lea
int3
xlat
lods
cmpsl
frstor
mov
sbb
add
in
aad
int
cmp
dec
nop
add
cmc
mov
jl
out
dec
adc
sub
and
frstor
add
xorb
jle
and
adc
mov
add
mov
mov
sub
lods
aaa
ljmp
rorb
add
stc
xor
bound
add
lret
or
out
sub
aam
rorb
ds
daa
sbb
cld
daa
int3
imul
inc
ss
jle
in
out
dec
pop
sbb
push
inc
mov
ss
jnp
add
mov
out
cltd
inc
mov
mov
or
andb
sub
mov
mov
idivb
scas
subl
xor
jae
xchg
lret
mov
cmp
mov
inc
add
or
mov
xchg
cmp
shll
cmp
bound
sub
in
inc
add
add
mov
or
jmp
adc
or
jmp
jno
inc
test
jae
mov
andl
flds
jmp
cmpsb
flds
jmp
cmp
and
jno
fdivrl
jb
cld
inc
lahf
aad
add
outsl
ss
add
push
mov
shlb
add
lret
add
mov
outsb
imul
jbe
xor
shl
je
int
cmp
jb
dec
mov
mov
xor
sbb
adcl
pop
jb
or
or
pop
lret
ror
jmp
push
cmp
mov
nop
js
inc
add
mov
pop
scas
inc
adcb
mov
dec
cli
push
ss
or
mov
jnp
int
add
xor
decl
jge
jnp
xchg
and
cmp
mov
in
mov
lret
sub
add
xor
add
jns
xchg
push
xor
or
mov
xchg
sti
sbb
and
leave
in
push
xor
add
std
and
add
cs
rcrl
hlt
xor
std
add
dec
mov
or
lret
out
dec
int3
out
mov
movsl
in
xor
out
xor
add
xor
out
xor
sub
div
jecxz
pop
xor
out
in
add
lret
out
aam
out
mov
xor
out
lock
dec
add
in
sbb
or
rorb
mov
andl
jmp
insl
icebp
xor
jle
imul
mov
test
fldl
jmp
add
testl
imul
add
repnz
mov
xchg
ss
in
jmp
jmp
mov
cmp
xor
testl
add
cmpsl
or
mov
xor
add
pop
sti
xor
cmp
fadds
cmp
les
sbb
add
cmp
sti
movl
pushl
and
xchg
add
add
idiv
hlt
icebp
pop
insb
xchg
dec
lods
std
hlt
int
mov
mov
sbb
add
pop
xor
pushl
add
pop
fiadds
cltd
ret
fcomp
xor
inc
cmp
fldl
jmp
add
dec
add
mov
loope
test
push
sbb
push
enter
add
aad
jle
cmp
adc
cmp
push
sub
sub
cltd
adc
or
into
popf
push
mov
or
lock
pop
and
mov
and
adcb
add
pop
adc
mov
dec
incl
and
jl
jne
or
mov
lret
idivb
mov
sub
mov
xlat
adc
jecxz
jbe
xlat
mov
xlat
adc
lret
aas
xor
in
xchg
ret
mov
and
push
push
mov
sub
mov
mov
daa
add
jno
movsl
out
out
jb
stos
inc
into
out
pusha
inc
add
jecxz
outsl
xchg
iret
insb
aad
inc
aas
out
pop
xor
ret
repnz
mov
jg
xor
loop
out
sub
add
and
std
sbb
inc
outsb
cli
mov
mov
lret
xor
jbe
inc
or
add
int
repnz
jmp
lds
lds
fiadds
jmp
add
inc
and
scas
lret
add
lock
mov
mov
out
std
jmp
mov
jne
shr
rclb
jmp
mov
arpl
dec
ret
enter
icebp
sub
insb
test
jg
or
cmp
jne
cmp
fs
mov
int3
das
rorb
std
push
xchg
add
roll
loop
push
mov
fdivl
add
add
mov
ret
pop
shlb
sti
ljmp
and
sbb
xor
inc
dec
and
inc
insb
and
out
mov
xor
ljmp
fldl
dec
or
or
pop
test
xchg
or
xchg
add
xor
sbb
add
imul
and
test
adc
pop
shlb
lock
test
add
movsl
mov
xor
mov
inc
rcl
test
ljmp
mov
mov
xchg
inc
xchg
shlb
dec
mov
shrb
sbb
sti
sbb
movsl
lret
imul
mov
mov
cmpsl
ljmp
mov
add
sub
or
insb
add
lret
jno
out
push
shl
add
inc
es
sbb
shll
or
call
push
add
xchg
xlat
or
sub
scas
fldt
cmp
xchg
out
or
sidtl
sub
out
icebp
leave
sub
stos
rclb
js
and
pop
sahf
add
jno
xchg
in
push
push
in
leave
mov
fidivl
jl
loop
mov
mov
shlb
and
cld
cli
shrb
mov
pusha
jb
sub
inc
enter
shrb
decb
sub
cli
shrb
add
insl
nop
subl
and
imul
test
fs
std
mov
mov
mov
mulb
fwait
lcall
std
mov
int3
adc
bswap
and
iret
out
std
decl
push
xor
fwait
and
and
add
mov
mov
pop
or
fucomip
sub
inc
mov
cmp
les
add
in
decl
aam
add
push
je
dec
fcmovb
add
jmp
cmovle
adc
and
popl
shll
push
jmp
es
scas
jmp
lss
mov
cmp
and
fimuls
mov
xor
gs
mov
scas
add
push
or
add
xor
mov
adc
jae
jne
cmp
mov
inc
incl
fadds
or
in
fmull
mov
andb
add
jb
inc
and
in
std
adc
lods
xor
shll
xor
push
xchg
loopne
pop
mov
out
xchg
pop
jge
out
sub
aas
add
pop
sub
xor
out
jle
add
push
add
out
out
out
sarl
out
lret
je
xor
sbb
lret
jb
mov
add
mov
jo
pop
in
js
pop
push
stc
out
sub
lods
ljmp
add
sub
aas
xchg
not
lret
ss
rcrb
fldcw
add
int
sub
and
mov
lret
mov
mov
sub
jno
faddl
je
test
dec
daa
std
push
out
and
mov
lret
mov
sub
or
jmp
ss
mov
enter
adc
sub
pop
and
mov
add
out
adc
pop
out
sub
lods
dec
mov
lds
cmp
lods
dec
pop
add
xchg
call
xlat
jmp
push
lds
mov
mov
sti
cli
mov
cmp
mov
std
lcall
mov
bswap
add
cmp
call
adc
and
dec
push
mov
iret
add
nop
mov
lock
adc
add
add
jg
inc
add
int3
je
mov
cmovo
lahf
rorb
jmp
inc
push
and
lret
jmp
lods
cli
push
insb
mov
cmc
popf
cmpsb
push
mov
popa
iret
inc
icebp
stos
cmp
and
xor
add
sbb
stos
dec
mov
std
rdtsc
lock
add
add
dec
aad
std
xor
mov
add
inc
sbb
adc
mov
call
popf
xor
or
cmp
add
cmp
ret
mov
jb
sbb
add
ror
out
or
fisubl
xor
adc
sub
xor
dec
outsb
cmc
add
push
stos
pop
lret
inc
ret
or
xor
jb
sub
push
jmp
pop
pushf
add
out
iret
add
nop
jmp
mov
mov
xor
mov
rcll
out
and
sahf
inc
mov
xor
popf
mov
xchg
daa
add
push
mov
je
xchg
add
nop
add
mov
std
jmp
add
dec
push
int
dec
inc
insb
int
test
fildl
lahf
jge
mov
int
xor
icebp
dec
inc
or
mov
dec
mov
mov
or
lds
fisttpll
call
rcl
test
lret
add
out
sub
jg
and
add
fs
popf
adc
add
dec
jl
scas
iret
or
push
or
inc
out
mov
mov
pop
cmpsl
leave
jg
mov
add
xchg
or
scas
mov
decl
mov
lret
movsb
mov
iret
add
rclb
and
dec
leave
subl
jecxz
adcb
enter
repz
add
enter
in
xor
sbb
into
add
addb
mov
push
jmp
xor
es
push
call
xor
mov
mov
jge
lret
std
mov
rorl
scas
jge
repnz
add
jmp
dec
and
and
add
xor
insl
add
test
add
add
into
lret
jbe
roll
dec
aaa
in
jo
mov
jmp
clc
std
sub
xor
add
cmp
roll
and
and
lret
inc
pusha
cmpsl
dec
imul
lret
out
mov
adc
jmp
xchg
out
cmp
and
cmpsb
out
jb
out
add
inc
icebp
cmpsl
dec
or
add
lret
testb
push
pusha
dec
into
mov
xchg
add
lret
and
shrb
mov
out
and
add
jmp
or
mov
mov
xchg
mov
add
dec
xchg
daa
fcmove
fiadds
fildl
out
test
push
test
insl
and
jmp
stos
jnp
sbb
lret
mov
loop
and
mov
add
ret
push
and
mov
add
mov
dec
bound
mov
test
mov
mov
mov
call
mov
mov
adc
mov
jge
mov
mov
mov
inc
xor
icebp
dec
inc
mov
xor
dec
add
xor
mov
lahf
call
in
or
sti
unpckhps
add
stc
pop
or
mov
out
mov
int
mov
int3
add
push
xchg
std
sarb
xchg
or
addr16
das
rcrb
and
rcrl
sahf
inc
and
outsl
sti
in
mov
jmp
ffree
inc
shl
in
add
inc
mov
call
out
fildl
sbb
adc
jl
adc
mov
xor
inc
adc
or
roll
xchg
std
mov
mov
stos
sbb
inc
add
rorl
jmp
dec
add
stos
push
and
fwait
inc
and
fwait
pop
and
scas
iret
or
add
add
mov
sar
lods
decb
lea
add
es
mov
add
cmp
push
test
out
xchg
ret
out
lods
push
xchg
or
punpckldq
or
sub
mov
cmpsl
std
xor
xor
ret
sbb
add
aas
mov
sti
jbe
lcall
cld
xor
add
xchg
cld
xor
and
cmpsb
mov
jnp
out
sub
jl
popa
leave
out
sub
pop
std
ss
inc
lret
pop
incb
jmp
test
and
or
add
add
lret
divb
icebp
push
shlb
jecxz
out
ja
fdivrl
or
dec
clc
fcompl
cmp
add
sub
adc
mov
jne
mov
mov
mov
cmc
out
shlb
mov
jmp
pop
dec
cmp
cld
daa
inc
push
push
fcmovnb
test
mov
or
test
pop
insb
push
dec
mov
mov
mov
and
sbbl
add
leave
add
cltd
mov
add
sbb
addl
bound
jle
repnz
add
aad
inc
inc
mov
mov
or
xchg
insb
prefetcht0
mov
enter
mov
lods
pop
cmp
xchg
dec
inc
adc
mov
adc
add
fldl
add
sbb
ret
push
xor
add
add
repz
sbb
mov
or
sub
add
das
xor
add
xor
xchg
push
inc
xchg
adc
lock
xorl
cmp
and
cmp
sar
addb
add
add
fiaddl
inc
xor
or
imul
movsl
jmp
sub
int3
out
scas
push
popf
adc
lret
bound
xchg
mov
shrl
jo
and
aad
out
jecxz
cmpsl
jl
out
repz
arpl
sbb
outsl
cmpsl
testb
popa
loop
outsl
fildll
add
lret
bound
mov
add
add
fldt
cltd
lahf
fistl
or
jnp
out
sti
sub
lret
popf
sbb
sub
cmpsl
fiadds
popa
bnd
filds
sub
iret
inc
insl
movl
fmuls
jle
imul
shrb
sti
or
hlt
lret
out
aas
shrb
or
push
add
pusha
or
fisttps
test
in
mov
jmp
ret
and
pop
out
mov
add
icebp
mov
mov
mov
xor
mov
or
pextrw
pop
mov
xchg
add
sub
inc
mov
mov
and
sbb
ret
cmpsb
mull
mov
rorb
aaa
pop
das
adc
test
gs
mov
nop
mov
mov
adc
fistl
test
aaa
ret
out
test
inc
mov
movsb
sub
pushf
jae
and
std
lcall
aas
mov
stc
jl
mov
push
or
add
sub
and
data16
sbb
cmpsb
and
and
cmp
into
and
cs
push
sbbb
ljmp
xor
test
add
add
arpl
mov
sub
mov
and
sbb
aas
icebp
or
popf
mov
ljmp
bound
add
shll
cltd
int3
add
int3
pop
mov
mov
inc
lds
sub
mov
test
sub
out
pop
push
repnz
out
xor
insb
icebp
adc
sub
xor
add
int3
out
jb
stos
pop
jnp
out
lock
add
lret
rolb
out
or
push
out
xlat
pop
or
push
out
out
and
mov
sbb
and
cld
xchg
sbb
and
iret
add
sbb
sub
out
xor
cmc
out
adc
dec
cs
out
lret
sub
xchg
mov
call
jns
xchg
outsb
mov
mov
pop
sbb
mov
add
out
and
cmpsl
sub
stos
or
and
sub
mov
mov
pop
add
adc
push
mov
jae
cmpl
or
repnz
adcl
push
xchg
test
nop
sti
pushl
clc
or
jg
xchg
add
test
aas
inc
add
cs
push
xchg
dec
and
repnz
sti
incl
incl
test
sti
lcall
add
pushl
or
mov
rcll
in
cmc
sub
mov
rcrl
mov
loope
and
sbbb
add
add
inc
loope
lock
insl
popf
lea
out
cmp
jno
std
dec
sub
push
or
xor
cmpsb
jb
and
sbb
loope
or
adc
cmpsl
add
mov
test
sbb
inc
jo
mov
sbb
adc
mov
pop
out
add
dec
mov
mov
out
cltd
mov
scas
or
stos
xchg
cld
xchg
adc
push
mov
lret
testb
lea
or
negl
push
loop
pop
loop
not
cmp
mov
repnz
jmp
ret
sbb
mov
mov
mov
add
call
negb
in
add
lods
rolb
aam
add
adc
std
into
lahf
jo
imulb
out
mov
mov
stos
adc
imulb
sti
sahf
xchg
mov
mov
sub
push
loop
xorl
les
call
fs
stos
not
push
or
add
push
std
ss
jo
fidivs
cli
cli
es
mov
mov
mov
jp
add
and
pop
or
dec
into
sub
cmp
sbb
xchg
mov
add
sbb
cli
fmuls
jl
jb
stc
decl
jl
mov
sti
mov
call
in
add
sub
shld
add
pop
xor
dec
xor
mov
in
outsb
int
je
inc
roll
jo
adc
inc
insb
and
mov
add
sub
pop
mov
add
and
add
cmp
and
mov
icebp
xchg
and
and
add
cwtl
and
and
add
mov
add
mov
xor
idivl
or
mov
jo
cmp
std
push
cmp
pop
and
inc
in
cwtl
and
and
add
and
std
data16
and
icebp
loopne
xor
testb
push
ljmp
pop
mov
mov
sub
or
ljmp
or
mov
push
ss
add
lret
mov
jne
movsl
dec
mov
sub
add
jae
push
bound
mov
stos
add
xchg
jae
add
cltd
in
mov
call
cmpsl
mov
out
xor
push
jnp
mov
out
mov
add
lahf
inc
jmp
add
push
and
mov
add
dec
jns
pop
aad
call
inc
call
std
cmp
mov
dec
vmovsd
enter
adc
push
jl
mov
mov
mov
mov
xchg
or
jo
pop
bnd
out
pop
cmp
daa
mov
test
ret
or
xor
daa
sbb
cmpsl
dec
push
icebp
add
lret
or
test
mov
enter
mov
cli
lcall
clc
pop
inc
rcrb
mov
sub
or
ret
inc
test
leave
add
or
push
inc
mov
mov
fildl
lcall
out
add
leave
push
ljmp
in
add
xor
add
out
in
add
fwait
leave
call
jmp
mov
jne
mov
push
push
inc
movl
ret
jae
mov
inc
add
pop
int3
inc
push
cmp
mov
test
and
add
sahf
addl
pop
add
mov
test
stos
dec
jo
mov
pop
out
fsts
ss
or
int
add
fiadds
add
xchg
and
add
push
cmp
or
sahf
and
and
xchg
cltd
andb
add
sub
xlat
in
cmp
or
jl
add
ds
nop
jnp
add
je
push
into
fbstp
or
fildl
testl
add
inc
imul
lret
iret
xchg
sub
jnp
fildl
out
add
scas
inc
or
movsl
or
mov
mov
into
cmpsl
call
pop
out
out
jg
lret
aaa
jne
out
dec
es
xor
jae
xor
xchg
ljmp
call
add
mov
pop
and
or
xchg
lods
scas
mov
jno
inc
int
les
xchg
adc
sbb
lods
addr16
mov
add
mov
pop
adc
xchg
mov
stos
dec
popa
loopne
lret
mov
cmpsl
call
sarb
and
add
cmp
mov
ret
pop
push
push
int3
pop
and
dec
into
add
pop
stos
pop
add
into
sti
mov
ret
std
decl
div
and
shr
add
int3
and
pop
imul
xchg
aaa
pop
idiv
outsl
mov
lret
dec
jnp
lret
rolb
insb
jae
adc
add
mov
int
jmp
add
movsb
jl
mov
out
add
and
xchg
leave
and
mov
test
mov
fists
lods
shl
jb
lret
adcl
inc
and
mov
add
jbe
or
repnz
sarl
add
repnz
mov
add
cmp
xor
add
aad
xlat
mov
push
add
mov
and
repz
lret
std
lods
outsl
les
inc
sti
popf
dec
mov
sbb
pand
pop
push
int3
sbb
scas
inc
cli
adc
mov
mov
push
xor
mov
iret
loope
adcb
mov
sbb
scas
call
hlt
in
andb
pop
and
out
add
scas
aaa
lds
push
xlat
out
ret
stos
pop
mov
lret
out
cs
xchg
add
lret
cmpsl
mov
sbb
or
add
and
into
cmpsl
call
cs
inc
add
pop
inc
and
mov
add
mov
call
insb
jno
orl
std
bound
test
inc
out
xor
std
push
xchg
fisubs
xlat
out
xchg
xor
lods
mov
cld
push
sub
mov
lret
add
mov
fisttpl
jmp
xor
fdivs
sub
loope
and
rolb
mov
lods
pop
add
mov
inc
mov
mov
mov
mov
sar
lahf
stos
pop
add
xchg
pushf
and
aam
and
sbb
add
aas
stos
pop
add
lret
mov
fwait
xchg
jmp
orb
or
add
flds
dec
out
stc
or
add
cli
call
into
mov
add
rolb
andl
sbb
aas
cmp
cs
inc
pop
xor
shrl
sbb
mov
shll
jge
and
repz
cmp
repnz
xor
aam
das
mov
cltd
or
jge
outsb
repz
jb
sbb
pop
push
stc
or
aas
test
jmp
sbb
lods
jno
sti
aad
add
jno
mov
lret
and
stos
out
xchg
into
out
cmp
xor
lahf
add
int
sbb
add
ja
ret
das
insl
add
jle
pushf
mov
mov
xor
out
lret
inc
aas
ret
das
cmp
sbb
shll
or
ja
or
push
imul
lret
jb
clc
jle
scas
xlat
push
outsb
scas
incl
sub
in
mov
mov
mov
ret
rcr
add
cltd
mov
rolb
add
sub
push
test
testb
sahf
ret
push
aaa
cmpl
add
add
cld
adc
cmpsb
sbb
lret
std
pop
lea
add
add
add
jmp
pusha
dec
shl
ljmp
push
pop
cli
push
add
add
jno
jns
mov
mov
aad
or
jmp
push
roll
add
and
pop
push
or
or
lcall
aam
dec
push
adc
or
add
subl
mov
jmp
loopne
sbb
xor
cmp
cltd
sbb
or
test
into
add
dec
test
inc
into
add
inc
add
clc
sbb
subl
pushl
into
jg
add
test
fcmovne
add
mov
cmc
add
xor
add
out
push
sbb
sti
test
mov
incl
jmp
fs
mov
xchg
add
repnz
in
incl
icebp
pop
insb
add
and
orl
add
xor
mov
fstpt
insb
cli
jae
jne
and
repz
sbb
add
mov
pop
add
mov
and
orl
dec
jne
mov
push
mov
inc
out
mov
imul
aad
movsl
int3
rorb
into
jnp
mov
or
mov
aad
lret
push
add
aad
lret
ret
push
sbb
repz
nop
jle
inc
push
sbb
inc
call
or
lahf
call
cmp
sub
add
mov
shrl
sbb
mov
popf
mov
lea
std
jmp
mov
add
sbb
lret
call
insb
jno
test
je
std
shlb
sbb
sub
test
sub
add
mov
into
jo
cmpsl
cmp
push
xchg
xor
xchg
jno
jo
push
mov
imul
mov
shrb
sbb
stc
mov
inc
flds
xchg
dec
push
xchg
push
and
fcmove
add
jge
add
jg
pop
add
lret
imul
mov
scas
std
incl
fwait
lret
sar
aas
mov
add
arpl
lcall
call
cmp
cli
mov
sti
mov
test
inc
pop
dec
add
add
ljmp
push
lret
sub
js
into
add
lea
mov
push
or
ja
into
lock
movsb
jnp
xchg
cmp
or
jge
js
mov
mov
xchg
cmp
push
lock
scas
add
mov
test
sbb
cmc
jge
js
into
into
add
mov
xchg
and
repz
bnd
out
repnz
push
cvtps2pi
inc
repz
mov
adc
mov
xchg
and
lret
call
xor
pop
cmp
xor
xchg
inc
xchg
into
lahf
call
mov
cld
arpl
mov
cld
outsl
xchg
ds
out
int
push
int3
iret
push
imul
lret
jb
notb
mov
popf
inc
mov
xchg
and
lret
cmpsl
xor
out
cmpsl
sbb
mov
scas
nop
xchg
lahf
call
and
add
ljmp
repz
fisubl
xor
sbb
std
pop
sbb
fiadds
aad
jmp
arpl
xchg
stc
std
out
add
cld
jb
cmpsl
xor
inc
pop
add
mov
cmp
std
cld
jo
pop
add
mov
loop
js
mov
xchg
call
and
mov
or
jne
xchg
call
xchg
addr16
jmp
mov
add
and
lcall
sti
mov
mov
decl
xchg
xor
decl
idiv
jl
sbb
jl
in
sbb
add
or
inc
push
pushf
dec
and
fcmove
add
test
pop
add
into
or
add
insb
inc
lret
add
add
cwtl
cmp
inc
stos
pop
add
mov
xchg
arpl
sar
cmp
rorb
idiv
sbb
pop
cld
or
in
dec
into
add
mov
add
loop
nop
and
jecxz
add
pop
and
add
jb
mov
xor
add
mov
mov
pop
mov
add
add
add
subl
shlb
testl
lods
outsb
andb
add
repnz
mov
mov
popl
adc
add
mov
lret
daa
pop
stc
out
andl
cmp
fmulp
out
add
inc
mov
enter
jle
lcall
sub
testl
mov
arpl
push
lret
mov
fwait
es
xchg
xchg
call
ds
push
pop
lretw
scas
inc
and
out
scas
mov
mov
ljmp
lret
mov
into
nop
into
xchg
call
mov
add
subb
testb
ds
mov
jl,pn
testb
mov
push
outsb
inc
scas
pop
call
jae
std
popf
rclb
mov
addr16
jmp
mov
add
and
call
xchg
clc
cld
jmp
or
std
xor
or
out
add
cld
out
inc
test
push
push
pushf
jmp
dec
sbb
hlt
xor
xchg
mov
dec
mov
call
pop
add
or
outsl
scas
std
decl
mov
sti
sahf
inc
add
add
into
movsl
sti
mov
mov
sar
jg
pop
add
lret
dec
mov
or
add
add
dec
jle
mov
ret
inc
inc
push
cld
mov
mov
ja
pushf
lret
lret
pop
xor
das
push
sti
jmp
inc
add
xor
push
push
jl
and
leave
sub
jns
mov
cmp
movsl
sahf
inc
add
inc
cld
or
cmp
jns
xchg
mov
add
outsb
adc
xor
mov
cmp
dec
cmp
xor
cli
adc
and
mov
add
xchg
jns
mov
pop
inc
cmp
dec
mov
jle
daa
out
cli
fwait
ret
popf
int3
jb
into
fwait
test
mov
dec
mov
into
out
daa
add
push
add
insl
cmc
out
scas
daa
jnp
scas
pop
jp
lret
push
add
or
add
in
test
mov
jb
xchg
call
aas
mov
mov
sub
or
into
xchg
call
jae
cmpsl
add
lret
mov
push
mov
xor
scas
fwait
add
push
std
out
lods
or
jo
scas
sub
ja
test
add
idiv
mov
lret
subl
idiv
sbb
inc
inc
test
lret
add
scas
push
test
leave
push
jle
scas
push
jbe
std
aam
fldl
sarb
jmp
adc
loop
leave
out
ljmp
popf
stos
cmpsb
mov
int
out
lock
cld
bound
dec
pop
add
scas
rolb
movl
jmp
xchg
inc
and
and
repnz
push
xchg
xchg
test
into
dec
and
dec
iret
add
and
test
cs
sti
incl
pop
inc
dec
and
std
sub
xchg
xchg
test
sahf
dec
and
sbb
add
sarl
pop
inc
add
cli
mov
cmpsl
sahf
or
jge
mov
repnz
in
add
in
add
in
add
in
add
in
push
repz
push
repz
push
repz
push
repz
add
repz
push
repz
add
repz
add
in
add
repz
or
in
or
jae
or
jae
mov
sti
jb
aas
add
ljmp
in
or
les
jae
testl
jae
fmull
jae
out
mov
mov
icebp
test
mov
mov
mov
sbb
cmpsl
mov
popa
mov
mov
xor
mov
clc
ret
mov
sbb
rorb
sub
mov
xor
mov
cmp
mov
pop
lods
mov
sbb
mov
ret
and
out
mov
out
adc
mov
cmpsl
or
cwtl
testl
add
jmp
jns
aas
jmp
push
test
jmp
inc
lods
aas
jmp
add
test
aas
jmp
sub
aas
jmp
and
jmp
lods
ret
pop
repz
rorl
popf
fcoml
fmulp
fcomps
loop
rcrb
sarb
into
and
adc
and
or
daa
add
fisubs
sub
loope
dec
add
orb
orb
subl
ss
repz
cmp
dec
dec
push
test
ds
cmp
inc
int3
dec
dec
sti
cmp
pop
std
adc
mov
adc
push
adc
out
inc
pop
and
inc
dec
lods
cmovno
cmovno
adc
inc
sbb
and
mov
cmovno
sbb
adc
mov
insl
adc
in
sbb
push
pop
jae
inc
pop
jae
and
jae
mov
jae
push
jae
fists
jae
cmp
repz
and
in
and
in
adc
repz
sbb
in
sbb
in
sbb
in
and
in
and
in
and
in
and
in
and
in
and
repz
and
in
and
in
and
xlat
and
xlat
and
xor
jae
rcrl
lret
out
movsl
mov
scas
popf
mov
add
mov
sbb
call
call
sub
push
int
out
jbe
jecxz
xor
repz
fwait
out
in
cltd
push
cld
inc
xor
add
out
jecxz
ljmp
in
jno
add
nop
add
nop
or
sub
add
xor
or
sub
add
or
pop
mov
adc
stos
lret
out
das
mov
out
repnz
add
cmp
int
lret
add
push
test
call
xor
or
jmp
mov
out
mov
xchg
ljmp
add
add
mov
inc
mov
mov
lret
add
add
insb
sub
insl
cmp
jo
cmpsl
insb
xor
xchg
aaa
and
lea
call
sbb
and
movl
add
add
mov
jmp
jmp
add
mov
and
lret
mov
rolb
xlat
inc
loopne
inc
mov
int3
js
or
aaa
incl
ja
add
mov
mov
popa
adc
adc
xor
mov
jmp
unpcklps
mov
dec
dec
adc
add
test
rolb
add
push
and
mov
add
cmp
iret
add
adc
adc
jno
mov
hlt
add
fnstenv
hlt
lea
mov
add
imul
cmc
add
cmp
or
sub
frstor
cmp
mov
fadd
call
adc
inc
stos
xor
xchg
fs
mov
mov
add
jecxz
sub
xorl
test
stos
scas
cmpsb
mov
scas
pop
add
lret
gs
push
arpl
cmp
out
cmp
mov
scas
xchg
lret
into
sub
push
sub
fucomp
out
dec
int
or
cli
mov
mov
jo
mov
out
mov
mov
loopne
int3
out
add
lret
out
inc
mov
add
arpl
and
scas
test
mov
int3
add
mov
jo
lock
mov
add
push
mov
jmp
aam
subl
repz
push
or
gs
add
mov
or
pop
mov
jmp
add
int3
mov
stos
mov
jmp
movsb
call
aaa
mov
lret
xor
aad
cmp
mov
add
movsb
add
add
jae
cwtl
int
add
andl
arpl
pop
int3
add
inc
or
mov
sub
sbb
mov
push
int3
add
or
or
or
test
add
add
stos
jge
xchg
iret
add
aad
xchg
lcall
add
lret
add
pop
or
cmp
inc
and
iret
add
lret
push
dec
and
xor
loopne
pop
test
lret
add
adc
lcall
notl
inc
mov
mov
mov
sub
fwait
pop
add
cli
mov
mov
leave
mov
cmp
fbstp
mov
mov
insb
and
jae
cli
mov
and
add
cmp
fstpl
xor
daa
mov
add
leave
add
pop
std
cmp
cmp
push
movsl
mov
add
mov
orl
cld
mov
aas
mov
out
scas
cmp
scas
nop
jmp
orb
es
mov
out
dec
pop
ficompl
cmc
loop
clc
pop
lret
out
mov
ljmp
dec
jle
mov
pop
sbb
frstor
xchg
imul
jg
dec
xchg
ret
push
mov
cmpsl
pop
mov
lret
addr16
add
cld
daa
lods
stos
dec
pop
add
nop
add
lds
pop
rclb
std
scas
adc
lock
add
jge
mov
movsb
mov
jo
pop
push
in
and
push
aad
sub
movsl
roll
call
adc
call
std
push
xchg
or
cmp
cmc
add
push
jae
sub
push
mov
add
add
mov
add
in
jo
lcall
bound
add
pop
mov
add
mov
add
add
mov
cld
jae
fs
cmp
pushf
dec
test
mov
and
jns
iret
mov
and
enter
mull
xchg
inc
and
leave
add
cmp
push
mov
cmc
inc
and
mov
je
inc
nop
std
cmp
in
jno
nop
aaa
cli
sbb
insb
ja
xchg
cmc
xchg
movsl
outsl
mov
dec
into
add
push
into
mov
xor
cmc
add
sub
mov
movsb
pop
inc
and
icebp
jbe
mov
lds
mov
in
hlt
mov
hlt
add
movsl
jo
add
out
out
cmc
add
xor
in
mov
add
mov
xchg
add
add
mov
test
repz
jns
add
mov
push
sbb
aaa
into
cmpsb
push
out
lret
out
add
ss
cmpsl
fs
jae
mov
cmpsl
lahf
add
lret
jb
cmp
mov
jl
cmpsl
inc
xchg
stc
pushf
fwait
push
imul
lret
out
sub
loop
mov
cld
pusha
push
fadds
push
add
int3
mov
into
pop
fildl
je
push
adc
call
sub
pop
xor
incl
inc
mov
push
loop
in
in
pushf
scas
movsb
cmc
lcall
inc
bound
test
jo
cmpsl
sbb
pop
pop
jae
and
lret
jae
out
ja
sub
or
cmpsl
inc
jmp
push
cli
or
fwait
test
adc
xor
das
pusha
and
mov
push
rclb
sbbl
cmpsl
cmp
add
aas
mov
push
and
sti
push
sbb
daa
pop
lock
mov
pop
fcmovne
or
call
aaa
lret
stc
sbb
add
prefetcht1
dec
and
pop
xchg
and
int3
add
dec
inc
push
push
push
sbb
out
and
stos
lds
push
popf
fs
mov
repz
pop
int3
test
pop
insb
and
repz
sub
push
xor
movsb
or
add
inc
and
push
rorb
push
and
or
add
push
aad
incl
add
xor
cmp
lods
std
mov
add
mov
add
fildll
xchg
incb
jmp
cmp
add
mov
aas
ja
mov
leave
and
inc
sarl
mov
icebp
cld
mov
xchg
enter
ret
adc
push
sub
jp
or
fiadds
mov
rorl
imul
es
out
mov
adc
cmpsl
lret
jp
mov
ljmp
mov
cmpb
out
add
test
jmp
xor
out
mov
cld
jmp
test
xor
out
mov
mov
std
cs
add
pop
call
leave
lret
icebp
ss
push
sub
popf
aad
add
pop
sti
subb
adc
xor
call
call
cmp
loop
cmpsl
add
xchg
cmpsl
push
push
cs
pop
add
fsubrp
xlat
pop
loop
push
je
mov
or
push
pushf
add
cwtl
jno
shl
xchg
adcl
mov
fisttps
ljmp
bound
test
call
pop
std
cld
in
inc
jmp
sub
lret
aaa
push
dec
add
dec
int
into
dec
cmpsl
cwtl
inc
and
add
jnp
add
xor
add
xchg
pop
mov
inc
popa
mov
in
mov
in
cmp
and
out
xchg
insb
mov
arpl
leave
push
and
je
repz
je
arpl
jmp
arpl
inc
shlb
mov
add
in
add
xchg
std
cwtl
and
movb
add
mov
pop
push
cmp
out
rorb
enter
cltd
add
int
mov
jge
out
jge
sbb
jle
into
mov
mov
je
inc
repnz
cmp
pop
mov
add
push
repnz
cltd
jle
scas
mov
add
dec
xchg
dec
pop
or
dec
jg
icebp
add
mov
or
add
dec
xor
pushl
add
sub
jmp
pop
mov
lds
push
std
mov
inc
imul
cmp
sub
mul
jnp
mulb
add
addl
stos
shl
inc
mov
lcall
mov
pop
insb
pop
xlat
cmp
lret
sarl
or
ret
pop
mov
or
inc
add
sbb
adc
lret
roll
shlb
les
fwait
ss
push
xor
push
xorb
sbb
inc
cmpsl
add
addr16
out
dec
sub
xchg
repnz
insb
les
pop
add
loop
inc
jmp
jo
rcrb
mov
mov
add
add
iret
insb
negb
outsb
mov
scas
sbb
mov
cld
jmp
mov
lock
subb
test
xchg
fdivs
test
mov
pop
mov
sbb
ret
push
mov
push
lahf
push
xlat
adc
jno
xlat
sbb
pop
xor
or
push
add
jmp
push
push
fimull
mov
stos
incl
in
loopne
or
xchg
and
add
push
call
dec
sarl
lret
int3
add
fcmove
xchg
inc
mov
add
fwait
int3
or
push
inc
jno
push
push
or
push
jno
jo
je
push
fldcw
pop
int3
add
dec
jp
adc
enter
mov
psubusb
cli
dec
std
mov
ja
je
sub
mov
push
pop
push
jmp
test
jnp
div
xchg
outsb
push
add
and
stc
pop
mov
add
xchg
out
add
mov
cmp
sar
push
popa
cmp
add
xor
sbb
inc
fstpl
add
test
sub
in
pop
sbb
dec
sub
add
mov
add
add
dec
std
lret
inc
push
repnz
push
mov
mov
rolb
orl
inc
mov
dec
lock
out
sbb
nop
ret
decl
bound
lret
sti
add
call
lods
inc
lock
out
popf
jnp
add
mov
xchg
add
cmpsl
sbb
int
dec
sub
imul
arpl
repnz
es
jecxz
or
rcr
ret
fmull
jb
outsl
lea
call
mov
incl
jl
jb
orb
cmpsb
xorl
pop
adc
pop
sub
popf
test
inc
inc
jmp
add
mov
call
add
jmp
xchg
out
jle
daa
lea
mov
add
or
call
cmp
push
mov
fcomps
call
jno
xlat
xchg
out
jb
loope
jge
sbb
mov
leave
pop
pop
xorl
mov
dec
leave
sti
jno
xor
sbb
add
or
inc
mov
add
add
je
pop
pop
dec
push
insb
movsl
and
add
add
sub
sbb
fcomps
sar
push
sub
and
nop
sbb
outsb
push
lret
or
add
pop
sahf
push
aad
mov
xor
lret
data16
ret
inc
or
cld
dec
push
pop
mov
cld
push
and
call
notb
add
aaa
xlat
xchg
mov
loop
movb
add
add
mov
mov
cld
ds
add
xor
push
and
add
jno
in
xor
clc
push
fstpl
or
adc
dec
xor
dec
sub
mov
add
sub
mov
pop
inc
add
scas
cwtl
xchg
cs
fcomi
mov
lods
push
mov
add
fiadds
je
pushf
lea
sbb
and
icebp
mov
int3
pushf
pop
rorb
push
inc
int
inc
jne
jecxz
loope
adc
icebp
ret
lcall
je
xchg
inc
xchg
jae
lret
out
neg
imul
int
push
and
mov
cmp
inc
add
pusha
inc
movsl
stos
jno
call
jmp
xor
std
pop
lods
dec
jo
scas
dec
jl
mov
jb
xchg
mov
pop
aaa
xchg
mov
xchg
add
test
mov
rorb
mov
aaa
cmpsl
leave
rolb
push
push
lcall
pop
fcomip
lret
andl
in
mov
and
or
std
push
inc
shr
sub
incl
inc
inc
jmp
pusha
ja
sar
sar
fs
push
jnp
lret
mov
je
adc
outsb
mov
sar
gs
push
arpl
jae
es
int
jmp
inc
inc
fs
adc
jae
add
push
lcall
fucom
in
or
add
pop
fs
add
xchg
sbb
fs
jle
int3
jle
enter
jbe
xchg
inc
and
mov
lock
pop
mov
inc
les
ret
idivl
enter
mov
jp
mov
and
std
mov
mov
nop
mov
add
jbe
mov
incb
sub
or
pop
mov
sbb
jae
sti
cmp
add
or
mov
loop
clc
scas
jbe
xchg
jb
inc
lcall
add
mov
pop
lock
add
xor
jbe
or
sub
dec
jmp
pop
pop
lock
push
sub
dec
add
inc
cmpsl
add
jb
add
ds
je
lret
out
cmp
jle
lods
and
adc
jp
mov
fwait
out
jne
cli
push
out
out
cmpsl
iret
mov
fstpl
mov
cmp
mov
xorb
xchg
push
sub
mov
jb
add
scas
ds
fmul
mov
out
ret
out
push
push
add
sti
scas
andl
mov
roll
lods
lret
sub
movsl
inc
jns
aam
adc
clc
mov
data16
into
cld
push
mov
push
mov
fidivl
jmp
fisttpll
pop
pushf
cwtl
jbe
loope
jne
clc
lcall
jno
test
cld
int
inc
jmp
in
insb
rcll
fsubp
fnsave
cmpsl
or
popf
enter
push
dec
call
lock
lds
ffree
add
lds
push
or
std
je
adc
dec
vdivsd
inc
inc
add
or
shlb
or
or
add
lret
or
outsl
lcall
pop
cltd
push
push
xor
dec
incl
push
inc
dec
inc
sarb
inc
cld
xchg
or
sub
xchg
push
nop
adc
jmp
iret
mov
leave
test
mov
or
xchg
fwait
adc
inc
add
push
xchg
pop
cmp
mov
in
xor
or
jne
or
cmp
lcall
mov
cmc
aas
mov
xchg
addl
or
out
decb
lods
xchg
inc
or
dec
mov
jecxz
add
ss
add
cmc
out
pop
mov
add
and
cmp
orl
lret
in
mov
jne
mov
add
fistl
mov
int3
xchg
pop
cmpsl
negl
mov
mov
inc
xchg
add
sbb
mov
sub
jg
outsl
adc
add
cmpsl
xchg
add
je
lahf
mov
sub
and
cmc
sbb
cs
lahf
inc
jmp
sub
add
push
lods
stos
xor
jmp
mov
cld
cmpsb
mov
out
and
sbb
lret
mov
lcall
icebp
ds
sbb
add
add
das
sub
xchg
shlb
or
jmp
es
or
insb
jmp
jg
mov
lret
xor
push
cmp
and
stc
cmpsl
dec
test
adcl
inc
push
hlt
call
mov
xchg
out
jg
ffreep
jl
mov
or
add
xor
or
xchg
jne
popa
mov
jl
or
adc
rcr
jg
pop
jo
adc
add
movsl
pop
shr
jnp
add
add
enter
push
or
push
mov
or
loop
ds
xor
ror
iret
ret
sar
incl
mov
xchg
or
jle
in
xorl
xor
std
mov
lea
cmp
std
mov
lea
cmp
popa
roll
std
mov
and
call
out
loopne
add
jl
add
xchg
or
mov
jle
pop
or
cmp
test
cmp
jns
add
mov
fdivs
fstpl
add
dec
cmp
addl
rorl
lret
jmp
xchg
mov
popa
add
lret
outsb
or
sbb
add
outsl
dec
call
add
int3
mov
iret
je
scas
sbb
add
cltd
subb
ds
push
sub
addr16
ljmp
mov
pop
push
int3
jmp
sub
mov
adc
out
inc
xchg
fcmovb
add
aam
pop
mov
out
gs
jne
add
xchg
jmp
out
mov
push
mov
jg
cmp
push
sarl
add
cmp
add
mov
pop
mov
xchg
mov
pop
mov
mov
xor
push
push
lds
jmp
push
push
adc
mov
mov
jp
add
pusha
xchg
lock
cld
jmp
add
ficoms
lahf
jecxz
add
clc
inc
mov
lret
rcr
and
enter
mov
add
or
add
lret
clc
leave
add
push
mov
inc
sbb
adc
or
cmp
inc
adc
fistl
call
mov
pop
js
fisttpl
cmpsl
ja
loopne
leave
xchg
dec
addl
add
add
pop
mov
jmp
mov
dec
fidivl
jne
jg
add
int3
fiadds
sub
clc
movsl
cmp
sub
lods
mov
mov
mov
xchg
fmull
xor
mov
mov
xor
mov
inc
inc
lahf
mov
movb
mov
add
jmp
sub
or
mov
adc
add
add
add
mov
add
adcl
int
rorb
add
mov
pop
into
cmpsb
or
pushf
bound
int
lret
aaa
gs
les
mov
incb
mov
cmp
dec
imul
loope
cli
aas
fisttps
ds
mov
sbb
inc
xchg
adc
add
sti
sarl
leave
jmp
xchg
shl
dec
mov
std
or
or
jle
dec
scas
sbb
push
xor
jo
or
jl
iret
add
leave
jmp
fwait
sbb
aad
sub
jmp
scas
call
out
jmp
inc
rorl
mov
jge
add
in
sub
add
or
cld
out
es
cmp
adc
jmp
push
dec
sbb
gs
call
stos
or
jmp
dec
cwtl
or
mov
shlb
mov
in
mov
in
cmc
jl
push
push
pushf
and
or
mov
fldt
push
add
mov
mov
ja
adc
aas
mov
adc
adc
push
cli
and
loopne
jmp
lea
mov
lcall
push
inc
pop
dec
push
and
push
mov
into
xchg
clc
push
fbstp
movsl
pop
or
xchg
std
je
ret
std
je
mov
dec
lea
std
call
orl
cmp
fcmovne
add
add
into
push
lcall
mov
fsubrs
incb
test
mov
add
mov
mov
mov
jae
test
add
cli
sbb
pop
push
pop
fdivrs
dec
add
mov
clc
aaa
stos
adc
cmp
xor
jb
push
adc
call
or
pop
jge
mov
or
mov
aaa
dec
adc
popa
mov
sbb
repnz
mov
inc
je
mov
inc
cwtl
sub
insl
in
sbb
add
or
dec
mov
loope
mov
sub
pop
scas
jnp
pushf
mov
push
jmp
aas
dec
lret
sbb
dec
es
jae
outsl
lahf
xor
xchg
fcompl
add
add
lret
jmp
stc
fnstenv
ret
lret
jbe
in
repnz
jmp
pop
fcomip
inc
mov
fwait
stc
mov
xor
mov
stos
pushl
pop
jmp
into
scas
lret
add
out
mov
out
leave
inc
mov
mov
inc
xor
lret
add
out
jmp
add
jmpw
or
mov
xchg
mov
in
aas
cld
mov
jno
jg
adc
insb
jb
push
push
or
or
ret
add
ss
push
leave
ret
ret
incl
mov
aad
test
sbb
addb
and
or
mov
add
lds
add
push
popa
rolb
and
push
cmpsb
xor
push
cmpsb
sbb
mov
add
push
cli
std
jbe
mov
stos
in
scas
dec
decb
addb
decl
sahf
add
inc
rorl
mov
dec
and
bound
or
mov
xchg
inc
push
push
push
jne
pusha
insl
andb
add
mov
loopne
pop
add
inc
mov
shlb
pop
dec
and
cwtl
lret
push
hlt
pop
mov
lahf
jnp
into
rcrb
jno
cmp
call
lret
add
data16
lahf
sahf
icebp
aas
mov
add
xor
pop
in
sbb
lcall
imull
mov
pop
lock
inc
popa
xlat
xor
out
call
and
lret
xchg
in
mov
es
mov
mov
insl
ret
and
mov
lock
mov
lds
pusha
stos
fwait
cmp
iret
leave
sub
std
jle
cmc
mov
jle
call
jmp
testb
add
add
push
in
and
rcl
js
leave
or
out
adc
push
addr16
ret
push
std
xor
sub
pop
push
call
rcl
lea
rcl
call
insb
divb
push
bound
adc
jp
pop
bound
lcall
or
call
xorb
add
mov
xchg
leave
sbb
xor
inc
sub
dec
in
sub
push
dec
lds
xor
mov
mov
xchg
or
mov
repz
xchg
add
jmp
push
inc
inc
add
mov
xlat
repz
hlt
call
inc
and
cmp
mov
stos
sbb
stos
adc
add
into
add
cwtl
je
dec
scas
stos
xchg
xor
adc
and
adc
and
add
dec
scas
mov
addb
into
add
mov
in
xor
cmp
pop
mov
cmpsb
dec
into
add
adc
add
mov
movsb
add
icebp
int3
mov
lock
das
add
add
mov
inc
and
aam
lds
sarb
cmp
xchg
imul
int3
mov
call
cmp
mov
ja
faddp
inc
into
push
add
cli
mov
jne
mov
xchg
push
sub
pushf
dec
icebp
mov
in
mov
xchg
mov
mov
sbbb
add
add
sahf
cmp
cbtw
fadds
loopne
dec
ror
clts
cmc
cld
movsl
idivb
aad
xchg
or
out
int
jbe
add
jae
test
jp
out
leave
jp
out
in
in
addr16
mov
add
int3
mov
jl
mov
pusha
stos
sub
jmp
pushf
cmpsb
pop
jmp
add
sub
es
jmp
mov
mov
jecxz
add
lods
enter
idivl
mov
pop
pop
add
add
sbb
lea
testl
in
dec
out
cmp
lea
jne
add
in
dec
out
sbb
lea
adc
jbe
in
dec
out
add
int3
shl
hlt
cltd
inc
inc
jno
fsubs
mov
ret
xchg
dec
adc
jo
rclb
sbb
mov
mov
aaa
shll
push
nop
pop
cmp
add
adc
mov
xor
ror
or
arpl
dec
mov
cld
cmp
ret
loop
add
movl
lret
mov
mov
ja
add
bound
fcmovnbe
or
mov
pop
enter
xorl
pop
inc
iret
je
lret
and
add
jmp
jg
dec
es
test
das
pusha
je
movsb
inc
jg
movsb
add
mov
loope
push
sub
or
lcall
add
add
add
incb
add
fs
cmp
push
pushl
mov
cld
push
cmp
inc
stos
in
cmp
stos
and
pushl
int
add
cmp
add
push
ljmp
mov
test
adcb
sub
mov
mov
out
enter
dec
push
sub
mov
xor
ljmp
push
push
out
adc
adc
insb
mov
add
js
ret
and
aad
add
out
out
test
fcmovnu
inc
mov
in
inc
rorl
std
xchg
out
mov
sub
mov
jns
sbb
cmp
mulb
retw
add
pop
les
scas
clc
push
lret
or
ret
add
jae
or
movsb
into
mov
adc
inc
in
enter
lret
add
divb
add
add
cmp
cmp
push
xor
adc
icebp
mov
mov
rol
sub
xchg
pushf
cltd
cmp
cmp
or
icebp
das
test
mov
jmp
add
mov
add
aad
or
cltd
scas
adc
xchg
lea
jmp
dec
inc
dec
or
mov
je
add
mov
xor
push
xor
pop
mov
iret
je
xor
xchg
lahf
std
jne
mov
std
adc
cwtl
add
sbb
add
sahf
dec
jne
fdivr
xchg
lock
shlb
mov
inc
addl
aas
or
mov
dec
in
or
xchg
dec
lea
stos
jmp
pop
dec
hlt
mov
stc
or
or
cs
adc
push
xchg
dec
pop
or
cld
dec
jmp
mov
dec
cmpsb
fldenv
dec
je
inc
lret
cmp
loope
add
in
add
mov
push
or
push
sub
call
fsub
sub
mov
or
mov
or
xor
push
pop
stc
mul
push
xor
jmp
adc
mov
inc
xor
jo
sarl
loop
xor
neg
inc
lods
pop
xor
push
sbb
mov
iret
jmp
shrl
into
mov
mov
leave
andb
or
cmp
imul
add
or
mov
aaa
or
jbe
loope
fnsave
shrl
xchg
inc
dec
lret
xchg
adc
movb
inc
and
insl
in
adc
add
or
mov
movsl
mov
cld
cmpsl
push
adc
vpxor
add
int
jmp
mov
add
pop
mov
mov
xor
js
icebp
scas
mov
int
jmp
or
sti
cld
mov
mov
push
mov
stos
add
jne
ret
scas
lret
xchg
add
add
orb
jmp
and
add
int
add
inc
sub
fwait
lret
mov
cmp
inc
in
call
movsl
andl
dec
mov
mov
lret
mov
insl
or
in
mov
jecxz
lcall
push
add
mov
or
inc
lds
lret
mov
insl
and
add
lret
push
mov
aaa
repz
fidivl
jne
sti
pop
mov
lret
test
or
jae
jle
inc
mov
rcrb
jg
mov
xchg
dec
mov
movsb
adc
mov
aaa
xor
adc
cmc
lea
add
test
push
in
repz
mov
call
add
inc
add
mulb
add
mov
adc
push
add
fstpl
call
lea
inc
pop
lock
stc
and
enter
lret
int
lret
add
cs
jne
in
add
aas
push
xor
fdivs
push
jne
insl
jbe
out
mov
fsubp
loope
outsl
movsb
fistl
push
lods
xchg
mov
pushw
inc
lods
mov
inc
cmpsb
lret
mov
mov
fst
cmp
jmp
xorb
fs
lods
fstpt
pop
pop
xor
aaa
loopne
add
lods
cld
jmp
fnstcw
and
jmp
add
mov
jne
lods
inc
into
sbb
scas
mov
mov
add
mov
xchg
lcall
jmp
lret
push
hlt
mov
test
pop
aad
add
cmp
sbb
xor
inc
rorb
adc
mov
adc
add
add
add
fidivrl
test
xor
lcall
adc
call
iret
cmp
mov
pop
sub
mov
cmp
aad
push
pop
and
iret
cmp
jne
mov
iret
push
mov
push
decl
pop
enter
sbb
add
sti
jmp
jmp
and
and
push
outsl
mov
add
jbe
add
sbb
add
repz
mov
dec
icebp
or
xor
jl
push
xchg
xor
inc
mov
xorl
push
jne
add
jp
add
push
cmp
hlt
add
cmp
fs
fcompl
add
mov
daa
adc
or
xor
or
lret
flds
in
out
imul
add
mov
push
jl
xor
add
pop
loop
mov
lret
xchg
mov
int3
jmp
xlat
jb
outsb
push
mov
fs
xchg
mov
add
sti
push
setb
insl
pop
aam
divb
stos
xor
sub
leave
jne
mov
cmp
mov
push
test
inc
mov
adc
mov
xchg
rclb
bound
movsb
dec
sub
xlat
or
mov
push
pop
jecxz
call
add
mov
and
sub
jg
lods
cmpsb
push
andl
sbb
sbb
mov
jmp
lret
dec
fs
and
leave
add
call
stos
sti
sti
aam
mov
or
jno
push
pop
in
jmp
add
xchg
mov
int3
xchg
push
push
add
mov
jg
cld
push
cld
mov
addl
shll
mov
idivl
and
xchg
add
jnp
push
sub
and
lret
iret
addl
shll
mov
imul
pop
push
inc
and
jnp
sub
incl
push
popa
cmpsl
dec
push
jl
lods
adc
lret
addl
femms
test
repz
iret
push
mov
cmovo
jns
std
std
sub
mov
add
insl
pushf
jae
cmpsb
lahf
sar
jge
jmp
xor
inc
mov
xor
test
call
jge
pop
cmp
ljmp
fs
std
nop
sar
cmpsl
pop
adc
aaa
inc
je
fs
push
mov
incl
add
jb
xchg
jbe
cld
ret
sub
adc
push
out
push
cs
mov
scas
pop
stos
sub
sub
push
sub
pop
stos
add
ja
addl
into
dec
stos
add
jecxz
add
int3
loope
sarl
add
sub
out
mov
jmp
lea
xor
jmp
sbb
add
mov
cmp
movsl
mov
mov
push
mov
outsb
test
jmp
clc
mov
jmp
cmpsl
lret
add
add
mov
cld
jmp
mov
add
pop
add
call
mov
xchg
je
loope
inc
inc
or
leave
dec
insl
sub
ret
pusha
push
sub
jmp
or
xor
jbe
fists
insb
fistps
inc
mov
mov
mov
movsl
cld
add
shll
inc
sbb
lcall
adc
push
xchg
add
movsb
ja
add
sbb
std
adc
adc
fiaddl
pop
xchg
sti
fisttpl
push
in
xchg
xchg
jns
pop
pop
adc
push
push
sub
sbb
lds
jne
and
sbb
outsb
call
inc
fwait
dec
jnp
mov
cmp
cld
jae
push
jae
add
cmpb
outsl
je
adc
add
insb
adc
repnz
jle
mov
add
ss
lss
std
cld
movsb
movsb
outsl
adc
movsl
sar
mov
je
mov
repnz
mov
in
mov
inc
je
in
mov
mov
add
jg
adc
jnp
pop
mov
add
jne
add
push
rol
hlt
add
xor
add
je
les
jbe
sar
sub
loopne
jne
mov
out
out
data16
mov
int3
jmp
and
mov
aad
repnz
hlt
add
mov
mov
ljmp
dec
je
add
ljmp
add
inc
cmp
repz
push
jno
dec
ljmp
dec
inc
sub
rcrl
add
flds
sbb
dec
nop
movsl
add
imul
push
jne
out
xchg
jmp
or
inc
xchg
mov
push
les
imul
mov
pushl
push
inc
clc
jle
test
int3
add
add
xchg
cmp
jmp
jbe
mov
add
inc
pop
call
hlt
cwtl
test
lods
pop
add
int
daa
mov
mov
add
movl
ljmp
add
adc
add
mov
add
sbb
shlb
test
xor
and
push
jno
push
incl
int3
cmovo
sbb
je
inc
js
dec
cltd
inc
push
and
jb
inc
aaa
loop
xor
or
xchg
jle
lea
std
cld
incb
lret
shlb
js
xchg
cld
xor
and
call
pop
or
sbb
push
jmp
stos
xor
cmp
pop
out
inc
insb
pop
imul
mov
add
xchg
mov
aas
add
popa
and
cmp
lds
sub
mov
inc
add
add
popa
orl
jo
xchg
getsec
jae
push
das
jo
dec
sub
call
pop
mov
cld
and
add
push
cmpsb
hlt
add
mov
sbb
cmpsl
hlt
add
repnz
mov
lret
cltd
pop
lahf
sahf
mov
add
push
cltd
cmp
cmp
jge
ljmp
sahf
ljmp
sahf
pop
mov
in
out
jp
imulb
dec
jo
add
lret
inc
mov
leave
jmp
sbb
out
mov
jmp
add
movsb
sti
pop
xchg
mov
aad
ret
or
xor
stc
insb
cwtl
mov
add
mov
pop
mov
das
int3
jmp
popa
mov
add
fnstcw
or
sbbb
pop
ficompl
pop
addl
test
mov
sti
cld
xchg
mov
or
notb
add
xor
add
mov
push
or
mov
call
insb
sub
sub
lret
push
mov
add
enter
stos
cld
sub
pop
and
imul
sahf
cld
fs
data16
pop
push
inc
test
inc
enter
sti
mov
add
add
mov
fwait
enter
pusha
xchg
push
iret
repz
push
enter
pop
in
add
xorl
movsb
xchg
leave
add
add
mov
and
mov
adc
mov
mov
and
idiv
je
xlat
std
int
and
or
push
xor
adc
fldt
adc
xchg
jmp
xorb
addr16
mov
andl
push
and
movsl
add
sub
and
aas
jmp
cmp
testb
add
loopne
add
testb
xor
add
test
jne
arpl
sub
loopne
add
jbe
sub
andb
jbe
rorb
add
lods
mov
add
jns
xchg
add
mov
mov
roll
inc
inc
addl
push
mov
pop
dec
add
xchg
mov
insb
add
xchg
mov
xor
add
xchg
jmp
add
mov
gs
dec
cld
add
lret
data16
mov
inc
pslld
data16
out
loope
jb
clc
jle
out
and
add
adc
mov
xchg
adc
mov
fwait
shl
mov
add
in
in
adc
mov
and
lret
cmp
jmp
iret
add
mov
mov
mov
add
sbbl
jo
in
adc
xchg
or
test
add
mov
push
jle
out
adc
scas
push
inc
lds
loopne
add
mov
adc
or
mov
push
lahf
add
add
add
or
push
cltd
or
leave
lret
add
xchg
and
add
xor
je
sbb
sti
jg
call
and
inc
fistl
rorl
insl
add
lret
and
mov
and
sbb
xchg
orb
jnp
je
call
push
jmp
xor
xchg
adc
add
insl
test
addr16
xor
lock
push
incl
test
inc
sbb
jmp
push
sbb
rcll
sti
pushl
scas
or
mov
stc
mov
sub
repz
xchg
sbb
mov
shll
arpl
sub
and
add
dec
mov
or
ljmp
leave
and
je
incl
lea
stc
cld
mov
inc
adc
mov
xor
inc
mov
adc
shl
xor
pop
cmp
lret
movsb
rorl
cmp
fsubrs
movsb
cld
jae
or
mov
lret
int
or
dec
mov
jnp
xchg
add
mov
and
popaw
ret
cltd
rol
ret
int
jmp
add
shl
test
shr
repnz
mov
mov
mov
add
pop
repz
xchg
add
mov
inc
mov
inc
scas
lret
andb
mov
xchg
and
mov
rol
and
jns
add
dec
sub
popf
sar
adcl
add
add
adc
xchg
cld
push
push
lods
cwtl
jbe
out
jbe
push
mov
pop
xchg
jae
add
and
pop
mov
inc
add
sub
fadds
sbb
sub
lods
push
xchg
pop
xchg
call
xchg
push
jle
int
fdivrl
repnz
dec
aam
push
mov
mov
ljmp
lret
fwait
adc
push
dec
fs
sbb
mov
adc
mov
idiv
mov
adc
pop
std
jne
xchg
jne
das
adc
enter
xchg
adc
jle
in
test
push
mov
xchg
jo
jae
mov
mov
je
loop
andb
jo
adc
add
add
das
jmp
das
jo
les
add
ds
inc
mov
pop
jo
add
insl
add
xor
jae
pop
pop
call
loop,pn
pop
mov
mov
or
stos
lret
aad
push
adc
idiv
cld
aas
sahf
mov
jae
test
pop
in
pop
add
addr16
incl
jno,pn
scas
or
inc
mov
mov
push
mov
je
lea
sbb
add
ret
pop
sub
icebp
imul
push
fstps
xchg
mov
lret
ffree
adc
lret
mov
jmp
pop
ljmp
in
adc
int
xchg
repnz
rcrb
mov
pop
cli
bound
outsb
mov
lret
bound
mov
mov
lods
xchg
aad
cmpsb
or
shr
cli
add
inc
xchg
and
insl
into
sbb
dec
lods
add
lret
test
sub
pop
ret
cmp
push
or
xchg
cld
mov
add
add
jbe
nop
mov
pop
mov
mov
repz
fldenv
xchg
and
dec
inc
add
sub
fiadds
stc
adc
xchg
mov
call
cmpsb
pop
mov
sti
sbb
mov
stc
roll
add
pop
mov
aad
push
add
xchg
movl
stos
pop
push
mov
test
pop
xchg
cmp
popfw
std
jne
inc
push
adc
orb
lods
out
std
jmp
sub
adc
sub
or
js
incl
lds
inc
lret
mov
out
cmp
lds
ret
sub
outsl
push
xor
cmp
add
mov
ret
inc
cmp
or
pop
repz
mov
pop
and
call
push
sub
je
or
mov
xor
ret
lea
or
add
xchg
out
daa
pop
daa
lret
xlat
or
sub
push
ret
xlat
or
push
int
pop
adc
mov
add
add
movsl
add
xchg
push
add
fiaddl
push
insb
jge
movsb
add
xchg
push
and
add
clc
lret
jecxz
xchg
jmp
loope
add
jae
push
stc
push
stc
int
test
or
mov
mov
mov
or
pusha
add
fwait
dec
cld
xlat
xchg
dec
mov
into
mov
in
pop
mov
inc
mov
and
xor
inc
and
call
jge
add
mov
push
fcomi
in
and
mov
xchg
test
inc
add
sub
xchg
jne
xor
xor
add
inc
dec
loope
pop
sti
inc
jl
shll
add
cwtl
cltd
sub
inc
and
sarl
ljmp
sub
inc
out
xchg
and
stc
out
or
mov
movsb
sub
and
cli
xchg
js
test
je
add
dec
testl
sbb
idiv
add
das
mov
enter
xor
inc
mov
sbb
aas
add
rclb
enter
mov
jp
xor
push
rorl
lods
xor
xor
fnstenv
xor
push
xchg
and
mov
lods
xor
lods
xor
xchg
divl
divb
add
fsub
rcll
adc
mov
cmp
mov
mov
jne
test
out
mov
sbbb
jb
pop
push
je
sub
jae
pop
add
rol
cld
or
mov
pop
jne
fs
adc
cmp
xor
sub
sbb
mov
inc
pop
test
or
mov
lret
aas
push
sbbl
and
mov
add
mov
pop
push
lahf
insb
iret
mov
out
xor
add
lret
into
push
xor
scas
dec
add
test
add
lret
jmp
add
lret
push
imul
or
add
add
cltd
addb
lret
mov
push
cmp
loope
out
fidivl
pop
out
sub
mov
mov
mov
repnz
push
bound
sbb
jmp
xor
mov
or
push
xabort
push
add
xor
mov
pusha
sbb
dec
xchg
sub
push
ret
sbb
roll
add
add
hlt
add
mov
jmp
jle
cld
push
jecxz
push
mov
lret
push
jg
add
xor
and
and
pop
and
cmc
ss
and
add
std
dec
inc
push
mov
mov
in
sbb
adc
cmp
mov
adc
cld
test
jp
add
aas
push
push
cmp
adc
pcmpeqw
push
inc
cld
mov
push
inc
add
jg
push
jecxz
inc
xchg
xchg
aas
xchg
aas
std
jne
push
pop
clc
int3
js
adc
jg
inc
xchg
jne
and
int3
cwtl
in
push
mov
jmp
ret
xor
sti
mov
insl
or
pop
push
std
cmpsl
cmc
aas
add
mov
add
mov
xchg
sti
mov
shl
mov
in
jecxz
mov
mull
imul
cmpsl
clc
pslld
sarb
sar
ljmp
das
stos
lret
sub
dec
daa
call
and
xchg
mov
add
shl
ret
in
sub
mov
and
lods
push
xor
sbb
xchg
mov
lock
jmp
add
push
fnstcw
mov
pop
les
mov
add
mov
mov
pop
sub
add
int3
sbb
pop
add
or
lea
push
scas
icebp
imul
idiv
add
mov
or
mov
iret
jne
xchg
adc
lret
jmp
or
inc
and
outsb
xchg
jmp
mov
dec
jge
leave
xchg
fs
add
outsl
aad
incl
push
stos
sub
lods
dec
xchg
jmp
mov
dec
add
in
add
and
inc
stc
adc
dec
int
sbb
push
leave
xchg
fcoml
or
sub
add
sub
add
sub
jge
sbb
pop
fs
jne
or
add
lret
push
out
push
nop
adc
push
fists
lea
popa
adc
neg
and
jg
dec
or
leave
xchg
std
mov
xchg
add
mov
add
test
pop
enter
iret
test
xor
pop
pop
testb
mov
add
or
add
pop
leave
mov
pop
leave
add
adc
add
inc
mov
pop
mov
xor
and
dec
bound
ret
daa
mov
dec
inc
push
les
std
mov
ficoml
sub
mov
add
addr16
push
in
fidivs
add
lods
xor
ret
and
mov
mov
call
mov
into
addb
jb
inc
into
jle
xchg
jb
addr16
jb
mov
addb
aas
mov
sbb
stc
mov
dec
xor
lret
push
lret
sub
push
lock
push
cld
jge
jmp
add
or
push
mov
pop
xchg
push
cld
mov
push
in
and
movsl
inc
scas
leave
jle
shll
lods
sub
cmpsl
add
add
and
fmuls
jmp
add
lret
jo
mov
jmp
add
push
into
dec
mov
jmp
add
std
addb
add
add
cmpsl
add
sti
adc
jmp
aad
push
fs
call
sub
call
lcall
jmp
cmp
adc
scas
and
fcmovbe
daa
movsl
aad
xchg
adc
push
lret
cmpsb
inc
cmp
push
xchg
jg
in
cmp
add
scas
lret
or
cmc
add
and
xorb
and
mov
mov
pushl
leave
xor
push
add
mov
aam
or
test
in
dec
xchg
add
into
std
jne
dec
dec
and
sbb
or
mov
call
jo
push
repnz
fcmovne
add
lret
int
push
push
roll
add
add
fwait
push
test
enter
push
and
call
add
xor
mov
cmp
mov
mov
cld
loop
jge
cmp
pop
imul
and
sahf
iret
push
inc
mov
roll
mov
in
mov
out
stos
add
aaa
mov
or
rol
jne
push
std
add
mov
add
xchg
xchg
icebp
ficompl
es
mov
cmp
inc
or
mov
jge
cmp
sub
adc
add
sub
pop
mov
je
mov
test
fmulp
lock
les
or
loop
xor
div
xor
int
mov
fistl
cmpsl
in
mov
insb
xor
ret
or
pop
lods
sbb
xlat
ret
std
je
mov
cli
jg
cmp
ret
das
add
mov
mov
cmp
lods
insb
xor
xchg
jmp
daa
scas
sbb
dec
shll
xchg
jb
mov
jle
add
adc
add
jp
xor
add
sbb
lret
dec
iret
std
dec
dec
jge
lods
lret
jl
jl
and
arpl
cld
cld
inc
fldl
js
dec
mov
icebp
jle
fldl
repnz
xor
daa
shll
fisttpll
ret
mov
jno
inc
lds
cli
or
int
push
mov
sbb
call
push
in
iret
jg
test
add
je
dec
inc
clc
lret
xor
push
pushf
push
adc
dec
mov
test
mov
add
fiaddl
je
and
lock
jne
xchg
xchg
lock
je
hlt
push
loope
push
fmulp
cmovo
push
shll
lret
call
clc
pop
pop
mov
or
push
mov
or
xor
fisttps
pushl
test
mov
adc
cmp
or
pop
test
mov
daa
mov
lret
and
fisubrs
incl
stos
mov
inc
push
sub
adc
sahf
sar
push
jp
or
std
adc
cmp
adc
sar
ss
add
shlb
adc
jb
push
jg
jns
gs
and
xor
add
ret
mov
xchg
dec
popf
lret
cld
aas
mov
inc
rcl
popf
sbb
sub
push
and
jl
or
or
js
inc
stos
cld
xor
mov
cmc
pop
cmpsb
or
js
push
sub
aaa
jl
inc
cmpsb
add
mov
cmpsl
outsb
ss
test
add
jl
mov
push
inc
imulb
jnp
push
popa
aad
fcmovnu
jnp
repz
mov
aad
testl
aad
lock
lret
add
jno
xchg
clc
js
insl
out
incb
aaa
jmp
jnp
test
add
js
stc
dec
mov
or
scas
adc
add
arpl
xchg
js
jle
mov
sub
mov
jb
mov
inc
or
jmp
inc
and
jg
aaa
mov
jns
pop
call
mov
push
push
jecxz
jg
popw
sti
ljmp
add
add
jb
add
add
in
mov
jnp
nop
push
inc
cmpsb
leave
push
lea
repz
or
pop
or
sbb
mov
leave
inc
add
fs
add
into
bound
dec
popf
or
roll
call
sbb
jmp
pop
adc
in
or
lret
push
and
into
add
mov
jnp
fs
push
pushl
push
or
sbb
push
rorb
stos
mov
leave
xor
das
pop
fstpl
out
roll
cmp
add
ret
insl
push
ds
fiadds
sub
xchg
pushl
adc
bound
orl
adc
mov
mov
add
lret
sbb
test
push
scas
xor
call
add
lret
xchg
scas
pop
lret
out
mov
outsl
push
lret
sahf
pop
sarl
push
ljmp
in
xchg
lret
pop
add
mov
add
add
dec
push
and
xlat
xchg
sbb
lret
jmp
fnsave
stos
push
xchg
add
jmp
push
jbe
mov
subb
add
rcll
mov
js
jmp
pop
and
push
push
sarl
cli
sbbb
dec
adc
aad
call
add
mov
flds
push
xor
inc
bnd
inc
inc
std
adc
jge
dec
inc
call
je
test
xor
sti
xor
mov
jb
and
stos
aad
in
push
popa
js
icebp
push
mov
outsb
cmp
mov
lcall
add
and
fstpt
rcll
and
jbe
lcall
sldt
add
add
aaa
and
or
enter
xlat
lea
sbb
movsb
xchg
and
std
adc
add
and
ja
mov
repnz
cltd
sti
inc
sub
ret
hlt
cmp
and
push
mov
into
sti
jae
into
je
fld
xchg
js
pop
inc
jbe
add
fiaddl
mov
fistl
inc
or
roll
add
shrl
sbb
movsl
push
mov
add
mov
jnp
push
lods
mov
and
and
insl
xchg
ret
lods
dec
push
add
ret
and
insl
xchg
inc
mov
jns
xchg
into
add
mov
push
xchg
xchg
xchg
mov
or
add
or
mov
mov
inc
into
cmpb
lret
out
ret
je
inc
xchg
test
stos
outsb
mov
mov
sub
les
test
pop
lcall
add
mov
sarl
xchg
lret
pop
mov
inc
es
inc
and
sub
sbb
scas
flds
add
sub
cltd
lret
cltd
leave
xor
and
outsl
std
xor
jns
dec
sbb
outsl
std
sub
jns
sti
bound
arpl
dec
add
outsl
inc
dec
or
xchg
lret
push
bound
shll
cs
push
pop
ret
adc
push
cmpsl
sbb
xor
and
mov
push
xchg
add
mov
jmp
sbb
sub
mov
mov
dec
add
fwait
jb
jmp
cmp
mov
das
mov
fildl
cmc
sti
decl
inc
gs
inc
add
adc
add
test
add
mov
adc
pop
imul
add
into
add
or
mov
imul
xchg
inc
inc
and
jbe
adc
cwtl
mov
pusha
adc
and
shrl
cmp
fbstp
inc
cmp
arpl
xchg
mov
fisttpll
xchg
and
mov
shl
cmp
les
lret
std
outsb
adcb
mov
cmp
mov
mov
sub
push
in
cmp
in
mov
and
stc
and
shll
and
xchg
outsl
enter
cmp
daa
in
movsl
or
and
std
shlb
sahf
popf
adc
inc
and
faddp
loopne
or
jae
imul
add
int3
stos
adc
or
sarl
jecxz
and
jmp
sti
popf
out
vunpckhps
call
outsb
cmpsl
testb
mov
mov
inc
scas
out
jno
inc
cmc
xor
pop
enter
rorb
mov
mov
test
mov
mov
mov
test
int3
cmpsl
mov
mulb
sbb
js
sbb
cmpsl
add
ds
and
aaa
je
adc
lock
adc
fstpl
mov
adc
aam
lds
dec
inc
or
xor
or
into
inc
gs
fimull
mov
add
jo
jge
lahf
aas
ljmp
and
stos
xor
stos
and
xchg
stos
push
out
and
inc
inc
add
scas
outsl
test
loopne
pop
pop
cmpsb
xchg
add
pop
or
repnz
out
arpl
cmp
pop
mov
arpl
nop
mov
pop
sbb
test
mov
leave
jecxz
add
lret
addl
inc
scas
mov
dec
mov
cmp
xchg
mov
add
adc
push
outsl
outsb
cmp
xchg
pop
mov
jmp
jnp
cmp
mov
int3
lret
or
or
pusha
aam
cld
mov
cmp
out
enter
in
xchg
outsb
mov
xchg
lock
cmp
ret
and
stc
pop
stc
shll
into
jmp
and
shl
bnd
push
push
repnz
mov
outsb
sti
ret
and
pushf
ret
and
arpl
inc
add
jge
fistpll
jae
call
pop
inc
add
outsb
enter
mov
cmpsl
cmc
sub
mov
lret
xor
je
push
movsb
inc
inc
mov
cmp
cmpsl
add
cmp
cmpsl
leave
shll
int
adc
test
call
shl
and
rcl
roll
cmp
pusha
dec
xor
or
stc
jno
stc
mov
inc
xchg
out
dec
out
add
enter
cmpsl
testb
pop
repz
mov
cmpsl
mov
mov
lret
add
ret
sbbb
add
mull
imul
in
aad
mov
sub
push
call
in
bound
ffree
test
ret
lret
mov
into
mull
inc
test
jb
cmpsl
sub
test
push
sbb
outsl
cld
inc
mov
xchg
add
xchg
int
xchg
lea
ret
ljmp
mov
push
mov
and
call
loopne
and
rorb
add
mov
iret
add
sarb
cmp
mov
sub
adc
cmpl
adcl
push
testl
and
add
add
push
adc
mov
cmp
or
call
xchg
les
adc
andl
or
sbb
add
je
push
add
xor
jb
repz
mov
call
xchg
fdiv
xchg
shl
xchg
fld1
ss
int3
or
lcall
out
jmp
and
sub
and
jns
mov
je
or
fnstcw
mov
add
sbb
inc
cmc
fidivrl
and
jae
add
fmul
jp
frstor
and
std
jae
lret
jmp
jle
in
in
movsb
add
iret
test
lret
jge
sub
out
sub
push
in
adc
adc
call
fcmovnb
pop
dec
inc
loopne
lret
jo
xchg
mov
sub
jnp
into
jecxz
rcrl
pushl
lock
mov
jne
mov
mov
gs
vcvtsi2sdl
push
in
call
stos
mov
icebp
mov
fldlg2
repnz
ds
xchg
add
stos
ss
int
leave
push
dec
lds
sub
es
and
movsl
lods
xchg
sub
and
stc
xor
and
scas
push
jnp
or
lea
push
inc
or
push
adc
test
mov
add
ljmp
cmp
or
or
lods
cmp
mov
or
scas
push
mov
sub
cmp
sub
lods
adc
mov
add
mov
inc
and
into
rorl
rolb
sti
adc
and
addb
push
add
and
add
and
adc
adc
mov
mov
cmp
imul
jg
dec
addl
push
lret
and
pop
xor
cmp
mov
inc
out
mov
inc
add
arpl
jl
push
jne
out
push
pop
and
push
insl
and
push
dec
and
pusha
xchg
ret
pop
test
xor
mov
mov
and
fcmovnb
and
jmp
and
pop
test
test
mov
cwtl
in
xchg
je
or
xor
rol
out
mov
add
jg
fxch
and
roll
jae
ret
and
sar
aam
mov
sbb
jmp
cs
outsb
nop
add
sub
loopne
mov
jo
xchg
pushl
xchg
sti
push
cmp
lret
outsb
inc
cmp
add
loopne
incl
mov
rcrl
mov
add
mov
out
mov
jmp
fstpt
sub
jge
fisubrl
repnz
pusha
cld
pop
xor
out
and
mov
scas
or
inc
pop
xorl
xor
sub
rolb
int
mov
adc
sub
and
test
add
les
sub
or
jmp
sub
and
lds
cmp
hlt
mov
mov
add
test
out
into
data16
sbb
inc
or
push
lock
xor
and
mov
pop
jb
lea
dec
mov
dec
test
add
sar
add
pop
mov
std
dec
mull
rcr
jge
stos
iret
jge
jo
movb
mov
test
test
rcll
and
push
dec
and
mov
mov
adc
aas
adcl
jl
ret
pinsrw
or
xchg
and
fs
and
and
pusha
leave
or
and
loop
and
adc
mov
push
or
or
adc
add
je
cmpb
add
outsb
mov
add
jnp
xchg
xchg
stos
cmp
in
jae
xorl
sub
in
cmpsb
jo
add
sbbb
fwait
pop
js
les
inc
into
add
jbe
pop
mov
dec
inc
xchg
mov
xchg
jne
dec
gs
das
sub
jmp
aas
pop
sbb
std
cmp
lahf
enter
loopne
jbe
int
push
xlat
vcvtsi2sd
int
push
xlat
int
xor
cmpsl
pop
ljmp
push
xor
push
scas
out
push
testb
pop
push
movsb
arpl
out
bound
sbb
cmp
int
sub
xlat
sub
into
divl
mov
xchg
pop
mov
das
outsl
popa
pop
mov
ret
adc
or
clc
mov
add
das
aas
popa
sbb
pop
decl
sbb
rclb
add
lods
add
fdivrp
push
mov
call
dec
push
jge
add
dec
inc
add
out
dec
pop
add
repnz
mov
scas
lret
add
lods
dec
cli
call
lods
sub
into
int
xchg
xchg
mov
cmp
pusha
cld
jmp
out
xchg
pusha
jp
and
icebp
into
test
push
pop
mov
jae
jae
add
int3
add
out
mov
mov
filds
je
xchg
decb
ja
push
nop
and
rolb
mov
dec
cmp
push
sbb
pop
adc
adc
into
lret
dec
call
adc
and
movsl
jp
jo
and
not
std
inc
jg
jmp
lds
test
inc
dec
mov
dec
add
ljmp
xchg
fnstenv
inc
cmp
call
sub
mov
inc
cmp
enter
shlb
gs
int
xor
pop
leave
outsb
ja
xchg
int3
ja
cmp
pop
sub
in
xor
in
mov
stos
add
jb
jle
fldenv
or
add
cmp
jnp
mov
add
notb
enter
gs
mulb
pop
xchg
popf
jno
ja
jno
out
leave
pop
rcrl
inc
scas
push
test
adc
filds
lret
jns
cmpsl
fldcw
in
xchg
loopne
cmp
adc
add
mov
fsubp
lea
jl
jbe
or
jp
cmpsl
sarl
test
jp
cmpsl
int
push
test
add
scas
out
push
cmpsb
out
push
xor
loope
mov
xchg
dec
popf
jg
xlat
or
jo
dec
cmp
mov
jmp
fcmovu
iret
bound
sub
test
dec
test
bound
xor
add
jp
insl
negb
jbe
mov
mov
add
arpl
popf
aad
mov
int
aaa
popf
xchg
adc
sbb
and
sbb
and
das
ja
pop
mov
xchg
xor
pop
mov
mov
loopne
and
and
rorb
jl
loopne
and
pop
jecxz
and
lret
dec
pop
test
jae
add
and
sbb
dec
and
loopne
and
jb
divps
inc
and
loopne
and
loop
and
jnp
pop
mov
sub
push
test
xor
and
dec
and
aam
mov
cmp
push
jae
nopl
jns
sbb
shrl
in
fdivs
add
sbb
cmp
mov
loop
outsl
int
jno
jmp
lahf
daa
je
enter
adc
mov
push
push
jge
mov
sub
inc
test
loopne
mov
cmp
mov
mov
shlb
in
shlb
stos
sar
and
mov
lret
lea
cld
insb
cmp
sub
test
enter
push
xchg
data16
xchg
scas
dec
add
rcrb
je
push
mov
rcrl
cltd
pop
es
dec
stos
pushl
xlat
int
mov
cmpsb
push
mov
loopne,pn
lret
into
mov
out
add
pop
fcmovbe
pop
cmp
add
or
out
jns
or
mov
testb
mov
sbb
pop
xchg
out
arpl
jo
lods
and
cmpsb
mov
lods
stos
int
popf
stos
lret
lea
jne
in
add
xor
add
mov
dec
jmp
stos
lret
xchg
fistpll
pop
lods
push
jmp
adc
mov
mov
adc
cmp
inc
mov
adc
scas
inc
inc
iret
scas
inc
push
pop
mov
inc
add
mov
pop
frstor
roll
dec
int3
std
je
ret
xchg
je
dec
outsl
insb
std
je
pop
std
je
fs
mov
std
add
shlb
je
outsl
xlat
dec
and
mov
add
add
mov
inc
add
mov
insb
and
mov
ljmp
sub
cmp
sub
dec
push
pop
push
push
inc
jns
add
into
out
mov
ja
mov
js
mov
js
xorl
ja
and
inc
into
xor
imul
stc
mov
sbb
pop
cmp
faddl
xor
ja
xchg
adc
divl
pop
pop
cmc
jmp
mov
push
in
test
mov
cmpsb
rclb
or
mov
lret
pop
ja
into
test
hlt
rorl
jle
ja
sbb
cmp
sbb
or
lretw
or
insl
jae
out
add
mov
xlat
add
in
add
js
int
ret
lret
jl
stc
out
fcomip
out
loopne
sbb
inc
in
pop
or
movsb
inc
in
jnp
or
inc
sbb
or
and
mov
fwait
pop
iret
sarl
fisubs
xchg
es
clc
dec
incl
pop
pminsw
mov
cmpsl
neg
dec
add
add
decl
xchg
test
pop
pop
dec
rcr
movsl
add
mov
mov
pushf
out
test
pushf
dec
and
pop
inc
push
jmp
test
shll
cmp
test
inc
ljmp
mov
push
xchg
xchg
jbe
push
sbb
mov
add
cmc
add
mov
cmp
sub
pop
div
adc
inc
int
enter
add
pop
mov
pusha
lods
mov
push
and
sub
and
andl
inc
jnp
inc
push
adc
dec
adc
push
mov
cwtl
add
pop
orb
add
in
sub
aaa
je
xchg
or
scas
add
roll
jae
or
xchg
imul
imul
xor
mov
mov
imul
or
sbb
add
xchg
or
add
fld
and
call
dec
dec
mov
jns
xchg
mov
lods
aad
push
jl
pusha
add
add
cmc
mov
jae
push
fdivrs
fs
add
ret
add
mov
jns
stos
out
repz
mov
mov
fcmovnb
mov
mov
enter
or
enter
cmp
call
call
xchg
notl
cs
cmc
mov
ss
xchg
add
xchg
out
xchg
mov
enter
dec
mov
pop
push
loopne
adc
std
ret
mov
test
shrl
pusha
mov
xchg
push
and
test
lret
cmp
push
enter
pop
jb
dec
ret
xchg
xchg
rorl
scas
sbb
pusha
inc
scas
inc
pusha
add
lods
dec
jo
lods
and
in
lods
push
out
pop
sti
mov
xchg
call
mov
fwait
sarb
add
jne
insb
mov
xchg
xlat
sti
aam
mov
jmp
sub
mov
jne
push
inc
aam
add
mov
test
rolb
mov
das
cld
insl
push
call
add
fmull
jmp
neg
cmp
mov
inc
or
sub
push
test
cmp
cwtl
insb
mov
pop
mov
and
and
cmp
into
cmp
add
repz
outsl
shll
movsb
fdivrp
aam
cmp
mov
std
mov
add
add
cli
inc
ds
sbb
mov
sub
mov
and
jae
aas
inc
adc
or
ret
and
add
jmp
sahf
call
cmp
mov
or
mov
inc
out
cmp
std
mov
leave
sub
add
bound
add
pop
lods
inc
mov
add
add
lea
add
xchg
enter
call
or
mov
test
movsl
call
mov
lea
stos
mov
mov
gs
pop
cmp
gs
sub
inc
mov
leave
inc
mov
xor
xor
add
mov
call
stos
in
enter
movb
add
add
and
mov
int
sub
rorb
xor
and
cwtl
lods
dec
fsubp
mov
mov
inc
and
pop
push
dec
pop
mov
repnz
in
or
xchg
jecxz
mov
or
testl
push
inc
add
out
dec
jbe
xchg
dec
add
mov
cmc
loope
push
call
icebp
mov
mov
add
mov
xlat
and
lods
xlat
and
aas
inc
lret
ror
cld
cmpsb
sub
xor
cmp
and
lods
sbb
mov
xlat
and
movsb
xlat
and
push
inc
lret
push
hlt
pop
cld
pop
cmp
lea
inc
mov
mov
lea
mov
lds
lock
xchg
std
std
push
mov
addr16
push
cs
into
call
rolb
pop
pop
lock
add
fdivrs
jmp
lcall
mov
inc
mov
bound
sbb
add
push
push
mov
pop
push
sub
and
xchg
mov
push
mov
adc
inc
mov
negb
cmpl
inc
inc
add
inc
or
pushf
idivl
add
jp
orl
add
inc
pop
add
cmc
ret
cs
ljmp
mov
call
je
dec
mov
xchg
mov
mov
or
add
repnz
int3
arpl
add
scas
call
or
movsl
mov
je
or
add
insb
push
lods
ljmp
je
mov
cld
xor
add
movsb
mov
mov
cmp
mov
sarl
aam
mov
jbe
push
movsb
loopne
pop
jmp
les
fbstp
add
iret
jmp
lock
cmc
data16
rcl
mov
mov
add
int3
stos
add
adc
loopne
dec
ljmp
out
cmc
mov
fisttpll
outsb
out
fisttpll
pop
out
push
inc
lods
dec
pop
mov
idivb
dec
mov
fbld
lcall
leave
dec
mov
daa
cltd
lea
mov
cltd
push
out
cltd
or
add
mov
sbb
xchg
inc
insb
outsb
mov
push
shrl
xchg
sbb
sbb
enter
icebp
dec
or
dec
roll
push
inc
in
or
inc
mov
scas
dec
cld
gs
push
inc
fsincos
hlt
loope
inc
jmp
cmpsl
dec
cld
add
xchg
leave
aam
push
adc
std
jbe
pop
out
lcall
adc
out
adc
mov
cmc
mov
dec
arpl
fwait
or
int
dec
iret
notl
into
or
int
push
test
push
push
nop
stc
dec
mov
jo
inc
fistl
mov
out
lret
jecxz
mov
rolb
lret
push
lret
ljmp
add
cmp
inc
sub
loop
repz
loop
push
push
sub
pop
insl
inc
fcoml
mov
repnz
push
cmp
into
pop
or
inc
je
add
jmp
test
mov
in
inc
xor
add
lea
into
and
jmp
aad
popa
mov
mov
frndint
mov
mov
add
mov
or
mov
or
sbb
loopne
cmp
xor
into
cli
jmp
jg
aam
add
shlb
mov
lret
fs
rorl
and
xlat
fs
stos
lret
jmp
xchg
out
lds
fsubrp
cmpsb
sub
aam
add
mov
add
add
mov
xchg
enter
dec
outsb
out
rcrl
stos
adc
dec
sub
inc
popa
add
lret
jmp
jle
shr
add
push
add
cmp
push
insb
ljmp
mov
add
lret
pop
loop
sbb
xchg
inc
data16
mov
add
mov
dec
add
add
es
out
xchg
icebp
pusha
inc
push
xorl
pop
cmp
and
data16
mov
cmp
cld
push
iret
or
dec
dec
add
sub
mov
or
add
sbb
je
ror
add
and
push
call
test
int
int3
xchg
leave
add
adc
or
add
push
or
mov
call
roll
add
xchg
xorl
push
aas
dec
rorl
ret
dec
cmp
imull
and
rolb
add
fdivrp
mov
xchg
popa
add
and
fimuls
insb
jmp
jp
lss
or
data16
add
add
fnstsw
jae
test
leave
or
push
or
das
mov
sbb
call
nop
xor
std
mov
xor
test
mov
xchg
xor
pop
loop
shlb
mov
pop
or
or
add
add
cmpb
add
in
incl
push
or
add
repnz
mov
mov
jmp
mov
ss
popa
add
inc
xchg
cmpb
jmp
out
sub
and
xchg
std
jmp
jg
lret
sub
leave
in
lods
lret
imul
jmp
mov
out
push
dec
int3
jmp
fistps
pushf
fs
jae
add
add
adc
inc
sarl
ret
or
cmp
pop
std
inc
ljmp
jecxz
mov
lret
sub
fidivl
xchg
outsb
call
xor
xchg
push
sarl
cld
jmp
test
dec
stc
inc
mov
add
mov
sti
faddl
adcb
in
lret
add
out
jmp
lret
add
mov
fucom
mov
mov
sti
aam
fildl
pushf
xchg
add
pop
rolb
dec
sbb
dec
and
push
iret
maxps
add
fcmovnb
inc
and
ret
inc
mov
out
fcomp
bound
test
jb
lods
adc
lods
jb
mov
int
add
jecxz
decl
aad
nopl
add
push
decl
sbb
dec
outsl
xor
cmovns
jmp
mov
sub
sahf
dec
dec
and
in
add
xor
rcr
std
adc
mov
dec
or
imul
pop
sub
call
je
fiaddl
inc
sub
call
add
cltd
fs
xchg
push
xchg
jle
call
xor
xor
or
popf
test
add
lea
cld
push
repnz
sub
mov
push
std
insl
lods
nop
and
or
je
xor
sbb
xchg
xor
test
test
scas
xor
or
loope
ffree
lods
lret
insl
les
mov
incb
inc
fiaddl
cs
out
mov
loop
int3
leave
jmp
push
mov
jmp
pop
mov
dec
ret
inc
in
mov
pop
ljmp
out
jmp
xchg
jmp
stos
in
push
sahf
out
push
sub
ret
add
or
xchg
enter
nop
lds
add
int3
jmp
jl
or
loope
ret
repnz
jle
icebp
jbe
or
roll
repnz
inc
call
repz
leave
movsb
add
insb
mov
lret
add
out
mov
jmp
cmp
sub
mov
rcr
hlt
add
mov
push
add
aas
aas
push
in
add
or
cld
push
lret
ss
jae
mov
add
jb
xor
lret
test
cmp
lret
ficoml
and
adc
ljmp
es
sbb
add
inc
inc
adc
jg
addb
sub
ret
loop
and
cmpsb
lret
bound
rolb
mov
mov
xchg
xor
cmpsl
and
ret
enter
pushl
add
jno
pop
test
imul
add
aas
inc
mov
or
loope
xchg
add
mov
lret
cmp
mov
jmp
mov
test
jnp
ret
mov
xor
jg
xor
int
push
lcall
ss
les
fcompl
mov
add
mov
fdivp
imul
xor
pop
movsb
jo
jae
enter
xor
call
data16
loop
enter
sbb
data16
ljmp
add
add
repnz
mul
sarb
lret
mov
jmp
je
out
push
cmpsb
out
int
scas
out
push
cmpsb
out
xor
les
jmp
out
lret
jmp
mov
lret
jmp
aas
mov
jmp
add
out
add
lret
xor
inc
cltd
js
or
ljmp
or
dec
add
jmp
add
lock
loop
cmp
test
std
push
mov
inc
sahf
dec
cmp
mov
and
stos
or
sti
add
cld
insl
jno
test
add
and
push
inc
push
or
adc
or
and
jmp
testl
jmp
stc
sti
leave
insb
test
sbb
not
shrb
in
push
add
cmc
add
repz
fldt
mov
add
cmp
lea
add
into
add
popf
cmp
je
xor
cmpsb
or
cmp
jl
arpl
iret
add
mov
add
push
leave
mov
cld
lcall
or
add
mov
and
jae
int
cltd
adc
decl
or
add
mov
dec
lock
xor
dec
data16
data16
cmp
hlt
sbb
jae
add
inc
dec
das
push
call
aas
or
mov
mov
out
jnp
dec
fstp
ljmp
rolb
jne
mov
push
lret
inc
jp
mov
add
mov
stc
mov
sti
mov
add
mov
iret
add
mov
std
movsl
rol
mov
and
repz
std
or
mov
add
js
clc
mov
int
push
push
jae
stos
lds
lret
lret
int3
sbb
mov
mov
ljmp
inc
sub
jo
and
or
cld
add
repnz
jo
and
decl
scas
mov
xor
inc
loopne
int
add
lahf
or
mov
clc
aaa
lret
fwait
mov
jmp
mov
std
add
inc
add
mov
jle
insl
inc
mov
jmp
or
sbb
xchg
int
call
cltd
cld
leave
jo
shr
scas
cmp
roll
add
add
pop
jmp
stos
and
sub
mov
mov
push
xchg
inc
cltd
push
fs
and
shll
roll
cmp
lret
cmp
and
add
mov
sub
pop
and
xor
inc
add
icebp
in
test
ljmp
add
sub
mov
mov
inc
mov
mov
inc
repnz
stc
cld
dec
mov
add
push
call
sub
aas
aas
cmp
mov
add
leave
call
mov
adc
adc
inc
rorb
fmul
jmp
sub
call
add
and
fs
addl
mov
test
dec
mov
scas
xor
pop
xchg
add
and
jb
cltd
icebp
jg
in
adcl
loop
or
ljmp
jp
xor
iret
jp
scas
xor
xor
cmp
repnz
push
dec
into
and
add
into
jns
ljmp
and
lods
out
push
add
or
jle
add
repnz
cmp
sbb
ljmp
adc
cmp
and
nop
scas
inc
fstpt
xor
cld
xor
push
nop
scas
inc
and
push
lahf
call
add
add
hlt
add
clc
sub
cmp
insl
push
ror
inc
aam
mov
add
fwait
fwait
mov
lret
pop
cmp
imul
mov
ret
popf
lahf
out
mov
shl
and
in
insl
inc
scas
pop
cmpsl
jg
mov
callw
cld
stc
cmp
pop
aas
jae
xchg
xor
cltd
push
sbb
inc
xor
flds
dec
cld
aam
inc
adc
mov
lret
dec
arpl
pop
or
jb
mov
cmp
movsl
xor
mov
mov
icebp
xor
and
fldl
mov
mov
cld
out
inc
xchg
jmp
adc
jp
add
into
add
add
adc
add
cltd
mov
push
inc
aam
push
fcmovnb
add
fcmovne
pop
pop
push
or
mov
mov
je
inc
dec
add
lds
sbb
call
mov
into
mov
jo
add
inc
enter
hlt
movsb
adc
push
mov
into
push
lcall
dec
aas
cmp
dec
mov
inc
dec
cmp
add
push
aam
xchg
jecxz
xchg
lea
mov
jecxz
xchg
lea
ljmp
xchg
sbb
xor
in
mov
out
fidivrs
ret
js
push
sub
add
cmp
mov
adc
add
adc
mov
pop
xor
lret
js
sbb
mov
add
sti
std
lret
jmp
or
mov
outsb
cmc
lret
pop
xchg
fstpt
add
popf
in
addb
and
pop
iret
lea
sti
pop
xor
jmp
fcmovne
jmp
adc
mov
shl
add
int3
jmp
dec
pop
xor
xor
mov
fcomp
xchg
add
xor
jnp
mov
mov
inc
cmpsb
daa
ret
mov
jo
mov
and
popa
pop
dec
repz
int3
inc
push
in
jle
rcr
add
xor
mov
shlb
rolb
jmp
mov
cld
jb
enter
fcmovu
push
dec
mov
add
sti
mov
call
fs
sbb
out
push
jb
cmp
out
es
jmp
xchg
fistl
leave
aaa
push
jmp
mov
xchg
xor
jne
cwtl
mov
sub
sbb
add
fmuls
push
add
add
jge
sbbl
add
xchg
inc
push
add
jge
call
pop
or
adc
or
pop
fadds
add
cmp
pop
lret
add
adcl
jne
loopne
mov
repz
dec
inc
into
call
mov
pop
pop
mov
push
push
icebp
jo
mov
and
jge
cmpsl
sti
jae
test
add
sub
sbb
and
mov
fldcw
fimuls
adc
or
mov
xchg
lret
add
in
or
stos
push
add
sub
lea
cmpsl
cli
jae
test
add
sub
out
outsb
and
pop
cmp
pop
stc
loope
mov
dec
add
pop
cli
sti
incl
dec
or
sti
pushl
lea
mov
xchg
xor
jp
test
xchg
mov
inc
mov
iret
imulb
inc
xor
add
pop
adcl
sbb
jmp
lock
add
dec
push
or
xchg
xor
mov
mov
call
jo
add
shr
add
lret
cmp
addr16
fs
cmp
sub
hlt
test
add
incl
jmp
mov
lret
repnz
mov
or
sub
jmp
sub
add
mov
add
fnstcw
icebp
rcl
sti
into
xchg
ljmpw
mov
call
add
negl
add
mov
lret
xchg
fwait
jb
jmp
xor
cld
jmp
push
sbb
jl
jbe
and
sub
mov
mov
xor
adc
add
dec
inc
mov
aaa
outsl
adc
andb
xor
lcall
aaa
pop
daa
or
xchg
jmp
jne
pop
nop
and
into
add
add
xor
cmp
xchg
scas
pop
cld
dec
cmp
mov
jmp
push
push
push
and
into
add
ret
decl
adc
jne
loope
data16
lcall
add
dec
and
pop
into
add
mov
mov
and
push
aaa
jno
push
das
dec
sbb
sub
add
add
testl
adc
lock
dec
or
and
cmc
jno
add
xor
jbe
mov
xchg
and
les
pusha
mov
and
enter
xor
add
jecxz
xchg
push
sbb
fs
notl
ljmp
fs
mull
sbb
xchg
and
lret
mov
add
add
pop
inc
int3
jmp
pop
xchg
sub
dec
mov
sub
outsl
jmp
adc
sub
jo
loop
or
sub
lea
out
into
ret
scas
lret
mov
dec
ljmp
call
add
cmpsl
inc
mov
data16
into
jmp
and
mov
lret
call
mov
lock
js
add
cs
imul
cltd
mov
pop
mov
jb
add
jmp
mov
dec
pushf
jecxz
push
jb
fcmovnbe
push
lods
sbb
test
sahf
popl
jb
jmp
movsl
mov
dec
push
xlat
or
sub
jmp
dec
sub
jmp
add
mov
pop
fidivrl
mov
jne
ret
jmp
mov
lcall
mov
je
jp,pt
add
iret
xchg
xor
sub
jg
push
aad
aaa
dec
in
decb
cmpsl
jmp
mov
lret
add
sarl
call
and
push
jle
add
add
add
jnp
test
adc
xchg
fs
add
out
dec
and
jg
push
cwtl
jp
adc
push
movd
call
or
arpl
mov
mov
xorl
push
and
mov
jge
call
mov
adc
xchg
mov
add
lret
mov
add
mov
add
call
mov
fadd
ljmp
push
sbb
subb
add
sub
or
hlt
cmpb
fwait
jnp
ret
add
push
add
and
sub
inc
aas
pop
xchg
or
aaa
int3
sub
add
and
xor
mov
add
add
add
mov
and
xor
out
sbbb
in
or
mov
and
iret
ljmp
nop
or
mov
lock
add
lock
add
lret
add
in
loopne
mov
orl
shlb
inc
mov
cmp
or
xor
out
mov
out
add
xlat
or
outsb
lret
add
sub
add
xor
and
repnz
add
out
addr16
hlt
jle
icebp
or
xlat
jbe
sbb
sub
daa
mov
mov
out
cmp
jg
mov
lahf
push
ss
add
mov
je
xor
inc
in
lahf
cmp
out
movsl
mov
adc
movsl
mov
outsb
incb
mov
test
sti
pop
adc
addr16
pop
popl
aaa
pop
es
add
es
add
mov
add
arpl
inc
sbb
or
or
mov
imul
std
adc
push
add
pop
push
push
mov
addb
sti
decl
dec
mov
ret
xor
pop
iret
push
mov
xlat
push
mov
mov
cld
incl
sbb
or
stos
add
iret
xchg
out
je
testl
jmp
push
test
jmp
push
sbb
mov
jp
xor
mov
popf
mov
ljmp
je
outsl
lods
add
mov
pusha
cli
rclb
sub
jae
mov
push
mov
pop
mov
clc
dec
dec
add
pop
clc
out
aas
add
inc
cmp
and
mov
sub
sbb
mov
aas
or
mov
add
bound
dec
into
push
add
xchg
xor
lcall
leave
outsb
fidivs
mov
outsb
inc
stos
xor
or
xor
fisttpl
add
cmpl
mov
cmpsl
pop
mov
sub
ja
pop
cmp
add
in
out
mov
lods
push
mov
fs
lret
jmp
nop
sub
ljmp
dec
pop
add
lret
fmulp
mov
lret
pop
dec
cli
jl
dec
stos
jnp
and
adc
pusha
jne
sub
fisubl
cld
jmp
add
cld
jmp
popa
mov
jb
sub
call
mov
push
call
jmp
push
adc
cld
jmp
lds
cld
jmp
popw
jae
cmpsb
or
mov
pusha
or
lea
cld
jmp
loope
shrb
call
gs
divl
out
mov
add
lret
add
or
mov
enter
int
mov
lret
test
fcmovne
add
repz
test
mov
sbb
push
jb
mov
outsb
and
mov
cmpsb
and
rorb
cwtl
loop
dec
mov
addl
jmp
mov
mov
add
pop
out
and
fxch
mov
sbb
lret
xchg
add
inc
out
jmp
mov
xlat
dec
cltd
int
xchg
sbb
xchg
and
out
add
cli
cltd
dec
and
stos
inc
and
stos
dec
and
scas
into
jb
cltd
dec
and
stos
dec
and
test
dec
and
cmp
mov
adc
push
cmp
add
xor
sub
mov
push
dec
xchg
fs
mov
ja
xchg
rorb
rol
sub
dec
mov
jmp
les
je
jb
mov
ficoml
push
jp
cmp
jle
lcall
xor
inc
cmpl
shr
sub
ret
fiaddl
stc
push
lods
fcomi
and
sub
dec
ss
push
ds
xor
insl
xchg
lret
jmp
cmp
rcr
and
aad
mov
cmp
mov
push
aaa
jl
andb
add
add
xor
fadds
flds
mov
shrb
in
mov
add
mov
push
lcall
das
ret
cli
jb
out
arpl
inc
pop
add
ret
dec
cli
in
cmpsb
dec
and
mov
xchg
xor
or
jmp
movb
mov
dec
in
ljmp
sub
fs
jmp
mov
or
pusha
sbb
jmp
daa
pop
mov
sldt
add
add
mov
add
fwait
mov
adc
dec
in
dec
outsl
mov
dec
loopne
je
dec
in
pop
mov
and
or
add
mov
fwait
in
or
jg
je
stos
add
andl
mov
ret
jne
xchg
rorb
jp
inc
add
xor
mov
xchg
dec
sub
mov
push
mov
jns
sahf
lea
subl
and
jae
movsl
insb
add
aaa
daa
cmc
repz
add
sub
dec
mov
testl
inc
mov
aad
mov
adcb
std
hlt
in
xor
add
shlb
add
loopne
and
sub
ss
and
cmp
or
dec
out
gs
jb
pop
inc
and
pop
add
imul
mov
lds
push
xchg
push
cmp
popf
movq
and
sbb
icebp
jbe
out
xor
call
inc
popf
jp
cli
xor
ljmp
lret
add
sbb
test
mov
add
int3
jmp
add
cld
jmp
clc
cmp
jmp
icebp
mov
lret
outsb
cmp
and
mov
jns
fdiv
lds
add
mov
add
movl
jmp
stc
lods
adc
popf
xchg
fcmove
loopne
mov
mov
jg
mov
push
add
pushf
or
xchg
mov
mov
lret
sub
push
imul
call
je
repz
add
popf
cmc
sarb
or
xchg
push
mov
int3
cmpb
test
inc
rolb
mov
push
enter
int3
add
xchg
xchg
flds
mov
fwait
add
or
fwait
sbbb
push
add
ss
out
iret
mov
in
lret
add
lret
add
sahf
inc
lock
or
aad
push
lret
or
hlt
lahf
add
mov
and
stc
adcl
add
sbb
inc
or
jo
dec
sbb
les
and
jl
xor
sbb
cmp
or
rorb
and
and
in
mov
jae
ret
scas
lds
pop
popf
mov
mov
add
fcomip
out
xchg
jecxz
add
cmp
lcall
cmp
push
pop
jno
inc
faddl
jb
daa
cld
mov
scas
inc
in
test
aad
repnz
sub
jmp
loope
and
push
pop
scas
mov
inc
mov
aad
mov
lahf
stc
adcb
orb
outsl
inc
add
inc
in
orb
cmp
out
pop
cmc
xor
outsb
adc
int3
mov
call
jle
loopne
xchg
sbb
test
insl
adc
cld
jmp
fldenv
or
dec
lahf
or
pop
adc
jmp
scas
jo
in
or
inc
adc
inc
add
add
mov
sti
lahf
lods
inc
into
adc
jle
push
or
xchg
push
mov
cmp
push
adc
jmp
mov
out
jl
jmp
scas
mov
std
mov
jbe
pop
movsb
pop
adcl
aas
and
js
jb
xchg
adc
add
test
aam
repz
push
sbbb
enter
loopne
and
lods
push
setl
inc
xorl
or
jb
jmp
jb
pop
sub
jecxz
and
stos
loopne
add
mov
pop
mov
sbb
lea
jno
lea
or
pop
add
call
test
divl
push
cmpl
add
cmp
jmp
and
test
cs
lahf
mov
push
and
jl
mov
in
mov
add
and
popa
sbb
xorl
mov
movsl
mov
inc
fisttpl
mov
dec
push
lret
call
and
fisubl
incl
mov
inc
push
sub
jp
in
mov
mov
aad
icebp
or
jae
push
sub
or
mov
mov
dec
jo
xchg
lds
lret
insb
dec
xchg
and
jo
pop
dec
xchg
fistpll
xor
mov
sub
push
cltd
jmp
inc
jmp
mov
and
add
add
and
repnz
pop
push
xchg
mov
jmp
rcr
in
jmp
mov
lret
shll
add
mov
je
stos
aam
aad
lret
add
sub
roll
jmp
stos
dec
lret
and
jmp
cmp
gs
adc
jmp
add
inc
shr
mov
xchg
in
into
je
loop
xchg
aad
aaa
cmp
lret
push
jb
jo
out
sar
fwait
push
arpl
dec
cli
add
js
xorb
or
repz
and
push
lret
shl
add
fdivrp
je
ds
dec
sbb
mov
jae
pushf
add
sar
je
ja
std
je
in
std
adc
fadds
or
lahf
jecxz
mov
fdivp
cmp
mov
or
in
pop
push
pop
adc
and
adc
pop
add
sub
das
sbb
arpl
cmc
xor
inc
mov
out
fildl
sub
push
call
cmp
sub
add
gs
mov
push
adc
cmp
lds
and
rorb
ret
mov
test
into
shll
push
std
mov
outsb
add
sub
sub
jae
mov
inc
add
fldl
rcrb
pushl
cmp
inc
xchg
mov
jmp
mov
add
jns
mov
cmpsl
mov
or
mov
sbb
jecxz
insl
fisubrl
out
add
push
lret
pop
in
sub
lcall
sub
and
fildll
data16
xchg
icebp
out
xor
xchg
pop
loop
sub
ja
adc
and
sub
addr16
pop
scas
inc
into
daa
into
inc
scas
daa
add
inc
jmp
fiaddl
sub
shrl
cltd
add
and
push
aaa
xchg
and
mov
inc
inc
int
inc
shll
inc
dec
int
inc
leave
add
and
jmp
cmp
and
xor
push
jb
out
jb
out
bound
lret
movsl
out
fs
xor
out
pop
jmp
xchg
cwtl
dec
add
scas
jnp
sub
jae
sti
cld
popf
mov
jmp
jne
dec
dec
jge
and
sub
outsl
and
in
push
pop
fisttpll
mov
push
pusha
rclb
aas
outsl
add
inc
int3
mov
in
test
out
cld
mov
xchg
in
fwait
enter
push
pop
pop
rolb
in
pop
fisttpl
add
scas
fisttps
mov
sub
je
push
loopne
dec
mov
jecxz
add
enter
mov
add
lret
mov
add
xor
or
mov
push
inc
cmc
stos
dec
and
cltd
mov
outsl
and
or
clc
and
mov
sbb
cmp
inc
xchg
out
jae
xchg
or
add
shll
popf
or
repnz
add
adc
dec
fwait
sbb
das
push
adc
pop
push
mov
and
push
mov
movb
add
jns
add
sub
mov
jmp
add
add
stos
outsb
pop
clc
push
into
leave
mov
cmpsb
daa
mov
add
cli
push
cmp
add
add
out
popa
shll
dec
dec
add
sbb
std
test
jmp
xchg
out
xor
or
and
or
or
xchg
or
cmc
pop
lret
jmp
popl
mov
mov
into
jns
mov
push
and
mov
jmp
cwtl
adc
out
lret
sub
and
fmulp
ret
fsubrl
lret
jg
stos
or
add
adc
sub
jmp
bound
adc
lods
sti
xchg
and
dec
ljmp
or
pop
cld
inc
or
lret
mov
adc
cmpsl
or
mov
pop
or
xchg
jl
in
leave
add
push
ss
jns
mov
lret
nop
fistpll
repz
cmp
add
mov
and
cmp
mov
and
inc
stc
sub
or
cmp
sub
shr
push
pop
dec
dec
sbb
xor
push
xacquire
mov
sbb
das
jmp
mov
ljmp
add
add
add
addr16
pop
and
push
cmp
adc
mov
push
js
ja
inc
and
mov
je
pop
adcl
orl
in
jo
mov
mov
push
inc
mov
sbb
mov
decl
jbe
clc
mov
inc
push
daa
ss
andb
mov
aad
fwait
sar
aad
cmp
jbe
les
push
push
mov
adc
xor
cmp
cmc
jp
mov
ljmp
cmpsl
sub
stos
in
cmpsl
repz
push
shrl
test
mov
mov
mov
fidivrl
scas
lds
xlat
jno
xor
ljmp
iret
call
fxch
push
pushl
mov
jno
mov
sub
icebp
jmp
inc
ljmp
sub
add
push
sub
ss
add
enter
lret
loop
mov
xlat
jle
cs
dec
cmpsb
or
mov
add
jecxz
add
notb
icebp
dec
vmovapd
and
cwtl
adc
sub
add
lret
add
stos
jg
stos
push
dec
and
sbb
jmp
cmp
xchg
in
dec
dec
loope
mov
mov
bound
push
int3
push
jae
cwtl
sti
cmc
cltd
push
rcll
pop
out
add
cmp
xchg
stos
add
bound
push
jge
scas
xchg
mov
add
or
add
int
xchg
idiv
dec
or
loopne
add
mov
adc
push
push
mov
or
cmp
add
aam
bswap
les
add
push
dec
add
cmp
add
push
inc
and
clc
add
in
out
dec
push
clc
inc
sbb
push
mov
out
dec
les
xor
add
lea
adc
int
std
roll
std
cld
ljmp
jne
les
sar
mov
bound
and
mov
pusha
and
repnz
jno
add
xor
mov
xor
or
mov
mov
add
les
in
icebp
xor
mov
jle
mov
incl
mov
repnz
sub
mov
das
mov
add
cwtl
add
mov
cmpsl
adc
ja
in
mov
rolb
mov
and
out
outsb
inc
mov
and
mov
movaps
cs
fwait
adc
add
js
inc
sbbb
push
dec
sub
mov
into
xlat
outsb
inc
xchg
jecxz
mov
fldl
cmpsl
incl
pop
sub
push
sahf
pop
xchg
scas
incl
outsb
aas
cmpsl
add
mov
add
xor
and
fcomps
xchg
mov
jl
jb
push
dec
out
ja
jmp
pop
push
shrl
add
insb
incb
cld
xchg
movsl
mov
icebp
xor
add
sub
sti
jle
dec
jge
adc
ret
jb
xchg
xchg
or
mov
je
ss
inc
cltd
loopne
xchg
cmp
jne
add
int
sbb
popf
lea
add
mov
xchg
sbbb
out
int
dec
ja
call
testb
add
add
mov
jmp
popf
cmp
mov
mov
pop
adc
xchg
mov
mov
mov
std
call
mov
adc
or
cmp
sbb
mov
or
ret
push
sub
orb
call
repnz
jmp
and
xchg
repnz
call
and
dec
repnz
incl
sub
add
insl
inc
xor
cltd
jmp
out
lret
into
cld
sub
subl
dec
lcall
dec
aaa
adc
sub
fstl
repnz
mov
jl
out
mov
inc
repnz
jle
mov
xlat
jb
repnz
test
and
repnz
incl
jnp
and
jae
cld
add
xor
jge
and
repnz
jmp
pop
adc
daa
pop
push
cmpsb
daa
push
push
sahf
daa
inc
push
scas
daa
repz
lods
ljmp
mov
insb
repnz
pushl
inc
ljmp
push
push
sub
repz
outsb
insb
jmp
inc
jge
mov
data16
xchg
inc
ljmp
lret
enter
add
flds
test
dec
call
xchg
inc
ljmp
nop
or
add
cmpsl
test
mov
imul
lret
xchg
dec
add
mov
out
fisubrs
mov
xorl
add
fidivl
aas
jmp
lret
cmp
add
leave
add
cmpsb
push
inc
add
lcall
addl
or
push
int3
add
cwtl
andb
leave
add
imul
mov
ret
add
and
xorl
add
dec
andb
add
or
push
lea
cmpsb
je
cmp
lcall
or
add
dec
and
cld
jg
lcall
dec
enter
sbb
or
mov
mov
dec
push
mov
lcall
push
and
dec
dec
and
pop
sbb
sbb
jg
adc
xchg
add
leave
xor
or
add
xchg
cli
test
hlt
jmp
cs
mov
add
rcll
out
adc
pop
add
xchg
mov
pushl
aaa
add
jp
outsb
jecxz
bnd
sub
sbb
pop
incb
sub
jp
mov
insl
jns
and
repnz
incl
icebp
rclb
ljmp
push
repnz
xchg
and
jg
adc
sbb
sub
add
add
lret
mov
inc
mov
add
fnsave
xchg
std
aam
pop
mov
lcall
sub
bound
mov
add
mov
xchg
mov
add
shll
into
fistps
fcmovne
je
mov
call
mov
dec
sti
jmp
sub
fwait
fs
mov
xor
jmp
add
jle
bound
lret
mov
mov
cld
into
out
push
popf
or
pop
push
and
pop
jne
and
inc
mov
popa
jecxz
jo
lret
test
cld
iret
xchg
jp
xchg
scas
xchg
add
and
std
xchg
imul
add
inc
scas
nop
jmp
add
and
cmp
lds
gs
xor
mov
mov
xchg
adc
adc
cmp
add
or
mov
jae
loope
fstpt
jmp
loopne
pop
cmp
xchg
mov
cmp
pop
into
sti
push
idivb
adc
gs
je
inc
int
jmp
adc
sbb
fisttps
mov
jecxz
js
std
test
mov
orb
inc
dec
rol
add
mov
add
hlt
aas
add
and
testl
aaa
pop
testl
add
into
cmp
sti
jecxz
decl
sub
test
in
sub
ljmp
daa
sbb
xor
aas
or
mov
flds
pop
pop
add
loop
adc
hlt
aas
add
and
cmp
adc
mov
add
pop
addr16
or
xchg
pushl
fbstp
sub
add
add
in
mov
bnd
inc
stos
fdivl
repz
inc
into
stos
inc
ficomps
xchg
inc
mov
adc
or
cmp
pop
jecxz
mov
jo
sahf
mov
sti
mov
lret
insb
leave
pop
les
dec
lret
lret
dec
mov
outsb
out
fisubrs
add
stos
aas
cmc
cmp
add
add
jecxz
negl
aas
mov
add
clc
jb
cmp
test
out
jle
scas
jp
push
scas
push
out
lcall
mov
xchg
xchg
outsl
data16
and
sahf
mov
or
push
scas
push
scas
nop
mov
xchg
ret
mov
popf
cmpsl
mov
lea
lahf
mov
jmp
repz
jmp
rcr
or
scas
insb
pusha
movsb
xlat
je
data16
and
js
and
mov
jo
mov
or
inc
push
mov
or
inc
cmp
incl
push
mov
std
adc
inc
mov
call
add
jno
call
push
cmp
std
lcall
out
push
xchg
xchg
add
sbb
out
icebp
add
dec
dec
push
mov
out
mov
ja
std
or
std
mov
imul
mov
stc
sub
push
loopne
sbb
xlat
daa
addl
idivb
ret
shll
push
gs
and
jns
sub
xrelease
inc
mov
sti
xor
fwait
dec
loop
daa
pop
add
sub
icebp
aas
mov
inc
imul
data16
xchg
outsb
mov
cmp
jecxz
sbb
cmc
jg
jle
and
call
push
test
jge
js
ja
pop
aad
hlt
lds
std
sub
jle
adc
mov
cmp
mov
sub
lds
popa
in
sbb
push
lds
or
out
sub
push
dec
shl
cmp
mov
ljmp
paddsb
daa
in
ljmp
cld
add
xor
add
add
add
inc
push
in
xor
xor
xchg
cwtl
xchg
outsb
jo
xor
jmp
fsubr
add
filds
cmp
mov
dec
mov
push
add
test
or
repnz
jmp
out
xchg
mov
jg
in
dec
icebp
jnp
push
ror
xchg
call
fs
jge
je
test
jl
mov
test
in
imul
push
push
add
lcall
aaa
dec
lea
enter
inc
std
je
inc
outsl
or
xor
xor
icebp
les
and
add
test
jle
int3
push
sahf
pushf
loopne
inc
pop
sti
call
pushf
or
ret
xor
fwait
cli
ret
xchg
push
push
push
add
or
int
jmp
idivl
ret
push
push
cmc
xchg
mov
mov
mov
mov
and
jge
out
out
cld
cmp
call
mov
pop
mov
jnp
mov
mov
ret
pop
dec
add
inc
insb
dec
xor
mov
fbstp
sub
pushf
adc
add
jle
cld
xchg
mov
call
mov
cmpsl
add
cltd
mov
mov
gs
pop
insl
gs
and
jmp
xchg
mov
pop
sub
scas
mov
cltd
xchg
mov
les
xor
mov
pop
ja
leave
mov
shll
add
add
ds
add
inc
sbb
sub
pop
push
sbbb
addr16
insl
les
inc
mov
ja
xchg
arpl
lock
cmp
jbe
leave
mov
outsb
ror
sbb
imull
cmp
push
pop
lret
movsl
sub
jmp
std
mov
xchg
in
sti
mov
cmp
dec
stc
nop
xor
cld
ljmp
add
imul
call
mov
push
or
das
xchg
sbb
sbb
ffree
shlb
jns
mov
adc
pop
xchg
push
fbstp
jecxz
jmp
pushf
popl
add
sbb
rorb
jo
ret
jg
dec
jae
cltd
mov
adcl
je
icebp
dec
sbb
lds
rcrb
mov
jg
incl
mov
inc
mov
mov
and
mov
dec
std
or
fidivrl
stc
mov
outsl
mov
add
enter
cmp
repnz
and
pop
rorb
cmpl
ret
enter
mov
ret
shll
or
ja
call
or
daa
test
ja
mov
js
adc
daa
mov
dec
mov
ljmp
lret
fmull
int
mov
push
mov
and
ror
ja
add
pop
fdivr
pop
pop
mov
cld
pop
fdivrl
mov
pushl
fwait
imul
je
sub
and
push
sbb
add
div
xchg
pop
inc
ljmp
movsl
or
push
and
test
outsb
mov
addb
in
sarl
cmp
mov
loop
stos
fwait
pop
push
lret
loopne
in
push
add
or
and
or
inc
pushf
or
sbb
mov
mov
add
jne
mov
jmp
clc
in
ret
push
push
sub
shll
mov
cmp
xchg
pop
mov
inc
sub
cmp
mov
inc
out
add
lret
inc
jbe
xor
add
mov
jle
jb
in
push
js
stc
cmp
mov
jno
jg
mov
cmp
add
rcrl
jae
add
mov
or
shr
rcrb
sti
mov
hlt
iret
mov
mov
inc
in
decl
cmp
dec
iret
push
mov
stos
or
dec
movsb
push
loope
lret
mov
sbb
sub
ds
adc
test
sbb
addl
mov
add
pusha
lea
sbb
sti
jae
fdivrl
add
orb
xlat
mov
mov
ret
jo
add
fstpt
orb
jo
add
sbb
std
mov
pop
push
push
cmp
xchg
xchg
ss
dec
into
addl
pshufw
push
incl
adcb
mov
add
imul
sbb
mov
pop
lret
mov
add
fimull
les
pop
add
fs
add
and
lds
push
push
jb
add
repz
dec
cld
mov
lret
sub
cld
mov
sarb
add
hlt
stos
add
mov
pop
or
movb
jl
push
add
sub
mov
int3
jae
jne
add
mov
shll
jmp
or
jmp
call
ret
xor
sub
repz
lds
orl
mov
insb
jp
push
sub
pushf
push
xor
add
das
sub
gs
and
ret
add
lds
xor
aam
mov
out
sub
into
imul
adc
hlt
leave
mov
sti
scas
bnd
je
sub
es
push
adc
clc
xchg
mov
lock
dec
mov
mov
mov
xchg
daa
jl
mov
adc
xchg
lods
pop
add
dec
shr
add
add
push
movsb
dec
pop
jmp
xlat
rcrl
sti
adcb
or
bound
xchg
in
push
add
pop
inc
xchg
jle
push
bound
mov
incb
mov
out
inc
sahf
jnp
xchg
fldl
add
orl
sti
cmp
sahf
out
dec
mov
addl
nop
sti
hlt
fstps
into
sbb
pop
rclb
and
mov
dec
mov
call
push
cld
mov
push
push
fcomip
decl
gs
hlt
mov
cmc
inc
mov
mov
sub
inc
xor
fwait
decl
hlt
push
pop
and
sub
cmp
out
cmc
dec
ds
add
jb
jmp
fmull
jb
adc
cmp
aas
add
xor
test
repz
lcall
mov
add
nop
subb
mov
out
mov
or
pushf
inc
dec
push
movsb
adc
ret
xor
xorl
mov
pushl
and
and
ret
push
jmp
jns
add
add
cmp
sbbb
das
mov
loope
rcl
mov
jbe
sub
add
mov
ret
out
xor
sub
pop
cmpsb
stos
mov
fbld
sub
sbb
push
cmpsb
pop
movsl
dec
daa
add
cmpsb
fistps
xchg
iret
mov
insb
ret
add
cmpsb
pop
aas
cmpsl
into
mov
icebp
scas
cld
jnp
mov
int
lea
das
mov
movsb
xchg
movsl
ja
jmp
pop
in
aas
cwtl
enter
rclb
out
xchg
lods
and
sub
adcl
pop
pop
and
fcmovnb
push
add
out
in
mov
push
pop
push
stos
mov
js
pop
into
push
add
sti
pop
jb
or
into
xchg
push
xchg
fsubr
mov
ret
xchg
jae
add
lret
add
mov
push
mov
pop
and
mov
add
sub
dec
fadds
pop
iret
jnp
sti
loop
lcall
add
jg
out
or
clc
dec
mov
xor
or
add
adc
pop
iret
add
xchg
xor
lds
test
add
int3
jo
add
aam
mov
add
into
std
xor
insb
sarl
pop
into
mov
push
sbb
adc
in
jmp
add
fistpl
add
add
cmp
mov
lock
aaa
loope
sbb
ret
aam
sub
dec
add
incl
dec
pop
inc
adc
xor
push
sub
sbb
psraw
jl
sbb
mov
cmpsb
leave
sbb
mov
decl
pop
cmp
pusha
movsb
mov
sub
inc
pop
jmp
ret
pop
push
dec
push
jb
add
fisttpl
mov
hlt
add
jge
xor
push
pop
stc
jae
pop
mov
jmp
push
add
or
loopne
add
mov
jmp
jl
mov
dec
jge
mov
sub
dec
ljmp
dec
xor
pop
and
dec
mov
push
or
dec
daa
sbb
fmull
mov
sbb
dec
lret
sbb
mov
es
jle
lds
mov
mov
mov
dec
test
fst
add
lods
mov
sarb
popa
in
jp
xor
mov
xchg
mov
xlat
jb
dec
cld
pop
jl
cld
into
jp
das
fwait
scas
pop
mov
mov
scas
lret
add
cmpsl
adc
cmpsl
adc
cmp
lds
mov
xchg
sbb
stos
push
sbb
mov
dec
je
sbb
mov
jg
repz
or
paddusb
add
stos
enter
pushf
cltd
xor
inc
testb
or
add
or
inc
nop
jnp
ja
add
sbb
sti
push
sarb
push
jl
icebp
mov
adc
add
filds
mov
dec
inc
sbb
test
or
sbb
jl
leave
dec
movl
push
sbb
sarl
out
inc
fucomi
aas
and
lret
xchg
shlb
jge
sbb
add
popf
jmp
out
xor
test
dec
or
or
inc
or
add
fstl
xorl
push
dec
adc
cmp
xor
repz
push
jg
addl
mov
dec
mov
cmp
int3
cmpsl
mov
xor
or
jl
cmp
outsl
mov
mov
lret
fdivr
cmp
jp
ret
inc
pop
loopne
jmp
andb
sarb
add
mov
fwait
and
jmp
ss
inc
sbb
gs
xchg
out
jne
sbb
test
mov
fdivrl
data16
mov
es
fstpl
xor
push
adc
faddp
cmp
jno
fwait
enter
cmp
outsb
mov
mov
lahf
fwait
add
jmp
dec
mov
add
push
jae
fiadds
call
lcall
dec
in
bound
lret
out
jno
xchg
xchg
mov
cwtl
out
sti
cld
push
mov
jbe
fcoml
lret
test
scas
ficoms
bound
ja
cld
push
mov
jmp
pushf
mov
push
filds
push
mov
push
push
add
icebp
push
cmp
push
inc
lds
aad
cmpsb
jp
and
fld
add
bound
and
pop
mov
adc
lret
push
dec
fwait
and
fwait
push
out
jbe
push
aas
mov
subb
iret
add
fwait
iret
dec
push
add
adc
fsubrs
sti
jnp
out
and
mov
push
out
inc
and
add
add
adc
adc
mov
outsl
cs
add
mov
dec
push
pop
aas
and
jle
mov
call
cmp
call
das
aad
iret
adc
xor
out
test
pop
dec
jg
in
add
mov
jle
mov
incl
jae
mov
jmp
insl
cmpsb
mov
jecxz
testb
add
add
jmp
call
push
incl
mov
in
mov
mov
lret
push
popf
add
clc
jl
into
hlt
sbb
and
mov
dec
les
xor
adc
movsb
mov
mov
scas
call
loopne
jnp
gs
jmp
pslld
filds
test
loope
push
cmp
cmp
cmpb
xor
fstps
adc
add
dec
add
cs
pop
fldl2t
lds
pusha
cld
jle
and
xchg
mov
sarb
pop
loope
xor
call
jle
in
popf
bound
inc
scas
jne
lahf
lret
call
push
sbb
je
push
adc
mov
mov
sti
aam
mov
adc
push
xlat
je
int
inc
ret
test
xchg
mov
push
mov
scas
inc
cli
mov
pop
add
add
adc
jb
dec
sti
negb
sbb
pushf
mov
push
ds
leave
add
pshufw
and
and
mov
andl
pop
ret
mov
lret
add
cmp
cmpsl
add
rcr
lret
mov
mov
add
std
push
ljmp
pop
cmp
push
adc
and
dec
cmp
andb
std
jbe
and
push
js
add
fisubs
testb
add
add
jge
push
xor
mov
mov
test
cmpsl
or
movsl
addb
repnz
ljmp
pop
fists
jb
xchg
aaa
cs
jb
repnz
jae
in
test
data16
aas
add
cmp
sub
gs
dec
or
and
scas
in
dec
hlt
dec
push
add
ds
push
in
push
std
loop
jl
in
scas
cld
jecxz
push
std
sbb
jb
or
ret
xor
push
push
dec
add
cli
ss
add
push
jb
les
or
cld
jge
sbb
sbb
popa
inc
stos
sbb
lcall
lods
addr16
fidivrs
imul
add
or
or
nop
lret
jmp
add
jl
cmpsl
pop
int
add
mov
jb
xor
mov
mov
cmp
mov
xchg
add
iret
xchg
cli
sub
pop
push
sbb
or
inc
add
jmp
cmpl
test
addr16
or
add
pushf
xlat
push
jg
and
js
xchg
std
or
jbe
je
ud2
addl
dec
or
mov
lret
or
icebp
lret
bound
dec
int3
dec
mov
push
mov
lahf
dec
rcrl
inc
shll
in
or
xlat
xchg
pop
hlt
adc
test
push
push
cmp
push
adc
or
jg
xlat
xlat
or
pop
or
adc
sbb
adc
mov
cli
mov
xchg
xchg
fidivrs
enter
dec
test
ret
and
fildl
je
ret
std
adc
add
sbb
add
jmp
sbb
lock
repz
dec
fdivs
add
push
inc
adc
cmp
jle
in
call
jecxz
decl
out
mov
mov
clc
lcall
in
lcall
in
mov
data16
divl
or
push
sub
adc
and
xchg
add
cmp
cli
xor
pop
movsl
call
mov
push
add
sub
incl
add
xor
inc
or
sahf
add
insl
scas
addb
cwtl
pushf
inc
cmpsb
fbstp
mov
cmc
movsb
rol
mov
ljmp
inc
lods
lods
cmp
ljmp
int
xlat
cmp
sbb
inc
int
lock
mov
add
mov
jmp
test
lret
mov
mov
mov
or
or
or
outsb
lods
cmp
pop
push
mov
scas
out
jecxz
mov
loopne
add
inc
int3
add
mov
push
xchg
mov
xchg
xchg
fmulp
sti
mov
jecxz
call
jo
ret
or
add
call
mov
mov
add
in
ret
rorl
or
pop
test
jb
adc
icebp
int3
or
mov
mov
imulb
push
jb
adc
loope
or
mov
mov
out
or
jmp
add
les
shrl
adc
jne
push
adc
mov
sarl
inc
push
add
sbb
pop
mov
shrl
inc
sbb
inc
sbb
out
shr
or
jge
inc
sbb
inc
sbb
fwait
and
nop
or
call
cmp
inc
sbb
and
inc
mov
mov
ds
rep
ds
add
adc
incl
add
fs
cld
add
and
idivl
xchg
int3
lea
aam
mov
cmp
mov
cmpsl
xor
bound
and
push
xor
in
out
test
add
mov
or
out
out
addr16
inc
scas
adc
aas
mov
cmpsl
xorl
idivb
mov
or
std
inc
add
std
inc
in
mov
mov
inc
pop
stos
add
xchg
mov
sub
jne
pop
leave
out
add
inc
push
test
pop
inc
mov
jbe
inc
dec
inc
movsl
xchg
in
inc
lods
jecxz
into
je
cmp
outsb
push
mov
and
add
pop
int
add
jmp
ljmp
add
add
shr
pop
xchg
dec
stos
mov
mov
lcall
jne
aaa
jb
scas
hlt
xor
jnp
test
inc
inc
aad
mov
jb
stos
pop
mov
fiaddl
mov
fadds
or
sbb
test
mov
rcll
jne
ljmp
sti
lcall
add
adc
or
dec
pop
pop
aas
inc
jp
push
rolb
or
cltd
mov
add
jbe
pop
sub
sub
sti
jb
inc
icebp
xchg
pop
addb
or
ret
add
mov
outsl
or
sub
adc
add
ret
ret
dec
mov
xchg
push
mov
xchg
mov
xchg
jg
aaa
xchg
call
add
enter
mov
push
mov
mov
mov
dec
add
outsl
adc
xor
jne
inc
std
jne
xchg
std
push
daa
dec
rorb
jmp
lea
push
fwait
xchg
mov
repz
lcall
int
dec
pop
sbb
call
add
and
or
into
out
cld
inc
fidivs
ret
mov
jnp
hlt
incl
ds
cld
sub
jmp
mov
add
pcmpeqw
add
sub
decl
cmp
loop
or
or
sti
mov
imul
mov
adc
test
pop
std
or
sbb
frndint
jle
hlt
cld
data16
cld
pop
lret
int
add
insl
fwait
pushf
mov
pop
pminsw
fstpt
mov
jb
fildl
sarb
inc
mov
mov
push
hlt
xchg
push
hlt
jle
push
hlt
lea
mov
fisttpl
ljmp
roll
xor
and
popl
lret
aaa
aas
into
or
por
or
sub
andl
popl
cs
push
lret
scas
dec
pop
add
mov
lret
add
sub
jmp
push
mov
lea
popl
scas
mov
mov
push
icebp
inc
jb
add
xor
test
test
lret
push
lahf
cmp
lds
in
sti
outsb
or
add
add
mov
dec
mov
add
dec
bnd
dec
repnz
jl
jmp
dec
stos
ljmp
adc
add
or
mov
and
test
test
fcoml
call
fcmovne
xor
repnz
jle
pop
pop
mov
int3
xchg
je
movsb
adc
jle
jg
inc
cmp
ja
add
into
fistpl
add
testb
jle
addb
js
or
mov
pop
int
push
pop
cld
fmul
cmp
pop
xorb
aaa
jae
or
mov
aaa
call
aas
mull
adc
jp
pop
mov
lods
std
mov
ljmp
add
pop
lods
sub
jb
ss
imul
cmp
or
inc
pop
mov
xchg
cmp
cld
aas
push
cmpsl
cwtl
addr16
mov
and
sbb
int3
je
mov
cs
adc
xor
sub
or
ds
sbb
leave
adc
xchg
fwait
inc
mov
add
mov
and
push
add
add
dec
adc
mov
fs
loop
cmp
mov
jo
jle
test
add
push
outsl
leave
xchg
jo
add
insl
dec
jne
jmp
lcall
jmp
push
jle
cmp
lret
lock
and
add
lret
add
mov
mov
and
cmp
mov
das
cmp
imul
cmp
mov
fisubrs
cmc
testb
sbb
cmp
sub
sahf
pop
psubusw
dec
mov
sbb
push
push
cmp
popl
repz
out
ss
stos
mov
dec
mov
add
push
cmp
out
dec
dec
cmp
xor
jmp
inc
push
das
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ja
inc
and
cmp
inc
sub
mov
mov
jg
adc
inc
push
push
or
pop
push
pop
push
or
push
testb
cmpsl
jbe
aas
mov
mov
push
mov
cmp
sub
mov
cmpsl
pop
or
jp
out
xchg
xchg
cld
xor
cwtl
cld
cmp
or
shrd
add
xchg
xor
pop
pop
push
mov
roll
decl
ljmp
sub
out
xchg
sub
add
mov
jg
jg
inc
mov
add
dec
mov
pushl
sti
adc
enter
loopne
shrb
ret
mov
push
xchg
mov
push
ret
ljmp
or
push
sub
aas
push
pop
inc
mov
jne
push
sub
sub
mov
jo
call
ficoms
sub
rorl
clc
cmpsl
gs
and
cmpl
mov
mov
lret
jmp
add
push
mov
push
and
mov
add
lret
add
iret
test
mov
add
lods
daa
push
inc
sub
xor
xchg
mov
sub
cmp
fwait
mov
loop
inc
addl
push
inc
pop
outsl
add
jnp
dec
pusha
ja
mov
shlb
add
jmp
mov
into
test
mov
push
fnsave
or
mov
sub
dec
call
add
push
add
pop
int
or
enter
adc
add
inc
push
cld
dec
xchg
ror
imul
in
pop
dec
inc
cmp
xchg
dec
sbb
jg
pop
jmp
inc
add
fwait
mov
call
dec
mov
inc
lret
imul
inc
dec
add
mov
dec
lcall
or
sbb
lea
mov
mov
inc
add
das
shlb
add
mov
mov
pop
inc
add
adc
out
mov
push
movsb
jge
mov
mov
icebp
leave
sbb
mov
jbe
add
push
push
inc
add
fadds
ds
sub
fldenv
mov
add
cmpsb
dec
cmp
mov
shll
lds
int3
lret
lret
in
jle
leave
pusha
inc
cmpsb
cli
sub
jae
enter
test
decl
stos
decl
add
cmpl
jl
pop
add
ror
add
shll
jbe
fwait
pop
sbb
stos
add
dec
dec
cld
cmc
and
test
jmp
pop
stos
push
sbb
cmp
pusha
fwait
enter
addr16
mov
nop
push
push
test
mov
adc
call
aaa
out
mov
and
iret
add
test
mov
notb
add
ss
mov
add
add
or
jae
mov
and
add
repnz
mov
movsl
das
and
sbb
pushf
mov
test
adc
inc
jmp
mov
pop
push
and
adc
insb
daa
cmp
icebp
movsb
push
call
orb
jns
mov
add
cmp
push
mov
fldl
add
cli
mov
add
leave
add
cmp
xchg
jnp
add
rclb
add
arpl
push
push
pushf
mov
shlb
xchg
dec
mov
movsb
adc
add
inc
sbb
or
inc
inc
and
cltd
mov
sbb
inc
and
pop
leave
rorb
test
xchg
sub
inc
add
pop
dec
outsl
and
mov
outsl
and
xor
xchg
mov
add
and
loop
pop
popf
jecxz
cld
push
repz
cmpsl
out
aas
mov
inc
and
orb
fsubrs
dec
sub
pop
push
lahf
cmp
repnz
inc
mov
xlat
cld
xor
pop
xor
ret
push
xor
out
mov
daa
adc
ret
mov
add
lea
sub
das
std
mov
daa
xchg
jb
or
jnp
mov
test
push
cmpsb
sub
jno
cmpsl
cld
movsl
and
in
and
sub
jbe
mov
adc
cmc
and
jle
xor
lock
mov
add
movsb
testl
add
in
sbb
lods
adc
movsb
ret
das
mov
je
adc
pop
fwait
xor
mov
jne
add
mov
stos
add
std
add
mov
dec
sbb
mov
icebp
mov
data16
dec
or
call
lahf
and
xchg
fcmovnb
add
xor
push
aad
pusha
pushf
add
add
dec
jge
mov
subps
lahf
push
cwtl
fcmove
data16
cmp
mov
shlb
mov
adc
lret
add
and
push
test
je
push
es
mov
jmp
inc
fiadds
xor
in
nop
out
into
cmp
sub
incl
in
outsl
in
hlt
jecxz
add
xor
aam
fldt
in
push
dec
sbb
adc
dec
jle
adc
cmp
add
cld
imul
in
lea
pop
dec
push
shlb
add
pop
leave
mov
mov
cwtl
push
or
and
inc
push
pusha
in
or
or
xor
popa
xchg
push
inc
xchg
lock
insb
mov
jmp
lock
gs
add
lock
mov
and
mov
pushl
bound
push
sub
mov
icebp
scas
mov
jl
stos
sbb
dec
data16
mov
dec
mov
into
mov
testb
sub
pushl
push
and
fcompp
ljmp
loop
push
cmp
or
ror
int3
lods
lret
sub
xchg
shll
jmp
insb
aad
jmp
add
mov
aam
iret
add
bswap
pop
mov
mov
and
insl
mov
jmp
and
cmp
call
inc
xchg
das
mov
cmp
cltd
fsubrl
icebp
test
pusha
inc
xchg
fildll
fildll
sti
mov
fists
mov
les
inc
inc
push
out
dec
in
cmp
sub
jno
xchg
mov
testb
mov
sti
jmp
out
mov
jge
xchg
cmp
adc
and
je
out
sbb
add
mov
lea
mov
fs
test
sti
hlt
inc
fildl
aad
je
into
sbb
add
xchg
mov
test
mov
frstors
push
jmp
and
sbb
xchg
push
lea
dec
cld
adc
push
outsb
add
push
pop
call
inc
inc
or
add
es
add
dec
bound
call
pusha
mov
mov
add
add
lret
xor
lcall
call
shlb
fistl
into
ret
xor
shlb
add
cmpsl
push
adc
adc
push
std
add
add
inc
mov
invd
dec
sub
lcall
cmp
clc
gs
loopne
push
sub
push
dec
cmp
fmulp
jge
ret
inc
scas
repnz
sub
movsl
dec
inc
mov
xchg
mov
call
mov
mov
ret
cmpsb
push
repnz
movsb
xorb
inc
loop
lods
addb
add
add
cmc
js
out
fstps
sub
jmp
mov
lods
mov
pop
aas
into
testl
repnz
sarb
add
sbb
jecxz
ficoml
incl
int
xor
dec
sub
test
mov
in
xor
ljmp
mov
addb
add
add
iret
inc
mov
imul
dec
sbb
out
dec
fiadds
test
mov
or
adc
in
push
sahf
or
lods
mov
je
aam
adc
div
fidivrl
mov
je
dec
cmp
ss
rclb
and
jmp
jge
add
fsubrp
sti
icebp
lret
bound
scas
cmp
jmp
cmp
sub
fnsave
fdiv
lret
bound
les
jb
mov
scas
clc
push
mov
push
add
cld
adc
shl
and
sahf
mov
or
add
out
ficompl
into
add
inc
sub
xchg
pop
out
mov
inc
fildl
test
std
mov
xor
pop
jg
push
movl
push
lcall
xor
adc
jg
mov
push
sti
lcall
fadds
adc
inc
pop
pop
aas
and
rcl
mov
aaa
fldenv
loop
dec
cmp
mov
aaa
add
rcll
inc
add
outsb
add
jbe
das
and
jle
mov
push
xor
aad
aas
cmp
fbstp
fildll
cmp
es
dec
mov
adc
mov
add
xchg
enter
adcb
idivb
add
mov
jae
lret
mov
roll
or
icebp
out
or
pop
fsubrl
xchg
fxam
outsb
mov
int3
ds
push
into
sbb
mov
inc
ret
xchg
insl
inc
mov
cmp
mov
orl
xor
test
lret
cmp
frstor
ljmp
ds
pop
fisubrl
add
mov
mov
call
fs
push
jmp
pop
add
xlat
sub
sub
int
lret
outsb
cmp
xor
xor
fstpl
dec
add
mov
cld
aam
mov
jne
xor
mov
xchg
lods
inc
ret
lds
jl
adc
jl
imull
shll
adc
inc
cmp
and
pop
cmc
ljmp
add
scas
test
fiaddl
mov
lods
inc
inc
lds
inc
out
or
add
xchg
inc
add
mov
outsl
push
lret
jnp
sbb
mov
cli
push
inc
ja
fs
cld
sbb
fmull
inc
mul
xchg
cmpl
scas
mov
lea
mov
rclb
add
add
dec
out
test
push
push
bound
xchg
call
mov
mov
sti
jmp
lods
pop
and
or
add
cmp
and
mov
add
mov
aas
mov
mov
cmpsb
and
push
idivb
inc
cmp
pop
cmp
and
roll
daa
jo
jge
mov
pushl
inc
mov
or
mov
pushl
mov
out
mov
jnp
mov
cmp
mov
call
daa
lods
cmp
cli
lret
xacquire
jmp
add
lret
call
cmc
jbe
dec
inc
repz
pop
into
add
dec
ficoml
ret
in
loop
sbb
pop
push
cmp
mov
mov
jne
rorl
mov
sub
pop
and
jl
sub
cmp
push
into
cmp
mov
or
jmp
xchg
add
jge
pmuludq
lds
adc
sub
xchg
sub
scas
lret
add
add
adc
pop
sub
and
sub
sub
inc
jno
out
xor
out
cmpsl
add
test
cmp
fisttpll
push
inc
or
xchg
cmp
xor
and
jmp
mov
inc
vandps
xor
or
sti
idivb
pop
and
jmp
add
mov
xchg
loopne
sbb
pop
jge
sbb
mov
push
pshufw
roll
je
fiadds
lods
or
mov
push
inc
enter
movsl
lret
lret
mov
into
data16
push
ret
call
nop
push
jg
pop
out
jmp
enter
test
addb
add
add
sbb
cli
push
add
lret
mov
mov
and
pop
inc
and
aaa
pop
xchg
int
shlb
and
jns
cmp
jle
mov
in
pop
das
mull
and
out
dec
orb
mov
mov
mov
mov
xchg
daa
mov
mov
xchg
push
dec
out
cmp
add
add
icebp
xlat
pop
fildll
loop
cmc
rorl
addl
imul
out
or
lods
mov
inc
sbb
pushl
lret
sub
mov
cmp
lcall
mov
test
jp
iret
pusha
shlb
sub
xor
jmp
jnp
mov
push
and
mov
out
jp
test
ret
jno
mov
mov
add
test
rcrb
lret
inc
fists
lret
jmp
sarb
lret
rclb
ret
cmc
xor
testb
cld
mov
dec
jle
and
std
into
mov
aaa
mov
ret
lea
sub
ds
mov
stos
sub
pop
inc
stc
mov
sbb
xor
dec
mov
jp
fs
xor
pushf
mov
movsl
fisttps
movsl
xchg
out
popf
int
mov
mov
pop
mov
or
jmp
add
lret
add
add
mov
push
addr16
cmp
bound
pop
inc
jle
pusha
repz
fiadds
lret
dec
and
lret
add
xor
cld
lcall
lret
outsb
sti
lcall
and
xor
std
cmpl
add
roll
dec
jp
dec
cmpsl
xchg
movsb
hlt
and
test
lret
pop
pusha
lea
xor
add
sbb
push
cmp
inc
and
mov
sbb
jo
sbb
js
sbb
lea
mov
mov
pushl
and
fdivs
popl
das
jg
adc
pop
xchg
mov
adc
add
mov
push
ss
add
mov
jmp
sbb
and
and
add
add
je
xchg
sbb
and
aaa
shll
sahf
sub
push
filds
dec
sbbb
and
test
leave
sub
mov
cmpsb
cld
sbb
pop
mov
rdtsc
movsl
jge
cmp
insb
enter
mov
mov
adc
lret
jmp
cmp
xor
and
outsb
mov
mov
pop
iret
add
and
rcll
adc
aam
dec
test
notl
push
and
out
ret
sbb
xchg
ret
dec
movsb
sbb
inc
jbe
clts
hlt
jne
add
add
and
push
fmulp
xchg
in
cmpsb
push
loope
or
jmp
adc
out
pop
cmpsl
mov
xchg
sub
fs
xor
andl
push
dec
add
movsl
jae
sub
mov
data16
test
xchg
out
sbb
adcl
mov
mov
mov
jne
mov
jmp
into
pop
cmovle
xchg
call
mov
push
ret
inc
mov
ret
cmp
pop
ret
push
sbbl
mov
mov
mov
lret
push
roll
sbb
cli
mov
jp
inc
fwait
push
dec
add
adc
mov
mov
cld
je
xacquire
cld
push
jo
add
mov
dec
push
in
or
add
mov
cld
dec
movsl
cmp
add
mov
iret
cld
add
cmp
daa
inc
sbb
sbb
les
mov
rolb
out
int3
mov
out
sub
mov
fiadds
outsb
sar
or
shrb
fwait
or
and
mov
add
mov
mov
push
add
mov
shl
mov
jo
xor
sbb
sub
out
std
cmpsl
lret
loope
repnz
fs
sarl
int
sbb
and
jnp
add
stc
pop
jne
loop
test
pop
out
cmpb
add
mov
jb
mov
mov
mov
lcall
sub
add
jg
movsb
dec
add
enter
stc
sbb
stos
jb
fwait
insb
jns
or
cmpsb
add
adc
pop
adc
add
fdivrs
mov
test
mov
add
adc
rcrb
scas
lret
test
sbb
mov
push
lret
add
mov
jb
test
pop
mov
sub
mov
add
mov
xchg
xor
add
ffree
add
lahf
sti
jb
dec
repnz
test
data16
sbb
mov
ret
jmp
call
xlat
push
cmp
dec
mov
lret
test
sbb
inc
add
lret
add
mov
jmp
pop
and
jns
ret
dec
mov
out
add
cmpsb
repz
test
push
inc
hlt
adcb
test
nop
call
mov
mov
aas
or
jecxz
jne
and
push
aam
add
and
andl
mov
dec
adc
pop
out
call
add
pop
pop
mov
aaa
sarl
add
and
add
add
pop
push
call
cmp
cmc
mov
call
mov
cmpl
jecxz
adc
in
adc
mov
mov
xor
popa
push
adc
mov
add
adc
or
imul
add
pushl
es
push
jns
pop
sub
adc
mov
xor
jb
add
enter
hlt
subl
mov
sbbb
mov
fsubl
mov
fs
daa
mov
inc
dec
stc
scas
or
sbb
dec
pop
sub
int3
jmp
and
mov
push
pushf
adcb
mov
inc
lret
jmp
incb
push
lret
std
and
fisubl
cli
cmp
add
ret
mov
add
shlb
cmc
xor
pxor
inc
fnsave
or
or
xchg
mov
lret
int3
lahf
test
xor
shrb
pop
sbb
mov
xchg
add
mov
ljmp
popf
call
add
sbb
fs
lret
push
push
mov
push
test
inc
pushf
sti
jmp
mov
movsb
mov
mov
test
es
cmp
add
lcall
iret
mov
xlat
sti
lcall
cld
xor
xor
aaa
add
add
sbb
pop
pop
iret
add
clc
sbb
add
xlat
iret
add
imul
jecxz
add
iret
push
lea
repz
call
push
sub
sub
xchg
sti
mov
into
je
push
adc
call
sbb
pop
pop
and
loopne
into
add
iret
into
dec
push
jge
das
sbb
sub
jmp
fs
dec
add
inc
into
rep
iret
mov
jp
movsb
jns
shll
mov
add
add
movsb
iret
mov
jp
movsb
sbb
in
repz
ss
in
push
jno
js
xor
push
jmp
in
rorb
or
jmp
decl
mov
jmp
jl
ljmp
outsl
insb
mov
aas
daa
xor
lds
adc
ret
addb
add
add
das
fsubl
mov
sarl
add
in
jno
gs
cld
lret
mov
ljmp
std
push
jns
fdivl
inc
cld
push
inc
cltd
cld
iret
movsl
or
jle
cltd
fsubrl
jne
dec
push
mov
cmp
rcrl
lcall
jne
in
arpl
inc
xchg
and
or
test
cli
pop
or
mov
inc
xchg
cmp
or
popf
add
mov
sti
jmp
rcll
std
and
or
add
pop
enter
xchg
lcall
cmpsb
dec
jl
xchg
lret
mov
xchg
mov
and
push
mov
negb
hlt
and
mov
sti
cld
push
enter
or
loope
xchg
fdivrs
std
mov
and
jl
insb
bound
adc
out
outsl
into
mov
lock
call
int
cmp
sahf
loop
sub
je
call
dec
and
push
adc
jo
mov
or
cmp
leave
pop
add
mov
cmp
cltd
xor
daa
xchg
outsb
and
push
pop
adc
mov
add
add
push
mov
add
or
cmp
popf
icebp
add
popf
ficomps
mov
xchg
roll
out
sbb
add
jge
repnz
and
into
mov
add
mov
and
jp
mov
ljmp
push
jl
or
sbb
mov
jle
add
imul
dec
mov
mov
jl
mov
xor
mov
pushl
in
xorl
push
mov
decl
sbb
enter
jo
inc
fisttpll
jo
incl
sub
dec
sub
mov
shrb
imul
add
add
jns
lods
sbb
jp
loope
jnp
dec
leave
add
pop
mov
add
pop
shll
jb
sub
and
dec
mov
icebp
rcll
jmp
and
int3
jmp
pop
out
pop
adc
mov
nop
push
inc
lods
pop
mov
inc
add
dec
add
add
iret
daa
cmpsl
in
inc
int
inc
test
xor
and
out
cwtl
int
movsl
xchg
jmp
sub
sub
and
and
imul
decb
and
filds
or
mov
xlat
adc
std
stos
inc
inc
lds
cld
xchg
adc
pusha
pop
call
adc
sub
xchg
xor
lea
and
pushf
fcmovnb
add
jecxz
bound
hlt
adc
inc
out
mov
sti
subb
pop
add
mov
push
and
sub
add
inc
mov
fildll
inc
scas
xlat
inc
mov
jmp
lea
inc
jecxz
imul
lahf
cld
adc
add
mov
sbb
xchg
push
lea
add
cmpsb
incl
std
outsl
cmp
jb
jbe
xchg
enter
test
cld
lods
fcos
jl
int
cmpsl
clc
adc
mov
jmp
mov
mov
sti
movsl
jno
imul
add
add
pushf
fcos
add
lret
enter
outsl
sti
adc
movsb
jg
xchg
fadds
mov
push
lret
add
outsl
mov
and
sub
gs
sub
stc
pop
push
ljmp
out
mov
xlat
shll
loop
inc
lret
jmp
and
out
add
in
push
adc
out
int
mov
adc
imul
icebp
out
xlat
lods
and
add
call
hlt
mov
clc
add
shrl
lcall
xchg
hlt
pop
mov
xchg
cmc
daa
sahf
mov
test
ficompl
cld
cld
jns
inc
jmp
mov
adc
add
mov
stc
sti
faddl
inc
jmp
xlat
mov
pop
push
fcmovne
adc
int
nop
je
iret
int3
push
cmpl
rolb
cmp
and
and
sti
push
scas
mov
mov
hlt
adc
mov
vphadddq
stos
mov
dec
insb
loop
add
add
mov
sub
lods
pop
mov
mov
jecxz
push
cmp
dec
and
sti
jl
mov
imul
or
push
call
xchg
push
inc
fildl
and
mov
pop
cmp
and
sti
mov
add
out
movl
push
out
cld
adc
adc
push
mov
mov
add
clc
cmp
aas
and
mov
pcmpgtb
sti
test
pop
insl
add
pop
insl
lods
subl
push
sub
movsb
mov
aas
mov
inc
out
add
cld
lahf
out
jbe
add
cmp
or
rcll
ja
call
and
jns
bound
lds
jl
push
add
add
sub
pushf
lock
cld
test
das
or
ljmp
in
mov
pushf
xchg
fiadds
xorl
pmuludq
add
loop
push
fidivrs
add
lods
notb
popa
rclb
ret
and
ret
mov
mov
lret
and
and
cmc
lea
add
sub
data16
add
mov
repnz
lret
insb
inc
inc
ror
mov
in
adc
or
or
push
into
aam
rorb
mov
sub
es
cmc
sbb
mov
loopne
lret
test
jge
inc
jmp
jno
xchg
cwtl
or
inc
fnstenv
or
or
sti
cld
loope
inc
jmp
mov
out
sbb
inc
fcmovnb
push
ds
and
mov
add
stos
and
mov
push
ljmp
lock
test
fidivl
inc
jmp
jno
test
mov
mov
pop
popf
in
push
xor
mov
pop
sbb
add
add
addr16
dec
les
scas
jecxz
je
and
or
test
aas
lret
std
xor
xchg
xchg
push
adc
jg
mov
add
sbb
mov
and
adc
iret
repnz
iret
push
mov
je
mov
add
lret
inc
mov
jl
xchg
sti
jle
or
push
mov
add
mov
daa
add
jb
imul
cmpsb
dec
repz
mov
pop
jo
call
popa
push
add
fmul
pushl
rcr
dec
fmull
xor
add
fwait
mov
std
mov
aas
mov
pop
orb
rorb
nop
or
jle
jmp
push
aaa
xor
push
lret
call
cmc
fisttpl
add
popa
pop
std
cmpsl
mov
cld
and
mov
in
not
lret
sarb
stos
mov
pop
shrl
mov
out
imulb
sub
mov
sub
mov
push
add
mov
loopne
clc
test
sub
loope
lea
repz
mov
mov
add
mov
add
hlt
lods
add
fbld
pop
xor
out
mov
pop
fisttpl
aam
mov
fildll
repz
lret
add
flds
jne
and
pop
cmpsb
xchg
inc
scas
xchg
sub
data16
adc
mov
stc
decl
sub
adc
sub
repz
add
vpsubq
and
adc
push
es
inc
mov
add
nop
xchg
mov
jmp
es
cld
jmp
mov
test
mov
add
ds
ja
fwait
int3
mov
mov
cmp
mov
and
roll
add
inc
add
int3
add
add
hlt
repnz
pop
int3
jg
mov
nop
pop
and
aas
dec
xor
cmp
incl
adc
dec
mov
data16
aas
push
daa
cmp
mov
dec
pop
and
cmpsl
insb
push
int3
xchg
repz
pushf
and
mov
xor
xchg
push
mov
jb
mov
ss
add
shrb
movsl
mov
mov
shll
test
mov
frstor
call
mov
call
mov
push
mov
adc
mov
rorl
das
icebp
and
nop
ret
xchg
stos
cld
shr
aas
mov
shlb
inc
addb
scas
xor
inc
popf
fldt
xor
add
add
je
push
popf
jae
xor
pushf
incl
fistpll
add
repz
test
or
jle
push
scas
xchg
sub
xchg
rcll
repnz
jmp
mov
dec
iret
jmp
xor
test
ss
xor
fdiv
ret
mov
loopne
hlt
add
lret
push
cs
lods
add
loopne
cmc
cmp
andl
gs
add
std
test
mov
bound
lret
mov
push
inc
mov
inc
jmp
std
push
or
jno
test
xor
arpl
push
inc
add
pop
adc
inc
jmp
in
mov
negb
and
push
mov
push
mov
addr16
lret
idiv
dec
lods
rolb
mov
adc
iret
or
add
pop
adc
aaa
cld
adc
dec
pshufw
xor
push
push
inc
push
dec
push
aas
and
cmp
je
jl
dec
add
mull
dec
scas
mov
mov
enter
icebp
add
adc
and
leave
add
iret
shrl
inc
pop
adc
fwait
inc
lcall
cmp
and
inc
or
push
or
or
push
int
inc
sbb
or
push
test
enter
pop
test
incl
dec
mov
or
xchg
adc
jb
cmpb
jno
int3
lcall
jae
out
mov
add
pushf
sub
cmpsb
xchg
jmp
ret
mov
push
fadds
je
cmp
cld
cmpsl
push
lock
mov
inc
jae
int3
insb
add
dec
jmp
shll
insl
movsb
jg
lret
call
clc
add
jecxz,pt
cmp
add
mov
test
ljmp
jge
mov
sbb
xchg
lret
jmp
scas
xor
into
and
adc
mov
cmpsl
add
mov
rorl
fcomps
mov
enter
push
pop
jmp
xlat
mov
xor
sub
mov
and
lret
add
jbe
test
in
add
dec
push
inc
std
sub
add
jle
adc
xchg
mov
icebp
addl
int
inc
int
lret
add
movsl
je
jb
dec
ret
int
shlb
lret
adc
sbb
sub
add
adc
scas
dec
shr
inc
test
dec
dec
sar
adcb
out
cld
push
clc
fcoml
cwtl
pop
add
xchg
pop
sbb
sbb
jo
mov
test
int3
pop
pusha
leave
rolb
jnp
cmpl
pop
test
push
mov
test
cmovo
mov
test
call
cmp
stos
add
add
pop
dec
cmp
out
mov
xor
inc
mov
jmp
or
jp
pop
inc
lcall
lret
jmp
push
js
cld
je
mov
push
lcall
repz
jge
pop
mov
std
cli
ret
and
inc
mov
sbbb
add
mov
dec
xchg
push
adc
or
sub
and
ds
jp
lcall
call
sub
insl
mov
roll
inc
je
pop
fisttps
inc
pop
mov
jge
cmp
sub
pop
fidivrs
jbe
cmpb
mov
lret
cmc
jl
je
push
ss
inc
mov
xor
fstpl
outsl
ret
add
add
or
in
ret
jle
add
and
add
push
roll
ja
inc
mov
mov
adc
cmp
jp
shll
test
push
test
les
push
jp
stos
pusha
mov
push
inc
sbb
test
hlt
jbe
cld
cmp
or
jle
scas
outsb
cmp
add
add
stos
mov
test
mov
inc
leave
mov
xchg
dec
mov
andb
mov
repnz
stos
push
lret
sub
jmp
lods
lret
push
cwtl
sbb
xchg
mov
iret
ret
out
push
inc
jmp
cli
sbb
arpl
jg
int
add
inc
jg
cltd
jge
leave
push
stc
and
add
lret
sarl
jmp
mov
mov
add
add
outsl
add
mov
rolb
dec
leave
mov
and
sbb
mov
inc
sahf
sahf
add
xchg
jle
fwait
cmpsb
pop
mov
test
call
or
sti
out
xor
pushl
push
xor
sti
pop
and
rclb
add
add
dec
push
and
add
loop
orl
icebp
mov
jae
dec
enter
jns
pusha
or
add
cmp
mov
add
jb
enter
shrl
daa
lods
or
jecxz
scas
or
sub
scas
and
sti
das
push
rcll
sub
aas
mov
mov
or
add
add
filds
mov
jmp
inc
mov
dec
mov
clc
out
pusha
add
sub
mov
movsl
in
lods
gs
mov
cli
adcl
push
and
mov
aas
mov
xchg
jmp
dec
int3
dec
mov
dec
and
mov
out
add
xchg
outsb
rclb
mov
cmp
add
jmp
cmp
arpl
push
test
add
dec
in
fiadds
mov
push
jne
add
fnstsw
mov
xchg
lret
outsb
push
mov
lret
jmp
scas
mov
mov
add
lret
cmpl
xlat
dec
fistpll
mov
ljmp
std
jno
jg
test
add
add
ds
mov
add
mov
mov
test
fnstenv
jmp
xor
imul
push
dec
pop
jle
ja
std
int
ret
and
mov
xchg
xor
je
sbb
mov
jbe
xor
imul
jne
nop
int3
xchg
sub
xchg
add
add
mov
jg
xor
jle
xor
popf
add
nop
mov
hlt
jo
xchg
cmp
inc
loop
pop
int
mov
push
std
mov
rcrb
inc
sbb
add
xor
jl
cli
mov
xchg
mov
cli
inc
or
clc
or
sub
ljmp
add
fstps
call
leave
or
pop
sub
add
push
call
std
inc
xchg
cmpsb
andl
adc
sub
das
cmp
jg
addb
cld
xchg
aas
adc
sub
jp
mov
sub
orl
jmp
ljmp
outsb
xchg
mov
fldl
add
jmp
shrb
pop
aas
xchg
jnp
sub
xorb
std
mov
mov
lret
outsb
rorb
and
sbb
iret
lods
outsb
mov
inc
lods
sti
lea
add
inc
sub
cmp
arpl
jbe
adcl
iret
sub
add
mov
sub
mov
arpl
jo
aad
sub
scas
shrb
inc
adc
or
jb
mov
iret
lods
dec
mov
out
cmp
pop
mov
decb
jbe
inc
lea
add
loope
jmp
mov
jmp
xchg
stos
add
pop
sbb
cli
cli
and
or
and
add
add
and
jmp
in
add
mov
dec
add
mov
test
mov
cs
bound
je
stos
cmp
popf
add
jmp
mov
dec
int
inc
inc
lds
ja
push
ja
sub
dec
cwtl
jmp
dec
repnz
sti
incl
lret
cmp
sbb
enter
test
aaa
aad
call
add
jg
ljmp
jl
rorl
stos
inc
sti
cmovnp
cmp
shlb
lea
push
cld
call
mov
leave
into
arpl
call
movsl
lret
jg
push
mov
addb
leave
xor
mov
add
add
jae
dec
mov
call
std
int
ja
cmp
decl
sbb
add
or
adc
sbb
pop
pop
decl
popl
jge
xor
enter
lret
push
aaa
cmpsb
and
xchg
pop
call
mov
subb
pop
mov
scas
push
psubusw
sbb
jg
fisubs
xor
mov
jbe
std
xchg
mov
out
xor
arpl
or
mov
loope
mov
je
xchg
mov
dec
cmp
mov
xor
push
fldcw
mov
mov
sbb
lock
test
pop
add
pop
mov
xchg
fnclex
aam
sbb
test
add
sarb
dec
mov
out
cltd
fisubrs
add
jae
std
fidivs
jecxz
or
jle
clc
in
sbbb
sbb
jecxz
or
movsb
adc
pop
adc
stos
divb
push
imul
mov
inc
jmp
ret
mov
mov
sub
xor
push
mov
hlt
jmp
add
jp
xchg
rorb
jne
jg
mov
add
fcomi
or
jae
ret
dec
test
out
cvtdq2ps
xchg
mov
inc
in
mov
leave
add
test
and
pusha
lock
rolb
xor
xchg
cmp
cli
fcmovne
mov
xorb
cmp
stos
addb
les
pop
in
add
adc
push
adc
and
mov
add
hlt
outsb
or
dec
jge
fwait
testb
xorb
lods
add
sti
int3
jne
fimull
add
pop
jge
test
mov
sti
mov
arpl
mov
push
rol
mov
mov
decb
bound
add
scas
outsl
push
or
cli
jp
add
sti
fdivl
xor
inc
mov
out
aas
cld
fnstcw
dec
xchg
pop
lcall
jae
and
xor
incl
sub
or
add
xor
inc
leave
xor
mov
pop
daa
mov
jb
or
add
sub
xor
sbb
scas
pop
jmp
leave
mov
or
cmpsl
stc
roll
and
inc
test
add
mov
ret
jmp
iret
xchg
ret
pop
leave
lods
in
mov
sub
in
push
mov
stc
out
shrl
sbb
jmp
inc
xor
mov
ffreep
jle
or
dec
jmp
or
mov
or
mov
xchg
movsb
xor
lcall
decb
clc
inc
xor
ss
xchg
push
jle
outsl
rolb
or
jb
xchg
cwtl
das
push
daa
ja
inc
or
lea
jb
and
add
cltd
test
pop
push
es
stos
and
out
je
lods
arpl
jmp
xchg
fiaddl
clc
adc
mov
in
xor
push
bound
sub
and
mov
std
aaa
pop
xchg
sub
leave
add
push
adc
test
jecxz,pt
cmp
std
aaa
adcb
push
mov
add
add
imul
lret
leave
jg
aam
dec
add
leave
jg
les
add
leave
xor
adc
pop
adc
test
sbb
test
sbb
ds
and
cltd
cld
aad
or
add
jl
sbb
add
add
orl
jmp
aam
add
sub
add
and
cmpsb
jle
cld
sahf
xchg
std
loope
xor
pop
mov
mov
jbe
arpl
outsl
add
jb
mov
icebp
dec
divb
mov
cmc
decb
nop
inc
xchg
iret
out
lock
cmp
adc
push
jecxz
sub
incl
mov
mov
nop
add
cmpsl
add
subb
insb
hlt
jg
or
mov
mov
jmp
mov
insl
adcl
int
sub
or
adc
aaa
outsb
ret
in
ds
and
lret
jmp
stos
or
cmpsl
and
mov
out
add
mov
lods
pop
out
push
lods
out
imulb
pop
add
adc
sti
sub
into
sbb
sbb
sti
cld
pop
add
pushf
fisubs
xchg
addb
cmp
je
popa
push
out
add
push
sbb
addr16
aad
add
int3
das
test
xor
push
jb
dec
in
xor
sbb
add
push
icebp
out
sbb
push
out
xor
or
pop
shll
fnstenv
jmp
xor
and
jns
xchg
cs
lret
lea
xor
and
add
dec
mov
or
push
cmp
cmp
add
test
push
xor
mov
test
mov
addl
je
xchg
xorb
imul
dec
and
xor
aas
and
xor
push
lea
dec
cli
call
jo
push
sbbb
push
lcall
fwait
push
inc
and
je
mov
jno
test
es
xor
xor
out
daa
andb
sbbb
mov
xchg
adc
inc
mov
xor
sub
ljmp
mov
out
adc
ds
add
loope
xor
stos
and
jb
dec
jbe
sub
je
mov
leave
pop
mov
and
repz
lods
jb
push
orl
call
mov
into
lea
lret
data16
lret
add
mov
scas
lods
mov
scas
mov
addb
add
add
xchg
or
jmp
add
mov
xchg
jmp
add
pop
push
loopne
aam
add
iret
cmp
push
in
mov
or
aam
push
sbb
mov
xchg
fists
lock
jl
pop
fildll
dec
inc
add
mov
add
sub
and
scas
lret
add
pusha
push
dec
lds
lret
jg
mov
jbe
sbb
add
int
addr16
jmp
adc
inc
jmp
aaa
mov
imul
call
outsb
xchg
lret
cmp
cmp
and
call
fisubrl
sbb
add
or
add
pop
add
mov
aas
and
jp
adc
sbb
mov
xchg
push
dec
std
add
dec
dec
jg
cmpb
xchg
adc
mov
imul
xchg
add
dec
push
mov
inc
mov
jle
push
mov
or
add
and
add
adcb
decl
iret
add
pusha
push
pop
sbb
mov
mov
dec
lods
outsl
xor
cs
xor
pop
sbb
xor
aas
cmp
scas
adc
cmp
mov
xorl
inc
xor
and
ficoms
sub
mov
xor
add
cmp
and
pop
leave
and
adc
inc
pushf
lcall
or
mov
iret
mov
testl
push
pop
mov
inc
xor
pop
xchg
xlat
mov
icebp
int
sbb
call
int
sub
pop
sub
push
and
xchg
add
mov
addb
add
add
lret
out
movsl
jae
dec
insl
fs
inc
mov
mov
mov
dec
push
dec
insl
fistps
filds
call
sub
jbe
mov
clts
loopne
or
mov
call
aad
arpl
push
and
repnz
scas
add
mov
dec
mov
add
dec
clc
call
mov
sti
lods
jge
call
cli
decb
jb
scas
and
and
xchg
mov
add
scas
cmp
push
pusha
insl
scas
inc
out
mov
push
inc
add
pop
aad
and
push
mov
and
shll
adc
sub
and
add
scas
aaa
shlb
jo
push
push
outsl
add
pop
jo
push
mov
and
dec
adc
fstpt
je
pop
mov
iret
add
add
add
xor
push
out
xchg
pop
xor
mov
push
xor
xchg
jecxz
xchg
movl
mov
into
ret
sar
test
or
xlat
imul
dec
mov
ficompl
into
jg
jb
xchg
jecxz
es
add
xlat
imul
jg
aaa
push
mov
decl
jle
iret
mov
lret
mov
fildl
sub
xchg
aam
inc
enter
shl
jp
in
ret
and
sti
inc
cli
popf
mov
mov
pop
mov
sub
and
mov
mov
out
mov
xor
mov
xchg
mov
mov
xchg
jge
xchg
adc
addr16
sub
lcall
into
jge
into
mov
jl
into
lret
inc
dec
jno
and
mov
movsl
sbb
loopne
sbb
shll
fsubs
jg
cmpsl
mov
add
or
lock
push
fdivl
mov
xchg
icebp
cmpsl
fcomi
add
lcall
inc
push
lret
jmp
lcall
stos
rorl
add
jmp
fdivrs
outsl
data16
divb
fldt
adc
push
mov
push
or
sub
add
lret
sarl
test
leave
aam
mov
clc
insb
mov
scas
cmc
add
push
test
cli
mov
sub
pusha
cmp
aam
sti
insl
icebp
fsts
jb
lret
push
add
jmp
pushf
or
insb
icebp
ficompl
add
or
mov
out
sti
jb
dec
sti
pop
mov
fisubrs
lret
xchg
test
add
xchg
add
lret
xchg
mov
or
add
cltd
call
jo
dec
sbb
and
adc
ret
mov
inc
sti
jmp
mov
repz
jmp
sarb
or
or
add
popa
xchg
add
and
enter
loopne
in
test
add
add
xchg
dec
lret
arpl
xchg
add
push
daa
cld
mov
push
into
aam
enter
xchg
in
sbb
add
shll
sub
aad
jl
fiaddl
inc
and
pop
add
je
xor
aas
imul
call
mov
sarl
mov
add
lods
out
cmp
push
jae
add
lods
jbe
mov
shr
pop
int3
jmp
fdivrs
rcll
outsb
add
dec
or
enter
jle
pop
jmp
add
or
jp
dec
call
lret
mov
add
loop
mov
js
std
or
add
sub
and
or
add
inc
sub
mov
cmpsl
imul
insb
ficoml
push
jmp
in
sub
cmovl
add
mov
or
vpmacssww
test
ret
je
mov
pop
cli
mov
adc
fidivl
ret
in
subl
mov
push
xchg
mov
aad
aaa
push
mov
pop
sti
jb
data16
jae
insb
mov
or
icebp
in
mov
fiadds
bound
jg
mov
jge
xor
add
and
add
adc
jbe
and
pop
jnp
add
xor
xor
add
test
rolb
mov
jecxz
repnz
cmp
mov
imul
movsl
cld
cmp
in
mov
addl
mov
popl
fcmovnbe
int3
call
inc
mov
mov
cwtl
adc
mov
inc
mov
inc
add
loopne
add
into
add
mov
into
cmc
icebp
mov
ds
add
pop
call
rcll
adc
and
xorb
push
aas
imul
mov
iret
cld
mov
test
and
mov
pop
add
frstor
xor
imul
jno
ret
mov
call
lds
mov
les
cld
mov
out
mov
sub
mov
or
add
add
andb
arpl
jmp
or
inc
mov
jmp
inc
loope
push
insl
pop
pop
jmp
sub
fs
inc
pop
add
lret
jmp
dec
sub
inc
jmp
pop
cmc
push
arpl
sarl
in
push
inc
and
int
mov
mov
in
fwait
add
inc
sub
lret
jmp
add
dec
sub
es
jecxz
add
lret
push
pop
push
add
std
sbb
int3
lea
lock
jmp
in
sti
insl
neg
xor
cli
testb
inc
jmp
fistl
cmp
inc
or
pop
sti
jmp
add
inc
inc
frndint
nop
inc
jno
bound
jb
dec
repnz
lahf
cmp
jmp
pop
pop
sti
arpl
push
call
push
push
jb
incl
xor
push
mov
jecxz
fxch
add
pop
lret
repnz
outsl
pop
cli
dec
pop
mov
daa
add
test
pop
mov
lea
mov
mov
push
out
fadds
xor
xchg
mov
and
mov
inc
clc
or
inc
out
jbe
mov
add
imul
cmpsl
imul
cmpsl
imul
add
sti
lcall
push
clc
test
fs
jmp
fnstcw
out
test
jnp
add
daa
jl
pop
scas
nop
gs
and
nop
xlat
xchg
mov
gs
movsb
stos
dec
sub
repz
xor
adc
aas
xchg
adc
sbb
decl
gs
adc
xchg
clc
mov
fs
call
fisttpl
and
mov
enter
and
fs
mov
add
call
jbe
scas
std
shrl
or
call
xchg
sbb
add
inc
lods
cmp
jmp
clc
xor
or
dec
inc
lods
fistps
inc
movsl
fbld
arpl
mov
nop
rcrl
dec
mov
fwait
iret
insb
rcl
mov
jge
scas
rcrl
leave
ss
add
cmp
adc
int
add
dec
fcompl
pop
lret
jmp
fnsave
lock
aam
cwtl
std
jno
mov
sub
dec
sub
mov
mov
xchg
sbb
xchg
add
xchg
stos
add
fmuls
and
jmp
xchg
push
dec
subl
insb
stc
icebp
push
out
add
je
cmp
xor
adc
mov
inc
dec
or
mov
pop
inc
sti
xacquire
lcall
dec
mov
fcmove
jg
mov
dec
mov
std
repnz
add
cmc
and
lods
mov
ficomps
mov
jmp
incl
stos
push
js
pop
sti
test
add
add
int3
mov
xchg
push
outsl
adc
movl
nop
sbb
jmp
pop
test
test
add
into
std
adc
popa
or
add
popf
inc
push
cmp
jg
push
gs
lcall
subb
jmp
and
mov
pushl
xlat
mov
jecxz
jae
jne
and
cmp
add
mov
decl
aaa
sub
cld
xor
and
inc
mov
pop
imul
not
imul
lahf
and
hlt
cmpsb
cmc
dec
lret
fstl
jle
push
xchg
and
sti
pop
mov
add
cli
xchg
fisubrl
jmp
push
mov
ds
cmp
dec
shrl
repz
ds
leave
outsb
push
sub
cmc
lods
xor
arpl
je
push
incb
fsubrs
jmp
or
mov
dec
jo
in
jo
testl
in
push
repz
testl
add
aas
push
or
lds
inc
push
or
cmp
or
jmp
mov
inc
jne
adc
inc
std
fdivl
imul
adc
je
inc
shll
fs
in
mov
dec
xchg
sub
mov
mov
leave
int
mov
dec
xchg
add
dec
dec
kandnb
rorl
sti
fisubrs
lret
aaa
or
add
inc
mov
add
mov
xchg
inc
int
in
cld
decl
or
add
icebp
aas
and
sahf
or
iret
jg
lret
add
mov
push
adc
ret
decb
pushf
and
paddusb
push
mov
sbb
xchg
and
adc
cmp
jo
or
add
xor
mov
mov
xchg
fs
or
arpl
or
out
and
sbb
icebp
cmc
and
ss
pushl
leave
call
aad
fs
add
mov
and
inc
into
mov
decl
and
sub
push
insl
sub
pop
lds
mov
enter
jmp
shlb
jnp
pop
imul
adc
pushl
sub
subl
call
and
pop
push
adc
inc
test
add
mov
fsubr
xor
ljmp
cmpsl
roll
mov
jmp
repz
mov
mov
jmp
or
cli
iret
add
clc
add
push
pop
dec
sub
push
dec
jmp
xchg
dec
jmp
inc
jl
add
or
mov
xchg
add
push
shl
lret
add
mov
mov
or
add
lods
lret
add
push
cmp
decb
jmp
lret
fsubl
inc
jmp
pop
enter
gs
mov
das
xor
jge
movsl
clc
test
sbb
inc
gs
inc
in
cmp
dec
leave
pushf
mov
test
outsb
aaa
sbb
pop
arpl
pop
add
cld
je
adc
adc
mov
mov
inc
inc
sbb
sbb
mov
xor
fisubl
gs
xor
xor
aas
inc
sbb
ljmp
xchg
mov
inc
and
je
jne
push
ljmp
add
push
xrelease
xor
pop
push
push
and
notb
push
xchg
and
pop
aas
and
dec
scas
mov
xor
jmp
hlt
scas
imul
sbb
mov
sub
int3
or
nop
push
inc
aas
pop
mov
mov
add
push
or
decl
and
outsb
rolb
inc
sti
int3
or
fiadds
add
cmp
cli
and
xorb
push
mov
pushl
cmp
pop
cmp
dec
das
jo
pop
add
je
xchg
mov
mov
loopne
cmc
jge
fs
cmpsb
push
rolb
lret
insb
enter
mov
out
add
loopne
test
insb
inc
scas
push
in
push
add
push
and
inc
xchg
test
test
add
mov
iret
xchg
mov
jmp
icebp
out
mov
xchg
int
add
repz
jne
sbb
push
dec
dec
xchg
mov
movsl
and
mov
add
mov
je
push
push
push
int
cld
sarb
lret
push
dec
or
add
xor
mov
cwtl
mov
sbb
push
jo
in
cld
jmp
sar
push
pusha
xor
or
mov
push
insb
xor
add
mov
push
cmp
xchg
and
aas
xchg
and
aaa
xchg
and
jl,pn
fldcw
sbb
out
sti
add
mov
adc
adc
and
repz
add
rclb
cld
test
jg
jmp
push
fmull
or
test
aam
add
int3
add
sbb
lds
jnp
or
call
test
aad
mov
sub
push
inc
mov
insb
mov
mov
add
jp
decl
pop
aas
and
iret
dec
mov
add
push
mov
mov
jmp
imul
and
xor
ljmp
xor
add
push
fcmovb
mov
mov
mov
gs
and
dec
daa
popa
shl
mov
jmp
imul
xorl
xor
add
lods
mov
add
mov
aam
push
sub
add
or
xor
aaa
lock
add
jmp
lret
push
jnp
lret
jmp
add
lret
jmp
loopne
leave
jmp
add
out
leave
mov
out
shrl
loopne
movsl
fistps
add
paddusw
add
lret
dec
push
gs
mov
lret
jmp
rol
arpl
inc
jmp
xchg
cmp
out
mov
out
lret
jmp
fbld
xor
lret
daa
inc
sti
add
lret
xchg
push
add
mov
mov
sub
add
jb
inc
out
les
jmp
add
gs
dec
call
cmp
mov
add
je
jmp
jg
mov
mov
rclb
inc
jmp
out
inc
sti
jmp
rolb
xchg
lock
inc
add
mov
inc
xchg
push
adc
xchg
std
ret
add
mov
enter
js
inc
mov
cld
jno
push
aas
and
js
jg
iret
add
pop
pop
push
rorb
sbbb
add
cmpsl
and
push
out
push
inc
sbb
and
lock
pop
sub
or
enter
data16
sub
pop
jno
bound
mov
add
push
aas
and
mov
mov
mov
imul
mov
and
mov
nop
pop
mov
xor
dec
das
test
decl
sbb
mov
or
mov
cmc
jle
scas
scas
andl
aaa
cmp
xor
push
dec
cld
std
mov
sbb
add
xor
jnp
cmp
push
mov
lret
int
xor
mov
sub
je
roll
xchg
stos
faddl
push
shr
je
shrl
xor
push
in
cmc
inc
mov
xlat
mov
out
cmpl
push
int
sub
in
xor
inc
cmpsb
inc
cmp
enter
mov
jno
inc
mov
or
pop
out
jmp
xchg
mov
inc
push
inc
xchg
mov
dec
lds
dec
int
mov
mov
push
inc
jmp
cmpsl
cmp
pop
test
inc
sub
mov
popa
and
lahf
mov
push
fs
mov
mov
or
pop
mov
popa
push
inc
in
popa
sub
data16
data16
xchg
lea
ljmp
stos
es
data16
lret
lea
dec
xor
add
int3
std
je
pop
dec
xor
js
inc
out
addb
jnp
cld
je
or
adc
and
and
pop
mov
shlb
incl
mov
xor
sub
ret
pop
add
add
fbstp
add
pop
int3
dec
iret
xor
add
push
push
xchg
mov
add
sti
push
inc
or
sete
stc
call
ja
rol
inc
and
fistpll
mov
sbb
call
cmp
sub
fldcw
jp
lret
pushl
dec
int3
movsl
xor
pushl
into
jge
mov
cmpsb
ss
stc
imul
test
adc
push
mov
call
in
sub
dec
add
xor
mov
cld
mov
push
lcall
adc
arpl
add
add
int3
loopne
std
lret
loop
or
mov
std
mov
xor
jle
out
sbb
mov
cmp
xchg
add
lcall
mov
jno
shl
nop
push
lea
jmp
dec
jge
outsb
enter
cwtl
xchg
repz
mov
or
sbb
cmp
adc
add
add
xor
xchg
lods
push
xor
pushl
inc
push
es
aas
adc
push
out
xor
loopne
xchg
and
cltd
mov
fidivs
aas
jg
mov
push
cli
jno
clc
rolb
lret
rcl
sti
scas
ds
mov
push
pop
int
xor
fsubl
inc
mov
das
test
push
sbb
repz
pop
add
mov
lret
outsb
sti
inc
mov
jg
mov
push
pop
add
icebp
push
clc
jb
and
pop
ret
push
mov
leave
cmp
push
sbb
and
addl
je
cmp
in
push
mov
loop
repz
cld
orb
inc
cmp
dec
arpl
lret
inc
fisttpl
add
or
push
push
or
push
cltd
int3
push
cmp
sti
test
int3
call
push
ficoms
fists
int
inc
gs
ljmp
repz
sub
bound
xor
mov
cmp
imul
add
cld
add
mov
pop
mov
mov
xor
jmp
mov
mov
or
lock
and
add
sbb
adcb
jl
into
fdivl
pop
pop
cld
gs
daa
inc
dec
sub
xchg
and
jae
push
call
popa
jecxz
sub
xor
mov
sbb
xor
add
add
add
or
inc
ror
add
inc
movsl
out
jnp
jnp
out
add
inc
test
int
push
add
sbb
nop
lret
mov
hlt
stos
or
and
or
cld
mov
cwtl
aam
popf
cmp
cld
cs
jmp
lcall
pop
lea
or
adc
out
inc
movsl
iret
add
xchg
push
jmp
xor
leave
je
in
sbb
pusha
mov
pusha
repnz
sub
add
dec
sarb
push
popa
ljmp
add
jno
and
lock
mov
fs
hlt
ret
inc
rcrl
into
jg
mov
lea
orb
sbb
add
add
adc
insb
scas
mov
sbb
mov
add
popa
inc
inc
add
sub
push
pusha
pop
or
pop
xor
nop
pop
data16
cmp
or
add
xor
inc
jmp
jmp
xchg
js
xor
mov
pop
addl
outsl
loop
pop
pop
and
imul
inc
cmc
jecxz
push
add
clc
jne
jle
inc
outsl
adc
xorl
xchg
jecxz
lret
cld
mov
sub
mov
xlat
test
aam
or
mov
fistl
stc
mov
and
pop
adc
lods
shlb
lods
nop
and
movsl
cmp
sbbb
lods
ss
movl
clc
jg
jp
add
lock
inc
sub
mov
sbb
cld
fnsave
jnp
aad
push
cmp
inc
jnp
mov
pushl
cmp
and
gs
loopne
sub
loopne
daa
fchs
das
cmp
loopne
lcall
xorb
sbbl
sub
je,pt
add
pop
dec
xchg
jmp
cmp
xchg
push
ret
cmp
xor
add
fidivrs
inc
xor
xlat
sbb
or
or
shl
jno
loope
sbb
mov
sub
add
inc
aaa
ljmp
mov
in
jnp
cli
or
or
xchg
xlat
outsb
cmp
xor
test
inc
mov
pushf
or
int3
xor
push
jmp
cmp
add
sub
sti
bound
lock
mov
pop
and
in
and
adc
jb
dec
sti
mov
dec
repnz
mov
lret
inc
ret
mov
mov
inc
jmp
jnp
jle
mov
sti
fsubl
ss
scas
arpl
push
into
dec
and
jmp
lds
jmp
dec
ss
mov
sti
cld
add
fiaddl
dec
or
bound
and
xchg
mov
and
sti
decl
dec
sti
fcoms
add
jp
mov
pop
cmc
cmp
jne
sbb
inc
pop
mov
outsl
sub
leave
call
mov
add
sbb
call
push
std
jecxz
pop
iret
add
add
fcoms
cmp
mov
jmp
xchg
adc
mov
sbb
inc
push
divl
lret
pop
ja
mov
cmp
fistps
jle
and
out
in
mov
cwtl
and
cmpsl
add
outsb
add
mov
add
lods
scas
xor
ror
push
rclb
ja
jbe
add
jmp
bswap
sbb
sbb
pop
mov
mov
in
shll
repnz
idiv
mov
lret
mov
lock
lret
sub
cmp
or
mov
pop
mov
iret
repnz
cmp
cmpsb
out
cmp
xor
push
sahf
hlt
sbb
lret
jmp
xlat
add
push
ret
sub
int3
jmp
mov
test
inc
popf
fildll
dec
sub
out
xchg
out
and
inc
loopne
inc
sub
mov
and
lds
insb
inc
inc
jno
lret
dec
addb
xor
push
das
je
cmp
dec
xchg
jge
jg
add
repnz
push
arpl
into
cs
pop
mov
call
push
mov
mov
add
test
sub
mov
xchg
dec
das
push
stc
xor
sti
pushf
std
inc
mov
or
sti
adc
mov
jmp
mov
test
xor
outsl
mov
scas
inc
lret
rcr
add
dec
add
add
les
mov
bound
xchg
mov
inc
shll
xchg
jle
jbe
mov
sbb
mov
and
pusha
mov
push
mov
mov
je
push
cmp
add
xor
sbbl
jecxz
cmp
sbb
mov
xchg
mov
sub
int
test
dec
mov
cmc
int3
mov
mov
jl
add
xchg
lods
push
ret
call
push
xchg
cmpb
out
adc
pop
sbb
adc
push
les
lods
mov
and
test
aas
sub
pushl
jns
pop
psubq
cmp
sbb
cwtl
jg
cmpl
stos
and
test
sub
mov
mov
jmp
jle
mov
cmpsb
sub
and
lcall
or
repnz
pusha
mov
sub
rcrb
inc
dec
sub
mov
insl
mov
cmp
add
call
stos
add
xor
add
lret
imul
mov
nop
sbb
in
mov
cmp
add
inc
ret
ja
pop
mov
pop
push
mov
fs
inc
pop
add
out
mov
mov
test
mov
dec
add
out
ds
add
xchg
insl
sub
mov
ljmp
insl
flds
andb
pushf
ljmp
add
xchg
mov
jle
mov
out
xchg
pop
xor
jle
or
leave
sti
mov
outsb
push
mov
icebp
lret
jg
mov
cs
inc
push
or
mov
sti
jb
out
mov
sbb
pop
add
roll
push
pusha
cmp
add
dec
mov
fiaddl
add
lret
leave
add
lods
adc
test
xchg
cli
push
push
dec
add
fwait
dec
jge
mov
test
pushf
inc
mov
fwait
leave
divl
sub
add
mov
jb
in
mov
call
xor
jne
in
aad
adc
leave
cmp
jne
cwtl
sbbl
shll
jae
or
lock
pop
leave
bound
mov
cli
xchg
mov
or
sti
in
cmpsl
mov
or
or
mov
xchg
adc
mov
stos
and
mov
pop
add
jecxz
add
xor
xor
call
movntq
repnz
add
mov
xchg
cli
adc
add
and
je
ss
xor
xor
and
jbe
data16
and
aaa
cmp
mov
cltd
out
sub
imul
cmp
lret
roll
out
mov
sub
add
xor
inc
mov
inc
ret
xor
xchg
cmpb
add
xlat
pop
hlt
das
sub
jno
stos
flds
fidivs
fs
scas
data16
cld
rep
mov
imul
mov
xor
xchg
sub
adc
or
mov
adc
xor
insb
cs
loop
je
or
and
cli
xchg
stos
push
lret
ds
jmpw
or
popf
es
pop
xchg
shr
icebp
lret
push
ds
mov
jge
aaa
sbb
pop
fdiv
jle
stos
cmp
jmp
cltd
cli
xlat
mov
ljmp
add
push
lock
mov
sbb
and
push
sbb
ret
dec
into
jecxz
add
mov
inc
push
out
je
and
int
rcrb
or
rorb
fildl
add
sbb
call
test
ret
pop
int
test
add
jns
add
sub
add
xor
call
mov
inc
in
xchg
adc
add
jb
test
or
sbb
pushl
addr16
xor
sbb
popf
icebp
xchg
mov
jnp
cmp
add
std
push
push
mov
xor
add
lret
lahf
add
jb
lret
lcall
je
xchg
add
mov
repnz
add
push
push
sub
insb
out
sti
das
or
mov
lret
cld
repnz
inc
mov
xor
push
fsubr
add
or
nop
xacquire
cld
or
dec
pushf
xchg
or
push
sub
dec
scas
add
test
inc
mov
jmp
sbb
orl
push
mov
add
xor
int
shrb
mov
sti
cli
mov
push
sub
in
inc
add
mov
mov
mov
adc
repz
in
sub
add
mov
call
imul
add
lock
mov
xchg
fadd
lock
mov
add
ss
add
popf
inc
addr16
jae
jb
repnz
add
scas
jb
sub
lret
push
sahf
lods
xor
sub
aaa
jg
aas
lea
jns
push
push
icebp
pop
xor
add
cmp
lea
cs
incl
mov
test
mov
xor
xor
add
lret
add
hlt
pop
mov
dec
inc
hlt
sub
outsb
sub
cld
mov
movsl
shlb
lea
ss
call
dec
in
push
fcompl
ds
push
or
ret
lea
sub
ss
add
movsl
repz
mov
inc
cmp
jae
test
adc
aas
rdpmc
decl
mov
add
add
insl
xor
roll
daa
movsl
mov
addb
clc
jb
cmc
rorb
lods
scas
imul
aas
pusha
out
pop
ficompl
lcall
sbb
xchg
mov
or
div
sti
mov
pop
lea
add
cwtl
push
add
das
out
hlt
push
xchg
in
sti
gs
cmp
lret
test
testl
jns
int
pop
xor
in
insl
outsl
jmp
push
pop
popf
dec
test
nop
jb
mov
call
inc
mov
add
xchg
insl
push
or
rcrb
std
mov
lods
xchg
ret
sti
or
add
adc
mov
out
fisttpll
mov
shl
mov
mov
jl
push
mov
add
lret
add
xchg
mov
jmp
mov
dec
or
adc
lret
call
mov
lods
xor
adc
out
lahf
xor
and
jge
cmp
cmpsl
iret
sbb
xor
je
xchg
jle
in
jne
test
sbb
mov
sti
insb
out
bound
pop
cmp
mov
add
add
adc
sub
mov
push
mov
stos
dec
inc
and
ja
je
xchg
mov
mov
fsubrp
ret
add
push
mov
dec
push
mov
dec
add
bound
add
call
push
and
call
jnp
mov
add
or
loope
pop
and
sbb
mov
dec
mov
ja
call
jae,pn
addr16
in
test
jb
xchg
int3
add
mov
callw
in
add
mov
testl
push
cmp
xor
mov
pushl
cld
add
jp
cli
or
jecxz
pusha
pop
ljmp
adc
push
test
dec
cmp
out
xchg
lret
mov
mov
pop
lret
into
push
mov
mov
add
xchg
fstpl
jnp
xchg
sbb
dec
jbe
loopne
push
xor
sbb
add
js
fadd
and
inc
xor
lret
incl
aam
mov
stc
mov
pop
in
das
and
sbb
cmpsl
aas
into
inc
mov
mov
add
lret
mov
add
jnp
dec
call
push
stc
push
cli
repnz
add
add
mov
out
iret
push
fiadds
loopne
lods
movsl
inc
lock
add
adc
pop
shlb
inc
addr16
push
fnsave
or
add
cmp
jg
fsincos
inc
xor
push
lds
and
sub
or
int3
add
cmp
or
int3
add
stc
inc
sub
mov
shl
lahf
add
add
jnp
sub
push
inc
int
and
add
and
out
inc
lds
je
popf
dec
and
addb
and
dec
xchg
cmp
out
add
push
or
lea
jae
cmp
mov
jg
xchg
xor
mov
or
loop
out
push
shrb
je
shl
adc
add
js
mov
arpl
dec
cmp
les
lahf
call
add
sahf
xor
pushl
push
lock
xorb
pop
lock
cli
inc
or
cli
rolb
sti
movl
sti
jno
jge
xor
adc
cltd
in
xchg
outsb
jg
cld
mov
add
add
xor
test
mov
in
jmp
jnp
mov
pop
sti
in
adc
mov
mov
xchg
inc
sti
sbb
xchg
pushl
aad
sub
addr16
cli
lahf
lret
mov
repz
push
popf
adc
fmulp
jmp
inc
mov
jae
aad
mov
das
push
xacquire
jmp
add
sub
sbb
mov
insl
xchg
mov
jmp
add
or
xchg
jmp
cmp
dec
jp
mov
jl
aas
push
dec
mov
shl
lret
insb
cmpsl
data16
dec
mov
fs
jmp
mov
or
mov
les
dec
stos
sub
add
jae
call
insb
notb
lea
add
lret
call
fs
xchg
sub
into
lea
repz
call
insb
jno
adc
call
je
outsl
shll
ljmp
push
aaa
addr16
xchg
lret
add
mov
jb
pop
adc
jo
in
fucom
adcb
or
fiaddl
or
add
pop
add
sahf
pop
mov
roll
mov
repz
jno
idiv
dec
es
jb
dec
inc
and
jle
inc
and
push
push
sub
test
xor
pop
jg
inc
scas
mov
dec
push
loope
notl
js
bound
push
adc
or
lcall
outsl
bound
add
lret
dec
push
shll
fcmovnb
mov
or
sete
adc
jb
insl
jb
push
xor
add
jecxz
sti
jnp
push
add
icebp
push
xor
jge
push
mov
push
stos
dec
cld
sub
jg
ret
adc
sub
popf
and
or
pop
add
and
add
add
add
mov
sti
lahf
ret
mov
out
gs
popa
inc
mov
push
clc
jecxz
in
jb
cmp
xchg
cmp
bnd
mov
popa
jnp
iret
cmpsb
xor
callw
sub
adc
ja
pop
call
into
clc
sbb
xor
js
rclb
cmc
inc
mov
mov
outsb
lret
dec
xlat
cmpsb
mov
mov
add
rcr
mov
jno
test
sbb
mov
cmpsb
sub
inc
mov
popa
addr16
lret
mov
cmpsb
mov
cmpsb
dec
lods
and
inc
mov
popa
addr16
add
mov
cmpsb
jp
sub
inc
mov
add
adc
pop
movsl
mov
adc
jno
lahf
push
xchg
popl
mov
mov
lods
add
lret
lahf
add
add
mov
movsl
mov
adc
jno
lahf
rcrl
dec
idivb
fs
icebp
lret
lahf
xor
nop
add
dec
movsb
fs
icebp
lret
lahf
xor
popl
dec
xchg
rolb
inc
fs
icebp
lret
lahf
add
jbe
add
out
adc
add
add
add
iret
mov
mov
sub
inc
sbb
fs
lret
mov
mov
cmp
adc
fldt
fs
lret
mov
mov
jp
adc
lret
insl
or
lret
mov
mov
sub
inc
mov
xlat
iret
mov
mov
sub
inc
pop
outsl
dec
add
add
add
mov
mov
mov
hlt
adc
and
push
lret
add
pop
inc
mov
je
jb
movsb
mov
adc
add
pop
inc
mov
stc
stc
cmc
fmull
cmpl
push
push
sub
stc
mov
and
mov
and
xchg
add
cmpsl
rclb
inc
mov
aad
mov
or
and
jp
into
push
xor
cmp
add
or
je
sub
cli
inc
aad
ret
cld
dec
iret
aas
in
aaa
mov
push
cmp
mov
xchg
or
repnz
sarl
std
jl
out
stc
jge
out
in
jge
fnstsw
out
fnstcw
out
aad
add
lds
add
lret
jmp
add
int
add
inc
ljmp
enter
push
lret
mov
in
adc
sub
pop
pop
shlb
rorl
pushf
lods
adc
out
enter
dec
adc
add
out
ss
and
mov
cmp
mov
fsubrs
sbb
and
mov
pop
mov
lahf
mov
iret
lea
jnp
hlt
insl
mov
or
insb
mov
add
mov
rolb
push
inc
out
or
loopne
push
bound
push
pop
xorl
mov
pushf
and
xchg
iret
pop
mov
xchg
or
jg
inc
add
rclb
les
xchg
xchg
xor
out
inc
add
or
rcrl
cmp
and
jb
sub
xchg
push
jae
idiv
je
shlb
inc
inc
mov
cwtl
test
icebp
sbb
dec
or
jbe
sbb
fadds
cmc
sahf
add
dec
push
jne
sbb
jmp
dec
jl
cmpsl
into
je
and
or
fs
out
sub
add
and
loop
or
add
outsb
lock
stos
xchg
cmp
sub
cld
pop
in
data16
fsubrl
testl
jge
bound
sbb
add
and
bound
outsb
add
cmpsl
les
xor
cmp
mull
enter
fstl
mov
inc
mov
xchg
and
push
add
sub
movsl
mov
push
mov
cmpsl
decl
lret
jmp
jns
call
pop
repnz
sbb
mov
add
adc
pop
xor
lret
jmp
push
das
dec
or
push
or
pop
fstpt
inc
outsb
scas
movsl
in
add
fisttpll
jbe
out
ds
cs
jle
lret
jmp
dec
xchg
mov
cli
push
mov
add
adc
and
and
sub
sbb
and
cmp
xor
lret
add
xchg
adc
ds
int
dec
add
jns
push
icebp
sub
jne
or
add
add
lea
pop
mov
sbb
sbb
mov
fdivl
call
jmp
fsubrs
dec
push
leave
je
sub
add
lea
lea
adc
aam
push
or
repz
jae
and
insb
sub
inc
add
and
xchg
lret
ds
call
add
lret
or
mov
addb
shl
push
inc
inc
shlb
inc
and
fistl
push
iret
or
inc
rorb
sbb
lcall
xor
inc
clc
add
xchg
mov
adc
lret
xor
dec
jne
inc
pop
subl
cmp
cmpsl
pop
cmc
aas
mov
ficoms
cmp
ds
cmp
add
and
pushl
incl
jb
add
repz
cmp
adc
repz
movl
bound
xor
stc
mov
jmp
adc
dec
push
and
push
pop
xchg
fbstp
test
ret
add
incl
lret
lcall
pop
and
in
inc
mov
jge
ret
xchg
xchg
or
int3
adc
mov
and
mov
sbb
cmc
jbe
lea
int
cmp
out
add
and
cld
mov
outsb
shrl
or
jmp
xchg
cmp
jmp
add
popa
mov
pop
into
or
mov
jmp
xchg
add
je
std
ljmp
sub
mov
fsubs
inc
lahf
xchg
xchg
and
ficoms
adc
push
mov
xchg
popf
and
push
adc
push
lds
sub
mov
dec
push
cmp
mov
add
add
jo
sub
mov
stos
or
pop
jb
jno
jb
jae
sub
aam
das
add
iret
pop
ret
jae
sbb
lret
inc
dec
and
pop
or
fcmovnb
bound
movsb
mov
insb
bswap
notl
push
les
andl
push
scas
ja
push
mov
adc
add
iret
push
pop
test
int
add
rcll
sbb
test
mov
addl
push
and
xchg
sub
xchg
ret
nop
sbb
inc
mov
iret
add
outsl
inc
and
inc
nop
inc
xchg
or
lea
pop
call
das
mov
adc
dec
and
cmp
fimull
add
jge
adc
stos
sbb
scas
sub
xor
sub
sub
jg
mov
push
and
pushf
add
mov
mov
in
in
test
gs
pushf
mov
hlt
mov
cmp
sub
fsubrs
push
sub
sub
or
pop
cmp
aad
xchg
repz
adc
lret
insb
les
pop
push
xchg
mov
add
add
lret
sub
int
dec
shll
xchg
xchg
pop
pop
mov
je
into
mov
mov
scas
xchg
jmp
popa
jmp
sub
mov
scas
cmp
add
or
sub
cmpsl
add
fnstsw
scas
cmp
fcomps
xchg
sbb
fucomi
call
add
ss
out
fs
mov
je
bound
insb
lds
xchg
jmp
jecxz
insb
jne
inc
cltd
and
and
fldcw
rclb
sbbb
mov
loope
xchg
and
loope
or
in
scas
dec
cltd
cltd
es
mov
rclb
je
ljmp
in
xor
out
sub
add
add
xchg
and
push
push
pop
call
mov
lds
fldl
sahf
mov
mov
push
dec
and
divl
shl
sbb
roll
imul
subl
out
incl
xchg
push
fs
lret
divl
dec
fs
lret
divl
dec
fs
das
lret
divl
lea
call
test
xchg
cmp
jbe
push
push
jo
shrl
rcrb
and
rorb
dec
mov
xor
xchg
and
repnz
into
lods
mov
push
cmpl
es
pushl
inc
sbb
inc
add
cmpsl
inc
and
pushf
jle
mov
add
mov
lds
incb
mov
inc
into
adc
notb
daa
push
or
call
pop
mov
roll
add
add
or
je
jns
and
outsl
aas
pushf
lahf
pushl
adc
push
jmp
add
lret
femms
das
lahf
lds
jnp
cmpsl
outsl
mov
pop
inc
into
stos
mov
add
jbe
or
lahf
or
cmp
int3
jmp
push
pop
push
xchg
pop
cmpsb
pushf
mov
xor
push
or
iret
jno
add
mov
or
imulb
jmp
xchg
imul
outsb
das
mov
add
aas
loopne
shll
add
repz
add
add
dec
dec
int
dec
iret
xorl
push
inc
int
fwait
lea
or
mov
lock
add
sbb
cli
add
insl
fisttpl
cli
repz
jmp
insl
rorb
int
push
pop
lds
push
dec
lds
lret
xchg
bswap
add
scas
js
add
jb
jmp
div
mov
enter
call
pop
cmc
ret
cs
nop
repz
fists
hlt
mov
mov
icebp
nop
xchg
or
add
rorb
pop
add
fistl
hlt
push
lds
mov
and
or
push
inc
clc
sub
jge
mov
push
rolb
add
lret
mov
add
arpl
mov
inc
add
mov
mov
sbb
push
xchg
hlt
dec
mov
mov
sti
mov
sub
call
faddl
xor
mov
mov
inc
cli
in
dec
push
dec
mov
mov
jp
jg
imul
and
sti
add
movsb
jecxz
jle
and
mov
mov
pop
add
testl
incb
mov
add
jb
xor
add
cwtl
xor
incl
adc
fldl
mov
inc
mov
mov
xchg
mov
jmp
cld
or
push
xor
jg
xchg
adc
jecxz
out
leave
jo
scas
push
lret
or
jno
mov
mul
mov
inc
xor
push
popf
pop
sahf
push
lcall
push
mov
clc
xchg
mov
and
cmpsl
add
xchg
cli
out
mov
push
inc
in
or
push
out
mov
daa
cli
into
ret
daa
popf
cwtl
mov
add
mov
push
bound
aam
repnz
push
sahf
sbb
adc
scas
add
sub
call
jb
cmpsb
mov
pop
iret
inc
ljmp
push
mov
jno
jg
lods
dec
dec
in
mov
add
cmpsl
cmp
add
mov
inc
xchg
cltd
pop
insb
call
mov
pop
push
mov
add
dec
jg
mov
add
loopne
lea
into
add
pop
aas
mov
mov
xchg
std
aas
int3
add
aam
sub
mov
mul
in
pop
int3
add
aam
sub
add
adc
jle
out
int3
add
jae
add
fsubl
xchg
adc
mov
psubsb
rorb
jle
ljmp
add
add
lret
add
sbb
ret
decb
ss
ljmp
pop
add
cmc
negl
xor
xchg
shl
gs
mov
in
test
jmp
jne
add
hlt
incb
mov
inc
jl
add
cmp
incl
hlt
decb
push
push
mov
decb
mov
cmpb
incl
cld
int
icebp
aas
data16
vucomiss
mov
mov
add
stos
daa
inc
jmp
xorb
out
mov
pop
mov
mov
clc
mov
jmp
repz
call
shll
mov
add
sti
inc
lcall
fildl
add
out
leave
cmp
add
shr
add
lret
jmp
lds
xchg
outsb
push
mov
add
into
xchg
push
mov
add
and
dec
add
add
push
mov
mov
subl
push
subb
add
add
dec
enter
push
into
push
je
out
lret
lea
lret
add
orl
cmp
or
mov
lret
add
add
mov
xlat
fidivl
int
jmp
jns
push
mov
mov
add
sub
sarb
leave
retw
decb
cmp
enter
jb
or
jg
scas
lcall
decl
xor
add
lea
fwait
or
pop
pop
mov
sbbl
lea
insb
clc
add
call
test
sub
add
fdivs
add
stos
fadd
push
fwait
or
test
adc
mov
push
je
mov
or
add
jnp
aas
cmp
mov
jnp
stos
in
lcall
std
jg
insb
in
incl
jo
add
sub
repnz
les
in
mov
add
mov
add
rcr
push
add
in
dec
loop
test
mov
decb
and
push
sub
add
leave
xchg
sbb
aas
adc
idivl
mov
incl
movsl
ja
or
cmp
push
lods
lret
jmp
shrl
push
sti
mov
jmp
into
mov
lret
jmp
lret
cwtl
cli
adc
mov
jns
add
fdivr
push
scas
dec
fs
js
jmp
push
stos
lret
jmp
ss
dec
aad
add
cld
arpl
mov
ffreep
mov
pushw
jmp
add
scas
in
fistl
jmp
mov
push
je
scas
adc
mov
jmp
repnz
dec
hlt
xchg
inc
int3
add
mov
push
call
fldt
adc
shl
int
mov
add
shrb
pop
out
jbe
or
loopne
push
xlat
add
divb
push
dec
addl
fistps
lret
xchg
aas
lret
add
xor
or
mov
std
decl
push
pop
rorb
dec
mov
dec
and
jns
mov
int3
add
pop
std
call
js
enter
loope
push
push
add
and
mov
cmp
push
or
daa
hlt
jns
mov
mov
bound
jl
and
push
push
mov
jmp
push
inc
dec
jns
and
jbe
into
pop
int3
add
jo
sub
mov
int3
dec
push
mov
add
push
repz
adc
aaa
and
pop
xor
pop
push
xor
adc
adc
aaa
mov
add
inc
cli
cmp
into
out
mov
cltd
jecxz
sar
lds
outsl
inc
in
xor
testl
mov
sbb
xor
adc
es
test
xchg
fs
mov
in
idivb
in
gs
or
add
lret
inc
xor
in
and
insb
pop
add
jno
pop
sub
mov
subb
add
xor
adc
ss
add
dec
dec
sbb
lret
iret
repnz
or
add
xchg
es
leave
pop
adc
pop
add
icebp
cmpl
xor
mov
sbb
les
xchg
insb
add
mov
jmp
jle
or
sarl
pop
les
test
add
jnp
jg
mov
cmpsl
je
ss
sub
test
xchg
dec
test
enter
ret
scas
lret
add
lret
ror
popf
mov
in
fstpl
ss
das
mov
sti
fiadds
mov
sarb
add
ret
adcb
rolb
mov
or
lock
out
xor
cmp
dec
out
decb
pop
ljmp
xor
mov
or
shr
popl
add
adc
push
add
cli
call
mov
cmpb
test
jmp
mov
out
push
aaa
jne
sbb
jo
add
mov
add
test
test
scas
pop
test
add
lcall
pop
aaa
jne
pop
in
paddw
cmpb
repz
scas
pop
test
push
aaa
bswap
push
idiv
je
rolb
jns
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
add
push
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
fsubs
push
sbb
mov
xor
mov
xchg
sbb
xor
inc
mov
or
mov
add
mov
or
jae
xor
pushl
jns
cmp
ja
xchg
lret
call
test
pop
fidivs
cmc
in
add
shl
punpckhwd
out
js
jp
shll
sbb
sbb
ret
xchg
pop
cmp
mov
sub
or
lds
ret
popa
cmp
lret
data16
mov
mov
or
push
or
jl
cmpsl
add
div
adc
iret
aad
les
xor
int
mov
cmpsl
sarl
xchg
mov
add
push
pop
or
int
call
test
cmc
inc
in
jne
jmp
sahf
repnz
mov
mov
mov
jg
lods
movb
rorb
shlb
jb
les
jmp
or
icebp
cli
jmp
test
sti
push
mov
add
add
mov
and
flds
call
test
test
fs
add
fildl
add
inc
cli
decl
add
add
dec
add
shufps
lcall
dec
jl
dec
mov
andb
xor
push
aam
and
je
push
insb
and
add
out
test
roll
inc
mov
cmpb
dec
mov
add
add
mov
and
mov
cmp
idivl
mov
decl
in
es
stc
jp
mov
inc
in
jecxz
jmp
xor
or
aaa
jb
add
in
or
loop
inc
mov
data16
cmpsl
in
jle
mov
and
rclb
or
sub
mov
pop
adc
call
mov
loop
or
insl
pop
and
jl
adc
test
mov
rclb
mov
adc
clc
ret
pop
leave
aad
out
into
scas
pusha
push
inc
xchg
setge
jp
int3
scas
lret
add
outsb
les
stos
insb
mov
insl
rcrl
cmp
in
js
hlt
adc
insl
les
jle
lea
testb
int
mov
lret
data16
xchg
stos
jmp
adc
xchg
pop
ret
mov
clc
sub
or
dec
into
stos
add
mov
jp
rcrb
mov
dec
or
sub
orb
inc
dec
lds
cmp
in
call
pop
mov
and
cs
mov
insb
add
repz
shll
out
test
xor
je
ss
mov
daa
mov
int
mov
xchg
mov
jg
cli
mov
mov
xchg
jb
sub
movsb
inc
mov
in
orl
leave
pop
filds
je
inc
mov
push
adc
not
fiadds
je
loope
mov
xchg
mov
test
jl
sbb
test
sahf
add
nop
or
inc
mov
mov
mov
or
sbb
add
lahf
mov
jle
filds
pop
pop
orb
aam
test
lret
enter
roll
leave
mov
in
xchg
adc
fldenv
sar
andl
adc
pusha
or
xor
cmc
aas
or
jo
add
pop
je
imul
das
or
pop
sub
add
add
xor
add
test
mov
xchg
andl
fldl
xchg
sti
pop
mov
rorl
in
mov
jb
jmp
stos
scas
lret
jmp
mov
sbb
lock
jmp
sbbb
jecxz
cwtl
dec
add
add
mov
lock
hlt
sbb
inc
inc
rcl
sarl
rol
lock
lods
imul
mov
or
mov
shl
mov
jo
pop
shlb
push
leave
sub
repnz
int3
jmp
push
mov
add
int3
or
out
pop
mov
push
add
test
outsl
out
mov
fnstsw
cli
ss
push
inc
add
outsl
call
xor
test
and
xchg
movsb
push
push
fdivl
aad
xor
mov
aas
ret
mov
notb
roll
setae
jae
out
add
xchg
sldt
add
add
or
and
dec
clc
mov
int
outsb
iret
push
insb
and
push
push
or
jl
adc
cmp
fsubrl
add
lcall
mov
cmp
push
lea
mov
push
xorb
pop
test
cli
punpckldq
std
lcall
add
xor
xor
je
mov
je
testb
cwtl
and
push
xchg
loope
lcall
push
and
out
pop
mov
cmc
mov
jb
add
repz
pushf
aaa
xor
je
pop
push
and
jb
add
inc
jecxz
mov
xor
inc
mov
cmpsb
insl
mov
mov
jb
push
std
xchg
or
jae
mov
inc
pop
push
and
dec
push
pop
add
in
test
pop
mov
enter
mov
jle
sbb
hlt
scas
add
add
lret
nop
loop
out
or
fnstcw
fnsave
pop
dec
mov
jle
xchg
or
mov
pop
inc
lret
or
mov
add
push
sub
ss
mov
add
dec
in
add
dec
push
or
out
mov
dec
out
lock
rcrb
lret
jmp
push
sub
or
add
xchg
or
add
xor
scas
jae
add
inc
call
ljmp
sar
push
xlat
sti
imul
cld
int
gs
cli
push
xor
or
and
dec
divl
mov
ret
shr
loop
loop
imul
add
jae
add
push
cmp
sbb
popf
mov
lret
ret
lret
cli
loope
imul
add
or
add
xor
cld
inc
and
sti
add
test
lret
add
orb
xor
lea
jecxz
cmovl
add
fldt
and
mov
mov
jmp
xor
jae
int
add
repnz
call
in
and
rorb
shl
dec
fadds
add
mov
mov
sub
xchg
and
in
push
inc
adc
mov
mov
aaa
ljmp
test
adc
sti
das
mov
cmp
cmc
jg
mov
xchg
les
mov
pop
in
lods
decl
push
imul
imul
mov
movsl
jge
xchg
mov
or
test
cmp
repnz
jnp
and
add
and
jne
in
dec
mov
and
aaa
xor
cmp
lret
pop
push
rcl
fwait
ret
nop
mov
loopne
or
jo
mov
in
mov
add
mov
xchg
lret
jmp
or
lods
add
sti
rolb
pop
clc
pop
lret
add
insb
push
dec
ret
xchg
lahf
movsl
jecxz
sbb
add
xchg
fstpl
fwait
cmpsl
xor
push
mov
mov
lods
pushf
outsb
jo
call
mov
dec
decb
aam
das
test
adc
push
fildl
pop
push
inc
call
pop
out
ret
out
arpl
mov
jmp
imul
mov
fildl
add
push
cmp
jle
dec
and
xor
or
sub
or
stos
imul
and
add
movsl
pop
or
aad
jmp
mov
ljmp
xchg
jnp
popf
mov
xor
ret
int
and
mov
xorl
test
add
aad
add
jp
or
mov
ds
add
xor
aad
add
sahf
and
push
or
aas
xchg
roll
push
out
xor
sbbl
dec
iret
dec
je
xchg
pop
test
aam
add
mov
mov
push
aad
push
push
lock
inc
gs
push
add
lret
mov
shl
adc
push
int3
mov
ss
add
add
scas
jmp
ljmp
inc
or
adc
cmp
inc
mov
mov
push
fldcw
fisttps
add
mov
sub
pop
cmc
add
lods
adc
bnd
mov
in
repz
xor
jne
mov
adc
jnp
add
add
stos
repnz
jg
inc
add
mov
je
or
add
push
mov
out
aad
mov
mov
repnz
mov
push
or
mov
push
or
jmp
add
xlat
push
loopne
jo
aad
inc
lret
jmp
add
and
add
inc
cmp
int
push
adc
lret
cmp
add
mov
pusha
sbb
les
mov
insb
fwait
stos
lret
jmp
mov
aam
add
add
mov
outsb
imul
xchg
pop
pop
idivl
mov
xlat
push
je
or
mov
dec
imul
mov
icebp
cmp
or
pop
and
enter
xlat
dec
cmp
or
xlat
cmpsb
out
imul
push
shll
xor
dec
sbb
or
idivl
enter
lret
xor
or
sub
add
mov
idivl
mov
ret
sar
add
bound
loop
repnz
dec
repz
clc
xchg
sbb
rclb
and
out
jne
adc
add
dec
dec
pusha
lret
call
add
lret
test
sbb
mov
les
pop
int3
jmp
addb
out
pop
xor
and
xor
je
dec
repz
jmp
mov
lret
mov
mov
push
jmp
sbbb
add
hlt
repz
or
into
mov
add
aaa
lcall
cmp
mov
je
push
sti
std
sub
fnstsw
xchg
push
and
aad
lret
mov
incb
mov
fdivr
fimull
lods
and
dec
jg
jp
xorl
es
mov
xor
pop
push
mov
fsubrl
dec
add
faddl
jge
ljmp
test
jmp
imul
scas
pop
fsubl
dec
mov
adc
fdivr
addb
xchg
jmp
fistpl
xchg
scas
sbb
mov
xchg
nop
int3
jnp
nop
mov
call
fwait
gs
ret
mov
fldt
mov
fs
fildl
pushf
mov
dec
aas
cltd
mov
int
jmp
int3
mov
add
push
in
aas
inc
xlat
jg
mov
or
in
int3
sub
adc
cli
push
jecxz,pn
fidivrs
js
push
adc
xlat
jg
cmp
test
pop
xlat
cli
jae
mov
jmp
fiadds
loope
inc
jmp
das
int
jmp
test
dec
out
add
cli
lds
les
add
dec
stc
outsl
int3
xor
push
repnz
call
std
nop
sti
jg
mov
enter
faddl
mov
testb
stc
outsb
daa
fnstcw
inc
fsts
push
mov
cli
lcall
add
mov
add
cmp
testb
dec
add
inc
clc
cld
xlat
mov
rcll
fcmovne
pop
test
daa
idiv
orl
push
and
andl
call
les
jle
mov
push
or
xchg
addr16
add
mov
into
cmc
jle
lods
pop
pop
and
sahf
icebp
sub
mov
xor
xchg
in
idivb
lods
or
inc
add
bnd
aad
mulb
stc
cmpl
inc
sbb
jl
out
ret
jae
shrl
fcomp
jne
xchg
jno
das
mov
cld
or
add
dec
pop
adc
dec
shlb
test
push
xor
lock
pop
push
insl
pop
das
add
push
dec
mov
fsubr
jne
xchg
popa
cmpl
jmp
stos
cmp
out
dec
out
add
jg
pop
mov
fsubs
ljmp
addl
pushl
add
aam
mov
jo
sub
scas
and
mov
aam
adc
dec
push
or
insb
jl
daa
pop
pop
test
ret
scas
mov
inc
inc
fsubrp
adcl
mov
je
je
mov
sbb
test
mov
and
xor
and
mov
fldl
dec
sarl
sbb
scas
jae
cs
testl
or
add
shrb
out
adc
testl
loopne
adc
cmp
mov
and
push
xorb
test
hlt
in
addl
rolb
sbb
int
adcb
add
add
lret
fs
pop
hlt
mov
sbbl
shll
push
and
push
mov
mov
not
mov
les
ds
push
adc
gs
cmp
fnstsw
aad
test
jg
adc
add
hlt
stos
sti
mov
lods
push
daa
in
inc
mov
pushf
cmpsl
lods
xor
sub
add
add
popa
pushf
or
aaa
aaa
je
sbb
adc
daa
fisttpl
je
add
jmp
movsb
and
orb
xchg
jb
mov
xchg
pop
xchg
dec
mulb
push
lds
or
call
ret
sub
sub
lcall
cmp
push
test
mov
add
je
mov
mov
lcall
fdivrp
ss
pusha
test
les
add
dec
inc
adc
mov
das
test
fdivs
test
lret
fsubs
test
rcr
adc
fcmovnu
add
ss
dec
sarb
sbb
dec
or
cli
jmp
add
loop
nop
push
pop
adc
jecxz
in
mov
test
or
loop
lahf
or
ret
scas
movsb
jmp
fadd
xchg
xorl
fldl
in
ds
xlat
jg
mov
adc
sbb
shr
lret
test
mov
nop
jmp
bound
cli
add
dec
iret
add
es
test
xor
inc
mov
add
xchg
mov
mov
jmp
dec
add
lcall
mov
push
dec
shlb
cmp
fcoml
add
into
pop
mov
ret
dec
dec
or
nop
add
push
ljmp
iret
rolb
out
jmp
or
inc
add
outsl
sub
repz
add
mov
call
sub
testl
bnd
loope
in
psubsb
add
lcall
mov
mov
sti
movsl
pusha
flds
mov
jne
mov
add
or
add
pop
testb
shrd
pop
cmp
xor
sti
ljmp
stos
sti
mov
xchg
icebp
push
int3
and
ret
outsb
mov
xchg
jo
pop
inc
fwait
mul
cld
jno
xchg
scas
mov
sub
stos
fs
mov
mov
cmp
fsubrs
cmp
in
pusha
or
add
sub
idivb
mov
int
test
shrb
xchg
mov
mov
popa
movsb
or
push
stos
add
shlb
rolb
add
fs
in
cmpsl
and
test
int
dec
lret
add
cmpsl
cmpsb
cmpsl
xor
dec
inc
stos
test
imul
add
add
rorb
iret
cli
fidivs
addr16
scas
loop
mov
mov
test
mov
add
xor
adc
scas
cmpsl
mov
movsb
or
push
mov
add
mov
jmp
jae
mov
and
mov
lret
add
loope
mov
mov
add
roll
add
add
mov
and
mov
lock
or
rcrb
or
push
pop
mov
rcrb
lea
mov
out
or
add
int
bound
popf
adc
xchg
jmp
cmc
mov
adc
test
mov
inc
cmpsl
sti
and
or
sbb
sti
adc
addb
add
add
or
fldl
imull
lea
enter
mov
xchg
cmc
loop
mov
pop
dec
adc
xor
sahf
sti
push
sahf
sti
sbb
sub
lock
mov
out
cmp
mov
jmp
mov
jmp
cmp
mov
jmp
mov
jmp
add
cmpsl
out
cmp
mov
out
cmp
mov
icebp
cmp
lret
push
sarl
lret
push
shrl
lret
not
lahf
lret
not
xchg
lret
movsl
rorb
lret
sarb
lods
shlb
movsl
shr
lret
lods
shl
lret
movsl
rcr
lret
lods
rcl
lret
movsl
ror
lret
movsl
rol
lret
mov
mov
mov
into
shrb
lret
fcmovbe
lahf
lret
sub
xchg
lret
pop
lret
push
xchg
push
jg
callw
inc
aad
lret
mov
out
pop
call
mov
add
pop
mov
mov
mov
add
jnp
add
push
add
imul
add
add
lea
sbb
decl
add
loope
add
lea
lcall
add
mov
add
lea
or
lea
add
lea
cmp
jae
fnstcw
push
cld
fists
and
out
mov
mov
add
xchg
jne
or
jne
add
scas
jne
xchg
mov
jne
push
inc
or
or
add
sbb
sub
xor
fcomps
pop
mov
adc
mov
je
ja
in
imul
ret
mov
push
jge
scas
cmc
or
mov
mov
sbb
jnp
add
das
mov
inc
sub
inc
movsb
xlat
out
xor
mov
sub
movsl
xchg
pop
sbb
sbb
fstps
jbe
jmp
aaa
inc
xor
inc
enter
sarb
bound
jg
mov
divl
xor
xchg
sbb
pushl
cmp
adc
jp
stc
inc
pop
hlt
dec
je
cld
sbb
add
pcmpgtd
lret
mov
push
into
mov
dec
int
fyl2xp1
out
jmp
mov
orl
mov
sub
mov
lea
push
movsb
mov
sbb
rcl
ljmp
out
xlat
or
xor
popf
dec
push
stos
stos
mov
ret
cmpsb
neg
push
jno
lea
sbb
enter
mov
xlat
and
stc
lret
out
cmpsl
cld
cmpsl
inc
aad
push
lret
jae
dec
popf
fxch
inc
mov
add
icebp
and
or
and
cwtl
xor
jmp
ret
lds
and
cli
push
cmp
jmp
gs
ss
xchg
outsb
icebp
ds
stc
aam
fadds
xor
fldl
mov
and
mov
call
and
add
test
mov
add
mov
pop
stos
cmpsb
lret
push
bound
sbb
xlat
add
or
std
add
lret
add
add
mov
push
fs
inc
mov
add
aam
jge
int3
jae
adc
cli
xor
lret
dec
jp
mov
mov
ret
sub
sub
xchg
push
pop
and
cmpsb
shlb
mov
and
std
adc
sbb
test
jbe
lea
cli
aad
push
idivl
push
mov
pop
push
mov
ljmp
dec
mov
jne
loope
sti
aas
mov
adc
add
or
mov
call
sub
pop
out
fld
or
add
xor
add
in
cs
cld
adc
icebp
scas
movsb
addl
push
pop
xchg
pushl
xor
adc
js
add
scas
ljmp
mov
sti
cmpsl
int3
repz
mov
ret
push
ror
sbbb
add
push
psubsb
mov
std
pop
dec
psubsb
mov
movsb
or
lret
inc
aam
adc
sub
aaa
and
cltd
fildll
aad
jo
leave
cmp
cmp
mov
test
iret
in
cmp
out
lret
pusha
iret
icebp
cmp
test
iret
xchg
cmp
out
lret
push
add
sub
or
mov
mov
cwtl
cmpsl
daa
add
jno
mov
aad
lret
xchg
inc
push
xchg
xchg
cmp
cli
jb
mov
xor
lret
mov
cli
scas
sbbl
inc
jmp
dec
xlat
dec
xor
popf
push
jb
hlt
jmp
cmp
and
fstps
and
call
flds
add
sub
jmp
fldcw
aad
dec
push
mov
jge
mov
sbbl
in
or
inc
add
jb
add
push
dec
sbb
shl
decl
icebp
test
movl
add
pop
add
fistl
sbb
call
dec
decl
mov
xchg
enter
ljmp
add
ja
decl
xor
push
push
test
add
sub
jmp
add
xorl
dec
jo
add
iret
xorl
jno
lods
mov
mov
icebp
call
stos
mov
incb
mov
push
sbb
lods
lcall
add
add
mov
dec
push
xchg
sti
mov
mov
mov
mov
xor
je
cs
and
decb
mov
and
add
pop
out
mov
out
add
repnz
sub
push
and
test
sarb
adc
mov
add
mov
xorb
xor
sti
in
movsl
lret
xchg
jge
or
std
mov
or
push
adc
es
loop
iret
popf
fldenv
add
ret
aaa
inc
mov
fisttps
mov
mov
inc
into
xlat
data16
push
xchg
mov
sbb
jne
out
jb
cmc
mov
out
inc
testl
out
sub
and
es
inc
leave
push
pop
ret
out
pop
mov
mov
repnz
add
add
incl
outsl
incb
ja
incl
jg
incb
int3
out
add
fdivrp
add
out
add
fdivrp
add
xchg
add
jle
add
xchg
add
inc
leave
sti
xchg
test
or
mov
add
add
lret
subl
enter
test
test
adc
mov
add
call
loop
pop
int3
mov
add
push
icebp
push
add
loop
dec
int3
sub
mov
xchg
sbb
mov
or
add
repnz
dec
test
add
testb
xor
add
mov
mov
call
adc
divb
call
xor
out
pxor
jne
mov
imul
push
mov
lods
xchg
addb
out
inc
add
aam
les
mov
cmp
mov
sub
add
cmc
sbb
cmp
cmp
cmp
push
in
mov
add
add
mov
addr16
aam
jbe
adc
aaa
jne
xchg
icebp
mov
mov
lea
sub
push
jno
aaa
sti
cmpsl
and
aas
mov
mov
nop
adc
ljmp
je
sbb
lret
hlt
rcr
pop
call
add
mov
call
push
leave
cmc
scas
loopne
aad
mov
sbb
add
add
or
jle
xor
xchg
mov
mov
call
mulb
push
les
iret
push
add
mov
mov
sbb
ss
sbb
lcall
xchg
mov
sbb
push
sti
pop
mov
fiadds
jb
insl
mov
cli
push
add
sub
dec
and
mov
inc
das
faddp
pop
and
add
rclb
aad
push
ret
lods
and
hlt
roll
mov
outsb
adc
out
out
jb
shlb
rcll
mov
pop
out
je
xchg
das
ret
xchg
mov
or
insb
pop
aaa
add
mov
add
sub
push
lea
movsb
lea
pop
testb
xor
repz
add
inc
and
leave
mov
add
pusha
mov
pop
xchg
stc
cmp
or
jmp
je
aas
dec
and
inc
shr
shl
idiv
push
push
test
addr16
add
add
outsl
or
dec
inc
or
mov
push
mov
js
mov
sub
scas
movsb
dec
add
push
mov
dec
sub
les
adc
inc
xchg
mov
inc
mov
jge
mov
jne
mov
dec
and
sub
inc
mov
sbb
sub
mov
test
push
add
xchg
ja
pusha
shrl
ss
cmp
sbb
adc
icebp
call
adc
icebp
call
sti
mov
movsb
dec
mov
sub
in
add
ds
mov
repz
add
sbb
jg
out
in
and
pushf
xor
mov
out
mov
add
add
arpl
and
mov
sbb
fildl
out
iret
out
aaa
mov
pop
mov
mov
rolb
inc
mov
add
adc
ret
lret
addr16
mov
or
add
repz
icebp
pusha
pop
int3
add
sub
mov
scas
lret
add
sbb
add
mov
xchg
push
loope
fildl
add
dec
cmp
push
js
add
dec
jae
popf
or
lret
add
sahf
jmp
mov
adc
jmp
lret
gs
jb
push
inc
cmc
dec
push
add
push
push
add
mov
add
xor
call
add
int3
add
fwait
cld
cmc
adc
or
dec
push
mov
push
mov
mov
push
in
add
inc
add
out
pop
ficoml
mov
icebp
nop
testb
or
add
add
adc
or
mov
in
andl
or
push
cmp
add
addb
mov
mov
adc
jp
sti
shll
out
jo
or
or
int
add
cmp
ljmp
call
inc
push
add
in
jmp
movsb
jnp
aaa
adc
push
mov
xchg
sbb
lcall
cld
or
aas
mov
daa
pop
loope
sub
add
mov
push
cmp
xor
jge
stc
das
addb
mov
movsb
out
lret
roll
mov
test
pushf
mov
mov
mov
clc
int
out
mov
and
add
test
inc
popa
xorl
call
xchg
mov
test
xchg
aad
pusha
xchg
pop
xlat
adc
mov
fldt
cmp
js
out
pop
pushf
or
insl
xchg
lahf
ret
mov
adc
mov
pop
inc
lret
xor
pop
idivb
int
mov
stc
out
add
adcl
xor
dec
add
mov
ret
lret
xchg
cmp
adc
mov
scas
lret
add
add
rorb
pop
repnz
or
out
xor
mov
or
insl
outsb
inc
dec
dec
lods
fildl
jmp
add
aas
cmp
mull
push
lods
iret
mov
mov
add
orb
adc
je
add
xor
je
cmp
call
popa
mov
dec
push
add
movsl
push
push
mov
sub
sbb
inc
pop
les
dec
movsl
loop
lret
iret
sub
and
popl
fwait
dec
gs
enter
lds
subb
je
ss
and
aaa
call
loopne
lea
loop
in
inc
testb
enter
mov
or
xor
ret
mov
sub
iret
and
add
mov
push
mov
cmp
je
cli
cmp
mov
jmp
das
adc
out
aas
adc
cmp
add
pushf
iret
loop
xchg
cmpsl
push
out
aas
mov
xor
jl
adc
sar
out
in
add
sub
inc
and
sbb
and
add
out
incb
add
call
sbb
loop
adc
mov
pushl
mov
aad
decl
mov
mov
aad
cmp
pop
lret
out
push
xchg
fwait
sti
aaa
call
fsubrl
or
sbb
jle
aaa
call
lock
sbb
or
out
mov
pop
stos
sub
lret
out
add
adc
sti
push
sbb
pushf
loope
fstp
jecxz
cmc
xchg
movsb
or
jp
out
sar
inc
add
cmpsl
into
ret
sar
add
shlb
or
lret
das
pop
and
in
add
aaa
push
mov
mov
std
ret
or
int3
add
cmpsb
dec
sti
jmp
add
xlat
pusha
fcomi
lret
xchg
scas
mov
jmp
pop
xor
xlat
js
icebp
lret
test
push
int3
add
mov
rcll
push
adc
inc
add
sbb
add
dec
cld
push
mov
adc
cmp
cmp
fistpl
pop
xchg
push
setl
or
je
pop
add
incb
sbb
data16
rclb
and
in
add
push
jbe
mov
push
push
push
lock
push
and
push
push
lret
movl
je
hlt
je
mov
add
dec
cmp
inc
or
cmc
adc
mov
mov
inc
mov
jns
mov
ja
mov
out
cmc
mov
incb
arpl
push
pop
mov
ljmp
mov
or
ftst
imul
in
movsb
decb
mov
inc
mov
ficomps
ficompl
bound
add
sub
fmull
enter
je
fsubs
add
in
mov
cs
das
xor
cmp
adc
rclb
popa
data16
aaa
in
or
popf
or
dec
hlt
sub
adc
movups
lret
out
icebp
and
add
cmpsl
fsubrs
addr16
scas
call
in
addl
pop
cltd
fcomps
repnz
outsb
jae
mov
xchg
cmc
int3
out
sub
lret
mov
add
jnp
aaa
mov
out
out
call
xor
test
inc
pop
call
inc
pop
and
jmp
scas
inc
insl
int
mov
test
and
inc
jmp
in
jmp
and
push
cmp
add
jmp
add
je
ds
in
sbb
inc
or
xor
and
and
lds
adc
dec
leave
mov
out
xchg
imul
in
call
mov
adc
push
mov
mov
sub
aam
adc
mov
mov
or
add
add
pop
and
call
in
jae
and
xchg
pop
mov
jecxz
push
int3
jae
and
xchg
lea
cwtl
lea
cwtl
lea
dec
lea
in
add
repnz
rcr
inc
cmpl
jg
je
xchg
mov
or
pop
push
cwtl
mov
add
add
jmp
jmp
sti
adc
mov
jle
call
or
aam
in
sahf
adc
loope
icebp
push
fistl
fidivrl
test
incl
jecxz
jne
leave
jns
ret
or
lret
push
test
mov
arpl
mov
out
idivl
repnz
ret
add
mov
out
xchg
mov
push
test
lret
adc
mov
arpl
lret
out
jno
call
xchg
int3
out
aaa
adc
sbb
cmc
adc
lock
add
lret
inc
mov
in
xor
add
add
sub
dec
call
jmp
stos
gs
mov
push
sbbb
add
add
out
add
popa
aad
and
inc
popa
push
inc
int
sti
mov
sar
call
lea
mov
data16
shll
push
ror
movsl
xor
cmp
pop
into
sub
cltd
jge
jmp
adc
popf
or
into
je
inc
roll
adc
add
xor
je
test
push
roll
add
loop
arpl
and
or
sbb
testb
daa
test
lahf
out
cmc
je
rorl
outsl
mov
cld
pop
xor
dec
and
xor
push
pop
nop
or
outsb
mov
push
gs
sbb
add
add
cli
mov
push
jmp
rcr
mov
add
and
sbbb
jl
push
rcrb
loope
je
testb
add
pushl
mov
cs
xchg
dec
jns
sti
std
sbb
enter
xchg
mov
imul
cmp
loopne
inc
addr16
add
mov
or
push
cld
inc
mov
xchg
testb
js
mov
jnp
xor
mov
jl
popa
mov
cli
cmc
inc
mov
or
mov
sar
rcr
sub
test
fsubl
test
push
jecxz
jno
push
add
adcb
mov
xor
jge
hlt
out
add
psubsb
jne
in
out
call
fs
xchg
aaa
mov
lret
mov
dec
lods
add
test
pop
or
sarb
or
testb
or
inc
adc
dec
sub
cmpsl
adc
dec
jo
sub
mov
add
je
xchg
fdivrp
push
add
test
dec
movaps
mov
add
pop
scas
mov
dec
leave
xchg
mov
dec
xchg
flds
mov
pop
add
jb
sti
fsubl
cltd
add
das
call
sahf
aad
jmp
das
lidtl
push
and
pop
adc
mov
jne
add
fsubs
add
ret
lret
out
or
mov
jmp
je
insb
and
call
push
adcb
jp
repnz
xor
lret
add
xchg
mov
xor
aaa
or
decl
in
neg
lret
or
push
fs
repz
insb
fwait
adc
pop
pop
and
data16
leave
or
int3
push
add
jb
into
fistpl
ja
or
cmp
icebp
cmp
sbb
leave
mov
iret
mov
iret
or
inc
jge
sti
sub
sub
lea
mov
incb
outsb
repnz
inc
xchg
lret
repnz
adc
and
dec
pop
mov
sbb
mov
das
jb
pop
mov
and
mov
incb
cmp
adc
fiaddl
jne
lret
cvtps2pd
mov
out
mov
xchg
ret
testl
jb
adc
push
or
lcall
sbb
adc
add
cltd
popa
lock
mov
pop
aaa
xchg
adc
sub
mov
outsb
jbe
mov
out
jae
test
movsb
xor
ret
add
mov
int3
out
xor
in
add
cmc
dec
shll
cmpsb
cs
push
push
pop
dec
iret
jl
sub
mov
add
cmpsb
cli
fiadds
mov
icebp
incl
ret
jne
mov
mov
mov
mov
inc
cltd
imul
xchg
pop
movsb
cli
sahf
xchg
mov
and
xchg
mov
test
dec
aam
xchg
inc
enter
sub
lods
or
cli
mov
test
loopne
into
add
bound
pusha
xchg
push
sub
push
and
mov
adc
mov
dec
loopne
les
addb
test
mov
test
arpl
not
ja
std
in
jne
dec
call
xor
mov
test
mov
jns
stos
popf
push
xorl
outsl
pop
fadds
loope
shlb
mov
or
pop
pop
cwtl
or
ret
jns
mov
rcll
addl
mov
sbb
sub
in
add
cli
movsb
sbb
and
jb
jle
mov
or
mov
sub
addr16
cwtl
mov
pop
into
sahf
xor
aaa
xchg
jno
xchg
jnp
push
jecxz
dec
inc
mov
mov
es
pushl
pop
mov
into
addr16
inc
xchg
mov
sub
mov
add
ror
je
shr
mov
jbe
repz
pop
add
bound
aad
std
dec
xor
jg
pop
out
xchg
ret
push
add
cmp
add
mov
adc
lahf
gs
inc
mov
out
xchg
mov
js
add
cmp
add
lods
in
push
shl
jle
mov
fisubrl
and
push
and
add
sbb
xchg
or
pop
xor
jo
lods
push
sub
sub
add
sarb
sub
je
test
mov
jmp
push
int3
je
jl
jmp
bound
mov
sbb
xor
leave
jo
negb
or
lcall
in
xor
mov
add
sbb
add
in
push
push
bound
out
aad
pusha
jae
fs
adc
rorl
jo
movb
insb
add
stos
jl
jle
mov
cli
jae
sbb
jo
xchg
xchg
jmp
fimull
inc
or
add
add
pop
aad
cmp
outsb
movaps
jo
mov
lret
es
cmp
test
insl
add
or
orl
sub
std
sbb
and
arpl
push
pop
fsubrp
xchg
and
pushl
repnz
cld
push
test
push
cmp
je
fwait
movl
in
mov
add
add
call
cmp
mov
dec
dec
ret
pop
outsb
and
jo
bnd
data16
das
ret
daa
mov
cli
add
js
lea
aam
jg
pop
dec
fsub
outsl
test
add
daa
mov
cli
lds
inc
jne
cmp
data16
jno
adc
lcall
fwait
jnp
mov
loop
adc
add
outsb
push
out
xchg
jg
jno
jnp
aad
std
lret
insl
dec
xor
pushf
xchg
add
mov
dec
lret
out
inc
pushf
jp
sub
imul
mov
daa
ret
shlb
leave
outsl
leave
cld
popf
test
fildl
cmp
call
jo
out
jle
mov
loope
and
int3
shlb
mov
jmp
pop
lcall
mov
ficoml
nop
in
jmp
movsl
cld
test
sub
inc
add
mov
insb
lock
inc
push
movswl
movl
jb
inc
add
into
xchg
mov
or
sbb
lcall
into
xchg
mov
and
add
test
and
inc
mov
add
jae
add
ljmp
and
push
clc
adc
lcall
loopne
out
test
xor
test
sbb
or
stc
add
adc
dec
lds
mov
jne
pop
push
add
adc
xchg
xchg
sub
push
or
notl
add
sbb
test
push
shrb
rolb
decb
add
sbb
clc
cmp
jo
push
pop
push
lea
sub
clc
sbb
xor
mov
push
shll
or
int
pop
dec
les
mov
jecxz
jb
xchg
ds
sbb
or
mov
ja
sub
jb,pn
add
stos
lock
dec
fcompl
add
rcll
insb
sti
sub
mov
sahf
pop
scas
lahf
add
jle
cli
xchg
add
lock
lods
sti
frstor
inc
je
cmp
cli
inc
xchg
xchg
lret
mov
cmpsb
insl
sarb
xchg
adc
mov
add
add
add
xchg
cmp
dec
iret
out
sub
aaa
xor
out
icebp
lret
iret
inc
pop
cwtl
mov
fistpll
clc
insb
ffreep
lcall
dec
scas
notl
mov
iret
pop
push
push
imul
adc
cmpl
std
scas
xchg
mov
xchg
push
ficoms
mov
pop
mov
add
add
lret
mov
arpl
popa
xchg
mov
sti
jp
out
add
sub
int3
add
stc
cltd
insl
ficomps
dec
leave
insb
mov
add
jmp
jb
jmp
bound
sub
jp
sub
int3
jae
xor
test
inc
add
jbe
cld
aaa
push
pop
dec
insb
and
add
xchg
jne
rolb
add
ljmp
cli
ljmp
negl
add
loope
jne
andl
xor
leave
pop
idiv
addb
add
push
push
and
push
pop
and
jp
push
lret
jle
je
fcomi
push
mov
xchg
loope
rorb
add
shrb
push
sub
jle
sub
push
pop
and
js
push
mov
jne
cmpsl
and
stos
dec
jge
clc
leave
xchg
je
orl
dec
shll
jne
fadd
jmp
adc
pushl
push
sar
mov
xchg
addr16
pop
addr16
pop
fdivr
mov
lea
jmp
add
mov
sti
jne
shll
mov
pop
or
xchg
into
xchg
dec
xor
cmp
sbb
cmpsl
jb
jne
sbb
jl
cs
and
std
out
sbb
inc
je
xor
jne
sbb
pop
dec
mov
and
adc
imul
mulb
add
mov
pushf
shll
fdiv
lret
lcall
jae
dec
push
fxch
hlt
or
sarl
pop
jl
out
adc
out
psrlw
xchg
cmp
mov
push
out
lret
push
out
mov
add
inc
hlt
pop
into
inc
cld
pop
lret
push
jle
add
out
sti
push
add
or
inc
add
pop
jl
sti
jns
mov
pop
dec
rcll
out
bound
jne
lds
jne
vpsubw
jmp
dec
pop
mov
rol
or
cmc
pop
and
scas
add
cmp
hlt
rcrl
jmp
int
xchg
shl
rorl
int
dec
insl
lds
out
xor
xchg
jne
rclb
call
add
loop
push
mov
push
sbb
sub
out
jnp
je
mov
je
mov
and
test
pop
mov
in
sub
test
fwait
adc
mov
out
enter
and
adc
je
dec
testb
sub
sbb
ret
cmpsl
jmp
add
dec
mov
adc
add
into
add
sbb
ret
mov
add
or
push
add
sub
cmp
nop
sub
or
inc
xor
bound
mov
js
jmp
mov
mov
sub
inc
xlat
and
imul
pushl
mov
or
xabort
inc
and
aad
pop
xchg
mov
sub
mov
aaa
cmpsb
jle
or
mov
leave
push
sti
mov
pop
movb
out
js
inc
cmp
shlb
mov
out
outsb
out
sbb
cld
jge
test
shrl
out
jns
loop
gs
inc
jmp
add
add
and
lcall
inc
jae
out
push
int3
pop
stos
addb
jae
in
js
mov
mov
mov
fwait
add
add
xchg
andl
mov
xor
sub
xchg
xchg
rcll
mov
test
mov
jmp
rorl
jo
loope
dec
inc
shll
out
add
adcb
ret
xchg
dec
mov
push
xchg
or
repz
test
inc
inc
out
sub
or
rolb
pusha
int3
mov
mov
dec
ljmp
subl
push
adc
test
pop
add
add
or
adc
lock
mov
cmp
testb
inc
mov
xor
mov
orb
and
inc
mov
sti
ljmp
inc
ja
mov
dec
mov
loope
test
xchg
jnp
add
push
push
mov
dec
clc
and
xchg
and
inc
leave
cmp
js
test
jbe
inc
sbb
nop
out
cmp
dec
pop
jno
push
lret
sub
and
in
cmp
sub
and
sub
and
mov
inc
rcl
or
mov
adc
addr16
and
shlb
jno
mov
ret
sbb
inc
repz
push
jl
pop
push
or
fcomps
jge
mov
idivb
data16
dec
or
fwait
incb
test
jg
int3
call
mov
popf
popl
fldcw
popa
sub
and
sahf
xchg
adc
lret
adc
sarl
mov
mov
add
or
test
mov
and
mov
movsb
adc
fucomi
adc
adc
pop
mov
add
cmc
outsb
fcom
scas
mov
sub
lret
idivl
inc
repz
scas
jmp
mov
pop
inc
xor
lret
out
pop
int3
and
cmp
inc
sti
arpl
jne
inc
shll
add
ret
in
out
out
cmp
das
popa
mov
pop
mov
or
ret
scas
das
jb
lods
lea
mov
or
add
adc
and
cltd
adc
pop
xlat
jno
jg
mov
mov
jmp
inc
xchg
ret
sub
enter
add
addl
push
xchg
push
add
nop
decb
fcmovbe
loope
mov
nop
decb
xor
or
ds
in
mov
dec
jmp
je
dec
jmp
shlb
dec
shrl
je
inc
shr
xchg
sub
jmp
sub
mov
decb
xchg
call
add
jmp
pushl
push
dec
or
in
xor
lret
sti
and
mov
pop
ljmp
inc
out
das
jb
mov
daa
repz
jae
mov
int
pop
movsb
xchg
dec
push
hlt
sub
stos
inc
addr16
pop
jae
push
ret
pop
jl
in
sti
int
xchg
add
rcrl
stos
std
rolb
mov
add
fcmovnbe
pop
sti
mov
mov
dec
fmul
mov
mov
test
add
push
mov
xor
sbb
xor
and
mov
int3
xor
push
and
and
dec
repz
push
in
insl
lds
cmpb
mov
add
or
adc
mov
pop
xchg
push
mov
mov
daa
mov
mov
pop
aaa
mov
ss
pushf
add
lret
outsb
inc
xchg
rcrb
lcall
mov
mov
add
push
add
int3
je
data16
sbb
mov
ret
mov
push
sub
or
jl
test
out
and
add
decb
loopne
push
fsubs
add
jbe
roll
push
cmp
mov
cmp
bound
test
sub
je
mov
mov
and
sti
sub
test
dec
popf
mov
and
add
xchg
add
mov
jl
aaa
push
mov
bound
add
add
add
and
call
pop
loop
insb
sahf
add
push
push
push
adc
and
adc
lret
adcl
sub
incl
inc
mov
in
xor
xchg
push
mov
xchg
inc
jne
mov
add
inc
pop
test
pop
adcb
iret
or
cmp
idiv
add
jmp
sar
cmp
ret
mov
mov
inc
pop
or
inc
or
mov
xor
std
push
je
test
push
sti
fsub
mov
lret
ljmp
fiaddl
xchg
mov
push
test
xchg
data16
xor
std
push
push
std
sahf
push
push
jb
add
orl
add
xor
mov
rcrb
orb
cmp
das
lret
daa
or
syscall
aam
mov
pop
shl
mov
js
mov
xchg
inc
push
ljmp
mov
fisttpl
ljmp
out
add
mov
sub
rorl
cld
dec
or
mov
xchg
pop
add
dec
lods
or
mov
icebp
test
pop
xchg
sbb
mov
outsb
lods
jae
sub
call
lret
cmp
leave
test
inc
jmp
mov
in
popf
pop
pop
push
mov
mov
mov
scas
lret
add
test
add
push
add
xor
and
test
cltd
push
pop
or
add
iret
call
testb
mov
call
bound
inc
int
adc
jle
push
push
int
inc
call
lods
int
call
fs
adc
push
scas
mov
mov
jecxz
call
push
inc
push
inc
pop
cmp
or
icebp
mov
jmp
and
sgdtl
add
std
add
pop
dec
out
bswap
push
add
dec
pusha
adc
aaa
mov
adc
push
jmp
push
fcompl
jne
daa
push
aam
xor
sbb
iret
stos
and
mov
sub
sub
scas
add
mov
clc
test
inc
sbb
add
enter
dec
je
cmc
pop
add
jg
adc
popf
xor
shlb
inc
sti
push
xchg
repnz
jae
sti
cmp
cmp
movsb
ror
sub
and
inc
fsubs
xor
cmp
mov
mov
mov
out
fistpll
negl
push
lcall
lret
insb
aaa
add
lret
dec
and
xchg
stc
call
rcll
movsl
les
jmp
xchg
or
in
push
mov
jmp
xchg
mov
in
lahf
cltd
push
cmp
mov
int
test
mov
int3
and
dec
dec
shrb
xor
mov
cltd
movsl
iret
xchg
add
lods
cmpsl
dec
mov
xor
sub
push
enter
sarb
dec
test
adc
fstps
ljmp
sub
adc
popa
or
mov
jmp
add
push
dec
repnz
dec
push
sub
fimuls
inc
cs
popa
sbb
in
inc
add
mov
xchg
movsb
testb
pop
pop
rcrl
xchg
bound
in
dec
adc
lcall
mov
inc
out
add
sbb
out
mov
popl
pop
cmp
xorl
daa
sbb
lcall
mov
mov
xlat
mov
sbb
add
and
mov
mov
in
jnp
cli
lcall
xor
push
dec
jae
jo
cmc
adc
enter
out
pop
cld
ljmp
mov
repz
pushl
mov
out
loop
add
xlat
leave
mov
lret
dec
sti
std
pop
mov
mov
mov
push
ficoml
aaa
cmp
push
sub
jbe
aad
dec
push
popa
inc
dec
adc
ss
das
dec
jnp
inc
test
cli
jle
adc
loope
out
out
es
idivl
ljmp
out
divl
push
or
jne
shlb
mov
xchg
dec
sti
inc
test
test
test
lea
xchg
dec
sti
sub
lret
clc
ret
sbb
mul
jge
dec
push
pop
pop
pop
jle
jnp
or
fcos
sbb
cmp
xor
or
sbb
add
sbb
add
or
test
daa
cmc
in
outsb
push
aaa
jbe
xchg
leave
out
aas
pop
push
mov
xchg
add
push
jmp
inc
fisubl
add
mov
paddq
add
sbb
jg
add
lods
sub
inc
mov
cmp
andl
adc
mov
inc
test
in
push
test
push
push
test
cmp
test
movsl
sub
test
mov
sbb
jecxz
addr16
add
std
sub
loop
pop
mov
sub
add
rolb
xchg
cld
arpl
sti
jns
test
lea
cmp
incl
lds
mov
cmc
adc
adcb
out
jnp
pushl
enter
inc
filds
lret
movl
add
out
cmp
adc
xchg
iret
add
push
xchg
repnz
inc
je
xor
cwtl
cli
decb
push
rorl
hlt
add
mov
dec
clc
fidivs
add
loopne
or
mov
pop
xchg
rorl
lock
daa
sub
sub
pop
arpl
pop
dec
test
fsubrs
sti
std
pop
lods
inc
hlt
stc
mov
add
jg
dec
cld
dec
sti
xorb
xor
add
jns
mov
js
mov
sbb
jno
roll
imull
add
std
mov
stc
insl
xorl
jge
fisttpll
jp
dec
dec
loopne
repz
pop
sarb
fadds
gs
mov
add
loopne
repz
push
add
jp
mov
orl
call
xorl
lret
repnz
lret
fs
inc
mov
dec
dec
bound
shlb
dec
push
mov
imul
jns
inc
aad
add
pop
pusha
dec
jns
mov
pop
cmp
pop
mov
or
add
adc
and
push
mov
cs
enter
mov
mov
mov
jg
jmp
jbe
mov
int
jns
jmp
mov
xor
loopne
add
ljmp
mov
dec
dec
add
cmp
push
lcall
das
iret
mov
shll
add
gs
sub
lods
xchg
inc
inc
lds
imul
fimuls
or
int3
add
jle
idiv
or
xchg
sbb
jne
fcmovnb
data16
or
lea
int3
push
incl
dec
or
stc
mov
lret
xor
iret
add
push
sarl
lea
push
push
dec
push
and
push
sbb
not
add
ja
cmc
les
lahf
add
xchg
mov
lea
dec
mov
push
mull
mov
decl
call
add
aam
andl
icebp
and
mov
decb
addb
lcall
sub
xchg
repz
mov
sbb
outsb
fs
loopne
gs
aam
adc
int
aad
fstl
jns
stos
gs
fimull
stc
and
popa
dec
jmp
js
andb
mov
add
adc
mov
dec
and
out
add
xchg
dec
adcb
icebp
in
mov
icebp
mov
pop
or
add
movups
scas
outsl
add
lret
out
push
add
int3
or
je
ss
out
das
inc
out
stos
lret
out
add
jecxz
repnz
test
scas
mov
add
mov
scas
idiv
mov
cwtl
filds
mov
mov
mov
test
mov
add
inc
dec
test
add
add
and
insb
in
lock
lret
push
pop
aad
cld
ljmp
xchg
or
sub
jecxz
scas
lret
mov
jnp
call
ror
add
mov
mov
jae
call
xchg
movl
insl
xchg
mov
jmp
xchg
cmpsl
add
in
mov
push
inc
cmp
sti
add
hlt
dec
lds
adc
push
hlt
and
nop
enter
inc
add
sbb
sub
dec
enter
aas
notl
repnz
add
test
leave
add
ret
pusha
cmp
add
push
orl
in
fstpt
push
push
mov
iret
xchg
sub
and
bound
lret
iret
xchg
add
repz
add
push
dec
inc
gs
sar
pushl
into
adc
rcll
es
or
jb
jp
mov
push
aas
cmp
xor
fbstp
shrb
movsl
clc
test
pop
mov
bnd
mov
bnd
das
mov
xorl
lock
ret
xchg
call
add
add
mov
jg
fs
push
cwtl
data16
jl
push
cmc
ja
adc
mov
jns
mov
mov
int
cld
fwait
sahf
or
xor
loop
outsb
cmpsl
sti
mov
fdivrs
lock
fs
daa
enter
xlat
pop
adc
les
pop
mov
cltd
jno
xchg
rcll
mov
pop
fmuls
hlt
lret
outsb
push
das
jns
jecxz
shl
popa
add
pop
or
das
mov
xchg
stos
out
jb
adc
or
ret
pop
popa
sbb
ret
in
inc
test
test
adc
dec
add
xchg
lahf
and
jmp
cmp
and
lods
mov
fwait
movsb
or
cltd
pop
sbb
aam
sub
jbe
dec
int
sbb
cli
jb
je
lds
fildl
pop
jbe
mov
not
int3
stc
jno
dec
into
sbb
dec
inc
add
add
movaps
lods
and
outsb
mull
add
dec
inc
add
cmp
adc
inc
pop
jne
pop
fwait
push
sub
dec
mov
je
stos
cmc
adc
adc
jnp
dec
or
push
fwait
int3
dec
push
inc
pop
lea
repz
dec
and
mov
int3
xor
xor
mov
mov
cmpsl
add
mov
lock
or
dec
push
outsb
clc
and
sbb
add
add
inc
idiv
mov
jno
mov
sub
add
jns
cmpsb
lss
xchg
xor
mov
scas
dec
add
ljmp
das
adc
pop
mov
clc
sahf
daa
sbb
imul
out
js
inc
xchg
pusha
scas
mov
push
mov
je
fs
out
rolb
das
and
inc
jne
test
inc
bound
jmp
decb
gs
cli
cmpsl
loopne
inc
mov
je
roll
push
fcomps
icebp
into
in
outsb
xlat
inc
jb
and
lods
inc
and
shrl
movsl
sbb
xchg
pushl
lods
mov
insl
dec
xchg
data16
mov
out
mulb
int3
mov
outsb
call
pop
add
insl
add
mov
out
aad
call
in
jecxz
add
pop
in
mov
ret
sbb
daa
add
jnp
push
jb
or
nop
sti
icebp
insl
jg
loope
push
cmc
test
and
call
jo
cli
sub
mov
ficompl
cli
cld
test
cmp
fisubrl
testl
lock
cmp
insl
push
push
lret
test
les
je
ds
int
leave
add
cltd
xlat
cwtl
jmp
adc
add
aas
or
add
mov
add
leave
add
push
imul
dec
lds
enter
iret
enter
rolb
test
push
push
pop
and
mov
fs
call
push
pop
and
call
mov
test
inc
lcall
cmp
cld
lcall
dec
push
mov
clc
adc
enter
jbe
cmp
test
je
inc
stc
adc
popa
sub
mov
test
mov
aam
add
enter
loope
mov
out
cmp
das
and
xchg
repnz
bound
fsubp
ja
decb
popa
into
cli
cmpsl
es
and
ja
lcall
and
out
sbb
pushl
stos
hlt
cwtl
mov
cwtl
ljmp
push
inc
sti
xor
or
aas
je
pushl
xor
pop
loop
je
mov
in
mov
fs
or
scas
sbb
stc
call
call
bound
call
subb
scas
or
mov
push
jg
iret
push
xchg
out
cmp
pop
fs
add
call
daa
push
add
mov
out
add
xchg
sub
aaa
mov
xchg
out
fimull
add
repnz
mov
insl
mov
lret
push
pop
bound
add
xor
lret
add
inc
or
push
dec
add
test
lret
test
mov
test
test
and
jmp
fisubrl
add
add
add
add
jg
mov
mov
jmp
mov
enter
fwait
aad
lret
test
sub
js
sbb
stc
cld
inc
fiaddl
xor
push
ficomps
mov
dec
data16
dec
lea
int
mov
jae
mov
push
xor
xlat
jae
add
add
je
out
cmc
adc
pop
jnp
sbb
jge
hlt
int3
je
pop
cmp
call
inc
cmpsb
jae
push
jl
sbb
or
and
rolb
add
xor
add
adc
test
test
or
mov
sub
mov
insb
notb
add
push
add
mov
out
in
cmp
daa
fsubp
xchg
mov
je
in
inc
pop
push
psubusb
mov
aam
lods
add
xchg
test
add
jo
add
cmp
or
mov
mov
push
add
jns
orb
mov
add
lock
add
add
iret
xchg
mov
psrlq
scas
stos
sub
xchg
ljmp
rorb
add
or
or
push
cmp
jns
cltd
cmpsb
mov
int3
out
aas
ss
lret
pop
fcoms
ret
jo
xchg
jo
xchg
stos
pop
fnstcw
clc
or
ss
ss
aam
in
pop
movsb
sti
iret
or
add
mov
outsb
in
lea
cli
jmp
jno
test
and
cld
int
fcompl
mov
or
add
call
xchg
jmp
jb
stos
sbb
pusha
jmp
gs
sbb
jno
aaa
and
int3
add
add
jo
mov
jno
test
add
pop
mov
xor
sub
jecxz
test
dec
roll
xchg
addb
push
mov
jecxz
pop
leave
sub
into
mov
test
jl
xor
mov
mov
push
push
add
sub
push
mov
add
add
imul
pop
jne
pop
lcall
sbb
mov
mov
xchg
aaa
jae
sbb
enter
xor
pop
outsb
push
mov
or
sub
stc
jb
xorl
jle
orb
insl
flds
jb
add
push
bound
lock
decb
mov
mov
into
out
sub
pushl
xor
and
jb
ljmp
mov
xor
jne
jne
pushf
lock
pushl
pop
jno
cmp
roll
lcall
out
fcom
and
jmp
jo
sub
add
adc
out
jmp
repz
int3
out
add
cmpsl
cwtl
shrb
iret
jle
fptan
test
mov
icebp
cmpsl
ret
or
mov
add
lret
lcall
ret
repnz
mov
push
or
sbb
adc
push
loope
cs
or
or
rcrb
cltd
mov
xor
es
mov
iret
pop
sub
or
cmp
xor
adc
sub
and
add
scas
lret
cmpb
dec
add
mov
stc
mov
lods
dec
push
int
dec
insl
lds
inc
int
loop
lds
mov
cmp
adc
xchg
or
data16
fs
xlat
or
hlt
cld
stc
sbb
mov
scas
dec
jb
aas
add
mov
lret
pusha
dec
stos
fcmovne
mov
add
mov
add
ret
add
add
int
mov
inc
and
mov
testb
popa
push
int
decl
incb
inc
cmp
pop
int
inc
inc
push
test
sbb
sbb
jns
pop
xchg
jne
mov
push
xlat
imul
mov
adc
cli
adcb
mov
fs
int3
cltd
pop
fiaddl
enter
adc
mov
aad
movsbl
sahf
jb
pushl
mov
loope
cmc
sub
push
dec
loop
xor
cmp
fadds
mov
jnp
add
lock
je
in
mov
in
cmpsb
cmc
mov
push
faddl
stc
cmc
and
ljmp
jmp
xchg
xchg
sub
icebp
add
lret
xchg
adc
es
xor
add
lret
xor
lret
test
mov
xor
test
mov
pop
dec
lcall
add
psubsw
mov
adc
mov
cmpsl
clc
add
xchg
jno
xchg
ret
pop
scas
jns
fs
mov
ljmp
jae
cmc
and
inc
ret
add
lret
loop
jge
pop
rcl
outsb
cli
xor
lods
in
pop
add
sti
stc
pop
mov
scas
repnz
scas
push
dec
int
cmpsl
push
jne
popf
pushaw
xchg
and
into
mov
xor
jmp
cmp
add
or
addb
add
mov
mov
mov
jge
enter
scas
lret
add
iret
je
aam
and
push
jp
sbb
incb
push
cli
out
loopne
pop
call
and
inc
jmp
add
push
and
filds
pushf
rorb
enter
cltd
cmc
andb
jae
pop
sub
divl
adc
or
jb
call
xor
dec
leave
loope
mov
pop
add
jb
pushl
cmp
movl
daa
pop
leave
jae
loope
push
adc
lahf
jae
rcrb
cmc
mov
pcmpgtw
mov
gs
scas
fs
fchs
push
and
rorb
mov
mov
cmp
mov
or
xchg
jle
dec
add
mov
cmp
int
mov
add
inc
xor
sub
sbb
mov
and
adc
in
adc
push
xor
aad
add
xor
jge
cmp
addb
jb
icebp
cmc
pop
decl
cs
add
mov
sbb
jns
out
jae
jg
enter
push
dec
sbb
push
xchg
push
out
test
lret
outsb
mov
scas
dec
xchg
xor
jb
push
leave
pop
insb
inc
ds
pop
dec
push
sub
movsl
inc
test
add
sahf
mov
mov
stos
inc
sub
add
or
sti
pop
enter
push
push
ret
in
in
jb
fdivrl
sti
jge
scas
sti
jmp
into
fwait
cld
test
out
adc
xor
xchg
test
push
cli
jb
scas
adc
roll
pop
mov
jno
xor
or
shlb
icebp
pop
xchg
scas
lea
scas
lret
add
inc
add
aaa
hlt
call
scas
lret
add
mov
lret
subl
adc
rorb
push
sahf
dec
rcr
push
inc
lock
test
int3
add
xor
pop
cltd
mov
dec
rcll
lret
add
dec
into
test
cmpsl
push
dec
mov
mov
add
or
push
pop
outsb
xchg
pop
rolb
xor
sarb
mov
das
push
lds
fcmove
add
pop
cmpl
cmp
cltd
xor
mov
or
adc
add
rcrl
adc
fwait
xchg
pusha
push
cli
push
loopne
sub
jno
mov
add
dec
push
mov
mov
decb
mov
push
mov
sbb
jno
data16
out
and
mov
out
jns
mov
jl
stos
arpl
dec
dec
int
aad
sbb
sbb
xchg
filds
dec
movsl
cmp
or
add
mov
add
add
sbb
pushl
cli
test
enter
sbbl
inc
add
dec
jmp
mov
inc
jmp
xorb
jmp
xchg
mov
out
sbb
jmp
js
negl
leave
daa
iret
out
xor
rclb
lret
out
jbe
out
add
rcrb
lret
add
shl
rolb
lcall
adc
mov
add
push
lock
push
and
mov
fadds
and
cs
adc
jb
lret
dec
push
call
leave
push
enter
inc
pop
push
inc
mov
repz
call
sbb
movaps
mov
add
leave
jp
ja
int3
add
leave
inc
push
jmp
scas
lret
add
add
cltd
shlb
push
lea
int3
add
adcl
jmp
adc
lret
call
mov
leave
xor
push
pop
add
or
push
or
mov
call
test
inc
add
add
add
mov
shlb
cld
mov
add
enter
iret
add
jno
push
call
dec
or
call
push
inc
inc
cmp
imul
and
lock
iret
jg
ror
add
and
add
pushf
jl
into
jecxz
hlt
jmp
aam
je
sub
fisubl
incl
lock
je
out
push
mov
incb
mov
jp
mov
adc
adc
cmp
lds
mov
jnp
mov
loope
adc
bound
subb
std
push
out
push
jb
inc
inc
xchg
jbe
pop
adcl
adc
insl
or
add
fld
and
xor
enter
inc
add
out
adc
decb
test
aam
in
cmpsl
pop
test
cltd
dec
jmp
repz
jl
call
imul
pushf
call
mov
push
jnp
divl
mov
roll
mov
data16
mov
test
cmpsl
inc
iret
mov
out
mov
push
mov
add
xor
call
test
adc
adc
add
push
jnp
xor
push
outsb
mov
negb
call
push
sub
jg
push
add
fs
jo
scas
sbb
add
test
adc
sub
dec
jge
sbb
in
jae
and
jl
sbb
dec
lds
push
mov
mov
fs
add
cld
push
dec
mov
mov
pop
lds
jmp
mov
cli
sbb
xchg
or
inc
adc
and
dec
shll
and
ja
or
stos
cmc
mov
push
xor
rol
movhps
dec
add
stos
cmc
adcl
push
call
mov
int
mov
push
pop
cmp
outsb
mov
in
mov
decl
pop
dec
add
lret
aam
or
repnz
inc
cld
and
sti
pushl
xchg
and
xlat
shl
mov
std
xchg
jo
adc
out
enter
add
rep
inc
jne
stos
test
inc
loop
mov
cmp
testb
lcall
mov
arpl
mov
into
cmc
cs
and
shrb
adc
pop
cmp
ret
push
jmp
std
pushl
xchg
dec
xchg
ja
mov
out
adc
int3
test
add
lock
bswap
mov
add
inc
test
mov
cmpsl
sbb
lret
daa
test
push
out
xor
add
aas
mov
sbb
jb
in
popf
pushf
lea
lods
jne
outsb
rclb
fstpl
nop
xchg
sub
mov
out
repz
les
mov
cs
fisttpl
cmpsb
out
sub
xlat
push
pop
add
test
mov
dec
cli
insb
icebp
shll
imul
and
jmp
test
inc
rcl
inc
lret
inc
inc
add
jmp
mov
incl
jmp
mov
ret
add
dec
cli
imul
call
ljmp
push
jmp
pushf
out
dec
fidivrl
sbb
adc
mov
stos
stos
adc
mov
arpl
lea
sub
add
adc
inc
sarl
icebp
imul
sti
ss
lret
scas
lret
dec
push
sar
call
add
sub
add
xchg
stos
or
push
jl
inc
xor
adc
inc
imul
fidivrs
push
or
mov
lea
push
push
cmp
adc
movl
xlat
pop
adc
mov
push
xchg
dec
data16
dec
call
leave
in
sub
xchg
mov
cmp
add
mov
rcl
cmp
push
push
repnz
std
xchg
mov
decb
fxch
and
jmp
add
das
sbb
mov
sub
test
pushl
arpl
push
xor
add
lods
lret
je
mov
out
jbe
xor
mov
lret
dec
faddl
or
pusha
sti
mov
imul
call
testl
cwtl
xchg
pop
out
sbbl
add
pop
add
xor
mov
pop
loop
mov
cmp
mov
pusha
enter
testl
mov
mov
mov
call
dec
outsl
sbb
aaa
dec
add
inc
mov
sarb
popf
shrb
or
lahf
mov
xchg
fs
call
nop
push
out
fimuls
inc
jb
out
pop
add
xor
xor
lret
in
ds
and
push
dec
push
sbb
aam
jmp
mov
mov
sub
leave
mov
add
insb
and
test
add
add
test
mov
add
sub
sti
push
rolb
int
inc
adc
daa
or
add
mov
xchg
push
xchg
or
xor
cmc
mov
roll
add
in
fsub
mov
fmuls
test
and
sti
jns
add
or
into
add
orl
adc
notb
sbb
fwait
dec
gs
imul
inc
cmpsl
inc
lea
xchg
inc
and
push
xchg
push
jp
pop
into
add
pop
add
add
and
adc
into
jns
test
jle
adc
mov
decb
xor
jg
xor
jmp
mov
decb
mov
xchg
mov
out
hlt
add
in
loopne
pushf
hlt
add
enter
add
mov
gs
sbb
das
scas
loope
mov
jle
aaa
lea
xor
ljmp
scas
loope
mov
decb
add
mov
das
loopw
sub
outsl
cmp
jae
xchg
inc
sti
cmp
lret
push
add
pop
les
call
nop
lret
stos
cmp
add
lret
fs
shl
pusha
xorb
out
add
nop
add
cmp
add
sti
pop
mov
or
pop
out
negl
mov
mov
out
sub
sbb
out
pop
stos
mov
and
mov
out
adc
or
push
lods
out
push
mov
jmp
mov
mov
push
add
out
jge
mov
adc
and
add
add
test
lret
test
mov
add
xor
loop
inc
test
cltd
test
shll
cmpsb
leave
mov
add
inc
cmp
mov
push
adc
dec
adc
mov
clc
outsb
sbb
lret
add
mov
jns
add
jp
outsl
add
ret
fcomi
call
push
and
call
shrb
add
and
pushf
sbb
add
pop
decl
push
jp
or
add
sub
test
pop
or
in
loope
leave
xchg
mov
pop
mov
push
test
push
nop
je
xchg
jp
je
in
mov
mov
push
xorb
push
and
add
pushf
jns
pop
lret
std
rolb
daa
mov
lret
mov
decb
jle
sti
les
pop
adc
ss
add
jmp
loopne
mov
incb
xchg
or
add
mov
jno
cs
add
fxch
mov
dec
xor
add
xchg
adc
pushl
jge
test
incb
push
cmp
scas
out
movsb
std
jmp
scas
fincstp
mov
decb
jne
pop
mov
mov
jne
int3
pop
jg
pop
call
jg
int3
out
int
or
mov
out
test
aad
js
lret
out
mov
ja
mov
fs
push
in
mov
je
add
lret
call
dec
stc
filds
ss
add
mov
out
es
add
lret
iret
rcll
mov
hlt
or
daa
out
insb
inc
push
rcrl
stos
pop
mov
xchg
add
mov
jmpw
and
mov
mov
cltd
test
xchg
inc
out
add
add
add
dec
cli
rorb
scas
lret
add
stos
dec
cmp
mov
sbb
jmp
jbe
shl
push
sti
out
lret
or
shll
cli
es
and
inc
cli
mov
dec
lret
add
fdecstp
aam
mov
jl
cmp
roll
cmp
and
and
stos
je
fcoml
pusha
int3
cld
mov
loop
cmpsb
movl
inc
pop
dec
inc
and
jg
xlat
into
or
jo
rol
dec
dec
lea
into
add
mov
ret
mov
into
add
sbb
int
jg
data16
cmc
je
jae
dec
dec
and
push
cld
repnz
enter
arpl
cmp
inc
pop
or
mov
and
mov
mov
int3
int
xor
dec
and
inc
into
sbb
mov
xor
popa
mov
jg
xchg
aas
jg
xor
ljmp
add
pushl
or
pushl
push
out
mov
jl
xor
xor
jp
mov
decb
ljmp
add
cmp
mov
cs
shrb
lea
clc
dec
dec
daa
mov
mov
in
icebp
aas
ror
add
or
jg
int3
out
or
mov
filds
inc
pop
xchg
fbstp
sti
lea
or
pushf
and
sbb
inc
xlat
cmp
int3
pusha
rcr
out
mov
repz
vpshlq
out
lret
call
ret
xchg
scas
sub
add
lret
out
repnz
xorl
xor
mov
ss
popf
lret
inc
inc
add
stos
inc
or
inc
cli
sahf
mov
inc
cli
mov
lret
sub
dec
sbb
adc
cli
insl
divb
add
add
and
add
icebp
movsb
pop
pushf
cli
rol
jb
test
xor
cmp
and
cmp
aas
xchg
into
pop
jl
mov
lret
add
add
cmp
dec
aaa
pop
cmpsb
xor
inc
xor
xor
cmp
xor
fcmovnb
xor
or
cmc
add
cmc
addl
add
add
shl
subl
cli
mov
roll
rolb
or
sbb
jg
xlat
cmc
test
mov
xorl
jle
mov
push
mov
inc
inc
cld
dec
jno
push
mov
or
cmp
call
push
loop
jle
sub
add
pushf
std
add
jp
lret
pushl
mov
add
mov
add
ss
outsb
cmp
in
jne,pn
repz
in
dec
cmp
or
pop
mov
lar
or
jl
xor
mov
or
or
mov
scas
push
sbb
fnsave
test
pop
ljmp
std
jge
jno
mov
xor
jmp
gs
cli
lret
addr16
xchg
lret
into
jmp
and
adc
das
pop
inc
mov
shl
test
add
mov
add
xor
jge
xchg
mul
xchg
adc
xchg
pop
xchg
mov
or
push
pushf
int
daa
mov
in
std
mov
sub
pushl
add
cmpsl
add
or
movsb
mov
jecxz
jle
sti
arpl
pop
mov
movsl
dec
cmpsb
or
mov
int
pop
xchg
and
push
and
test
add
iret
push
leave
inc
lret
push
scas
mov
in
mov
je
test
inc
xchg
jge
mov
sub
mov
imul
rcll
add
fdivs
sbb
mov
or
rolb
sub
mov
sub
lret
dec
cwtl
sahf
adc
imul
gs
push
bound
int3
and
add
mov
add
push
out
sbb
or
push
in
xor
adc
jbe
iret
jecxz
jbe
fwait
mov
add
add
sbb
and
mov
stos
push
fwait
iret
orl
je
stos
int
or
imul
in
iret
add
mov
pop
jo
mov
or
mov
and
adcb
dec
push
and
fnstsw
int3
lret
test
push
jno
mov
add
mov
add
xchg
adc
xorl
incl
jnp
les
push
mov
int
sbb
sbb
xorl
gs
enter
xchg
add
lock
cli
in
aas
mov
inc
je
movsl
nop
and
daa
cltd
aas
cmp
pop
xorb
not
clc
cs
sub
push
les
sbb
enter
adc
mov
and
or
mov
loope
add
lds
lret
hlt
shl
inc
imulb
scas
imul
sti
mov
sub
and
mov
jo
mov
or
cmp
mov
sub
addr16
ret
jnp
inc
sub
mov
cmp
xchg
cmp
out
xchg
adc
push
rol
xchg
lods
and
mov
roll
xor
mov
fiadds
icebp
cmp
test
test
mov
mov
add
sbb
sub
push
mov
dec
sarl
push
mov
mov
rcrl
mov
mov
cmp
movb
or
xor
stc
pop
mov
mov
add
jmp
leave
ret
cmp
int3
je
les
notl
cwtl
xor
xchg
movsb
inc
inc
adc
int3
add
shrb
shlb
push
ret
jns
xlat
jp
push
add
and
jnp
or
jg
and
ret
clc
lret
dec
pop
outsl
mov
dec
add
push
push
push
adc
push
decl
dec
lret
add
arpl
push
mov
call
mov
cmp
lea
test
or
pop
jno
cmpxchg
adc
outsb
add
cmc
pusha
loop
in
pop
mov
jb
cmpsl
pop
aaa
in
or
pop
mov
add
call
sub
inc
loopne
and
cld
fildll
push
cmp
dec
pop
mov
jge
cmpl
mov
insl
ss
cli
mov
fiadds
sub
data16
lret
pop
add
mov
add
add
jecxz
shlb
out
jo
fs
xchg
aad
or
mov
shll
movsl
lret
inc
scas
inc
and
lret
out
add
inc
inc
scas
lret
xor
es
ret
fisubs
add
lea
xchg
pusha
ret
sub
test
out
call
adc
pusha
into
call
negl
jne
cli
xor
pop
push
and
stc
hlt
dec
faddl
stos
mov
ja
add
inc
push
enter
test
lock
push
mov
icebp
xor
cmpsb
and
mov
xor
icebp
xor
ja,pt
test
add
inc
in
lret
add
repnz
jo
add
jp
mov
mov
jo
mov
ds
inc
shr
mov
xchg
in
mov
mov
dec
enter
mov
add
dec
add
dec
sarb
inc
mov
mov
xchg
cmpl
xchg
into
add
or
add
cli
xchg
aaa
mov
iret
mov
and
mov
adc
pop
or
push
push
add
lret
call
in
dec
add
fwait
xlat
push
mov
mov
mov
std
ret
jae
loop
fwait
stc
push
mov
mov
inc
xchg
cmp
ret
jl
mov
add
mov
jge
je
stc
incl
pusha
lods
mov
daa
fs
mov
mov
adc
cmpsb
es
ljmp
daa
int
inc
add
repnz
push
test
andb
incl
scas
add
add
add
aas
mov
add
lret
aad
xchg
cmp
jnp
repz
mov
cmpsl
scas
cs
jmp
inc
mov
mov
pop
mov
jl
fcomi
jge
sub
jge
adc
or
jp
xor
mov
divb
das
xor
test
int
add
lds
cs
cmp
sbb
mov
xor
add
xchg
sub
lret
sbb
or
cmpsl
sub
scas
lods
dec
lret
scas
add
mov
scas
and
pop
mov
add
decl
add
mov
jl
inc
xor
mov
cmp
dec
add
mov
mov
or
xor
sub
xor
and
push
lds
jmp
test
jge
lds
adc
mov
xor
xor
push
add
loope
push
add
add
or
cmc
adc
push
mov
mov
add
mov
jne
mov
call
enter
fwait
dec
aaa
add
or
xor
mov
cli
incb
inc
sbb
adc
std
push
cli
ficoms
jnp
or
adc
ljmp
xor
fwait
lcall
mov
add
sahf
inc
lret
adc
xor
jne
xor
mov
int3
jg
mov
jmp
mov
jl
or
lret
add
lahf
or
inc
mov
jmp
shl
mov
cmp
jns
mov
dec
push
aad
and
jo
xchg
dec
movsb
call
gs
push
gs
je
cmp
xchg
xor
dec
mov
movsb
jnp
movsb
mov
gs
xor
sub
loop
mov
mov
pop
cmc
xchg
lret
aad
add
or
bound
lcall
sub
out
dec
je
add
pop
inc
test
mov
lcall
cmpsl
stc
inc
mov
and
mov
pop
lret
push
les
sahf
lds
hlt
stos
daa
mov
inc
add
sub
fucom
mov
popf
xchg
or
ret
jl
in
mov
jns
ret
out
cmp
test
cmp
ss
fcmovbe
outsb
or
scas
and
add
adc
xor
fcmovbe
push
scas
lcall
in
cmp
out
mov
test
mov
cmp
xor
je
aam
push
mov
mov
shlb
test
jge
mov
jae
mov
imul
add
add
add
leave
mov
test
mov
andl
or
push
les
xlat
movsl
mov
sbb
adc
push
ret
add
or
cmp
mov
and
jle
enter
xor
ret
data16
out
push
inc
or
xor
mov
cmp
add
push
add
or
add
imul
mov
enter
or
xor
and
cmp
push
mov
sbb
push
sub
sub
out
push
pushl
xor
mov
cmp
cld
addr16
dec
sti
cmpsl
nop
push
inc
mov
rorl
jne
test
decl
addr16
push
pushf
inc
and
gs
mov
notb
and
sub
cmp
imul
push
and
popf
hlt
or
and
std
ret
shl
xor
sub
ret
daa
push
aas
ja
push
adc
mov
outsb
dec
mov
jge
cmp
sub
rorb
xlat
insb
les
rcrb
ret
sub
gs
out
cmp
ss
add
out
gs
gs
divl
dec
add
inc
push
icebp
inc
jnp
sub
mov
push
add
fisttps
pop
mov
incb
or
add
out
shll
mov
inc
mov
add
adc
inc
add
jmp
int
test
dec
aad
movsl
xchg
mov
cli
rolb
pop
sub
jmp
mov
inc
inc
jns
add
ljmp
jmp
rorb
lods
mov
or
inc
and
mov
jnp
pusha
hlt
rorb
lretw
test
xor
add
jo
call
add
xor
inc
sub
out
sahf
imul
mov
mov
lea
rcll
pop
loopne
inc
lret
shlb
jns
cmpsl
push
mov
adc
xchg
and
lds
rorb
mov
mov
or
inc
push
ds
push
ds
pop
inc
and
xor
push
pop
int3
addb
add
or
testb
incl
mov
lock
adc
jmp
add
pop
ret
xor
xchg
scas
sti
je
test
out
lods
jo
mov
popf
lea
xchg
add
lods
mov
sbb
push
adc
add
outsb
or
inc
into
add
add
sub
sub
test
sub
incl
mov
cmp
shrb
mov
add
loop
xchg
mov
out
sub
daa
push
call
dec
mov
outsl
int3
adc
push
adc
call
ret
ljmp
or
mov
paddw
pop
adcb
jge
insb
dec
mov
pusha
pop
add
jmp
scas
mov
out
xchg
push
lds
cs
call
and
out
out
adcb
call
cli
shr
leave
sub
pushl
jge
stos
push
rcr
mov
in
lret
les
out
xor
cmp
jno
sbbb
mov
call
add
and
and
push
jmp
inc
call
fbld
cli
aaa
std
test
std
out
sbb
mov
mov
push
int
dec
int3
and
push
rorb
mov
call
add
pusha
dec
mov
in
sub
add
add
leave
add
and
or
data16
mov
xchg
pop
mov
push
adc
jns
dec
mov
call
mov
out
jne
faddp
jmp
push
dec
and
jns
je
testl
pop
push
pushf
and
mov
inc
jl
push
xor
das
dec
jno
das
hlt
or
add
repz
xchg
xor
mov
jmp
or
mov
jle
lea
sub
stos
mov
loope
hlt
xor
jae
mov
ss
inc
sti
test
out
cmp
cli
aaa
pop
or
leave
lret
cli
lods
scas
ret
pop
add
pop
jg
xor
pop
mov
dec
and
in
push
fstpl
icebp
fstps
aad
xchg
addr16
test
sub
cmpsb
xor
les
or
xchg
jg
aaa
and
add
or
sbb
jecxz
in
aaa
mov
xor
mov
fs
jnp
push
outsb
mov
push
jo
mov
out
popa
xor
dec
enter
inc
or
pop
aam
adc
imul
popf
and
test
call
pop
ds
test
stos
push
xor
pop
inc
or
push
push
push
inc
in
xlat
mov
mov
call
pop
mov
pop
sub
popa
add
ljmp
dec
vmovd
loope
lret
add
push
jge
sahf
dec
cli
idivb
call
ret
fisubs
call
add
and
push
aas
mov
xor
insl
loop
cli
jmp
ds
and
xor
add
dec
dec
add
mov
test
data16
orl
loopne
pop
mov
roll
enter
sbb
roll
dec
int
cmc
cmp
mov
cmpl
add
add
int3
add
test
fwait
call
lea
mov
add
int3
mov
out
add
pop
sysret
test
lret
add
enter
mov
push
pusha
mov
xor
push
imul
mov
in
mov
and
dec
nop
cmpsl
or
iret
and
imul
sub
and
add
xchg
sbb
sbb
add
mov
decb
xor
add
xor
data16
in
cmp
loope
fbld
aaa
jmp
test
decl
push
bound
data16
lods
cmp
mov
inc
sub
pop
dec
sbb
push
and
lret
into
sub
in
cmp
mov
cmp
aas
into
out
inc
mov
in
lods
sti
loope
ret
jge
or
push
and
aam
aaa
xchg
out
push
rclb
jl
aad
rorb
cmp
xor
sbb
inc
jl
xchg
imul
mov
std
mov
mov
mov
cmp
xchg
addr16
pop
add
push
insl
aas
out
add
push
ljmp
lret
jmp
scas
lret
push
rcrl
jne
popa
pop
and
outsb
cmpsb
cwtl
add
clc
movsl
sub
cli
out
cmp
push
and
xchg
mov
add
xor
pop
and
jb
ljmp
scas
push
xchg
add
add
push
in
pop
or
cli
jmp
push
lcall
pop
xor
add
mov
in
mov
sahf
call
push
frstor
adc
decl
jge
lea
sbb
adcl
test
cmpsb
sbb
push
aam
pop
and
add
add
dec
inc
and
add
or
mov
add
mov
mov
enter
mov
and
in
mov
and
popf
insl
and
push
mov
adc
aad
test
lock
jg
and
loope
sti
cmpsl
xchg
push
inc
mov
enter
sub
call
insl
testl
add
xor
and
cmp
add
lcall
orl
adc
int
cli
sbb
jp
repnz
sub
or
cli
cmc
pop
mov
sub
lock
jle
outsb
loopne
das
test
mov
mov
popa
mov
add
lret
mov
cld
pop
test
icebp
lret
lcall
stos
roll
dec
lods
incl
addr16
mov
in
mov
insb
sbb
dec
insl
lds
mov
gs
stos
lock
mov
mov
outsb
rorl
add
movsl
fstpt
repz
push
icebp
adc
inc
mov
sub
mov
push
outsl
add
jl
hlt
outsb
int
adc
lret
addl
jmp
add
lret
mov
push
lret
cmp
push
xor
or
sarl
xchg
jge
mov
jmp
mov
mov
cli
into
test
xor
and
push
lret
push
mov
fld
xorl
lret
add
lret
pop
stos
fsubr
bnd
sti
jle
scas
int3
push
bound
lahf
xor
dec
mov
add
add
enter
iret
shrb
lret
ljmp
shr
movsb
sub
test
std
jnp
fcmovne
xchg
clc
sub
pop
inc
pop
jnp
fwait
jg
test
xchg
add
jle
or
inc
mov
call
adc
xchg
jmp
loope
pop
or
sub
add
jnp
dec
rorb
jle
xor
aam
mov
mov
mov
negb
std
jnp
sbb
jae
mov
stc
cmc
mov
and
movsb
inc
add
outsl
incb
gs
sbb
mov
and
dec
lret
lods
roll
decl
and
orl
jns
add
or
mov
out
xchg
ljmp
mov
in
dec
pop
mov
dec
mov
in
je
inc
adc
loop
jg
sbb
cmp
sub
push
adcl
iret
out
xor
mov
call
lret
mov
lahf
int
call
add
sbb
jg
out
jecxz
sub
scas
call
in
mov
outsl
jbe
push
shlb
dec
sub
xchg
jnp
inc
in
out
mov
out
pop
shll
repnz
mov
cmpsl
or
addr16
jae
jle
lock
add
out
sbb
xlat
or
dec
lds
dec
push
xchg
or
pop
xor
jb
add
out
adc
lret
cltd
push
mov
pop
inc
push
lret
call
popa
insl
out
or
jb
lods
cli
mov
xchg
mov
add
pusha
call
mov
inc
push
pop
jno
and
das
pop
stos
mov
sub
fisubs
push
addr16
dec
rcr
in
rolb
sub
add
xchg
cmp
mov
daa
add
xchg
cmp
push
mov
add
fcmovne
call
mov
ffreep
jmp
xchg
insl
and
xchg
cmp
mov
dec
fdivrp
or
inc
add
leave
dec
push
adc
dec
pushl
fidivl
cmp
xchg
cmp
add
pushf
sbb
call
mov
jne
xor
and
jg
loop
inc
mov
jnp
into
push
jge
add
adc
adc
add
jecxz
sbb
sbb
xorb
xor
xchg
into
ja
mov
aad
push
and
xchg
repnz
mov
jl
push
cmp
xchg
pop
test
add
add
pop
push
add
push
jns
into
push
dec
push
in
js
and
pushl
and
std
pop
and
out
gs
out
pop
lret
and
cmp
ljmp
ret
mull
and
lret
bound
and
mov
clc
adc
add
add
sub
fmuls
jo
inc
neg
add
fsubrs
stos
fcmovne
out
das
dec
les
lret
out
lods
adc
sar
sahf
jl
jno
dec
xor
jp
dec
jle
iret
fidivrs
sarl
cwtl
testb
clc
jl
and
out
inc
push
cli
bound
or
sub
cwtl
dec
push
cs
cmpsl
es
pop
subl
jne
and
add
sbb
xchg
sbb
add
test
or
shll
pushf
jmp
or
push
add
in
cs
cli
mov
outsb
ja
add
mov
push
jb
sub
jecxz
mov
cli
add
dec
dec
into
jns
push
xchg
test
add
test
rcrb
mov
jg
pushl
movsb
add
stos
sub
or
pop
leave
enter
sub
jnp
dec
push
xchg
mov
jns
out
dec
and
jae
pop
mov
xchg
jmp
mov
adc
into
sbb
lds
jg
lcall
push
inc
mov
or
add
sbb
and
pop
lcall
xchg
dec
test
icebp
push
adcl
inc
aaa
jecxz
sbb
inc
push
mov
add
and
test
pop
cli
sub
pop
outsb
dec
mov
ficoml
cli
fstpl
aad
ret
test
cmp
rcll
pop
dec
data16
add
add
pop
dec
xchg
out
pop
adc
and
mov
dec
dec
call
js
fdivrs
xchg
jmp
jb
in
js
ud0
test
cmpsb
push
loopne
mov
out
daa
add
pop
hlt
js
and
hlt
sub
pop
add
jbe
fcoms
ficompl
jp
aas
fidivrs
orps
in
add
mov
add
and
enter
cmp
call
add
or
pop
aad
es
int3
jae
orl
bound
rcrl
out
in
pop
add
mov
dec
add
dec
adc
jmp
pop
push
cli
cmpsb
dec
inc
push
lds
out
addl
push
adc
xchg
push
xchg
adc
insl
icebp
xchg
add
inc
into
adc
movsl
mov
xchg
lods
out
mov
popf
filds
sub
mov
out
icebp
rcrl
or
sbb
or
jp
adc
push
or
fidivrs
and
or
insb
inc
mov
add
fs
cmc
push
fidivrs
sub
or
or
mov
and
cmp
and
cmp
and
and
sti
sub
test
sahf
jnp
and
fimuls
decl
into
stc
mov
test
sbb
pop
pop
dec
add
ret
dec
sbb
push
es
repnz
outsb
and
pop
idiv
mov
sub
pushf
and
mov
je
push
mov
mov
add
and
xlat
das
das
and
sub
gs
mov
pushl
cltd
shl
popa
pop
sub
xchg
cli
mov
push
lea
repnz
dec
out
mov
and
push
sub
and
in
pop
push
jb
xchg
dec
xchg
lret
outsb
mov
xor
add
ficoms
sub
xchg
daa
sarb
rorb
inc
mov
sarb
mov
scas
hlt
mov
ret
add
adc
or
out
or
add
sub
aas
jg
xor
in
add
xchg
movsl
mov
repnz
xchg
clc
loopne
out
mov
mov
mulb
out
add
or
es
sub
jmp
movsb
daa
mov
or
push
pop
add
jle
push
mov
ss
test
xor
push
adc
xchg
add
push
cli
jbe
mov
lret
shrl
or
fidivs
and
das
adc
scas
ja
cli
jb
scas
sub
push
push
leave
popa
jge
adc
jge
adc
jne
sbb
scas
sbb
data16
mov
loope
cmc
int
test
jbe
cli
jb
push
lret
push
mov
stc
push
xor
xchg
and
jmp
mov
test
xor
and
xlat
jo
test
adc
imul
les
pop
inc
leave
push
sbb
mov
cmp
rorl
push
add
fwait
and
loop
and
rorb
clc
pushl
bswap
lcall
mov
push
jmp
adc
orl
popa
loop
testl
xchg
xchg
and
xor
push
pop
outsb
and
in
jae
aam
test
add
xchg
fdivr
loopne,pn
shl
js
or
das
ret
add
mov
or
sub
xchg
leave
add
das
push
testb
pushf
clc
cli
fmulp
xor
mov
jne
or
xor
sub
mov
xor
lret
add
in
xchg
stc
mov
lcall
sbb
xchg
push
movsb
daa
mov
sahf
lock
movsl
outsb
dec
xchg
out
sub
test
imul
lret
insl
dec
loopne
inc
into
mov
into
add
dec
mov
sbb
mov
push
mov
cmpsl
cld
in
frstor
dec
movsb
adc
or
iret
jecxz
sub
mov
sub
push
sbb
mov
popf
or
ljmp
ret
sti
adc
add
out
fs
add
and
sub
jmp
out
repz
sbb
jmp
popl
xchg
cmp
jmp
add
stc
push
cmp
lahf
mov
inc
push
cwtl
mov
scas
adc
sub
pop
add
add
add
mov
fcmovu
add
adc
rep
arpl
test
sub
je
push
scas
sbb
out
push
inc
lret
dec
mov
or
adc
outsb
pushf
leave
pop
add
fsubl
test
insb
enter
sarl
push
adc
add
and
mov
dec
repnz
xor
mulb
push
loopne
mov
call
rclb
fsubs
jecxz
cld
push
mov
xor
xchg
add
lret
mov
cli
insl
mov
mov
arpl
sub
cld
sub
sub
frstor
adc
das
shlb
add
add
ret
aas
jmp
dec
scas
inc
cli
mov
fistpl
out
ficoms
repnz
imul
test
or
addr16
push
mov
dec
cwtl
jmp
test
add
imul
popf
cwtl
mov
std
out
cmp
mov
add
add
mov
arpl
add
clc
add
mov
jl
mov
xor
pop
xchg
jge
add
jmp
std
cmp
sub
insb
shll
jecxz
inc
cmpsb
mov
out
mov
rcl
dec
xchg
mov
repz
in
push
push
stos
cmp
aaa
xor
push
jg
jg
jg
jg
imul
add
push
sbb
scas
or
insb
sti
jle
fistl
sub
aas
sbb
xchg
test
adc
outsb
or
adc
mov
into
mov
fpatan
repz
jmp
fldenv
out
sahf
test
pushf
push
xchg
ss
mov
mov
call
bound
repz
dec
inc
std
pop
les
add
add
add
pop
and
ljmp
sub
in
ds
cli
add
sbb
mov
lret
push
push
stc
fisubs
pop
call
nop
push
test
sti
addb
xor
dec
in
icebp
dec
cmp
xchg
mov
jb
push
ljmp
idiv
mov
mov
out
es
push
add
xor
push
sbb
xor
popf
div
jmp
fisubs
jne
sub
jecxz
popf
jne
mov
call
cli
cmp
xlat
dec
jns
cli
xor
mov
add
in
sbb
sub
test
shlb
icebp
mov
jle
lock
jae
jge
or
xor
sbb
pop
or
add
std
jae
xor
dec
mov
dec
jge
in
leave
call
xchg
mov
add
repnz
add
mov
pop
push
and
ficompl
aaa
enter
mov
inc
add
cmp
dec
add
scas
dec
pop
add
mov
sbb
jg
aad
rorb
add
add
add
add
out
jmp
hlt
jp
insb
lods
out
js
jle
xor
push
and
add
add
scas
cmp
in
cmp
push
int3
pop
into
cltd
lcall
ja
mov
cmpsl
repz
jae
add
add
clc
mov
cmpsl
add
xor
je
sub
and
sbb
add
std
out
pusha
repnz
adc
add
insb
jb
sbb
xlat
imul
lret
test
fcomip
je
mov
mov
or
jne
in
repz
dec
push
add
mov
call
jb
dec
inc
add
mov
mov
call
mov
fldcw
mov
test
fwait
push
int
mov
pop
pop
mov
add
xchg
mov
push
mov
repz
push
dec
lret
test
cmp
repnz
lret
adcl
idiv
dec
push
dec
and
push
int
loopne
idiv
nop
xchg
mov
enter
lret
mov
mov
pop
test
lret
add
pop
fwait
add
add
adc
or
mov
and
push
inc
and
push
cmp
mov
cmp
imul
xor
call
mov
sbb
data16
mov
ds
imul
imul
adc
and
add
mov
xor
repz
sbb
mov
mov
shll
or
sti
test
incb
shrb
pushl
mov
sti
adc
aas
mov
jo
lret
mov
mov
add
mov
lret
out
pop
in
xchg
push
std
imul
dec
shr
lock
cmp
ret
jle
cmpsl
fcmovnu
add
xadd
lock
cmp
pop
dec
lods
repz
enter
xchg
sbb
xor
xchg
jb
int
daa
add
and
xor
mov
ret
inc
push
inc
dec
loop
mov
ds
mov
inc
push
jb
xchg
xchg
sar
lea
mov
hlt
into
inc
jmp
push
dec
add
add
add
test
repnz
adc
repz
scas
pop
test
sub
push
pop
in
test
or
mov
inc
add
push
and
mov
fstpl
lret
push
xchg
jecxz
sub
cmp
add
lret
dec
mov
cwtl
test
adc
hlt
int
inc
add
jbe
and
jbe
and
stos
sbb
lock
data16
adcl
cmpb
jl
add
pop
loopne
mov
sbb
lea
or
pop
mov
push
inc
or
or
push
jne
orb
and
add
bound
cmp
fcomip
add
mov
into
add
std
rolb
push
add
lret
add
mov
in
jbe
scas
lea
jg
std
std
scas
mov
cmp
gs
and
sbb
xchg
in
inc
jg
and
xchg
adc
push
jbe
xchg
enter
call
or
xlat
outsb
mov
mov
push
gs
dec
addr16
add
add
add
pusha
jbe
push
jecxz
cmp
or
jbe
ljmp
lret
pop
xor
int
stc
xor
int
add
lret
ljmp
push
adc
ret
daa
sahf
sahf
sbb
fisubs
mov
jp
lods
fs
sar
dec
dec
stc
ljmp
nop
add
add
adc
sbb
sub
clc
adc
jecxz
inc
mov
push
and
dec
out
mov
test
mov
or
xchg
jl
aad
ret
lods
jno
shll
cmc
mov
xorb
xor
xor
push
movb
stc
es
stc
push
insb
xor
add
add
xchg
pop
mov
fadds
out
jg
shrb
push
clc
fs
dec
into
and
inc
jb
fwait
ret
or
stc
iret
cmpsl
call
adc
mov
dec
adc
inc
jb
iret
jb
call
mov
push
aad
ds
out
dec
inc
adc
lret
cmpsb
push
pop
add
dec
out
lcall
icebp
xor
pushl
mov
lret
add
adc
loop
mov
xchg
insb
lea
lea
scas
sub
test
stc
jmp
lret
out
mov
push
mov
test
in
pop
jecxz
pop
lahf
and
mov
adc
sbb
add
adcb
add
pop
add
mov
aas
mov
sub
mov
cli
daa
xor
adc
and
push
inc
add
mov
dec
test
movsb
sub
fisttps
jg
dec
jecxz
pushl
std
xchg
or
cli
fistps
xor
pop
and
pop
lret
cmp
in
jns
mov
std
call
add
mov
add
pusha
lcall
mov
fsubr
out
das
pop
pop
sub
ret
int
out
jno
scas
xor
lret
out
insl
andb
ljmp
push
mov
daa
bound
nop
lret
cmp
jne
out
stc
scas
lahf
fistpl
shl
add
or
in
add
push
int3
orl
xor
nop
or
insb
pop
cli
lret
out
sbb
insb
pop
int3
out
sbbb
jmp
rcl
call
fs
jmp
stc
dec
xchg
jg
outsb
add
sub
inc
add
in
icebp
stc
insb
jge
adc
in
scas
adc
dec
mov
push
movsb
fildl
jmp
add
stc
push
mov
push
mov
dec
call
test
or
mov
and
jmp
inc
insb
xor
in
jecxz
add
movl
xor
std
add
enter
jge
and
mov
add
or
add
push
iret
add
sbb
sbb
sbb
nop
mov
add
mov
push
or
mov
movl
and
sarb
xchg
decl
iret
push
mov
add
sar
test
fistps
addl
or
into
clc
dec
pop
test
lret
sbb
mov
mov
add
mov
dec
or
cmc
das
push
insl
mov
pushl
and
icebp
jae
sarl
ficoml
cli
mov
jge
out
xchg
enter
mov
cmp
std
decl
push
adc
pushl
rcll
icebp
insl
clc
out
ret
enter
aad
push
icebp
roll
loope
dec
mov
movl
add
pop
jge
int3
out
or
addl
outsl
inc
xchg
or
gs
lods
mov
lret
cmp
jg
mov
movb
jecxz
and
xlat
pop
jns
mov
sahf
addr16
inc
mov
sub
cs
dec
or
xchg
icebp
out
inc
jg
sub
aaa
add
add
shr
add
jecxz
out
push
icebp
outsb
aam
cli
add
dec
ret
cmpsl
sbb
lods
jne
insb
xlat
jge
mov
jae
cltd
leave
xorl
imul
cmc
xlat
pushl
jge
in
rcrl
mov
stos
flds
add
or
lret
push
movups
pop
movsb
cmp
add
add
enter
dec
cmpsb
inc
sbb
mov
jae
push
out
loope
mov
stc
jb
inc
repz
mov
ds
in
jns
add
sbb
fs
mov
lea
nop
push
inc
sbb
or
pop
outsb
sbb
dec
mov
aad
cmp
test
add
push
pop
jo
mov
call
add
int3
loope
pop
adc
push
movsl
sahf
bound
mov
arpl
imul
or
xor
xchg
lahf
jb
and
jb
and
jb
and
jbe
and
mov
out
cs
cmp
push
push
adc
mov
dec
test
add
or
add
xchg
sbb
add
sbb
mul
aad
scas
lds
fstpt
and
jns
and
pop
mov
ret
fs
sub
ss
and
leave
dec
jns
mov
add
aas
add
push
xchg
ficoml
lock
into
cld
jbe
mov
mov
hlt
push
das
cmp
push
mov
les
xor
ret
pop
dec
ja
aas
repnz
jae
out
lret
and
jecxz
out
pop
dec
mov
call
leave
jno
call
add
and
inc
sub
xchg
gs
mov
sub
lds
pop
pop
mov
and
mov
jo
in
mov
stos
adc
enterw
mov
xchg
aaa
push
add
adc
inc
pop
repz
sub
hlt
jb
xrelease
loope
js
push
stos
cmp
test
divb
push
push
icebp
test
lock
icebp
fs
jns
push
mov
adc
pop
jl
mov
dec
push
sub
jl
sahf
xor
mov
orl
adc
fidivl
lock
test
in
inc
jo
test
icebp
test
hlt
add
and
xchg
cmpb
cmp
cmpb
mov
inc
sbb
dec
lcall
or
inc
mov
cmp
pop
call
push
xlat
mov
outsb
or
leave
je
cmpsl
cli
je
mov
loope
or
push
pop
dec
ret
add
add
xlat
dec
push
lods
inc
dec
and
stc
adc
sub
inc
xchg
and
dec
add
test
enter
cmp
sbb
adc
dec
mov
or
call
std
ljmp
mov
test
adc
hlt
std
mov
hlt
in
lret
test
in
cmc
inc
mov
xor
xor
or
sub
add
add
outsl
lcallw
movsb
sub
push
hlt
movsl
xor
and
xchg
sbb
hlt
std
sub
rorb
int
test
lods
loop
dec
dec
cli
pop
mov
lcall
ret
and
xchg
add
jg
push
xchg
jno
dec
into
ret
insb
push
mov
sbb
xor
ficompl
add
pop
pop
xor
cmp
xchg
lret
fidivrl
cmpsb
das
cmp
jge
ret
addl
call
pop
sbb
xor
or
or
jo
mov
pop
push
mov
mov
dec
xchg
mov
sub
iret
loope
sub
ret
adc
mov
addr16
push
add
push
ret
scas
adc
test
test
mov
add
lock
sbb
movsl
push
mov
add
outsl
add
push
ljmp
inc
jmp
test
add
sbb
dec
pop
xchg
jle
push
aaa
sub
test
add
add
xchg
fs
jge
test
sub
addl
xchg
mov
inc
or
sub
dec
stc
sub
lods
mov
imul
jg
insl
add
push
dec
stc
jp
mov
aas
lea
loope
sbb
testl
push
ds
mov
cmp
pop
popf
mov
pop
adcb
pop
mov
jp
push
pusha
add
cli
pusha
push
arpl
mov
je,pt
dec
dec
fadd
push
mov
aaa
pusha
cmp
pop
insl
roll
movsl
outsb
xchg
mov
lock
in
lods
xchg
and
add
lods
cmp
gs
lret
xchg
mov
pop
mov
add
add
je
ljmp
mov
add
movsl
mov
cli
lahf
call
adc
jg
mov
int
inc
pushl
lret
xacquire
add
stos
adc
dec
mov
adc
mov
movsb
lret
sub
rorl
lods
rol
ror
or
push
jo
lock
cmpsl
pop
cmp
loopne
cmpsb
pop
mov
xor
jge
push
sarb
in
sub
insl
pop
inc
cltd
dec
out
inc
pop
mov
test
mov
fmulp
mov
insb
inc
push
jnp
dec
aas
xchg
push
scas
ret
xchg
sub
imul
mov
lea
pop
shlb
repz
rcrb
out
or
mov
out
xor
adc
jmp
jmpw
adc
mov
pusha
or
push
rolb
jmp
mov
lret
fdivrl
aaa
ror
add
adcb
push
dec
add
push
int3
add
mov
leave
add
add
mov
xor
cmc
xor
xor
cmp
and
push
adc
pop
push
or
fists
add
mov
mov
cwtl
loope
adc
test
pop
xchg
pushf
scas
jecxz
add
enter
and
lcall
mov
mov
and
rorb
mov
dec
nop
loope
mov
fs
je
in
lret
arpl
std
jne
jae
pop
inc
jo
mov
in
les
jmp
pop
cli
mov
mov
xor
xor
jmp
repz
lcall
std
pushl
mov
jge
mov
std
or
scas
xor
add
in
fisttpl
lock
pop
mov
into
add
ds
fidivl
mov
aam
sbb
outsb
xchg
mov
mov
inc
cmovb
nop
into
test
and
mov
mov
mov
fs
mov
loop
aas
xchg
mov
ret
inc
mov
sub
jecxz
push
rorb
add
jno
outsb
aas
mov
mov
dec
loop
aam
rorb
jg
mov
add
int3
out
aaa
jb
mov
mov
insl
aam
adc
lds
push
sbb
inc
inc
cli
out
sbb
add
add
orl
clc
dec
dec
call
push
in
jb
mov
add
add
stc
cld
pop
mov
and
adc
sbb
add
mov
retw
jg
test
lods
sbb
or
ds
or
add
mov
rcll
dec
dec
lds
iret
add
sbb
mov
cs
sbb
pop
mov
add
inc
ja
dec
jne
push
inc
push
add
xor
data16
or
inc
pop
in
jae
fnstsw
mov
dec
out
push
cmp
inc
fstpt
push
push
fstps
in
testl
xlat
cmc
adc
popa
int3
push
push
sbb
mov
or
adc
mov
cltd
sub
mov
sbb
div
std
out
mov
bound
adc
add
mov
xchg
stos
jae
mov
cmp
out
in
mov
stos
jae
push
dec
in
or
add
repnz
adc
add
add
scas
sbb
mov
push
xchg
adc
inc
mov
stos
jae
push
mov
add
add
scas
lods
dec
mov
pop
leave
jno
mov
loope
adc
dec
test
dec
mov
sub
fnsave
mov
fwait
and
add
fmuls
jle
into
jae
or
iret
push
inc
fistpll
stos
movsl
cmp
add
or
or
stos
cmp
in
std
jle
mov
scas
sbbb
fdiv
ja
cwtl
fisubs
and
popf
lahf
cmp
push
xchg
js
imul
iret
dec
add
fstpl
jne
loope
mov
push
inc
push
mov
mov
jp
adc
stc
ret
dec
mov
jmp
scas
repnz
mov
jno
test
add
cmc
je
pop
add
stc
jb
inc
cli
adc
add
leave
add
jge
scas
push
pop
bound
fs
popa
loop
test
fimull
fstl
mov
idiv
or
pop
call
xchg
and
or
adc
test
aam
call
add
inc
pop
fcoms
loop
jno
imul
aas
sbb
push
ja
push
pop
call
mov
mov
pop
jne
push
orl
mov
mov
test
adc
and
and
popf
and
xor
mov
and
into
jns
into
rcrb
jb
inc
push
dec
push
sti
stc
add
xor
movsl
sbb
mov
addr16
and
sbb
sbb
add
push
cli
xchg
leave
pusha
scas
or
dec
test
jbe
xchg
call
cli
repz
sub
call
sti
lds
cmp
pop
jo
std
jle
std
jnp
mov
jbe
into
outsb
inc
incb
out
outsl
dec
into
shr
js
sarl
stos
or
inc
jge
scas
repz
das
orb
sub
add
outsl
dec
mov
insb
dec
xchg
mov
push
movsl
cwtl
sub
imul
dec
push
add
lret
xchg
push
mov
push
call
lods
inc
and
movsl
enter
xor
dec
test
insb
in
shlb
lods
inc
add
add
lcall
scas
testl
pop
inc
add
mov
lds
scas
adc
jo
mov
xchg
int
in
movsb
sub
ss
mov
sbb
jp
outsb
xchg
mov
subb
repnz
sti
outsl
add
aaa
or
lret
subb
push
cmp
mov
test
bound
sbb
stc
jecxz
icebp
lahf
cmp
je
hlt
lret
lret
in
lea
add
jae
push
iret
gs
int
push
push
iret
pop
outsl
pop
int
add
fmuls
adc
adc
cmp
push
pop
enter
inc
int
in
das
dec
push
and
je
push
shlb
add
int
add
rolb
add
popf
add
or
adc
lret
iret
call
mov
fsubrp
mov
movb
shrl
adc
jmp
xor
add
loop
cmp
xor
out
loop
xchg
mov
decb
fimuls
push
loop
mov
stos
cli
jne
cmpb
out
jne
mov
orl
mov
xor
cli
sbb
push
hlt
push
xor
xchg
out
mov
xor
insl
add
aam
or
mov
loopne,pn
out
out
push
inc
mov
call
pop
jb
cld
mov
imul
or
mov
insb
daa
add
or
add
add
loopne
and
lret
cmc
iret
test
in
mov
push
add
rcrb
add
jne
push
loopne
lcall
inc
push
movsl
iret
xor
testl
cmpsl
add
adc
in
adc
lcall
or
add
es
ss
mov
xor
jp
add
flds
mov
add
or
pusha
lds
in
push
fistpll
inc
lret
add
and
and
mov
rclb
test
shrb
scas
fdivr
icebp
lret
push
bound
or
mov
lods
or
mov
jae
ficoms
jns
cmc
lret
push
push
pushf
fisttpl
test
xor
call
add
inc
sar
insl
icebp
pop
punpckhwd
jg
mov
shl
pop
inc
jmp
adc
add
mov
cmp
add
dec
pusha
or
push
aas
or
mov
adc
mov
icebp
dec
lret
fcmovne
call
testb
add
or
hlt
push
mov
push
loopne
sub
add
rolb
add
leave
je
or
out
add
sbb
add
adc
testb
jl
or
jae
jecxz
cmc
pushl
sarl
repnz
cmp
mov
add
xor
add
mov
loop
jl
xchg
ja
cmpsb
xchg
ja
sub
add
adc
add
test
std
mov
in
fstpl
cld
insl
xlat
icebp
adc
loop
mov
das
pop
cmpsl
cli
dec
or
dec
inc
lcall
ret
cmpsb
popa
push
add
cmpsl
cli
adc
or
jae
call
test
mov
data16
inc
sub
push
jmp
in
add
mov
jp
pop
inc
stos
dec
add
mov
test
ret
out
repnz
test
jp
mov
outsb
mov
push
jecxz
rol
add
push
sarb
mov
daa
popf
fisubl
dec
xchg
mov
movsl
sbb
std
jne
mov
pop
jnp
hlt
dec
mov
jle
or
fidivl
rcrl
adc
add
loope
push
or
jae
xor
jge
jmp
or
icebp
lret
xchg
mov
std
xchg
dec
jge
test
retw
stc
hlt
mov
inc
jmp
fcoms
mov
or
add
faddl
mov
jmp
aas
adc
add
int
mov
sbb
mov
incb
roll
fwait
add
imul
cmovo
dec
dec
add
dec
js
lret
mov
notb
pop
mov
add
dec
out
in
lock
sub
sub
aam
lret
movl
push
mov
mov
jbe
into
or
add
add
sub
cmp
push
or
jne
push
inc
mov
mov
bound
mov
mov
mov
std
ljmp
mov
push
jle
in
inc
out
push
adc
outsl
cs
mov
cmp
mov
inc
mov
subb
loop
xchg
loop
mov
idivl
dec
lea
pop
mov
add
loop
addr16
std
jmp
mov
std
jmp
icebp
adc
loop
mov
xchg
mov
pushl
lret
xor
mov
lds
ret
lahf
ret
lahf
ret
jnp
jl
aam
cmc
cltd
cmpsl
rcrl
jecxz
jb
pop
xor
lods
cmpl
popf
or
sbb
lret
shlb
push
out
pop
or
pop
cli
or
adc
or
jns
in
movsl
js
mov
mov
aam
cmp
icebp
inc
mov
sub
mov
push
dec
pop
add
push
pop
add
movsl
mov
test
out
mov
lock
lcall
add
mov
call
cltd
fwait
lret
stc
je
inc
inc
in
mov
jge
in
inc
int
shlb
push
pop
add
mov
adc
mov
fcom
icebp
mov
jae
add
loopne
stc
sbb
mov
jbe
mov
sub
add
mov
call
insl
jno
cmp
bound
add
or
incl
test
je
push
inc
and
xlat
scas
adc
mov
pop
mov
sub
xor
push
xorl
dec
jge
notb
pop
pop
jne
dec
enter
sub
mov
cmp
addl
mov
mov
mov
lcall
xor
negb
add
mov
ds
fnstenv
mov
inc
andl
jne
and
imul
sbb
movswl
cmpsl
popa
and
loop
mov
sbb
sbb
ret
fisubs
sub
pop
imul
inc
loop
sti
cmpl
lds
mov
mov
push
mov
popa
pushf
std
push
call
or
jb
add
dec
testl
jge
add
lahf
inc
stc
aas
mov
insb
ret
fidivs
fdiv
pop
push
add
dec
push
jmp
sahf
mov
sub
scas
sbb
scas
rol
mov
mov
aas
sbb
arpl
mov
insb
xchg
lds
mov
lret
out
push
dec
fs
push
popa
out
xor
lret
imul
lahf
test
mov
inc
xor
pop
inc
stos
xor
inc
add
and
in
push
add
adc
jg
sub
stc
jmp
lahf
inc
cs
xor
sbb
call
add
or
mov
cli
jae
mov
roll
in
add
lret
push
inc
int
mov
pop
adc
test
fwait
push
lret
mov
inc
ficoml
add
fcmovu
push
jb
mov
mov
movb
faddl
jl
and
mov
adc
outsl
mov
stc
decl
inc
add
xor
mov
sub
add
shll
pop
ficoml
mov
in
sbb
dec
push
jae
cld
dec
lahf
lret
cmp
xchg
pop
inc
cld
in
adc
jp
cmc
adc
push
data16
int3
loop
xor
ret
stc
adc
movsl
push
sub
add
in
inc
fwait
push
mov
enter
incl
mov
test
aaa
popa
sbb
sbb
xchg
cli
jne
lds
sub
clc
das
les
xchg
mov
gs
insl
daa
faddl
clc
rol
jb
push
and
mov
sti
mov
movsl
mov
mov
cmc
inc
loop
in
loop,pt
in
or
movl
add
add
stos
jle
fisubrs
push
sub
or
xchg
xchg
lcall
int3
ret
enter
or
loopne
lock
fistps
movsb
mov
sti
faddl
mov
mov
jns
lret
out
cmc
cmp
pop
sbb
loop
dec
dec
fwait
add
add
insb
xchg
js
aaa
add
sub
sahf
pop
mov
or
cmp
pop
in
lret
loope
add
mov
movsb
pop
push
add
loope
out
inc
ret
jns
or
mov
rolb
ret
ret
ret
push
inc
or
aam
flds
push
lret
stc
fstl
stc
aad
sar
mov
add
pop
add
mov
push
push
mov
fimuls
int
dec
xlat
fs
pop
inc
mov
add
sub
test
or
or
ljmp
out
mov
and
add
or
cmp
fimuls
divb
mov
divb
or
icebp
cli
out
lret
add
mov
push
and
cmp
scas
adc
dec
out
jg
sbb
pop
adc
mov
adc
insl
and
addr16
std
or
xor
jae
call
dec
insl
and
hlt
add
jg
adc
jg
adc
push
cmc
adc
mov
rcll
add
test
xchg
cwtl
sar
add
ret
mov
shlb
mov
adc
loopne
mov
xchg
lods
mov
dec
or
std
pushl
cmp
aam
cmpsb
add
out
push
adc
cmp
xchg
je
sub
cli
mov
xor
mov
mov
leave
lock
std
cli
lahf
push
xchg
adc
les
jmp
arpl
push
in
inc
push
xchg
or
out
lcall
daa
add
mov
cmp
int3
out
xor
ret
pop
inc
jp
adcb
mov
xchg
les
roll
pushf
add
sbb
mov
push
andb
lcall
dec
lcall
movsb
pop
jmp
mov
scas
add
dec
xor
mov
jmp
in
out
adc
lret
out
jmp
add
mov
or
cmp
stc
cld
mov
inc
jmp
jbe
inc
mov
loop
adc
mov
lea
jns
adc
aam
in
push
shrl
and
adc
xchg
iret
mov
adc
add
or
call
jge
adc
scas
lret
shll
adc
push
fcmovb
test
aam
in
mov
cltd
dec
inc
cld
dec
or
aad
xchg
arpl
aad
add
repz
out
add
lret
push
les
jne
and
adc
dec
call
fwait
pop
add
sbb
add
cmpsb
shl
mulb
test
rorb
orb
inc
dec
int
add
mov
cmp
add
push
add
in
arpl
add
lret
sub
dec
dec
icebp
push
inc
arpl
mov
mov
sti
fdivrl
jle
rorb
xor
mov
aas
mov
xchg
roll
pop
cltd
stos
test
lock
jne
mov
xor
into
mov
movsl
lds
test
hlt
mov
stos
sub
add
sbb
repnz
ret
scas
cmp
sub
mov
addr16
add
pop
sub
in
rdmsr
fs
inc
mov
xchg
adc
int3
cmc
inc
mov
in
xchg
call
add
xchg
call
inc
add
mov
gs
mov
and
out
dec
sub
jl
add
sar
scas
or
rol
push
dec
add
iret
dec
stos
shlb
aad
outsb
fwait
or
lcall
push
in
sahf
or
xor
dec
and
mov
out
xor
push
shr
dec
shrb
xchg
testl
add
aam
ret
or
jmp
mov
xor
out
idivb
sub
xor
mov
mov
or
shll
sbb
fldl
jmp
cmp
xchg
call
jb
sbb
fcoml
lea
lds
jle
jle
dec
cmp
sbb
pusha
xchg
call
add
aas
ret
xchg
out
jmp
mov
call
sbb
push
dec
or
pop
ret
negl
and
cmp
add
in
cmc
adc
nop
push
jp
je
adc
cwtl
inc
repnz
adcl
push
test
into
pop
mov
sbb
in
sub
jge
adc
mov
add
add
pop
rolb
ret
mov
mov
call
push
jmp
and
cmp
loop
inc
pop
sti
cmc
adc
fnstsw
pushl
into
repz
xchg
xorl
jg
hlt
jg
mov
mov
add
inc
inc
add
ljmp
outsl
xchg
dec
pop
dec
std
xchg
in
cmp
mov
lret
cli
aad
sub
cmpsl
lods
idivl
mov
lds
or
lahf
jb
aaa
sti
jp
aas
mov
mov
pop
hlt
imul
cmp
repnz
jb
inc
mov
aaa
push
sub
clc
out
xor
add
clc
out
shl
repnz
daa
xchg
lret
call
xchg
cmp
addr16
dec
mov
movl
xchg
pop
call
ss
psadbw
mov
outsb
ret
lock
cld
rcr
mov
ljmp
aad
add
mov
dec
sub
clc
jns
daa
add
mov
xor
cmp
mov
ss
adc
lea
cld
fstps
inc
mov
add
lods
push
sub
mov
add
das
or
call
pop
sar
icebp
aaa
adc
mov
mov
shr
cmp
ds
pop
cld
add
fcoms
test
loope
push
xchg
mov
pushl
xor
or
divb
and
adc
call
push
mov
out
stc
lcall
add
add
loopne
div
lret
jge
mov
rolb
std
pop
pop
xchg
nop
dec
push
mov
cmp
jecxz
cmc
fdivrl
loop
aas
out
div
mov
inc
lock
push
cld
add
icebp
push
icebp
into
dec
incl
out
push
inc
or
or
and
jecxz
cmpl
loop
xor
mov
cmc
adc
add
cmp
dec
xchg
add
add
adc
data16
pop
insl
add
jbe
mov
shll
pop
or
jmp
aad
push
add
movsb
aam
loope
shll
xor
xchg
fmuls
mov
cmp
add
jmp
std
sub
add
sub
xchg
cmp
jbe
mov
inc
xchg
xor
bound
adc
adc
call
sbb
sbb
fmuls
push
sbb
test
dec
loop
cmp
lds
mov
in
mov
repnz
lret
das
mov
clc
int3
mov
cs
call
jnp
out
or
add
hlt
lcall
mov
out
sbb
push
mov
ficomps
stc
mov
insb
les
lret
stc
inc
xchg
repz
add
enter
lret
out
mov
call
jnp
mov
add
mov
xor
les
sub
mov
add
dec
push
fwait
sbb
add
xchg
out
or
jmp
push
dec
rol
mov
gs
aas
sub
movsl
out
insb
popf
sbb
mov
js
mov
push
sahf
dec
cmp
lods
inc
inc
or
cmp
push
mov
testl
add
mov
push
add
lret
add
iret
mov
cmp
jae
rcl
and
subl
jne
dec
adc
outsb
or
test
fistps
dec
lret
scas
mov
jne
dec
jne
push
lret
je
and
xchg
and
je
stos
notb
int3
fcmovnu
mov
and
add
sti
and
mov
fs
jo
fildl
lret
lret
mov
cld
inc
mov
shl
sarb
and
mov
shr
out
add
movsb
std
xchg
xchg
mov
out
xor
mov
sub
mov
and
push
jo
std
jle
mov
push
cmp
shl
sub
pand
or
cmp
std
pushl
cmp
cmp
loope
lcall
int
in
add
mov
mov
jg
mov
pop
inc
into
fistpl
aas
sbb
hlt
into
xor
scas
ss
out
idivl
lock
inc
sub
fs
out
in
inc
sub
push
mov
mov
mov
mov
neg
inc
sub
dec
ds
jbe
es
fsubl
pop
clc
inc
mov
fistps
inc
mov
rorl
shll
fildll
les
pop
mov
mov
mov
xor
adc
pop
les
icebp
rorb
lods
and
add
mov
test
outsb
add
cmpsb
dec
xchg
add
mov
rolb
sbb
jmp
mov
shrb
adc
cmp
lcall
test
les
or
lret
stc
aam
xor
add
inc
adc
jmp
xor
je
dec
pop
add
dec
jmp
sub
push
pop
insl
and
jbe
ds
add
cmp
movb
mov
push
and
mov
jmp
xor
jmp
xor
call
or
mov
icebp
jecxz
add
sbb
or
pop
lahf
test
push
fwait
pushl
mov
call
mov
fildl
rorb
xchg
mov
std
out
testl
cli
mov
aad
mov
lcall
pop
hlt
lds
cmp
sub
repz
lods
inc
cli
insl
push
std
mov
nop
jns
cmp
pop
cmp
mov
in
jns
or
jo
mov
add
je
pushf
pop
jl
jl
jns
cmc
jmp
cmpsl
cs
dec
das
xchg
sub
jmp
pushf
sbb
sub
mov
imul
daa
fists
out
jne
jnp
cltd
mov
pop
mov
shlb
sub
push
addr16
push
sahf
sbb
adc
sub
mov
sbb
add
mov
cmpsb
sbb
mov
pop
mov
pop
push
cmp
pop
mov
daa
fwait
and
daa
inc
jns
add
inc
scas
ljmp
add
call
jno
add
xor
pop
jbe
jmpw
ret
stos
mov
cmp
sahf
stc
mov
mov
vpshufd
stos
dec
dec
or
add
mov
insb
mov
adc
scas
movl
shll
in
dec
pop
lds
xchg
sbb
fwait
imul
mov
mov
test
push
mov
add
scas
stc
mov
or
xchg
cmp
decl
popf
enter
and
sbb
xor
ret
test
xorb
or
and
push
scas
jp
rcl
adc
pop
clc
dec
lcall
dec
mov
jbe
hlt
and
into
dec
sarb
hlt
and
loopne
cmp
stos
adc
or
and
mov
add
outsl
leave
add
push
push
or
mov
out
inc
mov
add
sub
mov
sahf
fs
mov
cmp
pop
cmp
adc
mov
stc
data16
js
lret
cli
mov
std
pop
or
mov
test
cmc
sub
mov
cwtl
mov
clc
loopne
mov
sub
arpl
cld
out
mov
push
cmp
aad
sub
add
add
stc
sub
test
jmp
lea
repz
sbb
outsb
cmp
jmp
out
repz
sub
inc
test
in
popf
lret
mov
call
add
mov
sbb
cld
jne
out
fdiv
inc
rolb
inc
push
sub
inc
add
mov
sub
add
and
sahf
sbb
sub
dec
stos
sbb
call
enter
sub
and
je
pop
leave
mov
aad
push
push
jns
xchg
sbb
mov
lock
je
aam
mov
out
push
push
imul
inc
inc
int
add
add
add
adc
xor
mov
ss
orps
hlt
mov
jb
movsb
repz
mov
xor
add
leave
stos
cmc
xchg
xor
adc
ja
popa
shlb
imul
mov
inc
sbb
or
push
pop
leave
mov
dec
mov
adc
rcll
mov
pop
in
xor
jne
jmp
shlb
sbb
std
mov
mov
xchg
dec
incl
push
mov
sub
pop
inc
and
and
outsl
dec
testb
adc
xlat
dec
je
rcl
inc
pop
orb
cmpsl
fsts
repnz
ret
mov
std
or
cli
and
mov
lcall
add
inc
std
cs
mov
jae
push
adc
std
jle
mov
into
xchg
adc
push
jns
lds
inc
or
mov
getsec
cli
sub
mov
pop
mov
mov
adc
xor
scas
cmp
in
lret
das
mov
fisttpl
xlat
out
sub
outsb
iret
xchg
shrl
mov
mov
inc
jmp
shll
cld
push
imul
xor
in
mov
push
xor
data16
dec
mov
aam
add
xchg
or
mov
xor
dec
sub
jns
pop
or
mov
add
out
jae
add
ret
and
std
cmp
shl
push
test
adc
jae
aam
call
loop
cmc
bound
in
adc
popf
push
inc
or
fists
mov
sub
in
imul
add
std
and
imull
mov
jne
sub
out
test
pop
inc
xor
scas
sbb
testl
cmpsb
pop
mov
incb
dec
or
sbb
dec
mov
inc
pop
dec
mov
adc
mov
sar
test
bswap
add
mov
scas
mov
push
stos
mov
sub
adc
flds
andb
or
pop
cmp
xchg
rorb
and
addl
push
test
lret
daa
fcmovu
sbb
cmp
lods
test
test
or
and
mov
dec
pop
cmp
or
hlt
repz
add
add
orb
outsb
nop
sub
test
adc
add
pop
fistpl
dec
daa
lock
jle
out
mov
pushl
or
cli
fucomp
iret
push
lret
cli
int
pop
ds
pop
lret
idiv
mov
addb
popf
jl
movsl
jg
or
jb
insb
xchg
pop
sbb
xchg
enter
or
add
lret
imul
cmp
jge
cmpsb
aaa
lahf
jg
movsl
mov
jecxz
sub
adc
dec
cmpsl
idivb
add
xchg
mov
pop
xchg
movsl
inc
jl
std
cmp
mov
iret
xor
inc
sahf
jge
pusha
add
mov
pop
mov
lret
out
negl
add
add
gs
stc
es
jmp
dec
sbb
stc
faddl
xlat
inc
jmp
jb
add
mov
cmpsb
fldenv
jge
frstor
inc
jmp
sub
add
add
add
pop
icebp
jge
mov
push
sarl
mov
stc
mov
or
xchg
add
add
gs
mov
test
test
cmp
stc
mov
ffree
cmp
roll
or
push
js
inc
xchg
js
rorl
or
sbb
sbb
out
seta
pop
mov
nop
inc
je
dec
loope
cmpsb
mov
fimuls
sbb
mov
int
mov
int3
pop
roll
add
add
jns
pop
stos
add
cmc
push
inc
xor
out
bound
mov
dec
pop
mov
mov
int
sarl
filds
ljmp
pop
or
jmp
sbb
inc
mov
xchg
inc
mov
mov
cmp
pusha
icebp
scas
dec
addb
ljmp
mov
mov
jge
mov
mov
add
mov
cli
ss
rdtsc
nop
mov
jg
mov
sbb
aaa
sar
sub
call
clc
add
ja
aam
jg
aas
push
add
ljmp
int3
jmp
les
mov
sbb
test
leave
loop
pop
mov
int
lret
movsl
decl
lods
les
add
enter
push
xor
in
sub
mov
out
mov
cmpsl
ret
or
add
les
xchg
js
or
je
out
iret
fstpt
adc
add
fdivrl
sub
int3
out
scas
fisubs
ret
sub
les
inc
add
in
movsl
stc
adc
add
outsb
sub
add
jmp
inc
inc
call
mov
das
add
sub
inc
push
daa
cltd
xor
or
push
movsl
stc
shrl
adc
jmp
sahf
ret
leave
cs
call
inc
movsl
push
aas
insb
sti
push
aaa
sub
test
movsl
fucomi
pop
popf
mov
jge
lcall
sub
sub
ret
sbb
xchg
xchg
and
sbb
testb
test
mov
test
jecxz
dec
mov
dec
mov
test
mov
add
adc
mov
push
inc
pushf
shlb
mov
push
inc
movsb
shlb
mov
pop
jle
inc
ja
mov
jge
inc
fstpt
inc
mov
jle
inc
mov
fiaddl
jne
fiaddl
jne
test
mov
test
xor
int
repz
lods
subb
mov
lds
mov
adc
sbb
add
sub
std
pushl
or
add
pop
jne
add
cmc
aas
xchg
cmp
xchg
ljmp
cli
dec
cs
mov
add
cwtl
mov
pop
mov
in
std
pushl
int3
int3
ja
sahf
sbb
call
inc
lods
mov
int
pusha
fsubrl
or
lahf
sub
jmp
jmp
ret
stos
add
call
stc
mov
mov
add
add
fdivr
dec
mov
out
inc
and
mov
mov
pop
jae
shl
inc
movsl
mov
push
xor
sub
les
jae
ret
lret
movsl
pop
mov
pop
xor
mov
ljmp
into
mov
jb
push
push
icebp
sub
sbb
xchg
movb
mov
movsb
stc
add
add
add
testl
es
add
mov
and
pop
sub
adc
jl
mov
arpl
mov
push
jb
push
in
pop
push
jl
mov
push
push
in
je
fstl
adc
dec
mov
push
jb
dec
push
stc
mov
movsb
mov
mov
movsb
aaa
mov
push
jb
or
lea
jmp
outsl
or
xor
sti
sbb
loope
insb
sbb
mov
mov
add
adc
add
fxch
xchg
sbb
incl
pop
add
cltd
rcrb
and
push
or
es
dec
push
pop
mov
rorl
daa
pop
pop
cld
subl
je
sbb
add
in
push
sbb
add
sub
sbb
repz
mov
adc
imul
sbb
and
sub
outsb
scas
mov
ds
leave
test
ds
jp
sub
sbb
pop
sub
adc
out
aaa
jl
std
xchg
pushf
add
fptan
idiv
shl
mov
add
movsl
jl
mov
outsl
cli
insl
cs
test
rolb
cmp
mov
add
pinsrw
shlb
sub
hlt
arpl
mov
rorb
out
inc
cmpsl
pop
shll
mov
pusha
inc
shll
into
inc
inc
jge
jo
xchg
mov
addr16
iret
mov
mov
ss
into
add
adc
add
and
imul
inc
mov
xchg
shlb
cwtl
inc
incl
stc
out
sti
js
lock
mov
jl
jo
xchg
mov
xchg
mov
sbb
jno
jg
push
ret
jb
push
lock
mov
jb
shll
cs
punpckldq
mov
pushf
adcb
mov
clc
repnz
lahf
fldl
ss
push
inc
fnstsw
std
call
in
cwtl
add
cs
in
orb
sahf
and
stc
jge
mov
imul
xchg
cli
out
push
clc
fs
xchg
call
add
pop
test
lahf
lret
mov
ret
inc
sbb
rclb
pop
loop
push
add
lcall
push
mov
jecxz
add
int
push
addb
jnp
imulb
xchg
pop
mov
shr
lret
int3
or
push
mov
call
std
subb
push
adc
addl
pushf
xor
push
xchg
out
inc
int3
add
mov
or
mov
cli
mov
add
xor
aam
jbe
sub
in
test
shll
sti
sub
scas
push
std
sub
add
or
and
xchg
mov
push
push
mov
jae
jle
icebp
mov
mov
std
pushl
gs
sub
mov
in
js
pop
lret
icebp
push
cmp
testb
mov
or
pop
jne
insl
pop
inc
cmp
mov
test
add
iret
out
sub
outsb
lds
pavgb
ret
data16
lret
outsb
lds
mov
stos
adc
test
adcb
xor
call
aad
xor
aas
loope
xchg
sub
push
and
and
pop
out
lret
out
movsl
sbb
xchg
jle
fistl
mov
setb
mov
lods
push
iret
xchg
jge
jecxz
call
stos
pop
aaa
cmpsb
jne
sbb
mov
add
push
ds
inc
dec
outsl
xchg
call
add
inc
insb
or
pop
xchg
adcl
push
mov
add
ds
dec
mov
cmp
test
or
push
out
scas
outsl
clc
push
add
or
mov
push
jae
xchg
mov
inc
pop
push
fcos
mov
ljmp
iret
loope
dec
sbb
add
xchg
bound
xchg
divb
cmp
js
lret
iret
xchg
xchg
outsb
adc
xor
leave
add
repnz
loope
pusha
xlat
loope
dec
and
mov
and
shrb
sub
iret
add
clc
jp
icebp
fs
cmc
subl
jmp
gs
cmp
xchg
xchg
mov
cmpsb
jge
jp
add
movsl
push
and
xchg
jo
cs
pushl
ret
cli
stos
andb
jns
and
out
das
addr16
das
dec
jmp
mov
sbb
cli
or
jg
cmc
in
out
hlt
add
jge
push
jl
jns
int3
aam
out
and
cli
sub
in
lret
add
aaa
shll
or
shrl
stc
pop
imul
add
jge
das
or
shll
or
aam
mov
inc
test
and
jne
mov
mov
ljmp
cmpsl
jg
sbb
jp
cmpsb
hlt
jle
sbb
jl
mov
mov
pop
icebp
mov
jl
mov
mov
outsb
je
lcall
mov
xor
das
smsw
mov
dec
rcrb
nop
sub
jecxz
sub
test
lret
stc
sbb
hlt
mov
loope
add
sarl
call
sti
leave
call
inc
je
add
cmpsl
fwait
call
add
mov
add
sbb
mov
ret
into
add
pop
lea
jge
rolb
adc
lds
mov
mov
add
xchg
jp
lahf
jge
popf
les
testl
cltd
imul
adc
and
inc
add
push
mov
push
sahf
orl
add
scas
pop
ret
adc
dec
icebp
pop
jg
pop
cmp
int
data16
adc
and
outsb
xor
add
addb
int
shrb
outsb
test
setb
ljmp
push
ret
jle
lahf
push
sti
popa
jnp
pushl
and
add
add
popa
jae
shll
mov
adc
jae
dec
adc
adc
nop
mov
or
ljmp
mov
movsb
xlat
call
adc
add
mulb
std
jae
sarb
enter
rolb
mov
cmp
lret
jmp
xchg
leave
loop
call
add
and
xor
add
mov
out
aad
lods
dec
bswap
mov
cmpsb
sub
ret
test
sti
cld
xchg
subb
rolb
adc
pop
mov
dec
popf
cmp
movsb
pop
lea
gs
fdivrs
stos
fs
dec
xchg
lock
inc
mov
mov
outsb
cmp
or
add
outsb
cmpsl
add
cmpsl
in
push
in
int
add
mov
dec
stc
aad
inc
mov
inc
pop
fldenv
stc
stc
fwait
movsl
or
mov
cli
mov
lods
adc
add
pop
stc
push
or
fstl
cwtl
pop
stc
idiv
jmp
add
mov
imul
mov
je
stc
xor
fst
bound
enter
cmpsb
xchg
jae
jns
pop
xchg
mov
adc
call
jl
jne
push
or
dec
popf
or
adc
sbb
rorb
jl
orl
shrb
or
leave
leave
mov
dec
mov
mov
dec
xchg
sub
add
pop
sub
push
ret
jns
jl
sub
out
addb
mov
imul
xchg
cmp
mov
push
mov
mov
mov
xchg
sub
and
fldt
repnz
add
mov
sbb
inc
cltd
lods
mov
insb
pusha
add
pop
out
nop
cmp
add
jb
in
cli
in
lcall
cmp
pop
pop
fsub
or
sub
and
xor
pop
leave
push
and
mov
scas
mov
std
inc
mov
push
cmp
lret
sbb
xor
faddl
repz
push
mov
and
or
cmp
mov
out
add
push
inc
bound
xlat
mov
test
testb
enter
addr16
sub
sub
push
adc
mov
test
xchg
push
jb
push
and
cmc
iret
jmp
in
add
and
mov
aad
pop
push
push
push
sub
dec
subb
test
lret
add
push
jmp
add
push
add
mov
jnp
sub
insb
stos
out
xchg
out
mov
or
icebp
mov
outsl
sbb
mov
and
roll
std
push
ds
orb
jp
shll
jb
movsb
adc
xor
ds
clc
or
xor
fidivs
xchg
xor
insb
add
std
push
add
xchg
or
dec
push
add
xchg
nop
test
aas
jmp
iret
dec
add
xor
aaa
jmp
add
fldcw
ror
andl
dec
cld
push
loopne
call
mov
add
jne
sbb
into
call
mov
dec
fcomps
jb
add
xchg
xor
mov
sub
adc
push
pop
jne
das
mov
push
push
notb
rcrb
jne
push
out
je
push
push
loopne
in
dec
out
or
sub
adc
or
push
cmp
or
cli
adc
xor
push
cwtl
jb
je
ljmp
xchg
mov
push
mov
dec
bound
lds
mov
add
in
xor
push
not
shlb
cs
sti
xlat
shll
das
pop
cli
cmp
les
jle
jb,pn
lret
lret
out
iret
out
fsubrl
call
mov
dec
inc
pusha
sub
xchg
pop
mov
xchg
adc
mov
add
push
mov
add
sub
lahf
subb
faddl
icebp
sbb
sub
jo
jmp
push
jmp
repz
jo
xchg
push
xchg
arpl
fs
and
daa
push
dec
daa
add
and
mov
xor
nop
push
add
lret
stos
dec
dec
mov
dec
dec
push
mov
gs
rolb
add
add
inc
test
dec
movsl
ja
rclb
lret
out
test
in
xchg
sbb
test
out
mov
scas
dec
dec
sbb
scas
lret
add
dec
push
mov
adc
insb
test
pusha
gs
test
sub
je
cmp
das
bound
std
push
sub
fldl
add
je
add
xorl
pop
add
push
dec
rolb
jp
push
repz
mov
rclb
imul
hlt
in
lcall
add
sbb
sub
test
sahf
or
not
dec
inc
imul
pop
mov
pop
mov
sbb
ds
mov
fucomi
push
add
test
incl
push
push
and
cmc
adc
mov
dec
jle
je
daa
cmp
inc
sbb
std
jle
hlt
or
mov
cli
cmpsl
or
aas
mov
shlb
loop
adc
cmpsl
mov
push
jg
shlb
ret
push
xchg
lret
scas
xchg
fcoml
mov
mov
pop
add
xor
pop
icebp
inc
jmp
dec
jb
lss
std
test
or
cmpsl
fisttpll
jno
aad
dec
sbb
mov
ds
mov
outsb
stos
and
rcll
sbb
cmc
in
dec
icebp
rolb
pusha
push
pushf
imul
or
rclb
movsb
testb
inc
mov
add
and
iret
das
or
xlat
mov
je
xor
lea
xchg
imull
popl
int3
mov
mov
scas
jecxz
xor
xchg
pop
and
data16
xlat
mov
jno
test
jne
jmpw
mov
insl
mov
xchg
or
and
jno
test
gs
mov
callw
add
add
adc
push
xchg
cmpsl
push
sbb
mov
push
pop
and
movsl
adc
fnstenv
xlat
test
add
rorl
add
mov
stc
mov
cli
andb
imul
add
inc
push
ret
cmp
into
jae
mov
add
add
mov
push
icebp
mull
pop
gs
bswap
call
mov
into
push
jne
cltd
pop
pop
ret
into
sbb
or
ret
sbb
out
or
call
cmp
cwtl
in
ljmp
inc
or
mov
adc
and
add
adc
inc
fildl
lock
fsqrt
jno
pop
lea
add
xchg
jb
icebp
jae
lret
jmp
inc
mov
adc
lcall
je
movsb
cmp
imul
pop
gs
jb
addr16
jae
ljmp
lock
cld
xor
mov
cmp
mov
xchg
call
push
out
cmp
das
xor
or
xor
add
ljmp
repz
test
int3
out
mov
sbb
dec
pop
call
add
lret
testb
rorl
dec
push
in
test
sbb
inc
mulps
mov
insl
repnz
and
out
mov
inc
cmpsl
rcrb
adc
push
or
sub
outsl
dec
add
inc
cmpsl
iret
rolb
mov
sbbl
fisubl
add
mov
or
jmp
pop
addb
add
or
inc
xchg
gs
int
add
sub
aad
jg
call
lods
lret
add
cmp
mov
or
jg
lcall
add
add
dec
push
test
mov
ret
fildl
insl
and
add
add
out
sub
jecxz
add
xor
lret
test
fcmovne
add
mov
dec
xchg
push
stos
sub
icebp
adc
lret
add
ficompl
pop
cmp
icebp
adc
fisubrs
leave
add
inc
inc
cmpsl
inc
inc
aam
lods
outsb
push
lret
rcll
idiv
mov
dec
lods
mov
rcl
sub
xor
pop
idivl
into
std
sar
cld
push
sbbb
xchg
je
adcl
inc
or
enter
push
dec
insl
movsl
adc
sub
mov
stos
gs
out
pop
je
pushl
out
jp
xlat
hlt
push
dec
add
cmpsb
pop
stc
mov
std
jle
sbb
adc
cmpb
movsl
aas
and
sub
xchg
inc
push
mov
stos
push
cli
test
cli
cmpsl
xor
aas
mov
cmp
push
mov
gs
je
xchg
lcall
aad
test
jmp
dec
mov
xor
mov
add
outsb
sub
pop
dec
mov
dec
out
sub
fs
fsubrs
loopnew
lret
fs
mov
lret
push
push
jbe,pn
repz
xorl
mov
and
les
sbbb
sub
loopnew
lret
mov
sub
cmpsl
add
push
pop
push
in
flds
call
dec
add
jl
inc
test
in
add
lret
pop
inc
or
inc
cmpsl
add
rolb
call
fcmovu
push
adc
in
cld
icebp
jnp
mov
orb
sub
inc
repnz
mov
push
shll
jnp
cld
add
enter
jnp
mov
cmp
gs
jp
jmp
add
and
insb
xchg
jne
test
mov
movsl
jmp
loopne
dec
stc
jno
sahf
pop
push
invlpg
push
out
and
xchg
sti
pop
repz
push
stc
ret
sbb
decl
xorl
fistl
inc
push
push
jp
insb
iret
call
test
sahf
mov
fwait
das
sbb
negb
mov
push
repz
movsb
cli
lcall
dec
push
mov
je
bswap
mov
call
lahf
cmp
add
ret
inc
dec
cli
and
cmp
jno
dec
cmovno
mov
cmp
xchg
repnz
add
repnz
add
dec
stos
mov
outsl
cmc
dec
fnstcw
aaa
pop
idivl
fs
mov
dec
dec
cli
movsl
or
popf
adc
mov
sbb
mov
push
cli
jecxz
mov
ret
loop
std
out
or
pushl
orb
bound
sub
jecxz
loopne
lret
lret
rcr
daa
add
jl
push
and
daa
add
inc
out
mov
lock
fiadds
repnz
lret
push
xor
and
xor
or
jae
sbbl
aas
hlt
movsb
js
xorb
cmp
sti
xor
xchg
mov
mov
pusha
dec
add
and
and
lret
pushf
jp
dec
dec
or
jecxz
add
call
je
pusha
push
sbb
add
sbb
xor
pop
jae
scas
js
test
daa
sbb
jnp
adc
jle
adc
jne
sub
mov
lret
dec
mov
jns
xor
mov
pop
icebp
stc
add
add
add
dec
cmp
mov
test
push
out
insb
lods
mov
mov
pop
or
add
ljmp
scas
xor
fimuls
cmp
insb
xlat
iret
and
or
dec
push
dec
roll
xchg
std
mov
mov
sbb
inc
lret
rorl
jl
cmp
sbb
incl
and
mov
call
repz
and
xchg
and
lret
add
dec
inc
mov
incl
repz
and
xchg
and
xchg
clc
push
int
mov
cs
adc
fs
xor
int3
mov
mov
roll
stc
shll
xlat
cmpsl
pop
add
mov
xlat
push
xchg
adc
adc
jno
jmp
cmp
mov
fisubrs
pushl
xchg
lods
mov
enter
inc
inc
into
jp
add
xchg
mov
or
push
and
paddd
mov
pavgw
sbb
rcr
cmpsl
add
fsubr
add
push
lret
dec
cmp
in
mov
adc
out
mov
popa
cwtl
shll
add
or
cmpb
lret
inc
in
je
pop
mov
lret
pop
adcb
sbb
dec
stos
clc
cs
ret
addr16
out
mov
out
lcall
pop
lret
add
lret
dec
pop
jnp
add
sti
or
int
adc
or
adc
mov
push
lds
lret
xchg
js
stc
pop
jb
sbb
or
push
insb
movsl
test
jmp
mov
sbbb
inc
je
cmpsb
inc
dec
or
shlb
inc
out
add
pop
fs
inc
push
int
inc
dec
lds
lret
test
xchg
frstpm(287
ljmp
add
add
jne
lock
je
popa
sbb
dec
and
and
xlat
push
push
shll
arpl
dec
iret
add
push
mov
call
repnz
push
jmp
sti
mov
stos
sbb
repz
pop
in
cmp
push
popa
leave
mov
push
call
mov
adc
inc
pushf
sbb
and
aas
arpl
cmovs
inc
add
and
and
pop
sbb
add
push
add
int3
test
add
mov
scas
push
sub
cmp
insb
cmpl
cmp
out
xchg
mov
outsl
mulb
mov
mov
es
std
stc
xor
bound
add
lahf
cltd
test
icebp
into
jnp
xor
jb
cli
and
test
lods
mov
pop
std
lcall
insb
cmpl
pop
mov
lock
das
filds
mov
lods
xchg
xchg
sub
inc
mov
in
mov
daa
iret
aad
je
mov
mov
inc
pop
jbe
je
dec
push
jno
inc
loope
pop
lock
cmova
dec
jno
add
cli
pop
aas
mov
es
xor
push
add
inc
iret
inc
sbb
scas
xor
outsb
dec
jne
addl
lret
jo
ja
call
inc
ss
lahf
inc
fdivs
jnp
inc
lcall
mov
call
cmp
clc
outsl
cmc
jne
add
xor
inc
jp
in
dec
rcl
mov
add
add
outsb
sub
enter
cmpb
pop
push
mov
fdivr
call
push
lods
xor
jne
and
xor
mov
inc
or
test
xor
fsubp
adc
addr16
insb
jne
add
stos
repnz
add
out
cmp
movl
cmp
sarb
adc
test
insl
fidivl
incb
and
adc
mov
loope
cmp
testl
hlt
inc
and
adc
cmp
jle
mov
mov
loope
out
imul
and
inc
and
adc
mulb
xchg
stc
dec
add
pop
push
fwait
jns
fcomip
mov
xorl
add
mov
jl
aas
mov
and
in
sub
sub
test
sub
sbb
push
cs
out
loope
sbb
and
pushl
loope
out
fs
or
test
pushl
fs
fbld
ss
pushl
fs
xor
or
inc
mov
sub
int3
iret
inc
mov
outsb
cmp
cmpsb
outsb
inc
fsubs
adc
inc
hlt
out
pop
call
fs
or
fwait
jbe
cmpsl
out
pop
and
push
inc
push
in
mov
mov
mov
les
lret
jg
icebp
lret
mov
mov
test
fimull
dec
fcmovnu
pop
call
lods
iret
mov
mov
pop
pop
cmp
les
dec
inc
or
inc
decl
out
idivl
sbb
cli
insb
xchg
jno
or
mov
xor
sub
add
movsl
in
pusha
loope
inc
cmp
add
test
mov
in
movsl
mov
test
das
call
insl
std
clc
sub
and
sbb
jp
loope
push
insb
stc
jb
rolb
lret
inc
lret
jmp
pop
inc
das
mov
push
jno
add
mov
add
xchg
sub
pushf
add
inc
add
xchg
dec
push
mov
xor
or
test
xor
push
and
cmc
mov
addl
inc
mov
hlt
out
notl
mov
int3
testb
jle
orb
aaa
dec
movsb
or
adc
add
jns
clc
and
pop
lea
xor
pop
roll
mov
xor
les
adc
xchg
cli
test
xor
adc
add
fs
inc
push
jmp
stos
pop
cmp
icebp
lods
loope
mov
mov
cmp
xchg
cld
pshufw
inc
mov
jne
inc
jae
mov
cli
mov
fisttpll
mov
call
jnp
je
sahf
in
mov
push
out
je
je
in
enter
ds
adc
push
inc
push
jae
inc
or
inc
inc
iret
out
xor
data16
adc
add
jns
dec
int
fisttps
aad
xor
aad
popl
push
sbb
aad
jne
mov
push
jecxz
and
daa
add
lret
je
cmp
imul
js
imul
cmp
in
mov
jne
jae
or
das
int3
outsl
insl
mov
roll
mov
stos
out
cld
add
push
or
ljmp
rcr
sti
sub
je
cmp
and
add
or
cmc
xchg
test
lds
jno
stc
insb
subb
sbb
stc
push
cmpsb
push
je
scas
push
jl
mov
aas
mov
add
sub
inc
xor
stc
sub
or
data16
jmp
and
and
mov
loopew
and
testb
xor
insb
iret
cmc
adc
nop
pushf
test
fmull
add
int3
cmc
adc
add
loopne
dec
and
push
or
pusha
adc
lcall
lret
lret
call
test
pop
incb
mov
stc
lcall
movsl
jge
ss
mov
mov
cli
mov
xor
pop
lret
add
nop
adcl
cmpsl
adc
test
add
ljmp
inc
into
enter
add
inc
mov
cmp
out
popa
cmp
std
mov
jnp
jne
icebp
mov
mov
mov
mov
dec
je
pushl
mov
sbb
rorl
add
out
sahf
cmp
aaa
cmp
pop
loop
inc
dec
or
adc
cmpl
add
xchg
cli
mov
lret
mov
sahf
jmp
ret
cmp
popa
add
andb
scas
or
sub
testl
sbb
jp
lahf
jo
aad
mov
call
in
mov
xchg
push
lret
imul
out
fnstsw
inc
push
clc
add
popf
xor
movsbl
mov
scas
pop
cmp
jne
es
jae
mov
add
test
stc
jmp
std
scas
stc
fisubrs
fdivrs
gs
jle
sbb
loope
pop
arpl
pop
cmp
lret
mov
sub
mov
mov
in
sahf
fsincos
mov
xor
add
mov
xor
mov
pusha
jno
aas
and
scas
jae
add
popa
mov
pop
add
mov
popa
sti
fsubs
lods
insl
mov
mov
mov
mov
push
xor
mov
mov
xor
add
cmp
test
sbb
xchg
jnp
fs
dec
inc
icebp
scas
mov
adc
mov
add
add
js
push
hlt
mov
subl
xchg
decl
jne
jle
adc
mov
pop
mov
and
push
adc
dec
jne
mov
xorl
out
sbb
jl
test
push
push
mov
and
aaa
add
nop
push
jne
in
or
loop
std
ljmp
stos
and
test
push
pop
fs
fildl
sub
int
test
cs
stos
sub
loopne
aaa
xor
mov
add
push
pop
adc
addb
lods
jg
adc
je
cli
aam
inc
mov
push
test
aam
and
jns
sbb
add
cmpsl
leave
test
sbb
scas
mov
shrl
pop
dec
shll
mov
out
in
test
outsb
pop
jae
addr16
aam
mov
rcll
cmp
jmp
mov
lret
mov
call
lahf
add
cli
inc
cmpsl
or
cltd
decb
and
mov
cmc
ja
ljmp
jnp
cli
outsb
fidivs
int
lret
xchg
leave
mov
dec
stos
dec
sarb
xlat
lods
aas
push
jmp
insl
push
pop
data16
hlt
insl
mov
dec
bound
clc
jge
mov
aad
sbb
std
cmpsl
cmp
inc
or
mov
sub
add
cmp
int3
and
loopew
pop
pop
inc
pushf
test
sbb
rclb
mov
stc
cld
std
mov
or
and
and
push
or
enter
adc
divb
notb
fmuls
push
test
test
paddq
mov
mov
add
adcb
iret
add
mov
push
mov
cmpsl
addb
inc
push
ds
mov
stc
iret
mov
std
incl
insb
addb
or
movaps
cvttps2pi
outsb
add
mov
or
lret
movsl
rclb
pop
std
dec
sub
leave
xchg
js
test
and
or
test
mov
jb
enter
add
faddp
sub
sub
xor
cmp
je
je
xchg
mov
cli
ss
push
sub
xor
mov
or
je
je
into
cmp
sub
lock
xor
sbb
out
int
pop
add
insl
inc
pop
std
cmp
test
pop
rcl
push
iret
add
outsb
mov
fwait
sbb
add
mov
fs
sarl
test
mov
pushf
test
xchg
rclb
dec
jg
cmp
mov
xor
cmpsl
rol
adc
mov
add
testb
test
mov
jb
inc
fistpl
inc
popa
lret
push
pop
sldt
add
add
inc
mov
stos
lods
lret
push
loopne
jp
mov
or
into
inc
jmp
xor
xor
jmp
test
jg
push
shr
ret
inc
jmp
mov
neg
ficoml
cmp
mov
dec
pop
adcl
or
inc
jmp
xchg
mov
add
add
jp
test
iret
insb
add
mov
mov
ja
jne
cltd
xor
mov
iret
test
and
push
mov
divb
adc
js
fcmovnb
xor
frstor
mov
add
or
mov
cwtl
addl
push
enter
pop
sub
dec
enter
cmp
test
xlat
fidivrs
cmp
xchg
xchg
dec
adc
loope
movsb
cwtl
negb
mov
sub
add
sbb
shll
inc
test
and
cli
scas
jb
lcall
jne
jmp
push
cs
mov
pushf
cli
out
sti
mov
mov
or
jb
stc
sbb
les
das
stos
fs
push
push
and
sti
cmpsl
inc
pop
inc
mov
inc
or
and
cli
dec
push
repnz
sbb
jle
shrb
xchg
or
out
lret
or
mov
jecxz
xchg
sbb
in
mov
sbb
dec
insb
rol
pop
mov
mov
xor
cmpsl
cs
lret
out
add
testl
sbb
lret
dec
mov
inc
sbb
xor
aas
daa
sarb
mov
fwait
jge
mov
add
lock
add
adc
sub
mov
xor
jmp
ret
adc
leave
add
int3
add
push
pop
aaa
pop
pop
aam
jb
sub
jmp
cmp
sub
leave
inc
jmp
cmp
add
push
mov
add
add
jne
test
inc
jge
mov
or
cld
cmp
fsub
jmp
mov
jge
xchg
push
or
pop
stc
jmp
mov
jmpw
sub
pop
cli
cld
pop
movl
add
push
cwtl
add
int
push
aaa
stc
imul
scas
notb
push
or
or
xorl
push
stos
xor
add
push
mov
cwtl
idiv
cmp
dec
xchg
idiv
sub
inc
imul
loop
cmp
ret
add
loope
push
test
mov
test
sub
mov
mov
dec
push
stc
incl
std
jae
aad
fadd
cltd
loope
sbb
add
andb
je
rclb
pop
movsb
and
jle
insl
outsb
add
mov
sub
pop
subb
push
push
mov
std
andl
xor
arpl
mov
mov
out
mov
mov
stc
repz
push
push
and
fistpl
xchg
pop
iret
and
inc
mov
hlt
inc
mov
xchg
adc
xchg
mov
lods
movsb
arpl
jecxz
pop
push
int3
push
and
imul
arpl
jae
push
add
mov
xchg
xchg
sub
sbbb
sub
jl
mov
out
hlt
les
cli
mov
push
out
inc
mov
add
pop
mov
rcrl
xchg
mov
out
mov
jo
dec
aaa
cli
xor
cmp
inc
cmp
sahf
inc
cmp
in
repnz
jnp
arpl
xlat
mov
mov
cmp
lahf
and
add
imulb
pop
jnp
loopne
pop
imul
add
lret
mov
sub
repnz
add
add
stc
sub
xchg
sub
mov
shlb
jbe
pop
cmp
sub
in
add
jmp
aad
mov
in
mov
ret
push
mov
int
push
arpl
inc
in
mov
mov
add
jns
scas
ret
add
jg
push
cmp
add
or
jge
dec
leave
mov
sbb
add
mov
jl
insb
notb
mov
lea
and
add
pop
rclb
xor
inc
fdivrp
or
aad
mov
or
ror
add
jo
inc
fwait
xlat
cmp
jne
roll
pop
mov
sti
aam
sub
add
adc
notb
jnp
in
sub
push
xor
inc
push
lret
aas
mov
std
mov
mov
sbb
bound
je
inc
mov
inc
cmpb
mov
repnz
dec
mov
add
xchg
cmp
das
cmpsb
loopne
idivl
push
sbb
push
add
call
std
jmp
scas
cmp
jge
es
je
pushl
int3
daa
cli
xor
pop
sub
fcmovnu
mov
arpl
sub
rol
scas
xchg
stos
sub
repnz
sbb
mov
jmp
ret
add
cmpsl
sub
mov
sbb
int
add
cmp
add
fidivrs
mov
adc
sub
mov
jg
lret
out
mov
lret
imull
mov
repz
roll
scas
dec
lock
jg
in
push
stc
fs
insb
mov
scas
adc
add
sbb
jne
fisttpl
fs
ds
sbb
add
arpl
cmp
push
test
inc
scas
push
bound
arpl
xchg
push
test
sarb
stc
insb
add
push
loop
lret
test
lret
subb
push
add
xchg
or
subl
js
push
and
clc
mov
dec
jbe
pop
push
stc
ljmp
add
pop
int
xor
add
or
pusha
push
pop
int
adc
inc
push
push
mov
dec
lea
lea
call
mov
jp
aas
cmp
adc
push
test
inc
xchg
ja
dec
scas
repz
int3
addl
lret
movl
lea
mov
ja
push
std
incl
loop
jle
push
js
andl
add
std
jmp
xchg
dec
mov
arpl
incl
std
dec
das
loopne
add
std
test
pop
sbb
std
gs
mov
sub
push
adc
xor
jns
mov
std
mov
cmp
add
std
lcall
dec
fs
test
jl
mov
pushl
inc
arpl
addr16
add
fwait
cmpsl
shl
dec
cld
sub
dec
daa
movsl
vmovupd
test
clc
jle
call
repnz
in
mul
inc
imul
int3
out
sub
std
or
dec
lret
inc
mov
out
es
out
add
dec
xchg
decb
clc
sbb
add
test
add
cmp
imul
movl
cmc
xchg
dec
stc
subl
inc
sti
out
lret
xchg
ret
add
loope
in
bound
add
adc
sahf
or
mov
push
push
add
inc
xchg
inc
shll
pop
popf
into
sahf
jp
jge
or
imul
out
ss
push
aaa
sub
pop
add
fidivs
lea
push
outsb
or
std
orb
push
push
movzbl
mov
pop
stos
std
orb
push
push
setbe
mov
sbb
add
add
stc
jp
pop
mov
data16
sahf
push
pop
dec
jns
dec
aam
pop
xchg
mov
stc
imul
aam
xorl
jg
mov
jle
adc
dec
scas
divb
test
push
xchg
add
sbb
pop
call
and
add
mov
fstp
incl
inc
sbb
push
repnz
lcall
and
mov
or
cli
inc
adc
dec
daa
out
cld
sub
lret
mov
inc
jae
cmp
add
sahf
repz
mov
out
push
push
out
push
pop
or
je
push
add
int
and
inc
cmpsl
cwtl
cwtl
inc
ret
dec
mov
hlt
ror
out
lahf
clc
ret
xchg
dec
cmpsb
sub
dec
xchg
and
or
inc
int
ret
movsl
or
mov
outsb
sbb
push
in
imul
out
loope
out
mov
out
fldt
pop
jnp
and
or
xchg
xlat
es
out
outsb
mov
jecxz
xchg
add
out
push
adc
pop
stos
out
push
add
cltd
jb
out
sbb
out
adc
jge
loop
xchg
inc
mov
fidivrs
test
xor
mov
push
jb
push
lret
ss
mov
mov
mov
and
sbb
rolb
and
test
sahf
mov
mov
add
jae
push
push
fidivrl
inc
popa
fwait
dec
xchg
pop
push
inc
and
popf
dec
mov
add
into
xorl
push
push
or
cli
dec
orl
cmc
faddl
lret
int
fsub
into
jns
insb
push
bnd
popa
out
ret
mov
or
add
jl
cltd
bound
inc
xor
dec
jae
push
inc
jg
jmp
jg
data16
dec
jne
sbb
adc
dec
repz
int
jae
push
mov
mov
dec
repz
jp
iret
into
jae
mov
jmp
cmp
inc
movsl
add
dec
repz
repnz
test
fimull
cli
lds
dec
cli
push
lock
add
std
push
cmp
jge
scas
loopne
inc
xchg
add
mov
loopne
mov
iret
sti
insl
pop
mov
repnz
push
stos
sbb
imull
mov
out
xchg
sub
mov
std
out
mov
cli
xor
or
cmp
repz
lret
out
xchg
inc
imul
or
out
add
repnz
xchg
fbld
fdivs
clc
popa
add
add
test
inc
call
mov
out
jo
or
lret
cmp
cltd
popf
rcrl
enter
stos
ja
push
mov
int
add
lcall
in
cmpsl
add
or
jmp
fisttpl
test
inc
mov
sub
add
add
pop
add
jecxz
jae
repz
lods
mov
pop
add
popf
sub
inc
push
lcall
adc
jecxz
push
fisubrs
jmp
bound
inc
sub
xor
gs
inc
jmp
cmp
jae
sub
and
add
stc
mov
stc
jbe
xorl
add
add
repnz
cmpsb
mov
push
dec
arpl
add
cmp
mov
sbb
adc
xchg
loope
xchg
call
adc
or
stc
mov
mov
sbb
cmc
adc
mov
mov
je
roll
add
xchg
jge
add
mov
sbb
dec
dec
xlat
sub
iret
mov
xchg
or
lcall
inc
divb
or
mov
xor
sbb
scas
xor
cli
bound
enter
xchg
repz
mov
pop
in
loope
sub
cli
sbbb
enter
xchg
add
mov
cli
lock
xchg
mov
lods
loop
jnp,pn
inc
or
xchg
jno
xchg
push
add
call
mov
xor
repnz
std
mov
pop
movsb
lret
cmpsl
add
adc
add
lret
gs
mov
push
jecxz
cmove
add
jbe
addr16
pop
ret
mov
mov
rorl
movsb
iret
adc
add
lea
inc
les
scas
push
out
lret
stos
shl
mov
shrb
das
out
mov
mov
cs
mov
xchg
mov
sub
mov
sub
dec
stc
data16
pop
sub
push
dec
shrb
lds
cmp
in
dec
aas
push
jne
aas
into
aaa
adc
imul
orl
push
repz
jne
jge
mov
inc
push
stos
cmpsb
lret
mov
test
je
add
cmp
popf
mov
push
jb
shl
daa
xchg
push
lcall
inc
jno
dec
fcoml
mov
jno
data16
jecxz
or
xor
clc
insb
push
std
xor
lock
testl
xchg
daa
inc
jp
not
cmc
orl
decl
jle
push
dec
call
mov
push
mov
js
adc
jo
in
jp
mov
jge
xor
insb
xor
lret
movl
dec
adcl
add
addl
mov
std
push
sub
jmp
cmpsl
mov
gs
std
cli
andl
test
pop
stc
sub
xchg
mov
or
scas
mov
std
cli
jle
add
rorl
and
ret
cli
mov
cmp
push
repnz
movb
ds
dec
movsl
decl
sti
daa
cmp
xor
xor
dec
js
cmpsl
pop
out
adc
filds
add
aaa
xor
call
mov
ret
cmp
frstor
shlb
call
add
jmp
rorb
out
mov
imul
mov
movsb
dec
loopne
xchg
orb
daa
add
aad
icebp
jne
insb
inc
and
aas
pop
push
mov
mov
flds
mov
inc
jmp
arpl
clc
dec
out
sbb
ja
sarb
aad
jbe
mov
add
add
inc
repnz
loope
inc
jmp
cld
lea
lcall
cltd
jns
mov
subl
mov
pusha
or
test
xor
inc
jmp
ret
incb
inc
push
fiadds
sahf
cmpsb
test
outsb
ds
add
or
mov
aad
add
push
jle
or
stos
sbb
lret
sub
inc
cmp
aam
sbb
ljmp
rcl
sbb
mov
and
dec
push
mov
add
adc
idivb
pop
pop
push
xchg
push
sub
call
dec
xchg
mov
sbb
add
add
jae
pop
mov
add
call
or
or
clc
or
pop
mov
notl
cli
ljmp
adc
xor
jg
inc
std
jae
loope
inc
dec
jecxz
je
mov
jle
pop
mov
mull
sub
cmp
in
xchg
cmpsl
adc
jbe
lods
cli
lahf
cs
mov
out
aas
mov
cmp
add
and
adc
mov
add
pop
mov
es
add
mov
add
lret
mov
xchg
pop
adc
call
ret
xchg
dec
mov
rorl
xchg
in
out
mov
out
mov
xor
pop
cmp
mov
fwait
pop
mov
dec
mov
dec
lret
add
inc
daa
cwtl
mov
jle
adc
jnp
push
mov
movsb
prefetch
adc
clc
daa
mov
adc
and
xchg
repnz
ror
mov
and
clc
mov
mov
or
pop
push
leave
shll
stc
sub
mov
pop
xlat
jno
insl
notb
sar
adc
dec
inc
int
popa
mov
mov
push
movl
jbe
mov
jnp
in
xor
adc
cmp
mov
and
add
fisttps
push
stos
xchg
push
fs
out
or
es
leave
add
test
dec
fmuls
incl
divb
fnsave
adc
adc
test
adc
add
pop
ret
dec
mov
jns
mov
dec
pushl
or
je
adc
inc
out
rcl
push
ret
cmpsb
mov
jp
iret
fmull
hlt
push
jns
sbb
bound
icebp
into
push
push
sahf
jp
mov
xlat
enter
sub
xchg
insl
push
pop
jp
call
add
add
stos
repz
push
jl
ret
cmpb
cmp
pop
cwtl
push
jmp
sub
scas
sbb
adc
test
xchg
sub
mov
mov
fistps
adc
xor
ljmp
arpl
ss
cmp
mov
cs
add
jl
sbb
mov
cli
adc
insb
insl
ss
push
scas
ret
lret
mov
jl
ret
dec
mov
call
mov
ret
call
ljmp
fwait
dec
add
cltd
mov
insb
inc
mov
inc
test
fimuls
xchg
mov
mov
mov
inc
nop
lcall
jmp
mov
and
add
inc
sbb
mov
out
add
mov
fs
mov
pop
leave
sbb
mov
or
stc
outsb
lds
xchg
test
adc
mov
std
xor
push
faddl
bound
in
push
xchg
cmp
mov
ret
xorb
scas
push
aad
jae
cmp
das
add
push
sbb
mov
cmp
aaa
mov
xchg
adc
mov
xchg
adc
scas
mov
jbe
aas
add
mov
inc
add
imul
scas
push
xor
add
cmp
adcb
or
mov
sar
mov
xor
les
add
cmp
aam
add
add
xor
inc
xchg
mov
and
mov
and
jp
inc
mov
ret
orl
xlat
fimull
lret
orb
dec
mov
jb
andb
aas
daa
dec
lret
cs
cmovo
mov
push
mov
stos
push
sub
movsl
call
add
and
xlat
xor
and
add
and
push
fstl
cli
pop
sub
or
and
cmp
and
add
or
add
adc
add
hlt
cli
adc
xchg
push
testb
mov
cmpsb
test
jbe
cmp
mov
cld
divb
cli
dec
in
dec
dec
sarb
push
loopne
pop
mov
ja
xor
dec
or
movsb
daa
or
fidivl
js
ret
int
sub
ret
out
insl
fistps
les
inc
pop
xor
js
and
xchg
fsub
js
insb
mov
mov
fwait
out
lcall
insb
inc
push
cli
lret
frstor
add
das
out
mov
imul
in
out
mov
add
xchg
fsub
enter
add
lret
mov
call
mov
jne
mov
cmp
sbb
repnz
inc
xchg
hlt
add
out
pusha
and
xor
lret
add
mov
shrl
add
mov
rol
dec
in
mov
lret
add
out
sbb
out
and
inc
out
sbb
pop
out
adc
jl
test
mov
push
add
push
sub
push
pop
add
mov
in
push
add
pop
dec
iret
jne
enter
sbb
add
or
adc
jle
sbb
iret
jae
dec
add
mov
and
sar
imul
xchg
add
inc
ss
inc
and
je
jbe
dec
push
je
push
add
fwait
into
loope
and
mov
into
loope
add
sub
lret
cmc
xlat
jle
cli
lcall
inc
jmp
pop
push
dec
inc
pop
push
mov
jbe
ljmp
mov
imul
stos
mov
cmp
cli
loope
jmp
jg
enter
jle
jl
or
or
test
stc
in
cmp
sahf
cmpsb
pop
cli
dec
and
xor
mov
inc
push
mov
pop
pop
lods
sbb
std
dec
cmp
jnp
into
cmp
aas
ljmp
lods
out
out
stc
pop
cli
cmp
jp
jmp
sbb
xlat
std
add
mov
out
add
frstor
add
cmp
adc
xlat
data16
inc
mov
in
mov
jbe
xchg
jnp
ret
jo
test
mov
popf
mov
and
aad
pushf
repz
hlt
pop
mov
mov
jl
and
cmp
std
cmpsl
sbb
mov
inc
mov
sbb
or
lret
add
mov
jmp
xor
adc
xchg
mov
call
out
add
scas
mov
lds
or
add
int3
out
das
stc
mov
and
lcall
push
bound
xorl
sti
jge
mov
sub
pop
mov
lock
icebp
das
push
xchg
mov
ljmpw
add
inc
lock
daa
push
sub
rcll
jns
push
pop
inc
lea
jl
aaa
xor
lds
enter
mov
push
lea
fisttpl
inc
dec
push
stc
push
movsb
ds
mov
rclb
lock
shlb
sbb
cmp
sbb
cs
sldt
add
add
mov
xchg
ds
mov
stos
dec
out
je
mov
adc
cli
cmp
aam
int
push
lcall
and
cli
lahf
or
aas
mov
ja
fstps
jb,pn
mov
jle
add
cld
mov
mov
mov
iret
jno
sahf
xlat
into
sub
and
inc
add
cmp
mov
add
into
and
test
ja
xchg
add
mov
jb
mov
mov
aam
test
aas
mov
ja
pop
fsin
sub
mov
adc
push
add
outsb
shl
xor
movsl
lret
push
scas
cld
scas
or
jne
sub
mov
cmp
loope
loopne
add
mov
jmp
push
daa
addl
mov
ret
fildll
inc
aaa
add
jmp
cltd
mov
mov
and
cmp
std
pop
adc
test
add
mov
xchg
fistps
fisttps
xchg
filds
xchg
mov
filds
divb
sub
dec
call
mov
add
mov
push
aas
xor
dec
repnz
lock
or
lret
add
xchg
and
mov
lret
aaa
sub
adc
add
test
std
int
dec
cmpl
orl
jmp
movsl
inc
pop
or
gs
mov
pop
xor
push
loop
jg
mov
add
and
mov
xchg
divl
adc
notl
push
pcmpeqb
loope
push
mov
scas
sar
decl
icebp
addl
dec
and
loop
mov
aas
push
rcrb
jg
push
testl
mov
sti
out
int3
testb
push
jecxz
inc
add
pop
mov
and
into
jae
mov
jae
mov
divl
notl
push
pop
mov
pop
mov
dec
mov
lcall
sbb
stc
cmpsl
cld
or
mov
popa
cld
mov
dec
push
mov
mov
xchg
xor
dec
sahf
mov
push
add
add
sbb
mov
or
add
jb
cmp
std
cld
divl
xor
jg
pushl
bnd
test
call
ud0
hlt
mov
cltd
lret
push
js
out
js
out
js
out
js
out
js
out
js
out
jbe
dec
jo
rcrl
repz
fcomps
fstpt
push
mov
add
add
lahf
jecxz
rcrl
stos
jbe
dec
and
xchg
lahf
out
jb
ret
repnz
pop
jecxz
fsubr
mov
out
inc
mov
outsl
xchg
mov
out
mov
stos
daa
scas
jnp
and
inc
push
mov
addl
fdivs
test
xor
jae
data16
dec
adc
popl
push
jecxz
xchg
add
dec
out
push
adc
roll
call
and
jmp
scas
lret
add
lret
add
pop
out
and
mov
dec
shlb
fildll
scas
dec
inc
in
sub
je
fmuls
outsb
icebp
enter
xchg
stc
jmp
or
or
add
fdivs
ret
sbb
xor
les
add
lret
adcl
std
adcb
sub
mov
repnz
push
out
cwtl
mov
add
or
sbb
cmp
and
add
and
push
jge
mov
or
repz
inc
jnp
xor
inc
sbb
add
lret
xor
add
add
out
push
rclb
subl
jg
xor
clc
in
and
xor
jb
std
das
mov
dec
push
int
dec
push
jb
xchg
sub
xor
xor
into
mov
xor
fldenv
std
decl
std
incb
xor
cmp
xor
out
rcrb
mov
jg
push
inc
out
add
pop
adc
xor
les
lret
test
call
repnz
cmpsb
mov
std
ss
lret
or
in
push
push
iret
test
fidivl
push
mov
ret
sub
pop
add
push
mov
cmpsb
push
xchg
daa
mov
add
jle
pop
add
pop
pop
ficomps
pop
pop
add
cwtl
add
aaa
mov
push
cmc
filds
mov
jo
lret
test
lret
scas
push
hlt
aas
iret
out
mov
mov
mov
test
mov
jo
ficoml
mov
test
xchg
mov
sbb
cmp
int3
jmp
imul
aam
mov
or
add
cs
fyl2x
sbbb
cmpsl
push
jb
lods
inc
xorl
add
mov
stc
hlt
adc
add
jb
xchg
cmpsb
dec
jp
clc
cmpl
fimull
xchg
test
jae
xor
test
int
adc
adc
mov
and
test
sbb
bound
add
add
jnp
xor
cmp
lcall
test
sti
out
adc
testl
inc
or
cli
dec
xor
add
into
mov
pop
enter
and
popl
push
jecxz
imul
lock
add
ds
xorl
xchg
movl
add
mov
xor
add
out
push
cmp
call
cmp
imul
std
in
pop
notb
mov
sbb
shrb
lds
adc
add
cmp
sub
push
jno
dec
push
sub
insl
divb
aad
sub
das
call
aas
adc
adc
add
cs
pop
stc
mov
sbb
mov
mov
jg
sub
mov
aaa
adc
lea
dec
jno
out
push
add
popl
push
stc
aaa
loopne
jne
lret
insb
stc
retw
cmp
and
ret
mov
push
xor
jns
sbb
das
and
xor
pop
sub
test
pop
repnz
stos
add
or
sarl
clc
mov
loop
inc
xlat
xchg
outsl
mov
pushf
adc
and
jmp
repnz
add
sub
out
mov
add
inc
xor
sahf
xchg
push
xor
bswap
mov
frstor
aas
pop
xchg
jle
jb
fidivrl
add
jno
test
faddl
in
es
cmp
test
call
cmpsl
rcrl
mov
scas
movlps
push
cmp
add
mov
les
addr16
ds
mov
mov
cs
cltd
xchg
mov
imul
call
xchg
add
int3
sbbl
mov
add
mov
or
stc
call
adc
int3
jge
lcall
inc
add
je
push
push
and
fcmovne
add
and
xchg
adc
rcrl
xor
sbb
and
and
fwait
lret
add
and
test
cwtl
push
adc
xor
or
pop
outsb
and
ror
add
mov
decb
xchg
cmp
in
jno
stos
andl
inc
xchg
test
movsb
test
adc
stc
in
jne
in
ret
je
test
cltd
aad
int
inc
mov
adc
sub
stc
cmp
decb
add
adc
gs
push
test
add
add
cld
out
movsl
mov
cmp
pop
add
jne
out
jmp
pop
mov
mov
mov
fs
mov
lcall
sbb
xor
push
repz
xchg
jmp
mov
push
sbb
fistpl
mov
imul
sbbb
jo
outsb
lret
mov
add
lret
addl
out
pusha
and
jg
adc
ret
mov
adc
insl
and
jl
add
pop
test
call
repnz
subl
lret
xorl
and
jmp
lret
test
jl
andl
inc
cmp
add
sbb
jmp
leave
mov
inc
fiadds
add
dec
out
inc
mov
stc
sub
jae
call
lret
or
push
pop
stc
lcall
enter
pop
sub
jmp
or
popf
fmuls
adc
loope
pop
enter
inc
stc
or
addl
add
add
pop
arpl
int3
decb
or
adc
pop
push
mov
repz
daa
in
lea
in
push
sbb
cmpl
add
jmp
mov
and
adc
dec
adc
lds
popa
and
cmp
mov
out
test
adc
test
shrb
jge
sub
add
jmp
or
popf
push
and
movsb
sub
mov
dec
dec
cmp
sub
subb
call
cmp
sbb
sub
dec
into
rolb
mov
cmp
sbb
jl
outsb
ljmp
and
pop
add
sub
adc
int3
mov
ret
daa
in
jnp
inc
fwait
daa
add
dec
daa
and
jnp
pop
faddp
cmpsl
add
cmpsl
or
out
por
rol
or
inc
shlb
scas
fcomps
jne
lret
out
mov
jp
pop
shrd
mov
jo
into
lret
test
lahf
jg
jmp
test
xchg
sti
insl
dec
mov
sub
aad
mov
sub
cli
popf
fcomps
lret
pusha
and
jmp
lret
jge
mov
inc
int
jnp
test
aad
stc
aam
lret
xor
jae
cmpb
loope
lahf
and
fcom
inc
pop
ljmp
scas
imul
stos
dec
lds
cmpsb
ja
lds
lret
test
add
out
std
aad
xchg
testb
ret
in
push
mov
xchg
sbb
cltd
cmp
xchg
add
clc
nop
add
fstpt
pop
jo
les
sbb
push
adc
mov
add
adc
int
pop
loopne
call
mov
jae
in
fsubs
clc
xorl
push
add
push
sub
roll
dec
mov
je
daa
xchg
jl
and
inc
or
nop
add
mov
nop
mov
add
out
jne
jle
push
sub
xor
sub
and
scas
les
lods
dec
and
adc
jbe
into
sub
jb
jl
into
sbb
inc
hlt
and
pop
fsubrl
add
add
rorb
mov
push
add
jb
push
das
subl
mov
les
jnp
or
gs
cmp
jb
xor
sub
fs
or
in
cmp
scas
mov
repz
ror
jp
out
adc
add
int
fidivl
jns
bound
daa
add
and
mov
jmp
out
fwait
push
mov
and
movsl
mov
outsb
ja
mov
ljmp
jl
in
loopne
fs
mov
sti
fildl
mov
pop
xchg
daa
fldcw
cmpsl
jl
out
outsb
push
imul
int3
fidivl
ljmp
in
into
out
outsl
filds
or
add
lahf
popf
test
fists
test
xchg
mov
lods
lea
cli
es
jns
or
loop
aaa
xchg
mov
mov
lods
in
mov
shl
add
sub
dec
jae
fcomps
xchg
dec
jae
mov
int
fcompl
mov
in
add
pop
pushl
xchg
iret
ret
mov
jg
dec
ja
push
add
sbb
or
jns
mov
in
or
push
mov
rorl
lret
enter
dec
jae
fwait
pushf
add
mov
in
jmp
or
or
push
jnp
jl
lret
mov
icebp
cmp
shll
enter
add
xchg
add
ret
mov
dec
pop
rorb
adc
add
or
push
jnp
mov
sbb
mov
out
or
cmpsb
bound
je
std
cmp
testl
jmp
inc
into
sbb
ds
sbb
movl
and
movsl
rorb
jo
add
lods
pop
and
xor
push
jge
sbb
sub
fadd
mov
std
test
sbb
sub
mov
jns
xchg
and
incl
std
aas
daa
jp
mov
and
inc
lret
sbb
aaa
jmp
stos
adc
jb
dec
pop
je
scas
lret
push
push
das
cwtl
lret
jae
jns
ljmp
pop
jmp
add
jl
mov
inc
js,pn
or
repnz
pop
inc
movsl
cmpb
decl
pop
outsl
into
mov
cli
cmp
mov
idivl
jns
add
inc
negl
mov
call
inc
xor
or
ljmp
in
xchg
int
out
xchg
mov
mov
inc
test
mov
xchg
lods
dec
cmp
jmp
jo
pop
ret
add
mov
sbb
ds
and
ss
sub
add
fsts
add
enter
mov
mov
out
mov
sbb
decb
and
push
xchg
inc
je
inc
dec
loope
out
addb
pop
jecxz
cli
or
add
xor
idivl
call
and
xor
pop
mov
loop
cli
lret
dec
idiv
notl
cli
mov
addl
add
lret
int3
add
lea
jl
inc
bnd
adc
stc
add
mov
add
rcl
and
sbb
or
cwtl
addl
adc
fabs
je
sub
dec
cmp
stc
sub
icebp
stos
sub
xor
or
cmpsl
cmp
jne
loope
mov
inc
push
lock
std
pushl
test
aas
scas
and
pushl
orb
pushf
aas
adc
jle
repnz
add
movsl
pop
icebp
jb
fnstsw
clc
pushf
repnz
je
loope
mov
int3
aad
insl
push
std
shr
int3
or
icebp
sbb
faddl
or
add
inc
sarl
mov
daa
add
scas
cwtl
idivb
or
cmc
cmc
inc
mov
sub
bsr
add
push
and
add
mov
ficoml
and
xlat
gs
jp
mov
call
sub
xchg
std
pop
lret
outsl
mov
out
outsl
stos
iret
outsl
scas
iret
iret
jo
inc
add
jnp
test
mov
inc
in
lret
call
les
shll
push
call
jmp
stc
aaa
cld
sahf
pop
jno
stos
or
push
fimull
out
insl
add
jmp
pop
sbb
insl
repz
xor
inc
mov
inc
mov
jns
loop
mov
test
sbb
movntq
lret
add
ret
jge
xchg
addl
insb
lods
jge
orl
shll
sbb
add
xchg
cmp
popf
jnp
dec
hlt
push
jmp
push
mov
or
pop
shld
push
mov
or
add
dec
push
incl
out
inc
iret
or
push
cld
pop
cmp
and
enter
mov
jmp
push
mov
iret
repz
and
sbb
sbb
xchg
inc
insb
inc
mov
adc
in
or
add
jne
or
mov
lods
aas
mov
aad
xor
incb
mov
mov
ficomps
imul
mov
dec
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
adc
add
in
inc
add
hlt
inc
add
in
inc
add
cmc
inc
add
or
add
adc
add
scas
sbb
jmp
inc
add
jge
and
ja
je
arpl
mov
shl
pop
in
pop
pop
scas
mov
cli
loop
lock
loope
push
pop
out
testl
mov
adc
xchg
insl
dec
mov
iret
call
sub
jl
insl
add
sbb
xchg
int3
jle
add
jp
jbe
iret
inc
pop
adc
push
js
aad
imul
mov
jns
into
inc
mov
outsb
sub
mov
arpl
aad
lea
xchg
mov
jae
xchg
add
sub
aam
mov
mov
test
dec
push
popf
stc
mov
ljmp
cs
or
add
add
into
add
testl
lret
call
jae
dec
aad
lods
add
stc
es
or
mov
sbb
add
cld
in
jae
sarb
gs
aaa
aaa
sti
xorl
into
call
add
push
push
pop
inc
movups
ds
in
push
cmp
xchg
add
shll
adc
ret
ljmp
add
aam
rcrb
test
filds
jle
out
fdiv
jne
pop
dec
or
in
imul
leave
mov
jmp
adc
add
lds
into
jmp
push
mov
notl
dec
or
cmp
cld
call
inc
sbb
neg
scas
jge
mov
add
mov
imul
add
add
sbb
aas
mov
mov
call
shr
jae
fptan
pop
shlb
pop
cmp
mov
xor
cli
dec
in
or
test
testl
sub
stc
jmp
mov
push
jge
inc
in
repnz
incl
repnz
mov
mov
xor
imul
aas
add
lret
mov
push
sub
pop
movsb
and
add
adcl
cltd
add
outsb
aad
loope
repnz
dec
testl
pop
movsb
filds
jb
imul
out
jb
jecxz
jb
sbb
adc
sahf
sub
sub
add
add
or
or
and
ss
jno
ss
addb
mov
add
inc
aad
jmp
icebp
aam
ss
cld
dec
stos
cmpsb
push
test
fbld
in
cwtl
cwtl
mov
add
fs
icebp
lret
subl
dec
xchg
jmp
jne
dec
lcall
add
add
adc
inc
movb
outsb
jp
into
and
mov
inc
test
and
dec
xor
addb
out
repnz
cmpsb
add
add
mov
clc
push
add
inc
fisttpl
xchg
sub
inc
movsl
adc
dec
shlb
test
mov
dec
push
notl
push
adc
or
add
mov
imul
jecxz
add
dec
leave
adc
into
sti
mov
sub
out
notl
xchg
or
pop
mov
pop
cld
or
dec
fcmovne
notl
xchg
or
lret
jb
sub
mov
outsl
mov
cld
arpl
loop
mov
movl
icebp
jno
cld
mov
jb
jnp
sub
pop
xor
jb
ljmp
push
or
mulb
sub
aas
mov
rorl
cld
ljmp
scas
and
loop
into
mov
and
outsl
xor
stc
cmpsb
into
push
mov
cld
push
lcall
xor
lcall
jmp
dec
cmc
movsl
lret
insb
les
shlb
sti
cmc
push
fistpl
fbstp
jmp
jo
fistl
xlat
outsb
adc
fisubs
push
fldt
mov
mov
sti
xchg
into
ret
and
call
sub
fdivs
jecxz
inc
mov
iret
lahf
sbb
iret
mov
add
ja
dec
and
out
or
push
ljmp
daa
std
add
and
cld
xchg
or
adc
repz
cli
dec
lock
push
pop
xor
iret
add
lahf
dec
mov
mov
dec
or
mov
dec
fsubs
test
add
ret
icebp
cs
jmp
add
adc
mov
inc
jmp
dec
dec
inc
add
lods
sub
jmp
and
lcall
testl
mov
and
mull
add
xor
jno
bound
and
pushf
mov
adc
dec
or
push
mov
cmp
and
ja
push
mull
add
incl
out
and
movl
push
out
and
inc
ret
out
movl
stos
push
inc
dec
int
mov
clc
push
adc
jns
sahf
sbb
je
push
mov
xchg
and
add
inc
fdivs
xlat
sarb
xlat
and
xor
and
clc
pop
push
jmp
add
out
xlat
adc
and
mov
push
or
jmp
jge
out
cld
jae
rorl
pop
pop
push
repnz
pop
add
pop
shlb
gs
push
pop
pop
pop
adc
repnz
pop
les
cs
lret
jecxz
int3
lret
ficoml
popf
cmp
add
rep
mov
xor
jmp
or
inc
repnz
add
add
lret
pop
inc
repz
repnz
call
mov
je
add
bound
daa
add
inc
arpl
mov
jl
inc
mov
fs
incl
push
lret
loop
outsl
mov
shlb
insb
je
call
in
mov
out
ss
incl
or
and
test
add
lock
in
mov
mov
stc
xlat
fwait
mov
push
mov
jb
repz
jae
add
test
mov
mov
stc
sahf
mov
add
lods
fnsave
mov
stc
jbe
cltd
mov
jae
mov
push
push
cltd
pop
sti
push
xor
adc
add
insl
dec
lret
add
cmp
mov
add
adc
rolb
push
cmp
mov
test
add
lret
into
dec
mov
dec
sbb
divps
sahf
jle
cli
cld
pop
push
push
add
adc
outsl
add
or
test
stos
outsl
int3
movsl
mov
notl
adc
add
leave
outsl
inc
mov
push
push
ds
add
add
out
cmp
or
xor
mov
mov
test
mov
nop
cli
int3
push
test
mov
dec
mov
push
repz
out
call
stc
cmp
or
js
sti
sub
push
aam
repnz
lds
push
repz
pushl
imul
lea
in
xchg
addr16
out
repz
pushl
push
in
mov
aam
imull
add
mov
inc
mov
lahf
mov
shlb
out
jb
test
mov
cld
push
xchg
insb
ds
fwait
fs
repz
cmpsb
test
es
add
add
push
std
xchg
jle
add
lret
daa
push
pushf
fwait
pop
xor
mov
shll
or
sub
mov
mov
jbe
jle
icebp
gs
sti
pop
ret
lret
sarl
fwait
outsb
ret
out
mov
cs
sti
cmp
mov
mov
arpl
clc
das
mov
aas
mov
add
and
insb
rolb
jo
in
mov
push
mov
push
jb
jns
in
mov
pop
arpl
ret
test
add
clc
mov
loopne
jnp
mov
add
sbb
dec
in
sarb
sahf
fwait
push
xchg
daa
adc
call
jecxz
clc
das
mov
inc
mov
add
aad
mov
add
sbb
gs
cvtpi2ps
mov
call
loopne
or
or
fsubs
and
into
dec
mov
dec
in
sbb
into
add
pop
rorb
push
test
addb
fistl
test
pusha
cmp
fs
add
out
js
fadds
stos
mov
dec
fiadds
sarb
xor
mov
cmpsb
gs
adc
adc
or
inc
inc
pop
jo
fsub
jl
push
loop
lret
icebp
stc
pop
push
mov
sti
subb
mov
in
aas
push
jne
jb
push
imulb
xor
pop
imul
test
add
arpl
cld
mov
cld
dec
cmp
cmp
cmpsb
outsl
lods
je
add
mov
mov
mov
outsb
outsl
add
scas
dec
imulb
dec
rorl
adc
push
push
inc
lcall
lret
out
sub
popf
xor
insl
push
mov
arpl
nop
fs
add
cmp
and
jp
jecxz
imul
inc
dec
iret
sti
mov
repz
dec
mov
add
mov
add
mov
jl
inc
add
mov
inc
in
lret
ret
pop
cli
scas
adc
in
dec
jge
mov
scas
lret
add
sbb
scas
lret
inc
mov
add
lcall
insb
xchg
push
jb
xchg
mov
std
xor
imull
mov
testl
test
call
jb
dec
repnz
fcos
call
decb
add
out
subl
lret
mov
push
repnz
pop
jne
and
mov
xchg
or
xchg
movsl
lcall
rorb
pop
and
dec
and
adc
sarb
mov
test
loopne
aaa
or
lea
scas
adc
dec
mov
call
xlat
or
test
lret
into
mov
adc
je
test
xchg
sbb
ja
adc
xchg
mov
pop
in
cmp
or
daa
call
test
xchg
jl
add
jl
mov
cld
aas
fsubrs
adc
jge
cli
mov
imul
clc
paddsw
sbb
insb
fwait
xchg
mov
lret
test
ss
xabort
fs
lret
daa
and
repnz
enter
pop
jb
stc
inc
les
addr16
and
lret
sub
ja
das
out
push
sub
lahf
sub
add
push
outsl
cmp
outsl
push
push
int3
test
js
call
ss
push
adc
int3
icebp
fcmovnu
push
jg
outsl
hlt
mov
rolb
pop
nop
outsb
out
or
sahf
dec
or
call
push
mov
loopne
mov
daa
mov
hlt
out
xchg
psllq
inc
dec
adc
xor
add
inc
jnp
lret
insb
sub
push
stos
dec
and
cmp
fistpll
jge
scas
fildl
stc
jle
aad
test
pop
add
ret
clc
bound
jecxz
or
icebp
andl
lret
test
mov
idiv
repnz
and
add
dec
lret
sub
xor
gs
add
inc
push
mov
inc
movsl
push
imul
jmp
jb
adc
out
jb
pop
in
cmp
subl
iret
add
add
insl
adc
or
rcrl
jmp
rorb
pop
add
add
dec
shll
dec
push
jb
call
sysret
test
iret
add
sbb
jne
mov
push
xor
testl
push
adc
movsb
add
bound
mov
jno
je
jae
and
enter
jle
hlt
jns
and
cmp
add
rolb
or
sub
in
insl
lods
mov
loop
ljmp
js
dec
mov
cld
shll
pop
add
mov
int3
stc
lods
outsb
mul
push
sub
movl
jge
jnp
mov
arpl
insl
cmc
mov
pop
jo
cld
push
sub
xor
mov
ljmp
add
ffree
push
loop
les
lret
outsb
ss
loopne
mov
out
lret
mov
rolb
mov
jmp
pop
shll
cli
xor
aaa
leave
je
cmpsb
lcall
bound
orb
xchg
xor
xchg
jg
cltd
lock
jge
inc
sub
gs
enter
out
and
xlat
out
test
shr
out
sub
repz
repz
inc
jecxz
repz
mov
pop
test
in
and
cmc
insl
arpl
scas
outsb
arpl
mov
clc
cmp
jnp
pop
mov
cmc
clc
jb
out
test
cmc
inc
aad
bnd
dec
pushf
or
arpl
test
bnd
fnstenv
jle
inc
fsubs
or
pop
cmc
clc
jae
cltd
sub
dec
in
push
fmull
int3
dec
out
cwtl
cli
lcall
adc
or
lret
insb
jnp
fs
jb
cmp
ret
test
xchg
xchg
cli
pop
ret
cmc
lcall
inc
hlt
xchg
pop
call
pop
int
mov
add
jb
sbb
jae
lock
notl
sahf
push
push
add
add
icebp
call
stc
cmp
add
add
dec
clc
std
or
push
push
andl
inc
fwait
jae
lock
notl
sti
and
dec
lret
daa
ret
test
repz
decl
test
cmp
movsb
enter
dec
sbb
dec
stc
push
das
pop
sti
adc
or
sbb
stc
std
imul
mov
mov
pushl
jns
call
xorl
int
cwtl
jecxz
add
mov
cli
gs
cltd
gs
cs
jecxz
jb
in
cmpxchg8b
jo
push
loop
sub
add
inc
mov
add
cmpsl
iret
xor
cmc
lcall
scas
fwait
je
lahf
xchg
js
mov
in
les
hlt
imul
adc
xlat
scas
xor
rolb
fistpl
mov
repnz
ret
pop
aas
mov
or
arpl
mov
fbstp
add
fldt
lea
adc
lret
es
inc
pop
les
mov
inc
pop
js
cmp
lcall
mov
mov
xor
push
out
stc
mov
out
xlat
adc
jno
cmp
mov
add
nop
push
stos
push
mov
jmp
xor
callw
repnz
mov
ja
loopne
jae
add
icebp
test
sub
pop
sbb
jge
cmc
lea
mov
jno
aaa
adc
ljmp
adc
and
pop
out
psllq
call
sar
js
push
mull
daa
or
pop
data16
push
jecxz
mov
mov
pop
mov
lea
push
or
fistpl
or
and
push
xchg
sbb
xchg
and
adc
call
dec
out
mov
dec
je
push
call
shlb
addl
pop
sbbb
into
add
sbbb
mov
jge
mov
cld
test
fdivr
sub
lret
push
adc
imul
inc
nop
jno
pop
or
mov
adc
sub
pop
loopne
add
inc
jae
add
imul
outsl
mov
in
pop
or
mov
push
and
pop
dec
and
cld
in
fsubl
sub
mov
xor
cmp
repz
sub
mov
inc
lock
sbb
popf
out
adc
int3
insl
dec
into
lahf
mov
enter
add
testl
add
cmp
mov
jmp
lret
sbb
push
sub
lds
mov
shlb
add
jmp
insb
rolb
testl
xchg
std
inc
sti
fsubrs
into
gs
push
dec
or
push
adc
xchg
mov
dec
xchg
aaa
insl
push
xor
leave
subl
add
test
in
push
addr16
adc
add
mov
push
stos
data16
es
jo
scas
adc
in
scas
sbb
jne
sub
adcl
mov
iret
jge
mov
cmc
fs
testb
fucom
in
jae
add
push
dec
loope
lods
sahf
scas
add
data16
mov
mov
push
add
xchg
lcall
inc
and
pop
inc
and
xor
lea
push
call
vmread
test
pxor
call
fdivs
cmp
jne
lods
ja
stc
decl
rorl
lods
es
icebp
push
lcall
push
and
push
lret
jge
add
or
and
cmp
dec
mov
sub
mov
mov
adcl
test
mov
push
mov
inc
call
mov
clc
jl
mov
add
lret
or
add
hlt
cwtl
dec
stc
mov
push
xchg
jno
or
imul
mov
add
add
iret
dec
mov
stc
mov
dec
xchg
jno
or
inc
mov
push
xchg
stos
sbb
mov
mov
test
mov
jb
ret
lcall
testl
lcall
inc
lods
dec
mov
dec
mov
in
jo
add
mov
mov
sti
or
ret
lahf
lock
outsb
lock
mov
push
sub
les
and
sbb
xchg
pusha
aam
jbe
add
ror
lret
rorl
and
sarl
add
sbbw
loopne
mov
mov
add
mov
test
addr16
outsb
fldenv
or
icebp
out
das
lds
dec
mov
popf
enter
pop
adc
xchg
test
in
jmp
in
or
mov
data16
add
pop
adcl
push
fs
mov
lret
add
and
faddl
add
sbb
mov
dec
push
ja
into
repz
call
rorb
pop
stc
lcall
sbb
and
add
mov
jnp
addr16
rorb
nop
stc
decl
xor
add
add
mov
jnp
push
dec
rorb
repz
decl
fildl
lcall
push
cmp
push
add
testl
push
cmp
mov
xchg
cmp
sub
andl
xor
jmp
fistpll
mov
jg
mov
xchg
popa
mov
dec
or
add
hlt
jl
sub
add
dec
repz
add
daa
leave
push
cmp
mov
aaa
in
mov
xor
int3
scas
sub
roll
mov
mov
jnp
mov
mov
cld
test
je
fs
dec
in
aaa
push
inc
in
das
push
push
in
daa
push
and
mov
out
or
out
pusha
jl
or
push
imul
lret
jg
and
subl
add
pop
xor
mov
lret
mov
mov
lret
out
pop
dec
sarb
mov
outsb
or
push
pusha
xchg
inc
loope
xchg
pop
mov
das
les
mov
cmpsl
repnz
mov
das
mov
or
enter
sar
in
int3
roll
jmp
sub
in
xor
jecxz
jb
repz
pusha
add
jecxz
test
mov
push
xchg
push
rclb
repz
inc
icebp
lret
test
loopne
jmp
mov
test
cmp
jno
or
aas
call
loope
push
leave
or
pop
jmp
dec
jecxz
add
xor
and
pop
jp
add
int3
call
mov
xchg
test
divl
add
push
test
fwait
decb
jmp
inc
add
mov
fwait
das
sar
or
or
mov
dec
and
xor
sbb
pop
sub
lods
push
fstpl
int3
add
add
adcb
add
pop
and
addl
xor
add
cmpsb
or
mov
add
or
orl
adc
imul
jae
jle,pn
mov
xor
pop
aad
call
hlt
xor
mov
or
jmp
dec
test
jp
stc
jg
jge
mov
adc
mov
test
or
test
lret
fstpl
add
fsts
cmp
sub
xor
add
add
add
and
lcall
mov
call
das
sahf
sub
sub
test
enter
ret
pop
jg
filds
aaa
xchg
pop
xchg
out
repnz
popa
jne
fisubl
add
lcall
pop
jmp
cmp
xor
shll
ret
pop
test
outsl
jp
mov
fcomi
jg
scas
lods
add
pop
xchg
mov
fsubl
push
jg
xor
scas
outsb
inc
mov
jg
repz
jp
bound
scas
dec
fcmovnu
xchg
lret
fcomi
ss
mov
jecxz
ffree
orb
mov
mov
jae
cmp
mov
call
int
movsl
lock
dec
jmp
mov
add
push
xchg
adc
push
inc
lret
dec
clc
stc
into
sub
pop
daa
gs
movsl
lods
sbb
sbb
gs
sbb
ret
loope
push
inc
lds
mov
push
adc
fsubl
fistl
or
push
loop
call
jne
push
add
dec
push
leave
lret
repz
test
test
push
mov
dec
call
add
sbb
sbb
jno
pop
out
jne
pop
out
jmp
inc
mov
jmp
scas
rcrb
sub
sub
mov
mov
jge
adc
add
call
inc
xchg
push
mov
xor
sub
mov
jns
cmc
sub
add
test
push
push
sub
loope
sub
andb
add
icebp
icebp
mov
mov
adc
sub
inc
scas
xor
fbld
jb
xchg
pop
stc
sbb
int3
cwtl
call
jne
and
jae
cmc
mov
add
outsb
test
adc
add
add
in
stc
jne
mov
fisubrs
popl
sbb
into
push
cmp
jecxz
or
ficoml
add
cmpsl
sub
mov
insl
mov
dec
daa
cmp
gs
sahf
cld
inc
sub
jp
lds
jnp
add
int3
out
arpl
mov
jno
push
pushf
dec
inc
stos
mov
or
cmc
xchg
sbbb
lret
fwait
loopne
jp
aaa
fdivr
imul
pop
push
add
jb
out
or
and
aam
dec
lret
jge
ds
sbb
clc
sbb
jmp
insl
xlat
xchg
mov
in
mov
dec
int
shrb
add
add
add
or
loope
add
iret
push
roll
push
stc
sub
sbb
jmp
call
loope
push
mov
subb
bound
clc
mov
pop
incl
and
mov
dec
push
push
andl
add
dec
push
lock
movsb
xor
outsl
lock
inc
and
dec
cmp
add
mov
sbb
addb
in
divl
test
divl
adc
push
ret
call
pusha
pop
jecxz
push
sub
int3
add
adc
nop
or
dec
mov
fdivrl
lock
jg
pop
or
jne
call
cmp
dec
test
repz
push
sub
add
add
mov
jg
xchg
fcoms
inc
jo
js
addr16
and
sbb
test
sbb
cmpsb
add
jl
jmp
add
inc
into
add
roll
jecxz
ljmp
cmc
xchg
pop
aaa
push
xor
andl
ret
inc
mov
cmp
mov
add
mov
dec
insb
scas
add
roll
les
jnp
jns
add
pop
mov
fucomp
sbb
mov
cmp
imulb
adc
aaa
in
push
xor
mov
cmp
mov
push
jmp
lods
dec
lods
scas
bound
repnz
roll
idivb
addr16
push
in
call
add
pop
jmp
cltd
mov
mov
add
pop
add
pusha
pop
or
outsb
pusha
add
fs
pusha
std
scas
mov
pop
jb
jb
fnsave
cmpsl
mov
mov
subb
fs
pop
or
sar
xchg
popa
addr16
repnz
pushf
dec
int
adc
scas
jno
or
jne
sbb
inc
dec
into
jl
imul
adc
jns
arpl
shll
inc
jbe
popa
jp
add
mov
jnp
mov
add
xor
mov
and
or
sbb
shrb
jae
in
mov
or
test
xor
test
mov
add
mov
add
adc
jg
jmp
xor
jg
cmp
pop
sub
pop
push
mov
fcmovne
orb
push
jge
jg
jge
mov
and
push
in
popa
loop
push
mov
add
add
xor
ja
pop
shlb
loop
jae
cld
test
or
dec
add
sub
dec
push
sub
insl
lods
bound
movsb
add
outsl
jg
cmp
jl
out
mov
jg
stos
ljmp
sub
inc
pop
sbb
fs
mov
jl
repnz
incl
enter
mov
mov
sti
push
xchg
fisubrl
or
add
out
in
add
and
xchg
das
pushf
inc
in
stos
lret
ret
xor
sbb
add
mov
cmp
add
out
in
fs
fcmovnb
pop
repnz
mov
xor
lds
jl
div
popf
xor
imul
test
mov
lods
xor
lcall
push
out
jnp
mov
add
je
add
mov
mov
pop
mov
dec
mov
lock
bound
roll
in
sahf
rclb
faddl
jb
cmpsl
adc
jecxz
jl
test
pop
adc
loop
or
in
jae
xchg
dec
daa
push
rolb
pop
call
cmp
test
cli
add
insl
xchg
sahf
jg
icebp
xchg
or
mov
push
bound
addl
lea
sub
jno
idiv
pusha
cltd
cld
addl
jge
int3
xchg
ret
push
mov
test
add
pop
adc
push
call
add
jge
pop
xchg
ret
adc
dec
push
testl
add
dec
add
leave
data16
data16
cli
in
and
jg
lds
xor
test
inc
add
insl
or
das
push
bound
dec
std
add
addr16
outsb
movsl
pushf
push
dec
loopne
stc
push
nop
ja
mov
clc
mov
je
aad
bound
hlt
inc
pop
or
jne
add
nop
clc
mov
int3
push
stc
call
push
dec
jge
adc
out
xchg
add
dec
mov
in
sub
push
stc
fcoms
inc
lock
out
in
xchg
inc
xchg
or
sub
jnp
into
lret
testl
adc
inc
mov
lds
mov
into
icebp
jp
dec
icebp
sub
adc
add
mov
into
daa
xchg
or
xchg
mov
push
test
call
cmpsb
fwait
into
sub
lods
or
mov
js
xchg
pop
aaa
into
mov
jns
push
test
jg
push
mov
fisubs
rcr
xchg
jl
dec
aaa
add
sbb
into
inc
jp
dec
cmp
mov
add
ret
cmc
mov
jl
add
pop
or
push
sub
xorl
mov
scas
jnp
pop
cmp
pop
or
mov
js
jb
inc
divb
cmpsl
adc
push
jno
lret
add
cmp
jmp
test
sar
jb
dec
repnz
push
jmp
bound
xchg
add
lret
call
cmc
sarb
in
idivl
shll
pop
in
or
cmp
dec
out
mov
testl
pop
in
sbb
mov
js
push
inc
adc
adc
daa
testl
xchg
dec
jl
jg
insl
push
adc
jge
sahf
roll
jmp
push
addr16
pop
dec
or
xor
in
mov
sbbl
push
and
ljmp
repnz
stc
sahf
adc
fwait
xchg
movsb
stc
icebp
push
xor
pop
cmp
adc
in
les
sub
fnstenv
sub
flds
xor
or
pop
leave
call
sub
add
add
icebp
call
add
je
ja
mov
jge
xchg
or
xor
call
addr16
mov
call
mov
dec
and
lret
jmp
add
mov
divl
push
in
push
xor
or
fdivs
daa
lds
sti
addb
add
xchg
inc
cwtl
nop
scas
lret
add
out
int
fcmove
jp
xor
data16
into
shrl
popf
inc
in
jg
pop
lcall
push
call
cs
jmp
aas
testl
mov
xchg
fbstp
mov
out
jae
add
adc
lea
dec
lock
inc
dec
lock
push
lds
push
lret
xor
out
add
xchg
jmp
xor
push
mov
les
add
xor
add
push
mov
add
mov
pop
insb
inc
lret
add
sub
lret
mov
sarb
leave
insl
cli
sub
add
dec
cld
out
mov
add
inc
add
push
jo
add
xchg
test
iret
add
mov
popl
jmp
cwtl
or
pop
cmp
je
mov
sbb
cld
jge
mov
sub
mov
pop
inc
and
push
mov
and
adc
add
int3
jge
cmpsl
mov
sub
pop
imul
mov
sbb
sbb
and
out
test
jge
mov
test
mov
or
cmp
add
mov
adc
xchg
inc
cmpsb
mov
adc
jns
faddl
mov
and
mov
jae
mov
add
nop
cmp
inc
and
lea
add
cmp
jmp
mov
stos
or
mov
inc
into
enter
hlt
or
mov
lret
sahf
lahf
jnp
push
call
xchg
pop
push
aaa
das
adc
mull
ljmp
fisubs
xchg
aad
jle
aad
jbe
iret
push
mov
inc
fldl
mov
push
into
jmp
push
aam
pop
add
test
fldt
inc
fisttpll
mov
mov
inc
mov
clc
inc
sub
mov
mov
stc
mov
out
add
out
adc
repz
stos
push
add
mov
sar
push
bnd
xlat
jge
adc
fs
clc
fs
std
mov
out
xlat
mov
cs
push
add
dec
loope
pop
sbb
push
jb
clc
ds
push
sub
push
std
rcrb
jmp
cmp
clc
gs
sarl
lret
add
xor
pop
sbb
into
inc
dec
stc
add
adc
and
push
dec
add
lea
sti
cmp
ret
notl
adc
pushl
jge
pop
add
jge
outsl
shl
dec
mov
add
int
lea
mov
push
je
insb
push
dec
leave
stc
je
mov
push
fiadds
inc
or
insb
and
dec
mov
inc
dec
data16
cmp
insl
and
popl
and
mov
add
push
mov
or
add
stos
push
lcall
xor
mov
mov
test
daa
out
mov
pop
cmp
add
or
xchg
inc
xchg
stc
ss
cmp
out
mov
orl
std
ja
adc
pop
xor
cmpsl
pop
out
aas
mov
rorb
or
fs
push
aaa
jmp
jae
lret
clc
aad
ds
mov
inc
scas
add
pop
jmp
stos
or
push
jae
das
mov
mov
mov
push
add
popf
mov
lahf
mov
pop
les
enter
shlb
mov
int
inc
mov
and
clc
xchg
lods
or
push
push
loopne
sbb
lcall
sahf
ffreep
mov
lahf
add
ret
pop
les
lret
bound
out
stos
int
pop
fwait
aaa
mov
fcmovnb
aad
ljmp
push
add
leave
ret
cmp
cmp
in
or
sub
rcl
es
push
bound
loope
xchg
push
xchg
sbb
mov
xor
sbb
jae
rorl
add
rol
inc
adc
daa
loope
push
lds
add
push
iret
add
roll
mov
dec
inc
in
repz
sub
jae
jle
fwait
xlat
mov
add
les
add
mov
add
pop
rorl
je
cld
inc
call
jo
mov
loopne
pop
pop
or
in
add
add
fimuls
sbb
push
stos
imull
testb
call
loopne
test
pop
inc
mov
jl
mov
incl
mov
adc
sub
xorl
int3
inc
rorl
sub
add
dec
or
dec
aad
adc
data16
rolb
push
scas
rorb
dec
mov
cltd
add
mov
pop
add
outsb
xchg
das
cmp
add
into
add
dec
into
into
roll
pushl
jno
test
fst
push
gs
test
das
dec
or
out
loopne
cltd
imul
dec
das
les
daa
lahf
jp
test
mov
lods
mov
push
into
in
std
mov
xchg
mov
mov
or
stos
jmp
jge
cwtl
das
dec
out
mov
jmp
dec
mov
lret
or
sub
add
lret
stos
or
sbb
xor
push
inc
call
stos
and
xchg
mov
push
test
pop
mov
ljmp
dec
jo
cs
add
mov
mov
mov
mov
sbb
jmp
lds
add
lret
ss
cmp
dec
rcr
imul
mov
dec
mov
mov
sbb
fnstenv
jge
lods
inc
sub
lret
push
out
ret
sub
movsb
clc
cld
sub
inc
jmp
mov
shll
out
aaa
pop
push
shlb
or
add
pop
sub
subb
mov
push
push
pop
jo
roll
jg,pt
pop
ja,pt
pop
xchg
repz
test
mov
dec
dec
and
add
dec
mov
jg
fisttpl
je
dec
je
xchg
into
sbb
into
sbb
into
sbb
sbb
stc
je
popf
stc
adc
push
bound
push
mov
dec
incl
test
stc
adc
add
pop
cmpsb
add
pop
leave
push
mov
inc
adc
pop
add
pop
sbb
lret
call
rolb
inc
add
push
dec
add
in
negb
dec
jae
pop
sbb
stc
add
das
int3
je
or
mov
test
sarl
add
xchg
xor
cmp
fcoms
sub
movaps
fcoml
pop
clc
sbb
ret
insb
adc
shll
fnstenv
add
loopne
aaa
orb
cmp
daa
test
es
inc
xor
mov
mov
stc
aaa
lret
sub
scas
clc
sub
adc
ljmp
add
sahf
add
aad
icebp
mov
pop
ret
data16
push
ret
xchg
popa
iret
push
push
stos
mov
ds
mov
outsb
out
les
repz
sbb
nop
rclb
aaa
xchg
and
insl
mov
add
inc
mov
xlat
xchg
in
in
ljmp
dec
push
add
mov
add
add
add
and
add
mov
mov
in
stc
dec
cmp
jmp
push
mov
xchg
inc
fucomip
sti
jno
mov
pop
push
icebp
pusha
mov
inc
ds
jge
push
out
pop
andl
xor
add
sub
or
popa
nop
mov
pop
jae
mov
test
add
push
clc
cmc
scas
sub
ret
add
jmp
arpl
mov
pop
push
in
clc
jg
add
sbb
push
push
mov
jbe
or
stc
adc
cmp
inc
or
clc
je
push
and
pop
adc
add
into
ret
loope
add
add
push
add
add
add
imul
adcb
push
hlt
adc
pop
clc
decl
add
push
leave
add
add
pop
sub
in
loopne
sahf
sub
xchg
push
add
call
sti
jmp
cmp
clc
adc
mov
call
incb
fnstcw
cmp
js
adc
inc
add
out
ret
cld
mov
xchg
loop
mov
xor
in
mov
dec
add
xchg
sub
pop
mov
data16
ljmp
sub
xchg
jle
lret
sahf
nop
xor
mov
test
and
inc
push
sbb
das
mov
xor
lret
pop
nop
imul
lret
jmp
nop
inc
lret
cmp
lret
lods
jmp
ds
sti
pop
mov
fwait
outsl
fildl
nop
xor
adc
lods
mov
mov
jmp
fwait
pop
jb
popl
stos
cmp
test
ss
sbb
mov
mov
shll
jle
jbe
fcomp
push
xchg
stos
mov
sahf
xor
aam
jb
mov
test
sbb
aaa
ds
or
mov
rcl
jl
scas
xlat
mov
in
mov
rclb
mov
sbb
jnp
push
jb
movsb
pop
repnz
mov
cmp
add
fs
sbb
lret
cld
int
inc
jmp
add
popl
xor
xchg
fiadds
or
pop
lds
or
jle
outsl
mov
mov
enter
out
adc
leave
push
push
shlb
sahf
mov
lock
imul
mov
in
lock
je
or
jge
push
mov
subl
in
xlat
clc
push
mov
lret
dec
mov
push
add
fcmovne
jge
push
fiaddl
lret
leave
and
mov
or
shl
add
mov
testb
jl
mov
add
mov
add
pop
mov
test
cmp
out
sbb
stc
sub
mov
lea
and
and
enter
decl
jle
cmp
sub
std
pushl
and
inc
ret
in
and
mov
add
sub
or
in
or
add
add
lret
rcll
lods
lret
jmp
add
push
pop
add
dec
add
into
push
pop
ss
out
out
jb
or
add
sub
xchg
bound
out
xchg
ds
cmp
add
ret
push
mov
out
cmp
ljmp
mov
push
cmp
jmp
js
das
jae
push
dec
andb
dec
add
mov
xchg
ja
mov
arpl
out
push
out
jmp
add
ljmp
mov
or
aas
add
mov
je
lds
jmp
mov
test
mov
cmp
mov
pop
jb
fstpt
jmp
push
inc
mov
insl
mov
add
cltd
je,pt
jo
adcl
aaa
or
mov
add
mov
lcall
add
jne
outsl
or
mov
stos
or
add
pop
enter
popa
jle
jnp
sbb
jns
inc
or
jl,pn
mov
je
inc
je
enter
popf
inc
cli
cmp
cmpl
cli
inc
orl
sti
pop
shll
enter
xchg
in
pop
add
pop
ret
push
mov
cld
push
mov
rcll
sub
cmp
daa
sub
int
clc
loope
lahf
call
lea
in
sar
test
rclb
and
in
in
pop
enter
dec
dec
and
dec
ds
stc
sub
outsl
lock
mov
in
mov
inc
add
add
sbb
add
mov
add
or
jl
repnz
xchg
jne
scas
lret
jo
into
inc
popf
mov
sbb
das
subb
clc
lock
inc
mov
gs
fwait
mov
add
push
mov
fwait
stos
mov
xor
mov
lahf
out
xor
sbb
jge
pop
mov
pop
mov
jmp
adc
mov
jl
inc
js
xor
call
adc
sahf
jo
cs
jmp
jbe
cmp
pop
sub
jmp
mov
add
add
sub
ficoms
add
mov
mov
jmp
sbb
movsl
aaa
push
je
sub
es
mov
xchg
inc
cmp
add
push
push
insb
repnz
cmp
mov
push
negl
sbb
sub
lret
jmp
xor
xor
push
and
mov
cmp
insb
jb
adc
fwait
lcall
cmp
push
daa
adc
push
xor
add
jle
adcl
movsb
xor
test
fistpl
xchg
inc
data16
movsb
mov
add
repnz
imul
jg
das
push
fwait
or
inc
jle
lret
shl
imul
scas
clc
jmp
or
push
cmp
add
call
lea
pop
clc
decl
ja
and
mov
inc
addl
or
jge
xor
jp
xchg
push
add
cmc
icebp
jno
add
movsb
add
jge
pushf
jns
in
jle
jl
sub
lahf
ret
dec
cmp
add
int3
sarb
lods
jp
das
scas
pop
das
popf
sub
add
cli
test
mov
movsb
mov
add
cld
rclb
ret
xor
xor
xchg
std
pushl
jno
jns
xor
push
cmp
stc
fs
cld
pushl
int3
dec
or
xor
lret
sbb
cmp
jmp
adc
inc
xor
insl
bound
lret
jmp
xor
add
lds
sub
jo
xchg
ds
movsb
sub
xlat
and
mov
dec
lods
mov
cvtdq2ps
hlt
sbb
adc
or
mov
push
movb
movsb
adc
test
icebp
shrb
imul
add
push
pop
movsb
stos
jmp
std
mov
out
xchg
jg
xchg
sahf
inc
sbb
lock
cs
rcll
cmc
sti
push
insb
fcompl
jmp
insl
out
pop
push
cmp
push
inc
psllw
inc
pop
loope
call
pop
popf
jmp
pop
mov
fbstp
movsl
pop
aaa
out
mov
push
std
mov
sub
jge
out
mov
out
call
sbb
fnsave
push
inc
lea
fcmovne
adc
sbb
xlat
sub
orl
cs
sbb
add
rolb
add
adc
dec
adcb
and
lds
inc
imul
or
rcrl
popa
iret
add
rorb
pop
stc
or
jge
cmpsb
rcrl
mov
insb
test
add
das
dec
jp
jno
shlb
sub
add
mov
icebp
cli
push
aas
mov
xor
addl
fneni(8087
addb
lods
cmp
nop
mov
add
jp
xchg
xchg
mov
add
pusha
ss
xchg
mov
add
cmp
fwait
add
int
jmp
incl
and
sbb
cmp
and
xchg
shll
push
xor
push
sub
push
push
sub
sti
jb
pop
lcall
stos
cli
bound
push
popa
cmp
and
lea
dec
ret
mov
out
xchg
push
sub
lcall
repnz
jle
ss
in
add
les
rcrb
push
lock
addb
add
add
xchg
and
icebp
ljmp
paddd
out
bound
mov
jmp
test
mov
pop
jge
add
push
add
stc
mov
std
sarl
dec
cltd
jmp
ret
pusha
cmp
add
mov
xchg
jge
lret
add
movsl
clc
push
cmp
cmp
inc
add
mov
enter
push
cwtl
out
dec
xchg
mov
add
add
cltd
inc
stc
test
scas
sbb
mov
mov
pushf
jmp
add
clc
out
das
mov
sub
sbb
test
mov
mov
dec
add
into
sbb
cltd
add
sub
add
aas
add
sbb
sbb
incb
cmp
or
fistpll
jg
add
add
pop
je
enter
pop
iret
add
mov
test
lret
lret
enter
xor
add
lret
add
lret
adc
add
es
jne
push
cmp
add
inc
cltd
add
or
pop
mov
sar
cmpsl
mov
sbb
hlt
cld
xchg
aaa
inc
jae
mov
add
add
sbb
mov
xchg
orb
cmp
fwait
add
in
cmp
jo
sub
and
mov
std
clc
sbb
fst
add
les
pushl
mov
add
jmp
into
lods
pop
cmp
add
mov
inc
sub
outsb
cwtl
mov
jmp
roll
idiv
bound
addr16
pop
push
mov
xchg
pop
mov
sti
xchg
ret
movsl
shl
xchg
jge
pop
dec
add
lret
jb
push
int3
jmp
add
lret
in
xor
lret
jo
adc
jmp
and
xchg
aas
clc
xchg
jmp
jg
movsb
das
mov
dec
and
cmp
cwtl
mov
jmp
mov
add
add
movsb
jl
popf
out
frstor
vpmaxub
xchg
negl
out
div
jge
inc
jmp
mov
mov
sub
jmp
fcmovu
add
mov
subl
push
add
mov
adc
push
aas
add
mov
or
dec
inc
add
mov
add
jnp
mov
add
mov
pop
sbb
push
int
pop
pcmpgtb
es
push
inc
add
mov
mov
test
xchg
add
jmp
or
cli
decl
pop
pop
mov
jge
je
iret
jge
jae
mov
or
clc
add
mov
push
add
xchg
out
int
inc
adc
add
push
dec
jo
cli
add
mov
and
dec
mov
dec
adc
or
push
mov
push
mov
cmp
or
add
mov
add
sub
lea
mov
test
leave
repz
decl
xchg
add
mov
mov
and
add
mov
mov
mov
add
je
or
cwtl
add
mov
mov
add
pop
insb
jmp
and
in
mov
xchg
sub
shlb
fstl
jg
stos
mov
add
xor
js
jp
fs
cltd
imul
jp
adc
jp
lret
repnz
xchg
inc
loope
bound
add
add
lret
call
loopne
into
sbb
bound
lret
jmp
mov
sub
dec
into
cli
dec
sub
call
into
adcb
lret
jmp
out
push
lods
insb
pusha
in
jns
movsb
gs
mov
xorb
jmp
test
ljmp
sbb
ror
mov
xchg
mov
jb
andl
add
scas
sbb
push
sbb
xchg
movsb
mov
pop
incb
mov
add
iret
dec
ss
xchg
jmp
push
sub
je
xor
gs
mov
push
or
std
mov
cmpsl
fdiv
xchg
cs
sbb
jmp
inc
in
add
repz
test
or
push
mov
dec
mov
or
pop
sbb
inc
lea
js
push
inc
int3
and
fwait
loopne
mulps
pop
ret
jge
outsl
lahf
testl
mov
xchg
mov
imul
jl
in
lcall
adc
mov
add
stc
jne
pushf
add
jmp
cli
incl
call
add
push
pop
cli
pop
out
add
cmpl
loopne
movlhps
mov
fdivrl
jecxz
mov
add
mov
and
movsb
jbe
mov
add
outsb
enter
sbb
pushl
sub
mov
add
jo
add
xchg
lods
rcll
cmp
mov
xor
icebp
add
and
add
pop
xchg
js
mov
add
inc
movsl
js
mov
add
sub
icebp
and
xchg
aad
fs
lock
mov
clc
cmpsl
rolb
inc
mov
cmp
lret
sub
cs
add
push
cmpsb
pop
xchg
push
sahf
pop
mov
imul
add
movsl
push
mov
lret
sbb
popf
pop
mov
out
int
add
push
adc
mov
add
mov
xorb
jne,pn
ljmp
pop
lock
mov
pushf
mov
xchg
out
push
mov
lret
adc
sub
lds
jge
xchg
loope
popf
insl
rcl
bswap
insl
pushf
add
aad
inc
jmp
outsb
sarb
mov
add
mov
push
pop
add
call
xor
sbb
cs
call
gs
jl
scas
lret
add
inc
jo
dec
lret
and
mov
cmp
mov
mov
or
lret
add
sub
sbb
imul
sbb
pop
push
sarb
jmp
enter
jno
jge
add
mov
in
int3
movl
add
sbb
sub
jg
mov
jg
mov
loope
push
call
adc
add
mov
add
jo
or
test
decb
push
ljmp
dec
sbb
cmpsl
jg
call
add
or
nop
xchg
and
inc
jnp
cmp
cld
pop
mov
inc
call
leave
adc
shll
dec
adc
fstps
shll
add
mov
jae
mov
in
rcrl
cmp
add
cld
sbb
aam
mov
jne
xchg
cld
test
insb
inc
aas
push
add
jmp
jb
sbb
movsb
stc
cmpsl
add
inc
mov
daa
cmp
mov
scas
mov
xor
lret
cmp
outsl
cld
ret
adc
add
cmp
out
fdivr
mov
push
mov
in
fidivl
sbb
lcall
mov
push
lods
mov
adc
mov
mov
add
add
lret
pop
inc
and
into
stos
fwait
mov
leave
mov
stos
mov
hlt
jle
iret
bound
and
adc
xor
jae
adc
iret
pusha
adc
cmc
jo
stc
and
cmp
add
cmc
push
push
cmp
dec
repnz
adc
dec
xchg
movsl
fwait
adc
scas
out
shl
insl
add
negl
add
jae
dec
std
call
test
push
sahf
out
std
cmp
stos
in
sbb
stos
in
sbb
and
mov
xor
negl
pop
pop
clc
jge
fldt
mov
clc
out
pop
adc
scas
dec
rcrl
jns
or
add
mov
adc
or
add
sbb
mov
out
stc
call
cmp
and
jle
rclb
add
jge
iret
jb
cmp
sbb
dec
or
inc
fistpl
ljmp
mov
je
adc
aam
add
mov
and
cmp
jns
push
rolb
xchg
fwait
jno
pop
add
arpl
clc
lahf
sub
inc
mov
cmp
inc
cwtl
mov
pop
sub
mov
cmp
sbb
mov
sbb
test
or
jg
in
call
push
fsts
mov
test
sub
es
cwtl
add
test
aaa
xor
nop
mov
add
pop
nop
push
or
mov
jnp
fmull
push
mov
aam
jne
cmp
mov
nop
shl
lret
nop
outsb
pop
push
cli
es
into
mov
jg
add
cli
sbb
int3
inc
lahf
inc
outsb
out
sbb
and
or
loope
mov
sub
push
pop
in
incl
pop
aam
inc
imul
lret
add
add
sti
mov
std
fs
jg
add
adc
shl
adc
jle
cvtpi2ps
das
jns
out
xchg
sti
pop
fisubrs
push
add
xchg
mov
dec
je
lock
jmp
xchg
jle
dec
push
clc
aam
mov
pop
jmp
pushf
pop
mov
loope
lret
test
add
mov
sbb
mov
scas
mov
imul
and
inc
scas
andl
lret
inc
outsb
lods
push
bound
pop
fnsave
sbb
add
adc
add
mov
dec
push
jge
mov
sti
add
add
dec
shll
shr
iret
add
enter
out
stc
jne
adc
popf
or
add
jae
add
lcall
je
jb
xlat
jecxz
pop
and
sbb
cmc
push
mov
push
and
insb
sahf
add
sub
jle
and
bound
fistl
stc
test
push
mov
dec
adc
xor
out
pop
jle
ret
pusha
ljmp
mov
das
imul
sldt
add
add
clc
out
dec
gs
sub
pop
or
enter
subb
fs
cltd
fs
lea
stc
incl
test
rclb
sub
fs
pop
mov
fsubrs
call
jbe
into
cld
cltd
aas
vpsrad
pop
cmp
das
daa
pusha
lods
push
aas
pop
push
add
push
sub
ss
pop
sub
mov
aaa
add
pop
push
stc
push
imul
push
jg
mov
mov
jl
xchg
popa
rcrl
aaa
dec
xchg
xlat
sarl
add
pop
les
enter
mov
repnz
aad
orl
jae
sbb
mov
mov
ficompl
adc
add
push
repnz
pop
push
outsl
test
lds
out
pushf
inc
bound
cli
lock
or
test
mov
mov
stc
or
fildl
add
loop
out
lahf
mov
dec
or
add
mov
xchg
mov
inc
xor
mov
adc
xchg
lahf
or
cli
mov
repnz
fldcw
xchg
or
mov
stc
in
aam
mov
or
and
leave
insb
ljmp
mov
push
enter
cwtl
roll
int3
add
cwtl
or
jmp
inc
stc
or
jne
xchg
mov
je
adc
add
adc
enter
sbb
inc
or
sbb
cmc
lcall
fst
rclb
xor
in
adc
mov
rclb
gs
fwait
movsl
testl
leave
push
inc
or
mov
pop
ret
push
mov
jp
add
jne
inc
stc
or
outsb
call
cmp
shlb
sarb
call
add
add
jl
scas
adc
das
movsl
add
out
not
test
icebp
shrl
push
add
mov
jne
jnp
or
inc
fs
test
aaa
add
xchg
sub
mov
jg
xor
inc
cmp
clc
xchg
mov
or
mov
out
fcmove
cmc
add
xchg
ret
call
pop
std
fdivrl
addr16
test
jp
inc
cwtl
sti
jb
push
sahf
repnz
pop
cmp
in
mov
add
jge
pop
and
not
cld
divb
push
repnz
cltd
add
and
sub
pop
stos
xchg
mov
add
dec
xlat
ret
adc
mov
xor
push
add
lret
in
pop
addr16
pop
inc
popa
out
bound
xchg
jle
hlt
mov
cmp
cmc
sbb
dec
shll
or
les
lds
icebp
clc
or
mov
mov
out
or
adc
faddp
sahf
sahf
dec
dec
std
cld
mov
scas
inc
or
push
cmp
cld
dec
bound
gs
xor
movsl
mov
and
inc
ret
stc
mov
pusha
mov
fstl
pop
pop
add
es
and
daa
adc
clc
mov
mov
cli
je
adc
push
add
pop
je
mov
and
adc
push
inc
daa
dec
cmp
or
fwait
and
add
add
xchg
jge
xor
push
incl
dec
mov
push
xor
push
push
incl
add
pop
jge
adc
ljmp
jmp
pop
adc
mov
adc
je
out
inc
xchg
xchg
jns
aaa
fisubs
adc
movsl
movsl
mov
lcall
xor
mov
cmp
adc
jnp
clc
add
jge
jl
movsb
ja
push
pushf
jns
sbb
jns
fucomp
jae
add
shrb
hlt
xchg
jb
mov
sub
jns
and
stos
mov
das
fiaddl
loopne
push
fistps
test
clc
arpl
or
lret
sahf
mov
push
out
jl,pn
mov
push
nop
adc
mov
xchg
fbstp
add
sbb
adc
mov
mov
arpl
js
push
mov
jb
add
mov
fimuls
ficoms
jnp
and
pop
arpl
sbb
mov
flds
out
jb
mulb
xchg
rorb
into
pushf
test
add
mov
bound
loop
jmp
jb
jae
iret
nop
test
jg
std
call
dec
cmp
call
mov
inc
insl
pop
lock
dec
shr
dec
add
mov
dec
inc
pop
enter
movsb
mov
sti
inc
adc
sbb
or
push
inc
push
push
adc
sub
sub
mov
mov
inc
add
mov
iret
jmp
aad
and
jecxz
movl
jecxz
negb
negb
jae
cbtw
hlt
call
and
or
fistpl
hlt
pop
push
inc
call
lock
or
pop
add
inc
lock
inc
dec
lock
gs
mov
test
shl
std
lcall
jmp
divl
nop
inc
push
xor
pop
inc
pop
inc
push
jle
pop
inc
dec
push
icebp
test
sbb
jmp
adc
mov
test
shlb
movsb
jg
out
pop
mov
xor
xor
mov
test
mov
push
fstl
dec
mov
pusha
test
jge
mov
mov
add
cld
push
call
das
mov
add
mov
in
addl
repnz
clc
xor
mov
jne
out
aas
dec
and
or
scas
push
pop
into
xchg
out
aas
imul
and
sub
rcll
ret
xchg
mov
incl
orl
push
int3
sub
decb
sub
lds
add
in
outsb
scas
aad
mov
jmp
inc
jbe
aad
mov
jmp
add
xchg
dec
pop
das
jo
inc
add
test
pop
pop
pop
mov
pop
pop
mov
popa
imul
dec
pop
dec
push
add
and
bound
and
sub
sbb
std
dec
pushl
push
inc
or
add
adc
add
sbb
sbb
jno
jge
mov
add
push
inc
int
adc
mov
cli
int
jle
scas
jge
mov
cmpsb
jmp
filds
loope
out
and
popf
adc
add
cmp
jmp
xchg
nop
xchg
mov
add
adc
sub
cli
je
jae
push
dec
jge
adc
loop
add
jle
mov
and
mov
dec
cli
je
push
inc
and
jae
mov
dec
push
dec
daa
jge
jg
dec
mul
pop
add
mov
push
ds
xor
decl
lds
insb
and
cltd
xchg
mov
jg
sub
dec
lods
sbb
stos
cmp
cmp
dec
mov
jmp
lods
adc
insb
scas
gs
shlb
lcall
or
xchg
and
jmp
mov
mov
adc
lods
in
jmp
mov
das
xor
popa
stos
lods
add
push
jmp
hlt
dec
jge
int
add
mov
das
xor
dec
sub
sbb
jno
dec
in
gs
int
add
mov
das
mov
sbb
out
push
jge
and
int3
das
imul
pop
pop
das
or
adc
push
loop
in
jb
jecxz
outsb
daa
sahf
push
out
mov
dec
sub
cmc
adcb
push
jmp
sub
mov
out
fildll
push
add
lret
jae
push
or
mov
inc
cli
mov
sti
addb
ss
ljmp
add
test
mov
inc
and
bound
sub
push
mov
imul
mov
sbb
xorb
cltd
pop
stos
lahf
test
jbe
loopne
test
clc
decb
xchg
mov
push
jle
call
sub
mov
fdivr
clc
jb
dec
enter
cmp
fs
test
or
divb
pop
sbb
jb
jns
jb
test
sub
dec
mov
lret
inc
xchg
mov
pop
fadd
jbe
into
sub
lret
pop
xchg
loope
jne
clc
sbbb
addb
dec
idiv
fwait
cmp
sbb
inc
and
arpl
add
inc
xlat
loopne
add
inc
jmp
xchg
add
jge
sbb
jno
dec
or
add
repnz
fdivl
lea
int
leave
jecxz
test
inc
dec
jmp
test
cmp
mov
xor
dec
cmp
push
filds
shll
jmp
cmp
push
sti
sbb
lret
xor
loop
dec
xchg
push
and
mov
or
jae
add
out
and
and
inc
call
push
enter
mov
pushl
and
test
daa
sbb
subb
inc
jne
add
and
shll
push
mov
and
ret
pop
mov
mov
std
pushl
in
mov
xor
mov
sub
and
int3
js
mov
push
xlat
add
xchg
cmpsl
in
and
jmp
pop
jnp
jbe
dec
lret
jmp
ret
gs
pop
mov
push
sub
iret
movsb
inc
mov
inc
sub
mov
mov
clc
std
testl
xor
shr
rcl
scas
insb
rcl
sbb
jle
shll
jae
mov
xchg
push
popf
insb
popa
mov
push
aaa
xchg
xchg
out
jle
mov
jae
push
xchg
push
mov
sbb
outsl
jne
mov
push
pushf
push
sbb
jo
sub
jmp
std
dec
stc
jo
stos
and
add
add
aam
lahf
mov
add
in
mov
bound
jge
lods
dec
sbb
out
sub
sbb
push
pop
sbb
out
lret
add
stos
adc
adc
or
jge
mov
out
fcmove
add
cmp
cmp
and
push
or
push
dec
cmp
or
test
enter
mov
std
mov
inc
cmpsl
ja
add
add
iret
enter
jno
add
dec
ljmp
insl
add
jl
out
mov
push
push
inc
lea
movl
mov
push
inc
and
jo
add
leave
jge
mov
mov
enter
pop
divb
out
stc
push
mov
ja
inc
mov
add
mov
jo
and
loope
gs
inc
out
test
mov
ljmp
in
loope
dec
addl
or
xchg
inc
mov
pop
dec
bnd
add
sarb
test
cmp
divl
pop
or
lods
dec
aaa
scas
and
dec
adc
pop
mov
lret
add
add
jge
cltd
mov
cmp
decl
nop
xchg
pop
xchg
jl
mov
icebp
adc
inc
adcb
mov
shrl
scas
add
add
inc
scas
pop
mov
sbb
dec
ja
fsubr
pop
iret
push
icebp
int
jmp
lods
jecxz
add
fiadds
xchg
scas
mov
push
add
adc
sti
push
shrb
cmp
push
adc
push
ljmp
jnp
mov
rcr
sbb
add
add
jp
push
adc
leave
cli
jmp
inc
inc
int
jb
jge
je
sub
jge
test
scas
lret
add
or
dec
add
nop
inc
repnz
ljmp
add
add
fildll
lods
mov
xchg
cli
js
cmc
jns
add
inc
repnz
jmp
bound
scas
or
cli
lods
adc
popf
ret
idivl
push
dec
cmp
add
cltd
aas
stc
push
filds
maxps
call
je
jmp
cmp
xlat
cmp
add
ret
inc
jge
lret
int
mov
xor
adc
pop
pop
jbe
ja
ja
add
fdivs
jge
sbb
test
mov
push
push
add
jle
rorb
jmp
lea
adc
inc
insl
pushl
xchg
jbe
or
stc
stc
add
xchg
mov
add
bound
jg
jne
mov
sub
add
and
add
dec
test
mov
lods
push
fs
cwtl
and
bound
cmp
addr16
bound
sub
and
lahf
push
stc
test
inc
push
sub
jne
cmp
and
pop
mov
pop
std
sub
add
mov
inc
mov
push
cmp
pop
insl
add
lret
sbb
das
pushf
push
js
lret
jmp
sub
arpl
push
sti
ja
push
aaa
xchg
fbstp
inc
push
sub
sbb
add
inc
push
sub
dec
test
mov
inc
xchg
pop
or
jmp
jmp
testl
jge
lret
jmp
push
cmp
pop
pop
add
mul
dec
sahf
daa
add
loope
mov
push
mov
repz
mov
int
outsl
xor
mov
push
out
out
sub
stc
add
mov
clc
call
aaa
xchg
add
mov
jp
push
clc
leave
cmpsl
out
stc
subb
sbb
scas
pop
int3
mov
cmc
dec
cmp
fstl
jb
arpl
add
loop
jge
pop
mov
push
xchg
and
clc
jge
xchg
add
mov
cmp
push
dec
pop
adc
pop
fisttpll
mov
adc
xchg
xor
call
jnp
adc
nop
ss
repz
in
dec
dec
and
dec
mov
fcmovne
call
lea
lret
xor
push
incl
sub
dec
and
inc
loope
fcmovne
jge
push
push
or
cmp
push
mov
mov
xor
pop
sbb
movhps
sub
pop
lods
insb
pushl
lods
sub
daa
lods
inc
push
mov
or
aas
mov
scas
out
push
push
stc
xor
mov
jl
into
jns
pop
jno
jmp
stc
add
clc
clc
add
inc
shl
mov
and
pop
mov
cld
clc
enter
cmpsb
pop
imul
add
cmpsb
bound
add
push
sub
jb
or
out
sub
jbe
dec
into
jle
mov
into
mov
mov
pop
sub
lret
out
xchg
inc
data16
lret
jmp
rolb
add
add
adc
mov
js
scas
fldl
or
ljmp
sbb
dec
and
ljmp
fs
sub
inc
repnz
je
lock
jmp
sub
xor
add
jb
js
cmpsl
icebp
cmpsl
or
dec
imul
sti
add
xchg
add
mov
fldt
pop
pop
adc
mov
out
sub
mov
sbb
jmp
sbb
je
sub
rcrb
dec
add
addr16
add
mov
sarl
inc
add
js
mov
pop
ret
xor
rcl
dec
insb
bound
add
add
int3
add
stc
jo
data16
dec
cmp
or
cli
pop
sbb
decl
cld
add
dec
dec
shll
inc
and
push
rcrb
fiadds
pop
push
mov
scas
nop
sbb
add
and
jle
out
imul
fcmovnb
add
jae
shrb
adc
sahf
leave
jge
push
pop
test
add
mov
push
pop
add
inc
lea
mov
lret
int
fildll
inc
std
and
mov
je
pop
stc
adc
mov
dec
adc
jne
jmp
call
ja
movsl
out
add
addb
fcoml
stc
cmp
sbb
daa
sbb
cmpb
mov
idivl
sti
std
cltd
push
movsl
pop
sub
ss
inc
or
mov
xchg
sti
add
sub
outsb
xchg
dec
mov
iret
and
add
icebp
add
gs
mov
dec
lret
jbe
mov
push
dec
jmp
cmpsl
stc
mov
testl
dec
pop
jo
inc
int
inc
add
xchg
mov
ss
repz
jo
mov
arpl
mov
rcr
add
mov
out
push
jae
rol
cmp
jo
cld
xor
add
leave
pop
dec
add
adc
aam
ljmp
dec
xchg
outsl
ljmp
xchg
out
outsb
gs
emms
inc
cld
add
je
and
imul
add
add
dec
in
roll
stc
call
jle
hlt
je
mov
sub
jmp
add
cmpsb
test
lahf
cmpsb
je
insb
jno
jl
mov
add
je
gs
add
mov
ss
mov
mov
arpl
and
je
and
sbb
pop
inc
jle
jne
clc
cmp
add
sti
clc
add
push
adc
movl
lea
mov
shrd
stc
mov
jne
pushf
pushf
or
repz
hlt
and
pusha
cmp
enter
idiv
scas
test
lret
lret
decl
adc
jle
imul
aaa
repz
call
add
fmull
sbb
mov
lods
inc
fcom
leave
add
adc
fadds
lret
leave
add
mov
pusha
lods
arpl
jle
cmp
aad
cmovb
rorb
cli
add
mov
mov
pop
or
add
push
mov
in
rclb
mov
cmp
arpl
xorl
aad
xor
add
mov
pop
pop
and
jge
data16
xorl
add
and
subl
and
aad
inc
push
jb
jns
cmp
or
cmc
xor
add
cmpsl
sub
inc
fwait
ds
sbb
ret
jge
sub
xor
add
cmpsl
fnsave
add
std
adc
insb
sbb
mov
ljmp
cmpsl
sarl
sbb
rorl
pushf
mov
movsbl
sbb
xchg
mov
ljmp
cmpsl
sbb
sbb
xchg
add
lods
sbb
mov
cmpsl
push
sbb
cmp
jge
mov
add
scas
cmp
sahf
dec
push
call
add
fwait
test
inc
repz
ror
push
pop
inc
mov
inc
call
mov
adc
add
sbb
mov
mov
lds
clc
jne
sti
push
testb
sub
dec
add
mov
mov
mov
xor
rorb
lret
into
add
add
mov
add
cmpsl
pop
gs
xchg
call
mov
iret
sub
fwait
shll
je
xchg
jae
popa
mov
jne
or
clc
test
pop
inc
jnp
sbb
movl
or
xchg
adc
add
xchg
jge
and
jmp
mov
mov
in
je
aaa
stc
mov
cmp
mov
sub
outsb
xchg
inc
mov
jne
int
xchg
add
cmpsb
sti
pop
push
mov
and
dec
inc
inc
lahf
push
xchg
jg
jle
inc
leave
scas
sti
pop
sub
loopne
sub
loopne
mov
sbb
je
jbe
or
mov
loopne
add
inc
loopne
repnz
dec
or
aaa
loopne
jmp
roll
sub
pop
cmp
aas
cmp
loopne
fs
jb
bound
sbb
adc
in
push
loop
insl
shll
xchg
fwait
sbb
das
adc
pop
mov
aam
inc
std
ret
enter
ret
or
movsbl
loop
fiaddl
rcrl
scas
push
push
jae
add
decb
es
popf
pushw
mov
sub
ja,pn
xor
leave
jmp
ret
sub
sbb
ret
sbb
push
add
sub
icebp
ja
fdivrl
shrl
clc
xor
call
jmp
jb
jmp
outsl
push
pop
in
jg
fidivl
mov
out
fs
in
mov
mov
lret
repnz
dec
jbe
jge
mov
lret
test
clc
push
call
jae
mov
mov
push
add
jb
fs
stc
xor
or
add
cs
add
orl
fmull
add
lret
jge
or
add
add
inc
push
mov
xlat
andl
aad
ret
jnp
test
cmpsb
stc
push
push
push
adc
sub
pop
xor
mov
dec
push
cmpsl
jne
imul
test
hlt
incb
xchg
adc
mov
xchg
xchg
in
fs
lret
push
jl
cli
aad
rolb
inc
mov
mov
sbb
aaa
push
adc
je
sarb
clc
das
inc
stc
cmc
insb
xchg
dec
ljmp
shlb
sbb
inc
mov
shl
fidivrl
ret
mov
jge
test
std
jb
cmp
sbbb
aaa
stc
cmp
aaa
dec
stos
jmp
or
add
inc
and
addl
add
add
adcb
cmpsb
ss
lcall
xor
into
scas
ds
test
or
or
mov
cmp
fsubl
jmp
fnsave
sub
cmp
lret
jo
sub
xor
cmp
stos
fs
add
push
jge
push
dec
mov
add
aam
add
dec
stos
mov
add
push
ljmp
push
dec
xlat
insl
cmp
mov
add
fs
pop
daa
push
jb
dec
lret
shrl
xchg
stc
dec
mov
std
xor
frndint
popa
mov
scas
insl
jmp
lea
out
in
cli
movntq
out
add
mov
add
add
mov
ljmp
pop
loop
lock
dec
rcll
xchg
mov
mov
cmp
jo
add
add
test
decb
sub
call
add
and
cmp
jae
ret
in
cld
decl
push
fsts
jp
je
jb
call
in
push
add
pushf
adc
int
pushf
mov
stc
cmp
mov
push
in
sbbl
cmpsb
xor
lea
clc
mov
iret
cmp
push
jnp
jg
sub
jg
sub
cmp
mov
mov
jg
test
add
jae
pop
fistpll
add
add
popl
mov
mov
stc
pushf
push
pushl
dec
clc
pushl
sbb
test
push
adc
cmc
loope
jg
rolb
mov
cmp
adc
pushl
or
in
lret
add
cmp
xchg
mov
jnp
jne
js
add
lret
popa
xor
test
add
lret
in
inc
fcomp
test
jmp
cmp
popa
cmp
or
add
repz
jno
push
outsl
into
mov
mov
push
or
cmp
test
add
lret
mov
or
cmp
pusha
mov
add
or
jle
out
cmc
jb
add
mov
es
cli
add
in
push
loopne
lret
mov
int
mov
pushf
jge
stos
inc
ss
mov
add
int3
insl
loopne
in
jge
mov
mov
push
cmp
movsl
or
stos
sbb
mov
add
movsl
xlat
adc
dec
sbb
jmp
aad
pop
stos
sub
int3
sbb
add
xor
sbb
cmp
add
xlat
xor
mov
repz
dec
jno
dec
sahf
lods
decl
sub
loopne
add
cmp
mov
push
incl
push
cmp
rcrb
inc
mov
push
incl
sbb
dec
lret
add
addr16
xchg
add
lret
stc
mov
out
idiv
sbb
clc
or
test
mov
clc
incb
lahf
divl
lods
and
enter
fistpl
lret
push
xor
inc
iret
stc
adc
mov
xor
push
imul
stc
jne
inc
pop
or
int3
std
pushl
and
add
xchg
rcll
and
adc
test
std
or
movl
stos
dec
add
or
je
les
je
ljmp
cld
clc
in
adc
jmp
js
mov
add
ds
subl
imul
ljmp
icebp
push
mov
add
mov
int
mov
jmp
mov
push
scas
fisttps
or
xorb
mov
cmpsl
fldl
dec
mov
xor
push
lea
or
or
scas
int
jbe
cltd
push
loopne
jo
xchg
shr
mov
or
xchg
mov
inc
cmpsb
lret
xlat
inc
arpl
cmp
xor
mov
push
add
fisttps
sbb
pop
mov
xchg
sbbb
pop
negl
stos
lret
orl
punpckhwd
lret
add
mov
imul
pop
clc
jmp
ds
inc
or
mov
fdivp
cs
inc
mov
xchg
mov
add
loop
shll
add
lods
jecxz
test
add
xlat
jns
cmp
inc
shlb
insl
or
mov
leave
idiv
lret
sub
fildll
push
adc
and
ret
iret
adc
mov
adc
dec
sub
mov
imul
sbb
pop
add
dec
cld
add
add
jl
dec
mov
mov
adc
into
push
insl
adc
add
sbb
aas
inc
fimuls
pop
mov
clc
mov
inc
lret
stc
call
mov
adc
xor
int
loop
inc
and
mov
xchg
mov
xor
cmp
enter
ds
mov
add
push
add
push
xor
jb
fidivrl
dec
incl
xor
in
mov
sub
pop
ja
test
mov
stc
mov
adc
enter
shr
inc
stc
cmpsl
ror
dec
cmpl
cmp
mov
std
test
adc
lds
test
sbb
xor
aaa
shlb
lods
out
cli
cs
push
xor
add
mov
bound
xor
pushf
add
add
mov
fisubs
sbb
sub
fs
adc
or
lret
jmp
fcmovnu
pminsw
rcl
ret
dec
inc
pop
mov
not
sub
push
adc
add
popf
and
pop
xor
in
imul
fistps
mov
sub
adc
decb
lds
adc
add
repz
stos
fisttpll
cmp
xlat
pop
shrl
push
and
stc
sbb
mov
push
sub
push
push
pop
pushf
or
push
loope
mov
add
sub
popf
call
jb
dec
out
frstor
add
push
lahf
pop
mov
push
test
fs
adc
mov
pop
jmp
jle
jmp
ljmp
xchg
pop
mov
lret
inc
andl
push
mov
jg
jmp
mov
jge
insb
pop
and
push
and
mov
lret
add
mov
add
sub
inc
add
mov
inc
and
push
cmp
test
add
fcompl
insb
inc
mov
jne
adc
jle
and
int3
push
and
dec
jne
pushl
lds
rcrb
scas
or
aaa
lods
scas
add
test
jnp
fldcw
lret
sbb
mov
inc
pop
or
lret
push
jo
add
sub
into
dec
cld
xchg
int
imul
add
add
sbb
mov
out
je,pn
mov
shrl
ss
xchg
clc
mov
mov
sbb
jmp
xor
add
ret
xor
push
sbb
lret
jmp
mov
std
push
scas
mov
cld
negb
push
mov
add
lret
imul
leave
cld
into
sbb
mov
add
add
aad
mov
inc
stos
lret
fiadds
adc
lret
cmp
inc
pushl
repz
out
adc
or
lret
add
pop
mov
jb
xchg
push
popa
scas
xchg
mov
xor
lds
sub
ljmp
cli
mov
jmp
lret
div
popf
lds
sub
jmp
add
sbb
insl
ficoms
jmp
cli
push
pop
gs
lret
add
ret
mov
ret
aaa
ret
scas
lret
add
mov
jae
mov
cmpsb
fisttps
popf
dec
shl
jae
jmp
gs
add
scas
iret
add
mov
mov
push
or
lret
add
mov
sub
arpl
stc
incl
mov
daa
push
inc
or
setg
add
sbb
inc
and
bound
js
mov
je
cmpsl
and
inc
lret
bound
jo
mov
je
rclb
insb
ja
clc
mov
rolb
push
repz
jne
aam
and
rolb
rorb
and
jmp
insb
and
dec
shll
and
cld
mov
add
je
mov
je
aas
jle
dec
mov
in
pop
or
jns
into
icebp
int
sarb
ds
hlt
inc
clc
test
adc
in
leave
js
mov
sub
loopne
sub
fists
imul
mov
fmuls
adcl
xorb
rcrl
add
add
leave
or
dec
movsb
or
lods
fistpll
jne
js
pop
mov
shlb
mov
inc
dec
mov
jmp
shlb
push
les
cmp
in
jle
push
aad
mov
ljmp
int3
jmp
add
lret
jb
lods
inc
xchg
fbld
push
ljmp
cmpsl
aad
sub
fiaddl
mov
fidivs
lods
or
mov
lret
fs
push
mov
cmpsl
shll
inc
adc
xchg
adc
mov
add
lret
mov
sub
bnd
pop
mov
in
into
in
decb
les
pop
mov
or
jg
push
cmc
les
add
shl
lods
inc
mov
fiadds
mov
div
add
pop
sbb
fmull
mov
insl
mov
dec
pop
dec
xlat
imul
cli
lods
sbb
es
add
mov
mov
mov
add
inc
lods
adc
inc
lods
or
push
lods
sbb
inc
lods
adc
push
inc
mov
add
adc
or
pop
sub
sbb
xorl
insb
xor
and
dec
add
fnstsw
rcrb
and
jo
jne
sbb
inc
je
adc
nop
mov
orb
sbb
outsl
jg
test
fstl
push
mov
push
mov
loopne
jg
mov
jge
cmpsl
imul
mov
push
incl
into
shlb
call
adc
add
push
xchg
std
mov
sub
xor
std
lret
lahf
rolb
inc
mov
mov
xchg
leave
shlb
mov
pop
mov
aam
jbe
fsubl
rolb
sbb
pop
add
fs
lahf
call
lret
loope
adc
push
jne
xchg
je
test
lea
xchg
push
jnp
xchg
incl
mov
ret
gs
fstpt
push
lret
fsts
fs
cmpsb
lret
rolb
rolb
outsb
add
lret
inc
std
addr16
ljmp
leave
jmp
add
sbb
xchg
add
lret
inc
clc
push
ljmp
lret
jmp
adc
mov
lds
aaa
jnp
rcl
mov
jne
int3
jmp
add
popa
add
jmp
jge
int3
jmp
add
xlat
fcompl
cs
sub
pusha
pmulhuw
jmp
mov
add
filds
jmp
lods
inc
inc
int
inc
dec
lds
lret
add
call
xchg
scas
lret
add
repnz
lods
clc
cmc
ret
mov
push
xchg
out
insl
or
mov
mov
clc
jmp
in
dec
clc
jmp
fisttpll
jmp
cld
push
push
mov
xchg
xchg
pop
mov
add
inc
cmp
add
imul
out
push
mov
xchg
ffreep
push
or
adc
push
adc
int
je
dec
jne
add
or
and
dec
push
test
dec
enter
pop
idiv
sbb
cmp
pop
push
mov
add
ret
adc
inc
sbb
loope
add
push
push
and
ljmp
xchg
bound
sbb
in
xor
xor
cmpsb
or
mov
and
call
add
sbb
add
fwait
jbe
add
mov
sbb
cmc
mov
xor
or
enter
mov
mov
pop
add
and
aaa
jbe
jge
xor
inc
xor
arpl
mov
test
xor
popa
add
jmp
add
mov
test
xor
add
fcmovnb
add
mov
push
add
lods
mov
sub
sbb
mov
mov
mov
call
lds
mov
jmp
lods
push
or
and
lret
jmp
add
dec
xorl
dec
mov
lret
int3
in
stos
pop
add
dec
into
out
fidivl
xorb
and
std
test
rcrb
cld
in
dec
adc
lret
jmp
add
lret
add
xchg
shl
nop
lret
mov
add
leave
testb
add
mov
testb
mov
scas
and
dec
dec
sahf
push
or
bound
xor
adcb
mov
fs
clc
data16
add
add
sbb
leave
mov
mov
clc
aad
andl
mov
jmp
push
shrb
push
sub
and
ret
fildll
aas
push
add
push
sbb
int3
ljmp
fcoml
dec
ljmp
mov
out
xchg
add
in
stc
pushl
stc
decl
decl
stc
iret
add
cmp
ja
jge
addr16
add
or
int3
add
dec
jecxz
sbb
xor
add
int3
add
jnp
add
xchg
fisttpll
lcall
test
in
stc
incl
fidivrl
loopne
stc
push
sbb
and
int
nop
and
fldenv
stc
mov
daa
push
add
mov
add
cmp
test
sub
mov
nop
xor
add
addr16
add
scas
and
push
xchg
dec
sub
cli
cmpl
data16
mov
pusha
mov
and
cmp
sub
adc
fadds
add
nop
mov
sub
adc
int3
clc
mov
sbb
fcmovu
ss
add
dec
inc
sub
sarb
outsb
out
jge
sub
call
hlt
sub
out
mov
pop
cmp
lret
jb
pop
sub
mov
out
rcll
mov
stos
or
rolb
add
int3
bound
adc
adcl
enter
pop
int3
int3
push
pop
and
stos
xchg
scas
mov
push
mov
pop
sub
inc
sbb
imul
add
dec
inc
jmp
mov
xchg
mov
push
enter
testb
mov
insb
or
adc
popa
iret
add
mov
mov
mov
add
sahf
call
bound
adc
cmp
scas
lock
xchg
fdivrs
cld
jno
test
sbb
icebp
lret
mov
add
cmp
sbb
iret
xor
cltd
idiv
xor
inc
jmp
rorl
or
add
std
les
repz
jae
push
xchg
inc
sbb
sbb
jge
xor
pop
add
call
sub
sub
fidivrs
shll
je
and
je
fidivrs
outsl
iret
insb
or
add
roll
decl
loop
jg
enter
enter
iret
and
or
out
test
enter
sub
push
pop
cmp
mov
loopne
adc
es
ljmp
repnz
add
outsb
loopne
mov
push
mov
jecxz
sub
orb
add
add
mov
fdivl
mov
movsb
in
lods
mov
and
cmp
cmp
call
aaa
jae
hlt
or
sub
dec
mov
cmpl
mov
adc
add
mov
push
repnz
ficoms
aaa
int3
jmp
add
push
cmpsb
out
mov
adc
faddl
sbbb
add
lods
sbb
out
stos
adc
jmp
add
mov
add
loopne
mov
add
lret
inc
or
inc
ljmp
out
mov
sbb
pop
jb
sbb
push
loopne
lret
adc
loopne
mov
add
lret
adc
cmp
add
test
out
stos
add
mov
sbb
dec
insl
add
mov
std
ljmp
test
rorb
inc
cmp
rolb
popf
cmc
mov
movsl
in
cmc
push
xchg
mov
clc
jmp
cmp
push
jb
xor
inc
lock
mov
add
cmp
jl
mov
shrb
pop
add
pushf
rorl
movl
add
adc
dec
xchg
mov
leave
add
push
jne
inc
or
and
jl
shlb
mov
cmp
je
std
add
int3
or
lret
xchg
adc
xchg
inc
fcmovnu
add
cmp
sahf
xor
pop
sub
add
sub
adc
add
dec
add
mov
jg
sub
inc
pop
dec
addl
lret
and
add
and
fdiv
cmpsb
repnz
icebp
scas
lret
mov
mov
sbb
mov
je
lods
incl
outsb
into
add
mov
test
xor
mov
mov
xor
and
push
inc
lods
imul
dec
add
mov
stc
ss
inc
xor
repnz
fbstp
js
icebp
cld
out
ja
stc
add
inc
inc
mov
xchg
out
mov
xor
mov
faddl
ds
ffreep
push
cmp
cli
sub
out
mov
shll
ret
std
cmp
stos
mov
inc
push
push
ds
jg
mov
sbb
jecxz
ret
int
aad
dec
xchg
fidivrl
call
aam
fwait
cltd
mov
sbb
sub
xor
sub
leave
mov
add
or
stos
aad
ds
in
or
insb
and
popf
inc
sar
inc
push
loope
incb
bound
inc
push
scas
idivb
mov
add
cmc
inc
scas
loope
lret
add
push
lahf
movsb
ficoml
sub
push
cltd
and
shlb
movsl
cmp
mov
out
push
movsl
lock
mov
inc
jmp
divl
insl
sbb
cmp
mov
cmp
add
add
aam
test
dec
sbb
shrl
add
dec
add
dec
leave
jg
dec
test
imul
jle
pop
pop
jl
in
mov
pop
or
inc
stc
jne
adc
clc
mov
sarl
addb
mov
enter
outsb
stc
jne
aad
adc
stc
adc
add
cmp
adc
stos
push
lret
call
and
pop
pop
mov
in
fisubrs
hlt
clc
call
or
or
add
push
icebp
aas
mov
cmpsl
pop
cmp
lret
or
pop
xlat
jo
incl
aaa
cld
clc
cmpsl
ds
or
mov
cmpsl
pop
sub
mov
add
push
or
pop
jg
lock
jle
sub
flds
and
jo
push
cmp
or
pop
fmuls
fcmovne
cmp
add
fs
rcr
shll
jg
shlb
xchg
adc
loopne
bound
jnp
adc
fnstsw
xchg
stos
lret
jb
rcr
bound
sahf
rolb
sub
cmp
sbb
fists
xchg
add
in
cld
adc
lcall
mov
inc
add
mov
mov
mov
popf
test
mov
xlat
and
dec
mov
xchg
adc
rcll
sbb
idiv
add
movsb
cmc
sahf
int
jle
sub
jge
sbb
jge
sbb
dec
jb
push
mov
out
pmaddwd
xor
in
fidivrs
jae
push
out
mov
xchg
pushl
hlt
lret
push
js
mov
sub
push
lret
add
aaa
cmpsb
add
push
stc
lcall
cld
incl
or
add
mov
call
pusha
iret
rcrb
add
cmpsl
and
adc
add
fidivs
and
and
call
pop
roll
sbbl
mov
add
inc
mov
cld
add
inc
sub
fcmovne
jge
xlat
bound
or
push
sbb
add
int3
push
push
mov
clc
outsl
mov
and
orl
add
jno
mov
push
call
call
bound
test
call
cli
cmpsb
cmp
iret
lods
shlb
pop
ljmp
pop
cltd
push
das
call
call
das
bound
dec
xorb
mov
mov
enter
jnp
xchg
lret
mov
sbb
int3
call
xchg
clc
lret
xchg
jno
pop
enter
mov
xchg
out
xchg
js
adc
out
fstps
jl
fists
aaa
push
shr
mov
iret
jle
out
in
fiadds
mov
or
ljmp
mov
sti
ret
inc
int3
add
add
jp
xchg
rcrb
incb
test
lret
sub
push
mov
cmp
add
xchg
ret
mov
dec
sahf
out
fwait
add
fdivp
add
jmp
jle
dec
fcompl
xchg
mov
mov
rcr
jns
mov
push
fnsave
js
push
add
jmp
jmp
leave
lods
mov
call
xor
fistl
scas
push
icebp
insb
les
adc
mov
push
mov
inc
adc
mov
div
mov
inc
add
jl
dec
mov
test
idiv
into
test
pop
mov
les
lahf
sbb
call
mov
sbb
call
dec
int
push
loopne
ja
mov
dec
xlat
sti
add
inc
push
mov
cli
call
andb
inc
jecxz
jmp
inc
push
dec
dec
fmuls
push
push
dec
adc
mov
ljmp
jecxz
das
push
lret
mov
add
jle
jl
push
xchg
and
addr16
outsl
mov
jmp
cwtl
xor
lods
int
xchg
pusha
aaa
push
xorl
shrb
cwtl
push
shll
das
jb
stc
jge
pop
pushl
ja
push
or
stc
cmp
les
js
lret
adc
cld
mov
jb
stc
inc
repnz
pushl
hlt
cmpsl
add
scas
int3
lret
pop
add
xor
aas
mov
jb
mov
sub
xor
xchg
ss
sbb
xor
sbb
mov
or
add
jmp
sub
add
mull
insb
push
cltd
xor
rol
add
xor
xchg
lock
sub
or
int
add
shll
scas
jns
pop
xchg
bound
jmp
scas
or
jl
inc
scas
lret
subl
or
add
cmp
add
jp
or
lret
add
add
cmp
mov
add
mov
adc
in
push
cmp
dec
sbb
outsl
add
dec
shll
lcall
add
add
idiv
cmp
inc
jmp
and
mov
outsb
dec
pop
cmc
lock
pop
aad
add
mov
add
loopne
jo
leave
jge
cmp
sbbb
add
into
call
mov
jl
call
xchg
inc
jmp
adc
adc
or
repz
scas
mov
or
or
add
int
push
mov
inc
add
cmp
lcall
jge
test
jg
orl
pop
mov
ret
push
mov
lret
add
jne
inc
enter
xchg
mov
jne
ss
loopew
les
ss
jl
sub
test
xchg
mov
scas
sbb
test
jns
xchg
xor
lods
and
push
sub
jno
lods
mov
aaa
outsl
fmuls
lret
add
lods
scas
add
jbe
pop
mov
inc
je
pop
mov
idivb
loopne
sub
hlt
out
repnz
bound
mov
lods
pop
pop
jo
in
loope
xchg
add
push
mov
cmp
and
icebp
push
cld
addl
dec
jnp
das
fsub
ljmp
push
xchg
aaa
xor
loope
imul
add
das
jae
roll
std
lcall
xchg
fistpl
cld
add
out
fistpll
ret
les
das
stos
add
add
jb
in
dec
xor
pop
add
bound
lret
add
movl
jmp
mov
shrl
mov
jbe
mov
sub
mov
jb
mov
jmp
repz
adc
scas
lret
mov
divl
dec
out
xchg
sbb
jne
add
outsb
loop
mov
arpl
mov
jae
cmp
and
clc
jmp
enter
popf
and
push
mov
cld
jae
jecxz
adc
inc
cld
push
in
gs
mov
call
inc
and
cli
lcall
adc
or
scas
or
decb
vmovss
adc
add
mov
dec
mov
rol
mov
lret
dec
jne
leave
cltd
test
cmpsl
dec
cmp
or
loop
stc
cld
sub
shlb
not
cmp
jne
mov
add
pop
xor
jl
and
adc
adc
ljmp
arpl
stos
fmuls
and
enter
call
add
clc
arpl
xchg
xchg
cmc
push
test
sbb
mov
cltd
outsl
cld
insl
lds
jnp
loopnew
jmp
movq
cmp
add
fstpt
mov
inc
or
mov
add
fnstcw
aaa
lret
mov
xor
add
lds
enter
mov
jg
jl
sub
popf
cwtl
cmpsb
iret
xchg
dec
es
and
in
lret
bound
xor
in
mov
les
fnstcw
ret
test
lret
pop
mov
mov
in
js
inc
cmp
leave
sub
mov
mov
dec
pop
mov
pop
gs
sub
mov
sbb
lea
idivl
push
add
add
and
test
pop
mov
sub
push
call
push
mov
or
leave
stos
cmp
test
mov
mov
push
aaa
fwait
sahf
or
fwait
add
jno
icebp
jmp
mov
add
and
scas
mov
adc
xchg
push
cmp
aam
mov
inc
jmp
popa
and
sub
test
cmc
lcall
test
mov
xchg
mov
stc
mov
sub
mov
stc
mov
add
les
fldl
icebp
scas
pop
data16
jne
dec
mov
shlb
jae
clc
or
push
and
xchg
add
into
call
lea
xchg
xor
fcmovne
push
lea
repnz
mov
repz
fcmovne
push
push
jae
stos
decl
or
popf
mov
lret
and
fwait
dec
and
stc
dec
and
das
add
mov
ja
xchg
mov
fbld
xchg
inc
pop
jecxz
cmp
ret
xchg
sub
imul
add
mov
xchg
dec
add
and
fldl
add
lock
test
enter
fdivrs
mov
xor
mov
ss
sub
jae
popf
cld
gs
adc
cs
fs
icebp
mov
mov
orb
mov
test
push
data16
dec
int
add
push
stos
add
ljmp
ja
add
jnp
cmpl
filds
mov
pop
xor
push
es
jp
nop
shll
add
icebp
je
das
xor
cli
popf
jecxz
cmp
jmp
add
xlat
xchg
lret
jg
and
adc
pusha
out
or
dec
dec
out
divb
add
mov
cmp
add
mov
adc
pop
and
outsb
movsl
jns
sub
sbb
loopne
shll
das
xor
gs
sub
mov
jl
mov
add
inc
cli
mov
scas
cmpsb
and
sbb
fwait
push
add
jmp
mov
cmp
jb
push
dec
int
xor
xchg
hlt
and
mov
jnp
pop
adc
mov
add
add
lret
rolb
add
and
jge
outsl
mov
jge
mov
sti
mov
dec
and
dec
mov
dec
push
dec
and
push
xor
sbbb
or
iret
dec
cmp
into
pcmpeqb
sbbl
jnp
and
incl
mov
add
mov
sbb
jg
xor
mov
lock
dec
and
push
shr
mov
add
aad
mov
insb
jns
mov
pop
mov
mov
mov
mov
pop
add
shl
test
mov
stos
movsb
adc
push
dec
inc
xchg
inc
pop
jecxz
adc
sbb
or
dec
sti
fwait
add
inc
data16
xor
sbb
stc
sbb
jp
decl
cmp
xor
lret
aam
sub
add
xchg
inc
jmp
int3
ds
push
push
sub
adc
mov
lahf
cld
push
arpl
xchg
movsl
fistl
xorb
add
add
add
aas
lret
jmp
or
push
in
pop
pop
js
fidivl
adc
jl
pop
jmp
je
stc
push
mov
dec
mov
mov
leave
push
popf
lahf
faddl
mov
push
add
jge
pop
mov
push
fisubs
cmc
test
test
movl
add
lcall
add
movl
loop
pushf
adc
nop
iret
test
adc
sub
push
mov
and
ds
adc
jae
rolb
mov
jmp
sbb
mov
lods
jge
popf
js
mov
sbb
insl
in
and
and
jne
loopne
cmc
orb
push
sub
lock
pop
rcl
dec
mov
fmuls
mov
dec
mov
int3
push
mull
or
ds
rolb
into
mov
mul
push
ret
cld
or
push
std
jl
sbb
or
mov
ret
xchg
push
in
push
mov
fldt
jp
add
jp
jmp
iret
push
add
sbb
cmp
jle
inc
mov
cmpl
arpl
data16
dec
sub
in
mov
arpl
data16
dec
dec
lds
stc
inc
loopne
adc
inc
add
repz
movsl
inc
or
pop
adc
mov
jns
mov
or
xor
pusha
outsb
ds
jno
insl
clc
dec
adc
xor
add
lds
faddp
test
inc
pushl
pop
sti
dec
test
das
aad
lret
cmp
jl
hlt
sbb
pop
ret
adc
jbe
xchg
mov
pop
sub
ret
xchg
mov
cmp
and
inc
mov
pop
stos
mov
mov
push
repnz
fs
and
addb
add
add
psubd
and
addr16
jmp
pop
loop
gs
push
mov
adc
loope
dec
test
pop
push
outsl
and
xchg
push
sub
push
test
negb
cmp
xor
test
mov
add
arpl
sbb
xorl
xor
add
add
aam
pop
clc
insl
out
cli
fucomip
leave
arpl
rorb
stc
in
adc
mov
cmp
hlt
mov
cmp
mov
test
push
clc
insb
xchg
out
inc
cmpsb
jnp
sbb
mov
pop
inc
adc
xor
jae
insb
or
scas
pop
mov
mov
fldl
add
mov
mov
pop
push
push
adc
sbb
adc
fldl
pusha
fldl
mov
mov
push
ficomps
inc
lret
sbbl
jne
adc
push
int3
int3
movl
in
push
cmp
xlat
int
mov
insb
mov
mov
repz
push
arpl
in
add
add
sub
inc
xchg
add
mov
or
out
test
pop
mov
cmp
mov
cltd
lock
lds
push
jge
and
insb
xor
fidivl
jno
fcmovb
pop
add
cli
add
sub
push
cmp
add
xor
add
add
push
out
lock
in
mov
push
add
lock
jle
mov
xor
jb
adc
repnz
pop
jmp
jae
push
sbb
cmp
repz
mov
push
pop
adc
stc
mov
das
push
or
add
push
sti
getsec
test
xor
mov
arpl
jb
xor
into
sub
mov
mov
scas
push
insl
xor
gs
call
add
mov
xchg
int
and
bound
push
mov
imul
add
sarl
scas
inc
ret
jmp
stos
dec
rcr
pop
add
mov
mov
sahf
testl
fstl
insb
lret
xor
pop
sbb
add
xchg
xor
add
add
and
data16
mov
mov
inc
or
push
adc
mov
adc
insl
in
cmp
sub
mov
ss
pcmpeqb
loopne
sub
je
push
inc
push
sbb
mov
test
stos
or
aad
push
incl
cmp
mov
out
dec
idivl
cmp
cmp
jne
ljmp
sbb
into
add
in
xchg
outsb
xorl
pop
mov
clc
lret
fists
int3
int3
adc
cld
push
adc
sub
stc
push
and
mov
ret
pop
jno
mov
in
sub
call
sub
adc
add
int3
jg
mov
sbb
and
dec
dec
sbb
and
jmp
lods
lret
pop
icebp
movsb
in
xchg
ja
ret
push
or
popa
add
pop
std
jns
lods
lret
pop
icebp
aaa
ror
ffreep
lret
out
lret
imulb
test
mov
jb
jne
call
lret
jb
add
inc
scas
cld
mov
fcomi
cmpsb
jmp
add
lret
fs
int3
sub
and
mov
mov
push
jb
push
add
cmp
or
lret
jo
cmp
jmp
mov
mov
jl
cmp
add
mov
add
psrad
repnz
in
add
inc
sub
xchg
add
mov
ret
add
stos
pusha
dec
dec
inc
test
xchg
aaa
enter
add
je
mov
mov
pop
mov
in
mov
out
pop
pop
push
imul
arpl
lock
jb
rcll
mov
push
cmp
gs
cmpsl
mov
sbbl
cmc
test
push
insb
mov
nop
out
cmp
imulb
adc
sub
pushf
lods
mov
pop
xor
mov
nop
out
fdiv
push
adc
cld
sub
clc
cmc
xor
aad
mov
cwtl
add
punpcklbw
decl
jl
mov
pop
loopne
inc
sbb
add
mov
cmp
aas
lds
sbb
jge
and
or
ret
add
minps
add
inc
iret
xchg
inc
dec
dec
adc
push
push
xchg
dec
mov
mov
lret
sarb
mov
int
sub
inc
sub
cmp
xchg
insb
push
scas
arpl
insb
cmp
test
push
icebp
mov
testb
cmp
jne
fisubs
mov
outsb
scas
scas
mov
je
and
mov
mov
add
gs
repnz
xor
jge
add
or
test
mov
add
mov
mov
jp
shr
lds
inc
addr16
int3
jmp
add
jno
ljmp
lret
jmp
ret
in
add
lret
rol
push
out
ret
or
sarb
das
sbb
mov
mov
cmc
and
pop
mov
push
lods
lret
ret
lret
jmp
push
pop
or
jnp
ret
jb
mov
stos
ljmp
ljmp
cwtl
ljmp
jo
add
lahf
xorl
adc
sub
pop
int3
adc
xor
adc
int
adcl
mov
mov
add
xor
add
sahf
out
shlb
lahf
mov
lods
dec
dec
mov
add
jmp
add
push
cmp
and
dec
mov
mov
xchg
dec
aaa
push
ret
mov
add
adc
test
dec
std
push
and
add
sub
lret
cmp
push
jbe
pop
es
test
loopne
shlb
shlb
push
inc
mul
bound
xchg
cmp
outsl
divl
push
or
inc
ljmp
jge
ds
inc
add
mov
mov
iret
add
dec
iret
add
mov
cmpsl
add
lock
and
push
mov
push
mov
dec
call
cmp
pusha
test
push
call
cmp
xor
jnp
adc
movsl
pop
pop
xor
add
hlt
add
negb
shll
lods
popf
xor
std
shr
add
mov
jns
lods
and
push
out
lahf
cmc
cmp
jl
add
or
and
add
pop
icebp
das
mov
mov
jmp
jge
jg
ret
push
scas
fcoml
ljmp
rcr
add
lret
fisubl
add
adc
mov
xchg
add
movsl
adc
jbe
dec
mov
xchg
ret
mov
ljmp
adc
xchg
fwait
push
aaa
mov
push
into
inc
js
addr16
cmp
int
lds
xchg
out
ss
jge
addl
mov
jge
xchg
add
lahf
and
ret
sub
pop
std
xor
jne
dec
bound
lahf
pop
jo
mov
inc
mov
daa
push
dec
mov
mov
clc
jmp
add
loope
int3
add
enter
jbe
mov
addb
add
xchg
test
inc
xor
jmp
fcoml
xlat
mov
pop
ds
stos
mov
loopne
popl
or
psubsw
mov
add
flds
add
adc
and
dec
xchg
cwtl
bswap
add
fcmovne
ja
xor
clc
pushl
idiv
fldt
or
stos
mov
add
push
or
movsb
pop
jbe
roll
mov
inc
adc
mov
mov
mov
add
add
mov
jge
mov
lret
add
dec
out
add
out
jg
jne
xchg
inc
test
mov
and
int3
adc
sbb
xor
fbstp
sbb
test
notl
sub
cmp
add
bound
add
dec
add
mov
addr16
mov
inc
insb
sub
std
filds
dec
or
inc
pusha
mov
add
lods
into
std
xchg
pop
int
mov
jecxz
inc
out
jo
ljmp
ds
push
mov
jb
push
mov
add
push
inc
jge
xorl
aaa
cmp
popa
add
ret
lret
jmp
add
mov
jb
sbb
push
xor
sub
mov
push
ret
lods
jp
lret
mov
jg
movntq
jle
xorb
repz
les
add
fcmovne
sub
push
je
jmp
xlat
mov
add
xorl
lret
pop
insb
and
clc
sahf
je
xor
lahf
lahf
mov
mov
add
mov
sub
enter
mov
mov
pushf
inc
inc
add
add
add
push
xchg
pop
stos
push
jmp
call
inc
dec
lods
jns
lock
das
dec
add
or
mov
pop
ret
cwtl
gs
push
sbb
add
push
pop
xchg
outsl
pop
adc
add
cmc
xor
add
dec
ja
push
inc
pop
add
xchg
push
insb
push
in
sti
nop
push
pop
and
cmp
add
inc
cmpsl
stc
decl
pop
mov
xchg
pop
ret
mov
inc
int3
int3
filds
int3
es
push
add
xor
lcall
jge
mov
je,pn
fdiv
push
cmc
jo
cmp
fcompl
add
test
addb
mov
hlt
in
or
add
das
cmp
and
add
shll
mov
cmp
mov
insb
cmp
xor
shrb
cmp
inc
ret
sbb
call
ljmp
pop
xor
inc
cli
adc
repz
sbb
insb
roll
test
xor
mov
jns,pn
ljmp
fidivs
daa
in
push
mov
movsb
push
or
add
outsl
pusha
rclb
outsl
in
outsl
test
push
cmp
cltd
cmc
add
or
cmp
imul
mov
and
in
mov
or
push
mov
fsubl
dec
mov
push
xor
or
push
sub
subl
fisubrl
lea
ljmp
insl
add
mov
mov
int
aas
test
insb
xchg
add
and
js
sbb
mov
fildl
jmp
add
arpl
pop
mov
add
aad
sub
shrl
jmp
jmp
clc
out
pop
and
jno
pop
call
mov
test
pusha
std
call
nop
or
mov
or
scas
add
fnsave
add
fisttpl
mov
pmaxub
bound
orl
add
dec
mov
mov
mov
add
mov
xchg
out
mov
frstor
lds
pop
int3
push
je
psubd
add
add
mov
jnp
xlat
int3
lods
jge
mov
lea
sub
cmp
popa
dec
adc
fidivs
dec
push
inc
dec
movsb
fs
mov
xor
xchg
scas
cmp
mov
and
inc
adc
or
hlt
add
mov
push
js
mov
push
or
aaa
insb
add
push
pushl
lock
cmp
or
sbb
or
cwtl
hlt
and
cmp
dec
frndint
cmp
mov
call
add
daa
jge
mov
and
push
or
les
xchg
add
lret
bound
push
mov
sub
icebp
loopne
pop
mov
jne
arpl
xchg
push
orb
fucomp
add
push
dec
stc
inc
push
jb
mov
dec
mov
pusha
sbb
inc
pop
outsb
add
lret
pop
mov
ljmp
mov
les
mov
push
xor
adc
pop
aaa
roll
adc
push
sbb
lret
shlb
iret
push
jmp
cmp
andl
lahf
in
dec
insl
push
pop
call
in
jns
mov
dec
lea
aad
inc
xchg
mov
clc
push
xor
mov
add
dec
aas
mov
mov
out
cmp
pushl
fildl
jmp
lods
lea
jmp
mov
mov
out
xchg
dec
filds
out
inc
inc
pop
call
mov
test
push
dec
xchg
add
enter
push
inc
insb
adc
jne
cltd
lcall
or
adc
push
fwait
enter
mov
add
add
loopne
leave
ror
leave
sbb
call
mov
jae
ds
or
es
mov
lcall
xchg
cvtps2pd
psadbw
mov
add
dec
js
push
dec
cmp
adc
add
or
dec
arpl
in
pop
repnz
add
sub
xchg
or
pop
mov
jne
adc
mov
pop
fdivrl
push
xlat
mov
lret
jle
ror
jbe
ror
outsb
mov
lret
inc
mov
loope
cltd
incb
add
mov
push
je
repnz
and
and
dec
pop
sbb
test
add
test
cmpb
add
add
add
add
int3
sahf
or
sbb
sub
jmp
or
sub
sub
or
xchg
jmp
add
push
lods
faddl
xor
shlb
insl
lds
push
loope
push
cmp
add
or
out
xchg
in
test
or
mov
push
push
add
mov
cmp
ret
xorb
sub
or
mov
mov
scas
xor
pop
aas
jle
cmp
in
cld
mov
outsl
lods
ret
add
mov
mov
mov
cmp
loopne
mov
adc
std
subl
pop
mov
xchg
add
mov
cmp
add
imul
and
clc
bound
push
std
repnz
mov
xchg
inc
aam
add
imul
pop
test
add
push
test
les
and
mov
data16
mov
int3
add
fwait
push
inc
pusha
jo
and
push
mov
roll
add
add
add
fwait
aad
ret
insb
add
jge
lock
inc
cmp
add
mov
pusha
adc
pop
fyl2xp1
data16
inc
mov
sub
add
xchg
cwtl
or
into
negl
add
enter
outsl
xchg
push
repnz
das
outsb
jb
mov
add
in
mov
lahf
mov
xor
dec
add
repz
or
cmpsl
cmp
hlt
lods
std
mov
cmp
pusha
data16
mov
loop
in
in
add
xor
in
cmp
mov
sbb
fstps
mov
pop
icebp
jno
or
lret
jmp
add
dec
mov
add
mov
sub
or
add
push
lcall
aaa
movsb
jmp
mov
xchg
fdivs
int
ret
fmull
cmp
or
ss
dec
nop
mov
push
ret
jb
dec
xor
push
test
or
or
jno
sub
cltd
mov
add
das
mov
add
add
jne
jmp
fldl
pop
ljmp
sbb
repnz
push
ja
sbb
inc
notl
xor
jmp
sbb
mov
pop
mov
scas
adc
add
mov
std
loopne
push
popf
divl
inc
xor
add
cmp
fbstp
fiaddl
jmp
aas
or
add
aaa
pop
str
bound
lahf
insl
xchg
add
leave
testl
jl
xchg
sbb
add
or
insb
mov
out
idiv
cmpsb
dec
jge
scas
dec
js
push
dec
cmp
adc
add
divps
lock
xchg
out
test
enter
scas
push
cmp
outsl
lock
in
adc
adc
pop
dec
ds
in
adc
mov
push
rolb
xchg
out
idiv
pop
enter
jno
add
or
les
jns
cmp
mov
push
xchg
sub
sbb
and
insb
sub
add
fisubl
clc
add
push
inc
adc
mov
add
jo
lahf
pushf
repnz
es
mov
push
cmp
movsb
mov
and
mov
ss
cmp
add
dec
int3
movsl
in
sti
jb
je
add
sti
inc
add
push
xchg
mov
mov
add
add
jmp
fs
lds
xchg
jecxz
shr
cli
jb
mov
xchg
jmp
pop
cmpsb
stc
pop
xor
sub
stos
lret
mov
fcomps
dec
adc
inc
mov
push
stos
push
add
lret
push
mov
ret
add
mov
aaa
jmp
add
push
fs
mov
lret
mov
rolb
lcall
cli
imull
fildl
pop
or
inc
add
inc
jmp
loope
push
jb
xchg
ret
push
dec
add
testl
xchg
pushf
les
lods
lret
add
lret
add
mov
sbb
sub
add
mov
add
mov
add
rcll
lock
add
negb
jp
adc
mov
pop
std
jl
add
jp
or
mov
jl
pushl
or
int3
add
xorb
pop
jns
adc
mov
iret
hlt
testl
jns
or
mov
add
add
add
fwait
iret
pop
adc
orl
test
pop
jns
test
xor
jl
jmp
add
and
xchg
xchg
jmp
divl
fisttpll
mov
sub
xchg
jge
adc
xor
shrl
enter
cld
pushl
cmc
loope
dec
xchg
jge
sub
sub
int
add
lock
sbb
into
cmp
mov
into
cmp
mov
into
xor
icebp
add
or
mov
xchg
loope
mov
inc
test
cs
add
test
jl
les
mov
sahf
cmc
add
lcall
add
cltd
int
imul
cltd
insb
int
dec
cmpsb
inc
cmp
sub
fbld
xchg
xor
cs
jnp
ret
call
xchg
imul
jl
fildll
mov
out
mov
jmp
xchg
sub
ja
loopne
incb
in
mov
rclb
std
call
jns
std
divl
repz
mov
pushf
or
movb
cmp
jle
jmp
rorb
frstor
movb
sbb
lea
aaa
decb
stc
scas
xchg
or
lods
fisttps
or
insb
ret
push
bound
xchg
mov
inc
fldlg2
mov
jmp
push
mov
inc
add
iret
add
adc
mov
push
mov
xchg
leave
add
in
idiv
pop
pushf
and
dec
ret
gs
lock
push
int
ret
mov
pop
add
cmpsb
or
xor
push
fadds
adc
jne
cwtl
aaa
sbb
aam
sbb
sub
mov
pavgb
or
add
lock
adc
xchg
ret
addr16
enter
dec
xbegin
push
adc
mov
xor
mov
inc
aad
call
or
pop
add
jecxz
jne
jecxz
xchg
repnz
testl
lret
or
test
add
imul
addr16
imul
add
leave
sub
jb
jns
sbb
push
or
cmpb
mov
jp
mov
fdivr
cmp
es
dec
xchg
int
aas
sub
ss
aas
mov
mov
and
ss
stos
inc
out
cs
add
aad
lock
jb
mov
jbe
cmpsb
mov
and
aam
jae
sahf
dec
movsb
pop
mov
in
js
xlat
rol
mov
inc
mov
cmp
add
sbb
iret
bound
mov
clc
pusha
shll
mov
add
mov
jo
in
js
jge
mov
add
iret
adcl
repnz
insl
sbb
imul
sbb
cmp
mov
xor
mov
lret
insb
lock
xorl
jo
mov
and
nop
mov
mov
repz
outsl
mov
and
iret
mov
or
inc
icebp
jns
or
jo
jge
subl
add
inc
idiv
lret
int
inc
out
jo
fildl
sub
add
shlb
push
pop
mov
add
adc
decb
mov
jp
and
andb
jmp
or
mov
add
stc
jb
mov
flds
je
shll
mov
out
hlt
roll
add
add
mov
or
ret
sbb
clc
cmp
inc
or
add
xchg
jge
sbb
mov
idivb
sub
jnp
mov
pop
push
cmpsl
mov
xchg
jne
add
xchg
loop
sbb
and
xor
cmp
test
ljmp
in
sub
add
das
mov
clc
pusha
mov
add
fisubs
imul
xor
popa
sbb
xlat
push
out
pop
clc
arpl
shll
out
mov
jae
pop
xor
mov
clc
inc
mov
xor
fsub
jl
les
mov
jmp
inc
cmpsb
inc
movlps
add
sar
add
xlat
roll
pop
mov
lahf
adc
jae
in
mov
jmp
dec
test
out
push
mov
test
enter
sub
das
jmp
add
movl
in
push
test
in
ret
xchg
test
fiaddl
bound
or
cmpsl
sar
or
in
push
ret
push
or
pop
mov
push
lea
in
rcrl
add
rcl
das
test
xor
imull
dec
faddp
outsl
movb
lods
mov
stc
jae
lret
add
ja
xchg
jb
sbb
sub
negl
cli
xchg
mov
sub
cld
decl
jge
orl
mov
xchg
idiv
or
lcall
clc
dec
jo
mov
leave
add
pop
add
je
adc
testl
and
xor
repz
les
fidivrs
enter
cld
mov
leave
push
ljmp
push
jae
dec
lock
out
rolb
cmc
lcall
mov
decl
lock
add
fldenv
add
add
and
xor
ja
push
or
add
movsl
xor
xchg
cmp
cwtl
cld
gs
aam
ja
add
adc
xor
pushf
cmp
adc
aaa
inc
xchg
jns
dec
cmp
dec
loop
push
mov
add
popa
cmp
sub
imul
xor
in
inc
mov
add
cmp
lret
jmp
mov
sbb
fcmovb
jnp
add
mov
jmp
ljmp
jmp
ds
inc
mov
stos
sub
jb
push
repz
xor
add
xchg
fnstcw
shll
lods
int3
daa
lock
and
adc
xchg
int
sti
shll
mov
pop
lock
add
add
xchg
in
js
shll
mov
cmpsl
out
stos
and
js
roll
popa
inc
roll
popl
scas
mov
stos
xchg
or
roll
scas
add
push
aas
aad
xchg
or
roll
popl
dec
aas
cmc
push
or
rolb
das
loop
scas
push
lret
dec
aas
aad
xchg
or
rolb
cmpps
testb
add
add
xchg
xor
repnz
ficomps
notl
cli
mov
fs
std
pop
sbb
add
or
scas
dec
jg
faddp
sub
rorb
ret
jne
pop
into
or
lock
roll
stc
inc
mov
pop
ret
roll
dec
inc
or
stc
pop
pusha
xor
ret
add
add
int
int3
sahf
pop
in
push
push
xchg
and
add
inc
cld
fcmove
add
rorb
test
iret
add
xchg
aad
test
add
or
in
fwait
int
mov
mov
dec
sbb
jl
jne
out
jnp
push
lcall
xchg
bnd
scas
mov
or
mov
add
sub
xor
add
aas
or
sbb
jle
mov
adc
ja
std
pushl
pop
pusha
adc
mov
or
sub
jne
adc
repnz
mov
mov
repnz
fcmovnb
adc
xor
jne
sbb
icebp
mov
repnz
lret
icebp
cmp
add
add
lret
jmp
shll
fldt
test
mov
add
jle
mov
and
add
xchg
roll
adcb
sub
or
add
ljmp
sub
xchg
pusha
dec
pop
and
mov
mov
push
sub
add
and
shlb
jmp
xchg
negl
clc
mov
scas
dec
push
push
or
mov
cs
sub
stos
push
adcl
subl
and
jmp
aam
mov
jmp
cmp
pushl
xchg
mov
xchg
idivl
add
addr16
mov
or
jmp
sti
xlat
insb
and
fs
jmp
lods
xchg
add
mov
shll
push
adc
fmulp
dec
add
inc
movsb
push
pop
lret
dec
cmpl
les
add
cmp
add
lret
mov
xchg
sbb
mov
repz
mov
sub
add
add
leave
roll
idiv
fildl
dec
inc
lret
xor
in
and
stc
in
test
sahf
or
add
and
mov
mov
pushl
mov
ror
outsb
aaa
ror
enterw
enter
test
leave
out
mov
mov
mov
sbb
and
xchg
fiaddl
add
mov
std
xchg
testl
outsl
scas
pop
sub
sub
xchg
lods
cmp
mov
add
sub
test
sub
add
mov
aaa
sbb
mov
mov
movsl
lret
fcmovb
sti
xchg
mov
inc
iret
jmp
iret
imul
add
add
adc
lret
jb
mov
sub
mov
push
lcall
in
mov
push
push
mov
mov
mov
sbb
or
xor
xchg
pop
xor
jne
jg
bound
mov
fdivrs
mov
ret
out
fisttps
xchg
hlt
cmp
push
stos
dec
add
add
aam
in
idivl
xchg
dec
in
cs
or
sub
mov
cmpsl
insb
add
adc
mov
push
adc
outsb
mov
mov
add
out
call
jp
push
sub
in
scas
and
jmp
loop
lds
nop
xor
add
pop
or
jecxz
jmp
xor
add
cltd
or
push
out
pop
mov
mov
mov
pop
and
aam
mov
rolb
dec
sub
scas
les
pop
into
pop
add
pop
enter
les
and
or
cmpb
push
or
add
mov
sub
add
pop
stc
call
mov
dec
and
jle
rcrl
add
or
int
pop
pusha
or
mov
or
clc
mov
hlt
mov
dec
loop
inc
add
push
pop
mov
add
repnz
ret
out
add
mov
leave
lret
jle
xchg
add
cmp
sbb
add
int
dec
mov
and
repz
mov
pushf
test
pushl
mov
xchg
mov
mov
add
pop
pop
mov
ss
xor
mov
jmp
mov
pusha
inc
xchg
push
xor
xchg
pop
mov
dec
mov
adc
in
mov
push
in
cltd
push
mov
bound
fimull
xor
mov
mulb
or
inc
mov
or
add
push
mov
das
jns
push
sbbb
stos
arpl
add
mov
mov
scas
push
mov
bound
push
or
subl
dec
dec
add
add
mov
das
cmpsb
xchg
ds
aam
mov
jmp
mov
je
scas
push
mov
mov
sbb
adc
sbb
repz
pusha
in
add
out
int
adc
mov
jns
mov
iret
add
ss
add
mov
lret
and
pop
or
movl
jmp
add
scas
add
aam
add
fisttpl
or
mov
dec
add
adc
cld
push
push
cmpl
xchg
and
sbb
push
and
push
arpl
loopne
popf
fadds
fwait
lret
and
or
sub
subb
add
iretw
roll
lret
loop
push
add
cli
adc
je
out
lret
add
mov
cmc
ds
jge
fsubrs
ss
jg
mov
cld
xlat
xor
adc
fnsave
or
hlt
test
fstl
gs
cld
gs
pop
dec
mov
test
mov
mov
push
xchg
jl
call
sub
aaa
sbb
cmp
add
les
and
insl
scas
or
mov
add
bnd
inc
jbe
inc
stos
repz
mov
jmp
repz
inc
mov
sbb
out
or
xor
icebp
das
mov
movsl
or
ja
mov
jb
shrb
jb
test
mov
mov
mov
push
mov
test
add
xor
sub
jns
fsubr
add
mov
add
je
stos
aas
xchg
jmp
mov
in
stos
lods
aam
subb
lret
cmpsl
sbb
cwtl
and
and
test
mov
add
jmp
jecxz
js
lret
add
sarl
test
push
inc
adc
mov
neg
mov
sbb
lret
add
scas
sbb
jne
mov
insb
rorl
push
lret
jb
sub
dec
roll
fs
mov
add
cmp
aam
test
scas
ror
jb
stos
jge
adc
and
or
fimull
adc
int
add
mov
push
fisttpll
add
int
push
mov
pop
in
nop
cwtl
sbb
daa
add
into
jge
mov
inc
sbb
hlt
and
mov
cmc
fcmovne
fldl
test
iret
jl
mov
add
sbb
inc
lret
mov
addl
cwtl
divb
pushf
fimull
outsl
lret
jg
dec
daa
inc
adc
add
pop
lock
out
mov
add
mov
test
data16
ss
cmp
lahf
xchg
insl
cmp
bound
lods
lea
add
lcall
cld
in
add
mov
lods
punpcklwd
cmpl
call
clc
or
addl
je
lcall
fidivrl
stos
faddl
add
popf
clc
mov
add
xchg
pop
mov
cmpsb
popa
dec
adc
pop
idivl
out
lahf
lods
gs
and
push
sbb
or
punpckhwd
jmp
dec
stos
pushf
inc
testl
lret
jmp
pop
mov
insl
and
ss
gs
int
gs
mov
into
into
inc
add
lea
lods
inc
or
mov
pop
xchg
stos
jo
repnz
stos
aaa
jg
xor
adcl
aaa
enter
sbb
add
mov
test
push
push
push
les
mov
mov
mov
pushl
aaa
cmp
mov
mov
lret
add
call
lret
out
cmpsb
add
lret
cld
call
mov
add
mov
fst
sbb
sbb
fidivs
push
dec
or
mov
pusha
int
jge
lret
ss
push
dec
std
push
test
add
mov
sahf
and
jo
jb
jo
fmull
or
aam
mov
push
sti
xor
dec
sbb
jge
add
pop
push
clc
mov
or
inc
mov
insb
sbb
and
add
inc
add
push
push
clc
bound
inc
shrb
xchg
jg
rorl
inc
lret
lret
adcl
aam
add
mov
roll
lret
inc
adcl
or
movhps
mov
jl
outsb
in
test
mov
in
jns
mov
pop
dec
and
daa
mov
test
jp
mov
pop
inc
inc
fldcw
insb
mov
daa
mov
inc
jb
dec
clc
xor
jmp
je
out
aas
cld
pusha
popf
mov
pushl
add
push
dec
call
sub
movsb
xchg
in
cli
jp
xchg
dec
cld
mov
mov
jl
rcr
mov
jmp
inc
xchg
dec
stos
cmp
lret
jmp
add
int3
jmp
adc
dec
jb
mov
push
push
int3
xchg
gs
lret
fidivs
mov
jb
xchg
inc
movsl
cmpsl
xor
in
test
mov
jb
and
push
lds
jle
and
scas
repnz
ljmp
icebp
clc
mov
loop
xlat
jb
and
adc
mov
add
les
jne
jns
hlt
mov
sbb
jecxz
mov
lret
mov
mov
add
add
xor
jmp
cmp
add
add
mov
push
jb
stos
jge
mov
shl
jmp
mov
add
outsl
mov
insb
lods
xor
adc
inc
pushf
jmp
add
sub
iret
or
adc
dec
ret
jnp
add
cli
adc
add
mov
mov
in
sti
aam
and
inc
jnp
mov
add
cmp
incl
daa
push
push
and
lea
add
iret
add
mov
push
aaa
adc
iret
jge
add
push
mov
mov
ffreep
pop
loopne
add
ret
add
dec
cli
and
je
xlat
into
or
jmp
mov
insb
xor
cld
xchg
sbb
fdivs
and
insl
pop
pop
mov
add
jno
movsb
rdpmc
inc
add
mov
add
sub
mov
incl
ret
fadd
in
in
xchg
jp
loop
leave
sub
mov
add
call
clc
std
cmp
add
and
cmp
cld
xchg
jp
mov
loopne
inc
jecxz
jp
lret
in
xor
repnz
mov
dec
clc
mov
pop
mov
jmp
das
cmpsb
inc
mov
lahf
fisubl
add
loop
mov
mov
iret
movsl
xchg
add
xor
push
inc
int3
jg
stos
sbb
stos
js
bound
repz
jo
sbb
and
cs
imul
and
add
mov
cmpsl
fs
adc
jmp
cs
add
mov
out
push
aam
jmp
and
test
jo
adc
mov
insl
add
sbb
call
test
into
mov
jmp
add
or
test
out
stos
lret
add
mul
add
iret
call
add
pop
shl
jb
dec
loope
in
loopne
inc
sub
and
mov
jl
out
iret
mul
arpl
negb
sub
adcl
fadds
inc
push
jge
test
and
jl
add
jb
sub
cli
dec
and
jne
pop
int
inc
lret
or
push
pop
lret
add
xlat
pop
std
decl
add
add
add
dec
mov
xlat
mov
dec
cld
rorb
jb
nop
or
xchg
lock
jb
orb
inc
dec
mov
xchg
inc
decl
push
dec
hlt
pusha
jle
mov
adc
and
add
lret
cld
mov
mov
outsb
cld
je
stos
popa
mov
fistpl
add
xor
cli
insb
add
pop
pop
and
popa
push
cld
mov
ja
test
add
and
test
imul
pop
inc
clc
mov
jge
mov
leave
test
mov
jle
loop
add
add
in
pop
mov
adc
jl
mov
jge
mov
xchg
add
lret
psubw
or
int
jp
addr16
cmp
out
int
addl
add
add
aam
cmpsl
repnz
mov
jmp
add
jl
xor
loopne
js
lret
push
jle
or
xor
icebp
add
jg
jnp
stc
mov
add
ljmp
inc
cmpsl
sbb
stos
test
movsl
mov
jo
jae
ss
lcall
add
cltd
or
ljmp
jb
push
mov
aas
andl
lret
add
arpl
ss
lret
xor
out
aas
inc
xchg
cmp
lret
add
mov
testb
jmp
add
mov
add
mov
adc
push
add
scas
lret
mov
mov
insb
icebp
ret
sbb
testl
or
add
or
or
or
push
xchg
dec
mov
test
jge
pop
nop
adc
mov
cmp
std
mov
jge
rorb
test
call
jl
sbb
dec
add
int3
fdivrs
sbb
dec
xchg
clc
subl
or
push
dec
nop
jle
jg
shll
jns
repz
xchg
push
jge
movsl
xor
repz
or
shl
cltd
jecxz
dec
pop
push
jp
insl
fs
inc
dec
lret
cmp
int
imul
mov
mov
mov
dec
mov
add
test
add
cmp
pushf
dec
jle
scas
int3
xchg
sub
mov
mov
in
mov
xor
movsb
xor
mov
in
fsubr
mov
gs
and
das
les
ss
cwtl
cld
and
adc
js
dec
dec
add
int
ss
push
movsb
scas
jbe
jmp
adc
jmp
lods
add
es
test
jg
jp
ss
mov
jg
shr
add
push
outsb
push
imul
int3
mov
cmp
mov
es
mov
fisttps
test
dec
cmpl
or
out
push
mov
cmc
jmp
mov
pop
lahf
add
rorl
push
aad
xor
or
cmp
out
push
stc
loop
aaa
fidivrl
or
inc
test
mov
scas
incl
div
les
in
scas
cli
scas
add
mov
mov
mov
clc
das
add
into
dec
out
sub
jbe
mov
adc
ljmp
clc
sbb
sub
mov
xchg
sbb
call
jae
nop
adc
das
inc
add
jbe
jge
clc
cmpl
add
push
mov
add
test
fcmovne
mov
dec
sbb
inc
dec
ds
call
mov
mov
sti
inc
fwait
rolb
add
lcall
jae
dec
add
fwait
push
ret
sbb
psubusw
es
clc
mov
push
push
mov
jp
mov
add
divb
jecxz
push
pusha
insl
mov
add
test
data16
ss
mov
jl
stos
cmp
aaa
cmc
adc
xor
add
mov
add
mov
shrl
add
add
inc
xor
vpaddd
out
add
out
test
sub
call
sub
in
test
jns
xchg
int3
in
xor
pop
addb
jmp
xor
es
mov
push
stc
mov
iret
push
lods
dec
push
or
pusha
ret
jo
aad
outsl
add
rolb
mov
push
mov
mov
bound
sub
mov
sbb
mov
jmp
in
push
mov
repnz
jae
sub
lds
and
xchg
das
inc
das
lds
push
movl
call
xor
cmc
bound
cmc
pop
inc
push
int
mov
add
pop
mov
leave
andl
jns
jo
mov
jl
mov
lret
test
lods
dec
mov
and
lods
or
lahf
pop
aas
out
dec
inc
add
add
add
mov
ror
sub
frstor
xchg
xchg
sarl
in
add
pop
add
mov
add
rcl
mov
pop
push
inc
hlt
or
push
in
mov
shlb
pop
and
mov
cwtl
jmp
add
push
add
or
sarl
dec
fdivl
inc
or
inc
in
sbb
idiv
lret
mov
sbbl
push
ret
cwtl
jo
mov
xchg
rclb
inc
mov
jg
fisttps
test
mov
xor
sbb
inc
clc
mov
out
js
in
orl
sub
out
mov
mov
leave
adc
mov
in
inc
mov
lds
jb
mov
push
mov
add
enter
pop
aad
adc
xor
adc
mov
clc
in
stc
mov
add
xchg
incl
mov
cmp
or
je
fldt
out
test
add
mov
cmpsb
add
lret
jmp
xchg
pop
out
add
lret
xchg
jmp
clc
mov
sub
cmp
mov
mov
sbb
jmp
xchg
add
sub
jae
cmp
cmc
shll
push
pop
lret
mov
fldl2t
add
int3
jmp
dec
lahf
mov
or
bound
jmp
jo
mov
scas
mov
mov
add
mov
scas
jmp
push
cmc
bound
loopne
jmp
leave
add
out
shl
add
sbb
stos
cmp
sub
jo
mov
das
mov
dec
mov
mov
mov
out
test
pop
jg
dec
inc
inc
test
cmpsl
mov
lret
rorl
sub
stos
mov
ret
push
dec
hlt
fisubrl
add
push
mov
add
mov
inc
dec
inc
hlt
add
decl
cmc
mov
shlb
hlt
add
add
or
cmp
fsubrl
cmc
inc
dec
test
mov
dec
inc
in
sbb
decl
int3
adc
adc
jg
arpl
ret
cwtl
je
mov
xor
push
adc
jle
mov
fisttps
fcompl
mov
xor
pop
or
cld
jbe
test
mov
add
sub
out
lods
push
mov
rcll
lods
in
orl
mov
cmp
jne
hlt
fnsetpm(287
hlt
cld
out
mov
add
insl
or
xor
xchg
mov
insl
add
mov
add
xchg
adc
or
mov
clc
test
add
icebp
mov
ljmp
push
xchg
dec
cli
int3
jmp
in
xchg
adc
les
outsb
mov
mov
jmp
xchg
jne
gs
insb
mov
add
push
push
inc
lahf
mov
dec
xchg
mov
add
call
cmc
loope
add
and
jmp
ret
adc
ss
push
add
push
repnz
xchg
ljmp
inc
inc
adc
je
cmp
mov
aam
pushf
or
enter
mov
or
in
mov
mov
outsb
inc
inc
fldcw
adc
adc
cmp
bound
jmp
sub
inc
inc
mov
cmp
add
xchg
mov
scas
inc
cmp
jle
mov
sub
cmp
push
or
divb
add
jmp
mov
add
mov
jp
fcmovnb
jl
lret
mov
jno
dec
sbb
aas
movsb
adc
mov
jno
pop
mov
mov
lcall
lds
mov
add
push
fstpl
or
hlt
add
add
or
rolb
rorl
sti
clc
add
stc
and
mov
lock
mov
inc
loopne
mov
adcb
mov
inc
sub
mov
dec
lods
stos
popf
movsb
mov
in
or
aaa
mov
mov
mov
gs
xchg
cmpb
mov
cmp
loopne
out
sbb
xchg
cs
mov
cmp
out
and
push
mov
ret
out
movsl
ret
pushf
pop
or
call
mov
push
cmpl
jmp
movsb
cld
andl
repz
add
add
mov
outsb
cmp
add
dec
jb
mov
fimuls
mov
cmp
and
add
dec
pop
in
lcall
call
xchg
xchg
inc
mov
out
test
shl
stos
push
or
push
mov
pop
sbb
clc
loope
aaa
adc
mov
mov
add
add
cs
xor
sub
fimuls
sub
cmp
outsb
mov
mov
or
loop
xor
lret
adc
mov
mov
jmp
mov
mov
adc
fnstcw
push
cmc
jo
fisttpl
shll
xor
leave
add
adc
push
ljmp
jne
xor
ss
mov
and
sti
stos
mov
mov
test
mov
test
adc
idiv
or
dec
mov
mov
mov
mov
mov
inc
mov
cli
loopne
or
iret
pop
adc
std
adc
sbb
testl
dec
fcoml
add
push
mov
les
push
in
cmp
int3
fisttpll
add
add
lret
mov
iret
add
pop
cmp
andl
jae
adc
or
pop
int3
add
mov
dec
or
add
icebp
sti
lods
mov
add
testl
stos
jl
fnsave
mov
push
add
cmp
sub
cmpsb
mov
inc
mov
jp
cmpsb
sbb
sub
xor
mov
or
xor
mov
dec
fsub
or
test
pop
xchg
clc
insl
xchg
test
mov
cmp
scas
pusha
cmp
or
mov
stc
push
jle
pop
push
jbe
ljmp
lret
or
fmulp
in
lret
pop
push
into
lret
ja
lret
hlt
push
mov
lret
inc
pop
scas
lret
pushf
push
cmpsb
lret
mov
sahf
lret
jle
xchg
lret
or
lret
cmp
lret
addr16
jle
gs
jbe
outsl
dec
out
lret
adc
lret
xchg
dec
fmulp
dec
dec
lret
adcb
push
push
lret
sub
mov
lret
aad
scas
lret
adc
cmpsb
lret
insb
push
sahf
lret
push
push
add
testl
mov
add
cmp
mov
jge
daa
and
std
jmp
inc
lds
sub
icebp
cmp
mov
inc
test
fstl
sub
out
push
fwait
and
ds
mov
add
xchg
lods
outsl
leave
add
mov
loop
ret
in
add
add
lods
jb
les
mov
mov
mov
add
push
lods
stc
rcr
addl
adc
jae
inc
pop
inc
call
lcall
mov
std
inc
ljmp
dec
ret
or
rolb
in
push
sub
push
mov
inc
cld
pusha
pop
inc
push
inc
idiv
add
enter
inc
clc
mov
inc
je
lahf
inc
mov
outsl
dec
dec
cld
cmp
call
mov
pop
xor
add
pop
dec
push
or
stc
jnp
jmp
push
stos
aad
shll
jnp
fbld
lret
data16
idivb
xor
push
sub
inc
push
cmp
incl
ja
xchg
sub
jl
movsl
jp
das
loop
or
jg
dec
lret
clc
int
inc
cld
xor
incl
or
inc
cmpsb
jne
adc
mov
ret
mov
pushf
ud1
mov
call
mov
out
fldl
add
test
cs
push
adc
cs
add
adc
jns
dec
jne
outsl
sbb
ss
jmp
push
movsb
sbb
sbb
aaa
mov
inc
pushf
hlt
mov
push
mov
xor
scas
add
outsb
ret
sbb
or
add
insl
out
sbb
test
lret
sub
pop
pop
test
or
jno
stc
sub
test
add
sbb
cmc
int
mov
insl
ret
sbb
sub
fimull
xor
insl
fistps
cwtl
cmp
idivb
ds
mov
movsb
sub
dec
leave
xchg
scas
inc
dec
adc
add
mov
addl
enter
or
cltd
fisubrl
push
inc
or
mov
inc
clc
call
adcl
jge
loopne
cmc
cltd
sbb
or
cwtl
mov
imul
loope
inc
clc
mov
ret
add
outsb
jb
mov
ja
inc
adc
aad
add
clc
pop
bound
jl
add
xor
pop
mov
inc
or
roll
int3
add
xchg
pop
std
dec
int3
add
mov
mov
lret
data16
lret
jbe
jbe
xor
stc
push
add
nop
adc
push
insl
fists
xchg
sub
call
mov
mov
add
add
push
test
iret
mov
inc
mov
jbe
xor
sti
test
cmp
fdivrl
xchg
mov
insl
stos
and
insl
mov
pop
mov
lret
jmp
mov
and
divl
idivb
cmp
je
fldl
mov
and
mov
bound
data16
int3
gs
add
add
jmp
daa
pop
inc
sub
sbb
pop
adc
nop
pushf
mov
call
repnz
push
mov
xor
jo
loop
fistpll
lahf
pusha
aaa
loop
pushf
mov
fiadds
in
dec
mov
mov
sahf
test
scas
negl
mov
jmp
outsb
xchg
mov
jge
inc
loope
lret
dec
xchg
sar
cmp
and
push
mov
inc
cmp
jb
ret
mov
dec
inc
push
in
mov
push
mov
xchg
xor
inc
inc
test
dec
xor
sarl
imul
scas
cld
shll
leave
insb
out
outsb
ja
xchg
dec
or
add
fmull
mov
push
call
roll
sbb
or
imul
cmp
or
adc
hlt
push
add
stc
adc
rorb
fisttpll
inc
out
pop
shrb
sahf
xor
xor
inc
mov
push
push
mov
shl
push
fstp
inc
ficomps
lcall
leave
jg
subl
in
xchg
call
pop
mov
test
pop
sarb
iret
dec
ret
or
mov
out
jne
xchg
pop
mov
rclb
mov
jg
test
cld
xchg
scas
je
jp
xchg
addr16
add
fsubs
sbb
mov
inc
cld
das
bound
mov
imul
mov
add
add
mov
divb
dec
adc
jb
jl
mov
js
mov
sub
sub
dec
jp
mov
sub
scas
lret
jmp
mov
mov
mov
sub
ss
pushf
adc
sub
push
jl
fwait
bound
xchg
push
pushf
mov
xchg
push
xor
clc
fwait
ret
xchg
pop
ret
fistpll
add
in
pop
stos
push
std
push
rcr
add
push
sbb
ss
sbb
mov
inc
mov
push
rcll
test
mov
adc
xor
aas
stos
push
add
or
in
movsb
shrb
fidivrl
sub
dec
ror
dec
inc
inc
xchg
icebp
sbbl
add
test
sahf
sub
mov
insb
out
imul
rcrl
pusha
mov
or
jmp
dec
cmp
out
lock
jl
cmp
roll
bound
imul
mov
mov
dec
inc
add
and
adcl
rorb
mov
pop
dec
jl
jecxz
add
notl
add
or
add
adc
jge
clc
lea
push
inc
mov
and
call
or
test
lahf
sbbb
lea
push
inc
mov
and
call
fsubrs
test
mov
clc
cmp
dec
clc
mov
adc
into
jae
in
lcall
add
wbinvd
test
dec
clc
pushl
bound
out
cmc
std
sub
or
scas
cmp
mov
mov
xlat
add
out
into
dec
gs
imul
add
jle
mov
popf
leave
xchg
push
xchg
fs
cmp
xor
scas
mov
insl
mov
movl
push
addl
add
cmp
test
aas
lret
movw
lret
jb
test
mov
bound
mov
mov
push
lcall
scas
or
push
stos
sbb
movsl
push
int3
or
mov
test
data16
mov
inc
or
and
mov
adc
xacquire
pusha
lds
pushf
in
add
shrl
jno
dec
or
lods
incb
push
jecxz
call
cwtl
lods
push
imul
cmpl
mov
sahf
filds
test
and
push
and
stos
push
stos
daa
or
mov
rcl
inc
mov
std
xor
pop
push
inc
jmp
xor
insb
in
cs
testl
dec
fldcw
xchg
call
push
lret
mov
xorl
scas
push
push
mov
jae
es
sbb
xchg
call
add
push
add
or
jl
sub
nop
fstps
call
cwtl
push
add
pop
sahf
hlt
addb
inc
pop
jp
inc
add
push
leave
call
dec
push
add
mov
jl
stos
push
dec
cwtl
sbb
call
sbb
hlt
and
jl
jnp
push
pushf
dec
pop
leave
call
or
hlt
adcb
inc
lea
and
sub
notl
test
divl
aaa
cmp
add
mov
dec
clc
sub
sub
jg
rolb
push
add
aaa
cmp
clc
cmp
orb
sbb
xchg
fs
lret
jl
mov
mov
lods
sub
sti
aaa
outsl
scas
dec
sub
fs
stos
cmp
mov
imul
xorl
jge
popf
mov
pop
shlb
add
int3
jb
dec
mov
jle
dec
movsl
pop
xor
mov
fsubrs
bound
jb
jle
dec
movsl
pop
xor
mov
jae
jb
or
inc
movsl
pop
xor
pop
mov
fs
stc
bound
and
mov
mov
mov
fistl
jb
add
dec
and
add
xchg
decb
repz
imull
subl
and
cmp
cmc
pusha
cmp
dec
inc
lds
es
insb
mov
jge
mov
add
sarb
or
mov
fdivr
sbb
es
xchg
mov
inc
jne
movsb
insb
enter
add
hlt
jb
cld
repnz
fadd
push
hlt
into
push
fwait
ss
andl
lahf
andb
call
cmc
fs
outsb
push
mov
cmp
sbb
pop
gs
pop
jne
dec
into
insb
and
mov
mov
jl
push
test
inc
aas
dec
into
jne
pop
dec
mov
push
push
inc
cld
lock
dec
dec
jp
sbb
add
add
push
push
sbb
jmp
push
push
js
push
mov
mov
jae
test
sub
lret
insb
push
inc
mov
lcall
mov
lss
dec
jge
jle
movsl
cs
ljmp
sub
sub
repz
mov
dec
out
jecxz
xchg
loop
out
imul
pushl
outsl
adc
popa
cmpl
cmc
cmp
jg
dec
mov
adcb
add
sub
sub
jg
into
test
dec
pop
repnz
add
das
cmp
test
push
mov
fidivs
lods
xor
lock
sub
jg
mov
jecxz
cmpsl
add
mov
add
push
dec
aam
or
jb
mov
test
cmp
addr16
sbb
mov
and
je
lahf
imul
jp
xchg
orb
mov
loope
pusha
cmpb
adc
or
jmp
icebp
jno
lahf
push
mov
sub
push
cs
mov
sub
push
dec
roll
ss
cli
mov
add
aad
jmp
cmp
stc
jb
out
push
lahf
push
mov
mov
andl
dec
xlat
bound
mov
push
cmp
inc
inc
cmp
fisubrs
ret
stos
dec
fucomi
movsb
inc
add
mov
jbe
scas
pop
jb
add
fdivr
sbb
lret
cmp
in
xchg
add
and
jmp
inc
xor
mov
xor
add
fwait
inc
ret
adc
or
adc
test
fwait
sub
arpl
hlt
adc
jge
push
jnp
mov
stc
je
jnp
shll
lret
test
push
loop
or
jp
sbb
add
add
iret
scas
push
or
add
sbbb
dec
scas
cld
mov
push
pop
mov
pop
dec
mov
jne
int3
xchg
int3
int3
xchg
push
int3
int3
mov
test
sub
test
rolb
inc
mov
inc
test
bound
mov
test
lret
insl
jl
xchg
aas
cmp
jmp
cld
sub
pop
aaa
jge
pop
aaa
in
pop
fbstp
add
in
test
lcall
mov
ljmp
in
gs
xchg
mov
add
sub
roll
in
fnsave
cld
pushl
mov
sbb
or
cmp
lahf
jecxz
cmc
lds
add
and
mov
inc
div
lods
dec
lahf
cltd
sti
sub
mov
lahf
jecxz
add
jne
cmp
mov
fildll
sbb
jbe
mov
daa
sarb
call
inc
pusha
int3
ret
rclb
mov
pop
add
int
mov
add
jmp
pop
fwait
imul
fwait
fwait
imul
scas
or
add
testl
xorl
add
add
mov
xchg
fwait
imul
arpl
shll
xchg
xor
jns
mov
push
push
dec
dec
sub
or
into
add
add
les
cmpsl
mov
push
inc
add
dec
jmp
fdivr
mov
inc
inc
or
xlat
jg
xlat
inc
mov
iret
add
adc
adc
inc
dec
xor
inc
push
and
into
jne
xchg
mov
lcall
loop
cwtl
inc
inc
xor
mov
push
rclb
loopne
dec
pop
stc
adcl
add
lcall
add
cmpl
jae
pushf
xor
inc
cld
stos
inc
inc
xor
pop
stc
xorl
add
push
mov
daa
mov
out
push
insl
clc
xor
testl
loop
sti
add
ds
aad
clc
xor
testl
aaa
mov
cmp
insl
mov
incb
pop
scas
out
xor
test
cmp
shll
loop
inc
out
push
jae
xor
xor
jl
imul
stc
cld
cmp
mov
arpl
fisttpll
xor
pop
movsb
dec
data16
mov
inc
insl
add
lret
aad
mov
mov
pusha
jae
cwtl
fs
cltd
sti
lret
pop
pop
repz
push
jae
fisttpll
jp
add
push
incb
xor
mov
sbb
ret
and
cmpsb
lods
push
in
inc
cwtl
mov
adc
stc
xor
call
push
int3
jge
in
sbbl
repnz
addl
sbb
xchg
mov
lret
add
cmpsl
popf
ret
icebp
lcall
bound
test
clc
icebp
push
add
adc
cld
arpl
sbb
imul
xchg
insl
in
xor
in
add
neg
ret
dec
cmp
and
push
mov
int
jge
add
in
out
inc
push
ret
add
pcmpeqb
mov
mov
lret
jge
jmp
mov
dec
mov
add
fistl
adc
push
sbb
adc
testl
and
pop
ret
or
int3
cs
in
add
jge
sbb
mov
es
inc
loope
jecxz
mov
add
pop
xlat
add
pop
lret
mov
sbb
pop
shrb
aaa
mov
lea
je
pop
pop
lock
add
or
fdivs
roll
sub
xchg
xchg
movsb
add
inc
jns
pop
jns
cmp
mov
cmp
movsl
mov
test
xchg
mov
je
add
mov
out
xorb
jno
jns
jno
mov
je
sub
ja
mov
push
mov
lret
jmp
add
lret
jb
mov
in
xor
xchg
jmp
add
dec
test
sub
sbb
jp
adc
mov
mov
jb
cmc
lret
jmp
jp
mov
insl
add
lret
ret
add
sti
fwait
xorb
jmp
fbld
mov
pushf
add
lret
jb
ss
add
push
push
jb
inc
add
mov
push
into
xchg
mov
fsts
test
add
mov
out
les
sub
testl
imul
cmp
dec
xchg
imul
xor
jmp
pushf
adc
in
dec
loope
mov
mov
imul
movsb
add
add
push
fmull
loope
push
js
xor
add
push
xchg
cli
cmp
jge
arpl
rorb
mov
mov
jle
pop
mov
pop
push
stos
jle
pop
mov
add
lea
fistl
push
lock
mov
gs
idiv
lret
mov
hlt
inc
mov
add
lcall
adcb
or
or
adc
or
jae
add
cmc
mov
fadd
test
xchg
adc
pop
adc
add
mov
iret
add
cwtl
adc
mov
leave
jns
mov
mov
scas
cld
int3
dec
ret
out
lret
cld
dec
dec
cmp
movsb
jp
cmpb
mov
add
je
sbb
mov
or
pop
pushf
add
and
adc
sbb
ja
lds
pop
pop
jo
add
mov
pop
add
or
mov
xor
fs
cmp
mov
data16
sub
aas
jns
mov
dec
std
scas
js
ret
mov
cli
ljmp
pop
mov
jb
or
lcall
jp
sbb
mov
jb
test
jmp
add
lret
adc
movsl
xor
pushl
add
das
add
testb
hlt
dec
jg
std
add
mov
fidivs
push
mov
xlat
mov
mov
jmp
std
mov
add
cmp
or
push
enter
jo
jmp
mov
mov
insl
cmc
ret
jg
mov
test
lods
fldl
mov
add
stc
dec
jb
pop
or
mov
test
mull
out
aaa
pop
cmp
push
mov
pop
xchg
testl
movsl
inc
jge
sbb
pop
lods
lret
add
sub
hlt
lds
stc
push
repz
inc
or
ret
or
jle
scas
xchg
adcl
scas
stc
incl
inc
jge
push
sbb
hlt
inc
and
fildl
sbb
add
push
filds
add
pushf
hlt
addb
test
push
sti
push
pushw
hlt
incb
jge
and
add
jne
inc
adc
lea
sbb
incl
jmp
jl
test
mov
test
mov
add
loop
js
jne
imul
pop
mov
ret
scas
daa
cmp
clc
cmp
and
cmp
xor
cmpsb
push
clc
sbb
fs
xor
test
enter
es
out
pusha
out
outsb
repz
fs
clc
xor
xor
std
jl
inc
outsb
inc
mov
adc
add
add
out
addr16
lods
int3
pop
pop
xchg
in
push
sbb
test
jb
rorl
push
cmp
mov
aas
mov
sub
dec
dec
xor
inc
mov
into
cmp
mov
addr16
dec
movsl
add
mov
popl
add
xorb
add
jmp
mov
jo
shr
fstl
in
sbb
jbe
ss
add
dec
xchg
negl
clc
or
insb
and
in
adc
dec
insb
ljmp
clc
cs
mov
negl
fildl
pop
int
call
push
enter
popl
mov
xchg
not
add
imul
cwtl
inc
sbb
mov
test
call
bound
les
mov
or
adc
push
int3
xchg
pop
cmp
push
xchg
dec
add
sbb
cmp
jle
aas
daa
adc
iret
jne
cmpsl
dec
mov
mov
call
dec
and
in
icebp
mov
lahf
mov
repz
fdivr
mov
add
push
je
enter
ljmp
sbb
hlt
cmp
es
lcall
jl
adcb
inc
out
jl
mov
clc
decl
icebp
fildll
lock
adcl
add
int3
jne
mov
jns
xchg
pop
pop
clc
aaa
shrb
clc
jo
mov
push
add
outsb
js
mov
add
das
pop
dec
cmp
and
jge
outsl
mov
pop
clc
cmp
sbb
gs
mov
dec
rcrb
cmc
inc
add
mov
cld
xor
xor
jmp
jno
or
adc
pop
jno
scas
lret
fucomip
xchg
xchg
cmc
inc
pop
test
rcrb
in
insb
mov
sbb
loope
mov
add
add
addl
xor
outsb
js
mov
sbb
jle
mov
sub
mov
ds
shll
inc
cmp
xorb
inc
loope
push
pop
push
pushf
addr16
mov
mov
push
jge
sub
fbld
push
xchg
aam
mov
insb
jne
arpl
xchg
jmp
out
mov
bound
imull
push
xor
sub
notl
pusha
xlat
jge
push
xor
popa
testb
jnp
outsl
in
dec
jb
les
mov
testl
test
adc
roll
push
pop
mov
inc
mov
popf
mov
jo
add
subl
xor
subl
lret
add
sbb
ds
inc
into
nop
orl
xor
mov
and
clc
mov
ret
jle
repz
adc
xchg
testl
jb
add
lret
pop
mov
and
ds
add
repz
mov
fadds
in
push
int3
int3
push
int3
int3
add
push
int3
int3
dec
push
jmp
cmpsl
mov
mov
xlat
and
sub
pop
lret
mov
sbb
jg
daa
pop
inc
or
idiv
or
mov
clc
jns
mov
popa
jl
jo
pop
sub
test
jecxz
in
add
aad
jge
mov
test
xor
add
inc
push
lret
out
push
lret
add
test
cld
jmp
rolb
daa
jne,pn
out
mov
add
push
pop
jge
add
imul
test
add
in
add
lahf
or
inc
mov
dec
jno
ja
int3
mul
push
lret
out
lret
jmp
xchg
xor
sbb
packsswb
sub
rolb
add
add
jo
inc
ror
lea
loop
inc
shll
rcrb
call
pop
xchg
or
mov
pop
insb
jmp
mov
mov
sti
in
push
xchg
push
out
pushf
pop
std
jae
push
push
push
test
and
push
shrb
movsb
inc
mov
int3
jmp
sahf
xchg
fldcw
add
test
and
clc
inc
inc
scas
or
jmp
sti
in
imul
sbb
pusha
jmp
dec
push
xor
jp
mov
adc
fldenv
add
lret
add
pop
orl
cli
int3
pop
scas
sbb
aad
mov
or
cmp
add
add
add
add
mov
test
jmp
inc
mov
roll
enter
dec
jg
or
jne
add
xorl
leave
jae
inc
iret
idiv
fcmovnb
fisttpll
adc
idiv
lret
fldl
add
fcmovnb
jge
inc
enter
mov
jle
mov
push
mov
mov
jg
push
iret
mov
mov
pop
idiv
mov
lea
push
idiv
pop
pusha
cld
lcall
in
rclb
clc
lcall
aas
dec
mov
push
xchg
test
ficoml
cmp
xchg
and
mul
xor
pop
jmp
xor
add
mov
test
jns
mov
sub
loopne
sub
mov
mov
add
mov
sti
cmp
adc
mov
xor
xchg
je
outsb
je
add
mov
or
jmp
pop
sub
mov
stc
jmp
jecxz
lret
jmp
mov
mov
clc
bound
add
dec
mov
repz
hlt
mov
cmpsw
mov
xchg
pop
ljmp
xor
push
push
jge
inc
xor
jae
dec
fiaddl
or
das
or
inc
jle
loop
mov
nop
mov
xorl
push
or
xorb
mov
mov
nop
pop
sub
jge
adc
dec
jns
and
pushf
sub
movsb
movsl
inc
inc
icebp
add
add
leave
push
cmc
push
add
and
les
sub
xchg
sub
or
mov
fisubrl
mov
jecxz
sub
imul
add
or
or
scas
lret
add
xor
scas
mov
imul
mov
les
int3
insb
fcomip
xor
jmp
cmp
out
sub
pushf
movb
pop
or
add
add
es
int3
xchg
int3
int3
xchg
adc
int3
pop
or
lcall
fdivl
mov
sbb
cmp
jno
push
add
pop
imul
jge
cwtl
rorb
fstpl
push
adc
inc
mov
movsl
inc
mov
pop
or
int3
pop
or
int3
jle
jmp
jle
je
mov
add
add
pop
dec
lea
push
dec
cld
test
loopne
in
stc
mov
imul
jae
jmp
xchg
inc
xchg
lods
dec
jecxz
lock
mov
clc
and
sarb
lret
cmp
divb
dec
lret
out
mov
test
addl
add
test
das
sub
and
shl
aaa
test
dec
sub
pop
adc
mov
setge
jl
aam
aam
xlat
mov
mov
movsb
push
fistl
mov
sub
dec
imul
fiaddl
or
jg
neg
mov
push
xchg
out
jne
pushf
push
insl
push
movsb
repz
add
add
cltd
pop
mov
inc
test
jae
or
test
movsb
xor
xchg
mov
mov
and
jnp
mov
inc
stc
mov
leave
dec
jne
add
pop
add
add
cmpl
jge
mov
cmpsb
xchg
insb
push
mov
lods
fisttpll
mov
jl
not
int
inc
jmp
add
subl
ret
jno
idivb
mov
insb
clc
mov
test
jp
lret
dec
fisttpll
sbb
ds
dec
fnsave
nop
les
jp
les
sub
shlb
mov
insb
clc
add
inc
inc
icebp
xor
add
jb
loop
add
fwait
icebp
mov
add
leave
and
sub
adc
mov
push
cmp
clc
adc
fcomps
stc
jne
adc
testl
push
adc
int3
ss
jmp
and
jp
cwtl
push
stc
test
mov
add
mov
shlb
clc
adc
fmuls
adc
testl
add
mov
or
push
add
data16
scas
filds
jle
aas
lret
jbe
aas
lret
outsb
test
mov
cmp
or
mov
das
cmp
mov
add
and
add
repnz
ss
ret
cmp
test
ret
and
mov
jb
cld
pushl
scas
fs
lret
pop
dec
lret
testb
out
sub
out
adcb
lret
call
loopne
lret
fimull
inc
flds
mov
lret
jmp
add
add
add
add
out
mul
add
lret
fs
lret
cli
dec
roll
add
xor
add
scas
pop
fldl
mov
sub
mov
imul
testl
mov
xchg
inc
jmp
xchg
sbb
push
bound
or
jb
rorl
jmp
sub
cmc
ret
xchg
lret
add
mov
lods
jno
rolb
jmp
mov
mov
loope
push
inc
and
jno
iret
add
lret
pop
mov
jns
jle
mov
or
mov
dec
in
mov
or
mov
adc
or
rcrl
std
adc
jne
add
pop
adc
int3
cs
frstor
add
xchg
sub
cmp
cld
lcall
int3
add
add
sarl
lret
jl
pop
testl
in
adc
idiv
dec
or
jns
jmp
stc
loop
cwtl
negb
push
sub
adc
int3
or
int3
out
int3
int3
or
int3
cs
jmp
pop
aam
push
cmovno
aaa
decl
ret
jmp
fldt
rorl
push
add
fistps
push
test
push
sub
jbe
jae
repz
in
jnp
test
movsl
idiv
in
jnp
mov
cmp
jnp
mov
xor
jnp
test
pop
idiv
inc
ljmp
push
std
cmpsl
add
fs
mov
mov
mov
jnp
mov
add
je
ljmp
dec
je
adc
mov
fidivrs
int3
jmp
mov
lret
jmp
pinsrw
in
lret
pusha
addr16
popf
pop
bound
arpl
pop
push
stos
ds
inc
or
pop
jge
inc
aam
adc
je
mov
pop
ljmp
mov
mov
add
arpl
jecxz
dec
mov
jb
arpl
push
adc
lret
dec
xchg
jnp
fucomp
add
or
adc
mov
dec
js
js
out
adc
add
pop
icebp
hlt
jb
jge
and
lret
push
stc
test
jl
mov
add
xor
mov
mov
push
pop
push
or
add
xor
add
mov
insl
clc
hlt
sub
mov
add
ja
ss
andl
or
mov
mov
mov
dec
jne
out
add
arpl
add
cmp
push
mov
mov
idivb
push
add
push
push
mov
lea
pop
or
enter
enter
xor
jne
add
divl
nop
mov
jg
jne
jl
lret
and
sub
fidivl
jl
adc
iret
unpcklps
jge
cmp
divl
jne
adc
push
sbb
jge
lock
add
mov
pushf
leave
mov
jae
mov
movsl
push
sub
mov
out
inc
lret
movsl
inc
lret
notb
jmp
jbe
dec
pop
mov
testb
add
add
mov
mov
pusha
adc
cmc
scas
inc
clc
aad
inc
xchg
addb
roll
aaa
and
pop
sti
testl
cld
pop
pop
inc
lcall
arpl
incl
movsl
jne
jbe
rolb
cmp
dec
test
adc
inc
or
xor
xor
xor
xor
and
popa
mov
jne
test
bt
enter
in
dec
pop
iret
scas
lret
jmp
stc
cmc
jb
imull
repz
lods
jmp
jmp
dec
xor
fwait
jnp
jae
sub
pusha
jp
jb
jle
iret
xor
mov
pop
leave
jmp
dec
mov
xor
add
push
imul
imul
add
push
arpl
mov
inc
jns
add
decl
add
mov
lcall
push
jg
push
cmc
test
add
cmc
jns
call
add
mov
scas
hlt
jns
jmp
into
dec
sub
scas
mov
mov
dec
jne
cmp
jmp
insb
popa
pop
push
add
jle
hlt
or
sbb
or
pop
les
lret
add
and
jno
add
mov
add
mov
jae
jmp
int
adc
int
sub
ret
mov
mov
cmp
or
sub
outsl
popa
or
adc
lret
jne
cwtl
inc
jle
incl
inc
aaa
adc
fbstp
cwtl
inc
jge
jmp
xor
mov
outsl
jg
lcall
mov
inc
idiv
fwait
int3
notl
into
mov
dec
xchg
pop
bound
mov
jbe
dec
or
lea
bound
bound
jecxz
and
repnz
into
jne
pop
jo
add
leave
push
push
add
imul
addr16
cli
sbbl
add
lods
push
outsl
scas
push
insb
add
or
fldl
outsl
cmp
notb
leave
addr16
push
add
mov
jbe
mov
insb
jae
pushf
add
in
out
add
or
add
xlat
jb
mov
aaa
pop
jo
xor
inc
jns
ret
lret
jmp
stos
sarl
hlt
in
pop
add
js
sar
and
inc
xor
push
inc
mov
pop
mov
bound
mov
lcall
outsb
aas
sti
gs
add
inc
dec
repnz
outsb
ret
sbb
inc
inc
aaa
jge
add
add
imul
into
jbe
mov
inc
mov
fwait
hlt
pop
fisubs
ds
mov
mov
push
or
push
lock
dec
push
std
xchg
out
mov
in
add
add
out
mov
jecxz
divl
ret
sub
icebp
in
sbb
mov
lahf
test
pop
inc
inc
mov
and
or
mov
mov
ljmp
fwait
adc
data16
or
imul
adc
decl
out
mov
inc
adc
pop
lock
gs
add
dec
sbbl
adc
aas
or
stc
scas
push
sbb
jge
out
ja
in
add
mov
pop
adc
pusha
jg
mov
adc
lret
icebp
aas
or
or
lret
icebp
jp
lret
mov
sarb
ret
xchg
in
test
loop
add
or
bound
adc
mov
push
bound
mov
add
js
mov
in
je
mov
sti
mov
add
sub
mov
mov
or
mov
mov
mov
mov
mov
bound
sti
cmc
sbb
sub
in
vmaskmovdqu
stc
testl
pop
mov
in
mov
mov
lret
jmp
jae
ret
das
jmp
cmp
iret
xchg
pop
xor
adc
cmp
hlt
push
xor
xchg
in
add
bound
std
shr
push
lods
mov
add
push
pop
in
sbb
and
add
push
cmp
jnp
ret
outsl
in
pop
test
add
fsubp
insl
bound
aam
mov
mov
push
jmp
sbb
fucomp
dec
mov
add
add
push
jb
rorb
xor
insl
jbe
rorl
adc
sub
pusha
mov
in
mov
mov
rorl
cld
rclb
push
addr16
imulb
push
mov
lock
es
jmp
not
scas
jns
rolb
jmp
add
in
insl
pushf
aad
andl
jg
decb
and
adc
fwait
in
adc
sub
add
pop
jl
pop
in
or
fsubrl
adc
in
mov
add
push
aas
ds
sub
and
lea
out
mov
add
in
cld
sub
int
jmp
xchg
iret
idiv
sub
push
adc
fildl
add
enter
mov
adcb
jb
xchg
mov
add
xor
rcll
xor
push
xchg
fcmovne
jecxz
insb
xchg
mov
jb
test
xchg
add
jbe
test
dec
std
push
fnsave
mov
xchg
ljmp
add
jae
adc
in
xchg
movsl
xor
test
mov
je
movsb
jb
in
push
dec
fstl
mov
jb
jge
lret
sub
push
sbb
xchg
jge
mov
stos
and
mov
cmpsb
enter
add
loope
jl
lret
jmp
push
mov
jmp
add
mov
cmpsb
enter
add
mov
sub
cmpsb
loope
push
inc
loopne
xchg
and
mov
std
enter
jg
lret
jmp
inc
or
push
add
lret
jmp
fsts
add
sbb
mov
in
or
mov
or
pop
push
jmp
mov
or
add
dec
sbb
jbe
es
jb
bound
dec
cwtl
lret
add
xchg
mov
pop
lcall
mov
mov
pop
jo
push
push
jmp
out
pop
lock
push
jmp
cmp
mov
mov
lret
add
fucomi
mov
fwait
xor
loop
jns
mov
cmpsb
popa
or
test
adc
lret
push
push
or
scas
push
fcmovne
mov
enter
inc
scas
push
fwait
leave
jge
xchg
or
mov
mov
ret
lcall
data16
xchg
mov
rclb
push
dec
leave
fstl
jne
fsubs
push
scas
push
dec
leave
jne
inc
push
mov
mov
add
add
aam
push
mov
test
xchg
mov
mov
dec
or
sub
push
add
pushf
sbb
mov
mov
cmp
adc
jb
out
pop
insb
psubusb
sahf
int3
mov
inc
repz
adc
lcall
adcl
add
add
push
add
add
adc
daa
adc
xor
cld
pushl
lret
jmp
mov
imul
jmp
cmpsb
out
push
lock
add
sbb
jmp
pop
mov
sbb
ret
lret
jmp
aad
push
cmc
adc
das
cmp
mov
pop
adc
xchg
pop
push
push
daa
call
ffree
dec
stos
xor
push
addr16
lret
jmp
add
dec
lods
loop
lret
mov
mov
lret
add
addb
jmp
cs
mov
mov
add
call
add
negb
push
mov
lret
add
push
roll
jg
mov
or
jmp
fldenv
push
jnp
fldl
les
sub
jge
adc
jg
mov
lret
add
sub
push
add
pop
mov
mov
mov
popa
push
cmpsl
cwtl
std
int
setge
inc
adcb
add
push
push
cld
add
int3
add
aam
jnp
leave
jecxz
add
int
xlat
nop
adc
xor
clc
stos
jl
mov
mov
add
add
mov
mov
mov
push
sbb
sarb
push
dec
int
inc
dec
push
pop
or
mov
push
jmp
add
add
ret
adc
push
fstl
add
in
jmp
mov
jg
out
xchg
jns
add
jno
mov
jne
inc
fldl
mov
inc
test
popf
jb
mov
jb
decl
es
test
push
push
and
adc
mov
jno
add
js
add
ret
mov
cmp
cmpsb
lret
out
jno
and
add
sti
loope
leave
mov
jmp
je
mov
mov
mov
pop
testl
and
add
and
fidivs
stos
ret
rclb
add
lret
add
stc
rorl
sbb
fidivs
and
decl
out
and
lods
cmp
mov
out
jno
and
add
push
adc
mov
mov
mov
cmp
adc
and
jmp
fcomps
lret
mov
dec
jecxz
inc
nop
dec
ret
lret
add
mov
jmp
add
dec
mov
int
add
adc
mov
sbb
inc
mov
mov
pop
mov
inc
push
cltd
add
lcall
and
add
mov
sub
pusha
enter
jl
jne
loopne
add
bound
and
adc
sbb
mov
xor
adc
add
shlb
add
into
mov
dec
mov
or
cmpsl
adc
push
lock
out
jne
cmpsl
mov
sub
out
shlb
add
jg
gs
add
mov
adcl
lods
push
mov
mov
in
flds
dec
outsb
or
add
xor
mov
ret
add
mov
inc
jns
jmp
out
lods
xchg
fsts
loope
test
inc
or
lods
xchg
fwait
mov
jb
test
mov
mov
fwait
adc
cld
fidivl
mov
mov
ficompl
movaps
jns
mov
cs
cmpsb
jecxz
es
pop
push
add
mul
xor
inc
push
mov
jb
pop
in
jl
mov
add
fnstcw
in
and
shlb
ret
lret
jmp
js
lret
jmp
loop
lret
fldcw
inc
adc
cli
scas
cmc
jo
scas
test
push
mov
aaa
adc
lret
jmp
pop
cmp
fnsave
mov
push
js
mov
ret
aas
or
mov
outsl
fwait
pop
ret
mov
jo
cmp
pop
push
sbb
push
jmp
cmp
or
lds
jmp
mov
jo
jo
and
jmp
fimuls
icebp
cs
mov
mov
jmp
cmp
in
mov
pop
cmp
in
or
imul
xlat
mov
pop
bound
xchg
mov
xchg
lods
push
les
mov
cmp
decl
or
je
mov
inc
inc
or
add
xor
mov
popa
xor
idiv
dec
into
jae
mov
into
add
pop
fs
adcl
jae
add
idiv
or
adc
into
add
rolb
lret
add
into
add
mov
or
add
or
int3
xchg
int3
int3
or
push
mov
dec
loope
rclb
test
mov
mov
data16
aas
lret
jle
mov
xor
jae
imul
cmp
add
add
pop
mov
ret
fld
adc
bound
test
push
mov
fimull
cvtps2pi
pop
sub
pop
jns
add
fldt
mov
fdivrs
fst
pop
sub
pop
xchg
add
push
lods
cwtl
xchg
mov
bound
stc
jb
cmpb
add
mov
adc
add
xchg
inc
add
movsl
inc
jns
bound
jmp
cld
sti
lods
out
inc
adc
add
add
jnp
mov
and
das
sti
loope
add
mov
adc
or
das
add
jle
mov
jmp
xor
mov
jno
mov
pop
testl
jmp
xchg
add
stc
xchg
pushf
inc
fs
xchg
cmp
mov
cltd
inc
neg
loopne
jne
mov
inc
bound
mov
xchg
dec
adc
rclb
bound
mov
insl
mov
js
faddl
or
pop
shll
mov
js
mov
pop
shrl
into
into
mov
enter
add
mov
mov
add
dec
mov
mov
stc
push
push
jno
mov
dec
fildl
push
movsb
pop
pop
cs
int3
int3
es
jmp
es
mov
push
jg
fwait
lret
mov
and
fwait
lret
push
dec
jnp
mov
roll
sub
adc
sub
dec
lret
xchg
jg
or
call
add
add
sub
lret
mov
sarl
and
adc
dec
or
int3
xlat
jmp
mov
mov
leave
push
lret
mov
aam
das
cmpb
push
popa
xor
push
add
outsl
test
jl
data16
loope
jle
sbb
add
pusha
lahf
sbb
cmp
sub
popa
add
cmpsl
iret
fistps
es
lds
and
roll
mov
sti
test
pop
int3
push
cmp
rorl
sub
adc
or
push
cmpsb
mov
bound
add
dec
lods
pop
mov
int3
add
pop
popf
xchg
push
shll
jl
cld
cmc
add
mov
pop
xchg
or
jmp
inc
xor
jmp
repnz
in
pusha
fdivs
leave
sub
lock
adc
sbb
dec
addb
into
sub
pusha
jmp
std
push
pop
aam
lret
jmp
add
shr
pop
lret
mov
jo
xor
or
mov
divl
mov
add
add
jg
loop
sbb
mov
jle
movsb
lret
add
add
jmp
aaa
add
jb
lret
mov
mov
lret
add
adc
ret
adc
stc
mov
mov
push
divl
xor
je
fmuls
jmp
xor
sbb
mov
add
add
outsl
std
movl
loop
mov
dec
pusha
das
add
add
push
idiv
jae
jmp
xchg
aad
pusha
loopne
add
pop
mov
push
adc
into
jg
push
cmp
lret
xchg
push
scas
into
add
mov
orl
aam
xchg
int3
or
adc
out
data16
adc
into
jle
dec
xchg
add
dec
dec
ret
add
std
or
jge
jl
ret
mov
dec
adc
into
or
jle
add
xor
mov
ret
in
xchg
adc
mov
jl
pop
cmpb
pop
jbe
lds
clc
sub
mov
jle
bound
test
cli
lcall
xlat
jge
add
jnp
jmp
sbb
jbe
lea
mov
xor
std
popf
jns
mull
aaa
lret
jbe
aaa
lret
outsb
mov
out
sub
pop
add
cmp
jmp
pop
or
js
movsb
repnz
lret
jmp
sub
ds
lret
jmp
sub
dec
sbb
add
mov
ljmp
add
ret
lods
out
push
mov
push
popf
stos
sbb
scas
or
mov
mov
jmp
jno
add
push
sub
jecxz
mov
or
mov
or
mov
or
add
mov
xor
int3
andl
mov
pop
nop
adc
mov
push
jmp
add
inc
fsubrs
lret
push
sub
nop
adc
pop
sub
jmp
cmpsb
dec
test
push
mov
les
in
les
dec
mov
into
shll
std
mov
jmp
loop
sbb
pop
loopne
pop
push
jmp
shl
adc
dec
into
inc
adc
rol
pop
pmulhw
push
sbb
stc
inc
daa
into
aas
adc
jp
xchg
mov
add
mov
jo
enterw
jmp
mov
bound
mov
push
out
sub
mov
mov
pop
add
dec
ret
add
or
out
imul
push
fwait
lret
pop
sub
popl
mov
add
add
jle
push
mov
sti
cmp
je
mov
mov
lret
jbe
cmp
outsb
and
lret
scas
jne
cmp
and
lret
out
je
cmp
sti
test
dec
adc
mov
pushl
xor
mov
push
pop
xchg
mov
add
outsb
test
mov
add
mov
mov
adc
fs
push
mov
je
cmpsb
jmp
adc
mov
mov
add
int3
pop
add
pop
push
pop
inc
jns
mov
adc
adc
dec
test
sub
lret
jb
pop
mov
add
jns
push
out
lock
inc
mov
add
loopne
js
outsl
mov
aaa
cld
in
jl
ret
popa
pop
mov
adc
jmp
shll
fdiv
jp
pxor
mov
stc
repnz
inc
addb
mov
inc
mov
mov
add
icebp
jmp
push
lret
push
pusha
adc
jmp
insl
push
divl
add
ljmp
sub
add
add
mov
mov
js
or
dec
add
mov
dec
es
add
mov
jbe
pop
xchg
adcl
cmp
push
xchg
inc
aas
int
dec
sbb
mov
push
add
push
sbb
mov
push
shrl
into
xor
or
add
loopne
ss
mov
mov
inc
je
add
fldl
sbb
hlt
mov
dec
faddl
xchg
test
mov
xor
rorb
or
neg
push
push
sbb
fbstp
lahf
dec
fcmove
add
lret
dec
or
add
test
add
inc
sarb
jg
push
add
testl
ret
push
filds
cmp
adc
mov
in
mov
mov
mov
sub
add
in
inc
in
mov
fwait
push
add
add
xchg
sub
add
fidivs
add
jbe
pushf
xor
bound
stos
adc
in
popa
mov
xor
mov
movsb
xor
test
jns
add
mov
ret
dec
repz
dec
mov
xor
jge
shr
add
push
push
jge
jmp
je
dec
scas
xorb
jns
dec
jmp
add
xchg
jmp
inc
xlat
call
rcll
sub
loopne
gs
add
lret
jmp
pop
lods
dec
cmpsl
sldt
add
add
lret
jmp
int
push
std
adc
bound
mov
push
mov
divl
cli
jns
xchg
fbstp
orl
inc
lds
pop
loopne
orb
mov
shr
push
mov
mov
push
inc
dec
in
inc
jmp
movsb
inc
imull
rorb
xchg
mov
cmp
outsb
icebp
mov
ret
sub
xor
mov
fwait
mov
xor
push
mov
sti
call
mov
adc
add
pop
add
fwait
into
out
orl
clc
add
cmp
dec
xchg
pop
lret
push
mov
cmpsb
fildl
inc
dec
or
or
fsub
pop
jae
push
int3
je
pop
mov
add
hlt
clc
pusha
repnz
add
mov
lock
clc
or
add
xlat
adc
ja
or
xor
or
loop
add
mov
jb
add
sbb
jae
add
in
aas
add
cmp
add
mov
test
mov
pop
adc
xor
divb
xor
divb
xor
divb
cmp
divb
aaa
cld
divb
ss
divb
xor
adc
mov
adc
add
add
leave
xor
add
and
add
xor
pusha
sahf
fldl
sahf
in
add
leave
mov
inc
sahf
filds
sahf
out
add
leave
mov
pop
dec
cmpsl
repz
aam
cwtl
pop
inc
sahf
pop
fmull
addl
sub
mov
jle
hlt
cmp
mov
jbe
pop
xor
stos
out
jmp
add
or
arpl
js
fiadds
xor
out
xchg
lret
jmp
fld
lds
sub
cld
imul
add
mov
cmp
xor
jns
jmp
cmp
and
jns
ljmp
dec
in
mov
add
mov
add
mov
add
mov
add
add
cmp
mov
mov
add
mov
add
mov
add
mov
dec
in
cmp
and
enter
aam
push
aad
out
add
enter
dec
fcoml
enter
mov
loop
decl
pop
je
xchg
cltd
add
rorl
hlt
clc
shlb
inc
add
add
ljmp
clc
add
cmpsl
data16
or
or
rolb
jmp
out
mov
mov
cmp
mov
sbb
in
cmp
mov
iret
add
mov
cmp
cmpl
xor
add
mov
sub
mov
je
aas
je
and
adc
add
movsl
mov
lods
xor
stc
jae
or
xor
or
in
mov
clc
mov
add
adc
pushl
inc
ret
jmp
hlt
cld
test
sub
cmpl
cld
and
and
jmp
cld
sub
xor
and
push
fldl
das
and
add
add
inc
jmp
xchg
lret
bound
or
add
mov
stc
out
jge
push
add
push
hlt
fmull
bound
add
lret
push
add
fcoms
mov
rol
pop
xchg
lret
bound
or
add
mov
lret
les
inc
add
lret
mov
stos
jo
adc
scas
inc
imul
cmp
jge
loopne
add
sub
jmp
pop
shrb
sub
shlb
push
mov
add
mov
adc
jno
xor
lret
rorb
push
mov
or
jle
inc
jmp
mov
xor
add
shrb
test
fdivs
std
lret
sub
lret
xor
xor
cmp
fcmovnb
and
shll
and
sbb
add
dec
int3
jge
lret
cmpb
fistpl
add
push
add
popf
lret
xor
add
clc
add
lret
and
inc
fwait
inc
mov
pop
or
addl
add
add
add
or
jmp
jge
out
es
pop
dec
aam
dec
lret
add
ja
pop
xor
sbb
rdpmc
inc
les
sub
sub
and
sub
mov
repz
sub
test
hlt
es
xor
into
add
and
add
add
int3
iret
add
inc
call
clc
mov
add
repnz
or
cmp
clc
lea
xchg
jae
incb
sub
push
jge
pushl
inc
ret
cmp
roll
push
add
jmp
mov
mov
decl
mov
fiadds
or
jmp
hlt
mov
mov
mov
mov
cli
sbb
mov
adc
je
fmuls
push
adc
sub
adc
xor
push
add
or
test
push
sbb
pop
out
sbb
stos
pop
mov
add
xor
xor
jge
add
inc
cmp
stc
cmp
add
call
add
aas
xor
fnsave
add
mov
inc
mov
jne
les
add
mov
aad
mov
mov
add
testb
es
je
mov
jmp
jbe
jecxz
test
mov
add
cmpb
add
mov
cmc
mov
dec
pop
and
push
gs
pop
and
jno
lea
sub
mov
subl
jg
out
sub
xor
add
enter
lret
orb
mov
sbb
add
les
adc
mov
xchg
dec
pop
and
push
insl
inc
inc
cmp
jmp
cmpsb
inc
add
or
test
ja
fwait
iret
idiv
test
add
call
nop
fisubrl
jmp
idiv
mov
loopne
mov
mov
and
and
out
sbb
clc
daa
stc
fildl
mov
add
std
and
add
aad
cmp
mov
sub
jae
lea
mov
movsl
inc
std
jb
repz
sub
test
adc
and
jg
incl
lret
xor
loopne
imulb
loopne
inc
inc
les
xchg
std
pop
aaa
filds
adc
sub
mov
fldenv
mov
add
inc
in
fbstp
cmp
mov
inc
in
jmp
adc
movsl
adc
add
lahf
std
xchg
lea
mov
sbb
mov
or
add
sub
add
xor
add
sub
add
xor
add
mov
add
mov
add
add
lret
add
mov
add
mov
add
mov
add
mov
add
mov
add
push
cmp
jbe
lret
add
cmp
data16
negl
cmp
push
mov
cmp
inc
mov
lret
add
sahf
ret
add
cmpsb
roll
es
repz
mov
push
mov
xor
add
add
add
clc
jl
fdivr
aas
mov
clc
jg
fdivr
jmp
jmp
jae
mov
jne
mov
rolb
notl
jle
idivl
jl
out
jl
jmp
pop
or
lock
fnstenv
or
add
fdivr
jle
mov
jle
mov
jle
cmpsl
aas
jl
pop
mov
add
add
and
push
or
or
into
add
fwait
mov
push
mov
sbb
sub
fbstp
cmp
int3
xchg
insl
je
xor
lret
das
cmp
fadds
out
ror
xchg
enter
int3
ja
xchg
mov
sahf
sub
shlb
dec
or
mov
pop
test
jno
in
add
and
cltd
jmp
in
and
add
mov
jle
mov
mov
test
lret
stc
test
add
inc
jmp
mov
xchg
mov
pushf
fwait
outsl
cs
lds
lret
jl
pop
sti
mov
add
ror
shlb
shlb
dec
mov
add
mov
xchg
aad
call
gs
and
test
lds
mov
iret
sbb
jmp
sbb
push
in
lea
jmp
ret
jne
jmp
lods
pop
xchg
add
cmpsl
ret
outsl
hlt
xchg
dec
and
subb
or
loop
dec
or
push
sbbl
add
ret
lds
in
add
mov
stos
adc
adc
sub
insb
add
cli
enter
add
xchg
and
push
and
jl
mov
add
ret
insb
int3
lcall
xor
xor
cmp
jl
jmp
sbb
flds
mov
clc
jle
scas
daa
ja
aam
or
mov
loopne
mov
fsubr
cld
out
jge
add
jne
or
std
jl
fidivl
jge
sar
in
loope
lahf
adc
add
and
pop
bound
adc
mov
mov
mov
mov
loopne
sarb
or
add
stc
xlat
dec
loope
adc
sub
hlt
iret
xor
jg
out
adc
add
sub
mov
cld
pushl
mov
adc
add
insb
cld
test
add
mov
add
adc
fwait
adc
or
ffreep
jnp
fcompl
and
es
mov
mov
jge
and
movsl
dec
or
ret
or
and
add
mov
xor
jp
dec
cld
repz
jge
incl
ret
mov
lret
xchg
add
lret
jmp
dec
or
mov
mov
rorb
stos
xor
xchg
xchg
shl
rolb
dec
pop
add
scas
mov
fisubrl
fnstcw
out
leave
sbb
dec
fsts
jge
add
mov
xchg
out
out
adc
inc
scas
fstps
xor
out
enter
add
out
fldln2
inc
sbb
test
in
test
outsb
mov
int
mov
cmp
sub
mov
pop
jmp
mov
sub
cmp
outsb
icebp
mov
inc
sbb
sbb
or
inc
or
add
add
inc
mul
push
les
jmp
pop
push
pop
in
pop
pop
xchg
ret
inc
dec
int
dec
test
out
lret
icebp
lcall
lods
adc
paddsb
imulb
rolb
add
mov
fldt
xor
or
fisttpl
lahf
das
imul
mulb
jl,pn
aaa
or
add
lret
ret
adc
sbb
cltd
int3
add
repz
test
in
or
mov
call
jl
testl
fadd
pop
ja
xor
cmp
pop
dec
ret
rol
mov
sub
lss
or
add
clc
cmp
fisubl
setns
imul
ds
pushl
jns
int3
repz
and
clc
adcb
pushl
add
leave
pusha
xlat
daa
leave
loope
jge
and
ja
leave
xor
mov
add
sub
jl
and
mov
mov
xor
in
push
mov
lahf
and
mov
int3
sahf
js
lret
push
adc
push
int3
mov
rorl
push
testb
cmp
push
mov
xchg
jle
out
sbb
sub
xchg
ret
stos
dec
pop
add
mov
sub
test
lret
ljmp
sub
push
ret
stos
dec
aas
add
mov
lods
test
test
lret
rclb
jno
pushf
add
out
cmp
in
cmp
jb
ljmp
scas
lret
add
mov
sub
add
cld
insl
sar
repnz
sub
test
cmp
mov
sbb
push
jmp
mov
jbe
outsb
roll
mov
sbb
scas
cmp
sbb
cmp
and
sub
cmpsl
push
mov
inc
xlat
sub
jbe
jmp
mov
sub
jbe
insl
add
repz
mov
sub
mov
and
mov
and
shlb
and
scas
cwtl
xor
idivl
and
scas
add
enter
enter
andb
fs
idivl
pusha
cmp
adc
mov
ror
inc
outsl
pusha
or
jg
subl
add
push
aaa
pusha
pop
enter
scas
fimull
and
adc
fidivs
push
je
out
test
call
jb
sbb
test
stos
stos
test
sahf
and
test
and
and
mov
and
add
cmpl
pop
mov
cmp
jo
cltd
jne
ljmp
jno
std
sbb
jno
je
mov
cli
and
ret
je
je
scas
popf
test
ret
jno
or
call
stos
mov
and
add
movaps
mov
cmpsl
pop
sbb
aaa
stc
pop
xor
sbb
xchg
sbb
cmp
or
test
xor
test
jo
sbb
push
sub
lea
jo
stc
push
pushf
inc
fimuls
xchg
jp
fcomps
adc
sub
add
xchg
jg
add
cwtl
inc
js
cwtl
cmp
jnp
dec
insl
rcr
aam
xor
bound
jmp
xor
xor
and
cmp
push
cmp
in
hlt
jb
dec
rclb
cmp
and
ljmp
push
dec
adc
cmpsb
add
push
or
out
lret
add
outsb
test
addb
add
add
push
je
std
sub
loopne
fwait
mov
push
push
or
mov
jge
fisubrs
add
dec
test
adc
aad
jbe
movsb
jb
fidivrl
jae
cwtl
aam
jae
je
adcl
mov
jb
xor
jle
xchg
xchg
cmc
decl
int
or
and
add
int3
add
push
inc
hlt
dec
mov
inc
jle
test
clc
int
fimuls
push
jne
cmp
pop
pop
pmuludq
inc
pmulhuw
test
lods
testl
sub
pop
das
inc
scas
xor
mov
sbbl
idivl
fidivrl
cmc
out
loopne
add
cld
mov
jb
test
cmp
cmp
iret
xor
pushl
ret
mov
std
add
xor
pushl
push
test
mov
jo
mov
or
cmp
sahf
push
movsb
sarl
cltd
or
add
jo
pop
push
add
add
pushf
fldt
cltd
lods
xchg
or
ljmp
lret
out
jmp
mov
push
mov
jmp
pop
add
fists
out
push
sub
sub
jae
cwtl
or
ret
cs
adc
rolb
pop
dec
mov
mov
jb
mov
cwtl
add
or
add
test
nop
aam
xor
decl
cmpsl
fcmove
das
cli
mov
adc
repnz
push
jne
or
add
mov
loope
in
aaa
sarl
jne
test
cmp
add
mov
clc
pop
ret
and
push
fwait
jmp
jecxz
ret
mov
mov
lcall
insb
hlt
add
sbb
mov
add
into
cmpsl
rcl
cmpsl
rolb
aad
push
in
roll
mov
shlb
add
popa
out
decl
xchg
push
dec
lret
add
mov
mov
cld
push
sbb
push
cmp
int3
clc
jmp
daa
mov
call
add
add
test
dec
shlb
pop
cmp
mov
xor
iret
push
mov
mov
pusha
add
mov
add
jecxz
jecxz
pop
jg
adc
inc
sub
jle
or
cmp
add
dec
in
lret
jbe
dec
fdivrs
outsl
or
or
fmuls
add
fiadds
add
xor
xor
add
mov
cltd
incb
sub
add
lods
cltd
push
call
mov
pop
rclb
push
and
push
les
dec
mov
pop
les
lds
popa
xchg
fistps
sub
mov
xor
dec
mov
push
movsb
adc
shrb
add
push
in
mov
mov
add
push
pushf
sbb
xorb
or
mov
stos
pop
frstor
add
subl
or
aam
int3
xchg
mov
sub
pusha
push
sub
cmpb
xor
in
icebp
push
add
push
dec
frstor
dec
add
addr16
push
push
sub
jge
les
insl
pop
les
push
inc
stc
cmp
insb
add
nop
sbb
mov
bound
rclb
or
cwtl
push
sti
andb
mov
insl
in
jp
or
mov
enter
mov
jge
sbb
jnp
and
jnp
sub
jge
mov
repz
les
add
sti
mov
int3
mov
fmull
lret
int
dec
iret
push
push
sbb
jnp
or
mov
dec
dec
mov
ds
inc
cmpsl
push
rolb
int3
cwtl
testl
ds
rcrb
or
incl
faddl
dec
outsb
xor
pop
int
in
mov
sub
lcall
fdivr
pop
out
mov
pop
push
aam
and
mov
push
lods
int3
push
and
data16
mov
out
push
hlt
pop
ss
out
frstor
div
int
nop
jge
cmpsl
hlt
notl
shlb
mov
movsl
mov
notl
cmpsl
jmp
test
xchg
ja
hlt
add
push
cmc
negl
inc
hlt
add
add
mov
jle
inc
sub
mull
lods
dec
hlt
loope
in
mov
add
icebp
pushf
sti
dec
sub
pop
jmp
test
and
sub
push
rorb
scas
stos
sbb
add
xor
sti
jl
jnp
repz
testb
and
cmp
inc
repz
das
jno
orl
add
adc
enter
enter
sti
call
push
cmp
push
sub
std
les
fisttpll
in
xor
mov
lret
bound
push
mov
adc
call
add
iret
push
pop
pop
push
dec
stc
xor
add
icebp
xchg
add
lret
insl
frstor
add
adc
js
pop
cmp
add
jge
dec
ret
test
nop
arpl
push
or
cmp
inc
mov
mov
scas
pushf
mov
or
les
jne
les
dec
nop
mov
xor
add
mov
push
jb
rorl
movsl
jge
xchg
repz
hlt
lcall
sbb
add
or
add
xor
add
sbbb
jbe
push
push
scas
adc
int
jne
and
pop
lods
mov
push
scas
add
scas
add
or
push
fwait
leave
add
jmp
out
decl
or
pop
xor
mov
or
dec
fs
add
leave
add
shlb
pop
jge
add
add
mov
shrb
ror
and
jge
stos
aad
mov
addl
push
dec
popa
cltd
shr
cmp
divl
outsl
adc
inc
xor
add
rclb
sub
test
pop
rorl
push
jl
cmpsb
cmpsl
ret
jbe
test
test
mov
stc
notl
inc
push
neg
idivb
scas
scas
ret
jbe
cltd
inc
adc
cmp
test
pop
push
negl
ds
xor
mul
jnp
mov
ret
jbe
lret
jb
mov
xor
cmc
sbb
shr
ret
jae
push
adc
je
sbb
outsl
mov
shrb
lcall
jle
outsl
cmpsl
push
sbb
jl
sbb
ja
push
mov
sub
das
ljmp
ret
outsb
ret
sbb
sbbb
scas
push
sub
xlat
outsl
mov
adc
call
popa
int
cmp
adc
int3
pop
lahf
loop
mov
cmp
insb
enter
insb
test
idivl
std
and
ljmp
jmp
cmp
cmp
add
mov
mov
lds
jge
dec
and
pop
inc
ret
cmp
movsb
movsl
clc
mov
decl
andl
inc
cmp
bound
out
ret
lock
insb
sub
jae
rolb
js
dec
and
cld
lea
jae
mov
insl
clc
subb
imul
add
pushf
dec
xchg
out
ljmp
test
lcall
push
push
sub
mov
cs
cld
push
mov
inc
xor
mov
incl
adc
mov
cwtl
add
mov
in
mov
mov
add
std
cmc
inc
and
addl
xor
loope
sti
mov
mov
push
ret
mov
repnz
sub
cld
mov
loop
cmp
pop
ds
testl
add
les
cltd
add
popf
ss
pop
out
mov
mul
fisubl
scas
add
out
add
rep
outsb
lret
pop
gs
aad
mov
faddl
mov
mov
sub
popa
shrl
or
in
mov
jg
pop
xor
sbb
sub
int3
mov
decb
jnp
dec
fwait
jp
aam
adc
adc
sbb
pusha
mov
out
lds
adc
imul
add
fistl
add
inc
pushf
or
mov
xchg
jnp
mov
stos
rcrb
jbe
fildl
sub
call
xchg
lret
jge
frndint
jp
mov
popa
pop
subl
add
fnsave
das
dec
jb
mov
sbb
lcall
icebp
jmp
jg
stos
cmp
pop
xchg
and
mov
push
adc
cmp
dec
push
sub
dec
insl
stos
cmp
in
mov
lret
jmp
mov
xchg
cmp
mov
sbb
xchg
sahf
cmp
rcrl
andb
cs
fisubs
daa
pop
adc
enter
add
lret
enter
bswap
add
adcb
add
pop
push
fmulp
add
fisttpl
sbb
adc
dec
mov
add
lret
add
pop
mov
loopne
call
xchg
pusha
je
stos
lea
push
adc
add
fidivl
jne
icebp
xorl
mov
out
push
sti
mov
pop
adc
mov
mov
or
or
jno
and
adc
mov
notl
add
mov
mov
adc
xor
adc
xor
adc
testl
popa
je
sub
rorl
pushl
push
les
jmp
int
mov
jmp
push
hlt
jl
add
or
rcr
vpshad
mov
xchg
dec
out
xchg
jl
lock
add
dec
icebp
gs
scas
jbe
sti
dec
add
mov
out
cmc
adcl
jb
mov
jge
jae
fcomps
push
cmp
cmpsl
dec
std
lret
push
lret
mov
xor
adc
or
popf
adc
add
test
jp
ret
ljmp
test
sti
mov
pop
fs
jmp
leave
pop
mov
stc
rcrb
pusha
jmp
xorl
mov
fwait
jmp
mov
rolb
inc
inc
add
adc
stos
mov
neg
or
cmp
dec
add
lcall
xor
cmp
dec
jne
mov
and
dec
clc
lahf
gs
mov
stos
into
fcmove
add
xchg
inc
or
push
xor
and
and
in
or
add
fwait
cmc
mov
cmp
pop
loopne
scas
cmpl
lcall
mov
add
add
mov
push
fs
mov
push
ja
adc
mov
or
std
pop
out
mov
mov
pop
setp
mov
cld
mov
inc
pop
out
cmp
xor
clc
cmp
add
inc
sbb
mov
mov
popf
ss
pop
sti
add
add
lea
mov
sarb
add
fsub
imull
loope
mull
push
add
cmpsb
dec
notl
jns
mov
mov
ficompl
xor
inc
or
push
out
dec
push
roll
cmp
out
idivl
pop
mov
leave
orl
jmp
jp
out
js
out
clc
add
js
or
leave
xor
call
jp
out
stc
push
xchg
icebp
js
out
js
out
xor
cmp
inc
movsl
daa
ret
js
and
js
inc
movsl
daa
mov
inc
popf
daa
mov
cli
adc
pop
les
jbe
sbb
ja
sbb
movb
out
repnz
lret
mov
and
aam
sub
add
jb
xchg
loopne
out
mov
cmc
pushl
js
ret
inc
notl
lret
dec
jl
lods
mov
add
pusha
mov
inc
adc
jo
mov
mov
xor
in
push
gs
jnp
movsl
mov
test
mov
jmp
nop
iret
add
add
lret
pop
insl
mov
aaa
xchg
xchg
outsb
cmp
or
push
inc
fisttpl
push
inc
lret
xchg
xor
inc
fisttpl
out
into
push
inc
lret
movl
addr16
mov
mov
inc
fwait
psubq
fisttpl
cmc
push
insl
into
add
mov
add
rorb
cld
add
add
mov
add
pop
ljmp
pop
lret
out
mov
add
and
in
mov
inc
add
push
pusha
mov
pop
mov
cmp
clc
repz
mov
cmp
sub
mov
loopne
or
jae
sub
icebp
pop
add
adc
rcrb
pop
pop
adc
das
pop
add
addr16
or
mov
fsubrs
mov
lock
aas
pop
or
jmp
cmp
repnz
fidivs
cs
add
sub
fxch
and
cmp
xchg
xadd
adc
ret
loop
into
mov
imul
add
jl
cli
inc
cmpsl
dec
lock
sbb
jnp
inc
mov
loop
add
fs
jb
mov
jo
mov
mov
mov
lds
shll
adc
jbe
sub
outsb
jmp
jbe
popa
call
test
jmp
jge
fld
mov
aas
inc
and
data16
add
add
rolb
mov
cmp
mov
or
sbb
les
or
les
jge
jge
into
or
xlat
add
add
xor
in
cmp
mov
push
jne
clc
xchg
add
xchg
jb
roll
adc
dec
rcl
sbb
orl
ret
addl
add
add
jae
add
add
xchg
add
cwtl
insb
in
add
iret
add
cltd
call
pop
xchg
push
fs
inc
lahf
inc
call
ret
shlb
call
loopne
dec
xor
jmp
scas
mov
test
mov
into
add
pushf
pop
rorl
dec
xor
incl
js
call
ret
ror
adc
rol
adc
pusha
inc
mov
or
loope
ret
push
out
adc
mov
sti
out
xchg
adc
add
jl
sbb
and
add
mov
pop
movd
push
mull
insl
inc
sbb
imul
jg
sbb
sbb
mov
xor
xor
add
jl
call
divl
cmp
lea
aaa
cmp
pop
push
repz
mov
jns
bound
jp
mov
add
sti
pop
cmp
stc
lret
jb
out
sub
lahf
fadds
in
in
outsb
mov
insb
sti
lea
popf
arpl
lret
shll
or
addb
roll
jb
icebp
pop
push
mov
lret
pop
adc
jmp
aas
scas
cmpsb
fistpl
fcmovnb
jecxz
mov
jo
lcall
call
cmp
les
jno
lods
repz
push
in
mov
add
call
lcall
std
push
les
test
push
inc
lds
sarl
jp
add
fists
ret
enter
or
stos
out
jb
out
cwtl
iret
sbb
cwtl
les
fdiv
jne
xchg
fstl
sahf
dec
out
out
cmp
movsl
neg
ljmp
adc
test
out
xlat
scas
lea
cmp
faddl
add
sbb
add
enter
shlb
adcl
dec
sbb
jmp
jb
mov
iret
mov
or
add
in
inc
push
lret
iret
mov
int3
cmc
jmp
add
inc
ljmp
adc
add
cmp
lret
lret
xor
out
cmp
inc
add
inc
add
adc
out
pushl
mov
add
sbb
inc
mov
call
add
pushf
rolb
nop
rolb
hlt
add
mov
loop
and
mov
add
mov
loopne
add
mov
inc
mov
add
mov
loope
in
rolb
push
rolb
hlt
add
mov
loope
add
mov
inc
mov
rolb
hlt
add
mov
loope
movsl
push
roll
sbb
inc
mov
add
mov
pop
loope
add
inc
iret
lock
jmp
loope
add
scas
into
lock
jmp
loope
add
fidivrl
lret
loopne
add
bound
mov
fsubp
std
add
mov
add
iret
mov
mov
mov
mov
jo
jmp
loopne
add
mov
jo
jmp
loopne
add
shl
lret
add
orb
xchg
cld
divb
pop
mov
jmp
push
cld
test
mov
iret
test
add
mov
add
mov
add
mov
add
cs
push
pusha
adc
push
lahf
sbb
jmp
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
fwait
iret
cmp
mov
and
mov
or
fwait
iret
sbb
fwait
iret
add
mov
adc
mov
dec
adc
pop
iret
dec
adc
xor
dec
iret
add
dec
iret
in
adc
clc
adc
in
dec
iret
hlt
adc
sub
sbb
sub
sbb
adc
or
loopne
or
int3
adc
iret
fcoms
sbb
les
or
aam
or
or
fcmovne
xchg
adc
into
hlt
adc
into
rclb
into
lods
adc
into
mov
adc
into
mov
mov
add
ret
jle
ret
hlt
add
ret
mov
mov
hlt
add
hlt
add
ret
pop
ret
hlt
add
hlt
add
add
hlt
add
add
add
hlt
add
hlt
add
hlt
add
mov
hlt
add
mov
hlt
add
ret
in
add
hlt
add
hlt
add
fucompp
add
fucomi
add
jmp
add
jmp
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
shr
add
shr
add
shr
add
shr
add
and
jmp
add
jmp
add
fsubr
add
fsubr
add
pop
adc
mov
pop
jmp
mov
pop
jmp
mov
pop
jmp
mov
pop
jmp
mov
pop
jmp
mov
pop
jmp
mov
pop
jmp
mov
pop
jmp
add
inc
pop
jmp
mov
pop
jmp
mov
pop
jmp
mov
pop
jmp
mov
adc
mov
pop
jmp
mov
pop
jmp
lret
lret
xor
lret
lret
inc
pand
sub
fcmovne
cmp
lret
lret
and
lret
lret
xor
fwait
lret
sbb
fwait
lret
sub
mov
adc
lret
sbb
add
lret
adc
mov
and
pop
lret
or
pop
lret
sbb
dec
lret
add
dec
lret
adc
pop
lret
cld
push
pop
lret
ret
adc
hlt
push
dec
lret
add
sbb
in
push
sbb
clc
push
or
in
or
xor
sbb
push
adc
lret
sub
or
dec
adc
lret
loopne
mov
add
mov
add
lods
hlt
add
movsb
hlt
add
mov
hlt
add
add
add
mov
hlt
add
movsb
hlt
add
hlt
add
hlt
add
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
movsb
hlt
add
mov
hlt
add
lods
hlt
add
hlt
add
mov
add
add
jmp
add
into
jmp
add
into
jmp
add
int
add
int
add
int
add
into
jmp
add
int
add
int
add
int3
jmp
add
int
add
aad
add
aam
add
jecxz
add
fsub
jmp
add
jmp
add
iret
add
mov
add
mov
add
mov
add
mov
add
jmp
mov
add
jmp
mov
pop
jmp
mov
add
jmp
mov
add
jmp
mov
or
mov
push
jmp
add
cmpsl
adc
mov
adc
mov
add
jmp
mov
add
jmp
mov
adc
or
mov
sbb
loop
sbb
out
adc
enter
enter
scas
pand
dec
or
lret
movl
cmp
lret
xchg
bswap
xor
fwait
iret
mov
fwait
iret
sbb
add
iret
xchg
setnp
and
mov
sbb
pop
iret
adc
dec
iret
or
pop
iret
jne
pop
iret
in
or
iret
clc
or
iret
in
sbb
lock
in
in
in
call
mov
in
sbb
in
and
add
mov
add
lods
in
add
add
add
in
shlb
add
mov
in
movsb
scas
in
test
in
pushf
mov
in
movsb
scas
in
test
in
pushf
mov
in
xchg
scas
in
out
movsb
in
repnz
in
ljmp
jmp
add
enter
enter
enter
loopne
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
mov
add
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
add
adc
mov
adc
mov
or
mov
or
mov
or
pop
int3
test
pop
int3
orb
int3
insb
or
or
sbb
jo
or
pop
or
int3
push
or
int3
mov
or
pushf
or
int3
mov
lret
jne
fcmovne
orl
lret
cwtl
or
lret
test
fcmovne
nop
or
lret
jl
add
lret
mov
fwait
lret
je
fwait
lret
orb
lret
insb
or
lret
or
lret
or
mov
sbb
pop
lret
add
pop
lret
adc
mov
add
in
or
in
add
in
clc
mov
in
lock
add
test
add
mov
in
lock
add
test
add
add
in
dec
test
in
cs
in
shrb
in
enter
lods
mov
in
movsb
test
add
in
pushf
mov
in
xchg
test
add
ss
inc
shr
cs
cmp
jmp
add
shr
cs
push
add
shr
mov
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
shr
repnz
faddp
jmp
add
shr
rol
add
mov
or
mov
or
mov
or
add
iret
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
add
and
add
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
pop
or
movl
cmp
add
dec
or
xor
lret
movl
fwait
iret
cmp
fwait
iret
and
mov
mov
mov
add
mov
in
cmp
in
jle
in
subb
add
mov
in
test
push
in
pop
mov
in
lock
in
in
in
call
add
in
stc
stos
in
in
mov
in
in
in
jmp
mov
in
xor
in
int
in
sarl
ret
jmp
add
jmp
add
ret
jmp
add
ret
jmp
add
ret
jmp
add
add
daa
ret
jmp
add
ret
jmp
add
ret
jmp
add
ret
jmp
add
jmp
add
jmp
add
adc
jmp
add
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
add
inc
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
lret
int3
xor
lret
int3
push
or
fwait
int3
sub
fwait
int3
push
or
int3
push
or
int3
push
or
int3
decb
pop
int3
or
pop
int3
testb
int3
add
dec
int3
out
or
cli
or
out
dec
int3
repnz
fimuls
sbb
ljmp
int3
loop
or
into
or
int3
fimull
sbb
or
int3
rorb
or
mov
or
fcmovne
mov
lret
lret
ret
lret
scas
or
loop
scas
stos
loop
mov
loop
cmpsb
mov
in
sahf
stos
in
mov
mov
in
mov
in
xchg
in
jle
in
subb
add
in
outsb
stos
in
jb
in
mov
push
in
pop
add
in
push
mov
in
dec
stos
in
push
stos
in
inc
mov
in
ds
lret
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
mov
jmp
add
jmp
add
jmp
add
ret
jmp
add
ret
jmp
add
ret
in
ret
loopne
jmp
jmp
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
add
push
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
or
push
or
enter
enter
enter
enter
enter
fcmovne
cmp
lret
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
loop
fiaddl
mov
add
lods
loop
shlb
loop
lret
add
mov
add
mov
add
mov
add
hlt
add
hlt
add
hlt
add
hlt
add
hlt
add
hlt
add
hlt
add
hlt
add
mov
add
hlt
add
scas
hlt
add
mov
add
add
hlt
add
hlt
add
hlt
add
lret
jmp
add
add
jmp
add
shr
add
iret
jmp
add
jmp
add
jmp
add
shr
add
shr
add
shr
add
jmp
add
shr
add
rcl
add
jmp
add
shr
add
shr
add
add
shr
add
add
mov
std
call
mov
std
call
mov
call
mov
std
call
mov
cld
call
mov
call
mov
call
mov
call
add
xor
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
lcall
int
push
sbb
pop
push
or
push
or
push
push
sbb
bound
sbb
dec
push
or
pop
push
or
inc
push
fcmovne
push
push
fcmovne
or
lret
int3
testl
fcmovne
out
add
int3
cs
lret
int3
cmp
lret
int3
es
fwait
int3
xor
fwait
int3
push
push
mov
sub
mov
push
push
fwait
int3
and
fwait
int3
push
push
mov
sbb
mov
push
push
pop
int3
adc
pop
int3
incb
dec
int3
testb
int3
out
add
scas
repnz
mov
add
scas
repnz
mov
add
add
repnz
scas
repnz
mov
add
scas
repnz
mov
add
scas
repnz
mov
add
scas
repnz
scas
repnz
scas
repnz
scas
hlt
add
scas
hlt
add
scas
hlt
add
scas
hlt
add
scas
hlt
add
scas
hlt
add
mov
jmp
add
shr
add
shr
add
shr
add
shr
add
shr
add
jmp
add
shr
add
jmp
add
jmp
add
jmp
add
shr
add
shr
add
shr
add
add
add
shr
add
jmp
add
shr
add
std
call
mov
std
call
mov
sti
call
mov
sti
call
mov
sti
call
mov
sti
call
mov
cld
call
mov
sti
call
mov
cld
call
mov
cld
call
add
and
call
mov
cld
call
mov
cld
call
mov
cld
call
mov
cld
call
pop
leave
xchg
add
leave
jle
dec
leave
mov
leave
jbe
pop
leave
addb
outsb
add
leave
jp
sbb
data16
leave
jb
or
pop
add
leave
push
sbb
push
add
leave
bound
leave
dec
add
or
pop
add
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
repnz
mov
add
scas
repnz
mov
add
scas
repnz
mov
add
mov
add
mov
add
mov
add
add
repnz
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
jmp
add
int3
jmp
add
pop
int3
jmp
add
jmp
add
jmp
add
jmp
add
lret
jmp
add
lret
jmp
add
jmp
add
jmp
add
int3
jmp
add
out
xor
lret
lods
jmp
add
lret
cmpsb
dec
lods
ret
mov
cmp
add
pop
faddp
xlat
leave
add
mov
add
scas
pop
pop
test
lret
subl
fisubrl
sub
push
adc
dec
mov
jmp
mov
add
scas
pop
xchg
jno
sbb
xorb
jmp
mov
insl
in
mov
add
push
dec
out
add
ljmp
mov
test
and
add
fdivp
mov
mov
inc
add
xor
mov
mov
negb
xlat
in
addl
shlb
pop
loop
adc
push
dec
insl
or
hlt
orb
hlt
ret
negb
pop
leave
addl
ret
xor
adc
dec
xor
add
sbb
aam
out
mov
add
dec
xor
inc
clc
or
adcl
jne
xor
call
pop
ret
call
or
mov
sub
negl
cli
jecxz
mov
mov
insl
mov
loopne
mov
mov
and
loop
mov
and
cmc
mov
add
hlt
inc
insl
mov
and
shrb
std
xor
loopne
lock
and
cltd
mov
outsl
aad
cmpl
insl
shrb
add
in
loopne
ja
add
stos
outsl
incl
scas
icebp
sarl
mov
call
xor
inc
bts
out
popa
or
pop
mov
add
mov
or
pop
add
jmp
aam
dec
sbb
mov
outsb
inc
xchg
fstpl
out
pusha
or
mov
jmp
or
add
jmp
aam
dec
movsb
add
push
ficoms
push
repz
xchg
leave
sub
sbb
mov
add
and
je
cmp
and
ffreep
push
lcall
mov
ret
sar
mulb
sub
adcb
insl
out
xor
xchg
or
fnstenv
mov
jne
icebp
jo
imul
and
hlt
dec
jne
shll
jb
add
sub
decb
ret
loopne
lods
or
shrl
add
add
or
xor
call
and
xor
orb
jne
xor
and
cmp
add
xor
insb
and
or
adc
xor
dec
and
call
sbb
xor
movl
add
cmc
adcb
and
sbb
add
add
in
ljmp
sbb
sahf
and
jae
in
dec
dec
xor
adcl
cli
ret
das
xor
add
jg
add
icebp
jno
add
adc
ret
xor
xor
repnz
testl
scas
in
aas
out
jnp
xchg
out
and
loop
add
xor
icebp
mov
insl
mov
lcall
repnz
icebp
cmp
adcl
test
add
scas
mov
in
or
mov
lea
fldl
in
or
and
test
lret
mov
in
mov
lods
lret
dec
or
sub
push
ror
stos
addl
call
mov
fldt
inc
xchg
dec
sbb
mov
push
mov
cmc
icebp
dec
push
insl
mov
in
mov
mov
xchg
repz
scas
push
rcl
sub
add
inc
inc
jecxz
sub
cltd
sbb
jb
andl
testb
xor
push
add
push
add
push
sbbl
out
dec
xchg
test
test
cmp
jmp
jecxz
lods
cmp
out
sub
imulb
leave
add
pop
repnz
repnz
and
dec
cmp
and
loope
push
leave
fisubs
repnz
push
fs
inc
popa
testb
inc
xor
add
sbb
add
jae
sti
call
cmpl
outsb
push
mov
out
pushl
xor
add
pop
call
addl
add
dec
insl
or
int
add
hlt
push
aad
add
pop
and
ret
add
add
dec
insl
or
jne
pop
int
addl
add
add
add
aad
add
sbb
ret
xorl
jg
mov
loop
add
shrd
cmc
movsl
xorl
cmp
add
stos
pop
aam
lods
ret
xor
cld
ds
jne
in
dec
lret
imull
out
and
notl
call
or
pop
int
sub
je
lods
ret
xor
jg
test
and
aas
fidivrs
mov
es
out
lods
divl
lret
pop
mov
inc
pushf
sbb
lods
jmp
sbb
inc
mov
loop
mov
movsb
iret
movsb
std
aad
sbb
lret
xor
sub
mov
shr
add
test
cmp
test
cmp
mov
xlat
test
cmp
mov
xlat
test
cmp
mov
xlat
test
out
adc
popa
arpl
imulb
movsl
cwtl
sbb
push
subl
testb
push
jmp
inc
fcomip
sub
stos
aad
mov
fcomip
sub
mov
imulb
roll
pop
jecxz
in
pusha
faddp
push
lds
push
test
xor
pusha
faddp
push
lahf
jecxz
ret
inc
fiadds
decb
cmc
cmpsb
and
sbbl
imul
mov
mov
or
je
xor
stc
mov
int
or
int
incl
jl
call
ret
nop
sbbl
push
in
addl
and
push
add
call
ret
dec
fwait
push
add
call
ret
dec
fwait
push
add
mov
out
orl
add
scas
cld
jl
ret
cmp
add
xor
cmpl
stc
or
cmpl
fs
add
inc
mov
insb
mov
xor
scas
cld
or
jp
stc
sbb
loope
add
sti
cmpsb
testl
sub
cmp
adc
add
lcall
pop
sbb
aas
in
dec
scas
in
ret
xor
add
loopne
das
fwait
std
scas
addl
add
add
jmp
cld
pushl
sbb
sti
insb
lret
push
mov
or
dec
mov
add
mov
pop
pushf
mov
jecxz
scas
and
mov
call
test
in
xor
add
mov
inc
stos
fst
imul
int
adc
add
jmp
inc
mov
in
pop
ljmp
shrl
scas
jno
and
mov
or
jo
ljmp
lret
insl
hlt
cmp
xchg
sbb
lret
mov
add
icebp
dec
jne
scas
pusha
or
pop
xor
ljmp
call
add
dec
fcomi
sub
pop
push
jmp
shr
sbb
imulb
lds
out
sub
jmp
adc
roll
sahf
jecxz
icebp
pop
fiaddl
cmp
sti
fiadds
push
movsb
iret
imul
mov
ret
xorl
and
adc
cmpl
xor
sti
jmp
adc
shr
incl
mov
insl
or
xchg
sbb
adc
insl
push
or
mul
outsb
sbb
pushl
call
ret
addb
inc
mov
and
push
add
mov
rcrb
add
ss
adcl
add
xor
cmpl
ljmp
insl
cli
jge
roll
ret
or
and
and
stos
testl
sub
divl
iret
mul
cmp
div
jp
cli
adc
faddl
cmp
mov
movsl
cmp
ret
add
daa
loope
pop
add
insb
lods
mov
rorl
push
or
mov
sarb
add
in
lcall
xchg
scas
iret
lods
imul
mov
jb
insb
sti
mov
inc
xchg
rclb
add
pop
cmp
sti
xchg
leave
stos
lods
out
lods
outsl
inc
rorb
loope
push
out
mov
push
lods
icebp
inc
movsb
loopne
sbb
out
sbb
out
adc
out
pop
push
jecxz
or
fucomip
add
pushf
add
sbb
jle
cmp
lret
ret
out
imull
jne
mov
rclb
cmp
std
inc
pusha
ss
add
pop
cs
pop
xor
rcrb
aad
pop
sub
fcompl
vmaxpd
mov
mov
lods
js
push
and
add
pop
push
adc
cltd
pop
incb
bound
push
mov
cmp
or
and
je
inc
add
xor
cld
adc
mov
testl
jns
insl
and
out
decl
xor
lea
push
add
lret
or
hlt
decb
out
inc
mov
mov
call
add
adc
out
ret
rorb
jnp
mov
lds
sbbl
rorb
xor
sub
std
je
xor
clc
insb
and
mov
std
mov
push
je
fcmovnbe
idiv
enter
and
ret
xchg
mov
add
daa
fiadds
cld
and
xor
jecxz
add
fisubrs
jne
cli
push
add
test
mov
imull
mov
jge
xchg
loopne
mov
mov
jae
xchg
fnsave
mov
add
cmovp
pop
push
mov
sbb
xchg
jp
clc
or
loop
add
jp
repz
mov
popa
mov
insb
test
lret
stos
fwait
push
rcll
cli
add
push
mov
out
add
cmc
test
dec
lock
movb
lcall
cs
or
test
test
add
shrl
push
fistps
jno
ljmp
cwtl
lret
xor
sbb
mov
jmp
clc
inc
mov
out
lret
jmp
out
int3
inc
test
jg
out
mov
lret
ljmp
aam
add
mov
sbb
in
or
filds
adc
push
div
jno
sti
faddp
leave
fisubrs
es
push
push
cmp
scas
or
push
out
add
mov
add
out
add
pop
scas
lret
add
mov
ficoml
add
pxor
roll
jmp
or
imulb
or
sub
ljmp
cmp
sti
add
pop
js
je
dec
clc
add
fld1
push
lods
jno
ret
sbb
je
dec
clc
or
leave
fiadds
jno
ret
arpl
xor
mov
and
add
sbb
dec
into
add
fwait
shrb
mov
cmp
hlt
and
cmpb
insb
and
out
movsb
lea
or
add
ret
shll
shll
stc
insb
mov
mov
in
ret
call
sub
add
cmpl
mov
jnp
rol
fs
mov
pop
add
mov
pop
sbb
ss
push
scas
push
cmc
cmp
cmc
jbe
repz
mov
mov
push
sbb
mov
ret
mov
testl
and
hlt
out
inc
pushf
div
lret
dec
sub
leave
push
jns
in
rorl
mov
daa
aas
enter
mov
movsl
loopne
lods
subl
fwait
adc
out
cld
daa
icebp
sqrtps
call
jp
mov
cmp
shl
push
aad
stos
mov
shll
pop
enter
lret
xor
lret
add
and
add
push
lret
hlt
push
or
out
lret
add
mov
adc
add
mov
xlat
sbb
imulb
aam
add
mov
cmp
repz
in
pop
mov
cmc
xchg
leave
fimuls
or
imulb
xor
add
scas
scas
int3
cld
push
mov
imul
lds
jne
dec
clc
icebp
rcl
call
stos
sub
dec
clc
icebp
vpmaxub
mov
repz
adc
add
scas
or
push
ljmp
jno
testb
lret
add
or
add
xlat
pmaddwd
imul
cmp
add
or
add
mov
mov
cli
dec
lret
fcmovne
add
jnp
cmc
jmp
test
lcall
lret
or
mov
cli
lcall
mov
add
jmp
mov
cli
decl
add
dec
lret
xor
dec
stos
cli
pushl
mov
add
push
out
call
mov
add
cmp
cmc
push
clc
in
jnp
sti
in
add
mov
add
mov
cmp
int
repnz
imul
mov
mov
add
mov
xor
lcall
mov
add
sub
cld
jge
in
pushl
insl
mov
add
sbb
push
pop
out
decl
loope
inc
int3
out
mov
out
mov
adc
cmc
and
mov
out
mov
das
cmp
std
les
add
mov
out
mov
sbb
hlt
aad
call
add
lret
mov
mov
mov
lods
shl
test
lret
out
mov
sub
les
call
add
lret
out
mov
out
mov
sub
push
les
test
add
xchg
add
jmp
out
test
ffreep
test
mulb
fadd
idiv
mov
divb
mov
notb
idiv
sahf
testb
imulb
jle
testb
idivb
mov
idivb
fidivrs
testb
mov
testb
testb
mov
add
add
hlt
call
iret
add
jns
cmc
jmp
cmc
incl
add
cmc
jmp
add
cmc
pushl
cmc
lcall
iret
add
out
push
cmc
call
pop
cmc
jmp
pop
cmc
incl
push
jmp
pop
cmc
lcall
pop
cmc
mov
push
cmc
pushl
push
cmc
dec
cli
hlt
call
cli
hlt
incl
jecxz
hlt
lcall
add
lcall
add
add
mov
inc
cld
gs
cld
pop
out
inc
cld
push
or
dec
add
cld
inc
lock
cld
cmp
inc
dec
cld
sub
je
cld
sbb
pop
dec
cld
or
movsb
cmp
std
aad
cld
cmc
in
cld
in
cmpl
xchg
fldl
cmp
add
sbb
lds
cld
mov
aad
cld
lods
fnstsw
cld
movsl
mov
cld
popf
mov
aas
cld
lea
aas
cld
jge
aaa
inc
jbe
push
inc
outsb
shrl
shll
rcll
dec
rorl
sar
ss
cs
rcrl
rcrl
roll
shl
add
shll
sarb
rclb
out
and
dec
dec
sarb
into
shr
mov
dec
mov
ror
scas
shrb
sahf
rcrb
mov
add
mov
mulb
clc
mov
mul
jmp
testb
mov
div
sti
mov
add
add
mov
negb
jnp
testb
idivb
imul
jmp
mov
idivb
jno
testb
notb
mov
neg
jo
notb
jno
idiv
jo
imulb
jo
testb
mov
testb
or
stc
or
dec
or
call
or
incl
imul
cmc
incl
or
jns
cmc
ljmp
cmc
decl
cmc
lcall
add
cmc
jmp
cmc
lcall
add
cmc
lcall
cmc
inc
add
cmc
lcall
add
cmc
ljmp
cmc
inc
add
cmc
inc
add
cmc
incl
pop
add
aas
cld
popf
pop
aas
cld
xchg
xor
cld
lea
ds
test
ds
jge
ds
jne
aas
cld
insl
mov
cld
mov
ss
push
cmpsb
ss
dec
mov
inc
cld
cmp
fiadds
sub
ds
sbb
jb
cld
or
dec
ss
std
cmp
cld
cmc
mov
inc
cld
add
mov
add
pop
aaa
cld
int
aaa
cld
lds
add
xor
jmp
add
dec
call
xor
mov
call
xor
sub
mov
mov
sbb
push
mov
out
inc
mov
mov
das
cs
inc
das
add
mov
outsb
das
push
mov
imulb
mov
enter
lods
cs
sbb
fidivrs
cs
mov
add
cmpb
sub
mov
divb
mov
imul
mov
add
ret
mov
mulb
sarb
jmp
jmp
test
in
mov
negb
hlt
mov
testb
idivb
mov
notb
insl
mov
test
mov
not
insb
mov
testb
mov
testb
adc
decl
adc
jmp
adc
decl
add
mov
add
add
add
add
std
add
decl
add
flds
cmc
pushl
adc
incl
cmc
call
adc
jmp
cmc
dec
add
jg
cmc
ljmp
cmc
in
add
jmp
add
incl
add
push
push
incl
add
pushl
add
pushl
add
jmp
push
lcall
pop
sub
cld
int
sub
add
cld
mov
dec
cmp
lods
push
cmp
movsl
cmpb
popf
fmuls
xchg
les
dec
cld
test
dec
cld
jge
dec
cld
jne
dec
cld
insl
sub
cld
and
cld
push
add
cld
inc
sbb
cld
cmp
repnz
cld
sub
sahf
ds
sbb
lods
ds
or
outsb
dec
cld
add
imul
sti
dec
cld
in
lret
out
orb
js
mov
mov
dec
mov
mov
shlb
cmpsb
mov
fdivl
xchg
mov
inc
xchg
scas
dec
jbe
ret
mov
ljmp
mov
xchg
inc
inc
mov
inc
xor
ss
dec
cmp
mov
push
add
mov
add
mov
mov
addr16
notb
mov
cmp
mov
mulb
mov
outsl
js
imul
mov
add
out
idiv
mov
cmp
lret
adcb
lret
sub
lret
sbb
lret
xorb
scas
mov
pop
scas
lret
subb
imulb
mov
cmp
mov
neg
mov
cmp
mov
out
mov
addb
mov
in
fdivs
testb
hlt
hlt
decl
int3
add
push
int3
add
in
lret
add
lret
add
aad
add
incl
xchg
lret
add
jg
hlt
decl
push
decl
push
incl
sti
hlt
inc
sti
hlt
pushl
sti
hlt
incl
sti
hlt
jmp
hlt
in
sti
hlt
lcall
lret
add
dec
cld
hlt
pushl
cld
add
movsb
add
mov
cmp
in
lock
in
cmp
add
sarb
cld
aad
cmp
int
cmp
lds
cmp
mov
push
cmp
lods
movsb
add
mov
add
dec
pop
push
imul
pop
push
dec
add
incl
jns
sub
pop
sbb
lret
add
push
pop
rcll
imul
sbb
out
adc
add
lret
or
jns
add
add
pop
std
and
add
call
sbb
pusha
cmp
dec
dec
daa
lds
mov
sbb
and
xor
adc
lret
dec
or
and
dec
add
jge
or
adc
or
test
hlt
leave
sahf
sub
or
dec
sbb
and
add
cs
cmp
cs
sub
inc
aad
add
shll
pop
daa
mov
lret
int
dec
or
cmp
lcall
lea
aas
sarb
push
cmp
mov
cld
mov
cmp
nop
das
inc
int
sub
jmp
enter
mov
push
mov
add
mull
aam
insl
mov
push
add
xchg
xor
mov
dec
add
xchg
sub
add
negl
out
jmp
add
int
filds
push
je
shlb
scas
in
jno
sbb
outsl
add
jo
movsl
jecxz
outsb
in
shlb
in
push
outsb
fs
ljmp
pop
fbld
out
pop
inc
lret
or
ja
fs
ljmp
inc
in
popa
popa
aaa
add
cmp
inc
ljmp
cmp
dec
add
ljmp
dec
iret
jg
mov
daa
insb
div
sub
pushl
les
and
movsb
add
jmp
imul
lret
sbb
ret
and
lds
imul
test
cld
dec
mov
daa
popa
call
pop
jns
popa
add
adcl
inc
xchg
push
imul
insb
out
jbe
and
scas
jne
insb
incb
insb
out
push
adc
movsl
add
add
pop
arpl
dec
push
jb
lret
pop
adc
sub
sub
adc
aaa
push
and
pop
sbb
add
lret
cs
data16
sub
and
addl
adc
push
lret
stos
add
and
inc
push
aaa
std
aaa
dec
and
aaa
dec
or
pop
outsl
pop
shll
lret
testl
mov
rolb
adc
sbb
int3
cmp
mov
adc
addl
shll
add
add
sub
dec
jmp
test
es
xor
xchg
daa
aas
push
rorb
dec
inc
lds
add
mov
jb
shrb
lret
add
scas
daa
jb
mov
lret
add
mov
pop
std
popf
and
xchg
cmovb
mov
pop
loope
lret
add
lods
sbb
aad
and
nop
cmovb
iret
pop
pop
mov
lret
add
mov
push
idivl
add
lock
add
cld
jb
cmp
jno
adc
add
or
xor
insb
lahf
into
popa
imul
add
imul
int3
stos
add
or
cmpsl
aam
popa
scas
cli
push
arpl
int3
xor
bound
into
popa
imul
add
add
lret
inc
add
into
fs
aam
popa
push
arpl
pop
outsb
fwait
lret
lret
add
dec
rcrl
inc
sarb
jne
dec
push
imul
fadds
inc
out
push
imul
cs
push
mov
pop
insb
in
add
imul
and
sar
shlb
pop
add
filds
mov
call
mov
pop
pop
fcoms
gs
rcrb
ds
mov
dec
dec
xchg
and
mov
ds
nop
imul
xor
adc
addr16
add
lret
cmpsb
and
add
sbb
sub
add
sbb
das
lret
and
sbb
ss
add
sbb
fstpl
cmp
daa
sahf
lret
clts
in
xor
cmp
and
or
jnp
call
and
sub
adc
cli
and
call
and
rclb
inc
and
adc
int3
stos
adc
rolb
insb
mov
xor
mov
add
rcrb
xchg
and
mov
cld
xchg
lret
es
jns
and
or
add
mov
pop
pop
jge
pop
aas
mov
or
rcrl
pop
das
mov
cmp
test
dec
jmp
movsb
push
pusha
adc
enter
mov
cld
sbb
cmp
mov
dec
cld
mov
cmp
fistpl
add
add
popa
insl
imul
add
pop
jae
popa
insl
sub
inc
add
lods
inc
imul
clc
jb
out
int
je
enter
int
gs
push
dec
out
fistl
pop
enter
aad
popa
inc
push
sbb
movsb
add
fsubrp
pop
push
scas
int3
jb
into
mov
push
gs
jmp
jb
out
jae
hlt
push
insl
mov
ja
cltd
lods
inc
imul
divl
mov
pop
arpl
or
mov
testl
xchg
inc
fs
push
cmp
scas
popa
or
push
pop
xor
push
pop
jae
pop
pop
gs
or
mov
add
iret
and
data16
clc
adc
jmp
pop
insb
jbe
adc
pop
add
leave
cld
call
popa
jmp
insb
xlat
inc
pop
xchg
rorl
fs
xor
adc
add
mov
shlb
push
aaa
pushf
adc
lds
mov
sbb
in
xor
and
xchg
sbb
xor
and
sbb
cmp
sarl
test
mov
fdivr
add
push
je
sarl
js
mov
sub
test
inc
and
aaa
sbb
or
xchg
push
sbb
add
xor
xorl
or
xchg
pop
xor
push
pop
sub
and
xor
std
xchg
xor
add
pusha
lret
js
mov
add
mov
xor
add
cs
mov
xor
mov
cld
mov
mov
cld
mov
sbb
mov
push
add
pop
gs
push
insl
aas
xchg
das
insb
inc
mov
cld
cmp
sbb
insl
dec
ficomps
jb
mov
std
sbb
cmp
lret
add
xchg
punpckhbw
mov
or
add
lret
inc
outsb
add
leave
jb
fsubr
imul
leave
pop
gs
fadds
add
inc
outsb
addr16
jb
insb
jmp
gs
push
arpl
leave
pop
gs
test
jne
mov
push
outsl
fld
pop
outsb
sub
inc
outsl
mov
pop
add
mov
jno
movsl
test
push
je
ljmp
add
ficoml
mov
sbb
jmp
add
lahf
adc
lret
sbb
lahf
adc
dec
test
add
jnp
es
adc
jl
imul
xchg
push
imul
outsl
or
insb
fildl
cmc
push
sbb
and
add
push
adc
repz
int
std
mov
addb
bound
adc
call
loopne
ja
lret
adc
xchg
das
std
xlat
lea
add
add
push
xor
jmp
pop
xor
icebp
mov
sbb
in
cld
mov
popf
cmpsb
faddl
in
sbb
icebp
mulb
lods
call
jns
mov
add
or
lcall
xor
add
sahf
call
frstor
insb
call
fdivrp
out
lods
int
negl
out
es
jbe
add
pop
addr16
mov
imul
xor
ljmp
or
movl
cld
sbb
adc
jb
out
add
mov
jae
mov
pop
cltd
cmpsl
cs
les
std
lcall
imul
pusha
aaa
pop
scas
dec
sub
push
add
mov
pop
jne
das
pop
ss
out
dec
dec
movsl
mul
mov
pop
push
clc
xor
outsb
jg
imul
idiv
out
push
gs
xchg
imul
inc
add
mov
push
ret
add
leave
xor
lods
push
or
enter
lods
push
jb
push
dec
test
push
je
inc
jns
test
idiv
xor
inc
outsb
dec
lods
push
imul
imul
push
imul
test
je
lcall
xchg
popa
add
and
dec
fwait
loopne
insb
xchg
out
insb
xchg
sar
cmc
nop
cld
ds
mov
gs
push
iret
jmp
mov
sti
dec
push
sahf
fbstp
jge
push
mov
jno
push
lock
lgs
cmpsb
mov
out
add
in
insb
adc
jmp
fdivl
fiaddl
inc
mov
fildll
out
push
clc
push
iret
and
dec
ror
pop
in
shrb
filds
insl
sbb
jecxz
push
cmp
sub
rcr
in
sbbl
add
leave
xor
arpl
or
mov
pop
call
repnz
call
dec
sub
repz
mov
jmp
sbb
add
leave
mov
add
xor
in
adc
mov
in
lret
pop
add
sbb
mov
call
shlb
add
mov
cld
cwtl
inc
sub
inc
sbb
jae
sub
add
stos
sti
jb
adc
jno
rcr
dec
push
ss
jmp
or
dec
push
loop
fs
sub
sub
lds
data16
add
xor
insl
mov
jg
inc
sbb
jmp
notb
scas
or
enter
mov
mov
add
push
sub
mov
jmp
aas
mov
bound
jo
pop
test
popa
dec
int
add
pusha
outsl
jp
pop
push
xchg
add
fwait
popa
je
jbe
push
jae
lods
push
gs
mov
push
mov
pop
outsl
aam
mov
mov
push
push
loop
push
outsl
xchg
push
xchg
outsb
scas
addr16
jl
push
push
fwait
int3
mov
sub
mov
mov
fildll
dec
in
lds
data16
incl
add
xlat
push
mov
add
mov
decl
adc
popfw
lock
loop
push
mov
jecxz
mov
in
xchg
pop
int3
push
add
aas
push
mov
data16
jmp
call
or
shll
lock
dec
mov
add
fistps
sub
and
pusha
and
decl
popa
int
or
in
fmulp
icebp
add
sub
mov
loopne
mov
add
sub
out
sbb
in
mov
sub
rcrl
sti
pop
jmp
mul
add
pop
in
xchg
daa
aaa
repz
out
lret
nop
add
sub
or
in
das
paddsw
push
insl
sbb
out
lret
mov
filds
out
sub
notb
daa
mov
add
add
add
mov
dec
xchg
push
and
push
data16
stc
pop
mov
insl
test
or
inc
sbb
mov
add
pop
sub
adc
pop
inc
and
insl
inc
or
pop
inc
sti
loope
sub
xor
ficomps
data16
popf
negb
lods
sti
sbb
loop
imul
rcrl
jb
sar
dec
jmp
sar
cmp
nop
or
add
mov
pop
aad
add
dec
nop
push
jbe
pop
jne
lods
idiv
lods
les
inc
lods
arpl
lods
jae
aas
mov
add
enter
xchg
cmp
mov
insb
das
jns
outsl
sub
cmp
xor
insl
jp
outsb
outsl
mov
push
add
arpl
leave
pop
add
jl
dec
outsb
mov
push
mov
enter
jl
inc
mov
jae
mov
pop
lods
sub
test
jae
scas
movsb
inc
popa
mov
jge
jae
mov
outsl
mov
add
mov
in
pusha
adc
data16
inc
pop
test
cmp
mov
imul
call
add
imul
add
add
inc
jmp
dec
in
inc
push
in
jb
sub
jmp
mov
aas
mov
aad
jg
lock
in
out
xchg
out
pop
mov
in
pop
dec
out
aad
dec
mov
outsl
gs
pusha
mov
in
pop
dec
jmp
outsl
aas
xchg
mov
and
shr
or
call
fdivp
adc
loop
xor
add
or
test
loopne
sbb
cmp
popf
xor
xlat
and
add
fmulp
push
test
shrl
mov
mov
push
in
xor
add
or
loope
add
add
int
loope
aas
repnz
rolb
call
loope
and
out
sbb
add
add
lds
pop
cli
mov
lcall
xchg
gs
shll
lret
jno
push
or
test
outsb
mov
dec
xor
mov
add
inc
negl
cmc
divb
sbb
sub
xor
repnz
add
jno
mov
add
adc
push
cmp
or
or
shlb
outsb
cmp
sub
int
add
push
jae
mov
push
movsb
test
lods
stos
push
je
fwait
imul
int
insb
insb
sahf
push
push
jb
pop
outsl
inc
jle
popa
inc
test
outsb
mov
jmp
push
dec
mov
cmp
pop
ja
test
pop
add
int
jb
mov
add
add
add
jae
xchg
cmpsl
add
js
push
bound
push
je
movsb
arpl
int
add
scas
jae
sahf
js
jae
jbe
push
mov
add
mov
loope
pop
mov
call
ljmp
ja
pusha
and
and
dec
sbb
test
cld
inc
or
jno
mov
add
add
inc
out
xor
js
xor
push
sarb
imul
fcompl
sbb
add
rcrb
cld
sub
jbe
mov
mov
add
jno
pop
loopne
orb
imul
or
inc
das
or
outsb
std
cld
loopne
lret
in
add
ljmp
call
icebp
add
pop
popf
fcomip
xor
add
sahf
ficomps
call
in
es
lret
mov
ljmp
call
fcompp
incb
mov
jne
je
mov
jnp
test
aaa
add
int
jmp
xchg
pop
cmp
add
int3
sbb
pop
sti
add
xor
mov
add
sub
add
and
negb
scas
pop
std
repnz
into
cmc
pop
sbb
stc
pop
aad
sub
insb
sub
mov
jmp
mov
inc
mov
sbb
subl
imul
and
cltd
dec
imull
dec
sbb
sbb
dec
jmp
or
inc
push
sbb
pop
add
sub
jmp
int3
movsb
push
push
push
test
rclb
mov
xchg
jo
fcmovne
pop
add
jae
lods
movsb
inc
add
inc
push
movsb
pop
push
mov
inc
add
dec
js
pop
dec
mov
xor
jp
dec
arpl
idiv
std
enter
cltd
popa
je
jno
add
add
add
sahf
popa
addr16
lcall
iret
cmp
jb
imul
lahf
bound
in
fisubrs
add
jb
cmpsl
add
pop
or
pop
sarl
inc
push
mov
push
bound
add
mov
jmp
sbb
call
or
jnp
pop
sbb
mov
add
add
test
pop
loope
loope
mov
add
xlat
ss
inc
fisttpll
mov
add
xlat
push
shlb
dec
loopne
mov
add
push
fldcw
lret
inc
loope
stc
cmp
cltd
lret
xor
stc
sbb
aam
dec
loopne
xchg
mov
jno
xor
pop
or
clc
jne
sbb
sub
jecxz
lret
test
jno
adc
dec
or
repz
add
add
cli
out
and
testl
xchg
inc
add
sbb
sub
out
and
not
adc
ljmp
div
add
add
sbb
test
leave
sbb
add
xchg
notb
mov
jae
push
daa
dec
dec
add
cmp
ds
pop
cmp
add
addr16
add
and
scas
dec
add
in
and
iret
cs
or
pop
cli
nop
sbb
stc
movsl
sub
mov
add
nop
pop
jae
test
cmp
shlb
mov
bound
je
outsl
test
push
popf
inc
and
pusha
out
popa
add
mov
add
pushf
imul
jle
arpl
imul
imul
int
add
gs
xchg
jns
mov
arpl
xchg
push
cltd
jle
arpl
mov
gs
xchg
jns
data16
arpl
popf
push
imul
add
jns
daa
ja
jb
cmpsl
jns
add
pop
popa
aaa
xchg
jo
add
ret
add
ss
js
inc
lock
xchg
mov
lock
out
mov
imul
std
imul
imul
imul
dec
push
pop
mov
icebp
insb
push
mov
add
dec
mov
dec
sbb
jmp
add
call
aas
add
outsl
mov
sbb
out
loopew
fdivrp
jge
add
jns
pop
loopne
shrl
cs
out
lret
mov
add
int
out
or
out
pop
test
je
push
add
es
jmp
sub
push
push
aad
popa
add
inc
mov
xchg
and
add
push
and
out
adc
int
out
cld
add
ljmp
testl
fiaddl
in
sbb
sbb
loopne
sbb
xlat
adc
mov
add
daa
add
pop
daa
data16
push
mov
data16
sbb
xchg
or
add
add
push
add
daa
pop
fbld
js
fstps
addr16
fsubr
pop
cmp
int
jno
negl
dec
sbb
sbb
jmp
fldenv
jb
mov
out
dec
or
pop
mov
gs
fimull
sub
sub
imul
xchg
add
je
je
cmpsl
push
or
add
add
jae
push
lods
je
js
lret
cmp
fcomps
fs
pushl
lret
pop
outsl
push
imul
outsl
test
push
popa
lahf
outsl
inc
outsb
lcall
popa
mov
leave
ja
pushf
cltd
pop
jae
xchg
imul
enter
xchg
data16
jae
pop
leave
add
or
gs
pop
aad
iret
pop
frstor
add
xor
imul
out
cmp
xor
movb
frstor
xor
lea
cmp
cmp
dec
mov
cld
dec
xchg
out
aam
mov
mov
data16
fidivl
std
fimull
mov
mov
inc
sbb
dec
push
scas
aam
dec
fldcw
pop
loope
bound
xchg
into
pusha
and
iret
call
int3
lock
ret
or
loope
fcmovb
sbb
add
sbb
add
or
add
or
add
or
add
pop
lds
lret
xor
sub
add
fildll
xor
add
lret
aaa
jecxz
and
out
dec
pop
std
aam
in
or
and
call
sbb
icebp
pop
lods
cltd
negl
xchg
gs
bound
pusha
mov
jp
pop
lods
dec
negl
inc
hlt
gs
bound
pusha
popf
pop
adc
push
repz
jns
out
dec
jmp
add
out
dec
jg
std
popa
dec
daa
inc
jmp
ss
pop
cmp
iret
out
imul
jno
push
dec
and
rcll
notb
scas
sbb
mov
jb
popf
inc
push
mov
and
mov
imul
insl
imul
jae
xor
push
dec
dec
cltd
inc
push
and
push
insb
outsl
into
mov
add
cmp
gs
dec
pop
insb
aaa
imul
jp
push
dec
into
idiv
pop
mov
pop
dec
inc
mov
jo
test
push
push
arpl
xchg
enter
mov
bound
dec
xor
gs
inc
popa
insl
mov
mov
adc
jg
push
out
jno
sbb
inc
adc
sahf
add
mov
loope
loopne
repnz
repz
xchg
loope
push
cmpsb
add
ret
pop
shll
iret
jb
push
xchg
push
icebp
jno
inc
or
mov
jns
xor
fildl
mov
xchg
paddw
mov
lret
inc
pusha
psrad
mov
iret
bound
add
mov
dec
add
dec
call
jecxz
repnz
lods
mov
add
clc
xor
or
adc
adc
icebp
fsubp
out
or
add
shr
jge
cmpsl
add
clc
mov
loop
repnz
add
add
lret
stos
aam
out
stos
rol
clc
lahf
ljmp
xchg
add
stos
icebp
xchg
jae
cmp
ficoms
adc
ljmp
add
adc
arpl
xor
pop
std
push
jl
insb
add
in
pop
daa
shl
cs
adc
or
mov
add
push
sub
xchg
sub
jle
add
mov
jae
nop
repz
stos
xchg
jo
push
hlt
aad
or
jo
mov
add
pop
or
add
insb
adcb
pop
movsl
repnz
xor
jmp
pop
mov
pop
dec
or
pop
es
pop
dec
or
xor
addr16
gs
mov
ljmp
push
gs
mov
inc
add
into
push
popa
mov
lret
mov
outsb
push
lods
jns
call
xor
jne
mov
incl
into
push
gs
inc
imul
cltd
jo
push
mov
inc
jb
outsl
push
pop
lea
sub
inc
imul
jae
inc
push
nop
imul
push
popa
mov
call
pop
push
enter
je
aas
jbe
or
arpl
iret
out
push
xlat
into
push
add
add
jg
pop
push
and
xor
into
inc
in
int3
arpl
mov
jmp
decl
add
xor
dec
mov
scas
inc
adcb
mov
add
xor
pop
dec
mov
jb
lret
ss
lret
cs
or
out
pop
aad
imul
inc
jmp
jne
sub
inc
out
or
push
push
push
out
add
add
lret
cs
push
mul
ltr
out
out
or
test
ud0
rorl
add
lock
pushf
fsin
cmc
mov
push
test
add
sbb
out
clc
mov
loopne
cltd
ljmp
scas
mov
adc
add
mov
out
movsl
lret
add
add
pop
sub
es
mov
push
sbb
mov
fs
clc
sbb
fsubrp
jb
mull
jae
out
sbb
push
pop
sbb
pop
adc
xchg
std
insb
add
and
fildl
std
pop
jmp
push
std
insb
mov
and
add
insb
int3
push
push
insl
mov
mov
add
adc
mull
cltd
imul
mov
inc
gs
mov
popa
je
sahf
dec
outsb
cwtl
mov
adc
cwtl
je
je
movsb
data16
jb
popa
je
mov
jo
imul
lahf
push
insb
push
inc
add
pushf
push
pushfw
push
xchg
gs
cmpsb
idiv
test
push
jge
jo
pop
jae
je
addr16
dec
into
inc
push
repnz
and
mov
add
xchg
push
in
jle
shlb
dec
mov
outsb
mov
fsubrs
ret
xlat
pop
pusha
sbb
gs
sbb
push
shl
add
inc
inc
pop
adc
mov
dec
or
out
add
fcoms
aam
cmp
jge
add
lahf
jmp
push
iret
sahf
outsl
out
out
repz
jb
cmp
imul
rcrb
jmp
rcrb
lret
lahf
xlat
mov
test
jns
test
sahf
out
xlat
insl
out
out
std
jp
add
andb
testl
and
xlat
jbe
xor
int
jne
jnp
xor
inc
icebp
cmp
insb
sti
add
repnz
data16
icebp
adc
and
cld
xlat
lock
push
shr
adc
out
jmp
lret
and
or
fldln2
push
clc
mov
int3
int
shr
or
add
adc
popf
pop
gs
add
push
dec
fcmovb
test
notb
or
std
pop
jnp
push
insl
mov
mov
add
aad
aas
pop
insb
dec
aam
jae
add
pop
jmp
int
dec
cmp
stc
cmp
fucom
add
jne
inc
cmp
xor
xchg
jmp
jmp
xchg
repz
add
pusha
cli
aas
add
andb
jmp
add
cmovo
pop
idiv
sbb
pushf
pop
outsl
dec
lret
ljmp
mov
pop
gs
fwait
push
je
lret
out
ss
arpl
fwait
idiv
pop
int3
dec
jo
xchg
push
arpl
bound
test
pop
jbe
movl
mov
jno
leave
fwait
pop
jne
mov
add
pushf
bound
idiv
and
pop
gs
pop
jb
lret
movsb
cltd
jae
mov
push
add
mov
call
outsl
mov
fdivl
aas
iret
insl
xchg
and
sbb
pop
shrb
mov
addb
data16
call
adc
pop
loopne
pop
mov
add
add
mov
int
add
dec
mov
mov
inc
shl
sbb
ljmp
mov
lods
dec
std
mov
pop
push
iret
cld
lds
jl
push
mov
add
mov
xlat
test
push
divb
loopne
testb
jl
call
jmp
add
out
rolb
jbe
scas
repnz
rolb
cmp
dec
push
ss
push
in
inc
call
push
out
rorb
xor
fbld
int3
aas
add
sti
or
adc
stc
adc
lret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
lret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
fwait
iret
add
add
iret
add
pop
iret
add
pop
iret
add
dec
iret
add
dec
iret
add
pop
iret
add
pop
iret
add
dec
iret
add
dec
iret
add
sbb
add
sbb
add
or
add
repz
ret
mov
add
into
add
add
or
add
jae
inc
add
inc
add
into
add
add
in
into
add
fcmovne
add
adc
add
add
into
add
mov
add
xchg
into
add
mov
add
mov
add
mov
push
inc
dec
mov
mov
add
mov
add
mov
add
mov
add
mov
idiv
dec
arpl
inc
ja
add
and
add
in
pushl
jl
add
test
add
add
add
mov
add
fs
std
test
mov
add
mov
pop
or
bound
add
lret
daa
js
or
add
lret
pop
inc
mov
call
add
or
add
dec
jbe
mov
lret
out
mov
jae
fwait
or
add
pop
addl
into
or
add
aam
xor
push
and
js
dec
daa
and
mov
aaa
or
imul
pop
sub
movl
xchg
adc
add
xor
test
xor
mov
add
adc
pushf
inc
inc
imul
add
xor
enter
add
incl
popf
push
xlat
push
lds
sbb
inc
mov
jmp
and
add
leave
stos
and
and
jne
add
xchg
push
fwait
push
orl
out
xor
hlt
cld
enter
stc
imul
inc
xor
xchg
sahf
add
cmp
pop
aam
xchg
mov
cmp
add
add
xor
xchg
lock
stos
rclb
popa
sbb
mov
mov
pop
rclb
fisubl
in
rep
pusha
mov
outsb
pop
add
push
imul
add
push
mov
int3
out
cli
aas
cmp
or
js
sub
aas
push
xchg
cmp
inc
dec
xchg
dec
in
cwtl
mov
pop
pop
cmp
out
aas
add
scas
in
push
sub
scas
sbb
mov
jmp
xchg
adc
sbb
push
cmc
insb
ret
mov
std
sub
pop
push
xlat
dec
mov
imull
xchg
repnz
push
mov
cmpsl
jge
jmp
movsb
int3
repz
mov
rcrb
cmp
inc
ja
int
mov
add
repz
lea
xchg
xchg
frstor
aas
xchg
xchg
das
lahf
inc
cmp
lret
add
aaa
and
cwtl
mov
mov
inc
or
dec
iret
cmpsl
orl
je
mov
dec
enter
cmpsb
or
inc
push
mov
imul
jne
cmpl
add
mov
and
cltd
add
push
mov
or
loopne
mov
mov
sub
push
mov
inc
mov
adc
int3
es
and
lds
xchg
jo
sbb
jno
test
pop
xor
pop
push
and
mov
das
test
arpl
decl
lea
cmp
add
or
mov
add
or
dec
cmp
add
mov
add
or
add
mov
add
mov
add
mov
add
or
jmp
mov
add
mov
add
dec
or
jmp
mov
add
or
add
pop
xor
fcmovnb
add
lret
movl
add
inc
add
movl
add
movl
add
cmp
add
iret
add
mov
add
xor
iret
add
mov
add
mov
add
jl
inc
add
add
dec
iret
add
dec
iret
add
push
daa
inc
add
add
dec
iret
add
dec
iret
add
lods
es
add
iret
add
or
add
or
add
pop
es
add
add
mov
add
mov
stos
inc
add
add
mov
add
mov
movsb
inc
mov
add
mov
add
mov
add
mov
test
mov
add
mov
add
mov
add
mov
stos
inc
mov
add
mov
add
mov
add
mov
stos
inc
mov
add
mov
add
mov
add
mov
and
add
add
mov
and
add
add
lret
out
mov
hlt
sub
out
mov
out
mov
out
mov
jg
jae
out
mov
out
mov
out
mov
mov
jae
out
mov
out
mov
out
mov
lods
sub
lret
out
mov
out
mov
out
mov
int
repz
out
mov
out
mov
out
mov
mov
repz
out
mov
out
add
lret
cs
lock
out
mov
out
mov
out
mov
lock
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
push
add
mov
add
mov
add
mov
add
cmc
or
add
mov
add
mov
add
ja
add
mov
add
mov
add
add
or
add
mov
add
mov
add
mov
add
mov
add
mov
add
ja
add
mov
add
mov
add
sbb
add
push
jg
add
int3
add
or
add
sbb
add
sub
inc
add
int3
add
or
add
fcmovne
add
adc
lret
lret
add
lret
lret
add
fcmovne
add
add
add
lret
lret
add
rorl
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
out
inc
add
out
inc
add
out
inc
add
out
inc
add
out
inc
add
out
inc
add
out
inc
add
out
inc
add
mov
inc
mov
jne
mov
jbe
mov
jbe
mov
jne
mov
ja
mov
ja
add
test
mov
ja
mov
ja
mov
add
mov
xchg
or
std
jns
mov
jns
mov
jns
mov
jns
mov
jns
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
mov
add
add
mov
out
mov
out
mov
out
add
lret
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
add
lret
out
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
lret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
pop
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
movl
add
lret
movl
add
movl
add
movl
add
iret
add
mov
add
mov
add
fwait
iret
add
fwait
iret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
je
add
je
add
js
add
les
aam
int3
or
mov
mov
or
je
pushl
mov
inc
in
jmp
fcompl
push
int3
cmp
inc
lret
cmp
adc
sti
push
loop
or
ljmp
pop
push
stos
cmpsl
pop
add
stos
lahf
pop
outsb
stos
aaa
pop
outsb
stos
aas
pop
pop
stos
push
pop
es
out
and
lret
out
adc
fwait
out
add
lret
or
pushf
jecxz
mov
jmp
mov
sahf
stos
adc
sahf
mov
pop
sahf
inc
adc
dec
adc
sahf
arpl
ss
imul
popf
adcl
popf
imul
popf
add
add
outsl
xor
mov
mov
sub
movsl
lahf
sub
mov
ljmp
movsl
fildll
mov
sub
jne
pop
sub
adc
lods
outsl
sub
in
ret
cmc
ret
int
scas
sub
mov
ljmp
dec
add
fildll
insl
mov
aas
sub
das
fcomps
pop
fdivrs
das
fcomp
xor
pop
cld
xor
outsl
sbb
pop
sub
lahf
fnstcw
lahf
pop
ss
insb
ss
fnstcw
lahf
fldcw
lahf
fxch
ss
add
add
add
cld
ss
or
out
sbb
pop
xlat
sub
pop
xlat
cmp
pop
xlat
dec
aaa
outsl
pop
aaa
pop
insb
aaa
mov
add
fucom
add
in
add
mov
cmp
aam
pop
add
hlt
movsl
js
add
pusha
or
cwtl
or
and
xor
mov
add
jp
or
or
add
add
clc
or
pop
or
mov
or
mov
rorb
stos
js
add
pusha
or
cwtl
or
and
xor
cmp
inc
mov
push
jnp
inc
std
push
movsb
dec
std
and
imul
movsb
cmp
movsb
imul
movsb
mov
std
popa
movsb
cmp
movsb
mov
popa
movsb
jecxz
add
mov
stos
std
andl
ret
std
shll
arpl
xor
cmp
callw
pop
pop
mov
add
fstps
adc
jmp
pushf
jecxz
mov
pushf
mov
mov
movb
push
mov
loope
gs
push
xor
cmpsb
inc
xor
xchg
xor
xchg
xor
pop
shll
in
shll
pop
mov
mov
cmp
xor
aas
icebp
xor
daa
loope
gs
push
xor
inc
xor
pop
and
and
pop
xorl
sbb
xor
in
xor
add
pop
sub
divps
xor
pop
dec
xor
pop
pop
xor
push
maxps
maxps
xor
pop
stos
xor
pop
mov
xor
pop
fidivl
pop
pop
ljmp
pop
or
pop
sbb
pop
sub
pop
cmp
arpl
scas
arpl
pop
pop
push
subps
arpl
xor
arpl
add
arpl
xor
arpl
xor
arpl
xor
arpl
xor
outsb
out
or
jle
sub
cs
dec
xchg
pop
jg
in
imul
out
jnp
call
out
fistpll
out
stos
loopne
mov
push
out
fstpt
inc
out
sti
lahf
push
clc
sbb
clc
cmp
jl
cli
dec
test
cli
pop
jl
clc
imul
clc
jnp
call
negl
loopne
mov
shl
fstpt
adc
jmp
lcall
cltd
lcall
imul
push
imull
fwait
pop
imull
lcall
pop
lcall
add
xor
lcall
imul
lret
sti
cltd
mov
sbb
jmp
mov
sar
test
mov
mov
pop
mov
add
imull
sbb
jmp
cmp
fstpt
cmp
lret
or
cmp
add
fnstsw
gs
dec
cmp
cmp
cmp
sbb
cmp
jnp
cmp
push
mov
cmp
dec
or
cmp
sub
cmp
dec
cmp
cmp
cmp
gs
iret
gs
sarb
outsl
gs
add
gs
pusha
add
pusha
adc
pusha
and
popa
xor
popa
inc
cmp
popa
push
cmp
popa
bound
int3
insb
cmp
int3
jl
pop
int3
mov
lret
pushf
cmp
int3
lods
cmp
lret
mov
cmp
lret
fdivrl
lret
in
cmp
popa
add
outsl
popa
and
pusha
inc
cmp
scas
pusha
bound
add
fdivp
xchg
xlat
inc
mulb
cmpsb
cmc
ret
mov
push
mul
scas
mov
hlt
add
hlt
and
hlt
inc
jl
hlt
push
je
hlt
arpl
add
jae
call
repz
aam
hlt
mov
les
hlt
ret
mov
mov
jecxz
inc
hlt
rep
push
add
add
mov
and
test
inc
jge
repz
jne
repz
lret
sar
mov
lahf
jae
inc
lahf
jnp
push
lahf
jae
inc
lahf
sbb
icebp
sahf
adc
loope
cmp
rcrl
out
mov
jae
mov
fcomi
mov
shl
mov
fwait
mov
sbbl
cmp
adc
add
and
hlt
and
jae
inc
fwait
fwait
hlt
jno
mov
sbbl
fcomi
mov
shl
mov
pushf
add
daa
or
mov
es
pop
dec
xor
cmp
test
sub
jge
sbb
and
fistpll
push
loope
cs
add
jns
or
rcrb
mov
mov
cmp
xchg
or
xor
xchg
cmp
jns
cmp
imul
cmp
lret
pusha
ljmp
pusha
cli
cmp
pusha
add
sub
cmp
out
ja
out
cmp
idivb
add
pop
cmp
pop
push
cmp
pop
es
pop
cs
pop
cmp
pop
cmp
pop
inc
cmp
pop
dec
cmp
pop
push
cmp
pop
pop
cmp
pop
jle
maxps
cmp
fidivrs
outsl
pop
out
addr16
out
cmp
idivb
xchg
pop
cmp
mov
cmp
sarb
sub
cmp
inc
hlt
jmp
dec
hlt
repz
add
add
out
das
jbe
out
aaa
out
cs
aas
out
out
inc
fisubrs
out
dec
push
out
fwait
iret
dec
out
mov
mov
mov
mov
cmpsl
mov
stc
dec
xchg
sbb
push
lea
pop
test
stc
arpl
clc
fbstp
bound
mov
cld
pushl
clc
jmp
loope
in
xchg
clc
in
pop
clc
in
xchg
sar
lahf
add
dec
in
cmpsl
mov
lret
inc
out
adc
mov
out
inc
mov
jnp
dec
mov
shl
mov
repz
lds
add
mov
ret
icebp
xchg
mov
mov
mov
arpl
xor
mov
arpl
and
mov
push
add
xchg
dec
cld
pop
xchg
mov
inc
xchg
stos
cld
cltd
xchg
stc
cld
test
add
ljmp
insb
outsl
jl
mov
pop
scas
cmp
pop
sbb
mov
ja
icebp
dec
xchg
cmp
dec
cmp
and
scas
sub
xor
sbb
mov
int
inc
xor
or
jmp
mov
add
xor
inc
sub
add
loop
sub
jecxz
sub
fbstp
sub
test
cli
cmp
test
shll
lcall
je
sub
add
jecxz
jo
add
fs
popa
cmp
sbbb
xchg
lcall
add
sti
int3
add
dec
pop
lea
sbbb
sub
add
push
aaa
gs
cmp
push
fnstsw
fstl
cmp
pusha
inc
cmp
add
adc
add
fistps
aas
pop
insl
xor
pusha
inc
xor
pop
jae
and
xor
push
inc
xor
push
icebp
ja
div
lahf
lock
cmpsb
pop
icebp
sbb
cmpsl
push
out
add
sahf
jecxz
mov
neg
jns
out
pmaxsw
clc
sub
mov
out
mov
int3
sub
inc
lds
jbe
mov
push
popa
and
mov
add
mov
repnz
mov
xchg
test
cli
repnz
cmpl
fsub
shr
loope
out
out
push
lock
add
add
lahf
out
outsl
mov
int3
out
andl
jmp
in
lea
in
sbbl
pop
out
pop
sahf
mov
in
out
cmp
sti
int3
xchg
fwait
sti
xchg
xchg
popa
sti
push
xchg
sub
scas
xchg
lret
cli
dec
xchg
call
stc
adcl
stc
add
xchg
sar
xchg
std
mull
leave
xor
movsl
mov
xor
adcb
dec
addb
subb
mov
bound
movsb
bound
cmc
inc
mov
xor
inc
clc
xor
das
xor
and
jecxz
xlat
and
aaa
fsubs
xor
mov
xchg
dec
add
xor
add
add
mov
loope
ss
mov
add
mov
das
xlat
mov
das
add
insl
xor
pop
mov
stc
pop
mov
into
pop
mov
push
pusha
int3
xor
in
pop
pusha
cmc
xor
or
movsb
pop
sbb
push
pop
inc
xor
outsb
xor
pop
lea
call
out
pop
mov
xor
loope
xor
stc
xor
pop
xor
pop
sub
cld
pop
inc
xor
inc
xor
pop
push
xor
pop
xor
ja
pop
pop
mov
addr16
mov
in
xchg
or
in
clc
insb
fsubr
negl
fcompl
sti
jmp
pop
ljmp
loope
xchg
scas
and
jmp
add
mov
add
mov
out
rorl
cmp
cmp
lock
jne
out
ljmp
jbe
add
add
out
leave
add
adc
add
mov
sbb
xchg
lods
cmpsb
imul
lahf
lret
pop
divl
pushf
push
pop
pushf
sbb
xchg
push
in
jb
cld
jmp
mov
in
stos
xchg
aam
ret
ljmp
add
lret
ljmp
hlt
ljmp
adc
add
xor
rclb
ljmp
hlt
ljmp
push
ljmp
je
push
xchg
test
dec
xchg
je
inc
xchg
je
sub
add
enter
enter
fdivs
cmp
imul
enter
lret
pop
cmp
fwait
push
cmp
fwait
lret
cmp
pop
cmp
xchg
cmp
fwait
stos
cmp
mov
cmp
adc
je
mov
movsb
dec
cmpl
pop
jnp
mov
jae
mov
imul
dec
arpl
xchg
sbb
je
push
cmp
cmp
add
ret
cmp
sbb
cmp
or
cmp
xor
fisubs
out
inc
cmp
gs
cmp
gs
cmp
fs
cmp
gs
cmp
popa
enter
add
daa
int
add
pop
mov
mov
je
or
xor
pop
test
xor
pop
lds
pop
stc
xor
push
cld
xor
push
or
add
jg
sbb
pop
push
pop
xor
inc
push
and
rcrb
jns
mov
aaa
lea
aaa
add
sbb
adc
and
pop
mov
insl
jmp
test
sti
ljmp
imul
xchg
out
jne
ret
add
mov
repnz
daa
repnz
loop
in
push
ret
div
jp
ret
nop
ret
xlat
icebp
fadd
mov
repnz
mov
movsb
in
dec
lahf
arpl
push
test
jmp
test
jmp
jge
jmp
in
in
pminsw
in
fldt
push
enter
jb
pop
ljmp
leave
out
arpl
sub
icebp
lea
mov
xchg
cltd
in
sub
add
lods
in
pop
cmp
orl
shll
lret
jmp
cli
fwait
cmp
or
repz
lret
repz
mov
js
mov
mov
icebp
icebp
cltd
dec
icebp
sbb
xor
or
idivl
sbb
jnp
add
sbb
sub
add
jp
arpl
std
mov
sub
in
sub
fcoml
inc
mov
scas
mov
jecxz
jle
es
pop
cmpsl
test
sbb
mov
sahf
sti
sub
jle
das
mov
or
cmp
push
in
cmp
cmp
jl
mov
nop
pop
push
cmp
push
mov
and
inc
inc
cmp
pop
xor
popf
cmp
pusha
mov
cmp
pusha
add
cmp
pop
stos
cmp
pop
hlt
cmp
sub
cmp
cmp
xchg
sarl
xlat
pusha
push
push
idiv
fwait
sub
add
add
mov
push
adc
xor
xor
cltd
xor
push
lods
xor
adcl
xor
pop
sub
pop
idiv
dec
sbb
add
daa
lock
sub
dec
fnstenv
fst
into
std
stos
out
mov
push
jmp
jmp
bound
add
jle
pusha
addl
scas
xchg
lock
call
repnz
ffree
repnz
ficompl
and
sbb
inc
lret
popa
lret
jne
loope
xchg
icebp
jmp
or
mov
stc
mov
imul
jno
cltd
clc
call
aam
mov
jmp
sub
jmp
cmc
dec
call
add
lret
test
fists
add
add
xchg
mov
repnz
xchg
fucomi
jne
scas
ljmp
xor
mov
dec
in
cld
pop
outsb
out
or
arpl
lret
adc
jno
adc
or
push
lock
add
cmp
test
or
add
subb
dec
popf
cs
and
sub
adc
add
add
sbb
js
mov
ret
or
xor
mov
es
lret
jmp
mov
add
shll
rcrl
mov
cmp
mull
push
xor
jle
xor
sub
xor
shrb
cmp
xor
cmp
xor
cmp
xor
add
cmp
xor
fidivrl
xor
mov
cmp
sub
adc
cmpsl
cmp
cmp
cmp
cmp
cmp
xor
cmp
xor
cmp
sarl
ss
int3
xor
cmp
xor
cmp
xor
cmp
pushf
das
cli
and
pop
aas
or
mov
add
xchg
xor
decl
bound
add
jmp
arpl
mov
repnz
orb
adc
push
in
or
sub
data16
out
lret
shlb
rorb
or
iret
lock
mov
or
outsl
lahf
mov
lock
pushf
mov
xchg
out
test
inc
add
out
in
out
fnsave
out
fstpl
out
mov
lret
add
mov
add
in
outsb
add
ljmp
or
les
push
call
sub
in
in
or
in
or
out
or
in
dec
call
add
sti
test
mov
mov
add
test
repz
sti
sub
repz
stc
jmp
icebp
xchg
std
mov
bnd
cli
iret
lock
sti
push
icebp
pop
sti
aam
sar
add
lea
aas
pop
jo
xchg
push
adc
das
pop
inc
mov
popa
push
jl
cmpsb
dec
and
stc
dec
jmp
and
movsb
cmp
add
dec
cmp
imul
or
cmp
mov
cwtl
aaa
or
or
xchg
sbb
fdivrs
cmp
xlat
cmp
enter
cmp
push
cmp
cmpl
fwait
sbb
pop
fwait
ds
mov
cmp
jge
cmp
sub
dec
cmp
xor
cmp
xor
cmp
add
and
lods
sub
repnz
cmp
sub
cmp
out
mov
cmp
sub
sub
ds
sub
repnz
push
sub
subb
aas
shrl
dec
aas
std
sub
aas
pushf
sub
dec
jmp
add
mov
xor
sbb
xorl
inc
and
mov
add
push
int3
data16
ret
rorb
sarl
jbe
sbb
movsb
and
std
pushf
fcomp
sub
out
fstps
fstps
jp
fidivrl
jnp
rcll
nop
aam
jmp
aam
pushf
fdivrs
sbb
loope,pt
icebp
loop
mov
xor
add
ror
mov
mov
xorl
lahf
subl
xlat
mov
aad
out
movsb
fldlg2
std
fldenv
neg
mov
std
dec
fidivl
add
fidivrs
push
fucomp
pop
pop
loopne
pop
fists
add
call
add
lret
sbb
sub
xchg
jl
push
add
testl
xlat
inc
jne
cmp
jns
or
sub
jmp
add
sti
cmpsb
pop
mov
das
stos
mov
aaa
fdivrs
aaa
push
imul
cmp
mov
cmp
insl
in
xor
push
scas
xor
add
xor
std
or
xor
add
xor
cld
icebp
xor
hlt
movsl
xor
adc
mov
and
jge
mov
jmp
mov
add
add
xor
outsl
push
mov
xchg
push
cli
xor
push
popa
xor
push
cmpsl
xor
sbb
or
dec
sbb
xor
pop
xor
sbb
xor
aaa
pop
cmp
xor
push
mov
sbbb
xor
or
sbb
xor
sbb
test
push
xor
sbb
xor
sbb
xor
and
shlb
inc
xor
and
aam
pop
xor
and
sbb
push
sbb
xor
and
sahf
inc
fldcw
jle
fnstenv
jle
fcom
add
add
rcr
rcr
fucom
int
out
fdivr
leave
fdivr
mov
and
fldenv
cmpsl
rcl
and
fst
aas
lahf
out
dec
xchg
xlat
dec
jg
xlat
push
xchg
fadd
out
lret
mov
in
into
ja
in
cs
lret
rcl
test
mov
xchg
push
decl
loope
incl
mov
pop
fidivs
add
incl
dec
fidivrs
lret
mov
mov
jns
pop
sti
jno
cmp
shrl
std
push
rolb
call
sahf
notl
fdivrs
testb
insl
testb
stc
add
stc
adc
popf
stc
add
stc
and
in
stc
and
in
stc
adc
add
stc
xor
jbe
imul
add
add
filds
call
add
std
add
loop
xor
adc
call
add
aaa
std
clc
xlat
aaa
in
call
out
or
fdiv
aaa
in
mov
aaa
lods
mov
aaa
mov
push
cmpsl
aaa
lea
aaa
jge
mov
insl
mov
cmp
dec
cmp
js
cmp
pop
cmp
pop
outsl
cmp
ja
insl
or
lods
or
cmp
clc
push
cmp
aaa
and
cmp
and
cmp
out
cmp
idivb
xlat
and
cmp
and
cmp
and
cmp
and
cmp
and
cmp
and
cmp
pop
les
push
aam
add
sbb
or
cmp
mov
cmp
xchg
and
cmp
fbld
cmp
int3
and
cmp
adc
add
add
dec
int3
fisubrl
aas
fdivrs
cmpsl
fimull
lods
xchg
ret
fcmovbe
pushf
stos
fiaddl
xchg
sub
fistl
add
into
fldcw
in
push
and
aad
fstps
lds
fisubrl
mov
fxch
lods
loopne
loope
push
popf
xor
add
sub
add
subb
mov
loop
test
push
cld
call
aam
cli
or
aam
jecxz
xchg
add
stc
and
aad
stc
push
test
negl
rcrl
hlt
cmpsb
rolb
cmc
scas
rcrb
cmp
mov
fcomp
out
inc
fistpl
sbb
mov
fmull
add
stos
add
fidivs
frstors
add
or
stos
fnstsw
mov
fldl
xor
repnz
std
add
aaa
cli
xchg
xor
ljmp
push
fisubrl
mov
sbb
orl
shlb
out
cld
into
xor
in
xor
add
icebp
fcmovne
rorl
mov
adc
imul
inc
int
mov
sahf
xor
push
xor
xchg
adc
xor
addl
xor
pusha
xor
pop
jae
add
xor
test
sbb
aaa
cltd
push
push
cmp
sbb
cmp
aam
icebp
and
cmp
sub
and
sub
aas
popf
adc
aas
fldt
add
add
fstpl
adc
mov
pop
test
add
ljmp
sbb
mov
xor
and
xor
pop
jle
sahf
pop
out
xor
sbb
xor
dec
jle
shr
xchg
iret
mov
jno
int
sbb
or
or
cmp
mov
addr16
fcmovb
mov
adc
or
sub
add
xor
sub
adc
jp
aad
jnp
aam
jmp
fadds
jmp
dec
ficoml
into
mov
rol
fdivs
mov
and
add
lret
mov
clc
cli
jae
pop
sti
add
mov
shll
loope
in
dec
shlb
jmp
sar
int
add
sar
mov
into
mov
mov
out
mov
fsubr
repnz
flds
jge
pop
test
dec
hlt
push
hlt
mov
fcomp
stc
cwtl
aad
stc
xor
inc
dec
clc
out
mov
pop
add
sti
cmp
mov
push
aam
std
add
addb
imul
jge
sub
bound
sub
cld
in
push
popa
sub
in
outsb
das
arpl
comiss
aad
fcomi
ljmp
add
shrb
mull
movsl
out
add
psadbw
cmp
int3
aaa
jecxz
shlb
loopne
jmp
aaa
sti
mov
cmp
cmp
push
cmp
add
aaa
sbb
aaa
testb
mov
add
movsb
pop
adc
push
sbb
xor
sbb
xchg
sbb
sbb
jbe
jb
cwtl
sbb
xor
ret
sbb
lock
sbb
xchg
xor
sbb
fisttpll
test
loop
xor
icebp
pop
or
jle
jle
add
adc
cmp
and
aas
fwait
stos
add
sti
lret
sbbb
xor
dec
xor
repnz
ret
dec
mov
repz
inc
shlb
pop
iret
sbb
orl
fisubrl
in
fsts
fisubl
lds
lret
xor
inc
enter
mov
mov
xchg
mov
insl
shr
sahf
push
ror
xchg
lahf
iret
inc
mov
shlb
shl
je
sar
in
and
or
adc
and
xor
dec
aad
mov
rcrb
out
mov
filds
lret
jmp
ret
shll
pop
aam
cld
push
aad
cli
lcall
clc
adc
in
clc
sbb
add
clc
mov
dec
stc
xchg
cld
clc
pop
stc
mov
clc
jecxz
scas
jmp
xlat
sar
iret
xlat
ja
add
lcall
xor
dec
xlat
xor
mov
add
mov
xlat
lcall
fcomp
cmp
mov
std
add
jnp
das
mov
sub
and
cmp
imul
cmp
add
cmp
outsb
jae
fldenv
cmp
jl
cmp
mov
cmp
ud0
cmp
in
xor
loop
xor
sbb
in
xor
std
jl
cwtl
cmc
sbb
in
ss
jecxz
ss
jecxz
ss
mov
aaa
add
push
mov
add
add
add
sbb
xchg
aas
adc
les
mov
fistpll
cwtl
sbb
aas
pop
popl
add
pop
and
jae
xor
adcb
xor
pop
push
xor
pop
cwtl
xor
pop
test
xor
lret
xor
pop
into
xor
push
icebp
xor
pop
repnz
push
cmp
mov
push
fidivs
insl
sbb
sbb
xchg
sbb
add
sbb
xor
sbb
xor
mov
fsts
fcoms
ljmp
inc
xchg
fstpt
ror
lds
lret
mov
sub
jl
dec
sahf
push
push
mov
pop
xchg
iret
es
iret
dec
ja
iret
pop
out
stos
iret
shl
and
xor
lahf
or
push
movl
int
and
add
pop
shl
mov
add
xor
jo
xor
clc
inc
fldcw
clc
in
mov
mov
fxch
xchg
repz
leave
in
cmc
lods
leave
mulb
lret
jge
ret
iret
int3
out
iret
hlt
out
xchg
iret
pop
lock
js
test
out
rcl
out
jo
add
out
jg
or
test
out
lret
sarb
icebp
adc
xchg
icebp
int
repnz
int
icebp
ror
icebp
jle
push
repnz
mov
lock
cltd
lock
pop
lock
ss
cmp
jmp
mov
add
loope
xor
xchg
xor
cmpl
xor
sub
push
add
xor
popa
xor
testb
das
stos
xchg
das
fwait
jle
das
xchg
das
jae
inc
xor
popa
shlb
punpcklbw
xor
add
xchg
je
movl
aad
int
mov
es
xor
jecxz
xor
add
add
scas
xor
add
pop
scas
xor
sbb
sbb
add
add
add
xor
imul
aaa
jge
fs
pop
sbb
aaa
sbb
aaa
mov
sbb
aaa
ja
sbb
mov
cmp
or
add
cmp
adc
mov
add
cmp
add
adc
pop
add
cmp
outsb
cmp
add
cmp
cmp
scas
sbb
inc
cmpsb
fcom
fwait
sahf
lcall
mov
xor
jnp
dec
jg
popf
ja
mov
xchg
hlt
out
les
mov
in
and
add
pop
rorb
adc
inc
mov
xor
inc
mov
popf
rcrb
subl
add
jge
mov
inc
iret
jmp
add
add
int
loope
into
stc
rcll
and
lret
and
mov
mov
shrb
shrl
repz
dec
repz
int3
sbb
test
inc
hlt
in
int
icebp
jne
push
icebp
xor
into
loop
iret
into
sbb
mov
out
pop
enter
enter
enter
enter
enter
leave
jg
xlat
leave
add
in
leave
shr
jbe
in
lret
pop
leave
cs
jne
inc
out
jl
push
out
js
cli
in
mov
mov
clc
les
add
jmp
xor
pusha
call
enter
lret
add
loope
xor
fucomip
das
sub
and
icebp
test
add
add
aad
into
sub
jne
sub
bound
jo
jo
and
das
sub
xor
mov
xchg
andb
push
arpl
das
add
shrb
jge
sub
loope
xlat
aaa
add
mov
cmp
aaa
cmp
std
jns
pop
std
mov
push
std
add
add
inc
cmp
cmp
decb
add
xchg
add
cmp
add
in
adc
cmp
adc
cmp
jg
jno
adc
jl
xor
xchg
cmp
mov
cmp
adc
loopne
ret
adc
inc
aas
es
aas
fsts
aas
aad
xchg
aas
mov
leave
mov
pop
leave
lcall
js
add
ret
adc
add
test
mov
shr
mov
repnz
scas
mov
sub
out
jle
rolb
jl
iret
sub
mov
in
les
fisubl
les
lret
ds
inc
mov
or
lret
ror
xor
and
std
mov
les
inc
les
js
pop
lret
insb
lret
mov
lret
fcmovne
mov
sbb
data16
lret
and
out
lret
in
in
test
out
enter
enter
enter
leave
es
pop
leave
mov
jmp
cmpsb
lds
ljmp
repz
out
mov
mov
add
ficoml
jp
add
iret
push
loope
pop
jne
loopne,pn
sarb
or
jecxz
test
bound
stc
sti
pop
cmp
call
lods
xor
cli
insl
xor
jnp
js
push
notl
aaa
mov
add
add
loope
xor
loopne
xor
add
push
cmp
or
lds
xor
outsl
xchg
ss
outsl
imul
ja
xor
movsb
je
xor
aas
dec
push
idiv
pop
or
add
int3
add
xchg
aas
xor
cmp
loope
pusha
xor
push
data16
lds
push
fnstenv
repnz
repnz
add
aam
add
add
cld
push
xor
std
jle
int
dec
cmp
pushf
cmp
das
cmp
adc
cmp
push
mov
pop
adc
decl
lret
add
sbb
lcall
push
xor
cmp
cltd
mov
loope
movl
js
cmp
loope
ja
dec
les
add
rol
fstp
ret
cwtl
or
lret
dec
lret
movsl
mov
fcmovnb
sub
add
out
xchg
arpl
test
mov
pushl
mov
add
mov
rcll
rcr
cltd
mov
xchg
lret
mov
in
fmul
hlt
fisubrs
lret
add
in
lret
mov
leave
mov
out
inc
lods
out
inc
dec
out
inc
stos
call
add
inc
xor
addl
gs
in
out
inc
mov
in
inc
inc
in
inc
jmp
roll
out
inc
cmp
inc
inc
icebp
in
inc
mov
lret
and
lret
divl
cmp
jae
pop
fsubrl
xor
jg
and
fiaddl
test
inc
xor
adc
sbb
test
sbbb
xor
jb
adc
xor
dec
xor
xor
shrl
loop
push
lret
test
pop
sub
push
stos
popa
sub
stos
add
fwait
cltd
cs
fwait
xlat
sub
lret
add
je
nop
ja
cmp
in
test
xor
add
loop
xor
mov
bound
mov
cmp
les
sub
or
push
xor
mov
ds
mov
ds
mov
dec
add
iret
iret
add
sbb
insb
xor
sbb
xor
fiadds
movsl
fstpl
scas
fnsave
and
in
xor
fisubrs
xor
fistpl
stc
mov
xorb
mov
xor
fsubl
aaa
dec
mov
xchg
aaa
in
mov
cld
xor
sahf
cmp
lea
roll
xchg
aaa
sbb
aaa
mov
ja
xor
add
lahf
xor
and
sub
sti
mov
xor
add
pop
xor
lahf
cmp
dec
test
cmp
mov
inc
jle
aaa
cwtl
je
inc
inc
in
lret
out
mov
incl
mov
pusha
aaa
adc
gs
loopne
inc
and
out
mov
popl
add
fmul
xor
fcompl
xor
fmull
xor
fdivrl
lcall
xor
xor
pop
xor
and
dec
xor
push
fdivrl
sbb
dec
xor
mov
jmp
adc
inc
aaa
mov
out
mov
das
add
lret
add
out
lahf
aaa
cli
add
cmc
cmp
fnstcw
cmp
leave
push
xor
cmpsb
bnd
pop
repz
cmp
and
cltd
cmpsl
movsb
ss
pushf
pop
aaa
add
aaa
in
test
xor
jmp
mov
add
xor
jp
call
xor
jb
ss
add
add
add
lret
add
cmpsb
loope
aas
lahf
mov
add
add
fstpt
aam
xor
add
in
cmp
in
cmp
in
cmp
mov
aas
in
cmp
in
cmp
in
cmp
mov
cmp
loopne
cmp
loopne
cmp
loopne
cmp
loopne
cmp
loopne
cmp
loopne
cmp
sbb
add
sbb
hlt
call
movl
xor
data16
xor
jecxz
xor
fadd
xor
or
jecxz
cmp
jecxz
cmp
adc
push
cmp
jmp
adc
mov
cld
pushl
xchg
xor
loopne
xor
loope
das
lcall
cs
mov
stos
cmp
cmpsb
xchg
movsl
sahf
jg
mov
xchg
cmp
jle
cmp
xchg
cmp
jle
cs
cs
lds
int3
fildll
sub
xchg
sub
lds
movsl
mov
je
les
in
cmp
jecxz
cmp
jecxz
cmp
in
cmp
in
cmp
in
cmp
in
cmp
in
cmp
in
cmp
cs
cmp
in
cmp
ja
es
cmp
aaa
cmp
in
cmp
push
cmp
mov
out
ss
shll
lret
xor
fiaddl
sahf
ficompl
fidivl
fisubrl
aaa
flds
in
mov
std
xchg
xlat
sub
mov
xchg
sub
xorb
cmp
add
pop
sub
mov
loop
sub
loop
sub
aaa
sub
ret
addr16
ret
outsl
sub
ret
push
sub
mov
pop
sub
mov
imull
or
daa
sub
subb
add
pop
sub
jecxz
cs
mov
or
mov
cs
out
add
lret
fnstenv
xchg
flds
add
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
sbb
add
sbb
add
or
add
or
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
and
add
and
add
and
add
and
add
lret
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
add
lret
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
lret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
dec
int
add
int
add
int
add
int
add
int
add
sbb
add
sbb
add
or
add
or
add
fcmovne
add
fcmovne
add
lret
int3
add
lret
int3
add
fcmovne
add
fcmovne
add
lret
int3
add
lret
int3
add
fwait
int3
add
fwait
int3
add
mov
add
mov
add
fwait
int3
add
fwait
int3
add
mov
add
mov
add
pop
int3
add
pop
int3
add
dec
int3
add
dec
int3
add
pop
int3
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
add
lret
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
lret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
pop
leave
add
pop
leave
add
dec
leave
add
dec
leave
add
pop
leave
add
pop
leave
add
dec
leave
add
dec
leave
add
sbb
add
add
leave
add
or
add
or
add
sbb
add
sbb
add
or
add
or
add
fcmovne
add
fcmovne
add
lret
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
and
add
and
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
lret
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
add
lret
out
mov
out
mov
out
mov
out
mov
out
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
lret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
fwait
int
add
int
add
int
add
int
add
add
pop
int
add
add
dec
int
add
add
pop
int
add
dec
int
add
add
sbb
add
sbb
add
or
add
or
add
sbb
add
sbb
add
or
add
or
add
fcmovne
add
fcmovne
add
lret
int3
add
lret
int3
add
fcmovne
add
fcmovne
add
lret
int3
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
lret
out
mov
out
add
lret
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
add
lret
out
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
lret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
lret
leave
add
lret
leave
add
fcmovne
add
fcmovne
add
lret
leave
add
lret
leave
add
fwait
leave
add
fwait
leave
add
mov
add
mov
add
fwait
leave
add
fwait
leave
add
mov
add
mov
add
pop
leave
add
pop
leave
add
dec
leave
add
add
add
pop
leave
add
pop
leave
add
dec
leave
add
dec
leave
add
sbb
add
sbb
add
or
add
or
add
sbb
add
sbb
add
or
add
or
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
lret
out
mov
out
mov
out
mov
out
mov
out
mov
out
add
lret
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
add
mov
add
add
lret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
lret
add
mov
add
mov
add
or
add
sbb
add
sbb
add
or
add
or
add
fcmovne
add
fcmovne
add
lret
int
add
int
add
int
add
int
add
int
add
int
add
int
add
int
add
int
add
int
add
pop
int
add
add
dec
int
add
add
pop
int
add
add
dec
int
add
add
sbb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
repnz
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
add
lret
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
lret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
pop
lret
dec
lret
dec
lret
sbb
add
sbb
add
or
add
or
add
sbb
add
sbb
add
or
add
or
add
fcmovne
add
fcmovne
add
lret
leave
add
lret
leave
add
fcmovne
add
fcmovne
add
lret
leave
add
lret
leave
add
fwait
leave
add
fwait
leave
add
mov
add
mov
add
fwait
leave
add
add
leave
add
mov
add
pop
leave
add
pop
leave
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
repnz
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
add
lret
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
lret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
fwait
into
add
mov
add
mov
add
pop
into
add
add
add
dec
into
add
dec
into
add
pop
into
add
pop
into
add
dec
into
add
dec
into
add
sbb
add
sbb
add
or
add
or
add
sbb
add
sbb
add
or
add
or
add
fcmovne
add
fcmovne
add
lret
int
add
int
add
int
add
int
add
int
add
int
add
int
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
repnz
mov
add
mov
add
mov
add
mov
add
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
add
lret
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
lret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
lret
lret
lret
lret
fwait
lret
fwait
lret
mov
add
mov
add
fwait
lret
fwait
lret
add
lret
pop
lret
pop
lret
dec
lret
dec
lret
pop
lret
pop
lret
dec
lret
dec
lret
sbb
add
sbb
add
or
add
or
add
sbb
add
sbb
add
or
add
or
add
fcmovne
add
fcmovne
add
lret
leave
add
lret
leave
add
mov
add
mov
add
mov
add
add
repnz
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
repnz
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
add
lret
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
lret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
or
add
fcmovne
add
fcmovne
add
lret
into
add
lret
into
add
fcmovne
add
fcmovne
add
lret
into
add
lret
into
add
fwait
into
add
fwait
into
add
mov
add
add
into
add
fwait
into
add
mov
add
mov
add
pop
into
add
pop
into
add
dec
into
add
dec
into
add
pop
into
add
pop
into
add
dec
into
add
dec
into
add
sbb
add
sbb
add
or
add
or
add
sbb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
in
add
in
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
lret
out
mov
out
add
lret
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
add
lret
out
mov
out
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
lret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
sbb
add
sbb
add
or
add
or
add
sbb
add
sbb
add
or
add
or
add
fcmovne
add
fcmovne
add
lret
lret
lret
lret
fcmovne
add
fcmovne
add
lret
lret
lret
lret
add
lret
mov
add
mov
add
fwait
lret
fwait
lret
mov
add
mov
add
pop
lret
pop
lret
dec
lret
dec
lret
pop
lret
pop
lret
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
in
add
in
add
in
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
lret
out
mov
out
mov
out
mov
out
mov
out
mov
out
add
lret
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
add
add
lret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
lret
add
mov
add
mov
add
mov
add
pop
iret
add
dec
iret
add
dec
iret
add
pop
iret
add
pop
iret
add
dec
iret
add
dec
iret
add
sbb
add
sbb
add
or
add
or
add
sbb
add
sbb
add
or
add
or
add
fcmovne
add
fcmovne
add
lret
into
add
lret
into
add
fcmovne
add
add
into
add
lret
into
add
lret
into
add
fwait
into
add
fwait
into
add
mov
add
mov
add
fwait
into
add
fwait
into
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
dec
in
adc
test
xchg
sarb
xor
inc
xchg
or
inc
mov
pop
push
mov
nop
pop
mov
push
mov
pop
xchg
fistl
sbb
jge
mov
xchg
inc
xchg
lds
push
ret
xchg
pop
jno
pop
xchg
mov
cmp
fildll
mov
fadds
test
jo
ljmp
add
negb
fs
aas
call
fisubrl
xchg
pop
das
dec
jecxz
xchg
mov
adc
mov
sbb
push
mov
mov
xor
out
xchg
mov
dec
inc
cmp
cmc
int
jno
push
cmp
lods
movsb
icebp
pop
popf
push
ljmp
mov
add
jle
sub
jge
sbb
outsb
ljmp
jne
mov
test
jge
into
mov
dec
mov
pop
xor
lods
pop
lret
mov
mov
mov
fidivrs
sti
jb
sahf
dec
lcall
inc
repnz
dec
or
test
cmp
jae
dec
push
loope
jp
inc
lea
add
add
sub
and
push
cmp
xor
mov
mov
fdivr
inc
into
lock
repz
cmp
inc
pop
jb
testl
push
aad
in
sbb
in
pop
movsl
into
les
mov
repz
aam
mov
push
jmp
ret
cmp
dec
into
leave
ljmp
xchg
orb
fdivl
or
cmp
out
out
mov
add
or
mov
lods
xchg
and
mov
xor
into
repz
into
mov
fnsave
cmp
es
sahf
xchg
mov
fcmovnb
cmp
imul
popf
mov
movsb
aam
imul
add
add
pop
scas
cmpsl
shrl
stos
loopne
mov
xchg
outsb
push
insb
xchg
ret
int3
idiv
int3
out
inc
int3
out
int3
addr16
in
cmp
inc
ljmp
call
in
cld
xchg
xor
push
inc
jo
sub
mov
mov
inc
cmp
sub
mov
cmpb
ja
jmp
lea
dec
pop
int3
add
inc
in
push
test
inc
stos
inc
cmp
sub
mov
inc
dec
in
xchg
mov
add
inc
inc
clc
cmp
add
inc
cmp
cmp
mov
inc
dec
lock
add
inc
inc
cld
cmc
xchg
add
inc
dec
hlt
xor
add
lcall
jae
cli
inc
dec
lock
add
inc
cmp
fdivrs
add
add
add
xor
add
mov
testl
in
cmp
mov
enter
mov
rolb
lock
mov
ror
inc
int3
out
inc
int3
out
int3
addr16
in
shr
add
add
jecxz
inc
lcall
xorl
aam
nop
add
iret
inc
add
cltd
call
mov
lret
mov
push
jne
push
push
rcr
test
inc
pop
adc
mov
add
dec
aad
push
cs
ret
add
xor
jae
push
cmp
cmp
jnp
mov
add
sub
add
cmc
ror
jbe
mov
push
std
mov
sbb
add
sti
mov
outsl
push
pop
pop
pop
push
in
sbb
add
push
inc
xor
cwtl
or
cmp
pop
pop
push
in
out
xlat
push
mov
rorl
mov
mov
int3
jbe
pop
pop
xchg
adcl
push
mov
push
jmp
push
cmp
mov
add
push
cmp
xor
jmp
jmp
cmp
sub
add
cmp
hlt
mov
xchg
int3
pop
push
in
insl
hlt
add
push
cmp
xor
mov
out
dec
jle
inc
adc
leave
mov
int3
dec
cld
add
xlat
add
fldcw
pop
or
add
mov
cld
ljmp
ror
pop
pop
pop
push
in
stos
lret
add
xchg
push
or
mov
ror
pop
pop
pop
push
in
mov
jns
mov
jl
mov
add
add
cmc
xchg
push
cmp
xor
or
jbe
add
mov
pop
mov
out
shll
hlt
cmp
fbstp
cmp
add
cli
mov
popf
mov
push
inc
lock
and
lret
xchg
push
cmp
sub
dec
clc
cmp
lsl
mov
stos
push
dec
or
mov
std
or
xor
or
shl
imul
ror
push
in
xchg
mov
inc
stos
push
cmp
sub
add
push
dec
call
sub
mov
inc
lock
add
lret
mov
lret
cmp
cmpl
pop
int3
add
cwtl
lret
push
sub
add
jns
adc
sub
cmpl
ja
mov
lret
pop
fisttps
or
imul
pop
sub
add
push
cmp
sub
add
cmp
add
mov
mov
dec
jns
mov
add
add
imul
cmpl
out
jecxz
pushl
dec
cmp
cmpsb
insb
mov
push
or
xor
mov
mov
iret
out
ljmp
mov
jnp
mov
in
sub
xchg
icebp
adc
pop
fisttps
lea
add
hlt
push
lcall
or
aam
push
mov
push
adc
add
filds
hlt
cmp
xchg
icebp
lea
cmpsb
push
dec
loopne
cmc
cmp
sbb
int3
xchg
adcl
push
mov
push
cmp
lcall
clc
in
les
xchg
adc
jg
push
cmp
hlt
mov
xchg
int3
add
pop
push
in
ljmp
mov
push
push
add
mov
xchg
int3
popw
push
in
push
xlat
lahf
sub
popl
mov
mov
mov
sarl
sub
inc
hlt
cmp
xchg
push
dec
clc
sub
mov
das
or
xor
add
xor
add
cmpsb
mov
dec
push
sbb
push
cmp
cmp
mov
dec
cmp
sub
add
cltd
les
mov
jecxz
inc
mov
xor
mov
jmp
in
pextrw
adc
int3
outsb
adc
int3
data16
int3
out
in
out
sarl
inc
scas
pop
std
mov
shr
add
add
pextrw
pextrw
push
in
push
mov
inc
dec
rolb
push
cmp
cmp
mov
into
dec
cmp
jns
mov
add
push
rclb
or
enter
push
add
arpl
hlt
decl
mov
push
jae
xor
movl
lock
add
add
mov
mov
jmp
inc
out
mov
jl
push
push
jge
xorl
mov
add
xlat
add
cmp
cmp
jno
cmp
add
inc
call
inc
lahf
mov
push
inc
adc
nop
loopne
arpl
mov
popf
shl
and
add
add
jnp
inc
lcall
push
sub
mov
out
inc
mov
call
subl
dec
pop
dec
shrb
push
dec
in
repz
cld
sub
jae
add
lret
lahf
sbb
add
xchg
stc
incl
xchg
xorl
imul
iret
add
jbe
dec
jg
cmpl
add
push
adc
jb
add
mov
mov
jge
inc
xchg
push
dec
xor
loope
lock
xlat
mov
mov
or
jae
xor
jge
add
lock
xor
add
jne
push
sub
cmc
push
and
dec
push
push
inc
fsubrs
jbe
mov
add
push
cmp
sub
push
mov
push
mov
jp
push
xlat
fcomip
xor
mov
dec
mov
add
mov
inc
fdivs
lret
xchg
push
dec
loopne
fdivs
xor
lods
scas
inc
mov
add
and
in
mov
lret
push
mov
out
push
call
xor
add
add
out
jmp
adc
mov
sub
mov
xor
arpl
lahf
hlt
inc
mov
push
sub
xor
iret
scas
inc
mov
call
sub
lahf
hlt
add
cli
mov
imul
mov
mov
jl
adc
roll
hlt
inc
xchg
push
add
mov
mov
lret
add
or
xchg
push
pop
repnz
incl
mov
inc
mov
mov
cmp
add
jb
decb
mov
cmc
push
out
mov
add
jg
add
pextrw
push
push
in
outsl
rorl
int3
out
pop
push
in
cld
je
cmp
sub
mov
fnstsw
pop
jno
push
in
ficoml
sbb
fsubp
cmc
pushl
or
mov
fisttps
add
mov
mov
lret
push
incl
or
int3
addr16
in
push
test
inc
cli
lret
add
mov
cmp
push
add
add
xchg
add
filds
add
lret
add
mov
inc
or
iret
add
test
imul
fdiv
add
mov
inc
mov
add
mov
or
mov
scas
inc
mov
add
mov
xor
and
mov
add
sahf
or
jbe
add
jno
incl
jmp
inc
mov
add
or
sub
scas
inc
mov
cmp
mov
xor
ja
mov
push
add
add
inc
add
lret
mov
scas
mov
cld
aas
mov
push
add
lret
mov
loopne
cmp
fildl
mov
lret
cmc
adc
add
mov
sub
push
pushl
adc
mov
mov
jge
aad
fcomi
sub
mov
mov
push
push
sub
mov
lret
push
call
xor
add
dec
rolb
cld
mov
cmp
bound
fsubl
cmpsb
sti
lods
fiaddl
mov
lret
mov
add
sub
mov
lret
add
jnp
or
mov
hlt
push
pop
inc
sti
lcall
mov
add
testl
in
nop
hlt
add
testl
mov
lret
xchg
out
ja
add
mov
jmp
xor
xchg
inc
cmp
test
inc
add
and
mov
add
sbb
add
inc
inc
clc
xor
call
adc
mov
clc
xor
lret
add
inc
or
and
nop
add
mov
mov
pushf
mov
jecxz
clc
sub
sbb
sti
adc
iret
xor
sbb
add
add
adc
subb
insb
or
loopne
inc
mov
cmp
std
adc
pusha
or
sarb
push
ret
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
lret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
lret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
lret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
hlt
scas
lahf
mov
pop
xor
xor
push
jne
pusha
dec
add
or
mov
jno
out
mov
std
sub
xchg
cld
jle
pop
inc
cmp
sahf
add
stos
ret
cs
mov
pop
cmp
nop
std
dec
loope
in
lcall
cwtl
xor
jbe
jo
shlb
lret
imul
fisubrl
mov
insb
aam
jle
mov
aad
adc
mov
adc
in
inc
addr16
les
notb
std
mov
sbb
out
pop
ret
adc
lahf
test
cmp
gs
jl
mov
dec
hlt
push
pop
popa
outsb
xchg
mov
pop
mov
aaa
test
mov
push
enter
inc
sub
call
out
and
jg
pop
scas
fsubl
mov
xor
xchg
fwait
testl
stos
or
out
jo
lret
push
in
std
lret
dec
mov
adcb
jb
imul
sti
and
dec
jnp
cmp
fdivrl
mov
mov
dec
into
stos
add
lds
sub
scas
mov
dec
jno
dec
mov
repnz
sub
hlt
mov
iret
test
gs
sahf
sbb
pop
sub
aad
loop
jge
iret
ret
cmp
push
pop
gs
xchg
add
repz
notl
ja
call
mov
loopne
adc
hlt
mov
mov
int3
or
sbbl
int
ja
into
inc
pusha
into
and
adc
int3
sbbl
gs
sbb
mov
imul
sub
lret
add
test
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
push
movl
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
mov
mov
add
mov
pop
ret
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
push
call
add
movzwl
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
cmp
jae
movl
mov
jmp
jmp
movl
mov
mov
pop
ret
int3
int3
int3
push
mov
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
cmpl
jne
mov
mov
mov
push
mov
push
mov
push
call
add
mov
push
call
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
jmp
mov
pop
pop
ret
push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movl
movl
mov
mov
lea
mov
mov
mov
movl
lea
push
push
call
cmpl
jne
xor
jmp
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
lea
push
push
call
cmpl
jne
xor
jmp
mov
push
mov
push
mov
push
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
cmpl
je
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
call
mov
mov
mov
push
mov
push
push
call
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
movl
movl
movl
mov
mov
movl
movl
mov
mov
lea
push
mov
push
push
call
test
je
push
call
xor
jmp
lea
push
push
push
call
test
jne
push
call
xor
jmp
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
mov
mov
mov
push
call
add
mov
mov
add
mov
push
mov
push
mov
push
call
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
push
mov
sub
mov
pop
add
mov
movl
mov
add
ret
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
movl
jmp
mov
add
mov
mov
shr
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
push
mov
push
call
add
sar
cmp
jne
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
mov
push
mov
push
call
add
and
add
mov
mov
mov
add
mov
mov
jmp
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jge
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
add
mov
mov
jmp
mov
cmp
jne
mov
sub
push
mov
push
mov
push
call
add
mov
pop
ret
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
movl
movl
movl
mov
add
mov
movl
mov
add
mov
movl
movl
movl
mov
mov
mov
mov
movl
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
push
call
add
mov
mov
mov
mov
jmp
mov
pop
ret
int3
push
mov
sub
movl
movl
movl
mov
xor
mov
movl
movl
mov
mov
movl
movl
mov
mov
movl
movl
mov
mov
mov
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
pop
push
push
inc
dec
pop
inc
jne
jb
outsb
je
outsl
outsb
je
outsl
insb
push
gs
inc
outsl
outsb
je
outsl
insb
pop
inc
insb
popa
jae
pop
jnp
inc
xor
inc
cmp
inc
sub
sub
sub
sub
xor
xor
xor
cmp
add
jp
add
hlt
push
push
add
pop
push
add
push
add
add
push
add
add
pop
push
add
push
add
pop
push
add
push
push
add
push
add
push
add
add
add
add
insb
pusha
push
add
add
add
add
add
nop
pusha
push
add
add
add
push
add
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
add
push
add
push
add
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
add
pop
push
add
add
add
pop
push
add
push
add
push
add
push
add
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
push
add
pop
push
add
pop
push
add
push
add
push
add
add
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
add
add
push
add
push
add
pop
push
add
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
push
add
pop
push
add
pop
push
add
push
add
add
push
add
add
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
push
add
pop
push
add
pop
push
add
push
add
push
add
push
add
push
add
add
add
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
push
add
push
add
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
add
add
push
add
pop
push
add
push
add
pop
push
add
push
add
push
add
push
add
push
add
push
add
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
push
add
pop
push
add
push
add
push
add
push
add
push
add
add
push
add
push
add
pop
push
add
pop
push
add
push
add
pop
push
add
add
add
pop
push
add
pop
push
add
pop
push
add
pusha
push
add
pusha
push
add
push
add
pusha
push
add
add
add
push
add
add
add
push
add
add
add
add
push
add
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
add
push
add
push
add
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
add
pop
push
add
add
add
pop
push
add
push
add
push
add
push
add
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
push
add
pop
push
add
pop
push
add
push
add
push
add
add
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
add
add
push
add
push
add
pop
push
add
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
push
add
pop
push
add
pop
push
add
push
add
add
push
add
add
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
push
add
pop
push
add
pop
push
add
push
add
push
add
push
add
push
add
add
add
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
push
add
push
add
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
add
add
push
add
pop
push
add
push
add
pop
push
add
push
add
push
add
push
add
push
add
push
add
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
push
add
pop
push
add
push
add
push
add
push
add
push
add
add
push
add
push
add
pop
push
add
pop
push
add
push
add
pop
push
add
add
add
pop
push
add
pop
push
add
pop
push
add
pusha
push
add
pusha
push
add
push
add
pusha
push
add
add
add
push
add
add
add
push
add
add
add
insl
imul
outsl
arpl
jae
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
je
jb
jbe
je
push
jb
imul
inc
add
je
push
jb
jbe
je
push
jb
imul
imul
add
imul
jae
jne
arpl
add
gs
gs
imul
dec
outsl
popa
fs
imul
add
and
inc
gs
jb
arpl
fs
jae
add
adc
push
outsb
push
gs
js
gs
imul
gs
ds
outsb
push
gs
js
gs
imul
gs
add
inc
jne
jb
outsb
je
jb
arpl
jae
dec
add
gs
gs
jne
arpl
add
inc
gs
jns
je
insl
push
imul
insb
gs
imul
gs
jne
jb
outsb
je
jb
arpl
jae
add
inc
jne
jb
outsb
je
push
dec
add
data16
je
imul
je
add
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
mov
jo
outsb
add
and
insb
gs
jnp
push
imul
lods
add
je
jne
jb
outsb
je
push
add
pop
add
je
push
dec
outsb
outsw
add
imul
insb
insb
outsl
arpl
add
inc
jb
popa
je
inc
imul
js
je
jb
arpl
jae
dec
inc
push
dec
inc
dec
xor
cs
insb
add
dec
add
imul
outsb
outsl
ja
gs
popa
addr16
add
lock
outsb
fs
imul
sbb
inc
gs
jne
jae
jb
outsl
jae
add
push
gs
jne
jae
jb
outsl
jae
add
add
imul
jae
addr16
add
aad
push
jb
outsb
jae
popa
je
dec
gs
popa
add
test
inc
imul
dec
gs
popa
addr16
add
dec
add
je
gs
popa
addr16
add
arpl
imul
gs
outsl
jb
addr16
jne
fs
imul
add
je
outsb
jne
and
push
outsl
jae
push
jne
je
gs
popa
add
outsl
jae
dec
gs
popa
addr16
add
dec
add
insb
gs
jae
inc
popa
jo
jne
add
add
je
popa
jo
jne
add
add
fs
arpl
inc
add
add
fs
popa
imul
push
outsb
jb
imul
popa
jae
inc
add
rolb
dec
outsl
popa
fs
imul
add
je
outsl
jns
imul
add
imul
popa
jae
inc
add
add
gs
je
push
imul
inc
add
push
imul
outsb
addr16
add
xchg
add
push
imul
outsl
arpl
add
add
fs
je
push
imul
rolb
dec
outsl
popa
fs
jne
jae
jb
add
push
gs
jne
jae
jb
cwtl
add
gs
dec
outsb
jne
add
add
ja
outsb
jne
popa
jb
pop
add
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
add
jo
imul
gs
add
das
add
je
gs
popa
insl
gs
gs
inc
add
arpl
outsb
jne
je
insl
add
add
popa
bound
outsb
jne
je
insl
add
movsl
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
jae
popa
addr16
outsl
js
add
add
fs
imul
add
je
insb
addr16
je
insl
push
gs
inc
add
ja
imul
roll
inc
outsb
popa
bound
imul
jns
push
gs
outsl
arpl
add
pop
add
outsb
fs
gs
popa
addr16
add
push
add
je
popa
jb
outsb
je
incl
push
imul
add
pop
add
je
insb
addr16
je
insl
add
stos
add
je
imul
js
inc
add
movsb
add
je
imul
outsb
addr16
add
outsl
add
je
jns
je
insl
dec
gs
imul
inc
gs
inc
add
add
imul
add
stos
add
jbe
insb
imul
je
add
add
popa
outsb
addr16
imul
gs
imul
cmpsl
add
je
imul
jae
add
add
fs
ja
imul
lret
jae
imul
jae
bound
add
gs
imul
out
add
insb
insb
push
arpl
mov
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
imul
js
inc
add
testl
popa
addr16
gs
sbb
inc
gs
gs
je
jo
imul
mov
inc
gs
imul
arpl
add
ja
gs
inc
add
gs
gs
jae
inc
inc
add
add
fs
je
imul
ja
jo
imul
add
je
outsb
jne
push
push
inc
push
xor
cs
insb
add
inc
add
popa
insb
imul
je
add
pop
add
insb
arpl
insb
gs
add
add
gs
je
inc
outsl
insl
jo
je
bound
inc
add
loop
inc
gs
bound
arpl
add
add
je
je
arpl
bound
arpl
xor
inc
jb
popa
je
inc
dec
inc
imul
add
je
popa
insb
gs
gs
outsb
je
imul
gs
gs
inc
inc
add
addl
popa
insb
gs
gs
outsb
je
imul
gs
jp
push
popa
insb
gs
gs
add
je
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
inc
gs
arpl
popa
jo
add
popa
je
inc
outsl
insl
jo
je
bound
imul
add
je
insb
je
add
inc
jb
popa
je
push
popa
insb
gs
add
inc
jb
popa
je
push
outsl
insb
imul
add
push
gs
arpl
push
arpl
rolb
inc
gs
gs
dec
bound
arpl
data16
je
imul
add
push
gs
inc
outsl
insb
outsl
jb
add
add
je
popa
jns
jne
add
gs
push
je
add
push
gs
popa
jns
jne
add
dec
xor
cs
insb
add
add
arpl
inc
imul
pop
arpl
imul
arpl
insb
outsb
add
add
addr16
popa
imul
out
pop
imul
insl
add
pop
pop
jae
je
jae
jb
popa
je
gs
add
insl
add
fs
jae
pop
imul
add
js
je
aas
add
jo
pop
insw
outsl
fs
push
add
jae
je
popa
jo
pop
je
jo
add
fwait
add
js
gs
pop
push
gs
add
xchg
pop
arpl
je
outsl
insb
data16
add
add
outsl
imul
arpl
js
je
movb
arpl
jo
add
leave
add
jae
outsb
add
push
add
imul
imul
add
jae
jo
arpl
insl
add
jne
arpl
insb
add
add
insb
insb
outsl
arpl
add
add
cmp
data16
outsl
outsl
jb
add
pop
inc
dec
popa
arpl
add
jae
jb
add
gs
je
add
add
je
insb
add
add
jo
outsb
add
add
insb
outsl
jae
add
mov
jb
imul
jb
popa
insb
insb
outsl
arpl
inc
add
gs
je
insl
popa
insb
insb
outsl
arpl
add
imul
pop
imul
jae
popa
outsb
data16
pop
add
je
popa
add
add
jo
pop
arpl
insl
outsl
fs
jnp
insl
gs
insl
outsl
jbe
add
add
outsl
insb
add
insl
jae
arpl
cs
insb
add
pop
add
addr16
jo
outsb
dec
gs
add
push
gs
jo
outsb
dec
gs
js
add
add
addr16
insb
outsl
jae
dec
gs
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
xor
push
gs
jb
popa
je
dec
gs
js
add
push
gs
gs
popa
insb
jne
inc
js
add
data16
addr16
jne
jb
push
popa
insb
jne
inc
add
inc
inc
push
inc
push
dec
xor
cs
insb
add
lgdtl
gs
insb
inc
bound
je
add
inc
dec
dec
xor
cs
insb
add
dec
outsb
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
dec
inc
push
dec
xor
cs
insb
add
add
jns
mov
add
add
add
add
add
add
addb
add
jns
mov
add
add
add
add
add
add
addb
add
jns
mov
add
add
add
or
add
add
pop
jo
add
add
add
add
add
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
and
and
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
and
and
and
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
and
and
and
cmp
arpl
imul
and
and
and
and
and
and
gs
gs
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
ds
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
and
and
and
cmp
jae
arpl
imul
and
and
and
and
je
jne
je
outsb
outsw
ds
and
and
popa
jae
gs
bound
add
add
dec
add
add
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
and
add
add
add
xor
xor
xor
and
cmp
cmp
cmp
cmp
cmp
arpl
mov
fidivrl
add
push
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
jno
jp
lods
xor
enter
loop
call
xor
and
lret
ss
aaa
aaa
cltd
aaa
push
cmp
cmp
les
cmc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
push
cmp
arpl
imul
jnp
cmpl
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
cmp
jno
ja
jge
cmpl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
sub
cmp
dec
cmp
pop
cmp
jo
jbe
jl
.byte
.byte
