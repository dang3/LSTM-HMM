sbb
add
out
sub
inc
sub
xchg
lods
xorb
shrb
sbb
cmp
outsl
adc
inc
push
in
jg
cs
outsb
mov
push
fwait
out
pop
js
fidivl
test
outsl
movsb
in
loopne
jnp
int
mov
subl
aad
mov
dec
mov
and
mov
orl
in
mov
and
out
mov
and
mov
nop
bts
mov
xchg
jne
cmp
jmp
movl
xlat
push
push
xchg
xchg
test
ds
out
scas
pop
or
lret
dec
out
jns
test
loop
arpl
clc
in
outsl
addb
cmp
cltd
xor
je
adc
push
imul
xchg
lahf
cwtl
sub
pop
xchg
sub
mov
pusha
lret
xchg
lods
popa
sti
push
jge
inc
pop
scas
cmc
fsubrl
push
mov
sti
xlat
std
int3
cmp
sub
push
lds
push
out
cmp
jo
shl
jle
stos
dec
movb
mov
adc
sti
mov
xchg
add
push
fdivrs
outsb
cmp
test
mov
sub
or
je
xchg
aaa
orb
inc
stc
out
jns
addr16
out
pop
stos
dec
jecxz
ret
les
push
cltd
imul
in
das
hlt
bound
out
mov
cmc
icebp
mov
jp
inc
insb
fsin
mov
push
mov
cmp
aad
std
xchg
aas
insb
jns
xor
test
iret
test
call
lods
push
out
cmc
mov
inc
mov
testl
dec
mov
cltd
loopne
and
fimull
fwait
mov
xor
das
push
stos
jp
aaa
inc
fdiv
jl
js
mov
xor
xorb
sub
loop
lcall
mov
jecxz
pop
add
cs
or
icebp
push
jo
inc
test
xor
or
rcrb
jne
jmp
lret
push
jecxz
rep
jl
and
lea
mov
push
out
sub
sbb
aad
sub
mov
add
cs
jae
cmpsl
xor
popa
xor
fidivrs
and
and
or
scas
add
shll
sbb
push
lcall
xor
lock
adc
repz
jl
stos
popa
fs
stos
sub
ss
dec
jbe
fildll
lock
and
fdiv
add
ja
push
sub
xchg
pop
repnz
push
aam
out
inc
ja
pushf
pop
ret
cli
push
lret
stos
inc
clc
insb
nop
inc
adc
out
lds
lock
pop
xor
outsb
jnp
popa
mov
xchg
or
std
into
pop
lods
mov
mov
fdivr
fwait
aam
inc
add
outsb
out
adc
sti
insl
test
push
pushl
insb
or
fstpl
mov
das
mov
ja
mov
js
rcr
mov
test
cld
inc
xor
mov
cmp
cmp
mov
push
movsb
popa
push
dec
repnz
cs
mov
loop
jg
lcall
fcoml
xor
jne
int3
fisubrs
sub
and
jo
or
mov
dec
test
out
adc
mov
push
cmp
lcall
out
or
xlat
cmp
push
mov
and
mov
movsl
call
in
loopne
cmpb
out
test
push
scas
push
xlat
xchg
push
add
xor
out
ja
xchg
dec
mov
or
pop
pop
xchg
aam
outsl
inc
push
cmp
mov
hlt
mov
inc
jp
xor
sub
dec
repz
sbb
jmp
push
and
add
xor
pushf
les
cmp
in
jmp
adc
inc
mov
mov
mov
mov
in
sahf
sti
xor
inc
les
push
dec
add
lock
pop
loopne
icebp
add
notl
sub
mov
ljmp
lret
inc
into
add
out
and
out
js
ljmp
popf
call
aaa
push
lret
mov
into
negb
imul
inc
sub
outsl
ljmp
mov
ret
stos
fwait
jae
aas
cmpxchg
ds
xor
jg
pop
cli
bound
and
mov
and
lock
stos
mov
fsubrs
mov
test
in
push
and
add
and
xchg
inc
dec
cmp
shll
jne
push
repz
popa
mov
jecxz
lods
loop
pop
xchg
and
out
in
ljmp
xchg
cmp
movsb
pop
or
or
rcr
adc
mov
js
mov
cli
push
cmc
fwait
pop
mov
mov
adc
stos
js
arpl
sub
mov
repnz
repnz
mov
add
leave
divl
fiadds
xchg
sub
data16
test
cmp
jno
or
repnz
sbb
xlat
dec
cs
jae
test
outsb
jns
mov
or
movsb
xor
aam
ljmp
inc
les
insb
push
mov
lret
fisubs
scas
stos
repnz
mov
xchg
fstl
xor
dec
mul
orl
mov
jns
mov
jns
ret
aas
repz
shlb
cwtl
fildll
call
ss
push
xchg
push
pop
mov
mov
mov
mov
das
insb
push
outsb
mov
outsb
jg
pop
out
add
inc
push
jle
dec
and
jo
mov
shr
in
repnz
adc
mov
jo
dec
push
out
test
adc
add
pop
xchg
std
cmc
mov
pusha
xlat
lods
push
sbb
inc
stos
cmp
dec
enter
into
push
jo
cmpsb
hlt
hlt
jne
cmpsl
cmp
pop
shl
cmc
pop
cmpl
mov
fdiv
mov
ror
mov
pushf
lahf
and
sbb
cmpsl
add
repz
rcrb
pop
insb
mov
xchg
jbe
outsb
cmpsl
ss
and
jae
pop
xchg
or
andl
les
sbb
arpl
into
xchg
ljmp
sbb
ficoml
mov
cmp
inc
mov
push
jae
fdivrs
fcomps
jb
push
and
mov
movsb
jp
adc
cmpsl
jp
test
int3
fildl
test
repz
mov
popa
adc
push
cli
lret
pop
rolb
jae
in
mov
lahf
mov
sbb
jo
jle
ret
push
fmuls
jns
or
cmp
cs
mov
movsb
sarl
sub
and
andb
or
mov
gs
cli
xor
dec
cmp
dec
adc
fcmovnu
sbb
xor
fisubrl
or
in
sub
in
pop
and
fs
mov
jbe
adc
lret
and
inc
dec
mov
cmp
mull
lcall
lods
std
cwtl
enter
sbb
cmp
in
mov
cmp
xchg
std
std
mov
xlat
mov
filds
repnz
dec
lcall
add
dec
stos
in
test
mov
mov
pop
shlb
pop
lock
dec
inc
push
cmpsl
sub
pop
fnstsw
sub
pusha
xor
aam
repnz
mov
addr16
dec
jp
mov
sarl
xchg
jle
movsl
add
dec
xlat
xor
inc
iret
in
out
xor
mov
imul
lahf
in
les
inc
add
in
adcb
cmpsl
pushf
enter
test
mov
bnd
xchg
ja
jge
xor
lock
outsb
gs
cmpl
push
cli
in
pop
int3
dec
daa
or
fidivrs
lahf
nop
lods
mov
les
adc
mov
addr16
fs
mov
pop
sbb
sbb
sbb
or
mov
mov
push
or
inc
enter
adc
jno
sbb
jecxz
jb
cltd
cmp
bound
lea
push
enter
mov
fimull
mov
call
sbb
xor
sub
test
out
sub
rep
mov
std
adc
mov
filds
dec
mov
arpl
pop
pmaxub
pop
push
inc
rcrl
cmpsl
sbb
add
stos
sbb
and
arpl
push
loope
and
mov
test
mov
cmp
xor
mov
aad
cmp
push
mov
inc
cmpsb
or
out
jle
neg
outsl
mov
lcall
dec
mov
rcr
cmc
cld
stc
add
hlt
addb
out
mov
fistpll
sub
push
pop
adc
loop
inc
enter
adc
push
in
repz
movsl
mov
daa
xor
mov
sbb
adc
mov
mov
fcoml
push
lret
add
push
push
mov
movsb
aas
cmpsb
cld
enter
mov
fwait
pop
es
jge
dec
outsb
mov
pop
xor
jbe
push
leave
add
dec
or
push
push
jg
sbb
inc
xor
dec
lds
std
mov
lods
push
push
mov
xchg
jl
inc
dec
stos
add
fisttpll
or
push
rcr
mov
or
lcall
std
add
mov
inc
fs
adc
pusha
rorb
lahf
adc
xchg
mov
sub
push
imul
icebp
push
cmpsb
leave
pop
int3
int
xchg
xor
jle
xor
fldl
and
stos
adc
add
lret
mov
sbb
aad
cli
inc
jl
stos
push
int3
lahf
lahf
inc
cmp
lret
cld
push
sbb
sbb
sbb
call
xchg
sbb
jp
data16
test
cmp
testb
jmp
xor
lea
mov
cmp
nop
sub
cs
mov
fadds
mov
lret
push
rclb
sub
in
inc
pop
inc
arpl
aas
or
bnd
add
shrl
or
jp
add
jecxz
loop
popf
sub
scas
pushf
add
in
scas
clc
adc
mov
dec
mov
inc
mov
push
sbb
repnz
pop
mov
repz
aas
pop
inc
flds
xchg
push
mov
mov
pop
lcall
scas
sbb
movsl
push
xchg
stc
daa
and
or
lods
jb
rolb
aam
mov
aad
cmc
ror
sub
mov
xchg
out
xchg
lods
adc
xchg
jb
xchg
jo
ret
mov
aaa
inc
mov
sarl
lret
xor
adc
rorl
fbstp
dec
sarl
fsub
jecxz
mov
lret
std
sub
jae
mov
sub
jno
lock
inc
cli
aas
mov
pop
sbb
dec
rcr
sub
mov
cmpb
lods
movsl
cmp
xor
repz
mov
inc
out
push
xor
jmp
dec
cwtl
cwtl
cmp
aas
nop
sub
cmpsl
pop
sbb
in
fsubl
or
das
fmul
rcll
imul
cmp
stc
enter
aaa
add
xorl
xor
lahf
das
dec
pop
ret
loope
cmpsl
shl
cs
nop
and
push
sahf
xchg
enter
sti
sti
clc
jle
inc
daa
insl
inc
outsb
jbe
ljmp
jae
dec
and
and
mov
test
movsb
push
or
or
add
sub
ffreep
sub
clc
xchg
sbb
movb
xor
add
push
inc
cmp
push
mov
test
stos
pop
add
xchg
cmc
push
adc
add
sub
mov
nop
adc
xor
xchg
iret
stos
mov
test
in
mov
jg
ret
inc
or
push
cmp
cmp
push
outsl
lahf
dec
dec
dec
mov
aad
adc
insb
xor
cmp
cmc
ja
xchg
int
ja
cmpb
sub
mov
arpl
cmc
fdivrl
push
jp
std
push
pop
mov
push
mov
jne
push
pushf
dec
pop
or
call
stos
mov
data16
mov
cltd
roll
out
sub
jge
jae
cmp
popf
push
push
icebp
decb
mov
or
insb
bound
bound
inc
rcll
mov
pop
mov
orb
jne
jbe
mov
scas
test
es
insb
shl
js
xchg
mov
pop
lods
inc
jp
loopne
shll
das
push
insb
imul
into
insl
inc
sub
lock
testl
lds
outsb
sahf
sbb
imul
mov
push
fcom
pop
repnz
pop
mov
xchg
jle
nop
xor
cmp
xor
sbb
sub
cmp
mov
xchg
das
je
jnp
aam
cmp
ds
and
jno
push
inc
cmpsl
loopne
dec
sbb
xlat
and
pop
cltd
xchg
outsl
movsb
ret
cmc
jecxz
dec
sbb
mov
gs
cltd
pop
hlt
adc
inc
lea
or
mov
mov
loopne
pushf
std
mov
mov
testb
dec
and
push
push
cmpsb
daa
out
out
cli
xchg
fcmove
pop
cmp
ror
fwait
sbb
mov
stc
cmpb
cmp
push
or
popf
pushf
out
dec
btc
inc
loop
and
testb
sub
leave
in
push
sbbb
pop
cmpsb
mov
pop
mov
sti
dec
mov
cmpsl
dec
or
and
mov
daa
lods
jge
xchg
push
icebp
shlb
loope
ja
aad
add
mov
je
dec
sub
push
jns
mov
push
mov
fdivp
mov
in
xchg
ret
cmovnp
fs
add
sub
mulb
or
sub
das
pop
js
jle
jns
adc
cld
jae
xor
jecxz
xchg
dec
adc
mov
test
inc
movsb
aam
xor
or
ja
inc
xor
push
aas
std
test
lds
ja
daa
sbb
pop
inc
mov
push
add
mov
jo
and
jmp
je
sarb
jl
sub
adcb
sub
inc
adc
popf
sahf
sbb
push
push
cld
in
aad
and
fidivs
pop
sub
lods
fists
addr16
mov
add
xor
jp
dec
push
adc
jnp
fsubp
lcall
mov
fists
imul
cmp
xchg
adc
pop
mov
clc
push
hlt
xor
mov
push
cmp
aam
xchg
add
cmp
lods
shll
push
das
fnstsw
mov
sbb
sbb
jns
enter
int
xchg
xor
xchg
mov
jecxz
ds
sahf
cs
xchg
test
add
and
fdivrl
push
adc
scas
xor
adc
fdivrl
push
add
jnp
int3
mov
xor
add
or
addl
mov
pushl
lahf
or
dec
jle
insl
sahf
inc
lcall
jl
add
pop
dec
push
cli
out
xchg
cld
leave
movsb
pop
jle
shll
iret
fs
lea
mov
inc
jae
xchg
icebp
sarl
cmp
in
xorl
mov
imul
push
xor
aam
in
shlb
aaa
movsl
mov
xchg
call
sbb
js
dec
mov
popa
jne
and
sbb
jae
sarb
out
or
lea
ds
and
fdivs
pop
cmp
loopne
jae
jb
cmp
cmp
lds
imul
test
pminub
push
iret
inc
sub
add
icebp
or
loope
ds
xchg
lret
push
or
leave
call
cmp
lcall
sbb
adc
fsubrl
push
mov
mov
jge
adc
fcmovb
pop
icebp
pusha
push
sbb
repnz
gs
addr16
sub
inc
rol
int3
outsl
mov
adc
aaa
dec
outsl
xchg
cmp
cltd
pop
push
imul
jle
fists
loope
imul
mov
in
shrl
cwtl
or
es
or
jecxz
add
loop
fildl
or
sbb
or
push
mov
sbb
push
inc
rorb
dec
dec
aaa
jle
ret
or
jo
dec
and
pop
add
out
sbb
movsb
inc
dec
fistl
jno
lds
inc
sub
xorl
and
cld
js
xor
outsb
leave
arpl
je
pop
fdivs
aaa
sub
jecxz
sar
mov
out
mov
imul
test
adc
or
loopne
sub
int3
loope
and
push
cmc
aas
fdivl
mov
repz
xor
ret
inc
dec
hlt
cld
xchg
iret
mov
in
lret
nop
stos
dec
aas
movsl
mov
and
mov
fcmove
aam
sti
jmp
add
cmc
sbb
pop
mov
popa
or
in
or
icebp
mov
je
pop
popf
call
pop
mov
mov
sbb
jo
mov
cmp
xchg
mov
aad
ficoms
push
mov
rolb
push
ds
js
enter
push
cmp
fwait
sbb
xchg
xor
jbe
je
xchg
mov
dec
jg
js
aaa
adc
push
outsb
push
jnp
adc
sub
aas
movsl
mov
pushf
jne
xor
stc
rol
jnp
mov
mov
push
xor
sbb
cmp
push
jp
cmp
in
fsubs
cmpsl
gs
and
neg
push
inc
jnp
insb
in
imul
fistpl
movsl
cmpsb
push
adc
call
xor
leave
aam
enter
xchg
push
push
sbb
inc
seto
xlat
xadd
push
pusha
cltd
sbb
add
je
loopne
stc
fisubs
fwait
in
addb
mov
mov
fwait
ja
dec
stos
or
xchg
xchg
hlt
push
cwtl
cmp
jbe
xchg
or
jb
cltd
mov
xor
mov
in
lock
nop
pop
movsl
lret
inc
subb
ljmp
ds
xchg
push
inc
lods
sub
sbb
mov
sbb
mov
icebp
out
xchg
sarl
in
mov
sbb
and
jae
push
push
or
stos
std
dec
shlb
je
clc
xchg
clc
jg
in
sub
mov
sub
or
rorl
jge
hlt
mov
repnz
or
xorl
out
add
dec
mov
out
pop
fsubr
andl
cmp
cmp
xchg
das
test
pop
or
jge
adc
sahf
pop
and
aas
push
mov
je
cmp
fldl
icebp
mov
repnz
lcall
fldl
sbb
cmpsl
insb
mov
fstpt
int3
adc
add
add
mov
jl
push
dec
xor
cmp
jl
dec
sbb
js
sbb
jg
test
fucomip
shrl
xchg
out
sbb
ror
xchg
push
js
das
xor
push
repnz
stos
fsts
in
loopne
scas
pop
jge
orb
jp
jnp
das
scas
clc
std
in
mov
cmpsl
sbb
xlat
lock
jns
pop
gs
pop
mov
or
hlt
imul
cwtl
xor
dec
jne
outsb
cmpb
cmp
data16
shrb
gs
ss
cmc
and
ja
jae
sub
aas
popa
xchg
cmp
hlt
xor
aam
fadds
mov
dec
cld
dec
sbb
cltd
sub
xchg
jae
jmp
add
jge
and
add
fdivrl
icebp
gs
xor
mov
add
in
test
push
leave
popf
lcall
and
xchg
jns
xchg
fists
fsubrl
push
or
push
mov
cmpsl
pop
hlt
jmp
dec
imul
cmp
cltd
or
scas
cli
mov
mov
sbb
push
movsl
inc
loope
mov
mov
pop
pop
mov
nop
jg
not
lods
or
mov
jecxz
mov
movsl
jo
xlat
add
ljmp
ret
adc
fs
fldpi
fdiv
clc
nop
or
bound
and
mov
xor
dec
jns
cmp
add
xchg
xchg
sahf
cmpsb
dec
xchg
add
movsb
push
je
mov
push
movsb
cmova
push
rorl
xor
xchg
inc
mov
iret
xor
adc
dec
mov
es
adcl
xor
shlb
lcall
movsl
inc
push
cmpsb
out
adc
cltd
je
push
out
pop
sbbl
mov
leave
ljmp
xor
neg
sbb
push
mov
fsubrl
cmpsb
cmpsl
mov
dec
push
push
and
mov
in
cmpsl
jne
sbb
gs
xlat
dec
es
clc
bound
xchg
lds
pop
mov
mov
inc
xor
ja
mov
in
sbb
ljmp
adc
rol
bound
sbb
popa
cmp
sub
sbb
sub
or
or
and
sbb
xchg
push
repnz
pop
inc
leave
mov
inc
ret
lret
lret
or
dec
push
jbe
fcmove
out
mov
stos
mov
fsubrs
mov
aaa
and
loop
ret
fldcw
or
clc
xchg
xchg
shlb
bound
cs
cli
mov
dec
clc
mov
cltd
inc
xrelease
addr16
rolb
inc
std
mov
xchg
mov
inc
fisttpl
cmp
push
sarb
cmp
js
test
test
out
mov
xchg
out
xor
jbe
inc
loop
pop
xlat
push
mov
ljmp
and
dec
or
clc
insl
dec
enter
pop
sub
or
pop
pushf
dec
pop
inc
add
pop
stos
mov
inc
ljmp
pop
fs
mov
inc
adc
inc
aad
dec
sub
iret
add
out
pop
lea
cltd
push
insl
outsb
cmpsl
jmp
push
add
mov
pushf
popa
sbb
divb
lods
jecxz
ja
or
arpl
nop
jnp
xor
stos
adc
outsl
je
cmp
lds
aad
mov
ljmp
add
addr16
mov
fwait
call
int
add
add
mov
cmp
xchg
mov
pop
iret
insb
test
das
stos
cmpl
std
mov
jmp
pop
xchg
loope
sbb
addl
cmp
or
push
fldenv
lods
mov
push
pop
jp
jg
inc
lret
stos
xchg
inc
aam
and
mov
int
cli
push
enter
inc
jl
adc
inc
mov
mov
fs
int
fimuls
push
bound
call
sub
push
jge
push
cmc
cmpsb
xor
xlat
daa
fisubl
mov
mov
loope
out
arpl
inc
push
mov
into
cmc
mov
movzbl
jp
jecxz
pop
push
xor
mov
push
imul
jb
fcomps
sub
xor
popf
add
mov
daa
aad
pop
add
stc
jnp
into
ret
jg
cmp
icebp
pop
jnp
cld
js
or
scas
inc
jnp
jno
adc
mov
lods
addr16
xchg
sbb
inc
push
aam
push
push
iret
testl
push
xchg
dec
clc
hlt
popf
mov
stc
push
aam
xchg
and
les
inc
sbb
rclb
adcl
cmc
mov
pushl
cmpsb
leave
stc
cmp
inc
mulb
rcll
inc
lea
jnp
je
dec
or
push
mov
ja
sub
into
out
mov
test
adc
mov
or
fcomps
imul
fnsave
mov
subb
sti
mov
or
andb
push
or
in
rolb
clc
mov
movl
inc
out
or
repnz
inc
sub
mov
iret
pop
jmp
lret
mov
inc
pop
mov
hlt
xor
sub
daa
scas
adc
lods
inc
rcl
ret
test
sbb
pop
testl
xor
movsl
cmp
ficomps
ja
pop
rorl
lahf
mov
add
pop
popa
mov
add
push
pusha
xor
fisttpl
xchg
push
push
lcall
mov
push
in
pop
mov
not
pop
inc
imul
in
imul
xchg
pop
cmp
adc
pusha
repnz
xor
jle
insl
shll
sub
aaa
les
push
inc
pusha
sub
push
inc
stos
test
add
jo
xorl
fucompp
mov
rorl
pop
ret
pop
inc
les
addb
in
mov
xchg
popa
jo
sub
lea
dec
pop
sti
push
pop
std
rorl
imul
or
mov
mov
add
inc
mov
in
cmpsb
lods
ret
pop
lock
sub
adc
jno
mov
push
pop
xchg
aam
jno
out
cli
push
sbb
pop
loopne
and
and
stos
dec
into
adc
into
fsub
call
sub
loop
cmp
cmp
std
pushf
nop
mov
xchg
dec
jbe
lea
push
ds
int
repnz
mov
test
adc
mov
dec
xor
sbb
or
out
into
ljmp
nop
lret
sub
fs
push
or
loop
subl
sbb
ja
js
pop
jae
in
lret
sbb
mov
inc
aaa
enter
jp
sub
dec
cmp
aad
mov
push
push
pushfw
aas
push
inc
rorl
inc
insl
push
das
int3
cltd
mov
jmp
or
adc
push
jle
out
add
mov
mov
pop
jns
push
jbe
pop
testl
out
cs
lret
je
push
test
or
or
mov
test
xchg
adc
pushf
fstpt
fdivrl
mov
jmp
push
adc
mov
test
or
fcoms
push
rcr
mov
add
lret
cli
adc
push
lret
xor
pop
enter
mov
jge
xor
dec
jbe
and
out
jnp
mov
dec
or
stos
arpl
lock
add
inc
rcrb
mov
mov
and
xor
adc
ss
dec
pop
leave
pop
loopne
add
and
roll
and
popa
cli
inc
das
loop
or
cmp
pop
mov
jmp
or
outsb
stc
push
aas
shrb
clc
in
inc
jbe
loope
outsb
sbb
push
jmp
mov
pop
subl
inc
inc
mov
dec
jp
imul
adc
inc
sbb
adc
es
mov
addr16
xchg
push
insb
es
test
pop
fsubrs
adc
aad
iret
sti
std
lock
in
fildl
js
jbe
and
or
xor
fcoms
leave
cmpl
cld
adc
addr16
push
xchg
cmp
pop
insb
sahf
inc
add
xchg
fwait
pop
pop
xchg
fsubs
jns
pop
cmp
mov
mov
add
repnz
add
add
js
in
mov
dec
ficompl
stos
jmp
add
mov
sbbl
shlb
lcall
inc
jecxz
bnd
mov
xor
push
adc
xchg
call
aas
inc
mov
mov
jmp
inc
dec
mov
movsb
xchg
repnz
popa
jg
mov
sub
mov
xlat
or
std
sbb
xchg
mov
notl
jmp
cmp
bound
jno
outsb
imull
arpl
push
imul
xor
imul
jle
push
jo
mov
or
lret
mov
popa
fstpl
sub
fcompl
gs
scas
rol
test
sbb
push
pusha
sbb
mov
pop
mov
dec
lahf
hlt
sbb
cltd
testl
dec
dec
mov
jb
cltd
in
jae
fisttpl
insl
lahf
push
bound
fnstenv
loopne
rcr
sub
les
aas
movsb
cmpsl
mov
mov
mov
sbb
fdivl
mov
mov
inc
push
mov
cwtl
and
loop
mov
jbe
mov
iret
adc
aad
dec
or
dec
inc
mov
xchg
stos
jo
clc
xor
mov
push
fdivl
or
xor
ljmp
jae
roll
pop
jle
mov
mov
das
das
lcall
adc
sub
into
push
je
outsb
xchg
adc
addr16
mov
lcall
aad
and
mov
or
xor
push
cltd
add
in
outsl
loopne
orl
and
and
rcrl
xchg
and
divb
mov
adc
mov
push
pop
cli
icebp
push
lods
out
mov
mov
lret
mov
incb
sbb
xchg
test
adc
adc
lcall
mov
jne
xor
or
push
cmp
pop
test
sub
aas
stos
mov
xor
mov
adc
sarb
enter
push
mov
lods
or
stc
sub
int3
mov
fsubl
int3
inc
sahf
cmp
sbbb
mov
jno
mov
mov
stos
push
cld
or
movsb
inc
iret
shll
sub
sbb
cwtl
fadds
and
aam
jle
inc
pop
xchg
scas
cmp
ret
pop
mov
mov
pop
out
inc
push
cmpsl
jns
mov
mov
pusha
aas
xor
insb
je
sub
push
jne
pop
cs
lods
movsb
xchg
rorl
pop
mov
cltd
xchg
imul
jle
add
pop
jo
add
inc
sbb
bound
lret
cmp
pop
inc
stos
cmp
cmpb
ss
xchg
jl
mov
push
push
jge
ljmp
and
hlt
aas
cltd
fsub
icebp
pop
or
lcall
lcall
xor
and
mov
or
lahf
outsl
inc
mov
fisubrl
roll
pop
aam
rclb
cld
xor
and
cli
cmpb
sub
inc
sti
mov
jo
jmp
lods
xchg
movsb
jge
jnp
icebp
mov
mov
or
pop
jbe
mov
mov
stos
or
arpl
jae
cmpb
sbb
xchg
imul
mov
int3
movsb
shr
push
jne
lahf
sub
jg
jp
gs
pop
fucomip
loop,pn
sbb
jno
inc
sbb
add
stos
or
scas
int
cmpb
sub
repz
inc
sub
and
nop
adc
mov
cs
inc
adc
loope
inc
mov
mov
nop
lea
clc
mov
ss
add
inc
clc
cmp
popf
imul
push
xchg
push
mov
jge
popf
lock
dec
or
aas
es
or
adc
xor
imul
jne
cli
adc
daa
lret
out
add
pop
cltd
fbld
das
fcmovnu
int
orl
cs
mov
lea
stos
ss
push
addr16
fbld
mov
cmc
inc
cmp
xchg
cltd
xlat
add
inc
ljmp
mov
lods
fimuls
fisubrl
movsb
scas
daa
jmp
stos
xchg
cmpsb
push
insb
xchg
sub
gs
and
es
leave
mov
dec
movsl
and
mov
iret
xchg
mov
xor
xchg
and
cs
dec
jnp
push
lock
mov
push
loop
jl
adc
jns
xor
mov
dec
mov
push
mov
orl
adc
adc
or
jne
in
sti
aam
or
lock
mov
sub
sti
ljmp
pusha
std
sbb
out
add
adc
cmpsl
mov
addb
jmp
cltd
fsubr
xor
into
test
int
enter
outsb
vhsubpd
push
test
ljmp
popf
dec
out
insb
mov
nop
loop
mov
outsb
mov
push
lahf
mov
ret
jbe
fiadds
jle
mov
ss
mov
aaa
das
sub
jecxz
inc
insl
push
lods
mov
nop
mov
aas
xchg
mov
out
xor
in
xchg
lret
jae
mov
adc
out
adc
mov
bound
aad
cmpsb
pop
mov
fstpl
mov
in
jnp
cmp
pop
daa
cmp
sbb
sub
cmp
xchg
test
movsl
into
jb
mov
jns
sub
xor
jmp
push
frstor
enter
sub
cmp
mov
ret
xor
mov
cmp
jl
or
jl
imul
loop
mov
ja
cltd
dec
sbb
daa
ficoms
inc
lcall
icebp
add
cmc
jno
bound
jns
imul
and
push
push
das
cmp
into
dec
out
mov
into
les
in
into
gs
sub
jg
sbb
mov
jl
imulb
push
inc
or
aam
or
mov
jle
pusha
leave
into
mov
pop
mov
jnp
outsb
dec
xchg
push
es
repnz
rolb
scas
arpl
push
sti
cmp
pop
mov
sahf
test
adc
jl
inc
and
rcl
cmpb
in
sbb
pop
int3
pop
pop
addr16
sbb
push
in
push
sbb
inc
push
hlt
lods
int
in
mov
ss
push
xor
adc
jne
jbe
fs
push
ljmp
and
nop
jle
adc
push
enter
dec
mov
pop
and
mov
mov
and
jl
xor
or
pop
pop
or
addr16
xor
mov
lea
int3
push
dec
fs
dec
sbb
or
push
inc
repnz
aad
lea
cmc
mov
mov
pushf
dec
filds
mov
js
mov
mov
jge
dec
mov
sub
mov
sti
adc
hlt
fstps
cmpsl
popa
jae
icebp
mov
mov
enter
es
js
xchg
inc
sahf
xchg
xchg
pop
lahf
push
push
ret
pop
movsl
insl
int3
inc
xor
and
enter
into
mov
cli
sub
int
jmp
jecxz
jb
and
ret
jecxz
sbb
dec
inc
ret
ffreep
jecxz
aam
rorb
ret
bnd
jle
aaa
imull
cli
mov
xor
adc
push
push
xchg
mov
sar
inc
push
push
dec
xchg
rcrl
xchg
push
fcoms
lods
repnz
sbb
dec
dec
or
pop
mov
imul
out
and
xchg
lods
in
shll
pop
call
jae
add
lahf
int
hlt
inc
cmpsl
mov
mov
cli
daa
loopne
jo
call
adc
push
nop
push
inc
nop
mov
pop
cwtl
nop
scas
mov
dec
mov
lods
xchg
outsb
or
cmp
fwait
or
mov
inc
jno
jmp
cmp
loope
sub
push
pop
jnp
xchg
jmp
fisubl
push
dec
icebp
and
insb
aad
or
mov
adc
out
imul
jns
fiaddl
pop
ss
cli
push
int
iret
test
fnsave
cs
pop
clc
or
push
sarl
add
dec
es
movsl
pop
in
mov
sub
xor
gs
push
xor
fwait
lock
inc
stos
aam
inc
out
jp
or
cld
and
repnz
mov
jnp
hlt
sub
mov
xlat
jmp
movsb
mov
jecxz
sahf
mov
xor
push
and
ficoms
in
adc
bound
xor
pop
stc
sub
addl
or
lahf
jno
adc
frstor
mov
add
mov
push
popa
pop
mov
fildl
push
loop
cmp
int3
dec
leave
push
dec
cwtl
sub
cld
mov
dec
sbb
pop
lahf
mov
add
nop
pushf
mov
test
js
imul
add
popf
adc
popa
add
hlt
fstpt
mov
test
out
shll
sarb
add
jnp
das
sbb
sbbl
xchg
cmc
das
in
xor
fcmovne
mov
jnp
aam
repz
push
loopne
enter
repz
add
jae
das
popa
mov
and
xchg
xchg
sub
sub
stos
dec
repz
sahf
add
pop
or
gs
dec
pop
lods
push
lahf
jp
mov
es
lods
or
daa
leave
in
imul
fldl
xchg
rcll
hlt
mov
ficoms
jge
or
pop
iret
repz
inc
pop
aad
add
jnp
stos
pop
insb
cmp
inc
les
out
sbbb
push
xor
out
filds
xor
jle
jg
mov
push
mov
pop
lock
out
hlt
int3
mov
mov
xor
inc
enter
out
std
xlat
and
fiaddl
ds
pop
fsubs
pop
xchg
push
push
out
adc
addb
fmull
xchg
xchg
adc
outsb
enter
gs
fisubrs
mov
into
cmp
mov
mov
fwait
ret
iret
xchg
pop
mov
mov
pop
stos
insb
arpl
adc
movsl
leave
inc
cmc
sbb
ljmp
movsb
das
int3
sbb
loop
mov
lock
mov
lahf
nop
mov
lock
fistps
and
test
out
xchg
mov
out
mov
sahf
jle
and
testl
jo
fs
sbb
stc
push
push
test
and
test
or
jmp
add
adc
jo
test
out
mov
xchg
push
cld
sbb
lods
xlat
jmp
pop
push
jns
int
or
enter
icebp
cmp
sbb
push
push
pusha
xlat
mov
jo
sbbb
int3
pop
pop
stos
popa
cmp
and
in
div
jo
or
sub
jnp
add
sub
xchg
jbe
pop
ljmp
ret
int3
fs
pop
rcll
xor
out
popa
dec
pop
popf
sahf
pop
mov
push
mov
enter
in
out
mov
adc
roll
or
cmp
fxch
fdivrs
mov
mov
cwtl
pusha
imul
push
pop
xchg
mov
bound
aam
in
cmc
mov
push
fstpt
push
pop
iret
sar
test
jmp
faddl
lcall
push
xchg
ja
adc
jbe
xchg
addr16
pusha
insb
or
cmp
int3
sub
sbb
push
hlt
mov
cs
clc
inc
mov
push
fmulp
pop
stc
fisubrs
fs
dec
inc
jg
mov
cld
mov
bound
ja
sub
in
cmc
push
cmp
icebp
jo
stc
jne
pop
repnz
into
push
inc
sahf
cld
adc
sti
imul
jo
adc
dec
fnstenv
or
or
and
pop
push
scas
and
lret
pop
mov
mov
addb
dec
inc
lret
aam
lods
movsb
push
or
daa
jp
stc
dec
shll
fwait
mov
mov
push
add
push
cmp
adc
push
mov
dec
jg
cmp
jg
xor
inc
bound
hlt
aaa
mov
pop
mov
add
sub
sub
fwait
inc
inc
inc
out
push
addr16
movsb
je
test
xchg
movsb
js
repnz
push
push
or
add
jae
mov
cwtl
ss
jle
movsl
xor
in
mov
sub
insb
mov
mov
mov
mov
mov
aas
ljmp
inc
pop
jo
test
int
xor
jp
pushf
xorl
aam
xchg
stos
sbb
jg
aaa
ss
out
fmull
add
mov
cmpsb
int3
enter
gs
lret
icebp
mov
dec
mov
mov
and
xchg
jp
mov
push
xlat
adcb
sti
out
arpl
cmpsl
jp
or
dec
xor
out
push
clc
mov
ja
sbb
out
scas
scas
fsts
cltd
decb
lods
pop
push
inc
pop
or
repz
dec
out
cmp
insb
jle
rorb
pop
repz
adc
xor
sbb
dec
outsb
subb
cmp
mov
cmp
jl
fstl
andl
jno
sahf
xchg
test
mov
imul
pop
push
sub
lods
loopne
xor
push
out
stos
outsb
lret
mov
fistpl
fadd
testb
cmp
dec
jecxz
push
fiaddl
jb
scas
out
movsb
dec
pop
xchg
imul
xchg
mov
dec
aam
fwait
adc
lea
out
imul
leave
xor
vpunpckhdq
pop
mov
arpl
xor
cmp
dec
dec
pop
sbb
dec
pop
aad
xchg
add
lret
in
iret
sbb
add
dec
jne
pop
mov
mov
push
push
mov
outsl
cmp
push
in
jne
pop
aas
jne
imul
fcoms
xlat
inc
push
sahf
pop
adc
sbb
shr
xchg
sub
jmp
out
shlb
pop
and
inc
sbb
and
or
int
fcompl
sbb
fs
cmp
pop
xor
pusha
mov
mov
adc
mov
mov
daa
mov
mov
dec
dec
daa
xlat
stos
fwait
dec
loop
adc
movsb
sub
clc
in
in
push
cli
lcall
xchg
ljmp
push
lock
mov
cmpsl
inc
adc
pop
scas
daa
cmp
adc
cmp
xchg
pop
mov
int3
int
notl
and
jne
es
jnp
push
dec
pop
mov
jne
outsl
inc
dec
cwtl
aaa
xor
sbb
mov
hlt
ds
in
cmp
mov
pop
call
insl
and
adc
shrb
or
add
inc
dec
fs
mov
sbb
mov
dec
or
jge
adc
cmc
sub
push
jge
fbld
icebp
mov
mov
pop
jne
xchg
jge
push
lea
icebp
jbe
xchg
mov
and
push
mov
shlb
lea
into
out
dec
cmpsl
jmp
inc
lock
dec
addr16
dec
ja
std
add
add
repz
add
test
mov
arpl
sub
std
xor
jmp
mov
mov
mov
sbb
push
inc
mov
insl
flds
in
ja
inc
pop
int3
incb
int
imul
arpl
or
xor
jbe
sbbb
jp
xchg
insb
jge
aas
in
jb
xchg
sub
dec
stc
addr16
mov
jecxz
lods
push
into
xor
stos
and
sub
mov
fnstenv
mov
lods
xchg
int
lods
mov
loope
hlt
sub
arpl
xchg
xor
in
and
sti
lea
dec
push
jnp
dec
jb
xchg
mov
xchg
fisubrs
lret
cwtl
gs
adc
outsb
or
mov
hlt
pop
xor
sub
arpl
mov
in
aaa
je
cs
out
sub
insb
and
popa
sahf
sbb
dec
push
sbbl
sbb
test
mov
and
sub
mov
pop
ss
mov
adc
xchg
insl
stc
lahf
cmpsl
cmpsb
pop
jle
mov
enter
repz
add
mov
push
add
push
or
int3
loop
jns
sbb
dec
mov
xchg
inc
test
andb
pop
cmp
sbb
push
or
sbb
rcrb
sahf
sub
into
fs
popf
stos
loopne
xchg
or
in
ja
lods
cmp
adc
mov
lods
push
movsl
aam
addl
popf
xchg
out
repz
cmpsb
sti
addr16
mov
push
push
iret
mov
push
jno
stos
adc
loop
ljmp
aad
cmpsb
movsb
xor
push
jmp
test
or
repz
ds
fstpt
cmp
fisubl
jnp
repnz
jno
fisttpll
xor
iret
into
pushf
aaa
iret
or
xchg
and
cmp
in
adc
inc
push
test
mov
inc
xorl
ret
mul
push
xor
sbb
xchg
jns
lret
pop
fsubs
push
sbb
push
gs
xor
in
push
scas
shr
xor
or
pop
mov
add
cmpl
movsl
xor
xchg
jo
inc
dec
mov
push
xchg
sub
mov
cmovnp
mov
cmp
xor
shll
mov
lds
sub
xor
test
adc
mov
mov
push
mov
aam
cwtl
ja
xchg
fdivs
scas
add
lcall
lods
jge
dec
roll
mov
push
sbb
andl
std
push
inc
add
pop
inc
fdivrl
in
and
stos
arpl
sbbl
lret
adcb
repnz
jae
mov
in
loopne
push
mov
mov
addr16
out
fidivs
mov
stc
mov
pop
push
push
ret
pop
jae
roll
mov
out
add
cmp
inc
andb
test
lret
fmuls
icebp
scas
out
fldcw
add
mov
or
movsl
into
loope
ds
popf
inc
out
push
fld1
cltd
fmul
cmp
mov
lahf
ljmp
pop
jmp
ret
mov
mov
sti
mov
outsb
je
jl
stc
cld
daa
sti
dec
cld
rcl
repnz
xchg
dec
les
push
jge
push
mov
pop
dec
push
sub
jns
xchg
into
dec
enter
mov
cmp
jnp,pn
pop
jns
inc
lahf
aaa
adc
xchg
aas
cs
fdivl
mov
mov
es
mov
enter
xchg
out
dec
hlt
adc
add
or
xor
clc
clc
adc
sbb
xor
dec
adc
and
dec
mov
xor
mov
insb
inc
test
in
ret
fstps
cmp
mov
out
shlb
js
repz
xor
pop
pop
sarl
jns
dec
cmpsl
ret
fmul
fistl
pop
int3
andl
enter
mov
mov
call
inc
adc
sbb
psraw
aas
mov
jns
and
adc
cmp
xchg
inc
movsl
mov
cwtl
jb
repz
in
leave
leave
orl
cmp
clc
adc
xor
push
xchg
mov
test
addl
push
leave
ss
xchg
add
mov
mov
add
shlb
cmp
pop
sbb
jecxz
pop
aas
shrl
ja
fstps
ljmp
inc
lret
mov
shr
sbb
cmpsb
push
ds
jge
jmp
mov
lods
or
adc
jl
enter
sbb
mov
inc
xorl
mov
fcoml
and
push
pusha
jg
inc
jp
xchg
imull
cmp
fwait
out
pop
outsb
jg
repz
imul
stos
jecxz
jmp
cmpsl
inc
je
test
mov
xlat
sub
add
xor
mov
mov
scas
insl
xor
push
adc
mov
in
pop
js
into
xchg
sti
or
js
mov
dec
add
ret
addr16
cmpsb
loop
push
push
ds
lahf
xchg
xchg
stos
inc
adc
xor
pop
cmpsl
std
push
scas
loopne
pop
pusha
mov
faddp
les
mov
lret
mov
outsb
xor
push
cmp
loope
mov
imul
add
loopne
mov
or
xchg
mov
cmc
sub
lret
inc
aaa
insb
jno
or
sub
jecxz
movsl
mov
js
mul
or
and
or
pushf
scas
fldl
mov
imul
xchg
mov
insl
pop
jl
inc
bound
xchg
out
inc
hlt
ss
lret
fiaddl
pop
cmp
pop
fs
jo
arpl
and
push
js
fists
shl
add
test
xchg
xor
push
movsl
push
jle
dec
push
mov
sub
pop
add
or
dec
jb
cmove
js
mov
jg
xchg
push
into
sub
jle
and
insl
pop
sbb
imul
fldcw
and
mov
sbb
cs
push
xchg
adc
adc
ss
pusha
adc
add
xchg
cs
sbb
imul
jp
xor
sahf
fisttpll
xlat
fwait
inc
mov
into
shlb
inc
pop
inc
cmp
fimuls
jne
enter
dec
sbb
dec
cmp
ljmp
fs
test
popf
mov
pusha
jmp
fistl
inc
stc
xchg
mov
dec
lret
les
ds
mov
and
mov
std
pop
xlat
sbb
fistps
mov
lcall
imul
xchg
cs
adc
xchg
popf
inc
out
or
in
repz
inc
add
rcl
iret
fiaddl
cmpsl
or
mov
sahf
lahf
aaa
and
cli
sbb
xor
out
xor
or
stc
aas
dec
xchg
jmp
js
and
fildl
es
xor
add
imulb
out
loop
mov
sarb
js
rol
mov
add
add
jbe
jo
sbb
sahf
scas
dec
add
jmp
jne
rol
shlb
cmp
cmp
cmp
push
push
and
inc
test
sub
push
data16
xor
and
jns
jno
and
movsb
push
mov
mov
fs
and
out
mov
pop
mov
clc
loopne
out
fisttpll
lock
dec
xorl
xor
adc
mov
sbb
rcll
jl
repz
dec
dec
testb
lea
push
bound
xchg
pop
idiv
test
mov
cmp
adc
pop
mov
jbe
cmp
mov
mov
fmulp
jle
inc
cmpl
ret
out
mov
shrl
ds
inc
pushf
jb
daa
xchg
adc
movsl
push
aam
hlt
cmp
loop
mov
js
mov
cld
pop
icebp
test
mov
inc
jl
fidivs
adc
and
lods
dec
cmp
out
push
pop
xor
sub
pusha
sarl
dec
nop
dec
inc
lcall
inc
xchg
add
dec
popf
push
xchg
mov
mov
sub
push
mov
mov
sbb
jno
dec
nop
push
test
mov
sub
xor
cmc
push
stos
xchg
jmp
cmp
repz
mov
sbb
test
sbb
or
out
push
inc
outsb
lds
jmp
das
dec
push
imul
adc
loop
cltd
pop
std
push
jo
inc
jnp
into
nop
ljmp
popa
pop
minps
or
iret
lock
fxch
mov
or
clc
cmp
pop
mov
push
sbb
mov
sbb
ljmp
outsb
imul
jecxz
dec
dec
mov
lods
mov
cmp
dec
es
add
fs
daa
or
outsl
add
subb
inc
jo
test
xchg
scas
xchg
mov
fstpl
rol
sarl
pop
pop
xchg
loopne
pop
rorl
push
xchg
adcl
popf
in
mov
aaa
jge
into
repz
dec
mov
inc
mov
cli
into
xchg
into
inc
dec
sbb
outsb
mov
jle
add
sbb
loope
stos
pop
ficomps
loop
sarl
enter
mov
lea
in
push
int
add
sbb
ror
cmp
stos
jne
call
subl
or
mov
push
and
popa
mov
xchg
insl
dec
cld
pop
jp
push
adc
inc
mov
jge
flds
cltd
xor
dec
cld
cmp
jecxz
and
mov
xchg
fcomi
sub
outsb
iret
mov
mov
call
add
stc
sub
inc
hlt
sub
mov
mov
testl
testb
or
ds
es
add
mov
cs
xor
add
repnz
and
orl
inc
mov
mov
inc
insb
int
sub
lret
mov
adc
ficompl
pop
rcrb
dec
int3
dec
mov
mov
push
pop
test
inc
icebp
push
into
fbstp
adc
ja
adc
push
cmp
repz
lahf
and
cmp
xchg
pop
mov
push
jmp
das
loop
loopne
xor
mov
out
jne
repz
cmp
ljmp
jmp
cltd
out
dec
dec
mov
add
cmpsl
add
push
jp
lods
push
add
loope
fdivs
push
popa
adcl
in
mov
ds
rcl
ret
js
les
jns
xor
push
xchg
and
xor
lods
jnp
and
jg
pusha
pop
lock
sub
and
xchg
and
fdiv
dec
or
and
pushf
daa
push
hlt
aam
fstl
inc
add
mov
add
cmp
mov
lcall
sbb
mov
in
add
lock
test
cmc
xlat
nop
mov
add
ret
xchg
mov
cmpsb
out
cltd
bound
in
cmc
fildll
xor
add
or
ja
repnz
mov
or
xchg
pop
hlt
lods
xorl
inc
ret
int3
outsl
xor
and
aad
dec
test
adc
in
xchg
xchg
xchg
imul
mov
push
daa
mov
lods
daa
enter
cmp
iret
scas
insl
push
lods
je
cmp
lahf
jnp
fldt
or
mov
gs
sbb
lret
jno
test
mov
lret
dec
test
jb
xlat
sbb
push
sahf
jecxz
repnz
out
mov
popf
dec
mov
inc
js
popa
and
stos
jae
cmp
lock
mov
pop
xlat
pop
push
jne
aas
js
push
mov
in
addr16
push
or
stos
stc
sbb
test
movsb
insl
pop
lds
mov
dec
dec
into
pop
cmpsl
push
icebp
or
arpl
cltd
daa
dec
push
lods
fdivr
jp
leave
pusha
or
shlb
cmc
mov
add
lea
inc
push
notb
sub
mov
pop
in
out
jno
sub
in
das
push
mov
mov
add
stos
mov
fistl
scas
xchg
pop
add
ds
test
and
mov
aas
jns
addl
add
popf
and
inc
loopne
mov
out
fwait
pop
xchg
leave
dec
bound
mov
insb
xchg
les
aad
sbb
pop
mov
imul
dec
xor
aad
adcb
adc
scas
and
xchg
je
fadds
imul
test
sub
in
cmovns
jbe
pop
cmp
lcall
dec
lock
in
mov
scas
popf
jecxz
lods
xchg
ror
add
xchg
gs
sub
pop
cs
xchg
pop
xor
js
aaa
mov
dec
adc
mov
mov
insl
inc
out
xor
std
or
cvtpi2ps
stos
testl
add
sub
add
pop
push
incb
adc
cmp
int3
inc
pop
adc
dec
cmc
mov
sbb
or
leave
sbb
sbbl
xor
andl
jmp
arpl
push
xchg
add
negb
clc
sbb
stos
sbb
or
rolb
cli
dec
mov
out
sbb
mov
add
sbb
xchg
mov
jle
jl
out
jmp
rcr
pop
xor
inc
jo
jp
or
dec
xchg
sub
in
jne
mov
lcall
mov
mov
cmp
les
fstp
pop
xor
lds
rorl
inc
imul
add
movsb
mov
fnsave
push
jge
pop
inc
xor
pop
pushf
aaa
cmpsb
rcll
add
or
mov
cmp
pop
cmpsb
orl
inc
outsb
sub
aam
dec
in
call
xlat
fwait
lret
incb
cmpb
and
es
lret
xadd
dec
lahf
scas
insl
notl
fcompl
xchg
mov
movsl
or
xor
sub
ljmp
sub
sub
sub
cmp
xor
jne,pt
pop
mov
inc
clc
lahf
enter
in
mov
jno
je
push
and
pop
inc
cmp
cmc
push
sbb
pop
push
std
push
testl
jp
leave
aad
jo
add
cmpsl
inc
int3
xchg
mov
push
test
add
sub
and
fcompl
out
and
mov
or
psraw
inc
mov
push
insl
shll
lret
addr16
dec
ds
jno
jmp
movsl
jecxz
pop
cmp
push
xor
subl
dec
lds
arpl
mov
xchg
stos
inc
popf
adc
mov
or
or
push
js
shrb
push
scas
and
aad
ds
call
cltd
mov
sbb
jbe
xchg
ret
add
add
shrl
cs
xchg
or
sbb
inc
data16
mov
test
sti
shld
test
adc
xchg
xor
inc
fistps
pushf
adc
jne
outsl
pusha
mov
inc
inc
or
mov
ja
sbb
lea
lcall
mov
leave
lds
add
push
cmc
pop
fidivl
push
leave
add
fwait
xor
mov
fdivrl
call
fbld
mov
je
sbb
pop
fucomp
dec
movsb
mov
adc
xor
or
in
int
shlb
push
cmp
cmc
xor
aad
in
cwtl
pop
jno
mov
mov
or
iret
aas
xor
push
out
dec
pop
shr
and
adc
sbb
cmpl
push
addr16
adc
sbbl
xchg
arpl
xor
jmp
jbe
and
call
jbe
fbld
xchg
hlt
cli
xor
cmp
push
shrl
mov
gs
mov
jns
pusha
in
roll
xchg
adc
or
adcl
imul
inc
push
shrb
xor
mov
fldl
mov
out
cmpsl
pop
fnstenv
es
push
pop
cmc
stos
push
sbb
dec
fsubrs
rep
lods
popa
stos
mov
and
pop
mov
cmc
xor
adc
push
leave
mov
orb
jp
loop
mov
pop
inc
xchg
push
xchg
lods
mov
addr16
jge
push
add
pop
hlt
cmp
push
sbb
dec
and
pop
lods
mov
dec
mov
mov
pop
jle
add
imul
ret
add
xchg
test
pop
jno
dec
shl
and
imul
fwait
inc
xor
sbb
mov
xchg
dec
mov
push
dec
mov
scas
in
xor
mov
mov
in
pop
cmp
insl
or
inc
jns
cmp
inc
push
pop
daa
xor
test
popa
sar
jmp
enter
in
or
repnz
push
repz
mov
in
mov
and
jno
sbb
xor
je
jmp
xor
dec
rol
je
fsts
ficompl
jge
addr16
insb
pop
out
adcb
cltd
inc
push
stos
inc
ljmp
fists
dec
repz
adc
push
mov
jne
fisttps
lods
outsb
lret
add
sbb
mov
push
sbb
add
roll
fisubl
sar
dec
adc
push
inc
es
dec
pop
xor
cmp
addr16
jmp
cmpsl
sbb
or
lds
int3
popw
daa
aaa
std
lret
ja
mov
mov
or
sbb
cmc
fsqrt
mov
inc
mov
pop
lcall
outsb
or
das
add
sub
push
pop
dec
sbb
jle
lods
jge
outsl
cmpsl
mov
imul
cmp
fs
aaa
mov
data16
cmp
adc
pop
insb
pop
add
cmp
out
rolb
jmp
and
call
ficoml
pop
je
stos
xor
into
pop
add
xchg
mov
setne
inc
dec
xchg
xchg
sahf
adc
in
push
loop
mov
sarb
mov
mov
sub
fisttpl
pop
ds
mov
inc
mov
cmp
ficoml
out
sbbb
sbb
xor
rcll
cmp
test
ljmp
mov
and
push
sub
lret
divb
ljmp
dec
jo
fs
xchg
ret
and
stos
xor
cmp
sub
fdivl
mov
push
xor
xor
add
out
das
pusha
cmpsl
call
roll
test
jle
jge
sbb
mov
push
inc
xchg
out
scas
xlat
mov
xchg
bound
pop
push
and
pop
rol
and
inc
daa
fildl
cs
rep
scas
sbb
inc
jge
sub
jo
movsl
push
adc
dec
push
clc
fisttps
mov
loop
sbb
xor
jb
pop
or
sub
mov
test
cmp
sub
pop
pop
sub
stos
cmpsl
mov
int3
dec
or
mov
addr16
rorb
cmp
xchg
pop
jmp
pop
in
push
movsl
mov
jmp
mov
clc
pop
mov
sub
pop
push
out
mov
mov
rcrl
gs
mov
cmc
dec
xchg
sti
out
xchg
ss
test
insl
fmulp
mov
cltd
ljmp
xchg
push
xchg
aam
dec
mov
fdivr
push
xlat
cltd
fiaddl
mov
or
data16
jo
enter
push
insb
ficoml
imul
movsb
in
sub
divb
mov
mov
sub
and
incl
movsl
hlt
ss
xor
aam
adc
rcrl
ret
lahf
xchg
stos
aas
rcrl
dec
gs
mov
xchg
inc
loop
mov
sbb
shrl
sbb
adc
adc
fstps
mov
fcoms
mov
sbbl
movsl
adc
aam
xor
in
adcb
xorb
xor
dec
test
jge
mov
repnz
das
and
push
clc
xchg
adc
push
jg
fiaddl
jmp
cwtl
das
repnz
ljmp
fisubs
fnstsw
xchg
je
outsl
adc
outsl
cmc
ficoms
cmp
shlb
mov
sahf
mov
adc
add
xor
push
adc
stos
in
lds
or
cmpsb
test
aam
or
pushf
call
roll
push
xorl
push
ss
ficoml
insb
test
aad
push
push
je
mov
mov
mov
push
dec
mov
mov
clc
jmp
jmp
inc
mov
cwtl
xchg
or
aaa
jge
outsl
xor
mov
sahf
mov
outsl
jmp
addr16
testb
push
frstor
add
adc
bnd
pop
jge
jnp
xor
rolb
nop
mov
or
shlb
in
pop
add
push
dec
dec
jmp
push
adc
push
mov
xchg
ja
add
test
hlt
shlb
mov
push
jns
cmp
adc
or
pusha
mov
sbb
stos
xor
dec
and
rep
ret
mov
adc
mov
cs
cwtl
cmp
inc
in
rcl
sbb
add
jnp
and
stos
sbb
fdivrl
call
gs
inc
add
xchg
or
jae
shll
je
je
mov
and
mov
stos
sbb
mov
xchg
cmpsb
fsts
lahf
sbb
cmpsl
cmp
dec
loop
ffreep
lret
add
add
das
add
or
es
mov
xlat
pop
inc
aam
xor
adc
sub
sbb
sar
xchg
ds
or
bound
or
idivb
scas
inc
cmp
inc
imul
addl
lods
inc
or
je
jo
sbb
push
xlat
jmp
add
inc
pop
outsl
shlb
sarl
jo
js
xchg
dec
mov
and
addr16
mov
lock
push
jge
stos
push
pop
push
inc
insl
test
sub
psubb
movsb
popa
sub
pop
imul
repz
push
rcrl
js
ffree
pop
sbb
lahf
pop
test
fstpl
add
test
inc
cmp
jl
and
push
sti
or
mov
aad
pop
add
pop
sbb
popa
iret
mov
imul
push
out
repz
ljmp
and
leave
insl
jmp
icebp
fsts
sahf
add
in
lods
jae
icebp
pop
sbb
addb
inc
repnz
flds
jecxz
lods
jecxz
push
jp
pop
ret
psubb
mov
sub
jmp
push
mov
adc
aas
mov
fs
sbb
jl
jp
cmc
pop
lret
xor
jle
dec
mov
dec
mov
xor
out
and
int
sbb
add
clc
andl
std
shl
xchg
je
mov
adc
jmp
jb
fnstsw
daa
pop
cmp
adc
rolb
xor
movsb
dec
and
sbb
fcomps
jmp
sub
adc
cmp
loope
sbb
fsubr
fistpll
pop
icebp
cld
jge
shll
mov
mov
cltd
push
mov
rorb
lods
sbb
pop
cwtl
leave
inc
movsb
fisttps
pop
adc
stos
clc
je
lods
sarl
call
daa
sbb
test
rcl
add
pop
xor
int
mov
addl
loop
pop
dec
movsb
filds
cli
pop
push
mov
arpl
push
subl
cli
push
dec
xchg
movl
jns
jne
inc
xor
mull
mov
pop
and
ret
icebp
sbb
ja
repnz
inc
pop
lock
sbb
iret
dec
imul
aad
ret
daa
add
pusha
push
adc
push
aas
mov
xor
pop
xchg
dec
lock
clc
scas
dec
inc
cs
mov
jge
dec
std
sub
pop
cmc
dec
jb
int
test
dec
jnp
inc
scas
inc
cs
push
stos
stos
cld
xchg
inc
hlt
ficomps
fnstenv
or
shrl
pop
fstl
mov
int3
or
in
or
loope
shlb
mov
stos
add
mov
shr
inc
in
pop
repz
mov
mov
mov
sub
push
pop
movsb
sahf
add
insl
int3
je
mov
push
pop
xchg
dec
adc
popf
lahf
sbb
es
xor
fbstp
test
pushf
push
push
scas
sub
dec
movsl
mov
dec
das
ffree
pop
mov
gs
push
inc
fadds
mov
imul
cmpsl
int
clc
cwtl
aam
or
rcl
push
inc
js
mov
pop
sbb
addr16
adc
jne
in
push
inc
xchg
bnd
out
push
dec
push
sbb
pop
mov
mov
and
cmpsb
imul
je
or
ljmp
or
lcall
mov
or
xor
divl
pop
je
add
lds
ljmp
lea
sbbl
sbb
lock
scas
mov
xchg
add
xchg
loop
mov
dec
subl
add
popaw
inc
xchg
fsts
jle
xlat
xchg
mov
imul
popf
dec
push
mov
rorl
sub
pop
sub
push
cmp
cmpsl
dec
sub
cmp
adc
xchg
imul
out
bound
in
inc
mov
and
xor
adcb
adc
lods
ds
imul
bound
or
or
dec
sbb
sbb
pavgb
jnp
hlt
stos
mov
adc
xchg
adc
test
leave
das
jns
dec
out
out
stos
jns
adc
add
or
sub
enter
add
fildll
movsl
or
repz
js
dec
repz
xor
cmp
pusha
push
mov
sbb
inc
push
mov
sbb
and
fwait
out
loope
sub
out
fisttps
add
cmp
mov
sbb
xor
jmp
and
scas
in
push
cli
jae
jae
in
loope
mov
andl
sub
fldt
sbb
cmp
daa
and
jg
pop
or
je
push
pop
add
dec
xchg
aad
out
in
les
add
rolb
outsl
sbb
push
dec
mov
jg
stc
adc
hlt
in
pop
adc
js
dec
sub
lret
jbe
movsb
dec
clc
inc
pusha
jmp
push
arpl
xchg
sti
in
mov
ja
pop
adc
test
decl
jae
lret
aam
lods
xor
test
mov
divl
cmp
pop
and
mov
imul
mov
xchg
xor
ss
nop
sbb
int
mov
adc
or
cmovge
mov
jg,pn
ret
int3
stos
leave
into
scas
adc
dec
mov
sahf
rclb
inc
sbb
ds
jl
imul
mov
mov
ret
out
inc
or
mov
test
std
mov
push
cmc
jne
test
mov
std
shrb
in
fmull
xchg
enter
bound
and
adc
lods
pop
or
push
jo
pop
add
cmp
ds
data16
cli
push
xchg
ret
clc
xchg
sub
stc
scas
enter
int3
mov
jle
repnz
sahf
dec
adc
sub
imul
std
jecxz
pop
frstor
mov
dec
decb
je
push
aaa
pop
jl
xor
aas
fisubrl
ljmp
out
cmp
push
jg
pop
inc
mov
pop
inc
gs
fucomp
cmpsl
pushf
call
loopne
ljmp
mov
push
pop
dec
push
xchg
es
xor
jae
lods
cmp
sbb
cs
js
xor
jle
push
adc
push
cltd
dec
and
aas
sub
jp
pop
mov
cmp
lret
scas
jg
test
stc
or
js
sbb
stc
mov
les
in
dec
adc
push
inc
bound
mov
cmpsb
push
fcompl
mov
jbe
jne
mov
fs
adc
testl
cmp
pop
or
lods
add
pop
das
cmpsl
cltd
dec
or
xor
popa
dec
add
ret
ret
sub
repz
jo
xlat
sarb
mov
cltd
dec
adc
dec
cmpsl
outsl
dec
ss
std
mov
ljmp
mov
sbb
mov
push
inc
mov
add
xor
iret
pop
cmp
and
push
sbb
xchg
pusha
push
dec
xlat
push
push
cmp
pop
fcomi
mov
add
out
popf
inc
sbb
dec
lods
rcrl
or
xchg
out
cmp
std
adc
ficoms
in
and
fs
pop
shrb
push
mov
inc
xchg
rcr
mov
jo
and
mov
mov
cli
push
jne
add
ds
jae
sbbl
aaa
stc
jnp
inc
and
adc
xor
push
iret
jmp
mov
loopne
sub
cli
mov
lods
cmpsl
mov
xchg
pop
ret
mov
sub
stos
inc
les
mov
push
cld
xchg
test
xchg
xor
pusha
das
addb
jle
je
negb
add
push
xor
cltd
sub
loop
pop
cmp
or
xchg
loop
popa
js
hlt
xor
rcl
add
cmp
js
sbb
cmp
mov
aam
pop
clc
pop
pop
push
insl
mov
rolb
ficompl
dec
pop
arpl
xchg
scas
sbb
loopne
xor
and
inc
xchg
add
hlt
int3
mov
ja
pushf
xchg
arpl
in
lret
xor
and
cmc
ja
mov
inc
mov
mov
cmpsl
mov
mov
mov
lcallw
aam
in
mov
pop
out
out
jg
xor
ret
sbb
inc
and
repz
sbbb
adc
jo
jmp
clc
aad
xchg
dec
stc
test
jg
jo
stos
mov
stos
adc
jne
stc
mov
adc
xor
dec
sub
push
aam
jle
das
or
and
std
data16
push
int3
lea
sbb
add
mov
push
fisubl
leave
sahf
add
ret
jb
dec
xor
push
pop
call
out
xor
dec
clc
push
push
jecxz
cmp
pop
xor
push
lods
pop
fiadds
inc
in
mov
push
sbb
add
xor
movsl
cmp
inc
mov
dec
pushf
mull
hlt
jmp
mov
call
jp
iret
mov
les
stos
in
repz
stos
inc
enter
in
in
sub
pop
cs
stos
shrl
in
sbb
les
push
xor
adc
clc
bound
cmp
dec
and
pop
xor
daa
popf
or
stos
sub
jp
cmp
insl
cltd
jo
shlb
popa
xchg
adc
out
mov
pop
lret
je
addl
inc
jbe
test
cmpsl
cs
pop
jnp
ja
nop
push
repnz
cs
daa
lea
push
pop
mov
and
sbb
je
push
inc
pop
xchg
mov
pop
data16
je
or
and
jae
or
decb
cmpsb
add
adc
lea
sbb
cltd
or
xlat
aas
jb
test
dec
cli
ja
inc
addb
ds
leave
outsb
sahf
dec
mov
jg
pop
imul
xchg
jle
aad
push
loope
xchg
mov
jmp
fstpl
sbb
lock
pushl
in
or
mov
and
sub
jl
rolb
mov
fsubrp
insl
aam
jl
or
pop
fwait
inc
adc
sbb
lods
push
ficoml
inc
out
movsb
jae
test
les
xchg
lret
sub
xor
xor
cmp
and
sbb
in
jl
pop
and
mov
lret
and
dec
push
jae
call
xor
pop
adcb
mov
stos
dec
cmp
xor
push
add
jne
test
push
add
xchg
inc
inc
lcall
int
shlb
mov
or
dec
pop
outsl
and
sbb
xchg
movsl
or
aam
pop
cs
push
jbe
dec
push
fsts
cmp
rcr
imul
xchg
add
mov
shrb
dec
pop
adc
push
inc
outsl
push
fnsave
iret
push
orl
jne
cwtl
mov
jo
mov
iret
push
mov
push
inc
std
insl
popf
aam
sti
and
adc
xchg
add
push
outsb
in
sbbb
stos
jmp
sbb
dec
inc
or
jns
inc
sub
bound
pop
xor
not
push
mov
and
lods
out
repz
movsl
out
pop
cmp
ja
jmp
mov
pusha
add
pusha
sub
mov
adc
pop
sbb
je
mov
xor
mov
mov
jle
aas
pop
aad
outsl
pusha
sbb
sbb
loop
push
rcrb
cmp
xchg
inc
jmp
and
mov
arpl
mov
jno
jmp
xchg
cmp
out
inc
mov
jnp
push
mov
icebp
mov
jg
sbb
std
xor
jo
enter
sub
ss
ret
imul
mov
sahf
xor
roll
mov
jo
add
out
mov
leave
xchg
xorl
sbb
movsl
cmp
mov
sub
subb
les
inc
xor
mov
loopne
js
ja
sbb
mov
icebp
or
xorb
inc
dec
cs
push
add
lahf
mov
mov
fcmovb
in
jns
nop
mov
sub
jo
mov
xchg
shlb
mov
pop
xor
subl
subb
arpl
out
push
nopl
mov
pop
xor
pop
pop
test
jg
popa
das
or
je
fsubl
xor
push
les
or
pusha
xor
adc
xorb
dec
or
jmp
sbb
int
test
js
inc
cltd
outsl
lcall
pop
insb
stc
adc
add
lfs
fsubl
mov
inc
addr16
inc
test
cli
loope
jne
fstpt
push
jp
loop
dec
aaa
mov
cmp
lock
mov
pop
popf
push
cmp
cmp
sbb
js
arpl
sarb
scas
mov
in
addr16
jle
jp
sbb
adc
in
and
flds
fldl
mov
and
lods
and
fsts
fidivrl
idivl
call
lret
cmp
xor
or
ret
or
in
ss
mov
or
mov
mov
jo
sub
pop
inc
push
sub
inc
jge
sub
dec
cmp
clc
out
popa
mov
sbb
out
int
and
xorl
sbb
lret
dec
cmp
cmp
sbb
test
ror
int
fisubs
mov
ljmp
aam
mov
sub
test
insb
popf
adc
xchg
adc
inc
fildl
xchg
pop
or
adc
rcl
pop
push
pop
push
jne
xor
cwtl
dec
adc
mov
lret
pop
push
repnz
pop
push
lret
and
jle
or
push
cs
inc
sbb
shrl
mov
in
xor
lea
lods
inc
push
bndldx
and
jno
cmp
sub
pmuludq
inc
add
mov
pop
mov
mov
fisttps
cmpb
adc
xor
jmp
mov
xchg
dec
stos
mov
add
jnp
imul
mov
mov
in
mov
inc
fnstsw
clc
fwait
ljmp
imull
cli
test
fucomi
nop
or
jg
mov
mov
in
dec
jl
arpl
je
mov
inc
out
inc
mov
int3
popf
xor
lahf
sbb
mov
mov
stc
cmp
jg
xchg
xor
or
in
les
pop
lods
mov
xor
sbb
pop
bound
cmp
in
or
fs
test
sahf
ss
mulb
push
cmp
leave
fisubrl
andb
cld
ljmp
sbb
mov
pop
mov
sbb
push
sub
test
xchg
xchg
out
inc
js
mov
adc
clc
jb
dec
jno
inc
movsl
jbe
mov
gs
sti
mov
lret
xorb
mov
jge
mov
mov
add
mov
add
ficoml
mov
inc
push
fisubrs
or
in
repz
into
sarl
shr
cwtl
adc
and
add
mov
out
cmp
leave
and
dec
inc
insl
movsl
xor
mov
xor
out
dec
rorl
mov
ljmp
adc
adc
mov
or
cmp
pop
xor
mov
or
mov
aas
mov
cs
mov
lock
sub
dec
iret
loop
jno
int
shrb
daa
sub
fnsave
add
mov
in
cmp
into
push
bound
xchg
arpl
cmp
xchg
aad
les
decb
add
or
jo
arpl
jne
sub
stos
insb
jb
les
xchg
xchg
pop
daa
lds
and
sbb
push
cmpsl
cmpsb
ljmp
push
cmp
dec
es
sbb
xchg
adc
push
sub
xor
movl
push
push
push
cltd
inc
mov
sub
adc
dec
mov
sub
lds
repnz
mov
mov
xchg
jb
rolb
jmp
inc
push
xbegin
lods
pop
mov
pusha
xchg
adc
insb
jb
test
fidivl
fwait
ret
dec
cmpsl
or
jne
int
jbe
mov
scas
dec
cmc
cmpsl
ljmp
pop
jno
or
or
mov
adc
sbb
mov
push
cwtl
xchg
sub
inc
movsb
jmp
and
adc
xchg
jle
push
loopne
or
pop
shll
pop
std
jbe
ret
push
ret
mov
pop
xorl
data16
insb
insl
into
mov
pop
mov
mov
mov
or
fucomip
ficompl
pop
mov
leave
fucomp
pop
mov
pop
jle
fdivrp
xor
insl
lock
sbbb
add
or
pop
add
pop
pop
or
je
inc
xchg
fs
fpatan
insb
adc
ljmp
scas
xchg
iret
outsb
and
sub
dec
push
in
sub
dec
into
icebp
mov
inc
push
clc
pop
pop
addl
cmc
lock
aaa
sbb
jecxz
and
es
cmp
mov
mov
bswap
push
add
mov
out
sbb
hlt
and
push
mov
int
lods
cmc
ljmp
sbb
inc
xchg
nop
and
sub
add
mov
iret
lea
sub
faddp
and
and
push
sbb
pushf
sar
mov
dec
fldenv
in
or
test
push
jbe
popf
inc
push
pop
or
xchg
and
pop
and
movb
mov
mov
jle
lcall
enterw
cmpsb
cmpsl
mov
mov
jne
pop
fcompl
mov
aam
loope
xor
dec
lret
orl
or
sbb
mov
leave
aaa
sub
repz
jp
dec
add
icebp
xchg
xor
ds
hlt
lahf
shrb
jle
mov
cmpsb
jae
frstor
mov
punpcklwd
push
push
stos
xor
inc
sahf
pop
and
sbb
cltd
into
outsl
push
add
aam
rcrb
and
cmc
cmp
push
cmp
push
pop
xlat
jge
cld
push
fnsave
fidivrl
outsb
dec
aas
inc
mov
cmp
clc
outsb
cltd
andb
jne
inc
cs
dec
sub
sbb
mov
sbb
push
mov
push
xchg
jb
fdivl
pop
add
xchg
sbb
pop
loope
adc
pop
imul
test
jae
dec
cmp
mov
pop
and
cmp
call
inc
test
out
out
jecxz
pop
fdiv
dec
dec
pushf
cmp
mov
out
pop
into
mov
jb
cmp
fistps
popf
shll
jl
push
lds
std
cmc
and
pusha
in
imul
shrb
sbb
push
cmpxchg
lret
int3
push
push
xlat
mov
mov
push
cmpsl
add
xlat
adc
and
movsb
cmpsl
pop
sub
push
xor
pop
and
adc
or
dec
mov
out
stos
pop
pusha
jns
ret
subb
mov
jl
and
loopne
push
sar
pop
call
mov
jg
xchg
cwtl
loopne
clc
in
js
imul
sub
movb
adc
fsubrp
clc
push
sub
js
xchg
jo
adc
inc
xchg
push
pop
outsb
jno
mov
ljmp
ja
adc
leave
xor
jne
push
jecxz
pop
adc
xchg
test
xor
insb
stos
lods
test
sub
testl
arpl
mov
xlat
push
sbb
inc
mov
mov
enter
cmp
jp
jns
repnz
leave
pop
rorb
push
xor
pop
inc
stos
les
lahf
out
bnd
push
adc
sub
xor
sbb
fwait
jo
pop
call
cmp
lods
adc
mov
jne
jns
fs
into
push
inc
dec
sbb
or
or
es
incb
pusha
pop
dec
enter
orb
mov
in
js
cmc
lods
mov
aas
ja
sub
mov
data16
dec
push
add
or
mov
es
jmp
scas
xchg
mov
mov
dec
ficoms
or
loopne
data16
mov
cmp
out
mov
rclb
clc
cmp
xchg
imul
and
imul
jl
lea
add
inc
add
adc
xchg
mov
pop
repz
fs
jge
pop
mov
aaa
xchg
add
xor
mov
test
std
pop
mov
int
push
mov
cltd
push
fwait
ja
insb
fcompl
and
mov
mov
jl
leave
mov
jge
pop
dec
push
adc
jno
push
sbb
pusha
mov
ss
push
sub
jnp
fdivl
fiaddl
out
pop
sbb
or
mov
or
clc
add
in
xchg
out
push
or
mov
and
cltd
repz
lret
push
lahf
leave
fstpt
in
shll
data16
mov
ret
inc
xchg
test
mov
lret
lock
fbld
in
lret
ret
inc
ds
push
jno
icebp
xor
stos
cmc
icebp
add
adc
mov
leave
enter
adc
push
pusha
popf
xchg
xchg
in
sbb
xchg
mov
ljmp
sbb
scas
mov
dec
jo
cmp
or
test
inc
dec
adcl
push
dec
fnstcw
mov
mov
ret
sbb
popf
xchg
jecxz
lods
adcb
decb
pop
jl
not
xor
shrb
cmp
call
and
adc
cmp
outsl
xor
and
mov
rcrb
sub
leave
shrb
test
insl
ret
loop
dec
mov
add
and
imul
hlt
push
mov
cs
nop
jmp
add
mov
xchg
test
mov
sbb
ficompl
inc
cmpsb
ret
in
mov
call
xor
mov
or
rcrl
in
jnp
add
xchg
add
adc
cmp
in
test
jl
xchg
movb
mov
fs
sub
sti
jl
add
rclb
jnp
push
and
rorl
into
xlat
shlb
fs
jnp
cmp
add
cmpl
clc
mov
sti
add
notl
lcall
and
xor
adc
sbb
pop
loop
fs
pop
sbb
xchg
inc
adc
adc
fcomip
scas
or
jns
outsl
sbb
jnp
cmp
and
dec
dec
loope
push
roll
out
jl
mov
mov
addb
jo
dec
mov
les
pop
pop
stos
aas
sahf
mov
out
push
imul
push
jp
mov
push
mov
and
jge
inc
mov
dec
testb
push
and
lock
inc
inc
sbb
adc
out
dec
mov
test
dec
shrb
pusha
mov
shlb
popa
sub
nop
aaa
dec
popa
mov
jb
add
jno
pop
lea
xchg
insb
cltd
xorl
xchg
aad
sbb
adc
inc
or
pushf
add
out
arpl
inc
adc
jb
jmp
sbb
mov
mov
int
lahf
cmp
dec
lret
rol
xor
mov
and
cmovb
ret
jmp
dec
lcall
insl
divl
push
gs
cmp
inc
cmp
adc
cmp
jnp
adc
push
xchg
test
mov
popa
pop
jbe
push
hlt
out
sub
push
and
out
xor
sbb
cmpb
outsb
fmulp
mulb
and
inc
imul
fadd
lods
mov
loope
test
js
pop
sahf
popa
out
jno
setne
stos
fidivrs
cmpl
movsb
fmuls
cmc
scas
not
push
fcmove
das
call
jecxz
vmovss
outsb
aaa
pop
adc
mov
cmpsb
insb
mov
bnd
bound
push
aad
jo
pop
sub
sbb
mov
sub
sub
ucomiss
test
cmp
fnstsw
insb
test
or
test
mov
and
dec
sub
sarl
fisubrs
mov
sub
lock
mov
out
add
dec
repz
fisttpl
fildl
mov
adc
mov
and
dec
push
movsb
mov
aad
addb
rcrl
sub
cmp
mov
and
cmp
mov
in
mov
insb
pop
push
add
xchg
jno
out
dec
sti
das
sub
test
out
xor
mov
shr
xor
sbb
mov
outsb
neg
mov
push
pop
jo
pop
sub
push
loope
popl
jp
outsl
imul
jbe
loopne
ja
adc
mov
cmc
out
adc
sbb
nop
ljmp
andl
xchg
sahf
jmp
iret
jg
mov
sbb
dec
jle
outsl
or
repz
or
and
add
pusha
in
pop
insl
cld
out
sahf
mov
sub
cmp
pop
push
adc
pop
jo
js
pop
mov
aad
jo
clc
xchg
xchg
lds
sub
ds
adc
push
test
ljmp
or
and
xor
mov
aaa
fldl
pop
test
clc
popa
xchg
lcall
add
in
imul
push
mov
cmpsl
jl
enter
lcall
mov
lods
and
or
and
arpl
adc
cli
jo
std
and
sbb
subl
xchg
inc
in
pop
pop
sbb
loope
jl
mov
nop
inc
or
jnp
cmp
mov
mov
xor
jnp
out
inc
pop
cli
push
xor
pop
jbe
bound
jmp
jns
ret
int3
mov
xor
mov
fiaddl
fiaddl
dec
mov
inc
es
cmp
out
sub
fsubrs
pop
push
sub
pop
loopne
xor
sbb
mov
imul
mov
and
adc
pop
dec
dec
inc
dec
push
push
jno
in
or
xor
adc
cmp
js
push
stos
test
rep
cwtl
pop
sbb
push
aas
inc
ret
pop
dec
xor
pusha
nop
mov
out
push
sbb
stos
sub
mov
sub
push
sbb
jae
pop
cmp
xchg
sahf
adc
xor
packssdw
adc
lcall
xlat
pop
sarl
daa
test
push
mov
add
add
mull
add
or
cld
adcb
sbb
loopne
pop
jecxz
test
dec
xchg
mov
mov
dec
scas
mov
mov
loope
inc
subl
sub
out
mov
das
fimuls
lea
mov
cli
xchg
cltd
dec
sub
mov
pop
dec
imul
adc
pushf
out
outsl
pop
sbb
add
ss
add
push
and
bound
pop
scas
xor
dec
mov
out
pop
sub
mov
or
out
into
inc
imul
mov
insb
das
test
push
les
dec
add
lds
repz
xchg
sahf
pop
mov
test
push
leave
pop
add
mov
in
pop
negb
inc
adc
jns
decb
push
sub
xchg
jmp
ds
mov
jne
xor
or
neg
lret
mov
mov
sbb
mov
jo
das
test
aaa
add
jl
pop
fisubs
adc
dec
idivb
jg
btr
loope
xor
jns
gs
mov
pop
icebp
pop
xchg
dec
sub
xor
movb
add
fiadds
mov
sub
adcl
xchg
and
sub
dec
sbb
dec
test
inc
arpl
xlat
add
inc
int3
sub
push
cwtl
jl
cltd
das
mov
and
sti
aaa
jne
outsb
loopne
fstps
cmovns
ret
sbb
stc
xor
insb
and
rclb
xchg
jno
adcb
adc
dec
pop
pop
stos
lods
inc
jo
xor
ret
stc
movsb
add
add
mov
mov
and
mov
adc
or
out
sub
inc
outsl
in
sub
stc
sub
mov
ljmp
aad
xchg
shll
aad
loop
lret
xchg
mov
sbb
mov
cld
mov
sub
lret
test
cmp
test
andb
ja
and
mov
xchg
fldl
fdivrl
add
dec
leave
add
subl
aaa
push
fs
insb
adc
ffreep
add
or
lods
push
pop
push
hlt
add
mov
pop
ret
loop
sub
scas
or
cmp
cmp
popl
xor
and
in
shrd
sub
pop
pop
enter
cmpsb
hlt
sub
and
mov
inc
mov
fstl
add
ret
jmp
int3
enter
mov
in
roll
or
nop
mov
mov
adc
filds
sub
lret
mov
movsb
loope
dec
out
iret
cld
sub
stc
int3
lea
addr16
xchg
xchg
mov
stos
outsl
out
in
mov
cs
ret
outsb
mov
imul
lea
arpl
xchg
clc
jbe
push
sub
arpl
mov
mov
out
inc
mov
out
shr
add
dec
push
sub
ljmp
ret
push
stos
fcomi
gs
loope
in
jbe
add
inc
inc
jns
cmp
bound
cli
stos
inc
lahf
push
mov
sarl
inc
cmp
inc
inc
hlt
add
mov
jbe
movsb
orb
push
lret
imul
jg
jno
adc
cmp
dec
dec
jecxz
xor
das
pop
mov
mov
xchg
out
sbb
adc
mov
and
ds
fsubrl
cmp
lret
inc
mov
js
popa
mov
nop
xchg
repz
imul
int
jle
add
or
aam
jmp
jnp
inc
dec
adc
fnstsw
fnsave
in
and
cmc
sbb
insl
ror
loope
push
aaa
rolb
pop
adc
inc
sbb
sbb
rorb
enter
pushf
dec
cli
mov
push
xchg
out
mov
xchg
pusha
clc
movsb
cvtpi2ps
dec
sbb
and
rcr
mov
out
xor
jno
dec
adc
cld
aaa
test
jae
int3
fstpl
xchg
insb
divl
push
into
call
mov
mov
subb
xchg
call
mov
test
jmp
xor
mov
insl
jmp
mov
jl
rcrl
inc
arpl
cmpsb
lods
popa
mov
cmpsb
imul
mov
xor
test
aam
inc
sbb
rclb
or
stos
mov
negl
cltd
push
inc
add
cmpsb
fadds
cmc
nop
out
mov
jne
rcrl
test
vmwrite
cmpsl
sbb
cmp
lahf
jne
push
loop
xchg
cmp
and
icebp
repz
jae
jle
add
add
lcall
cltd
in
imul
mov
in
and
outsl
sbb
mov
hlt
mov
mov
add
mull
aaa
sbb
pop
outsl
sbb
outsl
cmp
push
dec
nop
stos
cmc
ret
sub
in
or
inc
lahf
pop
xchg
inc
into
flds
psubd
ret
cwtl
lods
dec
aad
aas
xor
sbb
and
xor
movsb
mov
xchg
cmp
jg
jmp
cmp
scas
rorb
mov
or
out
out
ss
dec
bound
cli
xor
xchg
jge
mov
adcl
lret
frstor
sub
and
push
sub
xlat
clc
lret
clc
outsb
ja
sbb
xchg
pop
add
pusha
lock
dec
imul
push
mov
sar
es
std
mov
sub
adc
test
aam
fwait
addr16
aad
mov
out
mov
add
sub
mov
inc
call
and
aad
movsl
jmp
stos
lahf
arpl
cmp
and
sub
mov
aam
lods
nop
lods
push
inc
ret
es
in
in
jg
add
mov
rclb
imulb
ds
cld
hlt
in
outsl
lods
add
in
test
add
in
stos
inc
mov
mov
pushf
mov
mov
push
je
fidivrs
xchg
dec
pop
push
xchg
rorl
mov
in
in
cli
xchg
xor
add
mov
fsts
pop
les
mov
xchg
fstps
dec
sub
xor
jecxz
sub
test
ja
stc
mov
xchg
add
popf
and
dec
or
inc
iret
fbstp
push
or
dec
into
adc
mov
xchg
mov
stos
ds
jnp
clc
push
mov
pusha
or
ror
sarb
out
inc
push
xchg
fldenv
lcall
mov
lret
push
xchg
pop
jb
lods
sub
faddl
pop
andl
in
mov
aaa
and
add
pop
pop
repnz
push
xor
movb
cltd
mov
mov
add
mov
jmp
or
inc
daa
mov
inc
mov
or
mov
test
neg
and
loop
fildl
test
call
notb
pop
push
push
add
pop
sub
xor
lods
lret
test
fistpll
cmp
mov
insb
lods
shrb
call
pop
shl
lea
sub
jmp
push
mov
mov
shl
mov
xor
test
loope
add
push
popa
jle
dec
dec
js
add
out
lret
cmp
cmp
lea
sbb
data16
adc
inc
cmp
in
mov
xor
icebp
rcr
call
mov
cli
cmp
or
addr16
inc
loopne
sub
push
arpl
out
mov
cld
inc
dec
sub
dec
out
xor
inc
outsl
lcall
cmp
addl
mov
pop
or
insl
dec
scas
dec
sub
in
mov
xchg
lahf
int3
cmp
js
movsl
mov
mov
aad
xor
push
hlt
lret
add
mov
lret
mov
in
xchg
push
lea
mov
mov
cmpsl
jg
push
andb
mov
pop
push
jmp
and
xor
mov
dec
into
sbb
aad
jmp
mov
add
jge
dec
lahf
cmp
xchg
pop
push
add
sahf
jecxz
sub
mov
fdivr
subb
dec
xchg
inc
dec
and
mov
mov
xlat
addr16
data16
and
or
cld
cmp
ljmp
call
inc
insb
push
rcrb
push
ds
push
jle
sub
and
and
fnstcw
rep
lds
mov
insb
das
adc
fiadds
jg
insb
and
std
jg
aam
imul
sbb
icebp
into
or
cmp
das
inc
fstpt
xor
and
sub
shlb
dec
rolb
cmpsl
outsb
shrl
push
push
scas
call
lcall
jnp
jmp
jne
jns
pop
mov
shlb
sub
jmp
push
and
popa
adc
hlt
addr16
jae
in
loopne
sub
mov
andb
xor
sti
mov
fwait
inc
les
mov
jne
jnp
sub
nop
jge
adc
jg
pop
stos
inc
aaa
and
fs
xorb
sahf
mov
cltd
rclb
movsl
ss
lods
lods
jp
sbb
add
push
inc
sub
mov
cmpsl
sahf
fsts
adc
orl
lock
pop
cmp
jmp
sbb
sub
xchg
xchg
test
movl
jl
out
fcmovb
sub
xchg
mov
inc
mov
pop
fldt
ficompl
mov
xor
pop
in
cwtl
bound
sub
sub
push
mov
es
enter
leave
ds
mov
mov
loopne
mov
je
and
rol
loope
stc
add
ret
cmpsl
mov
insl
popa
ja
mov
dec
jb
xchg
or
mov
mov
pop
adc
test
rcrb
aaa
sbb
mov
cli
pop
push
sbbb
cmpsb
xor
cmpsl
cmp
lock
adc
clc
pop
inc
pop
sbb
jne
mov
aad
pop
shlb
nop
cli
mov
push
pop
cmpsb
jecxz
sub
mov
and
xor
scas
rcl
and
movsb
adc
cmp
stos
add
lds
pop
dec
sbb
arpl
rcll
mov
mov
dec
mov
jge
sarb
test
dec
fiadds
aaa
ret
add
sub
cs
push
dec
xchg
movsb
mov
lods
ss
pop
mov
cwtl
sti
into
jecxz
jg
or
cltd
rcll
into
data16
test
out
xor
xor
ss
enter
cmpsl
pop
outsb
xor
pop
cmpsl
lahf
push
mov
mov
sbb
int
ss
imul
test
aas
cs
mov
dec
mov
jle
jle
xlat
jb
lock
cmp
out
outsl
pushf
jae
shlb
dec
cmpl
filds
movsb
sbbl
dec
pop
leave
and
dec
div
or
ficoms
cwtl
dec
mov
xchg
sub
and
or
out
xor
jo
shll
stos
in
jecxz
mov
ljmp
pop
loope
aaa
mov
dec
enter
sbb
mov
push
decl
and
ja
test
push
xchg
ds
mov
mov
movaps
movsb
xchg
aas
adc
sub
ret
arpl
stos
pop
aad
adc
xor
jle
or
mov
ja
pusha
push
xchg
push
in
dec
jne
add
xchg
loopne
adc
jbe
js
gs
sub
dec
lods
fwait
lahf
in
pop
sbb
cmpsl
mov
jg
sub
xor
movsb
sub
cli
push
and
push
sub
lods
xchg
sub
jb
jno
mov
fcomps
insl
or
lea
jge
jne
ret
cmpsl
and
test
das
jne
xchg
push
inc
and
into
inc
leave
test
xor
imul
popl
jmp
jecxz
adc
test
push
lahf
and
ja
in
mov
pop
xor
and
cmc
push
mov
jae
mov
out
into
fsubrs
loopne
pop
pop
inc
mov
or
pop
mov
ret
xchg
cli
mov
jae
outsl
xor
xchg
xlat
cmc
orl
sbb
push
adc
lock
lahf
hlt
incb
xor
xor
insl
mov
inc
inc
out
cld
femms
adcl
inc
lahf
test
leave
shlb
mov
sbb
adc
mov
test
nop
bound
in
in
loop
test
lea
ret
cmp
mov
dec
push
ds
es
xor
stos
mov
pop
cltd
pop
decb
jmp
pop
xor
testb
add
mov
mov
mov
push
inc
aaa
lea
ret
inc
mov
xchg
int3
cmp
jne
ja
enter
ret
dec
mov
adc
fiaddl
cs
cmpsb
scas
arpl
js
pop
inc
xchg
popf
out
ror
nop
add
xlat
push
xchg
enter
fwait
adc
add
fldcw
arpl
jo
cmpsl
popf
sbb
cmp
mov
aas
mov
sbb
ljmp
scas
icebp
rcrl
movsb
push
mov
test
ret
std
flds
in
out
popa
xchg
dec
push
or
xor
cltd
dec
dec
add
adc
into
stos
mov
imul
lahf
sbb
xchg
sbb
das
mov
scas
mov
jecxz
dec
rcrb
call
sub
mov
cs
testl
pop
sbb
out
mov
pop
repz
cli
mov
lds
push
mov
xor
xchg
cmp
fcompp
jecxz
or
lods
lds
fs
fwait
les
dec
inc
mov
cmp
dec
mov
das
jbe
adc
dec
sbb
fidivrs
shll
pop
shrl
fs
mov
xchg
mov
jmp
and
lods
fcomps
pushl
pop
imul
dec
roll
arpl
add
pop
lods
and
mov
xchg
rep
lret
outsl
dec
mov
xor
repz
clc
inc
lcall
pop
adc
mov
pop
lcall
push
sbbb
push
outsl
adc
movb
das
enter
push
mov
mov
int3
stos
outsb
jo
sbb
dec
pop
popf
loopne
lret
nop
cmp
shlb
xor
les
adc
sub
pushl
sub
out
mov
out
jge
pusha
lods
xor
lahf
mov
cmp
les
add
mov
mov
imul
addr16
push
test
testb
sbb
repz
push
inc
xor
mov
inc
int
ret
cmp
outsb
push
cmp
push
dec
fsubrp
pop
inc
mov
or
loop
mov
xchg
popa
push
shrb
mov
sub
shlb
aad
add
jbe
push
xor
xor
add
inc
pop
jb
sbb
fwait
lahf
inc
fists
sub
lahf
jne
jb
subb
loope
adc
push
insb
jmp
xor
add
out
and
arpl
mov
add
cli
push
pop
pop
loope
or
movsl
push
fwait
insl
mov
lods
insb
orb
outsb
imulb
inc
push
or
pushf
mov
loope
inc
lods
sbb
bnd
pop
cmp
inc
cmpsl
into
leave
mov
js
pop
das
adc
mov
insl
das
adc
insl
movsl
arpl
jo
xor
andl
jle
add
or
sub
es
out
xchg
xchg
fiaddl
out
sahf
pop
call
test
sub
jmp
cli
imul
sub
mov
imul
mov
jne
daa
shl
mov
mov
inc
dec
bound
popa
movsb
pop
pop
jbe
pop
mov
aam
lods
jbe
stos
in
cmp
mov
mov
mov
enter
adcb
dec
hlt
shl
xor
push
push
xchg
inc
adc
xor
and
sbbl
lahf
add
lcall
subb
or
aad
jge
scas
rolb
aas
loope
push
pop
inc
mov
inc
lret
jnp
stos
xchg
xchg
pop
jno
sbb
test
mov
jae
xchg
movsb
std
fwait
in
stc
push
pop
jge
push
mov
bound
mov
je
push
movsl
sti
dec
or
std
or
popa
or
pop
data16
jg
mov
adc
hlt
movsb
rcrl
xor
lret
lcall
scas
xchg
cmp
push
popa
aam
je
mov
push
mov
add
icebp
insl
rolb
cmp
ret
js
lock
jne
pop
sbb
mul
loop
outsb
dec
xor
daa
add
dec
aam
xor
xchg
mov
cmc
xor
in
pop
cltd
movsb
inc
out
rcrb
sub
enter
jl
loopne
xchg
aas
xlat
jnp
shll
adc
ljmp
outsb
jg
push
add
popa
adc
pop
push
sbb
int
mov
iret
les
movsl
sub
mov
lret
je
pop
push
pop
pop
pop
and
xchg
adc
mov
es
loop
jns
lods
and
jecxz
out
popa
push
lock
mov
mov
mov
jl
seto
bound
repnz
mov
fiadds
xchg
rcrl
arpl
xchg
jge
inc
add
ljmp
inc
adc
or
and
push
fildll
sbb
movsl
stc
push
lret
jge
mov
and
bound
adc
ret
pop
int
sbb
push
inc
xchg
pop
or
in
hlt
repz
ja
cmpsb
sub
bound
jecxz
add
dec
lods
xor
les
cmp
stos
loop
jnp
pushf
insb
loop
xchg
fistpll
adc
clc
and
adc
jmp
sub
stos
gs
hlt
enter
dec
dec
inc
daa
ficoms
stos
push
sub
mov
mov
cmp
hlt
dec
jle
aas
popf
push
mov
and
and
xchg
inc
add
in
adc
adc
jnp
xchg
fcmovnbe
xor
ss
fnstcw
pop
push
lods
jb
xor
pop
call
int3
in
inc
movsl
or
inc
ret
jno
insb
push
jno
andps
loope
mov
xchg
dec
pushf
sub
add
rorl
test
mov
jnp
faddl
mov
sub
addb
mov
dec
mov
mov
pop
fs
mov
pop
inc
insl
mov
lods
xor
mov
pusha
int
and
adc
js
popa
and
mov
adc
pop
jno
pop
cld
adc
push
and
push
pop
push
sahf
push
xchg
mov
call
xchg
jnp
mov
add
jns
pop
push
sub
test
lcall
fldl
adc
mov
rcrb
mov
sbb
jmp
rcr
test
stos
sbbl
ret
dec
cltd
push
lods
and
inc
cmp
mov
add
fmuls
mov
fiadds
lods
scas
jne
dec
insb
movsl
jg
cld
fmuls
cmpsl
mov
lahf
lret
hlt
lahf
push
cwtl
or
jle
jae
cmc
sbb
sub
jnp
and
push
loope
xor
mov
aaa
pusha
xor
stos
push
in
lock
out
shrl
sub
iret
add
push
mov
shlb
sbb
ja
and
int
rcrb
dec
sub
pop
cwtl
cmp
mov
jnp
loopne
pop
cmp
mov
enter
push
sub
imul
into
jbe
fisubrs
addr16
andb
lahf
mov
gs
lock
mov
movsb
clc
and
mov
cmp
or
adc
fcomps
sbb
sbb
notb
loope
jp
mov
xor
rcrb
xor
add
push
push
mov
in
adc
cld
jnp
push
in
mov
mov
add
jns
pop
xor
dec
mov
ss
aas
jl
shll
orb
int
loop
mov
jg
cmp
cmp
insb
or
cli
loopne
lret
jmp
inc
dec
sbb
fwait
sub
xor
sbb
and
sub
mov
loop
lods
fcmove
mov
or
aam
into
inc
and
inc
push
push
jae
sarb
jg
push
cmp
sahf
scas
imul
sbb
insb
cmp
adc
shrb
sub
mov
dec
jbe
popf
sub
stos
stos
pop
jb
repz
dec
sub
mov
ljmp
xor
jp
nop
and
and
and
and
jbe
push
mov
ficompl
dec
ret
and
nop
cli
dec
cmp
ja
je
sub
xchg
movsb
repnz
xchg
mov
sbb
push
pop
sti
popf
jbe
ds
outsl
or
sub
in
adc
sub
inc
pop
test
loop
iret
sub
xchg
in
decl
inc
out
les
test
jge
push
xchg
stc
repz
xchg
cmp
cmpsl
or
sbb
xchg
fisttpl
inc
mov
imul
jp
jnp
pusha
and
xchg
xchg
inc
pop
fbstp
orb
jmpw
call
push
add
jecxz
and
fidivrl
add
call
dec
dec
insb
pushl
xchg
xchg
test
rol
jl
mov
js
mov
xor
and
sbb
shrb
push
repz
and
xchg
test
jne
sarl
pop
lds
pop
test
loop
scas
and
idiv
movsb
push
mov
test
sbb
mov
jnp
aad
sbb
and
dec
imull
xchg
inc
dec
fsubrs
loop
test
mov
jle
inc
or
inc
aad
sub
clc
mov
fcompl
add
push
shr
rolb
add
sub
inc
jmp
add
div
repz
pop
mov
lock
es
out
test
push
in
xor
adc
mov
mov
popf
adc
jo
push
push
bound
das
sar
loopne
xchg
loop
push
cmp
rcll
mov
cld
cmp
cwtl
ret
xchg
fsubr
imul
lds
mov
jmp
lret
dec
push
inc
pop
lcall
xchg
or
and
xchg
xor
dec
mov
xchg
push
adc
push
jno
inc
sub
xchg
mov
mov
cmp
fsubl
jl
adc
popf
icebp
xchg
cmpl
in
in
jns
xor
jne
mov
mov
push
fsubs
inc
xchg
mov
add
xor
push
fwait
dec
arpl
mov
adc
loop
pop
incl
fldenv
sbb
add
cmp
ret
jae
std
push
mov
and
ret
sub
pop
scas
xchg
pop
fnsave
movsb
jnp
rcrl
cltd
mov
lods
mov
xchg
xor
xchg
add
push
fcmovne
and
sbb
test
mov
stos
cmp
mov
add
je
fsubrs
mov
adc
iret
and
loope
jle
in
xchg
pop
push
mov
sub
rorb
aaa
lea
inc
fnstenv
and
cld
sub
outsl
sub
pop
adc
out
pop
cmp
dec
lods
xor
out
mov
ss
fdivs
dec
popf
lea
inc
test
mov
rol
jp
test
stos
dec
jecxz
mov
mov
xchg
icebp
repnz
pusha
ret
and
repnz
and
mov
lods
sbbb
xchg
cwtl
and
cmp
xchg
jnp
dec
fldcw
mov
call
ret
jg
jge
cld
pusha
add
mov
pop
pop
in
push
int3
daa
sahf
mov
test
nop
inc
mov
outsl
ds
es
or
mov
jae
mov
jo
imul
xlat
popf
inc
std
xchg
add
int3
les
dec
xchg
pop
ljmp
mov
push
pop
mov
pop
insb
pop
jo
int
sar
mov
adc
cmp
dec
gs
repnz
jg
test
adc
jmp
sbbl
shl
cmp
or
mov
mov
fwait
xorl
pop
outsl
int3
dec
insb
js
sbb
mov
add
inc
pop
mov
xorl
cmpsl
sub
jecxz
sub
cmp
sub
outsl
push
sarb
movsb
pop
lahf
or
push
or
dec
or
mov
adc
sub
adc
pop
scas
lods
push
adc
mov
test
cmp
out
rorb
mov
sbbb
lock
cmpsb
jmp
or
and
adc
xor
shrb
dec
cs
pusha
cmp
fistps
popa
in
mov
outsl
dec
xor
mov
jmp
das
sti
aam
mov
cmc
xchg
inc
repnz
jne
dec
add
push
inc
movsb
pop
xchg
mov
loop
xchg
push
repz
adc
sbbl
repz
xor
stos
lds
enter
xor
test
bound
popf
sti
daa
ljmp
js
or
sbb
dec
push
xchg
enter
xor
rol
sub
outsb
mov
std
dec
outsl
ds
dec
daa
dec
movsb
dec
sti
aaa
xchg
call
push
push
out
mov
mov
push
stos
push
mov
fs
inc
dec
repnz
fwait
add
js
jl
in
popf
addr16
dec
cmp
push
fdivp
shll
mov
iret
or
fiaddl
repnz
mov
addb
inc
daa
cmp
adc
dec
and
push
mov
pop
fcoms
test
shr
or
lea
jno
clc
xor
add
jmp
xlat
inc
xchg
push
loope
lods
xchg
cli
leave
lret
adc
mov
iret
sbb
popa
subb
sbb
jo
popa
jg
push
lock
frstor
icebp
hlt
negl
sub
inc
dec
out
iret
xchg
ss
dec
mov
cmpsl
adc
xchg
push
add
add
pop
js
out
jnp
imul
daa
nop
das
jo
dec
jecxz
xchg
mov
pusha
stc
cmp
dec
xchg
pop
aas
outsb
loopne
and
inc
arpl
pop
popa
or
rorb
xchg
xchg
sti
pop
pop
cli
sarb
push
fildll
out
movsl
sti
lcall
mov
loop
je,pn
les
scas
lret
jns
push
mov
out
imulw
inc
shrl
into
push
out
and
enter
enter
jmp
mov
add
lcall
push
iret
push
loop
mov
aas
lret
les
lret
hlt
fnstcw
out
mov
sbb
rcll
dec
ret
mov
test
inc
sti
inc
dec
xchg
jne
xchg
repnz
lock
and
xchg
arpl
inc
test
pop
movsb
or
in
cmpsb
icebp
or
outsb
pop
mov
cmp
test
in
aaa
stos
or
fdivr
sub
push
popa
push
shlb
jg
push
pop
aas
lock
pusha
popa
ja
pop
mov
xchg
imul
mov
ret
pop
jo
mov
adcl
mov
ret
mov
int3
inc
and
xchg
cmp
jmp
sbb
ds
loopne
mov
mov
mov
je
mov
sbb
jno
pop
scas
adc
or
cld
mov
shl
mov
aas
repz
inc
or
mov
pop
mov
mov
add
sub
cwtl
sti
fnstenv
fcmovnbe
push
in
stc
clc
adc
loope
or
sub
jp
gs
jae
pushf
lock
pop
movsb
dec
addl
es
xchg
movsl
or
push
mov
lret
cmp
fistps
pop
cmp
add
jp
or
shl
add
dec
in
and
pusha
adc
lock
popa
pop
fisubrl
cwtl
cli
js
into
les
sub
adc
enter
incb
dec
into
mov
call
mov
jle
out
out
push
pushf
lcall
dec
sbb
flds
daa
add
sahf
popl
ljmp
add
pop
jmp
iret
movsb
shr
imul
inc
cmp
push
mov
sbb
andl
jnp
shll
pop
push
pop
mov
das
pop
adc
imulb
in
insb
jle
movsb
cmp
js
push
adc
adc
lods
sub
add
sbb
sbb
and
mov
insl
into
sar
pushf
dec
xchg
add
adc
hlt
imul
gs
divl
push
rcll
pop
test
and
xchg
jl
imul
loopne
repz
push
mov
into
sbb
in
jecxz
cmp
nop
jne
push
xor
nop
sbb
sub
adc
fs
mov
mov
imul
ja
aas
pusha
int
xor
lahf
gs
movsl
sbb
pop
stos
mov
cltd
int3
or
je
mov
sub
into
dec
dec
dec
jge
sarl
stc
xor
cld
pop
mov
jecxz
shll
dec
decb
jle
xor
mov
push
sbb
inc
repz
pop
xchg
pop
cli
jle
stc
jmp
jle
jecxz
imul
pop
addr16
mov
repz
jmp
repz
pop
repz
or
ror
out
inc
pop
ljmp
mov
xor
movsl
sbb
push
cmpsb
imul
lahf
mov
inc
pushaw
dec
pushf
mov
inc
fistpll
sub
pop
outsl
lods
sbb
jmp
xchg
jge,pt
pushf
incb
outsb
ret
cmp
pop
jmp
sbb
loopne
ss
icebp
fdivr
push
ja
lret
in
mov
inc
das
or
add
int
mov
cmc
sub
mov
enter
xor
lcall
in
in
sbb
std
addr16
ror
push
addb
insb
fcoml
mov
aas
rcll
movl
add
clc
aaa
andb
xchg
es
aas
jecxz,pt
icebp
outsl
jecxz
inc
mov
pop
loope
push
sub
ljmp
push
and
push
lods
inc
enter
test
mov
ret
add
int
sahf
sbb
or
std
clc
xor
loopne
sahf
pushf
and
mov
sbb
fiaddl
push
push
ds
mov
fcmovnbe
mov
mov
cmp
jmp
cs
repnz
leave
int
jle
mov
xor
cltd
cmc
std
mov
loopne
cltd
inc
sbbl
or
jecxz
neg
add
movsl
jbe
xchg
xor
add
pop
push
int
bnd
mull
jg
test
adc
fisubrl
sbb
outsb
and
xor
pop
shl
gs
xchg
xorb
das
call
push
dec
fwait
xchg
mov
imul
jg
fidivrl
add
cmp
xorl
jae
jnp
adc
adc
adc
pop
fisttpll
test
aaa
sub
pop
cli
jb
dec
adc
or
inc
adc
movsb
push
adc
sub
inc
scas
call
push
imul
or
add
outsl
lock
sub
push
mov
xor
xor
in
xchg
dec
dec
mov
dec
out
inc
loope
jecxz
lcall
roll
mov
popa
mov
scas
jo
or
pop
inc
popf
rclb
dec
mov
sahf
fidivrs
int
pop
inc
or
stos
mov
adc
addb
mov
cmp
and
sub
jl
pusha
sbb
mov
lret
mov
add
lret
stc
inc
outsb
mov
popa
outsl
out
lock
xchg
jecxz
sbb
jnp
cs
mov
test
mov
mov
clc
mov
icebp
rorb
mov
push
leave
jbe
xchg
fidivrl
cmc
out
push
aas
rcll
inc
pushf
inc
xor
fstp
jmp
cs
hlt
pop
loopne
fiadds
int
daa
in
in
or
xchg
lods
es
test
sbb
push
test
push
or
mov
inc
testb
orb
mov
or
insl
daa
pop
shr
pop
jne
sub
std
dec
jo
stc
ficoml
mov
xchg
lods
repnz
lret
fcmovbe
aad
in
and
lds
jmp
sbb
test
iret
ret
xor
pop
repnz
call
imul
ds
jecxz
jecxz
rolb
fildll
int3
mov
in
popf
js
shrb
and
stos
imul
out
cs
ss
loop
jne,pn
xchg
adc
into
inc
imul
cmp
ret
and
push
sbb
push
movsl
loope
jns
lods
inc
es
test
ss
shll
jmp
mov
add
mov
inc
dec
xchg
ljmp
and
mov
repz
dec
or
mov
movsl
pop
mov
cwtl
pop
lds
ret
xchg
loopne
mov
inc
lods
xchg
arpl
in
jge
sbb
cmc
popf
das
xor
xchg
lcall
inc
push
fnstenv
pop
push
pushl
ljmp
test
mov
or
adc
jns
pop
lea
ds
push
aas
inc
xchg
sbbb
mov
and
pushf
push
clc
push
and
repnz
loope
cli
frstor
sbb
shll
pop
dec
hlt
popa
std
test
scas
jo
push
pushl
add
or
call
sarb
mov
scas
std
ja
je
aas
mov
shl
daa
cmp
fcomp
inc
push
or
and
xchg
shl
cmp
out
sub
dec
and
push
push
cmpsb
jle
add
xchg
adc
in
cli
jne
push
xor
or
cmpsb
mov
ss
adc
pop
rorb
mov
cmc
xchg
shr
and
bound
mov
fs
mov
mov
insb
rcrl
adc
or
shrl
push
pop
jge
mulb
test
pop
popa
cltd
inc
sub
inc
ret
pop
lods
ret
sti
cltd
ja
xchg
dec
push
add
or
insl
aaa
fnsave
rcll
mov
jne
mov
ds
mov
outsb
fcompl
scas
sbb
push
subb
mov
out
sbb
fisubs
ss
orb
cmp
lock
mov
ficoms
pop
int
aas
and
xor
loope
fs
in
mov
mov
dec
js
repnz
sbb
xor
flds
addr16
push
das
lds
pop
shlb
lea
xor
xor
rcrb
es
imul
mov
jecxz
pop
cwtl
addb
push
push
sarb
nop
lods
test
push
repz
lcall
stos
js
mov
std
jo
pop
mov
std
movsl
imul
or
jae
push
daa
push
xor
les
sbb
push
dec
outsb
pusha
repz
mov
cmp
and
push
inc
cmc
mov
mov
pushf
push
mov
test
les
gs
sub
inc
out
mov
int3
lret
rcrl
dec
sub
shlb
push
gs
aas
jge
les
mov
cld
jmp
pop
or
movsl
dec
xor
arpl
cmpsl
sub
jge
add
adc
or
pop
int
xchg
mov
insl
push
jnp
fidivl
mov
cli
cmp
adc
fs
mov
or
or
test
out
sbb
xor
in
fnstcw
xlat
mov
rcll
xchg
mov
inc
hlt
sbb
std
mov
lcall
push
pop
fists
sbb
jne
inc
mov
pop
orb
call
mov
pop
mov
aad
lds
leave
mov
push
push
inc
jns
or
mov
sti
cli
lds
and
or
jmp
shlb
icebp
ret
in
mov
adc
enter
aaa
mov
daa
inc
icebp
aad
cmp
cmp
mov
cmp
jge
repnz
mov
dec
mov
cld
into
mov
cwtl
clc
repnz
or
pop
jns
mov
stos
jnp
sbb
or
test
aaa
popf
mov
insb
cwtl
pop
sub
das
xor
ret
cmp
sahf
adc
andl
jo
xchg
data16
pop
leave
mov
sub
cmpsl
mov
andl
repnz
fildl
mov
add
push
and
mov
sbb
sarl
sbb
ljmp
fs
sbb
xchg
les
lock
out
cwtl
adc
bound
pusha
loop
rcll
pop
mov
jno
sub
sub
lcall
addr16
fisubrs
mov
jb
shrl
shll
jb
jl
testb
adc
test
mov
in
lahf
inc
push
les
test
mov
mov
repnz
mov
xchg
fsubl
jbe
popf
daa
sarl
adc
xchg
into
cld
lret
inc
mov
gs
inc
cmp
xor
mov
sbb
sbb
pop
and
push
mov
rcr
dec
pop
cs
out
cmp
push
imul
pushf
jl
xchg
in
int
out
or
pop
cld
mov
outsl
inc
fwait
neg
call
pop
cmp
lea
mov
dec
inc
pop
sub
pushf
dec
je
push
inc
addl
nop
and
popa
xchg
jecxz
jb
fs
inc
js
ret
ljmp
cmp
pop
lahf
shrb
inc
lock
sbb
jecxz
cld
adc
test
imul
mov
ja
jae
in
insb
dec
inc
shl
xlat
rolb
and
jle
addr16
repz
subl
sahf
inc
xchg
mov
outsl
nop
int3
mov
dec
inc
push
jb
xlat
or
jne
loope
jp
and
stc
xchg
push
testb
insb
stos
test
xor
add
lcall
adc
repz
out
dec
sbb
mov
pop
sti
and
mov
lret
sti
sbb
or
aas
pop
push
inc
push
jge
and
pop
sbb
lds
jl
mov
arpl
sub
dec
lods
loopne
add
dec
jno
mov
cli
test
pushf
ss
sti
outsl
add
or
cmp
les
outsb
addr16
xchg
mov
xor
lahf
add
mov
lock
cmpsl
adc
dec
fwait
dec
jno
xchg
push
adc
pop
out
movsl
cmpsb
mov
pop
push
jne
mov
dec
imull
icebp
add
negb
mov
test
pop
and
cmc
pop
fs
cmp
push
pusha
ret
push
cmc
je
mov
mov
repnz
inc
sub
testl
int3
mov
sub
stc
das
ljmp
push
fwait
mov
ja
sbb
adc
sub
mov
in
sti
push
sbb
adc
mov
scas
shrl
pusha
pop
scas
ret
jmp
fmulp
imul
rol
mov
incl
out
aaa
mov
lea
fstps
xchg
inc
or
inc
shlb
mov
jl
negl
inc
into
pop
inc
test
jle
sbb
xor
jne
ljmp
in
and
je
sbbb
inc
adcb
inc
or
jo
das
dec
or
imul
inc
adc
gs
sbb
data16
dec
repnz
sti
xchg
xchg
mov
insb
popa
mov
lods
adc
xchg
sub
and
hlt
mov
xchg
shr
lahf
or
mov
cltd
pop
int
dec
testl
test
sub
or
inc
cmp
lret
shrl
fwait
loop
lcall
xor
push
dec
jnp
test
shr
out
pop
popf
mov
movsb
adc
lds
fidivrs
or
pop
mov
outsl
mov
sbb
dec
cmpsb
add
add
inc
ljmp
ljmp
daa
pusha
jae
and
loope,pn
sbbb
mov
fisttpl
mov
push
add
daa
in
inc
cli
dec
mull
cmp
mov
pushf
js
ret
fisubl
lret
aas
out
xchg
aas
pop
mov
shll
inc
jae
cmpb
push
ret
out
insb
lahf
mov
cmp
lods
shrb
mov
push
shlb
inc
repnz
cmpsl
cmp
mov
sti
insl
cs
inc
xchg
pop
sbb
pushf
fsts
idivl
call
mov
push
es
dec
xchg
in
mov
and
and
jg
mov
mov
out
mov
adc
add
or
les
fstl
sti
adc
sub
push
xor
cmp
jge
movsl
sbb
int3
ljmp
mov
movsb
mov
inc
aad
stos
or
xchg
mov
jns
mov
out
mov
sbb
jle
mov
add
add
sub
and
push
jl
outsl
in
hlt
lcall
cmpsb
push
psrld
scas
ss
mov
and
and
jno
and
pop
aad
xchg
fstl
sbb
lahf
inc
sarl
rcl
jp
mov
inc
repnz
cmpsb
mov
xor
lods
xorb
cmp
mov
sub
lock
dec
repz
mov
call
and
shll
or
push
adc
into
and
out
pop
ret
adc
jge
daa
cmp
jl
mov
sbb
std
sub
arpl
mov
fbld
mov
mov
enter
das
mov
xchg
sbb
std
cltd
cmp
sbb
or
inc
jnp
ss
into
leavew
cmp
test
ja
test
and
cmpsb
std
mov
das
cmpsl
mov
pusha
mov
sub
add
pop
sub
inc
addr16
inc
stos
fldl
sub
push
test
dec
int
inc
sub
aas
sub
fisttpl
inc
into
mov
fnstenv
lcall
scas
imul
je
push
jle
push
and
jge
aaa
dec
aad
cmp
sub
jnp
pop
mov
xor
stos
sbb
xor
fnstcw
nop
xorl
ror
sbb
neg
pop
inc
stos
add
xorl
pop
mov
aam
enter
jmp
lds
jmp
mov
iret
mov
mov
add
outsb
or
lcall
subl
push
jnp
dec
sub
imul
das
push
xchg
jne
nop
xor
dec
cmp
push
cmp
in
pop
sbbb
fcoml
adc
xor
lret
pop
movsl
cmpsl
sub
sbb
popa
pusha
movl
push
inc
mov
cmp
in
in
cmp
jns
xor
and
lea
jae
mov
pusha
xchg
jno
fisubs
mov
insb
into
pop
jb
inc
adc
push
push
pop
nop
das
in
xchg
jp
ret
pop
or
ljmp
loopne
xchg
or
mov
pop
call
adc
scas
cmp
outsl
in
outsb
pop
hlt
xor
in
inc
add
mov
stos
xlat
pop
sub
adc
scas
dec
xlat
mov
push
jne
cwtl
mov
out
std
jge
ja
mov
test
mov
jae
out
jl
cmc
mov
adc
ja
ret
and
test
xor
mov
push
in
jecxz
and
es
mov
jecxz
mov
cmpxchg
fistpl
xchg
lahf
add
inc
inc
inc
scas
add
lds
mov
mov
push
sahf
cs
popa
cmp
xchg
in
test
inc
push
pop
test
and
out
adc
cmc
mov
pop
cwtl
cs
popa
int
out
shrl
pop
push
les
fiaddl
shlb
scas
mov
es
inc
clc
or
std
ljmp
out
xlat
jno
fsubp
mov
sub
cmpsl
ret
dec
lods
pop
sti
xor
mov
stos
xchg
push
sub
push
jmp
jne
std
sub
clc
jne
sarb
out
jg
pusha
js
arpl
or
cltd
movsl
inc
mov
rcl
pop
cmpsb
pop
xor
scas
daa
stos
adc
xor
daa
sbb
leave
inc
cmp
subb
inc
repnz
int
rcll
cli
mov
adc
arpl
je
test
jmp
jne
pop
xchg
gs
and
inc
jo
shlb
jmp
mov
addr16
shrb
or
repnz
sub
xlat
push
enter
das
pop
cwtl
sbbl
mov
jo
add
nop
es
push
cs
loopne
sahf
mov
add
inc
add
jle
push
ret
xor
das
ljmp
adc
jo
imul
sbb
push
sbb
xchg
inc
aas
mov
inc
popl
je
cmp
aaa
jecxz
arpl
and
sub
jae
mov
pop
cmp
cmpsl
jns
cmpsl
shrb
inc
aam
das
mov
xchg
xor
jae
mov
cmpsl
mov
leave
lcall
cmp
es
movsl
ss
enter
jl
loop
pop
push
push
xchg
pop
dec
add
stos
mov
loope
inc
pop
pop
je
pop
adc
hlt
add
fimull
or
or
ficomps
daa
add
add
aas
loop
shl
xchg
test
fbstp
fldt
loope
cmpsl
and
cmp
mov
sbb
or
loop
or
mov
sbb
and
popf
in
cmpsl
xor
xchg
ds
shrl
xor
and
dec
das
popf
pop
sbb
idivb
add
mov
mov
mov
and
dec
mov
xchg
xchg
mov
pop
call
insb
aad
and
push
mov
inc
js
repnz
add
cmp
cli
ret
je
xor
cwtl
sub
inc
sbb
adc
insb
int
pop
mov
mov
add
ja
aaa
pop
sub
or
test
xchg
xlat
jno
shrb
fisubrl
push
mov
repz
lahf
ds
jmp
mov
or
out
scas
test
cmp
inc
push
sub
hlt
dec
sub
ss
data16
jno
dec
stc
and
addr16
dec
add
jns
push
movsl
pop
in
lock
fsub
jge
lret
and
push
xor
scas
pop
sub
push
xor
dec
repnz
movsl
or
mov
adc
mov
sub
mov
rolb
pop
pop
loope
mov
jo
dec
inc
andl
inc
stc
add
push
pop
idivb
out
mov
scas
ds
shrl
pop
mov
shrb
push
fadds
in
and
sub
mov
xchg
out
pop
test
fadds
mov
sbb
add
and
mov
mov
pop
or
gs
cmp
push
sbb
push
and
sbb
hlt
hlt
mov
sbb
scas
jp,pn
push
cltd
outsl
mov
shlb
inc
sbb
mov
sbb
jle
mov
push
mov
jb
jl
xchg
in
insl
adc
popf
mov
cmp
xor
add
ljmp
nop
jns
sar
inc
inc
inc
sbb
dec
dec
push
andb
jmp
fnstsw
arpl
inc
sbb
jo
mov
cmp
or
lods
and
iret
lock
mov
add
test
mov
and
out
jb
idivl
es
nop
vpcmpgtd
je
pop
add
pop
mov
sbb
loopne
jno
mov
mov
sub
mov
adc
int3
cmp
push
addr16
lret
inc
pop
cmp
pushf
xchg
push
or
aas
sub
cmpsb
push
cmp
test
sub
rcrl
push
int3
insl
jecxz
pop
jo
inc
or
call
jno
cmpsl
mov
ret
or
mov
out
out
imul
leave
cmp
xchg
je
mov
orb
or
lds
mov
adc
shlb
sbbb
hlt
push
aam
inc
or
xor
fdivrl
add
dec
sbb
sbb
xchg
push
or
cwtl
sub
mov
cli
test
addr16
cld
xchg
add
mov
stos
outsb
inc
out
push
push
adc
stos
dec
cmpsb
stos
in
rcrb
test
test
push
cmp
push
xchg
ret
pop
add
lret
loope
bound
call
add
inc
dec
jns
add
imul
adc
mov
iret
mov
shrb
in
lret
flds
mov
adc
xchg
subl
mov
in
stos
aad
inc
cltd
or
pop
pop
or
pop
mov
add
mov
subl
lret
in
xor
dec
fsubp
lods
or
mov
fcomps
sbb
repnz
jl
mov
push
mov
gs
push
add
test
shl
pop
shl
xchg
cmove
cmp
mov
rcrb
cmc
cld
xchg
sbb
aaa
fcomp
dec
dec
pushf
add
imulb
icebp
push
popa
mov
jns
mov
addl
in
in
stc
jb
cmp
into
rcr
mov
aam
sarb
popa
in
aas
jmp
ret
mov
aas
icebp
sub
xor
test
aam
outsb
push
xchg
cmpsl
test
add
add
data16
dec
or
in
data16
or
out
jge
add
dec
fbld
repz
xchg
cmpsl
mov
sbb
xlat
jmp
push
or
mov
addl
or
lock
mov
push
jb
mov
nop
loop
call
xchg
pop
fnsave
movsl
push
push
push
aas
stos
xlat
mov
stos
test
es
jg
shlb
pop
pop
or
jb
lahf
cmp
jbe
call
push
dec
or
mov
test
sub
in
mov
mov
adc
push
flds
jns
push
adc
xor
mov
repnz
cli
shrb
repz
add
sar
addb
sbb
addr16
adc
enter
pop
mov
mov
mull
mov
mov
xorl
mov
nop
rol
lods
daa
insl
orb
negb
and
enter
pop
jl
xor
fiadds
mov
movsb
dec
inc
ljmp
mov
aad
call
shll
push
jg
add
bound
pop
imul
cmp
out
jle
add
or
jb
push
add
add
loopne
pop
inc
stos
imul
lcall
sahf
mov
jne
cmp
mov
in
stc
sarb
fsubs
popf
aad
dec
mov
sub
and
clc
call
dec
arpl
das
test
movsl
out
and
and
mov
inc
sub
push
stc
fists
scas
lcall
adc
and
subl
xlat
push
or
or
test
inc
stos
mov
arpl
sub
mov
and
jle
and
pop
mov
xchg
mov
jo
mov
mov
rclb
xchg
adc
mov
mov
test
enter
cmp
in
aas
in
xchg
sub
dec
aas
and
or
jecxz
add
dec
mov
add
popl
lds
jecxz
shll
inc
or
pop
aad
sub
xor
sub
int3
cli
and
std
adc
xchg
dec
pop
inc
jnp
fimull
into
add
mov
push
adc
mov
cmp
repnz
jne
mov
sub
add
hlt
mov
cwtl
mov
and
xor
data16
adc
jbe
insb
je
arpl
ss
out
stos
adc
mov
xorl
test
mov
push
pop
inc
push
inc
xchg
pop
repz
mov
imul
mov
push
fcoms
shll
gs
bound
test
push
push
jne
inc
loop
xor
jge
jmp
inc
aam
and
xchg
mov
ds
das
mov
mov
outsb
int
jne
stos
testl
xor
movsb
mov
fisttps
add
lods
js
loopne
gs
jno
aas
dec
mov
mov
adc
mov
insb
pop
pop
mov
test
xchg
int3
cs
sub
push
dec
iret
shll
ret
dec
jg
shll
jg
dec
sub
mov
push
mov
jg
mov
faddl
cmc
int3
sub
jmp
sbb
or
in
mov
xlat
mov
jns
movsb
xchg
mov
mov
arpl
sbb
loop
jg
xorl
jg
dec
dec
jl
xchg
adc
dec
test
iret
lret
aas
adc
notb
xor
lahf
bound
sarl
sub
or
xchg
or
fcoms
push
add
xchg
sbb
cwtl
or
sbb
inc
jle
mov
aad
adc
data16
adc
inc
add
xchg
lahf
jb
jbe
in
movb
push
xchg
mov
cltd
shrb
inc
cmpsl
aad
push
mov
adc
mov
sub
in
jg
orl
dec
lds
pop
xchg
xchg
jge
adc
pusha
sbb
cld
jb
popa
ja
pop
adc
subl
in
inc
inc
jnp
aad
fs
shl
push
imul
imul
adc
mov
add
and
enter
jne
lock
aaa
mov
movsb
pushf
jae
fisttps
cmpl
xchg
ret
pop
ss
ret
mov
fstpl
and
fisubrl
cs
call
lea
xchg
fmul
cli
jae
jnp
or
xlat
xchg
mov
flds
sbb
mov
or
lret
ja
jae
sbb
fidivs
testb
and
cli
cwtl
movsb
testb
test
mov
addr16
pop
jae
lea
push
xorl
int3
fldt
adc
push
hlt
cmp
cs
and
jmp
mov
nop
cmpsb
push
fisttps
add
cmp
pop
aam
jns
push
jl
shr
shrl
popf
xor
xchg
pop
and
cmpsb
ret
lods
cltd
pop
inc
mov
arpl
cmp
jb
insl
outsb
pop
push
fiaddl
push
inc
jecxz
inc
scas
ret
pop
xor
mov
and
cmp
push
fs
mov
mov
pop
lock
shlb
mov
ja
movsl
dec
jno
xor
xchg
sub
lcall
xchg
insl
stc
adc
add
pop
addr16
mov
pop
adc
and
je
and
jne
sbb
mov
dec
lea
dec
shrl
dec
stos
cmp
dec
sub
lods
inc
or
pop
push
jle
mov
movsl
cltd
mov
xchg
jae
jp
inc
lahf
shll
rorl
fildl
fwait
or
cs
pop
repnz
and
pop
lea
push
push
push
fdivl
in
stos
fcmovb
xchg
jo
or
fimuls
mov
stos
imulb
js
in
outsb
movsl
shlb
into
and
nop
ss
stos
rolb
xchg
out
loop
out
mov
je
nop
mov
mov
call
cmp
jns
inc
call
xchg
push
mov
dec
and
inc
dec
popf
inc
xor
mov
mov
out
push
push
ds
sbbl
movsb
push
repz
fwait
loop
cltd
jns
idivl
lds
add
or
lods
jmp
pop
inc
movsb
outsl
test
mov
cwtl
mov
xor
in
test
adc
jbe
bound
xchg
sti
popf
loop
and
pop
push
mov
popf
dec
cmpsb
xor
lret
jmp
mov
outsl
mov
push
jmp
orb
fidivs
push
cmp
leave
shl
or
push
test
leave
test
rcrb
inc
loopne
ret
jns
cmpl
bound
mov
cmp
std
push
adc
sub
je
das
fildl
sub
lods
pop
insl
mov
je
xor
faddp
outsb
adc
dec
shrl
leave
xchg
or
movsl
test
movsb
mov
adc
popf
sbb
mov
pop
and
mov
xchg
int
hlt
mov
fcmovbe
cli
das
inc
lods
sahf
mov
jns
jns
pop
popf
push
outsl
inc
lea
xor
adc
jnp
jecxz
sarl
jnp
jg
push
adc
popa
mov
jbe
push
adc
mov
aaa
ret
fistpll
fldl
add
popa
hlt
mov
add
sub
jbe
or
ret
jo
mov
js
mov
arpl
ds
je
stos
cmp
lods
dec
xor
xchg
loop
loope
mov
fdivp
sahf
mov
mov
cmpsb
pop
sub
xlat
push
xor
xorb
les
cmp
adc
vmovsldup
in
jmp
and
xor
xor
roll
imul
fwait
pop
stos
dec
sub
mov
cmpb
mov
push
adc
pop
jle
lods
add
jmp
arpl
insl
fstl
sbb
or
jle
fisttpll
ss
test
lea
xor
or
fdivrs
sbb
xor
xchg
add
in
mov
xor
adc
push
dec
jecxz
cmp
leave
cmc
std
mull
pushl
lahf
mov
mov
jecxz
psubw
icebp
sahf
jge
mov
cmp
addr16
pushf
push
mov
cld
int
jo
mov
jb
push
leave
push
into
push
arpl
movsl
aam
cmp
andl
and
test
ja
pop
sub
push
push
push
pushf
dec
out
faddl
dec
cld
inc
std
sub
push
mov
mov
jb
fists
aam
movsb
push
mov
icebp
aam
jmp
scas
fdiv
in
les
inc
lret
jmp
push
mov
and
scas
js
cmp
pop
in
xor
push
add
enter
out
pop
cli
stos
pop
mov
movsl
push
aas
adc
fsubrs
dec
decl
cmp
sub
xor
or
mov
mov
outsb
rcr
hlt
stc
dec
cwtl
jns
xor
movsb
inc
dec
fwait
add
rcll
stos
lcall
sbb
and
test
sub
out
and
ja
int3
mov
jns
pop
in
test
bound
in
out
sub
fs
sub
push
mov
mov
pop
xchg
xchg
subb
and
adc
cmp
mov
clc
jg
xchg
ret
sub
scas
in
add
pop
sub
jecxz
jns
cmc
mov
lods
and
rorl
scas
or
gs
cmpsb
push
jnp
out
jp
push
in
call
cmpsl
sbb
mov
cmpl
xchg
inc
insl
lcall
cmp
hlt
jne
cmp
jge
fisubs
xor
or
cmc
cli
daa
es
in
es
pushf
stos
jae
inc
icebp
xchg
fiadds
jle
jno
xor
insl
lret
xchg
inc
pop
inc
cmp
arpl
insl
aaa
imul
mov
add
out
mov
sbb
xor
rcrl
mov
mov
in
xchg
orl
mov
push
test
in
mov
sbb
cmp
stos
call
and
mov
dec
jb
nop
stc
xchg
sub
mov
je
jecxz
jo
mov
jg
pop
dec
and
loop
xchg
hlt
jmp
sub
mov
pop
push
pusha
xor
xor
das
out
adc
jp
adc
adc
fs
cli
push
dec
mov
inc
and
lahf
add
xor
sub
lods
data16
mov
lret
push
adc
gs
inc
mov
adc
int
jne
cld
xlat
pop
es
int3
push
rcrl
xchg
ret
push
or
idivl
movsl
push
pop
insb
sbb
xchg
pop
mov
jbe
mov
aas
adc
cmpsb
scas
popf
cmp
mov
dec
and
js
cmp
and
rorl
or
dec
fdivrs
popf
test
push
fdivp
xor
in
dec
loope
or
mov
cmpsl
jecxz
clc
icebp
push
mov
xchg
mov
jmp
fs
cltd
out
adc
jge
push
fs
push
fsub
ficoms
sub
xchg
jbe
mov
mov
xor
movsl
cmp
mov
data16
xchg
xchg
js
and
or
fwait
mov
add
stos
sbb
std
clc
add
xchg
insb
xchg
adc
jmp
cs
mov
test
inc
mov
mov
mov
or
mov
outsl
pushf
mov
mov
je
or
xor
mov
pop
jmp
aaa
bound
test
stos
out
or
aas
clc
pop
fdivl
xchg
or
into
rorb
je
repnz
or
mov
add
jp
leave
xchg
push
shl
sbb
test
xchg
add
sub
mov
test
dec
ret
push
pop
adc
cmp
xchg
cmp
pop
inc
imul
and
and
ljmp
lds
enter
inc
out
insb
ja
mov
mov
stos
addr16
pusha
lahf
xchg
mov
subl
cmp
pop
sti
ss
sarl
sbb
xor
test
or
insb
lods
inc
jle
sbb
into
jae
js
mov
sar
movsb
aas
jb
lods
cltd
movsl
out
xchg
adc
mov
hlt
and
add
adc
adc
in
ret
sub
jae
sub
dec
xchg
pop
mov
xchg
sar
or
loopne
fwait
pop
mov
lods
xchg
dec
call
and
les
pop
fbstp
mov
cmp
lds
loopne
and
lret
sbb
pop
aad
mov
xchg
arpl
popa
adc
inc
push
mov
into
mov
lret
cmp
jmp
xchg
or
cmp
into
sti
push
xchg
mov
popf
ja
inc
xchg
dec
shrl
jmp
jmp
or
and
cmp
mov
lods
or
ljmp
cwtl
cmpsl
idivb
in
ss
pop
sub
lahf
xchg
fistpll
mov
jne
mov
dec
add
dec
aad
mov
mov
pop
insb
sub
adc
mov
jg
pop
test
push
jp
or
hlt
out
negb
bnd
xchg
and
xor
push
fwait
or
and
inc
mov
ljmp
dec
ss
sbb
and
sub
mov
adc
adc
and
loope
cmpsb
mov
in
adc
add
pop
cld
push
xchg
arpl
movsb
ljmp
fldenv
addr16
imul
push
fwait
gs
ficoml
mov
push
aad
push
jns
push
mulb
mov
add
ljmp
lcall
cltd
pop
jo
pop
dec
enter
xor
mov
xor
sbb
sbb
sub
call
mov
push
scas
push
lcall
test
fwait
pop
push
inc
aaa
cld
dec
mov
mov
inc
cli
flds
dec
push
dec
inc
lods
jnp
pop
call
push
or
cmp
sbb
fcoml
popf
loopne
lods
push
aaa
in
lret
or
sbb
inc
rcr
mov
fnsave
mov
lret
imul
or
jmp
lret
sbb
fs
mov
mov
dec
in
mov
pop
test
imul
ficoml
bound
les
mov
sbb
sbb
xchg
mov
int
xchg
fdivrs
rcll
add
cli
jmp
mov
add
lods
xlat
jecxz
rcrb
mov
lret
dec
cld
jae
mov
loopne
push
pushf
mov
dec
xor
mov
pushf
sub
push
push
push
gs
jns
and
push
or
push
mulb
sub
xchg
xchg
adc
mov
lret
sub
sub
lds
in
mov
or
xchg
nop
adc
cmp
rcr
mov
fstp
jb
cmpsl
pop
pop
or
inc
mov
subl
jecxz
std
sbb
cs
mov
cvtdq2ps
dec
out
add
pusha
push
data16
push
out
sbb
ljmp
enter
dec
sbb
xor
les
leave
dec
daa
mov
int3
jl
pop
sub
mov
jns
shrb
jp
mov
pop
and
add
mov
inc
xchg
push
add
xchg
sbb
pop
mov
cmp
mov
insb
daa
pop
adc
push
aas
push
dec
inc
mov
inc
mov
in
mov
repnz
aas
into
mov
adc
mov
in
daa
or
lods
jl
inc
std
ss
arpl
xchg
movb
mov
inc
add
add
rcrl
mov
out
and
xchg
into
hlt
inc
leave
lods
cmpsl
xor
push
xchg
jecxz
sub
mov
dec
add
hlt
cs
push
arpl
jb
movsb
imull
xlat
stos
cmc
pushf
jno
push
lahf
lret
mov
xchg
test
std
cs
xchg
aad
aam
xor
lock
sti
adc
jp
jle
aaa
shlb
hlt
rclb
sbb
xor
sub
mov
cmc
mov
jmp
mov
inc
popf
push
stos
inc
jo
push
jp
adc
int3
adc
mov
insb
and
in
jecxz
leave
clc
fldt
imulb
xchg
divl
cmpsb
pop
fwait
lea
pop
xchg
push
fistl
mov
jb
cmc
rclb
rorl
push
cmc
inc
and
mov
js
inc
movsb
xor
pop
xchg
rcr
data16
xor
cld
addr16
ss
fisttpll
inc
jle
stc
out
lods
adc
in
inc
jmp
lock
mov
sbbl
dec
xchg
out
cs
mov
jle
stos
or
repnz
enter
out
mov
jnp
jno
cmpsl
decb
test
mov
fdivl
and
cmp
add
gs
xchg
add
xor
pusha
imul
jg
and
inc
push
pop
dec
sbb
xor
stc
lret
in
xor
adc
pop
in
mov
daa
xchg
sub
int
xor
leave
add
in
lods
mov
sahf
lods
pop
stos
cmc
insb
pop
arpl
mov
pop
push
lea
lods
push
js
outsb
loop
pop
mov
cmpsl
inc
push
jle
or
shlb
dec
pop
loop
ficomps
add
mov
jle
mov
js
das
fmulp
add
xchg
cmp
mov
jno
sub
lret
dec
das
imul
mov
xlat
xchg
mov
sti
or
dec
hlt
pushf
mov
stos
lret
out
mov
shrb
ret
cs
outsb
jb
xlat
insl
mov
subl
sub
jl
scas
cmp
ss
jmp
jo
pop
pop
movsl
fnstcw
mov
xchg
dec
xchg
loop
sbb
add
dec
sub
outsb
fidivs
pop
idivl
mov
lcall
mov
movsb
js
popf
and
out
mov
mov
jg
hlt
adc
test
shlb
in
jge
inc
jbe
adc
sub
les
xlat
jg
js
and
lods
cmp
mov
sbb
pop
fmulp
push
mov
subl
pop
inc
and
sti
jl
sub
xchg
out
sub
jb
xchg
rcrl
int
push
jle
addr16
push
lret
divb
addr16
dec
sub
mov
or
mov
xor
add
push
ffree
pop
xchg
cmp
rcl
aaa
icebp
popa
or
cmp
adc
mov
scas
test
mov
jbe
stos
jp
push
shl
mov
mov
aaa
jne
pop
sbb
psubb
xor
add
cmp
adc
and
sbb
lret
cld
daa
sahf
xor
rcrb
int
ja
sub
movsb
ljmp
xchg
xor
cmpsb
fimuls
push
cmpsb
loopne
add
push
push
fcmovnu
or
dec
out
jns
cli
in
sahf
jecxz
shll
push
and
pop
daa
daa
repz
or
insb
inc
stc
mov
movsl
int
dec
xchg
inc
and
mov
cmp
leave
stc
orl
into
xor
test
sub
push
cmp
jo
arpl
mov
mov
cwtl
cld
inc
negl
clc
push
xchg
lahf
jns
ja
jb
adc
outsb
sub
push
sub
adc
lock
sahf
inc
fs
adc
mov
jns
xchg
jle
inc
lret
cmp
icebp
sub
add
movsb
mov
cmp
add
leave
dec
sub
imul
ja
xchg
imul
or
jmp
xchg
mov
push
mov
adc
xor
sbb
adc
sub
test
sahf
lret
inc
mov
inc
or
sub
cmp
bound
cltd
insb
push
xchg
sbb
loope
mov
jp
outsb
cli
rcrl
dec
jp
mov
or
scas
cmpsb
pushf
xor
fdivl
mov
mov
popf
sub
sbb
cmp
cmp
pop
dec
cltd
push
in
sub
scas
mov
lret
aam
aas
mov
push
scas
jbe
dec
jecxz
xor
imull
cmp
xchg
cwtl
repnz
add
test
imulb
xchg
cmpl
into
scas
and
cltd
shrl
out
xchg
sbb
or
nop
inc
or
das
pop
mov
mov
xor
xor
xor
adc
jl
dec
mov
das
mov
add
cmp
and
inc
aad
mov
or
nop
mov
inc
xchg
add
lods
nop
bound
xchg
xchg
call
mov
repz
jbe
adc
scas
repz
mov
fsubrp
or
or
int3
fcmovnb
fst
sub
and
stos
pop
mov
adc
inc
pop
sub
mov
in
mov
mov
jp
scas
sarl
cmp
ljmp
mov
sbb
je
sub
jge
cmp
jl
jns
cmp
push
cmp
xchg
jle
ja
aam
std
mov
mov
or
stc
mov
ret
jecxz
pop
adc
movsl
or
out
xlat
xor
jge
push
fisubrs
and
dec
loopne
dec
aam
jb
jo
ret
cmp
fdivrs
cmc
pop
add
nop
xchg
daa
ss
xor
sbb
in
lcall
aad
cli
scas
dec
or
xchg
inc
popf
xorb
jmp
push
add
inc
jae
outsb
inc
lret
dec
mov
and
xchg
roll
clc
xchg
movsb
or
fdivp
movsb
outsb
mov
js
sub
mov
bnd
shll
adc
call
movsb
adc
insl
xchg
sbb
mov
mov
or
push
call
cli
je
or
repz
ljmp
loope
fldl
xchg
loopne
inc
dec
hlt
pop
int
push
jg
dec
push
adc
mov
mov
fists
jmp
lret
jb
push
insl
sbb
xor
sar
xchg
pop
ss
pushf
mov
in
lods
lods
mov
mov
or
adc
test
inc
stos
jbe
cltd
lds
incl
out
jne
pushf
sbb
verw
lret
loopne
outsl
lea
sahf
fs
add
je
orl
pushf
pop
add
mov
or
inc
xor
mov
mov
or
xlat
lods
pop
in
fldenv
xor
test
popf
enter
mov
inc
pop
inc
aam
pop
lcall
sub
mov
aas
cli
andb
inc
inc
cwtl
scas
pop
or
enter
and
dec
rcr
les
outsl
cmp
data16
movsl
mov
xchg
mov
push
dec
jns
fstpt
jecxz
cmp
and
jge
loope
inc
cmp
popf
es
pop
jnp
or
shll
mov
fs
mov
inc
shrb
mov
sbb
mov
push
int
into
sub
sub
push
lods
push
mov
ds
adc
in
subb
and
lods
dec
push
loope
mov
pop
push
test
jmp
pop
sub
mov
imul
mov
ret
xchg
repnz
xchg
test
lea
mov
lock
adc
sbb
movsl
aaa
out
mov
mov
loop
push
test
dec
dec
inc
insl
scas
pusha
mov
popa
mov
out
add
lods
sub
loop
xor
mov
pop
cmp
loope
jo
cmpb
add
and
pop
hlt
sub
adc
stos
inc
dec
xchg
xchg
out
push
lds
repnz
adcb
xchg
push
imul
imul
ret
xchg
add
pop
shlb
push
out
loope
popa
xchg
mov
ja
cs
mov
inc
sub
into
add
negl
cmpl
pop
sti
lret
mov
scas
inc
add
push
mov
inc
ljmp
or
out
fmull
daa
int
lds
mov
pop
adc
ja
add
inc
dec
inc
lds
int
inc
inc
lds
push
sbb
lcall
mov
out
jb
inc
sub
push
repnz
mov
mov
shlb
clc
lock
call
cmp
mov
insb
mov
push
in
and
inc
data16
and
mov
sbb
ret
push
dec
int3
mov
lods
jp
mov
mov
lods
mov
iret
loop
lret
dec
ds
jge
xchg
scas
sub
sub
roll
fimull
mov
lret
ds
fstl
movsb
arpl
lret
dec
xchg
leave
sbb
mov
rcll
and
sti
add
adc
mov
mov
in
dec
clc
adc
orb
mov
lcall
lds
pop
int3
inc
cmovns
push
ja
pop
dec
loop
in
jp
inc
jmp
cmp
jbe
sub
ds
cltd
dec
cmp
jns
out
jge
gs
cmp
arpl
in
xor
gs
ds
jg
scas
fmul
pop
mov
ljmp
cmp
mov
rcl
xor
test
insl
int3
mov
add
ret
mov
in
ss
fdivrl
or
in
loop
scas
ja
daa
mov
pop
lods
mov
sbb
mov
lds
lret
lcall
je
sbb
imul
mov
shll
mov
test
sub
out
fildl
bound
test
cli
dec
lods
or
sti
sub
roll
imul
ja
data16
and
or
push
push
ret
or
mov
mov
shr
inc
ljmp
xor
sbb
adc
iret
adc
loop
mov
push
sub
ret
inc
lea
ret
ret
sub
jle
cmpsl
jns
push
cmp
out
mov
fisttpl
mov
test
movsb
push
add
out
test
mov
inc
and
sbb
xchg
dec
mov
int
int
sbb
and
int
in
fwait
lret
add
pop
stos
sub
sbb
sarb
stos
or
fwait
xchg
ljmp
cs
adc
add
mov
mov
adc
pushf
push
aaa
test
xchg
xlat
and
jl
dec
jnp
pop
xchg
loopne
jp
test
xchg
add
hlt
xchg
notl
cmp
bound
add
push
mov
jmp
mov
or
bound
lcall
xchg
rorb
mov
jp
adcl
inc
rcr
inc
sub
pop
xchg
lea
or
icebp
out
jmp
pop
mov
push
push
int3
adc
cmp
fisttps
add
lret
pop
cmp
jne
arpl
add
scas
movsl
dec
adc
jbe
test
das
lahf
addl
cld
stos
aad
mov
cli
movsl
lahf
dec
movsb
insl
scas
int
lock
std
jae
mov
add
mov
sahf
and
loop
nop
test
inc
mov
xor
jl
imul
ret
roll
daa
lcall
and
jmp
jp
or
ljmp
mov
pop
nop
loop
inc
scas
outsl
repz
rcrb
test
pop
int
xor
repz
sbb
mov
loop
sbb
imul
int3
push
inc
jge
cmpsl
cmpsb
sbb
pusha
or
addr16
pop
std
mov
pop
loop
add
inc
stc
jmp
daa
mov
aam
jae
sub
mov
sub
ss
sarb
hlt
xchg
push
stos
dec
jmp
push
dec
mov
cmp
mov
insl
push
jp
jle
fcmovnb
sbb
adc
push
pop
mov
call
mov
or
cltd
in
fs
add
imul
cmp
xorb
ret
push
push
stos
jbe
in
xchg
aaa
clc
je
inc
or
setge
cli
mov
jmp
jge
loope
int3
call
dec
addl
or
pop
test
adc
jne
mov
or
xor
push
xchg
fwait
inc
int
sub
cwtl
mov
imul
or
add
adc
mov
cmpsb
test
xchg
leave
inc
add
mov
xchg
outsb
pop
call
repnz
lret
pop
adc
push
dec
jp
cmp
mov
jmp
int
lret
ja
xor
and
or
mov
pop
repz
xchg
xor
dec
popa
in
xchg
popf
cmovno
jns
push
xor
and
push
inc
inc
pop
pushf
xlat
pop
lds
mov
dec
mov
mov
std
sub
dec
cwtl
push
mov
ss
mov
or
mov
inc
mov
dec
test
jnp
xchg
cmpsl
out
mov
shlb
into
inc
aad
cmpsb
xchg
mov
icebp
push
mov
roll
mov
nop
jno
xlat
sub
js
xchg
lods
push
fs
push
jp
sub
cmp
lret
dec
push
xor
fs
stos
cmc
xchg
jle
jae
in
cmpsb
add
je
mov
pop
adc
sbb
jno
xor
or
daa
pop
bound
test
into
pop
xor
sbb
xchg
aaa
add
mov
fidivrl
mov
ds
dec
xlat
inc
cmp
inc
push
dec
clc
mov
add
aaa
dec
lock
or
xor
rcll
pop
aaa
inc
std
pop
mov
pop
je
in
mov
xor
and
adc
int
into
cltd
in
add
or
cmpsl
shrb
cmp
aaa
cmpl
lods
and
popf
aam
push
scas
test
mov
cmp
aas
sub
test
mov
mov
subl
fxch
xor
mov
inc
xchg
xor
outsb
gs
jb
jnp
push
mov
jo
inc
sub
push
loopne,pn
sub
jae
mov
out
and
jmp
in
adc
idivl
scas
fneni(8087
addl
test
lods
popf
lds
add
push
add
jne
in
and
push
and
mov
ret
jle
jle
test
mov
sub
dec
add
sti
test
mov
mov
sbb
lock
and
inc
cmpsb
mov
cli
std
dec
in
push
add
push
stc
daa
cmc
ss
push
push
cmp
xor
sbb
adcl
outsb
std
jo
mov
pop
mov
xchg
inc
cmp
lret
mov
inc
inc
jmp
bound
xor
test
or
jmp
xchg
fcomps
pop
adc
jp
add
pusha
repz
shll
jg
ds
popf
mov
dec
and
cmpsl
jbe
movsb
ljmp
sub
jns
loopne
cmp
inc
jecxz
or
ja
fisttpll
sbb
jl
mov
jne
cmp
es
and
aad
frstor
out
add
lcall
dec
or
xor
cmp
iret
ret
sub
jle
filds
adc
pop
test
popf
push
negb
hlt
add
negb
lcall
add
or
xor
cmp
into
outsb
dec
mov
stc
insl
scas
outsb
pop
sub
cwtl
or
mov
xor
cltd
xchg
iret
sub
sbb
dec
jl
int
testb
ja
subl
outsb
pop
iret
push
fidivrs
or
sbb
xchg
add
pop
lret
inc
mov
dec
sbb
ss
sub
mov
push
andl
stos
push
addr16
push
mov
test
or
add
and
in
lret
sub
ljmp
and
call
pop
int3
or
leave
or
sbb
mov
stos
andb
gs
pop
rol
mov
add
mov
and
fsts
sbb
ficoms
sbb
rorb
cltd
sub
jbe
jg
lcall
and
sarl
popa
pop
xor
or
push
push
bound
cmp
dec
pop
ds
repz
pop
rorl
jmp
cli
lds
dec
je
imul
ss
sahf
fcmovb
loopne
aad
xchg
js
fmull
cs
and
or
sub
sub
pop
xchg
mov
rorl
dec
push
lret
mov
sar
pop
xchg
jecxz
inc
push
pop
fwait
jmp
andb
jb
sub
sbb
dec
push
movsb
dec
sbb
push
outsl
cltd
push
aas
mov
xchg
dec
or
sbb
xchg
mov
jp
in
mov
or
and
sbb
mov
xchg
aam
test
cmp
sbb
scas
push
insl
and
dec
inc
add
call
add
adc
lahf
sbb
pop
sub
pop
icebp
stos
xchg
movsl
into
mov
mov
mov
mov
lret
stc
dec
adc
cltd
loopne
testl
sbbl
inc
lods
adc
pop
mov
pop
std
xor
loope
sbb
inc
dec
ss
mov
mov
sbb
push
dec
sahf
out
iret
dec
mov
inc
sub
int3
jp
ds
ljmp
pop
pop
shrb
jns
out
and
or
mov
push
pop
pop
mov
das
scas
ret
sbb
leave
inc
lret
aaa
mov
std
adc
in
push
sbb
nop
hlt
adc
hlt
pop
test
cmp
sbb
mov
adc
sbb
mov
mov
test
inc
call
fdivrs
test
pop
aam
cmpsl
dec
lods
pop
out
int3
xchg
push
jecxz
push
xor
mov
pop
pop
inc
into
xchg
mul
pop
imul
xor
pop
and
cmc
sub
push
and
daa
sub
and
insl
and
movsb
sub
jae
ret
jb
inc
add
pop
testb
cmpsl
ds
outsb
aad
sbb
insb
jge
lret
xchg
inc
xor
sub
movsb
gs
add
jp
fstl
mov
jge
ret
dec
and
cmovl
xchg
push
or
inc
xchg
cmp
add
daa
pop
icebp
xor
mov
jp
xor
push
ret
or
dec
cmp
mov
ja
push
mov
ss
ret
cs
add
jg
inc
fcoms
leave
adc
int3
test
lret
jp
std
pusha
pusha
hlt
insb
scas
leave
inc
xor
xchg
dec
sbb
cs
xor
dec
in
in
or
mov
jmp
aas
jnp
xchg
popf
movsb
sbb
stc
call
mov
dec
sahf
fmuls
inc
pop
mov
arpl
pop
cld
add
in
enter
mov
sub
es
lret
dec
mov
jle
sbb
sbb
cmp
pop
jge
daa
stos
shll
sarb
dec
adc
fucom
or
in
outsb
jp
push
inc
pop
sub
cmp
xchg
push
repz
shrb
leave
ss
in
pop
lods
cmpsb
sahf
test
mov
push
fs
dec
or
lods
std
fistl
xchg
daa
ret
lods
in
test
jae
pop
mov
int
sahf
push
gs
in
shlb
aam
push
sub
push
mov
lahf
sub
scas
in
cmp
repz
sbb
rorl
rol
data16
scas
div
xor
notb
pusha
stos
cmc
mov
pop
lea
push
push
dec
fmuls
inc
cld
pusha
mov
stos
xchg
cltd
arpl
in
fistl
adc
dec
es
cmp
mov
sbb
mov
cmp
je
xor
mov
jno
push
mov
sahf
das
andl
icebp
lods
mov
lods
bswap
arpl
jne
icebp
inc
fidivl
and
flds
push
or
repz
andb
and
mov
outsl
mov
mov
sbb
sbb
call
jb
test
inc
rorb
js
ficoms
mov
lcall
xor
mov
jmp
dec
repz
pop
dec
jo
sub
in
lods
cmp
jmp
out
stos
test
or
mov
xchg
push
inc
js
cmpsb
jge
mov
fwait
lods
out
lock
sbb
push
sbb
mov
daa
enter
dec
sbb
push
dec
pusha
repz
ret
or
fstl
rclb
sbb
or
ret
or
lcall
int
mov
repnz
pop
dec
into
jge
pop
push
aam
movsb
pop
aam
in
xor
mov
negb
sti
jns
xchg
mov
pushf
outsl
inc
push
mov
add
gs
and
dec
inc
pcmpeqb
sub
sti
addr16
and
std
pop
xor
arpl
cwtl
in
outsb
pop
repz
sub
fld
mov
mov
ja
mov
aaa
mov
adc
lods
lcall
sahf
in
pop
mov
fldt
xchg
jle
lods
xchg
mov
push
xchg
dec
test
xor
or
cmp
stos
xchg
popf
xchg
fidivrs
push
faddl
rcll
lods
fadds
lahf
loopne
jb
imul
js
hlt
dec
mov
push
inc
fldenv
sub
dec
mov
or
inc
lods
jns
cmc
sub
movsb
leave
jne
insb
adc
lods
pushf
ret
fstp
or
xchg
test
mov
push
inc
push
std
mov
xor
mulb
out
scas
daa
xor
pop
pop
or
jp
pop
sub
ss
mov
xor
adcl
pop
leave
pop
outsb
sbb
cmp
adc
cwtl
imul
sbb
cwtl
js
jl
jne
or
arpl
mov
ja,pt
sub
rcpps
enter
cld
xor
cld
in
dec
pushf
mov
xor
stos
xorb
daa
insl
sub
mov
jns
cmp
inc
pop
or
pop
lret
out
add
inc
inc
test
roll
cmp
xchg
stos
push
mov
insl
scas
dec
mov
inc
inc
mov
movsl
rolb
test
push
xor
lea
ds
adc
push
inc
fisubl
addr16
pop
xor
fistpl
movsl
pop
and
push
test
mov
ret
lcall
cli
mov
sti
loopne
ret
or
dec
mov
pop
les
mov
jmp
ffreep
xchg
cs
xchg
and
cmc
mov
or
and
in
lods
adc
into
mov
lea
imul
lcall
adc
xor
fprem
insb
test
push
das
and
xchg
les
repz
dec
push
fsave
pop
aad
outsb
mov
mov
insl
fwait
ljmp
mov
push
xchg
rcll
enter
pop
std
imul
pop
mov
jge
mov
push
scas
or
sbb
fwait
jbe
daa
test
mov
divl
movsb
pop
fadds
and
lods
out
add
lret
ljmp
lds
lods
in
xlat
mov
pop
insb
mov
mov
cli
das
test
xor
stc
mov
out
pusha
dec
adc
mov
aam
fldt
dec
add
pusha
or
pop
xor
jno
aad
jg
adcl
lret
test
subl
cmpsb
jg
lock
pushf
aad
pop
jo
imul
negb
ljmp
lods
mov
mov
mov
cmpsb
fildl
mul
push
pop
bound
call
pop
bound
shlb
inc
xor
out
add
ds
cmp
test
cmpl
xchg
loopne
shlb
inc
fsub
out
jle
outsb
inc
int3
bound
loopne
and
iret
xor
cmp
xchg
xchg
pop
rclb
sahf
sbb
nop
repz
xchg
push
pusha
shll
xchg
mov
test
femms
stos
inc
faddp
stc
pop
popf
pop
xchg
into
and
scas
jge
push
sbb
lds
repnz
call
jbe
xchg
js
mov
cli
sbb
lods
in
adc
in
add
xchg
out
in
scas
mov
ficoml
sarl
sbb
and
pop
fdivrs
mov
test
ljmp
and
cmp
add
fs
iret
jbe
mov
push
and
fdivrl
sbb
test
mov
jg
jns
shrl
mov
dec
subl
pop
mov
push
movsb
xchg
add
stos
cmp
addb
fcom
mov
lahf
push
mov
lret
adc
or
ds
sbb
aam
in
je
fldl
sbb
fisubrs
ret
leave
push
adc
jge
pop
jecxz
mov
mov
inc
bound
outsb
test
xor
outsl
mov
push
jns
loope
push
mov
imul
cwtl
in
mov
xchg
pop
sub
push
or
out
push
xorl
cmp
out
or
jmp
scas
push
adc
imul
push
mov
pushf
dec
jl
stos
loope
and
pop
mov
shrb
sbb
fbstp
sbb
fildl
pop
cmp
int
lret
push
sub
repz
xor
cmp
pushf
aam
push
dec
pop
ret
lods
inc
cmp
cmp
rcrl
clc
lods
out
xlat
fnstenv
adc
inc
je
cltd
fidivrs
xchg
push
mov
mov
std
push
stos
imul
mov
dec
dec
jp
cmp
xchg
cld
cmpsb
mov
xchg
pushf
outsl
jmp
xor
pop
fistl
fildl
jecxz
sub
inc
repz
push
insb
xchg
pop
stos
mov
cmp
mov
push
lret
out
adc
jge
jnp
es
outsb
and
movsl
sbb
xor
stc
pop
das
xchg
nop
arpl
or
mov
fwait
repnz
sbb
out
dec
xchg
mov
sbb
cs
stc
shl
sbb
adc
and
xor
jg
mov
sub
sti
out
loop
or
pop
call
adc
xor
pushf
pop
ret
hlt
ret
ret
lcall
mov
cmpsb
mov
outsl
mov
pop
mov
pop
mov
xor
les
mov
ret
out
cmp
adc
jno
push
push
xchg
bound
jge
jecxz
xchg
mov
rcrb
xor
stos
or
rorl
ret
adc
inc
xchg
jbe
xor
inc
or
push
loope
scas
int
pop
lret
jbe
cs
jno
shlb
dec
sbb
adc
xor
dec
xchg
mov
enter
mov
xchg
lock
adc
loopne
or
push
push
xor
mov
jge
ret
jge
rorl
fcmovb
ss
outsl
mov
push
out
movsb
jmp
mov
xchg
ret
jle
int
mov
loope
jbe
mov
outsl
fcmove
adc
mov
cmp
addr16
push
cmp
inc
fimull
adc
dec
dec
cld
xchg
or
stos
cwtl
int
arpl
pop
test
add
inc
jns
jbe
cmpsl
arpl
dec
pushl
imul
setb
mov
in
test
cld
lret
cmp
xbegin
adc
incb
mov
sub
add
and
inc
sub
mov
notl
xchg
xor
xchg
outsl
push
test
outsl
aam
inc
mov
fsubrl
jb
jae
cmp
and
jl
cltd
xor
mov
jp
push
xchg
fst
sub
outsl
fs
cmp
incb
in
int
pop
push
icebp
addb
pop
lea
mov
jmp
lock
ds
pusha
and
jns
data16
mov
push
jae
outsb
inc
hlt
push
mov
xchg
iret
jge
insl
mov
out
cmc
sub
hlt
mov
es
dec
push
fdiv
push
and
subl
loop
mov
adc
and
or
mov
movsl
jbe
inc
hlt
in
fadd
jbe
bound
bound
into
cmc
mov
orl
cli
shll
adc
call
push
inc
and
es
xor
call
inc
stos
pop
repz
xorb
cmpsl
adc
xchg
sbb
nop
inc
pop
pushf
cmp
dec
add
mov
out
add
jg
jb
hlt
out
mov
or
add
inc
or
sub
jb
jne
jmp
and
push
or
scas
mov
pop
arpl
popf
out
decl
jle
sub
cmp
gs
fnstenv
push
cmpsl
fsts
cmp
sbb
inc
daa
push
xor
sahf
mov
js
xchg
stc
sub
idivl
mov
push
data16
pop
stc
fwait
add
in
jnp
cmpl
mov
lock
cmp
fs
cmp
test
add
jo
mov
push
pushf
loope
out
xor
loop
push
mov
lock
mov
mov
das
mov
jmp
push
pop
pop
les
push
pop
divl
add
aas
addr16
das
dec
lret
push
adc
mov
or
lret
xor
inc
push
and
rclb
scas
nop
fsubr
lahf
cmp
shlb
popf
lds
sbb
mov
mov
les
mov
push
sbb
jo
xor
mov
pop
bound
test
stos
clc
dec
or
orl
adc
mov
xlat
int
and
push
ja
adc
jne
push
and
iret
xchg
jmp
or
lods
ds
stos
or
out
dec
mov
push
add
in
push
mov
and
mov
insb
push
inc
dec
xchg
adc
dec
popf
add
xor
mov
or
cmc
pop
mov
xlat
out
stos
loop
jge
cld
cltd
js
mov
jno
mov
xchg
jmp
inc
pop
test
ficompl
mov
mov
scas
xor
dec
xorb
cld
in
lcall
mov
leave
and
adc
adc
cmpsl
stc
mov
shrb
ret
insb
adc
pop
cmp
sahf
or
ficompl
out
and
sub
out
adc
adc
mov
push
adc
movsb
in
xlat
jmp
in
inc
jle
pop
in
dec
aas
add
shrb
cmp
in
fisttpll
call
adc
adc
fdivrl
sbb
sub
mull
call
pop
pop
imul
out
adc
ds
push
ljmp
push
add
or
cwtl
mov
into
xor
sbb
xchg
stc
test
repnz
incb
shrl
jo
sub
out
mov
outsl
mov
cmp
mov
leave
xorl
rclw
add
lock
hlt
push
fsubrl
popf
xchg
jb
js
dec
mov
movsl
dec
xchg
leave
pop
push
jge
mov
js
cmp
fcoms
push
in
into
pop
icebp
and
mov
jmp
cmp
mov
pop
xlat
pop
scas
out
pop
pop
int3
push
scas
das
bound
stos
xorb
push
notb
iret
mov
sub
dec
pushl
push
inc
fsubr
lods
rcr
out
sub
xor
pusha
adc
inc
std
adc
leave
out
ret
fimuls
clc
xchg
xchg
mov
sbb
repnz
stos
popa
inc
add
or
mov
or
movsb
mov
fldt
mul
in
adc
pop
divb
inc
mov
push
jo
inc
fistpll
cmp
xchg
loop
adc
mov
and
inc
inc
cmp
sbb
movsbl
decb
sub
dec
in
mov
lods
mov
stos
shl
mov
push
out
mov
addl
cmp
and
stos
push
jne
cld
out
in
or
ret
dec
cwtl
rcrl
icebp
iret
and
insb
push
shll
ja
ret
sub
pusha
out
lods
insl
push
xlat
jecxz
mov
orl
dec
mov
sti
orb
and
pop
ds
cmpsl
push
xchg
mov
push
jne
push
outsb
aam
in
mov
and
pop
lds
out
stc
jbe
push
lret
sub
fistl
add
int
sbb
movsb
mov
into
and
pop
cli
and
and
or
cmpb
xchg
add
and
mov
iret
hlt
fs
pop
sub
xlat
fiaddl
mov
push
out
stos
jae
sbb
sahf
ljmp
lcall
jne
popf
push
adc
dec
mov
fcoml
or
sbb
mov
sti
lods
je
int3
leave
arpl
fisubs
idivb
fisttpll
cmpsb
fidivrl
cmpsl
or
test
pop
pop
pusha
pop
push
test
add
jns
leave
fdivrp
imul
pop
and
cmp
pop
sbbb
stc
sub
cld
out
pop
into
lret
or
pop
xchg
xchg
data16
stc
addl
sbb
sub
mov
outsb
test
ja
jbe
push
mov
stos
mov
into
adc
ret
notl
inc
push
mov
int
adc
popf
addr16
sbbb
std
jae
push
jmp
cmp
jns
or
notl
clc
adc
xchg
push
addr16
mov
inc
push
in
sbb
imul
add
cmpsb
jp
not
dec
mov
jbe
out
loopne
stos
std
and
xor
jecxz
lcall
mov
pop
mov
sbb
cmc
movsl
movsb
nop
pop
sbb
rcr
cmpsb
and
pop
fwait
sbb
mov
add
insb
dec
push
inc
sbb
ret
rcrb
aaa
mull
nop
inc
pop
bound
push
out
cltd
adc
xchg
or
xor
popf
call
push
daa
push
pop
testb
faddl
push
ljmp
jmp
movsb
or
repnz
push
xchg
lods
outsb
lock
adcl
cld
mov
inc
or
pop
and
fdivs
int
mov
xor
jnp
cld
cs
xchg
mov
inc
cmpsl
mov
mov
and
shll
sub
in
cmp
sub
inc
cmp
mov
xchg
mov
xor
or
stos
out
inc
repnz
xchg
and
sub
add
js
or
popf
in
jb
jne
add
cmp
inc
in
add
insl
aas
mov
cmp
lahf
mov
push
out
rorb
loop
cli
fildll
jp
pushf
addr16
xchg
cmpsb
shlb
repz
mov
ror
jns
jnp
or
int3
stc
push
loop
lds
lret
jl
or
fs
stc
mov
lock
mov
lods
ljmp
sub
and
push
push
pop
fdivl
ret
ss
arpl
cmpsl
aad
jg
mov
adc
sti
adc
sbb
sbb
mov
pushf
cmp
or
into
roll
or
sti
mov
cld
mov
dec
nop
pop
xorl
lods
dec
push
in
sbb
and
outsl
lret
adc
scas
mov
and
pop
mov
jo
daa
jmp
out
jmp
jp
cmp
mov
or
jbe
inc
ss
lods
sub
pop
add
in
lcall
cmpsb
adc
xchg
movsl
inc
ret
add
xor
mov
test
push
push
rcll
rcll
outsb
out
sbb
inc
ja
jne
iretw
lret
pop
jg
jle
mov
sub
dec
jbe
shrl
xchg
nop
imul
dec
mov
lods
imul
sbb
out
sub
loopne
pop
push
add
nop
pop
jno
pop
push
mov
jl
add
int3
jp
xor
mov
ss
pop
sub
sub
add
inc
gs
rol
in
mov
lret
cli
std
pop
inc
lret
lock
jp
pop
add
push
xor
stos
enter
ret
ja
aam
es
add
ficompl
insb
jl
xor
jmp
mov
pop
sub
jns
out
shl
jo
daa
adc
push
push
ljmp
xor
pop
fnstsw
mov
xor
xchg
repnz
stos
popf
and
ljmp
mov
push
jbe
or
add
xor
jle
mov
mov
jl
call
inc
jl
out
das
push
jo
or
out
cmp
push
fdivs
int3
jp
dec
xchg
dec
inc
adc
in
imul
loop
jae
in
inc
cwtl
adc
pop
cmc
ss
adc
les
jne
or
adc
rcll
out
dec
leave
notl
inc
dec
lcall
fisttpll
jle
jp
repnz
sti
sub
ja
and
jecxz
in
outsl
sbb
pop
aas
es
aad
iret
mov
incb
inc
bound
lock
pushw
into
mov
fnstsw
mov
jg
jo
out
push
mov
iret
aas
loopne
out
orb
push
je
push
cmp
lret
in
pop
fs
ss
es
sub
push
cmp
mov
cmpb
sub
xchg
rorl
cmp
dec
or
adc
inc
dec
stc
cmp
mov
insl
adc
scas
pop
sbb
xor
or
push
cmp
test
loope
loop
lret
lock
test
dec
inc
or
pop
push
mov
jo,pn
bound
out
bound
in
movsb
out
shlb
xchg
push
jno
into
imulb
cmp
daa
sub
lcall
jo
mov
sub
stos
push
xchg
sbb
mov
call
int
movsl
mov
pop
inc
jmp
ret
ret
ficoms
daa
hlt
fnstcw
sub
in
mov
mov
popa
and
and
es
insl
into
les
jle
jl
xchg
cld
push
cltd
xchg
sbb
jmp
push
and
xchg
divb
cld
fcoms
jecxz
mov
mov
mov
xor
fs
mov
and
lahf
shrl
mov
mov
cld
inc
stos
outsl
movsb
lea
push
and
cmp
jnp
in
xor
ja
cwtl
push
in
daa
and
sub
cs
jl
jne
fwait
push
push
xor
jl
sahf
mov
lahf
mov
movsl
or
and
scas
in
iret
shlb
rcrb
loopne
pop
fwait
push
dec
lcall
inc
mov
cwtl
and
adc
xor
dec
das
xor
cs
repnz
push
xchg
clc
stos
leave
adc
mov
push
xchg
das
pop
jbe
sub
xchg
insl
lahf
cmpsb
in
inc
repnz
xchg
and
xchg
sub
scas
lahf
out
int3
xchg
sbb
gs
pushf
cmp
out
ficoms
je
sbb
aaa
mov
or
or
push
pusha
dec
push
cmpsl
bound
dec
out
das
mov
in
jns
jb
js
mov
sahf
dec
inc
or
adc
fs
sti
cs
incb
jge
cwtl
aad
sub
sub
and
cmpsl
test
lods
js
adc
pop
and
ret
cmp
cltd
jne
sub
add
jb
mov
jl
jl
lods
dec
sbb
rcrb
lea
nop
fiaddl
jns
je
sub
fcmove
sarl
das
dec
mov
cmpsl
sbb
dec
iret
imul
push
notl
jb
outsl
dec
inc
cmp
push
jns
stos
dec
mov
xor
mov
and
jnp
cli
inc
cmp
cwtl
pusha
xchg
in
push
ret
cmpl
test
cli
mov
rcl
dec
mov
and
dec
and
and
pusha
mov
movsl
or
out
mov
stc
or
inc
dec
shl
test
mov
mov
ret
addr16
push
cmc
test
dec
repnz
push
dec
mov
test
mov
adc
lea
and
jle
js
push
adcb
or
adc
ja
adc
jge
test
push
mov
jecxz
sbb
xlat
fadd
rcl
insl
lret
cmp
mov
bound
das
dec
xchg
jge
add
pop
push
jns
add
jns
hlt
shll
sbb
loopne
pop
or
jmp
push
fwait
cmc
call
jbe
test
mov
sahf
mov
jle
notb
jae
data16
in
sbb
inc
insb
xor
cmp
fs
jmp
nop
mov
pop
outsl
jl
inc
pop
xchg
mov
cmpl
jmp
dec
mov
test
add
lahf
clc
popa
push
jnp
fs
cld
incl
int3
rolb
xor
mov
jl
or
dec
dec
add
bound
daa
test
jnp
or
icebp
cld
xchg
test
push
sub
xchg
mov
dec
mov
cli
cmp
add
sbb
sbb
lea
in
dec
fdivs
or
fidivrs
sub
mov
ret
aas
fld
outsb
imul
stc
pop
adc
push
movsl
insb
jb
mov
cmp
jo
mov
nop
mov
xor
push
xor
in
fstp
outsl
sahf
push
and
and
stc
imulb
sub
rcr
mov
jle
mov
cwtl
cmp
xchg
in
test
and
mull
dec
cmp
adc
cmc
test
sub
pop
ds
xchg
xor
loop
push
out
and
pop
add
popa
mov
test
add
jmp
mov
pop
or
out
lds
daa
mov
insb
xor
push
nop
inc
iret
ret
mov
call
mov
int3
mov
push
push
sbb
gs
mov
frstor
cld
ds
lock
nop
scas
inc
das
loope
pop
nop
cmp
fisubrl
loop
push
fiadds
or
in
jl
into
notl
dec
push
jns
cmpb
xchg
or
mov
ja
repnz
in
adc
jge
xchg
jbe
lahf
shl
add
ficoms
mov
cmc
test
mov
mov
xchg
mov
lock
repnz
sahf
out
cmp
std
jp
xor
scas
mov
rcrl
pop
inc
cmpsb
push
xchg
test
clc
pop
daa
jge
lods
adc
jo
insb
pop
aad
test
push
imul
in
loop
movsl
loopne
mov
aam
insl
pop
sar
mov
cmp
imul
loope
mov
negb
fisubrl
lods
push
pop
mov
stc
clc
push
or
and
inc
pop
ja
cwtl
test
shll
fxch
test
pop
jg
sbb
xor
sbb
or
popf
or
adc
push
sbbb
add
mov
adc
shll
mov
sub
fbld
cmp
popf
loop
pushf
ljmp
test
les
ja
pop
out
dec
ficompl
push
adc
push
dec
jne
scas
pop
repz
out
sub
inc
dec
sub
nop
sub
jle
fwait
idivb
push
or
int
sub
sub
mov
mov
jmp
popw
int
aam
xchg
jnp
sbb
daa
stc
negl
jl
nop
mov
daa
aaa
ret
jmp
jnp
sub
es
jmp
xor
inc
mov
pop
ret
mov
push
jne
push
dec
movb
xor
in
out
mov
pop
mov
jns
jg
and
in
xchg
cmpsb
inc
cmp
or
ret
xchg
hlt
push
pop
push
test
repz
xchg
jbe
pop
int
xchg
cmp
push
mov
out
sbb
fs
xchg
xor
xor
push
mov
call
cwtl
xor
sti
add
xchg
add
fcmovne
lcall
sbb
test
push
movsb
repnz
lahf
filds
arpl
dec
mov
lcall
push
inc
cmp
dec
pop
push
cmp
test
or
fdivr
or
rolb
or
int
dec
lods
cmp
sbb
and
inc
cmp
sbb
pop
adc
pop
mov
xchg
pop
jl
loop
sub
call
sub
std
mov
call
pushf
or
dec
xchg
push
ds
dec
jp
xlat
add
cmpsl
dec
pop
lods
push
inc
divb
mov
loopne
xor
shll
loope
aas
in
jmp
add
das
loopne
cmpsl
sbb
push
cmp
xor
and
test
movsl
ja
popa
lods
pop
adc
movsb
and
fstl
testl
jl
adc
bound
xchg
mov
push
pop
add
lret
cmp
inc
pop
mov
repz
xor
cmpsl
lret
add
icebp
ja
leave
adc
nop
and
leave
sti
aaa
pushl
mov
mov
pop
ret
xchg
int3
and
add
dec
je
inc
pop
das
adc
insl
dec
arpl
negl
or
lods
mov
shrl
inc
ljmp
loope
ja
pop
fldl
xchg
dec
jecxz
aam
mov
fs
fwait
repnz
cs
loope
jb
fistl
xor
push
out
popf
pop
lcall
dec
mov
add
jle
push
adc
das
jg
push
adc
imul
dec
and
inc
push
cli
xchg
lock
mov
jl
aas
fsubrs
gs
fwait
pop
ret
pop
xchg
clc
and
add
scas
lret
jne
adc
mov
cmp
inc
mov
hlt
ret
bound
pop
push
sub
add
pop
sub
ficompl
fiadds
pushf
icebp
jnp
jnp
adc
rcll
ror
inc
out
movsb
xor
mov
sub
lcall
jne
mov
pop
into
sbb
nop
sbb
clc
jmp
dec
push
cmpxchg
sbb
pop
jne
mov
ret
lods
jbe
mov
ja
repz
mov
xchg
push
adc
clc
jmp
shlb
notb
adc
inc
push
cltd
cs
mov
filds
loop
cmp
mov
jb
add
iret
ret
add
and
jp
and
js
loop
cmp
imul
ficompl
arpl
pmaxub
sbb
rclb
mov
sub
xchg
xlat
inc
lods
fistpll
inc
sbb
aam
cwtl
pushf
or
xchg
pop
pop
dec
insb
jp
push
incb
adc
add
and
icebp
cmpsl
and
mov
sahf
sub
hlt
push
ds
mov
rolb
pop
lods
xor
dec
loop
bound
inc
loopne
add
mov
lds
jmp
cs
or
jle
sbb
es
mov
loopne
fiadds
int3
fsts
cmp
and
out
mov
filds
fwait
in
or
sbb
das
in
std
xchg
int3
mov
mov
sub
xchg
xor
arpl
push
inc
bound
dec
cltd
pusha
fisubrl
std
je
flds
mov
das
imul
mov
mov
mov
sub
fdiv
fisttps
xchg
idiv
push
test
imul
notb
loopne
lods
cmpsl
in
aam
dec
adc
jb
jecxz
mov
pop
cs
adc
adc
mov
sbb
ljmp
push
mov
imul
mov
sub
fdivl
scas
sti
aas
into
and
in
and
sub
das
xor
add
mov
jcxz
mov
cli
xchg
ret
es
loope
sub
in
adc
outsb
cli
xor
add
sbb
mov
push
xlat
jl
std
adc
sbb
add
insb
rcll
negl
pop
idivl
fs
leave
cld
jl
mov
cmp
mov
push
js
enter
sub
xchg
xchg
test
clc
inc
dec
sub
dec
mov
jb
test
rclb
inc
popf
imul
push
mov
inc
mov
ffree
jns
sti
inc
cmp
rolb
fcom
mov
dec
cmp
jbe
fs
sbb
and
bound
adc
std
arpl
pop
mov
mov
std
notl
jbe
mov
orl
inc
add
xchg
outsb
inc
jp
sbb
imul
int3
sti
push
jae
fidivrs
les
push
cmpsb
pushf
call
dec
xchg
xchg
mov
cmpsl
ret
dec
pusha
adc
pusha
mov
xchg
rorl
mov
hlt
pop
lret
aad
orb
fwait
adc
bound
xchg
es
mov
incb
mov
and
push
stos
dec
das
inc
xor
les
pop
inc
adc
xchg
xor
ja
push
repz
or
sbb
and
mov
sub
adc
or
jno
iret
outsl
repnz
cwtl
aas
les
loopne,pn
test
jno
inc
push
enter
inc
pop
mov
popf
add
mov
cmp
bound
dec
cmp
repnz
testb
sub
adc
cmc
sbb
mov
mov
or
icebp
out
popa
mov
daa
rcll
and
sbb
xchg
add
fidivs
stos
xchg
or
xchg
sbb
ret
fwait
jae
fs
sbb
test
ss
jp
add
add
sbb
push
mov
popa
mov
push
cmp
lret
int3
lcall
adc
adc
cmp
je
repnz
addb
pop
pop
popf
push
aaa
push
and
xor
or
pop
pop
out
push
cmp
cmp
mov
sbb
add
pop
fsubs
push
cmp
pop
dec
mov
jl
push
mov
cli
pushf
popa
cmp
jno
fmuls
sbb
xchg
js
push
mov
xor
imull
jl
dec
or
arpl
mov
shlb
sahf
lock
pusha
push
xchg
push
cs
cli
aam
loop
add
lods
movsb
jb
sti
mov
ljmp
andps
add
popa
push
lret
cmp
lret
out
xlat
fst
jnp
adc
sub
add
mov
inc
jl
fildl
imul
xchg
cmc
mov
cmp
push
xorl
or
adcl
sub
or
pop
mov
jbe
and
xchg
push
call
aaa
inc
mov
fisubrl
dec
jge
int
dec
fwait
jae
addr16
xchg
cmp
sti
and
sub
sub
adc
sub
xor
dec
xacquire
loop
clc
jbe
bound
xchg
sahf
rol
loop
pop
loopne
dec
jbe
cmp
inc
mov
bound
ss
dec
mov
lret
push
pushf
cmp
dec
lcall
into
push
aad
fsts
push
and
sahf
shlb
sahf
jae
loope
lods
test
outsl
and
imul
push
aaa
das
mov
leave
sbb
adc
fadd
sbb
hlt
mov
popa
xchg
arpl
pop
and
inc
loope
xchg
lods
ja
test
in
sbb
jp
pop
sbb
fwait
lea
add
add
outsl
sub
ja
dec
xor
imul
pop
dec
dec
fidivs
and
dec
or
pop
arpl
mov
not
jge
inc
out
push
inc
or
jmp
xchg
xchg
loope
int3
xchg
hlt
test
pop
data16
fimull
inc
shl
mov
adc
int
xchg
mov
dec
fcom
mov
xorps
and
in
push
push
movsb
pop
pop
cmc
lret
nop
call
aam
sbb
adc
sahf
int
sbb
subb
loopne
cmp
and
aam
in
mov
inc
fucomip
and
test
cli
cli
inc
fs
stc
les
dec
xor
daa
xchg
mov
fstpt
sbb
push
int3
repz
insl
or
es
pop
xor
jbe
mov
sbb
fldt
inc
cmc
int3
cmpsl
movsb
dec
pushf
lahf
push
mov
ret
cld
and
test
cmp
mov
jle
pushf
iret
and
fsubl
aam
pop
adc
dec
gs
ficompl
enter
adc
dec
push
cmp
mov
and
sub
inc
mov
fists
sub
js
mov
mov
hlt
negl
les
pop
dec
mov
lret
dec
loope
ret
push
mov
mov
jns
pop
mov
icebp
gs
xor
ja
pop
shlb
fistps
mov
stos
out
ja
insl
sarb
je
cmpsb
mov
movsl
mov
adc
in
lods
in
sti
jecxz
out
sbb
add
nop
arpl
add
gs
pop
es
addr16
rorl
push
lods
lahf
mov
push
std
int
mov
sub
push
push
jbe
ret
mov
cmp
add
push
push
scas
int
gs
cmpsb
sub
or
dec
jns
mov
test
push
int
push
lods
mov
aaa
inc
or
arpl
pop
cmp
sub
mov
jg
jge
fistpl
cli
or
jmp
insl
cmc
cli
push
jno
std
inc
push
addr16
or
xchg
or
popf
mov
jmp
inc
xor
bound
not
pop
std
fwait
out
push
jbe
popa
leave
insb
mov
shll
push
or
and
popa
add
cmc
inc
lods
jb
arpl
jmp
jnp
gs
data16
clc
data16
xchg
nop
or
aaa
pop
sbb
fdivl
add
decb
cmpw
cltd
paddd
pop
add
mov
xchg
mov
xchg
mov
sbb
test
pop
xor
in
jge
leave
pop
clc
dec
mov
mov
cmpsl
push
outsl
sbb
idivl
or
inc
cmp
xor
or
dec
or
sub
mov
push
add
leave
fnstcw
aam
adc
push
pusha
arpl
sbb
add
sub
popa
movsl
mov
sub
jno
fs
xchg
pop
in
mov
adc
in
push
push
ret
push
stc
push
and
pop
out
jae
mov
mov
mov
push
clc
arpl
fs
push
aad
and
outsb
movsl
dec
in
or
adc
adc
pop
dec
repz
pop
mov
and
rcll
in
insl
mov
inc
out
dec
jbe
and
dec
jbe
out
jbe
jecxz
pop
or
xchg
std
xchg
lcall
lock
sahf
cmp
icebp
enter
xchg
cwtl
andb
xlat
jb
shrl
je
mov
cmp
add
jl
bound
xchg
into
addr16
jmp
cli
and
shll
xchg
jnp
out
xchg
int3
adc
jo
popa
shll
xchg
clc
pop
in
dec
es
sbb
loope
xchg
addr16
out
push
jne
stos
enter
aas
scas
mov
sbb
adc
mov
cltd
push
cwtl
scas
sub
cmp
xchg
adcb
testl
push
dec
addr16
repnz
loope
fwait
pop
or
sbb
movsl
fnsave
mov
dec
mov
xchg
push
jecxz,pn
mov
cmp
and
test
pop
push
and
adc
lds
ljmp
push
sti
jno
push
ret
loope
pop
fildl
and
aad
xor
push
sbb
xlat
pop
pop
adc
dec
cli
outsl
loop
das
adc
repz
frstor
stos
push
outsl
arpl
dec
sub
xor
fldl
nop
out
sub
shlb
dec
sub
bound
mov
xorb
jns
ljmp
xor
repz
aas
xor
nop
cmp
sbb
stc
sub
mov
loopne
and
xchg
xchg
pop
xchg
mov
add
rclb
xor
fs
enter
repz
or
jp
scas
xchg
xchg
rcrl
mov
and
mov
jl
xchg
push
jb
aad
test
jp
and
xchg
mov
jmp
xchg
sti
fcomps
and
pop
out
sub
xchg
and
hlt
test
jo
pushf
mov
inc
mov
loope
lret
or
jno
cs
test
loope
imulb
jmp
arpl
adc
popa
imul
stos
jae
sub
or
jbe
jbe
sti
fdivrl
filds
scas
jmp
inc
aad
mov
test
int
xlat
jle
pop
xor
loop
aad
pop
fstpt
ja
andb
and
xchg
mov
cmpsb
bound
dec
mov
add
pop
lock
movsb
push
fsub
mov
cld
pop
sbb
cmp
call
add
in
mov
test
pusha
and
pop
js
add
xor
inc
pop
inc
idivl
and
mov
js
test
idiv
mov
cmp
mov
inc
icebp
adcb
pop
shll
addr16
xchg
fdivrs
add
fs
dec
jo
inc
lods
mov
test
mov
xchg
xor
cltd
mov
fdivrl
dec
jbe
repnz
in
gs
pop
aas
test
cmp
outsb
js
sub
loopne
mov
sbb
jo
je
jae,pn
sbb
out
or
and
cmp
jg
pop
or
jb
dec
mov
fisttps
rorb
inc
leave
and
and
xchg
fs
mov
std
inc
push
inc
add
jo
jle
jge
or
mov
push
dec
jle
adc
xlat
fcmovbe
sbbb
int
movsb
mull
lods
and
jge
outsl
add
stos
push
gs
mov
xor
add
out
dec
jge
sbb
push
fbstp
adc
jno
inc
ss
lahf
inc
adc
or
and
pop
xor
loope
jo
push
mov
ja
pop
pop
adc
roll
xlat
sahf
jne
push
lods
jge
mov
jne
mov
lock
mov
das
shll
into
push
cmp
and
loopne
in
pop
jno
or
mov
push
pop
xlat
cli
mov
dec
out
add
mov
mov
mov
pop
cmc
xor
ljmp
loopne
push
in
dec
push
add
arpl
pushf
xchg
cs
jo
and
mov
je
into
out
jmp
and
inc
add
fistps
dec
add
xchg
fisubrl
fsts
gs
inc
sbb
xchg
ficoms
lret
movsl
pop
add
xor
inc
pop
inc
adc
inc
test
or
pcmpgtb
cmp
mov
ja
stos
xlat
jo
not
lock
clc
iret
cmp
int
mov
jo
pushf
rcr
xlat
idivb
inc
nop
sbb
cltd
pop
cmp
sub
int3
in
aas
xchg
std
data16
sbb
fiadds
enter
or
dec
test
stc
pop
dec
mov
outsl
outsb
xor
lea
add
adc
imul
jb
add
mov
call
adc
dec
stos
xor
mov
inc
fbld
lock
adc
cmp
ljmp
aam
popf
insl
xor
hlt
xor
push
repnz
adc
arpl
dec
adc
daa
push
or
sbb
jnp
loope
out
sub
adcl
outsl
pop
decl
push
rcrl
pop
sbb
and
mov
pushl
test
mov
pop
xor
sub
out
sub
xchg
mov
dec
mov
gs
imul
push
mov
idivl
adc
pop
pushf
jge
xor
and
addl
or
xlat
arpl
imull
cmpsl
adc
jo
loop
jmp
xchg
dec
and
pop
cwtl
and
jbe
mov
mov
call
enter
inc
out
pop
xlat
dec
call
test
pop
aas
sbb
bnd
xor
sbb
divb
push
jg
cmc
push
hlt
push
inc
jecxz
in
mov
jp
push
in
lret
mov
or
hlt
ljmp
rdtsc
and
test
repz
inc
pusha
push
xchg
mov
andb
mov
dec
pop
cltd
les
mov
in
add
jne
in
xor
pop
jbe
mov
sub
fidivs
add
idiv
andl
sbb
sub
cmp
add
dec
or
pop
movsl
enter
and
mov
in
fs
hlt
sub
lcall
int
inc
push
sub
jl
and
jo
and
inc
repz
into
xchg
daa
mov
xchg
outsl
mov
notb
mov
xor
pop
and
stos
sbb
mov
daa
jno
out
call
cmp
mov
into
xchg
icebp
sarl
inc
sub
xchg
sbbl
lods
jo
lea
or
in
sub
fsub
xchg
mov
repnz
xchg
mov
outsl
mov
jae
push
pop
cmp
push
in
xor
in
xor
dec
aad
mov
pop
out
mov
pusha
cmp
dec
dec
imul
in
repz
fisttpl
or
loop
fsubs
pop
daa
xor
js
jecxz
dec
dec
sbb
sbb
jmp
mov
push
in
or
xchg
fidivs
out
inc
jbe
and
subb
dec
cld
cmp
xlat
jo
test
insb
pop
lret
addl
xor
dec
jl
and
rolb
xor
push
cs
fisubrl
inc
and
lods
jb
pusha
xchg
push
inc
aad
ds
in
sbb
mov
fmull
lret
sub
loop
mov
or
xor
cmp
sub
jo
test
xor
call
sub
sbb
and
or
ret
mov
push
cmp
aad
push
shrb
lea
inc
jmp
push
pop
ljmp
cmp
outsb
les
xchg
push
xchg
repnz
cmpsb
cmc
push
shll
fcomps
jno
pusha
aas
cmp
iret
sbb
pop
mov
or
jge
pop
xor
repz
int3
push
mov
nop
or
lea
stos
test
fnstenv
bound
fcomip
mov
in
inc
test
dec
orb
movsb
add
cmp
push
insl
cltd
mov
xchg
repz
jb
jecxz
mov
inc
fdivl
das
add
mov
dec
in
lods
jmp
arpl
subb
js
dec
neg
aaa
sbbw
dec
incb
fwait
push
hlt
adc
not
ret
mov
inc
fidivrl
dec
sbbb
cmp
dec
cmp
stos
arpl
mov
or
iret
negl
xchg
lret
add
outsb
notb
mov
lcall
out
repnz
push
push
mov
lcall
cmc
js
mov
pushf
retw
mov
pop
xchg
cmpsb
or
pop
lcall
popf
add
mov
out
mov
dec
popa
orb
pushf
lods
adc
aaa
sbb
outsb
adc
mov
sub
sub
loop
lcall
insb
xchg
aad
jmp
push
or
push
jecxz
loopne
and
loop
in
mov
movb
int
pop
cmpps
xor
ficoml
inc
pop
lods
out
cmpsb
xchg
call
cmp
or
adc
inc
cmp
add
aaa
xchg
out
pop
mov
jecxz
mov
in
mov
and
dec
imul
and
or
pop
dec
lods
mov
xor
xor
insl
out
ljmp
mov
cs
mov
repnz
push
sbb
xlat
inc
sub
adc
mov
inc
jb
lahf
js
cmpsb
jp
test
jle
loope
add
imul
clc
fwait
jbe
cmc
dec
insl
mov
pop
xor
orb
lds
cmp
pop
ss
clc
in
inc
mov
aad
add
lret
cmp
pusha
aaa
fs
stos
sub
inc
addr16
repz
dec
in
or
out
xor
into
lock
and
rorl
pop
fists
repnz
xor
xor
loope
insl
and
cmp
push
pushf
gs
cltd
mov
out
shlb
mov
mov
lcall
dec
and
add
mov
adc
mov
or
dec
pushf
call
xchg
sbbb
push
stos
enter
and
mov
jno
inc
cmp
and
aas
or
fstp
cli
and
mov
test
cmp
rcl
arpl
lea
out
and
inc
sti
out
adc
ds
mov
xchg
cld
lret
mov
xchg
mov
les
jns
fsubs
sbb
adc
xchg
ljmp
out
or
and
test
lret
int
jle
sbb
push
stc
and
in
inc
jae
and
inc
std
popa
rolb
gs
aam
mov
hlt
pop
out
fs
sub
mov
mov
leave
jl
pop
shlb
pop
vpsubsb
mov
jnp
inc
jp
or
mov
mov
mov
jl
nop
push
loope
push
hlt
dec
jmp
js
mov
aaa
inc
sbb
test
aaa
negb
sarw
daa
sti
add
mov
adc
out
aam
xchg
mov
lea
divb
mov
jmp
mov
push
or
fdivrl
jmp
push
push
ljmp
pop
mov
mov
and
or
mov
fcmovnb
xorb
jo
je
and
xchg
pushf
call
xor
pop
mov
mov
aam
jecxz
inc
stos
std
fs
stc
mull
add
cmp
sub
mov
shl
aaa
cmpsb
inc
pop
clc
jno
xor
xorl
xchg
cld
int3
and
in
jnp
mov
jno
mov
add
inc
test
xchg
iret
in
dec
movsb
pop
aas
dec
pop
testl
aaa
stos
mov
or
cmp
cmp
or
or
sbbb
ret
sbb
mov
mov
lret
mov
pop
pop
and
xlat
pshufw
mov
repz
dec
mov
mov
inc
cld
cmp
jmp
out
mov
and
mov
js
jl
jge
pop
shrl
ret
scas
js
pop
mov
mov
xor
xchg
scas
das
or
mov
and
scas
pop
dec
fidivl
dec
hlt
mov
adc
sahf
pop
mov
or
enter
popa
pop
lods
imull
lock
dec
ja
mov
mov
and
jecxz
pop
sbb
scas
ds
mov
dec
cld
gs
scas
inc
cmpsl
scas
incb
and
pop
imul
adc
adcl
mov
clc
lock
jbe
jmp
add
gs
and
jno
stc
adc
push
mov
mov
hlt
jle
ja
out
or
inc
mov
mov
dec
adc
lahf
cmp
sbb
push
push
xor
push
insl
mov
or
mov
lods
incl
jne
jmp
xor
gs
fidivs
xchg
cmp
jmp
ficompl
out
adc
test
outsl
inc
stos
inc
jb
in
push
dec
lcall
dec
xchg
aas
jl
xchg
loopne
cmp
pop
and
mov
or
and
call
sti
clc
xchg
inc
pusha
movsl
pop
orl
in
out
pop
mov
test
jmp
call
cmpsb
pop
xorl
cmp
dec
hlt
adc
mov
inc
lret
loope
imulb
out
xchg
hlt
hlt
rcll
sarb
rorl
int
xchg
adc
jle
mov
into
push
int3
sbb
aas
push
fisubs
mov
in
call
rcl
xchg
xchg
bound
das
cmp
cmp
andb
jmp
add
mov
sub
adc
or
movsl
jp
js
gs
lods
and
ret
lods
fbstp
mov
bound
push
divb
test
jne
lods
xchg
jb
cmpsb
sub
clc
out
push
cli
adc
sub
xlat
cmpsl
pop
enter
rol
jge
fildl
and
xchg
les
leave
add
orl
ljmp
jb
dec
dec
out
negb
inc
into
out
push
jl
xchg
cmpsl
out
in
cmpsb
sub
pop
push
xchg
push
inc
repz
cmp
out
xchg
mov
ficoms
clc
mov
loope
fbstp
and
add
aas
decb
push
dec
add
ffree
fucomi
xor
jb
mov
jmp
inc
and
xchg
test
push
and
pop
pop
sub
divb
out
popa
aam
cmp
xor
insb
jo
je
ret
loopne
inc
and
sub
sarl
jb
mov
andl
hlt
cmp
movsb
mov
cwtl
rol
int3
jecxz
lods
inc
mov
bound
mov
dec
aam
movsb
push
scas
xchg
outsb
jecxz
pop
push
mov
scas
clc
jo
inc
add
addr16
mov
outsl
aaa
jne
sar
sub
xchg
out
pusha
cmp
jg
xor
pop
push
push
add
cmp
js
insb
cmp
sahf
push
gs
nop
in
int3
arpl
inc
cmpsl
ss
sti
xor
in
jecxz
mov
push
pushl
mov
insl
sub
ret
dec
test
sbb
jl
in
mov
movsl
out
jnp
inc
popa
subl
xchg
jno
inc
sbb
push
xchg
scas
adcb
fs
sbb
hlt
ficoml
adc
pop
xor
mov
rorb
xchg
imul
xor
in
add
pop
mov
idivl
cld
ret
clc
test
inc
ljmp
jecxz
std
imul
adc
dec
sti
xchg
aad
jmp
sbb
rolb
sbb
jle
addr16
dec
call
jae
jb
xchg
mov
enter
mov
mov
fsin
push
xor
push
sub
vpslld
in
clc
xabort
or
nop
pop
daa
dec
pop
mov
pop
mov
adc
xor
das
push
out
and
add
sbb
loope
push
jns
xchg
jl
sarb
cltd
inc
jae
inc
call
push
movsl
sbb
cmpsl
sbb
jo
cmpsl
push
movsb
xchg
mov
and
fiadds
xchg
xor
mov
loope
push
jae
add
popa
insl
cmp
push
mov
das
cs
in
negb
int3
fstp
out
je
sub
outsb
sahf
pop
faddl
loop
jo
mov
arpl
cmp
rclb
inc
push
ret
or
xchg
nop
pop
sbb
xor
and
pop
pop
mov
jo
mov
outsb
add
stc
mov
test
rclb
push
sbb
jmp
icebp
nop
xchg
or
stos
pop
add
jle
movsb
jae
sbb
pop
push
adc
cmpsb
sub
in
mov
pop
popa
push
pop
bnd
jae
mov
mov
sbb
jge
and
mov
clc
mov
or
insl
leave
jbe
push
das
mov
mov
call
inc
sub
clc
xchg
shll
or
dec
test
test
jmp
sub
dec
push
and
lcall
or
mov
adc
das
mov
popa
push
jp
fistps
jecxz
pop
push
sub
repz
jge
aas
cmp
add
mov
push
popa
mov
dec
xchg
jl
inc
or
mov
stc
dec
addl
in
les
iret
nop
mov
packssdw
cmpsl
add
mov
jne
loop
das
jae
xor
cs
clc
jae
lret
shlb
or
jbe
repnz
adc
movsl
add
push
inc
mov
fsub
push
test
mov
jb
cmp
sbb
cmc
clc
jecxz
jne
fnstcw
ja
inc
push
in
or
mov
mov
js
sbb
dec
imul
cwtl
insb
or
or
cltd
pop
add
or
cmc
out
sbb
xorb
hlt
icebp
fmul
imul
cmp
sub
mov
or
loopne
sbb
ret
arpl
pushf
push
mov
and
xchg
mov
push
std
lahf
mov
and
inc
imul
iret
jmp
adc
lahf
cwtl
hlt
adc
jbe
jmp
mov
inc
xchg
push
int
pop
fidivs
mov
push
lahf
shll
cs
xor
mov
push
loopne,pn
sbb
std
mov
fisubs
pushf
clc
fistps
stos
icebp
shrb
lahf
jg
test
out
movsb
lea
push
movsb
mov
mov
sub
loop
xor
inc
mov
push
add
mov
sub
cs
jnp
mov
imul
ja
rclb
mov
cltd
cmp
mull
imul
inc
xor
cmpsb
ljmp
clc
jns
cmpsb
dec
cmp
adc
imul
pop
pop
mov
js
sub
jns
inc
push
jnp
sub
in
pusha
or
pop
or
lds
cmp
pop
inc
fwait
sbb
stos
dec
scas
bound
and
mov
and
popa
movsl
xor
outsl
ss
pop
test
xor
sbb
repz
pop
out
or
outsb
jno
subb
push
cmp
cmp
cltd
jae
fwait
sbb
test
fadd
mov
dec
ljmp
xor
mov
mov
or
shl
xor
jns
or
add
lret
daa
jae
adc
add
xchg
aaa
lods
loopne
sbb
and
movlps
pop
test
push
imul
fmuls
push
movsb
xchg
push
int3
js
test
adc
stos
dec
mull
jmp
mov
in
outsb
add
popa
adc
imulb
pop
popa
in
xor
ss
jno,pt
jmp
add
add
cmp
mov
cltd
and
push
repnz
mov
mov
cmpb
sbb
mov
jge
pop
pop
cmpsb
stos
dec
shrb
cwtl
sbb
cld
ja
cmpsb
in
dec
fs
add
dec
mov
popa
adc
lods
jnp
lock
jge
cmp
ss
cmp
std
jns
aam
lock
sbb
scas
xchg
jne
cmpsl
adc
lret
mov
jne
lods
stos
pop
shlb
aad
sub
fiaddl
add
mov
adc
in
test
rcll
cmp
js
cmp
xchg
cmp
sti
jmp
sbb
add
lcall
cmp
inc
inc
dec
mull
sti
dec
mov
clc
cmp
and
inc
push
lods
inc
mov
and
fwait
ja
adc
push
and
cmp
rclb
mov
aam
xor
adc
int
faddl
jle
push
popf
lods
xchg
divb
cld
adc
sbb
call
cmp
outsb
mov
fcmovnbe
xchg
lret
xchg
test
dec
fdivl
dec
mov
cmp
outsl
cmp
in
movhps
test
mov
or
hlt
leave
cmp
inc
dec
sar
or
out
cltd
sbbb
jb
es
sahf
clc
adc
mov
push
pop
push
pop
cltd
push
mov
push
test
je
pop
push
in
xchg
sbb
push
call
out
test
sbb
jmp
push
add
add
pusha
mov
stos
xchg
xchg
xor
aad
fisttps
popf
int3
mov
add
push
add
pop
jbe
insl
pushl
out
stos
xor
push
dec
mov
das
pop
aad
sbb
adc
or
add
std
in
sub
in
pop
sahf
adc
pop
jno
push
jge
jecxz
mov
lcall
aam
cmpsb
ds
inc
lahf
lods
aaa
loopne
stos
mov
ja
jno
aam
pop
dec
mov
mov
dec
xchg
pop
cld
stos
push
hlt
out
xchg
icebp
mov
test
jne
outsl
jle
mov
jecxz
aas
sbb
insb
inc
mov
cld
pusha
sbb
push
subl
mov
mov
out
sbb
fdivrs
fsubrs
rclb
adc
mov
push
xchg
pop
cmp
push
out
jecxz
outsl
shrb
fcoml
pop
add
mov
pop
out
xor
fistps
dec
add
outsl
aam
or
jp
fimull
leave
xor
ds
pop
xor
je
and
int3
xchg
test
aas
mov
jp
mov
je
push
xchg
adc
lret
jle
aam
adc
pop
dec
sbb
icebp
repz
out
rorb
ficoml
jmp
repnz
mov
push
es
adcl
filds
into
push
and
xlat
popf
dec
mov
mov
in
das
xchg
lahf
and
sub
adc
lret
test
jno
or
lret
fsubl
xchg
pop
sahf
cmp
mov
shlb
pop
mov
cmp
stos
or
mov
push
negl
test
inc
pop
push
xor
sbb
cmp
hlt
inc
push
add
jecxz
xor
pusha
int3
mov
ret
inc
nop
lret
xor
orb
push
loopne
mov
testl
cltd
mov
fld
test
cmpsl
stos
sub
out
sbb
adc
ror
in
sbb
cmp
leave
hlt
aaa
stos
cmp
in
pop
lea
pop
lea
nop
aas
subl
cmp
rcr
adc
dec
in
sub
inc
jbe
repz
and
lret
mov
les
cmp
jno
fldcw
dec
add
jne
xchg
pop
pop
xchg
cwtl
jns
loope
dec
int3
pop
cld
mov
add
xor
xor
shll
addr16
repz
pop
das
jbe
gs
divl
fcmovnbe
inc
stc
dec
mov
lods
jmp
daa
lods
ss
jnp
add
mov
outsl
cmp
imul
fdivs
into
mov
inc
cld
inc
mov
ret
sbbl
mov
cmp
outsl
loopne
or
popa
mov
cmp
pushf
sub
scas
inc
fs
out
mov
dec
cmpsl
mov
es
repnz
insb
cmpsl
adc
add
mov
push
mov
ret
mov
dec
lcall
jmp
xor
jbe
sub
nop
insb
cmp
mov
jo
mov
sbb
pop
shlb
dec
in
scas
push
shl
sbb
in
sbb
mov
xchg
mov
ucomiss
fs
dec
sarl
daa
mov
nop
mov
mov
incl
adc
xor
fidivl
mov
pop
or
dec
out
jge
jmp
ret
fs
leave
faddp
repnz
push
cmp
fwait
xchg
insl
lret
orl
mov
jle
sahf
dec
adc
inc
test
and
loopne
les
clc
fists
pusha
mov
pop
xchg
hlt
adc
cmp
xor
dec
mov
xchg
sub
std
lea
xchg
mov
movsb
jle
and
sbb
dec
daa
inc
and
and
call
pop
add
out
out
fs
cli
lock
adc
jns
dec
std
orb
es
mov
stc
mov
cli
out
stc
in
fnstenv
inc
mov
ds
push
pop
into
mov
ret
jge
sbb
imul
cmpsl
pop
in
idivl
jb
mov
pop
add
out
mov
testl
mov
jns
iret
xor
rcrb
push
dec
pop
fnsave
roll
aaa
mov
xchg
bound
xchg
mov
and
fmuls
and
mov
jge
push
cmp
imul
je
pop
sbb
aad
push
sahf
leave
or
divb
test
es
pop
jmp
mov
inc
sub
mov
pop
insb
cmp
or
xchg
xchg
shl
xor
sbb
mov
dec
xchg
adc
addr16
xchg
fsts
sti
fsubr
xchg
in
mov
jp
push
adc
mov
add
jno
clc
ljmp
cmp
adc
popa
jne
cmp
es
aas
std
nop
lods
jns
xor
xor
sbb
stc
inc
mov
scas
or
pop
cmpsb
add
mov
xchg
outsb
push
cmpsl
je
or
lds
adcl
bswap
push
lods
pop
sbb
je
add
jnp
sbb
jbe
subl
lret
xchg
int3
or
cmp
pop
push
out
adc
cmpsb
ss
xchg
ret
xlat
es
add
sbb
fcmovbe
shrb
cmp
negb
clc
sub
xchg
xchg
dec
shlb
cmc
sbb
imul
push
jg
mov
aam
popw
xchg
and
out
lahf
adc
mov
dec
sub
mov
sti
imul
sbb
insb
test
or
add
adc
arpl
clc
fisttps
mov
fdivl
enter
pop
mov
enter
xchg
adc
imul
insb
call
movsl
insb
into
jp
loopne
add
jg
cmp
xchg
in
mov
ror
leave
or
xchg
inc
dec
mov
in
adc
xchg
fstps
das
fldenv
inc
iret
rcll
sbb
jmp
ficoms
call
data16
sti
mov
push
imul
cmpb
jg
frstor
rcrl
dec
int
sahf
pop
cmp
xor
or
int
sub
les
adc
mov
jl
mov
cmpsb
hlt
loopne
cltd
outsl
jns
cli
loopne
inc
or
lds
fdivp
mov
aaa
mov
pop
and
push
sub
rclb
mov
inc
pop
add
sub
pop
loop
and
xor
dec
sarb
iret
xchg
into
add
insb
test
cmp
sahf
dec
push
pop
int
roll
xor
jnp
xchg
in
adc
pop
xor
jecxz
push
add
aas
jnp
aad
xchg
faddl
dec
jb
mov
jp
fisubs
push
iret
fbstp
pop
xlat
rcll
add
test
js
add
xchg
cmpsb
push
fdivr
push
stos
push
insb
fwait
inc
lods
mov
xchg
adc
int3
cmpsl
xchg
sbb
add
add
notl
out
int3
push
std
cmc
callw
mov
sub
cltd
je
mov
dec
in
stos
cmc
sahf
pop
or
xor
inc
xchg
packssdw
loop
aas
adc
jb
cmp
xchg
out
ds
push
mov
jecxz
mov
in
ja
mov
sbb
movsl
fstpt
mov
enter
adc
xor
add
loopne
adc
in
lret
in
mov
fadds
pop
fs
mov
inc
out
xchg
mov
sbb
xor
push
xchg
jl
jmp
insl
sub
testb
out
aad
mov
test
push
loope
add
mov
insl
insl
addr16
imul
cmpb
add
fiaddl
les
inc
cmp
push
push
stos
cmp
lds
lahf
sbb
sub
add
cmp
inc
roll
cmpsl
shrl
mov
dec
in
mov
push
daa
mov
mov
and
mov
sbb
fstpt
in
mov
xchg
repz
push
pop
mov
outsl
mov
adc
outsb
mov
test
out
into
or
popa
push
js
jns
xchg
outsb
sub
cmp
cld
daa
jns
mov
jmp
in
test
daa
fiaddl
add
repnz
push
sbb
sbb
mov
les
fs
out
sbbb
outsb
xchg
jmp
insb
sbb
pop
add
cmpsb
cmp
xor
inc
or
lods
insl
pop
aam
mov
push
and
fistpll
stos
add
jmp
add
pushf
outsb
nop
jbe
jne
push
test
or
push
xchg
cltd
xor
out
xchg
mov
pop
movsl
mov
xchg
add
or
inc
testl
ds
lds
pop
dec
sti
xchg
scas
mov
mov
xchg
push
imulb
inc
bswap
rorb
cmpsl
push
fwait
pusha
hlt
daa
repz
xor
data16
mov
into
aad
negb
fstpl
xchg
mov
xor
jnp
adc
xchg
ds
dec
sbb
ja
and
movsl
in
out
insb
sti
fdivs
add
fwait
mov
cli
xchg
pop
sub
push
cmp
mov
cmp
int3
loope
out
push
add
push
pop
js
xchg
test
insb
out
cltd
jae
mov
cmpsb
mov
in
or
nop
and
lods
test
das
bound
das
add
fnsave
dec
sbb
mov
inc
inc
ljmp
push
imul
sahf
push
hlt
sbb
dec
or
jns
nop
sbb
stos
sbb
int3
mov
lcall
mov
out
and
push
hlt
movsb
dec
shrb
sahf
bound
ss
sbb
out
push
mov
and
pop
es
inc
pop
add
mov
call
loope
mov
adc
or
adc
xor
insb
loop
or
cmp
push
mov
or
sub
in
push
xorl
test
jo
mov
cs
ret
movsb
jne
xchg
add
into
jns
scas
stos
cmp
psubusw
jns
outsl
aam
out
pop
cmp
ret
mov
outsl
dec
call
dec
jmp
pop
mov
dec
das
shl
rolb
mov
jmp
push
in
movsb
sbb
jnp
xchg
orb
cmp
mov
inc
aaa
divb
sbb
addr16
mov
data16
adc
pop
lcall
jmp
jg
rcrl
or
inc
sahf
ja
iret
sbb
test
jae
adc
and
sbb
jo
sub
shrb
inc
pop
addb
mov
cmpsl
and
js
inc
jnp
pop
pop
aam
jne
icebp
test
fmul
and
scas
shrb
or
inc
xchg
loope
and
iret
out
dec
xchg
aad
jecxz
ss
cmp
add
pop
leave
sbb
lahf
dec
pusha
jle
dec
repz
inc
addl
outsl
scas
mov
idiv
dec
ss
ret
stos
push
loopne
cld
jl
in
bound
xchg
aam
sbb
mov
scas
repz
test
inc
adc
rorl
xchg
mov
push
add
jle
aad
in
psubq
lods
mov
int
add
lret
jecxz
inc
or
mov
insl
repnz
xor
mov
and
enter
test
gs
addw
xchg
cmpsl
jne
push
lods
mov
shll
leave
fwait
cli
mov
cmp
and
inc
add
or
mov
cmpb
add
fdivr
or
rcrl
imul
imul
adc
or
mov
orl
scas
std
sbb
pop
add
adc
sti
das
sub
cmp
out
jbe
out
push
sub
adc
inc
inc
rcrb
jmp
or
mov
cmp
adc
fs
aas
repnz
or
sbb
inc
movsb
mov
in
dec
stos
loop
sbb
sub
aad
js
mov
rorl
imul
xor
sub
cmp
inc
mov
icebp
leave
sti
jbe
adc
js
jne
xchg
ds
mov
or
sub
loop
and
in
daa
jmp
popa
jo
lods
aam
mov
jp
mov
ja
pusha
inc
push
arpl
mov
out
inc
sub
fwait
jno
jns
jnp
dec
lds
stc
cmp
scas
mov
jp
mov
sarl
pop
outsl
insl
arpl
shl
push
cmp
lods
imul
ret
pop
push
and
jmp
push
cltd
pop
adc
int3
ja
loop
outsb
iret
adc
nop
xchg
add
cmpsl
and
scas
les
jmp
pop
lea
addr16
or
cwtl
stc
jbe
ja
lods
aad
xchg
xchg
jp
in
dec
mov
cltd
ret
imul
es
jns
or
out
in
push
lea
push
dec
dec
xchg
lcall
and
jb
sbb
mov
sub
jl
mov
icebp
aaa
mov
addr16
movsl
rolb
ljmp
cmp
dec
jne
ficomps
shl
jmp
lahf
dec
dec
mov
pop
lret
insb
add
fnstsw
in
pop
fwait
cld
xor
stos
leave
cmc
cwtl
pop
cmp
dec
enter
ffree
js
add
sbb
pop
and
mov
pop
jbe
jecxz
clc
lds
bound
push
div
mov
outsl
call
mov
pop
int3
flds
out
pop
out
sub
add
mov
push
jne
loop
mov
movsb
outsl
push
inc
insl
pop
mov
loope
outsl
push
arpl
aam
cmp
aam
int
es
hlt
fsubp
sub
imul
mov
jno
dec
xor
dec
mov
mov
or
sbb
stos
in
cmpsb
mov
push
repnz
fdivrl
clc
roll
ljmp
pop
jae
mov
cld
popa
pop
arpl
in
cld
sbb
mov
addr16
inc
repz
stos
test
push
pop
push
std
aaa
jns
imul
mov
adc
lods
int3
stos
push
fs
aam
lock
push
movsl
and
lret
lret
push
outsl
sbb
adc
ficomps
xor
fnstenv
sub
pop
xlat
fsubl
add
xlat
sbb
loope
roll
push
sahf
icebp
pusha
popf
test
sbb
adc
popf
cmpsl
cmp
ds
lock
gs
jp
or
mov
ss
cli
jmp
addr16
push
loope
stos
fcom
xor
xchg
adc
fistpll
out
jno
out
jns
pop
dec
es
lret
cld
shrl
cmp
or
dec
stos
jecxz
mov
cmp
into
adc
stos
out
jno,pt
test
movsb
xor
fwait
ds
xor
push
or
cmc
and
pop
jmp
pop
jmp
add
pop
lds
mov
leave
push
add
sbb
sbb
pop
adc
dec
sahf
movsb
mov
mov
pop
jmp
arpl
adc
xor
inc
sbb
pop
rorb
xchg
icebp
mov
mov
repz
push
jge
in
inc
jp
cs
dec
std
mov
cwtl
dec
push
mov
jne
outsb
sbbl
xorb
sub
fistpl
icebp
xor
push
int
out
add
sub
mov
xlat
xor
fcoms
mov
mov
xchg
dec
sub
pusha
into
or
fs
rcll
mov
aam
outsb
sti
jge
shlb
out
or
lret
mov
inc
push
rcl
fisttpl
mov
fwait
adc
clc
shlb
rol
jno
test
in
movsl
aad
push
xor
lock
mov
lods
sbb
xor
add
lcall
adc
adc
insl
pop
mov
add
cmp
adc
xchg
jge
jmp
adc
xchg
push
cld
and
popf
orb
push
loop
and
rolb
loopne
test
push
daa
xchg
jno
imul
push
mov
adc
jle
xor
sar
add
jl
js
stos
adc
ret
mov
cwtl
imul
lods
inc
inc
jp
push
aad
jo
xchg
jle
dec
and
adc
test
clc
cmp
push
int
rcll
aas
aas
xchg
in
sbb
fistpll
lock
dec
pop
insl
add
add
std
cltd
xchg
push
sbb
sbb
or
push
xchg
cmp
cmpsb
sub
scas
and
and
push
enter
xor
xchg
xor
and
pusha
out
jp
cmp
add
out
adc
shr
mov
pusha
das
popf
push
adc
mov
xchg
movb
sbb
cmp
in
cmp
adc
loopne
mov
xchg
pushf
int
sbb
add
out
out
cmpsb
cmp
std
mov
xchg
mov
fsubs
cmpsl
add
mov
dec
pop
aad
outsb
mov
push
push
mov
es
xchg
mov
and
repz
xchg
rcrl
lods
rcrb
jge
pop
xor
in
push
dec
inc
aad
inc
popf
pop
mov
fsubl
dec
inc
pop
xchg
push
sti
dec
insl
jae
adc
mov
pminub
and
lea
push
pushf
xchg
aas
xchg
out
in
sub
adc
pushf
arpl
mov
sbb
pusha
aam
cmp
imul
mov
and
or
call
fs
pushf
or
adc
and
bound
cmp
out
data16
push
leave
jae
fdivs
xorb
jge
xchg
inc
cmp
jecxz
enter
test
scas
std
lock
std
stc
addr16
cltd
jl
mov
imul
push
inc
movsb
inc
or
loop
orl
jnp
ljmp
pushf
pop
ret
cltd
lock
inc
and
jmp
push
fst
sbb
in
icebp
aam
lret
aas
loope
xor
rcr
ret
cmpsb
ds
stos
nop
mov
cs
push
ja
jmp
add
pop
and
mov
test
mov
bts
mulb
xor
jl
jbe
xchg
loope
negb
and
and
mov
sbb
sub
xchg
adc
js
pop
shll
xlat
dec
xchg
push
iret
jmp
pop
jp
and
pop
cmpsl
push
hlt
adc
into
xchg
rcll
or
mov
adc
enter
test
fsts
xor
ret
pusha
push
loopne
in
ja
push
stos
mov
dec
or
cld
cmp
icebp
mov
das
scas
ret
inc
add
add
sub
or
pop
out
fs
pop
pop
rclb
fstl
test
ficoms
xchg
jno
cmp
jp
subb
push
in
dec
or
pop
jns
or
jbe
jle
push
ret
jae
cmp
in
mov
enter
add
adc
mov
movsl
cld
ret
adc
lea
pop
fcomi
push
cmp
xchg
push
std
loope
inc
out
in
aas
es
ficomps
cmp
cmp
xchg
cltd
jp
inc
repnz
ljmp
adc
call
fabs
pop
adc
fwait
and
inc
sub
dec
inc
cmp
jne
xor
ds
out
insl
out
mov
subb
fists
adc
hlt
dec
adc
ljmp
sbb
jp
mov
cmc
mov
nop
inc
pop
cmp
mov
pop
fucom
add
scas
or
mov
in
dec
push
mov
sub
lret
and
sbb
sub
adc
cwtl
pop
lock
cmpsb
cmc
xchg
jp
lock
dec
or
je
jne
ret
xlat
pop
add
test
test
imul
dec
push
jg
push
pop
mov
test
and
dec
push
dec
jmp
sbbl
sahf
insl
out
repz
xchg
cmpxchg
push
ds
aad
or
mov
mov
movsl
popa
xor
out
pop
jmp
xor
incl
imull
test
sub
xchg
cmpsl
inc
int3
stos
mov
cmpb
push
fwait
cmp
addr16
xor
andl
outsb
mov
fmulp
jo
mov
popa
sbb
and
cs
or
jmp
and
cmc
mov
pop
aaa
or
shlb
loop
mov
inc
test
mov
or
mull
testb
fcompl
cmp
daa
es
cmp
aam
add
lret
push
lcall
lds
xchg
mov
pop
add
cmp
movsb
cltd
push
mov
jle
lret
hlt
dec
jge
dec
movl
and
aam
and
and
push
inc
jp
in
ljmp
fimuls
imull
mov
popa
mov
push
repz
mov
fwait
push
je
sub
lcall
xchg
cmpsb
imul
xchg
mov
outsl
gs
and
hlt
loopne
stos
sub
mov
sub
in
cmc
pop
fbld
dec
xchg
rolb
lds
iret
and
jae
mov
mov
aas
jmp
and
inc
addb
lcall
pusha
jns
or
popf
das
adc
popa
lret
stos
jl
mov
insl
imul
xchg
and
mov
and
mov
or
jecxz
and
cmp
mov
xchg
test
sbb
inc
sub
dec
jmp
xor
mov
loope
dec
adc
add
cwtl
addr16
nop
les
cld
das
xchg
or
dec
cld
out
xchg
xchg
mov
enter
aad
xchg
adc
mov
orb
ljmp
mov
outsb
test
dec
mov
and
and
push
inc
fstpl
lcall
pop
inc
fcmovnbe
iret
jbe
dec
pop
sbb
out
mov
add
cmpsb
xchg
stc
mov
insl
push
aas
loop
xor
mov
xchg
push
pop
xor
fadds
pop
lret
ret
lds
mov
sbb
in
hlt
test
adcb
jb
pop
dec
fmulp
xor
iret
roll
hlt
jo
xchg
loope
add
test
and
mov
push
mov
mov
jecxz
inc
in
sub
out
cmp
push
loope
cmp
jne
cmp
ljmp
or
das
mov
aad
imul
dec
sarb
cmp
popf
sbb
adc
inc
int
or
loop
push
jbe
fwait
mov
mov
call
mov
lcall
test
xor
mov
mov
inc
aam
lret
jg
pop
stc
cs
mov
jae
jge
ss
mov
jno
xlat
orl
mov
push
add
daa
sbb
sahf
shll
xor
sub
cmp
xor
out
inc
jle
cmpsb
or
mov
pop
fprem1
mov
lcall
notb
adc
jecxz,pn
push
mov
pop
jo
pop
es
xchg
mov
lret
xchg
mov
jle
pop
mov
mov
into
in
push
in
insl
jbe
push
mov
xchg
dec
sbb
mov
and
cmp
cli
mov
jmp
shll
push
xor
inc
lods
bound
into
cmp
jmp
push
xorl
in
jnp
stos
test
in
pushl
xchg
insb
rolb
gs
xor
mov
lds
fsubp
add
out
adcl
lret
rcll
xchg
jns
cmc
cmp
mov
cmp
sub
in
sbb
push
dec
jle
les
and
out
xchg
in
test
popa
adc
cmp
js
dec
test
jb
sarb
lcall
js
repnz
and
pop
inc
cmp
adc
cli
mov
es
mov
sti
jnp
stos
es
mov
push
movb
add
push
insb
or
xchg
mov
inc
jecxz
es
test
mov
jo
inc
or
adc
loope
xchg
mov
pop
icebp
mov
fidivrl
and
add
push
ds
mov
ret
sbb
addr16
adc
sbbl
or
push
xchg
lods
and
push
hlt
cmc
ficomps
lods
dec
inc
mov
mov
cltd
loop
mov
jg
cli
aam
dec
mov
inc
dec
mov
popw
adc
cwtl
ret
in
push
orl
icebp
daa
cmp
out
ja
sbb
rolb
sub
fwait
shrl
sub
loope
mov
les
jbe
stos
jg
mov
loop
sub
sub
xor
push
pop
xor
pop
in
neg
outsb
fwait
mov
in
push
hlt
sbbl
movsb
push
jmp
xchg
and
notl
fs
inc
lahf
mov
enter
repz
sub
lods
js
test
cmp
loopne
jl
data16
out
loop
jge
or
lods
sti
or
inc
push
repnz
or
mov
in
int3
pop
imul
pop
xlat
movsl
push
jecxz
and
dec
jns
push
fimuls
call
mov
lcall
push
int3
dec
sub
jecxz
pop
mov
fsubs
lret
add
push
loopne
mov
push
dec
mov
sbb
int
rcrb
test
call
add
aad
push
and
fisttpll
jge
adc
pop
outsl
das
xchg
pop
ljmp
out
jp
ljmp
outsb
cmc
imull
or
jno
add
xchg
or
mov
inc
pop
aas
nop
sbb
sbb
inc
xor
leave
inc
push
add
repz
mov
mov
jmp
std
xor
push
in
inc
pop
insl
das
cvtpi2ps
in
cmc
cwtl
push
cwtl
movl
cwtl
movsl
mov
dec
push
lret
rcrl
sahf
scas
movsl
out
adc
adc
push
mov
fimull
cmp
cmp
addr16
outsb
ss
pop
ja
stos
dec
dec
sbb
pop
push
sti
push
cmp
subb
or
mov
jl
xor
out
jmp
jmp
cmp
loope,pn
lahf
xor
and
pusha
scas
imull
stos
mov
add
inc
dec
or
fmuls
cmp
mov
idivl
mov
ss
loopne
imul
or
mov
cmpsb
xchg
scas
int3
adc
mov
fstpl
jmp
test
jle
rclb
jp
cmp
cld
addr16
and
mov
xlat
shrl
rcr
sbb
roll
jne
mov
adc
flds
aad
sbb
les
sarb
mov
jb
xchg
scas
les
and
push
call
mov
add
int3
jg
pop
das
cmp
add
sti
xchg
adc
test
and
jno
gs
fmul
mov
dec
pop
ds
mov
lods
ret
add
cmp
sub
sub
repz
inc
in
add
push
pop
popa
push
xchg
jge
je
sbb
mov
insb
andl
enter
xor
mov
pop
cmp
dec
pop
push
mov
negl
add
pop
test
lea
sbb
ds
aad
fiaddl
jnp,pn
adc
adc
imul
ljmp
or
mov
jbe
insb
lods
ds
sub
in
dec
fcoms
ds
dec
pop
xchg
push
fcomps
xlat
fs
dec
mov
mov
test
sbb
cmp
fmull
repz
and
dec
sti
out
pop
sbbb
dec
push
fwait
pop
hlt
dec
iret
cmc
fcom
daa
cmpb
cmc
inc
dec
hlt
mov
rorb
cmp
cmpsb
xchg
pop
lock
nop
push
out
loopne
data16
and
je
ret
ficomps
xlat
mov
pop
and
jns
loop
faddl
leave
push
dec
pop
adc
mov
imul
stos
rcrb
int3
jl
or
fisubrl
pop
mov
pop
hlt
js
inc
call
mov
push
or
lret
dec
mov
xchg
xor
das
push
fdivrs
xor
adc
fabs
cli
jle
cwtl
inc
shrl
loopne
sbb
mov
popf
adc
call
mov
xchg
clc
ljmp
insl
insl
iret
dec
sbb
push
and
dec
ret
sub
and
pop
cli
rolb
sbb
xor
cltd
dec
sub
inc
sbb
es
mov
push
nop
and
test
gs
xlat
imul
mov
aad
inc
ds
mov
scas
dec
mov
jmp
andl
ret
xor
rorl
xchg
insb
daa
vcvttps2dq
adcb
sahf
mov
xor
ss
cmp
ljmp
mov
inc
or
xchg
pushf
xchg
mov
shlb
mov
outsb
jle
adc
xor
dec
push
xor
orb
lods
fidivrl
inc
fwait
imul
sbb
jae
or
cmp
loopne
and
outsl
mov
adc
rol
mov
sahf
push
fisubrl
pop
mov
pop
sub
inc
push
xchg
mov
andl
lret
pop
mov
lcall
xchg
mov
int
in
sbb
dec
mov
arpl
lods
or
add
call
gs
mov
xchg
jmp
imul
test
and
mov
mov
or
dec
push
sbb
loopne
aaa
sub
xchg
jne
popa
ljmp
cmpsl
aas
andl
stc
xor
and
jl
jge
cwtl
mov
xchg
sub
in
pop
mov
or
adc
pop
jle
sahf
mov
ds
pusha
test
cltd
aad
cmp
inc
jne
repnz
sarl
popf
inc
sti
rolb
pushf
push
cld
jae
ja
pop
loope
or
aam
adc
rcl
adc
dec
sar
xchg
mov
push
or
subb
mov
cld
push
push
hlt
inc
xor
xlat
into
in
mov
icebp
leave
ds
in
imul
rcrl
xchg
pop
and
mov
movsl
jnp
push
movl
std
and
fisubs
pop
addr16
xchg
mov
mov
and
xor
add
clc
rclb
add
xchg
push
int3
mov
popf
jne
adc
notb
leave
pop
mov
dec
clc
cmp
mov
xchg
xor
sub
add
shll
shrb
es
sbb
cmp
pop
xor
and
das
stos
popf
sbb
jecxz
cltd
jle
inc
lret
nop
pop
adc
in
pop
mov
xchg
mov
shr
jp
sub
sbb
sbb
jp
lods
mov
lahf
xor
flds
adc
out
js
dec
pop
popa
pop
adc
mov
add
leave
cwtl
xor
lahf
mov
sbb
sbb
add
mov
stc
sahf
int3
mov
sub
pop
and
mov
cli
mov
mov
mov
dec
cmp
mov
shll
mov
subl
pop
stc
aam
test
rorl
in
jno
lcall
cmc
sub
ja
adc
push
jns
addl
call
ret
and
push
ja
xor
cmpsl
rcl
add
xor
sahf
add
cmp
add
jnp
inc
adc
dec
push
sahf
xchg
cmp
fists
popf
gs
mov
fisttpll
xlat
gs
adc
mov
test
cmp
idivl
iret
aam
adc
fsub
js
bound
outsb
pop
adc
in
lret
movsb
and
jno
xor
pop
or
fsubrs
popf
sahf
mov
push
imul
aas
mov
mov
pop
loopne
sbb
cmp
push
push
outsl
dec
jl
ja
pop
mov
push
repz
adc
jo
dec
mov
daa
shll
sarb
or
adc
cmp
daa
push
lret
pop
xchg
add
dec
mov
in
movsb
shrl
dec
ret
pop
sbb
push
mov
ret
push
enter
add
push
xchg
jns
sbb
sub
jecxz
sbb
inc
imul
inc
out
es
adc
iret
notl
xchg
sub
mov
sbb
test
and
aas
bound
push
aam
ficoms
mov
cltd
mov
jmp
jp
push
out
mov
aad
cmp
decl
xor
arpl
cld
xlat
stos
dec
or
xchg
inc
fisubrs
xor
and
xchg
push
jge
sub
xor
xchg
sbb
lock
pop
adc
push
stos
cmp
mov
test
fidivrl
jmp
clc
fldcw
or
inc
rcll
sub
adc
lcall
adc
cmp
xchg
mov
jbe
pop
cmpsl
mov
aaa
aas
jl
push
in
sub
mov
or
cmp
out
push
pop
sbb
pop
std
fwait
iret
jno
inc
adc
or
loopne
sub
dec
add
adc
pop
jmp
push
repnz
andl
inc
add
pop
jnp
aad
pop
or
fcoms
adc
mov
lods
test
leave
pop
lret
bound
sbb
clc
or
imul
add
cmp
push
inc
rolb
push
xor
jecxz
add
or
mov
lods
fadds
and
add
insl
call
into
mov
and
jo
out
adc
cmp
call
mov
add
ret
orb
leave
pop
int
xchg
pusha
rcrb
and
xor
cmp
sbb
push
aam
push
inc
adc
adc
shlb
xchg
scas
adc
pop
jg
loope
test
jg
pop
data16
jbe
lods
movl
push
daa
dec
inc
and
pop
adc
rclb
adc
fdivs
enter
addr16
push
mov
push
mov
add
push
add
xlat
jle
ja
add
pop
loop
stos
scas
inc
and
es
aaa
mov
dec
push
mov
ja
sbb
or
popf
mov
decl
rcll
les
pop
inc
inc
pop
xchg
jae
fidivl
mov
or
repz
loop
push
mov
ja
out
jb
repz
sarb
or
scas
cmp
stos
mov
fstl
push
dec
repnz
cmpsl
xlat
cmp
dec
cmc
lds
test
shll
xchg
sub
sti
push
mov
dec
dec
or
std
xor
xchg
out
xchg
aam
push
ljmp
push
xchg
sbb
ljmp
in
xchg
and
mov
dec
pop
fmull
in
flds
push
fcoms
adc
add
and
sub
cmp
jle
jne
mov
lcall
pushf
rclb
cld
push
lock
mov
cmp
push
pop
dec
cs
sti
inc
xchg
jl
push
mov
xlat
mov
addb
jns
lods
xchg
fbstp
ja
sub
mov
push
xchg
lcall
xchg
lahf
imul
mov
je
test
add
jno
add
dec
push
xorps
inc
sub
leave
jmp
fwait
xlat
cmpsb
mov
mov
or
sbb
rclb
mov
lret
push
dec
pop
testb
or
movsb
push
inc
decl
or
cmp
ror
mov
or
push
subl
inc
sbb
movsb
aas
lahf
lods
xor
jns
ds
inc
adc
mov
and
dec
stos
scas
push
je
jg
mov
jmp
mov
pop
mov
xor
out
stos
xchg
jo
mov
das
icebp
pop
clc
icebp
xchg
xlat
xchg
xlat
loop
lds
mov
jae
testl
sbb
push
les
adc
mov
ljmp
les
fs
int
sub
loop
adc
push
iret
lds
mov
cmp
cmp
mov
push
std
jmp
xchg
mov
call
mov
lcall
popf
rorb
pop
cmp
pop
mov
fiaddl
cwtl
fstpl
xor
mov
pop
xchg
mov
aas
into
dec
nop
sbbl
in
cmc
sbb
jnp
sbb
sbb
bnd
out
mov
ljmp
push
stos
iret
shll
mov
in
repnz
mov
rcrl
loop
mov
fcom
xlat
xor
popa
add
sub
movsl
mov
jae
push
aad
ja
push
mov
lahf
jnp
dec
or
mov
test
xchg
in
in
or
inc
push
shlb
push
sbb
nop
xchg
push
into
cmp
test
pop
ja
mov
xchg
gs
add
popf
xchg
xor
adc
xchg
sarl
and
inc
setno
pop
sub
or
stc
mov
sub
or
mov
out
mov
paddusb
sbb
stc
jle
xchg
sbb
in
adc
imul
mov
int
xor
arpl
iret
pushf
enter
mov
jae
inc
ret
adc
out
aad
js
loope
cli
sbb
dec
ffreep
hlt
add
clc
sbb
sbb
sarl
jmp
aad
aad
sahf
and
and
sbb
dec
inc
pop
stos
inc
mov
pop
cld
inc
push
sub
mov
mov
sbb
sub
fnclex
xor
mov
test
scas
adc
dec
inc
fwait
jge
arpl
clc
or
push
push
dec
sbb
fsubrl
icebp
jge
aaa
or
jmp
and
jne
sub
hlt
mov
add
push
stos
jg
popf
sar
jae
pop
xor
mov
lahf
pushf
cmp
ljmp
pop
cmpsl
sbb
fs
and
shlb
dec
mov
dec
repnz
adc
lret
fnsave
or
jmp
call
or
or
hlt
push
and
fcomps
cmc
push
push
jb
insl
xor
push
sar
mov
inc
xor
insb
sarb
cmp
inc
pop
and
stos
insb
fldcw
mov
sbb
inc
cmp
cli
stos
add
mov
add
jae
jmp
jno
inc
or
out
mov
ja
pop
mov
fwait
je
in
loope
lret
dec
insl
pop
sub
movsb
loop
stos
jmp
lahf
mov
pop
push
cmp
sbb
and
dec
xchg
adc
jne
cmp
sbb
lea
daa
or
or
add
sbb
mov
jnp
pop
cmp
bound
mov
or
mov
adc
xchg
mov
std
mov
cmp
fmuls
mov
lahf
icebp
xlat
add
cmpsb
mov
dec
cmp
insl
mov
dec
xor
js
mov
cltd
push
hlt
adc
rorb
loop
pop
call
push
jecxz
adc
fs
mov
mov
push
add
movsb
mov
jne
test
push
lea
ds
das
sbb
aam
mov
jb
sub
ja
mov
xchg
jecxz
inc
roll
sbb
jnp
xchg
mov
pop
jecxz
push
imull
cmp
loop
jne
add
sbb
xchg
or
jnp
enter
cmpsb
arpl
cmp
pop
aaa
inc
adc
or
dec
mov
popa
add
out
pop
int3
mov
lods
sahf
stos
addr16
js
loop
fdivrs
lock
cmpsb
inc
cmpsb
rol
sub
and
cmp
ficompl
xor
mov
lods
movsl
hlt
jle
cltd
shll
jb
cs
xchg
out
arpl
aam
leave
leave
dec
test
addr16
fs
add
dec
jmp
dec
loopne
leave
into
pop
mov
xor
movsb
push
pop
xchg
shlb
addb
xchg
popf
mulb
lea
fwait
mov
mov
cs
and
mov
mov
and
mov
decb
sub
xchg
shll
adc
stos
imul
lods
icebp
aas
idivb
lock
popf
push
into
jp
js
inc
mov
or
daa
push
dec
push
dec
cmp
pop
mov
fcomip
in
ss
pusha
cwtl
ds
and
mov
inc
pop
sbb
add
pushf
push
jb
lods
and
inc
iret
lock
addr16
adc
repnz
hlt
xchg
jae
aaa
push
loope
xor
iret
and
jae
enter
aad
icebp
cli
or
testl
adc
sbb
adc
cs
cs
addr16
cmpsl
cmc
mov
notb
push
imul
xor
rcrb
outsb
fdivs
incl
jp
repz
test
xchg
sub
ss
outsb
mov
mov
js
call
js
movsl
movsb
fwait
sub
xchg
shll
jnp
add
jle
sbb
mov
mov
sub
dec
and
mov
lea
push
test
movsb
mov
nop
adc
adc
test
xor
movsl
push
cld
sbb
add
movsl
sub
mov
cmpsl
mov
xchg
push
scas
movl
pop
enter
movsl
rolb
push
push
push
mov
push
daa
js
xor
inc
adc
sub
push
lahf
adc
insl
addb
xlat
adc
lcall
dec
addr16
mov
jmp
mov
cmp
adcb
push
mov
adc
cmp
xchg
je
repz
aas
jle
and
jbe
inc
cld
popa
adc
xor
jbe
mov
popf
imul
jo
cmc
add
les
sub
shrb
or
int
mov
sub
andb
js
fs
loopne
adc
xor
mov
int3
mov
mov
cmpsb
ljmp
mov
leave
js
test
xor
sub
in
xor
call
cmp
adcl
imul
inc
pop
xchg
fwait
pop
cmp
push
cs
mov
addl
adc
ret
das
push
inc
jle
mov
fmull
fadd
xchg
ja
pop
jno,pt
add
in
fcoms
mov
movsl
imul
jnp
mov
adc
cmp
test
push
push
in
outsb
mov
shr
mov
push
jo
inc
cmc
pop
adc
or
cmp
dec
inc
push
push
or
mov
subl
in
movsl
xor
std
pop
xor
xchg
stc
mov
in
sbb
mov
add
enter
inc
xor
xchg
cmpsl
mov
jmp
xor
adc
dec
pop
es
mov
gs
sub
mov
xchg
insb
cmp
jge
stos
adc
mov
inc
mov
jecxz
mov
jecxz
add
loop
cwtl
xchg
cmpsb
fwait
in
lret
jp
pop
ljmp
push
mov
xchg
inc
sub
movsb
leave
push
ret
js
lahf
dec
ror
outsl
jp
loopne
adc
and
inc
jnp
sti
push
rolb
insl
inc
nop
lods
lods
add
notb
pop
shlb
mov
mov
mov
leave
scas
and
mov
mov
mov
ret
xchg
inc
jmp
aad
and
into
xchg
addl
adc
inc
xor
insb
daa
or
mov
sti
inc
xchg
jecxz
dec
add
xchg
adc
mov
sbb
jge
jns
jle
dec
dec
push
pushf
jge
rcrb
fstl
je
rol
scas
inc
dec
into
movsl
int
xchg
dec
pusha
pop
test
test
pop
int3
xor
mov
aaa
rcll
or
ja
lods
mulb
aam
scas
cmp
or
and
shrl
xor
or
les
mov
cli
pop
std
shrl
ret
pop
jmp
shl
adc
in
js
stos
ret
sbb
xor
sahf
and
push
std
mov
cmp
sub
mov
lds
lret
sbb
xor
mov
lret
cmpb
mov
add
fnstsw
imul
mov
cmpsb
sbb
push
ret
repnz
pop
shrl
cs
mov
loope
cmpsb
and
pop
data16
mov
mov
bound
hlt
pushf
jne
dec
mov
inc
add
sbb
dec
fs
ljmp
lds
inc
sub
dec
push
or
sub
lock
mov
sbb
scas
pop
add
mov
out
call
lock
sub
repnz
inc
fistl
pop
in
outsl
inc
sub
mov
xchg
sub
call
xlat
scas
icebp
inc
mov
addl
lds
add
lret
xchg
pusha
dec
cmpsb
push
push
fcmove
mov
push
movsl
sub
dec
mov
add
stc
leave
stc
mov
cmc
inc
rclb
add
loopne
cltd
push
in
js
jl
mov
jecxz
dec
fimull
sbb
or
mov
adc
cmp
xchg
dec
push
dec
inc
dec
sub
mov
inc
je
cmpsl
clc
fsubl
aad
in
out
repnz
inc
add
jne
add
adc
push
rcll
popa
subb
cmc
in
data16
out
jecxz
test
push
test
inc
call
shr
insl
cmp
mov
push
mov
xchg
dec
ret
add
adc
cmpsl
bound
sub
shl
mov
xlat
sbb
pusha
sub
push
sarl
dec
or
xchg
xchg
aam
sub
out
pop
or
es
sarl
inc
cwtl
addr16
and
cmc
cld
mov
fidivs
push
and
mov
sub
jo
clc
insb
mov
hlt
and
icebp
ss
add
mov
and
rcr
pop
add
cmp
imull
dec
xchg
dec
push
xchg
add
mov
dec
insb
inc
ret
mov
sub
in
mov
fs
jns
or
xor
xchg
add
lock
add
faddl
stos
lahf
dec
mov
mov
xchg
cmpb
test
out
loope
imul
inc
mov
out
dec
incl
arpl
mov
xor
lock
dec
jbe
in
and
add
and
adc
push
lock
and
push
stc
jge
mov
flds
loope
pushf
test
into
cmp
sub
mov
mov
sbb
aad
mov
jg
xchg
or
mov
insb
lret
push
add
jg
mov
or
test
out
adc
loope
add
pop
xchg
shl
push
jge
lock
xor
xor
cmpsl
mov
jo
xchg
div
test
or
sbb
cmpsb
out
jmp
add
mov
lds
cmp
packssdw
push
lea
stos
mov
adc
mov
fcmovb
ljmp
push
fstpt
xchg
ds
stos
aad
ja
inc
cld
ret
mov
out
pushf
adc
dec
insb
mov
or
cs
xchg
push
cmpsb
fildll
stc
jne
mov
aas
mov
pop
sarl
pop
jnp
inc
int3
popa
or
cwtl
pop
xor
cmp
mov
into
push
pop
push
or
mov
jl
dec
jae
xor
lcall
push
xlat
push
mov
sbb
lret
scas
cli
mov
mov
dec
pop
jnp
addl
sub
mov
cli
mov
lock
pop
or
dec
push
and
test
call
cmp
push
dec
or
mov
fnstcw
cmpsl
xchg
mov
shlb
daa
mov
sbb
outsb
sbb
dec
jle
mov
mov
rcll
outsb
fwait
test
in
sbb
xchg
jle
xor
sbb
sahf
pop
stc
push
adc
into
fsts
shll
sub
sbb
jns
jmp
mov
in
xchg
lods
inc
sbb
push
pop
outsl
mov
adc
aaa
pop
or
xchg
mov
fstps
popaw
pop
and
fimull
xchg
lods
stc
cmp
cs
gs
jno
cltd
mov
pusha
in
aam
out
inc
call
jge
mov
mov
int3
into
call
jbe
or
imul
rorl
fimull
rolb
xchg
testl
enter
fdivs
xchg
cld
xor
xor
movl
add
dec
adc
fadds
out
add
cwtl
js
sbb
pop
dec
in
loopne
data16
loope
jo
lret
mov
stc
adc
ds
loope
stos
hlt
pushf
lds
pop
push
cld
xlat
and
scas
cwtl
daa
sbb
xchg
jg
mov
push
test
sub
and
add
daa
cmp
das
push
add
push
ss
pop
into
pop
scas
mov
jae
outsl
sub
roll
cmp
gs
or
push
in
je
repz
lcall
xchg
mov
mov
cmp
in
fldcw
sahf
jl
and
inc
aam
sahf
cmpsl
ja
xchg
icebp
icebp
jg
push
jge
sbb
lcall
cli
jmp
push
xor
xchg
push
rorb
rorb
push
adc
push
ficoms
push
mov
push
lods
push
mov
sahf
jmp
dec
movsb
dec
test
sbb
sbb
pop
add
cmc
jnp
pushf
pop
roll
into
mov
push
jg
xchg
mov
sbb
pop
jb
mov
or
loopne
in
mov
loop
scas
sbb
inc
or
je
in
push
sub
cmp
fisubl
push
jge
xchg
out
push
int
pop
pop
xchg
pop
jnp
aam
ds
jbe
addl
inc
jno
mov
pop
call
pop
add
xchg
adc
movzwl
sbb
or
les
pop
xchg
les
pop
test
dec
outsb
stc
sarb
mov
xchg
into
fsubl
mov
push
dec
cli
shlb
sub
scas
loope
inc
outsb
es
mov
mov
and
outsb
adc
mov
mov
insb
imul
addl
fnstenv
sub
sub
fidivrl
aad
lret
sbb
inc
pop
test
cmp
in
add
ret
xchg
mov
dec
mov
lds
scas
mov
xlat
add
insl
mov
dec
shll
adc
xchg
pop
fsubl
jmp
jge
or
ret
mov
and
popf
and
xchg
bound
mov
fimuls
roll
pushf
sbbb
decl
xchg
pop
xchg
mov
lock
fwait
scas
mov
sub
jg
sub
cmp
cmp
inc
fs
mov
leave
fidivrl
push
cld
dec
xorl
mov
mov
jb
cmp
xchg
and
aam
in
mov
jmp
pop
cs
scas
int
cmpsb
pop
mov
bound
xorb
mov
dec
cmp
imul
pop
mov
out
ljmp
adc
in
aam
sbb
lahf
push
inc
arpl
push
cwtl
shlb
cmc
das
cmpsl
or
jg
sub
mov
ja
jb
pop
mov
cmp
lods
insl
out
pop
lcall
int
inc
xchg
in
sub
xor
outsb
movl
pop
sbb
out
mov
pop
push
mov
jnp
pop
arpl
int
iret
xchg
fstps
out
sbb
cwtl
cmc
inc
or
cmc
iret
gs
call
adc
aas
xchg
jecxz
jno
or
sbbl
cmp
xor
push
sbb
fistpll
fwait
es
inc
sbb
push
in
push
xor
mov
push
daa
dec
aam
pop
mov
adc
sbb
push
mov
or
push
or
mov
sub
xor
dec
ja
sbb
stc
stc
cmp
fnstcw
push
xchg
pushf
xchg
jle
lock
add
adc
or
je
dec
sbb
xor
jge
insb
xchg
pop
sti
jmp
pop
mov
jmp
lds
lds
test
je
aas
add
int3
fldenv
aas
adc
push
push
jb
rcl
inc
push
lea
jmp
xchg
cmp
lods
sahf
lock
mov
les
aaa
int3
movsb
clc
jbe
fs
lret
test
sbb
mov
push
xor
outsb
loopne
mov
push
fistps
push
or
or
negb
jne
popa
and
and
in
stos
sub
mov
cld
cmp
enter
or
cmp
mov
out
and
pop
sbb
rol
mov
cmp
jns
lods
mov
daa
fsub
sub
in
push
cmp
aam
inc
rcl
roll
sahf
fldl
mov
andb
clc
pop
lret
xchg
and
fwait
push
loop
or
sbb
xchg
fbstp
push
jne
and
adc
ror
or
stos
xor
imul
ret
pusha
jecxz
mov
rclb
inc
adc
popf
add
push
imul
pushf
jbe
test
insl
mov
fdivl
sbbl
hlt
mov
jle
mov
bound
sbb
sbb
sub
xlat
sbb
into
adc
shll
pop
adc
lock
sub
fists
enter
jg
loopne
jp
icebp
mov
popf
aaa
xor
mov
jbe
pop
or
jb
mov
cli
shr
rorb
lods
stos
movl
or
cmp
subb
jecxz
jbe
aam
xor
outsl
mov
lods
icebp
lahf
sti
je
sbb
mov
andb
fwait
xchg
add
push
adc
sub
sbbb
push
mov
stos
push
stos
sar
pop
data16
inc
out
add
into
and
mov
xor
js
cmp
push
in
adc
push
ret
sbbb
ss
jbe
enter
mov
push
hlt
movsb
cmc
stc
adc
xchg
leave
adc
nop
jmp
sbb
iret
int3
mov
mov
xor
or
sub
imul
jecxz
sub
das
out
aas
cli
int
out
rclb
cmp
mov
daa
jns
hlt
sbb
daa
in
mov
or
and
aam
rcll
mov
cmp
aam
ds
mov
cmc
inc
push
ror
cmp
push
xor
mov
sbb
add
addr16
push
mov
cs
xor
fldl
push
xor
adc
mov
dec
aaa
sbb
pop
out
cli
incb
xchg
add
call
sbb
xor
push
aad
loop
sbb
cld
and
test
xor
xor
movsl
enter
dec
insl
fdivr
cmp
scas
push
mov
mov
jge
ret
rolb
mov
insl
sub
mov
enter
movsb
sbb
pop
mov
jbe
clc
mov
jnp
into
or
cmpsb
movsb
sub
push
or
sbb
jno
dec
and
das
mov
dec
cmpsb
dec
dec
sbb
and
fadds
rcrl
data16
imul
push
mov
jbe
cltd
dec
lcall
sbb
mov
dec
iret
out
pop
ret
sbbl
mov
aaa
dec
fwait
call
or
pop
test
sub
xor
or
xchg
xor
push
mov
in
cld
cld
push
fnstcw
xchg
repz
and
sub
daa
and
mov
sub
jmp
fildll
mov
test
ficoml
jge
stos
adc
lret
push
ss
jbe
add
outsl
das
xor
cltd
dec
mov
push
stc
dec
les
inc
leave
sbb
jnp
pop
negb
mull
jmp
fidivrs
xor
jmp
push
push
mov
adc
stos
loop
xchg
stos
adc
sub
ljmp
cmp
fstpt
fidivl
mov
mov
xchg
std
ds
pushf
sub
je
cmp
iret
in
dec
fsubp
dec
adc
lea
push
ficoms
sub
adc
sbb
stos
dec
cli
mov
shl
sbb
sbb
dec
push
jecxz
xchg
mov
imul
mov
dec
inc
or
lea
pushf
adc
jmp
rorb
aam
lods
ret
mov
fidivrs
fsubs
dec
shrl
pop
cltd
es
repz
sub
mov
sbb
sub
aad
and
repnz
jno
dec
push
lods
xchg
mov
cmp
test
mov
inc
mov
outsl
popf
ss
fildl
xchg
or
insb
test
xor
inc
mov
leave
or
ret
bnd
mov
xor
jo
sbb
lret
je
lret
add
jbe
inc
fucomip
cmc
inc
int3
add
dec
pop
stos
dec
pop
rcr
lods
lret
sub
push
idivb
add
jmp
sbb
lret
cmp
imul
pop
xlat
mov
mov
xchg
pushl
push
jecxz
cmp
or
mov
fsub
xchg
inc
and
adc
popf
or
mov
lods
ja
mov
popa
mov
xchg
scas
test
in
loopne
jns
cmpsb
inc
dec
in
mov
xchg
fisubrl
sub
sbb
cmc
fadd
iret
xchg
subl
jp
xchg
jns
sub
sub
outsl
sub
pushf
add
insl
shlb
cmp
in
sbb
sub
cltd
pop
push
out
push
push
add
xlat
or
std
pop
cli
ficomps
pop
sub
jo
cmp
test
arpl
stc
fstps
cmc
test
pushf
xor
cs
cmp
cli
and
or
jmp
out
shrb
das
push
int3
xchg
cmp
push
pop
pop
out
fs
ret
into
push
push
adc
stos
push
imul
jg
or
lock
fwait
mov
sbb
pop
push
cli
xor
cwtl
pop
rclb
mov
addr16
cwtl
sahf
cltd
push
cmp
jmp
shll
dec
sub
pop
mov
subl
sub
pop
ret
insb
pop
mov
push
cli
das
mov
dec
xchg
fwait
mov
arpl
jb
dec
push
test
xchg
and
or
cwtl
xorl
mov
cmp
sahf
mov
or
jge
mov
leave
adc
jne
call
push
popf
push
lea
std
push
inc
pop
stos
dec
jge
sub
sbb
iret
jecxz
adc
out
add
xchg
mov
cmp
ds
pusha
addb
sbb
dec
adc
shlb
add
loope
aaa
adc
xor
and
push
ds
push
loop
push
hlt
lcall
xor
or
leave
gs
test
mov
mov
jbe
pop
sbb
inc
lods
fcompl
inc
xor
daa
or
and
addr16
sti
nop
cmpsl
add
inc
cs
inc
outsb
out
nop
scas
outsb
cmc
pop
push
loope
fdivrs
pop
sbb
mov
cmp
out
ds
lret
arpl
adc
jmp
add
or
lcall
cmp
rclb
js
negl
jg
lcall
addr16
xchg
cltd
sbb
pop
into
push
jae
notl
push
pop
test
jo
mov
mov
mov
test
jne
mov
and
pushf
push
out
push
cltd
inc
into
testb
ret
inc
orb
hlt
int3
pop
daa
outsb
add
loop
loope
jl
shl
mov
out
push
test
insl
lds
add
dec
jb
mov
and
push
ljmp
dec
test
lds
cld
add
inc
popa
pop
imul
int
xor
in
cs
mov
and
push
inc
lcall
fs
int3
cmp
addr16
fisttpll
dec
syscall
imul
mov
inc
shlb
push
push
nop
sbb
movsb
lret
in
popa
dec
stos
out
pushf
mov
jnp
push
call
fcompl
jle
mov
push
inc
mov
lock
push
sbb
pop
arpl
jp
push
stos
leave
fisttpll
jp
fldt
shrl
scas
je
push
lcall
push
and
push
xorb
std
sub
cli
adc
notl
mov
jno
xchg
xchg
iret
sbb
or
aaa
xlat
data16
jl
outsl
movsl
xchg
mov
or
push
pop
sbb
xor
std
xor
push
inc
test
dec
shlb
inc
fildll
loope
loopne
scas
inc
out
addb
aas
sub
mov
sti
loope
fwait
cltd
popa
xor
cltd
fimull
xchg
lahf
call
call
imulb
or
pop
movsb
repnz
lods
dec
cmc
mov
popa
out
jo
adc
repz
aam
ret
mov
mov
dec
mov
jns
arpl
daa
cli
jb
mov
scas
mov
clc
daa
imul
shll
dec
add
add
ss
push
pop
lret
mov
aad
aam
xchg
lock
insl
roll
mov
xor
fstpt
and
nop
ret
out
mov
in
push
rcrl
addr16
aam
inc
mov
ds
push
lahf
jg
sahf
rcrb
stos
int
movsb
xor
ss
inc
adcb
mov
mov
ret
movsl
pop
mov
popf
imul
xchg
shll
dec
push
or
lods
xchg
mov
sub
xor
pusha
inc
out
in
js
push
cmp
mov
insl
jno
push
cwtl
fcomps
or
sbb
pop
push
hlt
out
sti
xlat
adc
dec
lret
dec
mov
xchg
aam
sahf
push
outsl
sbb
jo
in
imul
push
or
and
daa
shl
fucomp
cli
out
subb
dec
shrb
pop
cmp
inc
daa
lret
or
add
and
cmp
adc
pop
pop
dec
mov
adc
sub
cmp
pushf
daa
lds
push
test
ss
mov
adc
dec
lret
fidivl
mov
dec
movsb
out
aas
jns
adc
ljmp
pushf
sub
mov
dec
in
xor
push
push
pop
filds
and
mov
mov
cmp
lds
nop
int3
sub
aad
movsb
addr16
insl
xorl
xor
idivl
cmc
jnp
jbe
arpl
mov
inc
dec
imul
test
push
pop
in
xchg
lahf
cmpsb
xchg
adcl
xchg
addb
popa
loop
aam
mov
jne
loope
adc
sub
leave
cld
data16
dec
loope
dec
pop
ds
int
sub
inc
fwait
pop
icebp
fisubs
push
stc
shr
adc
xor
sub
mov
sbb
cmc
iret
mov
cmp
jne
fs
adc
cmp
pop
shr
cld
mov
jbe
inc
inc
cmpsb
mov
jne
std
lods
testb
outsl
mov
add
pop
fstl
mov
popf
push
sbb
xor
aad
imul
daa
pop
push
sahf
push
jae
mov
out
stos
dec
mov
stos
aam
test
or
les
jmp
jle
or
cmp
and
sub
jo
jo
inc
mov
cwtl
and
sbb
scas
dec
addr16
jmp
sub
daa
dec
cltd
test
test
lock
pop
enter
jl
pusha
sbb
cs
ret
pop
push
jnp
lock
inc
je
test
lods
mov
mov
leave
ret
sbb
adc
sub
mov
popf
ret
lahf
mov
jno
push
clc
cmp
sub
dec
sub
repz
xor
mov
add
aam
sub
or
test
jnp
movsb
test
xor
mov
jp
or
sub
inc
sub
inc
jnp
mov
push
jo
repnz
adc
push
stos
cltd
jmp
clc
sub
jmp
mov
mov
aas
loopne
repnz
xor
lcall
popf
jae
or
mov
pushf
fisttpl
sub
pop
push
sbb
out
push
inc
and
xor
out
xchg
leave
loop
push
lahf
sbb
cli
in
sete
popa
ror
out
das
push
testb
outsb
mov
mov
add
insl
sub
into
adc
into
push
adcb
xor
sub
xchg
pop
mov
jecxz
ss
dec
xchg
mov
add
cmpsb
or
aaa
xor
pop
out
mov
mov
jnp
push
scas
sbb
mov
mov
fiaddl
rorb
jp
xchg
mov
push
sub
cmp
loop
repz
dec
xor
dec
mov
in
xor
orb
xor
testb
shlb
xchg
xor
cmp
rcrb
cmc
das
es
mov
imul
push
fldcw
mov
mov
sbb
cld
test
mov
ds
fcmovnb
mov
icebp
xor
lea
dec
cmp
jbe
adc
stc
out
sbb
rclb
jb
xchg
jl
dec
xchg
push
aam
daa
pusha
js
popf
hlt
dec
pop
and
idivl
enter
mov
sub
aas
jecxz
cmp
adc
sub
adc
sbb
stos
sub
jne
repnz
adc
andb
fildl
fidivrs
jle
cli
cmp
mov
mov
inc
dec
mov
popf
aad
dec
xorl
mov
rorl
add
enter
les
xchg
mov
lcall
xchg
mov
mov
sub
std
jb
lcall
mov
add
lock
ss
or
xchg
mov
icebp
inc
aaa
hlt
andb
scas
jle
faddp
in
scas
hlt
and
sbb
seto
fbld
scas
xor
in
cmp
repz
testl
pusha
ljmp
repnz
push
je
pop
fbld
rolb
adc
into
enter
lret
hlt
inc
lea
mov
jae
insl
push
push
xlat
je
cld
fnstenv
adc
mov
in
ja
int
jle
pop
xchg
gs
mov
xlat
add
outsb
dec
add
jp
ss
cltd
inc
ficoml
and
pop
sbb
ja
testl
add
fwait
dec
insb
shlb
scas
out
ja
lds
pop
and
adcb
xor
mov
cltd
xchg
sahf
push
jg
imul
dec
or
jmp
pop
das
push
mov
test
jo
mov
pop
xor
pusha
stos
lret
push
std
xor
clc
fcompl
jbe
enter
jmp
imul
loop
mov
push
cmp
mov
cmp
out
js
pop
adc
sbb
fmull
jnp
sub
out
push
movsl
js
mov
in
dec
sub
xor
in
stos
push
xorl
mov
sti
sbb
cwtl
pop
rol
repz
jge
xchg
loope
fimuls
lahf
loopne
insb
mov
inc
mov
pop
and
mov
test
fs
loopne
scas
stc
addr16
mov
ret
test
push
adc
aas
mov
mov
mov
pop
adc
cltd
jle
jg
xor
and
xchg
xlat
xchg
loopne
cmp
int3
aam
xor
scas
sbb
jge
inc
inc
dec
jo
rolb
dec
mov
xorl
sbb
push
pop
int
mov
cs
mov
pop
pop
cmp
cmp
mov
daa
inc
xchg
inc
xchg
int
gs
jg
in
inc
pop
int
inc
test
loop
jae
lcall
cmp
in
rcll
fucom
sbb
push
cmp
daa
in
or
add
mov
xchg
in
adc
loope
outsb
and
dec
in
add
and
adc
std
cmp
pop
outsb
fwait
push
in
outsl
out
sarl
xchg
inc
jbe
cli
pop
and
jg
adc
xchg
push
cmp
pop
adc
sub
sbb
leave
stos
push
cmp
outsl
aas
lahf
stos
stos
pop
fildl
cmc
into
jg
shl
push
inc
mov
mov
nop
sbb
cmp
xchg
dec
and
mov
push
hlt
xor
gs
add
pop
add
fwait
jne
jns
xchg
in
jmp
arpl
mov
scas
inc
repz
sbb
sarl
aam
pusha
sub
fs
mov
xchg
inc
add
pushf
mov
pop
inc
lods
rcrl
arpl
daa
bound
daa
sbb
sub
and
inc
jmp
xor
pop
cmp
cmp
daa
rcrl
jmp
lods
sbb
jle
xchg
enter
and
idivl
pop
sub
clc
insb
and
fdivl
cmp
push
push
mov
call
dec
arpl
testb
inc
pop
or
jl
imul
mov
in
dec
xchg
xorl
xor
push
xchg
mov
call
rcll
mov
jne
adc
ljmp
repz
out
mov
arpl
mov
sbb
ss
loope
pusha
push
lds
divb
xchg
inc
inc
cmp
test
mov
dec
inc
sti
cmp
jbe
aam
addb
or
gs
subb
sbb
movl
jg
iret
pop
mov
es
out
aaa
sub
xchg
jecxz
mov
imul
fistpll
popf
inc
inc
push
clc
mov
mov
push
les
gs
inc
out
subl
jne
in
and
mov
shlb
dec
push
sub
sbb
stos
add
dec
mov
sti
lahf
je
adc
iret
in
pop
in
xchg
daa
xchg
call
pop
and
sub
pop
mov
mov
shrl
lret
adc
mov
jne
lods
shl
add
rolb
lock
dec
and
mov
jl
cmp
sbb
cmpsl
xchg
lds
sub
test
rorl
push
hlt
mov
jno
add
mov
jno
shlb
imul
push
push
xor
aad
nop
jge
cli
in
dec
xor
ret
fwait
xchg
dec
jmp
jmp
dec
imul
adc
dec
ret
mov
and
sahf
add
icebp
pop
pop
les
add
enter
fsubrs
je
repnz
push
ljmp
ds
push
sahf
int
xor
cmp
fimuls
push
pop
jle
pop
into
xor
mov
jno
iret
fstpt
jno
ljmp
pop
cmpsb
cmp
testb
bound
or
push
mov
pop
iret
mov
add
in
mov
pusha
inc
and
outsb
lret
jno
inc
dec
loop
out
js
add
mov
rcl
mov
cmpsb
andb
mov
cmp
adc
xchg
sub
mov
mov
stos
fwait
mov
repz
and
and
lods
pop
mov
mov
jae
push
jae
xchg
lahf
pop
int
dec
jecxz
xchg
lret
gs
hlt
out
dec
adc
test
or
mov
push
sbb
or
mov
daa
pop
fldcw
and
outsl
mov
aas
jmp
out
in
and
popa
movb
push
es
cs
repnz
dec
std
repnz
jmp
aas
mov
cmpsb
into
mov
mov
dec
andl
push
xlat
sub
pop
or
adc
in
test
jp
push
mov
or
mov
cmp
aaa
jb
sub
dec
lds
sbb
cmc
push
fdiv
iret
repz
or
bswap
jle
daa
mul
in
xchg
push
cmp
pop
sub
ret
adc
in
add
cmp
dec
in
mov
push
test
xor
imul
and
jb
pop
cmp
out
xor
cmc
fiaddl
ds
data16
pop
push
clc
mov
xor
rcl
lret
jl
es
jo
mov
add
ret
test
popf
inc
xchg
inc
xor
adc
flds
hlt
data16
pop
xor
adc
mov
cwtl
bnd
xchg
mov
gs
mov
jecxz
mov
aad
mov
dec
and
push
xchg
scas
mov
clc
add
push
or
mulb
sbb
ss
pop
and
xor
scas
mov
pop
push
mov
out
fwait
ret
mull
cs
adc
inc
leave
and
sub
movsl
into
repnz
sub
pop
dec
dec
leave
add
and
mov
cli
inc
out
rcrb
test
xor
dec
jns
pop
call
movsl
lods
jp
mov
mov
leave
jb
fwait
mov
cmp
jl
pop
insl
cmovb
stos
icebp
mov
pop
xchg
mov
xchg
in
notl
xlat
call
add
lret
pushf
dec
cmp
mov
dec
jns
stos
fidivl
and
dec
mov
cmpsl
clc
jne
aad
cmp
pop
cmpsl
hlt
outsl
sbb
imul
and
xchg
adc
pusha
mov
sahf
adc
add
mov
scas
adc
ja
pop
pop
pop
mov
cmp
sub
xor
pop
jae
int
ficompl
push
out
mov
arpl
xchg
pushf
in
mov
push
sbb
inc
jg
clc
scas
icebp
and
test
xchg
je
hlt
hlt
in
sbb
sbb
ss
push
xor
mov
in
mov
xchg
adc
sbb
mov
sub
out
wbinvd
out
dec
shl
adc
inc
aad
push
int
insl
cmp
pusha
es
sub
adc
xlat
shrl
test
mov
mov
cmpsb
icebp
push
sbb
cmc
das
aaa
rolb
or
adc
daa
mov
fdivrl
and
leave
mov
lods
fiadds
xchg
fistpl
pop
or
inc
inc
aas
and
or
xchg
sub
mov
arpl
add
xlat
arpl
andl
xchg
jne
xchg
pop
sub
pop
mov
int3
adc
push
xor
lahf
xchg
fldenv
mov
scas
mov
insl
popa
mov
ss
mov
and
pop
xchg
mov
nop
sbb
loop
push
loopne
mov
mov
hlt
out
sub
in
adc
ja
pop
aad
notb
fstl
aaa
push
ftst
jp
fwait
cmp
dec
es
shlb
addl
adc
add
pop
mov
and
jne
dec
mov
ljmp
jmp
add
inc
out
inc
dec
dec
xlat
lret
and
mov
je
bound
ljmp
xor
iret
aaa
in
js
mov
dec
pop
lods
xlat
adc
jnp
test
call
dec
push
ja
push
jp
pusha
xchg
ret
pop
xchg
mov
leave
dec
sub
mov
sbb
cmpsb
movl
test
lcall
mov
or
icebp
leave
inc
data16
fcomi
jnp
lods
pop
cmp
jge
lcall
lea
int3
push
sbb
psrad
sub
cmp
fs
push
in
sbb
mov
cld
adc
insl
arpl
sbb
cltd
add
jg
push
mov
adc
add
daa
es
cmpb
lock
cli
fwait
in
adc
jae
mov
pop
dec
cmp
mov
push
in
add
xchg
pop
xchg
mov
push
pop
mov
lea
jb
insl
repz
repz
incl
mov
push
pop
insl
xchg
sub
mov
dec
lret
mov
mov
nop
pop
inc
push
jl
gs
mov
xchg
sub
dec
jmp
into
sbb
cmp
or
mov
std
sbb
cmp
xchg
inc
test
lods
cmp
xchg
out
sbb
mov
mov
in
push
out
pop
leave
stos
push
pop
dec
or
loop
jnp
outsb
pop
fstpt
test
sbb
dec
out
jae
stc
scas
mov
xor
dec
push
dec
dec
cmc
mov
into
sub
xchg
cmpsb
and
add
jmp
shlb
in
jo
dec
pusha
icebp
jne
pop
sub
sub
in
stos
aam
je
inc
push
sbb
jecxz
add
push
pop
dec
jmp
dec
push
dec
xchg
icebp
inc
mov
mov
enter
gs
rorb
sbb
addr16
sbb
lods
xchg
or
daa
adc
mov
icebp
sbb
popa
sub
rcrb
fstps
imul
hlt
ja
xchg
stc
push
mov
fwait
mov
out
mov
je
fmulp
aaa
mov
inc
pop
je
fistpl
fcoms
mov
xor
icebp
jge
mov
ret
jb
jmp
adc
jnp
add
imul
mov
outsl
scas
mov
ss
mov
hlt
jb
cli
push
pop
not
push
cwtl
ss
mov
decb
aaa
xchg
push
aaa
popf
lret
sbb
adc
movsb
mov
std
sbb
enter
stc
ja
jno
fcoms
jmp
pop
dec
fstpt
insb
push
dec
cli
dec
fs
movsl
push
aad
jnp
cmp
shlb
xchg
stos
es
jnp
adc
sbb
and
mov
pop
add
push
rcrb
popa
je
push
fisubs
or
fwait
adc
insl
rcrb
mov
mov
mov
push
les
add
sbb
pushf
jp
gs
aad
outsl
lea
enter
shl
fisubs
pop
jbe
call
jle
pop
push
dec
roll
sub
mov
cmp
pusha
and
lea
pop
fisttpl
mov
adc
add
jns
mov
xchg
imul
jl
sbb
push
jns
dec
jp
rcrb
xchg
push
aam
js
push
dec
out
cmp
push
add
ficoml
rcl
or
jle
lea
scas
nop
mov
xor
mov
sbb
and
shlb
test
or
and
mov
lods
andb
pop
daa
out
adc
pop
test
cmp
mov
repz
push
outsb
mov
out
inc
xchg
fcompl
cwtl
jne
jae
mov
mov
mov
rorl
mov
int
dec
and
clc
mov
enter
imul
lret
cmp
int
stc
mov
subb
sub
shlb
add
push
sub
rolb
test
dec
jle
dec
push
or
divb
cmpb
lret
andl
ds
fwait
and
inc
or
mov
pop
sub
sbb
mov
sbb
cwtl
and
sbb
ret
jo
test
mov
stc
mov
gs
lahf
outsb
subl
mov
lods
inc
push
loopne
fwait
cmpsb
iret
push
pop
lret
push
out
xchg
rcll
icebp
or
lcall
inc
lret
outsl
dec
sub
xchg
addr16
cmp
stc
pop
les
xchg
repz
sbb
pop
or
push
aaa
sub
je
lret
jecxz
movsl
jge
xorb
push
mov
pop
data16
adc
cli
lods
fnstsw
sub
dec
inc
mov
add
dec
mov
lret
lods
arpl
push
hlt
mov
in
and
addb
imul
cmpsb
cld
xchg
shll
jo
cmp
sahf
out
xlat
dec
and
sub
das
xchg
js
mov
mov
je
lahf
mov
sahf
imul
push
adc
or
push
mov
icebp
push
es
mov
sarb
outsl
inc
xchg
sub
test
fnstcw
icebp
stos
lock
cmp
sti
lahf
cwtl
adc
dec
inc
out
neg
add
xchg
jge
mov
and
pop
mov
add
jno
fdivrl
pop
ja
mov
cli
lahf
mov
xor
and
xchg
in
test
scas
fistl
loope
mov
sbb
data16
mov
scas
aas
fwait
lods
out
sub
sub
mov
cmp
mov
int3
mov
push
push
dec
jle
dec
inc
stos
mov
cltd
pushf
inc
je
and
dec
jno
scas
xor
pusha
adc
arpl
popf
dec
cli
stc
insb
add
and
or
jecxz
loope
or
pop
mov
cmp
outsb
dec
cld
repz
stos
push
fwait
ds
inc
sub
test
xchg
or
stc
hlt
sbbb
xor
dec
cmp
xchg
xchg
mov
mov
adc
sahf
sbb
jae
loopne
out
xchg
inc
sbb
dec
sbb
pop
or
or
jecxz
out
adc
rcl
icebp
pusha
xacquire
mov
xor
xorb
xchg
rorl
gs
mov
push
enter
sbb
lea
scas
xchg
pop
dec
cmpsb
mov
xchg
adcb
cli
push
inc
leave
dec
imul
add
jmp
dec
loope
test
mov
push
outsl
imul
sub
mov
clc
sub
mov
dec
jb
adc
insl
xor
adc
outsl
inc
stos
inc
popa
inc
jmp
dec
fiaddl
lods
pop
mov
push
mov
fwait
ret
repnz
stc
xor
adc
inc
ds
add
jle
movsl
mov
mov
notl
push
dec
pop
mov
fsubs
jp
leave
xchg
pushf
repnz
push
sub
idivl
cmp
pop
stos
jb
push
mov
add
loop
xor
mov
int
pop
xchg
movsl
ret
cmp
ja
pop
loope
scas
rclb
xchg
xchg
inc
insb
bound
pop
or
adc
les
frstor
scas
mov
push
push
fdivrl
sbb
unpcklps
push
ss
cmc
sbb
add
loop
icebp
jno
pusha
mov
lea
dec
mov
jecxz
leave
pop
ret
mov
mov
mov
inc
movsl
sub
lock
int3
mov
std
imul
fldt
insl
inc
add
adc
ret
jne
mov
lods
int3
cwtl
repz
sub
sbb
cmp
or
mov
mov
daa
inc
inc
pop
or
ret
outsl
roll
or
xlat
and
xor
lea
sbb
dec
mov
sbb
movsl
inc
imul
ret
hlt
cmp
sbbl
scas
test
or
add
testb
sbb
and
sbb
ljmp
sbb
jne
adc
xchg
adc
pusha
test
adc
ss
inc
fistps
sbb
adc
inc
adc
in
dec
mov
in
out
in
orb
fcmovu
cmp
or
push
repz
sti
insl
fmuls
mov
sbb
aam
test
and
push
es
call
lcall
rol
and
xchg
popa
pop
xchg
xchg
mov
int3
cmp
call
or
insb
dec
jmp
and
in
push
mov
int3
test
pop
jb
adc
popa
aam
lods
and
xor
call
xchg
pushf
scas
dec
xor
sbb
arpl
lock
ljmp
xchg
push
mov
xor
mov
fwait
std
dec
jnp
inc
lcall
sub
inc
rcrl
or
lea
dec
loopne
loopne
mov
adc
loop
lret
mov
sbb
and
xorl
jmp
pop
mov
bnd
adc
mov
add
sub
xor
adc
stc
mov
pusha
out
jae
jns
in
dec
repz
inc
push
iret
jb
ret
mov
frstor
pop
xchg
rolb
fwait
sar
xchg
xor
js
xor
in
push
repnz
stc
dec
lea
insl
je
cmp
popa
mov
adc
je
add
shrb
cli
inc
cmp
inc
mov
std
in
addr16
iret
inc
mov
add
mov
pop
and
sub
enter
rcr
push
loope
push
fmull
mov
pop
and
mov
js
enter
pop
or
pop
lea
testb
lahf
loop,pn
ljmp
sbb
outsb
mov
inc
or
sar
outsb
push
push
pop
jmp
mov
popa
movsb
pop
sub
xor
fisttps
dec
pushf
inc
sbb
pop
packssdw
jmp
jg
loop
cmc
fcoms
call
dec
enter
dec
sbb
push
adc
into
sub
cmp
cmp
scas
xor
rcll
js
leave
pop
iret
icebp
mov
shll
outsb
gs
add
sub
or
dec
dec
jo
aaa
jno
sbb
jmp
bound
movb
adc
aad
gs
jmp
sub
pop
dec
jle
outsb
mov
xchg
or
mov
lea
test
clc
inc
fsubp
mov
insl
pop
sub
sbb
xchg
lock
ljmp
and
data16
pop
mov
int3
call
test
sbb
sbb
push
cld
mov
in
pop
idivl
adc
test
movsl
mov
dec
add
sbb
jno
pop
xchg
in
cmpsb
icebp
sbb
lods
push
xchg
jg
push
fistl
outsl
daa
fcoms
xchg
push
inc
arpl
xor
push
push
enter
cmp
push
mov
push
mov
cmpl
into
insl
adc
adc
clc
mov
rcl
negl
ss
jae
or
int
int3
mov
sbb
add
jle
cmpsl
xchg
rcrb
leave
hlt
movsl
insb
mov
xor
jl
mov
insl
add
add
add
sub
push
lcall
test
rcrl
fcompl
movsb
dec
cmp
int3
cltd
iret
in
aaa
das
mov
cmp
inc
jo
lcall
mov
int
and
xchg
jmp
ds
pushf
sub
add
mov
jmp
outsb
inc
pop
xchg
mov
push
or
jne
in
cmp
js
dec
lahf
push
pushw
push
outsl
std
dec
pushf
popf
lods
rcrb
inc
xor
aaa
mov
and
int3
inc
xor
dec
add
pop
jb
sub
push
daa
push
dec
lahf
push
loopne
mov
scas
je
sbb
and
mov
cs
sub
or
dec
lea
cmp
xchg
cmp
cmpb
loopne
push
addr16
popf
add
jmp
outsb
mov
js
mov
jp
popl
push
push
lock
cli
lds
in
lea
mov
insl
lods
cmc
mov
fimull
rclb
sub
or
aam
pop
iret
xchg
sub
out
xchg
xor
mov
and
mov
push
pusha
sub
push
fdivrl
test
jno
mov
xor
orl
leave
jp
add
arpl
icebp
fdivl
jmp
setne
inc
jmp
loop
pop
jle
cmpsb
mov
dec
pushf
jle
push
fmuls
popa
icebp
test
loop
popa
fs
or
mov
rolb
xchg
scas
inc
sbb
fisubl
dec
ficoml
inc
dec
cmp
rep
or
adc
push
ret
loopne
ja
xorb
adc
aam
in
nop
mov
in
stos
adc
stos
fld
inc
adc
xorb
in
jbe
and
daa
cmp
xor
enter
negb
mov
adc
jg
adc
pushf
cwtl
mov
imul
sub
jb
arpl
mov
mov
cli
sub
outsl
xor
or
ret
int
cmp
jecxz
cmp
jp
add
xchg
xor
addb
mov
scas
clc
sar
mov
frstor
xchg
xchg
push
inc
sub
push
ja
xchg
jns
mov
mov
jge
aaa
shlb
xchg
incb
sti
nop
and
std
call
sub
or
or
call
and
sbb
or
idiv
mov
rcrl
js
mov
push
test
aad
aas
lret
je
sub
mov
push
sbb
mov
add
nop
push
int
jg
iret
pop
cwtl
dec
push
dec
clc
push
movsl
jo
xchg
stos
jmp
out
stc
adc
insl
inc
jne
mov
ljmp
jmp
flds
xor
inc
aas
in
mov
xor
test
mov
mov
es
stos
adc
je
mov
push
idivb
outsb
addr16
clc
flds
imul
std
mov
rcrl
cwtl
jg
movsl
test
mov
das
jecxz
lret
xchg
gs
pushf
aam
push
push
dec
mul
mov
add
or
lcall
sub
cmp
out
mov
jne
sub
sub
mov
xor
cltd
or
mov
cli
xchg
fmuls
fs
mov
xor
push
insl
adc
sahf
push
mov
xor
sarl
jl
testl
aad
mov
add
lock
shrb
loopne
pop
push
lret
jp
sbb
add
std
aas
adc
je
test
mov
out
fstps
or
xchg
outsb
sbb
out
ret
pusha
mov
jnp
lcall
out
cmp
xor
sub
fcompl
imul
xor
jle
clc
cld
sub
adc
loopne
xchg
pop
mov
stc
addr16
rsm
sbb
mov
inc
in
popf
lcall
in
add
inc
int3
jnp
mov
scas
rcl
sub
xchg
fisubs
add
lret
insl
adc
mov
pop
lret
mov
dec
mov
fs
repnz
or
mov
int
mov
push
out
or
pop
sbb
mov
inc
adc
cmc
jge
call
stos
rcrb
int3
cmpsb
xor
push
sbb
fs
mov
sti
dec
bound
or
jae
jnp
mov
clc
inc
xchg
jns
lret
out
test
xchg
arpl
sbb
mov
xorb
out
xor
push
mov
mov
mov
fs
mov
inc
pop
jnp
sub
hlt
test
push
push
sub
jecxz
cmpsb
jb
add
icebp
movsb
xchg
mov
xchg
iret
inc
ror
jp
in
jae
out
sbb
sub
out
lret
mov
shrb
push
sub
cld
and
add
in
sbb
jp
nop
int3
xchg
es
into
jnp
mov
jle
aam
dec
add
push
insb
fmull
push
insb
cltd
daa
add
scas
mov
xchg
xor
mov
mov
inc
adc
lret
sub
mov
jge
sbb
call
subl
daa
mov
fs
and
call
dec
push
mov
andb
push
popa
mov
mov
pop
lods
adc
test
pop
popf
pop
lods
lret
fcomp
add
test
stos
lock
push
sbb
and
popf
ja
pop
icebp
in
push
ds
push
cmc
sbb
or
fwait
pop
push
and
insb
and
jecxz
popf
lods
jbe
ljmp
fsub
loope
lds
in
enter
sub
hlt
add
mov
or
cs
dec
lcall
fucom
jge
scas
nop
xchg
loopne
sbb
jbe
and
std
pop
sub
sub
cmpsl
movb
mov
and
push
xchg
cmp
push
add
dec
add
pop
arpl
jne
push
and
xchg
adc
cmpsb
inc
dec
pop
int3
jo
add
jno
in
pop
jle
or
sub
xor
cld
or
jmp
enter
and
sbb
dec
push
jb
dec
cmp
dec
stc
cmp
xor
popa
gs
rcrb
sbb
mov
lcall
mov
mov
lahf
pop
aam
in
sti
and
push
mov
inc
dec
mov
inc
pushf
cs
lock
cmpsl
jae
adc
pop
adc
lods
sahf
push
and
add
adc
sti
push
push
das
xchg
and
adc
xchg
mov
jmp
movsl
adc
movsl
cld
sti
cmp
pusha
stos
fcmovnbe
shr
stos
imulb
testl
pop
xor
or
adc
sub
add
xlat
fcomip
add
mov
sahf
pop
loopne
mov
outsb
xor
clc
jg
xchg
xchg
dec
data16
sub
mov
dec
subl
pop
cmp
xchg
pop
xchg
mov
push
mov
adc
inc
leave
sbb
xor
fnstsw
mov
xchg
out
dec
dec
xchg
fists
gs
cmp
fsub
dec
sub
xchg
jnp
dec
in
xchg
jnp
cld
xchg
enter
mov
mov
ficomps
add
pusha
in
mov
sbb
xor
xchg
adc
stos
gs
dec
les
mov
dec
scas
add
ljmp
leave
sub
jne
cmc
mov
call
push
cmp
lret
stc
xor
test
andl
jne
lea
lea
cli
aas
test
inc
int
shlb
insl
pop
push
dec
cltd
ljmp
rorb
lods
fldl
lods
mov
pop
jnp
xchg
mov
cmc
mov
imul
push
add
push
scas
ret
mov
mov
test
sbb
xchg
add
cwtl
pusha
mov
jb
cli
jg
pop
addb
pushf
fdivp
adc
push
imul
jns
push
jmp
fldt
enter
push
icebp
or
mov
pop
loop
pop
enter
xchg
outsl
vmovss
adc
xor
xor
cmp
adc
lds
xchg
shll
js
decb
jno
ds
cmpsb
mov
inc
leave
xor
pop
adc
add
fbld
lds
xor
inc
in
jbe
add
mov
loop
shl
arpl
es
insb
les
add
movsb
inc
add
jmp
push
aad
lcall
cmpsl
repz
add
and
insl
jno
or
repz
cmp
cmp
pop
pop
out
cwtl
jg
inc
sub
jbe
or
sbb
loop
je
dec
xchg
sbb
adc
inc
pop
dec
addl
inc
std
ficompl
fdivs
icebp
pop
add
and
pop
push
dec
push
dec
insb
mov
mov
js
in
fisttpl
xor
mov
push
mov
push
or
push
dec
add
ret
fs
shrb
ret
inc
inc
adc
cmpsl
mov
mov
sub
fistps
icebp
orl
mov
pop
movsb
push
in
adc
fisubrl
insb
add
test
in
imul
xor
jno
mov
cld
sbb
sbb
cs
mov
cmp
movsb
in
add
mov
mov
push
jge
pop
jmp
addb
push
shl
pop
imul
mov
sbb
out
mov
in
fistl
push
gs
aam
cmp
adc
mov
outsb
int3
loop
loopne
dec
stos
dec
jp
adc
das
add
mov
dec
jne
xor
push
shl
and
mov
lock
mov
pop
push
mov
daa
js
xchg
pop
xor
imul
cld
xchg
mov
or
sub
jp
xchg
sbb
push
xor
xchg
inc
ret
iret
mov
cmc
add
mov
jge
dec
loope
xor
fucomi
and
jns
mov
xchg
mov
incb
stc
cmp
cmpsl
out
jmp
push
aad
add
je
xchg
sbb
pop
nop
dec
loopne
mov
cmp
sbb
lcall
and
test
adc
dec
adc
pop
dec
adc
data16
shlb
sub
lods
fdivl
rorl
ja
fwait
cs
cmpsb
addr16
sbb
adc
inc
mov
inc
bound
mov
mov
sbb
cmp
dec
pop
add
int
cwtl
nop
mov
or
call
pop
cwtl
aas
inc
in
xor
adc
mov
add
cmp
pop
pop
incb
movsb
jb
add
into
cmpsl
shll
jmp
shrl
xchg
loop
jb
mov
mov
clc
enter
cmp
pusha
rcrl
call
fcmovnu
xchg
pop
outsl
xchg
pop
add
jge
mov
dec
fwait
xor
push
loopne
mov
lods
add
mov
iret
mov
loope
push
icebp
loopne
sti
pop
jmp
fsubrl
sub
inc
lea
jmp
cmc
fadds
lret
mov
add
xlat
mov
mov
cmp
pop
add
and
cmp
cmp
ja
jg
ss
int
cmpsb
fmuls
movsl
mov
rcll
dec
out
sbb
ljmp
or
int3
push
mov
sbb
or
das
sub
imulb
inc
mov
daa
subl
inc
xlat
and
pop
call
pop
lods
or
mov
mov
aad
outsb
jl
mov
add
subl
ss
xor
jmp
inc
aaa
mov
jg
jnp
xor
cltd
mov
mov
inc
fstpl
leave
leave
mov
adc
mov
int3
inc
push
cmp
mov
jne
adc
mov
inc
fistpll
jecxz
mov
popf
movsb
test
pushf
or
into
in
sub
ret
in
idiv
lcall
cmc
xor
lods
pop
mov
movb
and
es
mov
jp
mov
push
aam
stc
xchg
add
push
lea
outsb
hlt
sub
push
mov
fisttpll
sub
test
jb
jp
loope
jns
push
mov
mov
stc
dec
adc
or
out
lret
imul
sbb
adc
xor
loopne
jmp
adc
mov
sti
jle
lds
jge
test
add
and
jb
out
jne
xor
gs
sbb
mov
mov
imul
cli
jge
cmpb
gs
sub
cld
or
sbb
mov
out
push
sbb
lods
mov
lds
sbb
cmp
and
sbb
cmp
aam
xor
out
lods
outsb
mov
aad
lahf
jmp
jo
push
dec
fisttpll
dec
sarb
ja
cmpsb
jg
add
rclb
test
add
dec
pop
push
adc
push
int3
push
mov
sbb
cmpsb
ret
sbb
ds
movsb
adc
popa
adc
lods
jae
push
inc
lds
cli
mov
pop
mov
xchg
jl
pop
dec
andb
insl
pop
loopne
sti
pop
scas
in
push
xor
loop
xchg
fidivl
test
mov
mov
sbbb
push
mov
sub
pop
loopne
lret
adcb
jo
out
pop
or
les
or
stos
push
mov
fdiv
sub
push
xor
divl
inc
popf
pop
adc
fadds
push
call
jae
push
inc
push
dec
and
mov
sti
pop
dec
sbb
fs
jl
xchg
cltd
xchg
out
or
popa
lods
mov
cwtl
dec
shlb
gs
jo
pop
pop
pop
in
or
inc
push
fsubrl
std
inc
dec
mov
cmp
cltd
mov
add
shlb
rcrl
sbb
or
inc
pop
add
test
add
cmp
pop
inc
pop
push
pop
int
or
sbbb
cli
adc
cmp
outsb
inc
cmp
loope
sbb
iret
adc
out
push
ds
cmpsb
jne
shll
jo
pop
xchg
pop
testb
arpl
arpl
add
mov
and
push
push
lcall
add
xor
and
jne
mov
hlt
test
jae
adc
ja
lcall
movsb
nop
pop
in
push
or
inc
ror
pop
inc
mov
sbb
pop
cmpsb
mov
ja
movsb
xchg
out
adc
sti
or
xchg
lret
sub
subl
mov
leave
or
mov
arpl
cltd
fidivrl
adc
sbbl
mov
int3
sub
jmp
mov
mov
mov
adcl
jo
iret
addr16
mov
sub
adc
mov
adc
sti
push
stc
sbb
pop
cmp
fstl
cltd
enter
pop
mov
hlt
mov
fwait
xchg
adc
cs
mov
nop
jecxz
sub
xchg
push
aam
scas
fildl
js
push
cmp
or
aas
push
iret
jns
inc
xor
sbbb
mov
cwtl
adc
ret
es
jno
scas
inc
mov
lret
and
xorl
sub
outsb
shl
ss
cmp
sbb
icebp
aad
cs
bound
mov
ss
pop
sahf
inc
movsb
mov
add
das
leave
push
cs
je
arpl
add
cmp
xor
xor
sub
pop
cmp
scas
sub
stos
inc
loop
sarb
inc
incl
adc
fs
sahf
jl
or
rorl
rolb
lea
data16
lods
xchg
pop
data16
pop
std
ljmp
sti
inc
fs
into
test
movsl
leave
sbb
in
dec
fildl
mov
mov
mov
mov
int
nop
xchg
pop
dec
test
icebp
std
pop
lods
jns
jecxz
push
dec
mov
ds
xor
adc
ffreep
roll
xor
mov
addr16
inc
mov
cli
dec
jae
sahf
cltd
xchg
inc
mov
sbb
imul
pop
xor
or
jmp
lret
imul
jb
adc
shl
and
xor
sbb
gs
mov
dec
xchg
and
push
ret
jp
loope
es
aad
pushf
pop
test
pop
cmp
stos
dec
cwtl
enter
popf
mov
xor
xchg
xchg
push
data16
inc
insl
in
scas
stos
xor
mov
stc
push
loope
out
mov
aad
mov
jmp
dec
lods
push
std
dec
and
push
push
push
add
ret
bound
test
repnz
scas
mov
inc
dec
xchg
lret
xor
xchg
push
movsl
rclb
mov
inc
sbb
test
adc
push
and
das
ret
mov
mov
jne
xor
or
lret
add
mov
jb
aas
and
fstl
rcll
and
iret
xor
jle
nop
movsb
add
push
clc
clc
push
insb
pop
jo
inc
push
ret
sbbl
jae
inc
mov
push
out
movsb
xor
das
add
mov
jnp
fucomip
jle
fsubl
inc
pop
ret
lods
hlt
cmp
cmc
or
push
shrl
aad
dec
dec
push
jno
xchg
or
cwtl
and
and
rcrb
pushf
lret
push
jns
or
movsb
mov
inc
dec
mov
cltd
mov
jle
subb
mov
cmp
lds
mov
dec
sahf
add
lods
cmp
shrl
inc
out
sbb
xor
push
adc
hlt
int3
clc
outsl
xor
adc
inc
inc
imul
clc
xchg
imul
lar
popa
shr
movsl
js
out
jnp
inc
mov
dec
loop
lds
pop
mov
xor
cmp
sbb
cmp
loope
cs
push
lret
mov
jp
push
jnp
dec
xor
push
cmp
and
fsubs
pop
pop
loopne
inc
mov
mov
call
stos
cld
cmp
rorb
or
push
xor
aaa
sti
loop
sub
and
sbb
ficoml
push
enter
jle
push
daa
andb
sbb
shlb
dec
cmp
lock
xchg
jmp
shll
fucomi
sbb
les
movsl
ret
div
inc
ret
sub
pop
fisubrs
jmp
or
pop
pop
out
lds
mov
mov
push
lcall
sub
jne
adc
push
sbb
rcrb
sbb
jle
mov
inc
aam
mov
aam
push
pop
pop
outsb
mov
jg
jo
inc
addb
mov
push
cmp
jbe
in
mov
pop
ljmp
add
adc
xchg
xorb
xlat
aaa
inc
inc
test
mov
popw
lcall
gs
push
cltd
lret
cmp
rcrb
or
scas
test
jg
fmuls
push
inc
jecxz
xor
mov
cmp
dec
cli
lds
fcompl
cmc
fs
xchg
push
into
and
mov
cli
add
inc
and
das
sahf
mov
loopne
mov
dec
xor
test
aam
test
xchg
iret
jb
xor
push
push
in
stc
jno
scas
aam
fisttpl
test
lahf
in
ret
jl
dec
lods
pop
add
or
enter
ds
cli
add
inc
fwait
movsb
jbe
push
filds
xchg
pop
out
cmp
jb
pop
jg
out
clc
ds
jg
testb
mov
cwtl
out
je
es
rcll
popf
add
mov
into
in
mov
mov
arpl
mov
and
stos
adc
cltd
loope
stos
out
pop
jmp
jae
fsubr
jno
stc
test
outsb
mov
and
push
pop
clc
inc
xor
fstps
rclb
sub
inc
cwtl
and
dec
rcl
push
pusha
and
mov
push
lods
imul
orl
mov
rol
add
xor
ss
mov
inc
fs
add
sti
pop
outsl
sub
jmp
mov
inc
jmp
xchg
bound
ficompl
imul
jmp
mov
add
fs
lods
cmp
xchg
inc
inc
lret
loope
jmp
jp
jg
mov
stc
jo
dec
pusha
adc
mov
jl
lods
cld
fldl
push
or
rcrl
fildl
xchg
fimuls
xor
mov
or
faddl
push
shr
mov
imul
mov
push
dec
in
aad
filds
dec
int3
mov
imul
ds
rorb
jne
pop
mov
jmp
cmp
jecxz
adc
pfrsqrt
insb
mov
into
aad
data16
movsb
ret
pop
inc
cmp
loop
insl
sub
fwait
or
jecxz
pop
dec
mov
int3
rcrl
push
xor
les
mov
lret
mov
jnp
cli
mov
jl
enter
icebp
ret
push
divb
cmp
in
fs
lea
push
out
mov
dec
loop
and
pusha
test
outsb
test
stos
jecxz
dec
push
es
pushf
sub
sub
pop
sbb
clc
dec
gs
ja
test
cltd
or
xchg
push
ret
out
sti
and
lret
mov
mov
jmp
mov
mov
pop
orl
inc
repz
test
or
pushf
sbb
and
test
mov
sarl
sub
adc
data16
xlat
fsubrs
adc
arpl
mov
fldenv
sbb
test
data16
outsl
push
fcmovnbe
addr16
jecxz
lea
sahf
scas
scas
imul
ljmp
inc
xchg
jmp
inc
sub
push
into
mov
lds
pop
filds
or
test
shll
fstpl
inc
out
push
ret
mov
add
xchg
mov
ret
pop
daa
mov
xchg
mov
xchg
push
adc
xlat
stos
aaa
and
scas
loop
loopne
les
sbb
or
jmp
std
icebp
push
addr16
ret
test
mov
inc
les
stos
lods
mov
xor
sbb
popf
daa
jle
cli
in
push
pop
sub
and
pop
test
nop
fidivrs
gs
outsb
push
add
cmp
lcall
fistpll
ljmp
and
xchg
and
dec
xchg
push
add
jne
repnz
inc
mov
add
notl
jnp
insl
pop
sarb
lahf
aaa
jno
sbb
sbb
ljmp
leave
mov
cmp
jbe
dec
push
pop
inc
pop
adc
pop
adc
mov
inc
loope,pt
orl
pop
in
fwait
out
or
clc
dec
adcb
mov
in
xchg
jecxz
stc
jp
pop
es
enter
push
andb
jo
imul
mov
cmc
push
sbb
jp
mov
scas
dec
pop
jmp
add
int3
daa
jle
subb
stos
or
bound
loop
stos
xor
insl
testb
add
jo
adc
popf
inc
je
mov
inc
sub
mov
shl
iret
adc
cwtl
ja
pop
and
fimuls
mov
pop
jo
jno
push
ja
scas
das
cmp
mov
fimuls
mov
popf
or
rcr
lods
mov
icebp
int
inc
jmp
outsl
mov
jecxz
lods
add
push
shl
jmp
mov
cmp
lods
insl
sub
cmp
mov
mov
xor
jnp
dec
ret
jl
sub
popf
add
pop
mov
mov
out
inc
mov
sub
out
mov
inc
mov
xchg
ret
ret
call
mov
and
mov
sub
scas
mov
add
or
adc
das
lret
lahf
adc
push
and
fs
incb
sub
daa
adc
inc
ret
fidivrs
add
enter
shr
lcall
xor
push
test
lock
scas
out
push
jno
loop
xor
mov
inc
push
dec
in
or
lock
xor
in
lret
dec
orl
mov
adc
stos
push
cmpsl
les
adc
out
leave
push
repz
or
adc
cmp
push
xchg
outsb
inc
adc
pop
adc
mov
jb
mov
je
and
sarb
inc
scas
jo
cmpl
push
mov
inc
adc
or
js
jge
mov
stos
xor
gs
ret
or
mov
mov
pop
jo
jg
enter
fimull
aad
cmp
lods
aaa
dec
jge
inc
jbe
test
ret
in
hlt
incb
ret
loop
out
lods
mov
fmuls
in
fistpll
scas
fwait
popf
pop
rcr
call
and
adc
les
fisubrl
mov
sbb
xor
fcoml
mov
popf
jmp
jae
imul
int
sub
mov
adc
mov
mov
out
adc
lea
jg
scas
test
sub
jb
jmp
jge
push
push
push
pop
cmpsl
cs
dec
push
fnstcw
test
cltd
xor
and
enter
and
stos
mov
cmp
add
loope
mov
js
jmp
cmc
adc
dec
push
sub
lods
sbb
fwait
popl
int
mov
lods
ret
stc
mov
pop
dec
bound
or
dec
push
stos
xor
inc
mov
sbb
xchg
inc
inc
aam
sarb
in
adc
idivl
ss
movl
and
mov
pop
scas
push
or
rcrl
dec
mov
mov
dec
jnp
into
mov
loop
mov
test
jne
xchg
add
test
sub
or
inc
mov
shr
hlt
imul
rorl
lods
inc
insl
add
push
pop
cld
shrb
add
xor
data16
test
sub
xchg
lea
dec
add
out
lock
jne
test
or
cmp
in
sub
mul
rcrl
or
and
mov
xchg
lret
je
rorl
push
xor
mov
clc
sub
fwait
mov
jb
adc
sub
das
dec
insl
pop
push
pop
push
shlb
es
push
adc
pop
sbb
popf
adc
pop
loope
iret
pusha
shl
push
adc
xor
xor
dec
or
add
cltd
repz
adc
ss
mov
inc
hlt
ret
rorl
imul
data16
push
ret
jnp
into
sahf
sub
out
shrb
sbb
xor
mov
xchg
mov
in
ds
mov
mov
lods
scas
xchg
or
pop
sbb
cmpsl
enter
xchg
inc
push
pop
push
dec
popf
jge
xor
fs
jecxz
inc
popa
ljmp
or
lods
pushf
xor
cs
enter
enter
cmpsb
inc
orb
xchg
fwait
daa
cmp
sub
nop
ljmp
inc
jne
push
vmread
inc
pusha
sub
mov
mov
shl
and
fmulp
ljmp
jmp
popf
mov
dec
adc
add
inc
sbb
incb
mov
or
or
pop
insb
xchg
js
popa
ljmp
or
fisubl
cmpsb
lock
jbe
cmp
xchg
xchg
fbld
xor
shll
cltd
lds
movsl
dec
das
rcl
cltd
or
sub
jecxz
sub
cmp
xor
addr16
jmp
je
mov
push
xor
out
and
outsb
pop
insb
test
ds
sarl
pop
cmp
mov
scas
mov
cvtps2pd
lahf
lea
pushf
test
and
out
push
std
dec
adc
shl
pop
sub
cmpsl
push
lret
mov
pushl
and
mov
popf
push
stc
xor
out
fwait
mov
add
test
mov
push
xchg
sbb
loop
fldl2t
shrl
in
sbb
in
fs
mov
mov
hlt
cmpsl
mov
fldcw
aad
cmp
or
xor
cmpsl
lds
popf
fisubrs
cmpsb
loope
test
out
movsb
fxch
xor
fnstcw
cmp
mov
fs
pcmpeqd
jbe
jg
lea
fwait
aaa
enter
ret
adc
sbb
xor
mov
push
push
jo
fcmovnb
nop
ret
dec
testb
dec
scas
ss
cwtl
shl
cld
xchg
lds
lret
and
xlat
inc
adc
jnp
sub
js
repz
pushf
mov
inc
in
call
cld
cmp
shlb
enter
push
xchg
cmpsl
push
cmp
mov
cmp
ficomps
jne
or
jns
mov
cmpsb
push
outsb
dec
jo
outsl
pushf
xor
pop
and
jae
and
push
push
or
pusha
sahf
adcb
cmp
mov
es
dec
aas
ljmp
fstpt
inc
inc
or
xorb
popa
aas
xlat
arpl
push
gs
sti
push
mov
xchg
call
in
sub
jmp
inc
fmulp
pop
lret
pop
rcr
in
fs
adc
test
sub
xchg
popl
insl
and
nop
inc
xchg
mov
dec
stos
adc
repnz
daa
mov
hlt
push
mov
mov
inc
out
sbb
cli
pop
adc
adc
in
adc
mov
mov
dec
out
and
mov
mov
rol
rorl
pop
add
mov
aad
add
aaa
lret
mov
nop
and
icebp
xchg
sbb
rcrl
add
fwait
sub
inc
mov
dec
jne
fidivrl
stc
lods
pusha
cmpsb
inc
xchg
jp
xor
in
shl
lcall
cwtl
or
ret
cld
push
lsl
jb
adc
icebp
iret
jle
or
sub
dec
in
cld
fbld
inc
out
sahf
test
in
lahf
mov
fxch
call
lods
cmp
insb
bound
lds
rcll
push
or
jne
jbe,pt
pushw
dec
loope
inc
pop
inc
shl
pop
and
pop
daa
cmp
inc
andl
and
xor
ss
inc
lods
cmpsb
add
cld
iret
dec
mov
lret
mov
adc
pop
enter
lahf
in
and
pop
arpl
ds
leave
addl
jnp
fisttps
inc
fstpl
in
pop
arpl
sti
rcrb
push
jo
lcall
xchg
sti
adc
lds
repz
aaa
fcomi
mov
sahf
out
xlat
mov
push
ret
adc
and
jb
aad
imul
add
gs
sbb
push
adc
or
inc
cmp
fsubs
div
insb
xor
scas
pop
addr16
movsl
push
repz
mov
pop
fnstenv
push
test
or
lea
push
test
add
std
mov
fsubrs
fs
sbb
pop
filds
add
mov
inc
sahf
sub
xor
int3
shrb
imul
decl
cmp
and
roll
mov
xchg
xchg
stos
or
movsl
js
jle
push
xor
das
dec
loop
mov
and
jnp
cmp
jmp
ret
inc
inc
dec
test
xchg
loopne
cmp
sbb
iret
sub
xlat
mov
lock
into
jbe
lret
cld
jo
jno
or
mov
setae
dec
sub
ret
jge
xor
test
pop
lock
dec
mov
xor
cmp
into
test
cmp
enter
clc
add
in
xor
clc
add
loope
rorl
jns
out
and
sbb
xor
jge
rep
ds
jae
adc
dec
fs
ss
clc
adc
sbb
repz
mov
xchg
call
inc
pop
push
inc
add
pop
rol
pusha
sti
imul
mov
fsts
cltd
cmp
cmp
pop
jb
pop
popf
lcall
bound
jmp
push
cmp
nop
movsb
and
in
adc
call
push
leave
mov
mov
in
and
xorb
jnp
rcrb
push
dec
movsb
lods
dec
mov
roll
mov
mov
jp
sbb
mov
call
scas
stc
pop
mov
lds
test
sbb
out
and
out
outsb
stc
push
clc
push
jnp
cltd
push
cltd
add
push
xchg
or
aam
push
fcmovnbe
or
mov
xor
ret
andb
mov
mov
popf
fidivrl
pop
lea
pusha
dec
xor
inc
fcoml
jge
not
push
mov
rorl
ret
in
adc
pusha
aas
push
je
pop
xchg
xchg
stos
test
mov
dec
stos
clc
in
xchg
sbb
repnz
sarl
or
adc
lods
push
shl
cmpsl
lock
bound
divl
cltd
push
add
jl
xorb
int
jmp
test
fidivs
enter
or
in
cmp
inc
sbb
pop
mov
push
je
and
sbb
inc
and
cld
sub
push
and
out
arpl
inc
cmp
shll
xor
add
pop
cwtl
or
mov
push
xchg
pop
push
mov
arpl
das
inc
sub
hlt
insl
outsl
int
xchg
jnp
jne
mov
sarl
cwtl
andb
js
and
xor
ror
and
or
adc
or
mov
in
mov
mov
and
sub
add
jge
movsb
mov
and
insl
xlat
dec
and
and
dec
fsubl
jecxz
xchg
pop
ret
push
and
cltd
idiv
stc
mov
clc
push
or
outsl
push
pop
mov
xchg
inc
fnstsw
sbb
push
ja
mov
or
push
mov
or
test
jnp
call
cmc
insb
mov
pop
enter
loop
shr
mov
lods
test
mov
push
xchg
xchg
mov
add
add
shl
dec
adc
rorb
pusha
mov
dec
mov
or
pop
sbb
shl
dec
mov
xor
xchg
or
out
scas
inc
subl
stos
cmpsl
or
into
mov
jb
push
ljmp
xchg
sbb
push
jmp
inc
mov
ljmp
mov
inc
xchg
jle
inc
movsb
cmc
loope
sahf
dec
push
ljmpw
ret
and
repz
fbld
in
loopne
add
mov
cmp
sbb
cld
in
call
sbb
xlat
fisttpl
scas
cltd
fwait
inc
std
ja
cmpb
pop
xor
loopne
lock
push
inc
cmpsb
lret
call
xchg
ss
mov
test
dec
cmp
test
divb
stos
or
pop
insb
lods
ja
add
jns
mov
pop
or
xor
cmp
fisubs
sbb
mov
cmp
mov
xchg
mov
lret
roll
cmp
call
ret
popa
inc
jp
jbe
lods
cmp
inc
inc
imul
push
imul
sti
pushf
bound
leave
fistpl
sub
ja
and
sub
or
andw
jge
leave
or
or
iret
ljmp
and
cmp
js
inc
push
sub
add
mov
movsl
xchg
repnz
pop
andl
mov
in
andl
insb
pusha
or
enter
repz
xchg
sbb
jno
aad
aas
testb
iret
fadds
xchg
mov
mov
into
push
int3
pop
push
adc
add
mov
pop
and
scas
les
mov
mov
xchg
out
cmp
adc
push
aaa
adc
jp
das
sbb
arpl
or
xchg
jmp
data16
xchg
sbb
xchg
push
push
int3
in
das
lcall
imul
and
xor
cmp
shl
shlb
xor
loopne
xor
icebp
fstps
xchg
in
imulb
mov
push
enter
mov
nop
jge
xchg
incb
sti
xlat
aam
push
xchg
lret
imul
test
mov
inc
adc
add
cltd
xor
mov
lods
jp
inc
ss
stc
scas
ljmp
std
cmp
ror
int3
lock
hlt
call
adc
jp
lea
test
jne
or
xchg
dec
lcall
dec
lods
mov
shrb
adc
xor
xor
sub
icebp
scas
xchg
leave
push
popf
push
mov
js
add
xchg
and
adc
sahf
outsb
icebp
xor
filds
sbb
dec
andl
pop
outsl
lock
mov
and
mov
push
divl
mov
popf
jmp
mov
cltd
shll
cmp
jge
mov
pop
std
push
and
adc
mov
popf
ret
enter
in
push
mov
push
push
adc
addl
cmp
enter
in
cmp
push
mov
lahf
movsl
inc
lea
pop
jp
ljmp
subb
add
xchg
jle
xor
push
xchg
sahf
iret
pop
add
std
or
imul
clc
lahf
add
loop
fstpt
icebp
push
enter
push
jbe
pop
outsb
mov
dec
add
pushf
xchg
in
shll
fildll
push
add
push
adc
adc
in
das
sbb
mov
adc
push
sbb
mull
movsl
rcr
mov
cmp
sbb
mov
inc
mov
or
sub
into
enter
add
mov
adcl
xchg
pop
pop
test
test
cmpsb
add
in
out
pushf
lods
sub
mov
jno
lcall
mov
in
aas
repz
arpl
or
mov
push
xor
ja
cmovbe
mov
lods
call
cmp
mov
adc
stc
add
or
fldl
adc
add
sub
pop
pop
cmp
dec
push
adc
cwtl
daa
jmp
mov
imul
inc
sarb
dec
fldcw
repz
add
into
mov
push
shl
fstpl
popa
mov
lds
sti
sub
adc
ret
jno
sbb
jmp
pop
mov
xchg
add
jne
jae
xchg
loope
gs
add
sarb
pmaxsw
fildl
mov
test
cmp
xchg
outsl
stos
fsubl
sub
mov
push
or
sti
mov
loope
sub
jo
fneni(8087
dec
pop
add
outsb
xchg
fwait
js
ja
shl
dec
js
xchg
ret
mov
inc
scas
push
sbb
xchg
aaa
dec
cmpsl
adc
push
daa
cs
inc
sub
pop
ljmp
mov
bound
xchg
mov
gs
dec
fldenv
loopne
or
mov
jmp
popf
popl
xorb
xor
pop
cld
sub
inc
push
hlt
pop
sbb
movsb
clc
ret
push
aam
xchg
pop
popa
popa
mov
xchg
outsl
jne
add
rcrl
xchg
push
mov
movsb
push
in
fisubs
call
jmp
cmp
cmc
cmp
rcll
xchg
lahf
sahf
xor
cmp
sbb
rol
cld
int3
icebp
les
mov
mov
add
rclb
movsb
and
mov
fdivr
cmp
or
inc
pusha
add
sub
mov
inc
lods
andl
movsb
scas
lahf
add
xor
mov
je
mov
mov
cmpsb
cmp
mov
lea
pop
dec
ss
sti
mov
xlat
pop
add
mov
push
icebp
cmp
inc
add
cltd
pop
cmp
pop
cld
imul
lods
adc
mov
push
sub
jbe
sub
aas
into
jb
js
push
sub
ret
xor
into
xchg
push
icebp
and
or
ret
lahf
dec
loop
movb
popa
aad
add
movl
fsub
xchg
aaa
mov
mov
pop
xchg
or
shl
sbb
cmp
or
mov
pop
das
jo
add
repz
cmp
jo
mov
in
jno
inc
push
xor
mov
mov
stos
shll
inc
out
jp
dec
sbbb
adc
jge
or
std
inc
fidivrl
in
jg
push
pop
push
loop
test
in
aas
inc
div
insb
into
test
xchg
fcomip
call
subb
mov
push
adc
std
in
js
mov
pop
adc
out
mov
ds
dec
dec
imul
in
in
sub
adc
xchg
push
and
arpl
adc
pop
scas
pop
inc
push
xchg
xor
test
push
sbb
pop
test
sbb
dec
push
sar
cli
in
mov
out
out
out
aad
ret
mov
jl
fstpl
sub
cmp
sub
fisubs
fs
mov
cld
mov
mov
pusha
iret
std
and
dec
and
shll
xchg
push
cmp
insl
imul
outsl
in
cli
xchg
cmc
jnp
pop
sub
and
sar
xchg
jmp
imull
dec
push
in
or
pop
dec
ds
or
push
mov
nop
out
and
xor
int3
scas
andb
scas
mov
ja
adc
mov
test
mov
andb
jge
xor
out
rol
and
mov
xchg
xor
aaa
std
push
pop
ror
fnstenv
shll
dec
sbb
pop
imul
adc
loope
sbb
fstps
mov
dec
and
nop
mov
add
into
lds
lcall
and
inc
jae
jbe
imul
inc
test
ret
xchg
cmp
loop
adc
call
inc
sti
mov
sub
inc
push
and
pop
sbb
and
push
inc
push
add
rcrl
out
aas
mov
jecxz
clc
int3
imul
es
popa
xchg
jne
les
dec
outsb
dec
loope
jbe
loopne
jnp
hlt
roll
ja
paddusw
xchg
mov
xor
in
add
and
cmp
jp
sahf
lods
mov
popf
mov
mov
arpl
movsb
pop
and
outsl
jmp
xor
dec
loopne
out
pop
xor
sbb
pop
xchg
imul
stc
sbb
lods
sub
fmul
jbe
sar
push
xlat
inc
cmp
jmp
cld
cmpsl
pop
pushf
pop
adc
mov
xchg
mov
pop
jnp
shrl
cmpb
pop
cli
cmpsb
xorl
aad
xchg
push
pop
dec
cld
xchg
ljmp
sub
xchg
jecxz
mov
mov
jae
add
js
test
loop
cmp
add
jecxz
jecxz
fwait
inc
stos
jae
inc
sbb
pop
adc
mov
ljmp
aas
xor
mov
mov
sub
xchg
addr16
and
add
mov
loop
sub
sub
mov
inc
sti
lret
ret
loopne
ret
inc
sub
and
cmp
xchg
pushf
test
sbb
js
push
cs
xor
aas
repnz
sub
hlt
jle
and
jl
pusha
jge
popa
movsl
dec
add
add
dec
scas
stos
test
insb
mov
lods
stos
push
ds
jo
add
sub
pop
mov
sub
lock
gs
dec
int
mov
pop
js
sub
add
jne
in
dec
sbb
stc
add
cmpsl
aad
or
lret
lahf
es
bound
cli
xor
cmpsb
loopne
lret
out
scas
cmpsb
mov
and
pop
pop
cmpl
and
jb
outsl
inc
xchg
xor
mov
xchg
xchg
push
adc
mov
or
gs
call
cmp
xor
les
lcall
arpl
and
or
jns
jne
rclb
int3
cmpsl
stos
push
lds
push
test
pop
ret
shlb
jne
mov
sbb
xchg
cmpsl
out
pushf
fdivl
jbe
jb
out
or
xchg
int3
pop
push
fs
cmp
inc
in
mov
mov
jno
push
in
stos
ss
cltd
push
movsb
push
and
sarl
jg
in
imulb
cli
js
mov
add
or
insl
mov
sub
add
orl
sti
jo
adc
fcomi
lahf
xor
cmp
cs
mov
xlat
jbe
notb
inc
sub
in
dec
fiaddl
mov
mov
int3
mov
mov
inc
adc
and
cmp
adc
and
fwait
and
inc
out
sbb
std
std
mov
or
jg
pushf
inc
push
pop
icebp
mov
out
out
insl
repz
add
lahf
xchg
addr16
jmp
adc
ficoml
pusha
jno
lods
ficompl
testb
dec
mov
icebp
mov
jnp
and
mov
int3
fnstsw
cmp
icebp
or
out
dec
jno
mov
push
mov
adc
mov
orl
lahf
insl
cs
jl
out
fsubrl
pop
std
inc
scas
lods
mov
pop
inc
dec
jmp
loop
add
jge
in
sahf
test
jbe
and
repnz
mov
mov
lret
jl
mov
dec
pop
or
hlt
jge
sbb
cwtl
loopne
scas
fadds
xchg
push
pusha
clts
lcall
je
ss
sti
out
in
jne
ficompl
push
adc
push
mov
ds
sbb
daa
nop
xorb
cmp
push
sbb
in
inc
outsl
mov
in
xlat
lret
add
xchg
pushf
adc
dec
mov
sbb
test
fsubrp
jns
lahf
xchg
stc
xchg
data16
rol
jp
daa
mov
sbb
jmp
or
stos
xchg
mov
scas
push
push
jge
pop
dec
hlt
sahf
lds
jns
dec
xorb
out
inc
dec
ret
cmp
loopne
pop
mov
dec
test
insl
push
jle
adc
adc
rcrl
loopne
push
shrb
and
inc
test
into
test
insb
test
clc
movsl
aas
inc
xchg
mov
out
inc
add
sub
ret
enter
jl
dec
sbb
jle
sahf
les
jb
fwait
jmp
fcomi
icebp
sahf
xor
push
popf
jmp
data16
sub
sub
smsw
cmp
pop
adc
xchg
mov
cmp
xchg
stc
pusha
je
fsubl
out
adc
ret
popa
xor
lret
add
dec
cltd
cmp
push
dec
repnz
pusha
ds
mov
adc
xor
stos
inc
lcall
fcoms
or
in
addr16
sub
or
sbb
push
ret
sarl
push
loope
ret
pop
sarb
fimull
popl
cmp
pop
nop
out
int
add
lret
out
mov
popf
pusha
mov
xor
in
cli
ss
mov
add
push
cmpsl
sub
popf
xchg
cmp
lret
and
aaa
mull
jo
xchg
aam
inc
js
test
inc
rcrl
fisubrs
cmpsl
mov
sbb
leave
xor
sbb
pushf
push
ljmp
ljmp
xchg
sarb
std
rcrb
adc
jo
mov
mov
mov
jmp
and
xchg
mov
add
test
imul
pop
aad
icebp
lret
mov
popa
xchg
mov
push
push
push
push
xor
scas
and
jne
inc
incb
cmp
xor
stc
mov
js
loop
leave
dec
shll
outsl
sbb
xchg
xor
jne,pn
movsl
and
sub
outsl
add
stos
and
notb
dec
ljmp
jnp
pop
insl
mov
fidivl
sub
aad
xchg
out
push
jnp
and
adc
cli
daa
xor
jns
jecxz
xchg
xchg
xchg
imul
and
push
fwait
ret
ljmp
imul
jle
fnstenv
ss
inc
xchg
sbb
imul
andl
sbb
fisubs
fadds
inc
lock
imul
mov
fistpll
push
pop
test
cmp
lahf
xchg
call
mov
add
repz
andl
push
nop
sub
test
xchg
pop
jae
xchg
dec
sahf
adc
xor
int3
outsb
in
aas
movl
aas
xchg
repnz
jno
mov
std
lcall
jnp
add
inc
inc
mov
mov
sub
mov
int
mov
jle
or
stos
xor
mov
cmpsl
stc
enter
fnsave
push
dec
and
sub
enter
jge
jle
sbb
mov
ret
sbb
jge
call
pop
cmc
imul
mov
mov
imul
and
dec
sbbb
fldcw
push
adc
loope
stos
mov
stos
or
pop
adc
scas
add
popf
dec
inc
movsl
push
rclb
ss
xchg
add
les
cmp
mov
test
xor
jp
je
xor
inc
cmpsl
jg
jge
cltd
in
call
jns
mov
insl
mov
lahf
xlat
loop,pt
scas
xchg
mov
dec
mov
mov
pop
and
insl
shll
call
jge
movsb
and
mov
and
sbb
insb
fdivl
xchg
shll
add
inc
nop
lahf
pop
fcomps
xchg
imul
and
adc
xor
shll
hlt
outsb
cmp
cmp
xchg
shll
call
mov
nop
xchg
sbb
or
arpl
cmp
xor
lods
or
scas
pop
mov
cltd
cld
in
mov
xchg
and
sbbl
lods
fidivl
adc
in
cltd
sub
mov
cmp
xchg
and
lcall
sub
inc
in
mov
dec
or
push
lock
jmp
lret
adcb
lea
inc
jge
sbb
aad
and
into
push
xchg
mov
pop
es
out
sub
add
xchg
pushf
jns
xchg
dec
pop
hlt
pusha
add
pop
mov
mov
fwait
dec
sbb
mov
ficompl
mov
and
fsubrl
gs
mov
shl
outsb
pop
xor
pop
dec
mov
sar
mov
ds
jecxz
sarb
mov
sub
fs
pop
dec
call
fdivl
push
add
pop
call
fldcw
js
add
sub
fbstp
pushf
pop
pop
mov
xor
mov
imul
mov
inc
add
in
or
adc
arpl
data16
hlt
add
fldcw
mov
dec
out
add
aas
push
push
cltd
add
xchg
pop
cmp
mov
fs
adc
jns
loop
shl
sub
and
inc
fcomps
jle
fildll
testb
xchg
pop
pop
pushf
imul
cmc
cmp
sub
xchg
or
or
data16
xorl
inc
cmp
push
push
or
cwtl
mov
xchg
add
sbb
loopne
cmp
xchg
inc
dec
in
sub
xchg
cmp
ss
inc
push
xor
insb
cmp
pop
in
xchg
out
dec
shrb
repz
push
testb
add
je
ret
sub
cmp
jge
mov
adc
pop
mov
sub
ss
fildll
xchg
aad
cmp
mov
scas
cmp
test
int
mov
in
repnz
or
rcrb
outsb
outsl
ljmp
jp
stos
lds
push
je
leave
jge
mov
aaa
dec
mov
mov
sub
lcall
pop
cmp
jmp
add
pop
aas
cmp
mov
stc
popa
mov
lea
rcrb
scas
rcl
sub
std
dec
push
xchg
pop
push
adc
pop
pop
mov
lea
insb
fldt
sbb
cmp
pusha
push
pop
cmc
jns
jo
push
jbe
add
jl
rclb
xchg
adc
and
add
or
subb
lcall
out
das
hlt
pop
mov
dec
cmpsl
sbb
push
add
inc
idivb
test
xchg
pop
ret
fbld
out
icebp
aaa
test
cmp
testl
push
cmp
cwtl
add
icebp
jge
cld
inc
rcr
inc
push
mov
cltd
repnz
add
inc
ret
popa
dec
jae
sub
imul
mov
push
ret
daa
mov
cmp
mov
mov
mov
jge
mov
xchg
and
movsl
mov
fnstenv
mov
movsl
xchg
lods
xchg
cs
mov
dec
xor
data16
aaa
inc
ljmp
dec
rorb
int
in
mov
jns
jne
sbb
push
pop
fs
lcall
jl
aas
sub
xchg
testl
pop
cwtl
and
push
mov
adc
mov
push
out
mov
subb
jp
mov
stc
dec
adc
add
pop
push
dec
and
hlt
fbstp
lods
push
movsb
cli
pushf
aaa
mov
or
jns
mov
xchg
andl
cmpsl
or
inc
pop
fsts
lahf
add
pop
iret
and
or
dec
xchg
mov
stos
or
mov
cmc
jae
ficompl
inc
adc
out
xor
jp
dec
add
xchg
test
lds
fdivrl
add
stc
call
enter
lahf
in
rcrb
mov
mov
xor
or
test
lods
mov
je
fbstp
mov
mov
enter
xchg
pop
fsubs
in
add
push
test
or
push
mov
popa
fsub
mov
mov
cwtl
test
and
and
shr
mov
sbb
test
jg
push
sbb
dec
scas
jns
push
adc
jp
in
or
imul
movb
aas
repz
push
cmpsl
subl
cld
cli
sbb
sbb
and
rcr
xchg
add
mov
sbb
test
sub
mov
dec
and
imul
data16
outsb
div
push
dec
push
lcall
pushf
mov
fistps
test
call
and
fmul
subps
arpl
out
sti
sub
jns
in
push
adc
jle
xor
push
xchg
lock
sub
lret
dec
push
scas
lret
jecxz
inc
pop
mov
push
sub
in
lods
in
lahf
push
xlat
jge
adc
pop
sub
int3
inc
sbb
xor
fidivl
sub
pop
adc
push
enter
stos
push
stos
out
jbe
mov
jl
push
pop
es
dec
sarb
enter
push
outsl
push
gs
push
leave
or
lds
pop
mov
mov
push
iret
inc
popf
clc
shlb
test
xor
cld
xchg
scas
jne
das
scas
ss
popf
add
lods
mov
cli
adc
stos
jl
mov
xor
add
xchg
push
xlat
mov
in
mov
sub
scas
and
add
pop
ja
pop
shrb
xor
shll
push
sub
repz
in
test
out
sbb
leave
add
mov
rolb
cmc
mov
pop
xor
mov
mov
mov
jecxz
mov
inc
mov
les
pushf
arpl
xchg
or
les
mov
sub
xchg
mov
std
fs
inc
fldl2e
mov
mov
mov
popa
add
sbb
push
mov
fwait
xchg
stos
lods
mov
es
sub
add
pop
xchg
insb
cmp
rolb
bound
insb
les
xchg
orl
and
mov
mov
mov
xchg
inc
sahf
cmp
dec
cli
das
push
mov
ret
fisubs
jns
xchg
jne
int
fs
add
sahf
sub
add
push
cmpsl
rcrb
mov
jae
or
lods
dec
pop
outsl
out
and
pushf
rolb
pop
pop
iret
push
xchg
mov
ffreep
test
push
sub
lds
mov
scas
dec
test
stc
push
inc
lahf
js
gs
and
lret
cltd
ficompl
pop
mov
fistpll
xchg
ljmp
int3
mov
lcall
out
mov
repnz
into
testl
pop
in
push
data16
push
inc
in
mov
rorl
imul
pop
xor
fmull
arpl
aad
cmp
movsl
dec
in
xor
jge
imul
in
mov
sub
mov
rcll
mov
test
sub
lea
aaa
push
pop
dec
out
fbstp
fisttps
into
pop
lods
push
leave
lcall
lods
push
mov
or
push
loopne
cmp
dec
in
data16
add
out
ja
mov
test
mulb
loope
icebp
jo
jmp
mov
pop
test
das
sub
or
pop
negl
pop
hlt
mov
fcmovnu
fcmovbe
in
mov
xchg
popf
xchg
popf
cmpsb
mov
dec
aas
mov
sub
xchg
sahf
jne
rcrb
stos
aam
xchg
sub
out
inc
xlat
cli
dec
insl
dec
fildll
jp
ljmp
add
aam
loope
shrl
cltd
mov
xchg
inc
ds
xchg
scas
sub
push
and
inc
mov
ror
dec
dec
mov
shll
pop
add
outsb
repnz
sub
das
sub
jo
push
jne
dec
jbe
fmuls
or
inc
dec
out
or
jb
dec
push
jb
jmp
jns
push
pop
filds
gs
aad
lea
sub
scas
jbe
pusha
add
lods
add
sarl
hlt
pop
mov
sub
test
mov
scas
or
sub
push
in
iret
int3
int3
lahf
jge
stos
subb
pop
pop
mov
jle
test
pop
out
loope
pop
lret
nop
mov
out
clc
bndldx
xchg
add
adc
insl
leave
aam
sarl
loop
in
repnz
hlt
subb
mov
cmpsl
pop
lods
xor
arpl
adc
and
pop
call
and
mov
cld
or
aas
xor
inc
sub
aad
cs
or
js
hlt
dec
testl
icebp
shl
cmp
psraw
jg
push
pop
sahf
arpl
dec
and
pop
push
lcall
imul
dec
push
fnstsw
cltd
stos
jmp
push
sbb
inc
push
leave
cmc
jbe
mov
gs
pop
pop
rorb
ret
cli
hlt
mov
mov
shrl
push
lcall
movsl
test
movsb
les
shlb
dec
dec
mov
cmpl
leave
jbe
mov
cmp
arpl
cmp
out
dec
mov
pop
xchg
sbb
stos
or
lcall
popf
aas
in
fidivs
fsubl
in
sbb
out
mov
leave
dec
mov
jbe
je
fldpi
fistpl
lods
rorl
imul
adcl
adc
mov
sub
jno
dec
out
and
lods
ds
cmp
out
cld
mov
ljmp
aaa
xchg
lcall
fwait
mov
int3
stc
pop
movsl
je
mov
stc
mov
and
adc
push
and
push
aas
leave
jle
inc
call
push
pop
push
add
icebp
fwait
xchg
imul
jmp
mov
push
sbb
arpl
ret
xor
push
add
or
decl
cmp
jne
pop
loopne
loope
pusha
into
lahf
mov
mov
jbe
or
xchg
rcrb
jecxz
out
pop
adc
lret
nop
mov
insb
xor
arpl
repz
pop
cs
lods
int
mov
test
jmp
xchg
fs
push
cmc
adcl
xor
lahf
and
push
pop
in
adc
aaa
cltd
insb
dec
lret
push
es
imul
faddl
out
xor
in
aaa
into
int3
cmc
loopne
test
test
lea
add
cld
ret
mov
push
jns
sahf
adc
jnp
cltd
movsl
and
out
dec
fwait
push
and
mulb
cltd
ljmp
mov
movsl
or
xchg
test
ds
idivl
movsb
mov
adc
jmp
sbbl
push
in
filds
mov
xchg
cmpsb
mov
mov
xlat
sbb
and
aas
push
pushl
or
gs
pop
sub
cmpsb
cmp
mov
pop
sahf
imul
subl
mov
outsl
cld
and
sbb
mov
outsb
loopne
lahf
inc
push
insl
mov
cmp
aad
inc
xchg
bound
imulb
repnz
adc
aad
gs
fisubl
sbb
pop
pop
lds
pusha
arpl
pop
subl
sbbl
push
fcompl
xchg
jle
mov
fwait
and
add
test
sbb
addb
cmp
mov
jns
stc
jl
pop
cmp
fimuls
cld
dec
pop
add
mov
jns
call
dec
mov
mov
cltd
addr16
mov
das
data16
push
xchg
lret
pop
jno
scas
ja
iret
pop
mov
mov
sub
stc
mov
stc
in
cltd
or
pop
push
out
aam
and
mov
cmpsl
out
sbb
add
sub
xchg
fisubrs
mov
lret
xchg
fwait
add
adc
and
mov
stos
lcall
pusha
jns
leave
clc
push
shrl
out
mov
xor
scas
and
inc
fdivs
je
adc
jle
push
jmp
lock
mov
mov
in
stos
loop
cmp
sbb
fwait
daa
movsb
adc
std
fsubrl
jp
fstpl
pop
mov
sbb
inc
dec
idivl
shrb
jns
fs
insl
xor
ret
out
iret
mov
xchg
daa
mov
das
int3
cmp
jne
and
cld
push
das
or
test
outsb
mov
xchg
sub
or
xlat
outsb
mov
cmp
push
sub
cltd
fmull
icebp
repz
sbb
into
and
fisubrl
cmp
jae
push
lahf
push
mov
lds
nop
lret
mov
xchg
pop
fcompl
or
idiv
pop
xlat
data16
sti
in
stc
cmp
sub
shl
or
sbb
in
lret
mov
or
add
rcl
sub
scas
scas
ds
jns
lods
xor
inc
inc
add
into
push
lods
and
or
shr
sbb
cmp
or
rol
or
movsb
dec
xlat
mov
xchg
jb
jge
lahf
outsl
inc
fcoml
mov
push
stos
incb
aam
iret
push
enter
and
sub
bound
mov
push
and
add
mov
into
or
cmp
push
mov
mov
mov
rcrl
cvtpi2ps
xor
jno
lock
mov
push
cmp
sub
cld
inc
jg
addr16
rcl
or
lods
mov
cmpsb
sti
sbb
mov
shlb
mov
jb
loope
push
mov
inc
shl
int3
mov
bound
ficoml
xor
jge
sahf
cmpsb
push
cs
sarb
mov
push
test
adc
pushf
das
cmpsl
clc
mov
int
mov
lret
in
add
out
sbb
jne
je
das
jb
xor
mov
jle
mov
test
jle
leave
sbb
xchg
loop
or
xor
loopne
mov
push
sbb
rcrl
xor
ret
sbb
comiss
call
xlat
sar
ret
sub
xor
in
out
outsb
sub
sti
and
and
insb
out
sub
cmp
int3
sbb
mov
shrl
xchg
xor
inc
inc
push
xchg
stc
push
xor
loope
pushf
mov
sub
or
decl
or
popf
cmp
inc
int3
les
add
popf
xor
movsb
pop
fildll
fldl
iret
cwtl
sub
rclb
scas
daa
gs
mov
cmc
dec
pop
es
jae
sbb
mov
jg
or
pusha
jmp
int3
decl
cmp
sub
pop
push
pushf
aas
xchg
mov
cmp
push
dec
shl
push
jmp
shl
cmp
fdivrp
cmc
dec
pop
cmp
mov
cmp
mov
sbb
sti
lock
fadd
xchg
mov
jnp
add
or
insl
addr16
std
mov
pop
clc
and
bnd
stc
insb
cmp
jo
push
mov
and
xor
scas
int
cli
fwait
xchg
popa
pop
pushf
int
fwait
adc
and
subb
sub
mov
ljmp
xchg
xchg
sbb
mov
pusha
sbb
cmp
jb
lret
bound
int3
jnp
iret
xchg
jbe,pt
out
mov
pop
shrl
add
jbe
pop
icebp
mov
push
pop
int
hlt
sbb
repnz
cld
push
cmp
sbb
mov
paddsb
aam
mov
push
test
rcrl
stos
out
arpl
jge
js
loope
mov
mov
push
push
dec
jbe
mov
pop
and
test
xchg
mov
jb
mov
in
mov
sbb
inc
popa
sbb
ds
mov
popf
ds
adc
mov
test
movsl
vmwrite
sub
dec
jns
clc
add
mov
loope
mov
decl
mov
jo
or
mov
out
es
mov
xchg
jns
jne
repnz
out
aaa
in
push
mov
xchg
lahf
jno
lcall
sub
repnz
repnz
or
xor
scas
xchg
push
out
aad
pop
pop
insl
push
jo
sub
push
pop
fsubl
shrb
out
pop
sti
enter
outsb
sarl
sbb
nop
psraw
add
out
clc
das
xor
pusha
notb
out
leave
mov
lock
push
push
fisubl
adcb
fs
jnp
repnz
pop
into
es
sub
fadd
and
pop
stos
sub
push
xchg
and
in
mov
or
and
dec
lret
mov
and
cs
or
repnz
inc
das
jp
call
dec
push
mov
dec
sti
add
pop
mov
and
outsl
push
lds
push
and
rorb
dec
fwait
lods
pop
push
adc
sbb
mov
data16
xchg
subl
mov
jnp
or
cmp
mov
mov
jp
lahf
jo
push
push
pop
sahf
mov
mov
pop
xchg
pop
fnsave
sbb
jb
mov
cmp
testb
xchg
sbb
leave
test
or
lods
pushf
cmp
shlb
cli
mov
mov
popa
shlb
add
push
popl
in
xchg
adc
into
xchg
pusha
cmp
and
test
fwait
add
mov
movsb
xor
mov
fstps
cmpl
xchg
mov
call
sub
cli
push
pop
faddl
call
cmpsl
jns
nop
inc
xchg
in
imul
cmc
and
pop
xlat
dec
or
push
pop
enter
stos
sub
fimuls
xchg
ficomps
xchg
dec
mov
ja
cmc
mov
adc
movb
mov
pop
scas
sti
je
mov
mov
cmp
daa
jp
loop
pop
adc
lahf
outsl
add
out
xor
mov
push
shl
leave
xor
push
popa
pop
adc
mov
popf
inc
adc
int3
test
push
fdivrl
testl
mov
rorb
mov
mov
sbb
inc
sub
cmp
das
push
jbe
lahf
outsl
pop
out
mov
or
cld
test
jmp
mov
lahf
out
mov
test
mov
outsl
ss
aaa
mov
out
mov
mov
outsb
or
pop
cld
mov
push
add
push
decl
push
popf
adc
arpl
aas
test
inc
sub
movsl
rol
out
sub
subb
jbe
daa
xchg
mov
push
daa
test
add
clc
pop
add
add
jne
or
sti
mov
xchg
test
je
loope
jp
in
jl
xchg
dec
ss
dec
fwait
stc
dec
test
aad
cwtl
stc
scas
out
jo
mov
jge
js
xor
daa
push
negl
jmp
stc
out
nop
out
mov
and
mov
inc
xor
push
jmp
outsb
adc
xor
or
iret
mov
add
pusha
mov
add
out
xor
call
addr16
aam
add
imul
movsl
aas
aam
daa
push
fs
pop
add
loope
xor
lahf
adc
lret
into
cltd
adcb
xor
sbb
das
loop
arpl
mov
dec
xorb
dec
inc
mov
push
dec
movsl
push
and
loopne
inc
pusha
sti
mov
mov
incl
fsubrp
pushf
mov
xchg
test
xorb
inc
sbb
fwait
test
outsl
push
mov
shrl
xchg
outsb
pop
pop
repnz
add
xor
repnz
jae
sbbl
decb
push
add
jl
or
pop
xor
movsl
mov
dec
gs
dec
nop
adcb
mov
jle
xchg
fwait
imul
jo
dec
xchg
pop
push
pop
fwait
xchg
ljmp
aam
out
cwtl
mov
add
enter
dec
fwait
test
inc
cmp
mov
xlat
or
shl
pop
push
xor
lea
ja
roll
mov
and
xor
inc
inc
imul
mov
ljmp
loope
xor
dec
inc
adc
into
push
sarl
dec
addr16
loope
sbb
enter
ljmp
js
loope
mov
aam
pop
add
stos
pop
push
push
rcll
movsl
cmc
and
mov
xor
addl
jo
cmpsl
adc
ljmp
xchg
xlat
je
ds
les
data16
dec
inc
jne
mov
mov
fmull
mov
lock
imul
mov
or
movzwl
pop
add
fisubrs
in
sub
imul
dec
dec
xorl
repnz
xchg
rcll
push
and
add
sub
adc
cwtl
mov
adc
mov
add
adc
cld
pop
push
cmp
xchg
imul
cltd
insb
jns
test
daa
inc
add
jp
or
sbb
test
dec
sbb
mov
mov
jp
rcl
cmpsl
loopne
leave
enter
or
dec
xor
pop
mov
pushf
pop
das
int
aad
ror
aad
push
fsts
cli
mov
pop
andl
lds
mov
mov
jge
mov
cmp
lret
xor
mov
jp
stc
pop
fsubl
ret
insb
es
dec
and
ret
lock
sub
xorb
push
pop
imul
pop
fsubs
add
jle
jae
inc
xchg
and
mov
mov
nop
and
mov
mov
xchg
rolb
mov
and
arpl
pusha
push
push
rcr
clc
pop
sbbl
mov
xchg
pop
cmp
repz
aas
scas
insl
jmp
std
in
fildll
mov
mov
fs
addb
push
push
sub
cmp
cmpsb
cwtl
movsl
pushf
or
sbb
mov
sar
mov
fwait
sahf
mov
bound
jl
fists
adc
data16
xlat
movhps
cmpb
sbb
imul
mov
adc
xchg
sti
or
mov
lahf
xchg
and
lods
inc
in
sbb
dec
jg
mov
sbb
roll
out
or
mov
test
or
fs
pop
inc
inc
jb
jmp
cmpb
imul
push
int
mov
mov
cmp
mov
mov
mov
lods
loopne
mov
ja
jbe
pusha
xchg
and
mov
adc
xchg
repnz
in
mov
jns
push
fdivs
imul
rorl
xorb
cmpsb
pop
fadds
cmp
hlt
sub
loop
xchg
icebp
addl
ss
daa
sub
pop
inc
jg
ljmp
jle
push
pop
dec
dec
sbb
jl
lahf
lods
fnstcw
sahf
mov
outsl
mov
cmp
and
sub
adc
and
pusha
add
lfs
mov
mov
xor
scas
xchg
cmp
mov
outsb
lret
fisubl
lahf
movl
test
sub
test
xchg
call
add
jle
push
jbe
out
add
aas
scas
pop
dec
scas
loopne
xchg
mov
sbb
repnz
pop
aad
xorl
loop
mov
clc
jmp
dec
dec
mov
je
sub
ss
scas
dec
sarl
push
jnp
xchg
xchg
loope
pop
andb
mov
cs
js
xor
jnp
movsl
lea
inc
jle
push
movsl
jnp
lret
into
and
mov
push
add
fdivrs
loope
bnd
minps
xor
and
divl
sub
lret
notl
mov
out
cwtl
into
mov
xor
out
jnp
and
adc
mov
cmp
out
mov
xchg
insb
dec
das
imul
sahf
push
cltd
pushf
sbb
push
pop
pop
stos
clc
adc
mov
pop
xchg
mov
jnp
sbb
mov
das
add
mov
mov
enter
call
mov
stos
xor
mov
iret
shr
fldcw
push
imul
je
aam
repz
mov
pop
insl
mov
push
stos
pcmpgtw
arpl
mov
movsb
adc
adc
cmp
push
std
xor
fdivs
movsl
mov
or
fldenv
fcompl
ret
stc
inc
dec
jo
add
jno
jge
in
lods
xorb
loop
mov
sbb
leave
inc
rcrl
sub
or
ljmp
int3
sub
cld
inc
push
stc
cmp
cmpsl
test
repz
or
imul
dec
lock
sti
push
mov
cmp
arpl
popf
mov
loop
jbe,pn
mov
lock
rcrl
rcrl
loope
mov
cmp
push
aad
xor
mulb
jmp
sub
iret
sub
mov
mov
dec
bound
sti
stc
adc
addr16
sbb
shll
sub
mov
je
stos
mov
das
fcompl
sbb
js
rcrb
nop
inc
dec
lds
fwait
andb
jg
in
fcoml
clc
jle
or
lahf
ljmp
cs
lds
ficoms
xchg
subl
cmp
jp
dec
jno
notb
or
imul
jp
xchg
xchg
sbb
out
adcl
fisubs
arpl
mov
sahf
pop
dec
or
ret
xchg
mov
leave
ljmp
xor
sub
xor
xor
push
xor
xchg
stos
insb
lahf
rolb
scas
push
mov
icebp
in
mov
sbbl
add
fs
das
mov
xchg
cmp
add
inc
gs
insl
out
outsl
pushf
or
dec
jns
pop
and
fstps
pop
push
or
jmp
jnp
rorl
mov
lock
cwtl
mov
xlat
dec
je
outsl
push
lcall
mov
cmp
jae
fimull
jno
popf
lock
fdivs
dec
sbb
lahf
aad
xor
fistps
inc
xchg
mov
push
test
in
dec
cwtl
nop
lahf
imul
jecxz
adc
into
pop
outsb
fnstenv
push
mov
jno
cwtl
pop
movsb
add
stc
shll
mov
fimuls
sti
stos
xchg
xchg
cld
inc
out
jno
or
xchg
loope
inc
push
mov
lret
mov
push
mov
dec
imul
pushw
push
fs
fisttps
sub
shlb
inc
cmp
bound
in
ret
push
in
add
xchg
jge
shrb
cmpsb
into
xor
pop
jae
rorl
in
pop
and
or
adc
loop
aaa
push
dec
sbb
int3
adc
mov
and
gs
divb
inc
dec
icebp
iret
pushl
inc
into
push
cwtl
mov
xor
clc
jp
movsl
mov
push
mov
fmul
pushf
shrl
pop
test
aaa
rcrb
mov
fucomi
in
loopne
rcrl
lods
mov
cmpsl
xor
data16
jns
movsl
ja
mov
insb
fs
aas
add
dec
xchg
out
jb
sbb
cmp
subl
pop
xchg
pusha
dec
jno
push
sbb
xchg
cli
xchg
dec
push
movsl
cltd
testl
stos
cld
in
adc
lcall
pop
mov
int
mov
insl
rorb
dec
fs
movsl
enter
jbe
pop
and
lock
loope
cmp
sbb
fcomps
mov
mov
jmp
push
xor
rorb
xchg
js
lcall
push
inc
pop
pop
mov
inc
fidivrl
jge
pop
cmp
dec
movsb
sti
dec
sbb
mov
aad
lret
jo
out
lods
cmpsb
shrl
push
cltd
sbb
sub
mov
mov
sub
out
mov
mov
mov
mov
loopne
adc
leave
sbb
mov
out
sbbb
rorl
dec
es
jae
int3
mov
in
mov
dec
lret
xchg
pop
addr16
xchg
mov
and
mov
cmp
scas
push
add
mov
add
sbb
pop
jne
pop
mov
dec
cmc
inc
pandn
mov
xchg
xchg
sub
mov
aad
test
mov
add
call
add
stos
push
cmpsl
mov
jo
and
fisttpl
jg
fwait
push
mov
xchg
enter
mov
mov
es
push
sub
cmpsl
in
pusha
mov
pop
cmp
cmp
insl
push
scas
pop
lret
mov
cmp
or
push
push
jp
push
add
xor
inc
call
push
dec
pop
pop
xchg
testl
mov
shlb
mov
add
stc
xor
xchg
dec
loopne
or
movsl
dec
into
mov
adc
sbb
pop
dec
fsubp
hlt
sub
hlt
ss
xchg
adc
sub
clc
test
sbb
shlb
or
xchg
jno
negl
insl
je
push
add
mov
pop
inc
mov
xchg
jns
daa
les
sbb
pop
push
mov
xlat
push
xor
aam
arpl
dec
xor
sbb
daa
stc
inc
add
jno
mov
aaa
add
arpl
in
push
daa
add
mov
push
inc
cwtl
sti
data16
sbb
mov
dec
push
clc
cmc
jle
pushf
sbb
mov
scas
outsb
daa
xchg
ljmp
adcl
cmc
pop
mov
jbe
mov
clc
xchg
and
lret
pop
xchg
jb
subl
sub
mov
lods
jbe
fdiv
sbb
mov
jno
fadds
mov
stos
lahf
mov
jecxz
imul
repz
ljmp
push
out
mov
ljmp
xchg
or
lcall
add
stc
cmc
leave
mov
addb
add
jmp
sub
aad
aam
jl
wrmsr
push
call
add
pop
add
adc
sbb
jg
shll
lock
es
add
lret
dec
fldt
sbb
pop
test
xchg
push
cmp
add
inc
add
xchg
pusha
data16
idiv
lahf
sbb
pop
sbb
cmc
dec
andl
std
lods
mov
mov
outsw
sub
iret
add
out
sti
insb
aad
xor
int
mov
in
mov
dec
jb
sbb
add
cli
int3
mov
mov
push
cmpsl
cmp
pop
fidivrs
pop
ss
mov
lcall
nop
out
sti
sbb
cmpsb
cmp
outsl
ljmp
mov
inc
mov
das
sbb
adc
sbb
xor
stos
test
cmp
add
or
add
jb
push
in
subb
mov
sbb
xchg
and
and
add
lret
pop
pop
fwait
jb
repnz
sbb
xlat
pop
ss
in
push
movsl
outsb
push
popa
mov
addb
daa
int
and
loopne
pop
or
scas
pop
pop
insb
cmp
ja
and
and
insl
cwtl
stc
ficomps
mov
rcll
loope
push
xchg
adc
inc
and
fs
push
and
lret
push
imull
stc
pop
inc
into
ret
lret
aas
je
mov
xchg
inc
push
gs
aas
out
xchg
pop
sahf
pop
enter
scas
shl
add
test
sbb
stos
call
inc
or
dec
mov
movsb
xchg
orb
xor
xchg
mov
cmp
pop
in
or
int3
push
shll
outsl
cwtl
mov
ds
sbb
or
sub
jb
mov
nop
mov
rolb
push
pop
rorb
dec
data16
xlat
xchg
inc
sub
add
test
and
and
xchg
lds
add
mov
dec
ljmp
aad
lret
inc
sub
mov
xor
inc
sub
je
add
mov
jno
insl
loop
aaa
push
xchg
nop
outsb
mov
sbb
cwtl
stc
mov
enter
dec
out
jbe
out
or
push
mov
ficomps
xchg
mov
sbb
add
das
mov
clc
xchg
cmp
sarb
lods
push
outsl
dec
or
sub
mov
adc
mov
xor
aad
adc
mov
adc
mov
pop
mov
nop
mov
jae
or
cmp
aad
nop
lret
std
mov
test
push
hlt
cltd
adc
cmp
adc
test
add
aam
cld
int
sub
fbld
divb
xorl
xor
add
jno
movsl
sahf
dec
arpl
lahf
add
push
cmp
lods
int3
mov
xchg
add
sti
in
iret
aam
mov
cmp
int
inc
inc
adc
pop
push
jns
mov
dec
testl
arpl
pop
mov
push
push
xchg
pop
movsb
popa
pop
orl
cld
xor
insb
mov
pop
push
bswap
daa
iret
xchg
sub
or
mov
mull
sbb
lret
jae
aas
je
fsubrl
roll
xchg
arpl
stos
and
mov
cli
dec
mov
fldcw
dec
les
xchg
xchg
clc
icebp
in
rolb
sub
test
or
inc
pop
mov
pop
cld
jmp
orl
xchg
out
lds
mov
std
pop
mov
and
xchg
xlat
icebp
xchg
jb
xor
sub
add
pop
push
in
cld
int3
dec
jl
ret
xor
pop
arpl
pop
aas
stos
mov
popf
sub
mov
inc
or
std
imull
loope
adc
fs
aas
jne
out
popf
fstl
mov
xor
push
push
mov
dec
pop
add
jns
inc
ret
add
xor
adc
mov
xchg
scas
imul
xchg
call
mov
xchg
and
fstl
sub
sti
das
imul
sub
lea
lods
jg
into
je
stc
into
pop
scas
sub
sub
inc
nop
fmul
orb
pop
scas
jecxz
adc
sbb
or
repz
add
fistpl
cltd
push
loopne
mov
adc
iret
pop
add
daa
shrl
in
pop
leave
adc
sub
cmp
push
or
inc
cwtl
pop
jne
sub
jmp
js
xor
cs
iret
push
jne
cld
jmp
jmp
push
je
pmaddwd
movsb
das
adc
inc
adc
mov
stos
sub
mov
jo
xor
pushf
mov
mov
inc
xchg
imul
icebp
jbe
dec
arpl
pusha
mov
mov
int3
ss
into
lret
fisttps
push
es
out
mov
aas
adc
int3
fldl
loopne
adc
out
aad
jbe
mov
ss
push
test
push
scas
pop
cld
fdivr
roll
data16
iret
push
aam
pusha
xor
ret
cld
pop
out
mov
lcall
inc
test
adcb
pop
lret
push
mov
push
gs
push
dec
adc
mov
lock
mov
stc
ret
gs
outsl
mov
sbb
and
mov
jno
fstl
and
imul
jb
push
inc
loop,pn
cmp
cltd
sti
and
or
pop
stos
or
shl
repz
pop
push
cmp
xchg
insb
fiaddl
dec
clc
mov
in
and
mov
xor
mov
or
inc
push
or
mov
out
jne
pop
imul
test
incl
cs
pop
shll
mov
into
lds
mov
add
ret
int
daa
ds
hlt
or
pop
fadds
adc
mov
xor
outsl
divb
jge
push
add
sbb
es
xchg
jbe
cmp
or
std
addl
cmpsb
mov
inc
movsl
stos
test
je
shll
mov
int3
jo
call
lcall
cmp
sub
dec
test
push
pop
packuswb
ja
sub
sbb
mov
lcall
push
fisubrs
xor
pushl
xor
lea
mov
jle
clc
inc
loope
pop
popa
mov
lcall
loop
mov
or
call
jp
push
mov
add
sbb
sbb
hlt
sbb
inc
or
push
xlat
ror
sbbl
outsl
mov
dec
cmc
es
ljmp
mov
rcl
movsb
ffree
xchg
imulb
push
sbb
mov
cmp
xor
push
jp
pusha
pop
sub
call
push
xchg
dec
ds
das
and
out
sbb
pop
out
lds
inc
fs
bound
fcoms
in
in
daa
mov
mov
jp
cli
adc
subl
mov
ret
imul
vpcmpgtb
mov
mov
sahf
sbb
out
dec
sahf
insb
mov
inc
sbb
fbstp
hlt
ficompl
or
push
ret
scas
testl
mov
mov
jns
mov
data16
notb
dec
jbe
ja
aas
jno
outsl
cmp
iret
call
jbe,pt
js
bound
xchg
in
xlat
rolb
cmp
mov
cwtl
jne
bound
mov
rclb
repz
mov
sub
cmc
imul
nop
repz
cmp
les
xchg
inc
jno
into
push
push
arpl
add
out
xor
mov
jecxz
icebp
cli
dec
je
shlb
shlb
xor
sub
out
insb
sbb
sub
int3
imul
mov
dec
shll
sbb
loopne
ja
mov
ret
rorl
mov
in
cs
sub
dec
test
or
cld
push
cmp
mov
ret
decb
pop
call
dec
mov
pop
jp
pusha
jo
sbb
jne
mov
rcrb
dec
adcl
rcrb
pop
jg
movsl
mov
push
add
jo
cld
xchg
mov
cs
bnd
mov
xchg
aam
dec
xchg
icebp
adc
mov
push
das
adc
xchg
push
lahf
jmp
cmp
xchg
add
mov
jns
xchg
sarb
dec
sti
sbb
cmp
cwtl
ret
or
jl
mov
add
scas
int3
adcl
jg
mov
cmp
jo
enter
orb
in
mov
repnz
das
mov
cmp
mov
cmpsl
lahf
push
push
inc
inc
into
mov
jae
imul
cmp
clc
pop
pop
bound
cmp
add
cmp
in
add
lret
jl
imul
pop
icebp
js
mov
int
xchg
add
js
data16
cld
leave
mov
jl
lret
xor
hlt
ret
jg
ret
or
lds
sti
ljmp
jmp
test
iret
nop
and
cmp
in
ret
cmp
filds
repz
loop
in
xor
mov
jbe
mov
mov
popa
cmp
gs
pop
stc
es
fwait
imul
mov
pop
stos
push
lea
push
in
push
stos
pop
mov
lea
sbb
mov
xor
and
test
add
add
lahf
jbe
mov
push
push
mov
hlt
jnp
imul
dec
loopne
mov
fbld
aad
outsl
repz
pop
test
push
add
and
cwtl
lahf
std
outsl
push
adc
inc
out
ljmp
cmp
dec
sahf
sbb
sub
fsubs
int3
xchg
test
mov
in
or
rcrl
push
adc
pop
add
sbb
jo
pop
push
add
push
ja
movsl
test
daa
aas
pop
fsubrp
inc
test
insb
mov
push
mov
adc
mov
movsb
mov
inc
fistpll
xchg
aaa
inc
adc
jns
leave
inc
push
mov
fldl
mov
or
sti
popf
xchg
inc
jp
mov
and
cmpsl
out
les
cmpsl
into
mov
push
imul
xor
push
inc
sub
pop
xchg
push
ret
jnp
dec
sub
je
cbtw
cwtl
dec
dec
push
mov
adc
mov
and
dec
jnp
mov
js
sbb
dec
adc
cmp
xor
test
fs
jno
push
test
and
mov
push
add
mul
jecxz
cmp
jl
dec
in
pop
jle
jne
aas
push
mov
ret
loop
add
mov
pop
pop
mov
mov
push
mov
bound
or
stc
sbb
xchg
in
loopne
push
loope
mov
jne
mov
mov
push
cwtl
adc
scas
scas
stos
and
xor
jmp
mov
sbb
sbb
stc
sbb
je
cmp
add
dec
inc
daa
sbb
mov
push
jne
test
mov
pusha
inc
mov
xchg
pop
into
cltd
mov
lods
testb
outsl
das
xor
test
mov
lret
and
aam
cld
inc
or
pop
std
adc
test
cmpsb
rclb
cmp
mov
sub
mov
movsl
ret
cmp
adc
xor
fcoms
and
xlat
sti
xor
lret
mov
dec
push
sahf
sub
inc
std
out
dec
ret
jae
push
fidivrl
sbb
pop
shl
je
cmp
popf
ds
lods
dec
pop
dec
aam
jno
sbb
in
mov
inc
jne
cmp
mov
add
sti
mov
adc
sbbb
fcompl
add
aam
mov
add
movsl
out
or
xlat
fsubrl
addl
data16
ja
xor
xor
into
mov
jnp
mov
add
shll
mov
cmp
js
ss
popa
jle
call
push
js
cmpsb
mov
aaa
shl
movsb
adc
test
pop
orb
dec
insl
mov
mov
add
lahf
push
pusha
enter
test
das
push
mov
inc
mov
sbb
int
movsl
shll
or
or
lret
push
and
insb
mov
hlt
sbb
iret
ret
inc
xor
and
in
sub
imul
test
loopne
in
and
sub
outsl
pop
add
daa
mov
sarl
pushf
pop
inc
xchg
cmp
mov
and
xchg
sub
outsl
fstpl
mov
jne
dec
and
sub
insb
pop
add
sbb
adc
lods
push
push
repnz
xchg
sbb
and
addr16
frstor
sub
jne
mov
xchg
push
lds
pop
push
popa
aam
jecxz
fwait
mull
stc
mov
sub
ljmp
pop
sub
mov
in
and
pop
orl
mov
sarl
aas
fwait
pop
add
loop
paddusw
add
call
push
pop
or
sub
je
xchg
xchg
lock
aad
mov
aad
stc
lea
jmp
mov
push
inc
sbb
std
xchg
sbb
out
or
mov
cmp
xchg
cmp
dec
or
cmp
ret
prefetchwt1
gs
inc
fisubrs
xchg
ftst
pop
dec
int
mov
push
movlps
jge
adcl
sub
aam
or
sti
push
stos
das
fnstsw
stos
lds
push
in
pop
shlb
mov
jne
add
push
fs
sbb
mov
int
fdivrp
fsts
repz
inc
sbb
push
add
mov
push
andl
push
cmpsb
adc
call
push
ja
add
js
cwtl
mov
xchg
pop
call
pusha
mov
dec
daa
enter
out
nop
in
loop
xchg
adc
cli
clc
xor
xlat
sbb
shll
jnp
sub
dec
lahf
jl
xchg
punpckhbw
dec
xor
psubsw
jne
or
mov
sub
test
mov
sub
mov
dec
das
in
in
or
cmp
arpl
rcrb
jnp
int3
mov
pushf
jecxz
pop
mov
lods
outsl
and
ljmp
pop
jae
repnz
icebp
sub
jbe
push
loopne
je
xchg
jbe
push
xor
jmp
sub
push
int
psubb
leave
jl
add
jo
fistpll
push
pop
jne
pop
mov
cwtl
push
out
sub
pop
dec
sub
mov
add
leave
imul
mov
cwtl
pop
ds
cmpsl
lcall
test
xchg
inc
in
sub
mov
ffreep
sub
sub
aaa
das
lcall
add
push
cmp
scas
xchg
sub
cmpsl
stos
scas
es
pop
adc
pop
mov
or
or
dec
lret
inc
and
bound
pop
xor
cmp
pop
lods
sbb
jge
cmp
repz
jp
gs
outsl
mul
xor
sbb
lds
iret
mov
dec
cld
pop
push
adc
sub
stc
icebp
push
adcb
rcr
lock
dec
es
dec
mov
mov
pop
jbe
xlat
pop
jno
out
and
cwtl
xor
mov
loopne
jae
cmc
dec
pop
pop
inc
add
test
jmp
out
out
mov
adc
cwtl
fwait
mov
cmpsl
popf
fst
xor
das
gs
movsl
ss
or
pop
xor
xchg
scas
cld
outsl
movsb
sbb
and
push
popa
fstl
cmp
clc
or
insb
sub
adc
pop
movsl
xchg
pop
mov
xchg
or
adc
push
pop
insl
jne
mov
popf
fistl
iret
push
sar
bound
xor
adc
xchg
dec
push
cmpsl
jmp
bound
dec
jbe
lret
test
mov
rclb
je
add
adc
xor
inc
into
inc
in
dec
insl
aaa
xor
mov
inc
mov
xchg
icebp
jno
xchg
add
xor
hlt
mov
xchg
and
mov
sub
inc
es
add
dec
ret
scas
push
ja
pop
aad
gs
push
xorb
jbe
andb
or
test
add
js
fdivl
jmp
loop
ss
leave
push
shl
mov
addr16
faddl
pop
mov
ljmp
fcmovne
movsb
or
mov
lods
sbbl
xlat
and
mov
dec
push
popf
adc
ja
mov
inc
sub
fsubrl
or
add
aas
jno
jno
inc
push
cli
aaa
ficomps
mul
pop
inc
cwtl
mov
inc
jae
cmp
insb
and
pop
sub
lahf
insb
sbb
or
cmp
inc
call
mov
or
cmp
push
adc
or
jno
sbb
pop
enter
int3
adc
aas
or
loope
rcl
mov
push
push
xor
pushf
or
js
sbb
xor
test
cwtl
stos
insb
aad
adc
lock
out
stc
gs
jl
mov
dec
dec
movsl
insb
lahf
push
mov
inc
scas
xor
outsb
sbb
sahf
push
inc
push
orl
mov
and
push
outsb
push
jne
dec
in
sub
cmp
and
jl
dec
outsb
jo
xchg
data16
mov
mov
enter
test
push
push
jne
test
push
and
dec
test
mov
test
add
hlt
mov
xchg
jnp
and
mov
lret
cmp
int
addb
stos
imul
push
mov
push
fcmovbe
test
push
inc
sbb
pop
mov
and
pop
call
call
mov
bound
icebp
shlb
aam
and
loopne
fcmovnb
mov
adc
mov
cli
mov
loop
mov
int
jge
adc
sahf
lods
pop
enter
movsl
xchg
imul
in
sub
lds
leave
cmpsl
cmp
mov
mov
mov
push
imul
dec
lds
lea
es
sarl
xchg
inc
aam
pop
jge
mov
orb
lret
inc
fldt
rclb
mov
push
add
push
pushf
dec
dec
hlt
dec
xor
into
sub
adc
mov
xor
adc
arpl
mov
mov
sbb
add
and
in
and
jb
and
mov
xor
lods
rdmsr
xor
das
pushf
loopne
arpl
dec
or
mov
test
push
popf
cmc
std
sbb
cmc
pop
cmc
lods
out
and
pop
ja
push
call
fs
dec
pusha
mov
push
adcb
aam
mov
lods
sub
sub
iret
jp
xor
cltd
push
movsb
mov
iret
int3
arpl
jg
jne
jp
dec
mov
mov
sub
jno
and
xchg
cs
into
loope
sahf
fisubrs
aam
call
mov
cmp
and
out
sub
sbb
mov
pusha
loop
xor
jle
push
ss
push
int3
sub
mov
sahf
iret
fwait
jae
mov
xchg
decl
cmpl
int
cld
leave
jns
testl
xchg
icebp
aam
das
pop
mov
adcb
sti
jbe
ficoms
outsl
adc
mov
sbb
xchg
lret
push
outsb
sti
push
repz
xchg
dec
mov
aam
in
stos
xlat
mov
in
scas
or
add
inc
das
xor
xchg
enter
add
xor
xchg
stos
incb
sbb
stc
pop
shrb
leave
sbbb
jecxz
sarl
lods
into
icebp
sub
push
dec
and
mov
outsl
push
in
test
inc
push
pop
lods
inc
adc
mov
and
mov
mulb
hlt
mov
ds
jg
push
xor
ffree
lahf
mov
aaa
fidivrl
cmp
jg
inc
pop
scas
push
test
jb
aas
inc
inc
jo
or
xchg
test
scas
sbb
aam
xchg
dec
fwait
mov
pop
stc
cltd
mov
mov
inc
imul
inc
adc
add
push
pop
icebp
jb
and
movsl
es
loopne
pop
repnz
imul
fwait
sub
fwait
or
jle
icebp
orl
add
xchg
inc
lods
stos
test
pop
mov
insl
dec
sbbl
sub
scas
stos
out
pop
lea
ja
fwait
lods
mov
inc
dec
pop
dec
ret
mov
adc
mulb
clc
jne
pop
xor
xchg
mov
push
push
and
lock
jne
xchg
sub
and
test
jge
mov
pusha
imul
jle
mov
pushl
ljmp
jae
fidivrl
jp
in
adc
push
stos
addr16
jle
rolb
push
inc
loope
in
hlt
loop
cmc
jo
aaa
mov
dec
inc
pop
icebp
cmp
es
sbb
xchg
test
pop
cmp
mov
repnz
ficompl
push
std
xor
shlb
xchg
pop
xchg
or
pop
xchg
iret
int3
inc
fsubr
xchg
mov
fcmovne
fwait
int3
sahf
jo
ja
shrb
dec
cmc
ja
xchg
ficompl
ds
sti
mov
pop
stc
cmp
std
push
fnstenv
dec
jns
stos
mov
inc
mov
sahf
dec
mov
ds
push
nop
xor
xchg
mov
adc
in
lret
or
insl
mov
addl
jo
and
fs
add
adc
push
int3
mov
push
ss
ss
and
addr16
xor
inc
mov
add
dec
pop
js
fldt
xor
xor
test
aaa
cmp
push
aad
roll
adc
cmpsl
xchg
shrl
xchg
rcrl
stc
adc
push
in
out
roll
rclb
decl
xchg
inc
shl
xor
sbb
mov
pusha
ss
inc
cmp
fs
lea
out
test
cs
faddl
pop
insl
pop
bound
fsubrs
adcb
jb
jae
incl
mov
or
scas
xor
lret
jae
dec
xchg
test
push
insl
mov
js
pushf
dec
pushf
add
push
sarl
lret
mov
mov
xor
aas
mov
arpl
popf
shlb
pop
push
cmp
and
xchg
into
loop
lock
js
inc
pop
cwtl
shlb
ja
inc
jge
test
and
lea
inc
stos
lret
xchg
xor
dec
das
shl
movsb
cmpsl
cmpsb
dec
cmc
push
out
fs
mov
int3
shrl
mov
push
push
jp
shll
xor
divw
jne
or
push
add
mov
mov
jbe
ss
cmp
push
in
popa
push
lret
sbb
mov
std
pop
xchg
movsb
jnp
jb
gs
push
icebp
ljmp
add
ja
cld
shll
incl
mov
dec
ror
std
fcoms
insl
in
mov
js
mov
std
push
lods
data16
adc
icebp
call
jbe
out
mov
scas
fstpt
pop
rclb
sbbb
jo
adc
jge
mov
pop
fidivrs
and
mov
fdivrl
adc
xor
lods
sub
mov
fcom
mov
fistl
mov
mov
leave
adc
mov
daa
xchg
ret
mov
daa
xor
xchg
out
mov
dec
enter
test
sbb
repz
lret
sub
jmp
mov
es
out
jl
cld
xchg
sub
out
push
or
push
loopne
je
fstpl
std
push
out
out
lea
loop
cmp
loope
inc
pop
add
push
lret
push
test
pop
outsl
in
pop
xlat
inc
les
jmp
fs
inc
daa
data16
jl
insb
or
movsb
clc
lods
ljmp
jo
pop
ret
aad
jmp
dec
push
mov
push
sub
push
clc
insl
arpl
cli
insl
inc
mov
jns
int3
mov
mov
push
movsl
jecxz
add
and
mov
mov
rep
pop
and
inc
push
push
push
scas
cmc
xchg
je
rep
sbb
xor
int
addr16
mov
je
cmp
jmp
in
pop
push
mov
pop
mov
adc
sub
js
push
and
push
dec
inc
stos
cld
idivb
jg
dec
push
dec
outsb
or
das
stc
into
hlt
sbb
mov
push
lea
in
sbb
mov
orb
mov
pop
std
lods
jb
push
xor
aad
inc
orb
lock
mov
xchg
push
ja
ds
iret
out
out
push
mov
fwait
mov
pop
add
xchg
aam
shrl
jecxz
cmp
cmpsl
sarb
pop
pop
in
adc
jp
movsb
push
es
xor
sbb
ret
pop
shll
idivl
dec
std
pop
xor
jge
mov
popf
mov
leave
sbb
loopne
add
loopne
popf
lods
inc
lock
hlt
xchg
cwtl
sarl
mov
mov
pop
jne
dec
loop,pt
sar
jb
data16
in
xchg
test
mov
jae
outsb
mov
lret
enter
outsb
sub
add
fisubl
out
xchg
sahf
add
inc
push
jp
push
int3
sub
mov
jnp
sbb
push
hlt
jmp
in
fsubr
mov
jb
orb
xorb
jb
xor
push
lret
incl
pop
jo
push
gs
je
cld
inc
ss
or
push
add
loop
aaa
inc
ljmp
jne
shlb
jle
ret
cltd
fldcw
lret
xor
xchg
pop
push
or
cmp
outsl
push
cli
icebp
fucomip
cmp
aaa
jecxz
mov
sbb
push
addr16
xchg
int3
dec
dec
xchg
jmp
mov
sub
ud2
jp
loope
cmp
outsl
mov
jg
adc
pop
insb
or
cmp
ret
push
clc
dec
cmpsl
iret
ss
fildl
addr16
sub
js
xor
lods
push
lock
sbb
mov
inc
xchg
pop
add
sub
repz
xor
push
in
jb
dec
pop
insl
xchg
jle
mov
data16
popf
fs
xchg
ja
inc
movsb
stos
lret
fstl
shl
ss
adc
insb
arpl
shlb
sti
cmp
testl
jo
and
cmp
pop
inc
push
push
test
rcll
cmp
and
mov
pusha
int
insl
adc
mov
gs
xchg
cmp
lret
scas
dec
gs
pop
outsl
adc
adc
lds
lods
sti
sbbl
movsl
jecxz
and
sbb
lcall
iret
dec
in
adc
adc
loope
test
popa
jp
mov
loope
bound
sbb
daa
daa
mov
jno
dec
rcrb
ds
lods
add
shlb
fs
or
fdivp
jp
jl
aas
sbb
xlat
xor
sub
push
testb
push
or
dec
imul
add
xchg
jmp
ja
enter
pop
popl
cmp
popf
push
addr16
fistl
cmp
push
loopne
cmpb
ljmp
jecxz
xchg
jp
lock
pushf
cmp
out
and
cs
sub
push
push
aaa
lods
jl
inc
fisubrs
mov
aas
jb
xor
jns
das
adc
cmp
addr16
cs
add
enter
imulb
test
daa
xlat
push
clc
xor
repz
xor
cs
das
sub
daa
inc
or
dec
cmpsb
cmp
xchg
xchg
in
add
clc
in
add
mov
xor
jb
aad
mov
dec
les
sbbl
pop
dec
rorl
shlb
fisttpll
dec
stc
leave
xor
push
pop
loope
sbb
test
push
ret
xor
cwtl
ret
gs
push
push
push
adc
call
xor
jae
and
imul
push
hlt
dec
call
mov
in
mov
lods
push
cmc
dec
add
sbb
jp
cmp
add
mov
popa
daa
fcompl
shl
add
adc
fldl2t
call
cmp
add
nop
negb
adc
xchg
ss
adc
cmp
lret
sbb
push
pusha
inc
jb
fisttps
push
add
xchg
int3
jg
xor
scas
out
jne
mov
out
mov
lahf
aaa
push
inc
fldt
shll
cmp
adc
aas
das
sub
mov
gs
mov
mov
roll
repnz
xchg
ss
fsubrp
xchg
or
mov
clc
dec
pop
sub
fwait
mov
das
je
stos
inc
lock
xchg
pop
pushf
adc
test
jb
sarl
and
sbb
rcrb
xor
aas
xchg
aam
lods
mov
add
mov
dec
sbb
mov
push
cmp
sub
leave
mov
sbb
inc
test
outsl
test
shlb
data16
sarb
push
cwtl
popa
je
loopne
repnz
sbb
pop
dec
pop
mov
and
mov
xcrypt-cfb
cmpsl
mov
test
jns
dec
aad
or
mov
gs
pop
xor
fwait
dec
fwait
sbb
ljmp
inc
jb
fldl
sub
icebp
add
cmp
mov
mov
xlat
mov
sub
fildl
cmp
or
dec
xor
dec
mov
mov
jbe
call
outsl
jle
xchg
cmp
xchg
fs
lods
outsl
lret
mov
push
pop
aad
mov
cltd
je
int3
pop
xor
lock
out
cli
test
pushf
or
insl
mov
out
lds
nop
sbb
mov
nop
movsb
ljmp
mov
push
stos
jmp
fsubl
movsl
jmp
in
mov
or
cmpsb
rcl
stos
push
sahf
daa
hlt
mov
ja
js
push
in
jge
sub
push
in
or
insb
icebp
mov
cmp
in
ret
sub
pushf
pop
cmpsl
jno
xor
test
sbb
pushf
mov
fsts
rolb
jl
pop
mov
add
and
shll
adc
popa
push
xchg
mov
adc
out
ret
jo
int3
lea
ja
xor
imul
icebp
iret
and
or
push
or
insl
cmp
xor
dec
jle
inc
jbe
roll
and
ret
test
rclb
divl
push
stos
pusha
es
lods
bound
test
mov
inc
jle
std
xor
clc
std
jle
inc
mov
in
push
jl
loope
adc
dec
mov
sub
cltd
adc
add
scas
ja
mov
add
call
jbe
add
leave
mov
mov
sahf
pop
in
inc
jbe
xchg
ror
xchg
mov
and
mov
dec
xchg
add
sbb
mov
addl
sbb
fstps
adc
enter
stos
mov
daa
dec
iret
and
cmp
pop
and
adc
mov
aaa
add
sbb
std
sbb
or
mov
fwait
das
ljmp
inc
imul
aad
xlat
adc
mov
mov
subl
ja
add
sbb
mov
pop
in
cmp
in
shrl
fsts
add
rorb
cmc
int3
xchg
aam
sti
jne
fcmovbe
ds
cmp
rcrl
icebp
sub
out
sub
sbb
mov
cld
xchg
inc
push
int
mov
aaa
mov
mov
and
push
or
fxch
pop
lcall
cltd
loopne
sub
.byte
mov
stos
xchg
sbb
add
out
sub
inc
sub
xchg
lods
xorb
shrb
sbb
cmp
outsl
adc
inc
push
in
jg
cs
outsb
mov
push
fwait
out
pop
js
fidivl
test
outsl
movsb
in
loopne
jnp
int
mov
subl
aad
mov
dec
mov
and
mov
orl
in
mov
and
out
mov
and
mov
nop
bts
mov
xchg
jne
cmp
jmp
movl
xlat
push
push
xchg
xchg
test
ds
out
scas
pop
or
lret
dec
out
jns
test
loop
arpl
clc
in
outsl
addb
cmp
cltd
xor
je
adc
push
imul
xchg
lahf
cwtl
sub
pop
xchg
sub
mov
pusha
lret
xchg
lods
popa
sti
push
jge
inc
pop
scas
cmc
fsubrl
push
mov
sti
xlat
std
int3
cmp
sub
push
lds
push
out
cmp
jo
shl
jle
stos
dec
movb
mov
adc
sti
mov
xchg
add
push
fdivrs
outsb
cmp
test
mov
sub
or
je
xchg
aaa
orb
inc
stc
out
jns
addr16
out
pop
stos
dec
jecxz
ret
les
push
cltd
imul
in
das
hlt
bound
out
mov
cmc
icebp
mov
jp
inc
insb
fsin
mov
push
mov
cmp
aad
std
xchg
aas
insb
jns
xor
test
iret
test
call
lods
push
out
cmc
mov
inc
mov
testl
dec
mov
cltd
loopne
and
fimull
fwait
mov
xor
das
push
stos
jp
aaa
inc
fdiv
jl
js
mov
xor
xorb
sub
loop
lcall
mov
jecxz
pop
add
cs
or
icebp
push
jo
inc
test
xor
or
rcrb
jne
jmp
lret
push
jecxz
rep
jl
and
lea
mov
push
out
sub
sbb
aad
sub
mov
add
cs
jae
cmpsl
xor
popa
xor
fidivrs
and
and
or
scas
add
shll
sbb
push
lcall
xor
lock
adc
repz
jl
stos
popa
fs
stos
sub
ss
dec
jbe
fildll
lock
and
fdiv
add
ja
push
sub
xchg
pop
repnz
push
aam
out
inc
ja
pushf
pop
ret
cli
push
lret
stos
inc
clc
insb
nop
inc
adc
out
lds
lock
pop
xor
outsb
jnp
popa
mov
xchg
or
std
into
pop
lods
mov
mov
fdivr
fwait
aam
inc
add
outsb
out
adc
sti
insl
test
push
pushl
insb
or
fstpl
mov
das
mov
ja
mov
js
rcr
mov
test
cld
inc
xor
mov
cmp
cmp
mov
push
movsb
popa
push
dec
repnz
cs
mov
loop
jg
lcall
fcoml
xor
jne
int3
fisubrs
sub
and
jo
or
mov
dec
test
out
adc
mov
push
cmp
lcall
out
or
xlat
cmp
push
mov
and
mov
movsl
call
in
loopne
cmpb
out
test
push
scas
push
xlat
xchg
push
add
xor
out
ja
xchg
dec
mov
or
pop
pop
xchg
aam
outsl
inc
push
cmp
mov
hlt
mov
inc
jp
xor
sub
dec
repz
sbb
jmp
push
and
add
xor
pushf
les
cmp
in
jmp
adc
inc
mov
mov
mov
mov
in
sahf
sti
xor
inc
les
push
dec
add
lock
pop
loopne
icebp
add
notl
sub
mov
ljmp
lret
inc
into
add
out
and
out
js
ljmp
popf
call
aaa
push
lret
mov
into
negb
imul
inc
sub
outsl
ljmp
mov
ret
stos
fwait
jae
aas
cmpxchg
ds
xor
jg
pop
cli
bound
and
mov
and
lock
stos
mov
fsubrs
mov
test
in
push
and
add
and
xchg
inc
dec
cmp
shll
jne
push
repz
popa
mov
jecxz
lods
loop
pop
xchg
and
out
in
ljmp
xchg
cmp
movsb
pop
or
or
rcr
adc
mov
js
mov
cli
push
cmc
fwait
pop
mov
mov
adc
stos
js
arpl
sub
mov
repnz
repnz
mov
add
leave
divl
fiadds
xchg
sub
data16
test
cmp
jno
or
repnz
sbb
xlat
dec
cs
jae
test
outsb
jns
mov
or
movsb
xor
aam
ljmp
inc
les
insb
push
mov
lret
fisubs
scas
stos
repnz
mov
xchg
fstl
xor
dec
mul
orl
mov
jns
mov
jns
ret
aas
repz
shlb
cwtl
fildll
call
ss
push
xchg
push
pop
mov
mov
mov
mov
das
insb
push
outsb
mov
outsb
jg
pop
out
add
inc
push
jle
dec
and
jo
mov
shr
in
repnz
adc
mov
jo
dec
push
out
test
adc
add
pop
xchg
std
cmc
mov
pusha
xlat
lods
push
sbb
inc
stos
cmp
dec
enter
into
push
jo
cmpsb
hlt
hlt
jne
cmpsl
cmp
pop
shl
cmc
pop
cmpl
mov
fdiv
mov
ror
mov
pushf
lahf
and
sbb
cmpsl
add
repz
rcrb
pop
insb
mov
xchg
jbe
outsb
cmpsl
ss
and
jae
pop
xchg
or
andl
les
sbb
arpl
into
xchg
ljmp
sbb
ficoml
mov
cmp
inc
mov
push
jae
fdivrs
fcomps
jb
push
and
mov
movsb
jp
adc
cmpsl
jp
test
int3
fildl
test
repz
mov
popa
adc
push
cli
lret
pop
rolb
jae
in
mov
lahf
mov
sbb
jo
jle
ret
push
fmuls
jns
or
cmp
cs
mov
movsb
sarl
sub
and
andb
or
mov
gs
cli
xor
dec
cmp
dec
adc
fcmovnu
sbb
xor
fisubrl
or
in
sub
in
pop
and
fs
mov
jbe
adc
lret
and
inc
dec
mov
cmp
mull
lcall
lods
std
cwtl
enter
sbb
cmp
in
mov
cmp
xchg
std
std
mov
xlat
mov
filds
repnz
dec
lcall
add
dec
stos
in
test
mov
mov
pop
shlb
pop
lock
dec
inc
push
cmpsl
sub
pop
fnstsw
sub
pusha
xor
aam
repnz
mov
addr16
dec
jp
mov
sarl
xchg
jle
movsl
add
dec
xlat
xor
inc
iret
in
out
xor
mov
imul
lahf
in
les
inc
add
in
adcb
cmpsl
pushf
enter
test
mov
bnd
xchg
ja
jge
xor
lock
outsb
gs
cmpl
push
cli
in
pop
int3
dec
daa
or
fidivrs
lahf
nop
lods
mov
les
adc
mov
addr16
fs
mov
pop
sbb
sbb
sbb
or
mov
mov
push
or
inc
enter
adc
jno
sbb
jecxz
jb
cltd
cmp
bound
lea
push
enter
mov
fimull
mov
call
sbb
xor
sub
test
out
sub
rep
mov
std
adc
mov
filds
dec
mov
arpl
pop
pmaxub
pop
push
inc
rcrl
cmpsl
sbb
add
stos
sbb
and
arpl
push
loope
and
mov
test
mov
cmp
xor
mov
aad
cmp
push
mov
inc
cmpsb
or
out
jle
neg
outsl
mov
lcall
dec
mov
rcr
cmc
cld
stc
add
hlt
addb
out
mov
fistpll
sub
push
pop
adc
loop
inc
enter
adc
push
in
repz
movsl
mov
daa
xor
mov
sbb
adc
mov
mov
fcoml
push
lret
add
push
push
mov
movsb
aas
cmpsb
cld
enter
mov
fwait
pop
es
jge
dec
outsb
mov
pop
xor
jbe
push
leave
add
dec
or
push
push
jg
sbb
inc
xor
dec
lds
std
mov
lods
push
push
mov
xchg
jl
inc
dec
stos
add
fisttpll
or
push
rcr
mov
or
lcall
std
add
mov
inc
fs
adc
pusha
rorb
lahf
adc
xchg
mov
sub
push
imul
icebp
push
cmpsb
leave
pop
int3
int
xchg
xor
jle
xor
fldl
and
stos
adc
add
lret
mov
sbb
aad
cli
inc
jl
stos
push
int3
lahf
lahf
inc
cmp
lret
cld
push
sbb
sbb
sbb
call
xchg
sbb
jp
data16
test
cmp
testb
jmp
xor
lea
mov
cmp
nop
sub
cs
mov
fadds
mov
lret
push
rclb
sub
in
inc
pop
inc
arpl
aas
or
bnd
add
shrl
or
jp
add
jecxz
loop
popf
sub
scas
pushf
add
in
scas
clc
adc
mov
dec
mov
inc
mov
push
sbb
repnz
pop
mov
repz
aas
pop
inc
flds
xchg
push
mov
mov
pop
lcall
scas
sbb
movsl
push
xchg
stc
daa
and
or
lods
jb
rolb
aam
mov
aad
cmc
ror
sub
mov
xchg
out
xchg
lods
adc
xchg
jb
xchg
jo
ret
mov
aaa
inc
mov
sarl
lret
xor
adc
rorl
fbstp
dec
sarl
fsub
jecxz
mov
lret
std
sub
jae
mov
sub
jno
lock
inc
cli
aas
mov
pop
sbb
dec
rcr
sub
mov
cmpb
lods
movsl
cmp
xor
repz
mov
inc
out
push
xor
jmp
dec
cwtl
cwtl
cmp
aas
nop
sub
cmpsl
pop
sbb
in
fsubl
or
das
fmul
rcll
imul
cmp
stc
enter
aaa
add
xorl
xor
lahf
das
dec
pop
ret
loope
cmpsl
shl
cs
nop
and
push
sahf
xchg
enter
sti
sti
clc
jle
inc
daa
insl
inc
outsb
jbe
ljmp
jae
dec
and
and
mov
test
movsb
push
or
or
add
sub
ffreep
sub
clc
xchg
sbb
movb
xor
add
push
inc
cmp
push
mov
test
stos
pop
add
xchg
cmc
push
adc
add
sub
mov
nop
adc
xor
xchg
iret
stos
mov
test
in
mov
jg
ret
inc
or
push
cmp
cmp
push
outsl
lahf
dec
dec
dec
mov
aad
adc
insb
xor
cmp
cmc
ja
xchg
int
ja
cmpb
sub
mov
arpl
cmc
fdivrl
push
jp
std
push
pop
mov
push
mov
jne
push
pushf
dec
pop
or
call
stos
mov
data16
mov
cltd
roll
out
sub
jge
jae
cmp
popf
push
push
icebp
decb
mov
or
insb
bound
bound
inc
rcll
mov
pop
mov
orb
jne
jbe
mov
scas
test
es
insb
shl
js
xchg
mov
pop
lods
inc
jp
loopne
shll
das
push
insb
imul
into
insl
inc
sub
lock
testl
lds
outsb
sahf
sbb
imul
mov
push
fcom
pop
repnz
pop
mov
xchg
jle
nop
xor
cmp
xor
sbb
sub
cmp
mov
xchg
das
je
jnp
aam
cmp
ds
and
jno
push
inc
cmpsl
loopne
dec
sbb
xlat
and
pop
cltd
xchg
outsl
movsb
ret
cmc
jecxz
dec
sbb
mov
gs
cltd
pop
hlt
adc
inc
lea
or
mov
mov
loopne
pushf
std
mov
mov
testb
dec
and
push
push
cmpsb
daa
out
out
cli
xchg
fcmove
pop
cmp
ror
fwait
sbb
mov
stc
cmpb
cmp
push
or
popf
pushf
out
dec
btc
inc
loop
and
testb
sub
leave
in
push
sbbb
pop
cmpsb
mov
pop
mov
sti
dec
mov
cmpsl
dec
or
and
mov
daa
lods
jge
xchg
push
icebp
shlb
loope
ja
aad
add
mov
je
dec
sub
push
jns
mov
push
mov
fdivp
mov
in
xchg
ret
cmovnp
fs
add
sub
mulb
or
sub
das
pop
js
jle
jns
adc
cld
jae
xor
jecxz
xchg
dec
adc
mov
test
inc
movsb
aam
xor
or
ja
inc
xor
push
aas
std
test
lds
ja
daa
sbb
pop
inc
mov
push
add
mov
jo
and
jmp
je
sarb
jl
sub
adcb
sub
inc
adc
popf
sahf
sbb
push
push
cld
in
aad
and
fidivs
pop
sub
lods
fists
addr16
mov
add
xor
jp
dec
push
adc
jnp
fsubp
lcall
mov
fists
imul
cmp
xchg
adc
pop
mov
clc
push
hlt
xor
mov
push
cmp
aam
xchg
add
cmp
lods
shll
push
das
fnstsw
mov
sbb
sbb
jns
enter
int
xchg
xor
xchg
mov
jecxz
ds
sahf
cs
xchg
test
add
and
fdivrl
push
adc
scas
xor
adc
fdivrl
push
add
jnp
int3
mov
xor
add
or
addl
mov
pushl
lahf
or
dec
jle
insl
sahf
inc
lcall
jl
add
pop
dec
push
cli
out
xchg
cld
leave
movsb
pop
jle
shll
iret
fs
lea
mov
inc
jae
xchg
icebp
sarl
cmp
in
xorl
mov
imul
push
xor
aam
in
shlb
aaa
movsl
mov
xchg
call
sbb
js
dec
mov
popa
jne
and
sbb
jae
sarb
out
or
lea
ds
and
fdivs
pop
cmp
loopne
jae
jb
cmp
cmp
lds
imul
test
pminub
push
iret
inc
sub
add
icebp
or
loope
ds
xchg
lret
push
or
leave
call
cmp
lcall
sbb
adc
fsubrl
push
mov
mov
jge
adc
fcmovb
pop
icebp
pusha
push
sbb
repnz
gs
addr16
sub
inc
rol
int3
outsl
mov
adc
aaa
dec
outsl
xchg
cmp
cltd
pop
push
imul
jle
fists
loope
imul
mov
in
shrl
cwtl
or
es
or
jecxz
add
loop
fildl
or
sbb
or
push
mov
sbb
push
inc
rorb
dec
dec
aaa
jle
ret
or
jo
dec
and
pop
add
out
sbb
movsb
inc
dec
fistl
jno
lds
inc
sub
xorl
and
cld
js
xor
outsb
leave
arpl
je
pop
fdivs
aaa
sub
jecxz
sar
mov
out
mov
imul
test
adc
or
loopne
sub
int3
loope
and
push
cmc
aas
fdivl
mov
repz
xor
ret
inc
dec
hlt
cld
xchg
iret
mov
in
lret
nop
stos
dec
aas
movsl
mov
and
mov
fcmove
aam
sti
jmp
add
cmc
sbb
pop
mov
popa
or
in
or
icebp
mov
je
pop
popf
call
pop
mov
mov
sbb
jo
mov
cmp
xchg
mov
aad
ficoms
push
mov
rolb
push
ds
js
enter
push
cmp
fwait
sbb
xchg
xor
jbe
je
xchg
mov
dec
jg
js
aaa
adc
push
outsb
push
jnp
adc
sub
aas
movsl
mov
pushf
jne
xor
stc
rol
jnp
mov
mov
push
xor
sbb
cmp
push
jp
cmp
in
fsubs
cmpsl
gs
and
neg
push
inc
jnp
insb
in
imul
fistpl
movsl
cmpsb
push
adc
call
xor
leave
aam
enter
xchg
push
push
sbb
inc
seto
xlat
xadd
push
pusha
cltd
sbb
add
je
loopne
stc
fisubs
fwait
in
addb
mov
mov
fwait
ja
dec
stos
or
xchg
xchg
hlt
push
cwtl
cmp
jbe
xchg
or
jb
cltd
mov
xor
mov
in
lock
nop
pop
movsl
lret
inc
subb
ljmp
ds
xchg
push
inc
lods
sub
sbb
mov
sbb
mov
icebp
out
xchg
sarl
in
mov
sbb
and
jae
push
push
or
stos
std
dec
shlb
je
clc
xchg
clc
jg
in
sub
mov
sub
or
rorl
jge
hlt
mov
repnz
or
xorl
out
add
dec
mov
out
pop
fsubr
andl
cmp
cmp
xchg
das
test
pop
or
jge
adc
sahf
pop
and
aas
push
mov
je
cmp
fldl
icebp
mov
repnz
lcall
fldl
sbb
cmpsl
insb
mov
fstpt
int3
adc
add
add
mov
jl
push
dec
xor
cmp
jl
dec
sbb
js
sbb
jg
test
fucomip
shrl
xchg
out
sbb
ror
xchg
push
js
das
xor
push
repnz
stos
fsts
in
loopne
scas
pop
jge
orb
jp
jnp
das
scas
clc
std
in
mov
cmpsl
sbb
xlat
lock
jns
pop
gs
pop
mov
or
hlt
imul
cwtl
xor
dec
jne
outsb
cmpb
cmp
data16
shrb
gs
ss
cmc
and
ja
jae
sub
aas
popa
xchg
cmp
hlt
xor
aam
fadds
mov
dec
cld
dec
sbb
cltd
sub
xchg
jae
jmp
add
jge
and
add
fdivrl
icebp
gs
xor
mov
add
in
test
push
leave
popf
lcall
and
xchg
jns
xchg
fists
fsubrl
push
or
push
mov
cmpsl
pop
hlt
jmp
dec
imul
cmp
cltd
or
scas
cli
mov
mov
sbb
push
movsl
inc
loope
mov
mov
pop
pop
mov
nop
jg
not
lods
or
mov
jecxz
mov
movsl
jo
xlat
add
ljmp
ret
adc
fs
fldpi
fdiv
clc
nop
or
bound
and
mov
xor
dec
jns
cmp
add
xchg
xchg
sahf
cmpsb
dec
xchg
add
movsb
push
je
mov
push
movsb
cmova
push
rorl
xor
xchg
inc
mov
iret
xor
adc
dec
mov
es
adcl
xor
shlb
lcall
movsl
inc
push
cmpsb
out
adc
cltd
je
push
out
pop
sbbl
mov
leave
ljmp
xor
neg
sbb
push
mov
fsubrl
cmpsb
cmpsl
mov
dec
push
push
and
mov
in
cmpsl
jne
sbb
gs
xlat
dec
es
clc
bound
xchg
lds
pop
mov
mov
inc
xor
ja
mov
in
sbb
ljmp
adc
rol
bound
sbb
popa
cmp
sub
sbb
sub
or
or
and
sbb
xchg
push
repnz
pop
inc
leave
mov
inc
ret
lret
lret
or
dec
push
jbe
fcmove
out
mov
stos
mov
fsubrs
mov
aaa
and
loop
ret
fldcw
or
clc
xchg
xchg
shlb
bound
cs
cli
mov
dec
clc
mov
cltd
inc
xrelease
addr16
rolb
inc
std
mov
xchg
mov
inc
fisttpl
cmp
push
sarb
cmp
js
test
test
out
mov
xchg
out
xor
jbe
inc
loop
pop
xlat
push
mov
ljmp
and
dec
or
clc
insl
dec
enter
pop
sub
or
pop
pushf
dec
pop
inc
add
pop
stos
mov
inc
ljmp
pop
fs
mov
inc
adc
inc
aad
dec
sub
iret
add
out
pop
lea
cltd
push
insl
outsb
cmpsl
jmp
push
add
mov
pushf
popa
sbb
divb
lods
jecxz
ja
or
arpl
nop
jnp
xor
stos
adc
outsl
je
cmp
lds
aad
mov
ljmp
add
addr16
mov
fwait
call
int
add
add
mov
cmp
xchg
mov
pop
iret
insb
test
das
stos
cmpl
std
mov
jmp
pop
xchg
loope
sbb
addl
cmp
or
push
fldenv
lods
mov
push
pop
jp
jg
inc
lret
stos
xchg
inc
aam
and
mov
int
cli
push
enter
inc
jl
adc
inc
mov
mov
fs
int
fimuls
push
bound
call
sub
push
jge
push
cmc
cmpsb
xor
xlat
daa
fisubl
mov
mov
loope
out
arpl
inc
push
mov
into
cmc
mov
movzbl
jp
jecxz
pop
push
xor
mov
push
imul
jb
fcomps
sub
xor
popf
add
mov
daa
aad
pop
add
stc
jnp
into
ret
jg
cmp
icebp
pop
jnp
cld
js
or
scas
inc
jnp
jno
adc
mov
lods
addr16
xchg
sbb
inc
push
aam
push
push
iret
testl
push
xchg
dec
clc
hlt
popf
mov
stc
push
aam
xchg
and
les
inc
sbb
rclb
adcl
cmc
mov
pushl
cmpsb
leave
stc
cmp
inc
mulb
rcll
inc
lea
jnp
je
dec
or
push
mov
ja
sub
into
out
mov
test
adc
mov
or
fcomps
imul
fnsave
mov
subb
sti
mov
or
andb
push
or
in
rolb
clc
mov
movl
inc
out
or
repnz
inc
sub
mov
iret
pop
jmp
lret
mov
inc
pop
mov
hlt
xor
sub
daa
scas
adc
lods
inc
rcl
ret
test
sbb
pop
testl
xor
movsl
cmp
ficomps
ja
pop
rorl
lahf
mov
add
pop
popa
mov
add
push
pusha
xor
fisttpl
xchg
push
push
lcall
mov
push
in
pop
mov
not
pop
inc
imul
in
imul
xchg
pop
cmp
adc
pusha
repnz
xor
jle
insl
shll
sub
aaa
les
push
inc
pusha
sub
push
inc
stos
test
add
jo
xorl
fucompp
mov
rorl
pop
ret
pop
inc
les
addb
in
mov
xchg
popa
jo
sub
lea
dec
pop
sti
push
pop
std
rorl
imul
or
mov
mov
add
inc
mov
in
cmpsb
lods
ret
pop
lock
sub
adc
jno
mov
push
pop
xchg
aam
jno
out
cli
push
sbb
pop
loopne
and
and
stos
dec
into
adc
into
fsub
call
sub
loop
cmp
cmp
std
pushf
nop
mov
xchg
dec
jbe
lea
push
ds
int
repnz
mov
test
adc
mov
dec
xor
sbb
or
out
into
ljmp
nop
lret
sub
fs
push
or
loop
subl
sbb
ja
js
pop
jae
in
lret
sbb
mov
inc
aaa
enter
jp
sub
dec
cmp
aad
mov
push
push
pushfw
aas
push
inc
rorl
inc
insl
push
das
int3
cltd
mov
jmp
or
adc
push
jle
out
add
mov
mov
pop
jns
push
jbe
pop
testl
out
cs
lret
je
push
test
or
or
mov
test
xchg
adc
pushf
fstpt
fdivrl
mov
jmp
push
adc
mov
test
or
fcoms
push
rcr
mov
add
lret
cli
adc
push
lret
xor
pop
enter
mov
jge
xor
dec
jbe
and
out
jnp
mov
dec
or
stos
arpl
lock
add
inc
rcrb
mov
mov
and
xor
adc
ss
dec
pop
leave
pop
loopne
add
and
roll
and
popa
cli
inc
das
loop
or
cmp
pop
mov
jmp
or
outsb
stc
push
aas
shrb
clc
in
inc
jbe
loope
outsb
sbb
push
jmp
mov
pop
subl
inc
inc
mov
dec
jp
imul
adc
inc
sbb
adc
es
mov
addr16
xchg
push
insb
es
test
pop
fsubrs
adc
aad
iret
sti
std
lock
in
fildl
js
jbe
and
or
xor
fcoms
leave
cmpl
cld
adc
addr16
push
xchg
cmp
pop
insb
sahf
inc
add
xchg
fwait
pop
pop
xchg
fsubs
jns
pop
cmp
mov
mov
add
repnz
add
add
js
in
mov
dec
ficompl
stos
jmp
add
mov
sbbl
shlb
lcall
inc
jecxz
bnd
mov
xor
push
adc
xchg
call
aas
inc
mov
mov
jmp
inc
dec
mov
movsb
xchg
repnz
popa
jg
mov
sub
mov
xlat
or
std
sbb
xchg
mov
notl
jmp
cmp
bound
jno
outsb
imull
arpl
push
imul
xor
imul
jle
push
jo
mov
or
lret
mov
popa
fstpl
sub
fcompl
gs
scas
rol
test
sbb
push
pusha
sbb
mov
pop
mov
dec
lahf
hlt
sbb
cltd
testl
dec
dec
mov
jb
cltd
in
jae
fisttpl
insl
lahf
push
bound
fnstenv
loopne
rcr
sub
les
aas
movsb
cmpsl
mov
mov
mov
sbb
fdivl
mov
mov
inc
push
mov
cwtl
and
loop
mov
jbe
mov
iret
adc
aad
dec
or
dec
inc
mov
xchg
stos
jo
clc
xor
mov
push
fdivl
or
xor
ljmp
jae
roll
pop
jle
mov
mov
das
das
lcall
adc
sub
into
push
je
outsb
xchg
adc
addr16
mov
lcall
aad
and
mov
or
xor
push
cltd
add
in
outsl
loopne
orl
and
and
rcrl
xchg
and
divb
mov
adc
mov
push
pop
cli
icebp
push
lods
out
mov
mov
lret
mov
incb
sbb
xchg
test
adc
adc
lcall
mov
jne
xor
or
push
cmp
pop
test
sub
aas
stos
mov
xor
mov
adc
sarb
enter
push
mov
lods
or
stc
sub
int3
mov
fsubl
int3
inc
sahf
cmp
sbbb
mov
jno
mov
mov
stos
push
cld
or
movsb
inc
iret
shll
sub
sbb
cwtl
fadds
and
aam
jle
inc
pop
xchg
scas
cmp
ret
pop
mov
mov
pop
out
inc
push
cmpsl
jns
mov
mov
pusha
aas
xor
insb
je
sub
push
jne
pop
cs
lods
movsb
xchg
rorl
pop
mov
cltd
xchg
imul
jle
add
pop
jo
add
inc
sbb
bound
lret
cmp
pop
inc
stos
cmp
cmpb
ss
xchg
jl
mov
push
push
jge
ljmp
and
hlt
aas
cltd
fsub
icebp
pop
or
lcall
lcall
xor
and
mov
or
lahf
outsl
inc
mov
fisubrl
roll
pop
aam
rclb
cld
xor
and
cli
cmpb
sub
inc
sti
mov
jo
jmp
lods
xchg
movsb
jge
jnp
icebp
mov
mov
or
pop
jbe
mov
mov
stos
or
arpl
jae
cmpb
sbb
xchg
imul
mov
int3
movsb
shr
push
jne
lahf
sub
jg
jp
gs
pop
fucomip
loop,pn
sbb
jno
inc
sbb
add
stos
or
scas
int
cmpb
sub
repz
inc
sub
and
nop
adc
mov
cs
inc
adc
loope
inc
mov
mov
nop
lea
clc
mov
ss
add
inc
clc
cmp
popf
imul
push
xchg
push
mov
jge
popf
lock
dec
or
aas
es
or
adc
xor
imul
jne
cli
adc
daa
lret
out
add
pop
cltd
fbld
das
fcmovnu
int
orl
cs
mov
lea
stos
ss
push
addr16
fbld
mov
cmc
inc
cmp
xchg
cltd
xlat
add
inc
ljmp
mov
lods
fimuls
fisubrl
movsb
scas
daa
jmp
stos
xchg
cmpsb
push
insb
xchg
sub
gs
and
es
leave
mov
dec
movsl
and
mov
iret
xchg
mov
xor
xchg
and
cs
dec
jnp
push
lock
mov
push
loop
jl
adc
jns
xor
mov
dec
mov
push
mov
orl
adc
adc
or
jne
in
sti
aam
or
lock
mov
sub
sti
ljmp
pusha
std
sbb
out
add
adc
cmpsl
mov
addb
jmp
cltd
fsubr
xor
into
test
int
enter
outsb
vhsubpd
push
test
ljmp
popf
dec
out
insb
mov
nop
loop
mov
outsb
mov
push
lahf
mov
ret
jbe
fiadds
jle
mov
ss
mov
aaa
das
sub
jecxz
inc
insl
push
lods
mov
nop
mov
aas
xchg
mov
out
xor
in
xchg
lret
jae
mov
adc
out
adc
mov
bound
aad
cmpsb
pop
mov
fstpl
mov
in
jnp
cmp
pop
daa
cmp
sbb
sub
cmp
xchg
test
movsl
into
jb
mov
jns
sub
xor
jmp
push
frstor
enter
sub
cmp
mov
ret
xor
mov
cmp
jl
or
jl
imul
loop
mov
ja
cltd
dec
sbb
daa
ficoms
inc
lcall
icebp
add
cmc
jno
bound
jns
imul
and
push
push
das
cmp
into
dec
out
mov
into
les
in
into
gs
sub
jg
sbb
mov
jl
imulb
push
inc
or
aam
or
mov
jle
pusha
leave
into
mov
pop
mov
jnp
outsb
dec
xchg
push
es
repnz
rolb
scas
arpl
push
sti
cmp
pop
mov
sahf
test
adc
jl
inc
and
rcl
cmpb
in
sbb
pop
int3
pop
pop
addr16
sbb
push
in
push
sbb
inc
push
hlt
lods
int
in
mov
ss
push
xor
adc
jne
jbe
fs
push
ljmp
and
nop
jle
adc
push
enter
dec
mov
pop
and
mov
mov
and
jl
xor
or
pop
pop
or
addr16
xor
mov
lea
int3
push
dec
fs
dec
sbb
or
push
inc
repnz
aad
lea
cmc
mov
mov
pushf
dec
filds
mov
js
mov
mov
jge
dec
mov
sub
mov
sti
adc
hlt
fstps
cmpsl
popa
jae
icebp
mov
mov
enter
es
js
xchg
inc
sahf
xchg
xchg
pop
lahf
push
push
ret
pop
movsl
insl
int3
inc
xor
and
enter
into
mov
cli
sub
int
jmp
jecxz
jb
and
ret
jecxz
sbb
dec
inc
ret
ffreep
jecxz
aam
rorb
ret
bnd
jle
aaa
imull
cli
mov
xor
adc
push
push
xchg
mov
sar
inc
push
push
dec
xchg
rcrl
xchg
push
fcoms
lods
repnz
sbb
dec
dec
or
pop
mov
imul
out
and
xchg
lods
in
shll
pop
call
jae
add
lahf
int
hlt
inc
cmpsl
mov
mov
cli
daa
loopne
jo
call
adc
push
nop
push
inc
nop
mov
pop
cwtl
nop
scas
mov
dec
mov
lods
xchg
outsb
or
cmp
fwait
or
mov
inc
jno
jmp
cmp
loope
sub
push
pop
jnp
xchg
jmp
fisubl
push
dec
icebp
and
insb
aad
or
mov
adc
out
imul
jns
fiaddl
pop
ss
cli
push
int
iret
test
fnsave
cs
pop
clc
or
push
sarl
add
dec
es
movsl
pop
in
mov
sub
xor
gs
push
xor
fwait
lock
inc
stos
aam
inc
out
jp
or
cld
and
repnz
mov
jnp
hlt
sub
mov
xlat
jmp
movsb
mov
jecxz
sahf
mov
xor
push
and
ficoms
in
adc
bound
xor
pop
stc
sub
addl
or
lahf
jno
adc
frstor
mov
add
mov
push
popa
pop
mov
fildl
push
loop
cmp
int3
dec
leave
push
dec
cwtl
sub
cld
mov
dec
sbb
pop
lahf
mov
add
nop
pushf
mov
test
js
imul
add
popf
adc
popa
add
hlt
fstpt
mov
test
out
shll
sarb
add
jnp
das
sbb
sbbl
xchg
cmc
das
in
xor
fcmovne
mov
jnp
aam
repz
push
loopne
enter
repz
add
jae
das
popa
mov
and
xchg
xchg
sub
sub
stos
dec
repz
sahf
add
pop
or
gs
dec
pop
lods
push
lahf
jp
mov
es
lods
or
daa
leave
in
imul
fldl
xchg
rcll
hlt
mov
ficoms
jge
or
pop
iret
repz
inc
pop
aad
add
jnp
stos
pop
insb
cmp
inc
les
out
sbbb
push
xor
out
filds
xor
jle
jg
mov
push
mov
pop
lock
out
hlt
int3
mov
mov
xor
inc
enter
out
std
xlat
and
fiaddl
ds
pop
fsubs
pop
xchg
push
push
out
adc
addb
fmull
xchg
xchg
adc
outsb
enter
gs
fisubrs
mov
into
cmp
mov
mov
fwait
ret
iret
xchg
pop
mov
mov
pop
stos
insb
arpl
adc
movsl
leave
inc
cmc
sbb
ljmp
movsb
das
int3
sbb
loop
mov
lock
mov
lahf
nop
mov
lock
fistps
and
test
out
xchg
mov
out
mov
sahf
jle
and
testl
jo
fs
sbb
stc
push
push
test
and
test
or
jmp
add
adc
jo
test
out
mov
xchg
push
cld
sbb
lods
xlat
jmp
pop
push
jns
int
or
enter
icebp
cmp
sbb
push
push
pusha
xlat
mov
jo
sbbb
int3
pop
pop
stos
popa
cmp
and
in
div
jo
or
sub
jnp
add
sub
xchg
jbe
pop
ljmp
ret
int3
fs
pop
rcll
xor
out
popa
dec
pop
popf
sahf
pop
mov
push
mov
enter
in
out
mov
adc
roll
or
cmp
fxch
fdivrs
mov
mov
cwtl
pusha
imul
push
pop
xchg
mov
bound
aam
in
cmc
mov
push
fstpt
push
pop
iret
sar
test
jmp
faddl
lcall
push
xchg
ja
adc
jbe
xchg
addr16
pusha
insb
or
cmp
int3
sub
sbb
push
hlt
mov
cs
clc
inc
mov
push
fmulp
pop
stc
fisubrs
fs
dec
inc
jg
mov
cld
mov
bound
ja
sub
in
cmc
push
cmp
icebp
jo
stc
jne
pop
repnz
into
push
inc
sahf
cld
adc
sti
imul
jo
adc
dec
fnstenv
or
or
and
pop
push
scas
and
lret
pop
mov
mov
addb
dec
inc
lret
aam
lods
movsb
push
or
daa
jp
stc
dec
shll
fwait
mov
mov
push
add
push
cmp
adc
push
mov
dec
jg
cmp
jg
xor
inc
bound
hlt
aaa
mov
pop
mov
add
sub
sub
fwait
inc
inc
inc
out
push
addr16
movsb
je
test
xchg
movsb
js
repnz
push
push
or
add
jae
mov
cwtl
ss
jle
movsl
xor
in
mov
sub
insb
mov
mov
mov
mov
mov
aas
ljmp
inc
pop
jo
test
int
xor
jp
pushf
xorl
aam
xchg
stos
sbb
jg
aaa
ss
out
fmull
add
mov
cmpsb
int3
enter
gs
lret
icebp
mov
dec
mov
mov
and
xchg
jp
mov
push
xlat
adcb
sti
out
arpl
cmpsl
jp
or
dec
xor
out
push
clc
mov
ja
sbb
out
scas
scas
fsts
cltd
decb
lods
pop
push
inc
pop
or
repz
dec
out
cmp
insb
jle
rorb
pop
repz
adc
xor
sbb
dec
outsb
subb
cmp
mov
cmp
jl
fstl
andl
jno
sahf
xchg
test
mov
imul
pop
push
sub
lods
loopne
xor
push
out
stos
outsb
lret
mov
fistpl
fadd
testb
cmp
dec
jecxz
push
fiaddl
jb
scas
out
movsb
dec
pop
xchg
imul
xchg
mov
dec
aam
fwait
adc
lea
out
imul
leave
xor
vpunpckhdq
pop
mov
arpl
xor
cmp
dec
dec
pop
sbb
dec
pop
aad
xchg
add
lret
in
iret
sbb
add
dec
jne
pop
mov
mov
push
push
mov
outsl
cmp
push
in
jne
pop
aas
jne
imul
fcoms
xlat
inc
push
sahf
pop
adc
sbb
shr
xchg
sub
jmp
out
shlb
pop
and
inc
sbb
and
or
int
fcompl
sbb
fs
cmp
pop
xor
pusha
mov
mov
adc
mov
mov
daa
mov
mov
dec
dec
daa
xlat
stos
fwait
dec
loop
adc
movsb
sub
clc
in
in
push
cli
lcall
xchg
ljmp
push
lock
mov
cmpsl
inc
adc
pop
scas
daa
cmp
adc
cmp
xchg
pop
mov
int3
int
notl
and
jne
es
jnp
push
dec
pop
mov
jne
outsl
inc
dec
cwtl
aaa
xor
sbb
mov
hlt
ds
in
cmp
mov
pop
call
insl
and
adc
shrb
or
add
inc
dec
fs
mov
sbb
mov
dec
or
jge
adc
cmc
sub
push
jge
fbld
icebp
mov
mov
pop
jne
xchg
jge
push
lea
icebp
jbe
xchg
mov
and
push
mov
shlb
lea
into
out
dec
cmpsl
jmp
inc
lock
dec
addr16
dec
ja
std
add
add
repz
add
test
mov
arpl
sub
std
xor
jmp
mov
mov
mov
sbb
push
inc
mov
insl
flds
in
ja
inc
pop
int3
incb
int
imul
arpl
or
xor
jbe
sbbb
jp
xchg
insb
jge
aas
in
jb
xchg
sub
dec
stc
addr16
mov
jecxz
lods
push
into
xor
stos
and
sub
mov
fnstenv
mov
lods
xchg
int
lods
mov
loope
hlt
sub
arpl
xchg
xor
in
and
sti
lea
dec
push
jnp
dec
jb
xchg
mov
xchg
fisubrs
lret
cwtl
gs
adc
outsb
or
mov
hlt
pop
xor
sub
arpl
mov
in
aaa
je
cs
out
sub
insb
and
popa
sahf
sbb
dec
push
sbbl
sbb
test
mov
and
sub
mov
pop
ss
mov
adc
xchg
insl
stc
lahf
cmpsl
cmpsb
pop
jle
mov
enter
repz
add
mov
push
add
push
or
int3
loop
jns
sbb
dec
mov
xchg
inc
test
andb
pop
cmp
sbb
push
or
sbb
rcrb
sahf
sub
into
fs
popf
stos
loopne
xchg
or
in
ja
lods
cmp
adc
mov
lods
push
movsl
aam
addl
popf
xchg
out
repz
cmpsb
sti
addr16
mov
push
push
iret
mov
push
jno
stos
adc
loop
ljmp
aad
cmpsb
movsb
xor
push
jmp
test
or
repz
ds
fstpt
cmp
fisubl
jnp
repnz
jno
fisttpll
xor
iret
into
pushf
aaa
iret
or
xchg
and
cmp
in
adc
inc
push
test
mov
inc
xorl
ret
mul
push
xor
sbb
xchg
jns
lret
pop
fsubs
push
sbb
push
gs
xor
in
push
scas
shr
xor
or
pop
mov
add
cmpl
movsl
xor
xchg
jo
inc
dec
mov
push
xchg
sub
mov
cmovnp
mov
cmp
xor
shll
mov
lds
sub
xor
test
adc
mov
mov
push
mov
aam
cwtl
ja
xchg
fdivs
scas
add
lcall
lods
jge
dec
roll
mov
push
sbb
andl
std
push
inc
add
pop
inc
fdivrl
in
and
stos
arpl
sbbl
lret
adcb
repnz
jae
mov
in
loopne
push
mov
mov
addr16
out
fidivs
mov
stc
mov
pop
push
push
ret
pop
jae
roll
mov
out
add
cmp
inc
andb
test
lret
fmuls
icebp
scas
out
fldcw
add
mov
or
movsl
into
loope
ds
popf
inc
out
push
fld1
cltd
fmul
cmp
mov
lahf
ljmp
pop
jmp
ret
mov
mov
sti
mov
outsb
je
jl
stc
cld
daa
sti
dec
cld
rcl
repnz
xchg
dec
les
push
jge
push
mov
pop
dec
push
sub
jns
xchg
into
dec
enter
mov
cmp
jnp,pn
pop
jns
inc
lahf
aaa
adc
xchg
aas
cs
fdivl
mov
mov
es
mov
enter
xchg
out
dec
hlt
adc
add
or
xor
clc
clc
adc
sbb
xor
dec
adc
and
dec
mov
xor
mov
insb
inc
test
in
ret
fstps
cmp
mov
out
shlb
js
repz
xor
pop
pop
sarl
jns
dec
cmpsl
ret
fmul
fistl
pop
int3
andl
enter
mov
mov
call
inc
adc
sbb
psraw
aas
mov
jns
and
adc
cmp
xchg
inc
movsl
mov
cwtl
jb
repz
in
leave
leave
orl
cmp
clc
adc
xor
push
xchg
mov
test
addl
push
leave
ss
xchg
add
mov
mov
add
shlb
cmp
pop
sbb
jecxz
pop
aas
shrl
ja
fstps
ljmp
inc
lret
mov
shr
sbb
cmpsb
push
ds
jge
jmp
mov
lods
or
adc
jl
enter
sbb
mov
inc
xorl
mov
fcoml
and
push
pusha
jg
inc
jp
xchg
imull
cmp
fwait
out
pop
outsb
jg
repz
imul
stos
jecxz
jmp
cmpsl
inc
je
test
mov
xlat
sub
add
xor
mov
mov
scas
insl
xor
push
adc
mov
in
pop
js
into
xchg
sti
or
js
mov
dec
add
ret
addr16
cmpsb
loop
push
push
ds
lahf
xchg
xchg
stos
inc
adc
xor
pop
cmpsl
std
push
scas
loopne
pop
pusha
mov
faddp
les
mov
lret
mov
outsb
xor
push
cmp
loope
mov
imul
add
loopne
mov
or
xchg
mov
cmc
sub
lret
inc
aaa
insb
jno
or
sub
jecxz
movsl
mov
js
mul
or
and
or
pushf
scas
fldl
mov
imul
xchg
mov
insl
pop
jl
inc
bound
xchg
out
inc
hlt
ss
lret
fiaddl
pop
cmp
pop
fs
jo
arpl
and
push
js
fists
shl
add
test
xchg
xor
push
movsl
push
jle
dec
push
mov
sub
pop
add
or
dec
jb
cmove
js
mov
jg
xchg
push
into
sub
jle
and
insl
pop
sbb
imul
fldcw
and
mov
sbb
cs
push
xchg
adc
adc
ss
pusha
adc
add
xchg
cs
sbb
imul
jp
xor
sahf
fisttpll
xlat
fwait
inc
mov
into
shlb
inc
pop
inc
cmp
fimuls
jne
enter
dec
sbb
dec
cmp
ljmp
fs
test
popf
mov
pusha
jmp
fistl
inc
stc
xchg
mov
dec
lret
les
ds
mov
and
mov
std
pop
xlat
sbb
fistps
mov
lcall
imul
xchg
cs
adc
xchg
popf
inc
out
or
in
repz
inc
add
rcl
iret
fiaddl
cmpsl
or
mov
sahf
lahf
aaa
and
cli
sbb
xor
out
xor
or
stc
aas
dec
xchg
jmp
js
and
fildl
es
xor
add
imulb
out
loop
mov
sarb
js
rol
mov
add
add
jbe
jo
sbb
sahf
scas
dec
add
jmp
jne
rol
shlb
cmp
cmp
cmp
push
push
and
inc
test
sub
push
data16
xor
and
jns
jno
and
movsb
push
mov
mov
fs
and
out
mov
pop
mov
clc
loopne
out
fisttpll
lock
dec
xorl
xor
adc
mov
sbb
rcll
jl
repz
dec
dec
testb
lea
push
bound
xchg
pop
idiv
test
mov
cmp
adc
pop
mov
jbe
cmp
mov
mov
fmulp
jle
inc
cmpl
ret
out
mov
shrl
ds
inc
pushf
jb
daa
xchg
adc
movsl
push
aam
hlt
cmp
loop
mov
js
mov
cld
pop
icebp
test
mov
inc
jl
fidivs
adc
and
lods
dec
cmp
out
push
pop
xor
sub
pusha
sarl
dec
nop
dec
inc
lcall
inc
xchg
add
dec
popf
push
xchg
mov
mov
sub
push
mov
mov
sbb
jno
dec
nop
push
test
mov
sub
xor
cmc
push
stos
xchg
jmp
cmp
repz
mov
sbb
test
sbb
or
out
push
inc
outsb
lds
jmp
das
dec
push
imul
adc
loop
cltd
pop
std
push
jo
inc
jnp
into
nop
ljmp
popa
pop
minps
or
iret
lock
fxch
mov
or
clc
cmp
pop
mov
push
sbb
mov
sbb
ljmp
outsb
imul
jecxz
dec
dec
mov
lods
mov
cmp
dec
es
add
fs
daa
or
outsl
add
subb
inc
jo
test
xchg
scas
xchg
mov
fstpl
rol
sarl
pop
pop
xchg
loopne
pop
rorl
push
xchg
adcl
popf
in
mov
aaa
jge
into
repz
dec
mov
inc
mov
cli
into
xchg
into
inc
dec
sbb
outsb
mov
jle
add
sbb
loope
stos
pop
ficomps
loop
sarl
enter
mov
lea
in
push
int
add
sbb
ror
cmp
stos
jne
call
subl
or
mov
push
and
popa
mov
xchg
insl
dec
cld
pop
jp
push
adc
inc
mov
jge
flds
cltd
xor
dec
cld
cmp
jecxz
and
mov
xchg
fcomi
sub
outsb
iret
mov
mov
call
add
stc
sub
inc
hlt
sub
mov
mov
testl
testb
or
ds
es
add
mov
cs
xor
add
repnz
and
orl
inc
mov
mov
inc
insb
int
sub
lret
mov
adc
ficompl
pop
rcrb
dec
int3
dec
mov
mov
push
pop
test
inc
icebp
push
into
fbstp
adc
ja
adc
push
cmp
repz
lahf
and
cmp
xchg
pop
mov
push
jmp
das
loop
loopne
xor
mov
out
jne
repz
cmp
ljmp
jmp
cltd
out
dec
dec
mov
add
cmpsl
add
push
jp
lods
push
add
loope
fdivs
push
popa
adcl
in
mov
ds
rcl
ret
js
les
jns
xor
push
xchg
and
xor
lods
jnp
and
jg
pusha
pop
lock
sub
and
xchg
and
fdiv
dec
or
and
pushf
daa
push
hlt
aam
fstl
inc
add
mov
add
cmp
mov
lcall
sbb
mov
in
add
lock
test
cmc
xlat
nop
mov
add
ret
xchg
mov
cmpsb
out
cltd
bound
in
cmc
fildll
xor
add
or
ja
repnz
mov
or
xchg
pop
hlt
lods
xorl
inc
ret
int3
outsl
xor
and
aad
dec
test
adc
in
xchg
xchg
xchg
imul
mov
push
daa
mov
lods
daa
enter
cmp
iret
scas
insl
push
lods
je
cmp
lahf
jnp
fldt
or
mov
gs
sbb
lret
jno
test
mov
lret
dec
test
jb
xlat
sbb
push
sahf
jecxz
repnz
out
mov
popf
dec
mov
inc
js
popa
and
stos
jae
cmp
lock
mov
pop
xlat
pop
push
jne
aas
js
push
mov
in
addr16
push
or
stos
stc
sbb
test
movsb
insl
pop
lds
mov
dec
dec
into
pop
cmpsl
push
icebp
or
arpl
cltd
daa
dec
push
lods
fdivr
jp
leave
pusha
or
shlb
cmc
mov
add
lea
inc
push
notb
sub
mov
pop
in
out
jno
sub
in
das
push
mov
mov
add
stos
mov
fistl
scas
xchg
pop
add
ds
test
and
mov
aas
jns
addl
add
popf
and
inc
loopne
mov
out
fwait
pop
xchg
leave
dec
bound
mov
insb
xchg
les
aad
sbb
pop
mov
imul
dec
xor
aad
adcb
adc
scas
and
xchg
je
fadds
imul
test
sub
in
cmovns
jbe
pop
cmp
lcall
dec
lock
in
mov
scas
popf
jecxz
lods
xchg
ror
add
xchg
gs
sub
pop
cs
xchg
pop
xor
js
aaa
mov
dec
adc
mov
mov
insl
inc
out
xor
std
or
cvtpi2ps
stos
testl
add
sub
add
pop
push
incb
adc
cmp
int3
inc
pop
adc
dec
cmc
mov
sbb
or
leave
sbb
sbbl
xor
andl
jmp
arpl
push
xchg
add
negb
clc
sbb
stos
sbb
or
rolb
cli
dec
mov
out
sbb
mov
add
sbb
xchg
mov
jle
jl
out
jmp
rcr
pop
xor
inc
jo
jp
or
dec
xchg
sub
in
jne
mov
lcall
mov
mov
cmp
les
fstp
pop
xor
lds
rorl
inc
imul
add
movsb
mov
fnsave
push
jge
pop
inc
xor
pop
pushf
aaa
cmpsb
rcll
add
or
mov
cmp
pop
cmpsb
orl
inc
outsb
sub
aam
dec
in
call
xlat
fwait
lret
incb
cmpb
and
es
lret
xadd
dec
lahf
scas
insl
notl
fcompl
xchg
mov
movsl
or
xor
sub
ljmp
sub
sub
sub
cmp
xor
jne,pt
pop
mov
inc
clc
lahf
enter
in
mov
jno
je
push
and
pop
inc
cmp
cmc
push
sbb
pop
push
std
push
testl
jp
leave
aad
jo
add
cmpsl
inc
int3
xchg
mov
push
test
add
sub
and
fcompl
out
and
mov
or
psraw
inc
mov
push
insl
shll
lret
addr16
dec
ds
jno
jmp
movsl
jecxz
pop
cmp
push
xor
subl
dec
lds
arpl
mov
xchg
stos
inc
popf
adc
mov
or
or
push
js
shrb
push
scas
and
aad
ds
call
cltd
mov
sbb
jbe
xchg
ret
add
add
shrl
cs
xchg
or
sbb
inc
data16
mov
test
sti
shld
test
adc
xchg
xor
inc
fistps
pushf
adc
jne
outsl
pusha
mov
inc
inc
or
mov
ja
sbb
lea
lcall
mov
leave
lds
add
push
cmc
pop
fidivl
push
leave
add
fwait
xor
mov
fdivrl
call
fbld
mov
je
sbb
pop
fucomp
dec
movsb
mov
adc
xor
or
in
int
shlb
push
cmp
cmc
xor
aad
in
cwtl
pop
jno
mov
mov
or
iret
aas
xor
push
out
dec
pop
shr
and
adc
sbb
cmpl
push
addr16
adc
sbbl
xchg
arpl
xor
jmp
jbe
and
call
jbe
fbld
xchg
hlt
cli
xor
cmp
push
shrl
mov
gs
mov
jns
pusha
in
roll
xchg
adc
or
adcl
imul
inc
push
shrb
xor
mov
fldl
mov
out
cmpsl
pop
fnstenv
es
push
pop
cmc
stos
push
sbb
dec
fsubrs
rep
lods
popa
stos
mov
and
pop
mov
cmc
xor
adc
push
leave
mov
orb
jp
loop
mov
pop
inc
xchg
push
xchg
lods
mov
addr16
jge
push
add
pop
hlt
cmp
push
sbb
dec
and
pop
lods
mov
dec
mov
mov
pop
jle
add
imul
ret
add
xchg
test
pop
jno
dec
shl
and
imul
fwait
inc
xor
sbb
mov
xchg
dec
mov
push
dec
mov
scas
in
xor
mov
mov
in
pop
cmp
insl
or
inc
jns
cmp
inc
push
pop
daa
xor
test
popa
sar
jmp
enter
in
or
repnz
push
repz
mov
in
mov
and
jno
sbb
xor
je
jmp
xor
dec
rol
je
fsts
ficompl
jge
addr16
insb
pop
out
adcb
cltd
inc
push
stos
inc
ljmp
fists
dec
repz
adc
push
mov
jne
fisttps
lods
outsb
lret
add
sbb
mov
push
sbb
add
roll
fisubl
sar
dec
adc
push
inc
es
dec
pop
xor
cmp
addr16
jmp
cmpsl
sbb
or
lds
int3
popw
daa
aaa
std
lret
ja
mov
mov
or
sbb
cmc
fsqrt
mov
inc
mov
pop
lcall
outsb
or
das
add
sub
push
pop
dec
sbb
jle
lods
jge
outsl
cmpsl
mov
imul
cmp
fs
aaa
mov
data16
cmp
adc
pop
insb
pop
add
cmp
out
rolb
jmp
and
call
ficoml
pop
je
stos
xor
into
pop
add
xchg
mov
setne
inc
dec
xchg
xchg
sahf
adc
in
push
loop
mov
sarb
mov
mov
sub
fisttpl
pop
ds
mov
inc
mov
cmp
ficoml
out
sbbb
sbb
xor
rcll
cmp
test
ljmp
mov
and
push
sub
lret
divb
ljmp
dec
jo
fs
xchg
ret
and
stos
xor
cmp
sub
fdivl
mov
push
xor
xor
add
out
das
pusha
cmpsl
call
roll
test
jle
jge
sbb
mov
push
inc
xchg
out
scas
xlat
mov
xchg
bound
pop
push
and
pop
rol
and
inc
daa
fildl
cs
rep
scas
sbb
inc
jge
sub
jo
movsl
push
adc
dec
push
clc
fisttps
mov
loop
sbb
xor
jb
pop
or
sub
mov
test
cmp
sub
pop
pop
sub
stos
cmpsl
mov
int3
dec
or
mov
addr16
rorb
cmp
xchg
pop
jmp
pop
in
push
movsl
mov
jmp
mov
clc
pop
mov
sub
pop
push
out
mov
mov
rcrl
gs
mov
cmc
dec
xchg
sti
out
xchg
ss
test
insl
fmulp
mov
cltd
ljmp
xchg
push
xchg
aam
dec
mov
fdivr
push
xlat
cltd
fiaddl
mov
or
data16
jo
enter
push
insb
ficoml
imul
movsb
in
sub
divb
mov
mov
sub
and
incl
movsl
hlt
ss
xor
aam
adc
rcrl
ret
lahf
xchg
stos
aas
rcrl
dec
gs
mov
xchg
inc
loop
mov
sbb
shrl
sbb
adc
adc
fstps
mov
fcoms
mov
sbbl
movsl
adc
aam
xor
in
adcb
xorb
xor
dec
test
jge
mov
repnz
das
and
push
clc
xchg
adc
push
jg
fiaddl
jmp
cwtl
das
repnz
ljmp
fisubs
fnstsw
xchg
je
outsl
adc
outsl
cmc
ficoms
cmp
shlb
mov
sahf
mov
adc
add
xor
push
adc
stos
in
lds
or
cmpsb
test
aam
or
pushf
call
roll
push
xorl
push
ss
ficoml
insb
test
aad
push
push
je
mov
mov
mov
push
dec
mov
mov
clc
jmp
jmp
inc
mov
cwtl
xchg
or
aaa
jge
outsl
xor
mov
sahf
mov
outsl
jmp
addr16
testb
push
frstor
add
adc
bnd
pop
jge
jnp
xor
rolb
nop
mov
or
shlb
in
pop
add
push
dec
dec
jmp
push
adc
push
mov
xchg
ja
add
test
hlt
shlb
mov
push
jns
cmp
adc
or
pusha
mov
sbb
stos
xor
dec
and
rep
ret
mov
adc
mov
cs
cwtl
cmp
inc
in
rcl
sbb
add
jnp
and
stos
sbb
fdivrl
call
gs
inc
add
xchg
or
jae
shll
je
je
mov
and
mov
stos
sbb
mov
xchg
cmpsb
fsts
lahf
sbb
cmpsl
cmp
dec
loop
ffreep
lret
add
add
das
add
or
es
mov
xlat
pop
inc
aam
xor
adc
sub
sbb
sar
xchg
ds
or
bound
or
idivb
scas
inc
cmp
inc
imul
addl
lods
inc
or
je
jo
sbb
push
xlat
jmp
add
inc
pop
outsl
shlb
sarl
jo
js
xchg
dec
mov
and
addr16
mov
lock
push
jge
stos
push
pop
push
inc
insl
test
sub
psubb
movsb
popa
sub
pop
imul
repz
push
rcrl
js
ffree
pop
sbb
lahf
pop
test
fstpl
add
test
inc
cmp
jl
and
push
sti
or
mov
aad
pop
add
pop
sbb
popa
iret
mov
imul
push
out
repz
ljmp
and
leave
insl
jmp
icebp
fsts
sahf
add
in
lods
jae
icebp
pop
sbb
addb
inc
repnz
flds
jecxz
lods
jecxz
push
jp
pop
ret
psubb
mov
sub
jmp
push
mov
adc
aas
mov
fs
sbb
jl
jp
cmc
pop
lret
xor
jle
dec
mov
dec
mov
xor
out
and
int
sbb
add
clc
andl
std
shl
xchg
je
mov
adc
jmp
jb
fnstsw
daa
pop
cmp
adc
rolb
xor
movsb
dec
and
sbb
fcomps
jmp
sub
adc
cmp
loope
sbb
fsubr
fistpll
pop
icebp
cld
jge
shll
mov
mov
cltd
push
mov
rorb
lods
sbb
pop
cwtl
leave
inc
movsb
fisttps
pop
adc
stos
clc
je
lods
sarl
call
daa
sbb
test
rcl
add
pop
xor
int
mov
addl
loop
pop
dec
movsb
filds
cli
pop
push
mov
arpl
push
subl
cli
push
dec
xchg
movl
jns
jne
inc
xor
mull
mov
pop
and
ret
icebp
sbb
ja
repnz
inc
pop
lock
sbb
iret
dec
imul
aad
ret
daa
add
pusha
push
adc
push
aas
mov
xor
pop
xchg
dec
lock
clc
scas
dec
inc
cs
mov
jge
dec
std
sub
pop
cmc
dec
jb
int
test
dec
jnp
inc
scas
inc
cs
push
stos
stos
cld
xchg
inc
hlt
ficomps
fnstenv
or
shrl
pop
fstl
mov
int3
or
in
or
loope
shlb
mov
stos
add
mov
shr
inc
in
pop
repz
mov
mov
mov
sub
push
pop
movsb
sahf
add
insl
int3
je
mov
push
pop
xchg
dec
adc
popf
lahf
sbb
es
xor
fbstp
test
pushf
push
push
scas
sub
dec
movsl
mov
dec
das
ffree
pop
mov
gs
push
inc
fadds
mov
imul
cmpsl
int
clc
cwtl
aam
or
rcl
push
inc
js
mov
pop
sbb
addr16
adc
jne
in
push
inc
xchg
bnd
out
push
dec
push
sbb
pop
mov
mov
and
cmpsb
imul
je
or
ljmp
or
lcall
mov
or
xor
divl
pop
je
add
lds
ljmp
lea
sbbl
sbb
lock
scas
mov
xchg
add
xchg
loop
mov
dec
subl
add
popaw
inc
xchg
fsts
jle
xlat
xchg
mov
imul
popf
dec
push
mov
rorl
sub
pop
sub
push
cmp
cmpsl
dec
sub
cmp
adc
xchg
imul
out
bound
in
inc
mov
and
xor
adcb
adc
lods
ds
imul
bound
or
or
dec
sbb
sbb
pavgb
jnp
hlt
stos
mov
adc
xchg
adc
test
leave
das
jns
dec
out
out
stos
jns
adc
add
or
sub
enter
add
fildll
movsl
or
repz
js
dec
repz
xor
cmp
pusha
push
mov
sbb
inc
push
mov
sbb
and
fwait
out
loope
sub
out
fisttps
add
cmp
mov
sbb
xor
jmp
and
scas
in
push
cli
jae
jae
in
loope
mov
andl
sub
fldt
sbb
cmp
daa
and
jg
pop
or
je
push
pop
add
dec
xchg
aad
out
in
les
add
rolb
outsl
sbb
push
dec
mov
jg
stc
adc
hlt
in
pop
adc
js
dec
sub
lret
jbe
movsb
dec
clc
inc
pusha
jmp
push
arpl
xchg
sti
in
mov
ja
pop
adc
test
decl
jae
lret
aam
lods
xor
test
mov
divl
cmp
pop
and
mov
imul
mov
xchg
xor
ss
nop
sbb
int
mov
adc
or
cmovge
mov
jg,pn
ret
int3
stos
leave
into
scas
adc
dec
mov
sahf
rclb
inc
sbb
ds
jl
imul
mov
mov
ret
out
inc
or
mov
test
std
mov
push
cmc
jne
test
mov
std
shrb
in
fmull
xchg
enter
bound
and
adc
lods
pop
or
push
jo
pop
add
cmp
ds
data16
cli
push
xchg
ret
clc
xchg
sub
stc
scas
enter
int3
mov
jle
repnz
sahf
dec
adc
sub
imul
std
jecxz
pop
frstor
mov
dec
decb
je
push
aaa
pop
jl
xor
aas
fisubrl
ljmp
out
cmp
push
jg
pop
inc
mov
pop
inc
gs
fucomp
cmpsl
pushf
call
loopne
ljmp
mov
push
pop
dec
push
xchg
es
xor
jae
lods
cmp
sbb
cs
js
xor
jle
push
adc
push
cltd
dec
and
aas
sub
jp
pop
mov
cmp
lret
scas
jg
test
stc
or
js
sbb
stc
mov
les
in
dec
adc
push
inc
bound
mov
cmpsb
push
fcompl
mov
jbe
jne
mov
fs
adc
testl
cmp
pop
or
lods
add
pop
das
cmpsl
cltd
dec
or
xor
popa
dec
add
ret
ret
sub
repz
jo
xlat
sarb
mov
cltd
dec
adc
dec
cmpsl
outsl
dec
ss
std
mov
ljmp
mov
sbb
mov
push
inc
mov
add
xor
iret
pop
cmp
and
push
sbb
xchg
pusha
push
dec
xlat
push
push
cmp
pop
fcomi
mov
add
out
popf
inc
sbb
dec
lods
rcrl
or
xchg
out
cmp
std
adc
ficoms
in
and
fs
pop
shrb
push
mov
inc
xchg
rcr
mov
jo
and
mov
mov
cli
push
jne
add
ds
jae
sbbl
aaa
stc
jnp
inc
and
adc
xor
push
iret
jmp
mov
loopne
sub
cli
mov
lods
cmpsl
mov
xchg
pop
ret
mov
sub
stos
inc
les
mov
push
cld
xchg
test
xchg
xor
pusha
das
addb
jle
je
negb
add
push
xor
cltd
sub
loop
pop
cmp
or
xchg
loop
popa
js
hlt
xor
rcl
add
cmp
js
sbb
cmp
mov
aam
pop
clc
pop
pop
push
insl
mov
rolb
ficompl
dec
pop
arpl
xchg
scas
sbb
loopne
xor
and
inc
xchg
add
hlt
int3
mov
ja
pushf
xchg
arpl
in
lret
xor
and
cmc
ja
mov
inc
mov
mov
cmpsl
mov
mov
mov
lcallw
aam
in
mov
pop
out
out
jg
xor
ret
sbb
inc
and
repz
sbbb
adc
jo
jmp
clc
aad
xchg
dec
stc
test
jg
jo
stos
mov
stos
adc
jne
stc
mov
adc
xor
dec
sub
push
aam
jle
das
or
and
std
data16
push
int3
lea
sbb
add
mov
push
fisubl
leave
sahf
add
ret
jb
dec
xor
push
pop
call
out
xor
dec
clc
push
push
jecxz
cmp
pop
xor
push
lods
pop
fiadds
inc
in
mov
push
sbb
add
xor
movsl
cmp
inc
mov
dec
pushf
mull
hlt
jmp
mov
call
jp
iret
mov
les
stos
in
repz
stos
inc
enter
in
in
sub
pop
cs
stos
shrl
in
sbb
les
push
xor
adc
clc
bound
cmp
dec
and
pop
xor
daa
popf
or
stos
sub
jp
cmp
insl
cltd
jo
shlb
popa
xchg
adc
out
mov
pop
lret
je
addl
inc
jbe
test
cmpsl
cs
pop
jnp
ja
nop
push
repnz
cs
daa
lea
push
pop
mov
and
sbb
je
push
inc
pop
xchg
mov
pop
data16
je
or
and
jae
or
decb
cmpsb
add
adc
lea
sbb
cltd
or
xlat
aas
jb
test
dec
cli
ja
inc
addb
ds
leave
outsb
sahf
dec
mov
jg
pop
imul
xchg
jle
aad
push
loope
xchg
mov
jmp
fstpl
sbb
lock
pushl
in
or
mov
and
sub
jl
rolb
mov
fsubrp
insl
aam
jl
or
pop
fwait
inc
adc
sbb
lods
push
ficoml
inc
out
movsb
jae
test
les
xchg
lret
sub
xor
xor
cmp
and
sbb
in
jl
pop
and
mov
lret
and
dec
push
jae
call
xor
pop
adcb
mov
stos
dec
cmp
xor
push
add
jne
test
push
add
xchg
inc
inc
lcall
int
shlb
mov
or
dec
pop
outsl
and
sbb
xchg
movsl
or
aam
pop
cs
push
jbe
dec
push
fsts
cmp
rcr
imul
xchg
add
mov
shrb
dec
pop
adc
push
inc
outsl
push
fnsave
iret
push
orl
jne
cwtl
mov
jo
mov
iret
push
mov
push
inc
std
insl
popf
aam
sti
and
adc
xchg
add
push
outsb
in
sbbb
stos
jmp
sbb
dec
inc
or
jns
inc
sub
bound
pop
xor
not
push
mov
and
lods
out
repz
movsl
out
pop
cmp
ja
jmp
mov
pusha
add
pusha
sub
mov
adc
pop
sbb
je
mov
xor
mov
mov
jle
aas
pop
aad
outsl
pusha
sbb
sbb
loop
push
rcrb
cmp
xchg
inc
jmp
and
mov
arpl
mov
jno
jmp
xchg
cmp
out
inc
mov
jnp
push
mov
icebp
mov
jg
sbb
std
xor
jo
enter
sub
ss
ret
imul
mov
sahf
xor
roll
mov
jo
add
out
mov
leave
xchg
xorl
sbb
movsl
cmp
mov
sub
subb
les
inc
xor
mov
loopne
js
ja
sbb
mov
icebp
or
xorb
inc
dec
cs
push
add
lahf
mov
mov
fcmovb
in
jns
nop
mov
sub
jo
mov
xchg
shlb
mov
pop
xor
subl
subb
arpl
out
push
nopl
mov
pop
xor
pop
pop
test
jg
popa
das
or
je
fsubl
xor
push
les
or
pusha
xor
adc
xorb
dec
or
jmp
sbb
int
test
js
inc
cltd
outsl
lcall
pop
insb
stc
adc
add
lfs
fsubl
mov
inc
addr16
inc
test
cli
loope
jne
fstpt
push
jp
loop
dec
aaa
mov
cmp
lock
mov
pop
popf
push
cmp
cmp
sbb
js
arpl
sarb
scas
mov
in
addr16
jle
jp
sbb
adc
in
and
flds
fldl
mov
and
lods
and
fsts
fidivrl
idivl
call
lret
cmp
xor
or
ret
or
in
ss
mov
or
mov
mov
jo
sub
pop
inc
push
sub
inc
jge
sub
dec
cmp
clc
out
popa
mov
sbb
out
int
and
xorl
sbb
lret
dec
cmp
cmp
sbb
test
ror
int
fisubs
mov
ljmp
aam
mov
sub
test
insb
popf
adc
xchg
adc
inc
fildl
xchg
pop
or
adc
rcl
pop
push
pop
push
jne
xor
cwtl
dec
adc
mov
lret
pop
push
repnz
pop
push
lret
and
jle
or
push
cs
inc
sbb
shrl
mov
in
xor
lea
lods
inc
push
bndldx
and
jno
cmp
sub
pmuludq
inc
add
mov
pop
mov
mov
fisttps
cmpb
adc
xor
jmp
mov
xchg
dec
stos
mov
add
jnp
imul
mov
mov
in
mov
inc
fnstsw
clc
fwait
ljmp
imull
cli
test
fucomi
nop
or
jg
mov
mov
in
dec
jl
arpl
je
mov
inc
out
inc
mov
int3
popf
xor
lahf
sbb
mov
mov
stc
cmp
jg
xchg
xor
or
in
les
pop
lods
mov
xor
sbb
pop
bound
cmp
in
or
fs
test
sahf
ss
mulb
push
cmp
leave
fisubrl
andb
cld
ljmp
sbb
mov
pop
mov
sbb
push
sub
test
xchg
xchg
out
inc
js
mov
adc
clc
jb
dec
jno
inc
movsl
jbe
mov
gs
sti
mov
lret
xorb
mov
jge
mov
mov
add
mov
add
ficoml
mov
inc
push
fisubrs
or
in
repz
into
sarl
shr
cwtl
adc
and
add
mov
out
cmp
leave
and
dec
inc
insl
movsl
xor
mov
xor
out
dec
rorl
mov
ljmp
adc
adc
mov
or
cmp
pop
xor
mov
or
mov
aas
mov
cs
mov
lock
sub
dec
iret
loop
jno
int
shrb
daa
sub
fnsave
add
mov
in
cmp
into
push
bound
xchg
arpl
cmp
xchg
aad
les
decb
add
or
jo
arpl
jne
sub
stos
insb
jb
les
xchg
xchg
pop
daa
lds
and
sbb
push
cmpsl
cmpsb
ljmp
push
cmp
dec
es
sbb
xchg
adc
push
sub
xor
movl
push
push
push
cltd
inc
mov
sub
adc
dec
mov
sub
lds
repnz
mov
mov
xchg
jb
rolb
jmp
inc
push
xbegin
lods
pop
mov
pusha
xchg
adc
insb
jb
test
fidivl
fwait
ret
dec
cmpsl
or
jne
int
jbe
mov
scas
dec
cmc
cmpsl
ljmp
pop
jno
or
or
mov
adc
sbb
mov
push
cwtl
xchg
sub
inc
movsb
jmp
and
adc
xchg
jle
push
loopne
or
pop
shll
pop
std
jbe
ret
push
ret
mov
pop
xorl
data16
insb
insl
into
mov
pop
mov
mov
mov
or
fucomip
ficompl
pop
mov
leave
fucomp
pop
mov
pop
jle
fdivrp
xor
insl
lock
sbbb
add
or
pop
add
pop
pop
or
je
inc
xchg
fs
fpatan
insb
adc
ljmp
scas
xchg
iret
outsb
and
sub
dec
push
in
sub
dec
into
icebp
mov
inc
push
clc
pop
pop
addl
cmc
lock
aaa
sbb
jecxz
and
es
cmp
mov
mov
bswap
push
add
mov
out
sbb
hlt
and
push
mov
int
lods
cmc
ljmp
sbb
inc
xchg
nop
and
sub
add
mov
iret
lea
sub
faddp
and
and
push
sbb
pushf
sar
mov
dec
fldenv
in
or
test
push
jbe
popf
inc
push
pop
or
xchg
and
pop
and
movb
mov
mov
jle
lcall
enterw
cmpsb
cmpsl
mov
mov
jne
pop
fcompl
mov
aam
loope
xor
dec
lret
orl
or
sbb
mov
leave
aaa
sub
repz
jp
dec
add
icebp
xchg
xor
ds
hlt
lahf
shrb
jle
mov
cmpsb
jae
frstor
mov
punpcklwd
push
push
stos
xor
inc
sahf
pop
and
sbb
cltd
into
outsl
push
add
aam
rcrb
and
cmc
cmp
push
cmp
push
pop
xlat
jge
cld
push
fnsave
fidivrl
outsb
dec
aas
inc
mov
cmp
clc
outsb
cltd
andb
jne
inc
cs
dec
sub
sbb
mov
sbb
push
mov
push
xchg
jb
fdivl
pop
add
xchg
sbb
pop
loope
adc
pop
imul
test
jae
dec
cmp
mov
pop
and
cmp
call
inc
test
out
out
jecxz
pop
fdiv
dec
dec
pushf
cmp
mov
out
pop
into
mov
jb
cmp
fistps
popf
shll
jl
push
lds
std
cmc
and
pusha
in
imul
shrb
sbb
push
cmpxchg
lret
int3
push
push
xlat
mov
mov
push
cmpsl
add
xlat
adc
and
movsb
cmpsl
pop
sub
push
xor
pop
and
adc
or
dec
mov
out
stos
pop
pusha
jns
ret
subb
mov
jl
and
loopne
push
sar
pop
call
mov
jg
xchg
cwtl
loopne
clc
in
js
imul
sub
movb
adc
fsubrp
clc
push
sub
js
xchg
jo
adc
inc
xchg
push
pop
outsb
jno
mov
ljmp
ja
adc
leave
xor
jne
push
jecxz
pop
adc
xchg
test
xor
insb
stos
lods
test
sub
testl
arpl
mov
xlat
push
sbb
inc
mov
mov
enter
cmp
jp
jns
repnz
leave
pop
rorb
push
xor
pop
inc
stos
les
lahf
out
bnd
push
adc
sub
xor
sbb
fwait
jo
pop
call
cmp
lods
adc
mov
jne
jns
fs
into
push
inc
dec
sbb
or
or
es
incb
pusha
pop
dec
enter
orb
mov
in
js
cmc
lods
mov
aas
ja
sub
mov
data16
dec
push
add
or
mov
es
jmp
scas
xchg
mov
mov
dec
ficoms
or
loopne
data16
mov
cmp
out
mov
rclb
clc
cmp
xchg
imul
and
imul
jl
lea
add
inc
add
adc
xchg
mov
pop
repz
fs
jge
pop
mov
aaa
xchg
add
xor
mov
test
std
pop
mov
int
push
mov
cltd
push
fwait
ja
insb
fcompl
and
mov
mov
jl
leave
mov
jge
pop
dec
push
adc
jno
push
sbb
pusha
mov
ss
push
sub
jnp
fdivl
fiaddl
out
pop
sbb
or
mov
or
clc
add
in
xchg
out
push
or
mov
and
cltd
repz
lret
push
lahf
leave
fstpt
in
shll
data16
mov
ret
inc
xchg
test
mov
lret
lock
fbld
in
lret
ret
inc
ds
push
jno
icebp
xor
stos
cmc
icebp
add
adc
mov
leave
enter
adc
push
pusha
popf
xchg
xchg
in
sbb
xchg
mov
ljmp
sbb
scas
mov
dec
jo
cmp
or
test
inc
dec
adcl
push
dec
fnstcw
mov
mov
ret
sbb
popf
xchg
jecxz
lods
adcb
decb
pop
jl
not
xor
shrb
cmp
call
and
adc
cmp
outsl
xor
and
mov
rcrb
sub
leave
shrb
test
insl
ret
loop
dec
mov
add
and
imul
hlt
push
mov
cs
nop
jmp
add
mov
xchg
test
mov
sbb
ficompl
inc
cmpsb
ret
in
mov
call
xor
mov
or
rcrl
in
jnp
add
xchg
add
adc
cmp
in
test
jl
xchg
movb
mov
fs
sub
sti
jl
add
rclb
jnp
push
and
rorl
into
xlat
shlb
fs
jnp
cmp
add
cmpl
clc
mov
sti
add
notl
lcall
and
xor
adc
sbb
pop
loop
fs
pop
sbb
xchg
inc
adc
adc
fcomip
scas
or
jns
outsl
sbb
jnp
cmp
and
dec
dec
loope
push
roll
out
jl
mov
mov
addb
jo
dec
mov
les
pop
pop
stos
aas
sahf
mov
out
push
imul
push
jp
mov
push
mov
and
jge
inc
mov
dec
testb
push
and
lock
inc
inc
sbb
adc
out
dec
mov
test
dec
shrb
pusha
mov
shlb
popa
sub
nop
aaa
dec
popa
mov
jb
add
jno
pop
lea
xchg
insb
cltd
xorl
xchg
aad
sbb
adc
inc
or
pushf
add
out
arpl
inc
adc
jb
jmp
sbb
mov
mov
int
lahf
cmp
dec
lret
rol
xor
mov
and
cmovb
ret
jmp
dec
lcall
insl
divl
push
gs
cmp
inc
cmp
adc
cmp
jnp
adc
push
xchg
test
mov
popa
pop
jbe
push
hlt
out
sub
push
and
out
xor
sbb
cmpb
outsb
fmulp
mulb
and
inc
imul
fadd
lods
mov
loope
test
js
pop
sahf
popa
out
jno
setne
stos
fidivrs
cmpl
movsb
fmuls
cmc
scas
not
push
fcmove
das
call
jecxz
vmovss
outsb
aaa
pop
adc
mov
cmpsb
insb
mov
bnd
bound
push
aad
jo
pop
sub
sbb
mov
sub
sub
ucomiss
test
cmp
fnstsw
insb
test
or
test
mov
and
dec
sub
sarl
fisubrs
mov
sub
lock
mov
out
add
dec
repz
fisttpl
fildl
mov
adc
mov
and
dec
push
movsb
mov
aad
addb
rcrl
sub
cmp
mov
and
cmp
mov
in
mov
insb
pop
push
add
xchg
jno
out
dec
sti
das
sub
test
out
xor
mov
shr
xor
sbb
mov
outsb
neg
mov
push
pop
jo
pop
sub
push
loope
popl
jp
outsl
imul
jbe
loopne
ja
adc
mov
cmc
out
adc
sbb
nop
ljmp
andl
xchg
sahf
jmp
iret
jg
mov
sbb
dec
jle
outsl
or
repz
or
and
add
pusha
in
pop
insl
cld
out
sahf
mov
sub
cmp
pop
push
adc
pop
jo
js
pop
mov
aad
jo
clc
xchg
xchg
lds
sub
ds
adc
push
test
ljmp
or
and
xor
mov
aaa
fldl
pop
test
clc
popa
xchg
lcall
add
in
imul
push
mov
cmpsl
jl
enter
lcall
mov
lods
and
or
and
arpl
adc
cli
jo
std
and
sbb
subl
xchg
inc
in
pop
pop
sbb
loope
jl
mov
nop
inc
or
jnp
cmp
mov
mov
xor
jnp
out
inc
pop
cli
push
xor
pop
jbe
bound
jmp
jns
ret
int3
mov
xor
mov
fiaddl
fiaddl
dec
mov
inc
es
cmp
out
sub
fsubrs
pop
push
sub
pop
loopne
xor
sbb
mov
imul
mov
and
adc
pop
dec
dec
inc
dec
push
push
jno
in
or
xor
adc
cmp
js
push
stos
test
rep
cwtl
pop
sbb
push
aas
inc
ret
pop
dec
xor
pusha
nop
mov
out
push
sbb
stos
sub
mov
sub
push
sbb
jae
pop
cmp
xchg
sahf
adc
xor
packssdw
adc
lcall
xlat
pop
sarl
daa
test
push
mov
add
add
mull
add
or
cld
adcb
sbb
loopne
pop
jecxz
test
dec
xchg
mov
mov
dec
scas
mov
mov
loope
inc
subl
sub
out
mov
das
fimuls
lea
mov
cli
xchg
cltd
dec
sub
mov
pop
dec
imul
adc
pushf
out
outsl
pop
sbb
add
ss
add
push
and
bound
pop
scas
xor
dec
mov
out
pop
sub
mov
or
out
into
inc
imul
mov
insb
das
test
push
les
dec
add
lds
repz
xchg
sahf
pop
mov
test
push
leave
pop
add
mov
in
pop
negb
inc
adc
jns
decb
push
sub
xchg
jmp
ds
mov
jne
xor
or
neg
lret
mov
mov
sbb
mov
jo
das
test
aaa
add
jl
pop
fisubs
adc
dec
idivb
jg
btr
loope
xor
jns
gs
mov
pop
icebp
pop
xchg
dec
sub
xor
movb
add
fiadds
mov
sub
adcl
xchg
and
sub
dec
sbb
dec
test
inc
arpl
xlat
add
inc
int3
sub
push
cwtl
jl
cltd
das
mov
and
sti
aaa
jne
outsb
loopne
fstps
cmovns
ret
sbb
stc
xor
insb
and
rclb
xchg
jno
adcb
adc
dec
pop
pop
stos
lods
inc
jo
xor
ret
stc
movsb
add
add
mov
mov
and
mov
adc
or
out
sub
inc
outsl
in
sub
stc
sub
mov
ljmp
aad
xchg
shll
aad
loop
lret
xchg
mov
sbb
mov
cld
mov
sub
lret
test
cmp
test
andb
ja
and
mov
xchg
fldl
fdivrl
add
dec
leave
add
subl
aaa
push
fs
insb
adc
ffreep
add
or
lods
push
pop
push
hlt
add
mov
pop
ret
loop
sub
scas
or
cmp
cmp
popl
xor
and
in
shrd
sub
pop
pop
enter
cmpsb
hlt
sub
and
mov
inc
mov
fstl
add
ret
jmp
int3
enter
mov
in
roll
or
nop
mov
mov
adc
filds
sub
lret
mov
movsb
loope
dec
out
iret
cld
sub
stc
int3
lea
addr16
xchg
xchg
mov
stos
outsl
out
in
mov
cs
ret
outsb
mov
imul
lea
arpl
xchg
clc
jbe
push
sub
arpl
mov
mov
out
inc
mov
out
shr
add
dec
push
sub
ljmp
ret
push
stos
fcomi
gs
loope
in
jbe
add
inc
inc
jns
cmp
bound
cli
stos
inc
lahf
push
mov
sarl
inc
cmp
inc
inc
hlt
add
mov
jbe
movsb
orb
push
lret
imul
jg
jno
adc
cmp
dec
dec
jecxz
xor
das
pop
mov
mov
xchg
out
sbb
adc
mov
and
ds
fsubrl
cmp
lret
inc
mov
js
popa
mov
nop
xchg
repz
imul
int
jle
add
or
aam
jmp
jnp
inc
dec
adc
fnstsw
fnsave
in
and
cmc
sbb
insl
ror
loope
push
aaa
rolb
pop
adc
inc
sbb
sbb
rorb
enter
pushf
dec
cli
mov
push
xchg
out
mov
xchg
pusha
clc
movsb
cvtpi2ps
dec
sbb
and
rcr
mov
out
xor
jno
dec
adc
cld
aaa
test
jae
int3
fstpl
xchg
insb
divl
push
into
call
mov
mov
subb
xchg
call
mov
test
jmp
xor
mov
insl
jmp
mov
jl
rcrl
inc
arpl
cmpsb
lods
popa
mov
cmpsb
imul
mov
xor
test
aam
inc
sbb
rclb
or
stos
mov
negl
cltd
push
inc
add
cmpsb
fadds
cmc
nop
out
mov
jne
rcrl
test
vmwrite
cmpsl
sbb
cmp
lahf
jne
push
loop
xchg
cmp
and
icebp
repz
jae
jle
add
add
lcall
cltd
in
imul
mov
in
and
outsl
sbb
mov
hlt
mov
mov
add
mull
aaa
sbb
pop
outsl
sbb
outsl
cmp
push
dec
nop
stos
cmc
ret
sub
in
or
inc
lahf
pop
xchg
inc
into
flds
psubd
ret
cwtl
lods
dec
aad
aas
xor
sbb
and
xor
movsb
mov
xchg
cmp
jg
jmp
cmp
scas
rorb
mov
or
out
out
ss
dec
bound
cli
xor
xchg
jge
mov
adcl
lret
frstor
sub
and
push
sub
xlat
clc
lret
clc
outsb
ja
sbb
xchg
pop
add
pusha
lock
dec
imul
push
mov
sar
es
std
mov
sub
adc
test
aam
fwait
addr16
aad
mov
out
mov
add
sub
mov
inc
call
and
aad
movsl
jmp
stos
lahf
arpl
cmp
and
sub
mov
aam
lods
nop
lods
push
inc
ret
es
in
in
jg
add
mov
rclb
imulb
ds
cld
hlt
in
outsl
lods
add
in
test
add
in
stos
inc
mov
mov
pushf
mov
mov
push
je
fidivrs
xchg
dec
pop
push
xchg
rorl
mov
in
in
cli
xchg
xor
add
mov
fsts
pop
les
mov
xchg
fstps
dec
sub
xor
jecxz
sub
test
ja
stc
mov
xchg
add
popf
and
dec
or
inc
iret
fbstp
push
or
dec
into
adc
mov
xchg
mov
stos
ds
jnp
clc
push
mov
pusha
or
ror
sarb
out
inc
push
xchg
fldenv
lcall
mov
lret
push
xchg
pop
jb
lods
sub
faddl
pop
andl
in
mov
aaa
and
add
pop
pop
repnz
push
xor
movb
cltd
mov
mov
add
mov
jmp
or
inc
daa
mov
inc
mov
or
mov
test
neg
and
loop
fildl
test
call
notb
pop
push
push
add
pop
sub
xor
lods
lret
test
fistpll
cmp
mov
insb
lods
shrb
call
pop
shl
lea
sub
jmp
push
mov
mov
shl
mov
xor
test
loope
add
push
popa
jle
dec
dec
js
add
out
lret
cmp
cmp
lea
sbb
data16
adc
inc
cmp
in
mov
xor
icebp
rcr
call
mov
cli
cmp
or
addr16
inc
loopne
sub
push
arpl
out
mov
cld
inc
dec
sub
dec
out
xor
inc
outsl
lcall
cmp
addl
mov
pop
or
insl
dec
scas
dec
sub
in
mov
xchg
lahf
int3
cmp
js
movsl
mov
mov
aad
xor
push
hlt
lret
add
mov
lret
mov
in
xchg
push
lea
mov
mov
cmpsl
jg
push
andb
mov
pop
push
jmp
and
xor
mov
dec
into
sbb
aad
jmp
mov
add
jge
dec
lahf
cmp
xchg
pop
push
add
sahf
jecxz
sub
mov
fdivr
subb
dec
xchg
inc
dec
and
mov
mov
xlat
addr16
data16
and
or
cld
cmp
ljmp
call
inc
insb
push
rcrb
push
ds
push
jle
sub
and
and
fnstcw
rep
lds
mov
insb
das
adc
fiadds
jg
insb
and
std
jg
aam
imul
sbb
icebp
into
or
cmp
das
inc
fstpt
xor
and
sub
shlb
dec
rolb
cmpsl
outsb
shrl
push
push
scas
call
lcall
jnp
jmp
jne
jns
pop
mov
shlb
sub
jmp
push
and
popa
adc
hlt
addr16
jae
in
loopne
sub
mov
andb
xor
sti
mov
fwait
inc
les
mov
jne
jnp
sub
nop
jge
adc
jg
pop
stos
inc
aaa
and
fs
xorb
sahf
mov
cltd
rclb
movsl
ss
lods
lods
jp
sbb
add
push
inc
sub
mov
cmpsl
sahf
fsts
adc
orl
lock
pop
cmp
jmp
sbb
sub
xchg
xchg
test
movl
jl
out
fcmovb
sub
xchg
mov
inc
mov
pop
fldt
ficompl
mov
xor
pop
in
cwtl
bound
sub
sub
push
mov
es
enter
leave
ds
mov
mov
loopne
mov
je
and
rol
loope
stc
add
ret
cmpsl
mov
insl
popa
ja
mov
dec
jb
xchg
or
mov
mov
pop
adc
test
rcrb
aaa
sbb
mov
cli
pop
push
sbbb
cmpsb
xor
cmpsl
cmp
lock
adc
clc
pop
inc
pop
sbb
jne
mov
aad
pop
shlb
nop
cli
mov
push
pop
cmpsb
jecxz
sub
mov
and
xor
scas
rcl
and
movsb
adc
cmp
stos
add
lds
pop
dec
sbb
arpl
rcll
mov
mov
dec
mov
jge
sarb
test
dec
fiadds
aaa
ret
add
sub
cs
push
dec
xchg
movsb
mov
lods
ss
pop
mov
cwtl
sti
into
jecxz
jg
or
cltd
rcll
into
data16
test
out
xor
xor
ss
enter
cmpsl
pop
outsb
xor
pop
cmpsl
lahf
push
mov
mov
sbb
int
ss
imul
test
aas
cs
mov
dec
mov
jle
jle
xlat
jb
lock
cmp
out
outsl
pushf
jae
shlb
dec
cmpl
filds
movsb
sbbl
dec
pop
leave
and
dec
div
or
ficoms
cwtl
dec
mov
xchg
sub
and
or
out
xor
jo
shll
stos
in
jecxz
mov
ljmp
pop
loope
aaa
mov
dec
enter
sbb
mov
push
decl
and
ja
test
push
xchg
ds
mov
mov
movaps
movsb
xchg
aas
adc
sub
ret
arpl
stos
pop
aad
adc
xor
jle
or
mov
ja
pusha
push
xchg
push
in
dec
jne
add
xchg
loopne
adc
jbe
js
gs
sub
dec
lods
fwait
lahf
in
pop
sbb
cmpsl
mov
jg
sub
xor
movsb
sub
cli
push
and
push
sub
lods
xchg
sub
jb
jno
mov
fcomps
insl
or
lea
jge
jne
ret
cmpsl
and
test
das
jne
xchg
push
inc
and
into
inc
leave
test
xor
imul
popl
jmp
jecxz
adc
test
push
lahf
and
ja
in
mov
pop
xor
and
cmc
push
mov
jae
mov
out
into
fsubrs
loopne
pop
pop
inc
mov
or
pop
mov
ret
xchg
cli
mov
jae
outsl
xor
xchg
xlat
cmc
orl
sbb
push
adc
lock
lahf
hlt
incb
xor
xor
insl
mov
inc
inc
out
cld
femms
adcl
inc
lahf
test
leave
shlb
mov
sbb
adc
mov
test
nop
bound
in
in
loop
test
lea
ret
cmp
mov
dec
push
ds
es
xor
stos
mov
pop
cltd
pop
decb
jmp
pop
xor
testb
add
mov
mov
mov
push
inc
aaa
lea
ret
inc
mov
xchg
int3
cmp
jne
ja
enter
ret
dec
mov
adc
fiaddl
cs
cmpsb
scas
arpl
js
pop
inc
xchg
popf
out
ror
nop
add
xlat
push
xchg
enter
fwait
adc
add
fldcw
arpl
jo
cmpsl
popf
sbb
cmp
mov
aas
mov
sbb
ljmp
scas
icebp
rcrl
movsb
push
mov
test
ret
std
flds
in
out
popa
xchg
dec
push
or
xor
cltd
dec
dec
add
adc
into
stos
mov
imul
lahf
sbb
xchg
sbb
das
mov
scas
mov
jecxz
dec
rcrb
call
sub
mov
cs
testl
pop
sbb
out
mov
pop
repz
cli
mov
lds
push
mov
xor
xchg
cmp
fcompp
jecxz
or
lods
lds
fs
fwait
les
dec
inc
mov
cmp
dec
mov
das
jbe
adc
dec
sbb
fidivrs
shll
pop
shrl
fs
mov
xchg
mov
jmp
and
lods
fcomps
pushl
pop
imul
dec
roll
arpl
add
pop
lods
and
mov
xchg
rep
lret
outsl
dec
mov
xor
repz
clc
inc
lcall
pop
adc
mov
pop
lcall
push
sbbb
push
outsl
adc
movb
das
enter
push
mov
mov
int3
stos
outsb
jo
sbb
dec
pop
popf
loopne
lret
nop
cmp
shlb
xor
les
adc
sub
pushl
sub
out
mov
out
jge
pusha
lods
xor
lahf
mov
cmp
les
add
mov
mov
imul
addr16
push
test
testb
sbb
repz
push
inc
xor
mov
inc
int
ret
cmp
outsb
push
cmp
push
dec
fsubrp
pop
inc
mov
or
loop
mov
xchg
popa
push
shrb
mov
sub
shlb
aad
add
jbe
push
xor
xor
add
inc
pop
jb
sbb
fwait
lahf
inc
fists
sub
lahf
jne
jb
subb
loope
adc
push
insb
jmp
xor
add
out
and
arpl
mov
add
cli
push
pop
pop
loope
or
movsl
push
fwait
insl
mov
lods
insb
orb
outsb
imulb
inc
push
or
pushf
mov
loope
inc
lods
sbb
bnd
pop
cmp
inc
cmpsl
into
leave
mov
js
pop
das
adc
mov
insl
das
adc
insl
movsl
arpl
jo
xor
andl
jle
add
or
sub
es
out
xchg
xchg
fiaddl
out
sahf
pop
call
test
sub
jmp
cli
imul
sub
mov
imul
mov
jne
daa
shl
mov
mov
inc
dec
bound
popa
movsb
pop
pop
jbe
pop
mov
aam
lods
jbe
stos
in
cmp
mov
mov
mov
enter
adcb
dec
hlt
shl
xor
push
push
xchg
inc
adc
xor
and
sbbl
lahf
add
lcall
subb
or
aad
jge
scas
rolb
aas
loope
push
pop
inc
mov
inc
lret
jnp
stos
xchg
xchg
pop
jno
sbb
test
mov
jae
xchg
movsb
std
fwait
in
stc
push
pop
jge
push
mov
bound
mov
je
push
movsl
sti
dec
or
std
or
popa
or
pop
data16
jg
mov
adc
hlt
movsb
rcrl
xor
lret
lcall
scas
xchg
cmp
push
popa
aam
je
mov
push
mov
add
icebp
insl
rolb
cmp
ret
js
lock
jne
pop
sbb
mul
loop
outsb
dec
xor
daa
add
dec
aam
xor
xchg
mov
cmc
xor
in
pop
cltd
movsb
inc
out
rcrb
sub
enter
jl
loopne
xchg
aas
xlat
jnp
shll
adc
ljmp
outsb
jg
push
add
popa
adc
pop
push
sbb
int
mov
iret
les
movsl
sub
mov
lret
je
pop
push
pop
pop
pop
and
xchg
adc
mov
es
loop
jns
lods
and
jecxz
out
popa
push
lock
mov
mov
mov
jl
seto
bound
repnz
mov
fiadds
xchg
rcrl
arpl
xchg
jge
inc
add
ljmp
inc
adc
or
and
push
fildll
sbb
movsl
stc
push
lret
jge
mov
and
bound
adc
ret
pop
int
sbb
push
inc
xchg
pop
or
in
hlt
repz
ja
cmpsb
sub
bound
jecxz
add
dec
lods
xor
les
cmp
stos
loop
jnp
pushf
insb
loop
xchg
fistpll
adc
clc
and
adc
jmp
sub
stos
gs
hlt
enter
dec
dec
inc
daa
ficoms
stos
push
sub
mov
mov
cmp
hlt
dec
jle
aas
popf
push
mov
and
and
xchg
inc
add
in
adc
adc
jnp
xchg
fcmovnbe
xor
ss
fnstcw
pop
push
lods
jb
xor
pop
call
int3
in
inc
movsl
or
inc
ret
jno
insb
push
jno
andps
loope
mov
xchg
dec
pushf
sub
add
rorl
test
mov
jnp
faddl
mov
sub
addb
mov
dec
mov
mov
pop
fs
mov
pop
inc
insl
mov
lods
xor
mov
pusha
int
and
adc
js
popa
and
mov
adc
pop
jno
pop
cld
adc
push
and
push
pop
push
sahf
push
xchg
mov
call
xchg
jnp
mov
add
jns
pop
push
sub
test
lcall
fldl
adc
mov
rcrb
mov
sbb
jmp
rcr
test
stos
sbbl
ret
dec
cltd
push
lods
and
inc
cmp
mov
add
fmuls
mov
fiadds
lods
scas
jne
dec
insb
movsl
jg
cld
fmuls
cmpsl
mov
lahf
lret
hlt
lahf
push
cwtl
or
jle
jae
cmc
sbb
sub
jnp
and
push
loope
xor
mov
aaa
pusha
xor
stos
push
in
lock
out
shrl
sub
iret
add
push
mov
shlb
sbb
ja
and
int
rcrb
dec
sub
pop
cwtl
cmp
mov
jnp
loopne
pop
cmp
mov
enter
push
sub
imul
into
jbe
fisubrs
addr16
andb
lahf
mov
gs
lock
mov
movsb
clc
and
mov
cmp
or
adc
fcomps
sbb
sbb
notb
loope
jp
mov
xor
rcrb
xor
add
push
push
mov
in
adc
cld
jnp
push
in
mov
mov
add
jns
pop
xor
dec
mov
ss
aas
jl
shll
orb
int
loop
mov
jg
cmp
cmp
insb
or
cli
loopne
lret
jmp
inc
dec
sbb
fwait
sub
xor
sbb
and
sub
mov
loop
lods
fcmove
mov
or
aam
into
inc
and
inc
push
push
jae
sarb
jg
push
cmp
sahf
scas
imul
sbb
insb
cmp
adc
shrb
sub
mov
dec
jbe
popf
sub
stos
stos
pop
jb
repz
dec
sub
mov
ljmp
xor
jp
nop
and
and
and
and
jbe
push
mov
ficompl
dec
ret
and
nop
cli
dec
cmp
ja
je
sub
xchg
movsb
repnz
xchg
mov
sbb
push
pop
sti
popf
jbe
ds
outsl
or
sub
in
adc
sub
inc
pop
test
loop
iret
sub
xchg
in
decl
inc
out
les
test
jge
push
xchg
stc
repz
xchg
cmp
cmpsl
or
sbb
xchg
fisttpl
inc
mov
imul
jp
jnp
pusha
and
xchg
xchg
inc
pop
fbstp
orb
jmpw
call
push
add
jecxz
and
fidivrl
add
call
dec
dec
insb
pushl
xchg
xchg
test
rol
jl
mov
js
mov
xor
and
sbb
shrb
push
repz
and
xchg
test
jne
sarl
pop
lds
pop
test
loop
scas
and
idiv
movsb
push
mov
test
sbb
mov
jnp
aad
sbb
and
dec
imull
xchg
inc
dec
fsubrs
loop
test
mov
jle
inc
or
inc
aad
sub
clc
mov
fcompl
add
push
shr
rolb
add
sub
inc
jmp
add
div
repz
pop
mov
lock
es
out
test
push
in
xor
adc
mov
mov
popf
adc
jo
push
push
bound
das
sar
loopne
xchg
loop
push
cmp
rcll
mov
cld
cmp
cwtl
ret
xchg
fsubr
imul
lds
mov
jmp
lret
dec
push
inc
pop
lcall
xchg
or
and
xchg
xor
dec
mov
xchg
push
adc
push
jno
inc
sub
xchg
mov
mov
cmp
fsubl
jl
adc
popf
icebp
xchg
cmpl
in
in
jns
xor
jne
mov
mov
push
fsubs
inc
xchg
mov
add
xor
push
fwait
dec
arpl
mov
adc
loop
pop
incl
fldenv
sbb
add
cmp
ret
jae
std
push
mov
and
ret
sub
pop
scas
xchg
pop
fnsave
movsb
jnp
rcrl
cltd
mov
lods
mov
xchg
xor
xchg
add
push
fcmovne
and
sbb
test
mov
stos
cmp
mov
add
je
fsubrs
mov
adc
iret
and
loope
jle
in
xchg
pop
push
mov
sub
rorb
aaa
lea
inc
fnstenv
and
cld
sub
outsl
sub
pop
adc
out
pop
cmp
dec
lods
xor
out
mov
ss
fdivs
dec
popf
lea
inc
test
mov
rol
jp
test
stos
dec
jecxz
mov
mov
xchg
icebp
repnz
pusha
ret
and
repnz
and
mov
lods
sbbb
xchg
cwtl
and
cmp
xchg
jnp
dec
fldcw
mov
call
ret
jg
jge
cld
pusha
add
mov
pop
pop
in
push
int3
daa
sahf
mov
test
nop
inc
mov
outsl
ds
es
or
mov
jae
mov
jo
imul
xlat
popf
inc
std
xchg
add
int3
les
dec
xchg
pop
ljmp
mov
push
pop
mov
pop
insb
pop
jo
int
sar
mov
adc
cmp
dec
gs
repnz
jg
test
adc
jmp
sbbl
shl
cmp
or
mov
mov
fwait
xorl
pop
outsl
int3
dec
insb
js
sbb
mov
add
inc
pop
mov
xorl
cmpsl
sub
jecxz
sub
cmp
sub
outsl
push
sarb
movsb
pop
lahf
or
push
or
dec
or
mov
adc
sub
adc
pop
scas
lods
push
adc
mov
test
cmp
out
rorb
mov
sbbb
lock
cmpsb
jmp
or
and
adc
xor
shrb
dec
cs
pusha
cmp
fistps
popa
in
mov
outsl
dec
xor
mov
jmp
das
sti
aam
mov
cmc
xchg
inc
repnz
jne
dec
add
push
inc
movsb
pop
xchg
mov
loop
xchg
push
repz
adc
sbbl
repz
xor
stos
lds
enter
xor
test
bound
popf
sti
daa
ljmp
js
or
sbb
dec
push
xchg
enter
xor
rol
sub
outsb
mov
std
dec
outsl
ds
dec
daa
dec
movsb
dec
sti
aaa
xchg
call
push
push
out
mov
mov
push
stos
push
mov
fs
inc
dec
repnz
fwait
add
js
jl
in
popf
addr16
dec
cmp
push
fdivp
shll
mov
iret
or
fiaddl
repnz
mov
addb
inc
daa
cmp
adc
dec
and
push
mov
pop
fcoms
test
shr
or
lea
jno
clc
xor
add
jmp
xlat
inc
xchg
push
loope
lods
xchg
cli
leave
lret
adc
mov
iret
sbb
popa
subb
sbb
jo
popa
jg
push
lock
frstor
icebp
hlt
negl
sub
inc
dec
out
iret
xchg
ss
dec
mov
cmpsl
adc
xchg
push
add
add
pop
js
out
jnp
imul
daa
nop
das
jo
dec
jecxz
xchg
mov
pusha
stc
cmp
dec
xchg
pop
aas
outsb
loopne
and
inc
arpl
pop
popa
or
rorb
xchg
xchg
sti
pop
pop
cli
sarb
push
fildll
out
movsl
sti
lcall
mov
loop
je,pn
les
scas
lret
jns
push
mov
out
imulw
inc
shrl
into
push
out
and
enter
enter
jmp
mov
add
lcall
push
iret
push
loop
mov
aas
lret
les
lret
hlt
fnstcw
out
mov
sbb
rcll
dec
ret
mov
test
inc
sti
inc
dec
xchg
jne
xchg
repnz
lock
and
xchg
arpl
inc
test
pop
movsb
or
in
cmpsb
icebp
or
outsb
pop
mov
cmp
test
in
aaa
stos
or
fdivr
sub
push
popa
push
shlb
jg
push
pop
aas
lock
pusha
popa
ja
pop
mov
xchg
imul
mov
ret
pop
jo
mov
adcl
mov
ret
mov
int3
inc
and
xchg
cmp
jmp
sbb
ds
loopne
mov
mov
mov
je
mov
sbb
jno
pop
scas
adc
or
cld
mov
shl
mov
aas
repz
inc
or
mov
pop
mov
mov
add
sub
cwtl
sti
fnstenv
fcmovnbe
push
in
stc
clc
adc
loope
or
sub
jp
gs
jae
pushf
lock
pop
movsb
dec
addl
es
xchg
movsl
or
push
mov
lret
cmp
fistps
pop
cmp
add
jp
or
shl
add
dec
in
and
pusha
adc
lock
popa
pop
fisubrl
cwtl
cli
js
into
les
sub
adc
enter
incb
dec
into
mov
call
mov
jle
out
out
push
pushf
lcall
dec
sbb
flds
daa
add
sahf
popl
ljmp
add
pop
jmp
iret
movsb
shr
imul
inc
cmp
push
mov
sbb
andl
jnp
shll
pop
push
pop
mov
das
pop
adc
imulb
in
insb
jle
movsb
cmp
js
push
adc
adc
lods
sub
add
sbb
sbb
and
mov
insl
into
sar
pushf
dec
xchg
add
adc
hlt
imul
gs
divl
push
rcll
pop
test
and
xchg
jl
imul
loopne
repz
push
mov
into
sbb
in
jecxz
cmp
nop
jne
push
xor
nop
sbb
sub
adc
fs
mov
mov
imul
ja
aas
pusha
int
xor
lahf
gs
movsl
sbb
pop
stos
mov
cltd
int3
or
je
mov
sub
into
dec
dec
dec
jge
sarl
stc
xor
cld
pop
mov
jecxz
shll
dec
decb
jle
xor
mov
push
sbb
inc
repz
pop
xchg
pop
cli
jle
stc
jmp
jle
jecxz
imul
pop
addr16
mov
repz
jmp
repz
pop
repz
or
ror
out
inc
pop
ljmp
mov
xor
movsl
sbb
push
cmpsb
imul
lahf
mov
inc
pushaw
dec
pushf
mov
inc
fistpll
sub
pop
outsl
lods
sbb
jmp
xchg
jge,pt
pushf
incb
outsb
ret
cmp
pop
jmp
sbb
loopne
ss
icebp
fdivr
push
ja
lret
in
mov
inc
das
or
add
int
mov
cmc
sub
mov
enter
xor
lcall
in
in
sbb
std
addr16
ror
push
addb
insb
fcoml
mov
aas
rcll
movl
add
clc
aaa
andb
xchg
es
aas
jecxz,pt
icebp
outsl
jecxz
inc
mov
pop
loope
push
sub
ljmp
push
and
push
lods
inc
enter
test
mov
ret
add
int
sahf
sbb
or
std
clc
xor
loopne
sahf
pushf
and
mov
sbb
fiaddl
push
push
ds
mov
fcmovnbe
mov
mov
cmp
jmp
cs
repnz
leave
int
jle
mov
xor
cltd
cmc
std
mov
loopne
cltd
inc
sbbl
or
jecxz
neg
add
movsl
jbe
xchg
xor
add
pop
push
int
bnd
mull
jg
test
adc
fisubrl
sbb
outsb
and
xor
pop
shl
gs
xchg
xorb
das
call
push
dec
fwait
xchg
mov
imul
jg
fidivrl
add
cmp
xorl
jae
jnp
adc
adc
adc
pop
fisttpll
test
aaa
sub
pop
cli
jb
dec
adc
or
inc
adc
movsb
push
adc
sub
inc
scas
call
push
imul
or
add
outsl
lock
sub
push
mov
xor
xor
in
xchg
dec
dec
mov
dec
out
inc
loope
jecxz
lcall
roll
mov
popa
mov
scas
jo
or
pop
inc
popf
rclb
dec
mov
sahf
fidivrs
int
pop
inc
or
stos
mov
adc
addb
mov
cmp
and
sub
jl
pusha
sbb
mov
lret
mov
add
lret
stc
inc
outsb
mov
popa
outsl
out
lock
xchg
jecxz
sbb
jnp
cs
mov
test
mov
mov
clc
mov
icebp
rorb
mov
push
leave
jbe
xchg
fidivrl
cmc
out
push
aas
rcll
inc
pushf
inc
xor
fstp
jmp
cs
hlt
pop
loopne
fiadds
int
daa
in
in
or
xchg
lods
es
test
sbb
push
test
push
or
mov
inc
testb
orb
mov
or
insl
daa
pop
shr
pop
jne
sub
std
dec
jo
stc
ficoml
mov
xchg
lods
repnz
lret
fcmovbe
aad
in
and
lds
jmp
sbb
test
iret
ret
xor
pop
repnz
call
imul
ds
jecxz
jecxz
rolb
fildll
int3
mov
in
popf
js
shrb
and
stos
imul
out
cs
ss
loop
jne,pn
xchg
adc
into
inc
imul
cmp
ret
and
push
sbb
push
movsl
loope
jns
lods
inc
es
test
ss
shll
jmp
mov
add
mov
inc
dec
xchg
ljmp
and
mov
repz
dec
or
mov
movsl
pop
mov
cwtl
pop
lds
ret
xchg
loopne
mov
inc
lods
xchg
arpl
in
jge
sbb
cmc
popf
das
xor
xchg
lcall
inc
push
fnstenv
pop
push
pushl
ljmp
test
mov
or
adc
jns
pop
lea
ds
push
aas
inc
xchg
sbbb
mov
and
pushf
push
clc
push
and
repnz
loope
cli
frstor
sbb
shll
pop
dec
hlt
popa
std
test
scas
jo
push
pushl
add
or
call
sarb
mov
scas
std
ja
je
aas
mov
shl
daa
cmp
fcomp
inc
push
or
and
xchg
shl
cmp
out
sub
dec
and
push
push
cmpsb
jle
add
xchg
adc
in
cli
jne
push
xor
or
cmpsb
mov
ss
adc
pop
rorb
mov
cmc
xchg
shr
and
bound
mov
fs
mov
mov
insb
rcrl
adc
or
shrl
push
pop
jge
mulb
test
pop
popa
cltd
inc
sub
inc
ret
pop
lods
ret
sti
cltd
ja
xchg
dec
push
add
or
insl
aaa
fnsave
rcll
mov
jne
mov
ds
mov
outsb
fcompl
scas
sbb
push
subb
mov
out
sbb
fisubs
ss
orb
cmp
lock
mov
ficoms
pop
int
aas
and
xor
loope
fs
in
mov
mov
dec
js
repnz
sbb
xor
flds
addr16
push
das
lds
pop
shlb
lea
xor
xor
rcrb
es
imul
mov
jecxz
pop
cwtl
addb
push
push
sarb
nop
lods
test
push
repz
lcall
stos
js
mov
std
jo
pop
mov
std
movsl
imul
or
jae
push
daa
push
xor
les
sbb
push
dec
outsb
pusha
repz
mov
cmp
and
push
inc
cmc
mov
mov
pushf
push
mov
test
les
gs
sub
inc
out
mov
int3
lret
rcrl
dec
sub
shlb
push
gs
aas
jge
les
mov
cld
jmp
pop
or
movsl
dec
xor
arpl
cmpsl
sub
jge
add
adc
or
pop
int
xchg
mov
insl
push
jnp
fidivl
mov
cli
cmp
adc
fs
mov
or
or
test
out
sbb
xor
in
fnstcw
xlat
mov
rcll
xchg
mov
inc
hlt
sbb
std
mov
lcall
push
pop
fists
sbb
jne
inc
mov
pop
orb
call
mov
pop
mov
aad
lds
leave
mov
push
push
inc
jns
or
mov
sti
cli
lds
and
or
jmp
shlb
icebp
ret
in
mov
adc
enter
aaa
mov
daa
inc
icebp
aad
cmp
cmp
mov
cmp
jge
repnz
mov
dec
mov
cld
into
mov
cwtl
clc
repnz
or
pop
jns
mov
stos
jnp
sbb
or
test
aaa
popf
mov
insb
cwtl
pop
sub
das
xor
ret
cmp
sahf
adc
andl
jo
xchg
data16
pop
leave
mov
sub
cmpsl
mov
andl
repnz
fildl
mov
add
push
and
mov
sbb
sarl
sbb
ljmp
fs
sbb
xchg
les
lock
out
cwtl
adc
bound
pusha
loop
rcll
pop
mov
jno
sub
sub
lcall
addr16
fisubrs
mov
jb
shrl
shll
jb
jl
testb
adc
test
mov
in
lahf
inc
push
les
test
mov
mov
repnz
mov
xchg
fsubl
jbe
popf
daa
sarl
adc
xchg
into
cld
lret
inc
mov
gs
inc
cmp
xor
mov
sbb
sbb
pop
and
push
mov
rcr
dec
pop
cs
out
cmp
push
imul
pushf
jl
xchg
in
int
out
or
pop
cld
mov
outsl
inc
fwait
neg
call
pop
cmp
lea
mov
dec
inc
pop
sub
pushf
dec
je
push
inc
addl
nop
and
popa
xchg
jecxz
jb
fs
inc
js
ret
ljmp
cmp
pop
lahf
shrb
inc
lock
sbb
jecxz
cld
adc
test
imul
mov
ja
jae
in
insb
dec
inc
shl
xlat
rolb
and
jle
addr16
repz
subl
sahf
inc
xchg
mov
outsl
nop
int3
mov
dec
inc
push
jb
xlat
or
jne
loope
jp
and
stc
xchg
push
testb
insb
stos
test
xor
add
lcall
adc
repz
out
dec
sbb
mov
pop
sti
and
mov
lret
sti
sbb
or
aas
pop
push
inc
push
jge
and
pop
sbb
lds
jl
mov
arpl
sub
dec
lods
loopne
add
dec
jno
mov
cli
test
pushf
ss
sti
outsl
add
or
cmp
les
outsb
addr16
xchg
mov
xor
lahf
add
mov
lock
cmpsl
adc
dec
fwait
dec
jno
xchg
push
adc
pop
out
movsl
cmpsb
mov
pop
push
jne
mov
dec
imull
icebp
add
negb
mov
test
pop
and
cmc
pop
fs
cmp
push
pusha
ret
push
cmc
je
mov
mov
repnz
inc
sub
testl
int3
mov
sub
stc
das
ljmp
push
fwait
mov
ja
sbb
adc
sub
mov
in
sti
push
sbb
adc
mov
scas
shrl
pusha
pop
scas
ret
jmp
fmulp
imul
rol
mov
incl
out
aaa
mov
lea
fstps
xchg
inc
or
inc
shlb
mov
jl
negl
inc
into
pop
inc
test
jle
sbb
xor
jne
ljmp
in
and
je
sbbb
inc
adcb
inc
or
jo
das
dec
or
imul
inc
adc
gs
sbb
data16
dec
repnz
sti
xchg
xchg
mov
insb
popa
mov
lods
adc
xchg
sub
and
hlt
mov
xchg
shr
lahf
or
mov
cltd
pop
int
dec
testl
test
sub
or
inc
cmp
lret
shrl
fwait
loop
lcall
xor
push
dec
jnp
test
shr
out
pop
popf
mov
movsb
adc
lds
fidivrs
or
pop
mov
outsl
mov
sbb
dec
cmpsb
add
add
inc
ljmp
ljmp
daa
pusha
jae
and
loope,pn
sbbb
mov
fisttpl
mov
push
add
daa
in
inc
cli
dec
mull
cmp
mov
pushf
js
ret
fisubl
lret
aas
out
xchg
aas
pop
mov
shll
inc
jae
cmpb
push
ret
out
insb
lahf
mov
cmp
lods
shrb
mov
push
shlb
inc
repnz
cmpsl
cmp
mov
sti
insl
cs
inc
xchg
pop
sbb
pushf
fsts
idivl
call
mov
push
es
dec
xchg
in
mov
and
and
jg
mov
mov
out
mov
adc
add
or
les
fstl
sti
adc
sub
push
xor
cmp
jge
movsl
sbb
int3
ljmp
mov
movsb
mov
inc
aad
stos
or
xchg
mov
jns
mov
out
mov
sbb
jle
mov
add
add
sub
and
push
jl
outsl
in
hlt
lcall
cmpsb
push
psrld
scas
ss
mov
and
and
jno
and
pop
aad
xchg
fstl
sbb
lahf
inc
sarl
rcl
jp
mov
inc
repnz
cmpsb
mov
xor
lods
xorb
cmp
mov
sub
lock
dec
repz
mov
call
and
shll
or
push
adc
into
and
out
pop
ret
adc
jge
daa
cmp
jl
mov
sbb
std
sub
arpl
mov
fbld
mov
mov
enter
das
mov
xchg
sbb
std
cltd
cmp
sbb
or
inc
jnp
ss
into
leavew
cmp
test
ja
test
and
cmpsb
std
mov
das
cmpsl
mov
pusha
mov
sub
add
pop
sub
inc
addr16
inc
stos
fldl
sub
push
test
dec
int
inc
sub
aas
sub
fisttpl
inc
into
mov
fnstenv
lcall
scas
imul
je
push
jle
push
and
jge
aaa
dec
aad
cmp
sub
jnp
pop
mov
xor
stos
sbb
xor
fnstcw
nop
xorl
ror
sbb
neg
pop
inc
stos
add
xorl
pop
mov
aam
enter
jmp
lds
jmp
mov
iret
mov
mov
add
outsb
or
lcall
subl
push
jnp
dec
sub
imul
das
push
xchg
jne
nop
xor
dec
cmp
push
cmp
in
pop
sbbb
fcoml
adc
xor
lret
pop
movsl
cmpsl
sub
sbb
popa
pusha
movl
push
inc
mov
cmp
in
in
cmp
jns
xor
and
lea
jae
mov
pusha
xchg
jno
fisubs
mov
insb
into
pop
jb
inc
adc
push
push
pop
nop
das
in
xchg
jp
ret
pop
or
ljmp
loopne
xchg
or
mov
pop
call
adc
scas
cmp
outsl
in
outsb
pop
hlt
xor
in
inc
add
mov
stos
xlat
pop
sub
adc
scas
dec
xlat
mov
push
jne
cwtl
mov
out
std
jge
ja
mov
test
mov
jae
out
jl
cmc
mov
adc
ja
ret
and
test
xor
mov
push
in
jecxz
and
es
mov
jecxz
mov
cmpxchg
fistpl
xchg
lahf
add
inc
inc
inc
scas
add
lds
mov
mov
push
sahf
cs
popa
cmp
xchg
in
test
inc
push
pop
test
and
out
adc
cmc
mov
pop
cwtl
cs
popa
int
out
shrl
pop
push
les
fiaddl
shlb
scas
mov
es
inc
clc
or
std
ljmp
out
xlat
jno
fsubp
mov
sub
cmpsl
ret
dec
lods
pop
sti
xor
mov
stos
xchg
push
sub
push
jmp
jne
std
sub
clc
jne
sarb
out
jg
pusha
js
arpl
or
cltd
movsl
inc
mov
rcl
pop
cmpsb
pop
xor
scas
daa
stos
adc
xor
daa
sbb
leave
inc
cmp
subb
inc
repnz
int
rcll
cli
mov
adc
arpl
je
test
jmp
jne
pop
xchg
gs
and
inc
jo
shlb
jmp
mov
addr16
shrb
or
repnz
sub
xlat
push
enter
das
pop
cwtl
sbbl
mov
jo
add
nop
es
push
cs
loopne
sahf
mov
add
inc
add
jle
push
ret
xor
das
ljmp
adc
jo
imul
sbb
push
sbb
xchg
inc
aas
mov
inc
popl
je
cmp
aaa
jecxz
arpl
and
sub
jae
mov
pop
cmp
cmpsl
jns
cmpsl
shrb
inc
aam
das
mov
xchg
xor
jae
mov
cmpsl
mov
leave
lcall
cmp
es
movsl
ss
enter
jl
loop
pop
push
push
xchg
pop
dec
add
stos
mov
loope
inc
pop
pop
je
pop
adc
hlt
add
fimull
or
or
ficomps
daa
add
add
aas
loop
shl
xchg
test
fbstp
fldt
loope
cmpsl
and
cmp
mov
sbb
or
loop
or
mov
sbb
and
popf
in
cmpsl
xor
xchg
ds
shrl
xor
and
dec
das
popf
pop
sbb
idivb
add
mov
mov
mov
and
dec
mov
xchg
xchg
mov
pop
call
insb
aad
and
push
mov
inc
js
repnz
add
cmp
cli
ret
je
xor
cwtl
sub
inc
sbb
adc
insb
int
pop
mov
mov
add
ja
aaa
pop
sub
or
test
xchg
xlat
jno
shrb
fisubrl
push
mov
repz
lahf
ds
jmp
mov
or
out
scas
test
cmp
inc
push
sub
hlt
dec
sub
ss
data16
jno
dec
stc
and
addr16
dec
add
jns
push
movsl
pop
in
lock
fsub
jge
lret
and
push
xor
scas
pop
sub
push
xor
dec
repnz
movsl
or
mov
adc
mov
sub
mov
rolb
pop
pop
loope
mov
jo
dec
inc
andl
inc
stc
add
push
pop
idivb
out
mov
scas
ds
shrl
pop
mov
shrb
push
fadds
in
and
sub
mov
xchg
out
pop
test
fadds
mov
sbb
add
and
mov
mov
pop
or
gs
cmp
push
sbb
push
and
sbb
hlt
hlt
mov
sbb
scas
jp,pn
push
cltd
outsl
mov
shlb
inc
sbb
mov
sbb
jle
mov
push
mov
jb
jl
xchg
in
insl
adc
popf
mov
cmp
xor
add
ljmp
nop
jns
sar
inc
inc
inc
sbb
dec
dec
push
andb
jmp
fnstsw
arpl
inc
sbb
jo
mov
cmp
or
lods
and
iret
lock
mov
add
test
mov
and
out
jb
idivl
es
nop
vpcmpgtd
je
pop
add
pop
mov
sbb
loopne
jno
mov
mov
sub
mov
adc
int3
cmp
push
addr16
lret
inc
pop
cmp
pushf
xchg
push
or
aas
sub
cmpsb
push
cmp
test
sub
rcrl
push
int3
insl
jecxz
pop
jo
inc
or
call
jno
cmpsl
mov
ret
or
mov
out
out
imul
leave
cmp
xchg
je
mov
orb
or
lds
mov
adc
shlb
sbbb
hlt
push
aam
inc
or
xor
fdivrl
add
dec
sbb
sbb
xchg
push
or
cwtl
sub
mov
cli
test
addr16
cld
xchg
add
mov
stos
outsb
inc
out
push
push
adc
stos
dec
cmpsb
stos
in
rcrb
test
test
push
cmp
push
xchg
ret
pop
add
lret
loope
bound
call
add
inc
dec
jns
add
imul
adc
mov
iret
mov
shrb
in
lret
flds
mov
adc
xchg
subl
mov
in
stos
aad
inc
cltd
or
pop
pop
or
pop
mov
add
mov
subl
lret
in
xor
dec
fsubp
lods
or
mov
fcomps
sbb
repnz
jl
mov
push
mov
gs
push
add
test
shl
pop
shl
xchg
cmove
cmp
mov
rcrb
cmc
cld
xchg
sbb
aaa
fcomp
dec
dec
pushf
add
imulb
icebp
push
popa
mov
jns
mov
addl
in
in
stc
jb
cmp
into
rcr
mov
aam
sarb
popa
in
aas
jmp
ret
mov
aas
icebp
sub
xor
test
aam
outsb
push
xchg
cmpsl
test
add
add
data16
dec
or
in
data16
or
out
jge
add
dec
fbld
repz
xchg
cmpsl
mov
sbb
xlat
jmp
push
or
mov
addl
or
lock
mov
push
jb
mov
nop
loop
call
xchg
pop
fnsave
movsl
push
push
push
aas
stos
xlat
mov
stos
test
es
jg
shlb
pop
pop
or
jb
lahf
cmp
jbe
call
push
dec
or
mov
test
sub
in
mov
mov
adc
push
flds
jns
push
adc
xor
mov
repnz
cli
shrb
repz
add
sar
addb
sbb
addr16
adc
enter
pop
mov
mov
mull
mov
mov
xorl
mov
nop
rol
lods
daa
insl
orb
negb
and
enter
pop
jl
xor
fiadds
mov
movsb
dec
inc
ljmp
mov
aad
call
shll
push
jg
add
bound
pop
imul
cmp
out
jle
add
or
jb
push
add
add
loopne
pop
inc
stos
imul
lcall
sahf
mov
jne
cmp
mov
in
stc
sarb
fsubs
popf
aad
dec
mov
sub
and
clc
call
dec
arpl
das
test
movsl
out
and
and
mov
inc
sub
push
stc
fists
scas
lcall
adc
and
subl
xlat
push
or
or
test
inc
stos
mov
arpl
sub
mov
and
jle
and
pop
mov
xchg
mov
jo
mov
mov
rclb
xchg
adc
mov
mov
test
enter
cmp
in
aas
in
xchg
sub
dec
aas
and
or
jecxz
add
dec
mov
add
popl
lds
jecxz
shll
inc
or
pop
aad
sub
xor
sub
int3
cli
and
std
adc
xchg
dec
pop
inc
jnp
fimull
into
add
mov
push
adc
mov
cmp
repnz
jne
mov
sub
add
hlt
mov
cwtl
mov
and
xor
data16
adc
jbe
insb
je
arpl
ss
out
stos
adc
mov
xorl
test
mov
push
pop
inc
push
inc
xchg
pop
repz
mov
imul
mov
push
fcoms
shll
gs
bound
test
push
push
jne
inc
loop
xor
jge
jmp
inc
aam
and
xchg
mov
ds
das
mov
mov
outsb
int
jne
stos
testl
xor
movsb
mov
fisttps
add
lods
js
loopne
gs
jno
aas
dec
mov
mov
adc
mov
insb
pop
pop
mov
test
xchg
int3
cs
sub
push
dec
iret
shll
ret
dec
jg
shll
jg
dec
sub
mov
push
mov
jg
mov
faddl
cmc
int3
sub
jmp
sbb
or
in
mov
xlat
mov
jns
movsb
xchg
mov
mov
arpl
sbb
loop
jg
xorl
jg
dec
dec
jl
xchg
adc
dec
test
iret
lret
aas
adc
notb
xor
lahf
bound
sarl
sub
or
xchg
or
fcoms
push
add
xchg
sbb
cwtl
or
sbb
inc
jle
mov
aad
adc
data16
adc
inc
add
xchg
lahf
jb
jbe
in
movb
push
xchg
mov
cltd
shrb
inc
cmpsl
aad
push
mov
adc
mov
sub
in
jg
orl
dec
lds
pop
xchg
xchg
jge
adc
pusha
sbb
cld
jb
popa
ja
pop
adc
subl
in
inc
inc
jnp
aad
fs
shl
push
imul
imul
adc
mov
add
and
enter
jne
lock
aaa
mov
movsb
pushf
jae
fisttps
cmpl
xchg
ret
pop
ss
ret
mov
fstpl
and
fisubrl
cs
call
lea
xchg
fmul
cli
jae
jnp
or
xlat
xchg
mov
flds
sbb
mov
or
lret
ja
jae
sbb
fidivs
testb
and
cli
cwtl
movsb
testb
test
mov
addr16
pop
jae
lea
push
xorl
int3
fldt
adc
push
hlt
cmp
cs
and
jmp
mov
nop
cmpsb
push
fisttps
add
cmp
pop
aam
jns
push
jl
shr
shrl
popf
xor
xchg
pop
and
cmpsb
ret
lods
cltd
pop
inc
mov
arpl
cmp
jb
insl
outsb
pop
push
fiaddl
push
inc
jecxz
inc
scas
ret
pop
xor
mov
and
cmp
push
fs
mov
mov
pop
lock
shlb
mov
ja
movsl
dec
jno
xor
xchg
sub
lcall
xchg
insl
stc
adc
add
pop
addr16
mov
pop
adc
and
je
and
jne
sbb
mov
dec
lea
dec
shrl
dec
stos
cmp
dec
sub
lods
inc
or
pop
push
jle
mov
movsl
cltd
mov
xchg
jae
jp
inc
lahf
shll
rorl
fildl
fwait
or
cs
pop
repnz
and
pop
lea
push
push
push
fdivl
in
stos
fcmovb
xchg
jo
or
fimuls
mov
stos
imulb
js
in
outsb
movsl
shlb
into
and
nop
ss
stos
rolb
xchg
out
loop
out
mov
je
nop
mov
mov
call
cmp
jns
inc
call
xchg
push
mov
dec
and
inc
dec
popf
inc
xor
mov
mov
out
push
push
ds
sbbl
movsb
push
repz
fwait
loop
cltd
jns
idivl
lds
add
or
lods
jmp
pop
inc
movsb
outsl
test
mov
cwtl
mov
xor
in
test
adc
jbe
bound
xchg
sti
popf
loop
and
pop
push
mov
popf
dec
cmpsb
xor
lret
jmp
mov
outsl
mov
push
jmp
orb
fidivs
push
cmp
leave
shl
or
push
test
leave
test
rcrb
inc
loopne
ret
jns
cmpl
bound
mov
cmp
std
push
adc
sub
je
das
fildl
sub
lods
pop
insl
mov
je
xor
faddp
outsb
adc
dec
shrl
leave
xchg
or
movsl
test
movsb
mov
adc
popf
sbb
mov
pop
and
mov
xchg
int
hlt
mov
fcmovbe
cli
das
inc
lods
sahf
mov
jns
jns
pop
popf
push
outsl
inc
lea
xor
adc
jnp
jecxz
sarl
jnp
jg
push
adc
popa
mov
jbe
push
adc
mov
aaa
ret
fistpll
fldl
add
popa
hlt
mov
add
sub
jbe
or
ret
jo
mov
js
mov
arpl
ds
je
stos
cmp
lods
dec
xor
xchg
loop
loope
mov
fdivp
sahf
mov
mov
cmpsb
pop
sub
xlat
push
xor
xorb
les
cmp
adc
vmovsldup
in
jmp
and
xor
xor
roll
imul
fwait
pop
stos
dec
sub
mov
cmpb
mov
push
adc
pop
jle
lods
add
jmp
arpl
insl
fstl
sbb
or
jle
fisttpll
ss
test
lea
xor
or
fdivrs
sbb
xor
xchg
add
in
mov
xor
adc
push
dec
jecxz
cmp
leave
cmc
std
mull
pushl
lahf
mov
mov
jecxz
psubw
icebp
sahf
jge
mov
cmp
addr16
pushf
push
mov
cld
int
jo
mov
jb
push
leave
push
into
push
arpl
movsl
aam
cmp
andl
and
test
ja
pop
sub
push
push
push
pushf
dec
out
faddl
dec
cld
inc
std
sub
push
mov
mov
jb
fists
aam
movsb
push
mov
icebp
aam
jmp
scas
fdiv
in
les
inc
lret
jmp
push
mov
and
scas
js
cmp
pop
in
xor
push
add
enter
out
pop
cli
stos
pop
mov
movsl
push
aas
adc
fsubrs
dec
decl
cmp
sub
xor
or
mov
mov
outsb
rcr
hlt
stc
dec
cwtl
jns
xor
movsb
inc
dec
fwait
add
rcll
stos
lcall
sbb
and
test
sub
out
and
ja
int3
mov
jns
pop
in
test
bound
in
out
sub
fs
sub
push
mov
mov
pop
xchg
xchg
subb
and
adc
cmp
mov
clc
jg
xchg
ret
sub
scas
in
add
pop
sub
jecxz
jns
cmc
mov
lods
and
rorl
scas
or
gs
cmpsb
push
jnp
out
jp
push
in
call
cmpsl
sbb
mov
cmpl
xchg
inc
insl
lcall
cmp
hlt
jne
cmp
jge
fisubs
xor
or
cmc
cli
daa
es
in
es
pushf
stos
jae
inc
icebp
xchg
fiadds
jle
jno
xor
insl
lret
xchg
inc
pop
inc
cmp
arpl
insl
aaa
imul
mov
add
out
mov
sbb
xor
rcrl
mov
mov
in
xchg
orl
mov
push
test
in
mov
sbb
cmp
stos
call
and
mov
dec
jb
nop
stc
xchg
sub
mov
je
jecxz
jo
mov
jg
pop
dec
and
loop
xchg
hlt
jmp
sub
mov
pop
push
pusha
xor
xor
das
out
adc
jp
adc
adc
fs
cli
push
dec
mov
inc
and
lahf
add
xor
sub
lods
data16
mov
lret
push
adc
gs
inc
mov
adc
int
jne
cld
xlat
pop
es
int3
push
rcrl
xchg
ret
push
or
idivl
movsl
push
pop
insb
sbb
xchg
pop
mov
jbe
mov
aas
adc
cmpsb
scas
popf
cmp
mov
dec
and
js
cmp
and
rorl
or
dec
fdivrs
popf
test
push
fdivp
xor
in
dec
loope
or
mov
cmpsl
jecxz
clc
icebp
push
mov
xchg
mov
jmp
fs
cltd
out
adc
jge
push
fs
push
fsub
ficoms
sub
xchg
jbe
mov
mov
xor
movsl
cmp
mov
data16
xchg
xchg
js
and
or
fwait
mov
add
stos
sbb
std
clc
add
xchg
insb
xchg
adc
jmp
cs
mov
test
inc
mov
mov
mov
or
mov
outsl
pushf
mov
mov
je
or
xor
mov
pop
jmp
aaa
bound
test
stos
out
or
aas
clc
pop
fdivl
xchg
or
into
rorb
je
repnz
or
mov
add
jp
leave
xchg
push
shl
sbb
test
xchg
add
sub
mov
test
dec
ret
push
pop
adc
cmp
xchg
cmp
pop
inc
imul
and
and
ljmp
lds
enter
inc
out
insb
ja
mov
mov
stos
addr16
pusha
lahf
xchg
mov
subl
cmp
pop
sti
ss
sarl
sbb
xor
test
or
insb
lods
inc
jle
sbb
into
jae
js
mov
sar
movsb
aas
jb
lods
cltd
movsl
out
xchg
adc
mov
hlt
and
add
adc
adc
in
ret
sub
jae
sub
dec
xchg
pop
mov
xchg
sar
or
loopne
fwait
pop
mov
lods
xchg
dec
call
and
les
pop
fbstp
mov
cmp
lds
loopne
and
lret
sbb
pop
aad
mov
xchg
arpl
popa
adc
inc
push
mov
into
mov
lret
cmp
jmp
xchg
or
cmp
into
sti
push
xchg
mov
popf
ja
inc
xchg
dec
shrl
jmp
jmp
or
and
cmp
mov
lods
or
ljmp
cwtl
cmpsl
idivb
in
ss
pop
sub
lahf
xchg
fistpll
mov
jne
mov
dec
add
dec
aad
mov
mov
pop
insb
sub
adc
mov
jg
pop
test
push
jp
or
hlt
out
negb
bnd
xchg
and
xor
push
fwait
or
and
inc
mov
ljmp
dec
ss
sbb
and
sub
mov
adc
adc
and
loope
cmpsb
mov
in
adc
add
pop
cld
push
xchg
arpl
movsb
ljmp
fldenv
addr16
imul
push
fwait
gs
ficoml
mov
push
aad
push
jns
push
mulb
mov
add
ljmp
lcall
cltd
pop
jo
pop
dec
enter
xor
mov
xor
sbb
sbb
sub
call
mov
push
scas
push
lcall
test
fwait
pop
push
inc
aaa
cld
dec
mov
mov
inc
cli
flds
dec
push
dec
inc
lods
jnp
pop
call
push
or
cmp
sbb
fcoml
popf
loopne
lods
push
aaa
in
lret
or
sbb
inc
rcr
mov
fnsave
mov
lret
imul
or
jmp
lret
sbb
fs
mov
mov
dec
in
mov
pop
test
imul
ficoml
bound
les
mov
sbb
sbb
xchg
mov
int
xchg
fdivrs
rcll
add
cli
jmp
mov
add
lods
xlat
jecxz
rcrb
mov
lret
dec
cld
jae
mov
loopne
push
pushf
mov
dec
xor
mov
pushf
sub
push
push
push
gs
jns
and
push
or
push
mulb
sub
xchg
xchg
adc
mov
lret
sub
sub
lds
in
mov
or
xchg
nop
adc
cmp
rcr
mov
fstp
jb
cmpsl
pop
pop
or
inc
mov
subl
jecxz
std
sbb
cs
mov
cvtdq2ps
dec
out
add
pusha
push
data16
push
out
sbb
ljmp
enter
dec
sbb
xor
les
leave
dec
daa
mov
int3
jl
pop
sub
mov
jns
shrb
jp
mov
pop
and
add
mov
inc
xchg
push
add
xchg
sbb
pop
mov
cmp
mov
insb
daa
pop
adc
push
aas
push
dec
inc
mov
inc
mov
in
mov
repnz
aas
into
mov
adc
mov
in
daa
or
lods
jl
inc
std
ss
arpl
xchg
movb
mov
inc
add
add
rcrl
mov
out
and
xchg
into
hlt
inc
leave
lods
cmpsl
xor
push
xchg
jecxz
sub
mov
dec
add
hlt
cs
push
arpl
jb
movsb
imull
xlat
stos
cmc
pushf
jno
push
lahf
lret
mov
xchg
test
std
cs
xchg
aad
aam
xor
lock
sti
adc
jp
jle
aaa
shlb
hlt
rclb
sbb
xor
sub
mov
cmc
mov
jmp
mov
inc
popf
push
stos
inc
jo
push
jp
adc
int3
adc
mov
insb
and
in
jecxz
leave
clc
fldt
imulb
xchg
divl
cmpsb
pop
fwait
lea
pop
xchg
push
fistl
mov
jb
cmc
rclb
rorl
push
cmc
inc
and
mov
js
inc
movsb
xor
pop
xchg
rcr
data16
xor
cld
addr16
ss
fisttpll
inc
jle
stc
out
lods
adc
in
inc
jmp
lock
mov
sbbl
dec
xchg
out
cs
mov
jle
stos
or
repnz
enter
out
mov
jnp
jno
cmpsl
decb
test
mov
fdivl
and
cmp
add
gs
xchg
add
xor
pusha
imul
jg
and
inc
push
pop
dec
sbb
xor
stc
lret
in
xor
adc
pop
in
mov
daa
xchg
sub
int
xor
leave
add
in
lods
mov
sahf
lods
pop
stos
cmc
insb
pop
arpl
mov
pop
push
lea
lods
push
js
outsb
loop
pop
mov
cmpsl
inc
push
jle
or
shlb
dec
pop
loop
ficomps
add
mov
jle
mov
js
das
fmulp
add
xchg
cmp
mov
jno
sub
lret
dec
das
imul
mov
xlat
xchg
mov
sti
or
dec
hlt
pushf
mov
stos
lret
out
mov
shrb
ret
cs
outsb
jb
xlat
insl
mov
subl
sub
jl
scas
cmp
ss
jmp
jo
pop
pop
movsl
fnstcw
mov
xchg
dec
xchg
loop
sbb
add
dec
sub
outsb
fidivs
pop
idivl
mov
lcall
mov
movsb
js
popf
and
out
mov
mov
jg
hlt
adc
test
shlb
in
jge
inc
jbe
adc
sub
les
xlat
jg
js
and
lods
cmp
mov
sbb
pop
fmulp
push
mov
subl
pop
inc
and
sti
jl
sub
xchg
out
sub
jb
xchg
rcrl
int
push
jle
addr16
push
lret
divb
addr16
dec
sub
mov
or
mov
xor
add
push
ffree
pop
xchg
cmp
rcl
aaa
icebp
popa
or
cmp
adc
mov
scas
test
mov
jbe
stos
jp
push
shl
mov
mov
aaa
jne
pop
sbb
psubb
xor
add
cmp
adc
and
sbb
lret
cld
daa
sahf
xor
rcrb
int
ja
sub
movsb
ljmp
xchg
xor
cmpsb
fimuls
push
cmpsb
loopne
add
push
push
fcmovnu
or
dec
out
jns
cli
in
sahf
jecxz
shll
push
and
pop
daa
daa
repz
or
insb
inc
stc
mov
movsl
int
dec
xchg
inc
and
mov
cmp
leave
stc
orl
into
xor
test
sub
push
cmp
jo
arpl
mov
mov
cwtl
cld
inc
negl
clc
push
xchg
lahf
jns
ja
jb
adc
outsb
sub
push
sub
adc
lock
sahf
inc
fs
adc
mov
jns
xchg
jle
inc
lret
cmp
icebp
sub
add
movsb
mov
cmp
add
leave
dec
sub
imul
ja
xchg
imul
or
jmp
xchg
mov
push
mov
adc
xor
sbb
adc
sub
test
sahf
lret
inc
mov
inc
or
sub
cmp
bound
cltd
insb
push
xchg
sbb
loope
mov
jp
outsb
cli
rcrl
dec
jp
mov
or
scas
cmpsb
pushf
xor
fdivl
mov
mov
popf
sub
sbb
cmp
cmp
pop
dec
cltd
push
in
sub
scas
mov
lret
aam
aas
mov
push
scas
jbe
dec
jecxz
xor
imull
cmp
xchg
cwtl
repnz
add
test
imulb
xchg
cmpl
into
scas
and
cltd
shrl
out
xchg
sbb
or
nop
inc
or
das
pop
mov
mov
xor
xor
xor
adc
jl
dec
mov
das
mov
add
cmp
and
inc
aad
mov
or
nop
mov
inc
xchg
add
lods
nop
bound
xchg
xchg
call
mov
repz
jbe
adc
scas
repz
mov
fsubrp
or
or
int3
fcmovnb
fst
sub
and
stos
pop
mov
adc
inc
pop
sub
mov
in
mov
mov
jp
scas
sarl
cmp
ljmp
mov
sbb
je
sub
jge
cmp
jl
jns
cmp
push
cmp
xchg
jle
ja
aam
std
mov
mov
or
stc
mov
ret
jecxz
pop
adc
movsl
or
out
xlat
xor
jge
push
fisubrs
and
dec
loopne
dec
aam
jb
jo
ret
cmp
fdivrs
cmc
pop
add
nop
xchg
daa
ss
xor
sbb
in
lcall
aad
cli
scas
dec
or
xchg
inc
popf
xorb
jmp
push
add
inc
jae
outsb
inc
lret
dec
mov
and
xchg
roll
clc
xchg
movsb
or
fdivp
movsb
outsb
mov
js
sub
mov
bnd
shll
adc
call
movsb
adc
insl
xchg
sbb
mov
mov
or
push
call
cli
je
or
repz
ljmp
loope
fldl
xchg
loopne
inc
dec
hlt
pop
int
push
jg
dec
push
adc
mov
mov
fists
jmp
lret
jb
push
insl
sbb
xor
sar
xchg
pop
ss
pushf
mov
in
lods
lods
mov
mov
or
adc
test
inc
stos
jbe
cltd
lds
incl
out
jne
pushf
sbb
verw
lret
loopne
outsl
lea
sahf
fs
add
je
orl
pushf
pop
add
mov
or
inc
xor
mov
mov
or
xlat
lods
pop
in
fldenv
xor
test
popf
enter
mov
inc
pop
inc
aam
pop
lcall
sub
mov
aas
cli
andb
inc
inc
cwtl
scas
pop
or
enter
and
dec
rcr
les
outsl
cmp
data16
movsl
mov
xchg
mov
push
dec
jns
fstpt
jecxz
cmp
and
jge
loope
inc
cmp
popf
es
pop
jnp
or
shll
mov
fs
mov
inc
shrb
mov
sbb
mov
push
int
into
sub
sub
push
lods
push
mov
ds
adc
in
subb
and
lods
dec
push
loope
mov
pop
push
test
jmp
pop
sub
mov
imul
mov
ret
xchg
repnz
xchg
test
lea
mov
lock
adc
sbb
movsl
aaa
out
mov
mov
loop
push
test
dec
dec
inc
insl
scas
pusha
mov
popa
mov
out
add
lods
sub
loop
xor
mov
pop
cmp
loope
jo
cmpb
add
and
pop
hlt
sub
adc
stos
inc
dec
xchg
xchg
out
push
lds
repnz
adcb
xchg
push
imul
imul
ret
xchg
add
pop
shlb
push
out
loope
popa
xchg
mov
ja
cs
mov
inc
sub
into
add
negl
cmpl
pop
sti
lret
mov
scas
inc
add
push
mov
inc
ljmp
or
out
fmull
daa
int
lds
mov
pop
adc
ja
add
inc
dec
inc
lds
int
inc
inc
lds
push
sbb
lcall
mov
out
jb
inc
sub
push
repnz
mov
mov
shlb
clc
lock
call
cmp
mov
insb
mov
push
in
and
inc
data16
and
mov
sbb
ret
push
dec
int3
mov
lods
jp
mov
mov
lods
mov
iret
loop
lret
dec
ds
jge
xchg
scas
sub
sub
roll
fimull
mov
lret
ds
fstl
movsb
arpl
lret
dec
xchg
leave
sbb
mov
rcll
and
sti
add
adc
mov
mov
in
dec
clc
adc
orb
mov
lcall
lds
pop
int3
inc
cmovns
push
ja
pop
dec
loop
in
jp
inc
jmp
cmp
jbe
sub
ds
cltd
dec
cmp
jns
out
jge
gs
cmp
arpl
in
xor
gs
ds
jg
scas
fmul
pop
mov
ljmp
cmp
mov
rcl
xor
test
insl
int3
mov
add
ret
mov
in
ss
fdivrl
or
in
loop
scas
ja
daa
mov
pop
lods
mov
sbb
mov
lds
lret
lcall
je
sbb
imul
mov
shll
mov
test
sub
out
fildl
bound
test
cli
dec
lods
or
sti
sub
roll
imul
ja
data16
and
or
push
push
ret
or
mov
mov
shr
inc
ljmp
xor
sbb
adc
iret
adc
loop
mov
push
sub
ret
inc
lea
ret
ret
sub
jle
cmpsl
jns
push
cmp
out
mov
fisttpl
mov
test
movsb
push
add
out
test
mov
inc
and
sbb
xchg
dec
mov
int
int
sbb
and
int
in
fwait
lret
add
pop
stos
sub
sbb
sarb
stos
or
fwait
xchg
ljmp
cs
adc
add
mov
mov
adc
pushf
push
aaa
test
xchg
xlat
and
jl
dec
jnp
pop
xchg
loopne
jp
test
xchg
add
hlt
xchg
notl
cmp
bound
add
push
mov
jmp
mov
or
bound
lcall
xchg
rorb
mov
jp
adcl
inc
rcr
inc
sub
pop
xchg
lea
or
icebp
out
jmp
pop
mov
push
push
int3
adc
cmp
fisttps
add
lret
pop
cmp
jne
arpl
add
scas
movsl
dec
adc
jbe
test
das
lahf
addl
cld
stos
aad
mov
cli
movsl
lahf
dec
movsb
insl
scas
int
lock
std
jae
mov
add
mov
sahf
and
loop
nop
test
inc
mov
xor
jl
imul
ret
roll
daa
lcall
and
jmp
jp
or
ljmp
mov
pop
nop
loop
inc
scas
outsl
repz
rcrb
test
pop
int
xor
repz
sbb
mov
loop
sbb
imul
int3
push
inc
jge
cmpsl
cmpsb
sbb
pusha
or
addr16
pop
std
mov
pop
loop
add
inc
stc
jmp
daa
mov
aam
jae
sub
mov
sub
ss
sarb
hlt
xchg
push
stos
dec
jmp
push
dec
mov
cmp
mov
insl
push
jp
jle
fcmovnb
sbb
adc
push
pop
mov
call
mov
or
cltd
in
fs
add
imul
cmp
xorb
ret
push
push
stos
jbe
in
xchg
aaa
clc
je
inc
or
setge
cli
mov
jmp
jge
loope
int3
call
dec
addl
or
pop
test
adc
jne
mov
or
xor
push
xchg
fwait
inc
int
sub
cwtl
mov
imul
or
add
adc
mov
cmpsb
test
xchg
leave
inc
add
mov
xchg
outsb
pop
call
repnz
lret
pop
adc
push
dec
jp
cmp
mov
jmp
int
lret
ja
xor
and
or
mov
pop
repz
xchg
xor
dec
popa
in
xchg
popf
cmovno
jns
push
xor
and
push
inc
inc
pop
pushf
xlat
pop
lds
mov
dec
mov
mov
std
sub
dec
cwtl
push
mov
ss
mov
or
mov
inc
mov
dec
test
jnp
xchg
cmpsl
out
mov
shlb
into
inc
aad
cmpsb
xchg
mov
icebp
push
mov
roll
mov
nop
jno
xlat
sub
js
xchg
lods
push
fs
push
jp
sub
cmp
lret
dec
push
xor
fs
stos
cmc
xchg
jle
jae
in
cmpsb
add
je
mov
pop
adc
sbb
jno
xor
or
daa
pop
bound
test
into
pop
xor
sbb
xchg
aaa
add
mov
fidivrl
mov
ds
dec
xlat
inc
cmp
inc
push
dec
clc
mov
add
aaa
dec
lock
or
xor
rcll
pop
aaa
inc
std
pop
mov
pop
je
in
mov
xor
and
adc
int
into
cltd
in
add
or
cmpsl
shrb
cmp
aaa
cmpl
lods
and
popf
aam
push
scas
test
mov
cmp
aas
sub
test
mov
mov
subl
fxch
xor
mov
inc
xchg
xor
outsb
gs
jb
jnp
push
mov
jo
inc
sub
push
loopne,pn
sub
jae
mov
out
and
jmp
in
adc
idivl
scas
fneni(8087
addl
test
lods
popf
lds
add
push
add
jne
in
and
push
and
mov
ret
jle
jle
test
mov
sub
dec
add
sti
test
mov
mov
sbb
lock
and
inc
cmpsb
mov
cli
std
dec
in
push
add
push
stc
daa
cmc
ss
push
push
cmp
xor
sbb
adcl
outsb
std
jo
mov
pop
mov
xchg
inc
cmp
lret
mov
inc
inc
jmp
bound
xor
test
or
jmp
xchg
fcomps
pop
adc
jp
add
pusha
repz
shll
jg
ds
popf
mov
dec
and
cmpsl
jbe
movsb
ljmp
sub
jns
loopne
cmp
inc
jecxz
or
ja
fisttpll
sbb
jl
mov
jne
cmp
es
and
aad
frstor
out
add
lcall
dec
or
xor
cmp
iret
ret
sub
jle
filds
adc
pop
test
popf
push
negb
hlt
add
negb
lcall
add
or
xor
cmp
into
outsb
dec
mov
stc
insl
scas
outsb
pop
sub
cwtl
or
mov
xor
cltd
xchg
iret
sub
sbb
dec
jl
int
testb
ja
subl
outsb
pop
iret
push
fidivrs
or
sbb
xchg
add
pop
lret
inc
mov
dec
sbb
ss
sub
mov
push
andl
stos
push
addr16
push
mov
test
or
add
and
in
lret
sub
ljmp
and
call
pop
int3
or
leave
or
sbb
mov
stos
andb
gs
pop
rol
mov
add
mov
and
fsts
sbb
ficoms
sbb
rorb
cltd
sub
jbe
jg
lcall
and
sarl
popa
pop
xor
or
push
push
bound
cmp
dec
pop
ds
repz
pop
rorl
jmp
cli
lds
dec
je
imul
ss
sahf
fcmovb
loopne
aad
xchg
js
fmull
cs
and
or
sub
sub
pop
xchg
mov
rorl
dec
push
lret
mov
sar
pop
xchg
jecxz
inc
push
pop
fwait
jmp
andb
jb
sub
sbb
dec
push
movsb
dec
sbb
push
outsl
cltd
push
aas
mov
xchg
dec
or
sbb
xchg
mov
jp
in
mov
or
and
sbb
mov
xchg
aam
test
cmp
sbb
scas
push
insl
and
dec
inc
add
call
add
adc
lahf
sbb
pop
sub
pop
icebp
stos
xchg
movsl
into
mov
mov
mov
mov
lret
stc
dec
adc
cltd
loopne
testl
sbbl
inc
lods
adc
pop
mov
pop
std
xor
loope
sbb
inc
dec
ss
mov
mov
sbb
push
dec
sahf
out
iret
dec
mov
inc
sub
int3
jp
ds
ljmp
pop
pop
shrb
jns
out
and
or
mov
push
pop
pop
mov
das
scas
ret
sbb
leave
inc
lret
aaa
mov
std
adc
in
push
sbb
nop
hlt
adc
hlt
pop
test
cmp
sbb
mov
adc
sbb
mov
mov
test
inc
call
fdivrs
test
pop
aam
cmpsl
dec
lods
pop
out
int3
xchg
push
jecxz
push
xor
mov
pop
pop
inc
into
xchg
mul
pop
imul
xor
pop
and
cmc
sub
push
and
daa
sub
and
insl
and
movsb
sub
jae
ret
jb
inc
add
pop
testb
cmpsl
ds
outsb
aad
sbb
insb
jge
lret
xchg
inc
xor
sub
movsb
gs
add
jp
fstl
mov
jge
ret
dec
and
cmovl
xchg
push
or
inc
xchg
cmp
add
daa
pop
icebp
xor
mov
jp
xor
push
ret
or
dec
cmp
mov
ja
push
mov
ss
ret
cs
add
jg
inc
fcoms
leave
adc
int3
test
lret
jp
std
pusha
pusha
hlt
insb
scas
leave
inc
xor
xchg
dec
sbb
cs
xor
dec
in
in
or
mov
jmp
aas
jnp
xchg
popf
movsb
sbb
stc
call
mov
dec
sahf
fmuls
inc
pop
mov
arpl
pop
cld
add
in
enter
mov
sub
es
lret
dec
mov
jle
sbb
sbb
cmp
pop
jge
daa
stos
shll
sarb
dec
adc
fucom
or
in
outsb
jp
push
inc
pop
sub
cmp
xchg
push
repz
shrb
leave
ss
in
pop
lods
cmpsb
sahf
test
mov
push
fs
dec
or
lods
std
fistl
xchg
daa
ret
lods
in
test
jae
pop
mov
int
sahf
push
gs
in
shlb
aam
push
sub
push
mov
lahf
sub
scas
in
cmp
repz
sbb
rorl
rol
data16
scas
div
xor
notb
pusha
stos
cmc
mov
pop
lea
push
push
dec
fmuls
inc
cld
pusha
mov
stos
xchg
cltd
arpl
in
fistl
adc
dec
es
cmp
mov
sbb
mov
cmp
je
xor
mov
jno
push
mov
sahf
das
andl
icebp
lods
mov
lods
bswap
arpl
jne
icebp
inc
fidivl
and
flds
push
or
repz
andb
and
mov
outsl
mov
mov
sbb
sbb
call
jb
test
inc
rorb
js
ficoms
mov
lcall
xor
mov
jmp
dec
repz
pop
dec
jo
sub
in
lods
cmp
jmp
out
stos
test
or
mov
xchg
push
inc
js
cmpsb
jge
mov
fwait
lods
out
lock
sbb
push
sbb
mov
daa
enter
dec
sbb
push
dec
pusha
repz
ret
or
fstl
rclb
sbb
or
ret
or
lcall
int
mov
repnz
pop
dec
into
jge
pop
push
aam
movsb
pop
aam
in
xor
mov
negb
sti
jns
xchg
mov
pushf
outsl
inc
push
mov
add
gs
and
dec
inc
pcmpeqb
sub
sti
addr16
and
std
pop
xor
arpl
cwtl
in
outsb
pop
repz
sub
fld
mov
mov
ja
mov
aaa
mov
adc
lods
lcall
sahf
in
pop
mov
fldt
xchg
jle
lods
xchg
mov
push
xchg
dec
test
xor
or
cmp
stos
xchg
popf
xchg
fidivrs
push
faddl
rcll
lods
fadds
lahf
loopne
jb
imul
js
hlt
dec
mov
push
inc
fldenv
sub
dec
mov
or
inc
lods
jns
cmc
sub
movsb
leave
jne
insb
adc
lods
pushf
ret
fstp
or
xchg
test
mov
push
inc
push
std
mov
xor
mulb
out
scas
daa
xor
pop
pop
or
jp
pop
sub
ss
mov
xor
adcl
pop
leave
pop
outsb
sbb
cmp
adc
cwtl
imul
sbb
cwtl
js
jl
jne
or
arpl
mov
ja,pt
sub
rcpps
enter
cld
xor
cld
in
dec
pushf
mov
xor
stos
xorb
daa
insl
sub
mov
jns
cmp
inc
pop
or
pop
lret
out
add
inc
inc
test
roll
cmp
xchg
stos
push
mov
insl
scas
dec
mov
inc
inc
mov
movsl
rolb
test
push
xor
lea
ds
adc
push
inc
fisubl
addr16
pop
xor
fistpl
movsl
pop
and
push
test
mov
ret
lcall
cli
mov
sti
loopne
ret
or
dec
mov
pop
les
mov
jmp
ffreep
xchg
cs
xchg
and
cmc
mov
or
and
in
lods
adc
into
mov
lea
imul
lcall
adc
xor
fprem
insb
test
push
das
and
xchg
les
repz
dec
push
fsave
pop
aad
outsb
mov
mov
insl
fwait
ljmp
mov
push
xchg
rcll
enter
pop
std
imul
pop
mov
jge
mov
push
scas
or
sbb
fwait
jbe
daa
test
mov
divl
movsb
pop
fadds
and
lods
out
add
lret
ljmp
lds
lods
in
xlat
mov
pop
insb
mov
mov
cli
das
test
xor
stc
mov
out
pusha
dec
adc
mov
aam
fldt
dec
add
pusha
or
pop
xor
jno
aad
jg
adcl
lret
test
subl
cmpsb
jg
lock
pushf
aad
pop
jo
imul
negb
ljmp
lods
mov
mov
mov
cmpsb
fildl
mul
push
pop
bound
call
pop
bound
shlb
inc
xor
out
add
ds
cmp
test
cmpl
xchg
loopne
shlb
inc
fsub
out
jle
outsb
inc
int3
bound
loopne
and
iret
xor
cmp
xchg
xchg
pop
rclb
sahf
sbb
nop
repz
xchg
push
pusha
shll
xchg
mov
test
femms
stos
inc
faddp
stc
pop
popf
pop
xchg
into
and
scas
jge
push
sbb
lds
repnz
call
jbe
xchg
js
mov
cli
sbb
lods
in
adc
in
add
xchg
out
in
scas
mov
ficoml
sarl
sbb
and
pop
fdivrs
mov
test
ljmp
and
cmp
add
fs
iret
jbe
mov
push
and
fdivrl
sbb
test
mov
jg
jns
shrl
mov
dec
subl
pop
mov
push
movsb
xchg
add
stos
cmp
addb
fcom
mov
lahf
push
mov
lret
adc
or
ds
sbb
aam
in
je
fldl
sbb
fisubrs
ret
leave
push
adc
jge
pop
jecxz
mov
mov
inc
bound
outsb
test
xor
outsl
mov
push
jns
loope
push
mov
imul
cwtl
in
mov
xchg
pop
sub
push
or
out
push
xorl
cmp
out
or
jmp
scas
push
adc
imul
push
mov
pushf
dec
jl
stos
loope
and
pop
mov
shrb
sbb
fbstp
sbb
fildl
pop
cmp
int
lret
push
sub
repz
xor
cmp
pushf
aam
push
dec
pop
ret
lods
inc
cmp
cmp
rcrl
clc
lods
out
xlat
fnstenv
adc
inc
je
cltd
fidivrs
xchg
push
mov
mov
std
push
stos
imul
mov
dec
dec
jp
cmp
xchg
cld
cmpsb
mov
xchg
pushf
outsl
jmp
xor
pop
fistl
fildl
jecxz
sub
inc
repz
push
insb
xchg
pop
stos
mov
cmp
mov
push
lret
out
adc
jge
jnp
es
outsb
and
movsl
sbb
xor
stc
pop
das
xchg
nop
arpl
or
mov
fwait
repnz
sbb
out
dec
xchg
mov
sbb
cs
stc
shl
sbb
adc
and
xor
jg
mov
sub
sti
out
loop
or
pop
call
adc
xor
pushf
pop
ret
hlt
ret
ret
lcall
mov
cmpsb
mov
outsl
mov
pop
mov
pop
mov
xor
les
mov
ret
out
cmp
adc
jno
push
push
xchg
bound
jge
jecxz
xchg
mov
rcrb
xor
stos
or
rorl
ret
adc
inc
xchg
jbe
xor
inc
or
push
loope
scas
int
pop
lret
jbe
cs
jno
shlb
dec
sbb
adc
xor
dec
xchg
mov
enter
mov
xchg
lock
adc
loopne
or
push
push
xor
mov
jge
ret
jge
rorl
fcmovb
ss
outsl
mov
push
out
movsb
jmp
mov
xchg
ret
jle
int
mov
loope
jbe
mov
outsl
fcmove
adc
mov
cmp
addr16
push
cmp
inc
fimull
adc
dec
dec
cld
xchg
or
stos
cwtl
int
arpl
pop
test
add
inc
jns
jbe
cmpsl
arpl
dec
pushl
imul
setb
mov
in
test
cld
lret
cmp
xbegin
adc
incb
mov
sub
add
and
inc
sub
mov
notl
xchg
xor
xchg
outsl
push
test
outsl
aam
inc
mov
fsubrl
jb
jae
cmp
and
jl
cltd
xor
mov
jp
push
xchg
fst
sub
outsl
fs
cmp
incb
in
int
pop
push
icebp
addb
pop
lea
mov
jmp
lock
ds
pusha
and
jns
data16
mov
push
jae
outsb
inc
hlt
push
mov
xchg
iret
jge
insl
mov
out
cmc
sub
hlt
mov
es
dec
push
fdiv
push
and
subl
loop
mov
adc
and
or
mov
movsl
jbe
inc
hlt
in
fadd
jbe
bound
bound
into
cmc
mov
orl
cli
shll
adc
call
push
inc
and
es
xor
call
inc
stos
pop
repz
xorb
cmpsl
adc
xchg
sbb
nop
inc
pop
pushf
cmp
dec
add
mov
out
add
jg
jb
hlt
out
mov
or
add
inc
or
sub
jb
jne
jmp
and
push
or
scas
mov
pop
arpl
popf
out
decl
jle
sub
cmp
gs
fnstenv
push
cmpsl
fsts
cmp
sbb
inc
daa
push
xor
sahf
mov
js
xchg
stc
sub
idivl
mov
push
data16
pop
stc
fwait
add
in
jnp
cmpl
mov
lock
cmp
fs
cmp
test
add
jo
mov
push
pushf
loope
out
xor
loop
push
mov
lock
mov
mov
das
mov
jmp
push
pop
pop
les
push
pop
divl
add
aas
addr16
das
dec
lret
push
adc
mov
or
lret
xor
inc
push
and
rclb
scas
nop
fsubr
lahf
cmp
shlb
popf
lds
sbb
mov
mov
les
mov
push
sbb
jo
xor
mov
pop
bound
test
stos
clc
dec
or
orl
adc
mov
xlat
int
and
push
ja
adc
jne
push
and
iret
xchg
jmp
or
lods
ds
stos
or
out
dec
mov
push
add
in
push
mov
and
mov
insb
push
inc
dec
xchg
adc
dec
popf
add
xor
mov
or
cmc
pop
mov
xlat
out
stos
loop
jge
cld
cltd
js
mov
jno
mov
xchg
jmp
inc
pop
test
ficompl
mov
mov
scas
xor
dec
xorb
cld
in
lcall
mov
leave
and
adc
adc
cmpsl
stc
mov
shrb
ret
insb
adc
pop
cmp
sahf
or
ficompl
out
and
sub
out
adc
adc
mov
push
adc
movsb
in
xlat
jmp
in
inc
jle
pop
in
dec
aas
add
shrb
cmp
in
fisttpll
call
adc
adc
fdivrl
sbb
sub
mull
call
pop
pop
imul
out
adc
ds
push
ljmp
push
add
or
cwtl
mov
into
xor
sbb
xchg
stc
test
repnz
incb
shrl
jo
sub
out
mov
outsl
mov
cmp
mov
leave
xorl
rclw
add
lock
hlt
push
fsubrl
popf
xchg
jb
js
dec
mov
movsl
dec
xchg
leave
pop
push
jge
mov
js
cmp
fcoms
push
in
into
pop
icebp
and
mov
jmp
cmp
mov
pop
xlat
pop
scas
out
pop
pop
int3
push
scas
das
bound
stos
xorb
push
notb
iret
mov
sub
dec
pushl
push
inc
fsubr
lods
rcr
out
sub
xor
pusha
adc
inc
std
adc
leave
out
ret
fimuls
clc
xchg
xchg
mov
sbb
repnz
stos
popa
inc
add
or
mov
or
movsb
mov
fldt
mul
in
adc
pop
divb
inc
mov
push
jo
inc
fistpll
cmp
xchg
loop
adc
mov
and
inc
inc
cmp
sbb
movsbl
decb
sub
dec
in
mov
lods
mov
stos
shl
mov
push
out
mov
addl
cmp
and
stos
push
jne
cld
out
in
or
ret
dec
cwtl
rcrl
icebp
iret
and
insb
push
shll
ja
ret
sub
pusha
out
lods
insl
push
xlat
jecxz
mov
orl
dec
mov
sti
orb
and
pop
ds
cmpsl
push
xchg
mov
push
jne
push
outsb
aam
in
mov
and
pop
lds
out
stc
jbe
push
lret
sub
fistl
add
int
sbb
movsb
mov
into
and
pop
cli
and
and
or
cmpb
xchg
add
and
mov
iret
hlt
fs
pop
sub
xlat
fiaddl
mov
push
out
stos
jae
sbb
sahf
ljmp
lcall
jne
popf
push
adc
dec
mov
fcoml
or
sbb
mov
sti
lods
je
int3
leave
arpl
fisubs
idivb
fisttpll
cmpsb
fidivrl
cmpsl
or
test
pop
pop
pusha
pop
push
test
add
jns
leave
fdivrp
imul
pop
and
cmp
pop
sbbb
stc
sub
cld
out
pop
into
lret
or
pop
xchg
xchg
data16
stc
addl
sbb
sub
mov
outsb
test
ja
jbe
push
mov
stos
mov
into
adc
ret
notl
inc
push
mov
int
adc
popf
addr16
sbbb
std
jae
push
jmp
cmp
jns
or
notl
clc
adc
xchg
push
addr16
mov
inc
push
in
sbb
imul
add
cmpsb
jp
not
dec
mov
jbe
out
loopne
stos
std
and
xor
jecxz
lcall
mov
pop
mov
sbb
cmc
movsl
movsb
nop
pop
sbb
rcr
cmpsb
and
pop
fwait
sbb
mov
add
insb
dec
push
inc
sbb
ret
rcrb
aaa
mull
nop
inc
pop
bound
push
out
cltd
adc
xchg
or
xor
popf
call
push
daa
push
pop
testb
faddl
push
ljmp
jmp
movsb
or
repnz
push
xchg
lods
outsb
lock
adcl
cld
mov
inc
or
pop
and
fdivs
int
mov
xor
jnp
cld
cs
xchg
mov
inc
cmpsl
mov
mov
and
shll
sub
in
cmp
sub
inc
cmp
mov
xchg
mov
xor
or
stos
out
inc
repnz
xchg
and
sub
add
js
or
popf
in
jb
jne
add
cmp
inc
in
add
insl
aas
mov
cmp
lahf
mov
push
out
rorb
loop
cli
fildll
jp
pushf
addr16
xchg
cmpsb
shlb
repz
mov
ror
jns
jnp
or
int3
stc
push
loop
lds
lret
jl
or
fs
stc
mov
lock
mov
lods
ljmp
sub
and
push
push
pop
fdivl
ret
ss
arpl
cmpsl
aad
jg
mov
adc
sti
adc
sbb
sbb
mov
pushf
cmp
or
into
roll
or
sti
mov
cld
mov
dec
nop
pop
xorl
lods
dec
push
in
sbb
and
outsl
lret
adc
scas
mov
and
pop
mov
jo
daa
jmp
out
jmp
jp
cmp
mov
or
jbe
inc
ss
lods
sub
pop
add
in
lcall
cmpsb
adc
xchg
movsl
inc
ret
add
xor
mov
test
push
push
rcll
rcll
outsb
out
sbb
inc
ja
jne
iretw
lret
pop
jg
jle
mov
sub
dec
jbe
shrl
xchg
nop
imul
dec
mov
lods
imul
sbb
out
sub
loopne
pop
push
add
nop
pop
jno
pop
push
mov
jl
add
int3
jp
xor
mov
ss
pop
sub
sub
add
inc
gs
rol
in
mov
lret
cli
std
pop
inc
lret
lock
jp
pop
add
push
xor
stos
enter
ret
ja
aam
es
add
ficompl
insb
jl
xor
jmp
mov
pop
sub
jns
out
shl
jo
daa
adc
push
push
ljmp
xor
pop
fnstsw
mov
xor
xchg
repnz
stos
popf
and
ljmp
mov
push
jbe
or
add
xor
jle
mov
mov
jl
call
inc
jl
out
das
push
jo
or
out
cmp
push
fdivs
int3
jp
dec
xchg
dec
inc
adc
in
imul
loop
jae
in
inc
cwtl
adc
pop
cmc
ss
adc
les
jne
or
adc
rcll
out
dec
leave
notl
inc
dec
lcall
fisttpll
jle
jp
repnz
sti
sub
ja
and
jecxz
in
outsl
sbb
pop
aas
es
aad
iret
mov
incb
inc
bound
lock
pushw
into
mov
fnstsw
mov
jg
jo
out
push
mov
iret
aas
loopne
out
orb
push
je
push
cmp
lret
in
pop
fs
ss
es
sub
push
cmp
mov
cmpb
sub
xchg
rorl
cmp
dec
or
adc
inc
dec
stc
cmp
mov
insl
adc
scas
pop
sbb
xor
or
push
cmp
test
loope
loop
lret
lock
test
dec
inc
or
pop
push
mov
jo,pn
bound
out
bound
in
movsb
out
shlb
xchg
push
jno
into
imulb
cmp
daa
sub
lcall
jo
mov
sub
stos
push
xchg
sbb
mov
call
int
movsl
mov
pop
inc
jmp
ret
ret
ficoms
daa
hlt
fnstcw
sub
in
mov
mov
popa
and
and
es
insl
into
les
jle
jl
xchg
cld
push
cltd
xchg
sbb
jmp
push
and
xchg
divb
cld
fcoms
jecxz
mov
mov
mov
xor
fs
mov
and
lahf
shrl
mov
mov
cld
inc
stos
outsl
movsb
lea
push
and
cmp
jnp
in
xor
ja
cwtl
push
in
daa
and
sub
cs
jl
jne
fwait
push
push
xor
jl
sahf
mov
lahf
mov
movsl
or
and
scas
in
iret
shlb
rcrb
loopne
pop
fwait
push
dec
lcall
inc
mov
cwtl
and
adc
xor
dec
das
xor
cs
repnz
push
xchg
clc
stos
leave
adc
mov
push
xchg
das
pop
jbe
sub
xchg
insl
lahf
cmpsb
in
inc
repnz
xchg
and
xchg
sub
scas
lahf
out
int3
xchg
sbb
gs
pushf
cmp
out
ficoms
je
sbb
aaa
mov
or
or
push
pusha
dec
push
cmpsl
bound
dec
out
das
mov
in
jns
jb
js
mov
sahf
dec
inc
or
adc
fs
sti
cs
incb
jge
cwtl
aad
sub
sub
and
cmpsl
test
lods
js
adc
pop
and
ret
cmp
cltd
jne
sub
add
jb
mov
jl
jl
lods
dec
sbb
rcrb
lea
nop
fiaddl
jns
je
sub
fcmove
sarl
das
dec
mov
cmpsl
sbb
dec
iret
imul
push
notl
jb
outsl
dec
inc
cmp
push
jns
stos
dec
mov
xor
mov
and
jnp
cli
inc
cmp
cwtl
pusha
xchg
in
push
ret
cmpl
test
cli
mov
rcl
dec
mov
and
dec
and
and
pusha
mov
movsl
or
out
mov
stc
or
inc
dec
shl
test
mov
mov
ret
addr16
push
cmc
test
dec
repnz
push
dec
mov
test
mov
adc
lea
and
jle
js
push
adcb
or
adc
ja
adc
jge
test
push
mov
jecxz
sbb
xlat
fadd
rcl
insl
lret
cmp
mov
bound
das
dec
xchg
jge
add
pop
push
jns
add
jns
hlt
shll
sbb
loopne
pop
or
jmp
push
fwait
cmc
call
jbe
test
mov
sahf
mov
jle
notb
jae
data16
in
sbb
inc
insb
xor
cmp
fs
jmp
nop
mov
pop
outsl
jl
inc
pop
xchg
mov
cmpl
jmp
dec
mov
test
add
lahf
clc
popa
push
jnp
fs
cld
incl
int3
rolb
xor
mov
jl
or
dec
dec
add
bound
daa
test
jnp
or
icebp
cld
xchg
test
push
sub
xchg
mov
dec
mov
cli
cmp
add
sbb
sbb
lea
in
dec
fdivs
or
fidivrs
sub
mov
ret
aas
fld
outsb
imul
stc
pop
adc
push
movsl
insb
jb
mov
cmp
jo
mov
nop
mov
xor
push
xor
in
fstp
outsl
sahf
push
and
and
stc
imulb
sub
rcr
mov
jle
mov
cwtl
cmp
xchg
in
test
and
mull
dec
cmp
adc
cmc
test
sub
pop
ds
xchg
xor
loop
push
out
and
pop
add
popa
mov
test
add
jmp
mov
pop
or
out
lds
daa
mov
insb
xor
push
nop
inc
iret
ret
mov
call
mov
int3
mov
push
push
sbb
gs
mov
frstor
cld
ds
lock
nop
scas
inc
das
loope
pop
nop
cmp
fisubrl
loop
push
fiadds
or
in
jl
into
notl
dec
push
jns
cmpb
xchg
or
mov
ja
repnz
in
adc
jge
xchg
jbe
lahf
shl
add
ficoms
mov
cmc
test
mov
mov
xchg
mov
lock
repnz
sahf
out
cmp
std
jp
xor
scas
mov
rcrl
pop
inc
cmpsb
push
xchg
test
clc
pop
daa
jge
lods
adc
jo
insb
pop
aad
test
push
imul
in
loop
movsl
loopne
mov
aam
insl
pop
sar
mov
cmp
imul
loope
mov
negb
fisubrl
lods
push
pop
mov
stc
clc
push
or
and
inc
pop
ja
cwtl
test
shll
fxch
test
pop
jg
sbb
xor
sbb
or
popf
or
adc
push
sbbb
add
mov
adc
shll
mov
sub
fbld
cmp
popf
loop
pushf
ljmp
test
les
ja
pop
out
dec
ficompl
push
adc
push
dec
jne
scas
pop
repz
out
sub
inc
dec
sub
nop
sub
jle
fwait
idivb
push
or
int
sub
sub
mov
mov
jmp
popw
int
aam
xchg
jnp
sbb
daa
stc
negl
jl
nop
mov
daa
aaa
ret
jmp
jnp
sub
es
jmp
xor
inc
mov
pop
ret
mov
push
jne
push
dec
movb
xor
in
out
mov
pop
mov
jns
jg
and
in
xchg
cmpsb
inc
cmp
or
ret
xchg
hlt
push
pop
push
test
repz
xchg
jbe
pop
int
xchg
cmp
push
mov
out
sbb
fs
xchg
xor
xor
push
mov
call
cwtl
xor
sti
add
xchg
add
fcmovne
lcall
sbb
test
push
movsb
repnz
lahf
filds
arpl
dec
mov
lcall
push
inc
cmp
dec
pop
push
cmp
test
or
fdivr
or
rolb
or
int
dec
lods
cmp
sbb
and
inc
cmp
sbb
pop
adc
pop
mov
xchg
pop
jl
loop
sub
call
sub
std
mov
call
pushf
or
dec
xchg
push
ds
dec
jp
xlat
add
cmpsl
dec
pop
lods
push
inc
divb
mov
loopne
xor
shll
loope
aas
in
jmp
add
das
loopne
cmpsl
sbb
push
cmp
xor
and
test
movsl
ja
popa
lods
pop
adc
movsb
and
fstl
testl
jl
adc
bound
xchg
mov
push
pop
add
lret
cmp
inc
pop
mov
repz
xor
cmpsl
lret
add
icebp
ja
leave
adc
nop
and
leave
sti
aaa
pushl
mov
mov
pop
ret
xchg
int3
and
add
dec
je
inc
pop
das
adc
insl
dec
arpl
negl
or
lods
mov
shrl
inc
ljmp
loope
ja
pop
fldl
xchg
dec
jecxz
aam
mov
fs
fwait
repnz
cs
loope
jb
fistl
xor
push
out
popf
pop
lcall
dec
mov
add
jle
push
adc
das
jg
push
adc
imul
dec
and
inc
push
cli
xchg
lock
mov
jl
aas
fsubrs
gs
fwait
pop
ret
pop
xchg
clc
and
add
scas
lret
jne
adc
mov
cmp
inc
mov
hlt
ret
bound
pop
push
sub
add
pop
sub
ficompl
fiadds
pushf
icebp
jnp
jnp
adc
rcll
ror
inc
out
movsb
xor
mov
sub
lcall
jne
mov
pop
into
sbb
nop
sbb
clc
jmp
dec
push
cmpxchg
sbb
pop
jne
mov
ret
lods
jbe
mov
ja
repz
mov
xchg
push
adc
clc
jmp
shlb
notb
adc
inc
push
cltd
cs
mov
filds
loop
cmp
mov
jb
add
iret
ret
add
and
jp
and
js
loop
cmp
imul
ficompl
arpl
pmaxub
sbb
rclb
mov
sub
xchg
xlat
inc
lods
fistpll
inc
sbb
aam
cwtl
pushf
or
xchg
pop
pop
dec
insb
jp
push
incb
adc
add
and
icebp
cmpsl
and
mov
sahf
sub
hlt
push
ds
mov
rolb
pop
lods
xor
dec
loop
bound
inc
loopne
add
mov
lds
jmp
cs
or
jle
sbb
es
mov
loopne
fiadds
int3
fsts
cmp
and
out
mov
filds
fwait
in
or
sbb
das
in
std
xchg
int3
mov
mov
sub
xchg
xor
arpl
push
inc
bound
dec
cltd
pusha
fisubrl
std
je
flds
mov
das
imul
mov
mov
mov
sub
fdiv
fisttps
xchg
idiv
push
test
imul
notb
loopne
lods
cmpsl
in
aam
dec
adc
jb
jecxz
mov
pop
cs
adc
adc
mov
sbb
ljmp
push
mov
imul
mov
sub
fdivl
scas
sti
aas
into
and
in
and
sub
das
xor
add
mov
jcxz
mov
cli
xchg
ret
es
loope
sub
in
adc
outsb
cli
xor
add
sbb
mov
push
xlat
jl
std
adc
sbb
add
insb
rcll
negl
pop
idivl
fs
leave
cld
jl
mov
cmp
mov
push
js
enter
sub
xchg
xchg
test
clc
inc
dec
sub
dec
mov
jb
test
rclb
inc
popf
imul
push
mov
inc
mov
ffree
jns
sti
inc
cmp
rolb
fcom
mov
dec
cmp
jbe
fs
sbb
and
bound
adc
std
arpl
pop
mov
mov
std
notl
jbe
mov
orl
inc
add
xchg
outsb
inc
jp
sbb
imul
int3
sti
push
jae
fidivrs
les
push
cmpsb
pushf
call
dec
xchg
xchg
mov
cmpsl
ret
dec
pusha
adc
pusha
mov
xchg
rorl
mov
hlt
pop
lret
aad
orb
fwait
adc
bound
xchg
es
mov
incb
mov
and
push
stos
dec
das
inc
xor
les
pop
inc
adc
xchg
xor
ja
push
repz
or
sbb
and
mov
sub
adc
or
jno
iret
outsl
repnz
cwtl
aas
les
loopne,pn
test
jno
inc
push
enter
inc
pop
mov
popf
add
mov
cmp
bound
dec
cmp
repnz
testb
sub
adc
cmc
sbb
mov
mov
or
icebp
out
popa
mov
daa
rcll
and
sbb
xchg
add
fidivs
stos
xchg
or
xchg
sbb
ret
fwait
jae
fs
sbb
test
ss
jp
add
add
sbb
push
mov
popa
mov
push
cmp
lret
int3
lcall
adc
adc
cmp
je
repnz
addb
pop
pop
popf
push
aaa
push
and
xor
or
pop
pop
out
push
cmp
cmp
mov
sbb
add
pop
fsubs
push
cmp
pop
dec
mov
jl
push
mov
cli
pushf
popa
cmp
jno
fmuls
sbb
xchg
js
push
mov
xor
imull
jl
dec
or
arpl
mov
shlb
sahf
lock
pusha
push
xchg
push
cs
cli
aam
loop
add
lods
movsb
jb
sti
mov
ljmp
andps
add
popa
push
lret
cmp
lret
out
xlat
fst
jnp
adc
sub
add
mov
inc
jl
fildl
imul
xchg
cmc
mov
cmp
push
xorl
or
adcl
sub
or
pop
mov
jbe
and
xchg
push
call
aaa
inc
mov
fisubrl
dec
jge
int
dec
fwait
jae
addr16
xchg
cmp
sti
and
sub
sub
adc
sub
xor
dec
xacquire
loop
clc
jbe
bound
xchg
sahf
rol
loop
pop
loopne
dec
jbe
cmp
inc
mov
bound
ss
dec
mov
lret
push
pushf
cmp
dec
lcall
into
push
aad
fsts
push
and
sahf
shlb
sahf
jae
loope
lods
test
outsl
and
imul
push
aaa
das
mov
leave
sbb
adc
fadd
sbb
hlt
mov
popa
xchg
arpl
pop
and
inc
loope
xchg
lods
ja
test
in
sbb
jp
pop
sbb
fwait
lea
add
add
outsl
sub
ja
dec
xor
imul
pop
dec
dec
fidivs
and
dec
or
pop
arpl
mov
not
jge
inc
out
push
inc
or
jmp
xchg
xchg
loope
int3
xchg
hlt
test
pop
data16
fimull
inc
shl
mov
adc
int
xchg
mov
dec
fcom
mov
xorps
and
in
push
push
movsb
pop
pop
cmc
lret
nop
call
aam
sbb
adc
sahf
int
sbb
subb
loopne
cmp
and
aam
in
mov
inc
fucomip
and
test
cli
cli
inc
fs
stc
les
dec
xor
daa
xchg
mov
fstpt
sbb
push
int3
repz
insl
or
es
pop
xor
jbe
mov
sbb
fldt
inc
cmc
int3
cmpsl
movsb
dec
pushf
lahf
push
mov
ret
cld
and
test
cmp
mov
jle
pushf
iret
and
fsubl
aam
pop
adc
dec
gs
ficompl
enter
adc
dec
push
cmp
mov
and
sub
inc
mov
fists
sub
js
mov
mov
hlt
negl
les
pop
dec
mov
lret
dec
loope
ret
push
mov
mov
jns
pop
mov
icebp
gs
xor
ja
pop
shlb
fistps
mov
stos
out
ja
insl
sarb
je
cmpsb
mov
movsl
mov
adc
in
lods
in
sti
jecxz
out
sbb
add
nop
arpl
add
gs
pop
es
addr16
rorl
push
lods
lahf
mov
push
std
int
mov
sub
push
push
jbe
ret
mov
cmp
add
push
push
scas
int
gs
cmpsb
sub
or
dec
jns
mov
test
push
int
push
lods
mov
aaa
inc
or
arpl
pop
cmp
sub
mov
jg
jge
fistpl
cli
or
jmp
insl
cmc
cli
push
jno
std
inc
push
addr16
or
xchg
or
popf
mov
jmp
inc
xor
bound
not
pop
std
fwait
out
push
jbe
popa
leave
insb
mov
shll
push
or
and
popa
add
cmc
inc
lods
jb
arpl
jmp
jnp
gs
data16
clc
data16
xchg
nop
or
aaa
pop
sbb
fdivl
add
decb
cmpw
cltd
paddd
pop
add
mov
xchg
mov
xchg
mov
sbb
test
pop
xor
in
jge
leave
pop
clc
dec
mov
mov
cmpsl
push
outsl
sbb
idivl
or
inc
cmp
xor
or
dec
or
sub
mov
push
add
leave
fnstcw
aam
adc
push
pusha
arpl
sbb
add
sub
popa
movsl
mov
sub
jno
fs
xchg
pop
in
mov
adc
in
push
push
ret
push
stc
push
and
pop
out
jae
mov
mov
mov
push
clc
arpl
fs
push
aad
and
outsb
movsl
dec
in
or
adc
adc
pop
dec
repz
pop
mov
and
rcll
in
insl
mov
inc
out
dec
jbe
and
dec
jbe
out
jbe
jecxz
pop
or
xchg
std
xchg
lcall
lock
sahf
cmp
icebp
enter
xchg
cwtl
andb
xlat
jb
shrl
je
mov
cmp
add
jl
bound
xchg
into
addr16
jmp
cli
and
shll
xchg
jnp
out
xchg
int3
adc
jo
popa
shll
xchg
clc
pop
in
dec
es
sbb
loope
xchg
addr16
out
push
jne
stos
enter
aas
scas
mov
sbb
adc
mov
cltd
push
cwtl
scas
sub
cmp
xchg
adcb
testl
push
dec
addr16
repnz
loope
fwait
pop
or
sbb
movsl
fnsave
mov
dec
mov
xchg
push
jecxz,pn
mov
cmp
and
test
pop
push
and
adc
lds
ljmp
push
sti
jno
push
ret
loope
pop
fildl
and
aad
xor
push
sbb
xlat
pop
pop
adc
dec
cli
outsl
loop
das
adc
repz
frstor
stos
push
outsl
arpl
dec
sub
xor
fldl
nop
out
sub
shlb
dec
sub
bound
mov
xorb
jns
ljmp
xor
repz
aas
xor
nop
cmp
sbb
stc
sub
mov
loopne
and
xchg
xchg
pop
xchg
mov
add
rclb
xor
fs
enter
repz
or
jp
scas
xchg
xchg
rcrl
mov
and
mov
jl
xchg
push
jb
aad
test
jp
and
xchg
mov
jmp
xchg
sti
fcomps
and
pop
out
sub
xchg
and
hlt
test
jo
pushf
mov
inc
mov
loope
lret
or
jno
cs
test
loope
imulb
jmp
arpl
adc
popa
imul
stos
jae
sub
or
jbe
jbe
sti
fdivrl
filds
scas
jmp
inc
aad
mov
test
int
xlat
jle
pop
xor
loop
aad
pop
fstpt
ja
andb
and
xchg
mov
cmpsb
bound
dec
mov
add
pop
lock
movsb
push
fsub
mov
cld
pop
sbb
cmp
call
add
in
mov
test
pusha
and
pop
js
add
xor
inc
pop
inc
idivl
and
mov
js
test
idiv
mov
cmp
mov
inc
icebp
adcb
pop
shll
addr16
xchg
fdivrs
add
fs
dec
jo
inc
lods
mov
test
mov
xchg
xor
cltd
mov
fdivrl
dec
jbe
repnz
in
gs
pop
aas
test
cmp
outsb
js
sub
loopne
mov
sbb
jo
je
jae,pn
sbb
out
or
and
cmp
jg
pop
or
jb
dec
mov
fisttps
rorb
inc
leave
and
and
xchg
fs
mov
std
inc
push
inc
add
jo
jle
jge
or
mov
push
dec
jle
adc
xlat
fcmovbe
sbbb
int
movsb
mull
lods
and
jge
outsl
add
stos
push
gs
mov
xor
add
out
dec
jge
sbb
push
fbstp
adc
jno
inc
ss
lahf
inc
adc
or
and
pop
xor
loope
jo
push
mov
ja
pop
pop
adc
roll
xlat
sahf
jne
push
lods
jge
mov
jne
mov
lock
mov
das
shll
into
push
cmp
and
loopne
in
pop
jno
or
mov
push
pop
xlat
cli
mov
dec
out
add
mov
mov
mov
pop
cmc
xor
ljmp
loopne
push
in
dec
push
add
arpl
pushf
xchg
cs
jo
and
mov
je
into
out
jmp
and
inc
add
fistps
dec
add
xchg
fisubrl
fsts
gs
inc
sbb
xchg
ficoms
lret
movsl
pop
add
xor
inc
pop
inc
adc
inc
test
or
pcmpgtb
cmp
mov
ja
stos
xlat
jo
not
lock
clc
iret
cmp
int
mov
jo
pushf
rcr
xlat
idivb
inc
nop
sbb
cltd
pop
cmp
sub
int3
in
aas
xchg
std
data16
sbb
fiadds
enter
or
dec
test
stc
pop
dec
mov
outsl
outsb
xor
lea
add
adc
imul
jb
add
mov
call
adc
dec
stos
xor
mov
inc
fbld
lock
adc
cmp
ljmp
aam
popf
insl
xor
hlt
xor
push
repnz
adc
arpl
dec
adc
daa
push
or
sbb
jnp
loope
out
sub
adcl
outsl
pop
decl
push
rcrl
pop
sbb
and
mov
pushl
test
mov
pop
xor
sub
out
sub
xchg
mov
dec
mov
gs
imul
push
mov
idivl
adc
pop
pushf
jge
xor
and
addl
or
xlat
arpl
imull
cmpsl
adc
jo
loop
jmp
xchg
dec
and
pop
cwtl
and
jbe
mov
mov
call
enter
inc
out
pop
xlat
dec
call
test
pop
aas
sbb
bnd
xor
sbb
divb
push
jg
cmc
push
hlt
push
inc
jecxz
in
mov
jp
push
in
lret
mov
or
hlt
ljmp
rdtsc
and
test
repz
inc
pusha
push
xchg
mov
andb
mov
dec
pop
cltd
les
mov
in
add
jne
in
xor
pop
jbe
mov
sub
fidivs
add
idiv
andl
sbb
sub
cmp
add
dec
or
pop
movsl
enter
and
mov
in
fs
hlt
sub
lcall
int
inc
push
sub
jl
and
jo
and
inc
repz
into
xchg
daa
mov
xchg
outsl
mov
notb
mov
xor
pop
and
stos
sbb
mov
daa
jno
out
call
cmp
mov
into
xchg
icebp
sarl
inc
sub
xchg
sbbl
lods
jo
lea
or
in
sub
fsub
xchg
mov
repnz
xchg
mov
outsl
mov
jae
push
pop
cmp
push
in
xor
in
xor
dec
aad
mov
pop
out
mov
pusha
cmp
dec
dec
imul
in
repz
fisttpl
or
loop
fsubs
pop
daa
xor
js
jecxz
dec
dec
sbb
sbb
jmp
mov
push
in
or
xchg
fidivs
out
inc
jbe
and
subb
dec
cld
cmp
xlat
jo
test
insb
pop
lret
addl
xor
dec
jl
and
rolb
xor
push
cs
fisubrl
inc
and
lods
jb
pusha
xchg
push
inc
aad
ds
in
sbb
mov
fmull
lret
sub
loop
mov
or
xor
cmp
sub
jo
test
xor
call
sub
sbb
and
or
ret
mov
push
cmp
aad
push
shrb
lea
inc
jmp
push
pop
ljmp
cmp
outsb
les
xchg
push
xchg
repnz
cmpsb
cmc
push
shll
fcomps
jno
pusha
aas
cmp
iret
sbb
pop
mov
or
jge
pop
xor
repz
int3
push
mov
nop
or
lea
stos
test
fnstenv
bound
fcomip
mov
in
inc
test
dec
orb
movsb
add
cmp
push
insl
cltd
mov
xchg
repz
jb
jecxz
mov
inc
fdivl
das
add
mov
dec
in
lods
jmp
arpl
subb
js
dec
neg
aaa
sbbw
dec
incb
fwait
push
hlt
adc
not
ret
mov
inc
fidivrl
dec
sbbb
cmp
dec
cmp
stos
arpl
mov
or
iret
negl
xchg
lret
add
outsb
notb
mov
lcall
out
repnz
push
push
mov
lcall
cmc
js
mov
pushf
retw
mov
pop
xchg
cmpsb
or
pop
lcall
popf
add
mov
out
mov
dec
popa
orb
pushf
lods
adc
aaa
sbb
outsb
adc
mov
sub
sub
loop
lcall
insb
xchg
aad
jmp
push
or
push
jecxz
loopne
and
loop
in
mov
movb
int
pop
cmpps
xor
ficoml
inc
pop
lods
out
cmpsb
xchg
call
cmp
or
adc
inc
cmp
add
aaa
xchg
out
pop
mov
jecxz
mov
in
mov
and
dec
imul
and
or
pop
dec
lods
mov
xor
xor
insl
out
ljmp
mov
cs
mov
repnz
push
sbb
xlat
inc
sub
adc
mov
inc
jb
lahf
js
cmpsb
jp
test
jle
loope
add
imul
clc
fwait
jbe
cmc
dec
insl
mov
pop
xor
orb
lds
cmp
pop
ss
clc
in
inc
mov
aad
add
lret
cmp
pusha
aaa
fs
stos
sub
inc
addr16
repz
dec
in
or
out
xor
into
lock
and
rorl
pop
fists
repnz
xor
xor
loope
insl
and
cmp
push
pushf
gs
cltd
mov
out
shlb
mov
mov
lcall
dec
and
add
mov
adc
mov
or
dec
pushf
call
xchg
sbbb
push
stos
enter
and
mov
jno
inc
cmp
and
aas
or
fstp
cli
and
mov
test
cmp
rcl
arpl
lea
out
and
inc
sti
out
adc
ds
mov
xchg
cld
lret
mov
xchg
mov
les
jns
fsubs
sbb
adc
xchg
ljmp
out
or
and
test
lret
int
jle
sbb
push
stc
and
in
inc
jae
and
inc
std
popa
rolb
gs
aam
mov
hlt
pop
out
fs
sub
mov
mov
leave
jl
pop
shlb
pop
vpsubsb
mov
jnp
inc
jp
or
mov
mov
mov
jl
nop
push
loope
push
hlt
dec
jmp
js
mov
aaa
inc
sbb
test
aaa
negb
sarw
daa
sti
add
mov
adc
out
aam
xchg
mov
lea
divb
mov
jmp
mov
push
or
fdivrl
jmp
push
push
ljmp
pop
mov
mov
and
or
mov
fcmovnb
xorb
jo
je
and
xchg
pushf
call
xor
pop
mov
mov
aam
jecxz
inc
stos
std
fs
stc
mull
add
cmp
sub
mov
shl
aaa
cmpsb
inc
pop
clc
jno
xor
xorl
xchg
cld
int3
and
in
jnp
mov
jno
mov
add
inc
test
xchg
iret
in
dec
movsb
pop
aas
dec
pop
testl
aaa
stos
mov
or
cmp
cmp
or
or
sbbb
ret
sbb
mov
mov
lret
mov
pop
pop
and
xlat
pshufw
mov
repz
dec
mov
mov
inc
cld
cmp
jmp
out
mov
and
mov
js
jl
jge
pop
shrl
ret
scas
js
pop
mov
mov
xor
xchg
scas
das
or
mov
and
scas
pop
dec
fidivl
dec
hlt
mov
adc
sahf
pop
mov
or
enter
popa
pop
lods
imull
lock
dec
ja
mov
mov
and
jecxz
pop
sbb
scas
ds
mov
dec
cld
gs
scas
inc
cmpsl
scas
incb
and
pop
imul
adc
adcl
mov
clc
lock
jbe
jmp
add
gs
and
jno
stc
adc
push
mov
mov
hlt
jle
ja
out
or
inc
mov
mov
dec
adc
lahf
cmp
sbb
push
push
xor
push
insl
mov
or
mov
lods
incl
jne
jmp
xor
gs
fidivs
xchg
cmp
jmp
ficompl
out
adc
test
outsl
inc
stos
inc
jb
in
push
dec
lcall
dec
xchg
aas
jl
xchg
loopne
cmp
pop
and
mov
or
and
call
sti
clc
xchg
inc
pusha
movsl
pop
orl
in
out
pop
mov
test
jmp
call
cmpsb
pop
xorl
cmp
dec
hlt
adc
mov
inc
lret
loope
imulb
out
xchg
hlt
hlt
rcll
sarb
rorl
int
xchg
adc
jle
mov
into
push
int3
sbb
aas
push
fisubs
mov
in
call
rcl
xchg
xchg
bound
das
cmp
cmp
andb
jmp
add
mov
sub
adc
or
movsl
jp
js
gs
lods
and
ret
lods
fbstp
mov
bound
push
divb
test
jne
lods
xchg
jb
cmpsb
sub
clc
out
push
cli
adc
sub
xlat
cmpsl
pop
enter
rol
jge
fildl
and
xchg
les
leave
add
orl
ljmp
jb
dec
dec
out
negb
inc
into
out
push
jl
xchg
cmpsl
out
in
cmpsb
sub
pop
push
xchg
push
inc
repz
cmp
out
xchg
mov
ficoms
clc
mov
loope
fbstp
and
add
aas
decb
push
dec
add
ffree
fucomi
xor
jb
mov
jmp
inc
and
xchg
test
push
and
pop
pop
sub
divb
out
popa
aam
cmp
xor
insb
jo
je
ret
loopne
inc
and
sub
sarl
jb
mov
andl
hlt
cmp
movsb
mov
cwtl
rol
int3
jecxz
lods
inc
mov
bound
mov
dec
aam
movsb
push
scas
xchg
outsb
jecxz
pop
push
mov
scas
clc
jo
inc
add
addr16
mov
outsl
aaa
jne
sar
sub
xchg
out
pusha
cmp
jg
xor
pop
push
push
add
cmp
js
insb
cmp
sahf
push
gs
nop
in
int3
arpl
inc
cmpsl
ss
sti
xor
in
jecxz
mov
push
pushl
mov
insl
sub
ret
dec
test
sbb
jl
in
mov
movsl
out
jnp
inc
popa
subl
xchg
jno
inc
sbb
push
xchg
scas
adcb
fs
sbb
hlt
ficoml
adc
pop
xor
mov
rorb
xchg
imul
xor
in
add
pop
mov
idivl
cld
ret
clc
test
inc
ljmp
jecxz
std
imul
adc
dec
sti
xchg
aad
jmp
sbb
rolb
sbb
jle
addr16
dec
call
jae
jb
xchg
mov
enter
mov
mov
fsin
push
xor
push
sub
vpslld
in
clc
xabort
or
nop
pop
daa
dec
pop
mov
pop
mov
adc
xor
das
push
out
and
add
sbb
loope
push
jns
xchg
jl
sarb
cltd
inc
jae
inc
call
push
movsl
sbb
cmpsl
sbb
jo
cmpsl
push
movsb
xchg
mov
and
fiadds
xchg
xor
mov
loope
push
jae
add
popa
insl
cmp
push
mov
das
cs
in
negb
int3
fstp
out
je
sub
outsb
sahf
pop
faddl
loop
jo
mov
arpl
cmp
rclb
inc
push
ret
or
xchg
nop
pop
sbb
xor
and
pop
pop
mov
jo
mov
outsb
add
stc
mov
test
rclb
push
sbb
jmp
icebp
nop
xchg
or
stos
pop
add
jle
movsb
jae
sbb
pop
push
adc
cmpsb
sub
in
mov
pop
popa
push
pop
bnd
jae
mov
mov
sbb
jge
and
mov
clc
mov
or
insl
leave
jbe
push
das
mov
mov
call
inc
sub
clc
xchg
shll
or
dec
test
test
jmp
sub
dec
push
and
lcall
or
mov
adc
das
mov
popa
push
jp
fistps
jecxz
pop
push
sub
repz
jge
aas
cmp
add
mov
push
popa
mov
dec
xchg
jl
inc
or
mov
stc
dec
addl
in
les
iret
nop
mov
packssdw
cmpsl
add
mov
jne
loop
das
jae
xor
cs
clc
jae
lret
shlb
or
jbe
repnz
adc
movsl
add
push
inc
mov
fsub
push
test
mov
jb
cmp
sbb
cmc
clc
jecxz
jne
fnstcw
ja
inc
push
in
or
mov
mov
js
sbb
dec
imul
cwtl
insb
or
or
cltd
pop
add
or
cmc
out
sbb
xorb
hlt
icebp
fmul
imul
cmp
sub
mov
or
loopne
sbb
ret
arpl
pushf
push
mov
and
xchg
mov
push
std
lahf
mov
and
inc
imul
iret
jmp
adc
lahf
cwtl
hlt
adc
jbe
jmp
mov
inc
xchg
push
int
pop
fidivs
mov
push
lahf
shll
cs
xor
mov
push
loopne,pn
sbb
std
mov
fisubs
pushf
clc
fistps
stos
icebp
shrb
lahf
jg
test
out
movsb
lea
push
movsb
mov
mov
sub
loop
xor
inc
mov
push
add
mov
sub
cs
jnp
mov
imul
ja
rclb
mov
cltd
cmp
mull
imul
inc
xor
cmpsb
ljmp
clc
jns
cmpsb
dec
cmp
adc
imul
pop
pop
mov
js
sub
jns
inc
push
jnp
sub
in
pusha
or
pop
or
lds
cmp
pop
inc
fwait
sbb
stos
dec
scas
bound
and
mov
and
popa
movsl
xor
outsl
ss
pop
test
xor
sbb
repz
pop
out
or
outsb
jno
subb
push
cmp
cmp
cltd
jae
fwait
sbb
test
fadd
mov
dec
ljmp
xor
mov
mov
or
shl
xor
jns
or
add
lret
daa
jae
adc
add
xchg
aaa
lods
loopne
sbb
and
movlps
pop
test
push
imul
fmuls
push
movsb
xchg
push
int3
js
test
adc
stos
dec
mull
jmp
mov
in
outsb
add
popa
adc
imulb
pop
popa
in
xor
ss
jno,pt
jmp
add
add
cmp
mov
cltd
and
push
repnz
mov
mov
cmpb
sbb
mov
jge
pop
pop
cmpsb
stos
dec
shrb
cwtl
sbb
cld
ja
cmpsb
in
dec
fs
add
dec
mov
popa
adc
lods
jnp
lock
jge
cmp
ss
cmp
std
jns
aam
lock
sbb
scas
xchg
jne
cmpsl
adc
lret
mov
jne
lods
stos
pop
shlb
aad
sub
fiaddl
add
mov
adc
in
test
rcll
cmp
js
cmp
xchg
cmp
sti
jmp
sbb
add
lcall
cmp
inc
inc
dec
mull
sti
dec
mov
clc
cmp
and
inc
push
lods
inc
mov
and
fwait
ja
adc
push
and
cmp
rclb
mov
aam
xor
adc
int
faddl
jle
push
popf
lods
xchg
divb
cld
adc
sbb
call
cmp
outsb
mov
fcmovnbe
xchg
lret
xchg
test
dec
fdivl
dec
mov
cmp
outsl
cmp
in
movhps
test
mov
or
hlt
leave
cmp
inc
dec
sar
or
out
cltd
sbbb
jb
es
sahf
clc
adc
mov
push
pop
push
pop
cltd
push
mov
push
test
je
pop
push
in
xchg
sbb
push
call
out
test
sbb
jmp
push
add
add
pusha
mov
stos
xchg
xchg
xor
aad
fisttps
popf
int3
mov
add
push
add
pop
jbe
insl
pushl
out
stos
xor
push
dec
mov
das
pop
aad
sbb
adc
or
add
std
in
sub
in
pop
sahf
adc
pop
jno
push
jge
jecxz
mov
lcall
aam
cmpsb
ds
inc
lahf
lods
aaa
loopne
stos
mov
ja
jno
aam
pop
dec
mov
mov
dec
xchg
pop
cld
stos
push
hlt
out
xchg
icebp
mov
test
jne
outsl
jle
mov
jecxz
aas
sbb
insb
inc
mov
cld
pusha
sbb
push
subl
mov
mov
out
sbb
fdivrs
fsubrs
rclb
adc
mov
push
xchg
pop
cmp
push
out
jecxz
outsl
shrb
fcoml
pop
add
mov
pop
out
xor
fistps
dec
add
outsl
aam
or
jp
fimull
leave
xor
ds
pop
xor
je
and
int3
xchg
test
aas
mov
jp
mov
je
push
xchg
adc
lret
jle
aam
adc
pop
dec
sbb
icebp
repz
out
rorb
ficoml
jmp
repnz
mov
push
es
adcl
filds
into
push
and
xlat
popf
dec
mov
mov
in
das
xchg
lahf
and
sub
adc
lret
test
jno
or
lret
fsubl
xchg
pop
sahf
cmp
mov
shlb
pop
mov
cmp
stos
or
mov
push
negl
test
inc
pop
push
xor
sbb
cmp
hlt
inc
push
add
jecxz
xor
pusha
int3
mov
ret
inc
nop
lret
xor
orb
push
loopne
mov
testl
cltd
mov
fld
test
cmpsl
stos
sub
out
sbb
adc
ror
in
sbb
cmp
leave
hlt
aaa
stos
cmp
in
pop
lea
pop
lea
nop
aas
subl
cmp
rcr
adc
dec
in
sub
inc
jbe
repz
and
lret
mov
les
cmp
jno
fldcw
dec
add
jne
xchg
pop
pop
xchg
cwtl
jns
loope
dec
int3
pop
cld
mov
add
xor
xor
shll
addr16
repz
pop
das
jbe
gs
divl
fcmovnbe
inc
stc
dec
mov
lods
jmp
daa
lods
ss
jnp
add
mov
outsl
cmp
imul
fdivs
into
mov
inc
cld
inc
mov
ret
sbbl
mov
cmp
outsl
loopne
or
popa
mov
cmp
pushf
sub
scas
inc
fs
out
mov
dec
cmpsl
mov
es
repnz
insb
cmpsl
adc
add
mov
push
mov
ret
mov
dec
lcall
jmp
xor
jbe
sub
nop
insb
cmp
mov
jo
mov
sbb
pop
shlb
dec
in
scas
push
shl
sbb
in
sbb
mov
xchg
mov
ucomiss
fs
dec
sarl
daa
mov
nop
mov
mov
incl
adc
xor
fidivl
mov
pop
or
dec
out
jge
jmp
ret
fs
leave
faddp
repnz
push
cmp
fwait
xchg
insl
lret
orl
mov
jle
sahf
dec
adc
inc
test
and
loopne
les
clc
fists
pusha
mov
pop
xchg
hlt
adc
cmp
xor
dec
mov
xchg
sub
std
lea
xchg
mov
movsb
jle
and
sbb
dec
daa
inc
and
and
call
pop
add
out
out
fs
cli
lock
adc
jns
dec
std
orb
es
mov
stc
mov
cli
out
stc
in
fnstenv
inc
mov
ds
push
pop
into
mov
ret
jge
sbb
imul
cmpsl
pop
in
idivl
jb
mov
pop
add
out
mov
testl
mov
jns
iret
xor
rcrb
push
dec
pop
fnsave
roll
aaa
mov
xchg
bound
xchg
mov
and
fmuls
and
mov
jge
push
cmp
imul
je
pop
sbb
aad
push
sahf
leave
or
divb
test
es
pop
jmp
mov
inc
sub
mov
pop
insb
cmp
or
xchg
xchg
shl
xor
sbb
mov
dec
xchg
adc
addr16
xchg
fsts
sti
fsubr
xchg
in
mov
jp
push
adc
mov
add
jno
clc
ljmp
cmp
adc
popa
jne
cmp
es
aas
std
nop
lods
jns
xor
xor
sbb
stc
inc
mov
scas
or
pop
cmpsb
add
mov
xchg
outsb
push
cmpsl
je
or
lds
adcl
bswap
push
lods
pop
sbb
je
add
jnp
sbb
jbe
subl
lret
xchg
int3
or
cmp
pop
push
out
adc
cmpsb
ss
xchg
ret
xlat
es
add
sbb
fcmovbe
shrb
cmp
negb
clc
sub
xchg
xchg
dec
shlb
cmc
sbb
imul
push
jg
mov
aam
popw
xchg
and
out
lahf
adc
mov
dec
sub
mov
sti
imul
sbb
insb
test
or
add
adc
arpl
clc
fisttps
mov
fdivl
enter
pop
mov
enter
xchg
adc
imul
insb
call
movsl
insb
into
jp
loopne
add
jg
cmp
xchg
in
mov
ror
leave
or
xchg
inc
dec
mov
in
adc
xchg
fstps
das
fldenv
inc
iret
rcll
sbb
jmp
ficoms
call
data16
sti
mov
push
imul
cmpb
jg
frstor
rcrl
dec
int
sahf
pop
cmp
xor
or
int
sub
les
adc
mov
jl
mov
cmpsb
hlt
loopne
cltd
outsl
jns
cli
loopne
inc
or
lds
fdivp
mov
aaa
mov
pop
and
push
sub
rclb
mov
inc
pop
add
sub
pop
loop
and
xor
dec
sarb
iret
xchg
into
add
insb
test
cmp
sahf
dec
push
pop
int
roll
xor
jnp
xchg
in
adc
pop
xor
jecxz
push
add
aas
jnp
aad
xchg
faddl
dec
jb
mov
jp
fisubs
push
iret
fbstp
pop
xlat
rcll
add
test
js
add
xchg
cmpsb
push
fdivr
push
stos
push
insb
fwait
inc
lods
mov
xchg
adc
int3
cmpsl
xchg
sbb
add
add
notl
out
int3
push
std
cmc
callw
mov
sub
cltd
je
mov
dec
in
stos
cmc
sahf
pop
or
xor
inc
xchg
packssdw
loop
aas
adc
jb
cmp
xchg
out
ds
push
mov
jecxz
mov
in
ja
mov
sbb
movsl
fstpt
mov
enter
adc
xor
add
loopne
adc
in
lret
in
mov
fadds
pop
fs
mov
inc
out
xchg
mov
sbb
xor
push
xchg
jl
jmp
insl
sub
testb
out
aad
mov
test
push
loope
add
mov
insl
insl
addr16
imul
cmpb
add
fiaddl
les
inc
cmp
push
push
stos
cmp
lds
lahf
sbb
sub
add
cmp
inc
roll
cmpsl
shrl
mov
dec
in
mov
push
daa
mov
mov
and
mov
sbb
fstpt
in
mov
xchg
repz
push
pop
mov
outsl
mov
adc
outsb
mov
test
out
into
or
popa
push
js
jns
xchg
outsb
sub
cmp
cld
daa
jns
mov
jmp
in
test
daa
fiaddl
add
repnz
push
sbb
sbb
mov
les
fs
out
sbbb
outsb
xchg
jmp
insb
sbb
pop
add
cmpsb
cmp
xor
inc
or
lods
insl
pop
aam
mov
push
and
fistpll
stos
add
jmp
add
pushf
outsb
nop
jbe
jne
push
test
or
push
xchg
cltd
xor
out
xchg
mov
pop
movsl
mov
xchg
add
or
inc
testl
ds
lds
pop
dec
sti
xchg
scas
mov
mov
xchg
push
imulb
inc
bswap
rorb
cmpsl
push
fwait
pusha
hlt
daa
repz
xor
data16
mov
into
aad
negb
fstpl
xchg
mov
xor
jnp
adc
xchg
ds
dec
sbb
ja
and
movsl
in
out
insb
sti
fdivs
add
fwait
mov
cli
xchg
pop
sub
push
cmp
mov
cmp
int3
loope
out
push
add
push
pop
js
xchg
test
insb
out
cltd
jae
mov
cmpsb
mov
in
or
nop
and
lods
test
das
bound
das
add
fnsave
dec
sbb
mov
inc
inc
ljmp
push
imul
sahf
push
hlt
sbb
dec
or
jns
nop
sbb
stos
sbb
int3
mov
lcall
mov
out
and
push
hlt
movsb
dec
shrb
sahf
bound
ss
sbb
out
push
mov
and
pop
es
inc
pop
add
mov
call
loope
mov
adc
or
adc
xor
insb
loop
or
cmp
push
mov
or
sub
in
push
xorl
test
jo
mov
cs
ret
movsb
jne
xchg
add
into
jns
scas
stos
cmp
psubusw
jns
outsl
aam
out
pop
cmp
ret
mov
outsl
dec
call
dec
jmp
pop
mov
dec
das
shl
rolb
mov
jmp
push
in
movsb
sbb
jnp
xchg
orb
cmp
mov
inc
aaa
divb
sbb
addr16
mov
data16
adc
pop
lcall
jmp
jg
rcrl
or
inc
sahf
ja
iret
sbb
test
jae
adc
and
sbb
jo
sub
shrb
inc
pop
addb
mov
cmpsl
and
js
inc
jnp
pop
pop
aam
jne
icebp
test
fmul
and
scas
shrb
or
inc
xchg
loope
and
iret
out
dec
xchg
aad
jecxz
ss
cmp
add
pop
leave
sbb
lahf
dec
pusha
jle
dec
repz
inc
addl
outsl
scas
mov
idiv
dec
ss
ret
stos
push
loopne
cld
jl
in
bound
xchg
aam
sbb
mov
scas
repz
test
inc
adc
rorl
xchg
mov
push
add
jle
aad
in
psubq
lods
mov
int
add
lret
jecxz
inc
or
mov
insl
repnz
xor
mov
and
enter
test
gs
addw
xchg
cmpsl
jne
push
lods
mov
shll
leave
fwait
cli
mov
cmp
and
inc
add
or
mov
cmpb
add
fdivr
or
rcrl
imul
imul
adc
or
mov
orl
scas
std
sbb
pop
add
adc
sti
das
sub
cmp
out
jbe
out
push
sub
adc
inc
inc
rcrb
jmp
or
mov
cmp
adc
fs
aas
repnz
or
sbb
inc
movsb
mov
in
dec
stos
loop
sbb
sub
aad
js
mov
rorl
imul
xor
sub
cmp
inc
mov
icebp
leave
sti
jbe
adc
js
jne
xchg
ds
mov
or
sub
loop
and
in
daa
jmp
popa
jo
lods
aam
mov
jp
mov
ja
pusha
inc
push
arpl
mov
out
inc
sub
fwait
jno
jns
jnp
dec
lds
stc
cmp
scas
mov
jp
mov
sarl
pop
outsl
insl
arpl
shl
push
cmp
lods
imul
ret
pop
push
and
jmp
push
cltd
pop
adc
int3
ja
loop
outsb
iret
adc
nop
xchg
add
cmpsl
and
scas
les
jmp
pop
lea
addr16
or
cwtl
stc
jbe
ja
lods
aad
xchg
xchg
jp
in
dec
mov
cltd
ret
imul
es
jns
or
out
in
push
lea
push
dec
dec
xchg
lcall
and
jb
sbb
mov
sub
jl
mov
icebp
aaa
mov
addr16
movsl
rolb
ljmp
cmp
dec
jne
ficomps
shl
jmp
lahf
dec
dec
mov
pop
lret
insb
add
fnstsw
in
pop
fwait
cld
xor
stos
leave
cmc
cwtl
pop
cmp
dec
enter
ffree
js
add
sbb
pop
and
mov
pop
jbe
jecxz
clc
lds
bound
push
div
mov
outsl
call
mov
pop
int3
flds
out
pop
out
sub
add
mov
push
jne
loop
mov
movsb
outsl
push
inc
insl
pop
mov
loope
outsl
push
arpl
aam
cmp
aam
int
es
hlt
fsubp
sub
imul
mov
jno
dec
xor
dec
mov
mov
or
sbb
stos
in
cmpsb
mov
push
repnz
fdivrl
clc
roll
ljmp
pop
jae
mov
cld
popa
pop
arpl
in
cld
sbb
mov
addr16
inc
repz
stos
test
push
pop
push
std
aaa
jns
imul
mov
adc
lods
int3
stos
push
fs
aam
lock
push
movsl
and
lret
lret
push
outsl
sbb
adc
ficomps
xor
fnstenv
sub
pop
xlat
fsubl
add
xlat
sbb
loope
roll
push
sahf
icebp
pusha
popf
test
sbb
adc
popf
cmpsl
cmp
ds
lock
gs
jp
or
mov
ss
cli
jmp
addr16
push
loope
stos
fcom
xor
xchg
adc
fistpll
out
jno
out
jns
pop
dec
es
lret
cld
shrl
cmp
or
dec
stos
jecxz
mov
cmp
into
adc
stos
out
jno,pt
test
movsb
xor
fwait
ds
xor
push
or
cmc
and
pop
jmp
pop
jmp
add
pop
lds
mov
leave
push
add
sbb
sbb
pop
adc
dec
sahf
movsb
mov
mov
pop
jmp
arpl
adc
xor
inc
sbb
pop
rorb
xchg
icebp
mov
mov
repz
push
jge
in
inc
jp
cs
dec
std
mov
cwtl
dec
push
mov
jne
outsb
sbbl
xorb
sub
fistpl
icebp
xor
push
int
out
add
sub
mov
xlat
xor
fcoms
mov
mov
xchg
dec
sub
pusha
into
or
fs
rcll
mov
aam
outsb
sti
jge
shlb
out
or
lret
mov
inc
push
rcl
fisttpl
mov
fwait
adc
clc
shlb
rol
jno
test
in
movsl
aad
push
xor
lock
mov
lods
sbb
xor
add
lcall
adc
adc
insl
pop
mov
add
cmp
adc
xchg
jge
jmp
adc
xchg
push
cld
and
popf
orb
push
loop
and
rolb
loopne
test
push
daa
xchg
jno
imul
push
mov
adc
jle
xor
sar
add
jl
js
stos
adc
ret
mov
cwtl
imul
lods
inc
inc
jp
push
aad
jo
xchg
jle
dec
and
adc
test
clc
cmp
push
int
rcll
aas
aas
xchg
in
sbb
fistpll
lock
dec
pop
insl
add
add
std
cltd
xchg
push
sbb
sbb
or
push
xchg
cmp
cmpsb
sub
scas
and
and
push
enter
xor
xchg
xor
and
pusha
out
jp
cmp
add
out
adc
shr
mov
pusha
das
popf
push
adc
mov
xchg
movb
sbb
cmp
in
cmp
adc
loopne
mov
xchg
pushf
int
sbb
add
out
out
cmpsb
cmp
std
mov
xchg
mov
fsubs
cmpsl
add
mov
dec
pop
aad
outsb
mov
push
push
mov
es
xchg
mov
and
repz
xchg
rcrl
lods
rcrb
jge
pop
xor
in
push
dec
inc
aad
inc
popf
pop
mov
fsubl
dec
inc
pop
xchg
push
sti
dec
insl
jae
adc
mov
pminub
and
lea
push
pushf
xchg
aas
xchg
out
in
sub
adc
pushf
arpl
mov
sbb
pusha
aam
cmp
imul
mov
and
or
call
fs
pushf
or
adc
and
bound
cmp
out
data16
push
leave
jae
fdivs
xorb
jge
xchg
inc
cmp
jecxz
enter
test
scas
std
lock
std
stc
addr16
cltd
jl
mov
imul
push
inc
movsb
inc
or
loop
orl
jnp
ljmp
pushf
pop
ret
cltd
lock
inc
and
jmp
push
fst
sbb
in
icebp
aam
lret
aas
loope
xor
rcr
ret
cmpsb
ds
stos
nop
mov
cs
push
ja
jmp
add
pop
and
mov
test
mov
bts
mulb
xor
jl
jbe
xchg
loope
negb
and
and
mov
sbb
sub
xchg
adc
js
pop
shll
xlat
dec
xchg
push
iret
jmp
pop
jp
and
pop
cmpsl
push
hlt
adc
into
xchg
rcll
or
mov
adc
enter
test
fsts
xor
ret
pusha
push
loopne
in
ja
push
stos
mov
dec
or
cld
cmp
icebp
mov
das
scas
ret
inc
add
add
sub
or
pop
out
fs
pop
pop
rclb
fstl
test
ficoms
xchg
jno
cmp
jp
subb
push
in
dec
or
pop
jns
or
jbe
jle
push
ret
jae
cmp
in
mov
enter
add
adc
mov
movsl
cld
ret
adc
lea
pop
fcomi
push
cmp
xchg
push
std
loope
inc
out
in
aas
es
ficomps
cmp
cmp
xchg
cltd
jp
inc
repnz
ljmp
adc
call
fabs
pop
adc
fwait
and
inc
sub
dec
inc
cmp
jne
xor
ds
out
insl
out
mov
subb
fists
adc
hlt
dec
adc
ljmp
sbb
jp
mov
cmc
mov
nop
inc
pop
cmp
mov
pop
fucom
add
scas
or
mov
in
dec
push
mov
sub
lret
and
sbb
sub
adc
cwtl
pop
lock
cmpsb
cmc
xchg
jp
lock
dec
or
je
jne
ret
xlat
pop
add
test
test
imul
dec
push
jg
push
pop
mov
test
and
dec
push
dec
jmp
sbbl
sahf
insl
out
repz
xchg
cmpxchg
push
ds
aad
or
mov
mov
movsl
popa
xor
out
pop
jmp
xor
incl
imull
test
sub
xchg
cmpsl
inc
int3
stos
mov
cmpb
push
fwait
cmp
addr16
xor
andl
outsb
mov
fmulp
jo
mov
popa
sbb
and
cs
or
jmp
and
cmc
mov
pop
aaa
or
shlb
loop
mov
inc
test
mov
or
mull
testb
fcompl
cmp
daa
es
cmp
aam
add
lret
push
lcall
lds
xchg
mov
pop
add
cmp
movsb
cltd
push
mov
jle
lret
hlt
dec
jge
dec
movl
and
aam
and
and
push
inc
jp
in
ljmp
fimuls
imull
mov
popa
mov
push
repz
mov
fwait
push
je
sub
lcall
xchg
cmpsb
imul
xchg
mov
outsl
gs
and
hlt
loopne
stos
sub
mov
sub
in
cmc
pop
fbld
dec
xchg
rolb
lds
iret
and
jae
mov
mov
aas
jmp
and
inc
addb
lcall
pusha
jns
or
popf
das
adc
popa
lret
stos
jl
mov
insl
imul
xchg
and
mov
and
mov
or
jecxz
and
cmp
mov
xchg
test
sbb
inc
sub
dec
jmp
xor
mov
loope
dec
adc
add
cwtl
addr16
nop
les
cld
das
xchg
or
dec
cld
out
xchg
xchg
mov
enter
aad
xchg
adc
mov
orb
ljmp
mov
outsb
test
dec
mov
and
and
push
inc
fstpl
lcall
pop
inc
fcmovnbe
iret
jbe
dec
pop
sbb
out
mov
add
cmpsb
xchg
stc
mov
insl
push
aas
loop
xor
mov
xchg
push
pop
xor
fadds
pop
lret
ret
lds
mov
sbb
in
hlt
test
adcb
jb
pop
dec
fmulp
xor
iret
roll
hlt
jo
xchg
loope
add
test
and
mov
push
mov
mov
jecxz
inc
in
sub
out
cmp
push
loope
cmp
jne
cmp
ljmp
or
das
mov
aad
imul
dec
sarb
cmp
popf
sbb
adc
inc
int
or
loop
push
jbe
fwait
mov
mov
call
mov
lcall
test
xor
mov
mov
inc
aam
lret
jg
pop
stc
cs
mov
jae
jge
ss
mov
jno
xlat
orl
mov
push
add
daa
sbb
sahf
shll
xor
sub
cmp
xor
out
inc
jle
cmpsb
or
mov
pop
fprem1
mov
lcall
notb
adc
jecxz,pn
push
mov
pop
jo
pop
es
xchg
mov
lret
xchg
mov
jle
pop
mov
mov
into
in
push
in
insl
jbe
push
mov
xchg
dec
sbb
mov
and
cmp
cli
mov
jmp
shll
push
xor
inc
lods
bound
into
cmp
jmp
push
xorl
in
jnp
stos
test
in
pushl
xchg
insb
rolb
gs
xor
mov
lds
fsubp
add
out
adcl
lret
rcll
xchg
jns
cmc
cmp
mov
cmp
sub
in
sbb
push
dec
jle
les
and
out
xchg
in
test
popa
adc
cmp
js
dec
test
jb
sarb
lcall
js
repnz
and
pop
inc
cmp
adc
cli
mov
es
mov
sti
jnp
stos
es
mov
push
movb
add
push
insb
or
xchg
mov
inc
jecxz
es
test
mov
jo
inc
or
adc
loope
xchg
mov
pop
icebp
mov
fidivrl
and
add
push
ds
mov
ret
sbb
addr16
adc
sbbl
or
push
xchg
lods
and
push
hlt
cmc
ficomps
lods
dec
inc
mov
mov
cltd
loop
mov
jg
cli
aam
dec
mov
inc
dec
mov
popw
adc
cwtl
ret
in
push
orl
icebp
daa
cmp
out
ja
sbb
rolb
sub
fwait
shrl
sub
loope
mov
les
jbe
stos
jg
mov
loop
sub
sub
xor
push
pop
xor
pop
in
neg
outsb
fwait
mov
in
push
hlt
sbbl
movsb
push
jmp
xchg
and
notl
fs
inc
lahf
mov
enter
repz
sub
lods
js
test
cmp
loopne
jl
data16
out
loop
jge
or
lods
sti
or
inc
push
repnz
or
mov
in
int3
pop
imul
pop
xlat
movsl
push
jecxz
and
dec
jns
push
fimuls
call
mov
lcall
push
int3
dec
sub
jecxz
pop
mov
fsubs
lret
add
push
loopne
mov
push
dec
mov
sbb
int
rcrb
test
call
add
aad
push
and
fisttpll
jge
adc
pop
outsl
das
xchg
pop
ljmp
out
jp
ljmp
outsb
cmc
imull
or
jno
add
xchg
or
mov
inc
pop
aas
nop
sbb
sbb
inc
xor
leave
inc
push
add
repz
mov
mov
jmp
std
xor
push
in
inc
pop
insl
das
cvtpi2ps
in
cmc
cwtl
push
cwtl
movl
cwtl
movsl
mov
dec
push
lret
rcrl
sahf
scas
movsl
out
adc
adc
push
mov
fimull
cmp
cmp
addr16
outsb
ss
pop
ja
stos
dec
dec
sbb
pop
push
sti
push
cmp
subb
or
mov
jl
xor
out
jmp
jmp
cmp
loope,pn
lahf
xor
and
pusha
scas
imull
stos
mov
add
inc
dec
or
fmuls
cmp
mov
idivl
mov
ss
loopne
imul
or
mov
cmpsb
xchg
scas
int3
adc
mov
fstpl
jmp
test
jle
rclb
jp
cmp
cld
addr16
and
mov
xlat
shrl
rcr
sbb
roll
jne
mov
adc
flds
aad
sbb
les
sarb
mov
jb
xchg
scas
les
and
push
call
mov
add
int3
jg
pop
das
cmp
add
sti
xchg
adc
test
and
jno
gs
fmul
mov
dec
pop
ds
mov
lods
ret
add
cmp
sub
sub
repz
inc
in
add
push
pop
popa
push
xchg
jge
je
sbb
mov
insb
andl
enter
xor
mov
pop
cmp
dec
pop
push
mov
negl
add
pop
test
lea
sbb
ds
aad
fiaddl
jnp,pn
adc
adc
imul
ljmp
or
mov
jbe
insb
lods
ds
sub
in
dec
fcoms
ds
dec
pop
xchg
push
fcomps
xlat
fs
dec
mov
mov
test
sbb
cmp
fmull
repz
and
dec
sti
out
pop
sbbb
dec
push
fwait
pop
hlt
dec
iret
cmc
fcom
daa
cmpb
cmc
inc
dec
hlt
mov
rorb
cmp
cmpsb
xchg
pop
lock
nop
push
out
loopne
data16
and
je
ret
ficomps
xlat
mov
pop
and
jns
loop
faddl
leave
push
dec
pop
adc
mov
imul
stos
rcrb
int3
jl
or
fisubrl
pop
mov
pop
hlt
js
inc
call
mov
push
or
lret
dec
mov
xchg
xor
das
push
fdivrs
xor
adc
fabs
cli
jle
cwtl
inc
shrl
loopne
sbb
mov
popf
adc
call
mov
xchg
clc
ljmp
insl
insl
iret
dec
sbb
push
and
dec
ret
sub
and
pop
cli
rolb
sbb
xor
cltd
dec
sub
inc
sbb
es
mov
push
nop
and
test
gs
xlat
imul
mov
aad
inc
ds
mov
scas
dec
mov
jmp
andl
ret
xor
rorl
xchg
insb
daa
vcvttps2dq
adcb
sahf
mov
xor
ss
cmp
ljmp
mov
inc
or
xchg
pushf
xchg
mov
shlb
mov
outsb
jle
adc
xor
dec
push
xor
orb
lods
fidivrl
inc
fwait
imul
sbb
jae
or
cmp
loopne
and
outsl
mov
adc
rol
mov
sahf
push
fisubrl
pop
mov
pop
sub
inc
push
xchg
mov
andl
lret
pop
mov
lcall
xchg
mov
int
in
sbb
dec
mov
arpl
lods
or
add
call
gs
mov
xchg
jmp
imul
test
and
mov
mov
or
dec
push
sbb
loopne
aaa
sub
xchg
jne
popa
ljmp
cmpsl
aas
andl
stc
xor
and
jl
jge
cwtl
mov
xchg
sub
in
pop
mov
or
adc
pop
jle
sahf
mov
ds
pusha
test
cltd
aad
cmp
inc
jne
repnz
sarl
popf
inc
sti
rolb
pushf
push
cld
jae
ja
pop
loope
or
aam
adc
rcl
adc
dec
sar
xchg
mov
push
or
subb
mov
cld
push
push
hlt
inc
xor
xlat
into
in
mov
icebp
leave
ds
in
imul
rcrl
xchg
pop
and
mov
movsl
jnp
push
movl
std
and
fisubs
pop
addr16
xchg
mov
mov
and
xor
add
clc
rclb
add
xchg
push
int3
mov
popf
jne
adc
notb
leave
pop
mov
dec
clc
cmp
mov
xchg
xor
sub
add
shll
shrb
es
sbb
cmp
pop
xor
and
das
stos
popf
sbb
jecxz
cltd
jle
inc
lret
nop
pop
adc
in
pop
mov
xchg
mov
shr
jp
sub
sbb
sbb
jp
lods
mov
lahf
xor
flds
adc
out
js
dec
pop
popa
pop
adc
mov
add
leave
cwtl
xor
lahf
mov
sbb
sbb
add
mov
stc
sahf
int3
mov
sub
pop
and
mov
cli
mov
mov
mov
dec
cmp
mov
shll
mov
subl
pop
stc
aam
test
rorl
in
jno
lcall
cmc
sub
ja
adc
push
jns
addl
call
ret
and
push
ja
xor
cmpsl
rcl
add
xor
sahf
add
cmp
add
jnp
inc
adc
dec
push
sahf
xchg
cmp
fists
popf
gs
mov
fisttpll
xlat
gs
adc
mov
test
cmp
idivl
iret
aam
adc
fsub
js
bound
outsb
pop
adc
in
lret
movsb
and
jno
xor
pop
or
fsubrs
popf
sahf
mov
push
imul
aas
mov
mov
pop
loopne
sbb
cmp
push
push
outsl
dec
jl
ja
pop
mov
push
repz
adc
jo
dec
mov
daa
shll
sarb
or
adc
cmp
daa
push
lret
pop
xchg
add
dec
mov
in
movsb
shrl
dec
ret
pop
sbb
push
mov
ret
push
enter
add
push
xchg
jns
sbb
sub
jecxz
sbb
inc
imul
inc
out
es
adc
iret
notl
xchg
sub
mov
sbb
test
and
aas
bound
push
aam
ficoms
mov
cltd
mov
jmp
jp
push
out
mov
aad
cmp
decl
xor
arpl
cld
xlat
stos
dec
or
xchg
inc
fisubrs
xor
and
xchg
push
jge
sub
xor
xchg
sbb
lock
pop
adc
push
stos
cmp
mov
test
fidivrl
jmp
clc
fldcw
or
inc
rcll
sub
adc
lcall
adc
cmp
xchg
mov
jbe
pop
cmpsl
mov
aaa
aas
jl
push
in
sub
mov
or
cmp
out
push
pop
sbb
pop
std
fwait
iret
jno
inc
adc
or
loopne
sub
dec
add
adc
pop
jmp
push
repnz
andl
inc
add
pop
jnp
aad
pop
or
fcoms
adc
mov
lods
test
leave
pop
lret
bound
sbb
clc
or
imul
add
cmp
push
inc
rolb
push
xor
jecxz
add
or
mov
lods
fadds
and
add
insl
call
into
mov
and
jo
out
adc
cmp
call
mov
add
ret
orb
leave
pop
int
xchg
pusha
rcrb
and
xor
cmp
sbb
push
aam
push
inc
adc
adc
shlb
xchg
scas
adc
pop
jg
loope
test
jg
pop
data16
jbe
lods
movl
push
daa
dec
inc
and
pop
adc
rclb
adc
fdivs
enter
addr16
push
mov
push
mov
add
push
add
xlat
jle
ja
add
pop
loop
stos
scas
inc
and
es
aaa
mov
dec
push
mov
ja
sbb
or
popf
mov
decl
rcll
les
pop
inc
inc
pop
xchg
jae
fidivl
mov
or
repz
loop
push
mov
ja
out
jb
repz
sarb
or
scas
cmp
stos
mov
fstl
push
dec
repnz
cmpsl
xlat
cmp
dec
cmc
lds
test
shll
xchg
sub
sti
push
mov
dec
dec
or
std
xor
xchg
out
xchg
aam
push
ljmp
push
xchg
sbb
ljmp
in
xchg
and
mov
dec
pop
fmull
in
flds
push
fcoms
adc
add
and
sub
cmp
jle
jne
mov
lcall
pushf
rclb
cld
push
lock
mov
cmp
push
pop
dec
cs
sti
inc
xchg
jl
push
mov
xlat
mov
addb
jns
lods
xchg
fbstp
ja
sub
mov
push
xchg
lcall
xchg
lahf
imul
mov
je
test
add
jno
add
dec
push
xorps
inc
sub
leave
jmp
fwait
xlat
cmpsb
mov
mov
or
sbb
rclb
mov
lret
push
dec
pop
testb
or
movsb
push
inc
decl
or
cmp
ror
mov
or
push
subl
inc
sbb
movsb
aas
lahf
lods
xor
jns
ds
inc
adc
mov
and
dec
stos
scas
push
je
jg
mov
jmp
mov
pop
mov
xor
out
stos
xchg
jo
mov
das
icebp
pop
clc
icebp
xchg
xlat
xchg
xlat
loop
lds
mov
jae
testl
sbb
push
les
adc
mov
ljmp
les
fs
int
sub
loop
adc
push
iret
lds
mov
cmp
cmp
mov
push
std
jmp
xchg
mov
call
mov
lcall
popf
rorb
pop
cmp
pop
mov
fiaddl
cwtl
fstpl
xor
mov
pop
xchg
mov
aas
into
dec
nop
sbbl
in
cmc
sbb
jnp
sbb
sbb
bnd
out
mov
ljmp
push
stos
iret
shll
mov
in
repnz
mov
rcrl
loop
mov
fcom
xlat
xor
popa
add
sub
movsl
mov
jae
push
aad
ja
push
mov
lahf
jnp
dec
or
mov
test
xchg
in
in
or
inc
push
shlb
push
sbb
nop
xchg
push
into
cmp
test
pop
ja
mov
xchg
gs
add
popf
xchg
xor
adc
xchg
sarl
and
inc
setno
pop
sub
or
stc
mov
sub
or
mov
out
mov
paddusb
sbb
stc
jle
xchg
sbb
in
adc
imul
mov
int
xor
arpl
iret
pushf
enter
mov
jae
inc
ret
adc
out
aad
js
loope
cli
sbb
dec
ffreep
hlt
add
clc
sbb
sbb
sarl
jmp
aad
aad
sahf
and
and
sbb
dec
inc
pop
stos
inc
mov
pop
cld
inc
push
sub
mov
mov
sbb
sub
fnclex
xor
mov
test
scas
adc
dec
inc
fwait
jge
arpl
clc
or
push
push
dec
sbb
fsubrl
icebp
jge
aaa
or
jmp
and
jne
sub
hlt
mov
add
push
stos
jg
popf
sar
jae
pop
xor
mov
lahf
pushf
cmp
ljmp
pop
cmpsl
sbb
fs
and
shlb
dec
mov
dec
repnz
adc
lret
fnsave
or
jmp
call
or
or
hlt
push
and
fcomps
cmc
push
push
jb
insl
xor
push
sar
mov
inc
xor
insb
sarb
cmp
inc
pop
and
stos
insb
fldcw
mov
sbb
inc
cmp
cli
stos
add
mov
add
jae
jmp
jno
inc
or
out
mov
ja
pop
mov
fwait
je
in
loope
lret
dec
insl
pop
sub
movsb
loop
stos
jmp
lahf
mov
pop
push
cmp
sbb
and
dec
xchg
adc
jne
cmp
sbb
lea
daa
or
or
add
sbb
mov
jnp
pop
cmp
bound
mov
or
mov
adc
xchg
mov
std
mov
cmp
fmuls
mov
lahf
icebp
xlat
add
cmpsb
mov
dec
cmp
insl
mov
dec
xor
js
mov
cltd
push
hlt
adc
rorb
loop
pop
call
push
jecxz
adc
fs
mov
mov
push
add
movsb
mov
jne
test
push
lea
ds
das
sbb
aam
mov
jb
sub
ja
mov
xchg
jecxz
inc
roll
sbb
jnp
xchg
mov
pop
jecxz
push
imull
cmp
loop
jne
add
sbb
xchg
or
jnp
enter
cmpsb
arpl
cmp
pop
aaa
inc
adc
or
dec
mov
popa
add
out
pop
int3
mov
lods
sahf
stos
addr16
js
loop
fdivrs
lock
cmpsb
inc
cmpsb
rol
sub
and
cmp
ficompl
xor
mov
lods
movsl
hlt
jle
cltd
shll
jb
cs
xchg
out
arpl
aam
leave
leave
dec
test
addr16
fs
add
dec
jmp
dec
loopne
leave
into
pop
mov
xor
movsb
push
pop
xchg
shlb
addb
xchg
popf
mulb
lea
fwait
mov
mov
cs
and
mov
mov
and
mov
decb
sub
xchg
shll
adc
stos
imul
lods
icebp
aas
idivb
lock
popf
push
into
jp
js
inc
mov
or
daa
push
dec
push
dec
cmp
pop
mov
fcomip
in
ss
pusha
cwtl
ds
and
mov
inc
pop
sbb
add
pushf
push
jb
lods
and
inc
iret
lock
addr16
adc
repnz
hlt
xchg
jae
aaa
push
loope
xor
iret
and
jae
enter
aad
icebp
cli
or
testl
adc
sbb
adc
cs
cs
addr16
cmpsl
cmc
mov
notb
push
imul
xor
rcrb
outsb
fdivs
incl
jp
repz
test
xchg
sub
ss
outsb
mov
mov
js
call
js
movsl
movsb
fwait
sub
xchg
shll
jnp
add
jle
sbb
mov
mov
sub
dec
and
mov
lea
push
test
movsb
mov
nop
adc
adc
test
xor
movsl
push
cld
sbb
add
movsl
sub
mov
cmpsl
mov
xchg
push
scas
movl
pop
enter
movsl
rolb
push
push
push
mov
push
daa
js
xor
inc
adc
sub
push
lahf
adc
insl
addb
xlat
adc
lcall
dec
addr16
mov
jmp
mov
cmp
adcb
push
mov
adc
cmp
xchg
je
repz
aas
jle
and
jbe
inc
cld
popa
adc
xor
jbe
mov
popf
imul
jo
cmc
add
les
sub
shrb
or
int
mov
sub
andb
js
fs
loopne
adc
xor
mov
int3
mov
mov
cmpsb
ljmp
mov
leave
js
test
xor
sub
in
xor
call
cmp
adcl
imul
inc
pop
xchg
fwait
pop
cmp
push
cs
mov
addl
adc
ret
das
push
inc
jle
mov
fmull
fadd
xchg
ja
pop
jno,pt
add
in
fcoms
mov
movsl
imul
jnp
mov
adc
cmp
test
push
push
in
outsb
mov
shr
mov
push
jo
inc
cmc
pop
adc
or
cmp
dec
inc
push
push
or
mov
subl
in
movsl
xor
std
pop
xor
xchg
stc
mov
in
sbb
mov
add
enter
inc
xor
xchg
cmpsl
mov
jmp
xor
adc
dec
pop
es
mov
gs
sub
mov
xchg
insb
cmp
jge
stos
adc
mov
inc
mov
jecxz
mov
jecxz
add
loop
cwtl
xchg
cmpsb
fwait
in
lret
jp
pop
ljmp
push
mov
xchg
inc
sub
movsb
leave
push
ret
js
lahf
dec
ror
outsl
jp
loopne
adc
and
inc
jnp
sti
push
rolb
insl
inc
nop
lods
lods
add
notb
pop
shlb
mov
mov
mov
leave
scas
and
mov
mov
mov
ret
xchg
inc
jmp
aad
and
into
xchg
addl
adc
inc
xor
insb
daa
or
mov
sti
inc
xchg
jecxz
dec
add
xchg
adc
mov
sbb
jge
jns
jle
dec
dec
push
pushf
jge
rcrb
fstl
je
rol
scas
inc
dec
into
movsl
int
xchg
dec
pusha
pop
test
test
pop
int3
xor
mov
aaa
rcll
or
ja
lods
mulb
aam
scas
cmp
or
and
shrl
xor
or
les
mov
cli
pop
std
shrl
ret
pop
jmp
shl
adc
in
js
stos
ret
sbb
xor
sahf
and
push
std
mov
cmp
sub
mov
lds
lret
sbb
xor
mov
lret
cmpb
mov
add
fnstsw
imul
mov
cmpsb
sbb
push
ret
repnz
pop
shrl
cs
mov
loope
cmpsb
and
pop
data16
mov
mov
bound
hlt
pushf
jne
dec
mov
inc
add
sbb
dec
fs
ljmp
lds
inc
sub
dec
push
or
sub
lock
mov
sbb
scas
pop
add
mov
out
call
lock
sub
repnz
inc
fistl
pop
in
outsl
inc
sub
mov
xchg
sub
call
xlat
scas
icebp
inc
mov
addl
lds
add
lret
xchg
pusha
dec
cmpsb
push
push
fcmove
mov
push
movsl
sub
dec
mov
add
stc
leave
stc
mov
cmc
inc
rclb
add
loopne
cltd
push
in
js
jl
mov
jecxz
dec
fimull
sbb
or
mov
adc
cmp
xchg
dec
push
dec
inc
dec
sub
mov
inc
je
cmpsl
clc
fsubl
aad
in
out
repnz
inc
add
jne
add
adc
push
rcll
popa
subb
cmc
in
data16
out
jecxz
test
push
test
inc
call
shr
insl
cmp
mov
push
mov
xchg
dec
ret
add
adc
cmpsl
bound
sub
shl
mov
xlat
sbb
pusha
sub
push
sarl
dec
or
xchg
xchg
aam
sub
out
pop
or
es
sarl
inc
cwtl
addr16
and
cmc
cld
mov
fidivs
push
and
mov
sub
jo
clc
insb
mov
hlt
and
icebp
ss
add
mov
and
rcr
pop
add
cmp
imull
dec
xchg
dec
push
xchg
add
mov
dec
insb
inc
ret
mov
sub
in
mov
fs
jns
or
xor
xchg
add
lock
add
faddl
stos
lahf
dec
mov
mov
xchg
cmpb
test
out
loope
imul
inc
mov
out
dec
incl
arpl
mov
xor
lock
dec
jbe
in
and
add
and
adc
push
lock
and
push
stc
jge
mov
flds
loope
pushf
test
into
cmp
sub
mov
mov
sbb
aad
mov
jg
xchg
or
mov
insb
lret
push
add
jg
mov
or
test
out
adc
loope
add
pop
xchg
shl
push
jge
lock
xor
xor
cmpsl
mov
jo
xchg
div
test
or
sbb
cmpsb
out
jmp
add
mov
lds
cmp
packssdw
push
lea
stos
mov
adc
mov
fcmovb
ljmp
push
fstpt
xchg
ds
stos
aad
ja
inc
cld
ret
mov
out
pushf
adc
dec
insb
mov
or
cs
xchg
push
cmpsb
fildll
stc
jne
mov
aas
mov
pop
sarl
pop
jnp
inc
int3
popa
or
cwtl
pop
xor
cmp
mov
into
push
pop
push
or
mov
jl
dec
jae
xor
lcall
push
xlat
push
mov
sbb
lret
scas
cli
mov
mov
dec
pop
jnp
addl
sub
mov
cli
mov
lock
pop
or
dec
push
and
test
call
cmp
push
dec
or
mov
fnstcw
cmpsl
xchg
mov
shlb
daa
mov
sbb
outsb
sbb
dec
jle
mov
mov
rcll
outsb
fwait
test
in
sbb
xchg
jle
xor
sbb
sahf
pop
stc
push
adc
into
fsts
shll
sub
sbb
jns
jmp
mov
in
xchg
lods
inc
sbb
push
pop
outsl
mov
adc
aaa
pop
or
xchg
mov
fstps
popaw
pop
and
fimull
xchg
lods
stc
cmp
cs
gs
jno
cltd
mov
pusha
in
aam
out
inc
call
jge
mov
mov
int3
into
call
jbe
or
imul
rorl
fimull
rolb
xchg
testl
enter
fdivs
xchg
cld
xor
xor
movl
add
dec
adc
fadds
out
add
cwtl
js
sbb
pop
dec
in
loopne
data16
loope
jo
lret
mov
stc
adc
ds
loope
stos
hlt
pushf
lds
pop
push
cld
xlat
and
scas
cwtl
daa
sbb
xchg
jg
mov
push
test
sub
and
add
daa
cmp
das
push
add
push
ss
pop
into
pop
scas
mov
jae
outsl
sub
roll
cmp
gs
or
push
in
je
repz
lcall
xchg
mov
mov
cmp
in
fldcw
sahf
jl
and
inc
aam
sahf
cmpsl
ja
xchg
icebp
icebp
jg
push
jge
sbb
lcall
cli
jmp
push
xor
xchg
push
rorb
rorb
push
adc
push
ficoms
push
mov
push
lods
push
mov
sahf
jmp
dec
movsb
dec
test
sbb
sbb
pop
add
cmc
jnp
pushf
pop
roll
into
mov
push
jg
xchg
mov
sbb
pop
jb
mov
or
loopne
in
mov
loop
scas
sbb
inc
or
je
in
push
sub
cmp
fisubl
push
jge
xchg
out
push
int
pop
pop
xchg
pop
jnp
aam
ds
jbe
addl
inc
jno
mov
pop
call
pop
add
xchg
adc
movzwl
sbb
or
les
pop
xchg
les
pop
test
dec
outsb
stc
sarb
mov
xchg
into
fsubl
mov
push
dec
cli
shlb
sub
scas
loope
inc
outsb
es
mov
mov
and
outsb
adc
mov
mov
insb
imul
addl
fnstenv
sub
sub
fidivrl
aad
lret
sbb
inc
pop
test
cmp
in
add
ret
xchg
mov
dec
mov
lds
scas
mov
xlat
add
insl
mov
dec
shll
adc
xchg
pop
fsubl
jmp
jge
or
ret
mov
and
popf
and
xchg
bound
mov
fimuls
roll
pushf
sbbb
decl
xchg
pop
xchg
mov
lock
fwait
scas
mov
sub
jg
sub
cmp
cmp
inc
fs
mov
leave
fidivrl
push
cld
dec
xorl
mov
mov
jb
cmp
xchg
and
aam
in
mov
jmp
pop
cs
scas
int
cmpsb
pop
mov
bound
xorb
mov
dec
cmp
imul
pop
mov
out
ljmp
adc
in
aam
sbb
lahf
push
inc
arpl
push
cwtl
shlb
cmc
das
cmpsl
or
jg
sub
mov
ja
jb
pop
mov
cmp
lods
insl
out
pop
lcall
int
inc
xchg
in
sub
xor
outsb
movl
pop
sbb
out
mov
pop
push
mov
jnp
pop
arpl
int
iret
xchg
fstps
out
sbb
cwtl
cmc
inc
or
cmc
iret
gs
call
adc
aas
xchg
jecxz
jno
or
sbbl
cmp
xor
push
sbb
fistpll
fwait
es
inc
sbb
push
in
push
xor
mov
push
daa
dec
aam
pop
mov
adc
sbb
push
mov
or
push
or
mov
sub
xor
dec
ja
sbb
stc
stc
cmp
fnstcw
push
xchg
pushf
xchg
jle
lock
add
adc
or
je
dec
sbb
xor
jge
insb
xchg
pop
sti
jmp
pop
mov
jmp
lds
lds
test
je
aas
add
int3
fldenv
aas
adc
push
push
jb
rcl
inc
push
lea
jmp
xchg
cmp
lods
sahf
lock
mov
les
aaa
int3
movsb
clc
jbe
fs
lret
test
sbb
mov
push
xor
outsb
loopne
mov
push
fistps
push
or
or
negb
jne
popa
and
and
in
stos
sub
mov
cld
cmp
enter
or
cmp
mov
out
and
pop
sbb
rol
mov
cmp
jns
lods
mov
daa
fsub
sub
in
push
cmp
aam
inc
rcl
roll
sahf
fldl
mov
andb
clc
pop
lret
xchg
and
fwait
push
loop
or
sbb
xchg
fbstp
push
jne
and
adc
ror
or
stos
xor
imul
ret
pusha
jecxz
mov
rclb
inc
adc
popf
add
push
imul
pushf
jbe
test
insl
mov
fdivl
sbbl
hlt
mov
jle
mov
bound
sbb
sbb
sub
xlat
sbb
into
adc
shll
pop
adc
lock
sub
fists
enter
jg
loopne
jp
icebp
mov
popf
aaa
xor
mov
jbe
pop
or
jb
mov
cli
shr
rorb
lods
stos
movl
or
cmp
subb
jecxz
jbe
aam
xor
outsl
mov
lods
icebp
lahf
sti
je
sbb
mov
andb
fwait
xchg
add
push
adc
sub
sbbb
push
mov
stos
push
stos
sar
pop
data16
inc
out
add
into
and
mov
xor
js
cmp
push
in
adc
push
ret
sbbb
ss
jbe
enter
mov
push
hlt
movsb
cmc
stc
adc
xchg
leave
adc
nop
jmp
sbb
iret
int3
mov
mov
xor
or
sub
imul
jecxz
sub
das
out
aas
cli
int
out
rclb
cmp
mov
daa
jns
hlt
sbb
daa
in
mov
or
and
aam
rcll
mov
cmp
aam
ds
mov
cmc
inc
push
ror
cmp
push
xor
mov
sbb
add
addr16
push
mov
cs
xor
fldl
push
xor
adc
mov
dec
aaa
sbb
pop
out
cli
incb
xchg
add
call
sbb
xor
push
aad
loop
sbb
cld
and
test
xor
xor
movsl
enter
dec
insl
fdivr
cmp
scas
push
mov
mov
jge
ret
rolb
mov
insl
sub
mov
enter
movsb
sbb
pop
mov
jbe
clc
mov
jnp
into
or
cmpsb
movsb
sub
push
or
sbb
jno
dec
and
das
mov
dec
cmpsb
dec
dec
sbb
and
fadds
rcrl
data16
imul
push
mov
jbe
cltd
dec
lcall
sbb
mov
dec
iret
out
pop
ret
sbbl
mov
aaa
dec
fwait
call
or
pop
test
sub
xor
or
xchg
xor
push
mov
in
cld
cld
push
fnstcw
xchg
repz
and
sub
daa
and
mov
sub
jmp
fildll
mov
test
ficoml
jge
stos
adc
lret
push
ss
jbe
add
outsl
das
xor
cltd
dec
mov
push
stc
dec
les
inc
leave
sbb
jnp
pop
negb
mull
jmp
fidivrs
xor
jmp
push
push
mov
adc
stos
loop
xchg
stos
adc
sub
ljmp
cmp
fstpt
fidivl
mov
mov
xchg
std
ds
pushf
sub
je
cmp
iret
in
dec
fsubp
dec
adc
lea
push
ficoms
sub
adc
sbb
stos
dec
cli
mov
shl
sbb
sbb
dec
push
jecxz
xchg
mov
imul
mov
dec
inc
or
lea
pushf
adc
jmp
rorb
aam
lods
ret
mov
fidivrs
fsubs
dec
shrl
pop
cltd
es
repz
sub
mov
sbb
sub
aad
and
repnz
jno
dec
push
lods
xchg
mov
cmp
test
mov
inc
mov
outsl
popf
ss
fildl
xchg
or
insb
test
xor
inc
mov
leave
or
ret
bnd
mov
xor
jo
sbb
lret
je
lret
add
jbe
inc
fucomip
cmc
inc
int3
add
dec
pop
stos
dec
pop
rcr
lods
lret
sub
push
idivb
add
jmp
sbb
lret
cmp
imul
pop
xlat
mov
mov
xchg
pushl
push
jecxz
cmp
or
mov
fsub
xchg
inc
and
adc
popf
or
mov
lods
ja
mov
popa
mov
xchg
scas
test
in
loopne
jns
cmpsb
inc
dec
in
mov
xchg
fisubrl
sub
sbb
cmc
fadd
iret
xchg
subl
jp
xchg
jns
sub
sub
outsl
sub
pushf
add
insl
shlb
cmp
in
sbb
sub
cltd
pop
push
out
push
push
add
xlat
or
std
pop
cli
ficomps
pop
sub
jo
cmp
test
arpl
stc
fstps
cmc
test
pushf
xor
cs
cmp
cli
and
or
jmp
out
shrb
das
push
int3
xchg
cmp
push
pop
pop
out
fs
ret
into
push
push
adc
stos
push
imul
jg
or
lock
fwait
mov
sbb
pop
push
cli
xor
cwtl
pop
rclb
mov
addr16
cwtl
sahf
cltd
push
cmp
jmp
shll
dec
sub
pop
mov
subl
sub
pop
ret
insb
pop
mov
push
cli
das
mov
dec
xchg
fwait
mov
arpl
jb
dec
push
test
xchg
and
or
cwtl
xorl
mov
cmp
sahf
mov
or
jge
mov
leave
adc
jne
call
push
popf
push
lea
std
push
inc
pop
stos
dec
jge
sub
sbb
iret
jecxz
adc
out
add
xchg
mov
cmp
ds
pusha
addb
sbb
dec
adc
shlb
add
loope
aaa
adc
xor
and
push
ds
push
loop
push
hlt
lcall
xor
or
leave
gs
test
mov
mov
jbe
pop
sbb
inc
lods
fcompl
inc
xor
daa
or
and
addr16
sti
nop
cmpsl
add
inc
cs
inc
outsb
out
nop
scas
outsb
cmc
pop
push
loope
fdivrs
pop
sbb
mov
cmp
out
ds
lret
arpl
adc
jmp
add
or
lcall
cmp
rclb
js
negl
jg
lcall
addr16
xchg
cltd
sbb
pop
into
push
jae
notl
push
pop
test
jo
mov
mov
mov
test
jne
mov
and
pushf
push
out
push
cltd
inc
into
testb
ret
inc
orb
hlt
int3
pop
daa
outsb
add
loop
loope
jl
shl
mov
out
push
test
insl
lds
add
dec
jb
mov
and
push
ljmp
dec
test
lds
cld
add
inc
popa
pop
imul
int
xor
in
cs
mov
and
push
inc
lcall
fs
int3
cmp
addr16
fisttpll
dec
syscall
imul
mov
inc
shlb
push
push
nop
sbb
movsb
lret
in
popa
dec
stos
out
pushf
mov
jnp
push
call
fcompl
jle
mov
push
inc
mov
lock
push
sbb
pop
arpl
jp
push
stos
leave
fisttpll
jp
fldt
shrl
scas
je
push
lcall
push
and
push
xorb
std
sub
cli
adc
notl
mov
jno
xchg
xchg
iret
sbb
or
aaa
xlat
data16
jl
outsl
movsl
xchg
mov
or
push
pop
sbb
xor
std
xor
push
inc
test
dec
shlb
inc
fildll
loope
loopne
scas
inc
out
addb
aas
sub
mov
sti
loope
fwait
cltd
popa
xor
cltd
fimull
xchg
lahf
call
call
imulb
or
pop
movsb
repnz
lods
dec
cmc
mov
popa
out
jo
adc
repz
aam
ret
mov
mov
dec
mov
jns
arpl
daa
cli
jb
mov
scas
mov
clc
daa
imul
shll
dec
add
add
ss
push
pop
lret
mov
aad
aam
xchg
lock
insl
roll
mov
xor
fstpt
and
nop
ret
out
mov
in
push
rcrl
addr16
aam
inc
mov
ds
push
lahf
jg
sahf
rcrb
stos
int
movsb
xor
ss
inc
adcb
mov
mov
ret
movsl
pop
mov
popf
imul
xchg
shll
dec
push
or
lods
xchg
mov
sub
xor
pusha
inc
out
in
js
push
cmp
mov
insl
jno
push
cwtl
fcomps
or
sbb
pop
push
hlt
out
sti
xlat
adc
dec
lret
dec
mov
xchg
aam
sahf
push
outsl
sbb
jo
in
imul
push
or
and
daa
shl
fucomp
cli
out
subb
dec
shrb
pop
cmp
inc
daa
lret
or
add
and
cmp
adc
pop
pop
dec
mov
adc
sub
cmp
pushf
daa
lds
push
test
ss
mov
adc
dec
lret
fidivl
mov
dec
movsb
out
aas
jns
adc
ljmp
pushf
sub
mov
dec
in
xor
push
push
pop
filds
and
mov
mov
cmp
lds
nop
int3
sub
aad
movsb
addr16
insl
xorl
xor
idivl
cmc
jnp
jbe
arpl
mov
inc
dec
imul
test
push
pop
in
xchg
lahf
cmpsb
xchg
adcl
xchg
addb
popa
loop
aam
mov
jne
loope
adc
sub
leave
cld
data16
dec
loope
dec
pop
ds
int
sub
inc
fwait
pop
icebp
fisubs
push
stc
shr
adc
xor
sub
mov
sbb
cmc
iret
mov
cmp
jne
fs
adc
cmp
pop
shr
cld
mov
jbe
inc
inc
cmpsb
mov
jne
std
lods
testb
outsl
mov
add
pop
fstl
mov
popf
push
sbb
xor
aad
imul
daa
pop
push
sahf
push
jae
mov
out
stos
dec
mov
stos
aam
test
or
les
jmp
jle
or
cmp
and
sub
jo
jo
inc
mov
cwtl
and
sbb
scas
dec
addr16
jmp
sub
daa
dec
cltd
test
test
lock
pop
enter
jl
pusha
sbb
cs
ret
pop
push
jnp
lock
inc
je
test
lods
mov
mov
leave
ret
sbb
adc
sub
mov
popf
ret
lahf
mov
jno
push
clc
cmp
sub
dec
sub
repz
xor
mov
add
aam
sub
or
test
jnp
movsb
test
xor
mov
jp
or
sub
inc
sub
inc
jnp
mov
push
jo
repnz
adc
push
stos
cltd
jmp
clc
sub
jmp
mov
mov
aas
loopne
repnz
xor
lcall
popf
jae
or
mov
pushf
fisttpl
sub
pop
push
sbb
out
push
inc
and
xor
out
xchg
leave
loop
push
lahf
sbb
cli
in
sete
popa
ror
out
das
push
testb
outsb
mov
mov
add
insl
sub
into
adc
into
push
adcb
xor
sub
xchg
pop
mov
jecxz
ss
dec
xchg
mov
add
cmpsb
or
aaa
xor
pop
out
mov
mov
jnp
push
scas
sbb
mov
mov
fiaddl
rorb
jp
xchg
mov
push
sub
cmp
loop
repz
dec
xor
dec
mov
in
xor
orb
xor
testb
shlb
xchg
xor
cmp
rcrb
cmc
das
es
mov
imul
push
fldcw
mov
mov
sbb
cld
test
mov
ds
fcmovnb
mov
icebp
xor
lea
dec
cmp
jbe
adc
stc
out
sbb
rclb
jb
xchg
jl
dec
xchg
push
aam
daa
pusha
js
popf
hlt
dec
pop
and
idivl
enter
mov
sub
aas
jecxz
cmp
adc
sub
adc
sbb
stos
sub
jne
repnz
adc
andb
fildl
fidivrs
jle
cli
cmp
mov
mov
inc
dec
mov
popf
aad
dec
xorl
mov
rorl
add
enter
les
xchg
mov
lcall
xchg
mov
mov
sub
std
jb
lcall
mov
add
lock
ss
or
xchg
mov
icebp
inc
aaa
hlt
andb
scas
jle
faddp
in
scas
hlt
and
sbb
seto
fbld
scas
xor
in
cmp
repz
testl
pusha
ljmp
repnz
push
je
pop
fbld
rolb
adc
into
enter
lret
hlt
inc
lea
mov
jae
insl
push
push
xlat
je
cld
fnstenv
adc
mov
in
ja
int
jle
pop
xchg
gs
mov
xlat
add
outsb
dec
add
jp
ss
cltd
inc
ficoml
and
pop
sbb
ja
testl
add
fwait
dec
insb
shlb
scas
out
ja
lds
pop
and
adcb
xor
mov
cltd
xchg
sahf
push
jg
imul
dec
or
jmp
pop
das
push
mov
test
jo
mov
pop
xor
pusha
stos
lret
push
std
xor
clc
fcompl
jbe
enter
jmp
imul
loop
mov
push
cmp
mov
cmp
out
js
pop
adc
sbb
fmull
jnp
sub
out
push
movsl
js
mov
in
dec
sub
xor
in
stos
push
xorl
mov
sti
sbb
cwtl
pop
rol
repz
jge
xchg
loope
fimuls
lahf
loopne
insb
mov
inc
mov
pop
and
mov
test
fs
loopne
scas
stc
addr16
mov
ret
test
push
adc
aas
mov
mov
mov
pop
adc
cltd
jle
jg
xor
and
xchg
xlat
xchg
loopne
cmp
int3
aam
xor
scas
sbb
jge
inc
inc
dec
jo
rolb
dec
mov
xorl
sbb
push
pop
int
mov
cs
mov
pop
pop
cmp
cmp
mov
daa
inc
xchg
inc
xchg
int
gs
jg
in
inc
pop
int
inc
test
loop
jae
lcall
cmp
in
rcll
fucom
sbb
push
cmp
daa
in
or
add
mov
xchg
in
adc
loope
outsb
and
dec
in
add
and
adc
std
cmp
pop
outsb
fwait
push
in
outsl
out
sarl
xchg
inc
jbe
cli
pop
and
jg
adc
xchg
push
cmp
pop
adc
sub
sbb
leave
stos
push
cmp
outsl
aas
lahf
stos
stos
pop
fildl
cmc
into
jg
shl
push
inc
mov
mov
nop
sbb
cmp
xchg
dec
and
mov
push
hlt
xor
gs
add
pop
add
fwait
jne
jns
xchg
in
jmp
arpl
mov
scas
inc
repz
sbb
sarl
aam
pusha
sub
fs
mov
xchg
inc
add
pushf
mov
pop
inc
lods
rcrl
arpl
daa
bound
daa
sbb
sub
and
inc
jmp
xor
pop
cmp
cmp
daa
rcrl
jmp
lods
sbb
jle
xchg
enter
and
idivl
pop
sub
clc
insb
and
fdivl
cmp
push
push
mov
call
dec
arpl
testb
inc
pop
or
jl
imul
mov
in
dec
xchg
xorl
xor
push
xchg
mov
call
rcll
mov
jne
adc
ljmp
repz
out
mov
arpl
mov
sbb
ss
loope
pusha
push
lds
divb
xchg
inc
inc
cmp
test
mov
dec
inc
sti
cmp
jbe
aam
addb
or
gs
subb
sbb
movl
jg
iret
pop
mov
es
out
aaa
sub
xchg
jecxz
mov
imul
fistpll
popf
inc
inc
push
clc
mov
mov
push
les
gs
inc
out
subl
jne
in
and
mov
shlb
dec
push
sub
sbb
stos
add
dec
mov
sti
lahf
je
adc
iret
in
pop
in
xchg
daa
xchg
call
pop
and
sub
pop
mov
mov
shrl
lret
adc
mov
jne
lods
shl
add
rolb
lock
dec
and
mov
jl
cmp
sbb
cmpsl
xchg
lds
sub
test
rorl
push
hlt
mov
jno
add
mov
jno
shlb
imul
push
push
xor
aad
nop
jge
cli
in
dec
xor
ret
fwait
xchg
dec
jmp
jmp
dec
imul
adc
dec
ret
mov
and
sahf
add
icebp
pop
pop
les
add
enter
fsubrs
je
repnz
push
ljmp
ds
push
sahf
int
xor
cmp
fimuls
push
pop
jle
pop
into
xor
mov
jno
iret
fstpt
jno
ljmp
pop
cmpsb
cmp
testb
bound
or
push
mov
pop
iret
mov
add
in
mov
pusha
inc
and
outsb
lret
jno
inc
dec
loop
out
js
add
mov
rcl
mov
cmpsb
andb
mov
cmp
adc
xchg
sub
mov
mov
stos
fwait
mov
repz
and
and
lods
pop
mov
mov
jae
push
jae
xchg
lahf
pop
int
dec
jecxz
xchg
lret
gs
hlt
out
dec
adc
test
or
mov
push
sbb
or
mov
daa
pop
fldcw
and
outsl
mov
aas
jmp
out
in
and
popa
movb
push
es
cs
repnz
dec
std
repnz
jmp
aas
mov
cmpsb
into
mov
mov
dec
andl
push
xlat
sub
pop
or
adc
in
test
jp
push
mov
or
mov
cmp
aaa
jb
sub
dec
lds
sbb
cmc
push
fdiv
iret
repz
or
bswap
jle
daa
mul
in
xchg
push
cmp
pop
sub
ret
adc
in
add
cmp
dec
in
mov
push
test
xor
imul
and
jb
pop
cmp
out
xor
cmc
fiaddl
ds
data16
pop
push
clc
mov
xor
rcl
lret
jl
es
jo
mov
add
ret
test
popf
inc
xchg
inc
xor
adc
flds
hlt
data16
pop
xor
adc
mov
cwtl
bnd
xchg
mov
gs
mov
jecxz
mov
aad
mov
dec
and
push
xchg
scas
mov
clc
add
push
or
mulb
sbb
ss
pop
and
xor
scas
mov
pop
push
mov
out
fwait
ret
mull
cs
adc
inc
leave
and
sub
movsl
into
repnz
sub
pop
dec
dec
leave
add
and
mov
cli
inc
out
rcrb
test
xor
dec
jns
pop
call
movsl
lods
jp
mov
mov
leave
jb
fwait
mov
cmp
jl
pop
insl
cmovb
stos
icebp
mov
pop
xchg
mov
xchg
in
notl
xlat
call
add
lret
pushf
dec
cmp
mov
dec
jns
stos
fidivl
and
dec
mov
cmpsl
clc
jne
aad
cmp
pop
cmpsl
hlt
outsl
sbb
imul
and
xchg
adc
pusha
mov
sahf
adc
add
mov
scas
adc
ja
pop
pop
pop
mov
cmp
sub
xor
pop
jae
int
ficompl
push
out
mov
arpl
xchg
pushf
in
mov
push
sbb
inc
jg
clc
scas
icebp
and
test
xchg
je
hlt
hlt
in
sbb
sbb
ss
push
xor
mov
in
mov
xchg
adc
sbb
mov
sub
out
wbinvd
out
dec
shl
adc
inc
aad
push
int
insl
cmp
pusha
es
sub
adc
xlat
shrl
test
mov
mov
cmpsb
icebp
push
sbb
cmc
das
aaa
rolb
or
adc
daa
mov
fdivrl
and
leave
mov
lods
fiadds
xchg
fistpl
pop
or
inc
inc
aas
and
or
xchg
sub
mov
arpl
add
xlat
arpl
andl
xchg
jne
xchg
pop
sub
pop
mov
int3
adc
push
xor
lahf
xchg
fldenv
mov
scas
mov
insl
popa
mov
ss
mov
and
pop
xchg
mov
nop
sbb
loop
push
loopne
mov
mov
hlt
out
sub
in
adc
ja
pop
aad
notb
fstl
aaa
push
ftst
jp
fwait
cmp
dec
es
shlb
addl
adc
add
pop
mov
and
jne
dec
mov
ljmp
jmp
add
inc
out
inc
dec
dec
xlat
lret
and
mov
je
bound
ljmp
xor
iret
aaa
in
js
mov
dec
pop
lods
xlat
adc
jnp
test
call
dec
push
ja
push
jp
pusha
xchg
ret
pop
xchg
mov
leave
dec
sub
mov
sbb
cmpsb
movl
test
lcall
mov
or
icebp
leave
inc
data16
fcomi
jnp
lods
pop
cmp
jge
lcall
lea
int3
push
sbb
psrad
sub
cmp
fs
push
in
sbb
mov
cld
adc
insl
arpl
sbb
cltd
add
jg
push
mov
adc
add
daa
es
cmpb
lock
cli
fwait
in
adc
jae
mov
pop
dec
cmp
mov
push
in
add
xchg
pop
xchg
mov
push
pop
mov
lea
jb
insl
repz
repz
incl
mov
push
pop
insl
xchg
sub
mov
dec
lret
mov
mov
nop
pop
inc
push
jl
gs
mov
xchg
sub
dec
jmp
into
sbb
cmp
or
mov
std
sbb
cmp
xchg
inc
test
lods
cmp
xchg
out
sbb
mov
mov
in
push
out
pop
leave
stos
push
pop
dec
or
loop
jnp
outsb
pop
fstpt
test
sbb
dec
out
jae
stc
scas
mov
xor
dec
push
dec
dec
cmc
mov
into
sub
xchg
cmpsb
and
add
jmp
shlb
in
jo
dec
pusha
icebp
jne
pop
sub
sub
in
stos
aam
je
inc
push
sbb
jecxz
add
push
pop
dec
jmp
dec
push
dec
xchg
icebp
inc
mov
mov
enter
gs
rorb
sbb
addr16
sbb
lods
xchg
or
daa
adc
mov
icebp
sbb
popa
sub
rcrb
fstps
imul
hlt
ja
xchg
stc
push
mov
fwait
mov
out
mov
je
fmulp
aaa
mov
inc
pop
je
fistpl
fcoms
mov
xor
icebp
jge
mov
ret
jb
jmp
adc
jnp
add
imul
mov
outsl
scas
mov
ss
mov
hlt
jb
cli
push
pop
not
push
cwtl
ss
mov
decb
aaa
xchg
push
aaa
popf
lret
sbb
adc
movsb
mov
std
sbb
enter
stc
ja
jno
fcoms
jmp
pop
dec
fstpt
insb
push
dec
cli
dec
fs
movsl
push
aad
jnp
cmp
shlb
xchg
stos
es
jnp
adc
sbb
and
mov
pop
add
push
rcrb
popa
je
push
fisubs
or
fwait
adc
insl
rcrb
mov
mov
mov
push
les
add
sbb
pushf
jp
gs
aad
outsl
lea
enter
shl
fisubs
pop
jbe
call
jle
pop
push
dec
roll
sub
mov
cmp
pusha
and
lea
pop
fisttpl
mov
adc
add
jns
mov
xchg
imul
jl
sbb
push
jns
dec
jp
rcrb
xchg
push
aam
js
push
dec
out
cmp
push
add
ficoml
rcl
or
jle
lea
scas
nop
mov
xor
mov
sbb
and
shlb
test
or
and
mov
lods
andb
pop
daa
out
adc
pop
test
cmp
mov
repz
push
outsb
mov
out
inc
xchg
fcompl
cwtl
jne
jae
mov
mov
mov
rorl
mov
int
dec
and
clc
mov
enter
imul
lret
cmp
int
stc
mov
subb
sub
shlb
add
push
sub
rolb
test
dec
jle
dec
push
or
divb
cmpb
lret
andl
ds
fwait
and
inc
or
mov
pop
sub
sbb
mov
sbb
cwtl
and
sbb
ret
jo
test
mov
stc
mov
gs
lahf
outsb
subl
mov
lods
inc
push
loopne
fwait
cmpsb
iret
push
pop
lret
push
out
xchg
rcll
icebp
or
lcall
inc
lret
outsl
dec
sub
xchg
addr16
cmp
stc
pop
les
xchg
repz
sbb
pop
or
push
aaa
sub
je
lret
jecxz
movsl
jge
xorb
push
mov
pop
data16
adc
cli
lods
fnstsw
sub
dec
inc
mov
add
dec
mov
lret
lods
arpl
push
hlt
mov
in
and
addb
imul
cmpsb
cld
xchg
shll
jo
cmp
sahf
out
xlat
dec
and
sub
das
xchg
js
mov
mov
je
lahf
mov
sahf
imul
push
adc
or
push
mov
icebp
push
es
mov
sarb
outsl
inc
xchg
sub
test
fnstcw
icebp
stos
lock
cmp
sti
lahf
cwtl
adc
dec
inc
out
neg
add
xchg
jge
mov
and
pop
mov
add
jno
fdivrl
pop
ja
mov
cli
lahf
mov
xor
and
xchg
in
test
scas
fistl
loope
mov
sbb
data16
mov
scas
aas
fwait
lods
out
sub
sub
mov
cmp
mov
int3
mov
push
push
dec
jle
dec
inc
stos
mov
cltd
pushf
inc
je
and
dec
jno
scas
xor
pusha
adc
arpl
popf
dec
cli
stc
insb
add
and
or
jecxz
loope
or
pop
mov
cmp
outsb
dec
cld
repz
stos
push
fwait
ds
inc
sub
test
xchg
or
stc
hlt
sbbb
xor
dec
cmp
xchg
xchg
mov
mov
adc
sahf
sbb
jae
loopne
out
xchg
inc
sbb
dec
sbb
pop
or
or
jecxz
out
adc
rcl
icebp
pusha
xacquire
mov
xor
xorb
xchg
rorl
gs
mov
push
enter
sbb
lea
scas
xchg
pop
dec
cmpsb
mov
xchg
adcb
cli
push
inc
leave
dec
imul
add
jmp
dec
loope
test
mov
push
outsl
imul
sub
mov
clc
sub
mov
dec
jb
adc
insl
xor
adc
outsl
inc
stos
inc
popa
inc
jmp
dec
fiaddl
lods
pop
mov
push
mov
fwait
ret
repnz
stc
xor
adc
inc
ds
add
jle
movsl
mov
mov
notl
push
dec
pop
mov
fsubs
jp
leave
xchg
pushf
repnz
push
sub
idivl
cmp
pop
stos
jb
push
mov
add
loop
xor
mov
int
pop
xchg
movsl
ret
cmp
ja
pop
loope
scas
rclb
xchg
xchg
inc
insb
bound
pop
or
adc
les
frstor
scas
mov
push
push
fdivrl
sbb
unpcklps
push
ss
cmc
sbb
add
loop
icebp
jno
pusha
mov
lea
dec
mov
jecxz
leave
pop
ret
mov
mov
mov
inc
movsl
sub
lock
int3
mov
std
imul
fldt
insl
inc
add
adc
ret
jne
mov
lods
int3
cwtl
repz
sub
sbb
cmp
or
mov
mov
daa
inc
inc
pop
or
ret
outsl
roll
or
xlat
and
xor
lea
sbb
dec
mov
sbb
movsl
inc
imul
ret
hlt
cmp
sbbl
scas
test
or
add
testb
sbb
and
sbb
ljmp
sbb
jne
adc
xchg
adc
pusha
test
adc
ss
inc
fistps
sbb
adc
inc
adc
in
dec
mov
in
out
in
orb
fcmovu
cmp
or
push
repz
sti
insl
fmuls
mov
sbb
aam
test
and
push
es
call
lcall
rol
and
xchg
popa
pop
xchg
xchg
mov
int3
cmp
call
or
insb
dec
jmp
and
in
push
mov
int3
test
pop
jb
adc
popa
aam
lods
and
xor
call
xchg
pushf
scas
dec
xor
sbb
arpl
lock
ljmp
xchg
push
mov
xor
mov
fwait
std
dec
jnp
inc
lcall
sub
inc
rcrl
or
lea
dec
loopne
loopne
mov
adc
loop
lret
mov
sbb
and
xorl
jmp
pop
mov
bnd
adc
mov
add
sub
xor
adc
stc
mov
pusha
out
jae
jns
in
dec
repz
inc
push
iret
jb
ret
mov
frstor
pop
xchg
rolb
fwait
sar
xchg
xor
js
xor
in
push
repnz
stc
dec
lea
insl
je
cmp
popa
mov
adc
je
add
shrb
cli
inc
cmp
inc
mov
std
in
addr16
iret
inc
mov
add
mov
pop
and
sub
enter
rcr
push
loope
push
fmull
mov
pop
and
mov
js
enter
pop
or
pop
lea
testb
lahf
loop,pn
ljmp
sbb
outsb
mov
inc
or
sar
outsb
push
push
pop
jmp
mov
popa
movsb
pop
sub
xor
fisttps
dec
pushf
inc
sbb
pop
packssdw
jmp
jg
loop
cmc
fcoms
call
dec
enter
dec
sbb
push
adc
into
sub
cmp
cmp
scas
xor
rcll
js
leave
pop
iret
icebp
mov
shll
outsb
gs
add
sub
or
dec
dec
jo
aaa
jno
sbb
jmp
bound
movb
adc
aad
gs
jmp
sub
pop
dec
jle
outsb
mov
xchg
or
mov
lea
test
clc
inc
fsubp
mov
insl
pop
sub
sbb
xchg
lock
ljmp
and
data16
pop
mov
int3
call
test
sbb
sbb
push
cld
mov
in
pop
idivl
adc
test
movsl
mov
dec
add
sbb
jno
pop
xchg
in
cmpsb
icebp
sbb
lods
push
xchg
jg
push
fistl
outsl
daa
fcoms
xchg
push
inc
arpl
xor
push
push
enter
cmp
push
mov
push
mov
cmpl
into
insl
adc
adc
clc
mov
rcl
negl
ss
jae
or
int
int3
mov
sbb
add
jle
cmpsl
xchg
rcrb
leave
hlt
movsl
insb
mov
xor
jl
mov
insl
add
add
add
sub
push
lcall
test
rcrl
fcompl
movsb
dec
cmp
int3
cltd
iret
in
aaa
das
mov
cmp
inc
jo
lcall
mov
int
and
xchg
jmp
ds
pushf
sub
add
mov
jmp
outsb
inc
pop
xchg
mov
push
or
jne
in
cmp
js
dec
lahf
push
pushw
push
outsl
std
dec
pushf
popf
lods
rcrb
inc
xor
aaa
mov
and
int3
inc
xor
dec
add
pop
jb
sub
push
daa
push
dec
lahf
push
loopne
mov
scas
je
sbb
and
mov
cs
sub
or
dec
lea
cmp
xchg
cmp
cmpb
loopne
push
addr16
popf
add
jmp
outsb
mov
js
mov
jp
popl
push
push
lock
cli
lds
in
lea
mov
insl
lods
cmc
mov
fimull
rclb
sub
or
aam
pop
iret
xchg
sub
out
xchg
xor
mov
and
mov
push
pusha
sub
push
fdivrl
test
jno
mov
xor
orl
leave
jp
add
arpl
icebp
fdivl
jmp
setne
inc
jmp
loop
pop
jle
cmpsb
mov
dec
pushf
jle
push
fmuls
popa
icebp
test
loop
popa
fs
or
mov
rolb
xchg
scas
inc
sbb
fisubl
dec
ficoml
inc
dec
cmp
rep
or
adc
push
ret
loopne
ja
xorb
adc
aam
in
nop
mov
in
stos
adc
stos
fld
inc
adc
xorb
in
jbe
and
daa
cmp
xor
enter
negb
mov
adc
jg
adc
pushf
cwtl
mov
imul
sub
jb
arpl
mov
mov
cli
sub
outsl
xor
or
ret
int
cmp
jecxz
cmp
jp
add
xchg
xor
addb
mov
scas
clc
sar
mov
frstor
xchg
xchg
push
inc
sub
push
ja
xchg
jns
mov
mov
jge
aaa
shlb
xchg
incb
sti
nop
and
std
call
sub
or
or
call
and
sbb
or
idiv
mov
rcrl
js
mov
push
test
aad
aas
lret
je
sub
mov
push
sbb
mov
add
nop
push
int
jg
iret
pop
cwtl
dec
push
dec
clc
push
movsl
jo
xchg
stos
jmp
out
stc
adc
insl
inc
jne
mov
ljmp
jmp
flds
xor
inc
aas
in
mov
xor
test
mov
mov
es
stos
adc
je
mov
push
idivb
outsb
addr16
clc
flds
imul
std
mov
rcrl
cwtl
jg
movsl
test
mov
das
jecxz
lret
xchg
gs
pushf
aam
push
push
dec
mul
mov
add
or
lcall
sub
cmp
out
mov
jne
sub
sub
mov
xor
cltd
or
mov
cli
xchg
fmuls
fs
mov
xor
push
insl
adc
sahf
push
mov
xor
sarl
jl
testl
aad
mov
add
lock
shrb
loopne
pop
push
lret
jp
sbb
add
std
aas
adc
je
test
mov
out
fstps
or
xchg
outsb
sbb
out
ret
pusha
mov
jnp
lcall
out
cmp
xor
sub
fcompl
imul
xor
jle
clc
cld
sub
adc
loopne
xchg
pop
mov
stc
addr16
rsm
sbb
mov
inc
in
popf
lcall
in
add
inc
int3
jnp
mov
scas
rcl
sub
xchg
fisubs
add
lret
insl
adc
mov
pop
lret
mov
dec
mov
fs
repnz
or
mov
int
mov
push
out
or
pop
sbb
mov
inc
adc
cmc
jge
call
stos
rcrb
int3
cmpsb
xor
push
sbb
fs
mov
sti
dec
bound
or
jae
jnp
mov
clc
inc
xchg
jns
lret
out
test
xchg
arpl
sbb
mov
xorb
out
xor
push
mov
mov
mov
fs
mov
inc
pop
jnp
sub
hlt
test
push
push
sub
jecxz
cmpsb
jb
add
icebp
movsb
xchg
mov
xchg
iret
inc
ror
jp
in
jae
out
sbb
sub
out
lret
mov
shrb
push
sub
cld
and
add
in
sbb
jp
nop
int3
xchg
es
into
jnp
mov
jle
aam
dec
add
push
insb
fmull
push
insb
cltd
daa
add
scas
mov
xchg
xor
mov
mov
inc
adc
lret
sub
mov
jge
sbb
call
subl
daa
mov
fs
and
call
dec
push
mov
andb
push
popa
mov
mov
pop
lods
adc
test
pop
popf
pop
lods
lret
fcomp
add
test
stos
lock
push
sbb
and
popf
ja
pop
icebp
in
push
ds
push
cmc
sbb
or
fwait
pop
push
and
insb
and
jecxz
popf
lods
jbe
ljmp
fsub
loope
lds
in
enter
sub
hlt
add
mov
or
cs
dec
lcall
fucom
jge
scas
nop
xchg
loopne
sbb
jbe
and
std
pop
sub
sub
cmpsl
movb
mov
and
push
xchg
cmp
push
add
dec
add
pop
arpl
jne
push
and
xchg
adc
cmpsb
inc
dec
pop
int3
jo
add
jno
in
pop
jle
or
sub
xor
cld
or
jmp
enter
and
sbb
dec
push
jb
dec
cmp
dec
stc
cmp
xor
popa
gs
rcrb
sbb
mov
lcall
mov
mov
lahf
pop
aam
in
sti
and
push
mov
inc
dec
mov
inc
pushf
cs
lock
cmpsl
jae
adc
pop
adc
lods
sahf
push
and
add
adc
sti
push
push
das
xchg
and
adc
xchg
mov
jmp
movsl
adc
movsl
cld
sti
cmp
pusha
stos
fcmovnbe
shr
stos
imulb
testl
pop
xor
or
adc
sub
add
xlat
fcomip
add
mov
sahf
pop
loopne
mov
outsb
xor
clc
jg
xchg
xchg
dec
data16
sub
mov
dec
subl
pop
cmp
xchg
pop
xchg
mov
push
mov
adc
inc
leave
sbb
xor
fnstsw
mov
xchg
out
dec
dec
xchg
fists
gs
cmp
fsub
dec
sub
xchg
jnp
dec
in
xchg
jnp
cld
xchg
enter
mov
mov
ficomps
add
pusha
in
mov
sbb
xor
xchg
adc
stos
gs
dec
les
mov
dec
scas
add
ljmp
leave
sub
jne
cmc
mov
call
push
cmp
lret
stc
xor
test
andl
jne
lea
lea
cli
aas
test
inc
int
shlb
insl
pop
push
dec
cltd
ljmp
rorb
lods
fldl
lods
mov
pop
jnp
xchg
mov
cmc
mov
imul
push
add
push
scas
ret
mov
mov
test
sbb
xchg
add
cwtl
pusha
mov
jb
cli
jg
pop
addb
pushf
fdivp
adc
push
imul
jns
push
jmp
fldt
enter
push
icebp
or
mov
pop
loop
pop
enter
xchg
outsl
vmovss
adc
xor
xor
cmp
adc
lds
xchg
shll
js
decb
jno
ds
cmpsb
mov
inc
leave
xor
pop
adc
add
fbld
lds
xor
inc
in
jbe
add
mov
loop
shl
arpl
es
insb
les
add
movsb
inc
add
jmp
push
aad
lcall
cmpsl
repz
add
and
insl
jno
or
repz
cmp
cmp
pop
pop
out
cwtl
jg
inc
sub
jbe
or
sbb
loop
je
dec
xchg
sbb
adc
inc
pop
dec
addl
inc
std
ficompl
fdivs
icebp
pop
add
and
pop
push
dec
push
dec
insb
mov
mov
js
in
fisttpl
xor
mov
push
mov
push
or
push
dec
add
ret
fs
shrb
ret
inc
inc
adc
cmpsl
mov
mov
sub
fistps
icebp
orl
mov
pop
movsb
push
in
adc
fisubrl
insb
add
test
in
imul
xor
jno
mov
cld
sbb
sbb
cs
mov
cmp
movsb
in
add
mov
mov
push
jge
pop
jmp
addb
push
shl
pop
imul
mov
sbb
out
mov
in
fistl
push
gs
aam
cmp
adc
mov
outsb
int3
loop
loopne
dec
stos
dec
jp
adc
das
add
mov
dec
jne
xor
push
shl
and
mov
lock
mov
pop
push
mov
daa
js
xchg
pop
xor
imul
cld
xchg
mov
or
sub
jp
xchg
sbb
push
xor
xchg
inc
ret
iret
mov
cmc
add
mov
jge
dec
loope
xor
fucomi
and
jns
mov
xchg
mov
incb
stc
cmp
cmpsl
out
jmp
push
aad
add
je
xchg
sbb
pop
nop
dec
loopne
mov
cmp
sbb
lcall
and
test
adc
dec
adc
pop
dec
adc
data16
shlb
sub
lods
fdivl
rorl
ja
fwait
cs
cmpsb
addr16
sbb
adc
inc
mov
inc
bound
mov
mov
sbb
cmp
dec
pop
add
int
cwtl
nop
mov
or
call
pop
cwtl
aas
inc
in
xor
adc
mov
add
cmp
pop
pop
incb
movsb
jb
add
into
cmpsl
shll
jmp
shrl
xchg
loop
jb
mov
mov
clc
enter
cmp
pusha
rcrl
call
fcmovnu
xchg
pop
outsl
xchg
pop
add
jge
mov
dec
fwait
xor
push
loopne
mov
lods
add
mov
iret
mov
loope
push
icebp
loopne
sti
pop
jmp
fsubrl
sub
inc
lea
jmp
cmc
fadds
lret
mov
add
xlat
mov
mov
cmp
pop
add
and
cmp
cmp
ja
jg
ss
int
cmpsb
fmuls
movsl
mov
rcll
dec
out
sbb
ljmp
or
int3
push
mov
sbb
or
das
sub
imulb
inc
mov
daa
subl
inc
xlat
and
pop
call
pop
lods
or
mov
mov
aad
outsb
jl
mov
add
subl
ss
xor
jmp
inc
aaa
mov
jg
jnp
xor
cltd
mov
mov
inc
fstpl
leave
leave
mov
adc
mov
int3
inc
push
cmp
mov
jne
adc
mov
inc
fistpll
jecxz
mov
popf
movsb
test
pushf
or
into
in
sub
ret
in
idiv
lcall
cmc
xor
lods
pop
mov
movb
and
es
mov
jp
mov
push
aam
stc
xchg
add
push
lea
outsb
hlt
sub
push
mov
fisttpll
sub
test
jb
jp
loope
jns
push
mov
mov
stc
dec
adc
or
out
lret
imul
sbb
adc
xor
loopne
jmp
adc
mov
sti
jle
lds
jge
test
add
and
jb
out
jne
xor
gs
sbb
mov
mov
imul
cli
jge
cmpb
gs
sub
cld
or
sbb
mov
out
push
sbb
lods
mov
lds
sbb
cmp
and
sbb
cmp
aam
xor
out
lods
outsb
mov
aad
lahf
jmp
jo
push
dec
fisttpll
dec
sarb
ja
cmpsb
jg
add
rclb
test
add
dec
pop
push
adc
push
int3
push
mov
sbb
cmpsb
ret
sbb
ds
movsb
adc
popa
adc
lods
jae
push
inc
lds
cli
mov
pop
mov
xchg
jl
pop
dec
andb
insl
pop
loopne
sti
pop
scas
in
push
xor
loop
xchg
fidivl
test
mov
mov
sbbb
push
mov
sub
pop
loopne
lret
adcb
jo
out
pop
or
les
or
stos
push
mov
fdiv
sub
push
xor
divl
inc
popf
pop
adc
fadds
push
call
jae
push
inc
push
dec
and
mov
sti
pop
dec
sbb
fs
jl
xchg
cltd
xchg
out
or
popa
lods
mov
cwtl
dec
shlb
gs
jo
pop
pop
pop
in
or
inc
push
fsubrl
std
inc
dec
mov
cmp
cltd
mov
add
shlb
rcrl
sbb
or
inc
pop
add
test
add
cmp
pop
inc
pop
push
pop
int
or
sbbb
cli
adc
cmp
outsb
inc
cmp
loope
sbb
iret
adc
out
push
ds
cmpsb
jne
shll
jo
pop
xchg
pop
testb
arpl
arpl
add
mov
and
push
push
lcall
add
xor
and
jne
mov
hlt
test
jae
adc
ja
lcall
movsb
nop
pop
in
push
or
inc
ror
pop
inc
mov
sbb
pop
cmpsb
mov
ja
movsb
xchg
out
adc
sti
or
xchg
lret
sub
subl
mov
leave
or
mov
arpl
cltd
fidivrl
adc
sbbl
mov
int3
sub
jmp
mov
mov
mov
adcl
jo
iret
addr16
mov
sub
adc
mov
adc
sti
push
stc
sbb
pop
cmp
fstl
cltd
enter
pop
mov
hlt
mov
fwait
xchg
adc
cs
mov
nop
jecxz
sub
xchg
push
aam
scas
fildl
js
push
cmp
or
aas
push
iret
jns
inc
xor
sbbb
mov
cwtl
adc
ret
es
jno
scas
inc
mov
lret
and
xorl
sub
outsb
shl
ss
cmp
sbb
icebp
aad
cs
bound
mov
ss
pop
sahf
inc
movsb
mov
add
das
leave
push
cs
je
arpl
add
cmp
xor
xor
sub
pop
cmp
scas
sub
stos
inc
loop
sarb
inc
incl
adc
fs
sahf
jl
or
rorl
rolb
lea
data16
lods
xchg
pop
data16
pop
std
ljmp
sti
inc
fs
into
test
movsl
leave
sbb
in
dec
fildl
mov
mov
mov
mov
int
nop
xchg
pop
dec
test
icebp
std
pop
lods
jns
jecxz
push
dec
mov
ds
xor
adc
ffreep
roll
xor
mov
addr16
inc
mov
cli
dec
jae
sahf
cltd
xchg
inc
mov
sbb
imul
pop
xor
or
jmp
lret
imul
jb
adc
shl
and
xor
sbb
gs
mov
dec
xchg
and
push
ret
jp
loope
es
aad
pushf
pop
test
pop
cmp
stos
dec
cwtl
enter
popf
mov
xor
xchg
xchg
push
data16
inc
insl
in
scas
stos
xor
mov
stc
push
loope
out
mov
aad
mov
jmp
dec
lods
push
std
dec
and
push
push
push
add
ret
bound
test
repnz
scas
mov
inc
dec
xchg
lret
xor
xchg
push
movsl
rclb
mov
inc
sbb
test
adc
push
and
das
ret
mov
mov
jne
xor
or
lret
add
mov
jb
aas
and
fstl
rcll
and
iret
xor
jle
nop
movsb
add
push
clc
clc
push
insb
pop
jo
inc
push
ret
sbbl
jae
inc
mov
push
out
movsb
xor
das
add
mov
jnp
fucomip
jle
fsubl
inc
pop
ret
lods
hlt
cmp
cmc
or
push
shrl
aad
dec
dec
push
jno
xchg
or
cwtl
and
and
rcrb
pushf
lret
push
jns
or
movsb
mov
inc
dec
mov
cltd
mov
jle
subb
mov
cmp
lds
mov
dec
sahf
add
lods
cmp
shrl
inc
out
sbb
xor
push
adc
hlt
int3
clc
outsl
xor
adc
inc
inc
imul
clc
xchg
imul
lar
popa
shr
movsl
js
out
jnp
inc
mov
dec
loop
lds
pop
mov
xor
cmp
sbb
cmp
loope
cs
push
lret
mov
jp
push
jnp
dec
xor
push
cmp
and
fsubs
pop
pop
loopne
inc
mov
mov
call
stos
cld
cmp
rorb
or
push
xor
aaa
sti
loop
sub
and
sbb
ficoml
push
enter
jle
push
daa
andb
sbb
shlb
dec
cmp
lock
xchg
jmp
shll
fucomi
sbb
les
movsl
ret
div
inc
ret
sub
pop
fisubrs
jmp
or
pop
pop
out
lds
mov
mov
push
lcall
sub
jne
adc
push
sbb
rcrb
sbb
jle
mov
inc
aam
mov
aam
push
pop
pop
outsb
mov
jg
jo
inc
addb
mov
push
cmp
jbe
in
mov
pop
ljmp
add
adc
xchg
xorb
xlat
aaa
inc
inc
test
mov
popw
lcall
gs
push
cltd
lret
cmp
rcrb
or
scas
test
jg
fmuls
push
inc
jecxz
xor
mov
cmp
dec
cli
lds
fcompl
cmc
fs
xchg
push
into
and
mov
cli
add
inc
and
das
sahf
mov
loopne
mov
dec
xor
test
aam
test
xchg
iret
jb
xor
push
push
in
stc
jno
scas
aam
fisttpl
test
lahf
in
ret
jl
dec
lods
pop
add
or
enter
ds
cli
add
inc
fwait
movsb
jbe
push
filds
xchg
pop
out
cmp
jb
pop
jg
out
clc
ds
jg
testb
mov
cwtl
out
je
es
rcll
popf
add
mov
into
in
mov
mov
arpl
mov
and
stos
adc
cltd
loope
stos
out
pop
jmp
jae
fsubr
jno
stc
test
outsb
mov
and
push
pop
clc
inc
xor
fstps
rclb
sub
inc
cwtl
and
dec
rcl
push
pusha
and
mov
push
lods
imul
orl
mov
rol
add
xor
ss
mov
inc
fs
add
sti
pop
outsl
sub
jmp
mov
inc
jmp
xchg
bound
ficompl
imul
jmp
mov
add
fs
lods
cmp
xchg
inc
inc
lret
loope
jmp
jp
jg
mov
stc
jo
dec
pusha
adc
mov
jl
lods
cld
fldl
push
or
rcrl
fildl
xchg
fimuls
xor
mov
or
faddl
push
shr
mov
imul
mov
push
dec
in
aad
filds
dec
int3
mov
imul
ds
rorb
jne
pop
mov
jmp
cmp
jecxz
adc
pfrsqrt
insb
mov
into
aad
data16
movsb
ret
pop
inc
cmp
loop
insl
sub
fwait
or
jecxz
pop
dec
mov
int3
rcrl
push
xor
les
mov
lret
mov
jnp
cli
mov
jl
enter
icebp
ret
push
divb
cmp
in
fs
lea
push
out
mov
dec
loop
and
pusha
test
outsb
test
stos
jecxz
dec
push
es
pushf
sub
sub
pop
sbb
clc
dec
gs
ja
test
cltd
or
xchg
push
ret
out
sti
and
lret
mov
mov
jmp
mov
mov
pop
orl
inc
repz
test
or
pushf
sbb
and
test
mov
sarl
sub
adc
data16
xlat
fsubrs
adc
arpl
mov
fldenv
sbb
test
data16
outsl
push
fcmovnbe
addr16
jecxz
lea
sahf
scas
scas
imul
ljmp
inc
xchg
jmp
inc
sub
push
into
mov
lds
pop
filds
or
test
shll
fstpl
inc
out
push
ret
mov
add
xchg
mov
ret
pop
daa
mov
xchg
mov
xchg
push
adc
xlat
stos
aaa
and
scas
loop
loopne
les
sbb
or
jmp
std
icebp
push
addr16
ret
test
mov
inc
les
stos
lods
mov
xor
sbb
popf
daa
jle
cli
in
push
pop
sub
and
pop
test
nop
fidivrs
gs
outsb
push
add
cmp
lcall
fistpll
ljmp
and
xchg
and
dec
xchg
push
add
jne
repnz
inc
mov
add
notl
jnp
insl
pop
sarb
lahf
aaa
jno
sbb
sbb
ljmp
leave
mov
cmp
jbe
dec
push
pop
inc
pop
adc
pop
adc
mov
inc
loope,pt
orl
pop
in
fwait
out
or
clc
dec
adcb
mov
in
xchg
jecxz
stc
jp
pop
es
enter
push
andb
jo
imul
mov
cmc
push
sbb
jp
mov
scas
dec
pop
jmp
add
int3
daa
jle
subb
stos
or
bound
loop
stos
xor
insl
testb
add
jo
adc
popf
inc
je
mov
inc
sub
mov
shl
iret
adc
cwtl
ja
pop
and
fimuls
mov
pop
jo
jno
push
ja
scas
das
cmp
mov
fimuls
mov
popf
or
rcr
lods
mov
icebp
int
inc
jmp
outsl
mov
jecxz
lods
add
push
shl
jmp
mov
cmp
lods
insl
sub
cmp
mov
mov
xor
jnp
dec
ret
jl
sub
popf
add
pop
mov
mov
out
inc
mov
sub
out
mov
inc
mov
xchg
ret
ret
call
mov
and
mov
sub
scas
mov
add
or
adc
das
lret
lahf
adc
push
and
fs
incb
sub
daa
adc
inc
ret
fidivrs
add
enter
shr
lcall
xor
push
test
lock
scas
out
push
jno
loop
xor
mov
inc
push
dec
in
or
lock
xor
in
lret
dec
orl
mov
adc
stos
push
cmpsl
les
adc
out
leave
push
repz
or
adc
cmp
push
xchg
outsb
inc
adc
pop
adc
mov
jb
mov
je
and
sarb
inc
scas
jo
cmpl
push
mov
inc
adc
or
js
jge
mov
stos
xor
gs
ret
or
mov
mov
pop
jo
jg
enter
fimull
aad
cmp
lods
aaa
dec
jge
inc
jbe
test
ret
in
hlt
incb
ret
loop
out
lods
mov
fmuls
in
fistpll
scas
fwait
popf
pop
rcr
call
and
adc
les
fisubrl
mov
sbb
xor
fcoml
mov
popf
jmp
jae
imul
int
sub
mov
adc
mov
mov
out
adc
lea
jg
scas
test
sub
jb
jmp
jge
push
push
push
pop
cmpsl
cs
dec
push
fnstcw
test
cltd
xor
and
enter
and
stos
mov
cmp
add
loope
mov
js
jmp
cmc
adc
dec
push
sub
lods
sbb
fwait
popl
int
mov
lods
ret
stc
mov
pop
dec
bound
or
dec
push
stos
xor
inc
mov
sbb
xchg
inc
inc
aam
sarb
in
adc
idivl
ss
movl
and
mov
pop
scas
push
or
rcrl
dec
mov
mov
dec
jnp
into
mov
loop
mov
test
jne
xchg
add
test
sub
or
inc
mov
shr
hlt
imul
rorl
lods
inc
insl
add
push
pop
cld
shrb
add
xor
data16
test
sub
xchg
lea
dec
add
out
lock
jne
test
or
cmp
in
sub
mul
rcrl
or
and
mov
xchg
lret
je
rorl
push
xor
mov
clc
sub
fwait
mov
jb
adc
sub
das
dec
insl
pop
push
pop
push
shlb
es
push
adc
pop
sbb
popf
adc
pop
loope
iret
pusha
shl
push
adc
xor
xor
dec
or
add
cltd
repz
adc
ss
mov
inc
hlt
ret
rorl
imul
data16
push
ret
jnp
into
sahf
sub
out
shrb
sbb
xor
mov
xchg
mov
in
ds
mov
mov
lods
scas
xchg
or
pop
sbb
cmpsl
enter
xchg
inc
push
pop
push
dec
popf
jge
xor
fs
jecxz
inc
popa
ljmp
or
lods
pushf
xor
cs
enter
enter
cmpsb
inc
orb
xchg
fwait
daa
cmp
sub
nop
ljmp
inc
jne
push
vmread
inc
pusha
sub
mov
mov
shl
and
fmulp
ljmp
jmp
popf
mov
dec
adc
add
inc
sbb
incb
mov
or
or
pop
insb
xchg
js
popa
ljmp
or
fisubl
cmpsb
lock
jbe
cmp
xchg
xchg
fbld
xor
shll
cltd
lds
movsl
dec
das
rcl
cltd
or
sub
jecxz
sub
cmp
xor
addr16
jmp
je
mov
push
xor
out
and
outsb
pop
insb
test
ds
sarl
pop
cmp
mov
scas
mov
cvtps2pd
lahf
lea
pushf
test
and
out
push
std
dec
adc
shl
pop
sub
cmpsl
push
lret
mov
pushl
and
mov
popf
push
stc
xor
out
fwait
mov
add
test
mov
push
xchg
sbb
loop
fldl2t
shrl
in
sbb
in
fs
mov
mov
hlt
cmpsl
mov
fldcw
aad
cmp
or
xor
cmpsl
lds
popf
fisubrs
cmpsb
loope
test
out
movsb
fxch
xor
fnstcw
cmp
mov
fs
pcmpeqd
jbe
jg
lea
fwait
aaa
enter
ret
adc
sbb
xor
mov
push
push
jo
fcmovnb
nop
ret
dec
testb
dec
scas
ss
cwtl
shl
cld
xchg
lds
lret
and
xlat
inc
adc
jnp
sub
js
repz
pushf
mov
inc
in
call
cld
cmp
shlb
enter
push
xchg
cmpsl
push
cmp
mov
cmp
ficomps
jne
or
jns
mov
cmpsb
push
outsb
dec
jo
outsl
pushf
xor
pop
and
jae
and
push
push
or
pusha
sahf
adcb
cmp
mov
es
dec
aas
ljmp
fstpt
inc
inc
or
xorb
popa
aas
xlat
arpl
push
gs
sti
push
mov
xchg
call
in
sub
jmp
inc
fmulp
pop
lret
pop
rcr
in
fs
adc
test
sub
xchg
popl
insl
and
nop
inc
xchg
mov
dec
stos
adc
repnz
daa
mov
hlt
push
mov
mov
inc
out
sbb
cli
pop
adc
adc
in
adc
mov
mov
dec
out
and
mov
mov
rol
rorl
pop
add
mov
aad
add
aaa
lret
mov
nop
and
icebp
xchg
sbb
rcrl
add
fwait
sub
inc
mov
dec
jne
fidivrl
stc
lods
pusha
cmpsb
inc
xchg
jp
xor
in
shl
lcall
cwtl
or
ret
cld
push
lsl
jb
adc
icebp
iret
jle
or
sub
dec
in
cld
fbld
inc
out
sahf
test
in
lahf
mov
fxch
call
lods
cmp
insb
bound
lds
rcll
push
or
jne
jbe,pt
pushw
dec
loope
inc
pop
inc
shl
pop
and
pop
daa
cmp
inc
andl
and
xor
ss
inc
lods
cmpsb
add
cld
iret
dec
mov
lret
mov
adc
pop
enter
lahf
in
and
pop
arpl
ds
leave
addl
jnp
fisttps
inc
fstpl
in
pop
arpl
sti
rcrb
push
jo
lcall
xchg
sti
adc
lds
repz
aaa
fcomi
mov
sahf
out
xlat
mov
push
ret
adc
and
jb
aad
imul
add
gs
sbb
push
adc
or
inc
cmp
fsubs
div
insb
xor
scas
pop
addr16
movsl
push
repz
mov
pop
fnstenv
push
test
or
lea
push
test
add
std
mov
fsubrs
fs
sbb
pop
filds
add
mov
inc
sahf
sub
xor
int3
shrb
imul
decl
cmp
and
roll
mov
xchg
xchg
stos
or
movsl
js
jle
push
xor
das
dec
loop
mov
and
jnp
cmp
jmp
ret
inc
inc
dec
test
xchg
loopne
cmp
sbb
iret
sub
xlat
mov
lock
into
jbe
lret
cld
jo
jno
or
mov
setae
dec
sub
ret
jge
xor
test
pop
lock
dec
mov
xor
cmp
into
test
cmp
enter
clc
add
in
xor
clc
add
loope
rorl
jns
out
and
sbb
xor
jge
rep
ds
jae
adc
dec
fs
ss
clc
adc
sbb
repz
mov
xchg
call
inc
pop
push
inc
add
pop
rol
pusha
sti
imul
mov
fsts
cltd
cmp
cmp
pop
jb
pop
popf
lcall
bound
jmp
push
cmp
nop
movsb
and
in
adc
call
push
leave
mov
mov
in
and
xorb
jnp
rcrb
push
dec
movsb
lods
dec
mov
roll
mov
mov
jp
sbb
mov
call
scas
stc
pop
mov
lds
test
sbb
out
and
out
outsb
stc
push
clc
push
jnp
cltd
push
cltd
add
push
xchg
or
aam
push
fcmovnbe
or
mov
xor
ret
andb
mov
mov
popf
fidivrl
pop
lea
pusha
dec
xor
inc
fcoml
jge
not
push
mov
rorl
ret
in
adc
pusha
aas
push
je
pop
xchg
xchg
stos
test
mov
dec
stos
clc
in
xchg
sbb
repnz
sarl
or
adc
lods
push
shl
cmpsl
lock
bound
divl
cltd
push
add
jl
xorb
int
jmp
test
fidivs
enter
or
in
cmp
inc
sbb
pop
mov
push
je
and
sbb
inc
and
cld
sub
push
and
out
arpl
inc
cmp
shll
xor
add
pop
cwtl
or
mov
push
xchg
pop
push
mov
arpl
das
inc
sub
hlt
insl
outsl
int
xchg
jnp
jne
mov
sarl
cwtl
andb
js
and
xor
ror
and
or
adc
or
mov
in
mov
mov
and
sub
add
jge
movsb
mov
and
insl
xlat
dec
and
and
dec
fsubl
jecxz
xchg
pop
ret
push
and
cltd
idiv
stc
mov
clc
push
or
outsl
push
pop
mov
xchg
inc
fnstsw
sbb
push
ja
mov
or
push
mov
or
test
jnp
call
cmc
insb
mov
pop
enter
loop
shr
mov
lods
test
mov
push
xchg
xchg
mov
add
add
shl
dec
adc
rorb
pusha
mov
dec
mov
or
pop
sbb
shl
dec
mov
xor
xchg
or
out
scas
inc
subl
stos
cmpsl
or
into
mov
jb
push
ljmp
xchg
sbb
push
jmp
inc
mov
ljmp
mov
inc
xchg
jle
inc
movsb
cmc
loope
sahf
dec
push
ljmpw
ret
and
repz
fbld
in
loopne
add
mov
cmp
sbb
cld
in
call
sbb
xlat
fisttpl
scas
cltd
fwait
inc
std
ja
cmpb
pop
xor
loopne
lock
push
inc
cmpsb
lret
call
xchg
ss
mov
test
dec
cmp
test
divb
stos
or
pop
insb
lods
ja
add
jns
mov
pop
or
xor
cmp
fisubs
sbb
mov
cmp
mov
xchg
mov
lret
roll
cmp
call
ret
popa
inc
jp
jbe
lods
cmp
inc
inc
imul
push
imul
sti
pushf
bound
leave
fistpl
sub
ja
and
sub
or
andw
jge
leave
or
or
iret
ljmp
and
cmp
js
inc
push
sub
add
mov
movsl
xchg
repnz
pop
andl
mov
in
andl
insb
pusha
or
enter
repz
xchg
sbb
jno
aad
aas
testb
iret
fadds
xchg
mov
mov
into
push
int3
pop
push
adc
add
mov
pop
and
scas
les
mov
mov
xchg
out
cmp
adc
push
aaa
adc
jp
das
sbb
arpl
or
xchg
jmp
data16
xchg
sbb
xchg
push
push
int3
in
das
lcall
imul
and
xor
cmp
shl
shlb
xor
loopne
xor
icebp
fstps
xchg
in
imulb
mov
push
enter
mov
nop
jge
xchg
incb
sti
xlat
aam
push
xchg
lret
imul
test
mov
inc
adc
add
cltd
xor
mov
lods
jp
inc
ss
stc
scas
ljmp
std
cmp
ror
int3
lock
hlt
call
adc
jp
lea
test
jne
or
xchg
dec
lcall
dec
lods
mov
shrb
adc
xor
xor
sub
icebp
scas
xchg
leave
push
popf
push
mov
js
add
xchg
and
adc
sahf
outsb
icebp
xor
filds
sbb
dec
andl
pop
outsl
lock
mov
and
mov
push
divl
mov
popf
jmp
mov
cltd
shll
cmp
jge
mov
pop
std
push
and
adc
mov
popf
ret
enter
in
push
mov
push
push
adc
addl
cmp
enter
in
cmp
push
mov
lahf
movsl
inc
lea
pop
jp
ljmp
subb
add
xchg
jle
xor
push
xchg
sahf
iret
pop
add
std
or
imul
clc
lahf
add
loop
fstpt
icebp
push
enter
push
jbe
pop
outsb
mov
dec
add
pushf
xchg
in
shll
fildll
push
add
push
adc
adc
in
das
sbb
mov
adc
push
sbb
mull
movsl
rcr
mov
cmp
sbb
mov
inc
mov
or
sub
into
enter
add
mov
adcl
xchg
pop
pop
test
test
cmpsb
add
in
out
pushf
lods
sub
mov
jno
lcall
mov
in
aas
repz
arpl
or
mov
push
xor
ja
cmovbe
mov
lods
call
cmp
mov
adc
stc
add
or
fldl
adc
add
sub
pop
pop
cmp
dec
push
adc
cwtl
daa
jmp
mov
imul
inc
sarb
dec
fldcw
repz
add
into
mov
push
shl
fstpl
popa
mov
lds
sti
sub
adc
ret
jno
sbb
jmp
pop
mov
xchg
add
jne
jae
xchg
loope
gs
add
sarb
pmaxsw
fildl
mov
test
cmp
xchg
outsl
stos
fsubl
sub
mov
push
or
sti
mov
loope
sub
jo
fneni(8087
dec
pop
add
outsb
xchg
fwait
js
ja
shl
dec
js
xchg
ret
mov
inc
scas
push
sbb
xchg
aaa
dec
cmpsl
adc
push
daa
cs
inc
sub
pop
ljmp
mov
bound
xchg
mov
gs
dec
fldenv
loopne
or
mov
jmp
popf
popl
xorb
xor
pop
cld
sub
inc
push
hlt
pop
sbb
movsb
clc
ret
push
aam
xchg
pop
popa
popa
mov
xchg
outsl
jne
add
rcrl
xchg
push
mov
movsb
push
in
fisubs
call
jmp
cmp
cmc
cmp
rcll
xchg
lahf
sahf
xor
cmp
sbb
rol
cld
int3
icebp
les
mov
mov
add
rclb
movsb
and
mov
fdivr
cmp
or
inc
pusha
add
sub
mov
inc
lods
andl
movsb
scas
lahf
add
xor
mov
je
mov
mov
cmpsb
cmp
mov
lea
pop
dec
ss
sti
mov
xlat
pop
add
mov
push
icebp
cmp
inc
add
cltd
pop
cmp
pop
cld
imul
lods
adc
mov
push
sub
jbe
sub
aas
into
jb
js
push
sub
ret
xor
into
xchg
push
icebp
and
or
ret
lahf
dec
loop
movb
popa
aad
add
movl
fsub
xchg
aaa
mov
mov
pop
xchg
or
shl
sbb
cmp
or
mov
pop
das
jo
add
repz
cmp
jo
mov
in
jno
inc
push
xor
mov
mov
stos
shll
inc
out
jp
dec
sbbb
adc
jge
or
std
inc
fidivrl
in
jg
push
pop
push
loop
test
in
aas
inc
div
insb
into
test
xchg
fcomip
call
subb
mov
push
adc
std
in
js
mov
pop
adc
out
mov
ds
dec
dec
imul
in
in
sub
adc
xchg
push
and
arpl
adc
pop
scas
pop
inc
push
xchg
xor
test
push
sbb
pop
test
sbb
dec
push
sar
cli
in
mov
out
out
out
aad
ret
mov
jl
fstpl
sub
cmp
sub
fisubs
fs
mov
cld
mov
mov
pusha
iret
std
and
dec
and
shll
xchg
push
cmp
insl
imul
outsl
in
cli
xchg
cmc
jnp
pop
sub
and
sar
xchg
jmp
imull
dec
push
in
or
pop
dec
ds
or
push
mov
nop
out
and
xor
int3
scas
andb
scas
mov
ja
adc
mov
test
mov
andb
jge
xor
out
rol
and
mov
xchg
xor
aaa
std
push
pop
ror
fnstenv
shll
dec
sbb
pop
imul
adc
loope
sbb
fstps
mov
dec
and
nop
mov
add
into
lds
lcall
and
inc
jae
jbe
imul
inc
test
ret
xchg
cmp
loop
adc
call
inc
sti
mov
sub
inc
push
and
pop
sbb
and
push
inc
push
add
rcrl
out
aas
mov
jecxz
clc
int3
imul
es
popa
xchg
jne
les
dec
outsb
dec
loope
jbe
loopne
jnp
hlt
roll
ja
paddusw
xchg
mov
xor
in
add
and
cmp
jp
sahf
lods
mov
popf
mov
mov
arpl
movsb
pop
and
outsl
jmp
xor
dec
loopne
out
pop
xor
sbb
pop
xchg
imul
stc
sbb
lods
sub
fmul
jbe
sar
push
xlat
inc
cmp
jmp
cld
cmpsl
pop
pushf
pop
adc
mov
xchg
mov
pop
jnp
shrl
cmpb
pop
cli
cmpsb
xorl
aad
xchg
push
pop
dec
cld
xchg
ljmp
sub
xchg
jecxz
mov
mov
jae
add
js
test
loop
cmp
add
jecxz
jecxz
fwait
inc
stos
jae
inc
sbb
pop
adc
mov
ljmp
aas
xor
mov
mov
sub
xchg
addr16
and
add
mov
loop
sub
sub
mov
inc
sti
lret
ret
loopne
ret
inc
sub
and
cmp
xchg
pushf
test
sbb
js
push
cs
xor
aas
repnz
sub
hlt
jle
and
jl
pusha
jge
popa
movsl
dec
add
add
dec
scas
stos
test
insb
mov
lods
stos
push
ds
jo
add
sub
pop
mov
sub
lock
gs
dec
int
mov
pop
js
sub
add
jne
in
dec
sbb
stc
add
cmpsl
aad
or
lret
lahf
es
bound
cli
xor
cmpsb
loopne
lret
out
scas
cmpsb
mov
and
pop
pop
cmpl
and
jb
outsl
inc
xchg
xor
mov
xchg
xchg
push
adc
mov
or
gs
call
cmp
xor
les
lcall
arpl
and
or
jns
jne
rclb
int3
cmpsl
stos
push
lds
push
test
pop
ret
shlb
jne
mov
sbb
xchg
cmpsl
out
pushf
fdivl
jbe
jb
out
or
xchg
int3
pop
push
fs
cmp
inc
in
mov
mov
jno
push
in
stos
ss
cltd
push
movsb
push
and
sarl
jg
in
imulb
cli
js
mov
add
or
insl
mov
sub
add
orl
sti
jo
adc
fcomi
lahf
xor
cmp
cs
mov
xlat
jbe
notb
inc
sub
in
dec
fiaddl
mov
mov
int3
mov
mov
inc
adc
and
cmp
adc
and
fwait
and
inc
out
sbb
std
std
mov
or
jg
pushf
inc
push
pop
icebp
mov
out
out
insl
repz
add
lahf
xchg
addr16
jmp
adc
ficoml
pusha
jno
lods
ficompl
testb
dec
mov
icebp
mov
jnp
and
mov
int3
fnstsw
cmp
icebp
or
out
dec
jno
mov
push
mov
adc
mov
orl
lahf
insl
cs
jl
out
fsubrl
pop
std
inc
scas
lods
mov
pop
inc
dec
jmp
loop
add
jge
in
sahf
test
jbe
and
repnz
mov
mov
lret
jl
mov
dec
pop
or
hlt
jge
sbb
cwtl
loopne
scas
fadds
xchg
push
pusha
clts
lcall
je
ss
sti
out
in
jne
ficompl
push
adc
push
mov
ds
sbb
daa
nop
xorb
cmp
push
sbb
in
inc
outsl
mov
in
xlat
lret
add
xchg
pushf
adc
dec
mov
sbb
test
fsubrp
jns
lahf
xchg
stc
xchg
data16
rol
jp
daa
mov
sbb
jmp
or
stos
xchg
mov
scas
push
push
jge
pop
dec
hlt
sahf
lds
jns
dec
xorb
out
inc
dec
ret
cmp
loopne
pop
mov
dec
test
insl
push
jle
adc
adc
rcrl
loopne
push
shrb
and
inc
test
into
test
insb
test
clc
movsl
aas
inc
xchg
mov
out
inc
add
sub
ret
enter
jl
dec
sbb
jle
sahf
les
jb
fwait
jmp
fcomi
icebp
sahf
xor
push
popf
jmp
data16
sub
sub
smsw
cmp
pop
adc
xchg
mov
cmp
xchg
stc
pusha
je
fsubl
out
adc
ret
popa
xor
lret
add
dec
cltd
cmp
push
dec
repnz
pusha
ds
mov
adc
xor
stos
inc
lcall
fcoms
or
in
addr16
sub
or
sbb
push
ret
sarl
push
loope
ret
pop
sarb
fimull
popl
cmp
pop
nop
out
int
add
lret
out
mov
popf
pusha
mov
xor
in
cli
ss
mov
add
push
cmpsl
sub
popf
xchg
cmp
lret
and
aaa
mull
jo
xchg
aam
inc
js
test
inc
rcrl
fisubrs
cmpsl
mov
sbb
leave
xor
sbb
pushf
push
ljmp
ljmp
xchg
sarb
std
rcrb
adc
jo
mov
mov
mov
jmp
and
xchg
mov
add
test
imul
pop
aad
icebp
lret
mov
popa
xchg
mov
push
push
push
push
xor
scas
and
jne
inc
incb
cmp
xor
stc
mov
js
loop
leave
dec
shll
outsl
sbb
xchg
xor
jne,pn
movsl
and
sub
outsl
add
stos
and
notb
dec
ljmp
jnp
pop
insl
mov
fidivl
sub
aad
xchg
out
push
jnp
and
adc
cli
daa
xor
jns
jecxz
xchg
xchg
xchg
imul
and
push
fwait
ret
ljmp
imul
jle
fnstenv
ss
inc
xchg
sbb
imul
andl
sbb
fisubs
fadds
inc
lock
imul
mov
fistpll
push
pop
test
cmp
lahf
xchg
call
mov
add
repz
andl
push
nop
sub
test
xchg
pop
jae
xchg
dec
sahf
adc
xor
int3
outsb
in
aas
movl
aas
xchg
repnz
jno
mov
std
lcall
jnp
add
inc
inc
mov
mov
sub
mov
int
mov
jle
or
stos
xor
mov
cmpsl
stc
enter
fnsave
push
dec
and
sub
enter
jge
jle
sbb
mov
ret
sbb
jge
call
pop
cmc
imul
mov
mov
imul
and
dec
sbbb
fldcw
push
adc
loope
stos
mov
stos
or
pop
adc
scas
add
popf
dec
inc
movsl
push
rclb
ss
xchg
add
les
cmp
mov
test
xor
jp
je
xor
inc
cmpsl
jg
jge
cltd
in
call
jns
mov
insl
mov
lahf
xlat
loop,pt
scas
xchg
mov
dec
mov
mov
pop
and
insl
shll
call
jge
movsb
and
mov
and
sbb
insb
fdivl
xchg
shll
add
inc
nop
lahf
pop
fcomps
xchg
imul
and
adc
xor
shll
hlt
outsb
cmp
cmp
xchg
shll
call
mov
nop
xchg
sbb
or
arpl
cmp
xor
lods
or
scas
pop
mov
cltd
cld
in
mov
xchg
and
sbbl
lods
fidivl
adc
in
cltd
sub
mov
cmp
xchg
and
lcall
sub
inc
in
mov
dec
or
push
lock
jmp
lret
adcb
lea
inc
jge
sbb
aad
and
into
push
xchg
mov
pop
es
out
sub
add
xchg
pushf
jns
xchg
dec
pop
hlt
pusha
add
pop
mov
mov
fwait
dec
sbb
mov
ficompl
mov
and
fsubrl
gs
mov
shl
outsb
pop
xor
pop
dec
mov
sar
mov
ds
jecxz
sarb
mov
sub
fs
pop
dec
call
fdivl
push
add
pop
call
fldcw
js
add
sub
fbstp
pushf
pop
pop
mov
xor
mov
imul
mov
inc
add
in
or
adc
arpl
data16
hlt
add
fldcw
mov
dec
out
add
aas
push
push
cltd
add
xchg
pop
cmp
mov
fs
adc
jns
loop
shl
sub
and
inc
fcomps
jle
fildll
testb
xchg
pop
pop
pushf
imul
cmc
cmp
sub
xchg
or
or
data16
xorl
inc
cmp
push
push
or
cwtl
mov
xchg
add
sbb
loopne
cmp
xchg
inc
dec
in
sub
xchg
cmp
ss
inc
push
xor
insb
cmp
pop
in
xchg
out
dec
shrb
repz
push
testb
add
je
ret
sub
cmp
jge
mov
adc
pop
mov
sub
ss
fildll
xchg
aad
cmp
mov
scas
cmp
test
int
mov
in
repnz
or
rcrb
outsb
outsl
ljmp
jp
stos
lds
push
je
leave
jge
mov
aaa
dec
mov
mov
sub
lcall
pop
cmp
jmp
add
pop
aas
cmp
mov
stc
popa
mov
lea
rcrb
scas
rcl
sub
std
dec
push
xchg
pop
push
adc
pop
pop
mov
lea
insb
fldt
sbb
cmp
pusha
push
pop
cmc
jns
jo
push
jbe
add
jl
rclb
xchg
adc
and
add
or
subb
lcall
out
das
hlt
pop
mov
dec
cmpsl
sbb
push
add
inc
idivb
test
xchg
pop
ret
fbld
out
icebp
aaa
test
cmp
testl
push
cmp
cwtl
add
icebp
jge
cld
inc
rcr
inc
push
mov
cltd
repnz
add
inc
ret
popa
dec
jae
sub
imul
mov
push
ret
daa
mov
cmp
mov
mov
mov
jge
mov
xchg
and
movsl
mov
fnstenv
mov
movsl
xchg
lods
xchg
cs
mov
dec
xor
data16
aaa
inc
ljmp
dec
rorb
int
in
mov
jns
jne
sbb
push
pop
fs
lcall
jl
aas
sub
xchg
testl
pop
cwtl
and
push
mov
adc
mov
push
out
mov
subb
jp
mov
stc
dec
adc
add
pop
push
dec
and
hlt
fbstp
lods
push
movsb
cli
pushf
aaa
mov
or
jns
mov
xchg
andl
cmpsl
or
inc
pop
fsts
lahf
add
pop
iret
and
or
dec
xchg
mov
stos
or
mov
cmc
jae
ficompl
inc
adc
out
xor
jp
dec
add
xchg
test
lds
fdivrl
add
stc
call
enter
lahf
in
rcrb
mov
mov
xor
or
test
lods
mov
je
fbstp
mov
mov
enter
xchg
pop
fsubs
in
add
push
test
or
push
mov
popa
fsub
mov
mov
cwtl
test
and
and
shr
mov
sbb
test
jg
push
sbb
dec
scas
jns
push
adc
jp
in
or
imul
movb
aas
repz
push
cmpsl
subl
cld
cli
sbb
sbb
and
rcr
xchg
add
mov
sbb
test
sub
mov
dec
and
imul
data16
outsb
div
push
dec
push
lcall
pushf
mov
fistps
test
call
and
fmul
subps
arpl
out
sti
sub
jns
in
push
adc
jle
xor
push
xchg
lock
sub
lret
dec
push
scas
lret
jecxz
inc
pop
mov
push
sub
in
lods
in
lahf
push
xlat
jge
adc
pop
sub
int3
inc
sbb
xor
fidivl
sub
pop
adc
push
enter
stos
push
stos
out
jbe
mov
jl
push
pop
es
dec
sarb
enter
push
outsl
push
gs
push
leave
or
lds
pop
mov
mov
push
iret
inc
popf
clc
shlb
test
xor
cld
xchg
scas
jne
das
scas
ss
popf
add
lods
mov
cli
adc
stos
jl
mov
xor
add
xchg
push
xlat
mov
in
mov
sub
scas
and
add
pop
ja
pop
shrb
xor
shll
push
sub
repz
in
test
out
sbb
leave
add
mov
rolb
cmc
mov
pop
xor
mov
mov
mov
jecxz
mov
inc
mov
les
pushf
arpl
xchg
or
les
mov
sub
xchg
mov
std
fs
inc
fldl2e
mov
mov
mov
popa
add
sbb
push
mov
fwait
xchg
stos
lods
mov
es
sub
add
pop
xchg
insb
cmp
rolb
bound
insb
les
xchg
orl
and
mov
mov
mov
xchg
inc
sahf
cmp
dec
cli
das
push
mov
ret
fisubs
jns
xchg
jne
int
fs
add
sahf
sub
add
push
cmpsl
rcrb
mov
jae
or
lods
dec
pop
outsl
out
and
pushf
rolb
pop
pop
iret
push
xchg
mov
ffreep
test
push
sub
lds
mov
scas
dec
test
stc
push
inc
lahf
js
gs
and
lret
cltd
ficompl
pop
mov
fistpll
xchg
ljmp
int3
mov
lcall
out
mov
repnz
into
testl
pop
in
push
data16
push
inc
in
mov
rorl
imul
pop
xor
fmull
arpl
aad
cmp
movsl
dec
in
xor
jge
imul
in
mov
sub
mov
rcll
mov
test
sub
lea
aaa
push
pop
dec
out
fbstp
fisttps
into
pop
lods
push
leave
lcall
lods
push
mov
or
push
loopne
cmp
dec
in
data16
add
out
ja
mov
test
mulb
loope
icebp
jo
jmp
mov
pop
test
das
sub
or
pop
negl
pop
hlt
mov
fcmovnu
fcmovbe
in
mov
xchg
popf
xchg
popf
cmpsb
mov
dec
aas
mov
sub
xchg
sahf
jne
rcrb
stos
aam
xchg
sub
out
inc
xlat
cli
dec
insl
dec
fildll
jp
ljmp
add
aam
loope
shrl
cltd
mov
xchg
inc
ds
xchg
scas
sub
push
and
inc
mov
ror
dec
dec
mov
shll
pop
add
outsb
repnz
sub
das
sub
jo
push
jne
dec
jbe
fmuls
or
inc
dec
out
or
jb
dec
push
jb
jmp
jns
push
pop
filds
gs
aad
lea
sub
scas
jbe
pusha
add
lods
add
sarl
hlt
pop
mov
sub
test
mov
scas
or
sub
push
in
iret
int3
int3
lahf
jge
stos
subb
pop
pop
mov
jle
test
pop
out
loope
pop
lret
nop
mov
out
clc
bndldx
xchg
add
adc
insl
leave
aam
sarl
loop
in
repnz
hlt
subb
mov
cmpsl
pop
lods
xor
arpl
adc
and
pop
call
and
mov
cld
or
aas
xor
inc
sub
aad
cs
or
js
hlt
dec
testl
icebp
shl
cmp
psraw
jg
push
pop
sahf
arpl
dec
and
pop
push
lcall
imul
dec
push
fnstsw
cltd
stos
jmp
push
sbb
inc
push
leave
cmc
jbe
mov
gs
pop
pop
rorb
ret
cli
hlt
mov
mov
shrl
push
lcall
movsl
test
movsb
les
shlb
dec
dec
mov
cmpl
leave
jbe
mov
cmp
arpl
cmp
out
dec
mov
pop
xchg
sbb
stos
or
lcall
popf
aas
in
fidivs
fsubl
in
sbb
out
mov
leave
dec
mov
jbe
je
fldpi
fistpl
lods
rorl
imul
adcl
adc
mov
sub
jno
dec
out
and
lods
ds
cmp
out
cld
mov
ljmp
aaa
xchg
lcall
fwait
mov
int3
stc
pop
movsl
je
mov
stc
mov
and
adc
push
and
push
aas
leave
jle
inc
call
push
pop
push
add
icebp
fwait
xchg
imul
jmp
mov
push
sbb
arpl
ret
xor
push
add
or
decl
cmp
jne
pop
loopne
loope
pusha
into
lahf
mov
mov
jbe
or
xchg
rcrb
jecxz
out
pop
adc
lret
nop
mov
insb
xor
arpl
repz
pop
cs
lods
int
mov
test
jmp
xchg
fs
push
cmc
adcl
xor
lahf
and
push
pop
in
adc
aaa
cltd
insb
dec
lret
push
es
imul
faddl
out
xor
in
aaa
into
int3
cmc
loopne
test
test
lea
add
cld
ret
mov
push
jns
sahf
adc
jnp
cltd
movsl
and
out
dec
fwait
push
and
mulb
cltd
ljmp
mov
movsl
or
xchg
test
ds
idivl
movsb
mov
adc
jmp
sbbl
push
in
filds
mov
xchg
cmpsb
mov
mov
xlat
sbb
and
aas
push
pushl
or
gs
pop
sub
cmpsb
cmp
mov
pop
sahf
imul
subl
mov
outsl
cld
and
sbb
mov
outsb
loopne
lahf
inc
push
insl
mov
cmp
aad
inc
xchg
bound
imulb
repnz
adc
aad
gs
fisubl
sbb
pop
pop
lds
pusha
arpl
pop
subl
sbbl
push
fcompl
xchg
jle
mov
fwait
and
add
test
sbb
addb
cmp
mov
jns
stc
jl
pop
cmp
fimuls
cld
dec
pop
add
mov
jns
call
dec
mov
mov
cltd
addr16
mov
das
data16
push
xchg
lret
pop
jno
scas
ja
iret
pop
mov
mov
sub
stc
mov
stc
in
cltd
or
pop
push
out
aam
and
mov
cmpsl
out
sbb
add
sub
xchg
fisubrs
mov
lret
xchg
fwait
add
adc
and
mov
stos
lcall
pusha
jns
leave
clc
push
shrl
out
mov
xor
scas
and
inc
fdivs
je
adc
jle
push
jmp
lock
mov
mov
in
stos
loop
cmp
sbb
fwait
daa
movsb
adc
std
fsubrl
jp
fstpl
pop
mov
sbb
inc
dec
idivl
shrb
jns
fs
insl
xor
ret
out
iret
mov
xchg
daa
mov
das
int3
cmp
jne
and
cld
push
das
or
test
outsb
mov
xchg
sub
or
xlat
outsb
mov
cmp
push
sub
cltd
fmull
icebp
repz
sbb
into
and
fisubrl
cmp
jae
push
lahf
push
mov
lds
nop
lret
mov
xchg
pop
fcompl
or
idiv
pop
xlat
data16
sti
in
stc
cmp
sub
shl
or
sbb
in
lret
mov
or
add
rcl
sub
scas
scas
ds
jns
lods
xor
inc
inc
add
into
push
lods
and
or
shr
sbb
cmp
or
rol
or
movsb
dec
xlat
mov
xchg
jb
jge
lahf
outsl
inc
fcoml
mov
push
stos
incb
aam
iret
push
enter
and
sub
bound
mov
push
and
add
mov
into
or
cmp
push
mov
mov
mov
rcrl
cvtpi2ps
xor
jno
lock
mov
push
cmp
sub
cld
inc
jg
addr16
rcl
or
lods
mov
cmpsb
sti
sbb
mov
shlb
mov
jb
loope
push
mov
inc
shl
int3
mov
bound
ficoml
xor
jge
sahf
cmpsb
push
cs
sarb
mov
push
test
adc
pushf
das
cmpsl
clc
mov
int
mov
lret
in
add
out
sbb
jne
je
das
jb
xor
mov
jle
mov
test
jle
leave
sbb
xchg
loop
or
xor
loopne
mov
push
sbb
rcrl
xor
ret
sbb
comiss
call
xlat
sar
ret
sub
xor
in
out
outsb
sub
sti
and
and
insb
out
sub
cmp
int3
sbb
mov
shrl
xchg
xor
inc
inc
push
xchg
stc
push
xor
loope
pushf
mov
sub
or
decl
or
popf
cmp
inc
int3
les
add
popf
xor
movsb
pop
fildll
fldl
iret
cwtl
sub
rclb
scas
daa
gs
mov
cmc
dec
pop
es
jae
sbb
mov
jg
or
pusha
jmp
int3
decl
cmp
sub
pop
push
pushf
aas
xchg
mov
cmp
push
dec
shl
push
jmp
shl
cmp
fdivrp
cmc
dec
pop
cmp
mov
cmp
mov
sbb
sti
lock
fadd
xchg
mov
jnp
add
or
insl
addr16
std
mov
pop
clc
and
bnd
stc
insb
cmp
jo
push
mov
and
xor
scas
int
cli
fwait
xchg
popa
pop
pushf
int
fwait
adc
and
subb
sub
mov
ljmp
xchg
xchg
sbb
mov
pusha
sbb
cmp
jb
lret
bound
int3
jnp
iret
xchg
jbe,pt
out
mov
pop
shrl
add
jbe
pop
icebp
mov
push
pop
int
hlt
sbb
repnz
cld
push
cmp
sbb
mov
paddsb
aam
mov
push
test
rcrl
stos
out
arpl
jge
js
loope
mov
mov
push
push
dec
jbe
mov
pop
and
test
xchg
mov
jb
mov
in
mov
sbb
inc
popa
sbb
ds
mov
popf
ds
adc
mov
test
movsl
vmwrite
sub
dec
jns
clc
add
mov
loope
mov
decl
mov
jo
or
mov
out
es
mov
xchg
jns
jne
repnz
out
aaa
in
push
mov
xchg
lahf
jno
lcall
sub
repnz
repnz
or
xor
scas
xchg
push
out
aad
pop
pop
insl
push
jo
sub
push
pop
fsubl
shrb
out
pop
sti
enter
outsb
sarl
sbb
nop
psraw
add
out
clc
das
xor
pusha
notb
out
leave
mov
lock
push
push
fisubl
adcb
fs
jnp
repnz
pop
into
es
sub
fadd
and
pop
stos
sub
push
xchg
and
in
mov
or
and
dec
lret
mov
and
cs
or
repnz
inc
das
jp
call
dec
push
mov
dec
sti
add
pop
mov
and
outsl
push
lds
push
and
rorb
dec
fwait
lods
pop
push
adc
sbb
mov
data16
xchg
subl
mov
jnp
or
cmp
mov
mov
jp
lahf
jo
push
push
pop
sahf
mov
mov
pop
xchg
pop
fnsave
sbb
jb
mov
cmp
testb
xchg
sbb
leave
test
or
lods
pushf
cmp
shlb
cli
mov
mov
popa
shlb
add
push
popl
in
xchg
adc
into
xchg
pusha
cmp
and
test
fwait
add
mov
movsb
xor
mov
fstps
cmpl
xchg
mov
call
sub
cli
push
pop
faddl
call
cmpsl
jns
nop
inc
xchg
in
imul
cmc
and
pop
xlat
dec
or
push
pop
enter
stos
sub
fimuls
xchg
ficomps
xchg
dec
mov
ja
cmc
mov
adc
movb
mov
pop
scas
sti
je
mov
mov
cmp
daa
jp
loop
pop
adc
lahf
outsl
add
out
xor
mov
push
shl
leave
xor
push
popa
pop
adc
mov
popf
inc
adc
int3
test
push
fdivrl
testl
mov
rorb
mov
mov
sbb
inc
sub
cmp
das
push
jbe
lahf
outsl
pop
out
mov
or
cld
test
jmp
mov
lahf
out
mov
test
mov
outsl
ss
aaa
mov
out
mov
mov
outsb
or
pop
cld
mov
push
add
push
decl
push
popf
adc
arpl
aas
test
inc
sub
movsl
rol
out
sub
subb
jbe
daa
xchg
mov
push
daa
test
add
clc
pop
add
add
jne
or
sti
mov
xchg
test
je
loope
jp
in
jl
xchg
dec
ss
dec
fwait
stc
dec
test
aad
cwtl
stc
scas
out
jo
mov
jge
js
xor
daa
push
negl
jmp
stc
out
nop
out
mov
and
mov
inc
xor
push
jmp
outsb
adc
xor
or
iret
mov
add
pusha
mov
add
out
xor
call
addr16
aam
add
imul
movsl
aas
aam
daa
push
fs
pop
add
loope
xor
lahf
adc
lret
into
cltd
adcb
xor
sbb
das
loop
arpl
mov
dec
xorb
dec
inc
mov
push
dec
movsl
push
and
loopne
inc
pusha
sti
mov
mov
incl
fsubrp
pushf
mov
xchg
test
xorb
inc
sbb
fwait
test
outsl
push
mov
shrl
xchg
outsb
pop
pop
repnz
add
xor
repnz
jae
sbbl
decb
push
add
jl
or
pop
xor
movsl
mov
dec
gs
dec
nop
adcb
mov
jle
xchg
fwait
imul
jo
dec
xchg
pop
push
pop
fwait
xchg
ljmp
aam
out
cwtl
mov
add
enter
dec
fwait
test
inc
cmp
mov
xlat
or
shl
pop
push
xor
lea
ja
roll
mov
and
xor
inc
inc
imul
mov
ljmp
loope
xor
dec
inc
adc
into
push
sarl
dec
addr16
loope
sbb
enter
ljmp
js
loope
mov
aam
pop
add
stos
pop
push
push
rcll
movsl
cmc
and
mov
xor
addl
jo
cmpsl
adc
ljmp
xchg
xlat
je
ds
les
data16
dec
inc
jne
mov
mov
fmull
mov
lock
imul
mov
or
movzwl
pop
add
fisubrs
in
sub
imul
dec
dec
xorl
repnz
xchg
rcll
push
and
add
sub
adc
cwtl
mov
adc
mov
add
adc
cld
pop
push
cmp
xchg
imul
cltd
insb
jns
test
daa
inc
add
jp
or
sbb
test
dec
sbb
mov
mov
jp
rcl
cmpsl
loopne
leave
enter
or
dec
xor
pop
mov
pushf
pop
das
int
aad
ror
aad
push
fsts
cli
mov
pop
andl
lds
mov
mov
jge
mov
cmp
lret
xor
mov
jp
stc
pop
fsubl
ret
insb
es
dec
and
ret
lock
sub
xorb
push
pop
imul
pop
fsubs
add
jle
jae
inc
xchg
and
mov
mov
nop
and
mov
mov
xchg
rolb
mov
and
arpl
pusha
push
push
rcr
clc
pop
sbbl
mov
xchg
pop
cmp
repz
aas
scas
insl
jmp
std
in
fildll
mov
mov
fs
addb
push
push
sub
cmp
cmpsb
cwtl
movsl
pushf
or
sbb
mov
sar
mov
fwait
sahf
mov
bound
jl
fists
adc
data16
xlat
movhps
cmpb
sbb
imul
mov
adc
xchg
sti
or
mov
lahf
xchg
and
lods
inc
in
sbb
dec
jg
mov
sbb
roll
out
or
mov
test
or
fs
pop
inc
inc
jb
jmp
cmpb
imul
push
int
mov
mov
cmp
mov
mov
mov
lods
loopne
mov
ja
jbe
pusha
xchg
and
mov
adc
xchg
repnz
in
mov
jns
push
fdivs
imul
rorl
xorb
cmpsb
pop
fadds
cmp
hlt
sub
loop
xchg
icebp
addl
ss
daa
sub
pop
inc
jg
ljmp
jle
push
pop
dec
dec
sbb
jl
lahf
lods
fnstcw
sahf
mov
outsl
mov
cmp
and
sub
adc
and
pusha
add
lfs
mov
mov
xor
scas
xchg
cmp
mov
outsb
lret
fisubl
lahf
movl
test
sub
test
xchg
call
add
jle
push
jbe
out
add
aas
scas
pop
dec
scas
loopne
xchg
mov
sbb
repnz
pop
aad
xorl
loop
mov
clc
jmp
dec
dec
mov
je
sub
ss
scas
dec
sarl
push
jnp
xchg
xchg
loope
pop
andb
mov
cs
js
xor
jnp
movsl
lea
inc
jle
push
movsl
jnp
lret
into
and
mov
push
add
fdivrs
loope
bnd
minps
xor
and
divl
sub
lret
notl
mov
out
cwtl
into
mov
xor
out
jnp
and
adc
mov
cmp
out
mov
xchg
insb
dec
das
imul
sahf
push
cltd
pushf
sbb
push
pop
pop
stos
clc
adc
mov
pop
xchg
mov
jnp
sbb
mov
das
add
mov
mov
enter
call
mov
stos
xor
mov
iret
shr
fldcw
push
imul
je
aam
repz
mov
pop
insl
mov
push
stos
pcmpgtw
arpl
mov
movsb
adc
adc
cmp
push
std
xor
fdivs
movsl
mov
or
fldenv
fcompl
ret
stc
inc
dec
jo
add
jno
jge
in
lods
xorb
loop
mov
sbb
leave
inc
rcrl
sub
or
ljmp
int3
sub
cld
inc
push
stc
cmp
cmpsl
test
repz
or
imul
dec
lock
sti
push
mov
cmp
arpl
popf
mov
loop
jbe,pn
mov
lock
rcrl
rcrl
loope
mov
cmp
push
aad
xor
mulb
jmp
sub
iret
sub
mov
mov
dec
bound
sti
stc
adc
addr16
sbb
shll
sub
mov
je
stos
mov
das
fcompl
sbb
js
rcrb
nop
inc
dec
lds
fwait
andb
jg
in
fcoml
clc
jle
or
lahf
ljmp
cs
lds
ficoms
xchg
subl
cmp
jp
dec
jno
notb
or
imul
jp
xchg
xchg
sbb
out
adcl
fisubs
arpl
mov
sahf
pop
dec
or
ret
xchg
mov
leave
ljmp
xor
sub
xor
xor
push
xor
xchg
stos
insb
lahf
rolb
scas
push
mov
icebp
in
mov
sbbl
add
fs
das
mov
xchg
cmp
add
inc
gs
insl
out
outsl
pushf
or
dec
jns
pop
and
fstps
pop
push
or
jmp
jnp
rorl
mov
lock
cwtl
mov
xlat
dec
je
outsl
push
lcall
mov
cmp
jae
fimull
jno
popf
lock
fdivs
dec
sbb
lahf
aad
xor
fistps
inc
xchg
mov
push
test
in
dec
cwtl
nop
lahf
imul
jecxz
adc
into
pop
outsb
fnstenv
push
mov
jno
cwtl
pop
movsb
add
stc
shll
mov
fimuls
sti
stos
xchg
xchg
cld
inc
out
jno
or
xchg
loope
inc
push
mov
lret
mov
push
mov
dec
imul
pushw
push
fs
fisttps
sub
shlb
inc
cmp
bound
in
ret
push
in
add
xchg
jge
shrb
cmpsb
into
xor
pop
jae
rorl
in
pop
and
or
adc
loop
aaa
push
dec
sbb
int3
adc
mov
and
gs
divb
inc
dec
icebp
iret
pushl
inc
into
push
cwtl
mov
xor
clc
jp
movsl
mov
push
mov
fmul
pushf
shrl
pop
test
aaa
rcrb
mov
fucomi
in
loopne
rcrl
lods
mov
cmpsl
xor
data16
jns
movsl
ja
mov
insb
fs
aas
add
dec
xchg
out
jb
sbb
cmp
subl
pop
xchg
pusha
dec
jno
push
sbb
xchg
cli
xchg
dec
push
movsl
cltd
testl
stos
cld
in
adc
lcall
pop
mov
int
mov
insl
rorb
dec
fs
movsl
enter
jbe
pop
and
lock
loope
cmp
sbb
fcomps
mov
mov
jmp
push
xor
rorb
xchg
js
lcall
push
inc
pop
pop
mov
inc
fidivrl
jge
pop
cmp
dec
movsb
sti
dec
sbb
mov
aad
lret
jo
out
lods
cmpsb
shrl
push
cltd
sbb
sub
mov
mov
sub
out
mov
mov
mov
mov
loopne
adc
leave
sbb
mov
out
sbbb
rorl
dec
es
jae
int3
mov
in
mov
dec
lret
xchg
pop
addr16
xchg
mov
and
mov
cmp
scas
push
add
mov
add
sbb
pop
jne
pop
mov
dec
cmc
inc
pandn
mov
xchg
xchg
sub
mov
aad
test
mov
add
call
add
stos
push
cmpsl
mov
jo
and
fisttpl
jg
fwait
push
mov
xchg
enter
mov
mov
es
push
sub
cmpsl
in
pusha
mov
pop
cmp
cmp
insl
push
scas
pop
lret
mov
cmp
or
push
push
jp
push
add
xor
inc
call
push
dec
pop
pop
xchg
testl
mov
shlb
mov
add
stc
xor
xchg
dec
loopne
or
movsl
dec
into
mov
adc
sbb
pop
dec
fsubp
hlt
sub
hlt
ss
xchg
adc
sub
clc
test
sbb
shlb
or
xchg
jno
negl
insl
je
push
add
mov
pop
inc
mov
xchg
jns
daa
les
sbb
pop
push
mov
xlat
push
xor
aam
arpl
dec
xor
sbb
daa
stc
inc
add
jno
mov
aaa
add
arpl
in
push
daa
add
mov
push
inc
cwtl
sti
data16
sbb
mov
dec
push
clc
cmc
jle
pushf
sbb
mov
scas
outsb
daa
xchg
ljmp
adcl
cmc
pop
mov
jbe
mov
clc
xchg
and
lret
pop
xchg
jb
subl
sub
mov
lods
jbe
fdiv
sbb
mov
jno
fadds
mov
stos
lahf
mov
jecxz
imul
repz
ljmp
push
out
mov
ljmp
xchg
or
lcall
add
stc
cmc
leave
mov
addb
add
jmp
sub
aad
aam
jl
wrmsr
push
call
add
pop
add
adc
sbb
jg
shll
lock
es
add
lret
dec
fldt
sbb
pop
test
xchg
push
cmp
add
inc
add
xchg
pusha
data16
idiv
lahf
sbb
pop
sbb
cmc
dec
andl
std
lods
mov
mov
outsw
sub
iret
add
out
sti
insb
aad
xor
int
mov
in
mov
dec
jb
sbb
add
cli
int3
mov
mov
push
cmpsl
cmp
pop
fidivrs
pop
ss
mov
lcall
nop
out
sti
sbb
cmpsb
cmp
outsl
ljmp
mov
inc
mov
das
sbb
adc
sbb
xor
stos
test
cmp
add
or
add
jb
push
in
subb
mov
sbb
xchg
and
and
add
lret
pop
pop
fwait
jb
repnz
sbb
xlat
pop
ss
in
push
movsl
outsb
push
popa
mov
addb
daa
int
and
loopne
pop
or
scas
pop
pop
insb
cmp
ja
and
and
insl
cwtl
stc
ficomps
mov
rcll
loope
push
xchg
adc
inc
and
fs
push
and
lret
push
imull
stc
pop
inc
into
ret
lret
aas
je
mov
xchg
inc
push
gs
aas
out
xchg
pop
sahf
pop
enter
scas
shl
add
test
sbb
stos
call
inc
or
dec
mov
movsb
xchg
orb
xor
xchg
mov
cmp
pop
in
or
int3
push
shll
outsl
cwtl
mov
ds
sbb
or
sub
jb
mov
nop
mov
rolb
push
pop
rorb
dec
data16
xlat
xchg
inc
sub
add
test
and
and
xchg
lds
add
mov
dec
ljmp
aad
lret
inc
sub
mov
xor
inc
sub
je
add
mov
jno
insl
loop
aaa
push
xchg
nop
outsb
mov
sbb
cwtl
stc
mov
enter
dec
out
jbe
out
or
push
mov
ficomps
xchg
mov
sbb
add
das
mov
clc
xchg
cmp
sarb
lods
push
outsl
dec
or
sub
mov
adc
mov
xor
aad
adc
mov
adc
mov
pop
mov
nop
mov
jae
or
cmp
aad
nop
lret
std
mov
test
push
hlt
cltd
adc
cmp
adc
test
add
aam
cld
int
sub
fbld
divb
xorl
xor
add
jno
movsl
sahf
dec
arpl
lahf
add
push
cmp
lods
int3
mov
xchg
add
sti
in
iret
aam
mov
cmp
int
inc
inc
adc
pop
push
jns
mov
dec
testl
arpl
pop
mov
push
push
xchg
pop
movsb
popa
pop
orl
cld
xor
insb
mov
pop
push
bswap
daa
iret
xchg
sub
or
mov
mull
sbb
lret
jae
aas
je
fsubrl
roll
xchg
arpl
stos
and
mov
cli
dec
mov
fldcw
dec
les
xchg
xchg
clc
icebp
in
rolb
sub
test
or
inc
pop
mov
pop
cld
jmp
orl
xchg
out
lds
mov
std
pop
mov
and
xchg
xlat
icebp
xchg
jb
xor
sub
add
pop
push
in
cld
int3
dec
jl
ret
xor
pop
arpl
pop
aas
stos
mov
popf
sub
mov
inc
or
std
imull
loope
adc
fs
aas
jne
out
popf
fstl
mov
xor
push
push
mov
dec
pop
add
jns
inc
ret
add
xor
adc
mov
xchg
scas
imul
xchg
call
mov
xchg
and
fstl
sub
sti
das
imul
sub
lea
lods
jg
into
je
stc
into
pop
scas
sub
sub
inc
nop
fmul
orb
pop
scas
jecxz
adc
sbb
or
repz
add
fistpl
cltd
push
loopne
mov
adc
iret
pop
add
daa
shrl
in
pop
leave
adc
sub
cmp
push
or
inc
cwtl
pop
jne
sub
jmp
js
xor
cs
iret
push
jne
cld
jmp
jmp
push
je
pmaddwd
movsb
das
adc
inc
adc
mov
stos
sub
mov
jo
xor
pushf
mov
mov
inc
xchg
imul
icebp
jbe
dec
arpl
pusha
mov
mov
int3
ss
into
lret
fisttps
push
es
out
mov
aas
adc
int3
fldl
loopne
adc
out
aad
jbe
mov
ss
push
test
push
scas
pop
cld
fdivr
roll
data16
iret
push
aam
pusha
xor
ret
cld
pop
out
mov
lcall
inc
test
adcb
pop
lret
push
mov
push
gs
push
dec
adc
mov
lock
mov
stc
ret
gs
outsl
mov
sbb
and
mov
jno
fstl
and
imul
jb
push
inc
loop,pn
cmp
cltd
sti
and
or
pop
stos
or
shl
repz
pop
push
cmp
xchg
insb
fiaddl
dec
clc
mov
in
and
mov
xor
mov
or
inc
push
or
mov
out
jne
pop
imul
test
incl
cs
pop
shll
mov
into
lds
mov
add
ret
int
daa
ds
hlt
or
pop
fadds
adc
mov
xor
outsl
divb
jge
push
add
sbb
es
xchg
jbe
cmp
or
std
addl
cmpsb
mov
inc
movsl
stos
test
je
shll
mov
int3
jo
call
lcall
cmp
sub
dec
test
push
pop
packuswb
ja
sub
sbb
mov
lcall
push
fisubrs
xor
pushl
xor
lea
mov
jle
clc
inc
loope
pop
popa
mov
lcall
loop
mov
or
call
jp
push
mov
add
sbb
sbb
hlt
sbb
inc
or
push
xlat
ror
sbbl
outsl
mov
dec
cmc
es
ljmp
mov
rcl
movsb
ffree
xchg
imulb
push
sbb
mov
cmp
xor
push
jp
pusha
pop
sub
call
push
xchg
dec
ds
das
and
out
sbb
pop
out
lds
inc
fs
bound
fcoms
in
in
daa
mov
mov
jp
cli
adc
subl
mov
ret
imul
vpcmpgtb
mov
mov
sahf
sbb
out
dec
sahf
insb
mov
inc
sbb
fbstp
hlt
ficompl
or
push
ret
scas
testl
mov
mov
jns
mov
data16
notb
dec
jbe
ja
aas
jno
outsl
cmp
iret
call
jbe,pt
js
bound
xchg
in
xlat
rolb
cmp
mov
cwtl
jne
bound
mov
rclb
repz
mov
sub
cmc
imul
nop
repz
cmp
les
xchg
inc
jno
into
push
push
arpl
add
out
xor
mov
jecxz
icebp
cli
dec
je
shlb
shlb
xor
sub
out
insb
sbb
sub
int3
imul
mov
dec
shll
sbb
loopne
ja
mov
ret
rorl
mov
in
cs
sub
dec
test
or
cld
push
cmp
mov
ret
decb
pop
call
dec
mov
pop
jp
pusha
jo
sbb
jne
mov
rcrb
dec
adcl
rcrb
pop
jg
movsl
mov
push
add
jo
cld
xchg
mov
cs
bnd
mov
xchg
aam
dec
xchg
icebp
adc
mov
push
das
adc
xchg
push
lahf
jmp
cmp
xchg
add
mov
jns
xchg
sarb
dec
sti
sbb
cmp
cwtl
ret
or
jl
mov
add
scas
int3
adcl
jg
mov
cmp
jo
enter
orb
in
mov
repnz
das
mov
cmp
mov
cmpsl
lahf
push
push
inc
inc
into
mov
jae
imul
cmp
clc
pop
pop
bound
cmp
add
cmp
in
add
lret
jl
imul
pop
icebp
js
mov
int
xchg
add
js
data16
cld
leave
mov
jl
lret
xor
hlt
ret
jg
ret
or
lds
sti
ljmp
jmp
test
iret
nop
and
cmp
in
ret
cmp
filds
repz
loop
in
xor
mov
jbe
mov
mov
popa
cmp
gs
pop
stc
es
fwait
imul
mov
pop
stos
push
lea
push
in
push
stos
pop
mov
lea
sbb
mov
xor
and
test
add
add
lahf
jbe
mov
push
push
mov
hlt
jnp
imul
dec
loopne
mov
fbld
aad
outsl
repz
pop
test
push
add
and
cwtl
lahf
std
outsl
push
adc
inc
out
ljmp
cmp
dec
sahf
sbb
sub
fsubs
int3
xchg
test
mov
in
or
rcrl
push
adc
pop
add
sbb
jo
pop
push
add
push
ja
movsl
test
daa
aas
pop
fsubrp
inc
test
insb
mov
push
mov
adc
mov
movsb
mov
inc
fistpll
xchg
aaa
inc
adc
jns
leave
inc
push
mov
fldl
mov
or
sti
popf
xchg
inc
jp
mov
and
cmpsl
out
les
cmpsl
into
mov
push
imul
xor
push
inc
sub
pop
xchg
push
ret
jnp
dec
sub
je
cbtw
cwtl
dec
dec
push
mov
adc
mov
and
dec
jnp
mov
js
sbb
dec
adc
cmp
xor
test
fs
jno
push
test
and
mov
push
add
mul
jecxz
cmp
jl
dec
in
pop
jle
jne
aas
push
mov
ret
loop
add
mov
pop
pop
mov
mov
push
mov
bound
or
stc
sbb
xchg
in
loopne
push
loope
mov
jne
mov
mov
push
cwtl
adc
scas
scas
stos
and
xor
jmp
mov
sbb
sbb
stc
sbb
je
cmp
add
dec
inc
daa
sbb
mov
push
jne
test
mov
pusha
inc
mov
xchg
pop
into
cltd
mov
lods
testb
outsl
das
xor
test
mov
lret
and
aam
cld
inc
or
pop
std
adc
test
cmpsb
rclb
cmp
mov
sub
mov
movsl
ret
cmp
adc
xor
fcoms
and
xlat
sti
xor
lret
mov
dec
push
sahf
sub
inc
std
out
dec
ret
jae
push
fidivrl
sbb
pop
shl
je
cmp
popf
ds
lods
dec
pop
dec
aam
jno
sbb
in
mov
inc
jne
cmp
mov
add
sti
mov
adc
sbbb
fcompl
add
aam
mov
add
movsl
out
or
xlat
fsubrl
addl
data16
ja
xor
xor
into
mov
jnp
mov
add
shll
mov
cmp
js
ss
popa
jle
call
push
js
cmpsb
mov
aaa
shl
movsb
adc
test
pop
orb
dec
insl
mov
mov
add
lahf
push
pusha
enter
test
das
push
mov
inc
mov
sbb
int
movsl
shll
or
or
lret
push
and
insb
mov
hlt
sbb
iret
ret
inc
xor
and
in
sub
imul
test
loopne
in
and
sub
outsl
pop
add
daa
mov
sarl
pushf
pop
inc
xchg
cmp
mov
and
xchg
sub
outsl
fstpl
mov
jne
dec
and
sub
insb
pop
add
sbb
adc
lods
push
push
repnz
xchg
sbb
and
addr16
frstor
sub
jne
mov
xchg
push
lds
pop
push
popa
aam
jecxz
fwait
mull
stc
mov
sub
ljmp
pop
sub
mov
in
and
pop
orl
mov
sarl
aas
fwait
pop
add
loop
paddusw
add
call
push
pop
or
sub
je
xchg
xchg
lock
aad
mov
aad
stc
lea
jmp
mov
push
inc
sbb
std
xchg
sbb
out
or
mov
cmp
xchg
cmp
dec
or
cmp
ret
prefetchwt1
gs
inc
fisubrs
xchg
ftst
pop
dec
int
mov
push
movlps
jge
adcl
sub
aam
or
sti
push
stos
das
fnstsw
stos
lds
push
in
pop
shlb
mov
jne
add
push
fs
sbb
mov
int
fdivrp
fsts
repz
inc
sbb
push
add
mov
push
andl
push
cmpsb
adc
call
push
ja
add
js
cwtl
mov
xchg
pop
call
pusha
mov
dec
daa
enter
out
nop
in
loop
xchg
adc
cli
clc
xor
xlat
sbb
shll
jnp
sub
dec
lahf
jl
xchg
punpckhbw
dec
xor
psubsw
jne
or
mov
sub
test
mov
sub
mov
dec
das
in
in
or
cmp
arpl
rcrb
jnp
int3
mov
pushf
jecxz
pop
mov
lods
outsl
and
ljmp
pop
jae
repnz
icebp
sub
jbe
push
loopne
je
xchg
jbe
push
xor
jmp
sub
push
int
psubb
leave
jl
add
jo
fistpll
push
pop
jne
pop
mov
cwtl
push
out
sub
pop
dec
sub
mov
add
leave
imul
mov
cwtl
pop
ds
cmpsl
lcall
test
xchg
inc
in
sub
mov
ffreep
sub
sub
aaa
das
lcall
add
push
cmp
scas
xchg
sub
cmpsl
stos
scas
es
pop
adc
pop
mov
or
or
dec
lret
inc
and
bound
pop
xor
cmp
pop
lods
sbb
jge
cmp
repz
jp
gs
outsl
mul
xor
sbb
lds
iret
mov
dec
cld
pop
push
adc
sub
stc
icebp
push
adcb
rcr
lock
dec
es
dec
mov
mov
pop
jbe
xlat
pop
jno
out
and
cwtl
xor
mov
loopne
jae
cmc
dec
pop
pop
inc
add
test
jmp
out
out
mov
adc
cwtl
fwait
mov
cmpsl
popf
fst
xor
das
gs
movsl
ss
or
pop
xor
xchg
scas
cld
outsl
movsb
sbb
and
push
popa
fstl
cmp
clc
or
insb
sub
adc
pop
movsl
xchg
pop
mov
xchg
or
adc
push
pop
insl
jne
mov
popf
fistl
iret
push
sar
bound
xor
adc
xchg
dec
push
cmpsl
jmp
bound
dec
jbe
lret
test
mov
rclb
je
add
adc
xor
inc
into
inc
in
dec
insl
aaa
xor
mov
inc
mov
xchg
icebp
jno
xchg
add
xor
hlt
mov
xchg
and
mov
sub
inc
es
add
dec
ret
scas
push
ja
pop
aad
gs
push
xorb
jbe
andb
or
test
add
js
fdivl
jmp
loop
ss
leave
push
shl
mov
addr16
faddl
pop
mov
ljmp
fcmovne
movsb
or
mov
lods
sbbl
xlat
and
mov
dec
push
popf
adc
ja
mov
inc
sub
fsubrl
or
add
aas
jno
jno
inc
push
cli
aaa
ficomps
mul
pop
inc
cwtl
mov
inc
jae
cmp
insb
and
pop
sub
lahf
insb
sbb
or
cmp
inc
call
mov
or
cmp
push
adc
or
jno
sbb
pop
enter
int3
adc
aas
or
loope
rcl
mov
push
push
xor
pushf
or
js
sbb
xor
test
cwtl
stos
insb
aad
adc
lock
out
stc
gs
jl
mov
dec
dec
movsl
insb
lahf
push
mov
inc
scas
xor
outsb
sbb
sahf
push
inc
push
orl
mov
and
push
outsb
push
jne
dec
in
sub
cmp
and
jl
dec
outsb
jo
xchg
data16
mov
mov
enter
test
push
push
jne
test
push
and
dec
test
mov
test
add
hlt
mov
xchg
jnp
and
mov
lret
cmp
int
addb
stos
imul
push
mov
push
fcmovbe
test
push
inc
sbb
pop
mov
and
pop
call
call
mov
bound
icebp
shlb
aam
and
loopne
fcmovnb
mov
adc
mov
cli
mov
loop
mov
int
jge
adc
sahf
lods
pop
enter
movsl
xchg
imul
in
sub
lds
leave
cmpsl
cmp
mov
mov
mov
push
imul
dec
lds
lea
es
sarl
xchg
inc
aam
pop
jge
mov
orb
lret
inc
fldt
rclb
mov
push
add
push
pushf
dec
dec
hlt
dec
xor
into
sub
adc
mov
xor
adc
arpl
mov
mov
sbb
add
and
in
and
jb
and
mov
xor
lods
rdmsr
xor
das
pushf
loopne
arpl
dec
or
mov
test
push
popf
cmc
std
sbb
cmc
pop
cmc
lods
out
and
pop
ja
push
call
fs
dec
pusha
mov
push
adcb
aam
mov
lods
sub
sub
iret
jp
xor
cltd
push
movsb
mov
iret
int3
arpl
jg
jne
jp
dec
mov
mov
sub
jno
and
xchg
cs
into
loope
sahf
fisubrs
aam
call
mov
cmp
and
out
sub
sbb
mov
pusha
loop
xor
jle
push
ss
push
int3
sub
mov
sahf
iret
fwait
jae
mov
xchg
decl
cmpl
int
cld
leave
jns
testl
xchg
icebp
aam
das
pop
mov
adcb
sti
jbe
ficoms
outsl
adc
mov
sbb
xchg
lret
push
outsb
sti
push
repz
xchg
dec
mov
aam
in
stos
xlat
mov
in
scas
or
add
inc
das
xor
xchg
enter
add
xor
xchg
stos
incb
sbb
stc
pop
shrb
leave
sbbb
jecxz
sarl
lods
into
icebp
sub
push
dec
and
mov
outsl
push
in
test
inc
push
pop
lods
inc
adc
mov
and
mov
mulb
hlt
mov
ds
jg
push
xor
ffree
lahf
mov
aaa
fidivrl
cmp
jg
inc
pop
scas
push
test
jb
aas
inc
inc
jo
or
xchg
test
scas
sbb
aam
xchg
dec
fwait
mov
pop
stc
cltd
mov
mov
inc
imul
inc
adc
add
push
pop
icebp
jb
and
movsl
es
loopne
pop
repnz
imul
fwait
sub
fwait
or
jle
icebp
orl
add
xchg
inc
lods
stos
test
pop
mov
insl
dec
sbbl
sub
scas
stos
out
pop
lea
ja
fwait
lods
mov
inc
dec
pop
dec
ret
mov
adc
mulb
clc
jne
pop
xor
xchg
mov
push
push
and
lock
jne
xchg
sub
and
test
jge
mov
pusha
imul
jle
mov
pushl
ljmp
jae
fidivrl
jp
in
adc
push
stos
addr16
jle
rolb
push
inc
loope
in
hlt
loop
cmc
jo
aaa
mov
dec
inc
pop
icebp
cmp
es
sbb
xchg
test
pop
cmp
mov
repnz
ficompl
push
std
xor
shlb
xchg
pop
xchg
or
pop
xchg
iret
int3
inc
fsubr
xchg
mov
fcmovne
fwait
int3
sahf
jo
ja
shrb
dec
cmc
ja
xchg
ficompl
ds
sti
mov
pop
stc
cmp
std
push
fnstenv
dec
jns
stos
mov
inc
mov
sahf
dec
mov
ds
push
nop
xor
xchg
mov
adc
in
lret
or
insl
mov
addl
jo
and
fs
add
adc
push
int3
mov
push
ss
ss
and
addr16
xor
inc
mov
add
dec
pop
js
fldt
xor
xor
test
aaa
cmp
push
aad
roll
adc
cmpsl
xchg
shrl
xchg
rcrl
stc
adc
push
in
out
roll
rclb
decl
xchg
inc
shl
xor
sbb
mov
pusha
ss
inc
cmp
fs
lea
out
test
cs
faddl
pop
insl
pop
bound
fsubrs
adcb
jb
jae
incl
mov
or
scas
xor
lret
jae
dec
xchg
test
push
insl
mov
js
pushf
dec
pushf
add
push
sarl
lret
mov
mov
xor
aas
mov
arpl
popf
shlb
pop
push
cmp
and
xchg
into
loop
lock
js
inc
pop
cwtl
shlb
ja
inc
jge
test
and
lea
inc
stos
lret
xchg
xor
dec
das
shl
movsb
cmpsl
cmpsb
dec
cmc
push
out
fs
mov
int3
shrl
mov
push
push
jp
shll
xor
divw
jne
or
push
add
mov
mov
jbe
ss
cmp
push
in
popa
push
lret
sbb
mov
std
pop
xchg
movsb
jnp
jb
gs
push
icebp
ljmp
add
ja
cld
shll
incl
mov
dec
ror
std
fcoms
insl
in
mov
js
mov
std
push
lods
data16
adc
icebp
call
jbe
out
mov
scas
fstpt
pop
rclb
sbbb
jo
adc
jge
mov
pop
fidivrs
and
mov
fdivrl
adc
xor
lods
sub
mov
fcom
mov
fistl
mov
mov
leave
adc
mov
daa
xchg
ret
mov
daa
xor
xchg
out
mov
dec
enter
test
sbb
repz
lret
sub
jmp
mov
es
out
jl
cld
xchg
sub
out
push
or
push
loopne
je
fstpl
std
push
out
out
lea
loop
cmp
loope
inc
pop
add
push
lret
push
test
pop
outsl
in
pop
xlat
inc
les
jmp
fs
inc
daa
data16
jl
insb
or
movsb
clc
lods
ljmp
jo
pop
ret
aad
jmp
dec
push
mov
push
sub
push
clc
insl
arpl
cli
insl
inc
mov
jns
int3
mov
mov
push
movsl
jecxz
add
and
mov
mov
rep
pop
and
inc
push
push
push
scas
cmc
xchg
je
rep
sbb
xor
int
addr16
mov
je
cmp
jmp
in
pop
push
mov
pop
mov
adc
sub
js
push
and
push
dec
inc
stos
cld
idivb
jg
dec
push
dec
outsb
or
das
stc
into
hlt
sbb
mov
push
lea
in
sbb
mov
orb
mov
pop
std
lods
jb
push
xor
aad
inc
orb
lock
mov
xchg
push
ja
ds
iret
out
out
push
mov
fwait
mov
pop
add
xchg
aam
shrl
jecxz
cmp
cmpsl
sarb
pop
pop
in
adc
jp
movsb
push
es
xor
sbb
ret
pop
shll
idivl
dec
std
pop
xor
jge
mov
popf
mov
leave
sbb
loopne
add
loopne
popf
lods
inc
lock
hlt
xchg
cwtl
sarl
mov
mov
pop
jne
dec
loop,pt
sar
jb
data16
in
xchg
test
mov
jae
outsb
mov
lret
enter
outsb
sub
add
fisubl
out
xchg
sahf
add
inc
push
jp
push
int3
sub
mov
jnp
sbb
push
hlt
jmp
in
fsubr
mov
jb
orb
xorb
jb
xor
push
lret
incl
pop
jo
push
gs
je
cld
inc
ss
or
push
add
loop
aaa
inc
ljmp
jne
shlb
jle
ret
cltd
fldcw
lret
xor
xchg
pop
push
or
cmp
outsl
push
cli
icebp
fucomip
cmp
aaa
jecxz
mov
sbb
push
addr16
xchg
int3
dec
dec
xchg
jmp
mov
sub
ud2
jp
loope
cmp
outsl
mov
jg
adc
pop
insb
or
cmp
ret
push
clc
dec
cmpsl
iret
ss
fildl
addr16
sub
js
xor
lods
push
lock
sbb
mov
inc
xchg
pop
add
sub
repz
xor
push
in
jb
dec
pop
insl
xchg
jle
mov
data16
popf
fs
xchg
ja
inc
movsb
stos
lret
fstl
shl
ss
adc
insb
arpl
shlb
sti
cmp
testl
jo
and
cmp
pop
inc
push
push
test
rcll
cmp
and
mov
pusha
int
insl
adc
mov
gs
xchg
cmp
lret
scas
dec
gs
pop
outsl
adc
adc
lds
lods
sti
sbbl
movsl
jecxz
and
sbb
lcall
iret
dec
in
adc
adc
loope
test
popa
jp
mov
loope
bound
sbb
daa
daa
mov
jno
dec
rcrb
ds
lods
add
shlb
fs
or
fdivp
jp
jl
aas
sbb
xlat
xor
sub
push
testb
push
or
dec
imul
add
xchg
jmp
ja
enter
pop
popl
cmp
popf
push
addr16
fistl
cmp
push
loopne
cmpb
ljmp
jecxz
xchg
jp
lock
pushf
cmp
out
and
cs
sub
push
push
aaa
lods
jl
inc
fisubrs
mov
aas
jb
xor
jns
das
adc
cmp
addr16
cs
add
enter
imulb
test
daa
xlat
push
clc
xor
repz
xor
cs
das
sub
daa
inc
or
dec
cmpsb
cmp
xchg
xchg
in
add
clc
in
add
mov
xor
jb
aad
mov
dec
les
sbbl
pop
dec
rorl
shlb
fisttpll
dec
stc
leave
xor
push
pop
loope
sbb
test
push
ret
xor
cwtl
ret
gs
push
push
push
adc
call
xor
jae
and
imul
push
hlt
dec
call
mov
in
mov
lods
push
cmc
dec
add
sbb
jp
cmp
add
mov
popa
daa
fcompl
shl
add
adc
fldl2t
call
cmp
add
nop
negb
adc
xchg
ss
adc
cmp
lret
sbb
push
pusha
inc
jb
fisttps
push
add
xchg
int3
jg
xor
scas
out
jne
mov
out
mov
lahf
aaa
push
inc
fldt
shll
cmp
adc
aas
das
sub
mov
gs
mov
mov
roll
repnz
xchg
ss
fsubrp
xchg
or
mov
clc
dec
pop
sub
fwait
mov
das
je
stos
inc
lock
xchg
pop
pushf
adc
test
jb
sarl
and
sbb
rcrb
xor
aas
xchg
aam
lods
mov
add
mov
dec
sbb
mov
push
cmp
sub
leave
mov
sbb
inc
test
outsl
test
shlb
data16
sarb
push
cwtl
popa
je
loopne
repnz
sbb
pop
dec
pop
mov
and
mov
xcrypt-cfb
cmpsl
mov
test
jns
dec
aad
or
mov
gs
pop
xor
fwait
dec
fwait
sbb
ljmp
inc
jb
fldl
sub
icebp
add
cmp
mov
mov
xlat
mov
sub
fildl
cmp
or
dec
xor
dec
mov
mov
jbe
call
outsl
jle
xchg
cmp
xchg
fs
lods
outsl
lret
mov
push
pop
aad
mov
cltd
je
int3
pop
xor
lock
out
cli
test
pushf
or
insl
mov
out
lds
nop
sbb
mov
nop
movsb
ljmp
mov
push
stos
jmp
fsubl
movsl
jmp
in
mov
or
cmpsb
rcl
stos
push
sahf
daa
hlt
mov
ja
js
push
in
jge
sub
push
in
or
insb
icebp
mov
cmp
in
ret
sub
pushf
pop
cmpsl
jno
xor
test
sbb
pushf
mov
fsts
rolb
jl
pop
mov
add
and
shll
adc
popa
push
xchg
mov
adc
out
ret
jo
int3
lea
ja
xor
imul
icebp
iret
and
or
push
or
insl
cmp
xor
dec
jle
inc
jbe
roll
and
ret
test
rclb
divl
push
stos
pusha
es
lods
bound
test
mov
inc
jle
std
xor
clc
std
jle
inc
mov
in
push
jl
loope
adc
dec
mov
sub
cltd
adc
add
scas
ja
mov
add
call
jbe
add
leave
mov
mov
sahf
pop
in
inc
jbe
xchg
ror
xchg
mov
and
mov
dec
xchg
add
sbb
mov
addl
sbb
fstps
adc
enter
stos
mov
daa
dec
iret
and
cmp
pop
and
adc
mov
aaa
add
sbb
std
sbb
or
mov
fwait
das
ljmp
inc
imul
aad
xlat
adc
mov
mov
subl
ja
add
sbb
mov
pop
in
cmp
in
shrl
fsts
add
rorb
cmc
int3
xchg
aam
sti
jne
fcmovbe
ds
cmp
rcrl
icebp
sub
out
sub
sbb
mov
cld
xchg
inc
push
int
mov
aaa
mov
mov
and
push
or
fxch
pop
lcall
cltd
loopne
sub
add
aam
xchg
in
dec
mov
mov
adc
pop
pop
jle
mov
add
ljmp
idivl
mov
xor
pop
xlat
cmc
std
push
stc
push
test
jnp
pop
jp
adc
and
adc
jbe
aas
jle
stos
call
push
lret
push
fcoml
jecxz
and
bound
mov
fsts
jbe
push
sub
xchg
mov
dec
jle
in
shrl
sbb
out
mov
loop
jo
mov
inc
ja
push
out
fwait
cmp
fcmovnbe
push
pop
jl
xchg
aas
mov
out
mov
fcmove
adc
push
cwtl
cmp
addr16
mov
test
les
mov
pop
call
sbb
cmp
jnp
hlt
adc
cwtl
or
outsb
call
push
xchg
jecxz
mov
mov
or
nop
mov
mov
mov
adc
dec
aad
xchg
dec
lret
xor
call
fbld
js
cmp
xchg
out
xor
fstpl
clc
sbb
inc
xchg
call
leave
xchg
adc
sub
lds
roll
mov
xchg
testb
mov
pop
dec
push
mov
inc
sub
inc
inc
pop
dec
into
movsb
jno
popf
mov
xor
xchg
inc
ljmp
loopne
pop
or
jne
inc
push
lret
xchg
pop
lahf
dec
mov
jo
in
mov
out
in
inc
fdivrp
lcall
cmp
fisubl
bnd
in
movsl
jecxz
add
mul
inc
mov
into
scas
data16
mov
out
xor
mov
in
mov
adc
and
xor
shl
add
cmpsl
pop
nop
and
add
adc
xchg
lds
push
test
test
sahf
and
enter
push
mov
fcmovu
vpinsrw
mov
mov
xor
sbb
push
cld
inc
mov
pusha
mov
repnz
lret
jmp
jb
and
mov
mov
or
pop
arpl
jbe
xchg
mov
sahf
out
shll
cltd
mov
js
and
jo
gs
test
add
call
mov
cli
cmc
jle
call
rolb
inc
in
dec
jge
sar
lods
mov
addr16
push
ja
xchg
cmp
fiaddl
cmp
and
cltd
push
mov
adc
mov
cmp
loope
into
addb
xor
mov
clc
add
and
call
test
dec
sub
lods
push
movsl
xor
in
mov
mov
subl
sub
aad
push
imul
and
or
cmp
xchg
scas
mov
ret
cmp
inc
icebp
imul
inc
push
mov
mov
je
mov
xor
xchg
mov
add
mov
mov
cmpsl
inc
jg
jle
sub
lea
mov
nop
insl
cmp
push
fdivrl
shll
push
add
jbe
les
push
cmp
les
loopne
cmpsb
push
inc
ret
mov
sti
pop
fs
scas
push
test
pop
push
mov
jecxz
push
cmpsb
dec
repnz
mov
sbb
inc
jmp
adc
cmpsl
adc
cli
jge
cmp
fwait
sbb
adc
fnsave
push
add
pop
out
shll
fwait
pop
pushf
and
push
push
pop
xor
ret
fstpl
fbld
push
mov
cmp
cli
fwait
push
mov
xchg
nop
test
xor
std
in
stos
pop
aaa
shrb
das
cmpsb
scas
push
mov
cmc
ja
pop
rcrl
out
hlt
nop
lea
mov
pop
or
adc
jge
dec
pusha
mov
cmp
lahf
out
iret
jecxz
and
repnz
cmp
repz
iret
fnstcw
sub
dec
leave
sbb
notl
pop
hlt
push
xchg
pop
lcall
cmp
xchg
xchg
xor
fidivs
adc
fsubr
sbb
outsl
or
jb
js
cmp
cmp
mov
imul
and
fisubs
cmp
push
push
nop
in
notl
and
add
or
xchg
in
xchg
push
sub
fcmovbe
cwtl
out
cwtl
sub
add
xchg
push
cmpsb
in
pop
in
loopne
and
lcall
pop
and
xchg
test
pcmpgtb
and
pop
scas
mov
cmpsb
rol
sub
repnz
fndisi(8087
stos
inc
add
and
das
call
test
xlat
jno
call
jge
out
dec
lods
xlat
cmpsb
loopne
xchg
mov
pop
stos
push
sahf
inc
sbb
push
pop
mov
xchg
xchg
pop
pop
leave
sub
das
sahf
jmp
inc
adc
ljmp
dec
jo
or
pop
in
aad
test
or
pusha
xchg
sub
insl
cmp
daa
lods
movsl
subb
adc
sbb
lds
cli
test
iret
stos
add
xchg
ficomps
mov
jbe
dec
mov
mov
pop
or
daa
hlt
inc
sub
or
shlb
aaa
push
xchg
les
mov
loopne
add
jecxz
xchg
mull
sarl
jno
jno
jnp
xchg
push
pop
cltd
rol
je
mov
xlat
mov
cli
lea
mov
and
and
ja
mov
aad
jp
outsb
sbbl
test
mov
sbb
sub
pop
xchg
mov
or
ret
add
mov
fdivrl
orl
push
adc
pusha
sti
rol
fcmovbe
outsb
mov
pop
mov
mov
pop
daa
sub
outsl
cmc
push
das
push
jae
jb
sar
inc
loopne
hlt
arpl
loopne
push
sbb
movsb
cmp
push
aad
mov
pusha
mov
pushf
sbb
push
inc
push
sti
loope
jmp
popa
aam
mov
rorb
shr
cmpsl
pop
pusha
pop
mov
or
aad
add
in
stos
imul
loop
fcomps
fdivrs
or
iret
xlat
cmpl
ja
adc
dec
lret
push
xchg
fnstsw
sbb
push
int
fidivl
int
into
inc
mov
sbbl
pop
xchg
add
cmpsb
ds
dec
pop
inc
push
sub
and
add
movsl
jmp
clc
xchg
lods
sbb
mov
movd
test
mov
cmp
and
outsb
pop
add
sub
push
in
jge
lret
shlb
or
xchg
sbb
loope
jge
outsl
xor
test
lret
or
fistpll
xchg
and
or
sbb
movsl
fucomi
addr16
jb
sub
xor
out
out
fidivl
clc
push
mov
lock
sub
gs
lret
arpl
gs
push
daa
je
sub
adc
fldl
or
pop
pop
mov
or
mov
xchg
add
out
in
out
or
pop
add
fwait
dec
std
lock
int
and
mov
pusha
cli
loopne
mov
push
mov
cmpsb
dec
xor
inc
mov
sbb
fwait
mov
stos
adc
out
mov
jp
insl
imul
std
jno
mov
ja
jg
loopne
aam
xor
push
aad
adc
inc
pop
addr16
test
dec
jae
xchg
sub
arpl
cmp
dec
or
popf
mov
xchg
sbb
aad
mov
fucom
addb
inc
repz
pop
hlt
or
fwait
shrl
jmp
rolb
out
mov
ret
pop
es
adcb
lcall
clc
pop
loopne
add
mov
push
add
add
sbb
xor
stos
addr16
jnp
test
adc
xchg
push
fwait
test
into
adc
icebp
mov
repz
insb
xor
adc
movsl
and
outsl
nop
sarl
outsl
lret
loop
push
ret
xchg
adc
out
add
mov
mov
insl
clc
rcrb
pop
xchg
cmp
jle
jb
enter
sub
lahf
movsl
iret
jle
fsts
movsl
sti
int
push
mov
loop
insb
jmp
xlat
sbb
xor
push
cwtl
push
jb
adc
or
repz
push
pop
pop
aaa
and
outsl
pop
cld
mov
pop
aam
movsl
int
ljmp
fwait
add
rcll
jnp
arpl
push
sbb
pop
mov
xor
sti
push
insb
movsl
je
addr16
daa
and
mov
push
or
imul
test
enter
xchg
xor
inc
push
inc
test
mov
xchg
les
inc
in
sub
or
push
inc
xor
pusha
leave
and
je
pop
mov
cmpsb
sahf
dec
cwtl
les
loope
stos
and
orb
add
jmp
jmp
inc
mov
inc
sbb
out
icebp
push
jmp
add
fsts
inc
dec
add
insb
jp
test
pop
and
xchg
lea
cltd
ret
ljmp
neg
inc
gs
xchg
jl
mov
jne
out
ljmp
fnsave
dec
xchg
jge
lcall
push
scas
ss
iret
jae
add
pop
test
sub
outsb
stc
outsb
subl
and
mov
push
int
cmpl
das
mov
es
pop
cmp
subl
sti
sub
fwait
div
xchg
dec
jb
inc
cltd
mov
pop
idivb
sub
sti
push
cmpsl
push
int3
mov
arpl
push
lock
jecxz
incl
fdivrl
cmp
cmp
fimuls
lock
jne
leave
shlb
push
jle
mov
inc
jns
pop
hlt
fisubs
loopne
mov
call
sbb
aam
add
xchg
icebp
mov
jg
add
fdivrl
in
inc
dec
cwtl
outsl
pop
mov
cmovnp
pusha
sub
lock
xchg
xlat
lcall
cmp
ficoms
push
pop
sbb
nop
fbstp
mov
lahf
in
outsl
push
mov
mov
mov
and
stc
cmp
and
xchg
add
lret
or
pop
loopne
or
mov
xor
xchg
or
push
jne
push
lahf
lods
jae
xchg
arpl
mov
nop
or
mov
dec
dec
push
mov
ss
pop
jl
cmp
pop
xor
add
jmp
mov
in
xor
adc
pop
mov
lret
jge
data16
lahf
xchg
sub
xor
fmull
add
imul
hlt
in
push
dec
mov
or
pop
dec
dec
pop
cmpsb
mov
add
cld
movsl
adc
repz
aad
insb
xchg
sub
stc
in
sbb
dec
adc
sub
sbb
mov
pop
out
cmpsb
sbb
xor
push
fisubrs
inc
popf
xor
rolb
xor
cld
insb
mov
push
xchg
lock
fcomps
xchg
js
sub
sbb
lret
stos
xor
and
cltd
lods
sahf
pop
push
push
lods
sti
adc
inc
daa
mov
stc
rolb
rcll
pop
cwtl
mov
imul
outsb
push
cmpl
cmp
jp
frstor
nop
jecxz
push
jne
int3
jmp
xor
cmc
mov
lcall
mov
jmp
sbb
lea
mov
xchg
mov
jae
rclb
test
lret
cwtl
pop
imul
out
mov
adc
xchg
adc
and
mov
push
xchg
adc
inc
pop
sub
adc
push
add
mov
inc
cmp
andl
ss
int3
sub
repnz
out
inc
xor
leave
xchg
cmpsl
xchg
mov
adc
andb
jp
push
mov
push
into
xchg
into
daa
dec
push
jb
int
in
sbb
lea
push
adc
lock
pop
pusha
xor
and
sbb
cmp
inc
xchg
je
or
js
test
cmp
mov
adc
push
pop
fs
dec
inc
test
jp
pop
jecxz
inc
and
popf
pusha
cmp
mov
mov
mov
xchg
mov
dec
fldenv
in
sub
cmc
mov
or
imulb
mov
jno
cltd
rorb
in
push
mov
loope
insb
sbb
push
mov
xchg
aad
mov
fsubrl
and
adc
filds
into
pop
xchg
push
mov
push
pop
sub
push
or
sbb
dec
aam
pushf
enter
mov
lahf
hlt
xchg
add
int3
adc
int3
aaa
or
ljmp
pop
push
mov
xor
lret
jo
fs
int3
fmuls
add
or
scas
pusha
ffreep
add
xor
add
cmp
and
mov
xchg
sbbb
sub
inc
orl
pop
test
add
cltd
imul
mov
dec
dec
sbb
mov
pop
test
xchg
sbb
mov
fdivs
push
call
jo
mov
pop
lods
outsb
or
adc
pop
xchg
sub
sub
out
movsl
xor
repz
or
loope
pop
inc
xchg
shrb
jecxz
cmp
xor
pusha
cmpsb
lret
out
cs
jp
mov
imul
imul
ds
dec
push
scas
mov
adc
xor
pop
je
mov
and
in
in
inc
pop
fld
dec
sub
jecxz
xchg
xchg
cli
adc
je
cmp
jns
shll
pop
out
out
adc
aad
lds
je
imul
xchg
inc
mov
cltd
insl
mov
jo
lock
sub
sub
pop
and
adc
xor
add
sbb
cmp
sub
jmp
lods
pop
mov
sbb
aaa
push
std
pop
xor
std
shr
inc
mov
jnp
inc
movsl
mov
aaa
shl
pop
xchg
mov
inc
lahf
call
adc
adcl
add
adcb
sahf
iret
jb
and
addl
data16
fs
subl
xor
icebp
fwait
mov
daa
jp
mov
cmp
in
fisubl
gs
rcll
mov
lret
scas
hlt
xchg
inc
sbb
cmpsl
adc
mov
add
loopne
adc
call
cmp
and
lcall
xchg
mov
pop
sub
pop
mov
add
xor
int
std
or
mov
inc
xchg
shll
sbb
std
add
pop
push
fwait
ss
mov
repz
mov
add
cmp
mov
adc
sub
push
int3
xchg
mov
mov
sbb
cmc
or
mov
popf
lods
shlb
jnp
push
dec
pushl
outsl
ret
fadds
out
jns
sahf
movsb
shl
pop
or
lret
daa
imul
jnp
jmp
adc
sti
iret
rorl
and
push
icebp
pusha
xor
sbb
jle
repz
outsl
adc
lods
sub
fidivl
sbb
idivl
jmp
cmpl
ret
push
cmp
fwait
cmp
fstps
adc
call
jo
push
and
lcall
mov
stos
test
pop
xchg
je
popa
mov
push
or
push
adc
sar
jle
ficoml
imul
in
loopew
jge
inc
cmpsl
fcmovb
xchg
imul
ljmp
sub
xor
xor
push
insb
sub
jmp
jl
mov
xor
inc
repz
cmp
jg
mov
sub
imul
mov
sub
inc
dec
fldl
and
mov
loopne
js
lcall
lea
jne
lods
in
mov
in
js
adc
mov
stos
pop
pop
repnz
xchg
ret
mov
fucomp
jns
das
sarb
sar
scas
mov
jg
hlt
xor
or
out
cs
mov
lret
and
sarb
cmp
fs
cmpsl
mov
fsubrs
xchg
inc
xchg
push
imul
ds
push
ficompl
leave
mov
and
clc
dec
iret
jg
stos
iret
jb
xchg
xchg
pushf
jbe
leave
jp
dec
xchg
sbb
shlb
xorl
jbe
fcmovnb
add
mov
divl
cmp
xor
fwait
xor
xchg
hlt
dec
adc
test
aas
cld
fcomps
lret
loop
cmp
sbb
hlt
and
mov
ljmp
jecxz
pushf
dec
orl
subl
jnp
pop
cmp
pop
fstpt
cmovae
ss
sti
xchg
stos
jno
cmp
push
pop
push
std
fisttps
adc
movsb
xchg
cmc
lret
xchg
ret
push
cmp
popa
fsubrl
inc
jbe
fistpll
push
fisttpl
add
cs
enter
xor
popf
mov
fs
lods
inc
pop
sar
cwtl
iretw
aad
aad
lds
push
psubusw
push
add
cli
fwait
je
dec
daa
nop
xchg
sbb
movb
xchg
sbb
shr
gs
jns
adc
inc
dec
pusha
in
sub
and
into
push
pop
mov
mov
push
lods
std
mov
jne
xchg
push
sub
sub
jnp
data16
int3
fidivrs
cmp
int3
cs
fmuls
sbb
sub
jno
xchg
adc
sbb
nop
dec
mull
scas
jbe
xchg
lcall
dec
jge
fiadds
bound
sti
adc
or
xor
aas
mov
mov
pop
fisubl
sahf
insb
movb
jl
jmp
mov
dec
sbb
arpl
mov
push
mov
fildl
roll
call
outsb
pop
push
adc
sub
add
in
mov
lods
mov
lahf
int
rcrl
mov
mov
les
cs
arpl
iret
ljmp
jle
cld
movsb
push
shrl
insb
mov
push
and
xor
data16
mov
in
fucomip
push
cmp
inc
sbb
rcrb
insb
cmp
testb
or
jb
insl
arpl
push
lea
fisubrl
daa
cmp
xor
inc
adc
out
mov
loopne
push
push
mov
mov
call
mov
std
sub
cmp
inc
jge
adc
inc
clc
sub
lods
dec
mov
xchg
mov
lea
push
aam
push
aam
cmp
or
adc
pop
sub
and
mov
pop
sub
mov
sub
js
leave
lret
sub
cmp
mov
movsb
sahf
lds
bound
inc
jmp
test
mov
add
or
lods
jo
repnz
fistpl
jo
jge
push
js
add
or
sub
mov
jae
inc
jnp
clc
pop
dec
cmpsl
lock
cmp
or
xchg
data16
push
mov
jb
xlat
or
push
cmpsb
sti
bound
mov
insb
and
loope
or
addr16
push
and
inc
sti
cld
mov
cmp
mov
or
loopne
adc
lds
jle
push
pop
fistpll
in
jb
xor
fwait
out
clc
sub
or
dec
push
testb
dec
fisubrl
jae
push
repz
adc
repnz
loopne
push
dec
int
js
shll
inc
popf
mov
fbstp
daa
lods
lret
scas
addr16
pop
push
push
xchg
movsb
xor
xchg
pop
sbb
mov
test
pusha
xor
out
mov
ss
imul
xchg
jge
cmp
or
ja
int
xor
pop
insb
ficompl
arpl
sub
daa
mov
and
bound
addr16
data16
jnp
mov
decl
lret
mov
dec
sti
inc
repz
inc
repnz
into
mov
stos
lods
mov
or
xor
enter
leave
mov
xchg
jno
mov
clc
and
loope
bound
das
xchg
sbb
or
mov
into
push
mov
in
lret
repz
dec
movsl
adc
hlt
xchg
call
mov
inc
or
jge
movb
add
fistl
mov
jnp
mov
mov
jmp
jne
nop
xchg
movlhps
aad
ror
aaa
add
sub
and
xchg
ja
xor
jg
int
mov
loop,pt
test
nop
jo
xchg
inc
xor
or
lret
loop
dec
lods
jbe
popf
sub
gs
sub
xchg
std
fs
cltd
xlat
repnz
out
sub
cmp
repnz
cmc
mov
in
in
ds
clc
cmp
xlat
mov
js
stos
cmp
or
test
mov
je
mov
in
cmc
or
in
dec
loope
mov
aam
cmc
ljmp
lret
cmp
xchg
pcmpgtb
cs
adc
pushf
adcl
insb
push
aam
mov
movsb
pop
or
repnz
ss
lods
sub
add
and
push
repnz
fcom
out
push
sahf
push
dec
xor
dec
in
pop
fiadds
inc
sbbb
dec
xchg
cmp
sbb
adc
push
cltd
push
fisttpl
mov
out
push
lds
cwtl
lret
inc
repz
push
cwtl
xor
push
adc
mov
cmc
in
ja
fwait
mov
jbe
cs
mov
push
iret
sbb
mov
pop
jg
pop
mov
sub
xchg
aam
jno
xor
lods
rclb
ds
outsb
test
imul
inc
test
push
sub
js
or
xor
sbb
fbstp
pop
sti
test
nop
icebp
mov
imul
or
int
loope
xchg
jge
orl
xchg
scas
mov
cmp
sub
pop
int
jne
pop
mov
mov
push
cmp
aas
in
fs
imul
add
int3
divl
negb
push
pop
mov
inc
dec
lods
mov
xchg
or
icebp
cmp
mov
sbb
dec
sub
loopne
mov
inc
pop
inc
icebp
push
xlat
arpl
and
sbb
sti
sbb
outsl
pop
ss
push
adcb
xchg
cmp
mov
test
mov
sbb
or
lsl
jle
pop
cs
mov
push
xchg
mov
pushf
xchg
mov
cwtl
pop
je
sub
mov
out
shlb
mov
inc
inc
and
stos
sbb
xchg
lcall
jmp
lea
jns
adc
mov
pop
mov
fisubrs
out
dec
fwait
cmp
movsl
addr16
ja
mov
lahf
loop
pusha
xor
pop
mov
dec
nop
sbb
fistl
lea
push
cltd
xchg
fisubs
push
mov
mov
aaa
incl
pop
js
das
sbb
and
jae
data16
test
outsb
or
xchg
out
repnz
outsb
dec
cmp
daa
lahf
push
pushf
cltd
adc
jg
mov
fucom
in
js
ret
idivl
pop
in
mov
insl
lahf
out
jg
cmpsl
arpl
jnp
addl
std
push
iret
hlt
push
inc
mov
and
pop
ret
loope
xchg
pop
aam
sub
or
cwtl
push
les
sub
sbb
sub
imul
jg
lahf
and
movsb
imul
mov
andb
sbb
pusha
lret
xchg
jns
xlat
insl
ja
test
jbe
cs
loopne
sahf
jnp
xor
and
scas
pop
push
fmul
insb
or
arpl
cli
std
ja
in
mov
popa
mov
xor
add
lds
addr16
data16
cld
adc
sbb
divl
not
xchg
imul
push
push
scas
dec
pop
inc
jl
sub
shlb
mov
xchg
dec
ret
pop
cmc
push
daa
adc
pop
mov
jno
dec
sbb
inc
mov
pop
xchg
jle
jg
imul
popa
fisubl
or
leave
lret
nop
push
mov
lock
xor
xor
dec
leave
gs
adc
lea
popa
pusha
mov
jb
inc
and
sbb
push
or
jmp
gs
add
bound
mov
mov
insb
out
lcall
xchg
lcall
cmp
mov
pop
mov
in
xchg
pop
clc
aad
nop
add
movsb
inc
push
nop
cmp
pop
jle
fcmovb
fisubl
std
add
repz
pop
sub
fnstsw
test
imul
movsb
sbb
mov
out
aas
aad
xor
sahf
fucomip
or
mov
movsb
jp
mov
arpl
sbb
xchg
xchg
push
loope
jl
imul
fs
jae
and
cmp
fwait
push
pop
push
popf
aaa
pop
dec
into
sub
rorl
loope
dec
lods
cmp
sbb
push
push
fistps
repz
ds
ljmp
hlt
outsb
subl
mov
std
xchg
lock
sub
fwait
js
mov
test
xchg
mov
add
das
push
out
inc
test
sahf
push
fdivl
stc
xchg
iret
jne
lret
js
daa
fnstenv
inc
or
cs
sarb
lcall
xor
dec
enter
je
sub
or
data16
les
push
cmp
jo
rclb
int
cli
sbb
or
or
or
lahf
mov
popf
add
cmp
mov
or
stos
mov
mov
fwait
out
pushf
xor
mov
repz
sbb
outsl
push
stos
sub
out
ja
mov
sbb
cmp
mov
int3
add
lea
sub
jecxz
push
cwtl
fsts
stos
adc
adc
cmp
out
xor
rorl
lock
push
fnstenv
movsb
xor
push
jecxz
add
ds
sub
rorl
lahf
lods
sahf
stc
movsb
pusha
std
outsl
stc
dec
mov
es
in
adc
iret
pop
mov
daa
shlb
push
aam
cli
or
xor
mov
pop
mov
jo
mov
jp
arpl
repnz
and
mov
in
ds
nop
pop
mov
jnp
mov
arpl
sub
mov
rcll
test
fldenv
cltd
sti
mov
xor
fs
inc
mov
xchg
and
sahf
mov
fucomp
pusha
inc
mov
popa
mov
movsb
xchg
or
rorl
inc
jmp
push
or
push
out
bound
push
stos
xor
xor
out
push
jnp
stos
pop
das
sbb
and
pop
loope
xor
sub
sub
pop
insb
xor
add
in
push
cmp
shr
les
js
sbb
lea
xor
sub
daa
lock
test
xor
pop
cmp
mov
dec
jbe
mov
jb
fbstp
roll
imul
mov
shrl
push
outsl
cli
fs
cmp
out
shlb
hlt
push
adc
pusha
xor
clc
and
push
and
cli
out
nop
test
mov
cld
ret
cltd
flds
out
mov
push
mov
sub
jmp
mov
and
mov
fisubl
cmp
xor
cmp
jmp
xor
mov
jnp
and
aas
iret
arpl
test
mov
jae
lahf
or
stos
frstor
ds
ja
pop
andb
jmp
jmp
insl
repz
inc
orb
test
aas
sbb
imulb
cmc
and
cwtl
into
jp
in
and
dec
cltd
repnz
xor
xlat
sbb
outsb
arpl
repnz
cmpl
fadd
jnp
jns
push
xor
mov
dec
mov
movb
fstpl
repnz
out
loop
pusha
arpl
inc
addb
stc
pop
loop
js
lock
pop
jg
cli
in
cpuid
push
mov
sub
jle
pusha
lea
push
in
and
fnstenv
or
test
sub
stos
addb
add
dec
pop
stc
cwtl
adc
xchg
inc
sub
das
mov
jbe
inc
cs
or
fwait
sbb
xchg
cmp
clc
test
and
jns
lret
aas
sbb
add
pop
imul
test
mov
pushf
mov
ficoms
ffreep
aam
popf
ret
mov
ret
dec
lret
mov
sbb
cmp
pop
pop
adc
or
push
vcmpsd
mov
xor
inc
es
inc
faddl
fld1
add
repnz
pusha
jns
ret
lods
icebp
outsl
decb
cwtl
repz
dec
fs
daa
fldl
and
je
into
ds
mov
mov
xchg
mov
push
xchg
clc
xchg
int
idiv
rolb
icebp
sbb
insb
lea
lock
push
mov
rcrl
out
push
std
repz
or
xor
lea
xchg
cmp
and
push
mov
js
pop
push
xor
mov
push
ljmp
out
adc
xchg
sarb
rolb
mov
fildll
sbb
mov
fcoml
std
clc
sysenter
mov
push
ss
hlt
push
and
and
mov
push
sbb
cmp
mov
jns
push
sbb
and
mov
pop
add
pop
pop
push
sub
xorl
and
jne
mov
push
mov
aaa
out
fistps
in
xlat
orb
xchg
or
lea
pop
movsl
std
pop
mov
stos
addr16
lock
fwait
cli
dec
ja
imul
and
mov
xchg
xchg
dec
and
bound
mov
arpl
jecxz
ret
ss
shll
imul
fistpl
cs
and
sub
mov
and
and
or
idiv
pop
mov
lods
cs
fcompl
add
into
cmp
cmp
shlb
push
fucomi
mov
push
testb
aam
or
add
shlb
sub
or
cli
lds
dec
cmp
add
add
jbe
jne
sarb
fdivs
dec
sub
push
sarl
mov
fstpt
addb
in
addr16
vunpcklps
shlb
call
mov
mov
in
sarb
jno
mov
fldenv
fisubrs
jo
pop
xor
inc
clc
mov
pop
jge
ljmp
xor
loop
je
and
mov
sarb
sbb
shl
ljmp
mov
mov
add
xorb
out
lods
out
popa
insb
cmp
fildl
inc
repnz
movsl
mov
mov
rorb
aas
push
jno
xchg
cwtl
jle
dec
push
ja
jns
aas
mov
jge
arpl
push
mov
or
mov
js
or
cld
in
lea
pop
fidivrs
dec
cmp
mov
fwait
cmpsl
sahf
push
and
call
or
aam
in
testb
sbb
das
mov
les
push
orb
lret
outsl
pop
pop
pusha
push
je
and
in
loopne
popf
mov
sbb
add
and
fildll
dec
dec
js
cmp
shr
popf
call
xchg
test
mov
lret
jle
mov
lahf
jae
stos
mov
pop
jb
add
movsb
rcr
sub
cmp
sub
push
push
jge
adc
pop
sbb
lret
mov
jb
mov
push
or
or
xchg
inc
push
and
das
rclb
shrl
cmp
mov
dec
jae
xchg
imulb
out
xchg
adc
xchg
adc
fcmovu
cli
sti
push
push
push
mov
push
mov
movsb
cmp
fisubrs
sub
sub
clc
adc
test
cmp
jge
adc
xor
insl
xor
push
popa
les
cmp
mov
add
bound
outsb
test
mov
push
ss
jne
cmpsb
lock
mov
or
or
lcall
pop
cmp
push
sub
es
aad
repnz
mov
ds
mov
mov
push
push
inc
movsb
dec
jns
lea
hlt
icebp
xor
stos
outsb
vpcmpeqb
inc
aaa
mov
sub
add
dec
xchg
mov
daa
inc
lahf
jg
jmp
mov
cwtl
jo
jge
ficompl
fmuls
cltd
out
xchg
scas
aam
mov
mov
inc
jns
fwait
mov
lock
jge
scas
dec
cmp
mov
lock
scas
fidivs
mov
daa
fidivrs
jns
jo
push
int
int
mov
inc
popa
jnp
mov
sti
ret
jbe
arpl
dec
xlat
cs
outsb
xor
xchg
jbe
nop
lahf
cwtl
pop
pop
add
cwtl
push
mov
push
lods
fwait
pop
pusha
inc
imul
cmpsl
mov
add
jp
test
movsb
cmpl
and
shll
xchg
dec
fistl
xchg
rorb
pop
rorl
xchg
mov
fbstp
jne
mov
int3
mov
test
into
push
or
mov
out
jns
jle
jle
jno
dec
push
adc
push
mov
mov
xor
xchg
xchg
push
and
pop
push
out
inc
mov
sub
xchg
cmp
add
sbb
outsb
pop
scas
fcomp
clc
dec
xchg
or
sbb
inc
adc
pushf
fsts
dec
imul
push
inc
add
lods
sub
push
dec
xchg
addr16
inc
gs
sub
add
iret
nop
sub
dec
enter
sar
inc
pop
jbe
daa
es
xor
popaw
mov
cmpl
lods
jb
mov
cwtl
adc
push
cs
and
mov
call
notb
iret
loope
dec
pop
and
adc
xchg
jp
pop
cmp
enter
mov
arpl
int
and
movsl
into
add
inc
jle
cmc
pop
pop
loopne
in
adc
or
jge
xchg
xor
js
push
mov
movsl
rcrb
adc
xchg
shll
sahf
dec
in
jns
insl
icebp
movsl
mov
testl
xor
mov
mov
lds
divb
mov
cmpsl
sub
outsl
cltd
out
popf
push
daa
ret
push
pop
into
sarl
lock
jmp
lods
in
mov
mov
std
jae
mov
xlat
sub
mov
lds
push
jecxz
sti
push
imul
or
pop
ficompl
gs
mov
loop
sub
jecxz
pusha
sub
movsb
pushf
xchg
cld
or
inc
inc
add
cmpsb
inc
pop
dec
dec
fstl
in
shrl
enter
jp,pt
or
shll
sbb
mov
test
into
into
mov
lret
data16
ja
push
or
push
push
cltd
cld
and
jp
mov
js
fdivs
and
in
push
push
cmc
xor
mov
ja
imul
outsl
test
rcl
push
addb
and
movsl
test
lds
insb
into
in
outsb
outsl
xor
sub
mov
test
xor
xor
sub
add
andnps
sbb
jecxz
jge
inc
lods
ret
jmp
sub
enter
mov
shlb
xor
inc
pop
push
mov
lods
pushf
inc
sub
pop
cmp
mov
push
fucompp
cmpsb
pop
repnz
ficompl
insl
scas
jno
fildll
inc
mov
inc
or
jle
inc
gs
dec
cmpsb
dec
scas
out
add
xchg
mov
cmp
mov
and
mov
imul
jnp
inc
stos
pop
fmull
addb
sub
mov
jl
cmpsb
lahf
in
cltd
rcrl
cli
sti
push
aaa
loop
jo
add
add
outsl
in
push
or
loopne
or
icebp
je
jns
sub
stos
pushf
scas
mov
mov
loop
fs
hlt
out
fwait
imul
sub
imul
and
gs
mov
leave
jo
lahf
lock
mov
xor
rol
das
mov
out
xor
mov
mov
inc
aaa
fwait
push
adc
int
dec
cmc
out
adc
and
inc
test
xchg
add
arpl
push
ss
sbb
push
jbe
fldenv
push
sub
adc
mov
dec
add
push
out
sub
cmp
pop
mov
cmp
loope
loop
out
cmp
adc
repz
lret
aam
hlt
or
ret
sub
lsl
ja
cmp
ja
push
xor
xlat
loop
cmc
mov
jge
inc
in
js
lahf
test
xor
out
std
lahf
jne
mov
push
stc
insl
and
scas
les
in
dec
sub
xlat
stos
enter
in
xor
jmp
xchg
mov
cmp
psllq
ret
jmp
push
aaa
cmp
pop
shlb
bound
dec
add
and
test
out
in
ljmp
cli
mov
xor
mov
cli
sub
xor
lds
mov
aas
repnz
sbb
test
push
leave
test
stos
fnstenv
pop
cld
push
pusha
pop
cmpb
fwait
mov
inc
mov
mov
cmp
sub
xchg
sub
mov
inc
test
orl
mov
mov
mov
mov
sub
push
jmp
dec
andb
push
jb
fists
pop
cmp
pop
sub
pusha
mov
mov
popf
inc
stos
jbe
mov
cld
pop
rorb
inc
push
or
sub
das
jbe
lea
ret
sub
jmp
push
inc
pop
iret
sbb
test
push
sub
out
mull
cmp
stc
leave
and
sub
jae
sbb
jecxz
movsb
lock
ficoms
add
ror
scas
adc
pop
mov
int3
xchg
out
jns
mov
push
lods
outsb
das
push
and
pop
fisttpl
loop
sbb
and
push
mov
pop
push
or
out
pop
popa
pop
movsb
adc
mov
adc
mov
hlt
das
mov
cmp
cmp
push
mov
data16
mov
sub
shlb
and
ficomps
das
outsl
cs
daa
and
sub
xor
lea
test
or
inc
daa
fcmovu
adc
stc
xor
mov
add
out
add
push
mov
mov
int
in
jo
or
mov
dec
mov
arpl
add
xchg
stc
mov
or
icebp
mov
shl
dec
mov
mov
imul
push
sbb
ret
push
jae
ds
in
mov
sub
pop
in
loope
sub
push
mov
insl
jne
je
cwtl
hlt
mov
mov
xchg
fisubs
repz
xor
dec
mov
xchg
aaa
inc
and
setge
dec
les
pop
shl
in
ret
scas
and
cmpsb
adcb
jnp
lahf
pusha
jecxz
sahf
cli
lea
iret
test
pop
dec
test
es
jl
xchg
out
dec
test
or
js
stc
frstor
jnp
scas
sbb
or
jns
xchg
xchg
fiadds
cld
test
in
mov
cmp
mov
cli
pop
and
xchg
outsl
pop
dec
enter
loop
rol
lret
jbe
xlat
fwait
xor
mov
ror
push
int
xor
imul
fists
mov
and
divb
add
cmp
fwait
outsl
inc
ret
push
jp
mov
and
aas
mov
cmp
pusha
inc
repz
loopne,pn
leave
les
bound
int
lods
div
icebp
daa
inc
and
inc
or
lahf
add
rclb
cmpsl
ss
cmp
inc
jae
mov
icebp
add
shll
cltd
add
scas
jge
add
movsb
cmpsl
dec
ret
sbb
xchg
in
xchg
popf
jbe,pn
in
jmp
xchg
push
and
adc
stc
mov
ja
aaa
push
push
xchg
push
cltd
mov
hlt
sub
adc
inc
adc
add
fcomps
scas
test
fsubr
xchg
sub
sub
pop
or
jle
cmp
mov
ret
push
mov
bound
dec
cmpsb
popa
aad
sub
push
or
dec
jmp
nop
sub
call
mov
fbld
mov
inc
fisttpll
inc
mov
xchg
imul
shll
sbb
int
dec
add
arpl
hlt
jno
inc
pop
pop
test
fistl
sti
cmp
daa
scas
push
push
inc
jns
mov
cwtl
nop
xor
repz
pusha
mov
cmpsb
xchg
lcall
lret
test
mov
adc
sub
fwait
push
fwait
imul
enter
pop
mov
hlt
or
jns
stc
sbb
ljmp
sbb
or
fsubl
mov
push
pop
rcr
push
in
dec
xchg
mov
call
scas
adc
mov
loopne
subb
mov
and
gs
int3
push
arpl
mov
arpl
scas
jmp
aas
xchg
pop
mov
icebp
pop
lods
lods
subb
pop
xchg
test
jmp
lods
movsl
in
pop
cs
pop
and
aaa
mov
in
lock
push
hlt
icebp
lcall
ja
lods
add
imull
imul
mull
outsb
mov
mov
cmc
inc
arpl
pusha
add
mov
dec
xchg
fcomps
adc
push
pop
dec
daa
pop
outsb
ja
sbb
xchg
rclb
jge
inc
xchg
enter
out
mov
sbb
out
jmp
subb
cmc
push
lock
sbb
mov
jecxz
push
out
arpl
jg
jne
cmpsl
mov
sbb
mov
cli
cmp
pop
ret
scas
fptan
pop
addr16
clc
jne
inc
bound
dec
mov
out
shr
rcll
cs
push
sbb
adc
adc
sahf
pop
xchg
push
std
cs
ds
mov
dec
data16
inc
mov
sub
cltd
or
or
mov
mov
push
pop
pop
xor
sbb
outsb
lret
xchg
arpl
mov
xchg
mov
mov
pop
psubusb
cmpsl
pop
xchg
sub
mov
insb
les
aas
mov
jp
xor
repz
mov
fdivl
pop
pop
incb
and
push
aas
les
test
fdivr
rclb
mov
xor
or
fwait
roll
cld
pop
cmpb
bound
mov
sub
iret
xchg
data16
incl
and
js
lds
adc
mov
mov
loope
mov
and
int3
dec
ret
or
sub
scas
in
push
idiv
jno
pop
xor
xchg
cmp
sub
mov
std
lret
sub
cmp
dec
fs
xchg
data16
loope
mov
daa
or
xor
xchg
cs
sub
cmp
xchg
add
aad
cli
out
sub
out
mov
es
xor
jle
lods
shlb
mov
adc
data16
mov
sub
loope
repz
bound
cmpsl
test
pop
out
jne
hlt
in
mov
adc
jecxz
int
sbb
inc
or
dec
repnz
hlt
leave
stos
in
loope
cmp
xchg
ds
hlt
or
inc
inc
stos
inc
arpl
cmc
jg,pt
mov
dec
lods
inc
loop
rolb
pop
add
push
cmp
in
adc
or
and
xchg
xor
outsl
mov
ljmp
leave
or
pop
int
jae
call
sbb
movsb
bnd
xor
fnstenv
andb
test
cltd
jecxz
repz
sub
mov
iret
call
imul
mov
mov
je
not
or
cli
add
je
adc
cmp
jae
aad
xchg
or
pop
hlt
add
into
lahf
push
mov
push
stos
movsb
out
jb
inc
cmc
add
lret
xchg
push
fsubl
addr16
cs
cmp
dec
hlt
xchg
cld
mov
or
ds
repnz
mov
loopne
xor
dec
mull
test
add
sbb
xlat
jmp
jae
xor
aas
pop
int3
xor
push
jle
inc
xlat
ficoml
leave
mov
imul
iret
lods
lea
insl
cld
aad
mov
fidivl
xor
rcll
imul
sub
aad
mov
sbb
int
scas
js
cmp
fcoms
outsb
add
xor
and
ja
daa
cli
dec
inc
mov
xor
dec
mov
adc
push
cmp
das
aaa
pop
mov
enter
adc
les
lcall
jmp
stos
addr16
xchg
ret
mov
cmpsb
js
sub
push
mov
xchg
fwait
jnp
insl
fwait
loopne
mov
insb
dec
jg
cltd
push
or
mov
xchg
xchg
daa
xorl
movsb
ds
ffreep
cmpsl
imull
cmpsl
mov
cld
adc
cmp
out
lret
ja
stos
ljmp
push
subb
mov
xlat
insb
inc
pop
and
movsl
adc
loope
or
pusha
fmulp
mov
sub
mov
sahf
shl
mov
sub
xchg
or
xor
daa
xor
cwtl
scas
pop
gs
and
mov
rorb
sub
cmp
or
mov
icebp
clc
push
pusha
xchg
sub
ss
adc
cmc
sbb
sbb
enter
lret
add
mov
mov
add
subl
shll
xlat
adc
mov
call
mov
or
arpl
mov
fwait
jle
data16
xchg
jg
rcr
addl
cmp
mov
je
jge
sub
aas
pop
push
int3
test
mov
lock
xchg
sbb
dec
repnz
sbb
aas
stos
int
cmp
cmpsl
sub
push
stos
stc
mov
arpl
int3
shl
jl
rorb
xchg
add
mov
stc
psraw
jg
mov
fdivrl
outsb
sub
test
outsl
in
into
lds
mov
xor
sarb
lret
fsubs
mov
xor
push
adc
push
xchg
mov
xchg
jno
mov
xchg
out
and
lods
jge
mov
stos
mov
out
jmp
mul
pop
sbb
mov
rorl
adc
add
mov
mov
fwait
ret
ja
push
aam
or
dec
rolb
addr16
and
movsb
lahf
inc
and
mov
seta
insb
test
aaa
popf
adc
jno
test
cld
pop
cmp
mov
lahf
pushf
lds
sub
dec
push
dec
push
cmp
pop
ret
lahf
mov
mov
aaa
out
in
add
or
dec
dec
cmc
arpl
inc
sahf
notl
mov
out
and
mov
xor
adc
or
pop
and
daa
and
jmp
out
mov
int
cmp
or
imul
mov
rcll
sti
inc
push
stos
sub
adc
and
or
xchg
outsl
int
lds
mov
mov
jbe
movsl
jg
lods
cltd
or
sbb
test
xchg
imul
lea
imul
push
inc
sub
dec
popa
and
mov
inc
sbb
js
push
sbb
pop
ss
jnp
fcoml
xor
dec
mov
add
adc
lahf
movsb
inc
inc
cltd
xor
cltd
xchg
pop
dec
push
xor
rcll
xchg
cmpsb
sub
ja
cmpsl
mov
arpl
or
adc
or
int3
adc
popf
mov
mov
rclb
xor
jp
clc
notb
pop
ret
repz
sti
mov
cmp
movsl
pushf
mov
pop
cmp
dec
adc
lcall
call
lea
xor
push
lds
xchg
repz
or
adcl
push
inc
call
mov
icebp
inc
push
int
pop
scas
std
es
ret
mov
insb
or
dec
pusha
in
in
push
pop
adc
mov
dec
popa
test
pop
jno
mov
cmpsl
cmc
xlat
adc
movsl
pop
jo
mov
imul
roll
cmp
add
lret
paddusb
mov
inc
adc
mov
in
mov
cmpsb
js
movsb
mov
aad
or
sub
test
sbb
lahf
js
adc
std
mov
or
adc
hlt
dec
mov
xchg
repnz
rcrl
bsf
sbb
mov
ret
sbb
mov
adc
sbb
mov
frstor
sub
cmpsb
sbb
pop
add
cmpsb
ret
lds
das
mov
xor
cmp
mov
addr16
cmp
dec
movsl
ja
pop
dec
jno
jbe
dec
or
pop
ja
popf
inc
dec
add
shl
jecxz
stos
xor
push
push
or
xchg
ret
loope
adc
flds
pop
iret
pop
mov
ss
pop
cmpsl
jbe
or
loopne
jl
pop
xchg
adcb
xor
lds
jg
sbb
inc
adc
xor
shll
lcall
xchg
nop
fbstp
xor
and
imul
pop
dec
mov
repz
scas
sahf
fists
lret
out
and
sbb
and
sbb
int3
cwtl
scas
lret
lea
out
outsb
addr16
cmp
add
popf
jno
pop
pop
loopne
aam
or
jb
jo
sbb
pushf
rcr
mov
rcr
dec
jb
push
pop
inc
cmp
mov
sub
sub
lahf
dec
mov
add
xchg
lahf
pop
push
loopne
in
jmp
mov
xchg
mov
add
test
rcrb
rcrl
nop
into
cmp
repnz
fdivrl
mov
cld
outsb
cwtl
and
pop
das
sub
xchg
cmp
ds
sbb
cmp
mov
xor
repz
sub
rcrl
subl
in
mov
inc
pop
pop
push
mov
in
rcll
dec
aaa
int3
loop
test
cwtl
or
mov
xchg
dec
test
xchg
lret
xor
cltd
mov
adc
fildl
push
add
roll
sbb
mov
xchg
inc
jp
clc
movsl
push
pop
pop
jecxz
pop
xchg
sbb
pop
mov
in
sbb
std
clc
cli
add
test
mov
adc
fldt
lds
xchg
and
inc
mov
leave
mov
aam
cmpsl
test
mov
mov
or
add
mov
shr
xchg
xchg
push
add
arpl
out
xor
dec
sub
lods
adc
call
inc
popa
sub
iret
xchg
aad
out
inc
cld
or
push
xchg
xor
xchg
push
add
push
mov
pushf
mov
sbbb
jg
scas
sbb
mov
out
and
pop
test
lret
and
jge
push
ja
jl
dec
nop
jle
dec
pop
iret
out
cmp
loopne
add
or
ret
cld
mov
cmpsb
push
mov
push
adc
popf
movsb
xor
mov
je
jae
cld
pusha
test
mov
fs
lcall
sub
cmpsl
call
shlb
adc
les
aam
push
aam
pop
jecxz
mov
sahf
jecxz
cmp
add
insl
imul
sarb
fstp
mov
push
insl
push
mov
fs
pop
push
xchg
push
add
or
test
jno
mov
sub
ljmp
roll
sti
inc
xchg
in
pushf
in
or
add
aam
or
inc
push
loope
mov
push
movsl
pop
jnp
mov
xchg
les
mov
ret
jmp
cs
outsb
or
and
sarl
lods
inc
pop
xchg
sahf
inc
sub
push
push
dec
cmp
xchg
adcb
pop
cmpsl
cld
fs
adc
pop
std
cmpsl
lock
js
test
xchg
outsb
xlat
int3
ljmp
orb
push
addl
jo
inc
cmpsb
ficoml
push
adc
lds
int3
leave
sub
cs
out
loop
cmp
fldt
stos
mov
mov
testl
xor
xor
outsb
adc
mov
adc
push
push
xor
add
pop
jne
enter
mov
sub
arpl
and
lock
stc
push
xor
mov
jmp
lea
xchg
mov
mov
xchg
sub
outsl
lcall
clc
mov
and
cwtl
dec
sub
mov
mov
push
mov
and
mov
cwtl
sbb
jge
jno
inc
cltd
pop
pushf
cmp
push
push
xchg
xorl
xchg
jge
popa
xlat
loopne
sub
inc
stc
movsb
pushl
cld
add
insb
dec
xchg
lcall
mov
push
pushf
mov
pop
inc
mov
sbb
mov
inc
xor
stos
xor
in
cmpsl
and
clc
clc
mov
daa
sbb
inc
es
jne
mov
pop
xchg
lods
push
das
popl
mov
pushf
push
fldcw
cmp
dec
xor
mov
fwait
ljmp
fwait
push
int
mov
jl
mov
xchg
add
into
pop
test
popf
sbb
das
inc
pusha
adc
rorb
in
add
std
adc
mov
das
mov
fldpi
sbbb
fisttpl
decl
or
js
and
adc
aam
or
loope
adc
ror
and
push
popf
stc
mov
ja
and
lret
fisttpl
and
fsubrl
pop
pusha
dec
and
mov
xchg
xchg
shll
jo
fistpl
xor
pusha
sub
adc
fisttpl
mov
int3
addr16
sub
and
push
push
sbb
lret
or
rcll
jne
jo
xchg
ret
jge
int
insl
lcall
sub
mov
shrl
add
ss
cli
inc
inc
mov
dec
push
sti
push
inc
lea
or
mov
jns
jg
xchg
int
divb
xor
test
in
nop
jne
cmp
stc
jno
ror
popa
push
mov
xchg
out
adc
push
mov
xchg
mov
sbbb
adc
outsl
pop
imull
loope
imul
lahf
ja
in
mov
xchg
pop
movsb
outsl
cwtl
out
cwtl
adc
test
mov
call
fistps
rcrl
popf
dec
frstor
inc
rorb
pop
cmpsb
outsl
imul
jns
push
nop/reserved
sbb
jmp
fdivrp
lods
cmp
xchg
mov
pop
push
inc
mov
movsb
jp
ret
push
jp
ljmp
rcll
xchg
mov
xchg
jns
sbb
scas
inc
mov
aam
cmpsl
xor
inc
xchg
add
out
mov
sub
xchg
mov
jb
adc
in
int
sti
shl
mov
ret
pop
jns
sub
xor
fcoms
hlt
in
bound
pop
mov
ret
shl
clc
insl
push
sub
mov
mov
imul
int3
push
aaa
and
jg
enter
loop
jns
repz
dec
inc
push
bnd
push
lret
fs
leave
enter
jae
cli
push
hlt
mov
daa
cmovs
pop
jle
mov
lahf
rcrb
jmp
lret
ds
adc
xchg
in
jl
jl
out
mov
lods
lcall
or
and
pop
mov
imul
out
insb
out
fldt
popf
in
inc
in
xor
dec
mov
jae
mov
sti
movsb
call
mov
mov
push
push
xor
push
ljmp
xor
inc
xchg
das
dec
push
lock
dec
int3
insl
scas
clc
cwtl
add
data16
ffree
shrl
sub
push
sbb
fmuls
jecxz
cli
cmpsl
loopne
cltd
mov
faddp
and
jno
mov
hlt
enter
adc
ficoms
in
pop
ja
xor
adc
repnz
test
shrl
js
call
mov
in
and
push
int3
cltd
daa
xor
add
scas
pop
jge
pop
push
inc
outsl
inc
push
ja
js
testl
and
int
pop
jns
call
into
roll
cmp
imulb
pop
lods
mov
xchg
pop
add
jb
into
int
jg
and
pop
das
inc
jns
or
ret
dec
movsb
shrl
mov
xor
push
inc
adc
mov
xchg
lret
dec
shll
cs
sub
mov
pop
fidivrs
add
xchg
lahf
leave
mov
inc
cwtl
cmpb
pusha
inc
cmp
lock
mov
fistpll
lods
sub
jae
inc
std
je
popf
inc
aas
movsl
add
and
xchg
push
scas
popa
aaa
xor
ret
adc
pop
std
int3
lea
jmp
jnp
and
or
ja
jae
dec
repz
push
sub
mov
xchg
pushf
pushw
jg
dec
mov
lods
pop
mov
xor
popf
ret
mov
jg
jp
pushf
lods
stc
push
movsl
jecxz
push
std
dec
imul
sbb
sahf
or
scas
add
mov
aaa
fstpt
sub
mov
in
sbb
lods
out
xchg
shl
int3
push
adc
dec
in
scas
lret
xor
mov
movsb
or
lea
cli
mov
inc
out
ja
iret
cmp
dec
scas
push
cmp
xorb
rcr
pop
or
sar
clc
and
cli
es
push
push
cs
push
and
jnp
add
mov
push
mov
mov
jle
dec
mov
adc
mov
leave
or
mov
xor
inc
mov
rorb
mov
mov
mov
xorl
mov
dec
inc
adc
je
sbb
inc
popa
xchg
andl
movsl
loop
loopne
xchg
es
or
pop
fmuls
vunpckhps
xchg
in
pop
mov
inc
les
xor
lds
cmp
aas
xchg
imul
xchg
out
in
clc
int3
int
mov
jmp
lahf
mov
mov
int3
add
push
xorl
xlat
pop
push
add
sub
adc
or
cwtl
inc
aaa
inc
movsl
pop
pop
and
push
jno
adc
inc
sbb
xchg
aad
loop
fadds
xorl
iret
popf
push
fimuls
inc
cmp
jae
test
notl
sbb
sub
xorl
jbe
push
ss
adc
adc
cwtl
mov
mov
xchg
push
movsb
add
mov
sub
insl
ficoms
pop
and
pop
ljmp
into
ss
fbstp
gs
mov
adc
in
mov
mov
add
add
test
inc
dec
ficomps
cltd
jns
and
cwtl
xor
iret
imul
in
mov
xlat
mov
cld
rep
push
xchg
mov
adc
push
scas
and
dec
in
push
and
jo
out
jne
les
insl
sub
movsb
sub
xor
cli
aas
cmc
sub
add
out
pop
arpl
cmpsb
and
cmpb
shll
mov
cmc
out
jl
xchg
test
dec
test
xchg
and
imull
repz
popa
adc
or
push
inc
push
std
ljmp
out
lcall
push
popa
mov
xor
fisubs
mov
or
xchg
jae
or
xchg
sti
cmp
cwtl
sarb
fcomi
and
and
push
and
addr16
jae
inc
lods
repz
sbb
cld
mov
test
mov
rclb
or
scas
jae
mov
iret
int3
rcl
and
lret
or
stos
sahf
add
jl
push
push
add
add
cs
add
fs
fcompl
push
ret
lea
les
mull
cli
push
mov
lea
cmp
add
incb
or
stc
and
mov
in
xchg
mov
inc
ret
rclb
imul
add
insb
cmp
cwtl
rol
pushf
mov
cmp
inc
sub
inc
iret
add
push
mov
push
jecxz
jno
pop
add
outsb
mov
cmove
stc
aam
lret
test
shll
sub
out
lcall
dec
cmp
jns
inc
inc
dec
inc
lods
mov
dec
xchg
xor
inc
fidivs
repnz
jo
popa
xor
cmp
jnp
insl
cmpsl
cld
xchg
in
in
movb
bound
in
jecxz
xor
cmpsb
out
xchg
jle
mov
jle
push
loopne
xchg
arpl
mov
jb
sub
jo
leave
jle
test
je
loope
stc
insb
dec
dec
adc
mov
lahf
sti
in
repnz
jl
aad
mov
xchg
add
xchg
ret
and
stos
add
push
test
repz
pushf
lock
test
ret
loope
fwait
cmp
filds
inc
push
loope
mov
idivl
call
into
cwtl
or
dec
adc
hlt
cmpsb
orl
movsl
fmuls
insl
dec
mov
lds
sbb
lods
leave
cmp
mov
sub
outsl
test
push
sbbl
dec
xor
out
scas
mov
pop
aaa
inc
outsl
stos
cmc
inc
lods
mov
fcomps
jmp
sbb
add
pop
mov
or
cld
mov
jnp
xchg
or
cmp
andb
xor
ret
sbb
fdivl
mov
or
lods
movsl
and
dec
mov
and
sub
call
xchg
mov
xchg
jecxz
push
scas
daa
xchg
inc
out
or
or
jge
sbb
add
or
push
stos
insl
hlt
jl
arpl
add
in
je
mov
mov
cmp
andl
dec
aam
rcrb
enter
and
push
add
inc
jns
fists
pop
and
mull
lret
cmc
cwtl
out
mov
lods
mov
mov
xor
out
insb
xchg
mov
in
movsb
fbstp
inc
in
arpl
pop
stos
cmpl
add
push
lret
cwtl
sub
rorb
mov
jne
mov
jp
sub
pop
hlt
insb
pop
xchg
test
dec
lcall
sbb
arpl
xchg
jne
cmpl
frstor
in
jno
push
dec
mov
rep
in
cmp
and
xor
sub
stos
movsl
enter
mov
sub
jne
inc
mov
stos
jl
pop
inc
sub
push
dec
and
js
inc
or
adc
in
push
mov
jle
ds
psllq
enter
rcr
cmp
xchg
into
pusha
mov
jnp
adc
jg
push
mov
aad
dec
dec
icebp
in
sbb
add
mov
sbb
xor
lea
sub
call
fs
outsb
jmp
xlat
jmp
mov
in
int3
test
mov
pop
repnz
sbb
sub
leave
add
pop
mov
dec
dec
insb
je
ror
push
shlb
sub
mov
sub
int
repz
mull
scas
dec
xchg
das
aam
jge
jmp
lret
lcall
mov
std
sub
push
pop
mov
scas
inc
shll
sbb
inc
aad
out
add
icebp
test
lock
int
sbb
push
lock
cmp
push
loop
outsb
jno
lret
loopne
or
sbb
cmp
ljmp
or
xor
jp
rcr
inc
out
xchg
jbe
mov
jmp
iret
xchg
pop
fs
test
xchg
cld
loope
pusha
iret
xor
enter
fsubrs
insb
mov
aad
mov
xchg
push
sub
sbb
clc
inc
stos
jae
mov
popa
xor
fistpl
pinsrw
jge
jge
popf
pusha
jg
rcrb
scas
mov
imul
sub
dec
aas
out
stc
jae
pop
fistpl
pop
mov
sub
fildll
xlat
pop
xchg
jle
xchg
stos
int3
jecxz
popa
inc
in
dec
sub
add
mov
sti
sub
jo
xchg
insl
ja
push
mov
inc
add
ss
movsl
xor
xor
test
xor
icebp
ficomps
std
cmp
fstpl
lock
lock
and
les
xchg
mov
inc
pop
scas
xorb
aam
push
mov
int
inc
fdiv
lret
in
clc
addr16
pop
stos
enter
adc
or
add
jge
fistps
xchg
mov
or
icebp
rorb
mov
xchg
cmpb
popf
ss
repz
or
sub
add
mov
fmuls
dec
mov
mov
js
and
lahf
dec
mov
pop
push
inc
rclb
clc
repz
inc
and
sti
fs
add
push
and
mov
mov
mov
arpl
subl
test
or
xchg
add
pusha
insl
xchg
mov
jmp
push
inc
add
pop
test
push
jae
pop
xchg
mov
ss
out
xor
pop
stos
pushf
int
and
insl
xchg
stos
lock
mov
outsl
ja
int3
cmp
xor
fisttpl
or
push
shrb
repz
sbb
cmp
gs
jp
mov
test
arpl
add
imul
or
int
addb
adc
inc
dec
mov
and
mov
rcl
ds
mov
frstor
je
enter
bound
imul
aas
subb
rcr
add
fwait
movsl
add
data16
add
fmul
jl
mov
pop
in
inc
dec
push
flds
xor
arpl
leave
ret
jg
hlt
pop
repnz
leave
sub
cmc
mov
sti
or
mov
sub
shlb
push
dec
or
add
sub
push
push
dec
repnz
shll
in
mov
repnz
in
es
enter
insl
xchg
addb
outsl
inc
and
imul
pushf
ljmp
js,pn
enter
ljmp
add
mov
lods
lock
xor
in
out
sbb
popf
sub
and
add
fistpll
mov
mov
stc
and
cmc
mov
std
jmp
repz
push
add
insb
mov
fldl
les
jnp
add
sbb
and
add
adc
sub
push
fcomip
mov
lcall
js
push
push
lret
push
mov
sbb
subb
mov
sahf
leave
iret
cmpb
add
fisubrl
movsl
xor
pop
sbb
ljmp
ret
inc
xor
push
test
pop
jle
mov
testl
cmp
xlat
test
test
shrl
test
cmc
add
scas
popa
mov
adcb
ret
xchg
enter
icebp
lret
inc
std
arpl
rorl
stos
arpl
lcall
pop
scas
fimull
cmp
pushl
adc
add
movsl
into
decb
push
mov
add
outsl
cmp
fs
mov
xor
std
mov
mov
test
fnsave
cmpsb
push
in
inc
scas
outsb
push
shlb
fistl
adc
lahf
jns
scas
movsl
inc
int3
incb
mov
or
jecxz
or
lret
pushf
jbe
xor
and
lahf
or
lahf
cmc
sbb
mov
adcl
loope
or
inc
mov
movsb
xor
ja
cmp
xchg
xchg
outsb
pop
test
adc
cli
mov
lret
inc
jno
testl
sub
cld
mov
push
add
repnz
xor
jecxz
cmp
mov
scas
mov
cwtl
mov
pop
push
std
test
mov
add
dec
pusha
dec
les
jge
inc
repz
pop
pop
mov
push
shrb
test
adc
add
popa
and
pop
test
icebp
in
les
push
sub
mov
aaa
or
mov
adc
add
mov
xor
jo
jbe
data16
jl
notl
test
and
add
mov
aad
inc
mov
add
jo
data16
rcrb
sbb
jecxz
and
mov
sbb
xor
sbb
cli
dec
loop
pushf
clc
pop
pop
lahf
mov
inc
in
adc
cwtl
lds
sbb
mov
mov
iret
sbb
jns
mov
pop
xchg
sbb
xchg
sbb
daa
testb
into
jmp
call
sbb
xor
ss
inc
dec
iret
leave
test
out
mov
add
int
call
add
fwait
jo
fidivrs
clc
aaa
fcomp
inc
jns
cmp
es
fwait
add
pop
sbb
dec
sbb
stos
loopne
filds
push
imul
sahf
jb
repz
sub
aam
mov
xchg
lret
jae
es
test
dec
lret
jmp
insl
popf
xchg
test
mov
or
pop
jno
aaa
inc
xor
sbb
gs
out
lods
mov
xor
inc
stos
cltd
xor
xorb
xor
mov
lods
pop
adcb
ficoms
adc
mov
mov
fnstenv
ljmp
loop
pushf
fisubs
shrb
movsl
cmp
fstp
std
aad
outsb
outsb
insl
int3
xor
shl
loop
inc
ret
roll
push
sar
jnp
aam
in
adc
mov
and
stos
iret
inc
jb
inc
es
ss
mov
push
mov
ljmp
les
movsb
dec
adc
mov
pop
mov
cli
mov
jbe
xor
mov
scas
and
mov
shrb
inc
xor
jbe
iret
imul
adc
shlb
aam
stos
cltd
sahf
mov
data16
push
test
insl
rcll
inc
sbb
hlt
xor
mov
fscale
mov
inc
fucom
ret
fwait
lods
or
and
pop
xchg
pop
jne
loop
faddp
inc
sbb
std
in
mov
test
bound
sub
dec
mov
inc
lret
sub
int3
add
add
cmp
and
lods
sbb
push
cmp
jge
lods
hlt
lock
cld
jp
xchg
push
call
ljmp
mov
jmp
and
fwait
and
and
jmp
cmp
test
xor
icebp
cmpb
sub
loop
call
sbbb
lahf
mov
and
leave
aas
in
add
int3
jg
push
cmp
imul
push
aam
pop
mov
shrl
arpl
pop
pop
sub
hlt
rcr
xor
and
pushf
push
inc
call
mov
aaa
or
or
gs
and
pop
pop
add
jmp
add
ds
pop
testb
je
or
and
aas
mov
or
mov
cld
sbb
lahf
cli
mov
fldt
pop
xchg
cmp
mov
fistl
adc
int3
pop
adc
ds
cmp
clc
pop
jno
and
sub
add
push
orb
stc
jne
mov
mov
adc
lret
push
mov
sub
cli
out
jmp
xchg
adc
aaa
add
lods
sbb
lahf
lods
mul
je
leave
push
cld
aaa
wbinvd
and
pushf
cli
std
add
xor
mov
loopne
ljmp
stos
push
gs
mov
sub
cmp
or
adc
dec
push
stos
shrb
rolb
fmull
push
idivb
mov
mov
mov
fdivr
cmpsb
inc
or
lods
mov
imul
inc
sbb
ret
jg
hlt
gs
and
fs
cmp
mov
mov
mov
xlat
in
cli
pop
ss
fs
ret
push
xchg
cmp
aaa
aam
and
add
cmp
xor
xchg
inc
xchg
ret
fwait
jp
neg
and
jne
dec
loope
mov
stos
loope
addr16
in
test
adc
add
lea
mov
cmp
cmp
lock
xchg
jnp
cmp
out
jno
fdivl
hlt
clc
mov
xchg
cmpsb
lock
jecxz
ret
pop
fstps
repnz
movsl
push
test
adc
fsubrl
pop
cmp
call
jp
xor
cwtl
mov
dec
lret
mov
or
in
daa
push
jge
js
and
fisubs
pop
dec
pusha
cmp
mov
rcl
jp
test
mov
shll
and
shll
subb
incl
mov
rcll
or
daa
out
and
int
inc
push
outsb
imul
ror
mov
sub
or
sub
negb
inc
xor
pop
rcl
lahf
rclb
mov
sbb
add
add
mov
icebp
aad
dec
es
loopne
mov
pop
inc
arpl
add
and
xor
inc
xchg
and
popf
jbe
loop
push
push
stos
xchg
pop
add
jmp
cs
imul
cmp
jp
mov
lret
dec
and
push
add
push
jae
cmp
test
xchg
movsl
or
fs
cmp
cltd
xor
or
mov
das
cmp
daa
lods
dec
stos
xor
sti
aam
repz
jge
iret
mov
jne
pusha
fldt
cmpsl
and
mov
insl
jge
jae
les
ds
out
mov
or
subb
xchg
inc
mov
test
mov
mov
outsl
push
xor
imul
xchg
sub
xor
bound
shlb
or
sub
insl
jns
inc
fcomp
or
mov
dec
test
mov
dec
dec
pop
cli
out
imul
test
jle
lods
pop
scas
push
xchg
and
xchg
fucomi
ret
mov
aad
iret
push
jns
int3
stos
in
fwait
ja
push
push
mov
sti
test
mov
and
mov
aam
sbb
sahf
inc
mov
out
adc
add
enter
jae
mov
mov
icebp
or
mov
fpatan
mull
leave
clc
pop
pop
cmp
or
daa
pushf
mov
xlat
jno
mov
dec
lahf
flds
test
mov
mov
test
xchg
cmp
or
sbb
mov
dec
pop
or
fisubl
inc
call
out
leave
std
dec
jl
loopne
jns
cmpsb
mov
out
or
xor
push
pusha
sahf
mov
and
inc
pop
xchg
mov
inc
in
popa
add
int
iret
pop
mov
jg
jno
mov
addr16
sub
jo
call
loopne
or
and
enter
inc
pop
fisubrs
jecxz
loopne
sbb
mov
add
mov
xchg
jmp
add
daa
jp
or
and
jo
sub
movsb
mov
sub
in
and
and
inc
xor
cwtl
sbb
xchg
scas
push
mov
mov
hlt
inc
bound
iret
imul
mov
jnp
mov
test
push
mov
adc
cwtl
sub
int3
mov
dec
andl
xchg
hlt
roll
js
scas
add
in
das
dec
frstor
lret
mov
test
fnstcw
inc
jle
cmpsl
adc
mov
mov
pop
sahf
push
ljmp
ret
sub
mov
filds
sub
call
mov
rcrb
sub
aas
lahf
pop
push
mov
push
and
xchg
lahf
pop
cmpsb
repnz
fcmovbe
xchg
pop
sbb
fstps
int
pop
jnp
lods
movsl
lods
xor
xor
cmp
pushf
out
fsubs
sub
xchg
jns
loope
jp
stos
jns
mull
stos
jns
roll
or
dec
shlb
jecxz
outsl
pop
imul
js
dec
fwait
push
ds
sarl
adc
push
aad
xor
cmp
inc
pusha
push
bound
add
sbb
add
in
clc
pop
xchg
mov
push
ret
mov
ret
push
movb
or
cwtl
sbb
cs
ss
shlb
fisubrl
jnp
sub
or
mov
mov
outsb
or
sub
push
adc
mov
adc
adc
and
cwtl
inc
xchg
rorl
in
cwtl
push
fwait
adc
fwait
nop
mov
daa
or
loop
cmpl
and
cs
lret
insl
inc
push
and
sub
push
sbb
push
sti
jnp
jae
sbb
dec
test
daa
jecxz
addr16
cld
adc
jb
mov
lahf
nop
stc
arpl
push
call
pop
pushl
dec
xor
mov
aaa
pop
pusha
add
clc
jne
dec
pop
push
or
jo
sub
dec
push
js
imul
inc
inc
and
mov
dec
iret
shl
daa
iret
pop
or
sbb
out
cwtl
out
and
pop
push
mov
push
dec
xchg
int
inc
and
pop
mov
into
jl
adc
mov
push
leave
xor
scas
rclb
pop
loopne
jno
rcll
js
adc
sub
movsl
rcl
mov
push
pop
or
insl
dec
dec
fs
push
leave
mov
dec
insb
add
ret
cwtl
mov
out
in
adc
scas
daa
aad
cmp
dec
jmp
pop
sbb
xor
pop
call
push
clc
les
jb
xchg
sbb
imul
int
scas
fcompl
inc
cmpsl
pop
xchg
adc
cmp
das
in
stc
in
inc
call
lds
repnz
cmp
rclb
subl
mov
leave
xchg
faddl
adc
jp
rcl
lods
jp
mulb
xchg
rol
or
push
into
jno
xchg
jb
fwait
xor
mov
test
ret
out
push
add
pop
dec
ret
sbb
and
loop
dec
xor
dec
outsb
shrb
sub
lock
outsl
mov
in
lea
add
out
cmc
xchg
pop
fadds
loop
add
jb
jle
sbb
jae
ss
aaa
loope
shlb
pushw
lods
fnstcw
cmp
clc
test
subb
and
movswl
inc
and
and
or
mov
and
ljmp
ficomps
mov
aad
test
leave
arpl
mov
or
sbb
mov
out
mov
and
inc
lods
cmp
xchg
inc
andl
sub
mov
fwait
adc
jno
adc
jecxz
add
lret
adcl
pop
repnz
xchg
jb
repnz
add
jecxz
imul
cwtl
out
int
dec
mov
idiv
sbb
popf
mov
lods
xchg
mov
in
jle
jbe
xchg
loopne
cld
or
or
sarb
popf
out
lahf
jp
mov
dec
and
add
dec
sbb
repz
and
and
imul
rorb
and
push
jl
cld
ljmp
add
leave
pop
mov
sbb
mov
aad
imul
outsb
push
xchg
sti
adc
ljmp
scas
bound
sbb
inc
and
pop
loop
cli
xchg
ret
dec
xor
cmp
movsl
jo
enter
movsl
dec
addr16
inc
sub
xchg
mov
cmovae
pop
dec
fnstenv
sarb
or
add
push
outsb
out
movsl
push
inc
fsubrs
push
adc
adc
mov
or
mov
insl
cmp
cltd
inc
sub
pop
test
imull
push
xor
fwait
jecxz
add
mov
lods
cmp
lds
push
decl
popf
repnz
or
pushf
xchg
push
fmul
and
scas
and
leave
jnp
xchg
std
or
bound
and
loop
xchg
or
pop
xlat
je
out
fsubrl
mov
das
add
mov
icebp
arpl
sbb
aad
push
out
call
movsb
fidivl
jge
fimuls
and
cmpl
filds
sahf
movsb
dec
into
into
insb
and
cmp
cmpsl
push
pop
insb
neg
lcall
inc
sub
idivl
add
jg
sbb
xorb
es
push
jp
pop
into
xchg
and
mov
add
ret
mov
jno
rcrl
jmp
lcall
inc
mov
push
pop
sahf
das
mov
jno
jg
xor
sbb
jb
bswap
dec
cltd
test
mov
and
gs
fists
mov
xchg
and
inc
pushf
lcall
push
and
dec
ds
jp
cmp
and
mov
lret
push
mov
cmpsl
imul
push
jnp
mov
fwait
jo
cmp
popl
jge
push
aam
inc
pop
aam
insb
cmp
roll
jmp
scas
jb
mov
xor
imul
in
out
call
mov
xor
push
dec
mov
mov
sbb
aaa
pop
lcall
or
test
mov
imul
or
je
and
rorl
mov
push
scas
add
xchg
andb
sbb
fs
ret
stos
and
jmp
adc
cmp
push
jb
jno
dec
mov
mov
xchg
or
xchg
sbb
xor
sub
adc
and
fidivl
or
test
jmp
mov
cmp
invd
xchg
adc
pop
mov
mov
xchg
lods
mov
cmp
dec
cmp
xchg
push
pop
mov
fsubl
fldenv
add
sbb
dec
lods
inc
xchg
xchg
pop
scas
in
movl
into
push
jmp
shll
in
dec
cld
fwait
push
in
insb
xor
inc
jl
push
fcmove
loopne
and
fucomp
inc
ret
scas
mov
push
into
or
jns
lock
mov
fisttpll
dec
nop
loope
and
mov
dec
stos
xor
bound
in
add
and
mov
loope
insb
sbb
fwait
lret
shlb
mov
scas
adc
stc
mov
andl
xchg
mov
xlat
enter
sahf
or
out
inc
sbb
cs
and
repnz
rcl
xor
sbb
pop
popl
out
clc
xor
in
jns
xor
push
dec
repnz
mov
dec
push
push
rolb
add
jno
mov
test
loope
and
fs
fisubrs
add
pusha
pop
push
loope
sub
movsb
addr16
or
movsb
inc
lds
push
lods
out
loope
xor
or
popf
xor
mov
sbb
xchg
fwait
dec
add
insl
inc
repz
jmp
or
dec
movsl
and
enter
or
cwtl
popa
insl
mov
cmp
call
mov
pop
ds
mov
mov
and
lret
rorb
jb
mov
fisubl
mov
push
mov
shlb
outsb
ja
in
out
in
xchg
dec
jmp
sahf
insl
aaa
pop
ja
aaa
cltd
jle
loopne
hlt
lahf
lock
stos
jle
dec
cmp
push
mov
mov
mov
lcall
jae
or
push
int
sbb
mov
inc
lds
leave
insl
jg
sbb
xchg
movsb
rcrb
movsl
dec
add
ljmp
mov
lret
lock
dec
add
push
jg
jno
shrl
jno
outsb
sbb
loopne
ds
sbb
or
inc
out
xchg
mov
leave
add
or
xorb
push
jmp
mov
inc
imul
cmp
cli
add
rorb
adc
jge
lock
mov
sarl
lds
xlat
mov
fwait
lret
xchg
icebp
push
push
or
xor
pop
fs
jmp
cmp
out
dec
iret
stc
xor
pop
adc
js
xor
jne
test
mov
sub
xchg
in
fsub
mov
mov
sbb
std
xor
neg
jmp
jo
scas
inc
dec
cmp
das
pop
inc
or
adc
add
inc
pop
push
add
xchg
loopne
cmpsl
push
push
mov
inc
xor
insl
int3
nop
push
cmp
jge
jo
insl
pusha
insb
shl
and
jg
cmp
mov
rcl
cmp
mov
cltd
push
jo
sbb
les
scas
and
pushf
jle
xchg
and
scas
aam
pusha
std
push
push
lret
mov
add
sbb
lock
pop
push
test
lahf
cmovle
pop
out
mov
popa
lds
lods
and
jp
adc
testb
dec
inc
xchg
mov
pop
fmuls
cmp
jmp
mov
mov
or
sub
mov
xchg
imul
or
push
dec
add
test
mov
lret
inc
and
mov
fs
lds
add
pop
enter
loop,pt
xchg
jae
decb
dec
outsb
test
in
popf
sti
jg
decb
and
inc
add
inc
fstpt
imul
add
jne
leave
pop
adc
pop
adc
add
pop
mov
adc
mov
sub
and
call
out
rcr
push
inc
out
sbb
pop
push
shlb
adc
and
push
rcrb
je
xorb
mov
adc
xchg
pop
and
fidivs
shll
shlb
push
iret
lahf
es
mov
in
xor
repz
nop
ljmp
and
pop
inc
add
inc
mov
dec
jno
stos
in
test
jne
in
xor
pushf
cli
fidivl
in
mov
adc
out
scas
int
mov
adc
int3
imul
aaa
pop
push
out
dec
js
dec
cmpsl
lock
xor
inc
mov
lcall
cmp
sbb
das
and
pop
sbb
or
pop
and
mov
add
fists
sub
movsb
cltd
jmp
les
icebp
sbb
aaa
sbb
inc
inc
xchg
dec
jp
or
jmp
call
in
cmp
aaa
in
stos
insl
jl
outsb
scas
xchg
push
stc
dec
sbb
cmpsl
stc
push
xchg
stc
or
or
jno
inc
outsb
sub
push
mov
mov
xor
pop
and
insl
mov
push
xchg
jae
jmp
lcall
repnz
pop
cmp
pop
add
lods
pop
mov
inc
push
out
sbb
cmp
dec
fmull
das
jp,pn
xchg
sarb
stos
add
loope
inc
and
pusha
inc
out
mov
sbb
adc
adc
push
in
or
mov
js
and
jl
pusha
mov
mov
mov
mov
cmc
lods
adc
mov
gs
cmp
dec
fadd
in
in
mov
cli
mov
push
dec
cmp
fnstcw
icebp
cwtl
pop
jae
cmp
mov
lea
mov
mov
pop
inc
in
mov
lret
jge
out
add
xchg
mov
mov
cmp
pop
push
xchg
pusha
cmp
rol
pop
xchg
mov
in
andl
dec
fprem
mov
testb
jae
cltd
cmp
je
cmp
add
and
mov
xchg
sub
add
in
mov
xor
out
adcb
stc
dec
dec
mov
adc
jne
inc
lahf
pop
sub
insb
add
pop
xor
jmp
jnp
sub
cmp
jb
aad
adc
iret
std
out
mov
stos
xor
lods
data16
rorb
jg
sub
inc
scas
and
test
clc
push
push
in
call
rcl
adc
mov
cmp
movsl
testl
ret
xor
call
cmp
outsl
or
rcll
stos
xor
hlt
xchg
xorl
adc
add
iret
mov
in
clc
cwtl
andps
jae
shll
arpl
mov
bound
fnstsw
repnz
loope
outsl
orl
mov
jo
jmp
pusha
loope
stos
repz
cmp
adc
or
inc
cmp
cmpsl
cmpsb
frstor
call
adc
sbb
ficompl
ret
push
cmc
orb
fists
or
xchg
ljmp
movsb
jns
mov
add
add
scas
push
data16
popf
push
les
cmc
fidivrs
ficomps
pushf
pop
mov
mov
lds
xchg
in
imul
dec
xchg
jno
or
sbb
mov
cwtl
clc
not
in
outsl
repz
add
sbb
dec
lods
test
faddl
mov
int
ret
lret
rorb
outsb
sub
cmpsl
pop
popa
xchg
jns
sbb
push
imul
jae
in
jnp
das
int3
dec
jmp
dec
sub
sub
out
notb
jl
test
jno
mov
fstpl
into
push
sub
push
jecxz
pop
push
fists
mov
movl
cli
inc
popa
repnz
push
cmpsb
mov
in
hlt
or
test
popf
dec
in
sbb
out
repz
mov
sbb
aam
pop
mov
inc
leave
pop
inc
push
loop
data16
and
mov
cwtl
sbb
xchg
adc
mov
out
dec
sub
xchg
xor
inc
push
push
xchg
in
xorl
push
push
mov
fucom
inc
xlat
int
lcall
bound
stos
pop
xor
sbb
push
int
pop
ljmp
dec
dec
stos
jae
test
xchg
push
xchg
jne
cwtl
mov
adc
jge
mov
push
xor
jnp
testl
hlt
sbb
shl
add
pop
mov
std
icebp
enter
rorl
outsl
fiadds
pop
add
xor
insl
clc
jbe
push
adc
mov
mov
lock
fs
or
add
in
jle
and
mov
pushf
pop
jg
jmp
inc
cmp
cmp
cmp
in
xor
push
mov
stos
out
mov
loope
pop
cmpl
pop
cmp
mov
cltd
incl
call
adcl
mov
cmp
cli
in
mov
sbb
rcrl
mov
sub
int3
rorl
adc
std
gs
adc
add
pop
push
inc
dec
aam
push
jb
arpl
sbb
rcrw
clc
xor
push
add
dec
int
mov
aaa
jns
lret
jcxz
mov
mov
jb
sub
cld
sahf
int
out
mov
sbb
inc
mov
jp
loop
call
mov
jo
rorl
pop
push
jl
xchg
jno
cs
push
pop
mov
sub
addl
insl
lar
mov
scas
or
pushf
pop
jecxz
scas
xchg
xlat
shlb
hlt
dec
mull
dec
pop
dec
loope
pop
mov
sub
xchg
fidivs
pusha
push
outsb
popf
mov
out
push
jbe
stos
xor
xchg
pop
push
adc
xor
jb
pop
add
sahf
adc
mov
push
or
lret
mov
inc
xchg
mov
xlat
lock
stc
mov
dec
sbb
outsb
sti
jns
push
mov
push
xor
hlt
gs
ret
mov
cmp
mov
dec
xorb
xchg
frstor
fisttpll
and
sub
jmp
jbe
sub
dec
push
xor
movsb
pop
jge
mov
stc
dec
mov
loop
mov
ret
aad
mov
pop
push
icebp
sub
adc
fwait
negb
cmpsb
in
movsb
insb
test
cmp
xor
daa
pop
je
inc
pop
rolb
ss
push
mov
fildl
test
xchg
jmp
sbb
scas
das
in
cmpsl
sbbb
cmp
or
mov
rcll
adc
or
test
xor
cmpsb
lods
movb
roll
data16
mov
pop
imul
mov
daa
pop
add
lock
cmpsl
or
fmul
ss
adc
seto
pop
push
xchg
adc
fwait
jp
cmp
int3
mov
rorl
ljmp
cmp
and
pushl
xor
in
out
sub
jne
movsb
or
mov
insb
ret
loop
cmp
mov
sbb
popf
lahf
dec
stos
and
or
jg
mov
pop
add
cmp
stc
lock
pushf
inc
xchg
dec
jg
push
loop
daa
push
aaa
int3
or
shrl
jne
out
sbb
js
lcall
jmp
sub
jg
xchg
adcl
inc
into
fisttpl
xchg
jecxz
repz
xchg
pop
les
inc
arpl
test
test
push
mov
aas
or
and
sbb
mov
mov
xorb
je
adc
jmp
sbb
dec
cwtl
test
sbb
outsl
pop
or
dec
mov
mov
outsl
lahf
jns
push
fnsave
cmp
mov
jo
outsl
mov
cld
or
inc
int
mov
mov
mov
jl
inc
sub
push
mov
inc
jge
pop
mov
andb
mov
inc
adc
cmc
or
and
pop
mov
int3
jo
or
sbb
mov
xchg
mov
sbb
add
iret
jle
test
jnp
add
pop
rorl
jno
or
mov
push
out
or
lods
mov
cmpsb
sbb
adc
push
xor
fdiv
in
pop
in
push
cli
mov
test
mov
dec
roll
outsl
mov
dec
jg
inc
push
pop
push
adc
int
test
stos
loopne
xor
xchg
and
inc
xor
insl
fstpl
add
stos
jg
push
mov
sbb
jecxz
jg
lret
sar
cs
mov
ja
popf
add
loope
mov
sbb
inc
fsts
xlat
sbb
or
mov
popa
aam
and
push
push
push
std
xchg
cmc
jne
fwait
cmp
adc
jb
mov
mov
jae
xor
xor
cli
xchg
inc
inc
dec
sub
outsb
mov
push
cmpb
imul
loopne
fistpll
cli
push
cwtl
daa
shlb
loop
xor
jg
mov
add
bound
shl
inc
aas
inc
mov
xchg
loope
sub
jle
daa
popf
mov
test
fmull
mov
adc
mov
pop
mov
scas
fcomp
dec
popf
adc
das
dec
aas
push
adc
aaa
push
adc
adcb
in
xor
mov
outsb
outsl
add
push
cmp
imul
test
enter
fldt
mov
mov
loop
jne
xchg
sbb
sti
in
fmull
sbb
mov
xor
push
or
pop
jbe
icebp
push
mov
pop
pushf
test
sub
jl
dec
addr16
jmp
mov
cmp
xor
imul
shl
push
inc
xor
mov
cmp
sahf
imulb
xchg
les
stos
xlat
dec
and
movsl
mov
test
inc
inc
xor
addr16
cli
inc
push
ret
int3
leave
pop
dec
outsb
sbbb
in
lcall
mov
sbb
and
test
sbb
cmp
mov
sub
inc
xor
add
subl
xchg
pminsw
mov
jae
mov
mov
or
sub
aam
adc
mov
or
std
ret
pop
xorl
push
and
mov
sbb
push
add
repnz
xchg
loopne
lds
pop
sti
out
jle
xor
cltd
es
jge
outsl
mov
add
lods
movsl
fs
xchg
sahf
push
insb
push
pop
clc
push
push
inc
adc
fucomi
in
shrl
xor
add
adc
popa
jge
xlat
dec
fwait
cmp
add
int
nop
sbb
push
pop
daa
icebp
jb
aaa
popa
jl
xchg
pushl
fisubrs
inc
pop
inc
mov
jle
pop
adc
jl
jbe
and
xor
ds
sti
mov
movb
adc
mov
addl
push
loope
bound
pop
inc
repz
test
sbb
gs
mov
adc
xlat
jge
outsl
pop
outsb
std
mov
pop
test
pop
addr16
imul
das
pop
out
fmul
inc
repnz
fnstsw
pop
repnz
testb
cwtl
sub
and
push
jge
cmp
into
lret
mov
imul
mov
and
popa
jg
add
lcall
leave
xor
push
cmpsb
imul
sub
in
loope
lret
cmp
jg
shrl
lahf
mov
adc
cwtl
push
cmp
enter
sbb
fs
xchg
scas
mov
mov
sbb
jb
mov
mov
sub
in
lock
mov
adc
jl
push
icebp
jmp
sti
mov
andb
loop
or
sbb
and
pop
mov
add
jb
adc
scas
jecxz
cs
jb
cmp
fists
repz
les
push
inc
or
aas
xlat
pop
push
mov
inc
fistpll
xor
xchg
xor
dec
or
jne
ss
mov
mulb
and
clc
adc
std
subb
push
repnz
mov
add
jae
cli
adc
fcomip
push
xlat
inc
jbe
fcomps
popl
test
outsb
dec
fstp
iret
in
mov
icebp
pop
sub
addr16
mov
mov
outsl
inc
pop
inc
lret
out
inc
aaa
sub
out
imul
std
sbb
dec
mov
push
push
repz
pop
arpl
push
imul
or
movsb
test
lea
orb
xchg
add
out
shl
fmull
jb
dec
shrl
jno
test
lds
fwait
arpl
and
movsl
sahf
xchg
jns
xchg
inc
iret
sbb
nop
das
fs
or
lods
pop
ficoml
mov
mov
xor
imul
aas
lret
sub
out
jb
je
mov
ds
pop
mov
lret
sub
pop
imul
mov
ss
into
mov
xchg
out
in
mov
add
push
insb
push
lret
mov
out
pop
push
dec
inc
lcall
mov
mov
cmp
dec
cmp
sub
xor
icebp
enter
add
lcall
dec
add
xor
int3
mov
ds
xor
pushf
mov
dec
fisubs
test
sarb
jnp
fstp
add
jb
and
movsl
mov
cwtl
xchg
call
xchg
aad
cmp
mov
mov
push
mov
in
xor
jae
leave
pop
nop
dec
shrl
mov
imul
mov
xor
das
aas
adc
repnz
pop
xchg
mov
mov
mov
out
dec
rorb
repnz
xchg
and
cmp
or
addr16
in
xchg
cmp
cwtl
pusha
aad
jnp
inc
sbb
lret
addl
das
mov
mov
mov
xchg
push
push
dec
cmp
out
sbb
xchg
mov
sbb
inc
out
mov
sarb
insl
jb
les
jae
push
das
xchg
test
clc
push
ljmp
test
lock
and
or
leave
das
pop
xchg
pusha
sbb
fwait
inc
popa
mov
popa
adc
xchg
xchg
mov
nop
fldenv
nop
loope
add
shrl
jg
jecxz
cmp
mov
mov
fs
xchg
jle
and
es
inc
xchg
jbe
sub
popl
int
sbb
mov
aad
iret
push
ljmp
test
sub
repz
inc
leave
add
cs
in
std
lret
xchg
jo
imul
jg
scas
adcl
add
add
dec
dec
pop
je
push
xchg
std
add
dec
insb
sbbb
xorl
push
sub
pusha
jmp
jbe
loop
push
in
mov
sbb
test
and
fmuls
in
cld
adc
jnp
cmpsl
sub
lret
loopne
nop
and
dec
xor
mov
sbb
mulb
out
xor
mov
push
xor
cmpsl
cltd
inc
mov
fsts
jl
leave
fs
mov
sbb
cmpsl
push
imul
push
or
stos
subl
mov
out
and
cmp
adc
cltd
xchg
rolb
pop
adc
fcomip
inc
mov
leave
mov
mov
iret
pop
std
lcall
adc
mov
sub
cltd
out
lret
cltd
pop
add
and
cmp
ljmp
mov
aas
xor
fwait
stos
jl
cwtl
mov
lahf
pop
sub
cmp
enter
add
aad
dec
sbb
pop
adc
andl
mov
insl
orb
in
sbb
cli
jl
outsb
clc
xor
std
shlb
rclb
mov
pop
xchg
lcall
int3
xorl
rorb
mov
fisubrs
sub
in
sbb
or
daa
addl
mov
add
xchg
cltd
sbb
int3
sub
cmp
mov
test
add
imul
ret
popf
pop
pop
mov
xlat
outsb
and
cli
ret
call
xchg
arpl
inc
arpl
xor
pop
inc
jo
mov
je
rcrl
fwait
ret
arpl
loope
adc
loope
fistpll
mov
mov
jae
mov
imul
adc
jmp
hlt
js
mov
stos
cs
xchg
pop
sub
inc
push
and
cmpsb
inc
cltd
movl
shll
fistpl
add
and
pop
xchg
pusha
push
dec
cmp
xor
lods
sub
add
inc
mov
orl
sti
sub
xlat
daa
adc
cmp
mov
inc
leave
stos
pop
call
stos
std
xor
mov
std
sub
ja
xor
stos
mov
or
cs
mov
pop
fbstp
pop
sbb
sub
add
adc
xor
ret
es
adc
fsub
gs
loope
jns
mov
adc
add
lret
dec
les
inc
xchg
xchg
and
neg
sbb
lcall
cmp
mov
aad
popf
jo
xor
stos
push
jmp
fwait
lods
xchg
inc
cs
clc
jecxz
inc
inc
ljmp
xor
clc
adc
push
add
and
xlat
pop
sbb
mov
cmp
lock
daa
jns
mov
lcall
and
add
dec
mov
mov
fstpt
into
mov
fwait
enter
mov
fdivrl
iret
mov
lock
pop
adc
stos
push
call
inc
push
nop
xor
mov
icebp
ret
enter
fmuls
outsb
xchg
mov
inc
rclb
leave
adc
fwait
dec
int
pop
mov
inc
les
sbb
leave
lret
test
jmp
mov
lahf
xchg
xor
aaa
imulb
out
push
cmpl
shlb
push
push
sbb
mov
cmc
shrb
sti
or
fstps
xchg
inc
daa
xor
jge
loop
dec
in
rcrl
xchg
imul
jae
fisubl
xor
inc
inc
repz
jge
lcall
out
cmpsl
decl
std
push
icebp
lock
test
xor
aas
ffree
jmp
enter
mov
aam
jg
pusha
lahf
cmc
ljmp
add
pusha
or
test
repz
jmp
into
call
mov
loopne
out
mov
cmp
or
cmp
iret
or
sbb
mov
hlt
in
push
into
daa
mov
les
sarl
fildl
push
in
nop
sub
mov
and
fwait
outsb
mov
testb
xchg
push
xor
outsl
mov
pop
std
ret
cli
push
mov
push
out
fsubrp
aad
pop
jnp
imulb
movsb
xor
popf
fwait
mov
sti
pop
jl
shrl
or
loopne
push
sbb
adc
fisubrs
inc
jmp
jp
hlt
fwait
movswl
sbb
fsts
xchg
dec
sub
and
arpl
push
jae
pop
dec
movsl
scas
inc
in
out
jle
movsb
and
mov
test
cltd
mov
fnsave
mov
icebp
cmc
hlt
sbb
dec
adc
mov
sti
sbb
lahf
movsl
mov
test
mov
cmp
xchg
test
add
ret
jg
aad
fdiv
inc
es
out
sub
jmp
dec
cmp
das
in
movsb
and
pusha
mov
shll
mov
sbb
xor
inc
repz
jbe
mov
dec
inc
rcrb
inc
je
dec
test
pop
and
mov
sbb
stc
js
out
cmp
out
cmpsl
add
or
jbe
mov
jmp
ss
mov
mov
jmp
repz
pushf
xchg
ja
xor
pop
push
lahf
scas
xchg
inc
out
je
mov
cmpsb
dec
movsl
lret
imul
insl
ffree
push
or
subb
in
addl
nop
outsb
addr16
jmp
pop
pop
popa
ljmp
adc
or
fdiv
out
or
fsubl
mov
pop
jle
mov
jo
dec
adc
jl
xorl
iret
addr16
sbb
or
scas
xor
cmpb
inc
cs
pop
addb
jae
jg
out
push
mov
repnz
in
inc
daa
dec
rcrb
adc
adc
les
dec
je
xchg
push
incb
in
dec
cmp
js
jno
ljmp
jb
xchg
push
fimuls
add
lea
mov
shlb
mov
jg
mov
add
sqrtps
mov
data16
repnz
sbb
mov
and
cmp
das
inc
mov
mov
rclb
sub
dec
es
mov
loopne
rcrb
mov
ret
out
stc
jle
mov
popf
scas
leave
jnp
in
push
cwtl
or
stc
outsb
cmp
int
sti
dec
testb
pop
cmp
sahf
es
mov
cmpsb
shlb
std
push
jecxz
pop
push
arpl
mov
stc
adc
ljmp
dec
in
idivl
shrb
cwtl
push
test
dec
jbe
xlat
out
mov
jns
cmpsb
lahf
xor
add
imul
mov
aam
cwtl
mov
dec
push
push
out
jb
or
jnp
mov
test
push
sub
lahf
adc
inc
push
icebp
fsts
fs
cmp
xor
jbe
inc
cmpsb
sub
push
mov
outsl
mov
dec
sub
push
inc
stc
mov
bound
mov
testb
test
pop
adc
xor
inc
cmp
out
xor
fsubrs
insl
jge
addr16
das
pop
loop
repnz
sbb
jl
cmpsl
je
test
shll
iret
jno
add
stos
push
iret
push
in
repnz
cmpsb
mov
cli
jmp
add
mulb
out
or
rcrl
aas
mull
xor
jne
imul
dec
daa
outsl
jge
or
adc
fmuls
mov
pop
pop
movsl
sub
pop
shll
daa
adc
in
insb
subb
cmp
sbb
scas
adc
mov
les
sub
icebp
roll
sub
in
leave
mov
xchg
lea
inc
stos
je
mov
lods
pcmpeqb
mov
mov
fdivl
add
mov
xor
ljmp
mov
lret
je
pop
xchg
lods
lcall
sub
mov
cld
stos
mov
ds
pop
lock
pushf
sti
sub
sub
outsb
lahf
mov
aas
stos
out
repnz
pop
mov
in
dec
sub
pop
rcl
jge
mov
ror
and
or
aam
mov
cmp
jns
mov
es
loop
pop
mov
cltd
int3
adc
mov
adc
subl
adc
mov
aad
dec
lcall
aas
loope
imul
adc
stos
push
mov
xor
lods
dec
push
mov
cmp
inc
mov
shrb
ds
sub
orl
sbb
insl
xor
jle
adc
sahf
call
push
fsubrl
shl
cmpsb
icebp
cmp
mov
jnp
loopne
out
sar
jne
mov
shl
or
stos
inc
jb,pn
nop
add
dec
mov
and
sub
push
sbb
ja
jnp
push
pop
cld
out
add
int3
insl
pop
fwait
pop
push
fs
gs
jl
inc
ds
dec
int3
movb
hlt
test
sbb
inc
cld
aad
shrl
fcmovu
pop
sub
leave
jg
push
sub
jle
fsubrs
and
dec
inc
push
hlt
mov
and
stos
jecxz
pop
xchg
das
shll
adc
mov
dec
addb
popf
lock
das
or
or
pusha
decl
push
mov
sub
mov
or
mov
mov
iret
xchg
sub
outsb
xor
movsb
cmp
cld
les
sbb
inc
clc
jp
paddw
dec
inc
mov
dec
jnp
fdivrs
jbe
jbe
fs
mov
cmp
inc
shll
xchg
adc
fdivrl
mov
add
xchg
add
test
fnstcw
jl
sub
mov
in
mov
in
push
and
shlb
jle
cltd
xor
or
les
mov
aam
in
jno
lcall
xor
xor
or
ret
lea
dec
sub
add
adc
add
divps
dec
jecxz
icebp
cmp
gs
aas
dec
add
sbb
adc
daa
pop
lret
pop
cli
mov
dec
inc
xchg
sub
or
xchg
sbb
pop
cs
adc
pop
cltd
pusha
inc
pop
mov
adc
shrb
ret
aam
adc
fidivs
imul
fwait
int3
sub
cli
stos
mov
mov
fwait
inc
out
xchg
pop
repnz
adc
mov
jmp
adc
xor
out
ja
insb
adc
mov
loope
les
pushf
mov
int3
push
ret
aad
cmp
and
clc
xchg
dec
add
ja
push
mov
and
push
or
outsb
imul
dec
repz
xor
xchg
or
pop
imul
stos
movsl
cltd
gs
repnz
mov
sub
data16
fsubrs
mov
dec
rol
movsl
and
adc
push
dec
pop
add
dec
jecxz
enter
mov
xchg
lret
or
testl
inc
fisubrs
mov
xchg
sbb
shlb
scas
out
ret
gs
je
lret
push
loope
xor
adc
jo
jle
ds
loopne
or
js
dec
sarb
push
inc
iret
clc
repnz
incl
and
insb
lods
sahf
mov
push
push
sub
inc
push
arpl
push
cli
sub
jmp
divl
xchg
adc
mov
xchg
push
popf
ret
fmull
jo
test
and
js
aas
rcll
mov
mov
and
and
mov
icebp
dec
sbb
fidivrl
lea
sub
push
arpl
pop
scas
inc
mov
or
dec
jle
popa
sbb
dec
js
mov
arpl
mov
lock
mov
xor
or
repnz
dec
insl
push
js
std
dec
add
jl
or
dec
sub
fsub
out
les
outsl
pop
arpl
inc
add
mov
mov
or
std
jle
fdivr
imul
jb
enter
xchg
aaa
push
std
fnsave
lds
pop
repnz
outsb
imul
stc
fisttpll
xor
call
mov
jbe
adc
sbb
scas
mov
int
pushf
jno
sbb
addb
xor
call
fidivl
pop
clc
jb
xor
xchg
loop
lret
mov
push
fisttpll
xchg
dec
jno
jbe
mov
mov
push
pop
push
lods
push
repz
arpl
lahf
push
push
cs
imul
sbb
add
loopne
cmp
mov
ljmp
rcrl
push
pop
fcompl
int
push
addl
iret
enter
mov
testb
xor
mov
pop
ficoml
mov
lea
mov
hlt
and
inc
lods
pop
lods
mov
mov
adc
cmp
xchg
xchg
adcb
jno
lods
or
aad
ret
cwtl
jb
inc
lea
repz
sbb
inc
cmp
add
dec
call
lahf
add
adc
push
je
aas
jno
daa
lods
les
das
ficomps
adc
and
xor
adc
popf
mov
sbb
inc
sbb
cmpsb
loope
cs
lcall
adc
sbb
push
shll
and
jmp
rep
xor
test
daa
icebp
popa
ljmp
and
xor
and
xor
mov
scas
mov
insl
mov
movsl
mov
mov
fbld
movsb
dec
mov
mov
iret
adc
add
mov
cmp
or
lret
pop
cmp
pop
popa
clc
xchg
pop
cmpsl
mov
test
dec
xlat
cmp
dec
push
mov
or
cmc
and
subb
repnz
cs
add
pusha
out
ret
outsb
xchg
mov
cwtl
xor
sbb
lret
inc
sub
push
sbb
orb
cmpsb
mov
andl
fisubl
shll
sub
push
stc
in
add
sub
pusha
fnstenv
rcll
sbb
mov
pop
xchg
xor
add
or
repz
cld
imul
xchg
out
pushf
insb
jmp
aam
fisubrl
rcrl
mov
nop
cmc
cmp
dec
mov
xlat
adc
mov
fnsave
in
push
dec
and
cmp
fiaddl
call
xor
mov
mov
je
sti
xor
lret
aaa
in
cltd
outsb
pusha
or
jae
scas
dec
mov
and
dec
test
adc
adcl
test
testl
inc
jmp
mov
push
add
das
je
popf
jo
or
loope
pop
dec
aam
mov
and
lods
out
es
call
mov
dec
dec
jnp
sub
add
mov
insl
and
mov
lcall
inc
in
jbe
jo
jno,pt
push
push
popa
cli
lret
add
fdivp
fcomps
fiadds
mov
cmp
sub
xchg
aaa
aas
cli
jle
call
notl
test
lods
mov
nop
iret
xor
cmp
cmp
mov
xchg
aas
xchg
jp
aad
pop
fldl
mov
out
sbb
xor
call
vrsqrtps
fdivrs
mov
test
repnz
ficoms
add
sub
lret
push
and
enter
or
jae
lret
fninit
mov
iret
dec
add
mov
enter
sar
push
xchg
dec
nop
adc
sbb
push
lret
inc
sub
or
inc
pop
mov
dec
inc
push
out
hlt
mov
push
jg
shrl
pop
inc
mov
sbbl
xchg
xchg
imul
pop
sahf
dec
sbb
sub
in
sbb
mov
sub
inc
gs
push
jmp
inc
push
inc
rcr
enter
jae
cmp
adc
inc
addl
stc
fucompp
mulb
or
jmp
xor
loopne
icebp
jne
sti
push
xchg
aaa
out
pop
rorl
push
jae
or
lds
inc
in
xlat
push
adc
pop
cli
xchg
nop
loop
fmul
rorl
dec
inc
push
mov
rcrl
dec
mov
jae
mov
adc
pop
aas
cmp
aam
cmp
aaa
dec
test
push
cmc
gs
xlat
loopne
pmaddwd
xor
arpl
jno
insl
jbe
mov
or
pop
das
stc
outsb
cltd
in
daa
push
testb
fwait
enter
xchg
add
or
dec
scas
notl
fldenv
sub
xchg
and
adc
push
mov
jmp
repz
popa
aaa
pusha
repnz
cli
xchg
mov
xchg
insl
push
jecxz
jmp
data16
test
shrb
xor
mov
or
sbb
sbb
inc
and
out
xor
out
cmpsb
adc
daa
clc
inc
out
sti
faddp
xchg
push
sub
aad
pop
adc
lcall
enter
mov
cs
lcall
mov
cmp
inc
lods
mov
sbb
push
fiaddl
adc
dec
std
mov
push
popa
cmc
outsl
jg
sub
popf
popf
or
pop
inc
fnstenv
loopne
xchg
testb
out
test
xor
sbb
add
es
jne
mov
mov
mov
sub
js
cmp
icebp
xchg
mov
inc
adc
std
inc
jecxz
jae
push
jbe
les
mov
jge
pop
and
mov
cs
push
ds
gs
dec
mov
pop
or
rcrb
and
imul
mov
mov
adc
insl
jbe
repnz
add
pop
shlb
incb
pop
add
fstpl
shl
jle
cltd
push
cmp
inc
xchg
test
frstor
lds
rcrb
inc
adc
or
in
push
and
sahf
adc
fimull
adc
xchg
add
ss
or
and
sbbl
pop
and
ds
cmp
pop
dec
or
in
loopne
and
jne
outsl
xchg
sub
scas
push
in
rcrl
or
and
arpl
pop
inc
jne
jae
shll
sbb
push
out
enter
out
lcall
and
dec
cmc
xor
jnp
movsl
push
jae
push
or
push
mov
rcl
xchg
mov
jnp
scas
push
pop
sbb
pop
nop
mov
xor
ds
dec
xor
add
scas
add
xor
cmp
cmp
lret
clc
int
mov
popa
jl
add
push
add
jae
xlat
les
mov
gs
sti
add
enter
scas
jns
test
and
lods
flds
mov
js
jecxz
mov
fstpl
push
pushf
inc
lret
pop
adc
push
sbb
lds
test
fmull
and
cmp
and
xchg
cmp
inc
or
out
fwait
and
lcall
xlat
decl
inc
mov
cmpsl
jns
dec
xorl
dec
or
xchg
pop
rolb
lock
aas
pop
mov
movsl
daa
mov
loopne
mov
xor
mov
and
mov
loope
jg
arpl
cmp
push
ror
inc
push
and
fldcw
rclb
loop
pop
insl
int3
stos
or
ja
push
pop
test
repnz
xchg
das
add
sbb
sbb
lods
cmp
bound
push
push
leave
sbb
rcll
test
popf
das
test
rcr
xor
push
dec
aaa
xchg
rcr
std
pushf
aam
ss
cmp
jb
imul
fldt
cmp
mov
aas
orb
stos
arpl
cmpsb
rcl
int
mov
or
push
mov
les
sbb
negb
gs
hlt
xchg
push
aas
sub
cmpsl
gs
sub
and
jns
fstps
or
sahf
mov
ror
mov
in
inc
sahf
mov
loop
xor
cmp
lret
js
mov
jle
xchg
hlt
sbb
mov
stos
mov
mov
dec
xchg
jg,pn
fdivl
lea
mov
jbe
and
and
add
pop
cwtl
mov
push
pusha
int3
jo
push
hlt
inc
xchg
in
cs
xchg
mov
and
adc
or
adc
sbb
jecxz
sub
and
mov
inc
arpl
and
xorl
mov
cmp
inc
push
add
mov
rclb
and
hlt
adc
ret
test
sahf
xchg
cli
pop
testb
add
lods
sub
push
int3
lds
hlt
out
lds
bound
push
xor
cmp
dec
xor
mov
cmp
test
or
adc
imul
je
push
sbb
sub
arpl
lahf
adc
sub
push
pop
test
adc
mov
sub
and
cmp
imul
lods
xchg
rol
push
stos
dec
and
stos
mov
scas
stc
outsb
es
stos
mov
xlat
insl
loope
lahf
add
or
loopne
push
adc
jbe
andb
add
xor
sub
stos
mov
cmpb
adc
push
enter
call
cmp
inc
pop
sub
shl
lock
sbb
push
xchg
adc
scas
andb
aam
lahf
xchg
and
mov
and
jl
getsec
add
iret
fwait
and
add
fiaddl
fisubl
aam
stc
push
filds
iret
fidivrl
add
sbb
repnz
sub
inc
pop
enter
mov
imul
push
ss
xor
pop
adc
xchg
xchg
rcr
adc
test
aad
inc
loop
dec
sbb
push
dec
gs
aam
call
push
cmpsb
push
push
mov
cmp
std
inc
mov
mov
sbb
mov
mov
je
adc
mov
adc
inc
pop
xor
stos
jne
and
inc
ret
mov
mov
or
sub
sub
fisubl
adc
sbb
pop
sub
leave
cli
mov
out
divb
fcoms
cmp
clc
push
dec
push
mov
push
mov
stos
arpl
xchg
add
popf
push
add
testl
icebp
insl
pop
push
mov
push
sbb
cs
dec
pop
test
and
ret
dec
jecxz
aaa
imull
cwtl
lock
repz
scas
or
pop
sbb
adc
dec
popf
adc
jge
roll
jne
sub
inc
std
in
sub
adc
push
aad
icebp
adc
sbb
test
fucomi
mov
dec
lock
setbe
cmp
sahf
xor
pushf
dec
and
fildl
jmp
push
mov
push
mov
mov
mov
cmp
repz
fsubr
mov
fs
arpl
sub
lods
xor
shll
push
push
rcrb
dec
mov
pushf
pop
imul
jne
jno
ja
lds
dec
pop
es
data16
lds
lock
mov
cmp
sbb
aam
or
or
push
call
push
in
pop
mov
lcall
cmpsl
clc
sahf
test
add
ficomps
lds
in
fldcw
mov
subl
cmp
pop
bound
push
cltd
divb
lods
aam
mov
jno
adc
jns
out
mov
push
mov
pop
stos
jbe
shrl
pusha
pop
lock
scas
mov
xchg
scas
shl
popa
xchg
stc
sbb
xchg
push
das
sbb
pop
test
adcb
add
sub
mov
cmpsb
stc
into
icebp
push
push
es
jp
loop
divb
jmp
in
mov
cmpsb
aad
adc
xor
inc
inc
cs
mov
sub
adc
fs
and
cmpsb
loop
xchg
mov
es
adc
in
std
push
outsb
add
xor
fsubl
add
and
orb
add
xchg
icebp
push
or
jns
xchg
adc
aam
int
xchg
sbb
mov
pcmpeqb
push
sbb
add
inc
pop
sub
je
imul
test
fisubrl
jl
mov
cmp
decl
pop
or
insl
mov
xor
fstl
cs
enter
arpl
hlt
das
xchg
int
jo
sbb
push
les
xchg
leave
jne
mov
test
pop
mov
pop
mov
push
pusha
out
sub
hlt
pop
out
movsl
mov
fdivrs
sub
imul
aam
loopne
pop
daa
test
jae
pop
loop
mov
mov
outsb
lods
jae
add
ret
xor
lahf
sbb
out
fwait
insl
ljmp
sbb
push
jbe
repz
mov
lahf
inc
inc
stos
dec
lods
daa
mov
lcall
rdpmc
inc
cwtl
mov
inc
outsb
pop
mov
lods
jbe
sbb
lods
add
rcll
icebp
sbb
sbb
addr16
js
inc
push
dec
fsubrp
jl
fnstcw
pusha
pop
inc
sbb
and
mov
jmp
icebp
mov
add
pop
scas
lret
insl
dec
dec
mov
add
sub
test
push
incl
iret
std
cs
xchg
cld
push
shr
pushf
mov
pop
xchg
pop
sub
clc
lds
jns
jno
aad
data16
pop
call
test
xor
aad
jbe
xchg
popa
repz
xor
repnz
repnz
mov
pushf
adc
icebp
in
ret
dec
inc
sub
mov
in
xor
pop
sbbb
in
push
rcrl
mov
and
in
stos
pop
adc
imul
xchg
push
xor
iret
or
jl
stos
je
mul
bt
jmp
es
in
xlat
aaa
test
and
inc
and
stc
inc
sub
mov
or
mov
xor
out
xchg
rolb
xor
pusha
mov
mov
fistpll
out
ret
mulb
lret
stc
dec
adc
add
imul
push
push
mov
sbb
jge
lret
in
fisubs
outsb
cmp
out
xchg
jno
fstpl
fmuls
bound
popf
insb
out
fnstenv
scas
sub
jmp
insl
jno
jno
inc
inc
pminub
push
loop
fidivl
sahf
mov
push
or
stos
xchg
sub
sub
fdiv
es
jmp
xlat
test
stc
lea
mov
cmp
sbb
insl
test
dec
nop
cmpsb
sti
xor
dec
data16
hlt
xchg
mov
adc
inc
push
push
imul
cmp
add
aaa
cwtl
dec
lods
sar
xchg
sti
xchg
dec
push
aam
sbb
arpl
std
sbb
subl
pop
push
mov
push
mov
inc
mov
loop
in
xor
adc
aad
adc
jl
sub
mov
push
addr16
mov
fcmovu
jno
add
jae
mov
mov
xchg
ds
sub
inc
xor
fucomp
into
jno
mov
sub
sbb
pop
iret
adc
int3
adc
lock
rclb
std
movsb
cmp
ja
test
and
sarb
push
dec
fidivrl
imul
jg
mov
or
pop
insl
clc
std
scas
out
lahf
fdiv
addl
push
push
fdivs
push
sbb
or
sub
cmp
mov
and
mov
loope
push
mov
mov
pushf
ficomps
jmp
add
shll
js
adc
enter
lds
jo
dec
jl
sahf
and
fwait
sub
pushl
and
shrb
sbbb
insb
and
jle
int3
outsb
add
lret
aas
inc
jnp
ror
repz
bound
loop
jne
xor
cmp
sahf
jecxz
std
hlt
push
mov
rolb
inc
shlb
cmp
pop
call
push
and
scas
add
inc
fisubl
mov
es
xchg
rcll
add
mov
push
and
sbb
mov
sub
fsubrs
push
dec
imul
xor
add
cmp
cmp
pop
ret
xor
and
sub
xchg
pop
pause
dec
popa
std
insl
inc
pop
iret
out
call
jns
sub
jp
pop
imul
inc
cmp
insb
pushf
popa
repz
inc
jo
mov
std
cmp
cwtl
or
mov
and
xor
test
daa
dec
xchg
xchg
push
or
dec
data16
in
ret
bound
mov
add
lahf
pop
sub
loopne
bound
inc
inc
inc
das
jle
call
xchg
adc
adc
mov
iret
jmp
sub
dec
dec
inc
push
dec
dec
daa
push
jne
xchg
fwait
stc
hlt
pop
in
push
stos
pop
or
testl
das
lods
addr16
test
outsl
hlt
add
test
inc
ret
push
adc
daa
cld
dec
iret
push
lret
jg
shll
mov
inc
and
mov
pushf
je
jno
lods
lcall
xchg
and
addr16
jmp
jle
or
shll
iret
movsl
jns
push
adc
add
enter
scas
add
mov
mov
pop
lret
jl
mov
dec
xchg
lods
iret
add
adc
sbb
xchg
pop
lcall
repnz
rcl
lea
jnp
jae
retw
dec
or
fnsave
xchg
or
sbb
pusha
rclb
mov
jns
insl
aad
lock
fbld
lcall
sbb
pop
in
insl
pop
jns
adcb
cld
cmc
adc
addb
es
pop
movsb
xchg
push
rcll
jne
es
xorl
mov
jmp
std
xor
dec
fists
data16
leave
lret
sbb
pop
dec
inc
push
insb
fmul
fidivl
imul
scas
das
jae,pt
test
mov
inc
das
aad
and
jle
loop
mov
or
lret
mov
sbb
out
sar
jge
fldenv
rol
cmp
pop
push
es
push
xor
add
and
sti
sbb
mov
add
int
pop
mov
mov
cwtl
jnp
repnz
fcompl
in
pop
and
or
sbb
pop
sarl
andb
and
out
sub
jp
add
mov
fadd
dec
xchg
push
ret
pop
sahf
mov
repz
add
hlt
pop
xchg
shrl
adc
insl
dec
imul
mov
mov
mov
inc
repnz
push
and
ret
dec
mov
dec
dec
movl
addl
ret
iret
out
in
push
xor
aaa
testl
xor
adc
sub
popa
sbb
std
push
ret
xorl
mov
or
jp
pop
imul
hlt
push
push
fimull
ja
loopne
fwait
aaa
jmp
lea
clc
lds
rclb
out
cs
xor
ds
lahf
mov
ss
sbb
int
pop
pop
arpl
cmpsl
push
sahf
sub
fdivrs
ret
xor
adc
aaa
jmp
xchg
incb
inc
cwtl
push
sub
cmp
push
ja
cmpsb
push
xchg
mov
xchg
cmc
pop
sub
dec
ds
orb
xchg
xchg
cmp
push
add
idivl
repz
jge,pt
dec
push
pop
pop
jle
decl
push
addb
or
sarb
lcall
test
clc
lds
popa
mov
add
cwtl
repnz
addb
movsl
mov
cld
xchg
xor
push
sbb
std
pop
mov
mov
adc
xchg
pop
movsl
pop
aam
js
cmp
je
jmp
mov
mov
mov
fucomp
push
xchg
lahf
repnz
sub
clc
repz
mov
popa
cmpsl
jmp
inc
mov
insb
ret
test
aad
sbb
out
adc
rol
jmp
cmpsl
jne
inc
mov
leave
xchg
or
mov
test
pop
sbb
sbb
inc
xor
aad
jb
cmpb
ret
out
shll
out
mov
or
inc
nop
iret
jle
or
mov
loopne
popf
adc
insb
inc
jmp
add
shrl
push
inc
mov
andl
adc
mov
sahf
xchg
adc
push
add
arpl
mulb
mov
jb
xor
xchg
mov
jbe
and
dec
out
cmpsb
out
in
xchg
shll
mov
rclb
aam
movsb
je
stc
out
add
andl
loope
hlt
cld
in
mov
or
mov
out
mov
or
jl
add
or
int3
cmpsl
or
scas
push
rcll
mov
mov
ret
adc
icebp
stos
xchg
orl
or
or
das
sti
add
and
ret
sbb
push
mov
mov
lods
cmpsb
jae
fs
or
dec
jae
xchg
fcompl
jb
mov
loop
push
int
mov
xor
xchg
jnp
inc
sbb
pop
mov
idiv
sahf
popf
in
mov
mov
cwtl
test
faddl
sbb
dec
xor
in
popf
cltd
xor
dec
push
pop
iret
outsl
adc
cmp
and
rcl
xor
inc
push
fwait
cwtl
fwait
pop
push
mov
fs
dec
xor
or
out
cld
adc
movl
pop
sub
clc
imul
xor
mov
jb
xchg
sub
cmp
lahf
push
xor
arpl
push
shll
sbb
cmp
mov
pushf
fldt
xchg
ds
xchg
mov
pop
ljmp
mov
dec
sti
cli
imul
stos
adc
and
test
push
ds
cli
lcall
or
xor
jb
add
ss
xchg
mov
dec
jmp
cmp
mov
decb
add
cmc
das
data16
dec
jnp
out
sub
and
xchg
sbb
push
jg
pop
and
push
sbb
rclb
fdivl
ja
call
push
sbb
lcall
lcall
in
mov
ds
loope
movsb
stos
repz
lea
decl
fwait
xchg
loope
mov
lahf
mov
test
idivl
sub
mov
ja
sub
rcrl
mov
outsb
shr
rorl
pop
push
or
cli
add
mov
and
add
aaa
push
enter
dec
jecxz
repnz
clc
and
ret
hlt
jecxz
in
jns
mov
sbbl
int3
movsl
scas
and
mov
addr16
push
push
jno
shrb
jb
repz
or
cmp
imul
js
negl
insb
int
push
mov
sbb
push
and
or
mov
or
fwait
and
in
mov
addps
push
cmpb
xchg
adc
and
in
arpl
cmpsl
lds
orl
iret
popf
loope
jnp
adc
test
add
inc
scas
adc
in
adc
sbb
leave
jo
xor
mov
cmp
dec
sbb
mov
adc
out
pop
stos
fwait
dec
sbb
fst
add
mov
std
mov
inc
mov
sub
js
sti
sbb
rolb
imul
test
push
das
out
push
gs
popf
out
int
fimuls
clc
pusha
mov
js
popf
out
jmp
pop
xchg
and
je
cld
notb
cld
clc
cmp
ss
sbb
fs
rorl
pop
or
fwait
cmp
fnsave
sub
popa
lahf
mov
jne
inc
sub
repz
fildl
es
icebp
adc
add
push
outsl
pop
mov
jns
pop
add
call
pop
add
enter
dec
xchg
mov
xchg
aas
xor
xchg
jns
pop
xlat
fs
push
jns
rcr
xor
mov
push
jle
mov
stos
icebp
pushf
out
sbb
insl
jl
jbe
adc
pushf
lock
xchg
fucom
lods
and
mov
int
lcall
xchg
lea
push
and
lcall
in
xchg
jns
loopne
filds
fiaddl
sahf
rolb
in
lods
xor
cld
and
in
ss
jle
dec
mov
lea
and
xchg
imul
aaa
cmpb
scas
sti
add
aad
outsl
jns
rolb
pop
jb
js
sbb
lret
mov
sbb
cmpsb
and
cltd
popf
jno
push
or
add
and
adc
int3
lea
mov
inc
cmp
mov
pop
int3
scas
or
xorl
jecxz
fidivs
insl
pusha
addr16
add
push
xchg
gs
in
push
loope
nop
vpaddq
add
sub
das
roll
jmp
test
pop
jbe
mov
push
push
lock
movsl
sti
jns
imul
aad
in
pop
mov
nop
in
jge
and
push
jmp
xlat
fldl
shrl
xor
clc
and
sbb
es
ds
or
mov
xchg
mov
gs
lods
cwtl
inc
sbb
lods
mov
fadds
iret
jno
xchg
fidivrl
scas
je
mov
lcall
and
xlat
inc
xor
lods
or
stos
sbb
ret
pop
xchg
jmp
pop
xor
sbb
repz
cmp
movsl
push
imul
loop
pop
js
in
loope
push
fisttps
shll
mov
movsb
icebp
or
int
data16
pop
sub
mov
movsb
nop
sbbb
inc
fsts
xchg
ds
push
scas
and
mov
ds
packuswb
test
addr16
shll
sahf
xchg
and
mov
or
xor
and
mov
pop
ja
call
dec
mov
xor
dec
lcall
push
jecxz
fidivs
fsubl
fstpt
and
dec
mov
bound
leave
push
loopne
sti
in
dec
out
lcall
mov
inc
and
repnz
inc
lea
adc
fstpl
dec
bound
fs
fcomps
fwait
cmpsl
sub
jb
jnp
test
movsb
cmp
and
and
xor
stc
or
jno
pop
stc
or
or
aaa
cmp
jne
mov
inc
scas
sti
daa
add
scas
std
mov
jecxz
enter
pusha
jle
mov
push
pop
and
sub
fldl
mov
mov
mov
mov
xor
repnz
jle
pop
cli
mov
loop
push
push
and
mov
lea
in
mov
pop
in
mov
sbb
sub
shlb
and
inc
in
jg
mov
pop
cmc
push
dec
xchg
mov
push
pop
jl
xor
hlt
mov
jne
jge
mov
mov
xchg
test
jbe
sahf
into
or
cmp
inc
pop
fildll
push
ret
arpl
mov
mov
or
xor
insl
testl
fisttpl
add
mov
mov
mov
pop
fsubp
mov
mov
aas
sub
mov
rorl
add
ret
in
popf
inc
ret
sub
filds
insb
adc
ret
dec
out
dec
cmpsl
gs
loopne
into
je
push
cmpsb
mov
mov
call
push
loope
stc
jo
adc
jecxz
pushf
jl
jecxz
cmp
add
out
cltd
jmp
sub
testb
ret
sbb
gs
int
iret
dec
out
mov
mov
ja
std
inc
sub
sbb
fsts
bound
and
out
sbb
fldcw
mov
out
rcll
add
iret
or
cmp
or
les
js
pop
outsb
movsl
mov
addr16
jl
js
mov
adc
lret
push
push
inc
scas
arpl
sub
js
popf
push
jg
fisttpll
push
xchg
dec
or
outsl
mov
cmp
add
outsl
hlt
mov
pusha
xchg
mov
int3
in
xor
inc
out
scas
sub
and
movsb
dec
jno
in
add
sub
cld
jg
mov
mov
in
rcll
testb
pop
cmp
mov
in
cltd
cli
ja
fcmovb
iret
mov
imull
jo
mov
pop
test
push
mov
loop
addr16
in
mov
scas
cmpsb
test
mov
out
repz
dec
mov
iret
data16
dec
push
push
sub
xchg
mov
cltd
add
dec
iret
divb
cmp
push
mov
icebp
mov
je
mov
test
mov
inc
add
das
ds
or
xchg
lds
imul
ljmp
call
fcmovnu
ret
lea
dec
xchg
cmp
adc
sti
popf
movsl
aam
xor
test
push
pop
cmpsl
sbb
paddsb
call
wrmsr
lret
test
call
or
test
push
push
repz
mov
fiadds
dec
dec
cld
mov
in
jno
mov
js
adc
call
mov
cli
mov
lcall
inc
xor
adc
leave
add
jno
scas
fdivl
adc
int
in
inc
xchg
dec
push
jo
nop
pop
push
cltd
pop
loopne
scas
cwtl
cld
or
mov
cmc
stc
test
fcompl
mov
xor
dec
mov
sbb
cmpsb
inc
fwait
jb
mov
jge
test
out
test
mov
bound
int
das
stos
and
pop
sahf
loop
pop
push
jns
in
xchg
and
je
xor
mov
mov
xchg
mov
jge
enter
xor
mov
pop
jl
dec
pushf
dec
or
xchg
mov
into
add
lret
sbb
es
inc
inc
pop
shl
pop
cs
jle
inc
popa
addr16
jbe
je
pop
rorl
rorl
xchg
in
test
sbb
mov
jp
jno
jmp
pop
sbb
popf
fsqrt
out
test
mov
cmp
dec
sbb
pop
cmp
mov
xor
outsb
clc
dec
cmp
sarl
push
mov
xchg
mov
cmp
divl
add
sub
xchg
pop
test
cmp
negl
clc
fbld
ret
mov
xchg
xor
sub
lods
cmp
or
pop
jmp
mov
fwait
mov
jbe
push
xchg
push
mov
jle
cmp
xchg
jno
dec
int3
ficoml
daa
xchg
cli
les
add
rcrl
inc
push
rorb
icebp
js
cmp
nop
inc
rclb
cmc
popa
leave
scas
jecxz
push
sti
imul
jo
sub
outsb
into
in
ret
loope
push
pusha
xchg
mov
jne
sarl
ret
dec
push
xchg
cli
insb
pop
mov
lret
hlt
cli
or
dec
sti
push
and
out
scas
mov
xor
push
and
insl
lahf
jb
ds
dec
sbbl
rep
mov
ja
pop
sub
in
divb
fildll
pop
jge
push
cmpsl
push
and
aaa
outsb
pusha
and
xchg
aam
call
aam
ret
ljmp
fdivrs
enter
or
xchg
gs
ss
js
out
add
rcll
xchg
jne
shrb
insb
xor
mov
xor
orb
xchg
cmp
popf
dec
jns
inc
xorl
lret
repz
fistps
cs
mov
xchg
outsl
inc
insb
ja
jbe
push
gs
outsl
mov
xlat
mov
insl
jo
or
hlt
xchg
dec
add
jns
or
mov
add
jmp
ffreep
adc
fsubl
shl
push
inc
callw
test
stos
push
jmp
mov
mov
xorl
push
hlt
fmull
jge
rol
jge
clc
shr
fiadds
shlb
stos
jo
jmp
sbb
xchg
sti
inc
jle
imul
repnz
jp
std
adc
xchg
mov
popa
dec
jecxz
pop
fstps
jno
jmp
sbb
fistpl
adc
leave
lods
mov
into
cmp
rcr
leave
jmp
xchg
decl
mov
pop
inc
loop
inc
pop
sbbl
scas
pop
jmp
mov
lods
icebp
fcmove
insb
dec
mov
jns
popf
xchg
inc
push
imull
jmp
std
xchg
mov
sbb
pop
fdivl
inc
xchg
or
push
pop
lcall
jbe,pt
pop
testl
adc
add
insb
sub
push
mov
mov
dec
es
imul
jne
push
dec
into
into
das
pop
adc
xchg
outsb
arpl
insl
cmpl
sub
or
xor
ja
lahf
jbe
cmp
bound
mov
das
movsb
aam
outsl
gs
jnp
sbb
fbstp
push
sbb
test
out
enter
jmp
aas
cmp
dec
imul
aad
push
ss
fmull
pop
cmp
xor
sbb
ret
ret
mov
cmp
mov
push
ret
jle
arpl
mov
adc
frstor
and
add
into
add
pusha
mov
std
clc
outsl
mov
mov
ja
imul
mov
into
int
daa
cli
stos
dec
adc
in
test
cmp
hlt
or
jmp
jge
out
out
loop
pop
fwait
or
fsubs
cmpsl
mov
and
minps
icebp
pop
sub
imul
fmulp
dec
mov
stc
addr16
lods
cltd
dec
or
pop
inc
xchg
enter
push
lds
add
mov
repz
mov
cltd
jecxz
js
fnsave
inc
mov
xchg
xor
test
cmpsb
adcb
xchg
jecxz
adc
cmpsb
popa
in
addr16
pop
orl
xor
sbb
xor
mov
or
pop
jl
sub
gs
loop
jp
mov
leave
rcrb
stos
lea
sub
adc
aam
cmp
lods
leave
leave
cmc
sub
test
or
mull
clc
jecxz
insl
frstor
mov
xor
orl
int
aas
pop
test
xchg
adc
dec
jp
and
int
xchg
add
stos
pop
pop
add
inc
daa
repnz
inc
jp
cmpsl
inc
iret
fidivs
cmc
outsb
into
jp
fidivl
out
add
pop
popa
fcoms
hlt
scas
out
ljmp
pushf
ret
scas
and
insl
xchg
sahf
lods
add
mov
add
test
mov
inc
test
jbe
sti
push
adc
into
int3
hlt
stos
lea
arpl
mov
add
inc
lods
dec
xor
icebp
cmpsb
xchg
add
or
shlb
lods
nop
and
pop
cltd
jns
pop
test
push
dec
sbb
lahf
sub
stos
pop
inc
jnp
repz
jb
loope
lods
loopne
les
cmp
push
cmp
adc
sarl
pop
leave
pop
cmp
insl
and
ret
lock
loopne
cmp
mov
xor
sbb
loopne
popf
sbb
or
add
xchg
fildl
push
mov
push
stos
pop
js
insl
loopne
xchg
aaa
pop
fisttpl
movsl
inc
inc
mov
mov
sub
mov
inc
mov
ja
push
cmp
jns
jg
inc
mov
bnd
xchg
xor
or
adc
and
int3
inc
rorb
xor
frstor
icebp
xor
xchg
ljmp
mov
shrb
inc
cs
movb
mov
sub
xor
stos
les
cld
jl
add
int
pop
in
sbb
clc
jmp
push
or
mov
ret
lahf
mov
addr16
sbbb
xor
out
dec
lcall
and
outsl
cld
dec
notb
gs
cld
pop
arpl
or
mov
sti
es
jge
xor
inc
mov
mov
mov
push
cwtl
sbb
out
jge
adc
mov
sub
sub
int
movsl
pop
insl
fidivrs
cmovnp
jmp
data16
cwtl
dec
out
lods
scas
cmpsb
scas
in
ds
insl
jbe
xor
scas
sbb
push
xchg
mov
adc
add
lods
into
in
adc
hlt
shrl
test
sbb
ret
mov
hlt
inc
sbb
stos
in
cmpsb
popa
push
popf
cmc
sbb
and
fnstenv
jnp
popf
insl
stos
add
cmc
int
movsl
test
iret
ss
movsb
adc
outsb
insb
and
rclb
scas
dec
push
stos
cld
sbb
sbb
sub
xor
jp
mov
pop
fwait
call
loop
outsb
je
sbb
loopne
xchg
mov
inc
push
adc
lods
mov
out
fs
cs
insl
ss
sbb
jle
adc
es
mov
iret
mov
pop
lds
or
imul
sti
rcpps
mov
fcomip
add
fcompl
pop
inc
mov
push
bound
xlat
divl
dec
mov
and
cmpsl
lods
or
dec
pusha
mov
jnp
mov
leave
jne
pop
xchg
cmp
sub
in
jb
test
or
adc
or
insl
and
dec
mov
push
xor
je
stos
sub
sbb
cmp
sub
and
mov
jno
adc
sbb
jbe
inc
push
pop
negb
and
cmc
jne
xchg
aas
lock
jbe
jmp
fidivrs
and
shrb
adc
lock
icebp
cltd
imul
fistpll
in
icebp
addr16
jbe
mov
jno
pop
out
jecxz
inc
es
or
sbb
inc
cmc
mov
inc
mov
inc
sbb
cmp
cmp
pushf
cwtl
cmp
push
rcll
sub
mov
jno
sub
jb
jl
ret
cs
mov
imul
xor
cmp
or
popa
cltd
mov
sbb
dec
hlt
dec
sub
jne
and
insl
gs
dec
ret
inc
cltd
cmpsl
stc
dec
cmp
addb
mov
movsb
cmp
jp
jb
mov
push
sbb
push
cmp
fst
in
xor
les
pusha
mov
stc
jmp
nop
aad
pop
mov
cs
test
jnp
mov
sub
loop
adcl
lds
inc
jg
jo
in
dec
push
negb
out
addr16
jl
or
pop
mov
data16
pop
sbb
inc
mov
popa
out
adc
cld
mov
or
and
in
je
mov
and
addr16
out
sbb
bound
mov
fisubs
int3
cmpsb
mov
sbb
mov
test
lods
dec
lret
loopne
mov
lods
pop
jmp
fcmovb
outsl
lods
push
fcompl
or
mov
add
mov
hlt
aad
ds
cld
jecxz
ds
xchg
in
gs
pop
bound
std
add
push
and
sbb
xlat
rcll
mov
mov
push
xlat
cmp
and
movsb
push
imul
pop
loopne
jne
addr16
cvttps2pi
mov
sbb
adc
and
mov
xor
cmp
adcb
in
push
test
outsl
adc
sahf
or
mov
or
ss
loop
push
div
test
pop
xchg
repnz
enter
out
pop
fcompl
scas
test
stos
jno
imul
add
mov
xor
xor
ss
ds
mov
aad
dec
sbb
ljmp
xchg
cmp
or
test
subl
leave
std
fstp
xchg
adc
pop
leave
sub
push
div
pop
js
xor
push
into
pop
insl
addr16
movsl
call
sbb
or
lock
in
lea
sub
rcr
es
clc
test
push
push
xor
cmc
push
stos
push
popf
fwait
lea
cmpsl
fcomps
pop
aad
mov
fwait
ja
icebp
mov
and
fstpt
xlat
aam
out
sbb
or
rcll
std
test
add
aas
mov
jns
and
xchg
incl
lea
sahf
lods
jno
dec
cmpl
push
int3
xor
jno
pop
and
andb
inc
loopne
call
lret
bound
adc
dec
out
and
mov
dec
dec
push
dec
mov
fidivl
xlat
push
mov
lea
pop
dec
push
sbb
hlt
mov
or
jo
daa
nop
mov
imul
add
and
pop
xor
xor
scas
aas
sbb
mov
pop
mov
push
cs
outsl
loopne
jmp
insb
sub
pop
fidivs
in
cwtl
mov
lds
and
out
lock
mov
pushf
cmp
shlb
lret
fsubrs
imul
daa
lods
jno
insb
jmp
int3
das
cli
imul
xor
and
xchg
std
jecxz
sub
or
sti
mov
int3
add
or
sub
cli
inc
add
movsb
jecxz
inc
repnz
mov
outsl
pop
iret
out
push
adc
int3
pop
jnp
xchg
dec
addl
test
jmp
cwtl
imul
adc
adc
in
movsl
xor
mov
aam
loopne
imul
out
call
gs
lds
push
ret
xchg
ja
jg
aam
movsb
add
jg
call
gs
and
aaa
jg
inc
popa
ret
scas
cld
je
mov
daa
das
mov
inc
cs
jl
nop
lret
dec
outsb
xor
movsl
out
dec
imulb
mov
cmp
adc
jne
incb
jbe
or
push
inc
gs
sbb
insb
loope
lret
push
sti
sub
out
dec
jo
adc
pop
ret
repz
sub
sub
js
in
cltd
jne
mov
sbb
insl
lea
nop
pop
hlt
loopne
lock
fs
js
loope
idiv
xor
cmpsb
fstps
bound
int
in
popa
cmp
or
jno
icebp
inc
lret
sbb
mov
push
mov
leave
hlt
inc
mov
xchg
cmpsl
test
sti
mov
adc
lcall
inc
xor
push
inc
fidivs
dec
mov
push
xchg
ljmp
aas
loope
dec
xchg
fwait
lret
addr16
lahf
loope
cmp
lcall
jb
std
or
xchg
or
mov
pop
in
shl
xlat
cmc
imul
cmp
cmpsl
mull
imul
outsb
cmp
dec
jge
mov
xchg
mov
adc
push
and
je
and
cltd
add
jecxz
lahf
outsb
mov
sbb
lcall
cmp
cli
dec
insl
outsb
inc
inc
rcrl
cltd
pop
add
test
aad
arpl
jne
testl
pop
sub
mov
and
mov
add
cmp
pop
add
jmp
mov
and
fsub
xchg
jno
xor
xor
fisttps
cmpl
push
jp
pop
fisubs
test
sub
int
std
push
inc
dec
loop
in
mov
orl
sti
or
jb
pop
dec
mov
aaa
and
add
ds
cmp
shrd
out
jle
ss
pop
and
add
jbe
xchg
push
std
into
shrl
mov
dec
stos
data16
cmp
add
mov
addr16
arpl
loop
cmp
out
adc
push
not
in
test
ljmp
xchg
hlt
adc
mov
mov
movsl
xchg
jle
cmp
and
mov
xor
mov
push
xchg
popa
addb
testb
mov
or
jecxz
lret
fadd
and
sbb
lds
or
xchg
nop
subl
stos
insb
std
push
enter
or
pop
out
inc
rolb
and
enter
andl
xchg
mov
jg
lds
in
dec
int3
xchg
popf
or
dec
fbstp
movsl
mov
cltd
push
jnp
jo
adc
shlb
xchg
scas
loopne
ss
push
sahf
jl
adc
sahf
das
xchg
pop
test
pop
ljmp
fisubs
cmp
mov
mov
in
push
dec
clc
adc
sub
xor
out
dec
mov
lret
add
test
std
mov
dec
int3
aam
lods
and
adc
roll
cmp
mov
jns
xchg
mov
adcl
pushf
and
scas
push
pop
dec
fcmovnu
xchg
pusha
lds
mov
test
popf
sbb
mov
xor
and
lahf
clc
xor
adc
test
mov
shrl
es
and
imul
in
outsb
mov
jmp
pushf
inc
pop
decl
adc
fimuls
ret
cmp
xchg
fwait
sub
mov
out
cs
data16
das
cmp
xchg
adc
jmp
call
outsl
jb
popf
sub
sbb
sub
push
ljmp
jmp
test
nop
push
mov
inc
add
lock
dec
inc
lret
lods
dec
jle
add
sbb
or
outsl
arpl
xor
inc
xor
repnz
inc
cmp
and
outsl
sarb
addl
xchg
in
jg
es
push
pushf
push
mov
jbe
xchg
and
xlat
jle
and
ds
sbb
cltd
mov
dec
lcall
xchg
adc
cmp
lods
mov
fidivrs
mov
das
pop
out
out
xor
sbbl
lods
in
lcall
jbe
add
decl
mov
jbe
mov
lea
and
xchg
into
fisubl
pop
jecxz
lret
andb
cmpsl
cmp
xor
test
lahf
mov
and
inc
lahf
xadd
aas
mulb
aas
sub
mov
and
shll
jno
adc
lret
pop
cmp
lds
int
das
add
aas
mov
jge
dec
popa
out
test
repnz
std
mov
out
jle
pop
xchg
mov
iret
push
add
shlb
dec
mov
in
dec
and
cmp
addr16
sub
or
cwtl
xchg
out
inc
mov
mov
lods
addb
fisubs
push
addl
push
mov
data16
mov
mov
out
jecxz
adc
ret
push
lret
ds
inc
dec
test
push
or
stos
jb
mov
leave
fsubrl
ficompl
xor
dec
je
daa
daa
inc
ret
test
mov
nop
mov
jno
mov
jp
xchg
rcr
jmp
and
mov
cmp
jmp
or
lock
pop
sti
popa
nop
stos
les
mov
ds
or
pop
lcall
push
faddl
cltd
es
cmpl
mov
sub
mov
shlb
jle
push
enter
test
xchg
decl
mov
mov
enter
mov
jbe
in
test
out
fstpt
add
pop
sbb
rorl
sti
and
outsb
gs
cmp
inc
mov
mov
or
fdiv
shlb
add
xorl
movsb
insb
sub
in
xchg
inc
xchg
pushf
cmpsl
jmp
mov
pop
pop
popf
lods
and
pop
cmp
aaa
push
out
insb
pusha
xacquire
in
in
int
pop
jnp
pop
mov
jle
sbb
lret
out
xchg
int3
cltd
fbstp
pop
sbb
xor
mov
jae
fnstsw
nop
mov
xchg
jle
dec
jmp
movsb
cmp
add
lcall
xchg
aad
xchg
adc
cmp
ret
mov
sbb
sarb
inc
out
je
jp
out
mov
cmp
out
aam
ficoms
in
loopne
movsb
jae
inc
cld
rorb
push
lods
push
scas
xchg
lret
mov
jle
aaa
andl
aam
test
pop
push
cwtl
cmp
ret
sbb
nop
test
scas
lahf
pop
fistps
push
sub
mov
push
cmp
mulps
test
dec
call
or
and
fwait
ljmp
mov
xor
arpl
add
adc
subb
mov
test
pusha
push
lcall
xor
outsl
out
stc
jo
test
js
bound
shll
push
jo
mov
rolb
daa
jno
mov
sub
call
push
cmp
je
ret
fnsave
sbb
xchg
jecxz
dec
cmp
rcr
or
add
jb
pop
xchg
mov
test
lret
or
mov
add
repnz
jbe
push
push
hlt
cltd
loop
nop
in
pop
dec
xchg
or
insb
subb
inc
fadd
fldpi
sbb
lcall
ss
jmp
sbb
push
sub
mov
ds
aam
mov
mov
push
in
ficompl
sbbl
sbbb
mov
xchg
push
or
push
xor
jp
lret
ss
scas
loope
pusha
mov
mov
inc
adc
cmp
lret
xor
jg
sbb
lods
push
outsb
std
push
loopne
push
jns
fbstp
pop
xchg
sub
gs
jmp
xchg
je
into
or
mov
fstl
mov
sbbl
pop
xchg
leave
adcl
insl
mov
lcall
jmp
push
lds
cmp
xor
push
aaa
jb
lods
xchg
pushf
int3
mov
xor
out
repz
cmp
pop
loope
pop
push
jb
xchg
xchg
push
out
notl
fwait
es
adc
in
push
push
movsl
sub
mov
and
sub
mov
pop
int
rcll
sarl
xor
je
mov
push
push
sbb
outsb
xor
xor
or
sbb
stos
lods
shrl
outsb
mov
scas
cmc
xchg
mov
or
mov
xor
test
xchg
int
xchg
or
fisubs
sub
std
jo
sahf
les
jp
loopne
icebp
jle
das
dec
inc
out
xor
repz
mov
adc
jp
xchg
lea
cld
in
mov
add
out
xor
outsl
adc
fcomi
or
stos
outsb
das
mov
xchg
mov
adc
int
sbb
pop
ja
and
and
adc
jp
jl
xchg
fdivl
nop
mov
sbb
test
mov
aas
xor
lods
xor
dec
xchg
stos
imul
clc
popa
stc
add
pop
stos
cmp
andb
push
cmpsl
fsubrl
js
sub
push
mov
or
es
xchg
cmp
lock
xchg
and
mov
xchg
sbb
iret
xlat
xlat
stc
or
aaa
fcompl
xlat
mov
nop
in
out
push
push
mov
fs
add
inc
aam
sub
es
in
push
leave
nop
push
jno
and
pop
pop
out
es
call
xchg
jno
stos
loop
cmp
ss
pop
aaa
add
add
add
add
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
sub
add
test
add
call
add
add
add
addb
add
add
jo
add
cwtl
add
addb
add
rolb
addb
add
call
add
add
add
cmp
add
cmp
add
pusha
add
cmp
add
mov
add
mov
add
fadds
add
add
add
sub
add
push
add
xor
add
js
add
mov
add
add
add
xor
add
lock
xor
add
sbb
xor
add
inc
add
xor
add
push
add
add
add
add
add
add
add
sub
add
or
add
xor
add
pop
add
add
addb
add
add
add
add
add
add
add
push
add
mov
add
or
add
add
mov
add
mov
add
or
add
pop
add
mov
add
or
add
popl
add
add
add
add
add
add
add
add
mov
add
or
add
add
add
enter
or
add
add
add
add
add
add
add
roll
add
or
add
add
add
add
add
add
lock
add
or
add
add
add
add
add
add
fsubr
add
mov
add
or
add
ljmp
add
add
or
add
add
add
add
mov
add
or
add
add
add
testb
call
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
call
add
add
add
add
add
sub
add
mov
add
or
add
add
or
add
add
add
add
add
sbb
mov
add
or
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
call
add
add
add
add
add
sbb
add
mov
add
or
add
sub
call
add
add
add
add
ss
rolb
add
or
add
add
add
add
call
add
add
add
add
add
add
add
call
add
add
add
add
add
add
call
add
add
add
add
add
adc
add
or
add
add
add
add
add
add
clc
bound
call
add
add
add
add
insl
add
call
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
push
add
int3
jnp
add
pop
add
enter
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
inc
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
adc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
outsb
add
add
dec
add
add
add
add
inc
add
jb
add
add
jb
add
add
addb
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
je
add
popa
add
add
add
add
add
add
and
data16
add
and
sub
inc
add
push
add
add
add
outsl
add
jb
arpl
add
add
outsl
add
add
add
add
je
outsl
add
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jo
jo
add
js
add
add
sbb
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
insb
add
data16
add
add
add
add
add
add
add
add
add
jns
and
inc
add
outsb
add
add
dec
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
je
add
popa
add
add
add
add
js
add
add
or
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
je
add
popa
add
add
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
mov
leave
add
add
add
ror
add
loopne
add
lock
add
add
add
push
lret
sbb
add
add
add
sub
add
add
add
cmp
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
jb
imul
add
jae
jo
xor
cs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
jne
jb
push
popa
insb
jne
push
add
push
push
push
inc
outsb
jne
gs
je
push
gs
gs
inc
