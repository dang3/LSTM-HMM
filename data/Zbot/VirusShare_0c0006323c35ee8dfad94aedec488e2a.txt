add
pop
and
add
stos
jg
push
sbb
cmp
add
sbb
add
add
or
mov
call
xlat
mov
dec
add
push
push
add
mov
leave
ret
xor
mov
xor
or
sub
add
push
xorb
cmp
fisubrs
not
neg
mov
jmp
fwait
outsl
xor
cli
ret
cmp
or
jbe
cmp
add
or
sbb
outsb
adc
add
cmp
inc
decl
fbstp
mov
mov
pop
loopne
add
lock
jg
pusha
cwtl
pop
ds
es
cmp
neg
dec
in
mov
or
int3
inc
add
inc
dec
cmp
je
not
leave
sub
lods
std
leave
not
ret
neg
stos
sub
fcmovne
std
decl
xor
push
lea
push
pushl
add
outsl
imul
and
andb
cmp
pop
push
imul
and
addl
stc
dec
adc
incl
jle
push
sub
push
sub
xor
mov
inc
jne
cwtl
cmp
or
add
shrb
filds
xor
repz
jg
lret
outsl
xor
inc
scas
sub
push
je
or
ja
incl
daa
push
daa
fs
add
jo
inc
add
adc
stc
sbb
in
lcall
jo
pusha
add
add
adc
orb
mov
jg
mov
daa
sbb
mov
jmp
push
inc
mov
das
mov
xchg
push
add
incl
or
adc
adc
push
xor
mov
nop
cmp
push
inc
lock
cmpl
mov
push
mov
das
clc
push
or
add
adc
std
ljmp
or
xchg
add
sar
loope
push
push
jne
je
nop
pop
stc
mov
dec
adc
jge
std
jmp
adc
jl
add
nop
xor
and
push
pop
jle
inc
pusha
cmp
loope
push
mov
testl
dec
inc
cmp
jecxz
jbe
inc
incl
lea
push
push
mov
in
adc
push
xor
repz
lcall
dec
xchg
pusha
jl
inc
loope
daa
jo
pusha
or
push
icebp
mov
test
push
push
or
dec
mov
std
fcmovne
lahf
sub
adc
faddl
add
mov
push
adc
cld
jle
sbb
add
pushf
fstpt
pop
test
push
or
adcl
inc
decl
sub
jge
out
push
fs
pop
nop
adc
jb
fistpl
outsb
int
aas
inc
bound
or
or
dec
mov
push
add
into
shll
jmp
sub
dec
inc
jmp
dec
lods
push
in
dec
add
adc
jae
roll
and
sub
dec
inc
push
push
mov
addr16
dec
fistl
les
gs
insl
push
jno
repz
push
incb
inc
bound
call
or
clc
sbb
pusha
cmp
popa
inc
shll
and
or
add
cmp
faddp
lea
xlat
mov
clc
dec
jbe
ss
dec
mov
sti
fcomi
decl
inc
ret
clc
jne
sbb
xchg
jae
cld
and
sar
pop
clc
fisttpll
add
gs
dec
test
ja
cli
decl
ss
xor
dec
dec
push
xor
in
test
dec
push
xor
adc
jae
call
adc
xor
inc
cmp
inc
adc
xchg
fstpl
adc
push
in
sub
lcall
and
pusha
xor
and
sbb
xor
add
das
divl
inc
add
gs
in
mov
add
test
pushw
sahf
popf
cld
or
int3
mov
jns
inc
push
and
pop
idiv
lret
push
jecxz
pop
and
fcoms
shrb
das
in
fwait
in
jns
sub
repnz
outsl
int3
push
and
aas
repnz
pusha
adcl
incl
sbb
bound
or
xor
push
add
mov
xor
jb
ror
mov
stc
inc
js
int3
aam
int3
iret
int3
cmp
idiv
rep
bound
dec
push
pop
lock
enter
xor
int3
mov
jo
push
xorb
in
xor
add
popa
jg
cli
int3
cli
and
push
push
fmull
push
mov
mov
jg
das
in
pop
and
fwait
out
loopne
or
jne
std
out
nop
sarb
int3
pop
adc
xor
ss
add
mov
std
dec
int3
add
int3
outsl
sbb
and
out
outsl
or
pop
cmp
and
sbb
int3
lods
dec
enter
xlat
adc
or
leave
call
pop
or
andl
xchg
int3
dec
idiv
fnstcw
test
cmp
scas
add
icebp
repnz
cmp
in
gs
je
or
push
cmp
dec
fidivs
dec
jns
cltd
lds
xchg
dec
out
cld
mov
push
cmpsl
push
dec
std
inc
mov
pop
sti
or
int3
adc
int3
jle
push
nop
out
jmp
pop
add
outsl
dec
pop
in
cmp
or
mov
cli
mov
int3
jg
mov
pmulhuw
push
adc
sub
or
xor
lahf
or
cmp
popa
out
jnp
fistpll
pop
pop
and
push
bound
push
aas
hlt
push
adc
xor
sti
addb
adc
add
mov
add
cmp
pusha
mov
lret
in
outsl
pop
dec
push
fidivs
aaa
daa
in
or
sahf
test
fsubrp
pop
lods
pop
sub
sbb
shr
push
add
jbe
int3
test
add
filds
xchg
sbb
outsb
ficomps
or
hlt
int3
ficompl
in
leave
incb
test
push
je
jno
in
mov
daa
inc
sahf
jle
pinsrw
dec
xchg
lret
inc
jo
jne
in
lock
and
cmp
loope
jl
int3
cltd
mov
cmp
sub
clc
xchg
aas
in
add
movsb
xor
arpl
jno
in
gs
pop
pop
lahf
dec
mov
ucomiss
sbb
insl
lea
mov
popf
xor
jg
ror
lea
imul
push
into
fld
push
mov
fistpl
sar
ret
outsb
push
or
jecxz
sub
sub
or
mov
or
adcb
cmp
pop
mov
xchg
sbb
adc
outsl
cmp
add
pop
int3
pusha
cld
popa
aas
and
xlat
xchg
jae
bound
and
addr16
sbb
mov
add
xor
and
mov
in
in
orl
mov
fistl
add
mov
and
pop
pop
mov
adc
add
fwait
xor
leave
cltd
push
in
or
popf
cld
mov
fs
faddp
inc
or
das
in
outsl
and
and
mov
test
inc
idivb
pusha
xchg
test
mov
int3
jp
mov
mov
shrb
sbb
sti
rclb
mov
pop
cmp
cmp
insl
cmpb
stc
push
and
jns
jmp
jae
sbb
adcb
adc
in
sbb
roll
cmp
push
aas
sbb
ficoms
cmpb
popa
sub
push
popa
mov
orl
adc
xor
out
in
leave
pop
orl
or
jp
or
fdivrs
sbb
jae
mov
adc
ss
or
xchg
daa
and
mov
rcll
mov
out
sti
mov
mov
add
mov
mov
jg
int3
push
insl
jne
and
popa
adc
cwtl
test
mov
and
and
shld
je
test
mov
loop
repnz
clc
add
xor
icebp
sub
sbbb
incb
pop
adc
rcrb
or
shlb
mov
mov
inc
stos
jns
pop
sbb
add
xor
lahf
insb
mov
push
add
dec
lahf
add
adc
popa
xchg
xchg
scas
es
stc
bt
leave
loope
in
add
ja
mov
jo,pn
xchg
outsl
pop
jns
arpl
xor
jg
inc
push
cmp
add
pop
xor
push
push
cmpsb
jnp
adc
add
fdivs
je
outsl
cmp
aam
orl
mov
mov
scas
sub
loop
push
sbb
leave
lahf
or
xchg
jg
pop
mov
fsub
mov
pushf
cld
inc
popa
pop
sbb
into
push
mov
mov
xchg
daa
adc
sub
pop
sti
mov
push
push
clc
xorl
out
mov
and
lcall
enter
je
lods
sarb
jmp
xchg
lahf
nop
mov
lods
mov
push
inc
call
xor
and
pop
movsb
xchg
adc
ret
js
nop
add
dec
push
inc
xchg
shlb
sbb
or
in
das
fwait
adc
das
cld
inc
loopne
or
cmp
jnp
test
inc
pop
or
popa
dec
add
das
sbb
inc
sbb
xor
ret
cs
push
js
in
or
adc
dec
out
or
movsb
xchg
mov
cwtl
push
mov
bswap
pop
dec
mov
fwait
test
sahf
cld
nop
xor
sub
ret
fimull
lock
adc
test
pop
xor
jecxz
inc
mov
inc
decb
mov
je
xor
data16
mov
push
inc
int3
subb
movsl
pop
sub
adc
adc
out
jp
push
jb
fadd
xchg
sbb
sbbb
pushl
cmp
testl
insl
jno
fwait
push
scas
add
lock
sahf
popl
enter
xchg
or
stos
mov
xor
inc
push
scas
lea
dec
and
pop
adc
or
jle
fidivrl
inc
push
push
inc
push
sub
je
inc
jbe
add
data16
mov
dec
ds
cmp
sub
pop
pop
xor
in
and
add
push
jbe
ficoml
pshufw
mov
test
or
jnp
mov
mov
adc
and
movl
popa
cmp
or
sub
pop
ret
imul
sbb
and
bswap
movntq
fistpl
and
push
mov
jae
test
jg
lahf
or
lret
fmuls
push
jmp
scas
sub
pop
mov
iret
push
or
cltd
das
scas
pusha
adc
pusha
pop
xchg
imul
xchg
and
repz
dec
cld
sbb
loopne
adc
sub
adc
mov
adcb
mov
xor
mov
adc
sub
cmc
mov
popa
ljmp
xchg
cld
push
scas
pushf
insb
jb
add
push
xchg
loopne
in
cld
test
insb
xchg
test
mov
mov
sbb
add
pop
pop
xor
xchg
and
repnz
lret
and
pop
aas
in
popa
insl
faddl
aas
addps
sbb
sub
inc
cmc
arpl
inc
adc
sbb
es
stc
das
cmpl
adc
dec
loopne
arpl
xchg
push
push
xor
popf
lock
xchg
rcll
pop
out
or
out
mov
xchg
pop
xchg
ret
cmp
inc
insb
add
push
movsb
and
mov
cmp
push
imul
imul
add
scas
incb
cmpsb
jge
and
pushf
xor
cmp
pop
mov
in
xchg
out
pop
pop
mov
or
xchg
add
enter
and
fnstsw
mov
insl
roll
insb
in
repnz
jge
adc
xchg
js
push
mov
out
in
inc
xor
orl
jg
xchg
cmpsl
loop
lds
cmpl
shlb
testl
inc
push
mov
xchg
mov
dec
or
out
adc
mov
add
push
or
xlat
andb
test
idivl
xchg
popf
in
imul
shr
lods
push
repnz
popw
sarb
add
sbb
out
leave
and
lock
mov
cli
in
push
pop
mov
mov
pop
jo
mulps
arpl
or
aam
xor
jp
xor
push
mov
movl
xchg
jge
xor
iret
cmp
or
cs
pop
jmp
fsub
dec
push
clc
add
push
cmpsl
sbb
rorb
pop
outsl
divb
loopne
jbe
pop
lret
enter
jmp
stc
and
fisttps
cs
pop
aad
sbb
add
or
fwait
js
or
mov
shrb
or
cmp
jg
jo
jmp
sbb
mulb
int3
pop
int3
ret
jp
xchg
cmp
testb
cmp
xor
mov
inc
cs
sbb
out
sbb
jg
inc
inc
mov
arpl
inc
pushf
jl
aad
xchg
jns
inc
clc
imul
mov
pop
cmp
xchg
push
ret
nop
mov
jbe
jp
dec
popf
adc
pop
jmp
and
lods
rclb
lea
and
std
cmc
imul
pop
and
add
leave
popa
jge
xchg
add
jb
addb
inc
mov
cmp
mov
daa
insb
jmp
loop
mov
push
lahf
movsb
pop
pop
cmp
and
xchg
push
jl
cmc
dec
imul
lret
xor
dec
fsubp
mov
xchg
xchg
sbb
test
dec
jg
pop
shlb
in
shlb
cmp
in
cld
sarl
test
push
xchg
adc
shr
pop
popl
inc
das
lock
jbe
cwtl
adc
dec
nop
pushl
mov
or
add
cmpsb
test
jno
jle
mov
adc
dec
or
push
xlat
les
and
add
cwtl
adc
out
add
sahf
cli
fistpl
and
cmp
adc
xor
mov
imul
in
jne
outsl
popa
ss
jne
adc
mov
inc
sahf
jl
adc
inc
js
pop
test
stc
stos
mov
jnp
mul
pop
pop
dec
xchg
stc
daa
test
ja
inc
mov
dec
repnz
inc
push
or
pop
jle
adc
jecxz
mov
data16
jmp
or
std
inc
incb
mov
outsl
sub
lods
xor
in
cli
or
stc
push
mov
loope
cs
push
xor
mov
daa
clc
add
adc
sahf
jbe
std
and
jbe
jmp
xor
mov
xchg
popa
out
push
jmp
es
pushf
pop
clc
or
jle
hlt
cmp
push
imul
sbb
fwait
in
jnp
xor
jmp
jne
fildll
fisttps
out
adc
and
mov
outsb
ret
stc
add
test
xchg
gs
lahf
and
add
add
pop
sbb
jo
cmpb
pushf
mov
add
or
rcl
xchg
jno
mov
neg
jne
nop
loop
fistpll
sbb
iret
into
lcall
cmp
xor
aas
clc
out
dec
ss
jno
stos
in
jmp
sub
or
out
mov
mov
pop
popf
or
mov
sub
clc
iret
cmpsb
push
pop
jp
and
add
pop
imulb
dec
pop
ret
add
aaa
mov
and
mov
int3
ss
sti
or
push
pop
add
sbb
and
add
and
dec
lods
adc
int3
jns
icebp
loopne
mov
cmpsb
cmp
dec
dec
test
arpl
push
mov
xchg
xchg
jecxz
xchg
mov
sbb
and
test
push
xor
push
mov
jbe
nop
outsb
sbb
jecxz
mov
adc
fdivrs
nop
xchg
or
popa
es
inc
push
sahf
jg
push
mov
or
lock
test
repnz
mov
xchg
div
xchg
xor
push
sbb
inc
adc
mov
xchg
lcall
adc
gs
hlt
cli
jg
dec
sub
push
mov
dec
ljmp
sbb
and
jge
add
sbbb
out
cld
push
out
pmulhuw
faddl
dec
cmp
push
cmpsb
in
enter
cwtl
dec
int3
shrb
xchg
popf
nop
mov
icebp
sbb
popa
in
movq
std
and
mov
sub
mov
mov
cmp
aas
mov
out
or
sub
leave
pop
es
or
push
adc
inc
incl
cld
outsb
jg
aas
lcall
sbb
or
ret
sbb
enter
mov
add
adc
push
push
in
pop
and
pop
incb
ljmp
mov
jge
push
lret
rcr
jmp
loopne
sub
jae
xchg
cwtl
nop
cli
add
jge
and
out
cmpl
add
adc
movsb
and
mov
call
out
sbbb
sub
mov
es
adc
sub
and
add
repnz
stc
fildl
int3
sbb
mov
das
fsts
cld
clc
icebp
gs
mov
or
scas
inc
data16
xor
js
je
ds
jmp
subl
adc
bound
jbe
pop
jmp
bnd
in
mov
fdivrp
xor
loope
add
xchg
add
add
addr16
lods
mov
pop
std
pop
cli
loopew
lods
pop
mov
sbb
xor
mov
mov
mov
aas
add
in
imul
dec
ficoml
xor
addr16
daa
add
mov
mov
aas
jb
add
jmp
insb
or
sbb
add
mov
inc
mov
sbb
jg
test
cmp
xor
shrl
outsb
outsb
mov
mov
lods
mov
pop
inc
mov
mov
push
lock
in
cltd
or
or
pusha
add
jno
xor
sub
ss
clc
inc
push
outsb
or
push
and
mov
movsb
popf
int3
jne
push
mov
scas
xor
inc
jb
testl
and
jbe
inc
add
mov
pop
adcl
sub
jle
jle
imul
push
aas
enter
std
orb
test
test
inc
pop
rolb
rcll
xchg
ss
inc
xlat
mov
clc
bound
adc
mov
add
mov
mov
xor
xor
lret
xchg
iret
movl
sub
movsb
jbe
popf
mov
or
dec
push
movsb
scas
lcall
inc
enter
fwait
test
nop
adc
sti
jbe
sbb
cld
stos
add
jp
outsb
loop
orl
ljmp
fimull
inc
sbb
cmp
add
push
out
mov
sub
out
push
xchg
mov
mov
xchg
in
xor
add
int3
mov
pop
inc
xor
or
jo
dec
sbb
mov
shl
test
dec
sub
std
xchg
inc
or
jmp
cmpb
cmp
or
pop
pop
add
rol
and
testl
xchg
shlb
dec
add
add
xchg
push
arpl
hlt
xchg
out
or
dec
ret
gs
dec
jae
jo
int3
stc
mov
inc
lds
dec
jne
inc
jle
dec
or
mov
cld
and
daa
pop
subl
add
pop
in
subl
sub
sbb
into
add
jecxz
and
sub
xchg
sbbl
stos
ss
mov
or
push
cmc
jne
push
in
out
clc
jl
inc
imul
aas
adc
shlb
push
jge
mov
dec
das
and
jge
xor
push
inc
mov
addl
xchg
aas
mov
and
xchg
push
es
and
add
pop
mov
nopl
cli
add
cmp
jno
in
mov
jo
mov
lds
push
or
adc
dec
sbb
daa
orl
add
sbb
mov
nop
clc
dec
shlb
ret
sub
xchg
fwait
orl
imul
orb
cs
cmp
xor
stc
and
sub
push
or
and
inc
out
jo
xor
add
pusha
adc
and
mov
sub
dec
sub
inc
adc
icebp
pop
cwtl
hlt
dec
in
sti
addr16
loopne
repnz
pusha
mov
or
cmp
xchg
setae
mov
ret
add
jp
adc
shrb
pop
out
sub
aaa
cmp
pop
cmp
lock
push
adc
stos
push
pop
mov
cmp
and
aas
fs
jmp
out
mov
adc
cmp
aad
mov
cmpsb
xchg
clc
add
push
ret
addb
mov
in
dec
addr16
pop
jge
add
sahf
mov
adc
cmovnp
and
xchg
bound
xchg
stos
adc
out
mov
mov
and
jle
imul
inc
cmpsl
pop
test
ljmp
gs
cmpb
dec
loop
cmp
adc
lds
add
jne
xor
je
ret
outsb
ja
and
mov
test
and
rorb
stos
sbb
pop
pusha
dec
ljmp
enter
jmp
movsl
loopne
pusha
insb
jno
pop
inc
add
addl
mov
leave
or
xchg
aad
pusha
pop
aam
cmp
cs
cmp
addb
jecxz
leave
push
std
aam
sbb
xchg
aas
imul
push
push
cwtl
jge
or
push
out
aas
pop
mov
test
add
add
sti
mov
push
das
or
cld
jno
mov
ret
out
daa
pop
stc
add
aam
ficompl
xchg
mov
test
das
movsb
jle
or
sti
dec
jns
jmp
sub
mov
fildl
pop
push
xor
enter
xor
adc
adc
add
dec
xchg
push
stos
cmp
cld
push
inc
inc
cmpsl
pushf
movsl
loopne
popf
push
sub
sub
data16
push
inc
inc
insl
sbbb
es
xor
ret
lock
sub
mov
and
sbb
lods
lods
inc
pop
cmp
add
icebp
push
mov
mov
pop
mov
xchg
jo
inc
stc
xor
add
mov
addl
enter
mov
push
or
sub
icebp
adc
add
and
and
jecxz
sbb
xchg
call
mov
leave
lahf
dec
scas
dec
insl
mov
sbb
adc
addb
xor
pushf
cld
and
das
add
pop
xchg
movsb
mov
sub
test
adc
testl
pop
or
inc
pusha
decl
push
pop
push
cmp
push
fsubp
mov
mov
sbb
jb
pop
jno
ret
lret
xor
ret
mov
xor
pop
mov
repz
pop
std
pusha
nop
jg
mov
int
push
dec
push
nopl
cli
fwait
cmp
lods
push
push
mov
add
and
and
or
in
repnz
jbe
adc
dec
test
add
aam
cli
inc
sub
mov
xchg
xchg
mov
jl
insl
push
dec
ret
ja
enter
mov
dec
shll
pop
dec
lods
sub
test
lods
in
jmp
aas
add
xor
popf
lcall
cs
int3
out
jl
push
xchg
mov
enter
sbb
dec
cmpsb
xor
ret
push
aad
shll
cmp
cmp
insb
clc
insl
inc
subb
cld
xchg
call
push
sub
in
mov
or
push
adc
add
cs
stos
add
sbb
pop
add
dec
adc
cmp
roll
or
xorl
or
or
lds
or
lods
outsb
push
and
std
xorl
inc
xchg
and
adc
jg
xchg
jmp
out
fs
sti
jae
leave
repnz
rclb
push
in
add
aas
push
inc
cld
and
mov
loop
mov
or
jno
hlt
push
adc
std
jmp
adc
mov
dec
call
add
loope
add
inc
inc
stc
sub
repnz
inc
jo
popa
inc
test
mov
mov
lahf
int3
mov
adc
das
sub
cltd
mov
jb
std
sub
dec
nop/reserved
nop
add
fldenv
mov
aaa
cmp
cmp
mov
fmuls
leave
dec
in
sub
pop
dec
pop
pop
repz
or
xchg
add
pusha
stc
dec
mov
cli
in
sbb
repnz
or
fucomi
and
pcmpeqw
sub
cld
pusha
in
popf
dec
lret
push
adc
shr
add
push
jmp
lea
lahf
nop
fists
aas
lock
lret
and
jle
pusha
dec
nop
or
mov
cwtl
xor
sti
fbld
pop
loopne
cmpsl
sbb
pop
nop
in
fisttps
subl
jnp
je
xchg
sub
nop
aas
jns
pop
mov
in
leave
call
lock
mov
int3
fbstp
in
jno
and
or
das
out
mov
and
addps
inc
dec
jo
sub
xor
pop
mov
daa
aas
and
fnsave
or
icebp
jne
xor
cs
fs
int3
sub
xor
xchg
rclb
sarl
stc
lods
xchg
cmp
xor
insl
and
sub
and
cmp
adc
popa
imul
daa
sbb
xor
inc
roll
fwait
or
sbb
xor
add
mov
incb
add
shl
rol
sbb
leave
mov
stos
add
mov
and
push
pop
mov
jo
sub
dec
xchg
into
sbb
dec
je
inc
lcall
daa
in
sahf
adcl
lea
cwtl
mov
lret
inc
push
jae
xor
mov
mov
rclb
lods
and
and
js
test
jb
orb
movsb
and
fidivs
xchg
or
sub
dec
jne
subl
aam
pushf
in
jb
push
shl
int3
jecxz
push
repnz
xchg
or
dec
sub
add
dec
lds
mov
jo
xor
lock
add
sub
pop
clc
mov
and
imul
adc
bound
jecxz
xchg
pop
mov
cmpsl
mov
jecxz
push
iret
cwtl
mov
xchg
mov
stc
cmp
dec
mov
and
xor
mov
cmp
lcall
lds
sbb
outsb
inc
adc
pop
loopne
push
jae
mov
push
and
inc
repnz
lea
dec
clc
and
adc
sbbb
iret
sub
and
pop
test
add
je
fildl
fcomip
pop
push
fldl
sarl
inc
cmc
imul
mov
mov
mov
xchg
push
jge
ret
rolb
xchg
arpl
mov
int
insl
and
shl
test
fistpl
pop
or
sbb
jp
jmp
add
and
mov
psraw
dec
out
rol
lods
js
xchg
sub
sub
jge
cld
pop
adc
mov
outsl
lods
inc
mov
es
int3
ss
ret
movsl
ror
add
inc
and
mov
and
sub
loopne,pn
loop
and
roll
out
xchg
jp
inc
jbe
aas
cwtl
cwtl
and
push
sbbb
pop
es
ds
push
cmp
push
mov
in
adc
mov
add
test
and
mov
push
pop
push
std
sbb
adc
and
mulb
test
xor
andl
leave
mov
test
loope
and
scas
imul
add
test
dec
adc
xor
clts
fildll
cmp
pop
push
and
aas
or
orl
pop
aad
jb
xchg
xchg
lods
int3
jae
das
insl
and
lret
or
lock
ret
std
test
fcompl
jae
sub
pop
or
jns
xlat
enter
or
lahf
fildl
jmp
dec
repnz
adc
outsb
in
or
push
scas
andl
xchg
inc
loop
push
jmp
push
push
sbb
sarb
call
lahf
or
mov
sub
adc
jne
inc
outsb
sahf
xchg
outsl
sbb
unpckhps
addl
mov
pop
adc
mov
mov
daa
or
add
jns
cmp
outsb
adc
popa
mov
mov
jg
pop
adcl
rcrl
mov
pusha
jne
xchg
add
inc
push
ljmp
in
push
arpl
and
xor
in
and
subb
xchg
lahf
lds
pop
and
or
pop
sbb
out
lea
aas
adc
xorb
inc
je
push
cmp
jb
adc
iret
fdivr
movsb
fcomps
push
jo
push
outsb
mov
sbb
or
dec
mov
dec
repnz
lods
and
sbb
popf
mov
push
int3
push
stos
mov
repnz
xchg
aam
xchg
pop
or
or
jo
leave
add
xorb
jbe
and
xor
lods
out
inc
out
lcall
pop
test
push
push
add
xchg
dec
cmp
pusha
test
and
repz
int3
pop
nop
lsl
add
jno
cmpl
insb
sub
decl
pop
mov
dec
mov
push
cmp
jmp
cmp
popa
insl
push
arpl
lahf
je
ljmp
outsb
inc
pop
sahf
popa
dec
push
cld
insl
pop
outsl
fs
lret
js
or
cmpsb
outsl
add
outsb
push
test
leave
notl
iret
add
arpl
sbb
fistl
in
inc
clc
inc
mov
call
sub
scas
jns
add
movsl
or
arpl
mov
dec
add
add
aad
bound
inc
or
adc
pop
adc
push
je
jo
mov
adc
repnz
mov
jne
pop
arpl
adcb
xor
inc
lcall
xorb
push
je,pn
js
mov
ret
rcll
jb,pn
popa
jb
cmpsl
cld
cltd
dec
jg
and
pop
inc
adc
add
sbb
rolb
data16
xor
outsl
add
add
jne
pop
sub
cs
aas
inc
inc
xor
push
popf
xchg
push
or
test
shll
cld
pop
mov
es
imul
jb
out
pop
fcomps
cmp
xor
pop
ljmp
std
rcrb
pop
dec
sbb
xor
and
extrq
jns
push
std
dec
push
js
sar
pop
pop
pop
pop
pop
and
pusha
inc
push
subl
gs
push
xchg
jb
push
fwait
movsb
cmp
ljmp
mov
mov
inc
xor
xor
pop
adc
aam
das
push
arpl
push
sbbb
dec
cmp
pushl
je
lcall
dec
adc
add
std
incl
or
mov
cmp
push
clc
inc
test
xor
pushf
cld
fisttpl
xor
int3
push
loopne
das
lock
pop
jge
and
pop
sbbb
dec
mov
arpl
mov
pop
jne
hlt
push
out
stos
mov
sti
add
pop
orb
cmp
lods
jno
aas
push
pop
push
add
addl
jecxz
push
add
add
inc
xor
add
sbb
test
unpcklps
repz
pop
jg
jle
xor
jb
push
dec
aam
pop
cli
pushl
xchg
push
addb
in
dec
xor
cld
mov
or
das
aas
inc
jo
jge
cmp
jmp
jo
std
loope
in
ficomps
sbb
dec
pop
les
add
jb
mov
cmpsb
mov
in
in
inc
arpl
rorl
add
jmp
mov
push
ret
sbb
dec
mov
cmp
add
lods
adc
mov
mov
cs
data16
and
outsl
roll
arpl
shrb
aas
adc
add
pusha
or
cmp
mov
scas
in
rclb
mov
sbb
out
cli
aaa
test
inc
pop
sub
or
xor
sbb
dec
mov
cmp
lcall
lcall
daa
aaa
sbbl
cli
fwait
shlb
mov
fwait
enter
jo
call
mov
iret
pushf
pop
cmp
repz
mov
or
and
cli
jg
xchg
popf
shlb
pop
or
mov
aaa
fdivrl
js
test
xlat
xchg
and
and
aaa
sub
jp
shrl
push
lock
xchg
push
sbb
ret
sub
das
fs
ss
aam
out
adc
push
push
popf
das
pop
cld
jmp
sub
pop
punpckhbw
dec
adc
inc
mov
pop
icebp
add
push
sub
shr
popa
cmc
sub
loopne
mov
pushf
or
push
mov
sub
lods
js
sbb
jg
adc
inc
shrl
inc
inc
loopne
cwtl
mov
cli
outsl
repnz
dec
jb
mov
arpl
cli
mov
ret
cmp
jg
stos
nop
xor
sbb
rorb
xor
int3
hlt
outsb
in
and
dec
jo
xchg
pop
int3
js
fcoms
lcall
pop
cld
mov
xchg
cmpsl
push
or
jb
in
lock
mov
mov
popa
adc
sti
cmc
and
lret
clc
jne
insl
arpl
repz
sub
lods
and
and
movsb
int
cli
pop
call
sar
inc
add
xchg
jge
cmp
out
ds
icebp
shl
lret
inc
add
push
push
insl
dec
xor
pop
lock
rorb
xchg
mov
leave
into
out
mov
pop
pop
sub
jecxz
add
jo
clc
jg
cmp
xor
test
lds
cli
pushl
mov
cmp
sub
pusha
sbb
clc
adcl
inc
xor
insb
cmp
push
xor
sbb
test
xor
test
fdivr
push
lcall
sub
or
sub
sub
cmp
pop
ds
pop
add
pop
aas
hlt
test
test
inc
cld
sub
cmp
je
pop
outsb
sbbl
hlt
jecxz
sub
inc
add
pop
leave
push
xor
fiaddl
jb
cld
mov
push
lea
sbb
lcall
add
flds
ret
and
cmp
mulb
mov
loop
and
adc
das
push
lods
sub
xchg
pop
dec
mov
inc
jecxz
dec
xor
mulps
pop
jmp
mov
adcl
sub
popf
call
pop
adc
cmp
clc
lcall
cmp
mov
and
clc
add
in
push
sbb
mov
adc
pop
add
xchg
fistps
push
and
movsb
loope
xor
inc
or
cmp
out
cmp
or
jl
out
add
and
pop
nop
or
cwtl
mov
lcall
or
cmpb
mov
sub
sbb
imul
add
push
rol
sbb
in
mov
ljmp
jno
sbbb
mov
mov
xor
inc
or
arpl
inc
add
or
adc
pop
push
push
insb
adc
push
sub
decl
test
dec
add
pop
mov
ret
mov
sub
mov
subl
and
test
push
jge
or
fmull
hlt
fneni(8087
or
dec
jb
stos
adc
call
aas
or
push
adc
adc
add
cmp
pop
mov
jl
xor
or
das
jl
xchg
in
jne
push
jp
sbb
pop
imul
xor
cmp
cld
push
bound
sub
std
pop
cli
testb
pop
clc
je
push
mov
sbb
pushl
in
cmp
inc
jecxz
cli
add
and
das
sbb
jb
pop
dec
dec
sub
xor
testl
jo
xor
or
repnz
push
jge
jmp
loop
adc
add
adc
data16
sbb
mov
push
imul
xchg
jl
call
xchg
mov
insl
lcall
push
sub
or
dec
sub
xor
aam
sbb
pop
sbb
roll
jns
les
push
jg
sbb
inc
ret
hlt
inc
push
cmp
pushf
out
xchg
pop
dec
add
and
mov
sti
add
out
daa
fcoml
pop
das
adc
xorb
das
add
mov
fstpl
jns
popa
pop
aas
inc
fs
or
aas
pop
xchg
jo
jbe
cvttps2pi
push
mov
pop
mov
xchg
ss
outsb
xchg
jg
sub
sahf
data16
push
subb
fdivr
jg
pop
test
dec
dec
divb
cmp
xlat
add
or
xor
adc
insl
std
pop
test
gs
jmp
xchg
sub
sub
ljmp
lock
cld
cwtl
adc
out
push
push
jmp
push
addl
es
sbb
jmp
das
push
ret
aas
pop
sub
xchg
ficomps
mov
pop
sbb
sub
xchg
fcomps
sub
push
jae
inc
push
rolb
lcall
icebp
repz
mov
cmp
mov
mov
push
mov
inc
pop
mov
jle
std
dec
imul
add
and
int
push
mov
out
jns
femms
or
dec
incb
in
adc
dec
cld
lahf
cs
dec
call
and
popa
lahf
pop
inc
pop
pop
mov
aaa
mov
adc
cmp
pusha
xor
or
incl
mov
repnz
shrb
mov
ss
popf
or
std
adc
cmp
mov
pop
lret
mov
or
loop
das
and
es
subl
sub
pop
dec
jle
ljmp
and
ljmp
mov
test
rolb
popf
movsl
inc
mov
movsb
rorb
lods
sbb
inc
les
aaa
sub
dec
cmpsb
mov
out
pop
out
data16
adc
mov
frstor
push
sbb
cmp
inc
pop
fisttpl
add
repnz
ds
scas
outsb
jl
add
ret
mov
xchg
dec
adc
adcb
aaa
jae
push
inc
push
pop
push
inc
xor
mov
sbb
aad
dec
or
and
adc
pop
call
jae
subb
dec
idivb
xor
loopne
aaa
cmp
inc
xor
sbb
pop
dec
cmp
ret
out
cs
aas
enter
lock
inc
stc
lret
add
mov
mov
and
add
mov
hlt
scas
inc
dec
ret
jle
dec
test
cmp
cltd
cltd
inc
jle
mov
pusha
sti
daa
ss
out
cmp
jmp
rclb
jbe
dec
add
xor
js
filds
jo
jge
fisttps
dec
mov
jecxz
cmp
out
inc
fstpt
addr16
sbb
sbb
rcrb
jbe
pusha
insb
and
jns
and
je
aam
adc
mov
fidivl
nop
fstps
addr16
imul
hlt
test
add
rcrb
adc
insb
sbb
pop
xchg
push
loopne
xor
cli
dec
sti
sub
and
cmc
decl
cwtl
xlat
mov
orl
add
cli
mulb
cs
pop
call
dec
mov
js
outsl
dec
cmp
sub
pop
jp
lahf
or
ljmp
jbe
add
loopne
cmp
and
xchg
mov
adc
or
fdivr
aaa
pop
fsubrp
push
jno
orl
test
imul
dec
stc
add
adc
mov
lods
xor
adc
push
test
lods
fwait
jns
outsl
add
pop
adc
mov
std
dec
ret
aam
int
ja
aaa
das
insb
dec
adc
rcrb
es
fildl
sub
mov
mov
ss
sbb
push
movsb
or
dec
or
andl
dec
lock
mov
push
ljmp
out
incb
lock
es
out
or
fs
mov
lock
je
lock
sbb
aaa
pop
loope
repnz
push
dec
out
fcomps
adc
inc
add
in
mov
add
sub
xor
pop
aad
inc
ljmp
jp
sub
push
pop
pusha
fisttpl
arpl
push
pop
or
je
ret
mov
mov
js
fnstsw
insb
fsubrl
sbb
lret
movb
orl
mov
pop
push
add
jecxz
pop
cld
shrb
das
nop
adc
xchg
cmp
outsl
push
les
aaa
cmp
pop
rcrl
sub
rcrl
mov
or
js
ficoms
mov
jl
add
add
filds
sbb
sbb
imul
test
pusha
inc
or
add
pop
or
ficompl
loop
xchg
push
outsl
add
add
cmpsb
mov
popf
sti
dec
adc
notl
lret
test
mov
add
xor
pop
pushl
data16
dec
jae
jns
or
pop
jnp
imul
pop
fisubrs
sar
push
popa
ficomps
jl
xor
sub
pop
pop
test
adcl
mov
and
sub
ret
sbb
push
cmp
or
fistpll
inc
xchg
test
imull
in
nop
jno
cmc
jmp
push
sub
add
inc
or
jne
hlt
dec
pop
int3
aam
aaa
lock
pop
push
imul
js
xor
adc
rcl
ret
movb
test
lock
cmp
out
pop
xor
jg
xor
add
cmc
xlat
jo
add
test
cli
aaa
push
ja
push
ljmp
xchg
outsb
sbb
popf
in
loopne
or
dec
xlat
pop
inc
push
push
mov
xor
fnsave
popf
nop
test
pop
push
push
xor
mov
jmp
jg
push
repnz
pop
out
je
jg
out
jae,pn
int3
loopne
push
sbb
pop
pop
and
test
sub
jle
inc
roll
and
clc
cmpsb
jbe
enter
pop
jp
cmp
inc
or
andb
sahf
pop
xor
jg
xchg
test
bound
daa
pop
ficoml
mov
sub
sub
je
shll
je
xchg
inc
xchg
dec
jg
std
jg
outsb
jp
lock
add
in
mov
pusha
xchg
add
mov
jb
push
cmp
das
push
cs
fdivrs
dec
push
sbb
push
rcrb
add
or
jg
pop
shrl
add
cs
cmp
mov
fisttpll
sbb
sbb
pop
fidivrs
loopne
sbb
inc
or
push
das
rorl
xchg
xchg
js
dec
xchg
mov
sub
rcll
and
pushf
in
and
ret
cltd
out
push
add
fisttps
mov
and
jae
out
push
es
cmp
inc
and
sbbb
mov
stos
int
add
sbb
push
outsl
aad
sbb
iret
es
sbb
cld
ret
lret
push
adc
sti
rorl
inc
sti
imulb
jle
addb
adc
lcall
add
add
shll
dec
cmp
lods
aaa
pop
outsl
insl
and
arpl
add
std
mov
aaa
fcoms
xor
lcall
lea
dec
gs
dec
or
out
xor
ds
and
xchg
orl
in
aas
ret
and
lret
cmpsb
outsl
cmp
sahf
outsb
push
pop
imul
cmp
ljmp
inc
and
incb
test
mov
repnz
nop
xor
cmc
pop
mov
in
mov
mov
outsl
pop
mov
repnz
xor
mov
hlt
loopne
aad
mov
inc
fbstp
fdivrs
add
movsb
and
or
aaa
out
lcall
mov
dec
arpl
testl
push
das
xchg
aas
stc
ljmp
xchg
test
xor
cwtl
dec
ss
mov
jne
jl,pt
mov
add
mov
arpl
cli
mov
xlat
pop
movb
clc
jg
lret
int3
stos
hlt
into
jo
sub
xchg
loop
imul
popa
inc
stc
or
rorl
outsl
push
sti
pop
push
and
nop
ret
pop
in
push
rorb
pop
inc
push
cwtl
push
fisttps
ljmp
iret
aaa
data16
push
xor
push
ljmp
loopne
movsl
or
push
xchg
pop
js
add
clc
incl
adc
popl
jg
sub
push
add
jo
jno
lock
mov
shlb
add
push
adc
aam
mov
add
sub
sbb
sub
sbb
dec
or
sub
popf
xor
push
mov
loope
adc
jae
jns
push
rorl
repnz
xchg
lods
sbb
clc
push
pop
pop
inc
mov
fdivrl
lods
les
lret
clc
jbe
insl
inc
sbb
fs
in
cs
ljmp
loopne
jbe
jmp
mov
je
loope
fdivs
or
mov
pushf
add
outsb
xchg
jne
aam
sbb
test
pusha
sarb
push
outsl
jno
push
inc
or
imul
cmpl
pop
lret
push
sahf
inc
xchg
stc
mov
ljmp
mov
xchg
push
add
outsb
pop
clc
xchg
adc
add
lret
cmp
jle
mov
lea
rcr
fsubr
jg
loopne
mov
push
jge
rcl
idivb
cmp
lea
sub
add
inc
aaa
mov
lea
pop
xchg
test
loope
in
arpl
push
call
xchg
sbb
das
sub
out
lds
sti
adc
mov
push
loop
outsb
push
into
cmpsb
cmp
xchg
pop
sti
dec
push
cmp
or
adc
xorl
sbb
loop
dec
cwtl
cmc
add
shlb
mov
pop
sub
cli
addb
and
jp
pop
mov
pop
pop
xor
ret
fisttps
leave
and
mov
arpl
decl
adcb
inc
cwtl
das
and
cld
or
or
mov
jb
loop
pop
iret
xchg
xchg
shl
pop
sub
jno
jae
scas
fdivs
ljmp
icebp
jg
test
cmp
hlt
daa
xor
mov
lea
clc
outsl
xor
xchg
add
xchg
or
js
jge
pop
sbb
jb
fdivl
sbb
lea
ret
rcll
outsl
fcomps
stc
pusha
dec
push
pop
xchg
xchg
inc
inc
cmp
shrb
mov
std
and
mov
and
add
ss
jno
loope
movsb
test
outsb
adc
cmp
sbb
repz
repnz
cmp
call
or
repnz
dec
xchg
flds
outsl
std
or
shll
adc
sar
in
outsl
insb
test
lock
cmpsl
xor
in
pop
test
jecxz
lea
dec
sub
call
pop
or
js
push
push
pushf
cs
int
outsb
jmp
mov
pop
repnz
decl
cwtl
xchg
xchg
call
fcmovbe
mov
mov
sub
push
cld
pop
xchg
clc
in
or
mov
push
repnz
sbb
mov
ficomps
repnz
add
ficomps
or
nop
js
aaa
inc
mov
ret
imul
adc
shlb
mov
dec
pop
pop
dec
rorb
lea
sti
dec
adc
sbb
and
cs
jo
in
and
xchg
push
fadds
and
pop
add
push
jmp
testl
add
nop
push
add
dec
nop
cmpsb
movsb
scas
jmp
mov
push
adc
popf
rorb
cmp
pop
pop
pop
shll
js
adc
mov
pop
std
jo
xchg
pop
jns
mov
xorl
js
add
cli
dec
insl
pop
hlt
dec
add
jbe
cvttps2pi
pop
js
js
fisubrl
add
out
test
aas
xchg
xchg
sbb
sbb
push
xor
mov
ret
popa
cltd
xor
dec
xor
xor
xorl
add
out
add
decl
dec
push
pop
subl
push
push
inc
arpl
das
insb
add
cmp
push
jg
testb
xor
dec
cwtl
add
pop
outsb
lcall
inc
jb
in
adcb
adc
es
aas
push
insl
and
das
repz
cli
jbe
cld
js
pusha
or
lcall
sarl
pop
jmp
in
aam
sub
xchg
sar
xchg
mov
movlps
add
gs
xor
jbe
pop
jge
lcall
out
lea
jo
pop
add
jns
jp
out
mov
sbb
push
mov
insl
mov
mov
pushf
loopne
inc
fisubl
bound
dec
mov
call
test
andb
sub
add
test
movsb
sbb
mov
pusha
add
or
and
mov
cli
fwait
outsl
and
mov
std
mov
ret
andb
rolb
mov
add
adc
add
dec
outsb
fsubrl
jg
cmp
dec
sbb
das
imul
aas
lcall
pusha
dec
and
popf
adc
cmp
or
int3
fdivr
arpl
ljmp
std
cmp
out
ja
pop
pop
pop
in
fistps
mov
mov
pop
out
sbb
fs
lds
out
cs
popf
fsubrs
sarb
and
fstps
fistpll
loope
jae
loope
inc
in
mov
xchg
mov
xchg
xchg
std
decl
or
insl
add
sbb
jg
mov
je
popf
xor
mov
repnz
rclb
push
sbb
push
add
call
inc
cwtl
scas
dec
jbe
mov
or
jne
arpl
mov
push
pop
cs
cld
rolb
test
inc
jl
sub
aaa
mov
je
decl
xor
or
sub
std
cs
cmp
call
sbb
shll
dec
push
hlt
fildl
out
int3
cmc
pop
adc
add
outsb
pop
in
xchg
fdivr
jle
jmp
dec
pop
add
or
cmp
add
sub
xchg
mov
je
mov
aam
push
sbbb
jecxz
test
icebp
jg
adc
bound
add
outsb
cmp
call
mov
outsl
popf
mov
movsb
mov
sub
mov
lock
ret
lock
add
add
cmp
insb
jge
push
jle
jmp
pop
or
inc
fwait
jmp
or
pop
push
or
pusha
test
pop
cmovb
and
xchg
sbb
sub
int
xchg
neg
mov
pop
icebp
aas
rol
adcb
xor
ljmp
lcall
mov
xor
cmp
lret
sbb
pop
add
inc
cli
xor
sub
cli
inc
daa
sub
testl
cmpsb
sbb
push
ja
pop
push
dec
jg
xchg
inc
and
das
inc
or
inc
dec
and
lods
outsl
sub
icebp
dec
icebp
sub
cmp
xor
outsb
sti
stos
dec
push
loop
sbb
jge
pop
mov
sbb
pushl
jle
imul
sub
popf
rclb
ljmp
sbb
aad
inc
loope
cmc
dec
test
mov
add
push
jb
leave
dec
jo
pop
test
jg
jo
pop
push
xor
sub
sbb
out
adc
lods
fbld
push
test
inc
lods
pop
or
pop
jle
and
lock
inc
sti
out
inc
pop
jg
cltd
add
push
das
aas
stc
jo
pop
jnp
push
shr
jl
outsl
push
movsb
pop
mov
jl
mov
dec
out
jns
push
in
sub
dec
pop
clc
loop
ss
sbb
inc
stos
mov
dec
push
lock
outsl
icebp
aas
pop
pop
xorl
ljmp
lock
fs
clc
andl
cmc
mov
inc
inc
xor
sub
std
jne
enter
jle
push
mov
ret
sub
mov
or
je
pop
shl
push
xchg
and
cmp
mov
xor
rorb
imul
xchg
ljmp
pop
pop
xchg
sbb
push
xchg
ss
insb
subb
mov
popa
stos
lea
jo
push
lcall
mov
jg
jne
inc
adc
in
adc
push
lods
das
and
dec
pop
insb
add
jno
pop
jle
lcall
inc
call
or
les
nop
fwait
repnz
push
jb
sti
dec
dec
das
fs
addl
add
mov
pushf
pop
imul
lods
pop
xor
pop
pop
jle
imul
push
fs
sub
pop
jp
mov
mov
mov
scas
xor
ja,pn
jno
jg
adc
jbe
mov
mov
fistl
inc
dec
lock
rcl
bt
adc
pop
cmc
sub
test
icebp
fwait
lods
xor
lea
push
test
push
addr16
or
rolb
pop
pop
push
clc
xor
mov
jg
leave
jae
insl
insb
xor
push
cmp
pop
cwtl
jns
outsb
push
add
add
std
lcall
xor
adc
adc
push
sub
out
push
cld
mov
mov
daa
sbb
cmpb
sub
cmp
dec
add
xor
js
mov
push
inc
cmpsb
add
push
adc
sbb
lods
ret
sbb
lea
icebp
outsl
xchg
in
sub
jle
ljmp
xchg
or
or
pop
sbb
adc
mov
test
cmp
add
pop
inc
pop
xor
jmp
xchg
and
test
or
jo
dec
push
dec
out
xor
fcmovnb
or
inc
movsl
mov
fcompl
add
push
test
fdivl
test
jg
loope
inc
daa
sbb
sub
mov
sbb
pop
mov
inc
mov
icebp
lcall
sbb
mov
xor
dec
dec
jo
pop
jmp
mov
push
pop
and
xchg
lcall
pop
je
sub
ds
push
insl
push
cli
pop
lods
cld
sub
cmp
pop
pop
popa
inc
or
stc
mov
sbb
ljmp
push
adc
add
test
adc
mov
cmp
pushl
imul
pop
add
shll
call
mov
mov
pop
arpl
repz
sbb
xor
loopne
mov
cmovo
test
pop
mov
sahf
cli
in
jne
pusha
or
int3
fiadds
push
lcall
clc
pop
aaa
sub
jg
fildl
or
cmc
add
sbbl
movsl
mov
rcrb
inc
dec
add
lea
push
stos
push
dec
cld
fs
cmp
add
dec
pop
add
push
xchg
sbb
sbb
sub
cmp
mov
pop
pushf
test
push
in
pop
in
dec
sbb
cwtl
dec
mov
loope
decl
mov
xor
jg
xchg
inc
cmp
add
sub
mov
out
xlat
sbb
lcall
push
jne
xchg
ret
and
mov
sar
jo
mov
add
xchg
jge
push
rolb
dec
mov
jo
add
cmp
pop
cli
pop
js
rorb
add
movsl
and
jo
pop
aas
sub
xchg
add
cmc
xor
mov
push
add
jns
ljmp
pushf
je
popf
out
mov
inc
scas
movsl
mov
pop
clc
push
jo
dec
loopne
addb
lret
xor
out
pop
sbb
outsb
fmull
ss
ret
addr16
pop
imul
dec
lds
push
pop
and
push
xor
dec
mov
xchg
xchg
cmc
or
add
pushf
push
jl
sub
out
pushl
inc
pop
lock
bnd
sbb
in
fadds
in
sbb
xchg
test
aas
rorb
mov
mov
inc
or
out
wrmsr
cmp
cmpsb
pop
cli
cmp
mov
sbb
scas
pmulhuw
jbe
mov
dec
lcall
jbe
pop
pop
outsb
and
cmc
lea
mov
bound
add
fldt
push
cwtl
adc
mov
mov
std
fisttps
and
sub
ljmp
lahf
cld
mov
pusha
mov
mov
movsb
out
ss
sub
mov
testl
push
add
repz
call
mov
movsb
push
xorl
pop
in
and
mov
mov
das
lock
js
mov
pop
stos
or
sti
pop
xchg
jne
adcb
pop
push
fcmovu
push
decl
clc
mov
sarb
sub
fcoml
sub
test
jb
dec
lcall
push
mov
xor
sub
inc
mov
cmp
je
ljmp
pop
pop
fsubrl
pop
xchg
or
clc
mov
dec
scas
leave
sarl
xchg
add
dec
push
stos
lea
es
dec
mov
or
ficompl
mov
add
fbld
mov
push
in
out
or
or
inc
cld
or
push
pusha
int
push
fmul
incl
lret
outsb
xchg
sbb
std
notb
lcall
lret
xor
inc
in
xchg
push
or
fnsave
fisubl
mov
dec
xchg
push
stos
scas
mov
or
pop
and
push
aas
push
or
mov
cmp
mov
insl
les
cmp
push
mov
in
xor
loopne
lds
in
jg
aam
arpl
add
loope
adc
mov
enter
int3
leave
mov
movsl
sub
fwait
inc
pop
fucomip
outsl
jbe
add
xchg
push
in
es
call
insl
xor
push
jmp
stos
xor
mov
add
sbb
incb
nop
ret
sbb
aas
ljmp
adc
jp
cmpsl
pusha
push
pop
push
xchg
shrb
insb
imul
push
push
mov
jb
sub
xchg
and
loopne
jge
xor
call
pop
cmpl
repz
cmp
outsl
outsl
and
mov
nop
addb
sbb
sbb
jecxz
fs
mov
mov
pop
lock
idivb
mov
mov
pop
inc
nop
cltd
add
pushl
push
insb
lcall
lock
outsl
push
push
push
or
call
push
push
push
pop
sub
aas
xor
sub
jg
and
cmp
subl
push
sbb
mov
std
mov
aam
push
jnp
jg
xchg
ds
stc
and
add
out
mov
ret
pop
sub
ss
testl
pop
popf
pop
inc
fistl
in
xchg
pop
sbb
jb
outsb
push
sbb
call
rorb
hlt
out
arpl
add
jp
pop
out
adc
mov
cmp
rclb
loopne
dec
xchg
outsl
sub
ja
adc
out
inc
or
add
outsl
xor
jmp
cmp
mov
sar
add
sub
bound
push
sub
into
rclb
aas
mov
stos
mov
and
pop
inc
jbe
sbb
mov
sbb
and
mov
mov
in
ja
and
inc
xlat
pop
mov
pop
push
inc
bound
ja
mov
pop
inc
adc
dec
mov
cmpsl
bound
jb
sub
sbb
jmp
jg
lret
adc
pop
dec
adc
cld
es
dec
mov
push
shl
stos
movsl
jle
sbb
cmpl
add
aaa
inc
dec
inc
sbb
insl
xchg
cli
and
add
sahf
xchg
jp
pop
stos
lds
bound
insb
mov
aad
or
stc
test
in
mov
leave
sbb
sbbb
jnp
add
outsb
and
jmp
adc
lock
jle
jb
ret
mov
jbe
loope
icebp
jg
icebp
pop
sbb
sub
cmp
adc
adc
pusha
nop
inc
xor
jo
push
push
pop
test
xor
jg
rolb
cmp
pop
inc
mov
xchg
data16
stos
or
decl
add
xchg
xor
das
jecxz
adc
add
imul
lret
orb
push
pop
mov
rcl
sbb
adcb
ja
add
cli
mov
je
imul
sbb
cld
inc
and
or
test
push
insl
push
pusha
push
leave
inc
mull
pop
push
in
push
pop
dec
pop
jg
dec
je
pop
aas
jl
icebp
jg
insl
xchg
out
and
sub
cmp
add
fisubl
push
push
insl
out
roll
push
jne
pmaxub
addb
les
fcomip
xor
in
mov
cmp
pop
aaa
dec
les
add
mov
loopne
cmp
call
sbb
mov
jne
rolb
xchg
xor
das
imul
outsl
or
dec
and
or
js
cs
fcmovnu
mov
add
rcrb
xchg
movl
aam
test
jo
jno
cmc
fistps
iret
adc
adc
filds
inc
cmp
jns
push
jnp
addb
incl
mov
sbb
push
cmp
push
sbbl
aaa
push
adc
bound
or
sbb
dec
ds
add
sbb
jge
sti
sbb
xor
or
mov
pop
or
adc
lock
test
jp
loopne
inc
cmpsl
pop
fsts
rorl
inc
sbb
repnz
orl
ret
lods
ljmp
ja
pop
inc
test
hlt
adc
push
push
fdivr
pop
roll
daa
and
out
sbb
pop
mov
dec
ss
aam
xor
dec
pusha
or
cmpsb
icebp
mov
mov
pop
cmp
in
idiv
mov
add
addr16
cmp
or
out
cmp
pop
clc
adc
xchg
push
aas
cwtl
pushl
or
test
call
adc
call
test
in
and
jg
loopne
mov
icebp
cmc
jmp
in
mov
or
xchg
add
xchg
push
cmp
fdivrs
ljmp
jp
insb
xor
mov
add
add
clc
xor
dec
jne
insl
mov
loop
insl
sub
ljmp
std
jg
mov
ljmp
orb
clc
fidivrl
mov
nop
xchg
sub
push
aam
or
or
xchg
in
rcrl
jne
or
int
or
nop
fisubrs
cmc
xchg
mov
pusha
je
sub
add
xchg
push
insl
cmpsb
push
leave
int
or
add
bound
out
lock
sbb
shll
dec
in
dec
adc
push
mov
lret
mov
adc
cmp
inc
sbb
mov
push
imulb
fiadds
ja
stc
and
rcll
pop
and
incl
add
push
or
mov
popf
std
das
mov
push
cmp
insl
cld
and
test
lods
and
inc
mov
stos
jl
push
clc
pop
jmp
cmp
call
mov
adc
pop
add
mov
sbb
mov
popf
cmp
testl
push
or
insb
sub
jo
add
popa
pop
aas
nop
sub
jns
andl
pusha
mov
or
int3
loopne
mov
js
or
out
sub
stos
pop
mov
add
pop
push
push
xor
inc
mov
aaa
mov
add
in
sbb
in
je
jl
xchg
push
xchg
or
push
mov
dec
jle
xchg
lock
decl
mov
out
cwtl
mov
adc
xchg
jg
cs
lock
nop
and
push
stos
std
push
pop
and
push
xchg
add
fildll
scas
testb
pushf
add
or
andl
pop
push
inc
fldcw
jbe
std
addr16
mov
mov
ljmp
cmp
je
into
popa
add
pop
add
pop
lea
cld
jp
xchg
sbb
lds
or
mov
cli
pop
inc
sub
repnz
out
adc
dec
shlb
mov
pop
add
add
mov
adc
push
pop
or
sti
or
arpl
stos
inc
loope
clc
aas
jns
xchg
jecxz
mov
ret
mov
pop
adcl
fsubp
and
fcomp
ljmp
jbe
stc
rcrb
and
push
add
and
mov
pop
xchg
insl
adc
in
pop
test
adc
shrb
xlat
cmp
inc
cmp
cmp
push
outsb
pop
mov
lea
push
jns
sub
andb
lcall
mov
dec
cmp
ss
std
pushl
jmp
sbb
add
cs
dec
pop
andb
pusha
pop
pop
push
nop
punpckhbw
pop
adc
add
mov
xor
sub
bound
ret
push
aas
out
ljmp
sbbb
sbb
imul
sarl
andl
add
and
jle
sahf
sub
rorl
rorl
jp
cmp
pop
incb
outsb
mov
dec
or
mov
outsl
or
push
lods
pop
pusha
mov
popf
add
mov
fs
fdivr
push
cmp
fs
lret
ljmp
sbb
rorb
test
cltd
sub
and
sbb
mov
xor
adc
lods
cwtl
aam
shll
cmc
mov
lcall
lds
inc
push
sbb
dec
sti
fwait
jge
mov
int3
sbb
pusha
xchg
adc
orb
cmpb
pop
ds
mov
xchg
shlb
cmp
and
and
lock
xchg
in
jmp
lcall
cmc
xor
jnp
xchg
scas
cli
ljmp
ffree
lcall
jle
fcomi
xchg
incb
xor
cwtl
jl
clc
stc
cmp
or
decb
daa
inc
jle
leave
outsl
add
or
test
test
sbbl
pop
pusha
mov
outsl
daa
lret
lcall
shl
xorl
outsb
pop
sub
add
jmp
or
sub
dec
push
inc
inc
or
xor
in
or
rorb
ss
adc
ljmp
mov
push
popa
cld
mov
js
das
push
pop
in
je
imul
jl
cs
mov
xor
clc
leave
ja
das
mov
icebp
push
bound
sub
jbe
fldl
fistl
das
adc
sbb
add
cmp
incb
lret
push
push
push
push
jae
aad
es
sub
sbb
test
out
add
lret
inc
arpl
adc
ljmp
xchg
sbb
xchg
adc
jecxz
bound
xchg
push
repz
cmc
push
loopne
inc
adc
and
mov
mov
repnz
ss
dec
sub
addr16
dec
dec
push
or
jb
daa
pushf
idiv
push
and
dec
insb
pop
fmull
mov
jbe
sbb
lret
ds
sbb
sub
mov
add
gs
or
pop
adc
out
adc
cld
xchg
add
push
xchg
outsb
das
mov
cmp
dec
xor
negb
dec
dec
jo
out
cmovle
sti
out
push
pop
stc
loopne
sub
aaa
push
mov
add
jg
pop
fidivrl
push
orb
sbb
popf
sub
arpl
jl
sbb
cmp
jno
add
cmp
jp
or
pop
lock
es
rclb
mov
fisttps
mov
aad
ret
add
leave
test
jno
ss
inc
mov
mov
popf
xor
xor
push
pop
daa
inc
mov
inc
jo
popl
roll
aam
insl
mov
fildl
das
mov
jbe,pt
mov
aam
jg
mov
sub
pop
jo
or
push
outsl
sbb
push
sbb
cs
cmp
icebp
popa
movsb
ljmp
sub
jg
orb
decb
and
add
jl
in
loopne
xchg
out
rclb
push
lock
fsubl
pop
cmp
je
push
mov
jmp
and
cld
aaa
mov
fucomip
outsl
aaa
es
mov
jns
add
sar
ret
nop
and
push
sbbb
and
or
mov
ljmp
mov
test
test
adc
and
add
out
mov
pop
jp
and
cmp
jl
jno,pn
mov
add
idivb
push
cmp
cmpsl
jg
pusha
imul
mov
add
jl
aam
dec
cld
xor
dec
repnz
std
pop
and
fstpl
mov
fbld
push
sub
adcb
cltd
jecxz
xor
jo
add
sar
dec
cmc
jmp
dec
sub
subb
pop
push
mov
jns
fsubrl
adcb
pop
cmp
imul
xchg
add
mov
ljmp
das
lahf
cmc
mov
mov
push
repz
xchg
sahf
add
call
rcll
lea
arpl
push
in
outsl
pop
sub
push
add
sbb
xlat
push
mov
or
scas
loopne
sbb
mov
mov
sbb
sub
popf
sub
push
decl
ljmp
cmp
lcall
add
clc
popf
dec
lock
imul
cmpsb
mov
into
sub
and
mov
mov
cld
or
mov
ret
gs
sbb
mov
and
js
fistpll
mov
sbb
test
dec
ss
sub
dec
xlat
push
negl
clc
call
mov
dec
aas
xchg
insb
in
pop
clc
les
push
xchg
jge
and
inc
push
add
sub
cmc
sbbl
cmpsl
push
xchg
push
sahf
xor
into
dec
inc
cld
dec
imul
sbb
jg
out
pop
add
pop
inc
mov
test
stos
mov
mov
and
or
insl
stos
jge
fwait
loope
xchg
shlb
addr16
sub
inc
or
in
pushf
out
cmp
sti
subb
push
jg
jb
imul
and
jle
lcall
cmp
fsubr
lcall
xor
js
enter
loop
sbb
subb
adc
idiv
jmp
push
sbb
es
sbb
or
cwtl
dec
xchg
or
pop
adc
call
fcmovnbe
call
mov
insb
inc
sbb
mov
call
popa
jne
pusha
pop
push
std
xchg
pop
bound
xchg
or
aam
cld
out
mov
scas
ss
and
or
lea
decl
cmp
adc
jle
icebp
lods
outsb
mulb
sbb
scas
push
ret
pop
stos
std
ja
arpl
mov
sbb
int
xchg
loopne
ror
stc
arpl
cli
or
sub
stc
mov
mov
mov
inc
clc
cmp
jbe
ljmp
dec
out
adc
lods
xchg
xchg
pusha
cmp
or
movsl
stos
mov
jo
adc
xchg
ds
and
add
das
shrb
add
nop
nop
jl
sub
inc
mov
sub
ljmp
mov
mov
push
ret
push
decl
jge
inc
xchg
or
in
xor
xchg
or
insl
cltd
push
mull
je
add
aaa
mov
enter
mov
pushl
cmp
sub
int3
sbbb
fildll
xor
imul
push
fadds
insl
testl
and
loop
inc
bound
pop
push
lea
jbe
shlb
jne
addr16
adc
test
adc
sub
add
fbld
in
push
mov
je
outsb
inc
and
lock
inc
cmc
cs
or
push
stos
js
xchg
push
cs
lea
pop
mov
mov
lods
sub
rclb
add
mov
pop
call
push
mov
bound
lcall
or
xchg
and
fsubs
idiv
mov
lods
cmc
call
fisubl
ret
fbld
sub
xchg
lea
aaa
push
jbe
mov
dec
loop
sti
pop
aaa
mov
pop
lcall
es
push
lods
mov
mov
test
inc
xchg
sbb
dec
sbb
sbb
in
loop
jo
jg
sub
js
cmp
cmp
ds
push
loop
dec
xor
sub
test
xor
in
in
lods
pop
sar
mov
jle
sub
dec
in
adc
ljmp
add
push
mov
add
jb
add
rclb
iret
xor
out
jg
fisttpll
sbb
push
mov
out
add
insl
outsb
repz
jbe
push
jg
scas
cmp
add
or
sub
cmp
ss
inc
pop
push
orl
mov
and
fldt
fistps
or
mov
inc
cmp
sbb
push
sarb
inc
lcall
shll
push
or
in
adc
insb
jb
add
scas
or
or
pop
shrl
and
mov
data16
lock
pop
add
inc
mov
and
push
add
inc
imul
sub
mov
cmp
std
xor
test
das
xor
jmp
les
xor
and
stos
jg
movb
inc
xchg
cmp
lds
jbe
mov
mov
je
icebp
pop
jmp
sbb
xor
inc
push
xchg
mov
adc
insl
fists
loope
sbb
inc
dec
push
push
dec
adc
nop
pop
sahf
inc
pop
add
xor
cmc
arpl
subl
xchg
jns
dec
sub
sub
mov
call
add
int
pop
inc
das
sub
adc
fldt
cwtl
repnz
pop
insb
dec
mov
addr16
sbb
fimull
mov
pop
cmp
dec
xor
sub
int3
andl
adc
add
imul
pusha
cmp
sub
call
cwtl
add
adc
add
mov
jg
test
adc
ss
inc
mov
movsl
add
ss
sbb
sbb
sub
add
pop
sbb
int
inc
fs
sub
xchg
and
push
fidivl
mov
xlat
adc
jmp
mov
fdiv
cmc
xor
mov
mov
iret
add
idiv
popa
push
clc
popa
or
insl
orl
cmp
push
jle
or
xchg
in
pop
mov
jg
rcll
adc
push
jnp
or
pop
dec
sbb
add
ljmp
adcl
adc
out
into
sbb
orl
xor
adc
stos
pop
mov
xor
and
std
aad
add
out
call
add
dec
shrl
xor
outsl
ucomiss
ss
aaa
roll
pop
inc
loopne
sub
pop
mov
add
outsl
inc
xchg
cmp
push
push
jne
fcomp
lea
sbb
hlt
cld
lods
jge
jp
loop
aas
add
arpl
add
pushf
popf
adc
push
and
mov
mov
sbb
les
push
ret
movsl
movsl
ljmp
cmp
pop
dec
aam
test
sbbb
std
pop
pop
shr
inc
sub
faddl
sub
daa
lock
or
scas
cmp
jbe
mov
xchg
adc
pop
dec
add
xor
ljmp
scas
cs
das
fmull
push
push
jnp
call
inc
sahf
dec
dec
jae
repz
cmp
cli
mov
das
loopne
imul
aaa
push
xchg
ljmp
xchg
in
inc
insb
pop
int3
add
in
je
in
pop
imul
jo
or
push
outsl
in
pop
icebp
and
gs
adc
and
add
adc
fdivr
sbb
or
or
adc
dec
insl
ljmp
sub
fwait
adc
inc
xchg
aaa
and
add
test
ds
adc
dec
sub
dec
lock
enter
fdivp
sub
or
adc
sysenter
dec
sbb
or
jbe
clc
or
cmp
xchg
mulb
and
jo
ljmp
xor
popa
lock
or
ljmp
pusha
fsubrs
pop
push
add
cmp
out
loop
arpl
data16
mov
outsb
outsl
xor
clc
cmp
rcl
adc
xchg
cmp
in
fildll
mov
cltd
or
jnp
nop
pop
mov
lret
push
shll
mov
ret
test
mov
mov
lcall
lret
cmp
sub
call
mov
rcr
sar
xchg
enter
loop
pop
xor
sbb
sbb
outsl
mov
es
sbb
xchg
ljmp
imul
sbb
ljmp
decb
mov
cmp
mov
loope
sbb
xchg
in
add
push
mov
mov
push
das
push
xor
das
outsl
and
mov
mov
inc
bound
or
imul
inc
aad
fstps
jg
jl
adc
cmp
sub
xor
sbb
pop
adc
cmp
mov
mov
popf
inc
sbb
mov
xor
imul
scas
and
mov
cwtl
negb
push
jne
mov
dec
mov
or
jb
shrb
cmp
ret
add
notb
dec
push
pop
mov
mov
dec
pop
cmp
dec
js
insl
jge
std
outsl
xor
insb
loopne
in
insl
and
loopne
and
pop
outsb
repz
push
sbb
xchg
call
int3
fwait
std
shl
insl
sti
mov
add
push
mov
lds
aaa
mov
in
and
gs
inc
cmpl
loope
jns
push
dec
out
cltd
pop
adc
mov
insl
pop
call
loop
cmpsl
rolb
mov
jo
push
aaa
les
scas
out
push
xchg
or
outsl
mov
xor
loop
adc
xor
push
dec
mov
out
pop
add
pop
or
mov
mov
jmp
sbb
add
rcl
push
in
stos
ljmp
loopne
or
in
roll
icebp
lea
lods
repnz
unpckhps
jnp
add
lret
std
xchg
loop
sbb
std
mov
mov
cmpb
pop
mov
jnp
rol
push
loopne
fs
or
popf
jp
fistps
popa
xchg
adc
cmc
inc
jnp
dec
inc
xchg
inc
dec
pop
xchg
sbb
adc
jle,pt
jmp
das
xchg
lds
icebp
jg
mov
shlb
xor
xor
decl
arpl
lahf
cmc
sub
inc
adc
push
bound
loope
mov
testl
loopne
dec
in
sbb
or
adc
add
jbe
dec
jne
movsb
mov
adc
add
xchg
cmp
xor
int3
loopne
mov
sbb
pop
hlt
add
push
pusha
jno
push
push
inc
ja
fistps
fwait
adc
call
or
addr16
add
and
lds
sar
das
sub
and
mov
outsl
sbb
incl
push
clc
lcall
lock
cld
shlb
sbb
incl
pop
push
out
dec
or
lock
sub
pop
mov
push
sahf
or
add
push
jle
jg
mov
sbb
mov
inc
inc
push
push
jle
js
arpl
data16
pop
aam
cmpl
add
and
sub
in
mov
fisubrl
orl
sbb
pop
sub
popa
push
cmp
outsl
out
decl
pop
xchg
jge,pn
cld
jae
inc
dec
scas
xchg
lods
cmpb
push
xchg
outsb
sbb
xchg
push
stos
pushf
dec
hlt
lcall
movsl
push
mov
pop
pusha
ljmp
mov
push
std
adc
leave
cmp
imulb
push
test
inc
shlb
adc
loop
daa
sbb
inc
insb
gs
pop
ret
mov
or
mov
lcall
mov
arpl
or
clc
jp
loopne
push
leave
push
ljmp
or
cmp
pop
mov
jae
stc
sbbl
adc
dec
decb
lahf
jecxz
pusha
push
push
xor
sti
adc
push
into
inc
sub
in
mov
and
js
in
or
add
das
push
insl
sarl
adc
and
jb
sub
or
subb
sahf
jmp
rol
das
aam
mov
adc
dec
inc
cld
inc
dec
pop
out
xorl
cmc
mov
xchg
fidivrl
ds
push
pop
push
mov
aad
mov
pop
data16
jg
sub
repz
xchg
jo
add
sbb
push
test
jg
mov
mov
arpl
pop
clc
int
mov
mov
bound
pop
xor
psubd
jle
aad
call
int
mov
shl
divl
xchg
push
outsl
adc
cli
mov
jmp
ljmp
inc
in
push
or
xchg
int3
out
sub
incl
mov
add
dec
and
cli
xchg
mov
lock
or
add
xchg
jnp
adc
ret
and
icebp
in
and
pushf
lcall
xchg
in
imul
and
xchg
sub
dec
shr
fistps
ret
sti
dec
inc
popf
pop
fidivl
adc
test
insb
xchg
mov
fisubrl
pop
ficomps
pop
fdivr
sbb
add
xchg
jg
aas
je
clc
mov
add
mov
clc
push
sbb
es
dec
addb
mov
sub
pop
push
adc
dec
pop
ds
jg
lods
sub
cwtl
xchg
sbb
dec
lods
push
mov
test
out
jb
pop
inc
mov
pop
sbb
and
vpmadcswd
and
lret
pop
sbb
aad
pop
or
sbbb
and
pusha
and
mov
add
push
lods
cwtl
sahf
lcall
sbb
jle
pop
arpl
or
jnp
sbb
push
push
or
fadds
fsubs
or
inc
sub
daa
push
addr16
jg
popa
jmp
pop
push
cmpsb
sbb
xor
bound
aaa
inc
sbb
sub
nop
ret
clc
and
js
ss
add
mov
mov
fs
adc
cmp
sbb
add
cmp
sahf
pop
add
inc
inc
mov
gs
adcl
pop
stos
loope
push
das
add
mov
dec
mov
clc
push
xchg
push
into
stos
and
ficoms
les
mov
je
add
mov
test
push
insb
lcall
push
and
push
in
jo
mov
je
loop
ret
sub
cltd
lock
rcr
xor
daa
cmp
ljmp
lods
mov
rolb
sbb
decl
clc
bound
xchg
mov
push
cli
stos
xchg
sub
pop
mov
pusha
inc
push
loope
ss
insl
mov
pusha
addr16
pop
mov
std
sbb
fsts
mov
lret
out
push
and
outsb
out
andb
xor
std
sbb
insb
cmp
xchg
iret
mov
sbb
insb
fwait
lret
je
cmp
imul
adc
and
push
jo
jecxz
jnp
mov
call
jge
mov
pop
push
pop
pop
es
add
std
push
fidivrl
js
or
mov
sub
inc
ljmp
push
mov
pop
add
divb
insl
jo
add
mov
sub
cmp
faddl
dec
adc
sub
sub
mov
pop
sbb
mov
xchg
popa
fadds
sbb
shrb
ljmp
je
orb
push
add
dec
inc
dec
ffreep
mov
pop
inc
testb
add
cmp
stos
adc
mov
xchg
jns
ror
xor
test
cmp
sub
sbb
pop
xor
sub
mov
xor
mov
push
push
icebp
movb
movsl
mov
out
pusha
jg
dec
push
sbb
sub
jg
jle
mov
ljmp
add
xor
popa
cmp
fcmovu
push
push
pusha
outsl
dec
imul
mov
mov
push
cmp
stc
jl
cmpsb
add
dec
jl
jne
lods
cmp
and
repnz
push
aas
mov
adcl
or
das
inc
or
push
icebp
or
lea
xor
mov
nop
fists
hlt
call
inc
dec
jnp
sub
add
call
sbb
sbb
push
xchg
pop
add
add
lds
lret
or
jae
or
rolb
stos
rcl
mov
dec
add
int
sub
pop
pushl
jl
mov
cmp
test
add
dec
decb
lea
gs
cmp
lcall
in
ds
and
insl
xor
jmp
adc
repz
or
dec
push
lods
in
pop
sbb
push
pop
lret
cmp
cld
push
dec
shl
mov
ret
mov
cld
push
and
jg
rclb
dec
jge
xor
mov
pop
aad
aam
movsl
or
aam
push
pop
push
push
sbb
adc
add
add
inc
cltd
je
daa
mov
jb
pop
xchg
jl
mov
bound
addr16
lcall
lea
test
add
adc
out
jecxz
add
mov
sbb
cmp
cltd
push
xorb
je,pt
add
insl
je
inc
js
inc
push
pop
das
cmp
xor
das
fsub
sti
xor
mov
cltd
pop
sbb
dec
xor
pop
sbb
xor
xor
dec
inc
add
lods
repz
push
std
test
adc
loop
int3
adc
fcomps
jg
cwtl
aas
adc
or
jecxz
add
sub
or
mov
or
subb
decb
lcall
mov
repnz
lods
inc
pusha
shrl
add
in
in
push
fsubrl
sbb
lcall
lds
jnp
cs
daa
je,pt
hlt
cmp
repz
pop
ret
jle
add
das
xchg
ds
pop
hlt
decl
mov
sbb
or
leave
pushl
cli
nop
inc
add
pop
clc
xor
add
stos
rcl
inc
das
mov
inc
sti
popl
in
push
movsb
adc
and
adc
lcall
js
ss
adc
push
adc
shrb
inc
decl
shll
pop
jo
add
outsb
hlt
inc
cmp
iret
or
jl
xchg
adc
lock
adc
cmp
adc
jb
lock
sbb
nop
hlt
movsl
xchg
push
pusha
xchg
lret
or
fwait
mov
inc
out
xor
fimuls
add
sbb
test
adc
or
sbb
mov
adc
xchg
sar
push
cwtl
inc
cmp
aas
jo
pop
fdivp
clc
popl
xor
jns
and
mov
cmpb
fistl
mov
push
push
imul
lock
testb
push
dec
pop
jno
mov
call
inc
mov
jg
dec
sahf
or
and
adc
push
std
or
outsl
jp
or
roll
dec
cmp
ljmp
inc
iret
pop
pop
dec
gs
push
es
mov
xor
jae
pop
lock
hlt
pop
dec
xor
push
adc
mov
mov
dec
mov
jne
jne
cld
mov
adc
pop
and
imul
std
fidivs
bound
lock
adc
nop
popf
mov
lcall
lcall
cmpsl
cmp
inc
pop
fcoms
cmp
jns
es
fwait
mov
movsl
es
shll
je
xchg
mov
dec
xorb
ljmp
jb
adc
aas
push
push
pop
sbb
jbe
or
xchg
outsl
sub
dec
adc
aaa
pop
jb
dec
inc
push
das
stos
icebp
jg
push
loop
insb
add
sbb
shlb
or
inc
cmp
xor
addr16
inc
bnd
fnstsw
decl
lcall
pushl
imul
add
shlb
cmc
and
imul
out
xchg
ret
cmp
fwait
add
cld
lea
jle
jle
sbb
imul
ljmp
pop
divb
xchg
mov
cmc
cwtl
icebp
pusha
pop
adc
inc
in
dec
add
fildl
xchg
mov
pop
out
mov
xchg
das
sub
xchg
push
fs
adc
push
mov
cld
mov
ljmp
push
jg
mov
pop
or
lcall
jle
mov
lret
jmp
insb
in
pop
insb
pop
nop
not
lods
leave
pop
fs
adc
pop
push
call
je
dec
xor
rorl
jb
data16
or
pop
outsb
push
add
aad
cmp
sahf
sbbl
frstpm(287
out
cmp
sbb
subl
sbb
adc
cs
rcll
cmp
das
psubsb
jmp
movsb
sub
or
std
pop
jl
imul
pushf
sbb
or
outsl
aad
cs
xchg
and
outsl
icebp
adc
mov
mov
push
enter
cld
decl
dec
lahf
add
pop
push
inc
adcl
mov
push
jne
push
cwtl
rcrb
sbb
xor
std
ljmp
int3
mov
add
dec
es
insb
mov
cmp
xor
and
lods
rolb
or
xchg
ja
cmp
repz
test
inc
mov
inc
jo
and
cmp
loope
push
clc
aaa
cli
pop
pop
xchg
loopne
mov
sbb
pop
adc
loopne
insl
dec
decl
mov
cs
mov
pop
xchg
cmp
inc
cmpsb
repnz
pop
cli
fists
fadds
loopne,pn
cmovs
mov
push
es
bound
pop
inc
mov
xchg
push
dec
lahf
stmxcsr
jp
in
mov
lcall
pop
adc
orl
dec
cmc
push
xor
lret
and
or
jae
add
add
add
lods
lahf
push
cmp
push
repz
clc
push
adc
add
orb
pop
add
cmpsl
packsswb
lods
sar
mov
insl
adc
cmp
inc
movsl
fadds
je
mov
vpmullw
mov
call
fstl
xchg
int3
mov
or
rcrb
mov
push
cmp
xor
outsb
daa
mov
outsl
jno
push
push
shll
pusha
xchg
mov
lretw
out
add
inc
add
push
add
sub
clc
inc
out
pop
pop
adc
test
jne
mov
repnz
aas
push
add
cli
mov
addb
mov
nop
cwtl
jae
sarb
push
xchg
xchg
adc
push
sbb
aam
pushf
in
sahf
push
and
ja
dec
add
jo
pusha
popf
push
rcr
pop
jp
jg
pop
mov
jb
mov
es
nop
addr16
das
lock
pop
mov
jns
je
in
popa
and
call
and
lret
jle
mov
insl
jg
pop
fildl
adc
mov
sbb
mov
or
dec
in
testl
outsb
out
mov
jmp
xchg
push
mov
decb
jae
lahf
pop
or
mov
inc
xor
push
ret
mov
lods
push
xchg
xchg
outsb
mov
outsl
sub
dec
push
xor
rcrl
sub
outsl
mov
pop
inc
pop
cmc
rorb
jbe
push
push
outsb
pop
inc
inc
nop
lcall
adc
inc
add
and
std
push
lcall
loopne
mov
std
mov
add
enter
or
inc
gs
cli
aaa
sub
insl
xor
clc
fwait
pop
outsb
fildl
mov
flds
dec
pop
push
mov
jecxz
pop
test
jbe
cmpsb
outsl
aas
push
jge
fidivrs
loopne
pop
add
ljmp
int3
stc
push
pop
and
test
in
insb
lock
add
rorb
dec
inc
das
xor
xchg
jae
push
and
sahf
arpl
jne
cmp
xchg
insb
add
inc
mov
test
jg
sub
sbb
sub
or
dec
rcrl
pusha
les
push
fsubs
pop
cmp
in
xchg
sahf
add
push
or
mov
mov
dec
call
inc
leave
arpl
pushl
push
aad
adc
clc
jmp
jge
mov
adc
or
adc
push
pop
test
adc
mov
test
push
fidivl
inc
and
push
lahf
or
mov
push
enter
sbb
out
mov
imul
lret
cmc
pop
ret
fistl
mov
sub
pop
push
pop
rcll
int3
lahf
mov
outsl
int3
pop
iret
addl
inc
pop
adc
call
or
ror
or
decl
js
cwtl
dec
mul
jo
push
rol
test
es
lods
fldt
sub
mov
adc
add
inc
std
sub
pop
cltd
inc
pop
test
data16
xor
leave
jbe
jecxz
xor
jg
data16
xor
dec
inc
cs
dec
xor
mov
push
add
or
mov
sbb
jne
out
mov
filds
push
enter
insb
adc
or
sti
test
mov
add
and
cs
inc
cs
mov
orb
add
jno
mov
in
push
sti
fldt
or
ret
aam
adc
or
mulb
sbb
add
or
push
fiaddl
sub
insl
jmp
mov
sbb
lock
jae
dec
loopne
adc
dec
arpl
sub
mov
jae
test
push
cmp
push
fwait
xchg
rol
lock
clc
jbe
test
sub
pop
cwtl
incb
pop
adc
jnp
adc
aam
fucomp
mov
mov
xchg
roll
push
xchg
out
and
sar
adc
xor
cmp
and
jo
ljmp
jp
sbb
leave
push
gs
aas
out
push
pop
add
es
or
fildl
jnp
push
xchg
inc
fists
sar
das
in
inc
addl
in
call
xor
pushl
or
arpl
add
push
sbb
mov
loope
std
pop
xor
and
outsl
inc
cmp
aas
fld
sti
call
add
arpl
adc
mov
jno
in
mov
addr16
inc
pop
pop
cli
jmp
sbb
ds
mov
jl
ja
or
push
shrl
pop
test
adcl
sbb
mov
in
add
je
mov
inc
sub
outsb
mov
or
ljmp
jmp
jne
jno
push
orb
push
xchg
subb
add
pop
cmp
dec
or
das
out
add
gs
or
pop
popf
push
jg
dec
adcb
test
mov
push
cmp
rorl
add
dec
stos
xchg
jno
cmp
inc
dec
adcb
test
aaa
push
push
jg
mov
sub
pop
enter
call
mov
push
xor
rcl
pop
loop
xor
sti
addr16
cmc
pushl
or
push
std
mov
mov
sbb
fstpl
push
mov
cli
daa
xchg
orb
test
call
inc
push
imul
movsl
push
pushw
jnp
shl
rcl
out
inc
pop
pop
push
cltd
out
cs
push
decl
or
xchg
das
xchg
icebp
int3
ficoml
shl
ljmp
repnz
adc
sub
stos
pop
imul
ss
mov
in
shll
xchg
mov
push
inc
cli
insl
test
inc
mov
fwait
jbe
fistps
daa
arpl
mov
cmp
sub
jno,pt
insl
add
ja
adc
cwtl
cmp
xor
imul
mov
jmp
jnp
pop
test
sbb
xchg
loope
xchg
and
nop
int3
sbb
dec
dec
pop
push
outsb
jmp
dec
inc
xorb
cmp
push
pop
in
fwait
test
dec
sahf
fsubs
arpl
incl
push
stc
sti
or
mov
imul
push
mov
jge
out
push
mov
js
adc
jmp
add
mov
and
jne
pop
pusha
sbb
lods
idiv
pop
jbe
arpl
dec
mov
xor
lock
push
adc
push
ret
and
das
add
or
jae
add
fistl
push
rdmsr
add
loop
dec
int
and
jl
push
xchg
ss
xor
push
mov
cmpsl
bound
push
jae
xchg
arpl
ret
das
add
pop
out
syscall
aaa
ljmp
xchg
mov
ds
jge
xor
lret
adc
push
ss
aas
sub
addb
push
add
lcall
js
call
cs
sub
addl
call
ret
mov
cmp
loopne
sarb
sti
jl
push
pop
and
daa
or
add
cs
cld
fdivr
call
adc
ljmp
xor
xchg
es
ds
aam
xchg
add
aaa
shr
or
jmp
or
clc
insb
aaa
and
add
cmp
and
xor
aas
add
in
and
loop
test
popa
pop
push
adc
xchg
xchg
mov
push
adcl
or
rcrl
push
cmp
test
arpl
pop
push
xor
jg
mov
test
xor
call
inc
cmp
xchg
clc
fsubrl
jo
xor
mov
insl
call
and
sahf
ss
dec
stos
mov
dec
sbb
sbb
or
stc
ljmp
add
pop
cltd
es
sbb
adc
inc
clc
mov
jge
and
or
ret
sub
aam
jle
inc
jg
inc
jbe
lds
mov
je
popf
notb
mov
sub
cli
jnp
jmp
inc
jo
and
aam
pop
inc
icebp
pop
popa
mov
pop
add
fildll
or
sub
into
dec
pop
adc
sbb
adc
mov
lcall
mov
push
icebp
sbb
jo
jl
outsl
sub
pushf
xor
ret
subb
mov
push
dec
test
cwtl
int
xchg
xchg
pop
fldt
jne
pop
ud1
and
cli
push
pop
inc
xor
in
xchg
fsubrs
ljmp
insb
cld
add
dec
sub
in
lock
fstpt
lds
cmp
std
mov
push
repz
mov
inc
int3
xor
add
popf
inc
fildl
lret
aaa
outsl
add
mov
xchg
jne
mov
xor
pop
test
cmpl
cmp
mov
push
cmp
ja
dec
mov
jns
mov
enter
push
inc
jg
mov
loope
adcl
bound
push
xor
cmp
inc
pop
jb
lcall
adc
mov
inc
xrelease
fsubrl
sbb
popf
or
ss
push
adcl
sub
int3
pushf
xchg
add
icebp
dec
xor
add
pusha
mov
mov
adc
add
clc
push
jl
call
cmp
ss
push
inc
cmp
dec
es
push
or
and
in
imul
std
inc
outsl
jo
xor
inc
jno
daa
bound
xchg
clc
scas
loopne
je
or
cmp
stos
loopne
xchg
push
out
add
pop
jae
or
jge
jl
dec
nop
dec
pop
jl
dec
hlt
jl
dec
psrad
pop
jle
pop
roll
pop
in
adc
test
outsb
insb
fdivrl
inc
push
insl
testb
addr16
movsb
or
xchg
xchg
sub
incl
popa
ss
rolb
dec
mov
push
inc
sar
insl
fisttps
xor
jmp
mov
ficoml
mov
repz
push
lcall
divl
cltd
out
or
or
test
aad
out
mov
push
xchg
push
out
leave
idiv
push
lea
outsb
add
loope
ds
incl
push
out
mov
outsl
outsl
imul
fiaddl
pop
popa
or
xchg
sti
sbb
aad
sbb
sub
lods
les
xorl
jg
movsl
pushl
cmp
loopne
sbb
iret
mov
jbe
insl
cld
mov
js
or
jle
je
jl
and
mov
and
stc
imul
or
add
adc
sbb
jg
int
push
jo
push
dec
fsubs
lock
sbb
push
mov
outsl
pop
nop
nop
dec
rolb
sub
sbb
cli
jg
inc
sub
push
sub
nop
mov
sar
sub
jg
addb
in
or
mov
mov
hlt
dec
loop
pop
push
shll
shlb
sbb
push
push
sub
ret
inc
fprem1
inc
sub
bound
fsubrs
lcall
add
or
push
jo
fistl
and
mov
dec
ret
aad
out
es
insl
orl
xchg
push
gs
xchg
and
lret
les
in
ljmp
loopne
xchg
mov
out
cmp
sar
push
and
in
into
rorl
out
fbstp
lock
mov
loopne
or
or
push
and
ljmp
movsl
jecxz
add
push
lock
mov
push
push
hlt
outsl
insl
pop
incl
insl
push
add
aas
pop
xchg
adcb
sbbb
mov
inc
xchg
inc
imul
push
movsl
push
push
subb
incb
scas
stos
or
cmpb
ret
movups
jmp
add
inc
arpl
aad
outsl
push
rolb
and
adc
push
pop
repz
pop
clc
pushl
add
add
push
jmp
sbb
bound
or
adc
decl
mov
dec
sub
data16
ret
popl
inc
or
lods
aas
and
or
outsb
inc
xchg
lock
clc
xorb
xchg
pop
and
jle
adc
cmp
cli
pop
in
mov
jbe
mov
or
and
add
decb
loopne
pop
cmp
in
idiv
sbb
shrb
lcall
cli
jmp
adc
fcoml
and
fsubrs
aas
jecxz
jnp
cld
sub
repnz
and
pop
inc
loopne
jo
xor
inc
movsl
data16
sbb
icebp
inc
ljmp
add
cwtl
bound
xchg
je
stc
xchg
xor
and
icebp
ret
sbb
int3
push
pusha
mov
push
aaa
aam
scas
rolb
or
dec
jo
nop
fwait
cmpb
clc
sbb
xchg
xor
ret
mov
lds
inc
iret
adc
lods
pushaw
or
jge
pop
rcrb
std
icebp
cs
ret
pop
inc
jne
in
mov
cmpsl
lods
sub
xor
dec
repnz
push
or
je
add
addr16
jg
and
imul
sbb
xchg
cmp
or
outsb
jne
sub
push
stos
add
xor
sub
push
es
outsl
adc
push
dec
cmpsl
testb
aad
adc
add
loopne
push
inc
loope
xor
jno
jns
in
pusha
insb
sbb
push
pusha
js
jge
mov
cltd
adc
jle
fbstp
imul
push
mulb
or
cmp
sub
sbb
adc
pop
push
fmul
inc
sti
in
or
subl
popa
lea
incb
pushf
and
in
xchg
or
fidivrl
aas
or
in
push
cmp
ret
xor
pusha
arpl
push
inc
lock
or
popa
mov
incl
popa
and
mov
and
push
idivb
push
imul
fs
scas
shrl
push
out
aas
pop
jnp
dec
push
filds
add
or
incb
or
inc
mov
ret
sarb
cwtl
cwtl
test
or
pop
test
cmp
ja
int
pusha
and
sub
ljmp
mov
adc
mov
js
sbb
imul
outsl
hlt
insb
out
cmp
pop
adc
push
mov
push
cmp
das
mov
test
jmp
outsl
inc
dec
int
sub
sbb
inc
adc
xchg
add
cmpsl
adc
pop
add
mov
push
cld
cmpb
icebp
jnp
sbb
inc
and
jbe
cmp
fdivrs
push
aad
cld
xor
xchg
mov
xchg
das
xchg
pmulhuw
sbbb
push
rolb
jmp
cmp
fbstp
xchg
ficoms
and
and
icebp
adc
in
mov
xchg
sbbb
arpl
mov
add
les
add
cld
dec
pop
fdivr
jg
div
cmpsl
cs
pop
xchg
aaa
aam
bound
jo
ja
fcoml
ja
sbb
lea
mov
dec
iret
loopne
cwtl
insl
loopne
arpl
outsl
or
jb
mov
xor
arpl
dec
jg
pop
fadd
adc
and
lods
fdivr
mov
inc
adc
dec
testl
test
pop
lods
mov
call
shl
jb
mov
fimuls
mov
add
ds
mov
inc
mov
mov
jle
addr16
outsl
les
jecxz
call
shrl
adc
mov
or
insl
out
jp
ljmp
inc
in
xchg
pusha
mov
jne
and
ret
pop
push
cmp
push
decb
xchg
push
sub
in
xchg
dec
cmp
in
mov
mov
mov
push
out
test
xchg
nop
add
shlb
mov
aaa
insl
jecxz
mov
cmp
jb
push
adc
mov
adc
xchg
fadds
mov
jae
add
lds
sbb
ss
sbb
out
xor
xor
mov
pushl
shrb
xchg
mov
call
stc
inc
fstpl
aam
cs
add
addb
mov
in
out
xchg
push
mov
xor
push
inc
sti
adc
inc
aaa
stos
orl
dec
push
mov
fcomi
add
pop
rcr
mov
and
idiv
jo
push
arpl
add
xor
outsl
jmp
adc
mov
lcall
pushl
sbb
or
sbb
cltd
add
pushl
pop
cmp
pop
jmp
pop
pop
test
in
inc
and
add
push
xchg
stc
pop
insl
lock
cld
loop
mov
sbb
addb
pusha
jmp
and
jmp
add
mov
sbb
pop
jp
loop
jbe
push
arpl
aaa
pop
inc
mov
sub
movsl
fwait
add
dec
xchg
decb
js
add
data16
ss
or
clc
out
data16
sub
sbb
cmc
lea
repnz
int3
dec
fldenv
push
sbb
pop
jg
lea
sbb
xchg
push
outsl
mov
mov
cltd
push
mov
inc
sbb
cmp
popa
mov
dec
dec
rorb
cmp
lahf
movsb
ja
ljmp
loop
pusha
inc
sti
xchg
arpl
ds
insb
xchg
outsb
decl
in
and
lea
inc
push
cmp
ret
jg
cmp
jns
and
insb
sub
ss
inc
adc
jg
sbb
pusha
cmp
out
call
mov
subl
call
stos
adc
insb
sub
lahf
fistpl
mov
lock
inc
clc
pop
pop
xchg
fisubl
xor
jb
lcall
dec
ret
pushl
add
ja
mov
sbb
add
push
call
call
mov
jg
jo
lea
data16
or
hlt
arpl
es
mov
pop
dec
xorl
xorb
push
decl
ffreep
cltd
inc
bnd
inc
popa
or
mov
dec
rcr
loopne
data16
or
push
ss
and
imulb
xchg
add
aas
xlat
mov
jno
ljmp
daa
pusha
iret
pusha
out
jle
clc
dec
mov
aaa
mov
lcall
mov
add
push
inc
fs
mov
es
xorb
pop
pop
orl
sti
test
inc
sbbb
push
jbe
jg
movsl
adc
cwtl
push
ret
jbe
mov
aaa
mov
gs
addb
xor
and
jg
xor
sub
or
fcomip
lcall
xchg
jp
ljmp
sub
imul
add
jg
fidivs
icebp
andl
mov
loopne
scas
inc
adc
jnp
mov
stos
or
pushf
sti
aas
outsl
dec
iret
or
fadds
cmp
stos
cmp
fwait
pop
loopne
xchg
push
sub
xorb
sbb
orb
sbb
outsl
mov
sbb
mov
adc
shll
call
adcb
pop
sub
idiv
or
sbb
pop
or
sub
das
mov
inc
or
and
mov
sbb
mov
movsl
pop
insb
add
pop
jb
xchg
mov
pop
filds
push
and
lcall
push
pop
dec
lea
mov
dec
popa
stos
jbe
outsb
jl
or
push
imul
pop
cmp
xchg
sarb
repz
insb
cs
jno
cs
mov
jg
stos
cld
xchg
pop
test
nop
mov
and
adc
gs
adc
mov
cli
lcall
xor
call
lea
jns
dec
add
lea
in
or
add
pop
push
jno
add
or
xchg
lock
sub
sar
sbb
outsl
mov
pop
cld
mov
cmp
dec
sub
add
adc
xchg
dec
dec
inc
xchg
rorb
adc
sbb
popf
jnp
xor
xor
sbb
sub
les
mov
mov
jp
add
lock
outsl
push
fdivr
popa
mov
mov
mull
sub
incl
and
je
sub
outsb
jbe
decl
dec
pop
pop
leave
jge
bound
aad
sbb
adc
add
cmp
pusha
push
xorb
repz
mov
jmp
mov
dec
push
aas
add
sub
cs
adc
mov
adc
pop
jo
mov
jbe
xchg
arpl
insb
sub
sbb
and
addr16
mov
test
cmpb
lahf
mov
lods
or
pop
stc
das
and
jae
sti
movsl
ds
sub
pop
imul
add
in
mov
call
cmp
shll
sub
or
mulb
jnp
divl
incl
movsl
xchg
das
inc
pusha
clc
jg
push
out
add
shrb
cli
cmpsl
fstps
hlt
push
add
lock
dec
outsl
xchg
dec
pop
popl
add
adc
std
aad
cmp
pop
jmp
es
call
popf
nop
jne
imul
sarl
push
push
sub
lds
push
mov
fmuls
adcl
dec
incb
pop
fdiv
mov
mov
jp
pop
adc
sbb
stos
insb
and
pop
mov
or
push
std
shrb
jae
inc
lock
add
push
lods
push
dec
jl
loopne
ja
and
inc
adc
push
jmp
mov
es
fwait
lea
insb
repz
imulb
and
xchg
lcall
insl
ja
mov
mov
add
in
sbb
mov
push
adc
inc
dec
les
dec
sub
cmc
pop
add
pop
add
lods
mov
xchg
clc
xchg
push
bound
inc
leave
pop
inc
add
or
inc
lcall
fs
or
jbe
mov
push
mov
shlb
aaa
jmp
aaa
decb
in
popa
push
xor
jp
pop
or
sub
lcall
jge
push
clc
jmp
mov
and
mov
xchg
clc
call
js
jmp
inc
cmc
xor
test
sub
clc
call
ds
loop
dec
jmp
sbb
jno
dec
scas
loopne
pop
int
jns
daa
mov
ficoml
sub
loopne
mov
lret
pop
mov
fildll
xchg
popa
scas
movsb
rolb
push
or
cmp
incl
dec
add
xchg
clc
lock
lock
cmp
sbb
adc
push
ficompl
hlt
mov
inc
xor
hlt
movsl
fidivs
pop
int
int
addb
decl
mov
cs
push
clc
pop
jg
in
orb
cmp
jne
mov
std
and
jp
jne
outsl
push
fbstp
ja
mov
add
add
jp
xor
pop
dec
ljmp
mov
pop
add
xchg
stos
outsl
lods
push
loopne
pextrw
inc
daa
pop
in
fwait
movsb
stos
mov
orps
cmp
das
mov
pushl
stos
add
adc
jle
add
rolb
in
orb
in
or
jle
sub
xor
clc
mov
xchg
jnp
sub
adc
mov
cmp
mov
lcall
add
mov
adc
nop
jno
insl
jae
jo
or
js
adcl
jmp
enter
icebp
jmp
cli
jne
jns
jne
cs
call
inc
push
pop
cmc
cmp
adc
mov
shll
or
push
or
xchg
xor
pop
mov
sub
xor
insb
cmp
or
jno
ret
cmp
shlb
outsl
inc
jecxz
lcall
adc
clc
lods
mov
or
cld
lcall
pusha
mov
add
mov
and
xor
repnz
andl
decl
mov
fsubr
push
lds
arpl
mov
sbb
push
stos
rolb
dec
icebp
popf
and
jno
and
sub
ret
rclb
and
sub
das
insl
mov
cmp
pop
jae
js
jl
add
rcrb
testb
xchg
rorl
dec
and
fldcw
addb
fs
stos
sarb
jo
sbb
aad
inc
push
outsb
repnz
sub
push
sub
add
or
jb
in
mov
ret
loopne
xchg
daa
fisubrs
repnz
xor
leave
dec
push
addl
sbb
incl
popf
jl
sbbb
pop
mov
notb
and
jl
int3
sbb
add
pushf
xor
add
ja
dec
jle
aaa
add
sti
ret
add
lods
ret
xor
sbb
mov
or
insb
push
insb
insb
jne
fld
add
inc
mov
pop
pop
addr16
shll
subb
sbbb
cmp
add
ret
bound
popa
sbbl
fidivrl
sub
test
ret
iret
xchg
loopne
and
std
aaa
cli
push
ja
out
sub
or
push
sub
inc
and
bound
dec
mov
cli
inc
pop
add
mov
sarb
jbe
incl
dec
xchg
cmp
mov
pop
loop
push
mov
cwtl
xor
in
push
and
pop
mov
add
jge
xchg
push
je
pop
loop
sub
fwait
add
inc
pop
mov
mov
fnstsw
xchg
movsb
sbb
add
rolb
and
dec
and
sbb
lahf
mov
shlb
mov
scas
mov
dec
repz
gs
mov
pushl
outsb
adc
add
andb
test
aaa
outsl
push
les
sbb
jne
mov
dec
sub
fildll
xor
leave
sub
dec
jo
sub
cmpsl
aam
cmp
mov
push
xor
add
cs
sub
repnz
pop
cmp
ds
inc
daa
mov
jo
outsb
and
movsl
imul
lcall
adc
pxor
sti
aaa
jle
addb
mov
mov
dec
sbbl
insl
enter
mov
add
dec
popa
and
push
std
adc
lods
out
or
push
fisttps
pop
xor
push
nop
cs
xchg
push
lods
adc
inc
insb
mov
test
adc
inc
mov
daa
orb
adc
cmp
jge
std
adc
insb
push
cmp
adc
in
push
outsl
sbb
leave
push
pop
test
js
lods
and
or
loope
mov
jne
frndint
add
jge
call
mov
push
xor
jecxz
mov
pushf
imul
cmp
mov
lds
outsl
mov
push
mov
icebp
test
sub
pop
mov
sub
out
popf
xlat
mov
inc
push
push
push
imul
cmp
sub
inc
cmp
jne
or
xor
mov
fistpll
imul
push
ret
add
into
push
cmp
sar
lods
rol
scas
popa
mov
mov
loope
and
das
adc
ljmp
loope
insl
call
ljmp
jl
loopne
shlb
les
and
xchg
mov
notl
leave
dec
cmp
mov
in
mov
std
scas
inc
jmp
or
cmp
lcall
mov
test
sti
mov
pop
jae
pop
jl
add
mov
adc
in
mov
sbb
cmovle
cmp
fldt
incb
lods
xor
int3
mov
xchg
hlt
cmp
inc
mov
push
test
xchg
sub
adc
xchg
cmc
stc
xor
loope
ret
aas
or
pusha
mov
sub
mov
mov
ja
mov
and
xchg
cmp
cmp
inc
pop
movsb
add
xchg
stos
outsl
mov
push
push
xor
imul
mov
in
std
aad
mov
dec
shll
nop
inc
add
mov
inc
lret
cmp
push
int
adc
inc
aaa
decb
pop
mov
cmp
dec
sub
aas
mov
data16
lret
jo
cmp
mov
pop
repz
mov
sub
pushf
cmp
mov
fs
dec
xchg
adc
in
outsl
outsl
es
leave
loope
loop
aam
and
pop
loop
pop
scas
mov
mov
or
in
insb
cmp
dec
push
ja
cmp
mov
mov
cmp
mov
dec
adc
rcll
or
decl
inc
pop
and
xchg
add
icebp
mov
cli
add
jge
push
in
and
push
incl
fistl
add
shlb
sahf
daa
popl
stos
mov
pop
dec
push
in
and
mov
shrb
sbb
ljmp
lret
daa
jge
mov
pop
stos
aas
dec
std
jg
xor
mov
gs
pop
xor
mov
test
std
mov
jmp
lea
outsb
call
outsl
cld
lods
push
insb
jb
push
aas
scas
or
add
lock
jg
in
inc
popa
aam
jns
cld
pop
adc
clc
fldt
icebp
cli
sub
lcall
ss
mov
jp
add
fbld
aaa
aam
stc
das
pushf
dec
js
sub
inc
das
push
and
xor
shr
sti
jp
shll
xchg
test
sbb
out
in
or
or
rcll
gs
add
mov
mov
lret
pusha
loopne
add
add
xor
subl
pop
inc
mov
pop
rol
mov
aam
ja
es
fimuls
mov
adc
pop
xor
stc
lock
and
cld
pushl
push
jae
call
sbb
insb
push
xchg
fmuls
insb
daa
add
mov
iret
jmp
aad
shlb
pop
andb
pop
xchg
sbb
pop
sbb
imulb
inc
ljmp
adc
pop
stos
pop
xchg
dec
inc
outsl
in
mov
cmp
mov
jg
adc
sbb
inc
cs
jg
fcomip
or
loopne
jno
xor
lods
incb
cli
call
rol
mov
or
mov
add
sarb
adc
jo
lret
and
or
rclb
sub
loopne
dec
push
cmpsl
mov
jbe
inc
fiadds
push
daa
push
outsl
mov
push
or
test
insl
mov
cmp
add
data16
stos
cli
mov
or
adc
push
fsubrp
cwtl
pop
cmp
repz
mov
fs
cmp
adc
cmp
xchg
or
fsubr
lret
fimuls
pop
fsubrs
mov
mov
hlt
or
sub
mov
lcall
sbb
adc
rorb
or
insl
sub
testl
mov
cs
cmp
cmp
and
push
test
cmp
int
fcoml
mov
shl
dec
stos
outsl
hlt
sub
cli
push
mov
xor
loopne
jg
sub
cmp
loopne
xchg
dec
pushl
push
data16
or
sub
add
cs
mov
add
mov
adc
sar
or
pusha
and
jl
rclb
ljmp
cltd
imul
mulb
sub
call
mov
pop
incb
daa
imul
cltd
lret
cmp
inc
in
sub
mov
shrb
and
stos
add
outsl
mov
mov
inc
stc
rcrb
loop
cld
fucomp
pop
and
psubw
test
loop
adc
push
sbbl
adc
fildl
dec
dec
or
and
movsl
mov
lods
lea
test
sub
add
jp
and
out
xchg
arpl
sbbb
test
sub
pop
mov
jne
xchg
pop
sti
dec
insb
or
xor
ja
std
and
pop
and
mov
add
push
pop
mov
fiadds
insb
ret
aaa
cli
mov
leave
lcall
insb
adc
jno
pop
or
push
push
es
mov
mov
ljmp
inc
imul
or
test
dec
pop
pop
xchg
lock
sbb
pushl
push
mov
inc
adc
incl
push
xchg
lcall
cmpl
xchg
pop
fsubp
shlb
dec
out
out
push
sub
call
cwtl
cld
lods
roll
orb
adc
ret
mov
call
xor
loopne
mov
xchg
and
and
jo
std
jmp
add
dec
repz
mov
out
push
or
adc
jns
xor
jns
loopne
pop
loope
pop
cmp
inc
insl
fnstsw
dec
orl
test
mulb
sbbb
sub
popf
in
std
pusha
popa
jecxz
outsb
inc
mov
xor
jne
mov
push
in
mov
fistps
scas
in
add
pop
cmovns
daa
inc
dec
ret
loope
push
dec
ja
lds
in
outsl
mov
jmp
movsb
scas
add
xchg
dec
ss
pusha
inc
ret
inc
in
jle
pop
test
test
push
lods
std
ja
dec
xchg
inc
mov
idivb
push
in
add
orb
cld
call
push
bound
ja
inc
pop
add
outsl
pushl
nop
repz
mov
jns
inc
lds
pop
dec
daa
cs
inc
push
mov
cwtl
jae
shlb
cmp
test
sub
bound
push
push
in
data16
mov
pop
jno
push
add
stos
push
jnp
pop
sahf
cmp
mov
mov
dec
pop
out
adc
ljmp
or
add
xchg
std
push
imul
lods
test
cmp
mov
imul
mov
adc
addr16
fisttps
pop
push
adc
pusha
imul
inc
cltd
add
xorb
inc
pop
and
fidivs
cs
inc
call
mov
pause
inc
and
in
add
fnstsw
adc
pop
push
les
sub
jns
aaa
jp
mov
popf
popa
sbb
push
push
loopne
sbb
das
test
sbb
hlt
inc
popf
xor
pop
jo
mov
sub
or
sub
pushf
push
jmp
mov
push
lahf
cmp
sub
cmp
sbb
and
dec
pusha
ja
xchg
icebp
roll
stos
test
lods
xchg
outsl
ret
lcall
mov
dec
stc
dec
pop
test
sub
jae
add
jg
cmpsl
push
xor
xor
push
jecxz
imul
out
cs
ja
xchg
inc
mov
cs
push
add
cmp
dec
inc
push
test
xor
pop
add
add
jl
jp
nop
sbb
ljmp
push
xchg
pop
xchg
pop
jb
sub
dec
addr16
pop
call
sbb
and
add
push
lock
jne
add
cmp
dec
mov
pop
cmp
pop
imul
or
std
outsl
movsl
cmp
dec
or
adc
rcr
es
mov
mov
dec
pop
xchg
mov
idiv
mov
lcall
add
cmp
fldt
je
aad
jg
loop
sbb
sbb
das
ds
and
testb
cmp
loopne
jne
pop
shll
sti
jg
pop
xor
gs
cmp
cmp
inc
in
stc
mov
testb
cmp
loope
fsts
inc
jo
cmp
mov
and
or
and
ja
in
adc
jge
enter
incl
xchg
pop
cmpb
add
repnz
daa
insb
sub
sbb
push
stc
aam
mov
outsl
xor
cmp
enter
idiv
pop
sbb
jp
xor
add
jb
das
mov
test
lds
sub
jbe
test
lds
push
mov
test
xorb
mov
xchg
xchg
mov
mov
clc
jg
test
sbb
shr
inc
add
or
add
push
xchg
clc
add
mov
ds
sbb
add
sub
sbb
add
addr16
push
jmp
scas
adc
call
adc
pop
push
cmp
dec
enter
gs
sub
decl
sbb
mov
adc
pop
jns
mov
jg
sbb
dec
sbb
sbb
push
js
mov
xor
jg
ss
pop
loopne
popf
xor
ret
adc
jle
adc
incl
xor
outsl
imul
xor
lcall
cmpsl
pop
jo
cmp
xchg
add
jno
push
outsb
and
cs
pusha
fildl
add
inc
mov
subb
add
dec
xchg
mov
lret
lcall
loope
loope
les
add
insl
imul
bound
adc
cmp
mov
clc
inc
decl
pop
cmp
divb
jnp
addl
xorb
jg
xchg
and
add
std
ret
inc
ret
lret
push
ljmp
fldcw
add
outsb
pop
jne
mov
push
add
ret
jo
sbbl
lods
sub
cmp
jle
inc
ss
rorb
adc
add
pop
pop
xlat
cld
js
jbe
call
jnp
aam
clc
das
xor
xor
dec
jl
addr16
or
mov
inc
imul
idivb
add
imul
add
ja
icebp
movl
sbb
jno
mov
or
push
jle
mov
daa
stc
mov
idiv
decl
sub
xor
stos
dec
add
jmp
aam
lea
add
into
dec
adc
push
or
incb
jle
and
arpl
mov
push
push
mov
out
fs
inc
xor
enter
test
mov
add
sbb
add
mov
std
cmp
xchg
mov
test
nop
fsubrs
push
mov
mov
dec
daa
in
add
mov
push
andps
adc
mull
pusha
xchg
outsl
sub
inc
mov
out
inc
sub
xchg
jb
jne
sub
mov
ret
int
enter
fidivs
xor
mov
and
fistpll
in
jg
aaa
cmp
das
mov
pop
clc
jg
outsl
fadd
mov
xchg
mov
pop
call
and
mov
mov
pusha
loop
insb
inc
cmp
or
xor
sub
sub
sub
ljmp
fwait
mov
or
sub
test
adc
aas
mov
ss
mov
jo
call
aam
jns
les
sahf
loopne
nop
xchg
push
add
inc
mov
xlat
inc
and
icebp
popa
jecxz
shlb
xchg
cmpl
cwtl
imul
faddl
idiv
pop
xchg
jge
jmp
outsl
lock
test
or
arpl
out
adc
cmp
adc
dec
mov
repz
lret
dec
jnp
loope
int3
inc
push
and
add
push
push
loope
dec
in
push
sbb
mov
aaa
jmp
add
dec
push
ret
pushf
mov
stos
xchg
pinsrw
ret
xor
call
sub
loopne
dec
dec
out
cs
mov
stc
filds
clc
fs
lahf
mov
xor
loop
ljmp
dec
mov
pop
fcoms
inc
push
jae
dec
dec
pop
xchg
push
nop
std
loopne
push
nop
mov
push
push
or
add
jg
lods
test
jns
subb
mov
cld
shlb
pusha
movsl
aas
inc
mov
mov
and
shrl
in
mov
fstpt
pop
lods
push
psubw
cli
cmp
inc
loope
or
or
mov
xorb
and
or
mov
and
sub
orl
lods
mov
dec
mov
inc
or
inc
shl
cmp
xor
pop
jno
nop
jbe
insb
sbb
push
jecxz
mov
pusha
inc
rcrb
jl
jg
xor
add
dec
xchg
out
sbb
xor
jmp
ja
adcb
nop
je
ljmp
jo
adc
add
mov
ja
std
push
out
xor
dec
lods
loop
clc
lcall
add
sar
addr16
sub
shlb
repnz
or
inc
sti
in
loopne
imul
ss
icebp
push
push
xchg
std
lock
lds
dec
ret
xchg
dec
sbb
out
clc
mov
repnz
or
xor
aaa
add
fs
je
lods
or
cmp
pop
jo
popf
orb
cwtl
cli
pop
and
mov
or
jmp
shl
mov
rcrb
sbb
or
or
call
inc
push
lea
ret
push
sub
dec
lods
and
pop
pop
pusha
cli
mov
sub
or
lret
divl
aas
cmc
xor
cmp
add
sbb
adc
inc
loopne
lahf
je
in
and
das
test
and
pop
xorb
xor
or
xchg
sub
pop
std
in
mov
and
outsl
xor
xor
outsb
incl
xchg
xchg
adc
inc
pop
or
daa
stc
jmp
ret
fldl
fidivrs
ja
or
sar
movsl
mov
jo
pop
pop
fsubs
adc
pop
mov
inc
rcl
inc
adc
xchg
nop
pushl
pop
pop
mov
adc
jns
outsl
pop
clc
xchg
pop
cmp
xchg
and
adc
mov
adc
stos
je
aaa
push
ss
bound
insl
mov
xchg
filds
push
shll
in
call
sub
shlb
cs
inc
sbb
fcomi
sbb
imul
out
adc
and
push
call
or
inc
pop
pop
or
dec
jbe
std
decl
inc
test
xorl
pop
pusha
cmc
push
or
sahf
lret
xlat
das
fcmovne
repnz
mov
pop
pusha
push
jg
das
mov
dec
jge
dec
pop
xchg
xorb
ljmp
add
test
xchg
fcmovb
outsl
push
cli
mov
ret
mov
fwait
or
jg
fidivrl
shrb
dec
inc
insl
jo
out
push
inc
add
push
nop
dec
lcall
mov
mov
push
xchg
pop
xor
jb
test
add
rorb
ror
div
mov
xchg
cmc
mov
fistl
push
inc
inc
pop
imul
add
je
addb
es
out
xchg
dec
pop
cmp
cmp
cmp
cmp
popa
and
sbb
les
inc
pop
sbb
outsl
and
push
push
rorl
or
in
insb
add
inc
jbe
ficomps
sti
ljmp
add
out
sbb
add
adc
or
adc
in
lcall
pop
mov
push
test
dec
dec
xchg
or
xchg
mov
cmp
mov
push
sbb
fdivl
cmp
cld
aas
push
push
push
fdivr
js
mov
sti
out
pop
add
xchg
in
lcall
outsb
js
push
add
jmp
inc
and
jno
imul
or
adc
sub
orb
inc
outsb
xor
xor
dec
mul
pop
cmc
incl
push
ja
push
leave
push
movsl
fistl
int3
sbb
and
pusha
aad
and
shlb
stc
pop
out
negb
adc
push
fldenv
mov
inc
push
add
and
std
jg
cmp
inc
test
add
shlb
aaa
lock
mov
lds
or
mov
cmovbe
stos
clc
jmp
push
xchg
add
pop
incl
push
inc
or
cmpsb
adcb
adc
pop
mov
mov
in
iret
add
cmp
fld
pop
mov
or
lods
jle
stos
fwait
mov
push
mov
add
cmp
std
ss
inc
jl
and
into
cmc
shll
add
push
pushl
dec
loope
dec
push
xor
xchg
adcl
inc
xchg
mov
jg
clc
es
not
adc
shl
xor
jae
std
mov
arpl
add
dec
pop
loopne
push
jp
add
das
pop
push
xchg
mov
add
dec
pop
adc
lods
cmp
mov
cmpsl
pop
add
mov
pusha
push
jns
lock
push
dec
popa
jb
popa
cmc
cmp
aas
xor
xor
jmp
pusha
push
sbb
pop
pop
xor
fists
sub
stos
pop
lcall
insb
mov
or
out
lock
pushl
mov
imul
lods
lock
jg
int3
loope
sbb
das
push
scas
add
jp
and
adc
fildl
sub
dec
push
xlat
jg
outsl
or
enter
adc
mov
jl
cmp
add
push
incb
adc
fnstsw
sbb
pusha
mov
orb
mov
sbb
jb
outsb
pop
jge
sub
stos
nop
popf
sub
pop
fisubrl
loope
cmp
fldt
fdivrl
cmpb
adc
sub
xorl
fisttps
jb
or
mov
sbb
mov
pushl
insl
and
or
jl
mov
pop
and
shlb
dec
add
incl
addr16
push
xchg
or
sti
pusha
jb
mov
adc
mov
push
sub
pcmpeqb
push
xchg
loopne
ret
dec
cli
pop
fiaddl
aaa
jecxz
pop
lock
and
jno
mov
stos
inc
ret
cmp
xchg
push
call
ret
mov
popf
push
and
or
imul
adc
inc
or
mov
ss
mov
clc
mov
add
pop
inc
pop
xor
fcmovnb
xchg
adc
mov
jnp
inc
adc
adc
addb
adc
cld
xor
or
imul
xlat
pop
lahf
in
decl
out
imul
pop
inc
int
xor
fstpl
fidivs
push
inc
test
insb
insl
shrb
insl
adc
lahf
testl
insb
rcl
cmp
push
iret
mov
jmp
xor
andl
std
or
out
pop
mov
sub
pop
incl
dec
jno
push
push
test
sub
push
aas
dec
ret
jbe
mov
sbb
cmpsb
aad
insl
and
shlb
clc
xlat
in
sub
stc
adc
data16
or
fisttps
xor
sbb
add
and
js
loopne
inc
push
add
push
jg
inc
add
es
outsl
sbb
in
sub
push
mov
xor
pop
mov
gs
ret
adcb
add
das
pop
aam
adc
pushl
dec
cmp
negb
sub
test
or
add
pushf
inc
pop
mov
lds
sub
inc
dec
lods
jmp
mov
fimull
dec
push
loopne
in
add
loopne
pop
xchg
cmpl
mov
inc
dec
addb
pop
popf
out
sti
aam
sbb
test
dec
les
adc
push
jb
pop
imul
int3
aam
ljmp
or
fisubrl
xor
std
pop
cmp
ret
push
and
lock
cmpsl
xor
jmp
cwtl
lret
dec
andl
fisubrs
xchg
mov
mov
inc
movsb
or
xor
call
and
xchg
jge
sub
lods
popf
inc
enter
sbb
das
icebp
push
movsl
and
mov
sbb
jmp
add
popa
sahf
xchg
push
xchg
std
push
sbb
loopne
jg
adc
std
sub
push
popa
and
sbb
mov
xor
add
fisttpll
inc
xchg
xchg
pushl
mov
js
add
pop
icebp
faddl
jg
push
mov
xor
xor
outsl
pop
add
aas
push
mov
rcr
push
add
sbb
mov
out
test
jmp
jl
clc
pop
adc
mov
mov
jae
lea
fdivs
push
or
mov
sub
decb
lock
lock
daa
pop
testl
adc
insl
dec
outsl
idiv
pop
or
add
adc
dec
sbb
add
adc
stc
rorb
dec
sbb
adc
or
pushf
mov
in
ljmp
and
fcomip
mov
push
inc
insb
jae
xchg
sbb
mov
movsl
dec
xor
ljmp
nop
pushf
dec
clc
ret
fildl
xor
pusha
mov
mov
daa
adc
cs
sub
pushl
jo
sub
cmp
adc
cmp
push
negb
jg
in
insl
cmp
fsubs
cmp
xor
movsl
pop
lock
sub
sub
mov
pop
mov
aad
je
mov
jecxz
pop
sbb
pop
int3
push
cmp
loop
jo
fcompl
lcall
inc
xchg
or
push
add
dec
dec
push
jle
adc
cld
outsl
and
pop
stos
mov
mov
push
push
orb
jo
sbb
insb
mov
pop
pop
dec
cmpb
aas
dec
add
in
ret
or
mov
mov
mov
push
lahf
ljmp
lcall
sub
push
lcall
xor
rolb
out
popf
test
loope
filds
lret
mov
mov
push
xchg
sbb
jo
inc
and
out
cld
inc
outsl
or
mov
loopne
mov
or
pop
test
mov
add
jnp
xchg
adcb
push
fnstenv
in
pushl
xor
and
pop
pop
pusha
push
xchg
add
das
leave
loope
mov
xchg
cs
jae
addr16
fadds
dec
xor
pop
xorb
ljmp
dec
pop
in
mov
dec
pop
mov
es
xor
mov
leave
push
lods
lea
and
mov
mov
sbb
dec
and
xchg
es
or
testb
mov
xor
rorb
aad
or
popa
or
add
mov
pop
popa
pop
and
sbb
sbb
mov
fistl
push
je
inc
cld
fstl
add
mov
mov
fadds
test
add
lea
sbb
inc
out
cmp
jecxz
lea
inc
cmp
xchg
xchg
cmp
inc
movsl
pop
stos
mov
test
sbb
daa
cmp
scas
sub
out
rol
test
or
in
xor
loope
lods
xor
add
pop
xchg
pop
jmp
cmpsb
shlb
notl
pop
subl
ljmp
popl
ds
push
mov
pop
pop
push
sbb
xor
fs
sbb
xchg
mov
and
aad
jl
or
or
sbb
push
pop
and
xchg
pop
lods
call
dec
or
mov
pop
sub
gs
fiaddl
nop
insl
jg
adc
sub
and
pop
xor
jecxz
or
imul
jnp
imul
jg
outsl
lahf
adc
mov
into
add
clc
mov
inc
mov
sbb
loop
in
push
subb
int3
mov
jne
mov
sub
hlt
dec
sbb
add
incl
jne
inc
andl
jo
hlt
popf
imul
outsl
ljmp
inc
stos
in
pop
and
mov
fnstcw
pop
inc
ljmp
lcall
cmp
inc
fcoml
push
or
sbb
sahf
xor
jae
xchg
scas
jo
icebp
mov
cmp
subb
into
loope
push
sbb
ljmp
adc
nop
push
fisubrl
and
jle
adc
lock
in
add
movsl
sbb
sub
idiv
push
or
push
fdivrl
ljmp
adc
incl
xor
insb
pop
jge
mov
mov
loopne
mov
imul
enter
mov
inc
std
xlat
add
rorb
sub
mov
pop
sub
nop
outsb
jb
cld
decl
xchg
cmp
dec
pop
cs
or
arpl
xbegin
mov
les
dec
inc
xorl
addr16
fiadds
lahf
clc
call
or
aad
jle
popf
sbbb
add
push
outsb
fists
frstor
dec
jecxz
lea
fucomip
sbbb
cltd
cmc
jp
psadbw
aad
insl
add
ret
jle
clc
or
inc
int3
outsl
test
jae
mov
lds
cmp
decl
gs
popa
leave
adc
push
clc
jg
adc
repnz
adc
add
pop
pop
adc
ds
nop
test
mov
fisubrs
mov
mov
loop
aas
pop
cmp
fdivrl
and
jg
add
adc
sub
and
cmp
repz
clc
call
jg
pop
arpl
add
xchg
cli
sar
roll
inc
mov
xlat
pop
push
xor
das
dec
lock
adc
sub
outsl
or
inc
aaa
pusha
outsl
test
lret
pop
inc
cmpxchg
jg
std
push
add
cltd
sarb
jbe
add
out
pop
scas
test
and
or
ss
insb
mov
mov
jle
push
or
stc
and
sub
insl
mov
sbb
ret
push
mov
fistpll
push
inc
pop
push
jns
movzwl
dec
push
cmp
dec
sahf
addr16
fildl
cmpsb
push
inc
add
add
pop
mov
xchg
loop
inc
inc
push
bound
adc
int
inc
xchg
push
cli
cs
pop
and
insl
adc
adc
xor
push
mov
sbb
jnp
pop
pop
outsl
mov
sub
pop
and
or
rcrl
fdivl
jle
push
loope
xor
daa
aas
mov
jl
pop
adc
and
inc
shll
pushf
sbb
mov
addr16
pop
xor
sbb
mov
aaa
pop
test
add
icebp
movb
ds
lea
test
inc
sub
jg
cli
mov
rolb
pop
jle
and
mov
mov
add
pusha
xor
pop
repnz
loopne
sbb
aaa
and
pop
stos
das
and
jmp
cmp
aas
add
lock
jg
fsts
adcb
add
js
mov
fidivl
mov
pop
int3
insl
add
outsb
hlt
or
or
jnp
mov
add
mov
inc
out
adc
mov
sub
jmp
pop
and
xchg
xor
and
dec
or
aam
shlb
xchg
inc
adc
xchg
inc
sub
cltd
push
movsb
cwtl
and
xchg
clc
inc
test
add
sbb
and
repnz
xor
inc
cmp
sbb
fcmovnbe
mov
mov
sub
mov
xor
in
push
pop
push
loop
sub
int3
ficoms
xor
mov
push
sbb
loopne
das
cmpsl
pop
sahf
sub
ss
jg
sub
imul
insb
and
xchg
popf
es
adc
scas
and
jge
mov
jns
jae
add
xchg
test
sahf
pop
push
pop
jp
mov
jmp
inc
aas
ret
jnp
pop
pop
cltd
insb
pusha
sbb
mov
push
xchg
pop
ss
aas
fwait
popa
add
or
or
fidivs
push
or
je
or
xchg
pslld
dec
add
std
stos
add
sub
sub
repnz
sbb
dec
adcl
ljmp
xchg
mov
inc
jl
packsswb
shlb
push
shrb
pop
pop
sub
shlb
pusha
xor
jb
sbb
clc
fbstp
push
xchg
inc
pop
mov
cmp
stos
dec
inc
cmpsb
sub
aam
je
jne
mov
mov
cltd
add
pop
ljmp
pop
cli
and
mov
cltd
mov
fiaddl
mov
aas
lock
rolb
repz
aaa
or
std
mov
or
xchg
xor
pop
mov
outsl
lock
ret
add
or
mov
add
xor
ss
sar
outsl
outsb
sbb
push
adc
nop
push
or
jg
js
pop
pop
mov
mov
or
aaa
add
mov
jne
pop
out
inc
dec
data16
jg
outsl
or
movb
mov
add
or
fwait
loope
insb
push
sub
mov
add
sub
add
push
add
sti
adc
je
pop
and
lcall
push
outsb
mov
inc
xor
mov
sub
movsl
add
push
or
sub
std
mov
xor
in
leave
sub
add
push
dec
cmp
sbb
sarb
rorl
ret
mov
jo
insl
add
aam
notb
add
pop
shrb
pop
cli
aas
mov
dec
out
jp
xchg
inc
jle
ds
cmpl
mov
xchg
rep
mov
icebp
mov
idiv
push
cmc
and
adc
movsb
pusha
negl
fs
std
inc
sub
hlt
and
insl
call
jne
jns,pt
cmp
fcom
jmp
jo
push
in
push
cld
push
sbb
sub
fwait
mov
mov
movsl
fisttpl
sub
std
ret
int3
pop
pop
push
ja
lock
or
pop
sar
xchg
sbb
call
xchg
mov
dec
js
lret
rcll
je
push
pop
push
fdivrl
sbb
push
hlt
sti
jl
out
mov
ja
add
add
fs
testb
mov
cs
or
dec
xor
pop
adc
mov
stc
sub
push
mov
testl
pop
mov
mov
fwait
jae
je
dec
dec
inc
jge
lcall
lods
call
add
cmp
jle
push
sub
or
orb
insl
and
pop
mov
insb
push
add
orl
mov
jbe
xchg
subb
lcall
push
and
outsl
jl
or
fcomps
add
fisubrs
inc
dec
outsl
push
xor
pop
js
fnsave
rcrl
add
incl
stc
ljmp
out
or
add
mov
testb
inc
or
push
clc
ljmp
inc
mov
or
adc
push
add
mov
mov
ja
and
add
push
pop
ret
adc
out
mov
dec
inc
cs
or
outsb
hlt
lcall
push
dec
push
push
sbb
mov
repnz
push
sbb
add
gs
mov
inc
pop
inc
pop
push
clc
pop
cmpsb
test
sbb
out
xor
scas
mov
mov
pop
and
jge
sbb
sbb
and
add
push
out
jns
pop
pusha
fldt
sub
pop
sub
ljmp
fcomi
sbbl
pusha
pop
test
and
xchg
and
mov
in
xchg
cmpsb
jle
sub
cmpl
jae
push
scas
fbstp
and
pop
and
lcall
xor
pop
cmp
inc
mov
push
fidivrs
sbb
and
adc
mov
cwtl
sti
xchg
cmp
aad
push
call
idiv
das
or
inc
jb
xor
adc
or
add
inc
imul
jmp
jae
rol
inc
ljmp
sub
mov
and
mov
or
xchg
and
rclb
mov
cld
insb
inc
push
push
pop
ret
sbb
push
push
pmaxub
shll
sbb
out
pushl
loopne
ljmp
lahf
lcall
mov
lea
xor
inc
test
cmp
repz
and
xor
or
xchg
lock
and
das
dec
adc
test
jg
add
andb
add
mov
addb
ss
pop
in
jne
push
jmp
rclb
ja
mov
in
xor
jns
mov
jnp
cmp
ret
insb
pop
sbb
push
sub
add
or
cwtl
lret
out
mov
fldt
mov
in
push
arpl
cmp
jl
ret
cmp
adc
push
daa
cmp
jbe
sti
clc
pop
push
mov
inc
jns
insl
mov
insl
lea
repnz
pop
repz
movb
mov
xchg
enter
mov
cmp
popf
fsubrs
or
jp
sub
mov
push
ja
rcrb
mov
mov
fisubrl
add
outsb
sbbl
xor
popf
inc
lds
pop
adc
add
call
decl
ss
cmc
cli
mov
sbb
add
jae
lret
popf
lret
pop
sbb
or
aas
adc
add
sbb
push
sar
sbb
mov
nop
stc
dec
or
js
xor
pop
fnstenv
mov
cmp
mov
inc
addr16
push
or
in
and
mov
adc
xchg
inc
add
pop
fildl
dec
or
int
fst
test
shlb
loope
fisttps
mov
std
jg
insl
out
ljmp
dec
ss
or
jo
sub
push
and
ljmp
adc
sbb
repz
xchg
push
inc
ljmp
in
xchg
ficompl
ljmp
insb
sub
test
adc
jmp
or
inc
arpl
jge
jmp
pop
mov
xchg
jl
mov
lcall
jnp
cmp
icebp
daa
xchg
push
cmpsl
test
mov
cmp
or
pusha
imul
push
mov
fimuls
pop
push
sahf
outsb
add
sub
ljmp
dec
xchg
in
inc
sbb
adc
fildl
outsl
addl
lahf
cs
push
out
jb
push
jne
out
loopne
pop
mov
push
cs
lock
jbe
add
pop
add
adc
inc
cmp
nop
xchg
cmp
ja
andb
sub
aaa
push
mov
push
sub
push
and
add
mov
mov
or
test
call
push
pop
pusha
inc
inc
mov
and
dec
fildl
inc
cmp
jl
fcoml
dec
pushf
clc
adc
insb
mov
or
adc
and
jne
in
sbb
ljmp
sbb
add
xchg
mov
lcall
inc
add
ret
mov
add
cli
nop
cmp
add
cmp
mov
pop
stos
pushl
repz
lea
lock
in
pop
leave
jle
add
sti
shlb
sbb
adcb
ror
lds
pop
mov
mov
out
xchg
adc
les
push
std
jp
cmp
call
xor
jmp
icebp
pushl
cmp
sbb
imul
xchg
inc
sub
cmp
lds
xor
and
dec
sbb
or
sbb
test
mov
mov
call
sub
cld
xor
sar
aaa
lods
pop
setbe
sbb
dec
add
js
aas
pop
pushf
mov
test
xor
dec
sbb
mov
test
adc
mov
in
ss
jp
sar
dec
lret
xchg
das
pop
pop
pop
and
xor
pop
inc
ja
test
xchg
and
lods
inc
cmp
aas
pop
and
sub
push
add
fsts
int3
fisttps
adc
clc
fwait
add
adc
icebp
lcall
lea
lahf
repnz
lcall
cmp
stos
hlt
pop
push
loopne
pop
icebp
mov
xor
cmp
jo
pop
push
ret
pop
out
or
jg
inc
sqrtps
or
jno
or
adc
mov
mov
push
movsb
cmp
daa
add
push
loope
leave
sub
cmpl
ret
pusha
mov
jne
mov
and
sbb
incb
push
sarl
ja
xchg
inc
ja
lahf
fwait
daa
add
rcr
xchg
fmull
test
push
xchg
pop
and
incb
call
in
push
inc
sub
pop
xor
ja
addr16
aaa
adcl
and
mov
jbe
pop
jbe
aas
aas
popf
shrb
pusha
cmp
repnz
push
pop
das
mov
mov
pop
push
pusha
adc
mov
sbb
push
mov
fsubr
dec
inc
push
jne
jmp
or
fistps
test
and
push
and
insb
mov
push
shll
dec
dec
je
push
arpl
cmp
adc
add
sbb
sub
add
sbb
mov
js
rolb
ljmp
or
mov
xchg
fisubrl
push
dec
popa
mull
mov
sub
loopne
push
dec
xchg
and
jmp
mov
jle
std
fistps
sbb
add
sub
push
or
repz
ret
mov
test
movsl
inc
sti
jb
lahf
aad
push
popf
inc
fbld
icebp
xor
and
mov
jle
pop
arpl
push
cwtl
das
push
mov
outsb
or
jbe
sub
fs
sub
jl
dec
iret
push
das
outsb
fs
jae
ds
es
movb
mov
rclb
sbb
hlt
inc
sub
and
push
sub
icebp
call
mov
cs
scas
push
sahf
fstl
sti
ljmp
scas
scas
dec
inc
inc
cmp
push
fwait
dec
sbb
dec
push
adc
or
aaa
adc
xor
daa
inc
adc
lsl
xchg
cli
lods
dec
mov
cld
insl
pop
outsb
hlt
inc
adc
pop
or
sub
imul
in
push
aas
or
inc
push
mov
inc
lods
clc
lcall
cmp
pop
shrb
or
das
sahf
fistl
xorb
ret
pop
ja
and
sub
jp
push
mov
jmp
lcall
lock
jecxz
add
aaa
mov
add
lcall
scas
sub
ret
rolb
scas
mov
je
movsl
lods
lock
sub
push
aaa
cmp
xchg
cltd
cmpsl
aad
clc
ljmp
xor
add
clc
in
test
xor
mov
xchg
jo
out
pop
jecxz
test
xor
bound
mov
or
push
and
fwait
negl
push
daa
cmp
addr16
mov
add
aad
into
mov
cmp
ret
pop
xchg
rclb
fstl
into
cwtl
and
lods
pushl
out
aaa
add
lahf
push
loopne
sbb
lods
push
hlt
pushl
cmp
jns
subb
repz
outsl
cmc
lret
push
xor
dec
adc
dec
add
sbb
inc
insl
fiaddl
dec
sahf
xor
adc
insl
push
sbb
aad
lods
sub
push
sub
cld
add
mov
xor
mov
lea
filds
jle
mov
into
and
shll
push
mov
xor
adc
dec
adc
call
out
daa
inc
push
jae
sbb
xchg
push
dec
scas
dec
dec
outsb
pop
aam
mov
mov
mov
add
mov
lcall
out
xchg
mov
add
es
aas
icebp
pop
ljmp
inc
jae
das
sub
arpl
dec
add
pop
xor
outsb
pop
std
pop
xchg
cmc
cmp
enter
push
sub
sub
inc
add
sub
push
rorl
cltd
and
call
cmc
iret
cmpsb
ja
add
adc
or
inc
mov
mov
pop
pop
test
sbb
push
imul
adc
pop
mov
mov
test
or
xor
insl
dec
call
inc
push
js
pushf
cmp
test
pop
and
ja
lods
cmp
xor
jo
mov
in
das
mov
fcmovu
push
cmp
pop
cwtl
cltd
and
outsl
lea
mov
push
test
arpl
int3
ljmp
xor
loop
xchg
jge
pop
pop
xorl
es
imul
cwtl
inc
push
add
jae
adc
push
lods
lcall
sti
lods
pushl
push
sahf
push
push
cs
and
inc
xor
clc
data16
push
sub
push
jg
fimull
int3
stos
insl
sbb
dec
push
ds
ja
adc
imul
rorb
push
inc
movsb
clc
add
aaa
adc
outsb
or
mov
mov
dec
and
jp
test
and
test
dec
sbb
loop
dec
cld
xor
jg
mov
pop
dec
lods
mov
or
and
fcmovnbe
jmp
adc
js
cltd
push
mov
loopne
pop
in
lock
cmp
add
mov
push
out
push
inc
data16
add
orb
repnz
mov
pop
stos
xchg
fisubs
xchg
cli
or
ret
sbb
repnz
add
xor
mov
aad
mov
cmpsb
outsl
mov
xor
mov
xchg
jne
xchg
lods
jmp
adc
cmp
pop
js
daa
nop
xchg
xorb
aaa
sarb
fbstp
or
out
inc
mov
sub
sbb
or
jge
push
sub
adc
lea
jnp
push
mov
outsl
sub
jbe
insl
addb
movsl
sbb
movsb
scas
call
jbe,pn
mov
bound
adc
or
subl
or
outsl
out
in
ljmp
je
nop
jg
push
or
std
rolb
inc
fcmovnu
or
divb
movsb
gs
push
nop
or
push
repnz
mov
shlb
inc
or
je
test
int3
lock
xor
xchg
shlb
sahf
jne
incl
scas
jecxz
mov
call
add
adc
imul
dec
mov
sub
subb
dec
dec
std
mov
popf
dec
xor
or
jg
dec
add
repnz
pop
add
push
int3
pop
clc
mov
or
nop
out
mov
add
sub
fists
jecxz
bound
and
push
sbb
xor
lret
mov
mov
test
push
push
pop
mov
cli
decl
popa
ret
ret
push
or
pop
push
push
pop
hlt
ljmp
fcoml
push
test
nop
xchg
test
sbb
cwtl
inc
js
sti
push
cmp
xor
jmp
inc
loope
push
mov
push
js
cs
shr
decl
dec
inc
pusha
jnp
dec
dec
aas
lds
pop
jl
push
cli
cmc
ja
js
sti
js
push
aam
or
cmc
fcmovnu
fildll
sbb
mov
mov
stos
jge
jmp
popf
push
mov
add
push
addl
dec
xchg
cs
add
push
dec
xchg
dec
rcr
adcl
cmp
push
loope
test
cmp
mov
xor
dec
scas
pop
mov
in
in
das
push
inc
or
adc
jg
add
jnp
popa
arpl
dec
cld
lcall
inc
notb
les
push
pop
adc
inc
add
sub
rcll
adc
fcoms
adc
clc
push
add
xchg
push
fbstp
dec
cmp
push
clc
push
push
xchg
pop
mov
or
scas
nop
scas
and
pop
adc
mov
bnd
push
add
push
imul
mov
and
lahf
popa
insl
mov
test
adc
lock
xchg
fdecstp
push
jg
out
lds
push
sbb
push
clc
loopne
add
lds
add
lods
push
or
jecxz
or
push
sub
ja
jae
pop
call
dec
daa
ret
mov
mov
lock
push
mov
pop
xchg
lea
fidivs
add
scas
js
cmc
jmp
outsl
pop
call
dec
es
mov
flds
inc
add
cmc
fs
push
push
push
push
mov
jb
stos
cli
push
imulb
loope
test
enter
andb
xchg
popf
bound
jmp
outsl
xchg
sbb
cmovne
int
insb
daa
les
inc
bound
cmp
mov
nop
cmp
imul
lock
dec
pop
or
push
imul
mov
and
add
outsb
mov
pusha
popa
mov
shll
add
inc
or
pusha
loop
ds
das
xchg
mov
xchg
cmpsl
and
data16
pop
inc
pop
loopne
sub
imul
inc
jmp
lds
inc
pop
in
pop
mov
out
pop
rolb
cmp
ljmp
insb
inc
and
lret
dec
aaa
mov
fbld
jns
add
aam
inc
mov
jns
insl
iret
repnz
sub
push
lds
xchg
dec
fldl
dec
and
arpl
sbb
movsl
jecxz
and
aad
std
jg
or
orb
add
jmp
cli
in
ret
jnp
int3
popf
xchg
outsb
jae
or
adc
ret
add
pop
outsl
rclb
int
dec
mov
or
fwait
and
pop
mov
inc
mov
pusha
add
mov
imul
or
imul
inc
lcall
pop
adcb
push
add
faddl
jmp
sub
add
or
pop
pusha
and
push
imul
hlt
push
add
cmpb
ljmp
push
cld
mov
shrl
jnp
pop
jae
jge
mov
pop
fimuls
loope
fsubl
mov
sub
push
out
mov
dec
sar
push
roll
data16
bound
fbld
dec
iret
inc
pop
xchg
xor
mov
pushf
or
mov
mov
cmc
and
jmp
mov
arpl
loope
and
mov
pop
push
loope
dec
lods
pop
movl
jg
pop
add
add
aaa
push
shlb
das
add
in
push
popa
rcrb
add
mov
test
add
pop
ja
shr
jnp
scas
lock
push
fsubs
adc
in
out
movsl
icebp
xor
add
lods
aas
pop
sub
push
jmp
mulb
mov
mov
mov
in
mov
lock
push
sub
fcmovne
xchg
pop
imul
js
data16
decb
mov
xchg
andb
or
insl
sub
addr16
inc
mov
rorl
js
mov
iret
sub
imul
lock
sub
ret
imul
outsl
mov
bound
rclb
fimull
jns
fs
test
dec
mov
cmp
decb
sbb
xor
sbb
sub
xorb
ss
aas
sub
ret
dec
push
cmc
add
mov
sbb
cld
outsl
insl
fistpl
mov
push
cmp
sbb
leave
pop
sub
xchg
inc
dec
mov
cmp
dec
mov
rorb
xor
jl
scas
push
decb
mov
and
outsb
std
nop
outsl
stos
xchg
push
mov
sahf
push
add
clc
jg
xor
cmc
push
cmp
int
insb
adc
mov
or
mov
test
pusha
mov
inc
ljmp
and
jnp
call
mov
lds
or
or
add
push
adc
xor
loope
xchg
fmull
mov
or
stos
add
nop
cmp
loope
rcll
pushf
test
xor
jg
cld
ljmp
adc
push
lea
cmp
mov
ret
inc
insl
sub
adcb
ljmp
nop
inc
xor
xor
and
push
push
scas
mov
adc
out
enter
sbb
jae
push
es
fcmovu
incb
jl
fucomp
cld
popf
movb
and
testb
outsl
inc
testl
clc
fs
pop
or
popf
jecxz
xchg
lahf
inc
mov
addb
xadd
aaa
push
shr
push
fucomi
jmp
add
hlt
call
mov
pop
call
jne
and
cwtl
mov
xor
enter
xor
rcr
pop
insl
icebp
shl
cmp
incl
inc
fs
xor
nop
jbe
sbb
sub
je
sbb
movsl
inc
mov
jmp
enter
out
xchg
jle
adc
push
mov
xor
adc
dec
ljmp
into
adc
jg
ds
inc
push
or
xor
mov
xchg
fsubl
or
xor
pop
or
mov
cmp
pminub
inc
add
xor
add
cmp
jbe
mov
jg
cmpsb
xor
adc
jae
xchg
push
nop
jb
xchg
call
push
test
xor
fmulp
ss
mov
mov
or
lcall
fistps
sbb
add
add
and
sub
or
fwait
pop
mov
movsl
jno
pop
cmp
ss
xchg
and
dec
push
sub
mov
testl
sbb
out
and
jns
movsl
cs
test
pop
adc
mov
xchg
xchg
dec
mov
mov
into
mov
sahf
mov
push
dec
push
adc
sar
mov
ds
pop
mov
adc
xchg
cmpb
jae
mov
mov
stc
fcmovne
scas
loopne
movsl
inc
or
cld
push
or
hlt
mov
pop
jg
push
ds
insb
jge
lock
fcoml
aaa
icebp
jg
dec
xor
jb
or
sbb
addb
or
sbb
data16
rorl
xor
mov
jb
or
xchg
push
xchg
in
adcb
in
jg
dec
int
cmp
pusha
mov
imul
add
pop
cmpsb
dec
lahf
add
push
push
testl
push
dec
sbb
loopne
cwtl
les
ds
dec
data16
push
fnstsw
dec
nop
jge
add
xchg
mov
cmp
movsl
das
or
subl
xchg
clc
cmp
aam
mov
pusha
leave
inc
je
mov
jg
jno
imul
std
jecxz
mov
movsl
cmp
jo
subb
add
mov
inc
out
push
icebp
rcr
sub
mov
sbb
jno
add
outsb
loope
inc
mov
decb
andl
aad
subl
cmp
xchg
inc
test
addl
push
mov
cmp
mov
cmp
repz
es
adc
jp
stc
lock
push
cmp
pop
and
and
push
decb
push
clc
rolb
idiv
lea
jno
lods
adc
pushf
in
or
and
mov
negb
sub
leave
sbb
pop
fisttpl
popf
sub
jp
pop
cli
inc
sub
pop
test
mov
addl
popa
inc
and
out
push
add
aaa
lahf
std
lods
cmc
aaa
add
and
std
mov
mov
lea
fcoms
mov
icebp
push
pop
rolb
adc
stos
or
popa
insl
cs
pop
pop
lods
pop
jo
mov
add
ds
mov
mov
imul
push
mov
add
lock
test
outsb
xchg
push
adc
xor
cld
data16
mov
push
sub
pushf
rep
popa
out
ljmp
inc
out
sub
in
mov
adc
in
or
clc
ljmp
cmpb
pushw
sbb
test
cltd
jp
push
mov
jnp
shl
xchg
fidivl
mov
addr16
sub
dec
das
mov
mov
mov
add
icebp
jp
imul
cwtl
lods
cmpl
aam
or
inc
popa
fmulp
pop
push
cmp
dec
xchg
je
js,pn
push
jle
inc
push
add
or
mov
call
dec
or
icebp
decl
hlt
loope
adc
xor
jb
sub
test
out
ljmp
xlat
orl
mov
adc
xchg
cmp
fists
das
xor
and
js
aaa
pop
aam
cmpb
into
cs
sub
adc
in
and
cmpsl
pop
call
pop
outsl
push
outsb
add
sar
dec
or
or
sub
test
into
aad
movb
xchg
mov
jg
jecxz
ljmp
sbb
call
mov
lea
fnstsw
inc
pop
pop
push
popl
mov
push
mov
push
ss
das
orl
outsl
lcall
daa
pop
cmpb
stos
call
pop
add
mov
adc
or
dec
lret
pop
test
jge
adc
imul
fimull
hlt
xorl
pop
loopne
adc
mov
insb
jno
lods
xchg
inc
mov
dec
xor
addr16
call
sbb
enter
push
adc
sbb
pushf
icebp
ljmp
mov
jp
movsl
mov
jge
test
pop
sub
add
sub
jg
test
adc
pop
or
sbb
aam
sub
fsubrp
xor
pop
or
jne
mov
fsubr
pop
adc
pushf
adcb
inc
xchg
dec
jae
add
cmp
jg
mov
cmp
popf
inc
jl
xor
fimull
test
jmp
xchg
es
call
jmp
xchg
lods
in
mov
sbb
dec
or
incl
fwait
sarb
cmp
dec
push
push
or
inc
in
orl
jnp
jmp
incl
mov
inc
pop
mov
pop
in
les
adc
jg
or
jg
adc
xchg
adc
add
sbb
push
adc
cmp
int3
sbb
push
ds
or
lds
fcmovnb
nop
sub
jns
dec
sub
dec
movsb
add
and
roll
sbb
test
fadd
xor
cmpl
adc
push
push
out
add
pop
add
or
jnp
and
mov
mov
cmp
loope,pt
mov
xchg
stos
clc
sub
pop
pop
adc
aaa
adc
ljmp
out
xchg
push
roll
dec
mov
push
fcomip
fs
lcall
aad
cli
and
jle
xchg
mov
xor
add
aad
add
popf
inc
inc
popa
mov
xchg
push
cmpsb
shlb
in
out
ljmp
ja
jbe
pop
aas
push
in
stos
outsb
pop
jl
xchg
push
adcb
pop
popf
pusha
call
movsl
pushf
sti
je
ds
insb
pop
pop
and
filds
test
in
add
inc
pop
push
push
mov
cs
addl
inc
cwtl
shll
loope
pop
addl
pop
mov
imul
sub
inc
add
push
cld
int3
and
mov
pop
rorl
in
mov
or
or
xchg
pop
xor
filds
xchg
pop
insl
jg
das
shll
dec
rcpps
imul
jnp
imul
pop
popf
ljmp
call
and
inc
inc
dec
sub
jb
jp
add
cmp
insl
push
or
xchg
repnz
lea
pushl
cli
sub
or
mov
xor
test
pushf
outsb
jge
inc
jno
dec
mov
fbstp
outsb
mov
lods
dec
es
pop
mull
lret
pop
xchg
dec
dec
lods
stos
mov
loope
decl
and
negl
xchg
sbb
sub
aas
popf
inc
xor
movsl
ret
hlt
andb
jge
adc
ja
or
sbb
and
les
ja
call
jne
js
cmpsb
inc
cli
divl
jg
out
flds
add
pop
adc
incl
orb
pop
jbe
sbb
and
leave
add
arpl
inc
mov
mov
cltd
push
sub
aas
inc
pop
ret
xor
outsl
lock
out
repnz
jmp
add
adc
xchg
rol
pop
dec
sub
sub
sahf
sbb
nop
js
data16
adc
popf
arpl
mov
repz
movsw
mov
pop
mov
xchg
jl
xor
and
sub
clc
jg
sbb
add
push
and
outsl
mov
jne
xchg
push
add
in
xor
sub
mov
ljmp
jmp
es
cmp
sbb
sbb
les
inc
pop
xor
adc
lods
shl
lahf
dec
mov
sub
insb
pop
notb
popf
and
xor
mov
clc
sbb
test
je
jne
jns
push
or
push
adc
addb
hlt
dec
bound
lds
hlt
ficomps
cmc
add
mov
test
dec
repz
cld
xor
push
add
pushl
xlat
xchg
addr16
es
sarl
ret
mov
mov
and
arpl
orl
push
pop
jnp
clc
mov
daa
xor
test
push
push
inc
orl
dec
mov
pop
mov
adc
notl
and
push
sub
add
ljmp
mov
lods
pushf
call
add
in
stc
xchg
sub
add
fstpl
cmpsb
push
repnz
imul
cli
insl
jmp
pushl
scas
add
sti
aam
lds
lcall
aam
in
shrb
mov
sub
mov
ret
jg
fistl
mov
lock
addb
loopne
push
popa
mov
lahf
arpl
inc
and
pop
sub
mov
pushl
dec
inc
pop
jmp
inc
outsb
push
lcall
inc
sub
add
ljmp
xchg
xchg
outsl
popa
sbb
mov
shll
push
push
loope
and
pop
sub
incl
decl
pop
cs
outsb
adc
sub
call
mov
pop
mov
and
sbb
and
push
imul
sahf
sbb
cmc
pusha
cmp
push
fwait
sbb
lods
das
lock
add
add
dec
addr16
ret
rcll
adc
and
push
add
adcb
jge
push
sub
mov
pop
xor
mov
and
mov
lcall
and
inc
loopne
push
adc
add
push
dec
sub
inc
and
fbld
push
xchg
enter
rorb
add
lock
mov
popf
shll
add
aas
push
mov
ds
stc
and
dec
cld
mov
fistpl
xlat
pop
outsl
adc
out
inc
adc
dec
mov
pop
ss
pushl
cmp
addb
add
enter
js
dec
mov
add
fstps
xchg
and
rcr
loopne
dec
or
ja
pop
fcompl
xor
in
jg
and
pop
add
adc
mov
pop
push
outsb
mov
rcrl
pusha
pop
mov
dec
sbb
dec
cmp
test
subb
mov
shr
aaa
xchg
ljmp
push
inc
insl
inc
jg
pushf
ds
test
cmp
loope
aas
sbb
mov
daa
xor
adc
push
lds
es
push
mov
jge
das
sub
mov
xor
push
push
pop
add
pop
mov
popf
pop
dec
fs
idiv
jg
mov
shl
rcl
inc
xorb
subl
cmp
pushl
dec
xor
dec
push
addl
cmp
popa
mov
mul
adc
mov
or
popf
mov
fdiv
sub
lock
inc
xor
dec
pop
jb
sar
jge
xor
decl
nop
xor
mov
js
xor
or
mov
or
cmp
or
mov
pop
mov
ds
pushl
inc
mov
inc
xchg
cld
or
rcr
outsb
insb
stos
push
pop
cmpb
jmp
lcall
add
push
cmp
cmp
adc
mov
clc
lcall
int
add
iret
add
dec
mov
jo
in
outsl
adc
popa
push
lcall
scas
mov
sbbl
shlb
jmp
mov
and
and
in
push
das
xchg
cld
push
push
fs
test
push
inc
mov
sbbb
sub
mov
int3
pop
fidivrs
jb
decl
push
aam
jno
add
push
hlt
xchg
xor
fsubrs
lock
fdivl
scas
or
cmp
jmp
sub
mov
jno
sub
popa
jmp
add
outsl
bnd
lcall
or
pop
pop
lds
lahf
pop
es
sbb
test
pop
and
xchg
cs
outsl
push
stc
sub
or
jo
in
add
jp
sbbb
daa
xchg
and
roll
test
cmovno
mov
xor
cmp
popa
jb
jecxz
inc
fstpt
xchg
xor
jle
in
pop
add
rcrb
fbld
mulb
bound
push
decb
dec
jmp
lods
test
push
add
jae
push
adc
adc
jo
stos
lods
and
xor
mov
mov
mov
ss
lcall
insl
xchg
inc
jo
fisubs
jle
push
orl
in
outsl
call
bound
and
int3
std
gs
pop
inc
ss
out
adcl
fucomip
pop
and
pushf
js
pop
test
fsub
pop
pop
sub
leave
popa
test
pop
cmp
pop
add
dec
aas
dec
into
xchg
xor
imul
mov
adc
sar
es
sub
push
pop
clc
popa
push
lahf
jo
dec
cmpl
inc
icebp
mov
mov
lret
inc
pop
jg
pop
and
pop
add
stc
incl
into
in
lods
or
cmp
dec
add
push
xchg
sub
cmpsl
jnp
lds
icebp
or
addb
jnp
jg
sub
xchg
fildll
ljmp
adcl
popf
add
aaa
ds
lea
mov
push
cmp
cmpsb
repz
jo
arpl
add
aaa
or
out
and
std
fbstp
jmp
ja
ss
adc
add
clc
mov
dec
in
add
fwait
sbb
add
mov
icebp
stc
jmp
outsl
or
das
insb
les
add
pop
jnp
add
inc
subb
fidivrs
lahf
jge
call
inc
xchg
and
lds
inc
ss
push
clc
sbb
shrb
data16
data16
sbb
outsb
jb
ja
insb
ret
fdivl
fs
out
sub
cli
sbb
sub
pop
ljmp
addr16
cmp
jp
shll
aas
sbb
leave
push
adc
sub
imul
aas
sti
inc
sbb
or
jmp
sub
push
ljmp
inc
and
xchg
and
es
insb
pop
call
pushf
push
lds
pop
stos
mov
orb
fsubrs
test
decl
push
shlb
pushl
iret
adc
into
stos
ficompl
jl
inc
lea
sbb
mov
fwait
jb
insb
inc
and
decl
scas
shll
cmp
out
xchg
xchg
sub
jg
out
cs
stos
add
mov
xchg
decl
fcmovbe
xor
dec
data16
mov
stc
sbb
cs
out
mov
mov
inc
xor
jmp
adc
test
cmp
jo
lahf
xor
xchg
cli
inc
sbb
or
das
icebp
sub
push
pop
sbb
js
pusha
sub
in
push
and
dec
addb
dec
jl
sbb
xor
sbb
popa
sbb
clc
sbbl
or
decl
jl
or
push
dec
mov
das
adc
push
arpl
ficomps
ss
leave
adc
cmc
sarb
rolb
inc
pushl
xchg
pop
xor
add
cli
pushl
cmc
repz
rol
xchg
lret
cmp
popf
ss
clc
pop
loope
mov
test
push
xchg
sbb
add
and
loope
mov
and
jae
popa
cmp
adc
mov
cld
cmp
cmp
cmp
jg
addr16
dec
shl
pop
mov
sbb
lock
pop
insl
dec
xor
inc
loope
cmp
mov
icebp
push
stc
push
call
lods
loope
loop
cwtl
jne
lret
mov
jg
in
cmp
and
js
cmpsb
jo
sarl
addl
out
xor
mov
mov
xor
pop
outsl
sbb
push
jg
fmull
enter
ja
cmp
sub
lods
nop
xchg
fistpll
add
lock
arpl
mov
insl
imul
mov
in
jmp
adc
or
addr16
int3
xchg
cmp
cmp
outsl
bound
push
jbe
add
sub
pop
mov
scas
inc
push
ret
jg
push
push
adc
inc
rclb
lods
addr16
sbb
clc
jmp
jb
pop
sarb
lea
rorl
push
mov
dec
sub
and
and
xor
decb
aad
mov
cwtl
push
popl
xchg
adc
call
loopne
mov
pop
xlat
ret
test
inc
insl
mov
data16
lock
add
inc
sub
pop
stos
push
rorl
pusha
jp
fbstp
mov
comiss
mov
cmp
sub
gs
clc
mov
repz
pop
adc
aas
push
xchg
xor
in
lcall
or
iret
push
dec
enter
pop
fdivrp
sbbl
out
pop
movsl
decl
dec
decl
xlat
push
test
aas
push
bound
adc
inc
call
jae
mov
ja
mov
ja
das
jecxz
xchg
add
ret
and
dec
jg
nop
outsl
adc
decl
adc
push
aas
adc
pop
sub
js
mov
shlb
call
mov
inc
xchg
sbb
call
ret
push
pop
mov
cwtl
ret
gs
aad
in
or
mov
sar
push
pop
daa
mov
popa
loope
repnz
push
cmovb
das
icebp
jmp
push
pop
mov
ret
dec
js
aaa
xchg
sbb
adc
xor
push
pop
mov
cs
lods
mov
push
push
clc
pop
sahf
xor
lods
mov
mov
int3
mov
xchg
frstor
jno
push
sbb
or
movsl
pop
mov
adc
dec
js
inc
cli
jecxz
int3
fs
scas
mov
aas
clc
js
clc
dec
push
or
cmc
inc
cli
ljmp
js
ret
imul
sub
jge
jnp
add
loope
ret
xchg
xchg
lcall
imul
repz
fwait
bound
iret
jmp
loop
lock
fmull
xor
and
cmp
cmp
push
add
negl
mov
ret
inc
ret
and
pop
xor
or
iret
cmovnp
push
dec
xchg
cmp
sub
add
ret
jnp
pop
decb
add
xchg
pop
adc
mov
dec
and
mov
mov
adc
mov
jo
decl
clc
jl
lret
pushf
shlb
inc
xor
imul
dec
mov
sbbb
je
and
loope
loope
inc
cmp
clc
pop
dec
inc
out
lret
mov
adc
pop
nop
je
icebp
inc
dec
clc
or
outsb
and
pop
push
rcr
mov
xor
xchg
jnp
adc
in
sbbl
jecxz
mov
arpl
and
enter
xchg
loope
jecxz
stos
xchg
push
ret
inc
jo
mov
or
das
jg
mov
cmp
stos
jo
es
rolb
in
idiv
ret
cmp
push
add
pop
iret
pop
push
xorl
pushf
sub
jg
adc
inc
add
pminsw
xchg
ficoml
lea
mov
sub
dec
mov
mov
sub
icebp
shl
xor
arpl
mov
mov
imul
inc
and
or
adc
in
fcoml
xchg
lret
mov
adc
and
lret
sbb
fsub
jo,pn
dec
fisubrs
mov
adcl
adc
pusha
cmp
les
and
pop
fcoms
mov
adc
xor
ljmp
in
les
orl
js
stos
cs
fdivrl
jle
or
inc
fidivrl
movsl
dec
insl
adc
imul
or
cmovl
jno
sub
mov
xor
xchg
incb
xor
adc
push
cmp
aaa
and
add
adc
stos
sbb
push
adc
into
push
or
pop
fdivr
sbb
adc
pop
pop
mov
roll
xor
xchg
in
or
aad
cld
and
mov
or
out
fidivrl
ds
jns
or
subb
enter
fwait
pusha
fs
add
mov
push
xor
ljmp
fs
mov
in
mov
popa
aas
or
jg
push
sub
cmpsb
clc
rorb
inc
adc
pop
mov
sub
addl
jno
sub
or
in
adc
loop
aaa
int
clc
push
xor
je
je
jecxz
mov
mov
movsb
and
rcrb
inc
push
adc
xchg
push
std
dec
push
sbb
outsl
fldln2
nop
adc
push
sub
mov
mov
sub
add
pop
imul
lods
mov
mov
xchg
xchg
cld
inc
stos
push
push
out
pop
outsl
clc
sbb
aas
and
xchg
orb
sbb
or
or
mov
mov
dec
inc
add
cwtl
mov
sbb
dec
rcrl
pop
outsb
push
aam
sub
enter
aam
outsl
mov
or
pop
test
prefetchw
cmc
ret
fs
pop
dec
jno
pusha
xchg
and
lock
sub
mov
dec
jmp
lea
xchg
icebp
fbstp
clc
sub
jmp
dec
mov
jne
sbb
jg
je
cmpsb
or
outsb
add
adc
imul
movsb
xor
addl
xor
add
inc
sbb
gs
or
lock
hlt
cmp
mov
mov
je
dec
sbb
lods
data16
ja
push
pop
insl
jo
popw
lea
ljmp
stos
lock
pop
mov
mov
movlps
in
jmp
insl
das
loopne
mov
xor
js
and
pop
adc
pop
push
inc
cmpb
adc
shlb
les
aam
mov
scas
sub
icebp
mov
push
iret
out
imul
dec
movsl
test
inc
cmp
icebp
push
pop
inc
or
iret
ljmp
push
inc
pop
inc
xchg
xor
stos
lock
mov
lcall
inc
pop
fdivrl
sbb
mov
sbb
mov
scas
push
pop
in
mov
push
fs
pop
dec
push
sub
setno
jle
mov
add
pusha
push
mov
inc
adc
es
pop
lea
add
sub
mov
mov
pop
sub
or
add
adc
sbb
mov
in
lcall
mov
lock
call
pop
xor
cmp
insl
std
lea
imul
cmp
in
sbb
shlb
pushf
sub
icebp
incl
outsl
lcall
push
cwtl
rcll
add
dec
repz
fdivs
cmc
pop
out
in
notl
pop
push
pop
lea
nop
mov
sbb
imul
push
mov
add
cmp
cmp
adc
das
add
and
ds
and
fiaddl
mov
das
pushfw
cmp
inc
pop
lcall
dec
xor
out
xchg
inc
xor
ja
pop
or
xor
xchg
shlb
mov
lods
call
sbb
mov
sub
je
push
std
outsl
test
fdiv
pop
sbb
repz
scas
add
xchg
ljmp
push
cmp
sbb
or
cmp
push
loopne
sarl
fsubs
test
mov
fstps
mov
test
push
test
and
pusha
movsl
pop
jp
mov
and
ja
mov
js
test
sti
add
insb
push
pop
push
xchg
rol
push
dec
add
and
sbb
fbstp
cmp
enter
pop
push
subb
test
imul
test
jo
adc
mov
rcll
push
dec
mov
mov
cld
lods
mov
test
mov
gs
mov
xor
push
bound
fidivl
cmp
add
icebp
dec
je
mov
cmpb
inc
fldenv
adc
inc
decl
add
inc
sbb
sub
jg
dec
in
pop
adc
pop
pop
cltd
sub
cs
ljmp
sbb
cmp
testb
xchg
repnz
int3
push
sti
add
add
les
jns
imul
cld
mov
add
movsl
decl
mov
movl
push
mov
push
xor
jne
dec
sbb
add
and
aam
sub
or
icebp
call
fdivs
pop
cmp
pusha
lcall
popf
mov
pusha
mov
insb
jne
pop
movb
jns,pn
ret
stos
and
jne
mov
xchg
mov
push
cmc
add
sub
jnp
add
clc
enter
mov
mov
int3
jmp
add
clc
add
cmp
pop
xor
adc
sbb
push
push
jle
icebp
shrb
lcall
fmuls
cld
mov
mov
add
pop
or
pop
dec
pop
mov
icebp
sub
mov
ret
jg
sbbb
and
adc
push
sub
incl
sbb
nop
loop
push
inc
movsl
cmp
mov
fidivrl
cwtl
fmull
dec
push
outsb
aaa
sbb
das
in
sub
incl
mov
hlt
push
in
sbb
cmpsl
mov
cmp
adc
mov
push
aaa
jmp
lea
arpl
sub
cld
adc
add
or
sbb
sbb
jbe
cmp
loope
movsl
pop
add
or
inc
iret
in
in
loopw
mov
adc
pop
add
nop
cmp
test
mov
dec
xchg
or
pop
pop
and
test
decl
std
push
push
xor
sti
inc
icebp
sub
leave
jp
sbb
add
popa
bound
add
or
cmp
out
dec
icebp
incl
fstps
mov
es
jne
mov
aas
cmpb
jo
mov
sub
test
les
loopne
mov
mov
lock
test
mov
inc
stos
push
xor
insl
jg
sub
das
cmp
fs
jle
mov
sbb
push
addr16
sub
cmp
adc
jbe
test
popf
insb
pop
jo
mov
adc
ss
ja
or
je
lcall
mov
test
xor
nop
arpl
inc
repz
sti
adc
loopne
xor
xor
and
pushl
pop
insb
aas
outsb
push
xor
aas
subl
aad
lea
sti
repnz
fwait
cmp
add
insl
pop
neg
stos
jnp
insb
sub
mov
imul
jg
outsl
sub
lret
pop
pop
gs
or
push
jo
mov
cmp
push
push
repnz
out
mov
mov
mov
push
push
mov
push
push
rorl
pop
sbb
pop
ret
pop
adc
or
adc
dec
add
mov
sbb
pop
shrl
fsubrs
fwait
shll
mov
cld
mov
add
pushf
pop
ljmp
sbb
lods
inc
pop
testb
dec
jo
sub
sbb
and
leave
cmp
cld
pop
inc
add
incl
mov
stos
xor
add
inc
pop
pop
push
cli
insb
add
sahf
data16
mov
sbb
lea
insl
decl
jnp
in
cli
out
mov
mov
sbb
rclb
or
clc
sbb
sbb
jmp
cmc
cmp
or
testb
cld
cltd
das
inc
sbbl
sub
mov
mov
repz
incl
dec
mov
lret
data16
xchg
ljmp
fidivrs
pop
sbb
daa
push
push
fmuls
out
and
adc
sbb
sub
enter
jecxz
out
xchg
into
cmpsl
sub
aaa
pushf
and
sti
dec
test
repz
stc
adc
pop
or
insb
popa
push
pop
adc
or
adc
cmp
add
add
add
daa
popf
scas
rolb
jge
sti
dec
xchg
sbbb
or
xchg
inc
sub
jge
loopne
push
pushf
pop
jg
inc
mov
inc
cmp
out
ret
lahf
popa
lock
cli
push
jae
cmp
and
xchg
repz
cmp
xchg
inc
push
sarl
iret
mov
ror
xor
daa
test
loop
pop
mov
es
mov
push
lods
sarb
mov
std
pushf
bound
pop
popf
jns
add
xchg
rolb
andl
clc
jmp
enter
and
dec
adc
xchg
add
push
push
lea
insl
sub
mov
iret
jns
jb
out
and
xchg
jg
in
add
adc
das
push
sbb
out
jg
push
fwait
gs
mov
repz
dec
dec
jmp
add
push
mov
in
sbb
push
xchg
outsl
adc
push
in
cmp
sub
out
push
pop
cld
add
pop
push
ja
cmp
sbb
mov
shrl
cli
outsl
lock
add
cmpps
adc
and
cwtl
adc
inc
mov
cmp
shrl
add
int3
jno
and
loop
push
fidivrl
push
fdivl
mov
mov
loope
xor
inc
mov
insl
pop
jle
and
dec
aaa
orb
jne
lcall
lds
adc
mov
xor
andb
mov
jns
or
and
aaa
out
loopne
or
sbb
shlb
dec
pusha
inc
or
inc
jmp
call
adc
je
and
js
out
add
push
pop
pusha
lds
jmp
push
out
or
push
inc
sbb
outsl
mov
xchg
outsl
mov
cmc
sbb
mov
pop
fadds
pushf
nop
in
scas
lds
pop
clc
mov
xchg
inc
xchg
push
daa
je
test
fbstp
pusha
add
push
and
arpl
sbb
sbb
fmull
xor
inc
bound
pop
mov
test
jg
in
outsb
dec
pop
repz
or
sub
inc
add
jg
mov
mov
add
push
xorl
inc
std
mov
mov
stos
and
sti
xchg
ds
decl
fwait
add
jge
sub
dec
jmp
lds
arpl
ret
std
inc
xorb
popf
xchg
stos
incb
ret
cmp
fidivrs
mov
das
shr
inc
imul
es
xor
push
daa
push
xchg
orl
int3
or
call
cmp
or
into
push
sbb
in
sbb
cld
and
pop
lret
mov
mov
jg
rorl
mov
outsl
out
mov
pusha
sbb
sbb
leave
add
or
mov
mov
mov
cvtps2pd
orl
pop
jle
sbb
sbb
aad
dec
or
loope
decl
outsb
push
adc
lods
daa
mov
jg
jne
inc
in
sub
or
stos
sub
cmp
push
cli
les
pushf
mov
mov
decl
stos
mov
loopne
into
cld
cmpsl
pop
lret
incl
mov
fwait
cmp
add
int3
int
iret
mov
xlat
leave
js
test
push
pusha
lods
ret
adc
push
cmpsl
mov
mov
inc
mov
clc
lds
cwtl
sar
jp
dec
in
mov
mov
decl
mov
lock
push
popa
sti
test
insb
jle
inc
sbb
loope
std
insl
jecxz
fstpt
stos
cmpsb
sarl
mov
int
jmp
sbbl
movsl
aam
add
movsl
mov
int
mov
jb
jge
mov
mov
cmp
scas
fxch
sbb
mov
or
cmc
sarb
cmp
shrb
inc
mov
mov
mul
push
stos
mov
add
loop
fisttpl
push
fsubs
sahf
mov
pop
mov
shl
inc
out
lahf
lods
sub
mov
push
fst
rcr
stc
aam
adc
mov
cmp
push
clc
mov
pop
shlb
loop
mov
or
movsl
lea
sbb
cmp
aam
jbe
add
inc
sub
push
aam
mov
test
pop
les
int
sar
push
sti
incl
stos
mov
leave
mov
rol
icebp
xchg
dec
fucomi
jle
movsb
mov
add
mov
pop
lods
or
add
fucomip
mov
or
ret
pop
dec
mov
aam
std
lods
inc
in
shrb
fucomi
in
jecxz
sbb
cmp
mov
dec
adc
inc
rclb
cld
cmpsb
into
je
mov
fdivrs
push
mov
jle
mov
xlat
loopne
pop
dec
jbe
mov
test
in
lods
lock
jecxz
and
mov
enter
loop
ljmp
xlat
aad
mov
js
cmp
lahf
dec
andl
adc
subl
sub
mov
das
jmp
mov
add
shr
mov
cs
push
mov
pop
jecxz
sahf
movl
mov
cmp
inc
bnd
pop
lea
cmpsb
scas
push
cmpsl
push
orl
cwtl
mov
movsb
jbe
dec
scas
xor
loop
add
mov
inc
jl
dec
outsl
mov
mov
jge
mov
bswap
mov
hlt
sti
rcr
shll
add
mov
rcl
fldcw
sub
sar
adc
jle
inc
fmuls
cmpsl
lahf
fld
mov
ret
cmc
lds
push
test
loop
mov
clc
or
inc
popa
add
sbb
ss
jg
cmpsb
in
aam
xchg
into
mov
lods
mov
pop
xorl
mov
pop
outsl
cld
shrb
mov
push
call
lahf
cld
aam
sbb
insb
cld
call
jmp
shll
mov
add
test
shrb
or
inc
or
ja
sbb
jle
pushf
jecxz
push
iret
roll
mov
fistps
ret
mov
loopne
cwtl
call
push
mov
incl
mov
es
cmp
pop
call
lds
jg
test
mov
cld
loope
cmpsb
and
push
lods
mov
jg
aad
mov
lret
ret
cmpsb
ret
sub
enter
jecxz
in
pop
pop
push
or
aad
inc
jno
test
stos
mov
fsubrs
jle
out
and
lret
iret
mov
mov
pop
add
repz
push
push
adc
fninit
mov
and
jmp
repz
insl
jecxz
in
push
mov
imul
dec
popf
cs
add
lods
stos
mov
jge
ret
mov
push
push
dec
shll
gs
ljmp
ds
fadds
repnz
test
cmpsl
mov
pushl
mov
cmp
mov
adc
test
dec
mov
in
adc
sub
stc
jecxz
movsb
mov
cmpb
pushl
cmpsb
loope
mov
mov
pushf
push
and
adc
lods
push
mov
lahf
lods
jle
xchg
sub
outsl
aam
fdivrs
mov
adc
or
inc
ffree
xchg
rol
pop
push
xor
mov
cs
or
push
mov
xor
mov
mov
addr16
ja
sti
inc
enter
es
pop
add
mov
cli
decl
ja
in
les
pushf
sbb
push
xor
jle
testb
push
out
mov
dec
or
jge
sbb
lahf
loope
mov
les
xchg
mov
mov
stos
xor
pop
aam
cld
or
mov
pop
add
inc
mov
mov
mov
pusha
mov
cmp
loope
clc
incl
lock
dec
add
or
popa
dec
push
scas
push
xor
loop
in
mov
add
aas
shll
lods
pop
ret
test
sub
pushl
mov
int3
xor
jae
mov
and
call
fsubl
rolb
cld
scas
sbbl
mov
test
mov
or
cmp
mov
pop
inc
mov
mov
mov
or
lds
dec
aaa
push
and
push
dec
aad
sub
aam
loop
clc
int
cli
pop
jecxz
dec
jb
adc
add
enter
and
cmp
daa
loop
into
mov
std
ja
mov
sbb
std
movsl
fbstp
loopne
mov
hlt
fbld
daa
repnz
shl
repnz
and
dec
dec
mov
and
faddl
cmpsb
aad
cmpb
cld
das
xor
repnz
and
leave
add
js
pop
aam
push
push
nop
fistps
mov
mov
mov
or
test
addr16
sub
cwtl
pop
cwtl
ss
xchg
sub
cmc
repnz
mov
ljmp
test
movsb
mov
xchg
add
lahf
inc
cmpl
movsb
fidivl
xor
add
cld
pop
push
add
imull
sub
mov
pushf
mov
jns
sbb
lret
fdivr
mov
push
mov
outsl
outsb
push
mov
out
bound
in
cwtl
std
pop
loopne
pusha
dec
dec
fistps
cmp
lret
ljmp
insb
mov
out
sub
mov
jmp
push
flds
push
int
aam
mov
stos
fsubs
push
lea
pop
xlat
lods
fldcw
jg
rorl
dec
xor
push
sbb
lcall
push
inc
aaa
push
in
hlt
cmpsl
roll
sahf
inc
xlat
ret
xor
sub
rcrl
mov
cmpb
rolb
fucomip
push
pushl
fdivrs
or
movsl
outsl
cld
dec
or
int
mov
fimull
pop
mov
cmp
push
test
inc
push
leave
pop
push
addb
cmpsb
das
mov
je
push
rorb
push
lea
aam
cmpsb
mov
shlb
xor
lea
loope
push
sarl
aam
dec
mov
sbb
mov
and
sbb
les
fs
rorl
insl
pop
sub
dec
jae
fsts
bnd
rorl
xchg
mov
lcall
mov
div
lods
xchg
mov
inc
sub
pop
mov
xlat
mov
test
fcmovb
mov
enter
jo
mov
mov
movsb
loopne
cmpsb
inc
cwtl
or
jecxz
out
cs
lea
mov
test
das
jl
dec
lods
imul
insl
imul
les
mov
pop
test
adc
lock
cmp
outsl
outsb
dec
cmp
add
test
loop
mov
or
hlt
mov
jecxz
test
fimull
xor
push
jns
cmp
pushl
jne
aam
mov
jge
lds
push
pop
dec
outsb
shlb
xchg
aad
ficomps
inc
imul
sub
add
add
mov
ficoms
aaa
xchg
lret
jbe
lods
roll
scas
cmp
or
jg
repnz
insb
jecxz
or
or
int
arpl
adc
or
inc
push
dec
frstor
cmp
jmp
pop
dec
add
xorb
test
mov
mov
call
fdivs
and
enter
add
sbb
in
ret
aaa
cs
mov
jbe
fidivrs
sub
cs
inc
jecxz
ljmp
mov
mov
xlat
icebp
rclb
pop
imul
aas
pop
rcr
sahf
aad
push
add
lea
cmc
cmpsb
out
loopne
mov
ljmp
or
mov
mov
mov
cmpl
jmp
cli
cld
mov
mov
ret
sar
xor
in
xor
inc
scas
mov
les
loopne
cli
push
lret
push
lahf
jge
aam
jo
fisttpl
fcoml
fidivrl
adc
nop
in
xorl
fidivl
mov
push
in
lds
pop
clc
mov
dec
push
pop
mov
pop
lcall
mov
data16
cmp
addr16
mov
mov
sbb
cmpsb
sbb
mov
insb
into
mov
push
mov
ss
mov
lret
movsl
pop
leave
jmp
pop
cs
aam
add
lret
mov
sahf
lret
cwtl
and
xor
mov
jmp
cmpsb
mov
cmp
nop
push
add
xchg
in
lret
roll
xchg
aad
cmp
mov
das
mov
scas
dec
mov
ret
cmp
mov
jg
jo
iret
cwtl
in
and
xor
sbb
fldcw
je
jno
xor
test
outsl
inc
insl
movsl
xorl
aas
jbe
incl
inc
imul
mov
loope
scas
cmp
testl
rcr
xchg
push
pop
fbld
pop
and
ret
pop
enter
fcomps
or
clc
aaa
popa
mov
movd
pushl
sbb
bswap
pop
mov
pop
jl
leave
inc
mov
or
and
cmp
push
rol
test
cli
sbb
push
ljmp
adc
lds
int
mov
test
push
mov
test
cli
inc
cwtl
notl
je
adc
adc
xchg
dec
sar
ss
in
in
sar
push
lods
add
and
pop
mov
out
sub
or
push
xor
inc
pop
mov
cmpsl
loopne
and
sub
outsl
shrl
mov
sbb
les
cmp
rcrb
fidivrs
cli
call
fdivl
lret
mov
xchg
inc
sti
jg
in
loopne
in
test
test
fistl
jo
bswap
ficomps
cmpsb
stos
pop
mov
mov
mov
into
mov
pop
pop
sbb
pop
in
cmp
lcall
ljmp
mov
aam
xorl
xor
fldt
repnz
lods
test
push
mov
sub
sbb
fsubl
mov
jae
lret
add
add
dec
mov
adc
shl
mov
movb
arpl
cmc
test
pop
jmp
add
mov
pop
dec
xchg
ja
incl
fst
ds
and
bswap
mov
lcall
sbb
popf
mov
mov
mov
pop
cld
push
sub
lods
fcomi
sarb
mov
bsr
test
iret
movsl
fists
mov
mov
mov
jecxz
hlt
shll
push
push
negb
xorl
sub
pop
loopne
fstpt
xchg
aam
shl
hlt
fsub
or
lret
xchg
mov
incl
sbb
ret
mov
repz
pop
pusha
mov
and
cmpl
movsl
test
pop
sub
ljmp
sti
xorl
and
fsubp
loop
repz
inc
jnp
xchg
mov
aam
insl
sti
es
lods
cwtl
roll
inc
mov
jne
fdivs
jmp
push
imulb
sub
adc
ret
popa
sti
pushl
inc
call
fisttpll
scas
dec
lret
leave
enter
mov
mov
outsb
call
or
add
gs
in
sti
sub
andl
clc
mov
push
fcom
cmp
inc
push
sbb
jbe
push
call
adc
adc
cmp
orl
push
popf
mov
mov
jne
pop
add
fisubs
and
ja
cmp
push
mov
push
adc
pusha
or
outsl
push
inc
and
movsb
lcall
loopne
inc
and
ja
add
insl
scas
rol
call
movsl
mov
and
add
ljmp
loop
es
mov
xor
cs
adc
in
mov
cltd
enter
and
pop
mov
jmp
mov
ljmp
test
and
sbb
xlat
jge
mov
sub
pushf
or
adc
mov
push
sub
sbb
mov
movsl
pusha
das
xor
sub
fldenv
lret
icebp
insl
arpl
rcrb
aas
in
push
test
jb
or
fistpll
cmpsl
sub
repnz
out
xlat
sub
fistl
sub
or
rclb
or
jecxz
lea
rcl
mov
bound
pop
rcr
outsl
fnstsw
lods
jae,pt
mov
cmpsl
and
adc
into
test
cmc
mov
test
jg
jg
sahf
daa
popf
rolb
dec
in
fstpl
jne
dec
sbb
shr
jae
enter
ret
inc
fisttpll
or
jp
pop
mov
mov
pushl
fsubrs
jl
dec
iret
cmp
cmpsl
fcomps
push
ja
lods
addr16
cmpsb
lahf
mov
add
pushl
fucom
jnp
mov
sbb
lret
cmp
pushf
out
aad
pop
fdivr
out
mov
and
scas
inc
mov
fdivs
scas
lret
adc
pop
enter
mov
or
mov
enter
xchg
flds
cli
mov
subl
or
jb
int
in
loop
cs
in
fcomps
jns
mov
add
and
and
filds
test
pop
adc
or
lret
pushl
pop
test
fcmovne
mov
mov
adc
mov
test
dec
mov
aas
cmpl
test
fnsave
sbb
pop
mov
stos
xlat
inc
xchg
rep
adc
xchg
adc
cli
mov
lcall
mov
add
lods
cmpsb
sbb
mov
inc
fildl
push
cli
cmpl
xchg
fiadds
mov
subl
clc
loop
jecxz
roll
push
inc
pop
mov
cmpsl
outsl
adc
lock
jmp
mov
mov
xor
mov
adc
jmp
and
pop
xchg
int3
lds
mov
sub
sbb
mov
les
insl
ss
push
xor
and
rclb
sub
jl
and
inc
and
jle
sbb
mov
and
jno
inc
xchg
adc
sti
jae
push
fstpt
test
jp
mov
cld
ja
loope
int3
push
add
add
sub
jg
cmp
ret
adc
mulb
mov
mov
sbb
mov
idiv
jp
ret
mov
xor
push
mov
aad
mov
push
mov
lods
in
add
ljmp
jno
subl
sahf
movsb
pop
inc
out
pop
push
sti
std
mov
sahf
push
add
lret
inc
lods
shrl
outsl
ljmp
je
lret
or
movsb
popf
lods
lret
call
jg
mov
adc
inc
add
fidivl
sti
pop
mov
mov
mov
lret
push
call
in
jl
ret
adc
lods
xchg
stos
repnz
xor
lahf
lock
sub
imul
movq
jne
bound
scas
je
shlb
jmp
adc
cld
mov
inc
das
jne
loop
sbb
cs
divb
mov
popa
popa
sbb
pop
ja
push
mov
or
pop
pop
les
jl
cltd
das
hlt
movsl
or
into
lahf
jl
add
mov
aas
mov
ret
add
add
call
xor
mov
loop
je
lock
loopne
jmp
aad
movsb
inc
cmp
inc
mov
inc
cmpsb
cmc
sub
mov
sbb
jge
cmpl
push
mov
das
cmp
jae
mov
jnp
lods
daa
pusha
inc
pop
pop
mov
dec
movl
ds
mov
fistps
scas
in
mov
inc
adc
loope
popa
cmpsl
cmp
movsl
pop
sub
fisubrs
out
shll
cmpsl
xchg
out
add
fisttpll
add
scas
xor
jg
inc
in
fisubrl
lret
sub
es
cmp
std
outsl
fistps
fcoms
mov
xchg
popf
mov
sbb
pavgw
and
incl
pop
ret
lret
loop
daa
sbb
and
mov
push
outsl
js
sahf
aam
or
repnz
ret
fiaddl
mov
rolb
movsl
shl
sub
add
int
mov
mov
sar
int3
data16
adc
xorb
push
add
mov
into
mov
in
lcall
sahf
cmpsb
stos
mov
jle
andl
incl
dec
cmp
mov
mov
mov
pop
shl
mov
js
inc
mov
pop
lret
lods
mov
or
call
out
cs
mov
dec
sti
xor
mov
mov
push
jp
and
mov
loopne
sti
mov
lahf
or
jecxz
jecxz
lcall
inc
ror
pop
lods
xlat
outsl
inc
jle
mov
scas
jno
es
outsl
xchg
movsl
xorb
ret
jg
mulb
insl
movsb
jecxz
mov
aad
sub
mov
pop
or
cmpsb
add
push
dec
mov
mov
cmpsb
xchg
ret
mov
incl
pop
lods
shll
fwait
mov
fiaddl
mov
lcall
lods
pop
xchg
dec
dec
sahf
ja
mov
loop
sarl
add
fisubs
mov
stc
lret
lea
fildl
inc
mull
inc
lods
into
add
addl
or
mov
dec
pop
sub
pop
sub
aam
inc
lock
sbb
mov
ljmp
iret
pop
mov
mov
ficompl
subl
rcl
mov
xor
cli
mov
repz
mov
insl
icebp
mov
popf
mov
stc
add
mov
lahf
pushw
push
xchg
loop
mov
test
dec
iret
mov
lret
shl
mov
mov
out
add
fdivl
lret
and
sar
pop
in
mov
shrb
push
imul
pop
sub
movsl
mov
int
fnstcw
fbstp
daa
xor
aas
andl
mov
xchg
adc
xchg
xor
shrb
aam
push
sarl
inc
jg
push
jmp
mov
sbb
mov
mov
cld
lods
iret
jg
fcmovnbe
loopne
out
cmp
sahf
lods
cmp
out
ljmp
into
lret
insl
mov
iret
or
int3
and
sbb
or
pop
call
faddl
clc
push
mov
mov
insl
lods
jle
cs
ficoms
lods
lret
test
adc
ror
enter
push
sub
mov
pop
jnp
enter
push
movsb
les
stos
shll
inc
mov
outsl
hlt
pop
lods
xorb
add
cs
xor
mov
xchg
shll
mov
cmp
fdivl
clc
out
sub
ds
xorb
clc
mov
lods
sbb
jl
push
push
movsl
mov
arpl
repnz
jge
lea
add
dec
pop
loope
mov
loope
mov
aam
sbb
bound
stc
stc
js
clc
adc
inc
aas
xchg
jae
inc
inc
pushf
dec
mov
sub
imul
fnstenv
cmpsb
test
fdivrp
sub
stos
fadd
jne
neg
push
adc
add
jg
ret
aam
xor
sahf
andb
inc
incl
movsl
fstl
or
fcomip
movsl
jecxz
aas
stos
mov
je
fimuls
fistpl
movsb
cmpsb
into
dec
call
outsb
lock
mov
rorl
call
pop
or
xchg
out
pop
fidivrl
add
inc
adc
into
aas
xchg
sbb
dec
mov
push
roll
shrl
fst
xor
inc
les
lock
test
fildll
insb
cld
loope
ljmp
or
insl
pop
loopne
mov
cld
push
xchg
shl
sbb
and
cwtl
lods
xchg
or
pop
popa
adc
out
cld
adcl
jmp
loope
stos
cli
mov
sarb
int3
cmpsb
orl
xchg
into
enter
or
mov
mov
inc
push
addr16
cmp
ret
int3
call
mov
test
or
leave
nop
mov
and
add
in
decl
pop
pop
sbb
mov
sbb
lcall
sub
lds
mov
jo
int3
je
das
mov
pushf
test
mov
jmp
movsl
sub
jo
out
fstp
jg
mov
push
mov
lods
mov
fsubrs
push
mov
fcomi
mov
xchg
aad
push
test
mov
sub
xlat
cmpsb
lcall
cmpsl
lods
add
ja
and
or
dec
es
jne
push
cli
bswap
mov
mov
mov
addr16
ss
inc
test
or
sbb
nop
adc
ljmp
jmp
dec
adc
push
imul
mov
int3
daa
jle
dec
insb
push
add
mov
mov
adc
inc
aam
add
sar
lahf
int
or
movl
icebp
scas
call
cmp
insb
cwtl
xchg
cwtl
call
adc
xchg
or
fistpl
push
jo
loop
and
mov
mov
sbb
aaa
sbb
inc
mov
add
mov
popf
fcmovnu
push
add
cmc
mov
push
pop
or
call
aad
mov
iret
mov
sbb
mov
mov
pop
jo
ljmp
repz
xlat
xor
add
jl
cmp
js
fidivs
cmc
dec
outsl
mov
movsl
mov
pop
aam
leave
lods
mov
test
mov
stos
fcmovnu
mov
mov
jno
aaa
pop
push
stc
loope
data16
push
std
pushl
mov
cmpsl
mov
and
loope
adc
mov
mov
jmp
mov
mov
jb
movsl
adc
leave
mov
lret
push
xor
rcrl
insw
cmc
loop
pop
movsb
fcmovnu
mov
or
negb
mov
cmp
fisubrl
inc
add
iret
mov
aam
mov
ror
scas
jecxz
pop
loop
insb
adc
pushf
lret
lret
push
and
lock
sarl
dec
pusha
mov
outsb
jne
test
loopne
add
jg
or
dec
sub
mov
stos
mov
mov
mov
xchg
adc
andnps
sbb
flds
mov
mov
int
push
call
sahf
adc
jne
push
icebp
jbe
xorl
test
movsl
rcrb
xchg
int
outsl
jno
mov
lods
loop
shlb
pop
pop
ljmp
dec
cmp
call
cmc
fs
push
incb
jl
xchg
ror
mov
or
xchg
stos
addr16
lret
cmp
mov
cs
out
mov
fisttps
inc
mov
rcrb
into
cli
lret
outsb
push
hlt
outsl
pop
cmp
stc
movb
fcmovnu
jo
jmp
inc
movsl
outsl
fildll
xchg
fisubl
rolb
stos
lods
in
xchg
jo
xor
decl
lahf
add
into
mov
pop
mov
test
dec
mov
mov
inc
cmp
inc
mov
mov
cmp
sar
mov
enter
dec
sahf
das
aad
add
mov
jns
pop
loop
cmp
shrb
mov
clc
mov
scas
xlat
jl
jecxz
daa
add
fld
xchg
xorb
div
fidivrs
lret
pop
loop
cld
lds
push
iret
test
ja
sub
add
add
xchg
dec
fcomps
mov
repz
outsl
adc
jle
sbb
sbb
dec
mov
pop
stos
sbb
mov
dec
cltd
fs
mov
push
mov
icebp
adc
fs
leave
xchg
mov
in
mov
xor
and
push
jge
mov
lahf
mov
sbb
add
rorb
dec
mov
mov
mov
mov
sbb
mov
cmp
pop
ja
mov
lock
inc
pop
pop
call
shll
jecxz
movsb
pop
aaa
ficompl
and
jp
cwtl
rcr
cmp
pop
or
in
pop
adc
outsl
pop
scas
shlb
cmpl
sub
divl
imul
hlt
sbb
clc
arpl
jg
das
pop
repz
mov
je
xlat
or
jecxz
mov
adc
lret
or
imul
pop
mov
mov
mov
test
xor
ret
cmpsl
dec
or
test
mov
jecxz
testl
add
pop
mov
adc
sti
lds
xchg
sahf
movsl
and
push
test
mov
flds
sbb
dec
insb
sbb
fisubs
or
push
mov
cmpsb
testl
cli
outsl
mov
add
jo
pop
call
test
xor
js
outsb
inc
in
mov
lods
mov
movsb
adc
mov
mov
pop
push
inc
out
dec
aad
add
or
dec
loope
lds
ret
lds
mov
push
mov
inc
mov
jb
mov
mull
mov
fldcw
mov
fldz
lret
pop
scas
adc
inc
rcl
dec
xchg
mov
jp
stos
out
cli
mov
xor
xchg
incl
jle
or
jbe
push
cmp
jae
sub
mov
cld
dec
cmpsl
bound
lahf
pusha
loop
test
cli
loop
loop
push
sub
in
aas
movl
pop
sub
or
fistl
push
fcoml
cs
add
loope
xlat
mov
imul
cli
ret
out
loopne
pop
xor
movsb
lods
cmpsb
pop
sarb
es
push
lock
out
xor
loop
pop
shlb
push
ds
dec
test
mov
and
shlb
test
sarl
inc
sbb
lret
movsb
popf
jbe
adc
lcall
jge
lock
ret
popa
jno
out
clc
xchg
push
pop
movsb
loop
cmp
lahf
rolb
divb
jg
test
sub
fnstsw
mov
add
xor
cmp
and
mov
imulb
push
movsb
jns
ret
sarb
test
ljmp
add
iret
test
mov
sub
fdivp
icebp
jg
test
stos
xchg
aam
les
arpl
aas
mov
or
mov
ficompl
add
fists
movsl
pop
adc
loop
andl
mov
xchg
cmp
movsb
inc
sbb
mov
or
loop
xchg
rorb
lods
push
pop
fs
fs
sar
imul
adc
pusha
sarl
sbb
sbb
inc
pop
add
sbb
rorl
insl
popa
jmp
scas
shr
or
mov
clts
setg
mov
ds
imul
push
pop
pop
clc
push
ds
scas
shll
mov
xchg
and
shll
fimull
xor
iret
mov
dec
or
das
bound
in
xor
not
shll
sahf
xor
and
test
push
ret
pushf
lret
test
xchg
js
sub
pop
mov
mov
fmuls
add
nop
add
or
ret
mov
pop
sbb
xor
aaa
faddl
adc
rcll
adc
mov
mov
hlt
mov
jecxz
pop
pop
fwait
scas
or
cli
xchg
mov
lods
in
pop
jne
mov
xchg
sub
shl
sti
int3
xchg
shr
push
inc
mov
leave
in
les
outsl
faddl
dec
stos
subl
out
dec
adc
testb
inc
add
inc
add
outsl
icebp
incl
fs
or
jp
mov
xchg
inc
or
int3
adc
ljmp
mov
in
adc
inc
lcall
and
jnp
pushf
call
cltd
adc
or
enter
xchg
sbb
xor
push
fcomp
ret
adc
dec
pushf
mov
mov
inc
ffreep
cld
and
add
inc
adc
fidivrs
xor
push
jp
xchg
or
jge
sbb
lea
push
jns
nop
popa
push
add
cli
lods
test
or
or
and
push
in
enter
dec
jno
inc
fcoms
sbbb
outsb
cmp
and
insl
pop
sahf
subl
xor
ja
sub
out
lret
add
js
dec
pushl
xchg
push
pop
inc
dec
mov
cmp
arpl
inc
push
jmp
lcall
xchg
int
inc
dec
adc
xchg
push
sbb
fwait
jp
jo
and
inc
xchg
add
arpl
mov
bound
jb
pop
inc
mov
cmp
notb
ja
int3
js
push
inc
push
xor
shrl
pop
bound
xor
push
push
dec
push
sbb
pop
test
pop
push
insb
sub
clc
mov
adc
mov
cmp
loopne
mov
cmpsl
dec
sar
mov
rcl
cmpsb
sub
mov
sbb
outsl
icebp
ljmp
cmp
jb
je
xchg
icebp
imul
xchg
push
mov
insl
sub
arpl
adc
lahf
lock
pop
xchg
subb
pop
jbe
mov
pop
divb
or
push
jmp
fsubrl
cmpsb
sub
xorb
arpl
call
test
pusha
jnp
add
push
leave
push
pushl
inc
sub
cmp
fmul
jne
jae
pop
pop
add
lahf
mov
std
sbb
pushw
pop
lock
or
cmp
push
dec
sbb
notb
call
std
decl
xchg
xchg
sub
inc
shll
das
adc
mov
and
xchg
ret
arpl
adc
std
sbb
fwait
lahf
sub
dec
loopne
imul
jbe
ds
xchg
mov
xchg
daa
das
cmpsl
cli
cltd
sbb
push
inc
ljmp
and
push
jp
js
and
inc
mov
jg
pop
sti
cmpsl
dec
push
cltd
js
xor
and
dec
cltd
push
add
nop
ja
addr16
out
aaa
jle
jne
daa
fldl
je
add
mov
ljmp
and
pop
push
loop
dec
pop
push
jmp
xchg
push
les
lcall
cld
mov
pop
mov
leave
and
dec
lock
pinsrw
movb
adc
pop
pusha
loope
xor
xor
sub
shlb
je
clc
add
dec
sbb
rclb
sarb
adc
inc
sbb
flds
ret
dec
fistl
lods
fistpl
hlt
mov
sbb
dec
fdivrl
ret
lock
fbstp
in
mov
insl
jo
cmp
jo
das
sarb
lods
jmp
test
or
xchg
xor
pop
push
add
xchg
or
push
mov
das
mov
iret
daa
in
cmp
dec
add
cmp
sbb
mov
data16
and
gs
cwtl
inc
subl
in
mov
fcmove
leave
pop
leave
and
mov
pop
leave
pusha
data16
xor
test
aad
push
aas
mov
cmp
fstl
jnp
or
xchg
sbb
bound
jbe
sbb
arpl
xchg
dec
fadds
dec
sahf
pop
jecxz,pn
push
xor
repnz
inc
and
sbb
dec
fsubrs
imul
pop
add
cmp
mov
sub
or
nop
out
mov
or
mov
in
sbb
xchg
and
mov
xor
lret
daa
push
sbb
rorl
jnp
dec
or
fiaddl
jbe
fcmovnu
adc
andl
add
dec
mov
or
dec
pop
ss
pop
int3
jo
leave
test
arpl
or
adc
dec
flds
sub
sbb
and
outsb
stos
daa
in
xchg
pusha
adc
push
insb
adc
dec
enter
addr16
fdivl
and
stos
je
cltd
xchg
add
repnz
add
pop
in
and
inc
adc
or
push
adc
push
mov
nop
sub
lahf
sbb
push
movb
add
xchg
int
push
inc
mov
inc
pop
daa
xor
cmp
das
in
jbe
push
or
psubusb
push
xchg
out
xchg
dec
push
cmpsl
or
mov
pop
cmpsb
frstor
or
js
lcall
or
rcrb
lods
sbb
daa
adc
lret
xor
sbb
sbb
adc
inc
aaa
pop
add
mov
je
or
adc
xchg
jne
imul
adc
push
sub
popa
cs
nop
shlb
push
mov
dec
cmpb
mov
lock
fld
inc
sbb
jbe
sbb
xor
icebp
add
in
or
push
adc
add
in
outsl
xor
cmovge
mov
sbb
sbb
jle
into
sbb
sub
test
and
push
or
adc
movsl
data16
test
dec
xchg
es
rolb
add
xchg
sbb
rolb
pop
pop
xchg
rclb
push
fmuls
cltd
xchg
dec
dec
pop
add
sub
dec
adc
fcompl
and
in
push
jecxz
xchg
or
mov
dec
push
push
adc
sbb
push
inc
lcall
je
push
inc
lcall
imul
push
popa
dec
loop
push
rcll
sbb
int3
pusha
fcompl
inc
out
jecxz
mov
pop
mov
push
das
mov
movsb
das
add
mov
and
push
xchg
and
and
fisubrs
fsubrl
call
sbbl
mov
cwtl
in
movsl
subb
nop
jge
xor
xchg
je
xorb
mov
xchg
mov
xchg
mov
inc
aam
gs
aas
xchg
push
notb
test
daa
scas
push
xchg
add
lret
pop
and
pusha
rcrb
and
lods
push
jbe
push
xor
pop
inc
loop
pop
enter
pop
and
jno
dec
mov
sub
in
or
outsl
jo
repnz
xor
or
add
leave
push
lret
and
out
stos
test
ror
int3
sub
lahf
ret
mov
insl
adc
and
xchg
inc
sub
adcb
pop
sub
dec
sahf
or
or
sbb
mov
sbb
add
jg
xor
in
cmpsl
in
fistpl
imul
repz
sahf
insl
add
lock
dec
sub
adcl
dec
mov
and
push
push
insl
fwait
les
mov
iret
cld
xchg
inc
loopne
xchg
jae
xchg
mov
pop
leave
dec
pop
sub
pop
sahf
inc
loop
test
adc
lods
cmp
idivb
fldl
nop
adc
cmpsl
in
adc
sarl
leave
and
push
mov
xchg
inc
push
push
jbe
push
test
add
cmp
fs
hlt
ret
pop
in
in
mov
mov
and
fwait
xor
rcl
fcos
jecxz
push
pop
leave
movsb
add
pop
dec
sbb
sub
leave
mov
jl
pop
daa
fdivs
and
inc
aam
mov
push
mov
dec
jo,pt
inc
pop
sub
repnz
rclb
nop
adc
xchg
and
mov
xchg
cmp
repz
nop
adc
add
xor
std
shrb
cwtl
adc
sbb
imul
decl
mov
fs
loope
test
and
mov
test
leave
add
add
dec
leave
lret
push
stos
std
shlb
xchg
mov
and
sbb
sarb
inc
in
dec
pop
lods
and
xchg
mov
adc
jmp
dec
sbb
mov
sub
add
adc
sub
or
mov
fsubrl
mov
and
hlt
add
or
xor
das
add
fs
mov
adc
sub
push
ds
mov
sub
mov
mov
test
jne
pop
pop
cltd
xchg
sub
or
or
xchg
jl
xchg
lock
fxch
popa
jl
rcll
and
or
push
adc
add
lcall
test
in
rorl
xor
and
addr16
test
jne
hlt
inc
inc
test
add
movb
sub
movsb
sbb
pop
and
add
sahf
test
frstor
aad
or
vpcmpgtb
xchg
addb
add
cmp
pusha
jne
xchg
xchg
std
pop
shl
jbe
into
ljmp
pop
add
pop
push
mov
xor
roll
pop
or
mov
or
mov
inc
subb
and
xchg
jns
add
mov
and
mov
mov
mov
mov
push
addl
xor
leave
inc
sub
adc
lods
add
movsb
outsb
lock
icebp
pop
rcrb
or
popa
cmp
xchg
dec
leave
dec
mov
ret
repz
enter
or
push
scas
mov
pop
jno
ret
iret
xor
das
bnd
and
cwtl
xor
pop
xor
ret
push
mov
xor
push
xorl
adc
test
xor
and
fisttpll
adc
cs
pop
outsl
lahf
or
lcall
gs
mov
jb
in
lock
xor
addb
lods
rorb
or
rcrl
loopne
stos
into
jnp
int3
and
and
jno
add
xchg
pop
icebp
lds
xor
ficoml
out
leave
xchg
jl
xchg
roll
xorb
icebp
je
inc
inc
mov
and
add
test
mov
gs
dec
mov
mov
cs
mov
orb
pop
popa
cwtl
dec
xor
adc
dec
jno
mov
and
movsl
and
pop
aam
clc
faddl
add
dec
pop
lock
jb
jae
scas
loopne
pmulhuw
das
lahf
xchg
imul
shrb
pop
push
jb
jno
adc
outsb
in
add
adc
int
xchg
loopne
int3
cmp
add
movsb
scas
test
test
pop
popa
inc
fwait
xchg
push
inc
das
mov
mov
inc
hlt
movsb
inc
repnz
mov
pusha
sub
lret
xorb
pop
movsl
add
add
xchg
popa
lret
stos
and
xor
mov
pop
leave
mov
add
outsb
push
jb
sub
enter
pop
lods
push
addr16
push
push
dec
add
mov
insb
and
loop
mov
les
outsl
scas
add
or
xor
inc
jg
xchg
push
adc
es
pop
and
mov
dec
and
out
inc
mov
sub
nop
int
aad
mov
bound
add
leave
leave
call
stc
cmp
xorb
inc
mov
fdivrs
jno
popf
mov
xor
dec
push
leave
xchg
add
mov
jo
sub
jp
cmpsb
push
and
xchg
movsl
or
cmp
pop
iret
inc
xchg
ret
pop
mov
sub
mov
xchg
add
ljmp
jnp
sub
mov
in
lea
hlt
out
leave
dec
mov
loopne
dec
enter
notb
inc
push
aad
add
scas
fs
gs
jne
pop
fisttpl
std
sbb
insl
lret
adc
movsl
leave
cmpsl
insb
jbe
mov
pop
or
push
stos
sbb
les
fs
cwtl
xchg
inc
add
data16
xor
fs
adc
addb
add
and
push
stc
repnz
pop
movsb
xchg
mov
cmpsl
stos
inc
jo
pop
sbb
cltd
sub
inc
sbb
xchg
ret
cli
xchg
jb
adc
inc
push
mov
out
rcrl
push
sbb
xchg
pop
out
xor
movsb
sub
or
sbb
inc
push
xchg
nop
aam
imul
cltd
jge
sarl
rcrb
xor
push
or
pop
inc
cmp
sbb
add
sub
jo
lds
mov
in
sti
xchg
mov
lret
jp
enter
ljmp
jo
aas
sti
inc
ljmp
push
xchg
cmp
xor
es
xor
xorl
je
icebp
or
jb
push
cmc
push
xchg
cmp
aad
das
push
xchg
ljmp
fs
mov
sahf
or
xchg
mov
push
push
mov
xchg
and
into
aaa
inc
andl
subl
and
gs
dec
les
call
sub
and
adc
jl
outsl
adc
xchg
xor
or
pop
ljmp
inc
push
mov
inc
je
sbbl
add
and
mov
das
scas
cmp
ret
movsb
mov
mov
adc
adc
test
pop
mull
xor
outsb
or
and
test
add
push
adc
lret
aam
add
add
and
test
pop
ficoms
sub
jge
add
push
pop
movsl
inc
outsl
and
mov
mov
roll
jge
and
and
jmp
repnz
movsb
test
scas
les
cli
shll
or
pop
adc
shl
out
xchg
or
ret
push
cmp
dec
or
or
daa
in
sbb
pusha
imul
push
add
pop
xor
inc
or
aaa
xor
fistl
add
and
out
bound
cltd
test
call
sub
and
cmp
jb
mov
popa
sub
add
add
cmp
dec
pusha
shrl
cmp
dec
arpl
pmulhuw
negb
add
and
and
or
and
add
popf
and
sbbl
hlt
call
and
pusha
and
adc
lods
jbe
push
pop
ret
je
jg
xor
leave
xchg
adc
add
dec
and
or
mov
lcall
daa
popa
add
add
fsts
sub
cld
into
insl
movsb
pop
or
in
mov
sub
add
mov
xchg
adc
movlps
xchg
cmp
loopne
mov
xchg
lea
ss
mov
fs
mov
dec
cli
enter
inc
iret
mov
pop
xor
lret
in
in
jle
xchg
and
pop
dec
cs
movsb
mov
notb
mov
or
pop
gs
xor
fs
inc
push
push
xchg
enter
stos
cmpsb
lds
daa
imul
imul
sbb
out
inc
xor
xchg
enter
add
push
mul
clc
and
cmpsb
push
inc
pop
ret
shufps
daa
xchg
std
sbb
lods
int3
jae
xchg
dec
and
lahf
mov
nop
push
sbb
adc
sub
mov
test
mov
add
xor
xchg
add
jne
and
add
sahf
mov
xor
pusha
jns
pop
pop
and
jns
outsb
imul
add
repz
fstps
aas
jnp
xchg
jne
jge
bound
and
movsb
stc
and
das
add
add
mov
adc
sub
sbb
push
mov
sub
adc
and
dec
lcall
push
pop
sbb
in
push
pop
add
pushf
xchg
divl
mov
and
shrb
lret
cltd
adcb
push
sub
sbb
leave
mov
rorb
cwtl
xchg
cmp
jo
inc
adc
subb
cmc
dec
inc
or
add
sbb
inc
je
add
push
add
xchg
push
icebp
dec
leave
pop
inc
test
lret
jl
lods
repnz
add
push
fcomps
lods
or
bound
add
movsl
and
pop
mov
pop
add
call
nop
push
pop
mov
and
hlt
jno
stc
and
push
add
sbb
pause
xor
and
or
jg
icebp
and
sbb
mov
dec
mov
push
and
push
mov
sbb
jmp
inc
adc
xchg
cmp
repnz
jg
incb
mov
push
push
enter
sbb
add
movsl
cs
enter
popf
jp
das
mov
lret
fiadds
adc
and
jb
iret
or
nop
xchg
lock
outsb
ja
cld
mov
popf
mov
lea
dec
add
dec
jl
lret
inc
cs
mov
jle
dec
enter
lret
cmp
ss
orb
dec
push
pusha
ret
test
mov
test
test
push
andb
inc
repnz
dec
add
sub
lods
lret
add
lds
dec
add
jb
std
inc
popa
and
dec
mov
and
popl
jns
xchg
pop
and
cmp
repnz
xor
out
stos
sub
movsb
stc
leave
xor
push
out
iret
fsts
lods
jl
movsb
addb
cltd
pop
lahf
and
xlat
sub
pop
jno
mov
sbb
push
nop
gs
es
iret
out
in
movsb
adc
lods
adc
sbb
pop
into
or
jl
inc
mov
jg
dec
loop
test
les
clc
xchg
lods
pop
stos
dec
add
and
lret
mov
fincstp
jg
loopne
stos
inc
shlb
cmp
jno
inc
lcall
sbb
icebp
lods
es
and
cmc
and
imul
dec
and
fistps
insl
and
cmp
jmp
pop
pop
dec
sbbb
or
mov
pop
fs
adc
dec
add
sub
push
xchg
ret
fidivs
mov
adc
jb
mov
inc
test
push
xchg
adc
jecxz
fwait
sub
xchg
je
bound
loopne
jns
mov
or
leave
or
mov
add
cmpsl
in
inc
xchg
pop
les
out
cli
inc
subl
loopne
mov
test
pusha
mov
add
jmp
or
fstpl
aam
sbb
je
mov
cmp
sub
jle
sub
movsb
push
adc
or
test
lds
jecxz
adc
cmp
test
jno
nop
add
adc
mov
in
jecxz
cmp
xor
xchg
inc
push
lods
mov
xor
leave
mov
lahf
dec
ljmp
loopne
add
and
cltd
add
ret
cmc
jle
cmpl
sarb
into
adc
add
pop
daa
jb
ret
test
in
insb
sub
xchg
and
aas
adc
mov
mov
sub
orl
dec
outsb
inc
xchg
sbb
enter
in
sub
pop
mov
dec
mov
pop
fimuls
sub
add
test
or
sbb
daa
cmpsl
push
bound
push
mov
sti
push
insl
pop
addr16
stos
adc
push
mul
jle
add
cmp
dec
and
cmp
jno
dec
test
scas
or
dec
adc
mov
adcl
inc
and
mov
or
push
push
cmp
mov
xor
aaa
jg
inc
rclb
insb
lds
cmpl
scas
orl
cmp
stc
adc
and
fstpl
cmp
push
and
cltd
mov
call
testl
imul
xor
je
inc
repnz
dec
cmc
outsl
sub
aaa
mov
add
or
pop
and
pop
fs
push
in
int
xchg
ffreep
and
popa
xchg
jg
imul
sub
jmp
dec
xor
and
clc
sub
clc
mov
xchg
movsb
mov
lds
xchg
lret
jmp
dec
loopne
mov
sahf
adc
add
adc
and
in
xchg
pop
pop
mulb
fnstenv
jmp
leave
sarl
inc
std
dec
sahf
xchg
mov
imul
and
inc
pop
ret
jle
xchg
dec
xlat
add
sub
stos
sub
es
mov
mov
and
fsubs
or
dec
in
rolb
outsb
xor
cld
les
inc
and
cmp
or
pop
ljmp
mov
mov
xor
cmp
loop
or
cmp
lahf
mov
nop
cmpsl
loopne
add
imul
pushf
enter
jbe
pop
and
shrb
test
bound
sub
push
mov
and
es
sbb
push
jo
movsb
andps
arpl
cld
addr16
or
fcom
sub
adc
xchg
cmp
cmpsl
jmp
push
add
push
add
les
xor
cmp
push
fistpll
call
adc
and
mov
test
stc
jnp
cwtl
ret
xor
sub
xor
adc
mov
xor
xor
jno
push
xchg
int3
xor
pop
bound
cmp
sub
push
and
and
lret
mov
sub
sbb
xchg
scas
nop
mov
rclb
mov
sarb
sub
adc
into
mov
xchg
mov
sbb
shll
lahf
push
cmpsl
xchg
push
add
lret
inc
jle
adc
bound
jb
aad
mov
dec
push
pop
mov
or
jecxz
rorb
les
cwtl
jle
xchg
jl
arpl
push
lock
mov
mov
adc
insb
and
mov
add
sub
push
push
cmpsb
sub
mov
and
cmp
xlat
cmpsl
push
mov
xchg
mov
pop
mov
bound
and
sbb
jp
cmp
add
and
mov
push
jl
push
in
incb
adc
lods
push
sbb
or
test
and
adc
and
scas
adc
adc
inc
je
mov
mov
dec
je
hlt
and
pusha
sub
xchg
lods
ja
mov
ror
sub
cs
add
dec
pop
sbb
cmp
cmp
pop
and
adc
fcmovne
in
jge
dec
stos
push
and
insb
add
mov
or
jb
adc
push
xor
dec
mov
adc
test
addb
cmp
pop
shlb
dec
shrb
pop
add
push
cmp
push
dec
stos
mov
and
and
and
lret
adc
lret
daa
repz
lods
movsb
addb
push
inc
add
adc
mov
loop
xor
jge
les
scas
arpl
int3
and
pop
xchg
add
sbb
push
or
adc
inc
mov
scas
sub
andb
push
dec
stos
lret
inc
mov
scas
mov
pop
sbb
add
add
or
sahf
mov
xchg
jne
jb
mov
lock
enter
pusha
into
cwtl
enter
call
subl
cmp
cmpb
inc
sbb
push
mov
adc
test
inc
mov
nop
daa
int3
mov
push
and
icebp
jle
inc
xor
mov
js
das
sub
and
in
ret
mov
sbb
push
adc
clc
xchg
add
add
push
dec
mov
push
jg
adc
inc
push
xchg
push
mov
inc
je
mov
fists
negb
cltd
dec
add
jmp
dec
adc
sbb
lods
pop
dec
mov
and
fadds
sbb
dec
in
cmpl
inc
imul
xor
lea
mov
jo
js
pop
pop
push
lcall
sahf
cli
inc
bound
adc
cmp
adc
push
cmp
jg
testl
pop
movsb
call
orl
pop
fs
loopne
lods
loop
jnp
inc
popa
out
lcall
mov
ret
icebp
daa
loope
or
sub
pop
pusha
pop
mov
sti
incl
sbbb
sub
orl
ret
movl
mov
icebp
scas
aaa
mov
inc
jbe
ficoms
fs
pushf
push
loop
inc
daa
inc
sbb
ds
cs
shlb
fs
addr16
insb
push
inc
push
not
dec
inc
pop
sarb
xor
inc
loopne
hlt
pushl
and
push
adcb
cmp
jle
jg
inc
and
outsl
pop
sbb
xor
push
add
lcall
popa
jle
pop
ret
je
or
cs
sub
cld
jno
dec
bound
aam
sbb
sti
push
cmp
xor
cmp
and
add
jo
insb
or
addl
dec
mov
in
mov
cmpsb
add
mov
inc
inc
cmp
ss
pop
ja
decl
cmp
jg
notl
dec
sbb
or
sbb
je
subb
jae
inc
idiv
pop
outsb
mov
cmp
push
inc
push
pop
jle
not
repz
dec
in
adc
mov
inc
loope
negl
push
jmp
lahf
fucom
mov
cwtl
roll
inc
cmp
dec
ret
cs
adc
or
addl
rorl
ja
rcl
mov
mov
jg
daa
cmp
or
pop
sbb
roll
add
push
adc
xor
jecxz
xor
insl
xor
rolb
push
test
mov
cld
push
adc
push
loop
pop
push
adc
push
dec
lock
add
loope
sub
js
decl
sub
cmp
inc
sbb
xor
ret
inc
gs
leave
out
mov
inc
popf
sti
popa
js
dec
cmp
pop
clc
sub
pop
and
adc
dec
insb
adc
pop
adc
add
fisubrs
xor
les
mulb
push
hlt
outsl
add
mov
add
inc
push
dec
ljmp
lret
mov
scas
add
addr16
dec
add
aas
adc
mov
and
sub
lock
aas
leave
out
mov
push
pop
jl
andb
in
sbb
das
adc
pop
js
loope
adc
pop
sbb
xor
stc
push
js
mov
xor
fisttps
cld
movsl
ret
dec
or
adc
jne
dec
aas
cwtl
ret
jle
sbb
push
inc
inc
ret
test
sti
dec
inc
inc
ret
outsl
ret
mov
add
neg
sti
lret
mov
sbb
inc
dec
adc
mov
std
mov
lsl
dec
fimull
add
not
dec
ds
mov
aaa
std
mov
sbb
xlat
pop
mov
add
xchg
insl
clc
add
inc
and
outsb
test
sahf
mov
dec
jns
rol
scas
insl
mov
dec
push
fwait
push
mov
mov
movsl
fildl
push
inc
jb
adc
in
pop
imul
sbb
adc
cli
fcmovnu
inc
ud2
in
ljmp
dec
pop
jecxz
mov
dec
test
mov
push
push
in
roll
add
insl
add
scas
jbe
jne
dec
lock
add
push
and
cmpb
push
das
in
cmp
popa
stc
je
shrb
hlt
xor
xor
mov
mov
leave
inc
fwait
inc
mov
lods
jge
mov
and
jmp
in
hlt
outsb
push
cld
push
inc
call
int3
cmp
xor
popf
in
sbb
cld
cmpsb
int3
fldt
inc
mov
inc
dec
cmpl
test
push
mov
inc
popf
rolb
inc
push
inc
mov
mov
je
mov
push
mov
jg
cmp
push
mov
push
pop
pop
stos
mov
jnp
add
or
call
push
mov
or
clc
inc
fidivrs
fstpl
push
fisttps
dec
mov
aad
push
and
sub
repnz
add
test
mov
inc
xor
inc
mov
dec
jne
xchg
mov
fwait
ret
or
jecxz
fisttpl
sbb
into
dec
enter
inc
sbb
xor
jbe
sahf
aam
ret
dec
cmp
and
sub
addb
inc
and
orb
push
das
sbb
dec
push
dec
and
and
or
sbb
and
add
jmp
xor
xor
rolb
inc
add
cmp
pusha
and
pusha
add
inc
inc
inc
jo
push
pushl
dec
insl
jns
add
jae
jb
xor
aaa
push
add
mov
jne
jo
dec
push
cmp
or
jo
add
and
add
add
add
sbb
add
sbb
or
add
mov
jnp
and
or
and
or
and
fistps
jno
add
loopne
xor
lods
or
loopne
and
test
fisttpl
andb
sbb
add
cmp
push
push
out
loopne
add
xor
imul
or
push
or
pusha
mov
jg
dec
addr16
add
add
insb
add
add
jae
out
add
jbe
cld
mov
imul
add
jno
or
push
popf
in
outsb
lods
movsb
mov
add
cwtl
jb
inc
inc
insl
jnp
fidivrl
or
lods
xor
addb
pusha
jns
mov
ret
or
popa
and
sbb
or
and
add
add
sbb
xchg
lds
add
or
dec
xor
addr16
fiadds
mov
lods
loopne
je
loopne
add
add
xchg
inc
addb
push
pop
push
insb
inc
jns
popa
jo
incl
ss
arpl
imul
mov
mov
xor
je
xchg
inc
jg
mov
pusha
pop
jo
loopne
pusha
add
xor
ficompl
pop
enter
jo
push
cmp
add
mov
xor
enter
pusha
xor
fists
outsb
xchg
or
add
pop
add
push
dec
xor
mov
ficoms
add
jecxz
add
mov
int3
add
stos
xorb
mov
xor
inc
mov
movsl
test
cmp
fwait
rorb
xchg
cmp
or
mov
and
insl
int
inc
xor
mov
xorl
inc
sub
sar
loopne
push
jae
or
push
dec
xor
cmp
in
jne
and
movsb
jo
jbe
xor
push
inc
int
lods
insl
aad
mov
mov
add
jge
mov
add
rcrb
test
push
sub
and
and
lods
shlb
int3
pusha
xor
mov
nop
pusha
pop
jae
pop
dec
sub
sub
mov
pop
stc
push
push
jb
jns
gs
mov
jae
addr16
rcl
in
mov
push
aaa
sbb
stos
fisttps
xor
pop
sub
pusha
rclb
adc
push
push
movsb
inc
pushl
int3
xor
fs
inc
push
jo
mov
sub
dec
popa
dec
inc
jno
outsb
imul
sbb
nop
loopne
dec
dec
push
push
pop
cwtl
pop
popa
sub
xor
push
mov
ret
in
cmpsb
das
insb
pop
imul
cmp
aaa
add
mov
or
nop
inc
sbb
imul
pmulhw
pop
add
movsl
subb
dec
cwtl
pop
mov
or
mov
xchg
mov
shrl
push
lcall
inc
mov
sbb
in
push
mov
lea
aas
push
rclb
xchg
sbb
cvtpi2ps
inc
cmpsl
incb
lea
sbb
movl
iret
mov
ficoml
xor
add
add
lods
arpl
fwait
xor
testl
push
js
add
cmp
xchg
push
lods
or
dec
sbb
loopne
pushw
mov
mov
addb
add
sbb
xchg
in
inc
push
call
in
pusha
jo
mov
outsl
je
push
ss
mov
fiaddl
jo
int3
inc
mov
jo
sub
aaa
inc
leave
mov
push
jmp
add
addr16
cs
add
mov
mov
je
ja
cmp
push
xor
fstpl
pop
out
andl
sub
cltd
dec
fwait
loope
add
dec
ss
dec
imul
mov
daa
sub
and
addb
pop
js
dec
imul
bound
outsb
daa
insl
shlb
fs
mov
pop
lods
and
mov
mov
inc
cmp
outsl
lea
lods
push
push
imul
mov
rclb
je
iret
xor
add
mov
or
jne
inc
jo
rcl
mov
int
and
xlat
mov
pop
or
mov
and
add
movsb
call
orl
in
cs
dec
push
push
sbb
add
fldt
or
xor
daa
push
jg
xchg
inc
jb
inc
jo
xor
sbb
xchg
imul
mov
imul
cltd
ret
cltd
cmp
cwtl
and
mov
pop
xor
mov
dec
dec
jo
mov
pop
add
or
into
mov
inc
cmp
xor
fists
push
inc
inc
inc
push
gs
aad
rorb
lcall
pushf
xor
es
int
push
add
adc
and
pusha
fimull
pusha
push
mov
or
test
push
xor
jbe
push
in
pop
mov
xor
jle
cmp
cltd
or
lea
shlb
add
mov
roll
mov
imul
push
dec
movsl
xchg
push
add
sbb
in
shl
inc
pop
imul
xchg
sti
push
imul
int3
inc
add
cmc
insl
mov
shrb
loopne
sti
cmp
xor
movsb
aaa
xor
cmp
xor
inc
sub
daa
subl
inc
push
xor
inc
dec
xor
roll
clc
idiv
add
mov
mov
cmp
clc
add
pop
push
pop
inc
cmc
andl
arpl
push
js
pop
sti
mov
push
push
dec
dec
inc
push
inc
push
push
dec
inc
pusha
subb
pop
in
add
mov
daa
jnp
movsl
inc
imul
dec
xchg
pop
imul
rcl
mov
cmp
in
mov
mov
push
push
imul
jo
int3
jb
dec
cmpsb
fistpll
lods
xchg
or
inc
mov
push
add
pop
insb
pop
add
rcrl
dec
and
popa
sbb
or
shrb
inc
repnz
leave
into
movlps
cld
sahf
rolb
sbb
add
pusha
dec
and
pushf
push
push
jo
jne
dec
and
leave
cmp
dec
xlat
and
shlb
aam
push
lea
xchg
xchg
jecxz
mov
addr16
jns
arpl
insl
sub
pop
imul
sbb
test
lret
adc
xlat
lea
jns
jle
ret
nop
outsb
call
dec
js
fcom
cmp
mov
test
hlt
xchg
add
mov
stc
clc
sbb
insl
filds
ja
ja
pop
pop
rcrb
lods
mull
cmp
and
cltd
clc
sub
push
pop
int
xor
int3
add
xor
in
xchg
mov
aam
jne
add
push
pop
xor
mov
xchg
mov
mov
lods
sbb
mov
cmp
push
jg
clc
repz
popf
fdivrs
jecxz
mov
or
ja
call
push
xchg
pop
dec
xchg
pop
loopne
pop
mov
sbb
hlt
mov
mov
push
cmp
add
sbb
mov
sbb
xor
cld
dec
jecxz
cmp
je
dec
lea
pop
fcompl
jecxz
ficoms
pop
xor
adc
daa
imul
inc
stc
fdivr
jmp
xchg
pop
adc
mov
daa
jne
push
aad
and
xchg
or
mov
in
pop
fldenv
mov
pop
aas
jg
imul
dec
push
adc
dec
js
sub
out
sbb
sbb
cltd
sub
dec
lahf
mov
repnz
je
sbb
pop
hlt
pop
adc
sbb
or
in
sbb
xor
insb
dec
inc
or
repnz
jle
in
xchg
pop
sbb
mov
dec
pop
es
enter
nop
and
inc
lret
ret
negl
sbb
inc
xchg
inc
popl
or
adc
add
outsl
mov
sbb
mov
inc
xchg
push
movsb
dec
je
sbb
jl
xchg
movsb
loope
jbe
ficompl
sbb
imul
cmpsl
cmp
addb
cmp
cmpl
mov
fwait
cmp
out
jmp
imul
inc
sarl
inc
outsb
enter
inc
gs
dec
jl
and
jge
outsl
jle
divb
ja
or
push
jp
cmp
rcrl
jae
cmp
popa
xchg
ja
jge
sbb
xor
aas
xchg
in
inc
dec
hlt
inc
xchg
dec
pushl
aas
xchg
loope
fcoms
push
jmp
negl
testl
cld
adc
call
lock
sbb
jecxz
or
cltd
push
out
repnz
lahf
fcompl
movsl
or
dec
push
sbb
imul
and
xchg
int3
aaa
dec
loopne
out
pop
pop
idiv
cmp
enter
movsl
dec
mov
lock
std
in
negb
clc
adc
hlt
pop
pop
clc
dec
jbe
jge
fcoms
in
dec
hlt
dec
enter
pop
inc
mov
push
clc
adc
pop
sub
or
cmp
xor
fnstsw
jae
dec
call
test
cmp
outsb
imul
cs
cld
push
mov
jns
pop
add
hlt
jmp
mov
imul
pop
aam
cmpsl
jae
sbb
pop
xchg
adc
fsubrl
mov
xchg
push
testl
out
cmp
mov
imul
or
cli
mov
sub
loopne
sbb
jnp
aaa
out
cli
xchg
inc
add
and
and
xor
stc
sbb
lcall
cmp
test
jbe
push
les
bound
xchg
push
dec
mov
in
dec
or
sub
divb
outsl
or
adc
lahf
fstpl
repnz
sbb
push
sbb
sub
ret
insb
inc
or
or
fistl
in
ss
std
dec
dec
dec
hlt
mov
push
cmp
addr16
inc
inc
lahf
fbstp
imul
or
mov
insb
in
mov
dec
js
fxch
out
sti
jne
daa
fmull
in
push
pop
jge
jmp
jmp
cmp
lea
sbb
jae
repz
fistpll
or
jecxz
xor
xchg
loopne
aad
fadd
insl
lock
pop
sub
fsqrt
into
ss
cmp
and
pop
loope
adc
in
shrl
sbb
cmp
xor
mov
outsl
std
enter
je
mov
sbb
pop
jmp
movsl
pop
sbb
arpl
int
fisttpll
ret
hlt
and
add
sub
inc
clc
sbb
jns
jne
or
sbb
jns
inc
icebp
sbb
jb
jb
sbb
enter
push
adc
loop
enter
fcomp
movsl
lea
out
std
lahf
fsub
dec
ss
adc
sti
shr
shrl
nop
xchg
xchg
pop
pop
push
rol
jno
dec
sti
adc
decb
jg
mov
das
pop
ljmp
outsb
mov
adc
imul
sbb
lods
and
mov
push
dec
jp
ds
sbb
sbb
lahf
div
xchg
mov
addr16
mov
insl
mov
xchg
iret
scas
je
pop
and
test
lods
hlt
std
pop
daa
push
adc
mov
jae
cmc
es
cld
fcmovnbe
outsb
or
movsb
sbb
in
popf
sti
jecxz
jp
add
fistpl
daa
xchg
mov
insl
fistpl
push
mov
dec
sbb
nop
sbb
fists
adc
or
xor
inc
adc
adc
insb
fistps
mov
daa
fistpl
adc
pop
add
or
adc
mov
or
sub
out
imul
inc
or
nop
lds
cld
jp
fdivrl
xchg
or
or
xchg
dec
adc
push
das
fsubrl
ja
jg
jbe
imul
xchg
push
int
testl
test
imul
cld
ret
sbb
pop
in
pop
pusha
sti
ss
daa
mov
mov
sbb
inc
pop
xor
fcmovne
xor
push
add
cmp
out
mull
mov
std
adc
outsb
notl
sti
mov
pushf
imul
push
adc
aaa
sub
lds
cmp
out
adc
std
push
pop
push
add
pop
xor
inc
imul
outsl
or
xchg
cmp
push
je
xor
cld
mov
mul
imul
and
fs
out
loop
pop
or
dec
inc
pusha
xchg
xchg
adc
stc
jae
add
in
cmp
cmp
mov
pop
xor
loop
lea
adcb
stc
jae
sub
jle
in
or
adc
dec
loop
faddl
enter
push
lds
in
lea
adc
mov
cmp
or
adc
jns
ja
rcrb
notl
mov
aam
movsb
or
inc
mov
les
insb
aam
pop
into
dec
cmp
push
jp
outsb
aas
xchg
sub
adc
mov
or
sbb
into
jmp
inc
push
xchg
sbb
lock
sbb
aas
jl
mov
sar
mov
mov
mov
mov
mov
sub
enter
or
insb
decl
lods
or
adc
lahf
out
call
mov
neg
cltd
aaa
xlat
adc
negl
mov
imul
popf
movzbl
xchg
in
pmullw
xor
adc
sbb
push
and
pop
adc
mov
negl
mov
mov
mov
mov
mov
sbb
pop
in
mov
lods
inc
mov
fisttpl
push
into
insl
adc
pop
fsubrp
mov
or
std
pop
push
mov
les
sbb
pusha
jl
mov
mov
mov
push
mov
dec
jp
dec
inc
sub
jmp
dec
jge
cmc
or
imul
pop
jbe
push
loopne
mov
add
inc
mov
rolb
adc
mov
add
inc
xor
mov
lea
data16
jo
je
sbb
inc
in
jmp
push
pop
add
bound
push
pop
push
aaa
inc
push
add
add
dec
push
addb
loopne
push
push
add
mov
cmp
aaa
ss
mov
shr
fsubrl
outsb
loope
dec
mov
insl
lds
and
push
adc
sti
push
adcb
add
shl
pop
sbb
xor
add
sub
jo
or
add
pop
loopne
xor
xchg
mov
cmp
add
pop
xchg
dec
pop
dec
pop
insl
dec
pop
push
jno
cmp
xchg
loopne
cld
push
inc
jo
outsl
inc
push
add
imull
add
rolb
and
imul
push
add
mov
loopne
add
sbb
pop
inc
inc
mov
sbbb
pop
push
and
ret
ficoml
std
add
rolb
adc
inc
xor
and
xor
fidivl
addr16
dec
dec
pop
jmp
cmp
sbb
cmpsb
and
push
sub
push
jecxz
push
mov
std
jg
jne
arpl
data16
bound
mov
fcomps
pop
loopne
nop
sti
sbb
sub
mov
cmp
jo
xchg
sub
push
inc
push
inc
push
push
and
lcall
mov
mov
push
repz
mov
lock
out
xor
add
and
push
in
fwait
scas
or
and
rcrl
test
or
enter
fsubrs
insb
sbb
add
mov
aam
inc
sbb
push
mov
jb
or
aam
xor
or
sub
mov
sub
sbb
lcall
rolb
mov
js
or
push
bound
push
orl
adc
shrl
jecxz
inc
gs
inc
add
mov
imul
insl
inc
ja
addr16
push
push
xchg
and
jge
bound
inc
dec
dec
gs
mov
shlb
xchg
add
arpl
into
or
test
decl
rorl
jb
push
jne
dec
dec
add
outsb
imul
push
mov
addr16
push
push
insl
cmp
add
add
jp
push
mov
mov
int
mov
lods
dec
inc
std
jg
ss
dec
shrb
jae
push
add
gs
bound
or
cmp
inc
jae
mov
pusha
add
inc
xor
dec
je
cmpsb
iret
test
mov
ret
pop
rorb
pushf
xor
fsubrl
test
inc
pusha
push
loope
outsl
lods
mov
add
shrl
dec
pop
outsb
push
insl
push
add
mov
bound
and
mov
add
inc
mov
inc
cmp
and
je
fiaddl
addl
adc
dec
or
mov
push
add
push
push
movl
lea
add
add
cmp
push
adc
orl
sub
push
mov
push
jg
adc
adc
jl
mov
add
pop
dec
push
push
push
sbb
mov
or
es
mov
xor
push
inc
inc
push
mov
dec
push
inc
push
dec
mov
push
push
inc
pop
stos
xor
inc
inc
dec
inc
in
imul
pop
daa
sbb
pop
push
call
cmpsb
imul
xor
bound
pop
outsl
imul
and
adc
pop
push
mov
pop
in
arpl
fildl
add
test
xchg
push
pop
add
aam
lods
push
xchg
xchg
sbb
movsl
push
mov
pop
cmpsl
push
mov
mov
shll
unpcklps
outsl
cmpsb
inc
sbbl
dec
and
mov
dec
int
cmp
int3
push
data16
inc
or
addr16
add
push
xchg
popf
ret
push
jo
push
or
ror
pusha
jge
xchg
je
xor
addr16
mov
or
aas
sbb
pop
out
call
pop
xor
addr16
shrb
add
insb
xchg
imul
call
arpl
inc
and
jmp
pop
jae
icebp
enter
add
sti
jb
popa
imul
data16
xor
jg
stos
inc
sub
je
push
jne
gs
sub
movsl
push
clc
lods
cmp
inc
pop
push
outsl
inc
orb
and
mov
push
push
aas
add
adc
or
scas
sbb
add
imul
sbb
push
jnp
fiaddl
xor
mov
ret
aad
inc
cmp
cmp
cmpsl
nop
out
push
paddq
dec
push
push
rcll
mov
add
push
add
hlt
movsl
push
stos
insl
bound
push
jecxz
xchg
test
pop
pop
push
test
sub
adc
push
stos
xor
push
mov
sbb
scas
push
cmpb
enter
sbb
testb
ret
and
push
push
sub
xor
inc
add
mov
pop
adcl
inc
mov
cmpsl
test
pusha
or
les
or
subl
xlat
mov
pop
pop
pop
sbbl
push
jno
and
imul
or
aad
push
xchg
adc
test
andb
lcall
adc
mov
xor
or
add
adcb
loopne
dec
mov
add
addr16
push
outsl
ja
cmp
jbe
arpl
dec
shrb
imul
jle
sub
sbb
out
clc
inc
arpl
insl
insb
popa
outsb
out
aaa
push
jo
mov
jecxz
sub
inc
jae
cmpsl
stos
xchg
andl
cmp
dec
pop
rorl
or
int
lcall
add
pop
push
mov
push
cmp
adc
jne
daa
push
loopne
lods
popf
fldl
in
inc
xor
add
dec
push
push
jb
cmpsb
popa
jne
push
jb
mov
jo
inc
cmp
rcrb
mov
or
int
inc
leave
mul
sbbl
lahf
push
mov
ss
or
aam
xor
fisubrl
jle
and
and
jae
inc
gs
inc
jb
cmp
fs
cmp
adc
sbb
ja
daa
pop
and
cmp
aam
lea
dec
es
cmp
aad
mov
inc
push
inc
inc
push
push
aaa
lock
jns
stc
addr16
dec
insb
inc
insb
inc
push
es
in
push
movsl
je
shrl
sbb
pop
pop
fdiv
mov
xor
push
xor
mov
in
jno
and
sub
push
ss
imul
xor
adc
inc
imul
clc
add
mov
daa
jnp
inc
add
xchg
push
mulb
fxch
test
add
scas
mov
inc
and
xchg
mov
xor
pop
sbbb
sbb
or
mov
or
push
mov
int3
xchg
push
mov
js
sbb
ret
or
xchg
push
xchg
xchg
add
add
inc
push
push
lods
das
cs
in
fiaddl
jo
dec
mov
aam
enter
dec
popa
add
in
insb
and
lret
sbb
cmp
sub
nop
mov
lods
je,pn
push
push
pop
fs
jle
xorl
mov
inc
push
add
sub
dec
fs
cld
pop
rcrb
inc
aam
inc
cwtl
inc
xchg
or
leave
out
cmp
sub
iret
mov
xor
and
xor
loopne
gs
test
in
push
or
xchg
or
xorl
ss
int
movsb
add
gs
leave
aas
pushl
cmp
jo
jecxz
cmp
or
sub
dec
or
sub
fcoms
xchg
xchg
add
add
dec
popa
movsl
and
xorb
inc
jno
loope
mov
jae
iret
mov
or
mov
and
adc
jno
popf
xor
mov
and
cmp
enter
inc
or
pop
subl
mov
shrb
dec
subl
mov
pop
out
xor
movsb
andl
or
jg
lods
addr16
or
insb
or
xor
jg
inc
xor
and
das
xchg
dec
cmp
out
sbb
int3
push
subb
push
mov
add
sub
mov
mov
popa
sub
jb
out
popl
int3
inc
add
inc
sbb
or
cwtl
pop
cmc
bound
andl
fimull
and
aam
sbbb
dec
andb
loop
mov
pop
jbe
push
rorb
add
add
cmp
cmp
jle
and
or
and
add
adc
add
mov
mov
dec
minps
add
jg
enter
mov
and
dec
leave
or
push
aas
push
dec
pop
pop
xor
mov
std
and
inc
add
test
cs
or
mov
orl
inc
xchg
add
nop
mov
jg
xor
cmc
sbb
adc
sbb
add
sub
jg
cmpl
cs
adcb
lcall
xchg
cmp
add
test
ljmp
sbb
cmp
mov
mov
test
or
insl
sub
mov
or
pusha
xchg
aaa
sub
inc
and
and
push
jb
mov
xchg
or
in
xchg
rorb
sti
fsubrs
xor
xchg
mov
and
xor
sub
and
xchg
pop
mov
ret
in
test
outsb
call
push
add
add
test
inc
adc
orl
or
outsl
push
testb
mov
push
dec
punpckldq
mov
jmp
jg
or
pop
aam
es
push
adc
mov
adc
cmp
shl
add
lret
mov
mov
jae
cli
sarl
adc
inc
je
cmp
jo
lret
cmp
dec
adc
lahf
sub
adc
orl
and
aad
stos
inc
ret
or
andb
aam
test
dec
sub
imul
or
push
in
test
jnp
jl
and
addr16
add
pushf
and
add
add
xchg
sbb
cmp
push
pop
or
jle
cmp
and
loopne
push
jge
sti
add
ss
sub
mov
test
cmpl
lcall
xor
jle
mulb
mov
xor
pop
test
pop
arpl
xchg
int3
out
mov
jo
or
or
jnp
inc
icebp
pop
mov
push
xor
imul
and
or
jnp
inc
pop
pop
and
inc
jno
add
cs
adc
mov
out
gs
or
cmp
xor
nop
sbb
dec
cmc
and
enter
inc
es
mov
fldcw
scas
out
xchg
push
jne
ds
mov
js
loop
add
pop
cmp
andb
mov
push
pusha
movsb
and
inc
out
pop
and
jo
mov
lret
stos
adc
xor
and
jp
test
jo
adcb
inc
pop
xchg
addl
repnz
adc
push
and
xchg
aad
jmp
mov
das
les
int
cmpl
or
xchg
mov
movsb
andb
leave
mov
and
std
adc
imul
inc
ret
pcmpgtw
pop
mov
loop
int3
or
jmp
inc
ficoms
mov
and
int3
push
and
movsb
leave
push
inc
add
dec
repnz
push
ss
sarb
rorb
shlb
xor
dec
rclb
imul
jo
or
lea
jo
nop
cmp
dec
imul
sub
lods
test
inc
out
popf
ss
sub
inc
aad
adcb
les
ss
pop
sbbb
push
call
nop
filds
dec
add
dec
nop
push
outsb
xchg
and
inc
fsubs
inc
adc
push
xor
cmp
les
cmp
xchg
ja
push
cmp
push
pusha
sub
adc
ds
mov
inc
inc
mov
stc
jmp
test
inc
lea
jmp
jmp
add
and
shll
add
inc
or
sub
or
mov
pop
test
push
mov
dec
daa
or
and
sub
xchg
sbb
adcl
and
test
imul
les
mov
mov
xchg
adc
jge
jmp
dec
push
push
xchg
cmc
inc
push
or
movb
sub
inc
xor
rclb
movsl
adc
inc
mov
pop
dec
cs
shl
adc
scas
arpl
ffreep
popf
movsb
cmp
mov
stos
mov
leave
jbe
aaa
cmpsb
add
mov
sbb
fs
add
test
push
add
mov
out
popa
inc
mov
adc
pop
idivb
add
mov
cli
sub
mov
test
dec
iret
add
in
mov
pushf
and
dec
push
cwtl
add
pop
mov
nop
and
and
and
adc
sarl
fs
or
cmc
sub
test
dec
ds
gs
cmc
clc
push
inc
jno
xor
test
xchg
add
loopne
pop
xor
jbe
dec
dec
xor
lret
xchg
call
inc
sbb
mov
test
stc
sub
mov
adc
xchg
lods
loop
dec
pop
cmp
add
gs
mov
sbb
repnz
gs
shrb
add
add
xchg
pop
scas
pop
and
or
add
shrb
mov
sbb
sahf
sahf
pusha
push
jecxz
sbb
sbb
pop
sbb
mov
lods
dec
les
subl
push
cmp
push
jno
xor
movsl
xor
cmpl
mov
add
push
shrl
push
xchg
push
test
xchg
les
in
and
sarb
push
sbb
lret
or
stos
pop
loope
xchg
cwtl
add
xor
enter
pop
cmp
or
ss
push
dec
mov
imul
mov
xchg
pushf
dec
sahf
pop
lcall
sbb
mov
rolb
jbe
push
popa
inc
js
push
sbb
sbbl
repnz
and
dec
xor
add
cs
dec
jle
push
jne
cmpb
xchg
aam
add
add
dec
mov
movsl
movsb
cltd
push
pop
inc
xchg
ret
sbb
add
mov
sbb
push
ss
mov
int3
cmp
outsl
or
or
orb
xchg
scas
add
data16
add
and
hlt
or
loope
sub
js
jns
data16
pop
mov
icebp
mov
out
sub
sub
and
pop
das
xchg
sub
inc
dec
test
xchg
xchg
and
icebp
addl
fidivrs
inc
or
mov
clc
popa
add
and
jl
jnp
sbb
adc
pop
or
stos
pop
popf
rolb
stos
roll
dec
mov
fneni(8087
mov
pop
or
pop
pushf
lods
add
nop
adc
push
adcl
pushf
cmp
dec
cld
push
cmp
dec
loop
sub
fs
mov
inc
pushf
sbb
sbb
xchg
sbb
insb
fs
or
or
add
jno
mov
fmuls
jno
add
test
pop
and
dec
clc
in
stos
add
andl
sub
and
int3
xchg
add
lock
xor
adc
jb
xchg
inc
repnz
xchg
or
cmpsb
pop
mov
jnp
and
push
sub
jnp
das
mov
xchg
or
inc
xchg
mov
xor
inc
testb
loop
fisubrs
insl
repnz
xchg
mov
mov
leave
adc
xchg
jnp
jbe
mov
aaa
push
adc
cmp
fadds
lret
adc
add
push
leave
or
or
pop
add
or
inc
jno
jp
leave
add
cltd
icebp
inc
daa
adc
xchg
push
pop
mov
jecxz
mov
arpl
and
or
hlt
push
push
sbb
push
flds
xorb
and
repnz
insb
iret
push
jb
sbb
popa
xor
stos
pop
jno
stc
test
mov
fcoms
inc
push
jg
or
lcall
pop
inc
in
push
push
push
out
clc
inc
dec
xchg
xor
jnp
jne
rcl
addl
and
inc
stos
cmc
jmp
cmp
push
pop
imul
push
loopne
lods
and
push
cmp
loop
sbb
mov
push
cmpsb
and
adc
nop
aad
add
dec
js
add
sbb
push
xchg
or
add
pop
mov
inc
mov
mov
add
aam
les
das
jecxz
sub
inc
xor
inc
and
push
add
add
aad
push
je
sub
sub
inc
push
lcall
push
pop
in
inc
or
add
test
mov
sbb
popa
sub
pop
gs
or
enter
sub
and
pushf
cmp
pop
repnz
int3
sbb
lods
std
cld
mov
xchg
mov
cwtl
or
imul
and
sub
rorb
fstps
es
xchg
dec
and
xchg
test
adc
mov
cli
movsb
nop
aas
and
int3
pop
dec
xchg
pop
scas
lcall
test
loope
jae
in
orl
or
pop
pop
cmc
insb
int3
leave
add
out
fcompl
adc
add
mov
movb
push
mov
mov
sub
jo
loop
mov
stc
inc
sub
addr16
sub
add
add
push
jl
jo
jmp
dec
and
rcrb
sbb
jo
add
xchg
mov
adc
rcrl
addr16
adc
xchg
xchg
and
push
insb
jbe
or
clc
mov
inc
adc
push
and
das
adc
lahf
push
push
adc
das
and
xor
add
dec
and
mov
shrb
jmp
lret
arpl
add
mov
ss
jns
lret
imul
cld
xchg
push
and
sbb
mov
mov
pusha
cwtl
test
out
imul
add
pop
scas
inc
mov
mov
shr
xchg
xor
lret
test
je
cmp
or
mov
push
scas
fnsave
cmp
out
pop
push
stos
mov
xchg
xor
sbb
xorb
test
loop
and
inc
jne
lea
xor
loop
js
push
dec
adcl
and
mov
push
cld
push
inc
xor
dec
test
fstl
dec
adc
inc
iret
xchg
sahf
add
xchg
rcll
xchg
enter
in
and
loopne
xor
loopne
cmpsl
dec
and
or
call
push
rorb
cltd
rorb
lret
lret
gs
repz
mov
sub
enter
mov
sbb
stos
movsb
push
cmp
enter
icebp
mov
sbb
and
stc
and
scas
nop
cwtl
mov
cltd
push
add
movsb
push
mov
mov
push
stc
and
or
push
adc
mov
sub
add
aas
cmp
push
dec
sub
loopne
insb
add
pusha
pushf
in
add
lock
jbe
aad
testb
mov
pusha
and
adc
xchg
mov
dec
push
ret
xchg
xchg
les
pop
and
lods
lods
mov
icebp
rclb
mov
mov
and
pop
jmp
and
push
pusha
pusha
inc
addl
fs
jne
sarl
shrb
dec
and
addb
loop
bound
lods
fists
push
leave
add
arpl
rcr
sub
inc
inc
cmp
pop
mov
dec
cltd
outsb
add
lods
add
std
mov
xorb
clc
aad
sbb
lock
push
and
cmc
mov
mov
mov
push
nop
ret
and
mov
xor
adcl
aaa
push
into
dec
jle
adc
lahf
int3
stc
add
nop
add
jo
mov
jp
jb
jl
int3
add
cmp
mov
gs
das
cmp
inc
ret
dec
and
cmpsl
cmpsb
es
jns
and
inc
cwtl
adcl
xchg
rolb
stos
push
lret
movsl
sub
gs
lods
imul
xlat
movb
cmp
repz
inc
add
cmp
pop
dec
mov
dec
adc
imul
pop
and
xor
out
ja
lcall
call
xlat
mov
movsl
add
scas
subb
mov
in
or
cmp
or
ret
int3
shlb
xor
inc
cmp
hlt
and
pusha
aad
push
das
pusha
add
cmp
and
cmp
adc
pop
mov
loope
jb
sub
stos
test
add
xor
dec
popa
cmp
add
sub
stos
mov
dec
and
enter
insb
adc
adc
nop
fmull
and
inc
mov
jo
mov
add
xchg
adc
xchg
je
rcrl
jo
xchg
inc
enter
fisubrl
rorb
sbb
jno
push
push
jge
adc
insl
dec
sub
add
pop
mov
adc
mov
stc
cmp
mov
gs
mov
ljmp
rolb
add
sub
imul
mov
jl
dec
ret
stc
pop
or
subl
or
loop
mov
jne
es
mov
pop
orb
adc
test
dec
shlb
sbb
push
gs
jae
adc
data16
cmp
mov
inc
pop
inc
jo
movsb
push
dec
or
adc
cli
es
and
aas
rcrb
fwait
mov
rcll
mov
jge
xor
xor
stos
cmc
adc
xor
dec
inc
xor
addb
das
adc
jl
je
jne
mov
addl
mov
sbb
push
dec
cmpsl
cmpsl
inc
inc
test
pusha
ret
jns
push
arpl
inc
pusha
inc
push
push
cmp
inc
mov
cmp
loope
dec
aaa
dec
adc
pop
fsub
add
clc
inc
push
ficoms
sbb
pop
inc
or
and
sub
xchg
pop
lcall
mov
add
shrb
popf
loop
push
shll
ja
lock
add
adc
add
xor
jno
cmpl
mov
add
inc
das
les
mov
sub
mov
adc
pop
outsb
adc
orb
loopne
movsb
ret
inc
jp
leave
pop
push
aaa
xlat
sub
lock
imul
mov
jl
and
or
inc
cmp
mov
lds
pop
fdiv
fldt
ss
inc
data16
adc
rcrb
xchg
call
movl
pusha
lcall
addb
js
test
mov
adc
and
and
add
cmp
adc
aam
inc
and
xlat
mov
sub
add
xchg
outsl
cwtl
adc
nop
and
or
dec
add
xchg
sti
mov
mov
xchg
adc
test
in
imul
pushf
sbb
inc
lods
roll
xorl
bound
dec
fbstp
mov
icebp
and
imull
sub
jne
pop
insb
loopne
cld
mov
es
shll
js
adc
pusha
add
inc
add
mov
and
vaddps
mov
fsubs
sbb
xor
add
push
and
test
push
flds
pop
sub
pop
mov
jmp
adc
orl
xchg
dec
adc
rclb
inc
dec
add
popa
aaa
mov
and
dec
stc
adc
mov
xorl
mov
lcall
lods
idivb
ficoms
pushf
and
dec
ss
js
adc
push
outsb
lods
rcll
cmpsl
mov
mov
xorb
xor
adc
jl
pushf
test
dec
subl
cmp
sbb
jle
adc
jl
mov
imul
xchg
pop
mov
sbb
das
mov
sbb
mov
add
lcall
adc
decb
subl
sbb
andb
add
add
dec
cli
push
cld
xor
shrb
mov
jo
mov
xchg
add
mov
and
pushf
add
xor
push
push
movsb
xlat
dec
mov
and
or
aad
and
and
and
sub
enter
rolb
mov
nop
adc
push
call
sbb
lds
add
xorl
sub
rolb
cmp
or
add
mov
and
cmp
decb
adc
add
xchg
push
cltd
inc
dec
or
pop
sbb
sub
or
or
inc
leave
out
icebp
scas
xchg
and
rclb
mov
stos
out
and
xchg
cmc
inc
ret
cmc
add
int3
scas
pop
adc
push
jae
mov
rcll
sti
jne
pop
push
pusha
add
adc
lcall
and
imull
or
and
jnp
and
xchg
add
mov
inc
popf
adc
rolb
push
sarl
xor
scas
inc
shlb
mov
das
mov
mov
mov
cmpb
orb
mov
dec
or
sbb
or
sub
adc
nop
jl
cmc
mov
push
jge
or
addb
and
ficoms
pop
addl
loopne
aad
and
lea
adc
ljmp
push
pop
enter
mov
inc
xchg
inc
xchg
pusha
adc
dec
cmc
in
mov
jle
mov
inc
sub
addr16
adc
cmp
in
fwait
sbb
add
and
dec
and
pop
add
and
or
es
lcall
mov
pop
aad
push
test
cwtl
push
push
push
dec
loope
xchg
clc
sub
adc
mov
repnz
add
xchg
adc
add
cmpsl
ds
cmp
dec
leave
ror
int3
mov
and
mov
cwtl
mov
add
add
ds
lea
shrb
imul
xor
jo
out
pop
call
xor
mov
xchg
inc
xor
or
nop
imul
add
pop
pop
xor
and
test
dec
rolb
popa
adc
pop
aad
dec
mov
sub
or
mov
inc
repz
shl
mov
sub
xchg
ss
mov
sub
repnz
pop
or
xchg
and
sub
lea
xchg
stc
dec
sbb
out
jp
aaa
add
leave
rcll
add
mov
leave
sub
push
push
fnstenv
fstpt
inc
push
repz
and
sub
push
add
xchg
jge
es
in
xor
cli
ret
enter
mov
inc
pusha
or
lahf
test
loop
push
push
push
xchg
xor
je
divb
adc
repnz
push
add
adcb
adc
pusha
lock
ret
flds
cmp
dec
popa
test
je
and
and
push
maxps
or
cmp
lods
gs
js
adc
cmovb
sbb
mov
and
stc
scas
shr
dec
jnp
push
pop
test
sub
xchg
call
insb
push
fwait
cltd
lds
or
mov
js
jns
flds
ret
lods
push
test
rolb
sub
mov
jns
ljmp
jg
jmp
push
push
or
ret
filds
clc
push
and
arpl
popf
call
adc
mov
mov
ret
pop
cmp
scas
arpl
mov
es
gs
adc
push
adc
stos
arpl
xchg
lds
clc
daa
sub
and
pushf
es
loopne
mov
dec
and
push
or
addb
stos
push
andl
mov
out
mov
mov
nop
push
shrb
or
push
sub
or
pop
push
jp
jnp
test
sbbb
jecxz
bound
jg
xor
imul
sahf
leave
dec
mov
pop
adc
sbb
stc
iret
mov
or
sahf
fiadds
adc
jp
pop
aaa
xchg
bound
pop
pop
adc
sbb
add
adc
mov
test
jno
mov
nop
bound
sbb
orb
add
test
dec
and
idivb
mov
add
or
sarb
inc
sahf
mov
mov
add
inc
jge
out
sub
and
nop
add
add
or
inc
pop
mov
jo
mulb
mov
inc
fldt
ret
fs
lahf
andl
adc
sub
mov
mov
xor
xchg
cmp
jmp
sbbl
jbe
add
out
stos
push
sub
mov
scas
sbb
inc
pusha
and
adc
cmc
pop
stos
xorl
fisttpl
fs
sbbb
shlb
ljmp
inc
dec
or
dec
iret
sub
adc
aas
sbbl
adc
add
or
push
and
inc
cmp
sbb
xor
inc
sbb
pop
enter
das
push
sub
fmul
mov
or
push
std
sub
push
push
rcl
and
adc
pop
in
or
mov
mov
inc
add
push
push
pop
and
jle
dec
and
jp
inc
pusha
imul
pop
xor
enter
daa
cmp
pop
and
icebp
sbb
mov
inc
lahf
pop
imul
gs
shrl
and
cmp
pop
rclb
stos
imul
loopne
lret
fs
mov
mov
sbb
outsb
xor
sbb
add
jne
cmp
and
test
js
dec
cmp
sbbl
adc
or
lsl
inc
bound
pop
jbe
xor
dec
and
nop
dec
pusha
jl
and
rcrl
push
dec
adc
and
pop
out
ret
push
dec
jo
rcrl
gs
dec
jp
dec
adc
sbb
or
jo
push
getsec
fwait
xchg
call
mov
stos
mov
addr16
scas
scas
icebp
cmp
cmc
jo
addr16
pusha
sub
in
add
incb
mov
inc
mov
jbe
fwait
sub
inc
xor
sbb
mov
frstor
stc
rol
test
pop
adc
and
loopne
pcmpgtw
cmpsl
in
add
or
mov
sub
test
pop
push
and
adc
inc
test
adc
leave
dec
lock
inc
out
or
fnstsw
xor
xchg
adc
scas
in
stos
das
fidivrs
lcall
ret
mov
lods
dec
outsb
mov
push
and
mov
cmp
adc
cli
cmp
lea
and
dec
mov
inc
dec
push
xor
push
jb
xlat
adc
pusha
lret
fisttpll
fldl
mov
and
mov
andb
sbb
push
flds
ret
pop
insb
mov
cmpsb
inc
add
cmpl
add
sub
push
mov
dec
cltd
loope
jecxz
or
dec
sub
sbb
mov
enter
and
pushf
nop
sbb
daa
jne
adc
jo
push
or
inc
jno
mov
push
cwtl
and
adc
dec
sub
loopne
andb
sub
and
inc
adc
cli
shrl
dec
arpl
jns
xchg
cmpl
mov
pop
je
fidivrs
cmp
sub
sub
sbbl
adc
push
aad
sbb
pop
hlt
sub
mov
add
stc
and
lahf
jb
repnz
movsb
push
mov
cmp
sub
sbb
adc
mov
dec
icebp
inc
xorb
push
hlt
inc
arpl
ljmp
mov
xchg
nop
rolb
sub
and
shll
loopne
jae
adc
inc
and
and
arpl
add
les
and
adc
and
test
or
mov
push
add
nop
mov
inc
mov
std
ljmp
addl
sub
sbb
pop
adcl
cmp
and
or
mov
dec
jbe
lahf
icebp
dec
inc
sub
inc
jne
push
rclb
std
xchg
int3
xchg
loope
mov
or
mov
lods
xlat
mov
or
movsb
mov
inc
add
gs
and
pop
dec
addl
jns
push
cwtl
test
stc
out
and
pusha
adcb
mov
in
add
cmp
push
jl
dec
mov
movsb
ds
movups
or
mov
mov
pop
pop
shlb
sub
loopne
gs
mov
subl
xor
flds
add
call
push
xchg
adc
les
add
fcoms
cmp
and
xchg
xor
pop
sti
enter
pop
jo
out
or
arpl
or
cmp
push
pop
inc
movsb
popf
xchg
inc
pop
and
das
or
movsb
and
call
arpl
rorl
adc
stos
and
mov
lods
push
aaa
jns
mov
add
and
inc
dec
and
in
add
insb
jno
and
pop
inc
pop
pop
pusha
jne
cs
add
insb
adc
mov
cmpsb
inc
outsl
push
dec
sbbl
pop
jmp
mov
adc
addb
mov
xor
enter
jg
out
push
inc
rorl
rorl
imul
mov
sub
push
jae
cwtl
lret
or
mov
xchg
lahf
cmovbe
xchg
adc
enter
inc
push
flds
inc
push
xor
xchg
dec
or
call
or
xchg
add
inc
insl
dec
int
ss
xor
test
int
pop
xor
xor
popa
mov
lock
mov
add
add
movsb
or
or
leave
sbb
ror
cmp
jnp
test
pop
or
push
jp
imul
lret
bound
lds
add
xchg
adc
pusha
dec
movsb
test
adc
push
iret
cld
cmp
shlb
adc
sub
es
sbbb
mov
push
out
loopne
xor
push
pop
sbb
dec
and
aam
test
lods
push
jne
or
push
jne
stc
bound
add
xor
mov
aam
xlat
add
int3
cmp
add
dec
aad
in
push
scas
push
and
push
xchg
stos
mov
mov
sbbl
jge
jo
inc
xchg
add
mov
inc
fcoms
add
mov
jb
loope
cmpsl
repnz
or
add
out
ljmp
andl
add
xchg
popa
inc
xor
mov
xchg
add
and
je
push
mov
dec
hlt
incb
push
mov
dec
jb
lods
call
stos
loopne
inc
push
jl
or
add
loop
xor
sub
push
pop
add
loope
lods
lods
jp
mov
imul
or
sbb
dec
imul
add
xor
nop
xor
and
sbb
add
movsb
push
add
sbb
push
push
mov
stos
push
add
pushf
test
pop
gs
popa
pusha
sub
rolb
pop
adc
int3
aas
rclb
pop
mov
cli
and
mov
jo
adc
pop
mov
sub
xor
mov
mov
add
scas
pop
xchg
inc
loope,pt
sub
mov
push
inc
stc
add
stos
ljmp
push
andb
or
xor
movsl
dec
sbb
inc
or
push
jl
test
pop
xchg
adcl
mov
adc
pushf
mov
pop
shl
roll
and
mov
rolb
xchg
and
inc
mov
push
jle
data16
cmp
fnstsw
add
and
popl
ret
jl
xor
mov
cmpl
dec
subl
adc
xchg
fs
mov
sbb
ja
adc
das
rclb
inc
nop
cmc
adc
adc
mov
lahf
or
jae
add
and
je
sar
gs
pop
out
inc
or
sbb
adc
inc
enter
or
or
or
mov
jb
mov
rcrb
rolb
int3
rcll
sub
stos
sub
pop
jb
jne
xchg
test
sbb
xchg
rclb
and
adc
push
adc
les
cwtl
mov
fistl
and
adc
lods
sbb
addl
pop
add
xor
mov
lahf
lock
xchg
xchg
lret
fst
or
cld
and
and
sbb
mov
sub
ljmp
and
dec
jo
xchg
fcomp
jno
adc
das
int
cmp
xor
add
nop
push
stos
push
lcall
shlb
fs
cmpsb
inc
in
fldl
adc
mov
mov
adcb
lahf
aam
pop
push
dec
addl
xor
cmc
inc
add
sub
or
pop
pusha
ljmp
dec
pop
stos
push
or
shll
mov
inc
push
sub
sahf
imul
adc
pop
or
pusha
sub
clc
test
lcall
mov
or
xor
push
je
inc
outsb
rorb
enter
popl
cwtl
sarb
adc
add
test
loope
rolb
cmp
subl
sub
nop
xlat
lock
pop
jns
push
inc
cmp
scas
inc
push
and
adc
xchg
mov
aam
and
test
cmp
mov
test
pop
and
test
mov
add
or
sahf
sub
ljmp
cmp
loope
adc
xor
xchg
xchg
mov
mov
and
inc
mov
add
addb
arpl
nop
dec
fildl
rcr
rcll
popl
mov
aad
pop
lea
incb
push
jo
push
or
lods
xchg
pop
xor
dec
mov
sub
andb
mov
and
sub
arpl
sub
lret
add
xchg
sub
inc
pop
mull
or
inc
loop
out
dec
push
add
mov
loopne
add
repnz
push
nop
add
out
adc
pusha
mov
into
ds
xor
int3
pusha
test
inc
mov
inc
int3
or
inc
faddp
push
inc
xor
scas
cld
push
stos
in
push
jmp
clc
and
adcb
test
pop
addl
dec
xlat
push
dec
mov
mov
push
arpl
xor
inc
cwtl
or
dec
add
mov
cmp
cwtl
push
rorl
add
inc
adc
mov
add
sub
int3
addr16
inc
dec
insb
add
add
call
pop
sbb
adc
cmpl
jbe
adc
pop
jno
ss
mov
les
sub
int3
arpl
xor
add
xchg
pusha
sub
lds
sub
or
stos
scas
dec
das
les
test
xor
mov
bound
pop
add
mov
adc
adc
adc
cmp
xorb
push
add
nop
adc
or
loopne
xchg
jne
and
icebp
loop
dec
ljmp
arpl
and
or
mov
fisubl
add
sbb
es
cmp
sahf
pop
aad
pop
push
pop
sub
and
and
inc
outsl
dec
adc
push
mov
xor
mov
dec
mov
and
and
and
adc
or
and
add
cmp
mov
cmp
add
push
bound
push
and
dec
add
jbe
out
rorb
add
loopne
add
mov
in
mov
sub
push
int3
lea
add
inc
dec
jns
test
or
pop
pop
sbb
add
shll
cmp
jae
montmul
cmpsb
inc
push
ret
add
fs
push
xchg
js
or
nop
shll
jo
ret
cwtl
adc
inc
sbb
push
fdivrl
das
sub
iret
arpl
pusha
ret
gs
pushf
or
dec
push
fstps
aas
mov
aas
call
ljmp
add
outsb
es
mov
insl
addb
cwtl
add
or
rcrl
rclb
add
insb
ss
test
hlt
push
adc
lds
or
daa
shll
push
lock
shrb
mov
iret
mov
adc
xor
add
les
xchg
and
and
push
add
sbb
pop
and
push
cmp
mov
mov
push
mov
hlt
add
pop
dec
dec
std
xchg
pop
pusha
or
cmp
jo
inc
adc
in
add
sub
jg
cmp
cmc
adc
popf
mov
out
fistl
sub
ljmp
aas
mov
ret
add
in
mov
push
pop
pop
popf
imul
lods
add
mov
sbb
rolb
mov
or
mov
pop
xchg
add
orb
adcl
stos
or
mov
pop
mov
out
addl
mov
fs
out
inc
jle
insb
rolb
cmp
psubusb
add
mov
insb
sub
andl
inc
dec
add
mov
stos
jl
or
dec
cld
jl
bswap
add
mov
inc
or
leave
lret
xchg
push
repz
adc
adc
pop
sbb
ljmp
gs
in
inc
mov
sti
pop
jge
jo
adc
dec
into
es
ret
push
and
clc
sub
cmpb
iret
mov
sub
dec
mov
pop
test
cmp
adc
or
je
testl
pop
shll
mov
push
add
push
sbb
push
xchg
rclb
loop
sbb
and
scas
shlb
adc
pop
dec
imul
xchg
cmp
add
push
icebp
pop
mov
das
mov
mov
sub
and
and
addl
and
bound
or
repz
mov
aas
push
daa
sahf
or
cmpsl
filds
fisubrs
jmp
mov
mov
push
repnz
cltd
pop
mov
enter
es
je
lds
lds
adc
nop
adc
dec
in
add
xor
mov
sub
stos
loopne
xor
clc
outsb
sti
hlt
adc
adc
adc
roll
cmp
rcrb
mov
xchg
mov
mov
cs
add
adc
and
ret
adc
rolb
mov
scas
movsb
xlat
mov
js
mov
ficomps
dec
mov
and
and
stos
in
xor
and
adc
loopne
enter
or
rcl
rclb
adc
nop
aad
add
dec
nop
inc
inc
sbb
addb
popa
add
loop
mov
dec
push
mov
xchg
test
sti
push
cwtl
dec
add
stos
arpl
or
loope
mov
jecxz
and
push
stos
adcl
inc
pushf
dec
inc
mov
pop
push
adc
add
add
mov
sbb
or
loopne
add
sbb
and
or
ret
inc
adc
cmp
inc
adc
jbe
cltd
js
lds
xchg
add
adc
adc
test
xor
push
adc
pop
nop
js
push
push
or
int
and
mov
enter
dec
in
lahf
negl
pop
xorb
xor
dec
cmp
ret
cmp
push
sbb
fildl
mov
mov
out
movsb
bound
sub
test
push
jecxz
ret
dec
fbstp
cmp
stos
in
repnz
nop
add
mov
adc
mov
sub
mov
or
or
push
sub
test
xchg
mov
adcb
adc
enter
stc
and
sub
jo
pop
add
xor
jp
daa
jno
repnz
xchg
into
leave
push
pusha
adc
or
adc
pop
shrb
jle
xchg
stc
push
inc
andb
xor
pop
mov
clc
adc
dec
pop
jmp
or
movsl
mov
dec
mov
icebp
sbbb
cmpb
xor
nop
xchg
add
xor
sub
stc
popf
xor
pop
ret
dec
dec
iret
dec
push
out
mov
or
rorb
push
dec
push
or
rcll
inc
pop
and
push
aad
sbb
xchg
stos
or
mov
push
and
sub
inc
jge
add
xchg
inc
sbb
mov
pop
addl
inc
dec
adc
pusha
adc
inc
inc
js
or
cmp
mov
loop
inc
push
push
mov
push
add
and
fnstsw
xchg
push
je
clc
xor
lcall
push
cmc
loopne
adc
pop
add
or
add
fldenv
jl
call
sub
jp
dec
add
inc
je,pn
cmc
xchg
movb
lods
lret
push
movsb
mov
mov
leave
or
fmul
add
add
pop
paddsw
dec
adc
mov
jns
mov
add
or
gs
mov
adc
add
or
adc
sbb
enter
cmc
xor
dec
test
nop
and
int
dec
test
or
pop
mov
sbb
jnp
or
shrl
sub
or
jecxz
add
es
mov
test
xor
cmpsl
push
test
test
ss
test
test
stos
sub
nop
scas
dec
loop
test
jb
push
das
xchg
or
pop
test
push
out
dec
jne
lods
lea
sbb
sbb
add
sub
gs
and
push
mov
lods
stos
sbb
push
sbb
sub
inc
es
jbe
mov
ds
xlat
clc
sub
add
add
or
call
push
ss
int
add
jne
push
push
push
and
xor
loope
fcoms
jne
cmp
hlt
rolb
adc
push
sub
push
and
adc
and
pop
shlb
add
in
cmp
mov
xchg
test
testb
daa
sub
pushf
adc
and
mov
jmp
adc
pop
and
int
rclb
or
or
adc
enter
sub
xor
or
or
das
and
mov
pop
fs
leave
arpl
dec
push
pop
adc
mov
dec
add
and
push
add
add
lock
ljmp
and
mov
sbb
add
dec
push
jne
inc
dec
clc
push
adc
subl
sub
push
fcmovnu
xchg
or
and
pop
jo
orb
or
or
icebp
loopne
addb
add
push
movsb
add
jo
add
add
aaa
mov
cmp
sbb
and
pop
fldt
xor
and
add
or
or
add
push
add
xchg
sub
ja
pusha
inc
push
add
mov
outsl
lea
xchg
push
and
and
add
jo
pushl
adc
push
and
dec
dec
push
push
dec
inc
inc
pop
dec
push
jge
mov
push
inc
push
add
loopne
xchg
mov
mov
add
imul
xor
loop
aaa
add
mov
fldt
jns
aaa
push
je
shlb
inc
fdivl
clc
pusha
je
add
xlat
popa
arpl
pop
add
add
out
inc
sbb
jae
outsl
pop
inc
push
push
push
sbbb
add
pop
shl
iret
cmp
adc
dec
sbb
and
adc
add
fsubs
fstp
not
ret
pusha
add
add
jo
mov
add
jp
and
insl
imul
or
mov
cltd
movsb
dec
outsb
rorb
cmp
mov
add
gs
push
dec
dec
push
imul
fistl
mov
cmp
push
or
sbb
in
outsb
popa
and
add
add
xor
jg
xor
mov
jo
les
add
jo
add
outsb
fcmovnbe
xchg
lcall
adc
and
scas
adc
cmp
jbe
push
push
xor
xor
or
adc
and
jnp
outsb
mov
in
data16
add
or
mov
mov
pushl
arpl
jb
ja
push
and
mov
cmp
sub
imul
mov
push
mov
out
imul
add
aam
in
mov
nop
cmp
add
jno
jns
mov
loopne
pop
std
add
jo
jae
mov
popf
and
test
out
js
add
xor
dec
outsw
popa
push
popa
push
test
jmp
data16
bound
jae
addr16
bound
gs
and
mov
data16
mov
gs
imul
dec
outsb
je
jb
outsl
arpl
fs
in
fucomi
js
push
and
gs
imul
pop
xchg
fcomip
mov
inc
gs
jo
dec
popa
inc
jnp
jnp
adc
jae
dec
xor
dec
popa
sub
inc
jb
outsl
jb
inc
jne
gs
inc
imul
xor
popa
outsl
push
jb
jmp
mulb
jae
inc
jbe
inc
xor
jb
mov
push
jns
adc
adc
jae
outsl
outsb
jnp
fcmovb
or
fs
adcb
insb
fsubrs
inc
je
bound
jae
push
jne
cs
push
push
and
jo
insl
pop
ret
arpl
insl
sbb
pop
sti
insb
cmp
push
inc
jp
cwtl
mov
pusha
popa
bound
mov
push
popa
imul
dec
bound
inc
pop
add
mov
jns
test
data16
popa
inc
jae
imul
mov
inc
or
lret
imul
mov
add
jo
xlat
insl
pop
mov
es
adc
js
pop
outsl
mov
out
mov
dec
flds
adc
int3
popf
mov
xor
jnp
xor
sub
sbb
stos
dec
outsl
inc
into
xchg
jns
outsb
push
mov
dec
sub
insb
fbstp
pop
or
push
js
dec
and
xor
push
push
imul
jl
in
insb
pop
inc
jns
ret
inc
pop
inc
outsb
inc
das
xor
fisttpl
push
push
push
fwait
mov
sub
or
and
pop
xor
std
outsw
sbb
sbb
addr16
pop
mov
ds
push
dec
jne
mov
xchg
mov
mov
inc
imul
insb
cs
inc
sub
insl
cmp
push
imul
cmp
loope
push
sbb
imul
pop
dec
outsl
sbb
dec
arpl
sbb
rcll
add
outsb
push
jne
jns
faddl
jae
sub
popa
and
push
sub
mov
cld
aaa
rcrl
and
hlt
inc
fs
enter
fdivs
outsl
ja
mov
jae
aaa
addr16
adc
fsubs
push
inc
jo
xor
push
sbb
iret
arpl
out
sbb
fldl
je
or
insb
or
xorl
mov
pop
push
jnp
sbb
jno
pop
shrl
ja
sbb
adc
pop
add
out
insb
push
jge
mov
push
fs
add
inc
pusha
sub
xor
mov
xchg
dec
ja
imul
jl
daa
xor
gs
insl
pop
sti
ficomps
imul
add
fs
in
insb
sbb
movsl
dec
fstl
dec
jo
inc
xor
jns
imul
pop
jb
xor
or
fnstenv
insb
adc
mov
fsubr
dec
xorl
jae,pt
push
sbb
sub
jl,pt
mov
je
xor
pushl
test
bound
xor
adc
xor
inc
fs
outsl
dec
movsb
cwtl
jae
mov
fsubrp
mov
das
pop
mov
inc
fwait
imulb
js
ret
rol
popf
push
rorb
inc
outsl
je
test
or
adc
mov
adc
outsb
outsl
add
mov
js
lcall
mov
xchg
push
jp
fwait
int
push
add
sbbb
popf
jg
adc
daa
adc
insl
dec
adc
mov
imul
test
sbb
jne
movsl
cmp
xchg
dec
xchg
imul
pop
pusha
inc
or
sbb
mov
dec
ret
adc
mov
jne
or
and
pop
rolb
inc
sub
rcrb
daa
xor
jno
loop
sub
xchg
push
or
popa
out
jae
sbb
inc
sub
sbb
dec
cmp
dec
adc
xchg
pop
xchg
inc
mov
add
mov
ret
jns
jl
cwtl
xor
outsl
add
loope
push
inc
add
test
xor
loopne
btl
or
add
mov
or
add
ret
mov
in
jmp
rorb
inc
or
add
add
pop
pop
inc
test
inc
ss
sarb
add
sub
pop
fcomip
mov
push
add
push
or
sbb
in
insl
das
or
je
or
mov
jg
test
or
out
fmuls
add
psubq
mov
add
sbb
lret
loopne
dec
enter
insb
outsl
inc
mov
add
dec
push
jle
fsts
add
adc
aas
and
add
add
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
sbb
add
add
pop
pusha
add
mov
add
pop
xor
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
in
add
add
add
add
xor
cmp
xor
xor
inc
add
add
dec
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
dec
add
jno
js
ja
add
jns
jb
js
and
push
add
data16
add
jb
add
add
sbb
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
jno
js
ja
add
jns
jb
js
and
dec
add
imul
add
imul
dec
add
add
je
add
outsl
add
add
add
dec
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
inc
add
add
imul
add
add
add
jb
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
cmp
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jne
jno
js
ja
add
jns
jb
js
add
add
js
sub
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
jno
js
ja
add
jns
jb
js
and
push
add
data16
add
jb
add
add
add
add
add
add
add
add
add
add
sldt
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
jno
js
ja
add
jns
jb
js
add
js
add
add
add
sbb
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
jno
js
ja
add
jns
jb
js
and
dec
add
imul
add
imul
dec
add
add
je
add
outsl
add
add
add
cmp
or
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
inc
add
add
dec
add
push
add
dec
add
add
sub
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
xchg
add
js
add
mov
add
lods
add
mov
add
fisubl
call
add
add
add
add
add
add
add
push
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
gs
insb
xor
cs
insb
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
je
push
je
inc
add
add
je
inc
add
add
or
sub
sub
or
ss
adc
pop
add
sbb
mov
push
inc
adc
cmp
add
inc
jo
sbb
and
and
sbb
and
xor
test
mov
adc
das
inc
cmpsb
loopne
or
ret
adc
stos
adc
dec
gs
push
rclb
sbb
inc
add
inc
or
jnp
push
daa
das
sub
inc
sub
xor
add
insl
shrb
test
or
bound
add
jp
sbb
or
adc
and
add
out
inc
push
adc
and
push
add
inc
inc
add
inc
or
sub
and
adc
inc
add
add
or
andb
adc
add
xchg
lret
sbb
arpl
mov
jns
sub
and
dec
pusha
sub
cmp
mov
or
or
inc
mov
push
test
or
add
inc
and
sbb
xor
fwait
add
add
or
or
add
fwait
adc
xor
adc
add
push
imul
sub
mov
cmp
or
or
pop
jo
xor
jbe
lahf
aaa
cmp
and
add
imul
inc
sbb
cmpsl
dec
mov
data16
arpl
sbb
pop
dec
lret
push
aam
push
xor
push
sub
add
pop
fnstsw
cmp
pusha
sbb
dec
or
push
sbb
popa
inc
roll
and
or
add
xchg
add
push
xchg
pop
sub
leave
push
or
xor
addb
sbb
daa
jno
push
add
add
ds
or
and
or
ss
lea
mov
inc
cmp
aas
mov
add
or
dec
push
and
add
pop
gs
adc
and
sub
xchg
push
inc
inc
sarb
insl
dec
dec
arpl
dec
mov
pop
push
add
popf
daa
pop
or
and
add
sbb
dec
add
xlat
xchg
pop
dec
jge
sbb
pop
sbb
adc
push
push
push
adc
jns
sub
frstor
or
add
adc
xor
add
adc
test
daa
pop
stos
and
adc
pop
jg
add
or
imul
pop
push
daa
add
inc
inc
and
inc
mov
mov
adc
push
imul
ret
inc
xor
add
cmp
add
push
or
push
adc
cmp
or
cmp
push
and
or
push
dec
sub
push
aas
jg
outsb
or
push
xor
and
aaa
adc
outsl
bound
cmp
pop
jnp
add
adc
dec
sbb
adc
add
or
add
push
js
sbb
in
mov
lcall
sbb
jg
pushf
adc
dec
lods
add
adc
add
or
jne
sbb
popf
or
push
ja
adc
xor
add
xor
or
dec
dec
and
add
or
add
test
pop
push
add
inc
lods
add
push
adc
dec
mov
adc
outsl
cmp
test
pop
lea
jae
add
pop
dec
jo
and
sahf
inc
push
xor
push
jl
add
adc
mov
mov
jo
push
pop
test
or
adc
mov
jae
add
or
enter
add
sub
punpckhbw
adc
pop
adc
xchg
or
or
xor
daa
cmpsl
pop
insb
xor
and
sub
sbb
push
add
adc
inc
cmp
add
adc
or
shlb
sub
popf
or
and
cmp
inc
add
dec
push
or
push
add
outsb
inc
lcall
dec
sbb
movq
mov
adcb
cs
inc
add
jne
or
push
or
pop
xor
aas
and
popa
pop
cmp
or
pop
dec
jg
or
push
pop
filds
or
or
adc
push
jle
push
cmp
or
and
add
scas
or
sub
sbb
je
pop
xor
sbb
pop
add
jge
dec
dec
sub
and
cmp
addr16
pop
lock
aas
pop
test
bound
arpl
mov
mov
sbb
pop
sub
insb
inc
adc
inc
sub
pop
add
xchg
push
rcrl
jb
xor
inc
add
add
insl
inc
xor
inc
cmp
or
xchg
add
push
sbb
sub
adc
or
sub
push
or
add
xor
jmp
inc
imul
ds
imul
add
push
push
dec
or
lods
aas
dec
inc
pop
xchg
sub
and
xor
adcb
sub
cmp
add
add
cmpsl
push
add
add
push
lcall
mov
jmp
pop
mov
pop
adc
nop
sbb
mov
add
add
xor
shrl
pop
pop
pop
and
pop
pop
push
sub
add
pop
cmp
push
push
adc
sbb
cmp
add
or
cmp
sbb
andl
xchg
xor
or
and
sub
pop
add
push
pop
sarl
sbb
push
add
xor
test
mov
xor
or
cmp
sbb
orl
cmp
cmp
adc
add
pop
inc
cmp
jae
cmp
sbb
adc
push
add
pop
and
sub
add
or
test
or
xor
adc
sub
adc
pop
popa
pop
dec
jp
push
xor
aas
cmpl
adc
pop
xor
ss
push
mov
pop
inc
pop
inc
cmpl
sub
pcmpgtd
add
adc
cmp
add
add
sbb
push
inc
sahf
sbb
adc
ss
add
jb
addl
adc
or
ss
dec
je
push
cmp
inc
pusha
lcall
push
and
jns
xchg
push
pop
inc
push
and
xor
and
mov
adc
xchg
add
add
inc
adc
pop
or
sub
add
sub
pop
mov
add
sub
sub
cmp
push
sbb
inc
push
jg
add
push
popa
add
add
add
arpl
sub
inc
fsts
mov
and
aaa
push
and
jae
movaps
push
and
inc
ss
adc
or
sbb
sbb
push
xor
dec
xor
push
loope
movlps
adc
xchg
sbb
sub
inc
das
add
cmpsl
sbb
sbb
insl
ljmpw
sub
sbb
push
bound
add
add
or
add
or
or
dec
adc
sbb
daa
inc
cmp
or
add
aaa
sbb
add
adc
add
lret
jo
insl
push
push
cmp
add
jno
xchg
or
cmp
and
nop
push
sbb
push
add
sbb
sbb
pop
add
add
push
jo
add
inc
mov
adc
mov
sbb
jns
adc
sbb
cltd
push
push
add
push
inc
popl
dec
or
or
push
leave
and
or
xor
push
and
pushf
add
or
add
dec
rcll
push
fnsave
adc
add
and
or
push
push
inc
dec
pop
xchg
dec
push
pop
and
pop
sub
pop
cmp
add
add
jb
push
or
sbb
inc
xor
push
inc
add
adc
or
xor
pop
xchg
adc
mov
sub
adc
cmp
jno
or
inc
pop
cmp
addr16
mov
pop
add
daa
push
cmp
add
sub
xor
mov
or
pop
in
gs
cmpsl
and
inc
or
push
push
outsb
push
push
addr16
add
add
pop
sbb
pop
popa
add
add
insl
push
dec
sub
or
or
adc
xor
push
sbb
add
or
dec
fsubrs
push
xor
pop
push
add
and
outsl
or
push
add
push
add
and
xor
xchg
xchg
inc
add
dec
sub
adc
dec
or
inc
aas
movsl
jnp
xor
jo
and
adc
or
gs
sbb
jg
mov
or
arpl
add
add
pop
shrl
sbb
push
sub
push
or
pop
daa
mov
test
jb
int
cmpb
push
aaa
and
lods
cltd
pop
inc
add
sub
and
pop
je
cmp
dec
dec
jns
mov
sub
adc
and
jne
mov
pop
or
wrmsr
movsl
jle
addr16
sbb
and
or
jnp
jne
adc
gs
or
aaa
outsb
sbb
outsb
orb
jo
jmp
ud2
push
dec
xor
mov
aaa
data16
leave
test
rclb
adc
xchg
pop
add
add
sbb
xor
dec
cmp
sub
dec
or
pop
or
rdpmc
jne
pop
dec
add
add
adc
add
fs
mov
outsl
sbb
cmp
shlb
add
sbb
sbb
xchg
dec
mov
push
js
or
mov
add
testb
adc
sbb
or
xchg
adc
add
push
test
jo
or
mov
ss
outsb
pusha
sub
nopl
or
pop
mov
add
adc
and
xchg
xor
lcall
push
dec
add
cmp
outsb
or
jle
add
add
add
lahf
fmull
add
jg
dec
adc
jns
push
or
jp
or
sub
pop
add
je
lar
pop
dec
dec
aaa
sbb
das
je
or
or
outsb
mov
add
add
add
pop
rdtsc
sbb
inc
loopne
adc
add
push
dec
je
and
pop
push
add
dec
sub
iret
add
pop
add
sub
sbb
dec
sbb
dec
arpl
bndstx
and
mov
pop
jge
iret
clts
cmp
cmp
sub
push
add
bound
pop
add
inc
adc
sub
push
or
add
jle
mov
add
push
sbb
je
shrl
and
add
leave
push
shrb
add
inc
xor
add
add
cmp
xor
push
das
lods
mov
sub
sub
js
or
adc
and
addb
ss
imul
stos
add
push
gs
add
jne
push
test
add
adc
add
cmp
dec
add
and
pop
das
or
add
addr16
mov
inc
add
or
adc
push
dec
jne
sub
nop
imul
and
add
xor
pop
jl
sub
sbb
das
and
dec
dec
and
sbb
leave
jo
push
cmp
pop
sbb
dec
sbb
adc
and
adc
sbb
add
and
cmp
test
imul
arpl
push
add
daa
int
pop
adc
dec
push
mov
add
sub
dec
ds
adc
pop
cmp
jo
xchg
xor
push
dec
pop
sub
dec
adc
data16
dec
add
inc
and
mov
xor
and
insl
dec
adc
mov
ds
imul
and
out
ret
or
sbb
call
push
sub
or
pop
cmpsl
pop
sysret
or
sub
ss
jnp
xor
add
pop
and
scas
insb
inc
push
dec
adc
pop
xor
sbb
add
addr16
or
and
sbb
and
push
and
adc
pop
or
dec
add
or
add
gs
data16
xor
aas
das
xor
out
mov
or
or
push
xchg
or
sub
sbb
pop
add
add
cmpsb
or
mov
adc
cmp
push
sub
pop
sub
cmp
cmp
add
roll
push
sbb
xor
push
push
xor
ss
mov
push
mov
push
daa
daa
add
in
sub
sub
and
xor
fs
adc
or
sub
dec
cmp
dec
add
adc
dec
jae
cmpsl
adc
sub
inc
add
add
sub
and
ucomiss
xor
or
inc
xor
adc
inc
or
sbb
aas
cmp
inc
add
adc
cmpb
push
add
es
push
pop
nop
cmp
push
sub
adc
inc
xor
mov
push
pop
aaa
mov
push
jnp
imul
xchg
and
mov
add
adc
push
adc
ja
pop
fisttps
cmp
pop
add
and
add
cmp
add
cmp
js
add
inc
inc
inc
jle
adc
pop
adc
xor
jae
pop
xor
cmp
aas
sub
sbb
aas
sbb
xor
outsb
push
pop
push
or
data16
xchg
mov
pop
sbb
push
pop
fs
adc
pushf
xchg
xor
dec
adc
and
adc
add
pop
inc
and
inc
add
shll
imul
sub
sub
add
add
push
sbb
add
adc
setbe
inc
outsl
shlb
or
js
lcall
jnp
inc
aaa
mov
or
push
js
js
mov
arpl
sub
adc
or
add
cmp
or
or
test
add
add
and
cmpsl
xor
pop
pop
add
and
addr16
pop
or
daa
adc
ss
andl
add
add
push
add
or
or
in
loope
ds
add
sbb
add
cmp
inc
xor
push
add
xor
ds
inc
pop
sbb
sbb
mov
pop
dec
sub
push
push
push
mov
xchg
or
or
nop
add
or
pop
xor
dec
jns
pop
mov
add
lahf
lds
les
add
push
jae
add
add
push
cmp
add
sub
sbbl
inc
sub
inc
add
sub
pop
inc
cmp
adc
add
addl
add
pop
mov
jmp
dec
sub
adc
sbb
add
xor
jp
pop
call
cmp
add
dec
adc
push
push
adc
or
mov
add
dec
xor
add
inc
test
rorb
jae,pt
and
dec
adc
loope
gs
add
adc
inc
cmp
pushf
ds
add
or
sbb
fisubs
pop
push
jne
sbbl
sub
gs
xor
xor
push
mov
xor
fldenv
cmp
pop
push
push
bound
es
sbb
adc
inc
imul
flds
push
or
or
xchg
mov
or
add
and
dec
push
inc
pop
xor
adc
cmp
sbb
and
push
sbb
sub
adc
aas
orl
add
imul
je
xor
sub
sbb
or
add
jno
xor
xchg
inc
sub
add
pop
push
and
sub
cmp
adc
iret
add
sbb
push
or
or
pop
xor
pop
jno
and
sbb
add
sub
add
xor
push
sub
cmovs
add
add
jl
bound
sub
mov
and
add
push
add
xor
xor
mov
add
dec
pusha
pop
rdmsr
inc
adc
add
inc
push
sbb
adc
adc
add
popa
add
or
xor
adc
je
pop
iret
adc
add
cs
push
sbb
dec
or
sub
pop
insb
in
jbe
or
adc
lcall
addl
pop
add
dec
adc
leave
add
sbb
sbb
or
sub
push
pop
pop
adc
pop
jae
dec
cld
les
loop
dec
sbb
push
sbb
jne
rorl
and
push
dec
cmp
sub
int
sub
pop
mov
adc
or
adc
mov
add
and
adc
push
inc
xor
add
fs
push
add
pop
and
sbb
add
or
daa
cmp
insl
cmp
mov
add
jg
adc
sbb
xor
push
arpl
sbb
lcall
aad
nop
add
add
push
jp
add
mov
mov
mov
xor
lgdtl
mov
push
add
push
and
adc
and
add
repz
dec
sub
cltd
arpl
outsl
sbb
push
jno
add
or
or
sbb
adc
sub
addr16
and
pop
cwtl
pop
lcall
or
cmp
push
cmp
das
adc
pop
imul
push
add
cmp
add
inc
sub
adc
dec
push
nopl
addr16
push
or
jae
add
cmp
or
adc
jns
and
call
lret
xor
adc
jae
and
sub
adc
and
ret
cmp
dec
and
and
sub
and
xor
pop
and
or
pop
xchg
sub
and
inc
jae
jnp
xchg
jae
andl
or
xor
or
xor
ret
sub
mov
inc
or
nop
push
add
sbb
into
pop
inc
or
sbb
dec
dec
scas
adc
jge
xor
dec
and
pop
pop
and
pop
dec
jnp
ds
cmpsl
cs
jo
sbb
jg
inc
xchg
sub
pop
nop
fwait
or
insb
mov
cmp
and
sbb
pop
or
push
jb
add
jg
mov
adc
inc
inc
dec
and
and
or
xor
or
outsl
aaa
push
sub
sbb
sbb
mov
dec
xor
add
push
dec
or
sbb
or
cmp
pop
push
or
jle
push
xor
add
add
popl
and
lods
movups
daa
or
mov
sbb
cs
popa
add
push
mov
pop
add
xchg
xchg
add
pop
dec
adc
inc
sub
es
jle
dec
add
mov
movsw
sbb
inc
inc
push
sbb
pop
adc
pop
xor
adc
movaps
xor
add
daa
daa
add
xor
pop
add
dec
and
aas
sbb
dec
outsl
inc
pop
xchg
test
xor
push
or
push
add
jmp
mov
or
push
mov
and
in
inc
pop
push
sbb
das
mov
adc
sbb
push
movsb
or
mov
lahf
xchg
inc
mov
pop
ret
dec
xchg
add
and
and
pop
imul
xchg
xchg
cwtl
xchg
add
cmp
sbb
subl
push
add
sbb
inc
xor
inc
push
dec
daa
xor
and
addb
pop
stos
imul
add
adc
mov
push
jge
jo
pop
add
addr16
push
and
add
xchg
and
dec
jg
push
pop
or
lods
xor
inc
imul
nop
movsl
adc
pop
add
xchg
pop
jle
aas
aas
dec
or
or
add
adc
prefetch
ss
push
push
jp
dec
daa
sub
shrb
jne
xor
sbb
sub
and
adc
cmp
push
xchg
dec
inc
ja
xor
add
les
insl
push
push
daa
add
adc
dec
test
sub
mov
inc
xchg
cs
popa
pop
insb
and
or
sub
adc
daa
adc
data16
pop
push
push
dec
jge
es
add
sbb
and
push
xor
push
sub
adc
add
stos
or
push
and
push
add
sub
pop
mov
or
dec
or
add
sbb
cmp
cmp
ja
add
and
dec
add
sahf
mov
add
lods
aas
sbb
nop
andb
data16
xchg
jne
pop
jle
and
test
dec
dec
pop
or
push
add
ja
aad
or
test
stos
adc
mov
add
add
mov
adc
sub
lret
aas
stos
adc
sub
or
push
pop
and
outsl
inc
cmp
movhps
pop
test
ret
sub
dec
pop
add
or
sbb
stos
add
adc
popa
mov
adc
daa
mov
pop
aaa
and
and
sbb
add
dec
sub
add
push
sbb
and
aas
push
add
cmp
js
inc
add
jb
loopne
push
or
in
push
xor
and
or
xor
add
pop
or
ret
push
or
stos
and
adc
add
xor
xor
push
lods
lahf
rorb
dec
adc
inc
add
or
sub
pop
sbb
cmp
xor
adc
dec
inc
jp
and
sbb
adc
push
or
cmp
push
jle
xor
cmp
inc
or
push
sbb
mov
outsb
stos
addr16
sub
jae
add
jae
push
popl
daa
pop
ds
xor
add
scas
sbb
dec
cmpl
and
mov
or
or
popa
xor
add
xor
sbb
sbb
adc
xchg
sub
add
dec
sub
xor
dec
push
or
adc
repz
cmp
push
push
or
mov
push
sub
or
adc
push
or
filds
adc
cmp
adc
add
add
inc
push
add
push
sub
or
add
pop
add
add
push
adc
adc
xchg
jnp
push
cmp
mov
add
pop
push
push
and
sbb
popa
je
push
push
inc
add
inc
sbb
aas
insl
add
push
pushw
xor
jns
sub
or
outsl
adc
aas
pop
insl
mov
jl
dec
jg
pop
xor
pop
adc
sub
adc
adc
add
xor
xor
push
mov
sub
add
or
add
add
xor
outsl
add
xor
sbb
cmp
lret
cmpsl
pushf
ja
or
add
ds
push
add
push
sbb
sarl
es
sub
sub
mov
lea
sbb
sub
andb
push
mov
push
push
dec
pop
adc
and
add
add
or
push
jnp
add
add
or
add
dec
add
sbb
and
inc
sub
push
pop
pop
cmp
add
adc
add
sub
sbb
add
sbb
das
mov
mov
andb
adc
stos
dec
sub
popa
inc
and
xor
cmp
fs
cmp
jbe
jae
les
cmp
pop
rcrl
insb
invd
or
add
addl
or
add
pop
sub
or
and
or
xor
add
or
xchg
dec
add
inc
sub
adc
or
push
pop
or
stos
xor
sub
jno
dec
pop
push
nopl
mov
nop
push
cmp
add
sub
mov
sbb
and
or
sbb
or
xor
inc
and
sub
ss
add
imul
insb
mov
or
dec
or
xchg
sbb
sbb
addr16
add
sub
adc
sub
ds
push
fwait
pushw
mov
movsb
adc
adc
das
and
andnps
and
dec
or
cs
mov
sub
orl
sbb
lcall
pop
xor
jae
sub
and
jbe
and
add
ss
adc
aas
add
adc
inc
add
dec
add
outsb
adc
add
lret
ss
and
sbb
bound
adcb
push
ds
and
pop
sbb
inc
fadds
pop
or
add
dec
and
or
pop
adc
and
pop
adc
add
or
sbb
es
int3
push
inc
pop
sbb
adc
inc
insb
xor
popa
or
cmp
add
aaa
movsb
daa
xchg
lcall
sub
dec
add
xor
or
aaa
outsl
push
inc
add
adc
or
mov
fs
or
sbb
insb
pop
add
dec
sub
or
mov
adc
add
push
push
cmp
sub
cmp
xor
pusha
and
mov
cmp
push
cmp
sub
adc
movsb
outsb
add
insb
add
inc
xchg
repnz
add
push
and
mov
or
cmp
adc
mov
or
inc
add
imul
add
push
sbb
rcrb
dec
or
stos
sbb
xchg
push
add
loop,pt
push
pop
jno
rolb
inc
and
adc
and
or
aaa
dec
inc
xor
sub
mov
add
jns
or
adc
loop
popa
sbb
xor
push
sbb
add
mov
or
ret
and
outsl
dec
sbb
aaa
roll
or
and
das
jae
and
add
add
push
aas
sbb
adc
add
add
cmp
aaa
dec
adc
sub
mov
or
es
xchg
or
inc
sub
xchg
add
sub
push
and
cmp
enter
inc
das
sub
das
push
pop
sub
add
ja
sbb
pop
icebp
test
dec
push
mov
xor
dec
jge
pop
aaa
xchg
add
add
inc
inc
popw
jbe
push
adc
sub
je
xor
dec
inc
and
and
sub
pop
ss
pop
push
ss
sbb
inc
xchg
or
je
or
pop
adc
inc
or
dec
popa
in
mov
pop
inc
add
dec
add
add
inc
mov
imul
pop
add
or
mov
pusha
adc
ss
push
adcl
mov
jle
push
mov
mov
sbb
aas
gs
pop
add
mov
add
adc
inc
and
or
sbb
gs
mov
dec
add
cs
adc
adc
or
pop
adc
mov
add
adc
pushf
adc
and
xchg
bts
add
bound
or
push
and
xor
sub
sarb
xor
and
sbb
push
add
jne
je
sub
jne
ss
pop
sub
sub
add
mov
sub
push
xor
push
test
dec
rolb
imul
or
adc
iret
dec
pop
jne
add
add
adc
pop
lods
es
xor
aaa
popf
add
sbb
xchg
sub
xor
jge
cmpsl
adc
arpl
cmp
sbb
pop
pop
add
add
ds
adc
add
xor
sbb
orb
pop
lods
insb
lea
add
add
jl
or
inc
aas
add
cltd
pop
or
add
outsl
push
cltd
sub
pop
and
cmp
sbb
adc
add
push
mov
test
sub
add
push
adc
mov
and
add
test
cltd
inc
inc
mov
jl
add
int3
or
pop
sub
or
outsl
sbb
sbb
add
ja
jmp
sbb
sbb
adc
pop
xor
sbb
test
or
adc
sbb
ds
das
and
adc
add
data16
lods
jae
add
inc
sbb
nopl
and
adc
dec
xchg
lea
into
jns
add
and
dec
mov
or
out
push
cmp
inc
add
or
daa
sbb
ja
pop
adc
lret
cmp
cwtl
push
push
jmp
sub
dec
or
and
inc
or
dec
sub
cmc
pushw
outsb
push
adc
or
mov
add
imul
dec
dec
mov
push
inc
and
insl
push
adc
push
pop
adc
iret
adc
mov
imul
cmpsl
or
das
push
sub
add
imul
ret
or
pop
xor
fwait
sub
fisttpl
sub
mov
cs
lods
adc
test
push
sbb
adc
jg
add
dec
inc
sub
or
add
add
jl
sub
and
and
sub
mov
xchg
or
subb
sbb
mov
sbb
jb
sub
sub
adc
sub
push
xchg
sbb
add
push
or
and
pop
push
rorb
add
stos
daa
and
sbb
ss
push
jo
push
push
and
xchg
pusha
xchg
mov
adc
jae
adc
adc
or
cmp
jl
dec
adc
jo
add
or
jnp
xor
add
add
pop
add
xorl
add
pusha
jns
or
je
leave
bound
push
sbb
adc
jg
sbb
and
add
pop
adc
pop
cmp
add
outsb
adc
dec
push
cmp
push
jmp
cs
sub
inc
or
mov
xor
add
add
pop
sbb
mov
add
push
add
push
push
sbb
inc
pop
jo
daa
adc
pop
pop
insb
add
dec
mov
ficoms
or
adc
movsb
add
push
add
or
adc
sub
add
push
cmp
or
adc
inc
ret
or
addr16
cltd
adc
jnp
and
dec
ds
and
adc
jp
sub
test
jae
jae
cs
add
mov
add
xchg
sbb
add
and
jbe
mov
pop
sbb
push
outsb
popa
roll
sub
ja
adc
xor
or
pop
or
pop
es
add
inc
sub
add
push
xor
pop
or
inc
sub
sbb
or
mov
sub
sbb
adc
ss
or
add
adc
push
fwait
ret
pop
xor
or
xor
ficoml
adc
add
push
jno
push
push
add
je
sub
add
lahf
sub
pop
sbb
and
sub
or
xor
add
pop
inc
add
or
jo
test
sub
pop
push
addr16
imul
add
jl
or
sub
and
lcall
scas
adc
test
cmp
and
rclb
adc
adc
inc
rcl
dec
pop
add
cmp
dec
mov
dec
jle
sbb
xor
xor
dec
push
xor
or
xorb
pop
add
add
ds
xor
or
cmp
scas
or
cmp
push
or
jno
cmp
rcrl
push
js
or
daa
push
sub
fisubrl
pop
cmp
xchg
and
add
inc
sbb
and
pop
push
add
add
xchg
cwtl
adc
adc
adc
add
ret
ss
daa
pop
daa
mov
add
gs
sahf
lods
or
xchg
jbe
pop
and
push
add
cs
dec
add
cmp
adc
or
sub
mov
lcall
and
fisttpll
or
adc
sub
data16
push
das
jno
pop
push
or
and
shlb
xchg
add
cmpsl
cmp
add
packuswb
pusha
dec
in
mov
and
push
inc
adc
inc
jge
pop
sub
lods
sub
sub
xor
add
rclb
ret
push
jns
nop
push
outsb
xor
push
push
sbb
and
add
popa
dec
xor
in
pop
rcrb
pop
lret
aas
sahf
mov
mov
leave
adc
sbb
mov
xor
sub
nop
add
push
sub
adc
push
jbe
and
das
adc
pop
addr16
lea
adc
daa
and
add
add
mov
add
dec
push
aaa
add
sub
add
inc
sbb
inc
push
sub
xor
add
outsl
pop
stos
adc
ja
test
lods
adc
push
adc
jp
add
jbe
sub
inc
out
pop
add
fs
or
mov
cmp
xchg
sub
xor
icebp
add
sysenter
dec
pop
push
sbb
popf
add
or
and
in
outsl
sub
add
es
cmpsl
or
add
or
inc
push
adc
les
add
xor
shrw
add
add
popl
push
addb
cs
adc
das
inc
push
dec
push
or
and
insl
cmp
or
mov
add
pop
les
and
mov
sub
sbb
repnz
pop
add
xor
add
xor
add
adc
cmp
popa
push
rol
xor
das
jg
adc
pop
push
add
push
sbb
cmp
scas
add
and
xor
daa
inc
or
mov
repnz
add
dec
or
aas
push
xchg
sub
inc
or
xor
sbb
je
fs
sbb
pop
xchg
movsb
add
push
and
add
aaa
add
push
mov
sbb
xor
mov
arpl
daa
push
or
add
sub
add
pop
adc
push
and
push
outsl
movsb
movntps
andl
enter
dec
and
arpl
pop
push
ds
xor
popf
push
xchg
add
pop
es
and
cmp
push
add
sbb
pop
roll
and
cmp
add
jnp
add
cmp
mov
push
mov
xor
or
addr16
push
add
inc
mov
ds
pop
mov
xor
mov
sbb
or
and
dec
or
sahf
add
jae
scas
cmp
inc
sub
sbb
add
cmp
scas
or
or
dec
and
adc
sbb
dec
sub
das
jge
sbb
dec
cmp
dec
pusha
adc
jo
add
push
jo
das
add
sbb
add
or
fisttpll
jnp
xor
sub
add
insl
sub
or
adc
and
push
pop
push
aad
add
sbb
cmp
xchg
addr16
imul
sbb
dec
pop
push
pop
adc
pop
das
dec
add
push
cmp
add
and
scas
pop
inc
sbb
xchg
cmp
sub
mov
addr16
pop
and
adc
inc
dec
pop
int
add
push
xor
sub
xchg
add
and
adc
add
add
adc
jno
inc
jbe
cmp
ja
adc
xchg
adc
xor
jo
or
push
add
test
inc
and
les
add
push
add
push
xor
jge
pop
add
vmread
sbb
sub
addl
es
sbb
sub
push
test
adc
add
add
or
and
jae
pop
sub
add
and
push
add
sbb
push
adc
lods
dec
inc
pop
aaa
and
outsb
sub
movups
sbbl
cmp
and
or
jp
stos
adc
and
pop
aaa
push
bound
or
add
adc
and
xor
insb
or
pop
or
adc
or
js
daa
sub
push
inc
mov
adc
aas
pop
push
inc
hlt
jo
push
sbb
jle
inc
in
inc
sbb
push
inc
mov
push
inc
jb
lret
or
xor
mov
xor
and
rcrl
mov
ss
lcall
push
adc
sbb
xor
cmpsl
sbb
xchg
lods
sbb
imul
lods
or
add
rorb
test
cwtl
mov
das
cmp
jae
xor
sarb
or
xchg
push
popa
jle
sbb
jbe
sub
push
push
orl
enter
push
test
cmovo
aas
adc
adc
adc
inc
sub
push
add
sbb
dec
add
add
and
xor
daa
inc
or
add
js
adc
inc
add
adc
inc
add
push
js
insl
inc
and
adc
add
mov
push
sub
xor
push
das
enter
push
add
sub
cmp
sub
adc
cwtl
inc
and
xchg
and
mov
sub
xor
adc
xchg
adc
xchg
repnz
dec
add
sub
xchg
pop
push
es
sbb
jg
pop
xchg
and
pop
add
pop
adc
add
and
xchg
es
xor
push
cmp
je
cmp
add
imul
pop
pop
mov
outsl
xor
daa
add
sbb
jae
cmp
cmp
jg
jge
dec
imul
add
jl
jbe
adc
dec
add
add
add
push
cmp
add
cwtl
pop
push
sbb
or
or
or
test
jecxz,pt
xor
movlps
mov
dec
add
and
add
inc
sbb
push
add
or
jno
jl
nop
cmp
and
push
pop
cmp
or
add
add
adc
dec
and
add
inc
dec
and
leave
pop
sbb
mov
add
lds
adc
in
adc
mov
cmp
add
push
and
push
xor
cmp
daa
mov
and
inc
jbe
jbe
xchg
add
mov
outsb
xor
inc
pop
or
mov
pop
and
push
add
add
ret
adc
mov
dec
or
dec
or
pop
mov
adc
jge
add
cmp
add
sbb
or
inc
or
jo
mov
xor
sbb
aaa
dec
add
push
sbb
xor
inc
insl
adc
push
sub
jg
aaa
jae
sbb
add
cmp
add
add
cmp
or
mov
lret
or
dec
comiss
or
xor
iret
sbb
dec
and
push
adc
cmp
push
xchg
adc
push
ja
dec
inc
and
ficomps
mov
push
or
or
daa
add
and
push
push
xor
sub
add
dec
outsl
cmp
sbb
sbb
cmp
add
xchg
adc
or
test
add
je
enter
and
mov
inc
sbb
add
xlat
dec
pop
sbb
pop
pop
add
push
bound
inc
push
pop
dec
cmp
fwait
pop
sahf
ja
adc
out
add
cs
and
cwtl
bound
outsb
aas
cmp
or
xchg
add
inc
pop
push
xorl
adc
adc
pushf
adc
cmova
xor
add
sbb
pop
or
adc
dec
adc
mov
jnp
or
sub
cmp
imul
cmp
dec
dec
adc
push
add
add
or
add
add
cmp
and
ds
adcb
popa
push
add
inc
and
cmp
push
push
pop
sub
fimull
mov
or
dec
jo
xchg
jbe
xchg
insb
das
stos
or
bound
pop
es
cmp
cs
mov
add
inc
or
outsb
cmp
xor
add
push
adc
adc
lds
cmp
mov
push
adc
sub
mov
mov
push
bound
xor
mov
or
push
jnp
or
and
jmp
push
sub
daa
dec
pop
or
jne
xor
inc
add
lds
push
add
fs
pop
pop
pop
or
adc
jle
pop
mov
add
pop
dec
sub
add
xor
outsl
inc
imul
sbb
push
inc
rolb
inc
jbe
push
dec
ja
pop
mov
add
pop
int3
sbb
pop
cmp
imul
and
aas
daa
movsb
sbb
cmp
pop
push
or
dec
or
dec
inc
mov
cmp
add
sub
or
cmp
xor
lea
pop
pop
push
stos
outsl
and
pop
add
jbe
punpcklbw
js
bound
xor
add
js
or
cmp
imul
add
pusha
or
ja
cmp
dec
mov
xor
push
xchg
outsl
add
cltd
inc
push
or
cmovle
push
or
sbb
sbb
insl
lea
jp
add
or
inc
ss
cmp
or
push
push
add
add
inc
mov
pop
inc
push
sub
push
and
and
push
pop
or
xor
add
pop
and
stos
add
xor
ja
xor
or
adc
sub
or
add
aaa
push
inc
pushf
ficomps
inc
xchg
dec
ds
cwtl
pop
or
sbb
mov
outsl
add
add
aaa
adc
inc
test
pop
add
add
test
jbe
adc
add
add
dec
inc
xor
pop
and
cmp
xchg
push
and
sub
adcl
sub
inc
push
adc
push
adc
or
push
add
add
sbb
pmullw
xchg
push
popa
sub
adc
dec
and
sbb
sub
adc
push
test
push
push
pop
push
add
and
inc
sbb
mov
lds
adc
or
and
pop
or
push
stos
dec
pop
xor
adc
cmp
inc
sub
push
je
pop
xor
mov
mov
imul
inc
xor
out
mov
pop
add
adc
add
push
or
insl
inc
cmp
xor
or
pop
add
add
pushf
cmp
sbb
dec
daa
or
or
inc
push
adc
pop
rclb
dec
and
adc
mov
ss
pop
or
int
add
add
mov
sbb
sub
and
pop
sub
sbb
push
imul
stos
adc
and
jbe
xchg
dec
pop
or
inc
add
ds
adc
pop
sbb
push
dec
mov
adc
scas
dec
lcall
adc
xor
dec
ficoml
adc
adc
pop
dec
sub
add
pusha
xchg
push
addl
cmp
add
adc
cmp
jo
sub
or
adc
inc
in
daa
sub
adc
lahf
add
add
insb
add
xchg
pushf
cmp
imul
jb
pop
push
or
xor
sbb
push
push
add
and
xor
jle
add
cmp
push
or
lds
pop
adc
adc
adc
add
push
dec
jge
add
pop
mov
inc
dec
outsb
rcrb
sub
xor
dec
shrl
daa
or
stos
mov
push
pop
dec
sbb
and
push
add
xor
mov
pop
unpckhps
and
and
add
dec
add
pop
sbb
ss
pop
dec
lock
mov
adcl
push
bound
dec
imul
add
add
adc
sbb
and
sbb
cmp
add
or
cs
daa
in
add
insb
xor
sbb
sub
add
and
dec
xor
cs
addr16
inc
push
add
xor
adc
or
push
cwtl
adc
out
adc
push
adc
aaa
xchg
or
sub
adc
xor
sub
add
das
add
xor
xor
daa
dec
push
sbb
and
xor
adc
add
push
inc
add
xchg
xor
dec
or
adc
movsb
push
dec
out
xchg
gs
sbb
repnz
and
push
addl
add
mov
xor
push
imul
pop
or
pop
push
pop
inc
sbb
dec
pop
adc
adc
imul
push
pop
and
or
bound
pushf
sub
push
inc
and
push
adc
cmp
imul
add
add
or
dec
cmp
add
sbb
cmp
dec
cmp
sub
imul
cmp
cmp
and
pop
adc
jno
adc
push
push
ja
dec
sub
test
and
pop
or
sub
sub
inc
sub
add
cmp
inc
dec
aas
push
and
sbb
or
add
or
or
adc
adc
addr16
pop
add
dec
sub
outsb
sbb
add
inc
data16
sbb
insb
sbb
push
add
dec
or
pop
pop
jno
pop
test
add
jle
ja
pop
add
or
jae
or
das
cwtl
and
and
lea
sub
out
cmp
xor
mov
das
fdivrs
push
xor
add
adc
push
sbb
test
xchg
imul
cmpsl
mov
jl
push
push
adc
sbb
xor
rcll
cmp
and
inc
outsl
add
inc
sub
fisttpl
cmovg
sub
pop
add
jnp
add
inc
bound
pop
dec
sub
cmp
add
lds
add
movsb
ret
add
roll
popa
push
inc
xchg
test
sbb
adc
or
pop
sbb
inc
sbb
push
add
jnp
xchg
adc
jne
es
sub
dec
cmp
adc
push
add
pop
jbe
and
add
mov
dec
push
add
add
bswap
cmp
sub
or
popa
sbb
pop
daa
inc
sbb
push
dec
cmp
dec
imul
pop
push
enter
inc
sbb
add
cmp
pop
jnp
mov
dec
popa
or
cmp
cmc
sub
dec
push
and
push
xchg
inc
add
pop
pop
sub
and
push
and
add
add
cmpb
sbb
lods
xor
adc
repz
sub
imul
cwtl
pop
fs
pop
mov
add
add
inc
add
sbb
aas
sbb
inc
xor
add
and
xor
pop
sbb
push
push
add
pop
das
daa
aas
or
cmp
sub
lret
xor
or
add
push
and
or
sbb
adc
add
add
add
pop
cmp
stos
and
sbb
or
push
or
jle
loope
cmp
cwtl
mov
push
adc
test
add
push
xor
add
mov
arpl
xor
pop
jp
add
xor
add
imul
stos
mov
fwait
gs
cs
dec
xor
pop
sub
add
push
add
xor
cmp
mov
or
lea
das
gs
adc
gs
add
or
push
add
adc
cmp
or
adc
cmp
xor
push
or
sbb
adc
xor
or
fwait
add
or
add
bound
adc
imul
xor
jg
xor
cmp
pop
or
cmp
cmpsl
sbb
cmp
jne
xorb
push
and
cmp
add
inc
dec
pop
add
imul
adc
or
mov
or
mov
inc
data16
sbb
inc
adc
push
add
cmpsb
pop
xchg
andl
add
adc
add
insb
sbb
mov
or
add
sbb
and
sbb
aaa
xor
xchg
pop
aaa
xor
shrb
pop
jbe
sub
outsl
inc
push
push
add
and
mov
add
mov
pop
xor
and
adc
movsb
add
xchg
je
or
mov
addr16
dec
jae
dec
outsl
sub
dec
push
add
jle
xor
mov
xor
inc
outsl
inc
push
mov
adc
or
or
dec
add
leave
and
sub
sbb
ficomps
push
push
sbb
sub
sub
pop
or
aaa
jbe
push
xor
add
ss
pop
or
and
sub
add
dec
pop
add
inc
out
add
push
pop
xor
pop
jbe
sub
add
sbb
or
inc
push
and
pop
dec
imul
imul
push
dec
pop
pop
jno
sub
dec
or
sub
jne
pop
pop
pop
mov
popf
ss
cmp
sbb
sbb
mov
fdivrl
fldenv
pop
pop
push
cmp
sub
add
cs
add
pop
ja
lret
sbb
dec
cmp
pop
add
pop
sbb
das
sbb
sub
push
xor
es
add
add
adc
or
or
sbb
push
push
adc
push
test
es
add
add
sub
xor
daa
inc
sbb
pushf
or
jecxz
add
add
or
or
pop
sbb
and
xor
push
sbb
jp
cmp
add
cmp
pop
inc
test
or
shlb
xor
and
or
pusha
add
add
jnp
add
popa
adc
sub
xchg
insb
movsl
adc
les
and
cmp
cmp
aaa
sub
adc
adc
add
jl
ds
bound
add
adc
mov
add
inc
adc
cmp
or
jbe
stos
sub
sbb
fs
or
inc
cmp
cmp
dec
sbb
jbe
sub
xor
add
add
push
cmp
das
push
xchg
inc
mov
xchg
xor
jl
jne
push
add
or
or
shrd
cs
loopne
add
gs
and
test
add
add
jg
es
aas
and
icebp
inc
cmp
add
cs
pop
xor
imul
pop
movsl
jg
dec
dec
inc
inc
xchg
scas
dec
and
jae
or
and
adc
push
and
ret
and
or
jp
xor
aaa
inc
pop
cmpb
testb
push
dec
imul
or
movsb
daa
movsb
xchg
xor
mov
mov
aaa
cmp
dec
cmp
or
rcrb
adc
or
arpl
sahf
pop
adc
fstpl
push
je
cmpsb
push
and
jge
cmp
sbbb
jae
dec
rorl
xor
add
dec
push
push
sahf
pusha
or
xor
push
mov
add
cmp
lret
jge
inc
and
das
pusha
addb
adc
cmp
setno
or
adc
pop
or
add
push
lcall
or
sbb
or
sub
cmp
inc
dec
addb
das
andl
or
xor
add
sbb
or
add
pop
js
sbb
or
inc
jge
mov
mov
pop
xor
scas
push
sbb
ja
push
int
and
dec
pusha
push
jl
mov
sbb
je
pop
or
aaa
add
cmovs
sub
movq
jb
push
cmp
bound
inc
jo
es
inc
add
sbb
pop
je
popl
or
or
push
adc
xor
ret
push
jbe
add
aaa
mov
scas
add
or
add
xchg
or
rclb
pop
add
sbb
add
sub
lds
cmp
or
sbb
add
add
or
sbb
pop
and
adc
pop
aaa
add
comiss
push
adc
push
push
and
inc
jnp
sbb
pop
and
dec
arpl
and
iret
and
fdivrs
jle
xor
or
imul
pop
pop
or
test
add
and
or
push
push
add
rcrl
add
ja
adc
sub
or
sbb
cwtl
add
sahf
insl
xor
adc
xor
pop
push
xchg
sbb
or
jae
and
cmp
push
xor
js
adc
dec
test
sub
cmp
adc
add
xchg
sbb
or
sub
add
adc
or
outsl
sub
pop
sbb
sub
sub
insl
add
insl
adc
or
push
sbb
xor
or
bound
add
addr16
mov
das
cmp
adc
xor
xor
pop
or
scas
add
pop
add
dec
add
daa
das
jge
dec
pop
and
push
or
jp
adc
push
push
outsl
mov
sub
femms
and
add
imul
push
shlb
push
adc
or
cmp
sub
xor
dec
pop
and
bound
fwait
push
add
jnp
mov
sbb
or
or
mov
je
dec
mov
add
pop
xor
les
es
push
fidivs
or
sbb
pop
test
sbb
add
add
adc
aas
xchg
or
inc
add
jb
add
or
sub
sub
sbb
jbe
push
or
or
cmp
or
mov
dec
cmp
aaa
push
push
add
add
push
adc
push
aaa
jnp
mov
inc
add
inc
adc
add
or
fs
mov
push
bound
les
mov
sbb
ja
inc
adc
and
adc
add
or
popa
add
inc
and
cmp
cmp
cmp
pop
fmul
adc
jl
xor
add
sbb
cmpl
add
arpl
sub
push
cs
or
add
adc
iret
push
mov
or
inc
movb
sub
inc
push
sub
pusha
and
or
pshufw
sbb
push
sub
in
sbb
mov
cmp
add
jo
sub
inc
cs
add
add
add
xchg
sbb
sbb
or
mov
add
push
xchg
xor
or
xor
sub
mov
and
jge
add
xor
popa
mov
cmp
dec
adc
push
mov
cltd
mov
adc
mov
mov
cmp
and
sbb
xchg
pop
aas
and
adcl
pop
pop
es
pop
push
mov
inc
pop
adc
dec
arpl
add
jp
sub
add
inc
inc
sbb
es
cmp
sub
add
cmp
cs
pop
jge
mov
inc
aas
sbb
push
and
adc
cmp
daa
add
pop
and
sbb
and
cltd
push
sbb
xor
pop
add
sbb
lds
out
add
and
xchg
add
into
jo
xor
phaddsw
and
fstpt
adc
or
sub
or
cmp
add
add
add
roll
xor
inc
inc
or
gs
cmp
xchg
xor
jp
add
or
jae
push
sbb
sub
or
add
pop
sub
mov
sbbb
scas
push
add
dec
push
dec
and
outsl
and
push
cs
andps
dec
xchg
sub
dec
push
sbb
cmp
adc
and
or
mov
or
and
inc
inc
test
adc
loope,pn
adcb
xor
or
add
es
sbb
dec
pop
jns
sub
pop
push
popa
add
push
movsb
add
mov
adc
push
push
or
add
or
push
adc
mov
dec
inc
sub
or
add
cmp
sbb
add
adcb
or
or
pop
sahf
and
jbe
push
add
push
je
addr16
mov
mov
mov
xor
push
mov
xor
xor
add
push
das
insl
add
pusha
xor
push
call
adc
lea
sbb
inc
sysexit
xor
add
inc
ja
add
cmpb
xchg
sbb
or
push
dec
or
cmp
xchg
sub
cmp
ret
and
and
cmp
and
sub
mov
inc
sbb
push
xchg
pop
mov
push
int
nop
xchg
aaa
cwtl
sbb
mov
push
cmp
or
cmp
fimull
cmp
fcomps
inc
movsb
xor
sub
pop
inc
addr16
stos
adc
mov
es
mov
mov
int3
mov
sbb
push
or
adc
dec
pop
inc
xor
mov
adc
sub
sbb
push
jno
sub
push
or
inc
lea
push
xor
add
cmp
orl
sahf
jo
or
pop
pushf
popa
sbb
mov
xchg
push
add
push
pop
ret
xchg
push
pop
aas
push
daa
pop
add
inc
and
movq
lea
xor
add
push
adc
jmp
and
pop
add
adc
imul
inc
add
pop
mov
cmp
addb
sub
and
and
test
and
and
adc
add
and
or
mov
add
mov
mov
adc
sbb
sbb
jae
sbb
adc
push
mov
dec
sbb
xor
and
add
pop
jno
xor
mov
dec
add
cltd
outsl
mov
mov
pop
push
push
dec
cmp
or
adc
pop
and
pop
es
and
push
mov
and
lds
adc
xor
mov
aaa
stos
or
jae
sub
packuswb
add
or
aaa
jnp
push
aas
cmp
pop
adc
add
or
xchg
adc
lret
sbb
add
push
push
cmp
add
arpl
add
xchg
add
sbb
inc
push
xchg
adc
sahf
fimull
sahf
outsb
dec
sub
add
or
sub
adc
mov
sarb
popa
adc
aaa
pop
add
add
inc
cmp
cmpsl
pop
add
push
cmp
or
pop
jb
or
push
pop
lahf
add
pop
sub
mov
or
cltd
add
cmp
xor
or
jb
pop
sbb
sub
xchg
sub
and
dec
sub
sub
jo
or
or
insl
cmp
or
stos
aaa
roll
or
inc
pop
add
sbb
wbinvd
leave
add
inc
cs
inc
cmp
or
add
or
add
cmp
push
int3
jge,pn
stos
add
mov
outsb
adc
mov
add
xor
add
dec
pushaw
or
jecxz
push
xor
push
and
jbe
jg
and
add
add
xchg
push
mov
aas
or
pop
xchg
andl
sub
cmp
sub
cmp
sbb
add
add
push
cmp
outsb
xor
sub
dec
imul
and
shrb
mov
and
xor
xchg
insl
push
adc
jo
sbb
inc
adc
add
add
push
pop
push
or
add
pop
xchg
inc
jbe
sub
xor
sbb
addr16
add
cmp
imul
sbb
and
or
adc
or
pop
or
and
adc
push
jo
push
jb
or
push
add
push
scas
sbb
xor
jbe
add
add
and
or
and
adc
outsb
bound
or
dec
cmp
add
or
dec
movsl
add
aas
bts
mov
sbb
sub
and
adc
jle
pop
es
or
sbb
push
add
or
push
xor
push
cmp
push
pop
jno
ja
or
pop
adc
adc
adc
addr16
test
push
cmp
xor
xor
pop
pop
inc
pop
and
xor
sbb
mov
lahf
out
adc
test
push
sub
dec
orb
sub
sbb
outsl
sub
aaa
cmp
adc
daa
or
imul
add
mov
sbb
push
das
push
mov
add
stos
push
xor
pop
adc
sbb
xor
and
out
sub
insl
xor
mov
outsb
ja
or
mov
lods
pop
bound
or
sub
adc
inc
lea
sbb
add
inc
sub
inc
dec
xor
or
jno
adc
cmp
or
push
inc
dec
push
add
sbb
sbb
push
jae
xchg
dec
outsb
sub
pop
or
dec
adc
inc
cmp
or
and
xchg
adc
sbb
arpl
adc
push
mov
push
xchg
xchg
xor
add
push
and
push
push
imul
add
mov
jp
or
xchg
jns
dec
push
sbb
inc
cmp
cwtl
add
and
cmp
push
cmp
dec
aas
inc
sub
xor
pop
push
add
bound
and
or
inc
ret
inc
ja
xchg
insb
jp
or
dec
xchg
adc
xor
sbb
pop
int3
outsl
lods
add
pop
addr16
push
gs
adc
outsl
adc
aas
jns
ds
cmp
sbb
sub
imul
sub
movhps
outsl
or
mov
mov
sbb
mov
sbb
inc
add
and
fwait
adc
adc
or
insl
dec
inc
add
lahf
and
add
push
inc
das
xor
repnz
push
xor
add
add
inc
sbb
jle
jne
dec
add
add
and
mov
add
daa
loope
das
sbb
or
and
pop
cmp
inc
xor
xor
pop
add
insb
or
sub
xchg
sub
xor
mov
das
inc
xor
jp
pop
add
mov
cmpsb
add
cmp
push
imul
xchg
or
push
or
shlb
add
cmpl
and
cltd
sbbb
lcall
pop
push
cmpsl
dec
and
push
mov
push
cmp
inc
add
adc
pop
pusha
adc
aam
sub
sbb
add
push
or
movsb
push
sbb
adc
lcall
xor
add
sbb
jae
pop
cmp
add
dec
pop
push
inc
jno
or
or
cmp
mov
add
iret
sbb
jp
gs
mov
inc
jle
add
xor
shrd
add
sbb
sbb
pop
mov
or
add
or
push
mov
inc
aas
or
add
add
lds
mov
enter
inc
mov
sbb
add
or
add
adc
or
push
mov
pop
add
jae
sbbb
or
push
and
insl
mov
add
adc
push
add
jb
packuswb
ds
ds
jb
or
mov
das
add
aaa
xor
xchg
sub
or
inc
popf
inc
adc
sub
push
push
mov
jnp
or
push
int3
or
pop
xchg
pop
or
inc
add
fadds
pop
jnp
mov
add
push
inc
xchg
mov
xor
push
js
in
adc
and
sbb
insb
dec
mov
inc
adc
dec
pop
push
test
jb
pop
add
inc
ss
jg
stos
add
mov
or
add
cmp
jle
fstpt
or
add
add
lcall
adc
jno
cmpsl
pop
add
mov
jo,pt
pop
add
inc
cmp
sub
outsb
dec
sbb
adc
add
or
or
jle
mov
sbb
add
and
mov
inc
or
js
xor
data16
push
adc
or
add
lods
pop
daa
push
add
or
mov
dec
sub
insl
adc
test
push
ret
addr16
jle
jo
adc
adc
xor
jp
push
mov
and
inc
or
add
add
or
add
adc
and
dec
sub
enter
xchg
lods
add
es
inc
jg
xor
dec
dec
sarb
and
add
jmp
adc
sub
and
popw
or
or
add
adc
pop
inc
jnp
pop
sub
inc
fwait
or
inc
push
jp
adc
pop
sbb
mov
fmull
mov
cmp
and
adc
push
scas
mov
sbb
add
add
adc
pop
push
mov
and
inc
aaa
xchg
pop
xchg
push
adc
adc
and
xor
push
sbb
or
add
xchg
dec
sbb
shlb
jns
push
dec
push
lahf
jne
addr16
sub
inc
sbb
pop
inc
mov
or
sbb
stos
inc
add
sub
pop
jl
inc
push
aad
push
sbb
jo
inc
pop
fcom
sbb
jo
mov
jnp
add
leave
add
add
jb
nop
bound
dec
cmp
pop
push
scas
pop
or
and
cmp
sbb
or
add
add
aas
adc
push
add
outsl
cmp
or
or
sbb
or
imul
dec
pop
push
sbb
sub
cltd
xor
sbb
adc
push
adc
pop
push
add
sbb
jl
pop
cmp
cmp
and
js
jge
insl
and
push
and
adc
stos
push
add
mov
pop
or
jno
xor
push
jg
or
adc
cmp
cmp
imul
cmp
pop
sbb
pop
add
adc
push
mov
and
mov
xor
sbb
orb
add
cmp
dec
and
dec
push
add
and
adc
add
add
add
adc
inc
sbb
mov
movsb
push
push
push
add
mov
js
rorl
sbb
adc
mov
adc
dec
mov
and
add
and
sbb
push
adc
add
inc
sbb
cmp
sub
dec
mov
add
dec
cmpsl
add
out
pop
sbb
dec
push
ds
jle,pn
imul
add
xor
push
add
dec
ret
or
pop
cmpsl
adc
push
or
add
or
daa
add
and
inc
or
xor
cmpsb
push
or
pop
jns
bswap
dec
mov
adc
inc
or
pusha
push
aas
sub
sub
push
into
pusha
insl
ss
outsb
outsb
cs
sbb
sbbl
add
xor
push
inc
adc
adc
or
xchg
pop
add
adc
mov
adc
add
mov
roll
aaa
pop
jae
movsl
inc
and
sbb
pop
das
dec
inc
add
inc
arpl
pop
sbb
or
cmp
das
movlps
dec
or
jle
cmp
push
dec
or
sbb
jb
mov
pop
xchg
fs
sbb
dec
jno
sbb
xchg
sub
push
cmp
rolb
xor
scas
add
inc
adc
or
adc
stos
push
bound
add
pop
and
adc
push
or
ss
cmpsb
cmp
and
xchg
addl
push
cmp
or
sub
imul
jnp
lcall
sbb
cmp
add
adc
sub
pusha
or
and
ds
daa
pop
dec
adc
outsb
inc
arpl
push
outsl
xchg
add
adc
and
sbb
lcall
pop
sub
push
cmpsl
xorb
adc
mov
pop
mov
ja
mov
xor
or
imul
and
xchg
dec
and
movzwl
sub
sbb
test
dec
pop
sub
or
and
add
add
sub
dec
imul
adc
and
push
and
pop
and
arpl
adc
xchg
adc
or
add
dec
sbb
sbb
pop
pop
adc
or
push
sbb
jp
dec
or
bound
sub
push
or
add
or
call
add
or
jp
add
inc
sbb
jge
sbb
daa
insb
jno
das
adc
push
push
sbb
insl
add
es
add
inc
push
bound
popa
xor
xor
or
sbb
das
xor
pop
add
mov
ja
rdtsc
inc
add
push
mov
dec
adc
or
add
and
add
sub
scas
daa
cmp
push
add
jns
push
inc
adc
lock
or
adc
adc
or
insb
test
cmp
push
and
xor
add
aas
pusha
xchg
or
add
and
push
pop
movsl
xor
test
sbb
pop
add
inc
sbb
das
or
add
add
mov
mov
mov
adc
cmp
adc
add
and
xor
shrb
push
pop
add
pop
add
adc
popa
sbb
adc
adc
fisttpl
adc
and
or
sbb
test
pop
adc
dec
cmp
cmp
dec
or
and
jne
inc
or
or
or
addl
dec
and
add
or
dec
inc
pop
push
xor
or
and
push
or
dec
sbb
xor
inc
sub
mov
jno
pop
aaa
dec
or
xchg
cs
xor
lods
or
or
sub
or
sub
add
or
js
and
sub
push
add
inc
sbb
push
or
es
stos
daa
xor
and
cmp
cmp
dec
lar
jg
add
je
xchg
or
push
lock
jo
mov
cmp
or
cmp
adc
sub
cltd
adc
add
adc
mov
inc
sbb
and
sbb
sub
sahf
pop
add
pop
and
add
stos
jg
push
sbb
cmp
add
sbb
add
add
or
mov
call
xlat
mov
dec
add
push
push
add
mov
leave
ret
xor
mov
xor
or
sub
add
push
xorb
cmp
fisubrs
not
neg
mov
jmp
fwait
outsl
xor
cli
ret
cmp
or
jbe
cmp
add
or
sbb
outsb
adc
add
cmp
inc
decl
fbstp
mov
mov
pop
loopne
add
lock
jg
pusha
cwtl
pop
ds
es
cmp
neg
dec
in
mov
or
int3
inc
add
inc
dec
cmp
je
not
leave
sub
lods
std
leave
not
ret
neg
stos
sub
fcmovne
std
decl
xor
push
lea
push
pushl
add
outsl
imul
and
andb
cmp
pop
push
imul
and
addl
stc
dec
adc
incl
jle
push
sub
push
sub
xor
mov
inc
jne
cwtl
cmp
or
add
shrb
filds
xor
repz
jg
lret
outsl
xor
inc
scas
sub
push
je
or
ja
incl
daa
push
daa
fs
add
jo
inc
add
adc
stc
sbb
in
lcall
jo
pusha
add
add
adc
orb
mov
jg
mov
daa
sbb
mov
jmp
push
inc
mov
das
mov
xchg
push
add
incl
or
adc
adc
push
xor
mov
nop
cmp
push
inc
lock
cmpl
mov
push
mov
das
clc
push
or
add
adc
std
ljmp
or
xchg
add
sar
loope
push
push
jne
je
nop
pop
stc
mov
dec
adc
jge
std
jmp
adc
jl
add
nop
xor
and
push
pop
jle
inc
pusha
cmp
loope
push
mov
testl
dec
inc
cmp
jecxz
jbe
inc
incl
lea
push
push
mov
in
adc
push
xor
repz
lcall
dec
xchg
pusha
jl
inc
loope
daa
jo
pusha
or
push
icebp
mov
test
push
push
or
dec
mov
std
fcmovne
lahf
sub
adc
faddl
add
mov
push
adc
cld
jle
sbb
add
pushf
fstpt
pop
test
push
or
adcl
inc
decl
sub
jge
out
push
fs
pop
nop
adc
jb
fistpl
outsb
int
aas
inc
bound
or
or
dec
mov
push
add
into
shll
jmp
sub
dec
inc
jmp
dec
lods
push
in
dec
add
adc
jae
roll
and
sub
dec
inc
push
push
mov
addr16
dec
fistl
les
gs
insl
push
jno
repz
push
incb
inc
bound
call
or
clc
sbb
pusha
cmp
popa
inc
shll
and
or
add
cmp
faddp
lea
xlat
mov
clc
dec
jbe
ss
dec
mov
sti
fcomi
decl
inc
ret
clc
jne
sbb
xchg
jae
cld
and
sar
pop
clc
fisttpll
add
gs
dec
test
ja
cli
decl
ss
xor
dec
dec
push
xor
in
test
dec
push
xor
adc
jae
call
adc
xor
inc
cmp
inc
adc
xchg
fstpl
adc
push
in
sub
lcall
and
pusha
xor
and
sbb
xor
add
das
divl
inc
add
gs
in
mov
add
test
pushw
sahf
popf
cld
or
int3
mov
jns
inc
push
and
pop
idiv
lret
push
jecxz
pop
and
fcoms
shrb
das
in
fwait
in
jns
sub
repnz
outsl
int3
push
and
aas
repnz
pusha
adcl
incl
sbb
bound
or
xor
push
add
mov
xor
jb
ror
mov
stc
inc
js
int3
aam
int3
iret
int3
cmp
idiv
rep
bound
dec
push
pop
lock
enter
xor
int3
mov
jo
push
xorb
in
xor
add
popa
jg
cli
int3
cli
and
push
push
fmull
push
mov
mov
jg
das
in
pop
and
fwait
out
loopne
or
jne
std
out
nop
sarb
int3
pop
adc
xor
ss
add
mov
std
dec
int3
add
int3
outsl
sbb
and
out
outsl
or
pop
cmp
and
sbb
int3
lods
dec
enter
xlat
adc
or
leave
call
pop
or
andl
xchg
int3
dec
idiv
fnstcw
test
cmp
scas
add
icebp
repnz
cmp
in
gs
je
or
push
cmp
dec
fidivs
dec
jns
cltd
lds
xchg
dec
out
cld
mov
push
cmpsl
push
dec
std
inc
mov
pop
sti
or
int3
adc
int3
jle
push
nop
out
jmp
pop
add
outsl
dec
pop
in
cmp
or
mov
cli
mov
int3
jg
mov
pmulhuw
push
adc
sub
or
xor
lahf
or
cmp
popa
out
jnp
fistpll
pop
pop
and
push
bound
push
aas
hlt
push
adc
xor
sti
addb
adc
add
mov
add
cmp
pusha
mov
lret
in
outsl
pop
dec
push
fidivs
aaa
daa
in
or
sahf
test
fsubrp
pop
lods
pop
sub
sbb
shr
push
add
jbe
int3
test
add
filds
xchg
sbb
outsb
ficomps
or
hlt
int3
ficompl
in
leave
incb
test
push
je
jno
in
mov
daa
inc
sahf
jle
pinsrw
dec
xchg
lret
inc
jo
jne
in
lock
and
cmp
loope
jl
int3
cltd
mov
cmp
sub
clc
xchg
aas
in
add
movsb
xor
arpl
jno
in
gs
pop
pop
lahf
dec
mov
ucomiss
sbb
insl
lea
mov
popf
xor
jg
ror
lea
imul
push
into
fld
push
mov
fistpl
sar
ret
outsb
push
or
jecxz
sub
sub
or
mov
or
adcb
cmp
pop
mov
xchg
sbb
adc
outsl
cmp
add
pop
int3
pusha
cld
popa
aas
and
xlat
xchg
jae
bound
and
addr16
sbb
mov
add
xor
and
mov
in
in
orl
mov
fistl
add
mov
and
pop
pop
mov
adc
add
fwait
xor
leave
cltd
push
in
or
popf
cld
mov
fs
faddp
inc
or
das
in
outsl
and
and
mov
test
inc
idivb
pusha
xchg
test
mov
int3
jp
mov
mov
shrb
sbb
sti
rclb
mov
pop
cmp
cmp
insl
cmpb
stc
push
and
jns
jmp
jae
sbb
adcb
adc
in
sbb
roll
cmp
push
aas
sbb
ficoms
cmpb
popa
sub
push
popa
mov
orl
adc
xor
out
in
leave
pop
orl
or
jp
or
fdivrs
sbb
jae
mov
adc
ss
or
xchg
daa
and
mov
rcll
mov
out
sti
mov
mov
add
mov
mov
jg
int3
push
insl
jne
and
popa
adc
cwtl
test
mov
and
and
shld
je
test
mov
loop
repnz
clc
add
xor
icebp
sub
sbbb
incb
pop
adc
rcrb
or
shlb
mov
mov
inc
stos
jns
pop
sbb
add
xor
lahf
insb
mov
push
add
dec
lahf
add
adc
popa
xchg
xchg
scas
es
stc
bt
leave
loope
in
add
ja
mov
jo,pn
xchg
outsl
pop
jns
arpl
xor
jg
inc
push
cmp
add
pop
xor
push
push
cmpsb
jnp
adc
add
fdivs
je
outsl
cmp
aam
orl
mov
mov
scas
sub
loop
push
sbb
leave
lahf
or
xchg
jg
pop
mov
fsub
mov
pushf
cld
inc
popa
pop
sbb
into
push
mov
mov
xchg
daa
adc
sub
pop
sti
mov
push
push
clc
xorl
out
mov
and
lcall
enter
je
lods
sarb
jmp
xchg
lahf
nop
mov
lods
mov
push
inc
call
xor
and
pop
movsb
xchg
adc
ret
js
nop
add
dec
push
inc
xchg
shlb
sbb
or
in
das
fwait
adc
das
cld
inc
loopne
or
cmp
jnp
test
inc
pop
or
popa
dec
add
das
sbb
inc
sbb
xor
ret
cs
push
js
in
or
adc
dec
out
or
movsb
xchg
mov
cwtl
push
mov
bswap
pop
dec
mov
fwait
test
sahf
cld
nop
xor
sub
ret
fimull
lock
adc
test
pop
xor
jecxz
inc
mov
inc
decb
mov
je
xor
data16
mov
push
inc
int3
subb
movsl
pop
sub
adc
adc
out
jp
push
jb
fadd
xchg
sbb
sbbb
pushl
cmp
testl
insl
jno
fwait
push
scas
add
lock
sahf
popl
enter
xchg
or
stos
mov
xor
inc
push
scas
lea
dec
and
pop
adc
or
jle
fidivrl
inc
push
push
inc
push
sub
je
inc
jbe
add
data16
mov
dec
ds
cmp
sub
pop
pop
xor
in
and
add
push
jbe
ficoml
pshufw
mov
test
or
jnp
mov
mov
adc
and
movl
popa
cmp
or
sub
pop
ret
imul
sbb
and
bswap
movntq
fistpl
and
push
mov
jae
test
jg
lahf
or
lret
fmuls
push
jmp
scas
sub
pop
mov
iret
push
or
cltd
das
scas
pusha
adc
pusha
pop
xchg
imul
xchg
and
repz
dec
cld
sbb
loopne
adc
sub
adc
mov
adcb
mov
xor
mov
adc
sub
cmc
mov
popa
ljmp
xchg
cld
push
scas
pushf
insb
jb
add
push
xchg
loopne
in
cld
test
insb
xchg
test
mov
mov
sbb
add
pop
pop
xor
xchg
and
repnz
lret
and
pop
aas
in
popa
insl
faddl
aas
addps
sbb
sub
inc
cmc
arpl
inc
adc
sbb
es
stc
das
cmpl
adc
dec
loopne
arpl
xchg
push
push
xor
popf
lock
xchg
rcll
pop
out
or
out
mov
xchg
pop
xchg
ret
cmp
inc
insb
add
push
movsb
and
mov
cmp
push
imul
imul
add
scas
incb
cmpsb
jge
and
pushf
xor
cmp
pop
mov
in
xchg
out
pop
pop
mov
or
xchg
add
enter
and
fnstsw
mov
insl
roll
insb
in
repnz
jge
adc
xchg
js
push
mov
out
in
inc
xor
orl
jg
xchg
cmpsl
loop
lds
cmpl
shlb
testl
inc
push
mov
xchg
mov
dec
or
out
adc
mov
add
push
or
xlat
andb
test
idivl
xchg
popf
in
imul
shr
lods
push
repnz
popw
sarb
add
sbb
out
leave
and
lock
mov
cli
in
push
pop
mov
mov
pop
jo
mulps
arpl
or
aam
xor
jp
xor
push
mov
movl
xchg
jge
xor
iret
cmp
or
cs
pop
jmp
fsub
dec
push
clc
add
push
cmpsl
sbb
rorb
pop
outsl
divb
loopne
jbe
pop
lret
enter
jmp
stc
and
fisttps
cs
pop
aad
sbb
add
or
fwait
js
or
mov
shrb
or
cmp
jg
jo
jmp
sbb
mulb
int3
pop
int3
ret
jp
xchg
cmp
testb
cmp
xor
mov
inc
cs
sbb
out
sbb
jg
inc
inc
mov
arpl
inc
pushf
jl
aad
xchg
jns
inc
clc
imul
mov
pop
cmp
xchg
push
ret
nop
mov
jbe
jp
dec
popf
adc
pop
jmp
and
lods
rclb
lea
and
std
cmc
imul
pop
and
add
leave
popa
jge
xchg
add
jb
addb
inc
mov
cmp
mov
daa
insb
jmp
loop
mov
push
lahf
movsb
pop
pop
cmp
and
xchg
push
jl
cmc
dec
imul
lret
xor
dec
fsubp
mov
xchg
xchg
sbb
test
dec
jg
pop
shlb
in
shlb
cmp
in
cld
sarl
test
push
xchg
adc
shr
pop
popl
inc
das
lock
jbe
cwtl
adc
dec
nop
pushl
mov
or
add
cmpsb
test
jno
jle
mov
adc
dec
or
push
xlat
les
and
add
cwtl
adc
out
add
sahf
cli
fistpl
and
cmp
adc
xor
mov
imul
in
jne
outsl
popa
ss
jne
adc
mov
inc
sahf
jl
adc
inc
js
pop
test
stc
stos
mov
jnp
mul
pop
pop
dec
xchg
stc
daa
test
ja
inc
mov
dec
repnz
inc
push
or
pop
jle
adc
jecxz
mov
data16
jmp
or
std
inc
incb
mov
outsl
sub
lods
xor
in
cli
or
stc
push
mov
loope
cs
push
xor
mov
daa
clc
add
adc
sahf
jbe
std
and
jbe
jmp
xor
mov
xchg
popa
out
push
jmp
es
pushf
pop
clc
or
jle
hlt
cmp
push
imul
sbb
fwait
in
jnp
xor
jmp
jne
fildll
fisttps
out
adc
and
mov
outsb
ret
stc
add
test
xchg
gs
lahf
and
add
add
pop
sbb
jo
cmpb
pushf
mov
add
or
rcl
xchg
jno
mov
neg
jne
nop
loop
fistpll
sbb
iret
into
lcall
cmp
xor
aas
clc
out
dec
ss
jno
stos
in
jmp
sub
or
out
mov
mov
pop
popf
or
mov
sub
clc
iret
cmpsb
push
pop
jp
and
add
pop
imulb
dec
pop
ret
add
aaa
mov
and
mov
int3
ss
sti
or
push
pop
add
sbb
and
add
and
dec
lods
adc
int3
jns
icebp
loopne
mov
cmpsb
cmp
dec
dec
test
arpl
push
mov
xchg
xchg
jecxz
xchg
mov
sbb
and
test
push
xor
push
mov
jbe
nop
outsb
sbb
jecxz
mov
adc
fdivrs
nop
xchg
or
popa
es
inc
push
sahf
jg
push
mov
or
lock
test
repnz
mov
xchg
div
xchg
xor
push
sbb
inc
adc
mov
xchg
lcall
adc
gs
hlt
cli
jg
dec
sub
push
mov
dec
ljmp
sbb
and
jge
add
sbbb
out
cld
push
out
pmulhuw
faddl
dec
cmp
push
cmpsb
in
enter
cwtl
dec
int3
shrb
xchg
popf
nop
mov
icebp
sbb
popa
in
movq
std
and
mov
sub
mov
mov
cmp
aas
mov
out
or
sub
leave
pop
es
or
push
adc
inc
incl
cld
outsb
jg
aas
lcall
sbb
or
ret
sbb
enter
mov
add
adc
push
push
in
pop
and
pop
incb
ljmp
mov
jge
push
lret
rcr
jmp
loopne
sub
jae
xchg
cwtl
nop
cli
add
jge
and
out
cmpl
add
adc
movsb
and
mov
call
out
sbbb
sub
mov
es
adc
sub
and
add
repnz
stc
fildl
int3
sbb
mov
das
fsts
cld
clc
icebp
gs
mov
or
scas
inc
data16
xor
js
je
ds
jmp
subl
adc
bound
jbe
pop
jmp
bnd
in
mov
fdivrp
xor
loope
add
xchg
add
add
addr16
lods
mov
pop
std
pop
cli
loopew
lods
pop
mov
sbb
xor
mov
mov
mov
aas
add
in
imul
dec
ficoml
xor
addr16
daa
add
mov
mov
aas
jb
add
jmp
insb
or
sbb
add
mov
inc
mov
sbb
jg
test
cmp
xor
shrl
outsb
outsb
mov
mov
lods
mov
pop
inc
mov
mov
push
lock
in
cltd
or
or
pusha
add
jno
xor
sub
ss
clc
inc
push
outsb
or
push
and
mov
movsb
popf
int3
jne
push
mov
scas
xor
inc
jb
testl
and
jbe
inc
add
mov
pop
adcl
sub
jle
jle
imul
push
aas
enter
std
orb
test
test
inc
pop
rolb
rcll
xchg
ss
inc
xlat
mov
clc
bound
adc
mov
add
mov
mov
xor
xor
lret
xchg
iret
movl
sub
movsb
jbe
popf
mov
or
dec
push
movsb
scas
lcall
inc
enter
fwait
test
nop
adc
sti
jbe
sbb
cld
stos
add
jp
outsb
loop
orl
ljmp
fimull
inc
sbb
cmp
add
push
out
mov
sub
out
push
xchg
mov
mov
xchg
in
xor
add
int3
mov
pop
inc
xor
or
jo
dec
sbb
mov
shl
test
dec
sub
std
xchg
inc
or
jmp
cmpb
cmp
or
pop
pop
add
rol
and
testl
xchg
shlb
dec
add
add
xchg
push
arpl
hlt
xchg
out
or
dec
ret
gs
dec
jae
jo
int3
stc
mov
inc
lds
dec
jne
inc
jle
dec
or
mov
cld
and
daa
pop
subl
add
pop
in
subl
sub
sbb
into
add
jecxz
and
sub
xchg
sbbl
stos
ss
mov
or
push
cmc
jne
push
in
out
clc
jl
inc
imul
aas
adc
shlb
push
jge
mov
dec
das
and
jge
xor
push
inc
mov
addl
xchg
aas
mov
and
xchg
push
es
and
add
pop
mov
nopl
cli
add
cmp
jno
in
mov
jo
mov
lds
push
or
adc
dec
sbb
daa
orl
add
sbb
mov
nop
clc
dec
shlb
ret
sub
xchg
fwait
orl
imul
orb
cs
cmp
xor
stc
and
sub
push
or
and
inc
out
jo
xor
add
pusha
adc
and
mov
sub
dec
sub
inc
adc
icebp
pop
cwtl
hlt
dec
in
sti
addr16
loopne
repnz
pusha
mov
or
cmp
xchg
setae
mov
ret
add
jp
adc
shrb
pop
out
sub
aaa
cmp
pop
cmp
lock
push
adc
stos
push
pop
mov
cmp
and
aas
fs
jmp
out
mov
adc
cmp
aad
mov
cmpsb
xchg
clc
add
push
ret
addb
mov
in
dec
addr16
pop
jge
add
sahf
mov
adc
cmovnp
and
xchg
bound
xchg
stos
adc
out
mov
mov
and
jle
imul
inc
cmpsl
pop
test
ljmp
gs
cmpb
dec
loop
cmp
adc
lds
add
jne
xor
je
ret
outsb
ja
and
mov
test
and
rorb
stos
sbb
pop
pusha
dec
ljmp
enter
jmp
movsl
loopne
pusha
insb
jno
pop
inc
add
addl
mov
leave
or
xchg
aad
pusha
pop
aam
cmp
cs
cmp
addb
jecxz
leave
push
std
aam
sbb
xchg
aas
imul
push
push
cwtl
jge
or
push
out
aas
pop
mov
test
add
add
sti
mov
push
das
or
cld
jno
mov
ret
out
daa
pop
stc
add
aam
ficompl
xchg
mov
test
das
movsb
jle
or
sti
dec
jns
jmp
sub
mov
fildl
pop
push
xor
enter
xor
adc
adc
add
dec
xchg
push
stos
cmp
cld
push
inc
inc
cmpsl
pushf
movsl
loopne
popf
push
sub
sub
data16
push
inc
inc
insl
sbbb
es
xor
ret
lock
sub
mov
and
sbb
lods
lods
inc
pop
cmp
add
icebp
push
mov
mov
pop
mov
xchg
jo
inc
stc
xor
add
mov
addl
enter
mov
push
or
sub
icebp
adc
add
and
and
jecxz
sbb
xchg
call
mov
leave
lahf
dec
scas
dec
insl
mov
sbb
adc
addb
xor
pushf
cld
and
das
add
pop
xchg
movsb
mov
sub
test
adc
testl
pop
or
inc
pusha
decl
push
pop
push
cmp
push
fsubp
mov
mov
sbb
jb
pop
jno
ret
lret
xor
ret
mov
xor
pop
mov
repz
pop
std
pusha
nop
jg
mov
int
push
dec
push
nopl
cli
fwait
cmp
lods
push
push
mov
add
and
and
or
in
repnz
jbe
adc
dec
test
add
aam
cli
inc
sub
mov
xchg
xchg
mov
jl
insl
push
dec
ret
ja
enter
mov
dec
shll
pop
dec
lods
sub
test
lods
in
jmp
aas
add
xor
popf
lcall
cs
int3
out
jl
push
xchg
mov
enter
sbb
dec
cmpsb
xor
ret
push
aad
shll
cmp
cmp
insb
clc
insl
inc
subb
cld
xchg
call
push
sub
in
mov
or
push
adc
add
cs
stos
add
sbb
pop
add
dec
adc
cmp
roll
or
xorl
or
or
lds
or
lods
outsb
push
and
std
xorl
inc
xchg
and
adc
jg
xchg
jmp
out
fs
sti
jae
leave
repnz
rclb
push
in
add
aas
push
inc
cld
and
mov
loop
mov
or
jno
hlt
push
adc
std
jmp
adc
mov
dec
call
add
loope
add
inc
inc
stc
sub
repnz
inc
jo
popa
inc
test
mov
mov
lahf
int3
mov
adc
das
sub
cltd
mov
jb
std
sub
dec
nop/reserved
nop
add
fldenv
mov
aaa
cmp
cmp
mov
fmuls
leave
dec
in
sub
pop
dec
pop
pop
repz
or
xchg
add
pusha
stc
dec
mov
cli
in
sbb
repnz
or
fucomi
and
pcmpeqw
sub
cld
pusha
in
popf
dec
lret
push
adc
shr
add
push
jmp
lea
lahf
nop
fists
aas
lock
lret
and
jle
pusha
dec
nop
or
mov
cwtl
xor
sti
fbld
pop
loopne
cmpsl
sbb
pop
nop
in
fisttps
subl
jnp
je
xchg
sub
nop
aas
jns
pop
mov
in
leave
call
lock
mov
int3
fbstp
in
jno
and
or
das
out
mov
and
addps
inc
dec
jo
sub
xor
pop
mov
daa
aas
and
fnsave
or
icebp
jne
xor
cs
fs
int3
sub
xor
xchg
rclb
sarl
stc
lods
xchg
cmp
xor
insl
and
sub
and
cmp
adc
popa
imul
daa
sbb
xor
inc
roll
fwait
or
sbb
xor
add
mov
incb
add
shl
rol
sbb
leave
mov
stos
add
mov
and
push
pop
mov
jo
sub
dec
xchg
into
sbb
dec
je
inc
lcall
daa
in
sahf
adcl
lea
cwtl
mov
lret
inc
push
jae
xor
mov
mov
rclb
lods
and
and
js
test
jb
orb
movsb
and
fidivs
xchg
or
sub
dec
jne
subl
aam
pushf
in
jb
push
shl
int3
jecxz
push
repnz
xchg
or
dec
sub
add
dec
lds
mov
jo
xor
lock
add
sub
pop
clc
mov
and
imul
adc
bound
jecxz
xchg
pop
mov
cmpsl
mov
jecxz
push
iret
cwtl
mov
xchg
mov
stc
cmp
dec
mov
and
xor
mov
cmp
lcall
lds
sbb
outsb
inc
adc
pop
loopne
push
jae
mov
push
and
inc
repnz
lea
dec
clc
and
adc
sbbb
iret
sub
and
pop
test
add
je
fildl
fcomip
pop
push
fldl
sarl
inc
cmc
imul
mov
mov
mov
xchg
push
jge
ret
rolb
xchg
arpl
mov
int
insl
and
shl
test
fistpl
pop
or
sbb
jp
jmp
add
and
mov
psraw
dec
out
rol
lods
js
xchg
sub
sub
jge
cld
pop
adc
mov
outsl
lods
inc
mov
es
int3
ss
ret
movsl
ror
add
inc
and
mov
and
sub
loopne,pn
loop
and
roll
out
xchg
jp
inc
jbe
aas
cwtl
cwtl
and
push
sbbb
pop
es
ds
push
cmp
push
mov
in
adc
mov
add
test
and
mov
push
pop
push
std
sbb
adc
and
mulb
test
xor
andl
leave
mov
test
loope
and
scas
imul
add
test
dec
adc
xor
clts
fildll
cmp
pop
push
and
aas
or
orl
pop
aad
jb
xchg
xchg
lods
int3
jae
das
insl
and
lret
or
lock
ret
std
test
fcompl
jae
sub
pop
or
jns
xlat
enter
or
lahf
fildl
jmp
dec
repnz
adc
outsb
in
or
push
scas
andl
xchg
inc
loop
push
jmp
push
push
sbb
sarb
call
lahf
or
mov
sub
adc
jne
inc
outsb
sahf
xchg
outsl
sbb
unpckhps
addl
mov
pop
adc
mov
mov
daa
or
add
jns
cmp
outsb
adc
popa
mov
mov
jg
pop
adcl
rcrl
mov
pusha
jne
xchg
add
inc
push
ljmp
in
push
arpl
and
xor
in
and
subb
xchg
lahf
lds
pop
and
or
pop
sbb
out
lea
aas
adc
xorb
inc
je
push
cmp
jb
adc
iret
fdivr
movsb
fcomps
push
jo
push
outsb
mov
sbb
or
dec
mov
dec
repnz
lods
and
sbb
popf
mov
push
int3
push
stos
mov
repnz
xchg
aam
xchg
pop
or
or
jo
leave
add
xorb
jbe
and
xor
lods
out
inc
out
lcall
pop
test
push
push
add
xchg
dec
cmp
pusha
test
and
repz
int3
pop
nop
lsl
add
jno
cmpl
insb
sub
decl
pop
mov
dec
mov
push
cmp
jmp
cmp
popa
insl
push
arpl
lahf
je
ljmp
outsb
inc
pop
sahf
popa
dec
push
cld
insl
pop
outsl
fs
lret
js
or
cmpsb
outsl
add
outsb
push
test
leave
notl
iret
add
arpl
sbb
fistl
in
inc
clc
inc
mov
call
sub
scas
jns
add
movsl
or
arpl
mov
dec
add
add
aad
bound
inc
or
adc
pop
adc
push
je
jo
mov
adc
repnz
mov
jne
pop
arpl
adcb
xor
inc
lcall
xorb
push
je,pn
js
mov
ret
rcll
jb,pn
popa
jb
cmpsl
cld
cltd
dec
jg
and
pop
inc
adc
add
sbb
rolb
data16
xor
outsl
add
add
jne
pop
sub
cs
aas
inc
inc
xor
push
popf
xchg
push
or
test
shll
cld
pop
mov
es
imul
jb
out
pop
fcomps
cmp
xor
pop
ljmp
std
rcrb
pop
dec
sbb
xor
and
extrq
jns
push
std
dec
push
js
sar
pop
pop
pop
pop
pop
and
pusha
inc
push
subl
gs
push
xchg
jb
push
fwait
movsb
cmp
ljmp
mov
mov
inc
xor
xor
pop
adc
aam
das
push
arpl
push
sbbb
dec
cmp
pushl
je
lcall
dec
adc
add
std
incl
or
mov
cmp
push
clc
inc
test
xor
pushf
cld
fisttpl
xor
int3
push
loopne
das
lock
pop
jge
and
pop
sbbb
dec
mov
arpl
mov
pop
jne
hlt
push
out
stos
mov
sti
add
pop
orb
cmp
lods
jno
aas
push
pop
push
add
addl
jecxz
push
add
add
inc
xor
add
sbb
test
unpcklps
repz
pop
jg
jle
xor
jb
push
dec
aam
pop
cli
pushl
xchg
push
addb
in
dec
xor
cld
mov
or
das
aas
inc
jo
jge
cmp
jmp
jo
std
loope
in
ficomps
sbb
dec
pop
les
add
jb
mov
cmpsb
mov
in
in
inc
arpl
rorl
add
jmp
mov
push
ret
sbb
dec
mov
cmp
add
lods
adc
mov
mov
cs
data16
and
outsl
roll
arpl
shrb
aas
adc
add
pusha
or
cmp
mov
scas
in
rclb
mov
sbb
out
cli
aaa
test
inc
pop
sub
or
xor
sbb
dec
mov
cmp
lcall
lcall
daa
aaa
sbbl
cli
fwait
shlb
mov
fwait
enter
jo
call
mov
iret
pushf
pop
cmp
repz
mov
or
and
cli
jg
xchg
popf
shlb
pop
or
mov
aaa
fdivrl
js
test
xlat
xchg
and
and
aaa
sub
jp
shrl
push
lock
xchg
push
sbb
ret
sub
das
fs
ss
aam
out
adc
push
push
popf
das
pop
cld
jmp
sub
pop
punpckhbw
dec
adc
inc
mov
pop
icebp
add
push
sub
shr
popa
cmc
sub
loopne
mov
pushf
or
push
mov
sub
lods
js
sbb
jg
adc
inc
shrl
inc
inc
loopne
cwtl
mov
cli
outsl
repnz
dec
jb
mov
arpl
cli
mov
ret
cmp
jg
stos
nop
xor
sbb
rorb
xor
int3
hlt
outsb
in
and
dec
jo
xchg
pop
int3
js
fcoms
lcall
pop
cld
mov
xchg
cmpsl
push
or
jb
in
lock
mov
mov
popa
adc
sti
cmc
and
lret
clc
jne
insl
arpl
repz
sub
lods
and
and
movsb
int
cli
pop
call
sar
inc
add
xchg
jge
cmp
out
ds
icebp
shl
lret
inc
add
push
push
insl
dec
xor
pop
lock
rorb
xchg
mov
leave
into
out
mov
pop
pop
sub
jecxz
add
jo
clc
jg
cmp
xor
test
lds
cli
pushl
mov
cmp
sub
pusha
sbb
clc
adcl
inc
xor
insb
cmp
push
xor
sbb
test
xor
test
fdivr
push
lcall
sub
or
sub
sub
cmp
pop
ds
pop
add
pop
aas
hlt
test
test
inc
cld
sub
cmp
je
pop
outsb
sbbl
hlt
jecxz
sub
inc
add
pop
leave
push
xor
fiaddl
jb
cld
mov
push
lea
sbb
lcall
add
flds
ret
and
cmp
mulb
mov
loop
and
adc
das
push
lods
sub
xchg
pop
dec
mov
inc
jecxz
dec
xor
mulps
pop
jmp
mov
adcl
sub
popf
call
pop
adc
cmp
clc
lcall
cmp
mov
and
clc
add
in
push
sbb
mov
adc
pop
add
xchg
fistps
push
and
movsb
loope
xor
inc
or
cmp
out
cmp
or
jl
out
add
and
pop
nop
or
cwtl
mov
lcall
or
cmpb
mov
sub
sbb
imul
add
push
rol
sbb
in
mov
ljmp
jno
sbbb
mov
mov
xor
inc
or
arpl
inc
add
or
adc
pop
push
push
insb
adc
push
sub
decl
test
dec
add
pop
mov
ret
mov
sub
mov
subl
and
test
push
jge
or
fmull
hlt
fneni(8087
or
dec
jb
stos
adc
call
aas
or
push
adc
adc
add
cmp
pop
mov
jl
xor
or
das
jl
xchg
in
jne
push
jp
sbb
pop
imul
xor
cmp
cld
push
bound
sub
std
pop
cli
testb
pop
clc
je
push
mov
sbb
pushl
in
cmp
inc
jecxz
cli
add
and
das
sbb
jb
pop
dec
dec
sub
xor
testl
jo
xor
or
repnz
push
jge
jmp
loop
adc
add
adc
data16
sbb
mov
push
imul
xchg
jl
call
xchg
mov
insl
lcall
push
sub
or
dec
sub
xor
aam
sbb
pop
sbb
roll
jns
les
push
jg
sbb
inc
ret
hlt
inc
push
cmp
pushf
out
xchg
pop
dec
add
and
mov
sti
add
out
daa
fcoml
pop
das
adc
xorb
das
add
mov
fstpl
jns
popa
pop
aas
inc
fs
or
aas
pop
xchg
jo
jbe
cvttps2pi
push
mov
pop
mov
xchg
ss
outsb
xchg
jg
sub
sahf
data16
push
subb
fdivr
jg
pop
test
dec
dec
divb
cmp
xlat
add
or
xor
adc
insl
std
pop
test
gs
jmp
xchg
sub
sub
ljmp
lock
cld
cwtl
adc
out
push
push
jmp
push
addl
es
sbb
jmp
das
push
ret
aas
pop
sub
xchg
ficomps
mov
pop
sbb
sub
xchg
fcomps
sub
push
jae
inc
push
rolb
lcall
icebp
repz
mov
cmp
mov
mov
push
mov
inc
pop
mov
jle
std
dec
imul
add
and
int
push
mov
out
jns
femms
or
dec
incb
in
adc
dec
cld
lahf
cs
dec
call
and
popa
lahf
pop
inc
pop
pop
mov
aaa
mov
adc
cmp
pusha
xor
or
incl
mov
repnz
shrb
mov
ss
popf
or
std
adc
cmp
mov
pop
lret
mov
or
loop
das
and
es
subl
sub
pop
dec
jle
ljmp
and
ljmp
mov
test
rolb
popf
movsl
inc
mov
movsb
rorb
lods
sbb
inc
les
aaa
sub
dec
cmpsb
mov
out
pop
out
data16
adc
mov
frstor
push
sbb
cmp
inc
pop
fisttpl
add
repnz
ds
scas
outsb
jl
add
ret
mov
xchg
dec
adc
adcb
aaa
jae
push
inc
push
pop
push
inc
xor
mov
sbb
aad
dec
or
and
adc
pop
call
jae
subb
dec
idivb
xor
loopne
aaa
cmp
inc
xor
sbb
pop
dec
cmp
ret
out
cs
aas
enter
lock
inc
stc
lret
add
mov
mov
and
add
mov
hlt
scas
inc
dec
ret
jle
dec
test
cmp
cltd
cltd
inc
jle
mov
pusha
sti
daa
ss
out
cmp
jmp
rclb
jbe
dec
add
xor
js
filds
jo
jge
fisttps
dec
mov
jecxz
cmp
out
inc
fstpt
addr16
sbb
sbb
rcrb
jbe
pusha
insb
and
jns
and
je
aam
adc
mov
fidivl
nop
fstps
addr16
imul
hlt
test
add
rcrb
adc
insb
sbb
pop
xchg
push
loopne
xor
cli
dec
sti
sub
and
cmc
decl
cwtl
xlat
mov
orl
add
cli
mulb
cs
pop
call
dec
mov
js
outsl
dec
cmp
sub
pop
jp
lahf
or
ljmp
jbe
add
loopne
cmp
and
xchg
mov
adc
or
fdivr
aaa
pop
fsubrp
push
jno
orl
test
imul
dec
stc
add
adc
mov
lods
xor
adc
push
test
lods
fwait
jns
outsl
add
pop
adc
mov
std
dec
ret
aam
int
ja
aaa
das
insb
dec
adc
rcrb
es
fildl
sub
mov
mov
ss
sbb
push
movsb
or
dec
or
andl
dec
lock
mov
push
ljmp
out
incb
lock
es
out
or
fs
mov
lock
je
lock
sbb
aaa
pop
loope
repnz
push
dec
out
fcomps
adc
inc
add
in
mov
add
sub
xor
pop
aad
inc
ljmp
jp
sub
push
pop
pusha
fisttpl
arpl
push
pop
or
je
ret
mov
mov
js
fnstsw
insb
fsubrl
sbb
lret
movb
orl
mov
pop
push
add
jecxz
pop
cld
shrb
das
nop
adc
xchg
cmp
outsl
push
les
aaa
cmp
pop
rcrl
sub
rcrl
mov
or
js
ficoms
mov
jl
add
add
filds
sbb
sbb
imul
test
pusha
inc
or
add
pop
or
ficompl
loop
xchg
push
outsl
add
add
cmpsb
mov
popf
sti
dec
adc
notl
lret
test
mov
add
xor
pop
pushl
data16
dec
jae
jns
or
pop
jnp
imul
pop
fisubrs
sar
push
popa
ficomps
jl
xor
sub
pop
pop
test
adcl
mov
and
sub
ret
sbb
push
cmp
or
fistpll
inc
xchg
test
imull
in
nop
jno
cmc
jmp
push
sub
add
inc
or
jne
hlt
dec
pop
int3
aam
aaa
lock
pop
push
imul
js
xor
adc
rcl
ret
movb
test
lock
cmp
out
pop
xor
jg
xor
add
cmc
xlat
jo
add
test
cli
aaa
push
ja
push
ljmp
xchg
outsb
sbb
popf
in
loopne
or
dec
xlat
pop
inc
push
push
mov
xor
fnsave
popf
nop
test
pop
push
push
xor
mov
jmp
jg
push
repnz
pop
out
je
jg
out
jae,pn
int3
loopne
push
sbb
pop
pop
and
test
sub
jle
inc
roll
and
clc
cmpsb
jbe
enter
pop
jp
cmp
inc
or
andb
sahf
pop
xor
jg
xchg
test
bound
daa
pop
ficoml
mov
sub
sub
je
shll
je
xchg
inc
xchg
dec
jg
std
jg
outsb
jp
lock
add
in
mov
pusha
xchg
add
mov
jb
push
cmp
das
push
cs
fdivrs
dec
push
sbb
push
rcrb
add
or
jg
pop
shrl
add
cs
cmp
mov
fisttpll
sbb
sbb
pop
fidivrs
loopne
sbb
inc
or
push
das
rorl
xchg
xchg
js
dec
xchg
mov
sub
rcll
and
pushf
in
and
ret
cltd
out
push
add
fisttps
mov
and
jae
out
push
es
cmp
inc
and
sbbb
mov
stos
int
add
sbb
push
outsl
aad
sbb
iret
es
sbb
cld
ret
lret
push
adc
sti
rorl
inc
sti
imulb
jle
addb
adc
lcall
add
add
shll
dec
cmp
lods
aaa
pop
outsl
insl
and
arpl
add
std
mov
aaa
fcoms
xor
lcall
lea
dec
gs
dec
or
out
xor
ds
and
xchg
orl
in
aas
ret
and
lret
cmpsb
outsl
cmp
sahf
outsb
push
pop
imul
cmp
ljmp
inc
and
incb
test
mov
repnz
nop
xor
cmc
pop
mov
in
mov
mov
outsl
pop
mov
repnz
xor
mov
hlt
loopne
aad
mov
inc
fbstp
fdivrs
add
movsb
and
or
aaa
out
lcall
mov
dec
arpl
testl
push
das
xchg
aas
stc
ljmp
xchg
test
xor
cwtl
dec
ss
mov
jne
jl,pt
mov
add
mov
arpl
cli
mov
xlat
pop
movb
clc
jg
lret
int3
stos
hlt
into
jo
sub
xchg
loop
imul
popa
inc
stc
or
rorl
outsl
push
sti
pop
push
and
nop
ret
pop
in
push
rorb
pop
inc
push
cwtl
push
fisttps
ljmp
iret
aaa
data16
push
xor
push
ljmp
loopne
movsl
or
push
xchg
pop
js
add
clc
incl
adc
popl
jg
sub
push
add
jo
jno
lock
mov
shlb
add
push
adc
aam
mov
add
sub
sbb
sub
sbb
dec
or
sub
popf
xor
push
mov
loope
adc
jae
jns
push
rorl
repnz
xchg
lods
sbb
clc
push
pop
pop
inc
mov
fdivrl
lods
les
lret
clc
jbe
insl
inc
sbb
fs
in
cs
ljmp
loopne
jbe
jmp
mov
je
loope
fdivs
or
mov
pushf
add
outsb
xchg
jne
aam
sbb
test
pusha
sarb
push
outsl
jno
push
inc
or
imul
cmpl
pop
lret
push
sahf
inc
xchg
stc
mov
ljmp
mov
xchg
push
add
outsb
pop
clc
xchg
adc
add
lret
cmp
jle
mov
lea
rcr
fsubr
jg
loopne
mov
push
jge
rcl
idivb
cmp
lea
sub
add
inc
aaa
mov
lea
pop
xchg
test
loope
in
arpl
push
call
xchg
sbb
das
sub
out
lds
sti
adc
mov
push
loop
outsb
push
into
cmpsb
cmp
xchg
pop
sti
dec
push
cmp
or
adc
xorl
sbb
loop
dec
cwtl
cmc
add
shlb
mov
pop
sub
cli
addb
and
jp
pop
mov
pop
pop
xor
ret
fisttps
leave
and
mov
arpl
decl
adcb
inc
cwtl
das
and
cld
or
or
mov
jb
loop
pop
iret
xchg
xchg
shl
pop
sub
jno
jae
scas
fdivs
ljmp
icebp
jg
test
cmp
hlt
daa
xor
mov
lea
clc
outsl
xor
xchg
add
xchg
or
js
jge
pop
sbb
jb
fdivl
sbb
lea
ret
rcll
outsl
fcomps
stc
pusha
dec
push
pop
xchg
xchg
inc
inc
cmp
shrb
mov
std
and
mov
and
add
ss
jno
loope
movsb
test
outsb
adc
cmp
sbb
repz
repnz
cmp
call
or
repnz
dec
xchg
flds
outsl
std
or
shll
adc
sar
in
outsl
insb
test
lock
cmpsl
xor
in
pop
test
jecxz
lea
dec
sub
call
pop
or
js
push
push
pushf
cs
int
outsb
jmp
mov
pop
repnz
decl
cwtl
xchg
xchg
call
fcmovbe
mov
mov
sub
push
cld
pop
xchg
clc
in
or
mov
push
repnz
sbb
mov
ficomps
repnz
add
ficomps
or
nop
js
aaa
inc
mov
ret
imul
adc
shlb
mov
dec
pop
pop
dec
rorb
lea
sti
dec
adc
sbb
and
cs
jo
in
and
xchg
push
fadds
and
pop
add
push
jmp
testl
add
nop
push
add
dec
nop
cmpsb
movsb
scas
jmp
mov
push
adc
popf
rorb
cmp
pop
pop
pop
shll
js
adc
mov
pop
std
jo
xchg
pop
jns
mov
xorl
js
add
cli
dec
insl
pop
hlt
dec
add
jbe
cvttps2pi
pop
js
js
fisubrl
add
out
test
aas
xchg
xchg
sbb
sbb
push
xor
mov
ret
popa
cltd
xor
dec
xor
xor
xorl
add
out
add
decl
dec
push
pop
subl
push
push
inc
arpl
das
insb
add
cmp
push
jg
testb
xor
dec
cwtl
add
pop
outsb
lcall
inc
jb
in
adcb
adc
es
aas
push
insl
and
das
repz
cli
jbe
cld
js
pusha
or
lcall
sarl
pop
jmp
in
aam
sub
xchg
sar
xchg
mov
movlps
add
gs
xor
jbe
pop
jge
lcall
out
lea
jo
pop
add
jns
jp
out
mov
sbb
push
mov
insl
mov
mov
pushf
loopne
inc
fisubl
bound
dec
mov
call
test
andb
sub
add
test
movsb
sbb
mov
pusha
add
or
and
mov
cli
fwait
outsl
and
mov
std
mov
ret
andb
rolb
mov
add
adc
add
dec
outsb
fsubrl
jg
cmp
dec
sbb
das
imul
aas
lcall
pusha
dec
and
popf
adc
cmp
or
int3
fdivr
arpl
ljmp
std
cmp
out
ja
pop
pop
pop
in
fistps
mov
mov
pop
out
sbb
fs
lds
out
cs
popf
fsubrs
sarb
and
fstps
fistpll
loope
jae
loope
inc
in
mov
xchg
mov
xchg
xchg
std
decl
or
insl
add
sbb
jg
mov
je
popf
xor
mov
repnz
rclb
push
sbb
push
add
call
inc
cwtl
scas
dec
jbe
mov
or
jne
arpl
mov
push
pop
cs
cld
rolb
test
inc
jl
sub
aaa
mov
je
decl
xor
or
sub
std
cs
cmp
call
sbb
shll
dec
push
hlt
fildl
out
int3
cmc
pop
adc
add
outsb
pop
in
xchg
fdivr
jle
jmp
dec
pop
add
or
cmp
add
sub
xchg
mov
je
mov
aam
push
sbbb
jecxz
test
icebp
jg
adc
bound
add
outsb
cmp
call
mov
outsl
popf
mov
movsb
mov
sub
mov
lock
ret
lock
add
add
cmp
insb
jge
push
jle
jmp
pop
or
inc
fwait
jmp
or
pop
push
or
pusha
test
pop
cmovb
and
xchg
sbb
sub
int
xchg
neg
mov
pop
icebp
aas
rol
adcb
xor
ljmp
lcall
mov
xor
cmp
lret
sbb
pop
add
inc
cli
xor
sub
cli
inc
daa
sub
testl
cmpsb
sbb
push
ja
pop
push
dec
jg
xchg
inc
and
das
inc
or
inc
dec
and
lods
outsl
sub
icebp
dec
icebp
sub
cmp
xor
outsb
sti
stos
dec
push
loop
sbb
jge
pop
mov
sbb
pushl
jle
imul
sub
popf
rclb
ljmp
sbb
aad
inc
loope
cmc
dec
test
mov
add
push
jb
leave
dec
jo
pop
test
jg
jo
pop
push
xor
sub
sbb
out
adc
lods
fbld
push
test
inc
lods
pop
or
pop
jle
and
lock
inc
sti
out
inc
pop
jg
cltd
add
push
das
aas
stc
jo
pop
jnp
push
shr
jl
outsl
push
movsb
pop
mov
jl
mov
dec
out
jns
push
in
sub
dec
pop
clc
loop
ss
sbb
inc
stos
mov
dec
push
lock
outsl
icebp
aas
pop
pop
xorl
ljmp
lock
fs
clc
andl
cmc
mov
inc
inc
xor
sub
std
jne
enter
jle
push
mov
ret
sub
mov
or
je
pop
shl
push
xchg
and
cmp
mov
xor
rorb
imul
xchg
ljmp
pop
pop
xchg
sbb
push
xchg
ss
insb
subb
mov
popa
stos
lea
jo
push
lcall
mov
jg
jne
inc
adc
in
adc
push
lods
das
and
dec
pop
insb
add
jno
pop
jle
lcall
inc
call
or
les
nop
fwait
repnz
push
jb
sti
dec
dec
das
fs
addl
add
mov
pushf
pop
imul
lods
pop
xor
pop
pop
jle
imul
push
fs
sub
pop
jp
mov
mov
mov
scas
xor
ja,pn
jno
jg
adc
jbe
mov
mov
fistl
inc
dec
lock
rcl
bt
adc
pop
cmc
sub
test
icebp
fwait
lods
xor
lea
push
test
push
addr16
or
rolb
pop
pop
push
clc
xor
mov
jg
leave
jae
insl
insb
xor
push
cmp
pop
cwtl
jns
outsb
push
add
add
std
lcall
xor
adc
adc
push
sub
out
push
cld
mov
mov
daa
sbb
cmpb
sub
cmp
dec
add
xor
js
mov
push
inc
cmpsb
add
push
adc
sbb
lods
ret
sbb
lea
icebp
outsl
xchg
in
sub
jle
ljmp
xchg
or
or
pop
sbb
adc
mov
test
cmp
add
pop
inc
pop
xor
jmp
xchg
and
test
or
jo
dec
push
dec
out
xor
fcmovnb
or
inc
movsl
mov
fcompl
add
push
test
fdivl
test
jg
loope
inc
daa
sbb
sub
mov
sbb
pop
mov
inc
mov
icebp
lcall
sbb
mov
xor
dec
dec
jo
pop
jmp
mov
push
pop
and
xchg
lcall
pop
je
sub
ds
push
insl
push
cli
pop
lods
cld
sub
cmp
pop
pop
popa
inc
or
stc
mov
sbb
ljmp
push
adc
add
test
adc
mov
cmp
pushl
imul
pop
add
shll
call
mov
mov
pop
arpl
repz
sbb
xor
loopne
mov
cmovo
test
pop
mov
sahf
cli
in
jne
pusha
or
int3
fiadds
push
lcall
clc
pop
aaa
sub
jg
fildl
or
cmc
add
sbbl
movsl
mov
rcrb
inc
dec
add
lea
push
stos
push
dec
cld
fs
cmp
add
dec
pop
add
push
xchg
sbb
sbb
sub
cmp
mov
pop
pushf
test
push
in
pop
in
dec
sbb
cwtl
dec
mov
loope
decl
mov
xor
jg
xchg
inc
cmp
add
sub
mov
out
xlat
sbb
lcall
push
jne
xchg
ret
and
mov
sar
jo
mov
add
xchg
jge
push
rolb
dec
mov
jo
add
cmp
pop
cli
pop
js
rorb
add
movsl
and
jo
pop
aas
sub
xchg
add
cmc
xor
mov
push
add
jns
ljmp
pushf
je
popf
out
mov
inc
scas
movsl
mov
pop
clc
push
jo
dec
loopne
addb
lret
xor
out
pop
sbb
outsb
fmull
ss
ret
addr16
pop
imul
dec
lds
push
pop
and
push
xor
dec
mov
xchg
xchg
cmc
or
add
pushf
push
jl
sub
out
pushl
inc
pop
lock
bnd
sbb
in
fadds
in
sbb
xchg
test
aas
rorb
mov
mov
inc
or
out
wrmsr
cmp
cmpsb
pop
cli
cmp
mov
sbb
scas
pmulhuw
jbe
mov
dec
lcall
jbe
pop
pop
outsb
and
cmc
lea
mov
bound
add
fldt
push
cwtl
adc
mov
mov
std
fisttps
and
sub
ljmp
lahf
cld
mov
pusha
mov
mov
movsb
out
ss
sub
mov
testl
push
add
repz
call
mov
movsb
push
xorl
pop
in
and
mov
mov
das
lock
js
mov
pop
stos
or
sti
pop
xchg
jne
adcb
pop
push
fcmovu
push
decl
clc
mov
sarb
sub
fcoml
sub
test
jb
dec
lcall
push
mov
xor
sub
inc
mov
cmp
je
ljmp
pop
pop
fsubrl
pop
xchg
or
clc
mov
dec
scas
leave
sarl
xchg
add
dec
push
stos
lea
es
dec
mov
or
ficompl
mov
add
fbld
mov
push
in
out
or
or
inc
cld
or
push
pusha
int
push
fmul
incl
lret
outsb
xchg
sbb
std
notb
lcall
lret
xor
inc
in
xchg
push
or
fnsave
fisubl
mov
dec
xchg
push
stos
scas
mov
or
pop
and
push
aas
push
or
mov
cmp
mov
insl
les
cmp
push
mov
in
xor
loopne
lds
in
jg
aam
arpl
add
loope
adc
mov
enter
int3
leave
mov
movsl
sub
fwait
inc
pop
fucomip
outsl
jbe
add
xchg
push
in
es
call
insl
xor
push
jmp
stos
xor
mov
add
sbb
incb
nop
ret
sbb
aas
ljmp
adc
jp
cmpsl
pusha
push
pop
push
xchg
shrb
insb
imul
push
push
mov
jb
sub
xchg
and
loopne
jge
xor
call
pop
cmpl
repz
cmp
outsl
outsl
and
mov
nop
addb
sbb
sbb
jecxz
fs
mov
mov
pop
lock
idivb
mov
mov
pop
inc
nop
cltd
add
pushl
push
insb
lcall
lock
outsl
push
push
push
or
call
push
push
push
pop
sub
aas
xor
sub
jg
and
cmp
subl
push
sbb
mov
std
mov
aam
push
jnp
jg
xchg
ds
stc
and
add
out
mov
ret
pop
sub
ss
testl
pop
popf
pop
inc
fistl
in
xchg
pop
sbb
jb
outsb
push
sbb
call
rorb
hlt
out
arpl
add
jp
pop
out
adc
mov
cmp
rclb
loopne
dec
xchg
outsl
sub
ja
adc
out
inc
or
add
outsl
xor
jmp
cmp
mov
sar
add
sub
bound
push
sub
into
rclb
aas
mov
stos
mov
and
pop
inc
jbe
sbb
mov
sbb
and
mov
mov
in
ja
and
inc
xlat
pop
mov
pop
push
inc
bound
ja
mov
pop
inc
adc
dec
mov
cmpsl
bound
jb
sub
sbb
jmp
jg
lret
adc
pop
dec
adc
cld
es
dec
mov
push
shl
stos
movsl
jle
sbb
cmpl
add
aaa
inc
dec
inc
sbb
insl
xchg
cli
and
add
sahf
xchg
jp
pop
stos
lds
bound
insb
mov
aad
or
stc
test
in
mov
leave
sbb
sbbb
jnp
add
outsb
and
jmp
adc
lock
jle
jb
ret
mov
jbe
loope
icebp
jg
icebp
pop
sbb
sub
cmp
adc
adc
pusha
nop
inc
xor
jo
push
push
pop
test
xor
jg
rolb
cmp
pop
inc
mov
xchg
data16
stos
or
decl
add
xchg
xor
das
jecxz
adc
add
imul
lret
orb
push
pop
mov
rcl
sbb
adcb
ja
add
cli
mov
je
imul
sbb
cld
inc
and
or
test
push
insl
push
pusha
push
leave
inc
mull
pop
push
in
push
pop
dec
pop
jg
dec
je
pop
aas
jl
icebp
jg
insl
xchg
out
and
sub
cmp
add
fisubl
push
push
insl
out
roll
push
jne
pmaxub
addb
les
fcomip
xor
in
mov
cmp
pop
aaa
dec
les
add
mov
loopne
cmp
call
sbb
mov
jne
rolb
xchg
xor
das
imul
outsl
or
dec
and
or
js
cs
fcmovnu
mov
add
rcrb
xchg
movl
aam
test
jo
jno
cmc
fistps
iret
adc
adc
filds
inc
cmp
jns
push
jnp
addb
incl
mov
sbb
push
cmp
push
sbbl
aaa
push
adc
bound
or
sbb
dec
ds
add
sbb
jge
sti
sbb
xor
or
mov
pop
or
adc
lock
test
jp
loopne
inc
cmpsl
pop
fsts
rorl
inc
sbb
repnz
orl
ret
lods
ljmp
ja
pop
inc
test
hlt
adc
push
push
fdivr
pop
roll
daa
and
out
sbb
pop
mov
dec
ss
aam
xor
dec
pusha
or
cmpsb
icebp
mov
mov
pop
cmp
in
idiv
mov
add
addr16
cmp
or
out
cmp
pop
clc
adc
xchg
push
aas
cwtl
pushl
or
test
call
adc
call
test
in
and
jg
loopne
mov
icebp
cmc
jmp
in
mov
or
xchg
add
xchg
push
cmp
fdivrs
ljmp
jp
insb
xor
mov
add
add
clc
xor
dec
jne
insl
mov
loop
insl
sub
ljmp
std
jg
mov
ljmp
orb
clc
fidivrl
mov
nop
xchg
sub
push
aam
or
or
xchg
in
rcrl
jne
or
int
or
nop
fisubrs
cmc
xchg
mov
pusha
je
sub
add
xchg
push
insl
cmpsb
push
leave
int
or
add
bound
out
lock
sbb
shll
dec
in
dec
adc
push
mov
lret
mov
adc
cmp
inc
sbb
mov
push
imulb
fiadds
ja
stc
and
rcll
pop
and
incl
add
push
or
mov
popf
std
das
mov
push
cmp
insl
cld
and
test
lods
and
inc
mov
stos
jl
push
clc
pop
jmp
cmp
call
mov
adc
pop
add
mov
sbb
mov
popf
cmp
testl
push
or
insb
sub
jo
add
popa
pop
aas
nop
sub
jns
andl
pusha
mov
or
int3
loopne
mov
js
or
out
sub
stos
pop
mov
add
pop
push
push
xor
inc
mov
aaa
mov
add
in
sbb
in
je
jl
xchg
push
xchg
or
push
mov
dec
jle
xchg
lock
decl
mov
out
cwtl
mov
adc
xchg
jg
cs
lock
nop
and
push
stos
std
push
pop
and
push
xchg
add
fildll
scas
testb
pushf
add
or
andl
pop
push
inc
fldcw
jbe
std
addr16
mov
mov
ljmp
cmp
je
into
popa
add
pop
add
pop
lea
cld
jp
xchg
sbb
lds
or
mov
cli
pop
inc
sub
repnz
out
adc
dec
shlb
mov
pop
add
add
mov
adc
push
pop
or
sti
or
arpl
stos
inc
loope
clc
aas
jns
xchg
jecxz
mov
ret
mov
pop
adcl
fsubp
and
fcomp
ljmp
jbe
stc
rcrb
and
push
add
and
mov
pop
xchg
insl
adc
in
pop
test
adc
shrb
xlat
cmp
inc
cmp
cmp
push
outsb
pop
mov
lea
push
jns
sub
andb
lcall
mov
dec
cmp
ss
std
pushl
jmp
sbb
add
cs
dec
pop
andb
pusha
pop
pop
push
nop
punpckhbw
pop
adc
add
mov
xor
sub
bound
ret
push
aas
out
ljmp
sbbb
sbb
imul
sarl
andl
add
and
jle
sahf
sub
rorl
rorl
jp
cmp
pop
incb
outsb
mov
dec
or
mov
outsl
or
push
lods
pop
pusha
mov
popf
add
mov
fs
fdivr
push
cmp
fs
lret
ljmp
sbb
rorb
test
cltd
sub
and
sbb
mov
xor
adc
lods
cwtl
aam
shll
cmc
mov
lcall
lds
inc
push
sbb
dec
sti
fwait
jge
mov
int3
sbb
pusha
xchg
adc
orb
cmpb
pop
ds
mov
xchg
shlb
cmp
and
and
lock
xchg
in
jmp
lcall
cmc
xor
jnp
xchg
scas
cli
ljmp
ffree
lcall
jle
fcomi
xchg
incb
xor
cwtl
jl
clc
stc
cmp
or
decb
daa
inc
jle
leave
outsl
add
or
test
test
sbbl
pop
pusha
mov
outsl
daa
lret
lcall
shl
xorl
outsb
pop
sub
add
jmp
or
sub
dec
push
inc
inc
or
xor
in
or
rorb
ss
adc
ljmp
mov
push
popa
cld
mov
js
das
push
pop
in
je
imul
jl
cs
mov
xor
clc
leave
ja
das
mov
icebp
push
bound
sub
jbe
fldl
fistl
das
adc
sbb
add
cmp
incb
lret
push
push
push
push
jae
aad
es
sub
sbb
test
out
add
lret
inc
arpl
adc
ljmp
xchg
sbb
xchg
adc
jecxz
bound
xchg
push
repz
cmc
push
loopne
inc
adc
and
mov
mov
repnz
ss
dec
sub
addr16
dec
dec
push
or
jb
daa
pushf
idiv
push
and
dec
insb
pop
fmull
mov
jbe
sbb
lret
ds
sbb
sub
mov
add
gs
or
pop
adc
out
adc
cld
xchg
add
push
xchg
outsb
das
mov
cmp
dec
xor
negb
dec
dec
jo
out
cmovle
sti
out
push
pop
stc
loopne
sub
aaa
push
mov
add
jg
pop
fidivrl
push
orb
sbb
popf
sub
arpl
jl
sbb
cmp
jno
add
cmp
jp
or
pop
lock
es
rclb
mov
fisttps
mov
aad
ret
add
leave
test
jno
ss
inc
mov
mov
popf
xor
xor
push
pop
daa
inc
mov
inc
jo
popl
roll
aam
insl
mov
fildl
das
mov
jbe,pt
mov
aam
jg
mov
sub
pop
jo
or
push
outsl
sbb
push
sbb
cs
cmp
icebp
popa
movsb
ljmp
sub
jg
orb
decb
and
add
jl
in
loopne
xchg
out
rclb
push
lock
fsubl
pop
cmp
je
push
mov
jmp
and
cld
aaa
mov
fucomip
outsl
aaa
es
mov
jns
add
sar
ret
nop
and
push
sbbb
and
or
mov
ljmp
mov
test
test
adc
and
add
out
mov
pop
jp
and
cmp
jl
jno,pn
mov
add
idivb
push
cmp
cmpsl
jg
pusha
imul
mov
add
jl
aam
dec
cld
xor
dec
repnz
std
pop
and
fstpl
mov
fbld
push
sub
adcb
cltd
jecxz
xor
jo
add
sar
dec
cmc
jmp
dec
sub
subb
pop
push
mov
jns
fsubrl
adcb
pop
cmp
imul
xchg
add
mov
ljmp
das
lahf
cmc
mov
mov
push
repz
xchg
sahf
add
call
rcll
lea
arpl
push
in
outsl
pop
sub
push
add
sbb
xlat
push
mov
or
scas
loopne
sbb
mov
mov
sbb
sub
popf
sub
push
decl
ljmp
cmp
lcall
add
clc
popf
dec
lock
imul
cmpsb
mov
into
sub
and
mov
mov
cld
or
mov
ret
gs
sbb
mov
and
js
fistpll
mov
sbb
test
dec
ss
sub
dec
xlat
push
negl
clc
call
mov
dec
aas
xchg
insb
in
pop
clc
les
push
xchg
jge
and
inc
push
add
sub
cmc
sbbl
cmpsl
push
xchg
push
sahf
xor
into
dec
inc
cld
dec
imul
sbb
jg
out
pop
add
pop
inc
mov
test
stos
mov
mov
and
or
insl
stos
jge
fwait
loope
xchg
shlb
addr16
sub
inc
or
in
pushf
out
cmp
sti
subb
push
jg
jb
imul
and
jle
lcall
cmp
fsubr
lcall
xor
js
enter
loop
sbb
subb
adc
idiv
jmp
push
sbb
es
sbb
or
cwtl
dec
xchg
or
pop
adc
call
fcmovnbe
call
mov
insb
inc
sbb
mov
call
popa
jne
pusha
pop
push
std
xchg
pop
bound
xchg
or
aam
cld
out
mov
scas
ss
and
or
lea
decl
cmp
adc
jle
icebp
lods
outsb
mulb
sbb
scas
push
ret
pop
stos
std
ja
arpl
mov
sbb
int
xchg
loopne
ror
stc
arpl
cli
or
sub
stc
mov
mov
mov
inc
clc
cmp
jbe
ljmp
dec
out
adc
lods
xchg
xchg
pusha
cmp
or
movsl
stos
mov
jo
adc
xchg
ds
and
add
das
shrb
add
nop
nop
jl
sub
inc
mov
sub
ljmp
mov
mov
push
ret
push
decl
jge
inc
xchg
or
in
xor
xchg
or
insl
cltd
push
mull
je
add
aaa
mov
enter
mov
pushl
cmp
sub
int3
sbbb
fildll
xor
imul
push
fadds
insl
testl
and
loop
inc
bound
pop
push
lea
jbe
shlb
jne
addr16
adc
test
adc
sub
add
fbld
in
push
mov
je
outsb
inc
and
lock
inc
cmc
cs
or
push
stos
js
xchg
push
cs
lea
pop
mov
mov
lods
sub
rclb
add
mov
pop
call
push
mov
bound
lcall
or
xchg
and
fsubs
idiv
mov
lods
cmc
call
fisubl
ret
fbld
sub
xchg
lea
aaa
push
jbe
mov
dec
loop
sti
pop
aaa
mov
pop
lcall
es
push
lods
mov
mov
test
inc
xchg
sbb
dec
sbb
sbb
in
loop
jo
jg
sub
js
cmp
cmp
ds
push
loop
dec
xor
sub
test
xor
in
in
lods
pop
sar
mov
jle
sub
dec
in
adc
ljmp
add
push
mov
add
jb
add
rclb
iret
xor
out
jg
fisttpll
sbb
push
mov
out
add
insl
outsb
repz
jbe
push
jg
scas
cmp
add
or
sub
cmp
ss
inc
pop
push
orl
mov
and
fldt
fistps
or
mov
inc
cmp
sbb
push
sarb
inc
lcall
shll
push
or
in
adc
insb
jb
add
scas
or
or
pop
shrl
and
mov
data16
lock
pop
add
inc
mov
and
push
add
inc
imul
sub
mov
cmp
std
xor
test
das
xor
jmp
les
xor
and
stos
jg
movb
inc
xchg
cmp
lds
jbe
mov
mov
je
icebp
pop
jmp
sbb
xor
inc
push
xchg
mov
adc
insl
fists
loope
sbb
inc
dec
push
push
dec
adc
nop
pop
sahf
inc
pop
add
xor
cmc
arpl
subl
xchg
jns
dec
sub
sub
mov
call
add
int
pop
inc
das
sub
adc
fldt
cwtl
repnz
pop
insb
dec
mov
addr16
sbb
fimull
mov
pop
cmp
dec
xor
sub
int3
andl
adc
add
imul
pusha
cmp
sub
call
cwtl
add
adc
add
mov
jg
test
adc
ss
inc
mov
movsl
add
ss
sbb
sbb
sub
add
pop
sbb
int
inc
fs
sub
xchg
and
push
fidivl
mov
xlat
adc
jmp
mov
fdiv
cmc
xor
mov
mov
iret
add
idiv
popa
push
clc
popa
or
insl
orl
cmp
push
jle
or
xchg
in
pop
mov
jg
rcll
adc
push
jnp
or
pop
dec
sbb
add
ljmp
adcl
adc
out
into
sbb
orl
xor
adc
stos
pop
mov
xor
and
std
aad
add
out
call
add
dec
shrl
xor
outsl
ucomiss
ss
aaa
roll
pop
inc
loopne
sub
pop
mov
add
outsl
inc
xchg
cmp
push
push
jne
fcomp
lea
sbb
hlt
cld
lods
jge
jp
loop
aas
add
arpl
add
pushf
popf
adc
push
and
mov
mov
sbb
les
push
ret
movsl
movsl
ljmp
cmp
pop
dec
aam
test
sbbb
std
pop
pop
shr
inc
sub
faddl
sub
daa
lock
or
scas
cmp
jbe
mov
xchg
adc
pop
dec
add
xor
ljmp
scas
cs
das
fmull
push
push
jnp
call
inc
sahf
dec
dec
jae
repz
cmp
cli
mov
das
loopne
imul
aaa
push
xchg
ljmp
xchg
in
inc
insb
pop
int3
add
in
je
in
pop
imul
jo
or
push
outsl
in
pop
icebp
and
gs
adc
and
add
adc
fdivr
sbb
or
or
adc
dec
insl
ljmp
sub
fwait
adc
inc
xchg
aaa
and
add
test
ds
adc
dec
sub
dec
lock
enter
fdivp
sub
or
adc
sysenter
dec
sbb
or
jbe
clc
or
cmp
xchg
mulb
and
jo
ljmp
xor
popa
lock
or
ljmp
pusha
fsubrs
pop
push
add
cmp
out
loop
arpl
data16
mov
outsb
outsl
xor
clc
cmp
rcl
adc
xchg
cmp
in
fildll
mov
cltd
or
jnp
nop
pop
mov
lret
push
shll
mov
ret
test
mov
mov
lcall
lret
cmp
sub
call
mov
rcr
sar
xchg
enter
loop
pop
xor
sbb
sbb
outsl
mov
es
sbb
xchg
ljmp
imul
sbb
ljmp
decb
mov
cmp
mov
loope
sbb
xchg
in
add
push
mov
mov
push
das
push
xor
das
outsl
and
mov
mov
inc
bound
or
imul
inc
aad
fstps
jg
jl
adc
cmp
sub
xor
sbb
pop
adc
cmp
mov
mov
popf
inc
sbb
mov
xor
imul
scas
and
mov
cwtl
negb
push
jne
mov
dec
mov
or
jb
shrb
cmp
ret
add
notb
dec
push
pop
mov
mov
dec
pop
cmp
dec
js
insl
jge
std
outsl
xor
insb
loopne
in
insl
and
loopne
and
pop
outsb
repz
push
sbb
xchg
call
int3
fwait
std
shl
insl
sti
mov
add
push
mov
lds
aaa
mov
in
and
gs
inc
cmpl
loope
jns
push
dec
out
cltd
pop
adc
mov
insl
pop
call
loop
cmpsl
rolb
mov
jo
push
aaa
les
scas
out
push
xchg
or
outsl
mov
xor
loop
adc
xor
push
dec
mov
out
pop
add
pop
or
mov
mov
jmp
sbb
add
rcl
push
in
stos
ljmp
loopne
or
in
roll
icebp
lea
lods
repnz
unpckhps
jnp
add
lret
std
xchg
loop
sbb
std
mov
mov
cmpb
pop
mov
jnp
rol
push
loopne
fs
or
popf
jp
fistps
popa
xchg
adc
cmc
inc
jnp
dec
inc
xchg
inc
dec
pop
xchg
sbb
adc
jle,pt
jmp
das
xchg
lds
icebp
jg
mov
shlb
xor
xor
decl
arpl
lahf
cmc
sub
inc
adc
push
bound
loope
mov
testl
loopne
dec
in
sbb
or
adc
add
jbe
dec
jne
movsb
mov
adc
add
xchg
cmp
xor
int3
loopne
mov
sbb
pop
hlt
add
push
pusha
jno
push
push
inc
ja
fistps
fwait
adc
call
or
addr16
add
and
lds
sar
das
sub
and
mov
outsl
sbb
incl
push
clc
lcall
lock
cld
shlb
sbb
incl
pop
push
out
dec
or
lock
sub
pop
mov
push
sahf
or
add
push
jle
jg
mov
sbb
mov
inc
inc
push
push
jle
js
arpl
data16
pop
aam
cmpl
add
and
sub
in
mov
fisubrl
orl
sbb
pop
sub
popa
push
cmp
outsl
out
decl
pop
xchg
jge,pn
cld
jae
inc
dec
scas
xchg
lods
cmpb
push
xchg
outsb
sbb
xchg
push
stos
pushf
dec
hlt
lcall
movsl
push
mov
pop
pusha
ljmp
mov
push
std
adc
leave
cmp
imulb
push
test
inc
shlb
adc
loop
daa
sbb
inc
insb
gs
pop
ret
mov
or
mov
lcall
mov
arpl
or
clc
jp
loopne
push
leave
push
ljmp
or
cmp
pop
mov
jae
stc
sbbl
adc
dec
decb
lahf
jecxz
pusha
push
push
xor
sti
adc
push
into
inc
sub
in
mov
and
js
in
or
add
das
push
insl
sarl
adc
and
jb
sub
or
subb
sahf
jmp
rol
das
aam
mov
adc
dec
inc
cld
inc
dec
pop
out
xorl
cmc
mov
xchg
fidivrl
ds
push
pop
push
mov
aad
mov
pop
data16
jg
sub
repz
xchg
jo
add
sbb
push
test
jg
mov
mov
arpl
pop
clc
int
mov
mov
bound
pop
xor
psubd
jle
aad
call
int
mov
shl
divl
xchg
push
outsl
adc
cli
mov
jmp
ljmp
inc
in
push
or
xchg
int3
out
sub
incl
mov
add
dec
and
cli
xchg
mov
lock
or
add
xchg
jnp
adc
ret
and
icebp
in
and
pushf
lcall
xchg
in
imul
and
xchg
sub
dec
shr
fistps
ret
sti
dec
inc
popf
pop
fidivl
adc
test
insb
xchg
mov
fisubrl
pop
ficomps
pop
fdivr
sbb
add
xchg
jg
aas
je
clc
mov
add
mov
clc
push
sbb
es
dec
addb
mov
sub
pop
push
adc
dec
pop
ds
jg
lods
sub
cwtl
xchg
sbb
dec
lods
push
mov
test
out
jb
pop
inc
mov
pop
sbb
and
vpmadcswd
and
lret
pop
sbb
aad
pop
or
sbbb
and
pusha
and
mov
add
push
lods
cwtl
sahf
lcall
sbb
jle
pop
arpl
or
jnp
sbb
push
push
or
fadds
fsubs
or
inc
sub
daa
push
addr16
jg
popa
jmp
pop
push
cmpsb
sbb
xor
bound
aaa
inc
sbb
sub
nop
ret
clc
and
js
ss
add
mov
mov
fs
adc
cmp
sbb
add
cmp
sahf
pop
add
inc
inc
mov
gs
adcl
pop
stos
loope
push
das
add
mov
dec
mov
clc
push
xchg
push
into
stos
and
ficoms
les
mov
je
add
mov
test
push
insb
lcall
push
and
push
in
jo
mov
je
loop
ret
sub
cltd
lock
rcr
xor
daa
cmp
ljmp
lods
mov
rolb
sbb
decl
clc
bound
xchg
mov
push
cli
stos
xchg
sub
pop
mov
pusha
inc
push
loope
ss
insl
mov
pusha
addr16
pop
mov
std
sbb
fsts
mov
lret
out
push
and
outsb
out
andb
xor
std
sbb
insb
cmp
xchg
iret
mov
sbb
insb
fwait
lret
je
cmp
imul
adc
and
push
jo
jecxz
jnp
mov
call
jge
mov
pop
push
pop
pop
es
add
std
push
fidivrl
js
or
mov
sub
inc
ljmp
push
mov
pop
add
divb
insl
jo
add
mov
sub
cmp
faddl
dec
adc
sub
sub
mov
pop
sbb
mov
xchg
popa
fadds
sbb
shrb
ljmp
je
orb
push
add
dec
inc
dec
ffreep
mov
pop
inc
testb
add
cmp
stos
adc
mov
xchg
jns
ror
xor
test
cmp
sub
sbb
pop
xor
sub
mov
xor
mov
push
push
icebp
movb
movsl
mov
out
pusha
jg
dec
push
sbb
sub
jg
jle
mov
ljmp
add
xor
popa
cmp
fcmovu
push
push
pusha
outsl
dec
imul
mov
mov
push
cmp
stc
jl
cmpsb
add
dec
jl
jne
lods
cmp
and
repnz
push
aas
mov
adcl
or
das
inc
or
push
icebp
or
lea
xor
mov
nop
fists
hlt
call
inc
dec
jnp
sub
add
call
sbb
sbb
push
xchg
pop
add
add
lds
lret
or
jae
or
rolb
stos
rcl
mov
dec
add
int
sub
pop
pushl
jl
mov
cmp
test
add
dec
decb
lea
gs
cmp
lcall
in
ds
and
insl
xor
jmp
adc
repz
or
dec
push
lods
in
pop
sbb
push
pop
lret
cmp
cld
push
dec
shl
mov
ret
mov
cld
push
and
jg
rclb
dec
jge
xor
mov
pop
aad
aam
movsl
or
aam
push
pop
push
push
sbb
adc
add
add
inc
cltd
je
daa
mov
jb
pop
xchg
jl
mov
bound
addr16
lcall
lea
test
add
adc
out
jecxz
add
mov
sbb
cmp
cltd
push
xorb
je,pt
add
insl
je
inc
js
inc
push
pop
das
cmp
xor
das
fsub
sti
xor
mov
cltd
pop
sbb
dec
xor
pop
sbb
xor
xor
dec
inc
add
lods
repz
push
std
test
adc
loop
int3
adc
fcomps
jg
cwtl
aas
adc
or
jecxz
add
sub
or
mov
or
subb
decb
lcall
mov
repnz
lods
inc
pusha
shrl
add
in
in
push
fsubrl
sbb
lcall
lds
jnp
cs
daa
je,pt
hlt
cmp
repz
pop
ret
jle
add
das
xchg
ds
pop
hlt
decl
mov
sbb
or
leave
pushl
cli
nop
inc
add
pop
clc
xor
add
stos
rcl
inc
das
mov
inc
sti
popl
in
push
movsb
adc
and
adc
lcall
js
ss
adc
push
adc
shrb
inc
decl
shll
pop
jo
add
outsb
hlt
inc
cmp
iret
or
jl
xchg
adc
lock
adc
cmp
adc
jb
lock
sbb
nop
hlt
movsl
xchg
push
pusha
xchg
lret
or
fwait
mov
inc
out
xor
fimuls
add
sbb
test
adc
or
sbb
mov
adc
xchg
sar
push
cwtl
inc
cmp
aas
jo
pop
fdivp
clc
popl
xor
jns
and
mov
cmpb
fistl
mov
push
push
imul
lock
testb
push
dec
pop
jno
mov
call
inc
mov
jg
dec
sahf
or
and
adc
push
std
or
outsl
jp
or
roll
dec
cmp
ljmp
inc
iret
pop
pop
dec
gs
push
es
mov
xor
jae
pop
lock
hlt
pop
dec
xor
push
adc
mov
mov
dec
mov
jne
jne
cld
mov
adc
pop
and
imul
std
fidivs
bound
lock
adc
nop
popf
mov
lcall
lcall
cmpsl
cmp
inc
pop
fcoms
cmp
jns
es
fwait
mov
movsl
es
shll
je
xchg
mov
dec
xorb
ljmp
jb
adc
aas
push
push
pop
sbb
jbe
or
xchg
outsl
sub
dec
adc
aaa
pop
jb
dec
inc
push
das
stos
icebp
jg
push
loop
insb
add
sbb
shlb
or
inc
cmp
xor
addr16
inc
bnd
fnstsw
decl
lcall
pushl
imul
add
shlb
cmc
and
imul
out
xchg
ret
cmp
fwait
add
cld
lea
jle
jle
sbb
imul
ljmp
pop
divb
xchg
mov
cmc
cwtl
icebp
pusha
pop
adc
inc
in
dec
add
fildl
xchg
mov
pop
out
mov
xchg
das
sub
xchg
push
fs
adc
push
mov
cld
mov
ljmp
push
jg
mov
pop
or
lcall
jle
mov
lret
jmp
insb
in
pop
insb
pop
nop
not
lods
leave
pop
fs
adc
pop
push
call
je
dec
xor
rorl
jb
data16
or
pop
outsb
push
add
aad
cmp
sahf
sbbl
frstpm(287
out
cmp
sbb
subl
sbb
adc
cs
rcll
cmp
das
psubsb
jmp
movsb
sub
or
std
pop
jl
imul
pushf
sbb
or
outsl
aad
cs
xchg
and
outsl
icebp
adc
mov
mov
push
enter
cld
decl
dec
lahf
add
pop
push
inc
adcl
mov
push
jne
push
cwtl
rcrb
sbb
xor
std
ljmp
int3
mov
add
dec
es
insb
mov
cmp
xor
and
lods
rolb
or
xchg
ja
cmp
repz
test
inc
mov
inc
jo
and
cmp
loope
push
clc
aaa
cli
pop
pop
xchg
loopne
mov
sbb
pop
adc
loopne
insl
dec
decl
mov
cs
mov
pop
xchg
cmp
inc
cmpsb
repnz
pop
cli
fists
fadds
loopne,pn
cmovs
mov
push
es
bound
pop
inc
mov
xchg
push
dec
lahf
stmxcsr
jp
in
mov
lcall
pop
adc
orl
dec
cmc
push
xor
lret
and
or
jae
add
add
add
lods
lahf
push
cmp
push
repz
clc
push
adc
add
orb
pop
add
cmpsl
packsswb
lods
sar
mov
insl
adc
cmp
inc
movsl
fadds
je
mov
vpmullw
mov
call
fstl
xchg
int3
mov
or
rcrb
mov
push
cmp
xor
outsb
daa
mov
outsl
jno
push
push
shll
pusha
xchg
mov
lretw
out
add
inc
add
push
add
sub
clc
inc
out
pop
pop
adc
test
jne
mov
repnz
aas
push
add
cli
mov
addb
mov
nop
cwtl
jae
sarb
push
xchg
xchg
adc
push
sbb
aam
pushf
in
sahf
push
and
ja
dec
add
jo
pusha
popf
push
rcr
pop
jp
jg
pop
mov
jb
mov
es
nop
addr16
das
lock
pop
mov
jns
je
in
popa
and
call
and
lret
jle
mov
insl
jg
pop
fildl
adc
mov
sbb
mov
or
dec
in
testl
outsb
out
mov
jmp
xchg
push
mov
decb
jae
lahf
pop
or
mov
inc
xor
push
ret
mov
lods
push
xchg
xchg
outsb
mov
outsl
sub
dec
push
xor
rcrl
sub
outsl
mov
pop
inc
pop
cmc
rorb
jbe
push
push
outsb
pop
inc
inc
nop
lcall
adc
inc
add
and
std
push
lcall
loopne
mov
std
mov
add
enter
or
inc
gs
cli
aaa
sub
insl
xor
clc
fwait
pop
outsb
fildl
mov
flds
dec
pop
push
mov
jecxz
pop
test
jbe
cmpsb
outsl
aas
push
jge
fidivrs
loopne
pop
add
ljmp
int3
stc
push
pop
and
test
in
insb
lock
add
rorb
dec
inc
das
xor
xchg
jae
push
and
sahf
arpl
jne
cmp
xchg
insb
add
inc
mov
test
jg
sub
sbb
sub
or
dec
rcrl
pusha
les
push
fsubs
pop
cmp
in
xchg
sahf
add
push
or
mov
mov
dec
call
inc
leave
arpl
pushl
push
aad
adc
clc
jmp
jge
mov
adc
or
adc
push
pop
test
adc
mov
test
push
fidivl
inc
and
push
lahf
or
mov
push
enter
sbb
out
mov
imul
lret
cmc
pop
ret
fistl
mov
sub
pop
push
pop
rcll
int3
lahf
mov
outsl
int3
pop
iret
addl
inc
pop
adc
call
or
ror
or
decl
js
cwtl
dec
mul
jo
push
rol
test
es
lods
fldt
sub
mov
adc
add
inc
std
sub
pop
cltd
inc
pop
test
data16
xor
leave
jbe
jecxz
xor
jg
data16
xor
dec
inc
cs
dec
xor
mov
push
add
or
mov
sbb
jne
out
mov
filds
push
enter
insb
adc
or
sti
test
mov
add
and
cs
inc
cs
mov
orb
add
jno
mov
in
push
sti
fldt
or
ret
aam
adc
or
mulb
sbb
add
or
push
fiaddl
sub
insl
jmp
mov
sbb
lock
jae
dec
loopne
adc
dec
arpl
sub
mov
jae
test
push
cmp
push
fwait
xchg
rol
lock
clc
jbe
test
sub
pop
cwtl
incb
pop
adc
jnp
adc
aam
fucomp
mov
mov
xchg
roll
push
xchg
out
and
sar
adc
xor
cmp
and
jo
ljmp
jp
sbb
leave
push
gs
aas
out
push
pop
add
es
or
fildl
jnp
push
xchg
inc
fists
sar
das
in
inc
addl
in
call
xor
pushl
or
arpl
add
push
sbb
mov
loope
std
pop
xor
and
outsl
inc
cmp
aas
fld
sti
call
add
arpl
adc
mov
jno
in
mov
addr16
inc
pop
pop
cli
jmp
sbb
ds
mov
jl
ja
or
push
shrl
pop
test
adcl
sbb
mov
in
add
je
mov
inc
sub
outsb
mov
or
ljmp
jmp
jne
jno
push
orb
push
xchg
subb
add
pop
cmp
dec
or
das
out
add
gs
or
pop
popf
push
jg
dec
adcb
test
mov
push
cmp
rorl
add
dec
stos
xchg
jno
cmp
inc
dec
adcb
test
aaa
push
push
jg
mov
sub
pop
enter
call
mov
push
xor
rcl
pop
loop
xor
sti
addr16
cmc
pushl
or
push
std
mov
mov
sbb
fstpl
push
mov
cli
daa
xchg
orb
test
call
inc
push
imul
movsl
push
pushw
jnp
shl
rcl
out
inc
pop
pop
push
cltd
out
cs
push
decl
or
xchg
das
xchg
icebp
int3
ficoml
shl
ljmp
repnz
adc
sub
stos
pop
imul
ss
mov
in
shll
xchg
mov
push
inc
cli
insl
test
inc
mov
fwait
jbe
fistps
daa
arpl
mov
cmp
sub
jno,pt
insl
add
ja
adc
cwtl
cmp
xor
imul
mov
jmp
jnp
pop
test
sbb
xchg
loope
xchg
and
nop
int3
sbb
dec
dec
pop
push
outsb
jmp
dec
inc
xorb
cmp
push
pop
in
fwait
test
dec
sahf
fsubs
arpl
incl
push
stc
sti
or
mov
imul
push
mov
jge
out
push
mov
js
adc
jmp
add
mov
and
jne
pop
pusha
sbb
lods
idiv
pop
jbe
arpl
dec
mov
xor
lock
push
adc
push
ret
and
das
add
or
jae
add
fistl
push
rdmsr
add
loop
dec
int
and
jl
push
xchg
ss
xor
push
mov
cmpsl
bound
push
jae
xchg
arpl
ret
das
add
pop
out
syscall
aaa
ljmp
xchg
mov
ds
jge
xor
lret
adc
push
ss
aas
sub
addb
push
add
lcall
js
call
cs
sub
addl
call
ret
mov
cmp
loopne
sarb
sti
jl
push
pop
and
daa
or
add
cs
cld
fdivr
call
adc
ljmp
xor
xchg
es
ds
aam
xchg
add
aaa
shr
or
jmp
or
clc
insb
aaa
and
add
cmp
and
xor
aas
add
in
and
loop
test
popa
pop
push
adc
xchg
xchg
mov
push
adcl
or
rcrl
push
cmp
test
arpl
pop
push
xor
jg
mov
test
xor
call
inc
cmp
xchg
clc
fsubrl
jo
xor
mov
insl
call
and
sahf
ss
dec
stos
mov
dec
sbb
sbb
or
stc
ljmp
add
pop
cltd
es
sbb
adc
inc
clc
mov
jge
and
or
ret
sub
aam
jle
inc
jg
inc
jbe
lds
mov
je
popf
notb
mov
sub
cli
jnp
jmp
inc
jo
and
aam
pop
inc
icebp
pop
popa
mov
pop
add
fildll
or
sub
into
dec
pop
adc
sbb
adc
mov
lcall
mov
push
icebp
sbb
jo
jl
outsl
sub
pushf
xor
ret
subb
mov
push
dec
test
cwtl
int
xchg
xchg
pop
fldt
jne
pop
ud1
and
cli
push
pop
inc
xor
in
xchg
fsubrs
ljmp
insb
cld
add
dec
sub
in
lock
fstpt
lds
cmp
std
mov
push
repz
mov
inc
int3
xor
add
popf
inc
fildl
lret
aaa
outsl
add
mov
xchg
jne
mov
xor
pop
test
cmpl
cmp
mov
push
cmp
ja
dec
mov
jns
mov
enter
push
inc
jg
mov
loope
adcl
bound
push
xor
cmp
inc
pop
jb
lcall
adc
mov
inc
xrelease
fsubrl
sbb
popf
or
ss
push
adcl
sub
int3
pushf
xchg
add
icebp
dec
xor
add
pusha
mov
mov
adc
add
clc
push
jl
call
cmp
ss
push
inc
cmp
dec
es
push
or
and
in
imul
std
inc
outsl
jo
xor
inc
jno
daa
bound
xchg
clc
scas
loopne
je
or
cmp
stos
loopne
xchg
push
out
add
pop
jae
or
jge
jl
dec
nop
dec
pop
jl
dec
hlt
jl
dec
psrad
pop
jle
pop
roll
pop
in
adc
test
outsb
insb
fdivrl
inc
push
insl
testb
addr16
movsb
or
xchg
xchg
sub
incl
popa
ss
rolb
dec
mov
push
inc
sar
insl
fisttps
xor
jmp
mov
ficoml
mov
repz
push
lcall
divl
cltd
out
or
or
test
aad
out
mov
push
xchg
push
out
leave
idiv
push
lea
outsb
add
loope
ds
incl
push
out
mov
outsl
outsl
imul
fiaddl
pop
popa
or
xchg
sti
sbb
aad
sbb
sub
lods
les
xorl
jg
movsl
pushl
cmp
loopne
sbb
iret
mov
jbe
insl
cld
mov
js
or
jle
je
jl
and
mov
and
stc
imul
or
add
adc
sbb
jg
int
push
jo
push
dec
fsubs
lock
sbb
push
mov
outsl
pop
nop
nop
dec
rolb
sub
sbb
cli
jg
inc
sub
push
sub
nop
mov
sar
sub
jg
addb
in
or
mov
mov
hlt
dec
loop
pop
push
shll
shlb
sbb
push
push
sub
ret
inc
fprem1
inc
sub
bound
fsubrs
lcall
add
or
push
jo
fistl
and
mov
dec
ret
aad
out
es
insl
orl
xchg
push
gs
xchg
and
lret
les
in
ljmp
loopne
xchg
mov
out
cmp
sar
push
and
in
into
rorl
out
fbstp
lock
mov
loopne
or
or
push
and
ljmp
movsl
jecxz
add
push
lock
mov
push
push
hlt
outsl
insl
pop
incl
insl
push
add
aas
pop
xchg
adcb
sbbb
mov
inc
xchg
inc
imul
push
movsl
push
push
subb
incb
scas
stos
or
cmpb
ret
movups
jmp
add
inc
arpl
aad
outsl
push
rolb
and
adc
push
pop
repz
pop
clc
pushl
add
add
push
jmp
sbb
bound
or
adc
decl
mov
dec
sub
data16
ret
popl
inc
or
lods
aas
and
or
outsb
inc
xchg
lock
clc
xorb
xchg
pop
and
jle
adc
cmp
cli
pop
in
mov
jbe
mov
or
and
add
decb
loopne
pop
cmp
in
idiv
sbb
shrb
lcall
cli
jmp
adc
fcoml
and
fsubrs
aas
jecxz
jnp
cld
sub
repnz
and
pop
inc
loopne
jo
xor
inc
movsl
data16
sbb
icebp
inc
ljmp
add
cwtl
bound
xchg
je
stc
xchg
xor
and
icebp
ret
sbb
int3
push
pusha
mov
push
aaa
aam
scas
rolb
or
dec
jo
nop
fwait
cmpb
clc
sbb
xchg
xor
ret
mov
lds
inc
iret
adc
lods
pushaw
or
jge
pop
rcrb
std
icebp
cs
ret
pop
inc
jne
in
mov
cmpsl
lods
sub
xor
dec
repnz
push
or
je
add
addr16
jg
and
imul
sbb
xchg
cmp
or
outsb
jne
sub
push
stos
add
xor
sub
push
es
outsl
adc
push
dec
cmpsl
testb
aad
adc
add
loopne
push
inc
loope
xor
jno
jns
in
pusha
insb
sbb
push
pusha
js
jge
mov
cltd
adc
jle
fbstp
imul
push
mulb
or
cmp
sub
sbb
adc
pop
push
fmul
inc
sti
in
or
subl
popa
lea
incb
pushf
and
in
xchg
or
fidivrl
aas
or
in
push
cmp
ret
xor
pusha
arpl
push
inc
lock
or
popa
mov
incl
popa
and
mov
and
push
idivb
push
imul
fs
scas
shrl
push
out
aas
pop
jnp
dec
push
filds
add
or
incb
or
inc
mov
ret
sarb
cwtl
cwtl
test
or
pop
test
cmp
ja
int
pusha
and
sub
ljmp
mov
adc
mov
js
sbb
imul
outsl
hlt
insb
out
cmp
pop
adc
push
mov
push
cmp
das
mov
test
jmp
outsl
inc
dec
int
sub
sbb
inc
adc
xchg
add
cmpsl
adc
pop
add
mov
push
cld
cmpb
icebp
jnp
sbb
inc
and
jbe
cmp
fdivrs
push
aad
cld
xor
xchg
mov
xchg
das
xchg
pmulhuw
sbbb
push
rolb
jmp
cmp
fbstp
xchg
ficoms
and
and
icebp
adc
in
mov
xchg
sbbb
arpl
mov
add
les
add
cld
dec
pop
fdivr
jg
div
cmpsl
cs
pop
xchg
aaa
aam
bound
jo
ja
fcoml
ja
sbb
lea
mov
dec
iret
loopne
cwtl
insl
loopne
arpl
outsl
or
jb
mov
xor
arpl
dec
jg
pop
fadd
adc
and
lods
fdivr
mov
inc
adc
dec
testl
test
pop
lods
mov
call
shl
jb
mov
fimuls
mov
add
ds
mov
inc
mov
mov
jle
addr16
outsl
les
jecxz
call
shrl
adc
mov
or
insl
out
jp
ljmp
inc
in
xchg
pusha
mov
jne
and
ret
pop
push
cmp
push
decb
xchg
push
sub
in
xchg
dec
cmp
in
mov
mov
mov
push
out
test
xchg
nop
add
shlb
mov
aaa
insl
jecxz
mov
cmp
jb
push
adc
mov
adc
xchg
fadds
mov
jae
add
lds
sbb
ss
sbb
out
xor
xor
mov
pushl
shrb
xchg
mov
call
stc
inc
fstpl
aam
cs
add
addb
mov
in
out
xchg
push
mov
xor
push
inc
sti
adc
inc
aaa
stos
orl
dec
push
mov
fcomi
add
pop
rcr
mov
and
idiv
jo
push
arpl
add
xor
outsl
jmp
adc
mov
lcall
pushl
sbb
or
sbb
cltd
add
pushl
pop
cmp
pop
jmp
pop
pop
test
in
inc
and
add
push
xchg
stc
pop
insl
lock
cld
loop
mov
sbb
addb
pusha
jmp
and
jmp
add
mov
sbb
pop
jp
loop
jbe
push
arpl
aaa
pop
inc
mov
sub
movsl
fwait
add
dec
xchg
decb
js
add
data16
ss
or
clc
out
data16
sub
sbb
cmc
lea
repnz
int3
dec
fldenv
push
sbb
pop
jg
lea
sbb
xchg
push
outsl
mov
mov
cltd
push
mov
inc
sbb
cmp
popa
mov
dec
dec
rorb
cmp
lahf
movsb
ja
ljmp
loop
pusha
inc
sti
xchg
arpl
ds
insb
xchg
outsb
decl
in
and
lea
inc
push
cmp
ret
jg
cmp
jns
and
insb
sub
ss
inc
adc
jg
sbb
pusha
cmp
out
call
mov
subl
call
stos
adc
insb
sub
lahf
fistpl
mov
lock
inc
clc
pop
pop
xchg
fisubl
xor
jb
lcall
dec
ret
pushl
add
ja
mov
sbb
add
push
call
call
mov
jg
jo
lea
data16
or
hlt
arpl
es
mov
pop
dec
xorl
xorb
push
decl
ffreep
cltd
inc
bnd
inc
popa
or
mov
dec
rcr
loopne
data16
or
push
ss
and
imulb
xchg
add
aas
xlat
mov
jno
ljmp
daa
pusha
iret
pusha
out
jle
clc
dec
mov
aaa
mov
lcall
mov
add
push
inc
fs
mov
es
xorb
pop
pop
orl
sti
test
inc
sbbb
push
jbe
jg
movsl
adc
cwtl
push
ret
jbe
mov
aaa
mov
gs
addb
xor
and
jg
xor
sub
or
fcomip
lcall
xchg
jp
ljmp
sub
imul
add
jg
fidivs
icebp
andl
mov
loopne
scas
inc
adc
jnp
mov
stos
or
pushf
sti
aas
outsl
dec
iret
or
fadds
cmp
stos
cmp
fwait
pop
loopne
xchg
push
sub
xorb
sbb
orb
sbb
outsl
mov
sbb
mov
adc
shll
call
adcb
pop
sub
idiv
or
sbb
pop
or
sub
das
mov
inc
or
and
mov
sbb
mov
movsl
pop
insb
add
pop
jb
xchg
mov
pop
filds
push
and
lcall
push
pop
dec
lea
mov
dec
popa
stos
jbe
outsb
jl
or
push
imul
pop
cmp
xchg
sarb
repz
insb
cs
jno
cs
mov
jg
stos
cld
xchg
pop
test
nop
mov
and
adc
gs
adc
mov
cli
lcall
xor
call
lea
jns
dec
add
lea
in
or
add
pop
push
jno
add
or
xchg
lock
sub
sar
sbb
outsl
mov
pop
cld
mov
cmp
dec
sub
add
adc
xchg
dec
dec
inc
xchg
rorb
adc
sbb
popf
jnp
xor
xor
sbb
sub
les
mov
mov
jp
add
lock
outsl
push
fdivr
popa
mov
mov
mull
sub
incl
and
je
sub
outsb
jbe
decl
dec
pop
pop
leave
jge
bound
aad
sbb
adc
add
cmp
pusha
push
xorb
repz
mov
jmp
mov
dec
push
aas
add
sub
cs
adc
mov
adc
pop
jo
mov
jbe
xchg
arpl
insb
sub
sbb
and
addr16
mov
test
cmpb
lahf
mov
lods
or
pop
stc
das
and
jae
sti
movsl
ds
sub
pop
imul
add
in
mov
call
cmp
shll
sub
or
mulb
jnp
divl
incl
movsl
xchg
das
inc
pusha
clc
jg
push
out
add
shrb
cli
cmpsl
fstps
hlt
push
add
lock
dec
outsl
xchg
dec
pop
popl
add
adc
std
aad
cmp
pop
jmp
es
call
popf
nop
jne
imul
sarl
push
push
sub
lds
push
mov
fmuls
adcl
dec
incb
pop
fdiv
mov
mov
jp
pop
adc
sbb
stos
insb
and
pop
mov
or
push
std
shrb
jae
inc
lock
add
push
lods
push
dec
jl
loopne
ja
and
inc
adc
push
jmp
mov
es
fwait
lea
insb
repz
imulb
and
xchg
lcall
insl
ja
mov
mov
add
in
sbb
mov
push
adc
inc
dec
les
dec
sub
cmc
pop
add
pop
add
lods
mov
xchg
clc
xchg
push
bound
inc
leave
pop
inc
add
or
inc
lcall
fs
or
jbe
mov
push
mov
shlb
aaa
jmp
aaa
decb
in
popa
push
xor
jp
pop
or
sub
lcall
jge
push
clc
jmp
mov
and
mov
xchg
clc
call
js
jmp
inc
cmc
xor
test
sub
clc
call
ds
loop
dec
jmp
sbb
jno
dec
scas
loopne
pop
int
jns
daa
mov
ficoml
sub
loopne
mov
lret
pop
mov
fildll
xchg
popa
scas
movsb
rolb
push
or
cmp
incl
dec
add
xchg
clc
lock
lock
cmp
sbb
adc
push
ficompl
hlt
mov
inc
xor
hlt
movsl
fidivs
pop
int
int
addb
decl
mov
cs
push
clc
pop
jg
in
orb
cmp
jne
mov
std
and
jp
jne
outsl
push
fbstp
ja
mov
add
add
jp
xor
pop
dec
ljmp
mov
pop
add
xchg
stos
outsl
lods
push
loopne
pextrw
inc
daa
pop
in
fwait
movsb
stos
mov
orps
cmp
das
mov
pushl
stos
add
adc
jle
add
rolb
in
orb
in
or
jle
sub
xor
clc
mov
xchg
jnp
sub
adc
mov
cmp
mov
lcall
add
mov
adc
nop
jno
insl
jae
jo
or
js
adcl
jmp
enter
icebp
jmp
cli
jne
jns
jne
cs
call
inc
push
pop
cmc
cmp
adc
mov
shll
or
push
or
xchg
xor
pop
mov
sub
xor
insb
cmp
or
jno
ret
cmp
shlb
outsl
inc
jecxz
lcall
adc
clc
lods
mov
or
cld
lcall
pusha
mov
add
mov
and
xor
repnz
andl
decl
mov
fsubr
push
lds
arpl
mov
sbb
push
stos
rolb
dec
icebp
popf
and
jno
and
sub
ret
rclb
and
sub
das
insl
mov
cmp
pop
jae
js
jl
add
rcrb
testb
xchg
rorl
dec
and
fldcw
addb
fs
stos
sarb
jo
sbb
aad
inc
push
outsb
repnz
sub
push
sub
add
or
jb
in
mov
ret
loopne
xchg
daa
fisubrs
repnz
xor
leave
dec
push
addl
sbb
incl
popf
jl
sbbb
pop
mov
notb
and
jl
int3
sbb
add
pushf
xor
add
ja
dec
jle
aaa
add
sti
ret
add
lods
ret
xor
sbb
mov
or
insb
push
insb
insb
jne
fld
add
inc
mov
pop
pop
addr16
shll
subb
sbbb
cmp
add
ret
bound
popa
sbbl
fidivrl
sub
test
ret
iret
xchg
loopne
and
std
aaa
cli
push
ja
out
sub
or
push
sub
inc
and
bound
dec
mov
cli
inc
pop
add
mov
sarb
jbe
incl
dec
xchg
cmp
mov
pop
loop
push
mov
cwtl
xor
in
push
and
pop
mov
add
jge
xchg
push
je
pop
loop
sub
fwait
add
inc
pop
mov
mov
fnstsw
xchg
movsb
sbb
add
rolb
and
dec
and
sbb
lahf
mov
shlb
mov
scas
mov
dec
repz
gs
mov
pushl
outsb
adc
add
andb
test
aaa
outsl
push
les
sbb
jne
mov
dec
sub
fildll
xor
leave
sub
dec
jo
sub
cmpsl
aam
cmp
mov
push
xor
add
cs
sub
repnz
pop
cmp
ds
inc
daa
mov
jo
outsb
and
movsl
imul
lcall
adc
pxor
sti
aaa
jle
addb
mov
mov
dec
sbbl
insl
enter
mov
add
dec
popa
and
push
std
adc
lods
out
or
push
fisttps
pop
xor
push
nop
cs
xchg
push
lods
adc
inc
insb
mov
test
adc
inc
mov
daa
orb
adc
cmp
jge
std
adc
insb
push
cmp
adc
in
push
outsl
sbb
leave
push
pop
test
js
lods
and
or
loope
mov
jne
frndint
add
jge
call
mov
push
xor
jecxz
mov
pushf
imul
cmp
mov
lds
outsl
mov
push
mov
icebp
test
sub
pop
mov
sub
out
popf
xlat
mov
inc
push
push
push
imul
cmp
sub
inc
cmp
jne
or
xor
mov
fistpll
imul
push
ret
add
into
push
cmp
sar
lods
rol
scas
popa
mov
mov
loope
and
das
adc
ljmp
loope
insl
call
ljmp
jl
loopne
shlb
les
and
xchg
mov
notl
leave
dec
cmp
mov
in
mov
std
scas
inc
jmp
or
cmp
lcall
mov
test
sti
mov
pop
jae
pop
jl
add
mov
adc
in
mov
sbb
cmovle
cmp
fldt
incb
lods
xor
int3
mov
xchg
hlt
cmp
inc
mov
push
test
xchg
sub
adc
xchg
cmc
stc
xor
loope
ret
aas
or
pusha
mov
sub
mov
mov
ja
mov
and
xchg
cmp
cmp
inc
pop
movsb
add
xchg
stos
outsl
mov
push
push
xor
imul
mov
in
std
aad
mov
dec
shll
nop
inc
add
mov
inc
lret
cmp
push
int
adc
inc
aaa
decb
pop
mov
cmp
dec
sub
aas
mov
data16
lret
jo
cmp
mov
pop
repz
mov
sub
pushf
cmp
mov
fs
dec
xchg
adc
in
outsl
outsl
es
leave
loope
loop
aam
and
pop
loop
pop
scas
mov
mov
or
in
insb
cmp
dec
push
ja
cmp
mov
mov
cmp
mov
dec
adc
rcll
or
decl
inc
pop
and
xchg
add
icebp
mov
cli
add
jge
push
in
and
push
incl
fistl
add
shlb
sahf
daa
popl
stos
mov
pop
dec
push
in
and
mov
shrb
sbb
ljmp
lret
daa
jge
mov
pop
stos
aas
dec
std
jg
xor
mov
gs
pop
xor
mov
test
std
mov
jmp
lea
outsb
call
outsl
cld
lods
push
insb
jb
push
aas
scas
or
add
lock
jg
in
inc
popa
aam
jns
cld
pop
adc
clc
fldt
icebp
cli
sub
lcall
ss
mov
jp
add
fbld
aaa
aam
stc
das
pushf
dec
js
sub
inc
das
push
and
xor
shr
sti
jp
shll
xchg
test
sbb
out
in
or
or
rcll
gs
add
mov
mov
lret
pusha
loopne
add
add
xor
subl
pop
inc
mov
pop
rol
mov
aam
ja
es
fimuls
mov
adc
pop
xor
stc
lock
and
cld
pushl
push
jae
call
sbb
insb
push
xchg
fmuls
insb
daa
add
mov
iret
jmp
aad
shlb
pop
andb
pop
xchg
sbb
pop
sbb
imulb
inc
ljmp
adc
pop
stos
pop
xchg
dec
inc
outsl
in
mov
cmp
mov
jg
adc
sbb
inc
cs
jg
fcomip
or
loopne
jno
xor
lods
incb
cli
call
rol
mov
or
mov
add
sarb
adc
jo
lret
and
or
rclb
sub
loopne
dec
push
cmpsl
mov
jbe
inc
fiadds
push
daa
push
outsl
mov
push
or
test
insl
mov
cmp
add
data16
stos
cli
mov
or
adc
push
fsubrp
cwtl
pop
cmp
repz
mov
fs
cmp
adc
cmp
xchg
or
fsubr
lret
fimuls
pop
fsubrs
mov
mov
hlt
or
sub
mov
lcall
sbb
adc
rorb
or
insl
sub
testl
mov
cs
cmp
cmp
and
push
test
cmp
int
fcoml
mov
shl
dec
stos
outsl
hlt
sub
cli
push
mov
xor
loopne
jg
sub
cmp
loopne
xchg
dec
pushl
push
data16
or
sub
add
cs
mov
add
mov
adc
sar
or
pusha
and
jl
rclb
ljmp
cltd
imul
mulb
sub
call
mov
pop
incb
daa
imul
cltd
lret
cmp
inc
in
sub
mov
shrb
and
stos
add
outsl
mov
mov
inc
stc
rcrb
loop
cld
fucomp
pop
and
psubw
test
loop
adc
push
sbbl
adc
fildl
dec
dec
or
and
movsl
mov
lods
lea
test
sub
add
jp
and
out
xchg
arpl
sbbb
test
sub
pop
mov
jne
xchg
pop
sti
dec
insb
or
xor
ja
std
and
pop
and
mov
add
push
pop
mov
fiadds
insb
ret
aaa
cli
mov
leave
lcall
insb
adc
jno
pop
or
push
push
es
mov
mov
ljmp
inc
imul
or
test
dec
pop
pop
xchg
lock
sbb
pushl
push
mov
inc
adc
incl
push
xchg
lcall
cmpl
xchg
pop
fsubp
shlb
dec
out
out
push
sub
call
cwtl
cld
lods
roll
orb
adc
ret
mov
call
xor
loopne
mov
xchg
and
and
jo
std
jmp
add
dec
repz
mov
out
push
or
adc
jns
xor
jns
loopne
pop
loope
pop
cmp
inc
insl
fnstsw
dec
orl
test
mulb
sbbb
sub
popf
in
std
pusha
popa
jecxz
outsb
inc
mov
xor
jne
mov
push
in
mov
fistps
scas
in
add
pop
cmovns
daa
inc
dec
ret
loope
push
dec
ja
lds
in
outsl
mov
jmp
movsb
scas
add
xchg
dec
ss
pusha
inc
ret
inc
in
jle
pop
test
test
push
lods
std
ja
dec
xchg
inc
mov
idivb
push
in
add
orb
cld
call
push
bound
ja
inc
pop
add
outsl
pushl
nop
repz
mov
jns
inc
lds
pop
dec
daa
cs
inc
push
mov
cwtl
jae
shlb
cmp
test
sub
bound
push
push
in
data16
mov
pop
jno
push
add
stos
push
jnp
pop
sahf
cmp
mov
mov
dec
pop
out
adc
ljmp
or
add
xchg
std
push
imul
lods
test
cmp
mov
imul
mov
adc
addr16
fisttps
pop
push
adc
pusha
imul
inc
cltd
add
xorb
inc
pop
and
fidivs
cs
inc
call
mov
pause
inc
and
in
add
fnstsw
adc
pop
push
les
sub
jns
aaa
jp
mov
popf
popa
sbb
push
push
loopne
sbb
das
test
sbb
hlt
inc
popf
xor
pop
jo
mov
sub
or
sub
pushf
push
jmp
mov
push
lahf
cmp
sub
cmp
sbb
and
dec
pusha
ja
xchg
icebp
roll
stos
test
lods
xchg
outsl
ret
lcall
mov
dec
stc
dec
pop
test
sub
jae
add
jg
cmpsl
push
xor
xor
push
jecxz
imul
out
cs
ja
xchg
inc
mov
cs
push
add
cmp
dec
inc
push
test
xor
pop
add
add
jl
jp
nop
sbb
ljmp
push
xchg
pop
xchg
pop
jb
sub
dec
addr16
pop
call
sbb
and
add
push
lock
jne
add
cmp
dec
mov
pop
cmp
pop
imul
or
std
outsl
movsl
cmp
dec
or
adc
rcr
es
mov
mov
dec
pop
xchg
mov
idiv
mov
lcall
add
cmp
fldt
je
aad
jg
loop
sbb
sbb
das
ds
and
testb
cmp
loopne
jne
pop
shll
sti
jg
pop
xor
gs
cmp
cmp
inc
in
stc
mov
testb
cmp
loope
fsts
inc
jo
cmp
mov
and
or
and
ja
in
adc
jge
enter
incl
xchg
pop
cmpb
add
repnz
daa
insb
sub
sbb
push
stc
aam
mov
outsl
xor
cmp
enter
idiv
pop
sbb
jp
xor
add
jb
das
mov
test
lds
sub
jbe
test
lds
push
mov
test
xorb
mov
xchg
xchg
mov
mov
clc
jg
test
sbb
shr
inc
add
or
add
push
xchg
clc
add
mov
ds
sbb
add
sub
sbb
add
addr16
push
jmp
scas
adc
call
adc
pop
push
cmp
dec
enter
gs
sub
decl
sbb
mov
adc
pop
jns
mov
jg
sbb
dec
sbb
sbb
push
js
mov
xor
jg
ss
pop
loopne
popf
xor
ret
adc
jle
adc
incl
xor
outsl
imul
xor
lcall
cmpsl
pop
jo
cmp
xchg
add
jno
push
outsb
and
cs
pusha
fildl
add
inc
mov
subb
add
dec
xchg
mov
lret
lcall
loope
loope
les
add
insl
imul
bound
adc
cmp
mov
clc
inc
decl
pop
cmp
divb
jnp
addl
xorb
jg
xchg
and
add
std
ret
inc
ret
lret
push
ljmp
fldcw
add
outsb
pop
jne
mov
push
add
ret
jo
sbbl
lods
sub
cmp
jle
inc
ss
rorb
adc
add
pop
pop
xlat
cld
js
jbe
call
jnp
aam
clc
das
xor
xor
dec
jl
addr16
or
mov
inc
imul
idivb
add
imul
add
ja
icebp
movl
sbb
jno
mov
or
push
jle
mov
daa
stc
mov
idiv
decl
sub
xor
stos
dec
add
jmp
aam
lea
add
into
dec
adc
push
or
incb
jle
and
arpl
mov
push
push
mov
out
fs
inc
xor
enter
test
mov
add
sbb
add
mov
std
cmp
xchg
mov
test
nop
fsubrs
push
mov
mov
dec
daa
in
add
mov
push
andps
adc
mull
pusha
xchg
outsl
sub
inc
mov
out
inc
sub
xchg
jb
jne
sub
mov
ret
int
enter
fidivs
xor
mov
and
fistpll
in
jg
aaa
cmp
das
mov
pop
clc
jg
outsl
fadd
mov
xchg
mov
pop
call
and
mov
mov
pusha
loop
insb
inc
cmp
or
xor
sub
sub
sub
ljmp
fwait
mov
or
sub
test
adc
aas
mov
ss
mov
jo
call
aam
jns
les
sahf
loopne
nop
xchg
push
add
inc
mov
xlat
inc
and
icebp
popa
jecxz
shlb
xchg
cmpl
cwtl
imul
faddl
idiv
pop
xchg
jge
jmp
outsl
lock
test
or
arpl
out
adc
cmp
adc
dec
mov
repz
lret
dec
jnp
loope
int3
inc
push
and
add
push
push
loope
dec
in
push
sbb
mov
aaa
jmp
add
dec
push
ret
pushf
mov
stos
xchg
pinsrw
ret
xor
call
sub
loopne
dec
dec
out
cs
mov
stc
filds
clc
fs
lahf
mov
xor
loop
ljmp
dec
mov
pop
fcoms
inc
push
jae
dec
dec
pop
xchg
push
nop
std
loopne
push
nop
mov
push
push
or
add
jg
lods
test
jns
subb
mov
cld
shlb
pusha
movsl
aas
inc
mov
mov
and
shrl
in
mov
fstpt
pop
lods
push
psubw
cli
cmp
inc
loope
or
or
mov
xorb
and
or
mov
and
sub
orl
lods
mov
dec
mov
inc
or
inc
shl
cmp
xor
pop
jno
nop
jbe
insb
sbb
push
jecxz
mov
pusha
inc
rcrb
jl
jg
xor
add
dec
xchg
out
sbb
xor
jmp
ja
adcb
nop
je
ljmp
jo
adc
add
mov
ja
std
push
out
xor
dec
lods
loop
clc
lcall
add
sar
addr16
sub
shlb
repnz
or
inc
sti
in
loopne
imul
ss
icebp
push
push
xchg
std
lock
lds
dec
ret
xchg
dec
sbb
out
clc
mov
repnz
or
xor
aaa
add
fs
je
lods
or
cmp
pop
jo
popf
orb
cwtl
cli
pop
and
mov
or
jmp
shl
mov
rcrb
sbb
or
or
call
inc
push
lea
ret
push
sub
dec
lods
and
pop
pop
pusha
cli
mov
sub
or
lret
divl
aas
cmc
xor
cmp
add
sbb
adc
inc
loopne
lahf
je
in
and
das
test
and
pop
xorb
xor
or
xchg
sub
pop
std
in
mov
and
outsl
xor
xor
outsb
incl
xchg
xchg
adc
inc
pop
or
daa
stc
jmp
ret
fldl
fidivrs
ja
or
sar
movsl
mov
jo
pop
pop
fsubs
adc
pop
mov
inc
rcl
inc
adc
xchg
nop
pushl
pop
pop
mov
adc
jns
outsl
pop
clc
xchg
pop
cmp
xchg
and
adc
mov
adc
stos
je
aaa
push
ss
bound
insl
mov
xchg
filds
push
shll
in
call
sub
shlb
cs
inc
sbb
fcomi
sbb
imul
out
adc
and
push
call
or
inc
pop
pop
or
dec
jbe
std
decl
inc
test
xorl
pop
pusha
cmc
push
or
sahf
lret
xlat
das
fcmovne
repnz
mov
pop
pusha
push
jg
das
mov
dec
jge
dec
pop
xchg
xorb
ljmp
add
test
xchg
fcmovb
outsl
push
cli
mov
ret
mov
fwait
or
jg
fidivrl
shrb
dec
inc
insl
jo
out
push
inc
add
push
nop
dec
lcall
mov
mov
push
xchg
pop
xor
jb
test
add
rorb
ror
div
mov
xchg
cmc
mov
fistl
push
inc
inc
pop
imul
add
je
addb
es
out
xchg
dec
pop
cmp
cmp
cmp
cmp
popa
and
sbb
les
inc
pop
sbb
outsl
and
push
push
rorl
or
in
insb
add
inc
jbe
ficomps
sti
ljmp
add
out
sbb
add
adc
or
adc
in
lcall
pop
mov
push
test
dec
dec
xchg
or
xchg
mov
cmp
mov
push
sbb
fdivl
cmp
cld
aas
push
push
push
fdivr
js
mov
sti
out
pop
add
xchg
in
lcall
outsb
js
push
add
jmp
inc
and
jno
imul
or
adc
sub
orb
inc
outsb
xor
xor
dec
mul
pop
cmc
incl
push
ja
push
leave
push
movsl
fistl
int3
sbb
and
pusha
aad
and
shlb
stc
pop
out
negb
adc
push
fldenv
mov
inc
push
add
and
std
jg
cmp
inc
test
add
shlb
aaa
lock
mov
lds
or
mov
cmovbe
stos
clc
jmp
push
xchg
add
pop
incl
push
inc
or
cmpsb
adcb
adc
pop
mov
mov
in
iret
add
cmp
fld
pop
mov
or
lods
jle
stos
fwait
mov
push
mov
add
cmp
std
ss
inc
jl
and
into
cmc
shll
add
push
pushl
dec
loope
dec
push
xor
xchg
adcl
inc
xchg
mov
jg
clc
es
not
adc
shl
xor
jae
std
mov
arpl
add
dec
pop
loopne
push
jp
add
das
pop
push
xchg
mov
add
dec
pop
adc
lods
cmp
mov
cmpsl
pop
add
mov
pusha
push
jns
lock
push
dec
popa
jb
popa
cmc
cmp
aas
xor
xor
jmp
pusha
push
sbb
pop
pop
xor
fists
sub
stos
pop
lcall
insb
mov
or
out
lock
pushl
mov
imul
lods
lock
jg
int3
loope
sbb
das
push
scas
add
jp
and
adc
fildl
sub
dec
push
xlat
jg
outsl
or
enter
adc
mov
jl
cmp
add
push
incb
adc
fnstsw
sbb
pusha
mov
orb
mov
sbb
jb
outsb
pop
jge
sub
stos
nop
popf
sub
pop
fisubrl
loope
cmp
fldt
fdivrl
cmpb
adc
sub
xorl
fisttps
jb
or
mov
sbb
mov
pushl
insl
and
or
jl
mov
pop
and
shlb
dec
add
incl
addr16
push
xchg
or
sti
pusha
jb
mov
adc
mov
push
sub
pcmpeqb
push
xchg
loopne
ret
dec
cli
pop
fiaddl
aaa
jecxz
pop
lock
and
jno
mov
stos
inc
ret
cmp
xchg
push
call
ret
mov
popf
push
and
or
imul
adc
inc
or
mov
ss
mov
clc
mov
add
pop
inc
pop
xor
fcmovnb
xchg
adc
mov
jnp
inc
adc
adc
addb
adc
cld
xor
or
imul
xlat
pop
lahf
in
decl
out
imul
pop
inc
int
xor
fstpl
fidivs
push
inc
test
insb
insl
shrb
insl
adc
lahf
testl
insb
rcl
cmp
push
iret
mov
jmp
xor
andl
std
or
out
pop
mov
sub
pop
incl
dec
jno
push
push
test
sub
push
aas
dec
ret
jbe
mov
sbb
cmpsb
aad
insl
and
shlb
clc
xlat
in
sub
stc
adc
data16
or
fisttps
xor
sbb
add
and
js
loopne
inc
push
add
push
jg
inc
add
es
outsl
sbb
in
sub
push
mov
xor
pop
mov
gs
ret
adcb
add
das
pop
aam
adc
pushl
dec
cmp
negb
sub
test
or
add
pushf
inc
pop
mov
lds
sub
inc
dec
lods
jmp
mov
fimull
dec
push
loopne
in
add
loopne
pop
xchg
cmpl
mov
inc
dec
addb
pop
popf
out
sti
aam
sbb
test
dec
les
adc
push
jb
pop
imul
int3
aam
ljmp
or
fisubrl
xor
std
pop
cmp
ret
push
and
lock
cmpsl
xor
jmp
cwtl
lret
dec
andl
fisubrs
xchg
mov
mov
inc
movsb
or
xor
call
and
xchg
jge
sub
lods
popf
inc
enter
sbb
das
icebp
push
movsl
and
mov
sbb
jmp
add
popa
sahf
xchg
push
xchg
std
push
sbb
loopne
jg
adc
std
sub
push
popa
and
sbb
mov
xor
add
fisttpll
inc
xchg
xchg
pushl
mov
js
add
pop
icebp
faddl
jg
push
mov
xor
xor
outsl
pop
add
aas
push
mov
rcr
push
add
sbb
mov
out
test
jmp
jl
clc
pop
adc
mov
mov
jae
lea
fdivs
push
or
mov
sub
decb
lock
lock
daa
pop
testl
adc
insl
dec
outsl
idiv
pop
or
add
adc
dec
sbb
add
adc
stc
rorb
dec
sbb
adc
or
pushf
mov
in
ljmp
and
fcomip
mov
push
inc
insb
jae
xchg
sbb
mov
movsl
dec
xor
ljmp
nop
pushf
dec
clc
ret
fildl
xor
pusha
mov
mov
daa
adc
cs
sub
pushl
jo
sub
cmp
adc
cmp
push
negb
jg
in
insl
cmp
fsubs
cmp
xor
movsl
pop
lock
sub
sub
mov
pop
mov
aad
je
mov
jecxz
pop
sbb
pop
int3
push
cmp
loop
jo
fcompl
lcall
inc
xchg
or
push
add
dec
dec
push
jle
adc
cld
outsl
and
pop
stos
mov
mov
push
push
orb
jo
sbb
insb
mov
pop
pop
dec
cmpb
aas
dec
add
in
ret
or
mov
mov
mov
push
lahf
ljmp
lcall
sub
push
lcall
xor
rolb
out
popf
test
loope
filds
lret
mov
mov
push
xchg
sbb
jo
inc
and
out
cld
inc
outsl
or
mov
loopne
mov
or
pop
test
mov
add
jnp
xchg
adcb
push
fnstenv
in
pushl
xor
and
pop
pop
pusha
push
xchg
add
das
leave
loope
mov
xchg
cs
jae
addr16
fadds
dec
xor
pop
xorb
ljmp
dec
pop
in
mov
dec
pop
mov
es
xor
mov
leave
push
lods
lea
and
mov
mov
sbb
dec
and
xchg
es
or
testb
mov
xor
rorb
aad
or
popa
or
add
mov
pop
popa
pop
and
sbb
sbb
mov
fistl
push
je
inc
cld
fstl
add
mov
mov
fadds
test
add
lea
sbb
inc
out
cmp
jecxz
lea
inc
cmp
xchg
xchg
cmp
inc
movsl
pop
stos
mov
test
sbb
daa
cmp
scas
sub
out
rol
test
or
in
xor
loope
lods
xor
add
pop
xchg
pop
jmp
cmpsb
shlb
notl
pop
subl
ljmp
popl
ds
push
mov
pop
pop
push
sbb
xor
fs
sbb
xchg
mov
and
aad
jl
or
or
sbb
push
pop
and
xchg
pop
lods
call
dec
or
mov
pop
sub
gs
fiaddl
nop
insl
jg
adc
sub
and
pop
xor
jecxz
or
imul
jnp
imul
jg
outsl
lahf
adc
mov
into
add
clc
mov
inc
mov
sbb
loop
in
push
subb
int3
mov
jne
mov
sub
hlt
dec
sbb
add
incl
jne
inc
andl
jo
hlt
popf
imul
outsl
ljmp
inc
stos
in
pop
and
mov
fnstcw
pop
inc
ljmp
lcall
cmp
inc
fcoml
push
or
sbb
sahf
xor
jae
xchg
scas
jo
icebp
mov
cmp
subb
into
loope
push
sbb
ljmp
adc
nop
push
fisubrl
and
jle
adc
lock
in
add
movsl
sbb
sub
idiv
push
or
push
fdivrl
ljmp
adc
incl
xor
insb
pop
jge
mov
mov
loopne
mov
imul
enter
mov
inc
std
xlat
add
rorb
sub
mov
pop
sub
nop
outsb
jb
cld
decl
xchg
cmp
dec
pop
cs
or
arpl
xbegin
mov
les
dec
inc
xorl
addr16
fiadds
lahf
clc
call
or
aad
jle
popf
sbbb
add
push
outsb
fists
frstor
dec
jecxz
lea
fucomip
sbbb
cltd
cmc
jp
psadbw
aad
insl
add
ret
jle
clc
or
inc
int3
outsl
test
jae
mov
lds
cmp
decl
gs
popa
leave
adc
push
clc
jg
adc
repnz
adc
add
pop
pop
adc
ds
nop
test
mov
fisubrs
mov
mov
loop
aas
pop
cmp
fdivrl
and
jg
add
adc
sub
and
cmp
repz
clc
call
jg
pop
arpl
add
xchg
cli
sar
roll
inc
mov
xlat
pop
push
xor
das
dec
lock
adc
sub
outsl
or
inc
aaa
pusha
outsl
test
lret
pop
inc
cmpxchg
jg
std
push
add
cltd
sarb
jbe
add
out
pop
scas
test
and
or
ss
insb
mov
mov
jle
push
or
stc
and
sub
insl
mov
sbb
ret
push
mov
fistpll
push
inc
pop
push
jns
movzwl
dec
push
cmp
dec
sahf
addr16
fildl
cmpsb
push
inc
add
add
pop
mov
xchg
loop
inc
inc
push
bound
adc
int
inc
xchg
push
cli
cs
pop
and
insl
adc
adc
xor
push
mov
sbb
jnp
pop
pop
outsl
mov
sub
pop
and
or
rcrl
fdivl
jle
push
loope
xor
daa
aas
mov
jl
pop
adc
and
inc
shll
pushf
sbb
mov
addr16
pop
xor
sbb
mov
aaa
pop
test
add
icebp
movb
ds
lea
test
inc
sub
jg
cli
mov
rolb
pop
jle
and
mov
mov
add
pusha
xor
pop
repnz
loopne
sbb
aaa
and
pop
stos
das
and
jmp
cmp
aas
add
lock
jg
fsts
adcb
add
js
mov
fidivl
mov
pop
int3
insl
add
outsb
hlt
or
or
jnp
mov
add
mov
inc
out
adc
mov
sub
jmp
pop
and
xchg
xor
and
dec
or
aam
shlb
xchg
inc
adc
xchg
inc
sub
cltd
push
movsb
cwtl
and
xchg
clc
inc
test
add
sbb
and
repnz
xor
inc
cmp
sbb
fcmovnbe
mov
mov
sub
mov
xor
in
push
pop
push
loop
sub
int3
ficoms
xor
mov
push
sbb
loopne
das
cmpsl
pop
sahf
sub
ss
jg
sub
imul
insb
and
xchg
popf
es
adc
scas
and
jge
mov
jns
jae
add
xchg
test
sahf
pop
push
pop
jp
mov
jmp
inc
aas
ret
jnp
pop
pop
cltd
insb
pusha
sbb
mov
push
xchg
pop
ss
aas
fwait
popa
add
or
or
fidivs
push
or
je
or
xchg
pslld
dec
add
std
stos
add
sub
sub
repnz
sbb
dec
adcl
ljmp
xchg
mov
inc
jl
packsswb
shlb
push
shrb
pop
pop
sub
shlb
pusha
xor
jb
sbb
clc
fbstp
push
xchg
inc
pop
mov
cmp
stos
dec
inc
cmpsb
sub
aam
je
jne
mov
mov
cltd
add
pop
ljmp
pop
cli
and
mov
cltd
mov
fiaddl
mov
aas
lock
rolb
repz
aaa
or
std
mov
or
xchg
xor
pop
mov
outsl
lock
ret
add
or
mov
add
xor
ss
sar
outsl
outsb
sbb
push
adc
nop
push
or
jg
js
pop
pop
mov
mov
or
aaa
add
mov
jne
pop
out
inc
dec
data16
jg
outsl
or
movb
mov
add
or
fwait
loope
insb
push
sub
mov
add
sub
add
push
add
sti
adc
je
pop
and
lcall
push
outsb
mov
inc
xor
mov
sub
movsl
add
push
or
sub
std
mov
xor
in
leave
sub
add
push
dec
cmp
sbb
sarb
rorl
ret
mov
jo
insl
add
aam
notb
add
pop
shrb
pop
cli
aas
mov
dec
out
jp
xchg
inc
jle
ds
cmpl
mov
xchg
rep
mov
icebp
mov
idiv
push
cmc
and
adc
movsb
pusha
negl
fs
std
inc
sub
hlt
and
insl
call
jne
jns,pt
cmp
fcom
jmp
jo
push
in
push
cld
push
sbb
sub
fwait
mov
mov
movsl
fisttpl
sub
std
ret
int3
pop
pop
push
ja
lock
or
pop
sar
xchg
sbb
call
xchg
mov
dec
js
lret
rcll
je
push
pop
push
fdivrl
sbb
push
hlt
sti
jl
out
mov
ja
add
add
fs
testb
mov
cs
or
dec
xor
pop
adc
mov
stc
sub
push
mov
testl
pop
mov
mov
fwait
jae
je
dec
dec
inc
jge
lcall
lods
call
add
cmp
jle
push
sub
or
orb
insl
and
pop
mov
insb
push
add
orl
mov
jbe
xchg
subb
lcall
push
and
outsl
jl
or
fcomps
add
fisubrs
inc
dec
outsl
push
xor
pop
js
fnsave
rcrl
add
incl
stc
ljmp
out
or
add
mov
testb
inc
or
push
clc
ljmp
inc
mov
or
adc
push
add
mov
mov
ja
and
add
push
pop
ret
adc
out
mov
dec
inc
cs
or
outsb
hlt
lcall
push
dec
push
push
sbb
mov
repnz
push
sbb
add
gs
mov
inc
pop
inc
pop
push
clc
pop
cmpsb
test
sbb
out
xor
scas
mov
mov
pop
and
jge
sbb
sbb
and
add
push
out
jns
pop
pusha
fldt
sub
pop
sub
ljmp
fcomi
sbbl
pusha
pop
test
and
xchg
and
mov
in
xchg
cmpsb
jle
sub
cmpl
jae
push
scas
fbstp
and
pop
and
lcall
xor
pop
cmp
inc
mov
push
fidivrs
sbb
and
adc
mov
cwtl
sti
xchg
cmp
aad
push
call
idiv
das
or
inc
jb
xor
adc
or
add
inc
imul
jmp
jae
rol
inc
ljmp
sub
mov
and
mov
or
xchg
and
rclb
mov
cld
insb
inc
push
push
pop
ret
sbb
push
push
pmaxub
shll
sbb
out
pushl
loopne
ljmp
lahf
lcall
mov
lea
xor
inc
test
cmp
repz
and
xor
or
xchg
lock
and
das
dec
adc
test
jg
add
andb
add
mov
addb
ss
pop
in
jne
push
jmp
rclb
ja
mov
in
xor
jns
mov
jnp
cmp
ret
insb
pop
sbb
push
sub
add
or
cwtl
lret
out
mov
fldt
mov
in
push
arpl
cmp
jl
ret
cmp
adc
push
daa
cmp
jbe
sti
clc
pop
push
mov
inc
jns
insl
mov
insl
lea
repnz
pop
repz
movb
mov
xchg
enter
mov
cmp
popf
fsubrs
or
jp
sub
mov
push
ja
rcrb
mov
mov
fisubrl
add
outsb
sbbl
xor
popf
inc
lds
pop
adc
add
call
decl
ss
cmc
cli
mov
sbb
add
jae
lret
popf
lret
pop
sbb
or
aas
adc
add
sbb
push
sar
sbb
mov
nop
stc
dec
or
js
xor
pop
fnstenv
mov
cmp
mov
inc
addr16
push
or
in
and
mov
adc
xchg
inc
add
pop
fildl
dec
or
int
fst
test
shlb
loope
fisttps
mov
std
jg
insl
out
ljmp
dec
ss
or
jo
sub
push
and
ljmp
adc
sbb
repz
xchg
push
inc
ljmp
in
xchg
ficompl
ljmp
insb
sub
test
adc
jmp
or
inc
arpl
jge
jmp
pop
mov
xchg
jl
mov
lcall
jnp
cmp
icebp
daa
xchg
push
cmpsl
test
mov
cmp
or
pusha
imul
push
mov
fimuls
pop
push
sahf
outsb
add
sub
ljmp
dec
xchg
in
inc
sbb
adc
fildl
outsl
addl
lahf
cs
push
out
jb
push
jne
out
loopne
pop
mov
push
cs
lock
jbe
add
pop
add
adc
inc
cmp
nop
xchg
cmp
ja
andb
sub
aaa
push
mov
push
sub
push
and
add
mov
mov
or
test
call
push
pop
pusha
inc
inc
mov
and
dec
fildl
inc
cmp
jl
fcoml
dec
pushf
clc
adc
insb
mov
or
adc
and
jne
in
sbb
ljmp
sbb
add
xchg
mov
lcall
inc
add
ret
mov
add
cli
nop
cmp
add
cmp
mov
pop
stos
pushl
repz
lea
lock
in
pop
leave
jle
add
sti
shlb
sbb
adcb
ror
lds
pop
mov
mov
out
xchg
adc
les
push
std
jp
cmp
call
xor
jmp
icebp
pushl
cmp
sbb
imul
xchg
inc
sub
cmp
lds
xor
and
dec
sbb
or
sbb
test
mov
mov
call
sub
cld
xor
sar
aaa
lods
pop
setbe
sbb
dec
add
js
aas
pop
pushf
mov
test
xor
dec
sbb
mov
test
adc
mov
in
ss
jp
sar
dec
lret
xchg
das
pop
pop
pop
and
xor
pop
inc
ja
test
xchg
and
lods
inc
cmp
aas
pop
and
sub
push
add
fsts
int3
fisttps
adc
clc
fwait
add
adc
icebp
lcall
lea
lahf
repnz
lcall
cmp
stos
hlt
pop
push
loopne
pop
icebp
mov
xor
cmp
jo
pop
push
ret
pop
out
or
jg
inc
sqrtps
or
jno
or
adc
mov
mov
push
movsb
cmp
daa
add
push
loope
leave
sub
cmpl
ret
pusha
mov
jne
mov
and
sbb
incb
push
sarl
ja
xchg
inc
ja
lahf
fwait
daa
add
rcr
xchg
fmull
test
push
xchg
pop
and
incb
call
in
push
inc
sub
pop
xor
ja
addr16
aaa
adcl
and
mov
jbe
pop
jbe
aas
aas
popf
shrb
pusha
cmp
repnz
push
pop
das
mov
mov
pop
push
pusha
adc
mov
sbb
push
mov
fsubr
dec
inc
push
jne
jmp
or
fistps
test
and
push
and
insb
mov
push
shll
dec
dec
je
push
arpl
cmp
adc
add
sbb
sub
add
sbb
mov
js
rolb
ljmp
or
mov
xchg
fisubrl
push
dec
popa
mull
mov
sub
loopne
push
dec
xchg
and
jmp
mov
jle
std
fistps
sbb
add
sub
push
or
repz
ret
mov
test
movsl
inc
sti
jb
lahf
aad
push
popf
inc
fbld
icebp
xor
and
mov
jle
pop
arpl
push
cwtl
das
push
mov
outsb
or
jbe
sub
fs
sub
jl
dec
iret
push
das
outsb
fs
jae
ds
es
movb
mov
rclb
sbb
hlt
inc
sub
and
push
sub
icebp
call
mov
cs
scas
push
sahf
fstl
sti
ljmp
scas
scas
dec
inc
inc
cmp
push
fwait
dec
sbb
dec
push
adc
or
aaa
adc
xor
daa
inc
adc
lsl
xchg
cli
lods
dec
mov
cld
insl
pop
outsb
hlt
inc
adc
pop
or
sub
imul
in
push
aas
or
inc
push
mov
inc
lods
clc
lcall
cmp
pop
shrb
or
das
sahf
fistl
xorb
ret
pop
ja
and
sub
jp
push
mov
jmp
lcall
lock
jecxz
add
aaa
mov
add
lcall
scas
sub
ret
rolb
scas
mov
je
movsl
lods
lock
sub
push
aaa
cmp
xchg
cltd
cmpsl
aad
clc
ljmp
xor
add
clc
in
test
xor
mov
xchg
jo
out
pop
jecxz
test
xor
bound
mov
or
push
and
fwait
negl
push
daa
cmp
addr16
mov
add
aad
into
mov
cmp
ret
pop
xchg
rclb
fstl
into
cwtl
and
lods
pushl
out
aaa
add
lahf
push
loopne
sbb
lods
push
hlt
pushl
cmp
jns
subb
repz
outsl
cmc
lret
push
xor
dec
adc
dec
add
sbb
inc
insl
fiaddl
dec
sahf
xor
adc
insl
push
sbb
aad
lods
sub
push
sub
cld
add
mov
xor
mov
lea
filds
jle
mov
into
and
shll
push
mov
xor
adc
dec
adc
call
out
daa
inc
push
jae
sbb
xchg
push
dec
scas
dec
dec
outsb
pop
aam
mov
mov
mov
add
mov
lcall
out
xchg
mov
add
es
aas
icebp
pop
ljmp
inc
jae
das
sub
arpl
dec
add
pop
xor
outsb
pop
std
pop
xchg
cmc
cmp
enter
push
sub
sub
inc
add
sub
push
rorl
cltd
and
call
cmc
iret
cmpsb
ja
add
adc
or
inc
mov
mov
pop
pop
test
sbb
push
imul
adc
pop
mov
mov
test
or
xor
insl
dec
call
inc
push
js
pushf
cmp
test
pop
and
ja
lods
cmp
xor
jo
mov
in
das
mov
fcmovu
push
cmp
pop
cwtl
cltd
and
outsl
lea
mov
push
test
arpl
int3
ljmp
xor
loop
xchg
jge
pop
pop
xorl
es
imul
cwtl
inc
push
add
jae
adc
push
lods
lcall
sti
lods
pushl
push
sahf
push
push
cs
and
inc
xor
clc
data16
push
sub
push
jg
fimull
int3
stos
insl
sbb
dec
push
ds
ja
adc
imul
rorb
push
inc
movsb
clc
add
aaa
adc
outsb
or
mov
mov
dec
and
jp
test
and
test
dec
sbb
loop
dec
cld
xor
jg
mov
pop
dec
lods
mov
or
and
fcmovnbe
jmp
adc
js
cltd
push
mov
loopne
pop
in
lock
cmp
add
mov
push
out
push
inc
data16
add
orb
repnz
mov
pop
stos
xchg
fisubs
xchg
cli
or
ret
sbb
repnz
add
xor
mov
aad
mov
cmpsb
outsl
mov
xor
mov
xchg
jne
xchg
lods
jmp
adc
cmp
pop
js
daa
nop
xchg
xorb
aaa
sarb
fbstp
or
out
inc
mov
sub
sbb
or
jge
push
sub
adc
lea
jnp
push
mov
outsl
sub
jbe
insl
addb
movsl
sbb
movsb
scas
call
jbe,pn
mov
bound
adc
or
subl
or
outsl
out
in
ljmp
je
nop
jg
push
or
std
rolb
inc
fcmovnu
or
divb
movsb
gs
push
nop
or
push
repnz
mov
shlb
inc
or
je
test
int3
lock
xor
xchg
shlb
sahf
jne
incl
scas
jecxz
mov
call
add
adc
imul
dec
mov
sub
subb
dec
dec
std
mov
popf
dec
xor
or
jg
dec
add
repnz
pop
add
push
int3
pop
clc
mov
or
nop
out
mov
add
sub
fists
jecxz
bound
and
push
sbb
xor
lret
mov
mov
test
push
push
pop
mov
cli
decl
popa
ret
ret
push
or
pop
push
push
pop
hlt
ljmp
fcoml
push
test
nop
xchg
test
sbb
cwtl
inc
js
sti
push
cmp
xor
jmp
inc
loope
push
mov
push
js
cs
shr
decl
dec
inc
pusha
jnp
dec
dec
aas
lds
pop
jl
push
cli
cmc
ja
js
sti
js
push
aam
or
cmc
fcmovnu
fildll
sbb
mov
mov
stos
jge
jmp
popf
push
mov
add
push
addl
dec
xchg
cs
add
push
dec
xchg
dec
rcr
adcl
cmp
push
loope
test
cmp
mov
xor
dec
scas
pop
mov
in
in
das
push
inc
or
adc
jg
add
jnp
popa
arpl
dec
cld
lcall
inc
notb
les
push
pop
adc
inc
add
sub
rcll
adc
fcoms
adc
clc
push
add
xchg
push
fbstp
dec
cmp
push
clc
push
push
xchg
pop
mov
or
scas
nop
scas
and
pop
adc
mov
bnd
push
add
push
imul
mov
and
lahf
popa
insl
mov
test
adc
lock
xchg
fdecstp
push
jg
out
lds
push
sbb
push
clc
loopne
add
lds
add
lods
push
or
jecxz
or
push
sub
ja
jae
pop
call
dec
daa
ret
mov
mov
lock
push
mov
pop
xchg
lea
fidivs
add
scas
js
cmc
jmp
outsl
pop
call
dec
es
mov
flds
inc
add
cmc
fs
push
push
push
push
mov
jb
stos
cli
push
imulb
loope
test
enter
andb
xchg
popf
bound
jmp
outsl
xchg
sbb
cmovne
int
insb
daa
les
inc
bound
cmp
mov
nop
cmp
imul
lock
dec
pop
or
push
imul
mov
and
add
outsb
mov
pusha
popa
mov
shll
add
inc
or
pusha
loop
ds
das
xchg
mov
xchg
cmpsl
and
data16
pop
inc
pop
loopne
sub
imul
inc
jmp
lds
inc
pop
in
pop
mov
out
pop
rolb
cmp
ljmp
insb
inc
and
lret
dec
aaa
mov
fbld
jns
add
aam
inc
mov
jns
insl
iret
repnz
sub
push
lds
xchg
dec
fldl
dec
and
arpl
sbb
movsl
jecxz
and
aad
std
jg
or
orb
add
jmp
cli
in
ret
jnp
int3
popf
xchg
outsb
jae
or
adc
ret
add
pop
outsl
rclb
int
dec
mov
or
fwait
and
pop
mov
inc
mov
pusha
add
mov
imul
or
imul
inc
lcall
pop
adcb
push
add
faddl
jmp
sub
add
or
pop
pusha
and
push
imul
hlt
push
add
cmpb
ljmp
push
cld
mov
shrl
jnp
pop
jae
jge
mov
pop
fimuls
loope
fsubl
mov
sub
push
out
mov
dec
sar
push
roll
data16
bound
fbld
dec
iret
inc
pop
xchg
xor
mov
pushf
or
mov
mov
cmc
and
jmp
mov
arpl
loope
and
mov
pop
push
loope
dec
lods
pop
movl
jg
pop
add
add
aaa
push
shlb
das
add
in
push
popa
rcrb
add
mov
test
add
pop
ja
shr
jnp
scas
lock
push
fsubs
adc
in
out
movsl
icebp
xor
add
lods
aas
pop
sub
push
jmp
mulb
mov
mov
mov
in
mov
lock
push
sub
fcmovne
xchg
pop
imul
js
data16
decb
mov
xchg
andb
or
insl
sub
addr16
inc
mov
rorl
js
mov
iret
sub
imul
lock
sub
ret
imul
outsl
mov
bound
rclb
fimull
jns
fs
test
dec
mov
cmp
decb
sbb
xor
sbb
sub
xorb
ss
aas
sub
ret
dec
push
cmc
add
mov
sbb
cld
outsl
insl
fistpl
mov
push
cmp
sbb
leave
pop
sub
xchg
inc
dec
mov
cmp
dec
mov
rorb
xor
jl
scas
push
decb
mov
and
outsb
std
nop
outsl
stos
xchg
push
mov
sahf
push
add
clc
jg
xor
cmc
push
cmp
int
insb
adc
mov
or
mov
test
pusha
mov
inc
ljmp
and
jnp
call
mov
lds
or
or
add
push
adc
xor
loope
xchg
fmull
mov
or
stos
add
nop
cmp
loope
rcll
pushf
test
xor
jg
cld
ljmp
adc
push
lea
cmp
mov
ret
inc
insl
sub
adcb
ljmp
nop
inc
xor
xor
and
push
push
scas
mov
adc
out
enter
sbb
jae
push
es
fcmovu
incb
jl
fucomp
cld
popf
movb
and
testb
outsl
inc
testl
clc
fs
pop
or
popf
jecxz
xchg
lahf
inc
mov
addb
xadd
aaa
push
shr
push
fucomi
jmp
add
hlt
call
mov
pop
call
jne
and
cwtl
mov
xor
enter
xor
rcr
pop
insl
icebp
shl
cmp
incl
inc
fs
xor
nop
jbe
sbb
sub
je
sbb
movsl
inc
mov
jmp
enter
out
xchg
jle
adc
push
mov
xor
adc
dec
ljmp
into
adc
jg
ds
inc
push
or
xor
mov
xchg
fsubl
or
xor
pop
or
mov
cmp
pminub
inc
add
xor
add
cmp
jbe
mov
jg
cmpsb
xor
adc
jae
xchg
push
nop
jb
xchg
call
push
test
xor
fmulp
ss
mov
mov
or
lcall
fistps
sbb
add
add
and
sub
or
fwait
pop
mov
movsl
jno
pop
cmp
ss
xchg
and
dec
push
sub
mov
testl
sbb
out
and
jns
movsl
cs
test
pop
adc
mov
xchg
xchg
dec
mov
mov
into
mov
sahf
mov
push
dec
push
adc
sar
mov
ds
pop
mov
adc
xchg
cmpb
jae
mov
mov
stc
fcmovne
scas
loopne
movsl
inc
or
cld
push
or
hlt
mov
pop
jg
push
ds
insb
jge
lock
fcoml
aaa
icebp
jg
dec
xor
jb
or
sbb
addb
or
sbb
data16
rorl
xor
mov
jb
or
xchg
push
xchg
in
adcb
in
jg
dec
int
cmp
pusha
mov
imul
add
pop
cmpsb
dec
lahf
add
push
push
testl
push
dec
sbb
loopne
cwtl
les
ds
dec
data16
push
fnstsw
dec
nop
jge
add
xchg
mov
cmp
movsl
das
or
subl
xchg
clc
cmp
aam
mov
pusha
leave
inc
je
mov
jg
jno
imul
std
jecxz
mov
movsl
cmp
jo
subb
add
mov
inc
out
push
icebp
rcr
sub
mov
sbb
jno
add
outsb
loope
inc
mov
decb
andl
aad
subl
cmp
xchg
inc
test
addl
push
mov
cmp
mov
cmp
repz
es
adc
jp
stc
lock
push
cmp
pop
and
and
push
decb
push
clc
rolb
idiv
lea
jno
lods
adc
pushf
in
or
and
mov
negb
sub
leave
sbb
pop
fisttpl
popf
sub
jp
pop
cli
inc
sub
pop
test
mov
addl
popa
inc
and
out
push
add
aaa
lahf
std
lods
cmc
aaa
add
and
std
mov
mov
lea
fcoms
mov
icebp
push
pop
rolb
adc
stos
or
popa
insl
cs
pop
pop
lods
pop
jo
mov
add
ds
mov
mov
imul
push
mov
add
lock
test
outsb
xchg
push
adc
xor
cld
data16
mov
push
sub
pushf
rep
popa
out
ljmp
inc
out
sub
in
mov
adc
in
or
clc
ljmp
cmpb
pushw
sbb
test
cltd
jp
push
mov
jnp
shl
xchg
fidivl
mov
addr16
sub
dec
das
mov
mov
mov
add
icebp
jp
imul
cwtl
lods
cmpl
aam
or
inc
popa
fmulp
pop
push
cmp
dec
xchg
je
js,pn
push
jle
inc
push
add
or
mov
call
dec
or
icebp
decl
hlt
loope
adc
xor
jb
sub
test
out
ljmp
xlat
orl
mov
adc
xchg
cmp
fists
das
xor
and
js
aaa
pop
aam
cmpb
into
cs
sub
adc
in
and
cmpsl
pop
call
pop
outsl
push
outsb
add
sar
dec
or
or
sub
test
into
aad
movb
xchg
mov
jg
jecxz
ljmp
sbb
call
mov
lea
fnstsw
inc
pop
pop
push
popl
mov
push
mov
push
ss
das
orl
outsl
lcall
daa
pop
cmpb
stos
call
pop
add
mov
adc
or
dec
lret
pop
test
jge
adc
imul
fimull
hlt
xorl
pop
loopne
adc
mov
insb
jno
lods
xchg
inc
mov
dec
xor
addr16
call
sbb
enter
push
adc
sbb
pushf
icebp
ljmp
mov
jp
movsl
mov
jge
test
pop
sub
add
sub
jg
test
adc
pop
or
sbb
aam
sub
fsubrp
xor
pop
or
jne
mov
fsubr
pop
adc
pushf
adcb
inc
xchg
dec
jae
add
cmp
jg
mov
cmp
popf
inc
jl
xor
fimull
test
jmp
xchg
es
call
jmp
xchg
lods
in
mov
sbb
dec
or
incl
fwait
sarb
cmp
dec
push
push
or
inc
in
orl
jnp
jmp
incl
mov
inc
pop
mov
pop
in
les
adc
jg
or
jg
adc
xchg
adc
add
sbb
push
adc
cmp
int3
sbb
push
ds
or
lds
fcmovnb
nop
sub
jns
dec
sub
dec
movsb
add
and
roll
sbb
test
fadd
xor
cmpl
adc
push
push
out
add
pop
add
or
jnp
and
mov
mov
cmp
loope,pt
mov
xchg
stos
clc
sub
pop
pop
adc
aaa
adc
ljmp
out
xchg
push
roll
dec
mov
push
fcomip
fs
lcall
aad
cli
and
jle
xchg
mov
xor
add
aad
add
popf
inc
inc
popa
mov
xchg
push
cmpsb
shlb
in
out
ljmp
ja
jbe
pop
aas
push
in
stos
outsb
pop
jl
xchg
push
adcb
pop
popf
pusha
call
movsl
pushf
sti
je
ds
insb
pop
pop
and
filds
test
in
add
inc
pop
push
push
mov
cs
addl
inc
cwtl
shll
loope
pop
addl
pop
mov
imul
sub
inc
add
push
cld
int3
and
mov
pop
rorl
in
mov
or
or
xchg
pop
xor
filds
xchg
pop
insl
jg
das
shll
dec
rcpps
imul
jnp
imul
pop
popf
ljmp
call
and
inc
inc
dec
sub
jb
jp
add
cmp
insl
push
or
xchg
repnz
lea
pushl
cli
sub
or
mov
xor
test
pushf
outsb
jge
inc
jno
dec
mov
fbstp
outsb
mov
lods
dec
es
pop
mull
lret
pop
xchg
dec
dec
lods
stos
mov
loope
decl
and
negl
xchg
sbb
sub
aas
popf
inc
xor
movsl
ret
hlt
andb
jge
adc
ja
or
sbb
and
les
ja
call
jne
js
cmpsb
inc
cli
divl
jg
out
flds
add
pop
adc
incl
orb
pop
jbe
sbb
and
leave
add
arpl
inc
mov
mov
cltd
push
sub
aas
inc
pop
ret
xor
outsl
lock
out
repnz
jmp
add
adc
xchg
rol
pop
dec
sub
sub
sahf
sbb
nop
js
data16
adc
popf
arpl
mov
repz
movsw
mov
pop
mov
xchg
jl
xor
and
sub
clc
jg
sbb
add
push
and
outsl
mov
jne
xchg
push
add
in
xor
sub
mov
ljmp
jmp
es
cmp
sbb
sbb
les
inc
pop
xor
adc
lods
shl
lahf
dec
mov
sub
insb
pop
notb
popf
and
xor
mov
clc
sbb
test
je
jne
jns
push
or
push
adc
addb
hlt
dec
bound
lds
hlt
ficomps
cmc
add
mov
test
dec
repz
cld
xor
push
add
pushl
xlat
xchg
addr16
es
sarl
ret
mov
mov
and
arpl
orl
push
pop
jnp
clc
mov
daa
xor
test
push
push
inc
orl
dec
mov
pop
mov
adc
notl
and
push
sub
add
ljmp
mov
lods
pushf
call
add
in
stc
xchg
sub
add
fstpl
cmpsb
push
repnz
imul
cli
insl
jmp
pushl
scas
add
sti
aam
lds
lcall
aam
in
shrb
mov
sub
mov
ret
jg
fistl
mov
lock
addb
loopne
push
popa
mov
lahf
arpl
inc
and
pop
sub
mov
pushl
dec
inc
pop
jmp
inc
outsb
push
lcall
inc
sub
add
ljmp
xchg
xchg
outsl
popa
sbb
mov
shll
push
push
loope
and
pop
sub
incl
decl
pop
cs
outsb
adc
sub
call
mov
pop
mov
and
sbb
and
push
imul
sahf
sbb
cmc
pusha
cmp
push
fwait
sbb
lods
das
lock
add
add
dec
addr16
ret
rcll
adc
and
push
add
adcb
jge
push
sub
mov
pop
xor
mov
and
mov
lcall
and
inc
loopne
push
adc
add
push
dec
sub
inc
and
fbld
push
xchg
enter
rorb
add
lock
mov
popf
shll
add
aas
push
mov
ds
stc
and
dec
cld
mov
fistpl
xlat
pop
outsl
adc
out
inc
adc
dec
mov
pop
ss
pushl
cmp
addb
add
enter
js
dec
mov
add
fstps
xchg
and
rcr
loopne
dec
or
ja
pop
fcompl
xor
in
jg
and
pop
add
adc
mov
pop
push
outsb
mov
rcrl
pusha
pop
mov
dec
sbb
dec
cmp
test
subb
mov
shr
aaa
xchg
ljmp
push
inc
insl
inc
jg
pushf
ds
test
cmp
loope
aas
sbb
mov
daa
xor
adc
push
lds
es
push
mov
jge
das
sub
mov
xor
push
push
pop
add
pop
mov
popf
pop
dec
fs
idiv
jg
mov
shl
rcl
inc
xorb
subl
cmp
pushl
dec
xor
dec
push
addl
cmp
popa
mov
mul
adc
mov
or
popf
mov
fdiv
sub
lock
inc
xor
dec
pop
jb
sar
jge
xor
decl
nop
xor
mov
js
xor
or
mov
or
cmp
or
mov
pop
mov
ds
pushl
inc
mov
inc
xchg
cld
or
rcr
outsb
insb
stos
push
pop
cmpb
jmp
lcall
add
push
cmp
cmp
adc
mov
clc
lcall
int
add
iret
add
dec
mov
jo
in
outsl
adc
popa
push
lcall
scas
mov
sbbl
shlb
jmp
mov
and
and
in
push
das
xchg
cld
push
push
fs
test
push
inc
mov
sbbb
sub
mov
int3
pop
fidivrs
jb
decl
push
aam
jno
add
push
hlt
xchg
xor
fsubrs
lock
fdivl
scas
or
cmp
jmp
sub
mov
jno
sub
popa
jmp
add
outsl
bnd
lcall
or
pop
pop
lds
lahf
pop
es
sbb
test
pop
and
xchg
cs
outsl
push
stc
sub
or
jo
in
add
jp
sbbb
daa
xchg
and
roll
test
cmovno
mov
xor
cmp
popa
jb
jecxz
inc
fstpt
xchg
xor
jle
in
pop
add
rcrb
fbld
mulb
bound
push
decb
dec
jmp
lods
test
push
add
jae
push
adc
adc
jo
stos
lods
and
xor
mov
mov
mov
ss
lcall
insl
xchg
inc
jo
fisubs
jle
push
orl
in
outsl
call
bound
and
int3
std
gs
pop
inc
ss
out
adcl
fucomip
pop
and
pushf
js
pop
test
fsub
pop
pop
sub
leave
popa
test
pop
cmp
pop
add
dec
aas
dec
into
xchg
xor
imul
mov
adc
sar
es
sub
push
pop
clc
popa
push
lahf
jo
dec
cmpl
inc
icebp
mov
mov
lret
inc
pop
jg
pop
and
pop
add
stc
incl
into
in
lods
or
cmp
dec
add
push
xchg
sub
cmpsl
jnp
lds
icebp
or
addb
jnp
jg
sub
xchg
fildll
ljmp
adcl
popf
add
aaa
ds
lea
mov
push
cmp
cmpsb
repz
jo
arpl
add
aaa
or
out
and
std
fbstp
jmp
ja
ss
adc
add
clc
mov
dec
in
add
fwait
sbb
add
mov
icebp
stc
jmp
outsl
or
das
insb
les
add
pop
jnp
add
inc
subb
fidivrs
lahf
jge
call
inc
xchg
and
lds
inc
ss
push
clc
sbb
shrb
data16
data16
sbb
outsb
jb
ja
insb
ret
fdivl
fs
out
sub
cli
sbb
sub
pop
ljmp
addr16
cmp
jp
shll
aas
sbb
leave
push
adc
sub
imul
aas
sti
inc
sbb
or
jmp
sub
push
ljmp
inc
and
xchg
and
es
insb
pop
call
pushf
push
lds
pop
stos
mov
orb
fsubrs
test
decl
push
shlb
pushl
iret
adc
into
stos
ficompl
jl
inc
lea
sbb
mov
fwait
jb
insb
inc
and
decl
scas
shll
cmp
out
xchg
xchg
sub
jg
out
cs
stos
add
mov
xchg
decl
fcmovbe
xor
dec
data16
mov
stc
sbb
cs
out
mov
mov
inc
xor
jmp
adc
test
cmp
jo
lahf
xor
xchg
cli
inc
sbb
or
das
icebp
sub
push
pop
sbb
js
pusha
sub
in
push
and
dec
addb
dec
jl
sbb
xor
sbb
popa
sbb
clc
sbbl
or
decl
jl
or
push
dec
mov
das
adc
push
arpl
ficomps
ss
leave
adc
cmc
sarb
rolb
inc
pushl
xchg
pop
xor
add
cli
pushl
cmc
repz
rol
xchg
lret
cmp
popf
ss
clc
pop
loope
mov
test
push
xchg
sbb
add
and
loope
mov
and
jae
popa
cmp
adc
mov
cld
cmp
cmp
cmp
jg
addr16
dec
shl
pop
mov
sbb
lock
pop
insl
dec
xor
inc
loope
cmp
mov
icebp
push
stc
push
call
lods
loope
loop
cwtl
jne
lret
mov
jg
in
cmp
and
js
cmpsb
jo
sarl
addl
out
xor
mov
mov
xor
pop
outsl
sbb
push
jg
fmull
enter
ja
cmp
sub
lods
nop
xchg
fistpll
add
lock
arpl
mov
insl
imul
mov
in
jmp
adc
or
addr16
int3
xchg
cmp
cmp
outsl
bound
push
jbe
add
sub
pop
mov
scas
inc
push
ret
jg
push
push
adc
inc
rclb
lods
addr16
sbb
clc
jmp
jb
pop
sarb
lea
rorl
push
mov
dec
sub
and
and
xor
decb
aad
mov
cwtl
push
popl
xchg
adc
call
loopne
mov
pop
xlat
ret
test
inc
insl
mov
data16
lock
add
inc
sub
pop
stos
push
rorl
pusha
jp
fbstp
mov
comiss
mov
cmp
sub
gs
clc
mov
repz
pop
adc
aas
push
xchg
xor
in
lcall
or
iret
push
dec
enter
pop
fdivrp
sbbl
out
pop
movsl
decl
dec
decl
xlat
push
test
aas
push
bound
adc
inc
call
jae
mov
ja
mov
ja
das
jecxz
xchg
add
ret
and
dec
jg
nop
outsl
adc
decl
adc
push
aas
adc
pop
sub
js
mov
shlb
call
mov
inc
xchg
sbb
call
ret
push
pop
mov
cwtl
ret
gs
aad
in
or
mov
sar
push
pop
daa
mov
popa
loope
repnz
push
cmovb
das
icebp
jmp
push
pop
mov
ret
dec
js
aaa
xchg
sbb
adc
xor
push
pop
mov
cs
lods
mov
push
push
clc
pop
sahf
xor
lods
mov
mov
int3
mov
xchg
frstor
jno
push
sbb
or
movsl
pop
mov
adc
dec
js
inc
cli
jecxz
int3
fs
scas
mov
aas
clc
js
clc
dec
push
or
cmc
inc
cli
ljmp
js
ret
imul
sub
jge
jnp
add
loope
ret
xchg
xchg
lcall
imul
repz
fwait
bound
iret
jmp
loop
lock
fmull
xor
and
cmp
cmp
push
add
negl
mov
ret
inc
ret
and
pop
xor
or
iret
cmovnp
push
dec
xchg
cmp
sub
add
ret
jnp
pop
decb
add
xchg
pop
adc
mov
dec
and
mov
mov
adc
mov
jo
decl
clc
jl
lret
pushf
shlb
inc
xor
imul
dec
mov
sbbb
je
and
loope
loope
inc
cmp
clc
pop
dec
inc
out
lret
mov
adc
pop
nop
je
icebp
inc
dec
clc
or
outsb
and
pop
push
rcr
mov
xor
xchg
jnp
adc
in
sbbl
jecxz
mov
arpl
and
enter
xchg
loope
jecxz
stos
xchg
push
ret
inc
jo
mov
or
das
jg
mov
cmp
stos
jo
es
rolb
in
idiv
ret
cmp
push
add
pop
iret
pop
push
xorl
pushf
sub
jg
adc
inc
add
pminsw
xchg
ficoml
lea
mov
sub
dec
mov
mov
sub
icebp
shl
xor
arpl
mov
mov
imul
inc
and
or
adc
in
fcoml
xchg
lret
mov
adc
and
lret
sbb
fsub
jo,pn
dec
fisubrs
mov
adcl
adc
pusha
cmp
les
and
pop
fcoms
mov
adc
xor
ljmp
in
les
orl
js
stos
cs
fdivrl
jle
or
inc
fidivrl
movsl
dec
insl
adc
imul
or
cmovl
jno
sub
mov
xor
xchg
incb
xor
adc
push
cmp
aaa
and
add
adc
stos
sbb
push
adc
into
push
or
pop
fdivr
sbb
adc
pop
pop
mov
roll
xor
xchg
in
or
aad
cld
and
mov
or
out
fidivrl
ds
jns
or
subb
enter
fwait
pusha
fs
add
mov
push
xor
ljmp
fs
mov
in
mov
popa
aas
or
jg
push
sub
cmpsb
clc
rorb
inc
adc
pop
mov
sub
addl
jno
sub
or
in
adc
loop
aaa
int
clc
push
xor
je
je
jecxz
mov
mov
movsb
and
rcrb
inc
push
adc
xchg
push
std
dec
push
sbb
outsl
fldln2
nop
adc
push
sub
mov
mov
sub
add
pop
imul
lods
mov
mov
xchg
xchg
cld
inc
stos
push
push
out
pop
outsl
clc
sbb
aas
and
xchg
orb
sbb
or
or
mov
mov
dec
inc
add
cwtl
mov
sbb
dec
rcrl
pop
outsb
push
aam
sub
enter
aam
outsl
mov
or
pop
test
prefetchw
cmc
ret
fs
pop
dec
jno
pusha
xchg
and
lock
sub
mov
dec
jmp
lea
xchg
icebp
fbstp
clc
sub
jmp
dec
mov
jne
sbb
jg
je
cmpsb
or
outsb
add
adc
imul
movsb
xor
addl
xor
add
inc
sbb
gs
or
lock
hlt
cmp
mov
mov
je
dec
sbb
lods
data16
ja
push
pop
insl
jo
popw
lea
ljmp
stos
lock
pop
mov
mov
movlps
in
jmp
insl
das
loopne
mov
xor
js
and
pop
adc
pop
push
inc
cmpb
adc
shlb
les
aam
mov
scas
sub
icebp
mov
push
iret
out
imul
dec
movsl
test
inc
cmp
icebp
push
pop
inc
or
iret
ljmp
push
inc
pop
inc
xchg
xor
stos
lock
mov
lcall
inc
pop
fdivrl
sbb
mov
sbb
mov
scas
push
pop
in
mov
push
fs
pop
dec
push
sub
setno
jle
mov
add
pusha
push
mov
inc
adc
es
pop
lea
add
sub
mov
mov
pop
sub
or
add
adc
sbb
mov
in
lcall
mov
lock
call
pop
xor
cmp
insl
std
lea
imul
cmp
in
sbb
shlb
pushf
sub
icebp
incl
outsl
lcall
push
cwtl
rcll
add
dec
repz
fdivs
cmc
pop
out
in
notl
pop
push
pop
lea
nop
mov
sbb
imul
push
mov
add
cmp
cmp
adc
das
add
and
ds
and
fiaddl
mov
das
pushfw
cmp
inc
pop
lcall
dec
xor
out
xchg
inc
xor
ja
pop
or
xor
xchg
shlb
mov
lods
call
sbb
mov
sub
je
push
std
outsl
test
fdiv
pop
sbb
repz
scas
add
xchg
ljmp
push
cmp
sbb
or
cmp
push
loopne
sarl
fsubs
test
mov
fstps
mov
test
push
test
and
pusha
movsl
pop
jp
mov
and
ja
mov
js
test
sti
add
insb
push
pop
push
xchg
rol
push
dec
add
and
sbb
fbstp
cmp
enter
pop
push
subb
test
imul
test
jo
adc
mov
rcll
push
dec
mov
mov
cld
lods
mov
test
mov
gs
mov
xor
push
bound
fidivl
cmp
add
icebp
dec
je
mov
cmpb
inc
fldenv
adc
inc
decl
add
inc
sbb
sub
jg
dec
in
pop
adc
pop
pop
cltd
sub
cs
ljmp
sbb
cmp
testb
xchg
repnz
int3
push
sti
add
add
les
jns
imul
cld
mov
add
movsl
decl
mov
movl
push
mov
push
xor
jne
dec
sbb
add
and
aam
sub
or
icebp
call
fdivs
pop
cmp
pusha
lcall
popf
mov
pusha
mov
insb
jne
pop
movb
jns,pn
ret
stos
and
jne
mov
xchg
mov
push
cmc
add
sub
jnp
add
clc
enter
mov
mov
int3
jmp
add
clc
add
cmp
pop
xor
adc
sbb
push
push
jle
icebp
shrb
lcall
fmuls
cld
mov
mov
add
pop
or
pop
dec
pop
mov
icebp
sub
mov
ret
jg
sbbb
and
adc
push
sub
incl
sbb
nop
loop
push
inc
movsl
cmp
mov
fidivrl
cwtl
fmull
dec
push
outsb
aaa
sbb
das
in
sub
incl
mov
hlt
push
in
sbb
cmpsl
mov
cmp
adc
mov
push
aaa
jmp
lea
arpl
sub
cld
adc
add
or
sbb
sbb
jbe
cmp
loope
movsl
pop
add
or
inc
iret
in
in
loopw
mov
adc
pop
add
nop
cmp
test
mov
dec
xchg
or
pop
pop
and
test
decl
std
push
push
xor
sti
inc
icebp
sub
leave
jp
sbb
add
popa
bound
add
or
cmp
out
dec
icebp
incl
fstps
mov
es
jne
mov
aas
cmpb
jo
mov
sub
test
les
loopne
mov
mov
lock
test
mov
inc
stos
push
xor
insl
jg
sub
das
cmp
fs
jle
mov
sbb
push
addr16
sub
cmp
adc
jbe
test
popf
insb
pop
jo
mov
adc
ss
ja
or
je
lcall
mov
test
xor
nop
arpl
inc
repz
sti
adc
loopne
xor
xor
and
pushl
pop
insb
aas
outsb
push
xor
aas
subl
aad
lea
sti
repnz
fwait
cmp
add
insl
pop
neg
stos
jnp
insb
sub
mov
imul
jg
outsl
sub
lret
pop
pop
gs
or
push
jo
mov
cmp
push
push
repnz
out
mov
mov
mov
push
push
mov
push
push
rorl
pop
sbb
pop
ret
pop
adc
or
adc
dec
add
mov
sbb
pop
shrl
fsubrs
fwait
shll
mov
cld
mov
add
pushf
pop
ljmp
sbb
lods
inc
pop
testb
dec
jo
sub
sbb
and
leave
cmp
cld
pop
inc
add
incl
mov
stos
xor
add
inc
pop
pop
push
cli
insb
add
sahf
data16
mov
sbb
lea
insl
decl
jnp
in
cli
out
mov
mov
sbb
rclb
or
clc
sbb
sbb
jmp
cmc
cmp
or
testb
cld
cltd
das
inc
sbbl
sub
mov
mov
repz
incl
dec
mov
lret
data16
xchg
ljmp
fidivrs
pop
sbb
daa
push
push
fmuls
out
and
adc
sbb
sub
enter
jecxz
out
xchg
into
cmpsl
sub
aaa
pushf
and
sti
dec
test
repz
stc
adc
pop
or
insb
popa
push
pop
adc
or
adc
cmp
add
add
add
daa
popf
scas
rolb
jge
sti
dec
xchg
sbbb
or
xchg
inc
sub
jge
loopne
push
pushf
pop
jg
inc
mov
inc
cmp
out
ret
lahf
popa
lock
cli
push
jae
cmp
and
xchg
repz
cmp
xchg
inc
push
sarl
iret
mov
ror
xor
daa
test
loop
pop
mov
es
mov
push
lods
sarb
mov
std
pushf
bound
pop
popf
jns
add
xchg
rolb
andl
clc
jmp
enter
and
dec
adc
xchg
add
push
push
lea
insl
sub
mov
iret
jns
jb
out
and
xchg
jg
in
add
adc
das
push
sbb
out
jg
push
fwait
gs
mov
repz
dec
dec
jmp
add
push
mov
in
sbb
push
xchg
outsl
adc
push
in
cmp
sub
out
push
pop
cld
add
pop
push
ja
cmp
sbb
mov
shrl
cli
outsl
lock
add
cmpps
adc
and
cwtl
adc
inc
mov
cmp
shrl
add
int3
jno
and
loop
push
fidivrl
push
fdivl
mov
mov
loope
xor
inc
mov
insl
pop
jle
and
dec
aaa
orb
jne
lcall
lds
adc
mov
xor
andb
mov
jns
or
and
aaa
out
loopne
or
sbb
shlb
dec
pusha
inc
or
inc
jmp
call
adc
je
and
js
out
add
push
pop
pusha
lds
jmp
push
out
or
push
inc
sbb
outsl
mov
xchg
outsl
mov
cmc
sbb
mov
pop
fadds
pushf
nop
in
scas
lds
pop
clc
mov
xchg
inc
xchg
push
daa
je
test
fbstp
pusha
add
push
and
arpl
sbb
sbb
fmull
xor
inc
bound
pop
mov
test
jg
in
outsb
dec
pop
repz
or
sub
inc
add
jg
mov
mov
add
push
xorl
inc
std
mov
mov
stos
and
sti
xchg
ds
decl
fwait
add
jge
sub
dec
jmp
lds
arpl
ret
std
inc
xorb
popf
xchg
stos
incb
ret
cmp
fidivrs
mov
das
shr
inc
imul
es
xor
push
daa
push
xchg
orl
int3
or
call
cmp
or
into
push
sbb
in
sbb
cld
and
pop
lret
mov
mov
jg
rorl
mov
outsl
out
mov
pusha
sbb
sbb
leave
add
or
mov
mov
mov
cvtps2pd
orl
pop
jle
sbb
sbb
aad
dec
or
loope
decl
outsb
push
adc
lods
daa
mov
jg
jne
inc
in
sub
or
stos
sub
cmp
push
cli
les
pushf
mov
mov
decl
stos
mov
loopne
into
cld
cmpsl
pop
lret
incl
mov
fwait
cmp
add
int3
int
iret
mov
xlat
leave
js
test
push
pusha
lods
ret
adc
push
cmpsl
mov
mov
inc
mov
clc
lds
cwtl
sar
jp
dec
in
mov
mov
decl
mov
lock
push
popa
sti
test
insb
jle
inc
sbb
loope
std
insl
jecxz
fstpt
stos
cmpsb
sarl
mov
int
jmp
sbbl
movsl
aam
add
movsl
mov
int
mov
jb
jge
mov
mov
cmp
scas
fxch
sbb
mov
or
cmc
sarb
cmp
shrb
inc
mov
mov
mul
push
stos
mov
add
loop
fisttpl
push
fsubs
sahf
mov
pop
mov
shl
inc
out
lahf
lods
sub
mov
push
fst
rcr
stc
aam
adc
mov
cmp
push
clc
mov
pop
shlb
loop
mov
or
movsl
lea
sbb
cmp
aam
jbe
add
inc
sub
push
aam
mov
test
pop
les
int
sar
push
sti
incl
stos
mov
leave
mov
rol
icebp
xchg
dec
fucomi
jle
movsb
mov
add
mov
pop
lods
or
add
fucomip
mov
or
ret
pop
dec
mov
aam
std
lods
inc
in
shrb
fucomi
in
jecxz
sbb
cmp
mov
dec
adc
inc
rclb
cld
cmpsb
into
je
mov
fdivrs
push
mov
jle
mov
xlat
loopne
pop
dec
jbe
mov
test
in
lods
lock
jecxz
and
mov
enter
loop
ljmp
xlat
aad
mov
js
cmp
lahf
dec
andl
adc
subl
sub
mov
das
jmp
mov
add
shr
mov
cs
push
mov
pop
jecxz
sahf
movl
mov
cmp
inc
bnd
pop
lea
cmpsb
scas
push
cmpsl
push
orl
cwtl
mov
movsb
jbe
dec
scas
xor
loop
add
mov
inc
jl
dec
outsl
mov
mov
jge
mov
bswap
mov
hlt
sti
rcr
shll
add
mov
rcl
fldcw
sub
sar
adc
jle
inc
fmuls
cmpsl
lahf
fld
mov
ret
cmc
lds
push
test
loop
mov
clc
or
inc
popa
add
sbb
ss
jg
cmpsb
in
aam
xchg
into
mov
lods
mov
pop
xorl
mov
pop
outsl
cld
shrb
mov
push
call
lahf
cld
aam
sbb
insb
cld
call
jmp
shll
mov
add
test
shrb
or
inc
or
ja
sbb
jle
pushf
jecxz
push
iret
roll
mov
fistps
ret
mov
loopne
cwtl
call
push
mov
incl
mov
es
cmp
pop
call
lds
jg
test
mov
cld
loope
cmpsb
and
push
lods
mov
jg
aad
mov
lret
ret
cmpsb
ret
sub
enter
jecxz
in
pop
pop
push
or
aad
inc
jno
test
stos
mov
fsubrs
jle
out
and
lret
iret
mov
mov
pop
add
repz
push
push
adc
fninit
mov
and
jmp
repz
insl
jecxz
in
push
mov
imul
dec
popf
cs
add
lods
stos
mov
jge
ret
mov
push
push
dec
shll
gs
ljmp
ds
fadds
repnz
test
cmpsl
mov
pushl
mov
cmp
mov
adc
test
dec
mov
in
adc
sub
stc
jecxz
movsb
mov
cmpb
pushl
cmpsb
loope
mov
mov
pushf
push
and
adc
lods
push
mov
lahf
lods
jle
xchg
sub
outsl
aam
fdivrs
mov
adc
or
inc
ffree
xchg
rol
pop
push
xor
mov
cs
or
push
mov
xor
mov
mov
addr16
ja
sti
inc
enter
es
pop
add
mov
cli
decl
ja
in
les
pushf
sbb
push
xor
jle
testb
push
out
mov
dec
or
jge
sbb
lahf
loope
mov
les
xchg
mov
mov
stos
xor
pop
aam
cld
or
mov
pop
add
inc
mov
mov
mov
pusha
mov
cmp
loope
clc
incl
lock
dec
add
or
popa
dec
push
scas
push
xor
loop
in
mov
add
aas
shll
lods
pop
ret
test
sub
pushl
mov
int3
xor
jae
mov
and
call
fsubl
rolb
cld
scas
sbbl
mov
test
mov
or
cmp
mov
pop
inc
mov
mov
mov
or
lds
dec
aaa
push
and
push
dec
aad
sub
aam
loop
clc
int
cli
pop
jecxz
dec
jb
adc
add
enter
and
cmp
daa
loop
into
mov
std
ja
mov
sbb
std
movsl
fbstp
loopne
mov
hlt
fbld
daa
repnz
shl
repnz
and
dec
dec
mov
and
faddl
cmpsb
aad
cmpb
cld
das
xor
repnz
and
leave
add
js
pop
aam
push
push
nop
fistps
mov
mov
mov
or
test
addr16
sub
cwtl
pop
cwtl
ss
xchg
sub
cmc
repnz
mov
ljmp
test
movsb
mov
xchg
add
lahf
inc
cmpl
movsb
fidivl
xor
add
cld
pop
push
add
imull
sub
mov
pushf
mov
jns
sbb
lret
fdivr
mov
push
mov
outsl
outsb
push
mov
out
bound
in
cwtl
std
pop
loopne
pusha
dec
dec
fistps
cmp
lret
ljmp
insb
mov
out
sub
mov
jmp
push
flds
push
int
aam
mov
stos
fsubs
push
lea
pop
xlat
lods
fldcw
jg
rorl
dec
xor
push
sbb
lcall
push
inc
aaa
push
in
hlt
cmpsl
roll
sahf
inc
xlat
ret
xor
sub
rcrl
mov
cmpb
rolb
fucomip
push
pushl
fdivrs
or
movsl
outsl
cld
dec
or
int
mov
fimull
pop
mov
cmp
push
test
inc
push
leave
pop
push
addb
cmpsb
das
mov
je
push
rorb
push
lea
aam
cmpsb
mov
shlb
xor
lea
loope
push
sarl
aam
dec
mov
sbb
mov
and
sbb
les
fs
rorl
insl
pop
sub
dec
jae
fsts
bnd
rorl
xchg
mov
lcall
mov
div
lods
xchg
mov
inc
sub
pop
mov
xlat
mov
test
fcmovb
mov
enter
jo
mov
mov
movsb
loopne
cmpsb
inc
cwtl
or
jecxz
out
cs
lea
mov
test
das
jl
dec
lods
imul
insl
imul
les
mov
pop
test
adc
lock
cmp
outsl
outsb
dec
cmp
add
test
loop
mov
or
hlt
mov
jecxz
test
fimull
xor
push
jns
cmp
pushl
jne
aam
mov
jge
lds
push
pop
dec
outsb
shlb
xchg
aad
ficomps
inc
imul
sub
add
add
mov
ficoms
aaa
xchg
lret
jbe
lods
roll
scas
cmp
or
jg
repnz
insb
jecxz
or
or
int
arpl
adc
or
inc
push
dec
frstor
cmp
jmp
pop
dec
add
xorb
test
mov
mov
call
fdivs
and
enter
add
sbb
in
ret
aaa
cs
mov
jbe
fidivrs
sub
cs
inc
jecxz
ljmp
mov
mov
xlat
icebp
rclb
pop
imul
aas
pop
rcr
sahf
aad
push
add
lea
cmc
cmpsb
out
loopne
mov
ljmp
or
mov
mov
mov
cmpl
jmp
cli
cld
mov
mov
ret
sar
xor
in
xor
inc
scas
mov
les
loopne
cli
push
lret
push
lahf
jge
aam
jo
fisttpl
fcoml
fidivrl
adc
nop
in
xorl
fidivl
mov
push
in
lds
pop
clc
mov
dec
push
pop
mov
pop
lcall
mov
data16
cmp
addr16
mov
mov
sbb
cmpsb
sbb
mov
insb
into
mov
push
mov
ss
mov
lret
movsl
pop
leave
jmp
pop
cs
aam
add
lret
mov
sahf
lret
cwtl
and
xor
mov
jmp
cmpsb
mov
cmp
nop
push
add
xchg
in
lret
roll
xchg
aad
cmp
mov
das
mov
scas
dec
mov
ret
cmp
mov
jg
jo
iret
cwtl
in
and
xor
sbb
fldcw
je
jno
xor
test
outsl
inc
insl
movsl
xorl
aas
jbe
incl
inc
imul
mov
loope
scas
cmp
testl
rcr
xchg
push
pop
fbld
pop
and
ret
pop
enter
fcomps
or
clc
aaa
popa
mov
movd
pushl
sbb
bswap
pop
mov
pop
jl
leave
inc
mov
or
and
cmp
push
rol
test
cli
sbb
push
ljmp
adc
lds
int
mov
test
push
mov
test
cli
inc
cwtl
notl
je
adc
adc
xchg
dec
sar
ss
in
in
sar
push
lods
add
and
pop
mov
out
sub
or
push
xor
inc
pop
mov
cmpsl
loopne
and
sub
outsl
shrl
mov
sbb
les
cmp
rcrb
fidivrs
cli
call
fdivl
lret
mov
xchg
inc
sti
jg
in
loopne
in
test
test
fistl
jo
bswap
ficomps
cmpsb
stos
pop
mov
mov
mov
into
mov
pop
pop
sbb
pop
in
cmp
lcall
ljmp
mov
aam
xorl
xor
fldt
repnz
lods
test
push
mov
sub
sbb
fsubl
mov
jae
lret
add
add
dec
mov
adc
shl
mov
movb
arpl
cmc
test
pop
jmp
add
mov
pop
dec
xchg
ja
incl
fst
ds
and
bswap
mov
lcall
sbb
popf
mov
mov
mov
pop
cld
push
sub
lods
fcomi
sarb
mov
bsr
test
iret
movsl
fists
mov
mov
mov
jecxz
hlt
shll
push
push
negb
xorl
sub
pop
loopne
fstpt
xchg
aam
shl
hlt
fsub
or
lret
xchg
mov
incl
sbb
ret
mov
repz
pop
pusha
mov
and
cmpl
movsl
test
pop
sub
ljmp
sti
xorl
and
fsubp
loop
repz
inc
jnp
xchg
mov
aam
insl
sti
es
lods
cwtl
roll
inc
mov
jne
fdivs
jmp
push
imulb
sub
adc
ret
popa
sti
pushl
inc
call
fisttpll
scas
dec
lret
leave
enter
mov
mov
outsb
call
or
add
gs
in
sti
sub
andl
clc
mov
push
fcom
cmp
inc
push
sbb
jbe
push
call
adc
adc
cmp
orl
push
popf
mov
mov
jne
pop
add
fisubs
and
ja
cmp
push
mov
push
adc
pusha
or
outsl
push
inc
and
movsb
lcall
loopne
inc
and
ja
add
insl
scas
rol
call
movsl
mov
and
add
ljmp
loop
es
mov
xor
cs
adc
in
mov
cltd
enter
and
pop
mov
jmp
mov
ljmp
test
and
sbb
xlat
jge
mov
sub
pushf
or
adc
mov
push
sub
sbb
mov
movsl
pusha
das
xor
sub
fldenv
lret
icebp
insl
arpl
rcrb
aas
in
push
test
jb
or
fistpll
cmpsl
sub
repnz
out
xlat
sub
fistl
sub
or
rclb
or
jecxz
lea
rcl
mov
bound
pop
rcr
outsl
fnstsw
lods
jae,pt
mov
cmpsl
and
adc
into
test
cmc
mov
test
jg
jg
sahf
daa
popf
rolb
dec
in
fstpl
jne
dec
sbb
shr
jae
enter
ret
inc
fisttpll
or
jp
pop
mov
mov
pushl
fsubrs
jl
dec
iret
cmp
cmpsl
fcomps
push
ja
lods
addr16
cmpsb
lahf
mov
add
pushl
fucom
jnp
mov
sbb
lret
cmp
pushf
out
aad
pop
fdivr
out
mov
and
scas
inc
mov
fdivs
scas
lret
adc
pop
enter
mov
or
mov
enter
xchg
flds
cli
mov
subl
or
jb
int
in
loop
cs
in
fcomps
jns
mov
add
and
and
filds
test
pop
adc
or
lret
pushl
pop
test
fcmovne
mov
mov
adc
mov
test
dec
mov
aas
cmpl
test
fnsave
sbb
pop
mov
stos
xlat
inc
xchg
rep
adc
xchg
adc
cli
mov
lcall
mov
add
lods
cmpsb
sbb
mov
inc
fildl
push
cli
cmpl
xchg
fiadds
mov
subl
clc
loop
jecxz
roll
push
inc
pop
mov
cmpsl
outsl
adc
lock
jmp
mov
mov
xor
mov
adc
jmp
and
pop
xchg
int3
lds
mov
sub
sbb
mov
les
insl
ss
push
xor
and
rclb
sub
jl
and
inc
and
jle
sbb
mov
and
jno
inc
xchg
adc
sti
jae
push
fstpt
test
jp
mov
cld
ja
loope
int3
push
add
add
sub
jg
cmp
ret
adc
mulb
mov
mov
sbb
mov
idiv
jp
ret
mov
xor
push
mov
aad
mov
push
mov
lods
in
add
ljmp
jno
subl
sahf
movsb
pop
inc
out
pop
push
sti
std
mov
sahf
push
add
lret
inc
lods
shrl
outsl
ljmp
je
lret
or
movsb
popf
lods
lret
call
jg
mov
adc
inc
add
fidivl
sti
pop
mov
mov
mov
lret
push
call
in
jl
ret
adc
lods
xchg
stos
repnz
xor
lahf
lock
sub
imul
movq
jne
bound
scas
je
shlb
jmp
adc
cld
mov
inc
das
jne
loop
sbb
cs
divb
mov
popa
popa
sbb
pop
ja
push
mov
or
pop
pop
les
jl
cltd
das
hlt
movsl
or
into
lahf
jl
add
mov
aas
mov
ret
add
add
call
xor
mov
loop
je
lock
loopne
jmp
aad
movsb
inc
cmp
inc
mov
inc
cmpsb
cmc
sub
mov
sbb
jge
cmpl
push
mov
das
cmp
jae
mov
jnp
lods
daa
pusha
inc
pop
pop
mov
dec
movl
ds
mov
fistps
scas
in
mov
inc
adc
loope
popa
cmpsl
cmp
movsl
pop
sub
fisubrs
out
shll
cmpsl
xchg
out
add
fisttpll
add
scas
xor
jg
inc
in
fisubrl
lret
sub
es
cmp
std
outsl
fistps
fcoms
mov
xchg
popf
mov
sbb
pavgw
and
incl
pop
ret
lret
loop
daa
sbb
and
mov
push
outsl
js
sahf
aam
or
repnz
ret
fiaddl
mov
rolb
movsl
shl
sub
add
int
mov
mov
sar
int3
data16
adc
xorb
push
add
mov
into
mov
in
lcall
sahf
cmpsb
stos
mov
jle
andl
incl
dec
cmp
mov
mov
mov
pop
shl
mov
js
inc
mov
pop
lret
lods
mov
or
call
out
cs
mov
dec
sti
xor
mov
mov
push
jp
and
mov
loopne
sti
mov
lahf
or
jecxz
jecxz
lcall
inc
ror
pop
lods
xlat
outsl
inc
jle
mov
scas
jno
es
outsl
xchg
movsl
xorb
ret
jg
mulb
insl
movsb
jecxz
mov
aad
sub
mov
pop
or
cmpsb
add
push
dec
mov
mov
cmpsb
xchg
ret
mov
incl
pop
lods
shll
fwait
mov
fiaddl
mov
lcall
lods
pop
xchg
dec
dec
sahf
ja
mov
loop
sarl
add
fisubs
mov
stc
lret
lea
fildl
inc
mull
inc
lods
into
add
addl
or
mov
dec
pop
sub
pop
sub
aam
inc
lock
sbb
mov
ljmp
iret
pop
mov
mov
ficompl
subl
rcl
mov
xor
cli
mov
repz
mov
insl
icebp
mov
popf
mov
stc
add
mov
lahf
pushw
push
xchg
loop
mov
test
dec
iret
mov
lret
shl
mov
mov
out
add
fdivl
lret
and
sar
pop
in
mov
shrb
push
imul
pop
sub
movsl
mov
int
fnstcw
fbstp
daa
xor
aas
andl
mov
xchg
adc
xchg
xor
shrb
aam
push
sarl
inc
jg
push
jmp
mov
sbb
mov
mov
cld
lods
iret
jg
fcmovnbe
loopne
out
cmp
sahf
lods
cmp
out
ljmp
into
lret
insl
mov
iret
or
int3
and
sbb
or
pop
call
faddl
clc
push
mov
mov
insl
lods
jle
cs
ficoms
lods
lret
test
adc
ror
enter
push
sub
mov
pop
jnp
enter
push
movsb
les
stos
shll
inc
mov
outsl
hlt
pop
lods
xorb
add
cs
xor
mov
xchg
shll
mov
cmp
fdivl
clc
out
sub
ds
xorb
clc
mov
lods
sbb
jl
push
push
movsl
mov
arpl
repnz
jge
lea
add
dec
pop
loope
mov
loope
mov
aam
sbb
bound
stc
stc
js
clc
adc
inc
aas
xchg
jae
inc
inc
pushf
dec
mov
sub
imul
fnstenv
cmpsb
test
fdivrp
sub
stos
fadd
jne
neg
push
adc
add
jg
ret
aam
xor
sahf
andb
inc
incl
movsl
fstl
or
fcomip
movsl
jecxz
aas
stos
mov
je
fimuls
fistpl
movsb
cmpsb
into
dec
call
outsb
lock
mov
rorl
call
pop
or
xchg
out
pop
fidivrl
add
inc
adc
into
aas
xchg
sbb
dec
mov
push
roll
shrl
fst
xor
inc
les
lock
test
fildll
insb
cld
loope
ljmp
or
insl
pop
loopne
mov
cld
push
xchg
shl
sbb
and
cwtl
lods
xchg
or
pop
popa
adc
out
cld
adcl
jmp
loope
stos
cli
mov
sarb
int3
cmpsb
orl
xchg
into
enter
or
mov
mov
inc
push
addr16
cmp
ret
int3
call
mov
test
or
leave
nop
mov
and
add
in
decl
pop
pop
sbb
mov
sbb
lcall
sub
lds
mov
jo
int3
je
das
mov
pushf
test
mov
jmp
movsl
sub
jo
out
fstp
jg
mov
push
mov
lods
mov
fsubrs
push
mov
fcomi
mov
xchg
aad
push
test
mov
sub
xlat
cmpsb
lcall
cmpsl
lods
add
ja
and
or
dec
es
jne
push
cli
bswap
mov
mov
mov
addr16
ss
inc
test
or
sbb
nop
adc
ljmp
jmp
dec
adc
push
imul
mov
int3
daa
jle
dec
insb
push
add
mov
mov
adc
inc
aam
add
sar
lahf
int
or
movl
icebp
scas
call
cmp
insb
cwtl
xchg
cwtl
call
adc
xchg
or
fistpl
push
jo
loop
and
mov
mov
sbb
aaa
sbb
inc
mov
add
mov
popf
fcmovnu
push
add
cmc
mov
push
pop
or
call
aad
mov
iret
mov
sbb
mov
mov
pop
jo
ljmp
repz
xlat
xor
add
jl
cmp
js
fidivs
cmc
dec
outsl
mov
movsl
mov
pop
aam
leave
lods
mov
test
mov
stos
fcmovnu
mov
mov
jno
aaa
pop
push
stc
loope
data16
push
std
pushl
mov
cmpsl
mov
and
loope
adc
mov
mov
jmp
mov
mov
jb
movsl
adc
leave
mov
lret
push
xor
rcrl
insw
cmc
loop
pop
movsb
fcmovnu
mov
or
negb
mov
cmp
fisubrl
inc
add
iret
mov
aam
mov
ror
scas
jecxz
pop
loop
insb
adc
pushf
lret
lret
push
and
lock
sarl
dec
pusha
mov
outsb
jne
test
loopne
add
jg
or
dec
sub
mov
stos
mov
mov
mov
xchg
adc
andnps
sbb
flds
mov
mov
int
push
call
sahf
adc
jne
push
icebp
jbe
xorl
test
movsl
rcrb
xchg
int
outsl
jno
mov
lods
loop
shlb
pop
pop
ljmp
dec
cmp
call
cmc
fs
push
incb
jl
xchg
ror
mov
or
xchg
stos
addr16
lret
cmp
mov
cs
out
mov
fisttps
inc
mov
rcrb
into
cli
lret
outsb
push
hlt
outsl
pop
cmp
stc
movb
fcmovnu
jo
jmp
inc
movsl
outsl
fildll
xchg
fisubl
rolb
stos
lods
in
xchg
jo
xor
decl
lahf
add
into
mov
pop
mov
test
dec
mov
mov
inc
cmp
inc
mov
mov
cmp
sar
mov
enter
dec
sahf
das
aad
add
mov
jns
pop
loop
cmp
shrb
mov
clc
mov
scas
xlat
jl
jecxz
daa
add
fld
xchg
xorb
div
fidivrs
lret
pop
loop
cld
lds
push
iret
test
ja
sub
add
add
xchg
dec
fcomps
mov
repz
outsl
adc
jle
sbb
sbb
dec
mov
pop
stos
sbb
mov
dec
cltd
fs
mov
push
mov
icebp
adc
fs
leave
xchg
mov
in
mov
xor
and
push
jge
mov
lahf
mov
sbb
add
rorb
dec
mov
mov
mov
mov
sbb
mov
cmp
pop
ja
mov
lock
inc
pop
pop
call
shll
jecxz
movsb
pop
aaa
ficompl
and
jp
cwtl
rcr
cmp
pop
or
in
pop
adc
outsl
pop
scas
shlb
cmpl
sub
divl
imul
hlt
sbb
clc
arpl
jg
das
pop
repz
mov
je
xlat
or
jecxz
mov
adc
lret
or
imul
pop
mov
mov
mov
test
xor
ret
cmpsl
dec
or
test
mov
jecxz
testl
add
pop
mov
adc
sti
lds
xchg
sahf
movsl
and
push
test
mov
flds
sbb
dec
insb
sbb
fisubs
or
push
mov
cmpsb
testl
cli
outsl
mov
add
jo
pop
call
test
xor
js
outsb
inc
in
mov
lods
mov
movsb
adc
mov
mov
pop
push
inc
out
dec
aad
add
or
dec
loope
lds
ret
lds
mov
push
mov
inc
mov
jb
mov
mull
mov
fldcw
mov
fldz
lret
pop
scas
adc
inc
rcl
dec
xchg
mov
jp
stos
out
cli
mov
xor
xchg
incl
jle
or
jbe
push
cmp
jae
sub
mov
cld
dec
cmpsl
bound
lahf
pusha
loop
test
cli
loop
loop
push
sub
in
aas
movl
pop
sub
or
fistl
push
fcoml
cs
add
loope
xlat
mov
imul
cli
ret
out
loopne
pop
xor
movsb
lods
cmpsb
pop
sarb
es
push
lock
out
xor
loop
pop
shlb
push
ds
dec
test
mov
and
shlb
test
sarl
inc
sbb
lret
movsb
popf
jbe
adc
lcall
jge
lock
ret
popa
jno
out
clc
xchg
push
pop
movsb
loop
cmp
lahf
rolb
divb
jg
test
sub
fnstsw
mov
add
xor
cmp
and
mov
imulb
push
movsb
jns
ret
sarb
test
ljmp
add
iret
test
mov
sub
fdivp
icebp
jg
test
stos
xchg
aam
les
arpl
aas
mov
or
mov
ficompl
add
fists
movsl
pop
adc
loop
andl
mov
xchg
cmp
movsb
inc
sbb
mov
or
loop
xchg
rorb
lods
push
pop
fs
fs
sar
imul
adc
pusha
sarl
sbb
sbb
inc
pop
add
sbb
rorl
insl
popa
jmp
scas
shr
or
mov
clts
setg
mov
ds
imul
push
pop
pop
clc
push
ds
scas
shll
mov
xchg
and
shll
fimull
xor
iret
mov
dec
or
das
bound
in
xor
not
shll
sahf
xor
and
test
push
ret
pushf
lret
test
xchg
js
sub
pop
mov
mov
fmuls
add
nop
add
or
ret
mov
pop
sbb
xor
aaa
faddl
adc
rcll
adc
mov
mov
hlt
mov
jecxz
pop
pop
fwait
scas
or
cli
xchg
mov
lods
in
pop
jne
mov
xchg
sub
shl
sti
int3
xchg
shr
push
inc
mov
leave
in
les
outsl
faddl
dec
stos
subl
out
dec
adc
testb
inc
add
inc
add
outsl
icebp
incl
fs
or
jp
mov
xchg
inc
or
int3
adc
ljmp
mov
in
adc
inc
lcall
and
jnp
pushf
call
cltd
adc
or
enter
xchg
sbb
xor
push
fcomp
ret
adc
dec
pushf
mov
mov
inc
ffreep
cld
and
add
inc
adc
fidivrs
xor
push
jp
xchg
or
jge
sbb
lea
push
jns
nop
popa
push
add
cli
lods
test
or
or
and
push
in
enter
dec
jno
inc
fcoms
sbbb
outsb
cmp
and
insl
pop
sahf
subl
xor
ja
sub
out
lret
add
js
dec
pushl
xchg
push
pop
inc
dec
mov
cmp
arpl
inc
push
jmp
lcall
xchg
int
inc
dec
adc
xchg
push
sbb
fwait
jp
jo
and
inc
xchg
add
arpl
mov
bound
jb
pop
inc
mov
cmp
notb
ja
int3
js
push
inc
push
xor
shrl
pop
bound
xor
push
push
dec
push
sbb
pop
test
pop
push
insb
sub
clc
mov
adc
mov
cmp
loopne
mov
cmpsl
dec
sar
mov
rcl
cmpsb
sub
mov
sbb
outsl
icebp
ljmp
cmp
jb
je
xchg
icebp
imul
xchg
push
mov
insl
sub
arpl
adc
lahf
lock
pop
xchg
subb
pop
jbe
mov
pop
divb
or
push
jmp
fsubrl
cmpsb
sub
xorb
arpl
call
test
pusha
jnp
add
push
leave
push
pushl
inc
sub
cmp
fmul
jne
jae
pop
pop
add
lahf
mov
std
sbb
pushw
pop
lock
or
cmp
push
dec
sbb
notb
call
std
decl
xchg
xchg
sub
inc
shll
das
adc
mov
and
xchg
ret
arpl
adc
std
sbb
fwait
lahf
sub
dec
loopne
imul
jbe
ds
xchg
mov
xchg
daa
das
cmpsl
cli
cltd
sbb
push
inc
ljmp
and
push
jp
js
and
inc
mov
jg
pop
sti
cmpsl
dec
push
cltd
js
xor
and
dec
cltd
push
add
nop
ja
addr16
out
aaa
jle
jne
daa
fldl
je
add
mov
ljmp
and
pop
push
loop
dec
pop
push
jmp
xchg
push
les
lcall
cld
mov
pop
mov
leave
and
dec
lock
pinsrw
movb
adc
pop
pusha
loope
xor
xor
sub
shlb
je
clc
add
dec
sbb
rclb
sarb
adc
inc
sbb
flds
ret
dec
fistl
lods
fistpl
hlt
mov
sbb
dec
fdivrl
ret
lock
fbstp
in
mov
insl
jo
cmp
jo
das
sarb
lods
jmp
test
or
xchg
xor
pop
push
add
xchg
or
push
mov
das
mov
iret
daa
in
cmp
dec
add
cmp
sbb
mov
data16
and
gs
cwtl
inc
subl
in
mov
fcmove
leave
pop
leave
and
mov
pop
leave
pusha
data16
xor
test
aad
push
aas
mov
cmp
fstl
jnp
or
xchg
sbb
bound
jbe
sbb
arpl
xchg
dec
fadds
dec
sahf
pop
jecxz,pn
push
xor
repnz
inc
and
sbb
dec
fsubrs
imul
pop
add
cmp
mov
sub
or
nop
out
mov
or
mov
in
sbb
xchg
and
mov
xor
lret
daa
push
sbb
rorl
jnp
dec
or
fiaddl
jbe
fcmovnu
adc
andl
add
dec
mov
or
dec
pop
ss
pop
int3
jo
leave
test
arpl
or
adc
dec
flds
sub
sbb
and
outsb
stos
daa
in
xchg
pusha
adc
push
insb
adc
dec
enter
addr16
fdivl
and
stos
je
cltd
xchg
add
repnz
add
pop
in
and
inc
adc
or
push
adc
push
mov
nop
sub
lahf
sbb
push
movb
add
xchg
int
push
inc
mov
inc
pop
daa
xor
cmp
das
in
jbe
push
or
psubusb
push
xchg
out
xchg
dec
push
cmpsl
or
mov
pop
cmpsb
frstor
or
js
lcall
or
rcrb
lods
sbb
daa
adc
lret
xor
sbb
sbb
adc
inc
aaa
pop
add
mov
je
or
adc
xchg
jne
imul
adc
push
sub
popa
cs
nop
shlb
push
mov
dec
cmpb
mov
lock
fld
inc
sbb
jbe
sbb
xor
icebp
add
in
or
push
adc
add
in
outsl
xor
cmovge
mov
sbb
sbb
jle
into
sbb
sub
test
and
push
or
adc
movsl
data16
test
dec
xchg
es
rolb
add
xchg
sbb
rolb
pop
pop
xchg
rclb
push
fmuls
cltd
xchg
dec
dec
pop
add
sub
dec
adc
fcompl
and
in
push
jecxz
xchg
or
mov
dec
push
push
adc
sbb
push
inc
lcall
je
push
inc
lcall
imul
push
popa
dec
loop
push
rcll
sbb
int3
pusha
fcompl
inc
out
jecxz
mov
pop
mov
push
das
mov
movsb
das
add
mov
and
push
xchg
and
and
fisubrs
fsubrl
call
sbbl
mov
cwtl
in
movsl
subb
nop
jge
xor
xchg
je
xorb
mov
xchg
mov
xchg
mov
inc
aam
gs
aas
xchg
push
notb
test
daa
scas
push
xchg
add
lret
pop
and
pusha
rcrb
and
lods
push
jbe
push
xor
pop
inc
loop
pop
enter
pop
and
jno
dec
mov
sub
in
or
outsl
jo
repnz
xor
or
add
leave
push
lret
and
out
stos
test
ror
int3
sub
lahf
ret
mov
insl
adc
and
xchg
inc
sub
adcb
pop
sub
dec
sahf
or
or
sbb
mov
sbb
add
jg
xor
in
cmpsl
in
fistpl
imul
repz
sahf
insl
add
lock
dec
sub
adcl
dec
mov
and
push
push
insl
fwait
les
mov
iret
cld
xchg
inc
loopne
xchg
jae
xchg
mov
pop
leave
dec
pop
sub
pop
sahf
inc
loop
test
adc
lods
cmp
idivb
fldl
nop
adc
cmpsl
in
adc
sarl
leave
and
push
mov
xchg
inc
push
push
jbe
push
test
add
cmp
fs
hlt
ret
pop
in
in
mov
mov
and
fwait
xor
rcl
fcos
jecxz
push
pop
leave
movsb
add
pop
dec
sbb
sub
leave
mov
jl
pop
daa
fdivs
and
inc
aam
mov
push
mov
dec
jo,pt
inc
pop
sub
repnz
rclb
nop
adc
xchg
and
mov
xchg
cmp
repz
nop
adc
add
xor
std
shrb
cwtl
adc
sbb
imul
decl
mov
fs
loope
test
and
mov
test
leave
add
add
dec
leave
lret
push
stos
std
shlb
xchg
mov
and
sbb
sarb
inc
in
dec
pop
lods
and
xchg
mov
adc
jmp
dec
sbb
mov
sub
add
adc
sub
or
mov
fsubrl
mov
and
hlt
add
or
xor
das
add
fs
mov
adc
sub
push
ds
mov
sub
mov
mov
test
jne
pop
pop
cltd
xchg
sub
or
or
xchg
jl
xchg
lock
fxch
popa
jl
rcll
and
or
push
adc
add
lcall
test
in
rorl
xor
and
addr16
test
jne
hlt
inc
inc
test
add
movb
sub
movsb
sbb
pop
and
add
sahf
test
frstor
aad
or
vpcmpgtb
xchg
addb
add
cmp
pusha
jne
xchg
xchg
std
pop
shl
jbe
into
ljmp
pop
add
pop
push
mov
xor
roll
pop
or
mov
or
mov
inc
subb
and
xchg
jns
add
mov
and
mov
mov
mov
mov
push
addl
xor
leave
inc
sub
adc
lods
add
movsb
outsb
lock
icebp
pop
rcrb
or
popa
cmp
xchg
dec
leave
dec
mov
ret
repz
enter
or
push
scas
mov
pop
jno
ret
iret
xor
das
bnd
and
cwtl
xor
pop
xor
ret
push
mov
xor
push
xorl
adc
test
xor
and
fisttpll
adc
cs
pop
outsl
lahf
or
lcall
gs
mov
jb
in
lock
xor
addb
lods
rorb
or
rcrl
loopne
stos
into
jnp
int3
and
and
jno
add
xchg
pop
icebp
lds
xor
ficoml
out
leave
xchg
jl
xchg
roll
xorb
icebp
je
inc
inc
mov
and
add
test
mov
gs
dec
mov
mov
cs
mov
orb
pop
popa
cwtl
dec
xor
adc
dec
jno
mov
and
movsl
and
pop
aam
clc
faddl
add
dec
pop
lock
jb
jae
scas
loopne
pmulhuw
das
lahf
xchg
imul
shrb
pop
push
jb
jno
adc
outsb
in
add
adc
int
xchg
loopne
int3
cmp
add
movsb
scas
test
test
pop
popa
inc
fwait
xchg
push
inc
das
mov
mov
inc
hlt
movsb
inc
repnz
mov
pusha
sub
lret
xorb
pop
movsl
add
add
xchg
popa
lret
stos
and
xor
mov
pop
leave
mov
add
outsb
push
jb
sub
enter
pop
lods
push
addr16
push
push
dec
add
mov
insb
and
loop
mov
les
outsl
scas
add
or
xor
inc
jg
xchg
push
adc
es
pop
and
mov
dec
and
out
inc
mov
sub
nop
int
aad
mov
bound
add
leave
leave
call
stc
cmp
xorb
inc
mov
fdivrs
jno
popf
mov
xor
dec
push
leave
xchg
add
mov
jo
sub
jp
cmpsb
push
and
xchg
movsl
or
cmp
pop
iret
inc
xchg
ret
pop
mov
sub
mov
xchg
add
ljmp
jnp
sub
mov
in
lea
hlt
out
leave
dec
mov
loopne
dec
enter
notb
inc
push
aad
add
scas
fs
gs
jne
pop
fisttpl
std
sbb
insl
lret
adc
movsl
leave
cmpsl
insb
jbe
mov
pop
or
push
stos
sbb
les
fs
cwtl
xchg
inc
add
data16
xor
fs
adc
addb
add
and
push
stc
repnz
pop
movsb
xchg
mov
cmpsl
stos
inc
jo
pop
sbb
cltd
sub
inc
sbb
xchg
ret
cli
xchg
jb
adc
inc
push
mov
out
rcrl
push
sbb
xchg
pop
out
xor
movsb
sub
or
sbb
inc
push
xchg
nop
aam
imul
cltd
jge
sarl
rcrb
xor
push
or
pop
inc
cmp
sbb
add
sub
jo
lds
mov
in
sti
xchg
mov
lret
jp
enter
ljmp
jo
aas
sti
inc
ljmp
push
xchg
cmp
xor
es
xor
xorl
je
icebp
or
jb
push
cmc
push
xchg
cmp
aad
das
push
xchg
ljmp
fs
mov
sahf
or
xchg
mov
push
push
mov
xchg
and
into
aaa
inc
andl
subl
and
gs
dec
les
call
sub
and
adc
jl
outsl
adc
xchg
xor
or
pop
ljmp
inc
push
mov
inc
je
sbbl
add
and
mov
das
scas
cmp
ret
movsb
mov
mov
adc
adc
test
pop
mull
xor
outsb
or
and
test
add
push
adc
lret
aam
add
add
and
test
pop
ficoms
sub
jge
add
push
pop
movsl
inc
outsl
and
mov
mov
roll
jge
and
and
jmp
repnz
movsb
test
scas
les
cli
shll
or
pop
adc
shl
out
xchg
or
ret
push
cmp
dec
or
or
daa
in
sbb
pusha
imul
push
add
pop
xor
inc
or
aaa
xor
fistl
add
and
out
bound
cltd
test
call
sub
and
cmp
jb
mov
popa
sub
add
add
cmp
dec
pusha
shrl
cmp
dec
arpl
pmulhuw
negb
add
and
and
or
and
add
popf
and
sbbl
hlt
call
and
pusha
and
adc
lods
jbe
push
pop
ret
je
jg
xor
leave
xchg
adc
add
dec
and
or
mov
lcall
daa
popa
add
add
fsts
sub
cld
into
insl
movsb
pop
or
in
mov
sub
add
mov
xchg
adc
movlps
xchg
cmp
loopne
mov
xchg
lea
ss
mov
fs
mov
dec
cli
enter
inc
iret
mov
pop
xor
lret
in
in
jle
xchg
and
pop
dec
cs
movsb
mov
notb
mov
or
pop
gs
xor
fs
inc
push
push
xchg
enter
stos
cmpsb
lds
daa
imul
imul
sbb
out
inc
xor
xchg
enter
add
push
mul
clc
and
cmpsb
push
inc
pop
ret
shufps
daa
xchg
std
sbb
lods
int3
jae
xchg
dec
and
lahf
mov
nop
push
sbb
adc
sub
mov
test
mov
add
xor
xchg
add
jne
and
add
sahf
mov
xor
pusha
jns
pop
pop
and
jns
outsb
imul
add
repz
fstps
aas
jnp
xchg
jne
jge
bound
and
movsb
stc
and
das
add
add
mov
adc
sub
sbb
push
mov
sub
adc
and
dec
lcall
push
pop
sbb
in
push
pop
add
pushf
xchg
divl
mov
and
shrb
lret
cltd
adcb
push
sub
sbb
leave
mov
rorb
cwtl
xchg
cmp
jo
inc
adc
subb
cmc
dec
inc
or
add
sbb
inc
je
add
push
add
xchg
push
icebp
dec
leave
pop
inc
test
lret
jl
lods
repnz
add
push
fcomps
lods
or
bound
add
movsl
and
pop
mov
pop
add
call
nop
push
pop
mov
and
hlt
jno
stc
and
push
add
sbb
pause
xor
and
or
jg
icebp
and
sbb
mov
dec
mov
push
and
push
mov
sbb
jmp
inc
adc
xchg
cmp
repnz
jg
incb
mov
push
push
enter
sbb
add
movsl
cs
enter
popf
jp
das
mov
lret
fiadds
adc
and
jb
iret
or
nop
xchg
lock
outsb
ja
cld
mov
popf
mov
lea
dec
add
dec
jl
lret
inc
cs
mov
jle
dec
enter
lret
cmp
ss
orb
dec
push
pusha
ret
test
mov
test
test
push
andb
inc
repnz
dec
add
sub
lods
lret
add
lds
dec
add
jb
std
inc
popa
and
dec
mov
and
popl
jns
xchg
pop
and
cmp
repnz
xor
out
stos
sub
movsb
stc
leave
xor
push
out
iret
fsts
lods
jl
movsb
addb
cltd
pop
lahf
and
xlat
sub
pop
jno
mov
sbb
push
nop
gs
es
iret
out
in
movsb
adc
lods
adc
sbb
pop
into
or
jl
inc
mov
jg
dec
loop
test
les
clc
xchg
lods
pop
stos
dec
add
and
lret
mov
fincstp
jg
loopne
stos
inc
shlb
cmp
jno
inc
lcall
sbb
icebp
lods
es
and
cmc
and
imul
dec
and
fistps
insl
and
cmp
jmp
pop
pop
dec
sbbb
or
mov
pop
fs
adc
dec
add
sub
push
xchg
ret
fidivs
mov
adc
jb
mov
inc
test
push
xchg
adc
jecxz
fwait
sub
xchg
je
bound
loopne
jns
mov
or
leave
or
mov
add
cmpsl
in
inc
xchg
pop
les
out
cli
inc
subl
loopne
mov
test
pusha
mov
add
jmp
or
fstpl
aam
sbb
je
mov
cmp
sub
jle
sub
movsb
push
adc
or
test
lds
jecxz
adc
cmp
test
jno
nop
add
adc
mov
in
jecxz
cmp
xor
xchg
inc
push
lods
mov
xor
leave
mov
lahf
dec
ljmp
loopne
add
and
cltd
add
ret
cmc
jle
cmpl
sarb
into
adc
add
pop
daa
jb
ret
test
in
insb
sub
xchg
and
aas
adc
mov
mov
sub
orl
dec
outsb
inc
xchg
sbb
enter
in
sub
pop
mov
dec
mov
pop
fimuls
sub
add
test
or
sbb
daa
cmpsl
push
bound
push
mov
sti
push
insl
pop
addr16
stos
adc
push
mul
jle
add
cmp
dec
and
cmp
jno
dec
test
scas
or
dec
adc
mov
adcl
inc
and
mov
or
push
push
cmp
mov
xor
aaa
jg
inc
rclb
insb
lds
cmpl
scas
orl
cmp
stc
adc
and
fstpl
cmp
push
and
cltd
mov
call
testl
imul
xor
je
inc
repnz
dec
cmc
outsl
sub
aaa
mov
add
or
pop
and
pop
fs
push
in
int
xchg
ffreep
and
popa
xchg
jg
imul
sub
jmp
dec
xor
and
clc
sub
clc
mov
xchg
movsb
mov
lds
xchg
lret
jmp
dec
loopne
mov
sahf
adc
add
adc
and
in
xchg
pop
pop
mulb
fnstenv
jmp
leave
sarl
inc
std
dec
sahf
xchg
mov
imul
and
inc
pop
ret
jle
xchg
dec
xlat
add
sub
stos
sub
es
mov
mov
and
fsubs
or
dec
in
rolb
outsb
xor
cld
les
inc
and
cmp
or
pop
ljmp
mov
mov
xor
cmp
loop
or
cmp
lahf
mov
nop
cmpsl
loopne
add
imul
pushf
enter
jbe
pop
and
shrb
test
bound
sub
push
mov
and
es
sbb
push
jo
movsb
andps
arpl
cld
addr16
or
fcom
sub
adc
xchg
cmp
cmpsl
jmp
push
add
push
add
les
xor
cmp
push
fistpll
call
adc
and
mov
test
stc
jnp
cwtl
ret
xor
sub
xor
adc
mov
xor
xor
jno
push
xchg
int3
xor
pop
bound
cmp
sub
push
and
and
lret
mov
sub
sbb
xchg
scas
nop
mov
rclb
mov
sarb
sub
adc
into
mov
xchg
mov
sbb
shll
lahf
push
cmpsl
xchg
push
add
lret
inc
jle
adc
bound
jb
aad
mov
dec
push
pop
mov
or
jecxz
rorb
les
cwtl
jle
xchg
jl
arpl
push
lock
mov
mov
adc
insb
and
mov
add
sub
push
push
cmpsb
sub
mov
and
cmp
xlat
cmpsl
push
mov
xchg
mov
pop
mov
bound
and
sbb
jp
cmp
add
and
mov
push
jl
push
in
incb
adc
lods
push
sbb
or
test
and
adc
and
scas
adc
adc
inc
je
mov
mov
dec
je
hlt
and
pusha
sub
xchg
lods
ja
mov
ror
sub
cs
add
dec
pop
sbb
cmp
cmp
pop
and
adc
fcmovne
in
jge
dec
stos
push
and
insb
add
mov
or
jb
adc
push
xor
dec
mov
adc
test
addb
cmp
pop
shlb
dec
shrb
pop
add
push
cmp
push
dec
stos
mov
and
and
and
lret
adc
lret
daa
repz
lods
movsb
addb
push
inc
add
adc
mov
loop
xor
jge
les
scas
arpl
int3
and
pop
xchg
add
sbb
push
or
adc
inc
mov
scas
sub
andb
push
dec
stos
lret
inc
mov
scas
mov
pop
sbb
add
add
or
sahf
mov
xchg
jne
jb
mov
lock
enter
pusha
into
cwtl
enter
call
subl
cmp
cmpb
inc
sbb
push
mov
adc
test
inc
mov
nop
daa
int3
mov
push
and
icebp
jle
inc
xor
mov
js
das
sub
and
in
ret
mov
sbb
push
adc
clc
xchg
add
add
push
dec
mov
push
jg
adc
inc
push
xchg
push
mov
inc
je
mov
fists
negb
cltd
dec
add
jmp
dec
adc
sbb
lods
pop
dec
mov
and
fadds
sbb
dec
in
cmpl
inc
imul
xor
lea
mov
jo
js
pop
pop
push
lcall
sahf
cli
inc
bound
adc
cmp
adc
push
cmp
jg
testl
pop
movsb
call
orl
pop
fs
loopne
lods
loop
jnp
inc
popa
out
lcall
mov
ret
icebp
daa
loope
or
sub
pop
pusha
pop
mov
sti
incl
sbbb
sub
orl
ret
movl
mov
icebp
scas
aaa
mov
inc
jbe
ficoms
fs
pushf
push
loop
inc
daa
inc
sbb
ds
cs
shlb
fs
addr16
insb
push
inc
push
not
dec
inc
pop
sarb
xor
inc
loopne
hlt
pushl
and
push
adcb
cmp
jle
jg
inc
and
outsl
pop
sbb
xor
push
add
lcall
popa
jle
pop
ret
je
or
cs
sub
cld
jno
dec
bound
aam
sbb
sti
push
cmp
xor
cmp
and
add
jo
insb
or
addl
dec
mov
in
mov
cmpsb
add
mov
inc
inc
cmp
ss
pop
ja
decl
cmp
jg
notl
dec
sbb
or
sbb
je
subb
jae
inc
idiv
pop
outsb
mov
cmp
push
inc
push
pop
jle
not
repz
dec
in
adc
mov
inc
loope
negl
push
jmp
lahf
fucom
mov
cwtl
roll
inc
cmp
dec
ret
cs
adc
or
addl
rorl
ja
rcl
mov
mov
jg
daa
cmp
or
pop
sbb
roll
add
push
adc
xor
jecxz
xor
insl
xor
rolb
push
test
mov
cld
push
adc
push
loop
pop
push
adc
push
dec
lock
add
loope
sub
js
decl
sub
cmp
inc
sbb
xor
ret
inc
gs
leave
out
mov
inc
popf
sti
popa
js
dec
cmp
pop
clc
sub
pop
and
adc
dec
insb
adc
pop
adc
add
fisubrs
xor
les
mulb
push
hlt
outsl
add
mov
add
inc
push
dec
ljmp
lret
mov
scas
add
addr16
dec
add
aas
adc
mov
and
sub
lock
aas
leave
out
mov
push
pop
jl
andb
in
sbb
das
adc
pop
js
loope
adc
pop
sbb
xor
stc
push
js
mov
xor
fisttps
cld
movsl
ret
dec
or
adc
jne
dec
aas
cwtl
ret
jle
sbb
push
inc
inc
ret
test
sti
dec
inc
inc
ret
outsl
ret
mov
add
neg
sti
lret
mov
sbb
inc
dec
adc
mov
std
mov
lsl
dec
fimull
add
not
dec
ds
mov
aaa
std
mov
sbb
xlat
pop
mov
add
xchg
insl
clc
add
inc
and
outsb
test
sahf
mov
dec
jns
rol
scas
insl
mov
dec
push
fwait
push
mov
mov
movsl
fildl
push
inc
jb
adc
in
pop
imul
sbb
adc
cli
fcmovnu
inc
ud2
in
ljmp
dec
pop
jecxz
mov
dec
test
mov
push
push
in
roll
add
insl
add
scas
jbe
jne
dec
lock
add
push
and
cmpb
push
das
in
cmp
popa
stc
je
shrb
hlt
xor
xor
mov
mov
leave
inc
fwait
inc
mov
lods
jge
mov
and
jmp
in
hlt
outsb
push
cld
push
inc
call
int3
cmp
xor
popf
in
sbb
cld
cmpsb
int3
fldt
inc
mov
inc
dec
cmpl
test
push
mov
inc
popf
rolb
inc
push
inc
mov
mov
je
mov
push
mov
jg
cmp
push
mov
push
pop
pop
stos
mov
jnp
add
or
call
push
mov
or
clc
inc
fidivrs
fstpl
push
fisttps
dec
mov
aad
push
and
sub
repnz
add
test
mov
inc
xor
inc
mov
dec
jne
xchg
mov
fwait
ret
or
jecxz
fisttpl
sbb
into
dec
enter
inc
sbb
xor
jbe
sahf
aam
ret
dec
cmp
and
sub
addb
inc
and
orb
push
das
sbb
dec
push
dec
and
and
or
sbb
and
add
jmp
xor
xor
rolb
inc
add
cmp
pusha
and
pusha
add
inc
inc
inc
jo
push
pushl
dec
insl
jns
add
jae
jb
xor
aaa
push
add
mov
jne
jo
dec
push
cmp
or
jo
add
and
add
add
add
sbb
add
sbb
or
add
mov
jnp
and
or
and
or
and
fistps
jno
add
loopne
xor
lods
or
loopne
and
test
fisttpl
andb
sbb
add
cmp
push
push
out
loopne
add
xor
imul
or
push
or
pusha
mov
jg
dec
addr16
add
add
insb
add
add
jae
out
add
jbe
cld
mov
imul
add
jno
or
push
popf
in
outsb
lods
movsb
mov
add
cwtl
jb
inc
inc
insl
jnp
fidivrl
or
lods
xor
addb
pusha
jns
mov
ret
or
popa
and
sbb
or
and
add
add
sbb
xchg
lds
add
or
dec
xor
addr16
fiadds
mov
lods
loopne
je
loopne
add
add
xchg
inc
addb
push
pop
push
insb
inc
jns
popa
jo
incl
ss
arpl
imul
mov
mov
xor
je
xchg
inc
jg
mov
pusha
pop
jo
loopne
pusha
add
xor
ficompl
pop
enter
jo
push
cmp
add
mov
xor
enter
pusha
xor
fists
outsb
xchg
or
add
pop
add
push
dec
xor
mov
ficoms
add
jecxz
add
mov
int3
add
stos
xorb
mov
xor
inc
mov
movsl
test
cmp
fwait
rorb
xchg
cmp
or
mov
and
insl
int
inc
xor
mov
xorl
inc
sub
sar
loopne
push
jae
or
push
dec
xor
cmp
in
jne
and
movsb
jo
jbe
xor
push
inc
int
lods
insl
aad
mov
mov
add
jge
mov
add
rcrb
test
push
sub
and
and
lods
shlb
int3
pusha
xor
mov
nop
pusha
pop
jae
pop
dec
sub
sub
mov
pop
stc
push
push
jb
jns
gs
mov
jae
addr16
rcl
in
mov
push
aaa
sbb
stos
fisttps
xor
pop
sub
pusha
rclb
adc
push
push
movsb
inc
pushl
int3
xor
fs
inc
push
jo
mov
sub
dec
popa
dec
inc
jno
outsb
imul
sbb
nop
loopne
dec
dec
push
push
pop
cwtl
pop
popa
sub
xor
push
mov
ret
in
cmpsb
das
insb
pop
imul
cmp
aaa
add
mov
or
nop
inc
sbb
imul
pmulhw
pop
add
movsl
subb
dec
cwtl
pop
mov
or
mov
xchg
mov
shrl
push
lcall
inc
mov
sbb
in
push
mov
lea
aas
push
rclb
xchg
sbb
cvtpi2ps
inc
cmpsl
incb
lea
sbb
movl
iret
mov
ficoml
xor
add
add
lods
arpl
fwait
xor
testl
push
js
add
cmp
xchg
push
lods
or
dec
sbb
loopne
pushw
mov
mov
addb
add
sbb
xchg
in
inc
push
call
in
pusha
jo
mov
outsl
je
push
ss
mov
fiaddl
jo
int3
inc
mov
jo
sub
aaa
inc
leave
mov
push
jmp
add
addr16
cs
add
mov
mov
je
ja
cmp
push
xor
fstpl
pop
out
andl
sub
cltd
dec
fwait
loope
add
dec
ss
dec
imul
mov
daa
sub
and
addb
pop
js
dec
imul
bound
outsb
daa
insl
shlb
fs
mov
pop
lods
and
mov
mov
inc
cmp
outsl
lea
lods
push
push
imul
mov
rclb
je
iret
xor
add
mov
or
jne
inc
jo
rcl
mov
int
and
xlat
mov
pop
or
mov
and
add
movsb
call
orl
in
cs
dec
push
push
sbb
add
fldt
or
xor
daa
push
jg
xchg
inc
jb
inc
jo
xor
sbb
xchg
imul
mov
imul
cltd
ret
cltd
cmp
cwtl
and
mov
pop
xor
mov
dec
dec
jo
mov
pop
add
or
into
mov
inc
cmp
xor
fists
push
inc
inc
inc
push
gs
aad
rorb
lcall
pushf
xor
es
int
push
add
adc
and
pusha
fimull
pusha
push
mov
or
test
push
xor
jbe
push
in
pop
mov
xor
jle
cmp
cltd
or
lea
shlb
add
mov
roll
mov
imul
push
dec
movsl
xchg
push
add
sbb
in
shl
inc
pop
imul
xchg
sti
push
imul
int3
inc
add
cmc
insl
mov
shrb
loopne
sti
cmp
xor
movsb
aaa
xor
cmp
xor
inc
sub
daa
subl
inc
push
xor
inc
dec
xor
roll
clc
idiv
add
mov
mov
cmp
clc
add
pop
push
pop
inc
cmc
andl
arpl
push
js
pop
sti
mov
push
push
dec
dec
inc
push
inc
push
push
dec
inc
pusha
subb
pop
in
add
mov
daa
jnp
movsl
inc
imul
dec
xchg
pop
imul
rcl
mov
cmp
in
mov
mov
push
push
imul
jo
int3
jb
dec
cmpsb
fistpll
lods
xchg
or
inc
mov
push
add
pop
insb
pop
add
rcrl
dec
and
popa
sbb
or
shrb
inc
repnz
leave
into
movlps
cld
sahf
rolb
sbb
add
pusha
dec
and
pushf
push
push
jo
jne
dec
and
leave
cmp
dec
xlat
and
shlb
aam
push
lea
xchg
xchg
jecxz
mov
addr16
jns
arpl
insl
sub
pop
imul
sbb
test
lret
adc
xlat
lea
jns
jle
ret
nop
outsb
call
dec
js
fcom
cmp
mov
test
hlt
xchg
add
mov
stc
clc
sbb
insl
filds
ja
ja
pop
pop
rcrb
lods
mull
cmp
and
cltd
clc
sub
push
pop
int
xor
int3
add
xor
in
xchg
mov
aam
jne
add
push
pop
xor
mov
xchg
mov
mov
lods
sbb
mov
cmp
push
jg
clc
repz
popf
fdivrs
jecxz
mov
or
ja
call
push
xchg
pop
dec
xchg
pop
loopne
pop
mov
sbb
hlt
mov
mov
push
cmp
add
sbb
mov
sbb
xor
cld
dec
jecxz
cmp
je
dec
lea
pop
fcompl
jecxz
ficoms
pop
xor
adc
daa
imul
inc
stc
fdivr
jmp
xchg
pop
adc
mov
daa
jne
push
aad
and
xchg
or
mov
in
pop
fldenv
mov
pop
aas
jg
imul
dec
push
adc
dec
js
sub
out
sbb
sbb
cltd
sub
dec
lahf
mov
repnz
je
sbb
pop
hlt
pop
adc
sbb
or
in
sbb
xor
insb
dec
inc
or
repnz
jle
in
xchg
pop
sbb
mov
dec
pop
es
enter
nop
and
inc
lret
ret
negl
sbb
inc
xchg
inc
popl
or
adc
add
outsl
mov
sbb
mov
inc
xchg
push
movsb
dec
je
sbb
jl
xchg
movsb
loope
jbe
ficompl
sbb
imul
cmpsl
cmp
addb
cmp
cmpl
mov
fwait
cmp
out
jmp
imul
inc
sarl
inc
outsb
enter
inc
gs
dec
jl
and
jge
outsl
jle
divb
ja
or
push
jp
cmp
rcrl
jae
cmp
popa
xchg
ja
jge
sbb
xor
aas
xchg
in
inc
dec
hlt
inc
xchg
dec
pushl
aas
xchg
loope
fcoms
push
jmp
negl
testl
cld
adc
call
lock
sbb
jecxz
or
cltd
push
out
repnz
lahf
fcompl
movsl
or
dec
push
sbb
imul
and
xchg
int3
aaa
dec
loopne
out
pop
pop
idiv
cmp
enter
movsl
dec
mov
lock
std
in
negb
clc
adc
hlt
pop
pop
clc
dec
jbe
jge
fcoms
in
dec
hlt
dec
enter
pop
inc
mov
push
clc
adc
pop
sub
or
cmp
xor
fnstsw
jae
dec
call
test
cmp
outsb
imul
cs
cld
push
mov
jns
pop
add
hlt
jmp
mov
imul
pop
aam
cmpsl
jae
sbb
pop
xchg
adc
fsubrl
mov
xchg
push
testl
out
cmp
mov
imul
or
cli
mov
sub
loopne
sbb
jnp
aaa
out
cli
xchg
inc
add
and
and
xor
stc
sbb
lcall
cmp
test
jbe
push
les
bound
xchg
push
dec
mov
in
dec
or
sub
divb
outsl
or
adc
lahf
fstpl
repnz
sbb
push
sbb
sub
ret
insb
inc
or
or
fistl
in
ss
std
dec
dec
dec
hlt
mov
push
cmp
addr16
inc
inc
lahf
fbstp
imul
or
mov
insb
in
mov
dec
js
fxch
out
sti
jne
daa
fmull
in
push
pop
jge
jmp
jmp
cmp
lea
sbb
jae
repz
fistpll
or
jecxz
xor
xchg
loopne
aad
fadd
insl
lock
pop
sub
fsqrt
into
ss
cmp
and
pop
loope
adc
in
shrl
sbb
cmp
xor
mov
outsl
std
enter
je
mov
sbb
pop
jmp
movsl
pop
sbb
arpl
int
fisttpll
ret
hlt
and
add
sub
inc
clc
sbb
jns
jne
or
sbb
jns
inc
icebp
sbb
jb
jb
sbb
enter
push
adc
loop
enter
fcomp
movsl
lea
out
std
lahf
fsub
dec
ss
adc
sti
shr
shrl
nop
xchg
xchg
pop
pop
push
rol
jno
dec
sti
adc
decb
jg
mov
das
pop
ljmp
outsb
mov
adc
imul
sbb
lods
and
mov
push
dec
jp
ds
sbb
sbb
lahf
div
xchg
mov
addr16
mov
insl
mov
xchg
iret
scas
je
pop
and
test
lods
hlt
std
pop
daa
push
adc
mov
jae
cmc
es
cld
fcmovnbe
outsb
or
movsb
sbb
in
popf
sti
jecxz
jp
add
fistpl
daa
xchg
mov
insl
fistpl
push
mov
dec
sbb
nop
sbb
fists
adc
or
xor
inc
adc
adc
insb
fistps
mov
daa
fistpl
adc
pop
add
or
adc
mov
or
sub
out
imul
inc
or
nop
lds
cld
jp
fdivrl
xchg
or
or
xchg
dec
adc
push
das
fsubrl
ja
jg
jbe
imul
xchg
push
int
testl
test
imul
cld
ret
sbb
pop
in
pop
pusha
sti
ss
daa
mov
mov
sbb
inc
pop
xor
fcmovne
xor
push
add
cmp
out
mull
mov
std
adc
outsb
notl
sti
mov
pushf
imul
push
adc
aaa
sub
lds
cmp
out
adc
std
push
pop
push
add
pop
xor
inc
imul
outsl
or
xchg
cmp
push
je
xor
cld
mov
mul
imul
and
fs
out
loop
pop
or
dec
inc
pusha
xchg
xchg
adc
stc
jae
add
in
cmp
cmp
mov
pop
xor
loop
lea
adcb
stc
jae
sub
jle
in
or
adc
dec
loop
faddl
enter
push
lds
in
lea
adc
mov
cmp
or
adc
jns
ja
rcrb
notl
mov
aam
movsb
or
inc
mov
les
insb
aam
pop
into
dec
cmp
push
jp
outsb
aas
xchg
sub
adc
mov
or
sbb
into
jmp
inc
push
xchg
sbb
lock
sbb
aas
jl
mov
sar
mov
mov
mov
mov
mov
sub
enter
or
insb
decl
lods
or
adc
lahf
out
call
mov
neg
cltd
aaa
xlat
adc
negl
mov
imul
popf
movzbl
xchg
in
pmullw
xor
adc
sbb
push
and
pop
adc
mov
negl
mov
mov
mov
mov
mov
sbb
pop
in
mov
lods
inc
mov
fisttpl
push
into
insl
adc
pop
fsubrp
mov
or
std
pop
push
mov
les
sbb
pusha
jl
mov
mov
mov
push
mov
dec
jp
dec
inc
sub
jmp
dec
jge
cmc
or
imul
pop
jbe
push
loopne
mov
add
inc
mov
rolb
adc
mov
add
inc
xor
mov
lea
data16
jo
je
sbb
inc
in
jmp
push
pop
add
bound
push
pop
push
aaa
inc
push
add
add
dec
push
addb
loopne
push
push
add
mov
cmp
aaa
ss
mov
shr
fsubrl
outsb
loope
dec
mov
insl
lds
and
push
adc
sti
push
adcb
add
shl
pop
sbb
xor
add
sub
jo
or
add
pop
loopne
xor
xchg
mov
cmp
add
pop
xchg
dec
pop
dec
pop
insl
dec
pop
push
jno
cmp
xchg
loopne
cld
push
inc
jo
outsl
inc
push
add
imull
add
rolb
and
imul
push
add
mov
loopne
add
sbb
pop
inc
inc
mov
sbbb
pop
push
and
ret
ficoml
std
add
rolb
adc
inc
xor
and
xor
fidivl
addr16
dec
dec
pop
jmp
cmp
sbb
cmpsb
and
push
sub
push
jecxz
push
mov
std
jg
jne
arpl
data16
bound
mov
fcomps
pop
loopne
nop
sti
sbb
sub
mov
cmp
jo
xchg
sub
push
inc
push
inc
push
push
and
lcall
mov
mov
push
repz
mov
lock
out
xor
add
and
push
in
fwait
scas
or
and
rcrl
test
or
enter
fsubrs
insb
sbb
add
mov
aam
inc
sbb
push
mov
jb
or
aam
xor
or
sub
mov
sub
sbb
lcall
rolb
mov
js
or
push
bound
push
orl
adc
shrl
jecxz
inc
gs
inc
add
mov
imul
insl
inc
ja
addr16
push
push
xchg
and
jge
bound
inc
dec
dec
gs
mov
shlb
xchg
add
arpl
into
or
test
decl
rorl
jb
push
jne
dec
dec
add
outsb
imul
push
mov
addr16
push
push
insl
cmp
add
add
jp
push
mov
mov
int
mov
lods
dec
inc
std
jg
ss
dec
shrb
jae
push
add
gs
bound
or
cmp
inc
jae
mov
pusha
add
inc
xor
dec
je
cmpsb
iret
test
mov
ret
pop
rorb
pushf
xor
fsubrl
test
inc
pusha
push
loope
outsl
lods
mov
add
shrl
dec
pop
outsb
push
insl
push
add
mov
bound
and
mov
add
inc
mov
inc
cmp
and
je
fiaddl
addl
adc
dec
or
mov
push
add
push
push
movl
lea
add
add
cmp
push
adc
orl
sub
push
mov
push
jg
adc
adc
jl
mov
add
pop
dec
push
push
push
sbb
mov
or
es
mov
xor
push
inc
inc
push
mov
dec
push
inc
push
dec
mov
push
push
inc
pop
stos
xor
inc
inc
dec
inc
in
imul
pop
daa
sbb
pop
push
call
cmpsb
imul
xor
bound
pop
outsl
imul
and
adc
pop
push
mov
pop
in
arpl
fildl
add
test
xchg
push
pop
add
aam
lods
push
xchg
xchg
sbb
movsl
push
mov
pop
cmpsl
push
mov
mov
shll
unpcklps
outsl
cmpsb
inc
sbbl
dec
and
mov
dec
int
cmp
int3
push
data16
inc
or
addr16
add
push
xchg
popf
ret
push
jo
push
or
ror
pusha
jge
xchg
je
xor
addr16
mov
or
aas
sbb
pop
out
call
pop
xor
addr16
shrb
add
insb
xchg
imul
call
arpl
inc
and
jmp
pop
jae
icebp
enter
add
sti
jb
popa
imul
data16
xor
jg
stos
inc
sub
je
push
jne
gs
sub
movsl
push
clc
lods
cmp
inc
pop
push
outsl
inc
orb
and
mov
push
push
aas
add
adc
or
scas
sbb
add
imul
sbb
push
jnp
fiaddl
xor
mov
ret
aad
inc
cmp
cmp
cmpsl
nop
out
push
paddq
dec
push
push
rcll
mov
add
push
add
hlt
movsl
push
stos
insl
bound
push
jecxz
xchg
test
pop
pop
push
test
sub
adc
push
stos
xor
push
mov
sbb
scas
push
cmpb
enter
sbb
testb
ret
and
push
push
sub
xor
inc
add
mov
pop
adcl
inc
mov
cmpsl
test
pusha
or
les
or
subl
xlat
mov
pop
pop
pop
sbbl
push
jno
and
imul
or
aad
push
xchg
adc
test
andb
lcall
adc
mov
xor
or
add
adcb
loopne
dec
mov
add
addr16
push
outsl
ja
cmp
jbe
arpl
dec
shrb
imul
jle
sub
sbb
out
clc
inc
arpl
insl
insb
popa
outsb
out
aaa
push
jo
mov
jecxz
sub
inc
jae
cmpsl
stos
xchg
andl
cmp
dec
pop
rorl
or
int
lcall
add
pop
push
mov
push
cmp
adc
jne
daa
push
loopne
lods
popf
fldl
in
inc
xor
add
dec
push
push
jb
cmpsb
popa
jne
push
jb
mov
jo
inc
cmp
rcrb
mov
or
int
inc
leave
mul
sbbl
lahf
push
mov
ss
or
aam
xor
fisubrl
jle
and
and
jae
inc
gs
inc
jb
cmp
fs
cmp
adc
sbb
ja
daa
pop
and
cmp
aam
lea
dec
es
cmp
aad
mov
inc
push
inc
inc
push
push
aaa
lock
jns
stc
addr16
dec
insb
inc
insb
inc
push
es
in
push
movsl
je
shrl
sbb
pop
pop
fdiv
mov
xor
push
xor
mov
in
jno
and
sub
push
ss
imul
xor
adc
inc
imul
clc
add
mov
daa
jnp
inc
add
xchg
push
mulb
fxch
test
add
scas
mov
inc
and
xchg
mov
xor
pop
sbbb
sbb
or
mov
or
push
mov
int3
xchg
push
mov
js
sbb
ret
or
xchg
push
xchg
xchg
add
add
inc
push
push
lods
das
cs
in
fiaddl
jo
dec
mov
aam
enter
dec
popa
add
in
insb
and
lret
sbb
cmp
sub
nop
mov
lods
je,pn
push
push
pop
fs
jle
xorl
mov
inc
push
add
sub
dec
fs
cld
pop
rcrb
inc
aam
inc
cwtl
inc
xchg
or
leave
out
cmp
sub
iret
mov
xor
and
xor
loopne
gs
test
in
push
or
xchg
or
xorl
ss
int
movsb
add
gs
leave
aas
pushl
cmp
jo
jecxz
cmp
or
sub
dec
or
sub
fcoms
xchg
xchg
add
add
dec
popa
movsl
and
xorb
inc
jno
loope
mov
jae
iret
mov
or
mov
and
adc
jno
popf
xor
mov
and
cmp
enter
inc
or
pop
subl
mov
shrb
dec
subl
mov
pop
out
xor
movsb
andl
or
jg
lods
addr16
or
insb
or
xor
jg
inc
xor
and
das
xchg
dec
cmp
out
sbb
int3
push
subb
push
mov
add
sub
mov
mov
popa
sub
jb
out
popl
int3
inc
add
inc
sbb
or
cwtl
pop
cmc
bound
andl
fimull
and
aam
sbbb
dec
andb
loop
mov
pop
jbe
push
rorb
add
add
cmp
cmp
jle
and
or
and
add
adc
add
mov
mov
dec
minps
add
jg
enter
mov
and
dec
leave
or
push
aas
push
dec
pop
pop
xor
mov
std
and
inc
add
test
cs
or
mov
orl
inc
xchg
add
nop
mov
jg
xor
cmc
sbb
adc
sbb
add
sub
jg
cmpl
cs
adcb
lcall
xchg
cmp
add
test
ljmp
sbb
cmp
mov
mov
test
or
insl
sub
mov
or
pusha
xchg
aaa
sub
inc
and
and
push
jb
mov
xchg
or
in
xchg
rorb
sti
fsubrs
xor
xchg
mov
and
xor
sub
and
xchg
pop
mov
ret
in
test
outsb
call
push
add
add
test
inc
adc
orl
or
outsl
push
testb
mov
push
dec
punpckldq
mov
jmp
jg
or
pop
aam
es
push
adc
mov
adc
cmp
shl
add
lret
mov
mov
jae
cli
sarl
adc
inc
je
cmp
jo
lret
cmp
dec
adc
lahf
sub
adc
orl
and
aad
stos
inc
ret
or
andb
aam
test
dec
sub
imul
or
push
in
test
jnp
jl
and
addr16
add
pushf
and
add
add
xchg
sbb
cmp
push
pop
or
jle
cmp
and
loopne
push
jge
sti
add
ss
sub
mov
test
cmpl
lcall
xor
jle
mulb
mov
xor
pop
test
pop
arpl
xchg
int3
out
mov
jo
or
or
jnp
inc
icebp
pop
mov
push
xor
imul
and
or
jnp
inc
pop
pop
and
inc
jno
add
cs
adc
mov
out
gs
or
cmp
xor
nop
sbb
dec
cmc
and
enter
inc
es
mov
fldcw
scas
out
xchg
push
jne
ds
mov
js
loop
add
pop
cmp
andb
mov
push
pusha
movsb
and
inc
out
pop
and
jo
mov
lret
stos
adc
xor
and
jp
test
jo
adcb
inc
pop
xchg
addl
repnz
adc
push
and
xchg
aad
jmp
mov
das
les
int
cmpl
or
xchg
mov
movsb
andb
leave
mov
and
std
adc
imul
inc
ret
pcmpgtw
pop
mov
loop
int3
or
jmp
inc
ficoms
mov
and
int3
push
and
movsb
leave
push
inc
add
dec
repnz
push
ss
sarb
rorb
shlb
xor
dec
rclb
imul
jo
or
lea
jo
nop
cmp
dec
imul
sub
lods
test
inc
out
popf
ss
sub
inc
aad
adcb
les
ss
pop
sbbb
push
call
nop
filds
dec
add
dec
nop
push
outsb
xchg
and
inc
fsubs
inc
adc
push
xor
cmp
les
cmp
xchg
ja
push
cmp
push
pusha
sub
adc
ds
mov
inc
inc
mov
stc
jmp
test
inc
lea
jmp
jmp
add
and
shll
add
inc
or
sub
or
mov
pop
test
push
mov
dec
daa
or
and
sub
xchg
sbb
adcl
and
test
imul
les
mov
mov
xchg
adc
jge
jmp
dec
push
push
xchg
cmc
inc
push
or
movb
sub
inc
xor
rclb
movsl
adc
inc
mov
pop
dec
cs
shl
adc
scas
arpl
ffreep
popf
movsb
cmp
mov
stos
mov
leave
jbe
aaa
cmpsb
add
mov
sbb
fs
add
test
push
add
mov
out
popa
inc
mov
adc
pop
idivb
add
mov
cli
sub
mov
test
dec
iret
add
in
mov
pushf
and
dec
push
cwtl
add
pop
mov
nop
and
and
and
adc
sarl
fs
or
cmc
sub
test
dec
ds
gs
cmc
clc
push
inc
jno
xor
test
xchg
add
loopne
pop
xor
jbe
dec
dec
xor
lret
xchg
call
inc
sbb
mov
test
stc
sub
mov
adc
xchg
lods
loop
dec
pop
cmp
add
gs
mov
sbb
repnz
gs
shrb
add
add
xchg
pop
scas
pop
and
or
add
shrb
mov
sbb
sahf
sahf
pusha
push
jecxz
sbb
sbb
pop
sbb
mov
lods
dec
les
subl
push
cmp
push
jno
xor
movsl
xor
cmpl
mov
add
push
shrl
push
xchg
push
test
xchg
les
in
and
sarb
push
sbb
lret
or
stos
pop
loope
xchg
cwtl
add
xor
enter
pop
cmp
or
ss
push
dec
mov
imul
mov
xchg
pushf
dec
sahf
pop
lcall
sbb
mov
rolb
jbe
push
popa
inc
js
push
sbb
sbbl
repnz
and
dec
xor
add
cs
dec
jle
push
jne
cmpb
xchg
aam
add
add
dec
mov
movsl
movsb
cltd
push
pop
inc
xchg
ret
sbb
add
mov
sbb
push
ss
mov
int3
cmp
outsl
or
or
orb
xchg
scas
add
data16
add
and
hlt
or
loope
sub
js
jns
data16
pop
mov
icebp
mov
out
sub
sub
and
pop
das
xchg
sub
inc
dec
test
xchg
xchg
and
icebp
addl
fidivrs
inc
or
mov
clc
popa
add
and
jl
jnp
sbb
adc
pop
or
stos
pop
popf
rolb
stos
roll
dec
mov
fneni(8087
mov
pop
or
pop
pushf
lods
add
nop
adc
push
adcl
pushf
cmp
dec
cld
push
cmp
dec
loop
sub
fs
mov
inc
pushf
sbb
sbb
xchg
sbb
insb
fs
or
or
add
jno
mov
fmuls
jno
add
test
pop
and
dec
clc
in
stos
add
andl
sub
and
int3
xchg
add
lock
xor
adc
jb
xchg
inc
repnz
xchg
or
cmpsb
pop
mov
jnp
and
push
sub
jnp
das
mov
xchg
or
inc
xchg
mov
xor
inc
testb
loop
fisubrs
insl
repnz
xchg
mov
mov
leave
adc
xchg
jnp
jbe
mov
aaa
push
adc
cmp
fadds
lret
adc
add
push
leave
or
or
pop
add
or
inc
jno
jp
leave
add
cltd
icebp
inc
daa
adc
xchg
push
pop
mov
jecxz
mov
arpl
and
or
hlt
push
push
sbb
push
flds
xorb
and
repnz
insb
iret
push
jb
sbb
popa
xor
stos
pop
jno
stc
test
mov
fcoms
inc
push
jg
or
lcall
pop
inc
in
push
push
push
out
clc
inc
dec
xchg
xor
jnp
jne
rcl
addl
and
inc
stos
cmc
jmp
cmp
push
pop
imul
push
loopne
lods
and
push
cmp
loop
sbb
mov
push
cmpsb
and
adc
nop
aad
add
dec
js
add
sbb
push
xchg
or
add
pop
mov
inc
mov
mov
add
aam
les
das
jecxz
sub
inc
xor
inc
and
push
add
add
aad
push
je
sub
sub
inc
push
lcall
push
pop
in
inc
or
add
test
mov
sbb
popa
sub
pop
gs
or
enter
sub
and
pushf
cmp
pop
repnz
int3
sbb
lods
std
cld
mov
xchg
mov
cwtl
or
imul
and
sub
rorb
fstps
es
xchg
dec
and
xchg
test
adc
mov
cli
movsb
nop
aas
and
int3
pop
dec
xchg
pop
scas
lcall
test
loope
jae
in
orl
or
pop
pop
cmc
insb
int3
leave
add
out
fcompl
adc
add
mov
movb
push
mov
mov
sub
jo
loop
mov
stc
inc
sub
addr16
sub
add
add
push
jl
jo
jmp
dec
and
rcrb
sbb
jo
add
xchg
mov
adc
rcrl
addr16
adc
xchg
xchg
and
push
insb
jbe
or
clc
mov
inc
adc
push
and
das
adc
lahf
push
push
adc
das
and
xor
add
dec
and
mov
shrb
jmp
lret
arpl
add
mov
ss
jns
lret
imul
cld
xchg
push
and
sbb
mov
mov
pusha
cwtl
test
out
imul
add
pop
scas
inc
mov
mov
shr
xchg
xor
lret
test
je
cmp
or
mov
push
scas
fnsave
cmp
out
pop
push
stos
mov
xchg
xor
sbb
xorb
test
loop
and
inc
jne
lea
xor
loop
js
push
dec
adcl
and
mov
push
cld
push
inc
xor
dec
test
fstl
dec
adc
inc
iret
xchg
sahf
add
xchg
rcll
xchg
enter
in
and
loopne
xor
loopne
cmpsl
dec
and
or
call
push
rorb
cltd
rorb
lret
lret
gs
repz
mov
sub
enter
mov
sbb
stos
movsb
push
cmp
enter
icebp
mov
sbb
and
stc
and
scas
nop
cwtl
mov
cltd
push
add
movsb
push
mov
mov
push
stc
and
or
push
adc
mov
sub
add
aas
cmp
push
dec
sub
loopne
insb
add
pusha
pushf
in
add
lock
jbe
aad
testb
mov
pusha
and
adc
xchg
mov
dec
push
ret
xchg
xchg
les
pop
and
lods
lods
mov
icebp
rclb
mov
mov
and
pop
jmp
and
push
pusha
pusha
inc
addl
fs
jne
sarl
shrb
dec
and
addb
loop
bound
lods
fists
push
leave
add
arpl
rcr
sub
inc
inc
cmp
pop
mov
dec
cltd
outsb
add
lods
add
std
mov
xorb
clc
aad
sbb
lock
push
and
cmc
mov
mov
mov
push
nop
ret
and
mov
xor
adcl
aaa
push
into
dec
jle
adc
lahf
int3
stc
add
nop
add
jo
mov
jp
jb
jl
int3
add
cmp
mov
gs
das
cmp
inc
ret
dec
and
cmpsl
cmpsb
es
jns
and
inc
cwtl
adcl
xchg
rolb
stos
push
lret
movsl
sub
gs
lods
imul
xlat
movb
cmp
repz
inc
add
cmp
pop
dec
mov
dec
adc
imul
pop
and
xor
out
ja
lcall
call
xlat
mov
movsl
add
scas
subb
mov
in
or
cmp
or
ret
int3
shlb
xor
inc
cmp
hlt
and
pusha
aad
push
das
pusha
add
cmp
and
cmp
adc
pop
mov
loope
jb
sub
stos
test
add
xor
dec
popa
cmp
add
sub
stos
mov
dec
and
enter
insb
adc
adc
nop
fmull
and
inc
mov
jo
mov
add
xchg
adc
xchg
je
rcrl
jo
xchg
inc
enter
fisubrl
rorb
sbb
jno
push
push
jge
adc
insl
dec
sub
add
pop
mov
adc
mov
stc
cmp
mov
gs
mov
ljmp
rolb
add
sub
imul
mov
jl
dec
ret
stc
pop
or
subl
or
loop
mov
jne
es
mov
pop
orb
adc
test
dec
shlb
sbb
push
gs
jae
adc
data16
cmp
mov
inc
pop
inc
jo
movsb
push
dec
or
adc
cli
es
and
aas
rcrb
fwait
mov
rcll
mov
jge
xor
xor
stos
cmc
adc
xor
dec
inc
xor
addb
das
adc
jl
je
jne
mov
addl
mov
sbb
push
dec
cmpsl
cmpsl
inc
inc
test
pusha
ret
jns
push
arpl
inc
pusha
inc
push
push
cmp
inc
mov
cmp
loope
dec
aaa
dec
adc
pop
fsub
add
clc
inc
push
ficoms
sbb
pop
inc
or
and
sub
xchg
pop
lcall
mov
add
shrb
popf
loop
push
shll
ja
lock
add
adc
add
xor
jno
cmpl
mov
add
inc
das
les
mov
sub
mov
adc
pop
outsb
adc
orb
loopne
movsb
ret
inc
jp
leave
pop
push
aaa
xlat
sub
lock
imul
mov
jl
and
or
inc
cmp
mov
lds
pop
fdiv
fldt
ss
inc
data16
adc
rcrb
xchg
call
movl
pusha
lcall
addb
js
test
mov
adc
and
and
add
cmp
adc
aam
inc
and
xlat
mov
sub
add
xchg
outsl
cwtl
adc
nop
and
or
dec
add
xchg
sti
mov
mov
xchg
adc
test
in
imul
pushf
sbb
inc
lods
roll
xorl
bound
dec
fbstp
mov
icebp
and
imull
sub
jne
pop
insb
loopne
cld
mov
es
shll
js
adc
pusha
add
inc
add
mov
and
vaddps
mov
fsubs
sbb
xor
add
push
and
test
push
flds
pop
sub
pop
mov
jmp
adc
orl
xchg
dec
adc
rclb
inc
dec
add
popa
aaa
mov
and
dec
stc
adc
mov
xorl
mov
lcall
lods
idivb
ficoms
pushf
and
dec
ss
js
adc
push
outsb
lods
rcll
cmpsl
mov
mov
xorb
xor
adc
jl
pushf
test
dec
subl
cmp
sbb
jle
adc
jl
mov
imul
xchg
pop
mov
sbb
das
mov
sbb
mov
add
lcall
adc
decb
subl
sbb
andb
add
add
dec
cli
push
cld
xor
shrb
mov
jo
mov
xchg
add
mov
and
pushf
add
xor
push
push
movsb
xlat
dec
mov
and
or
aad
and
and
and
sub
enter
rolb
mov
nop
adc
push
call
sbb
lds
add
xorl
sub
rolb
cmp
or
add
mov
and
cmp
decb
adc
add
xchg
push
cltd
inc
dec
or
pop
sbb
sub
or
or
inc
leave
out
icebp
scas
xchg
and
rclb
mov
stos
out
and
xchg
cmc
inc
ret
cmc
add
int3
scas
pop
adc
push
jae
mov
rcll
sti
jne
pop
push
pusha
add
adc
lcall
and
imull
or
and
jnp
and
xchg
add
mov
inc
popf
adc
rolb
push
sarl
xor
scas
inc
shlb
mov
das
mov
mov
mov
cmpb
orb
mov
dec
or
sbb
or
sub
adc
nop
jl
cmc
mov
push
jge
or
addb
and
ficoms
pop
addl
loopne
aad
and
lea
adc
ljmp
push
pop
enter
mov
inc
xchg
inc
xchg
pusha
adc
dec
cmc
in
mov
jle
mov
inc
sub
addr16
adc
cmp
in
fwait
sbb
add
and
dec
and
pop
add
and
or
es
lcall
mov
pop
aad
push
test
cwtl
push
push
push
dec
loope
xchg
clc
sub
adc
mov
repnz
add
xchg
adc
add
cmpsl
ds
cmp
dec
leave
ror
int3
mov
and
mov
cwtl
mov
add
add
ds
lea
shrb
imul
xor
jo
out
pop
call
xor
mov
xchg
inc
xor
or
nop
imul
add
pop
pop
xor
and
test
dec
rolb
popa
adc
pop
aad
dec
mov
sub
or
mov
inc
repz
shl
mov
sub
xchg
ss
mov
sub
repnz
pop
or
xchg
and
sub
lea
xchg
stc
dec
sbb
out
jp
aaa
add
leave
rcll
add
mov
leave
sub
push
push
fnstenv
fstpt
inc
push
repz
and
sub
push
add
xchg
jge
es
in
xor
cli
ret
enter
mov
inc
pusha
or
lahf
test
loop
push
push
push
xchg
xor
je
divb
adc
repnz
push
add
adcb
adc
pusha
lock
ret
flds
cmp
dec
popa
test
je
and
and
push
maxps
or
cmp
lods
gs
js
adc
cmovb
sbb
mov
and
stc
scas
shr
dec
jnp
push
pop
test
sub
xchg
call
insb
push
fwait
cltd
lds
or
mov
js
jns
flds
ret
lods
push
test
rolb
sub
mov
jns
ljmp
jg
jmp
push
push
or
ret
filds
clc
push
and
arpl
popf
call
adc
mov
mov
ret
pop
cmp
scas
arpl
mov
es
gs
adc
push
adc
stos
arpl
xchg
lds
clc
daa
sub
and
pushf
es
loopne
mov
dec
and
push
or
addb
stos
push
andl
mov
out
mov
mov
nop
push
shrb
or
push
sub
or
pop
push
jp
jnp
test
sbbb
jecxz
bound
jg
xor
imul
sahf
leave
dec
mov
pop
adc
sbb
stc
iret
mov
or
sahf
fiadds
adc
jp
pop
aaa
xchg
bound
pop
pop
adc
sbb
add
adc
mov
test
jno
mov
nop
bound
sbb
orb
add
test
dec
and
idivb
mov
add
or
sarb
inc
sahf
mov
mov
add
inc
jge
out
sub
and
nop
add
add
or
inc
pop
mov
jo
mulb
mov
inc
fldt
ret
fs
lahf
andl
adc
sub
mov
mov
xor
xchg
cmp
jmp
sbbl
jbe
add
out
stos
push
sub
mov
scas
sbb
inc
pusha
and
adc
cmc
pop
stos
xorl
fisttpl
fs
sbbb
shlb
ljmp
inc
dec
or
dec
iret
sub
adc
aas
sbbl
adc
add
or
push
and
inc
cmp
sbb
xor
inc
sbb
pop
enter
das
push
sub
fmul
mov
or
push
std
sub
push
push
rcl
and
adc
pop
in
or
mov
mov
inc
add
push
push
pop
and
jle
dec
and
jp
inc
pusha
imul
pop
xor
enter
daa
cmp
pop
and
icebp
sbb
mov
inc
lahf
pop
imul
gs
shrl
and
cmp
pop
rclb
stos
imul
loopne
lret
fs
mov
mov
sbb
outsb
xor
sbb
add
jne
cmp
and
test
js
dec
cmp
sbbl
adc
or
lsl
inc
bound
pop
jbe
xor
dec
and
nop
dec
pusha
jl
and
rcrl
push
dec
adc
and
pop
out
ret
push
dec
jo
rcrl
gs
dec
jp
dec
adc
sbb
or
jo
push
getsec
fwait
xchg
call
mov
stos
mov
addr16
scas
scas
icebp
cmp
cmc
jo
addr16
pusha
sub
in
add
incb
mov
inc
mov
jbe
fwait
sub
inc
xor
sbb
mov
frstor
stc
rol
test
pop
adc
and
loopne
pcmpgtw
cmpsl
in
add
or
mov
sub
test
pop
push
and
adc
inc
test
adc
leave
dec
lock
inc
out
or
fnstsw
xor
xchg
adc
scas
in
stos
das
fidivrs
lcall
ret
mov
lods
dec
outsb
mov
push
and
mov
cmp
adc
cli
cmp
lea
and
dec
mov
inc
dec
push
xor
push
jb
xlat
adc
pusha
lret
fisttpll
fldl
mov
and
mov
andb
sbb
push
flds
ret
pop
insb
mov
cmpsb
inc
add
cmpl
add
sub
push
mov
dec
cltd
loope
jecxz
or
dec
sub
sbb
mov
enter
and
pushf
nop
sbb
daa
jne
adc
jo
push
or
inc
jno
mov
push
cwtl
and
adc
dec
sub
loopne
andb
sub
and
inc
adc
cli
shrl
dec
arpl
jns
xchg
cmpl
mov
pop
je
fidivrs
cmp
sub
sub
sbbl
adc
push
aad
sbb
pop
hlt
sub
mov
add
stc
and
lahf
jb
repnz
movsb
push
mov
cmp
sub
sbb
adc
mov
dec
icebp
inc
xorb
push
hlt
inc
arpl
ljmp
mov
xchg
nop
rolb
sub
and
shll
loopne
jae
adc
inc
and
and
arpl
add
les
and
adc
and
test
or
mov
push
add
nop
mov
inc
mov
std
ljmp
addl
sub
sbb
pop
adcl
cmp
and
or
mov
dec
jbe
lahf
icebp
dec
inc
sub
inc
jne
push
rclb
std
xchg
int3
xchg
loope
mov
or
mov
lods
xlat
mov
or
movsb
mov
inc
add
gs
and
pop
dec
addl
jns
push
cwtl
test
stc
out
and
pusha
adcb
mov
in
add
cmp
push
jl
dec
mov
movsb
ds
movups
or
mov
mov
pop
pop
shlb
sub
loopne
gs
mov
subl
xor
flds
add
call
push
xchg
adc
les
add
fcoms
cmp
and
xchg
xor
pop
sti
enter
pop
jo
out
or
arpl
or
cmp
push
pop
inc
movsb
popf
xchg
inc
pop
and
das
or
movsb
and
call
arpl
rorl
adc
stos
and
mov
lods
push
aaa
jns
mov
add
and
inc
dec
and
in
add
insb
jno
and
pop
inc
pop
pop
pusha
jne
cs
add
insb
adc
mov
cmpsb
inc
outsl
push
dec
sbbl
pop
jmp
mov
adc
addb
mov
xor
enter
jg
out
push
inc
rorl
rorl
imul
mov
sub
push
jae
cwtl
lret
or
mov
xchg
lahf
cmovbe
xchg
adc
enter
inc
push
flds
inc
push
xor
xchg
dec
or
call
or
xchg
add
inc
insl
dec
int
ss
xor
test
int
pop
xor
xor
popa
mov
lock
mov
add
add
movsb
or
or
leave
sbb
ror
cmp
jnp
test
pop
or
push
jp
imul
lret
bound
lds
add
xchg
adc
pusha
dec
movsb
test
adc
push
iret
cld
cmp
shlb
adc
sub
es
sbbb
mov
push
out
loopne
xor
push
pop
sbb
dec
and
aam
test
lods
push
jne
or
push
jne
stc
bound
add
xor
mov
aam
xlat
add
int3
cmp
add
dec
aad
in
push
scas
push
and
push
xchg
stos
mov
mov
sbbl
jge
jo
inc
xchg
add
mov
inc
fcoms
add
mov
jb
loope
cmpsl
repnz
or
add
out
ljmp
andl
add
xchg
popa
inc
xor
mov
xchg
add
and
je
push
mov
dec
hlt
incb
push
mov
dec
jb
lods
call
stos
loopne
inc
push
jl
or
add
loop
xor
sub
push
pop
add
loope
lods
lods
jp
mov
imul
or
sbb
dec
imul
add
xor
nop
xor
and
sbb
add
movsb
push
add
sbb
push
push
mov
stos
push
add
pushf
test
pop
gs
popa
pusha
sub
rolb
pop
adc
int3
aas
rclb
pop
mov
cli
and
mov
jo
adc
pop
mov
sub
xor
mov
mov
add
scas
pop
xchg
inc
loope,pt
sub
mov
push
inc
stc
add
stos
ljmp
push
andb
or
xor
movsl
dec
sbb
inc
or
push
jl
test
pop
xchg
adcl
mov
adc
pushf
mov
pop
shl
roll
and
mov
rolb
xchg
and
inc
mov
push
jle
data16
cmp
fnstsw
add
and
popl
ret
jl
xor
mov
cmpl
dec
subl
adc
xchg
fs
mov
sbb
ja
adc
das
rclb
inc
nop
cmc
adc
adc
mov
lahf
or
jae
add
and
je
sar
gs
pop
out
inc
or
sbb
adc
inc
enter
or
or
or
mov
jb
mov
rcrb
rolb
int3
rcll
sub
stos
sub
pop
jb
jne
xchg
test
sbb
xchg
rclb
and
adc
push
adc
les
cwtl
mov
fistl
and
adc
lods
sbb
addl
pop
add
xor
mov
lahf
lock
xchg
xchg
lret
fst
or
cld
and
and
sbb
mov
sub
ljmp
and
dec
jo
xchg
fcomp
jno
adc
das
int
cmp
xor
add
nop
push
stos
push
lcall
shlb
fs
cmpsb
inc
in
fldl
adc
mov
mov
adcb
lahf
aam
pop
push
dec
addl
xor
cmc
inc
add
sub
or
pop
pusha
ljmp
dec
pop
stos
push
or
shll
mov
inc
push
sub
sahf
imul
adc
pop
or
pusha
sub
clc
test
lcall
mov
or
xor
push
je
inc
outsb
rorb
enter
popl
cwtl
sarb
adc
add
test
loope
rolb
cmp
subl
sub
nop
xlat
lock
pop
jns
push
inc
cmp
scas
inc
push
and
adc
xchg
mov
aam
and
test
cmp
mov
test
pop
and
test
mov
add
or
sahf
sub
ljmp
cmp
loope
adc
xor
xchg
xchg
mov
mov
and
inc
mov
add
addb
arpl
nop
dec
fildl
rcr
rcll
popl
mov
aad
pop
lea
incb
push
jo
push
or
lods
xchg
pop
xor
dec
mov
sub
andb
mov
and
sub
arpl
sub
lret
add
xchg
sub
inc
pop
mull
or
inc
loop
out
dec
push
add
mov
loopne
add
repnz
push
nop
add
out
adc
pusha
mov
into
ds
xor
int3
pusha
test
inc
mov
inc
int3
or
inc
faddp
push
inc
xor
scas
cld
push
stos
in
push
jmp
clc
and
adcb
test
pop
addl
dec
xlat
push
dec
mov
mov
push
arpl
xor
inc
cwtl
or
dec
add
mov
cmp
cwtl
push
rorl
add
inc
adc
mov
add
sub
int3
addr16
inc
dec
insb
add
add
call
pop
sbb
adc
cmpl
jbe
adc
pop
jno
ss
mov
les
sub
int3
arpl
xor
add
xchg
pusha
sub
lds
sub
or
stos
scas
dec
das
les
test
xor
mov
bound
pop
add
mov
adc
adc
adc
cmp
xorb
push
add
nop
adc
or
loopne
xchg
jne
and
icebp
loop
dec
ljmp
arpl
and
or
mov
fisubl
add
sbb
es
cmp
sahf
pop
aad
pop
push
pop
sub
and
and
inc
outsl
dec
adc
push
mov
xor
mov
dec
mov
and
and
and
adc
or
and
add
cmp
mov
cmp
add
push
bound
push
and
dec
add
jbe
out
rorb
add
loopne
add
mov
in
mov
sub
push
int3
lea
add
inc
dec
jns
test
or
pop
pop
sbb
add
shll
cmp
jae
montmul
cmpsb
inc
push
ret
add
fs
push
xchg
js
or
nop
shll
jo
ret
cwtl
adc
inc
sbb
push
fdivrl
das
sub
iret
arpl
pusha
ret
gs
pushf
or
dec
push
fstps
aas
mov
aas
call
ljmp
add
outsb
es
mov
insl
addb
cwtl
add
or
rcrl
rclb
add
insb
ss
test
hlt
push
adc
lds
or
daa
shll
push
lock
shrb
mov
iret
mov
adc
xor
add
les
xchg
and
and
push
add
sbb
pop
and
push
cmp
mov
mov
push
mov
hlt
add
pop
dec
dec
std
xchg
pop
pusha
or
cmp
jo
inc
adc
in
add
sub
jg
cmp
cmc
adc
popf
mov
out
fistl
sub
ljmp
aas
mov
ret
add
in
mov
push
pop
pop
popf
imul
lods
add
mov
sbb
rolb
mov
or
mov
pop
xchg
add
orb
adcl
stos
or
mov
pop
mov
out
addl
mov
fs
out
inc
jle
insb
rolb
cmp
psubusb
add
mov
insb
sub
andl
inc
dec
add
mov
stos
jl
or
dec
cld
jl
bswap
add
mov
inc
or
leave
lret
xchg
push
repz
adc
adc
pop
sbb
ljmp
gs
in
inc
mov
sti
pop
jge
jo
adc
dec
into
es
ret
push
and
clc
sub
cmpb
iret
mov
sub
dec
mov
pop
test
cmp
adc
or
je
testl
pop
shll
mov
push
add
push
sbb
push
xchg
rclb
loop
sbb
and
scas
shlb
adc
pop
dec
imul
xchg
cmp
add
push
icebp
pop
mov
das
mov
mov
sub
and
and
addl
and
bound
or
repz
mov
aas
push
daa
sahf
or
cmpsl
filds
fisubrs
jmp
mov
mov
push
repnz
cltd
pop
mov
enter
es
je
lds
lds
adc
nop
adc
dec
in
add
xor
mov
sub
stos
loopne
xor
clc
outsb
sti
hlt
adc
adc
adc
roll
cmp
rcrb
mov
xchg
mov
mov
cs
add
adc
and
ret
adc
rolb
mov
scas
movsb
xlat
mov
js
mov
ficomps
dec
mov
and
and
stos
in
xor
and
adc
loopne
enter
or
rcl
rclb
adc
nop
aad
add
dec
nop
inc
inc
sbb
addb
popa
add
loop
mov
dec
push
mov
xchg
test
sti
push
cwtl
dec
add
stos
arpl
or
loope
mov
jecxz
and
push
stos
adcl
inc
pushf
dec
inc
mov
pop
push
adc
add
add
mov
sbb
or
loopne
add
sbb
and
or
ret
inc
adc
cmp
inc
adc
jbe
cltd
js
lds
xchg
add
adc
adc
test
xor
push
adc
pop
nop
js
push
push
or
int
and
mov
enter
dec
in
lahf
negl
pop
xorb
xor
dec
cmp
ret
cmp
push
sbb
fildl
mov
mov
out
movsb
bound
sub
test
push
jecxz
ret
dec
fbstp
cmp
stos
in
repnz
nop
add
mov
adc
mov
sub
mov
or
or
push
sub
test
xchg
mov
adcb
adc
enter
stc
and
sub
jo
pop
add
xor
jp
daa
jno
repnz
xchg
into
leave
push
pusha
adc
or
adc
pop
shrb
jle
xchg
stc
push
inc
andb
xor
pop
mov
clc
adc
dec
pop
jmp
or
movsl
mov
dec
mov
icebp
sbbb
cmpb
xor
nop
xchg
add
xor
sub
stc
popf
xor
pop
ret
dec
dec
iret
dec
push
out
mov
or
rorb
push
dec
push
or
rcll
inc
pop
and
push
aad
sbb
xchg
stos
or
mov
push
and
sub
inc
jge
add
xchg
inc
sbb
mov
pop
addl
inc
dec
adc
pusha
adc
inc
inc
js
or
cmp
mov
loop
inc
push
push
mov
push
add
and
fnstsw
xchg
push
je
clc
xor
lcall
push
cmc
loopne
adc
pop
add
or
add
fldenv
jl
call
sub
jp
dec
add
inc
je,pn
cmc
xchg
movb
lods
lret
push
movsb
mov
mov
leave
or
fmul
add
add
pop
paddsw
dec
adc
mov
jns
mov
add
or
gs
mov
adc
add
or
adc
sbb
enter
cmc
xor
dec
test
nop
and
int
dec
test
or
pop
mov
sbb
jnp
or
shrl
sub
or
jecxz
add
es
mov
test
xor
cmpsl
push
test
test
ss
test
test
stos
sub
nop
scas
dec
loop
test
jb
push
das
xchg
or
pop
test
push
out
dec
jne
lods
lea
sbb
sbb
add
sub
gs
and
push
mov
lods
stos
sbb
push
sbb
sub
inc
es
jbe
mov
ds
xlat
clc
sub
add
add
or
call
push
ss
int
add
jne
push
push
push
and
xor
loope
fcoms
jne
cmp
hlt
rolb
adc
push
sub
push
and
adc
and
pop
shlb
add
in
cmp
mov
xchg
test
testb
daa
sub
pushf
adc
and
mov
jmp
adc
pop
and
int
rclb
or
or
adc
enter
sub
xor
or
or
das
and
mov
pop
fs
leave
arpl
dec
push
pop
adc
mov
dec
add
and
push
add
add
lock
ljmp
and
mov
sbb
add
dec
push
jne
inc
dec
clc
push
adc
subl
sub
push
fcmovnu
xchg
or
and
pop
jo
orb
or
or
icebp
loopne
addb
add
push
movsb
add
jo
add
add
aaa
mov
cmp
sbb
and
pop
fldt
xor
and
add
or
or
add
push
add
xchg
sub
ja
pusha
inc
push
add
mov
outsl
lea
xchg
push
and
and
add
jo
pushl
adc
push
and
dec
dec
push
push
dec
inc
inc
pop
dec
push
jge
mov
push
inc
push
add
loopne
xchg
mov
mov
add
imul
xor
loop
aaa
add
mov
fldt
jns
aaa
push
je
shlb
inc
fdivl
clc
pusha
je
add
xlat
popa
arpl
pop
add
add
out
inc
sbb
jae
outsl
pop
inc
push
push
push
sbbb
add
pop
shl
iret
cmp
adc
dec
sbb
and
adc
add
fsubs
fstp
not
ret
pusha
add
add
jo
mov
add
jp
and
insl
imul
or
mov
cltd
movsb
dec
outsb
rorb
cmp
mov
add
gs
push
dec
dec
push
imul
fistl
mov
cmp
push
or
sbb
in
outsb
popa
and
add
add
xor
jg
xor
mov
jo
les
add
jo
add
outsb
fcmovnbe
xchg
lcall
adc
and
scas
adc
cmp
jbe
push
push
xor
xor
or
adc
and
jnp
outsb
mov
in
data16
add
or
mov
mov
pushl
arpl
jb
ja
push
and
mov
cmp
sub
imul
mov
push
mov
out
imul
add
aam
in
mov
nop
cmp
add
jno
jns
mov
loopne
pop
std
add
jo
jae
mov
popf
and
test
out
js
add
xor
dec
outsw
popa
push
popa
push
test
jmp
data16
bound
jae
addr16
bound
gs
and
mov
data16
mov
gs
imul
dec
outsb
je
jb
outsl
arpl
fs
in
fucomi
js
push
and
gs
imul
pop
xchg
fcomip
mov
inc
gs
jo
dec
popa
inc
jnp
jnp
adc
jae
dec
xor
dec
popa
sub
inc
jb
outsl
jb
inc
jne
gs
inc
imul
xor
popa
outsl
push
jb
jmp
mulb
jae
inc
jbe
inc
xor
jb
mov
push
jns
adc
adc
jae
outsl
outsb
jnp
fcmovb
or
fs
adcb
insb
fsubrs
inc
je
bound
jae
push
jne
cs
push
push
and
jo
insl
pop
ret
arpl
insl
sbb
pop
sti
insb
cmp
push
inc
jp
cwtl
mov
pusha
popa
bound
mov
push
popa
imul
dec
bound
inc
pop
add
mov
jns
test
data16
popa
inc
jae
imul
mov
inc
or
lret
imul
mov
add
jo
xlat
insl
pop
mov
es
adc
js
pop
outsl
mov
out
mov
dec
flds
adc
int3
popf
mov
xor
jnp
xor
sub
sbb
stos
dec
outsl
inc
into
xchg
jns
outsb
push
mov
dec
sub
insb
fbstp
pop
or
push
js
dec
and
xor
push
push
imul
jl
in
insb
pop
inc
jns
ret
inc
pop
inc
outsb
inc
das
xor
fisttpl
push
push
push
fwait
mov
sub
or
and
pop
xor
std
outsw
sbb
sbb
addr16
pop
mov
ds
push
dec
jne
mov
xchg
mov
mov
inc
imul
insb
cs
inc
sub
insl
cmp
push
imul
cmp
loope
push
sbb
imul
pop
dec
outsl
sbb
dec
arpl
sbb
rcll
add
outsb
push
jne
jns
faddl
jae
sub
popa
and
push
sub
mov
cld
aaa
rcrl
and
hlt
inc
fs
enter
fdivs
outsl
ja
mov
jae
aaa
addr16
adc
fsubs
push
inc
jo
xor
push
sbb
iret
arpl
out
sbb
fldl
je
or
insb
or
xorl
mov
pop
push
jnp
sbb
jno
pop
shrl
ja
sbb
adc
pop
add
out
insb
push
jge
mov
push
fs
add
inc
pusha
sub
xor
mov
xchg
dec
ja
imul
jl
daa
xor
gs
insl
pop
sti
ficomps
imul
add
fs
in
insb
sbb
movsl
dec
fstl
dec
jo
inc
xor
jns
imul
pop
jb
xor
or
fnstenv
insb
adc
mov
fsubr
dec
xorl
jae,pt
push
sbb
sub
jl,pt
mov
je
xor
pushl
test
bound
xor
adc
xor
inc
fs
outsl
dec
movsb
cwtl
jae
mov
fsubrp
mov
das
pop
mov
inc
fwait
imulb
js
ret
rol
popf
push
rorb
inc
outsl
je
test
or
adc
mov
adc
outsb
outsl
add
mov
js
lcall
mov
xchg
push
jp
fwait
int
push
add
sbbb
popf
jg
adc
daa
adc
insl
dec
adc
mov
imul
test
sbb
jne
movsl
cmp
xchg
dec
xchg
imul
pop
pusha
inc
or
sbb
mov
dec
ret
adc
mov
jne
or
and
pop
rolb
inc
sub
rcrb
daa
xor
jno
loop
sub
xchg
push
or
popa
out
jae
sbb
inc
sub
sbb
dec
cmp
dec
adc
xchg
pop
xchg
inc
mov
add
mov
ret
jns
jl
cwtl
xor
outsl
add
loope
push
inc
add
test
xor
loopne
btl
or
add
mov
or
add
ret
mov
in
jmp
rorb
inc
or
add
add
pop
pop
inc
test
inc
ss
sarb
add
sub
pop
fcomip
mov
push
add
push
or
sbb
in
insl
das
or
je
or
mov
jg
test
or
out
fmuls
add
psubq
mov
add
sbb
lret
loopne
dec
enter
insb
outsl
inc
mov
add
dec
push
jle
fsts
add
adc
aas
and
add
add
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
sbb
add
add
pop
pusha
add
mov
add
pop
xor
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
in
add
add
add
add
xor
cmp
xor
xor
inc
add
add
dec
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
dec
add
jno
js
ja
add
jns
jb
js
and
push
add
data16
add
jb
add
add
sbb
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
jno
js
ja
add
jns
jb
js
and
dec
add
imul
add
imul
dec
add
add
je
add
outsl
add
add
add
dec
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
inc
add
add
imul
add
add
add
jb
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
cmp
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jne
jno
js
ja
add
jns
jb
js
add
add
js
sub
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
jno
js
ja
add
jns
jb
js
and
push
add
data16
add
jb
add
add
add
add
add
add
add
add
add
add
sldt
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
jno
js
ja
add
jns
jb
js
add
js
add
add
add
sbb
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
jno
js
ja
add
jns
jb
js
and
dec
add
imul
add
imul
dec
add
add
je
add
outsl
add
add
add
cmp
or
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
inc
add
add
dec
add
push
add
dec
add
add
sub
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
xchg
add
js
add
mov
add
lods
add
mov
add
fisubl
call
add
add
add
add
add
add
add
push
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
gs
insb
xor
cs
insb
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
je
push
je
inc
add
add
je
inc
