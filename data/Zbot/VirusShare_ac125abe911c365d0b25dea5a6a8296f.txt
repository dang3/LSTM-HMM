imul
incl
pmaxub
add
pusha
mov
mov
mov
or
or
add
idivl
jp
cs
in
inc
neg
jmp
pop
or
fdivrs
mov
ja
jp
mov
or
ja
lods
sti
push
xchg
mov
jb
mov
xlat
jmp
bound
std
mov
sbb
lahf
nop
in
fnstcw
pop
ficomps
fidivrs
fwait
and
ret
add
jb
shl
fidivrl
aaa
dec
push
push
mov
jmp
inc
roll
fistpll
dec
aas
aad
jnp
movsb
xchg
mov
repnz
std
das
cmp
xor
pop
popa
movsl
push
shr
insl
xor
jmp
fwait
iret
push
decl
fildll
push
out
mov
ja
jp
mov
sub
neg
leave
outsb
sti
fbld
mov
ret
and
imul
addr16
add
lods
outsl
data16
ficoms
clc
and
add
fimuls
rorb
scas
push
out
ja
adc
jae
dec
in
push
mov
mov
in
mov
xchg
cmc
rorl
outsl
aas
xchg
xor
add
test
push
lcall
lahf
loopne
sbb
out
into
loopne
adc
dec
xchg
cmpsl
ficoms
imul
rcl
pop
test
mov
popf
in
out
call
lahf
movb
cs
push
and
jnp
xor
in
push
fsubl
jle
insl
push
neg
adc
lret
mov
inc
cmp
lock
mov
xor
inc
test
xchg
mov
lods
test
and
aad
pop
mov
and
sbb
lret
sbb
mov
insb
lock
add
xchg
popa
insl
xchg
stos
xchg
pop
seto
out
mov
imull
enter
pop
icebp
mov
imul
fnstsw
mov
mov
mov
pop
push
arpl
test
push
push
outsb
ret
das
fsubs
dec
xor
adc
mov
imull
mov
mov
jae
xor
dec
cmpsl
push
repz
out
jecxz
ja
in
cmp
leave
pop
hlt
rolb
pop
pusha
mov
mov
jmp
xlat
incb
jmp
lods
sub
mov
cli
sbb
popa
outsb
movsb
jne
inc
fisubrs
mov
inc
mov
jmp
pop
test
dec
cmp
and
dec
cs
mov
shl
daa
cmpb
jne
or
pop
lds
jbe
orl
int3
inc
xchg
stc
sarb
lods
dec
imul
rol
inc
int3
int3
mov
mov
ror
mov
cmp
idivl
jg
push
test
sbb
fcomip
popa
mov
mov
shlb
jae
mov
call
mov
mov
inc
push
nop
jo
push
add
add
add
inc
push
popa
pop
push
nop
add
pop
pop
xchg
dec
in
outsl
jg
add
shrb
and
xchg
xchg
nop
leave
xchg
dec
leave
mov
mov
xchg
mov
xchg
dec
test
xchg
addl
leave
xchg
dec
jl
jp
dec
leave
xchg
jns
leave
xchg
dec
leave
ja
jne
leave
xchg
dec
je
jb
dec
leave
xchg
jno
leave
xchg
dec
leave
outsl
outsb
insl
dec
leave
xchg
dec
insb
imul
leave
xchg
imul
gs
leave
xchg
dec
arpl
insl
stos
xchg
mov
call
sti
pop
loopne
pusha
inc
push
jle
add
add
cmp
flds
mov
add
sub
mov
mov
fistpll
add
out
in
call
lock
sbb
xor
ds
sub
sti
decl
popf
mov
pop
mov
dec
mov
add
inc
mov
ds
ljmp
ljmp
call
cmc
add
filds
jnp
std
mov
je
add
mov
mov
loopne
fucomip
xor
inc
cmp
out
mov
add
inc
dec
jne
repz
outsl
add
or
adc
das
add
subb
mov
mov
add
ret
or
push
or
test
jne
mov
adc
lret
pop
les
push
mov
push
paddb
sub
cwtl
xchg
neg
mov
lock
add
neg
mov
cmp
fcoml
aaa
lds
mov
sti
inc
adcl
outsb
mov
xor
push
test
fdivrs
lods
jo
inc
mov
mov
incl
mov
jmp
sahf
shl
insl
mov
mov
movsb
andb
push
pcmpeqd
xchg
xchg
inc
mov
mov
add
add
insl
mov
pop
loopne
ss
mov
test
push
xorl
shll
dec
mov
lcall
pop
sub
fidivrl
aaa
lock
popa
lock
loope
adc
xchg
or
xor
sub
aas
sub
loopne
icebp
mov
aad
xchg
or
test
xlat
cmp
mov
sub
inc
cld
daa
cmp
push
dec
dec
dec
iret
cmp
mov
adc
cmp
mov
push
mov
lock
xlat
and
push
push
mov
mov
xor
mov
nop
mov
xchg
xor
fs
or
jae
lods
sbbl
dec
mov
das
daa
jno
arpl
test
clc
adc
mov
maxps
ljmp
inc
andl
scas
cmp
or
adc
clc
sbb
jg
mov
cmpb
outsb
enter
pop
lds
pop
repnz
ljmp
sbb
jge
mov
mov
xlat
js
stos
mov
ja
mov
imul
dec
je
aas
pop
add
mov
loopne
aas
fld
jnp
mov
lahf
pop
cli
loopne
ror
push
insl
clc
lahf
push
insl
push
sbb
inc
lods
fs
mov
enter
xchg
lahf
jns
mov
mov
loope
sub
mov
cmp
insb
sbb
sbb
popa
jo
outsl
sti
in
lds
sbb
mov
lock
gs
mov
lds
loopne
incb
pop
cmpsl
sahf
fldenv
push
mov
loop
adc
nop
dec
ret
pop
arpl
push
jg
in
xor
cmp
push
jbe
rol
push
nop
mov
cmp
mov
cld
js
dec
push
lret
pop
cmpsb
stos
jle
xor
jmp
sbb
pop
cwtl
ficomps
mov
and
pushl
adc
stc
cltd
out
jle
ror
ja
dec
arpl
mov
jnp
mov
mov
or
cmp
sbb
mov
jge
fisubl
in
js
and
inc
dec
adc
inc
gs
mov
xor
adc
cwtl
incb
ret
push
out
push
stc
jge
shl
punpckldq
ds
xor
adc
mov
cmp
xor
cmp
shl
mov
and
mov
xor
pop
clc
push
fidivrl
hlt
xor
and
cmp
ret
arpl
sbb
sub
xchg
das
daa
or
std
test
jne
fmul
pushl
call
and
lret
sub
push
rcl
sarl
push
or
sub
or
out
push
mov
enter
into
out
push
mov
out
add
pop
pop
jne
cli
repz
cmc
shll
cmp
jns
xor
stos
out
fidivrs
jo
and
jp
jb
in
lret
mov
push
fldt
lahf
in
sahf
stos
inc
stos
inc
adc
or
add
popa
sar
stc
repz
push
ss
sbb
sub
pushf
fs
mov
jb
mov
pop
mov
mov
dec
push
mov
or
sbb
jns
adc
addl
jno
adcl
cmc
lret
and
mov
test
jg
hlt
scas
xor
adc
hlt
sub
cli
adc
cltd
mov
mov
push
movsl
repz
pop
cmp
mov
sbb
jmp
mov
jge
outsb
xlat
lea
pop
lahf
mov
test
or
shl
jp
incl
call
ds
out
popf
je
fmull
hlt
mov
nop
or
jns
fidivrs
fcmovnbe
mov
pusha
ja
sar
xor
pop
inc
lea
jp
je
jno
fscale
pop
daa
sub
dec
xchg
ret
adc
cld
jg
or
daa
jp
jle
in
and
call
pop
insb
mov
inc
and
mov
push
mov
aaa
test
mull
mov
sub
cwtl
xorl
sub
js
cmc
push
add
add
mov
cmp
in
scas
shrl
pop
xchg
mov
dec
mov
orb
adc
pushf
push
pop
mov
sbb
sbb
mov
ljmp
inc
jg
mul
in
mov
sarl
and
in
ljmp
pop
xchg
js
outsl
inc
ds
icebp
popa
sarb
dec
xchg
add
xchg
mov
add
mov
daa
in
ret
test
and
pusha
push
adc
mov
je
inc
jp
clc
dec
mov
mov
fs
stc
stos
insl
testl
jge
imul
pop
or
cmp
xchg
shlb
mov
pusha
ja
mov
ja
pop
pop
jae
sti
aas
fisttps
es
or
loopne
xchg
sub
aas
outsl
mov
and
jae
and
lock
pop
push
mov
dec
fdiv
mov
lahf
jle
and
sub
push
mov
or
dec
jge
jmp
pop
out
jle
loopne
jge
pop
scas
lret
sub
ljmp
push
and
mov
cld
cmp
mov
sub
das
jle
cli
adc
nop
cmp
lock
jp
xor
jmp
stos
pop
xchg
ljmp
xchg
jg
scas
xchg
stos
ds
fstl
rcrb
loop
pop
sub
ud2
sub
adc
dec
fstl
outsb
out
mov
test
dec
test
ret
lds
das
icebp
daa
mov
into
mov
push
mov
icebp
lret
jns
sbb
jg
decl
stos
les
test
nop
inc
dec
adc
scas
fildll
sbb
scas
addr16
mov
jbe
mov
rol
mov
jp
lds
jg
ja
ret
aas
cmc
ss
mov
jmp
out
xor
hlt
pusha
ficoml
or
xorl
xor
sbb
loopne
mov
pop
lahf
mov
dec
pop
mov
mov
clc
punpcklbw
rorl
rorb
push
mov
into
sub
out
aaa
or
es
fcomip
aaa
dec
push
jns
mov
aam
popa
shll
adc
fidivrl
jg
cmc
jg
aas
addr16
push
adc
insb
insl
mov
stc
enter
pop
aad
push
xor
xor
mov
lahf
out
fs
or
shrb
mov
jg
mov
rclb
cld
mov
lret
aam
dec
imul
call
movsb
insl
jle
push
addr16
aas
inc
clc
sbb
adc
mov
add
inc
mov
inc
pop
dec
mov
das
dec
dec
mov
sarl
pop
imul
test
xchg
inc
dec
scas
stos
js
cld
das
xchg
or
fucom
ja
cmpsb
dec
mov
jmp
jns
popf
cmp
repnz
adc
xchg
push
mov
mov
jg
push
outsl
stos
pop
call
xor
sbb
dec
cmpsl
and
xchg
in
dec
out
xchg
pop
cmp
decl
cmp
in
sbb
call
push
insl
adc
cmp
lds
ja
mov
jno
stc
aam
pop
push
sub
fdivs
jb
cwtl
test
clc
sti
addr16
sahf
push
or
mov
lret
xchg
mov
cld
imul
mov
test
push
out
ljmp
icebp
and
rcrb
das
add
xor
jecxz
jmp
push
mov
dec
scas
mov
std
ljmp
out
test
sub
scas
pcmpgtd
lods
popa
in
std
rcll
mov
mov
std
mov
subb
sbbl
cld
ja
dec
adc
xchg
insl
pop
sbb
sbb
jp
loopne
imul
dec
push
xchg
jmp
push
notl
inc
and
cs
adc
psllw
loop
jne
pop
mov
jae
mov
pop
arpl
xchg
add
add
cmpsl
sbb
adc
and
insb
push
in
xlat
xor
sarl
out
lods
dec
xor
dec
dec
cmp
fcomp
call
inc
fildl
les
push
pushf
dec
cmp
jns
dec
mov
dec
push
jl
ljmp
test
jnp
mov
push
mov
cmp
mov
mov
jno
pop
repz
sub
dec
and
push
sbb
jo
aaa
loope
testb
cwtl
mov
mov
cmp
or
jge
ret
sahf
or
sub
jae
mov
or
add
adc
testb
adc
fists
inc
in
outsw
pop
mov
and
jg
lret
push
inc
cmp
clc
xchg
popl
adc
jbe
mov
pop
leave
dec
xor
jmp
add
std
dec
dec
xor
or
test
add
test
mov
sbb
fucomp
hlt
rorl
adcl
clc
pop
push
mov
mov
clc
mov
cmp
lods
test
xor
pop
mov
negl
loop
repz
lea
push
lcall
xchg
sub
add
pop
cmp
xor
xchg
cld
loop
pusha
cmpsb
or
in
add
inc
loopne
or
fistl
pop
xchg
addb
sbb
xchg
adc
icebp
jg
enter
mov
cwtl
outsb
push
mov
xchg
std
cs
or
rolb
sbb
push
sub
js
roll
or
jnp
cmpsb
rcr
sarl
adc
test
push
dec
ss
int
mov
pop
movsb
inc
lahf
outsb
lcall
mov
jno
test
sti
mov
jp
mov
mov
pop
sub
push
dec
xor
scas
cs
stos
add
ffree
aaa
dec
mov
arpl
gs
and
ljmp
cmpsb
mov
sarb
mov
jg
pushl
inc
aaa
jg
mov
cmp
outsl
scas
jbe
inc
push
mov
mov
lods
daa
lahf
insb
mov
xchg
mov
stc
out
inc
xor
js
adc
add
cmpsb
fcomip
mov
or
jecxz
sbb
cmp
inc
cmp
cmp
loop
jp
ja
ljmp
dec
cld
arpl
lahf
mov
popf
scas
or
aas
push
das
aas
push
aaa
scas
and
jnp
dec
out
mov
pusha
lea
add
sub
add
mov
mov
pop
imul
lret
add
push
inc
fprem
mov
mov
jle
outsl
xor
jmp
mov
sub
lret
test
jae
loopne
loope
mov
mov
inc
adc
jg
xorl
aad
mov
mov
mov
cmp
test
push
cli
mov
and
lock
fnstcw
or
incl
xor
mov
sub
data16
clc
cmc
aas
enter
jne
jl
jnp
jp
in
push
or
pop
pop
test
jp
aas
mov
xor
sbb
push
pushf
mov
add
and
decl
cmp
scas
movsl
adc
push
stos
adc
add
sar
sbb
adc
xor
inc
inc
inc
cwtl
mov
mov
lahf
mov
aas
icebp
clc
ret
mov
jg
mov
leave
lret
jmp
adc
dec
in
hlt
cmp
cld
add
sbb
mov
scas
fdivrs
stos
push
dec
enter
and
subl
xchg
cmc
jmp
decl
sub
out
fsts
aaa
movsb
cmp
jg
cmp
je
enter
out
cmp
mov
lcall
clc
cmp
add
xchg
iret
xor
jno
test
xchg
mov
mov
lds
movsl
or
and
dec
jg
push
add
xchg
shlb
mov
mov
arpl
je
daa
mov
push
push
dec
xchg
insl
sub
or
xchg
jge
mov
test
aaa
jge
into
pusha
or
add
mov
js
cmc
push
add
mov
imul
pop
inc
insl
pop
imul
testl
pop
lods
mov
mov
add
mov
push
mov
jae
push
mov
add
and
pop
dec
clc
fistps
jmp
mov
sbb
adc
cwtl
sub
pop
pop
lcall
jb
sarb
push
aas
fabs
xor
sbb
add
jp
pop
sbb
mov
sub
and
or
and
inc
sbb
test
test
inc
lock
or
test
mov
xor
sub
mov
popf
hlt
cld
dec
or
add
push
mov
mov
mov
sub
les
push
push
sub
dec
ret
cmp
into
das
repnz
pop
xor
sbb
xor
jg
sbb
sbb
hlt
mov
testl
lock
adc
dec
push
decl
push
push
push
mov
fbstp
enter
inc
jge
das
cmp
lds
or
push
popf
and
cmpsl
push
mov
jno
daa
xchg
mov
push
sub
loope
xchg
mulb
xor
push
push
icebp
push
add
mov
push
std
cs
pop
fwait
stos
je
jns
dec
fldt
int
add
mov
mov
sub
jge
fstpt
push
xchg
adc
mov
mov
das
mov
push
dec
insl
or
in
sti
lds
ljmp
jl
push
test
int
jp
icebp
pop
cli
jne
mov
jns
mov
jmp
pop
cltd
jmp
add
jl
add
mov
call
outsb
stos
mov
adc
inc
shr
test
loope
mov
jge
pop
sysret
jle
cmc
jae
cmp
cmp
xchg
or
dec
movsb
adc
add
ds
ljmp
xor
inc
mov
xor
or
sbb
or
or
imul
shll
js
mov
fistpl
out
js
xor
pop
and
leave
aas
sbb
ret
test
mov
ret
outsl
add
lock
push
fiadds
mov
pop
bound
in
cwtl
fcmovnu
pop
popf
ljmp
add
xor
cld
mov
idivb
jmp
lea
mov
stc
xor
mov
xchg
inc
jecxz
dec
pushf
or
aas
fldcw
scas
xlat
ss
push
sub
daa
imul
mov
jecxz
mov
pusha
or
aad
fsts
mov
add
dec
shlb
sbb
push
cmp
sbb
lahf
pop
aam
inc
repnz
jmp
jl
subb
fdivr
add
jge
fsubp
outsl
ret
jnp
push
pop
es
ja
ljmp
pushl
xchg
pop
sub
jb
push
aas
dec
cmp
inc
cli
ret
scas
cld
or
dec
cmp
lods
cmpl
or
cmp
mov
fs
sub
jmp
in
imul
lret
test
mov
add
das
mov
repnz
jne
mov
mov
call
dec
sub
mov
test
fildl
adc
mov
mov
in
push
loope
pop
mov
lock
stos
stc
sub
mov
xchg
cli
adc
pop
pop
shr
cmp
push
push
jmp
inc
xorb
cmc
or
pop
and
jge
incl
jecxz
pop
aad
cmpsl
add
mov
mov
fdivrs
rol
dec
or
std
xor
rcll
iret
dec
arpl
mov
gs
push
iret
lods
mov
in
ljmp
jge
or
cmp
push
popa
in
adc
iret
mov
push
jb
enter
xchg
imul
jb
pusha
test
repz
pop
inc
ret
or
ret
jecxz
fcomps
adc
fnstsw
incl
mov
ss
repnz
ret
movsb
fcmovu
movsb
mov
pop
lds
movl
cmc
in
shrl
xchg
adc
clc
cmc
cmpsl
mov
mov
cmp
push
icebp
popf
out
out
sbb
pop
ja
addl
std
pop
data16
stos
sarb
and
mov
aad
lods
pop
jg
xchg
leave
jg
mov
inc
outsb
scas
mov
adc
outsl
mov
mov
jns
push
fcmove
dec
mov
inc
xchg
dec
cli
mov
jl
mov
push
dec
out
aas
inc
clc
jg
lods
clc
icebp
insl
xor
fldenv
mov
jecxz
pop
sbb
add
xchg
xchg
push
loopne
xchg
shl
and
dec
cmp
leave
lret
in
jo
jbe
iret
push
mov
movsb
push
faddl
sarl
inc
bound
jg
cld
iret
int
mov
xor
stos
mov
push
fadds
add
hlt
push
cmp
lcall
xchg
jp
gs
mov
loopne
arpl
mov
rcrl
flds
inc
adc
mov
dec
mov
cmp
jo
loop
mov
fnstsw
lret
fcos
ret
popf
cltd
je
je
enter
sbb
add
push
dec
cmc
pop
jne
mov
cld
ja
xchg
mov
jmp
sub
xchg
cs
cli
mov
test
les
mov
orb
movsl
fadds
sbb
scas
mov
ret
shr
adc
xchg
jg
sub
bound
sbb
pop
fsubrl
insl
popa
mov
jmp
int
or
ljmp
ror
mov
cmp
xchg
faddp
outsl
aas
loopne,pt
cmp
lret
hlt
fs
xchg
pop
sub
push
push
loopne
sub
in
cwtl
out
lods
mov
jns
sub
mov
jnp
or
pop
ds
sti
push
stos
mov
ret
or
mov
pop
cmc
sarb
mov
push
aas
push
icebp
decb
test
ss
pop
lock
out
shlb
push
mov
push
call
out
push
lock
inc
cwtl
cmpl
push
sbb
imul
loop
test
pop
je
adc
jecxz
xchg
push
ljmp
fadd
bound
mov
push
pop
repz
sbb
add
mov
pop
ss
repnz
imul
mov
in
and
js
dec
repz
xchg
les
jmp
fs
cwtl
scas
or
sub
std
xor
push
jmp
jo
fcoml
mov
mov
and
mov
xchg
or
pop
add
lcall
fs
lret
sub
aad
mov
negb
xor
ja
xor
loopne
sbb
inc
cmovbe
cmpsl
imul
loopne
lock
push
and
popf
jno
dec
jo
mov
push
or
cltd
mov
or
js
push
jge
test
jmp
iret
pop
cs
add
addl
rsqrtps
fldt
xchg
js
adc
pop
int
mov
sbb
cmp
push
lock
pop
push
imul
lods
and
addb
lock
loope
cmc
mov
aam
cmp
call
outsb
mov
mov
aas
ret
imul
adc
loope
cld
daa
jne
movsb
cmp
push
into
repz
jbe
pop
or
xchg
lahf
adc
or
add
xor
shlb
pop
mov
lods
cmc
mov
or
pushl
cld
adc
icebp
push
inc
mov
jo
cmp
jmp
cmpsl
or
add
inc
gs
add
and
clc
and
cmp
ret
call
mov
lods
lret
int
push
mov
or
mov
aas
adc
pop
repnz
jne
xor
loopne
pop
sub
in
stos
loope
pop
mov
jp
add
adc
int3
cltd
mov
imul
xchg
popa
faddl
jle
outsb
mov
rcll
xor
imul
cmc
mov
jmp
pop
daa
sbb
icebp
adc
sub
pop
shll
cltd
inc
aad
push
cltd
jle
cmp
xchg
sub
and
add
pop
sub
inc
xchg
stos
jge
sbb
dec
push
push
push
sbb
xchg
cwtl
imul
mov
lret
imul
sar
or
cltd
inc
sub
mov
shr
std
jae
in
pop
sub
pop
fidivs
shlb
decl
pop
divb
enter
sbb
inc
mov
pop
xor
dec
hlt
push
ret
cmpb
cmp
dec
push
loop
cs
lea
les
add
inc
cwtl
mov
jne
mov
pop
addr16
or
mov
push
hlt
js
in
push
sahf
xlat
lds
add
jnp
inc
mov
xor
dec
movsl
jecxz
sub
lea
sbb
das
or
cmc
scas
lods
fstl
push
xchg
adc
xor
mov
out
ja
push
sbb
pop
add
jmp
bnd
mov
imul
mov
add
adc
lods
adc
test
jp
cmc
gs
jg
popa
jnp
lods
push
js
mov
fchs
mov
icebp
inc
icebp
lret
ds
add
popa
ret
int
in
andl
push
in
cmp
mov
adc
mov
clc
lahf
popf
xchg
and
out
add
into
orl
mov
adc
in
cmp
pop
sahf
mov
loope
test
mov
mov
inc
push
mov
mov
mov
xchg
push
pop
arpl
mov
nop
pop
shll
sub
jecxz
lods
pop
xchg
mov
sti
rorb
inc
push
shll
push
mov
testl
adc
shlb
ret
sbb
or
sub
lods
lahf
mov
mov
add
icebp
add
jg
call
leave
out
push
mov
nop
inc
aas
lret
sysret
pop
scas
das
idivb
ds
adc
jge
dec
inc
xor
int3
mov
fdivp
pop
jae
and
jmp
mov
sub
mov
sub
cli
inc
add
scas
hlt
inc
hlt
addb
dec
or
call
imul
add
popa
push
or
lods
jno
movsl
fs
lock
push
imul
xor
pop
repz
sar
repz
mov
ljmp
push
out
push
push
dec
rol
pusha
mov
jns
aas
stos
dec
lds
mov
mov
divb
lock
inc
jg
push
mov
das
dec
inc
mov
xchg
sub
inc
or
jo
in
xor
or
cmp
mov
pop
fnstenv
lret
sti
jg
int3
add
adc
xchg
mov
stc
inc
jge
sbb
loop
sbb
aad
adc
fs
gs
and
in
mov
out
xchg
or
clc
mov
pusha
lcall
mov
mov
jne
inc
inc
mov
rorl
ss
cs
lods
inc
xor
mov
icebp
inc
add
icebp
and
mov
mov
mov
sbb
lcall
pop
sbbl
mov
jae
sbb
adc
iret
movsb
xor
adcl
fnstenv
mov
and
outsl
xchg
sub
ja
push
adc
cltd
mov
movaps
mov
arpl
mov
mov
cmp
ljmp
push
mov
mov
and
or
push
out
xchg
pop
jg
pop
int
lret
aam
cmovno
mov
add
je
outsb
inc
mov
jns,pn
repnz
dec
xor
sbb
imul
sahf
clc
inc
mov
xor
jmp
das
pop
sahf
mov
dec
test
std
cmp
js
lahf
push
dec
and
std
jno
cmp
popa
sub
mov
mov
jnp
mov
orl
mov
fs
mov
and
or
mov
aaa
loop
jne
add
jnp
stos
out
and
cmp
repz
adc
decb
call
pushf
xchg
xlat
dec
int
mov
std
daa
filds
lods
insl
stc
mov
test
std
pop
adc
push
shrb
mov
pop
jle
dec
mov
mov
dec
jmp
leave
in
mov
mov
lret
mov
pop
pusha
mov
mov
ds
movsl
jg
pusha
mov
test
and
ret
fs
sbb
mov
cmpl
ret
inc
idivb
mov
xchg
sarb
jg
clc
subl
inc
sub
or
arpl
fabs
pop
inc
mov
nop
cmp
xchg
mov
rcl
out
arpl
aas
mov
push
xor
sub
sbb
stos
and
scas
call
mov
std
dec
push
test
fiadds
testl
mov
hlt
or
mov
mov
or
fwait
jae
mov
cmp
mov
fst
fsubrs
fldcw
or
test
in
mov
jl
jbe
jnp
add
cld
stc
cmpsl
shlb
push
dec
xor
lods
mov
fstps
dec
xchg
stos
icebp
lcall
ret
je
testl
aaa
cli
in
xchg
dec
xchg
mov
mov
cld
or
lret
imul
cmpsl
mov
push
mov
jnp
std
pop
dec
xlat
push
push
mov
add
scas
xor
pop
dec
repz
jmp
mov
sar
and
lds
sbb
mov
fidivs
andl
addr16
dec
pusha
roll
mov
clc
mov
xchg
xor
jmp
cli
fcoml
dec
lods
ja
pop
dec
push
mov
jecxz
adc
mov
and
out
in
jno
and
lahf
jno
pop
mov
add
jge
cli
jmp
mov
or
and
addr16
lods
jge
pop
jl
jp
dec
cmp
mov
mov
push
mov
cmc
add
adc
sbb
icebp
sub
sbb
and
js
insl
add
popf
and
mov
dec
dec
pop
aad
add
mov
fs
cli
sub
jbe
xor
repnz
xorb
push
and
pop
mov
pusha
ja
lahf
outsl
and
mov
sbb
cld
mov
das
pushf
mov
arpl
jbe
in
scas
fcompl
out
mov
xchg
jmp
mov
cld
bound
dec
hlt
pop
and
sbbb
inc
das
push
fs
push
cld
cli
xor
xchg
adc
pop
stc
pushl
sub
adc
outsl
pop
mov
jecxz
pop
jo
mov
dec
adc
outsl
rorb
push
mov
push
jo
xchg
sub
cli
inc
xchg
pop
lock
js
dec
xlat
jns
mov
pushl
xor
sbb
mov
testl
inc
mov
add
in
fstps
add
and
mov
lret
icebp
hlt
push
jmp
es
mov
popf
test
aam
push
sub
and
ficompl
pop
mov
mov
addb
andb
psllq
or
or
mov
rorb
je
cmpl
cmpsb
stc
jnp
hlt
lock
je
jbe
sar
inc
in
scas
test
fs
dec
sar
jno,pn
xchg
xor
mov
imul
das
xor
mov
scas
nop
aaa
cwtl
jo
adc
test
add
inc
jmp
fs
movsl
dec
arpl
sbb
mov
out
mov
stos
pop
adc
dec
dec
mov
adc
es
or
mov
push
xor
jb
scas
aas
mov
repnz
cmp
xchg
rcr
push
hlt
jns
mov
das
call
lock
vmwrite
jg
ret
add
add
not
test
xor
scas
lcall
push
outsb
sbb
lods
mov
mov
loope
mov
fisttpl
mov
ret
imul
mov
xor
inc
inc
and
decl
movsb
push
gs
gs
pop
arpl
jle
and
sub
jne
aam
inc
push
push
xchg
cmp
es
cli
push
jbe
push
or
imul
push
clc
mov
test
fnstcw
inc
sbb
fistps
mov
jno
ret
pop
jo
or
mov
jae
cmp
mov
repnz
pop
sub
js
mov
adc
or
adc
outsl
aas
test
inc
aas
test
ret
lods
jl
inc
and
in
or
incl
and
cmp
test
les
adc
lock
jl
rorb
pop
lret
int
jno
jg
pop
mov
dec
out
out
cmc
lods
push
sbb
out
leave
lret
mov
pop
cmp
in
shlb
sub
ret
lea
jnp,pt
sbb
adc
call
cmp
and
loop
sub
loope
mov
jns
test
in
out
mov
pop
mov
pop
loope
mov
aaa
rcrb
sti
push
or
cmp
dec
push
incl
psllw
les
inc
xchg
scas
aam
stos
fcoml
rolb
cltd
dec
xor
xchg
jecxz
insl
pop
or
fistpll
rcrb
add
xchg
and
cltd
js
icebp
imul
popa
shr
fildll
aad
stos
add
scas
inc
daa
fisttps
cmp
fisubs
add
cmp
mov
stc
mov
es
test
clc
imul
addl
enter
mov
or
shll
inc
lods
sahf
addb
clc
jge
or
jle
pushf
pop
imull
or
lock
popf
lock
mov
sti
xorl
sub
movups
pop
xor
test
mov
gs
cmc
pop
push
or
js
test
cli
jle
movsb
sub
mov
mov
adc
out
mov
popa
movsl
push
loop
and
out
das
out
test
xchg
mov
jg
push
and
divl
xchg
out
mov
dec
push
fsubp
inc
sarb
sbb
inc
push
stos
mov
lock
push
xorl
and
xchg
push
lods
dec
mov
sbb
pop
dec
mov
push
pop
sbbb
cld
adc
inc
cmp
push
add
mov
movsb
js
xlat
push
aad
dec
lods
ljmp
adc
push
pop
mov
sub
dec
xor
or
xlat
push
add
fnstsw
inc
leave
leave
jae
notb
pop
std
jo
daa
ret
jno
fs
enter
push
loope
imul
decb
stos
dec
movsb
push
insb
divb
or
sub
mov
mov
jae
arpl
js
jp
inc
push
or
popa
push
jle
test
add
in
add
rorb
push
jle
dec
xchg
aam
mov
xchg
imul
or
mov
nop
xchg
push
mov
mov
jecxz
inc
fiaddl
insb
cltd
add
jp
and
mov
lds
ja
jp
insl
add
cmp
dec
jb
das
ja
mov
sahf
pop
mov
pusha
adc
shl
aad
mov
mov
dec
xor
into
pop
push
cmp
decl
mov
popa
inc
add
adc
cld
mov
cmpsb
in
shr
pop
cld
lcall
lock
sub
daa
cwtl
push
push
imul
mov
add
out
jbe
icebp
mov
mov
rclb
and
mov
pop
dec
xchg
add
sbb
pop
lcall
aaa
cld
dec
jl
push
xor
sub
cmp
xor
and
mov
fisttpl
sbb
insl
addr16
or
jle
xchg
test
jg
xchg
and
pop
jb
pop
gs
lcall
cmpsb
add
gs
mov
addl
movsb
fldenv
inc
cld
mov
fcmovnb
dec
pop
inc
test
push
idiv
outsl
loope
push
or
pop
xor
mov
push
mov
decl
add
mov
mov
or
or
repz
add
or
popa
shlb
les
cmpsb
nop
pop
cwtl
and
or
jne
movl
pop
inc
mov
xor
daa
dec
mov
or
cli
into
lahf
and
loope
mov
jbe
xchg
ds
sub
push
popf
orl
mov
xor
std
fisubrs
sub
push
inc
ds
xchg
enter
jl
sbb
inc
xcrypt-ctr
cmpsl
sbb
lret
std
testl
xchg
pop
xchg
fisttpl
decb
sti
xor
divl
pop
into
repnz
add
xchg
por
movsb
sbb
cmpsb
popa
adc
call
hlt
xor
xor
loope
xor
cltd
sbb
fistpll
mov
scas
jo
sub
dec
or
xchg
nop
cld
daa
fs
daa
dec
pop
mov
mov
jmp
push
mov
or
iret
mov
sbb
cld
out
test
cmp
lcall
jl
stc
pop
or
mov
mov
push
loopne
mov
jmp
ret
imul
sub
clc
jg
push
daa
xchg
jbe
or
jle
and
pop
adc
mov
mov
pushl
insl
int
ljmp
loopne
aad
cli
out
imul
cwtl
push
fistl
xchg
mov
lret
out
call
arpl
in
mov
adcl
fdivrp
add
pop
pop
lahf
test
push
mov
and
jbe
mov
aam
test
adc
clc
lds
es
popa
ret
leave
ds
jle
adc
or
cs
ds
inc
cli
aad
fists
mov
call
addb
hlt
insl
mov
jno
xchg
sbb
jbe
js
cmc
pushf
push
push
or
push
pop
push
jae
js
icebp
out
lcall
cmc
inc
and
fstpt
je
mov
or
sbb
jg
pop
push
push
fucom
adc
xor
daa
dec
mov
and
mov
inc
cld
mov
add
dec
mov
pop
xor
lret
cli
mov
add
inc
repz
subb
xor
cmp
mov
testl
sub
cld
add
jns
movzbl
mov
mov
mov
or
hlt
lcall
dec
sub
ja
push
cld
aas
and
hlt
mov
dec
cwtl
lcall
ljmp
or
stos
fwait
test
add
jecxz
mov
mov
call
das
xor
sarl
mov
jmp
fnstcw
push
loope
cld
pop
and
iret
rcrb
rcrb
xorl
mov
mov
out
dec
jbe
xchg
or
aas
or
insl
push
lods
mov
aaa
jmp
mov
add
add
pop
xchg
mov
jge
jle
pop
or
xchg
mov
add
lret
out
cmp
mov
xor
push
push
mov
fdivl
pop
and
icebp
pop
mov
nop
repz
push
ret
adc
jg
and
mov
mov
sbb
mov
loope
mov
imul
lret
mov
cld
aas
inc
out
mov
ret
mov
scas
fidivrs
and
push
bound
inc
sbb
push
dec
es
xchg
pop
scas
ja
and
mov
xchg
pop
pop
cld
xor
mov
insb
inc
fwait
cli
dec
cmp
jmp
pop
mov
xor
into
pop
enter
jmp
data16
pushl
mov
mov
sbb
ljmp
pop
ret
aas
in
scas
cmp
cmpsl
cmpsl
ljmp
popf
push
push
or
or
lock
popa
cld
xor
leave
adc
loopne
mov
mov
adc
sti
cli
adc
dec
push
mov
test
add
cmp
fidivs
push
sub
mov
repz
test
movsb
mov
pop
jge
mov
xorl
adc
les
sub
add
dec
sub
scas
call
pop
popa
or
or
xor
daa
cmp
xor
sbb
js
int
ljmp
push
in
es
xor
cmpl
loopne
loopne
mov
push
pop
lods
mov
lret
dec
lds
cmp
jmp
lods
mov
jne
xchg
jl
push
adc
cmpl
xor
lea
xor
push
pop
outsl
push
or
push
mov
clc
loope
mov
jns
adc
jo
pop
pop
mov
faddp
pop
mov
pop
add
lds
mov
xchg
adc
adc
cltd
scas
mov
pop
clc
jnp
push
push
pushf
ds
mov
ss
mov
arpl
mov
and
pop
fistl
dec
add
outsl
jne
stc
enter
adc
lsl
cmp
jo
rorb
sti
push
std
xchg
inc
pop
das
scas
ja
jns
adc
mov
scas
mov
jmp
lods
jns
push
mull
jg
jno
xor
cmp
in
lcall
mov
arpl
add
push
imul
rcl
inc
lea
cld
pop
xchg
mov
repz
pop
sbb
rclb
mov
add
sub
outsb
fldcw
inc
inc
mov
mov
push
jmp
enter
fsubrl
mov
cli
andl
addr16
insl
cmp
lahf
dec
enter
ds
movsl
or
subl
mov
adc
lahf
outsl
xchg
mov
jbe
or
lock
jg
lock
add
jno
loope
sub
bnd
cmc
xor
cmp
inc
sub
xchg
fwait
ljmp
mov
movsl
loop
mov
insl
ss
pop
sarl
xlat
shll
mov
dec
sub
mov
adc
imul
jg
dec
pushf
push
cmpsl
dec
pop
add
out
jp
stos
pop
sbbl
jno
lods
dec
in
jbe
or
into
lods
jo
mov
loop
mov
mov
jle
or
jge
andl
mov
imull
sbb
mov
mov
es
les
ror
ret
adc
mov
rclb
mov
or
inc
push
rcrb
inc
clc
hlt
lcall
or
jecxz
ficoms
sbb
lcall
pop
and
sub
pop
in
loop
loop
and
jp
push
cld
fcomip
inc
xchg
jno
jl
xchg
fsubp
xor
jg
fs
fistl
jg
xor
sub
arpl
cli
dec
push
movsb
adc
jo
ljmp
dec
xchg
adc
jle
sbbb
push
or
adc
xchg
inc
xor
out
mov
cli
and
sub
movsl
hlt
decl
sub
std
lock
flds
or
les
jnp
or
jb
dec
mov
dec
out
jmp
sbb
push
xchg
fsubl
sbb
lds
mov
scas
dec
mov
pop
mov
jmp
rolb
loopne
jmp
mov
cmp
cs
add
loop
fwait
rcrb
jmp
aaa
mov
cld
jmp
pop
dec
push
mov
lahf
clc
cmpl
mov
push
addr16
call
fisttpll
adc
sub
xchg
xchg
leave
inc
arpl
ret
mov
movl
ret
es
jmp
jp
sub
add
lock
jmp
adc
mov
push
and
pop
hlt
mov
std
pop
jns
mov
jae
aaa
push
sbb
sbb
fwait
pop
or
notb
stos
lcall
ret
add
fists
ja
ja
fiadds
hlt
jl
sub
add
lret
dec
mov
sub
pop
mov
inc
xlat
ljmp
or
push
repz
push
pop
fs
and
adc
cmpl
mov
pop
jo
bswap
fdivr
cld
cmp
mov
mov
dec
jno
inc
hlt
or
popl
repz
arpl
aas
enter
out
scas
out
sbb
lods
jnp
or
sub
test
loope
leave
xchg
pop
mov
push
test
xchg
push
mov
pop
push
xlat
sti
daa
adc
lock
or
fstps
or
dec
and
cmp
mov
out
add
mov
fndisi(8087
jle
xchg
xchg
xor
sub
cmpsb
mov
rcll
sbb
aam
dec
sbb
jb
add
cmp
sbb
mov
aaa
adc
clc
and
lods
icebp
push
adc
cmpsl
mov
std
test
nop
popa
add
adc
jg
mov
enter
mov
cltd
cmpsb
inc
int
sbbb
test
cmc
dec
xchg
jge
xchg
dec
push
lret
js
mov
sbb
nop
mov
mov
rcl
xchg
jo
add
pop
pop
vpcmpgtd
decl
sub
insl
pop
and
mov
insl
cmp
cli
int3
and
adc
jg
pop
adc
adc
push
in
inc
jo
mov
mov
or
in
mov
jl
cltd
leave
mov
mov
scas
in
or
xchg
push
adc
in
jae
cmp
or
stc
push
mov
push
pop
sarb
test
adc
sbb
or
leave
or
mov
test
or
in
subb
pop
arpl
jg
and
arpl
xchg
jmp
pop
mov
jp
lahf
jmp
jno
cld
lahf
insb
jo
jmp
pop
inc
testb
inc
xchg
push
std
xchg
cmp
mov
mov
inc
cld
or
icebp
pop
mov
repz
in
ljmp
jnp
jb
xchg
push
popw
sbb
or
loope
and
inc
js
xor
add
mov
pop
test
mov
mov
pushf
in
insl
mov
adc
fidivrs
js
mov
xchg
adc
and
sub
mov
cmp
mov
adc
fimuls
fcmovu
hlt
sar
ret
or
inc
mov
insb
and
sbb
cmp
daa
movaps
dec
cmp
jne
mov
sti
cmp
stc
cmp
leave
mov
push
jp
cwtl
inc
in
imul
popf
mov
mov
xchg
mov
pop
ss
aam
mov
clc
adc
les
mov
push
loopne
arpl
push
and
push
fsubr
clc
add
sbb
lds
dec
jno
rclb
or
inc
loopne
sub
add
push
popf
jb
insl
xchg
imul
pop
mov
outsb
bound
push
dec
adc
incb
andl
stos
xor
xor
adcb
xor
or
sbbb
push
mov
jle
pop
out
leave
push
les
inc
je
push
ljmp
stos
pop
xor
loope
xchg
mov
aam
jmp
fsts
lods
jmp
fisubrl
lret
mov
loop
pop
jg
sub
mov
cmpl
sbb
ret
repnz
jmp
add
xor
xchg
dec
dec
cmp
out
bound
add
pop
mov
xchg
lds
pop
lretw
fistl
dec
sub
mov
test
inc
jecxz
stos
leave
shll
jg
fsub
mov
aas
mov
jne
and
mov
in
add
sub
and
int
cmpsl
mov
hlt
pop
adc
call
jnp
in
rcll
mov
pop
add
xchg
sub
inc
int
inc
fucomi
inc
xor
cmp
dec
jmp
lock
and
jbe
popa
pop
cmpsl
cmp
push
aad
decb
adc
inc
nop
repnz
add
stos
insl
jb
icebp
add
mov
ja
sbb
push
cs
inc
or
lods
cmp
int
into
cli
cli
mulb
lret
jnp
push
gs
cltd
mov
scas
or
inc
lret
jl
lock
xor
xchg
pop
bnd
jp
xchg
xor
jno
mov
ret
or
insb
loopne
mov
inc
adc
ja
test
mov
xor
or
das
hlt
dec
cmp
hlt
andl
aaa
and
ja
jg
pushf
lahf
lods
lods
pop
popf
sub
push
iret
cmp
dec
ljmp
and
sub
fldt
jae
mov
cwtl
sub
nop
add
pop
test
xchg
or
adc
adc
test
jg
cmpsl
jmp
fmuls
loope
or
loop
into
jnp
sub
lret
add
icebp
xor
lods
or
adc
mov
jl
mov
pop
jb
fs
adc
mov
pop
imul
popa
adc
pop
jecxz
in
xlat
sub
shlb
aas
ficoms
aas
test
mov
cmc
cltd
gs
lret
jo
call
jmp
or
mov
mov
push
imul
jecxz
dec
jae
std
push
aas
fchs
call
lahf
lea
jmp
sub
jle
mov
loope
jae
popa
sar
aaa
leave
and
js
pop
adc
sub
cwtl
stos
aas
add
dec
add
xor
ret
xchg
xlat
repnz
outsl
jg
mul
std
push
test
outsl
xor
std
in
insb
inc
negb
test
in
pop
mov
jno
nop
mov
and
daa
jne
nop
or
jmp
ljmp
pop
jae
fdivrp
inc
push
insb
adc
mov
mov
lods
out
or
lods
test
and
outsb
aad
mov
jg
push
cmp
out
dec
fcoml
xor
js
rolb
dec
pop
dec
outsb
clc
cltd
aas
cmc
repnz
push
inc
loope
pop
scas
lods
adc
les
hlt
push
daa
xor
jns
cmp
dec
jmp
pop
pop
in
or
jmp
jle
and
repnz
sbb
inc
ss
jg
js
jmp
mov
mov
sbb
sub
imul
add
and
jg
jno
inc
jmp
mov
mov
xchg
mov
add
xchg
aam
movsl
pop
test
imull
inc
mov
inc
push
scas
fsubrl
jns
push
enter
cmp
pop
xchg
test
lcall
test
mov
adc
inc
mov
popf
xchg
xchg
stos
scas
add
imul
mov
inc
add
fldenv
cmp
jnp
daa
testb
sar
movsl
pop
test
pop
pop
adc
push
cmp
and
decb
test
aas
test
push
mov
cmpsb
cmp
jmp
push
jg
and
fcoml
loopne
fldl
fstl
mov
and
push
xchg
jg
pop
and
loope
xchg
mov
ret
clc
fcomip
inc
dec
jecxz
push
arpl
insl
icebp
ljmp
daa
jne
mov
xor
sbb
in
jne
push
mov
adc
test
ret
xlat
test
xor
add
mov
push
and
mov
in
pop
popa
push
loopne
adc
inc
dec
and
inc
repz
jle
icebp
fsts
dec
gs
orl
cld
sbb
lea
inc
loope
mov
out
inc
dec
fidivrs
out
lea
ret
mov
jmp
xor
and
pop
mov
ficomps
add
movq
aas
outsl
in
inc
mov
scas
out
sub
cmpsb
jnp
sahf
and
dec
call
xchg
xor
pusha
lea
push
xchg
in
aad
sbb
pop
inc
and
dec
dec
dec
rorl
mov
test
pop
push
sub
jne
push
mov
adc
int
xor
cmpsb
push
stc
das
fsubl
cld
jne
sbb
mov
add
add
mov
ret
dec
shrb
adc
stc
lods
cmp
or
jb
jb
mov
jo
decl
push
pop
mov
or
jmp
mul
sbb
lret
and
add
inc
jmp
and
and
incl
cmc
cltd
adc
clc
and
xchg
cmc
test
ret
mov
arpl
ret
cmc
mov
xchg
cwtl
adc
lahf
sarb
dec
jge
mov
mov
enter
and
popf
lahf
sahf
adc
jnp
sbb
mov
call
out
xchg
inc
js
jno
stc
xchg
dec
imul
pop
hlt
sub
pop
and
pop
test
xchg
pop
iret
xor
adcl
adc
cmp
cli
mov
mov
les
mov
mov
iret
dec
mov
sbb
push
movsl
jg
dec
fdivs
out
jmp
shrb
rol
jl
in
repnz
pusha
icebp
jo
mov
add
mov
sub
adc
fadd
inc
jl
add
mov
mov
mov
mov
out
jg
ljmp
adc
xlat
je
dec
pop
ljmp
dec
mov
mov
mov
lret
jns
add
cld
movups
lods
stc
scas
jecxz
mov
fmull
test
xchg
cs
out
xor
jge
mov
test
mov
rorb
pop
push
dec
xor
xchg
leave
xchg
mov
mov
jmp
jecxz
pop
loopne
or
sbbl
test
mov
sahf
sub
popf
ret
pop
jnp
jge
push
out
cld
and
shrl
fiadds
adc
notb
or
xchg
xlat
scas
shl
cmpsb
ja
add
cmp
xchg
sti
repz
daa
mov
push
test
cmc
outsl
jns
cmc
test
out
add
fmuls
cmpsl
mov
sub
jp
xor
es
nop
push
addr16
outsl
adc
inc
pop
jmp
jg
dec
xor
leave
mov
lock
jp
mov
fs
leave
push
pop
stos
push
jecxz
ret
jae
inc
imul
negl
xchg
rol
pop
or
outsl
call
adcl
pop
pushl
mov
stc
pop
jnp
ja
stc
inc
push
nop
sub
and
mov
popf
clc
xchg
jnp
pop
add
daa
into
mov
mov
cmpb
popa
add
out
xchg
adc
xchg
sbb
aas
jmp
test
pop
arpl
scas
js
repz
cmp
mov
push
add
sub
inc
ljmp
lahf
mov
notl
sbb
lahf
inc
push
in
or
jne
inc
pop
push
dec
xchg
sub
xchg
fldl
fld1
movb
das
mov
sub
inc
popf
in
adc
popf
inc
dec
mov
xchg
in
aad
sbb
and
xchg
test
adc
fdivr
sbb
mov
pop
repz
ret
fs
mov
in
insl
fsts
lret
les
sarl
push
popa
jg
sub
js
test
adc
xchg
lret
sbb
pop
sar
mov
popa
jae
push
sbb
pop
mov
ja
mov
sti
cmp
mov
jne
cld
rolb
jecxz
cmp
xchg
int3
loope
mov
jmp
add
mov
iretw
jnp
fcomip
xor
xchg
int
cltd
jne
sub
movsl
into
mov
repz
push
gs
imul
out
dec
add
jg
inc
mov
mov
push
shll
test
arpl
jns
add
dec
inc
mov
andl
and
imul
jg
pop
cmp
aas
sbb
pmaddwd
mov
popf
add
ficoms
in
add
ffreep
jnp
push
and
cwtl
sbb
rcrb
out
loopne
stc
enter
mov
or
ret
jg
jge
jb
push
jb
out
les
cmp
out
loopne
pop
pop
mov
lahf
xor
or
repz
fdiv
cmpsl
pop
popa
mov
sti
xchg
add
xchg
movsb
or
or
push
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
roll
ud0
mov
mov
ret
jb
push
mov
ja
inc
pop
jmp
xchg
pop
cmpl
neg
lcall
rol
lds
xchg
outsb
psrlq
sbb
loopne
dec
out
jl
adc
lcall
dec
test
test
repnz
nop
xchg
xor
jbe
mov
icebp
stc
sarl
jmp
lods
add
andb
pop
mov
movsl
aam
inc
add
jp
adc
lcall
shlb
ret
lret
or
lcall
inc
adc
call
in
pop
and
rcr
push
mov
mov
add
and
adc
orb
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
and
mov
int
call
ds
aas
pop
xchg
int
jb
jmp
loop
filds
clc
cli
inc
cli
pusha
and
mov
sti
jg
aaa
pop
or
pop
orl
test
into
nop
push
or
xchg
mov
loop
push
call
test
je
into
out
adc
inc
or
jbe
outsl
and
dec
aas
inc
mov
filds
xchg
mov
inc
leave
dec
sbb
call
insl
mov
or
dec
ljmp
mov
pushl
das
outsl
call
mov
jle,pt
into
int
fildll
imul
jmp
mov
js
xchg
sub
mov
cmpl
lcall
js
fistps
and
mov
dec
sbb
mov
xorl
push
mov
pushl
sub
mov
xchg
mov
jle
int3
dec
and
mov
pop
cld
in
pop
dec
mov
xor
data16
adc
bound
mov
dec
rcrl
add
mov
into
bound
ss
stos
or
adc
sbb
aaa
insb
into
cmc
xchg
sbb
lcall
push
push
pusha
push
iret
sti
das
clc
mov
pop
lods
add
add
mov
cmpsb
stc
cmp
iret
mov
int
mov
xor
push
addl
jle
aas
inc
mov
outsl
xor
bound
jns
das
clc
mov
adc
pop
les
lret
jae
cmp
sub
cs
outsl
inc
lods
ss
sub
stos
cs
mov
js
out
mov
jle
mov
jle
adc
jnp
mov
fisubrl
push
jbe
and
mov
cmc
popf
mov
push
notb
das
cmp
mov
sub
push
mov
xchg
outsb
push
movsl
rcr
je
jg
mov
dec
mov
jle
cmc
dec
ror
lock
inc
mov
stos
xor
outsl
pop
dec
outsl
popa
mov
dec
and
and
push
xchg
cmc
icebp
and
fistpll
negb
or
or
jp
addr16
out
push
pop
xor
cli
or
or
push
or
fisttpl
mov
mov
lods
mov
outsl
test
pop
mov
push
ret
and
cmp
push
or
pop
or
or
push
mov
cmc
mov
scas
int
jge
push
push
push
nopl
adc
adc
in
repz
ficoms
and
or
mov
sbb
fildl
sbb
dec
loop
bnd
push
push
stos
jg
imull
fstpt
faddl
pop
push
inc
or
sahf
inc
ljmp
das
sub
xlat
push
add
sub
sbb
shll
or
in
rcr
std
fldl
aam
ss
xor
stos
dec
mov
pop
mov
adc
sbb
ret
jle
popa
outsb
dec
arpl
jg
hlt
dec
hlt
cmp
outsb
jo
cmp
xor
test
or
std
outsl
scas
testb
xor
decl
mov
inc
add
sbb
scas
mov
cld
sub
xor
dec
mov
int
mov
pushl
add
dec
xorl
fidivrs
cmp
adc
mov
xchg
adc
or
xor
call
dec
scas
fists
cmp
lock
push
push
and
lret
ror
adc
sub
push
xor
fists
jg
push
adc
mov
mov
adc
in
fsubrl
stos
or
push
adc
xor
xchg
mov
add
lcall
sbb
loop
push
xor
negb
cmc
sbb
or
xchg
xchg
lret
fs
dec
lods
or
stos
dec
add
xor
inc
sbb
cltd
movsl
movb
or
ud0
cmp
testl
xchg
jle
pop
cmp
aaa
int3
dec
jb
pop
push
imul
pop
fs
mov
mov
fcomip
mov
inc
outsb
cmp
int3
xchg
es
lock
sti
xchg
loopew
out
jle
push
inc
loope
fiaddl
sub
incl
loopne
dec
andl
xchg
addl
push
or
fs
into
mov
movsb
fbstp
cmc
mov
pop
in
or
addb
push
int3
sbb
or
and
xor
fidivrl
movsl
mov
jg
pop
cmc
add
pop
and
outsb
fwait
orl
fwait
xchg
call
cld
mov
xor
ja
push
fidivs
push
pop
push
movl
rcrl
outsb
xchg
dec
pop
and
adc
ljmp
inc
push
adcl
or
cmc
aaa
cmpsl
inc
fnsave
adc
xchg
dec
into
inc
jns
push
inc
and
xor
jl
pop
sub
lcall
roll
sub
cmc
and
pop
enter
mov
lret
aas
inc
mov
cmc
int3
and
into
mov
lock
imul
ljmp
stos
dec
and
inc
dec
fdivs
clc
cmpsb
pop
aad
pusha
imul
xlat
xchg
mov
xchg
loope
aas
in
lcall
aaa
and
adc
push
sub
push
inc
pop
test
sbb
incl
push
or
push
stos
pop
fiadds
lcall
out
sbb
test
adc
repnz
xchg
push
fucom
and
fistl
insl
insb
imul
gs
je
inc
jb
jne
jg
jo
push
outsl
insl
popa
imul
inc
push
push
dec
imul
data16
ljmp
push
inc
in
dec
addr16
imul
js
jns
dec
push
jne
dec
inc
xor
lcall
inc
pop
insb
push
addr16
push
push
push
imul
inc
inc
arpl
dec
insl
bound
out
cli
push
jbe
push
inc
push
js
push
push
mov
je
push
jg
inc
outsl
or
inc
push
inc
cmp
dec
arpl
dec
pop
push
inc
dec
xor
or
sbb
andb
jb
dec
xor
clc
in
jae
push
bound
jns
jno
inc
jo
cmp
cmp
dec
xor
ljmp
or
push
dec
push
inc
xor
inc
insl
arpl
pop
jns
push
xor
imul
decl
jbe
pop
push
jp
outsb
insl
dec
push
jo
push
push
insb
nop
dec
gs
dec
fs
mov
imul
pop
xor
imul
jg
pop
jo
gs
sbb
dec
insb
fs
dec
cld
jg
push
push
aaa
insl
xor
inc
gs
inc
xor
jno
dec
push
cmp
popa
js
data16
incl
push
bound
push
imul
jne
pop
dec
inc
ja
dec
mov
call
dec
dec
push
bound
jno
imul
push
jo
xor
insl
fidivl
jae
decl
js
je
push
cmp
jb
arpl
dec
outsb
jns
push
ja
dec
dec
bound
imul
adc
ljmp
push
bound
mov
and
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
sub
push
jae
sub
jmp
or
adc
xchg
xchg
add
stc
in
in
mov
cld
mov
jle
fcoms
xor
push
cmp
or
pop
adc
push
mov
and
jmp
cmp
or
cmpsl
das
inc
inc
mov
shlw
es
push
fldt
insl
pop
stos
je
or
adcl
shll
imul
jecxz
jg
cmp
int
incl
std
xor
sahf
pop
out
mov
cmp
shr
cmp
pop
orb
mov
ljmp
aam
cmpsb
cmpsl
xchg
sub
ds
and
into
dec
pop
icebp
fs
incl
xor
test
cmpsl
mov
mov
hlt
mov
leave
mov
inc
dec
lds
mov
stc
jmp
dec
cs
in
dec
imul
xacquire
fsubs
push
mov
push
dec
adc
call
or
jmp
popf
ret
cli
cmp
xor
sbb
adc
xchg
sbb
mov
mov
aas
loopne
stos
mov
inc
dec
lea
add
out
out
pop
mov
lcall
popf
push
pop
cltd
jle
sub
imul
sahf
dec
dec
jmp
adc
decl
mov
mov
les
or
insb
mov
ja
jae
sbb
push
push
out
push
daa
movsb
xchg
mov
and
or
stos
inc
mov
push
lds
sbb
iret
ds
out
stos
mov
call
hlt
mov
xchg
sbb
adc
adc
mov
bound
mull
outsl
jmp
adc
psadbw
mull
pop
sbb
mov
jg
cmpb
push
xor
out
mov
dec
xlat
dec
ret
dec
std
xchg
aaa
sub
test
cmpl
sar
aam
imul
arpl
mov
pushl
cli
adc
bound
movsl
push
pop
fadds
xor
mov
mov
call
mov
adc
xor
enter
push
mov
repnz
loopne
cmpb
or
call
push
xchg
fsubrs
adc
hlt
mov
sub
fidivl
jmp
push
hlt
sbb
in
jmp
rol
dec
and
jle
jno
stos
addr16
adc
lods
lods
je
testl
dec
or
adc
add
popa
adc
add
sub
mov
add
fs
adc
ret
enter
incl
add
mov
mov
xor
mov
pop
rcll
add
aas
push
adc
cs
insb
add
jno
lahf
jge
inc
push
inc
imul
popa
push
jp
adc
data16
jl
and
xor
imul
sti
cmp
jno
outsl
gs
dec
outsl
insl
adc
pop
mov
mov
inc
dec
push
pop
dec
adc
addr16
dec
jbe
jbe
pop
inc
pop
std
insb
xor
aaa
cmp
mov
jbe
push
xor
outsb
cmp
cld
xor
dec
add
dec
jo
aaa
pop
mov
popa
xor
inc
dec
push
gs
push
xor
addr16
dec
pop
das
push
outsb
fstpt
arpl
dec
inc
inc
cmp
push
adc
jb
popa
mov
gs
push
pcmpgtw
loopne
inc
addr16
dec
jae
jae
inc
push
imul
addr16
fstpt
inc
jg
dec
outsb
jb
ret
das
clc
je
imul
dec
xor
insb
jl
or
insb
xor
push
notb
jb
push
data16
push
jle
dec
dec
daa
dec
xor
dec
dec
stos
jo
push
jne
std
sti
sub
arpl
dec
adc
push
push
cmp
popa
xor
ret
addr16
and
dec
dec
lahf
loope
lock
pop
dec
jp
jp
dec
jne
push
dec
push
push
insl
cmp
enter
aaa
push
jbe
inc
jg
or
ss
inc
popf
inc
dec
imul
ret
xchg
imul
insl
xor
sub
push
push
ja
ja
ss
jae
jbe
js
outsl
and
jb
cmp
sti
adc
jb
xor
inc
jae
push
xor
mov
testl
cmp
flds
push
xchg
add
pop
bound
dec
dec
hlt
popa
mov
lahf
push
aaa
xor
xor
pop
loopne
and
push
inc
push
jecxz
lahf
mov
lret
cmp
jo
icebp
aaa
mov
mov
inc
fs
je
adc
pushl
imul
gs
dec
outsb
decl
jo
je
push
xor
dec
inc
push
popa
dec
mov
add
add
pop
mov
inc
add
push
mov
add
xor
out
incl
popa
add
aam
sub
inc
addb
arpl
imul
mov
add
orl
jno
stos
lret
add
and
cld
add
addb
je
data16
jle
std
mov
incl
adc
sbb
push
addb
sbb
add
mov
test
rorl
mov
push
pop
or
xorb
push
pop
sbb
push
push
orl
cmp
sub
mov
dec
push
add
hlt
xchg
pop
add
mov
push
rolb
rorb
test
inc
inc
mov
push
or
inc
inc
add
in
sub
inc
cmp
sbb
push
inc
adc
pusha
cmp
clc
mov
adcb
mov
add
add
mov
push
adc
cmp
rcl
add
cmp
pusha
push
mov
push
insl
imul
add
mov
cmpsb
cmp
mov
mov
sti
mulb
adcl
loope
sbb
mov
sar
cmp
add
sub
ja
ror
stos
and
cmpsb
fcmove
js
lock
sti
ficomps
sbb
xchg
add
inc
popa
or
scas
stc
inc
subb
mov
push
lods
imul
push
cs
cmp
sarb
shlb
jg
lods
loopne
xor
pop
or
cmp
sar
lret
call
ret
dec
sar
pusha
and
pop
xor
inc
imul
lea
cmpsl
test
or
loopne
stos
mov
sub
xchg
andl
rcll
cmp
jp
sbb
add
xchg
ret
enter
insl
xor
clc
jnp
dec
push
cmc
bound
mov
scas
movsb
cmp
pusha
sbb
or
add
mov
add
rol
mov
js
loopne
in
push
and
inc
cmc
cmp
stos
cs
mull
imul
sbb
loope
orl
shrb
mov
mov
pop
and
inc
popf
loop
cs
lock
mov
test
mov
shrl
cmp
fmuls
xchg
getsec
aam
popf
sbb
cmp
std
dec
fbld
lcall
pop
movsb
insl
cmp
push
loopne
loope
push
mov
push
mov
sbb
push
push
xor
jno
pop
mov
or
mov
jl
jmp
and
mov
add
inc
push
jo
in
xor
add
sbb
sbb
add
insb
pop
scas
adc
push
pop
test
mov
or
pop
dec
jle
mull
nop
xor
xchg
lock
fnstenv
les
lock
mov
mov
pop
add
xor
or
ja
ss
xchg
lock
in
jns
negb
dec
add
sbb
cmp
mov
dec
push
jo
push
hlt
mov
call
mov
dec
add
loopne
in
sbb
add
mov
clc
add
ljmp
mov
sbb
lock
push
ret
xchg
or
fiaddl
out
fwait
cmpsl
imul
pop
inc
outsb
lcall
subb
loopne
loope
aad
add
dec
jne
daa
xor
loop
inc
ret
jno
stos
stos
out
std
pop
fistpl
or
add
push
and
add
jnp
adc
add
mov
gs
adc
test
jo
mov
jle
add
adc
or
pop
test
or
test
xchg
outsb
clc
imul
out
loope
ret
push
clc
aaa
repz
jecxz
fstl
push
sbb
cli
pop
mov
testl
xchg
xor
fildl
mov
ret
ljmp
sbbb
mov
and
xchg
call
push
push
rorb
xchg
mov
daa
outsb
iret
push
push
es
std
adc
fistpll
lcall
xchg
and
mov
jno
outsb
jl
cli
pop
aaa
iret
fistpl
call
mov
jne
outsb
inc
pop
aad
mov
mov
std
incl
shll
add
leave
stos
pop
adc
int
sbb
lahf
xor
dec
cmp
jg
pop
sahf
sub
add
or
pushf
adc
adc
sysret
push
add
adc
insl
imul
inc
jo
inc
and
pop
or
or
inc
add
inc
sub
adc
div
xchg
and
decl
in
jecxz
inc
jb
push
in
or
divb
in
andb
out
sbb
push
push
loop
ds
sbb
or
dec
inc
pop
xor
sub
xor
popa
fnstcw
inc
dec
loop
mov
add
or
push
sbb
adc
pop
pop
inc
push
sbb
push
and
outsb
pop
adc
push
cld
bound
push
test
data16
testb
arpl
arpl
adc
les
arpl
outsl
out
add
arpl
leave
push
arpl
arpl
arpl
pop
arpl
arpl
outsl
out
arpl
addr16
arpl
xlat
arpl
out
cmp
arpl
fsubs
arpl
pop
arpl
arpl
arpl
out
fbld
fsubl
arpl
adc
arpl
out
pusha
arpl
arpl
jp
scas
arpl
lods
push
arpl
and
arpl
jnp
das
xor
cmp
adc
arpl
arpl
aaa
arpl
popa
arpl
arpl
jnp
mov
aaa
jg
arpl
lea
xchg
arpl
xchg
arpl
jbe
aaa
jg
arpl
or
arpl
addr16
lds
push
pusha
push
faddl
or
adc
pusha
inc
scas
pusha
fdivrs
inc
arpl
pusha
push
pushf
pusha
jge
push
outsb
adc
jo
push
adc
xchg
adc
or
insl
lahf
add
adc
pusha
imul
inc
icebp
xchg
fwait
rclb
jg
lahf
pusha
bswap
pusha
aas
mov
xor
push
cwtl
xor
popa
dec
rclb
pop
scas
insb
mov
popa
inc
popa
add
mov
repz
fldenv
popa
pop
js
jno
inc
cwtl
popa
ret
addr16
add
sub
fcom
or
pop
movsl
popa
dec
dec
adc
dec
pop
rcr
jl
popa
daa
popa
arpl
adc
ret
andb
or
popa
or
adc
test
ss
popa
dec
adc
jne
popa
dec
or
and
sub
xchg
mov
add
cmp
xor
pop
inc
ret
data16
push
shll
arpl
fwait
mov
push
les
push
lret
lret
data16
push
enter
mov
lret
push
into
adcl
test
mov
fwait
rcrb
push
rol
push
shll
push
lret
fwait
mov
push
aam
push
aad
iret
push
fcmove
push
push
fdivrs
push
fldenv
push
push
fbld
push
push
frstor
push
fwait
mov
push
mov
cmpsb
push
mov
stos
push
stc
fwait
mov
push
movsb
test
push
stos
scas
push
stos
data16
push
test
stc
fwait
mov
mov
scas
mov
scas
mov
mov
push
cmpb
mov
adcb
push
mov
adcb
out
incb
push
mov
push
mov
mov
mov
mov
outsl
out
mov
data16
push
mov
xchg
push
mov
cltd
mov
outsb
fldenv
fstl
jge
mov
mov
mov
adc
cmpsl
addr16
movsb
inc
movsl
addr16
fs
mov
fs
addr16
fs
fs
dec
fs
fwait
mov
lods
dec
lods
addr16
fs
fs
push
fs
stc
fwait
mov
push
fs
fs
push
fs
fs
push
fs
mov
fs
pop
andb
andl
adc
fistpl
and
and
mov
jg
aaa
jg
test
test
mov
mov
mov
mov
mov
fs
mov
fs
xor
xor
xor
push
xor
mov
pop
xor
ss
mov
sub
les
xor
je
cmp
adc
jle
cmp
push
jl
cmp
fs
repz
fs
adc
mov
cmp
inc
shll
fwait
loop
push
mov
data16
adc
fists
fcmovbe
fs
adc
fisubl
adc
fsubs
adc
adc
adc
fisubs
adc
data16
adc
adc
adc
mov
push
data16
rcrl
adc
fs
cmpsw
adc
pop
cld
fs
adc
fs
stos
adc
mov
fmuls
fs
or
pop
push
fs
or
cmp
adc
fs
or
pop
data16
pop
data16
cmp
and
adc
data16
and
adc
data16
push
mov
dec
fdivr
in
jmp
add
fs
adc
fs
mov
fdivl
fs
insb
fs
adc
fdivl
fs
andl
fs
jbe
jbe
fs
adc
inc
adc
fdivl
fs
mov
fs
fs
mov
int
jg
fs
xchg
fs
fs
nop
fs
int
int
adc
fs
xchg
fs
xchg
js
xchg
ror
fs
lcall
cwtl
fs
fs
nop
push
insl
fs
adc
fs
popf
fs
push
gs
jg
mov
popa
shll
gs
lds
pushl
jg
popa
lret
lret
gs
popa
leave
gs
int3
gs
int
ja
add
gs
fistpl
shlb
and
gs
popa
gs
xlat
gs
aam
repnz
jg
aaa
aad
scas
popa
fisubl
popa
fsubs
fldenv
repz
jg
popa
mov
lock
mov
mulb
idivl
aaa
jg
gs
popa
movsl
gs
stos
gs
popa
stos
gs
test
clc
popa
test
repz
scas
gs
popa
scas
ljmp
std
mov
ret
jg
popa
mov
ret
mov
shll
mov
call
mov
les
mov
lds
gs
lret
popa
andl
out
incb
roll
xlat
test
popa
test
outsl
out
mov
popa
mov
mov
popa
mov
mov
popa
out
out
fisttps
fstl
mov
nop
mov
xchg
cmpsb
popa
xchg
cmpsl
xchg
movsb
popa
xchg
movsl
jmp
outsl
lcall
ret
push
inc
shrb
add
push
inc
push
mov
add
push
inc
les
lds
inc
lret
lret
push
inc
enter
repz
adc
push
inc
into
push
iret
push
inc
int3
push
int
lret
jg
inc
shrb
fisubrs
inc
fildll
inc
add
push
inc
mov
sti
push
inc
mov
push
inc
cmpsl
push
stos
push
inc
stos
push
sti
fwait
jg
push
inc
lods
push
inc
add
push
mov
push
adc
aaa
jg
push
inc
mov
inc
inc
mov
outsl
in
ja
inc
xchg
push
arpl
push
inc
sahf
push
push
sbb
push
out
mov
inc
subb
imul
subb
std
int
std
imul
imul
imul
and
mov
inc
mov
int
inc
mov
inc
mov
imul
imul
fadds
mov
fnstcw
imul
imul
imul
xchg
imul
je
xchg
imul
imul
imul
stos
cmp
ret
push
pusha
jle
pop
inc
push
stc
fwait
mov
push
inc
lret
lret
push
jno
clc
fwait
mov
int3
push
inc
shrb
push
shrl
inc
int
cld
in
shrb
adc
push
xor
aam
cmp
mov
cmp
mov
inc
fisubrs
or
push
insl
mov
adc
push
aas
inc
movsb
push
inc
sti
stos
push
inc
push
aad
lods
push
test
adc
push
jle
mov
jg
mov
push
std
push
push
and
inc
test
into
inc
mov
push
aam
mov
push
test
mov
push
subl
xchg
fcmovnu
lods
mov
push
shlb
mov
inc
mov
cli
mov
adc
push
fwait
sub
pop
nop
push
xchg
push
jne
xchg
push
cmove
push
insb
incb
sti
cwtl
push
pushf
sahf
push
js
pushf
mov
inc
shrl
add
imul
imul
imul
hlt
imul
imul
lods
imul
sbb
imul
imul
imul
inc
shrb
subb
outsb
mov
subb
repz
adc
outsb
mov
outsb
mov
test
test
repz
jg
mov
mov
mov
mov
mov
jg
aaa
jg
outsb
mov
lea
addr16
outsb
adcb
xorb
repz
xchg
outsb
andl
xchg
outsb
test
jg
addr16
cwtl
outsb
mov
outsl
arpl
pusha
insb
mov
popa
insb
outsl
data16
outsl
insb
les
lds
insb
lret
mov
outsl
imul
leave
outsl
imul
int
in
outsl
insb
int3
add
int
insl
insb
shrb
shrl
insb
shrb
int
shrl
insb
outsl
jbe
outsl
ja
aam
je
outsl
jne
fcmove
int
jp
outsl
jnp
fsubrs
fldcw
insb
fisubrs
int
cld
outsl
jg
fsubrl
insb
mov
inc
insb
mov
dec
fbld
push
adc
outsl
inc
movsl
cld
int
cld
outsl
inc
insb
stos
outsl
dec
stos
outsl
dec
insb
test
dec
test
outsl
dec
int
scas
outsl
dec
insb
lods
outsl
dec
lods
outsl
dec
insb
mov
push
mov
push
insb
mov
int
push
mov
push
insb
mov
push
mov
push
insb
mov
push
mov
int
cld
outsl
push
insb
mov
pop
insb
mov
pop
insb
mov
int
subb
subl
outsl
and
and
int
cld
int
daa
test
insb
test
mov
insb
mov
mov
int
cld
outsl
sub
sub
outsl
das
xchg
outsl
xor
xor
cld
int
nop
outsl
xor
xor
outsl
aaa
xchg
outsl
xor
xchg
stc
sbb
int
xor
fwait
outsl
cmp
push
push
shrb
out
mov
insb
push
adc
insb
push
push
les
insb
push
push
lret
outsl
out
lret
insb
pop
push
enter
insb
pop
push
into
insb
pop
iret
insb
pop
push
out
out
insb
pop
int
pop
push
shrb
insb
and
insb
and
out
shrl
insb
xlat
insb
daa
push
aam
and
insb
and
outsl
out
fldt
fsubrs
insb
sub
insb
fildll
out
out
insb
sub
insb
sub
mov
insb
xor
out
mov
insb
cmpsl
insb
aaa
push
movsb
insb
xor
insb
xor
outsl
out
stos
insb
cmp
insb
cmp
insb
ds
insb
aas
push
out
out
insb
cmp
insb
cmp
mov
add
insb
bound
call
push
mov
jae
insb
lret
jae
sbbb
fists
mov
leave
jae
adcb
insb
iret
jae
sbbb
fists
mov
adcb
insb
shll
sbbb
fists
mov
adcb
insb
xlat
jae
sbbb
fists
subl
insb
sbbb
fists
test
mov
jae
sbbb
fists
mov
mov
jae
subb
fists
lea
xchg
insb
adc
insb
sbb
insb
sbb
push
mov
out
insb
out
insb
in
xchg
insb
out
xchg
insb
in
push
lcall
fwait
insb
xchg
jae
sub
popf
inc
jno
add
stos
into
jno
arpl
jno
arpl
jno
arpl
inc
insl
fistpl
and
rolb
and
inc
inc
push
fisubl
add
push
lret
cmp
enter
adc
add
popf
xor
add
mov
imul
stos
imul
jno
rcrb
add
sbbb
outsl
pop
xor
inc
xor
inc
add
stos
inc
push
xor
shll
aaa
inc
shll
inc
add
sahf
cmpsb
stc
dec
lock
dec
bound
add
xor
add
dec
lock
popa
or
stos
je
add
or
jno
out
fcoms
imul
sbb
add
add
dec
sarl
inc
hlt
inc
cmp
sarl
repz
dec
repnz
sbb
sbb
int
dec
add
cld
icebp
ljmp
dec
add
add
imul
outsl
sahf
or
or
add
shrl
and
xchg
rcl
sbb
int
xor
xlat
pop
aam
aad
fisubl
push
push
or
or
paddusw
mov
xor
jnp
add
cmpsl
sbb
movsb
sbb
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
dec
imul
xchg
lock
imul
or
mov
mov
mov
out
outsb
cmpsb
jbe
or
and
push
xlat
push
xor
cmp
cmp
subl
test
mov
push
lods
sbb
aas
or
sbb
mov
in
and
cmpsb
xor
jo
lods
int
xor
mov
mov
or
mov
xor
push
icebp
add
lcall
fnstsw
mov
jnp
dec
arpl
imul
push
adc
add
add
mov
and
inc
xchg
adc
add
leave
je
mov
pop
aas
push
sub
adc
push
xchg
scas
fs
xchg
inc
cli
mov
stos
repz
pop
jno
in
pop
push
cmp
stc
cmpsb
mov
ss
fdivr
std
add
sub
cltd
jo
pop
sub
push
push
loope
push
xchg
lcall
pop
mov
adc
push
add
cli
movsl
add
sahf
add
push
mov
add
cmp
insb
and
xchg
aaa
dec
aad
out
jg
sbb
mov
das
not
inc
xchg
xor
dec
inc
notl
lcall
inc
jae
addl
mov
jnp
mov
push
repnz
outsb
xchg
xchg
jo
sbb
dec
dec
aad
push
adc
call
pop
idiv
lock
xor
and
cmpsb
jl
cmp
imul
or
xor
jnp
push
xchg
pop
cmp
adc
jbe
mov
fmul
mov
push
mov
jb
xor
jo
repnz
or
ljmp
adc
aaa
data16
jb
and
cmp
dec
addr16
push
rorb
mov
push
mov
cmp
xchg
pop
or
shlb
add
dec
mov
bound
es
xor
jp
mov
pop
scas
jg
cld
xchg
inc
sbb
mov
mov
repnz
adc
jge
clc
clc
pusha
add
sbb
mov
jo
ss
roll
cs
inc
sarl
jl
sub
xchg
loopne
add
mov
mov
in
pop
sahf
in
xchg
jo
mov
fimuls
ss
add
xor
out
add
or
jbe
add
mov
je
mov
lock
adc
fidivl
sahf
xor
mov
movsb
lea
out
ficompl
fsub
aad
ljmp
aad
push
push
pop
push
lods
xchg
es
dec
lahf
cmp
in
sahf
jle
jae
jbe
push
je
push
xor
pop
data16
xchg
jb
cmp
ret
stos
or
jle
sub
shll
out
lret
lods
out
loopne
addr16
loop
and
out
lock
sbb
ds
jle
pop
or
filds
dec
daa
lock
cmovle
jnp
add
shrb
mov
decl
sub
clc
and
add
stos
mov
xorb
lock
mov
cwtl
sub
fs
mov
push
repz
mov
sbb
sub
out
xor
jno
es
imul
adc
sbb
xchg
xor
jo
push
cwtl
mov
mov
sbb
adcb
inc
ljmp
sub
xchg
inc
pop
jo
add
sub
dec
push
inc
addb
add
ljmp
or
fisubrs
sub
or
lods
xor
push
adc
ljmp
nop
or
push
inc
aam
flds
xor
mov
sub
or
push
rcrb
mov
ds
add
mov
mov
push
mov
das
adc
xchg
push
add
pop
aad
stos
cmp
cli
pop
js
hlt
pop
mov
in
shrb
pop
cs
or
stos
into
or
add
pushf
aas
cmp
scas
or
int3
sbb
pop
adc
sbb
lods
push
cmp
xchg
or
inc
imul
adc
push
pusha
xor
push
in
push
inc
addb
ljmp
sarw
into
adcb
or
je
pop
roll
mov
add
lcall
inc
push
add
dec
add
lcall
orb
ret
mov
jns
sbbb
xor
cmp
lods
sbb
jp
mov
subb
or
xchg
sub
sbb
subb
call
mov
iret
fwait
mov
sbb
inc
orb
xchg
cmp
iret
pminub
sbb
sub
sbb
lcall
push
push
rorb
lds
call
ret
push
inc
call
outsb
sbb
rorb
or
rolb
rclb
or
rcrb
loop
faddl
out
mov
rolb
or
jae
sub
je
stos
xor
inc
mov
cld
lcall
mov
scas
aas
cmpsb
push
or
push
test
mov
add
or
sarb
inc
push
aaa
fcomps
cs
pop
pop
add
pusha
in
push
mov
shlb
sbb
or
movsb
xchg
jp
sbb
or
xlat
lcall
push
jnp
add
fwait
mov
inc
sub
or
rclb
iret
sub
sarb
orb
mov
stos
mov
mov
ja
push
adc
sbb
push
popa
inc
inc
cmp
out
popa
pusha
xchg
stos
push
sbb
call
xlat
mov
scas
leave
cs
outsl
and
aaa
or
and
pop
mov
add
das
push
shrl
arpl
fs
mov
aad
push
fiadds
ljmp
test
and
add
mov
inc
nop
cmp
push
out
add
adc
sbbb
inc
or
push
jo
jp
pop
adc
add
xchg
add
outsl
add
and
add
pusha
decl
inc
imul
inc
js
roll
add
stos
or
inc
inc
call
xor
add
add
add
arpl
arpl
jg,pn
fistpll
pop
bound
mov
jmp
imul
push
jg
lret
and
push
sbb
ja
loopne
call
adc
aaa
out
movsb
lea
aaa
std
add
int
js
jl
scas
push
xor
lods
pop
cmp
ljmp
lret
mov
pop
iret
xor
sub
ja
ja
clc
add
mov
int
cmp
xchg
dec
test
stos
cli
pop
ljmp
jg
or
mov
cli
ljmp
jo
sub
out
mov
inc
jbe
pop
mov
pop
jg
dec
outsl
pop
xchg
sub
shll
in
pop
fs
ret
inc
or
mov
push
jg
notb
adc
ret
outsl
jl
imul
mov
lods
lock
sarl
scas
jb
or
add
jg
adc
mov
push
and
and
xor
ficoml
out
cmpsb
dec
mov
jmp
and
add
jle
pop
test
addr16
pop
pop
dec
xor
loop
fists
lods
dec
insb
or
cmp
add
stos
loopne
outsb
sbb
or
mov
cmp
jns
test
add
pop
cmp
pop
stc
cmp
push
inc
pop
jnp
sbb
mov
mov
xchg
aaa
pop
mov
bound
repz
add
lock
clc
and
push
lret
pop
pop
pop
lret
jnp
fwait
sbb
jp
lcall
test
push
subl
or
push
inc
add
cmp
jg
pop
cmc
jp
cmpsl
push
xor
or
jo
std
fisttps
jb
or
jnp
xchg
pop
out
adc
adc
add
mov
and
xchg
stos
or
jnp
xor
sub
mov
cmp
jnp
pop
lods
fisubs
dec
das
inc
out
imul
xorb
jmp
mov
xchg
and
into
test
mov
lcall
ret
jmp
add
push
sbb
shll
ror
mov
push
popf
mov
test
add
loop
daa
add
lahf
mov
incl
enter
lret
repnz
cli
add
dec
clc
popa
push
inc
pop
mov
iret
or
add
jecxz
push
push
cwtl
fdivrl
inc
cmpsb
lcall
fcmovnbe
inc
push
fwait
movsb
leave
xchg
cmpsb
push
cld
out
pop
dec
mov
call
test
lock
pop
jo
jmp
mov
pop
shlb
sub
jnp
lock
inc
jg
int3
xor
mov
push
fiaddl
aaa
sub
call
push
adc
cmpsl
add
adc
fiaddl
repnz
fstpt
stos
scas
iret
pop
jbe
out
pop
mov
xchg
pop
cltd
pop
imul
pop
sub
pop
rolb
sahf
dec
add
jno
outsl
inc
jle
adc
hlt
mov
sub
sub
loopne
dec
push
sbb
in
outsl
xor
push
lock
lret
push
mov
mov
push
pop
sbb
fcomip
dec
test
movsb
lret
das
add
add
cltd
iretw
test
or
add
pop
clc
in
pop
icebp
push
pop
daa
pop
mov
pop
outsb
pop
or
sti
nop
cmp
dec
mov
lods
loope
mov
lret
push
and
add
aas
inc
jecxz
xchg
sbbb
int
aam
adcb
xor
clc
fwait
outsb
inc
fdivrs
loopne
loopne
cld
out
in
out
push
in
cli
loop
movsb
push
mov
xor
pop
cmp
cmp
pop
lds
call
dec
xchg
das
mov
push
sub
aad
push
movsb
ss
outsl
incb
xor
jo
je
push
jl
inc
push
inc
sti
pushl
dec
push
dec
push
push
push
test
movb
add
inc
movl
mov
cli
subb
stos
jb
inc
jg
push
or
mov
push
adc
sbb
push
loopne
in
call
jne
pop
cmp
shlb
push
add
and
jp
in
fistps
inc
movsb
mov
mov
adc
push
test
ja
in
ja
or
mov
lods
imul
iret
das
shr
and
jl
clc
push
cld
push
mov
call
notb
push
rclb
aam
fdivr
xchg
lods
mov
insl
dec
adc
jmp
lcall
add
jle
add
pushf
jl
push
mov
nop
inc
xchg
push
cwtl
push
pushf
push
sbb
or
push
jo
adc
notb
add
add
popa
and
icebp
sbb
lret
xchg
add
and
mov
sub
push
xor
jb
or
pop
jge
pop
pop
test
in
xchg
aad
mov
and
pushf
sbb
sub
sbb
xor
sbb
cmp
add
pop
push
les
push
imul
mov
fwait
or
test
cld
adc
mov
sbb
adc
jecxz
dec
sub
inc
push
or
push
cld
push
mov
ljmp
adc
push
lret
push
jae
push
push
pop
add
iret
mov
in
pop
xor
repz
sub
xchg
nop
mov
sbb
shlb
push
fcomp
icebp
pop
pop
pop
pop
mov
pop
xchg
lods
push
pop
mov
pop
cmp
mov
shlb
lods
sti
push
push
addl
fs
stc
and
or
lcall
arpl
outsl
pop
inc
pop
loopne
clc
in
dec
pop
and
xor
mov
imul
mov
and
and
pop
add
das
sar
ds
or
pop
in
pop
cmpsb
movsb
xor
stos
sbb
enter
jl
sbbl
mov
addr16
ret
inc
jg
push
adc
pop
pop
pop
out
out
pop
lock
pop
ret
dec
pop
fsubrl
jge
sub
das
leave
sub
testl
sbb
scas
cli
stos
push
and
jle
push
sub
push
or
push
mov
pop
lock
std
push
push
cmp
push
cli
lret
je
jle
jp
jbe
mov
cmp
add
mov
push
push
in
mov
xchg
push
push
leave
test
arpl
out
adc
aas
push
push
push
pop
add
sbb
js
adc
xor
add
clc
pop
sub
mov
jno
mov
js
addr16
mov
xchg
push
cmc
mov
loopne
push
dec
jmp
push
js
outsl
mov
es
and
push
dec
adc
insb
pop
push
in
call
inc
mov
in
push
xor
leave
mov
add
pop
xchg
cmp
add
test
mov
xlat
lea
cmp
clc
or
mulb
mov
jbe
std
loopne
data16
ret
pop
xor
lock
insl
dec
or
dec
cmpsl
outsl
imul
sarb
add
pusha
popa
addr16
imul
outsl
dec
insb
insl
jae
jno
ja
jne
add
jns
jg
jge
add
inc
inc
inc
inc
inc
mov
sbb
dec
add
dec
dec
dec
dec
shlb
push
push
pop
or
stos
push
ljmp
movsb
add
incl
push
pop
add
or
or
or
or
adc
pop
adc
sbb
mov
ds
cmp
add
incl
cmc
add
push
pop
sbb
pusha
dec
loope
scas
clc
jmp
in
ljmp
in
in
repnz
lock
div
hlt
cmc
or
clc
stc
jg
xchg
cld
std
ret
rol
cli
enter
int3
int
cmpsb
incl
rcl
rcl
xlat
aam
fiaddl
fcmovnu
frstor
mov
movsb
movsl
ja
decl
call
scas
lods
lods
mov
mov
mov
mov
mov
mov
clc
mov
add
test
mov
xchg
nop
xchg
jl
call
sbbb
popf
decl
pop
add
hlt
mov
std
pushl
es
and
sub
sub
add
das
sub
xor
xor
xorb
xor
cmp
cmp
cld
jg
inc
push
add
pshufw
xchg
rclb
lods
inc
clc
push
add
js
aam
mov
jg
sbb
pushf
js
popf
gs
add
adc
popa
lock
aas
add
add
mov
add
sbb
xchg
vcmppd
sub
fwait
add
xor
mov
cmp
adc
add
add
scas
and
add
add
jbe
xor
pop
vandnps
jle
add
decb
add
mov
sub
jb
xchg
add
add
inc
lcall
jle
add
or
push
add
push
mov
cmp
daa
adc
and
dec
mov
pop
mov
jecxz
sbb
mov
xchg
jecxz
insl
insb
movsl
adc
out
es
sub
jmp
ljmp
jae
pop
lods
sbb
sbb
push
inc
cld
sahf
xchg
ficompl
mov
sub
jo
dec
mov
incb
lock
rorb
inc
inc
xchg
movsl
cmpb
add
or
xor
stc
fsubrl
movb
in
ja
mov
dec
sub
and
outsb
cmp
xchg
jg
scas
mov
adc
fdivrp
or
int3
inc
add
mov
daa
aas
cli
lock
ljmp
call
fimuls
ja
stos
inc
mov
cmpsl
mov
scas
icebp
cmp
or
addr16
std
fs
in
aam
adc
ret
xor
mov
ret
fwait
sub
jb
loope
or
adc
repnz
sbb
in
daa
aaa
cmp
loop
in
inc
out
lods
pop
aaa
sbb
aaa
hlt
push
js
ss
incl
pop
ret
cwtl
ja
add
dec
outsb
shlb
push
fcos
mov
movsl
ds
out
or
loopne
bnd
inc
mov
mov
call
insl
add
lea
or
xchg
adc
fidivs
inc
int
dec
dec
test
outsl
xchg
inc
loop
add
mov
cli
pop
adc
push
add
and
inc
addl
sub
in
addb
andl
dec
dec
ja
pop
add
jbe
jns
sub
cmpsb
add
add
dec
lahf
lods
jbe
mov
movd
add
ja
popf
sub
cmc
scas
pop
imul
loopne
push
adc
pop
aad
mov
jg
pop
je
arpl
inc
fadds
mov
jle
rcl
jecxz
jle
adc
rol
add
insb
inc
sub
pop
pop
ds
out
xor
or
inc
cld
mov
lods
pusha
add
and
loopne
xor
inc
jle
push
movsb
orw
xadd
inc
mov
pop
in
pop
dec
cld
and
stos
punpcklbw
adc
add
pusha
add
adc
aaa
xchg
pop
ljmp
aaa
and
inc
and
sub
mov
mov
sub
adc
dec
xor
and
and
daa
xor
daa
sar
in
jmp
sub
add
and
dec
xor
xorb
add
xor
mov
xchg
cs
xor
xor
mov
popa
add
sub
bound
sub
mov
push
fwait
lods
cltd
imul
and
xor
add
add
and
sub
mov
mov
push
test
xor
push
loop
bound
clc
clc
lds
subb
or
es
push
ljmp
and
dec
sub
je
or
or
dec
sbb
test
or
outsw
aaa
imul
or
pusha
adc
adc
fisubrs
pop
mov
pop
pop
or
sahf
push
pop
adcb
lods
std
scas
and
adc
loopne
sbb
or
or
and
cs
and
in
aaa
mov
and
cmp
xor
aam
pop
cld
add
decb
sbb
inc
mov
addl
xor
push
and
and
adc
enter
jmp
popa
add
dec
addb
inc
sarb
cmp
inc
sub
xchg
loopne
xor
mov
and
or
rcll
dec
sahf
and
or
xchg
xor
mov
mov
mov
sub
mov
push
add
pusha
dec
adc
xor
int3
fwait
loope
xchg
adc
loope
test
cs
fwait
mov
pop
add
ds
stos
add
mov
cmp
add
and
aaa
sub
subb
adc
out
xor
push
push
or
pop
sti
xchg
pop
lret
or
bound
sbb
add
pop
cld
ja
jbe
push
and
add
mov
or
testb
aaa
adc
cmp
jl
pop
add
pop
adc
sub
mov
loope
add
xchg
movzbl
and
ja
push
push
inc
add
add
adc
or
es
push
scas
fdivr
bound
inc
adc
sub
sub
je
sub
push
jnp
in
jno
mov
jbe
lds
mov
adc
pop
push
orb
or
cwtl
arpl
stos
xchg
push
cld
cmp
push
or
call
sub
push
or
jle
sub
and
ss
and
bound
inc
das
pop
hlt
or
add
mov
add
inc
dec
dec
adc
xor
sbb
loope
popa
or
add
push
ss
sarl
push
cld
outsl
cli
xchg
jg
cwtl
sbb
mov
test
mov
js
add
pop
add
pop
cmp
cli
insl
sar
outsl
add
dec
xorl
pop
es
sbb
or
adc
clts
add
and
add
xchg
mov
jne
add
add
decl
push
popa
jbe
push
push
adc
dec
and
xor
dec
add
pop
js
add
pop
xchg
add
add
test
es
cmp
js
out
jo
mov
mov
jno
data16
jg
fwait
test
push
jno
jae
fimull
jecxz
and
lahf
out
add
fistpll
inc
push
mov
out
in
sbb
add
decl
int3
cmp
add
lock
addb
div
add
xchg
enter
mov
xchg
add
xor
incb
add
add
pop
xchg
dec
rorb
nop
lcall
xor
fistps
insb
stos
add
shrb
test
or
push
fimuls
pusha
push
int
and
sbb
cmp
cmp
cmp
mov
adc
cmc
nop
inc
sub
aaa
mov
cld
cmp
add
icebp
jg
lock
and
aas
add
cmp
push
add
jg
fisubrl
xchg
ds
mov
lock
xor
jb
fldcw
sar
add
push
mov
adc
mov
mov
scas
clc
aaa
cmp
cmp
mov
or
push
out
push
push
push
aaa
push
sti
es
lcall
add
sbb
push
insl
pop
inc
adc
dec
adc
xor
dec
dec
cmp
pusha
lcall
ss
dec
push
lds
and
inc
and
cld
fwait
lcall
push
prefetch
or
cmp
pop
adc
jb
and
add
pop
je
add
clc
sbb
bound
or
fimuls
sbb
jno
jle
add
jl
jle
je
loop
incl
jl
push
jl
jle
insl
add
addr16
add
mov
mov
incl
aam
shl
loope
add
fdivr
out
clc
in
jmp
lock
adc
xchg
mov
addl
je
jb
dec
push
lret
clc
ljmp
dec
inc
pop
dec
pop
dec
jl
pop
and
pop
pop
inc
icebp
lods
call
lods
loop
mov
daa
xor
add
jne
add
lcall
les
mov
inc
jne
pop
incl
pop
dec
jge
outsb
pop
push
inc
dec
pop
dec
add
jno
pop
jae
jo
call
fadds
insl
orb
in
div
in
loop
loop
loopne
incl
aam
lret
push
add
ret
ret
aad
call
std
and
push
mov
hlt
loopne
mov
test
jg
test
mov
stos
mov
js
pop
add
pop
jg
dec
dec
pop
dec
pop
mov
pop
push
dec
push
or
bound
push
in
lods
loope
dec
push
cmp
add
push
adc
and
sub
sbb
add
cld
sbb
add
cmp
pop
cmp
lods
cmpsb
mov
decl
loopne
cmpsb
mov
cmpsb
orl
lahf
cltd
pushl
lea
fdivs
mov
movsl
scas
mov
mov
cmpsl
cmpsl
incb
test
idivb
mov
loope
sti
call
lock
sbb
add
pop
pop
inc
push
sbb
mov
rol
int3
rol
ficoms
jmp
add
movsb
mov
ffree
and
jg
or
xchg
fcmovnb
fyl2x
add
stos
mov
fcoms
jmp
xchg
dec
jecxz
jmp
add
iret
div
stc
je
add
rcr
jg
loop
out
lds
or
aad
addb
fs
in
ja
pop
loopne
clc
daa
sub
and
sub
sbb
cmp
fwait
hlt
inc
cmp
dec
stos
cmp
sub
inc
pop
outsl
cli
ja
dec
pop
pop
adc
pop
or
pop
dec
push
cmp
decl
pop
mov
xor
fbstp
std
cmp
add
add
or
pop
mov
outsl
clc
ljmp
mov
add
sbb
sbb
cmpsb
unpckhps
add
push
pop
imul
push
xchg
or
push
add
jns
fwait
mov
outsl
adc
push
push
inc
adc
iret
cmc
repz
call
std
add
idiv
lock
test
in
loope
lods
cmpsl
jg
imulb
out
loopne
cmpsl
add
out
out
bnd
hlt
mov
std
clc
stc
stc
testb
std
mov
testb
addb
add
jmp
icebp
jg
mov
stos
in
out
jmp
loope
lock
std
mov
sti
sti
cld
jle
in
in
call
mov
clc
xor
adc
adc
inc
push
add
mov
add
adc
bound
add
add
and
sbb
es
sbb
cmove
pop
add
adc
jg
scas
fisubl
test
mov
cmpsb
mov
mov
add
sub
jns
imul
decl
jb
gs
jne
or
outsl
xor
adcb
lcall
xchg
xchg
xchg
fwait
xchg
xchg
lcall
add
ret
in
aam
add
fdivr
mov
into
lret
rol
mov
call
out
loop
in
jecxz
clc
or
lock
in
mov
inc
push
js
push
dec
je
sub
outsl
xchg
inc
dec
inc
inc
dec
loope
add
or
and
pop
sbb
adc
inc
mov
ret
test
in
out
fcmovbe
cld
in
pop
lock
jo
and
xor
dec
sub
sbb
jbe
mov
add
test
clc
pop
std
call
adc
push
pop
ret
mov
scas
mov
lods
scas
ljmp
adc
adcb
add
add
add
fcomip
add
mov
mov
fisttpl
loopne
mov
push
in
in
xor
and
shlb
and
and
ret
mov
ret
aad
rcr
ficoms
fld
jmp
mov
incl
rcl
into
int3
leave
or
enter
xchg
mov
pop
in
mov
xchg
add
popf
rolb
xchg
idivb
push
jp
incl
imul
mov
mov
mov
test
add
add
rdmsr
adc
decl
pop
adc
push
aas
xchg
mov
jo
sarb
int3
ror
rcl
rol
sbb
jp
gs
push
lcall
ja
rol
ret
cmp
sub
add
emms
and
push
cld
and
xchg
jp
adc
ja
outsl
xor
ds
mov
call
jmp
mov
pop
xchg
scas
mov
xchg
pop
insb
fs
imul
test
dec
sbb
mov
lea
clc
jmp
jmp
jle
in
xchg
mov
sbbb
scas
mov
mov
mov
sti
mov
es
dec
inc
push
push
inc
push
inc
push
jge
insl
jns
outsl
jl
dec
jbe
jp
jg
push
jmp
xor
imul
inc
inc
inc
dec
pop
dec
inc
jbe
dec
inc
pop
mov
inc
push
inc
add
loop
push
scas
loope
pop
jns
fst
lds
pusha
pop
inc
inc
xchg
adc
loopne
out
repnz
sbb
bound
lock
mov
mov
xchg
andb
rorl
and
mov
adc
cmp
and
and
xor
aaa
and
or
push
sbb
fisttpl
nop
push
pop
adc
pop
push
sbb
ds
inc
inc
aaa
push
das
add
jge
push
mov
pop
cld
mov
cmpsb
test
mov
lock
div
jns
std
mov
in
mov
jne
aas
sub
jbe
xchg
loop
stos
jg
mov
mov
idivb
popa
jp
and
pop
pushl
enter
fmul
loop
or
or
lret
push
cmp
pop
stc
cmp
sub
sub
push
dec
push
dec
inc
dec
pop
cs
std
sti
out
out
xlat
call
rcl
rcl
shl
out
test
in
in
std
fdivrp
decl
cmc
icebp
in
cli
call
ret
leave
int3
int3
ficoms
adc
insb
popa
insl
arpl
adcb
adc
adc
adc
out
xchg
ret
rorb
stos
mov
mov
push
dec
inc
incl
cld
lret
or
sbb
or
xor
cmp
cmp
dec
cmp
cs
xor
xor
test
add
sbbb
mov
movsl
loop
mov
mov
and
mov
inc
or
out
fstp
lock
dec
add
mov
ud0
mov
paddd
mov
test
mov
cli
cld
out
cli
add
dec
xchg
or
jl
mov
push
sub
dec
inc
pop
add
iret
cmc
call
loope
stc
cli
in
in
stc
int3
in
lret
xchg
ja
popa
ret
enter
and
adc
adc
pop
pop
inc
out
scas
mov
sbb
sbb
lods
cmpb
das
ror
mov
sub
push
gs
sti
push
dec
ror
rcr
iret
cwtl
dec
xchg
rcr
les
iret
pushl
test
lahf
rcr
rolb
fsts
add
sbb
dec
adc
inc
inc
inc
inc
dec
dec
inc
ds
idiv
mov
mul
icebp
out
rcl
int3
shlb
push
into
aam
lret
mov
cmp
inc
add
fdivl
jl
mov
hlt
out
scas
out
nop
xchg
mov
call
loopne
or
cmp
aas
cmp
aas
ss
ljmp
stc
mov
mov
orl
push
mov
mov
ljmp
ret
ds
aas
xor
sub
jo
arpl
jae
inc
dec
pop
jns
out
incl
jo
push
add
mov
cmpsb
mov
or
or
adc
or
inc
xor
sub
jne
pushl
fs
jg
jb
ds
fmul
flds
int
shrb
xchg
in
mov
mov
jg
sti
fwait
in
cmc
xchg
mov
cs
cmpsl
mov
mov
test
mov
aad
shrb
adc
dec
inc
pop
push
dec
sbb
jg
hlt
sub
add
cmp
xor
cmp
and
mov
push
jae
mov
xchg
ja
pushl
or
daa
cmp
daa
push
add
and
adc
out
push
jmp
sbb
pop
fs
addps
inc
pop
pop
mov
mov
cli
jmp
icebp
jg
inc
dec
push
imul
ret
adc
fcmovnbe
and
in
fbld
mov
incl
cld
mov
stc
cli
loopne
mov
mov
leave
xchg
mov
mov
icebp
mov
ljmp
addb
fcomp
mov
imul
pop
pop
mov
jo
xor
js
sub
dec
and
insl
cmp
daa
jbe
lock
adc
mov
nop
xchg
xchg
mov
xchg
roll
es
xor
ds
adc
cli
pop
mov
jmp
lret
out
call
insl
imul
pushl
and
jns
sub
arpl
xchg
xchg
lcall
sahf
lcall
popa
aas
push
hlt
andl
std
call
mov
fcom
rol
ret
repnz
enter
sar
repnz
dec
int
into
mov
ret
mov
idiv
stc
addr16
adc
adc
xor
push
ret
bound
cmp
or
mov
or
add
dec
dec
dec
inc
pop
inc
pop
push
mulps
dec
inc
inc
inc
inc
push
dec
push
dec
insb
outsb
ret
into
nop
mov
xchg
pushf
lahf
pop
repnz
lret
in
pop
jge
push
xlat
rcrb
ret
rclb
call
ror
rcl
enter
sub
xor
add
and
insl
push
sub
clc
cmp
cmp
and
sbb
ds
xor
and
adc
push
sub
cmp
out
cli
daa
es
sub
daa
xor
and
xor
adc
push
hlt
ljmp
stos
ljmp
rcr
mov
call
ror
into
enter
addb
sti
outsl
incb
cmp
sub
cmp
sub
bound
or
cmp
cmp
and
bound
cmp
cmp
cmp
das
aas
sub
jns
push
cs
ret
ja
stc
cld
mov
sbb
add
pop
push
outsl
adc
push
sbb
mov
lods
cmpsb
cmpsb
xchg
adc
mov
adc
test
mov
adc
inc
dec
add
jbe
icebp
out
cli
out
rcl
roll
clc
faddp
xlat
fiaddl
mov
rcr
shr
ljmp
mov
jmp
nop
mov
cli
jg
out
mov
mov
dec
jns
jbe
cmp
popa
sbb
sbb
and
dec
xchg
xchg
imul
cmovb
add
add
pop
add
pop
add
and
push
or
jmp
cmp
push
or
daa
aaa
aaa
sub
adc
and
sub
add
and
pop
shlb
aaa
mov
pop
xor
cmp
push
push
mov
movsb
mov
xchg
call
xchg
sub
sub
scas
clc
lcall
or
and
xor
sub
push
ss
and
dec
aas
add
or
mov
adc
push
add
mov
xchg
add
lock
in
icebp
out
repz
jmp
lcall
loopne
rcl
jmp
fstp
cmp
test
outsl
clc
fdivr
aam
and
add
sub
sub
js
ret
icebp
incl
into
push
pop
dec
dec
pop
dec
pop
push
pop
int3
dec
pop
jb
inc
std
idiv
lcall
pop
dec
inc
push
pop
gs
push
dec
jae
jnp
inc
push
jnp
jp
push
push
inc
push
jnp
loop
mov
dec
pop
inc
pop
pop
push
inc
sbb
inc
push
inc
inc
dec
dec
adc
push
push
pop
dec
popa
jg
out
adc
inc
xor
pop
jnp
jne
mov
arpl
jo
cmp
je
outsb
mov
push
rclb
pop
inc
sbb
out
clc
jle
or
pusha
dec
inc
pop
dec
jle
scas
sbb
or
add
or
push
push
prefetchwt1
adc
adc
sbb
sbb
cmp
incl
gs
je
jns
dec
jp
add
sub
and
pushl
dec
push
add
dec
dec
pop
push
push
inc
adc
cwtl
ljmp
pop
push
push
inc
pop
sbb
push
push
pop
jl
and
push
bound
je
je
addr16
insl
js
mov
push
popa
jl
data16
mov
mov
js
roll
hlt
repnz
xchg
out
mov
scas
mov
ljmp
mov
pushl
mov
mov
lret
mov
lds
mov
xor
adc
clc
loop
lock
lock
mov
icebp
hlt
sbb
jmp
hlt
jecxz
lcall
lock
add
or
add
cmp
adc
push
ljmp
clc
lcall
or
push
add
add
add
adc
pop
sub
and
aaa
xor
mov
ss
ja
jae
xor
dec
add
es
jmp
es
insb
jp
cmpb
movsl
mov
les
mov
repnz
mov
pushl
push
inc
pop
pop
inc
add
mov
xchg
mov
sub
push
dec
push
push
daa
jb
insb
imul
push
ljmp
xor
pop
add
mov
jmp
out
fcmove
out
rcl
clc
push
mov
sbb
push
rorl
icebp
ret
cmc
cli
out
add
or
shrl
or
sub
sub
and
div
sti
loop
out
rol
ljmp
loop
int3
fsubs
ror
sub
xor
jp
insl
add
mov
in
in
mov
iret
ror
pop
mov
decl
adcl
call
lock
aas
addr16
pop
ljmp
sbb
mov
xchg
popf
fs
jbe
push
std
jg
sbb
add
sbb
pop
dec
and
or
out
or
sbb
ret
mov
iret
cmp
enter
sar
ss
mov
pop
enter
fwait
vmaskmovdqu
icebp
testl
sbb
push
xor
xor
xchg
xchg
fwait
xchg
mov
rcl
out
incl
pushf
rol
mov
xchg
cld
fcom
fcmovnbe
fcmovnu
xlat
mov
lock
fildll
mul
loopne
push
jg
stos
in
cmp
call
jecxz
out
out
in
in
cmpsb
mov
test
adc
push
insb
sbb
dec
pop
push
pop
inc
pop
push
push
inc
inc
inc
inc
push
or
jg
pop
dec
push
dec
inc
dec
inc
add
imul
pusha
jns
jo
xor
jg
xor
sub
mov
mov
mov
mov
mov
sti
loopne
mov
movsb
add
aaa
pop
pop
pop
mov
clc
ljmp
icebp
sti
jle
scas
call
test
jecxz
out
loope
in
out
mov
lret
leave
rol
into
xlat
stc
aad
lret
xchg
mov
sti
outsl
mov
gs
xlat
test
lods
mov
push
xlat
jg
lock
mov
es
dec
inc
push
dec
mov
add
dec
dec
sbb
or
inc
cmp
jp
inc
pop
pop
imul
shl
outsl
pop
div
hlt
in
lock
push
inc
pop
inc
movsl
fwait
lock
jg
add
jno
das
sub
jbe
jns,pn
sub
and
scas
out
push
push
sbbb
sub
data16
cmp
xor
mov
bound
sub
cs
imul
insl
outsb
inc
mov
movsl
add
cld
repz
sahf
xchg
xchg
clc
add
mov
addb
bound
lcall
into
clc
cld
in
repz
xchg
fstl
hlt
add
ss
insl
jb
xor
sahf
into
repnz
mov
js
stc
repz
ret
xchg
cmp
sub
orb
fcmovu
mov
roll
scas
clc
pop
cld
aad
cli
mov
stc
out
out
out
jmp
ljmp
inc
outsb
iret
rcl
aam
cwtl
mov
fxch
fadd
iret
fcmovnb
ret
fcomip
lahf
lcall
int3
out
in
lock
scas
cmc
in
jmp
loop
decb
test
stc
icebp
xlat
stc
mov
outsb
inc
cwtl
push
or
pop
jle
ja
adc
add
push
sahf
call
add
ficoms
adc
xchg
testb
bound
js
cld
fldl
add
adc
rolb
into
add
aam
cli
hlt
or
ja
add
inc
clts
add
adc
push
xchg
dec
fcmovnbe
loop,pt
pop
daa
sbb
jb
cvtpi2ps
and
or
rorb
push
and
xor
scas
pop
aas
pop
push
outsl
push
adc
or
dec
jg
inc
pop
sbb
push
sbb
push
dec
mov
add
into
int3
outsb
and
insl
dec
and
push
rorb
xor
dec
movsb
inc
push
and
push
sysret
decb
sbb
ret
rorl
test
mov
push
inc
or
adc
in
call
pop
or
push
or
sahf
out
push
push
push
push
push
or
sbb
push
push
mov
push
bound
fwait
xchg
out
pusha
add
push
pusha
test
adc
bound
adc
push
call
or
xor
mov
xchg
xor
xchg
into
or
mov
mov
ds
add
sbb
pop
mov
xor
bound
and
shl
xor
add
or
lock
enter
xor
lret
inc
out
pushl
add
pop
sub
movb
lock
cmpsb
cmpsb
pusha
or
add
and
sub
fsubrs
sub
add
sub
push
and
push
or
mov
push
insb
or
and
insb
inc
jecxz
push
sub
xor
mov
fwait
loopne
mov
jg
add
cli
xchg
and
jl
add
out
jmp
xor
fsubrl
push
push
cltd
and
idivb
sahf
add
inc
xchg
and
insl
out
and
pop
push
cld
fucomip
add
or
arpl
popf
pop
jle
fs
add
decb
ficompl
mov
xchg
adc
jle
fldenv
js
add
data16
sahf
add
cmp
stos
insl
aad
and
xchg
mov
push
insb
loope
popa
push
imul
mov
jae
inc
outsl
pop
add
mov
jmp
inc
jb
cmp
jmp
add
insl
int
ret
and
or
popa
sbbb
fisttps
cmp
push
add
cltd
push
pusha
jmp
popf
rolb
jbe
jb
cmp
imul
enter
sahf
pop
mov
jbe
mov
test
aas
jle
sbbb
jmp
stos
mov
fbld
lcall
and
sbb
insb
mov
xchg
jmp
outsl
loope
inc
loopne
addb
or
pusha
cmp
outsb
out
mov
inc
cmp
jmp
cmp
push
mov
mov
mov
out
inc
es
dec
xor
cmpb
mov
jne
jmp
inc
test
dec
mov
push
outsb
out
and
mov
push
jmp
push
sbb
test
clc
inc
or
es
adc
fistpll
fidivrs
mov
jl
adc
movsb
sbb
pop
lock
insb
jp
dec
push
mov
xchg
and
inc
adc
adc
fcomip
rorl
popf
data16
popf
pusha
inc
jb
in
aas
mov
pop
mov
inc
adc
sbb
pop
sbb
push
mov
outsl
andb
mov
pop
scas
add
rolb
popa
sti
adc
xchg
mov
gs
lock
push
xchg
bound
dec
xchg
cmpsb
jmp
aas
stos
sub
cmp
pusha
sbb
or
popa
rol
jbe
xor
and
dec
mov
int
mov
mov
push
sub
jmp
loop
cmp
daa
pop
daa
into
xor
aaa
xchg
jp
sti
xorb
das
into
jmp
rorb
sub
pop
out
scas
cwtl
fwait
popf
popf
mov
inc
mov
cmp
sbb
mov
xor
decl
or
or
rorl
loop
xorb
loope
outsb
sbb
lcall
daa
cmp
add
shrb
subl
and
jns
xchg
sbb
popa
mov
mov
add
mov
push
mov
sbbb
xor
jnp
test
mov
daa
mov
movsb
daa
pusha
fildl
into
daa
xchg
mov
cmp
insl
insl
sti
call
insl
in
add
or
pop
mov
popf
jbe
pop
mov
mov
sub
sbb
ss
ss
cmp
mov
shlb
lcall
lret
adc
jmp
and
add
adc
and
add
pushf
pop
rcrl
lock
mov
mov
pop
and
rclb
mov
hlt
andb
sbb
ficoml
sbb
jg
push
jl
or
push
andb
or
push
daa
or
out
jg
sub
dec
xor
fimuls
mov
jmp
pusha
or
inc
mov
xor
mov
iret
sub
out
pop
and
loope
cmp
pop
push
xor
inc
mov
xor
pop
mov
mov
ljmp
loope
bound
adc
mov
ljmp
dec
lock
xor
sub
xor
ljmp
pushf
pop
cmp
or
mov
mov
xor
sbb
das
mov
adc
jmp
jecxz
lcall
jmp
jb
out
push
popa
loope
aas
mov
aad
jbe
dec
adc
loope
mov
sub
mov
jg
mov
push
pop
cmp
xchg
out
pop
jl
add
add
icebp
ss
mov
int3
pushf
andl
jnp
and
push
jl
inc
or
inc
sub
cmp
sbb
sbb
or
mov
push
cld
lods
inc
lret
ficompl
inc
inc
das
xchg
fidivs
out
aas
adc
rorb
push
dec
jmp
add
out
push
outsb
or
je
mov
pop
xor
sbb
push
push
enter
outsb
push
jg
adc
mov
nop
mov
daa
mov
cmc
pop
hlt
pop
inc
insl
out
mov
dec
sbb
or
dec
hlt
jb
into
and
mov
xor
cltd
mov
push
insb
repnz
shrb
hlt
sbb
ss
stos
add
fisubl
or
mov
loop
popf
arpl
jp
or
push
inc
or
dec
mov
mov
loop
xchg
jge
jl
insl
std
mov
loop
push
xchg
jb
aaa
adcb
mov
pusha
xchg
nop
daa
data16
and
shll
xor
xor
repnz
and
or
pop
cs
pop
xor
sahf
cmp
push
add
pop
inc
xorb
mov
pop
jmp
ljmp
inc
imul
addb
push
ja
or
movb
sub
push
aad
or
movsb
jle
enter
aad
movsb
lret
push
hlt
pop
sbb
pop
jno
push
loopne
mov
mov
loopne
add
jl
les
andb
in
popf
push
mov
adc
add
fs
pusha
dec
and
pop
push
jno
lcall
ja
adc
sbb
aaa
lods
addb
pop
sbb
xchg
and
pushf
in
addr16
fisttpl
rol
dec
and
adc
mov
shlb
mov
jbe
popf
repnz
inc
pushf
jp
loop
movsl
subl
clc
mov
lcall
clc
outsl
outsb
loopne
push
and
addr16
add
ds
ret
mov
or
and
add
nop
xor
push
ja
insl
xchg
ret
push
or
pop
repz
dec
cmpsb
pop
loop
outsl
clc
fisttps
aaa
or
mov
rcrb
lret
jg
aaa
cld
addb
push
enter
fs
shlb
lds
xor
loopne
jg
outsl
push
pop
dec
jo
jbe
mov
js
lsl
and
jns
sbb
mov
add
push
mov
aas
cmp
pop
mov
rolb
xchg
movsl
mov
fwait
outsb
push
addb
mov
nop
and
fs
jne
sbbb
adcb
aam
add
ljmp
nop
add
add
pop
push
add
and
jo
addr16
mov
pop
adc
and
sub
popf
mov
add
aas
mov
add
pop
arpl
push
adc
mov
pop
hlt
fistpl
add
loopne
popf
inc
inc
jno
push
add
jb
add
out
daa
das
sub
lcall
arpl
adc
jp
add
sbb
and
or
pusha
je
stos
mov
xchg
adc
push
mov
sub
push
std
xchg
movsl
daa
xchg
lock
dec
dec
xor
stos
jmp
loope
arpl
or
loope
test
cmp
jge
cmp
add
jp
xchg
jb
pop
jno
test
ljmp
stos
sbbb
je
add
add
add
sub
add
dec
push
aad
in
pop
addr16
jg
dec
push
xchg
mov
insl
aam
loope
lahf
mov
lods
and
fwait
inc
push
pop
outsl
decl
aas
mov
insl
pop
or
nop
pop
sahf
mov
or
stos
adc
add
mov
loope
outsl
xchg
push
sahf
dec
or
out
push
add
js
mov
insl
pop
fdivs
or
sahf
orb
fstl
aad
dec
push
outsl
dec
pop
pusha
mov
xchg
sahf
pop
fs
cmc
pop
dec
xchg
add
pop
sarb
jl
and
and
adc
dec
jo
and
xchg
and
adcb
les
sti
sti
and
or
stos
addb
aaa
outsb
cmp
cmpb
jb
dec
push
cmpsb
sub
mov
or
pop
sbb
xor
jb
add
xor
and
push
mov
inc
mov
loopne
test
push
push
xchg
mov
call
add
sub
cmp
mov
insb
jmp
mov
cs
out
and
and
add
pop
daa
jb
pop
push
stos
inc
outsb
and
incl
add
mov
andb
shlb
mov
ja
fcoms
and
push
shlb
mov
stos
popf
jle
push
or
sub
or
xor
data16
mulb
mov
or
add
lcall
mov
xor
mov
sub
cmp
bound
adc
fsubl
push
lock
and
std
ficompl
jbe
push
jmp
mov
rcll
mov
xor
xor
loopne
push
mov
pop
loop
push
adc
ljmp
adc
incl
mov
xor
outsb
xor
into
add
outsb
incl
sbb
or
xor
sub
mov
push
mov
ljmp
push
popf
mov
add
decl
sub
aas
lcall
pusha
lahf
pop
mov
ljmp
dec
push
or
insl
fists
sub
data16
sbb
and
jo
test
and
mov
orl
xor
outsl
clc
test
jp
adc
js
pop
pushf
mov
push
pushl
scas
push
xor
outsb
jmp
adc
popa
nop
push
inc
push
dec
mov
cwtl
sbb
adc
add
jb
xor
push
out
sbb
and
dec
xchg
insl
add
jnp
jbe
call
and
pop
jl
jg
mov
cmp
les
addb
call
pop
mov
pop
adc
xchg
adc
and
push
mov
mov
daa
inc
inc
pop
and
insl
loope
test
jp
fwait
jbe
out
mov
insl
adc
stos
push
rcl
outsl
mov
push
jle
adc
rolb
or
clc
jg
sbb
insl
in
iret
dec
add
add
inc
divl
clc
inc
negl
arpl
mov
or
sbb
or
notl
loope
mov
and
push
sbb
add
out
inc
test
shlb
outsb
or
jmp
stos
movsb
lret
aaa
adc
into
jmp
add
mov
sbb
xor
push
std
mov
adc
lods
pusha
add
push
or
rcrb
dec
mov
pop
and
jno
push
fimull
cli
xor
repnz
jg
fdivr
aam
xor
rolb
mov
daa
in
push
loop
ljmp
jo
fsubr
xor
adc
dec
sti
sub
mov
addb
push
cmp
pop
push
xor
or
inc
dec
jo
xchg
xchg
loopne
add
inc
and
aas
jp
sbb
pop
sub
jb
sub
push
repnz
inc
xchg
jecxz
jle
jl
imul
loop
insb
sbb
insl
add
daa
inc
enter
xor
push
push
push
mov
int3
jmp
aas
mov
test
std
inc
mov
xchg
add
pop
ss
mov
fisubrl
sbb
inc
mov
das
data16
mov
jp
and
xor
adc
popa
sub
hlt
adc
daa
xorb
bound
mov
jg
xchg
adc
mov
adc
adc
xchg
dec
and
adc
je
andb
or
sbbb
xor
cmp
add
or
mov
add
add
test
in
sub
roll
pop
xor
add
jl
mov
push
mov
negb
xor
add
mov
mov
inc
add
add
ret
add
pop
xchg
loopne
mov
add
std
arpl
popa
addb
in
mov
insl
and
xchg
add
ss
pop
imul
pop
ss
cmp
xor
insb
sub
push
and
add
aaa
add
push
dec
gs
dec
js
jmp
subl
out
or
test
out
xchg
inc
bound
out
mov
outsb
hlt
add
jb
mov
popa
mov
subb
add
subb
xchg
je
popf
inc
dec
xor
inc
pop
push
mov
pusha
outsl
xor
insb
add
dec
add
or
in
loope
loopne
fwait
push
add
jne
adc
xor
loopne
imul
fdiv
push
ret
lea
andl
push
lock
add
push
xchg
mov
xor
xchg
inc
add
and
jmp
mov
xchg
mov
adc
pop
push
add
je
sbbb
imul
lds
fisttps
or
and
pop
imul
dec
mov
dec
and
sbb
shll
js
rorl
adc
movsl
add
ror
mov
or
add
push
push
jecxz
addr16
movsb
aaa
mov
pop
pop
xor
and
outsb
push
and
add
mov
add
lcall
cltd
mov
dec
mov
inc
jbe
mov
jbe
inc
xchg
ret
cld
aaa
nop
sub
jmp
jb
addl
adc
mov
inc
push
faddl
inc
and
mov
test
jg
sub
mov
insl
jmp
sub
lret
add
popf
adc
ja
mov
or
jmp
mov
dec
outsl
cli
filds
mov
adc
cltd
ret
rolb
pusha
mov
add
orb
icebp
dec
mov
dec
pop
jnp
addb
push
loope
add
sarb
test
jge
lret
movsl
inc
movsb
sub
mov
add
xorb
xchg
add
xchg
push
arpl
lcall
adc
lcall
add
popa
add
icebp
sbbb
sti
sub
lds
rclb
addl
lcall
pop
bound
add
js
leave
sub
shrl
testb
scas
loopne
jno
mov
fs
dec
cmpb
js
mov
sbb
mov
mov
and
add
orl
movb
sbb
out
sbb
das
hlt
add
aaa
fsubrl
add
mov
stos
mov
subb
fs
pop
test
or
repnz
data16
negb
inc
add
inc
jb
rorb
out
add
incl
fimull
ljmp
or
or
or
jb
out
mov
adc
xor
das
cli
les
adc
jbe
test
dec
add
jmp
jmp
aaa
mov
xchg
popa
test
jle,pt
mov
aas
test
sub
fiadds
pop
loopne
imul
nop
aas
push
push
xchg
addr16
cmp
inc
mov
cmp
and
out
sti
loopne
pop
aas
jmp
call
add
repnz
out
and
jnp
inc
pop
insl
imul
mov
pop
loope
lcall
divb
jg
insl
dec
out
jne
cwtl
aaa
inc
add
fwait
mov
pusha
push
add
out
loopne
sbb
adc
jmp
adc
mov
inc
or
inc
movsl
and
and
test
add
std
cmpsb
ja
sbb
nop
movsl
cmpsb
sub
jg
popa
mov
call
das
inc
and
mov
out
xor
int
adc
adc
add
add
rorb
out
add
or
jmp
add
fists
scas
jbe
clc
das
adc
or
imul
adc
inc
xchg
add
dec
fwait
adc
mov
loopne
mov
mov
adc
ret
add
or
and
in
mov
aas
fadd
or
push
imul
jmp
add
popa
insl
or
and
sbb
test
sbb
in
add
out
dec
hlt
outsb
jmp
hlt
cmpsb
xchg
jl
jmp
add
xchg
mov
fwait
outsb
jbe
call
imul
xorl
push
pop
sbbb
pop
push
jmp
push
xchg
in
loopne
daa
jbe
inc
enter
add
inc
out
sarb
mov
add
cmp
push
loope
sbbb
push
dec
outsb
ja
ret
filds
inc
inc
cmpsb
fists
xchg
jge
cmpsl
adc
out
js
add
inc
and
and
add
and
cmpl
jp
push
adc
mov
mov
push
mov
insl
stos
fiadds
cmp
es
in
loopne
pop
movsb
fidivl
xor
xor
jle
xor
shlb
dec
fs
dec
scas
enter
inc
add
xchg
subl
or
mov
pop
xor
push
mov
pusha
pop
and
decl
ficoml
dec
push
mov
and
or
ljmp
fidivrs
aas
push
andl
mov
inc
pop
mov
insl
aam
pop
inc
add
rolb
or
test
cli
incl
in
rolb
pop
sub
addb
cli
addl
notb
cwtl
div
and
lock
mov
xor
movsb
pop
mov
inc
add
jge
or
mov
movb
rclb
fucomi
aaa
cwtl
mov
push
inc
loopne
push
push
js
rorl
add
in
decl
and
or
pop
mov
add
loopne
je
mov
decl
jnp
rolb
loop
mov
inc
and
stc
ret
pop
dec
push
mov
inc
push
push
in
jo
mov
rorl
incl
addb
push
push
adc
add
stos
mov
aam
inc
cld
pop
repnz
push
pop
adc
sbb
aad
pusha
push
aam
push
loopne
mov
hlt
or
or
jl
add
jo
jno
push
insb
add
rcrb
mov
jmp
ds
mov
pop
and
and
popa
jmp
pusha
add
arpl
jne
and
imul
mov
insl
mulb
nop
mull
adcb
or
call
and
std
mov
add
adc
lock
ret
or
pop
xor
adc
outsb
pop
add
adc
or
pop
shl
sbbb
and
sub
ds
xor
xchg
cmp
lods
adc
decl
mov
xchg
pushw
mov
test
clc
mov
push
in
inc
icebp
add
cmpsl
add
xlat
and
mov
fcmovnu
incl
adc
push
add
call
aas
mov
adc
add
and
lcall
in
cmpsb
push
outsb
adc
sahf
outsl
cli
push
dec
pop
out
mov
inc
lock
in
dec
lock
dec
sub
rclb
in
clc
push
andb
in
fldt
inc
aas
mov
and
out
fs
and
mov
fldt
and
dec
mov
cmp
cli
lcall
or
cli
divb
es
lods
stos
clc
stos
loop
sub
negb
ror
push
add
out
push
cmp
in
add
push
or
shrb
add
mov
push
pusha
add
jg
imul
test
jno
add
cs
pop
jnp
sti
add
add
sub
cwtl
ficompl
mov
mov
or
jbe
mov
bound
fbstp
mov
aaa
lock
cld
loope
adc
in
lock
dec
or
push
fists
adc
push
or
lock
sbb
hlt
mov
xor
fwait
xchg
pop
nop
shlb
scas
add
clc
mov
out
sbb
gs
mov
pop
xor
pop
pop
sbbb
jmp
and
gs
add
and
jecxz
scas
sarb
sub
pop
das
insl
in
lods
mov
xor
sbb
pusha
pushf
mov
inc
pop
add
imul
xchg
sbbb
pop
push
jo
add
loope
mov
inc
ljmp
mov
lock
sar
insl
fdivr
in
loop
pusha
xchg
add
jno
dec
xchg
popf
popf
mov
pop
test
dec
inc
jp
pushl
ret
xchg
jmp
and
lea
popa
popa
aas
add
les
mov
stos
add
and
mov
dec
daa
pusha
or
mov
jg
fdivs
mov
and
sub
or
add
and
inc
in
add
push
xchg
fmuls
mov
adc
insl
ljmp
adc
adc
adc
jmp
push
adc
jmp
rol
sbb
pop
and
mov
or
pushf
and
mov
pushl
add
adc
nop
das
jbe
scas
aam
mov
rclb
jmp
mov
int
xor
add
push
inc
loopne
shl
shll
cmc
jmp
pop
xor
pop
lock
out
mov
pop
mov
push
sbbb
scas
mov
aam
ret
psubsb
pusha
inc
jbe
arpl
sahf
add
mov
movsl
daa
push
xchg
mov
mov
xor
inc
push
xchg
push
and
fwait
inc
mov
cmc
mov
or
add
popa
jecxz
add
nop
loope
mov
or
sbb
sbb
insb
arpl
ljmp
push
add
add
and
mov
and
or
lods
jo
sub
jne
xchg
outsb
jp
adc
lock
enter
mov
ret
ljmp
data16
pop
add
dec
mov
push
push
cmp
pop
add
pop
jbe
mov
jno
dec
push
jbe
jno
add
pop
pop
ds
adc
mov
stos
mov
enter
out
cld
mov
sahf
sub
pop
bound
data16
pop
push
ds
inc
and
push
add
addl
js
push
push
add
lock
jmp
add
ds
in
mov
test
fmull
add
jmp
pop
ret
adc
movb
mov
mov
test
mov
add
add
pop
aam
shlb
out
outsl
xchg
loopne
push
adc
sbb
jbe
add
arpl
inc
add
add
pushf
imul
dec
test
andl
roll
aam
jmp
imul
mov
xchg
daa
orb
decl
adc
xchg
and
adcb
fs
std
sbbb
pop
push
lds
pop
dec
sbbl
shrb
call
pop
subb
pop
outsb
pusha
inc
outsb
rorb
inc
or
add
addl
addb
into
daa
rcrb
mov
rolb
sbb
xchg
roll
out
add
adc
stos
adc
mov
popa
add
fidivl
inc
in
cmpxchg
mov
add
add
and
clc
fwait
jg
fisttps
xchg
cmpsb
mov
mov
popf
mov
lock
sbb
test
inc
mov
push
insl
add
lret
inc
jae
sbb
pop
imul
ljmp
inc
sub
jbe
inc
adcl
insl
insb
out
add
add
mov
mov
xchg
outsl
pusha
and
push
pop
sbb
push
bound
add
mov
and
adc
imul
add
add
hlt
popa
add
push
push
and
arpl
jg
mov
movsl
cmpsb
inc
les
ret
add
add
inc
mov
mov
pop
pusha
jns
sahf
jg
push
fisubs
and
or
pusha
pop
and
aaa
inc
orb
das
dec
xchg
mov
or
push
xor
loope
decb
mov
mov
dec
and
xchg
or
cmp
mov
orb
call
sbb
ja
das
add
add
cwtl
loope
insl
aas
push
rcrb
idiv
mull
ret
lahf
mov
add
das
test
pop
adc
adc
loope
cs
mov
push
sbb
add
jle
nop
adc
out
xor
and
sbb
xchg
add
jmp
and
out
adc
pop
ja
arpl
mov
pop
sub
shrb
and
sbb
mov
add
pop
mov
xchg
popaw
mov
inc
xchg
pusha
lcall
add
loopne
jnp
shr
mov
push
inc
into
in
loopne
or
sbb
jae
pop
loopne
jg
push
inc
jecxz
dec
bound
push
mov
test
xchg
and
pushl
std
scas
sbb
mov
orl
mov
pop
push
mov
and
or
adc
imul
or
add
loop
jle
popa
cmp
outsl
arpl
test
scas
mov
jmp
or
ljmp
lcall
lret
push
outsb
in
out
nop
ret
adc
mov
pusha
xchg
sbb
and
mov
mov
imull
sbb
jmp
or
or
gs
call
fmuls
push
push
js
xor
push
shlb
adc
and
imul
pusha
ret
aaa
xor
aas
shl
aas
sub
inc
xchg
xor
mov
call
mov
mov
mov
pop
adc
add
je
pop
out
xchg
out
and
mov
sti
push
call
outsb
mov
imul
hlt
push
mov
mov
add
push
add
pop
or
test
inc
dec
add
outsl
mov
add
push
dec
inc
mov
jge
scas
clc
jmp
or
jne
lock
jmp
aaa
xor
sbb
add
add
mov
test
call
dec
mov
loope
js
ss
inc
repz
vorps
pop
xor
inc
jg
xorb
cmp
pop
and
ror
mov
sbb
pop
add
sbb
push
aam
ljmp
mov
add
mov
test
xchg
xchg
nop
push
jmp
les
jo
pop
pop
int3
xchg
aaa
rolb
loopne
pushl
jnp
insb
lds
cmp
mov
rorl
add
mov
adc
and
dec
inc
mov
cmp
loope
cmp
shl
fisubrs
in
xorl
or
adc
or
mov
rolb
xchg
xor
add
cmp
mov
insl
pop
inc
xchg
push
and
add
fldl
and
push
mov
dec
mov
sub
add
cmp
pushf
jo
mov
or
lahf
jle
push
mov
pop
lods
or
and
outsl
fnstsw
pop
mov
nop
cmp
mov
mov
pop
idiv
add
add
pop
jns
or
pop
outsl
daa
movsb
arpl
add
lods
mov
add
add
insl
sub
pop
push
adc
pop
hlt
popa
nop
aaa
xchg
data16
aaa
lock
sub
adc
and
lods
mov
add
sbb
dec
xor
add
jle
mov
mov
mov
and
lcall
movsl
mov
sub
dec
mov
mov
xor
stc
jbe
in
sub
rolb
and
data16
call
js
mov
xor
mov
cltd
and
lcall
sbb
jo
and
call
xchg
popa
stos
pop
sub
jb
pop
xor
add
imul
cs
cmpsb
sub
sub
das
xor
pop
inc
add
shlb
sar
shlb
add
mov
mov
mov
mov
mov
cmp
idiv
ja
mov
ss
or
fmull
or
pop
pop
mov
push
loope
imulb
nop
pop
adc
add
xor
icebp
pop
je
shlb
or
push
fwait
mov
incl
insb
pop
js
push
mov
inc
nop
add
mov
mov
test
shl
mov
jmp
popfw
fs
loopne
or
jbe
mov
or
mov
jge
in
sbb
and
arpl
out
adc
mov
stos
pusha
or
xlat
or
popa
movsl
cli
decl
and
lcall
pop
jg
adc
rol
ja
cmc
call
inc
mov
imul
and
mov
loope
rcrb
or
fwait
pop
and
daa
outsb
jmp
mov
pushf
mov
pop
loope
jg
dec
lahf
adc
xchg
arpl
add
lcall
js
push
enter
add
into
add
mov
ljmp
jns
add
ret
add
push
or
pop
jno
xor
lcall
add
pop
jecxz
add
and
xor
adc
mov
jmp
add
pop
push
add
sarl
lcall
nop
lods
lock
mov
or
push
lock
movsl
pusha
jmp
mov
sbb
cmpsb
xchg
or
idiv
pop
insb
xchg
lret
shrl
sub
xchg
cs
adc
adc
cli
or
fisubrs
andl
inc
xor
jbe
arpl
lods
sub
call
add
add
xchg
out
adc
jmp
in
out
lods
cmpsb
add
mov
mov
cmp
mov
fbld
jmp
pop
jge
aaa
push
sub
mov
adc
cmp
movsl
clc
jmp
sbb
sub
es
mov
ficomps
sub
sub
push
sub
jmp
lea
adc
add
popa
fwait
out
or
cmp
sub
pop
xchg
pop
jae
sub
mov
add
jae
fistpl
mov
inc
xchg
add
lcall
imul
scas
clc
in
pushf
adc
mov
xor
jo
adc
add
clc
adc
ljmp
add
es
inc
mov
inc
sbb
adc
xor
xchg
sbb
add
mov
cs
aas
add
pop
sub
pop
int3
add
xor
ret
ret
lcall
add
inc
push
or
and
push
jae
sahf
loop
clc
outsl
jl
jp
add
sbb
and
inc
adc
ja
mov
add
fstps
add
inc
push
aam
push
fs
mov
jb
dec
rolb
jl
mov
fistpl
mov
add
add
test
jb
loopne
mov
jl
add
add
jp
pop
mov
xchg
and
or
mov
inc
mov
mov
cmpb
inc
ljmp
pop
mov
jae
popf
and
pop
adcb
lea
inc
dec
or
call
push
outsb
pop
add
loope
pushf
adc
mov
pusha
sbb
clc
pushl
adc
sbbb
cwtl
add
inc
mov
loope
mov
sub
push
pop
jnp
in
out
adc
gs
jg
incl
xchg
pop
mov
sub
jp
inc
inc
and
inc
ror
fcomps
sbb
mov
in
mov
out
cmp
nop
sub
test
cmp
sub
push
jmp
clc
push
fs
add
adcb
lds
shll
mov
jmp
inc
cmp
mov
or
mov
ret
mov
lods
mov
lds
insl
or
mov
rcrb
sub
cmc
addr16
sbb
mov
movb
mov
aas
sub
push
or
lcall
dec
add
mov
insb
aas
sahf
sti
mov
stos
pop
sub
or
adc
add
jb
add
xorb
mov
push
mov
mov
and
jg
xchg
adc
cmpsl
adc
xchg
inc
xor
ds
inc
in
adc
xor
lahf
push
andb
leave
cmpb
inc
and
inc
dec
outsl
add
sbb
add
add
call
mov
jbe
mov
sbb
loopne
xor
in
mov
add
jle
lcall
mov
cmpsb
inc
or
inc
scas
add
or
rolb
lahf
inc
lahf
outsl
cli
jg
mov
insl
dec
out
rorb
inc
mov
mov
mov
jp
jmp
and
and
pusha
adc
dec
xchg
or
push
dec
and
and
aaa
sub
inc
dec
add
stos
sbb
sbb
rclb
and
inc
push
and
adcb
loopne
sti
mov
insb
sub
and
inc
or
out
inc
add
cmpb
xor
nop
add
sbb
add
ja
insb
mov
pop
push
push
aaa
cmc
pushl
mov
inc
icebp
sbb
add
stc
cwtl
sbb
adc
lock
andb
adc
pop
cmc
or
into
mov
push
pusha
add
or
or
fistl
pop
orl
mov
xor
mov
test
sbbl
rorb
push
out
jbe
pop
push
fwait
mov
push
fcoml
lods
xor
fs
rcll
sar
enter
or
and
cmp
sub
add
ret
push
sarl
loop
loopne
pop
inc
icebp
inc
loopne
loope
or
outsl
js
outsb
pop
and
jp
and
or
cli
add
in
xor
or
andb
inc
inc
jle
stos
mov
add
cld
or
popf
mov
add
inc
loopne
imulb
jg
pop
add
mov
insl
jo
adc
popf
inc
out
js
mov
shlb
ret
outsb
xchg
data16
adc
jns
adc
addl
mov
aam
pop
and
dec
sbb
adc
rcll
sti
push
mov
stos
loope
mov
mov
mov
sub
push
and
pop
add
push
adc
push
adc
add
push
pusha
pinsrw
orb
mov
add
loopne
loopne
adc
and
push
xchg
jge
filds
jmp
arpl
rorl
lcall
ret
popa
and
pushf
and
fisttps
rcl
popa
add
cltd
cmp
and
repnz
mov
ror
adc
call
lret
lods
pop
push
lods
adc
adcl
pushf
inc
push
jno
adc
pop
push
sub
add
or
xor
popa
ss
cs
sbb
xchg
adc
add
lcall
rorb
sub
push
push
add
xchg
pop
outsb
push
push
dec
imul
test
adc
shll
push
dec
add
adc
push
add
sahf
cmpsb
fstp
jae
and
loop
or
mov
mov
push
pusha
roll
sbb
or
out
adc
mov
hlt
or
cltd
or
nop
ljmp
push
or
add
jmp
cltd
xor
sarl
pop
call
jmp
aad
adc
mov
sub
mov
lea
icebp
and
xchg
pop
push
test
sbb
insl
outsb
sub
sub
decl
js
loopne
jg
inc
mov
adc
inc
inc
and
ljmp
movsl
sub
mov
add
sub
adc
xor
pop
and
xchg
arpl
test
push
mov
adc
ljmp
jo
add
lcall
sbb
jo
mov
xchg
lock
mov
fimull
adc
dec
jne
int3
mov
mov
pop
in
and
add
outsl
out
jle
mov
mov
popa
cmc
add
add
out
xchg
movsl
stos
xchg
call
sbb
mov
lcall
push
xchg
push
or
fistps
sub
or
aaa
jmp
pop
cmpl
imul
push
aas
jbe
sbb
das
pop
lcall
mov
ljmp
push
and
and
add
gs
push
loopne
lahf
add
pusha
fwait
bound
in
mov
jge
bound
jp
subb
pop
fidivrs
sbb
rolb
cmpb
xchg
mov
mov
mov
idivb
and
out
sub
sbb
adc
mov
js
push
std
outsb
jmp
nop
add
and
and
out
mov
xchg
and
aad
lcall
les
jle
jecxz
xchg
and
mov
ds
inc
xor
hlt
add
and
rorb
xchg
out
xor
pop
jl
lock
in
push
sahf
add
push
or
mov
and
js
test
mov
xor
imul
int
rorb
xor
das
jb
loope
popf
adc
daa
ljmp
and
mov
and
add
out
adc
mov
mov
add
stos
jg
pop
stos
insl
pop
aad
and
add
mov
add
or
push
or
jle
or
popf
push
push
addr16
or
cmc
testb
gs
daa
incb
add
mov
js
out
add
int
loop
inc
mov
int
add
push
js
lret
jmp
clc
shrl
push
jg
mov
js
scas
jmp
loop
jle
sti
data16
or
mov
sub
push
inc
mov
and
mov
out
pop
rolb
pusha
jmp
add
adc
test
jl,pt
and
test
bound
adcb
jg
movsl
out
and
cmp
outsl
mov
xchg
filds
add
jg
push
popf
lock
pusha
sbb
fwait
push
pop
stos
mov
fisubrs
pop
ljmp
loopne
mov
or
or
outsb
scas
cli
pushl
out
add
push
and
and
arpl
xchg
mov
add
stos
push
sbb
adc
pop
lock
sti
or
popa
cmp
dec
cwtl
repnz
push
jmp
lcall
stos
push
dec
out
sbb
popf
popa
std
scas
inc
shr
mov
out
in
mov
insb
adc
adc
adc
add
push
sar
pop
and
out
inc
pop
mov
loope
cmp
pop
addb
fildll
sbb
push
xor
or
lcall
call
mov
jle
sbb
adc
loop
inc
jmp
add
sti
dec
int
pop
mov
in
data16
jle
jecxz
popf
loope
push
adc
sub
rolb
pop
push
inc
rolb
jecxz
addl
enter
subb
xchg
scas
mov
xchg
in
adc
jl
andb
inc
or
adc
repz
stos
daa
inc
and
out
adc
dec
imul
fcomip
pop
insb
out
mov
jmp
aaa
pusha
aaa
lcall
les
je
outsb
in
cld
adc
lods
ret
mov
loope
xchg
leave
aaa
fxch
sub
mov
sahf
push
or
les
out
adc
or
rorb
jmp
out
lcall
ret
ss
or
adc
mov
dec
lods
push
cld
das
clc
out
dec
loop
pop
cmpsb
adc
mov
pop
jbe
in
xchg
sbb
lods
cmp
and
push
push
fs
add
loopne
jmp
daa
mov
das
clc
aaa
jbe
and
adc
push
mov
js
arpl
das
and
jmp
pcmpgtb
mov
add
xlat
sahf
rcrb
jg
fcomip
orb
addb
xchg
mov
out
cmp
rol
loopne
lcall
lcall
lock
pop
push
movsb
and
inc
test
fisubs
jl
jbe
xchg
or
and
or
rorb
bound
inc
cmp
pop
mull
sub
cld
fwait
sub
pop
jb
pusha
jbe
push
dec
jne
sub
int3
adc
or
outsb
hlt
clc
loop
popf
outsl
pop
inc
xorl
xchg
andl
sub
adc
pop
push
lcall
movsb
pop
aaa
mov
or
jl
or
lock
pop
cmp
movsl
dec
mov
mov
ja
loop
insl
jmp
push
cli
sbb
es
push
jle
movsl
insl
loope
arpl
cltd
fcmovu
push
mov
push
add
stos
shrb
push
adc
scas
cli
insb
or
sub
mov
add
push
sbb
clc
add
aas
sahf
ss
xor
add
cmpb
das
es
shlb
xor
test
jmp
aas
bnd
cli
sub
and
push
scas
cmp
pop
or
pop
lods
test
imul
add
push
movd
pop
js
out
test
pop
jns
stos
add
push
pop
jo
sub
mov
mov
std
push
lcall
ja
movsb
adc
incb
out
sbb
sahf
add
mov
cmp
pop
push
mov
test
pop
inc
mov
sub
clc
dec
sub
notl
pop
add
add
hlt
inc
sbb
js
mov
ss
add
dec
out
orl
addl
push
orl
das
add
and
cmp
nop
shll
inc
sahf
pop
cmp
adc
xorb
add
adc
pop
jne
loop
out
inc
xchg
or
pop
jge
xor
push
add
imul
sbbb
pop
fisubrs
dec
mov
jae
pop
xchg
call
repnz
jnp
or
xor
orl
add
popf
ja
int3
and
ret
hlt
or
cmp
xchg
loop
rcrw
test
inc
sub
lock
sbb
aaa
add
add
lcall
sub
call
mov
addb
add
mov
push
shl
pushw
inc
mov
xlat
dec
sbb
jmp
inc
mov
jp
add
xor
retw
les
dec
clc
mov
or
inc
add
dec
mov
ret
pusha
lcall
add
repnz
aaa
ljmp
fcoms
testb
pushf
cmp
dec
jo
xor
push
mov
test
outsl
push
outsb
sarb
cmp
popa
jle
cltd
call
out
das
xchg
add
xor
pop
xchg
or
push
subb
out
dec
lret
xchg
cmpsb
push
data16
pushl
add
shlb
pop
aas
jb
std
push
add
or
mov
insl
orb
xchg
adc
xor
movsb
push
pop
pusha
and
jb
or
rolb
pop
mov
add
xor
add
fsubs
clc
rorb
add
clc
adc
shrb
rcll
enter
shlb
sub
js
push
mov
push
outsb
shlb
popf
aaa
push
xor
orl
xor
push
lock
push
pop
and
popf
mov
ret
xchg
mov
rcl
or
cmp
jg
add
mov
andb
cmp
add
xor
lcall
cmp
orl
loopne
ficompl
clc
sub
movsb
inc
es
dec
jmp
out
aam
inc
xor
add
orl
cmc
cmpsb
rolb
xor
add
mov
fstpt
mov
pop
dec
add
add
stos
xchg
leave
mov
cmpsb
add
add
push
sub
adc
stos
xchg
insb
or
cmp
ja
loop
push
cli
add
adc
add
jge
lcall
mov
mov
fs
dec
jp
adc
inc
loop
mov
sub
outsb
sub
add
and
mov
push
movl
sbb
and
movsb
outsb
pop
aas
lcall
xchg
bound
mov
add
hlt
call
mov
shll
adc
jg
lahf
push
jmp
movsb
jge
xor
mov
pop
adc
shl
fsubrs
movsl
add
lods
cs
xor
and
out
outsl
inc
fsubs
adc
adc
xor
add
adc
popa
rcr
popa
fidivrs
add
push
lods
out
ficoml
inc
fwait
std
ljmp
sub
jle
fiadds
nop
sbb
movsl
pushl
jle
lcall
sti
movsb
movsl
xor
sub
aam
jns
shrb
and
loopne
adc
xor
jns
push
cld
add
and
lret
pushl
push
xor
lret
jmp
add
lods
pop
inc
or
push
std
aas
outsl
imulb
adc
push
jno
movsb
or
mov
imul
mov
push
out
test
nop
adcl
sub
add
imul
fsubs
movsb
rcl
add
pusha
cld
cmp
mov
das
cmp
cltd
pushf
mov
cld
inc
pop
pushl
cld
sbb
pop
inc
jns
shlb
xchg
insb
pusha
adc
adc
out
ja
outsl
fcmovu
adc
jmp
push
addb
or
incl
stos
in
loopne
add
sbb
pop
add
cltd
push
notb
aad
insl
ljmp
sub
stos
xlat
xchg
lahf
cmp
jb
popa
and
xor
push
or
mov
orw
movb
nop
jb
jg
outsl
pop
fldt
pop
loope
or
mov
sbb
arpl
inc
mov
inc
ffreep
mov
stos
mov
push
shrb
fisubs
outsl
scas
and
mov
add
movsl
roll
and
mov
sbb
fimuls
popf
dec
xor
cld
add
and
or
enter
xchg
out
es
adc
rclb
pop
sbb
pop
daa
cmpsb
out
inc
cmpsl
and
addr16
mov
add
fwait
sub
lods
roll
fdiv
add
cld
bound
cld
xor
dec
loope
leave
sarl
lahf
pop
jns
xchg
mov
xor
sbb
pop
bound
sub
cmp
andb
fsubl
in
jmp
add
popaw
push
push
add
repnz
daa
pop
sub
add
mov
add
popa
fcompl
cli
decl
xorb
xorl
xchg
xorb
or
lods
aaa
lods
mov
dec
add
pop
in
and
inc
jg
xor
or
mov
shll
push
ret
fs
ljmp
scas
fiaddl
popa
pusha
xor
aas
popf
stos
sbb
mov
jg
pop
mov
faddl
bound
into
jle
scas
xor
inc
and
add
jl
ja
sbbb
hlt
in
add
out
ss
xor
pusha
jl
fildll
pop
cmp
cli
cltd
add
fcoml
popf
or
pop
push
jno
dec
pop
and
push
lock
stos
nop
sbb
cmp
loop
add
call
out
inc
inc
data16
mov
sbb
dec
shlb
cmp
push
jecxz
movb
orb
or
scas
cli
outsb
mov
dec
lock
sub
fcoml
xchg
test
out
rolb
or
icebp
loop
cmp
lock
stos
mov
or
mov
rorb
mov
cs
xor
mov
in
xchg
je
mov
adc
rclb
or
orb
out
aaa
sub
rcll
push
add
out
clc
xchg
setge
mov
icebp
arpl
mov
mov
jp
movsb
or
sub
and
dec
add
xchg
repnz
andl
outsb
mov
jo
std
aaa
repnz
dec
adc
add
test
mov
les
pop
mov
aaa
mov
or
sub
pop
cmc
push
std
je
popf
inc
sbb
jecxz
mov
push
pushf
out
xor
fists
dec
lea
sbb
or
mov
jo
xor
mov
orl
data16
call
cmp
cmp
add
mov
loopne
mov
mov
outsl
mov
rclb
push
out
loopne
sarl
mov
out
inc
xchg
cli
and
call
push
rolb
mov
and
popf
push
push
data16
loope
cmp
incl
mov
and
push
adc
in
or
lock
mov
shl
outsl
clc
add
out
out
roll
dec
sar
sbb
mov
push
add
cmp
jno
mov
mov
push
push
jbe
and
neg
cli
adcb
xor
popf
mov
lret
xor
cs
incl
add
mov
jle
orb
rolb
lock
add
data16
xlat
and
mov
inc
add
lea
ja
rcll
sub
aaa
clc
pop
adc
dec
sbb
orb
or
cli
call
arpl
cmp
adc
add
xor
jnp
je
add
ret
dec
mov
int
lods
call
dec
nop
or
xchg
pop
ljmp
xchg
popa
adc
push
add
lcall
repnz
fs
push
inc
jmp
aas
test
push
add
mov
sub
pop
arpl
pop
inc
mov
inc
add
fwait
out
pop
add
insb
and
mov
add
aaa
adc
xchg
or
jl
bound
decl
jmp
loope
add
mov
xchg
add
pop
popw
enter
inc
inc
mov
jns
add
xchg
mov
adcb
je
adc
inc
xor
rorl
je
arpl
mov
add
arpl
shlb
inc
add
call
push
incl
xor
lret
imul
stos
push
inc
mov
shrb
add
sarb
sub
xchg
sbb
sub
ja
mov
xorb
add
ss
jno
jp
add
mov
mov
add
jmp
sbb
pop
push
addr16
mov
insl
jle
add
lcall
je
loope
scas
ficoms
adc
xchg
daa
out
push
inc
push
outsb
aas
jno
mov
push
add
mov
add
push
ljmp
xchg
std
push
sti
das
inc
add
mov
cwtl
pop
imul
hlt
insl
sti
push
add
cmp
int3
xchg
cltd
sbb
rolb
xor
xor
sbb
xchg
out
inc
mov
inc
adcb
add
push
push
popf
adc
push
loopne
in
jo
outsb
rolb
add
stos
fisubrl
add
cltd
arpl
mov
push
adc
push
xorb
icebp
sbb
daa
mov
mov
dec
inc
rcrb
mov
add
push
adc
mov
xor
imul
sbb
ds
or
into
mov
loop
outsl
adc
pop
cwtl
arpl
adc
pop
pop
adcl
push
outsl
cli
adc
cwtl
lock
or
adc
mov
int3
mov
adc
insb
pusha
xor
cld
mov
and
xor
adc
cmpsb
mov
popa
xor
or
pop
outsb
and
add
cld
jg
push
mov
xor
jne
pop
adc
lock
inc
mov
jg
add
outsb
add
push
in
jno
sti
in
adc
add
nop
push
xchg
push
dec
sub
add
adc
xchg
pop
sahf
xchg
mov
mov
sti
rolb
or
jbe
push
mov
add
xor
and
fiaddl
loope
rcrl
test
scas
or
mov
add
adc
push
xor
outsl
adc
pop
lock
adc
movsl
in
data16
insb
pop
add
mov
or
lock
pop
mov
cltd
adc
outsl
in
ljmp
mov
shll
and
out
sbb
ljmp
addr16
sbb
hlt
adc
and
ds
insb
push
inc
inc
pop
inc
pushl
sub
adc
and
add
or
fiadds
adc
decl
push
dec
pop
cmp
add
dec
or
xor
cmpb
and
out
xor
jle
and
lock
movsl
push
add
push
sbb
arpl
push
push
into
clc
add
ja
mov
xchg
mov
popf
push
data16
push
fidivs
sub
inc
aas
add
js
add
leave
xchg
scas
xor
out
hlt
push
mov
push
mov
mov
xor
mov
scas
jbe
adc
jle
dec
pop
inc
xchg
stos
add
add
test
dec
jle
sbb
jne
aaa
hlt
add
jb
imul
jb
pop
es
sub
rcrl
and
adc
sub
mov
inc
fdiv
in
decl
or
add
lcall
xchg
add
cmp
stos
or
and
inc
cvttps2pi
clc
cmc
decl
mov
incb
mov
mov
xor
or
add
mov
push
pop
sub
adc
push
insl
xor
xor
dec
jo
pop
push
add
cs
adc
sbb
xchg
outsl
js
ret
inc
or
ja
adcb
clc
orl
and
mov
add
dec
cmp
test
dec
adc
andl
lcall
and
nop
jp
jbe
jb
jno
push
cmpsb
inc
insb
scas
sbb
js
enter
jmp
subb
add
and
loope
jecxz
mov
data16
outsb
fdivrs
mov
ljmp
pusha
inc
xor
cli
out
enter
adc
push
push
mov
push
adc
hlt
das
rcl
or
addb
add
popf
test
clc
mov
movsb
xor
filds
cwtl
bound
popf
xor
or
sub
mov
fistpll
mov
mov
xor
lret
std
test
jb
and
inc
or
lret
pusha
mov
rclb
sbb
xchg
add
test
rcrl
xor
lods
add
fildl
test
sub
rcll
data16
push
lods
xchg
push
fsubr
or
push
mov
or
lods
add
subl
jb
and
adc
les
xor
cmp
mov
subb
add
push
rol
pop
inc
je
ret
mov
push
scas
adc
and
out
mov
push
adc
inc
adc
inc
jb
or
pop
pop
cwtl
loope
sahf
pop
out
push
push
cli
adc
jle
jbe
jp
incl
add
popf
jmp
jecxz
add
rcrl
ljmp
xor
out
dec
or
bound
and
adc
jecxz
ljmp
les
inc
mov
ss
and
jmp
out
jl
pusha
add
jno
orl
out
and
inc
add
push
out
out
sbb
sub
xor
add
fldl
and
data16
pop
xlat
push
ficoml
or
and
jb
and
outsb
lret
mov
add
xor
add
jl
mov
and
pop
inc
push
mov
enter
out
loopne
push
mov
adc
and
inc
xor
insl
push
and
fbstp
xor
shr
andl
mov
xor
loop
and
nop
arpl
js
inc
push
cmp
inc
dec
or
imull
inc
dec
mov
xchg
and
inc
loopne
mov
sbbb
aaa
xchg
or
jmp
add
add
push
pusha
clc
es
movsl
addb
incb
pop
push
xchg
ds
rorb
insb
jmp
pop
test
sub
xor
add
mov
loopne
jmp
and
push
addr16
lods
mov
fdivr
and
jl
mov
and
jbe
xor
xor
pop
sarb
or
pop
mull
testb
or
test
popf
je
sbb
mov
add
pop
and
add
push
push
or
loope
rclb
mov
sub
outsb
jmp
jbe
mov
xchg
es
ret
or
add
or
dec
enter
orl
pusha
sub
imul
add
push
add
rcrb
add
divb
or
push
gs
and
jns
and
add
and
push
xchg
add
orb
inc
add
scas
or
jmp
and
pop
inc
add
std
ljmp
and
push
push
inc
add
add
push
test
or
dec
out
xchg
xchg
dec
jp
xor
movsl
loopne
jae
and
fwait
cld
adc
push
lods
lea
divb
jp
inc
xchg
pusha
gs
xchg
dec
mov
pop
pushw
orb
and
andb
orl
or
mov
jl
fstl
out
orl
adc
pop
cmpsb
pop
adc
adc
mov
clc
pop
in
pusha
nop
and
ljmp
das
sahf
popf
shlb
jmp
add
mov
mov
pushl
inc
inc
pusha
jno
andl
xlat
movsl
ljmp
and
or
loopne
jmp
in
out
mov
adc
or
out
mov
mov
decb
lcall
adcb
mov
sarb
incl
insl
xor
adc
add
clc
sbb
jmp
jns
mov
pop
xor
adc
ds
je
movsb
mov
and
and
and
push
mov
dec
push
or
mov
sub
add
mov
add
add
push
pop
and
pop
scas
fisttps
popf
push
adc
and
push
loop
test
ljmp
aas
lcall
jo
sahf
xor
nop
andb
out
adc
inc
push
or
xor
lods
out
push
sbb
imul
ja
mov
orb
mov
sbb
test
pushl
loop
lea
es
mov
outsl
jle
pop
jbe
add
add
add
enter
cld
inc
xlat
fsubrp
pop
jmp
push
movsl
pop
push
shrb
rcr
movsl
incl
push
sub
xlat
stos
add
lods
fistpll
sbb
fistpll
add
popa
adc
outsl
sbb
xchg
and
pop
movsl
idiv
push
sbb
jmp
lds
push
fsubs
dec
mov
das
cltd
mov
pop
xor
cltd
pop
cld
sbb
roll
sub
lods
jb
dec
adc
shlb
add
mov
xor
incl
sahf
repnz
cmp
ljmp
leave
lods
mov
leave
repnz
jl
add
or
decl
push
insl
add
add
mov
pop
push
js
fsubrs
xor
adc
fcomps
jo
shlb
sbb
dec
push
int3
jl
bound
into
jo
xor
outsb
sbbb
add
nop
dec
faddl
push
inc
mov
nop
test
out
xchg
ss
pop
push
push
push
xor
adc
dec
add
ds
pop
sub
jns
data16
lea
push
fs
sbb
sbb
push
jnp
xchg
xchg
add
insb
ljmp
repnz
movsb
popa
dec
fiaddl
mov
pop
ficoml
add
and
jae
or
ss
inc
popa
cmp
arpl
ja
sbb
or
add
mov
xor
jbe
cmp
mov
adc
push
push
xor
pushl
repnz
pop
data16
out
push
out
add
inc
push
es
pop
or
clc
mov
push
and
inc
loope
jg
jbe
cld
or
mov
je
daa
xchg
xchg
icebp
adc
pop
cld
pusha
popa
shlb
xor
movsb
shll
push
mov
and
mov
loopne
jmp
cli
subb
outsb
xchg
and
nop
push
push
pop
push
dec
scas
xchg
out
js
adc
xchg
and
add
jae
push
fwait
add
ffree
add
push
insb
cs
clc
pushl
pop
inc
push
add
mov
sbb
xchg
psraw
nop
jmp
push
sbb
cmp
mov
out
mov
mov
clc
fs
outsb
push
mov
xor
lcall
fidivs
mov
push
shlb
test
push
xor
inc
cmp
das
je
xchg
add
loopne
call
fdivp
add
outsb
mov
pop
mov
hlt
pop
rorb
flds
push
ss
pop
push
icebp
bound
mov
jbe
in
mov
arpl
adc
outsl
clc
and
mov
cmp
xor
je
pop
add
fcoms
sbb
jg
cmpsb
xor
cmp
push
sub
or
add
and
pop
call
es
push
mov
jg
and
sbb
jo
clc
push
or
in
pop
adc
popf
mov
add
in
add
inc
add
in
mov
mov
loope
jp
inc
jmp
stos
outsl
mov
lret
or
xor
mov
inc
mov
in
jbe
loopne
addl
addb
popf
std
call
in
xchg
push
adc
and
xorb
adc
lahf
push
add
insb
stos
mov
pop
mov
or
push
add
stos
push
bound
add
sub
pop
mov
loope
fwait
cmp
mov
xor
out
cmp
out
adc
push
adcb
add
addr16
stos
loopne
fisttpl
add
imul
pusha
mov
movsl
cmp
or
stos
loope
icebp
dec
mov
inc
add
mov
mov
sub
sub
shlb
inc
add
outsb
jmp
inc
inc
clc
mov
jg
adc
aad
cs
push
add
add
mov
test
dec
es
repz
jle
pushw
jne
jae
jo
push
xor
ret
scas
clc
sbb
inc
enter
popf
mov
cwtl
push
or
pop
or
xor
rorb
pop
inc
data16
movsl
cmp
sbb
out
data16
int3
icebp
push
pop
lcall
out
call
inc
jb
ret
faddp
add
pop
and
test
sbb
push
sbb
push
dec
arpl
xor
fwait
outsb
or
push
insl
in
pop
sbb
insb
jecxz
sub
sbb
ret
ret
or
inc
pop
sbb
pop
push
cmp
jecxz
push
aad
imul
cltd
adc
and
std
mov
inc
push
sub
push
or
call
outsl
movsl
push
jge
mov
push
add
adc
mov
aam
mov
inc
inc
lahf
outsb
out
into
jg
add
out
xchg
inc
sahf
loope
inc
inc
or
adcb
inc
mov
pusha
adc
inc
loope
loopne
jl
loopne
loop
faddl
mov
subb
mov
sub
fs
add
mov
add
push
add
ja
sbb
push
add
adc
xor
mov
xor
sbb
dec
lret
mov
add
imul
call
dec
and
aaa
add
fsubl
add
jg
mov
xchg
push
adc
dec
arpl
or
add
jg
fdiv
push
push
inc
loop
pop
sbb
add
mov
clc
cmp
test
cmc
add
inc
nop
add
int
outsl
pop
nop
ret
daa
push
sti
fs
push
pop
xchg
lock
mov
outsb
add
mov
sub
push
pop
fcmovu
mov
sbb
push
pushf
cmpsb
shll
popa
mov
jae
sub
pop
mov
test
push
push
mov
add
add
fbld
test
add
add
jle
lcall
pusha
xor
push
or
push
jns
dec
push
add
adc
mov
push
jno
in
pop
stos
pop
movsl
jb
add
stos
outsb
jecxz
add
test
enter
add
jo
adc
mov
pushf
pop
lahf
nop
jmp
xchg
adc
cwtl
or
xchg
sub
and
rolb
pop
lds
stos
jbe
add
mov
fsubrs
mov
inc
arpl
loope
sbb
cmpsb
std
add
pop
sub
push
adc
sub
aaa
into
add
enter
out
dec
or
sbb
cli
incb
imul
pop
fmuls
or
push
or
lcall
sub
push
dec
push
mov
pop
add
insb
inc
mov
add
ja
push
or
mov
inc
fidivrl
out
roll
mov
xor
adc
jmp
xchg
push
shll
push
inc
loop
add
cmpsb
fdivrl
adcb
jle
enter
outsl
dec
pop
addr16
es
and
jnp
push
addb
fiaddl
cmc
jg
ss
push
xorb
add
cwtl
pop
lea
cs
rcrb
mov
xor
adc
inc
test
scas
pop
add
ret
adc
in
mov
inc
pop
mov
stos
or
inc
add
jo
fmuls
mov
mov
rolb
mov
pop
or
outsl
or
sbb
fwait
pushf
ret
sbb
inc
push
jmp
and
mov
push
ret
pop
inc
dec
pop
popa
pop
mov
loop
rclb
fs
or
add
addl
fldt
fs
andb
rclb
jl
or
mov
adc
push
call
orl
mov
or
adc
orb
fsubrs
fcmovnb
pop
outsb
sbb
sbb
cmp
cld
push
cmpl
adc
inc
inc
adc
dec
mov
inc
lods
pop
inc
xor
int3
repnz
dec
mov
incb
dec
insl
add
inc
dec
test
and
cmc
loop
cltd
jnp
add
decl
or
inc
or
mov
push
push
sbb
stos
xor
lods
xchg
lock
addps
sub
mov
call
add
push
inc
mov
push
fistps
adc
xchg
lcall
inc
add
or
mov
xchg
imul
inc
dec
std
dec
sub
cli
mov
mov
and
add
pop
ljmp
test
or
jp
or
loopne
addl
mov
push
les
cli
mov
addb
sbb
test
add
inc
add
mov
pop
xchg
insl
mov
xor
scas
jle
lds
fwait
mov
mov
out
movsb
pop
js
pop
pop
mov
push
popa
push
jle
push
addb
mov
jb
loope
mov
push
pop
test
add
cs
outsl
mov
sub
jp
pusha
or
push
pop
loopne
incl
aam
enter
dec
or
mov
and
inc
into
and
roll
outsl
push
movsl
add
sbb
je
loop
repnz
xor
pop
cs
pop
out
ret
adc
cmpsb
mov
bound
cld
pop
sarl
dec
andb
or
sbb
jb
mov
add
jbe
add
mov
int
imul
add
xor
mov
inc
pop
mov
aaa
cmp
inc
mov
dec
sbb
and
into
int3
fs
loopne
sub
test
mov
stc
not
and
dec
xchg
or
pop
sbb
sbb
sarl
push
sub
jo
pop
inc
cmp
inc
and
lcall
pusha
push
pop
mov
sbb
loope
adc
xchg
rolb
jl
pop
and
rcll
movb
pop
mov
fsubl
test
stos
jo
fs
push
add
outsl
mov
enter
add
and
xchg
popa
mov
pop
and
mov
gs
xchg
imul
or
mov
cld
jo
call
stos
jecxz
add
pop
outsl
mov
outsb
sub
adc
xchg
arpl
cmp
add
data16
sub
mov
es
outsb
mov
ret
add
mov
mov
cmp
roll
inc
punpcklwd
mov
push
mov
mov
sbb
push
and
icebp
jg
in
test
enter
mov
adc
adc
push
and
mov
pop
in
insb
in
out
loope
mov
scas
pop
sbb
cmp
and
call
jg
adc
mov
jb
push
and
add
es
call
and
lock
mov
jg
jne
mov
int
add
cmp
or
jb
cwtl
jo
cmpsb
outsl
add
aaa
cld
sbb
pop
mov
or
mov
nop
sub
mov
jle
push
mov
xor
push
inc
testb
xor
inc
mov
and
xor
pusha
ds
or
pop
bound
pop
xor
aaa
mov
pop
jae
adc
out
arpl
push
fildl
mov
rolb
mov
add
addb
sub
push
xchg
mov
jg
jno
sub
xor
xorb
adc
pusha
orb
mov
sbb
int
add
add
add
outsl
inc
incl
filds
rolb
pop
aad
pop
sub
sub
pop
incb
testb
push
and
aaa
lds
jmp
xchg
sub
jp
pop
sbb
loop
dec
push
pop
add
ret
mov
mov
push
jae
mov
or
dec
pusha
xor
pop
add
lds
mov
pusha
add
aas
add
inc
ss
add
or
imul
sub
jg
xor
sub
add
and
mov
test
pop
outsb
outsb
mov
outsl
rolb
outsb
in
pushf
mov
add
lcall
jmp
rclb
roll
or
inc
outsb
xchg
adc
xor
add
add
ret
jno
adc
mov
call
inc
mov
dec
inc
or
in
decl
repnz
out
xchg
push
sbb
dec
jp
sub
sbb
call
cmp
cmpb
push
in
adc
mov
lods
add
xor
adc
push
mov
sbb
sub
outsb
inc
mov
nop
pop
sbbb
and
hlt
add
add
add
outsl
push
xchg
outsb
decb
add
psrlq
mov
icebp
mov
outsl
aaa
ret
insb
out
icebp
cmp
inc
pop
call
loope
loop
dec
mov
pusha
xor
in
push
xchg
add
shlb
push
add
ja
or
lock
lock
loopne
jo
and
push
mov
adc
xchg
pop
pop
dec
addb
mov
push
mov
xchg
xchg
out
roll
popa
jp
jge
sbb
jp
mov
mov
iret
mov
icebp
les
stos
ljmp
mov
dec
pop
mov
add
adc
pop
cld
outsl
clc
insl
mov
jb
mov
push
loope
push
js
insl
mov
aaa
fdivr
lcall
insb
jb
xchg
jb
push
mov
xchg
cltd
add
scas
popf
shlb
mov
push
orl
xor
xchg
push
dec
push
lock
add
test
add
xchg
add
mov
cli
outsb
xchg
loope
bound
inc
js
mov
sbb
or
loopne
in
lcall
clc
cld
inc
dec
ds
lret
fs
sbb
addr16
call
push
arpl
pop
scas
pusha
ss
jne
pusha
nop
out
add
inc
pop
lock
dec
inc
je
xor
sbb
imul
mov
jno
push
data16
jno
rorl
adc
xchg
mov
add
cmovno
and
add
insb
push
mov
mov
dec
jb,pt
dec
ljmp
cmp
sti
add
sbb
mov
mov
jmp
fwait
mov
or
mov
int3
mov
pop
stos
mov
xor
xor
emms
icebp
or
fisttpl
jb
jb
inc
sub
jp
nop
push
jb
ja
lcall
sbb
imul
lock
push
enter
mov
ja
shlb
sti
mov
cs
sbb
push
adc
adc
int
push
mov
push
and
inc
sub
add
xchg
add
jle
je
aaa
insb
pushl
mov
xchg
xchg
inc
mov
dec
add
inc
push
loope
loop
call
push
adc
jbe
add
pop
and
push
loopne
sub
xchg
xor
add
imul
test
mov
inc
mov
cli
jg
arpl
push
mov
mov
mov
cld
mov
loop
and
and
lock
sbb
dec
lods
push
sbb
pop
inc
mov
rolb
sahf
mov
lock
pop
jmp
cmpsb
mov
js
push
jl
adc
adc
push
and
mov
mov
pusha
xor
inc
push
inc
dec
mov
jmp
pop
dec
cld
aaa
mov
aam
push
dec
mov
rorb
lcall
cmovg
jo
sbb
cld
scas
clc
push
inc
and
shlb
movsl
mov
mov
mov
loop
lea
popf
mov
pop
cmpb
push
jp
pop
push
inc
ret
fidivs
clc
add
fdivrs
loop
addl
pop
pop
cld
add
ret
sub
lcall
inc
call
arpl
or
ljmp
mov
inc
sbb
dec
add
daa
sbb
cmp
and
fnstcw
add
mov
rorb
push
or
add
push
daa
xor
addb
mov
insb
pop
shll
adc
fldcw
sbb
fidivs
sahf
data16
cmp
cmp
roll
stos
mov
imul
daa
add
subl
test
mov
mov
or
mov
cmp
test
or
ja
pop
fisttpl
ficoms
lods
add
stos
loop
orb
shll
add
sbb
leave
cs
dec
cmpsb
pop
hlt
push
push
mov
inc
subb
add
loope
sbb
push
pop
push
test
outsb
dec
xchg
mov
sbb
mov
popl
popa
push
mov
push
mov
mov
loop
andl
sub
pop
mov
jae
mov
mov
pop
arpl
sub
pusha
ljmp
jmp
ljmpw
xor
pop
mov
mov
mov
clc
cmpsb
xor
pop
or
scas
test
add
cmp
push
xchg
ljmp
repnz
dec
jg
movl
repnz
add
mov
mov
inc
add
and
or
test
push
gs
push
nop
pop
out
daa
mov
in
in
and
jno
or
imul
push
mov
jmp
int
and
and
popf
fdivr
or
and
inc
push
push
cmp
mov
daa
rolb
sbb
add
bound
fbld
test
lds
push
popf
pop
inc
xor
jo
les
sbb
or
popa
out
das
std
mov
rcll
sbb
repnz
mov
add
stos
dec
cld
test
data16
adc
push
mov
movsb
call
mov
mov
or
jmp
dec
divb
inc
push
or
sbb
add
subl
lcall
mov
push
enter
leave
pop
rorb
and
xor
pop
or
fcmovbe
jo
cmp
adc
enter
ljmp
icebp
and
popf
mov
sbb
orb
decl
mov
movsl
push
mov
mov
inc
rolb
ret
mov
pusha
or
ds
xchg
and
shll
or
inc
cmp
mov
sarb
push
add
push
push
inc
add
sub
cmp
add
adc
add
mov
cs
adc
sbb
push
pop
jp
nop
sbb
jmp
add
push
mov
sub
andb
add
jle
and
and
aas
sub
mov
insb
pusha
push
add
inc
add
push
adc
sbb
sbb
pop
push
and
and
pusha
pusha
pop
and
call
and
insl
cli
popf
pop
inc
dec
test
push
mov
lcall
mov
stos
loopne
pusha
inc
jmp
fdivrp
call
cld
push
or
pusha
dec
push
mov
arpl
add
loop
adc
mov
add
add
popa
call
aam
dec
jecxz
mov
fdivr
jmp
push
xchg
cmpsl
push
or
sbb
outsl
scas
push
loop
or
cs
cli
xor
pop
push
xchg
inc
fbstp
loopne
pushf
inc
sbb
add
jmp
pop
xchg
jo
pop
fisubl
sub
jae
pop
loop
mov
cmp
insb
pushf
mov
adc
push
pusha
cmp
call
arpl
rorl
push
outsb
jmp
mov
imul
push
shl
push
add
mov
jbe
jg
addb
cmp
daa
fidivl
mov
pop
scas
and
inc
icebp
enter
cmp
mov
subb
outsb
ljmp
inc
adcb
pop
mov
cmpsl
out
addb
jmp
sub
push
inc
push
pop
fisubl
and
and
rcrl
mov
push
pop
sub
clc
pop
pop
add
daa
xchg
dec
pusha
dec
mov
ret
mov
add
adc
jae,pt
add
mov
cld
dec
push
dec
add
inc
or
xor
je
mov
jp
jg
push
fisubs
sbb
inc
add
jg
dec
and
dec
or
push
or
inc
scas
inc
leave
inc
clc
pop
jge
push
jae
sub
cmp
add
xchg
dec
mov
out
xchg
fs
inc
mov
xor
fwait
or
xor
jg
pop
aad
js
popf
insl
add
shrb
xor
and
add
mov
js
pushf
stos
ljmp
inc
jp
jb
add
inc
mov
loope
call
and
adc
js
adcb
outsb
and
push
mov
fs
dec
loopne
mov
mov
mov
push
fimuls
inc
mov
push
lcall
cli
and
add
xor
outsl
nop
cli
pusha
xor
sub
pop
and
mov
xchg
push
outsl
clc
sbb
push
popa
pusha
sub
sahf
insb
ljmp
xor
arpl
lods
out
and
dec
rcr
mov
pop
arpl
gs
sbb
sub
push
cld
dec
fadds
sub
sub
sub
jae
push
mov
or
lock
lcall
cli
lret
push
xor
cmp
pop
repnz
inc
shlb
je
and
xchg
push
jl
xor
push
push
scas
inc
xor
dec
inc
sub
add
loope
push
insb
lds
pushf
add
add
sarb
insw
loopne
pusha
andl
loopne
push
es
mov
and
mov
xor
mov
rolb
mov
sub
jmp
loope
jle
mov
das
stos
or
add
arpl
inc
std
pop
in
into
sbb
xchg
add
and
jo
sarb
enter
mov
jecxz
sub
in
call
scas
mov
xor
sbb
pop
ja
and
loopne
mov
push
adc
cmp
inc
add
xor
push
sarl
addb
and
mov
in
shrb
add
xchg
xor
pop
mov
cld
jg
xor
jo
mov
loope
pop
sbbb
or
pop
add
push
mov
lds
loope
sub
xchg
xchg
mov
push
and
mov
out
pusha
popf
ret
push
lahf
ljmp
or
addr16
adc
jl
sbb
jo
outsb
and
sub
and
jmp
cs
add
aas
sub
inc
inc
sbb
sbb
out
sub
addl
lock
inc
cli
mov
adc
mov
lock
shlb
push
push
rolb
xchg
loopne
pushf
outsb
mov
xchg
mov
data16
xor
pop
mov
bound
mov
push
sub
mov
mov
scas
xlat
and
add
mov
hlt
mov
mov
test
jo
mov
loope
fcomip
add
push
mov
pop
inc
rclb
gs
jle
sub
push
verr
adc
pushf
daa
add
xor
pusha
or
adc
jg
adc
and
adc
add
xchg
adc
xor
mov
mov
adc
inc
ljmp
jmp
sub
add
xor
ficoms
ret
sbbb
xchg
repz
mov
lock
xor
sbb
pop
and
and
repz
xchg
mov
push
jbe
pop
cmp
nop
mov
xchg
push
ret
add
lods
rorb
adc
fsubr
and
lcall
mov
sbb
dec
mov
mov
rorl
clc
sbb
pop
outsb
push
adc
push
push
lock
dec
jmp
mov
inc
xchg
add
popa
sub
and
dec
rorb
js
or
cmpb
and
push
pop
and
adc
fistps
and
adcb
jl
das
cli
scas
sarb
or
jge
insl
mov
imul
push
js
mov
decb
pop
mov
adc
mov
cmp
xchg
add
pop
adc
dec
bound
inc
jge
push
imulb
push
add
add
out
adc
incl
jmp
and
pop
xor
cmp
push
mov
imul
push
mov
push
cmp
clc
or
mov
rorb
push
mov
add
fs
push
pop
xor
cmp
jle
mov
push
adc
xorb
adc
scas
and
pop
lock
testb
dec
ljmp
outsb
insl
adc
lock
and
lock
jmp
adcl
cmp
mov
cmp
cld
cmp
addr16
pusha
mov
nop
mov
jmp
in
push
or
movsl
xchg
loopne
jmp
pop
inc
out
cmp
xchg
insb
pop
or
add
mov
mov
mov
sbb
out
data16
loope
add
push
mov
scas
pop
pop
cmp
jmp
rcrl
popf
inc
mov
sub
mov
and
gs
xchg
mov
push
xor
jle
cld
in
or
mov
add
shlb
push
and
cli
incl
cmp
add
mov
sbb
and
addb
shlb
jmp
inc
and
sub
and
addb
cmpl
jecxz
shlb
jg
out
xchg
xor
loopne
repz
and
xor
in
clc
sub
divb
jns
or
mov
jg
jg
xchg
movsl
inc
mov
push
jmp
dec
adc
rclb
test
xchg
and
mov
sbb
and
mov
jg
cmpb
data16
push
sub
dec
push
rorb
subb
push
dec
or
xchg
and
add
leave
xor
adc
outsl
clc
mov
popf
outsb
pop
inc
pop
inc
daa
inc
jo
xchg
repnz
rcll
stos
in
fcomip
pop
push
push
in
push
shlb
xor
mov
scas
push
cltd
aam
xchg
mov
dec
push
mov
cmc
mov
sbb
jg
lock
add
push
add
pop
loope
aam
loope
push
push
mov
fstpt
popa
jmp
sbb
inc
mov
sahf
xlat
loopne,pn
cmp
and
aas
xchg
or
icebp
push
rorb
xor
jp
sbb
adc
arpl
mov
in
rcll
out
pop
incb
mov
mov
shlb
bnd
mov
add
daa
adcb
add
dec
adcb
sar
outsl
push
add
cmpsl
and
adc
push
and
ja
push
fwait
arpl
ja
push
mull
cwtl
mov
pusha
test
shlb
sar
outsl
shlb
add
pop
jmp
popa
inc
jl
jno
pop
push
jge
lock
mov
push
mov
xchg
and
jne
push
inc
sbb
sbb
les
mov
xor
jle
add
fwait
xor
xchg
jne
inc
loope
push
pop
inc
push
lods
daa
pusha
mov
jg
cmpb
jo
mov
rolb
movl
mov
outsl
jne
xor
popa
enter
aaa
mov
sbb
jo
loopne
xorl
xor
lock
push
and
xor
dec
outsl
and
clc
jg
add
cmp
add
adc
mov
pop
mov
mov
lock
cmc
mov
pop
sub
or
lock
or
push
aaa
push
incl
inc
lods
sbb
push
mov
or
outsl
mov
and
cmp
or
loop
xor
mov
leave
orl
inc
add
add
adc
mov
sbb
popa
pop
add
shlb
push
or
out
push
add
out
cmp
xor
fwait
popa
loope
add
iret
add
pusha
push
cmp
pop
sub
in
arpl
xor
rcll
mov
outsb
out
sub
mov
pop
das
and
setbe
mulb
jp
jle
adc
push
sbb
insb
pop
popa
fdiv
sbb
shrb
mov
push
pop
push
hlt
imul
add
fwait
mov
pop
dec
stos
cs
add
sbb
jmp
xor
add
outsl
cli
cs
mov
push
pop
test
adc
sbb
inc
inc
pop
mov
add
push
test
add
xchg
les
ja
jbe
dec
add
sarb
cmp
adcl
mov
mov
adc
or
fidivl
das
ss
fiaddl
mov
mov
incb
xchg
pusha
into
inc
fcompl
lcall
lock
push
add
outsl
add
jp
inc
push
out
lcall
mov
scas
mov
jmp
sbb
mov
jg
orl
movsl
orl
or
add
mov
int
scas
nop
push
xchg
add
dec
xchg
dec
in
pop
lods
xor
and
cmp
mov
test
add
or
jne
sbb
testb
ljmp
pop
imul
sarb
or
push
inc
adc
push
or
insb
fcoms
sub
add
or
sbb
add
mov
cmp
insl
pop
push
cmpb
push
js
push
adc
xor
adcb
insl
loopne
std
pushl
in
pop
in
sarl
ret
insb
mov
sub
jae
adc
test
cwtl
ret
jb
pop
add
bound
es
or
push
pop
fs
addr16
sub
sub
add
loop
data16
mov
inc
mov
mov
or
cmp
roll
out
movsb
xchg
or
ss
xor
push
mov
ja
mov
lcall
inc
in
mov
adc
es
out
push
mov
nop
dec
pushl
adc
sbb
out
sub
int3
outsb
sbb
ret
popfw
mov
lcall
push
and
or
cld
subb
add
jge
mov
rorl
dec
mov
jae
fldcw
mov
jl
lcall
mov
mov
lds
pop
or
inc
or
arpl
add
push
cld
aaa
dec
inc
and
movsb
mov
xor
scas
xchg
adc
out
out
rcl
lods
or
ja
jb
add
cmpl
sbb
out
out
inc
mov
add
sbb
xor
je
inc
sti
push
test
andb
xor
push
sbb
or
ljmp
pusha
insl
mov
sbb
inc
sbb
xor
outsl
nop
jecxz
add
xchg
inc
xchg
mov
sub
pop
or
test
cli
pushf
mov
mov
xor
cli
jo
jbe
xchg
mov
inc
test
jbe
hlt
out
push
out
enter
loope
add
in
xchg
scas
mov
jb
add
dec
mov
xor
add
popf
ret
inc
xor
popa
push
mov
popa
sub
mov
roll
add
aaa
std
incl
add
adc
pusha
imul
insb
add
es
add
inc
scas
or
incl
pop
jno
popf
push
aad
add
pop
je
xchg
push
andb
push
fwait
mov
jb
jp
movb
pushf
mov
add
add
cld
mov
dec
nop
sub
call
jb
xchg
cmp
or
fcomp
cmc
ljmp
sub
ret
inc
add
ret
cwtl
pusha
cwtl
pushf
cmp
sub
lcall
punpcklwd
jnp
jmp
or
arpl
cmp
xor
lock
jg
adc
jmp
outsb
fs
pop
insl
and
adc
loop
das
pop
mov
adc
aam
dec
mov
push
and
mov
cmpsl
loopne
mov
mov
dec
jns
stos
adc
xor
mov
or
cmp
stos
sbbb
xor
scas
mov
lods
mov
or
mov
scas
clc
jmp
scas
inc
and
add
or
nop
jb
jbe
jp
jle
cmp
push
out
and
mov
add
push
pushw
dec
data16
mov
subl
clc
ljmp
repnz
loop
pusha
mull
mov
sbb
xor
jno
inc
and
mov
push
fs
mov
popa
sub
jmp
push
fs
and
inc
fucompp
push
loope
adc
loopne
popf
and
pop
adc
push
xchg
stos
mov
mov
repnz
fcmovbe
xor
jecxz
add
xor
add
jb
add
dec
inc
xor
test
push
push
inc
or
outsl
out
push
inc
jl
jns
out
aaa
lcall
dec
ret
jle
add
rclb
mov
mov
jmp
inc
push
scas
mov
mov
and
loopne
addl
not
outsb
cmpsb
and
xor
inc
adc
add
loopne
loope
jecxz
and
adc
jno
dec
loope
push
out
out
shrb
adcb
subb
mov
cmp
incl
add
add
mov
and
and
cmpsb
push
lcall
and
movsb
bound
shlb
sub
push
and
adc
inc
jbe
das
jb
or
adc
sbb
pusha
adc
or
sbbl
add
push
adc
pop
sub
lock
add
inc
xchg
aaa
jge
sub
push
xor
ja
sarb
xor
and
ljmp
call
xor
xor
xor
xchg
test
outsl
adc
out
daa
xchg
xor
rcrb
sub
cmp
inc
decl
push
inc
pop
jne
daa
lcall
incl
cld
subl
mov
movsl
mov
and
dec
xor
pop
xor
mov
or
lcall
and
jo
mov
jl
mov
pop
bound
nop
or
push
mov
xor
xchg
loopne
cmp
mov
add
call
shlb
fs
push
xor
cli
fistpll
loope
mov
add
inc
add
insl
loop
mov
or
sub
jbe
pop
outsl
mov
mov
arpl
adc
push
push
mov
xchg
fistpll
jle
data16
pop
movsb
mov
fdivp
add
sbb
shrb
es
mov
mov
rclb
jmp
add
dec
mov
rcpps
add
fistps
xor
xor
add
mov
test
outsb
ljmp
aaa
repnz
or
add
popa
jmp
lcall
push
lcall
outsb
loope
das
push
std
adc
add
sahf
mov
adc
loopne
push
adc
dec
push
stos
push
mov
movsb
add
insb
push
dec
push
mov
dec
cwtl
fwait
or
loope
in
push
push
cmp
and
mov
clc
out
mov
jp
jb
loope
mov
call
mov
add
ljmp
adc
mov
and
jmp
xor
loopne
inc
mov
jb
adc
mov
xchg
pusha
cmp
and
mov
add
push
adc
fisubl
cli
sbb
iret
xorb
cmp
xor
jg
out
xor
pop
xor
inc
icebp
add
xor
adc
sbb
js
ret
inc
popa
mov
lock
cli
sbb
pop
mov
and
inc
jge
incb
gs
sti
stos
popf
inc
pop
push
mov
dec
inc
movsb
loop
lcall
adc
dec
lea
rolb
fisubl
xor
pusha
or
add
shrb
fnstenv
push
add
push
add
add
push
mov
pop
cmp
fisubs
inc
push
jns
out
and
aaa
cmpl
xorb
or
push
sbb
mov
adc
inc
mov
and
test
sbb
mov
call
jne
xor
lcall
push
inc
pop
push
aaa
jmp
push
add
lock
cmp
inc
add
mov
add
mov
inc
sbb
xor
add
cmp
inc
divb
test
lock
sbbb
pop
push
or
adc
pusha
inc
mov
cmpb
push
nop
adc
cmpsb
fbstp
adcl
jo
loope
add
out
nop
add
xchg
inc
rcll
inc
shlb
add
cs
pop
loop
sub
xor
jl
pop
fisubl
add
sbb
inc
adc
imul
xor
ret
in
add
pushl
loop
adc
add
adc
mov
pop
aad
mov
adc
bound
push
add
scas
mov
mov
mov
cwtl
pop
adc
add
and
stos
mov
push
adc
or
outsl
lcall
and
sub
out
xor
mov
mov
sbb
xor
pop
push
xor
jmp
xor
xor
add
test
mov
mov
stos
push
adcl
jle
sbbl
push
pusha
mov
mov
push
xchg
mov
fwait
lcall
push
clc
push
decl
or
sbb
mov
mov
fsubs
out
mov
arpl
call
or
cmp
xchg
fisubl
test
xor
cs
jo
movsb
push
dec
lods
sbb
jle
ror
loop
fs
xor
rcll
lods
inc
cli
insl
addb
inc
es
loopne
jle
pop
adc
add
je
xchg
pushl
jl
lds
adc
repnz
adc
inc
enter
call
push
mov
mov
jmp
or
pop
jl
je
icebp
std
pop
ljmp
xor
mov
xchg
mov
mov
in
mov
je
out
shlb
add
push
cmp
ljmp
add
push
inc
ss
addb
pop
lock
mov
lock
lock
dec
xchg
mov
xchg
add
pusha
or
mov
adc
fnstenv
decl
incl
movsl
nop
add
sbb
pop
xor
call
ljmp
jmp
mov
mov
bound
outsl
data16
xorl
xor
imul
imul
pop
daa
xor
gs
mov
mov
sbb
or
cmp
xchg
xchg
jmp
adc
inc
in
push
adc
push
sarb
or
push
subb
push
push
xchg
addl
rolb
cld
inc
mov
mov
add
test
addb
push
mov
shlb
aam
cmp
dec
or
stos
push
sarl
sub
mov
std
mov
js
mov
jle
aas
xor
cmpsl
pop
jle
lret
add
imul
mov
jmp
lea
push
leave
clc
or
adc
cmp
shrl
add
nop
and
push
mov
xor
add
shlb
dec
andb
repnz
add
push
aam
jbe
add
nop
je
pop
insl
insb
add
cmp
and
add
pop
xchg
add
aad
mov
pop
arpl
push
mov
or
call
add
xor
xor
int3
xchg
or
cmpb
xor
stos
adc
shl
loop
jb
jne
icebp
sub
sbb
scas
out
andb
xor
add
mov
push
pop
ret
fadd
fwait
or
add
jmp
mov
sub
push
into
fsubs
add
add
xor
arpl
pop
xor
jb
cmp
jl
push
pop
je
inc
outsb
pusha
push
outsb
add
add
and
cmpb
adc
lea
push
dec
shlb
xchg
xorb
or
insb
add
adc
out
add
add
cmp
xor
loope
lock
addb
xchg
ja
cmp
aam
test
pop
gs
or
aaa
xchg
xor
push
stos
xor
movsl
adcb
and
jb
cmpsl
icebp
incl
test
jmp
sbbw
adc
notb
lcall
fisubs
cmpb
outsb
mov
mov
pop
ja
addb
cmp
jecxz
jb
mov
mov
xchg
das
or
xchg
subb
push
dec
sub
xchg
addb
lret
xor
push
lock
jbe
decb
flds
inc
jb
fistps
or
les
loope
jb
andb
mov
rcll
fcmovnb
add
inc
push
push
inc
test
out
or
xchg
push
mov
pop
jo
jecxz
pushf
stos
inc
sbb
cli
inc
push
cmp
dec
xor
cmp
push
rclb
mov
fildll
xor
or
or
push
add
outsb
add
dec
shlb
icebp
jg
jp
add
insl
shlb
mov
and
pushf
push
adc
add
call
inc
and
pop
jp
jg
mov
push
loope
sbb
inc
and
sarb
xor
dec
xor
ret
pusha
xor
or
dec
aad
popa
inc
leave
into
jge
lds
push
sbb
jbe
push
xor
mov
inc
add
inc
xchg
cli
and
fwait
cltd
mov
inc
or
mov
mov
out
sbb
insl
fs
rolb
mov
add
ficoms
popa
movsb
xor
adc
add
addr16
jb
pop
loop
cli
pop
push
push
adc
pusha
xor
mov
rolb
xchg
push
fiadds
xor
adc
out
data16
cmp
roll
xor
add
sub
pop
popf
pusha
mov
mov
and
mov
jb
mov
cmp
pop
dec
pusha
data16
xor
and
jns
push
gs
jp
dec
and
pop
inc
loope
insb
xor
andb
bound
and
mov
push
inc
rolb
mov
mov
sub
leave
adcl
push
jecxz
sbb
cmovle
clc
or
jb
andb
sub
insl
test
aaa
push
inc
cmp
lret
adc
jb
add
loope
pusha
xchg
sbb
ffree
xor
add
adc
sbb
inc
imul
scas
xchg
mov
pusha
and
and
and
push
ljmp
jbe
jb
inc
add
add
inc
pusha
or
mov
fildl
pop
add
mov
push
ret
and
pop
jge
mov
push
subb
mov
sub
push
jecxz
mov
mov
add
lcall
hlt
lret
inc
add
xor
clc
mov
les
mov
mov
fistpl
sbb
add
push
add
xor
push
test
pusha
in
push
pushf
mov
ficoms
jg
sub
push
jp
add
addl
pop
test
je
ja
lahf
adc
ss
and
push
fs
push
ja
aaa
mov
adc
adc
adc
adc
and
scas
and
out
mov
fimuls
or
sbbb
test
push
pop
jmp
push
pop
jl
adc
push
inc
jb
scas
pop
push
shlb
or
inc
test
push
push
jbe
adc
mov
aaa
jb
sub
out
xor
mov
in
xchg
rorb
sub
lds
rorl
cmp
push
cld
mov
pop
jle
add
and
jmp
out
cwtl
out
inc
adc
cli
jg
sbb
pop
mov
or
mov
jno
inc
and
outsl
mov
jno
xor
add
inc
sub
arpl
cmpb
loopne
lods
pop
cld
pop
insl
sahf
gs
pusha
inc
int3
pusha
cmpb
push
xchg
call
pop
dec
and
xor
aaa
inc
data16
das
push
imul
incb
add
das
mov
mov
movsl
pop
push
inc
push
jo
test
popa
loop
xchg
mov
add
arpl
fbld
out
jbe
adc
js
pushf
ds
aaa
adc
pop
das
popf
adc
pop
lods
rclb
inc
xchg
mov
mov
push
mov
mov
loop
xor
or
cmp
lock
and
mov
int3
addl
ret
mov
xor
pusha
xchg
lock
inc
test
outsl
push
and
xor
jo
adc
loopne
loop
popa
sub
addb
clc
mov
vucomiss
inc
mov
pop
test
inc
add
jno
add
mov
pop
mov
daa
je
fildll
inc
dec
addr16
lock
and
lods
std
psllw
mov
push
and
jmp
mov
popa
mov
sub
sbb
and
mov
mov
jo
cmp
icebp
push
loopne
cli
pushw
jbe
in
pop
push
repnz
out
fisttpl
push
dec
cltd
add
add
dec
subb
adcl
out
nop
dec
mov
mov
jo
enter
dec
lock
mov
or
push
ja
inc
mov
ja
jb
and
jo
shl
xor
nop
ds
add
sbb
inc
and
adc
push
setb
and
jl
add
inc
or
incl
push
lock
movsb
xchg
movsl
and
push
push
es
aam
and
dec
push
lock
jg
out
push
pop
addr16
adc
pop
push
mov
fs
xlat
xchg
idiv
decl
dec
repz
add
jo
test
push
add
add
xor
add
lock
dec
or
nop
inc
gs
ljmp
cs
xor
in
out
hlt
imul
mov
loope
add
cmp
orb
jg
aam
loopne
and
inc
jo
repnz
sub
lret
rclb
dec
mov
jmp
and
loope
ficoms
lock
mov
sbb
push
mov
dec
loope
ret
fbstp
xchg
add
subl
jno
cmc
call
aam
mov
lock
sbb
fcompl
add
mov
stos
mov
mov
loope
mov
and
inc
xchg
adc
fbld
mov
adc
xor
aam
call
loopne
add
jg
add
faddl
loope
pop
mov
gs
imul
mov
push
or
outsl
icebp
add
cmpsl
loop
and
dec
movsl
inc
dec
push
xor
out
pop
pusha
pop
sub
outsl
jg
push
popa
jp
out
pop
xor
testb
imul
push
dec
xor
mov
inc
jns
xorl
outsl
test
andb
xor
add
and
xor
lret
or
or
push
and
jmp
pop
dec
rorb
ljmp
push
pop
xchg
mov
popa
ss
lods
mov
push
incl
shll
push
xor
nop
cltd
push
add
subb
hlt
add
ret
sub
sub
and
int3
xchg
pusha
adc
lock
add
fs
or
out
addb
pop
add
and
lock
mov
sbb
scas
add
cmp
pusha
push
and
leave
fwait
jmp
call
add
loope
mov
push
rolb
test
fimull
and
add
dec
ja
mov
decl
lock
es
xor
mov
adc
test
stos
and
mov
mov
push
fs
push
or
adc
jg
mov
pop
subb
pop
or
sbb
and
popa
fidivs
cmp
aaa
sub
ljmp
add
xor
frstor
xor
cmpsb
jb
sbb
sbb
jg
les
subb
push
imul
mov
fwait
mov
inc
add
jae
cs
add
ljmp
loopne
push
dec
sahf
ficoml
xor
repnz
push
xor
lock
mov
jo
cmp
add
jb
push
and
lcall
movsl
mov
adc
pushf
arpl
sar
fnstsw
pushf
gs
adc
xor
jmp
sub
jg
pop
cmc
or
mov
imul
cltd
mov
lahf
icebp
sbb
fimuls
lcall
xchg
sbb
push
dec
dec
dec
inc
cmp
or
test
xlat
rcrb
or
and
cltd
rolb
mov
xchg
test
lcall
or
ret
lock
out
add
and
fwait
fs
in
scas
sub
jb
decw
jmp
push
pop
add
pop
out
push
jl
pop
imul
fsubl
add
or
xchg
popf
out
and
arpl
rcrb
outsl
int
fnstcw
scas
mov
jmp
jmp
stos
and
push
or
cmp
adc
and
mov
lds
push
cmp
or
mov
cld
mov
imul
imul
pop
adc
adc
pusha
push
loop
cmp
ss
mov
pop
inc
stos
pop
sub
sbb
cmp
hlt
fistpl
rorb
push
cli
xchg
rolb
or
mov
adc
lods
add
add
dec
mov
bound
addb
or
mov
cmp
mov
dec
xchg
mov
mov
jmp
sbb
sbb
or
mov
push
mov
mov
sub
fidivl
pop
pop
enter
push
mov
out
push
imul
adc
mov
fidivrs
outsb
hlt
in
or
call
lcall
popf
daa
inc
aaa
xchg
fdiv
outsb
pop
dec
adcl
mov
dec
jno
and
mov
add
fs
add
cmp
fcmovu
popa
std
stos
es
insl
daa
lods
data16
xor
clc
ljmp
cmp
xor
test
shll
add
sarb
stos
test
incb
sub
sub
add
popa
add
mov
es
add
pop
adc
push
aaa
jmp
jo
lea
mov
xlat
bound
sbb
or
popf
mov
pop
test
add
xchg
rolb
or
and
sub
incb
sbb
fwait
mov
sub
push
xor
outsb
roll
orb
jb
pop
les
xorl
mov
mov
pop
push
xchg
or
jmp
sub
mov
jbe
xor
std
xchg
jo
popf
adc
mov
push
popf
mov
and
out
mov
fs
inc
jl
pop
adc
pop
xor
test
mov
xchg
adc
or
push
gs
adc
push
mov
add
cli
push
mov
mov
loope
adc
outsl
sbb
pop
mov
add
cmp
cld
adc
aad
mov
dec
push
push
push
pushf
jp
push
ret
push
cmp
add
inc
test
sub
mov
pop
movsb
and
insb
popf
loop
add
fs
lock
aam
bnd
jb
adc
xor
inc
fiadds
daa
std
scas
xchg
push
cmp
add
jmp
orl
sub
pushw
cmp
cmp
push
andb
add
lcall
cmp
push
add
xor
mov
add
sub
dec
bound
sbb
pop
jge
push
add
and
sub
movsl
sbb
icebp
int
cmp
add
xor
popf
andb
testb
scas
mov
adc
popf
repnz
mov
xchg
rcll
jb
pushf
data16
rolb
push
aaa
pushf
jbe
mov
mov
inc
mov
addb
push
testw
das
sub
dec
pop
rclb
out
cmp
fcomip
mov
aam
sub
loope
mov
outsb
sub
or
sbbb
or
shr
adc
mov
or
push
or
ljmp
cs
fdivs
addr16
ss
and
outsb
xorb
outsb
xchg
mov
scas
cmp
stos
push
aad
ret
xchg
out
mov
push
pushf
adcb
xchg
jg
sbb
fiaddl
sbb
push
shlw
std
popa
cmp
cld
adc
mov
aam
in
ljmp
rorb
ljmp
rol
rorb
fs
addl
sahf
pop
out
rorb
lock
stos
or
pop
subb
pop
sub
filds
rolb
pop
inc
pop
xlat
push
add
pop
pop
jno
pop
xor
mov
pop
out
roll
push
push
ret
pop
inc
mov
add
push
aad
sti
fs
cmp
sub
pop
es
loopne
sbb
std
pop
pop
daa
adc
fs
pop
adc
add
outsb
outsl
fcmovu
mov
add
or
push
cmp
fnstcw
add
xor
ret
add
and
xor
add
sub
add
cmp
xor
movsl
addb
ss
mov
push
cmp
xor
ljmp
pop
mov
adc
cmpsb
mov
sbb
movsb
fisubl
cmp
pop
out
movsb
test
sbb
xchg
jp
inc
add
and
add
inc
push
scas
pusha
cmp
fwait
push
push
movsb
inc
bound
xor
bound
add
xor
orl
or
out
fists
xchg
mov
inc
push
or
fisubl
or
fildl
cmp
push
dec
addb
or
shlb
jno
mov
gs
testb
sub
inc
enter
vpunpcklwd
mov
mov
sarb
sbb
inc
popa
cmp
mov
out
data16
popa
xor
lds
mov
or
inc
test
add
jp
outsl
and
mov
loopne
mov
or
aas
cs
jmp
int3
clc
fldt
pop
jbe
jecxz
or
movsl
mov
cmc
test
mov
or
sbb
and
jo
out
daa
jb
mov
mov
pop
or
rorl
mov
fbld
push
rolb
mov
mov
mov
add
push
xchg
data16
sar
aaa
sbbb
dec
jmp
mov
dec
fildl
jp
dec
popf
push
into
pop
fsubl
loopne
xor
mov
xchg
jecxz
cmp
sub
mov
jmp
cmp
aaa
insb
push
mov
cli
or
adc
adc
jns
xchg
aaa
cld
add
sub
jmp
cmp
pop
cli
pushl
cld
popf
mov
and
mov
or
inc
cs
pop
loope
xor
std
es
cld
cmpsb
inc
add
jb
aad
add
add
push
icebp
es
rorl
pusha
scas
sbb
fsubs
inc
pop
mov
mov
inc
orl
and
out
xchg
and
jp
or
fcoms
xchg
and
pop
add
cmpsl
hlt
aaa
xor
add
jbe
jle
insl
mov
adc
push
or
and
and
out
adcl
fistl
jp
add
loop
fisubrl
add
push
ret
shlb
test
cmp
push
cmpsb
and
loope
js
mov
loope
push
adc
inc
popa
xor
and
call
fdiv
dec
pop
inc
leave
je
bound
add
add
mov
mov
sub
test
test
dec
mov
adc
shlb
sti
decl
add
stos
or
pusha
bound
inc
pop
pop
inc
sbb
test
pusha
mov
or
xchg
push
roll
pusha
add
inc
lds
aad
xor
ja
add
dec
js
popa
int3
orb
xor
mov
stos
mov
add
dec
push
mov
lcall
push
cld
rcl
js
cmp
andb
andb
pop
orl
mov
add
or
jno
out
movsl
pop
inc
shlb
nop
mov
xchg
inc
xchg
jle
rcl
push
xor
stos
inc
nop
loopne
in
push
cli
data16
dec
negb
loopne
cmp
jo
arpl
cwtl
popf
insb
pop
je
adc
js
xlat
or
mov
mov
jb
inc
or
lods
fbstp
cmp
dec
sbb
loopne
arpl
dec
les
jmp
aad
sub
pop
jno
mov
lret
fiadds
popf
js
cmp
popf
je
inc
jmp
sbb
mov
push
loopne
imul
mov
push
lcall
subb
cmp
push
or
jg
add
add
pop
mov
jo
cmp
jecxz
outsl
push
xor
jbe
add
roll
outsl
pop
cmc
xlat
pop
sub
push
or
dec
inc
xor
add
popf
xchg
mov
mov
sahf
inc
dec
dec
and
mov
nop
test
xchg
mov
and
and
arpl
mov
lock
rol
or
add
sbb
sbb
sub
fisttps
mov
pop
arpl
adc
mov
push
cmp
loopne
xor
xor
adc
add
add
xor
loop
xorb
fs
jl
jge
xchg
roll
adc
push
data16
std
lahf
jno
incb
mov
sub
daa
andl
addl
scas
push
dec
xor
sbb
clc
mov
adc
pop
push
add
push
mov
mov
cwtl
dec
jmp
add
inc
pop
movsb
into
in
sbb
add
push
mov
xor
or
mov
adc
jbe
cmp
xchg
shll
cs
dec
jg
jg
loope
arpl
jg
inc
add
inc
sbb
pop
push
mov
cs
push
xor
std
incl
push
pop
ja
sub
or
push
add
add
ljmp
fwait
shlb
arpl
fcmovbe
push
xchg
cmp
jp
andb
icebp
push
or
loopne
inc
jb
mov
jb
int
stos
cmpsb
pusha
and
jmp
jg
subb
sbb
and
or
pop
mov
xor
je
lock
mov
push
mov
xadd
aas
add
jle
adc
pop
hlt
ljmp
ret
xchg
pop
icebp
add
sbb
stos
adc
das
inc
xor
push
mov
jmp
test
jg
add
mov
cltd
pop
dec
out
fiadds
and
mov
int3
mov
cmpsb
test
cmp
mov
test
inc
fidivl
icebp
out
sub
icebp
push
cmc
xchg
inc
hlt
push
adc
xor
mov
pop
sub
addr16
cli
gs
and
dec
cmp
mov
xor
sbb
rcrb
jo
cmp
std
sub
pop
loopne
loop
loopne
mov
out
inc
xor
xor
mov
dec
scas
hlt
sub
mov
pusha
mov
and
clc
stos
mov
clc
ja
mov
pop
aad
add
outsl
jbe
arpl
inc
shll
xchg
cmp
out
add
fildll
adc
xor
pushf
jo
lock
inc
pushl
insb
add
scas
je
sbb
pop
cmp
pop
cmp
loop
or
mov
mov
mov
rclb
pop
sarl
je
subb
mov
ljmp
pop
or
out
insb
in
mov
movsb
mov
and
push
fbstp
clc
cmp
push
adcl
es
cli
and
mov
push
mov
mov
aas
mov
jp
sarl
pop
mov
sub
add
enter
imul
push
cmpl
adc
and
popaw
push
sub
xor
cmp
jbe
add
cli
add
movsl
decb
mov
fiaddl
hlt
xor
rorl
std
call
mov
or
sub
sbb
mov
add
popa
aas
lcall
ds
stos
or
jo
inc
or
cld
add
mov
lods
out
ljmpw
inc
inc
add
lods
loopne
decl
push
dec
nop
cmovo
nop
sbb
or
orb
inc
mov
dec
mov
stos
jmp
inc
mov
lock
dec
clc
shl
sbb
push
lods
gs
lock
pop
mov
xor
imul
out
add
out
fiaddl
insl
sti
jg
call
pop
and
sub
movsb
shl
push
or
mov
cmp
fbstp
ds
inc
adc
cmp
ret
lea
test
lods
add
push
in
jmp
aaa
push
fbld
rorb
or
or
jo
cmp
or
lds
add
popa
sbbb
aad
jns
adc
inc
and
out
pop
push
or
add
jle
test
xchg
mov
mov
outsl
dec
outsl
or
daa
add
or
mov
decl
xchg
or
dec
fcmovnbe
add
cmpsb
xor
add
or
outsl
sbb
lret
push
loopne
adc
jmp
adc
ljmp
jno
lahf
add
mov
cmp
pop
push
pop
pusha
jecxz
push
ret
push
adc
xor
ljmp
pushf
sub
pop
push
arpl
jg
test
outsl
or
xchg
jo
bound
push
jb
mov
jmp
sub
push
xchg
xor
cmp
mov
push
lods
jp
ja
lcall
xlat
pushf
nop
aas
enter
jo
adc
xor
popa
pusha
out
or
bound
inc
pop
and
fwait
sbb
addb
pusha
daa
mov
insl
in
movb
sbb
xchg
xchg
shrb
roll
int3
mov
push
lock
and
inc
adc
add
pop
xor
in
jno
shl
add
add
add
mov
push
mov
shlb
jmp
shl
add
jo
push
push
popf
or
or
adc
mov
imul
fisubl
mov
rolb
mov
push
fisubs
lcall
sbbb
out
sbb
add
jnp
adc
adc
test
cld
pop
cmp
xor
mov
add
inc
daa
xchg
sbb
or
ss
out
cmp
sbb
sub
mov
mov
add
pop
insb
daa
add
jle
xor
inc
push
mov
mov
mov
adc
incb
or
call
or
jmp
mov
out
pushf
test
mov
test
insl
xor
push
and
aaa
subb
repnz
or
out
clc
out
add
xor
sahf
add
cmp
or
push
mov
push
jae
inc
loop
sub
cmp
add
jecxz
xchg
sbb
fnstenv
pop
mov
pop
add
lahf
dec
dec
js
and
add
call
dec
pusha
call
push
out
push
add
and
orb
and
inc
pop
add
xor
and
dec
jecxz
mov
int3
xchg
or
xor
das
xor
scas
xchg
insb
add
jnp
cltd
and
pop
or
push
push
mov
dec
pushf
xor
jnp
movsl
rcrb
out
hlt
mov
jl
push
rorb
mov
jmp
jmp
jp
and
add
or
xor
pop
sbb
mov
cld
cltd
test
adcb
add
mov
pop
sub
test
xchg
mov
enter
mov
cmpl
arpl
pop
ret
outsb
inc
mov
icebp
test
add
and
addb
push
fimull
incb
es
inc
addb
push
lcall
cmp
cli
sub
xchg
add
xchg
ret
dec
add
lock
and
orb
insl
xlat
ljmp
fists
fwait
add
orb
test
jo
add
adc
hlt
or
and
mov
jge
jno
and
add
mov
or
mov
pusha
aad
mov
push
inc
shufps
loopne
add
jb
and
xor
mov
ja
into
jo
push
ret
dec
mov
and
xchg
mov
jl
cbtw
sahf
cmp
data16
subl
ss
jbe
or
push
test
shll
inc
add
iret
orb
stos
inc
or
xchg
xchg
ret
add
jb
movl
pusha
or
fldcw
push
inc
inc
cmp
fildl
das
cmp
fs
adc
pop
jecxz
arpl
lods
insl
xchg
sbb
or
popa
stos
popf
sbbl
mov
sarb
add
out
or
mov
adc
dec
imul
push
sub
ss
in
inc
ljmp
pop
add
pop
pop
inc
into
add
push
inc
incl
cli
pop
xchg
inc
push
imul
test
movsl
lcall
xorb
shlb
and
mov
mov
into
mov
mov
pop
sub
inc
push
inc
pop
jbe
cmp
pusha
fimull
add
loope
xchg
mov
pop
gs
inc
pop
push
mov
xchg
outsb
mov
inc
xchg
or
jp
lock
cmp
shl
es
xor
xor
cmp
push
inc
jae
pop
mov
inc
push
ljmp
sbb
adcb
mov
ljmp
xchg
lret
xchg
dec
pop
loope
add
imul
push
adc
cwtl
jbe
les
add
mov
adc
mov
ja
pop
lock
or
pop
push
add
jp
and
jge
or
inc
push
out
inc
testb
cmp
ljmp
dec
jb
outsl
and
ret
cmp
inc
adc
mov
adc
mov
imulb
rorb
adc
mov
push
mov
pop
cmp
loope
andb
arpl
xchg
sahf
adcl
data16
push
jmp
mov
orb
sbb
mov
out
and
adc
inc
lcall
ds
rorl
pop
push
or
inc
out
ret
mov
enter
std
ja
jb
ja
push
cmp
xor
mov
scas
adc
outsb
pusha
addl
js
mov
xchg
bound
jne
scas
adc
and
add
mov
lahf
gs
inc
lcall
xchg
inc
xor
or
scas
incl
cmpb
popf
adc
add
popa
xor
mov
inc
fmuls
nop
adc
scas
shlb
sub
mov
sar
pop
mov
add
mov
cld
mov
adc
and
into
add
popa
lcall
loope
sbb
ret
das
lret
push
mov
sar
std
loopne
jae
push
xor
mov
add
test
shll
sub
mov
js
jp
sbb
mov
xor
xor
adcb
or
test
ret
aad
test
pushl
out
testb
lods
mov
pop
mov
sub
scas
nop
loop
andl
fcomip
mov
mov
test
enter
pusha
xor
out
movsb
dec
insb
push
or
xor
inc
xchg
xchg
test
cmpsb
pop
push
mov
das
xchg
sub
pop
jmp
imul
imul
dec
popa
adc
jp
rorl
push
push
lock
sbbl
popa
dec
popf
mov
inc
or
xor
cmpsb
loop
outsb
arpl
bound
cmpsb
mov
sbb
add
std
add
cmp
pop
sbbb
lcall
inc
es
rolb
jno
mov
ljmp
clc
dec
pusha
mov
sbb
decl
inc
xadd
dec
jno
ljmp
push
jl
adc
data16
inc
and
adc
pop
dec
pop
pop
sbb
push
dec
loopne
push
or
push
push
clc
lods
call
mov
inc
jle
sub
sub
inc
or
and
cmp
pop
and
mov
test
bndldx
mov
and
push
mov
cmp
inc
mov
ljmp
stos
mov
ficompl
jg
push
and
call
pop
or
xchg
add
popa
xor
adcl
cltd
inc
mov
ret
mov
push
push
xchg
sbb
inc
dec
test
rcrl
mov
dec
dec
rcrl
fwait
shlb
cmpsb
ror
testb
mov
pop
push
rolb
pop
lcall
fimull
cmpb
mov
jle
enter
cs
movsl
andl
and
add
add
and
push
cmpsb
and
sti
fstpt
add
or
inc
shlb
push
adc
push
adc
stos
add
andb
or
push
adc
inc
addb
xchg
mov
cmp
or
add
mov
mov
sub
add
sbb
jg
inc
mov
aaa
xchg
lock
push
out
sbb
ud0
pop
andb
xor
adc
movsl
xor
adc
mov
ja
xchg
or
xchg
and
jno
dec
or
mov
add
orl
out
jmp
push
cmp
xor
xor
push
mov
push
or
adcb
ficoml
mov
jl
andb
sub
orb
fimull
mov
jle
es
mov
push
add
sub
scas
xchg
inc
ret
outsb
js
jmp
xorb
add
xor
mov
and
mov
dec
jo
decb
adc
adc
inc
jle
xor
ret
icebp
mov
xor
xor
mov
scas
nop
aam
data16
dec
loope
jg
cmc
fwait
push
pop
aas
sub
add
push
inc
mov
push
xchg
jmp
lret
jle
loopne
and
xor
pop
mov
push
push
push
outsb
sbb
mov
lods
jecxz
out
testb
pop
jp
inc
in
mov
scas
xchg
rcll
dec
xor
add
pusha
inc
pop
scas
outsl
mov
mov
outsb
and
aam
mov
stos
inc
pop
pop
xchg
dec
hlt
inc
jno
jbe
xor
mov
mov
push
mov
xor
pop
sbb
xor
push
sbb
int3
add
add
add
enter
add
jnp
pop
loopne
fucomip
adc
or
outsl
adc
loopne
mov
jp
push
push
cld
or
inc
sbb
push
cmp
jp
mov
or
data16
adc
push
mov
inc
sub
pushf
xor
aaa
aad
xor
call
add
or
pop
les
inc
jmp
or
pop
cmpsb
pop
ljmp
scas
pop
jo
jecxz
dec
rcrb
push
mov
cmp
mov
inc
mov
in
incb
lret
add
jmp
decl
push
outsl
and
test
xchg
mov
add
ljmp
addl
imulb
xchg
or
addr16
dec
sbb
loopne
outsb
jmp
fistps
nop
mov
xorb
dec
aam
stos
jecxz
mov
mov
jbe
pop
cld
clc
mov
mov
sub
dec
js
lods
add
xor
add
mov
shl
outsl
pop
cs
cmp
add
xor
lock
pusha
adc
lret
test
add
xchg
sub
mov
jb
add
sub
shrb
jb
lahf
mov
adc
jmp
or
mov
fisubl
out
shlb
mov
out
sbb
data16
sbbb
and
test
insb
jg
fadds
mov
pop
aaa
xchg
adc
aaa
push
push
outsl
stos
movsb
aad
push
mov
add
aaa
pushl
xor
jo
mov
add
mov
or
add
ret
push
cmp
je
jb
cmp
fidivl
add
lcall
or
push
dec
aas
jmp
pop
test
test
xor
add
aas
add
push
fcompl
loop
stos
in
or
in
sbb
inc
pop
jg
add
add
dec
ret
inc
add
fbld
adc
popf
test
jg
addr16
rcrl
lock
rclb
mov
push
jno
gs
outsl
inc
lock
lea
xor
add
mov
xchg
mov
inc
or
adc
loope
insb
nop
and
loopne
or
jmp
pop
mov
push
push
in
incl
loop
sbb
and
das
xor
mov
pusha
sbb
filds
add
add
jne
mov
mov
add
add
iret
inc
xor
rcrb
test
pop
in
or
jle
cmp
jb
outsb
xchg
xor
data16
push
and
mov
pop
push
or
mov
pop
inc
push
jmp
dec
lock
inc
jmp
sbb
ss
movsb
cmp
ffreep
inc
inc
push
or
add
iret
rorb
dec
add
mov
mov
incl
mov
negb
inc
mov
push
jle
sub
or
push
or
push
les
movsb
jo
jb
fdivp
subb
andb
in
stos
or
jge
push
adc
xchg
or
or
popf
xchg
or
or
sub
mov
adc
leave
jae
divb
add
xor
paddq
or
inc
and
push
xchg
es
and
jmp
sub
test
pop
pop
push
outsb
jmp
adcb
cmpsb
aad
xor
shl
andb
lock
xor
shl
add
sub
mov
pop
add
add
int3
mov
or
dec
mov
incl
xorl
xor
imul
jb
and
pop
sub
inc
subl
dec
xor
xor
std
mov
scas
add
int
push
pop
mov
inc
xor
dec
push
cmpsb
and
and
sbb
jl
and
call
call
shlb
adc
orb
add
ret
ret
sbb
out
cmp
icebp
mov
pushf
ficompl
cmp
aas
add
incl
mov
xor
sbb
mov
push
cltd
mov
test
jecxz
and
jp
mov
mov
sub
add
add
and
inc
hlt
sub
dec
loop
pop
pop
dec
pop
in
or
scas
add
mov
icebp
and
int3
movsb
daa
cmp
hlt
sub
sub
add
jno
mov
or
or
cs
add
or
adc
jg
or
push
add
sbb
mov
fsubs
xor
jne
fidivs
xchg
and
sub
pop
lahf
addb
lock
movsl
addb
sub
js,pn
xchg
lret
shr
add
pop
lods
test
dec
mov
jo
mov
addb
add
negb
outsb
loopne
mov
hlt
adc
adc
push
pop
mov
and
leave
add
or
add
lret
test
mov
roll
cmp
dec
clc
fisttpl
mov
jmp
or
dec
pop
jne
and
add
in
ss
ret
ds
mov
pop
andb
jmp
mov
cmp
testb
pop
adc
jmp
decb
or
bound
mov
data16
pushf
sbb
cli
orb
rcll
test
inc
cmpl
mov
inc
jo
inc
out
fwait
lock
or
inc
popf
mov
pop
inc
sbb
inc
add
mov
sbb
mov
insb
call
inc
pop
hlt
push
sub
test
dec
repnz
jbe
jo
xor
push
mov
jg
mov
sub
lods
xorb
jle
pop
sbb
addl
fldt
mov
repz
cmp
inc
cmp
stos
test
mov
lock
inc
or
jo
sbb
out
imul
and
adcb
pusha
mov
sbb
outsb
cmp
movb
hlt
xorb
jle
inc
leave
rorb
inc
mov
test
mov
or
cmp
pop
and
pop
lock
test
adc
pop
ffree
bound
sub
mov
icebp
test
mov
mov
xor
mov
lods
mov
add
inc
cmp
sbb
inc
sbb
lds
adc
out
mov
sar
jecxz
pop
jo
and
jmp
xchg
xchg
arpl
xor
mov
mov
mov
jbe
or
add
mov
lret
cmp
mov
xor
arpl
xor
stos
and
loopne
add
sti
adc
push
addb
fistpl
cld
outsl
pop
mov
inc
xchg
and
jo
inc
mov
incl
inc
cmp
pop
xor
test
in
or
popf
adc
pushf
add
test
add
loop
aaa
add
insl
aam
mov
or
stos
ljmp
jle
ljmp
outsl
out
cli
nop
aam
popa
test
jecxz
add
outsb
arpl
pop
ljmp
inc
mov
call
or
or
sub
add
rolb
mov
add
inc
jl
stos
push
cmp
test
adc
je
pusha
repnz
std
adc
call
outsb
ret
cld
insl
mov
movsb
arpl
pop
add
negb
pusha
lret
es
decl
pushl
fwait
loope
popa
jmp
mov
xchg
call
ret
movsb
popa
push
mov
inc
das
xchg
adc
and
cwtl
add
popa
shlb
test
repz
pusha
inc
rcrb
add
adc
ret
mov
add
ret
add
js
inc
pop
cmp
push
add
push
add
sbb
cs
fisttpl
adc
fldcw
adc
jp
aas
xchg
ljmp
shr
popa
push
adc
test
push
insl
in
inc
inc
xor
out
leave
icebp
ja
outsb
popa
xchg
pusha
sbb
sub
cmc
lcall
jmp
pusha
loope
add
add
pop
mov
and
stos
pop
pop
loop
and
push
cmpsb
mov
and
add
mov
push
add
mov
movsb
mov
xor
mov
stos
pushf
stos
inc
stos
add
cmpsl
js
add
ljmp
repnz
int3
test
or
lcall
xor
data16
das
cwtl
ljmp
mov
cltd
add
and
adc
pushf
out
xor
cmp
lock
ljmp
outsl
sahf
mov
or
add
mov
enter
jne
mov
sbb
mov
outsl
jb
mov
adc
arpl
mov
dec
or
push
xor
push
aaa
in
stos
mov
mov
aam
and
dec
call
test
out
pop
call
jb,pn
push
outsb
jb
add
xchg
adcb
pusha
add
dec
sbb
sub
mov
insl
sbb
xorb
xor
loopne
mov
adc
inc
dec
int3
fsubs
mov
and
movsb
xchg
adc
dec
clc
inc
insb
cwtl
shlb
jmp
out
int3
jnp
je
test
sbb
push
mov
das
fbstp
loope
and
dec
pop
lods
xorb
enter
pop
das
sub
je
xor
js
mov
jmp
mov
outsl
addl
data16
adc
arpl
loopne
pusha
cmp
mov
mov
inc
sub
ja
in
pop
scas
mov
add
xchg
loopne
mov
add
mov
or
inc
and
mov
xchg
adc
and
fiaddl
adcb
push
jo
jle
xor
and
cmp
mov
popa
adc
fidivs
je
add
push
jnp
ss
insb
xor
add
add
and
mov
mov
cmp
adc
stos
adc
repnz
jne
or
mov
mov
mov
rorl
or
add
or
or
repnz
add
imul
mov
inc
lock
push
or
mov
or
popa
sub
pop
flds
pop
clc
mov
loop
fnstenv
pop
or
push
or
xchg
push
or
testl
nop
xchg
jl
push
inc
push
adc
pop
lcall
subl
shlb
sub
out
cli
or
inc
or
sbb
add
dec
add
jo
rorb
xor
sub
push
aaa
je
jmp
das
add
rolb
js
fsub
cmpb
push
call
rorb
pusha
push
jno
pop
dec
pop
insb
add
adc
outsb
shr
jnp
fstp
pop
out
and
xor
mov
call
sub
pusha
add
sbb
dec
or
jo
rcrb
sbb
cmp
inc
push
jo
ds
loop
outsl
mov
loop
xor
jne
adc
add
xchg
jo
xor
push
sub
shrb
xor
loope
popf
fsubs
std
xor
xor
sub
add
add
loopne
xchg
incb
sahf
cs
xor
inc
adc
stos
out
or
add
jle
clc
arpl
pop
cs
pop
movsb
or
shl
stos
mov
in
je
adc
jp
add
fneni(8087
pop
gs
add
in
mov
nop
aaa
jb
ja
add
or
adc
popa
cmp
popa
or
add
sbb
add
clc
fildl
repnz
mov
sub
stos
dec
lock
mov
inc
push
lods
sub
movsl
arpl
inc
add
shrb
push
mov
jle
addr16
mov
xor
popa
xor
pop
loopne
or
lods
push
and
outsl
dec
mov
or
shl
xorb
adc
outsl
pusha
jbe
out
not
push
mov
andb
and
adc
mov
push
push
push
jmp
jg
xor
inc
sahf
pusha
and
inc
pop
cld
pop
hlt
sbb
cwtl
mov
mov
outsb
rcrb
inc
add
sti
aas
add
ret
push
add
fisubl
aam
mov
js
xchg
adc
inc
push
and
add
cmpsb
push
or
push
bound
out
and
pop
inc
loopne
es
enter
pusha
das
cli
aaa
decl
cs
pop
je
mov
xor
xor
loop
xor
mov
mov
mov
test
sub
adc
adc
dec
xchg
add
mov
push
xchg
mov
add
or
push
mov
popa
sub
add
xor
arpl
mov
pop
cmp
cmp
push
mov
sarb
adc
push
adc
jo
cmp
and
int3
mov
lea
jae,pt
es
push
cs
add
or
icebp
add
sar
aaa
xchg
add
and
aas
push
adc
adc
add
mov
mov
cmp
faddl
mov
data16
mov
add
and
adc
and
and
loop
insb
add
and
ja
mov
sbb
jp
ss
push
push
stos
movsb
decl
mov
stos
xor
lcall
loope
test
dec
push
adc
adc
out
fnsave
pop
mov
sahf
rclb
mov
and
pop
and
inc
daa
icebp
mov
pop
xor
push
scas
aam
or
mov
jle
icebp
mov
push
dec
int3
pop
inc
adc
jg
lock
sarb
or
lds
lret
mov
add
mov
mov
incb
sbb
scas
lock
sub
push
or
adc
jb
shll
and
or
push
and
nop
pop
pop
dec
or
int
shrl
add
sbb
pop
test
adc
xor
notb
xchg
pusha
aas
dec
mov
push
dec
lcall
imul
loopne
insb
inc
pop
je
arpl
inc
sub
fmulp
mov
xor
and
andb
fstl
dec
stos
movsb
decl
lock
inc
xor
jl
sub
mov
dec
pop
ss
inc
loopne
or
mov
mov
inc
shlb
mov
push
push
rorb
or
outsl
call
or
pop
xor
push
std
stos
lock
out
inc
loopne
mov
in
add
inc
loop
decl
jo
xchg
dec
mov
jo
int3
push
mov
xor
or
inc
cmc
sbb
jl
dec
rolb
lahf
test
pusha
cmp
cmp
out
pop
push
add
lcall
mov
cmp
mov
lods
sub
or
xor
inc
sub
aaa
adc
ret
push
lock
daa
scas
push
stos
cmp
outsb
dec
inc
cmp
inc
cmpsb
add
jge
cmp
xchg
inc
mov
cld
stos
loopne
cmp
add
mov
cmp
or
or
cmpsb
cli
test
clc
es
pop
outsl
push
in
push
pop
clc
call
add
sbb
cmp
jmp
hlt
or
and
add
add
sbbl
xor
loopne
jg
stos
movsb
add
sbb
push
addb
jp
jge
cli
cmp
or
cmp
push
mov
data16
jb
or
int3
pop
xchg
sti
and
push
inc
sub
mov
inc
cmp
dec
addb
add
ds
inc
inc
add
push
mov
leave
cli
insl
ljmp
or
ret
add
movb
mov
loopne
xchg
out
orb
push
jo
mov
inc
flds
jle
push
outsb
add
into
sbb
push
add
inc
inc
scas
xor
xor
mov
aam
cmp
pop
pusha
push
addb
mov
sub
je
in
add
jae
outsb
inc
pop
push
clc
sub
fadds
mov
mov
cwtl
imul
call
fldl
sbb
data16
mov
push
call
xchg
push
int3
fcomip
gs
and
mov
mov
cmp
and
test
fcoml
dec
mov
outsb
or
test
or
fmuls
mov
add
aad
xchg
mov
dec
pop
push
push
mov
push
popf
orb
clc
inc
shll
loopne
loope
push
jmp
jl
scas
jo
dec
push
dec
add
pop
xor
cmpsb
rorl
mov
xor
jb
sub
push
stos
push
mov
pop
add
ret
nop
lcall
movsb
pop
pusha
mov
ret
push
notb
mov
or
into
mov
add
mov
hlt
out
aas
fimuls
orb
xchg
enter
cmp
mov
jmp
adc
and
xor
aad
aam
cmp
loopne
andl
orb
xor
jno
sbb
fmul
sarb
mov
mov
sbb
mov
mov
add
call
gs
daa
adcb
call
push
das
popf
daa
cmp
outsb
adc
adcl
enter
movsb
daa
add
push
and
add
aaa
loopne
mov
pop
adc
and
xchg
adc
cmpsb
ljmp
insl
addl
insl
mov
adc
cmp
push
add
test
sarl
xor
repnz
mov
je
mov
add
popa
push
xor
cwtl
int3
roll
cs
cwtl
adc
add
cmp
out
test
cmp
cltd
imul
jb
rorl
mov
sbbl
popa
test
lcall
dec
xor
mov
rorb
add
add
cmp
popa
loope
arpl
or
add
and
adc
jp
push
fimull
out
xchg
push
dec
and
mov
dec
pop
out
mov
js
mov
pop
sbb
adc
jp
aad
mov
xchg
and
push
add
addb
and
fcmovne
js
or
inc
sbb
inc
sbb
mov
xchg
add
and
adc
lock
out
and
dec
pop
add
jne
xchg
shlb
lcall
andb
cli
daa
xchg
imulb
sub
mov
testb
add
sbb
mov
sub
fs
and
add
sbb
and
add
je
mov
je
mov
xor
mov
adc
xchg
mov
pop
mov
lret
popa
xchg
in
fistps
sbb
and
mov
adcb
out
shr
sub
cmp
stos
dec
and
dec
mov
sbb
adc
roll
addb
out
adc
int3
mov
cmc
push
loop
mov
sarb
push
add
and
not
rorl
nop
sub
xchg
mov
and
xor
adcl
loop
add
ror
inc
jmp
popa
mov
push
loop
mov
sbb
pop
les
xchg
pop
dec
std
mov
dec
shlb
les
out
out
les
adc
inc
divb
xchg
lcall
pop
cmp
push
sbb
cmp
mov
sub
pop
addb
push
lds
or
insb
and
mov
data16
add
out
add
fisttpl
cmpsb
out
pop
and
loopne
stos
inc
cltd
add
insl
or
jmp
into
pop
sub
addb
dec
sbb
xchg
add
or
pop
and
xor
cmp
add
inc
jmp
sbb
sbb
and
mov
adc
movsl
adc
mov
add
and
mov
jle
test
push
inc
ja
add
data16
outsl
das
ret
rorb
adcl
inc
add
cmp
aaa
push
insl
sub
movsb
dec
xchg
fs
int3
lcall
sub
jns
stos
or
shll
xor
sub
pusha
orl
sub
or
and
sub
incl
pop
or
xchg
loopne
icebp
add
push
arpl
dec
nop
sub
pushf
push
jg
push
and
xor
xor
xchg
and
mov
cmp
push
test
adc
mov
jmp
pop
pusha
cmp
fisubs
push
lea
or
outsl
nop
push
jmp
or
push
add
jg
dec
jnp
cmc
and
pusha
xor
inc
mov
mov
das
fcomp
mov
mov
jo
sbbb
inc
loope
inc
mov
and
loopne
jmp
ss
imul
test
sbb
cld
mov
add
cli
out
std
mov
push
dec
or
rcrb
mov
orb
push
xchg
cs
and
push
and
jg
dec
jmp
and
pop
inc
rcrb
xlat
inc
je
js
rol
inc
mov
dec
pusha
lret
sub
add
pusha
sub
arpl
loopne
out
adcb
jmp
fiadds
mov
roll
inc
mov
bound
xchg
or
loopne
dec
rclb
popl
push
or
test
inc
pusha
dec
push
push
xor
add
mov
scas
and
cmp
adc
popa
sti
xor
sar
es
add
sub
sbb
inc
add
adc
and
mov
and
and
test
inc
add
push
add
push
push
add
cli
add
cmc
dec
dec
push
sarb
push
daa
adc
push
sarb
cmp
outsb
add
sbb
cmp
xchg
cli
loopne
sbbl
fs
aas
add
fmuls
jb
imul
jge
fwait
cmp
popf
xor
sbb
shlb
jecxz
idivb
pop
lcall
jecxz
cltd
mov
and
sbb
push
mov
incl
mov
pushf
xchg
and
js
jo
popa
xchg
sbb
cmp
jo
rclb
je
ss
pushf
xor
loop
nop
popa
xchg
test
push
or
push
popw
jno
or
insb
add
add
out
cmp
xor
mov
push
aaa
mov
jne
or
jnp
loopne
ljmp
add
or
enter
jo
add
jle
cmpb
push
jl
dec
add
nop
add
inc
jg
sub
icebp
cmp
insb
pop
jo
xchg
pushf
cli
mov
mov
stos
rcr
outsb
clc
mov
sbb
xor
rorb
out
cmp
rorl
sbb
push
insb
sub
pop
rorb
loop
xor
pop
mov
nop
add
push
loopne
jp
mov
movsl
out
mov
and
inc
inc
jo
sbb
add
inc
lcall
lock
push
repnz
adc
inc
jecxz
inc
and
adc
mov
add
stos
pop
clc
push
shl
fstl
push
add
outsb
loopne
inc
lock
fwait
push
jae
xchg
add
movsl
scas
fs
gs
sub
ljmp
add
imul
mov
adc
aam
or
nop
aas
push
stos
mov
sarb
mov
sar
out
pusha
mov
add
ljmp
add
inc
jb
and
add
loope
push
shrb
push
mov
or
adc
pushl
xor
ss
loope
xchg
push
jno
add
mull
mov
push
or
adc
testb
jmp
inc
mov
call
xor
shlb
sbb
or
jmp
sarl
add
popa
rolb
mov
xchg
inc
ljmp
push
pusha
and
stos
and
andb
pop
push
outsb
cmp
pusha
es
xor
adc
repnz
or
jo
push
and
add
inc
pop
mov
mov
gs
push
mulb
rolb
add
cmpsb
add
fisubrs
push
push
inc
cli
add
loopne
in
dec
add
fisubs
add
push
test
mov
movb
adc
pusha
add
je
or
dec
jmp
test
mov
js
pop
mov
adc
fisttps
xchg
rorl
adc
jne
data16
subb
adc
add
cmpb
paddd
sub
push
js
xor
cmp
and
outsl
cmp
js
nop
adc
and
xor
outsl
int3
mov
add
sub
fbstp
jo
rcrb
or
out
jmp
sub
shlb
jno
lret
adc
mov
sbb
add
mov
add
int3
and
in
adc
loope
adcb
das
xchg
add
andl
cmp
ffreep
xor
or
cmp
sub
push
inc
jle
repnz
mov
popa
push
cmpsb
bound
push
pop
xchg
popa
call
cli
mov
mov
pusha
mov
dec
ja
ljmp
pop
lock
mov
popa
shlb
mov
fistps
and
pop
daa
test
push
jo
sbbb
jbe
mov
dec
xchg
xor
sbb
mov
and
sbb
test
xor
jb
or
mov
mov
mov
or
push
or
adc
mov
pop
insb
or
or
push
jg
push
je
xor
clc
lcall
or
test
add
mov
adc
loop
push
inc
aad
push
inc
aad
push
pushf
xor
jg
add
aam
sub
xchg
loop
ficoml
adc
inc
mov
and
or
loopne
lcall
mulb
sub
out
call
sar
add
xchg
push
or
pop
mov
inc
popf
daa
fstpt
xor
movsl
add
add
xchg
fiaddl
add
mov
adc
rorl
xor
sbb
inc
xchg
rcrb
jmp
inc
mov
nop
lret
push
xor
add
dec
insb
or
jo
mov
incl
rcrb
jb
xor
loope
mov
or
shlb
fcomip
popa
cmp
jno
loop
orb
push
outsb
mov
add
loope
roll
mov
adc
leave
cs
mov
cwtl
mov
sbb
cmpb
cmp
adc
mov
mov
loop
mov
push
sbb
popa
mov
dec
push
inc
call
in
jg
lock
and
push
pop
mov
arpl
add
sbb
push
scas
and
and
mov
and
nop
sbb
or
add
and
xchg
ja
pop
aas
pop
xor
or
add
pop
dec
jno
pop
pop
mov
pop
pusha
mov
lock
adcb
inc
pop
jns
push
adc
addb
mov
pop
mov
push
sub
outsl
or
adc
push
pusha
and
outsl
ss
push
add
adcb
bound
cli
mov
and
jecxz
shl
pop
mov
xorl
lcall
out
and
dec
sbb
addl
arpl
push
andb
testl
cmp
push
pop
inc
xor
inc
mov
and
mov
add
dec
ljmp
clc
mov
jl
adc
ja
and
sub
ja
xor
mov
sub
in
xchg
stos
mov
ljmp
loopne
rcll
push
mov
cmp
data16
xor
outsl
imulb
mov
mov
cli
add
movsl
sbb
jb
loop
in
mov
mov
and
test
mov
sub
mov
and
add
hlt
mov
add
adc
aaa
sub
and
add
xor
pop
or
in
repnz
test
pop
jnp
add
ljmp
scas
addl
sbbl
lods
dec
testb
xor
cmp
add
dec
or
aam
lds
mov
mov
lahf
add
jge
inc
and
add
aaa
inc
adc
cmp
add
ljmp
and
sub
inc
test
js
mov
jae
inc
movsb
add
push
hlt
arpl
test
fadd
xchg
subb
fwait
sub
inc
mov
lcall
outsl
xchg
addl
dec
mov
push
sub
fiadds
and
les
push
pop
push
jmp
push
or
xchg
sbb
jl
testb
pop
or
subl
ljmp
pop
dec
mov
jns
inc
pop
mov
or
xor
add
ja
cmp
arpl
push
jp
mov
into
jp
scas
andl
movsl
movsb
fcmove
and
pop
repnz
dec
shrl
pop
xchg
push
pop
xor
cmpsb
or
test
and
add
mov
pop
cs
mov
and
and
mov
int3
sbbb
inc
test
push
inc
push
dec
fs
inc
adc
aad
push
imul
incl
add
xorb
and
adc
or
ret
inc
incb
loop
scas
pushl
add
add
or
push
jl
mov
jg
pusha
sub
jno
mov
addr16
pop
push
add
fidivs
fcoml
adc
and
testb
add
out
clc
aad
pop
dec
lods
iret
push
add
js
and
dec
mov
filds
test
adc
inc
ret
repz
ficoml
add
mov
scas
mov
jae
ret
and
add
inc
or
mov
add
xor
xor
sbb
xchg
cld
movsb
inc
dec
insl
jle
orb
inc
mov
push
cmpsb
les
push
add
push
fsubrl
push
jbe
lods
and
and
pop
add
sbb
xchg
jecxz
pop
adc
inc
sub
aam
add
pop
adc
jle
and
mov
sbb
add
add
mov
add
mov
adc
cmpsb
rorb
rorb
lock
test
and
outsb
js
invd
or
add
xchg
aaa
or
xor
in
push
inc
fisubl
inc
pop
mov
movb
xchg
adc
sub
pop
sbb
pop
fs
ret
cmp
mov
rep
sub
add
mov
loope
hlt
add
mov
sub
add
decl
stos
inc
mov
dec
jp
push
sub
add
scas
or
ds
inc
call
cmp
mov
sub
add
mov
hlt
mov
ret
in
push
test
ss
or
sbbb
xchg
leave
and
xchg
pusha
addl
jl
jle
cmp
sub
test
mov
mov
out
ss
std
pusha
das
mov
cld
pop
cld
pop
je
jp
sub
add
dec
outsb
pop
rorb
add
pop
mov
sub
xor
and
push
fs
shlb
lret
cld
push
xchg
sbb
push
push
or
xchg
outsb
loopne
shrb
aaa
mov
rclb
fdivp
sbb
sbb
cld
jmp
xor
mov
mov
sbb
sbb
jg
jmp
push
sub
popa
es
dec
cld
arpl
push
dec
push
into
push
inc
addb
ret
push
outsl
in
movsb
inc
imul
inc
test
xchg
cmpsl
imul
jecxz
jg
lock
cmp
and
xor
aas
jbe
adcb
leave
add
or
adc
data16
pop
aad
mov
push
call
stc
decb
xchg
cmp
or
xor
movsl
inc
mov
xor
cmpsl
add
dec
test
decl
rcll
add
jbe
xchg
bound
test
aas
lret
fwait
shlb
mov
dec
out
call
add
mov
add
or
divb
add
push
push
xorl
push
push
add
jg
mov
clc
pusha
into
adc
mov
dec
outsb
mov
cmp
fisubrs
fcmovb
pop
or
and
add
fsubl
scas
loopne
adc
mov
incl
inc
add
aas
addb
loop
dec
lock
sbbb
jbe
sub
mov
push
mov
sbb
bound
or
dec
mov
mov
mov
inc
pop
push
sbb
jp
mov
rcrb
mov
rol
sub
push
pop
add
add
xor
push
sub
push
or
out
adc
and
sub
out
xlat
dec
rolb
mov
cld
and
mov
data16
test
push
jo
push
inc
adc
bound
fs
add
pop
dec
inc
push
inc
add
nop
decl
stos
jae
add
jne
xchg
and
adc
subl
movsb
mul
push
pop
hlt
dec
or
sub
sarb
subb
add
adc
mov
jge
xchg
jp
push
orl
insb
adc
out
fwait
outsb
or
clc
and
pop
rcr
xor
wbinvd
adc
or
or
dec
sub
add
jg
mov
addr16
dec
cmpsb
or
jbe
orb
pop
add
mov
fs
add
fidivl
mov
add
adc
clc
mov
and
dec
loopne
mov
adc
roll
arpl
popa
lods
call
nop
xchg
xor
pop
nop
adc
or
mov
xor
and
add
stos
pop
fiaddl
xorb
cmp
rorl
into
lcall
pop
aaa
add
insb
and
inc
fidivl
call
inc
jb
inc
das
xchg
add
aaa
mov
mov
fsubrl
inc
xor
sarl
inc
pop
cld
add
stos
int3
aam
lock
loop
decl
mov
clc
mov
or
xchg
add
and
push
xor
mov
sbb
cmp
lds
jno
hlt
aaa
imul
push
mov
push
or
incl
push
adc
mov
add
and
enter
xor
adc
mov
push
stos
in
icebp
outsb
pusha
jmp
clc
mov
mov
sbb
pop
adc
add
sbb
rorb
and
jg
ss
push
xchg
inc
adc
fst
sbb
xchg
std
add
xor
sub
adc
test
sar
dec
popa
and
xor
cltd
loopne
jle
or
sbb
bound
adc
shrb
or
or
shlb
mov
inc
imul
push
cs
imul
ja
xchg
push
or
fdivrp
push
pop
nop
sbb
or
nop
out
and
xor
inc
and
dec
outsl
mov
adc
pop
lcall
xor
add
xchg
test
inc
adc
or
sarl
xchg
inc
lret
mov
push
push
jg
pop
jo
xchg
ss
adc
rcrl
xor
pushf
jb
mov
pusha
pop
mov
je,pn
andl
inc
outsb
andb
aam
xchg
or
aad
dec
test
inc
hlt
and
hlt
outsl
push
pop
lock
mov
jo
shlb
ficomps
addb
in
or
jo
lock
js
inc
enter
and
push
pop
and
sub
fdivs
pop
sbb
or
inc
adc
scas
cmpsb
stos
fcomip
pop
lock
push
mov
popf
fcomps
inc
inc
add
fiaddl
rcrl
xor
add
movsb
pushf
xchg
repnz
sbb
sbb
loopne
out
push
out
arpl
lret
pop
mov
xor
jecxz
stos
loopne
jg
and
out
aas
scas
mov
add
xor
ljmp
in
insb
xor
mov
mov
orb
or
orb
adc
cmp
mov
push
push
and
and
inc
and
shlb
or
mulb
mov
jmp
push
xchg
test
inc
and
dec
pop
inc
movsb
mov
sub
insl
in
sar
das
lcall
scas
adc
and
rcl
cli
push
loop
jno
rcll
mov
push
or
and
fdivl
mov
dec
mov
push
lea
fwait
mov
mov
nop
add
push
pop
data16
adc
outsb
cmp
xor
mov
push
std
jg
add
movsb
mov
das
adc
push
mov
cmp
loopne
cmpsb
js
sbb
ljmp
and
add
es
push
jmp
movsl
loopne
cmpb
call
inc
push
dec
pop
sub
aam
adc
test
in
xchg
push
fdivp
xor
call
sbb
rol
and
add
int3
push
xchg
sub
mov
loope
xorl
xor
popa
xor
pop
cmp
push
adc
ja
mov
pop
cmp
inc
pop
aad
mov
mov
mov
jecxz
bound
and
and
pop
pusha
int
iret
lcall
cmp
and
push
cmp
xor
jae
into
decl
push
or
xlat
xor
xchg
shlb
leave
and
ret
lds
push
and
xchg
incl
pop
mov
or
xor
mov
out
xchg
rclb
das
xchg
xor
or
movb
in
add
or
push
xor
stos
adc
adc
sarb
cmp
cli
pop
add
and
into
loopne
add
add
insl
dec
lds
or
lret
sbb
and
ret
imul
sub
xor
gs
mov
cld
sub
push
sbb
jle
daa
cltd
sbb
inc
es
psadbw
pop
push
lcall
cmp
sarb
popa
push
add
xchg
mov
xchg
adc
insl
add
push
inc
xchg
cs
repnz
xor
add
mov
inc
or
add
adc
inc
in
pop
pop
sub
stos
xchg
add
or
cmpsb
fbstp
inc
outsb
outsb
dec
add
or
cmpsb
cwtl
ljmp
jl
pusha
sub
pusha
jg
loopne
add
add
xor
loop
sbb
test
cmpsb
push
pop
adc
loopne
decb
scas
add
xorb
scas
add
nop
mov
add
add
imul
lea
xchg
stos
mov
lea
filds
js
sub
sub
sub
or
push
sub
add
or
dec
loop
add
sub
sbb
mov
add
movb
cmp
jbe
add
and
orb
xchg
lock
ret
inc
test
enter
or
fs
lock
xchg
dec
xchg
dec
or
cmp
inc
jns
push
dec
mov
sub
mov
add
aas
test
inc
loop
ss
cs
xchg
test
xchg
pusha
push
lods
hlt
inc
and
or
inc
adc
orl
xchg
subb
shrb
addr16
push
sbb
push
in
xor
pusha
adc
mov
shlb
test
add
les
jmp
and
xchg
nop
push
jecxz
call
xchg
inc
jb
hlt
add
and
mov
push
mov
imul
or
insb
stos
sbb
sti
adc
push
dec
push
mov
loopne
dec
push
mov
lcall
sub
inc
adcb
mov
dec
sub
xchg
rcrl
aad
sub
cltd
incb
or
jg
cmc
sub
lret
lcall
cltd
and
inc
mov
mov
cmp
mov
inc
loopne
xor
sti
add
les
and
mov
inc
loopne
repnz
jne
and
push
mov
mov
imul
push
inc
xor
loopne
sub
dec
in
mov
popf
mov
mov
jb
adc
jg
loop
xchg
out
jmp
adc
insl
sbb
adc
or
decl
rolb
sbb
inc
and
mov
sbb
bound
pusha
inc
and
lea
loopne
je
jnp
sub
pop
shll
and
incl
sub
xchg
or
daa
ret
ja
xorl
fs
mov
dec
mov
add
mov
out
dec
mov
loop
mov
jmp
rorb
ljmp
adc
pop
icebp
or
dec
jo
inc
cli
in
jecxz
mov
imul
inc
xchg
mov
push
or
pop
das
adc
adc
clc
loop
adc
xchg
scas
push
or
inc
mov
xor
lret
shrb
or
mov
add
sub
enter
push
push
adc
pop
mov
stos
pop
repnz
imul
outsb
rolb
clc
add
and
pop
and
add
add
push
cmp
mov
sbb
loope
inc
mov
dec
aas
xchg
xor
and
das
and
and
decl
dec
push
je
dec
xchg
dec
out
in
or
jle
and
ret
test
negb
push
enter
xor
stos
addb
dec
je
add
aaa
or
sbb
out
adc
dec
mov
xor
inc
adc
inc
adc
dec
push
add
or
mov
cmp
orl
adc
mov
es
xor
lahf
sbb
rcr
je
je
rorb
bound
loop
aad
les
mov
and
aaa
push
xchg
xor
outsb
adc
inc
stos
loopne
ficoms
aas
mov
pushf
pusha
sub
jbe
lcall
sahf
sarb
mov
mov
mov
dec
mov
xor
inc
fstpl
xorl
out
pusha
inc
ret
pop
mov
adc
xchg
aas
rolb
pusha
mov
adcb
xor
dec
and
jno
adc
mov
lcall
push
jmp
xchg
push
push
hlt
lcall
add
inc
or
and
and
sbb
inc
lret
movsl
jp
cltd
adc
orl
out
jg
jge
push
mov
xor
push
or
into
xchg
loopne
stos
faddl
jle
or
imul
sbb
and
mov
pusha
jmp
mov
xchg
lock
cs
mov
rclb
pop
notb
pop
dec
or
push
mov
xorl
and
pop
inc
pop
jbe
pop
ja
ss
push
add
push
pop
insl
or
mov
fsub
add
and
bnd
mov
or
jo
cli
mov
bound
and
mov
lock
stos
pop
jb
pop
xor
sbb
insl
add
and
and
mov
sbb
cld
jmp
stos
or
push
push
outsb
pushl
add
jp
adc
adc
popaw
nop
pop
lods
cmp
adc
jge
outsl
clc
jae
mov
out
pusha
xchg
pop
jae
mov
sub
lcall
pusha
push
xor
scas
add
sarb
jb
xchg
mov
loope,pn
ja
push
loope
cmp
and
insl
add
push
fs
dec
roll
xchg
cli
aaa
ss
push
push
jmp
cmp
pushl
jge
loopne
jp
ds
add
inc
icebp
add
push
jmp
sub
sti
push
add
popf
ja
add
add
add
movsb
inc
test
inc
sub
add
inc
add
xor
inc
cmp
nop
push
icebp
fst
sub
mov
out
xchg
pop
fsubrs
jg
in
sub
push
dec
loop
loopne
popa
insb
xor
xor
mov
adc
push
mov
sbb
adc
ds
call
adc
pusha
or
sbb
aas
add
inc
pop
sbb
loopne
dec
call
adc
and
push
shlb
ljmp
xchg
xor
in
test
incb
add
movsb
mov
stc
nop
subb
push
movsb
xchg
mov
scas
aas
inc
mov
cmp
mov
fisttps
imul
loopne
and
or
out
pop
icebp
jo
jecxz
shlb
outsb
mov
inc
cmpsb
mov
adc
lcall
aad
nop
sub
and
pop
insl
in
add
leave
clc
jmp
sahf
jne
or
or
packsswb
mov
jmp
mov
out
nop
cli
popa
lock
aam
sub
ds
inc
or
xor
cmp
nop
xor
es
add
test
decl
adc
and
inc
insb
out
popa
and
xor
hlt
mov
in
loop
xor
pop
jl
pop
xor
ja
inc
sub
cmpsl
mov
sub
dec
xor
mov
jo
or
xlat
fisubl
cmp
pop
push
jmp
xor
inc
push
mov
jb
adc
xor
mov
std
add
push
fcoml
adc
mov
lock
cmpl
rcrl
fs
mov
inc
pop
cld
xchg
push
mov
out
les
out
repnz
jmp
xchg
incb
loope
addb
lock
lcall
jb
cmp
push
mov
or
bndldx
cmpsb
lcall
adc
inc
mov
dec
push
pop
sbbl
xchg
sbb
sbb
mov
add
inc
verw
add
jb
call
push
inc
sbb
push
add
adc
lret
adcb
pop
jne
movsb
xor
dec
xor
stos
jae
ss
das
xor
in
test
rorb
inc
loopne
inc
mov
mov
inc
add
outsl
call
aam
sbb
or
sbb
nop
adc
xor
cmp
mov
add
lods
sbb
sbb
inc
push
mov
inc
inc
daa
test
xchg
xor
dec
mov
icebp
shr
sbb
sbb
cld
inc
in
jecxz
add
popf
es
mov
sarl
mov
inc
cli
jp
je
mov
rcl
adc
push
add
incl
sbb
xchg
mov
jno
pop
jg
in
sbb
jge
movsl
fsubrl
dec
bnd
mov
ljmp
cltd
and
popf
movsl
addr16
jecxz
pusha
fisttps
jg
mov
sub
add
rolb
add
add
push
lcall
mov
roll
popf
push
shlb
push
loop
js
add
inc
xor
sahf
add
xor
rol
mov
mov
mov
mov
add
shr
adc
arpl
sub
pop
mov
jl
add
adc
fmuls
imul
jnp
and
lahf
pop
loop
jo
stos
push
jnp
inc
cli
decl
fnsave
inc
xchg
pop
shll
or
or
loopne
or
loopne
sub
inc
cmpb
jmp
add
xor
fldl
add
sub
gs
dec
shrb
je
mov
and
decl
add
cmc
and
loope
jl
fildll
adc
ja
and
inc
mov
push
dec
push
add
adc
xor
jbe
daa
mov
mov
push
es
lcall
push
sub
fiadds
inc
xchg
arpl
jnp
int
inc
adc
inc
loop
cmpsb
push
shlb
jle
shrb
adc
testb
xor
movsb
and
mov
stos
sahf
push
pop
dec
inc
idivb
jecxz
mov
push
loope
add
sub
shlb
cmp
push
sub
mov
cmp
xchg
mov
mov
mov
fs
insb
dec
xor
dec
data16
pop
int
mov
ss
stos
or
test
add
push
adc
sub
or
lods
or
dec
es
test
mov
loope
mov
adc
and
jl
and
dec
add
stos
push
push
inc
inc
add
mov
and
lea
imul
sbb
mov
loope
lea
add
scas
add
mov
push
stos
or
xchg
adc
xchg
dec
outsb
and
out
mov
int
add
add
outsb
jl
push
xor
mov
mov
and
test
inc
inc
insb
cli
jae
cmp
push
movb
jle
pop
mov
pop
cmpsb
sbb
mov
add
es
mov
pop
jo
push
mov
add
pusha
clc
scas
or
xor
jno
push
stos
and
sub
cmp
xor
mov
insb
rclb
xorb
xchg
jmp
or
shr
and
sbbb
es
add
dec
cmp
push
das
mov
fisubrs
jb
addb
incl
cmpsb
hlt
outsl
cmp
test
xor
or
xor
les
mov
ljmp
inc
push
adc
les
add
jbe
push
ret
dec
or
cmp
or
inc
or
lods
ja
cmpsb
or
or
inc
or
lahf
inc
das
and
ljmp
shlb
push
daa
out
pop
adc
lods
or
ljmp
or
or
lds
mov
push
shll
inc
cld
jg
test
or
sub
inc
push
or
cmpl
push
push
fidivs
or
cs
adcb
stos
mov
push
or
cmpb
lods
pop
dec
inc
push
movb
jl
adc
imul
rorb
pop
data16
popa
cmp
les
and
aam
inc
jmp
push
lcall
popl
cmpb
cmpsl
jo
imul
aam
bound
jbe
mov
add
mov
mov
push
jecxz
mov
outsl
push
mov
mov
mov
and
inc
mov
sbb
xchg
or
sub
xor
xchg
mov
sbb
pop
dec
mov
cld
jg
pop
adc
mov
and
mov
and
mov
add
add
mov
loop
mov
ja
jno
repnz
subb
rolb
sub
push
push
test
loopne
cli
test
mov
sbbl
rclb
mov
in
mov
scas
sbb
outsb
xor
or
pop
pusha
dec
mov
fidivrl
mov
imul
or
add
test
movsl
roll
lock
decl
mov
inc
add
mov
andb
and
add
loope
or
adc
fmuls
and
sbb
jmp
ja
loop
faddl
inc
clc
add
pusha
add
test
mov
sbb
ds
xor
adc
and
out
mov
adc
aaa
xor
add
cmp
jbe
cmp
les
scas
add
inc
pop
inc
aaa
dec
or
and
dec
cmpsb
add
pop
shll
hlt
or
sbb
adc
aaa
mov
mov
cmpsl
movb
hlt
and
add
lods
xor
pop
lea
jbe
push
loopne
add
jg
aam
xchg
mov
daa
jge
add
xlat
and
dec
sbb
out
inc
sbb
add
push
test
imul
rorb
push
jo
add
push
addr16
cld
bound
and
loopne
lock
mov
sahf
dec
or
adc
and
sarb
sbb
addb
xchg
jbe
lods
repnz
sbb
js
cmpsb
movsl
mov
cmp
jmp
add
test
push
xchg
inc
pop
mov
or
arpl
out
inc
cmp
loopne
add
arpl
or
sub
push
cmp
sub
push
mov
rclb
out
imul
xor
jb
or
mov
mov
push
addr16
add
movsl
jle
lcall
ret
mov
mov
and
lds
mov
inc
or
xor
mov
mov
incl
inc
pop
and
lock
loop
pop
mov
dec
iret
mov
xlat
mov
inc
shlb
inc
mov
loope
aad
lret
pop
mov
inc
rolb
out
loopne
sub
push
pop
push
test
das
lock
or
es
push
scas
sbb
clc
jge
or
add
std
push
mov
push
or
and
xor
fildll
lcall
xchg
call
call
jmp
inc
jp
test
dec
je
and
pop
and
out
in
dec
push
mov
add
or
rcrb
and
pusha
inc
pop
fdivr
scas
add
in
leave
loopne
lcall
loope
fmuls
imul
push
xchg
push
fcomps
adc
bound
nop
xor
rolb
jl
and
out
inc
push
and
push
add
shl
fwait
test
adc
push
or
mov
xchg
sbb
and
jl
test
inc
popa
loope
or
and
sar
mov
je
popa
xchg
outsl
popf
push
mov
push
push
mov
loop
xor
les
jp
pop
xorl
inc
or
xor
jo
icebp
xor
dec
aam
xor
xor
or
jge
mov
cmc
imul
loope
mov
jp
lods
inc
lods
adc
or
push
rolb
push
fildll
jle
or
or
pop
sar
fstl
ss
pusha
mov
sarl
pop
fldl
inc
insb
in
call
fstpt
or
fbstp
add
or
inc
add
fcmovu
pushf
mov
mov
mov
mov
fwait
cmp
xor
push
mov
mov
dec
addb
rclb
inc
sub
cmpsb
lret
adc
adc
adc
mov
mov
ja
sub
ljmp
and
sbb
insb
pusha
ss
fbld
add
add
jne
daa
cmp
pop
push
pop
xor
jb
popa
lcall
int
jo
sahf
xorb
inc
mov
add
enter
mov
adc
shlb
pusha
mov
pushf
ret
fs
aad
push
sahf
push
add
addb
orl
clc
mov
mov
ret
and
pop
and
jl
ret
jb
xor
aaa
fmull
push
xchg
mov
lock
and
xchg
cmp
xchg
std
loope
dec
xchg
xchg
push
mov
jg
scas
sbb
pop
cwtl
pop
push
sub
mov
adcb
jnp
aas
adc
outsl
push
xchg
jg
pop
imul
mov
lock
aaa
aaa
sbb
cld
scas
adc
sbb
imul
inc
xor
push
ss
xchg
push
mov
sub
stos
add
jle
pop
popa
adc
push
adc
adc
adc
aas
mov
cli
das
les
lods
adc
sbb
inc
or
mov
xor
addr16
or
xor
mov
inc
or
sub
push
inc
adc
and
ret
lock
sub
pop
enter
rolb
jae
loopne
push
jno
cmp
daa
sub
adc
pop
dec
xchg
push
pop
push
mov
dec
pusha
add
loope
add
sbb
shlb
push
popf
dec
lock
xor
jl
add
push
or
cbtw
insl
loopne
shrl
xchg
sbb
clc
mov
add
inc
xor
mov
lock
icebp
fbstp
or
adc
cwtl
or
pusha
sub
xor
pusha
outsl
mov
int3
rol
mov
inc
jne
call
mov
xor
push
shrb
ret
xor
and
add
lcall
push
xchg
lock
add
pop
jp
mov
fists
lret
icebp
dec
inc
ja
or
jp
je
clc
dec
mov
xchg
add
push
je
or
shlb
jnp
xor
and
add
sbb
and
pop
fs
xchg
xchg
nop
mov
fimull
jg
je
mov
bound
movsl
mov
mov
xor
mov
mov
jb
jp
outsb
or
mov
movsl
dec
add
xchg
xor
or
lock
mov
repnz
fcomip
jg
xchg
push
adc
mov
loopne
shrb
mov
adc
jo
jbe
fs
loopne
xchg
pop
push
pop
xor
xor
data16
xor
sbb
mov
outsb
push
jne
add
mov
std
xor
je
lcall
fidivrs
lods
pusha
push
push
adcl
movsb
subb
test
adc
call
jbe
loop
mov
xor
push
das
into
xor
xor
add
shrb
out
mov
pop
andb
das
adc
test
xor
dec
push
add
cmp
outsb
jae
push
jb,pt
push
std
dec
fs
lods
loopne
cmp
aaa
ret
lret
mov
push
sbb
jp
xor
nop
sbb
mov
into
ljmp
cwtl
jbe
mov
mov
ret
rolb
sub
jns
inc
push
adc
push
pushf
lret
loopne
loopne
mov
notb
add
mov
xor
pop
inc
sub
lcall
fwait
icebp
add
ja
mov
pop
pusha
mov
bound
mov
mov
push
popa
mov
lret
shrl
test
js
into
cmpsb
cmp
xor
adc
rorb
test
lcall
and
decb
loopne
bound
inc
addl
xchg
add
filds
or
xor
sub
push
jmp
ror
hlt
fadd
rolb
pop
ror
pusha
or
daa
pusha
cli
call
pushl
nop
add
scas
mov
sbb
pop
adcb
inc
push
shll
popf
adc
ja
jno
jb
and
mov
sub
lret
xchg
mov
jle
add
or
mov
addl
and
ficoml
adc
sar
test
push
add
xor
jne
shlb
movsb
mov
inc
and
add
mov
mov
or
and
mov
push
outsl
int
stos
sbb
push
lock
push
and
rorb
cld
jmp
outsl
sub
or
outsb
push
add
fcoml
add
test
xor
jg
add
push
and
in
test
jmp
xchg
sbb
mov
jl
pop
mov
scas
adc
add
aaa
popa
lcall
sbb
jmp
orb
and
imul
cmpsl
xor
add
and
push
inc
ja
sbb
add
cld
incl
mov
sub
addr16
push
pop
pop
and
cs
popf
popf
frstor
mov
gs
popa
movsl
pusha
shrb
sbb
sbb
hlt
add
xchg
into
mov
jg
push
add
mov
cmpsb
adc
ljmp
das
pop
or
adc
mulb
insl
out
out
clc
or
pop
mov
add
inc
jge
testb
mov
push
adc
insb
adc
pop
ss
mov
dec
add
adc
adc
jle
in
pop
xchg
std
sub
mov
sub
pop
js
or
dec
xchg
jl
clc
sbbb
subb
test
sbb
xchg
cltd
test
inc
mov
adc
sahf
add
or
xchg
icebp
fs
add
movsb
add
sarl
xchg
ds
add
or
cmp
lock
add
dec
out
cltd
cs
xorb
add
ljmp
sub
adc
stos
inc
xchg
sbb
imul
das
mov
xor
stos
pop
jno
inc
clc
add
out
add
cld
jg
add
rorb
pop
xchg
pushf
mov
frstor
push
mov
mov
mov
arpl
fucomi
adc
mov
mov
jp
adc
mov
push
sub
dec
push
sub
cmp
or
mov
inc
lcall
xor
xor
or
mov
cli
imul
mov
add
push
mov
cmp
or
jbe
or
pop
jmp
in
and
fsubrs
lock
lcall
add
add
mov
cmpb
or
mov
test
adc
xor
cmp
add
dec
idiv
fwait
push
pop
into
inc
push
sahf
inc
push
inc
push
into
inc
push
fcoml
or
add
in
fisttpl
add
pop
outsb
jmp
es
rolb
inc
mov
daa
or
roll
sub
pop
adc
and
call
hlt
or
push
popa
stos
inc
aas
ja
inc
aas
andb
pop
shll
add
or
stos
test
out
shlb
dec
push
loop
out
xchg
scas
adcb
das
mov
inc
sbb
aas
mov
lds
and
rolb
movsl
jmp
jp
int
add
cmp
adc
and
inc
stos
incl
loopne
test
jp
or
cmpsb
xor
inc
mov
xorl
scas
inc
or
xchg
add
sbb
aam
rolb
or
cmp
inc
inc
dec
or
jp
call
in
ljmp
pushf
adc
adc
or
out
add
mov
lock
roll
incl
insb
jmp
add
out
dec
mov
xor
pop
dec
jns
enter
dec
loopne
pushf
adc
dec
and
scas
xor
inc
sbb
cvtdq2ps
jge
jbe
add
scas
adc
rclb
mov
and
cmp
sarl
jne
add
inc
add
xchg
cli
jl
cmp
inc
xor
fildl
add
addb
out
pop
add
xorb
rcrl
lret
into
cmp
inc
scas
xchg
pusha
pusha
sbb
or
pusha
and
and
dec
loope
push
test
mov
or
mov
cmpl
shll
pop
xchg
jb
mov
xor
out
notb
and
xor
push
fimull
cmp
int3
das
scas
cld
cltd
mov
adc
test
pop
mov
mov
ret
ds
add
push
cmpsb
pop
sbb
sub
push
rolb
movsb
jle
add
pop
sub
jb
nop
xchg
hlt
jp
and
dec
mov
in
loopne
xlat
add
bound
js
ret
hlt
fstp
mov
xor
xchg
and
loop
jb
mov
push
bnd
and
cs
lret
sub
sub
aas
inc
jmp
inc
insb
pop
and
xlat
popa
cli
outsb
jecxz
push
mov
js
push
and
mov
inc
cmp
mov
fisttpl
mov
mov
dec
push
fstpt
pop
pop
jge
cmp
adc
add
add
mov
mov
faddl
outsb
jecxz
addb
decl
lret
jmp
pop
out
push
std
jbe
pushl
movsb
mov
popa
pop
in
sbb
cmp
lock
test
or
sub
mov
jg
inc
stos
loop
popa
pushf
mov
sub
inc
out
inc
inc
mov
insb
mov
sbbb
and
dec
dec
mov
inc
leave
or
fidivrl
shlb
out
addl
dec
mov
sub
xchg
xor
popa
sbb
mov
addb
sbb
inc
mov
mov
mov
mov
jl
sarl
loope
mov
xor
mov
inc
sarb
stos
shlb
add
imul
scas
cli
aaa
rorb
ja
adc
stos
popa
ljmp
movswl
inc
mov
xor
xchg
andb
mov
adc
inc
add
pop
sbbb
inc
dec
sahf
and
add
push
mov
rclb
cmpw
or
sarl
pop
pusha
cwtl
xorb
mov
push
add
xchg
orb
or
push
sub
clc
inc
xor
rorb
sub
ds
outsl
fwait
insb
addb
sub
negl
stos
pusha
add
stos
pusha
adc
mov
pop
imul
lods
aas
rolb
loope
adc
cs
mov
cmp
mov
dec
out
sarb
test
jmp
outsb
dec
loopne
sbbb
pusha
mov
add
and
xor
inc
lcall
xor
cmc
ljmp
or
mov
add
shll
fwait
add
call
fistpl
cli
pop
js
xorl
or
or
xchg
or
or
cmp
pop
mov
nop
add
inc
jl
outsb
popf
push
pop
push
adc
pop
push
adc
and
and
ret
push
insl
movsb
add
outsl
and
pop
xchg
mov
adc
test
lock
and
sbb
xlat
xchg
mov
mov
inc
mov
sbb
mov
pop
movsb
ret
mov
push
pop
and
push
inc
or
ret
xor
mov
push
rolb
cli
mov
jmp
mov
and
inc
loopne
mov
mov
add
xorb
xor
or
sbbl
scas
jecxz
mov
cld
test
mov
add
xor
cmpsl
cmc
imul
out
int3
sbb
fstpt
mov
pop
xchg
pushf
or
sub
addl
mov
lock
hlt
lcall
call
adc
ljmp
adc
pushf
xor
sbb
or
sbb
xchg
sbbb
push
and
mov
pop
xchg
inc
xchg
jno
cmp
ret
mov
jecxz
leave
imul
xchg
pop
xchg
mov
add
lret
nop
adc
mov
add
addb
dec
push
mov
jle
int3
out
jbe
adc
shrb
push
inc
shlb
incl
inc
pop
mov
jle
mov
xchg
jo
incl
adc
sub
and
xchg
sarb
xor
inc
test
adc
mov
jo
lods
sub
scas
cmpsb
fistpll
or
addb
pop
outsb
inc
sbb
or
into
or
mov
dec
popa
sub
push
xchg
sub
dec
cmpb
in
icebp
push
pop
enter
cmc
orb
push
rcrb
pushw
lock
mov
xchg
daa
xor
mov
push
fwait
sbb
cs
mov
aaa
inc
cli
inc
testb
and
inc
dec
adc
mov
xor
xor
addb
mov
and
sbbb
or
xor
push
push
xchg
inc
sub
push
fs
mov
ret
xor
pop
adc
rclb
stos
out
add
jp
mov
pusha
sub
jmp
lock
push
jle
ds
add
xchg
push
outsb
das
ret
jae
mov
jecxz
xor
cmp
stos
mov
push
add
mov
jo
call
jp
add
scas
inc
inc
jno
leave
rclb
mov
lods
rclb
add
sub
xchg
xor
adc
sahf
cli
add
dec
cld
add
inc
mov
and
out
adc
out
mov
jbe
or
inc
data16
mov
jbe
subb
push
imul
mov
lea
out
addb
loopne
inc
outsl
mov
cltd
mov
add
pop
jno
inc
popf
mov
inc
cmpb
and
or
xor
test
mov
or
addb
jo
jmp
adc
lods
push
add
sti
or
push
push
popa
ljmp
ljmp
cmp
mov
push
popf
inc
cmp
pusha
add
xchg
adc
adc
mov
mov
insl
ljmp
mov
mov
mov
mov
call
decb
cmp
push
jno
mov
xchg
sub
icebp
inc
add
push
ss
andl
push
mov
icebp
sbb
sub
lret
mov
sub
sahf
loop
pushl
stos
dec
add
jo
push
je
js
outsl
daa
sahf
dec
push
add
xchg
clc
push
mov
push
ret
add
stos
test
sub
sbb
out
sub
test
and
xor
popf
and
mov
arpl
pop
shlb
mov
out
lea
pusha
pop
and
inc
inc
jno
jo
out
or
scas
popf
inc
adc
pop
test
cmp
add
add
mov
push
mov
repz
adc
inc
xor
adc
das
clc
daa
mov
xchg
and
popa
add
sub
shlb
clc
or
in
add
lret
mov
xor
cmpsb
adc
or
jg
inc
jmp
adc
mov
push
sub
pushf
in
loop
es
lods
xor
mov
loopne
push
add
or
jbe
shl
mov
adc
dec
dec
jmp
or
outsb
fimull
jbe
jno
add
pop
and
push
pusha
rolb
ss
or
out
addl
add
sub
xor
movsb
stos
mov
jo
cmp
inc
and
popa
adc
addb
and
and
add
and
or
add
sub
xor
mov
jmp
les
js
stos
jmp
rolb
lock
mov
movsb
pusha
or
xor
adc
mov
adc
or
mov
scas
mov
pushf
jl
loopne
testl
jno
loopne
movsl
or
sbb
mov
and
test
roll
add
dec
push
or
inc
and
rorb
mov
push
mov
movsb
shlb
stos
movsl
out
nop
mov
pop
mov
add
push
adc
adc
mov
push
mov
xor
or
pop
cli
and
xchg
cmp
inc
fcos
pop
mov
add
add
and
and
jbe
pavgb
mov
lock
sub
mov
xor
call
sbbb
and
jp
or
jo
xor
mov
jno
add
lret
loop
jp
jg
stos
call
xchg
jle
pshufw
je
jb
jecxz
jle
popa
adc
sahf
and
ljmp
dec
adc
sub
xor
push
jns
cld
pop
add
sub
test
or
sbb
jl
fwait
test
cs
out
insl
daa
xchg
mov
add
out
mov
es
xor
push
sbb
pop
sbb
push
clc
xor
or
pop
inc
xor
or
je
push
lock
iret
stos
mov
adcl
dec
dec
call
jp
je
mov
add
ret
data16
push
adc
xchg
inc
cwtl
or
pop
fsubrs
sub
jns
test
rcrl
enter
mov
xor
shll
cmp
dec
mov
adc
mov
add
jbe
adc
movsb
ds
test
add
mov
xor
or
push
or
sbb
or
add
out
mul
pop
cmc
pop
adc
xor
xchg
sbb
jo
andb
shll
enter
loopne
push
rolb
dec
jecxz
addr16
data16
lahf
or
call
test
push
popf
mov
sbb
add
scas
fadds
pop
add
outsb
std
and
jmpw
mov
in
test
push
sti
and
inc
pop
jl
fcmovbe
jnp
adc
xor
mov
xor
mov
call
pop
inc
mov
or
hlt
inc
pop
sbb
lds
xchg
adc
push
dec
test
fwait
mov
cmpsb
sbb
mov
jo
subb
or
or
cli
sbb
andb
fisubrl
xchg
pusha
push
punpckhbw
movsb
jno
cmpsl
dec
sti
sti
push
test
or
add
outsb
add
push
mov
cmp
outsl
dec
jbe
jbe
or
dec
inc
add
inc
dec
sahf
dec
mov
cmp
in
popf
clc
inc
or
add
dec
push
int
push
decb
add
shlb
insb
test
cmp
push
add
cmp
mov
shr
sbb
mov
mov
cmp
js
dec
cmp
lods
inc
adc
ljmp
and
jne
push
mov
sbb
sbb
adcb
inc
and
dec
pushf
sub
pusha
nop
loopne
mov
cmpsb
ret
adc
jg
jmp
add
adc
mov
mov
mov
add
or
sub
push
adc
adc
int
push
or
inc
cmp
push
mov
push
cwtl
insb
mov
ret
popa
mov
xchg
mov
mov
mov
mov
xchg
push
pop
adc
dec
or
cmp
aam
xchg
fidivl
add
fmull
ret
inc
xor
sub
mov
faddp
or
sbbl
adc
data16
adc
add
loop
addr16
adc
ljmp
loope
pushf
and
add
add
mov
test
shlb
adc
shll
leave
sahf
or
jmp
pop
stos
push
mov
stos
add
xor
lods
insl
xor
into
dec
inc
or
fsubrs
mov
and
scas
push
adc
jecxz
adc
sarb
add
outsb
insb
xchg
pop
pusha
sbb
loope
fiaddl
inc
outsl
adc
adc
pop
mov
pop
and
sbbb
movsb
xlat
sbb
enter
out
jg
push
and
stos
in
mov
hlt
or
rolb
ljmp
mov
mov
xchg
or
das
or
loopne
mov
jecxz
fisubl
xchg
mov
add
out
imull
pusha
push
xchg
mov
adc
mov
andb
stos
cmp
rclb
or
xor
sub
mov
shrb
pop
repnz
add
into
addl
test
call
mov
sbb
rclb
das
xchg
fidivs
popa
and
push
sub
scas
xorl
inc
push
cmp
push
or
adc
incl
fistl
fidivrs
mov
mov
andb
mov
inc
hlt
dec
push
shrb
add
adc
xchg
popa
lods
cld
or
dec
pop
repnz
push
mov
mov
push
xchg
and
adc
xor
xor
push
ljmp
enter
or
add
or
push
adc
mov
shrb
decb
push
add
fcmovnb
xor
call
push
mov
add
or
addr16
mov
outsb
add
sbb
loope
push
mov
inc
popl
add
pusha
mov
xor
loope
lret
inc
repnz
pusha
mov
loopne
add
ja
pop
sub
scas
ljmp
fildl
clc
fisttps
push
add
pusha
insb
shll
lcall
push
mov
fcompl
mov
cmp
clc
lcall
mov
out
push
shlb
lret
data16
add
ror
test
cmp
negl
cld
iret
test
ror
and
mov
aas
cwtl
pop
loopne
or
inc
add
data16
pop
mov
inc
pop
cmc
mov
rolb
jle
pop
pushf
mov
sub
sbb
mov
inc
and
mov
fwait
add
sub
or
or
push
and
mov
push
scas
add
xchg
sbb
lds
push
pop
adc
or
or
jo
cmp
adc
int3
mov
adc
sub
xor
mov
loope
mov
lcall
adc
sbbb
cmp
or
mov
mov
bound
std
cmpsb
lods
pop
xorb
loop
addb
incl
sbb
mov
push
xor
insl
pop
inc
jge
xchg
pop
lock
mov
ret
loopne
and
add
or
out
xor
andb
mov
add
loopne
loopne
pop
mov
cmpsb
adc
loope
test
and
xor
xorb
mov
mov
xor
decl
jle
mov
mov
xor
xor
popf
xor
push
mov
sbb
mov
xor
mov
jl
inc
and
in
pop
add
pop
mov
pop
or
push
inc
rolb
pop
mov
hlt
call
mov
xor
add
push
add
notb
xor
push
add
adc
sbb
jg
jp
or
lods
loop
xchg
icebp
rolb
lock
mov
data16
add
fisubl
pop
test
mov
dec
aam
test
push
mov
push
push
inc
sub
sbb
lcall
sbb
and
jmp
mov
lock
xor
push
cmp
cld
nop
call
add
and
add
xchg
clc
inc
dec
repz
dec
pop
mov
adc
cmpsb
insb
or
mov
sbb
insl
cmp
scas
inc
cmp
or
add
mov
xchg
out
pop
and
or
or
shlb
call
outsb
adc
popf
adc
inc
xchg
push
push
add
and
je
cli
pushl
clc
popf
xor
pshufw
ja
adc
ja
inc
or
fs
addb
nop
xchg
rolb
mov
xor
sbb
mov
mov
js
push
loop
cmpsb
mov
jno
mov
xorb
mov
andb
hlt
adc
insl
test
aaa
sub
test
adc
test
sbb
lods
xorb
push
pushf
mov
push
xor
mov
push
lcall
add
adc
mov
lret
xchg
rolb
bound
outsb
mov
pop
icebp
incl
mov
or
mov
add
shlb
bound
inc
add
addb
add
lcall
mov
push
addb
sbb
mov
hlt
adc
jo
outsb
push
cmp
push
pavgw
out
push
bnd
sbb
aas
nop
and
adc
pop
ds
push
adc
sub
repnz
push
rcll
outsb
fwait
add
mov
pop
sbb
push
xor
mov
and
rolb
add
adcb
pop
add
and
mov
push
mov
and
push
xorl
in
inc
sbb
call
sbb
nop
push
addb
xchg
adc
add
push
or
sbb
dec
cld
or
mov
mov
mov
adc
insb
fcmovnu
adc
sbbb
mov
mov
add
cltd
enter
or
test
jbe
mov
sub
filds
popa
loopne
clc
adc
add
mov
popf
mov
lea
xchg
orb
jne
adc
or
or
xor
jle
adc
adcb
push
aaa
push
test
jmp
mov
jecxz
popf
shll
mov
push
add
adc
sub
cli
dec
test
pop
pop
lcall
xchg
or
out
fisttpl
imulb
add
pop
mov
loop
stos
dec
mov
add
sub
inc
and
lods
push
mov
mov
jmp
inc
cs
sahf
sbb
or
and
pushl
push
push
pop
mov
add
pop
or
arpl
pop
or
aas
pop
fcoms
push
cmp
das
and
or
sub
fsubs
sbb
aas
or
inc
jo
outsb
pusha
ret
or
in
dec
mov
adc
adc
shlb
xor
lret
xor
shlb
add
sub
test
or
test
dec
jb
test
push
ja
shl
inc
popa
cli
mov
add
or
add
jo
push
dec
das
rorb
andb
out
add
adcb
xor
je
jle
push
add
lods
xchg
mov
jmp
push
cmpsb
ljmp
cmp
and
adc
or
lock
and
sub
pushf
mov
ljmp
jb
or
incb
mov
pop
int3
sub
rolb
outsb
push
and
mov
sbb
aaa
dec
mov
sub
cmp
mov
mov
rcrb
adc
sbb
fs
es
inc
and
xor
sbb
adc
out
aam
add
push
roll
sbb
and
pop
sub
pop
hlt
push
ss
xor
pop
add
add
mov
add
mov
les
inc
jp
add
flds
mov
push
push
jmp
imul
or
pusha
std
pop
mov
push
out
xor
inc
and
insl
jge
rorb
jp
xor
inc
adc
fnstenv
rorb
xor
or
mov
pop
add
pop
push
xor
mov
or
adc
out
add
aaa
lcall
inc
push
jbe
pop
xor
call
into
and
movsl
jne
xchg
and
push
add
jg
adcb
push
jl
loop
xchg
ret
incl
inc
mov
xor
mov
xchg
repnz
fucomip
and
ja
mov
push
inc
pusha
pop
mov
in
cmp
clc
push
add
and
xchg
mov
rolb
out
pop
add
pop
xchg
test
jge
mov
mov
mov
bound
xchg
inc
mov
addb
xor
push
push
pusha
xchg
test
cld
xlat
mov
mov
add
test
jb
add
jl
sub
xchg
and
mov
sub
dec
xchg
push
and
push
shr
shrb
ss
outsb
push
push
add
cmpsb
rcl
call
test
pusha
insl
push
mov
pop
fdivs
rolb
mov
mov
push
loop
add
aaa
mov
pushf
pop
push
push
imul
loop
pop
daa
loope
fisttps
mov
pop
movsb
push
cltd
sbb
sub
cli
imul
sub
lea
adc
loopne
cmp
jp
or
or
jo
dec
xor
nop
clc
inc
add
lock
pushf
xor
out
outsl
addb
or
add
hlt
shrb
bound
dec
mov
inc
arpl
push
push
xor
pop
xor
adc
shr
decl
add
aas
orb
popf
subb
sahf
push
push
popa
mov
daa
setp
cmpb
fidivrs
sbb
adcb
outsb
outsb
sbb
nop
cli
sbbb
adc
ret
dec
or
or
sahf
add
pop
mov
add
jo
fiaddl
loop
inc
mov
dec
imul
pop
cmpsb
add
adc
loopne
not
jbe
mov
in
push
sbb
push
fdivrs
fsubrs
lock
mov
mov
sub
sub
mov
xor
push
push
xor
and
adc
shrb
mov
pop
xchg
mov
lcall
pop
adc
and
adc
and
xchg
adc
cwtl
fs
mov
pop
bound
fscale
dec
mov
sbb
jb
or
dec
jg
cmp
outsb
ret
adc
test
cmp
movb
stos
xor
inc
rclb
cld
and
mov
pop
aam
mov
mov
leave
add
in
nop
inc
add
sbb
outsl
nop
movl
jmp
xor
inc
and
shrl
loope
mov
subb
dec
inc
xlat
jg
scas
add
mov
add
xorb
in
sahf
and
mov
adc
adc
cmc
and
fildll
add
and
or
dec
mov
ss
clc
in
outsl
lret
dec
in
add
fldenv
jb
and
adc
adc
lods
cli
data16
sbb
add
cs
sub
cwtl
call
lret
lds
popf
rcrb
mov
fistps
les
int3
les
lock
outsl
decl
in
xchg
inc
rclb
ljmp
push
xlat
pop
stos
fdivr
push
shll
roll
add
sub
loopne
add
add
push
sub
push
adc
mov
cmpb
push
inc
ljmp
cli
pop
mov
fistpll
mov
add
adc
js
decl
add
repnz
repnz
shrl
pusha
adc
loop
popa
mov
xchg
add
add
add
pop
inc
shl
popf
sub
push
pop
or
xor
daa
mov
add
jns
mov
in
mov
add
daa
cmc
ljmp
cs
pusha
push
rcrb
daa
xchg
test
push
jmp
decl
xchg
fucompp
rorl
xchg
roll
sub
pushl
push
dec
push
add
and
add
jae
sbb
test
inc
mov
test
dec
xor
fdivr
or
add
stc
pusha
push
sub
lcall
dec
push
ja
dec
out
out
inc
add
jg
rcrb
xchg
push
and
and
out
cmpsb
inc
mov
mov
dec
jmp
das
cli
decl
and
and
hlt
pusha
or
jmp
mov
lea
lret
mov
push
insb
dec
sbb
add
inc
js
inc
ds
shll
subb
xor
mov
add
jns
adc
sub
repnz
fcmove
repz
xchg
mov
sar
insb
out
ds
mov
push
and
sbb
mov
sahf
mov
sub
add
add
ja
cs
sbb
lret
mov
enter
test
lock
push
push
sub
push
sar
out
inc
or
mov
addl
loopne
sub
adc
push
push
jo
adcb
or
sub
in
xchg
orb
inc
ret
bound
add
push
xchg
sti
scas
xor
xchg
jbe
arpl
jg
and
imul
cwtl
rorb
and
mov
pop
imul
dec
mov
cmp
out
dec
scas
lea
and
mov
mov
loop
sub
fs
mov
mov
lods
fsubl
les
mov
gs
mov
gs
pop
js
inc
pop
sbbb
popa
jae
dec
or
insl
mov
pusha
sbb
decl
notb
inc
inc
mov
xchg
aam
addb
hlt
push
mov
xchg
add
xor
aas
cltd
addl
xchg
negl
mov
pop
cmp
or
xor
xor
es
push
cmp
jb
or
pop
stos
add
mov
mov
test
push
pop
inc
or
mulb
pop
mov
fisubs
jo
xchg
pop
je
loopne
xor
addl
hlt
lcall
call
call
add
out
sub
pop
bound
das
add
mov
jmp
lcall
add
push
mov
sub
call
add
add
push
rclb
push
pop
inc
mov
mov
and
jbe
mov
loop
adc
inc
sti
addl
mov
jmp
mov
or
adc
clc
or
xor
push
pop
outsl
jl
mov
mov
adc
ja
pop
add
add
mov
pop
jno
inc
xor
jo
mov
testb
test
fcompl
or
lds
adc
push
push
sbb
add
sub
push
jp
push
sarb
push
arpl
push
mov
push
nop
dec
ja
adc
lea
ret
adc
fistpll
and
ds
cld
call
and
cmp
loopne
sarl
lods
add
loop
int3
push
cmp
xorb
sarl
cmp
xor
js
mov
or
or
sbb
sbb
stos
nop
add
out
inc
popf
xor
and
jecxz
movsb
mov
pop
addl
pop
test
pop
clc
pop
mov
push
je
jo
daa
lcall
ds
jge
bound
cmp
inc
cmp
xor
dec
fisttps
xor
mov
pusha
mov
xor
mov
popa
mov
insl
incl
sbb
mov
shll
or
subb
cmp
add
out
arpl
adc
mov
in
stos
xor
daa
pushf
pop
mov
adcl
lods
and
push
mov
cld
insl
fnsave
jmp
and
dec
pop
lea
inc
clc
aaa
xchg
stos
xorl
lods
ja
mov
mov
push
push
mov
pop
loope
xlat
jb
idiv
incl
push
or
daa
orb
sbb
std
adc
add
shl
fmull
ja
mov
xchg
adc
enter
fisubl
shll
test
add
ret
rorb
repnz
mov
add
adc
add
in
mov
or
xchg
je
cmpsl
gs
rclb
ret
imul
adc
xchg
xor
out
or
jge
clc
and
bound
loopne
cmpb
enter
push
xor
xor
rcr
and
lcall
jge
cli
lock
repnz
pushf
popf
inc
mov
push
inc
cld
inc
or
jbe
mov
add
lods
cmpsb
or
sbb
pop
test
adc
add
loopne
int3
fimuls
rcrl
shll
mov
test
in
jno
xor
dec
mov
or
jno
add
dec
cld
inc
adc
xor
mov
jecxz
add
xor
push
sub
pusha
sub
mov
cli
daa
shlb
ja
adc
adc
xorb
xchg
mov
sbb
insl
jae
jb
and
or
das
mov
daa
addb
adc
fbld
icebp
push
mov
imul
adc
outsb
adc
lahf
dec
pop
xchg
pusha
insl
loopne
sbb
pop
hlt
mov
cmpsb
ljmp
xchg
dec
pop
aas
addb
mov
inc
fcmovb
lock
inc
sbb
mov
add
mov
out
in
out
add
and
or
push
inc
in
loop
shl
mov
call
fidivl
adc
sub
or
shll
out
add
push
mulb
dec
mov
push
roll
mov
pop
pop
mov
add
filds
loope
fs
das
push
mov
push
lds
sbb
test
outsl
push
cld
out
clc
pop
push
push
mov
mov
xchg
shll
push
mov
icebp
scas
dec
pop
les
xor
xchg
mov
and
shlb
add
push
add
fisttps
mov
adc
int3
stos
xor
mov
push
and
icebp
sub
cs
adc
push
xlat
push
xchg
popa
aaa
jl
decl
add
ficoml
outsl
add
add
fcmove
jns
cmp
scas
inc
sbbb
data16
sbb
test
push
jecxz
lock
subb
les
xor
dec
mov
rclb
outsb
xor
jecxz
fimuls
xchg
pop
fcompl
sarl
mov
subl
bound
movsb
cs
in
fistpll
addb
ret
aam
sub
sub
adc
mov
jmp
jo
mov
xor
daa
mov
mov
or
add
or
add
xchg
mov
lcall
shl
dec
add
icebp
add
or
add
and
cmp
mov
inc
or
movsb
or
inc
adc
orb
pop
and
sub
adc
test
sbb
push
int3
mov
sahf
scas
xchg
shlb
sub
mov
add
icebp
mov
adc
mov
add
cmpsl
mov
and
xchg
in
mov
mov
push
lock
imul
add
xchg
mov
or
push
insb
rclb
xchg
add
arpl
dec
movsb
daa
sbb
js
mov
mov
pusha
mov
pusha
adc
jmp
and
lahf
jo
mov
aaa
andb
stc
lock
cmp
fcmove
add
push
int
or
ljmp
xor
ss
or
push
fdivrs
mov
rcrb
orb
add
inc
andl
and
push
and
fs
pop
insb
jl
decl
data16
add
push
add
push
inc
and
idivb
ljmp
pop
mov
inc
je
fcmove
add
repnz
mov
out
scas
add
iret
inc
add
fcmove
adc
push
sub
lods
adc
xor
inc
inc
sti
or
inc
pop
jmp
test
and
pop
push
and
or
hlt
call
mov
jle
push
fcmovbe
test
dec
rcrb
mov
add
mov
inc
or
add
inc
add
dec
add
add
mov
mov
jle
adc
insb
sub
out
or
mov
add
or
fildl
fs
push
dec
inc
inc
add
pop
add
or
rorb
adcb
nop
adc
shlb
aas
sbb
dec
call
pop
and
call
test
jle
aam
pop
cmp
outsl
and
decl
or
jae
inc
push
add
mov
add
add
lret
sub
and
test
clc
loope
push
adc
dec
andl
in
and
sbbl
popa
inc
pop
add
adcb
jne
loop
adc
in
fcmovnb
mov
push
push
and
pop
or
xchg
xchg
mov
pop
and
adc
cmp
rclb
dec
mov
mov
xor
mov
add
pusha
add
xor
loopne
dec
lods
ret
arpl
and
add
dec
pop
orb
or
incl
or
sbb
pop
mov
vmovups
or
jp
and
data16
loopne
fiaddl
adcb
pop
clc
incl
pushf
and
rolb
ds
pop
inc
push
sub
enter
loopne
je
jle
xor
sahf
inc
and
or
js
xchg
mov
decb
pop
inc
jbe
adc
orb
out
xor
cmpsl
add
into
inc
fisttps
and
and
mov
mov
arpl
sub
add
inc
sar
xchg
and
sahf
inc
jb
inc
inc
jb
add
mov
mov
sbb
or
sub
and
jmp
and
push
adc
inc
outsb
mov
stos
test
out
inc
addr16
addb
xchg
sar
fildl
mov
xchg
sub
fcmovbe
and
ficompl
popa
push
pop
rcr
rcl
fstpt
stos
mov
add
push
xlat
and
or
adc
add
test
push
adc
pop
xchg
and
adc
xor
lock
ljmp
xchg
inc
mov
add
je
arpl
subl
ficoms
sub
dec
add
mov
inc
add
data16
adc
add
mov
adc
inc
push
add
sub
mov
lock
xor
in
pop
loop
xchg
loopne
test
loope
xchg
lods
add
inc
push
adc
mov
or
mov
sbb
mov
push
dec
in
pop
push
xchg
mov
mov
inc
inc
mov
inc
aad
sbb
adc
jne
or
lret
mov
jecxz
test
fiaddl
sub
fisttps
fcmovb
dec
xchg
add
in
push
and
and
cmp
cmp
hlt
add
fidivrl
sub
or
or
hlt
xor
cli
mov
adcb
ret
pop
neg
addb
stos
hlt
fcmovu
inc
mov
fwait
in
inc
add
inc
push
clc
xchg
fimull
mov
fidivl
fiaddl
fcmovb
shr
add
ficoml
jecxz
adc
fimull
mov
inc
dec
ss
or
cmpb
sub
mov
or
fidivl
ljmp
mov
aam
inc
inc
adc
lcall
mov
fcmovu
fmuls
in
dec
test
mov
jg
fcomps
call
cmp
or
fidivrl
sub
ret
add
dec
adc
mov
int
mov
cmp
repz
ficoml
mov
mov
mov
stos
bound
andb
mov
and
mov
loopne
insb
lcall
je
mov
sbb
push
add
xor
xchg
lahf
sub
cmp
jne
pop
mov
fsubrl
mov
jle
push
fisubs
repnz
bound
fcmovb
in
mov
and
xchg
adc
pop
adc
sbb
inc
cmpb
ficoml
out
or
ficompl
pushf
lock
mov
add
in
data16
or
inc
icebp
push
js
push
adc
outsb
inc
andl
dec
das
cmpsb
jb
jecxz
adc
aaa
pop
lock
inc
adc
cld
fnstenv
loopne
and
add
imul
or
adc
add
xchg
loopne
stos
pop
inc
jecxz
lock
or
pop
nop
das
inc
fistpl
in
dec
mov
inc
inc
fstpt
fstpt
hlt
and
loopne
repz
lcall
xor
dec
fistl
push
push
in
incl
daa
pop
fildl
fisubl
cs
lcall
adc
mov
and
repnz
fisttpl
out
inc
mov
bound
outsl
pop
add
xchg
cmp
sub
daa
rcrb
out
jne
arpl
sub
movsb
adcb
jb
inc
xor
sti
ret
push
ss
jmp
push
js
and
cmp
pop
inc
mov
add
bound
mov
mov
shrl
fisubl
bound
and
pop
mov
fcmove
jp
nop
sbb
mov
ficompl
push
sbb
and
pop
cld
shlb
cmpb
in
cmpsb
mov
mov
adc
add
pop
cmpb
loopne
push
xchg
mov
sbb
adc
add
mov
pop
dec
imul
mov
sbb
sub
lods
pop
lods
or
dec
mov
dec
push
xor
insl
lods
and
daa
out
jo
jmp
shrb
imul
pop
mov
push
ss
aad
sbb
add
sbb
and
mov
push
jo
rcl
pop
call
insb
jo
loope
cld
fwait
adc
sub
jp
and
pop
cwtl
and
add
or
lret
ss
dec
jmp
sub
jno
jnp
not
cli
jno
add
push
stos
nop
out
divl
rcrl
shll
add
test
jno
mov
dec
loopne
outsl
mov
xor
rcrb
inc
jo
mov
mov
xchg
mov
popa
sub
shrl
test
lock
int3
and
push
leave
lods
inc
add
push
push
mov
sbb
jo
sbb
cmp
push
dec
add
or
and
pushw
cld
aaa
mov
pop
xor
out
jb
fdiv
or
pusha
pop
inc
adc
add
xor
add
push
testb
inc
fsubr
nop
cmpb
scas
adc
lods
cmp
sar
decl
jl
add
mov
xor
mov
add
jb
mov
xor
ret
or
movsl
rorl
xchg
add
mov
mov
jg
bound
fists
mov
or
push
lcall
into
and
call
insl
push
pop
adc
push
and
push
add
sbb
sbb
mov
mov
mov
add
out
cmp
and
shl
pop
adc
add
cmp
mov
mov
call
lcall
mov
push
jne
pusha
jp
lahf
dec
xchg
cmc
out
inc
mov
push
xor
jne
and
add
ds
mov
mov
jo
movsb
addl
rcrb
mov
sbb
popa
adc
sbb
cli
mov
push
stos
jne
pop
addr16
int
xchg
mov
jb
xchg
out
xlat
mov
pop
adc
or
jg
rcrb
mov
sbb
add
inc
roll
ret
outsl
pop
add
mov
out
add
xchg
js
test
movsl
adc
into
dec
inc
jo
fiaddl
adc
lock
cld
mov
pop
push
sbb
loopne
push
mov
fbstp
adc
popf
push
push
xor
ficomps
decb
jge
rep
push
cwtl
loopne
pop
mov
incb
loope
sbb
push
add
data16
aad
sub
adc
call
andl
push
dec
inc
push
repnz
lret
mov
sub
add
xchg
adc
push
adc
lret
insb
fcmovnu
and
addl
jecxz
push
pop
mov
mov
or
xor
adc
add
aam
aas
xchg
dec
add
xchg
and
sub
add
xorb
mov
dec
inc
mov
or
push
sbb
adc
jae
or
lret
add
nop
cmpsb
shrl
jae
pop
mov
js
and
stos
shlb
mov
jmp
pop
add
xchg
enter
jmp
hlt
xchg
test
mov
ljmp
and
add
and
sbb
inc
inc
add
aam
outsl
mov
mov
xchg
push
or
int3
outsb
loop
dec
mov
add
fcmovnu
push
jl
pop
lcall
jp
lcall
cmp
and
rcl
jnp
xlat
clc
mov
adc
lea
ret
push
and
pushf
push
test
pop
or
jne
mov
adc
xchg
add
add
pop
adc
push
mov
out
push
and
mov
jmp
xchg
mov
andb
xchg
or
sub
mov
push
pop
adc
and
loop
mov
fldt
sbb
xorb
call
aaa
adc
cmp
lret
mov
fsubrl
rorl
std
outsl
add
push
cmp
mov
sbb
mov
outsb
test
and
and
jl
call
lock
arpl
push
mov
andl
pop
enter
dec
nop
test
andb
fwait
mov
pop
sbb
push
pop
pop
push
and
orb
add
add
mov
hlt
popa
add
lea
jb
or
or
cmp
push
or
movsb
inc
call
loop
ja
inc
add
jge
or
mov
mov
sbbb
lcall
xchg
in
adcb
ret
or
add
inc
xchg
push
outsb
movsl
outsb
sbbb
cmp
ret
out
jmp
or
into
add
mov
enter
rol
pop
mov
pop
pop
ret
pop
inc
sahf
les
adc
hlt
inc
int3
pop
jnp
fmull
add
fadds
roll
add
inc
adcb
add
add
xor
invd
push
add
mov
jae
sub
sbb
dec
inc
mov
mov
pusha
shlb
sarl
or
movsl
mov
add
out
sub
dec
sbb
add
and
and
add
loopne
pushf
rclb
cmp
mov
pop
fildll
stos
push
sbb
inc
adc
test
and
mov
and
jge
roll
adc
jecxz
inc
inc
fimull
arpl
add
rcrb
lcall
sbb
mov
popf
aam
dec
rolb
in
mov
add
mov
add
xorl
and
andl
or
mov
popl
inc
das
cmpb
inc
sbb
add
aad
sub
test
es
js
cmp
and
ror
enter
sub
pushl
sub
mov
xor
add
add
push
test
cmp
mov
or
add
fiadds
sbb
xor
fnsave
dec
scas
fildll
inc
add
or
add
sbb
mov
and
sub
ret
or
cli
mov
dec
test
sbb
mov
outsb
data16
mov
jmp
xor
mov
out
popf
add
mov
sub
ss
inc
or
jb
dec
pusha
sbb
das
cmp
push
data16
pusha
adc
inc
shrb
pop
add
ja
xor
adc
push
dec
push
push
mov
jmp
xor
adc
mov
clc
or
movsb
dec
out
leave
pushf
popf
and
cmp
loope
pushf
rorb
adc
sub
insl
orl
insb
add
adc
repnz
imul
fs
orb
xor
or
adcb
mov
out
fists
inc
xchg
mov
mov
inc
lods
nop
push
mov
ljmp
movb
inc
int3
loopne
mov
testl
out
adc
pop
mov
cmc
push
inc
or
add
dec
loopne
xor
pusha
cmp
fwait
xor
push
add
jp
xchg
ret
ss
dec
popf
xor
cmp
add
push
push
jae
or
adc
or
loope
jmp
push
cli
out
mov
jmp
andl
in
popf
fiaddl
adc
and
addl
into
or
loope
mov
add
popaw
pushf
rcrb
inc
jecxz
loope
insb
and
xchg
loopne
test
push
and
popa
call
fs
xchg
and
jecxz
fidivrs
mov
push
inc
dec
cmp
cmp
inc
inc
push
jbe
add
or
adc
push
out
add
loop
clc
inc
daa
push
rcrb
in
inc
divps
xor
jg
daa
adc
in
adc
in
mov
addb
mov
sbb
decb
sub
xchg
orb
orb
fldt
sbbl
jo
ljmp
loopne
adc
pushf
lret
or
movsl
aam
add
jmp
loop
cmp
mov
xchg
cli
dec
bound
push
aam
inc
mov
adc
pop
ret
ret
sbb
adc
pop
and
sub
add
loope
jg
fisttps
ljmp
rolb
add
push
jnp
ret
shlb
inc
out
arpl
arpl
fisubrl
xor
xlat
pusha
or
sub
jl
xor
jae
push
or
hlt
add
xchg
ss
or
shlb
or
mov
cld
cmp
add
loop
push
repnz
mov
pop
cmp
daa
or
add
xchg
add
xor
ja
cli
repnz
cs
lock
and
hlt
inc
or
flds
xor
clc
cltd
popf
inc
or
mov
imul
imul
xor
pop
lock
inc
mov
arpl
lret
xor
dec
dec
adc
jmp
adc
jmp
ss
icebp
sbb
mov
push
out
das
into
cmp
orb
out
xor
sbb
jle
push
push
xor
dec
je
pusha
xor
in
or
cwtl
inc
mov
push
or
cmp
in
into
sbb
dec
push
jl
lret
shlb
mov
rcl
nop
sahf
jmp
ficoms
mov
push
cld
int
insb
add
xor
pop
fldl
loope
cwtl
jmp
xor
lock
outsb
add
mov
adc
lcall
out
jb
pop
xchg
rclb
in
inc
clc
aad
push
push
pop
adc
mov
and
pop
push
out
pop
ficompl
pusha
add
inc
xor
test
xor
shl
sbb
jle
insb
lret
sub
icebp
ljmp
mov
and
shlb
cwtl
data16
mov
xor
jb
push
mov
call
sbb
pop
rolb
jle
ja
nop
cmp
push
pusha
push
xchg
add
xor
faddl
and
stos
imul
fdivr
dec
mov
inc
jno
call
dec
add
nop
push
jp
aam
rclw
sbb
fcoms
pop
jl
inc
mov
sub
inc
pop
inc
sbb
stos
xchg
dec
ljmp
fs
push
pushw
adc
outsl
and
les
dec
adc
lods
aaa
cwtl
cli
shrb
pop
insl
mov
movsb
jb
or
or
mov
dec
mov
inc
and
adcb
push
mov
xchg
pusha
pop
outsb
jp
lea
and
ja
adc
adc
xchg
push
sbb
js
rcrb
mov
xchg
add
cmp
sub
dec
adc
sub
mov
cmpsb
fmuls
out
push
popf
pop
and
xor
xchg
insl
popf
inc
adc
jbe
push
stos
mov
insl
test
push
add
loopne
cmp
and
cld
mov
add
repnz
stos
mov
outsb
push
inc
mov
push
xor
push
cmp
pop
jg
loopne
inc
mov
mov
ret
push
adc
sub
xor
sbb
mov
cmp
insb
mov
add
pop
add
add
fstpl
xchg
pusha
or
or
data16
mov
sbb
sahf
mov
push
pop
or
cmpsb
jo
test
xor
jp
ja
jp,pn
xor
rcll
jno
mov
xor
addl
nop
decl
adc
mov
and
jae
fisttpl
mov
xchg
sbb
lcall
xchg
sub
fnstsw
cmpsl
push
sti
push
and
clc
rcll
fsubrs
sbb
ljmp
inc
push
adc
and
ja
test
shrl
or
inc
ficoml
outsw
scas
push
sbb
rcrb
add
mov
incl
popa
or
pusha
xchg
mov
inc
fistl
add
push
mov
pop
lds
ljmp
push
aaa
mov
add
inc
aaa
xor
les
xor
data16
pop
cmp
xor
xor
stos
jecxz
xor
mov
in
int3
add
push
mov
stos
push
movb
cmpsb
lret
cltd
or
push
fcomip
mov
cmp
pop
push
pop
loopne
lret
xchg
add
fimull
push
adc
lcall
mov
sti
jmp
repz
sbb
das
mov
sbb
xor
dec
sbb
jg
adc
jbe
imul
pop
jp
jmp
push
mov
bound
pop
mov
mov
add
cli
sbb
mov
shll
jmp
loope
adc
lock
and
mov
xchg
xchg
lock
fisttpll
add
xchg
adc
popa
xchg
jmp
sti
fbld
aam
xchg
add
or
jmp
adc
push
sti
cltd
jp
loope
div
popa
push
jb
addb
lret
and
testb
icebp
add
and
lcall
cmp
sbb
or
cs
aas
add
in
sub
adc
add
jmp
pusha
pusha
pop
push
and
outsb
push
jbe
call
adc
movsb
mov
inc
and
stos
push
out
dec
enter
dec
mov
rorb
xor
ljmp
and
mov
jmp
movsb
gs
adc
xchg
mov
xchg
pop
push
sbb
js
subb
sbb
sub
mov
sbb
mov
pop
push
outsl
add
adc
or
sub
bound
mov
add
fadds
push
adc
inc
shlb
mov
outsb
jno
dec
sbb
mov
cmp
in
mov
inc
add
inc
inc
mov
or
fcoms
mov
addb
push
push
testl
jmp
mov
lcall
jg
mov
jmp
mov
sbbl
adc
add
xor
jp
mov
jno
adc
ljmp
loope
cmpsl
adc
outsb
and
sub
add
xorb
clc
das
rolb
inc
stos
subl
sbb
jl
in
sub
push
nop
or
out
mov
outsl
sbbb
push
loope
mov
sbb
sbbl
jno
icebp
outsl
jo
sub
leave
and
rol
mov
nop
xor
push
test
orb
inc
nop
pusha
add
js
hlt
and
inc
jg
xor
js
int3
or
fisubrs
push
xor
jmp
mov
inc
push
stos
dec
inc
call
jl
pop
ret
fwait
rclb
sbb
push
mov
bound
push
sbb
sbb
inc
or
xchg
mov
pop
arpl
pop
sbb
jge
pop
rclb
jge
pop
pop
pop
add
xchg
add
xchg
pop
add
dec
mov
daa
push
rclb
je
insw
shlb
cmc
or
add
push
or
jl
rolb
std
mov
sbb
and
retw
lahf
inc
cmp
add
adc
andb
pop
cmp
or
add
xlat
add
jbe
xchg
push
cmp
push
cmp
jb
mov
mov
inc
dec
ss
daa
cwtl
cmpsb
sbbb
or
mov
hlt
jb
inc
insl
aam
fs
pusha
repnz
and
mov
std
jmp
cmc
cwtl
insl
test
dec
sbbb
cmp
add
ret
sbb
push
mov
sub
test
adcb
mov
push
jecxz
push
mov
cmp
fmuls
add
cmpsb
sub
push
and
adc
adc
ja
lcall
loope
pop
pushw
or
out
mov
xor
inc
adc
jmp
pop
test
frstor
inc
call
dec
or
mov
push
pop
pop
dec
scas
subl
cmp
aas
mov
fdivrl
inc
or
inc
add
or
add
pop
pusha
lcall
loopne
cmp
jl
outsb
movsb
ss
and
fimuls
rorb
jp
pop
pop
inc
cs
pushl
inc
xchg
insl
in
rclb
shlb
incl
or
pop
pusha
jns
movsb
ficompl
dec
pop
mov
loop
inc
es
inc
add
xor
mov
mov
jmp
inc
pusha
inc
push
call
or
add
es
aas
sub
hlt
pop
mov
mov
sbb
clc
add
or
or
adc
jnp
add
test
pop
mov
sbbb
sub
inc
dec
arpl
mulb
outsb
cld
or
push
sbb
jg
push
pop
cld
mov
sarl
xchg
daa
jb
mov
jbe
jle
or
addb
sub
and
decb
movsl
cs
andb
mov
dec
lods
sarl
arpl
popf
and
xor
mov
add
dec
add
rcrl
les
loope
dec
add
sbb
pop
cld
fistpl
mov
jns
and
push
jno
add
add
insb
popf
xchg
rorl
andb
icebp
ljmp
jbe
push
rcrl
xor
adc
dec
add
add
or
dec
xor
add
jg
mov
adc
test
mov
and
fadds
sbb
subb
xchg
and
into
test
mov
jg
inc
mov
cmp
dec
mov
adcb
jne
out
fildl
adc
push
sbb
test
mov
bound
xor
in
fwait
mov
add
sbb
xor
pop
adc
fwait
mov
add
pop
xchg
dec
inc
cmp
imul
mov
mov
and
and
addl
mov
or
mov
pusha
push
mov
jmp
aam
fisubrs
add
push
nop
adc
xchg
dec
adc
xchg
and
add
sbb
jo
and
gs
ja
mov
xor
push
mov
and
cmp
mov
mov
and
pop
stos
js
inc
das
mov
and
adc
fs
stos
call
push
add
mov
aad
popa
pop
es
arpl
mov
push
and
fsubr
out
mov
inc
cmp
orl
pop
cwtl
call
lods
jg
inc
jnp
lods
xor
shr
dec
jg
and
das
mov
pop
dec
jmp
fildl
xor
or
into
add
add
and
shlb
addr16
insl
stos
mov
adcb
dec
cmp
dec
jo
jno
or
push
adc
add
scas
mov
push
loope
push
ja
mov
mov
dec
inc
add
xor
or
scas
push
and
sub
cli
mov
clc
insb
and
jp
and
lds
call
nop
add
loopne
or
or
cmp
sbb
rolb
push
inc
loop
pop
test
jle
inc
and
pop
or
mov
incl
inc
mov
dec
ret
into
add
add
mov
sub
xchg
orb
jno
adc
and
js
fistl
push
dec
adc
sub
adc
or
mov
inc
push
push
push
loopne
or
mov
cmp
mov
mov
xchg
mov
pop
test
outsb
push
xor
out
xor
cmp
mov
dec
lock
ja
cld
inc
sbb
mov
pusha
mov
adcb
incl
mov
jge
or
xor
push
ja
je
jno
std
or
call
xor
adcl
xor
dec
sub
dec
push
mov
dec
or
out
outsb
push
pushf
add
aad
push
out
push
add
dec
push
or
xor
idivb
dec
sub
loopne
adc
inc
push
and
push
js
mov
jo
jno
inc
inc
mov
xor
mov
jl
je
adc
jb
aas
jb
or
into
adcb
pop
je
andl
and
daa
out
push
xchg
xor
mov
dec
lcall
mov
inc
loop
push
xchg
or
cld
xorb
fadd
addb
repnz
xchg
in
add
add
jne
xor
add
stos
add
push
push
inc
add
push
mov
aaa
sti
inc
sbb
bound
dec
mov
jb
inc
xor
inc
call
hlt
das
mov
pop
lcall
cmpsb
popf
adc
arpl
and
xchg
sbb
dec
sbb
pop
pop
add
inc
pop
sub
insl
das
aam
data16
popa
sub
xor
mov
adc
cs
pop
sub
jo
and
dec
mov
sti
test
add
mov
jno
fdivp
jmp
push
push
jnp
jge
push
test
adc
incl
int
adc
nop
add
add
or
cli
add
lock
sbb
popf
call
sahf
cwtl
outsl
push
jnp
pushl
cli
pop
addr16
imul
lea
and
cmp
mov
xchg
and
xchg
outsb
and
dec
jmp
adc
adc
inc
inc
xor
shll
es
rclb
lret
out
cmp
add
andl
test
mov
ret
insb
inc
int
sahf
jl
xor
arpl
data16
jb
or
test
mov
push
inc
xor
mov
pop
or
outsl
fildl
or
cmp
jmp
add
inc
je
outsl
ljmp
popa
mov
jo
nop
sub
xor
jg
icebp
mov
lock
add
or
mov
push
les
or
dec
pop
add
stos
popa
push
pop
sub
pushl
and
test
ret
sahf
xchg
inc
push
cmpsl
push
xor
push
jecxz
mov
xor
add
mov
dec
cmp
mov
pop
mov
das
xchg
stos
push
cmp
mov
pop
inc
sub
rol
pop
dec
xchg
loopne
or
incl
and
jmp
out
or
enter
sub
dec
ljmp
add
in
lcall
loope
popaw
inc
imul
cld
mov
mov
test
add
lods
sbb
movsb
jo
dec
pop
dec
outsb
or
aad
and
mov
call
sub
inc
inc
pop
aam
fwait
loope
mov
and
xlat
loop
clc
insb
adc
les
add
xor
push
stos
push
push
je
or
adc
test
lcall
inc
pop
inc
mov
test
mov
testb
rcrl
lock
mov
mov
shll
sbb
cli
cs
mov
cmp
mov
cmp
or
lcall
cld
sahf
in
not
xchg
mov
rcll
add
mov
or
sbb
lods
shlb
pop
jne
mov
pop
aad
icebp
xchg
adc
pop
andb
mov
sub
loopne
ret
xor
aas
add
je
dec
data16
cwtl
push
notb
or
pushf
stos
or
add
out
xchg
enter
movsb
and
mov
mov
subb
pop
rolb
loopne
lret
push
inc
mov
mov
clc
dec
popa
mov
test
aad
mov
testb
mov
sbb
ret
or
xor
testb
scas
adc
jmp
or
jo
add
int3
and
aaa
jo
jmp
xchg
or
cmp
mov
jo
add
data16
inc
push
push
icebp
lcall
out
test
and
dec
and
movsb
arpl
push
das
adc
xchg
ret
add
and
add
cmp
pusha
ljmp
adc
push
add
push
pusha
cmp
and
sub
jp
mov
call
or
push
xchg
inc
jecxz
aam
jp
xor
inc
lcall
out
sub
sbbb
push
add
mov
in
xlat
mov
sbbb
mov
mov
incl
loope
jae
rcr
in
adc
addr16
dec
inc
aaa
test
push
pop
jg
icebp
mov
pop
mov
mov
adc
mov
dec
push
movsb
mov
adc
aam
jmp
jle
sbb
dec
mov
imul
mov
pop
and
jmp
ds
dec
cmc
rcrb
add
adc
or
cli
add
or
ljmpw
mov
loopne
xchg
rclb
lahf
dec
cld
inc
cmp
loop
and
notb
dec
sbb
inc
pop
xor
testb
and
and
cmp
sub
adc
loopne
add
push
fidivl
jbe
je
fmull
insb
mov
mov
lds
inc
cwtl
push
adc
fcomps
sub
and
js
andb
add
add
loopne
inc
mov
xlat
pop
pop
int
and
adc
mov
dec
add
insl
in
lock
mov
xor
add
or
push
sbb
loopne
test
arpl
dec
ret
mov
add
jbe
mov
mov
push
sub
mov
or
dec
mov
mov
push
mov
lret
lea
inc
sbb
mov
call
clc
data16
or
js
dec
pusha
sahf
add
leave
test
rorb
push
xorb
mov
dec
and
jb
movsb
popa
cmpsb
add
ljmp
jno
dec
add
inc
adcl
pop
jne
adc
add
loope
sbbl
sbb
add
and
and
push
mov
faddl
xorb
pusha
xor
push
inc
lock
insb
add
cmpsb
outsb
push
ljmp
addb
xchg
push
popl
push
test
popf
push
clc
cmovnp
test
jg
or
mov
mov
subb
xor
test
or
xor
mov
adc
pop
inc
push
sahf
lret
adc
mov
and
negb
jg
cs
dec
aas
mov
popa
test
mov
jne
loopne
adcl
pop
nop
jbe
cmp
add
ja
jbe
xor
mov
pop
add
xor
ljmp
xor
inc
pop
inc
add
sahf
add
or
mov
sbb
jns
and
fs
aaa
cld
out
mov
sbb
adc
incl
aaa
int3
or
inc
push
fildl
mov
and
or
and
pop
adc
adc
dec
ret
subb
test
sbb
addl
push
mov
pop
loop
sbb
aam
ret
mov
mov
pop
movsb
mov
insl
in
jmp
insb
icebp
and
subb
imulb
add
and
scas
fwait
ljmp
add
lahf
dec
mov
lock
push
inc
and
xorb
add
xor
add
cld
ret
cmp
sub
push
and
xorb
inc
daa
cwtl
arpl
shl
inc
decb
lock
test
push
or
mov
mov
mov
decl
leave
push
sub
xor
rclb
xlat
dec
add
add
sub
cld
or
filds
or
push
xor
mov
inc
push
push
addb
push
test
pop
shlb
push
popa
jae
push
mov
mov
pop
jno
push
imul
jae
xchg
xor
push
out
xor
mov
jb
dec
inc
adc
in
loopne
cmp
sub
inc
das
cmc
ja
pusha
or
pop
cmp
lea
test
dec
push
xchg
loop
push
or
push
jmp
mov
cmpl
or
mov
push
test
adcl
adc
inc
mov
movsb
xchg
loopne
sub
pop
jp
pop
cmp
cmpb
adc
idivb
cmc
pop
pop
dec
cmp
adc
sbbl
xor
mov
inc
cs
inc
fs
inc
mov
loope
or
hlt
data16
shll
in
mov
add
add
je
xchg
sbbl
js
adcb
mov
dec
xchg
nop
jb
sar
xchg
adc
inc
mov
addb
pop
cmp
adc
jno
ljmp
sbb
mov
andl
shrb
movsb
loopne
xorb
add
mov
mov
add
mov
pop
or
inc
dec
or
jne
aaa
es
and
mov
mov
popf
and
adc
out
and
dec
inc
in
mov
dec
in
mov
inc
xor
cli
xchg
stos
or
ljmp
pop
xor
shrl
pop
pusha
pop
adc
pop
lock
or
cmc
scas
pusha
mov
addb
rcrb
and
xchg
mov
push
adc
sbb
loope
test
or
rol
xchg
mov
or
sub
mov
jge
mov
loop
pop
mov
enter
push
mov
mov
notb
andl
inc
jbe
aas
push
aas
push
ljmp
xchg
rolb
std
dec
and
inc
and
jle
movsb
inc
jmp
mov
popa
lods
jmp
or
aad
daa
shll
fsubl
mov
shrb
xchg
jbe
jnp
popa
mov
or
xchg
sub
inc
cwtl
add
mov
adc
cli
add
rolb
or
dec
cld
popf
ljmp
push
stos
and
dec
sbb
push
insb
xchg
clc
push
sbb
add
clc
ja
jle
pop
xor
add
test
add
push
sbbb
bnd
and
aaa
jg
outsl
sub
inc
sub
lds
adc
pop
and
xor
loope
or
sbb
pushw
loopne
adc
imul
mov
sbb
jbe
add
mov
sub
pusha
push
push
mov
decl
xchg
popf
inc
adc
mov
xor
push
mov
pusha
push
mov
pop
push
out
add
sbb
mov
add
and
cmp
sbb
push
xchg
and
jp
sub
sub
add
dec
ret
movsb
int3
sub
andb
sbb
imul
loopne
gs
adc
imul
adc
clc
mov
xor
adc
fmull
mov
aas
inc
push
jmp
inc
adc
imul
sbb
mov
push
sbb
push
aas
or
xor
push
jmp
pop
std
adc
push
dec
sbb
fildll
cli
and
stos
mov
sub
add
inc
shlb
jle
fcoml
cmp
push
xchg
or
mov
fsubrs
push
add
mov
inc
dec
call
add
mov
jecxz
sub
fidivl
or
ficompl
sbb
je
or
xor
lods
xchg
mov
imul
icebp
xor
add
cmpsb
outsb
sti
pop
inc
mov
xchg
insl
int
inc
popa
add
adc
and
add
or
addr16
sbb
repnz
outsb
cld
outsl
adc
mov
add
cmp
pop
cmp
push
lods
pop
out
push
sub
xchg
adc
ljmp
popa
mov
mov
pop
xor
xor
std
or
jae
add
inc
mov
pop
cmp
adc
push
sbb
inc
mov
daa
cmpsb
xor
pop
inc
sti
cmp
push
mov
sub
jmp
pusha
test
mov
jns
push
and
mov
xchg
xlat
es
jb
or
adcb
out
cmpb
xor
inc
fwait
icebp
add
test
push
push
mov
sbb
add
xchg
mov
call
add
push
pop
lcall
ja
pusha
scas
shl
rolb
ret
push
rolb
add
inc
imul
and
mov
or
add
inc
mov
rcr
std
cs
mov
scas
and
sub
or
pop
xor
adc
cs
shrb
adc
or
mov
mov
sub
mov
jle
movsb
mov
sub
cld
mov
add
xchg
cmpsb
mov
add
push
inc
jmp
nop
pop
add
popa
add
insl
std
push
mov
out
mov
addr16
and
xor
icebp
sub
fbstp
and
dec
xor
adc
and
lock
add
je
or
push
jl
in
pop
sub
sub
les
mov
ljmp
mov
add
push
mov
push
das
test
pop
fdivrs
add
mov
push
add
clc
lahf
fs
mov
mov
cli
call
inc
or
and
jb
stos
jmp
scas
repnz
gs
fcom
xor
lret
push
roll
std
add
push
add
sbb
ret
movb
xchg
test
scas
push
mov
push
out
add
out
jecxz
adc
dec
sbb
add
jp
in
xor
xchg
cli
flds
mov
add
cwtl
clc
sbb
std
xlat
xchg
and
or
adc
jmp
sub
or
loopne
das
push
xor
das
imul
mov
inc
push
jo
fidivl
xor
ret
mov
add
or
and
jno
lcall
clc
push
sahf
xchg
add
pop
jbe
and
mov
ja
aaa
jl
add
ss
add
jb
mov
xor
push
mov
inc
or
popa
sbb
inc
pusha
or
or
jo
xchg
cli
int3
ret
and
shrb
push
push
jb
cmp
add
ja
cmpb
pop
xor
loop
shll
xor
mov
mov
adc
bound
sahf
adc
add
and
subb
add
adc
xor
bound
fiaddl
add
pop
xor
sub
loope
jl
popa
adc
fs
inc
cs
popa
cmp
sbb
mov
push
cltd
fnstenv
bnd
or
adc
sub
cmc
add
pop
lcall
popa
mov
stos
xor
cmp
icebp
mov
xor
addb
inc
lcall
jo
xor
mov
add
cmpsb
stos
pop
dec
push
mov
xor
mov
add
fldl
or
mov
das
and
or
and
mov
testb
insl
adc
add
add
fwait
aaa
lods
rorl
adc
jg
jl
mov
mov
add
cmp
pop
aas
icebp
sub
fdivrs
call
stos
add
dec
jbe
dec
popa
popl
roll
call
sbb
lock
data16
popf
push
insl
ljmp
push
out
xor
mov
inc
mov
sbb
fbld
fldl
lods
mov
shrb
and
addl
insl
inc
call
adc
inc
or
shlb
or
mov
ljmp
mov
rolb
pusha
stos
mov
insl
dec
or
xor
push
test
push
data16
jecxz
and
mov
orb
dec
inc
adc
pushl
and
push
icebp
cs
cs
aam
insb
mov
pop
sbb
adc
jmp
dec
int3
popf
cmp
inc
add
add
cmp
xorb
cmp
filds
xor
inc
push
adc
add
add
and
mov
cmpsl
mov
pop
enter
jb
push
loopne
out
xchg
xor
inc
testb
xor
loopne
cld
push
fs
fdiv
sub
add
aas
and
dec
push
mov
or
add
sub
add
cs
pop
cmpsb
push
push
fst
adcb
add
mov
inc
mov
add
xor
add
adc
push
cmc
or
add
adc
sub
gs
mov
add
add
dec
shrl
dec
js
or
pop
ja
xor
insl
and
mov
inc
and
jp
imulb
imul
sbbb
fsubs
daa
add
lcall
adc
xchg
mov
push
adcl
lcall
xorl
xchg
jbe
and
ja
sub
movsl
mov
orb
push
sub
fcmovnb
sbb
andb
mov
add
adc
imul
loopne
sub
out
sub
xchg
add
cmc
xor
add
adc
jno
or
xor
add
jns
clc
and
push
push
mov
pusha
xorb
sbbl
jns
pop
add
push
scas
and
mov
movsb
pusha
ja
mov
out
cmpsw
sub
and
pop
ljmp
xor
pusha
adc
xor
xchg
call
push
add
jg
mov
cmp
aad
pusha
and
add
aad
cmp
mov
pop
adc
dec
aam
adc
or
push
cltd
add
push
cwtl
push
mov
and
and
inc
pop
sub
pushf
xor
pop
adc
loopne
enter
and
cwtl
call
ds
add
push
and
push
xor
cli
jbe
lea
hlt
pop
pop
sub
mov
add
jb
push
shrb
pshufw
adc
pop
imul
and
push
shrb
or
dec
xor
mov
je
mov
arpl
pop
inc
adc
mov
mov
adc
push
sarb
fs
bound
inc
imul
and
add
sbb
lock
mov
add
cmpsl
jmp
mov
xor
fistpl
ret
add
outsb
rcrb
or
mov
call
inc
inc
insl
jo
xchg
jg
inc
xor
rolb
or
and
es
lock
rorb
sbb
in
inc
loopne
push
push
daa
mov
mov
mov
cltd
sbb
rolb
or
adc
ret
fistl
add
bound
or
xor
add
push
or
ret
pop
popa
push
mov
lock
cld
add
adc
out
or
pushl
clc
loopne
add
push
mov
out
roll
add
cmp
test
and
pop
jo
mov
pop
dec
inc
pop
or
popf
inc
jae
add
inc
sbb
or
adc
pop
or
dec
push
gs
ret
scas
ss
mov
and
aaa
dec
pop
rclb
ljmp
or
shlb
push
inc
dec
adc
mov
jp
cltd
add
push
sbb
sar
jno
cmp
addb
popa
cltd
adc
add
pusha
and
fwait
insl
cld
popf
loop
or
sbb
jle
aad
and
or
popf
push
loopne
dec
mov
mov
dec
sbbb
int3
or
dec
inc
mov
adc
sbb
adc
jo
pop
push
inc
je
and
idivb
or
mov
inc
test
push
add
std
sbb
add
test
xor
add
or
push
xchg
xchg
popa
add
add
lock
addw
fs
add
mov
xor
mov
fwait
scas
sahf
shrb
mov
fidivl
add
inc
out
insb
xor
xchg
test
jno
test
shll
push
aaa
hlt
jg
pop
add
cmp
inc
add
lods
rolb
pop
inc
cmp
cmpsb
hlt
outsb
bound
sbb
mov
leave
jp
popa
xchg
adc
xor
out
mov
mov
adc
movsl
les
lcall
lcall
hlt
fisttpll
mov
fistl
cmp
and
xchg
push
inc
cmpl
sub
mov
push
loop
dec
inc
or
xchg
and
jo
adc
sub
data16
adc
adc
subb
js
add
add
pushf
xchg
dec
xchg
push
incl
adc
or
mov
push
orb
inc
insl
std
daa
rolb
pop
dec
or
je
insb
int
sub
negl
and
adc
fidivl
sahf
loopne
ss
sub
sub
ljmp
adc
add
mov
pusha
lret
push
mov
or
inc
cmp
insl
shl
xor
jl
push
nop
xchg
inc
popf
xchg
rorb
arpl
fcmovu
inc
sti
call
mov
pop
pusha
adc
xor
loopne
ret
ljmp
sub
sub
adc
cmp
hlt
or
mov
stos
loopne
popa
adc
hlt
mov
ss
outsb
cmc
mov
push
xor
fidivrs
fadds
fwait
jmp
popf
inc
pusha
loope
mov
aam
jg
mov
xor
sub
add
or
es
pushf
loop
pop
sub
scas
sub
outsl
push
jbe
pop
mov
testb
mov
xor
jecxz
xor
gs
cmp
mov
adc
pop
push
mulb
sti
mov
jbe
enter
or
daa
loop
sbb
or
mov
push
or
loopne
or
pop
add
fadds
ret
popf
sbb
lods
orb
adc
add
subl
adc
or
into
popa
sbb
push
cmp
adc
nop
shl
pop
cmp
or
clc
and
sahf
mov
pop
dec
mov
inc
pop
gs
xchg
insb
ljmp
xor
mov
decl
add
push
cmp
sbb
push
fnsave
jno
xlat
or
sub
inc
pusha
sbb
xchg
mov
add
jb
je
test
std
add
pop
mov
and
or
pop
data16
add
and
and
add
sub
mov
or
jae
data16
popf
outsb
dec
cmp
popa
add
addb
dec
mov
push
push
ficoml
xchg
test
dec
enter
sahf
and
fldt
nop
jnp
sbb
ss
loopne
fdivs
outsl
outsl
xor
sti
mov
xchg
mov
loope
push
loop
stc
or
lcall
cmp
imulb
cmp
clc
loope
add
add
mov
sub
jle
or
loopne
std
lahf
cmp
add
out
add
adc
das
mov
mov
out
lea
aaa
add
hlt
pop
lcall
jmp
insl
loope
pop
out
ja
adc
and
push
pop
xchg
push
and
xchg
mov
jmp
adc
push
and
rolb
dec
or
and
mov
outsl
pop
stos
jecxz
add
pop
imul
add
fcoml
je
sti
jg
adc
fwait
or
jp
mov
cmp
dec
daa
lcall
xchg
adc
add
jle
xor
add
mov
data16
lock
xchg
pop
dec
or
fistpl
fwait
push
mov
outsl
inc
rcrb
xchg
adcb
push
adc
sbb
push
mov
and
or
loop
xchg
sbb
cwtl
cmp
arpl
mov
cmpsl
inc
cmp
sbb
add
and
rcrb
aas
nop
adc
lcall
add
push
or
cwtl
hlt
sbb
push
add
dec
pushf
popf
and
mov
inc
and
int
adc
mov
inc
add
pop
test
insb
mov
jnp
jecxz
add
popa
adc
push
jmp
pop
jmp
and
enter
scas
adc
sub
or
and
and
lock
pusha
movsb
mov
fisubs
cmpsb
inc
mov
pop
mov
sub
stos
fs
dec
rorb
ret
ljmp
push
xlat
or
mov
int3
adc
push
lcall
outsl
js
movsb
call
std
inc
add
and
mov
decb
sub
movsb
fiaddl
pop
jnp
and
mov
xchg
test
mov
or
aam
or
dec
out
jle
sub
dec
pop
jl
mov
dec
insb
cli
mov
and
jb
push
dec
outsb
add
mov
or
push
rcrb
add
dec
cli
mov
add
lcall
pusha
pop
test
push
outsl
pushf
cmc
sbb
push
shrb
out
aas
xchg
cld
mov
or
sbb
adc
mov
pop
add
pusha
push
aaa
call
hlt
jg
and
out
add
jecxz
pop
gs
sub
mov
mov
aas
sub
pusha
adc
outsb
pop
test
push
mov
adc
xor
push
jg
sub
add
das
fs
mov
push
loopne
pop
add
mov
mov
sbb
pop
or
lds
data16
pop
test
sub
stc
test
mov
pop
stos
push
mov
insb
xchg
orb
test
mov
inc
add
ljmp
add
add
es
fs
les
sub
inc
lods
or
push
inc
adc
push
popf
jbe
out
lock
in
mov
jo
out
push
or
arpl
pop
aaa
sub
in
int3
out
add
mov
hlt
mov
mov
out
pop
add
fmull
sbb
int3
push
mov
xchg
sarb
adc
flds
add
lock
ret
gs
pusha
loopne
adc
add
sti
shl
loope
call
lock
push
aaa
or
mov
adc
push
inc
add
popa
movsl
sbb
bound
test
jb
inc
lahf
test
fcomps
lcall
fisttps
mov
add
push
xchg
mov
filds
pop
sub
mov
pusha
aad
mov
jo
mov
jo
fdivs
mov
test
push
adc
ljmp
insl
push
lock
push
add
pop
inc
loop
inc
add
xchg
shrb
mov
mov
mov
addl
dec
lcall
add
movsb
jbe
mov
push
add
xchg
pop
cld
test
add
xchg
jle
dec
sub
mov
nop
mov
aas
adc
dec
or
xchg
dec
sub
pop
sarb
rolb
adc
movsl
loopne
dec
and
mov
jo
aam
addr16
das
lock
and
mov
adc
dec
test
rorb
ljmp
je
ret
xlat
cmpsb
mov
test
and
mov
adc
adc
mov
push
xchg
cmp
adc
sbb
mov
clc
ljmpw
mov
jo
bound
xlat
lock
fwait
mov
or
bound
xchg
mov
ds
cwtl
in
insl
push
fwait
mov
push
mov
loop
lea
test
push
add
mov
sbbb
test
or
icebp
das
adc
push
pushf
add
jbe
pop
add
insb
movsb
push
dec
leave
incb
scas
or
cmp
scas
add
or
arpl
pop
je
sub
add
add
mov
add
push
bound
sbb
movsb
sub
popa
add
xorb
mov
lods
or
and
adc
mov
sub
push
push
add
or
dec
idivb
push
and
xor
daa
andb
pmaxub
adc
add
adc
pop
dec
pop
test
jo
push
push
sub
and
mov
fldl
dec
adc
add
pop
xor
aas
push
pop
popf
test
add
adcl
into
add
xchg
clc
shlb
mov
push
xorb
aas
mov
outsb
inc
les
ja
js
push
mov
andb
fisubs
adc
scas
cs
xchg
lahf
dec
mov
adc
add
push
or
xchg
andb
cmp
in
mov
sahf
popf
cmp
add
mov
adc
add
pop
lahf
loope
ficompl
dec
or
ljmp
sbb
dec
out
sbb
and
sub
cmpb
cli
and
pop
dec
adc
mov
xor
fadds
ds
xor
mov
jmp
insl
out
mov
data16
or
or
mov
push
cwtl
mov
or
fdivs
test
je
jmp
call
adc
and
insb
jne
mov
ljmp
dec
movsb
sub
adc
and
int3
pusha
dec
dec
jb
lcall
mov
jg
sbb
push
adc
mov
rorb
or
fiaddl
insb
outsl
inc
push
mov
sahf
jmp
ss
or
jbe
arpl
add
add
bound
mov
adc
popa
nop
jmp
popf
adc
mov
adc
fiaddl
addr16
addb
rorb
adcb
ret
in
jmp
add
addr16
inc
movsl
sti
bound
ror
cwtl
inc
rol
pushf
fiaddl
xor
or
push
mov
push
inc
jb
int
dec
xchg
call
mov
test
arpl
clc
cmp
outsl
mov
ss
cwtl
into
outsb
jmp
cmpb
ss
adc
jbe
lcall
xchg
aaa
xchg
adc
xor
push
lock
cmp
adcb
cwtl
jno
or
pop
aaa
pusha
je
cs
mov
insb
mov
cld
dec
pop
jmp
or
mov
roll
inc
popa
cmp
mov
pop
add
xor
push
inc
xor
pop
or
or
xor
push
push
mov
push
int
pop
xor
test
mov
xor
sbb
std
add
pop
and
cmp
pop
xchg
mov
ja
fistpl
and
add
orb
inc
mov
jg
xor
lcall
dec
adc
push
loopne
mov
add
jecxz
xorb
ja
pusha
or
add
lcall
mov
jg
sub
and
test
or
rcll
add
js
loope
loop
push
inc
add
loopne
or
cmp
jmp
loope
cli
shll
xor
inc
inc
mov
cmp
es
mov
data16
nop
aas
mov
jb
pop
sub
inc
inc
adc
lods
pusha
adc
pushf
cli
in
fadds
inc
pushf
inc
arpl
in
and
mov
mov
ret
sub
mov
adc
rolb
fidivrl
sub
and
test
dec
xorb
xor
fisubrs
loopne
test
and
push
push
shrb
mov
push
adc
lods
pushf
pop
jge
inc
pop
jb
dec
pop
or
sub
bound
repnz
fsubs
pusha
adc
fs
cmpsb
rcll
adc
mov
add
jmp
icebp
push
inc
mov
and
addb
movsb
inc
insb
and
mov
xchg
push
js
movsb
jmp
lds
lcall
insl
xor
adc
outsl
pop
and
xchg
or
mov
subl
mov
or
xchg
mov
inc
es
cmp
cltd
subb
ja
mov
and
push
aas
xor
push
mov
cmpsb
sbb
dec
jl
std
adc
daa
push
sbb
push
mov
add
loop
mov
push
lahf
and
bound
push
jge
adc
lcall
dec
loope
jo,pt
loopne
mov
add
sti
mov
inc
mov
popa
or
sub
stos
add
loopne
fmull
fs
and
push
jl
test
add
mov
xor
adcb
pusha
dec
ljmp
jle
xor
or
outsl
fisttps
push
loope
or
jg
pop
push
clc
add
mov
push
cmpsb
mov
push
pop
push
mov
jp
push
das
movsb
add
cmp
mov
xor
loopne
mov
add
adc
mov
test
test
addb
jmp
cld
inc
or
arpl
orb
ret
mov
pusha
dec
inc
loope
pop
pop
inc
pop
sub
fs
pop
imul
ret
sahf
adc
shrb
inc
aam
sbb
lcall
mov
and
pop
inc
jbe
je
pop
mov
inc
addb
jnp
and
movsb
sub
mov
loopne
push
xchg
sbb
mov
jg
jecxz
mov
cmp
mov
jmp
cmpl
cmp
lock
inc
out
or
mov
jo
push
add
mov
dec
cli
xchg
icebp
shr
insb
sbbl
or
shlb
push
ss
insb
clc
jno
jo
sti
testb
add
pop
and
pop
pop
popf
mov
nop
mov
xchg
add
loopne
jmp
push
mov
sbb
xor
dec
adc
jno
and
jmp
xor
mov
les
outsb
out
xor
decb
push
xchg
jl
cs
jo
clc
cmpsb
add
adc
test
xor
mov
dec
das
or
js
sbbl
push
and
adc
ja
and
adc
mov
xchg
adc
push
pop
sbb
add
pusha
test
roll
push
outsl
dec
or
jmp
mov
imul
inc
inc
or
icebp
or
cmp
sbb
and
rclb
roll
add
loopne
mov
jg
mov
mov
jmp
add
lock
andb
add
and
sarl
jbe
add
inc
mov
roll
lcall
lea
add
jb
pusha
pusha
sbb
push
inc
cmp
sbb
cmp
add
mov
ja
xor
xor
xchg
in
mov
out
mov
inc
bound
pusha
sub
out
outsl
sub
inc
xor
fistpl
mov
push
xchg
sub
dec
insl
loopne
mov
jecxz
popf
sahf
sbb
clc
inc
inc
insl
in
loope
push
and
push
xchg
sbb
sub
pusha
push
addr16
or
es
movsl
loopne
nop
das
insb
fwait
dec
std
inc
xchg
jmp
jne
mov
push
inc
xchg
mov
pop
sub
dec
dec
cmc
ljmp
push
stos
push
push
add
xchg
mov
cs
sarb
push
or
push
loopne
sti
fistpl
add
jle
cmp
sbb
inc
mov
mov
sub
sahf
mov
jae
jmp
or
sarb
push
jo
adc
inc
or
adc
cmp
fwait
dec
shrl
into
push
cmpsb
inc
outsb
mov
lock
rcr
in
sub
xor
sbb
pop
and
xor
cli
loopne
lock
xchg
mov
mov
mov
and
add
jmp
sub
adc
mov
or
cmp
fstpt
popf
mov
sbb
and
rolb
dec
je
sbb
incl
ss
pusha
or
je
pop
adc
loope
cmpsb
inc
cmp
es
ret
mov
mov
mov
dec
call
push
popf
xchg
push
or
sub
lcall
shlb
jbe
push
rorb
cmp
test
aaa
add
push
xor
xor
or
jg
test
cmp
mov
inc
sub
and
xchg
popa
jae
lahf
adc
sub
mov
rorb
cwtl
cmp
push
ds
sub
jge
adc
jbe
xor
loope
or
dec
jo
jecxz
pop
add
xchg
xchg
pop
mov
push
loope
xor
jno
inc
adc
daa
push
outsb
rolb
mov
add
mov
incl
ret
jg
push
mov
add
mov
rorb
mov
xor
dec
mov
ss
cwtl
rcrb
push
push
xchg
mov
loopne
push
or
add
ret
or
pop
arpl
subb
or
loop
add
add
movsb
mov
sbb
inc
lock
lock
loop
in
je
add
push
popf
adc
push
mov
mov
fisubrs
mov
xor
cs
rcll
enter
dec
or
push
xor
inc
add
mov
lock
xorb
test
xor
bound
xchg
push
and
sub
push
add
xchg
adc
adc
mov
inc
pop
push
mov
adc
cld
push
add
jle
sub
push
push
sbb
sahf
sbb
add
pop
jnp
mov
add
pop
mov
andl
add
arpl
rcrb
push
adc
mov
mov
aam
imul
jbe
cmp
mov
or
nop
ret
xchg
mov
pusha
repnz
cli
loope
sarb
adc
mov
inc
jo
jb
and
add
lea
jb
adc
pop
add
icebp
call
and
jg
jo
movsb
pop
js
es
sbb
lret
add
rorb
es
add
add
sbb
push
jb
pop
cli
sbb
xor
mov
inc
loop
add
roll
dec
pop
inc
pop
jb
add
cmp
sbb
out
test
sbb
sbb
rcl
stos
lock
mov
xchg
mov
movsl
loopne
mov
fdivp
or
push
call
hlt
outsl
add
cmpsb
dec
outsb
mov
xor
push
push
add
add
push
loope
mov
jmp
push
nop
push
lock
aam
sbb
and
push
aas
adc
inc
ljmp
mov
scas
xchg
dec
add
push
sti
jmp
adc
adc
xchg
add
and
inc
popf
add
mov
push
icebp
cs
das
dec
ljmp
mov
test
mov
adc
sbbb
xor
add
xchg
les
jp
movsb
cli
push
ret
pop
fcoml
pop
inc
mov
adc
xor
lcall
lcall
or
repnz
and
push
jmp
push
adc
mov
push
aaa
into
mov
cli
jg
pusha
fs
cmp
shlb
add
data16
popa
push
adc
mov
in
jg
out
add
test
sbb
jo
cmp
test
outsl
arpl
loopne
mov
pop
mov
and
add
popf
mov
inc
daa
jl
cmp
xor
cmp
das
fcoms
lods
inc
les
add
xor
fstpl
ret
pusha
push
repnz
popa
sbb
into
movsl
add
shrb
jbe
es
push
mov
insb
pop
lods
and
xchg
xor
stos
add
add
xor
lahf
add
pop
add
xchg
pushf
add
adc
lea
jb
fildll
push
mov
add
add
xchg
and
mov
test
js
sub
jb
rclb
inc
add
inc
sub
call
add
call
jmp
pop
add
add
fldcw
pop
fcomip
cwtl
lcall
mov
push
add
or
or
jo
add
cmp
lods
js
push
orb
mov
push
push
decb
push
lcall
inc
mov
xchg
imul
fimull
fidivrs
adc
cmp
jbe
add
xchg
push
and
jecxz
push
push
inc
ret
mov
andb
mov
push
jne
fiaddl
fidivs
shrb
nop
or
ror
inc
pop
aaa
adc
and
mov
push
sub
xchg
jmp
xchg
movsl
adc
and
ret
and
and
sbb
mov
stos
jo
inc
adc
sub
rorl
roll
incl
push
imul
jb
pop
lds
adcl
or
sbb
outsl
inc
and
rorb
sbb
and
and
and
pop
inc
loope
mov
iret
and
add
adc
push
jmp
dec
sub
pop
inc
pop
inc
dec
fadds
aaa
mov
add
add
sbb
inc
mov
call
andb
bound
jae
jno
ret
sbb
inc
sub
push
bound
sbb
adc
addb
pop
xor
add
pop
popa
stos
jg
fisubl
jecxz
ret
mov
sub
add
or
or
in
dec
xor
cs
pop
mov
inc
ds
pop
push
cmp
adc
mov
mov
add
push
imul
push
xchg
clc
push
out
nop
jns
loope
insb
add
mov
lcall
repz
cmp
jns
loope
andb
push
movsb
push
hlt
mov
mov
inc
sbb
inc
cmp
nop
fs
je
decl
push
sbb
or
add
sub
cmp
inc
and
mov
and
or
add
push
add
sub
mov
inc
push
imul
rolb
test
jb
stos
push
jg
pop
cmp
pushf
loopne
sbb
xchg
out
inc
and
addb
mov
pop
or
pop
out
xor
aad
push
jg
pop
loope
pusha
out
pop
xchg
test
dec
outsb
lcall
jg
outsb
loop
imul
loope
and
jne
inc
ss
cld
sub
ret
aam
mov
add
xchg
pop
insb
mov
popa
push
mov
bound
mov
mov
aaa
xor
jge
push
inc
or
and
sar
fbld
mov
add
or
sub
fs
xchg
fcmovnbe
mov
mov
inc
xor
inc
push
rcrb
std
adc
and
mov
mov
jbe
cs
adc
je
sub
data16
sbb
dec
incl
mov
insl
imul
cld
or
mov
xor
ret
lock
or
cs
cwtl
mov
insb
ja
push
aad
mov
jbe
adc
mov
dec
and
add
lret
loopne
xchg
jg
xor
jne
mov
mov
je
stos
and
lret
mov
mov
cmp
inc
mov
dec
pop
and
sub
or
enter
add
and
dec
loope
sbb
cs
and
out
andb
addr16
push
mov
xchg
mov
aaa
jbe
clc
and
inc
sub
and
outsl
xor
js
add
pop
xchg
mov
xor
jecxz
jno
call
and
mov
and
inc
mov
outsl
and
jg
xor
add
mov
lock
repz
add
inc
scas
mov
push
pop
arpl
or
jae
movsb
add
ljmp
add
inc
das
xorl
ret
out
xchg
and
shrb
pop
hlt
mul
adc
and
dec
mov
inc
loop
into
mov
jbe
add
pop
sub
sbb
adc
mov
gs
or
stos
jbe
outsb
and
ficomps
nop
and
mov
inc
jl
mov
and
mov
cld
sub
and
sarb
add
push
sub
jl
mov
and
mov
xchg
call
imulb
inc
outsl
or
inc
fistl
adc
pusha
xor
cmp
loop
inc
inc
or
xor
addb
add
inc
add
fs
lock
mov
pop
call
pop
jno
and
sub
pop
ds
and
add
pop
adc
outsb
add
nop
sahf
dec
test
sub
cmp
sub
or
xlat
and
and
mov
cmpsb
sahf
lods
sub
xor
push
je
adc
xchg
and
out
test
push
ret
cs
jmp
jo
dec
jo
in
and
inc
cmp
add
or
loope
test
xor
loope
add
or
mov
loope
mov
inc
xor
sbb
sub
mov
test
push
mov
adc
in
add
jae
add
ret
ja
jbe
adc
movsl
pusha
pop
cltd
add
xor
dec
add
jne
jb
rcl
je
mov
loope
xchg
std
pop
adc
jo
xchg
jno
je
mov
fcomip
jg
setle
lock
mov
les
adc
in
enter
xchg
cltd
push
jo
adc
adc
pop
xor
adc
nop
add
adc
data16
sar
add
fs
in
xchg
jo
mov
push
jmp
arpl
push
imul
or
outsl
inc
xchg
jo
xchg
mov
arpl
cmp
jp
sub
xor
inc
xor
pop
xor
sub
rolb
mov
and
mov
mov
and
inc
rcll
popf
push
add
dec
mov
nop
out
popa
pop
mov
sub
add
add
adc
fs
mov
or
incb
xchg
mov
nop
push
fmull
mov
push
sbb
sbb
pusha
imul
jbe
sbb
inc
cmp
add
inc
sbb
ss
jge
jmp
rcll
loope
add
pusha
push
mov
pushl
gs
fcoml
mov
dec
nop
pop
xor
xor
and
xor
sbb
call
mov
pop
loope
repnz
xchg
add
and
mov
jg
jnp
movsb
enter
lcall
imul
inc
add
inc
ljmp
mov
cmp
adc
inc
mov
sar
aas
fisttps
or
fmuls
icebp
rorl
out
das
sbb
repnz
push
jmp
mov
dec
rorb
inc
push
adc
push
dec
xchg
test
mov
pop
enter
sbb
adc
push
and
iret
or
clc
testb
or
or
lret
or
pop
sbb
and
pusha
addb
mov
or
or
dec
data16
test
sbb
xchg
xchg
add
into
bound
stos
sub
jo
ss
aaa
es
out
js
pop
xchg
mov
add
sbb
and
test
dec
add
out
mov
cmpb
push
std
mov
mov
or
mov
or
fmuls
cmpsb
stos
add
push
pop
insb
fs
inc
push
push
add
mov
adc
cld
pop
movsl
and
pusha
xorl
rorl
mov
pop
cmp
push
out
popa
add
and
ljmp
pusha
xchg
xor
sbbb
daa
push
call
lahf
pop
and
dec
xchg
mov
insb
fidivs
jg
mov
dec
jns,pn
mov
mov
jo
popa
pop
stos
mov
dec
mov
mov
jg
adc
add
loope
sbb
dec
mov
and
decb
mov
jmp
jmp
add
dec
mov
mov
lahf
cmpsb
xchg
loopne
or
cs
loop
pop
add
iret
push
or
jo
or
pop
rorb
mov
decl
lea
jmp
push
push
or
pop
sbb
xchg
rorb
nop
mov
jmp
arpl
cwtl
xorl
xor
inc
pop
dec
add
sbb
imul
addr16
inc
imul
sarb
in
ja
fcomp
jmp
aaa
inc
scas
add
movsb
xchg
movsb
mov
shlb
icebp
out
adc
push
imul
and
lods
adc
mov
movsb
lret
arpl
or
pop
mov
outsb
add
pop
gs
push
and
aaa
cmp
insl
xor
and
push
and
and
cld
xor
inc
add
mov
addb
out
mov
addb
sub
inc
add
addl
fmuls
fdivl
lods
and
mov
rcl
dec
and
loopne
jbe
cmpsb
jp
or
and
inc
or
bound
les
adc
sbb
das
xchg
stos
leave
cmc
aaa
adc
jl
out
ret
sub
scas
or
shlb
jo
mov
cmp
lds
cli
mov
loopne
insl
or
ljmp
xchg
mov
mov
loop
jnp
add
hlt
loop
inc
out
sub
mov
rcl
push
inc
mov
stos
pusha
mov
callw
adc
les
add
pop
mov
add
adc
mov
aaa
inc
push
mov
pop
jge
pop
and
jb
loope
mov
fadds
or
add
xor
dec
in
fiaddl
pop
outsl
sub
popf
test
sarb
ficomps
add
add
jae
cmp
adc
inc
add
mov
jbe
fadds
outsb
bound
arpl
cli
mov
inc
psadbw
dec
insb
mov
sub
stos
push
jo
data16
push
xchg
loope
sbb
xchg
adc
xchg
mov
mov
popa
sbb
add
and
or
dec
daa
mov
sbb
dec
pushl
fneni(8087
add
mov
data16
loopne
out
and
add
sbb
push
scas
mov
sbb
push
std
sub
cmpb
mov
adc
adc
adcb
jo
or
push
or
or
loope
jmp
and
ss
aas
mov
mov
push
test
popf
cmp
push
fstpl
mov
aas
add
push
or
pop
adcl
mov
je
and
xor
es
outsb
xor
mov
stos
stos
push
pop
movsl
data16
push
dec
mov
sbb
popa
cltd
lods
xchg
mov
shlb
mov
lds
sbb
sahf
add
out
cvttps2pi
mov
jge
mov
je
or
xchg
inc
shr
cmc
arpl
mov
or
imul
jecxz
pusha
das
icebp
or
movsb
int
pop
add
or
test
repnz
loop
pop
adc
outsb
ret
jmpw
or
mov
ja
out
cwtl
aas
or
cltd
arpl
push
mov
out
add
inc
cmp
inc
rolb
mov
xchg
mov
arpl
push
aam
adc
adc
or
lcall
cld
add
call
mov
add
dec
add
dec
or
adc
or
xchg
mov
stos
or
ret
cmpsl
rcrb
mov
mov
push
cmp
push
add
xchg
and
and
inc
mov
inc
scas
jp
movsb
sbb
xchg
push
add
scas
loope
popa
popf
test
inc
loopne
inc
test
cmp
mov
mov
aam
adc
pop
aam
aaa
pop
das
nop
loopne
add
pushf
and
jecxz
les
mov
xor
adc
dec
mov
js
add
xor
or
loope
adc
mov
push
jb
add
rol
shrb
pop
push
xchg
cmp
inc
or
sub
pop
pusha
out
xchg
dec
adc
add
jle
xchg
adc
aad
or
mov
cmp
and
inc
push
add
cmp
adc
popa
push
dec
inc
dec
cld
jle
xchg
cs
sbb
mov
mov
sbb
pop
push
ds
lahf
sub
inc
push
int3
inc
push
cld
inc
sub
mov
lret
push
add
fs
and
pushl
and
clc
inc
ret
fidivs
mov
pushf
in
add
inc
fistl
cltd
fcomps
cs
adc
mov
or
stos
loop
loop
add
loop
orb
lds
das
hlt
lahf
popf
shlb
xchg
mov
mul
jg
and
or
cwtl
xchg
ret
test
aaa
adc
add
pop
in
push
sub
arpl
scas
jge
shlb
mov
add
add
lock
xchg
mov
xor
add
inc
push
mov
dec
lcall
add
mov
scas
clc
lcall
push
cmpsb
mov
dec
loopne
cmp
mov
pop
bound
fists
pop
push
jbe
xchg
sbb
xor
popa
adc
xor
pop
addb
repnz
mov
decl
rorb
nop
out
and
test
inc
mov
push
fadd
xchg
test
outsl
ljmp
and
insl
loopne
push
fs
in
inc
inc
sbb
xor
cmp
enter
sbb
sub
add
or
out
incl
fistl
or
loope
sbb
orb
add
insl
xor
or
addb
call
fst
sub
in
insb
out
jbe
mov
and
sub
sub
pop
xor
rorb
and
fcomip
aas
mov
add
cmp
and
xor
rorb
cmpb
push
and
inc
add
mov
sub
orb
test
test
xchg
and
add
inc
inc
push
and
mov
add
dec
pop
jae
inc
pop
mov
and
rcrb
pushw
inc
add
xchg
pop
mov
push
xor
fwait
jbe
insb
pop
adc
mov
and
xchg
loopne
insl
mull
int3
mov
inc
nop
or
jg
jo
jb
shlb
sub
loopne
cwtl
ss
push
rol
xorb
mov
je
mov
ret
mov
fwait
sarb
mov
popa
sub
xor
mov
mov
imul
adcb
hlt
out
or
push
call
or
sub
lods
or
insb
xchg
inc
or
cli
mov
repnz
xor
sub
adc
aas
add
jp
dec
test
and
or
push
shlb
test
pop
mov
xor
repnz
dec
jecxz
add
popa
and
in
call
add
inc
xchg
add
roll
rolb
push
cmp
adcl
lods
add
push
xor
inc
inc
cs
or
and
mov
adc
jmp
sbb
jp
add
lods
rorb
mov
insl
aad
movsb
jp
ret
and
loope
mov
dec
and
and
insl
cld
push
sub
or
jp
es
lret
and
loopne
mov
add
mov
movsb
loopne
dec
push
add
and
jae
inc
cmp
mov
cld
push
inc
out
test
cmpsb
clc
into
xchg
loopne
pop
add
into
ret
adc
fiaddl
mov
out
mov
sahf
mov
cld
es
stos
clc
cltd
or
pop
popf
inc
jmp
cmp
in
sbb
movsb
lcall
bound
rcll
mov
jo
or
sub
mov
mov
aad
nop
in
lret
add
outsl
xchg
test
mov
xchg
and
fisubs
aaa
fs
pop
add
mov
inc
mov
lods
inc
aad
jle
jp
push
stos
jmp
mov
aas
test
jo
outsb
adc
mov
inc
mov
add
gs
xchg
xchg
jo
add
sbb
mov
mov
mov
lods
out
lods
mov
add
das
adc
add
loopne
push
ljmp
sbb
push
sub
push
leave
add
xor
mov
xor
dec
rcrl
fiaddl
push
sub
cmp
adc
fisubrs
cli
jb
pop
xor
lods
and
or
add
jae
push
sub
xchg
ja
push
mov
ja
enter
inc
mov
jp
inc
rorl
lret
mov
push
pushf
mov
clc
lods
push
mov
addl
inc
push
rorb
outsl
pop
loop
push
jmp
inc
jl
cltd
clc
out
andb
pop
cwtl
sub
mov
inc
sbb
mov
pop
jg
adc
dec
fsub
push
or
and
pop
or
xchg
xchg
mov
or
jg
outsl
sbb
and
outsb
jo
cs
inc
sub
mov
dec
jmp
mov
es
orb
jmp
xor
xchg
sbb
aam
and
imul
inc
out
adc
pop
sub
test
pop
orb
dec
and
or
lea
sbb
or
in
pop
cmc
or
mov
add
je
daa
mov
xor
push
test
movsb
clc
jmp
mov
or
add
xchg
push
mov
add
lock
push
das
push
jg
aaa
adc
dec
mov
dec
adc
rorb
xchg
mov
and
inc
lods
push
dec
sbb
or
adc
mov
pop
aam
xchg
mov
or
xchg
in
fldt
gs
roll
arpl
icebp
push
lcall
ret
pusha
add
in
or
decl
sbb
pop
jmp
sar
push
mov
mov
or
lret
push
jnp
divb
sbb
roll
jmp
in
or
add
orb
movsl
loopne
jmp
fmul
ret
outsl
stos
lcall
push
sahf
push
push
pop
jbe
xchg
jb
popf
and
jne
push
enterw
or
mov
pop
adcb
add
adc
pop
mov
lds
pusha
add
scas
or
and
mov
orb
cmpsb
sarb
shlb
stos
xor
into
adc
jmp
xchg
aad
shlb
dec
mov
insl
jecxz
adc
out
pop
stos
int3
mov
inc
or
jmp
jle
push
pusha
fidivl
mov
and
mov
clc
mov
add
lock
cmp
push
in
and
inc
sti
jbe
pop
pop
add
add
pop
mov
mov
addr16
aaa
out
sub
adc
push
inc
inc
pop
sar
jmp
push
push
pop
jno
push
mov
ret
dec
pop
je
pop
push
mov
dec
and
pop
cltd
pop
xor
add
cmpb
sarb
mov
mov
rclb
inc
pop
mov
push
sub
add
or
push
bound
lds
leave
pusha
enter
dec
or
pusha
or
es
pop
test
jo
mov
jecxz
or
and
incl
mov
add
lods
add
movsb
je
or
out
mov
xor
or
sub
ds
stos
push
cld
mov
cwtl
xor
push
adc
sub
mov
jbe
loope
pop
xchg
loope
cltd
ja
push
and
mov
popa
fisttps
xchg
mov
and
adc
fistpl
dec
scas
xchg
add
dec
adc
inc
lock
push
push
inc
inc
adc
arpl
pop
pop
jmp
loopne
add
xor
and
sbbl
cwtl
je
pop
adc
lea
adc
mov
mov
inc
fimuls
les
dec
rol
add
add
roll
dec
mov
and
inc
add
push
movsl
mov
and
mov
push
add
dec
mov
push
adc
mov
cwtl
mov
loop
rclb
and
fs
mov
movb
mov
cmp
or
test
adcl
adc
popa
dec
loop
push
sub
xchg
rol
mov
sbb
das
mov
add
xchg
shlb
data16
scas
xchg
shrl
mov
xchg
decl
insl
push
jo
cmp
add
and
add
cmc
mov
in
pop
mov
jb
pusha
es
jo
popf
sar
das
fcmovu
fsubr
aaa
or
cmp
loopne
aas
ljmp
xor
jb
xchg
add
adc
rolb
addr16
inc
fistpl
mov
add
mov
mov
sub
data16
jb
lret
clc
adc
dec
jo
jb
in
sar
push
dec
or
and
inc
pop
push
or
outsl
and
push
ja
mov
adc
jmp
add
enter
test
xor
mov
adc
rcll
jle
add
push
mov
xchg
push
insb
shlb
js
cmp
push
mov
outsb
or
xor
push
xor
add
sub
mov
movsl
mov
pop
push
and
jo
or
in
cli
push
nop
add
dec
imul
xor
xor
sbb
sbb
push
mov
pop
jmp
xorb
mov
ret
sub
or
les
jl
lea
jo
mov
xchg
pop
sub
sbb
inc
dec
add
inc
lcall
sahf
and
inc
dec
xchg
out
cmpsb
sbb
insb
lds
inc
gs
lret
mov
push
or
add
movb
push
data16
aad
mov
movl
insl
fiadds
and
mov
and
adc
sti
ds
lret
lock
or
dec
push
hlt
mov
pop
ret
mov
or
add
loop
inc
outsb
cwtl
into
lods
fsubrs
push
sbb
add
push
sub
jle
mov
push
bound
jbe
aaa
adc
js
jecxz
push
add
lds
push
lock
add
cwtl
or
clc
decl
pop
mov
dec
loop
cmc
jbe
enter
sbb
sbb
push
push
test
adc
in
and
add
fwait
and
repz
inc
ret
cmp
pushf
or
cmp
subb
and
es
and
push
dec
adc
adc
mov
sbbl
mov
mov
add
pop
ja
imul
xor
test
push
pop
cmp
or
cmpsl
pop
lcall
xor
mov
push
mov
mov
mov
pop
ret
or
outsb
add
es
xchg
adc
enter
xor
hlt
xchg
adc
mov
fdivr
ljmp
movsb
ja
sbbb
dec
xchg
adc
lret
add
nop
push
push
push
xor
add
inc
in
push
and
add
fsubrl
sub
mov
and
sbb
cmp
cmp
pop
testl
or
push
adc
mov
dec
inc
jae
add
jg
push
sbb
push
loop
push
cwtl
test
lock
inc
add
xchg
xchg
test
or
and
rclb
pushl
rcrb
xor
cmp
mov
or
les
push
or
or
rclb
add
cmp
inc
or
add
test
xchg
or
sbb
jge
or
rcrl
pop
fldcw
mov
data16
mov
xchg
pop
icebp
nop
or
xchg
ljmp
and
jbe
push
sub
jb
xchg
mov
add
sarb
mov
sbb
pusha
jmp
loopne
push
or
movsb
pop
and
adc
arpl
data16
xor
andb
jg
lock
jecxz
addb
inc
or
pop
push
out
add
sar
outsb
testl
jbe
icebp
scas
jle
add
pop
inc
pop
fistl
cwtl
mov
clc
call
jmp
loope
mov
fwait
and
mov
mov
ret
roll
mov
stos
adc
in
cmp
pop
sub
outsb
adc
mov
add
das
loope
hlt
mov
push
inc
or
pop
popf
call
bound
sub
mov
popa
add
jo
mov
sbb
mov
test
mov
add
add
dec
push
inc
or
add
mov
stos
mov
mov
push
mov
pop
inc
push
push
or
imul
fbld
jecxz
in
fdiv
loopne
pusha
test
movsl
cmpsb
inc
add
fcmovnbe
mov
pop
xor
arpl
fcoml
push
add
jle
decl
mov
dec
cmp
pop
orb
mov
loope
inc
add
mov
add
orb
sbb
mov
adcl
subb
push
cmp
mov
ljmp
dec
push
or
outsb
adc
mov
ret
dec
sbb
push
lock
or
mov
add
lret
mov
out
adc
xchg
xchg
push
push
es
insb
loopne
add
roll
add
xor
xchg
test
xchg
insl
in
subb
mov
outsb
xor
sahf
add
out
clc
loopne
add
or
pop
lock
mov
cmp
and
clc
bound
fisubl
or
or
movsl
jo
or
cmp
jg
sbb
loopne
mov
out
inc
pop
fs
push
xchg
inc
or
sub
aaa
dec
stos
cmp
sub
or
mov
jg
shrl
add
push
roll
mov
lods
out
mov
jb
out
mov
rolb
call
mov
mov
mov
insl
inc
fdivl
add
cld
gs
inc
in
inc
push
insl
and
push
add
sub
out
insl
adc
popa
test
push
mov
cmc
stos
ficoml
add
gs
xchg
movsb
mov
jb
cmp
jnp
pushl
sbb
mov
push
adc
pushf
and
pop
imul
pop
xchg
add
dec
or
dec
outsb
push
add
dec
dec
lret
add
mov
adc
ds
sbb
in
sbb
movsb
lods
dec
inc
ss
scas
mov
jb
push
jmp
xor
mov
pop
dec
pusha
push
call
data16
dec
mov
call
or
inc
mov
insl
fcoml
call
add
data16
mov
sub
mov
jnp
and
mov
aam
adc
mov
mov
enter
loop
pop
pop
aam
das
jbe
jg
push
cs
or
push
arpl
inc
inc
cmc
ror
sbbl
imul
or
mov
shlb
cmp
je
pop
xor
pop
cmp
xor
inc
or
xor
rclb
sub
nop
or
add
push
shr
cmpsb
xor
or
sbb
jb
and
fldcw
sub
pop
mov
dec
push
push
lods
orb
xchg
loop
imul
xor
add
push
or
push
push
arpl
and
nop
add
jno
mov
test
add
inc
popa
fildl
ficomps
ret
out
and
imulb
jbe
dec
xor
loope
cmp
add
andb
adc
fdivr
aaa
jne
push
push
or
jle
push
cmp
adc
and
xor
mov
insb
mov
sbb
mov
mov
dec
or
adc
xor
in
call
pusha
xchg
out
ret
mov
sbb
mov
cs
lret
dec
arpl
xchg
push
rorl
hlt
or
inc
into
adc
jg
add
pop
xor
loopne
cli
adc
mov
stos
xor
loopne
jb
inc
or
nop
pop
sub
mov
outsl
add
mov
jo
shlb
adc
rorb
outsb
fcomip
lea
xchg
roll
mov
rclb
dec
aas
mov
or
inc
push
mov
jge
pop
sti
mov
ss
jbe
inc
jb
imul
pop
push
adc
jl
xchg
add
test
adc
xchg
or
test
add
aam
dec
mov
in
nop
cmp
push
and
in
inc
loop
jge
xchg
sbb
add
push
ret
xor
iret
jle
pop
icebp
mov
inc
xchg
sub
xchg
out
push
xchg
stos
add
jge
push
push
aam
lods
push
push
sbb
imul
movsl
rorb
and
and
dec
sahf
cld
add
adc
andl
cmp
add
mov
add
rolb
outsb
adc
mov
sub
push
fiaddl
push
push
or
test
dec
push
xorb
xchg
sbb
imul
and
mov
xchg
mov
add
test
cmp
sbb
sub
push
and
push
pop
add
inc
add
dec
add
les
adc
addr16
hlt
decl
xchg
rolb
adc
mov
stos
pop
cmp
movsb
data16
mov
rcrb
ljmp
shlb
stos
and
js
cmp
cmp
dec
and
add
xor
nop
pushf
repnz
adc
in
xor
xchg
loopne
ss
cld
ja
mov
xchg
add
mov
pusha
dec
shlb
mov
dec
mov
and
or
pop
adc
out
xor
loop
and
adc
sbb
call
or
loop
sub
popa
fadd
cld
mov
mov
in
pusha
or
loop
andb
cmc
outsl
mov
add
push
arpl
ss
push
ret
xor
xacquire
aam
push
pushf
lock
ret
sub
loopne
pusha
adc
jno
jmp
or
les
fiaddl
sub
lock
sbb
mov
in
mov
data16
insb
sbb
dec
mov
sub
inc
xor
aad
or
das
jbe
inc
or
push
negb
adc
adc
pop
adc
mov
jno
and
push
daa
arpl
jg
and
push
das
adc
add
and
push
into
and
sahf
adc
jo
jo
jb
aas
fsubrp
movsb
pop
imul
popa
adc
pop
jmp
roll
incl
inc
add
xchg
add
loopne
loope
dec
or
test
jge
xchg
sbb
fsubl
test
push
adc
outsl
sbb
xchg
and
xchg
and
dec
xchg
adc
push
aad
je
xor
inc
or
pop
sub
inc
and
rcrb
pop
mov
mov
rolb
out
outsb
add
jo
popa
inc
xor
and
add
popa
push
cli
fstl
dec
test
jle
mov
xor
mov
or
and
inc
mov
mov
into
pop
addb
push
sub
pop
loopne
clc
pop
movsl
sub
xor
cmovno
pop
mov
cmp
psubsw
dec
ljmp
mov
aad
dec
sbb
cs
fimull
aas
sahf
loop
rolb
loop
aam
jb
xor
jp
loopne
jle
pop
popf
mov
sbb
pop
into
bound
or
stos
jg
mov
roll
xor
mov
inc
in
cmp
sar
adc
xor
and
sbb
add
push
je
mov
dec
xchg
or
ret
adc
cld
jne
in
push
pop
cmp
xor
rcl
aam
add
out
xchg
outsb
adc
xor
jb
rolb
mov
mov
rclb
jne
sbb
scas
and
cs
mov
popa
add
xchg
popa
xchg
dec
pop
jg
test
popa
xchg
jmp
outsb
popa
xchg
arpl
adc
incb
mov
fdivs
and
loope
add
push
mov
outsl
pop
or
nop
add
pop
mov
mov
xor
add
push
mov
mov
sbb
mov
xlat
inc
pusha
jle
inc
sub
mov
inc
xor
or
pop
mov
fcoms
inc
test
test
fs
and
mov
mov
sub
mov
inc
mov
loop
stos
xchg
gs
out
and
jb
push
lock
inc
inc
rorl
push
sub
xchg
xchg
xor
ss
mov
movsb
pop
out
adc
call
add
roll
xchg
mov
jmp
mov
in
and
or
test
push
or
cld
mov
je
or
das
outsb
and
inc
arpl
xchg
rol
repnz
lods
jecxz
xchg
adc
mov
repnz
pop
icebp
aaa
push
rcl
stos
or
add
push
pop
inc
popa
mov
adc
add
dec
arpl
jmp
mov
inc
mov
lret
insb
popa
xor
ss
out
cmpsl
or
add
push
adc
mov
sub
js
mov
xchg
dec
mov
rclb
adc
and
xor
insl
jl
stos
add
mov
daa
mov
shl
mov
jne
ja
or
add
adc
lods
test
or
lock
stos
or
mov
push
jg
out
shlb
xchg
pushf
aad
or
dec
cmp
je
fnsave
hlt
and
popa
pop
mov
lock
mov
roll
movsb
rcll
mov
push
out
add
loope
clc
add
xchg
or
sbb
sub
arpl
pop
adc
inc
dec
cli
mov
inc
jb
dec
add
jbe
add
sbbb
test
mov
add
and
lods
loopne
sub
rclb
cli
cs
push
pop
push
push
popa
dec
jmp
or
dec
sub
loopne
mov
mov
add
and
add
mov
add
pop
xchg
mov
ret
lret
sub
outsb
orb
lock
ss
mov
sub
dec
sub
add
rol
call
pop
sbb
adc
sub
pop
cmp
sub
push
mov
and
stc
jmp
cmp
cmp
adc
jp
fldt
sub
cmp
outsb
pop
pop
addb
push
pop
jmp
incl
xchg
shrl
push
repnz
adc
loope
xchg
pop
sbb
or
cld
xor
and
add
clc
sbb
and
sub
inc
arpl
test
loope
sbb
add
xchg
stos
xchg
fs
pop
sub
lcall
push
rcr
adc
mov
xor
push
mov
cli
inc
lret
jb
dec
cltd
xor
add
fdivrs
xchg
mov
das
hlt
scas
rclb
call
pop
nop
inc
xor
and
push
mov
aad
dec
mov
pop
das
adc
add
insb
mov
andb
mov
mov
cmpb
xor
pushf
add
nop
dec
and
inc
adcb
dec
add
jl
inc
add
stos
or
add
cmp
andb
lcall
add
adc
fadds
adc
and
push
cwtl
mov
xchg
pushf
shlb
jbe
popa
loope
sbbb
add
add
add
and
add
xor
and
dec
rolb
in
sbbl
hlt
sbb
push
add
lods
arpl
mov
fwait
rolb
sub
inc
or
mov
jmp
mov
sbb
push
test
or
jl
cmp
pop
cmpsb
mov
pop
jle
andb
mov
mov
push
lods
and
out
out
add
mov
sub
es
pop
fldcw
or
cli
dec
push
cmp
jb
mov
aam
sarl
dec
sbb
sarb
add
rorb
iret
cwtl
daa
xchg
gs
mov
enter
and
inc
inc
stos
ret
mov
jno
xor
add
add
mov
in
and
jg
mov
inc
sbb
aaa
or
popa
das
mov
nop
mov
mov
cld
aas
rolb
rclb
add
add
and
and
add
jo
add
filds
mov
push
stos
inc
loopne
and
roll
sbbl
jl
rclb
cltd
adc
into
imul
adcb
stos
and
ljmp
mov
adc
mov
sub
lret
mov
aaa
or
mov
add
aam
cmpsb
stos
cmp
ficoms
mov
test
push
addr16
add
add
jo
clc
ja
jns
loopne
add
sub
sub
push
inc
cmpb
pop
mov
shrl
fisttpll
sbb
add
cmp
jp
outsl
call
mov
mov
sub
dec
data16
orb
cmp
sub
mov
mov
cmp
or
pop
xor
clc
mov
push
inc
sub
inc
orl
jnp
lods
mulb
add
push
fmuls
jmp
add
test
scas
adc
test
or
lods
jg
jbe
mov
cmp
outsl
imul
pop
loope
dec
sub
push
dec
mov
mov
cmpl
mov
pop
mov
cmp
mov
adc
clc
sub
push
pop
imul
out
jae
movsb
loop
and
popa
and
mov
pop
test
mov
push
jmp
mov
dec
out
add
iret
sub
sub
mov
mov
xor
ss
popa
or
pop
jno
add
loopne
mov
mov
mov
adc
inc
and
and
mov
aad
clc
dec
mov
inc
cmp
cmc
mov
outsb
xchg
push
push
mov
mov
push
mov
lcall
push
pop
stos
mov
icebp
ljmp
je
push
ret
pushf
mov
aas
mov
xorb
rclb
lea
inc
scas
and
scas
inc
shlb
push
ljmp
push
rcrb
insl
and
rorb
add
call
push
call
fwait
pop
pop
xchg
adcl
mov
mov
inc
pushf
pop
fs
and
push
loop
idivb
jle
shll
inc
int3
lret
into
int3
ja
push
sub
dec
xchg
ret
and
subb
movsl
daa
add
push
add
mov
cmp
push
in
and
movsb
popf
add
je
add
sahf
cld
in
cli
fisttps
popa
inc
and
popf
push
push
rolb
or
add
stos
adc
cs
popa
test
pop
inc
and
mov
lret
mov
inc
pusha
sbb
push
or
mov
dec
push
pusha
pusha
mov
add
sub
add
inc
or
and
push
shlb
pop
mov
js
adc
shlb
aam
stos
push
movsb
push
and
push
inc
call
fistps
pushf
repnz
xchg
into
gs
jmp
and
add
or
ja
rcrb
ja
sub
mov
std
ja
dec
jp
push
adc
pop
subb
cmp
push
pop
dec
adc
imul
add
inc
popf
adc
outsb
nop
addr16
sti
ljmp
mov
push
outsb
cmpsb
ret
inc
mov
add
push
cs
in
push
cld
in
mov
movsb
xor
sub
mov
adcl
sbb
add
add
pushl
dec
jmp
mov
jge
jecxz
outsl
xor
mov
jg
outsb
icebp
push
xchg
push
repnz
mov
jno
scas
jno
inc
adc
cmp
adc
outsb
mov
pop
mov
stos
ret
or
jno,pn
xchg
rclb
fistpll
sbb
jo
add
add
adc
mov
adc
xor
out
add
lret
test
fbld
sahf
js
adc
mov
inc
mov
dec
push
jbe
and
outsb
pop
cmp
and
and
mov
clc
or
shll
or
jmp
aas
shrl
and
xor
test
fs
push
xchg
and
dec
and
hlt
or
mov
push
sub
inc
add
pop
ficoms
sbb
pop
xchg
hlt
stos
add
mov
daa
mov
push
jl
adc
dec
mov
xlat
add
sub
jne
cld
clc
cmpb
sbb
inc
adc
inc
add
sbb
bound
adc
js
adc
lds
xchg
call
jmp
pushf
adc
inc
pop
sbb
or
add
or
adcb
cs
dec
or
ret
jno
and
add
sbb
add
xor
or
loopne
sub
mov
add
ror
xchg
or
push
test
popfw
push
add
mov
push
add
mov
mov
fisubs
es
adc
scas
rclb
lcall
and
movsl
xor
mov
mov
orb
cmp
adcl
add
insl
cld
inc
sbb
pop
push
xor
das
clc
sbbb
pop
push
jb
push
push
inc
or
or
xchg
jecxz
inc
push
popa
mov
shlb
pop
add
pop
mov
mov
shl
mov
adcb
stos
gs
jo
xchg
sahf
loop
add
push
jl
adc
dec
outsb
adc
mov
add
scas
nop
imul
scas
sub
sbb
add
cmp
jns
jbe
sub
and
sbb
addl
push
push
andl
incl
out
stos
and
add
push
add
cltd
mov
adc
pusha
inc
in
mov
inc
pop
movsb
pusha
adc
add
push
pop
rclb
add
dec
xchg
orb
fstpt
add
jns
add
add
lock
adcb
dec
aaa
add
fcompl
mov
add
ds
pop
shrb
arpl
jmp
push
mov
cmp
movsl
mov
pop
sbb
dec
push
ja
mov
cmp
int
cmp
inc
adc
xchg
adc
aam
and
hlt
out
and
and
inc
sub
lods
jo
jmp
jg
into
shll
xor
pop
ret
adc
adc
pop
xlat
mov
lcall
or
and
out
pop
fidivrl
outsb
adc
jmp
out
insb
mulb
loope
es
call
add
inc
add
adc
dec
mov
mov
jmp
clc
adc
mov
inc
inc
inc
fisttps
movsb
cmp
std
mov
push
imul
mov
and
mov
cmp
xor
nop
add
mov
push
sbb
push
and
sahf
add
subl
pusha
ds
add
xor
fcompl
push
add
lea
lcall
lcall
loopne
push
pusha
pop
push
in
jmp
xchg
add
or
adc
rclb
test
jp
sbb
cli
arpl
adc
loopne
add
pop
add
in
xor
jmp
add
loop
pop
inc
pop
push
pop
inc
push
aad
stos
rclb
xchg
mov
inc
add
pop
lock
inc
rolb
sahf
xor
push
aaa
sahf
movsb
negb
pop
stc
loopne
adc
enter
and
addb
out
mov
outsl
sarb
dec
mov
jbe
les
mov
sub
out
mov
sub
inc
aaa
inc
jo
repnz
sub
das
mov
and
jmp
or
add
jae
dec
xchg
push
mov
xor
lods
inc
sbbb
ret
ret
sub
fcoms
pusha
jo
insl
pop
dec
rorb
and
push
mov
pusha
push
mov
insl
mov
fisttpl
push
and
ljmp
mov
nop
shrb
add
mov
pop
xchg
push
out
push
jl
mov
ret
lock
sbb
sbb
out
aam
add
int3
xchg
movsl
icebp
add
xchg
nop
and
and
adc
out
cmp
mov
lods
fdivrs
push
cli
jnp
pop
xchg
adc
mov
sbb
jae
dec
and
pop
aaa
xchg
adc
addl
or
pop
lock
cwtl
xor
jle
jmp
push
insl
adc
fs
rolb
push
push
pop
or
test
lcall
rcrb
pusha
inc
ss
scas
cmpsb
push
lock
shrb
mov
or
rclb
xor
test
add
mov
sti
je
loope
popa
mov
mov
mov
fwait
es
cmpsb
mov
cmp
ss
aaa
inc
mov
lods
out
pop
inc
mov
adc
popaw
push
push
adc
icebp
iret
fiadds
push
sbb
test
sbb
xchg
adc
mov
push
add
popa
stos
push
mov
add
jle
pop
or
mov
mov
push
inc
xchg
cmp
sub
lods
outsb
ds
adcb
inc
jb
icebp
rclb
or
inc
jmp
adcl
sarl
in
push
or
pop
xchg
in
push
mov
daa
mov
call
mov
and
add
les
mov
jnp
popa
stos
add
aad
test
pop
jmp
lock
sbb
inc
gs
pop
dec
mov
fwait
add
pop
adc
ret
jbe
test
popa
xor
fadds
xor
push
jle
in
cmpsb
nop
sub
es
sbb
dec
nop
test
mov
and
sub
mov
popf
add
add
adc
cld
adc
stos
fimuls
lds
inc
sub
repnz
ss
sbb
orl
flds
fcompl
hlt
shlb
xchg
and
sub
cwtl
stos
xchg
lods
jecxz
addb
orl
jne
inc
add
sbb
test
or
and
sbbb
cltd
pop
pusha
pop
xor
and
mov
mov
scas
mov
mov
ss
out
xor
mov
lahf
add
popa
js
add
lods
inc
loopne
and
xor
jecxz
add
subl
lcall
xor
lds
fistl
jb
movsb
sahf
sbb
pushf
add
mov
add
hlt
adcb
xchg
into
dec
mov
xor
inc
sahf
cwtl
loope
repnz
insl
pop
add
adc
jo,pn
sbb
xchg
xor
jo
or
push
int3
xchg
lds
xor
stos
inc
out
jg
jno
dec
and
in
sbb
dec
fs
out
mov
xchg
popf
ja
adc
jg
xor
cmp
test
push
pop
mov
outsl
mov
mov
push
add
rolb
rclb
or
adc
stos
fsubl
push
decl
add
jg
sub
add
inc
pop
xor
add
fwait
pop
or
add
add
ja
cld
dec
cs
cltd
outsb
adc
add
and
ds
push
xor
jmp
pop
into
and
pop
sarb
inc
mov
cmpb
mov
mov
push
push
lcall
lock
orb
add
sbb
adc
fwait
add
push
outsb
rcrl
mov
test
adc
and
inc
sbb
adc
push
in
cmp
jbe
jle
sahf
pop
mov
add
fimull
dec
add
sbb
or
loope
jp
pop
subb
xchg
cmp
mov
rorb
inc
test
mov
fs
pop
xchg
test
repnz
xchg
dec
dec
hlt
add
mov
add
jno
adc
rclb
cwtl
sbb
inc
xor
add
or
adc
rorb
aad
cmp
mov
stos
adc
cmpsb
pushf
popa
push
push
mov
inc
je
xor
push
sbb
pop
inc
cld
push
rorb
or
or
lea
arpl
fdivrl
mov
push
fmull
mov
bound
add
orb
sub
pop
cs
xchg
lea
add
mov
mov
or
push
pop
sahf
or
mov
popa
and
or
jp
sub
fwait
dec
add
adc
cmp
ret
loope
inc
or
fdivrl
add
call
adc
lcall
xor
dec
jg
jle
inc
stos
pusha
push
cmpsb
pusha
outsb
je
les
mov
adc
addr16
sbb
pop
call
test
mov
test
push
and
sub
mov
inc
and
addb
das
push
dec
ds
movsb
or
xchg
mov
jb
std
pushf
clc
inc
stos
push
mov
push
fucomip
orb
push
and
loopne
or
ret
ja
loopne
pop
push
xor
jb
or
or
outsl
push
xor
data16
fildll
mov
push
sahf
stos
rolb
and
mov
adc
lock
or
add
pushf
mov
mov
aaa
add
pop
loop
lods
add
pop
push
dec
or
and
sub
outsl
les
or
add
or
adc
dec
push
add
outsl
int3
inc
mov
dec
or
popa
inc
adc
lods
std
out
adc
mov
xor
or
cld
xlat
push
cmp
inc
pop
adcb
test
enter
ja
data16
jl
aam
outsl
inc
movsb
push
roll
xchg
cltd
clc
test
mov
inc
add
mov
loopne
xor
or
and
mov
push
lahf
dec
push
lods
movsb
ljmp
aaa
adcb
xor
inc
push
pushl
stos
inc
jmp
push
adc
inc
mov
xchg
lods
xor
mov
xor
add
adc
es
jae
test
jmp
addr16
and
sub
test
sbb
push
dec
hlt
or
clc
ja
mov
imul
lret
das
mov
adcl
sub
or
aam
scas
mov
test
int
pop
xchg
push
negl
add
mov
loopne
divb
jno
add
ljmp
adc
mov
and
int3
adc
xor
adc
add
mov
data16
das
js
fiaddl
and
dec
and
hlt
add
push
and
js
js
popfw
push
push
and
push
stos
cmpsb
cmc
push
inc
mov
xchg
lods
xor
movsb
xor
adc
or
adcb
inc
cmp
pop
add
loope
pop
test
movsb
daa
sahf
and
sub
sub
bound
lcall
mov
pop
test
mov
adc
popa
jge
icebp
pop
popa
push
dec
push
aam
add
lret
lcall
mov
xchg
rorb
shrb
roll
stos
call
jae
je
or
sub
in
mov
enter
rolb
and
mov
or
xor
aas
sbb
pop
test
ficomps
sub
gs
subl
or
xlat
xor
outsb
test
sub
sbb
loopne
rolb
inc
push
call
xor
inc
rclb
push
xchg
pop
sub
mov
mov
add
add
adc
ljmp
dec
inc
aaa
insl
or
sub
adc
sub
mov
mov
or
sbb
cmp
push
shll
push
call
push
jmp
rcrb
outsb
or
jmp
mov
lret
outsl
sub
ljmp
lret
repnz
mov
xchg
mov
pusha
stos
andb
fadd
push
call
xchg
subl
das
jo
js
xchg
push
push
inc
adc
or
xor
mov
sbb
adc
mov
push
popf
divb
mov
mov
shlb
shrb
cmc
or
push
and
loopne
and
adc
push
push
pop
ret
jbe
mov
loopne
add
ja
cli
cmp
push
add
mov
mov
negb
daa
inc
sbb
dec
mov
loopne
cs
lcall
mov
jbe
cmp
mov
arpl
cmp
lcall
push
mov
cmp
sbb
fwait
dec
imul
pushfw
rclb
push
or
je
jle
xor
jp
and
dec
jecxz
cld
ja
xchg
sbb
test
push
push
adc
loopne
and
shlb
decb
mov
add
pop
pop
cmp
and
cmp
fs
adc
push
add
xchg
pushf
popa
mov
jle
fs
and
mov
nop
or
dec
test
test
pop
mov
adc
push
incl
xor
xor
jle
sbb
push
inc
arpl
cmpb
jo
scas
push
mov
pop
jo
mov
inc
xchg
mov
adc
int3
inc
mov
clc
sbb
or
shlb
insl
testb
aaa
push
ljmp
add
mov
add
ljmp
mov
pop
shrl
sbb
shlb
sub
test
mov
jbe
sbb
add
sbb
rorb
inc
and
and
loopne
add
test
arpl
and
xchg
ds
cmpsb
rorb
adc
or
icebp
jg
mov
in
repnz
mov
mov
out
aad
pusha
pop
xor
push
or
aam
loopne
and
inc
addl
push
push
popf
insb
xor
push
sub
mov
sbb
adc
loop
mov
in
adc
mov
push
jnp
and
shrb
movsl
push
dec
jb
add
xor
or
or
pusha
std
loope
xor
and
bound
push
loopne
xor
das
dec
fmuls
test
add
jg
xor
xor
cmp
push
mov
or
dec
fisttpll
out
ret
adc
mov
fistps
inc
add
push
adc
cmpsb
jp
push
jbe
add
mov
xor
inc
xlat
pop
push
mov
adc
dec
push
pop
sbb
adc
lcall
mov
inc
adc
mov
add
push
rdtsc
xchg
pop
adc
adcb
lahf
push
jge
adc
cwtl
dec
add
lock
in
test
adc
push
xor
mov
push
xor
jb
idivb
js
arpl
insb
sbb
inc
cld
aaa
aam
sbb
or
adc
sbb
test
push
jbe
sub
pop
mov
or
add
pop
into
inc
ficompl
divl
mov
add
test
ds
inc
fiaddl
and
addb
or
ficompl
xorb
add
fistpl
push
stos
mov
gs
subb
rorb
xor
mov
adc
out
sub
inc
call
pusha
mov
mov
pop
jg
push
mov
cli
mov
xor
push
sub
in
and
sub
sub
sbb
cmp
mov
jae
sbb
imul
inc
inc
push
sbb
adc
sbb
test
mov
loopne
jno
jecxz
mov
aaa
or
mulb
mov
rcrl
rol
or
push
sub
rclb
cmp
adc
jl
inc
mov
in
add
jp
push
data16
jbe
and
mov
pop
orl
nop
arpl
add
lret
add
add
mov
xor
or
jno
xorb
clc
hlt
insb
fcoms
scas
test
jle
xchg
insl
and
xor
push
aaa
mov
or
jb
js
xchg
cld
enter
loopne
adc
jl
or
jne
lret
loop
add
adc
inc
andl
pusha
mov
mov
mov
pop
inc
mov
xor
mov
push
mov
pushf
imul
fcmovbe
ja
jae
cli
mov
cmp
out
inc
or
add
ljmp
cmc
adc
mov
xor
xor
inc
xor
mov
add
push
and
add
popf
notb
insb
jmp
inc
add
push
out
lcall
push
hlt
jo
shl
into
xor
fsubrl
ss
inc
lods
mov
xchg
mov
xor
sahf
cmpb
add
pop
testl
cmpsl
push
stos
push
insl
inc
sbb
jb
adc
inc
add
inc
div
add
adc
add
push
adc
pop
rorb
mov
push
add
and
std
jge
mov
fwait
push
enter
sub
push
and
mov
subb
ljmp
cmpsb
or
jbe
inc
addl
imul
gs
fidivrl
mov
pusha
inc
ret
sbbb
loopne
fdivp
add
push
mov
and
jbe
lret
popf
sub
push
xor
and
jp,pn
sti
xchg
xchg
icebp
pushf
and
and
add
inc
out
jb
cmp
adcb
es
add
cmp
movsb
mov
sub
push
add
test
cld
mov
imulb
jbe
sub
sub
push
ror
push
sub
push
add
sub
aam
mov
popf
andl
inc
add
jno
loope
hlt
and
and
or
nop
push
cld
adcb
movsb
outsb
pop
fidivs
jle
add
sahf
loope
adc
shlb
adc
sub
jmp
or
jg
mov
test
imul
cmp
les
movsl
roll
pop
movsb
insl
imul
clc
pushw
add
dec
fwait
cltd
and
cmpsb
or
sub
nop
mov
xor
xor
dec
xchg
or
xor
add
mov
test
inc
rorb
mov
daa
adc
mov
pop
mov
or
push
lock
jb
dec
std
scas
es
ljmp
xor
or
cmpsb
fimuls
and
cmp
dec
adcl
adc
jmp
filds
adc
imul
clc
pop
icebp
ljmp
popf
sbbb
add
rorb
popa
ds
subb
xchg
outsb
adcb
cmp
xor
inc
or
mov
jmp
sbbl
mov
lods
bound
pop
adc
mov
jmp
mov
shrb
jle
inc
insb
ret
test
or
inc
jno
add
jb
jl
icebp
fisttps
add
mov
inc
or
pusha
pusha
push
popw
mov
insb
jo
adc
aam
popa
insb
mov
rorb
add
pop
pop
or
add
mov
movsb
adc
push
mov
decb
pusha
outsb
jle
jbe
add
daa
jmp
jno
jmp
sub
add
sub
add
mov
inc
jl
push
popa
push
jb
in
mov
sarl
xchg
rclb
or
shlb
in
dec
sub
adc
cwtl
sub
add
insl
jg
int3
inc
pusha
jo
xor
sub
stos
mov
out
xchg
jle
into
lahf
add
cmp
jle
pop
bnd
add
enter
sub
outsb
sbbl
int3
cmp
adc
mov
mov
jo
rclb
push
movsl
out
sbb
cmp
ficomps
xorb
cwtl
les
cwtl
sub
outsb
loopne
je
cmp
ret
add
mov
and
push
fistpl
inc
jp
cs
aas
pusha
sbb
inc
arpl
add
repnz
cli
jmp
and
xchg
and
sub
add
movsl
add
inc
daa
push
xor
mov
adc
push
insb
mov
inc
xor
xchg
xor
popa
ljmp
pop
mov
subb
stos
leave
sarb
pop
sbb
jo
xor
mov
cmp
cmp
or
loopne
mov
loope
pop
mov
nop
add
sbb
loopne
mov
add
mov
popa
sbb
pop
movsl
xchg
pop
and
daa
and
daa
pop
ljmp
mov
xchg
cwtl
into
push
push
and
sub
xchg
js
push
push
in
test
lcall
dec
xorb
insb
push
pop
and
add
ret
cmpsb
pop
addb
and
sbb
mov
or
adc
push
xor
mov
pusha
mov
add
sub
bound
jo
and
fs
jbe
push
sub
xor
xchg
xor
jmp
mov
sub
mov
pusha
sub
adc
mov
adc
lock
aaa
ljmp
mov
sbb
and
add
ja
pusha
add
mov
loope
dec
pop
mov
mov
cmpsl
push
outsb
mov
aam
mov
add
in
pop
test
mov
nop
cs
pop
jo
addb
xchg
cwtl
dec
popa
nop
ljmp
push
dec
and
or
mov
out
xchg
mov
loope
movsb
mov
les
dec
outsl
das
mov
add
dec
xor
adc
ljmp
and
sub
inc
jle
cmp
leave
and
adc
fdivs
mov
inc
jmp
cmp
or
pop
add
cmc
rcrl
cs
or
popf
test
push
scas
adc
mov
in
push
inc
jg
lea
cmp
push
bound
lcall
daa
add
stos
rclb
push
test
add
je
mov
adc
adcl
decl
sbb
cmp
xor
cli
ret
pop
out
clc
dec
popa
mov
pusha
cmp
sarl
pop
imul
daa
fsub
lcall
push
or
push
adc
test
or
adc
movsb
adc
ret
mov
dec
sahf
xor
dec
insl
pusha
out
test
push
shlb
sub
xor
fnstsw
adc
mov
pop
push
mov
push
xchg
adc
adc
add
test
inc
xchg
outsb
and
pop
jp
addb
add
addb
cmp
xchg
sbbb
inc
call
stos
mov
imul
cld
xchg
ret
xor
pop
mov
mov
adc
cmp
or
jmp
pop
dec
inc
pop
js
aaa
aaa
sub
sub
pop
cmpsl
and
inc
or
add
add
xchg
jl
adc
pop
ja
add
inc
pop
fisubrs
xor
xor
inc
mov
add
mov
lret
xor
xor
rolb
ljmp
xor
xor
push
push
xor
push
pop
lahf
ljmp
add
loope
movsl
mov
push
pop
rolb
movsb
fs
xchg
inc
arpl
adc
jg
clc
push
push
in
adc
insb
push
or
pushl
or
jl
and
je
mov
cmpsl
add
fidivl
les
mov
aas
or
cmp
es
dec
xor
and
sbb
fmuls
mov
or
xor
mov
shlb
das
xchg
pusha
xor
sbb
js
pop
fadds
lcall
test
sub
adc
sub
daa
jmp
push
scas
or
inc
xchg
ret
push
test
jo
or
mov
mov
rolb
push
sbb
sbb
dec
sbb
in
aas
or
adc
add
inc
push
add
les
push
or
lods
add
pushf
sub
nop
pop
inc
sbb
addb
subb
lcall
pusha
xor
inc
push
sub
lcall
cmpsb
jp
add
adc
outsl
jp
fucomi
mov
adc
mov
add
mov
outsb
push
sub
mov
ficoms
add
sbb
jl
cmpsb
add
fldl
fcmovnbe
mov
cmp
add
subl
ds
adc
mov
inc
lret
add
nop
mov
out
das
inc
lea
inc
hlt
test
insl
sti
add
in
or
adc
cs
aaa
imul
mov
xor
in
mov
outsl
testb
push
mov
lcall
xor
cs
xor
mov
push
and
jl
adc
push
push
lock
daa
adc
mov
and
ds
shll
es
or
or
or
dec
sub
enter
inc
or
xor
rcrb
pop
jg
push
es
jge
insb
loope
test
add
sarl
mov
jnp
lea
or
adc
mov
test
cmp
sub
stos
inc
cmpb
pop
ret
pop
shl
pop
inc
mov
push
sarb
cmovno
das
xchg
cmc
test
fdivs
jbe
adc
ret
inc
inc
in
inc
test
add
xor
dec
inc
adc
mov
les
mov
fidivs
test
pop
rcrb
cmp
dec
pop
aam
cltd
xor
and
inc
cmp
in
push
sub
or
and
xor
mov
shrb
mov
negl
xchg
pop
mov
loop
add
mov
xchg
int
add
ljmp
cmpsb
add
ret
jo
cmc
cltd
or
ljmp
ret
pop
lcall
pop
movsb
xor
inc
test
push
and
scas
jo
and
pop
mov
out
xlat
fs
lret
repnz
and
dec
cmp
mov
or
inc
add
mov
sub
jg
aam
xor
add
and
add
loope
xchg
cmpb
imul
mov
daa
adc
and
mov
push
in
pusha
dec
sub
xor
rorb
loope
lock
ss
mov
adc
outsb
nop
sub
and
out
negl
xchg
out
sti
or
mov
gs
push
mov
and
data16
decb
lock
push
or
xor
xorl
repnz
adc
inc
data16
adc
popf
and
sbb
mov
push
jp
push
mov
sbb
sbb
pop
adc
inc
sbb
std
xchg
ret
xchg
push
push
rcr
sub
adcb
loop
or
sbb
lock
jb
sbb
adc
and
xchg
clc
sahf
add
sbb
xchg
xor
or
cltd
mov
add
ds
mov
xor
jge
ret
scas
mov
fmulp
lock
mov
mov
cmc
pushf
add
mov
inc
mov
test
ljmp
add
add
sbb
adc
das
cmpsb
cmp
cld
and
or
jle
fidivl
dec
xchg
or
add
adc
and
xor
out
mov
mov
in
or
insl
daa
mov
or
inc
ljmp
cmpsb
out
lcall
mov
pop
ljmp
add
cld
clc
adc
stos
shlb
inc
push
and
mov
and
pop
push
or
push
jo
sub
bound
daa
jno
loope
fiaddl
mov
enter
insl
sbb
cmpsb
adc
or
cmp
and
or
das
insb
subb
push
or
scas
shlb
fmull
nop
movsb
mov
push
inc
xchg
mov
and
adc
ja
andb
loopne
inc
ss
imul
pusha
add
jns
jp
fadd
pop
loopne
pop
xchg
pop
inc
push
filds
jmp
adc
aam
push
or
stos
mov
mov
pop
clc
loop
xchg
xchg
jle
stos
inc
push
jg
loop
sbb
and
cltd
mov
out
lcall
loope
push
jg
ja
cld
data16
pop
lcall
adc
or
add
ss
or
adc
mov
loope
pop
arpl
outsl
ss
and
pop
sub
mov
or
mov
sarl
add
addb
push
inc
mov
fdivrl
push
xchg
sbb
imulb
and
sbb
add
xor
ds
sbb
lods
insl
xor
xor
jne
push
ficoml
mov
push
out
add
push
dec
repz
inc
pop
or
xchg
dec
popa
dec
push
push
pop
outsb
inc
xor
pop
loopne
popa
ja
cmp
sbb
xor
gs
jmp
jo
cmp
stos
cmp
fisubrl
or
or
mov
in
imul
inc
xor
push
mov
or
dec
shrb
mov
sahf
dec
sub
jnp
push
insb
mov
into
push
push
shrb
lcall
add
call
stos
imul
xor
pop
push
aam
xor
jle
paddd
add
pop
adcb
xor
xor
pop
add
stc
js
test
sbb
pop
jp
xchg
clc
ret
xor
xorl
fdivrs
adc
add
mov
or
dec
mov
inc
xchg
push
add
add
mov
sarb
xor
adc
push
pop
mov
adc
inc
movb
loopne
mov
adc
jbe
insl
and
add
out
jp
dec
pop
push
loopne
adc
sbb
fbstp
xor
add
movsb
or
fildl
or
xorb
pop
nop
aas
or
add
jns
imul
data16
pop
aam
or
ret
inc
andb
add
push
push
adc
mov
push
pop
sbbb
mov
push
mov
dec
inc
arpl
sbb
pop
mov
data16
js
pop
dec
icebp
push
movsl
or
repnz
or
outsb
mov
add
fwait
gs
add
sub
or
stos
imulb
pop
testb
fs
add
pop
pop
xor
inc
and
mov
sbb
loop
nop
faddl
mov
xchg
dec
fiadds
push
inc
add
mov
fldt
arpl
pop
and
insl
es
pop
sbb
lock
popw
into
ljmp
inc
mov
int3
lcall
mov
fwait
repnz
xchg
xchg
das
sbb
fs
xor
jle
aas
dec
cli
rcrl
andb
std
or
inc
add
pop
pop
in
jnp
jg
push
jmp
dec
pop
push
mov
pop
inc
push
in
push
loope
sub
scas
mov
adc
and
fisttpll
inc
push
mov
lods
shlb
rolb
pop
adc
jo
fwait
mov
inc
inc
xchg
in
rolb
pusha
push
adc
outsl
mov
xorb
fisttpll
jmp
cs
sub
aas
sahf
mov
adc
fcmovb
mov
loopne
fildl
fisubrs
xor
mov
insb
clc
jg
test
xor
sbb
jo
je
pop
sbb
lret
rorb
inc
xor
in
insb
arpl
enter
sub
sbb
cld
aas
and
adc
and
pop
and
or
xchg
in
shrl
push
push
jb
and
or
adc
inc
adc
adc
and
loopne
clc
addr16
and
les
jbe
push
orb
or
shll
xor
out
push
and
and
push
shrl
push
test
data16
ret
dec
pop
hlt
movsl
inc
adc
inc
aad
mov
pop
inc
xor
repz
and
loop
jne
std
jg
xor
pop
pop
pusha
add
add
and
popa
add
mov
or
jecxz
pusha
xchg
popa
push
jmp
ljmp
and
add
mov
adc
sub
jbe
or
fildl
test
adc
mov
fs
loop
and
inc
and
idiv
stos
aaa
pusha
or
jle
inc
and
cs
test
push
addb
or
ss
jb
mov
call
loop
pusha
adc
cli
leave
dec
leave
mov
loopne
cld
decl
mov
sbb
xorl
add
xchg
pusha
xor
inc
sub
aaa
add
paddq
arpl
nop
jp
cld
jg
jmp
arpl
sbb
sbb
xchg
lds
in
inc
inc
leave
sbb
mov
adc
or
js
es
filds
adc
mov
xorb
and
dec
lds
sbb
jge
rcr
or
inc
ret
dec
lcall
mov
lret
je
sub
outsl
push
mov
push
push
stos
ret
cmp
xchg
clc
add
popf
inc
pop
inc
mov
pop
push
fisttps
ja
and
fwait
sahf
enter
or
incl
pop
push
mov
xchg
or
sbb
es
inc
xor
cmp
xchg
outsb
pusha
lahf
push
loopne
mov
sbb
gs
or
fiaddl
mov
add
loopne
cltd
mov
sbb
es
adc
es
jb
je
sbb
gs
popa
sbb
addb
mov
incl
push
dec
and
fidivrs
sub
adc
mov
ret
outsl
clc
adcb
adcl
push
fwait
adc
ret
adc
jle
lock
cltd
and
xchg
adc
xchg
adc
clc
cmp
mov
inc
xor
pop
inc
loope
add
sub
pop
push
fmull
jp
adc
call
inc
sub
mov
or
adc
jp
insb
add
cmp
adc
sub
push
mov
pop
pop
push
mov
bound
xchg
iret
cmpsb
pop
mov
int3
add
pop
shl
incl
out
and
nop
pop
ja
test
adc
xchg
or
mov
sub
testb
add
or
xor
call
nop
pop
push
push
gs
adc
and
push
sbb
lcall
xor
pop
punpcklwd
popa
test
jl
mov
xchg
xor
sbb
mov
push
out
hlt
jb
dec
fs
hlt
orb
mov
jbe
add
adc
xor
outsb
std
pop
insb
add
aam
movsb
jns
fidivs
es
adc
stos
insl
outsb
pop
outsb
test
mov
andb
decl
mov
push
add
push
sbb
daa
jecxz
mov
stos
and
mov
fadds
nop
pop
je
jb
or
jo
or
push
dec
sbb
je
push
cmpsb
xchg
push
dec
ret
or
fists
xor
out
adc
pop
and
pop
pop
add
lcall
xor
push
cli
mov
inc
daa
cltd
inc
add
xchg
mov
rcl
je
popa
adc
jo
jmp
movsb
or
or
fsubrl
mov
arpl
dec
test
shlb
cmp
mov
xchg
xor
xor
xor
xor
popa
orb
xchg
stos
add
test
push
xor
jmp
or
xchg
sbb
cmp
or
xchg
fcmovnb
mov
fiaddl
in
or
xor
fadds
sub
loopne
xchg
mov
add
shll
mov
enter
push
push
stos
mov
test
shrb
xchg
mov
fiaddl
mov
mov
gs
add
loope
pop
and
inc
loopne
shrb
mov
push
ret
outsl
gs
out
inc
xlat
mov
xchg
inc
and
inc
xchg
loope
faddl
shl
sbb
cld
xor
jo
push
xchg
sbbl
enter
adc
add
xor
clc
hlt
dec
cltd
inc
xor
inc
stos
xor
in
stos
leave
ret
call
loopne
push
or
clc
lock
pusha
mov
sbb
dec
daa
sbbl
loopne
enter
ss
lods
push
das
out
shlb
loope
mov
mov
xchg
push
cmp
inc
push
adc
mov
sbb
loopne
ret
inc
or
addb
test
out
xlat
xorb
jo
scas
add
pop
xorb
pop
jecxz
push
sti
jae
or
pop
sbb
nop
or
aad
fwait
cmp
adc
adc
mov
fldcw
add
imul
adc
and
sub
nop
and
int
arpl
fwait
dec
sub
cmp
adc
push
push
adc
and
adcl
cmc
sbb
xor
js
mov
ljmp
xchg
or
call
add
inc
sub
mov
lahf
mov
les
sbbb
popa
mov
xor
inc
xor
call
mov
add
mov
nop
lcall
add
push
loope
stos
xor
sub
sahf
shlb
fisttps
in
sbb
loopne
push
dec
xchg
and
pusha
arpl
add
arpl
push
rclb
inc
pop
push
dec
imul
orl
icebp
or
mov
out
adc
lods
jecxz
sbb
add
jg
or
and
pusha
cmpsb
mov
add
fbstp
pop
ret
add
cmpsb
add
mov
adc
scas
je
icebp
rorl
push
orb
push
pop
jecxz
icebp
sbb
xor
rorb
mov
out
adc
xchg
adc
push
pop
inc
scas
xchg
adc
mov
xchg
movsb
incl
jmp
adc
sbb
sbb
inc
lret
and
xchg
inc
call
sbb
repnz
add
pusha
xlat
ja
push
xor
xchg
test
out
and
aas
mov
loop
push
or
hlt
pop
test
jmp
mov
imul
cltd
adc
stos
dec
pushf
les
add
or
pop
inc
or
add
adc
sbb
fldt
nop
out
pusha
fdivp
push
inc
stos
pop
pop
mov
fwait
std
inc
cmp
pop
in
mov
dec
call
pop
push
xor
sub
jmp
mov
sarb
loope
push
xchg
add
sbb
call
or
sub
out
rclb
push
or
popa
sti
lock
mov
shlb
inc
sub
push
inc
das
push
arpl
jmp
push
pop
mov
test
mov
sarb
inc
mov
call
sub
lock
push
cmp
inc
fists
add
lcall
pop
mov
dec
shlb
add
and
mov
xor
push
pop
orb
push
inc
add
mov
add
push
add
cmp
add
add
aas
inc
fsubr
sbb
out
xor
push
cmpsb
push
pop
fsubrl
jo
es
nop
or
rcrl
and
pop
jmp
into
jecxz
call
adc
sub
sarb
dec
insb
inc
fimuls
xchg
push
inc
add
jg
shrb
xchg
push
por
push
add
and
add
in
pop
mov
inc
xor
and
cmp
xor
mov
in
adc
ret
fwait
mov
push
js
jmp
jmp
out
or
jb
loope
mov
fs
cmpb
lcall
sub
jno
mov
adc
xorb
imul
mov
dec
dec
aaa
mov
push
ss
mov
movsl
add
xchg
pop
xchg
and
mov
sbb
sub
and
and
mov
xor
ljmp
pop
ja
push
push
add
out
xor
sbb
pop
cmp
adc
insl
lcall
push
inc
ret
cmpsb
imul
es
outsb
fstpt
add
mov
add
xchg
test
xchg
jb
mov
addb
add
out
jge
jbe
push
and
add
or
orl
lods
xor
loop
ret
fiadds
cmpsb
jns
mov
sbb
push
rolb
mov
lcall
add
fidivrs
cmpsb
aad
push
sbbl
sbb
pushf
scas
sarb
imul
data16
sbb
inc
add
repnz
imul
sbb
mov
dec
cmp
push
addb
mov
fildl
shlb
jb
stos
mov
inc
add
dec
repz
sbb
and
xor
std
pop
repz
mov
cmp
sbbb
xor
pop
or
mov
loop
lock
outsl
sbb
push
cmpsb
jo
jge
test
inc
or
and
stos
xchg
pop
roll
repnz
pop
adcb
sub
add
add
xor
rcrb
cmpsb
insl
insl
mov
or
add
orb
cli
xchg
jbe
mov
stos
call
add
popf
push
cmpb
add
or
sahf
lret
cli
mov
orb
je
jne
call
inc
orb
dec
nop
push
dec
ror
or
sub
xor
ror
mov
int
imul
jl
pop
loopne
push
jo
xchg
cmp
add
cmp
orb
push
xor
cmp
hlt
xor
add
adc
adc
pushf
or
fsubl
or
jg
xchg
add
adc
push
adc
rol
pop
jle
movsb
jle
call
out
in
adc
and
cmp
cmp
inc
bound
and
mov
orl
push
subl
ret
pop
popa
rol
addr16
adc
mov
pop
sub
fcomps
add
ror
adc
mov
inc
adc
imul
add
pop
cmpsb
orl
loopne
data16
pop
pop
scas
jp
push
sub
fmuls
push
or
mov
xchg
loope
pop
cmp
fists
test
fs
ss
push
inc
sbb
push
jo
mov
imul
and
orb
loop
inc
add
add
outsb
add
imul
cmpsl
inc
mov
sbb
subl
adc
ret
jmp
ss
push
insb
lock
xor
adc
rolb
bound
push
inc
xor
es
mov
add
and
mov
dec
mov
rclb
lods
fldt
mulb
mov
sahf
inc
idivb
movsb
sbb
pusha
loope
mov
add
mov
ja
and
ds
xor
push
push
pop
dec
mov
jo
xor
movsb
inc
call
loope
and
imul
scas
push
sub
add
dec
and
jge
mov
mov
movsb
add
add
mov
add
dec
sub
cmc
and
dec
push
inc
inc
jg
sbbl
fwait
sub
mov
add
shlb
aad
mov
mov
cs
scas
and
imul
mov
pop
mov
xor
rorb
aam
popa
les
enter
cld
in
lods
outsb
mov
jmp
outsl
push
pop
mov
add
aaa
pop
mov
addr16
pusha
es
mov
jmp
push
addb
and
pushf
or
cmp
adc
pop
lcall
or
mov
and
scas
mov
mov
movsb
movsl
pop
inc
adc
mov
imul
push
sub
int
mov
decl
out
mov
and
add
or
pop
dec
add
cld
fists
movsb
popa
xor
cwtl
out
xlat
outsb
sti
aaa
pusha
mov
enter
shlb
xor
cli
icebp
fwait
jmp
inc
psubd
and
cs
or
and
ret
or
out
push
int3
inc
aaa
dec
and
stos
and
add
mov
mov
adc
adc
stos
loope
xchg
lock
push
ret
and
roll
pop
xchg
inc
adc
jb
mov
filds
loopne
rolb
push
inc
add
xor
out
or
dec
push
push
xor
xor
or
add
outsl
ret
test
pushf
mov
rcr
outsl
pop
mov
push
ret
adc
xchg
or
mov
push
aam
or
push
jne
pop
mov
insb
push
adc
or
push
add
adc
call
jb
dec
push
jb
dec
sub
dec
and
inc
aas
cwtl
mov
add
xor
lock
mov
popa
add
popl
sub
and
adc
adc
roll
sbb
adc
push
adc
xor
add
sar
add
sahf
adc
sbb
mov
int3
dec
xor
and
add
inc
cld
aas
inc
roll
add
loope
lahf
xor
popa
sbb
sub
fs
mov
and
push
outsl
test
movsb
xchg
and
sbb
add
xchg
loope
cmpb
ljmp
push
pop
adc
xor
push
or
loopne
mov
addr16
or
add
cs
jecxz
adc
cmpsb
or
push
and
xchg
lods
decl
mov
add
pop
mov
mov
dec
fcoml
push
movsl
subb
pop
loop
push
cmpb
outsl
adc
push
add
popf
bound
mov
push
pop
xchg
mov
pop
div
inc
insl
in
loopne
sbb
adc
lock
add
shl
add
scas
jmp
jo
out
filds
mov
push
adc
shl
in
pop
add
ljmp
into
or
adc
shr
cmp
adc
push
dec
pop
inc
pop
jno
mov
sbb
add
js
lods
sbb
pushl
popa
push
mov
sub
insb
dec
and
adc
andb
es
cmpl
jp
loope
push
shrb
popf
sbb
inc
dec
cs
xchg
mov
add
test
or
or
imul
xor
add
dec
loop
sub
mov
mov
mov
sub
out
push
add
ja
ja
or
mov
out
pop
add
shlb
sbb
leave
or
push
insl
fistl
xchg
outsb
sbb
inc
push
dec
mov
add
adc
outsb
or
pop
jo
pusha
or
inc
nop
cmp
mov
mov
jl
stos
or
iret
inc
add
mov
mov
add
xchg
pushw
lods
adc
orb
xor
or
lock
cmpsb
push
mov
cmp
push
scas
and
pushf
mov
clc
pop
add
rcrb
cmp
mov
or
push
xor
popf
cmp
fs
jle
add
push
insl
out
out
add
movsl
add
and
shlb
xor
push
sbb
xchg
jns
cmp
ljmp
push
lods
or
das
in
xchg
adc
inc
pusha
sub
pop
sahf
sub
adc
mov
shlb
add
or
or
icebp
or
ret
pop
add
or
add
loope
sbb
sbbb
inc
inc
rcll
adc
hlt
xchg
dec
mov
roll
pop
rolb
push
push
lcall
and
and
popa
push
xor
nop
mov
add
cld
jno
push
inc
inc
dec
scas
jmp
sbb
push
lret
push
jne
xchg
lock
incl
mov
jb
icebp
adc
movsb
dec
push
cmpsb
push
sub
or
mov
adc
movsb
adc
dec
insl
clc
inc
lcall
and
data16
push
repnz
cmpsb
lcall
fucomi
add
andb
jmp
push
push
xor
lock
sub
jb
sbb
inc
fstpl
cmp
decl
sbb
pop
and
xchg
xchg
call
fwait
mov
jb
pop
repz
mov
mov
sub
and
and
std
pusha
call
lcall
mov
xchg
push
adc
add
xchg
dec
cmp
adc
sbb
insb
mov
xchg
sbb
mov
mov
add
aam
popa
nop
popa
test
or
sbb
inc
ljmp
mov
cli
sbbb
test
jb
cmp
sbbb
dec
or
inc
add
cmovs
aas
add
cmp
xchg
xchg
int3
push
or
arpl
cltd
push
or
cmpsb
adc
inc
xor
xor
lcall
add
mov
ljmp
adc
add
mov
fcmovu
push
pusha
push
popa
sub
outsb
sbb
in
or
pop
loope
sahf
ss
sbb
sub
cmp
mov
cmp
mov
or
and
pop
movsb
ss
cld
push
mov
es
lcall
adcb
call
sbb
inc
pop
das
push
pop
jb
push
rcrl
cmp
push
pop
cmp
jbe
aam
xchg
das
fsubs
xchg
ret
pop
je
and
shrb
insb
xor
dec
and
roll
jb
nop
xchg
data16
push
fs
es
iret
push
outsb
add
popa
jo
addb
mov
and
mov
add
jbe
int
adc
push
and
cmp
aaa
out
dec
sub
lods
xor
mov
push
test
push
jbe
pop
mov
xchg
andl
mov
and
jle
sbb
popa
out
sub
dec
loop
rcrb
in
adc
adc
daa
mov
mov
jle
outsb
push
add
pushw
mov
mov
rcrb
push
sbb
lods
pushf
push
arpl
js
xchg
jle
test
rcrb
pop
adc
jmp
dec
add
mov
loopne
push
mov
cmpsb
adc
in
mov
int3
aas
jp
mov
push
fs
dec
adc
push
addb
subl
push
mov
xor
das
clc
dec
lcall
xor
lock
xor
pop
mov
nop
adc
out
sbb
xor
xchg
hlt
push
or
imulb
dec
add
add
fs
pop
push
aam
push
sbb
cmpsb
mov
cwtl
loopne
popa
stos
popa
cwtl
add
jb
push
sub
pop
and
sarb
pusha
mov
and
dec
stos
xor
es
addb
xor
pop
mov
dec
add
push
cmpsl
lods
mov
or
cmp
add
js
les
xor
pop
addb
mov
test
ficomps
repnz
adc
insl
enter
jbe
sub
xchg
lods
test
call
pushw
andb
and
lods
jo
push
mov
lcall
test
stos
mov
arpl
sbb
push
pop
shlb
push
sbb
loopne
icebp
lock
addb
sub
pop
imul
xor
loopne
or
and
mov
and
jmp
adcb
call
lret
adc
sbb
pop
jno
jae
push
cmpsb
jo
insl
pusha
mov
pushw
insl
lahf
arpl
ss
gs
xor
add
cmc
fwait
mov
call
sbb
add
aaa
cltd
push
cmpb
ljmp
pushf
push
fmuls
xor
cmp
fldt
push
cmpsb
push
push
jle
cmpl
xchg
push
push
add
movq
lock
add
add
pusha
xchg
jle
arpl
pushf
mov
cmp
sbbb
outsb
sbbb
add
add
std
ret
mov
lss
push
out
sbb
popf
rolb
lods
insl
sub
or
es
inc
xchg
push
jb
jns
mov
mov
aaa
jo
mov
in
vcomiss
xchg
rol
pop
sub
lods
mov
loop
inc
test
stos
fs
push
add
pop
add
fldenv
sub
inc
add
sub
adc
pushf
mov
fwait
mov
adc
insl
cs
andl
lret
sub
gs
in
or
lea
inc
ja
rorb
popa
loop
arpl
push
lret
mov
mov
push
aam
sbb
dec
inc
sub
xchg
fidivrl
pop
shr
stos
aad
xlat
mov
and
xchg
sbb
fcmovbe
sar
stos
pop
sbb
popa
xchg
cmp
mov
push
or
roll
pop
outsl
jp
imul
stos
mov
ljmp
jmp
stos
inc
add
or
and
test
insl
jmp
mov
stos
sub
mov
clc
fildl
out
adcb
mov
rolb
sbb
fstps
pop
sub
pop
fs
xchg
push
cmp
xchg
mov
xor
mov
dec
push
and
lret
lcall
push
lods
pop
jl
sbbb
xchg
mov
nop
out
addb
lods
sbb
bound
mov
mov
sub
out
jmp
push
scas
push
div
add
push
sub
stos
jo
and
movsb
lock
add
mov
and
ror
scas
sbb
repnz
test
sub
push
cs
push
outsl
sub
fildl
push
push
lock
idiv
decl
lcall
aad
add
sub
jnp
stos
mov
loopne
mov
inc
add
test
push
adc
fistps
add
shlb
cmpsb
or
jnp
adc
add
aam
out
movsb
mov
xor
jmp
cmpb
jmp
push
and
adcb
add
jle
jg
popf
loope
mov
mov
jl
mov
pop
sbbb
rcr
sbbb
or
cmpsb
pop
mov
lret
mulb
push
jecxz
cmp
inc
vxorps
adc
add
in
test
jne
jle
gs
popa
pop
or
add
mov
dec
and
and
rolb
test
ficomps
mov
add
mov
add
lcall
pop
addb
roll
clc
push
subb
or
push
mov
and
push
adc
popa
mov
cmp
shlb
arpl
dec
sub
imul
fcmovnb
inc
stos
subl
pusha
add
clc
ss
mov
or
aas
mov
mov
or
push
in
ret
loopne
cmp
and
test
jmp
xorb
jmp
pusha
add
jg
pop
imul
insb
mov
jg
ret
mov
push
xchg
mov
orl
pop
jl
mov
mov
sub
mov
fidivs
das
mov
jg
or
mov
jmp
jg
stos
jg
and
jge
cwtl
add
and
mov
pushw
nop
mov
push
add
andw
or
loopne
mov
sbbl
mov
mov
icebp
mov
sub
jle
mov
loopne
cmp
push
loopne
inc
addl
stos
mov
pop
add
push
jl
cld
jbe
cs
andl
fldcw
cmp
clc
mov
cld
idiv
lcall
add
cmpsb
sub
nop
sub
mov
inc
push
pop
lods
insb
xchg
mov
push
int
loopne
aas
xchg
inc
dec
rcrb
xchg
mov
fimull
fadds
clc
jbe
inc
shlb
adc
js
sub
jl
jmp
movsb
mov
push
inc
xorb
ss
stos
jbe
jle
es
inc
jae
inc
icebp
mov
dec
or
jge
leave
rolb
aam
outsl
dec
pusha
push
mov
sub
addr16
sarb
aas
loopne
xchg
bound
inc
push
xchg
jp
cmp
jl
lock
arpl
jno
inc
outsl
jmp
sarb
push
xorl
jo
xchg
aas
nop
mov
andb
mov
pusha
mov
xchg
add
add
adc
repnz
pop
mov
jle
mov
push
das
mov
fiaddl
inc
adc
pop
aad
xchg
addb
cmp
jg
xor
xorl
dec
fisubl
xchg
sub
adc
add
pop
aas
jbe
add
aam
mov
mov
mov
nop
loopne
pushf
jo
add
inc
xorl
inc
adc
pop
jp
jbe
cmp
mov
lods
cs
xchg
cmp
jnp
jp
repnz
cmp
in
scas
xchg
loopne
add
jge
add
popw
insb
or
xchg
lock
cmp
popa
and
rorl
in
cmpsb
test
ret
ret
cli
sarb
add
add
mov
test
jmp
jle
mov
out
xor
sbb
push
ret
mov
mov
stos
fwait
loopne
or
popa
add
sub
push
sub
shrb
mov
or
jb
adc
cmc
mov
add
pop
stos
insl
loope
mov
sub
out
mov
in
or
jo
and
mov
lea
jbe
xchg
rolb
or
aas
sbb
add
xchg
movsb
rcr
scas
jge
adc
cmpsb
jle
adc
jl
rolb
and
idivb
or
jae
mov
mov
adc
adc
aas
add
movsb
outsl
ljmp
mov
shrb
mov
adc
lds
fwait
rcrb
mov
cmp
fwait
mov
movsb
lret
mov
pusha
sub
aam
lods
call
mov
ret
lock
add
dec
adc
mov
fmull
int
xchg
pop
and
xor
rcl
lcall
pop
inc
xchg
aad
cmp
cmpsb
and
xchg
fstpt
insl
and
adc
xor
adc
outsb
inc
lea
mov
add
mov
icebp
add
xchg
add
xchg
mov
xchg
add
lcall
pop
pop
pop
data16
bound
add
or
test
mov
ljmp
movsl
filds
rcll
rcrb
mov
push
out
arpl
and
daa
mov
inc
loopne
push
mov
mov
mov
outsb
pop
adc
and
mov
js
lock
sub
lea
add
fs
test
stos
cld
out
sub
dec
inc
sbb
jp
hlt
mov
cmp
pop
loope
xchg
ret
fs
xor
sub
mov
mov
add
lcall
xor
inc
add
add
fbld
fsubrl
push
shlb
and
pop
pop
movsb
mov
push
and
outsb
pop
add
stos
scas
mov
lahf
pusha
cmp
xchg
mov
add
cli
and
mov
mov
adc
ds
popf
push
or
insb
mov
xor
push
jne
cmp
push
jo
shrb
inc
add
xchg
and
push
add
mov
add
mov
movsb
rclb
xchg
hlt
push
stos
mov
or
sub
pushf
mov
inc
dec
test
nop
out
jo
pusha
jmp
sbb
ret
push
outsb
out
ret
or
sbb
inc
mov
pusha
jmp
push
adc
add
inc
jge
jmp
jl
pusha
push
jno
cs
and
add
mov
xor
test
movups
or
popf
add
cld
mov
popf
push
ret
mov
push
lcall
inc
aam
roll
or
ljmp
inc
mov
and
addb
jo
shrb
out
cmp
inc
sub
shl
fwait
add
inc
cmpb
insb
idivl
aaa
pop
push
or
shlb
mov
sbb
push
sub
mov
pop
lcall
clc
sub
cs
jb
fcoml
push
push
into
cmpsb
add
es
lods
insl
dec
xor
addb
outsl
adc
sub
cs
add
mov
cmpsb
subl
inc
dec
adc
xchg
aaa
mov
mov
cmp
and
ffree
aaa
dec
and
push
repnz
xchg
lods
push
loop
jmp
mov
mov
sarb
pusha
adc
cmp
sahf
popf
les
push
adc
mov
xor
pop
jae
adc
ja
dec
xor
sub
xor
add
sub
sub
dec
push
outsb
popf
or
data16
test
in
add
jb
mov
and
dec
dec
js
mov
mov
mov
sub
mov
shlb
popf
dec
push
or
inc
sbb
fiaddl
negb
add
jecxz
jno
jmp
imul
and
popa
es
add
add
mov
jp
jb
add
and
aam
xor
or
push
shlb
and
mov
rcrb
dec
outsb
icebp
and
or
adc
pop
add
and
xor
mov
adc
fiadds
pop
test
add
cmc
inc
adc
add
stos
xor
shrb
xchg
aam
fs
or
scas
ljmp
cli
mov
pop
popf
inc
xchg
mov
cmp
bound
fiaddl
adc
and
das
popf
cli
inc
ljmp
lahf
stos
add
or
and
in
mov
and
les
mov
adc
xchg
pop
data16
lret
fisubrl
pop
cmp
sbbb
pop
or
inc
mov
mov
jae
and
cmp
sub
push
std
prefetch
imul
pop
and
das
dec
pop
lcall
jl
bound
mov
add
lret
pop
je
mov
push
add
jp
ror
dec
push
loop
popf
inc
xor
test
sbbb
mov
xor
pop
push
pusha
aaa
pop
inc
out
pop
repnz
mov
rclb
or
stos
sub
and
jl
and
aam
adc
mov
or
jmp
lods
lahf
adc
das
inc
add
add
cltd
add
popa
cmp
mov
and
clc
ret
xor
jmp
movb
add
fs
push
push
pop
hlt
mov
dec
mov
sbbb
les
out
mov
test
jb
mov
xor
xchg
mov
sub
inc
faddl
pop
mov
es
inc
or
ljmp
mov
lds
or
push
xor
sbb
adc
add
call
loope
stos
mov
faddl
daa
push
inc
push
dec
orb
nop
faddl
test
pop
push
shlb
clc
add
mov
or
pop
jbe
subb
in
enter
incl
inc
scas
inc
inc
sub
adc
jg
jmp
imul
mov
push
arpl
xchg
xor
mov
rolb
add
aaa
cld
popf
sbbl
lahf
out
add
add
or
adc
inc
sub
pushf
lea
pop
or
xor
dec
imul
shlb
inc
jb
or
hlt
add
or
incl
and
mov
lds
shlb
mov
incl
mov
xchg
push
ret
xor
sub
jl
rcrb
addl
rolb
fbstp
fwait
repnz
adc
repnz
mov
adc
sbb
add
push
les
push
and
test
es
mov
mov
roll
cmpsb
addb
mov
enter
aaa
std
push
stos
or
js
add
push
sub
push
sbb
jg
xchg
jle
fs
and
mov
and
ss
cmp
push
and
and
mov
xchg
mov
dec
xchg
xchg
jne
popf
or
pusha
push
sbb
jmp
inc
sub
lock
add
push
mov
xor
rclb
out
das
xchg
add
cmc
call
andb
xchg
enter
jae
inc
adc
pushf
das
jno
mov
loope
mov
jmp
loope
cmpsb
imul
cwtl
push
mov
xchg
loope
jb
pop
xorb
pusha
inc
mov
jl
and
push
mov
or
fdivrl
imul
sbb
lods
add
ret
jb
ljmp
and
xlat
cmpsb
sub
add
xor
out
dec
xchg
xor
push
mov
mov
pop
inc
and
out
inc
daa
ss
cmp
sarb
testb
data16
ljmp
cmpl
mov
enter
imul
xor
rolb
pop
jbe
fldt
and
aad
sub
cmp
popa
add
aas
push
insb
nop
cli
mov
daa
scas
adc
add
add
scas
orl
pop
das
lcall
in
pushf
mov
pop
or
sbbb
or
xor
or
dec
add
or
in
adc
stos
inc
imul
and
add
jp
or
popa
inc
or
push
xor
mov
ljmp
arpl
adc
pusha
lcall
cmp
xchg
bound
add
push
xchg
mov
mov
faddl
jmp
sub
inc
jae
mov
out
adc
mov
xor
das
adcl
pusha
pop
xchg
mov
xor
jo
or
loopne
popa
and
mov
and
adc
js
add
or
cmp
mov
jmp
outsb
mov
cwtl
imul
sbb
pusha
bound
add
ss
and
lret
ret
fadd
cmp
outsb
adc
ja
xor
sub
call
add
push
pop
inc
sub
adc
shll
or
or
push
mov
adc
fwait
jge
loopne
mov
xchg
adc
sub
enter
andb
loope
jle
xchg
inc
outsl
fsub
add
adc
mov
sarb
sar
cld
adcb
inc
lea
lret
loopne
popf
pop
lock
dec
lock
loopne
idivb
add
loopne
add
or
xlat
cmp
es
add
outsb
js
cmc
sub
outsb
inc
add
xchg
pop
mov
pop
loope
mov
mov
pop
cmp
aad
adc
jl
ret
inc
fiaddl
inc
adc
push
loopne
enter
ljmp
push
loopne
and
inc
psubsb
or
jmp
sbb
and
add
lcall
into
and
xchg
mov
push
shl
test
or
mov
lods
mov
rorl
lcall
cli
xor
inc
push
xor
push
add
mov
add
cmp
sbb
insb
push
jmp
loopne
inc
push
push
jne
clc
pop
sbb
mov
jmp
push
xchg
pop
mov
jo
popa
loope
arpl
xor
push
adc
mov
mov
add
rolb
pop
movsl
mov
mov
dec
xchg
out
cmc
jle
test
call
lock
gs
pop
insl
mov
sub
sub
sbb
arpl
mov
clc
and
jnp
arpl
fiaddl
jo
ljmp
pusha
jge
push
add
xor
mov
imul
sub
cmp
je
pusha
or
rcl
sub
dec
insl
and
andb
inc
lock
test
xor
adc
pop
pop
fcmovu
hlt
adc
sbb
inc
or
xchg
push
adc
mov
and
mov
jbe
fs
jge
test
cwtl
push
stos
inc
out
jecxz
add
add
jb
fisubl
sbb
inc
mov
cmp
mov
enter
call
xor
in
adc
sub
sub
loope
sub
add
incb
jo
ja
call
push
loopne
pushf
je
and
je
xor
xor
movsl
fs
cwtl
pop
xorb
add
or
fbstp
jno
es
or
mov
xor
aam
mov
movsb
cmp
adc
pop
xchg
pop
push
mov
sub
mov
mov
xchg
mov
test
add
adcb
mov
jle
jo
das
push
adc
and
adc
hlt
mov
or
push
pop
push
add
add
dec
pusha
dec
in
dec
pop
add
mov
sub
add
inc
push
and
test
add
adc
les
pop
add
adc
mov
push
icebp
add
cli
adc
jl
popf
sahf
xor
in
mov
fstl
and
and
roll
loopne
push
xchg
lods
mov
push
mov
adc
push
push
js
jo
add
or
pop
mov
ficompl
push
or
inc
out
shlb
pop
add
or
lret
xor
and
xor
aam
add
inc
in
jbe
mov
es
mov
scas
jnp
lock
push
loope
inc
jp
adc
xchg
cmpsb
and
pop
jp
pop
ret
add
sbb
adc
jmp
mov
fwait
insl
xor
pushl
inc
scas
insl
xor
pop
out
negl
ljmp
mov
cmpsb
and
mov
in
ret
fidivrl
in
add
xchg
or
data16
mov
adc
and
lcall
lods
fldt
push
xchg
loopne
lock
pop
mov
leave
cli
sbb
add
bsf
sub
mov
pusha
or
or
push
sbb
cmp
mov
shrb
scas
in
xor
popf
call
jp
push
and
mov
stos
add
jmp
sti
add
inc
or
push
mov
or
stos
add
jge
push
mov
xchg
ss
sarb
cmpb
out
movb
jno
mov
inc
push
xor
dec
scas
andb
pusha
jmp
stos
insl
mov
add
xchg
inc
jmp
or
jge
cmp
bnd
or
xor
out
push
mov
out
jb
sbb
inc
push
xchg
inc
jle
mov
jecxz
or
repnz
adc
push
or
and
or
outsl
pop
dec
adc
rclb
jb
mov
adc
adc
sub
ret
cli
outsb
sbb
cmp
jg
fisubrl
add
inc
pop
add
add
int3
adc
cmp
add
or
xchg
sbb
xchg
sub
cltd
mov
nop
xor
rcr
and
or
imul
mov
jnp
push
jmp
xchg
jno
inc
xor
sub
jb
mov
cmpb
cmpsb
or
mov
xorb
repnz
or
pop
shlb
push
shlb
nop
scas
push
insb
add
scas
mov
sub
xor
lods
mov
and
push
adc
push
mov
in
bound
jg
add
lcall
call
pop
sbb
outsl
dec
sub
das
pop
add
pusha
sbb
add
and
pop
pop
loopne
or
ret
insl
aam
add
mov
aaa
imul
shrb
adc
and
adc
pop
adc
add
mov
jmp
pop
xor
add
mov
cmpsb
or
adc
add
pop
lcall
pop
icebp
and
pusha
add
jmp
pop
add
cld
dec
pop
movsl
adc
imul
out
sbb
jmp
fsubrp
call
adc
xchg
jo
mov
mov
outsl
incl
mov
mov
cmpsl
add
shr
mov
pop
sbb
adc
aam
ds
mov
ljmp
add
out
testb
rclb
insl
rolb
xor
jb
inc
ljmp
in
aaa
xor
xor
xchg
pusha
jb
jle
add
xor
addl
pop
pop
insb
loopne
push
sarb
push
jmp
dec
push
jnp
adc
pushf
pushf
test
sub
loopne
fnsave
nop
adc
out
push
adc
add
sahf
imul
or
mov
pushl
and
ret
rorb
shrb
pusha
cmpsb
jp
jno
pusha
add
data16
test
adc
push
mov
or
nop
pop
cltd
int
cs
mov
add
jbe
sub
push
mov
nop
and
mov
jmp
fimull
push
loopne
idiv
add
popf
add
jle
adc
dec
divb
mov
mov
dec
jecxz
push
jle
mov
pop
push
add
sub
andb
or
lcall
add
repnz
leave
adc
mov
addb
mov
mov
mov
adcb
out
xor
cmp
pushf
add
sub
add
lods
mov
popa
add
adc
sbb
hlt
push
test
or
enter
sbb
or
imul
lods
push
mov
repz
adc
adc
push
or
inc
and
adc
push
push
and
shlb
dec
imul
pusha
sbb
cltd
jl
mov
add
push
pop
out
jbe
cs
test
sub
hlt
push
xorb
sub
adc
push
mov
sub
hlt
arpl
mov
sbb
cmp
mov
add
inc
test
inc
xchg
xorb
pop
add
mov
add
scas
xor
adc
adcb
clc
or
dec
loope
push
xchg
mov
mov
push
mov
sbb
gs
aam
pusha
flds
mov
or
inc
jo
mov
xor
add
outsb
lcall
xor
mov
pop
dec
mov
or
sbb
pop
mov
or
inc
or
mov
into
xor
mov
divb
pop
test
mov
mov
and
dec
mov
or
adc
ret
mov
shl
xor
outsl
out
inc
add
dec
or
push
push
loop
inc
push
outsb
mov
mov
lret
outsl
xchg
decb
jg
push
addr16
and
adc
loopne
rorl
dec
faddl
mov
notb
ret
sar
das
ret
enter
roll
sbbb
imulb
adc
cmp
ret
add
sar
add
fidivrl
or
mov
pushl
lcall
inc
es
mov
xor
in
xor
or
push
clc
jg
fs
jne
xor
addl
xor
jbe
insb
lret
xor
jbe
sbb
adc
fimuls
jae
sbb
mov
and
sbb
mov
add
popa
mov
and
jne
xchg
add
mov
mov
imul
decb
cli
add
in
dec
in
xchg
inc
test
insb
pop
rorb
adc
xor
in
fistl
sub
dec
pop
jns
mov
add
mov
mov
add
inc
push
dec
cld
fwait
imul
xor
fnstenv
fadds
imul
cmp
ror
jmp
mov
xor
cmp
aas
cmp
icebp
inc
pop
stos
aaa
cld
out
mov
test
push
inc
insb
shlb
jmp
add
pop
movzbl
lcall
sbb
mov
pusha
sub
stos
jg
insl
test
aas
add
or
pop
daa
jb
xchg
inc
pop
shlb
shrb
adc
mov
add
sbbl
push
add
or
add
xchg
popa
mov
jg
push
dec
pop
mov
or
cld
adc
and
and
stos
or
mov
push
push
incl
pusha
pop
pop
pusha
jnp
pusha
movsb
decb
push
sub
add
out
jmp
jge
mov
jge
pop
adc
push
mov
inc
inc
fistl
ficompl
or
pop
xchg
sub
mov
push
or
test
inc
aaa
imul
sub
notb
pusha
sub
or
cmp
inc
popa
add
andl
pop
jb
cmp
or
stos
dec
pop
mov
loopne
mov
cmp
mov
dec
mov
mov
pop
xor
orl
cmp
push
fisubrl
xchg
dec
push
pop
push
orb
cmp
sbb
mov
xchg
or
nop
cli
push
sub
gs
pop
inc
ss
add
xchg
repnz
rorb
js
mov
mov
loopne
xor
call
mov
scas
xor
jne
scas
xor
pop
into
push
mov
push
loopne
jbe
or
pop
mov
dec
mov
mov
jp
add
insl
mov
or
pop
gs
adc
sub
mov
and
xor
sub
add
push
adc
loope
mov
fadd
adc
lods
pusha
adc
push
std
neg
pop
mov
mov
push
in
ds
and
add
adc
sub
scas
fsts
icebp
cmc
and
cmpsb
add
lcall
and
and
imul
dec
aad
add
roll
inc
mov
leave
mov
push
test
mov
xchg
shrb
push
push
push
push
fdivs
ss
push
cmpsb
cmp
sbb
pop
add
mov
es
pop
js
inc
loopne
xlat
mov
test
jbe
push
inc
mov
ret
or
and
add
sahf
loopne
lcall
pop
cs
andb
in
inc
jp
mov
push
loopne
lcall
loopne
mov
cmpsb
push
lods
push
in
push
cs
inc
mov
in
pop
std
outsb
add
icebp
add
lock
push
xor
sbb
xor
out
sub
jb
sbb
jl
mov
push
std
sbb
sti
shlb
add
into
sbb
sub
dec
fisttpl
stos
dec
sbb
jle
lea
xor
mov
dec
sub
add
aaa
dec
rorl
xchg
mov
mov
int3
or
or
fnsave
mov
push
mov
scas
add
dec
jo
mov
sbb
mov
fs
fiaddl
repnz
pushf
and
ljmp
jp
icebp
add
push
or
jo
popa
roll
es
ds
sti
rol
adcb
subb
stc
andb
xchg
add
push
push
mov
mov
jo
rdmsr
mov
stos
sub
xchg
stos
lods
subb
push
add
icebp
xchg
inc
adc
mov
test
jg
fldcw
std
add
je
scas
adc
add
push
in
cmc
mov
push
inc
loopne
push
es
add
jp
cmc
sub
fists
pop
imul
jbe
dec
jo
xchg
filds
inc
mov
call
xor
int
jnp
sti
inc
xchg
sbb
outsb
xchg
sbb
mov
xchg
cmpb
add
js
mov
jbe
outsl
sub
push
sbb
into
ficoms
and
push
je
mov
loope
sti
pop
je
sub
lock
push
out
push
repz
push
jno
icebp
stos
push
mov
cmpsl
movsb
subb
or
ds
xor
mov
or
pop
or
outsb
movb
dec
xacquire
pop
lock
jo
jbe
xchg
xchg
repnz
in
js
pop
shl
outsb
lock
push
jne
das
sbb
aad
lock
jne
stos
pop
mov
pop
adc
jbe
jno
inc
mov
sbb
push
std
jbe
call
nop
xor
mov
dec
jnp
mov
add
sbb
mov
cmpsl
imul
sbb
xor
cmp
push
stc
scas
adcb
xor
adcb
sbbl
sbb
imul
test
icebp
aad
lock
cmp
jge
mov
out
divb
test
call
or
push
jmp
add
cmp
or
pop
jecxz
pop
out
lods
jbe
mov
add
out
sbb
aad
push
cmpl
loopne
cmp
pop
subb
push
xchg
lea
sub
push
outsb
push
lcall
cwtl
icebp
sub
xor
sbb
and
mov
shrl
mov
push
bound
adc
pop
lods
mov
or
aad
or
pop
loopne
pop
sbb
imul
pusha
leave
stos
xchg
xor
std
stos
mov
push
mov
notb
mov
push
sbb
lea
loopne
cmp
fwait
cld
mov
rorl
scas
clc
xor
ret
rcrl
ds
rorb
adc
jg
or
or
bound
push
insl
xor
mov
mov
inc
fwait
xor
add
jnp
cmpsl
xchg
push
sbb
and
js
cmc
cmpsb
xor
or
fldt
mov
mov
sub
push
lret
add
add
xchg
push
jnp
add
sti
adc
in
repz
out
add
out
xor
jns
jecxz
add
pop
dec
stos
movsb
lods
mov
or
add
sbb
push
rcrb
int3
xor
repz
sar
xor
lock
call
out
lods
push
loopne
sbb
sbb
or
lcall
cmp
imul
imul
out
dec
inc
inc
jl
push
shlb
push
sbb
add
imul
shll
mov
test
mov
int
xor
test
mov
int
xor
int3
enter
xor
sar
clc
hlt
lock
int
xor
call
adc
int
xor
or
add
shll
xor
and
pop
pop
push
xor
shll
dec
dec
inc
inc
shll
jo
fcompl
pop
ret
pusha
add
shlb
pop
adc
mov
sbb
xor
shll
dec
shll
aam
int3
enter
xor
sar
hlt
shll
shl
in
call
xor
sbb
adc
or
xor
shll
bound
xor
xor
shll
sub
and
dec
shll
pop
pop
push
push
dec
dec
imul
jl
js
je
outsl
orl
dec
mov
or
inc
pusha
or
stos
mov
loopne
mov
add
and
or
add
xor
sbb
inc
movsl
or
xor
addl
movsl
add
stos
movsl
mov
data16
sbb
pusha
adcb
mov
adc
movsl
mov
sub
pusha
push
mov
mov
pushf
fs
or
add
sbb
lret
mov
std
pop
xorb
out
loope
loopne
or
sbb
out
lods
dec
in
int3
sbb
les
cld
clc
hlt
lock
imul
rcrl
in
add
aaa
int
xor
cmp
imul
sahf
gs
popf
mov
dec
jo
dec
push
push
dec
dec
imul
or
insb
movsl
mov
mov
call
shll
cwtl
and
lods
adc
int
movsb
mov
jo
mov
add
or
mov
inc
xor
stos
mov
shl
mov
sbb
jbe
test
add
pusha
sahf
add
stos
dec
pusha
dec
aas
rcrl
arpl
jg
jnp
inc
pop
dec
ja
or
arpl
fwait
cs
cmpsb
imul
xchg
sahf
mov
stos
cmpsl
mov
xlat
roll
sbb
pop
fwait
lret
add
pop
popf
pop
dec
in
daa
add
dec
adc
and
add
rol
dec
es
andl
orl
push
inc
mov
ficoml
mov
mov
adc
cli
daa
dec
cmpb
loope
inc
aas
mov
sub
mov
jmp
add
arpl
movsl
rcr
and
mov
daa
push
xchg
arpl
pusha
push
fldcw
aaa
insb
mov
push
incb
adc
repnz
gs
mov
test
inc
mov
shlb
push
jo
jo
test
pop
enter
add
add
jle
lock
mov
nop
pop
fwait
mov
or
push
adc
pusha
and
mov
out
aam
mov
adc
imul
mov
lcall
mov
icebp
int
insb
add
adc
addr16
lret
pusha
inc
add
xor
inc
mov
sub
xchg
add
adc
and
adc
inc
add
or
adc
or
or
aam
jb
loop
inc
insl
and
lds
jae
pop
cmp
roll
arpl
add
sbb
add
push
push
push
or
and
jg
mov
mov
pop
lock
add
dec
sbb
push
or
mov
lcall
js
test
loopne
pop
into
add
lret
jb
add
xor
adc
add
orl
adcb
add
jp
cmp
adc
push
and
loop
pop
arpl
cld
outsb
xchg
rcll
sbb
mov
add
mov
out
fsubrs
jae
adcl
adc
jb
push
lahf
fcomps
mov
add
das
out
popa
jl
mov
jecxz
cli
je
fbld
test
sbbb
add
pop
mov
stos
incb
sti
ret
adc
test
push
lock
loop
insl
and
or
mov
add
mov
ficomps
decb
sub
adc
mov
rclb
push
mov
inc
shl
mov
fisubl
ja
rolb
add
incb
je
cli
pop
lock
add
sbb
or
sbb
push
mov
add
sub
cmp
fs
lahf
dec
ret
cltd
sbb
adc
push
push
add
add
loope
jp
fldl
add
pop
js
cmp
inc
add
rclb
insb
nop
insw
in
rclb
rclb
add
repz
inc
xchg
and
lods
dec
add
mov
mov
push
add
push
add
xchg
outsl
push
push
pop
cmp
add
inc
aam
je
jo
lock
adc
add
dec
hlt
add
jl
xor
jp
sub
add
les
inc
xchg
or
sbb
push
or
mov
mov
rolb
popa
push
push
scas
xor
cmpsb
imul
adc
fisttps
add
jo
ret
pop
icebp
in
jno
testb
gs
ljmp
mov
sub
add
icebp
or
xor
xor
jae
das
and
adc
xor
mov
jb
bound
add
cmpsb
mov
inc
and
fs
push
jg
sbb
lahf
xor
push
dec
adc
xor
outsb
sbbl
mov
lcall
fwait
orb
mov
sub
mov
or
in
sub
dec
in
push
mov
mov
mov
and
sarl
or
movsb
or
sub
pop
pusha
loop
push
inc
fcomip
stos
sub
fs
pop
jg
dec
jae
add
test
cmp
jo
jo
mov
std
fildl
or
push
sbbl
mov
into
mov
add
lret
enter
fcomi
jns
inc
mov
jo
lods
cmc
les
insl
xor
ret
in
mov
mov
push
push
cmpsb
add
xchg
imul
cmp
and
or
out
lock
xor
addr16
push
mov
outsb
add
jge
and
out
mov
lods
jnp,pn
cltd
mov
gs
ljmpw
push
add
mov
add
pop
pop
rclb
dec
mov
enter
xor
sub
mov
enter
add
sub
push
mov
dec
roll
popa
out
pop
add
or
je
add
pop
pop
xchg
add
add
push
adc
cmp
outsb
rolb
jbe
test
add
aad
mov
add
das
fs
jmp
aas
pop
add
insb
mov
pop
inc
outsl
and
xor
mov
push
jo
filds
pop
int3
push
push
pop
insl
push
pusha
ret
lds
in
in
mov
flds
fwait
sbbb
add
pop
push
push
pop
les
sub
push
dec
xor
jg
push
inc
pop
into
push
inc
push
pop
iret
push
jl
xor
je
jmp
sub
or
push
pop
cmp
adc
fwait
mov
cmp
push
cmp
out
out
and
or
incl
or
ficompl
mov
cmp
outsb
xchg
mov
push
and
push
xchg
add
bound
inc
xchg
sbb
orl
adc
loop
or
jne
les
mov
inc
mov
cmp
push
pop
mov
mov
push
xor
mov
loope
insl
loope
outsl
inc
imul
fwait
xchg
and
mov
push
insb
pop
push
sub
push
addb
push
cwtl
mulb
pop
orb
mov
inc
scas
pop
jnp
es
add
mov
jg
push
sbb
and
mov
inc
andl
pusha
std
adc
sbb
sahf
sbb
mov
pusha
cmp
push
push
in
jg
sbb
mov
rcll
sbb
sbb
ja
push
inc
or
sub
xor
aas
push
mov
hlt
das
sbb
pop
orl
add
daa
mov
fisubrs
pop
mov
sbbl
out
mov
incl
adc
daa
xchg
sarb
pop
loopne
clc
test
push
sbb
clc
aaa
jae
and
dec
daa
outsb
inc
push
subb
add
daa
jmp
inc
fildll
push
aas
or
popa
shll
push
and
subl
and
rclb
or
inc
fisttps
inc
sub
or
decb
mov
sahf
rcrb
daa
leave
or
andb
and
lock
insl
inc
mov
mov
push
xorb
sbb
xor
dec
mov
shlb
mov
rcll
test
sar
imul
mov
pop
movsb
addr16
jo
aam
in
jno
mov
adc
inc
push
add
cmpsl
adc
mov
or
stos
push
push
push
call
clc
lods
or
add
mov
addr16
insb
sub
out
cwtl
ss
add
add
mov
outsl
mov
mov
push
or
add
lcall
xor
pop
sbb
scas
fiadds
mov
ret
push
and
and
es
mov
int3
pop
sbb
jo
pusha
loope
negl
xor
mov
xor
mov
loope
negl
mov
xor
push
sub
push
outsl
sbb
push
rcll
int
mov
jo
push
into
and
rep
sub
out
push
cmc
mov
sub
pop
xor
icebp
sbb
mov
fisubrl
icebp
sbb
add
push
loop
loopne
xor
mov
roll
sub
push
icebp
sbb
lock
push
icebp
push
mov
icebp
push
jle
lock
or
cs
or
push
xchg
fmulp
loope
mov
test
adc
imul
xchg
in
icebp
movsb
push
mov
test
mov
sbb
push
cmpsl
std
mov
cmpsb
mov
adc
bound
pop
push
mov
add
cmp
mov
push
dec
dec
adc
test
lea
xor
sbb
pop
addr16
sbb
cmc
xchg
jp
xor
xchg
sti
sbb
popa
or
add
addb
or
movsl
cmp
test
test
and
jae
xor
dec
adc
dec
dec
mov
call
push
xchg
cmp
pop
dec
jg
cmp
push
negb
xor
icebp
and
xor
clc
sbb
pop
nop
nop
jnp
imul
sub
ja
xchg
add
mov
sub
push
je
ja
or
pushf
xor
into
xchg
xorl
mov
mov
repz
mov
data16
mov
fisubl
mov
cmp
clc
lods
pusha
popa
mov
sbb
xorl
push
xor
pop
dec
jo
out
ds
mov
cs
pop
cmp
add
sbb
and
mov
add
or
aam
call
cmp
and
out
ja
lock
fdiv
lret
scas
pusha
inc
add
imul
pusha
popa
add
test
rcll
sub
les
stos
mov
mov
jmp
icebp
mov
or
mov
shlb
test
loope
in
sbb
add
lret
push
pop
xchg
lret
xchg
in
sbb
movsb
inc
add
in
push
jle
lods
mov
cld
mov
aad
pop
test
in
xor
stos
pop
push
mov
in
cld
add
add
push
mov
inc
in
outsb
sbb
push
roll
push
mov
test
xor
mov
in
jmp
jno
push
or
mov
pop
add
addr16
out
add
jae
out
arpl
fcomps
mov
lock
fs
adc
loop
xor
add
out
xor
or
out
adc
pop
js
aad
add
stos
or
push
inc
out
test
and
mov
add
or
pop
and
push
pop
addb
pusha
das
add
test
sub
or
mov
fwait
data16
nop
rolb
ret
dec
mov
test
add
add
inc
dec
js
icebp
pusha
dec
or
ja
loop
pop
orb
jg
daa
sbb
js
push
dec
cmovle
xor
adc
add
int
adc
test
xchg
mov
adc
rorb
and
pop
push
and
sti
fbld
or
adc
lret
mov
pop
and
xor
push
daa
adc
mov
popa
jg
rcll
clc
xor
add
xor
and
and
add
sub
addr16
adc
push
aam
add
xchg
mov
nop
xchg
xor
or
xor
and
push
pop
or
testb
inc
or
or
pop
rorl
sub
sub
adc
fisubrs
mov
adc
mov
testb
ss
jo
xor
push
pop
jle
xchg
pop
nop
and
popa
jg
mov
or
adc
rorb
add
mov
unpcklps
sti
push
rcll
or
add
mov
fildll
add
or
add
push
or
jo
insl
imul
out
sbb
or
and
pop
ret
sbb
adc
pop
popa
sbb
in
or
in
add
push
lods
push
sti
jbe
add
adc
sbb
into
xchg
incl
add
inc
xor
pop
adc
mov
data16
mov
and
lcall
add
xchg
sbb
adc
rorb
rcrb
add
pop
adc
push
lock
adc
negb
out
mov
or
vmread
jo
pop
push
popa
adc
in
lods
adcb
sbb
or
and
mov
mov
adc
or
pop
push
adc
inc
add
sub
pop
and
push
add
sub
push
fsubl
mov
cmc
and
pop
icebp
pusha
mov
or
rolb
test
scas
ds
std
js
mov
inc
xchg
nop
push
lret
pop
push
mulb
adc
pop
cs
pop
inc
ljmp
xor
add
ret
das
pop
movq
out
faddl
xchg
mov
mov
dec
hlt
out
inc
add
dec
inc
push
dec
or
adc
sbb
int3
dec
leave
cmp
pminub
cmp
adc
punpcklbw
sub
mov
push
sbb
fildl
arpl
adcb
and
push
jmp
or
or
insl
mov
lcall
sbb
or
mov
sahf
add
outsl
xor
sahf
or
inc
add
adc
pop
mov
mov
cmpb
sub
popa
push
adc
jg
js
mov
sbbb
orb
xor
sbb
nop
test
mov
mov
adc
add
push
and
out
jbe
andb
orb
mov
test
add
mov
jg
add
adc
lret
sbb
sbb
dec
lock
pop
js
ja
fs
into
xchg
cmpsl
test
incb
mov
or
movl
mov
xor
negb
or
pop
das
das
adc
mov
dec
and
cmp
mov
std
or
in
inc
ss
ljmp
jp
pushl
lcall
outsl
jbe
add
push
inc
push
cld
int
or
inc
pop
mov
dec
movl
add
push
sub
fbstp
or
mov
addb
cmp
in
sub
clc
sub
dec
and
push
fbld
pop
xchg
ss
shlb
addl
cmp
add
testb
les
movsb
incl
loop
and
sbb
hlt
adc
add
add
add
push
jge
dec
xor
push
call
adc
mov
jb
enter
sbb
popf
ss
add
and
inc
pop
adc
cmp
das
or
loope
jp
arpl
js
lock
pop
add
adcb
mov
fadds
shll
fs
test
cld
push
aaa
sub
in
pop
add
ljmp
push
xor
outsb
xchg
sar
xor
roll
push
sbb
sahf
movsb
sub
push
jg
aad
or
add
push
pop
scas
add
loope
icebp
imulb
outsb
mov
inc
mov
lea
add
dec
pop
push
and
xchg
arpl
push
and
add
out
cld
fs
loopne
sarb
clc
movsl
push
aam
das
push
popa
sahf
jbe
add
cmp
xchg
inc
adc
add
in
mov
popa
or
xorb
dec
mov
inc
xor
out
dec
int
add
add
inc
hlt
mov
or
mov
mov
sbb
sahf
add
or
sbb
add
call
push
bound
xchg
aam
add
andb
xor
jge
inc
ds
push
fidivl
fsubl
push
loopne
sbb
and
mov
jnp
out
xor
and
loope
xchg
cmp
mov
repnz
cmpsb
jo
pop
mov
loopne
xor
cs
fsubl
loope
mov
in
mov
push
and
mov
mov
inc
stos
jecxz
or
inc
dec
sub
gs
or
sub
xor
cs
dec
sub
pop
jecxz
cmp
loopne
test
add
sub
scas
stos
sbb
add
lods
or
scas
push
jge
add
das
cmpb
pop
jmp
fcmovne
test
bound
mov
mov
pusha
push
push
fldt
mov
inc
dec
and
or
xchg
fbld
dec
adc
pmaddwd
inc
and
push
mov
inc
in
push
pop
add
pusha
add
mov
cmp
daa
push
popa
pop
mulb
add
mov
popf
push
jmp
lret
or
sub
lock
stos
push
add
and
cli
mov
and
and
xchg
pusha
outsl
xchg
ret
andl
jmp
test
push
xorb
sub
sbb
xor
clc
mov
pusha
ss
push
andb
pop
dec
add
test
inc
lahf
adc
cmpsb
movsl
mov
mov
jne
addr16
or
dec
popa
add
push
or
dec
lea
mov
and
and
in
add
mov
or
jl
jl
pusha
mov
rcl
ret
ror
push
add
inc
das
cli
cmpsb
scas
cmp
sbb
push
or
sbb
push
loope
add
fcoml
ljmp
mov
lret
icebp
add
and
lock
inc
sbb
loopne
ffree
fxch
add
add
pop
enter
add
pop
jl
ja
sbb
add
nop
pop
and
addl
sti
mov
mov
loopne
adc
add
add
pop
jo
pop
cmc
mov
add
jl
inc
lock
jg
add
add
pop
adc
mov
lcall
sub
push
jo
enter
push
push
rclb
cli
add
decl
and
or
mov
xchg
adc
divb
add
out
insb
mov
mov
icebp
adc
inc
mov
cmp
push
mov
sti
pop
add
push
stc
dec
jae
flds
push
sub
adc
in
leave
ret
jp
pusha
jae
rclb
maxps
xchg
sbb
adc
or
cmp
pop
outsb
adc
adc
mov
popa
or
ss
fcomi
scas
add
push
xchg
jge
mov
add
or
sub
and
pop
fistl
pop
test
push
into
pop
sbb
mull
insb
sbbb
push
xor
bound
and
cmp
mov
add
add
mov
jg
add
std
or
add
add
dec
add
mov
pop
or
stos
mov
jb
loope
jbe
aaa
inc
jo
cmp
movsb
add
xor
jmp
add
inc
cmp
add
add
push
push
gs
es
loopne
jg
push
jp
adc
or
jo
or
add
rclb
pop
or
cld
ljmp
inc
push
push
stc
add
and
scas
mov
loopne
or
roll
jbe
jb
add
and
push
sarl
pusha
ret
mov
mov
cmp
je
mov
inc
or
or
call
and
pusha
subb
add
mov
adc
pusha
subl
pop
cld
lds
rolb
sbb
and
das
loopne
dec
sar
mov
shlb
daa
loopne
sbb
sbb
or
decl
jo
fstl
cmp
test
jo
inc
dec
xor
push
int3
loop
cmp
dec
dec
ret
arpl
mov
xor
mov
cmpsb
adc
adc
decl
sub
jb
add
xor
add
pop
lock
add
push
test
je
shll
pusha
or
add
hlt
mov
push
jo
pusha
pop
loope
sub
pop
icebp
add
lock
in
or
hlt
adc
push
or
ret
enter
add
push
xor
dec
mov
sub
js
or
mov
dec
lock
jbe
add
sarb
mov
lods
inc
rclb
bt
test
outsl
or
mov
loope
aad
aam
and
ffree
sub
sub
cvtps2pd
xchg
clc
jmp
or
inc
adc
adcb
pop
loopne
rcll
add
and
sbb
add
adc
and
pop
pusha
clc
add
add
xor
mov
and
ljmp
inc
adc
shrb
pop
scas
push
xor
mov
or
sbb
or
push
movsb
iret
xor
or
or
jg
fildll
arpl
and
cwtl
push
rdtsc
mov
adc
pop
incl
xlat
inc
loopne
mov
xchg
add
mov
repnz
decb
lock
jns
sbbl
rclb
jno
je
adc
jne
or
cmc
xor
or
or
inc
mov
loop
decl
dec
adc
lcall
loope
cld
aaa
movsl
test
sbb
es
xor
loope
xor
jo
mov
mov
repz
or
out
add
stos
lcall
inc
xor
push
ljmp
pushf
inc
arpl
xchg
sub
sub
test
fs
mov
add
xor
or
add
dec
add
es
mov
js
icebp
add
clc
fstl
xor
add
or
loopne
add
add
jo
or
outsb
pop
add
sbb
add
mov
xor
add
xor
add
and
push
mov
lret
push
mov
daa
ljmp
adc
das
in
mov
inc
inc
or
jle
add
and
jb
rorb
aaa
add
fisttps
ds
test
inc
jl
inc
and
stos
push
add
xor
pop
xchg
jb
test
jbe
jbe
jecxz
sbb
jo
orb
int3
insb
mov
add
test
add
mov
out
sub
and
push
push
or
lods
les
sahf
orb
pusha
sysenter
sub
sbb
addb
out
adc
pop
cmp
sub
daa
and
inc
jo
daa
cs
int
dec
add
jl
pop
sub
sbb
adc
lock
adcb
test
pop
data16
jb
daa
faddl
pop
call
ret
xor
push
orb
adc
aam
mov
sub
subb
orl
lret
add
sub
bound
pop
or
jl
pusha
adc
xor
and
push
add
aaa
outsb
cmp
orl
pop
pop
push
es
pop
push
dec
mov
xor
and
data16
bound
and
cmp
and
sbb
inc
mov
xchg
and
mov
addb
xor
rclb
sbbl
in
xchg
jp
pusha
xor
add
pusha
push
into
pop
push
add
mov
sbb
cmp
adcb
adc
rolb
inc
sbb
and
adc
pop
xchg
dec
add
or
loop
outsb
js
mov
test
add
test
inc
inc
push
loopne
ret
jbe
xorb
subl
cmp
or
sub
push
pop
pop
mov
sub
add
jne
sbb
rorb
stos
pop
ret
lods
jb
sbb
inc
inc
cmpsb
scas
shrl
je
sbb
or
mov
lea
xorb
jns
push
inc
into
ljmp
faddl
jl
shrb
fwait
sbb
outsb
xchg
push
cmp
leave
fisubrl
or
pop
push
xchg
ret
pop
aam
stos
insb
pop
mov
adc
inc
test
inc
or
rorb
push
pusha
mov
inc
xchg
jo
ficompl
jne
xor
icebp
pop
mov
adcl
add
sbb
or
adc
xchg
ret
inc
mov
push
dec
pop
lea
loopne
nop
in
mov
push
mov
das
mov
push
jb
shlb
orb
xor
in
mov
cld
xor
adc
pop
pop
adcb
js,pt
fdivr
stos
fmuls
mov
add
and
outsl
dec
dec
push
adcl
enter
inc
or
or
inc
pusha
add
data16
ljmp
fcomp
add
and
into
out
loopne
mov
xor
push
or
out
pop
mov
mov
sbb
and
call
add
inc
cmpsl
add
cmc
out
mov
mov
pop
pusha
mov
in
test
xor
push
lahf
inc
xchg
fnstenv
lods
or
and
push
shl
pop
or
push
outsb
jle
rclb
push
bound
pusha
add
call
ljmp
das
and
or
push
add
js
xor
sub
scas
in
or
or
jne
ljmp
pop
or
mov
adc
or
and
out
sub
jg
pop
and
mov
and
icebp
test
ret
in
popa
mov
cld
cmp
mov
and
or
inc
hlt
jg
sbb
andb
add
add
insl
mov
dec
jp
mov
xorb
cs
imul
add
inc
psrad
icebp
pushl
adc
jbe
and
punpcklbw
or
outsb
add
push
or
inc
pop
sub
pusha
cmp
sub
cli
cmpsb
add
int3
add
popa
cmp
cmp
sbb
and
pop
shufps
sbb
pop
adc
push
icebp
ljmp
pusha
je
pop
add
jp
xchg
xor
push
xchg
jle
stos
enter
adc
push
test
mov
or
inc
push
xchg
push
aaa
sbb
inc
push
pusha
ficomps
inc
in
pushl
mov
pushaw
sub
sbb
push
cmp
pop
incl
add
test
flds
inc
addr16
jnp
or
arpl
push
push
jbe
lcall
loop
adc
inc
stos
jp
add
push
push
push
cltd
es
mov
addr16
inc
cwtl
push
pop
outsb
or
inc
mov
mov
mov
or
cli
je
inc
jnp
mov
outsl
filds
stos
jns
push
mov
ret
scas
lods
jns
icebp
decl
cld
xlat
adc
add
cmpsl
decl
and
xchg
mov
loope
adc
mov
and
out
dec
int
and
cmpsl
into
jecxz
in
jecxz
popf
mov
in
ljmp
sbb
add
mov
stos
and
fsubp
icebp
ja
sub
inc
push
xchg
adc
mov
fwait
lcall
adc
test
scas
nop
dec
add
jecxz
es
ljmp
ret
jb
jp
int3
jb
cmpsl
cmpsb
cwtl
mov
lds
add
sbb
lods
ss
jmp
pop
scas
movsl
add
insb
int3
ret
add
das
dec
outsl
pop
jne
pop
push
std
call
loopne
cmp
cmpsb
vcvtps2dq
fcmovbe
popl
xor
lds
cmc
ljmp
cmp
ret
inc
mov
ljmp
mov
cmp
mov
fwait
mov
add
out
cli
shrb
stos
stc
cmc
inc
call
jbe
cmpsb
inc
pop
rcll
add
sub
pop
adc
or
rcll
lcall
out
cmc
or
mov
fbld
pop
mov
cmp
mov
pop
mov
out
jns
into
cmpsl
lds
mov
aam
mov
int
fists
mov
pop
fisubs
sbb
add
inc
clc
ljmp
scas
leave
xchg
add
subl
fdiv
testl
pop
jbe
jbe
clc
int
mov
lcall
shrl
inc
movsb
sbb
cli
push
add
sbb
icebp
ljmp
shll
push
jo
add
out
faddl
lock
outsl
clc
sbb
mov
mov
into
jecxz
mov
pushw
and
mov
add
ss
rorb
pop
jnp
add
push
lret
add
fimull
mov
mov
dec
ljmp
roll
mov
daa
loopne
jmp
gs
pop
push
mov
adc
inc
adc
sub
cmp
in
les
fs
xlat
mov
cld
push
orb
jae
movsb
es
jb
inc
push
add
dec
push
push
sub
inc
in
cmp
mov
adc
jl
test
ljmp
xchg
mov
sub
bound
negb
jae
sub
lods
mov
mov
loope
enter
sub
xchg
arpl
xchg
add
add
dec
add
sti
sub
add
add
add
push
push
fstp
outsl
pop
mov
pop
sti
add
jnp
adc
lods
mov
js
cmp
scas
dec
push
ja
sti
cmpsb
lcall
aad
push
fs
fisubrl
icebp
mov
scas
mov
imul
xor
push
fcomps
push
mov
xchg
cmpsb
cmp
stc
leave
sti
and
clc
sub
add
jle
and
inc
iret
xchg
pop
mov
sti
pop
sub
mov
lahf
push
jmp
xor
jae
jnp
insl
push
ss
dec
add
out
add
pop
or
xchg
lcall
test
movsb
sti
adc
inc
sub
mov
in
inc
loopne
lcall
and
push
sbb
or
and
mov
or
mov
lock
test
push
pusha
sub
push
and
mov
and
or
scas
cmp
add
xor
cli
test
push
jle
rcll
aas
mov
or
or
dec
push
jle
mov
notb
mov
pusha
hlt
push
out
lock
call
push
push
into
push
push
ficoms
scas
push
mov
mov
push
xchg
push
sahf
icebp
fcmovnu
mov
push
jle
jbe
push
push
push
pop
push
es
cs
ss
ds
jg
fstpl
push
push
push
push
push
push
out
sahf
jb
push
into
push
push
fdivrp
add
scas
push
mov
mov
xchg
push
sahf
push
pop
outsb
pop
jbe
lcall
pop
inc
pop
dec
pop
push
pop
pop
pop
es
cs
ss
ds
push
pop
push
pop
push
pop
push
pop
out
out
pop
idiv
lcall
pop
pop
into
pop
pop
ficomps
pop
scas
pop
mov
mov
pop
xchg
pop
sahf
pop
pop
outsb
pop
jbe
lock
lcall
pop
inc
pop
dec
pop
push
pop
pop
pop
es
cs
ss
ds
push
fisubrs
popf
sub
cs
out
pop
lcall
pop
into
pop
pop
ficomps
pop
scas
pop
mov
mov
pop
xchg
pop
sahf
pop
test
jmp
outsb
pop
jbe
jle
inc
pop
dec
pop
push
pop
pop
pop
es
cs
ss
ds
push
out
xor
push
pop
push
pop
out
out
pop
negb
pop
pop
into
pop
pop
ficomps
jmp
pop
mov
pop
xchg
pop
sahf
pop
pop
outsb
pop
jbe
jle
inc
pop
dec
pop
push
pop
pop
pop
jmp
pop
cs
ss
ds
push
pop
push
pop
push
pop
push
pop
out
out
pop
negb
pop
pop
into
pop
pop
fisubrs
lret
adc
scas
pop
mov
pop
xchg
pop
cmpsb
lock
pop
sahf
pop
pop
outsb
pop
jbe
jle
dec
in
pop
push
pop
add
pop
cs
ss
ds
push
pop
push
pop
push
pop
push
pop
out
out
pop
negb
pop
ljmp
ficomps
pop
scas
pop
mov
mov
pop
xchg
pop
sahf
pop
pop
outsb
pop
xor
jle
inc
pop
dec
pop
push
pop
pop
pop
es
cs
ss
out
cld
push
pop
push
pop
push
pop
push
pop
out
out
pop
negb
pop
pop
into
pop
pop
ficomps
pop
scas
pop
pushl
pop
mov
pop
sahf
pop
pop
outsb
pop
jbe
jle
inc
pop
dec
pop
push
pop
pop
pop
es
cs
pushl
pop
ds
push
pop
push
pop
push
pop
push
pop
out
out
pop
negb
pop
into
pop
pop
ficomps
scas
pop
pop
loopne
pushl
pop
mov
sahf
pop
pop
outsb
pop
jbe
jle
dec
pop
push
call
loopne
pop
pop
cmp
pop
ss
ds
push
pop
push
pop
push
pop
push
pop
ficomps
pop
stos
push
scas
pop
mov
mov
pop
push
inc
fs
or
frstor
push
ficoml
push
cmpsb
push
stos
push
scas
adc
push
sahf
push
push
xor
add
or
fistl
add
cmpsb
mov
out
and
xchg
push
jg
sub
push
cmpsb
clc
test
out
imul
jnp
imul
daa
push
add
push
je
or
pop
rclb
xchg
ja
jg
sub
sti
pop
cwtl
pop
mov
loope
or
sub
adcl
mov
sub
fistpl
mov
add
inc
push
cmp
push
pop
pop
cmpsb
lock
mov
or
repnz
lods
push
pop
das
pop
negl
out
ss
arpl
and
xor
cmp
repnz
xor
ret
pushf
push
pusha
push
fs
push
ret
push
ljmp
inc
jae
push
sbb
and
push
sub
push
xor
scas
call
push
cmp
push
bound
ret
enter
js,pt
dec
hlt
push
clc
paddd
les
push
int3
push
rclb
push
fdivr
mov
test
outsb
push
inc
mov
push
nop
push
xchg
push
cwtl
push
pushf
push
pusha
push
fsubl
push
push
je
js
cmp
in
test
pushl
mov
push
lods
push
mov
mov
mov
push
test
outsb
push
clc
mov
push
nop
sub
sub
js
jl
lock
jg
jb
dec
push
dec
push
push
push
add
pop
push
and
insl
or
cmpsb
and
pop
out
lds
pop
cmp
or
or
pop
andb
ret
frstor
push
dec
push
and
adc
or
incl
loope
mov
push
inc
fwait
sbb
or
fistl
or
loop
jg
jmp
push
cli
push
imul
push
sbb
pop
push
pop
sub
fwait
ret
add
ficoml
std
sub
pop
jecxz
cld
lcall
pop
fstps
pop
xchg
pop
xchg
pop
jne
push
pop
sub
pop
sbb
stos
dec
popa
mov
repz
push
lcall
pop
add
sbb
pop
fstpl
pop
mov
add
inc
ljmp
pushl
inc
mov
pop
pop
sub
or
sub
pop
je
cmp
cld
stos
dec
popa
fistps
pop
mov
jg
add
lods
add
push
lret
push
nop
push
push
dec
ficoml
cmpsb
call
cmpsb
mov
rcrl
push
hlt
push
cld
push
push
fcmovb
push
cmp
fcoml
push
xchg
push
xchg
push
jp
jge
test
push
lret
push
pop
insl
leave
xlat
cmpsb
lock
push
jnp
xor
or
mov
push
push
push
insl
cs
cmpsl
adc
pop
mov
repnz
dec
adc
push
cmpsl
push
xchg
push
inc
push
push
mov
lret
push
inc
push
pop
push
scas
push
jle
ss
push
xchg
test
pop
jbe
pop
pop
pop
xchg
call
pop
cmc
pop
mov
pop
pop
jne
fcomip
pop
pop
out
jmp
out
pop
repz
negl
pop
pop
lret
pop
iret
pop
rcrl
pop
xlat
pop
fistpl
pop
mov
pop
mov
mov
mov
incl
pop
xchg
pop
xchg
pop
fwait
pop
lahf
pop
arpl
pop
imul
jae
ja
jnp
jg
inc
pop
jmp
incl
dec
pop
dec
pop
push
pop
push
pop
pop
into
and
pop
sub
pop
xor
pop
cmp
jg
aas
pop
add
out
maxps
pop
pop
pop
sbb
pop
jecxz
out
nop
pop
xchg
pop
pop
clc
jg
or
xlat
pop
mov
aas
pop
add
pop
out
iret
pop
lcall
imul
push
push
push
and
push
hlt
push
call
push
outsl
push
jle
cmpsl
cmpsb
jg
push
push
mov
jae
inc
push
mov
dec
std
das
cli
decl
push
iret
push
push
push
xor
aam
cmpl
push
dec
ljmp
call
pop
xchg
pop
gs
ja
pop
sbb
pop
xchg
pop
movsb
lock
lcall
pop
sti
pop
popf
pop
inc
pop
adc
pop
fcompl
push
sbb
pop
popf
jg
mov
pop
dec
pop
xlat
iret
adc
inc
push
xor
jbe
ret
push
add
push
jmp
clc
lcall
repnz
push
bound
push
mov
and
push
fists
push
and
push
cmp
xor
jb
ss
push
ret
das
and
mov
push
cmp
hlt
push
ret
push
fisttpl
mov
cltd
push
and
pop
dec
or
loop
aas
rcrb
xchg
pop
xor
pop
push
xchg
movq
and
lcall
cmp
adc
stos
pop
mov
lcall
addb
sub
bound
lahf
lcall
or
sbb
fcoms
push
pusha
push
jl
mov
push
loope
in
push
hlt
push
fstl
push
xchg
push
gs
mov
ja
js
push
js
jns
inc
inc
and
mov
push
mov
push
dec
push
pop
push
and
push
loop
mov
ficoms
push
mov
mov
inc
push
cmc
lcall
dec
outsb
inc
cmp
or
sbb
jmp
xchg
push
rclb
mov
test
addr16
jnp
jl
push
push
mov
and
push
add
push
rcll
push
fisttps
ljmp
je
jg
xor
pop
adc
pop
iret
cli
mov
pop
xor
aas
pop
mov
push
in
stos
sbb
push
cmpsb
lds
rorb
pop
popa
and
pop
sbb
negl
pop
jo
hlt
pusha
add
mov
pop
mov
or
lock
fucomip
inc
push
push
push
and
push
das
cmpsb
loopne
repz
or
mov
lcall
dec
test
push
xchg
push
fwait
push
add
push
imul
push
inc
push
dec
push
dec
push
sbb
push
pop
push
es
xchg
push
ljmp
aad
movsb
push
mov
mov
push
push
push
push
sub
std
call
pop
push
push
push
jecxz
notb
push
test
test
cs
rclb
pop
push
and
push
or
out
push
jmp
fdivp
push
call
scas
xchg
push
jae
inc
push
xor
push
or
push
pop
push
in
push
ficoml
push
adcb
lea
ds
scas
rclb
jnp
inc
push
push
push
pop
add
push
bound
aaa
loopne
push
icebp
rclb
cmpb
and
lock
clc
jmp
push
insb
sahf
dec
pop
daa
pop
adc
pop
out
pop
icebp
stos
rcrl
mov
mov
push
and
inc
fidivrs
pop
adc
pop
je
mov
scas
das
loop
pop
cld
pop
mov
jle
inc
pop
and
xor
xor
scas
inc
icebp
pop
test
pop
xchg
sbb
out
ret
pop
dec
lret
lock
mov
pop
pop
cmp
arpl
outsl
push
loopne
popa
push
imul
or
push
sti
lcall
or
sbb
push
in
in
push
sarb
cmp
filds
lods
push
mov
push
pushf
push
dec
push
add
push
fists
ret
rclb
sahf
add
or
outsl
cmp
push
rcll
push
test
xor
push
pop
xor
outsb
fsts
push
xchg
push
pusha
int
cmpsb
sbbb
push
pop
cmp
pop
or
pop
stos
pop
aad
cmp
rcll
pop
jg
mov
pop
sbb
pop
pop
cmpl
mov
cwtl
divb
inc
jno
inc
out
pop
push
push
jle
pop
xchg
pop
fmull
pop
inc
pop
push
pop
sti
pop
mov
xor
ljmp
cli
or
arpl
jle
pop
push
and
mul
mov
lock
call
push
lret
fimuls
push
loopne
push
push
pop
push
sbb
rclb
push
jns
inc
pop
and
adc
cli
sbb
stc
pop
rcrl
vcvtdq2ps
pop
pop
inc
cmp
pop
sub
pop
adc
call
ret
dec
mov
pop
in
pop
cmp
imul
xchg
mov
andb
push
push
push
mov
mov
mov
cli
dec
jo
push
daa
push
or
inc
or
das
stos
push
adc
sarb
xor
fwait
icebp
aad
xchg
jmp
push
or
lcall
pop
sbb
lock
ret
pop
jge
push
pop
fcomps
pop
stos
jmp
pop
jno
pop
pop
in
mov
pop
dec
pop
sub
sbb
pop
clc
push
mov
dec
dec
addl
mov
xor
push
mov
rcrb
pop
fdivl
mov
mov
pop
fwait
pop
imul
sbb
imul
xchg
and
ljmp
icebp
imull
push
sbb
push
mov
push
jecxz
jae
pop
push
loope
xor
outsl
push
jbe
cmp
fisttpll
push
stc
sbb
push
aad
das
les
dec
lea
push
add
jp
jge
inc
push
lret
les
repnz
ljmp
jp
push
dec
mov
sbb
xorps
int3
pop
imul
adc
mov
and
pop
mov
xor
loopne
pop
int3
sub
es
and
pusha
jecxz
jl
push
rclb
and
dec
ja
or
push
pop
pop
push
stc
push
fs
push
ret
push
sub
iret
push
mov
adcl
adc
push
cld
pop
adc
mov
ret
fs
jae
add
add
dec
into
push
and
push
jg
pop
add
pop
sbb
lret
mov
pop
lea
pop
fwait
pop
pop
inc
test
popf
pop
gs
inc
pop
bound
cmc
push
stos
mov
outsb
cld
pop
mov
lcall
mov
mov
dec
inc
add
ja
notb
push
aam
lock
push
int3
mov
push
cwtl
push
dec
push
ss
adcl
pop
icebp
jp
sub
aaa
cmp
push
mov
imul
mov
push
xor
sbb
roll
cli
imul
adc
push
push
jg
push
or
push
push
push
and
push
ljmp
push
ja
cmp
sbb
pop
fistpl
inc
pop
mov
mov
pop
dec
pop
inc
cmp
cli
push
adc
lods
mov
cmp
pop
movsl
lcall
push
or
rcrb
push
out
push
adc
push
fstl
jle
pop
inc
int
stos
add
jl
mov
bound
sbb
pop
roll
std
pop
aaa
dec
jo
fistps
aad
gs
push
pop
inc
in
mov
pop
xor
pop
mov
push
pop
das
pop
push
pop
jmp
ret
xor
push
dec
jg
cs
push
fldt
push
jmp
lds
push
lea
push
clc
push
lea
jecxz
push
jbe
push
xchg
push
sub
xchg
push
ret
pop
adc
out
imul
dec
loop
lea
scas
ss
cmp
mov
lea
push
xor
push
push
testl
mov
pop
aad
pop
hlt
fisubrl
ja
fs
inc
and
in
rcrb
ss
pop
mov
pop
mov
xchg
xlat
shrl
shlb
js
inc
cmp
movsb
push
mov
lahf
push
inc
push
pop
push
mov
mov
rcrb
push
pop
push
das
push
push
push
sbb
sbb
xchg
jb
adcb
call
es
pop
push
aam
aad
lcall
fmuls
sbb
mov
lret
hlt
call
push
int
jecxz
add
lods
cltd
push
push
mov
bound
push
dec
push
add
adc
xor
push
adc
mov
test
pop
and
pop
pop
adc
pop
cli
pop
int3
pop
mov
pop
xchg
jmp
inc
pop
add
cmp
adc
pop
aam
pop
mov
sahf
pop
popa
pop
xchg
jae
add
cmp
fisttpll
adc
pop
movsl
adc
pop
jmp
pop
add
sahf
std
jb
pop
xchg
pop
xchg
fcoml
aaa
adc
inc
pop
or
push
pop
fucom
shrb
pusha
push
add
pop
mov
incb
ficoms
dec
incb
push
or
loopne
push
inc
jl
sbb
insb
neg
or
add
insb
push
jbe
jle
inc
push
dec
push
push
push
pop
sub
adc
push
adc
sbb
dec
lret
push
pop
cmpb
cmpsl
scas
push
mov
out
push
xchg
push
insb
fwait
sbb
add
push
pop
mov
out
ret
call
push
push
mov
pop
pop
pop
fimull
jp
lods
xor
sub
jmp
cli
js
das
push
rcrl
fisttpl
or
mov
pop
clc
or
add
jl
push
sub
cmp
mov
inc
in
jmp
aad
filds
scas
push
xchg
xchg
push
insb
pop
ficompl
orb
push
out
call
jb
jno
jle
push
daa
add
cmp
push
repnz
roll
push
xchg
adc
jg
and
call
shll
adc
push
insb
adcb
cmp
push
in
dec
adc
adc
push
jge
jg
hlt
fwait
dec
or
push
cmp
mov
fcoms
cli
pop
lea
ljmp
pop
sbb
test
test
aam
mov
and
imul
mov
pop
add
add
pop
lock
loopne
pop
cltd
pop
xor
cmp
pop
or
adc
cmp
aaa
test
add
pop
test
pop
xor
or
jp
pop
dec
ret
push
pop
push
pop
and
add
cmp
cmp
paddd
cld
push
push
push
sbb
dec
push
or
and
push
sub
push
imul
mov
push
bound
jl
cmp
push
sahf
xchg
stos
loopne
jl
push
and
push
test
data16
rorl
pop
sub
ljmp
outsb
pop
adc
rcrl
aaa
adc
leave
ret
or
mov
xchg
out
ret
into
rcrb
add
push
shlb
xchg
push
fs
loope,pt
rol
divb
sbb
xchg
iret
lock
sub
adcb
pop
push
jne
in
sbb
xchg
push
jmp
adc
mov
push
add
fiaddl
test
ja
mov
arpl
pop
add
shrb
movsl
pop
mov
jo
inc
pop
pop
pop
or
test
add
inc
movsb
pop
lods
push
mov
jno
add
cld
in
outsl
jb
pop
pop
sbbb
pushf
pop
popa
pop
imul
inc
pop
cli
pop
fistpl
adc
push
pop
pop
fnstsw
shlb
cmp
movsb
sahf
adc
dec
outsl
incb
xlat
pop
mov
adc
or
sbb
insb
pop
pop
inc
jl
pop
xchg
roll
shlb
add
mov
push
add
push
ss
pop
lcall
adc
je
cmpsl
pop
and
pop
sub
inc
adc
paddd
cmc
pop
adc
stos
fwait
push
movsb
or
in
xchg
notl
xchg
cwtl
push
cmc
push
mov
mov
pop
shlb
addr16
outsb
jl
jg
inc
push
dec
push
push
in
cmp
push
idiv
sub
mov
stos
push
scas
push
mov
mov
mov
push
xchg
pop
hlt
aaa
jg
push
push
xchg
push
xchg
fwait
push
lahf
push
arpl
mov
bound
xchg
sbb
stos
sbb
pusha
add
xchg
or
lahf
push
mov
imul
pop
inc
sbb
add
in
decl
mov
add
pop
add
or
in
out
mov
mov
rcrb
js
adc
jl
jg
fwait
inc
dec
pop
pop
xor
or
push
pop
in
out
pop
les
repz
xlat
pop
test
sbbb
inc
pop
sub
sbb
roll
pop
fsubs
jns
pop
test
pop
ljmp
enter
push
js
dec
push
or
push
fisttpl
add
repnz
sti
push
ret
push
pop
call
int
test
mov
mov
pop
inc
push
sti
mov
push
push
push
and
push
xor
ds
pop
adc
clc
test
push
push
sub
loop
dec
fcoml
mov
hlt
sub
rolb
adc
xchg
shr
xor
stos
loop
add
push
ja
push
pop
repnz
lcall
jne
lret
pop
into
pop
ficompl
fistps
pop
adcb
frstor
les
add
sti
push
pop
push
or
pusha
pop
jmp
jae
push
int3
xchg
cs
pop
push
dec
dec
pop
push
pop
and
add
loopne
test
mov
pop
imul
push
and
pop
pop
pop
push
push
icebp
pop
add
loopne
mov
inc
lock
in
outsb
popf
or
fwait
or
push
push
loopne
xchg
push
or
xor
push
xor
push
and
push
ficoms
in
mov
push
adcl
push
subb
push
insb
pop
inc
loopne
sub
das
les
add
test
loopne
leave
push
xlat
loopne
dec
sbb
xchg
mov
sbbb
pop
aam
push
sbb
insb
push
pop
pop
and
xchg
cwtl
or
sub
push
jg
pop
call
aaa
push
enter
stc
push
icebp
scas
cli
pop
lret
push
nop
push
jge
dec
call
push
sbb
sbb
push
mov
test
push
ljmp
adc
push
adc
stos
pop
lods
into
je
push
cmpsb
mov
push
popf
mov
or
mov
mov
pop
rclb
jbe
push
xchg
push
inc
push
scas
add
pop
test
mov
xchg
xorb
popa
or
clc
fstpl
dec
pop
push
pop
sbb
pop
push
mov
pop
xchg
inc
stos
pop
mov
ss
daa
push
adc
inc
mov
jo
adc
push
pop
fiaddl
sbb
push
ret
push
fcoml
mov
mov
sbb
std
push
test
push
adc
add
sar
jo
dec
push
push
push
or
push
mov
ss
jbe
pop
push
and
adc
ljmp
push
inc
or
rcrb
xchg
pop
daa
mov
jg
lcall
pop
pop
ss
sahf
negb
mov
pop
cmp
pop
add
inc
jne
loope
pop
pop
int3
loopne
out
js
add
pop
stc
pop
ret
loopne
mov
mov
add
inc
cli
scas
pop
mov
mov
add
pop
push
mov
pop
popf
push
imul
pop
jno
jp
outsb
adcb
inc
pop
dec
pop
aam
fstpt
push
pop
pop
mov
and
pop
ss
cmp
push
in
add
fimull
pop
adc
and
push
in
jo
push
mov
pop
std
dec
pop
lret
pop
int3
push
mov
mov
mov
add
push
js
pop
andb
orb
stos
lds
outsb
popa
pop
xor
jo
mov
outsb
inc
add
test
add
adc
es
xor
aas
and
adc
sbb
movsl
fiadds
cld
add
pop
call
sti
pop
cld
xor
pop
enter
fistps
add
jbe
pop
xchg
mov
cltd
mov
jb
pop
jge
mov
adc
and
lods
loope
mov
mov
and
and
rclb
loopne
aad
push
mov
sarb
rcll
dec
mov
push
aaa
lods
xor
push
cmp
out
dec
decl
push
cmc
push
sub
xor
push
popa
push
icebp
pop
inc
incl
xor
or
push
push
push
sbb
jg
pop
pop
in
out
push
repz
cli
sar
rcll
outsb
fistl
mov
add
clc
pushl
mov
addr16
imul
test
pop
sub
cli
push
leave
push
fdiv
outsb
stos
adc
add
or
cmpl
mov
outsl
cld
push
rcll
cld
jg
test
and
pop
cli
pop
jmp
in
pop
cmc
pop
test
pop
orb
inc
mov
cmp
mov
scas
or
dec
adc
adc
pop
jo
daa
or
cmp
fsubs
add
loopne
jnp
pop
adc
add
cld
call
add
push
pop
push
lock
push
mov
jl
hlt
fbld
add
adc
push
mov
popf
sarb
test
mov
mov
hlt
jge
or
lock
cli
pop
ret
test
fistpll
xor
sub
xor
rclb
or
pop
adc
in
ljmp
lock
ret
pop
lret
pop
roll
mov
lock
lahf
pop
pusha
pop
push
jno
js
insl
insb
ret
mov
pusha
push
or
ljmp
sbb
decb
push
push
add
push
out
push
repnz
scas
add
push
into
push
rclb
cwtl
scas
mov
mov
push
xchg
push
sahf
add
push
jb
pop
dec
jmp
push
inc
and
fnstsw
lock
adc
push
out
push
std
lcall
adc
push
cmpsb
push
mov
xchg
xchg
push
push
jbe
jp
rorb
pop
inc
mov
sbb
sub
outsl
push
xor
add
xchg
mov
sbb
mov
ss
push
push
sbb
push
notb
cmp
clc
lcall
or
xchg
inc
push
push
jbe
inc
nop
xchg
mov
jnp
dec
or
push
out
test
sbb
add
push
idiv
mov
ja
stos
push
data16
push
outsb
xor
sbb
inc
rorb
push
push
loopne
cmc
lods
sahf
pop
ss
push
and
mov
add
shlb
or
jle
push
sbb
push
push
rorb
sahf
jmp
add
paddb
incl
xchg
mov
add
add
stc
inc
add
sbb
mov
jge
add
mov
or
lock
jmp
test
shll
in
add
add
repnz
sarl
pop
hlt
scas
fcomps
lods
std
stos
icebp
lret
pop
push
jae
test
mov
ret
xor
out
push
std
call
mov
jo
jg
divl
bound
sbb
lcall
scas
mov
stc
adc
leave
lea
pusha
jo
ja
inc
xchg
add
adc
mov
mov
add
cmc
gs
fdiv
lcall
cli
dec
into
ja
fdiv
orl
mov
lret
mov
inc
fdivrp
data16
sti
add
pop
and
add
decl
inc
inc
movsb
mov
out
adc
movsb
adc
mov
sub
nop
push
aam
cmp
inc
sar
adc
loop
jg
xchg
push
fcmove
add
sbb
sbb
mov
subb
mov
loope
push
test
cs
icebp
sti
xlat
pop
cltd
cli
dec
dec
cs
mov
sub
ljmp
movsb
jg
nop
out
cmpsl
sbb
jbe
outsb
sbb
cmp
in
dec
testb
mov
dec
insb
mov
mov
cmp
clc
lcall
je
mov
cmp
fst
dec
push
arpl
cli
stos
ljmp
mov
xor
mov
pop
lock
je
push
mov
xor
test
mov
outsl
cli
pushl
pop
pcmpeqd
mov
pop
mov
dec
mov
xor
pushl
stos
and
ljmp
aas
cmc
jns
stos
mov
pop
nop
mov
dec
add
test
cmc
or
fidivs
inc
movb
mov
loopne
mov
xchg
add
xor
xor
pop
subb
enter
add
daa
out
mov
gs
or
pop
int3
icebp
jbe
imul
cmp
addr16
xor
xchg
xchg
scas
xor
jle
cs
mov
jg
movsb
cmp
and
xchg
std
ss
add
mov
mov
and
aad
mov
addb
test
stos
test
inc
orb
mov
imulb
add
std
int3
stc
mov
jo
cmp
sub
decl
movsl
bound
and
sbb
gs
loope
cmp
xchg
lahf
mov
inc
push
adc
movswl
cmp
or
imul
push
jb
je
arpl
push
gs
fs
imul
inc
outsl
iret
in
ja
jb
imul
cmp
pop
arpl
jae
inc
push
inc
gs
jns
and
imul
stos
adc
scas
fsts
in
push
lods
jge
jae
dec
jne
js
push
gs
outsb
aaa
or
out
dec
dec
outsl
dec
imul
js
lock
rcr
inc
cltd
je
sub
outsb
outsw
push
pop
add
mov
cmpsl
aaa
pop
or
pop
inc
xlat
add
and
outsb
push
or
inc
sbb
jge
sbb
pop
inc
push
sbb
andb
fbld
test
into
and
mov
or
and
test
mov
adc
mov
push
movsb
cmp
call
or
stos
arpl
ja
sub
adc
sbb
push
inc
sub
push
xor
dec
shll
mov
push
inc
adc
sbb
inc
in
int3
inc
push
sti
adc
push
add
dec
fildl
mov
sahf
inc
fsts
xor
pop
mov
dec
ljmp
jge
popf
adc
bound
add
aad
pop
outsl
add
inc
push
imul
fs
mov
pop
inc
insb
insb
sbb
loope
fidivl
jo
add
cmp
ds
jg
or
or
push
outsb
imul
add
mov
insl
dec
gs
push
cli
imul
mov
mov
jp
push
jne
jns
cld
arpl
lods
or
cmp
imul
popa
imul
cs
imul
jg
dec
jo
outsb
push
sbb
je
loopne
mov
mov
and
xchg
cmp
fsts
outsb
push
subb
outsb
sub
add
add
jg
outsb
fs
dec
mov
rcll
notl
sub
xor
push
mov
dec
insl
in
jae
cmp
popa
fiaddl
aam
sarb
leave
cmpsl
inc
popa
arpl
stos
adcb
pop
icebp
fs
xor
inc
adc
jae
push
icebp
push
sbb
loop
fidivl
sti
sbb
push
in
imul
mov
cltd
push
ja
add
mov
mov
dec
jge
jmp
addr16
xor
jecxz
sub
adc
adc
sarb
stc
test
daa
xchg
and
adc
add
fnstenv
sbb
addr16
pop
inc
mov
lods
or
xor
sub
add
sub
aas
xchg
rcll
sub
and
out
push
add
mov
stc
dec
sbb
iret
push
inc
sub
ror
inc
xor
push
cmpxchg
and
sbb
sub
inc
sbb
inc
jbe
pusha
lea
or
mov
popf
fld
mov
push
mov
xchg
test
add
push
dec
cmp
jg
lock
dec
and
orl
inc
leave
inc
xchg
add
fmulp
xchg
xor
pop
out
inc
in
rorl
add
pop
add
jae
fidivrs
lea
push
jo
test
outsb
les
out
jns
mov
in
je
push
xchg
push
mov
cwtl
fadds
imul
push
lret
je
inc
fistl
cmp
or
add
outsb
push
cmp
jle
sbbb
add
sahf
pop
dec
inc
pop
xchg
dec
sahf
xchg
cmpsb
jb
jb
xor
pop
push
les
dec
inc
jae
aam
pop
sbb
scas
dec
dec
mov
sbb
ds
adc
ss
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
or
add
and
add
pusha
add
addb
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
push
add
add
jo
add
add
add
add
add
add
rolb
add
add
add
test
add
add
add
add
add
add
add
add
add
cwtl
add
add
and
add
add
in
add
add
add
add
add
add
add
rolb
add
sub
xor
add
in
add
add
add
add
inc
add
push
add
fwait
and
adc
xor
sbb
inc
pop
inc
out
inc
insl
iret
cmc
mov
aad
pop
into
loope
dec
lds
in
push
mov
pop
push
xchg
imul
xor
daa
aaa
mov
stc
cmpsl
dec
rclb
lret
fildll
jl
lret
xchg
jne
xchg
mov
lret
scas
std
shrb
movb
leave
adc
je
and
mov
pop
fildl
inc
idivb
call
cmpsb
cli
add
gs
sbb
out
sub
push
push
sbb
mov
pop
int
inc
in
pop
add
loopne
cmp
addr16
jl
fistpll
add
xchg
lret
pop
in
push
icebp
icebp
jb
pop
jp
sti
jge
pop
ljmp
push
xchg
fimull
fstpt
lea
inc
js
xlat
lods
and
in
rcrb
jbe
mov
stos
shl
icebp
repz
xlat
pushf
icebp
lods
popf
cmp
push
popl
std
pop
mov
outsb
and
pop
repnz
fcomps
subb
inc
ljmp
out
out
sub
mov
dec
lahf
hlt
fwait
enter
xlat
icebp
cmpsl
fwait
outsb
daa
movb
mov
mov
xchg
jo
sti
sti
dec
xchg
adc
ja
mov
cmpb
lahf
in
aam
sub
jmp
inc
dec
nop
gs
pop
inc
adc
std
add
dec
push
fdivl
push
xor
ljmp
mov
inc
decl
mov
or
xchg
jecxz
and
mov
aad
mov
ds
in
gs
in
push
inc
mov
mov
push
dec
jo
mov
push
push
dec
sub
enter
pop
cmp
mov
mov
xor
fimuls
repz
mov
adc
shl
dec
fcom
and
ss
xor
adc
cwtl
out
movsl
das
imul
iret
inc
insl
sub
pushf
stos
jnp
lea
push
pand
pop
and
outsb
les
jge
inc
cli
sub
divb
popa
mov
in
mov
adc
mov
dec
je
jno
push
js
or
adc
xchg
js
and
mov
xchg
sbb
mov
sub
std
xchg
rcll
sahf
adc
fistps
ds
ja
cmc
jns
mov
push
cwtl
cmp
sbb
mov
cmpsb
sub
clc
mov
jb
aaa
stc
jmp
mov
sub
out
pop
int3
ljmp
mov
movsb
int3
push
mov
les
mov
mov
add
inc
xor
inc
arpl
or
mov
push
adc
negl
aam
enter
aam
and
fsts
pop
fcmovnb
or
in
stc
orb
dec
cmpsb
sti
adc
sbb
test
loopne
cmc
xchg
rolb
push
dec
imul
sahf
outsl
and
int3
ret
push
sahf
adc
add
or
xchg
cmp
push
nop
mov
test
dec
aas
adc
mov
in
pop
dec
xor
and
add
loop
push
insb
xor
lock
cmp
mov
cld
mov
mov
or
cs
ror
and
clc
dec
mov
arpl
add
movsb
xchg
popa
xor
push
push
jne
adcb
and
push
jns
clc
dec
jnp
dec
int
leave
packsswb
cmp
jg
adc
test
aaa
fimuls
pushf
mov
sub
pusha
mov
pop
ret
push
xor
sbb
sbb
repz
cmp
add
dec
cmp
ret
pop
stos
imul
jl
stos
imul
outsl
rcll
pusha
or
or
in
mov
jmp
inc
data16
push
movsb
cmpsl
inc
gs
daa
pop
pop
daa
xchg
xor
dec
pop
and
scas
iret
add
nop
dec
dec
mov
add
inc
pop
icebp
sub
loope
popa
add
push
movsb
aaa
sub
gs
nop
movsl
mov
sbb
xchg
enter
mov
mov
jae
out
mov
xor
hlt
test
pop
add
in
add
and
aad
cmovae
in
xor
jp
imul
xchg
mov
or
aad
insb
lret
sarl
mov
mov
jl
mov
addb
stc
xchg
adc
jne
stos
dec
pop
repnz
ret
shrl
xchg
xor
or
fdivr
mov
fistps
outsl
and
sti
sub
xorl
push
pop
mov
push
add
ret
mov
jbe
test
sub
xlat
mov
dec
cs
rcr
pop
inc
xchg
cld
jnp
push
xchg
mov
pop
jecxz
aad
test
call
sahf
xorb
and
or
xchg
roll
or
add
jecxz
xor
fidivrs
lock
test
lret
dec
cmp
hlt
xchg
add
mov
adc
stc
nop
daa
mov
fmul
clc
jnp
dec
cwtl
add
push
xor
cmp
mov
xchg
les
leave
or
arpl
iret
fisubs
ljmp
std
loop
dec
sbb
outsb
loopne
sbb
inc
mov
pop
cmpsl
adc
stos
sbb
and
dec
nop
sbb
aad
mov
ds
mov
mov
lds
das
mov
cmpsb
xchg
jbe
rep
cmp
push
lcall
push
push
stos
or
mov
mov
xor
adc
cmp
std
dec
jl
sti
jmp
call
or
popa
pusha
push
and
rcrb
jp
cmp
cmc
jp
xchg
loopne
cmc
ljmp
js
add
iret
xor
push
jle
xor
decb
out
adc
dec
in
xchg
sub
dec
lcall
shlb
out
xchg
or
loopne
fdivl
repz
pop
popa
std
lock
sbb
stos
out
movsl
test
out
ja
sbb
push
sbb
push
push
arpl
pop
mov
jg
rorl
xor
push
lods
jle
ffree
mov
add
repz
mov
stos
out
movsb
xor
mov
mov
mov
jns
mov
ret
push
and
jno
outsb
ss
repnz
leave
lret
aaa
mov
dec
aam
jne
and
andb
sub
test
fsts
gs
push
dec
inc
inc
add
out
icebp
cltd
lret
imul
loope
rorb
lock
mov
sub
xchg
sahf
add
ficoml
mov
push
cmp
jb
adc
xlat
inc
mov
sbb
or
sti
sahf
fistpll
adc
push
mov
call
les
cwtl
ffreep
je
push
add
mov
dec
in
adc
repz
xorb
dec
addb
push
test
adc
popf
in
pop
mov
fdivrs
cltd
mov
jl
and
mov
into
ljmp
xchg
xchg
cld
xlat
outsl
mov
jmp
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
jo
add
add
xor
xor
xor
cmp
xor
xor
add
add
push
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
push
add
outsb
add
add
je
jb
add
and
push
add
data16
add
jb
add
add
outsb
add
add
add
add
pop
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
and
push
add
add
add
outsb
add
sub
add
arpl
imul
add
and
inc
add
add
outsb
add
add
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
je
add
outsb
add
insb
add
popa
add
add
add
push
add
inc
add
add
add
sub
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
imul
add
je
jb
add
and
push
add
data16
add
jb
add
add
outsb
add
add
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
inc
add
xor
add
add
add
add
add
pop
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsb
add
add
and
push
add
add
add
outsb
add
sub
add
arpl
imul
add
and
inc
add
add
outsb
add
add
add
sub
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
xor
add
add
add
pop
add
pop
add
add
add
pop
add
add
add
add
xor
add
add
add
pop
add
add
add
xor
add
add
add
pop
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
add
add
aaa
pop
add
add
int
pop
add
add
aam
pop
add
add
loope
pop
add
add
jmp
xor
add
add
add
aaa
pop
add
add
cli
aaa
pop
add
add
add
pop
add
xor
add
add
add
cmp
int3
xor
add
add
add
cmp
aam
pop
add
add
add
pop
add
xor
add
add
add
xor
add
add
add
cmp
in
xor
add
add
add
pop
add
xor
add
add
add
pop
add
xor
add
add
add
pop
add
add
pop
cmp
or
pop
add
add
add
pop
add
add
jo
pop
add
add
ja
pop
add
add
cmpb
add
add
mov
pop
add
add
xchg
cmp
cmp
pop
add
add
add
pop
add
add
add
pop
add
add
add
xor
add
mov
pop
add
add
add
add
cmp
fs
add
leave
cmp
insb
xor
add
aam
pop
add
add
add
add
cmp
jl
pop
add
add
add
cmp
test
add
out
cmp
mov
add
clc
cmp
xchg
xor
add
add
pop
add
add
or
xor
add
pop
cmp
lods
xor
add
and
pop
add
add
sub
pop
add
add
cmp
les
add
inc
cmp
int3
xor
add
dec
cmp
aam
pop
add
add
add
pop
add
xor
add
pop
cmp
in
pop
add
add
add
pop
add
xor
add
imul
add
xor
add
jbe
pop
add
xor
add
jge
pop
add
pop
add
add
add
ss
add
add
add
ss
add
add
add
pop
add
add
add
ss
add
add
add
ss
add
add
add
ss
add
add
add
ss
add
add
add
cmp
inc
ss
add
add
add
cmp
dec
ss
add
add
add
cmp
push
ss
add
add
add
cmp
pop
ss
add
add
add
cmp
fs
add
add
add
cmp
insb
ss
add
add
add
cmp
je
pop
add
add
add
cmp
jl
pop
add
add
add
pop
add
add
pop
cmp
mov
pop
add
add
add
cmp
xchg
ss
add
add
add
pop
add
add
cmp
movsb
ss
add
add
add
cmp
lods
ss
add
add
add
pop
add
add
dec
cmp
mov
add
add
pop
add
ss
add
add
add
pop
add
ss
add
add
add
pop
add
ss
add
add
add
pop
add
ss
add
add
add
add
ss
add
add
add
pop
add
add
add
ss
add
add
add
ss
add
add
add
aaa
pop
add
add
add
aaa
pop
add
add
add
aaa
pop
add
add
add
aaa
pop
add
add
add
cmp
and
pop
add
add
add
cmp
sub
pop
add
add
add
cmp
xor
pop
add
add
add
cmp
cmp
pop
add
add
add
cmp
inc
aaa
pop
add
add
add
cmp
dec
aaa
pop
add
add
add
cmp
push
aaa
pop
add
add
add
cmp
pop
aaa
pop
add
add
add
cmp
push
cmp
cmp
cmp
inc
cmp
push
cmp
pusha
cmp
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
cs
insb
add
ja
xor
fs
insb
add
push
fs
insb
add
push
cs
insb
add
data16
fs
insb
add
fs
insb
add
insb
insb
add
jne
cs
insb
add
push
ja
cs
insb
add
dec
cs
insb
add
dec
cs
insb
add
cs
insb
add
jbe
jo
xor
cs
insb
add
push
cs
insb
add
jp
cs
insb
add
inc
cs
insb
add
push
push
cs
insb
add
imul
fs
insb
add
inc
imul
insb
insb
add
push
xor
cs
insb
add
cmp
fs
insb
add
jae
cs
insb
add
push
pop
dec
cs
insb
add
cs
insb
add
push
dec
cs
insb
add
push
gs
push
add
push
je
jb
fs
insb
add
imul
addr16
cs
insb
add
jo
dec
cmp
fs
insb
add
inc
imul
push
cs
insb
add
cs
insb
add
pop
cs
insb
add
outsb
aaa
cs
insb
add
dec
jae
cs
insb
add
gs
cs
insb
add
popa
fs
insb
add
aaa
inc
dec
push
cs
insb
add
push
insl
inc
ja
fs
insb
add
push
cs
insb
add
cs
insb
add
pop
bound
fs
insb
add
jb
ja
fs
insb
add
dec
aaa
cmp
fs
insb
add
insb
dec
cs
insb
add
popa
push
cs
insb
add
push
popa
dec
cs
insb
add
aaa
xor
add
push
cs
insb
add
jb
fs
insb
add
fs
insb
add
inc
inc
cs
insb
add
xor
cs
insb
add
insl
cs
insb
add
pop
dec
jp
cs
insb
add
cs
insb
add
dec
insl
cs
insb
add
cs
insb
add
cs
insb
add
popa
xor
fs
insb
add
addr16
pop
cs
insb
add
push
push
cs
insb
add
dec
jo
aaa
cs
insb
add
cs
insb
add
jno
outsl
gs
insb
add
xor
fs
insb
add
cs
insb
add
outsb
cs
insb
add
push
jne
cs
insb
add
imul
fs
insb
add
cs
insb
add
imul
fs
insb
add
dec
arpl
cs
insb
add
dec
inc
push
cs
insb
add
xor
inc
jae
fs
insb
add
push
insw
cs
insb
add
xor
cs
insb
add
cs
insb
add
inc
inc
cs
insb
add
cs
insb
add
pop
jbe
js
fs
insb
add
pop
bound
fs
insb
add
popa
cs
insb
add
jbe
js
fs
insb
add
cs
insb
add
dec
dec
cs
insb
add
dec
cs
insb
add
imul
push
outsb
cs
insb
add
popa
inc
cs
insb
add
fs
insb
add
fs
insb
add
jbe
jbe
cs
insb
add
cs
insb
add
aaa
xor
fs
insb
add
cs
insb
add
cs
insb
add
jbe
cmp
fs
insb
add
arpl
add
dec
jne
push
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
jb
gs
imul
