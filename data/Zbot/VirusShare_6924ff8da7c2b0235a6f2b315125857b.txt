cmp
xchg
jle
repz
dec
jo
test
jae
jns
shll
sub
ss
xor
or
ljmp
push
xor
or
fbld
insb
icebp
mov
ret
and
mov
in
adc
jmp
jp
stos
lods
ljmp
jae
xorl
aas
sbbl
add
cld
jecxz
sub
adc
sti
pop
pop
cmp
or
mov
iret
cmpsl
ret
mov
ljmp
mov
pop
pop
popa
shrl
add
das
je
or
jle
fimuls
mov
decl
pop
sub
fcomps
sub
push
pusha
cld
sbb
xor
ljmp
push
dec
push
mov
lret
add
test
adc
out
dec
or
ds
jae
mov
call
jl
dec
stc
and
imul
rorb
cs
mov
dec
out
ljmp
mov
inc
adc
lahf
sbb
pusha
js
stos
push
fcoml
mov
testb
popa
pop
mov
add
dec
mov
pushf
push
push
sbb
incl
inc
insl
bound
or
mov
xor
aad
sub
lods
movsl
jle
xor
call
xchg
push
mov
je
and
jnp
push
xchg
push
jl
out
and
xor
cmp
mov
push
add
push
sar
int3
fistpll
mov
lret
pusha
cld
add
ss
decl
shll
xchg
jmp
dec
mov
mov
mov
fmull
jne
imul
fcmovne
movsl
jnp
xor
add
xchg
sbb
lahf
or
mov
scas
scas
xchg
adc
shll
in
jl
decl
fcmovnb
aad
sbb
pop
xlat
arpl
sub
mov
inc
hlt
ljmp
pusha
fdivs
test
clc
mov
mov
mov
lods
sbbl
cltd
mov
mov
ret
out
pop
insl
fmull
dec
push
std
ficoms
jne
pop
cli
xchg
jae
lcall
loopne
fisttpl
mov
push
popf
jo
sbb
mov
test
aas
imul
xchg
cmp
rcll
cli
es
cmpsb
pop
mov
popa
jns
pop
insl
inc
push
inc
mov
fstpt
scas
pop
dec
lahf
insb
jl
int3
subl
push
or
insl
pop
ja
push
leave
jo
cmp
and
in
addr16
lods
jae
clc
mov
lret
cmp
scas
or
lcall
bound
xor
sub
pop
psrld
jg
cmpsl
test
decl
xor
test
subl
fwait
popa
rol
cmpb
stos
xor
adc
mov
mov
mov
jno
repz
inc
and
adc
cmc
or
fcompl
mov
jge
and
mov
mov
dec
mov
xchg
les
test
push
xor
incl
div
insl
add
ret
stos
aaa
icebp
fadds
adc
shrl
daa
push
das
repnz
lcall
cmpsb
xor
test
lods
aam
stos
cmp
xchg
stc
inc
ja
das
add
mov
mov
js
pop
mov
add
jns
mov
mov
pop
shlb
xchg
and
cmp
adc
sub
mov
mov
stos
scas
fsubr
pop
and
push
cmp
lds
shlb
call
push
js
jp
xchg
notl
mov
jmp
xor
shl
in
incl
icebp
dec
addr16
push
popf
jno
mov
xor
cmp
or
mov
lea
or
sbb
sbb
mov
jle
mov
mov
jge
and
jne
push
or
cmc
call
imul
add
jo
repnz
mov
jne
xchg
jg
jg
pushl
arpl
xchg
cmp
dec
cmpsb
mov
inc
mov
fnstsw
mov
into
or
xchg
je
sub
sub
pop
cwtl
sbb
call
aaa
adc
rcrl
lcall
mov
cs
inc
cmovno
dec
gs
aaa
cli
and
icebp
scas
jnp
pushf
jp
push
mov
inc
jo
clc
xor
out
clc
pushl
fwait
scas
enter
dec
and
shl
lds
or
incl
notl
pop
jge
subl
imul
call
jg
aaa
xlat
add
xor
add
fsubp
enter
out
sbb
fimuls
pop
mov
mov
psraw
push
fcom
pop
dec
inc
mov
xor
inc
dec
std
jmp
lahf
call
adc
push
inc
push
flds
mov
icebp
pushl
jb
xchg
out
js
repz
loopne
inc
jnp
adc
xchg
and
mov
mov
push
scas
mov
add
xchg
bswap
insl
pop
adc
lret
jmp
mov
jecxz
jp
lret
in
daa
or
pop
xchg
cmc
sbb
les
outsl
push
pop
adc
and
in
cmpsb
outsb
mov
or
push
or
idiv
call
adc
xchg
ljmp
cld
sub
das
test
adc
sub
pushl
adc
inc
dec
pop
aas
cmpsb
or
mov
pop
jl
cmpsb
psubusw
cmp
incl
dec
rclb
stos
and
sahf
mov
xor
xor
pop
dec
lcall
cmpsb
test
hlt
xor
clc
lret
xlat
loop
std
mov
loop
clc
dec
call
ss
jmp
iret
inc
mov
inc
pop
pop
arpl
ljmp
call
mov
insb
mov
sub
mov
loop
xchg
mov
les
cs
jl
vcvttpd2dqx
into
stos
repz
and
outsl
shll
dec
cs
and
jg
decl
pop
mov
pop
in
cltd
xchg
test
add
ss
in
adc
push
std
ljmp
add
mov
pushf
stc
xor
adc
fwait
rolb
push
cmp
in
pop
and
mov
and
cmp
dec
mov
ljmp
andb
cmpl
mov
ret
stc
je
xlat
sbb
mov
jg
pop
orb
jo
lds
xor
lcall
jb
iret
mov
xor
mov
test
repz
jmp
pusha
pop
sbb
fs
push
mov
sahf
add
or
jne
into
cwtl
cmp
lcall
movsb
aad
lahf
and
cmp
flds
data16
dec
gs
call
dec
mov
addb
xchg
cltd
xorl
xchg
ja
inc
aad
das
cli
in
fbstp
push
push
int
sbb
into
mov
or
icebp
jg
push
cld
jmp
push
or
je
push
fs
jmp
into
test
enter
adc
mov
sub
push
stos
add
lock
jmp
jae
testl
ja
ljmp
sarb
out
lret
cmp
xor
sbb
jbe
jecxz
lcall
ret
mov
fistps
adc
lahf
outsl
popa
aad
lret
or
cld
in
add
push
jmp
fldl
push
jle
insl
pop
inc
xchg
push
bndldx
jo
mov
inc
mov
and
lahf
push
fistpll
xor
xor
call
dec
lods
sbb
outsb
xchg
out
sub
sub
emms
mov
das
int3
stc
or
mov
rorl
dec
cmp
xorb
sahf
adc
rcll
and
insl
pop
inc
loopne
sbb
call
add
les
mov
pop
cs
adc
int3
pop
xchg
jg
dec
lcall
mov
xor
xor
jnp
xchg
sub
xchg
or
clc
je
mov
jmp
mov
adc
pop
cld
mov
sbb
mov
sub
mov
popf
orl
mov
or
jb
icebp
stos
dec
aad
ret
push
sarl
int3
incl
pop
cmp
addr16
arpl
mov
fistps
fbstp
shrb
imul
pop
fsubp
test
insb
cltd
xchg
sub
ja
mov
jecxz
xor
lea
repnz
in
pop
ljmp
and
stos
repz
pop
jp
mov
xor
pop
jae
pushl
popf
subb
sti
cmp
repz
and
mov
add
mov
jmp
call
cld
shrb
mov
jecxz
cltd
adc
cmp
loope
sub
xor
popf
inc
ljmp
mov
ljmp
xor
call
gs
jne
cld
outsl
cmp
xchg
imul
xchg
adc
sbb
sub
fisubrs
cmpsb
jmp
out
pop
outsb
decl
pop
lcall
mov
push
push
pop
add
movsl
stc
xchg
mov
jns
pushf
mov
icebp
incl
jbe
test
shl
int3
es
pop
push
inc
inc
arpl
or
call
push
dec
shrb
enter
sbb
cmpb
lea
jae
jmp
in
push
repnz
adc
inc
pushl
mov
bound
orb
pushf
xchg
out
jle
sbbb
lcall
dec
xor
lret
rclb
fstps
mov
fwait
dec
xor
stos
inc
xlat
sub
inc
inc
ljmp
dec
jle
inc
psubb
adc
push
dec
out
jbe
jnp
adc
dec
sbb
loopne
std
dec
dec
cmp
mov
pop
mov
sub
and
stc
add
xchg
dec
cmp
call
scas
inc
loopne
mov
insl
cmc
mov
lock
ficompl
xor
add
test
mov
imul
call
push
sub
xor
fadd
test
adc
ljmp
jnp
in
mov
push
fwait
push
cmp
fistps
xchg
movsb
inc
das
cld
push
call
scas
test
sahf
dec
test
push
pop
rcrl
test
arpl
inc
sub
cld
nop
cmc
stos
add
in
gs
fldl
arpl
mov
push
scas
out
divb
leave
mov
push
imul
sub
jg
inc
les
out
mov
cmc
ljmp
and
mov
fisubrl
sbb
sub
shrb
or
call
popa
jle
mov
xchg
and
pop
loope
jecxz
lea
rcll
cmp
cli
js
fcomip
or
out
cs
add
arpl
xchg
icebp
adc
cmc
push
mov
mov
push
dec
mov
inc
inc
pop
std
adc
jbe
les
dec
mov
jp
hlt
icebp
sbb
out
stos
mov
outsl
cmp
jp
insl
pop
test
outsb
pop
jle
sbb
add
ljmp
add
aaa
push
aaa
cmp
out
pop
into
push
imul
xlat
mov
xchg
push
push
mov
lods
addr16
add
add
out
or
mov
nop
inc
inc
sarl
xor
jmp
sbb
sub
xchg
aad
test
mov
xchg
test
cmp
inc
adc
icebp
call
andb
mov
xchg
ljmp
gs
or
mov
adc
popf
mov
mov
and
cmpsb
push
lock
jmp
mulb
pop
push
jbe
sub
pushf
or
icebp
inc
pop
jae
leave
mov
incl
fimull
jp
outsl
sbb
rcrl
pop
std
call
in
int
stc
dec
push
sbb
jne
repz
pop
gs
lea
pop
push
cmc
pushl
mov
shlb
xor
jle
jg
repnz
out
lahf
pop
sub
out
hlt
out
xchg
cmp
decl
lock
pop
add
cli
jecxz
add
cmpsl
pusha
xchg
and
jb
push
inc
cs
call
mov
sub
xchg
pushf
jmp
jnp
push
rolb
add
adc
sbb
fstpt
in
mov
sbb
cmp
addb
sbb
mov
ret
jmp
stc
pcmpgtd
xchg
das
mov
pushf
aaa
std
pushf
xchg
aad
cmpsb
xor
out
jns
pop
ljmp
movsl
lods
arpl
leave
push
push
dec
mov
stc
xchg
aaa
out
test
loopne
decl
ljmp
push
push
sub
jbe
inc
call
sahf
call
jmp
mov
and
bound
sub
jp
fidivl
and
dec
rorl
repz
xor
fnsave
jbe
subl
or
call
popa
rol
sub
cwtl
pop
xor
push
adc
das
out
jmp
or
fdivs
cltd
aad
call
xchg
js
jae
mov
pop
outsb
cmp
mov
push
pop
xor
mov
cmp
xor
jg
xor
lock
shl
lahf
lea
inc
and
jo
pop
mov
mov
cli
pop
jl
push
repnz
outsb
fsubl
test
mov
inc
ljmp
lahf
inc
ss
cmp
lods
jbe
fcomip
lods
inc
outsl
nop
pop
cld
test
xchg
fs
push
pop
xchg
lcall
lcall
pop
jle
add
test
sarl
cmp
jnp
sbb
jg
lahf
stos
xorb
push
sbb
testb
ss
stos
icebp
outsb
fisubrs
loop
jbe
incl
fwait
jo
xor
fidivrl
jmp
shrb
dec
and
jg
push
push
cmpsb
push
mov
push
xor
add
sub
jnp
sub
jo
decl
ror
sub
add
mov
mov
pop
andb
jp
test
cld
inc
adc
xchg
push
mov
mov
and
mov
scas
and
mov
das
int
lcall
jae
mov
push
leave
or
sbb
sti
loopne
cmp
ret
adc
cmc
xchg
mov
loope
jmp
adc
in
outsl
inc
xchg
jns
loop
mov
jmp
lahf
cmp
negb
lret
mov
mov
lcall
xor
movsb
or
lret
dec
out
test
sub
xchg
data16
mov
mov
mov
leave
and
pop
and
lcall
inc
jg
orl
mov
inc
roll
xchg
notl
mov
lcall
adc
jge
or
icebp
filds
xchg
xchg
test
aas
les
jns
sbb
or
pushl
call
jbe
cld
sahf
pop
pushf
xor
adc
mov
sbb
xor
sbb
incl
mov
fidivl
sbb
lods
sub
lcall
decl
cmp
stos
mov
sbb
mov
xchg
xchg
stc
jmp
orl
dec
loope
les
out
and
xchg
shlb
incl
push
pop
imul
lock
push
pop
outsb
movsl
icebp
sub
xor
fcoml
addr16
and
loope
fdivrl
ss
sahf
inc
adc
mov
ljmp
rclb
out
mov
xor
stos
dec
mov
cld
test
fs
ss
ljmp
insl
mov
adc
mov
sbb
leave
int3
jge
adc
je
pushf
lret
incl
cmc
add
cmp
mov
jae
push
stos
jecxz
shll
sub
in
aam
loop
ret
call
mov
pop
adc
push
sub
add
lods
mov
mov
call
jo
push
jecxz
mov
loopne
insl
or
enter
jne
and
mov
push
or
lahf
or
mov
jno
out
dec
ja
dec
push
mov
mov
inc
sbb
cmp
mov
aad
or
nop
jle
adcb
repnz
or
cmpsl
push
jns
clc
fs
lret
push
aaa
inc
dec
mov
sub
call
in
xor
lock
add
jnp
movsl
arpl
push
mov
and
repnz
std
lcall
pop
adc
push
sub
es
pop
fsubr
pop
data16
pushl
cmpsl
jmp
fsubrp
movsb
sbb
imul
xor
sti
jae
lds
ret
out
cli
push
sub
frstor
test
jns
fwait
inc
xor
mov
adc
incl
mov
mov
subl
push
pop
and
push
loopne
or
scas
call
sub
into
mov
fistl
daa
jae
pop
inc
repz
jmp
mov
loope
aaa
divb
loop
lods
repz
lea
addr16
stc
cmp
sbb
cmpsb
cmp
mov
mov
push
add
pop
cmp
sbb
or
inc
xor
sub
cli
xchg
jl
enter
xchg
leave
jmp
pop
dec
dec
push
mov
add
repz
mov
mov
aad
sarb
scas
pushl
loop
lahf
int
or
push
ret
jg
incl
push
cmp
add
push
push
inc
push
push
ret
fsubp
rcrl
jmp
movsl
cmp
mov
nop
das
push
in
sub
movsb
pop
push
hlt
cmc
pop
dec
ss
xchg
jne
push
call
mov
insb
adc
jae
aas
pop
sub
mov
int3
cltd
ret
iret
mov
cli
pushl
and
gs
mov
fistpl
pop
jp
or
push
out
shlb
dec
scas
call
jg
leave
iret
leave
aaa
push
dec
mov
pop
jbe
and
ljmp
mov
stc
xchg
xchg
mov
mov
lret
push
or
aad
ljmp
push
and
dec
jge
inc
imul
ljmp
and
dec
jecxz
fcomip
mov
push
outsl
shrl
and
in
imul
aaa
lds
lea
repnz
xor
mov
mov
pop
call
adc
loop
push
lods
ret
xchg
inc
test
xchg
push
fistpll
jno
lds
jnp
incl
mov
pop
ds
mov
lret
xor
mov
cmp
into
ljmp
mov
cmp
mov
stc
push
and
dec
jge
test
jmp
rcrb
test
and
fcomip
or
push
outsb
loopne
mov
and
sbb
mov
rolb
call
out
xchg
mov
aaa
add
or
addb
adc
or
imul
loop
pushf
mov
std
lahf
rcrb
dec
add
imul
shr
jp
push
arpl
and
add
ficoml
lea
jne
jmp
arpl
mov
push
push
in
loope
enter
mov
xchg
pop
sub
add
ljmp
lret
hlt
inc
gs
ss
dec
jl
mov
mov
sub
jmp
push
dec
negb
mov
mov
mov
jb
push
jge
setne
adc
gs
xchg
iret
and
incl
mov
cmpsl
cmp
fidivrs
pop
loop
pop
fneni(8087
jne
mov
jb
cmp
shrl
sbb
mov
aas
jp
lret
es
jae
inc
clc
push
sbbb
mov
mov
clc
xchg
fcmove
sti
fcoms
mov
or
popa
jl
inc
outsb
testb
mov
not
jg
add
inc
lret
lcall
push
ja
mov
push
push
jg
insb
xor
xchg
imul
cmp
lea
ljmp
xor
aad
push
in
lcall
outsl
incl
or
dec
xor
sub
add
cmp
pushl
cld
mov
adc
jnp
fldl
or
shll
jg
daa
mov
sub
cmp
pushl
jns
mov
fistpl
pop
pop
jae
jnp
test
test
mov
in
aas
and
lret
enter
cmp
rorl
fisubl
or
gs
call
sub
stos
aam
les
push
xor
lods
int
in
pop
xor
adc
inc
gs
ljmp
adc
call
idivl
in
mov
add
xor
sub
rcrl
scas
mov
and
pop
cmpsl
mov
sbbl
sbb
jg
cmp
mov
jo
mov
adc
or
int
mov
divl
pop
push
leave
inc
decl
push
shll
adc
fnstenv
call
push
sub
jle
mov
push
fs
clc
int
pop
pushf
das
push
push
dec
pop
lret
dec
gs
mov
push
pop
fucompp
or
xchg
jae
jmp
push
fsubl
jl
pusha
mov
ljmp
or
lahf
jge
or
xor
orb
insb
daa
fstps
mov
call
mov
stc
jmp
call
mov
call
hlt
loope
mov
dec
loop
sub
sbb
xchg
sbb
sbb
mov
xchg
call
mov
xor
out
pusha
mov
notl
or
jl
adc
jmp
cmp
cmp
inc
lock
test
arpl
rorb
mov
sub
cmpsb
stc
decl
rorl
xor
repnz
add
insb
inc
sub
inc
call
push
popa
mov
push
mov
xchg
jae
adc
nop
mov
cmpsb
sub
mov
mov
dec
lret
inc
cmp
mov
inc
jnp
mov
dec
or
repz
sub
dec
push
xchg
or
pushf
mov
xchg
or
fprem
or
xchg
sti
xchg
aad
sar
jmp
std
inc
sbb
pop
sub
lods
stc
inc
movsl
in
xchg
push
pop
mov
mov
movsl
ss
dec
incl
push
in
push
inc
xchg
test
pop
xor
outsl
inc
loope,pn
push
inc
cwtl
cwtl
mov
pushl
pop
mov
sub
insb
mov
push
shr
filds
lcall
pop
inc
push
sahf
ret
mov
push
or
cwtl
jecxz
subb
insl
sub
into
and
mov
pop
icebp
add
popf
lock
arpl
int3
sbb
movlps
jmp
xor
cmp
sarl
rcl
icebp
and
add
pextrw
adc
xchg
pop
sbb
incl
dec
insb
mov
es
in
fadds
data16
mov
clc
cltd
or
lcall
data16
ljmp
sbb
xchg
add
xchg
pop
dec
leave
lds
scas
or
call
sar
pop
test
pop
lret
int3
xchg
xchg
and
outsl
arpl
fsubrl
decl
es
pop
addb
dec
jb
out
ds
scas
test
fs
cmp
stos
lcall
mov
jne
jge
pop
pop
cmp
ljmp
and
roll
ret
sbb
fdivs
loop
loop
mov
lcall
dec
dec
and
dec
shll
dec
ja
xchg
mov
fwait
sbb
je
mov
subl
jmp
jmp
pop
pop
cmc
adc
sbb
out
rol
xchg
inc
xor
push
pop
mov
call
adc
outsb
lock
jge
sub
push
aaa
imul
xchg
fcmove
lods
jp
popa
clc
popf
hlt
jno
incl
cmc
and
pusha
lret
mov
lret
stc
popf
sub
aad
add
lcall
popa
call
lock
mov
sub
mov
and
dec
add
push
adc
call
fsubl
in
jmp
mov
out
mov
or
lret
push
adc
call
mov
or
pop
pop
xchg
and
sub
mov
jno
lds
test
mov
cmp
cwtl
fisubs
fisubrs
cmc
faddl
popa
adc
out
sahf
in
sub
jl
pop
jmp
push
daa
xlat
pop
mov
pushf
xor
pop
lahf
xlat
mov
and
les
mov
das
sub
xor
and
pusha
and
rcr
cli
inc
xor
lds
inc
push
popf
xchg
inc
bswap
popl
or
in
push
nop
adc
mov
cmpsl
pop
ljmp
mov
decl
jp
loope
std
mov
repz
adc
xor
ret
in
cli
mov
push
insb
and
subl
mov
cmp
sbbl
mov
xor
out
cli
lcall
jnp
cmp
mov
mov
out
mov
test
incl
inc
imul
faddl
cmp
xor
arpl
test
mov
fcomip
inc
xchg
jno
dec
mov
push
sbb
mov
call
inc
xor
fstpl
lock
mov
and
loop
arpl
or
stc
cs
dec
call
jo
push
pusha
iret
hlt
cmp
xchg
stos
ss
lds
cmp
and
ljmp
xchg
xchg
stos
add
inc
xor
lods
cmpb
xchg
js
xchg
mov
lret
lcall
mov
sbb
fldl
rclb
lret
cltd
sahf
jo
and
cwtl
loope
sub
outsb
jl
inc
sub
push
insl
mov
mov
scas
les
scas
xor
stos
sbb
add
pushl
mov
fisubrs
xor
sbb
dec
lret
aas
push
scas
scas
out
jl
pop
add
cmp
inc
jo
popa
jmp
inc
sbb
dec
dec
inc
cmp
repz
js
pop
pushl
cld
in
into
test
insb
bound
std
test
lds
cmp
arpl
push
push
add
mov
mov
dec
push
mov
mov
inc
sahf
into
cmc
or
pushl
adc
xchg
inc
pop
es
subl
push
imulb
pop
push
pusha
fstp
adc
incl
mov
xchg
les
xchg
pop
lods
scas
xor
out
and
push
loop
aas
push
sub
decl
inc
fnstcw
cmp
xchg
lea
sbb
loop
call
daa
call
jmp
mov
push
xor
jbe
popa
add
mov
arpl
cmp
inc
mov
mov
sbb
xchg
out
shlb
adc
nop
cmc
aas
jae
ljmp
mov
xchg
popl
ss
inc
subb
div
loope
notb
adc
jmp
dec
rorl
maxps
out
ds
mov
dec
pop
rcll
sub
rorb
popa
mov
dec
mov
addr16
ret
mov
lcall
dec
imul
ljmp
inc
lret
imul
cld
in
in
inc
testl
in
movb
push
out
clc
into
hlt
fdivrl
pop
mov
sbb
lock
or
loopne
int
cmpsl
call
xor
push
mov
movsb
sub
pusha
sbb
xor
outsl
mov
mov
jmp
mov
mov
out
sbb
mov
in
stos
sbb
outsb
adc
pushl
sbb
shrl
cwtl
adc
xchg
pop
cmp
mov
mov
arpl
lcall
mov
jmp
movsb
test
lds
push
in
xchg
push
pop
out
stos
arpl
ljmp
dec
les
add
mov
leave
pop
cwtl
sbbb
jne
aad
daa
pop
fs
pop
insl
mov
pop
mov
ljmp
lcall
shlb
and
and
icebp
sub
popf
cld
das
int
lcall
clc
iret
cmpsl
daa
fdivrs
xchg
xchg
xchg
dec
daa
push
jno
fwait
lods
inc
lds
xchg
mov
xchg
or
ret
decl
test
and
sbb
lea
int
add
mov
addb
call
movsl
in
into
sbb
or
movsl
pop
cmpsb
fwait
pop
push
sahf
adcb
sbb
in
cmp
popf
add
pusha
pop
pop
push
jae
shrl
dec
push
stos
popa
jno,pt
stos
jp
in
sarl
add
lret
je
or
test
int3
aaa
lock
ljmp
sarb
lret
mov
xor
add
arpl
aas
scas
pop
inc
push
pop
jne
int
sti
cli
hlt
sbb
push
outsb
fstl
dec
loope
lret
push
data16
dec
pop
inc
xchg
adc
enter
jp
xor
inc
subb
pop
shlb
cs
je
cmpb
cwtl
sarl
jmp
leave
mov
fabs
dec
pushf
rolb
sar
adc
int
sti
icebp
push
sbb
mov
ret
cmp
pcmpeqw
sarl
adc
lcall
jl
push
push
outsb
js
fcomp
mov
sub
jle
cmp
js
movhlps
mov
pop
mov
jmp
mov
jmp
adc
cmp
insl
cs
sub
sub
xchg
adc
lcall
or
lods
aam
mov
fcomps
ficompl
es
adc
cmp
fs
or
iret
inc
xchg
aaa
push
es
jmp
scas
mov
leave
pop
in
mov
inc
add
fcomip
jg
push
and
lock
stos
mov
stos
pop
inc
inc
es
lret
fcomip
dec
popa
jmp
fwait
or
push
int3
push
adc
cmp
sahf
outsb
ljmp
push
out
adc
test
out
pop
dec
and
dec
mov
jae
aas
adc
pushl
jle
es
addr16
inc
stos
xlat
test
shlb
and
std
add
mov
ret
decl
or
xor
cld
add
bound
mov
xchg
xor
loopne
xchg
int
xchg
dec
in
fsubrs
add
test
sub
dec
mov
fisttpl
mov
pop
ret
xchg
or
adc
jne
jne
pop
sub
sarl
flds
pushl
mul
add
adc
iret
or
call
pop
test
adc
mov
data16
in
push
fnsave
sub
mov
dec
fldl
or
ljmp
dec
cmpl
int3
mov
push
insl
or
les
mov
mov
mov
scas
adc
lods
dec
insb
push
xchg
lds
loop
sahf
nop
outsb
aaa
xchg
inc
mov
xchg
js
aaa
jmp
xchg
std
xor
xor
loop
lahf
outsb
fcompl
mov
mov
in
decl
stos
push
pusha
push
or
loope
jmp
inc
fxch
js
jp
push
jo
js
nop
insb
shll
inc
arpl
loope
out
push
mov
out
std
notb
ja
inc
mov
out
adc
mov
fdiv
rorl
push
cmp
icebp
roll
fs
pop
xor
xchg
jp
aad
pop
and
pushl
jp
addr16
ljmp
dec
or
rcll
lea
das
cwtl
lea
jge
mov
ficomps
ret
push
mov
sbb
lods
int3
lret
push
and
les
call
out
bnd
stos
int
xor
shlb
push
shrb
adc
pop
lcall
ss
sarb
jp
sbb
repnz
mov
sub
mov
imul
xor
jle
mov
adc
add
cwtl
test
and
jle
mov
lcall
cmpsb
inc
stos
xchg
push
pop
ja
inc
imul
dec
out
or
mov
imul
aaa
sub
lcall
stc
cmp
mov
push
dec
scas
gs
add
mov
sbb
cld
xchg
js
insb
xchg
test
push
call
push
xorl
adc
stos
lahf
lods
mov
fldcw
add
ret
jb
xchg
jmp
cmp
cs
adc
jno
inc
jbe
jnp
popl
jecxz
sti
mov
imul
incb
xlat
jp
push
push
mov
mov
mov
jb,pt
les
mov
cmp
dec
sbb
pop
loopne
inc
ja
in
ljmp
mov
sub
push
stc
stos
cli
decl
inc
addr16
jb
mov
fprem1
xor
orb
clc
mov
jno
ljmp
or
adc
ss
bswap
out
clc
aam
adc
dec
jne
cmpsl
cmp
xchg
mov
mov
add
push
movsb
push
or
inc
fcomip
jg
in
mov
jbe
out
xchg
dec
shlb
mov
loopne
xchg
jecxz
ljmp
mov
jb
mov
pop
dec
adc
pop
das
hlt
sbb
inc
mov
call
je
lcall
mov
mov
in
fnstsw
cs
fwait
incb
fs
inc
fwait
pop
inc
or
push
insl
ljmp
sahf
bound
or
mov
jbe
fmulp
jbe
ret
mov
xor
pop
cli
push
dec
mov
pusha
and
fs
mov
aaa
cmp
mov
add
push
dec
jmp
cs
add
xrelease
add
lcall
incl
pushl
enter
scas
enter
iret
ret
jno
clc
push
jl
cmp
sbb
cld
cmp
ljmp
sti
and
jmp
icebp
push
add
lret
shrb
lcall
out
imul
sti
mov
test
inc
push
test
mov
repnz
adc
mov
dec
mov
jle
out
adc
or
sbb
int
adc
call
std
das
xchg
push
rol
mov
mov
mov
inc
arpl
add
push
jb
jl
mov
out
cmp
cld
xchg
mov
jbe
into
js
mov
call
ret
sti
aas
xlat
mov
mov
lds
insl
cmpsb
push
ljmp
sub
xchg
lahf
mov
xchg
pop
dec
aas
cmp
fisubrs
decl
or
jmp
in
faddl
cmc
cld
jb
or
mov
xchg
decl
pop
xor
out
mov
js
stos
in
jnp
test
jmp
pop
mov
add
arpl
std
cltd
inc
dec
pop
pop
fdivrs
jo
xchg
adc
jmp
cltd
call
ja
jb
aaa
mov
or
sub
aam
lcall
lcall
or
sbb
in
fists
push
jecxz
pushf
cmpsb
insb
mov
outsl
icebp
dec
mov
incl
pop
popa
inc
orb
pop
dec
shl
dec
daa
mov
inc
cmpsb
aam
fldl2e
clc
aas
xchg
jge
jg
or
cwtl
test
push
jecxz
dec
inc
sub
lgs
pop
out
test
mov
mov
leave
mov
shrl
repnz
xor
imul
push
mov
repz
adc
sub
jnp
lcall
sbb
dec
mov
sbb
lret
mov
dec
imul
dec
pop
jns
push
and
and
into
xchg
pop
insl
push
fwait
push
mov
mov
lret
jo
jmp
cmp
lcall
pop
fildl
sub
push
or
xchg
pop
cld
inc
mov
idiv
decl
mov
mov
xor
fisubl
out
push
mov
mov
cmp
cld
and
jg
pushl
inc
xor
or
out
push
scas
push
outsl
sub
add
icebp
call
cmp
push
sbb
ret
lret
fwait
or
mov
push
dec
pop
or
imulb
ja
push
bound
int
repz
push
std
mov
ljmp
pushf
mov
jecxz
shlb
and
sbb
stos
dec
iret
ja
mov
idivb
pop
jb
in
mov
call
add
fdivp
loope
push
mov
je
xor
sub
xchg
cmp
pushl
shl
sub
mov
push
push
mov
pusha
jg
mov
mov
imul
mov
cld
cmp
test
data16
shll
ljmp
xor
pop
icebp
in
push
inc
aaa
in
movsl
adc
sbb
ffreep
gs
adc
clc
incl
cltd
push
scas
popf
orl
mov
hlt
js
push
adc
jno
inc
rorl
push
pop
addl
push
call
into
fildll
jg
gs
stos
xchg
pop
fldt
and
hlt
sub
nop
aam
das
add
loop
cvtpi2ps
fcomip
pushl
loopne
aaa
jbe
mov
pop
icebp
or
dec
jecxz
bound
imul
call
cltd
stos
xchg
xchg
divb
cs
es
jmp
xchg
adc
hlt
or
mov
cmp
cltd
cli
xchg
jnp
xor
mov
fs
decl
out
cli
and
int3
ret
push
stc
pop
jmp
popf
iret
aam
push
adcl
and
xchg
lea
ficompl
rcrl
pavgb
inc
imul
push
xchg
push
push
adc
inc
jo
mov
adc
cmp
call
and
aas
mov
push
cmc
xor
pop
mov
leave
aam
jmp
add
ss
jg
xor
jnp
nop
sbb
push
xor
fbstp
or
pushl
jb
mov
cmp
stos
xor
pop
add
inc
xor
popa
imul
loopne
xor
jg
jge
cltd
int3
push
bound
jbe
jge
stc
add
mov
call
jae
adcb
cmc
nop
in
inc
loope,pn
pushf
jo
sbb
inc
mov
or
pushl
mov
mov
mov
mov
adc
stos
pop
cmp
sub
jae
call
movb
shlb
lods
cmpsl
pusha
mov
cld
cli
or
es
iret
lcall
sub
inc
pop
jne
push
add
jge
sahf
sbb
aaa
lret
insb
outsl
adc
fstpt
jmp
mov
and
fsts
xorl
pop
fimull
out
xor
mov
hlt
and
daa
mov
rolb
int
push
mov
mov
insl
push
lods
ljmp
in
push
lret
notl
aaa
cmpb
pop
mov
in
push
frstor
mov
mov
outsb
xor
jge
inc
or
sbb
mov
std
pushl
iret
sahf
xor
lock
lods
sub
in
ljmp
lods
push
mov
enter
popf
sub
push
add
pushl
push
dec
sub
mov
and
outsl
mov
xchg
jmp
xchg
push
mov
ljmp
outsb
gs
mov
pop
pop
popa
push
adc
lock
fcompl
cs
xor
inc
stos
lcall
std
adcb
xlat
xchg
mov
or
ss
dec
lods
jg
jmp
nop
shrb
ljmp
test
fstpl
lahf
decl
inc
or
mov
fdiv
mov
mov
dec
push
hlt
jmp
das
fistl
push
pop
xchg
push
jb
jg
sbbb
test
and
sbb
outsb
rclb
incl
jno
mov
andb
xor
cmp
xchg
mov
pop
out
sbb
roll
out
test
call
jl
sub
push
aaa
cmpsb
pop
outsl
mov
or
popw
mov
pop
sti
shrl
jecxz
adc
xor
scas
pop
adc
mov
fisttpl
jmp
jne
or
ret
pop
pop
adc
movsl
in
mov
xchg
shrb
incl
jp
int3
mov
enter
sbb
push
cs
or
xchg
out
pop
pop
call
imul
mov
adc
test
jae
xor
mov
mov
call
sub
outsb
fnstcw
into
jbe
cmp
sahf
jg
xchg
push
xor
call
push
xor
fwait
adc
jge
inc
push
mov
and
adc
cwtl
rorl
mov
decl
xchg
cmp
adc
jmp
xchg
test
mov
into
in
ret
pusha
das
cli
decl
mov
or
int3
mov
inc
loop
xor
mov
cmovl
ljmp
adc
ret
arpl
and
cltd
xchg
sub
insb
aam
mov
jmp
push
je
jp
in
lea
cmp
dec
and
incl
hlt
xlat
sbb
inc
ljmp
push
sub
jle
or
fnsave
sbb
mov
or
incl
xlat
dec
cmp
sbb
push
sub
jmp
sahf
stc
incl
sbb
cmp
les
dec
push
jo
pop
push
int
dec
push
mov
xor
aas
add
mov
cmc
and
mov
xor
xchg
lods
into
xchg
mov
ljmp
cwtl
mov
mov
aas
jp
cld
jnp
add
push
jmp
jge
call
push
mov
xchg
repz
jle
mov
dec
inc
and
cltd
leave
mov
mov
push
push
dec
cmp
enter
shr
aam
adc
cmc
cwtl
movsb
jne
jmp
cmpsl
hlt
or
cmpsb
add
lock
jae
or
fisttps
test
incl
jno
xchg
sbb
fisttps
sub
ret
imul
les
mov
sbb
das
xor
fs
das
cmp
cmp
jl
mov
sub
mov
stc
sub
cmp
jle
out
jb
inc
test
cmp
movsb
mov
scas
aas
aad
decl
loopne
adc
es
ficomps
lret
int3
clc
shrl
test
jg
or
jno
sbb
movl
fcmovbe
movsl
mov
call
mov
test
fistl
movsl
fucom
pop
jbe
push
out
lock
js
ret
decl
dec
sbb
pusha
popa
sahf
es
adc
bnd
xchg
ss
and
jmp
and
dec
pop
lahf
add
insl
xchg
aas
cltd
pop
fisubl
shr
stos
daa
popf
pop
push
cmpb
dec
mov
dec
sub
adc
pop
xor
push
ja
sbb
arpl
decl
imul
push
scas
dec
rcl
adcb
mov
mov
lea
dec
nop
fisubrl
jg
inc
jns
nop
push
mov
fsubrs
mov
push
and
in
les
decl
or
daa
push
push
ds
dec
lods
lcall
jecxz
adc
jo
or
decl
test
sti
loope
pop
sub
enter
sbb
sar
addr16
dec
xchg
sub
sar
ljmp
sbb
or
out
data16
inc
aad
test
mov
test
nop
mov
decl
mov
push
mov
aas
jnp
cmc
out
and
out
sbb
ss
mov
mov
mov
inc
rol
lret
sti
and
jbe
sbb
mov
push
jmp
mov
xor
rcr
sbb
sub
mov
inc
loop
push
or
incl
and
mov
adc
or
cld
cmpsb
aas
and
jmp
call
xor
jns
addb
xor
aas
inc
test
sub
call
outsb
mov
inc
sbb
ds
adc
cmpsl
out
je
mov
jmp
mov
pop
add
adc
icebp
adc
push
jmp
cmc
adc
data16
mov
inc
ret
mov
decl
movsb
les
mov
fisttpll
pop
add
scas
ja
lret
lock
mov
das
pop
cli
int3
mov
scas
movsb
lods
sbb
es
ds
pusha
pop
jae
lds
lcall
lock
icebp
shl
outsl
lds
pop
jmp
fdiv
inc
repz
enter
les
jp
call
inc
lret
inc
lcall
mov
push
insb
mov
pop
out
xchg
lahf
ret
int
adc
xchg
int3
aaa
sub
gs
jge
push
or
ljmp
xor
enter
in
into
sahf
int
andb
in
inc
mov
sahf
and
pop
cmp
pushl
push
cli
push
mov
pop
push
or
or
test
adc
mov
incl
insb
pop
dec
fnsave
clc
inc
jmp
sub
int3
inc
inc
scas
or
cli
pushl
dec
adc
dec
push
pushf
mov
jo
aam
jmp
loop
pop
pop
loope
inc
mov
cltd
cmp
jge
jb
inc
es
inc
sbb
jmp
inc
incl
in
ss
cmp
shrl
pop
icebp
div
push
popa
pop
pcmpeqb
jg
sub
mov
data16
idivl
jg
jmp
subl
das
and
cmpsl
in
dec
outsb
xchg
cmp
jp
inc
or
mov
inc
inc
and
and
jp
aas
movsb
mov
xlat
stc
incl
mov
jo
jp
mov
clc
call
fldcw
in
and
xor
push
add
adc
jo
aaa
cmc
adc
jge
shrb
into
sti
push
iret
movsb
add
insb
push
popa
and
sub
add
jmp
rorl
mov
repnz
into
cmp
or
outsb
dec
inc
into
sbb
out
cltd
mov
inc
mov
mov
icebp
mov
adc
inc
insb
inc
fcomip
decl
call
out
in
adc
and
xor
lcall
xor
pop
push
pop
faddl
cmp
pusha
cmpsl
pop
adc
ret
ficoms
sub
outsl
sbb
in
mov
les
mov
fildl
stc
test
push
jp
jmp
rclb
cmp
cmp
dec
mov
jae
popa
mov
mov
ror
fildl
xchg
adc
cli
xchg
cltd
adc
fistl
nop
lret
ss
insb
mov
inc
fwait
push
aaa
jge
inc
xchg
push
mov
and
mov
add
pop
je
loop
jmp
cmpsl
repz
pop
ds
dec
not
jl
cmp
insb
jb
and
mov
inc
pushl
add
pop
adc
aad
divb
mov
pop
out
pop
mov
xchg
daa
andl
std
incl
mov
adc
scas
mov
mov
repnz
lcall
sbb
lock
stc
popf
jmp
and
in
add
push
test
sbb
jg
arpl
mulb
inc
into
xchg
mov
lods
pusha
pop
cmc
mov
test
jmp
inc
xchg
cmpsb
gs
jns
ret
in
ret
adc
and
popf
test
mov
fidivs
jg
mov
jl
dec
mov
xor
adc
call
ret
outsl
dec
dec
xchg
in
xchg
fwait
cmp
or
pop
fldl
mov
push
mov
push
out
mov
pop
out
jne
xchg
ret
or
mov
xlat
popa
pop
imul
dec
xchg
nop
mov
push
inc
icebp
jle
arpl
add
and
push
ljmp
aam
mov
and
iret
leave
sahf
add
jmp
cmp
aaa
push
jp
decl
pop
fwait
int
test
addr16
and
sarb
nop
sub
mov
jl
jmp
lcall
pop
out
or
xchg
aas
push
ret
aaa
cmpsb
ja
into
xchg
jle
lcall
add
out
fmuls
cld
je
jno
jl
mov
enter
xchg
add
pop
lcall
movsb
and
pop
and
mov
mov
jmp
xor
cwtl
dec
sbb
inc
ss
lcall
fs
fistpl
jmp
lcall
jb
mov
add
dec
mov
mov
sub
adc
jl
lahf
bound
fldl
hlt
mulb
mov
test
stos
mov
dec
insl
cmp
or
testb
ljmp
inc
jae
rcll
cmp
jecxz
mov
out
mov
push
mov
lret
outsb
xchg
add
notl
cmp
and
pop
jb
in
ljmp
cwtl
pop
or
adc
add
not
ret
push
subb
push
jmp
jmp
mov
mov
push
negl
test
into
xchg
pushl
lods
xchg
pop
xor
rclb
cmc
xchg
in
cmp
xor
push
inc
pop
mov
cld
dec
and
inc
and
jmp
icebp
lods
sub
sbb
add
sub
mov
mov
lcall
out
xchg
test
sarl
movsb
or
pop
mov
push
lret
lock
mov
pop
pop
nop
push
dec
addb
int3
faddp
xchg
jno
sahf
sub
lret
jb
ds
dec
test
mov
fs
pop
or
adcl
daa
loopne
mov
imul
mov
mov
xchg
cld
loop
xor
push
xchg
dec
or
fadd
aas
popf
inc
es
sti
lds
xor
mov
pop
jg
fsts
std
test
insb
sbb
pushl
in
out
mov
std
add
push
or
push
push
mov
sar
jmp
mov
fcoms
jmp
pusha
lods
mov
pop
fcmove
fmuls
sub
jno
push
ud0
decl
add
xor
sahf
mov
std
rol
sti
out
sub
adc
lcall
movb
xlat
pop
mov
cwtl
out
dec
in
cmp
addr16
out
cli
jbe
js
xor
je
lret
loop
and
mov
scas
in
bound
jg
lret
adc
insb
into
std
mov
stos
jp
sub
in
sarb
call
xchg
aas
ret
fadd
aaa
mov
mov
sbbb
loope
outsl
inc
lret
mov
jl
pushl
test
fisubl
jle
in
subb
sbb
repnz
push
cmp
push
ret
jp
xchg
jp
popa
inc
mov
cmp
mov
cmp
lcall
xor
mov
cs
and
out
aad
sub
lret
sahf
lcall
mov
jl
aas
xor
js
sahf
aam
xor
out
and
fimull
sar
xor
fsts
add
dec
pop
fldt
ficomps
fstpt
adc
scas
mov
leave
pop
and
xor
jmp
je
or
lahf
mov
cltd
ret
rolb
mov
incl
leave
mov
jg
ds
cmpsb
adc
mov
addr16
jns
lock
lcall
dec
mov
push
sbb
in
or
xlat
adc
loopne
lcall
xchg
loopne
adc
sbb
fildll
pop
jae
popf
or
dec
into
les
fmuls
jmp
stos
sbb
movsb
mov
and
les
xchg
mov
mov
bound
push
data16
rorb
xchg
dec
subb
push
les
movsb
xchg
ljmp
xchg
gs
inc
cwtl
lcall
inc
sbb
je
xor
adc
ljmp
aaa
xlat
jecxz
cmp
sub
xor
inc
js
ljmp
cmp
and
inc
int3
cwtl
repnz
mov
mov
add
push
inc
adc
jg
dec
push
jns
cld
leave
mov
leave
jbe
and
insl
sub
arpl
ja
push
dec
decl
mov
dec
sbb
push
stos
js
mov
mov
push
in
adc
jp
mov
call
xchg
arpl
mov
shlb
jnp
add
mov
insl
sbb
dec
jg
je
icebp
lcall
test
call
test
jnp
andb
fimull
fbld
lcall
daa
mov
fildl
loope
sub
mov
lcall
dec
push
sahf
dec
aaa
fstps
insb
hlt
cwtl
lock
or
push
add
outsb
cmp
ror
gs
ljmp
inc
adcb
fldenv
lret
jg
test
les
push
lahf
hlt
jmp
jae
mov
lds
daa
addl
mov
ljmp
xchg
popa
test
dec
out
sub
sub
sbb
test
mov
sub
mov
mov
mov
movsb
mov
fcomps
std
adc
decl
pop
popa
cmp
and
adc
loopne
cmp
inc
into
and
mov
lock
pop
js
imul
inc
pop
sbb
aam
xchg
mov
call
clc
inc
and
inc
jo
fisttpll
pop
bound
xor
push
scas
dec
adc
out
cli
ljmp
subl
pop
in
or
pusha
inc
dec
rorb
pop
cmp
xor
and
sub
jl
mov
shll
inc
push
adc
mov
cmc
sbb
out
cmp
ljmp
aaa
lcall
mov
repz
into
inc
loop
jg
mov
and
decl
xchg
hlt
adc
mov
and
fstpl
mov
fbld
inc
mov
decl
push
mov
aam
ss
mov
jne
int
jae
jns
mov
in
mov
sub
gs
pop
push
sbb
mov
cmpl
push
mov
stos
daa
test
and
popf
clc
pop
insb
imul
pop
adc
addr16
aaa
or
in
jecxz
dec
adc
outsl
and
repnz
outsl
cmc
sti
jmp
stos
lods
subb
ret
fldcw
jne
into
mov
cs
outsb
stc
cmp
pushl
fld1
dec
lds
push
je
lret
inc
inc
mov
push
jge
vpacksswb
add
pop
ret
jmp
das
and
mov
jns
dec
pushf
sbb
cmp
inc
daa
jecxz
inc
imul
call
xor
mov
push
cld
out
jnp
dec
adc
int3
dec
jb
loopne
cmp
jnp
mov
mov
push
bound
jo
stc
mov
imul
mov
dec
and
cmp
mov
cmc
push
xchg
mov
out
dec
xchg
std
rolb
xchg
push
jns
mov
scas
idiv
sti
sbb
in
xchg
mov
inc
sbb
dec
popf
jno
mov
pusha
fwait
loopne
aam
pushl
jl
mov
pop
or
pop
pop
insl
imul
aam
push
lea
push
cmp
decl
push
daa
add
xchg
or
jecxz
xchg
out
mov
enter
movsl
push
adc
incl
les
xchg
adc
cs
sbb
xor
fwait
mov
mov
cmp
mov
xlat
pop
sbb
in
dec
fnstsw
rorl
jae
add
sub
lret
ror
ljmp
aad
fildll
mov
ret
ss
in
out
jl
adc
mov
jnp
pop
adc
push
add
test
out
pop
sub
mov
adc
mov
lcall
mov
mov
lods
xchg
mov
rcr
lahf
xor
mov
enter
pop
xor
das
sar
jns
push
pop
out
mov
rcll
ljmp
jecxz
mov
inc
addb
cmp
dec
jns
in
pushf
push
or
gs
fnstcw
fsubrs
lret
in
cwtl
sub
cli
sbb
loop
and
add
pop
hlt
lcall
and
std
gs
mov
sbb
mov
arpl
ljmp
roll
in
push
lods
fstps
in
pop
xor
mov
adc
iret
jp
xchg
jns
jmp
int
aas
xor
rcr
iret
xor
enter
aam
or
dec
pop
les
sub
and
mov
dec
scas
mov
aad
enter
cmp
adc
mov
push
repz
xchg
mov
pusha
fsubs
cmp
call
and
fsubs
negl
sbb
dec
pop
notl
insb
fcoml
or
ret
ljmp
sub
adc
ljmp
push
inc
push
mov
fdivp
push
std
push
and
inc
sbb
xchg
xchg
je
aad
jb
rcrb
fwait
fldcw
add
and
call
add
das
divb
mov
pusha
xor
clc
pop
icebp
jle
push
fidivl
int
fnstsw
int3
inc
sub
decl
in
stos
jo
hlt
mov
or
scas
push
pushf
xor
jmp
pusha
mov
xchg
jmp
mov
lods
stc
out
movsb
mov
xchg
push
test
jno
mov
test
call
dec
inc
outsl
gs
sub
scas
xor
or
insl
xchg
repnz
adc
in
sbbl
mov
sub
ljmp
aaa
rcll
ret
mov
inc
bound
in
incl
stos
popa
sub
jo
mov
std
add
cmp
lretw
sahf
mov
add
push
fwait
out
orb
orb
lock
dec
jge
and
jge
add
aad
les
pop
mov
popf
sbb
xchg
cmp
push
push
stc
adc
xor
fucom
ss
pusha
mov
xchg
mov
lds
adc
repnz
push
lds
call
mov
add
stc
divb
sbb
and
test
pop
clc
or
xorb
push
add
jecxz
mov
ljmp
lcall
lret
add
stos
mov
pop
stc
out
push
mov
mov
mov
jge
sub
cmpsb
jecxz
into
or
mov
in
mov
mov
push
adc
push
das
ljmp
fs
les
icebp
gs
icebp
pop
jge
dec
adc
xor
dec
adc
ljmp
cld
sub
lcall
jns
sub
mov
mov
mov
decl
cmpsl
cld
cwtl
xchg
dec
sub
dec
sub
cld
lahf
in
pop
ljmp
decl
pusha
adc
sti
es
lcall
sbb
adc
sbb
out
incl
jne
or
mov
rorb
mov
xor
fcoml
shl
mov
ljmp
adc
out
sahf
leave
icebp
movsb
ljmp
dec
mov
fcomip
popf
shlb
inc
pusha
dec
add
pop
and
scas
push
ja
jb
inc
js
adc
ljmp
pop
cwtl
inc
cmpb
test
and
mov
jae
jmp
pop
cmp
scas
dec
int
gs
push
call
cmp
lret
push
mov
aas
lret
loopne
adc
mov
das
mov
out
dec
jne
mov
jns
dec
shrb
sar
rolb
sbb
push
sbb
scas
sarl
adc
sar
add
xor
in
out
scas
scas
add
dec
sub
fsubrp
dec
adc
repz
and
decl
fidivrs
loop
pop
test
aaa
inc
mov
mov
and
sarl
mov
std
incl
adc
cmp
and
mov
push
sahf
shrl
mov
pop
inc
xor
data16
icebp
push
push
sbb
xor
call
popf
lcall
cmpsl
cmp
xor
bound
cmc
push
dec
fxch
ja
or
icebp
mov
mov
mov
adc
lcall
mov
pop
iret
mov
sbb
mov
dec
add
imulb
mov
movsb
xor
fwait
incl
test
repz
adc
js
adc
dec
jne
fcos
lcall
test
mov
les
fsts
mov
sbb
sub
mov
xor
rcr
lea
lock
shl
fcmovu
adc
pop
movb
inc
or
call
jecxz
or
lds
int3
in
fiaddl
jl
push
lock
xchg
inc
inc
in
loope
loope
or
stos
iret
pop
xlat
enter
push
call
dec
mov
test
mov
ljmp
arpl
xchg
test
fs
les
subl
jne
jp
lahf
inc
jle
dec
arpl
call
mov
jg
jge
pushf
faddl
mov
pop
xor
sbb
adc
add
cmp
movsl
mov
pop
pop
shl
jge
add
sub
inc
out
push
lcall
or
inc
inc
in
stc
inc
sub
cwtl
div
pusha
mov
adc
adc
arpl
adc
jecxz
pop
xor
arpl
add
inc
pop
int
out
push
pop
or
jg
jns
xor
xlat
or
jae
aad
xor
stos
sub
aaa
test
mov
call
dec
xchg
maxps
mov
rcrb
ljmp
icebp
js
xor
loope
cmc
iret
sbb
jmp
rol
loope
sub
xchg
jge
test
call
daa
mov
into
insl
pop
loopne
fcomip
xor
push
out
jo
lahf
fwait
jae
insb
icebp
jp
iret
loope
sbb
sarb
idiv
jmp
cltd
out
jo
lods
jnp
test
push
imul
lcall
cwtl
cwtl
lret
pop
pushl
orl
dec
fdivl
pop
push
xchg
adc
das
sar
je
lret
add
sbb
xor
mov
jnp
bound
incl
and
imull
test
jae
sahf
or
push
icebp
dec
iret
std
pushl
pushf
popf
js
outsb
push
mov
rclb
and
sbb
adc
sbb
fstps
jg
xchg
add
mov
xchg
int
lods
pop
outsb
inc
popf
ds
inc
lret
aas
ficompl
addr16
inc
and
mov
aas
pop
or
addps
sarl
jae
jnp
mov
pop
repz
imul
jae
aaa
adc
ss
jmp
cli
call
decl
push
and
mov
ret
or
inc
pop
jg
decl
xchg
dec
ret
pop
xchg
jmp
cwtl
sar
mov
test
int
inc
mov
decl
dec
shll
pop
incb
sbb
nop
pop
mov
mov
movsl
fistps
call
std
xor
stos
jbe
fwait
outsl
popf
daa
cmp
divb
popa
dec
push
mov
add
loopne
decl
lds
shrl
xchg
pushf
pop
fadd
sti
ret
pop
je
xor
std
mov
call
cmp
popa
int3
pop
inc
pop
dec
icebp
mov
pop
mov
call
inc
fs
mov
jbe
icebp
ljmp
sahf
call
decb
xchg
mov
jnp
push
sub
or
repnz
cmp
cmp
jns
fsubrs
sbb
mov
pushl
sarb
iret
out
add
mov
cld
xorl
dec
in
call
je
or
lahf
shrb
mov
mov
pop
clc
icebp
das
inc
rol
cli
and
mov
fwait
dec
mov
lcall
adcl
pop
daa
dec
cmp
add
in
ljmp
inc
fsubrl
jmp
pop
repnz
ret
lahf
in
nop
xorb
sbb
lock
xchg
dec
add
insl
jb
inc
rorb
push
adcb
aas
inc
xchg
or
push
mov
xor
sti
add
add
nop
movl
hlt
dec
xor
jbe
pop
xor
jl
pop
xchg
addr16
mov
mov
decl
fisttps
js
jae
ficoml
inc
cmpsl
ss
inc
lcall
outsl
sarb
sbb
push
and
lods
or
stos
cmpsl
jnp
unpcklps
incl
jnp
out
ja
daa
sbb
fwait
ds
or
pop
insl
out
into
loop
dec
or
decl
das
add
cmpsb
in
addr16
insl
ret
push
dec
mov
xor
nop
mov
lcall
pop
xchg
in
es
adc
and
xor
mov
pushl
push
cmp
push
xchg
test
sbbb
aam
mov
std
subps
int3
lods
mov
loop
call
dec
xchg
ljmp
mov
mov
addr16
dec
sti
lods
mov
mov
loop
ja
xchg
mov
scas
dec
int3
cld
out
out
add
mov
push
mov
jne
xchg
xchg
mov
data16
call
cmp
xor
sbb
call
dec
sbb
pushl
int
dec
loopne
aaa
lds
xchg
xchg
icebp
dec
test
mov
fldcw
jmp
lret
pop
mov
xchg
pop
and
jbe
lret
adc
push
pop
call
cmp
cmp
xlat
das
cli
push
adc
sbb
imul
scas
mov
mov
push
xchg
jb
scas
mov
xchg
jg
cld
xor
mov
dec
int3
add
shrl
dec
das
jae
ds
xchg
fwait
mov
jae
dec
pop
cs
xchg
pop
ficompl
inc
loop
dec
jmp
ljmp
xor
inc
ret
rcl
lcall
sub
addr16
mov
mov
movsl
gs
pushl
out
adc
xchg
pop
push
xchg
daa
pop
and
xchg
ficompl
popfw
mov
popf
sbb
mov
fwait
lock
fwait
sub
jp
mov
cmpsl
stos
daa
push
sbb
in
in
loop,pn
jae
loope
xchg
mov
dec
xchg
orb
push
and
or
incl
iret
out
loope
fadd
adc
push
mov
test
scas
push
aas
fstpt
cltd
into
adc
arpl
insl
stos
fcomi
inc
adc
sti
jl
fiaddl
movsb
ret
pushl
pop
mov
test
ret
inc
lock
xor
cmp
out
xchg
incl
cmpsl
in
cmp
jno
stos
cli
and
sbb
dec
xchg
and
fcomip
push
shr
and
gs
sbb
cmc
mov
cmpsl
dec
push
fadd
cli
xchg
jecxz
jmp
in
fstpt
cli
and
scas
inc
cmp
sbb
cwtl
mov
ljmp
insl
cmp
sti
dec
imull
push
out
js,pt
dec
mov
mov
lcall
pop
cmp
add
insl
mov
jmp
add
cmp
incl
stc
mov
xchg
cmp
outsl
xor
dec
cli
xlat
out
pusha
sub
pop
xor
pop
andl
push
or
add
test
in
push
or
loope
pop
xlat
andl
std
pushl
out
pop
cmp
out
fisubl
testb
inc
loop
mov
test
inc
ljmp
enter
add
leave
dec
outsl
jge
mov
in
mov
mov
add
jmp
and
sub
lcall
pushf
ret
mov
mov
pop
ret
outsb
inc
and
decl
data16
cltd
cmp
icebp
mov
repz
dec
add
cmp
ficoms
dec
out
repz
inc
push
adc
pop
daa
jp
fs
je
data16
or
stc
cmp
shll
adc
pop
jnp
push
dec
mov
xlat
cmp
xchg
mov
addr16
ds
stc
push
push
mov
lcall
das
or
cld
lea
test
mov
fnstenv
cmp
es
mov
std
add
incl
xor
mov
nop
xchg
outsb
lcall
cmc
lahf
pop
es
dec
std
stos
lods
call
jmp
push
cmpsb
push
inc
test
scas
jb
xchg
stos
add
aaa
jl
ljmp
mov
mov
popa
lahf
push
adc
jp
mov
fcomip
addr16
inc
cmc
or
pop
adc
das
addr16
iret
jbe
cmpsb
out
push
sub
jmp
leave
xchg
mov
mov
mov
push
in
mov
push
icebp
dec
cld
xchg
mov
lods
push
es
sub
mov
dec
in
and
lock
leave
movsb
xor
call
sbb
xor
pop
mov
or
cmp
jmp
roll
xlat
out
test
add
jno
fdivl
or
push
jnp
dec
idiv
call
inc
xchg
pop
inc
ja
sbb
push
sub
daa
nop
pop
mov
cmp
mov
mov
dec
cmp
xchg
incl
aam
adc
mov
inc
mov
ja
aas
push
pop
xchg
and
jmp
mov
pop
aas
out
mov
cmp
dec
jne
mov
and
cs
lcall
mov
fidivrs
mov
push
jge
mov
xchg
and
and
int
lcall
mov
cmp
adc
pop
inc
gs
popf
jle
or
insb
adc
and
cmp
test
incl
je
dec
stc
aam
mov
adc
lret
into
sti
pop
jmp
sar
mov
dec
sarb
mov
push
mov
aad
xchg
lcall
test
faddp
jnp
jno
stc
dec
lret
cmp
dec
sub
dec
lock
addr16
mov
inc
inc
out
xchg
and
mov
mov
ljmp
cli
call
ljmp
cmp
jae
sbb
or
adc
sub
je
mov
push
arpl
es
dec
ds
in
or
or
dec
sub
mov
mov
and
fwait
pushl
repnz
pop
sub
or
xor
mov
push
lret
ljmp
xchg
adc
test
inc
sti
mulb
mov
push
jns
call
rolb
scas
sbb
mov
je
push
jle
das
xchg
adc
ljmp
pop
xor
or
out
xchg
lock
divb
cmpsl
mov
outsl
cmp
call
jg
pop
sbb
sub
add
mov
in
push
and
add
lcall
xchg
push
dec
inc
jle
jo
test
xchg
push
out
jae
lret
ljmp
dec
fcomip
dec
das
cmp
dec
adc
jle
pop
ss
jg
pushf
xor
pushf
mov
fcomip
push
in
test
ret
dec
push
jg
add
jp
dec
jnp
dec
adc
les
lcall
ret
mov
dec
push
xchg
lds
roll
and
les
mov
sub
ds
inc
dec
mov
lcall
push
cld
call
insl
xlat
jno
pop
shl
jae
shll
lock
dec
or
sti
fsub
xchg
pushl
cli
pusha
pusha
fs
xor
push
adc
rcrl
push
push
popa
push
clc
sub
incl
loope
ret
xor
mov
int3
jle
adc
dec
ss
decl
add
xorb
add
mov
int3
je
sbb
orl
ljmp
mov
inc
iret
mov
xor
and
arpl
jb
cmp
adc
ret
sti
dec
shr
jmp
movsl
scas
sub
test
in
rcrb
inc
rol
lods
ds
sbb
pushl
lods
nop
pop
mov
inc
fldenv
loop
xchg
sub
mov
cmp
or
push
pop
ljmp
sub
adc
jb
mov
adc
in
cmpsl
sarb
incl
in
outsl
aad
adc
cltd
push
inc
add
lock
hlt
jg
dec
in
hlt
cmp
push
lcall
jne
ja
push
shlb
aad
jbe
leave
sbb
jno
les
cmpsl
repz
jmp
dec
xchg
jmp
mov
popa
mov
xor
pop
das
adc
out
cmp
dec
inc
int
outsl
pop
sti
push
call
cld
lods
outsb
push
jg
lock
lret
xlat
push
lahf
fistpl
maskmovq
notl
jne
xlat
or
push
daa
sbb
aaa
popf
fstpl
push
lcall
or
imul
mov
into
insl
or
bound
dec
cmc
jo
pop
adc
dec
add
adc
jg
loopne
push
cmpsl
fldpi
push
lods
push
mov
divb
andb
xor
lret
jg
inc
pop
push
jo
mov
in
das
cmpsl
jg
push
sahf
notb
nop
jb
shll
add
or
mov
cmpl
adc
jns
push
mov
mov
stos
in
add
jle
clc
pop
jp
pop
aad
jns
jl
lea
mov
cli
inc
xor
aaa
shlb
xor
fstpt
negl
incl
jno
enter
and
sbb
movsb
or
add
inc
repz
cltd
fs
push
cmc
ret
jge
sub
outsl
push
and
inc
mov
pop
fwait
add
or
sbb
hlt
inc
loop
inc
push
js
cmp
inc
stos
mov
mov
jno
dec
or
js
xchg
inc
jg
mov
enter
insl
ljmp
pop
stos
mov
in
pop
sbb
fisubl
push
in
pop
jo
in
pop
aad
inc
arpl
ljmp
lea
jge
and
pusha
leave
cmpl
push
dec
mov
xor
dec
or
push
xchg
rorb
pop
fnstsw
mov
xchg
outsb
mov
subb
push
icebp
cmpl
ret
mov
jmp
xchg
orb
and
xchg
mov
push
adc
xchg
scas
sub
call
jmp
pop
jo
or
jl
scas
jmp
sub
sub
imul
jne
dec
mov
ljmp
push
in
cmp
aam
fnstsw
adc
sub
popa
andl
stc
sti
int3
inc
push
sti
jnp
mov
or
call
add
cs
jnp
pop
das
cli
pushl
rclb
fcmove
test
pop
int
xorb
jmp
aaa
pop
jnp
push
sub
les
mov
ljmp
fimull
lock
inc
jg
push
mov
inc
jl
icebp
repnz
jae
mov
mov
jmp
mov
mov
fdivrp
cmpl
pop
ret
jmp
fwait
es
lcall
mov
mov
xor
stos
and
jo
mov
lret
sbb
jmp
mov
popf
cmp
incl
push
jmp
mov
push
outsb
mov
push
push
hlt
cmpsb
mov
leave
lcall
lret
mov
fwait
mov
into
mov
pop
shlb
xchg
mov
decl
cmpsb
insl
ljmp
ds
pop
cmp
and
fwait
shrl
jno
in
pop
pop
or
call
sbb
mulb
pop
out
or
fsubl
push
and
pop
dec
lods
xor
sti
and
adc
sub
cwtl
cmc
js
pop
jnp
or
and
test
or
mov
mov
decl
push
push
jb
mov
cmpb
ljmp
cmp
jmp
or
push
push
or
ret
dec
lock
add
mov
and
push
scas
decl
inc
push
sub
pop
cmp
inc
cwtl
pusha
enter
pop
xchg
xlat
sub
std
or
mov
xabort
jnp
jb
xor
stos
jp
inc
adc
or
jnp
stos
inc
xor
loopne
cwtl
and
nop
loop
bound
mov
mov
test
inc
pop
enter
stos
imul
jno
cmp
lahf
adc
inc
das
pop
mov
js
fstpt
leave
out
fdivl
shll
add
xor
add
push
out
pushl
sbb
fisubrs
lahf
mov
add
repz
xor
adc
loopne
lcall
push
stos
cmp
rorb
add
fiadds
push
mov
incl
fcmovb
cmp
xor
test
enter
test
daa
xlat
ljmp
lcall
cmpsl
mov
adc
push
cmpsb
mov
mov
push
inc
pop
xchg
or
mov
and
jbe
hlt
clc
test
imull
pop
movsb
adc
jo
orb
jg
inc
push
lret
add
inc
lahf
or
adc
das
out
sub
push
sub
sub
jae
push
movsl
inc
sbb
and
pushaw
mov
call
and
iret
shll
cmpsl
sub
stos
sbb
jb
push
in
cltd
xchg
mov
lock
rclb
adc
xor
test
mov
inc
jne
xchg
lcall
popa
cmp
inc
cmp
lock
xorl
fs
test
outsl
decl
push
jne
outsl
aas
fisubrl
pop
fs
sbb
and
jno
mov
sar
jmp
mov
jno
sub
and
fistpll
xchg
push
xchg
sbb
dec
pop
mov
notb
mov
iret
or
inc
dec
das
int3
cmpsl
jne
ja
add
call
and
xchg
inc
cmp
jnp
imul
xor
jg
sub
mov
sbb
mov
jns
inc
test
dec
ja
or
cli
and
jge
inc
xorl
faddl
aaa
data16
or
push
out
imul
ljmp
enter
cmp
sti
pop
test
int3
adc
mov
incl
push
test
push
repz
leave
sbb
sbb
mov
test
inc
pop
jno
dec
sahf
inc
add
add
cwtl
jp
out
inc
dec
mov
add
imul
mov
jmp
cmp
xorl
pop
test
jb
mov
xchg
lods
or
cld
stc
inc
cmc
es
push
ljmp
mov
decb
dec
sub
sbbl
jp
dec
add
loop
pop
lock
scas
push
mov
or
jl
stc
inc
in
push
sbb
lcall
push
cwtl
imulb
cmpsb
out
and
loope
inc
jp
es
jg
xchg
jns
addr16
stos
mov
sahf
cwtl
lods
fwait
adc
lcall
jbe
cs
mov
adc
sti
sbb
cltd
pop
cmc
mov
mov
jecxz
clc
jmp
enter
sarl
js
scas
jmp
popa
mov
mov
dec
sbb
lods
mov
jge
lods
pop
jmp
daa
in
or
lods
push
cwtl
or
mov
loop,pn
or
mov
adcl
adc
push
clc
inc
xor
mov
mov
stos
jge
push
out
jo
add
decl
scas
jae
shr
lds
xchg
pop
mov
insb
push
or
push
stos
aas
sbb
lcall
imul
mov
nop
stos
lea
pushf
pop
fists
sbb
mov
lods
movl
repnz
cmc
push
and
cmp
fdivrl
out
sahf
je
xor
sbb
int3
in
xor
dec
in
es
jnp
sarb
aaa
mov
out
pop
xor
xor
jmp
pop
pop
ljmp
mov
push
push
mov
push
mov
cmc
adc
ljmp
sub
xchg
sbb
sahf
test
sub
iret
fdivrl
jecxz
cmpsl
and
mov
cmp
loope
and
dec
aas
xor
sub
call
or
pop
out
test
and
icebp
push
fdivl
icebp
out
jp
cli
sarl
dec
adc
mulb
sub
xor
adcl
daa
rcll
or
xchg
fwait
pushl
out
addl
fbstp
cmp
xlat
ds
inc
jg
inc
push
cltd
scas
clc
decl
movsl
out
pop
in
jecxz
cmpsb
mov
push
or
imul
outsl
mov
sub
dec
icebp
in
sub
fbstp
cmp
cmp
incl
sbb
leave
adc
dec
sar
xor
sbb
xchg
cmp
ljmp
xor
clc
cmp
cmp
inc
les
xchg
and
mov
clc
call
cmp
call
je
sbb
daa
add
pushl
jmp
push
push
jnp
icebp
inc
imul
mov
rcrb
inc
out
push
out
fbstp
cmc
clc
inc
xor
data16
and
mov
mov
mov
ljmp
inc
je
and
es
jo
mov
jge
mov
fmull
cs
stos
fcomip
incl
int
js
adc
mov
stos
add
push
dec
dec
push
popa
addb
xlat
add
pop
lds
cwtl
and
xchg
fisttps
pop
dec
mov
dec
mov
adc
pop
mov
enter
xchg
mov
decl
loop
sub
push
and
add
mov
in
fsubrl
mov
inc
xlat
adc
movb
sub
jg
sti
adc
mov
xlat
dec
adc
es
shlb
mov
sti
or
sahf
outsb
jae
mov
mov
scas
cli
fsubrs
mov
jmp
in
mov
fucomp
mov
in
les
dec
fs
jae
ds
pop
icebp
jg
out
scas
mov
lcall
movsl
lret
movl
test
jo
xor
sub
inc
cltd
fiaddl
aaa
ds
jg
insb
mov
push
imul
push
inc
push
stos
xchg
orl
mov
jmp
fdivr
mov
inc
sbb
mov
fdivs
pop
push
js
inc
cmp
shufps
jnp
and
jl
cmpsb
leave
add
ja
mov
incl
lret
test
enter
mov
pushf
jp
or
push
cmp
andb
mov
jmp
into
add
flds
sbb
jns
mov
pop
pop
and
stc
outsl
mov
incl
addr16
and
stos
or
in
and
mov
jb
pop
hlt
in
in
sub
bound
insl
repnz
les
push
sti
call
movsl
mov
and
std
les
fsubl
sbb
mov
cld
lcall
push
in
or
jg
xor
mov
hlt
sub
mov
cltd
dec
sbb
ljmp
fs
addr16
call
pop
jle
mov
popf
btr
lods
fnsave
clc
mov
lds
cmpb
ret
int
std
movsl
cwtl
adc
call
adc
ret
icebp
cmp
mov
cmp
jecxz
cmp
push
dec
or
mov
sbb
mov
test
mov
pusha
daa
push
push
gs
and
inc
ret
aam
call
lcall
cmp
mov
sarb
cmp
or
or
lcall
movsl
push
xchg
cmp
out
push
lret
addr16
inc
aas
faddl
aas
mov
add
lcall
cmpsl
std
push
jns
sahf
and
stos
cld
insb
fcoms
add
fmuls
pop
roll
subb
repnz
fs
ljmp
in
rcr
inc
jl
push
push
push
cmp
push
das
ljmp
xchg
xchg
scas
cmpsl
xlat
out
decl
mov
fistpll
movl
jns
mov
add
lcall
call
sub
push
es
enter
cwtl
jo
xor
js
incl
or
xor
xchg
xor
cmpsl
pushf
shll
je
aad
xchg
add
xor
jo
sbb
push
js
je
dec
adc
sub
push
inc
inc
rcll
xchg
jmp
fcoml
idivl
push
jmp
fistpl
cli
loope
inc
pusha
mov
hlt
call
sti
fistpl
lcall
int3
jp
add
xchg
sub
es
loope
xlat
lds
cli
lahf
out
cmp
loop
gs
mov
pop
jnp
pop
cmp
adc
dec
jb
jmp
mov
mov
and
mov
cmp
dec
lea
adc
outsl
test
int3
stos
dec
fsubrl
mov
xorl
mov
sar
jmp
fbld
inc
adc
sub
jae
jno
jge
lea
pop
jb
es
jno
cmp
dec
pop
jb
mov
test
loope
and
test
insl
mov
ficomps
incl
mov
sbb
lahf
aad
sub
inc
mov
add
roll
xor
mov
mov
and
cltd
sbb
inc
mov
ljmp
insb
ffreep
repnz
cs
mov
lret
dec
loopne
mov
or
push
pop
lds
ljmp
mov
mov
test
inc
stos
push
cmpsl
orb
sbb
in
inc
mov
cmc
aad
imul
dec
femms
cltd
addr16
add
push
inc
pop
xchg
daa
call
cmp
aam
ja
pop
cmp
dec
loope
and
jnp
ret
sar
decl
adc
add
fs
inc
adc
lret
dec
xlat
pop
sti
arpl
insb
xchg
mov
jp
pushl
xor
push
gs
jge
or
mov
or
xor
jp
les
cmpsb
jg
out
and
cmp
inc
adcl
es
subb
out
jg
dec
mov
lock
shrb
sub
imul
cmp
jo
xchg
jb,pt
sbb
jae
mov
test
push
adc
repnz
lock
ljmp
push
or
loope
push
repz
and
and
jg
das
lret
push
push
les
std
rorb
push
insb
popa
xorl
inc
mov
inc
in
out
leave
call
cmp
sbb
pop
cli
in
jb
fsubp
mov
ds
mov
ret
pushf
lcall
lea
push
rolb
out
adc
cmp
pop
inc
fdivrs
stc
mov
call
daa
mov
mov
stc
hlt
xorb
stos
jmp
jno
jle
inc
aad
push
dec
push
adc
mov
test
pusha
mov
mov
jb
xchg
and
xor
push
push
dec
jmp
icebp
pop
movb
sbb
insl
addl
repnz
cli
inc
int3
push
sti
popa
shr
mov
loop
cli
nop
mov
pop
in
pushf
subl
mov
jge
sub
incl
je
shl
dec
adcb
cli
xor
push
stos
stos
pop
cmpsl
ljmp
jae
pop
sbbl
pop
xchg
testl
sub
pop
js
cld
jg
jmp
shll
scas
or
sub
xor
mov
mov
mov
or
daa
mov
dec
test
push
cli
cmp
popf
cli
ret
pop
cmp
mov
in
addr16
fwait
xchg
clc
js
push
dec
mov
cmp
fwait
jmp
dec
call
adc
and
outsl
xchg
pop
fwait
jecxz
xor
mov
into
sahf
xchg
in
jecxz
out
cld
addr16
pop
mov
adc
dec
test
mov
lods
xchg
mov
idiv
push
pop
leave
outsl
or
cmpsl
cmpsl
jl
lret
cmp
xor
fsubp
out
jp
dec
in
mov
call
es
cwtl
pop
test
mov
jae
jnp
in
pop
ret
pop
mov
orb
cltd
imul
clc
outsb
mov
js
pop
push
or
in
or
cmpsl
fdivr
cmp
decl
adc
lret
mov
xchg
xor
xor
push
in
push
gs
je
mov
jns
jno
idivb
imul
inc
scas
xor
decl
popf
out
fbld
mov
jp
ds
inc
fdivs
cmp
mov
enter
int
out
mov
mov
push
int
pop
std
call
call
cmp
xchg
push
mov
sbb
mov
imul
mov
or
cmp
nop
adcb
popf
mov
test
decl
cld
mov
lret
test
push
packsswb
push
lcall
lcall
mov
ss
adc
mov
mov
incl
add
push
pop
jecxz
std
and
lods
outsl
sbb
ljmp
pop
stos
jb
addr16
xor
jl
pop
cli
inc
cs
xchg
push
movsb
test
rcrl
push
sbb
loopne
and
icebp
addr16
pop
sub
and
clc
ljmp
out
mov
xor
mov
dec
sahf
dec
enter
mov
cs
xchg
inc
mov
push
xor
sub
decl
push
fsubrl
test
fs
sbb
aaa
cmp
xor
test
adc
jmp
mov
aas
gs
and
hlt
icebp
sub
jl
push
fcmove
jg
jle
adc
insl
shlb
sbb
test
and
jbe
test
aas
pop
adc
ljmp
sarb
rolb
jmp
fcoml
lods
jmp
xchg
dec
mov
or
adc
and
and
pop
or
cmpsl
inc
push
into
mov
sbb
sbbl
nop
add
dec
rol
mov
cmpsb
insb
ljmp
icebp
jne
mov
shll
mov
xor
out
aas
scas
movsb
fisubrl
jg
pusha
inc
mov
cmpsl
aaa
and
mov
cmp
jmp
jae
and
mov
sub
mov
addr16
fwait
lds
insl
cmp
jb
stos
rorb
pushf
ljmp
data16
sar
dec
out
mov
imul
ds
cmp
icebp
pushl
loop
adc
enter
cld
bound
es
inc
xchg
sahf
cmp
icebp
fcomip
stos
scas
jmp
mov
lock
cwtl
repz
shr
ja
inc
cltd
jge
pop
add
push
aam
xor
xchg
xchg
outsb
mov
push
fisubrl
push
mov
mov
roll
lods
sbb
sbb
leave
in
mov
les
lcall
mov
out
std
es
adc
jns
lea
or
sub
hlt
lcall
mov
mov
inc
sub
lods
in
mov
aaa
jmp
lcall
popa
xor
cli
jae
sti
sbbl
insl
mov
xchg
fwait
lret
cmp
decl
stos
in
in
jge
lcall
in
out
pop
dec
cmp
mov
mov
fsubrl
lcall
cmp
adc
aas
mov
xchg
fdivs
ret
add
mov
push
cs
ret
inc
push
inc
sbb
mov
sti
ds
cwtl
call
js
adc
scas
sahf
inc
fcompl
mov
cli
xchg
fnstcw
insl
jo
les
mov
push
mov
aam
add
dec
jb
mov
cmp
popf
pop
mov
pop
jmp
incl
push
jp
stos
mov
clc
int3
lret
mov
dec
outsl
dec
fdivrl
mov
mov
lret
out
fistl
or
sbb
lcall
and
and
lcall
and
and
cmp
out
xor
scas
cmpsl
xchg
push
hlt
incl
or
cld
daa
adc
push
lahf
lock
shll
pop
pop
lret
movntq
out
ljmp
inc
push
sbb
adc
sbb
push
shll
sub
insl
out
repz
decl
inc
stos
jmp
int
adc
test
mov
add
push
xor
fmuls
mov
incl
popa
xor
mov
xor
int
and
fidivrl
and
orl
lcall
fcomi
inc
cmpsb
add
push
fldt
mov
sub
repz
cmpsb
lock
ljmp
or
push
push
insb
push
std
pop
xchg
ret
xor
push
adc
sbb
call
imul
ljmp
addr16
and
mov
dec
outsl
std
lds
orb
and
lea
inc
cmc
mov
xchg
cwtl
ss
ljmp
stc
popl
hlt
addb
cmp
push
repnz
clc
ja
cwtl
adc
add
jl
dec
outsl
fmuls
arpl
xchg
dec
or
clc
test
hlt
push
push
xchg
outsl
rclb
pushl
fnstcw
cmp
or
mov
mov
outsl
xchg
sub
dec
pop
call
dec
dec
les
xchg
test
xor
cwtl
inc
enter
sub
daa
mov
add
or
jmp
aas
jae
sbbb
push
repz
lret
std
jg
stos
fcmovnbe
aas
in
mov
pushl
pop
pop
add
or
sahf
dec
jno
xchg
pop
aas
pop
cmpsb
rorl
cmp
pushl
mov
pusha
int
sub
in
repnz
repnz
roll
fisubrl
idivl
push
push
leave
arpl
and
dec
dec
dec
mov
loope
cmpl
xor
outsl
pop
orb
xor
xor
mov
mov
push
pop
pushf
aaa
cli
lcall
call
aad
push
cmp
jecxz
mov
push
test
dec
leave
inc
fwait
and
pushf
push
mov
lret
in
cld
call
insl
dec
and
adc
shrb
push
adc
cmp
popf
daa
sbbb
add
call
mov
popf
pop
or
lcall
lcall
clc
cmp
push
aad
loop
xor
ljmp
imul
or
js
in
sahf
xchg
mov
push
movsb
call
mov
xor
mov
pop
cmp
loop
outsl
xor
sub
jne
decl
sarb
cwtl
outsb
ja
in
mov
fwait
test
shrb
pushl
test
ljmp
dec
push
and
cltd
test
sub
mov
repz
int
out
or
lock
mov
pop
jg
lods
push
add
scas
clc
lcall
in
scas
aam
mov
shl
bound
outsb
lcall
rcrb
rcl
shll
ret
cltd
fdivp
ret
push
or
arpl
decl
push
fisttpll
mov
jae
call
or
loop
call
xchg
fiadds
addr16
jl
mov
and
hlt
dec
push
jge
cs
sar
ja
sub
jl
jmp
inc
or
call
lcall
xor
fdivs
xor
and
les
sarb
cmp
push
jmp
jno
xchg
pop
pushf
mov
test
mov
mov
lods
rorl
std
mov
jo
and
insl
sbb
mov
mov
in
scas
filds
adc
xchg
loope
sti
jo
movsb
pop
ds
cmpsb
sahf
lods
jb
mov
xor
dec
inc
pop
fcmovu
mov
testb
xor
and
inc
data16
push
jmp
add
mov
sbb
mov
pop
jnp
aas
mov
or
lcall
adc
orl
pop
xor
pop
xchg
repnz
mov
mov
pop
and
or
push
call
mov
popf
ljmp
jl
adc
add
pop
sarb
jno
mov
fdivr
jmp
add
cmp
inc
je
into
xchg
movsl
inc
fisubrs
sbbl
push
dec
jmp
pop
sbb
add
sahf
jl
cwtl
shl
mov
pop
adc
and
jp
test
insl
sub
pop
lds
loope
adc
es
dec
dec
and
lret
cmc
test
call
dec
push
icebp
sarl
pop
mov
xor
mov
iret
shl
lcall
outsb
sub
pop
mov
dec
mov
inc
jmp
push
je
in
xchg
jg
lea
out
dec
int3
adc
adc
lret
fisubl
sbb
jmp
cld
and
xor
je
cmp
testb
sahf
mov
mov
lods
enter
or
xlat
and
mov
dec
xchg
mov
or
push
cmp
cmp
out
mov
mov
mov
or
or
movsb
mov
in
mov
cmpsl
xor
jmp
pop
inc
scas
call
sub
arpl
lcall
inc
jo
pop
shlb
ffreep
test
sbb
dec
stc
mov
inc
pop
mov
jmp
jmp
cmpl
cld
cmp
rorb
cmp
mov
and
push
int3
or
mov
iret
cwtl
add
dec
xor
sti
cmp
mov
lcall
xchg
addl
adc
xor
stos
push
daa
pop
call
mov
adc
int3
loop
pop
xchg
sub
gs
push
enter
jnp
mov
out
ss
lcall
pop
aad
cwtl
pop
ds
test
sarl
jl
sbb
cmc
pusha
push
jle
pop
push
and
dec
cmp
pop
add
dec
inc
sub
cmpl
and
clc
ret
call
xchg
mov
xor
ljmp
dec
pop
or
jp
fstpt
decl
or
xor
add
adc
xor
xor
hlt
idivb
push
icebp
jl
incl
aad
cmp
in
ficomps
mov
fdiv
std
jns
std
sbb
mov
jl
add
inc
sub
push
jge
icebp
movb
jmp
sbb
jp
jg
dec
cmp
cli
add
pop
xchg
incl
or
loopne
out
movsb
ss
rcrl
mov
mov
adc
call
call
bound
and
or
sbb
cwtl
dec
xchg
out
inc
inc
clc
xchg
mov
ljmp
pushf
mov
xchg
mov
insb
xor
cmpsl
push
addr16
pushf
mov
js
fistpll
push
jmp
clc
loope
pop
inc
pop
jno
daa
scas
das
fstpt
and
mov
mov
push
push
cmp
das
clc
cmp
mov
push
sub
jo
adc
mov
xchg
sar
ljmp
fdiv
and
scas
mov
loope
imul
sub
popa
daa
outsl
lcall
or
or
mov
les
pop
xor
mov
bound
lret
pushl
je
popa
jae
es
xor
call
mov
sub
outsl
push
dec
pop
jb
ljmp
insb
jmp
cld
daa
xor
cmp
pop
mov
sub
add
pop
movsl
icebp
add
decl
arpl
jl
cmc
pop
inc
dec
rorb
mov
stc
sbb
lock
decl
inc
mov
mov
push
push
push
sbb
scas
xchg
sbb
andl
cwtl
push
push
into
cmp
jl
pop
fsubl
loop
inc
sbb
fidivs
xor
jg
mov
inc
call
and
pop
pushl
push
fnstsw
cli
add
xorb
sbb
jns
ljmp
push
inc
mov
sub
gs
loopne
push
popf
lods
mov
dec
in
int3
xchg
or
decl
lahf
push
mov
mov
fwait
jecxz
out
pushf
jbe
xor
sub
pop
clc
sub
cli
pop
sti
pop
sbb
incb
push
dec
lods
pushf
ret
mov
gs
int
test
push
iret
fidivrs
mov
cmp
pop
push
std
mov
mov
lea
pushl
jbe
xchg
pop
jecxz
fstl
jo
xchg
cmp
sub
jne
ret
push
lds
imul
das
stos
pop
iret
scas
stos
push
enter
ds
dec
cwtl
into
pop
fcmovu
rcll
add
mov
aas
shll
xor
repz
out
lea
aas
jae
mov
dec
fsubl
pop
rep
mov
inc
adc
outsb
jb
sbb
xchg
fcomip
ljmp
mov
jge
sbb
ljmp
mov
mov
and
pop
das
imul
pop
or
or
std
sbb
sbb
jmp
sbbb
xlat
es
filds
jmp
or
std
push
mov
cmp
or
sub
call
fdivrl
icebp
call
add
adc
nop
ss
ljmp
mov
cmp
pop
jp
jle
xchg
adc
int
lds
movl
out
sbb
push
test
fldenv
dec
stc
push
dec
jo
dec
lcall
rol
gs
vmulsd
mov
ret
shl
and
dec
mov
sbb
mov
mov
fidivl
insl
adc
push
std
filds
mov
or
and
and
push
cmp
mov
fstpt
and
or
or
mov
adc
push
in
xor
ja
push
sbb
add
push
xlat
out
sahf
mov
inc
insb
pop
push
mov
pushl
std
lahf
jb
in
adc
jb
je
jb
jecxz
mov
out
outsb
adc
incl
shlb
into
mov
or
and
ret
mov
adc
jmp
cli
mov
xor
iret
in
jo
sub
pop
iret
gs
leave
push
mov
movb
add
lcall
shld
jae
adc
dec
mov
les
test
mov
sub
add
sub
dec
xchg
xchg
add
stos
mov
in
pushl
test
je
or
mov
pop
fcoml
adc
lcall
in
push
fstl
xor
inc
orl
jbe
pop
ljmp
lock
xor
mov
cmpl
mov
dec
xor
jmp
lods
inc
mov
adc
adc
xchg
loopne
mov
out
push
mov
lret
cmp
jg
arpl
jb
xchg
movsb
mov
ss
mov
por
lret
inc
push
cmc
jmp
mov
mov
fldlg2
movsl
xor
cvtps2pd
push
cmp
incl
rorb
sub
mov
stc
add
add
mull
pop
std
push
sub
add
add
les
and
cwtl
pop
xchg
pop
cmc
ljmp
lret
dec
dec
mov
call
push
mov
cwtl
insb
out
dec
aam
pop
sar
fists
and
sbb
ffree
pop
push
repnz
ss
das
pop
adcb
mov
sar
mov
inc
add
and
decl
mov
jns
push
dec
sub
inc
in
xchg
in
lcall
push
out
lcall
sub
repnz
or
aad
jnp
scas
iret
inc
test
fmull
notb
lcall
test
push
ret
jne
xlat
mov
in
lcall
and
and
push
adc
nop
push
add
add
test
fwait
adc
inc
rorb
stos
andb
push
add
add
push
and
add
sub
mov
add
fs
jmp
mov
cmc
icebp
mov
add
lret
mov
adc
incl
adcl
jne
pop
xor
incl
cmp
or
lods
cwtl
mov
inc
mov
mov
mov
push
add
pushl
sbb
into
cmpsl
shrl
fists
out
sbb
sbb
loopne
and
sti
mov
push
sbb
js
push
adc
ja
mov
adc
cmp
decl
and
pusha
mov
xor
push
push
outsl
dec
add
mov
push
push
shll
fldt
ret
mov
mov
insb
mov
push
addb
sub
mov
mov
jge
sub
sub
add
pop
mov
dec
scas
xor
decb
mov
push
ljmp
cli
inc
mov
mov
mov
mov
add
test
mov
je
std
mov
decb
jge
inc
cmp
in
mov
add
inc
dec
jne
sarl
push
pop
adc
mov
pop
movsb
call
mov
test
and
incl
cmp
out
rcrb
lcall
jne
ljmp
call
mov
lea
in
adc
mov
jle
aam
jg
cmp
push
xor
in
inc
lea
jle,pt
flds
pop
sub
icebp
mov
jmp
negl
stos
pusha
cltd
cmpsl
inc
xor
aad
outsl
cmc
adc
sub
popa
into
sbb
outsb
ljmp
jmp
and
leave
mov
push
jmp
in
sbb
cmpsb
xchg
mov
icebp
cmp
nop
mull
inc
mov
ret
pop
xchg
sbb
jp
push
mov
xchg
mov
xor
in
dec
push
cmp
mov
sub
lahf
dec
lcall
js
insb
call
push
jae
or
push
fildll
call
sbb
shll
in
loope
gs
sbb
cmp
push
insb
or
decl
pop
and
mov
ljmp
and
cwtl
push
inc
jne
pop
mov
inc
sub
and
xor
outsl
xor
aad
movsb
mul
into
test
test
inc
inc
push
loope,pn
inc
dec
cmc
imul
enter
inc
subl
xor
cli
out
jmp
das
cli
ret
cwtl
jl
pop
jae
rclw
jp
xchg
or
xchg
pop
pushl
fdivr
int
xorl
jp
jno
cwtl
mov
mov
pop
mov
ljmp
or
sbb
pop
push
xor
xchg
xor
sbb
push
add
pop
pop
adc
call
adc
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
mov
decl
mov
and
jno
in
rorl
pop
stos
xor
jl
iret
mov
xor
mov
xchg
pop
push
pop
fdivs
jmp
inc
pop
sbb
mov
jmp
cs
mov
jmp
or
daa
fisubrl
dec
fistpl
lods
jl
lock
sub
xlat
and
xlat
lcall
and
sbb
jns
push
fs
pushf
inc
push
adc
dec
dec
cltd
add
out
xchg
ljmp
dec
jnp
push
xor
push
pop
add
clc
cli
xor
mov
pusha
bound
cld
jmp
push
retw
out
nop
mov
jle
sbb
popa
in
mov
fbld
lahf
cmp
aam
inc
xchg
data16
sub
mov
in
decl
push
dec
cmp
sub
mov
dec
fcompl
sbb
inc
fdivrl
repnz
ds
xchg
xchg
decl
lret
push
insl
jbe,pn
dec
test
mov
pop
scas
fisubrs
xchg
mov
adc
decl
inc
adc
je,pt
push
pushf
test
lcall
loope
inc
push
sti
adc
incl
lcall
faddl
sbb
pop
push
cwtl
sub
dec
xchg
cwtl
std
push
jb
out
mov
arpl
cmc
jg
incl
dec
hlt
adc
stc
cwtl
pop
lea
sub
adc
repz
fistl
mov
ja
popf
push
or
lcall
sub
push
add
or
cmp
dec
aas
frstor
inc
ss
push
icebp
rcrl
scas
mov
mov
and
adc
mov
pop
es
mov
call
aas
stc
push
pusha
xor
sub
lock
add
outsb
cld
push
sub
fcomp
or
test
pop
mov
sbbb
daa
push
fwait
sar
dec
adc
ljmp
ficomps
ret
lret
and
jg
scas
movsl
push
push
inc
mov
scas
clc
jmp
mov
mov
je
shll
xchg
lret
dec
bound
ljmp
push
push
mov
mov
xor
mov
out
cltd
div
mov
mov
pushl
gs
arpl
pop
push
mov
cmc
out
mov
lahf
outsb
or
ljmp
inc
cltd
or
sub
test
sub
fldt
inc
sbb
fildll
jmp
stos
and
jl
pusha
lahf
mov
adc
subb
addb
insb
repz
call
fstpl
int
adc
mov
inc
adc
or
xor
push
sbb
pushl
mov
push
addr16
popa
push
bound
into
xor
movsl
loop
push
idiv
outsl
call
data16
aam
sub
mov
movsl
or
adc
pop
addr16
iret
jmp
dec
lahf
lods
movsl
mov
adc
idiv
in
cmp
jb
leave
ljmp
sbb
iret
or
push
test
in
jmp
jl
outsb
dec
js
outsl
dec
daa
xchg
bound
xlat
fs
fiadds
int
adc
imul
ljmp
bound
js
pop
lret
inc
cmc
sbbl
mov
sbb
sbb
jae
shlb
dec
jge
sarb
repnz
sti
push
lcall
adc
pusha
ja
jg
js
pop
jge
jle
inc
cs
pop
jmp
mov
mov
incl
stos
mov
adc
ja
or
jl
gs
dec
gs
mov
push
push
inc
or
gs
fisubl
bound
les
jnp
arpl
push
test
sbb
cld
cmp
sub
test
jnp
pop
xchg
mov
idiv
bound
out
in
xchg
sub
push
mov
jnp
and
jg
fs
ja
pop
sbb
andl
aas
int
jb
loop
ret
outsl
xchg
adc
jns
retw
bound
jbe
lock
jnp
jle
push
icebp
pop
and
mov
xchg
and
xchg
xchg
push
fcoms
ljmp
mov
xchg
test
imul
mov
jle
jge
sahf
imulb
inc
pop
pop
ret
push
int3
aam
mov
xor
pop
or
dec
mov
pop
cmc
cmp
push
lock
push
mov
push
data16
jbe
cmp
jnp
outsl
mov
icebp
cmc
xchg
loope
xor
pop
int
roll
aam
jg
jo
call
rcrl
fiadds
cmc
in
pop
sub
les
and
sbb
push
dec
fsubl
imul
testb
jge
pop
out
lock
es
push
in
pop
mov
inc
lahf
fistpll
or
iret
fiaddl
jo
pop
lock
xchg
int
stc
out
cmc
pop
stos
xchg
lds
mov
jnp
loopne
or
out
int
fildll
mov
or
insb
fsub
pop
cmp
cs
fdivs
push
push
in
in
xchg
ret
cmpsl
jge
pop
arpl
outsb
push
outsl
push
cmp
jno
fcomip
int
outsl
jae
pop
lahf
incl
fidivs
iret
dec
loopne
mov
xchg
jnp
divb
sarb
cmpsb
dec
sub
jp
sub
sti
push
xor
outsl
push
pop
mov
push
in
sti
cwtl
mov
mov
ja
loopne
mov
lcall
sti
mov
lods
movsl
add
pop
or
mov
dec
jl
and
call
and
mov
rorl
jmp
out
mov
jle
rcll
pop
adc
ljmp
sarb
fwait
adc
or
cs
insl
fisttpl
scas
imul
pop
cmc
adcl
sbb
fdivrs
mov
outsb
fcmovbe
aad
pop
sbbl
rorl
sbbl
mov
int
nop
arpl
ror
shl
fcoms
adcl
aam
cmpl
jmp
lds
stc
jmp
xchg
arpl
dec
adc
jne
adc
sahf
fadd
call
jns
push
mov
cli
adcl
pop
repz
pop
mov
push
pop
ja,pn
adc
mov
lcall
cwtl
lock
push
inc
pop
jle
cwtl
loopne
mov
cmpsb
push
push
cwtl
ds
cmp
out
or
cwtl
out
mov
rorl
pop
pop
fcmovnu
sahf
fiadds
cmp
mov
loop
cwtl
sar
push
xchg
ljmp
inc
cmc
and
xchg
or
dec
xchg
lcall
arpl
add
das
clc
mov
lcall
movsb
sbb
push
inc
and
cwtl
call
or
roll
jg
nop
fdivs
push
sbb
dec
adc
cs
add
lock
scas
fidivl
mov
bound
push
adc
decl
jg
cmp
sahf
sbbl
dec
in
mov
loope
sub
aas
movsl
loope
cwtl
cmp
leave
cmpl
test
addl
movsb
sti
cwtl
popa
orl
out
sbb
sub
les
push
pop
mov
cmc
sar
incl
or
lcall
jnp
shll
or
stos
in
pop
es
xchg
roll
jp
mov
clc
loopne
dec
stos
inc
mov
decl
sti
in
jne
mov
popa
push
ja
gs
sbb
es
out
cmp
jp
xchg
mov
jbe
cltd
std
push
addr16
xor
pop
pop
sbb
movsl
pop
adcb
in
push
cmc
mov
sbb
xorl
fidivl
outsb
lods
and
cmc
xchg
imul
shl
pusha
in
push
movsl
mov
cmpsb
jns
cltd
mov
movntq
lock
jl
xchg
bound
xor
iret
push
push
xchg
shl
cmc
pop
sub
xchg
ret
subb
sub
sub
mov
std
ljmp
inc
sub
inc
in
push
mov
mov
dec
clc
inc
xchg
sti
mov
push
xor
aaa
dec
jb
push
cmp
jg
in
lock
sub
lcall
cs
icebp
xchg
push
push
or
cld
incl
in
addr16
mov
push
or
or
cli
decl
cld
cmpsb
int3
cli
mov
adc
mov
call
incl
mov
inc
shlb
outsl
dec
cmpb
push
dec
loopne
incl
jno
addr16
pop
cmp
cmp
sub
aas
or
js
lret
pushl
pushl
shlb
mov
jnp
int3
addr16
mov
add
sub
xor
sub
jecxz
sbb
jmp
mov
jb
jo
push
imul
mov
gs
imul
popa
je
jb
jae
popa
or
outsl
jmp
dec
fs
inc
data16
inc
js
push
inc
dec
gs
dec
sub
jbe
push
jmp
xor
dec
dec
inc
dec
outsb
inc
inc
dec
jno
dec
je
cmp
pop
inc
dec
push
outsl
decl
dec
addr16
jae
xor
insb
inc
push
pop
aaa
ss
dec
jno
jae
je
inc
pop
xor
dec
mov
call
imul
inc
jb
xor
push
inc
jp
imul
js
data16
call
imul
jns
xor
push
xor
dec
xor
addr16
dec
outsl
cmp
fdivr
fistps
push
push
xor
xor
jno
popa
dec
je
adc
jbe
xor
jb
inc
je
jbe
push
pop
outsb
push
push
fs
sar
je
js
jb
inc
push
jp
push
jb
push
jb
jo
xor
pushw
ja
jg
je
insb
inc
insl
push
imul
inc
data16
arpl
dec
outsl
inc
pop
insb
dec
outsl
or
das
insb
dec
jno
push
jae
dec
je
jb
js
dec
insb
ja
call
gs
dec
cmp
mov
pop
inc
push
push
xor
sbb
jp
push
imul
inc
je
mov
in
ja
inc
jo
push
dec
push
les
xor
dec
inc
dec
dec
push
or
outsl
push
push
jno
push
lock
jae
ss
inc
jge
or
data16
jbe
bound
loop
popa
push
popa
pop
fs
cmp
mov
inc
ja
dec
inc
inc
jo
xor
xor
push
gs
mov
aad
movsb
mov
add
mov
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
push
incl
add
adc
push
add
cmovb
test
lcall
inc
inc
add
dec
aaa
xchg
inc
add
or
add
push
addb
addl
add
adcb
adc
adc
subb
mov
add
sbb
push
addb
sbb
add
test
sub
sti
pop
rorl
xchg
push
pop
or
xorb
aaa
es
aaa
push
aaa
xchg
adcb
sarl
sub
mov
insl
daa
and
hlt
mov
incl
sarl
cmp
or
add
insl
add
es
sub
frstor
testb
sub
cmp
sbb
lcall
xor
rcll
add
sti
sahf
out
rcrl
fwait
mov
pusha
ds
and
std
xor
sbb
xchg
cmpsl
aas
inc
push
cwtl
pop
repz
jbe
imul
mov
imul
mov
pop
sti
mov
push
gs
pusha
or
test
lea
repz
fldcw
lret
push
xor
dec
out
jb
mov
ss
fildl
mov
add
mov
xchg
cmp
mov
loopne
mov
in
mull
fwait
sbb
lea
cli
int
fucomip
ficompl
mov
sbb
inc
mov
iret
mov
shrl
jae
adc
shrl
pop
out
out
test
mov
add
dec
jge
xor
shll
in
pusha
or
fidivl
mov
inc
xchg
sbb
imul
scas
jmp
sbb
test
add
xchg
ljmp
outsl
pop
adc
mov
fsubrs
pop
mov
imul
ret
mov
js
push
js
mov
cmp
in
mov
cmpsl
imul
in
mov
pusha
sbb
stos
push
cmc
push
jmp
ror
sub
jge
imul
loope
mov
jmp
pop
stos
sub
dec
sarl
cs
lea
cmp
aad
aas
xor
imul
inc
sarl
jecxz
jg
incb
sbb
loope
shlb
dec
fldt
sbb
and
add
mov
cmp
shrl
loopne
negl
cltd
jne
imul
out
pop
push
mov
pop
cmpsl
sbb
in
lock
xor
or
in
ret
lahf
xchg
push
mov
gs
push
mov
out
js
mov
jmp
leave
sbb
mov
imul
mov
cmp
sbb
xor
add
inc
push
inc
xchg
bound
arpl
ja
cmp
sbb
sub
in
mov
popa
or
add
fwait
inc
push
ss
aas
dec
rorl
test
divl
repz
sbb
sbb
jmp
cltd
out
cmpsl
imul
dec
mov
mov
out
fisubrl
jl
sti
loopne
sarl
ja
imul
pop
xor
or
push
jo
mov
pop
sti
cmpsb
xor
push
mov
test
cmp
sti
imul
pop
jo
adc
mov
into
mov
mov
and
sbb
sti
stos
add
aad
incb
push
or
mov
or
add
fnstsw
cmp
stos
lds
add
neg
push
mov
sub
es
mov
mov
dec
lock
aad
sarb
push
add
dec
sbb
dec
fidivrl
fbstp
mov
or
xor
sub
ret
push
push
pop
inc
insl
add
push
add
xor
push
fwait
jo
sub
ret
mov
jg
sti
pop
push
push
push
jno
cmp
or
xor
lock
pop
out
subl
mov
push
and
xor
xlat
lock
js
sub
or
cld
jo
jne
xchg
ret
add
jg
jge
and
cld
stos
int3
inc
mov
add
pop
mov
fucomi
lcall
jle
out
repnz
int
mov
hlt
jnp
fs
xor
xchg
stos
jg
roll
add
es
add
incb
lds
rcll
sbb
js
mov
push
in
xor
outsl
jg
call
mov
lret
push
jno
loope
cltd
inc
cmpsb
ljmp
icebp
jmp
dec
out
add
cld
rcr
xor
add
dec
pushl
fwait
bound
push
pop
dec
fists
das
in
mov
xor
xor
adc
aaa
xor
and
sub
inc
arpl
shr
std
add
cs
sub
jno
mov
decb
or
outsl
pop
ret
ret
inc
push
inc
push
movb
add
movb
pop
shr
inc
jae
ret
adc
pop
dec
data16
adc
es
test
inc
and
adc
imul
inc
lret
mov
and
sub
dec
inc
inc
cmp
xor
dec
adc
pop
sti
dec
adc
inc
jo
adc
push
dec
sbb
in
add
js
or
adc
fs
mov
and
add
es
bound
xor
cmp
aaa
add
add
xchg
neg
fidivrs
sahf
rcrb
das
rolb
and
add
add
add
or
or
sub
lock
add
add
inc
mov
lods
rcr
add
loopne
mov
rolb
repz
add
lea
test
ss
mov
xchg
adc
add
test
fwait
stos
add
cs
cs
pop
dec
imul
repnz
imul
sub
add
test
cs
sarl
pushl
lock
inc
rclb
adc
sbb
push
push
adc
jle
jo
push
jo
jb
inc
pop
pop
lock
or
inc
inc
inc
cmc
push
inc
inc
xchg
inc
mov
popa
fildll
fimull
inc
add
inc
inc
loop
pop
mov
or
push
push
xor
lock
adc
or
sbb
arpl
pusha
data16
push
mov
outsb
insl
insb
mov
jbe
je
jnp
fcomip
outsl
clc
add
and
daa
test
and
sub
sub
cs
xor
call
xor
sbb
add
add
ds
mov
add
add
jg
les
inc
inc
adc
dec
dec
inc
add
dec
clc
dec
dec
dec
sbb
lods
add
or
decl
jmp
push
add
inc
lock
jecxz
pop
mov
xchg
test
push
inc
add
push
mov
fstpt
outsl
push
pop
aam
or
mov
adc
outsb
push
ja
aaa
std
in
aaa
je
and
decl
faddl
add
insb
jg
pop
icebp
pop
add
xchg
jmp
aaa
lds
cli
or
mov
into
cmpsl
in
ljmp
mov
scas
mov
or
mov
xchg
inc
or
pushl
mov
test
push
enter
in
loope
xor
mov
add
nopl
xor
and
add
or
loop
jmp
add
in
ljmp
clc
jb
sub
push
pop
pop
movsl
sbb
nop
hlt
add
lcall
lcall
dec
pop
dec
enter
mov
dec
jmp
sbb
add
int3
mov
mov
adc
rcpps
or
cmc
pop
jb
and
jno
xchg
pop
fistpl
push
ljmp
lcall
mov
and
ja
hlt
outsl
clc
dec
outsb
loopne
lods
jbe
imul
inc
mov
mov
fistps
and
frstor
insb
incb
loop
and
loope
add
rorb
add
incl
mov
lods
mov
add
mov
testb
or
cmp
sti
push
test
push
outsl
insl
imul
push
jmp
stos
inc
sub
ret
rolb
mov
shrl
cwtl
adc
add
or
in
in
roll
inc
sub
ret
cmp
adc
add
jno
mov
mov
and
js
push
mov
xor
sbb
mov
divb
jnp
inc
pop
mov
orl
rorb
or
push
stos
rcll
ficoml
xor
push
inc
add
sbb
rclb
add
leave
jl
sahf
push
fwait
les
sub
sarl
push
sub
enter
xor
add
xor
push
add
or
mov
pusha
rorb
push
mov
shlb
jo
push
aad
rorl
cmovle
cmp
add
xchg
mov
rolb
fucomi
push
dec
mov
add
adc
pop
shll
lods
add
in
push
and
pop
insl
xorl
dec
xchg
inc
rcrb
add
pusha
dec
pop
ret
mov
sub
sub
push
inc
cmpsb
mov
outsl
push
inc
add
fwait
movsl
add
inc
mov
xor
sarb
jecxz
dec
mov
inc
jnp
xorb
rclb
sbb
scas
mov
mov
rolb
lock
pushl
loopne
jmp
loopne
cmpsl
inc
inc
and
mov
roll
jbe
mov
push
or
fistpl
loopne
xchg
push
jp
add
push
push
push
loopne
xlat
or
or
inc
or
mov
loopne
or
add
mov
push
fsubrs
mov
insb
mov
pop
pop
dec
sti
out
push
mov
fwait
cmpsb
add
repz
sub
lods
mov
or
push
jecxz
ret
fnstsw
xor
cld
adc
loopne
aaa
dec
in
adc
push
mov
add
mov
stos
mov
pop
push
dec
pop
push
jo
push
or
pop
repz
xor
loopne
lahf
lsl
adc
pop
outsb
lcall
ret
loopne
pop
adc
add
add
add
or
rclb
lcall
pop
add
sbb
mov
jl
mov
cs
add
or
loopne
xchg
add
or
push
rcr
or
and
aaa
in
or
aam
xlat
mov
fwait
jbe
push
and
loope
aam
push
stos
shrb
mulb
mov
or
xor
adc
pop
sub
fchs
int3
or
test
out
pop
push
loopne
jecxz
xchg
sbb
inc
repz
inc
lret
out
push
jmp
mov
add
das
sbb
inc
sbb
push
setp
add
shl
dec
ja
pop
cld
sbbl
or
loopne
jo
addb
sub
or
pop
cmp
loope
push
or
out
mov
fistpl
pop
loopne
iret
mov
out
out
aam
sbb
mov
add
sbb
pop
daa
cmp
pop
in
loop
negb
jns
cld
or
cmp
dec
insl
xchg
inc
push
mov
and
add
dec
pop
pop
pop
push
loop
or
push
in
or
inc
rcrl
fmuls
adc
nop
roll
sub
lahf
sbb
loopne
mov
fdivrp
mov
cmp
cwtl
loopne
lret
jb
aas
dec
or
and
sub
pop
mov
adc
adc
nop
loopne
addr16
cli
jle
jo
loope
ficoml
adc
add
cld
and
in
fldenv
xchg
ja
xor
cld
xor
sti
sbb
xchg
stc
imul
pop
loope
mov
and
and
and
push
mov
mov
loopne
cvtps2pd
add
lock
xor
push
icebp
or
testb
pop
mov
jo
pop
mov
jno
mov
sbb
lock
xor
or
push
mov
int
stos
cmp
sbb
xor
sbb
fstpt
lock
jo
mov
mov
or
ss
lods
loop
lock
loop
xor
lock
stos
xchg
jo
sti
or
test
or
lods
fsubrs
sub
dec
imul
sbb
jo
sbb
insl
sub
adc
daa
pop
test
out
mov
pop
sti
testb
cmp
add
mov
fcmovnu
pmaxub
insl
lock
stos
cmp
adc
or
je
sbb
pop
inc
jno
add
jo
adc
xor
mov
jmp
addl
jecxz
xchg
cmp
cmp
push
cmovae
dec
or
mov
or
repnz
lock
out
cmpsb
pusha
sti
add
jno
mov
sahf
aad
enter
jl
lret
icebp
mov
cmpsb
insl
icebp
sbb
rcrl
aas
mov
stos
lea
push
test
add
lcall
imul
ljmp
loop
scas
rclb
shlb
push
inc
inc
sti
rclb
jno
or
data16
fisubs
nop
add
sub
dec
ljmp
mov
inc
inc
xchg
add
mov
jno
mov
xor
add
xchg
add
inc
mov
mov
add
arpl
jg
loopne
loope
dec
adc
inc
out
jle
in
inc
ljmp
inc
jmp
daa
inc
out
cmp
inc
ds
in
jg
aaa
jg
inc
repnz
inc
inc
icebp
cwtl
inc
lock
add
jge
cmc
inc
sbb
aaa
jg
aaa
test
inc
and
sbb
clc
inc
es
cmp
add
sahf
inc
std
cmp
inc
adcl
addb
repz
adc
test
inc
mov
mov
inc
pop
inc
mov
aaa
jg
inc
dec
inc
xchg
push
inc
xchg
inc
inc
inc
xchg
add
xchg
inc
adc
mov
inc
lcall
popf
inc
and
push
inc
stc
fwait
mov
inc
cmpsb
jns
movsl
inc
inc
inc
stos
dec
inc
test
mov
inc
lods
inc
dec
inc
mov
inc
mov
pop
inc
mov
inc
mov
adc
das
clc
fwait
mov
sub
mov
inc
and
lcall
inc
gs
addr16
jae
adc
rolb
faddl
enter
inc
inc
cli
pop
lock
rclb
jb
inc
pop
inc
jbe
inc
dec
or
or
outsb
inc
inc
dec
xor
adc
pop
add
das
and
mov
fwait
pop
adc
inc
dec
rclb
inc
pop
inc
push
fnsave
enter
add
pushf
inc
adc
mov
imul
js
inc
push
inc
mov
lock
popa
inc
and
mov
inc
jg
out
stc
js
push
inc
pusha
inc
and
or
cmp
adc
jo
mov
sbb
adc
inc
push
inc
cmovb
lcall
xor
inc
sub
mov
rclb
sub
cs
movsb
adc
ss
inc
push
adc
push
push
inc
mov
push
xor
inc
je
adc
cmp
cmp
call
xor
arpl
hlt
loope
dec
mov
inc
dec
jae
sbb
out
mov
jae
mov
jae
inc
loopne
ljmp
call
mov
jae
cmpsb
jae
inc
movsb
jae
xorb
mov
fwait
mov
out
lock
testl
cmc
inc
call
fwait
hlt
out
jae
inc
in
jae
bnd
inc
lock
divb
fwait
mov
jae
cli
jae
inc
clc
jae
jae
inc
cld
jae
mov
jae
inc
xchg
test
inc
mov
mov
inc
mov
mov
jae
inc
mov
lea
inc
mov
xchg
jae
fwait
mov
jae
fwait
jae
inc
cwtl
jae
popf
jae
inc
pushf
jae
das
clc
fwait
mov
mov
xchg
inc
cmpsl
jae
shlb
outsl
out
jae
stos
jae
inc
test
cltd
inc
scas
jae
fwait
out
scas
jae
inc
lods
jae
mov
popf
inc
fdivs
filds
out
incl
inc
cld
inc
pop
inc
adcb
inc
addl
outsl
pusha
inc
xchg
inc
xchg
test
inc
test
inc
imul
out
push
mov
inc
mov
popl
inc
mov
lea
outsl
out
inc
mov
inc
jae
xchg
jb
xchg
inc
jno
nop
out
jo
xchg
inc
ja
xchg
jbe
xchg
inc
jne
xchg
je
fwait
inc
jnp
lcall
cltd
inc
jns
mov
add
add
inc
out
out
inc
cmpsl
pop
inc
cmpsb
inc
push
inc
movsl
add
inc
stos
out
decb
inc
stos
inc
or
or
inc
or
cmovne
outsl
out
or
inc
mov
inc
mov
adc
adc
inc
dec
mov
mov
pop
add
mov
adc
pop
lods
push
push
push
adc
bound
je
sbb
inc
sbb
fisubrl
fisubrl
jle
sbb
adc
xchg
inc
in
adc
nop
inc
sbb
repz
repnz
inc
inc
icebp
inc
in
adc
inc
notl
inc
stos
inc
inc
inc
cmc
adc
push
inc
inc
sti
adc
inc
dec
inc
stc
adc
scas
push
inc
call
dec
into
inc
roll
adc
scas
push
inc
adcl
loopne
jae
adcl
in
xchg
inc
add
xchg
cli
adc
jae
pop
inc
test
add
push
inc
mov
or
cmp
inc
jns
adc
inc
jg
sbb
adc
inc
jge
xchg
adc
inc
or
int
sbb
adc
inc
nop
inc
add
add
inc
cld
int
in
inc
inc
xchg
adc
xchg
inc
jno
adc
inc
lcall
je
inc
or
adc
inc
sahf
inc
or
push
test
inc
or
insl
mov
cmp
inc
push
data16
inc
gs
inc
int
adc
inc
push
js
addr16
jae
loop
push
adcb
addb
int
push
pop
adc
inc
hlt
in
sbb
adc
inc
pop
inc
mov
pop
inc
mov
insb
mov
adc
inc
bound
je
inc
mov
pusha
inc
sbb
lahf
mov
mov
push
inc
mov
push
imul
mov
stos
mov
imul
loope
lret
inc
loopne
lret
inc
leave
mov
out
inc
in
iret
inc
jmp
inc
ljmp
fists
int3
inc
in
inc
movb
arpl
inc
out
inc
icebp
out
inc
aas
lock
inc
testl
cmc
inc
roll
inc
test
inc
mov
inc
mov
stc
inc
repz
clc
inc
lea
inc
rolb
inc
roll
inc
rolb
inc
xlat
inc
xchg
test
incl
fildl
inc
fiaddl
inc
flds
inc
fadds
inc
filds
inc
fiadds
inc
fldl
add
decl
jecxz
xchg
inc
loop
xchg
inc
les
inc
out
ljmp
rclb
inc
fwait
inc
jmp
lcall
inc
mov
cld
das
shlb
inc
cmpsb
inc
testb
fsubrl
sar
movsb
inc
hlt
inc
stos
inc
sti
inc
stos
inc
cli
inc
test
inc
repnz
inc
incl
cld
das
shrb
inc
lods
inc
cld
inc
mov
idiv
pushl
inc
addb
addl
inc
xchg
inc
test
inc
test
inc
mov
mov
dec
hlt
pusha
loope
dec
data16
add
dec
arpl
dec
bound
dec
inc
data16
loop
jmp
loopne
ljmp
pusha
call
dec
fisubs
dec
frstor
dec
jecxz
in
dec
jmp
push
dec
out
pusha
decl
popa
decb
popa
std
dec
es
cld
dec
push
popa
orb
orl
incl
dec
jg
mov
popa
mov
bound
dec
and
dec
pop
popa
cltd
dec
shll
lcall
dec
push
sahf
dec
imul
dec
imul
popa
mov
roll
dec
shll
dec
shlb
push
bound
dec
popa
addr16
data16
dec
dec
addr16
jg
jmp
dec
dec
cmpsb
dec
dec
stos
sbb
stos
dec
dec
addr16
dec
push
scas
pop
cld
fbstp
data16
dec
push
lods
dec
jg
lods
dec
stc
pusha
mov
clc
pusha
mov
mov
pusha
mov
pusha
mov
pop
data16
data16
ja
mov
outsl
mov
loope
cmpsb
jmp
dec
inc
arpl
dec
inc
arpl
fisubl
dec
inc
arpl
dec
inc
arpl
dec
mov
arpl
dec
dec
arpl
dec
push
arpl
dec
push
arpl
dec
pusha
addr16
dec
gs
dec
data16
dec
ljmp
dec
push
lock
adc
testb
cmc
dec
sbb
push
dec
sbb
mov
dec
push
arpl
dec
push
decb
add
dec
imul
dec
pop
mov
dec
push
bound
dec
popa
bound
andb
hlt
lea
mov
decl
xchg
dec
pop
arpl
dec
pop
arpl
dec
pop
bound
dec
jo
lcall
cwtl
dec
out
data16
dec
andl
cmc
popfw
dec
mov
dec
in
mov
mov
dec
out
data16
dec
data16
dec
push
movsl
fbstp
movsb
dec
jmp
data16
dec
jmp
cmpsb
gs
gs
dec
and
fildl
lods
dec
es
fs
arpl
lcall
fs
push
fs
sub
mov
cs
add
dec
add
dec
dec
gs
imulb
dec
jnp
mov
mov
rorl
in
jge
jmp
jle
dec
mov
sub
dec
out
orb
dec
pusha
test
add
push
cld
cmp
pusha
lea
popa
mov
nop
dec
dec
pusha
xchg
dec
out
fwait
dec
rcr
aaa
sbb
loope
mov
push
arpl
call
inc
mov
dec
nop
inc
cmpsl
dec
xchg
inc
cmpsb
dec
xchg
inc
movsl
dec
xchg
inc
movsb
dec
xchg
inc
stos
dec
lcall
inc
test
dec
cwtl
inc
scas
dec
lahf
inc
scas
dec
sahf
inc
lods
dec
popf
inc
lods
dec
pushf
inc
mov
jmp
inc
mov
mov
inc
mov
cmpsl
inc
mov
cmpsb
inc
mov
movsl
inc
mov
movsb
inc
mov
ljmp
inc
mov
dec
inc
dec
loope
inc
dec
loopne
inc
dec
out
inc
dec
out
inc
dec
in
incl
in
inc
dec
jmp
dec
dec
ljmp
call
dec
dec
dec
out
push
dec
dec
dec
in
add
in
dec
dec
dec
repz
push
dec
repnz
push
dec
icebp
dec
push
dec
lock
push
dec
testl
dec
testb
cmc
dec
push
dec
hlt
dec
push
dec
sti
dec
pop
dec
cli
dec
pop
dec
stc
dec
pop
dec
clc
dec
pop
dec
decl
std
decl
dec
pop
dec
std
dec
pop
dec
cld
dec
pop
dec
orl
orb
orl
dec
xchg
call
pushf
dec
xchg
dec
test
dec
test
dec
mov
dec
mov
dec
mov
dec
mov
ljmp
dec
outsl
dec
mov
dec
lea
dec
mov
dec
xchg
dec
jae
xchg
dec
jb
xchg
dec
jno
nop
dec
pushl
xchg
dec
ja
xchg
dec
jbe
xchg
dec
jne
xchg
dec
je
fwait
dec
jnp
lcall
dec
popf
dec
jge
pushf
dec
jl
mov
dec
add
dec
add
dec
inc
dec
cmpsl
dec
pop
dec
cmpsb
dec
push
dec
movsl
dec
incl
dec
stos
dec
or
dec
or
dec
or
dec
or
dec
cmovge
dec
call
dec
mov
adc
dec
adc
dec
adc
dec
pop
dec
mov
push
dec
mov
adc
dec
mov
lcall
dec
mov
dec
jb
loope
jno
loopne
jo
out
ja
out
jbe
in
jne
in
pushl
dec
jnp
ljmp
jb
dec
js
out
dec
jg
out
dec
jle
in
dec
jge
in
dec
jl
repz
add
dec
add
dec
add
dec
inc
jb
dec
pop
jb
dec
push
jb
dec
add
incl
sti
dec
or
dec
or
dec
or
dec
or
dec
decb
jb
dec
or
decl
orl
orb
orl
jb
dec
pop
jb
dec
push
jb
dec
adc
call
mov
jb
dec
sbb
dec
sbb
dec
sbb
dec
pop
jb
dec
push
jb
dec
sbb
jecxz
lcall
xchg
dec
and
dec
and
dec
and
dec
and
add
ss
int
push
xchg
push
xchg
push
fwait
push
lcall
push
cwtl
push
lahf
push
sahf
push
popf
insb
ss
int
pushf
push
mov
push
mov
push
cmpsl
push
cmpsb
push
movsl
push
movsb
push
fldcw
stos
push
stos
push
test
jmp
push
scas
push
lods
push
lods
dec
jb,pn
dec
xor
dec
cmp
dec
cmp
cld
pushl
dec
ret
dec
jb
dec
lds
dec
into
jb
dec
int
mov
orb
push
mov
mov
push
out
mov
adc
push
adc
push
cmp
arpl
loop
jns
out
loopne
out
sahf
out
sahf
in
ljmp
jl
mov
repz
dec
dec
dec
dec
dec
push
ds
repz
pop
pop
mov
out
adc
adc
jns
out
adc
sahf
out
sahf
push
bound
jns
jnp
sahf
push
push
outsl
and
repz
push
push
insb
sub
and
ret
dec
arpl
into
repz
testl
rorl
xor
repz
shlb
xlat
xor
addr16
repz
data16
fcomi
cmp
repz
pusha
repnz
ret
fstps
fsubs
out
sahf
ja
push
outsb
fsubrl
sahf
out
sahf
sub
sub
das
out
jl
out
cs
sub
jns
shl
and
push
and
sahf
out
sahf
and
and
daa
idivb
out
es
and
sahf
out
sub
sub
cmp
cmp
sbbl
aaa
xorb
xor
cmp
test
test
repz
repz
mov
mov
repz
aas
mov
cmp
cmp
ret
mov
repz
repz
rcll
iret
nop
xchg
lds
les
ds
repz
stos
out
sahf
out
test
repnz
mov
push
push
lcall
dec
jl
jmp
cmp
sti
loop
xor
jge
xchg
cmp
ja
insl
sahf
pushf
dec
push
jg
pop
insb
jno
je
inc
movsl
sub
int
fcompl
ret
mov
inc
cmpsl
cmp
inc
pop
jo
cmp
push
inc
pushl
fisttpl
into
mov
mull
cmpsb
add
pop
jge
es
xchg
mov
or
je
mov
out
add
mov
and
mov
sbb
lcall
aas
les
rolb
repnz
adcb
les
jle
loope
ljmp
cwtl
xchg
sbb
shl
repz
pop
jg
cmc
andl
scas
adc
dec
call
dec
and
iret
dec
lods
cmp
imul
mov
fists
fbld
sbb
mov
push
jmp
lea
sub
sahf
or
cmp
pop
mov
sub
aas
ss
push
pop
cmp
dec
sbb
cmp
rorl
and
repz
mov
jne
push
cld
jmp
aad
decb
scas
icebp
lret
dec
iret
jb
jae
movsl
cmpsl
mov
xor
jns,pt
incl
repz
and
jo
jb
jb
jb
jno
jno
jno
jno
jno
jno
pushl
outsb
lds
cmpsb
add
shlb
call
cmp
mov
cwtl
idiv
call
ds
aam
or
rcl
out
inc
jno
push
jbe
std
push
popf
fdivl
shlb
pop
pop
pop
insb
lcall
inc
lret
rorb
sub
aaa
jo
jo
jo
jo
jo
jo
jo
fidivl
cmpsl
sbb
adc
push
out
dec
sbb
sbb
mov
daa
jne
int
ja
ja
ja
ja
filds
jg
pop
ja
ja
ja
ja
jo
dec
aad
sarb
or
adc
movb
mov
add
ja
ja
ja
ja
ja
ja
ja
jbe
jbe
int3
lock
std
sarb
jmp
xchg
ret
sbb
ja
outsb
push
sub
jbe
jbe
jbe
lock
pushl
jbe
jbe
jbe
jbe
jbe
jb
rolb
sub
adc
loopne
pop
cld
lcall
push
push
orb
jg
pop
jne
jne
jne
jne
divl
pushl
iret
mov
in
shrb
stos
jnp
lcall
fmull
xor
jl
jl
lcall
mov
jb
jb
lock
ljmp
pop
repnz
push
cmp
js
js
js
js
jg
jg
jg
jg
jg
ret
cli
xor
mov
add
lcall
das
fwait
dec
pushf
jmp
call
pop
jl
jl
jl
jl
jl
jl
jl
lret
cs
lock
lcall
pushf
stos
xlat
push
or
sbb
dec
push
out
xor
xchg
jae
jae
jb
lcall
jb
jb
jb
jno
jno
scas
jnp
xchg
pop
addr16
push
aas
pop
repnz
pop
lcall
adc
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
xor
ss
incl
mov
in
sub
addr16
nop
jbe
cmpsb
mov
test
dec
jne
jne
jne
adc
jge
xor
fcmovnu
icebp
push
pushl
inc
add
data16
inc
pop
int3
mov
ret
cli
xchg
je
je
je
je
jnp
jnp
call
jnp
jnp
jnp
xor
jo
sub
push
xchg
xchg
inc
push
test
mov
cmpsl
mov
xlat
mov
jns
jns
jns
js
js
js
js
into
arpl
mov
jg
mov
pop
and
jge
mov
xchg
jg
jle
jle
jle
jle
decl
pop
jle
fdivl
sbb
popf
mov
out
repz
test
xchg
push
ret
aas
cmc
push
pop
jge
jge
jge
jge
jge
jge
jge
jge
xlat
das
rclb
pop
push
push
incl
movsb
mov
or
cmpl
ja
ja
ja
ja
ja
ja
mov
jbe
outsb
xchg
mov
mov
sbb
imul
popa
sarb
sbb
jg
popf
cmp
jp
jns
jns
jns
jns
jns
jns
sti
data16
ljmp
push
jmp
aas
loop
mov
lods
mov
or
cmp
es
jg
jg
jg
jle
jle
in
jle
jle
jle
jle
jle
dec
lock
out
adc
sti
or
shld
xor
clc
ljmp
mov
push
jl
jl
jl
jl
rol
lcall
lcall
outsl
pop
outsl
mov
sub
jecxz
or
dec
ds
shr
aas
lods
cli
dec
jo
jo
dec
jo
inc
popf
ja
scas
mov
or
push
or
popa
and
cmp
call
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
and
test
push
cld
filds
jp
js
jle
jl
dec
ret
xchg
popa
mov
push
inc
sbb
push
sbb
decl
jo
ret
ret
mov
leave
enter
int3
rcl
rcl
xlat
aad
call
fcmovnu
fstp
jecxz
loope
out
in
jmp
jmp
in
repz
lock
cmc
pushl
push
sti
cli
stc
clc
std
cld
addl
mov
lea
call
xchg
fwait
lcall
mov
cmpsb
movsl
movsb
stos
stos
test
lods
mov
adc
cld
pushl
mov
mov
mov
inc
lock
mov
add
ljmp
add
push
add
or
femms
or
lock
adc
adc
push
adc
sbb
add
add
xor
xor
xor
sbb
sbb
ret
pop
add
add
add
xor
xor
xor
sub
sub
ret
das
add
inc
add
sti
idivb
inc
cmp
adc
adc
and
jg
mov
lods
sbbb
xchg
and
xchg
xor
incl
xchg
jo
mov
lea
sbbl
mov
fwait
and
lea
ret
or
outsl
or
add
pop
pop
add
push
adc
and
fildl
mov
aas
add
adc
icebp
xchg
ret
ljmp
and
jnp
and
mov
sub
das
lods
std
mov
inc
xor
sbb
aaa
rolb
sbb
add
das
sbb
sub
or
or
xor
aaa
xor
rclb
loopne
add
aam
push
subb
inc
enter
or
inc
fdivs
sub
enter
pop
adc
insb
jb
sub
shl
jb
push
adc
add
add
pop
sub
push
ja
nop
push
testb
dec
dec
add
jae
cld
incl
jns
add
arpl
ret
mov
add
outsb
add
orl
and
adc
rclb
insl
lds
rolb
add
hlt
sbb
push
cs
add
test
mov
and
mov
push
orb
mov
std
adc
aam
insb
adc
sub
push
mov
sub
or
lret
mov
mov
and
daa
pusha
add
add
orb
and
outsl
xor
es
add
pusha
stos
xor
cld
ja
sti
add
loopne
adc
inc
loope
sub
add
mov
or
lret
or
ss
rcll
add
aaa
xor
and
sub
and
xor
sub
insb
add
call
sub
das
and
xor
and
lahf
decl
xchg
loopne
and
or
cld
je
xor
popa
or
or
sti
push
inc
mov
out
call
jg
icebp
jae
cmp
adc
xor
add
add
ret
pop
insl
push
sub
xchg
mov
cld
fcomip
bound
and
shl
aad
ror
add
into
call
hlt
aaa
mov
leave
ror
cmp
ret
incl
inc
inc
jl
std
inc
pusha
ret
push
pop
cmpsb
pop
push
out
xor
adc
jg
mov
or
sbb
pop
outsl
insl
imul
cli
incl
dec
loopne
addl
mov
addb
test
mov
jg
xchg
loopne
lods
scas
stos
mov
adc
mov
mov
icebp
sub
incb
xchg
in
mov
inc
inc
jno
data16
ja
jg
je
outsb
pop
jns
jnp
add
pop
push
outsl
gs
cs
jge
push
inc
bound
adc
pop
push
mov
add
popf
lea
mov
jg
mov
in
out
ljmp
mov
dec
in
mov
xchg
movsl
popa
or
clc
cmp
sbb
sub
mov
mov
mov
jb
negb
div
call
jle
pusha
push
in
jge
outsb
mov
sub
lahf
lea
add
sti
jg
lret
sub
add
hlt
fld
int
int3
fiaddl
enter
stos
mov
mov
jl
xchg
cmp
sub
das
cmp
sub
add
fdivrs
or
push
pop
adc
and
dec
clc
pushl
cmp
or
xchg
mov
xchg
test
popf
sbbl
add
mov
add
lock
mov
mov
sub
sub
add
lea
rorb
rcr
rcrl
sub
xor
cmp
aas
push
and
jb
jg
fistpll
ja
jne
cld
dec
lret
fcomp
lret
fcmovne
sti
jl
ror
ror
flds
jg
dec
add
jmp
aam
xlat
rol
test
cli
dec
cld
add
stc
out
ficompl
xlat
icebp
in
add
divb
pusha
push
or
dec
inc
xor
in
inc
inc
inc
sub
mov
or
pop
push
sub
pop
and
push
push
push
add
push
je
adc
xor
fs
ss
jmp
cmp
cmp
jb
sub
and
add
or
loopne
cli
mov
cli
cmc
repnz
loope
clc
and
mov
sbb
clc
or
mov
dec
out
jae
pop
jbe
mov
dec
push
adc
stos
popa
push
jmp
cli
push
aaa
jl
incb
out
lods
push
adc
inc
sbb
movsb
mov
sbb
pop
inc
pop
pop
pop
add
push
pop
push
pop
pop
incl
dec
dec
mov
or
in
out
in
add
stos
ljmp
in
div
clc
mov
cmc
cli
hlt
icebp
mov
loop
mov
cld
enter
xchg
addb
lods
jge
push
inc
or
dec
dec
jle
pop
push
push
pop
pop
push
pop
add
pop
dec
dec
pop
dec
cld
decl
mov
insb
insb
cli
xchg
cmpsl
mov
scas
mov
jecxz
mov
lods
mov
fisttps
mov
movsl
or
mov
mov
fs
pop
sub
call
add
shlb
cmc
push
pop
or
fcoms
or
push
adc
adcb
push
push
fbstp
add
mov
mov
mov
mov
mov
mov
sbb
xor
or
or
push
orb
loope
adc
push
sarb
js
pop
dec
jp
jmp
pop
pop
push
pop
inc
inc
insb
add
inc
lret
into
adc
rcl
aad
aam
and
in
ret
jo
sbb
fdivrp
cld
data16
call
aam
neg
inc
leave
rol
les
test
sbb
sbb
cmp
inc
or
iret
sub
jmp
add
out
shr
hlt
cmc
in
add
inc
add
nop
add
lcall
std
ljmp
idiv
push
out
in
std
jg
shl
clc
pop
or
pop
push
sbb
sub
jg
mov
mov
lods
mov
cmpsb
or
push
imul
and
or
stos
sbb
das
jb
push
in
mov
loopne
cld
and
in
cld
out
icebp
add
mov
fmul
enter
mov
add
ret
rorl
aad
aam
leave
dec
lret
fstps
push
pop
and
dec
push
pop
pop
dec
fs
fcomip
lcall
adc
dec
inc
inc
add
addb
lahf
sahf
mov
decb
mov
add
cmp
xor
es
mov
and
mov
inc
cmc
mov
hlt
inc
pop
jb
ljmp
and
inc
ret
iret
sar
inc
rol
leave
enter
adc
mov
xlat
incl
js
fs
cbtw
gs
jo
insb
push
test
pushl
mov
cs
add
sbb
or
and
sub
inc
inc
push
xor
pop
sbb
adc
mov
xor
test
mov
imul
iret
enter
incl
and
pushf
enter
pop
and
inc
ja
nop
sar
fwait
pop
xchg
push
pop
pop
addb
rolb
fcmove
int
lret
jo
add
in
rorl
jecxz
push
mov
stos
mov
lock
lret
rorb
fcmovu
aad
add
lds
ss
push
cwtl
dec
inc
dec
setbe
push
adc
push
dec
mov
icebp
sbb
push
sbb
and
es
and
and
jbe
xor
ss
adc
sbb
xor
sub
adc
add
sar
mov
shrb
add
push
jno
lret
mov
pop
clc
aaa
or
jae
adc
and
adc
or
jb
cmp
or
jp
xor
add
jo
daa
mov
push
jo
mulb
jecxz
add
xor
xor
add
sbb
lcall
cltd
cltd
mov
mov
cmpl
scas
stos
mov
add
adc
adc
and
sub
add
or
or
mov
or
or
push
inc
inc
pop
inc
pop
in
xlat
stos
xlat
inc
or
mov
jbe
pop
pop
sub
lcall
imul
js
jno
jl
outsl
push
inc
loope
adc
add
dec
jne
fidivrl
push
inc
inc
inc
or
push
icebp
inc
adc
icebp
jg
fistps
push
xchg
enter
hlt
enter
sbbb
fbstp
iret
add
add
or
hlt
sti
jmp
shl
lock
idiv
ljmp
std
scas
aad
ja
in
ret
add
lret
push
xor
daa
push
mov
adc
adc
sbb
mov
mov
test
call
repnz
adc
mov
cltd
xor
sbb
add
ljmp
dec
fmul
lret
fmul
fiaddl
int3
xlat
repz
loop
add
out
jecxz
call
call
adc
fucomp
in
div
cmc
out
lock
inc
testb
sbb
in
fcmovb
int3
jo
roll
icebp
ljmp
rol
push
lods
stos
mov
add
repnz
pop
repnz
icebp
jge
decl
out
out
mov
xchg
mov
mov
adc
push
sbb
mov
std
mov
add
data16
clc
cli
clc
test
cmpsb
lods
mov
clc
decl
orb
inc
xor
and
add
lahf
orb
mov
mov
clc
add
and
test
push
mov
mov
adcl
pushf
xor
mov
aaa
sub
cltd
or
aas
cmp
mov
addl
mov
ret
in
cmc
iret
adc
add
rol
fcomip
add
mov
push
pop
push
mov
mov
xor
je
incl
jl
add
cmp
jl
aaa
add
xor
cmp
rolb
pop
sbb
or
loope
adc
cmpsl
movsb
lods
scas
mov
std
jg
int
rcl
aam
fiadds
fstl
jl
outsl
inc
imul
dec
dec
push
dec
cmp
outsb
push
dec
pop
push
add
push
pop
push
pop
shrb
and
inc
xor
lods
push
fcmovb
pop
leave
sub
jmp
out
in
mov
call
scas
test
mov
loope
loope
hlt
ljmp
fiaddl
cmp
std
add
bound
mov
arpl
xchg
mov
xchg
mov
jg
mov
hlt
clc
in
idiv
in
jo
add
and
neg
fisubrs
idiv
in
inc
xor
aaa
and
sub
sbb
cmpsb
add
xor
cs
cli
into
fmulp
into
icebp
add
ja
testb
sahf
or
add
inc
sbb
and
inc
pop
add
inc
sbb
fcomps
jg
add
and
and
xor
add
cmp
cmp
pop
push
insl
bound
cmpsb
push
sub
sub
dec
jnp
arpl
loopne
push
jg
inc
xor
loopne
repz
jmp
orb
mov
in
repz
inc
or
hlt
pop
jl
lock
jg
dec
adc
push
test
lock
fucomp
clc
movsl
xchg
cmc
mov
testl
adc
push
fdivl
fld
mov
mov
subl
cmpsl
mov
lcall
mov
test
pop
jne
dec
pop
inc
mov
paddd
dec
push
inc
adc
jb
push
ja
je
inc
adc
addr16
ljmp
rorb
xchg
sub
mov
int
add
sti
mov
test
cmc
clc
in
mov
movsb
mov
xchg
bound
rcll
nop
or
pushf
mov
adc
iret
cwtl
incb
jo
je
push
pop
ljmp
std
inc
pop
dec
push
push
add
das
add
dec
inc
dec
add
sub
mov
xchg
mov
xchg
mov
sbb
mov
push
mov
adc
xor
or
add
ja
jg
adc
jbe
mov
clc
insl
jo
aad
add
iret
enter
stc
ffree
rcll
sub
add
ud2
inc
es
add
inc
sti
pop
loopne
jl
stos
hlt
mov
mov
add
xchg
fadd
adc
jle
fildll
es
add
and
jecxz
mov
shlb
mov
mov
jg
loope
mov
gs
push
jb
jns
jae
jno
je
ret
mov
mov
gs
jg
fucomip
jl
jnp
insb
xor
jns
jge
outsl
je
add
aaa
test
call
rcl
add
lahf
cmc
leave
ret
movb
out
clc
ja
inc
dec
and
adc
adc
inc
das
sbb
or
add
adc
fwait
jle
sahf
inc
jnp
je
popa
data16
adc
inc
jo
aas
dec
js
push
push
into
loop
in
in
lret
hlt
or
popa
adc
in
adc
cld
add
cmc
cmc
mov
fdivr
fdivrp
stc
shl
hlt
jecxz
add
testb
incl
xlat
shr
xchg
mov
fbld
add
outsb
xchg
xor
dec
decw
xlat
jge
insb
add
jle
dec
ljmp
pop
add
sbb
mov
or
push
sbb
das
and
add
push
sub
add
push
pop
sbb
std
adc
sbb
ss
cmp
add
add
sti
mov
add
pop
adcb
inc
cmp
push
sbbl
and
xorl
nop
popl
mov
pop
adc
sbb
adc
adc
add
mov
pop
push
hlt
or
mov
add
testl
mov
into
lret
aam
out
fmul
fdivr
jg
sbb
repnz
ret
int3
xchg
pushf
aam
fildll
mov
mov
mov
ja
insl
je
pop
adc
mov
and
cs
mov
ds
add
out
cli
leave
fcmovu
leave
flds
jmp
ror
add
enter
outsl
adc
jmp
les
xlat
cmpsb
clc
fldpi
sti
sti
loop
add
fmul
call
cmc
in
in
dec
call
out
repz
repz
lret
std
notl
sahf
mov
fwait
mov
inc
adc
inc
or
sysret
sub
adc
int3
fmulp
push
rol
sub
mov
ret
fsubp
cld
aad
stc
jecxz
or
in
rorl
shl
mov
fsubrp
mov
data16
add
xor
xor
sub
push
or
add
adc
pop
sbb
xor
lcall
or
or
inc
inc
and
adc
xor
add
xor
and
jge
lock
out
aas
xor
cmp
test
loope
push
testb
addl
push
cld
inc
push
inc
mov
nop
lea
lcall
decl
adc
data16
xchg
test
add
clc
sub
push
or
and
rsm
adc
sbb
out
jmp
sbb
pinsrw
adc
testb
lock
cmp
jg
add
jo
imul
cmp
cmp
in
scas
pop
push
sub
xor
xor
dec
pop
dec
dec
dec
dec
add
inc
push
push
push
adc
adc
sbb
adc
movsb
rcl
rcl
add
ljmp
decb
mov
fstp
nop
add
rcl
rcl
ffree
jecxz
fwait
decb
out
repnz
mov
test
push
out
loop
cmc
stc
mov
in
jmp
lahf
loop
popl
adcb
sahf
lea
push
pushf
popf
lcall
lret
pushf
cwtl
xchg
mov
and
into
enter
rorb
mov
cmc
or
mov
mov
mov
loopne
xchg
inc
jle
inc
push
add
or
or
pusha
adc
lcall
inc
push
sbb
cmp
dec
dec
add
fs
aam
mov
ja
popa
je
data16
and
dec
pusha
nop
jle
jno
jnp
ja
jae
fs
aaa
imul
mov
or
add
fwait
xchg
dec
or
push
sbb
push
add
popa
and
jg
or
and
cmp
das
aas
test
cmp
cmp
and
cmc
aaa
cld
adc
cmp
das
cmp
ror
lcall
cltd
lods
stos
fcmovu
enter
fcmovu
int
sahf
xchg
jbe
ret
or
xchg
int3
ret
fdiv
adc
or
loopne
jmp
in
mov
add
cld
sti
mov
mov
cld
clc
hlt
xchg
or
out
cmpb
push
inc
pop
rolb
ret
cs
or
or
in
outsl
jp
rolb
rcl
ficomps
adc
sar
fcomp
in
xchg
sbb
rcl
loope
pusha
sbb
jl
fcoml
fcomip
jmp
lret
jmp
lcall
and
pop
push
or
add
mov
mov
add
nop
lret
jo
lcall
or
mov
mov
mov
movsl
mov
dec
mov
in
rolb
xor
cld
aam
div
sbb
aam
rcr
ret
ljmp
fisubrl
aas
and
repnz
inc
ljmp
imul
xlat
stc
stc
in
imul
add
pusha
or
sbb
push
es
dec
aaa
mov
pop
or
icebp
cmp
ljmp
shl
scas
cli
out
in
clc
in
or
cmc
xor
shl
cmc
inc
in
adc
sub
jg
jnp
jbe
gs
jns
add
imul
inc
imul
push
loopne
es
xor
call
mov
pop
pop
adc
inc
or
ljmp
add
sub
out
leave
leave
les
add
frstor
pop
je
pop
js
add
jge
mov
ja
jg
data16
shlb
lahf
and
sub
cmp
decl
ror
ror
ret
add
movb
mov
loopne
mov
bound
add
jns
jbe
jp
and
ret
gs
lods
insb
jo
mov
add
mov
mov
scas
lods
stos
test
lods
mov
mov
adc
jmp
cmpsb
add
adc
add
jg
sub
cmp
pop
in
fnstsw
ds
outsl
cmp
sub
std
or
addr16
or
xchg
push
lcall
test
dec
push
push
pop
dec
pusha
sbb
push
sbb
ret
aad
lds
adc
int
leave
mov
pop
into
add
lret
lret
cmc
and
mov
and
loope
cli
fstps
lret
fst
fcompl
fcom
mov
filds
inc
int
rol
test
ja,pn
decl
pop
inc
push
push
add
pop
dec
sub
lret
movsl
mov
cmpsb
leave
sbb
jg
arpl
jp
lds
cmc
fwait
nop
mov
je
clc
inc
adc
popa
dec
push
pop
outsb
dec
int3
dec
pusha
push
jb
inc
push
add
dec
pop
cmpsb
pop
or
pop
add
xor
ljmp
sar
inc
xor
jne
imul
fiadds
dec
loope
xchg
lcall
push
loope
movb
mov
fcomi
out
cli
jbe
add
lahf
int3
rol
cwtl
rol
xchg
cmpsl
mov
iret
in
sbb
jns
add
cld
in
mov
into
loope
jo
mov
add
mov
jg
adc
mov
sub
push
dec
fnsave
lock
and
dec
push
cmpsl
mov
mov
inc
add
mov
stos
mov
sbb
push
pop
or
sub
in
in
call
mov
xor
icebp
rol
ror
adc
cltd
out
and
outsl
cmp
add
add
sub
mov
push
sbb
fcomip
dec
imul
add
jo
sbb
add
cld
pop
pop
push
push
push
sbb
and
sbb
push
ljmp
push
dec
jle
or
pop
pop
mov
sbb
xor
mov
cmp
xor
xor
xorb
sbb
jo
pop
cld
add
loop
scas
mov
out
out
stc
icebp
ljmp
gs
div
test
in
sbb
mov
rol
repnz
rcr
push
fstps
lret
mov
adc
fsts
adc
fldenv
and
or
sbb
pop
inc
loopne
loopne
and
and
inc
loopne
and
add
jg
mov
add
add
add
cmp
add
fmull
push
les
call
add
mov
add
repz
inc
inc
push
cmp
hlt
xchg
rcrl
nop
cmpsb
adc
add
xchg
or
das
push
add
shrb
or
and
sub
add
rcrb
lret
std
ljmp
mov
and
adc
sub
add
mov
add
adc
idiv
fwait
cmp
xor
sub
add
nop
push
andb
jb
je
mov
jnp
add
xor
inc
jg
push
or
push
push
mov
push
mov
lcall
mov
or
add
aaa
adc
add
daa
xor
xor
cvttps2pi
fwait
cmp
loop
sub
xor
xor
add
inc
add
rolb
lds
jmp
daa
mov
cwtl
loope
pusha
call
xor
xor
xorb
cmp
sub
jo
xor
and
rcll
pushl
das
mov
adc
mov
cmpxchg
push
pop
das
xor
decl
mov
daa
das
or
or
pop
dec
and
aaa
jne
inc
xor
adcl
loope
or
rolb
add
jo
or
or
or
subb
outsb
test
adc
mov
push
or
adc
cmovae
push
inc
adc
or
pop
icebp
or
add
dec
rcrl
jnp
or
mov
dec
adc
add
hlt
or
or
adc
adc
add
ret
sbb
and
ret
mulb
or
xchg
mov
or
inc
add
dec
int
ds
pop
mov
inc
add
sbb
addb
or
xchg
pop
fiaddl
xor
add
loopne
or
or
sahf
nop
sub
outsb
jnp
adc
sub
rorb
aaa
lock
xchg
add
push
outsb
and
daa
sub
and
and
scas
mov
les
es
push
xor
and
icebp
sar
sub
and
xor
add
daa
push
bound
nop
and
add
mov
shlb
jns
add
xor
xor
mov
cmp
es
mov
insb
imul
fimuls
nop
xchg
inc
out
cmp
cmpsb
inc
daa
push
sbb
incb
lds
sub
mov
add
or
sti
outsl
adc
dec
insl
add
add
rcrb
inc
inc
add
xchg
sub
adc
add
adc
lods
pusha
adcl
add
mov
adc
outsb
add
xor
jb
dec
movsb
nop
inc
jbe
daa
subb
es
test
push
push
dec
dec
or
cmp
mov
or
adc
sub
fdivl
js
std
mov
sbb
and
sbb
mov
leave
cld
xor
xor
xor
or
add
ret
subb
ss
jne
ss
in
or
test
mov
icebp
add
add
aaa
mov
add
imulb
push
add
mov
pop
sub
and
call
xor
inc
sub
push
popa
sbb
cmp
or
xor
adc
mov
pop
mov
es
mov
cmpsl
sbb
add
push
lock
mov
movsb
test
push
xor
sub
sbb
fsubrs
int3
adc
jno
sbb
loope
jno
sbb
push
cld
mov
call
xor
adc
call
xchg
aaa
mov
push
adc
inc
roll
lock
lock
xor
push
inc
jno
sub
aas
sbb
xchg
adc
or
add
xchg
push
ret
mov
ljmp
mov
incb
arpl
pushf
add
mov
rcll
add
rcrb
xchg
add
dec
movsb
lcall
or
add
pop
adc
sub
or
jo
loope
std
or
push
jno
das
jl
or
jne,pt
inc
inc
test
mov
xor
mov
cld
mov
jo
lcall
push
sub
cwtl
orl
mov
mov
in
aaa
adc
mov
jns
fnsave
arpl
adc
and
mov
loop
and
sub
mov
adc
pop
int
inc
xchg
xor
sub
and
incl
insb
add
or
arpl
or
lea
shrl
jb
add
imul
push
xor
inc
loopne
dec
stos
add
loopne
cld
inc
add
stos
scas
and
test
stos
in
into
push
jmp
pop
jne
xorl
adc
mov
out
adc
jo
sub
mov
clc
lret
push
mov
mov
or
cmp
add
or
test
lods
sbb
cs
dec
leave
mov
push
cli
cmp
enter
scas
jmp
jl
add
scas
xchg
cmp
push
mov
add
xlat
adc
into
jnp
add
inc
fstpt
orb
stos
fiadds
dec
into
negb
mov
shrb
jae
push
jo
stos
mov
jg
test
stos
add
aas
iret
enter
jle
je
scas
pop
mov
mov
xchg
lock
or
adc
ss
scas
in
in
gs
out
fcoms
clc
mov
test
lods
inc
pusha
clc
xchg
cmp
jb
enter
clc
not
or
cmp
mov
add
dec
add
into
push
notb
fiaddl
pusha
dec
aaa
xchg
sbb
cmp
mov
rcrb
les
pusha
imul
sub
sub
sbb
insb
sti
sbb
sub
add
mov
bswap
fwait
pop
mov
addb
add
fdivrl
sti
ret
fildl
and
scas
xchg
add
jae
sbb
fwait
mov
or
andl
jno
cld
xor
add
push
add
inc
fistl
adc
outsl
fistpll
and
or
jae
loop
xchg
pop
icebp
popa
andb
cs
and
add
sarl
sbb
subb
jno
jg
mov
add
inc
xor
sbb
xor
test
mov
add
jp
push
adcb
js
xchg
add
mov
and
push
dec
cmpsb
add
and
dec
shrb
push
mov
enter
rorb
ljmp
das
mov
inc
ss
adc
aaa
inc
subb
mov
mov
js
pop
call
inc
xchg
and
or
insl
sub
jbe
add
xor
dec
add
and
inc
mov
or
adc
stos
push
shrb
mov
dec
add
add
in
adcb
xor
arpl
jle
rcrb
sub
sub
add
mov
sbb
push
fcmovnu
fstpt
rcrb
adc
fimull
inc
sbbl
outsb
ljmp
dec
adcl
rorb
inc
jge
mov
add
push
push
push
dec
pop
and
push
call
mov
enter
push
inc
and
jo
add
inc
dec
adc
ud0
sub
add
outsb
adc
hlt
or
shlb
lods
loopne
push
inc
pop
add
jl
rolb
lahf
jb
sbb
push
sbb
addb
adc
sbbb
and
inc
subb
scas
dec
rolb
mov
sbbb
xor
sbb
lret
inc
jl
je
mov
adc
test
mov
aas
cli
fildl
stos
roll
xorb
and
mov
mov
lret
cs
dec
cmp
outsb
outsl
push
adc
sbb
add
outsl
clc
sbb
add
pop
xchg
mov
pop
js
lock
hlt
cwtl
mov
inc
les
shlb
ja
pop
test
inc
xor
add
add
adc
shll
das
sub
add
push
push
or
add
ficompl
stos
mov
mov
adc
xor
sbb
lcall
and
loop
rorb
bound
adc
dec
inc
pop
cmc
clc
and
pop
mov
test
cmp
cmp
pop
cld
sbb
inc
push
mov
divl
mov
fwait
js,pn
stos
or
loopne
push
pop
sub
movswl
cmp
jmp
btc
pusha
or
push
loopne
dec
rcrb
adc
loop
lret
or
bound
add
add
cmp
addl
push
mov
pop
icebp
add
pop
aaa
imul
pop
sbbb
sub
or
pop
mov
adc
add
dec
push
fdivr
call
lods
inc
add
pusha
je
mov
inc
xor
mov
pusha
daa
pop
pop
cmc
cmpsb
mov
push
push
aaa
push
and
and
roll
enter
icebp
stos
rclb
pop
or
push
push
dec
rcl
pop
push
jbe
mov
inc
enter
roll
add
mov
stc
cmp
mov
cmpb
bound
mov
mov
stos
jle
mov
pushf
aaa
fstps
test
sub
sub
cmpsb
pop
push
inc
dec
jle
mov
inc
js
ret
pushf
and
cs
dec
adc
loopne
aam
shlb
cmpb
insl
add
push
out
dec
or
pusha
add
subb
test
and
add
add
push
push
nop
inc
adc
cmp
test
jg
and
pushf
dec
mov
and
sti
mov
test
sti
mov
and
ret
inc
adc
adc
and
push
and
in
push
jge
jne
sbb
notb
or
and
test
and
fstpt
xchg
jl
pusha
or
add
mov
sbbb
dec
inc
mov
mov
rolb
add
mov
and
stos
out
push
cld
mov
sarb
fdivrs
jmp
cs
xor
add
pop
adc
pop
icebp
or
mov
pusha
ja
add
or
adc
ret
jle
pop
push
cmp
mov
cs
push
add
push
or
pusha
ja
inc
mov
mov
add
add
push
adc
aaa
add
cmpsb
jno
adcb
clc
aam
dec
fdivrl
mov
ja
sbbb
cli
loope
and
fimull
xchg
xchg
fcomip
or
test
loopne
test
addr16
mov
push
and
test
std
ja
aad
xor
stos
sub
movsl
push
sbb
filds
add
pop
pusha
add
dec
sahf
add
or
pushl
test
mov
popa
add
adc
sti
add
repz
popa
add
std
jg
pusha
add
pop
sbb
push
lods
stos
pop
pusha
adc
dec
xor
mov
adc
loop
adc
dec
jo
adc
sub
sbb
inc
mov
mov
xchg
xor
add
and
jne
and
enter
jg
cmpl
inc
mov
jne
stos
in
push
inc
adc
hlt
sub
adc
icebp
je
addb
sbb
mov
mov
rolb
pop
pop
shrb
outsl
adc
jbe
sbb
sub
sub
and
cs
into
mov
xor
pop
ffreep
or
add
dec
fwait
loopne
jecxz
mov
lock
or
cmp
add
inc
enter
test
fs
std
ja
push
dec
dec
andl
cmpsb
cmp
push
push
repnz
cld
adc
cli
rolb
call
and
aaa
cld
pop
lock
dec
out
sub
inc
adc
xchg
pop
or
dec
mov
xor
sub
adc
xchg
sub
addr16
add
add
jp
cli
stos
jae
add
adc
add
notl
add
sbb
mov
add
jno
aaa
popa
or
roll
aaa
pop
push
xchg
push
adc
add
pop
mov
or
loopne
les
subb
mov
aam
inc
add
xchg
cmpb
mov
call
xor
dec
adc
mov
or
or
jno
cwtl
sub
dec
and
push
and
rolb
adc
popa
aas
adc
stos
push
jmp
daa
cwtl
and
push
add
sub
ljmp
mov
pusha
mov
nop
dec
adc
les
fstp
jmp
add
push
into
add
mov
add
dec
sbb
add
imul
int
push
add
stos
in
pop
push
pop
inc
mov
cmp
lods
push
rorb
cmp
jnp
daa
pusha
mov
js
xchg
and
ret
add
aad
fcoml
and
jb
into
sbb
sbb
inc
sub
adc
ja
call
cmp
dec
adc
add
sbb
xor
mov
sbb
adc
push
insb
mov
xchg
pushf
cld
mov
incl
adcl
or
and
shlb
mov
ss
stos
mov
cmp
mov
cmpl
lret
rolb
cld
ja
cltd
fidivrs
dec
mov
mov
push
ja
stos
pusha
sub
add
cs
lock
adc
dec
shlb
inc
sub
mov
clc
inc
or
inc
in
outsb
pop
adc
mov
or
loope
inc
arpl
adc
clc
ret
clc
adc
aaa
inc
adc
stos
call
pop
sub
pop
pop
fs
xor
add
add
push
call
jno
adc
lcall
push
dec
enter
fmul
movl
inc
push
lock
mov
mov
jb
jo
adc
orb
mov
push
mov
test
xor
mov
clc
mov
loopne
mov
and
pop
aaa
inc
push
sub
add
jb
adc
mov
push
adc
sub
sub
mov
outsl
incl
jp
shlb
sbb
sbb
shrb
push
mov
mov
add
and
mov
lods
inc
xor
and
push
sbb
pop
and
sbbb
sbb
incl
inc
sbbb
inc
aaa
dec
add
sti
scas
test
pop
lock
mov
lret
into
mov
add
ret
je
add
call
sub
or
push
scas
jae
inc
shlb
jno
and
xor
or
mov
testb
test
add
dec
pop
jle
inc
das
shrb
pushl
cld
sbb
mov
stos
cmp
shlb
pop
pusha
shrl
loope
or
inc
dec
cmp
add
incl
jb
movb
jg
pop
enter
cmp
bound
pop
mov
add
push
stos
or
mov
icebp
mov
test
into
jo
cwtl
jp
pop
ss
pop
loopne
pop
push
pusha
push
test
mov
test
push
pushl
adc
scas
mov
inc
adc
lret
push
and
decl
cmpsl
xor
pusha
xchg
fwait
push
sub
cwtl
hlt
decl
xor
dec
cmc
push
push
jo
ret
jno
subb
inc
add
adc
dec
xor
push
test
adc
fldt
incl
or
pop
add
or
push
adc
or
push
das
sar
in
add
ss
je
adc
and
and
mov
mov
aaa
push
jo
nop
pusha
or
push
push
mov
lret
mov
mov
das
inc
movl
aaa
shrb
jmp
jg
ret
push
sub
inc
adc
cwtl
add
sbb
mov
jno
or
dec
dec
pusha
sbb
push
enter
pushl
mov
rolb
mov
jg
adc
enter
dec
push
sbbb
pushf
inc
adc
mov
jge
mov
js
sub
pop
js
or
test
sub
lcall
mov
mov
adc
add
xor
enter
pop
out
pusha
add
cwtl
or
inc
imul
jmp
call
lret
or
and
or
xchg
sbb
das
rcl
push
pop
add
lret
enter
call
sbb
out
adc
xor
test
push
ja
pop
mov
add
push
stos
pop
ja
adc
xchg
add
rcrl
mov
pop
inc
cld
loop
or
sbb
adc
enter
sbb
rsqrtps
mov
imul
mov
push
pusha
mov
ss
jl
inc
sub
subl
hlt
mov
add
adc
sub
xor
lret
add
mov
or
adc
push
call
push
shrb
push
aad
outsb
movl
push
jo
je
add
daa
aaa
outsb
imul
xor
push
es
aam
and
push
push
cwtl
ror
adc
pop
add
notb
push
push
adc
call
into
daa
and
stos
out
adc
ret
pop
jb
mov
subl
mov
xchg
pop
dec
inc
jb
aaa
and
xlat
add
icebp
or
and
addb
cwtl
dec
xorb
ss
lret
clc
pushf
pop
and
add
or
mov
push
mov
outsb
cli
pop
mov
jo
js
sahf
ss
adc
pop
lock
mov
test
outsb
cmpsl
bound
or
push
push
mov
decl
incl
js
xchg
mov
jbe
icebp
or
js
xor
bnd
shll
imul
enter
jl
scas
aam
dec
into
fwait
lea
xchg
push
mov
mov
pop
cld
orb
add
js
or
jbe
cwtl
adc
sub
pop
ret
jmp
sub
or
mov
xchg
enter
aaa
push
sub
or
and
enter
pop
aaa
js
adc
xor
cmp
sub
stos
fwait
jle
and
mov
bound
test
pop
icebp
mov
adc
adc
add
jb
aas
orl
add
lock
inc
ja
jo
dec
aam
movsb
pop
push
add
sub
or
icebp
fwait
sbb
push
add
and
push
xorb
es
jmp
inc
popa
clc
negb
mov
or
push
mov
enter
inc
add
decb
das
addr16
ret
cmp
sbb
shrl
inc
jo
sub
add
lret
ret
lcall
addr16
add
dec
push
and
es
lcall
add
pop
inc
inc
add
add
call
aaa
je
xor
ja
outsb
mov
and
stos
jne
and
fisubrl
mov
into
ss
push
push
mov
outsb
inc
adc
pop
add
jo
adc
mov
mov
jl
xchg
add
inc
add
adc
sbb
stos
mov
imul
add
or
js
pop
push
sub
das
into
inc
ss
push
aaa
inc
shlb
pop
adc
pop
mov
cld
rcrb
loopne
mov
ficoms
pop
push
pop
gs
xor
or
xchg
cmpsb
sbbb
inc
mov
or
aam
fld
pop
inc
bndstx
int3
ret
push
push
sarb
adc
es
sub
imul
inc
movsb
mov
pop
push
xchg
add
aam
leave
add
ljmp
push
and
push
xor
pop
sbb
shrb
push
outsb
adc
fs
sub
js
inc
or
inc
hlt
adcb
xor
sbb
insb
dec
out
jb
add
adc
nop
cmp
pop
sbb
rcrl
and
adc
mov
ret
adc
das
bound
test
or
das
adc
and
ljmp
xor
and
mov
ss
aas
rolb
sub
dec
mov
adc
or
andb
jg
and
add
fsubs
cmp
cli
scas
out
mov
sahf
rolb
xchg
pop
loopne
adc
dec
jo
in
pop
adc
lcall
mov
and
xchg
dec
mov
subb
mov
imul
cmp
or
inc
lods
inc
add
mov
js
dec
lds
imulb
adc
dec
ror
ja
sahf
fucomip
inc
xchg
add
js
jg
lret
inc
mov
jecxz
add
aam
and
lret
dec
adc
ret
jl
js
push
roll
call
call
mov
dec
bound
inc
adc
adc
jnp
sbb
mul
xor
mov
dec
inc
sub
adc
aad
add
push
or
and
push
icebp
ljmp
push
scas
sti
and
loopne
inc
push
push
pop
clc
sbb
dec
lock
sub
shll
add
xor
add
add
stos
cli
fwait
sub
sub
enter
sbb
enter
sub
pusha
insl
mov
scas
dec
and
push
and
adc
aam
popf
cli
or
xor
subl
inc
aaa
or
pop
mov
sbb
dec
pusha
pop
jne
aam
mov
addr16
mov
sbb
push
inc
enter
adc
sub
mov
add
mov
cwtl
nop
sbb
add
or
fiaddl
adc
cmpsl
mov
adc
adc
into
aaa
inc
outsl
lock
push
cmpb
xor
fldenv
push
push
and
add
mov
inc
imul
lcall
jae
jae
and
into
addr16
fcmovnbe
or
add
inc
add
xor
outsb
push
add
pop
into
packuswb
stos
xor
out
clc
frstor
into
push
addr16
ret
mov
jmp
pop
pop
push
add
add
aaa
adc
rcrb
adc
dec
add
pop
sub
call
add
lret
enter
dec
andl
cld
or
inc
popf
mov
xor
and
mov
fisubrl
or
mov
sub
rcrl
inc
dec
orb
adc
fs
es
push
pop
pusha
pusha
xchg
inc
bound
jo
mov
adc
cltd
fsubrs
incl
lods
mov
sub
mov
call
arpl
inc
add
pop
push
xchg
test
and
adc
ret
adc
sub
inc
dec
mov
mov
jl
inc
shll
inc
mov
xlat
jg
std
addb
or
ds
or
mov
adc
sahf
shlb
pop
test
jb
outsb
inc
mov
push
pop
cmpsl
or
xor
hlt
cmp
jns
pop
mov
inc
mov
bound
add
adcb
push
cmpsl
and
mov
decl
push
or
jo
add
or
testb
ds
mov
lock
shlb
push
add
loopne
inc
and
jecxz
or
pop
inc
jle
add
pop
mov
stos
add
mov
loopne
dec
je
add
xor
aad
push
add
push
stos
stos
jo
cmp
bound
add
push
scas
or
dec
adc
sbb
scas
cmp
adcb
mov
call
add
and
test
icebp
gs
and
imulb
mov
js
and
addr16
and
mov
std
xorb
das
adc
or
mov
enter
iret
mov
or
mov
shlb
jg
jbe
sbb
and
push
add
repnz
andl
push
lods
dec
sub
sbb
clc
insl
mov
and
add
imul
test
jp
arpl
in
cs
push
addb
xchg
and
mov
adc
call
mov
mov
push
add
mov
jp
aaa
dec
and
gs
ret
bound
push
xor
arpl
imul
mov
shlb
mov
inc
mov
mov
mov
pop
stos
inc
xor
inc
and
xor
icebp
add
mov
and
in
scas
xchg
push
and
push
call
pusha
dec
adc
add
scas
andl
cmpsl
xor
imul
add
pop
test
int
cld
lret
pushw
and
push
out
add
jnp
movsb
jb
push
sub
push
add
pop
and
rorb
and
add
dec
loope
aas
pop
ret
add
ss
jno
mov
call
add
sbb
test
fistps
aaa
popa
sbb
and
push
push
and
cmp
mov
or
cli
lcall
mov
xor
aaa
dec
loop
sbb
ljmp
adc
sub
lret
jo
test
divl
imul
cmp
lock
fimuls
add
ss
shrl
mov
jl
add
adc
add
xchg
test
faddl
stos
xchg
mov
adc
jmp
scas
mov
xor
or
jl
or
add
mov
push
push
into
dec
adc
movb
add
lock
add
push
das
ds
repz
mov
outsb
es
icebp
rcr
cwtl
nop
or
cli
aas
and
xorb
xor
test
sbb
push
outsb
dec
mov
lret
adc
jp
mov
xor
jno
add
pop
push
lcall
mov
or
movsb
cmpb
inc
mov
vcomisd
jno
pop
pusha
or
and
push
add
adc
add
push
jg
sarb
lret
push
jae
adc
add
sub
or
xchg
adc
adc
xor
outsb
lock
inc
pop
adc
or
stos
out
clc
pop
push
adc
mov
inc
mov
jnp
nop
push
sbbb
add
add
push
pop
push
push
cmpsl
mov
push
loopne
aam
add
and
mov
jmp
loopne
bswap
int3
stos
cs
xchg
mov
pop
popa
les
mov
mov
stos
insb
stos
sub
cmc
aad
ja
cmp
xor
sbb
inc
sub
jno
inc
jo
add
add
jp
aas
sbb
sbb
enter
cmp
dec
stos
pop
xchg
aaa
add
mov
push
sbb
pusha
mov
cmp
das
inc
shll
push
frstor
and
out
and
xorb
push
cld
push
inc
rclb
xor
test
inc
es
pop
inc
mov
fisttpl
mov
negb
test
sbb
enter
jecxz
loopne
sub
test
sub
stos
movb
sub
lcall
or
nop
add
adc
sub
and
add
leave
into
lock
dec
fdivs
inc
lock
jp
cld
jg
fbld
adc
stos
push
xchg
test
enter
cs
pop
xorb
fimull
stos
addr16
add
and
or
pushf
shl
push
adc
add
call
inc
pop
ret
adc
andps
lds
aas
enter
ljmp
adc
test
jo
cmp
movl
add
mov
add
xchg
popa
push
test
add
mov
dec
std
aaa
adc
adc
inc
ds
fbld
lds
sbb
adc
or
push
lods
jecxz
mov
or
cmp
push
rcll
add
pop
lret
dec
sarb
decl
in
push
inc
and
push
icebp
js
and
xchg
in
jg
pop
adc
mov
ss
aaa
rcrb
pop
bound
sbb
pusha
sub
cwtl
in
mov
inc
push
pop
adc
or
push
cld
adc
fs
adc
dec
lods
add
lretw
add
adc
dec
outsl
add
or
adc
mov
subb
fwait
outsb
mov
inc
or
ret
mov
push
rcll
jnp
jnp
dec
dec
adc
pop
test
loopne
xchg
jmp
aaa
outsl
pop
je
bound
mov
pop
jecxz
adc
sbb
decl
in
pop
pop
push
adc
movb
fmull
inc
add
inc
push
sub
or
inc
frstor
dec
loop
nop
cmp
pusha
add
sarl
push
adc
test
cld
sbb
inc
adc
push
dec
cmp
jecxz
push
pusha
adc
sub
push
xchg
dec
push
push
cli
cmp
lock
pusha
nop
rolb
clc
pusha
adc
and
add
cs
pop
cmc
pop
aaa
fidivl
mov
add
push
int3
lret
cmpsb
cmp
add
adc
add
push
incb
mov
adc
testb
push
xor
add
mov
push
or
inc
mov
adc
outsl
add
sti
mov
aaa
inc
stos
sti
lods
mov
add
mov
dec
sub
addl
ss
jp
adc
and
pop
adc
test
mov
cmp
cmpb
mov
dec
fisttpl
sub
cld
sbbl
cmp
into
xchg
push
enterw
outsb
and
xchg
in
call
call
pop
sub
stos
inc
test
inc
in
pop
test
bound
jp
add
sbb
cltd
jle
shlb
pop
push
sbb
inc
cmpb
mov
mov
xor
sub
mov
mov
push
test
inc
add
pop
sbb
inc
jge
ss
cmpsb
jl
cmp
push
or
add
fs
xchg
xor
mov
inc
adc
inc
fdivl
push
mov
push
sbb
push
add
jle
add
jp
xchg
ds
inc
ss
xchg
xor
lock
or
or
inc
mov
mov
inc
add
shrl
pop
shrb
mov
mov
add
xchg
mulb
enter
cmp
push
je
add
mov
mov
sub
pop
addb
or
test
out
jb
movsb
addb
incl
push
mov
popl
test
adc
add
mov
incl
xor
add
or
cmp
addb
inc
dec
pop
add
add
int3
and
scas
decl
cmpsl
inc
sub
ret
int3
push
mov
adc
lods
push
adc
mov
mov
es
add
jb
enter
mov
pop
insb
out
fimuls
ljmp
shrl
add
inc
lret
push
adc
mov
inc
adc
mov
jo
dec
addl
fiaddl
push
adc
inc
sub
aaa
jp
adc
je
je
pop
enter
filds
xor
dec
xor
sti
or
mov
mov
dec
inc
leave
into
jns
ss
add
js
adc
lods
dec
lcall
dec
add
xchg
dec
cmc
subb
cmp
and
data16
rolb
aaa
xor
mov
push
aaa
push
push
pusha
fsubrs
and
and
jle
push
and
xchg
lds
std
test
cld
jnp
inc
inc
lock
jg
cmp
enter
jl
mov
fiaddl
mov
push
xlat
decl
add
sbb
add
xor
sbb
stos
adc
add
add
or
push
push
mov
inc
ror
xchg
inc
dec
jecxz
add
dec
orb
or
inc
outsb
test
aas
sbb
outsl
add
sub
mov
test
dec
add
cmc
outsl
adc
pop
jno
adc
adc
mov
mov
enter
jmp
push
push
mov
ds
stos
inc
mov
loopne
dec
movl
inc
rclb
push
stos
mov
and
adcb
loope
dec
loopne
jle
mov
popa
fwait
addl
add
pop
into
mov
push
mov
cli
ret
stos
mov
test
enter
add
loopne
mov
outsl
sub
sub
and
dec
rclb
jp
dec
aaa
inc
lret
push
dec
push
imul
add
sub
enter
sbb
inc
or
lret
or
es
leave
cmp
cmpsb
pop
pusha
sub
fisttpl
cs
and
adc
push
add
xchg
es
fidivrl
dec
or
in
add
loopne
sub
sub
jg
ret
xor
add
rep
mov
xchg
mov
and
fcomip
and
mov
and
or
or
aaa
sbb
pop
mov
cltd
shlb
sbbb
push
scas
ljmp
std
loop
dec
xchg
out
push
jecxz
add
add
mov
loopne
cmp
sub
test
out
sbb
imul
add
adc
pop
sub
xor
ret
pusha
fisttps
xchg
or
add
push
stos
pop
rolb
test
fwait
sahf
adc
sbb
adc
sub
push
jne
xchg
arpl
add
add
jle
mov
ds
daa
and
mov
dec
and
xor
jb
lret
push
insl
jg
aam
push
call
ds
and
xor
inc
add
ds
pop
jl
and
jg
fcoml
mov
add
add
or
clc
jb
xor
imul
stos
rcr
pusha
sub
out
add
add
cld
jmp
push
xor
test
movsl
adcb
enter
lea
inc
pop
pusha
test
sbb
stos
inc
loopne
outsb
mov
adc
outsb
sub
inc
mov
int3
and
sti
inc
inc
andb
popl
pop
pop
lcall
jae
push
push
pop
push
adc
add
cltd
dec
adc
clc
xchg
sbb
ljmp
mov
bound
andb
and
add
add
incl
ja
inc
sub
push
add
push
add
and
sub
mov
push
add
addr16
pop
adc
lret
cld
lcall
sbb
or
sbb
push
xor
adc
dec
hlt
add
push
ss
jb
outsb
or
lret
adc
ss
adc
lock
adc
jno
ds
or
loopne
stos
loopne
stos
pop
fs
xor
and
adc
xchg
push
lock
jg
cli
mov
sub
stos
add
adc
aaa
or
lds
fidivs
es
inc
and
imul
mov
arpl
mov
adc
repnz
push
mov
inc
xchg
sbb
movsb
or
push
mov
xchg
sub
sbb
mov
pop
push
nop
pop
push
stos
loopne
dec
pusha
sbb
enter
incl
or
adc
pop
js
movd
inc
stos
arpl
pop
into
ret
nop
andl
xor
add
pop
xorb
adc
push
sbb
or
push
pop
and
push
addb
sarl
loopne
adc
push
inc
sub
jbe
pop
jbe
cmpsb
clc
mov
insb
subl
adc
push
dec
loopne
add
lock
aam
xor
add
arpl
inc
lock
sbb
sub
dec
push
adc
add
cmp
sbb
ljmp
xchg
mov
popa
pop
inc
push
adc
xchg
mov
subb
sub
mov
jo
add
cmp
or
nop
cmp
pop
mov
int3
inc
or
daa
adc
cltd
mov
test
test
xor
or
mov
dec
adc
xor
sbb
and
add
sub
pusha
cmp
adc
sbb
aaa
addr16
add
mov
in
cmp
notb
sbb
filds
adc
arpl
adc
mov
mov
add
stos
or
es
test
pop
pushl
push
pop
data16
ret
bound
adcb
mov
mov
jmp
test
sub
cmp
mov
js
ss
push
adc
addb
aad
push
jp
mov
jne
mov
mov
cld
pop
pop
test
add
test
clc
push
icebp
push
jge
push
pop
in
and
push
and
rcl
subl
mov
push
ret
add
nop
mov
ljmp
inc
rclb
int3
lods
push
xor
and
adc
lods
inc
adc
add
xchg
fwait
mov
push
and
cs
shl
stos
or
add
in
jbe
jg
stos
out
cmp
lret
pusha
add
mov
repz
jmp
push
mov
mov
jle
out
mov
stos
rclb
jo
adc
into
arpl
fucomip
dec
pusha
and
out
inc
test
inc
stos
push
lock
imulb
jmp
mov
adc
jp
push
sub
rolb
sbb
pop
mov
dec
jo
add
inc
popa
inc
xor
hlt
enter
lock
push
mov
pop
subb
push
pusha
dec
in
push
mov
push
int
jl
ror
lahf
add
scas
stos
sarl
lcall
mov
pusha
mov
push
fsubrl
inc
sbb
mov
shr
or
add
push
pop
sub
insl
push
xchg
in
xchg
mov
inc
add
std
jg
repnz
cmpsb
repz
add
xchg
inc
ds
push
std
push
insl
popl
add
push
into
xor
dec
rol
add
adc
mov
js
scas
xor
push
jo
jp
cli
mov
inc
jle
outsl
push
dec
std
jo
dec
rolb
stos
sbbb
mov
incl
pop
xchg
add
push
lahf
inc
subb
dec
je
mov
or
sbb
call
sbb
stos
xor
shlb
shrb
lret
add
fdivrs
mov
xchg
inc
xor
mov
lcall
or
fs
nop
rorb
mov
xor
stos
cwtl
mov
push
mov
lret
fs
inc
adc
aas
stos
jle
ss
mov
mov
lret
popa
pop
xchg
pop
inc
push
adc
push
or
adc
jp
rcrb
pop
adc
adc
jl
adc
dec
xor
cmpsb
inc
push
nop
adc
jns
jg
stos
mov
test
jge
faddl
dec
enter
mov
pusha
je
ljmp
sbb
enter
and
add
lcall
int3
sbb
cmp
test
dec
jg
xor
xchg
ss
inc
ljmp
fdivp
js
xor
mov
andl
andl
adc
cli
stos
sbb
xchg
insb
jl
or
push
ror
xchg
add
pushl
push
aam
inc
aas
push
xchg
or
inc
lock
aas
loopne
pop
dec
inc
jo
ret
inc
dec
sti
test
sub
dec
mov
test
jg
testb
push
adc
nop
mov
push
adc
pusha
and
or
fdivrl
outsl
pop
pop
add
push
mov
stos
mov
lock
rclb
movsb
mov
sbb
mov
jo
stos
cs
inc
xchg
jnp
clc
decl
iret
mov
inc
or
push
push
das
fcmovbe
daa
push
push
push
add
add
insb
push
aad
jnp
xor
push
pop
arpl
or
idivl
xchg
ret
ds
mov
hlt
and
add
jno
and
cmp
sub
mov
scas
push
mov
push
rorb
or
xor
adc
sar
cs
clc
push
push
and
fildll
adc
push
jb
adc
push
xchg
mov
cmp
ljmp
dec
fs
sbb
add
or
cmp
pop
add
daa
mov
sub
mov
stos
push
adc
mov
push
inc
cmp
fidivs
lods
and
push
push
jp
cmp
jmp
mov
pop
push
and
mov
add
divl
aam
inc
dec
sbb
lock
push
jg
pop
push
ljmp
push
nop
push
push
add
jne
xchg
or
shrd
nop
sbb
sub
dec
inc
lock
mov
pop
xorl
cli
jg
pop
mov
inc
xor
test
add
inc
and
push
inc
add
mov
fldt
ljmp
push
rcl
ljmp
jl
adc
add
in
js
mov
aad
add
insb
push
inc
sub
pop
and
mov
push
outsb
jnp
mov
dec
jo
roll
rolb
add
jno
js
pop
add
sbb
sbb
add
push
mov
or
inc
mov
insb
adc
loope
pop
or
jle
adc
push
or
adc
push
fs
xor
inc
cmp
add
adc
mov
sbb
loop
or
sbb
pop
add
adc
mov
pop
in
push
and
dec
sub
add
enter
jae
push
in
loopne
lret
jo
xorb
jle
addl
sbb
call
fs
imul
dec
or
es
push
add
mov
push
lahf
pusha
imul
mov
addl
add
fcompl
scas
dec
or
ds
jns
mov
outsb
cmp
mov
dec
pushf
adcb
ret
jg
js
adc
dec
mov
mov
mov
cmp
dec
dec
add
cwtl
mov
jp
dec
or
mov
les
push
mov
dec
int3
add
mov
ficoml
stos
test
add
xor
orb
sbb
and
or
aaa
inc
js
cmp
aaa
adc
jle
jb
mov
aaa
or
push
inc
push
ss
inc
or
add
push
sbb
cmpb
dec
ss
add
add
adcb
push
test
sbb
insb
xchg
jmp
pusha
jb
inc
addr16
test
adc
inc
leave
inc
pop
subb
pusha
push
lret
insb
ss
jg
add
and
xchg
mov
inc
fsubrp
pop
jo
push
mov
aaa
xchg
push
xor
jp
mov
adc
add
adc
or
and
inc
test
cmp
add
push
adc
sbb
inc
mov
mov
sbb
add
ret
push
xor
adc
push
loope
adc
pop
jno
test
push
push
scas
lret
rorb
add
aas
or
mov
stos
sub
cmpsb
sub
jo
test
add
mov
pop
xchg
pop
pop
add
shrb
rol
xorb
testb
dec
sbb
aam
js
dec
les
incb
test
dec
adc
mov
lods
dec
bound
mov
enter
test
pop
loopne
jbe
movl
scas
xor
push
stos
dec
inc
add
inc
add
lods
loop
inc
mov
sub
sub
or
pop
and
addb
fbstp
out
fcomps
mov
sarb
push
sarb
adc
dec
addb
add
rolb
and
and
lds
add
jnp
push
or
leave
add
push
jg
inc
mov
loopne
xor
mov
lds
pushf
pop
adc
sub
aas
adc
sbb
cmp
xorb
add
or
sub
inc
ret
sub
icebp
jl
arpl
or
mov
jle
mov
fsubrs
popa
js
push
xor
mov
and
adc
add
loopne
imul
mov
test
ds
cmpsl
mov
lods
lcall
xchg
mov
popa
inc
into
mov
mov
loopne
inc
jecxz
inc
push
adc
outsl
pop
ror
dec
fidivrl
mov
pop
sarb
xchg
sbb
test
add
pop
lods
andb
loop
add
test
inc
stos
jmp
jo
rclb
dec
fwait
ret
dec
jmp
aas
dec
hlt
add
add
sbb
jg
xor
mov
ljmp
mov
add
mov
and
in
push
enter
cld
ja
add
pop
js
xor
mov
inc
inc
ss
push
mov
inc
xor
inc
pusha
add
add
stos
pushl
jnp
mov
imull
pop
push
adc
stos
mov
inc
mov
push
xchg
mov
es
cmp
push
mov
sti
adc
mov
inc
rorl
into
ss
dec
adc
and
xchg
ret
pop
into
xor
dec
stos
xchg
scas
shrl
xchg
xchg
dec
subb
movsb
inc
add
or
sub
int
aam
cwtl
es
mov
sbbl
push
stos
inc
push
and
adc
rclb
test
fisubrs
ljmp
dec
lret
push
notl
loopne
sbb
sbb
sbb
addb
add
js
aaa
inc
mov
cmp
loope
add
pop
and
add
push
in
add
xor
filds
adc
stos
xchg
adc
push
dec
pop
popa
insb
jp
xorl
sahf
sbb
jno
jbe
decl
or
pop
sarb
xor
mov
and
jmp
sub
cwtl
xor
sbbb
lea
mov
stos
faddl
mov
insb
or
push
pop
mov
pushf
test
adc
sub
cs
xchg
mov
ret
inc
cmp
mov
mov
add
lcall
add
push
rorb
pop
and
out
mov
inc
jbe
loopne
subb
out
nop
mov
int3
push
loope
mov
and
sbb
and
or
gs
bound
inc
and
icebp
or
inc
cmp
andb
fs
push
fwait
bound
mov
add
adc
shlb
cwtl
cmp
inc
pusha
inc
or
stos
xor
test
fiadds
dec
mov
xor
mov
mov
mov
dec
lds
pusha
xor
and
repz
dec
mov
rorb
add
add
test
add
dec
jnp
mov
jg
ss
push
lahf
push
mov
sarb
jg
sar
ja
loopne
aaa
jbe
ss
pop
repnz
inc
jmp
or
fmuls
xor
push
repz
dec
int
inc
xor
test
xchg
adc
and
or
jae
test
add
lahf
je
xor
cli
jg
push
pop
lock
test
jo
mov
add
add
ret
cli
mov
mov
sub
adc
cmp
push
in
add
mov
roll
sub
imul
xor
jbe
xor
add
aam
rolb
hlt
pop
testb
push
insb
inc
insl
inc
mov
jle
enter
sub
cmpsb
push
jl
adc
mov
or
or
sbb
mov
mov
nop
dec
adc
xchg
and
scas
xchg
and
sub
shrb
mov
jmp
push
loop
sub
jge
nop
pop
push
push
nop
xor
xor
mov
pushf
dec
hlt
jmp
enter
enter
inc
mov
or
jecxz
or
dec
jne
inc
loopne
and
mov
filds
push
dec
lcall
add
inc
cli
outsl
jg
nop
xchg
ud2
xor
sub
out
nop
inc
push
scas
scas
mov
sub
cld
enter
scas
pop
loopne
call
mov
andb
xchg
mov
loope
dec
xor
inc
stos
mov
sbb
pushl
mov
mov
enter
stos
inc
pop
popa
pop
incb
dec
shrb
sarb
adc
nop
xchg
ret
mov
jno
mov
jbe
inc
rorb
pop
sbb
outsl
pop
subb
sbbb
stos
adc
sbb
add
movb
mov
pop
aad
add
push
adc
aaa
pop
jg
mov
push
adc
aaa
dec
jg
aaa
inc
int3
test
lock
test
jg
or
lock
test
lock
add
rcrb
xor
dec
mov
and
xor
push
std
add
fsubs
fdivrl
or
xor
inc
or
bound
adc
hlt
or
mov
nop
mov
sbb
add
dec
inc
daa
dec
lds
inc
sbb
aaa
arpl
add
movsb
dec
mov
jo
mov
xchg
push
loopne
dec
in
mov
decl
pop
mov
adc
rolb
arpl
outsl
sub
inc
ds
sbb
ljmp
pop
sub
stos
mov
jg
leave
add
push
inc
lock
add
outsl
jo
mov
adc
inc
and
ret
int
aaa
or
xor
aad
pusha
push
sub
pop
int3
lock
divb
loopne
pushf
mov
jae
test
subb
stos
mov
cmpsb
jo
adc
add
adc
xlat
sub
aas
push
shlb
or
lahf
nop
sbb
rorl
mov
lock
sbb
or
push
ds
cmpb
nop
ja
cli
dec
add
add
and
test
adc
or
adc
stos
nop
cli
sbb
add
sbb
aaa
and
jg
xchg
push
not
sbb
dec
or
ja
and
push
fmull
cli
add
jo
inc
xorl
scas
xor
dec
popa
mov
inc
xchg
mov
push
dec
jp
mov
bound
xor
movsb
mov
adc
adcb
xor
cs
xor
cmp
cmp
imul
lods
test
xor
rclb
movsb
in
nop
add
icebp
adc
sbb
adc
adc
xor
ljmp
xchg
cli
add
mov
inc
test
add
hlt
push
sbb
stos
movsb
push
cmp
inc
and
pop
xlat
call
push
add
and
fcmove
mov
mov
test
push
adc
add
and
mov
pop
push
and
sub
lahf
rcrb
mov
add
cwtl
xor
jg
lods
dec
and
inc
mov
push
jl
mov
into
inc
and
dec
dec
dec
fdiv
scas
dec
movb
aaa
je
hlt
cmpl
or
imul
mov
nop
incl
mov
or
inc
sub
sbb
add
cld
stos
outsb
cli
js
mov
movsl
push
iret
and
adc
stos
and
loop
in
out
inc
mov
pop
xor
sub
jno
mov
lret
in
mov
ss
sub
jle
stos
push
ja
into
test
sti
or
dec
loope
add
mov
and
sub
data16
xchg
faddl
inc
mov
adc
push
mov
or
adc
les
sub
push
or
dec
xlat
and
dec
jl
and
imul
dec
adc
push
or
mov
pusha
jb
stos
decl
mov
pop
in
pop
dec
add
es
decb
add
add
hlt
mov
cmp
pop
inc
xor
add
aaa
pusha
xchg
loopne
dec
pop
jnp
cmp
loopne
ja
dec
adc
inc
adc
mov
adc
dec
outsb
dec
push
or
scas
push
inc
fcmove
push
dec
incl
aas
push
stos
adc
dec
xabort
adc
leavew
fs
and
mov
mov
or
les
push
dec
jo
into
add
pop
inc
sub
push
mov
loopne
inc
loopne
mov
sub
add
mov
aad
dec
push
mov
add
adc
js
push
dec
add
repnz
push
cmp
inc
add
mov
inc
push
push
mov
jno
mov
cld
xchg
lock
sub
aas
outsb
cmp
inc
popa
pop
cmp
sbb
mov
or
pop
mov
add
into
rsqrtps
and
loop
mov
sbbb
inc
pop
jne
adc
adc
sub
jae
addb
sub
rolb
adc
jo
mov
lock
loopne
dec
mov
xor
push
sub
mov
adc
mov
fwait
stos
rorb
push
mov
jnp
push
into
aaa
pop
mov
mov
dec
inc
aas
repz
loop
lcall
mov
add
lock
and
enter
ror
cmpb
ret
pop
out
mov
ss
push
jbe
filds
aam
push
and
push
mov
push
mov
xor
push
rolb
or
nop
aad
test
es
add
mov
lret
dec
jl
cwtl
lods
push
dec
mov
push
fimull
cmpsb
cmpsl
fcmove
add
in
or
sahf
pop
adc
cmpsl
stos
jle
push
inc
inc
outsb
cmp
call
mov
add
sub
add
jno
xchg
orb
sbb
dec
mov
into
jg
sbb
or
xor
inc
inc
je
mov
cmp
insl
add
mov
inc
rol
data16
jbe
adc
icebp
ret
sahf
add
inc
mov
add
add
enter
adc
xchg
adc
inc
xchg
xor
adc
xor
xchg
popa
mov
pop
stos
insb
add
and
sbb
inc
add
adcb
test
fwait
pop
ret
inc
in
fs
mov
mov
and
inc
xor
adc
stos
sub
fs
cld
push
aam
enter
insb
push
xor
inc
or
or
sbb
add
inc
js
addb
inc
dec
add
or
incb
adc
dec
rclb
and
jae
push
add
adc
add
jp
pop
dec
lds
or
jl
icebp
pop
inc
ds
xchg
mov
mov
clc
inc
dec
adc
or
adc
push
pop
cli
add
mov
call
push
fadds
clc
sbb
xor
dec
adc
test
push
inc
or
decb
inc
add
mov
sbb
inc
mov
adcb
dec
ret
mov
je
clc
mov
stos
push
arpl
shr
mov
fwait
js
xor
jp
dec
jmp
xor
mov
enter
fwait
or
adc
mov
pop
sbb
enter
adc
ss
mov
icebp
notb
movb
cs
pop
or
ret
inc
dec
xchg
and
add
sub
push
into
inc
roll
movsb
les
in
mov
mov
inc
adcl
inc
je
rorb
cmp
push
inc
fwait
and
int3
out
and
jns
or
dec
scas
rorl
push
ljmp
add
push
jmp
or
add
stos
and
and
ret
dec
sbbb
xor
inc
adc
lret
clc
sub
out
iret
ret
fidivrs
mov
sub
mov
test
enter
dec
xor
enter
add
sbb
jl
mov
jns
test
xchg
mov
addb
stos
xor
ret
cli
enter
add
inc
pop
adc
cmpsb
xchg
clc
dec
ret
pushf
rclb
dec
inc
push
jle
mov
add
push
dec
xor
add
iret
fists
add
nop
push
stos
pop
js
jge
dec
inc
int
pop
icebp
es
orl
mov
sub
shlb
sbb
sbb
ret
pop
or
sub
jbe
aaa
jae
and
sbb
or
scas
mov
mov
aaa
dec
loop
add
or
sbb
jle
and
push
out
jbe
ret
push
sbb
xor
push
mov
sub
dec
shrb
stos
lea
and
sbb
dec
pusha
add
and
adc
add
dec
mov
inc
pop
add
xor
ja
shrl
push
push
push
adc
jge
dec
jo
aam
sub
mov
dec
lods
outsl
xchg
or
dec
std
xor
mov
movsb
inc
hlt
adc
add
adc
test
or
sarb
call
addb
mov
inc
dec
mov
inc
adc
pusha
or
push
andl
pusha
add
sub
inc
mov
cmp
std
inc
aas
loopne
aaa
inc
std
and
fwait
test
jge
adc
insl
sti
orb
mov
add
xor
fisttpl
mov
add
lcall
sbb
test
or
insb
cmpsl
add
mov
sub
jecxz,pt
faddl
jmp
mov
add
and
dec
jp
arpl
sub
pop
cmp
or
adc
fiaddl
imul
fcmovbe
and
pop
ret
pop
les
sbb
out
fsubs
loopne
fisubrl
and
les
inc
xor
pop
stos
xchg
sub
add
add
je
inc
stos
cmp
jbe
push
fcoms
cli
pop
movsb
or
shrb
popa
or
imul
decb
mov
push
and
loopne
jo
jno
loope
rorl
or
mov
adc
inc
mov
jle
push
aas
in
dec
ret
jg
rorb
mov
and
scas
or
pop
and
mov
insb
inc
ljmp
fiaddl
push
mov
aas
lods
fmull
lret
loope
lret
adc
add
and
pop
lret
adc
in
sub
mov
sbb
sub
andb
lret
dec
sar
pop
pop
shlb
cmpb
jecxz
push
pusha
add
mov
add
or
daa
icebp
fldl
jp
aaa
push
mov
jle
fildl
roll
ja
stos
push
loope
and
add
xchg
rcrb
xchg
cmp
or
or
in
mov
stos
aam
jle
mov
stos
add
loopne
push
jg
hlt
inc
movsb
lret
dec
mov
stos
or
ret
pusha
nop
loopne,pn
adc
sub
push
cmp
add
sub
out
xor
jno
sbbl
imul
dec
push
dec
lret
mov
push
dec
and
dec
js
xor
cmp
mov
lea
add
pusha
add
xchg
ss
push
add
lahf
popa
add
outsb
fisttpll
lret
loopne
lods
mov
cmp
js
mov
sub
push
dec
inc
cmp
mov
mov
addr16
dec
ss
orb
push
push
or
addl
rolb
xchg
cmpsb
test
loopne
add
call
add
stos
mov
xchg
mov
loopne
dec
jo
jg
fbld
cmp
push
mov
enter
and
stos
sub
je
sti
andb
and
push
mov
mov
in
mov
adc
push
add
mov
loope
addb
mov
add
mov
xor
loope
xchg
aas
push
pop
mov
push
std
stos
jbe
adc
dec
dec
shrl
es
pop
xchg
add
and
insb
cld
xor
xor
scas
mov
jmp
and
ja
aaa
into
push
cmpsb
lcall
jp
nop
pop
test
add
aas
addb
mov
sub
into
inc
and
dec
add
inc
pusha
xchg
loopew
nop
add
ds
mov
dec
pusha
adc
xor
addl
lods
loopne
sbb
jae
call
std
add
mov
rclb
adc
lock
loopne
mov
mov
into
inc
out
and
push
mov
xchg
lock
sbb
pop
js
adc
daa
mov
test
inc
adc
push
xor
loop
fsubrs
cltd
push
subl
cmp
push
mov
nop
add
stos
and
push
dec
pop
push
sahf
mov
and
outsl
push
scas
lret
mov
nop
xor
inc
jno
hlt
idivb
adc
loopne
inc
bound
adc
sar
mov
push
mov
nop
movsb
scas
dec
not
add
push
mov
or
test
enter
sbb
mov
cmp
mov
lods
das
ss
mov
sub
jg
sbb
xchg
add
dec
and
sub
loopne
lock
je
dec
push
insb
push
push
or
rorl
push
outsl
dec
cld
dec
jo
add
mov
pop
aaa
lock
xchg
icebp
add
imul
sti
inc
xchg
fstps
inc
jne
adc
or
outsl
jg
push
jo
ret
mov
or
jg
adc
or
ss
enter
testl
xchg
hlt
xor
inc
and
cld
notb
lock
and
dec
ret
jnp
dec
ret
inc
cmp
add
notb
test
mov
mov
jnp
andl
jo
adc
sbb
inc
or
jg
dec
hlt
add
adc
mov
icebp
sub
or
cmp
or
jl
dec
clc
fildll
and
data16
or
pop
add
and
ljmp
mov
pop
xor
cmp
adc
movsb
add
xorb
push
shrb
out
clc
out
outsb
call
into
or
call
add
push
arpl
jg
dec
shrl
xor
add
mov
push
add
jl
add
cs
es
mov
rcrb
inc
scas
push
stos
inc
mov
or
outsb
and
aaa
sbb
mov
adc
pop
ret
ljmp
movsb
mov
mov
rcrb
sub
inc
rorb
enter
aam
daa
adc
test
inc
mov
adc
pop
add
dec
loope
addb
mov
pop
test
push
mov
stos
or
add
outsb
mov
cmp
xchg
cwtl
xchg
sahf
adc
into
or
push
test
adc
shll
jg
nop
xor
or
sbb
jl
jb
into
fbld
push
ret
outsl
mov
jae
adc
push
xchg
and
adc
lret
dec
sbb
push
add
sar
jecxz
jmp
add
lret
xchg
pushf
jge
data16
xor
ss
push
out
xor
push
bound
enter
or
dec
cmp
jecxz
and
adc
adc
or
mov
ret
lock
nop
popa
xchg
pop
pop
push
and
clc
ja
in
bound
mov
pop
mov
sbb
gs
wrmsr
outsb
mov
imul
insl
lods
loopne
push
pop
enter
inc
mov
add
dec
and
mov
add
push
test
adc
or
or
mov
inc
mov
lock
and
adc
jae
or
sbb
and
mov
sti
fwait
movb
jae
inc
pop
stos
or
dec
rsqrtps
adc
lret
das
fadds
pop
icebp
push
sub
in
add
lds
mov
cmp
sbb
lea
xor
mov
into
mov
sub
push
adc
or
clc
sbb
dec
and
xor
rcrb
clc
out
clc
mov
xchg
inc
or
sub
movsb
push
rcl
inc
addr16
mov
xor
adc
adc
rdtsc
adc
push
add
stos
rclb
lea
sbb
jnp
fdivrp
jg
or
push
mov
xchg
jae
mov
stos
adc
jns
pop
dec
loopne
insl
or
mov
outsl
scas
jnp
aaa
add
mov
cmc
lods
pop
add
adc
inc
mov
stos
push
roll
stos
dec
jp
jnp
std
call
paddsb
push
push
pop
mov
and
sub
popl
sub
cwtl
ret
adc
rorb
lock
outsl
clc
add
jl
push
sub
dec
sub
add
bound
mov
or
jp
mov
inc
adc
xor
or
pop
push
pusha
sub
cmp
sub
cli
mov
test
adc
push
dec
inc
test
push
add
es
pop
sbb
mov
call
lock
inc
xor
add
test
add
pop
lock
das
lret
in
adc
push
xchg
add
inc
imul
dec
inc
stos
nop
adc
add
xor
mov
aaa
lds
stos
pop
pushf
sub
or
mov
in
mov
or
add
adc
and
mov
aas
clc
movsb
lock
enter
jo
push
call
nop
dec
pop
xchg
rcrl
add
xor
dec
into
ss
sbb
add
lock
xchg
orb
mov
inc
ficomps
jle
pop
jmp
loope
inc
mov
ds
push
movsb
cmp
mov
into
loopne
add
test
cld
adc
aam
or
mov
add
mov
or
loopne
pusha
iret
bound
stos
insb
add
push
inc
lock
xchg
jle
xor
sub
imul
adc
add
cmc
fsubs
mov
ret
adc
ss
leave
in
mov
sub
and
xchg
dec
pop
movsl
dec
jae
ss
fs
xorl
push
pop
loop
add
sti
mov
dec
nop
enter
lret
inc
test
push
adc
adcb
bound
push
sbb
aaa
retw
cmp
aaa
pop
add
aaa
fcomps
or
adcb
ljmp
push
addb
test
fisubrs
jle
test
jg
add
xor
into
inc
paddw
mov
adc
lcall
aam
mov
jb
shr
mov
imul
loopne
mov
fiadds
dec
bound
mov
add
sub
or
sbb
add
add
mov
add
dec
push
gs
jns
stc
jle
jp
sub
push
or
sub
jb
lods
inc
fmuls
mov
incb
dec
inc
xorb
mov
cmpsb
es
push
ss
jnp
mov
inc
adc
xchg
ret
mov
add
cld
mov
pop
sbb
test
es
addl
cwtl
fs
dec
inc
add
adc
out
andl
add
movl
arpl
fisubrl
dec
or
into
subb
mov
test
or
or
push
dec
xchg
int
or
push
cwtl
xchg
aam
imul
add
pop
and
fadd
sub
into
jp
inc
mov
mov
mov
gs
jns
sbb
push
add
mov
notb
pop
add
rolb
xor
sbb
ficomps
movsl
or
sub
mov
cmp
out
add
cmp
jmp
loop
jecxz
push
adc
js
pop
andb
inc
cs
adc
incl
mov
xchg
mov
into
and
inc
repnz
mov
adc
jp
rcrb
into
add
mov
cli
pop
inc
mov
sarb
lods
adc
sub
add
das
clc
mov
xchg
lea
xor
das
add
ss
and
incl
push
mov
dec
adc
push
ljmp
test
ss
dec
xor
or
sbb
sub
dec
cli
test
mov
and
xchg
mov
add
push
and
adc
addl
push
dec
inc
stos
xor
cmp
inc
jecxz
mov
stos
and
adc
sub
inc
mov
push
movl
divb
push
mov
pop
or
cmp
inc
or
sub
or
inc
dec
adc
push
xchg
arpl
sbb
sbb
push
and
xchg
dec
push
dec
ss
lcall
xor
dec
inc
int3
add
fadd
add
adc
orb
mov
sbb
sub
out
mov
inc
imul
rolb
add
adc
xchg
mov
and
leave
dec
sub
push
ret
mov
inc
sbb
es
gs
test
ret
cmpb
addb
loop
lods
cli
add
add
or
mov
jp
and
jmp
aaa
inc
sub
fcmovne
orb
dec
add
or
sbb
mov
xor
cmp
and
sub
mov
adc
ret
mov
mov
sar
mov
hlt
into
inc
jb
fisubrl
xchg
mov
scas
pop
pop
mov
js
xor
into
xor
loopne
or
faddl
lea
popf
pop
sbb
mov
jge
sbbb
jns
adc
dec
adc
orl
orl
movsb
ret
mov
mov
mov
mov
add
add
shl
push
mov
pushf
add
jp
cmc
mov
or
xor
add
or
fiaddl
xchg
mov
test
or
ret
adc
pusha
mov
xor
mov
ds
add
scas
mov
scas
nop
push
cld
lock
in
mov
lcall
test
dec
aaa
dec
addb
sbb
das
inc
rcrb
add
insb
adc
adc
insb
rolb
loopne
mov
fisttpll
test
ret
mov
push
shlb
pop
enter
add
mov
pop
adc
shll
add
pop
and
enter
stos
jl
inc
sbb
inc
xchg
pusha
add
ljmp
add
lret
addb
mov
or
mov
add
push
adc
cld
popa
xor
push
daa
out
or
push
enter
fisttps
add
loopne
mov
test
enter
cmp
aam
sbb
mov
jb
sub
adc
stos
decl
pop
mov
popf
les
cs
add
inc
gs
stos
inc
lea
sub
mov
jo
adc
stos
sti
cmpsb
cmp
jnp
in
addl
mov
rolb
rclb
add
xor
xchg
mov
addb
jg
sub
jae
mov
xorl
outsl
push
or
out
ss
movsb
jae
into
inc
stos
je
adc
sbb
dec
push
add
add
cmp
lret
dec
incl
test
xor
sbb
enter
or
xchg
jp
shl
mov
mov
sbb
rorb
subb
test
cmpsb
and
add
add
pusha
xor
cli
int
pop
and
dec
inc
scas
and
sub
insl
out
adc
adc
or
or
sub
or
inc
mov
fcomip
mov
sub
add
mov
stos
test
jg
hlt
pushl
stos
cmpsl
loope
and
ret
inc
xor
and
push
xor
jmp
mov
sub
xchg
mov
xor
fs
hlt
and
loop
cmp
adcb
mov
jecxz
into
iret
push
cmp
shrl
and
or
mov
pushl
push
xchg
imul
pop
bound
test
in
mov
cmp
rorl
xor
andb
ret
out
scas
push
sub
testb
ja
jg
cld
mov
jae
daa
xchg
lods
adc
sub
loop
push
mov
jmp
or
pop
adc
addl
test
push
add
jb
icebp
fstpt
sub
xlat
outsb
and
lea
add
mov
stos
push
add
push
loope
ljmp
push
jno
add
pop
lods
mov
jnp
mov
inc
adc
and
jp
repz
in
inc
mov
adc
adc
jne
jbe
or
mov
sbbb
jo
lahf
stos
ret
fiadds
or
dec
or
negl
movsb
add
sub
or
xor
xor
jmp
shlb
rolb
add
inc
add
jmp
je
mov
add
add
add
jp
popa
test
push
and
pop
sbb
stos
add
sub
scas
fdivr
jg
call
lcall
les
sbb
shll
into
into
insb
test
into
es
mov
ljmp
shlb
mov
sar
mov
push
sbb
sbb
scas
das
and
fdivs
mov
sbb
sti
ljmp
jbe
mov
xlat
mov
mov
mov
jo
sub
and
inc
dec
dec
xchg
jle
lock
add
push
sar
decl
xor
mov
xor
adc
js
add
fbstp
stos
bound
adc
xor
adc
add
or
and
in
lock
jp
sub
mov
clc
mov
mov
pusha
cli
mov
mov
xchg
hlt
adc
adc
add
mov
add
dec
addl
cwtl
roll
sub
cli
pop
hlt
add
or
mov
or
or
mov
daa
pop
push
jmp
movsb
sub
addb
lods
loope
jbe
or
sub
jl
push
ja
or
mov
cmp
jbe
push
addb
das
sbbb
inc
mov
and
movsl
es
push
cwtl
pop
hlt
sbb
and
push
test
mov
xor
add
jg
ds
incl
cld
imul
add
pusha
and
add
cld
es
faddl
xchg
pop
mov
or
jnp
add
test
movsb
orl
or
sub
nop
and
pop
dec
pop
lret
ds
push
push
rcrl
outsb
loopne
dec
xor
out
add
data16
fneni(8087
jmp
push
loopne
or
insl
loopne
int3
call
stos
adc
jbe
adc
sbb
pusha
sbb
mov
fists
cmp
add
mov
inc
mov
jae
rep
add
loopne
mov
jae
das
clc
js
add
fwait
sarb
inc
add
das
inc
adc
loope
aaa
dec
test
rolb
push
in
inc
aaa
inc
and
pop
mov
insl
insl
sarl
or
mov
adc
repnz
xchg
sbb
stos
aam
dec
push
es
or
bound
nop
cmp
rclb
sbb
sbb
mov
into
and
outsl
xorl
add
xchg
adc
push
xchg
test
add
jo
sub
dec
ljmp
jbe
cmp
out
pop
test
adc
iret
push
sbb
pop
sti
out
js
adc
addl
xor
fwait
xor
sub
or
sbb
cmpsl
adc
inc
inc
icebp
mov
mov
add
into
jp
inc
dec
push
lods
add
cld
lock
sub
stos
lds
dec
test
cli
rcrb
roll
dec
nop
mov
lock
les
mov
loopne
incb
clc
adc
ds
inc
enter
in
xchg
mov
lods
scas
jp
inc
rorl
add
cmpsb
ds
dec
mov
add
xchg
jl
cmp
push
adc
test
add
push
inc
sub
or
add
inc
adc
sbb
add
fdivl
sub
and
inc
ret
mov
or
subb
je
fisubl
ret
ss
xor
outsl
jno
and
add
cltd
inc
test
pop
dec
inc
sub
sbb
xchg
pop
les
hlt
inc
adc
sub
mov
outsl
int
mov
mov
adc
lret
add
test
push
xchg
ret
jp
jle
fdivr
incl
rclb
dec
test
push
insb
mov
adc
or
stos
fmuls
test
push
add
sub
xlat
cmp
pushf
mov
les
je
inc
push
aam
jno
repnz
xor
push
mov
lcall
adc
dec
inc
adc
pop
sbb
xor
push
adc
push
add
ss
pushf
inc
dec
call
test
cli
push
jg
sub
and
movb
add
fs
mov
cli
aaa
lock
push
adc
push
test
arpl
pop
inc
int3
mov
push
roll
xlat
jmp
push
inc
imul
ret
xor
add
jg
icebp
jg
or
push
xor
jae
outsl
and
or
push
jecxz
lock
xchg
call
adc
ja
sub
inc
rorb
mov
inc
stos
aam
cltd
inc
clc
scas
xor
sbbb
push
xor
dec
js
mov
push
mov
stos
popl
cmp
push
dec
add
inc
sbb
out
pop
lock
es
xor
xchg
sub
ret
pop
std
cmp
push
add
sub
xor
adc
push
loopne
adc
xor
and
jecxz
inc
push
mov
adc
pushf
mov
adc
xchg
ss
dec
jno
xchg
rolb
bound
cltd
push
add
in
cli
jno
incl
test
adc
inc
mov
push
shr
adc
loopne
xor
pop
jo
jno
jl
sbb
cmpsb
jae
push
jle
or
aas
push
inc
or
popf
push
fadd
adcb
std
adc
xor
loope
rorb
pusha
imul
inc
or
or
and
fidivl
test
push
enter
inc
push
outsb
stos
mov
lcall
lods
inc
orl
xchg
ss
mov
sbb
xor
mov
iret
add
push
inc
pop
in
mov
addr16
and
add
sbb
fnstsw
mov
jp
jbe
jnp
add
jle
subl
mov
mov
lahf
mov
dec
nop
adc
lea
xchg
ret
add
aaa
push
dec
add
dec
push
inc
lock
sub
imul
add
pop
inc
ds
or
mov
dec
sub
pop
xchg
or
add
jnp
aas
cmp
add
out
jp
jae
lret
pop
stos
pop
add
push
into
inc
xor
cltd
fadd
push
lock
add
orb
jge
inc
mov
add
je
or
rorl
leave
push
cmp
jmp
cli
popf
sub
xor
push
adc
fidivrs
add
mov
loop
pushf
and
mov
jp
mov
xchg
enter
jae
cwtl
popf
outsb
mov
sbb
mov
inc
into
sbb
and
mov
adc
add
aaa
xor
ss
add
inc
add
and
inc
cli
fbld
lret
jae
or
lock
call
out
rolb
pop
cs
pushf
cmp
cwtl
insl
fisttpl
sub
mov
lock
js
push
enter
inc
stos
jno
mov
adc
cmp
adc
inc
sbb
shlb
sbb
scas
mov
and
push
inc
jmp
fbld
or
and
inc
xor
mov
hlt
aaa
mov
ret
sbb
cmpb
or
push
pop
sbb
aaa
mov
sub
push
cmpb
adcl
add
sub
into
testl
lods
and
jecxz
adc
push
das
movb
pushf
push
pop
xorb
andb
pop
enter
jnp
stos
mov
rcrl
or
and
filds
mov
mov
mulb
add
outsl
out
incl
ret
inc
js
ds
cmp
imul
sarb
imulb
lret
outsl
stos
data16
test
sbb
xchg
or
pop
andw
jbe
daa
xorl
push
fistpl
mov
sub
xor
fcoms
imul
mov
inc
adc
mov
gs
mov
das
jo
push
dec
ret
js
cwtl
mov
shrb
push
int3
sub
add
push
fmulp
adc
sub
sub
adc
sbb
enter
sub
add
mov
mov
andb
adc
cs
or
dec
cmpsl
add
pusha
jbe
dec
or
fildll
dec
rolb
adc
adc
sbb
jnp
inc
xchg
add
fildll
sbb
add
ret
add
rcll
fnstsw
aaa
jo
sar
or
lock
test
dec
inc
stos
mov
push
paddd
loopne
sub
inc
stos
cwtl
adc
fwait
push
push
pusha
add
push
shrl
adc
inc
pusha
xor
inc
sub
dec
and
dec
rolb
jbe
call
inc
sbb
inc
sub
and
loop
scas
rcrb
and
mov
or
add
stos
in
fwait
adcb
dec
mov
out
loopne
push
stos
nop
cmpl
mov
inc
and
rorl
xchg
sub
mov
cs
or
in
dec
pop
adcb
test
es
push
dec
and
fisubrs
add
push
in
and
mov
xor
sbb
push
aad
add
pusha
cmp
push
fwait
into
cmp
push
je
add
je
adc
sbb
cmp
mov
push
aam
inc
adc
xor
xor
inc
movl
cmp
xor
adcb
push
mov
mov
jp
stos
dec
pusha
sbb
subb
push
inc
pop
add
mov
and
icebp
aad
jo
rorb
sbb
pop
lods
xor
pop
jbe
pusha
adc
repz
add
jne
outsb
test
and
sbb
xchg
adc
jmp
inc
shr
dec
int3
pop
inc
mov
stos
mov
xorb
add
lock
enter
mov
test
mov
pushl
ss
adc
or
mull
cmpsl
incb
sbb
sbb
mov
add
inc
mov
pusha
out
push
test
push
mov
sub
push
add
add
cmp
sbb
movups
dec
and
andb
arpl
sbb
or
add
add
rolb
adc
js
sbb
mov
stos
push
enter
or
dec
dec
jo
addl
jg
jmp
mov
adc
dec
xchg
ss
inc
cmpsl
lock
inc
sbb
add
dec
bound
dec
int
and
dec
cld
mov
add
jle
mov
adcb
lret
loop
imul
ret
lret
adc
inc
inc
xchg
inc
int
aaa
dec
add
stos
orb
pushl
stos
or
or
stos
ljmp
adc
and
cld
lret
enter
sub
into
sub
inc
push
pusha
jno
mov
rolb
punpcklbw
scas
test
adc
jo
out
adc
adc
push
sbb
mov
repz
and
pop
lcall
pop
scas
push
add
jb
add
mov
mov
add
and
mov
push
add
xchg
ret
popf
test
mov
ljmp
xchg
mov
imul
dec
clc
lret
add
push
mov
adc
scas
fmull
mov
stos
push
mov
enter
aaa
pop
jb
cli
notb
mov
and
sub
and
lcall
lret
clc
das
scas
adc
imul
stos
stc
adc
add
mov
mov
int
cld
xor
inc
mov
test
sub
or
js
pushf
aaa
inc
mov
aaa
sbb
or
decl
stos
sub
ret
adc
enter
mov
adcb
ljmp
push
adc
rolb
adc
adc
dec
mov
clc
lcall
jb
push
mov
test
pop
js
cmp
shr
cmp
push
and
ja
mov
shrb
add
mov
outsl
mov
js
ret
cmp
ret
push
mov
dec
adc
add
in
shlb
add
add
out
mov
movsb
rolb
jo
add
test
inc
fisubrs
mov
jge
xor
lret
push
mov
sbb
mov
enter
xor
inc
push
or
adc
and
cli
mov
sub
cmp
test
ljmp
mov
arpl
mulb
or
add
adc
shll
stos
adc
clc
call
cmp
add
dec
mov
loope
cli
pop
je
jle,pn
or
ss
jecxz
cld
push
push
pop
stos
das
loope
rcrb
jo
mov
subb
sbb
cwtl
dec
sub
mov
adc
jo
rcll
and
jmp
sbb
ss
inc
test
push
add
mov
jmp
ljmp
stos
jne
sbbb
sti
mov
inc
push
jae
cmp
pushf
pop
enter
adcb
add
call
xchg
fildl
out
inc
sbb
mov
or
jo
inc
xor
xor
add
ret
add
stos
jo
cmp
bound
push
ss
inc
push
sub
dec
mov
mulb
sbb
stos
adc
sbbl
jns
cmpsl
dec
test
test
test
stc
or
sbb
pop
test
iret
shlb
xchg
sub
jnp
push
and
nop
jo
mov
stos
inc
stos
lcall
mov
push
lret
shll
pop
mov
mov
add
lods
ret
mov
or
dec
stos
mov
pusha
ret
mov
sarb
sub
cmp
cmp
mov
pop
xor
rorl
mov
mov
sbb
mov
inc
push
not
addl
shll
add
mov
adc
fbstp
cwtl
mov
loopne
inc
xchg
xchg
stos
scas
add
xor
inc
pop
mov
cwtl
addb
add
mov
fwait
shl
and
nop
jmp
push
jle
dec
adc
loopne
stos
adc
dec
lret
mov
or
sbb
mov
push
fwait
and
mov
aaa
hlt
call
loopne
les
addr16
cmp
imul
aaa
lds
cmpb
xor
sub
loope
or
nop
inc
pop
cmp
xor
fisttps
mov
add
mov
call
jb
stos
or
cmc
add
and
mov
sbb
rcr
pop
and
call
xchg
loopne
packuswb
adc
adc
xor
inc
incb
xchg
inc
mov
or
mov
hlt
mov
popa
mov
jo
push
mov
pusha
jo
add
mov
int
std
rolb
stos
ficoml
scas
push
or
add
xchg
inc
pop
xor
mov
dec
dec
aaa
sub
scas
es
addr16
cli
nop
lahf
ret
mov
loope
xor
pushf
push
mov
add
add
rolb
or
add
loop
fwait
inc
add
pop
cmp
jg
std
cmpsb
add
adc
in
imul
scas
mov
fisubl
push
test
rorb
pop
cli
subl
aaa
and
jl
add
ljmp
rorl
push
push
add
adc
daa
rolb
adc
sti
pushl
add
dec
adc
xor
push
inc
push
js
push
mov
sbb
mov
inc
push
movsb
testl
and
sbb
or
and
adc
inc
push
inc
add
add
sub
mov
cmp
pusha
or
dec
xor
add
mov
jo
xor
stos
inc
xchg
dec
int3
clc
inc
pop
jo
fdivl
sar
dec
mov
rclb
clc
mov
sub
dec
cmp
popf
xchg
ss
push
or
lcall
fbld
jbe
ja
stos
shlb
imul
adc
fidivrs
jne
mov
inc
ret
gs
jl
mov
lcall
jns
push
jmp
sbb
test
or
mov
movsb
repnz
push
jl
xor
stos
push
sub
push
dec
add
mov
and
add
aaa
dec
xchg
add
inc
es
stos
adc
pusha
add
mov
lret
add
dec
dec
sbb
loopne
push
adc
sahf
aaa
inc
nop
adc
ljmp
lock
cltd
dec
pop
nop
adc
pop
sub
rcrb
sub
fistpll
mov
sahf
adc
inc
inc
and
xchg
fwait
jmp
pop
mov
inc
sub
add
cmpl
add
inc
rclb
clc
and
sub
xchg
adc
push
jle
dec
stos
hlt
cmp
pop
push
mov
stos
inc
pop
pop
out
push
or
mov
mov
sbb
je
mov
ret
push
mov
pop
lods
rolb
fiadds
adc
xchg
add
add
xchg
adc
hlt
ret
clc
xor
push
add
test
pusha
fwait
push
add
aaa
push
pushl
lock
xor
adc
je
or
add
jo
add
clc
pop
xorl
mov
loopne
sbb
adc
pop
adc
ja
adc
and
xor
aaa
subb
xor
xor
sub
scas
js
add
cmpsl
loopne
xorb
orb
in
mov
add
add
inc
addl
negb
inc
sub
lahf
addb
aam
test
std
dec
add
mov
mov
xorb
dec
rolb
movl
cwtl
push
add
mov
lcall
inc
add
adc
xlat
addb
pop
or
test
lods
add
xchg
icebp
cs
jnp
adc
mov
add
and
js
xlat
mov
add
pop
test
popf
cli
outsl
lret
filds
inc
orl
daa
pusha
mov
inc
mov
mov
jbe
inc
addl
or
add
cmpsl
inc
mov
repz
test
mov
adcl
cmp
push
aad
push
mov
and
inc
stos
and
pusha
xchg
in
sub
or
and
sti
push
add
loop
shlb
rolb
jle
add
add
and
orl
lock
dec
js
add
or
inc
and
push
mov
sub
stos
test
or
movsb
daa
imul
jge
push
add
outsb
inc
fwait
orb
shrl
sub
or
or
hlt
jg
sbb
dec
stos
push
mov
inc
push
mov
mov
sbb
les
inc
rclb
mov
or
add
mov
lret
test
xchg
lret
fisttps
push
cmp
adc
dec
add
lret
push
push
mov
inc
cmpsb
dec
test
push
mov
stos
fiaddl
jno
cli
mov
scas
add
dec
push
jo
enter
jp
inc
lcall
or
enter
mov
mov
xor
mov
add
push
fldl
decb
outsb
repz
ss
sbb
sahf
add
push
ss
lret
pop
push
inc
test
ret
mov
testl
or
push
int3
aas
inc
push
nop
cltd
inc
cmp
sbb
out
shl
push
inc
pop
inc
push
adc
adc
cmpb
mov
or
mov
hlt
pusha
mov
mov
popa
mov
fdivrs
mov
inc
or
sbb
mov
adc
inc
xchg
addl
push
or
push
es
add
jg
inc
stos
or
xor
fnstsw
mov
add
inc
xor
dec
fwait
call
adc
xor
jp
stos
std
push
add
fwait
incb
lret
add
mov
loopne
or
mov
stos
cmp
pushf
stos
pop
scas
pop
or
mov
sub
icebp
es
adc
enter
adcl
pusha
and
add
jp
fs
into
pusha
cmp
xchg
jo
decl
or
scas
mov
mov
adc
dec
stos
test
push
loopne
push
mov
negb
add
or
repnz
fsub
stos
popf
mov
jne
mov
sub
jmp
das
pop
adc
mov
xchg
and
dec
adc
mov
add
mov
andl
in
cmp
sbb
and
pop
stos
dec
mov
pop
test
xchg
js
mov
cmp
push
mov
aaa
push
pop
push
jb
sbbl
es
adc
add
pop
or
js
and
pop
jl
sub
cld
scas
mov
and
into
sbbb
jbe
ss
das
loope
imul
cmp
insb
sbbb
jp
sbb
jp
ss
jg
add
push
inc
or
adc
mov
lods
or
mov
add
out
mov
mov
xor
andl
arpl
adc
add
xorb
mov
dec
loopne
mov
pop
add
add
repnz
imul
flds
mov
sbb
inc
sbb
add
std
stos
data16
pusha
and
push
stos
adc
mov
pusha
push
test
aaa
and
popa
mov
sub
add
mov
es
adc
into
add
mov
sbb
jp
fs
push
adc
adc
scas
test
adc
jb
push
mov
pop
hlt
push
sub
clc
out
aam
popa
jb
ss
stos
loopne
mov
lret
mov
jno
popa
sar
into
and
adc
push
test
out
add
aad
lock
pusha
dec
dec
and
cld
rclb
push
sbb
mov
add
outsb
pop
subb
inc
push
pop
rolb
pop
orb
in
jo
sub
lds
lret
je
adc
sub
popa
cli
adc
lahf
sub
xor
stos
sub
cli
add
dec
insb
fs
add
sub
shlb
xchg
loopne
xchg
cmp
add
cmp
push
or
jo
sub
fisubrs
in
xor
push
and
cmp
mov
inc
cld
stos
movsb
adc
and
cmc
xchg
dec
push
std
ljmp
push
xor
push
add
add
mov
in
dec
mov
pop
loope
jp
mov
dec
lret
or
gs
mov
mov
add
addb
and
ss
and
inc
and
and
mov
jo
into
xchg
mov
or
push
mov
roll
lods
mov
xorb
inc
sbb
cmpsl
movsb
outsl
or
test
mov
mov
push
or
decb
in
push
mov
in
ds
dec
stos
clc
rolb
add
icebp
cmp
cmpsb
push
stos
and
adc
pop
rcl
adcb
clc
push
fcoms
push
xor
dec
and
scas
stos
scas
adc
cmp
mov
out
rolb
adc
push
fadds
stos
mov
adc
jo
cmc
ja
mov
add
fisubl
inc
lret
mov
fyl2xp1
inc
add
xchg
jb
xor
adc
lock
mov
mov
mov
ret
dec
rolb
sub
mov
add
adc
cmp
or
or
mov
cmovnp
dec
fcoms
sbb
stos
shlb
adc
mov
add
aaa
mov
mov
push
xor
mov
or
adc
dec
mov
stos
sbb
movsb
push
ss
lock
jb
add
sub
icebp
add
leave
or
jg
push
inc
vandnps
pop
subb
movsb
sbb
call
add
ret
insb
fcoms
call
nop
add
mov
scas
arpl
inc
lahf
lea
xchg
dec
mov
adc
lahf
test
mov
pop
or
jo
movsl
test
rorb
and
sbb
xor
lea
into
sub
test
ret
pushl
mov
mov
jnp
xor
inc
or
js
insb
mov
mov
sub
enter
test
pop
hlt
and
ss
inc
add
mov
clc
sbb
mov
cmc
loop
fcomip
push
adc
pushf
pushf
movsb
enter
lock
pushf
xchg
subb
rolb
push
int
nop
sbb
dec
andb
dec
dec
orl
xchg
mov
dec
les
addl
stos
repz
hlt
lret
jbe
jmp
loope
xor
push
adc
ret
dec
cmp
mov
cli
mov
adc
into
ret
in
dec
mov
xchg
mov
test
test
inc
std
push
fidivrl
enter
ss
push
sub
mov
enter
sub
cmpsb
movsb
mov
jecxz
addb
jmp
sbb
dec
xor
aaa
test
sbb
and
shrb
icebp
pop
inc
dec
pushfw
inc
xor
pop
xchg
push
jg
outsl
fcomip
pop
mov
sbb
mov
stos
daa
xor
shrl
and
cmpsb
scas
js
add
sbb
bound
cmpsb
mov
sbb
mov
shll
mov
fdivrp
sub
loop
add
pusha
adc
sbb
in
jg
jo
popa
sub
sub
mov
jmp
dec
add
icebp
bound
add
mov
or
add
adc
mov
lods
sbb
cwtl
movsb
or
mov
hlt
xor
ret
jns
add
jno
mov
hlt
jg
pushl
push
push
xchg
cs
adc
test
xor
xor
xor
movsb
fcoms
and
mov
mov
bound
sub
jae
add
sbbb
shlb
adc
inc
ficoms
mov
push
mov
mov
add
mov
and
inc
mov
js
hlt
lock
hlt
mov
sbb
add
outsb
loop
inc
insl
or
pop
lock
shrb
es
xlat
jne
mov
pop
dec
fs
clc
ja
ret
add
mov
or
sub
sub
mov
jg
das
mov
sbb
or
jno
push
mov
add
andb
addl
jl
mov
and
mov
insl
xor
sub
jo
sbb
mov
pop
inc
lea
test
test
out
inc
test
adc
inc
repnz
fcomip
testb
add
inc
and
cmp
jp
add
add
add
sub
filds
inc
test
sub
add
add
push
mov
mov
sub
and
fcomps
inc
mov
or
xor
add
adc
bound
aad
subb
mov
aaa
dec
sti
cwtl
inc
jno
and
jno
popa
xchg
jne
lock
or
or
lret
push
icebp
loop
ss
mov
decl
xchg
rolb
test
rolb
js
add
ss
std
add
cli
stos
inc
xchg
mov
push
dec
and
stos
dec
dec
adc
push
push
lock
xchg
adc
dec
inc
stos
sub
jmp
sbb
dec
mov
ret
push
aaa
jbe
ljmp
ror
mov
mov
lods
loope
xlat
dec
adc
mov
icebp
enter
mov
xor
push
das
push
cmp
jmp
add
inc
adc
jno
cmp
pop
enter
add
dec
inc
pop
inc
or
outsl
mov
loopne
pop
inc
es
cmp
pop
adc
sbb
ljmp
jp
xor
push
jo
mov
movsl
xor
jo
ret
push
lods
push
lods
xor
push
rcrl
outsl
pop
dec
mov
addr16
shlb
push
push
pop
loopne
or
scas
inc
lret
jle
push
add
enter
adc
push
inc
es
adc
rcrb
xor
cld
fildl
adc
or
and
adc
add
sbb
or
inc
test
or
ret
cmp
adc
sbb
call
xor
sarb
xor
add
mov
inc
inc
or
outsl
ss
add
sub
sbb
aaa
mov
out
inc
push
out
enter
dec
xorb
inc
mov
lcall
jmp
inc
dec
sbb
or
inc
and
or
xchg
lret
mov
mov
inc
jmp
fisttpl
push
fcmovnu
fstpt
mov
jp
dec
dec
jecxz
push
inc
dec
int3
fdivrp
inc
aaa
and
lret
mov
test
adc
aad
push
xor
sarb
imulb
inc
mov
sbb
add
adc
inc
les
idivb
inc
add
mov
and
addr16
inc
adcb
pop
data16
cmp
sarl
add
pop
in
int3
je
fdivl
and
mov
rol
sbb
mov
test
xor
les
xor
ds
sub
popa
xchg
push
icebp
dec
mov
fdivl
subb
xchg
xor
push
add
sarb
add
or
push
cwtl
adc
and
clc
push
inc
or
inc
push
add
dec
lss
popf
and
add
cld
add
addb
dec
cld
add
subb
and
cmpsb
adc
sub
add
cs
outsl
xor
in
mov
mov
test
in
xor
add
cmpb
and
andl
loop
inc
mov
xor
mov
jno
sti
push
test
or
cmpb
cmpl
data16
or
mov
mov
ret
jl
push
add
adcb
sbb
jb
shlb
je
sar
push
inc
pop
ret
rolb
and
add
cmp
test
add
mov
xlat
cmp
and
and
bound
inc
arpl
rcll
xchg
mov
adc
push
add
ss
add
decb
mov
xor
ret
arpl
arpl
cmp
cmp
and
pop
sub
sahf
mov
es
rclb
or
int3
jmp
sbb
orb
mov
adc
sub
mov
incl
lret
mov
aas
shll
mov
into
std
push
test
or
shl
inc
jl
adcb
es
int
push
push
xchg
stos
and
xor
test
add
xor
stos
or
addr16
push
lret
ret
adc
cmp
aas
dec
test
in
inc
add
or
mov
adc
in
rolb
mov
push
dec
sarb
clc
or
repnz
mov
push
test
xor
cmpsb
lret
and
pop
mov
pop
add
mov
mov
mov
je
or
inc
popf
add
xchg
lcall
mov
add
in
test
int3
push
enter
cmp
xchg
lret
dec
mov
je
pusha
jg
pop
xchg
test
popa
rolb
les
and
subb
cmpb
jle
sbb
inc
aaa
data16
jns
repz
and
or
add
mov
insb
add
mov
mov
nop
cs
or
ljmp
add
fwait
loopne
inc
push
push
or
icebp
divb
ret
adc
or
mov
sbbb
das
cli
mov
mov
outsl
jle
or
inc
jae
xlat
outsb
test
fwait
std
jg
add
dec
rclb
or
mov
push
sub
loopne
outsl
fistpll
cwtl
lret
xchg
rol
popa
lods
push
fldenv
jmp
inc
enter
bound
add
jb
lret
into
cmp
add
dec
cli
aaa
mov
into
aas
add
jg
jmp
and
add
mov
shlb
pop
mov
lret
add
into
sub
or
mov
shlb
xor
inc
test
insl
push
ror
mov
sub
ds
mov
jmp
pop
loopne
incl
or
shll
hlt
gs
inc
inc
jg
aaa
dec
jg
xchg
inc
sbb
inc
scas
mov
sbb
aaa
adc
ds
addr16
adc
movb
adc
repnz
mov
fbstp
dec
les
mov
inc
scas
fcomip
lods
add
sahf
movsb
pop
push
and
pop
inc
pushf
bound
hlt
mov
pushf
push
pusha
push
loopne
cmpsb
lcall
pop
and
imul
stos
fmuls
mov
clc
and
mov
sbb
dec
or
and
inc
and
jg
inc
hlt
pop
aaa
scas
fisubs
add
mov
int
xor
push
shll
add
scas
adc
rol
jl
inc
pusha
or
add
rolb
xor
xor
push
data16
add
inc
adc
push
add
es
aaa
mov
jo
adc
imul
push
or
fildll
mov
aaa
dec
and
fmuls
fcomip
add
or
add
lock
push
int
test
dec
dec
es
mov
jp
dec
mov
and
adc
jno
adcb
pop
cmc
mov
lock
nop
mov
inc
dec
mov
add
aaa
jp
jg
jp
inc
ss
enter
xchg
dec
inc
or
jo
push
pop
icebp
outsb
mov
dec
cmp
clc
pop
mov
mov
cwtl
shlb
and
and
add
push
push
bound
jg
cld
aaa
mov
pop
rclb
xor
pop
or
add
dec
das
xor
popa
jo
sarb
movl
aam
mov
inc
aaa
sub
add
js
aaa
push
pop
shrl
mov
push
out
cmp
push
lods
mov
es
lds
sbb
jbe
incb
stos
mov
inc
subb
movsb
pop
mov
subl
jns
xor
sti
xchg
sbb
nop
xchg
aaa
dec
mov
inc
jns
outsb
push
fdiv
mov
add
fnsave
addb
adc
xor
and
js
test
sbb
or
testb
mov
push
roll
dec
inc
pop
dec
inc
push
mov
dec
loope
cli
push
leave
push
outsl
decl
add
inc
test
mov
mov
rclb
push
mov
xchg
add
cmp
jb
inc
add
add
inc
dec
hlt
dec
jg
out
dec
cmp
or
inc
push
xchg
scas
push
jg
pusha
mov
adc
inc
add
stos
add
incl
mov
push
adc
mov
adc
loopne
add
adc
push
push
adc
adc
push
jge
push
mov
jo
or
int
jo
dec
jle
fneni(8087
sbb
or
pop
mov
or
nop
ret
xchg
fwait
ss
ja
decl
inc
sbb
test
push
pop
xor
out
push
inc
pusha
lret
push
icebp
outsb
mov
dec
subb
shlb
pop
inc
aas
jo
cld
pop
jl
xor
xor
lret
js
orl
add
inc
push
pop
or
mov
add
stos
mov
add
mov
add
xlat
subl
inc
jg
sub
movsb
arpl
push
jo
dec
pop
nop
or
jg
or
xchg
popa
and
test
test
pop
repz
push
lock
inc
ljmp
or
stos
inc
js
sbb
dec
push
and
into
inc
mov
icebp
or
push
pop
mov
and
int
sarl
xor
mov
fsubrl
or
clc
call
xchg
inc
mov
rorb
stos
cmpsb
inc
add
dec
add
imul
test
add
cmpsl
add
stos
div
add
sub
cmpsb
add
xor
stos
leave
xchg
mov
sub
push
loop
fdivl
push
rolb
add
inc
sarb
fbstp
xchg
cmpsb
push
push
popa
or
outsb
jle
rclb
aaa
push
jle
arpl
loopne
push
push
and
inc
lock
push
les
test
or
pop
pop
mov
lock
xor
js
mov
js
stos
xchg
mov
cli
add
aaa
mov
cmc
call
into
hlt
repnz
mov
out
jle
jecxz
pop
lock
ret
popa
sub
mov
ror
dec
xchg
lds
icebp
add
push
sub
dec
sbb
daa
or
mov
stc
fistl
addb
je
pop
jae
add
pop
fs
divb
iret
test
push
xor
jle
and
ret
add
insb
xlat
incb
cwtl
jle
stos
pop
sahf
fisttpl
cmp
add
adc
mov
stos
andb
adc
adc
sbb
fsubp
add
adc
fs
cmpsb
clc
sub
add
insl
dec
add
dec
adc
loope
inc
add
pop
inc
or
add
sbb
repnz
or
dec
imul
jo
mov
scas
data16
mov
enter
inc
enter
push
adc
test
pushf
jp
or
mov
add
es
adc
call
sbb
xor
dec
les
inc
or
dec
cmc
add
lock
pusha
faddl
jo
and
push
inc
xor
push
inc
ljmp
add
cli
es
push
add
inc
test
outsb
or
ss
or
lock
lret
or
call
or
mov
add
jno
push
sar
inc
mov
aas
push
push
adc
aas
insl
inc
fadds
push
daa
bound
inc
pop
adc
popa
inc
push
mov
les
enter
mov
and
mov
repnz
shlb
call
dec
push
pusha
or
leave
adc
add
add
stos
jmp
inc
cs
sbb
int3
push
xchg
or
cld
pop
cld
add
jle
xor
es
imul
jne
xor
inc
jo
adcl
or
adc
cmp
es
andl
lahf
or
xor
lods
sub
mov
mov
add
add
test
xor
jo
movsl
cmpsb
push
mov
mov
jle
mov
add
or
push
add
xor
and
mov
leave
inc
dec
inc
inc
xchg
scas
sub
push
add
jp
push
cmp
or
xchg
mov
sub
test
pop
mov
in
push
or
add
stos
cwtd
dec
ljmp
push
incb
and
add
cs
add
xor
jge
sub
and
cld
adc
jae
imul
inc
test
jge
or
inc
add
pushf
test
mov
add
movb
add
add
lcall
loopne
lock
movsb
scas
test
addl
push
fsubl
cmp
mov
mov
popa
imul
pop
and
inc
mov
pushf
sub
cmp
add
adc
pop
jp
push
push
dec
push
lcall
orb
subb
incl
adc
add
push
mov
jmp
aad
add
push
mov
adc
jg
inc
push
rclb
pop
jo
subb
jp
aas
add
xorb
and
dec
dec
xorb
inc
loope
daa
pop
int3
movsl
rclb
inc
out
mov
js
call
jecxz
inc
pop
ret
gs
addr16
mov
mov
cmpl
add
xchg
scas
push
test
mov
call
stos
sub
or
frstor
aas
bound
xor
dec
ret
xor
jmp
add
les
adcb
test
jg
pop
jl
jno
push
adc
or
test
xor
xor
insl
xchg
mov
xor
or
dec
and
inc
lock
cs
sub
or
lcall
and
shl
pop
push
stos
xor
inc
xchg
ds
cmp
mov
lahf
jo
lahf
cltd
or
add
push
inc
or
mov
dec
inc
and
xchg
push
daa
ret
push
das
cmpsl
mov
add
jge
push
inc
addr16
ret
push
xchg
and
aas
mov
push
mov
and
inc
cmp
cmp
push
aaa
insl
inc
or
sub
jmp
or
push
pop
fisttpll
xlat
push
js
orb
arpl
push
rclb
cmp
mov
inc
rclb
loopne
cmp
lret
subb
add
push
imulb
into
mov
and
push
push
push
xchg
add
pushf
stos
fcompl
ss
mov
add
std
imul
add
xor
popa
pop
add
dec
loopne
popa
popf
inc
ret
sbb
mov
push
int
ret
loopne
adc
or
mov
cmpb
jecxz
pusha
cltd
cmpb
cld
mov
push
xchg
test
fs
xchg
pusha
mov
and
fisubs
cmpsb
ljmp
dec
xchg
jo
lcall
mov
xor
pop
push
and
and
shl
dec
lret
dec
or
lcall
pop
lock
add
add
pusha
sbb
lcall
mov
test
mov
mov
rcrl
cmp
ret
subb
je
inc
mov
je
outsl
outsl
or
pusha
nop
xor
sub
mov
mov
test
enterw
pop
add
leave
or
add
outsl
xor
inc
and
nop
cwtl
std
xorb
inc
and
mov
add
cmp
sbb
push
mov
orl
fwait
stos
push
mov
inc
xchg
dec
iret
cld
mov
stc
sbb
add
int3
inc
mov
aaa
gs
int
orb
rcrl
hlt
dec
cmp
pusha
ret
outsl
xchg
lock
and
test
and
incl
stos
orl
lods
mov
jbe
movsl
clc
and
and
popa
and
and
cmpsb
pop
sub
jecxz
or
dec
call
frstor
test
mov
cmp
or
or
inc
lcall
lret
add
mov
or
cld
call
sub
add
dec
aas
popa
push
adc
and
jo
and
mov
stos
fistpll
iret
xor
jl
decl
push
pusha
adc
adc
cmp
xor
mov
inc
test
pop
or
stos
shlb
ficoms
dec
xor
mov
decl
shrl
push
inc
ret
and
lcall
fldcw
outsl
add
mov
mov
mov
and
xchg
mov
aas
dec
sti
mov
pop
rolb
loop
aad
push
dec
mov
add
and
pop
sub
dec
add
push
in
mov
ja
inc
test
pop
push
mov
cmpsb
pop
sub
in
add
rcll
adc
mov
and
loop
mov
adc
loopne
je
add
cmp
xchg
js
lcall
ss
dec
loop
enter
mov
add
adc
shll
cmp
or
adc
jns
jbe
cmp
aaa
jg
jns
add
ss
add
orb
pushf
jg
add
js
xor
iret
xchg
xchg
nop
push
ret
push
andl
int3
mov
push
shr
jnp
adc
xchg
test
es
loope
scas
outsl
add
shlb
lock
testb
cmp
bound
notb
mov
ss
loop
insl
xorl
add
clc
or
in
stos
and
xchg
xor
push
pop
ret
add
push
mov
add
sbb
or
jne
inc
mov
xchg
inc
lds
mov
sbbb
cmp
sub
movsl
lcall
inc
jbe
data16
cmpsb
insl
outsl
aaa
pop
adc
add
ret
dec
mov
nop
cmp
stos
hlt
mov
pop
cmpsb
xlat
decl
mov
arpl
rorl
roll
dec
daa
push
enter
add
or
sbb
dec
into
ss
mov
mov
inc
push
lea
jge
clc
mov
pop
adc
push
insl
adc
inc
add
in
mov
cmp
sub
imul
sub
mov
pop
mov
ret
xor
xor
pushf
pop
pushl
pop
test
pop
pusha
push
pop
in
cs
leave
xor
push
xor
shll
lds
int
sbb
ja
fildll
push
pop
rolb
add
adc
rol
into
aas
inc
inc
test
and
push
mov
add
rcr
loope
xlat
lock
ficoms
cmpb
jne
out
js
ds
jle
jo
and
dec
add
fstpt
inc
jno
add
arpl
xor
scas
mov
or
adc
mov
rcll
push
pushl
mov
shll
mov
shlb
adc
pop
dec
dec
loope
xor
cmc
add
fmull
or
add
rorl
arpl
add
jg
addl
sub
inc
rolb
fwait
mov
cmc
mov
dec
inc
jb
test
enter
nop
add
adc
aam
pop
adc
stos
jne
rorb
rolb
test
fs
test
rcr
mov
sub
cmp
lcall
sub
adc
fsubl
add
pop
lret
pusha
or
adc
adc
or
inc
xchg
stos
das
and
mov
mov
pop
or
fmuls
cli
mov
ljmp
mov
sar
pop
jecxz
add
pusha
hlt
test
lds
xchg
stos
ja
pop
shll
pop
pushf
adc
test
ljmp
lock
stos
fldcw
add
add
dec
incl
mov
pop
roll
ret
add
push
add
add
pop
jno
cld
outsl
in
test
paddd
dec
stos
ret
and
lret
stos
sub
jbe
and
and
mov
fnstenv
and
lcall
push
pop
stos
pop
or
xchg
test
add
inc
adc
fs
mov
and
repnz
sub
ss
cmpsb
adc
mov
and
cmp
jg
pop
add
or
xchg
add
sbb
mov
add
xor
add
sub
test
sub
push
inc
pop
add
daa
outsb
inc
cld
mov
inc
in
mov
clc
push
pop
or
into
add
enter
add
mov
jg
pop
bound
subb
mov
dec
jp
xchg
add
inc
inc
ret
sbb
arpl
push
addr16
mov
fs
mov
data16
inc
movsl
movsl
addb
sahf
add
faddl
push
adc
movsl
mov
rolb
inc
add
sub
dec
in
mov
addl
push
and
mov
mov
add
aaa
dec
inc
outsb
insb
fbld
add
jle
subl
scas
cli
out
adc
shl
sbb
cmp
and
ss
jp
sbb
adc
es
adc
fadds
jne
xchg
or
lock
xor
sbb
mov
adc
shlb
or
stos
inc
sbbb
rcrb
cmp
push
into
push
jg
mov
arpl
lods
jecxz
popl
adc
or
push
lods
loope
orb
andb
lret
js
sbb
push
in
add
add
mov
jo
dec
mov
test
je
test
ja
aad
mov
cmp
ss
ss
sub
inc
inc
jl
fildll
addl
push
ds
pop
addr16
cmp
and
incl
jg
and
shlb
andl
lcall
ret
pop
push
arpl
mov
mov
add
sbb
add
sub
push
sar
jle
inc
cmp
test
lret
enter
int3
fistpl
push
lahf
shll
jne
mov
add
jp
in
and
pop
push
jbe
fcoms
add
sbbl
cmp
loop
cmc
call
movsb
addb
cmpsl
sarb
mov
subb
lds
aaa
inc
mov
ljmp
stos
iret
inc
adcb
shll
inc
scas
inc
mov
push
inc
cmp
outsl
clc
sbb
mov
and
loop
lds
mov
es
movsl
loopne
aas
push
cmp
pushl
jecxz
cltd
cmpb
sbbb
push
push
mov
andb
sbbb
cs
scas
jmp
jmp
aaa
icebp
stos
test
inc
loopne
push
mov
or
and
add
orl
sbb
pop
lret
call
rcrb
dec
das
xor
push
xor
and
pop
mov
icebp
int3
xor
cmp
push
ja
adc
enter
adc
mov
aaa
and
adcb
push
negb
pop
adc
xor
inc
and
add
mov
hlt
shll
sahf
fsubs
hlt
mov
xchg
jb
cmp
cmc
rolb
cmp
xor
loopne
cmp
xchg
lcall
cli
lcall
and
and
or
xor
or
xchg
movsl
jg
pushl
imul
add
movsb
and
dec
add
jecxz
add
int3
mov
add
pop
outsl
push
push
and
sbbb
push
push
mov
xchg
stos
mov
cmpsl
xchg
sbb
fwait
loopne
dec
lds
cs
mov
or
add
add
js
stos
jg
cmc
lcall
test
in
shlb
add
fsubs
add
push
or
pop
outsl
mov
xor
out
fwait
mov
and
test
jne
pushl
or
or
or
stos
push
test
mov
orb
or
xorb
outsl
pop
sti
mov
inc
popa
jb
add
and
jo
inc
push
adc
scas
clc
fbstp
loope
mov
flds
movsl
and
icebp
ljmp
push
pop
loopne
enter
pusha
loopne
pop
jg
pop
mov
inc
push
add
inc
push
sub
or
faddl
sbb
add
mov
std
mov
push
lcall
mov
bound
sbbb
mov
add
add
pusha
add
ds
aaa
jecxz
add
mov
xor
mov
push
clc
inc
mov
inc
rol
xchg
and
sub
and
shl
push
sbbb
add
enter
call
rol
clc
sub
aaa
add
loopne
mov
flds
pusha
aam
loopne
rcll
push
inc
jne
outsl
sbb
arpl
bound
mov
dec
adc
push
xor
add
jge
dec
jbe
and
mov
xor
or
mov
pop
test
cltd
add
rcll
xor
cld
push
or
push
dec
or
adc
test
popa
cmp
mov
adc
loop
dec
js
mov
and
popl
inc
and
lock
mov
inc
mov
mov
dec
mov
scas
insl
fcmovne
dec
loopne
outsl
add
push
adc
lods
sbb
add
rcr
call
mov
or
cmp
adc
test
jbe
pop
fisttpl
mov
lock
jo
mov
and
push
adc
fistl
inc
and
pop
inc
push
imul
leave
orl
movsl
sub
mov
int
sub
adc
add
xor
add
and
push
pop
adc
lods
adc
mov
mov
fisttpl
mov
out
mov
push
pop
lock
fstl
push
nop
mov
bound
and
fldt
mov
or
adc
inc
add
inc
add
and
and
mov
jge
add
in
xchg
addl
les
bound
nop
or
adc
cwtl
adc
xchg
lcall
loop
inc
jmp
and
push
dec
mov
ret
mov
xchg
mov
or
sar
mov
mov
pop
push
mov
das
out
cltd
negl
mov
push
push
mov
add
inc
add
lock
aaa
or
aaa
in
loope
mov
xchg
inc
add
js
imulb
data16
dec
mov
lds
sub
mov
jb
add
push
mov
cmpsl
popa
push
adc
push
add
ss
dec
add
xchg
addl
jbe
cmpl
push
add
inc
adc
lds
mov
sbbl
or
lret
xchg
jl
fildll
enter
sub
xor
hlt
arpl
add
pusha
fwait
push
test
xchg
mov
cld
jo
pop
orb
cmp
push
xor
rorb
in
mov
and
xor
sbb
add
rcrl
mov
add
and
call
imul
fimull
cli
add
sti
jns
push
jmp
push
adc
and
clc
xchg
imul
and
stos
jnp
adc
mov
outsb
jg
mov
push
dec
mov
insb
adc
push
or
filds
mov
andb
pop
pusha
add
add
pop
rorb
add
add
inc
or
push
push
call
lret
or
push
addb
iret
filds
dec
xor
nop
hlt
adc
mov
push
inc
dec
jno
mov
pop
push
loope
das
aad
pop
roll
sub
test
inc
shll
dec
or
or
aaa
or
sbb
dec
aaa
inc
std
stos
orl
dec
dec
nop
add
subb
mov
inc
subb
pop
xchg
sbb
adc
sar
hlt
inc
pusha
xorb
aas
pop
fists
adc
incl
divl
pop
jle
decl
cwtl
dec
lcall
sbbb
lret
test
div
bound
add
xorb
hlt
push
push
add
cmc
incl
ret
and
add
or
pop
rcll
adc
jl
pop
arpl
in
xchg
mov
adc
bound
add
add
cmpsb
pushl
ljmp
jno
test
sti
cld
in
fistps
decb
add
lock
adc
jg
add
into
movups
mov
pop
lret
push
push
dec
add
mov
test
and
test
or
add
mov
dec
adc
dec
insb
clc
sbb
push
inc
and
push
sbb
test
pop
add
rcr
sub
inc
mov
sbbb
push
push
enter
inc
ficompl
mov
js
std
jmp
cmp
mov
xchg
mov
ficoml
add
xor
inc
das
pop
sub
ds
inc
inc
jl
sub
icebp
add
orb
cmp
sbb
ja
adc
or
push
mov
push
pop
and
dec
aaa
mov
aad
add
enter
sti
subb
int
mov
shlb
jo
add
mov
inc
clc
out
adc
outsb
rorb
shrb
adc
mov
and
mov
das
push
adc
enter
rorl
addr16
aaa
gs
dec
repz
add
xchg
addb
dec
sub
xchg
mov
loopne
add
push
scas
dec
ret
pop
fists
sbb
bound
ss
push
jle
fistl
into
dec
les
dec
push
xor
mov
clc
mov
out
aaa
sub
mov
pop
shlb
decl
mov
testb
into
ret
ss
or
sbb
mov
push
push
push
js
test
mov
inc
jns
pop
ss
jno
dec
dec
je
leave
add
jns
add
aaa
inc
jo
in
out
xchg
cwtl
and
dec
aas
scas
dec
mov
in
inc
jp
les
push
loopne
test
bound
adc
and
outsl
xor
add
mov
mov
pop
stos
test
add
clc
pop
sbb
or
pop
mov
cmp
add
add
call
fdivs
sbb
cmovo
sub
adc
or
xor
movsl
shlb
xlat
das
mov
add
test
or
push
lock
adc
imul
mov
lcall
enter
jnp
ss
test
mov
and
adc
adc
push
inc
loope
add
rol
mov
xor
scas
xor
jl
dec
ret
jp
ret
dec
ss
add
outsb
mov
dec
mov
jp
fbstp
push
or
jp
mov
xor
add
add
pop
fiadds
xor
adc
push
sub
in
dec
mov
mov
js
sbb
xor
jl
sar
test
orl
or
sbbb
inc
mov
cwtl
adc
pop
add
arpl
and
roll
adc
mov
stos
daa
cld
mov
jp
add
aaa
dec
cmpsw
ss
data16
cmp
cmpsl
jle
add
or
adcb
jl
add
pop
addb
std
out
adc
xchg
inc
add
lea
sbbb
shl
ja
mov
cmp
rcll
aaa
sbb
ret
lcall
lcall
push
sub
add
fwait
adcl
cltd
ret
inc
inc
cltd
add
leave
adcb
or
pushf
lods
and
adc
push
sbb
ret
cmp
inc
arpl
and
jl
data16
pop
and
lock
inc
shrb
inc
add
jo
pop
push
shlb
add
inc
xor
push
fmull
xchg
lcall
aaa
dec
or
into
outsl
addb
cmp
je
or
dec
dec
and
repnz
add
cmp
cwtl
int
add
push
mov
push
cli
dec
mov
sbb
mov
stos
leave
ficoms
xchg
or
xor
rcr
stos
pop
mov
push
jp
aaa
add
scas
idivb
les
adc
mov
mov
push
jecxz
push
mov
loope
cmp
loope
xor
ja
add
and
lcall
jo
subl
mov
add
add
rcr
lret
out
pop
and
push
add
or
mov
pushf
sub
jno
mov
cmp
dec
adc
adcb
pop
mov
add
dec
push
out
gs
jo
sbb
xor
stos
jl
mov
mov
add
cs
mov
mov
mov
and
push
and
push
mov
mov
incb
add
inc
xor
adcb
add
push
and
mov
inc
inc
xor
push
or
sub
mov
insb
add
jge
in
insb
push
lret
pusha
add
es
adc
into
add
dec
ss
mov
movsl
add
es
and
outsb
pushl
adc
xchg
inc
jp
mov
xchg
loopne
and
xor
or
push
add
mov
and
inc
or
rorb
xor
or
and
adc
or
add
rclb
add
mov
inc
sarl
push
xchg
add
xor
dec
or
inc
mov
mov
adcb
fisubrl
loopne
hlt
push
cmc
mov
sbb
sub
add
test
sub
or
jo
fcomip
scas
adc
sbbl
and
jmp
sub
shll
cmp
push
mov
mov
and
fisubrs
add
decb
loopne
and
shlb
negb
mov
enter
sub
xchg
ljmp
sub
cmp
loopne
xorb
adc
lcall
insb
shlb
fwait
add
mov
add
ss
lahf
mov
cmpsb
push
xchg
xchg
pop
or
out
sub
rorb
xor
loope
adc
movsb
inc
sub
mov
dec
pop
add
adc
test
add
insl
adc
push
push
and
adc
mov
orb
scas
mov
add
inc
inc
sbb
push
movsb
dec
jno
fcomps
test
lock
dec
leave
adc
pop
sar
bound
outsb
in
js
lcall
add
inc
iret
push
dec
decb
ljmp
pop
in
sbb
addb
inc
xor
jge
mov
lcall
dec
add
jle
push
xchg
subl
dec
test
fcmovnu
add
fwait
push
in
or
pop
and
inc
and
pop
je
movl
ljmp
idiv
dec
mov
add
mov
leave
add
and
lods
pop
int
inc
dec
lods
call
iret
adc
adc
shlb
sbb
sbb
lahf
dec
mov
ret
mov
jb
push
repz
ds
mov
push
leave
fsubs
or
mov
loop
adc
lea
stos
mov
std
mov
add
inc
pop
add
inc
xchg
xchg
adc
pusha
push
add
sar
aas
pop
int3
push
inc
and
les
pusha
pop
aaa
fstpt
push
aad
mov
scas
nop
loopne
test
mov
push
jbe
inc
les
pop
pop
in
ret
inc
shlb
testl
sub
jae
pusha
mov
jo
std
dec
lahf
lea
jo
test
adc
das
in
hlt
scas
outsl
inc
adc
sub
adc
sbb
pop
add
fidivl
enter
fnstcw
add
sub
xor
movsl
cmp
sbbb
aam
insl
push
inc
and
add
mov
mov
orl
sub
cmpsb
jg
inc
push
dec
ss
sti
and
xchg
out
sub
into
aaa
push
lock
or
add
subl
or
addb
cmp
push
sub
and
call
mov
pop
lock
inc
add
or
pusha
adc
out
add
inc
dec
mov
or
pop
mov
movsl
adc
adc
or
rorb
leave
orb
scas
adc
add
cmp
push
pop
mov
mov
lock
xchg
scas
jecxz
gs
inc
out
inc
ret
test
cli
mov
es
sarb
xchg
add
mov
outsb
xchg
mov
push
push
data16
aad
or
add
push
fldl
push
xor
dec
rorb
push
jg
dec
xor
inc
add
cltd
push
mov
aaa
or
enter
dec
jge
aaa
mov
cmp
xor
dec
stos
les
add
dec
and
cmpsl
test
xor
mov
sub
dec
imul
or
adc
push
test
outsb
push
mov
add
add
les
data16
inc
jecxz
adc
aad
push
fadd
mov
in
mov
incl
inc
adc
clc
add
lds
inc
out
fs
fs
sub
sbb
mov
mov
push
lret
adc
mov
jo
pop
inc
inc
stc
add
sbb
notb
mov
stos
std
nop
cmovle
sub
add
add
jg
lods
lahf
and
mov
pop
push
out
shlb
fcoml
adc
mov
jo
lds
and
fbld
mov
js
test
nop
outsl
fwait
lods
mov
adcb
dec
pusha
enter
fcmovnbe
mov
jo
push
or
nop
stos
jno
or
int
mov
inc
mov
fimull
cmpsb
nop
push
push
fwait
shr
lods
and
mov
mov
ds
lock
inc
sahf
xchg
aaa
sub
and
adc
stos
arpl
pop
and
or
mov
and
sbb
inc
nop
sbb
adc
decl
xchg
and
add
mov
mov
test
arpl
scas
push
add
mov
dec
dec
lret
cli
pop
mov
dec
ljmp
add
or
jmp
rclb
subb
lret
loopne
lock
add
nop
ja
add
nop
inc
adc
mov
insb
push
xlat
rcrb
jno
test
jbe
syscall
enter
incb
aaa
imul
insb
adc
adc
or
xor
outsb
xor
fisttps
fadd
xorb
dec
sti
loope
orb
loopne
out
rolb
incl
aaa
and
adc
cwtl
sub
clc
push
cli
ljmp
add
push
sub
aas
nop
bound
sbb
adcl
popa
or
xor
add
nop
mov
lcall
dec
inc
stos
push
cmp
aaa
pop
sti
xchg
sbb
cmp
pop
mov
lods
pop
dec
stos
push
lock
adc
jbe
inc
pop
cmp
arpl
add
jl
mov
xor
mov
inc
stos
in
icebp
idiv
and
pop
push
push
fcomip
fwait
data16
jge
push
fildll
or
nop
inc
pop
aas
stos
aad
sbb
std
mov
add
add
outsl
addr16
cmp
push
jnp
and
sub
jle
adc
pusha
or
inc
sub
sbb
pop
push
add
js
dec
adc
sub
jno
push
xlat
das
xchg
push
add
enter
jge
push
xor
jl
and
pop
fmull
pop
inc
dec
adc
enter
jle
or
orb
repz
stos
and
inc
mov
fcmovb
push
mov
inc
arpl
jmp
or
sbb
mov
leave
pusha
adc
cmp
mov
outsb
mov
inc
mov
aas
enter
cmp
loopne
fwait
orb
mov
aas
lock
push
mov
add
jo
adc
ja
xchg
add
mov
stos
stos
mov
mov
pusha
scas
lock
jge
and
ret
ret
sbb
xchg
rclb
sti
icebp
ss
cmp
roll
cmp
aad
push
push
and
test
push
paddsb
sub
enter
icebp
inc
add
adc
ucomiss
or
add
and
psadbw
movhps
add
jge
or
or
mov
mov
and
stos
or
mov
sub
and
into
ss
mov
stos
inc
inc
push
adc
daa
xor
mov
outsl
and
and
ljmp
inc
sbb
lret
shlb
das
mov
jno
enter
sbb
loopne
dec
cmpsb
mov
inc
mov
mov
dec
push
inc
inc
mov
inc
lret
add
inc
or
add
mov
or
cmp
inc
add
test
lahf
mov
cli
ja
mov
xchg
pop
mov
cwtl
fwait
adc
add
orb
jle
dec
push
test
inc
sbb
dec
add
xor
mov
or
shrb
pop
push
add
dec
lock
pop
push
cmp
mov
pop
dec
or
dec
add
ss
scas
ret
arpl
rcrb
or
pusha
lcall
rcll
sub
and
pop
sar
or
shlb
inc
push
adc
sti
lret
mov
cmp
stos
adc
imul
cmp
and
cmpsb
and
and
xchg
push
cmpsl
loope
mov
mov
xlat
mov
and
add
push
or
mov
shlb
mov
sub
aad
adc
add
add
rolb
dec
in
add
push
dec
aam
shll
jp
inc
push
aaa
push
pop
jne
lds
pusha
cmp
or
xchg
push
lock
mov
outsb
jno
mov
hlt
sub
fisttps
sbb
mov
or
imul
pop
jecxz
pop
dec
and
sub
ret
and
sub
add
add
rcll
mov
les
sbb
sub
push
aam
inc
inc
test
or
or
jo
sub
or
pop
mov
mov
lods
inc
add
adc
mov
sarl
adc
jl
movsb
repnz
add
lcall
sbb
sub
push
mov
push
dec
inc
aaa
dec
add
add
inc
xchg
test
dec
add
sbb
fdiv
call
sbb
add
mov
xor
es
xchg
dec
xor
mov
cmp
add
test
pop
inc
sub
cmc
cmpl
push
mov
adcl
push
scas
dec
jbe
sbb
jo
inc
adcb
sarl
test
shl
inc
cli
jbe
enter
adcl
add
add
sub
clc
or
or
sub
cmp
push
mov
pop
enter
cmp
andb
push
shlb
dec
push
jbe
mov
mov
sub
addb
cmp
addb
sbbb
cld
add
mov
fs
add
add
inc
add
adc
test
sbb
stos
es
aam
add
iret
aaa
jle
fisubl
mov
pop
cmp
jle
sub
adc
int3
push
push
sbb
addb
js
mov
xchg
or
neg
incl
push
add
orb
fildl
subl
push
pusha
sti
lea
stos
inc
insb
push
or
push
sar
in
add
dec
add
shlb
sub
add
dec
shlb
mov
inc
ss
inc
loope
outsl
or
and
add
mov
js
cltd
mov
mov
inc
pop
adc
sarb
mov
jl
inc
inc
sbbb
ljmp
jle
xchg
clc
inc
nop
xor
adc
cmp
mov
icebp
jle
cmpl
sbb
pop
lds
jmp
scas
ret
shrb
call
inc
xchg
inc
and
jle
inc
sbbb
enter
cmpsl
jo
sub
js
call
mov
test
rolb
dec
pushf
add
test
fwait
adc
test
xor
add
jno
sbb
inc
add
mov
sub
aad
loop
movsb
loopne
les
rorl
inc
mov
mov
mov
pusha
stos
int
pop
xorb
add
or
roll
jo
loope
bound
scas
or
cmpl
cli
pop
mov
jno
mov
inc
push
test
mov
push
lock
sub
dec
adc
inc
cmpl
adc
pop
and
inc
cmp
adc
faddl
sub
jl
inc
je
or
cmp
cwtl
mov
cmpb
outsb
push
out
stos
enter
cwtl
pop
aaa
dec
push
jmp
add
aaa
inc
and
pop
pop
inc
or
inc
jbe
test
movsb
dec
dec
sub
sub
inc
aad
jmp
mov
enter
outsb
stos
cmp
inc
test
lcall
inc
jmp
aam
popa
mov
incl
sbb
pusha
dec
stos
push
lods
add
cmp
pop
cmp
jne
rolb
mov
adc
ret
cmp
add
nop
loopne
loopne
ja
ret
popa
mov
addl
mov
or
dec
shrb
fists
pusha
sub
mov
out
pusha
rolb
mov
ljmp
stos
or
sarl
and
xchg
das
ret
bound
daa
mov
je
push
jg
sub
pop
mov
insl
and
shrb
sub
leave
or
out
pop
inc
sbb
ja
mov
mov
daa
test
mov
sbbb
mov
daa
or
push
inc
xchg
fistpl
aaa
fimull
pop
stos
stos
and
adc
ljmp
pusha
addl
adc
decb
or
inc
aaa
jge
dec
xor
clc
ja
mov
push
or
inc
dec
add
add
inc
inc
xor
push
pusha
sub
mov
mov
jg
mov
mov
mov
push
lds
rorl
fisubs
xchg
pop
jae
addb
filds
push
enter
xor
iret
xor
and
dec
ret
lcall
inc
pop
test
push
mov
adc
sub
cli
fcomip
mov
mov
sbb
inc
sub
xorb
test
rcrb
inc
inc
int3
pusha
cmp
loope
pusha
mov
dec
jle
inc
inc
mov
ret
bnd
mov
rolb
xor
movsb
js
sub
inc
mov
daa
inc
cmp
mov
les
shl
stos
imul
cmp
cmp
into
add
loop
mov
push
sub
mov
insb
dec
andb
ds
push
outsl
pop
movsl
mov
adc
mov
ds
loope
jmp
orb
push
mov
push
in
outsb
add
sbb
ficoms
xor
pop
jp
enter
push
push
popa
jle
dec
add
dec
or
pop
mov
js
rol
jp
das
and
dec
add
and
push
gs
or
fisubrl
ss
enter
sub
popa
add
add
bound
shrb
add
add
add
mov
add
test
add
xor
inc
ss
or
pop
in
or
adc
pop
add
inc
push
dec
and
push
ss
sbb
mov
pop
inc
add
or
leave
nop
sbb
movsl
decl
cs
test
mov
jo
stos
push
hlt
decl
push
test
inc
cli
mov
push
and
push
loope
xor
ss
xchg
xor
push
xchg
lret
add
pop
ja
orb
jl
xchg
js
enter
inc
xchg
pop
dec
lock
ljmp
push
push
inc
or
cmp
sub
adc
hlt
ret
imul
add
pop
push
pop
mov
sub
hlt
sbb
mov
add
stos
xchg
add
imul
xor
pop
pop
sub
add
mov
js
rcll
push
aaa
shl
fcoms
and
sbb
or
dec
add
jp
cmp
and
arpl
sar
xchg
add
or
scas
ss
adc
ret
mov
xor
subl
add
test
inc
rcrb
sub
add
add
jbe
sbb
mov
jge
adc
test
add
neg
je
test
insb
pushf
mov
and
mov
sub
xchg
or
mov
ret
add
aas
dec
lret
and
loop
bound
push
mov
add
and
orb
sbb
lahf
test
ss
mov
adc
pushl
cs
adc
cmpsl
inc
pshufw
adcb
shrl
push
mov
sbb
loopne
int
jmp
adc
cmp
pusha
inc
push
add
mov
mov
mov
rolb
sbb
adcb
inc
add
test
popa
adc
into
cmp
add
lcall
subb
xor
push
shlb
stos
inc
sub
xor
or
jno
pushaw
addr16
inc
repnz
add
mov
push
push
inc
es
adc
cmp
out
or
and
stos
aad
push
clc
fists
push
test
cmp
ret
jbe
push
jg
roll
push
lods
mov
push
push
xlat
iret
push
pop
sbb
aaa
pop
or
sbb
cwtl
adc
cmp
adc
add
dec
insb
hlt
int
add
jae
add
cmp
inc
add
notb
jo
ja
out
cli
ret
addr16
aaa
pop
loopne
subb
mov
jo
mov
out
push
jno
lcall
and
mov
ljmp
in
dec
stos
cmp
and
js
stos
cs
add
dec
cmp
outsl
push
xor
inc
mov
add
in
loopne
pop
clc
jg
xchg
push
push
add
push
mov
xchg
inc
jp
cmp
cmp
push
dec
aam
inc
hlt
dec
xor
push
decl
das
push
mov
shrb
jo
arpl
dec
mov
es
xorl
scas
test
xor
dec
add
mov
out
loopne
xchg
popl
jne
add
in
stos
hlt
add
inc
pushf
je
mov
sub
push
lock
pushf
inc
addl
push
enter
out
jp
andb
mov
push
cmp
filds
and
pop
dec
test
jg
cmc
add
nop
or
adc
movsl
xchg
or
loope
test
adc
or
or
add
push
lcall
fwait
or
fwait
sub
mov
mov
xchg
or
ss
je
add
adc
add
cmp
xlat
pushl
xor
push
mov
test
jnp
jnp
xor
stos
mov
mov
add
pop
je
mov
mov
cmp
inc
pop
xor
mov
inc
sub
fwait
add
mov
jp
add
adc
jo
push
mov
mov
pop
fistpll
stos
xor
or
dec
mov
inc
xor
inc
nop
add
mov
ret
xchg
mov
push
push
add
mov
jl
mov
or
in
or
add
adc
sub
shlb
add
stos
mov
and
adc
fdivr
outsl
js
int
jno
scas
stos
ja
or
nop
sub
or
nop
inc
push
cli
sub
ss
sub
sub
adc
sbbb
mov
mov
les
xor
shrb
adc
pop
fucomi
rcrb
push
push
icebp
in
xor
add
aaa
and
aaa
mov
mov
jbe
inc
mov
stos
sbb
xchg
add
or
mov
shlb
das
rclb
adc
dec
mov
out
xchg
inc
sub
ja
das
rclb
pushf
push
dec
inc
or
incl
pop
adc
dec
rolb
jo
addb
sub
cmovae
and
lods
call
aaa
pusha
jo
roll
add
test
outsb
push
lock
and
les
pop
aam
sbb
xchg
loop
sbb
xor
mov
sbb
sti
pusha
out
gs
enter
jp
xor
mov
ds
test
xor
jnp
stos
mov
sbb
jno
cmpb
fwait
into
add
dec
dec
push
fldl
jo
cli
outsl
bound
mov
inc
add
pop
mov
ljmp
aaa
aas
jp
mov
xor
js
aaa
xor
in
imul
data16
jb
pop
inc
or
loopne
data16
dec
aad
cmpsb
mov
repnz
mov
or
xor
adc
push
dec
push
mov
mov
dec
inc
or
add
inc
xchg
outsl
sbb
add
add
nop
or
add
outsl
pop
insb
incl
ds
rolb
xchg
fidivl
mov
mov
push
xchg
push
rcrb
sbb
add
pop
add
cld
sub
add
mov
mov
lock
sbb
nop
call
add
and
sub
pusha
lods
mov
out
adc
lahf
je
add
in
mov
std
incl
or
in
lcall
in
adc
sbb
fucomip
mov
pop
cmp
popa
mov
rcrb
jb
cs
lea
fbld
sub
arpl
subb
pusha
addb
in
adcb
mov
stos
sbbb
pop
inc
es
adc
decl
test
inc
sbb
call
or
in
rclb
mov
std
aas
outsl
adc
add
inc
dec
leave
loopne
jae
add
xlat
pop
or
test
ficompl
call
pushf
cmp
xor
add
pop
add
mov
filds
mov
pop
lods
in
add
lock
mov
push
nop
xorb
cmp
mov
lods
adc
scas
incl
icebp
in
hlt
cmpl
xor
outsl
mov
pushf
sbb
dec
xorb
cmp
aas
pop
sar
stos
mov
push
in
test
add
inc
aas
sbb
call
iret
aam
xchg
xchg
pop
inc
iret
add
ja
cld
aad
inc
ds
and
aaa
inc
inc
std
iret
and
cmpb
into
imulb
shrb
repnz
xchg
inc
xchg
dec
into
jmp
cli
daa
xchg
dec
fdivrl
cmp
lcall
roll
shlb
sbb
push
arpl
pop
imul
pcmpgtb
ret
rclb
ret
or
movl
test
add
pop
inc
call
int
cld
int
add
lods
shl
sub
shrb
shl
loop
js
inc
lds
ljmp
clc
pop
mov
mov
jecxz
push
aaa
cwtl
mov
sahf
inc
test
add
jp
add
fwait
bound
xchg
cmp
sbb
ds
jg
pop
adc
insb
das
rolb
les
iret
fidivl
sahf
lods
mov
arpl
outsb
xchg
mov
pusha
mov
mov
add
sub
inc
sbb
push
scas
fistpl
arpl
mov
cwtl
xor
mov
outsb
inc
insb
add
mov
out
jo
mov
lods
sub
cld
les
lods
imul
pop
imul
or
push
cmc
pop
fs
mov
sub
cmpsb
into
cld
or
jp
mov
shl
jnp
jle
mov
loop
mov
jecxz
or
inc
or
enter
mov
test
mov
mov
out
mov
int3
test
into
xor
shll
mov
imul
xorb
or
sub
test
pop
and
add
add
pop
sarb
js
out
daa
add
mov
bound
adc
shl
or
and
stos
ret
xor
popa
jns
and
mov
loop
inc
sbb
stos
cld
arpl
cli
and
mov
subb
add
call
jo
lock
loopne
add
dec
inc
jle
add
dec
mov
xchg
xchg
adcb
push
mov
loopne
orl
dec
jno
das
pop
popa
mov
add
popl
add
pop
mov
cli
push
stos
and
sbb
jo
fiadds
pop
sbb
bnd
inc
or
lods
ja
test
xchg
xlat
mov
scas
and
and
out
lcall
loopne
les
pusha
add
bound
push
mov
rolb
pop
inc
jns
pushf
orl
and
adc
incl
rolb
push
rorl
xorb
inc
add
mov
scas
sbb
sbb
mov
mov
sub
in
aas
data16
adc
lret
push
adc
push
push
adc
popa
bswap
inc
loope
and
mov
mov
push
sbb
mov
les
push
jbe
stos
adc
test
out
mov
pop
mov
imul
sub
push
rorb
inc
and
inc
dec
icebp
mov
loop
mov
dec
jp
mov
clc
mov
sbb
ror
or
jo
stos
xchg
fwait
test
pushf
je
sbb
inc
outsb
dec
and
inc
sub
inc
ret
jbe
add
jbe
cmp
out
fsubrs
mov
push
lret
jbe
inc
mov
incl
das
lock
loope
pusha
test
cmp
sbb
xchg
addb
mov
stos
incl
mov
sbb
add
pusha
add
add
rol
cltd
push
push
fisttpl
inc
cmp
inc
and
aaa
mov
adc
popf
xchg
push
adc
sbb
or
pop
adc
and
pushl
adc
add
dec
loopne
push
cmp
xchg
adc
lret
dec
dec
push
and
jecxz
add
add
push
push
loopne
bound
addr16
loop
and
adc
pop
push
add
push
pop
shrb
jno
mov
jle
inc
arpl
dec
subb
stos
cli
rcrb
jmp
sub
jg
lock
mov
bndstx
mov
or
hlt
ret
and
enter
inc
scas
fbld
or
imul
cld
ret
sarb
pop
in
lcall
push
add
popa
inc
inc
ds
inc
push
scas
add
sub
fadd
cli
bound
mov
aaa
push
cltd
nop
rcll
mov
aaa
gs
add
ss
push
mov
dec
pop
add
push
push
call
xor
ds
push
jb
mov
cli
cmp
xchg
adc
mov
decl
decl
push
aas
xor
test
or
ljmp
inc
dec
inc
push
cld
and
orb
xchg
sbb
and
add
cmp
or
dec
ljmp
mov
inc
add
cs
mov
add
sub
or
pop
inc
loop
outsb
loop
adc
push
lret
push
xorb
cmp
outsb
sbb
push
aaa
arpl
fistpl
test
dec
fidivl
outsb
xor
push
test
insb
outsl
outsl
and
addl
or
xlat
scas
les
or
inc
jbe
aas
inc
clc
sbb
sub
les
lds
pusha
add
xchg
cmp
xchg
ret
mov
jle
mov
int
mov
push
xor
outsb
ret
movsl
in
sub
aam
popl
pop
movsb
lret
add
popa
aas
xchg
push
or
mov
lds
les
aam
push
sbb
pop
cmp
mov
pop
adc
pop
ds
pop
mov
jle
or
push
push
add
jp
dec
sbb
adc
pop
adc
sub
and
fwait
js
xor
jl
push
push
mov
bound
adc
inc
addb
push
dec
andb
or
jo
call
xchg
push
rcr
adc
mov
and
dec
or
add
push
push
pop
mov
mov
jbe
sub
cmp
arpl
add
nop
and
push
inc
ss
sub
jge
xchg
icebp
and
and
nop
sub
sub
add
xor
dec
loopne
and
adc
nop
jno
movsb
push
mov
sarb
mov
add
sbb
pop
lock
or
sub
mov
aaa
push
scas
mov
xor
inc
jle
sbb
enter
ljmp
aaa
insb
jle
insl
aaa
or
out
ss
stos
sbb
addb
adc
mov
pop
ret
and
mov
dec
or
mov
call
or
ss
ret
dec
xor
dec
test
jb
loope
sub
jg
push
and
and
add
push
nop
add
xchg
inc
sbbl
addb
cmpsb
lods
jo
mov
ret
fiadds
lea
pop
dec
fsubrl
or
mulb
addb
repnz
pusha
adc
data16
lds
pop
cld
jge
int
or
mov
cmp
push
push
test
push
dec
sub
jne
add
sti
call
out
nop
sub
lods
mov
lock
inc
mov
push
enter
mov
push
out
je
data16
inc
inc
mov
loopne
and
nop
push
test
add
in
mov
add
andb
and
addb
adc
xchg
or
stos
push
push
rorb
xchg
xchg
push
mov
hlt
out
mov
and
aaa
imul
std
push
or
cmpsb
inc
and
rorb
dec
mov
bound
cwtl
stos
xor
pop
adc
ss
push
or
mov
mov
push
adc
imul
sub
and
cltd
ret
xor
add
inc
inc
push
popa
dec
loop
sub
or
cmp
aaa
dec
jecxz
fcompl
mov
mov
adc
xchg
inc
add
jg
in
add
jo
push
cmp
mov
add
add
and
inc
and
add
push
add
rep
pop
je
inc
push
into
push
mov
pop
sbb
xchg
addl
mov
inc
xor
incb
jo
addr16
addr16
movsl
clc
jg
add
aaa
push
loope
pop
inc
ret
pop
dec
mov
dec
jo
mov
jle
outsb
adc
cmp
and
push
pop
and
pop
pusha
js
xchg
mov
cmp
call
sub
stos
fstl
mov
js
and
jg
push
sbb
inc
repz
add
lcall
out
or
dec
sarb
mov
mov
jle
ret
ret
xor
xor
add
or
loopne
jg
jmp
mov
jmp
addb
xor
xor
call
dec
andb
popa
push
sbb
or
adc
ret
lock
pop
loopne
dec
dec
push
addb
mov
push
mov
mov
ljmp
dec
xor
push
adc
pop
xor
fwait
cmc
sbb
cmp
inc
jno
sbb
pop
push
pop
lock
andl
lods
add
xchg
xchg
add
pop
lret
jno
sub
add
stos
ss
or
mov
mov
mov
ss
add
lock
insl
jmp
add
inc
and
cmp
fs
roll
xor
pop
fisubrl
mov
jg
cmp
lds
sbb
sub
andb
sbb
ljmp
dec
mov
jp
inc
push
add
lcall
add
pop
mov
push
sub
popa
and
hlt
lret
or
push
cmpb
add
fistl
add
inc
inc
inc
fcomip
xor
pusha
xchg
cwtl
sbb
add
dec
aam
imul
add
fstpt
and
insl
stos
adc
arpl
loop
pop
nop
xchg
aaa
cld
cli
fildl
push
mov
cli
mov
or
mov
push
lods
aaa
push
stos
push
or
pop
daa
in
or
push
adc
nop
pusha
std
adc
out
push
or
pop
xor
push
sbb
cwtl
dec
sti
rcrl
pop
adc
test
push
sahf
add
lock
inc
push
orl
mov
das
inc
add
mov
add
dec
loop
pop
adc
fs
jo
sti
add
addr16
insb
sbb
inc
lret
push
push
mov
aaa
popa
repnz
test
inc
ret
das
adc
and
push
gs
clc
add
adc
orl
or
movsb
push
arpl
outsl
xor
sbb
dec
dec
fstpl
leave
inc
aaa
jp
stos
jmp
push
insl
inc
test
sub
add
loop
adc
cs
cwtl
inc
addb
add
es
push
loop
pop
addr16
cmpb
call
mov
popf
mov
xchg
adc
test
aaa
xchg
inc
xor
subb
sti
inc
sbb
or
mov
dec
sbb
les
jl
subb
ret
mov
ljmp
adc
sub
inc
jp
add
test
cli
enter
incl
jg
orl
inc
pop
adc
inc
and
add
inc
sbb
nop
xor
add
scas
push
xor
inc
mov
push
push
imul
sti
jge
pop
inc
add
addb
cmp
bound
xor
sbb
adc
js
sub
add
cmpsb
and
inc
mov
filds
inc
jg
decl
stos
lea
cmp
in
call
add
cmpsl
adcb
pushw
ret
sub
lcall
pop
adc
push
dec
dec
enter
addl
adc
mov
add
xchg
andl
xchg
shll
pop
adc
shl
cs
push
stos
inc
push
inc
jo
pop
icebp
push
dec
add
and
inc
js
xor
push
mov
cltd
insl
xor
mov
add
fistps
cmpsl
test
inc
sbb
out
shll
mov
aaa
loop
inc
sbb
inc
xor
add
popl
add
cmp
jae
lret
push
movsb
sub
cli
mov
xorb
adc
add
outsl
shrb
mov
addb
add
pop
add
jle
les
les
cs
mov
xor
adc
lahf
test
fisttps
orb
cmp
adc
xor
rclb
sti
pop
or
push
ret
or
pop
inc
add
mov
lods
mov
scas
fsubrs
or
add
add
test
cmp
enter
and
or
mov
adc
adc
ja
call
pop
inc
pushf
sbb
push
inc
aam
test
clc
fbstp
addb
cmp
jl
sub
add
js
pop
push
add
popa
enter
inc
rolb
push
into
xchg
mov
in
xchg
sub
adc
and
cwtl
add
mov
or
enter
add
xor
and
jg
loopne
push
xor
dec
mov
call
dec
adcl
les
lahf
loopne
pop
add
mov
ss
sbb
int
cmp
popf
sub
adc
add
adc
push
or
fmuls
or
inc
adc
sub
pop
cmp
pop
js
mov
jno
push
cs
pop
mov
icebp
or
jle
shlb
loopne
mov
loopne
push
les
add
in
and
mov
loop
xchg
faddl
xchg
pushf
std
roll
xor
or
jae
das
add
icebp
or
cmp
enter
loopne
or
push
roll
dec
or
cs
add
push
add
adc
inc
jl
popa
mov
stos
out
adc
outsb
add
add
test
clc
xchg
loop
enterw
add
loope
es
loopne
add
push
ret
bound
adc
lcall
popa
xchg
leave
sbb
and
pop
inc
sbbb
adc
add
xchg
jp
lcall
out
push
aaa
dec
rorb
int3
mov
loopne
mov
aad
rcrl
ret
clc
ja
jg
loopne
cmpb
or
stos
xchg
and
mov
dec
gs
jle
fadd
lock
jno
mov
lret
aam
mov
cmp
lds
sti
and
inc
inc
inc
loop
addr16
rolb
sbb
das
loopne
dec
adc
mov
xor
cmpb
jg
stos
xor
push
sti
stos
mov
nop
push
loop
inc
adc
push
inc
int3
push
jb
call
mov
aaa
and
jo
adc
nop
into
jmp
popa
adc
jp
adc
les
push
mov
data16
add
pop
incl
pop
sbb
test
jle
add
sarb
aaa
jg
or
jmp
mov
or
push
or
dec
inc
add
or
loope
adc
test
pusha
arpl
mov
pop
inc
repz
cmp
and
sub
pop
or
pop
push
nop
std
sub
add
xor
or
pop
or
jbe
or
sub
pushl
loopne
mov
shll
pushf
dec
mov
stos
roll
fdivp
test
add
mov
dec
cmpsb
and
pusha
or
ss
xor
test
sub
cwtl
jmp
inc
or
pop
and
dec
push
call
addb
mov
sbb
xor
pop
xor
dec
sbb
and
cmpsb
push
mov
mov
push
dec
or
and
mov
push
xor
jns
add
nop
push
sbb
ljmp
movsb
std
jg
mov
xor
push
sti
and
jge
lods
pop
or
push
fs
stos
frstor
add
push
es
sub
scas
jp
xor
push
sbb
out
mov
ljmp
mov
movb
es
nop
adc
xor
lcall
sti
lret
cmp
js
xor
enter
andb
push
pusha
mov
push
sbb
adc
add
add
pop
icebp
inc
or
push
adc
jb
std
or
mov
xchg
xor
push
adc
push
enter
call
enter
leave
mov
dec
inc
add
or
addl
pushf
adc
push
lods
adc
popa
xor
repnz
sub
addb
push
cli
loop
xor
cmpb
add
mov
or
lcall
mov
xchg
shlb
jae
pop
add
xor
orb
fnsave
hlt
push
pop
sbb
cmp
inc
jo
xor
jae
adc
or
adc
in
mov
sbb
ss
adcl
jbe
push
dec
adc
push
mov
mov
mov
dec
aad
inc
clc
sbb
icebp
adc
add
pop
xor
dec
nop
loopne
push
jle
add
push
sbb
add
dec
mov
adc
cltd
push
xor
mov
ja
div
push
nop
jl
test
leave
push
clc
stos
js
xor
test
jg
outsl
add
stos
loopne
mov
or
mov
jo
lds
adc
pusha
add
jo
stos
jecxz
jmp
call
fwait
add
mov
push
push
sbb
mov
lahf
jge
jno
data16
mov
mov
or
sbb
pusha
add
mov
lret
jp
outsb
jo
add
aas
cmp
js
push
sbb
jl
mov
idivb
clc
push
adc
ss
dec
adc
jnp
dec
ret
dec
or
mov
cmp
inc
push
or
jo,pt
ds
jo
popa
inc
jge
mov
inc
add
in
mulb
mov
rolb
stos
and
push
aas
in
mov
push
stos
push
ljmp
push
sub
cmpsl
push
ss
out
and
or
mov
popf
mov
sbb
dec
mov
xchg
push
adc
ds
add
or
inc
sbb
or
push
nop
dec
push
or
add
push
icebp
cmc
sbbb
pusha
rcrl
cli
inc
leave
mov
cmp
dec
loopne
andl
adc
mov
clc
mov
inc
fwait
lret
lar
inc
fs
or
mov
xchg
js
inc
or
imul
es
enter
test
lock
and
jl
call
mov
leave
push
pop
inc
xchg
lret
add
js
xchg
aas
movsl
inc
lock
mov
push
jo
push
push
mov
xchg
sbb
lods
mov
iret
fnsave
xchg
xorb
scas
add
icebp
sbb
pushf
and
sub
dec
rol
jg
shrl
mov
inc
sbb
test
or
andb
mov
mov
ret
add
or
test
add
addb
ds
stc
and
subb
mov
nop
fisubrs
mov
sub
iret
xor
cli
xchg
mov
adcb
inc
adc
inc
sbb
mov
push
js
xchg
add
stos
or
scas
cmp
sub
rclb
dec
push
jge
outsb
mov
rcrb
push
mov
mov
dec
pop
add
in
add
incl
add
adc
outsb
adc
push
pop
nop
xor
push
mov
in
loop
cmp
inc
adc
lods
call
jns
or
xchg
mov
out
subb
push
sub
xor
xchg
push
or
clc
add
pop
add
push
xor
mov
cmp
mov
jp
push
push
mov
data16
lock
push
aaa
inc
addb
orb
inc
lret
inc
mul
inc
cmpsb
xchg
in
es
jno
rcrb
dec
push
and
inc
aaa
pop
adc
je
or
scas
jbe
cmp
inc
lret
inc
lret
push
adc
mov
popa
push
pusha
testb
mov
sub
jg
jbe
or
and
in
rorb
inc
mov
dec
icebp
inc
pusha
rol
jne
rcll
addb
nop
adc
add
nop
adc
stos
scas
cli
fwait
add
mov
pusha
test
data16
pop
or
mov
inc
mov
loopne
stos
ja
push
scas
shrb
hlt
js
push
dec
pop
mov
rclb
imul
or
sbb
rcll
mov
int3
xchg
pop
outsl
jmp
cmp
cmp
loope
in
sbb
push
clc
mov
and
cmp
add
fwait
mov
dec
mov
cmp
cmpsb
cmp
mov
fcoms
cmp
mov
rclb
mov
sahf
jl
push
add
cmove
scas
jb
cmp
cmp
ret
cmp
les
jno
jmp
movsb
aas
in
sarl
or
aas
sub
test
rol
inc
mov
cmp
gs
stos
stos
adc
inc
or
movsb
xorb
in
inc
fwait
out
ljmp
fildll
cmp
xchg
push
aas
add
inc
add
xchg
add
lahf
fbld
add
dec
push
cmp
das
push
cmp
and
mov
jl
addr16
cmp
adc
push
jmp
int
mov
fwait
xor
test
aaa
mov
xchg
add
dec
cmpb
ja
addb
dec
jo
sub
pop
cld
mov
mov
aad
add
jle
shll
mov
les
adc
pop
and
les
hlt
arpl
shrl
inc
bound
push
mov
or
adc
je
mov
cmpsl
cmpsl
das
push
add
rcl
push
cmpsb
lods
repz
daa
dec
adc
mov
test
inc
jae
test
ret
push
ret
stos
or
add
stos
pop
or
stos
push
inc
inc
pop
stos
cmp
jle
add
cmp
mov
scas
cmp
xorb
xchg
stos
test
dec
dec
pop
shrb
mov
sub
inc
add
xlat
fs
add
shl
enter
ret
xchg
inc
push
push
push
jo
movsl
daa
les
mov
sbb
jo
adc
lahf
lret
sub
es
cmp
fildll
and
mov
ss
or
add
or
adc
int
adc
fiaddl
xor
dec
nop
inc
inc
and
dec
addb
add
lds
dec
js
lahf
aaa
add
xchg
dec
test
fiaddl
fdivr
lea
mov
xchg
subb
pop
dec
add
inc
mov
sbbl
push
ljmp
loop
xchg
mov
xorb
mov
hlt
lods
dec
or
sti
add
push
sub
enter
and
mov
mov
adc
mov
ljmp
fwait
pop
adc
xchg
and
add
xchg
das
add
stos
stos
lcall
or
adc
notl
stos
or
pop
jecxz
mov
ret
cwtl
add
inc
or
jb
add
aad
push
adc
push
mov
fnsave
adc
dec
or
rolb
outsl
push
cmp
or
dec
add
popa
or
pop
mov
mov
orb
adc
dec
xor
sbbb
xchg
cmpb
inc
sub
cmp
jmp
addl
add
loop
mov
dec
dec
js
ss
test
adc
xchg
mov
lock
or
sbb
out
clc
repnz
adc
ss
inc
add
sub
dec
clc
xchg
test
ret
xchg
mov
adc
loope
jg
add
add
push
sbb
repnz
pushf
js
add
push
dec
xor
mov
lods
pop
adc
in
add
add
mov
jb
push
xchg
ljmp
inc
ficoml
fmuls
loope
mov
push
add
stos
dec
xorb
dec
add
add
pop
inc
sub
push
je
add
or
push
mov
xchg
inc
loop
and
cmp
mov
mov
adc
mov
inc
push
add
fdivl
stos
xor
scas
mov
scas
fwait
inc
enter
test
rolb
push
push
mov
pop
and
or
inc
cli
pop
lods
and
push
and
or
fcomps
inc
xchg
lods
mov
cs
xor
hlt
roll
cmpsl
push
loopne
inc
icebp
aaa
push
cld
subl
and
jmp
lcall
and
inc
andl
inc
add
sub
lcall
cmp
and
and
push
or
or
subl
sbbb
inc
jp
xchg
cmp
add
andl
mull
or
xchg
or
and
or
push
mov
fs
imul
mov
push
inc
and
adcl
test
jo
sbb
mov
mov
cmpsb
or
loopne
add
inc
je
xchg
pop
enter
fwait
movb
pop
inc
add
push
adc
mov
add
add
inc
loopne
inc
jg
fistpll
push
pusha
mov
addb
pushl
ja
jg
dec
andb
and
add
and
subb
prefetch
in
and
mov
mov
xchg
xor
es
jns
or
ss
sub
decl
and
into
dec
loopne
adc
out
popa
adcl
subl
inc
stos
mov
sub
arpl
inc
xor
sbb
xchg
add
mov
shll
xor
inc
mov
cwtl
jp
push
xor
test
xorb
stos
mov
xchg
jae
push
push
sbb
jp
push
ret
js
icebp
leave
sbb
inc
bound
enter
sub
xor
pop
into
pop
add
mov
scas
xchg
mov
test
cs
addb
mov
outsl
and
mov
and
loopne
inc
add
dec
add
lds
mov
outsl
mov
leave
and
mov
shrb
xchg
imul
push
les
xor
push
add
mov
add
inc
xchg
js
add
and
sub
xchg
inc
jbe
push
popl
inc
push
push
shrl
loop
mov
inc
or
push
movsb
rolb
fsubl
mov
jmp
xchg
scas
add
shlb
pushf
movl
sbb
xchg
pop
lods
lcall
popa
iret
enter
or
dec
out
mov
stos
sbb
or
push
or
mov
xchg
inc
lods
and
or
adc
cmc
pop
or
into
pop
add
in
sbbb
std
and
data16
add
push
add
pop
ljmp
pop
and
popf
loopne
ret
jp
push
lret
pop
xchg
push
sbb
or
ret
adc
test
sbbb
stc
sarb
sbbl
sub
js
xor
or
push
icebp
dec
jecxz
inc
jns
jecxz
add
push
cmc
es
js
mov
xchg
incb
ret
mov
pop
clc
add
mov
add
add
push
addb
or
add
and
mov
or
outsl
and
or
jb
mov
ret
cli
das
shlb
scas
adc
xor
push
add
jl
mov
add
and
sub
ss
inc
adc
jo
jge
testb
add
mov
outsb
adc
and
add
aaa
dec
inc
jg
hlt
or
dec
xor
inc
adc
lret
push
xchg
adc
mov
pop
jg
adc
into
ja
rcrb
fisubs
add
and
addb
push
sbb
add
pushf
mov
add
or
inc
enter
adc
push
into
or
dec
hlt
jg
fwait
dec
stos
xorb
movsb
or
or
aaa
jnp
and
adc
adc
push
xchg
add
cmp
inc
lcall
push
sbb
adc
stos
xor
add
stos
adc
loopne
adc
fdivs
dec
push
pop
shrb
rclb
xchg
and
mov
mov
add
xchg
inc
sbb
jo
cs
xor
shlb
addb
cmp
dec
stos
fsubrl
add
push
movsb
adc
aas
push
fs
adc
inc
jo
mov
adc
mov
pusha
adc
inc
add
xchg
mov
jg
mov
add
loope
sub
inc
enter
dec
aam
mov
mov
das
and
js
pop
insl
jl
push
add
xor
das
add
push
fisttps
inc
mov
enter
sub
loopne
mov
fs
xchg
add
push
inc
shlb
mov
pusha
je
jg
cvtps2pd
or
imul
hlt
sub
adc
cmp
push
or
push
inc
sahf
add
and
nop
mov
fs
ss
lret
add
jp
in
incl
sbb
push
dec
leave
add
into
sbb
ficomps
inc
adc
add
add
push
jo
pusha
pop
hlt
pop
nop
sub
xor
out
test
xchg
shlb
add
mov
mov
push
mov
jb
mov
sbb
push
push
push
mov
pop
push
movb
ret
cwtl
jo
mov
push
stos
sub
inc
cmpsb
imul
add
or
push
adc
jb
add
adc
in
fs
add
add
add
es
and
and
insb
adc
inc
sub
or
pop
mov
rcrb
xor
stos
push
adc
sbb
jno
xor
das
nop
gs
mov
add
hlt
adc
filds
push
sbb
add
fildl
jb
stos
test
pop
stos
mov
mov
in
push
test
das
mov
cwtl
jo
adc
rcrb
data16
add
xchg
push
jle
add
ret
jno
enter
mov
imul
sub
es
fildll
cmp
stos
push
jb
add
outsl
xor
inc
imul
loopne
orb
dec
mov
sbb
ja
add
mov
jbe
sub
sub
sub
or
outsb
or
add
xchg
icebp
push
xchg
mov
cli
pop
and
sub
mov
add
mov
mov
dec
mov
and
mov
lea
std
mov
sti
mov
cmpsb
push
pushl
xchg
and
je
call
mov
jo
xchg
ror
iret
pop
mov
bound
divb
cmpsb
add
push
scas
xchg
rcrb
inc
adc
mov
and
xor
dec
mov
xchg
std
mov
andb
xchg
adc
jne
outsb
popa
adc
mov
ja
or
inc
shrb
icebp
data16
call
push
or
push
sub
or
cmovnp
cs
inc
cmp
jl
dec
rorl
inc
dec
or
jae
push
sub
inc
aam
xchg
push
enter
gs
mov
sub
mov
test
xorb
lock
pusha
inc
test
sbb
add
enter
dec
sub
mov
fcoml
imul
arpl
decl
or
adc
out
add
sub
sub
filds
add
mov
imul
ret
xchg
loopne
add
enter
js
add
mov
xor
push
mov
pusha
or
cwtl
into
lret
and
xor
inc
push
test
mov
cmpsb
push
add
mov
and
add
or
lock
sub
and
mov
inc
pop
shlb
std
imul
pop
or
jle
add
loopne
movsl
scas
lret
adc
add
mov
rcrb
push
enter
push
call
stos
sub
xor
icebp
pop
sub
add
pop
ret
pushl
and
xor
or
inc
sub
incl
fdivl
popa
push
pop
or
rorl
add
je
ss
mov
ss
je
mov
mov
and
pop
mov
xor
pop
add
adc
xchg
add
xchg
dec
pop
aad
cld
push
add
cmp
loopnew
add
pop
cmpsb
push
xor
xor
sub
and
aam
cs
rolb
or
pop
mov
or
add
inc
mov
and
or
inc
or
rcrl
imul
insb
cmp
pop
mov
mov
add
and
mov
adc
cmp
adc
and
sbb
cmp
fs
add
push
pusha
push
aam
push
jb
clc
push
cmp
js
xor
sbb
fsubl
xchg
xor
add
movsb
dec
adc
pop
add
stos
and
push
ds
add
fwait
ljmp
inc
push
xor
mov
push
mov
adc
pop
cmc
push
jo
std
bnd
add
lret
adcb
mov
cmpb
or
or
mov
inc
pop
adc
call
ficoml
sub
mov
jns
test
add
add
jnp
push
sahf
in
scas
xor
rolb
or
inc
dec
adc
sub
add
inc
or
sbb
sbb
or
add
or
jns
add
xor
pop
out
je
sarb
inc
add
dec
mov
sub
add
ret
sbb
adc
lret
add
sub
clc
and
bound
nop
push
mov
or
ja
mov
add
stos
jne
mov
or
jae
adcl
ljmp
sub
aam
mov
nop
stos
dec
pop
dec
or
add
js
inc
outsl
push
adcb
out
dec
addb
push
stos
cli
mov
jo
add
push
xchg
push
sbbb
pop
mov
inc
loope
jo
add
pushf
test
test
push
sbb
pop
mov
inc
and
aad
or
inc
or
dec
add
test
js
cmp
mov
arpl
inc
sahf
mov
push
jl
icebp
scas
and
ret
inc
push
stos
imul
inc
and
loop
inc
in
movb
inc
or
lds
mov
push
cmpsl
pop
test
imulb
push
inc
movsl
lea
add
add
sbb
dec
loopne
add
and
int
aaa
jge
dec
cmp
or
rcrb
ja
lcall
cmp
push
inc
sbb
adcb
test
push
insb
test
and
inc
fisubs
bound
mov
jo
jbe
adc
add
push
dec
ret
jbe
push
enter
movsl
inc
outsb
cmp
fadd
mov
inc
sbb
rol
ret
push
push
pop
lret
push
dec
in
add
test
or
dec
inc
ss
inc
test
pop
inc
push
xchg
push
push
js
or
xor
test
ret
in
add
cmovb
pusha
mov
add
adc
lcall
imul
or
sarb
dec
add
mov
inc
rcl
ror
aam
add
and
enter
cmp
lods
and
ljmp
inc
adc
lods
stos
lcall
shrl
in
push
ret
loopne
movb
push
testl
pop
dec
adc
aaa
jbe
or
or
dec
sbb
cmpb
aaa
adc
sti
add
add
and
pop
push
cmc
loope
into
inc
jb
test
outsl
hlt
inc
stos
lahf
pop
add
fisttps
sbb
xadd
xor
addr16
cmp
test
lods
cmp
dec
ljmp
sub
or
and
test
push
cmp
xor
insl
and
loope
adc
inc
inc
adc
inc
jo
jg
loopne
or
inc
sbb
leave
dec
in
and
dec
add
mov
push
dec
mov
inc
subb
loopne
into
ds
loopne
ljmp
shlb
inc
aaa
adc
cmpl
jle
sbbl
adc
jnp
es
pushf
outsl
push
mov
adc
jg
dec
cs
or
ret
or
inc
dec
rorl
cmp
add
test
loopne
addb
jle
add
dec
cmp
insl
mov
mov
ret
pusha
or
pop
or
arpl
push
and
cmp
pusha
and
add
shlb
sti
inc
mov
pop
sbb
inc
psraw
push
add
clc
test
and
es
or
idiv
aaa
fs
jl
jp
add
push
test
pop
add
mov
arpl
pop
pop
ja
mov
pop
js
xor
leave
sbb
add
and
inc
lret
pop
fiadds
adc
aaa
clc
inc
ret
sbb
xor
out
mov
xor
ds
stos
ret
cmp
addb
push
ret
clc
mov
push
sti
add
mov
in
sbb
mov
stos
lods
aaa
xchg
stos
loopne
rolb
push
dec
push
mov
sub
push
mov
gs
push
xor
or
outsl
or
cmp
aas
jle
lret
inc
aaa
add
inc
shrl
dec
or
xor
push
inc
mov
es
loopne
fists
mov
ss
addl
dec
insl
mov
je
pushl
add
loopne
inc
or
add
mov
les
and
loope
in
add
fiaddl
add
clc
mov
stos
enter
dec
fcmovu
stos
xchg
pop
xlat
sbb
mov
aaa
push
test
ret
cwtl
fiadds
or
stos
roll
cmp
fldenv
dec
cli
xchg
jb
pop
decb
dec
add
inc
in
jne
jbe
mov
and
pop
or
mov
push
jne
sub
add
lret
fs
pop
sti
push
add
decl
fs
or
jae
and
xor
sub
cs
sub
test
js
leave
mov
xchg
stos
dec
loopne
inc
dec
and
dec
xchg
add
addl
xor
add
fcmovu
and
xchg
sbb
push
and
add
imul
jecxz
mov
mov
xor
sbb
mov
push
bound
push
fsubs
sub
inc
pusha
mov
rolb
xor
nop
and
push
push
lcall
push
add
adc
inc
cld
adc
bound
subb
stos
ja
inc
cmpsb
or
sbb
enter
add
adc
sbb
ss
add
pop
xor
adc
inc
inc
adc
sub
mov
shrl
fsts
leave
sbb
ret
push
lea
cld
and
push
ja
push
and
shlb
lcall
rcrl
stos
loopne
sbb
inc
adc
add
ror
cli
dec
test
ja
adc
inc
dec
cs
or
lret
pop
mov
nop
add
mov
xor
mov
nop
add
ja
fists
mov
adc
add
movsl
outsl
pop
push
popa
mov
ss
addr16
stos
mov
call
rolb
sbb
cmovbe
cmp
adc
add
inc
push
add
fstpt
inc
push
adc
add
dec
out
mov
test
inc
shrb
cmp
jb
adc
or
lahf
push
and
mov
push
rol
loope
ss
call
xchg
and
adc
jo
enter
loope
push
loope
xchg
add
nop
mov
add
mov
push
mov
sub
test
xchg
loopne
leave
popf
out
rclb
mov
add
sbb
jo
ljmp
test
icebp
ljmp
cmp
into
or
and
imulb
outsl
add
pop
add
adc
add
sbb
push
adc
sub
push
cmp
add
xor
clc
mov
cli
add
nop
sub
or
fidivl
or
push
inc
shrb
rclb
dec
aaa
js
sbb
fldcw
lock
xor
mov
adc
add
cltd
jle
outsb
rclb
cmp
js
jle
js
adc
or
xchg
loop
pusha
cmovb
sbb
mov
inc
pushf
sub
push
lock
mov
cmp
jns
test
dec
jl
imul
push
stos
jmp
adc
fbld
cld
ret
sarb
lret
push
adc
or
pushl
addb
rclb
adcb
adc
iret
and
and
repz
outsb
adcb
mov
xchg
jp
or
pop
inc
fnstenv
insl
lods
inc
add
leave
adc
pop
mov
add
pop
push
mov
sbb
sbb
sbb
add
enter
sbb
lret
pop
push
push
push
movzbl
lock
clc
or
mov
insl
enter
lds
or
mov
push
pusha
inc
add
loop
jecxz
add
sbbl
dec
mov
ficoml
cmpb
cmp
jnp
popa
push
hlt
filds
add
xor
test
ljmp
int3
aas
or
mov
dec
loop
dec
shlb
out
les
and
push
xor
mov
xor
add
push
icebp
dec
xor
rclb
mov
push
push
cmp
aas
stos
out
outsl
xor
cmp
add
loopne
in
mov
or
xor
test
xor
adc
les
ljmp
jnp
mov
sbb
loop
sbb
aaa
dec
lret
cmpsb
cli
jg
mov
aaa
stos
add
adc
mov
cmp
xchg
inc
sub
adc
or
aam
sbb
inc
add
push
fldt
pop
adc
add
shrl
pop
xlat
loopne
les
jnp
lret
sbb
push
daa
lock
pop
popa
mov
clc
and
enter
hlt
add
push
movl
in
nop
mov
test
pop
inc
stos
push
incl
mov
insb
sbb
adc
je
mov
in
push
adc
inc
icebp
pop
into
sbb
dec
push
enter
add
jno
push
add
mov
push
ss
jo
cwtl
nop
sbb
fneni(8087
inc
cld
sbb
jae
sbb
inc
js
push
sbb
stos
jp
jbe
rorb
rcrl
xor
test
pushf
fcompl
rcrb
or
mov
mov
daa
outsb
mov
les
stos
notl
push
insl
aaa
jbe
push
sar
in
xor
inc
pushl
and
add
and
pop
inc
insb
xor
pusha
pop
fstpt
shlb
dec
jbe
mov
add
loopne
xchg
std
call
stos
mov
aaa
popa
adc
push
cmp
pop
or
shl
add
inc
sub
cmpsb
xor
and
and
repnz
ljmp
mov
adcl
pop
sbb
jns
dec
hlt
or
mov
lret
add
sbb
mov
mov
push
add
arpl
push
add
gs
add
fdivr
pop
scas
pop
adc
jb
push
or
jo
es
xchg
push
jp
andb
cmp
loope
jg
adc
lock
xor
sbb
push
dec
mov
cld
out
ds
inc
push
les
sarb
cmpsb
stos
addb
cmp
pop
sbb
test
adc
dec
adc
bound
xchg
ret
cs
loopne
sub
insb
and
pop
add
cwtl
mov
orl
mov
shlb
sbb
xor
stos
cltd
loope
push
mov
adc
mov
scas
add
aas
mov
leave
jne
sub
push
call
xor
nop
push
addl
mov
into
and
addl
adc
pop
dec
call
xchg
jnp
dec
lock
mov
xor
jge
movsb
cmpsb
xchg
or
pop
mov
xchg
and
fs
mov
mov
and
ja
push
and
push
jo
lock
popa
test
pop
les
adc
ljmp
enter
jnp
inc
pop
xorl
mov
pop
mov
or
and
ret
and
mov
or
mov
add
pop
mov
ret
add
and
mov
inc
jno
popa
xor
outsb
sbb
dec
sub
test
mov
jp
jge
testl
and
mov
mov
adc
xchg
scas
mov
pop
mov
or
or
arpl
and
inc
adc
ds
push
mov
inc
rcrb
inc
fcomps
lods
imul
stos
mov
jnp
mulb
adc
push
adc
stos
les
add
add
lret
push
xchg
subl
dec
mov
pop
adc
xor
mov
mov
cmp
sbb
xor
push
add
add
mov
mov
movsl
pop
jo
adc
test
pop
fs
out
add
enter
and
lods
add
jl
cmp
pop
inc
ds
and
daa
test
cmp
daa
cmp
lret
push
push
aam
test
jno
or
out
push
orb
adc
dec
sbb
and
adc
jle
adc
lret
sub
into
or
call
mov
inc
add
mov
ds
imul
jp
push
andl
outsb
add
adc
mov
push
inc
add
add
or
push
scas
add
dec
add
addb
fstpt
je
inc
xor
add
inc
add
gs
test
inc
shll
add
les
ja
push
sbb
add
push
mov
les
or
add
addb
cwtl
inc
dec
jno
push
xor
or
hlt
out
cmp
cs
or
adc
loope
push
add
and
and
push
stos
lods
idivb
addr16
addr16
mov
les
mov
pop
cmp
pop
push
inc
sbb
xor
aaa
mov
dec
stos
xor
subb
in
inc
fistpll
rorb
inc
and
pop
xchg
adc
mov
sub
shrl
mov
pop
adcb
push
add
jb
add
stos
add
mov
dec
cmp
and
push
lret
pop
inc
xchg
loope
jp
fmuls
mov
xchg
mov
ret
dec
jb
iret
dec
xor
ljmpw
mov
inc
adc
sub
push
test
sub
aaa
mov
jo
pusha
clc
inc
sti
dec
jle
rclb
xchg
sub
push
adc
ja
sbb
ja
sbb
pinsrw
adc
cmp
jmp
and
ss
shlb
test
cmpsb
jle
add
push
add
mov
les
push
addb
mov
mov
xor
mov
or
cmp
clc
pushf
pop
hlt
add
add
cmpsl
ss
data16
mov
aam
andl
dec
add
jp
cmp
std
sub
xor
add
sbb
fiaddl
pop
mov
aas
test
dec
inc
nop
sahf
sub
adc
sub
mov
inc
xor
cmp
mov
mov
xor
push
popa
push
fs
push
add
mov
pop
outsb
cli
out
cmp
push
stos
outsb
aad
mov
add
femms
add
sub
gs
inc
pop
sub
adc
and
in
add
mov
pushw
rol
dec
cli
lcall
addr16
mov
aam
push
shrb
leave
sub
lahf
inc
sbb
mov
mov
ret
adc
faddl
xor
cmp
xorb
loopne
cmp
adc
add
into
push
js
mov
push
push
push
xor
adc
inc
rcll
mov
mov
daa
popa
pop
push
stos
nop
cmp
add
aas
xchg
or
or
sbb
adc
dec
pop
popa
push
mov
or
nop
mov
sub
mov
idiv
in
inc
mov
inc
test
in
in
xor
insb
and
push
xchg
inc
push
mov
cld
aad
adc
and
mov
inc
movsl
ss
aaa
adc
pop
test
lret
adc
pop
arpl
adc
jns
loopne
fwait
cs
rcrl
popa
sbbb
xchg
pop
mov
pop
ss
fsubrs
lock
push
test
sub
mov
xor
add
pop
sti
aaa
pop
jle
or
int3
push
into
lcall
add
and
sub
test
sub
mov
jecxz
inc
ss
rolb
and
orb
mov
cli
sbb
pop
dec
pop
popa
mov
pop
rcrb
push
add
dec
push
test
or
jae
push
dec
test
mov
cwtl
xor
and
out
push
pop
or
add
dec
std
jmp
enter
cmp
pusha
xor
jp
and
mov
je
add
pop
cmp
push
ficompl
push
jnp
xchg
fildl
adc
dec
inc
adc
inc
loope
enter
push
lret
les
aas
xchg
cvttps2pi
adc
pop
xchg
adc
into
inc
mov
lock
loop
jae
add
adc
cltd
and
mov
fs
push
movsb
fwait
ss
data16
ret
inc
cmp
and
sahf
ret
jecxz
or
pop
orb
sub
orl
rolb
cmp
mov
add
jbe
mov
jbe
into
dec
push
inc
and
xchg
mov
and
out
pop
lock
leave
add
pusha
shlb
sub
dec
adc
test
or
decl
loopnew
push
adc
pop
mov
add
aas
inc
fiadds
in
subb
pop
sub
dec
sbb
dec
fldl
movsl
inc
jae
inc
mov
out
push
fiaddl
xorl
xchg
xchg
shlb
jbe
push
xchg
stos
jb
adc
push
dec
sub
or
add
xorl
xor
or
jge
or
xchg
dec
add
add
push
adc
dec
add
pop
mov
or
inc
adc
dec
rolb
mov
pop
dec
adc
je
push
cwtl
popf
inc
ror
xor
cmp
mov
xchg
inc
pop
addb
mov
lock
sub
inc
push
inc
sbb
add
aam
push
adc
xor
fs
sarb
shll
push
mov
xor
sbb
mov
stos
testb
sbb
adc
push
shlb
int3
adc
mov
sub
or
and
fistpll
xor
xchg
aaa
jp
jle
or
and
add
jmp
mov
and
icebp
add
xchg
addr16
in
add
mov
pop
and
jbe
xchg
adc
cmp
mov
mov
add
rolb
das
xorb
or
or
rclb
mov
jg
je
or
or
cmp
add
dec
into
clc
inc
or
push
adc
mov
add
sbbb
in
add
jl
mov
push
mov
pop
sbb
cld
rclb
xor
inc
mov
lock
mov
push
fdiv
add
add
lock
popa
push
les
inc
cmp
cmp
les
cs
dec
popf
pop
add
and
mov
cmp
inc
adcl
sbb
scas
dec
xor
and
and
xor
push
adc
and
inc
shlb
inc
sarb
fwait
decb
test
pusha
xchg
enter
insb
aam
movsb
aaa
pop
mov
leave
push
in
icebp
push
jns
push
inc
adc
outsl
clc
aam
aam
push
test
loope
inc
lods
xchg
ds
xor
inc
push
pop
add
adc
sub
nop
push
stos
inc
dec
icebp
push
stos
inc
adc
xorb
inc
add
mov
nop
dec
pop
aaa
cltd
dec
test
into
shrb
mov
xchg
les
inc
aaa
sub
dec
lret
xor
outsl
cmpsb
out
jo
sbb
jae
pop
rcrl
ds
adcl
push
mov
jnp
je
ret
mov
dec
adc
add
add
test
jno
dec
push
cmp
add
int3
or
scas
js
cld
pop
mov
cli
adc
inc
stos
pusha
push
or
scas
fwait
mov
jmp
loop
jae
jl
loopne
ljmp
mov
mov
add
xchg
in
adcl
pop
addb
add
sub
dec
push
add
je
pop
dec
adcb
dec
or
dec
shll
scas
adc
inc
xchg
ds
into
cmp
inc
dec
sbb
fs
inc
or
movsb
incb
and
leave
dec
inc
add
inc
fs
inc
add
pop
js
xor
add
push
cwtl
into
fwait
xchg
sbb
dec
fstpt
dec
cld
mov
adc
adc
cmpsl
dec
ss
inc
mov
sarb
pop
adc
push
add
inc
ret
lret
cmp
mov
sbb
std
dec
xchg
inc
pop
sbb
jle
pop
aaa
push
add
bound
add
aaa
insb
test
dec
xor
jge
cmpsl
jo
in
and
mov
shlb
jecxz
nop
sbb
dec
shl
add
mov
and
adc
loopne
loopne
adc
sub
repnz
scas
or
ja
xor
inc
mov
add
jg
or
push
mov
xor
inc
and
mov
jge
insb
and
inc
jo
inc
add
stos
es
fbld
or
adc
inc
and
ljmp
shrb
inc
lods
pop
mov
ret
les
and
adc
rcrl
adcb
mov
nop
adc
adc
add
adc
add
mov
mov
test
nop
sbb
mov
test
scas
enter
and
mov
fs
adc
mov
or
dec
insb
dec
mov
loope
mov
mov
dec
dec
into
inc
push
xor
mov
mov
or
adc
xor
pop
idiv
xchg
add
adc
loope
sub
sub
int
pop
adc
ja
add
pusha
sub
add
dec
push
mov
xor
cmp
push
mov
rcll
cld
fbld
cs
rcl
mov
lods
push
jo
scas
rorb
jo
add
add
insl
mov
je
mov
xor
mov
or
pop
or
inc
add
adc
lock
les
loope
fsubrl
jae
nop
popa
leave
inc
std
ljmp
sahf
jb
std
xchg
push
push
add
add
jp
add
lods
sub
push
push
adc
adc
adc
push
imul
call
nop
imul
or
pop
push
mov
add
incb
popa
add
mov
inc
iret
aaa
cmpb
xchg
xchg
mov
or
out
add
insl
aad
shlb
rorb
iret
pusha
or
or
jg
xchg
inc
loop
push
xor
std
in
andb
ja
inc
and
scas
test
iret
or
stos
dec
or
or
mov
ret
pop
jl
rorl
inc
inc
addb
or
hlt
adc
inc
les
nop
call
ficoml
push
mov
xchg
subb
aaa
push
inc
jbe
cmc
scas
outsb
and
push
and
or
jp
adc
mov
cmp
mov
out
mov
addb
pop
xor
shll
out
inc
cli
and
adc
and
loope
sarl
jge
mov
sbb
inc
push
add
xchg
adc
xor
mov
sbb
push
and
add
mov
cmp
jle
add
pushf
add
and
add
or
add
add
rol
clc
outsl
test
add
stos
cmp
or
rorb
outsb
cld
cmpb
addl
add
or
push
mov
sub
xchg
bound
test
fbstp
inc
push
mov
addb
shlb
mov
pop
in
shrb
stos
xor
nop
mov
mov
sbb
nop
mov
and
cld
xor
or
cmpsb
test
out
movsb
hlt
and
or
outsb
push
nop
sub
sbbl
orl
or
dec
cwtl
in
subb
loope
nop
test
and
cmp
fsubrl
add
pop
pop
out
addl
aaa
cmp
inc
push
adc
cmp
push
sub
shl
add
xlat
mov
aaa
and
xorl
mov
add
lret
mov
inc
add
fimuls
shr
add
cmp
cmc
cmp
push
ds
test
leave
inc
jg
push
insb
fcoml
add
lea
lock
push
aaa
push
into
adc
js
xor
jp
lret
jp
pusha
inc
ret
jns
xor
mov
addb
mov
mov
arpl
clc
adc
subb
hlt
add
sbb
dec
cmp
test
shrb
decl
mov
add
popf
lret
add
pop
dec
or
or
xor
lods
ja
lcall
mov
jp
xchg
add
add
or
popa
mov
or
incl
pop
dec
jns
ss
adc
mov
dec
pop
cmp
jns
inc
push
cmpsl
fimuls
cmpsb
push
aaa
stos
push
dec
leave
push
dec
mov
xchg
pusha
pop
divb
mov
pop
into
or
add
mov
andb
or
arpl
xchg
jno
or
or
or
leave
fwait
nop
sbb
mov
sub
push
sbb
loop
cltd
aaa
sbb
enter
inc
push
fisttpll
or
shrl
pop
jp
sub
or
cli
mov
imul
adc
mov
or
fwait
dec
pop
roll
push
inc
jnp
sahf
je
lret
push
add
or
js
movsb
cmp
lock
cmpb
aaa
jb
xlat
subl
inc
add
xlat
mov
push
xorb
jnp
sbb
adc
sbb
stos
fwait
hlt
add
xchg
xchg
lret
mov
push
inc
push
nop
xchg
push
adc
push
hlt
or
mov
orb
mov
add
stos
loopne
push
sub
pusha
and
les
push
mov
add
inc
add
add
add
test
dec
mov
insb
insl
xchg
mov
cld
fistpl
movsb
add
push
bound
fimuls
popa
inc
loop
shlb
sub
cmp
enter
and
aas
and
dec
ja
dec
pop
adc
xchg
inc
adcb
es
add
xor
mov
mov
add
or
mov
lret
gs
or
xorb
inc
xor
gs
loopne
inc
add
aam
in
sbb
stos
ret
sbbb
repz
popf
pusha
adc
add
adc
out
sbb
out
sub
in
into
push
adc
jp
jb
jb
fwait
orl
inc
or
rorl
std
or
scas
and
jae
xorl
pop
mov
addl
and
push
push
mov
or
add
sub
loopne
pusha
bts
and
cmp
or
add
subb
add
and
mov
in
loopne
and
push
call
fadds
aam
lods
add
fbld
mov
aaa
cmp
call
ja
mov
ret
lret
and
test
or
mov
pop
mov
inc
bound
pop
and
popa
mov
and
mulb
push
lret
pop
inc
loop
sbb
and
test
add
pusha
adc
ret
sub
pop
and
outsl
out
outsl
andl
movl
loopne
add
push
push
pushl
sbbb
dec
mov
and
adc
cmp
sarb
pop
sbb
fiadds
add
or
std
jae
inc
mov
or
and
or
pop
ss
pusha
ljmp
sbb
pusha
add
mov
inc
dec
inc
rorb
addb
add
jmp
test
adc
pop
cmp
into
inc
xchg
add
sarl
inc
xor
dec
push
adc
mov
add
jno
jno
add
adc
or
xor
inc
test
inc
xor
mov
push
adc
cmp
jg
test
jo
add
clc
add
add
inc
hlt
jg
and
sbb
and
or
or
or
and
mov
mov
pusha
mov
mov
push
loope
mov
int
mov
pop
add
dec
adc
inc
push
sbb
mov
or
pop
mov
inc
lret
push
inc
les
sub
push
loop
mov
cwtl
ret
push
lock
jno
jns
das
rcrb
test
leave
push
test
and
mov
mov
dec
adc
add
xchg
xor
adcb
lock
sub
mov
jo
sbb
rclb
push
dec
push
or
push
mov
test
movsl
add
mov
push
inc
ss
pop
pop
insb
loopne
push
add
mov
inc
subb
leave
int
popa
add
cld
andb
data16
add
lods
dec
pop
subb
mov
sar
test
icebp
and
add
dec
loop
stos
mov
add
arpl
repnz
bound
mov
fcmovu
fistps
movzbl
add
mov
adc
cld
nop
or
test
pop
leave
push
mov
sbb
pop
sarl
dec
adcb
les
push
sbb
ja
pop
jg
push
dec
mov
inc
clc
dec
loopne
inc
pusha
add
sbb
lcall
test
mov
mov
js
ret
adc
leave
dec
adc
inc
test
inc
into
add
in
sbbb
out
aad
std
pusha
push
xor
addr16
mov
mov
jle
xchg
adc
inc
add
mov
inc
aas
in
add
or
cld
mov
jb
push
pop
leave
push
mov
mov
push
div
outsl
cmp
leave
andb
dec
push
add
inc
dec
add
ljmp
mov
inc
jp
pop
leave
pop
dec
mov
sbb
and
or
fstpt
test
dec
rcll
and
sbb
xor
insb
rorb
and
jl
xchg
pusha
add
mov
or
jno
enter
xchg
or
adc
push
adc
push
mov
ja
lcall
std
push
imul
lret
push
or
mov
pusha
and
es
mov
into
or
xor
jecxz
rclb
les
or
and
sbb
and
mov
mov
dec
push
add
sub
inc
sub
bound
pop
leave
push
inc
mov
filds
mov
shll
pop
adc
push
mov
filds
inc
and
mov
jo
fdiv
call
push
mov
push
push
ret
cmpl
subb
add
aam
sbbb
fwait
es
push
jle
or
shrb
or
push
add
dec
or
scas
mov
test
imul
adc
jmp
or
dec
xor
adc
adc
adc
ret
dec
or
inc
push
sbb
add
sub
push
xor
mov
mov
xchg
test
cld
add
sbb
cmp
or
dec
insb
push
dec
and
mov
mov
mov
add
cmc
or
add
negb
loopne
in
insb
stos
cmp
inc
prefetchw
or
or
jg
xorb
or
jge
sub
or
stos
add
mov
mov
enter
lea
inc
xchg
xor
movsb
mov
pop
push
ss
fsts
ud0
push
or
or
ret
xor
mov
pop
adc
hlt
ja
call
enter
nop
enter
subb
fwait
or
mov
and
xor
test
inc
xlat
inc
xor
ret
outsb
xchg
dec
popa
loopne
clc
mov
or
test
lret
xor
enter
push
xor
push
xor
mulb
xor
pusha
loopne
das
xchg
shlb
dec
jg
leave
dec
lret
dec
lcall
xor
mov
call
js
test
jg
inc
imul
mov
mov
dec
and
shrb
push
mov
and
mov
add
ss
pop
mov
fildl
dec
inc
lods
xchg
add
adc
mov
jecxz
jecxz
dec
pushf
xchg
inc
mov
popa
xor
sub
jmp
jp
addr16
mov
inc
and
push
add
inc
mov
roll
xchg
mov
clc
dec
data16
iret
mov
movb
and
and
mov
in
lds
jg
add
and
mov
lea
cmc
dec
fdivs
stos
ror
daa
jno
xchg
inc
adc
xchg
mov
loopne
jns
aaa
pusha
enter
add
les
xor
sahf
enter
rorb
ret
out
bound
aaa
lfs
fcomip
or
inc
lret
outsb
test
push
add
xchg
push
add
icebp
mov
push
mov
imul
mov
add
inc
mov
dec
push
stos
inc
lret
and
mov
jg
icebp
mov
adc
mov
mov
lods
mov
push
jle
add
sbb
mov
stos
lret
jo
and
sbb
xchg
mov
push
hlt
pop
shr
movsb
lock
loopne
dec
xorl
rolb
lahf
add
addl
and
pusha
call
push
icebp
in
add
push
out
sbb
shlb
fwait
jbe
sti
cs
adc
adc
jl
jmp
jb
fsubs
and
push
fldcw
and
ds
adcl
ret
pop
xchg
lock
rolb
mov
stos
xorb
xchg
dec
lock
rolb
sbb
pop
add
add
push
xchg
gs
jg
nop
icebp
sbb
dec
lret
add
fistpll
xor
push
sub
mov
push
call
hlt
dec
and
mov
negb
adc
out
hlt
push
inc
mov
loop
mov
dec
mov
push
cmpsl
aaa
jns
dec
push
inc
adc
push
or
sbb
push
add
or
jl
test
jnp
and
das
popa
xor
xor
orb
fmuls
jb
test
inc
scas
or
call
add
test
and
clc
ljmp
mov
xor
adc
jo
dec
pop
pop
add
adc
loopne
xchg
jo
adc
adc
sbb
dec
add
stos
add
dec
aaa
pushf
loopne
dec
push
or
sbb
lock
or
fwait
add
es
inc
xchg
inc
daa
dec
lea
pop
loop
mov
mulb
test
jbe
push
or
xchg
aaa
or
or
insl
stos
push
push
add
ror
addb
mov
adc
inc
ljmp
add
sub
lods
ret
imul
pop
out
add
test
add
rolb
jo
hlt
sbb
or
jo
hlt
adcb
lods
rolb
mov
mov
add
jo
pop
mov
xor
test
xor
sbb
sbbb
dec
ss
lcall
and
push
inc
js
inc
ss
test
pop
mov
add
adcb
decl
push
into
push
or
scas
add
andl
gs
pop
add
outsl
fbstp
add
inc
adc
dec
inc
mov
aad
pop
pminsw
in
xchg
nop
mov
add
adc
inc
fidivrs
ret
jae
or
cmp
sub
stos
mov
movsb
pushl
and
jo
or
dec
add
sbb
mov
add
adc
push
orl
inc
idiv
out
xchg
sbb
sub
jno
and
xor
data16
lret
cmp
addb
lret
inc
test
push
jg
incl
sbb
push
push
and
stos
sub
and
mov
andl
pop
mov
lahf
fs
sti
add
mov
shr
loop
js
add
and
rol
ret
fmul
fcoms
cwtl
adc
xor
jp
or
mov
push
or
or
imulb
mov
stos
mov
add
rclb
adc
or
pusha
loopne
dec
cmp
arpl
loopne
cmp
adc
xchg
inc
jge
dec
pop
xorb
add
inc
push
into
shlb
xchg
lea
inc
or
test
adc
cmpsb
xchg
adc
mov
inc
mov
pop
lods
sahf
mov
call
push
or
outsl
test
sub
pop
mov
pop
push
sbb
lods
sbb
add
test
daa
mov
das
cmp
cmp
rclb
inc
sbb
ljmp
inc
pushf
inc
xlat
popa
add
lahf
nop
pop
fiadds
and
adc
js
inc
sbb
inc
dec
dec
incl
insl
loop
mov
sahf
dec
pop
inc
push
inc
and
adc
jbe
mov
dec
inc
add
or
addr16
or
ret
push
ret
mov
ljmp
sbb
sbb
popa
adc
adc
sub
pop
fwait
stos
jae
jnp
sbb
mov
inc
mov
pop
mov
xor
loopne
ret
dec
or
pusha
adc
adc
inc
adc
cmpsb
enter
into
cmp
sub
xor
lea
lret
push
xchg
lea
xor
call
nop
or
pusha
mov
andl
or
xchg
inc
dec
subb
adc
mov
mov
and
mov
daa
enter
repz
or
addb
mov
push
dec
adc
and
outsl
pop
popa
pop
scas
dec
int3
orb
pop
sub
jg
push
lret
andl
jnp
xor
pop
ret
sti
and
inc
ss
mov
inc
push
sbb
inc
pusha
sbb
cmp
aas
xor
add
ljmp
mov
inc
cmpsl
adc
loopne
sub
add
mov
add
xchg
and
dec
sub
add
add
push
nop
pop
cwtl
mov
xor
sbb
adc
stos
insb
lret
mov
adc
and
inc
loopne
enter
or
sub
jl
test
enter
add
aaa
xor
adc
sub
and
cmp
ss
inc
adc
rolb
xchg
xorb
mov
adc
test
push
push
pop
sub
jno
add
stos
xchg
pusha
push
mov
test
sti
fcomip
xchg
call
imul
add
jo
mov
cmp
mov
inc
inc
or
mov
mov
punpckhwd
adc
incl
pushf
and
loopne
int
add
orb
nop
xchg
movsb
mov
in
jno
or
add
inc
mov
inc
lret
sub
decl
inc
daa
ds
inc
or
or
popa
daa
mov
sarb
sbbl
shlb
add
push
fcmovu
ja
cli
lret
dec
stos
dec
sub
push
cmpsb
xor
dec
dec
or
dec
pop
ficomps
ja
sub
add
push
add
push
icebp
mov
sarb
bound
dec
and
imul
stos
cs
cmp
jo
push
insl
pop
fdivr
leave
inc
and
stos
fsubl
lock
push
pop
imul
pop
nop
xor
add
or
pop
sbb
fildl
movsb
xor
jo
test
xor
xor
cmpsb
or
das
call
clc
xchg
mov
dec
adc
and
addr16
cmpb
rclb
adc
outsl
adc
and
dec
push
add
push
add
pushl
into
adc
arpl
mov
cmp
dec
inc
add
xor
push
jp
pop
cld
dec
roll
push
add
subb
push
adc
sub
push
call
mov
shlb
or
outsl
test
or
inc
xchg
mov
jo
lock
test
rorb
test
inc
stos
js
std
sub
pushf
into
div
pop
stos
aaa
or
jo
aaa
cmp
inc
pop
and
outsb
mov
lock
icebp
inc
stos
dec
add
test
repnz
push
push
sbb
pop
xchg
mov
mov
and
loopne
push
mov
addb
xchg
sbb
jle
sub
mov
orl
bswap
rclb
insl
mov
and
and
call
mov
les
lret
add
arpl
orl
dec
incl
adc
pusha
inc
lock
int3
sbb
dec
push
dec
xor
adc
aad
push
add
sub
lods
loopne
adc
adcb
adc
ret
lock
push
nop
adc
push
add
add
xor
jge
enter
xor
adc
imulb
sbb
and
orl
mov
js
add
inc
cmpsb
adc
psrlq
testb
lds
jae
popa
sti
jb
push
inc
pop
push
bound
neg
icebp
shlb
mov
cmp
mov
stc
ret
lock
push
adc
mov
xchg
mov
mov
in
pop
dec
sbb
add
loop
jge
loopne
add
popa
stos
xor
shl
inc
lock
dec
push
out
dec
andl
and
movsb
add
subl
push
jecxz
loop
inc
mov
inc
add
aaa
inc
scas
or
pop
inc
adc
add
subb
insl
push
lahf
cld
rorb
aaa
xchg
push
nop
cmp
mov
outsb
daa
into
into
add
or
xor
mov
dec
or
shll
inc
push
adc
mov
add
push
inc
bound
clc
lea
je
addb
dec
rorb
push
mov
dec
mov
ljmp
and
mov
js
or
adc
ljmp
jl
adc
adcb
lret
enter
xor
das
adc
scas
sbb
adcb
pushf
or
push
adc
ss
es
dec
stos
jp
and
movsb
cld
rclb
mov
clc
call
add
in
xchg
cli
lret
mov
hlt
cmp
inc
inc
sub
lret
mov
add
dec
outsl
push
adc
push
xchg
adc
push
dec
add
dec
push
push
sbb
pop
inc
push
push
pop
std
fistl
adc
xorb
jl
pusha
addr16
adc
outsb
xor
lds
jo
dec
sub
jo
and
jmp
jbe
loop
and
mov
xchg
push
mov
nop
pusha
or
adc
add
lcall
adc
cmpl
push
xor
pop
add
and
fbld
inc
js
out
mov
loope
add
xor
push
shll
push
fwait
sarb
push
sbb
add
add
nop
add
ret
mov
pusha
push
xchg
stos
mov
sub
push
adc
pusha
xchg
inc
stc
movsb
pop
xlat
das
mov
xor
shll
mov
adc
adc
aam
push
add
cmpb
jno
lret
adc
shrb
je
xor
sub
daa
imul
lock
add
leave
shrl
inc
push
mov
sqrtps
shll
xchg
orb
adc
inc
popf
mov
inc
mov
popw
addr16
jge
sbb
lods
sbb
jbe
fsubrl
add
push
lahf
inc
cli
xor
mov
adc
adc
mov
iret
aaa
insl
stos
push
test
ret
mov
jns
dec
xor
aaa
or
movsb
popa
mov
scas
push
xor
add
sbb
add
call
ds
add
adc
rcrl
inc
add
cli
decl
bound
inc
add
jbe
cmpsl
push
fsts
leave
lock
pop
xchg
je
mulb
fildll
adc
fdivr
push
lea
push
in
in
lcall
push
add
sub
add
mov
pusha
push
aad
cmp
or
addr16
outsl
outsl
or
or
or
add
and
push
dec
pop
sbb
pop
mov
mov
dec
shrb
adc
xchg
dec
xlat
js
inc
and
add
les
inc
push
mov
in
dec
lea
dec
inc
sbb
shlb
mov
dec
stos
pop
adc
mov
aaa
inc
nop
in
push
nop
les
cmpb
or
add
dec
cli
mov
mov
pushl
mov
push
inc
xchg
jecxz
inc
adc
and
push
stos
cmp
subl
mov
add
mov
and
and
bnd
add
or
sahf
inc
sti
flds
add
fistps
add
push
inc
dec
fadds
and
inc
add
loopne
dec
xor
pop
pop
push
jb
imul
addl
add
test
jl
test
inc
imul
pop
dec
mov
addb
loopne
scas
fwait
adc
stos
add
push
outsb
cld
pushl
or
dec
add
or
jae
es
jo
hlt
dec
inc
dec
imul
jo
dec
andb
or
mov
mov
xchg
xchg
incb
andl
std
incl
xchg
xchg
dec
adc
push
adc
or
add
push
adcl
test
dec
out
xor
cld
cmpsb
outsl
push
push
enter
mov
cmc
mov
inc
imul
repnz
pop
push
andl
add
push
clc
adc
loopne
mov
inc
inc
xchg
dec
xor
dec
pop
sbb
or
add
add
mov
filds
push
out
out
sub
mov
call
stos
adc
add
adc
ja
jb
pusha
arpl
push
inc
pop
mov
enter
and
lds
dec
mov
loopne
insb
sahf
rcrb
sbb
jnp
inc
push
insl
clc
idivb
adc
sbbl
adc
add
and
outsb
sub
adc
add
rolb
pop
pusha
cwtl
pop
push
xor
shl
mov
and
enter
sbb
pop
decb
inc
inc
std
inc
adc
loopne
mov
test
adc
aaa
jnp
inc
mov
add
pop
xor
les
ret
add
test
and
pop
push
inc
mov
and
scas
lcall
jmp
js
xor
or
ds
adc
jnp
ret
popa
jecxz
add
add
mov
add
or
sub
pushl
test
enter
cs
sbb
xchg
rclb
add
push
dec
rclb
adc
add
ja
add
faddl
rcll
sub
jl
test
addb
add
mov
daa
enter
adc
adc
inc
inc
lea
es
jg
pop
lea
jp
arpl
and
add
jmp
push
add
push
ss
stos
das
loope
pop
inc
loopne
and
ds
inc
scas
ret
aaa
add
mov
mov
add
loopne
and
data16
dec
in
push
out
js
xchg
stos
xchg
mov
push
dec
cmpb
dec
inc
sub
and
jb
fstp
hlt
aam
and
or
pusha
adc
loopne
stos
sub
mov
loopne
mov
fcmovbe
and
inc
jbe
pusha
or
decl
rolb
xchg
sub
pushf
add
push
push
imul
test
push
and
andnps
and
mov
das
and
loopne
shrb
orl
stos
or
or
test
or
push
or
push
xchg
dec
pop
inc
and
inc
and
xchg
sbb
adc
lock
movsb
and
loope
mov
dec
adc
ja
or
imul
adc
dec
inc
outsb
out
loopne
cld
sbb
push
insb
sbb
test
ret
cmp
jne
lret
ret
jp
dec
add
inc
add
pushf
stos
xlat
movsl
pop
push
inc
pop
push
and
xor
mov
clc
adc
pop
inc
jg
xor
ret
xchg
rolb
stos
cmpsb
jmp
loopne
fadds
fs
or
test
and
dec
or
loope
cld
mov
outsb
ret
test
sahf
xchg
cmp
pop
sbb
ret
dec
mov
mov
sub
stos
pop
inc
jg
xchg
cmpb
orw
movsb
add
adc
std
adc
push
subb
dec
pop
faddl
cmpsb
pop
adc
adc
adc
xchg
xchg
add
loopne
sti
ja
push
push
xchg
les
inc
mov
mov
cmp
jl
inc
dec
lds
inc
incb
shll
rcrl
imulb
inc
mov
fildl
fdivp
inc
or
rorb
fcmovne
mov
cld
or
ss
adc
bts
cmp
cmp
aaa
push
mov
clc
mov
dec
addl
push
or
xchg
inc
sub
xor
xlat
loopne
dec
adc
test
mov
add
add
rcrb
dec
fiadds
push
or
dec
mov
push
xor
sbb
xor
test
mov
std
xor
sbb
dec
or
push
and
js
push
insb
dec
das
call
jle
mov
subb
jns
push
scas
loopne
int
outsl
pop
shlb
stos
test
mov
inc
movsb
xor
push
sbb
loopne
aas
lock
inc
or
test
and
mov
fisttpll
xchg
fisubl
cmp
and
pusha
mov
mov
inc
dec
and
addb
mov
and
jl
and
inc
inc
dec
bound
popa
add
mov
cli
xchg
stos
rolb
push
pop
addl
ljmp
mov
stos
fwait
and
mov
lret
mov
xlat
sarl
mov
add
shlb
call
inc
or
inc
mov
out
or
mov
xor
leave
fxam
adc
inc
inc
jo
xor
inc
lock
and
mov
pop
shlb
pusha
cwtl
inc
push
shll
and
fs
ud0
ja
adc
mov
and
adc
js
pop
inc
std
in
xorb
ret
add
test
into
inc
test
scas
ret
cmp
dec
sti
mov
lock
push
add
mov
sbb
sbb
pop
adc
sbb
shlb
pop
dec
insb
mov
mov
loopne
or
inc
aad
xor
dec
lea
pop
push
ds
push
les
nop
or
pop
repnz
and
adc
insl
rorl
hlt
add
jl
adc
mov
and
push
daa
sub
js
push
stos
pop
push
aam
add
fisubl
add
mov
lods
insb
push
adc
adc
lods
and
gs
fsubs
lea
inc
sarl
push
inc
sti
push
rcl
stos
push
pop
sbbb
stos
cld
icebp
push
enter
or
call
or
jecxz
add
inc
and
add
and
andb
shlb
cmpsb
inc
aaa
shl
sbbb
jno
pop
or
stos
push
repz
cmp
shlb
pop
jnp
push
cwtl
mov
roll
jl
inc
rolb
adc
pop
fwait
inc
and
pop
adc
jno
add
dec
sub
inc
sub
fistl
inc
fists
cmc
adc
rorb
cwtl
mov
xchg
push
loop
dec
cltd
hlt
jle
hlt
loopne
ss
nop
inc
out
add
cltd
fdivs
data16
inc
test
loopne
mov
push
cmp
sbb
pop
rcrb
xchg
icebp
pushl
lock
pop
jae
pop
sbb
pusha
outsl
popf
ret
inc
mov
stos
repz
adc
jnp
outsl
add
or
lea
adc
rclb
adc
dec
mov
xorl
xchg
rolb
mov
add
add
mov
aas
leave
clc
cwtl
shlb
xor
out
add
mov
movsb
or
mov
push
addl
loope
dec
outsl
mov
push
loop
xchg
mov
enter
pushl
jbe
jnp
sti
and
mov
jle
das
adc
adc
add
xchg
and
pop
mov
idivb
mov
icebp
or
xor
sti
inc
dec
mov
in
in
mov
jne
add
sti
xchg
sub
jnp
or
cs
pop
ds
mov
stos
je
cwtl
pop
insl
dec
mov
xchg
add
or
popa
adc
mov
fisubl
jmp
xor
ljmp
jp
cmp
imul
push
or
fwait
and
into
nop
ss
sti
mov
test
mov
xabort
lock
jo
inc
xor
add
adc
push
and
sbb
xchg
popa
js
mov
pop
lock
test
mov
add
mov
sti
mov
add
into
ljmp
ss
mov
nop
push
and
cld
mov
test
xchg
push
inc
mov
cmp
jnp
mov
add
xorb
add
insb
xchg
add
inc
adc
mov
and
xor
sub
mov
mov
add
adc
jnp
cs
mov
add
lret
push
pushf
and
in
push
adc
sbb
adc
sub
jae
mov
push
es
mov
adc
and
or
adc
xchg
test
in
adc
xor
stos
andb
clc
push
icebp
pop
add
sbb
loop
das
loopne
pusha
xor
mov
adc
aas
and
jg
push
and
add
mov
ss
sbb
ds
adc
mov
je
add
xor
std
dec
lock
nop
mov
dec
popa
ljmp
sub
test
mov
push
inc
jae
add
pushf
jecxz
inc
jbe
mov
and
mov
je
mov
ja
inc
xor
icebp
aas
mov
popa
popa
dec
stos
clc
and
jo
xchg
data16
inc
pusha
mov
cmp
cs
int
inc
add
and
mov
scas
inc
and
xchg
inc
sarb
or
js
cmc
add
mov
cmpsb
add
mov
mov
push
mov
dec
rclb
mov
rolb
sub
xor
adc
movb
sbb
jnp
mov
in
or
faddl
inc
add
cmp
sbb
add
sarb
add
test
and
nop
jbe
in
mov
dec
iret
sbb
add
mov
ffreep
xchg
mov
mov
push
stos
pusha
mov
les
repz
jge
or
bound
cmp
sbb
scas
cmpsl
add
add
insl
xor
sub
add
addr16
lcall
adc
test
or
sahf
inc
inc
add
adc
mov
cmp
mull
mov
mov
jp
dec
andb
jae
les
movsb
pop
push
mov
subl
cmp
data16
sbb
push
add
shrb
cmp
lcall
mov
push
stos
aam
mov
scas
adc
clc
hlt
leave
cmovbe
sbb
cld
mov
cmp
add
mov
or
mov
in
insl
xchg
inc
sbb
ljmp
or
scas
mov
add
add
and
pop
add
out
mov
ja
mov
insb
shlb
cmp
sbb
pop
fcmovnb
xorb
cmp
sbb
mov
mov
aam
dec
xorl
and
test
add
sub
xchg
pop
xor
or
hlt
movb
add
adc
rclb
adc
jb
pop
fwait
push
adc
inc
xchg
repnz
inc
or
cmp
loop
ljmp
rolb
aas
push
stos
push
addb
mov
push
sbbb
pop
mov
mov
loop
enter
lods
xchg
jle
inc
adc
arpl
or
test
mov
adc
je
mov
or
cld
dec
loopne
jle
adc
fmull
stos
xchg
aad
or
push
faddl
enter
sbb
or
adc
add
cmp
inc
sbb
and
orl
shrb
ss
shlb
js
mov
add
sub
cmp
xchg
sbb
fdivrp
adc
add
add
pop
insb
sbb
xchg
test
push
sbb
mov
xor
je
dec
shrl
and
aaa
ret
ljmp
pop
xorb
push
data16
addb
xlat
sub
mov
subb
inc
out
sbbl
mov
xor
gs
jg
and
xorb
cli
push
add
add
enter
jg
adc
push
xchg
psubb
scas
mov
loope
or
or
cs
cld
outsl
mov
mov
inc
nop
into
ja
add
adc
sahf
jne
mov
inc
cli
repz
cmp
adc
push
mov
push
add
inc
push
dec
mov
cli
or
clc
add
or
jge
or
xchg
rolb
shlb
add
test
sub
dec
and
xorb
add
push
nop
add
xchg
adc
add
subb
or
bound
hlt
xor
scas
orb
cmp
jbe
jo
rorb
stos
and
cmp
mov
mov
sub
sarl
lcall
inc
stos
mov
sbbb
adc
add
aas
repnz
in
neg
test
shl
out
add
hlt
movsb
ss
aas
inc
adc
insl
sbb
aas
ja
sbb
aas
and
test
loopne
jmp
or
shlb
sarl
decb
ljmp
pop
push
cmp
mov
inc
jl
pusha
rol
mov
stos
hlt
mov
dec
push
sbb
dec
and
ret
cmp
adc
or
mov
test
sahf
push
fwait
hlt
sbb
and
adc
ss
nop
mov
dec
jmp
mov
adc
mov
adc
add
dec
sub
lret
cld
outsl
push
lret
push
rcl
adc
movb
loopne
push
inc
pushl
into
leave
and
pusha
bound
and
jle
mov
mov
pusha
into
loop
imul
inc
in
in
lss
push
add
adc
push
sbb
xchg
movsb
adc
sbb
push
mov
addl
push
aaa
aaa
lds
sub
add
add
xchg
mov
lcall
sbb
cli
lea
pop
test
es
and
xor
ret
jns
and
adc
mov
pop
inc
inc
xor
jo
add
pop
pusha
inc
cmp
adc
adcb
fcoms
ds
fs
sahf
mov
xor
sub
inc
or
mov
sub
and
jg
adc
sar
or
sbb
and
or
loopne
call
les
or
push
sub
adc
aas
adc
loopne
sar
adc
je
sbb
adc
das
outsl
pop
lock
cld
or
icebp
inc
adc
dec
pusha
or
inc
pop
into
shr
cli
mov
out
cmp
sub
xchg
outsb
or
sbb
hlt
mov
add
pop
add
pop
imul
aaa
sbb
inc
shlb
mov
jecxz
incl
aas
subb
ds
lret
sbb
mov
push
mov
dec
fisubs
loope
sub
rcll
daa
icebp
or
or
mov
pop
outsl
pop
xchg
adc
pop
stos
mov
sbb
adc
sarl
mov
fiadds
js
testb
fisubrs
push
mov
imul
or
mov
and
adc
aaa
sbb
mov
cmpb
mov
or
inc
hlt
and
rcr
sahf
outsb
ss
xchg
or
jle
shrb
data16
or
push
adc
outsl
cmp
and
loopne
sbb
xchg
and
pop
or
push
mov
mov
pusha
sbb
mov
inc
lcall
movsl
decb
fwait
aaa
outsl
cmp
add
mov
mov
pop
dec
fstpl
add
inc
mov
push
orb
lock
add
pusha
dec
mov
push
inc
mov
sbbb
add
loope
jbe
xlat
or
dec
and
push
adc
mov
inc
sub
and
idivb
cltd
imul
pop
inc
call
into
cmp
cmp
and
and
adc
sub
jp
add
movsl
das
mov
jo
inc
bound
cmp
popa
jg
test
rclb
xchg
add
inc
pop
jne
jg
adc
dec
jo
sbb
or
sar
ljmp
inc
xchg
jl
shlb
mov
push
nop
xor
jo
pop
mov
add
lock
cld
mov
and
xor
call
js
xor
pop
or
push
leave
push
jle
leave
push
lret
push
leave
push
jl
cmc
inc
cld
lret
push
or
insb
add
mov
inc
jae
xchg
pop
or
dec
cwtl
into
sbb
mov
and
cmpsb
sub
sbb
jb
jg
lea
sbb
adc
cmp
sbb
outsb
push
fwait
or
mov
inc
add
shll
and
inc
ret
call
pop
stc
inc
nop
inc
mov
es
xor
xchg
mov
aas
decb
mov
inc
rolb
mov
push
frstor
ds
adc
jle
push
add
add
push
bound
xor
pop
roll
adc
xlat
adc
daa
les
stos
lds
xor
ljmp
loop
lock
mul
add
out
ss
sbb
sahf
dec
aaa
push
push
push
add
add
sub
stos
or
lcall
jo
cld
orl
cwtl
jo
popa
aas
subl
int
push
loopne
loop
jmp
sbb
mov
in
dec
andb
mov
push
and
test
adc
rcr
aam
lock
mov
mov
or
outsb
jge
sub
pop
stos
jg
pop
in
pusha
sub
loopne
ret
jp
jp
sbb
mov
adc
test
mov
pop
test
adc
jae
and
jg
adc
adc
or
mov
push
rolb
mov
shrb
movsb
pop
mov
xchg
leave
or
xor
jo
add
xchg
or
shll
xchg
sarb
inc
cwtl
push
inc
insl
mov
cmp
leave
inc
inc
outsl
jae
dec
xor
jnp
pusha
dec
lods
adc
inc
adcl
mov
jle
xor
inc
adc
sbb
push
cmpsl
in
adc
jl
cmp
jo
orb
or
enter
cmp
and
push
inc
incb
lock
adc
leave
inc
jg
dec
out
out
sbb
jg
xor
repnz
out
jo
adc
cmp
inc
jg
xor
fdivp
decl
jg
xor
loope
mov
xchg
sbb
jge
ss
or
nop
loope
out
mov
ja
pop
jl
sbb
jl
enter
inc
or
hlt
loopne
aaa
ret
add
add
or
xor
fldcw
andb
sahf
nop
sar
in
adc
scas
ja
add
add
loopne
push
ds
fwait
mov
push
insb
or
xor
or
lea
mov
push
jge
lret
sti
mov
cmpsl
test
mov
mov
decb
add
ja
jp
xor
sbb
sbb
jo
sub
xchg
test
int3
into
jg
movsb
add
mov
cmpsb
xor
and
xor
ss
and
sub
inc
sbb
stos
repnz
xchg
sti
daa
inc
add
ret
idivb
jle
xchg
sahf
add
mov
adc
add
addb
dec
sbb
sarb
test
adc
and
add
jg
mov
pop
rorl
adc
bound
data16
jl
and
mov
dec
fs
aam
in
fistps
rorl
adc
inc
dec
stos
xor
xor
or
add
inc
call
push
cmp
xchg
mov
mov
out
inc
stos
out
and
js
enter
and
andb
mov
aam
dec
push
cli
xchg
mov
pusha
adcb
loopne
cmpsb
dec
cwtl
mov
addb
xchg
mov
in
stos
push
cmp
push
mov
mov
push
sbb
push
pop
or
xchg
pop
or
sub
clc
lods
add
or
cmpsl
pop
pop
test
push
sub
or
ja
das
sub
inc
mov
adc
mov
jo
imul
push
adc
data16
scas
push
add
rclb
cs
les
sbb
adc
jnp
lret
test
shlb
enter
out
mov
ffreep
mov
xor
insl
mov
xor
xor
push
mov
mov
add
sub
lds
inc
adc
pushf
jle
and
push
imul
and
dec
adc
push
inc
dec
adc
cmp
push
and
popa
xchg
push
outsb
inc
inc
push
xchg
mov
out
xchg
mov
cmpb
or
lock
push
mov
push
cmpb
cld
scas
enter
sbb
xorb
aaa
pop
into
xor
inc
add
push
ret
and
adc
outsb
jecxz
mov
enter
and
jl
and
aad
and
add
ljmp
push
and
pop
lcall
sarb
jp
mov
aam
fwait
inc
repnz
xchg
adc
mov
std
pop
push
jp
mov
jo
call
push
dec
sbb
pusha
pushf
adc
das
xchg
shl
cmc
adcb
xchg
adc
add
adc
fcoms
push
add
jmp
cmp
inc
adc
dec
mov
pop
jle
lock
rolb
inc
adc
decl
test
xchg
nop
mov
mov
outsl
xchg
fdivrp
pop
inc
adc
jg
pop
xorb
cmp
adc
push
rorl
mov
push
jge
xor
mov
in
cs
je
rclb
addr16
mov
ds
out
sbb
fmuls
sub
or
dec
shr
inc
inc
mov
xorb
and
mov
push
jmp
dec
and
jae
jge
js
lock
insb
add
adc
out
jge
add
or
pop
or
ljmp
push
push
cmp
adc
or
push
cwtl
lock
fwait
jl
and
dec
mov
jg
ret
call
mov
mov
dec
rolb
addb
or
fwait
and
into
stos
mov
adc
andb
ljmp
mov
adc
lock
xor
sbb
and
enter
cld
cmp
adc
jle
lahf
aam
cmp
pop
imul
outsl
add
aas
adcb
lahf
mov
sub
xor
cmpb
or
inc
xor
sub
add
or
lea
adcl
mov
shlb
xchg
inc
inc
mov
sub
dec
pop
fisubs
shrb
xchg
call
adcb
pop
rcrb
adcb
mov
data16
and
lret
mov
call
outsb
add
add
aaa
scas
addb
inc
xor
push
rcrb
psrad
or
stos
adc
sub
and
inc
add
gs
or
repnz
rcrb
mov
cmp
adc
add
rcrb
xchg
inc
ds
jle
fstps
mov
icebp
jmp
into
xor
push
into
inc
pop
adc
jp
push
push
add
inc
popl
frstor
add
test
ss
inc
shrl
mov
jl
push
inc
dec
adc
push
rol
adc
arpl
loope
xor
clc
ss
lea
sbb
add
adcb
pushf
adc
xchg
push
inc
mov
addr16
addr16
sbb
cmp
mov
inc
push
add
loope
or
aaa
test
test
fs
inc
mov
cli
dec
xchg
pop
je
dec
into
or
cmp
andb
xor
sbb
shlb
aas
cld
mov
inc
sbb
add
inc
jbe
scas
mov
stos
idivb
into
les
mov
push
shlb
push
xor
subb
xorb
cld
sbb
and
xchg
repnz
shlb
inc
das
xchg
sbb
push
mov
movb
orl
orb
cltd
mov
ret
inc
mov
ss
dec
outsl
add
ja
pop
jno
adc
pushl
dec
dec
cmc
mov
addb
inc
dec
aaa
mov
add
inc
fisttpl
add
popf
cli
mov
sbb
push
jno
lret
push
inc
xor
or
mov
jle
dec
ret
adc
incl
into
negb
popa
and
mov
mov
mov
call
add
push
imul
jb
lahf
shl
add
xchg
filds
movsl
sub
sub
push
jge
bound
sti
add
xchg
inc
add
mov
cltd
aam
cmp
bound
or
cld
fwait
or
sti
data16
push
or
loopne
addl
int3
insl
jp
loop
push
mov
pop
push
insl
xor
or
add
or
pusha
ss
std
sbb
adc
cmpb
dec
dec
shlb
add
inc
mov
data16
add
sti
adcl
testb
mov
inc
cs
xor
push
mov
add
lcall
scas
ds
lret
aaa
jmp
inc
repnz
aaa
outsb
push
jecxz
dec
push
add
cmp
test
xor
subl
and
sbb
pop
or
mov
mov
mov
xchg
js
cli
aaa
std
push
add
push
xchg
rclb
add
inc
adc
addb
add
add
push
xchg
lock
cli
aaa
or
rolb
sbb
mov
pusha
pop
or
xor
mov
xchg
and
orl
adc
outsl
mov
out
xchg
test
sbb
inc
and
orb
xchg
xor
test
mov
int
ljmp
ja
ret
dec
rolb
push
jo
inc
punpckhbw
imulb
xor
bound
add
loope
into
cmpb
in
add
push
or
outsb
xchg
adcb
pop
loope
jg
pop
push
jo
push
ss
ja
lods
jo
rol
push
add
or
pop
xor
and
test
xchg
or
inc
cmp
loope
adc
les
jo
sub
shll
aad
adc
and
inc
testb
inc
fisubl
cli
and
arpl
add
gs
or
and
lret
mov
stos
cmpsb
push
adc
push
cmp
mov
inc
cmp
mov
add
aaa
push
ljmp
outsb
and
addb
mov
xchg
andb
adc
loopne
pop
mov
stos
dec
push
jl
inc
push
add
cli
push
and
mov
dec
movsl
push
loopne
pushf
loop
orb
decl
or
stc
movsb
xorb
adc
push
push
mov
lcall
or
shrb
ret
addr16
les
and
xchg
xchg
into
add
and
addr16
add
xchg
add
dec
cmpsb
and
add
dec
adc
add
rorb
mov
inc
sub
sbb
dec
test
and
sti
pop
xchg
add
lret
inc
stos
adc
and
pop
ss
inc
scas
xchg
js
jno
dec
inc
fsubl
push
push
xchg
ret
mov
xor
push
inc
outsl
jg
out
inc
adc
push
jo
lods
push
addb
push
inc
pop
cwtl
or
jg
adc
pop
cli
dec
lock
and
inc
pop
mov
push
add
test
cmp
push
add
push
add
jg
fisubrl
into
adc
adc
sub
roll
dec
adc
cmp
outsb
test
add
mov
dec
xor
jg
outsl
pop
lret
inc
stos
jae
xor
add
add
cmovs
das
mov
fs
data16
cmp
lock
sub
cld
add
xor
and
mov
rcll
das
mov
insl
pusha
add
mov
jg
xor
cmpsb
push
mov
dec
xchg
add
adc
mov
dec
mov
fistpl
mov
cmp
inc
bound
add
dec
and
sbb
insl
sarb
rolb
rorl
add
push
filds
stos
roll
push
aaa
bound
nop
sbb
and
sbb
dec
sbb
je
fiaddl
sub
jns
pop
aam
adc
push
enter
and
mov
addl
rcrb
stos
and
insb
mov
mov
aam
cmpsb
fsts
mov
pop
inc
and
dec
cmc
ret
add
rolb
mov
movsb
ljmp
pushf
aaa
push
and
jl
adc
mov
inc
jl
fs
ljmp
aaa
push
lea
dec
stos
fildl
mov
dec
stos
int3
addl
sub
mov
adc
stos
aaa
data16
or
ljmp
nop
inc
imul
in
and
pop
pusha
loop
jge
add
stos
and
push
shll
stos
insl
adc
mov
push
ds
or
add
add
es
ss
stos
mov
and
arpl
inc
ret
jg
sbb
adc
mov
popa
add
pop
push
aaa
insl
in
leave
insl
test
inc
cwtl
xchg
ljmp
mov
fidivl
rclb
dec
add
jbe
stos
dec
push
mov
push
insl
ja
aas
shlb
adc
in
push
insl
lods
and
add
movsl
or
dec
adc
and
jbe
add
xor
jge
outsl
decl
dec
rolb
dec
stos
mov
and
rolb
push
stos
stc
outsb
dec
int3
repnz
fcomi
mov
stos
andl
xlat
in
pop
mov
add
enter
stos
rorl
fildll
add
jg
inc
sub
setle
inc
ss
adc
dec
test
and
mov
pop
test
fcmovbe
xchg
and
xor
jnp
jle
cmpxchg
push
jg
sub
or
push
test
push
in
loopne
inc
push
dec
bound
mov
ror
dec
sbb
pop
jne
mov
mov
cmp
arpl
dec
dec
dec
jg
addr16
out
fiadds
xlat
sub
mov
inc
xor
mov
mov
test
cmp
pop
jo
pop
mov
ret
xor
stos
and
dec
add
dec
call
cmp
adc
push
adc
pop
sub
and
push
jno
inc
outsb
dec
push
rolb
fucomip
test
cmpsb
adc
dec
je
sbb
add
cld
pop
movsb
shlb
push
mov
inc
cmpsb
loopne
cmp
mov
rolb
insl
shl
ret
lahf
adcb
nop
or
adc
insb
mov
jmp
cmp
repz
add
or
mov
add
out
fdivr
in
add
add
data16
and
cmp
add
dec
nop
pushf
push
mov
mov
mov
pushf
lret
call
in
sbb
pusha
aaa
adcb
mov
mov
push
mov
pop
sahf
jno
sub
and
sbb
cwtl
fs
mov
add
pop
push
inc
mov
andb
stc
loopne
sub
dec
adc
test
fldl
mov
test
or
mov
pop
inc
out
inc
add
xor
mov
addb
mov
push
hlt
mov
xor
push
xor
iret
mov
mov
rclb
adc
arpl
dec
inc
rolb
and
addb
mov
das
inc
xor
loopne
push
push
std
push
mov
mov
mov
add
mov
inc
and
push
ss
ds
push
jb
xchg
xor
aaa
in
sahf
bound
scas
stc
jo
cwtl
pop
mov
xchg
mov
fbld
sub
fsubs
inc
data16
js
inc
fwait
add
xor
jecxz
bound
lret
adc
fbld
stos
jnp
or
sbb
push
hlt
add
and
icebp
push
jbe
inc
adc
ret
cmp
lock
fwait
ds
push
rolb
gs
outsb
stos
sub
loop
add
xor
addr16
inc
jnp
out
mov
stos
cli
xchg
add
pop
rorb
insl
fcmovu
pop
jle
add
stos
inc
push
popf
add
inc
or
ss
xchg
mov
leave
lods
rcl
gs
or
aam
loop
add
sbb
pop
mov
and
add
mov
int3
or
arpl
ljmp
or
mov
outsl
test
and
push
inc
test
pushf
pop
pop
scas
push
insb
cmp
movsb
faddl
jp
fwait
inc
lods
add
xchg
outsb
inc
add
add
dec
adc
lcall
inc
sub
icebp
aad
adc
xor
push
arpl
pop
adc
jg
push
push
ss
dec
jp
adcl
lods
mov
dec
adc
scas
add
mov
xor
sti
fwait
std
push
jbe
xor
and
inc
andl
andb
data16
mov
sarb
sbb
sbbl
dec
cmp
call
mov
adc
sbbb
mov
insb
cmp
cmp
addl
or
sahf
mov
sbb
push
pusha
cmc
sub
subb
in
mov
push
pop
sbbl
aaa
shl
pop
mov
sub
or
push
and
pushl
mov
inc
pop
xchg
sbbb
addr16
mov
test
adc
add
cli
inc
addb
adc
repz
inc
cmc
pop
bound
add
ss
les
xor
add
adc
adc
xchg
mov
push
and
mov
dec
pop
push
cmp
add
xor
inc
or
pop
dec
outsl
inc
mov
push
movlps
rsm
jns
adc
addb
cmc
fcomps
inc
inc
push
inc
add
sub
mov
adc
imul
arpl
jge
pop
int3
pop
test
push
loop
adcb
add
sti
add
mov
add
enter
cwtl
orb
orb
pop
and
add
add
rorl
jg
add
push
and
test
or
mov
mov
adcb
sub
dec
addb
mov
and
add
dec
inc
and
adc
or
dec
lods
push
xchg
movsb
xchg
mov
push
sub
jge
test
ss
or
add
push
push
insb
mov
jbe
push
push
incl
arpl
push
adcb
inc
sub
loop
mov
xchg
ret
xor
add
lcall
insb
pop
loopne
inc
sbb
push
fiadds
lret
loopne
enter
shrb
enter
mov
cwtl
nop
cmp
pusha
jbe
stos
repnz
xor
test
dec
or
or
add
xchg
add
xor
mov
xchg
cmpsb
call
mov
stos
xchg
xchg
cs
mov
and
ljmp
mov
scas
rolb
ret
loopne
lods
add
ljmp
inc
pusha
or
pop
mov
mov
stos
test
aaa
xor
cmp
pop
cmp
push
dec
int
inc
pusha
sub
dec
lock
popa
inc
dec
js
push
imul
inc
add
outsl
sub
mov
push
dec
xchg
sar
xlat
incl
mov
inc
jle
dec
push
dec
mov
push
jae
mov
outsl
fimull
pop
mov
repz
cli
fildl
sbb
mov
outsb
push
loopne
push
push
arpl
int3
jle
and
ret
call
dec
subb
mov
inc
pusha
mov
ret
dec
push
stos
mov
inc
push
scas
or
cmp
mov
mov
andl
sar
inc
lret
dec
pusha
pusha
xchg
and
testl
adc
pop
lret
dec
bound
or
std
rol
push
pusha
mov
orl
jmp
stos
int
test
mov
jmp
ss
ret
mov
ss
test
pop
add
xchg
insb
ret
cmp
xor
arpl
shr
add
pusha
adc
dec
add
sbb
outsb
xchg
mov
inc
sbb
pop
dec
add
add
add
xor
add
sbb
sbbb
adc
cmpsb
loope
or
add
popa
or
and
push
dec
fidivrl
cmp
sub
out
inc
pop
lods
pop
push
mov
iret
add
xchg
cmp
xor
cwtl
call
loopne
sub
push
adc
pop
push
loope
sub
push
push
dec
mov
mov
into
pop
pop
mov
pop
cli
jg
push
hlt
dec
add
jp
inc
rcrl
pop
shrl
push
xor
and
mov
add
fisttpl
lods
and
or
or
mov
or
pop
sahf
jg
sbb
loopne
outsb
mov
into
les
scas
cmp
incl
ret
and
push
sub
xorb
js
je
icebp
decl
ss
stos
mov
sub
add
push
or
xchg
sub
inc
cmp
push
pop
jl
rolb
inc
fiaddl
push
mov
push
daa
add
into
orb
add
or
cmp
and
xcrypt-ctr
cmpsl
sbb
std
fldt
arpl
jno
rolb
int3
xchg
lock
pop
jmp
aas
loop
push
ja
sbb
adc
adc
push
pop
call
sbb
mov
push
jo
add
adc
test
pop
dec
and
inc
cmp
push
shlb
and
lret
and
pop
dec
push
push
sbb
jno
shlb
cwtl
test
cltd
sahf
and
lea
test
mov
das
stos
xchg
mov
pop
arpl
div
and
push
add
gs
add
mov
and
push
push
mov
nop
lcall
mov
leave
fimull
arpl
mov
push
movsl
dec
add
in
outsl
adc
mov
subb
fs
aas
imul
imul
cs
dec
xor
and
xchg
sbb
and
insl
fiaddl
sub
mov
mov
jl
jo
in
cltd
cmpsl
fstps
add
mov
ds
mov
push
ds
inc
imul
add
push
testb
and
or
inc
xchg
or
addb
std
nop
adc
push
and
sub
xchg
add
jo
cmp
push
sub
out
cmpsb
mov
imul
add
mov
adc
add
lods
in
adc
mov
fisubl
in
fiadds
push
or
push
push
jecxz
test
xchg
mov
cmp
xor
xor
jbe
inc
in
call
dec
jno
scas
mov
sub
bound
sbbb
sbb
cwtl
nop
and
test
add
icebp
inc
add
sub
into
pop
push
inc
lret
adc
xchg
sbb
rcr
push
add
out
negb
inc
xor
adc
dec
jo
stos
or
inc
fstp
or
dec
adc
mov
cmpsb
lock
ud2
or
jmp
cmp
leave
call
ror
and
inc
shlb
add
nop
xchg
mov
ss
jae
call
ss
pushf
push
imul
inc
dec
inc
data16
test
adc
fwait
jbe
jg
jo
inc
in
stos
ds
add
jno
xchg
shl
and
dec
jl
inc
pop
fildl
insb
aaa
sub
call
jno
sub
inc
les
inc
or
dec
xor
push
test
enter
pop
adc
xor
adc
adc
aam
dec
outsl
rclb
loope
std
sbbb
andb
stos
pop
or
sub
cli
xchg
xor
adc
or
nop
mov
dec
add
or
loop
push
jbe
push
mov
mov
ret
loope
ja
pusha
imul
out
and
fiadds
push
not
push
loopne
dec
mov
push
cmpsb
push
jo
fs
das
xchg
sbb
call
mov
cwtl
orb
js
test
fcoml
rorb
arpl
mov
or
rolb
pop
les
shrb
test
push
add
clc
fisttpl
addb
daa
xor
adc
push
dec
jecxz
sarb
movsb
ss
mov
push
mov
pop
cmp
adc
decl
sahf
int3
lret
or
mov
test
addb
enter
mov
int
push
into
orb
sub
shrb
es
inc
les
inc
jb
adc
and
rorb
sub
mov
pop
adc
addb
call
xchg
adc
mov
fimuls
into
jg
mov
adc
js
inc
movlps
fsubr
adc
and
xor
nop
add
rcll
or
sahf
les
mov
mov
pop
pop
fmuls
push
xor
jge
add
pusha
push
jl
mov
add
cwtl
test
add
fs
cmp
mov
out
es
and
add
adc
incl
cltd
out
inc
dec
sub
aas
call
sbb
movsb
mov
add
stc
pop
lock
clc
and
add
push
mov
icebp
stos
mov
rorb
dec
dec
es
add
dec
lcall
pop
inc
dec
jae
mov
test
add
rorb
sub
test
loopne
push
nop
sbb
dec
xor
das
xor
mov
adc
adc
push
shr
cmc
fistl
stos
cmp
lahf
ss
sti
or
inc
sti
xchg
mov
inc
sbb
xor
mov
adc
xor
push
call
icebp
push
xchg
xor
adc
outsl
jo
adc
adc
adc
push
ja
sub
mov
enter
shlb
les
rcrb
fcoms
pop
test
rol
outsl
sub
rorb
mov
data16
push
and
pop
addr16
and
enter
and
dec
adc
mov
or
popf
sarb
sub
dec
lret
arpl
add
pop
add
add
inc
push
jg
push
rcll
add
inc
xchg
dec
add
faddl
out
inc
lret
pop
pop
insb
adc
shrl
mov
pop
movb
sub
test
js
xchg
xchg
push
lret
stos
and
adc
and
add
add
push
shll
fwait
and
sub
call
pusha
mov
mov
dec
es
mov
adc
sub
movsb
mov
dec
aas
mov
inc
jl
dec
loop
add
pushf
mov
nop
iret
repz
cmpb
mov
mov
pop
mov
pusha
jo
fwait
pop
pusha
add
sub
pop
mov
mov
dec
add
lret
ret
decl
aas
add
jo
dec
inc
push
dec
sbb
add
lret
and
fcmovnu
clc
push
push
enter
cli
aaa
fmull
add
mov
les
xchg
and
loop
add
jo
insl
xor
subb
ficomps
or
fadds
sbb
movsl
and
mov
out
add
xchg
add
jo
push
data16
jns
cs
inc
add
sub
pushf
mov
jbe,pn
push
xchg
mov
fmul
lahf
or
sub
lea
test
ficompl
jmp
dec
lcall
push
mov
iret
xchg
mov
mov
add
ljmp
mov
jl
add
add
adcb
decb
jo
test
ss
stos
xlat
andb
and
push
test
add
inc
adcl
add
add
mov
dec
sbb
data16
inc
mov
pusha
addb
rolb
add
push
mov
enter
stos
dec
xchg
pop
dec
inc
xor
mov
cmpsb
inc
xor
or
mov
cwtl
cmp
cmpb
inc
add
pusha
sar
add
movsb
mov
inc
xor
pop
adc
push
inc
inc
add
nop
sbb
ljmp
inc
scas
cmpsl
adc
push
add
push
jp
int3
addb
loop
jmp
jbe
add
mov
dec
lds
or
xor
jo
mov
ret
rclb
stos
mov
lock
rorb
adcb
cmc
add
enter
inc
cmp
scas
inc
mov
sbb
sub
sbb
xchg
mov
aaa
jo
cwtl
add
fildll
cmp
sahf
stos
sub
rorb
sbb
mov
pop
pop
xchg
push
outsb
cli
rcll
in
pop
sub
jae
push
and
inc
mov
scas
enter
lret
call
divb
sub
add
inc
js
mov
inc
mov
push
shrb
lret
addr16
outsl
movsb
sbb
mov
or
dec
xor
fbld
ss
dec
dec
add
mov
lock
and
inc
mov
dec
adcb
sbb
scas
and
and
push
rcrl
mov
cmpb
and
dec
mov
xchg
dec
lods
xchg
or
sub
push
adc
mov
xor
ds
and
or
mov
inc
add
mov
jno
in
add
lods
xchg
cmc
push
add
aam
push
add
hlt
lret
mov
rorb
movsb
jmp
dec
add
add
add
fwait
lock
sbb
sbbb
insb
add
jo
or
cs
subb
ss
mov
mov
fwait
cmp
pop
pop
insl
dec
xor
test
adc
movsl
or
hlt
shl
mov
ljmp
mov
gs
inc
xor
outsb
jl
stos
adc
pushf
int3
shlb
and
dec
loope
shlb
sbbb
pop
js
retw
lretw
ljmp
or
inc
inc
add
sbb
andl
sub
xor
add
mul
sbb
sbb
rorb
add
pop
sar
push
ret
mov
sbbb
mov
mov
inc
stc
and
outsl
xor
std
push
sbb
loopne
fdivs
daa
jo,pn
push
xor
cli
mov
add
sbb
jo
mov
mov
dec
loopne
mov
xchg
and
or
inc
js
roll
sbb
outsb
add
shll
add
add
cmpsb
inc
add
popa
adcb
das
es
xchg
pop
loopne
test
das
cli
out
adc
mov
dec
and
sbb
mov
cmp
fs
cmp
ds
pusha
pop
sarb
mov
adcb
movsl
inc
rcrb
add
fiaddl
popa
mov
mulb
pop
jp
aaa
lods
push
xchg
dec
cmp
push
inc
add
xchg
loopne
dec
inc
or
test
dec
inc
mov
mov
push
ss
popa
sbb
jmp
addb
out
inc
sti
mov
jecxz
pop
adc
dec
popf
test
pop
loopne
cmp
mov
popf
push
inc
clc
adc
mov
or
xchg
pop
or
mov
and
pop
pop
add
add
stos
sbb
lock
push
sub
dec
stos
daa
loopne
or
dec
bound
or
js
out
cli
mov
cmp
cmp
scas
fisttpl
cmp
addr16
bound
inc
xchg
je
inc
aas
adc
std
in
ja
popa
inc
mov
cmpb
cltd
ret
mov
xchg
jg
adc
add
loopne
loope
ret
xor
mov
and
add
addr16
sub
mov
jbe
enter
push
push
loope
lcall
stos
loop
rolb
stc
inc
add
xor
push
sub
imul
adc
lock
shrl
or
mov
rcrb
movb
je
stos
push
mov
jbe
sub
push
add
shll
mov
arpl
mov
push
andb
stos
inc
mov
clc
mov
test
pusha
mov
and
adc
add
mov
mov
aad
or
add
or
add
or
js
dec
and
aad
mov
mov
fidivs
loope
int3
and
sbb
js
add
out
adc
jb
jb
shrb
lock
clc
shrb
inc
push
ss
scas
mov
jb
ss
dec
add
sub
aas
and
shlb
nop
and
stos
cmpsb
adc
add
int3
sbb
ds
clc
pop
sbb
push
scas
pop
roll
pop
or
mov
pushf
mov
or
scas
xor
dec
bound
mov
pop
inc
add
push
stos
dec
lahf
sahf
pusha
mulb
adc
adc
sub
dec
icebp
add
add
insb
push
adc
xor
push
dec
and
hlt
fistl
xchg
push
sub
push
mov
mov
jge
mov
repz
ljmp
inc
loopne
mov
data16
incl
mov
mov
push
cmp
insl
or
lret
inc
inc
leave
inc
sub
push
add
sub
sub
cs
js
out
cmp
jle
xor
push
cwtl
push
xor
inc
test
inc
jg
add
js
and
jle
push
xchg
adc
sub
in
jp
dec
out
add
jl
xchg
cli
add
inc
add
or
and
mov
adc
sbb
pop
scas
nop
inc
adc
jg
mov
pop
or
pop
imulb
lea
mov
push
lock
jecxz
mov
dec
popa
add
sbb
mov
mov
push
lock
xor
imul
je
clc
fwait
out
mov
jp
xor
adc
je
imul
or
jle
aaa
push
adc
sub
xor
stos
add
adcb
ret
std
jge
add
sub
add
xor
stos
jnp
adc
sub
js
and
mov
mov
mov
test
push
or
pop
outsl
out
mov
dec
adc
popa
and
cli
ja
sub
mov
arpl
adc
mov
jg
outsl
out
js
fwait
xor
hlt
mov
push
dec
adc
aam
add
sbb
or
dec
cmp
pop
fdivs
pushf
popf
mov
mov
int3
sbb
inc
push
or
sub
aaa
stos
arpl
fnsave
add
or
fistps
or
inc
orl
pop
adc
add
sbb
and
and
iret
add
hlt
jo
push
add
in
push
add
loopne
dec
push
jmp
add
loopne
nop
daa
push
mov
ret
loop
xchg
or
cmpsb
nop
dec
jo
fs
lock
push
add
outsb
lds
mov
sub
and
int
push
repz
xor
xor
outsb
xchg
add
pusha
sbb
xor
cmpl
mov
sarb
imul
mov
add
mov
loopne
out
sbb
sub
jmp
push
mov
and
sbb
pop
leave
pop
add
jae
dec
mov
orl
add
and
cmp
add
nop
cld
stos
lods
sub
jo
sahf
inc
push
inc
or
jmp
popl
xchg
scas
and
adc
dec
pop
into
push
out
adc
jo
loopne
icebp
addl
daa
inc
sub
push
enter
mov
fidivrs
mov
sub
cmp
shrl
mov
xor
push
dec
cli
mov
xchg
test
push
or
adc
sbb
scas
sbb
icebp
mov
and
push
test
mov
dec
inc
xchg
mov
pop
adc
mov
add
pop
lea
pop
add
jb
mov
dec
push
or
inc
sti
jns
pop
mov
hlt
dec
pop
dec
mov
test
subb
fimull
shlb
div
sub
fcompl
or
in
adc
ret
ja
add
fadds
jle
xor
ficoml
adc
aad
cwtl
xor
fdivr
mov
pusha
sbb
push
stos
stc
jo
mov
lret
rcl
aad
pusha
inc
ja
adc
stos
xor
fcomip
repz
mov
and
cld
mov
adc
jo
lcall
daa
mov
test
push
push
rcll
pop
adc
push
add
add
xor
push
cmp
sub
dec
add
mul
sbb
jo
fwait
popa
std
mov
pusha
jp
xor
aaa
add
decl
nop
add
pop
xchg
shlb
test
les
imul
mov
jno
and
lock
out
jp
sbb
into
dec
aaa
inc
movsb
or
jmp
fisttps
ret
add
aas
rcrb
inc
rolb
cwtl
testl
test
or
add
mov
jno
xor
icebp
mov
sub
cmpsb
push
incl
inc
inc
push
nop
cmp
lds
clc
push
or
aaa
outsb
push
in
call
adc
adcb
ja
test
rorb
sub
das
out
pop
mov
cbtw
push
ud0
repnz
leave
ds
stos
arpl
or
mov
add
jo
sbb
pusha
or
dec
jo
ss
test
mov
inc
add
js
loopne
dec
sub
mov
scas
pop
or
mov
pop
cld
mov
adc
jge
lods
int
shlb
mov
dec
mov
inc
push
lret
aaa
cld
mov
push
jle
mov
xor
jg
bound
or
adc
jnp
icebp
outsl
and
rcrb
ss
je
sar
ret
mov
mov
dec
arpl
fs
push
adc
add
or
pusha
rcll
loope
and
pop
push
in
rcll
inc
cmpsb
sbb
xor
add
cmp
sbb
es
mov
add
inc
fs
add
or
inc
or
mov
lock
push
push
add
inc
lret
shll
ss
sbb
push
mov
or
nop
push
pop
push
or
outsl
push
jl
sahf
mov
test
dec
mov
inc
fdivrs
mov
xor
adc
adc
push
fimuls
clc
xchg
cwtl
out
dec
sub
cmc
push
scas
aaa
loopne
sub
or
fmuls
not
movsl
and
ss
out
sbb
or
lcall
and
dec
sbb
xor
cmp
loop
js
fwait
movsb
aas
dec
sub
adc
mov
inc
sbb
dec
mov
mov
dec
mov
add
stos
fimull
es
mov
mov
shlb
cmp
or
test
mov
lcall
xor
test
inc
lcall
pop
add
data16
ror
addb
adc
sub
xchg
add
ljmp
inc
mov
inc
ret
outsb
pushf
sub
inc
sbb
push
out
mov
adc
sub
aam
and
xor
sbb
loopne
mov
push
std
clc
lods
adc
and
mov
and
sub
and
add
xchg
or
add
shr
sbb
mov
xchg
adc
addb
cmp
adc
add
les
jp
sbbl
aaa
inc
push
andb
pop
jnp
sub
aaa
jno
pop
xchg
mov
add
cmp
or
inc
rorb
xchg
ret
add
inc
mov
outsl
pop
sbb
inc
mov
jmp
sbb
inc
sbb
jns
insb
inc
sbb
add
mov
sbb
xlat
push
lds
hlt
pop
std
add
inc
or
and
xor
jp
xor
sbb
adc
inc
xor
in
jg
lret
mov
sbb
mov
and
jl
inc
in
aaa
jns
adc
mov
imul
mov
adc
inc
push
lret
ret
pop
stos
bound
hlt
incl
jge
mov
pop
inc
inc
adc
xchg
add
sub
lret
arpl
ss
and
sbb
sub
push
sbbl
pusha
push
mov
inc
or
push
nop
mov
fwait
inc
xchg
jle
mov
add
xchg
mov
add
aaa
inc
das
rcrb
sbb
push
sbbl
insb
cli
out
sub
adc
or
cmpps
js
pop
sub
mov
add
inc
pop
sbbl
cmp
or
cmp
mov
loopne
test
inc
rorb
jle
mov
pop
mov
imul
cmpsb
inc
aam
arpl
mov
inc
mov
push
hlt
sbb
outsl
test
shll
push
test
test
test
inc
rcll
sbb
sbb
or
adc
sub
decl
loopne
popa
and
pop
ds
adc
inc
call
add
into
adc
inc
fldl
pusha
xor
pop
and
sub
ret
call
add
add
push
arpl
push
cmc
adc
xchg
iret
outsb
pop
aam
repnz
sarb
or
cltd
int3
rclb
fdivl
xchg
mov
dec
or
stos
into
aas
jbe
bound
decl
xchg
xchg
xor
test
sbb
add
cmp
inc
stos
mov
xchg
inc
addr16
shrl
test
xchg
stos
loop
daa
loopne
popa
std
sub
push
dec
aaa
jb
pushf
push
stos
or
cld
xchg
repnz
inc
dec
outsl
mov
push
outsl
addb
pop
sbb
sbb
decl
jmp
movsb
mov
xor
or
rcrb
stos
or
add
hlt
into
mov
stos
and
or
xchg
mov
fwait
push
push
jle
es
add
inc
dec
mov
sub
int
call
or
pusha
lret
sbb
rolb
push
add
outsb
push
sbb
rclb
dec
andl
cwtl
loopne
sub
and
sbb
mov
jne
pop
add
pop
sub
pusha
adcl
mov
inc
push
pop
cli
clc
pusha
jp
sub
fucom
add
sub
inc
ss
ud2
jg
inc
jo
dec
push
aaa
stos
push
jbe
inc
cwtl
rolb
push
mov
or
inc
js
cmp
inc
ret
adc
xor
or
xor
pop
inc
nop
sbb
inc
push
jnp
ljmp
add
adc
dec
adc
stos
mov
inc
inc
jo
mov
mov
mov
sbb
adc
push
mov
push
inc
outsb
add
sub
add
and
ja
adc
mov
jmp
scas
and
test
stos
push
and
pusha
dec
and
fcomip
test
pop
out
adc
arpl
test
push
pusha
pop
mov
lock
int3
jo
push
and
adc
push
mov
sbbb
cmc
loopne
add
dec
addb
movsl
mov
cmpsb
loop
add
loop
sbb
add
xor
sub
pop
inc
add
ret
cmp
loop
loope
pop
outsb
sub
ja
adc
divb
mov
mov
shlb
ja
cli
mov
cmp
add
sarb
shll
push
mov
adc
mov
test
add
cmpsl
mov
or
in
dec
popa
in
lods
xlat
xorb
pop
mov
pop
sbb
cmpb
inc
cmp
enter
adc
pop
and
push
jle
int3
aad
add
push
inc
and
push
jl
sbbb
push
hlt
imul
add
inc
stos
and
fsubl
push
jae
rcr
test
sbb
mov
dec
push
dec
push
hlt
and
dec
jo
loop
push
loopne
add
adc
test
mov
lods
or
push
push
pop
cmp
pop
or
dec
add
subb
or
push
and
mov
adc
cmp
fldt
pop
fimuls
fs
or
xchg
scas
es
and
nop
add
add
xchg
mov
or
xor
xor
ret
paddsb
add
arpl
push
outsb
outsb
add
adc
sbb
cli
add
jne,pn
stos
xor
inc
test
leave
mov
push
sub
aaa
dec
outsl
mov
mov
inc
mov
mov
mov
mov
inc
cs
pusha
pop
mov
inc
invd
jae
mov
shlb
or
mov
out
pusha
jp
lcall
bound
cmpsb
push
push
dec
or
scas
push
or
arpl
mov
pop
mov
daa
pop
ret
sbb
bound
fbld
mov
cmc
inc
movsb
or
inc
pop
inc
orb
lahf
pusha
pop
adc
and
or
out
test
inc
add
loopne
clc
sti
push
jg
sub
fstl
lock
mov
mov
or
jo
mov
clc
stos
xchg
sbb
xchg
aas
push
mov
aad
inc
cmp
add
movsb
sbb
push
nop
cmp
jge
stos
pop
or
mov
lret
inc
push
dec
sbb
fimull
inc
ret
or
mov
arpl
fs
xor
cmp
inc
mov
lcall
add
adc
add
inc
push
inc
ret
or
movsb
ja
stos
dec
inc
xor
call
mov
mov
cmp
mov
ljmp
push
sub
cmpb
mov
mov
nop
aaa
xor
pop
pop
cmp
fiadds
push
add
les
adc
ficomps
addl
sub
inc
sbb
or
adc
js
or
cmpsb
push
inc
inc
arpl
mov
loope
pop
imul
stos
js
inc
test
xor
add
mov
cmp
cmpsb
push
les
stos
mov
add
xor
inc
mov
sbb
push
pushf
bound
push
mov
mov
mov
push
jmp
loopne
stos
stos
movsb
cwtl
and
ja
sub
insb
mov
push
leave
fwait
enter
fcomps
dec
add
test
pop
std
icebp
fbld
adc
loopne
push
sub
jne
push
popaw
mov
sbb
call
pusha
cli
push
andb
out
xchg
xchg
adc
icebp
jo
cwtl
lcall
sbb
inc
pop
into
inc
or
mov
xchg
enter
fidivrl
incb
cmpsb
test
call
cwtl
jo
adc
xor
mov
rcrb
push
jo
into
fadds
lcall
push
xor
xchg
add
add
sub
sbb
fs
or
adc
in
ljmp
push
sbb
pop
add
push
add
dec
aaa
push
das
clc
stos
inc
out
add
mov
push
inc
pop
loope
decl
jmp
inc
xchg
rcll
mov
mov
nop
or
sub
pop
xor
add
and
or
fimuls
sub
sbb
test
xchg
fdivrp
sbb
cld
cmp
cs
or
fs
add
pop
adc
xchg
ljmp
mov
jo
mov
add
inc
decl
mov
gs
jg
shrb
pop
jae
adc
or
test
pop
and
je
push
and
cwtl
adc
add
stos
add
mov
enter
lods
add
adc
fwait
test
orl
rcll
cli
xchg
sub
mov
mov
mov
mov
add
cmp
ret
jl
mov
lock
stos
mov
pop
sbb
insl
jo
push
push
orb
adc
or
jg
ds
mov
push
jl
ficompl
and
push
popa
add
jne
sbb
aad
adc
mov
adc
and
cld
or
pop
call
es
into
test
jmp
cli
shll
mov
dec
enter
jmp
loopne
inc
or
ss
mov
fcmovbe
mov
jl
and
or
xor
cmp
pop
sarl
stos
popf
movsl
pusha
dec
pop
shr
dec
stos
sahf
push
test
les
sbb
cmp
pop
test
enter
add
jecxz
add
add
jne
clc
add
fs
movsl
ja
push
es
xor
popa
pop
cld
movsl
push
pop
out
add
test
lods
inc
fisttpll
and
std
lock
xchg
fisubrs
push
stos
add
or
adc
sbb
mov
mov
insl
adc
stos
xchg
test
mov
add
aam
add
push
add
or
aam
je
xchg
xchg
add
xchg
jl
mov
jae
sldt
pop
stos
mov
push
rcll
pop
xor
inc
stos
mov
cmpb
bound
loop,pt
inc
sub
dec
call
pop
adc
jnp
adc
push
sub
or
dec
adc
cmpsl
lock
out
lock
adcb
mov
mov
adcl
pushf
sbb
mov
icebp
or
lcall
push
ja
imul
outsl
js
or
mov
mov
cmp
mov
or
add
insb
enter
jl
or
add
adc
ss
add
lcall
push
lret
pop
sub
sbb
fcoms
push
push
mov
add
sub
rcrb
mov
add
add
add
pop
pop
add
aaa
mov
dec
add
pop
add
out
clc
push
jo
lret
add
mov
xor
xchg
sbb
add
popa
fwait
sbb
sbb
fcmovnbe
adcb
stos
inc
mov
and
into
lds
ds
hlt
push
push
ds
mov
mov
mov
loope
push
push
sbb
pop
adcb
pop
enter
lret
fs
mov
or
sub
arpl
adc
pop
idivl
jnp
cmpsl
adcb
lret
mov
pop
cli
subb
enter
xorb
push
ss
xor
loop
add
clc
mov
xor
or
addb
cs
mov
mov
call
xor
les
mov
in
loopne
dec
int3
dec
adcb
adc
clc
aas
push
cld
add
stos
mov
lcall
or
jnp
clc
inc
sbb
into
or
add
or
clc
xor
add
imul
movsl
and
dec
and
push
adc
mov
sub
xor
mov
sbb
add
jnp
add
mov
outsl
mov
inc
inc
add
sub
mov
jb
mov
mov
or
aam
jbe
inc
pop
and
adc
andb
sub
popf
cli
pop
stos
aaa
inc
movsb
push
stos
enter
dec
add
test
fidivrl
adc
and
and
cmp
add
cmp
aaa
or
rorb
add
jle
inc
adc
push
rorb
mov
push
cmpb
add
adc
fwait
or
add
cwtl
mov
mov
jo
movb
xor
and
jp
pop
add
xor
pop
lods
add
push
pop
mov
pusha
out
jb
pop
stos
gs
rcrb
in
push
ret
inc
cmp
inc
rorl
inc
sub
mov
hlt
call
mov
mov
sbb
add
loope
inc
adc
lock
inc
ret
inc
js
movsb
add
rolb
push
inc
push
dec
or
lods
addr16
nop
scas
test
mov
or
cltd
enter
and
pop
subb
jle
adc
cmp
mov
push
movb
je
subps
inc
ret
cli
je
xchg
mov
jne
rcl
inc
push
push
sbb
and
add
cmp
sub
inc
pop
nop
call
jle
test
adc
push
add
lret
mov
add
call
lcall
cmp
pop
nop
push
ds
sar
pushl
mov
dec
sub
push
and
addr16
stos
sbbb
inc
mov
mov
sbb
dec
popaw
hlt
lods
outsl
lods
add
scas
add
mov
inc
or
rcr
or
outsl
mov
popa
push
orb
push
loope
orb
aad
cwtl
mov
add
stos
fildl
sub
aaa
or
push
js
inc
add
pop
inc
cmp
sub
inc
loopne
inc
lcall
inc
adc
mov
jae
or
push
adc
push
addl
or
mov
leave
inc
and
mov
mov
pop
pusha
sub
mov
mov
jne
fdivs
mov
add
mov
nop
xchg
push
mov
test
jg
jbe
push
dec
inc
pop
stos
cli
mov
ret
mov
mov
pop
mov
xchg
movsb
push
mov
ficomps
jl
sbb
and
jbe
sub
dec
mov
in
add
cs
hlt
addb
fdivp
sarb
lock
mov
in
inc
xor
shlb
add
or
or
xlat
add
data16
xorl
out
push
pop
test
sub
jns
ret
add
mov
mov
push
add
push
and
and
pop
stos
out
mov
push
add
insb
loopne
add
lcall
test
xchg
and
jbe
pop
sub
jo
and
sti
push
dec
dec
sub
ret
out
mov
push
push
cs
xchg
fs
sbb
sub
push
sub
clc
sbb
sbb
inc
pop
jge
call
popa
push
sub
sahf
push
and
mov
nop
stos
inc
sub
addr16
test
stos
mov
and
push
loopne
push
and
out
rorb
mov
inc
in
xchg
add
adc
xor
and
pusha
scas
jp
mov
sub
add
sbb
ret
shll
inc
les
loopne
or
push
jp
add
and
push
inc
popa
adc
hlt
push
dec
scas
pop
adc
inc
mov
popa
pusha
xor
jae
inc
cltd
pop
inc
mull
cmc
pop
add
ljmp
push
and
insb
ret
pop
imul
jecxz
mov
add
cmpsb
jp
loopne
and
int3
fwait
adc
jg
or
outsb
push
or
mov
pop
cmp
adc
lods
outsl
dec
add
test
add
pop
pop
imul
add
mov
jo
das
xorb
shlb
leave
andb
dec
lea
cwtl
push
popa
push
pop
or
jbe
mov
add
mov
daa
jbe
leave
mov
jb
pushf
loopne
mov
mov
loopne
sub
sbb
fsubp
decl
and
sub
add
sbb
pop
test
jmp
into
sbb
mov
push
adc
and
hlt
sbb
mov
add
rolb
gs
lahf
fmull
dec
or
xor
or
xor
add
pop
or
jb
mov
aas
test
sbb
mov
js
sbb
dec
mov
and
inc
add
sub
nop
je
fistpll
dec
cld
popa
jnp
sbbb
xchg
mov
jae
lock
dec
or
jnp
ret
lea
push
mov
stos
icebp
lock
shrb
inc
loope
adc
inc
push
add
sub
inc
nop
add
test
sbb
inc
fwait
add
xchg
shrl
add
dec
les
test
push
or
adc
aam
push
ss
push
pop
imul
mov
or
xor
lret
loopne
push
inc
arpl
sub
aas
xor
add
push
or
jae
test
push
adc
add
rolb
pop
pop
push
sbb
push
inc
push
push
fisubl
addr16
add
sub
inc
enter
mov
add
adc
inc
inc
repz
mov
and
enter
adc
or
mov
pushf
add
imul
mov
bound
or
sbb
sbb
push
cwtl
incl
inc
leave
and
stos
pop
and
adc
add
pusha
sub
pop
sub
mov
dec
dec
movsb
scas
xorb
ror
pusha
or
mov
decl
xor
lret
push
cmpb
adc
pusha
pop
outsl
js
cmc
lock
andl
xchg
loope
call
push
enter
addb
sub
mov
out
rcrb
mov
pusha
rcll
movsl
adc
fwait
gs
and
sbb
xor
add
or
pop
dec
lock
jo
push
pop
inc
jmp
sbb
adc
dec
inc
add
push
push
mov
nop
adc
test
cwtl
fs
jo
xorb
jo
out
addl
in
ret
sbb
cmp
push
bound
jg
or
call
inc
nop
adc
xor
xor
jle
data16
jle
lock
aaa
or
or
pop
scas
jae
pop
les
jg
or
and
sbb
sub
push
sbb
stos
xlat
mov
push
incl
push
sbb
push
sbb
jp
movsb
sbb
into
add
mov
add
bound
aaa
adc
mov
inc
sbb
nop
push
nop
or
dec
stos
lock
inc
pop
rcr
imul
sub
xchg
mov
or
lcall
adc
stos
ss
push
cmp
mov
push
nop
mov
loopne
mov
mov
xor
rcrb
in
sub
movsb
inc
into
addl
cmp
or
stos
fcmovnb
push
clc
decl
mov
outsb
mov
sub
or
xor
and
xor
fists
jl
mov
or
shll
xor
stos
and
incb
addb
xor
xor
or
cwtl
mov
xor
xor
fildll
push
xor
pusha
pop
and
addb
adc
add
pop
roll
stos
pop
and
xor
sub
jle
add
int3
ret
mov
std
stos
xor
xchg
cld
sub
cwtl
pusha
jnp
cmp
xor
loope
xor
or
or
xchg
call
and
push
bound
jg
mov
lods
bound
rorb
xor
data16
push
adc
mov
pop
sub
inc
fidivs
cmpsl
or
mov
mov
aam
adc
stos
test
pop
cmc
and
lods
add
loope
jp
xor
push
test
loop
cmp
add
pop
xor
add
sbb
adc
adc
mov
mov
sub
loop
mov
cmc
dec
das
loop
cmp
test
je
cmovno
mov
jg
ss
bound
sbb
mov
add
push
dec
jb
repz
pop
sub
push
inc
pushl
and
test
push
nop
test
shlb
or
add
pop
imul
sbb
pop
pop
xor
aaa
push
jp
mov
inc
dec
mov
add
push
sbbb
and
mov
pop
jns
push
sub
jmp
dec
pusha
mov
test
add
xor
dec
into
sub
and
adc
inc
xchg
dec
inc
cmpsb
in
or
aad
pop
cwtl
inc
lret
sub
jle
jmp
sbb
dec
xchg
jo
sbb
add
push
cltd
dec
xchg
cmc
xorb
jg
aad
sub
inc
pop
js
outsb
inc
xor
fs
punpcklbw
test
loop
incl
cmpsb
test
bound
popa
cs
lock
in
clc
pop
mov
jno
nop
nop
add
shlb
ljmp
push
dec
push
cmp
mov
test
dec
adc
clc
incl
mov
nop
or
leave
rolb
xchg
sub
mov
inc
loopne
andb
bound
mov
sub
into
movsb
scas
jle
lret
add
inc
adc
inc
inc
mov
mov
cwtl
adc
jbe
mov
mov
in
je
mov
or
sbb
mov
lock
mov
rolb
lret
add
jae
dec
adc
inc
leave
je
mov
aaa
mov
jbe
loope
ret
push
sbb
test
int
insb
xchg
jp
cmp
mov
jp
sub
fisttps
dec
ss
jno
mov
adcb
les
aad
inc
pushf
cwtl
loope
add
adc
sbb
enter
je
ret
pop
mov
sahf
dec
mov
mov
mov
add
mov
add
jp
xor
ret
add
sub
mov
mov
je
test
scas
sub
cld
push
adc
xor
sbb
add
int3
lret
add
jle
add
jne
aaa
sbb
enter
stos
fwait
xor
jle
scas
int3
mov
jno
bound
xchg
adc
mov
mov
and
orb
push
xorl
push
or
outsb
fwait
inc
mov
sub
push
inc
add
mov
push
dec
dec
inc
inc
testb
push
and
pusha
popa
cld
bound
lret
in
sub
out
xchg
or
stos
test
xorb
inc
sbbb
and
dec
dec
cmp
push
fldl
shlb
lcall
add
lcall
or
es
cmp
sub
ret
adcl
add
sahf
push
movsb
mov
fwait
xor
subl
add
inc
popa
push
movsb
jle
inc
cs
test
pop
mov
out
or
add
xchg
ds
lret
xchg
mov
jmp
add
push
lds
cmp
xchg
adc
xor
sbb
sbb
push
sub
clc
inc
roll
sub
or
sbb
loope
xor
scas
sbb
mov
addl
ret
add
add
jmp
xor
jo
popl
add
sbb
mov
hlt
pop
and
adcb
out
xchg
sbbb
jne
or
rcrb
dec
or
inc
ljmp
sub
mov
add
ret
movsl
movsl
dec
or
mov
pop
add
mov
adc
add
stos
les
and
es
mov
sub
mov
movsb
clc
pop
ss
into
pop
lock
inc
sub
insl
cmp
push
rclb
mov
cltd
ss
or
and
adcl
cmpb
arpl
pop
inc
jmp
enter
lds
cld
adc
rorb
xor
movsl
cmpsb
xchg
inc
add
push
test
xchg
addb
mov
inc
dec
adc
aas
adc
scas
or
inc
sub
pop
fcoms
push
clc
movsb
movsb
xorb
push
lds
add
adc
push
dec
dec
decl
loopne
xorb
andb
add
push
es
add
pop
add
inc
inc
xor
mulb
or
jg
sbb
cs
daa
push
and
adc
add
mov
mov
jo
add
mov
or
sbb
je
sub
xchg
cmp
push
repz
add
js,pn
ss
notb
fbld
inc
mov
jmp
inc
rclb
stos
cmpb
dec
fdivl
push
pusha
nop
adc
outsb
mov
stos
aas
pusha
es
test
inc
add
sub
and
push
or
xchg
mov
fsubrl
mov
movsb
or
loopne
inc
pop
xor
scas
xchg
in
add
and
shlb
data16
or
mov
cs
jle
or
xor
add
ss
sub
mov
ret
fdivrp
inc
lret
mov
xchg
pusha
pop
dec
mov
fbld
mov
es
inc
inc
jge
cmp
loopne
add
push
pop
or
sub
outsl
sub
add
push
into
imul
and
sub
push
sub
jg
imul
andl
push
inc
pusha
push
or
ljmp
rcrb
and
jl
adc
mov
cli
loopne
mov
add
cli
or
scas
shll
inc
mov
jb
and
pop
push
cmpl
js
ret
sub
add
cmp
imul
cmp
add
xor
ret
fisttps
or
stos
jg
ret
pushf
adc
pusha
ljmp
and
xor
mov
aam
mov
adc
inc
xchg
inc
fimuls
lods
rorb
adc
inc
leave
bound
add
ja
or
mov
mov
sub
outsb
adc
inc
pop
rclb
pop
and
test
cwtl
mov
add
adc
push
ss
orb
dec
cli
add
inc
sahf
lea
das
ret
ret
push
mov
lcall
push
gs
mov
or
mov
sub
sbb
rclb
xchg
inc
fwait
mov
cwtl
inc
or
adc
incl
lcall
sub
dec
sarl
cmp
add
bound
push
cmp
pop
sbb
adc
bound
xchg
lock
add
xchg
cmp
mov
xchg
shrb
sub
dec
icebp
or
sbbb
sbb
dec
movsl
or
mov
xchg
mov
movsb
stos
ds
hlt
mov
xor
hlt
jg
push
flds
or
sbb
jmp
pop
sub
cmp
push
add
add
cltd
sub
cmpsb
push
dec
mov
inc
stos
in
popa
and
mov
outsb
gs
loop
adc
lock
push
jg
xor
cmp
test
adc
sbb
mov
push
cmp
inc
std
fbld
xor
enter
ret
loop
pavgb
push
and
dec
nop
lret
cmp
cmpsb
js
incl
pop
mov
cmp
inc
cmp
sar
mov
fdivrs
sub
mov
std
cs
lret
inc
xor
nop
fimuls
cs
ljmp
add
push
stos
pop
pusha
cld
filds
and
push
loopne
inc
cli
enter
push
adc
xchg
push
push
sub
pop
cmpsb
adcb
mov
ljmp
cmpsb
icebp
pop
pop
mov
jle
push
shlb
pop
push
or
and
push
mov
fcomip
inc
clc
fildl
adc
mov
aam
aaa
test
repnz
aaa
jge
mov
mov
sub
call
sbb
jg
mov
push
xchg
fnsave
js
aaa
fcoml
or
push
in
jbe
and
adc
or
fsubl
in
addb
pop
adc
mov
adc
fcomi
adc
push
sahf
sbb
cmp
mov
push
mov
insb
pushl
daa
push
gs
pop
adc
gs
add
mov
xor
or
dec
loope
adc
xor
mov
scas
cmp
ret
pop
add
mov
mov
pop
push
loopne
mov
cmp
arpl
and
pop
inc
inc
adc
out
push
xor
and
enter
cli
orb
shlb
rolb
cmp
pop
cmpsb
inc
ficoml
and
test
popa
xchg
xchg
add
push
rcll
insb
pop
add
movsb
insb
lock
sbb
jno
and
inc
daa
rolb
add
js
xchg
push
scas
add
add
adc
push
movsb
daa
adc
add
loopne
fldt
cli
push
adc
jae
mov
or
mov
repnz
dec
dec
add
ret
ss
fimuls
cld
push
mov
xchg
or
push
test
pop
xchg
jo
pop
mov
subl
icebp
xchg
loop
add
jg
sub
adc
stos
jne
adc
mov
fcomip
or
pop
push
loop
test
outsb
xchg
shrb
jmp
lock
cltd
movsb
test
ret
aas
add
decl
loopne
arpl
pop
pusha
cmp
test
and
je
add
add
bound
dec
stos
repnz
add
lcall
outsl
lods
push
cmp
loopne
xor
addb
jg
mov
cmp
and
daa
jo
xchg
cmp
jb
add
cmpb
filds
cld
xchg
jb
adc
cmp
push
shld
cmp
sub
loope
rorb
sub
mov
inc
sub
sub
push
ret
pop
les
loop
jnp
push
jbe
clc
jmp
or
stos
imul
push
sub
fbld
orl
mov
push
call
cmpsl
push
or
push
cmpsl
inc
or
xchg
rolb
loopne
nop
jae
lock
fisttps
js
push
fmulp
mov
add
jmp
mov
imul
mov
stos
ljmp
and
mov
pop
mov
push
xchg
ds
inc
fisttps
push
mov
nop
out
loop
push
mov
jne
dec
xor
xor
dec
or
push
std
or
mov
pop
lods
mov
mov
test
or
lods
jg
sbb
push
dec
nop
push
shlb
jmp
jp
push
xchg
pop
js
fadds
mov
lret
mov
daa
xchg
cmc
outsl
lds
outsb
ljmp
outsb
sub
add
xchg
mov
dec
sbb
sbb
js
aas
loopne
inc
adc
clc
pop
inc
std
mov
sbb
stos
dec
xor
add
sub
jg
scas
and
xor
int
lods
nop
cs
inc
inc
xor
fcomi
add
hlt
adc
pusha
inc
sbb
call
shll
mov
inc
nop
lds
popl
lock
xchg
popf
pusha
push
test
dec
sub
jb
cwtl
test
cmp
add
sub
inc
inc
cmp
fwait
aam
mov
or
and
xor
popa
add
cmp
sbb
decb
xorl
adc
stos
testl
xor
and
push
clc
dec
cmp
test
stos
jle
xchg
inc
loop
push
loope
aam
movl
outsl
or
enter
add
adc
mov
mov
fdivl
incb
outsb
stos
popf
add
sarb
mov
add
inc
pop
jp
addb
pop
cmp
mov
add
outsl
or
fcmovbe
add
inc
inc
mov
jmp
cmc
add
dec
loop
adc
lods
and
adc
ds
mov
aaa
push
lahf
pop
es
push
add
jle
add
jbe
fsubrs
ret
stos
dec
subb
std
inc
insb
ss
jnp
ss
adc
and
and
pop
leave
movsb
add
sahf
add
adc
sbb
add
movsb
add
add
inc
jge
push
sub
and
cmp
bound
mov
xchg
xor
int3
xor
xchg
aam
in
stos
shr
xor
jb
js
or
ret
dec
or
dec
out
add
push
insb
shrl
pop
mov
lock
jo
xorb
add
add
sahf
and
stos
push
add
mov
jbe
push
pushf
pop
and
jns
sbb
dec
jp
mov
add
xor
lcall
test
ja
or
push
imul
xchg
mov
aaa
idivb
sub
adc
es
jnp
inc
xchg
pusha
cmpsl
andb
js
outsb
test
pop
mov
inc
add
xchg
out
add
jl
push
mov
outsl
jecxz
pop
xor
fildl
xchg
fdivs
mov
pushf
ss
pusha
into
mov
int3
mov
pop
sub
push
xorb
add
push
inc
ss
inc
adc
cld
push
add
pop
inc
stos
push
call
add
rorl
enter
inc
mov
sub
les
or
inc
or
adc
fisttps
add
addb
add
and
push
add
xchg
sbb
inc
mov
mov
sbb
add
std
sarl
mov
adc
adc
sbb
xchg
mov
dec
adc
shll
inc
daa
or
and
and
stos
sbb
add
mov
ja
rorb
ljmp
push
rolb
dec
inc
adc
pop
test
jb
inc
rclb
cmp
rorl
add
add
inc
add
jle
sbb
cmpl
sbb
cli
add
stc
lods
addb
shrb
mov
rorb
inc
orb
clc
cmpl
mov
andb
rcrl
dec
jle
sarb
outsl
adc
inc
aam
inc
ja
and
scas
inc
push
hlt
ret
mov
cmpsb
cli
shl
cmpb
inc
je
mov
jo
addb
mov
add
icebp
pop
pop
stos
mov
or
aaa
adc
cmp
xchg
inc
lods
test
mov
aad
and
fs
dec
pop
mov
or
jp
xchg
ret
xchg
push
addl
and
fisttpl
jp
leave
addb
sub
sbb
adc
or
push
fwait
xorb
scas
sbb
add
sub
mov
or
outsl
sub
mov
adc
mov
mov
mov
test
fwait
test
dec
sbb
adc
shrl
pop
das
add
pop
inc
dec
add
xchg
ret
decb
add
or
gs
xor
pop
nop
lret
daa
pop
inc
adc
fcoms
add
out
daa
int
daa
add
add
out
push
and
mov
stos
std
loopne
stos
xchg
loope
or
movsb
mov
inc
call
mov
movsb
movsb
cmp
test
fsub
adc
loope
lret
lea
shlb
lock
fidivrs
inc
cmpsb
inc
and
sbb
sbb
in
add
mov
cmp
cmpsb
ja
shrb
xor
add
and
or
es
lods
jecxz
fisubrs
xor
inc
pop
stos
je
aaa
sarb
faddp
xor
insb
dec
xor
ret
xor
pop
push
lds
lods
js
xor
adc
std
incb
aas
sub
xor
mov
stc
pop
outsl
ucomiss
aas
les
leave
xor
sbb
mov
loop
jmp
insb
mov
jecxz
cld
test
pusha
daa
insb
mov
adc
loopne
movsb
cmpsb
xchg
mov
shlb
mov
mov
pusha
xor
cs
icebp
and
loopne
out
rcr
xchg
in
insl
mov
push
popl
xchg
popa
add
push
cltd
ror
mov
xchg
xor
mov
je
and
push
fisubrl
push
mov
sbb
mov
ret
scas
inc
fisttpll
xorl
adc
add
int3
add
test
pop
andb
jbe
cmp
cmp
test
push
add
jne
arpl
inc
push
push
cmpsl
adc
push
pusha
dec
into
testb
mov
mov
or
shll
sub
lret
js
loopne
and
cmpsl
jo
or
pop
lret
inc
stos
les
inc
test
or
cltd
mov
pop
lret
arpl
popl
adc
loopne
rcrb
mov
adc
out
push
or
repnz
jnp
or
mov
mov
or
adc
pusha
addb
in
popa
pop
adc
cs
jp
or
dec
enter
jle
icebp
add
int
fwait
cld
or
add
add
gs
dec
adc
push
ljmp
call
or
mov
adc
addl
cwtl
addl
xor
stos
sbb
xchg
lcall
or
aaa
or
jo
roll
inc
pusha
or
adc
jno
push
lea
dec
fcompl
xor
les
push
mov
adc
and
lds
pop
das
adc
push
adc
dec
nop
into
lock
inc
jg
jbe
cmp
bound
dec
push
ds
lcall
mov
push
adcb
mov
add
imul
sbb
jo
inc
fmuls
adcb
insb
stos
call
dec
rorb
sbb
sbb
pushf
test
outsl
int3
pusha
jge
inc
arpl
and
cmp
adc
fs
and
ja
xor
and
pop
and
fistpll
nop
add
push
mov
jp
add
adc
add
add
xchg
nop
clc
sti
andl
aam
xor
push
pusha
xchg
add
and
outsl
adc
rolb
aaa
dec
jmp
arpl
loope
stos
cwtl
jo
icebp
leave
jle
xchg
push
sub
and
cwtl
xor
mov
push
and
sahf
mov
add
xchg
call
shr
xchg
lea
ss
bound
cld
lods
push
call
ja
pop
cwtl
shrb
sbb
dec
fcmove
xchg
jo
leave
pop
add
subb
repnz
dec
cwtl
push
sub
jns
call
leave
pop
add
aas
nop
mov
lcall
mov
ss
cmp
stos
mov
push
call
icebp
gs
push
dec
loope
stos
or
loopne
xorl
dec
je
je
add
loopne
and
sub
and
cmp
xchg
push
sahf
sbb
clc
je
pop
pushl
or
pusha
xchg
rcrb
jo
lret
fwait
xchg
nop
ljmp
sar
nop
add
jb
lret
xchg
icebp
adcl
mov
aam
enter
insl
and
add
mov
ret
jnp
mov
xchg
or
jl
ret
mov
adc
push
or
into
aas
dec
pop
inc
jmp
sbb
mov
adc
icebp
add
xchg
lea
jle
inc
add
nop
aaa
add
cmp
mov
pushf
repz
adc
xchg
sub
push
push
test
insb
and
add
rcrl
add
and
dec
pop
push
dec
mov
outsl
fnstsw
inc
lret
sbb
or
or
mov
rorb
mov
push
mov
adcl
lods
xor
or
nop
add
mov
inc
sub
nop
mov
sbb
fwait
pop
mov
xor
cwtl
xor
and
loopne
lods
jl
jp
mov
in
add
fbstp
or
sub
sub
jo
sbb
aaa
cld
or
and
stos
mov
push
mov
xor
push
enter
rcrl
mov
jb
push
cltd
jl
inc
pop
enter
pop
cwtl
jge
ss
add
fs
push
xchg
adc
xor
push
pop
ret
add
or
inc
stos
test
jge
or
arpl
lods
jg
xor
dec
pop
jg
mov
adc
inc
les
add
ja
sub
mov
scas
lret
push
add
in
mov
jne
pop
add
pop
adc
jp
sub
pop
fsubrl
sbbl
ja
scas
movsb
mov
data16
out
ret
ret
sbb
add
sbb
fildll
fadds
pop
inc
aaa
jb
inc
ljmp
pop
adc
sub
mov
or
incl
hlt
pop
add
js
or
pushl
stos
pop
adc
aaa
ret
stos
xlat
bound
mov
stos
sbb
sti
fbld
xchg
sbb
mov
mov
push
sbb
jbe
mov
sbb
dec
push
pop
cmpb
clc
test
add
dec
leave
ret
jmp
ret
xor
rcrb
mov
ss
pop
pop
push
loopne
addb
aaa
push
jg
outsb
inc
scas
jo
inc
pop
test
adc
inc
sub
incb
add
adc
test
adc
pop
and
add
lret
inc
add
and
adc
dec
rolb
xchg
jecxz
testb
mov
push
xor
push
mov
lea
push
add
notb
rorl
pop
jge
leave
gs
test
test
xor
outsb
shlb
insl
sahf
lcall
xor
xor
into
adc
ret
dec
mov
rolb
jl
jp
xchg
or
int
push
cmp
frstor
das
cmp
mov
adc
outsb
sbb
mov
cmpsb
cmpl
add
aaa
lret
jae
lret
pop
add
pop
inc
xchg
lods
pop
inc
dec
jae
js
lds
pusha
lock
xchg
cmp
add
adc
sub
adc
stos
ds
inc
popa
add
push
loope
xor
add
in
rolb
in
or
xchg
pop
and
adcb
dec
push
popa
jl
into
inc
sarb
mov
loopne
ja
je
shlb
push
cmpsb
bound
mov
repz
xor
fs
mov
add
jno
loopne
je
lea
nop
mov
ss
arpl
lods
add
aaa
push
push
mov
add
sub
add
xor
pop
and
bndstx
jle
and
ds
lock
and
ret
nop
sbb
push
or
fsubrs
add
mov
cmp
dec
insb
scas
mov
cli
ret
dec
aas
faddl
dec
cmp
xchg
xor
or
cmp
mov
add
jb
clc
push
push
and
add
xchg
sub
add
test
fdivs
sbb
dec
test
pop
inc
cmp
mov
pop
test
mov
inc
leave
inc
pop
dec
scas
inc
or
mov
dec
lods
fcomps
mov
push
outsb
xor
subb
add
inc
push
bound
inc
dec
jl
pop
add
xchg
dec
mov
sbbb
stos
xchg
adc
add
nop
les
jns
xchg
pusha
loop
jns
ret
and
jns
pop
cmpb
roll
insb
adc
mov
jbe
add
xchg
addb
add
adc
fsubr
in
push
inc
cmp
xchg
push
insb
add
pushf
mov
enter
mov
xchg
xchg
pusha
mov
mov
add
and
inc
pop
or
push
push
or
add
into
scas
sbb
dec
or
dec
call
add
push
mov
enter
aaa
mov
or
xor
ror
xchg
mov
push
pop
aam
pop
add
dec
les
fs
cwtl
adc
and
pushf
negb
add
aam
pusha
push
jnp
out
add
imul
sub
mov
inc
and
mov
mov
push
fs
inc
or
mov
ds
push
out
adc
rcll
add
mov
add
xchg
xor
xor
sbb
icebp
jl
xor
add
push
lsl
inc
xchg
and
jnp
sbbb
mov
xor
mov
rorb
inc
sub
mov
and
push
sahf
or
fisttps
inc
or
stos
sub
inc
pusha
add
jae
stos
std
or
pop
inc
inc
add
push
insb
rcr
enter
mov
imul
push
adc
sub
lcall
and
add
and
ss
or
or
mov
sub
fidivs
ss
lds
adc
sbb
inc
sub
or
mov
adc
arpl
or
enter
inc
mov
add
loop
loope
mov
sub
push
add
inc
js
or
push
les
mov
push
mov
xchg
cli
ret
addb
xor
mov
stos
mov
das
add
dec
ss
lods
shlb
push
inc
pop
sub
mov
subb
dec
pop
inc
les
in
es
adcb
mov
jg
inc
xor
ret
lret
sbb
pop
add
sbb
in
xchg
and
xor
dec
push
mov
shrb
addb
sar
cltd
jbe
adc
arpl
dec
pop
push
imul
mov
push
pusha
testb
stos
pop
sbb
clc
aaa
cwtl
jmp
or
or
mov
pop
sar
dec
push
pop
sbb
push
pop
add
sbb
mov
sub
dec
mov
dec
mov
push
adc
jo
enter
fwait
sub
mov
mov
dec
push
sub
call
mov
stos
fisubl
scas
pop
pushf
pop
js
dec
xor
adc
mov
sub
inc
mov
xchg
push
orb
jo
das
mov
pop
fidivl
cld
pop
test
cli
or
inc
push
pusha
pusha
inc
rcr
mov
jbe
ss
clc
pusha
pop
rorb
sti
test
add
dec
jle
pop
dec
outsl
xor
enter
add
pushw
movsb
pop
and
loope
rolb
andb
inc
dec
mov
mov
mov
dec
cmp
mov
inc
nop
stos
and
mov
ljmp
lea
push
jl
or
repnz
fwait
push
sub
outsl
push
adc
mov
sbb
mov
lret
pop
jle
shlb
adc
orb
inc
aaa
mov
jmp
mov
mov
dec
push
into
ret
mov
pop
movsb
dec
aaa
add
in
push
lock
pop
inc
into
or
inc
mov
sub
subl
ds
mov
and
sbb
adc
inc
adc
fucompp
scas
xor
test
stos
pushf
pusha
add
es
push
mov
add
push
add
fs
les
inc
popa
test
push
add
rcrb
adc
fmuls
dec
and
jp
add
inc
xchg
cmpsb
loopne
mov
dec
loop
adc
add
outsl
enter
mov
andb
add
bound
inc
pop
inc
mov
add
outsb
orl
sbb
push
shlb
dec
cli
or
or
and
inc
frstor
xchg
in
roll
imul
xchg
dec
mov
and
test
lock
mov
jg
xor
out
loopne
adc
cmpsl
mov
insb
and
add
fwait
aad
jb
mov
pusha
mov
insb
imul
cld
cmp
pusha
push
push
mov
sahf
push
cld
sbb
and
and
int3
jne
push
mov
or
pop
loope
mov
mov
xchg
xor
or
daa
lret
pushf
and
nop
std
inc
aam
jo
sahf
and
xchg
push
imul
popa
jo
and
sahf
int
popa
js
jo
xor
mov
or
push
add
negb
lods
aam
fstpt
fmuls
loopne
fwait
loope
pushf
lock
mov
push
mov
or
mov
into
cmp
and
mov
dec
mov
mov
push
mov
stos
test
fisttpll
bound
mov
shlb
cmpb
add
sub
mov
inc
push
cs
lods
and
and
xchg
pop
mov
or
pop
inc
shrb
xor
lret
scas
xor
or
clc
jg
lea
mov
rcrb
inc
xchg
inc
rolb
roll
xchg
dec
aaa
inc
pop
inc
xchg
xchg
ljmp
lods
test
inc
mov
mov
fwait
xor
mov
mov
xchg
loopne
sub
dec
xor
fwait
pop
and
adc
jnp
pop
mov
adc
adc
rolb
xor
andl
dec
inc
inc
mov
sub
or
dec
mov
sub
or
bound
sbb
lcall
dec
mov
shrl
jne
pop
icebp
inc
dec
into
push
cmpb
ljmp
das
pop
mov
nop
stos
xor
into
lods
add
mov
add
or
adc
add
cs
add
or
adc
dec
adc
je
mov
push
shll
iret
push
push
push
sub
inc
jno
xchg
pop
adc
jno
dec
inc
jle
push
sub
mov
dec
lods
dec
stos
in
popa
pop
je
sub
dec
xchg
cli
lock
bound
les
pop
adc
popa
dec
mov
mov
and
pop
pop
mov
push
and
andl
addb
inc
mov
or
sbb
jo
dec
inc
sbb
clc
mov
or
ret
ds
add
cmc
orb
mov
icebp
xchg
pop
push
lret
inc
adc
inc
add
pop
adc
inc
outsl
sbb
into
xchg
call
mov
int
push
test
push
and
jg
jbe
or
adc
mov
lock
push
adc
mov
xor
inc
or
dec
xor
decl
notb
and
stos
scas
add
loope
push
sub
mov
mov
cmp
incl
push
mov
adc
add
inc
std
xor
mov
ljmp
test
mov
xchg
les
jle
mov
dec
add
mov
lock
inc
outsl
sbb
jmp
inc
or
sub
cmp
xor
push
aas
mov
jo
dec
jne
add
or
sub
lock
pop
stos
mov
jbe
push
pusha
jne
scas
pusha
sbb
mov
dec
push
fdiv
inc
and
add
fsubp
pop
and
add
sbbb
aam
call
jo
jne
and
or
sub
and
shrb
push
nop
cmp
int3
ret
inc
pusha
adc
add
cmp
cmp
inc
adc
in
push
inc
add
fs
int
push
xchg
xor
cmp
add
pushf
add
xlat
mov
adc
jno
pop
jmp
adc
fwait
mov
adc
aad
xchg
sbb
mov
xor
xchg
stos
scas
pusha
cmp
add
cld
addl
add
push
dec
pop
mov
or
cli
aaa
push
mov
dec
mov
mov
dec
push
cld
sbb
push
stos
daa
aaa
insl
sbbb
add
xor
or
nop
sub
call
add
adc
sbb
push
xor
fildll
xlat
xor
mov
cltd
loop
pop
aam
add
sahf
loop
dec
adc
test
lock
or
sub
mov
loopne
sbb
stos
dec
mov
adc
xor
mov
movsb
movsl
and
jp
mov
inc
xchg
sub
push
sti
fbld
and
adc
push
scas
stos
addb
sbb
lock
cmp
xchg
cmpb
sub
rclb
xlat
pop
addb
sbb
mov
pusha
xor
push
add
pop
add
pop
mov
adc
cmp
dec
and
adc
add
sbb
shlb
pop
cmpb
jo
fisubs
add
push
lret
test
push
inc
add
nop
push
mov
incl
cmp
and
push
pusha
andb
popa
leave
push
cli
mov
stos
popa
aaa
test
stos
adc
fisubs
or
ss
xchg
test
pop
icebp
adc
stos
popa
inc
pop
cmp
ds
dec
add
dec
enter
xor
cmpsb
scas
adc
adc
push
enter
push
push
pop
add
cmpsb
cmc
js
xor
les
inc
mov
mov
add
mov
rclb
add
or
mov
push
add
jp
loop
pusha
rol
and
sub
mov
add
add
mov
mov
push
xorb
jle
inc
and
jb
stos
or
push
adc
insl
cmp
push
dec
nop
hlt
mov
sbb
pop
dec
xor
dec
pop
jg
or
jge
adc
js
mov
lea
std
int
test
inc
inc
insb
cwtl
sbb
adcb
aaa
call
sbb
or
cmp
clc
sub
jg
dec
stos
xor
add
nop
lea
pop
inc
lock
inc
sbb
pop
xchg
clc
or
adc
xchg
mov
and
ret
xchg
push
mov
add
std
cmp
shlb
sbbl
mov
lcall
les
push
add
pop
mov
shrl
pusha
mov
adc
add
dec
add
sahf
arpl
lret
sbb
outsl
add
adc
test
ds
or
sti
bound
cwtl
xor
rolb
xchg
mov
add
pop
les
ja
jg
mov
mov
roll
arpl
in
mov
push
test
in
mov
or
or
pop
add
pop
or
test
adc
test
sarb
push
add
mov
pop
int3
mov
dec
jno
stos
mov
pop
push
inc
dec
or
add
inc
inc
js
or
sbb
or
les
or
call
into
or
in
retw
cmp
imulb
jo
ss
movb
imul
cld
ss
inc
push
les
mov
mov
inc
cmp
das
leave
push
add
lods
outsb
repnz
adc
cmp
jecxz
xchg
push
das
bnd
inc
mov
inc
mov
add
fcoml
dec
lods
mov
add
es
mov
mov
loopne
fs
enter
sbb
lea
in
test
xchg
mov
inc
and
push
and
js
nop
enter
push
das
lret
call
mov
outsb
add
lods
decl
cmpsb
xchg
jb
test
add
mov
pop
movb
xchg
add
mov
sub
add
jl
in
mov
adcb
add
jle
loope
add
push
enter
clc
and
push
bound
das
push
int
or
mov
shlb
or
jae
adc
dec
inc
cmp
stos
xchg
bound
jp
jp
hlt
fildll
adcb
addl
add
lahf
and
ja
push
lahf
in
outsl
add
add
arpl
push
movsl
cmpsb
xchg
ret
notb
ret
or
cmp
add
sahf
mov
push
cwtl
pop
les
xchg
inc
dec
and
inc
push
loopne
rolb
cmp
dec
push
pextrw
cmpsb
add
scas
into
test
mov
pop
shrb
push
cmp
and
sbbb
add
add
pop
enter
lret
addb
add
insb
pusha
xchg
xor
js
or
fadd
jg
adc
or
cs
jae
mov
cs
je
ds
sub
or
dec
daa
jnp
cmp
push
lret
mov
andb
lea
inc
orb
sahf
into
cmp
es
mov
adc
dec
and
enter
push
js
jo
imul
nop
ret
jno
sbb
mov
fistl
inc
outsb
fimuls
mov
fimuls
jno
test
jbe
inc
add
adc
push
push
inc
orl
mov
pop
shlb
mov
push
adc
leave
repnz
test
and
icebp
inc
or
inc
dec
adc
add
dec
enter
repnz
hlt
push
lcall
add
mov
pop
xor
dec
dec
rcll
js
add
add
sbb
mov
ror
lods
cld
fstpt
pusha
adc
add
shrl
jmp
or
push
add
add
sbb
pop
stos
add
jo
lods
outsl
fidivs
push
lret
pusha
adc
pop
mov
inc
xor
fnstenv
xchg
fcmovbe
mov
mov
testb
pushl
call
add
loop
mov
test
pop
dec
test
loop
jb
push
adc
sbb
push
loopne
cli
mov
and
in
add
and
loopne
mov
mov
adc
add
push
push
ret
add
cmp
ja
mov
call
mov
jecxz
aas
repz
aaa
add
daa
mov
outsb
fidivl
mov
loop
adc
stos
mov
rclb
and
mov
mov
jns
imul
fildll
cmp
imul
fdivs
fdivr
iret
loopne
cmp
mov
adc
jge
mov
xlat
lahf
jbe
mov
out
out
mov
rorb
pop
fidivl
mov
push
movsl
data16
and
xchg
xor
adcl
ror
ja
add
sub
shrb
out
loope
stos
push
out
rorb
out
adc
test
dec
sub
loope
loopne
mov
mov
andb
push
stos
sub
push
xchg
sub
loope
mov
rcl
adc
orb
shlb
or
or
and
mov
lret
add
scas
in
addb
add
pushf
outsl
inc
ret
pushf
je
into
or
sti
mov
mov
add
subb
pop
adc
push
in
ljmp
lret
mov
ss
xor
sbb
rorl
mov
lret
stos
sub
repz
jg
stos
std
insl
inc
xlat
aaa
jno
pop
add
mov
dec
shlb
mov
xor
xchg
mov
js
test
mov
dec
mov
or
insb
dec
dec
pop
bound
push
dec
pcmpgtb
inc
fists
mov
loop
js
das
push
hlt
add
jae
mov
mov
dec
add
adc
mov
inc
xor
inc
gs
adc
push
je
and
or
xor
and
shrb
adc
mov
jo
jnp
aaa
push
cld
das
mov
stos
pop
sub
jne
cmp
push
push
loope
push
xchg
xor
adc
mov
adc
add
dec
pushf
sbb
add
xorl
xchg
xchg
add
adc
add
insb
pushf
into
add
insb
or
mov
xor
packuswb
rorb
push
decl
fadd
addr16
add
inc
dec
and
dec
or
pushaw
add
add
or
ss
lea
push
adc
outsl
jnp
imul
mov
shlb
dec
mov
jb
and
divb
add
adc
stos
insl
jp
sbb
js
or
dec
aas
inc
mov
adc
pusha
sbb
push
push
xorb
push
popa
or
incb
add
add
and
jp
fdivr
test
ret
aas
jo
aaa
dec
and
sub
or
movsl
push
cwtl
loop
xchg
sbb
hlt
outsl
stos
add
icebp
adc
imul
test
je
loopne
and
es
rclb
push
lock
shrb
mov
test
pop
fsubrs
adc
test
fidivs
loopne
pop
adc
mov
das
clc
or
and
push
and
ret
rolb
mov
lea
xor
mov
loope
loop
je
sbb
push
pop
shlb
adc
sub
jno
fcomip
add
lock
ss
fwait
popa
mov
inc
inc
push
fwait
and
dec
mov
mov
and
mov
or
aaa
adc
pop
pushf
adc
stos
inc
lahf
push
add
add
sbbl
jo
test
mov
sbb
mov
sbb
cmp
adcb
xchg
aam
loopne
mov
mov
shlb
cld
roll
cmp
rclb
add
bound
inc
inc
or
or
shlb
or
push
add
and
mov
push
call
xor
aaa
sbb
inc
subl
or
inc
adc
test
js
add
or
imul
xor
push
add
stos
out
or
cld
loopne
xchg
adc
je
inc
adc
sub
mov
push
loopne
xchg
mov
dec
stos
insl
xchg
sbbb
aam
test
jl
dec
xor
pop
dec
mov
ja
or
outsb
fcmovnb
cmp
push
data16
das
inc
das
adc
cmp
popa
xor
mov
adc
jecxz
or
and
dec
push
pop
ret
ljmp
jbe
mov
loop
cmpsl
adc
add
sbb
jmp
xor
or
test
aam
adc
mov
sbb
or
mov
jecxz
push
pushf
mov
adc
xor
push
or
push
adc
push
orb
loopne
hlt
push
add
inc
or
bound
dec
shlb
adc
mov
sub
mov
jl
stos
test
pop
pop
push
push
sbb
mov
inc
push
lock
inc
dec
inc
das
xorb
outsl
stos
shrb
add
or
rcr
lods
fidivrs
push
test
clc
lds
sbb
add
push
stos
stc
jae
push
rolb
lea
rcrb
sub
fistps
stos
adc
in
add
push
sub
jl
or
mov
lods
das
add
sub
ret
jbe
mov
xor
cmpsl
lods
sbb
loopne
daa
int3
incb
out
push
outsb
and
rolb
cmpsb
push
mov
imul
and
insb
and
xor
movsl
xor
dec
insb
shr
mov
inc
jb
popa
push
xor
loopne
enter
das
xchg
in
adc
js
sub
scas
int3
inc
lock
ss
sti
cmpsb
data16
inc
test
enter
and
jecxz
cmp
pop
dec
test
call
fistps
nop
adc
pop
call
adc
sub
and
cmc
xchg
mov
adc
mov
adc
mov
sbb
add
lods
popf
xor
mov
and
xchg
shrb
add
or
rcrb
enter
push
jle
add
fs
add
cmp
xor
mov
lret
ret
loopne
mov
mov
xor
or
insl
cld
push
xchg
xchg
jbe
imul
ljmp
and
and
arpl
hlt
pop
and
sti
mov
lock
lods
lcall
add
mov
test
add
addb
fdivp
push
and
insb
stos
sub
subb
es
ja
or
cmp
mov
stos
popa
sub
jb
nop
ljmp
mov
shlb
sahf
les
addb
xchg
sub
add
xchg
inc
repnz
jp
cmp
cld
lret
pop
addr16
enter
push
xchg
clc
or
mov
in
cmp
add
clc
push
rorl
pusha
or
inc
bound
or
je
ja
jg
xor
inc
push
imul
mov
mov
xor
bound
pop
outsl
lahf
add
push
lret
mov
mov
add
nop
pop
pop
adc
and
push
and
loopne
sbb
push
cli
sbbb
js
jb
lcall
ss
dec
sbb
add
maxps
inc
ja
fnstenv
jb
xchg
inc
and
sub
push
nop
xchg
andb
mov
incl
outsl
adc
push
addb
stos
shlb
icebp
pop
lods
add
sub
fbstp
stos
dec
mov
mull
nop
bts
ror
into
pop
sbb
push
fdivs
xor
subl
pop
or
add
mov
jecxz
push
push
stc
clc
ret
mov
mov
loop
aam
sti
add
insb
or
inc
adc
push
stos
lock
push
mov
pop
enter
and
cmp
push
enter
movsl
mov
xchg
test
test
and
mov
sbb
and
aad
sarl
xchg
or
sub
adcl
cli
das
push
add
lcall
add
outsb
rcl
insb
fwait
xlat
add
add
mov
lock
xor
test
mov
mov
push
dec
call
inc
insb
jno
or
xor
fnstsw
add
call
call
push
ficoml
mov
sti
push
mov
addb
addb
hlt
stos
test
jmp
orb
mov
test
adc
pushf
js
push
scas
add
add
adc
mov
scas
add
inc
xchg
inc
ljmp
add
aas
inc
cmp
incb
or
scas
push
xorb
into
or
mov
mov
dec
ljmp
push
xchg
add
dec
jbe
dec
add
inc
sub
call
fs
jae
or
add
cwtl
add
add
cmp
or
add
push
fadds
pusha
adc
subb
inc
mov
xchg
add
and
mov
inc
add
dec
mov
push
mov
clc
loopne
mov
add
mov
jo
pop
js
addr16
movsb
xchg
adc
mov
adc
push
pushf
nop
out
or
scas
add
push
scas
jp
dec
adc
mov
jmp
mov
jp
sub
fadd
add
cmpl
or
or
sub
stos
mov
or
iret
add
js
xor
mov
cmp
adc
ja
dec
ret
dec
mov
push
enter
leave
sub
dec
add
or
outsl
lret
xchg
test
nop
stos
dec
or
adc
mov
inc
shrb
std
mov
lret
enter
ret
insb
xor
les
insl
mov
movsb
sub
sub
mov
cld
mov
aas
test
inc
rorl
insb
push
add
pop
gs
push
dec
js
int3
sbb
into
std
or
rolb
fcmovnbe
mov
inc
cltd
movb
adc
dec
push
cmpb
mov
stos
test
aas
inc
iret
cmpb
xor
inc
and
dec
add
fistl
rorb
dec
outsl
sub
mov
orb
mov
ret
adc
je
mov
ljmp
mov
mov
sub
ljmp
sahf
test
rcll
sub
inc
clc
ret
add
pop
and
sarb
push
repnz
insb
adc
or
pushf
push
adc
popf
mov
xor
or
ss
dec
test
loope
xchg
add
xchg
in
in
shlb
add
push
pop
insb
lcall
loop
inc
jmp
dec
bound
pusha
or
xor
in
daa
mov
cmp
and
cmpsb
dec
and
rcrb
test
das
test
mov
add
sub
dec
mov
addb
aad
xchg
repz
adc
repnz
sahf
xor
loopne
adc
das
gs
pop
je
mulb
inc
and
push
sarl
xor
adc
ss
jmp
imul
inc
adc
subb
and
mov
mov
jp
leave
clc
jg
sbb
ret
sbb
push
cmp
add
stos
hlt
and
and
loop
das
push
or
shrb
test
out
push
push
push
mov
push
adcb
popa
pop
inc
test
adc
clc
push
and
sub
add
test
int3
sbb
mov
int3
xor
sub
inc
lods
dec
aaa
add
test
push
jbe
pusha
sub
data16
add
es
pusha
and
push
ret
outsl
xor
gs
orb
dec
into
pavgb
inc
mov
or
push
add
rorb
push
stos
mov
push
cmp
test
and
mov
adc
sub
or
ret
and
jbe
pop
sub
adcb
pop
or
mov
add
mov
sbb
nop
or
pusha
cmpsl
xchg
and
sbb
xchg
nop
sbb
icebp
push
fcomps
sbb
push
sbb
sarb
mov
or
lea
mov
or
fisttps
pop
stos
jg
sub
inc
das
pop
or
jae
sub
add
aaa
cld
hlt
loopne
in
mov
cmp
test
xchg
push
mov
jg
movsb
add
or
add
rorb
push
add
mov
pusha
fwait
dec
jle
add
outsb
js
scas
pop
inc
mov
in
sub
je
insb
add
adc
cltd
lcall
mov
cld
inc
adc
mov
and
inc
add
aaa
add
cmp
xchg
xor
jl
mov
add
test
dec
add
dec
shrb
mov
shlb
and
dec
or
inc
stos
cmp
inc
mov
pop
and
test
pushf
imul
imulb
sub
push
and
mov
adc
cmp
push
push
add
xorl
add
mov
clc
jle
pop
mov
adcl
retw
loope
and
clc
cmpsb
mov
addb
dec
rcrl
adc
jg
add
js
push
pop
rclb
mov
xchg
mov
ds
pusha
lds
mov
push
sbb
cmp
jb
pop
shll
inc
call
mov
adc
and
push
xchg
clc
sbb
adc
or
jle
in
lods
dec
push
enter
movsb
jmp
sbb
add
mov
scas
test
cmp
or
outsb
xor
or
sub
sahf
nop
adc
mov
adc
insb
jl
sbb
jp
mov
movsb
mov
mov
mov
add
add
popa
adc
inc
and
shlb
and
inc
sbb
repz
pop
inc
enter
mov
addl
pop
and
enter
dec
inc
adc
adc
inc
ret
jle
add
ds
stos
popa
insb
sub
sbb
stos
in
mov
aas
push
mov
out
jb
test
xchg
xchg
mov
adc
push
fst
push
lcall
pop
dec
enter
push
cmp
dec
sub
push
pop
scas
inc
push
and
lcall
pop
mov
jo
and
lret
test
lock
or
dec
sub
inc
pop
jecxz
in
pop
pop
movsb
sqrtps
adc
scas
and
add
adc
mov
add
pop
add
xor
push
mov
mov
sbb
mov
mov
and
pop
sub
stos
sbb
mov
outsb
or
data16
icebp
outsb
sbb
addb
cmp
xchg
mull
icebp
in
pusha
jge
xor
pop
adc
cmp
rorb
arpl
fs
push
mov
jbe
jno
pop
cmp
nop
or
ljmp
stos
dec
push
or
mov
jae
lret
pop
pop
rcrl
xor
pop
pop
mov
sbb
adc
pop
and
push
fsubrs
pop
push
ss
nop
or
dec
push
jbe
pop
loopne
push
incb
sarb
mov
jo
popa
mov
pop
add
mov
dec
fcomip
pop
push
push
test
add
jo
mov
lock
or
cmp
xchg
xor
rolb
pushl
out
aas
aad
std
loope
adc
nop
or
sub
mov
rcrl
adc
inc
sbb
mov
sbb
xor
das
push
xchg
push
push
jno
add
mov
add
jbe
sbb
test
add
jle
mov
pop
mov
mov
cwtd
or
cli
inc
or
aaa
and
mov
decl
orl
or
and
aaa
inc
sti
mov
cmp
sub
adc
push
xor
lock
xchg
add
sbb
test
sbbb
ss
sbb
pop
rclb
push
sbb
pusha
ficomps
lock
mov
inc
fsts
or
addb
stos
inc
fsubp
add
popa
stos
add
mov
mov
insl
call
xchg
push
and
xchg
test
movsb
xchg
mov
mov
xchg
lcall
lahf
push
xchg
scas
sbb
push
insl
push
movsl
dec
outsb
imul
adc
inc
out
sub
je
mov
sbb
mov
or
imulb
dec
cli
mov
clc
mov
pushl
jge
and
popa
xor
bts
imul
mov
push
cld
imul
aaa
sarb
add
ss
std
aaa
sub
scas
popa
dec
adc
push
rcl
jo
rolb
cltd
or
shl
inc
imul
sub
sub
or
xor
mov
sub
add
pop
push
pop
xor
sub
add
ret
ret
xchg
adc
jo
xor
idivb
sub
lret
adc
jl
or
int
scas
lret
push
sub
daa
inc
adc
in
shrl
stos
push
pop
mov
and
outsl
inc
bound
inc
xor
scas
pop
and
sbb
sbb
pop
dec
add
jecxz
mov
subb
bound
adc
jl
sub
jle
and
jbe
aaa
xor
cmp
mov
push
lods
and
stos
or
jg
jo
ret
inc
stos
adc
cli
or
lret
mov
stos
gs
ret
into
rcrb
lods
push
enter
loop
movb
mov
fadds
hlt
and
xor
add
or
or
fildll
xchg
stos
js
add
rolb
mov
and
cld
decl
inc
sti
push
pop
jno
mov
das
mov
ret
sub
xlat
notb
shl
das
adc
mov
call
xchg
inc
xchg
push
inc
sub
push
or
and
push
sarb
adc
stos
sbb
stos
adc
or
lods
mov
jo
add
mov
jg
add
inc
bound
add
add
or
xor
mov
adc
push
shlb
adc
sub
mov
aam
or
add
test
lock
testl
add
inc
pop
shll
test
jb
mov
lock
push
std
dec
add
add
mov
mov
sub
bound
or
cwtl
call
and
sbbb
test
fldenv
jo
pop
lcall
adc
stos
mov
sbb
pop
ret
xchg
test
dec
dec
pop
dec
jge
jg
jo
xor
test
inc
rcr
daa
dec
rcrl
pop
push
aas
nop
divb
aad
or
lock
adc
testb
notb
push
or
push
adc
ss
fwait
cli
sbb
cmp
inc
sbb
push
inc
adc
clc
push
mov
cli
loope
adc
jno
push
dec
mov
lods
lea
dec
inc
xor
movsl
sbb
push
or
cmp
xor
cwtl
xor
mov
std
adc
arpl
sub
cmp
inc
adc
aas
ljmp
mov
mov
add
inc
mov
xor
adc
push
jbe
int3
out
lret
and
add
push
mov
lock
xorl
sub
pop
sbb
pop
sbb
add
scas
sbb
jo
in
sbb
insb
add
push
add
das
jecxz
and
and
push
xchg
rolb
test
or
sbb
push
inc
sub
clc
fcmovb
inc
pop
lods
sbb
mov
adc
mov
pop
push
mov
sub
add
bound
jbe
sub
movsl
and
in
jge
rorb
and
cmp
ds
addb
daa
push
rolb
data16
cmp
and
cmpsl
jl
add
push
jo
mov
push
adc
lds
sahf
repnz
mov
sub
in
jg
mov
lock
popl
jp
mov
mov
xchg
xchg
adc
ret
sbb
jns
sub
jnp
cmp
jne
jo,pn
sti
add
ret
stos
push
pushf
mov
mov
rolb
rolb
dec
adcb
orl
fidivl
push
sbb
outsb
cmovp
push
std
ss
mov
add
mov
add
lcall
ret
push
nop
push
cld
int
out
push
adc
push
rorb
roll
xchg
lcall
adc
roll
fwait
push
fldcw
cmpsb
hlt
pop
jne
xchg
jmp
addl
ret
rcll
decl
arpl
lds
pop
inc
push
stos
inc
loop
mov
pop
addr16
push
mov
push
inc
add
lret
mov
syscall
add
movsl
add
lahf
add
cmp
inc
add
lret
mov
add
jle
stos
bound
test
add
jbe
shl
stos
pop
mov
sub
dec
sub
sbb
or
pop
fwait
sbb
loopne
js
mov
push
inc
clc
test
fstl
add
pop
mov
pop
jp
hlt
or
dec
adcb
push
std
or
or
out
pop
popf
pop
mov
mov
inc
mov
dec
shl
xchg
inc
add
shrl
inc
fcoms
and
sbb
test
inc
cmpsl
dec
js
or
test
push
add
adc
aas
cmpb
xor
dec
add
add
xchg
gs
inc
add
mov
jg
adcb
push
lcall
push
xchg
shlb
addb
xchg
pop
adcb
ret
ljmp
xorl
lret
pop
sub
push
push
inc
mov
sub
push
and
dec
cli
lahf
mov
shlb
sub
and
adc
dec
or
inc
xor
shrb
gs
sbb
add
ret
xchg
pop
addl
inc
sbb
jmp
xorb
test
scas
adc
push
popa
shl
xchg
push
jno
cwtl
loope
mov
rorl
sbb
je
push
add
mov
adc
jo
inc
jnp
mov
or
sub
into
add
or
push
add
aad
or
mov
xor
repnz
inc
icebp
and
xchg
cmp
pushf
mov
add
xorb
jle
push
sar
pusha
and
jne
movsb
clc
add
and
or
sub
push
dec
sub
subb
jnp
or
lea
inc
mov
add
shlb
inc
mov
adc
pusha
add
lock
add
dec
mov
push
xor
arpl
cmp
inc
sbb
adc
mov
enter
mov
sbb
add
mov
adc
lods
add
pop
inc
add
mov
xor
mov
adc
ja
push
test
dec
stos
ss
add
mov
stos
push
add
mov
cli
mov
xchg
sbb
jle
scas
and
sbb
mov
dec
xchg
loopne
sarb
mov
test
stos
mov
mov
add
push
es
pop
loopne
stos
dec
dec
pop
add
and
jp
sarb
fidivl
push
add
sti
rorb
stos
out
add
ja
test
mov
add
ss
push
pusha
and
leave
inc
xor
dec
cli
adc
leave
xlat
dec
shll
xor
xor
mov
adcl
mov
add
xchg
jo
add
sbbb
add
sub
shrb
or
arpl
ss
mov
clc
aad
push
loop
inc
cmp
add
mov
push
add
rclb
nop
loopne
inc
sahf
or
inc
sub
and
and
std
push
loopne
add
add
leave
mov
inc
adc
mov
into
xlat
add
lret
mov
loopne
add
jbe
test
add
cmpsb
andb
xchg
xor
shlb
dec
sbb
and
ss
sub
or
mov
lcall
adc
xchg
push
cwtl
std
stos
jg
lret
inc
pop
lods
orl
lds
pop
push
insb
bound
jg
or
jae
enter
inc
add
outsl
and
lock
lret
ja
sbb
test
push
sub
sub
add
or
xor
mov
or
inc
mov
inc
test
mov
fsubr
cwtl
jnp
sarl
pop
shlb
add
sbb
cmp
movq
data16
cmp
inc
or
ret
dec
cli
push
adc
inc
cmp
decl
cmp
adc
imul
cmpsb
mov
cmp
roll
imul
adc
add
sub
add
xchg
pop
lods
xchg
sar
js
aaa
xor
lds
ds
push
add
pop
add
sub
scas
fstpt
sub
orb
rolb
pop
rcr
enter
sbb
rorb
pop
cli
adc
addr16
push
inc
pop
or
fdivp
inc
xor
sbb
add
pop
add
push
xchg
pusha
push
push
adc
sbb
cwtl
inc
stos
andb
mov
mov
dec
push
adc
mov
pop
xchg
xor
and
stos
enter
out
add
and
lret
lods
push
data16
push
add
addr16
jl
testb
or
pop
fcmovbe
inc
aaa
hlt
std
add
push
cmc
in
mov
pusha
or
mov
xor
bound
outsl
aaa
test
bound
cmp
popa
ret
push
shlb
insb
adc
xchg
stos
xor
mov
mov
and
xchg
inc
mov
xchg
xchg
aam
adc
shlb
pop
bound
mov
ret
mov
jle
mov
add
mulb
lock
mov
rolb
and
test
push
inc
sbb
clc
xchg
mov
push
xchg
xor
shrb
aad
cmpsb
cmp
shrb
cwtl
jno
mov
add
sbb
icebp
inc
popa
aas
mov
mov
ds
outsl
mov
xchg
xor
in
dec
xor
push
shrb
push
mov
pusha
test
mov
inc
push
add
inc
cld
fbld
mov
roll
popa
cmpb
mov
pop
sub
adc
aas
arpl
adc
aad
jbe
pop
andb
xchg
push
or
je
mov
mov
or
mov
sub
mov
stc
repnz
jg
outsb
push
outsb
ffreep
xchg
cmp
cmp
sbb
sbb
lret
push
mov
mov
lret
popf
lods
fcomps
pop
sarl
adc
add
dec
imul
aaa
ret
je
add
adc
mov
add
adc
fisubl
sub
mov
sti
ret
cld
ret
sti
mov
adc
repz
add
mov
mov
mov
pushl
inc
mov
into
xchg
push
loopne
xchg
cmpb
pop
or
or
mov
outsl
mov
cmp
cwtl
add
test
rcll
je
rep
imul
cs
aas
aaa
xadd
mov
jb
add
xor
or
dec
add
pop
rol
or
adc
adcb
clc
xchg
inc
dec
stos
test
and
imul
dec
jns
inc
adc
cmp
and
sub
dec
lock
cmp
fsubl
stos
pop
int3
scas
jg
cmp
pop
into
push
pop
lods
add
mov
pop
mov
xor
stos
mov
push
or
mov
add
mov
cmp
xor
outsb
lcall
xchg
inc
scas
add
into
notb
adc
jno
jo
add
cmc
fisubs
adc
cmp
or
sti
push
push
ret
stos
les
adc
adc
cwtl
mov
mov
xor
ss
jg
jo
dec
aas
loopne
push
loopne
mov
or
andl
cmc
pop
push
aam
das
pusha
adc
or
loope
in
add
stos
leave
add
xorl
cmp
mov
add
lds
lahf
addr16
std
mov
or
inc
inc
cmpsl
sbb
aaa
lahf
ljmp
adc
jo
and
jae
pop
xor
jl
rolb
int3
pop
inc
dec
mov
int3
stos
shll
fabs
aaa
movb
scas
xor
jae
rolb
xor
adc
lcall
mov
sub
mov
into
adc
or
push
jmp
fldt
and
in
icebp
or
adc
cmp
add
mov
adc
adc
dec
shl
adc
jg
push
xchg
push
xchg
push
test
enter
cmpsb
movsl
dec
test
push
cmpsl
dec
ljmp
add
stos
daa
adc
add
mov
jb
inc
lock
mov
xlat
pusha
fistl
add
cmp
jns
outsb
fbstp
inc
test
loopne
stos
movsb
sbb
subb
mov
push
dec
or
push
addb
adc
push
pop
aad
add
mov
std
jmp
shlb
pop
xorb
sti
into
xchg
adc
loopne
fwait
inc
loopne
sti
int
add
add
sti
int3
and
loopne
jg
cmpl
shlb
jmp
popa
stos
hlt
inc
ss
loopne
push
addl
test
jo
test
cmp
lods
add
daa
test
les
xor
mov
je
fs
js
add
add
add
ret
les
sub
dec
add
mov
aaa
imul
add
cmp
jmp
add
incb
jae
or
xor
subb
into
aaa
pushf
sub
xchg
or
arpl
daa
jne
addb
rorb
jl
add
xor
add
rcrl
enter
and
ret
or
xlat
or
lret
add
push
stos
pop
pop
lret
add
outsl
stos
dec
mov
inc
add
xchg
dec
arpl
fs
aas
iret
lods
mov
loopne
dec
andb
mov
mov
jne
lcall
nop
ss
pop
fisubrl
cmp
cld
dec
add
push
adc
rorl
iret
incb
and
and
dec
push
or
add
adc
xor
cmpb
inc
mov
add
bound
loopne
add
sub
cmp
subl
sar
or
sbb
add
xchg
enter
dec
mov
sub
divps
pusha
sub
cmp
subb
mov
sbb
lock
inc
xor
inc
dec
mov
sti
add
lock
nop
cwtl
mov
xchg
pusha
andb
push
loope
popa
rolb
scas
out
addl
and
push
inc
lock
idivl
pop
mov
mov
outsb
jnp
aad
adc
push
pop
popa
inc
mov
sbb
dec
jl
arpl
sarb
and
add
add
xchg
push
add
shlb
mov
push
lcall
adc
ja
stos
cmp
xchg
mov
push
push
sub
aam
sub
pusha
rorl
jbe
into
add
sub
and
lock
add
enter
mov
testb
mov
adc
add
adc
mov
stos
push
inc
shld
adc
shrb
rorb
add
dec
enter
cmp
fiadds
scas
stos
push
roll
sub
mov
pop
sarl
push
mov
and
int3
push
pop
jae
mov
ret
insl
pop
addb
push
inc
jecxz
push
addr16
mov
dec
inc
sbb
test
inc
cmp
add
mov
hlt
mov
fcoms
or
sbb
mov
add
add
loopne
or
xor
rcrl
mov
enter
mov
push
adc
add
and
cmp
cmp
je
ss
pop
add
pop
stos
dec
push
add
jge
mov
ret
jns
dec
test
dec
and
cli
pop
push
pusha
push
sub
test
hlt
push
call
add
lahf
push
mov
negb
pop
sub
mov
inc
jo
sub
int3
jmp
imul
cmpsb
jo
add
aaa
push
orb
stos
mov
mov
rorb
push
outsl
or
pop
pusha
mov
pusha
jb
dec
cmp
xor
ja
add
loopne
adc
int3
lea
add
in
add
filds
jbe
and
sub
sbb
fs
hlt
adc
add
imul
std
pushl
add
loopne
stos
adc
cmp
jp
addb
movsb
and
imul
insl
sar
cmpb
imul
ljmp
and
inc
push
js
call
jne
push
sub
and
or
xchg
cmp
into
mov
inc
adc
mov
adc
xchg
and
sbb
shlb
pop
repnz
add
repnz
push
sub
cs
add
call
inc
xor
or
and
adc
add
inc
dec
lret
cmpsl
shlb
addr16
add
frstor
cltd
notb
mov
loope
mov
and
loope
adc
push
jecxz
xchg
es
cmc
mov
jecxz
mov
loop
add
addb
addb
push
inc
loope
in
in
std
push
ljmp
je
les
push
inc
jecxz
mov
add
ficompl
enter
mov
xchg
cwtl
sub
add
add
rol
pop
js
lock
dec
sbbb
adc
pop
rcrb
stos
pop
sbb
test
push
adc
xlat
jb
fcmovnb
test
add
in
inc
test
ficomps
jecxz,pn
adcb
lds
jle
cmp
dec
add
jmp
push
push
xor
loopne
cli
sub
daa
dec
or
sub
push
or
lock
or
mov
push
cs
add
enter
or
pop
out
push
fs
mov
inc
jae
lds
or
mov
pop
pop
sbb
jge
addr16
xor
dec
mov
xor
pusha
mov
adc
std
ja
or
repnz
insl
push
pusha
add
xchg
mov
sbb
push
mov
push
or
nop
xor
inc
rolb
pop
subb
mov
mov
shlb
mov
mov
jg
aaa
jl
inc
push
add
addr16
lahf
adc
lock
adc
stos
adc
loope
push
stos
cmpsl
dec
pop
popa
push
jg
push
mov
ficoml
ret
sub
inc
sbb
cli
popa
loopne
dec
xchg
dec
subb
push
mov
push
cmp
inc
adc
pop
fs
mov
mov
popa
loope
fidivs
adc
aam
mov
inc
rolb
mov
jbe
cmovnp
or
adc
divl
add
xor
jno
adc
cmp
push
outsb
dec
insb
call
ss
inc
and
in
fmuls
adc
js
mov
cmpl
call
pop
loopne
nop
or
sub
arpl
mov
push
outsl
filds
scas
sub
je
fwait
add
into
and
sub
sbb
mov
adc
out
prefetchnta
ret
or
cs
jg
xor
ret
pop
stos
ljmp
int3
xchg
ffreep
add
aaa
loopne
add
icebp
add
add
cmp
add
idiv
ljmp
and
or
loope
outsl
cli
add
fisubrs
push
addr16
stos
jbe
fistl
sbb
cmp
mov
sub
push
aam
mov
xchg
jb
mov
push
shrl
aam
sbb
test
jge
in
add
xchg
push
mov
push
sub
sub
add
dec
call
ss
add
push
xchg
add
loopne
inc
sbb
fmuls
orl
push
pop
imul
inc
loope
xor
repnz
inc
sub
nop
lahf
testb
dec
pusha
mov
add
mov
lret
pop
data16
or
mov
inc
xorl
fcomps
mov
push
pop
stos
mov
adc
out
insl
xchg
jg
lods
lahf
and
mov
lock
sbb
jmp
andl
mov
or
int
outsb
add
push
pop
je
nop
test
inc
jnp
aaa
mov
lods
push
icebp
add
cmp
mov
mov
jmp
xchg
add
call
popa
push
sub
dec
pusha
xchg
arpl
jae
xchg
pop
xor
mull
sbb
inc
xchg
cmpsb
pop
push
adc
aaa
jo,pt
addr16
sbb
mov
xchg
add
cli
jo
mov
rolb
decl
pop
pop
data16
jae
stos
outsl
mov
call
lea
xor
sub
mov
jg
sbb
out
test
inc
sub
xor
jecxz
add
in
dec
imul
daa
sti
in
adc
rclb
mov
mov
fimull
sbb
fisubrs
and
pop
jp
sti
cmp
xor
ja
nop
jbe
shrb
mov
mov
push
test
add
add
movsb
cs
adc
jae
sbb
ret
daa
pop
stos
fwait
inc
adc
cmpb
xor
mov
add
arpl
cmp
or
and
test
cs
rolb
js
mov
or
add
cmpb
add
ret
or
adc
pop
push
add
insb
fisubl
fbld
add
jae
pop
leave
bnd
gs
push
les
ss
inc
or
add
adcb
mov
sarb
fistl
sarl
push
inc
add
xchg
push
xor
nop
outsl
xor
xchg
push
pusha
ret
sbb
jne
fildll
mov
inc
xchg
aam
leave
inc
adc
add
mov
call
icebp
cmpsb
push
insb
pop
in
ret
ja
pop
scas
pop
dec
push
and
or
xchg
rcll
dec
lock
rcll
sbb
call
fisubl
xor
push
sbb
xchg
pusha
iret
adcb
sub
add
imul
sbb
lock
dec
mov
icebp
mov
popa
mov
stos
aaa
loope
lock
call
pop
pop
roll
mov
mov
repz
mov
imul
adc
mov
and
or
cmp
pop
add
fisubrs
xchg
push
xor
in
adc
sti
repnz
sub
jg
ret
cmp
nop
xchg
ljmp
rorb
cmp
mov
cmpsl
lock
mov
andb
sti
icebp
mov
pop
xchg
inc
and
sti
lock
in
cmpsb
fidivl
push
mov
loop
cmp
or
mov
lods
testb
in
out
mov
clc
fbld
mov
pop
mov
push
jns
cmpsl
pop
add
adc
aad
and
adc
je
ljmp
repz
pop
out
mov
icebp
pop
inc
push
jge
int3
xchg
lock
cmp
es
add
int3
pop
add
mov
xchg
pop
pusha
test
mov
xchg
xor
aaa
xor
popa
daa
lods
sub
push
pusha
and
push
mov
movsb
inc
mov
scas
lods
ja
add
inc
jecxz
xlat
movb
sub
into
ss
shrl
pusha
stos
out
inc
mov
sub
jge
xor
test
mov
or
add
insb
in
mov
inc
addb
jo
pop
dec
rolb
push
add
rclb
dec
or
movsb
jnp
sub
sub
push
dec
push
stos
or
cld
aas
shll
and
mov
fdivr
hlt
inc
sti
mov
stos
fadds
nop
imull
and
or
fdivr
daa
scas
add
dec
adc
and
mov
add
or
sti
sbb
dec
jae
fidivrs
or
aad
or
sar
sbb
jns
std
jg
sti
xlat
and
pop
xlat
sti
mov
ds
dec
mov
fsincos
int
sub
andl
sti
xchg
push
jecxz
out
int
in
sti
loop
jo
out
xor
sti
outsb
shll
lahf
aaa
pop
jnp
sti
scas
push
jmp
sti
sbb
sti
mov
cmp
xchg
inc
push
addb
icebp
sti
arpl
or
test
cmc
sti
int3
scas
fs
sti
stc
lods
and
sti
lret
inc
int
ljmp
imul
lret
add
or
adc
gs
sar
xor
mov
icebp
cmp
or
push
mov
sti
push
div
fidivl
sti
imul
or
sti
cmp
jle
out
xor
xor
mov
shrl
or
cltd
adc
fdivl
popf
sti
inc
inc
push
mov
push
hlt
mov
sti
mov
push
stos
push
aam
sti
mov
scas
sti
pop
xor
sti
mov
add
jp
push
stc
sub
and
mov
fbld
int
fs
jp
dec
imul
inc
cwtl
add
out
fwait
int3
inc
sti
lods
mov
sti
rorb
inc
pop
sub
jle
test
dec
cmp
xchg
dec
dec
push
mov
scas
pop
or
adcl
fsubp
and
push
sti
inc
push
sti
or
aaa
mov
jg
dec
sub
fwait
dec
jnp
sti
sub
test
pop
negb
xchg
insl
lock
arpl
jle
stos
roll
cli
jns
xor
addr16
xchg
rcr
push
pop
lock
jmp
fwait
inc
add
imul
aad
imul
outsl
cli
xor
add
ja
add
add
cltd
add
push
jg
pop
fsubs
and
jno
mov
or
cmp
sti
fwait
jle
add
test
sbb
add
or
test
sub
or
scas
push
in
add
pop
or
xor
cltd
ret
add
mov
push
loope
mov
insl
inc
or
sti
lcall
test
jp
jmp
adc
orl
bound
and
ret
or
sti
jle
popf
addb
pop
lock
arpl
pop
cmp
inc
mov
or
daa
sti
jmp
sti
cmp
inc
mov
je
ljmp
or
xchg
push
adc
sub
mov
jmp
inc
je
stc
cltd
xchg
inc
mov
mov
into
cli
inc
adc
fiaddl
xor
into
jle
ss
xchg
cmp
mov
mov
mov
cmp
push
into
loopne
and
xor
and
ret
jo
mov
in
js
inc
loope
sahf
sahf
inc
jbe
jo
dec
pushf
push
lods
add
ja
xchg
rclb
shlb
into
in
mov
inc
outsb
lcall
add
fsubr
add
stos
ret
mov
call
fsubl
lods
inc
lods
enter
cltd
rorb
add
repz
cmp
adc
xor
adc
test
jecxz
sbb
call
push
enter
lods
dec
movsb
dec
jle
roll
stos
inc
mov
dec
add
stos
sub
push
fwait
ss
xor
pusha
fdivrl
mov
inc
test
inc
hlt
adc
push
pop
xor
test
add
or
dec
adc
sbbl
cli
jb
mov
xlat
xchg
add
aas
cli
dec
pusha
mov
test
ljmp
popa
add
bound
add
stos
xor
mov
fists
mov
xlat
add
dec
enter
pusha
call
test
sub
jp
data16
cmc
addr16
fwait
outsb
or
insl
bound
add
repz
sti
jmp
or
cmpsl
imul
pop
pop
jb
stos
mov
inc
cwtl
inc
xor
and
xchg
mov
scas
or
stos
mov
push
adc
and
or
fiadds
leave
rolb
loopne
or
out
push
pushf
pushf
aaa
ds
cmp
add
sbb
inc
loope
cs
outsb
cwtl
inc
rol
inc
xlat
mov
subl
rcrb
or
clc
negb
xorb
pop
sbb
or
jmp
enter
mov
clc
loopne
mov
mov
ficoms
mov
sub
adc
scas
adc
and
ss
push
cli
aaa
fsub
jo
mov
stos
jecxz
sub
adc
inc
rclb
shll
add
add
lock
or
dec
adc
jg
inc
xor
adc
dec
sbb
pushl
pop
add
xor
negb
adc
sbb
push
push
or
aaa
mov
sti
subl
xorb
lret
add
xchg
aam
push
push
push
inc
mov
add
cli
out
in
push
mov
adc
shlb
test
popa
sub
sub
jbe
or
mov
add
mov
and
stos
sbbl
fs
cmp
mov
mov
adc
add
push
add
leave
les
mov
adc
add
repnz
adc
loop
push
rorb
mov
xorb
push
add
pop
pusha
jmp
mov
in
stos
sub
xchg
movsb
or
inc
mov
scas
dec
or
enter
rclb
xchg
mov
cs
shrb
or
bound
add
inc
add
push
or
mov
push
pop
fcoml
or
mov
push
xor
cmp
mov
mov
and
inc
mov
adc
repz
sub
or
pop
xor
mov
adc
shlb
jecxz
cmp
adc
outsl
dec
adc
gs
add
ss
or
add
jg
addb
dec
test
or
test
cmpsb
hlt
push
pop
inc
popa
inc
or
xchg
or
aam
nop
or
mov
add
and
mov
push
fistpl
add
sahf
and
mov
inc
roll
push
dec
mov
mov
loope
adc
pop
js
aaa
add
push
mov
fisubl
or
push
or
insb
adc
test
pusha
sub
push
xor
lock
dec
jae
cmpsb
or
inc
es
pop
mov
adc
adc
ljmp
cltd
add
adcb
lock
nop
or
add
pop
and
sub
inc
push
add
adc
add
ss
std
add
insl
andb
sub
sub
sub
pop
inc
lcall
xchg
lock
addl
jl
xchg
adc
data16
sbb
movsb
jo
icebp
or
add
push
mov
xchg
push
xor
or
aam
rorb
fwait
sub
push
jbe
inc
nop
adc
mov
pop
mov
lods
inc
pop
mov
mov
adc
pop
xor
rcr
and
inc
dec
in
or
xchg
add
mov
clc
sub
sbb
sub
rorb
nop
xor
and
out
cwtl
sbb
ss
enter
incl
arpl
sub
add
jle
ja
mov
dec
xchg
and
adc
xchg
jno
xor
nop
pop
enter
jnp
and
xor
pop
loop
push
js
lods
data16
rcrb
fs
cmpsb
mov
inc
lret
test
call
shlb
adc
add
xchg
jecxz
add
push
ret
in
xor
gs
std
xchg
mov
lock
dec
and
fwait
pop
or
push
mov
cs
rolb
jmp
test
addb
adc
shrb
mov
jnp
xchg
add
push
into
orb
sbb
lock
adc
aam
cmp
xchg
dec
scas
add
add
mov
mov
sbb
push
call
into
xorl
cmp
nop
add
repz
adc
aad
jl
xorb
mov
inc
pusha
inc
enter
pop
adc
shlb
loop
stos
adc
loope
push
movl
mov
add
push
rorb
es
xorb
pop
pop
leave
xor
adc
andl
sub
in
les
adc
cld
das
mov
icebp
adc
movsb
mov
roll
jo
xor
add
jo
shlb
jl
lea
push
xchg
mov
adc
rolb
or
push
fdivrs
cmp
push
fisubl
add
push
mov
or
imul
popa
add
xor
push
xchg
xor
jmp
hlt
pop
cwtl
ret
mov
mov
jbe
push
sbb
or
adcl
sbb
add
ja
or
adc
shl
push
out
ret
jge
adc
add
or
adc
rcrl
xor
mov
sbb
xchg
mov
push
push
adc
adc
in
ret
pusha
test
pop
and
bound
decl
adc
mov
push
scas
sarb
ret
adc
pop
add
mov
push
roll
add
push
jge
mov
push
xor
push
stos
repz
test
xor
enter
call
and
scas
shrb
loop
mov
dec
mov
rcrb
dec
mov
fwait
pop
out
sub
icebp
or
out
pushf
mov
mov
push
push
add
add
sbb
xchg
ja
mov
stos
jae
nop
cmp
pop
pusha
sub
bound
sub
pop
addb
add
jb
jge
xchg
call
jno
sub
roll
incl
jo
xor
nop
imul
shlb
loope
mov
xor
fsts
adc
mov
sbb
lock
or
lock
and
adc
mov
inc
dec
mov
divb
fildl
push
xchg
shl
sbb
xchg
cs
push
jle
fisttpl
sbb
lock
mov
out
and
cmp
mov
adc
lock
shlb
sbbb
ljmp
lahf
adc
sub
xchg
and
or
add
xchg
push
xchg
add
hlt
addl
out
scas
lea
ss
test
hlt
pushf
mov
sbb
xor
stos
cmp
push
xchg
out
xchg
push
adc
data16
jl
adc
nop
add
sbb
mov
scas
xor
pop
sub
mov
fs
push
or
dec
nop
add
mov
stos
pop
cld
das
push
call
sarl
enter
mov
fistl
rol
shlb
add
notl
aad
cmpsl
and
ficoml
pop
idivl
xchg
jle
nop
cmp
clc
push
jne
lods
add
into
int3
push
mov
pop
add
es
xchg
sub
je
in
add
or
xchg
cmp
cmp
mov
adcl
int
pop
xchg
pop
test
dec
lods
movsb
add
mov
sub
cmp
pop
clc
dec
inc
mov
xlat
mov
out
mov
and
and
or
cmp
sahf
in
push
and
sbb
sbb
mov
lret
add
add
les
inc
ret
stos
mov
or
daa
test
xchg
push
add
inc
int3
mov
xchg
sbb
jnp
sub
int3
enter
add
fmuls
add
call
jae
inc
add
dec
and
ret
xchg
xor
outsl
js
add
adc
subb
xor
push
mov
insb
mov
sub
mov
mov
enter
and
mov
enter
cmp
xchg
andb
add
decb
pop
pusha
xchg
add
es
imul
addb
pop
push
xchg
mov
cmp
loopne
sbb
mov
inc
add
test
inc
and
adc
xchg
mov
rclb
mov
add
push
and
mov
add
dec
fidivs
enter
outsl
dec
mov
rcrb
push
xchg
enter
rcrl
cmp
add
fisubs
push
mov
push
mov
sbb
xorl
add
inc
inc
js
jp
xor
pop
cmp
sbb
add
add
jo,pn
jl
mov
add
out
xor
ret
inc
push
push
in
push
sub
lea
add
dec
loopne
adc
dec
out
rol
push
test
adc
shl
rol
xor
sub
cli
stos
push
push
test
xor
cmpsl
cmp
dec
mov
add
push
or
lea
subb
add
insl
mov
sbb
jnp
ds
mov
push
or
pop
mov
sbb
push
outsb
mov
add
adc
jp
mov
and
or
sub
jle
sub
inc
aas
push
aas
inc
adc
mov
aam
rcrb
addb
push
add
in
lret
mov
mov
cmp
pop
mov
repnz
and
mov
cli
fwait
lods
iret
sbb
outsl
pusha
or
add
mov
test
or
jp
push
adc
out
xor
enter
pusha
xor
lock
mov
lret
test
movb
sub
into
mov
push
adc
loope
std
pop
jg
sub
pusha
pop
out
inc
outsl
das
cmpb
es
pusha
or
xchg
jl
andb
aas
cmp
push
add
sub
push
fwait
jmp
or
add
xchg
fisubs
sub
or
add
ds
gs
jbe
test
adc
nop
jo
inc
cwtl
mov
or
clc
and
mov
mov
repnz
pop
mov
xor
push
add
push
test
imul
test
ss
ret
loop
sub
pushf
bound
andb
fisttpll
sub
and
sub
ja
mov
subl
push
or
xchg
mov
dec
push
inc
inc
dec
xchg
enter
jmp
test
mov
test
add
popa
sbbb
cmp
sbb
mov
push
ljmp
or
gs
pop
push
sbb
push
hlt
sub
pop
pop
inc
cmp
push
xor
outsl
js
loop
mov
jge
bound
inc
inc
or
dec
and
pop
add
xor
lret
xor
xchg
enter
adc
sahf
mov
enter
test
loopne
mov
outsl
inc
jns
and
stos
inc
mov
jnp
or
adc
xchg
popa
mov
lods
pop
sub
lahf
sub
sub
jns
and
jle
andb
mov
popa
cld
inc
or
sub
faddl
popa
loop
ret
add
jbe
or
ficomps
mov
mov
dec
and
add
enter
loope
addl
int
mov
loop
mov
lcall
add
out
pop
push
aad
cmp
pushl
je
push
mov
outsl
jbe
and
adc
shr
or
push
push
adcl
nop
or
jp
cwtl
xor
mov
adc
orb
in
loope
inc
xchg
inc
add
pusha
sbb
sub
push
inc
jne
lcall
cmp
or
and
lcall
orl
fs
subl
addb
dec
sub
in
aaa
or
andb
or
xor
stos
fs
insl
cwtl
loopne
cli
movsl
jae
mov
scas
mov
mov
or
pop
hlt
test
adc
or
cwtl
enter
adc
mov
nop
fnstcw
push
shll
pop
pop
xchg
sub
inc
inc
adc
popf
xchg
les
sub
or
int
sub
cmp
in
jg
pushf
cs
ljmp
adc
iret
push
and
or
ljmp
dec
les
push
add
inc
jl
outsb
mov
idivb
push
xchg
sub
pusha
sbbb
clc
push
les
popa
dec
add
or
enter
lock
mov
xchg
out
push
cmpsb
sbb
xor
mov
mov
pop
pop
add
mov
adc
and
lcall
ficomps
into
adc
adc
nop
or
fs
cmp
sub
lret
outsl
adc
pop
pusha
xor
pop
rolb
stos
add
jle
icebp
pushl
icebp
or
jo
dec
mov
adc
pusha
mov
pop
jp
or
test
cmpb
or
sub
add
sub
sbb
shlb
mov
sub
sbb
adc
xor
ret
xor
adc
push
sarb
jp
add
sub
ror
jne
stos
into
pop
jmp
inc
mov
push
push
mov
dec
xor
adc
adc
sub
shr
bound
and
sbb
rorb
mov
inc
mov
push
es
lds
push
dec
sbb
or
add
xor
lock
sub
or
fidivrs
sbb
cld
aaa
adc
sbb
push
xchg
rorb
and
rcrl
mov
enter
push
cwtl
fdivrs
test
lock
push
and
clc
int
xchg
mov
inc
ss
push
xor
lds
adc
sahf
add
clc
leave
add
sub
add
xchg
bnd
notl
adc
scas
mov
sbb
push
push
lahf
adc
mov
incl
adc
loope
dec
mov
pop
cld
incl
or
and
xchg
mov
outsl
stos
add
lock
test
dec
pop
cwtl
push
sbb
push
loope
jo
arpl
inc
andb
pop
fstl
inc
insb
rcrl
repz
cmc
and
icebp
cmp
test
adc
mov
into
xor
sbb
push
mov
inc
insb
pop
addb
mov
add
xor
fbld
push
sbb
sbb
adc
pop
lock
ljmp
or
xor
into
or
and
sub
or
dec
xor
pushf
cmp
fistpll
stos
xor
xchg
push
ret
or
adc
loop
hlt
decl
and
je
dec
dec
stos
test
ljmp
mov
xor
add
es
pop
jecxz
push
mov
push
incb
sub
arpl
push
push
mov
cmp
fiaddl
adcb
enter
add
mov
cld
sub
andb
daa
add
sub
adc
loopne
enter
add
bound
mov
adc
pop
mov
clc
aaa
test
add
pusha
adc
lahf
push
add
fdivl
and
xchg
or
xchg
push
decb
pop
sbb
mov
push
adc
mov
mov
xchg
out
push
out
ljmp
filds
jo
icebp
incl
adc
lret
mov
mov
jae
inc
ljmp
nop
test
add
sbb
pop
push
shlb
cmp
mov
fcoms
inc
ljmp
dec
js
loope
fs
nop
sub
push
insl
adc
xor
pop
lret
mov
push
rcr
leave
pop
rorb
pop
hlt
incl
mov
ss
sbb
jbe
adc
pop
lret
clc
mov
mov
inc
dec
xor
rorb
adc
mov
rorb
mov
gs
inc
or
or
adc
push
imul
out
loopne
inc
and
cmc
aaa
add
or
movsb
addb
add
jne
pop
sub
rcrb
push
add
ror
int3
push
mov
lods
dec
lods
inc
repnz
or
mov
fs
add
loopne
out
mov
and
or
adc
movsb
and
add
mov
imul
add
test
add
mov
movsb
xor
mov
mov
add
push
sbbb
push
xor
popw
add
add
shl
cmpsb
sbb
xor
push
in
mov
xor
mov
fsubs
adc
cmc
dec
or
pop
outsl
testb
test
adc
bound
dec
mov
lock
fstl
or
xchg
stos
jl
inc
xorb
dec
out
ss
push
repz
dec
pop
pop
dec
subb
cmp
mov
test
pusha
mov
bound
mov
push
push
xchg
pop
adc
adc
test
in
mov
push
popf
xor
jo
jmp
imul
lcall
add
mov
adc
repnz
inc
mov
jp
ljmp
adc
add
xor
mov
pusha
popa
sbb
inc
pop
push
sbb
sbb
push
or
or
push
dec
jbe
xchg
sub
add
pop
dec
and
cmp
push
mov
add
add
std
sbb
fs
xchg
mov
pop
cmc
add
and
mov
aaa
movsl
add
andb
fisubl
call
push
ljmp
into
cmp
lret
xchg
test
scas
push
xor
in
mov
mov
adc
cltd
mov
cmpsl
add
mov
loopne
push
mov
lret
jge
add
out
nop
pop
sbb
adc
jl
movb
and
jne
mov
mov
cltd
enter
xlat
dec
mov
testb
adc
loopne
pop
sahf
fsubrs
pop
lcall
cs
je
movsb
movsb
mov
jle
or
daa
lret
add
sbb
mov
cli
cmpb
sarb
ja
mov
scas
js
js
xor
into
pop
lock
dec
xchg
sbb
adc
inc
cmp
das
dec
shlb
add
pusha
in
cmpsb
push
mov
sbb
add
dec
bound
add
push
jb
cmpb
push
inc
mov
pop
fidivrl
sti
or
daa
aaa
repnz
dec
stos
aam
stos
mov
scas
sub
call
xchg
push
stos
jge
cmp
add
mov
inc
inc
sti
bound
inc
mov
mov
and
sbbl
imul
sub
push
gs
xchg
es
mov
mov
inc
xchg
std
jg
fildll
test
sub
adc
and
push
mov
cmp
test
xor
js
rorl
fiadds
adcb
cmpb
jg
mov
ret
and
aam
aaa
mov
in
stos
add
enter
mov
and
hlt
push
jne
mov
out
je
cli
add
data16
push
pushf
sbb
dec
adc
aas
and
stos
dec
inc
enter
push
mov
add
push
push
and
sbb
add
lret
hlt
add
add
fidivs
mov
inc
test
sbb
push
sbb
pmullw
aad
xor
mov
lds
addr16
xchg
sarb
addl
jg
inc
fiadds
and
lea
cmp
frstor
jle
pusha
sbb
inc
sub
jp
movsl
inc
push
ret
xor
xchg
jle
mov
or
roll
mov
inc
out
cld
dec
add
sbb
push
mov
xchg
roll
aaa
pop
add
sbb
loopne
add
jo
out
sub
push
outsb
sub
or
mov
or
mov
scas
and
adc
push
scas
adc
and
and
popa
and
lods
data16
loopne
inc
arpl
xorb
insl
mov
dec
iret
inc
dec
lret
dec
or
fildll
movl
aas
dec
and
add
fisttps
add
fistpl
push
inc
aaa
and
xor
outsb
cmp
int3
add
jecxz
pusha
loopne
push
mov
add
fcmovnb
add
loopne
shrl
pusha
filds
addb
push
pop
inc
adc
shrl
dec
xor
adc
mov
roll
orb
sbb
adc
and
stos
push
sub
push
inc
xor
orl
rclb
ss
mov
in
rcll
pop
jo
xchg
mov
dec
ret
xor
jp
add
cld
push
addb
jp
mov
rcl
fwait
ret
xchg
test
adc
and
add
loop
cwtl
pop
dec
jg
xchg
test
ss
mov
mov
and
movsl
pop
xor
in
cli
mov
xor
xorl
xchg
mov
repnz
cmpsl
or
bound
inc
mov
lcall
fcoml
popa
adc
fs
mov
test
add
adc
aam
xchg
les
lret
sbb
push
xor
adc
sbb
push
sbb
sbb
pop
pop
cmc
xchg
andb
and
add
sti
push
mov
and
add
jg
loopne
sbb
lods
nop
fmuls
mov
es
mov
adcl
pop
push
mov
scas
and
in
or
xor
inc
popa
rorl
add
sub
or
xor
lcall
ljmp
add
add
xor
pop
or
pop
push
std
icebp
xchg
push
push
es
sbb
sbb
jle
jnp
test
pop
adc
push
scas
cmp
and
push
push
int3
pop
mov
les
and
arpl
adc
sbb
add
jle
xchg
xchg
cld
inc
in
pusha
jl
sahf
cmp
lret
mov
mov
and
loop
or
mov
pusha
sub
mov
mov
mov
mov
push
sub
data16
loopne
scas
fdivs
into
pushf
or
scas
xchg
mov
pop
sbb
loop
inc
pop
sub
mov
xchg
add
loopne
rcl
shl
push
cwtl
mov
daa
inc
es
mov
lcall
sbb
jge
add
rorl
nop
fstpt
fcmovb
stos
mov
call
ret
and
addl
or
out
xchg
jo
filds
movlps
mov
pop
aad
lock
mov
jne
shll
or
pop
lret
adc
push
mov
push
nop
test
xor
je
pop
add
add
dec
adc
js
inc
insl
sub
inc
mov
inc
or
mov
popa
xor
pop
fwait
inc
adc
inc
aaa
sbb
loopne
lret
pusha
adc
mov
push
mov
mov
and
scas
subb
add
push
pop
movsl
pop
imul
sbb
push
int
push
jno
mov
xor
pop
mov
orb
ljmp
push
cmp
adc
popa
add
pop
cli
push
add
adc
dec
test
push
adc
dec
mov
add
daa
stos
fbstp
adc
sbb
xlat
or
xchg
pop
bound
mov
insl
mov
adc
cmc
mov
push
icebp
add
add
xor
and
scas
scas
mov
shll
mov
lock
add
and
and
and
addl
xchg
sub
lds
in
shlb
jecxz
or
add
jbe
push
rcrb
das
and
xchg
cmp
mov
push
add
sbb
and
std
or
add
or
xor
push
sbb
add
outsl
imul
lock
dec
arpl
imul
xor
fwait
ss
imul
dec
fwait
inc
add
scas
dec
lods
ret
push
lock
xchg
mov
jmp
fcmovnu
int
or
push
push
push
out
add
add
pop
xor
sbb
jmp
pop
xchg
test
sbb
mov
mov
mov
add
or
pop
or
subb
js
or
add
mov
add
mov
sarl
inc
gs
nop
mov
pop
ds
nop
or
add
loope
push
icebp
add
jg
pusha
roll
dec
mov
add
je
stos
adc
add
push
add
and
imul
out
push
add
call
pop
or
push
add
mov
jecxz
xor
mov
imul
add
popf
add
push
lock
shl
sub
cmpsl
insl
add
rol
testb
jno
push
jno
outsl
jle
push
out
fidivs
lret
mov
adc
cld
sub
lock
mov
stos
test
or
mov
xchg
aaa
sbb
adc
dec
adc
in
inc
loope
mov
inc
das
or
mov
stos
jne
aas
jae
push
in
dec
lock
jne,pn
ds
or
data16
lock
jne
fisubl
add
out
add
xor
addr16
mov
in
add
mov
mov
imul
xor
cmp
push
test
pop
pushf
cmpsb
std
xor
mov
pop
sbb
pop
je
jecxz
stos
je
stos
add
cmp
testl
xor
cmpsl
sbb
insl
stos
xchg
sub
adc
mov
add
mov
inc
mov
int
sbb
cmp
rcll
mov
push
std
movsl
mov
divb
push
mov
sub
cmp
or
push
lret
mov
mov
dec
ds
add
add
out
adc
jnp
add
push
fcoml
cmpl
dec
xorl
pop
xchg
std
or
push
or
sbb
or
lcall
mov
and
push
jb
addr16
or
sti
pop
and
xchg
sbb
scas
mov
aaa
jb
in
outsl
and
or
push
jno
dec
pop
pop
pushf
xor
addr16
or
sbb
mov
sbb
sub
add
cmp
xor
xchg
and
jmp
jne
in
sbb
aaa
int3
mov
lcall
lea
cmp
xor
add
add
jnp
ja
ffree
mov
ljmp
jmp
jp
dec
leave
add
lds
roll
cmp
add
xor
push
sub
and
adcl
pushw
xlat
mov
mov
mov
scas
pop
add
fcmovbe
pop
jne
jno
lcall
mov
xor
inc
pop
adc
pop
sbb
cli
add
ljmp
lods
insl
push
ficoml
add
into
repz
fldt
cmp
fists
or
sbbl
inc
sub
add
stos
in
cmpsb
jns
push
jmp
fstps
ror
leave
lcall
sub
sub
cmpsb
jns
adc
add
cmpsb
jns
jns
jno
cmpsb
jns
cmpsb
imul
jns
push
push
dec
dec
inc
inc
fcmovbe
xor
mov
mov
push
test
sbb
dec
shll
xchg
lea
xor
ss
shrb
xor
rcrl
in
fstp
shll
rcl
ror
leave
lds
xor
sarl
dec
shll
and
xor
rcll
dec
shll
add
jne
insl
xor
shll
gs
pop
pop
shll
rcll
dec
dec
inc
jnp
out
inc
mov
mov
push
lcall
mov
lcall
andl
push
jno
mov
adc
mov
add
mov
or
pusha
jo
mov
daa
sub
mov
pop
and
mov
imul
adc
pusha
add
lcall
pusha
add
shll
imul
dec
sbb
inc
pop
stos
xchg
fs
sbb
jns
imul
sbb
popa
xor
jns
pop
pop
push
push
add
dec
std
es
cli
inc
add
imul
insl
shll
cltd
push
xchg
add
cwtl
adc
mov
les
rol
rol
call
xor
shll
jmp
jo
dec
rcl
shll
mov
xor
cmp
movsl
fnstenv
pop
mov
inc
inc
mov
shll
and
cmpsl
push
sbb
inc
sbb
movsl
cmp
inc
mov
int3
shll
sbbl
mov
and
mov
or
pusha
jo
mov
sbb
inc
adc
imul
mov
pusha
dec
aas
ret
mov
pop
push
or
pop
push
jno
sub
fwait
clc
fdivs
cmp
mov
push
add
mov
adc
mov
adc
jnp
das
sbbb
cli
xor
pop
imul
out
jg
rcrl
pusha
test
popa
and
sub
mov
or
inc
popa
insl
rcrb
jo,pt
ss
add
xor
and
xor
or
lcall
xchg
mov
std
jg
push
insb
sbb
xchg
pop
jo
mov
pop
mov
add
test
fdivl
loope
pop
int3
lret
mov
je
adc
addb
dec
andb
pusha
cmp
jbe
add
sub
aam
mov
orb
arpl
bound
mov
mov
push
inc
ss
or
mov
adc
add
or
push
loopne
mov
adc
pop
int
lcall
or
ljmp
jb
pop
sbbb
bound
add
dec
stos
mov
sub
mov
insb
inc
add
push
stc
mov
cli
aas
inc
adc
popa
add
inc
inc
add
add
ljmp
jg
mov
add
loop
inc
push
jg
adc
jb
sbb
and
mov
mov
je
ds
aaa
cld
decl
or
pusha
and
cmp
roll
inc
adc
and
add
or
jmp
sub
dec
and
xorb
mov
or
sub
dec
mov
push
lock
mov
sar
addb
clc
outsl
fimull
jmp
add
push
je
xor
adc
add
push
adcb
add
sti
or
aam
pop
and
and
jbe
adc
and
roll
or
stos
out
add
add
push
stos
adcl
pusha
adc
aaa
mov
daa
stc
and
loopne
mov
push
das
call
call
add
or
insl
arpl
cs
jmp
pop
mov
or
les
push
stos
cltd
lock
adc
adc
test
idivb
movb
nop
and
sub
and
les
mov
or
mov
icebp
adc
push
cs
sbb
out
add
sub
adc
jno
mov
mov
or
inc
mov
jb
das
jl
out
push
in
add
pop
or
adc
add
add
adc
cmp
or
dec
sar
pop
dec
cwtl
mov
sbb
stos
push
mov
or
add
add
cld
add
inc
sub
pop
push
and
rolb
add
jbe
loope
push
push
loope
pusha
push
inc
cmc
add
repz
testb
es
in
sub
lock
das
push
xorb
dec
adc
sbb
leave
push
or
aam
push
inc
jo
shlb
inc
push
push
inc
aam
imul
pop
push
dec
ljmp
rolb
stos
dec
stos
inc
push
add
or
jno
or
lock
mov
inc
mov
mov
mov
rcrb
pushl
or
mov
aad
ss
or
add
jno
push
inc
addb
pop
flds
cli
mov
add
das
pusha
das
je
xor
and
stos
divb
clc
push
and
dec
inc
sub
push
jle
rcr
mov
add
add
and
pop
pop
and
inc
mov
jo
es
insl
mov
mov
fisubl
inc
jmp
dec
mov
sub
sbb
and
fmull
mov
push
aas
enter
xor
push
adc
and
loopne
fs
sub
push
push
stos
je
add
clc
xchg
dec
cmp
and
ss
adc
dec
inc
push
add
aaa
mov
add
push
sub
icebp
sbb
lcall
xchg
mov
push
sahf
int3
add
jle
adc
and
or
stc
cwtl
mov
sub
sbb
xchg
data16
xchg
shll
push
fcom
add
movsb
add
fistl
cmpsb
lods
stos
int3
scas
cli
fists
cmp
inc
add
push
push
aaa
add
sahf
xor
push
xor
jge
fimull
sub
sbb
inc
add
pop
add
add
inc
push
in
jne
or
and
mov
jae
pop
add
inc
mov
add
sbb
jo
push
inc
cmp
clc
mov
jmp
nop
dec
test
add
adc
les
mov
les
adc
push
inc
stos
clc
insb
fcomp
pushl
stos
hlt
pushf
inc
lds
pusha
stos
jecxz
add
adc
xor
cwtl
lret
add
fwait
pop
dec
or
in
clc
push
scas
inc
out
js
sub
add
adcl
int
mov
addl
arpl
sbb
adc
inc
xchg
stos
lret
add
fildl
mov
enter
mov
dec
mov
jg
aaa
push
jg
push
mov
in
aaa
dec
jg
adc
dec
aaa
inc
push
shrb
or
ja
or
clc
push
mov
push
shll
jge
lods
jns
out
jne
ljmp
jno
adc
jg
aaa
imul
out
aaa
popa
push
jg
aaa
pop
jle
cld
lods
dec
pop
add
push
jg
sbbb
sub
xchg
nop
decl
cld
outsl
mov
xchg
or
int
test
dec
es
loopne
jmp
or
or
mov
xchg
enter
sbbb
jle
push
cmp
add
mov
mov
push
add
outsl
xchg
push
insb
cmp
shlb
jb
sbb
sbb
mov
sbb
rorl
add
sbb
adc
add
es
fisubrs
call
dec
ss
sti
mov
ret
inc
push
addb
addl
or
fidivs
jb
mov
push
pop
mov
es
es
shlb
and
aad
lock
mov
imul
inc
sbb
cwtl
mov
push
add
push
popa
fwait
inc
jne
adc
dec
or
sarl
test
ret
popa
or
or
ljmp
outsl
or
inc
aaa
pop
call
test
mov
andb
aas
inc
push
mov
jg
jle
jnp
or
mov
ret
xchg
inc
push
cmp
push
add
sub
push
dec
decb
mov
cmp
inc
movsl
mov
sbb
jno
sbb
jg
shl
mov
daa
dec
roll
jo
aam
mov
movb
lret
aas
aas
or
cmpb
adcb
and
subl
and
in
outsl
aam
ret
data16
ds
or
fsubrs
pop
ds
fs
leave
or
mov
push
inc
loopne
test
decb
push
adcl
andl
arpl
repz
das
fimull
add
mov
sub
inc
add
in
jg
fists
pushf
scas
test
add
aaa
enter
sbbb
push
lahf
pusha
or
call
icebp
cltd
sahf
inc
adc
add
push
push
pop
imulb
in
pusha
add
push
mov
or
or
scas
inc
ljmp
pushf
test
negl
test
add
lcall
push
mov
adc
rcr
mov
push
imul
lcall
aad
push
cmpsl
or
pusha
adc
pusha
and
cmp
mov
sub
mov
test
or
cmp
ds
jge
sub
aaa
test
rcll
loopne
cli
stos
test
and
xor
loopne
popa
add
jo
mov
je
jo
mov
inc
cmp
mov
popa
outsb
mov
lods
mov
lahf
ljmp
sub
stos
pop
inc
movsl
adc
fisubl
xor
jae
jmp
lahf
out
and
pop
xchg
cmp
mov
lcall
adc
push
mov
ret
rdtsc
mov
xchg
xorb
jnp,pt
ja
cmc
push
rcr
stc
sbb
xchg
add
fisubrl
push
das
jne
dec
sub
push
sbb
cmpsl
test
xor
jmp
pop
add
sub
xchg
fdivrl
testl
shlb
lock
jle
out
mov
sbb
test
cmc
imul
add
fisubrs
xor
jo
mov
mov
mov
sti
jmp
popa
loope
imul
cmpsl
or
push
pop
dec
mov
out
aad
jns
dec
inc
aas
adc
adc
rorb
xor
addl
sbb
sbb
stos
or
sarb
push
dec
mov
cmp
xor
push
mov
mov
aaa
lea
jb
adcl
sbb
sahf
pop
decl
jo
stos
cmpsl
inc
xchg
in
fscale
aas
pop
sub
leave
cs
outsl
je
setne
inc
xchg
or
jns
xchg
scas
movsl
push
mov
jmp
aad
cmp
das
and
pop
jne
pop
outsl
cmp
mov
lods
ds
xchg
jb
xor
addb
mov
mov
cmp
inc
movsb
fwait
lcall
push
repz
and
int
mov
push
sub
sub
stos
push
or
inc
sub
ficoml
sub
sti
or
out
xor
inc
dec
or
push
pop
inc
inc
sub
js
adc
sub
mov
sub
dec
cmp
inc
cmp
jnp
mov
shl
mov
mov
lock
and
xor
cmp
cmpsl
sbb
stc
inc
lds
test
push
scas
sub
test
inc
jo
or
xchg
sub
ret
sub
push
sbb
sub
pusha
popa
jnp
test
ret
aaa
fwait
and
ret
inc
or
adc
inc
push
ret
adc
inc
inc
pop
sbb
sub
ret
fucomi
adc
cmp
pop
mov
das
sub
test
repnz
xor
das
mov
mov
imul
adc
lds
stos
sahf
or
and
ljmp
aaa
inc
xor
es
pop
mov
icebp
inc
adc
xor
lods
fldcw
or
xor
mov
add
addb
mov
ficomps
push
cmp
sbb
fidivl
and
daa
daa
sub
sub
fadds
pop
cmpsb
adc
jo
mov
rcrb
test
xor
pop
adc
and
das
add
jbe
es
cs
sub
pop
sub
pop
mov
mov
aaa
ret
rolb
jbe
push
or
pop
and
push
add
mov
cs
xor
das
sub
add
adc
pop
add
or
jno
jb
test
mov
push
lock
shlb
orb
adc
push
loopne
mov
sbb
add
add
add
mov
xor
mov
adc
sub
mov
or
xchg
add
sbbb
or
loopne
dec
es
inc
das
sub
fistps
test
cmp
and
add
mov
xchg
and
decl
add
add
push
xor
xor
push
xor
pop
push
mov
fisubrl
cmp
inc
std
es
xor
sbb
add
xor
and
test
ret
out
adc
add
pop
lods
add
add
in
xor
js
jg
inc
adc
je
aaa
xchg
push
je
loop
shrd
inc
adc
jl
push
cmp
mov
inc
sbbl
lret
xchg
adc
pop
mov
or
ljmp
push
jno
jo
lret
jp
xor
into
xor
and
out
adc
sub
xor
fnstcw
es
xor
insl
add
je
add
or
xor
xor
sub
sub
cs
add
adc
data16
push
inc
nop
repnz
adc
std
add
xor
or
sbb
lock
lock
ljmp
pop
adc
mov
pop
mov
add
add
ss
jg
sbb
clc
and
inc
add
jo
jno
mov
testb
add
mov
sub
das
sub
jg
es
adc
sub
dec
pop
adcl
fcmovnbe
das
fdivr
or
lcall
add
xor
icebp
and
movsb
andb
addl
ss
sahf
or
sbb
and
shll
xchg
and
xchg
mov
lods
add
pop
sub
cmp
les
cs
divps
ret
nop
fcoml
push
negb
or
ljmp
cli
lret
mov
mov
or
test
cmpb
test
or
sbb
pop
sub
xor
adc
push
adc
ss
sub
adc
and
subb
jno
inc
sub
xor
les
pop
sbb
outsb
pop
fs
rcrb
inc
cmp
mov
dec
adc
push
sbbl
sub
es
leave
adc
xchg
inc
mov
adc
jl
pop
lret
adc
pop
rclw
repnz
pop
push
pushl
push
adc
push
mov
pop
push
popf
outsb
mov
add
and
adc
inc
xor
push
je
movsb
sbb
jo
jp
stos
fildll
or
or
xor
add
xlat
pop
pop
inc
lods
inc
or
and
inc
pop
test
cmp
push
fwait
xor
jle
adc
scas
test
mov
rol
sbb
sarb
arpl
out
push
xchg
ss
add
sub
mov
adc
pop
push
push
ss
add
sbb
fdivr
test
inc
pop
jbe
inc
push
xlat
add
sub
mov
in
push
out
orb
pusha
or
xchg
add
cmp
shll
in
xchg
cs
jle
sub
sbb
es
loope
mov
inc
ja
lds
add
cli
mov
pusha
pusha
jg
shl
xor
inc
and
fadds
pop
sbb
add
pop
push
scas
or
ss
mov
adc
jp
pushl
and
dec
ret
dec
xchg
push
dec
in
lock
sbb
clts
add
setno
xor
sbb
decl
xor
or
push
and
and
sbb
add
jl
cmp
rcll
ret
xorb
push
sub
dec
inc
dec
add
sub
jg
nop
xor
aas
sbb
or
ficompl
and
pop
and
pop
xchg
ljmp
outsb
loope
scas
incb
push
add
inc
inc
xchg
in
sub
and
or
shrb
clc
fistpll
ret
loopne
shlb
and
dec
mov
mov
push
or
movsl
push
sub
adcb
andb
orb
or
inc
mov
or
xchg
adc
daa
test
lcall
fwait
pop
add
hlt
dec
push
or
xchg
and
mov
and
sub
imul
das
lcall
inc
test
js
sbb
mov
daa
push
les
xor
and
lods
addb
test
add
add
or
xor
jne
adc
out
push
adcb
xor
loop
ret
or
popa
jae
add
pop
lods
clc
sbbb
add
add
or
sti
mov
mov
add
loopne
push
repnz
callw
jno
out
in
fsubrl
inc
adc
lock
jp
or
push
add
add
bound
ja
lcall
mulb
inc
movsb
fdivrp
inc
idivb
and
push
mov
clc
cmp
or
arpl
xor
movsb
sbb
mov
xor
repnz
sub
xor
jo
or
pop
add
inc
in
adc
sbb
mov
aas
push
aam
pop
loope
call
out
push
dec
das
call
add
xlat
icebp
add
add
pop
and
add
fistl
xchg
in
push
sbb
add
or
adc
pop
mov
or
test
mov
int3
sub
sarl
add
das
sub
and
and
dec
mov
sbb
sub
aam
dec
mov
das
ljmp
inc
push
push
cmp
aam
es
lock
push
rclb
cmp
push
sti
outsl
nop
bound
jns
pop
mov
push
loopne
ljmp
xor
nop
xor
jp
and
pop
xchg
add
xor
popa
icebp
push
test
or
xor
inc
ljmp
add
sbb
push
xor
push
or
jb
dec
add
jp
add
sub
jb
pushf
pop
and
xor
daa
xor
mov
insl
add
rcl
add
xor
or
lret
add
lahf
add
or
adc
cmp
das
jecxz
mov
lock
scas
call
paddq
syscall
xor
shll
pop
lcall
add
sub
adc
pop
jo
pop
jno
cmp
cmp
mov
mov
inc
jg
adc
cs
roll
mov
add
push
pop
or
sub
adc
push
adc
xlat
inc
call
ds
call
add
stos
ljmp
and
int3
sub
cld
add
jbe
pop
add
push
fmuls
pcmpeqb
cmp
add
push
xor
jecxz
scas
inc
scas
ret
dec
pop
xlat
out
clc
rclb
loopne
xor
push
js
mov
clc
adc
xor
mov
push
mov
popa
or
sbb
fisttpl
inc
mov
or
dec
inc
and
test
imul
lret
xor
fdivp
call
or
add
sub
mov
push
or
sbb
sbb
loopne
mov
cmpb
add
mov
sbb
adc
jl
adc
enter
je
inc
push
ss
outsb
and
mov
cmp
xor
jo
nop
xchg
add
mov
xor
out
sbb
pop
inc
in
ljmp
dec
xchg
pop
jo
or
clc
sysret
and
xor
loope
jmp
outsb
repnz
xchg
push
adc
push
or
mov
cmp
decl
mov
push
push
push
pop
cli
add
xor
or
fstpl
mov
mov
sbb
call
stos
int
cmp
jno
mov
je
outsl
inc
xchg
xchg
loop
or
inc
shll
and
mov
inc
xor
push
push
adc
push
push
adc
ret
sbb
fcoms
add
jns
bound
scas
rolb
add
add
call
mov
sbb
adc
sub
xchg
xor
fwait
stos
push
jl
aam
fcmovb
mov
and
movsb
inc
add
xchg
jecxz
xor
xchg
rcr
sbb
cmc
xchg
or
sbb
repnz
sbb
xor
xor
hlt
aaa
jae
filds
sub
lcall
das
mov
or
pop
push
and
mov
cmp
jle
mov
cmp
repnz
add
xor
jo
add
xor
cmpsb
mov
mov
dec
ret
push
add
xor
inc
add
cmc
aam
sub
insl
inc
enter
add
pop
roll
andb
mov
and
sub
jo
xlat
call
sub
mov
daa
xor
mov
adc
push
add
xor
fucomi
mov
sub
xchg
jae
enter
mov
and
sarb
lret
jo
adc
sub
add
ret
arpl
mov
or
mov
sbb
adc
add
push
sahf
or
or
and
pop
lcall
inc
and
das
adc
mov
or
sub
and
jne
add
or
sbb
fcmovu
mov
iret
xor
sub
inc
iret
aas
push
ret
xchg
adc
mov
jp
insb
test
test
and
stos
inc
sub
pop
mov
fdivl
xor
or
mov
sub
xor
xorb
lods
sub
push
cmp
push
movsl
xor
sbb
cmp
add
cmp
add
call
ss
adc
mov
pop
mov
dec
add
push
and
mov
xor
dec
push
jb
and
or
mov
mov
mov
add
add
popa
inc
mov
inc
fimuls
inc
xor
pop
sub
mov
xchg
add
or
ss
adc
sbb
pop
dec
lods
stos
ljmp
sub
cmp
or
sub
or
sub
xor
inc
xor
sub
sub
js
and
add
xlat
sbbb
sub
and
js
push
mov
push
add
mov
orb
or
or
je
test
push
cmp
les
xor
sub
or
fsubrl
jbe
or
adc
xor
push
push
jle
subb
and
dec
loopne
mov
xchg
test
push
mov
push
inc
roll
scas
or
rol
daa
fadds
movb
daa
and
mulb
mov
push
xor
push
push
sub
and
repnz
shlb
das
shrb
push
jb
rclb
test
and
stos
inc
or
inc
decb
jecxz
scas
adc
inc
add
cmp
jnp
inc
and
addl
nop
test
cwtl
xchg
inc
int3
adc
pop
les
mov
jl
push
lods
je
or
push
xor
add
push
add
or
or
pop
notb
add
fdivl
andb
push
dec
inc
xchg
lds
sub
pusha
xor
bound
andl
inc
inc
int3
inc
and
adc
jae
adc
and
inc
add
adc
imul
ror
in
sbb
sbb
mov
fidivl
cs
sti
or
or
sub
or
cmp
mov
inc
rorb
dec
es
inc
sbb
push
sub
ret
nop
or
adc
mov
nop
push
lock
bound
push
cld
jecxz
mov
das
nop
add
add
andl
or
and
daa
inc
movsb
and
or
adc
insb
pop
xchg
mov
mov
inc
add
xor
xor
push
pop
or
sti
add
bound
adc
sarb
ffree
and
fiadds
sub
add
data16
mov
lds
mov
sbb
mov
pusha
cs
and
jbe
xchg
push
sub
inc
jo
cmp
aaa
pop
mov
cmp
lock
and
loop
jb
shll
scas
fbld
sbb
mov
outsl
loop
push
aam
scas
clc
inc
adc
or
push
mov
popf
movsb
sbb
jl
push
adc
adc
mov
jl
stos
dec
aaa
cwtl
pop
movsb
sbb
loopne
andb
call
or
add
inc
adc
adc
test
pop
sub
mov
hlt
loopne
sub
inc
dec
cld
in
orb
outsb
sbb
subb
mov
out
add
sbb
add
push
and
add
mov
xorb
out
adc
pusha
push
fsubs
je
rcrb
or
mov
repnz
and
das
clc
and
loope
inc
paddusb
mov
mov
rclb
adc
bound
inc
sbbb
sbb
pop
push
adc
adc
fiaddl
pop
lcall
or
in
and
sbb
sbb
add
es
add
sub
mov
jmp
add
cmpsl
bound
and
xor
mov
sub
or
loopne
aam
out
jle
jmp
add
and
jne
fisubrl
mov
push
sbb
aam
mov
pop
bound
test
add
sarb
add
mov
add
sub
xor
aaa
jl
movsl
add
push
sbb
or
cmpsl
loop
inc
sbb
xor
outsl
sub
test
xor
xor
ljmp
sti
and
bound
and
mov
xor
xor
push
cli
ss
inc
js
add
fldcw
not
and
inc
test
clc
and
das
pop
fiaddl
fucom
push
ljmp
sbbb
dec
mov
js
je
jg
and
and
push
adc
adc
shlb
or
jbe
adcl
dec
add
inc
je
add
inc
sbb
xchg
jg
enter
and
out
nop
adc
out
add
and
jmp
add
push
push
adc
sbb
add
sarb
and
mov
movsl
push
insb
and
cld
inc
mov
movsl
mov
add
inc
push
jbe
add
dec
add
add
push
pop
sub
cmp
pop
jecxz
and
pop
add
cmp
fisttps
adc
push
mov
jp
dec
add
push
or
std
pop
add
pop
sbb
int
and
sbb
pop
adcl
divb
push
fisubrs
add
add
or
test
add
add
xchg
mov
dec
inc
into
push
in
fldl
mov
ret
ret
add
add
in
mov
or
add
mov
shr
add
jbe
stos
pushl
into
mov
mov
std
add
mov
test
jmp
xor
insb
movl
pop
imul
mov
xchg
in
mov
test
or
add
mov
popl
jecxz
mov
add
es
dec
ss
pop
mov
push
sbb
cmpsl
in
mov
rcll
scas
adc
push
push
jle
push
js
add
rcrl
inc
sbb
in
les
pop
out
je
xchg
mov
push
hlt
pushw
idivb
mov
aaa
sub
mov
sahf
ret
sub
leave
inc
adc
or
sbb
rcll
add
jl
jle
xchg
loopne
test
mov
pop
mov
out
and
sub
mov
pop
mov
cmp
xchg
mov
xchg
dec
pusha
jle
pop
cld
pop
jne
add
xchg
lods
xor
in
cmp
inc
incb
je
test
jo
cmp
notb
cmp
movsb
xor
mov
push
in
call
cmpsl
jl
shlb
xlat
movsl
mov
xchg
js
pop
mov
sti
and
std
fldlg2
jl
and
xlat
and
pop
repnz
xor
adc
mov
js
jl
push
mov
addb
repnz
push
clc
sbb
xchg
lods
insb
into
inc
std
aad
push
mov
out
push
fs
out
jmp
cmpsl
jmp
aas
add
jge
cmp
add
xor
mov
sarb
dec
pop
sub
inc
add
lret
aaa
push
mov
xchg
js
lahf
lret
sbb
repnz
mov
add
in
movl
ss
add
insl
jns
jo
pop
xchg
pusha
cwtl
jno
inc
rcrl
jp
ljmp
out
in
divb
mov
adc
pop
add
hlt
or
cmpsb
call
data16
nop
in
lea
data16
inc
in
out
xchg
hlt
out
popf
orl
movsb
lret
sbb
push
jne
clc
jg
adc
popa
es
mov
mov
xlat
ds
popfw
faddl
lea
fwait
dec
xor
sub
pop
andb
rol
add
cmp
sub
adc
ds
push
sub
sti
add
push
fcmovnbe
mov
xchg
sti
add
push
hlt
add
cmp
mov
inc
add
movsl
sub
int
mull
incl
fsubrs
mov
and
int
xchg
xor
sti
add
mov
sub
js
sbb
sbb
jnp
imul
bswap
lods
insb
mov
lods
xchg
adc
sarl
jp
js
rorb
add
add
and
fisttps
test
or
cmp
or
xchg
mov
sti
jg
add
jle
inc
or
inc
dec
pop
or
inc
incl
or
fisttpl
and
sbb
test
movlps
add
pop
adc
jl
dec
nop
cltd
cs
add
push
ss
mov
add
arpl
pop
push
push
add
lods
mov
inc
mov
push
stos
add
fdivs
mov
negl
jmp
aaa
cwtl
fistpl
pushf
repz
test
inc
sbb
dec
imul
xlat
dec
ror
add
sbb
or
add
aaa
cmp
push
push
or
insl
add
add
pop
hlt
add
je
je
jnp
jnp
jnp
jnp
adc
int
cld
jnp
jnp
jnp
pop
jnp
jnp
jnp
aas
jnp
jnp
jnp
clc
test
fistpll
jnp
jnp
jnp
jnp
add
jle
repz
in
aam
dec
add
jge
jge
jge
adc
jge
jge
jge
inc
repz
jg
jge
jge
jge
jge
jge
jge
out
outsl
push
cltd
and
jge
adc
jge
and
outsl
cmpsl
jge
jge
jge
inc
jl
jl
jl
mov
outsl
jl
jl
jl
pop
jl
jl
jl
jl
jl
xor
jl
iret
jl
mov
out
jl
jl
push
repz
jl
jl
jl
jl
shrb
add
push
loop
mov
inc
jae
jae
jae
jae
jae
jae
int
mov
adc
jae
jae
jae
daa
jae
jae
jae
int
jae
jae
jae
out
out
jae
jae
xchg
jae
mov
cld
int
lahf
cmpsl
jae
jae
jae
inc
jb
jb
jb
jb
jb
aaa
jg
outsl
jb
jb
pop
jb
jb
jb
daa
jb
jb
jb
repz
jg
jb
jb
jb
out
out
jb
jb
xchg
jb
jb
jg
aaa
jb
jb
jb
jb
inc
jno
jno
jno
addr16
mov
adc
ja
mov
jno
jno
jno
out
jno
jno
jno
jno
jno
jno
jno
out
out
out
out
divl
xchg
jno
jno
cmpsl
jno
jno
jno
out
jno
jo
jo
jo
addr16
jo
jo
pop
jo
jo
jo
push
push
test
int
jle
jo
jo
jo
jo
jo
jo
cmpsl
jo
jo
jo
adc
fbstp
ja
ja
ja
push
mov
daa
ja
push
aaa
ja
ss
ja
ja
ret
mov
ja
ja
ja
xchg
fsts
sti
add
add
pushl
jbe
jbe
jbe
jbe
ret
jbe
jbe
jbe
jbe
daa
jbe
jo
sub
pop
add
mov
cmpsb
or
xchg
jbe
jbe
jbe
int
cld
cmpsl
jbe
jbe
jbe
inc
jne
jne
jne
addr16
mov
jne
adc
or
push
adc
pusha
xor
push
mov
sti
push
pusha
jo
jg
cmp
loopne
mov
adc
cs
lcall
loopne
xchg
xchg
js
js
js
js
fwait
ret
or
shr
adcb
jg
jg
jg
xchg
mov
jle
jle
jle
and
jge
mov
dec
inc
lods
push
adc
pop
jecxz
test
inc
popa
inc
and
add
inc
jae
jae
mov
jae
jae
adc
jae
jae
jae
cmpsb
jo
sub
aad
or
and
jb
cmpsb
pop
cld
jo
jo
fnsave
sub
ja
shrb
or
pop
fwait
ret
sbb
and
pushl
fidivl
jecxz
in
call
cli
jbe
jbe
dec
loope
imul
mov
sti
fwait
repnz
sbb
jge
and
jne
adc
aaa
jg
jne
jne
jne
lods
jne
jne
jne
je
in
push
cwtl
fisubl
add
add
hlt
jnp
adc
jo
fwait
and
movsb
or
jp
jp
adc
xor
jp
jp
jp
das
ljmp
add
js
js
js
mov
loop
adc
js
js
js
xor
insb
jg
jg
adc
jg
push
push
lods
dec
loope
cmp
cmp
xlat
xor
xor
jle,pt
jle
and
jle
jle
loopne
mov
imul
jle
jge
add
int
ss
add
pusha
ja
sarl
add
popa
movsb
jmp
pusha
or
lcall
mov
jo
jo
jo
movsb
or
insl
inc
inc
cmpsb
jo
sub
mov
out
jmp
sbb
je
jnp
and
lcall
mov
xchg
jp
add
add
fcmovnbe
dec
jns
adc
daa
js
sarl
js
jg
and
outsl
mov
cld
jg
jg
js
fwait
ret
add
pop
cld
incl
jge
jge
jge,pn
jge
loopne
mov
scas
stos
dec
shl
mov
dec
rcrb
cmpsb
test
pop
mov
jae
in
adc
jb
jb
adc
jb
jno
jno
fs
cwtl
push
push
popa
mov
mov
pusha
loopne
add
jnp
sub
mov
js
js
xor
js
jg
add
movsl
jg
jg
jle
push
jle
and
jg
fildl
rol
sbb
in
test
jae
jo
jo
jle
mov
fcomip
stos
and
mov
add
jbe
jne
je
cmp
dec
loopne
nop
dec
pop
mov
jnp
jnp
jnp
gs
jp
jp
jp
out
jp
jg
pusha
sub
fildl
pop
arpl
jl
jl
and
jl
or
cli
fistpl
jecxz
fneni(8087
or
jae
jae
jae
jae
jae
jae
jb
jb
jb
add
mov
mov
mov
cld
pusha
mov
jo
adc
push
hlt
jg
sub
ja
adc
dec
jbe
jbe
add
pop
lcall
je
je
adc
jnp
loopne
std
jnp
add
jp
jp
jp
adc
jp
and
jg
pushl
xchg
jp
add
jns
jns
jns
stos
js
js
js
adc
jg
mov
sbb
jg
sbb
xchg
mov
ret
jg
xor
xor
jae
jae
adc
jb
jb
jb
jb
mov
cld
add
push
mov
cs
sub
cli
jo
clc
loop
xchg
ja
jbe
hlt
outsl
cli
fwait
bound
jne
push
or
mov
fcmovnu
or
dec
je
je
adc
insl
je
je
adc
das
je
decl
shll
je
je
in
je
je
je
sub
and
js
js
js
jg
and
add
jg
xor
push
jg
jg
push
jl
pop
add
adc
xchg
jg
inc
dec
jle
jle
pop
jge
hlt
pushl
or
jge
jl
insb
mov
jae
jae
jb
add
jno
push
cld
call
jno
jno
add
jo
jo
jo
je
jbe
jbe
nop
dec
adc
mov
ljmp
dec
pop
jne
jne
jne
jne
jne
jne
add
cld
jo
popf
jne
jne
add
xor
je
je
aaa
cld
int
adc
je
je
je
test
jnp
nop
adc
jnp
jg
mov
cld
jns
add
jns
js
js
cmp
js
js
js
out
aam
incl
xor
jg
adc
dec
adc
into
icebp
sbb
mov
lock
add
fcomip
jae
jae
xchg
jae
jb
jb
jno
call
adc
ja
jne,pn
jne
ret
je
je
and
and
je
jo
jns
js
js
mov
jmp
sub
jle
jge
adc
mov
fbstp
call
ja
xor
add
jle
push
mov
or
mov
jno
push
push
mov
cli
jns
scas
jns
js
xor
cwtl
jne
cmp
jg
and
aaa
pusha
fwait
mov
add
jl
jl
xchg
stos
pop
fldl
lods
adc
dec
sbb
or
jmp
jbe
jbe
lock
xor
xor
cmp
jbe
xor
ljmp
inc
jbe
jbe
jbe
and
jbe
jbe
jbe
nop
dec
add
rclb
hlt
jbe
jbe
lcall
mov
jbe
push
js
xchg
jbe
jbe
jbe
jbe
movsb
mov
lods
fbld
lock
add
and
push
jne
jo
add
decl
jne
fs
nop
movsb
jne
outsb
jne
or
inc
jne
adc
jne
jne
jne
sbb
jne
and
out
adc
jne
jne
jne
cmp
jne
jne
inc
je
je
mov
dec
bound
je
je
adc
fs
je
push
popa
fwait
insb
jo
add
jl
inc
je
je
je
outsl
out
adc
sbb
je
je
je
xor
mov
je
test
cli
je
out
mov
and
je
je
je
in
push
cli
lock
ret
fwait
jo
jns
mov
fnstcw
mov
out
pop
or
jae
jae
loop
sbb
jae
jae
jb
jb
aas
jb
mov
jo
mov
mov
jno
jno
xor
cmp
pop
or
xor
into
jo
jo
adc
mov
ss
sub
ja
shlb
jbe
xor
inc
pop
jne
pop
cmp
loop
out
je
je
xor
xlat
lock
insb
mov
jp
xor
and
pop
leave
js
js
js
js
push
jg
jg
nop
rcrl
call
ljmp
loop
mov
jle
lock
sub
les
jle
jle
test
sar
call
imul
xchg
test
mov
loope
xchg
mov
cmpsb
andb
dec
jae
jae
jae
jae
mov
mov
lock
jb
jb
jb
xchg
mov
adc
shlb
pop
addr16
ja
ja
ja
stc
jo
movsl
lock
mov
or
jbe
nop
or
lock
sbb
or
decl
push
jne
test
mov
push
mov
and
je
je
lock
cmp
adc
sbb
mov
jp
adc
jp
jmp
mov
jg
mov
inc
jns
jns
jns
jns
jns
jns
and
imul
nop
sub
fwait
mov
jg
jo
inc
jle
bound
push
inc
mov
cmpsb
dec
or
jl
sbb
mov
and
and
imul
ret
sbb
insb
adc
inc
jae
jae
jae
call
iret
inc
jb
jb
jb
adc
push
inc
jno
jno
jno
mov
icebp
adc
jo
lock
ret
jo
fisttpl
cmp
loopne
stos
adc
cmp
ja
add
ja
ja
jbe
inc
popf
jbe
jo
mov
push
aad
cli
movsb
dec
jns
js
push
icebp
in
adc
add
js
jo
test
js
js
stos
push
cltd
js
adc
jg
loopne
push
adc
push
std
fistpll
jg
adc
jg
shlb
jg
add
jno
pushl
add
in
mov
jge
jge
jl
inc
jl
jl
xchg
and
stc
jl
lock
or
jae
jb
jb
pop
xor
cmp
insb
jb
test
mov
adc
sbb
call
xchg
adc
popf
jb
jbe
mov
mov
add
pop
cmp
mov
xor
jno
jno
jno
add
push
xor
sbb
jo
rclb
jo
ja
push
ja
ja
rcrb
inc
add
or
das
pop
repnz
ja
in
lock
lea
dec
loopne
jg
lcall
cmpsb
adc
loop
inc
js
callw
ret
cltd
jg
jl
dec
add
inc
dec
cmc
outsl
clc
jmp
rclb
cmp
test
jbe
dec
cmc
jbe
mov
mov
push
outsl
mov
pop
or
je
lock
int3
jnp
jnp
sar
outsb
add
jp
jp
inc
jp
jp
jns
sub
push
loope
sub
js
sbb
inc
jg
or
test
adc
dec
nop
sbb
jo
mov
cs
call
or
aaa
sahf
cmpsb
jae
jb
jb
inc
jno
nop
mov
jno
shrb
sub
inc
ja
ja
inc
ja
ja
ja
lock
cwtl
je
lcall
cld
scas
adc
js
push
dec
sub
mov
jle
clc
push
inc
jge
dec
icebp
push
ret
inc
loope
push
cmp
jae
ljmp
mov
inc
adc
jg
jge
rcrb
jb
adc
jb
lock
jno
fcomip
cmpsb
stos
outsb
sbb
xor
repnz
nop
xorb
popf
icebp
cmpb
push
jl
jo
sbb
ja
int3
ja
push
rorb
jp
pop
jns
jns
jns
mov
cmp
adc
jns
jns
jns
push
lcall
adc
sbb
js
js
add
jmp
mov
inc
adc
jno
jg
adc
jg
adc
xchg
mov
add
pop
call
xchg
push
jle
jle
inc
jle
jle
jle
rorb
jle
rcl
mov
mov
jb
je
and
xor
jge
jge
jge
xor
jg
sub
jo
inc
adc
jl
out
pop
push
rcll
xor
push
jae
jae
jae
lock
nop
insb
and
jae
and
jae
jae
jae
inc
nop
test
inc
loopne
notb
cmpl
inc
jmp
pop
les
outsb
jo
adc
jo
mov
jo
push
jo
bound
push
cmp
xor
and
jbe
push
jbe
nop
pop
cmc
push
mov
pushl
bound
and
mov
je
je
je
xorb
je
jbe
lcall
adc
pop
jp
jp
mov
sti
stos
mov
jp
jp
jp
adc
popf
test
aad
push
les
les
add
or
jns
adc
fdivrl
jns
or
mov
adc
js
js
shlb
scas
pop
loopne
outsb
xor
adc
js
add
push
mov
cmpsb
jnp
jg
adc
jg
ret
leave
jle
std
stos
jg
jg
jle
call
jle
adc
int
mov
jle
adc
jle
jle
jle
inc
jge
jge
jge
jge
mov
mov
push
dec
jl
jl
jl
inc
push
ret
jl
or
sub
push
inc
test
sbb
dec
add
jae
push
or
sbb
jg
jne
xor
adc
jb
jb
jb
mov
jp
cmp
add
mov
pop
inc
xchg
mov
mov
stc
fistpl
popa
adc
jae
jnp
add
jno
jno
aaa
mov
stos
adc
jno
jno
jno
cmp
jg
jno
jno
jno
mov
mov
jo
ja
push
call
cs
loopne
cmc
stos
inc
mov
jo
cld
clc
add
mov
inc
insb
lret
adc
ja
ja
ja
adc
inc
xor
ja
ja
adc
mov
ja
push
jbe
nop
sub
xor
cmpl
jbe
jl
movsb
add
mov
jne
mov
adcl
fisubrl
ficomps
jne
jne
ljmp
pop
xorb
test
push
add
add
lret
je
loop
xchg
je
mov
pop
icebp
je
jnp
sbbb
out
adc
sarl
adc
jnp
jnp
adc
jnp
jnp
jp
cmpsb
jo
xor
pop
pop
sahf
add
xchg
jns
sbbb
pop
repz
cld
adc
jg
jg
sub
jle
jle
jle
jg
aaa
jg
jle
jle
jle
dec
jge
jge
jge
sarl
cwtl
jge
lods
xchg
dec
aaa
xor
mov
sbb
dec
addr16
jae
adc
xorb
jae
jae
adc
outsl
jg
and
sub
jb
jb
adc
jno
dec
stos
jno
lods
jo
jno
mov
jge
inc
stc
jno
adc
imul
and
shlb
jo
adc
xor
jno
or
lds
adc
fdivp
push
push
mov
jbe
and
decl
mov
jns
js
js
jg
cmp
xchg
cmpl
jge
scas
mov
sbb
scas
icebp
push
shll
adc
lods
fnstenv
decb
adcb
jg
jle
pop
jb
jb
cmpsb
xorl
jo
add
xchg
in
sub
or
arpl
jns
jns
add
jg
jg
jg
push
ret
mov
xchg
jle
into
jl
es
mov
sub
push
jae
jae
jae
mov
test
subb
jg
xchg
push
adcb
jo
ja
jbe
out
outsl
pop
test
divb
adc
and
jbe
jbe
push
out
jbe
sahf
jbe
jbe
jbe
scas
inc
mov
jecxz
clc
jbe
jbe
mov
dec
sarb
pop
jne
add
jp
hlt
outsb
jne
lcall
sub
jp
and
push
jne
jne
push
jne
jne
jne
in
outsl
incl
sarb
xor
ss
jne
jne
adc
fcmovnu
cld
jne
jne
jne
jne
jne
jne
push
test
out
push
je
jnp
jnp
dec
add
pop
pop
mov
jp
shr
jp
jp
jp
jns
sub
inc
jnp
xor
outsl
js
js
testb
test
push
jg
jg
fdivl
jg
sub
jg
jg
jg
hlt
pushl
icebp
jg
jg
jg
mov
inc
inc
jle
cld
data16
ss
outsl
jle
jle
adc
movd
pop
clc
mov
fdivrl
nop
pop
jge
jge
or
fdiv
mov
mov
fstl
mov
push
push
mov
xor
add
jno
loopne
test
cwtl
pop
ja
pusha
arpl
or
cmp
aad
mov
cld
jecxz
pop
mov
mov
jbe
loopne
pop
jl
mov
and
jnp
scas
inc
jp
or
pop
cmpb
jp
push
jp
and
incl
sbb
imul
test
mov
out
in
das
clc
lea
jp
aam
jns
jns
jns
adc
jns
xor
shr
stc
jns
mov
sbb
mov
push
jg
and
and
dec
jle
pusha
sbb
add
jle
jle
adc
jle
jge
jge
mov
nop
cmp
fidivrs
jge
jl
jl
jl
mov
push
cmpsb
sbb
dec
cmp
or
mov
cmpsl
jae
ret
xchg
dec
mov
fdiv
jno
jo
jo
push
cld
pop
lods
int
xorb
pusha
jbe
mov
mov
mov
fsubrl
or
adc
push
iret
cld
rolb
decl
js
jp
jns
js
jg
pop
loopne
or
dec
jle
pop
loopne
sbb
in
lds
mov
jge
or
jge,pt
jge
pusha
cltd
inc
or
mov
stos
loopne
mov
add
fistpl
jmp
lods
shlb
ja
add
ja
ja
adc
mov
in
dec
push
jbe
add
jg
sbb
jp
sbb
jbe
pusha
dec
push
jl
adc
or
clc
data16
pusha
xchg
add
add
push
jnp
jnp
sub
or
jp
jp
inc
xor
add
jecxz
pop
clc
jp
jp
jns
or
jns
pusha
inc
lods
add
js
movsl
bound
xchg
cs
outsl
adc
mov
jg
fstpt
movsb
xor
mov
adc
jg
fnsave
jg
cmp
daa
sub
xchg
sti
out
jle
jle
jle
jle
sub
mov
mov
push
outsl
pop
ficompl
les
jge
jge
jge
adc
push
inc
or
int3
inc
loop
push
inc
sub
jae
ja
inc
pusha
sub
lods
xorl
jo
jo
jo
add
gs
hlt
lods
andb
jne
icebp
cmpb
jne
je
xlat
jnp
jnp
loopne
fildll
pusha
iret
clc
mov
mov
js
jg
jmp
inc
mov
sarb
test
call
sbb
jl
jl
loope
arpl
inc
inc
dec
xchg
jae
jae
mov
jmp
cwtl
push
xchg
add
out
jb
adc
jno
jno
cli
dec
jo
jo
ja
popf
shlb
sbb
jo
mov
inc
ja
shrl
add
ja
ja
pusha
adc
inc
cmpsb
lret
pop
jbe
addr16
scas
mov
aam
mov
inc
mov
aas
cwtl
in
stc
jne
adc
popa
jg
push
aad
xchg
ljmp
addb
stos
push
pop
pop
in
mov
jg
xor
and
bnd
and
jbe
test
mov
pop
jb
rol
jb
inc
and
pusha
test
jno
jno
push
push
mov
jo
mov
cmpsb
rorl
xor
mov
push
call
das
or
inc
je
jnp
jnp
and
mov
jmp
insb
jle
cld
push
outsl
jle
mov
data16
jl
lcall
test
mov
fwait
imul
jnp
push
cmpsl
or
or
jae
jg
push
add
mov
xor
mov
jae
adc
je
ljmp
fnsave
adc
out
jae
fs
jae
jae
push
push
mov
pop
pushf
adc
stos
jae
rolb
jae
je
inc
mov
push
jb
adc
arpl
jb
insb
scas
shr
push
lcall
or
adc
jb
push
loopne
jb
push
bound
jb
jb
jb
inc
mov
mov
xor
and
jb
jb
jb
or
repnz
sarl
jb
lcall
xchg
add
jb
mov
adc
jb
adc
jno
add
xor
jno
jbe
aam
jno
add
push
dec
inc
ret
jo
xchg
jno
and
add
jg
jno
jno
jno
push
jno
cmpsb
jl
dec
mov
cmp
push
jl
cmp
jno
jno
jno
mov
out
add
xchg
jno
jno
add
mov
or
std
ja
ja
jbe
lods
pop
jne
jne
jne
clc
lods
dec
ja
daa
je
mov
in
mov
pop
mov
jnp
jnp
jnp
adc
add
add
push
jg
mov
lret
mov
jle
inc
jo
lret
jge
jge
icebp
adc
incl
sbb
jae
jae
repz
jb
or
xchg
hlt
or
jno
jo
adc
sub
xorb
pop
push
mov
outsl
jo
dec
mov
aam
jp
jp
pop
inc
jp
js
stos
jo
test
xchg
pusha
jg
lea
stos
pusha
mov
das
xor
shrl
xchg
jno
jo
adc
je
incb
jo
adc
dec
ja
adc
push
incl
shlb
notb
jne
jne
push
sub
je
ss
fistpll
xchg
jg,pn
sti
jp
jp
std
jns
cld
jg
mov
js
js
push
pusha
es
cmpsb
pop
insl
jle
push
decb
xchg
jle
test
icebp
sub
push
and
std
adc
jb
xor
stos
sub
fnsave
jo
inc
mov
js
adc
sbb
jbe
cmc
xchg
adc
dec
jnp
push
jnp
jnp
call
add
or
jns
sarb
inc
js
js
push
pop
lods
aam
ret
mov
incl
ja
xor
adc
dec
add
add
fistpll
jnp
jnp
jnp
jnp
xchg
rclb
push
jp
adc
jp
jp
xor
lock
ljmp
call
adc
js
inc
js
js
adc
push
mov
mov
jg
adc
mov
lea
jg
es
and
pop
sub
push
movsb
adc
mov
jge
sarb
les
shrl
adc
add
or
push
jae
pop
add
cmp
cld
push
pop
and
xchg
jb
pop
mov
mov
cmp
adc
mov
cmpb
inc
jnp
jnp
lock
and
jp
jp
lock
jb
push
or
dec
sub
test
mov
add
inc
out
push
jl
jl
lock
out
ljmp
ja
js
add
adc
and
or
enter
add
jl
jl
jl
cmpb
jecxz
adc
fists
addr16
xchg
push
insb
fnstsw
push
clc
fnstenv
jo
pushl
add
jo
add
jg
add
adc
pop
xor
inc
call
cmpsl
iret
jo
adc
repz
or
mov
jo
jo
add
push
clc
addr16
pop
jo
mov
xchg
jle
inc
jo
xchg
cmpsl
jo
lock
push
inc
loopne
add
add
ja
cmp
loopne
xorl
negw
mov
ja
inc
adc
push
dec
ja
and
mov
stos
aaa
jbe
add
jp
aam
sarb
jbe
inc
inc
jne
xor
outsb
pop
lcall
jne
fistpll
and
cmpsl
xor
jne
es
mov
mov
inc
je
je
je
adc
mov
out
push
pop
je
add
shrb
jae
ja
jnp
jg
add
pop
add
pop
je
je
je
push
and
xchg
xor
mov
cmp
ret
je
or
das
sbb
adc
lcall
stos
mov
add
add
into
push
jo
andl
pop
push
jns
sub
rcrl
xchg
repnz
and
sub
xor
decl
sub
cmp
test
fnstenv
bound
or
clc
pop
cld
push
push
lock
arpl
orl
pop
mov
add
sbb
push
test
shlb
and
or
loopne
hlt
imul
ljmp
cltd
jp
shll
jno
cli
mov
pop
and
cld
or
aaa
stos
add
scas
jle
push
dec
lcall
fbstp
imull
xchg
pushf
push
and
xchg
out
rorb
add
pop
ret
mov
xchg
int3
adc
out
jbe
adc
aam
cmp
out
cli
jmp
scas
add
mov
dec
push
arpl
sbb
cmp
xchg
inc
add
push
push
inc
mov
jg
std
enter
add
mov
sbb
xchg
out
add
mov
iret
sbb
call
loopne
mov
inc
xchg
divl
movsl
add
cmpsl
xchg
out
xchg
inc
add
cli
sbbl
loope
decb
scas
in
cld
fisttpl
inc
cmp
test
mov
jne
add
inc
pop
cld
outsl
mov
push
movsb
aam
stc
movsl
cmp
and
lcall
jl
add
add
inc
or
fildll
es
adc
sub
mov
icebp
rcrl
stos
movsl
pop
cmp
scas
mov
mov
test
or
mov
inc
aaa
cld
adc
add
arpl
add
xchg
xor
andb
pop
mov
dec
loopne
lcall
mov
mov
sbb
ret
xlat
lret
add
push
sar
clc
fildll
mov
xor
std
add
repnz
test
outsb
call
bound
movsl
jecxz
pop
jl
js
nop
sbb
mov
shr
ss
or
xchg
sbb
sbb
incl
les
rep
push
clc
add
jb
push
int3
pop
fistpll
icebp
sub
push
and
add
rol
or
test
push
mov
icebp
add
ljmp
inc
outsl
dec
nop
sub
pop
insb
popf
sub
daa
loopne,pt
add
jmp
add
xchg
xchg
arpl
mov
stc
push
pushl
mov
add
les
jnp
inc
icebp
inc
pop
push
faddl
iret
mov
fchs
adc
in
pop
cmpb
xchg
mov
mov
add
sbb
inc
nop
mov
mov
hlt
je
gs
fs
imul
clc
imul
push
jne
add
insl
jo
je
outsl
outsb
push
divb
jae
dec
outsb
je
jb
outsl
arpl
inc
arpl
insl
and
and
insb
je
outsl
dec
imul
push
push
push
inc
outsb
arpl
gs
outsl
imul
mov
mov
jne
jb
push
jb
gs
dec
sbb
sub
jae
insl
push
imul
xor
cli
gs
jb
add
popa
insb
push
imul
and
insl
enter
pop
popa
inc
fwait
inc
jae
cmp
sti
xlat
outsb
outsb
addr16
or
je
push
outsb
ja
fs
adc
pop
mov
arpl
or
andl
addb
pop
int3
and
rolb
dec
jp
mov
sbb
push
jb
xor
outsl
or
lods
insl
sub
popa
or
les
push
inc
pop
shll
lods
js
dec
xchg
sbb
xchg
inc
inc
roll
dec
rcll
push
cmp
dec
bound
sub
or
add
push
xchg
bound
pop
xchg
pushf
sbb
adc
inc
sti
icebp
mov
add
and
insb
shlb
mov
adc
cmp
jae
dec
dec
fs
lds
inc
shll
scas
xor
seto
mov
inc
jbe
mov
mov
fldcw
movsl
inc
outsb
pusha
test
movsl
push
push
andl
fldt
add
hlt
xor
aaa
insl
outsl
push
push
sahf
push
or
xor
gs
jmp
pop
xor
adc
or
inc
imul
sbb
pop
stos
push
adc
push
imul
jne
arpl
push
ret
mov
or
cmp
andb
and
sbb
notl
dec
add
rorl
imul
mov
ret
sti
icebp
test
jl
jne
stc
add
push
testb
inc
push
outsb
scas
les
fnstsw
aam
jp
xchg
mov
data16
cmpsb
inc
aam
mov
mov
imul
mov
mov
inc
push
cmp
ficompl
outsl
arpl
inc
lds
push
cmpsb
adc
paddusb
fs
nop
pop
pop
loopne
push
and
stc
sub
sbb
ret
pop
nop
mov
js
std
popa
bound
outsb
mov
outsl
inc
dec
test
push
pop
fbld
jmp
mov
jmp
sbb
add
fcoms
mov
dec
inc
dec
inc
xchg
mov
add
insb
sbb
dec
iret
xor
push
shrl
iret
lea
or
adc
xchg
adc
mov
pop
dec
sub
fildl
inc
leave
cmp
inc
jecxz
jl
sub
mov
pop
shrl
sbbl
sbb
test
adc
cmp
mov
xor
push
inc
jns
push
outsl
push
imul
jb
add
ljmp
fsubp
and
inc
push
jns
gs
sbb
and
pusha
push
cmc
sbb
push
inc
je
movsl
push
jo
adc
cli
mov
rol
inc
lods
inc
lods
jbe
imul
inc
mov
in
les
inc
mov
fldenv
ljmp
addl
lret
repz
or
mov
ss
or
stc
push
push
shrl
ret
inc
pop
aad
add
and
inc
popa
sbb
lret
sbb
stos
xor
or
testl
pop
push
inc
bound
flds
mov
adc
pop
push
jg
add
stos
out
outsl
mov
push
and
push
sub
adc
or
push
leave
inc
mov
adc
ret
push
inc
fcomp
dec
xchg
dec
inc
or
and
dec
fstpl
jb
mov
mov
jnp
xchg
jbe
clc
mov
sbb
inc
xlat
mov
push
cmc
and
push
insb
test
das
pop
add
or
add
out
insb
fdivr
insl
sbb
push
adc
pop
enter
and
nop/reserved
popa
add
push
add
lea
jns
subl
mov
xchg
add
lds
sub
lock
jmp
push
add
and
jb
sbb
popa
sbb
push
cs
mov
inc
outsb
dec
push
push
sub
cld
addl
sub
cmp
add
sub
js
aad
jae
adc
jnp
je
inc
fidivs
pop
das
dec
xchg
and
scas
cs
add
add
add
sahf
add
std
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
