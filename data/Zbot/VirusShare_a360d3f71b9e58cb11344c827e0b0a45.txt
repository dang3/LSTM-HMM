lcall
dec
not
inc
pushl
dec
and
dec
neg
pop
sub
add
ljmp
inc
xor
push
and
sub
add
push
sti
decl
add
outsb
mov
add
cwtl
dec
pcmpgtw
jg
adc
sbb
inc
add
lahf
push
mov
add
cmp
add
in
mov
in
cmp
and
insb
sub
cmp
adc
cmp
clc
xchg
jo
add
cmp
idiv
call
add
adc
mov
pop
lods
add
or
push
push
outsl
stos
ret
pop
inc
add
loop
sub
add
push
add
or
add
add
add
outsb
jg
and
and
in
cmp
daa
push
push
jmp
pop
gs
adc
xor
mov
testb
dec
add
testb
add
outsl
outsl
ljmp
xchg
mov
rcl
lcall
or
add
mov
mov
call
pushw
stos
mov
jg
jbe
xchg
jecxz
pop
lahf
add
xchg
enter
push
test
mov
std
fisttpl
adc
add
add
mov
add
xchg
bound
movsb
inc
stos
imul
lods
sbb
aas
mov
and
and
pop
inc
add
jmp
pop
mov
jmp
insb
aad
out
mov
mov
add
mov
test
insl
incl
sub
xlat
mov
mov
add
xchg
push
mov
in
fucomip
mov
add
dec
push
loop
nop
mov
ss
add
fs
sub
add
add
lock
inc
push
popf
inc
add
xlat
cli
into
jnp
sub
stc
and
pop
fsubrp
mov
xchg
in
add
idivb
inc
inc
ljmp
add
adc
test
add
insl
ja
in
cmp
and
das
cli
je
push
pop
fsubrs
add
lods
pusha
adc
push
adc
ret
ret
ret
dec
pop
add
and
aam
or
outsl
push
inc
jmp
xor
pop
sbb
add
mov
test
insl
adc
add
loop
cs
cmp
sti
xchg
outsl
jg
out
add
adc
ret
nop
mov
xchg
aad
ret
add
jg
fistl
imull
adc
loopne
add
mov
ljmp
aas
addr16
adc
cmp
rorl
int
fldcw
push
pop
nop
mov
icebp
les
ret
add
pusha
repz
add
sub
pop
add
in
sti
fs
mov
dec
xchg
das
add
aad
stos
sahf
jp
xchg
xor
call
push
add
cmp
insl
jg
sub
xor
lcall
mov
xchg
mov
fsubrl
xchg
test
mov
das
xchg
xor
je
shl
pop
fcmovu
add
pop
sbb
cmp
in
fiadds
add
aam
imul
or
mov
xchg
push
cmp
add
xchg
mov
mov
ret
out
sbbl
sbb
out
sub
cmp
adc
cmp
insb
mov
jle
push
mov
std
add
movl
push
fidivs
mov
mov
or
inc
sbb
call
adc
xlat
mov
mov
in
roll
mov
xor
rorl
xor
int
fcmovb
mov
inc
sbb
adc
aas
sub
out
mov
add
mov
jle
mov
out
repnz
push
rcl
fildll
inc
inc
jle
je
insb
xchg
lock
mov
mov
inc
mov
xor
xor
fxch
fisubl
cli
sahf
cs
loope
jmp
mulb
addr16
movl
pop
cmp
push
dec
adc
neg
not
xor
lea
add
fstps
jae
add
idivb
testl
mov
shll
int
mov
push
int3
and
xor
mov
stos
sbb
ja
adc
sbb
mov
mov
mov
lcall
hlt
pusha
jp
arpl
or
cli
pop
lock
pop
dec
cmp
dec
les
stc
and
call
loopne
into
push
ret
negb
call
mov
lret
or
adc
neg
lret
xor
test
fdecstp
fistps
add
adc
cltd
loope
fbstp
sbb
fisubl
sub
adc
jnp
fcoml
push
fdivs
shrb
jns
int3
outsl
lcall
test
bound
mov
not
add
xor
clc
lcall
or
faddl
leave
lea
icebp
pop
jp
cld
test
sbb
notl
and
mov
sbb
jp
add
pusha
pop
mov
mov
lret
sub
enter
jge
mov
jns
incb
pushl
add
push
push
imul
insl
imul
push
pop
dec
mov
stos
call
shrb
adc
aaa
loopne
call
outsb
or
es
mov
int3
mov
xor
xor
pop
cmp
out
cmp
mov
fdivrl
dec
les
leave
ret
movsl
lods
sbb
test
pop
mov
mov
jg
leave
sahf
or
lds
mov
mov
mov
bound
rclb
jge
jecxz
roll
adc
pop
scas
pop
push
mov
jo
add
mov
push
ficomps
mov
fisubs
test
mov
or
cs
or
in
fimull
int
mov
inc
in
pushf
add
and
decl
xor
std
sbb
cmp
ljmp
and
fs
in
lds
out
or
inc
or
pop
loopne
idivl
cli
xor
sbb
mov
pop
mov
daa
cmpsb
sbbl
pop
mov
inc
movsl
repz
es
jbe
sti
mov
arpl
sbb
dec
nop
in
das
jmp
div
fimull
cmp
mov
rcrb
cld
pushf
xor
mov
loop
arpl
sahf
js
sub
nop
xchg
ds
loope
test
or
mov
loope
xchg
mov
add
cmpsl
add
ljmp
je
lds
dec
addl
shll
cld
inc
imul
dec
pop
fdivr
sub
add
cmpsl
jns
js
add
or
push
push
loope
pushl
mov
ret
outsl
imul
sub
outsb
mov
outsb
mov
out
fildl
fldt
sub
hlt
push
pop
pop
cli
incl
bound
add
lods
pushf
in
fisttpll
sbb
sarl
aas
ljmp
push
xchg
clc
jg
cmp
pop
adc
add
mull
pushf
stos
sub
push
incb
cmpsb
imul
pop
cltd
push
movsl
add
jne
push
push
icebp
in
dec
jl
and
mov
sub
jae
xchg
jno
ffree
insl
mov
push
and
and
jmp
mov
idivb
jne
push
mov
xor
or
fistpll
fiadds
jo
sbb
add
adc
out
fnsave
mov
or
push
aad
add
sbb
fildll
sub
cld
add
mov
dec
sbb
sbb
push
pushf
jnp
push
outsl
bound
mov
aas
repnz
js
popa
sub
sub
fdivl
addl
fstpt
mov
inc
adc
test
mov
adc
dec
mov
mov
insb
sti
mov
or
int3
xor
cmp
adc
adc
xor
sti
insl
cli
mov
jmp
xchg
mov
bound
pop
mov
jge
push
and
sub
or
push
dec
sub
mov
pop
ds
sti
inc
daa
ljmp
or
add
xor
xchg
sti
and
inc
outsl
mov
nop
loop
add
shlb
rcl
cs
sub
sub
add
adcl
jg
hlt
lcall
out
adc
sbb
es
outsb
aas
jecxz
ljmp
dec
sub
lret
sub
jbe
in
add
std
rorb
lcall
lds
or
insb
push
mov
imul
btr
ja
adc
test
mov
outsb
mov
dec
xchg
scas
sub
adc
xchg
cmc
cmp
mov
nop
insl
jmp
pop
clc
xchg
mov
add
jp
fstpt
pop
data16
out
add
call
pop
pop
sub
add
rcll
sbb
fistpll
lahf
push
gs
cmp
fsubl
push
mov
mov
cld
shll
pop
sbb
cmp
mov
sub
movsb
jge
in
fistpl
mov
mov
clc
out
jp
sbb
jge
xchg
xor
insb
lock
jecxz
lock
jo
movb
pushf
or
insl
jbe
mov
sbb
sarl
mov
sub
std
pop
stos
mov
sbb
cmc
clc
gs
insl
and
mov
mov
nop
add
aad
test
or
aaa
jo
je
adc
sub
jp
pop
clc
icebp
insb
test
sbb
mov
rcr
out
or
mov
lret
pop
clc
in
fildll
sbb
and
lahf
and
mov
test
mov
cmp
out
inc
sbb
cs
jg
mov
test
push
mov
call
inc
call
or
in
and
pop
cmpl
rcpps
cltd
ss
mov
cs
sub
or
push
std
sbb
clc
pop
popf
lcall
dec
movsb
aad
push
cld
lea
dec
add
inc
and
das
cld
outsl
cwtl
sti
fsubl
mov
movzwl
leave
enter
leave
loop
popf
in
xchg
mov
inc
fstps
mov
xchg
repz
fsubl
outsb
push
mov
lahf
fcoms
testb
mov
call
rcll
shll
in
push
mov
add
dec
dec
or
sbb
xchg
mov
les
inc
cli
ret
mov
adc
cli
jg
les
push
adc
scas
mov
loop
out
test
arpl
daa
sar
push
loop
push
inc
xchg
lds
or
test
outsb
mov
or
mov
ja
dec
sub
dec
addb
mov
fisttpl
add
add
sub
push
xor
mov
sbb
add
lcall
sub
out
nop
jae
sbb
push
pop
repz
fistps
pusha
add
test
xlat
push
mov
pop
push
fsub
movsb
adc
lea
dec
jg
jg
add
enter
sub
ret
les
mov
or
xchg
mov
divb
mov
je
xor
mov
xor
add
xor
notb
popa
cmp
fisubs
mov
push
sbb
push
loopne
push
and
in
pop
stos
fst
femms
pop
or
cld
push
xor
scas
std
out
cld
jno
sub
loope
jb
jle
cmp
cwtl
mov
mov
pop
js
jbe
adc
bound
out
int3
push
jae
ret
fisubrs
push
icebp
sub
mov
notl
inc
out
imul
add
cmpsl
test
inc
mov
and
loopne
jbe
sarl
mov
fwait
push
and
jg
push
inc
aam
cwtl
add
push
outsb
dec
xchg
outsb
mov
inc
test
cmp
push
push
int3
out
and
xor
or
ss
push
inc
ret
push
xor
nop
cmpsb
adc
jns
adc
mov
jne
fsts
add
mov
jns
mov
nop
dec
iret
inc
cmpsb
mov
pop
xor
xchg
sbb
mov
add
xchg
lds
pop
insl
xchg
mov
scas
cmpsb
add
dec
fisttpll
scas
xchg
push
or
stos
loope
or
mov
cmp
inc
or
cmpsb
lcall
mov
or
push
xlat
stos
mov
and
add
add
cmp
insl
imul
push
fnstenv
and
push
outsl
push
pushl
cmp
or
sbb
jl
lods
loope
hlt
dec
neg
pop
sbb
leave
lods
neg
rorl
ss
jbe
adc
or
and
sub
or
mov
sbb
mov
je
pop
push
pop
push
in
mov
mov
sub
pusha
aas
enter
push
push
inc
dec
add
stos
pop
clc
mov
call
jp
inc
jmp
cmp
cmpsb
xchg
dec
ljmp
mov
mov
movsl
pop
adc
push
sarb
jo
das
je
or
cmp
sbb
pop
jg,pt
rcl
aaa
push
push
adc
arpl
popf
ljmp
jl
mov
aad
es
mov
loope,pt
and
std
xor
and
pop
xorb
jnp
add
lret
xchg
fistl
inc
aad
sub
nop
jo
mov
pop
insb
jge
push
or
sub
add
jp
sbb
xor
adc
sarl
clc
pop
adc
cltd
add
pusha
stc
cwtl
leave
loopne
mov
mov
sbb
or
inc
test
mov
scas
jmp
push
punpcklwd
or
in
cmpsl
iret
push
adc
sub
add
mov
or
cmp
fidivrs
and
stos
pop
push
sbb
push
push
add
in
xchg
mov
rorb
mov
std
mov
mov
sarb
pop
mov
mov
jb
xchg
sbb
in
push
iret
hlt
jb
mov
loopne
cmc
bound
jmp
das
addr16
pop
cli
das
fldl
stos
sub
cmc
mov
adc
and
popa
fidivrl
ret
lods
mov
mov
jmp
pusha
pop
test
jg
inc
dec
cmpsl
jg
mov
loope
add
ret
pop
es
lods
and
clc
xor
jne
out
lcall
inc
jns
inc
add
and
add
jmp
or
adc
cmpb
pop
and
sbb
or
xchg
fdivs
aas
jg
mov
mov
dec
xor
adc
pop
insl
stc
and
jne
xchg
xchg
les
xchg
jecxz
test
xchg
inc
or
jno
aam
xor
push
lea
jle,pn
popf
repz
mov
cltd
add
add
dec
incl
cmp
mov
inc
outsb
and
jb
outsl
aaa
adc
shlb
insl
and
mov
in
pop
inc
pop
ja
addr16
xor
jmp
pop
mov
addr16
add
nop
or
in
pop
pop
in
dec
pop
sub
sbb
movsl
imulb
ret
cs
es
andl
xor
and
xlat
lock
mov
mov
mov
push
and
sti
adc
sub
pop
mov
or
imul
jg
mov
inc
lret
lret
repnz
sub
stc
adc
mov
or
xor
movl
pop
cld
sbb
or
pop
cwtl
add
fdivs
sbb
mov
cld
mov
jo
aam
cmp
pop
mov
xor
rorb
mov
rcr
inc
pop
add
pop
add
inc
popf
pusha
mov
icebp
add
nop
pop
jae
outsb
xor
pop
push
adc
mov
call
adc
mov
pop
rolb
jmp
insb
imul
fsubs
push
pop
cmp
iret
mov
stc
mov
mov
lods
imul
fmuls
neg
sub
mov
add
sub
les
shll
sbb
cmp
pusha
aaa
sbb
adcb
jge
and
pop
pop
orb
add
mov
aaa
jo
xchg
inc
add
sub
jge
sahf
sub
outsb
das
mov
pop
aaa
inc
cld
neg
sbb
adc
insl
aam
xor
addr16
jo
inc
cmp
add
or
je
mov
or
stos
mov
in
or
sub
push
int
outsb
cmpl
outsl
fs
lock
aas
add
cmp
sub
inc
sbb
jbe
jb
dec
inc
sbb
test
mov
mov
mov
rcl
push
mov
aam
or
pop
inc
sub
fcomp
in
out
ss
divl
and
je
cmpsb
and
iret
cmp
adc
leave
jb
lock
int
inc
call
mov
adc
mov
rorb
aad
add
rorb
movsb
cmp
mov
jl,pt
les
dec
test
jae,pt
add
aaa
or
rorb
sti
jecxz
jae
jnp
aam
aam
or
jbe
arpl
inc
not
popa
in
ljmp
test
movb
inc
push
out
sarb
mov
cltd
fisttps
imul
in
adc
data16
mov
mov
faddl
sbb
add
jnp
and
pop
jecxz
or
pop
add
or
icebp
inc
fldt
es
sbb
hlt
adc
dec
add
sub
lock
or
js
dec
ljmp
mov
cmp
rorb
push
imul
jne
sub
adc
mov
sbb
leave
ret
mov
mov
arpl
popa
mov
push
outsl
shlb
rcrl
popf
jp
inc
ret
movsb
sbb
xor
and
sbb
mov
fucomp
mov
inc
adc
lret
movd
inc
jns
or
adc
sbb
pop
int3
mov
stos
push
dec
loopne
sub
fldl
xor
rorb
call
rclb
mov
sti
push
sbb
xor
sub
dec
mov
pop
push
addl
inc
pop
mov
sbb
push
xor
or
lea
cmc
fsubrp
les
jnp
cmp
pop
shl
popf
inc
jecxz
loopne
cld
dec
scas
dec
aas
sbb
cmp
addb
mov
and
cli
fiaddl
dec
cwtl
inc
mov
xlat
jbe
cwtl
pop
loop
pop
cmp
fdivs
adc
push
int3
dec
mov
push
pop
jge
or
mov
push
or
mov
shll
lods
and
push
hlt
and
out
xor
sbb
sbb
rorb
fnstcw
imul
mov
ja
ret
inc
pop
jb
sbb
pop
lds
and
sbb
mov
notb
fisttps
into
mov
xor
lods
inc
mov
sub
xor
adc
pop
bnd
movsl
cmpsb
js
push
mov
adc
adc
in
ror
dec
std
push
fucomip
mov
adc
add
outsb
pop
mov
jb
arpl
out
fisubrs
mov
cmpsb
xchg
or
test
mov
xor
repnz
stos
popa
aas
inc
mov
fnstenv
cmp
js
xor
insl
je
imul
mov
dec
in
adc
scas
mov
push
cmp
pop
std
or
test
nop
repnz
sbb
lret
xchg
gs
int
pop
pop
nop
sbb
loop
fcoml
cmp
fdivrl
jecxz
lea
or
cmpsb
stc
inc
mov
cs
inc
pop
push
sub
out
shll
sub
and
push
js
sahf
cltd
addr16
cmp
repnz
inc
cmp
str
bound
lds
daa
inc
cmpsl
cmc
or
outsl
dec
imul
les
jns
fadds
fistpll
out
xor
jo
cld
flds
pop
lods
or
sbb
out
push
incl
int3
jg
mov
mov
les
add
or
pusha
mov
sar
or
push
mov
std
mov
aaa
std
jbe
pop
inc
ljmp
movsb
jmp
cmc
sub
or
jno
push
xchg
xor
inc
add
notl
sbb
inc
call
in
jg
pushf
mov
out
shll
push
call
xchg
mov
jp
mov
sub
inc
jle
icebp
jg
or
jno
add
xchg
cltd
or
data16
and
andb
aaa
cmp
call
mov
inc
or
inc
adc
dec
xchg
ds
pop
loopne
insb
bound
ret
pop
lcall
dec
cld
inc
pop
push
xchg
repz
sbb
inc
mov
mov
adcl
push
pop
sbb
rcrb
fdivrs
out
ret
movsbl
rorb
lds
and
adc
fidivrl
sbb
fwait
movsb
push
insl
cs
lods
frstor
gs
push
inc
div
jg
dec
lret
imul
inc
test
mov
sbb
aad
add
mov
cmp
xchg
fstl
incl
pop
gs
and
sub
add
cmpsb
clc
xchg
mov
sbb
push
sbb
aaa
leave
or
test
cmp
loop
lret
cld
or
inc
mov
mov
inc
daa
stos
outsl
lock
xchg
push
add
add
jle
add
test
in
lods
push
push
imul
fwait
push
mov
fwait
sub
stc
mov
inc
push
sarl
push
gs
lret
inc
out
scas
mov
sbb
mov
fistl
sbb
push
cmp
ja,pt
movsb
insb
jne
add
aam
dec
push
mov
loop
aad
sub
xchg
xchg
nop
outsl
mov
insl
test
sti
mov
jno
pop
cmpsb
clc
add
mov
test
mov
or
adc
dec
xchg
call
sbbl
inc
add
push
mov
insl
leave
rcrl
xchg
bound
fwait
aam
sub
mov
push
inc
fistpl
dec
test
rorl
jp
sub
repnz
jp
jb
loopne
mov
dec
std
cmp
adc
lcall
or
std
jg
mov
sub
dec
xor
inc
jl
and
fdivr
das
adc
or
ret
mov
mov
add
outsl
jl
lret
pop
mov
adc
clc
ret
loopne
push
pop
fwait
push
inc
not
stos
mov
add
sbb
nop
cmc
aam
das
fisttps
mov
sbb
movsl
pusha
scas
push
and
es
fucomip
fdivs
xor
push
jb
jb
cli
cs
addr16
xchg
add
push
cmp
xlat
and
dec
hlt
xchg
inc
pusha
mov
inc
ret
adc
inc
or
xchg
inc
jno
les
hlt
xor
es
mov
dec
mov
out
push
add
inc
ljmp
fdivs
outsl
sub
rcrl
jmp
stos
or
adc
pop
pop
xchg
inc
jne
sbb
shll
mov
daa
data16
mov
sbbb
fdivrs
pushf
mov
dec
pop
lahf
or
and
mov
aaa
and
or
test
adc
aam
xor
xchg
lods
out
add
add
iret
test
and
addl
inc
push
adc
and
enter
in
in
nop
adc
mov
sbb
sub
test
out
add
dec
xor
ljmp
les
in
dec
push
push
push
add
cmpsl
fidivrl
movsb
das
out
divps
inc
push
sbb
clc
shl
sbb
xor
cld
xor
jae
jmp
add
push
jae
sub
xchg
adc
mov
popl
pop
or
fs
or
adc
scas
push
xchg
sub
fcoml
push
lock
sbb
testb
cmc
or
dec
bound
jge
fstpl
mov
fsub
adc
scas
pop
push
testl
or
out
add
pop
in
faddp
mov
and
mov
lcall
inc
repz
in
into
imul
clc
sbb
push
pop
addps
inc
mov
or
and
add
aad
jo
pushf
pop
in
pusha
aad
add
popa
repz
sbb
loope
adc
push
adc
jns
les
in
xchg
sti
subl
pop
loopne
and
mov
mov
adcb
jge
popa
in
push
lahf
das
outsb
xchg
lcall
xor
bt
test
mov
xlat
sbb
push
imul
inc
xchg
jg
outsl
sub
les
jl
fldt
hlt
dec
and
pusha
gs
and
jecxz
and
test
ds
cwtl
hlt
mov
push
cli
push
dec
dec
cmp
fwait
push
inc
jae
sti
jb
pushf
add
enter
aad
mov
dec
dec
js
jae
stc
jle
pushl
and
pop
mov
enter
mov
mov
add
xchg
inc
dec
lea
das
or
stos
insl
add
ret
lods
ljmp
inc
fiadds
js
outsb
daa
mov
dec
dec
and
mov
out
sti
sbb
int
in
cmc
xor
mov
and
sbb
sbb
push
dec
cmp
hlt
xchg
sub
aam
cmpsl
aaa
xchg
sti
xor
fnstcw
fcoml
fnstcw
or
data16
or
dec
push
mov
jo
xlat
scas
fbstp
ret
dec
pusha
aas
fldz
nop
lods
cmp
push
ss
jle
rorl
xor
xlat
push
push
call
loopne
fidivs
dec
xchg
lods
inc
jo
pop
mov
push
or
mov
add
nop
jbe
ror
adc
pop
push
mov
dec
das
test
movsb
or
add
cwtl
insb
sbb
or
jg
ret
and
mov
mov
adc
sbb
mov
xor
pop
je
or
xchg
xor
addr16
jmp
lea
or
mov
inc
fiadds
mov
fs
ja
ja
ja
popf
sbb
hlt
and
scas
inc
mov
fnstenv
sbbb
pop
pop
loopne
ret
jl
add
aaa
push
rclb
insb
adcb
sub
lods
into
inc
jg
sbb
xor
jae
inc
add
orb
inc
mov
sub
cmc
jecxz
dec
adc
aaa
mov
push
ljmp
repz
fildll
mov
adc
xchg
add
pop
or
rorl
push
lds
bound
test
int
push
outsb
cmp
inc
cwtl
loop
adcb
fimull
and
arpl
sub
xor
in
in
cmp
push
aam
push
xor
push
jp
js
push
movsl
adc
push
cmp
rol
mov
push
lods
cmp
clc
cmp
mov
out
push
adc
ja
or
shll
jmp
mov
daa
hlt
xlat
mov
inc
jno
out
ret
imul
and
and
outsb
dec
adc
enter
or
push
mov
gs
push
mov
in
subb
repz
pcmpgtd
pop
and
adc
mov
loop
lea
repz
je
mov
or
sarb
pusha
and
sbb
push
xor
sbb
jmp
sbb
sbb
or
pop
mov
add
xchg
jl
test
jbe
rolb
test
sub
loopne
daa
sub
fucomip
bound
add
xor
push
xchg
push
push
outsl
mov
mov
mov
dec
mov
inc
filds
sub
xchg
mov
fisttps
sbb
adc
cwtl
iret
std
add
and
test
add
jo
sub
pop
mov
add
mov
nop
lret
adc
cmp
lret
or
mov
xlat
cltd
sub
inc
cli
sub
inc
add
add
pushl
test
xchg
aam
hlt
and
mov
mov
pop
push
stos
pop
adc
pop
sti
shlb
dec
or
add
insb
add
es
fdivs
pop
clc
lea
sub
add
stos
add
lods
mov
rorl
jg
stc
mov
xor
pop
xor
subl
xchg
ds
aaa
cs
insl
push
pop
adc
xchg
adc
sbb
outsl
xchg
loope
or
mov
or
ret
mov
aas
sub
pop
cmpsl
or
pushl
repnz
out
adc
or
outsl
int3
xchg
std
xchg
sub
xor
cli
cmp
cmp
and
cmp
dec
or
bound
jo
ret
jns
call
lods
gs
xor
mov
faddp
mov
lret
addr16
push
fisubl
sbb
int3
dec
or
push
pop
inc
arpl
pop
xchg
push
jge
addb
insb
push
xchg
lock
enter
xchg
iret
and
cmp
rcll
mov
les
in
pop
mov
ficoml
sbb
push
sub
out
push
jb
add
sub
addr16
ror
outsl
iret
add
dec
push
push
xchg
je
or
mov
cmp
adc
or
mov
mov
push
push
roll
cmpsl
pop
je
imul
or
dec
sldt
test
mov
shlb
int3
adc
sbb
add
jp
dec
insl
lret
inc
mov
sbb
repnz
or
addr16
pop
push
popf
sub
xchg
jnp
mov
cmc
add
clc
xchg
cli
sub
mov
lods
add
add
lcall
mov
xor
inc
and
adcl
sbb
dec
jo
std
ret
adcb
xchg
call
ss
leave
inc
shr
jnp
sub
je
push
pop
xchg
mov
xor
lock
add
jl
cs
je
push
mov
adc
in
into
or
rcrl
outsb
fists
or
adc
mov
dec
or
mov
add
movsb
push
xchg
clc
clc
jecxz
jne
sub
pop
add
js
mov
sub
cmc
sbb
ret
add
jmp
fcom
or
push
loopne
and
scas
sti
stos
sbb
sbb
cwtl
cmp
xor
sbb
xor
mov
es
jae,pn
xor
pop
pop
sbb
inc
pop
nop
pop
test
pop
mov
repz
roll
add
outsl
mov
stc
or
inc
inc
rcr
jns
test
sbb
andl
pusha
add
loopne
or
stc
xchg
dec
mov
fildll
and
sub
dec
popf
push
push
sbb
movsb
ret
inc
out
outsl
leave
mul
push
sbbl
xor
lret
je
loopne
mov
mov
stos
mov
cmc
jle
fsubrs
fdivrs
adc
gs
sbb
test
sub
or
ficoml
push
push
fwait
rorl
mov
std
scas
mov
nopl
enter
sub
das
add
sub
or
adc
jmp
lret
pop
sahf
mov
fildl
pop
loopne
xchg
mov
sbb
ret
jp
jae
pushw
mov
mov
shl
ljmp
flds
xlat
push
and
mov
sub
xor
dec
pop
incb
or
imul
add
dec
cmc
adc
mov
cmp
mov
std
or
stc
dec
mov
ds
mov
pushf
aas
int3
adc
cwtl
xchg
ret
or
cmpsl
int3
pop
and
adc
sub
incl
mov
or
inc
jecxz
clc
std
pop
pop
pop
push
jmp
jb
fldl
aaa
icebp
call
sbb
mov
mov
dec
lcall
jmp
pop
mov
dec
repnz
sub
outsl
insb
popl
in
in
mov
push
aaa
clc
mov
adc
hlt
lds
xchg
nop
xchg
xlat
cld
outsl
or
mov
mov
push
jle
push
dec
clc
push
xchg
sysexit
roll
fstp
lock
pop
mov
mov
add
inc
add
outsl
sbb
rcr
cmp
clc
pop
push
adc
push
add
fisubrl
xchg
sbb
add
loop
jmp
adc
cld
aad
mov
pushf
data16
jo
in
jo
aaa
pop
loop
push
dec
cld
in
add
add
pop
lock
mov
push
stos
add
add
cwtl
ret
es
mov
mov
add
mov
mov
push
daa
fisttpl
sub
pop
orb
sbb
xchg
test
sub
mov
cmc
adc
lods
adc
fstl
adcb
dec
jo
add
pop
shrl
push
adc
adc
loopne
arpl
dec
mov
dec
cld
or
ljmp
sub
out
sub
adc
addr16
ljmp
fdivrs
push
xorl
jecxz
add
mov
pop
jo
mov
dec
std
fsubrs
mov
and
xor
push
mov
xchg
xorb
dec
cwtl
pop
js
dec
push
cs
lock
sbb
subl
adc
jl
out
dec
pop
mov
sarb
push
call
lds
js
jmp
cld
jge
pop
ljmp
addr16
cs
fcoms
rorl
sub
fstpt
add
cmc
cmp
jg
xor
xchg
aas
xlat
mov
filds
stc
mov
push
cmp
rcrl
cmp
pushl
adc
and
stc
lcall
loope
and
inc
push
inc
pushf
bnd
test
pop
sub
push
filds
jg
call
int3
mov
lods
fs
clc
test
or
jg
push
clc
fildll
sub
mov
push
jnp
add
mov
scas
aam
scas
scas
pushl
js
pop
and
push
popa
mov
cld
in
ljmp
aas
push
mov
hlt
mov
notl
ret
rclb
add
test
lods
jg
out
loop
inc
scas
jns
cmp
jbe
and
push
push
outsb
int3
inc
insb
or
sub
icebp
sub
adc
out
icebp
ss
mov
or
inc
mov
outsb
xor
jp
inc
movsb
test
jmp
or
scas
loope
daa
pusha
inc
xchg
daa
mov
dec
int3
ljmp
xchg
inc
sub
ss
mov
lods
add
and
jns
push
mov
lock
loope
sub
push
cmp
movsl
and
adc
fs
cli
mov
jecxz
pop
pop
dec
les
pcmpeqd
and
inc
rorl
roll
cwtl
ja
sbb
mov
sub
aad
outsl
fisttps
mov
mov
adc
loopne
add
pop
popa
or
hlt
jg
scas
or
mov
divb
aad
push
xor
cmp
add
jle
add
xchg
and
fstpl
xchg
lds
cmc
nop
xchg
testb
cmp
xchg
jb
rcrl
sub
or
inc
daa
je
fimull
inc
int3
and
cmc
add
add
dec
test
cmc
add
lods
addr16
lods
push
in
aam
int3
push
adc
dec
push
jo
xlat
imul
lock
xchg
mov
inc
adc
pop
stc
out
add
cmp
lds
mov
std
add
aam
loopne
xchg
mov
xchg
shll
clc
aam
ret
mov
mov
aam
aam
aam
shrb
orb
test
add
je
push
mov
xor
push
or
pop
gs
rolb
test
adc
stc
in
and
mov
or
adc
mov
push
shrl
into
mov
pop
out
sbb
cmpsb
fwait
xor
gs
call
es
ret
add
or
lret
or
pop
loope
inc
in
cmp
out
push
jge
mov
test
sub
pop
stos
adc
mov
cld
xlat
inc
and
add
xor
sbb
cmpsl
xor
mov
scas
xor
inc
sbb
xor
loope
sub
movsl
add
popa
ret
jno
jbe
add
sbb
mov
fdivrp
fs
cmp
cmpsl
mov
mov
lds
inc
add
cmpsb
repnz
ss
mov
jmp
outsl
add
pop
into
or
add
loopne
dec
mov
inc
add
enter
or
pushf
mov
icebp
lock
sbb
cmpsl
mov
cli
sbbl
push
jl
or
fidivs
out
dec
push
inc
ret
aad
mov
fwait
cwtl
es
sbb
cld
dec
pop
pop
lods
or
loope
sbb
mov
jecxz
jne
sbb
les
les
adc
mov
xor
inc
push
jg
sbb
or
arpl
cmp
push
jecxz
loope
iret
fninit
or
xor
add
inc
sub
mov
push
fsubrl
fdivrl
push
mov
push
sub
stos
in
cwtl
push
in
jecxz
mov
or
dec
sub
lret
lods
jno
xor
or
mov
test
aad
cmp
iret
in
mov
js
or
xchg
mov
mov
ret
outsl
jge
xchg
mov
fmuls
insl
fiadds
jp
mov
sbb
repz
cmpb
or
inc
xor
ret
pop
cli
inc
icebp
push
inc
push
mov
add
push
push
mov
sbb
inc
inc
mov
out
xor
aas
and
mov
xor
jecxz
pushf
dec
in
push
mov
shrl
push
xchg
shlb
mov
add
pop
ret
push
inc
jl
aaa
mov
test
fwait
push
dec
ds
mov
adc
jg
or
mov
cmp
push
sub
loopne
in
jbe
mov
icebp
add
xchg
cmpsb
in
js
ljmp
test
mov
imul
sbb
les
into
scas
pop
scas
pop
insl
insb
ficomps
cs
call
hlt
xchg
in
pop
mov
pop
fsubrl
fidivl
xchg
cmp
sub
mov
cmp
pop
or
push
test
fsub
ja
pusha
or
mov
push
call
pop
push
outsb
nop
pop
pop
mov
adc
inc
inc
push
movsl
ja
test
mov
jne
sbb
insb
and
inc
mov
lret
fwait
xor
lods
pop
icebp
jns
xchg
cmp
in
mov
scas
mov
js
enter
push
cmp
test
decl
std
mov
push
mov
xchg
aad
jge
out
mov
mov
lods
outsl
int3
push
xchg
popf
xlat
add
loop
jns
fnstsw
push
xlat
mov
pop
fwait
outsb
hlt
aaa
adc
sbb
sub
fstpt
daa
add
or
mov
cltd
xlat
pop
adc
or
dec
lcall
fs
cld
testb
jecxz
add
or
xor
enter
outsb
sbb
mov
ljmp
mov
jp
decl
outsl
push
loope
leave
dec
loope
fdivrl
adc
push
outsl
movsl
mov
in
jno
stos
test
aaa
cs
mov
sbb
test
mov
test
ret
popf
test
cmp
jg
pop
negb
mov
scas
incb
sbb
mov
mov
out
sahf
ss
dec
sub
testb
mov
popf
sti
andl
mov
das
mov
sbb
mov
xchg
nop
shrl
out
andb
shl
fbld
inc
dec
pushf
jge
mov
lock
adc
cmp
push
add
inc
icebp
inc
sarb
ja
pop
adc
mov
iret
fdivrs
jmp
adc
dec
adc
mov
repnz
ret
testb
sbb
add
in
cmp
jns
ret
subl
aad
test
mov
aad
cmp
fwait
stos
pop
lret
adc
mov
pop
lcall
faddl
cli
mov
lds
mov
js
mov
repz
stc
add
icebp
xchg
lock
lock
mov
jno
addr16
pop
cwtl
mov
lock
in
repz
mov
sbb
clc
pop
es
pop
inc
mov
out
scas
int
roll
dec
or
outsl
mov
sub
lods
xor
fadds
add
bound
mov
mov
fs
loop
ss
cmpsl
shrb
jge
repnz
out
pusha
xor
lock
aad
or
xchg
or
call
cwtl
sub
mov
in
sub
shlb
inc
lods
addr16
adc
push
xor
inc
sti
mov
js
cmp
mov
push
sbb
or
cmpsl
sbbl
and
mov
sbb
fimull
xor
inc
inc
pusha
adc
in
or
lock
mov
rclb
outsl
cltd
pop
scas
fdiv
orl
test
in
sbb
mov
mov
mov
dec
add
jnp
iret
ds
ret
insl
adc
inc
push
lds
and
dec
fbstp
stos
mov
xor
xchg
xor
inc
roll
xor
jl
xor
adc
xchg
jmp
mov
xor
jb
test
xor
daa
add
sub
push
add
xor
xor
pop
out
pop
jmp
mov
adc
xor
and
and
andl
mov
jmp
dec
neg
inc
mov
clc
lock
pop
inc
jae
push
out
movsb
dec
adc
inc
arpl
fiadds
xor
xor
and
ja
xchg
rcll
cwtl
add
shlb
rcrl
pop
cmp
in
xchg
outsb
pushf
dec
aam
test
xchg
lahf
fstpt
roll
mov
push
add
outsl
inc
cld
int3
mov
inc
adc
pop
leave
nop
gs
notl
icebp
sbb
shlb
xchg
sub
stos
loopne
push
pop
cltd
pop
cmpb
test
jo
insl
ret
xchg
inc
mov
ja
insl
jne
push
roll
out
sbb
ja
push
mov
fstpt
aad
cwtl
pop
loopne
loop
test
sti
enter
or
inc
xchg
sub
jmp
pop
push
pop
mov
dec
adc
dec
mov
dec
push
pop
loopne
lock
sbb
xchg
and
ss
mov
jle
inc
sub
rcrb
mov
aaa
xlat
sub
xchg
mov
add
lods
dec
or
inc
pushf
test
add
enter
lods
cmp
lcall
and
dec
mov
add
enter
pop
push
cmp
and
pop
aad
pop
sbb
adc
test
mov
fmulp
inc
nop
movsb
push
and
test
push
sahf
mov
arpl
or
push
and
mov
aam
sub
add
cmp
fistpl
fisubl
inc
dec
push
add
sub
xlat
in
pop
jg
fildl
jo
pop
mov
xchg
pop
icebp
cmp
aaa
push
fcmovne
push
adc
ret
lock
or
pop
orl
push
das
push
dec
jo
pusha
jmp
imul
push
lods
mov
jg
push
mov
les
pop
and
stos
lret
push
jo
jg
cwtl
sub
mov
and
mov
mov
shrb
jbe
cmc
loop
sbb
pop
lds
loopne
and
mov
stos
in
jecxz
call
std
inc
inc
jns
inc
rcl
mov
negb
mov
xlat
inc
iret
cmpl
lods
pop
push
cmpsb
add
inc
ljmp
rdtsc
sti
mov
hlt
fisubrs
mov
mov
outsw
lods
ret
mov
loop
ret
andb
add
push
lret
inc
outsl
shrl
pop
sbb
push
sub
daa
and
sub
mov
and
xchg
mov
ret
mov
cmp
jl
shlb
sub
mov
pop
mov
inc
sbb
mov
fisubs
mov
jl
fildl
cmp
mov
loopne
sub
pop
xchg
mov
out
int
cld
int
in
xchg
pop
sub
test
movsb
dec
shll
mov
push
inc
iret
fwait
stos
arpl
loop
mov
sbb
notb
mov
cmp
mov
mov
dec
lea
or
mov
jmp
fcoms
mov
sub
xchg
dec
lock
les
push
lods
mov
cmpsb
pop
jno
push
add
adc
lret
rclb
les
pop
mov
in
imul
pop
nop
movsb
or
lods
jb
pop
and
sub
call
jno
es
mov
aaa
jno,pn
xor
icebp
xor
faddl
and
out
test
xor
mov
scas
or
jb
sbb
jmp
ret
rcrl
xlat
je
ja
mov
mov
fs
and
comiss
ss
pop
ljmp
ret
or
add
shll
cmp
mov
xchg
add
out
shlb
sbb
mov
pop
mov
adc
mov
xchg
jbe
out
adc
xchg
lea
popf
adc
add
fstl
cld
jecxz
inc
ret
inc
std
add
stos
xor
outsl
call
fucom
xor
mov
lock
sub
xchg
aas
incl
adc
loopne
mov
sbbl
add
test
ret
add
call
ret
decl
inc
mov
gs
mov
mov
mov
dec
das
xor
add
sbb
fistl
mov
insb
jns
mov
push
push
xor
xor
test
ret
push
or
loop
mov
push
ds
psrld
xor
outsl
xorl
or
stc
xlat
out
or
stos
jecxz
filds
inc
notb
lods
pushf
push
mov
sti
roll
push
es
xor
dec
rcl
out
pusha
mov
xchg
outsb
pop
hlt
dec
repz
icebp
ret
and
jno
mov
ret
jbe
test
lock
int
pop
pop
xchg
fisubs
mov
sbb
in
insb
adc
or
jg
stc
adc
push
cltd
in
lock
pop
das
cld
dec
inc
xchg
adc
out
jge
mov
and
and
int
and
dec
mov
inc
rcrb
add
mov
mov
cli
add
loopne
or
or
pop
xor
outsb
jne
outsl
pop
daa
add
xchg
pushf
pusha
push
jl
shlb
mov
adc
or
push
in
jo
push
fwait
sarl
or
mov
xchg
mov
pusha
adc
and
test
test
popa
or
cmpsb
test
sbb
imul
icebp
subl
jmp
ud2
push
sub
mov
mov
jb
ss
add
test
sbb
loop
call
xlat
mov
in
inc
dec
push
jge
rclb
or
jnp
inc
lock
daa
call
lea
sub
adc
jns
inc
out
xchg
add
cmp
lahf
inc
test
cmpsl
loopne
pop
cld
adc
mov
bound
sbb
sub
push
ret
adc
shlb
add
inc
sbb
pop
jo
xor
pop
sbb
push
cmp
xor
test
xchg
adc
test
add
in
mov
fisubl
inc
xor
add
pop
inc
adc
cmp
rorl
nop
cli
push
in
sahf
imul
arpl
xchg
lcall
mov
jge
push
fmull
cld
push
push
lds
sub
mov
sub
push
dec
adc
pop
shll
dec
dec
fsubrs
bound
add
or
mov
test
xchg
gs
add
dec
and
mov
mov
push
pop
dec
mov
mov
mov
xchg
pop
jge
add
call
cmp
pop
in
loope
in
in
push
adc
cs
dec
mov
push
sbb
cld
or
in
sbb
sbb
fists
push
jne
repz
push
dec
adc
sbb
lea
pop
decl
mov
sub
out
cli
cmpsl
iret
pusha
add
cmp
pop
adc
push
jg,pt
push
gs
clc
and
mov
xchg
cmp
dec
sti
scas
fcoms
mov
push
cmp
cs
jecxz
mov
out
add
daa
push
icebp
add
mov
pop
pop
testl
dec
popl
or
jbe
std
sbb
movsb
lret
and
daa
cld
or
xorl
insl
push
gs
add
lock
jo
in
pop
mov
je
or
pop
jge
fiadds
cmp
cmpsl
pushl
push
jle
cmp
ja
xor
sbb
fists
jbe
mov
rclb
dec
jne
adcl
pop
sub
pop
lcall
jmp
sub
ljmp
mov
sbb
movsl
jle
roll
mov
mov
mov
mov
inc
and
aaa
rcll
sbb
push
dec
mov
inc
fldt
or
sbb
ljmp
and
mov
mov
into
shl
xor
push
aad
adc
pop
lods
rcrl
adc
inc
inc
daa
inc
fildll
jbe
hlt
cmp
xor
pop
inc
or
or
adc
stos
arpl
cld
xchg
adc
mov
loop
xchg
sbb
sub
cld
adc
arpl
cli
decl
repz
in
cmp
pop
xchg
movsb
xor
jmp
sti
sbb
icebp
inc
decl
adcl
jae
mov
repz
jg
js
push
popl
pop
inc
cli
popa
or
ja
sbb
add
dec
call
xorl
or
frstor
les
adc
jl
mov
dec
cmp
sbb
and
mov
daa
add
add
arpl
ret
dec
out
adc
aad
rorb
and
mov
sbb
add
ds
sub
lock
cmp
sub
mov
inc
bound
adc
lds
lret
mov
pop
ret
das
nop
mov
cmp
pop
loopne
js
adc
jecxz
pop
push
rorb
jle
in
mov
mov
push
sub
cli
testb
xchg
mov
jb
add
mov
mov
or
pop
std
pop
movb
leave
add
jb
add
cmp
or
push
xlat
xor
sahf
push
adc
and
test
mov
js
lahf
add
cmp
dec
aam
ljmp
mov
add
das
cld
push
add
fs
cli
or
adc
adc
test
mov
adc
sub
xchg
mov
icebp
mov
iret
jno
sahf
aad
loop
cmp
adcl
xor
dec
adc
sti
fcompl
push
test
lods
ja
push
outsl
xchg
jno
sbb
cmp
mov
push
push
inc
mov
js
mov
hlt
ffreep
ja
daa
or
xchg
clc
mov
and
push
fists
popa
push
shl
jmp
fists
and
mov
lds
add
sub
daa
insl
xchg
mov
adc
cli
call
shrb
pop
add
fisubs
dec
pop
loopne
cmpl
stos
enter
or
out
incl
test
xchg
jnp
or
mov
out
dec
into
lret
int
lock
add
mov
mov
mov
add
jo
flds
test
jp
das
mov
cwtl
rcll
lret
orl
sbb
loope
cmc
jg
jmp
and
mov
test
jmp
push
ja
jmp
inc
mov
clc
cmp
add
mov
jecxz
ss
in
inc
arpl
repnz
imul
mov
call
dec
gs
jl
mov
sbb
push
in
pusha
bound
jg
xor
mov
push
rcr
jecxz
or
add
push
sbb
dec
scas
xchg
mov
cld
inc
outsl
push
inc
dec
fildll
cmp
icebp
not
jns
ffreep
add
adc
bt
mov
xchg
stos
sub
inc
adc
xchg
jg
mov
dec
sahf
xor
in
xchg
cmp
enter
dec
rol
or
in
add
mov
nop
jnp
or
mov
sbb
push
icebp
fisubrs
in
push
jns
data16
add
push
pusha
call
aaa
and
xor
movsl
push
pop
fcomi
mov
iret
pop
rolb
in
call
in
add
test
sbb
cli
push
and
clc
xchg
std
loope
inc
js
pop
rol
sbb
out
mov
or
into
fcoms
shrl
jl
out
cmp
iret
mov
or
xchg
mov
mov
dec
movsb
movsl
push
mov
test
imulb
ret
inc
mov
inc
in
jo
jg
sub
cmpsl
inc
sub
stos
and
push
sub
push
das
je
adc
fcomi
add
jo
mov
xor
xor
sub
test
outsl
sbb
cmp
mov
sub
test
es
inc
loopne
inc
mov
pop
fmull
or
in
mov
jnp
inc
in
xchg
inc
push
inc
cmc
dec
or
sbb
cli
sub
clc
jno
inc
and
cmp
push
inc
sbb
dec
or
incb
test
pop
xor
push
dec
arpl
xchg
adc
rorl
out
repz
inc
xor
cld
jbe
fsubrl
fs
adc
push
clc
inc
mov
jge
fwait
push
or
dec
nop
inc
push
stos
mov
test
fiaddl
xchg
jle
mov
push
movsl
shrl
push
or
cmp
adc
andb
inc
cmc
mov
sub
mov
lock
mov
or
add
push
jp
push
popf
push
xor
jl
xchg
cs
sub
nop
mov
dec
clc
pop
jg
cli
and
loopne
inc
sbb
test
ret
mov
ljmp
lret
adc
xchg
inc
fnsave
in
repnz
daa
mov
rorl
cwtl
mov
mov
loope
rol
xchg
inc
add
std
out
add
fildl
icebp
mov
cltd
mov
lods
and
cmp
ret
add
dec
hlt
cmp
push
dec
movsl
or
test
mov
idivb
je
cmp
jg,pn
cmp
jno
push
mov
lcall
and
dec
popa
xor
adc
andb
lret
add
movsl
sbb
mov
outsl
lock
jle
shll
add
mov
std
outsl
sbb
push
or
iret
dec
je
jp
insb
mov
cwtl
inc
incb
dec
dec
sarl
outsb
cmp
push
es
jae
and
pop
push
jmp
lcall
fwait
in
pop
sbb
cmp
or
wbinvd
es
xor
movsl
test
adc
cld
fmuls
mov
push
and
inc
movsl
aaa
dec
jnp
call
into
call
dec
icebp
out
lahf
add
push
jo
jmp
jle
or
in
mov
ja
mov
mov
in
push
jo
mov
mov
mov
ret
jne
out
enter
or
cmpsl
nop
add
push
and
int3
push
mov
adc
in
inc
push
xor
xor
rcrb
jp
adc
inc
mov
enter
bound
out
rolb
loopne
add
sub
mov
lock
scas
mov
push
cmp
sbb
add
xchg
fstpt
xor
arpl
pop
popf
xor
dec
sbb
mov
push
inc
inc
enter
sbb
cltd
cmpsl
fmuls
add
sahf
and
js
cmp
fidivrs
jbe
arpl
add
rcl
inc
mov
xchg
sub
push
or
pop
or
add
xchg
xchg
enter
lret
enter
mov
dec
or
add
push
stos
pop
aaa
and
pop
jne
mov
add
or
push
cmp
out
sub
sbb
enter
mov
mov
mov
sbb
xor
or
or
sbb
rcr
cmp
xor
mov
sub
mov
mov
push
sti
ficompl
cs
xchg
push
or
fdivp
popl
dec
fmull
js
clc
fsubrs
jmp
in
adc
sub
or
es
incl
out
sbb
mov
add
cld
sbb
push
pop
hlt
add
frstor
cmpsl
or
std
push
sti
mov
xchg
push
sub
or
adc
mov
mov
pop
fnstsw
push
stos
fs
cmc
mov
insl
pusha
add
call
push
dec
mov
loop
cmpsb
lea
push
popf
inc
jns
incb
les
enter
dec
arpl
inc
push
pop
fwait
and
and
and
push
mov
mov
pop
shll
jmp
push
inc
lock
mov
loopne
and
jnp
imul
cs
lcall
imul
add
or
push
outsl
call
insl
lret
sbb
sub
lock
xor
fistl
xchg
jo
test
add
scas
mov
imul
and
lea
test
call
sbb
jle
in
dec
stc
stos
pop
adc
in
test
icebp
filds
aam
cld
iret
cmp
and
addb
pop
insb
addr16
ljmp
dec
mov
jp
mov
imul
repnz
xchg
adc
lret
pop
outsb
pushf
shl
cmp
xchg
xor
sahf
es
mov
cmp
ss
pop
incl
fmul
jb
lds
mov
sbb
daa
jo
in
clc
outsl
and
inc
or
je
cmp
cmc
fwait
add
inc
or
lods
je
repz
aaa
mov
pop
mov
or
jmp
loopne
or
fstp
xchg
push
push
fnsave
mov
cld
push
insl
decl
pop
push
rcrl
pop
roll
dec
icebp
leave
sbb
adc
into
mov
mov
scas
pop
imul
aam
sbb
les
std
mov
or
stos
mov
inc
xchg
add
fildll
and
cmp
or
inc
and
mov
incl
in
add
and
shrl
add
add
ret
push
pop
aas
mov
and
jl
in
scas
push
dec
pusha
mov
test
push
mov
push
pop
or
test
insl
bound
bound
mov
pushl
add
shll
js
clc
add
in
pop
rcll
sti
inc
cmpsb
add
jl
xadd
sti
shrb
ds
adc
sbb
xor
subb
nop
push
mov
mov
mov
daa
sbb
pop
add
sbb
jo
pop
xchg
not
xchg
sub
mov
xchg
icebp
arpl
mov
push
fwait
imull
mov
aam
mov
mov
push
mov
mov
mov
jg
in
sbb
or
mov
out
icebp
lods
sub
insb
jbe
or
icebp
cmpsb
push
add
inc
fnsave
or
adc
test
insl
mov
mov
and
mov
repnz
cmpsl
out
insb
outsl
insb
loop
xchg
add
inc
xchg
sti
inc
insl
test
jbe
xor
adc
lret
sar
movl
outsb
cltd
or
std
and
sub
adc
js
cs
test
enter
call
xchg
lahf
mov
cmp
das
cmp
std
jecxz
and
or
push
push
fs
xor
cs
jp
jmp
push
sarb
in
add
sbb
push
xor
imul
popf
add
cltd
or
fcoms
pop
imul
ret
inc
out
inc
jb
call
ljmp
cs
adcb
ret
jns
int
push
data16
movsl
jbe
mov
jno
js
in
movsb
cs
leave
inc
mov
inc
push
lea
jb
push
push
push
outsl
jle
push
outsb
call
fildl
hlt
push
dec
cld
jo
test
in
or
cmp
cmpsb
and
test
dec
mov
sbb
cmp
test
test
in
jl
pop
loopne
xchg
aas
mov
lock
jmp
cmc
andl
mov
fidivl
pop
sbb
or
cmp
fs
gs
inc
lods
mov
dec
cmp
or
lds
push
xlat
sub
dec
lahf
inc
or
orb
nop
push
and
add
mov
movsl
not
ljmp
repnz
push
fldl
adc
mov
jbe
pop
lods
pop
jmp
pusha
push
mov
decl
popa
je
shll
xlat
push
call
aaa
and
adc
pop
inc
dec
sub
lcall
or
xchg
adc
mov
sub
das
nop
rcrb
in
mov
and
inc
cmp
push
lds
fistpl
xchg
ficomps
stos
mov
test
adc
mov
mov
test
pop
sbb
aad
mov
sub
or
xor
dec
roll
sbb
dec
imul
sbb
outsb
pushl
movsb
call
and
sub
jne
outsl
jbe
push
add
cld
push
mov
in
xchg
aad
rcr
fcomps
dec
pop
fnstcw
inc
das
sarb
jl
dec
fistps
fistps
mov
mov
stos
cltd
inc
mov
mov
fdivr
loopne
insl
mov
inc
and
out
rorb
jge
insl
add
and
sbb
test
test
outsb
adc
cmc
sahf
jns
ret
mov
rorb
pop
call
cmp
and
sub
dec
inc
outsl
adc
xchg
das
aad
jg
cmp
sbb
adc
int3
loop
in
in
out
sarl
test
mov
push
nop
cmp
rcrl
sbb
cli
out
nop
in
fs
xchg
scas
ljmp
cmp
and
pop
loope
push
fstl
adc
jle
mov
negl
outsb
xor
sub
jne
cli
jbe
inc
mov
clc
jecxz
sbb
ljmp
mov
xor
inc
xor
insb
pop
sahf
push
pop
sbb
fidivrl
jne
adc
out
stos
jbe
lret
ljmp
push
push
scas
das
adc
pop
or
pop
pop
je
or
cli
adc
cmpsb
ds
adc
scas
jg
mov
jbe
imul
jbe
push
in
sub
inc
mov
out
lods
adc
pop
sbb
dec
aam
inc
imul
push
lret
push
sub
push
out
aam
les
data16
push
push
fwait
push
and
xor
pop
hlt
xchg
orps
sbb
jne
mov
test
or
repz
or
inc
pop
jnp
fcomip
lea
les
fists
pop
addr16
mov
add
fs
or
pop
icebp
enter
mov
inc
pop
mov
mov
rcl
cld
xchg
rcl
mov
inc
rorl
push
dec
enter
fisubrs
mov
cltd
and
std
and
inc
rorb
mov
xor
xor
adc
add
push
cmp
clc
jne
fwait
ljmp
add
xor
and
shlb
int
jns
xor
xchg
cs
mov
sahf
addl
cli
test
adc
push
jne
inc
sbb
inc
je
inc
fwait
add
mov
pop
add
or
pop
in
jmp
test
pop
das
xor
mov
sarl
popf
imul
in
repnz
xor
or
sub
push
mov
pop
add
ja
lret
mov
push
pop
add
jo
mov
inc
push
sub
enter
inc
sub
inc
pop
and
mov
xor
or
movl
xchg
jp
stos
fnstenv
mov
outsl
and
js
adc
mov
popf
xor
test
pop
jg
pop
in
xchg
outsl
mov
test
cmp
aad
data16
dec
scas
jb
or
add
fcmovu
pop
push
cmpsl
rcr
pop
xor
hlt
movb
add
repnz
adc
mov
dec
adc
add
aam
addl
sbb
movsl
test
mov
or
jge
pop
pop
loope
xor
and
pop
adc
add
lock
ret
cs
add
inc
mov
fsubrl
mov
rol
daa
mov
push
push
arpl
push
loope
mov
inc
or
jo
sbb
out
cmpsb
into
insb
int
or
mov
in
xchg
loopne
movsb
out
repz
mov
leave
adc
jecxz
mov
test
dec
lcall
xchg
sbb
add
adc
call
je
ss
jno
sbb
pop
ret
aam
inc
sbb
dec
inc
or
hlt
int
mov
fs
orb
addb
or
insl
loope
mov
ss
mov
jmp
aaa
jg
insb
xor
and
data16
add
add
mov
addr16
das
sar
aaa
aaa
dec
enter
inc
lds
mov
mov
test
xchg
xchg
xchg
hlt
in
or
xchg
loop
and
dec
sub
lods
ret
sti
adc
mov
fidivrl
xchg
mov
cld
jge
jae
adc
test
ficompl
imul
or
data16
int3
adc
loopne
stc
mov
loopne
xor
cltd
and
test
dec
inc
ss
ds
cltd
xchg
ds
imul
push
push
repz
subl
popa
aam
jo
pop
je
push
aad
sub
add
add
into
outsl
xchg
rolb
and
cmp
add
cmp
mov
lret
inc
test
adc
adc
sub
sbb
popf
fwait
mov
psrlw
mov
add
pop
xchg
fadds
insb
mov
sub
adc
jge
mov
mov
je
dec
fidivs
mov
fists
stos
in
jbe
push
jp
loop
fisubrs
add
sbb
lret
push
cs
adc
daa
ret
imul
jnp,pn
sub
xlat
fiadds
movsl
push
jle
xor
in
popa
cmp
dec
fstl
mov
cmpsb
jle
push
sti
adc
daa
add
or
fisubrs
ljmp
push
incb
or
outsl
das
mov
add
push
sub
je
add
ja
xchg
xchg
inc
inc
std
xor
gs
test
xchg
xchg
adc
push
inc
dec
jne
aaa
ljmp
popa
sbb
stc
jmp
mov
test
cltd
shlb
mov
in
fistpll
subb
test
cmp
sub
or
jl
divl
psubw
incb
push
and
jmp
shr
in
fistpll
adcl
fiaddl
pop
sbb
ss
xlat
loop
and
xchg
mov
mov
ds
pop
xchg
xor
insb
mov
mov
or
cli
xchg
testl
xor
xchg
and
mov
add
dec
xor
xorl
xchg
push
xor
jmp
cltd
jmp
pop
mov
and
std
xor
fnsave
dec
pmuludq
aaa
ret
lret
mov
mov
int
into
jp
pop
cmp
popf
fsubrs
shlb
lock
cmc
add
mov
dec
or
arpl
out
mov
pushl
loop
shlb
insl
inc
int
jecxz
dec
std
inc
stc
and
mov
int3
test
sahf
xor
fsubr
ret
jp
leave
cmp
in
and
cmp
jg
xchg
lret
jmp
or
adc
in
vprotw
mov
gs
sahf
mov
sarb
jbe
loop
sub
mov
add
imul
addr16
movsb
mov
sete
adcl
imul
or
repnz
xor
stos
insl
add
and
hlt
jb
adc
push
dec
push
std
addl
xor
and
add
cld
int
or
dec
in
loop
xor
sahf
xor
sbb
hlt
add
lods
hlt
add
push
add
in
stos
pop
icebp
xchg
and
jecxz
scas
sbbb
inc
fcompl
lods
icebp
jb
xchg
fmull
inc
inc
jne
and
int3
mov
cs
sarb
rorb
dec
shrb
loopne
push
pusha
sub
out
push
fstpl
dec
loopne
adc
loopne
into
adc
and
and
adc
inc
mov
fs
or
inc
sbb
mov
frstor
inc
pop
inc
mov
int3
sub
call
in
xlat
cmp
outsl
lret
pop
add
dec
imul
cs
sub
out
push
or
mov
insl
sbb
iret
or
repz
addr16
fwait
inc
ja
movsl
cmp
lea
dec
add
jb
xor
lds
push
cmp
mov
rcrl
jecxz
testl
loopne
neg
iret
mov
xlat
out
and
loopne
dec
pop
dec
fdivrl
dec
adc
int
addl
call
push
mov
call
jle
cmp
scas
add
cmp
pop
aas
fisubs
cld
mov
dec
hlt
neg
hlt
sbb
and
str
xchg
aas
lods
dec
test
sub
enter
cmp
lret
cmp
ljmp
lods
dec
add
and
enter
mov
ja
add
push
aam
cmp
ficoms
loopne
or
out
sbb
and
call
add
outsb
orl
js
push
or
inc
or
add
mov
push
push
or
fsubp
cmpsl
int3
and
aad
je
in
lods
out
jnp
clc
loopne
bound
dec
outsb
jl
push
pop
test
dec
xor
push
lahf
je
add
icebp
pop
adcl
pop
and
adc
enter
int3
sub
xor
int
mov
pop
sahf
dec
fcom
inc
fsubl
call
scas
arpl
cmp
inc
insb
loop
lea
push
addr16
add
sbb
inc
cltd
sbb
xor
xor
pop
outsb
mov
fildll
imul
aaa
sbb
and
push
lcall
orl
daa
sarb
ss
out
in
lea
icebp
aas
arpl
or
sub
ja
shll
sbb
test
or
and
mov
lret
xor
outsb
ret
int3
insl
mov
jne
inc
xchg
adc
lret
fcoml
ja
or
test
ret
rcrb
sbb
xor
ljmp
popf
cmc
push
and
insl
xor
xchg
add
es
negb
cs
dec
lods
aam
lds
mov
fadds
mov
or
xchg
inc
lock
push
adc
loop
leave
inc
jo
mov
push
push
arpl
sbb
or
scas
jl
mov
add
xchg
dec
inc
mov
add
imul
out
out
mov
add
fwait
dec
jecxz
jb
shl
or
getsec
adc
sbb
cmc
mov
ret
loope
out
test
pop
adc
popl
add
enter
sub
or
enter
push
jno
pop
push
jmp
push
mov
icebp
adc
dec
mov
xchg
push
popa
inc
push
lods
in
adc
cmp
mov
aaa
icebp
push
lret
test
xchg
fwait
sub
xrelease
out
cmp
loop
stos
lret
fsubr
mov
mov
test
lret
inc
adc
sarl
mov
push
sti
mov
and
cwtl
aam
cs
pop
cmp
xor
pop
test
shrl
les
dec
pop
xchg
push
mov
loope
xor
mov
in
cmp
jp
je
pop
pop
in
push
jns
cs
and
adcb
int
xchg
jns
repnz
xor
sub
jg
insl
sbb
cli
lods
ret
lods
or
or
out
cmpsb
mov
and
or
loopne
mov
pop
mov
sub
push
test
and
es
out
clc
lods
std
negb
lret
mov
xor
mov
insl
rclb
push
mov
inc
mov
rorb
jno
mov
cmp
addr16
shl
pop
xchg
mov
mov
add
push
out
fs
pop
clc
or
leave
inc
push
add
clc
decl
lahf
sbb
lods
test
clc
outsl
icebp
outsl
adc
xor
in
xchg
loope
sarl
in
dec
dec
add
mov
inc
popa
in
sub
lcall
dec
xor
imul
xchg
xchg
mov
inc
jo
pop
pop
mov
mov
bound
cmp
enter
ljmp
xor
addr16
int3
cmpsl
add
cmp
jg
pop
and
popa
dec
lahf
ret
cmpsl
outsl
mov
jo
adc
bound
sti
lea
adc
repz
and
push
mov
in
call
aam
nop
pop
dec
lds
cs
cmp
pop
xor
jge,pn
jmp
adc
cmc
jae
popa
mov
sahf
rcr
sub
xchg
sti
rorl
mov
movsl
test
push
adc
or
cli
cmp
cmp
xchg
dec
aad
loop
mov
lahf
inc
mov
fxch
sbb
mov
dec
std
or
and
sti
pop
cli
adc
dec
dec
mov
mov
lock
pushf
test
sub
addr16
mul
ljmp
mov
and
inc
xor
ret
in
ret
sbb
int
add
xchg
mov
cli
mov
aaa
int
popf
enter
sbb
mov
and
adc
inc
into
mov
sbb
orb
inc
mov
call
lahf
pop
inc
lea
push
popl
pop
in
insb
shlb
scas
loop
das
pop
ljmp
mov
insl
and
rol
cmpsb
sub
mov
mov
jl,pn
pop
hlt
push
int
push
test
push
cmpsb
addb
push
cli
inc
cld
sub
shr
fistps
mov
imul
addr16
fistl
je
outsl
std
aas
roll
xorb
inc
or
dec
fcmovnb
lcall
fdivs
inc
cmp
jo
loopne
inc
xor
out
into
cld
daa
sbb
loope
stos
jmp
or
mulb
dec
cmp
lods
sub
inc
das
lods
cmp
sbb
mov
lret
rol
outsl
mov
stos
dec
test
fsubrl
rol
xor
sub
jnp
mov
js
movsl
divb
ret
xorl
ljmp
imul
js
rolb
fs
pop
aad
fmull
add
hlt
js
mov
nop
rep
fbld
xor
nop
pop
push
shrb
push
pop
sub
jl
inc
xor
jae
lock
jecxz
out
and
or
ljmp
mov
loopne
push
sub
dec
test
ljmp
inc
ja
nop
and
bnd
daa
daa
adc
icebp
fdivrs
adc
scas
pop
incb
icebp
xor
push
insb
add
lds
adcl
mov
mov
xorb
cmp
xchg
call
ljmp
js
mov
jne
sbb
jb
push
pusha
mov
and
ret
pop
stc
insl
inc
loope
outsl
push
pop
add
mov
mov
sub
cld
cmp
nop
jl
xor
pop
sbb
mov
inc
cmpsb
rorb
inc
adc
sbb
insl
jne
incl
pop
xor
out
xor
pop
mov
ja
inc
mov
out
data16
inc
mov
mov
loop
sbb
inc
cmp
xor
bound
mov
lods
icebp
xor
popa
adc
mov
sbb
je
fmuls
movsb
ljmp
orb
push
sbb
icebp
ffreep
scas
leave
scas
loope
pop
cli
scas
cmpb
adcl
adc
sti
or
rclb
sarb
imul
dec
das
jno
jnp
and
outsb
jbe
or
mov
fwait
and
mov
jge
add
loopne
sub
cltd
inc
fcmovne
mov
mov
cwtl
add
mov
mov
lds
xlat
or
mov
add
add
inc
outsb
test
xor
push
jns
add
sub
mov
popa
inc
push
cmp
push
cmp
inc
jl
dec
nop
add
or
pcmpeqd
stc
shrl
clc
inc
and
sub
in
sbb
push
mov
fiadds
lods
or
outsb
mov
inc
ss
dec
insb
xor
jl
movsl
insl
stos
pop
adc
sar
mov
adc
movsl
jns
ja
fiadds
scas
ljmp
lret
jbe
lock
sub
inc
mov
add
sbb
xor
or
sub
movsb
push
pop
xlat
sub
mov
add
push
or
and
cwtl
popa
sub
jb
mov
inc
movsb
enter
or
call
push
add
stos
add
dec
or
push
xchg
arpl
data16
pop
push
cld
out
ret
imul
shll
add
jae
or
inc
xorl
adc
jnp
lock
add
adc
js
push
in
jbe
ljmp
aaa
push
fldcw
aad
lock
daa
push
jmp
fistpll
sbb
fld
or
or
out
adc
mov
pop
imul
lahf
mov
mov
pop
in
mov
inc
fcomp
jno
test
jne
dec
sbbl
sub
mov
in
xor
xchg
loop
cwtl
sub
fists
push
jp
add
sub
jb
jo
adc
inc
xor
add
dec
int
inc
add
or
push
ja
jae
int
subb
sbb
mov
and
and
js
xor
mov
pop
or
pop
mov
roll
scas
mov
and
push
fcoml
cld
fldenv
mov
pop
in
pop
xor
nop
imul
fcomps
xchg
dec
add
jle
jge
push
inc
and
fucomi
push
cmpsb
testb
dec
jg
shlb
cmp
push
add
lcall
jo
int3
faddl
inc
int3
rcr
mov
in
call
push
sbb
inc
cmpsb
mov
cmp
bndldx
jbe
jle
add
loope
pushf
les
dec
adc
icebp
daa
push
rcll
dec
mov
pop
mov
dec
mov
inc
push
les
or
sub
outsl
testb
jge
sub
jecxz
jge
lds
push
add
inc
push
dec
enter
ror
xor
mov
ret
sarl
insl
xor
inc
daa
mov
inc
or
adc
sbb
dec
pop
mov
movsb
aas
dec
adc
outsb
jb
sbb
xlat
enter
add
inc
dec
je
mov
mov
add
lea
push
lock
invd
repnz
push
enter
inc
in
sbb
mov
xchg
cld
xor
das
inc
inc
sbb
push
add
xor
lret
add
icebp
xor
jle
out
xor
add
xor
and
loopne
arpl
and
sub
cwtl
rcr
imul
mov
loopne
aad
sub
rcll
call
sbb
and
pop
into
and
cmpsl
pushf
inc
and
je
and
pop
fs
jmp
adc
mov
jae
daa
dec
packsswb
je
js
sbb
call
mov
jmp
pop
insl
fidivl
mov
stos
mov
mov
xlat
js
or
push
mov
test
sahf
pop
stos
pop
enter
jecxz
mov
loopne
push
xchg
or
sub
mov
add
cld
cmp
cld
notl
jb
ss
ljmp
repnz
ljmp
scas
sub
dec
sbbb
dec
push
aaa
loope
add
fs
test
aaa
adc
xor
mov
inc
and
mov
mov
sub
les
addr16
clc
push
add
clc
fwait
push
out
imul
movsl
lret
ljmp
jb
jo
es
insl
mov
or
mov
out
xchg
jae
repnz
sbb
cld
add
inc
or
imulb
and
ljmp
aam
inc
push
push
aam
aas
loop
cltd
add
xor
push
fistps
ficompl
or
int
orb
xor
enter
fistpl
and
addb
out
mov
dec
cmpsb
out
add
mov
sub
in
adc
vmaxpd
mov
sub
sub
add
xchg
push
addr16
xor
jno
or
dec
adc
sti
mov
dec
xor
aam
adc
notb
cmpl
or
inc
fst
fwait
cmpsl
jge
adc
mov
jmp
out
add
popa
stos
cmp
out
sub
or
shrl
cmp
or
pop
xchg
cmp
jo
add
sbb
loope
sbb
pop
icebp
jmp
sbb
popa
dec
pop
fmuls
and
mov
cltd
addl
int3
mov
add
test
ret
fdivrp
xor
and
popf
jecxz
and
inc
adc
and
lock
lds
adc
lods
aam
inc
adc
sub
fiadds
mov
sbb
push
orb
cltd
push
xor
add
push
push
push
mov
jnp
jmp
or
and
fldenv
sbb
push
and
adc
cmp
mov
and
ret
jbe
outsl
mul
sub
inc
imul
and
xchg
test
xor
sub
aad
add
ret
inc
cs
addl
jge
repnz
imul
fidivl
push
mov
gs
sbb
shl
enter
cmp
clc
mov
dec
xor
jmp
add
fsubl
pushf
jne
repnz
push
or
or
and
bound
and
pop
mov
sub
out
push
rcll
ret
xor
cmp
scas
lods
sub
das
push
icebp
pop
mov
aas
jmp
add
push
aas
lret
sub
and
xchg
fmull
mov
cwtl
movb
clc
lods
cmpsl
mov
pop
jg
ljmp
xor
jmp
lea
and
mov
les
lea
cs
dec
cwtl
mov
pop
push
or
xorl
pop
xchg
into
pop
mov
cmp
sub
and
sub
xlat
push
je
scas
fiaddl
mov
imul
jo
mov
mov
mov
pop
inc
lret
mov
jne
in
loop
lock
mov
pop
fiaddl
gs
in
jmp
es
nop
and
inc
sub
push
imul
adc
daa
cmp
dec
add
add
push
aaa
fsubrl
fnstsw
lock
jg
fistpl
adc
icebp
mov
cmp
clc
add
adc
mov
dec
mov
sub
hlt
mov
jns
mov
pop
lcall
sub
shll
loope
psllw
push
mov
sbb
sbb
inc
divb
fnsave
add
jae
mov
jbe
sbb
test
fwait
xlat
lods
push
pop
add
jp
push
fisubl
jmp
dec
sbb
mov
fwait
out
adc
mov
sar
call
push
int
mov
xchg
adc
mov
and
pop
jl
cmp
cmp
cld
aas
mov
push
loop
popf
push
insl
mov
stos
inc
dec
sub
or
pop
mov
jmp
push
inc
xor
loop
inc
jo
aam
cli
fistpll
and
push
loope
out
sbb
testb
sub
mov
add
adc
fdivr
or
inc
in
add
dec
fs
ret
pop
pop
xchg
call
frstor
insb
sbb
mov
add
or
popf
xchg
inc
or
pushf
mov
nop
out
jnp
iret
jmp
push
test
push
std
incl
sbb
xchg
add
and
pop
js
fisttpl
rorb
cmpsb
into
mov
sbb
pop
call
ss
repz
pushf
dec
push
es
cmc
add
fwait
xor
mov
adc
and
xchg
inc
lods
and
sar
outsl
scas
sbb
xchg
loop
xchg
imul
addb
push
push
nop
outsl
ljmp
jbe
xchg
je
mov
test
mov
cmpsb
mov
into
out
dec
mov
adc
jmp
dec
push
iret
xor
push
cmp
call
in
inc
cld
sbb
andb
out
push
mov
ret
mov
mov
add
inc
cmp
push
add
pop
sti
or
imul
movsb
and
push
fwait
mov
rorl
jns
addr16
mov
cs
inc
mov
rclb
or
pop
dec
add
or
shlb
push
fistpll
dec
jg
inc
in
xchg
push
inc
jbe
and
rcrl
les
xchg
mov
sahf
dec
adc
fadds
adc
or
mov
push
inc
sarl
popf
push
test
cs
sub
lods
les
leave
cli
inc
pusha
sbb
xchg
test
add
fnstenv
ljmp
inc
icebp
icebp
mov
push
lock
jg
adc
bound
imul
sarl
mov
xor
push
rcrl
mov
adc
dec
or
mov
pushf
idivb
call
enter
pushf
add
add
addr16
int3
dec
test
and
push
push
xor
insb
sahf
or
inc
negb
xor
iret
cmp
negl
insb
popf
outsb
stos
cltd
addb
mov
bound
mov
add
xchg
arpl
clc
pop
cld
and
dec
push
push
sbb
test
loopne
out
test
mov
xor
insb
push
les
lcall
or
mov
pop
test
push
lods
out
jo
aad
xchg
xchg
icebp
inc
insl
stos
xor
xorb
mull
outsl
in
out
repz
in
fidivs
rolb
rorb
push
mov
aaa
sbb
andl
add
repz
fildl
or
sub
push
and
idivb
lea
fstp
mov
int
push
sub
das
mov
mov
inc
xor
jecxz
mov
addb
add
push
js
mov
mov
aas
sbbb
mov
movsl
call
pop
fiaddl
or
sbb
inc
fdiv
scas
and
sub
and
fcoms
sub
add
js
ja
mov
icebp
test
out
mov
push
aam
dec
xor
jb
mov
jo
cmc
or
adc
clc
and
fbld
xchg
outsb
fcmovne
dec
xor
loop
push
push
push
or
inc
out
jb
repnz
pop
xchg
sar
sbb
and
les
inc
push
dec
push
lret
mov
cmpsb
push
sti
sub
es
sbbl
mov
fisttps
xlat
mov
das
sar
pop
or
jl
das
cli
mov
lret
mov
mov
subb
pop
incl
loop
decb
xchg
and
sub
push
and
rolw
mov
mov
mov
add
pop
and
adc
mov
cltd
pop
fstpt
outsl
dec
out
mov
enter
scas
push
jbe
jp
sub
mov
pop
frstor
cltd
push
dec
and
pop
mov
mov
sbbb
and
lods
jle
cmpsb
stos
and
addr16
cmp
pop
push
push
cmp
push
inc
popa
mov
frstor
jo
es
jo
dec
js
push
inc
dec
loopne
add
andl
adc
push
pop
mov
test
adc
jns
rcrb
fisubl
mov
cmp
pop
sub
adc
popl
fyl2x
inc
sti
push
cmp
sbb
sar
jg
pushf
mov
or
add
lods
jbe
push
cmp
mov
or
je
and
adc
cmp
mov
loope
mov
adc
and
sbb
mov
xchg
add
out
movsb
sbb
jecxz
dec
loopne
insl
add
js
xchg
outsl
clc
sbb
xor
mov
test
jg
loopne
jecxz
js
shll
into
rcr
mov
add
mov
dec
into
test
mov
orb
mov
loopne
in
sub
gs
pop
jg
test
jb
popa
gs
pusha
inc
and
xor
andb
push
subl
notl
pop
inc
and
stos
add
adc
clc
iret
xor
mov
aam
adc
sbb
ret
les
inc
xchg
mov
neg
in
or
dec
push
jmp
ficoms
sti
xor
adc
pop
fisubs
mov
shll
fcmovnu
push
cmpsl
idiv
add
cltd
push
cmp
mov
mov
push
and
leave
dec
pop
call
sti
stc
mov
and
adc
cwtl
adc
dec
push
add
in
testb
jecxz
add
lock
nop
aad
andb
rclb
aaa
xchg
in
out
scas
add
shll
and
mov
push
pop
add
ret
mov
bound
aam
fdivs
or
mov
adc
mov
rclb
xor
add
dec
sarl
pop
lock
add
pop
adcl
rcll
call
and
inc
jle
sub
cmc
jns
jl
push
lea
cmp
mov
cli
sbb
jne
adc
inc
cmc
inc
push
jg
sbb
aaa
andl
and
xchg
and
mov
xlat
and
dec
add
call
jb
jns
cmp
outsl
fwait
jnp
shrl
es
lcall
or
push
loope
add
aaa
cld
pusha
push
and
pop
sbb
sbb
not
and
push
and
xor
sbb
add
pushf
andl
mov
popl
cwtl
orl
pop
xchg
xchg
mov
cmp
arpl
aas
sbb
and
sbb
popa
outsl
or
fwait
in
test
sub
pushfw
xchg
fbstp
or
jp
inc
mov
xor
sbb
ja
sbb
xchg
les
jl
hlt
or
xchg
fidivs
push
mov
push
enter
in
xchg
jo
mov
mov
and
push
pop
popa
push
mov
es
sub
icebp
test
sbb
sti
out
sbb
sbb
or
shl
stc
lea
ud1
xor
mov
mov
jae
add
arpl
xchg
js
jbe
adc
jb
movsl
cwtl
popa
push
addb
xchg
sub
push
sahf
shlb
sub
call
outsl
pop
mov
test
ja
rcrb
cmp
aaa
test
mov
mov
hlt
and
jmp
test
add
je
add
lock
mov
inc
repnz
or
or
decb
cwtl
jne
test
pushf
dec
jne
popf
fcompl
cmp
dec
mov
xchg
es
add
loopne
in
adc
add
add
mov
xchg
insb
mov
dec
pop
add
jge
cmpsb
cmp
jge
and
add
ficompl
mov
ds
sbb
movsl
lahf
movsb
fiadds
mov
push
pop
ret
mov
and
adc
jmp
shl
scas
or
dec
cmc
test
jae
pusha
adc
rorb
inc
push
add
gs
out
enter
loope
call
mov
cmc
or
loop
push
mov
xor
add
lcall
inc
rcrl
pop
and
lcall
sub
lret
fsts
and
cmp
mov
sub
sub
aaa
sbb
push
sbb
adc
mov
arpl
hlt
in
adcb
cmp
add
adc
pop
inc
out
bound
fisubl
sbb
sahf
or
mov
insl
test
out
incb
orb
fdivl
xor
pop
add
ret
xor
hlt
pop
lcall
xlat
aad
inc
sub
mov
add
fidivrs
mov
cmp
sbb
pop
dec
in
or
fsubl
dec
fisttpll
pop
mulb
pop
xchg
sti
xchg
sub
rcrb
or
xlat
jl
adc
jmp
xchg
inc
and
out
hlt
lcall
add
sbb
lods
les
and
sbb
push
mov
in
or
mov
sub
push
or
mov
or
int3
sarl
pop
test
push
out
fnsave
or
dec
pop
shll
pop
test
je
cwtl
enter
icebp
mov
mov
sbb
jae
xchg
sbb
in
faddl
cwtl
add
adc
jae
dec
sub
mov
mov
in
aad
fimull
movsl
add
dec
push
xchg
orb
jnp
or
pop
rcr
mov
cmp
mov
lret
shl
sbb
jae
mov
inc
dec
sub
arpl
xor
mov
cld
out
adc
mov
sbb
pop
jl
inc
adc
inc
cltd
dec
cmp
mov
icebp
cmp
fcomi
idivb
push
add
xchg
int
xor
fidivrs
ja
sub
xor
out
or
sub
loope
or
daa
movntps
sbb
fdivrs
push
xchg
mov
adc
add
sub
inc
pop
std
clc
sub
repnz
into
insl
adc
incl
or
pop
enter
int
sti
ss
les
rcrb
push
in
push
sar
push
add
aam
adc
repnz
push
ljmp
push
std
roll
mov
in
sbb
mov
xchg
inc
inc
inc
ljmp
je
or
jmp
xchg
fwait
xchg
out
hlt
add
stos
popa
fisttpl
xor
call
test
in
nop
jbe
call
gs
xchg
adc
loop
xor
mov
arpl
add
nop
sub
jae
jnp
add
outsb
xchg
xor
mov
rcrl
add
adc
loope
popa
add
fistpl
mov
int3
mov
sbb
cli
ljmp
test
cs
pop
vmovddup
mov
cltd
pop
std
rcr
and
outsl
clc
in
les
nop
pop
inc
sub
xor
rcl
mov
xchg
repnz
lahf
pop
pop
add
adc
xor
in
arpl
lret
mov
xchg
mov
pop
lods
add
mov
or
sub
lcall
fdivrl
lret
sub
orb
ret
lds
add
push
test
cmp
push
decl
call
jmp
cmp
push
cmp
clc
inc
mov
jne
add
out
or
cltd
xchg
into
jb
movsb
mov
lods
sbb
cmp
push
fsubrl
mov
in
push
cmpsl
cltd
icebp
inc
arpl
dec
pushf
add
insl
jge
xor
mov
xchg
out
pop
jp
xor
cmpsb
jbe
in
jp
sub
and
cltd
mov
cs
shrl
lret
sbb
add
push
test
or
loop
int3
incb
add
cli
pop
sub
xchg
pop
push
adc
fwait
hlt
test
fs
adc
and
std
loope
add
lock
fisubs
sub
or
ds
adc
cmpsb
sti
inc
jmp
fildl
adc
and
dec
push
gs
repz
sub
scas
stos
pop
push
mov
xchg
add
imul
aad
dec
cmp
ljmp
out
cmpsb
outsb
popf
pop
nop
jo
out
je
and
sbb
sub
sbb
pop
push
int3
mov
call
mov
push
in
or
mov
cmp
push
or
pushf
ljmp
popf
sub
test
jl
mov
mov
or
out
add
call
push
aas
enter
inc
call
daa
or
shlb
mov
lock
mov
push
pop
loopne
sti
inc
ret
movsb
and
cwtl
int3
sub
add
out
fucom
push
fwait
cmp
test
sub
xchg
stos
lods
test
rolb
lahf
mov
add
aam
scas
xor
mov
hlt
pusha
xchg
daa
fmull
fwait
sub
inc
mov
aas
int
pop
stc
addr16
xchg
loope
ret
sub
out
rolb
dec
add
sbb
daa
rorb
adc
dec
insb
adc
js
test
cmp
shlb
cmp
pop
adc
push
sbb
test
insb
stos
push
xor
add
inc
xor
jb
or
jg
pop
int
shll
ds
xlat
cmp
push
ljmp
inc
jecxz
stos
add
pop
push
xor
aam
adc
rorl
push
sbb
fistpl
pop
pop
push
scas
xor
out
pop
popa
push
xchg
adc
lock
in
inc
add
push
loopne
pop
mov
push
fs
ret
mov
scas
push
add
sub
mov
inc
insl
andb
xchg
xor
add
sbb
loope
jb
mov
jo
push
mov
push
mov
and
fbstp
jae
pop
mov
jmp
sbb
pop
inc
fbstp
cli
ds
into
dec
arpl
scas
jge
adc
cmp
je
pop
shrl
push
inc
pop
push
std
sub
arpl
sbbb
pop
negl
push
aam
es
push
add
adc
test
jae
add
addr16
add
dec
add
scas
rolb
pop
adc
mov
stos
sbb
test
ret
movsb
addr16
mov
xor
sbb
inc
add
cmp
dec
addb
loop
aas
out
fsts
dec
xor
lds
rolb
mov
mov
mov
and
dec
adc
shlb
pop
leave
adc
pop
pushf
loope
inc
scas
rorb
jno
sbb
repnz
pushf
ds
div
hlt
shlb
dec
pop
lcall
rolb
loopne
rorl
cmp
inc
mov
in
call
fisttpll
outsb
mov
pop
sbb
test
imul
adc
sarl
ljmp
lret
test
shrl
and
movb
push
lock
fxch
sar
xchg
dec
fwait
xor
mov
pop
clc
rcr
sub
and
xor
pusha
xor
adc
cmc
decl
xor
rorb
imul
roll
and
xchg
shr
push
mov
inc
push
fisubl
cmpsb
arpl
shl
outsl
inc
fsubrl
inc
movsl
sbb
and
pop
faddl
sbb
mov
in
out
and
add
call
add
pusha
mov
add
pop
sub
pop
sarb
mov
je
inc
push
adc
out
mov
movsb
mov
add
xor
in
jg
flds
sbb
sub
shlb
jb
xchg
fistl
outsl
sbb
lods
cmc
icebp
inc
and
sub
shlb
incl
jnp
adc
and
add
in
lcall
imul
inc
xchg
xlat
mov
sbb
repz
or
mov
push
push
sbb
xor
idivb
aas
xchg
pop
jp
mov
sub
xor
adc
in
je
in
lcall
gs
mov
jle
nop
inc
je
les
dec
test
in
or
jb
push
addr16
hlt
hlt
push
test
in
pushl
inc
sub
mov
sbb
mov
mov
cs
ret
or
js
mov
pop
sbb
push
cmp
or
pop
inc
js
outsl
fwait
jg
lret
ja
arpl
adc
mov
push
add
clc
ret
sar
cmp
adc
js
pop
xchg
xchg
aas
in
ret
mov
stc
bound
dec
icebp
xchg
jnp
xchg
adc
pop
sub
mov
ret
inc
test
xchg
int
xchg
xor
das
test
push
icebp
cmp
add
adc
inc
out
jmp
shr
push
inc
bound
imul
cld
shr
outsb
pop
push
sbb
std
jle
mov
insb
aaa
stc
inc
dec
sub
add
jb
push
rorl
fwait
or
add
jno
xor
add
icebp
lds
lods
push
test
sbb
push
not
pushf
xchg
scas
pop
jmp
mov
or
push
filds
arpl
faddl
aam
out
divl
jecxz
or
push
cmp
test
movl
inc
popf
arpl
loopne
ljmp
fcmovnu
test
addps
mov
xchg
sbb
mov
sbb
ds
mov
stos
inc
rcrl
and
push
and
call
pop
outsl
cmp
fs
mov
adc
ficomps
or
mov
pop
xchg
or
inc
xchg
mov
cld
adc
add
hlt
adc
out
ds
jo
add
xor
sbb
xor
cwtl
and
mov
in
jbe
mov
fsub
add
mov
fs
js
fildll
sbb
dec
xchg
push
pop
push
sub
xchg
outsb
outsl
push
test
and
cmp
xor
xor
sbb
mov
adc
adc
dec
jmp
mov
fdivrs
popa
mov
and
lods
fistl
add
adc
cmp
xchg
cmp
fidivs
gs
bound
pusha
add
push
inc
insl
jbe
cmpsl
add
push
adc
push
stos
cmc
outsl
adc
inc
fmul
dec
xchg
dec
mov
das
enter
jmp
clc
mov
insb
mov
cmpsb
adc
adc
test
js
cmp
jle
mov
pop
fcmovu
mov
and
xlat
mov
xchg
ret
sub
test
imul
mov
repnz
repz
push
clc
lods
pusha
mov
pushf
into
mov
rcll
aad
fldt
add
inc
sbb
push
jl
dec
pop
xor
sub
outsl
fcmovnbe
scas
lods
aad
shll
jo
fwait
add
mov
icebp
adc
jbe
js
pop
ficompl
adc
dec
and
mov
and
mov
shll
inc
dec
cmp
jge
pop
subb
stc
and
sbb
int3
xchg
repnz
sbb
mov
mov
jp
dec
adc
sbb
mov
aam
cld
out
push
mov
aaa
in
leave
les
gs
stos
out
je
dec
addl
out
cmpsl
mov
fcomps
lea
mov
fisubl
mov
call
push
jmp
loopne
xchg
movl
mov
push
jl
lods
jle
add
out
add
inc
pop
lea
bound
mov
subl
mov
inc
inc
hlt
lods
xchg
outsb
jg
aad
out
push
ficoml
lock
push
push
and
mov
das
push
sbb
push
inc
popf
ljmp
insl
mov
push
push
loopne
add
out
lock
cmpb
in
lods
push
out
cltd
mov
test
imul
cmp
mov
jb
loope
aad
pop
xor
sbb
mov
pop
push
pop
cld
jecxz
adc
fistl
rol
mov
div
dec
fmull
test
decl
out
ret
pop
test
mov
test
inc
idivb
sahf
ds
jmp
add
cltd
jle
and
popa
add
out
dec
outsl
jg
dec
stos
mov
inc
mov
outsb
cmp
clc
jno
fildl
outsb
push
stos
into
in
and
pop
push
aam
lock
test
scas
sar
fists
xor
sbbb
jecxz
loopne
int
xorb
mov
shll
loope
jbe
xor
bound
dec
das
imul
inc
ja
clc
adc
xchg
jg
xchg
mov
cmp
mov
cmp
jl
mov
push
push
mov
xor
out
push
pop
dec
in
pop
mov
mov
movsl
dec
pop
push
or
xchg
je
mov
aas
adc
adc
xchg
int3
or
cld
lahf
imul
xor
aaa
jbe
fs
lahf
push
adc
push
push
lock
sub
cmp
adc
inc
jbe
xlat
outsl
sub
push
pop
out
jecxz
jo
or
mov
push
pop
inc
mov
or
insl
imul
sub
shlb
adc
das
sub
sbb
push
pop
ret
or
lock
inc
push
xchg
mov
mov
pop
jge
mov
and
shr
and
movsl
sbb
sahf
inc
ljmp
imul
arpl
jg
jbe
ss
pop
je
sahf
adc
in
inc
sbb
sub
imul
jmp
je
pop
or
push
pop
cmp
sub
imull
xchg
lea
dec
jae
jl
outsl
aaa
icebp
std
icebp
movsl
pop
lea
mov
and
rcr
leave
popa
daa
call
lahf
icebp
pop
outsl
mov
test
fadds
out
push
mov
aad
movsb
stos
loopne
imul
push
add
adc
lea
fnstcw
push
icebp
cmpsb
mov
out
add
lock
test
lcall
lret
shlb
sbb
sub
push
cmp
add
jle
popf
rorl
and
lret
pop
mov
cld
jmp
and
jnp
mov
shrb
sbb
lcall
xchg
adc
ss
mov
in
ret
add
mov
push
and
inc
es
lock
or
push
dec
xchg
jg
lock
add
out
add
les
loopne
int3
adc
in
pop
sbb
fs
xor
loope
mov
das
std
outsl
lcall
push
inc
push
push
pop
sbb
mov
xchg
push
das
sbb
js
sbb
outsl
xchg
jg
add
mov
daa
addr16
or
addr16
dec
inc
xchg
mov
cmp
aaa
jmp
icebp
xor
xor
out
inc
std
add
cmp
mov
ret
lods
lods
ljmp
sti
or
std
ljmp
add
clc
daa
mov
mov
push
notb
mov
dec
movntps
ret
pop
mov
outsl
in
adcl
mov
xor
ds
in
mov
mov
movsl
push
mov
lock
jne
pop
pop
mov
inc
mov
mov
in
mov
out
push
out
xchg
or
xchg
push
inc
movsb
xor
sbb
push
incb
shll
cld
jo
scas
mov
lds
xchg
mov
sbb
pop
sbb
int
std
or
adc
sbbl
mov
out
push
pop
gs
test
ljmp
hlt
in
push
pop
add
or
test
xorl
test
call
or
mov
popf
std
jg
sbb
inc
das
pop
cmp
in
or
cmc
divb
aam
mov
mov
imul
nop
and
mov
inc
hlt
mov
inc
push
mov
sub
pop
mov
or
mov
std
pushaw
mov
push
jae
mov
loop
add
pop
popf
mov
pusha
mov
call
nop
dec
add
je
mov
inc
pop
jp
xor
loope
adc
cwtl
adc
adc
xchg
test
cld
fld
rcl
lds
jmp
inc
jge
call
jecxz
mov
shrb
mov
mov
add
jge
int3
add
sub
rorl
cltd
inc
jge
and
outsl
jl
clc
sub
fidivs
setbe
mov
jmp
jno
xor
and
test
mov
fwait
clc
mov
les
push
cwtl
pusha
pop
and
or
aad
daa
fisubs
mov
inc
out
add
xor
dec
and
fstl
call
lahf
xchg
js
sbb
and
jl
cmpl
xchg
icebp
and
negb
mov
push
loopne
fadd
cmp
sbb
mov
out
lcall
add
cmp
jmp
push
rorb
fwait
cmc
cmp
inc
pop
jle
nop
mov
insb
and
popa
arpl
mov
mov
sarl
aaa
mov
adc
xchg
cmp
scas
cmpsb
pop
bound
pop
mov
add
or
dec
ljmp
shll
popf
test
outsl
insl
fiadds
xchg
add
testb
or
in
sbbb
mov
jbe
lahf
adc
and
mov
testb
insb
inc
cmp
sti
lcall
or
inc
add
mov
jns
pop
xor
fisubl
xor
cmp
popf
xor
lds
lock
xorl
mov
or
add
sbb
pop
sbb
stos
and
pop
loop
imul
xlat
jg
mov
iret
pop
mov
jns
imul
add
shll
push
mov
adc
jmp
and
call
in
jecxz
icebp
test
push
mov
enter
xor
sahf
call
loopne
mov
add
sbb
xchg
sub
cmpb
inc
sub
push
push
add
aam
jno
xor
ljmp
push
hlt
addb
cmp
push
inc
xchg
loop
mov
outsb
or
jbe
mov
or
loopne
adc
sub
shr
fldenv
and
test
jo
or
enter
mov
inc
popf
lea
xchg
jge
add
adc
and
rcrb
mov
not
cmp
and
sub
push
rcr
jno
ss
xor
push
adc
pop
cmp
pop
sbb
loop
mov
add
pop
add
ret
and
je
inc
jl
pusha
mov
sub
add
cmpsb
lahf
or
subb
or
jmp
and
mov
add
shrb
rcll
xchg
mov
cli
or
mov
call
and
ret
fwait
adc
or
add
and
dec
cltd
cmc
and
popa
inc
sbb
add
stc
fistpl
adc
mov
adcl
rcr
imul
push
add
lods
out
add
stos
mov
xor
add
hlt
push
daa
add
pextrw
lds
or
xchg
sbb
pop
pop
dec
sub
jbe
andb
xor
jge
repnz
sub
stos
pusha
rclb
popw
mov
stc
in
or
sbb
xor
lea
rorb
sbb
jmp
or
adc
sub
mov
adc
sub
int
inc
xor
test
xorl
jbe
add
mov
sub
xchg
rorb
out
or
push
cmp
jmp
pusha
cwtl
push
cmp
or
dec
int
es
xchg
jb
popa
ret
pop
int
jl
inc
or
fisttpl
sub
push
or
inc
mov
add
push
rolb
ds
push
or
scas
sbb
add
add
push
clc
adc
les
push
xchg
ljmp
dec
aas
mov
stos
inc
jae
pop
imul
es
add
sbb
adc
jecxz
sahf
xchg
filds
das
ljmp
fisttpll
mov
cmp
movsl
aam
add
or
lods
orl
and
xchg
add
aam
xor
shrl
aam
fsubr
out
dec
push
push
sub
jle
mov
or
outsl
mov
cld
adc
scas
scas
jle
push
testl
movsl
adc
and
mov
cmp
push
or
les
pop
loop
xchg
mov
push
mov
xchg
leave
push
out
fbld
mov
sbb
daa
mov
pop
adc
push
mov
fnstcw
nop
cs
iret
add
sbb
cli
jg
inc
and
popf
inc
dec
xor
aad
inc
call
push
shrl
aaa
clc
add
sub
pop
mov
xor
andb
bound
lret
notb
sbb
inc
insb
gs
shll
fs
fmulp
mov
sbb
mov
pop
jbe
pop
pop
int3
adc
stos
and
adc
shll
cltd
pop
test
and
addr16
fstps
add
shlb
xchg
pushf
mov
icebp
jg
and
sbb
decb
push
call
repnz
stc
es
xor
imul
hlt
jmp
fdivrl
jg
mov
pop
je
push
test
cmp
lahf
bound
push
movsl
fisttps
pushl
inc
xchg
mov
jg
ljmp
xchg
sbb
adc
push
mov
cmp
push
std
push
mov
lcall
pop
stos
sarl
push
dec
aas
cmc
or
movsb
movq
imul
dec
or
jmp
pop
fldt
mov
adc
or
mov
and
rclb
xchg
adc
pop
pushl
dec
pop
pusha
push
dec
xor
mov
xchg
sub
cli
or
scas
das
das
fwait
sub
push
xchg
sub
rorl
cld
xchg
xor
mov
mov
stc
sbb
adc
out
or
xor
push
add
ljmp
insb
orb
ret
add
subb
fstpl
mov
xchg
imul
add
sbb
lret
dec
inc
adc
out
xchg
arpl
push
mov
fcoml
mov
mov
push
xor
adc
cli
pop
outsl
lcall
ret
fiadds
sub
add
adc
lahf
xor
movsl
test
xor
nop
sub
cmp
loope
pushl
test
out
lods
sbb
cmpsl
shlb
lret
mov
inc
push
or
out
jne
and
test
mov
xlat
xchg
xchg
fdivs
adc
push
rol
cmp
inc
dec
outsb
in
inc
aam
xchg
pop
repnz
out
pushf
pop
xchg
jne
scas
ljmp
or
cmp
rcrl
fsubrp
ja
cs
sub
adc
rcrb
sbb
sti
bound
lods
mov
mov
test
mov
jbe
push
push
or
loopne
mov
call
push
xor
sbb
out
std
fnstcw
jge
mov
fstpl
data16
ljmp
rol
rcrb
mov
mov
mov
cmp
mov
add
adcb
cmp
shlb
iret
cmpsb
ljmp
push
or
into
mov
cwtl
xor
or
inc
loopne
clc
test
mov
sar
outsb
and
ja
pusha
jno
in
and
or
andl
jmp
and
mov
outsl
push
or
pop
or
test
fistl
or
sub
xor
clc
cli
arpl
movl
adc
jnp
mov
fwait
mov
mov
test
pop
cmpb
inc
pop
jnp
mov
std
stc
das
mov
pop
ret
lock
andb
sti
jnp
cmp
lcall
loopne
lahf
push
cmp
inc
sbb
xchg
nop
xchg
lock
jo
addl
and
pop
mov
pop
imul
cld
sbb
cmp
push
mov
test
jg
cmc
and
push
mov
adc
and
or
out
fidivrs
sbb
add
pop
mov
dec
adc
or
cs
nop
ss
cs
in
add
clc
shlb
pushl
xor
dec
aaa
dec
jmp
fwait
mov
sub
dec
adc
shlb
clc
aaa
cld
inc
add
inc
sub
popa
shlb
cld
aaa
pop
push
push
jp
mov
add
sti
push
xor
mov
add
and
mov
std
mov
das
lods
jae
xchg
pop
cli
mov
dec
mov
or
jmp
aad
jo
idiv
sbb
shrl
sbb
dec
jg
dec
icebp
outsb
pop
popa
dec
subl
outsl
mov
fadds
xor
and
add
mov
pop
cs
inc
outsl
lods
inc
xchg
sub
mov
push
sti
inc
test
popf
xchg
and
shrl
incl
bound
mov
loopne
pop
call
adc
jmp
outsl
pop
outsb
xor
xchg
cmp
mov
das
mov
js
mov
int3
push
xchg
xchg
aad
jbe
pop
mov
iret
jbe
pop
test
xor
ficompl
insb
xchg
or
aam
sub
punpckhdq
jp
loope
pop
or
xor
aad
jg
add
mov
sbb
adc
cmp
dec
jne
pop
mov
inc
int3
test
jg
jg
cli
call
sub
popa
call
fistps
push
inc
jg
test
jne
xlat
add
add
jle
push
je
enter
icebp
mov
sub
into
and
scas
dec
xor
add
inc
fldt
jmp
aas
push
call
ficoml
cmp
out
cs
mov
aad
out
or
mov
mov
or
adc
cmp
movsl
lods
ljmp
xchg
xor
adc
dec
pop
scas
mov
mov
jle
outsl
loop
mov
out
jbe
enter
inc
or
add
pop
loop
inc
ds
xchg
mov
fldt
mov
js
push
or
push
mov
mov
inc
lds
push
adc
pop
cli
cmp
xor
popf
sbb
into
lock
xor
pop
stos
mov
lea
pop
push
insb
push
mov
lahf
jg
loopne
or
or
roll
cs
iret
jg
bt
cmpsb
cmp
jae
mov
ja
call
add
inc
gs
dec
loop
outsl
sbb
out
pop
xor
and
mov
adc
add
divl
dec
push
movsl
xor
or
data16
xchg
in
jge
cs
movsb
imul
mov
jecxz
xchg
repnz
inc
cmp
jbe
sbb
insl
mov
push
nop
stc
daa
mov
ror
and
outsl
sbb
faddl
adc
shlb
sahf
dec
and
jbe,pt
add
scas
ss
push
pop
loopne
call
out
in
inc
xchg
and
pushl
loop
sahf
jnp
push
mov
ja
sbb
and
fadd
cmpsb
adc
jnp
and
shrb
mov
test
mov
xchg
test
pusha
popa
jmp
mov
jecxz
mov
jb
pop
push
movb
addr16
idiv
lcall
enter
cmp
xlat
lret
fwait
imul
and
mov
fsubp
adc
lds
cld
jne
mov
inc
xchg
loopne
ja
add
mov
mov
xchg
mov
testb
arpl
aas
push
nop
push
cld
cwtl
add
fcoml
stc
cmc
adc
push
hlt
pop
testb
out
dec
pop
and
fcoml
mov
sbb
lcall
js
in
or
mov
stc
xchg
adcb
les
jg
mov
hlt
xchg
or
push
mov
mov
adc
dec
jnp
outsl
pop
or
xchg
inc
pop
xor
movsb
inc
mov
leave
jne
pop
adc
add
leave
movsb
inc
push
out
ss
adc
scas
mov
rolb
fstp
stos
pop
add
mov
xchg
pusha
lds
mov
push
icebp
or
push
inc
enter
adc
or
adc
fsubrs
and
test
popf
adcb
jns
or
pop
mov
stos
ret
icebp
insl
jmp
in
or
cmp
mov
lea
adc
adc
add
lea
and
jo
clc
or
or
pop
adc
ret
rolb
mov
test
aaa
dec
sbb
sbb
push
orb
dec
ret
mov
mov
std
jg
mov
cmpl
jnp
inc
dec
cmp
les
mov
pop
pop
xchg
or
fldt
incl
out
xchg
scas
push
cli
jge
mov
xchg
ja
fnsave
pushl
jb
sbb
clc
adc
pop
movsl
mov
loop
imulb
mov
jo
pushf
mov
pop
js
mov
scas
and
scas
fsubrl
push
sub
mov
call
dec
or
mov
push
call
fnstsw
outsl
and
icebp
test
xchg
adc
jmp
mov
xor
xchg
scas
and
pop
or
test
dec
and
cmp
lods
mov
push
bswap
fs
add
push
test
hlt
and
adc
ret
cld
adc
pop
add
inc
sar
cmovg
testl
fcomps
test
test
or
jnp
aaa
xor
pop
add
push
das
arpl
fnstsw
in
loopne
mov
push
dec
std
add
jecxz
test
pop
mov
jne
aas
xchg
lock
leave
rolb
xchg
inc
ss
mov
adc
addr16
pop
sti
fldt
push
sbb
and
and
xor
push
cmp
or
cwtl
sahf
lock
nop
or
lcall
inc
aas
jbe
jnp
popa
mov
jmp
xchg
sub
sti
mov
into
lods
sub
push
inc
xlat
mov
pop
and
jg
mov
xchg
and
ret
or
loope
and
xchg
insl
rclb
push
cmp
js
jg
loop
push
add
mov
lret
ds
negb
shlb
jg
lods
adc
lahf
push
js
or
out
or
jbe
sbb
pop
cmp
fcmovb
jmp
lds
sub
js
sub
add
popa
fcmovu
fcmovb
or
mov
cmc
sub
flds
mov
push
std
xor
daa
imul
pop
or
and
aad
shrb
into
ficoms
call
push
mov
jg
ret
fldt
and
sbb
mov
inc
bound
mov
out
imul
icebp
push
inc
addb
mov
orb
push
loopne
imul
es
xlat
inc
mov
push
std
dec
jl
out
cmpsl
mov
inc
push
loope
outsl
mov
stos
sub
popa
sbb
sahf
push
dec
inc
lcall
pop
mov
mov
adc
or
mov
bound
xchg
sub
xor
in
es
lods
adc
popa
add
cli
jbe
loopne
mov
sbb
jo
jle
aaa
push
mov
pop
outsl
inc
sbb
std
outsl
sub
pushf
inc
out
fistpll
sub
push
aad
xor
nop
test
repnz
jnp
loope
pop
dec
inc
jge
fmulp
cld
xor
cmp
divb
cs
movsl
mov
push
jge
dec
cwtl
and
cltd
andl
lcall
and
scas
adc
ljmp
or
or
jno
mov
inc
shl
movb
add
roll
cmpsl
shr
clc
dec
mov
je
sub
mov
mov
repnz
push
or
push
outsb
rcrb
mov
cmp
addb
fsubrs
addr16
int
dec
pop
int
shrl
sub
cmpsl
jl
add
jp
clc
jmp
and
std
mov
and
pusha
push
hlt
or
and
add
outsb
outsl
out
mov
insb
fists
dec
adc
push
xor
aam
cmpsl
and
movl
nop
cmpb
push
repnz
imul
pop
pop
ret
sbb
call
sbb
enter
pop
push
inc
ficomps
or
dec
or
adc
pop
lds
subb
xor
mov
sub
popa
call
sahf
xorl
addr16
or
or
lret
andb
cld
popf
popa
pop
jno
push
sub
int3
adc
cmp
movsl
mov
cmp
mov
testb
inc
adc
adc
or
daa
andl
cmp
stos
dec
shrl
mov
xor
add
and
adc
cmc
les
push
adc
inc
xchg
jge
pop
mov
mov
push
xor
sarb
loopne
shll
dec
adc
mov
and
push
push
xlat
adc
stos
and
das
testl
xor
cwtl
rep
fs
adc
icebp
push
push
jae
lods
sub
sbb
lods
and
jge
adc
add
call
sub
or
das
mov
loopne
adc
fisttpl
or
xchg
xlat
push
mull
and
adc
lcall
in
stos
andb
xor
leave
mov
and
sbb
movsl
cmpsb
popl
mov
mov
add
sub
xor
fdivrl
cli
jge
aad
nop
insl
mov
std
xchg
ja
fwait
push
lret
je
rolb
mov
mov
in
jne
mov
andl
sbb
mov
in
cmpsl
call
cli
cmp
mov
sub
nop
rep
xchg
clc
push
dec
scas
lahf
andl
cmpsl
jp
mov
push
jge
daa
pop
inc
push
xor
mov
mov
rolb
add
cwtl
lods
ljmp
jge
and
and
jle
ss
lcall
les
jle
shl
inc
and
jg
incl
add
and
test
jmp
pusha
dec
outsb
jmp
mov
xchg
mov
cmp
std
pop
sbb
adc
clc
ja
lahf
pusha
cmpsb
out
fdivrp
ja
or
cmp
sarl
or
push
mov
mov
stos
popa
jge
add
push
dec
out
or
out
sub
jbe
or
daa
bound
pusha
push
xchg
sub
fcmovnbe
pop
cmpsl
imul
stc
in
stos
inc
fistpll
jno
sub
loopne
adc
filds
pop
mov
dec
adc
and
adc
pop
or
icebp
les
mov
sbb
test
or
cld
popa
or
inc
push
inc
cmc
add
pushl
dec
andb
fiaddl
into
cmc
adc
shrl
popa
cli
mov
into
mov
hlt
mov
xor
loop
add
aas
xor
mov
imul
sbb
xchg
add
pop
out
add
adc
sbb
clc
aas
pusha
inc
and
bound
loopne
jp
pop
insl
ja
xor
mov
cmpsl
mov
cmp
sub
xor
mov
add
nop
xchg
pop
nop
popf
jmp
add
bound
mov
xor
loope
jno
in
and
push
dec
pushf
lock
adc
jp
roll
inc
in
in
xlat
sbb
cs
outsb
adcb
aaa
adc
jb
int
sub
insb
cmpsb
or
pop
jne
and
cmp
lods
cwtl
mov
jg
shll
int
push
adc
aaa
out
mov
adc
mov
add
xlat
cld
in
add
cmp
shll
mov
mov
lock
in
dec
sub
and
cmp
imul
push
xchg
mov
rolb
jo
loopne
xchg
or
sub
cmpb
insl
cltd
nop
xchg
xchg
add
adc
inc
mov
fadd
xor
push
add
es
test
add
data16
popf
push
shr
sbb
hlt
adc
pusha
push
fists
jmp
add
push
in
xchg
add
sbbl
mov
out
mov
xchg
lods
fldenv
lcall
adc
adc
add
lods
stos
inc
ds
cld
push
lahf
push
loope
adc
fcmovnb
mov
stos
subl
xchg
push
sbb
xor
pop
loopne
cli
out
add
or
out
mov
push
lods
outsl
xchg
ss
fucomi
addr16
fsubr
call
jg
inc
and
repnz
add
loopne
test
adc
and
outsb
daa
aas
dec
int3
fildll
xlat
call
incl
data16
push
pop
inc
and
pop
call
adc
sbb
cmp
mov
mov
xchg
sub
aad
jbe
jge
xlat
push
or
fidivrs
loopne
enter
cli
xor
mov
xchg
cs
jo
lea
in
test
xchg
cmc
in
hlt
mov
mov
es
jae
add
adc
mov
cmp
mov
mov
pop
inc
inc
out
into
sti
jnp
test
aas
mov
xchg
or
out
sbbb
hlt
dec
sub
fcompl
aam
adc
cli
cmp
add
pop
and
lock
sti
push
adc
addr16
icebp
pop
inc
pop
jmp
and
aad
arpl
repz
out
dec
and
push
pop
cmp
das
leave
push
rolb
cli
pop
add
or
cmp
insl
shlb
daa
sub
ja
fdivrp
mov
adc
dec
in
xchg
jge
sbb
push
cwtl
les
dec
movsb
pop
mov
cwtl
rcrl
sti
fcoml
in
mov
scas
fbstp
jl
xchg
push
and
jnp
ljmp
ficoml
idivl
push
scas
sbb
inc
mov
stc
in
insb
clc
push
lock
cmp
das
rcll
and
sbb
fwait
and
adc
fcom
ds
loopne
jmp
mov
push
inc
shll
insl
inc
pop
movsb
rorb
scas
xlat
adc
jle
inc
push
inc
les
jmp
movsl
lahf
mov
and
adc
push
xchg
dec
jne
movsl
and
sub
mov
js
push
leave
out
ss
popa
pop
clc
test
inc
bound
add
xor
subb
in
mov
dec
fs
xor
mov
push
xor
mov
push
movsl
test
jmp
test
mov
iret
daa
movsb
pop
push
nop
adc
outsl
or
insb
sub
cltd
lahf
cmpsl
cltd
inc
scas
mov
aad
cmp
cli
aad
mov
push
jbe
sub
test
stos
push
adc
jp
jo
loop
out
mov
adc
lret
sbb
push
insb
mov
push
xchg
test
fistl
push
push
fdivp
mov
and
sbb
lods
sbb
jmp
add
cwtl
xor
popa
mov
andl
lds
cltd
push
add
lds
in
add
jp
mov
pop
ja
adc
out
add
into
movsl
sti
sub
das
fsubl
in
aad
jp
enter
insl
insb
sub
pop
add
hlt
sub
sbb
popa
mov
adc
inc
xor
or
jg
and
rep
xlat
test
loopne
stos
scas
std
xchg
addr16
jge
outsl
adc
xor
stc
push
pusha
loope
cs
daa
loope
mov
lock
inc
outsl
lds
call
cmp
and
pop
mov
in
xchg
cltd
sub
sti
je
jp
ficompl
ja
je
mov
loop
fcmovnu
lods
dec
inc
lock
add
sbbb
in
out
jo
xor
pop
jne
shl
data16
icebp
cwtl
call
decl
pushf
jge
pushf
adc
xchg
jae
sbb
fadd
popf
inc
dec
cmp
js
outsl
fdivr
sub
jnp
xchg
lret
jne
frstor
jnp
fucomp
pop
xor
and
or
les
cmp
iret
data16
jns
xchg
stc
cmp
jecxz
loop
inc
bound
inc
pop
divb
hlt
sbb
adc
sarl
ds
loopne
xchg
xchg
outsl
adcb
js
dec
lods
ret
add
pop
repnz
push
xchg
sub
push
les
fwait
orb
pushf
cmp
push
insb
scas
scas
stos
xchg
jbe
cs
ficoms
mov
pop
pushf
and
mov
hlt
stos
push
mov
call
mov
sub
fdivl
clc
mov
imul
inc
xchg
rcrl
mov
lock
jbe
push
add
mov
or
daa
jp
pop
jne
outsb
jecxz
daa
arpl
cmp
int
inc
xchg
ljmp
xchg
pop
add
cmp
xchg
xor
out
pusha
inc
adc
popa
ficoml
jmp
or
or
jecxz
mov
sub
and
lds
testl
loopne
cmp
add
cmc
adc
xor
sub
mov
jecxz
cmc
jae
call
mov
cs
mov
sbb
push
xchg
ds
add
mov
stos
pop
hlt
sub
cmp
or
xor
ror
xor
test
clc
xor
mov
fcompl
sbb
and
pop
jbe
jae
and
push
outsb
loopne
push
out
cmc
dec
add
mov
push
sub
xchg
in
inc
mov
inc
dec
mov
add
out
das
add
shr
pushf
cmpsl
and
fcomp
js
int3
adc
add
mov
sbb
cli
jnp
fnstcw
jnp
add
jnp
inc
and
xchg
aas
xchg
inc
lock
into
xor
xchg
stos
mov
or
pop
xchg
pop
adc
add
sub
jo
xchg
inc
add
shrl
sub
xor
add
jp
jo
pop
jo
in
mov
leave
add
insl
or
fwait
mov
pop
add
add
inc
and
je
or
fistpl
mov
dec
push
or
sbb
sbbb
mov
cmp
insl
ret
icebp
dec
xchg
and
inc
cmpl
cmpsb
dec
sti
arpl
lock
mov
jne
ss
cs
pop
int
inc
leave
pop
leave
add
inc
mov
or
cld
or
orb
jle,pn
mov
mov
test
faddp
push
push
lds
sti
aam
adc
adcb
fnstcw
rolb
shl
popf
sub
fs
popf
add
stos
lret
sbb
shlb
sub
mov
add
xor
cmp
mov
push
adc
mov
cmc
pop
out
dec
or
test
xor
and
mov
ja
in
jge
scas
stos
loopne
mov
add
and
stos
or
or
andb
pop
adc
xorl
jo
pop
pop
fists
pushl
sbb
scas
mov
xor
pop
movsb
sub
jne,pt
sbb
inc
jmp
shlb
mov
pop
imul
lods
mov
dec
adc
dec
js
rorl
shr
cmpsb
shlb
push
fidivrs
adc
popa
mov
test
push
jmp
mov
std
pop
jge
shlb
cld
rolb
int3
push
orl
push
pop
jb
mov
js
mov
popf
xlat
ljmp
jge
xchg
inc
in
inc
inc
sub
fldt
lods
loop
mov
cmp
or
call
aam
jecxz
ljmp
fmull
mov
das
fwait
test
pop
xor
lahf
stos
pop
std
popf
add
movsb
fstp
push
call
xchg
jg
sub
mov
testb
push
cmp
sti
ret
outsl
popa
cmp
sbb
cmc
sbb
mov
out
push
inc
dec
xor
psubq
outsb
sub
dec
mov
sbb
inc
and
mov
lock
push
out
adc
std
or
fsubrp
inc
lods
adc
lea
pushl
inc
pushf
mov
mov
or
cs
addr16
nop
popf
lods
shr
test
sbb
jmp
dec
or
mov
decl
es
xchg
sub
cmp
enter
fdiv
jg
jmp
dec
push
test
adc
jo
fwait
dec
faddp
in
pop
enter
movb
dec
pop
clc
out
xchg
mov
and
fldl
xor
pop
jno
mov
rcrl
nop
sbb
aad
inc
add
push
mov
mov
mov
mov
inc
xlat
push
aam
lods
sub
sbb
jne
or
lock
jl
mov
call
dec
adc
fcompl
push
xchg
inc
pop
lock
sub
inc
les
bound
push
mov
loope
insb
subb
add
ja
sbb
adc
mov
data16
pop
push
shlb
jnp
pop
out
push
out
add
imul
loopne
and
jbe
jg
mov
xchg
sub
dec
sbb
inc
std
cmp
mov
enter
adc
mov
push
push
iret
inc
inc
xchg
push
inc
fmull
inc
push
nop
rolb
cwtl
jmp
shrl
mov
sbb
subb
or
jb
ja
mov
and
dec
aad
xor
xchg
call
mov
je
add
in
jle
add
lahf
mov
push
aas
imulb
mov
addb
orl
out
int
cld
pop
ja
xchg
mov
lock
test
lds
mov
inc
pop
fimuls
aaa
popf
cmpsb
sub
es
pop
add
clc
stc
int3
js
iret
test
fsubrs
sahf
and
rorl
mul
in
jg
cwtl
add
rcrl
inc
adc
push
push
jae
jg
and
roll
rcrb
pop
fcoml
repnz
mov
xor
jp
adc
ficomps
sahf
rorl
or
add
add
add
pop
call
cs
andl
add
andb
mov
push
or
add
test
faddl
loopne
jnp
push
rorl
push
xchg
test
xor
cmp
add
lea
fwait
rcrb
dec
pop
adc
dec
int3
and
xlat
rolb
je
sbb
aad
mov
push
out
jmp
add
inc
aaa
das
filds
out
push
adcb
add
and
sbb
jns
inc
aad
adc
notb
sub
cmp
dec
jge
insb
adc
pop
cmp
mov
call
and
insl
fsubr
jl
enter
lds
mov
and
ss
hlt
dec
test
push
fimuls
or
mov
scas
popa
mov
test
int
cmp
add
mov
or
add
cmp
sti
hlt
pop
push
testl
mov
aam
cwtl
mov
add
sbb
stos
sahf
mov
xor
mov
add
add
push
inc
out
add
or
jp
pop
aaa
enter
xor
sbb
gs
cmp
iret
inc
xchg
das
jnp
mov
aam
sbb
mov
or
or
fdivp
sub
fidivrs
or
int
lret
imul
aam
or
out
int
mov
ds
mov
push
aam
pop
call
pop
inc
aam
cmpsb
subb
fadd
or
add
dec
aam
lcall
push
ss
dec
cltd
into
mov
das
cmpsl
sub
cs
xchg
push
orb
push
add
lret
ds
adc
and
sub
pop
dec
jns
mul
mov
mov
add
aam
out
cli
out
js
in
push
cld
out
inc
test
mov
cld
sub
jmp
jecxz
ficompl
inc
call
fnsave
mov
push
dec
mov
loope
loope
movsl
repz
and
xchg
call
lcall
jb
mov
push
pop
xor
pop
mov
dec
mov
push
xor
adc
loop
xchg
loopne
andb
cmpl
adcb
pop
scas
or
and
shll
cltd
sbb
cmpsl
fcompl
inc
push
gs
and
adc
sbb
outsl
jae
push
cli
or
add
and
out
sub
aad
jne
in
push
push
inc
mov
xor
pop
std
inc
pop
out
in
push
into
test
rcrl
lea
add
jmp
sbb
mov
mov
mov
xchg
loopne
adc
cmpb
bound
sbb
pop
sub
fmul
jl
dec
clc
pop
js
into
sub
push
mov
and
cli
in
into
les
cmp
jnp
dec
lods
pop
add
fcomip
stos
les
mov
inc
inc
mov
and
mov
insl
out
sbb
je
stos
sbb
mov
push
ss
daa
xchg
inc
mov
inc
popf
scas
imul
and
ret
cmp
add
fdivrl
mov
pop
mov
mov
cmpsl
pushl
loop
mov
mov
cmpsb
inc
fldt
orl
sbb
cld
shll
outsl
hlt
and
and
mov
sbb
pop
cld
jge
ret
movsb
sub
sbb
dec
je
add
test
out
mov
pop
mov
push
xor
popa
pop
add
add
in
or
lahf
aad
outsl
cmp
sbb
mov
adc
xchg
mov
outsl
fsts
cmpb
stos
inc
and
push
test
jecxz
inc
insb
add
mov
inc
push
cmc
mov
sub
fistl
xor
sbb
in
push
dec
xor
fwait
and
jbe
popa
idiv
jmp
push
jg
fildl
xor
sarb
xor
int3
shl
add
mov
std
pop
pop
ficoms
mov
add
movsl
pop
sub
lea
clc
aaa
outsl
imul
iret
dec
aam
in
pop
movsl
jnp
and
sub
push
adc
jb
std
pushl
sub
test
sti
lods
shlb
shlb
sub
mov
sub
xchg
movsl
pop
xor
divb
mov
sub
pop
or
std
hlt
add
cmp
add
inc
int3
sbb
ror
pop
gs
and
add
mov
adc
lea
sub
sbb
mov
inc
and
sti
sbb
adc
les
imul
pop
pop
xor
int3
and
shr
xor
pop
mov
dec
std
push
out
rolb
imul
sar
push
add
push
xor
data16
call
jno
mov
bound
addr16
mov
xor
in
push
lret
cmp
mov
ret
loopne
shrl
in
xchg
mov
and
fimull
lds
mov
inc
adc
pop
pop
sarl
mov
xchg
mov
bound
add
pop
xchg
xor
jnp
aaa
shrl
cwtl
and
push
xor
pextrw
scas
fisttpl
rorl
rcll
clc
test
clc
outsl
les
and
inc
test
mov
or
out
out
mov
jl
sub
test
push
xchg
lods
in
dec
ja,pt
out
or
inc
cmpb
add
lahf
adc
and
mov
and
lock
loop
out
ljmp
jmp
dec
adc
jg
add
les
sbb
cmp
jmp
sbb
or
test
aad
xchg
sub
add
js
imul
lock
sbb
mov
mov
xor
fiaddl
inc
add
ffreep
sbb
icebp
push
std
test
orl
ret
outsb
mov
jge
movsb
cwtl
pop
mov
cwtl
jmp
add
xchg
add
mov
mov
fidivrs
hlt
dec
push
sub
lcall
and
cli
or
xchg
ficompl
and
xchg
xchg
pop
push
push
lods
mov
fdivr
mov
push
stc
scas
scas
dec
sbbl
mov
aaa
xlat
aad
jae
mov
and
adc
daa
xor
jge
and
and
das
inc
inc
mov
ja
dec
testb
dec
jle
std
pop
lds
fs
sub
jmp
arpl
fsubr
cwtl
pop
mov
pop
std
add
push
test
dec
shrl
pop
sbb
test
mov
ljmp
sbb
mov
push
ja
fwait
outsl
insb
test
sbb
add
push
cwtl
js
pop
pop
sub
adc
sbb
mov
ret
mov
lret
xor
mov
arpl
inc
dec
std
mov
pop
xor
sub
rclb
mov
rclb
cmp
std
movsl
dec
flds
mov
outsl
je
out
js
test
outsl
das
lock
test
lods
add
or
sbb
filds
sbb
shlb
dec
add
cli
das
das
aad
cmpsb
clc
dec
pop
stos
or
pop
std
jecxz
xor
or
sbb
jo
loope
mulb
sbb
sub
insl
sbb
sbb
xlat
mov
pushl
or
inc
or
shrl
add
cmp
or
inc
push
fnstcw
lcall
jg
addb
mov
or
push
cmpb
cmpl
pop
outsl
jae
push
es
incb
dec
jl
and
popf
jno
icebp
push
mov
out
or
add
add
out
popf
shl
push
clc
mov
movsl
loopne
jae
mov
mov
mov
mov
mov
jne
and
sub
bnd
mov
outsb
outsb
dec
mov
mov
mov
rcrb
mov
adc
xor
xchg
leave
fstpt
ja
adc
gs
mov
mov
sub
mov
or
add
enter
sub
dec
xor
mulps
loop
mov
inc
les
push
adc
ja
loope
jl
inc
out
push
xor
dec
aam
loopne
daa
push
dec
imul
and
subb
push
and
sbb
leave
jo
ret
sarb
add
loop
cli
aad
outsl
sbb
xlat
jl
das
mov
fs
push
adc
sub
arpl
mov
rol
adc
jbe
ret
mov
push
inc
es
mov
sbb
sub
lret
les
rcr
loop
mov
sub
loop
shll
pop
push
xor
pop
sbb
std
in
dec
enter
adc
rorb
adc
inc
flds
test
cmp
xor
dec
ret
icebp
dec
adc
stos
aad
adc
outsl
std
add
sub
dec
xchg
insb
es
xor
test
int
push
adc
lahf
add
add
mov
jge
and
add
add
andb
adc
xor
out
inc
jne
xchg
adc
pop
and
lea
nop
inc
nop
dec
pop
and
hlt
insb
pushf
sbb
or
mov
inc
pushf
lret
dec
aaa
lods
xor
sub
lret
adc
sub
cpuid
fmulp
add
adcb
push
roll
or
sub
call
xor
test
add
push
andb
adc
and
jae
add
sbbl
loop
rcl
fldcw
mov
and
adc
jnp
mov
or
fcoml
int
fmuls
fwait
cmc
push
push
mov
xchg
jbe
clc
mull
iret
fildll
xor
pop
les
sahf
test
les
sbb
jmp
jge
and
xchg
push
mov
add
loope
fcoms
push
daa
repz
movsb
mov
cs
ja
xor
cs
add
gs
pop
sbb
aas
inc
adc
iret
loopne
mov
inc
or
xor
scas
pop
push
cmp
loop
sub
data16
test
cmpsl
mov
repz
or
mov
cmp
pop
andl
xchg
or
sub
sarb
sbb
enter
sub
sar
fnstenv
cmp
add
lds
call
xor
and
lret
or
or
jp
andl
and
loopne
loope
xor
loop
add
add
pop
or
sub
sahf
or
or
mov
cmp
or
or
icebp
or
je
jne
stos
in
call
dec
dec
push
push
shll
xor
dec
ficomps
aam
scas
push
aam
pop
dec
pop
mov
stos
pusha
or
pop
cmp
inc
sbb
adc
fmul
cmpb
lcall
outsl
xchg
sub
cmpsb
dec
add
adc
daa
sarb
mov
inc
call
repnz
lock
or
icebp
lea
mov
add
push
loopne
pop
gs
sub
aam
fwait
xor
adc
mov
mov
or
dec
js
xchg
test
sbb
jne
or
mov
sub
jg
xorb
cmp
sti
inc
fimuls
pushf
xchg
in
adc
xor
pusha
push
push
push
dec
cmp
bound
aam
sbb
xchg
pop
push
scas
sub
xor
adc
fwait
adc
cld
cmp
or
sbbl
mov
sti
out
push
shl
adc
mov
popa
lcall
push
mov
ljmp
add
or
nop
mov
pop
sub
and
cmp
sub
sbb
or
push
pop
mov
push
xor
subb
in
icebp
and
and
lock
inc
mov
test
ret
xor
mov
lods
ret
mov
xchg
outsl
loopne
cmpsb
in
std
inc
aam
cmp
push
out
int3
ljmp
sub
mov
push
decb
imul
adc
mov
pop
xrelease
adc
fadd
rorb
and
xor
pop
cld
ret
mov
test
pop
add
push
lea
repz
test
pusha
outsb
sbbb
push
add
and
mov
negb
push
jno
pop
fmulp
add
cmp
mov
jo
sbb
fistpll
out
enter
lock
fcompl
inc
loope
mov
sarb
fnstcw
pop
xchg
inc
sarl
icebp
fucomp
sbb
pop
mov
test
inc
mov
incb
pop
mov
mov
pop
sub
fcomip
cltd
mov
lret
jbe
pop
adc
pusha
sub
loope
xor
cmp
xchg
fcmovnu
mov
jo
add
cmp
pop
mov
cmp
adc
pop
jge
call
pushf
mov
push
insl
push
repz
clc
call
cmp
xchg
bound
aas
and
aam
das
aad
movsb
jp
push
add
xor
ds
cmpsl
lss
sarb
test
mull
ret
jno
mov
adc
pushl
lcall
or
leave
subb
aam
out
jns
adc
xorb
sub
shl
movsl
mov
cltd
dec
das
jmp
inc
movsb
pop
push
cs
or
pop
jno
sbb
repnz
mov
cmpsb
xchg
adc
jbe
mov
pusha
or
rcr
int3
jmp
mov
shrb
adc
xor
decb
rolb
fsubs
and
nop
dec
fstpt
push
jle
push
gs
or
je
cs
inc
jbe
pop
or
jns
ljmp
arpl
and
dec
sbb
outsl
lcall
cmpsl
lock
push
pop
in
xor
cwtl
cli
pop
frstor
mov
and
or
sbb
mov
loope
push
hlt
scas
ss
dec
out
test
loop
scas
cwtl
xchg
jmp
dec
pop
ljmp
cli
shll
pop
push
jbe
cs
adc
sub
pop
and
mov
pop
xchg
scas
andb
std
adc
insb
cmc
jae
sub
rorb
test
mov
shrl
push
and
sar
jg
sbb
popf
bound
sub
stc
outsl
pop
jbe
ds
ss
and
push
add
lods
mov
pop
add
sub
lret
popa
leave
test
add
loope
mov
push
xor
incl
xor
push
in
inc
nop
loop
mov
mov
test
pushf
cs
inc
outsl
lret
sub
mov
mov
sbb
push
ljmp
sbbb
jb
leave
jecxz
push
arpl
std
fcmovnu
dec
mov
and
cltd
bound
pop
sbb
inc
push
mov
insl
mov
xchg
sub
pop
mov
sar
jl
jp
orb
jg
mov
xor
or
in
jecxz
mov
and
imul
or
lock
jle
sbb
dec
push
fsts
scas
inc
ds
cs
stos
imul
fcomps
aam
dec
ljmp
fucomp
xchg
call
rcll
or
xor
cmc
xlat
mov
adc
addb
dec
sub
inc
movsb
testl
jg
cmpb
imul
push
ror
jo
fwait
jb
and
adc
test
cmp
outsl
mov
arpl
push
cmp
fmuls
or
pop
aas
orb
mov
cmpsb
rorl
pop
push
icebp
mov
adc
mov
mov
fistps
mov
mov
xchg
sbb
dec
mov
mov
inc
in
scas
and
mov
rcrb
cmpsl
jb
fldl
cmp
lret
stos
or
fs
mov
lds
pop
pop
pop
loopne
lret
adc
pop
fnop
xor
call
movsb
idivb
mov
mov
dec
add
mov
mov
insb
ret
movsb
xchg
jg
mov
sbb
mov
aam
lock
loop
sarb
pop
insb
sub
mov
pop
shll
repnz
push
adcl
lret
rorb
lcall
add
jb
and
dec
jecxz
out
lock
adc
shrl
les
add
int3
xor
xor
mov
inc
pop
mov
nop
sbb
sub
and
lahf
hlt
cmp
mov
inc
in
push
loope
xlat
sub
and
fidivrl
fiadds
pop
in
mov
sti
gs
or
add
mov
aas
call
jg
lret
stc
adc
jle
xchg
lahf
or
fildll
sub
and
or
push
mov
mov
aas
imul
inc
jmp
pop
mov
push
mov
std
push
mov
shrl
mov
adc
or
mov
cmpsl
jg
xor
mov
or
inc
mov
loope
sbb
fiaddl
pop
add
mov
rcrb
andb
push
lods
mov
js
inc
xlat
mov
add
and
clc
pop
lods
das
lock
mov
les
or
pop
jecxz
inc
hlt
adc
cmp
pop
adc
dec
lahf
inc
cmp
outsl
jae,pt
fcomps
add
mov
rcrl
mov
adc
push
jp
or
sbb
cs
cmp
adc
xchg
add
push
vsubsd
fisubrs
or
or
inc
sub
mov
loop
cmp
push
es
ss
or
push
inc
add
mov
sub
ret
mov
mov
imul
cmc
add
push
das
fcompl
sub
cmpsb
mov
pop
sbb
inc
std
xchg
das
inc
push
and
test
ret
div
and
jb
je,pn
rorl
and
xchg
loope
jns
icebp
push
int
xorb
xchg
loope
in
movb
adc
add
push
out
lock
jns
mov
cmp
push
cli
inc
rorl
movq
push
mov
insb
divb
das
xchg
test
popa
stc
nop
js
and
xorb
mov
xchg
mov
lret
ds
dec
xor
pusha
pop
cmp
xchg
std
pop
out
sbb
inc
ss
pop
jmp
push
add
or
mov
and
sbb
loop
mov
cmp
add
aas
jns
or
pop
or
cltd
push
or
mov
and
push
inc
adc
fcmovnu
je
jns
inc
or
push
cmp
mov
ljmp
lods
popf
add
cmp
sub
das
popf
adc
jg
cmc
mov
jnp
nop
clc
fnstenv
movsl
inc
mov
mov
push
stos
inc
cmp
sub
xchg
imul
xlat
adc
push
mov
pushf
imul
dec
call
sbb
push
push
pop
cwtl
inc
aas
jo
outsl
jmp
jb
stc
sbb
mov
unpckhps
add
clc
fwait
push
arpl
pop
adc
pop
fstpt
test
push
lcall
adc
fnstsw
imul
mov
test
addr16
ss
xlat
stc
mov
dec
dec
sub
lods
add
adc
aad
in
jb
movsb
mov
jg
fbstp
sbb
loop
ret
incb
sti
sbb
push
or
push
add
adc
sbb
ljmp
jne
sbb
cmc
add
inc
out
loop
test
movsl
mov
dec
push
enter
mov
insb
add
dec
jmp
jo
add
repz
xchg
loopne
fcoms
add
adc
call
js
es
push
cmpsb
or
shr
out
push
inc
sbb
ret
aas
pop
cmp
cmp
adc
stos
xor
xchg
outsl
pop
pushl
mov
jle
mov
movsb
inc
or
cmpsb
fwait
mov
imul
in
mov
add
push
sbb
inc
incl
dec
orl
icebp
rclb
mov
cmp
pushl
call
cmc
mov
leave
mov
sarb
xor
sbb
pop
test
push
imul
inc
loopne
jb
sbb
pop
pop
stc
das
pop
fmull
mov
das
and
pop
test
arpl
cmc
cmp
test
inc
push
incl
sub
mull
fdivr
notb
popa
ja
and
cmp
dec
pop
mov
movsl
cmp
scas
hlt
jp
clc
fwait
lcall
sub
mov
mov
test
stc
mov
pop
add
jg
shrl
add
je
add
out
out
or
rcrb
cs
xchg
mov
pop
jns
ljmp
and
adc
inc
add
pop
sub
clc
push
shr
idivl
mov
fsubl
mov
testb
adc
adcl
ret
inc
aad
dec
ficompl
icebp
push
pop
inc
js
mov
shrb
repnz
push
iret
dec
cmp
mov
xor
xorl
std
imul
test
or
add
clc
push
xchg
fwait
loopne
das
push
cmp
fisubs
xchg
push
xchg
sub
aad
mov
jo
pavgw
pop
mov
mov
xor
sahf
shlb
mov
mov
into
cli
or
data16
push
cmp
lcall
mov
inc
test
mov
nop
and
jg
fwait
mov
push
inc
jb
dec
sub
adc
mov
xor
jmp
jnp
lods
mov
push
imul
leave
xchg
push
in
mov
imul
sub
out
dec
cmpsb
jl
jbe
jb
jbe
push
sbbl
adc
daa
enter
testb
cmc
mov
jge
pushf
pop
cs
and
call
add
mov
lret
call
in
mov
adc
xchg
mov
pop
mov
push
mov
fdivrl
nop
in
dec
inc
mov
pop
push
xadd
shl
jmp
insl
movsb
add
mov
push
idivb
dec
mov
inc
cltd
pop
lret
test
add
lcall
stos
jle
or
imul
cmp
mov
mov
inc
adc
mov
push
pop
sbb
pop
dec
xor
sbb
fsubs
inc
aas
dec
jo
jge
rolb
add
add
or
add
cli
push
add
pop
mov
sub
in
cmp
or
sar
ljmp
fisubrl
mov
iret
add
rcrb
inc
jg
outsl
push
cmp
mov
sbb
not
dec
inc
shlb
movsb
mov
sbb
hlt
jns
js
sbb
add
xor
loopne
push
xor
in
inc
inc
xor
mov
subb
mov
add
or
lods
sub
int3
js
adc
fcompl
mov
lret
add
es
add
inc
add
xor
dec
and
push
aaa
sti
push
cwtl
enter
fs
roll
rclb
mov
test
add
push
std
xchg
add
mov
addr16
cwtl
sub
rcrb
into
add
xor
add
andb
lds
sbb
ljmp
fmuls
bound
nop
mov
ds
mul
add
mov
cmp
adc
push
inc
addl
call
icebp
jae
cld
lock
and
inc
movsb
pop
out
loopne
lock
fs
les
adcb
xor
mov
faddl
or
lods
clc
xor
test
dec
adc
adc
xchg
int3
iret
cmp
inc
jl
ds
mov
xor
jb
das
out
popa
subb
aaa
addr16
sbb
popl
cmp
or
jae
inc
lea
or
scas
and
imul
ficoml
xchg
cmp
int3
lea
push
cmc
add
fwait
out
and
lock
push
mov
add
pop
xor
aaa
ljmp
jl
ja
rolb
sub
mov
fidivrl
aam
and
or
jmp
xor
shlb
jl
sbb
push
lret
inc
jge
xor
iret
inc
xchg
jle
clc
roll
mov
ss
lcall
rorl
cs
int3
sarl
sarb
int
add
jo
adc
adc
push
xor
xor
xor
dec
push
xchg
and
push
sbb
pop
and
outsb
imul
add
mov
dec
fwait
bound
fiaddl
int
out
sub
fdivl
shl
adc
sub
jno
or
mov
out
xorb
jp
push
mov
and
cmp
scas
pushf
fs
in
out
push
add
out
sub
test
mov
xor
mov
xor
nop
nop
xchg
loop
test
imul
pop
push
jl
xor
jne
mov
adc
daa
push
loopne
outsb
push
sub
pop
or
test
shrl
iret
orb
sbb
sbb
push
test
fsubrp
or
sub
scas
and
push
pop
pusha
or
imul
popa
lea
inc
adc
mov
sbbb
in
adc
cltd
xchg
mov
iret
outsb
stos
xchg
and
sub
jl
push
jp
jl
addr16
lods
enter
fisubs
xchg
jmp
sahf
mov
repz
sbb
pop
mov
adc
pop
loop
fisubl
xchg
push
xchg
or
outsl
lock
pop
icebp
mov
arpl
xor
jnp
std
jg
int
lock
pop
mov
add
incl
pushf
add
mov
out
adc
gs
inc
in
test
dec
jg
or
mov
mov
fdivrs
cmp
in
pop
pop
xor
inc
je
test
adc
ret
push
mov
mov
jl
je
jbe
xchg
cmpl
sahf
xor
or
ret
cmpsl
jp
pop
xchg
or
or
rclb
dec
inc
add
pop
push
xchg
sbb
inc
inc
mov
cmc
cs
sbb
inc
call
and
rol
xor
test
mov
dec
out
xlat
and
or
xor
jb
add
gs
aad
mov
jmp
daa
popf
shl
stos
mov
hlt
mov
cmc
sub
inc
aaa
inc
fsts
push
clc
cld
adc
out
push
jg
or
sbb
cmp
and
and
popl
sub
lahf
rcr
ja
jecxz
pop
fsubs
xchg
mov
adc
es
in
subl
mov
add
pop
or
add
push
jno
stos
hlt
lods
fisubrs
jl
jbe
sub
cld
movsl
mov
xor
mov
pop
adc
lock
mov
or
mov
and
or
jmp
jle
pop
insl
lea
xlat
mov
dec
cltd
and
cmp
shl
lcall
add
sub
xchg
popf
jle
shrb
out
sub
adc
inc
repz
mov
fildll
mov
call
clc
dec
aad
mov
clc
cli
pop
mov
aam
outsb
inc
push
cmpsl
popf
adc
and
andb
aaa
test
add
mov
shll
jne
inc
push
mov
ss
cmp
in
and
mov
mov
sub
jg
mov
popa
and
incl
repnz
push
in
sbb
testb
dec
mov
add
addl
pop
mov
cmp
sub
cmpsl
pop
inc
popaw
rolb
pusha
inc
sbb
pop
add
movl
xchg
sbb
xlat
mov
lods
mov
pop
and
iret
leave
and
dec
adc
popa
popa
sub
je
iret
imul
icebp
ffreep
stos
fisttpll
lods
or
lea
popf
pop
push
pop
sub
fucomip
add
cli
movsb
popa
and
xchg
mov
cmp
addb
push
add
jl
pop
push
cmp
out
mov
nop
lods
stos
pop
cmp
or
or
clc
xchg
loope
sub
xchg
mov
adc
call
add
push
addr16
fstpl
fisubl
adc
mov
push
lock
in
cld
bound
adc
pop
jl
mov
pop
call
ljmp
sbb
mov
aam
sbb
push
sub
adc
rcrl
pop
clc
imul
mov
imul
ss
stos
das
ljmp
jnp
call
bound
outsl
std
and
out
stc
mov
or
sub
sti
sbb
out
fistpll
cmp
sub
cmp
cmp
ja,pt
dec
adc
nop
in
sbb
cwtl
inc
lods
enter
sbb
shrl
jo
push
xchg
fldcw
mov
fistpl
stos
xchg
dec
sti
inc
jae
pop
sti
sbb
les
popa
cmp
xor
lock
jo
sub
lds
imul
mov
outsl
sbb
daa
dec
in
nop
mov
cmpsl
stos
mov
pop
push
mov
push
cltd
outsl
adcl
jo
out
psllq
pop
push
or
clc
inc
push
aam
inc
aaa
push
icebp
push
push
add
cld
popf
pop
sbb
mov
sbb
inc
popf
add
shrl
scas
repz
pop
mov
adc
push
test
mov
add
dec
inc
outsb
pop
push
jecxz
push
push
stos
mov
cmpsb
jp
or
sub
push
mov
icebp
mov
adc
dec
jecxz
and
rclb
xchg
fwait
insl
imul
in
inc
fwait
and
or
jle
mov
mov
dec
adc
shrl
jg
mov
sbb
cmpsb
aam
mov
dec
dec
movsl
mov
push
cmpsl
mov
movsb
fcoml
int
cmpb
jnp
clc
push
xchg
push
mov
inc
adc
jp
cwtl
enter
or
cmpb
jo
or
dec
inc
jge
hlt
out
add
or
das
in
adc
jp
and
lds
sbb
dec
mov
sub
mov
mov
ret
add
inc
and
push
sbb
test
repz
or
push
adc
test
jne
sub
inc
lods
adc
xor
cmpsl
inc
inc
inc
inc
fidivl
adc
push
add
adc
adc
ret
dec
arpl
bound
cmp
adc
add
insb
outsb
inc
pop
push
inc
xor
xchg
cmp
inc
enter
stos
fiadds
inc
jbe
dec
xchg
or
xor
xchg
scas
imul
push
cmpsl
mov
pop
add
std
jae
jbe
loope
insl
adc
test
xor
scas
push
add
fmul
and
rol
mov
arpl
fildl
imul
stos
ja
pop
dec
xor
rorl
push
xor
push
outsl
add
xchg
ss
int3
ret
sub
mov
push
mov
mov
or
xor
and
push
aad
inc
sahf
sbb
lock
sub
or
jnp
ljmp
mov
std
xchg
adc
add
cwtl
adc
aad
inc
cmp
add
fldenv
movsb
popa
xchg
mov
hlt
into
out
cltd
hlt
mov
cmpsb
pop
xchg
in
cwtl
orl
test
xor
pop
jl
cmp
inc
add
push
test
xchg
add
ret
pop
push
int3
nop
and
push
add
pushf
ljmp
sbb
addr16
out
clc
hlt
inc
push
jp
cwtl
cwtl
xchg
sbb
jb
stc
add
andb
dec
pop
imul
add
sub
push
xor
idivb
push
inc
inc
lret
push
mov
loop
jno
ja
mov
adc
ss
shlb
mov
sbb
sbb
push
sbb
sbb
fsubrs
or
and
sbb
dec
out
mov
jns
addr16
and
mov
rcll
lock
lock
dec
scas
mov
out
lods
jecxz
aaa
jo
ja
cld
ror
jnp
sbb
mov
or
jbe
insb
adc
sarl
sub
push
iret
pop
xchg
sbb
shrl
jbe
adc
xor
add
xchg
shr
popa
jae
pushf
inc
mov
cmp
ret
adc
pop
mov
inc
in
dec
std
insl
push
shrb
sbb
xor
pop
cwtl
fmull
jns
cmp
adc
cmp
and
ret
out
rcrl
add
les
sub
fists
push
sbbl
adc
or
push
jb
loope
pop
or
fiaddl
xor
movsl
dec
gs
xor
jmp
inc
or
ret
lcall
std
aas
adc
insl
or
inc
jmp
push
test
jecxz
dec
mov
mov
test
shrb
xlat
fsubp
push
dec
out
mov
pop
das
sub
mov
dec
jp
push
pop
aaa
cli
div
stos
add
sbb
xor
or
iret
rolb
cmpsl
mov
loop
stos
mov
sub
sub
push
mov
mov
mov
test
mov
les
into
aam
or
sti
cld
pop
insl
cmp
jno
pushf
sbb
repnz
rorb
arpl
xchg
pop
sub
mov
push
inc
daa
sbb
dec
fucomi
dec
shlb
lahf
lods
add
sub
cmp
fbld
pop
mov
test
xchg
and
test
mov
mov
xchg
inc
mov
popa
fwait
pusha
sti
mov
fs
mov
add
mov
sbb
mulb
pop
push
add
xchg
sub
into
sub
lods
pop
in
outsl
and
adc
push
or
mov
push
inc
add
sbb
jmp
notb
lahf
cmp
fucomp
lods
sub
shrl
pop
call
xchg
sbb
shrb
lea
mov
pop
in
popa
adc
test
add
mov
or
adc
sahf
decl
xchg
xor
subl
sub
or
stc
sub
mov
sbb
notl
jo
iret
dec
mov
cmp
ss
and
jo
mov
pop
sub
fisttpl
arpl
call
cltd
mov
imul
rcr
inc
and
mov
sbb
test
add
add
inc
xchg
push
aam
sub
les
push
mov
mov
loope
jle
cld
paddb
jmp
pop
dec
stc
lahf
mov
sub
stos
dec
aad
aam
les
pop
mov
and
pop
jecxz
jmp
subb
xor
in
je
loopne
sub
pop
cs
xchg
rorl
xchg
ljmp
lds
mov
je
jo
sub
jno
mov
inc
icebp
lea
fisttps
cmpsl
push
incl
in
fcoms
lea
dec
sbb
sub
aam
fnstenv
ret
sub
adc
sbb
add
cmpl
xchg
repnz
add
dec
loopne
inc
in
and
sbb
cmpsb
outsb
jg
xor
pop
jno
iret
mov
xchg
mov
mov
xchg
pop
lcall
std
pop
inc
push
sbbb
movsl
inc
pop
pop
or
das
lock
xor
out
push
das
insl
ja
push
jp
inc
in
lods
rorl
or
mov
dec
jno
inc
sbb
inc
pusha
adc
and
inc
xchg
fdivrp
call
lcall
xor
cs
lock
ret
ficoms
xor
fnsave
jg
jg
xchg
movsb
jbe
add
je
nop
xchg
mov
fistpll
cmp
arpl
pop
sub
in
imulb
inc
loop
xlat
adc
jne
cmp
sub
cmp
sbb
inc
in
ja
movsl
mov
push
mov
adc
out
dec
push
cmpsb
push
cmp
lods
xor
push
sbb
movsl
dec
stos
daa
pop
js
adc
mov
inc
and
outsl
mov
call
push
pop
push
mov
or
mov
or
es
mov
pop
sub
fcoml
aam
in
stc
rorb
das
adc
int3
scas
xor
call
test
xlat
mov
jno
loop
cmp
xor
inc
ja
cli
fstpl
add
int3
addl
or
mov
inc
mov
outsl
fnstsw
xor
cmp
jg
and
mov
push
adc
sahf
ljmp
xchg
mov
lock
jnp
jbe
in
scas
fwait
jae
inc
imul
jmp
inc
incl
jl
xchg
int
xor
rcr
fidivrs
out
push
pop
mov
xor
fcoml
dec
jo
mov
imul
and
loope
xchg
in
dec
adc
mov
add
inc
xorl
inc
repz
in
add
xchg
sub
daa
push
inc
out
fstps
sbb
mov
lds
inc
rcrl
sub
pusha
bound
sub
lgs
push
mov
out
call
xchg
mov
adc
push
sbb
in
xchg
sub
or
push
and
pop
bound
jns
sub
pop
mov
push
lret
jg
decl
cmpsl
cmp
xchg
adc
push
stc
gs
scas
mov
fsubs
sarb
in
ror
and
notl
cmc
or
nop
add
or
xor
and
cmp
dec
icebp
test
mov
pop
pop
pop
mov
pop
bound
xor
xchg
addl
mov
cltd
or
cmp
cmp
mov
les
and
adcb
xorl
adc
dec
sbb
adc
ds
pushf
cmpsb
or
and
push
xlat
inc
jecxz
xchg
mov
mov
outsb
shlb
aaa
fisubl
pop
jge
xchg
hlt
mov
cli
and
nop
repnz
std
stos
dec
xchg
jecxz
adc
clc
loopne
fsubrs
xchg
or
sbb
or
daa
shl
xor
cmp
stos
xchg
decl
add
dec
repz
mov
and
ja
sti
sub
imul
lahf
fstl
loopne
dec
sbb
adc
icebp
or
cmp
mov
push
test
into
add
std
sub
inc
data16
push
ds
cmp
push
push
and
ljmp
dec
in
sbb
dec
push
ljmp
mov
cmpsl
lcall
ret
lret
dec
cmp
fildl
inc
pop
jae
add
test
sbb
gs
cmp
insl
xor
int3
inc
pop
sbb
or
rorb
ret
mov
mov
insl
imul
call
push
ljmp
pop
inc
iret
or
sbb
jecxz
cld
add
sbb
clc
sub
push
cwtl
clc
fwait
cmp
les
mov
daa
cmp
incb
sbb
sbb
aas
sub
and
out
xchg
sbbb
cltd
and
icebp
jbe
fwait
loopne
std
dec
and
aas
dec
pop
insb
pop
jae
out
insb
pop
jo
outsb
fbld
adc
sub
cli
mov
loope
jp
dec
out
repz
call
sub
sbb
and
mov
loopne
into
adc
lahf
cli
int
les
shrb
ss
adc
xchg
adc
jg
mov
lock
xchg
mov
and
jbe
in
sbb
js
mov
int3
push
xor
test
pop
mov
xchg
in
pop
cmp
icebp
and
nop
fdivs
je
stos
fidivs
and
clc
or
jbe
and
push
jb
aaa
fsubrs
lcall
pop
add
call
movsl
mov
xchg
push
test
cmp
loop
sbb
sub
adc
dec
sbb
or
imull
add
shrl
adc
mov
mov
xor
fdivrp
clc
push
dec
pop
jp
push
test
js
mov
or
jmp
jae
out
dec
rcll
jo
lcall
in
aas
ss
insl
dec
js
fwait
out
inc
cmpsl
test
iret
xchg
inc
or
cmp
imul
ds
or
imul
push
dec
jo
lahf
shr
daa
das
insb
jne
test
adc
jmp
pop
dec
leave
jno
dec
or
aad
add
push
es
and
pop
add
pop
call
fidivrs
leave
call
mov
hlt
out
dec
ja
repnz
cmova
inc
mov
and
fdivl
add
mov
nop
dec
mov
ljmp
cmpsb
xchg
repz
mov
in
decl
lcall
and
cmp
inc
xorl
cltd
pop
xchg
push
mov
pop
and
pop
aam
outsl
sub
mov
xor
pop
and
xor
mov
ljmp
fisubrl
nop
lret
insb
mov
mov
pop
sbb
xor
not
les
mov
mov
add
lds
dec
je
lea
loope
fwait
mov
pusha
inc
jne
pop
jo
pop
cmpsb
rcr
adc
shl
cltd
xchg
jle
das
jno
fs
xor
mov
jg
or
pushl
or
aam
pop
lcall
in
mov
shll
ss
push
testb
cmp
test
xchg
pop
or
dec
mov
pop
test
popf
sarl
lahf
into
inc
adc
jl
mov
xchg
mov
jecxz
mov
adc
and
rclb
shrl
std
psubusw
cmc
cs
sbb
and
sbb
fdivr
pusha
repnz
addr16
inc
std
inc
ss
and
push
aas
out
das
mov
xor
cmp
dec
or
inc
xchg
aad
push
lock
mov
pusha
leave
and
push
or
hlt
dec
ss
sbbb
mov
dec
inc
orl
aas
xor
aam
rclb
lcall
lea
pop
pop
hlt
outsl
push
push
add
and
add
aas
call
pusha
movsl
mov
mov
xor
clc
aaa
mov
movsl
imul
and
and
jp
ss
xchg
mov
sbbb
cmc
js
out
mov
dec
scas
push
shrl
test
lret
lock
icebp
ret
arpl
jbe
mov
mov
test
les
mov
hlt
xor
push
xor
scas
icebp
imul
ljmp
sbb
movsl
xor
mov
cld
mov
xchg
inc
andb
jnp
xchg
ljmp
sar
or
xchg
push
cmc
cmp
in
mov
stos
dec
stos
mov
pop
test
cli
mov
mov
jp
or
scas
rcll
lea
and
ret
repz
xchg
clc
sbb
repnz
lret
icebp
nop
lds
bswap
xorps
stc
arpl
pop
xchg
or
dec
or
movsb
outsl
incl
aas
fldcw
notl
jl
jne
fs
mov
imul
jbe
and
pminub
or
jg
jmp
cmp
pop
je
mov
cli
sysret
stc
xor
scas
mov
xor
enter
push
push
xchg
rcll
jge
mov
jmp
push
mov
adc
mov
cmp
cmpsb
outsl
cld
adc
dec
pusha
jns
inc
call
stc
and
incl
repnz
push
ds
push
adc
cli
inc
das
into
adc
test
pop
sbb
scas
add
pop
push
push
push
inc
mov
out
sbbl
push
or
aaa
negl
mov
adc
out
fwait
mov
je
sahf
fimuls
pop
test
cmpsl
das
cld
ret
cmovge
mov
mov
rorb
cmpsl
cmp
je
in
sbb
pushl
rcl
pop
mov
dec
mov
ja
aaa
dec
mov
add
add
fcmovne
xor
jge
je
cmp
aas
xlat
push
ffreep
popa
pop
pop
popf
and
xor
jge
sub
pop
cmp
xchg
ljmp
in
cltd
add
xor
cmp
xor
imulb
rcrb
sbb
cmp
std
aaa
shlb
dec
aaa
dec
lds
in
mov
cmp
stos
cmpsl
dec
je
dec
pop
jb
inc
shl
cltd
js
xchg
add
cmp
fsts
sti
aaa
shl
pop
loop
ficoml
imul
dec
cmp
aas
or
addr16
mov
lahf
pop
add
fdiv
and
stos
mov
mov
add
xchg
repnz
pop
pop
repz
icebp
adc
mov
mov
mov
hlt
movsl
cmp
and
jmp
dec
lods
pop
jb
or
or
std
pop
mov
and
movsl
pop
clc
inc
add
sbb
mov
and
fwait
aas
test
mov
lds
push
xor
sub
negl
outsb
inc
mov
push
xor
scas
stc
shrb
sub
sahf
in
icebp
sbb
inc
inc
gs
sahf
pushf
out
xchg
dec
or
sub
ss
add
out
pop
push
mov
stos
int
cmp
ljmp
xlat
xchg
leave
push
jp
incl
pop
push
enter
test
pop
mov
fs
jns
shrb
outsb
clc
in
rorl
sbb
jmp
sbb
or
pop
popa
mov
aad
mov
scas
out
roll
dec
add
jbe
neg
sub
popf
aad
push
fdiv
inc
shrb
std
jg
cmpsb
xchg
fxch
lock
sbb
out
adc
int3
adc
orb
fs
mov
pushf
rcr
jmp
xor
test
ja
add
jae
fidivl
test
pop
aad
movsb
lret
cmp
icebp
push
and
add
call
divb
xchg
pusha
rcrl
or
pop
dec
jno
inc
or
mov
push
int3
pop
adc
je
inc
pop
or
mov
cs
mov
loop
in
clc
adc
lea
xchg
loop
out
stos
xchg
inc
pushf
orl
inc
jnp
mov
sbb
pop
sub
inc
xor
mov
dec
jo
push
xor
pop
nop
and
ds
or
mov
sbbl
stos
in
and
clc
loope
mulb
in
scas
add
arpl
gs
shrb
popa
dec
mov
lcall
decb
mov
pop
xor
dec
iret
cltd
pushf
and
and
pop
dec
mov
iret
insb
iret
jp
push
outsl
mov
add
pop
inc
stos
in
ret
fcoms
add
jo
sbb
jmp
sbb
clc
in
jl
mov
fidivrs
jecxz
shrl
pop
mull
data16
dec
sub
ret
outsb
add
dec
decb
fbstp
loope
bound
stc
or
sub
cmp
decl
mov
and
push
out
xchg
subb
rcll
pop
lea
jg
or
loop
icebp
loope
pop
cld
mov
adc
jne
fiadds
push
lods
jge
dec
push
and
sbb
cmp
jnp
gs
pop
add
sub
out
mov
mov
jge
inc
mov
ficompl
enter
dec
push
mov
or
xor
aam
pop
adc
stc
xor
add
decl
mov
push
sbb
adc
adc
sub
loop
and
mov
iret
inc
lds
dec
shll
sar
aam
jb
sub
mov
push
mov
hlt
andb
outsl
xchg
rcll
cmp
cmp
and
pop
rorl
xchg
push
rorb
jb
sub
mov
aam
int
fs
idivl
push
cmp
jmp
movsb
outsb
cmp
inc
mov
orl
scas
sub
mov
ror
loop
mov
int3
push
das
test
or
jne
repz
and
lahf
jp
pop
xchg
adc
in
addb
scas
xor
dec
data16
test
add
rclb
lret
mov
adc
int3
pop
inc
pop
je
or
mov
or
outsl
movl
mov
mov
push
std
aas
jne
add
mov
test
push
xor
push
inc
mov
inc
mov
mov
sarl
and
int3
push
push
rcl
jp
cmp
or
inc
icebp
dec
push
inc
xor
jbe
xchg
jo
or
clc
mov
out
in
add
mov
lret
mov
or
jne
inc
adc
adc
push
or
dec
adc
adc
loope
shll
adc
mov
testl
insl
mov
in
jge
outsl
mov
loop
jmp
mov
int3
pusha
adc
icebp
pop
inc
xchg
cmp
jae
jno
dec
shlb
xor
or
icebp
daa
enter
in
les
sub
or
pop
popf
cltd
sbb
jnp
test
add
or
add
or
in
or
or
cld
in
pop
xchg
stc
sbb
cmp
jbe
pop
xlat
mov
cmp
divl
add
xor
push
mov
ret
pop
xchg
xor
or
sbb
hlt
rcrl
sub
and
dec
adc
pushf
or
mov
xchg
push
and
in
lock
inc
out
and
cmpsl
add
adc
pushf
bound
subb
inc
dec
inc
enter
ss
push
inc
mov
mov
lcall
adc
mov
mov
adc
cmp
adc
ret
movsb
das
push
xchg
cld
mov
adc
xchg
test
adc
lahf
push
ds
and
inc
xchg
mov
or
xlat
movb
in
lahf
mov
int3
enter
fstl
inc
adc
xor
insb
xor
lods
sbb
sbb
outsl
and
repnz
adc
ret
les
xchg
inc
hlt
add
jb
inc
arpl
add
loopne
mov
popa
aam
inc
jb
add
jnp
divl
pop
les
shlb
mov
sbb
cmc
mov
mov
rol
add
xchg
jmp
mov
push
sarl
and
push
testb
pushf
dec
mov
sbb
push
mov
test
lods
mov
xor
out
test
fdivrl
fsubrs
adc
dec
roll
push
and
into
and
cmp
testl
shrb
sbb
into
icebp
enter
popf
jnp
into
cwtl
mov
and
add
int
cltd
lret
jb
lret
pusha
cwtl
ret
jbe
loopne
add
call
dec
clc
ds
in
mov
adc
push
adc
fwait
mov
lods
dec
stos
and
push
test
loopne
and
orb
add
sarb
sbb
inc
icebp
aam
ljmp
cld
and
or
outsb
inc
jp
or
mov
mov
dec
push
add
add
gs
xchg
jmp
sbb
jecxz
push
push
push
pop
loopne
inc
lcall
or
ret
and
and
push
jge
ljmp
shll
inc
xchg
test
aam
push
ret
pop
sub
popa
inc
add
outsl
lock
pand
add
int
sub
xchg
roll
je
mov
dec
cmp
je
les
fwait
dec
add
roll
add
sbb
ja
or
inc
andb
jae
sti
test
jne
jbe
and
lods
cmp
xor
mov
jnp
jge
adc
test
shlb
dec
push
int
rorl
or
cld
icebp
loop
hlt
push
push
inc
arpl
inc
into
pop
jl
push
and
sbb
repnz
je
repz
jne
inc
cmc
xchg
xor
test
pop
out
clc
mov
or
popa
das
push
xchg
jmp
test
jne
jmp
cmp
xchg
and
inc
adc
pop
lods
hlt
mov
enter
in
sbb
test
nop
mov
pop
dec
sub
adc
push
addr16
jb
add
stos
sub
out
mov
sahf
or
call
pop
pop
sub
lock
ss
dec
jbe
pop
test
add
or
sbb
roll
dec
in
nop
push
push
pop
push
lahf
cmp
or
mov
icebp
daa
jge
daa
pop
pop
mov
popf
add
xchg
mov
sbb
loopne
mov
inc
lcall
push
mov
inc
lcall
mov
sbb
cmp
test
popa
outsb
cmp
and
and
sub
mov
ret
mov
or
and
sub
push
mov
jmp
negl
test
sarl
pop
enter
mov
adc
jbe
xchg
jl
sub
add
je
xchg
pop
daa
xor
push
cld
dec
shrb
jg
jmp
imul
fists
stos
and
adc
adc
dec
into
aas
or
shrl
pop
xlat
aad
loope
pop
nop
hlt
and
dec
aad
and
mov
aaa
mov
fcoms
lds
repnz
into
jne
outsl
or
mov
or
mov
addr16
xor
sub
sbb
scas
dec
and
sti
pop
inc
nop
add
dec
and
add
push
push
mov
add
jnp
jg
add
cmp
pusha
into
es
inc
adc
ljmp
mov
nop
scas
icebp
or
pop
inc
push
scas
mov
in
lods
orl
mov
enter
fnstcw
movsb
jge
inc
sbb
hlt
and
sarb
mov
mov
inc
jecxz
mov
push
iret
add
cmc
cmp
mov
cwtl
xor
bound
ss
cld
outsb
jb
test
das
std
ljmp
push
sti
ss
or
mov
lcall
xor
shrl
xchg
js
jge
bswap
xchg
xor
add
sar
out
add
incb
push
mov
lods
icebp
jbe
aas
jg
sbb
cs
out
cmpl
xor
sbb
inc
outsl
mov
push
push
dec
mov
fidivs
xor
mov
and
outsl
mov
xor
dec
lret
add
cli
sbb
adc
jno
push
loopne
sub
pusha
jo
test
sahf
jl
cmp
pop
sti
mov
add
dec
iret
xchg
push
mov
xor
ja
mov
daa
pushf
jae
adc
jne
cmp
in
pop
or
sbb
pop
in
and
xchg
repnz
mov
je
and
dec
cmc
mov
xor
aas
and
icebp
outsl
gs
outsl
adc
push
addb
insb
mov
aaa
sti
fistps
pop
mov
shll
ljmp
push
pop
rcr
jl
cmpsb
xor
addb
xor
es
incl
out
mov
lahf
in
sub
mov
sbb
lds
std
jmp
cmp
or
add
scas
rolb
outsb
jnp
sbb
xchg
mov
insb
lahf
or
push
add
mov
jbe
mov
sbb
movsb
out
pop
addr16
pop
outsb
dec
dec
sub
rorl
push
mov
cmpsb
cs
lds
flds
dec
pop
push
and
rcr
js
inc
xchg
sub
mov
mov
mov
in
test
pop
xchg
ss
dec
mov
xor
add
mov
scas
mov
aam
sbb
pop
pop
test
adc
in
or
add
les
adc
ds
mov
enter
mov
lcall
ret
cmpsl
mov
dec
pop
push
and
xchg
fsubp
inc
jg
arpl
cmp
mov
jle
adc
mov
fidivs
mov
sbb
push
mov
jnp
push
push
jb
loope
cmc
inc
lret
je
adc
inc
add
jle
cmp
pop
add
dec
into
rdpmc
stos
lods
test
pop
add
inc
mov
hlt
jl
mov
cmc
pop
mov
inc
mov
adc
icebp
dec
sbb
shrb
ja
stos
imull
mov
in
lcall
sub
and
and
fistpl
lods
les
mov
jecxz
xchg
or
push
mov
sub
jl
inc
cs
xchg
imul
sbb
inc
mov
xchg
cwtl
rcrl
mov
fisttps
mov
stc
jecxz
int
pop
imul
add
push
fxtract
push
pop
rorb
hlt
call
ja
push
movsb
sub
inc
mov
xor
ret
add
push
cmc
cmp
push
aam
cmp
xor
sub
ret
dec
test
cmpsb
jno
push
xor
pop
inc
mov
cmp
ss
sbb
xor
ss
adc
lea
cmp
cld
movsl
out
clc
cmc
movsl
pop
push
lret
repz
stos
cmp
cmp
in
add
pushl
push
in
in
push
add
sbb
outsb
std
xor
pop
cmpsl
pusha
incl
scas
clc
mov
dec
cwtl
mov
xchg
inc
mov
and
ljmp
xlat
push
mov
push
in
or
mov
imul
out
and
rcrb
popa
aas
in
outsb
imul
arpl
jmp
enter
outsl
dec
shr
sbb
cwtl
aas
fwait
and
idivb
lahf
sub
dec
xchg
stc
aas
adc
sbb
inc
test
clc
push
incl
xchg
stos
jle
add
sub
xor
daa
mov
and
mov
out
adc
mov
rorl
arpl
add
xorl
push
dec
adc
loopne
mov
add
jge
sub
jne
xchg
cld
stos
cli
pop
mov
test
aam
sbb
aaa
push
pop
push
cmp
cmpl
mov
mov
incl
push
loopne
imul
xor
call
mov
fiaddl
push
inc
mov
aaa
push
into
pushf
arpl
inc
xor
cmpb
or
mov
mov
sub
rorl
inc
sub
movsl
repz
xor
ror
adc
pop
inc
mov
shlb
scas
nop
cmp
int
pop
pusha
out
inc
cmp
sbb
cs
push
inc
adc
pop
mov
or
mov
hlt
jecxz
and
push
or
push
in
lret
xor
int3
leave
or
int3
or
xor
jbe
push
push
shll
add
cmp
aas
push
push
dec
add
daa
clc
and
hlt
scas
jo
js
or
dec
push
arpl
call
and
push
popa
dec
and
adc
test
or
cltd
mov
sub
es
fists
call
xor
bound
push
push
adc
mov
call
shll
pop
test
stos
and
push
adc
loope
cmp
shll
jle
js
imul
fstps
repnz
mov
pushf
es
and
loopne
mov
inc
hlt
or
andps
xor
pop
xchg
les
pop
or
dec
mov
test
and
inc
rcrb
fs
rcrb
adc
cmpsl
rorb
out
bound
cmp
mov
iret
cmp
cmp
mov
xchg
sub
out
fnsave
or
and
rcrb
adc
fucom
adc
inc
mov
ret
arpl
rcl
pop
cmc
mov
gs
stos
jbe
clc
xor
mov
sub
sub
mov
push
bound
and
sarl
jnp
lret
lea
ja
lods
lock
std
push
xor
fwait
cli
and
mov
and
lret
es
cmc
js
insl
pop
daa
sbb
aam
xchg
sbbl
adc
lahf
lds
incb
sarb
repz
adcb
aas
aam
adc
mov
dec
fwait
dec
jg
ljmp
pop
loope
nop
rclb
push
push
fcmovbe
jg
faddl
insb
outsl
aam
and
data16
mov
mov
cs
fs
xlat
sub
les
fnstsw
cmp
test
mov
push
je
push
adc
add
and
into
jne
in
repnz
mov
xchg
lods
jmp
mov
stc
push
mov
stos
outsb
sbb
push
add
pop
xlat
stos
fbld
outsb
lcall
adc
adc
fsubrp
mov
or
xchg
add
movb
jbe
jecxz
or
ja
cmp
fs
push
inc
test
adc
into
or
loopne
mov
pop
sarl
cwtl
and
clc
push
mov
xchg
ret
lret
call
stos
and
movaps
mov
or
add
mov
leave
ficomps
push
enter
aaa
les
pushf
mov
pop
pop
test
or
xchg
dec
or
fwait
mov
dec
in
adc
pop
dec
scas
push
jo
sub
fstpt
loope
or
fsin
outsb
mov
iret
pop
enter
lds
movsl
es
repnz
jge
lock
loop
ss
das
fisubrs
add
jge
notb
sub
gs
insb
stos
arpl
lods
out
and
xor
ljmp
xchg
sbb
cmp
push
or
ja
cld
push
pop
xor
bound
adc
adc
pop
clc
lods
xor
into
xchg
xchg
or
sti
xchg
push
outsb
dec
enter
xchg
repz
xchg
stos
call
xchg
mov
push
jp
mov
xor
idivl
sahf
std
mov
cwtl
add
and
ret
roll
inc
xor
xor
and
call
lods
lret
mov
push
gs
pop
jnp
insb
scas
inc
mov
fistpl
dec
mov
mov
cmp
mov
fs
shr
fildll
leave
imul
jp
mov
push
inc
fisubrs
pop
and
cld
js
mov
cmp
fisttpll
fimuls
cs
sti
push
or
cld
or
movsl
jle
inc
dec
rcl
push
mov
inc
and
inc
daa
popl
cmp
cmp
gs
adcb
push
aad
mov
bound
inc
and
pop
rcr
xchg
adc
mov
imul
inc
gs
xor
test
mov
dec
negb
pop
pop
adc
shr
push
negb
push
pop
aas
sbb
pop
pop
daa
jmp
movnti
sub
in
cmp
in
xchg
cmp
mov
lea
mov
sub
cmp
mov
lea
sbb
into
cltd
test
pop
mov
cmp
mov
fdivl
push
les
push
cld
pop
cli
sub
xchg
je
nop
orb
fwait
push
add
add
pop
mov
std
sbb
out
shlb
inc
and
mov
sub
inc
pushf
popa
or
lods
fwait
xorl
rorl
in
sub
sbb
popf
cmp
decb
jge
add
sbb
dec
jecxz
je
lock
mov
shlb
cmpsl
sahf
lods
outsl
mov
and
mov
xchg
out
jmp
mov
into
in
popf
adc
dec
icebp
test
movsl
fisubl
or
shrl
dec
push
adc
loop
pop
pop
sub
in
and
dec
pop
test
add
cld
pop
fsubrl
sar
pop
bound
add
fwait
sti
and
inc
addl
jg
or
sub
jle
and
mov
mov
dec
jae
lea
jg
jp
repz
lcall
xor
sub
mov
adc
adc
mov
imul
inc
aad
push
aaa
sbb
xor
inc
aas
stos
ret
add
push
push
loopne
js
ds
sub
mov
sbb
and
bound
or
dec
or
push
xchg
lods
fiadds
shlb
in
dec
pop
orps
paddsb
addb
mov
cmp
cmp
and
pop
lock
push
push
nop
dec
aam
add
sub
add
pop
sbb
xor
dec
inc
cld
out
mov
es
jge
repz
jnp
rcrb
or
and
xor
push
dec
push
pop
push
in
xlat
sbb
inc
mov
or
push
enter
cmpsl
adcb
cmp
sub
cld
inc
mov
in
adc
add
cmc
nop
xor
cmp
icebp
dec
sbb
es
inc
xor
pop
leave
stos
fsubs
jle
mov
lret
mov
cmp
mov
add
lret
test
push
and
pop
lods
fildl
mov
test
loop
or
fsub
push
in
and
jb
bound
inc
out
and
xor
pop
mov
adcb
sbb
or
jb
mov
sub
add
mov
popa
mov
jle
testb
icebp
mov
mov
mov
ljmp
cmp
ja
xchg
jns
dec
adc
pop
jno
lods
sbb
ja
cmp
outsl
out
mov
push
int
push
fcmovnb
repz
mov
xchg
stos
push
mov
ret
pop
dec
mov
stc
call
and
outsl
std
loope
icebp
insl
sub
fbstp
and
aaa
out
push
xchg
inc
jno
dec
mov
mov
fnsave
pop
mov
mov
jb
push
lock
inc
test
cmc
aaa
ds
pop
mov
arpl
jmp
or
pusha
xor
add
mov
jmp
pop
repz
inc
mov
addr16
rcrb
inc
lods
pop
and
jl
lock
mov
xchg
mov
xor
movsl
sub
dec
jae
call
push
jge
mov
mov
xchg
jmp
xor
and
mov
mov
lods
push
sbb
mov
cmp
aaa
jne
push
int3
pusha
loope
sub
ljmp
sub
lahf
xor
add
outsb
cmp
sbb
test
push
mov
and
mov
push
xchg
int
aam
adc
pop
loope
fdivr
dec
dec
or
push
hlt
cmp
and
jb
insl
xchg
mov
test
das
push
cmp
sub
lret
lret
adc
mov
sub
shlb
mov
in
jnp
roll
int
in
pop
loop
subl
jns
add
test
enter
jecxz
or
push
dec
push
fmuls
es
pop
mov
cmpb
mov
cmp
inc
lcall
sarb
rcrl
je
adc
dec
jbe
mov
je
je
cmp
pusha
scas
.byte
clc
lcall
dec
not
inc
pushl
dec
and
dec
neg
pop
sub
add
ljmp
inc
xor
push
and
sub
add
push
sti
decl
add
outsb
mov
add
cwtl
dec
pcmpgtw
jg
adc
sbb
inc
add
lahf
push
mov
add
cmp
add
in
mov
in
cmp
and
insb
sub
cmp
adc
cmp
clc
xchg
jo
add
cmp
idiv
call
add
adc
mov
pop
lods
add
or
push
push
outsl
stos
ret
pop
inc
add
loop
sub
add
push
add
or
add
add
add
outsb
jg
and
and
in
cmp
daa
push
push
jmp
pop
gs
adc
xor
mov
testb
dec
add
testb
add
outsl
outsl
ljmp
xchg
mov
rcl
lcall
or
add
mov
mov
call
pushw
stos
mov
jg
jbe
xchg
jecxz
pop
lahf
add
xchg
enter
push
test
mov
std
fisttpl
adc
add
add
mov
add
xchg
bound
movsb
inc
stos
imul
lods
sbb
aas
mov
and
and
pop
inc
add
jmp
pop
mov
jmp
insb
aad
out
mov
mov
add
mov
test
insl
incl
sub
xlat
mov
mov
add
xchg
push
mov
in
fucomip
mov
add
dec
push
loop
nop
mov
ss
add
fs
sub
add
add
lock
inc
push
popf
inc
add
xlat
cli
into
jnp
sub
stc
and
pop
fsubrp
mov
xchg
in
add
idivb
inc
inc
ljmp
add
adc
test
add
insl
ja
in
cmp
and
das
cli
je
push
pop
fsubrs
add
lods
pusha
adc
push
adc
ret
ret
ret
dec
pop
add
and
aam
or
outsl
push
inc
jmp
xor
pop
sbb
add
mov
test
insl
adc
add
loop
cs
cmp
sti
xchg
outsl
jg
out
add
adc
ret
nop
mov
xchg
aad
ret
add
jg
fistl
imull
adc
loopne
add
mov
ljmp
aas
addr16
adc
cmp
rorl
int
fldcw
push
pop
nop
mov
icebp
les
ret
add
pusha
repz
add
sub
pop
add
in
sti
fs
mov
dec
xchg
das
add
aad
stos
sahf
jp
xchg
xor
call
push
add
cmp
insl
jg
sub
xor
lcall
mov
xchg
mov
fsubrl
xchg
test
mov
das
xchg
xor
je
shl
pop
fcmovu
add
pop
sbb
cmp
in
fiadds
add
aam
imul
or
mov
xchg
push
cmp
add
xchg
mov
mov
ret
out
sbbl
sbb
out
sub
cmp
adc
cmp
insb
mov
jle
push
mov
std
add
movl
push
fidivs
mov
mov
or
inc
sbb
call
adc
xlat
mov
mov
in
roll
mov
xor
rorl
xor
int
fcmovb
mov
inc
sbb
adc
aas
sub
out
mov
add
mov
jle
mov
out
repnz
push
rcl
fildll
inc
inc
jle
je
insb
xchg
lock
mov
mov
inc
mov
xor
xor
fxch
fisubl
cli
sahf
cs
loope
jmp
mulb
addr16
movl
pop
cmp
push
dec
adc
neg
not
xor
lea
add
fstps
jae
add
idivb
testl
mov
shll
int
mov
push
int3
and
xor
mov
stos
sbb
ja
adc
sbb
mov
mov
mov
lcall
hlt
pusha
jp
arpl
or
cli
pop
lock
pop
dec
cmp
dec
les
stc
and
call
loopne
into
push
ret
negb
call
mov
lret
or
adc
neg
lret
xor
test
fdecstp
fistps
add
adc
cltd
loope
fbstp
sbb
fisubl
sub
adc
jnp
fcoml
push
fdivs
shrb
jns
int3
outsl
lcall
test
bound
mov
not
add
xor
clc
lcall
or
faddl
leave
lea
icebp
pop
jp
cld
test
sbb
notl
and
mov
sbb
jp
add
pusha
pop
mov
mov
lret
sub
enter
jge
mov
jns
incb
pushl
add
push
push
imul
insl
imul
push
pop
dec
mov
stos
call
shrb
adc
aaa
loopne
call
outsb
or
es
mov
int3
mov
xor
xor
pop
cmp
out
cmp
mov
fdivrl
dec
les
leave
ret
movsl
lods
sbb
test
pop
mov
mov
jg
leave
sahf
or
lds
mov
mov
mov
bound
rclb
jge
jecxz
roll
adc
pop
scas
pop
push
mov
jo
add
mov
push
ficomps
mov
fisubs
test
mov
or
cs
or
in
fimull
int
mov
inc
in
pushf
add
and
decl
xor
std
sbb
cmp
ljmp
and
fs
in
lds
out
or
inc
or
pop
loopne
idivl
cli
xor
sbb
mov
pop
mov
daa
cmpsb
sbbl
pop
mov
inc
movsl
repz
es
jbe
sti
mov
arpl
sbb
dec
nop
in
das
jmp
div
fimull
cmp
mov
rcrb
cld
pushf
xor
mov
loop
arpl
sahf
js
sub
nop
xchg
ds
loope
test
or
mov
loope
xchg
mov
add
cmpsl
add
ljmp
je
lds
dec
addl
shll
cld
inc
imul
dec
pop
fdivr
sub
add
cmpsl
jns
js
add
or
push
push
loope
pushl
mov
ret
outsl
imul
sub
outsb
mov
outsb
mov
out
fildl
fldt
sub
hlt
push
pop
pop
cli
incl
bound
add
lods
pushf
in
fisttpll
sbb
sarl
aas
ljmp
push
xchg
clc
jg
cmp
pop
adc
add
mull
pushf
stos
sub
push
incb
cmpsb
imul
pop
cltd
push
movsl
add
jne
push
push
icebp
in
dec
jl
and
mov
sub
jae
xchg
jno
ffree
insl
mov
push
and
and
jmp
mov
idivb
jne
push
mov
xor
or
fistpll
fiadds
jo
sbb
add
adc
out
fnsave
mov
or
push
aad
add
sbb
fildll
sub
cld
add
mov
dec
sbb
sbb
push
pushf
jnp
push
outsl
bound
mov
aas
repnz
js
popa
sub
sub
fdivl
addl
fstpt
mov
inc
adc
test
mov
adc
dec
mov
mov
insb
sti
mov
or
int3
xor
cmp
adc
adc
xor
sti
insl
cli
mov
jmp
xchg
mov
bound
pop
mov
jge
push
and
sub
or
push
dec
sub
mov
pop
ds
sti
inc
daa
ljmp
or
add
xor
xchg
sti
and
inc
outsl
mov
nop
loop
add
shlb
rcl
cs
sub
sub
add
adcl
jg
hlt
lcall
out
adc
sbb
es
outsb
aas
jecxz
ljmp
dec
sub
lret
sub
jbe
in
add
std
rorb
lcall
lds
or
insb
push
mov
imul
btr
ja
adc
test
mov
outsb
mov
dec
xchg
scas
sub
adc
xchg
cmc
cmp
mov
nop
insl
jmp
pop
clc
xchg
mov
add
jp
fstpt
pop
data16
out
add
call
pop
pop
sub
add
rcll
sbb
fistpll
lahf
push
gs
cmp
fsubl
push
mov
mov
cld
shll
pop
sbb
cmp
mov
sub
movsb
jge
in
fistpl
mov
mov
clc
out
jp
sbb
jge
xchg
xor
insb
lock
jecxz
lock
jo
movb
pushf
or
insl
jbe
mov
sbb
sarl
mov
sub
std
pop
stos
mov
sbb
cmc
clc
gs
insl
and
mov
mov
nop
add
aad
test
or
aaa
jo
je
adc
sub
jp
pop
clc
icebp
insb
test
sbb
mov
rcr
out
or
mov
lret
pop
clc
in
fildll
sbb
and
lahf
and
mov
test
mov
cmp
out
inc
sbb
cs
jg
mov
test
push
mov
call
inc
call
or
in
and
pop
cmpl
rcpps
cltd
ss
mov
cs
sub
or
push
std
sbb
clc
pop
popf
lcall
dec
movsb
aad
push
cld
lea
dec
add
inc
and
das
cld
outsl
cwtl
sti
fsubl
mov
movzwl
leave
enter
leave
loop
popf
in
xchg
mov
inc
fstps
mov
xchg
repz
fsubl
outsb
push
mov
lahf
fcoms
testb
mov
call
rcll
shll
in
push
mov
add
dec
dec
or
sbb
xchg
mov
les
inc
cli
ret
mov
adc
cli
jg
les
push
adc
scas
mov
loop
out
test
arpl
daa
sar
push
loop
push
inc
xchg
lds
or
test
outsb
mov
or
mov
ja
dec
sub
dec
addb
mov
fisttpl
add
add
sub
push
xor
mov
sbb
add
lcall
sub
out
nop
jae
sbb
push
pop
repz
fistps
pusha
add
test
xlat
push
mov
pop
push
fsub
movsb
adc
lea
dec
jg
jg
add
enter
sub
ret
les
mov
or
xchg
mov
divb
mov
je
xor
mov
xor
add
xor
notb
popa
cmp
fisubs
mov
push
sbb
push
loopne
push
and
in
pop
stos
fst
femms
pop
or
cld
push
xor
scas
std
out
cld
jno
sub
loope
jb
jle
cmp
cwtl
mov
mov
pop
js
jbe
adc
bound
out
int3
push
jae
ret
fisubrs
push
icebp
sub
mov
notl
inc
out
imul
add
cmpsl
test
inc
mov
and
loopne
jbe
sarl
mov
fwait
push
and
jg
push
inc
aam
cwtl
add
push
outsb
dec
xchg
outsb
mov
inc
test
cmp
push
push
int3
out
and
xor
or
ss
push
inc
ret
push
xor
nop
cmpsb
adc
jns
adc
mov
jne
fsts
add
mov
jns
mov
nop
dec
iret
inc
cmpsb
mov
pop
xor
xchg
sbb
mov
add
xchg
lds
pop
insl
xchg
mov
scas
cmpsb
add
dec
fisttpll
scas
xchg
push
or
stos
loope
or
mov
cmp
inc
or
cmpsb
lcall
mov
or
push
xlat
stos
mov
and
add
add
cmp
insl
imul
push
fnstenv
and
push
outsl
push
pushl
cmp
or
sbb
jl
lods
loope
hlt
dec
neg
pop
sbb
leave
lods
neg
rorl
ss
jbe
adc
or
and
sub
or
mov
sbb
mov
je
pop
push
pop
push
in
mov
mov
sub
pusha
aas
enter
push
push
inc
dec
add
stos
pop
clc
mov
call
jp
inc
jmp
cmp
cmpsb
xchg
dec
ljmp
mov
mov
movsl
pop
adc
push
sarb
jo
das
je
or
cmp
sbb
pop
jg,pt
rcl
aaa
push
push
adc
arpl
popf
ljmp
jl
mov
aad
es
mov
loope,pt
and
std
xor
and
pop
xorb
jnp
add
lret
xchg
fistl
inc
aad
sub
nop
jo
mov
pop
insb
jge
push
or
sub
add
jp
sbb
xor
adc
sarl
clc
pop
adc
cltd
add
pusha
stc
cwtl
leave
loopne
mov
mov
sbb
or
inc
test
mov
scas
jmp
push
punpcklwd
or
in
cmpsl
iret
push
adc
sub
add
mov
or
cmp
fidivrs
and
stos
pop
push
sbb
push
push
add
in
xchg
mov
rorb
mov
std
mov
mov
sarb
pop
mov
mov
jb
xchg
sbb
in
push
iret
hlt
jb
mov
loopne
cmc
bound
jmp
das
addr16
pop
cli
das
fldl
stos
sub
cmc
mov
adc
and
popa
fidivrl
ret
lods
mov
mov
jmp
pusha
pop
test
jg
inc
dec
cmpsl
jg
mov
loope
add
ret
pop
es
lods
and
clc
xor
jne
out
lcall
inc
jns
inc
add
and
add
jmp
or
adc
cmpb
pop
and
sbb
or
xchg
fdivs
aas
jg
mov
mov
dec
xor
adc
pop
insl
stc
and
jne
xchg
xchg
les
xchg
jecxz
test
xchg
inc
or
jno
aam
xor
push
lea
jle,pn
popf
repz
mov
cltd
add
add
dec
incl
cmp
mov
inc
outsb
and
jb
outsl
aaa
adc
shlb
insl
and
mov
in
pop
inc
pop
ja
addr16
xor
jmp
pop
mov
addr16
add
nop
or
in
pop
pop
in
dec
pop
sub
sbb
movsl
imulb
ret
cs
es
andl
xor
and
xlat
lock
mov
mov
mov
push
and
sti
adc
sub
pop
mov
or
imul
jg
mov
inc
lret
lret
repnz
sub
stc
adc
mov
or
xor
movl
pop
cld
sbb
or
pop
cwtl
add
fdivs
sbb
mov
cld
mov
jo
aam
cmp
pop
mov
xor
rorb
mov
rcr
inc
pop
add
pop
add
inc
popf
pusha
mov
icebp
add
nop
pop
jae
outsb
xor
pop
push
adc
mov
call
adc
mov
pop
rolb
jmp
insb
imul
fsubs
push
pop
cmp
iret
mov
stc
mov
mov
lods
imul
fmuls
neg
sub
mov
add
sub
les
shll
sbb
cmp
pusha
aaa
sbb
adcb
jge
and
pop
pop
orb
add
mov
aaa
jo
xchg
inc
add
sub
jge
sahf
sub
outsb
das
mov
pop
aaa
inc
cld
neg
sbb
adc
insl
aam
xor
addr16
jo
inc
cmp
add
or
je
mov
or
stos
mov
in
or
sub
push
int
outsb
cmpl
outsl
fs
lock
aas
add
cmp
sub
inc
sbb
jbe
jb
dec
inc
sbb
test
mov
mov
mov
rcl
push
mov
aam
or
pop
inc
sub
fcomp
in
out
ss
divl
and
je
cmpsb
and
iret
cmp
adc
leave
jb
lock
int
inc
call
mov
adc
mov
rorb
aad
add
rorb
movsb
cmp
mov
jl,pt
les
dec
test
jae,pt
add
aaa
or
rorb
sti
jecxz
jae
jnp
aam
aam
or
jbe
arpl
inc
not
popa
in
ljmp
test
movb
inc
push
out
sarb
mov
cltd
fisttps
imul
in
adc
data16
mov
mov
faddl
sbb
add
jnp
and
pop
jecxz
or
pop
add
or
icebp
inc
fldt
es
sbb
hlt
adc
dec
add
sub
lock
or
js
dec
ljmp
mov
cmp
rorb
push
imul
jne
sub
adc
mov
sbb
leave
ret
mov
mov
arpl
popa
mov
push
outsl
shlb
rcrl
popf
jp
inc
ret
movsb
sbb
xor
and
sbb
mov
fucomp
mov
inc
adc
lret
movd
inc
jns
or
adc
sbb
pop
int3
mov
stos
push
dec
loopne
sub
fldl
xor
rorb
call
rclb
mov
sti
push
sbb
xor
sub
dec
mov
pop
push
addl
inc
pop
mov
sbb
push
xor
or
lea
cmc
fsubrp
les
jnp
cmp
pop
shl
popf
inc
jecxz
loopne
cld
dec
scas
dec
aas
sbb
cmp
addb
mov
and
cli
fiaddl
dec
cwtl
inc
mov
xlat
jbe
cwtl
pop
loop
pop
cmp
fdivs
adc
push
int3
dec
mov
push
pop
jge
or
mov
push
or
mov
shll
lods
and
push
hlt
and
out
xor
sbb
sbb
rorb
fnstcw
imul
mov
ja
ret
inc
pop
jb
sbb
pop
lds
and
sbb
mov
notb
fisttps
into
mov
xor
lods
inc
mov
sub
xor
adc
pop
bnd
movsl
cmpsb
js
push
mov
adc
adc
in
ror
dec
std
push
fucomip
mov
adc
add
outsb
pop
mov
jb
arpl
out
fisubrs
mov
cmpsb
xchg
or
test
mov
xor
repnz
stos
popa
aas
inc
mov
fnstenv
cmp
js
xor
insl
je
imul
mov
dec
in
adc
scas
mov
push
cmp
pop
std
or
test
nop
repnz
sbb
lret
xchg
gs
int
pop
pop
nop
sbb
loop
fcoml
cmp
fdivrl
jecxz
lea
or
cmpsb
stc
inc
mov
cs
inc
pop
push
sub
out
shll
sub
and
push
js
sahf
cltd
addr16
cmp
repnz
inc
cmp
str
bound
lds
daa
inc
cmpsl
cmc
or
outsl
dec
imul
les
jns
fadds
fistpll
out
xor
jo
cld
flds
pop
lods
or
sbb
out
push
incl
int3
jg
mov
mov
les
add
or
pusha
mov
sar
or
push
mov
std
mov
aaa
std
jbe
pop
inc
ljmp
movsb
jmp
cmc
sub
or
jno
push
xchg
xor
inc
add
notl
sbb
inc
call
in
jg
pushf
mov
out
shll
push
call
xchg
mov
jp
mov
sub
inc
jle
icebp
jg
or
jno
add
xchg
cltd
or
data16
and
andb
aaa
cmp
call
mov
inc
or
inc
adc
dec
xchg
ds
pop
loopne
insb
bound
ret
pop
lcall
dec
cld
inc
pop
push
xchg
repz
sbb
inc
mov
mov
adcl
push
pop
sbb
rcrb
fdivrs
out
ret
movsbl
rorb
lds
and
adc
fidivrl
sbb
fwait
movsb
push
insl
cs
lods
frstor
gs
push
inc
div
jg
dec
lret
imul
inc
test
mov
sbb
aad
add
mov
cmp
xchg
fstl
incl
pop
gs
and
sub
add
cmpsb
clc
xchg
mov
sbb
push
sbb
aaa
leave
or
test
cmp
loop
lret
cld
or
inc
mov
mov
inc
daa
stos
outsl
lock
xchg
push
add
add
jle
add
test
in
lods
push
push
imul
fwait
push
mov
fwait
sub
stc
mov
inc
push
sarl
push
gs
lret
inc
out
scas
mov
sbb
mov
fistl
sbb
push
cmp
ja,pt
movsb
insb
jne
add
aam
dec
push
mov
loop
aad
sub
xchg
xchg
nop
outsl
mov
insl
test
sti
mov
jno
pop
cmpsb
clc
add
mov
test
mov
or
adc
dec
xchg
call
sbbl
inc
add
push
mov
insl
leave
rcrl
xchg
bound
fwait
aam
sub
mov
push
inc
fistpl
dec
test
rorl
jp
sub
repnz
jp
jb
loopne
mov
dec
std
cmp
adc
lcall
or
std
jg
mov
sub
dec
xor
inc
jl
and
fdivr
das
adc
or
ret
mov
mov
add
outsl
jl
lret
pop
mov
adc
clc
ret
loopne
push
pop
fwait
push
inc
not
stos
mov
add
sbb
nop
cmc
aam
das
fisttps
mov
sbb
movsl
pusha
scas
push
and
es
fucomip
fdivs
xor
push
jb
jb
cli
cs
addr16
xchg
add
push
cmp
xlat
and
dec
hlt
xchg
inc
pusha
mov
inc
ret
adc
inc
or
xchg
inc
jno
les
hlt
xor
es
mov
dec
mov
out
push
add
inc
ljmp
fdivs
outsl
sub
rcrl
jmp
stos
or
adc
pop
pop
xchg
inc
jne
sbb
shll
mov
daa
data16
mov
sbbb
fdivrs
pushf
mov
dec
pop
lahf
or
and
mov
aaa
and
or
test
adc
aam
xor
xchg
lods
out
add
add
iret
test
and
addl
inc
push
adc
and
enter
in
in
nop
adc
mov
sbb
sub
test
out
add
dec
xor
ljmp
les
in
dec
push
push
push
add
cmpsl
fidivrl
movsb
das
out
divps
inc
push
sbb
clc
shl
sbb
xor
cld
xor
jae
jmp
add
push
jae
sub
xchg
adc
mov
popl
pop
or
fs
or
adc
scas
push
xchg
sub
fcoml
push
lock
sbb
testb
cmc
or
dec
bound
jge
fstpl
mov
fsub
adc
scas
pop
push
testl
or
out
add
pop
in
faddp
mov
and
mov
lcall
inc
repz
in
into
imul
clc
sbb
push
pop
addps
inc
mov
or
and
add
aad
jo
pushf
pop
in
pusha
aad
add
popa
repz
sbb
loope
adc
push
adc
jns
les
in
xchg
sti
subl
pop
loopne
and
mov
mov
adcb
jge
popa
in
push
lahf
das
outsb
xchg
lcall
xor
bt
test
mov
xlat
sbb
push
imul
inc
xchg
jg
outsl
sub
les
jl
fldt
hlt
dec
and
pusha
gs
and
jecxz
and
test
ds
cwtl
hlt
mov
push
cli
push
dec
dec
cmp
fwait
push
inc
jae
sti
jb
pushf
add
enter
aad
mov
dec
dec
js
jae
stc
jle
pushl
and
pop
mov
enter
mov
mov
add
xchg
inc
dec
lea
das
or
stos
insl
add
ret
lods
ljmp
inc
fiadds
js
outsb
daa
mov
dec
dec
and
mov
out
sti
sbb
int
in
cmc
xor
mov
and
sbb
sbb
push
dec
cmp
hlt
xchg
sub
aam
cmpsl
aaa
xchg
sti
xor
fnstcw
fcoml
fnstcw
or
data16
or
dec
push
mov
jo
xlat
scas
fbstp
ret
dec
pusha
aas
fldz
nop
lods
cmp
push
ss
jle
rorl
xor
xlat
push
push
call
loopne
fidivs
dec
xchg
lods
inc
jo
pop
mov
push
or
mov
add
nop
jbe
ror
adc
pop
push
mov
dec
das
test
movsb
or
add
cwtl
insb
sbb
or
jg
ret
and
mov
mov
adc
sbb
mov
xor
pop
je
or
xchg
xor
addr16
jmp
lea
or
mov
inc
fiadds
mov
fs
ja
ja
ja
popf
sbb
hlt
and
scas
inc
mov
fnstenv
sbbb
pop
pop
loopne
ret
jl
add
aaa
push
rclb
insb
adcb
sub
lods
into
inc
jg
sbb
xor
jae
inc
add
orb
inc
mov
sub
cmc
jecxz
dec
adc
aaa
mov
push
ljmp
repz
fildll
mov
adc
xchg
add
pop
or
rorl
push
lds
bound
test
int
push
outsb
cmp
inc
cwtl
loop
adcb
fimull
and
arpl
sub
xor
in
in
cmp
push
aam
push
xor
push
jp
js
push
movsl
adc
push
cmp
rol
mov
push
lods
cmp
clc
cmp
mov
out
push
adc
ja
or
shll
jmp
mov
daa
hlt
xlat
mov
inc
jno
out
ret
imul
and
and
outsb
dec
adc
enter
or
push
mov
gs
push
mov
in
subb
repz
pcmpgtd
pop
and
adc
mov
loop
lea
repz
je
mov
or
sarb
pusha
and
sbb
push
xor
sbb
jmp
sbb
sbb
or
pop
mov
add
xchg
jl
test
jbe
rolb
test
sub
loopne
daa
sub
fucomip
bound
add
xor
push
xchg
push
push
outsl
mov
mov
mov
dec
mov
inc
filds
sub
xchg
mov
fisttps
sbb
adc
cwtl
iret
std
add
and
test
add
jo
sub
pop
mov
add
mov
nop
lret
adc
cmp
lret
or
mov
xlat
cltd
sub
inc
cli
sub
inc
add
add
pushl
test
xchg
aam
hlt
and
mov
mov
pop
push
stos
pop
adc
pop
sti
shlb
dec
or
add
insb
add
es
fdivs
pop
clc
lea
sub
add
stos
add
lods
mov
rorl
jg
stc
mov
xor
pop
xor
subl
xchg
ds
aaa
cs
insl
push
pop
adc
xchg
adc
sbb
outsl
xchg
loope
or
mov
or
ret
mov
aas
sub
pop
cmpsl
or
pushl
repnz
out
adc
or
outsl
int3
xchg
std
xchg
sub
xor
cli
cmp
cmp
and
cmp
dec
or
bound
jo
ret
jns
call
lods
gs
xor
mov
faddp
mov
lret
addr16
push
fisubl
sbb
int3
dec
or
push
pop
inc
arpl
pop
xchg
push
jge
addb
insb
push
xchg
lock
enter
xchg
iret
and
cmp
rcll
mov
les
in
pop
mov
ficoml
sbb
push
sub
out
push
jb
add
sub
addr16
ror
outsl
iret
add
dec
push
push
xchg
je
or
mov
cmp
adc
or
mov
mov
push
push
roll
cmpsl
pop
je
imul
or
dec
sldt
test
mov
shlb
int3
adc
sbb
add
jp
dec
insl
lret
inc
mov
sbb
repnz
or
addr16
pop
push
popf
sub
xchg
jnp
mov
cmc
add
clc
xchg
cli
sub
mov
lods
add
add
lcall
mov
xor
inc
and
adcl
sbb
dec
jo
std
ret
adcb
xchg
call
ss
leave
inc
shr
jnp
sub
je
push
pop
xchg
mov
xor
lock
add
jl
cs
je
push
mov
adc
in
into
or
rcrl
outsb
fists
or
adc
mov
dec
or
mov
add
movsb
push
xchg
clc
clc
jecxz
jne
sub
pop
add
js
mov
sub
cmc
sbb
ret
add
jmp
fcom
or
push
loopne
and
scas
sti
stos
sbb
sbb
cwtl
cmp
xor
sbb
xor
mov
es
jae,pn
xor
pop
pop
sbb
inc
pop
nop
pop
test
pop
mov
repz
roll
add
outsl
mov
stc
or
inc
inc
rcr
jns
test
sbb
andl
pusha
add
loopne
or
stc
xchg
dec
mov
fildll
and
sub
dec
popf
push
push
sbb
movsb
ret
inc
out
outsl
leave
mul
push
sbbl
xor
lret
je
loopne
mov
mov
stos
mov
cmc
jle
fsubrs
fdivrs
adc
gs
sbb
test
sub
or
ficoml
push
push
fwait
rorl
mov
std
scas
mov
nopl
enter
sub
das
add
sub
or
adc
jmp
lret
pop
sahf
mov
fildl
pop
loopne
xchg
mov
sbb
ret
jp
jae
pushw
mov
mov
shl
ljmp
flds
xlat
push
and
mov
sub
xor
dec
pop
incb
or
imul
add
dec
cmc
adc
mov
cmp
mov
std
or
stc
dec
mov
ds
mov
pushf
aas
int3
adc
cwtl
xchg
ret
or
cmpsl
int3
pop
and
adc
sub
incl
mov
or
inc
jecxz
clc
std
pop
pop
pop
push
jmp
jb
fldl
aaa
icebp
call
sbb
mov
mov
dec
lcall
jmp
pop
mov
dec
repnz
sub
outsl
insb
popl
in
in
mov
push
aaa
clc
mov
adc
hlt
lds
xchg
nop
xchg
xlat
cld
outsl
or
mov
mov
push
jle
push
dec
clc
push
xchg
sysexit
roll
fstp
lock
pop
mov
mov
add
inc
add
outsl
sbb
rcr
cmp
clc
pop
push
adc
push
add
fisubrl
xchg
sbb
add
loop
jmp
adc
cld
aad
mov
pushf
data16
jo
in
jo
aaa
pop
loop
push
dec
cld
in
add
add
pop
lock
mov
push
stos
add
add
cwtl
ret
es
mov
mov
add
mov
mov
push
daa
fisttpl
sub
pop
orb
sbb
xchg
test
sub
mov
cmc
adc
lods
adc
fstl
adcb
dec
jo
add
pop
shrl
push
adc
adc
loopne
arpl
dec
mov
dec
cld
or
ljmp
sub
out
sub
adc
addr16
ljmp
fdivrs
push
xorl
jecxz
add
mov
pop
jo
mov
dec
std
fsubrs
mov
and
xor
push
mov
xchg
xorb
dec
cwtl
pop
js
dec
push
cs
lock
sbb
subl
adc
jl
out
dec
pop
mov
sarb
push
call
lds
js
jmp
cld
jge
pop
ljmp
addr16
cs
fcoms
rorl
sub
fstpt
add
cmc
cmp
jg
xor
xchg
aas
xlat
mov
filds
stc
mov
push
cmp
rcrl
cmp
pushl
adc
and
stc
lcall
loope
and
inc
push
inc
pushf
bnd
test
pop
sub
push
filds
jg
call
int3
mov
lods
fs
clc
test
or
jg
push
clc
fildll
sub
mov
push
jnp
add
mov
scas
aam
scas
scas
pushl
js
pop
and
push
popa
mov
cld
in
ljmp
aas
push
mov
hlt
mov
notl
ret
rclb
add
test
lods
jg
out
loop
inc
scas
jns
cmp
jbe
and
push
push
outsb
int3
inc
insb
or
sub
icebp
sub
adc
out
icebp
ss
mov
or
inc
mov
outsb
xor
jp
inc
movsb
test
jmp
or
scas
loope
daa
pusha
inc
xchg
daa
mov
dec
int3
ljmp
xchg
inc
sub
ss
mov
lods
add
and
jns
push
mov
lock
loope
sub
push
cmp
movsl
and
adc
fs
cli
mov
jecxz
pop
pop
dec
les
pcmpeqd
and
inc
rorl
roll
cwtl
ja
sbb
mov
sub
aad
outsl
fisttps
mov
mov
adc
loopne
add
pop
popa
or
hlt
jg
scas
or
mov
divb
aad
push
xor
cmp
add
jle
add
xchg
and
fstpl
xchg
lds
cmc
nop
xchg
testb
cmp
xchg
jb
rcrl
sub
or
inc
daa
je
fimull
inc
int3
and
cmc
add
add
dec
test
cmc
add
lods
addr16
lods
push
in
aam
int3
push
adc
dec
push
jo
xlat
imul
lock
xchg
mov
inc
adc
pop
stc
out
add
cmp
lds
mov
std
add
aam
loopne
xchg
mov
xchg
shll
clc
aam
ret
mov
mov
aam
aam
aam
shrb
orb
test
add
je
push
mov
xor
push
or
pop
gs
rolb
test
adc
stc
in
and
mov
or
adc
mov
push
shrl
into
mov
pop
out
sbb
cmpsb
fwait
xor
gs
call
es
ret
add
or
lret
or
pop
loope
inc
in
cmp
out
push
jge
mov
test
sub
pop
stos
adc
mov
cld
xlat
inc
and
add
xor
sbb
cmpsl
xor
mov
scas
xor
inc
sbb
xor
loope
sub
movsl
add
popa
ret
jno
jbe
add
sbb
mov
fdivrp
fs
cmp
cmpsl
mov
mov
lds
inc
add
cmpsb
repnz
ss
mov
jmp
outsl
add
pop
into
or
add
loopne
dec
mov
inc
add
enter
or
pushf
mov
icebp
lock
sbb
cmpsl
mov
cli
sbbl
push
jl
or
fidivs
out
dec
push
inc
ret
aad
mov
fwait
cwtl
es
sbb
cld
dec
pop
pop
lods
or
loope
sbb
mov
jecxz
jne
sbb
les
les
adc
mov
xor
inc
push
jg
sbb
or
arpl
cmp
push
jecxz
loope
iret
fninit
or
xor
add
inc
sub
mov
push
fsubrl
fdivrl
push
mov
push
sub
stos
in
cwtl
push
in
jecxz
mov
or
dec
sub
lret
lods
jno
xor
or
mov
test
aad
cmp
iret
in
mov
js
or
xchg
mov
mov
ret
outsl
jge
xchg
mov
fmuls
insl
fiadds
jp
mov
sbb
repz
cmpb
or
inc
xor
ret
pop
cli
inc
icebp
push
inc
push
mov
add
push
push
mov
sbb
inc
inc
mov
out
xor
aas
and
mov
xor
jecxz
pushf
dec
in
push
mov
shrl
push
xchg
shlb
mov
add
pop
ret
push
inc
jl
aaa
mov
test
fwait
push
dec
ds
mov
adc
jg
or
mov
cmp
push
sub
loopne
in
jbe
mov
icebp
add
xchg
cmpsb
in
js
ljmp
test
mov
imul
sbb
les
into
scas
pop
scas
pop
insl
insb
ficomps
cs
call
hlt
xchg
in
pop
mov
pop
fsubrl
fidivl
xchg
cmp
sub
mov
cmp
pop
or
push
test
fsub
ja
pusha
or
mov
push
call
pop
push
outsb
nop
pop
pop
mov
adc
inc
inc
push
movsl
ja
test
mov
jne
sbb
insb
and
inc
mov
lret
fwait
xor
lods
pop
icebp
jns
xchg
cmp
in
mov
scas
mov
js
enter
push
cmp
test
decl
std
mov
push
mov
xchg
aad
jge
out
mov
mov
lods
outsl
int3
push
xchg
popf
xlat
add
loop
jns
fnstsw
push
xlat
mov
pop
fwait
outsb
hlt
aaa
adc
sbb
sub
fstpt
daa
add
or
mov
cltd
xlat
pop
adc
or
dec
lcall
fs
cld
testb
jecxz
add
or
xor
enter
outsb
sbb
mov
ljmp
mov
jp
decl
outsl
push
loope
leave
dec
loope
fdivrl
adc
push
outsl
movsl
mov
in
jno
stos
test
aaa
cs
mov
sbb
test
mov
test
ret
popf
test
cmp
jg
pop
negb
mov
scas
incb
sbb
mov
mov
out
sahf
ss
dec
sub
testb
mov
popf
sti
andl
mov
das
mov
sbb
mov
xchg
nop
shrl
out
andb
shl
fbld
inc
dec
pushf
jge
mov
lock
adc
cmp
push
add
inc
icebp
inc
sarb
ja
pop
adc
mov
iret
fdivrs
jmp
adc
dec
adc
mov
repnz
ret
testb
sbb
add
in
cmp
jns
ret
subl
aad
test
mov
aad
cmp
fwait
stos
pop
lret
adc
mov
pop
lcall
faddl
cli
mov
lds
mov
js
mov
repz
stc
add
icebp
xchg
lock
lock
mov
jno
addr16
pop
cwtl
mov
lock
in
repz
mov
sbb
clc
pop
es
pop
inc
mov
out
scas
int
roll
dec
or
outsl
mov
sub
lods
xor
fadds
add
bound
mov
mov
fs
loop
ss
cmpsl
shrb
jge
repnz
out
pusha
xor
lock
aad
or
xchg
or
call
cwtl
sub
mov
in
sub
shlb
inc
lods
addr16
adc
push
xor
inc
sti
mov
js
cmp
mov
push
sbb
or
cmpsl
sbbl
and
mov
sbb
fimull
xor
inc
inc
pusha
adc
in
or
lock
mov
rclb
outsl
cltd
pop
scas
fdiv
orl
test
in
sbb
mov
mov
mov
dec
add
jnp
iret
ds
ret
insl
adc
inc
push
lds
and
dec
fbstp
stos
mov
xor
xchg
xor
inc
roll
xor
jl
xor
adc
xchg
jmp
mov
xor
jb
test
xor
daa
add
sub
push
add
xor
xor
pop
out
pop
jmp
mov
adc
xor
and
and
andl
mov
jmp
dec
neg
inc
mov
clc
lock
pop
inc
jae
push
out
movsb
dec
adc
inc
arpl
fiadds
xor
xor
and
ja
xchg
rcll
cwtl
add
shlb
rcrl
pop
cmp
in
xchg
outsb
pushf
dec
aam
test
xchg
lahf
fstpt
roll
mov
push
add
outsl
inc
cld
int3
mov
inc
adc
pop
leave
nop
gs
notl
icebp
sbb
shlb
xchg
sub
stos
loopne
push
pop
cltd
pop
cmpb
test
jo
insl
ret
xchg
inc
mov
ja
insl
jne
push
roll
out
sbb
ja
push
mov
fstpt
aad
cwtl
pop
loopne
loop
test
sti
enter
or
inc
xchg
sub
jmp
pop
push
pop
mov
dec
adc
dec
mov
dec
push
pop
loopne
lock
sbb
xchg
and
ss
mov
jle
inc
sub
rcrb
mov
aaa
xlat
sub
xchg
mov
add
lods
dec
or
inc
pushf
test
add
enter
lods
cmp
lcall
and
dec
mov
add
enter
pop
push
cmp
and
pop
aad
pop
sbb
adc
test
mov
fmulp
inc
nop
movsb
push
and
test
push
sahf
mov
arpl
or
push
and
mov
aam
sub
add
cmp
fistpl
fisubl
inc
dec
push
add
sub
xlat
in
pop
jg
fildl
jo
pop
mov
xchg
pop
icebp
cmp
aaa
push
fcmovne
push
adc
ret
lock
or
pop
orl
push
das
push
dec
jo
pusha
jmp
imul
push
lods
mov
jg
push
mov
les
pop
and
stos
lret
push
jo
jg
cwtl
sub
mov
and
mov
mov
shrb
jbe
cmc
loop
sbb
pop
lds
loopne
and
mov
stos
in
jecxz
call
std
inc
inc
jns
inc
rcl
mov
negb
mov
xlat
inc
iret
cmpl
lods
pop
push
cmpsb
add
inc
ljmp
rdtsc
sti
mov
hlt
fisubrs
mov
mov
outsw
lods
ret
mov
loop
ret
andb
add
push
lret
inc
outsl
shrl
pop
sbb
push
sub
daa
and
sub
mov
and
xchg
mov
ret
mov
cmp
jl
shlb
sub
mov
pop
mov
inc
sbb
mov
fisubs
mov
jl
fildl
cmp
mov
loopne
sub
pop
xchg
mov
out
int
cld
int
in
xchg
pop
sub
test
movsb
dec
shll
mov
push
inc
iret
fwait
stos
arpl
loop
mov
sbb
notb
mov
cmp
mov
mov
dec
lea
or
mov
jmp
fcoms
mov
sub
xchg
dec
lock
les
push
lods
mov
cmpsb
pop
jno
push
add
adc
lret
rclb
les
pop
mov
in
imul
pop
nop
movsb
or
lods
jb
pop
and
sub
call
jno
es
mov
aaa
jno,pn
xor
icebp
xor
faddl
and
out
test
xor
mov
scas
or
jb
sbb
jmp
ret
rcrl
xlat
je
ja
mov
mov
fs
and
comiss
ss
pop
ljmp
ret
or
add
shll
cmp
mov
xchg
add
out
shlb
sbb
mov
pop
mov
adc
mov
xchg
jbe
out
adc
xchg
lea
popf
adc
add
fstl
cld
jecxz
inc
ret
inc
std
add
stos
xor
outsl
call
fucom
xor
mov
lock
sub
xchg
aas
incl
adc
loopne
mov
sbbl
add
test
ret
add
call
ret
decl
inc
mov
gs
mov
mov
mov
dec
das
xor
add
sbb
fistl
mov
insb
jns
mov
push
push
xor
xor
test
ret
push
or
loop
mov
push
ds
psrld
xor
outsl
xorl
or
stc
xlat
out
or
stos
jecxz
filds
inc
notb
lods
pushf
push
mov
sti
roll
push
es
xor
dec
rcl
out
pusha
mov
xchg
outsb
pop
hlt
dec
repz
icebp
ret
and
jno
mov
ret
jbe
test
lock
int
pop
pop
xchg
fisubs
mov
sbb
in
insb
adc
or
jg
stc
adc
push
cltd
in
lock
pop
das
cld
dec
inc
xchg
adc
out
jge
mov
and
and
int
and
dec
mov
inc
rcrb
add
mov
mov
cli
add
loopne
or
or
pop
xor
outsb
jne
outsl
pop
daa
add
xchg
pushf
pusha
push
jl
shlb
mov
adc
or
push
in
jo
push
fwait
sarl
or
mov
xchg
mov
pusha
adc
and
test
test
popa
or
cmpsb
test
sbb
imul
icebp
subl
jmp
ud2
push
sub
mov
mov
jb
ss
add
test
sbb
loop
call
xlat
mov
in
inc
dec
push
jge
rclb
or
jnp
inc
lock
daa
call
lea
sub
adc
jns
inc
out
xchg
add
cmp
lahf
inc
test
cmpsl
loopne
pop
cld
adc
mov
bound
sbb
sub
push
ret
adc
shlb
add
inc
sbb
pop
jo
xor
pop
sbb
push
cmp
xor
test
xchg
adc
test
add
in
mov
fisubl
inc
xor
add
pop
inc
adc
cmp
rorl
nop
cli
push
in
sahf
imul
arpl
xchg
lcall
mov
jge
push
fmull
cld
push
push
lds
sub
mov
sub
push
dec
adc
pop
shll
dec
dec
fsubrs
bound
add
or
mov
test
xchg
gs
add
dec
and
mov
mov
push
pop
dec
mov
mov
mov
xchg
pop
jge
add
call
cmp
pop
in
loope
in
in
push
adc
cs
dec
mov
push
sbb
cld
or
in
sbb
sbb
fists
push
jne
repz
push
dec
adc
sbb
lea
pop
decl
mov
sub
out
cli
cmpsl
iret
pusha
add
cmp
pop
adc
push
jg,pt
push
gs
clc
and
mov
xchg
cmp
dec
sti
scas
fcoms
mov
push
cmp
cs
jecxz
mov
out
add
daa
push
icebp
add
mov
pop
pop
testl
dec
popl
or
jbe
std
sbb
movsb
lret
and
daa
cld
or
xorl
insl
push
gs
add
lock
jo
in
pop
mov
je
or
pop
jge
fiadds
cmp
cmpsl
pushl
push
jle
cmp
ja
xor
sbb
fists
jbe
mov
rclb
dec
jne
adcl
pop
sub
pop
lcall
jmp
sub
ljmp
mov
sbb
movsl
jle
roll
mov
mov
mov
mov
inc
and
aaa
rcll
sbb
push
dec
mov
inc
fldt
or
sbb
ljmp
and
mov
mov
into
shl
xor
push
aad
adc
pop
lods
rcrl
adc
inc
inc
daa
inc
fildll
jbe
hlt
cmp
xor
pop
inc
or
or
adc
stos
arpl
cld
xchg
adc
mov
loop
xchg
sbb
sub
cld
adc
arpl
cli
decl
repz
in
cmp
pop
xchg
movsb
xor
jmp
sti
sbb
icebp
inc
decl
adcl
jae
mov
repz
jg
js
push
popl
pop
inc
cli
popa
or
ja
sbb
add
dec
call
xorl
or
frstor
les
adc
jl
mov
dec
cmp
sbb
and
mov
daa
add
add
arpl
ret
dec
out
adc
aad
rorb
and
mov
sbb
add
ds
sub
lock
cmp
sub
mov
inc
bound
adc
lds
lret
mov
pop
ret
das
nop
mov
cmp
pop
loopne
js
adc
jecxz
pop
push
rorb
jle
in
mov
mov
push
sub
cli
testb
xchg
mov
jb
add
mov
mov
or
pop
std
pop
movb
leave
add
jb
add
cmp
or
push
xlat
xor
sahf
push
adc
and
test
mov
js
lahf
add
cmp
dec
aam
ljmp
mov
add
das
cld
push
add
fs
cli
or
adc
adc
test
mov
adc
sub
xchg
mov
icebp
mov
iret
jno
sahf
aad
loop
cmp
adcl
xor
dec
adc
sti
fcompl
push
test
lods
ja
push
outsl
xchg
jno
sbb
cmp
mov
push
push
inc
mov
js
mov
hlt
ffreep
ja
daa
or
xchg
clc
mov
and
push
fists
popa
push
shl
jmp
fists
and
mov
lds
add
sub
daa
insl
xchg
mov
adc
cli
call
shrb
pop
add
fisubs
dec
pop
loopne
cmpl
stos
enter
or
out
incl
test
xchg
jnp
or
mov
out
dec
into
lret
int
lock
add
mov
mov
mov
add
jo
flds
test
jp
das
mov
cwtl
rcll
lret
orl
sbb
loope
cmc
jg
jmp
and
mov
test
jmp
push
ja
jmp
inc
mov
clc
cmp
add
mov
jecxz
ss
in
inc
arpl
repnz
imul
mov
call
dec
gs
jl
mov
sbb
push
in
pusha
bound
jg
xor
mov
push
rcr
jecxz
or
add
push
sbb
dec
scas
xchg
mov
cld
inc
outsl
push
inc
dec
fildll
cmp
icebp
not
jns
ffreep
add
adc
bt
mov
xchg
stos
sub
inc
adc
xchg
jg
mov
dec
sahf
xor
in
xchg
cmp
enter
dec
rol
or
in
add
mov
nop
jnp
or
mov
sbb
push
icebp
fisubrs
in
push
jns
data16
add
push
pusha
call
aaa
and
xor
movsl
push
pop
fcomi
mov
iret
pop
rolb
in
call
in
add
test
sbb
cli
push
and
clc
xchg
std
loope
inc
js
pop
rol
sbb
out
mov
or
into
fcoms
shrl
jl
out
cmp
iret
mov
or
xchg
mov
mov
dec
movsb
movsl
push
mov
test
imulb
ret
inc
mov
inc
in
jo
jg
sub
cmpsl
inc
sub
stos
and
push
sub
push
das
je
adc
fcomi
add
jo
mov
xor
xor
sub
test
outsl
sbb
cmp
mov
sub
test
es
inc
loopne
inc
mov
pop
fmull
or
in
mov
jnp
inc
in
xchg
inc
push
inc
cmc
dec
or
sbb
cli
sub
clc
jno
inc
and
cmp
push
inc
sbb
dec
or
incb
test
pop
xor
push
dec
arpl
xchg
adc
rorl
out
repz
inc
xor
cld
jbe
fsubrl
fs
adc
push
clc
inc
mov
jge
fwait
push
or
dec
nop
inc
push
stos
mov
test
fiaddl
xchg
jle
mov
push
movsl
shrl
push
or
cmp
adc
andb
inc
cmc
mov
sub
mov
lock
mov
or
add
push
jp
push
popf
push
xor
jl
xchg
cs
sub
nop
mov
dec
clc
pop
jg
cli
and
loopne
inc
sbb
test
ret
mov
ljmp
lret
adc
xchg
inc
fnsave
in
repnz
daa
mov
rorl
cwtl
mov
mov
loope
rol
xchg
inc
add
std
out
add
fildl
icebp
mov
cltd
mov
lods
and
cmp
ret
add
dec
hlt
cmp
push
dec
movsl
or
test
mov
idivb
je
cmp
jg,pn
cmp
jno
push
mov
lcall
and
dec
popa
xor
adc
andb
lret
add
movsl
sbb
mov
outsl
lock
jle
shll
add
mov
std
outsl
sbb
push
or
iret
dec
je
jp
insb
mov
cwtl
inc
incb
dec
dec
sarl
outsb
cmp
push
es
jae
and
pop
push
jmp
lcall
fwait
in
pop
sbb
cmp
or
wbinvd
es
xor
movsl
test
adc
cld
fmuls
mov
push
and
inc
movsl
aaa
dec
jnp
call
into
call
dec
icebp
out
lahf
add
push
jo
jmp
jle
or
in
mov
ja
mov
mov
in
push
jo
mov
mov
mov
ret
jne
out
enter
or
cmpsl
nop
add
push
and
int3
push
mov
adc
in
inc
push
xor
xor
rcrb
jp
adc
inc
mov
enter
bound
out
rolb
loopne
add
sub
mov
lock
scas
mov
push
cmp
sbb
add
xchg
fstpt
xor
arpl
pop
popf
xor
dec
sbb
mov
push
inc
inc
enter
sbb
cltd
cmpsl
fmuls
add
sahf
and
js
cmp
fidivrs
jbe
arpl
add
rcl
inc
mov
xchg
sub
push
or
pop
or
add
xchg
xchg
enter
lret
enter
mov
dec
or
add
push
stos
pop
aaa
and
pop
jne
mov
add
or
push
cmp
out
sub
sbb
enter
mov
mov
mov
sbb
xor
or
or
sbb
rcr
cmp
xor
mov
sub
mov
mov
push
sti
ficompl
cs
xchg
push
or
fdivp
popl
dec
fmull
js
clc
fsubrs
jmp
in
adc
sub
or
es
incl
out
sbb
mov
add
cld
sbb
push
pop
hlt
add
frstor
cmpsl
or
std
push
sti
mov
xchg
push
sub
or
adc
mov
mov
pop
fnstsw
push
stos
fs
cmc
mov
insl
pusha
add
call
push
dec
mov
loop
cmpsb
lea
push
popf
inc
jns
incb
les
enter
dec
arpl
inc
push
pop
fwait
and
and
and
push
mov
mov
pop
shll
jmp
push
inc
lock
mov
loopne
and
jnp
imul
cs
lcall
imul
add
or
push
outsl
call
insl
lret
sbb
sub
lock
xor
fistl
xchg
jo
test
add
scas
mov
imul
and
lea
test
call
sbb
jle
in
dec
stc
stos
pop
adc
in
test
icebp
filds
aam
cld
iret
cmp
and
addb
pop
insb
addr16
ljmp
dec
mov
jp
mov
imul
repnz
xchg
adc
lret
pop
outsb
pushf
shl
cmp
xchg
xor
sahf
es
mov
cmp
ss
pop
incl
fmul
jb
lds
mov
sbb
daa
jo
in
clc
outsl
and
inc
or
je
cmp
cmc
fwait
add
inc
or
lods
je
repz
aaa
mov
pop
mov
or
jmp
loopne
or
fstp
xchg
push
push
fnsave
mov
cld
push
insl
decl
pop
push
rcrl
pop
roll
dec
icebp
leave
sbb
adc
into
mov
mov
scas
pop
imul
aam
sbb
les
std
mov
or
stos
mov
inc
xchg
add
fildll
and
cmp
or
inc
and
mov
incl
in
add
and
shrl
add
add
ret
push
pop
aas
mov
and
jl
in
scas
push
dec
pusha
mov
test
push
mov
push
pop
or
test
insl
bound
bound
mov
pushl
add
shll
js
clc
add
in
pop
rcll
sti
inc
cmpsb
add
jl
xadd
sti
shrb
ds
adc
sbb
xor
subb
nop
push
mov
mov
mov
daa
sbb
pop
add
sbb
jo
pop
xchg
not
xchg
sub
mov
xchg
icebp
arpl
mov
push
fwait
imull
mov
aam
mov
mov
push
mov
mov
mov
jg
in
sbb
or
mov
out
icebp
lods
sub
insb
jbe
or
icebp
cmpsb
push
add
inc
fnsave
or
adc
test
insl
mov
mov
and
mov
repnz
cmpsl
out
insb
outsl
insb
loop
xchg
add
inc
xchg
sti
inc
insl
test
jbe
xor
adc
lret
sar
movl
outsb
cltd
or
std
and
sub
adc
js
cs
test
enter
call
xchg
lahf
mov
cmp
das
cmp
std
jecxz
and
or
push
push
fs
xor
cs
jp
jmp
push
sarb
in
add
sbb
push
xor
imul
popf
add
cltd
or
fcoms
pop
imul
ret
inc
out
inc
jb
call
ljmp
cs
adcb
ret
jns
int
push
data16
movsl
jbe
mov
jno
js
in
movsb
cs
leave
inc
mov
inc
push
lea
jb
push
push
push
outsl
jle
push
outsb
call
fildl
hlt
push
dec
cld
jo
test
in
or
cmp
cmpsb
and
test
dec
mov
sbb
cmp
test
test
in
jl
pop
loopne
xchg
aas
mov
lock
jmp
cmc
andl
mov
fidivl
pop
sbb
or
cmp
fs
gs
inc
lods
mov
dec
cmp
or
lds
push
xlat
sub
dec
lahf
inc
or
orb
nop
push
and
add
mov
movsl
not
ljmp
repnz
push
fldl
adc
mov
jbe
pop
lods
pop
jmp
pusha
push
mov
decl
popa
je
shll
xlat
push
call
aaa
and
adc
pop
inc
dec
sub
lcall
or
xchg
adc
mov
sub
das
nop
rcrb
in
mov
and
inc
cmp
push
lds
fistpl
xchg
ficomps
stos
mov
test
adc
mov
mov
test
pop
sbb
aad
mov
sub
or
xor
dec
roll
sbb
dec
imul
sbb
outsb
pushl
movsb
call
and
sub
jne
outsl
jbe
push
add
cld
push
mov
in
xchg
aad
rcr
fcomps
dec
pop
fnstcw
inc
das
sarb
jl
dec
fistps
fistps
mov
mov
stos
cltd
inc
mov
mov
fdivr
loopne
insl
mov
inc
and
out
rorb
jge
insl
add
and
sbb
test
test
outsb
adc
cmc
sahf
jns
ret
mov
rorb
pop
call
cmp
and
sub
dec
inc
outsl
adc
xchg
das
aad
jg
cmp
sbb
adc
int3
loop
in
in
out
sarl
test
mov
push
nop
cmp
rcrl
sbb
cli
out
nop
in
fs
xchg
scas
ljmp
cmp
and
pop
loope
push
fstl
adc
jle
mov
negl
outsb
xor
sub
jne
cli
jbe
inc
mov
clc
jecxz
sbb
ljmp
mov
xor
inc
xor
insb
pop
sahf
push
pop
sbb
fidivrl
jne
adc
out
stos
jbe
lret
ljmp
push
push
scas
das
adc
pop
or
pop
pop
je
or
cli
adc
cmpsb
ds
adc
scas
jg
mov
jbe
imul
jbe
push
in
sub
inc
mov
out
lods
adc
pop
sbb
dec
aam
inc
imul
push
lret
push
sub
push
out
aam
les
data16
push
push
fwait
push
and
xor
pop
hlt
xchg
orps
sbb
jne
mov
test
or
repz
or
inc
pop
jnp
fcomip
lea
les
fists
pop
addr16
mov
add
fs
or
pop
icebp
enter
mov
inc
pop
mov
mov
rcl
cld
xchg
rcl
mov
inc
rorl
push
dec
enter
fisubrs
mov
cltd
and
std
and
inc
rorb
mov
xor
xor
adc
add
push
cmp
clc
jne
fwait
ljmp
add
xor
and
shlb
int
jns
xor
xchg
cs
mov
sahf
addl
cli
test
adc
push
jne
inc
sbb
inc
je
inc
fwait
add
mov
pop
add
or
pop
in
jmp
test
pop
das
xor
mov
sarl
popf
imul
in
repnz
xor
or
sub
push
mov
pop
add
ja
lret
mov
push
pop
add
jo
mov
inc
push
sub
enter
inc
sub
inc
pop
and
mov
xor
or
movl
xchg
jp
stos
fnstenv
mov
outsl
and
js
adc
mov
popf
xor
test
pop
jg
pop
in
xchg
outsl
mov
test
cmp
aad
data16
dec
scas
jb
or
add
fcmovu
pop
push
cmpsl
rcr
pop
xor
hlt
movb
add
repnz
adc
mov
dec
adc
add
aam
addl
sbb
movsl
test
mov
or
jge
pop
pop
loope
xor
and
pop
adc
add
lock
ret
cs
add
inc
mov
fsubrl
mov
rol
daa
mov
push
push
arpl
push
loope
mov
inc
or
jo
sbb
out
cmpsb
into
insb
int
or
mov
in
xchg
loopne
movsb
out
repz
mov
leave
adc
jecxz
mov
test
dec
lcall
xchg
sbb
add
adc
call
je
ss
jno
sbb
pop
ret
aam
inc
sbb
dec
inc
or
hlt
int
mov
fs
orb
addb
or
insl
loope
mov
ss
mov
jmp
aaa
jg
insb
xor
and
data16
add
add
mov
addr16
das
sar
aaa
aaa
dec
enter
inc
lds
mov
mov
test
xchg
xchg
xchg
hlt
in
or
xchg
loop
and
dec
sub
lods
ret
sti
adc
mov
fidivrl
xchg
mov
cld
jge
jae
adc
test
ficompl
imul
or
data16
int3
adc
loopne
stc
mov
loopne
xor
cltd
and
test
dec
inc
ss
ds
cltd
xchg
ds
imul
push
push
repz
subl
popa
aam
jo
pop
je
push
aad
sub
add
add
into
outsl
xchg
rolb
and
cmp
add
cmp
mov
lret
inc
test
adc
adc
sub
sbb
popf
fwait
mov
psrlw
mov
add
pop
xchg
fadds
insb
mov
sub
adc
jge
mov
mov
je
dec
fidivs
mov
fists
stos
in
jbe
push
jp
loop
fisubrs
add
sbb
lret
push
cs
adc
daa
ret
imul
jnp,pn
sub
xlat
fiadds
movsl
push
jle
xor
in
popa
cmp
dec
fstl
mov
cmpsb
jle
push
sti
adc
daa
add
or
fisubrs
ljmp
push
incb
or
outsl
das
mov
add
push
sub
je
add
ja
xchg
xchg
inc
inc
std
xor
gs
test
xchg
xchg
adc
push
inc
dec
jne
aaa
ljmp
popa
sbb
stc
jmp
mov
test
cltd
shlb
mov
in
fistpll
subb
test
cmp
sub
or
jl
divl
psubw
incb
push
and
jmp
shr
in
fistpll
adcl
fiaddl
pop
sbb
ss
xlat
loop
and
xchg
mov
mov
ds
pop
xchg
xor
insb
mov
mov
or
cli
xchg
testl
xor
xchg
and
mov
add
dec
xor
xorl
xchg
push
xor
jmp
cltd
jmp
pop
mov
and
std
xor
fnsave
dec
pmuludq
aaa
ret
lret
mov
mov
int
into
jp
pop
cmp
popf
fsubrs
shlb
lock
cmc
add
mov
dec
or
arpl
out
mov
pushl
loop
shlb
insl
inc
int
jecxz
dec
std
inc
stc
and
mov
int3
test
sahf
xor
fsubr
ret
jp
leave
cmp
in
and
cmp
jg
xchg
lret
jmp
or
adc
in
vprotw
mov
gs
sahf
mov
sarb
jbe
loop
sub
mov
add
imul
addr16
movsb
mov
sete
adcl
imul
or
repnz
xor
stos
insl
add
and
hlt
jb
adc
push
dec
push
std
addl
xor
and
add
cld
int
or
dec
in
loop
xor
sahf
xor
sbb
hlt
add
lods
hlt
add
push
add
in
stos
pop
icebp
xchg
and
jecxz
scas
sbbb
inc
fcompl
lods
icebp
jb
xchg
fmull
inc
inc
jne
and
int3
mov
cs
sarb
rorb
dec
shrb
loopne
push
pusha
sub
out
push
fstpl
dec
loopne
adc
loopne
into
adc
and
and
adc
inc
mov
fs
or
inc
sbb
mov
frstor
inc
pop
inc
mov
int3
sub
call
in
xlat
cmp
outsl
lret
pop
add
dec
imul
cs
sub
out
push
or
mov
insl
sbb
iret
or
repz
addr16
fwait
inc
ja
movsl
cmp
lea
dec
add
jb
xor
lds
push
cmp
mov
rcrl
jecxz
testl
loopne
neg
iret
mov
xlat
out
and
loopne
dec
pop
dec
fdivrl
dec
adc
int
addl
call
push
mov
call
jle
cmp
scas
add
cmp
pop
aas
fisubs
cld
mov
dec
hlt
neg
hlt
sbb
and
str
xchg
aas
lods
dec
test
sub
enter
cmp
lret
cmp
ljmp
lods
dec
add
and
enter
mov
ja
add
push
aam
cmp
ficoms
loopne
or
out
sbb
and
call
add
outsb
orl
js
push
or
inc
or
add
mov
push
push
or
fsubp
cmpsl
int3
and
aad
je
in
lods
out
jnp
clc
loopne
bound
dec
outsb
jl
push
pop
test
dec
xor
push
lahf
je
add
icebp
pop
adcl
pop
and
adc
enter
int3
sub
xor
int
mov
pop
sahf
dec
fcom
inc
fsubl
call
scas
arpl
cmp
inc
insb
loop
lea
push
addr16
add
sbb
inc
cltd
sbb
xor
xor
pop
outsb
mov
fildll
imul
aaa
sbb
and
push
lcall
orl
daa
sarb
ss
out
in
lea
icebp
aas
arpl
or
sub
ja
shll
sbb
test
or
and
mov
lret
xor
outsb
ret
int3
insl
mov
jne
inc
xchg
adc
lret
fcoml
ja
or
test
ret
rcrb
sbb
xor
ljmp
popf
cmc
push
and
insl
xor
xchg
add
es
negb
cs
dec
lods
aam
lds
mov
fadds
mov
or
xchg
inc
lock
push
adc
loop
leave
inc
jo
mov
push
push
arpl
sbb
or
scas
jl
mov
add
xchg
dec
inc
mov
add
imul
out
out
mov
add
fwait
dec
jecxz
jb
shl
or
getsec
adc
sbb
cmc
mov
ret
loope
out
test
pop
adc
popl
add
enter
sub
or
enter
push
jno
pop
push
jmp
push
mov
icebp
adc
dec
mov
xchg
push
popa
inc
push
lods
in
adc
cmp
mov
aaa
icebp
push
lret
test
xchg
fwait
sub
xrelease
out
cmp
loop
stos
lret
fsubr
mov
mov
test
lret
inc
adc
sarl
mov
push
sti
mov
and
cwtl
aam
cs
pop
cmp
xor
pop
test
shrl
les
dec
pop
xchg
push
mov
loope
xor
mov
in
cmp
jp
je
pop
pop
in
push
jns
cs
and
adcb
int
xchg
jns
repnz
xor
sub
jg
insl
sbb
cli
lods
ret
lods
or
or
out
cmpsb
mov
and
or
loopne
mov
pop
mov
sub
push
test
and
es
out
clc
lods
std
negb
lret
mov
xor
mov
insl
rclb
push
mov
inc
mov
rorb
jno
mov
cmp
addr16
shl
pop
xchg
mov
mov
add
push
out
fs
pop
clc
or
leave
inc
push
add
clc
decl
lahf
sbb
lods
test
clc
outsl
icebp
outsl
adc
xor
in
xchg
loope
sarl
in
dec
dec
add
mov
inc
popa
in
sub
lcall
dec
xor
imul
xchg
xchg
mov
inc
jo
pop
pop
mov
mov
bound
cmp
enter
ljmp
xor
addr16
int3
cmpsl
add
cmp
jg
pop
and
popa
dec
lahf
ret
cmpsl
outsl
mov
jo
adc
bound
sti
lea
adc
repz
and
push
mov
in
call
aam
nop
pop
dec
lds
cs
cmp
pop
xor
jge,pn
jmp
adc
cmc
jae
popa
mov
sahf
rcr
sub
xchg
sti
rorl
mov
movsl
test
push
adc
or
cli
cmp
cmp
xchg
dec
aad
loop
mov
lahf
inc
mov
fxch
sbb
mov
dec
std
or
and
sti
pop
cli
adc
dec
dec
mov
mov
lock
pushf
test
sub
addr16
mul
ljmp
mov
and
inc
xor
ret
in
ret
sbb
int
add
xchg
mov
cli
mov
aaa
int
popf
enter
sbb
mov
and
adc
inc
into
mov
sbb
orb
inc
mov
call
lahf
pop
inc
lea
push
popl
pop
in
insb
shlb
scas
loop
das
pop
ljmp
mov
insl
and
rol
cmpsb
sub
mov
mov
jl,pn
pop
hlt
push
int
push
test
push
cmpsb
addb
push
cli
inc
cld
sub
shr
fistps
mov
imul
addr16
fistl
je
outsl
std
aas
roll
xorb
inc
or
dec
fcmovnb
lcall
fdivs
inc
cmp
jo
loopne
inc
xor
out
into
cld
daa
sbb
loope
stos
jmp
or
mulb
dec
cmp
lods
sub
inc
das
lods
cmp
sbb
mov
lret
rol
outsl
mov
stos
dec
test
fsubrl
rol
xor
sub
jnp
mov
js
movsl
divb
ret
xorl
ljmp
imul
js
rolb
fs
pop
aad
fmull
add
hlt
js
mov
nop
rep
fbld
xor
nop
pop
push
shrb
push
pop
sub
jl
inc
xor
jae
lock
jecxz
out
and
or
ljmp
mov
loopne
push
sub
dec
test
ljmp
inc
ja
nop
and
bnd
daa
daa
adc
icebp
fdivrs
adc
scas
pop
incb
icebp
xor
push
insb
add
lds
adcl
mov
mov
xorb
cmp
xchg
call
ljmp
js
mov
jne
sbb
jb
push
pusha
mov
and
ret
pop
stc
insl
inc
loope
outsl
push
pop
add
mov
mov
sub
cld
cmp
nop
jl
xor
pop
sbb
mov
inc
cmpsb
rorb
inc
adc
sbb
insl
jne
incl
pop
xor
out
xor
pop
mov
ja
inc
mov
out
data16
inc
mov
mov
loop
sbb
inc
cmp
xor
bound
mov
lods
icebp
xor
popa
adc
mov
sbb
je
fmuls
movsb
ljmp
orb
push
sbb
icebp
ffreep
scas
leave
scas
loope
pop
cli
scas
cmpb
adcl
adc
sti
or
rclb
sarb
imul
dec
das
jno
jnp
and
outsb
jbe
or
mov
fwait
and
mov
jge
add
loopne
sub
cltd
inc
fcmovne
mov
mov
cwtl
add
mov
mov
lds
xlat
or
mov
add
add
inc
outsb
test
xor
push
jns
add
sub
mov
popa
inc
push
cmp
push
cmp
inc
jl
dec
nop
add
or
pcmpeqd
stc
shrl
clc
inc
and
sub
in
sbb
push
mov
fiadds
lods
or
outsb
mov
inc
ss
dec
insb
xor
jl
movsl
insl
stos
pop
adc
sar
mov
adc
movsl
jns
ja
fiadds
scas
ljmp
lret
jbe
lock
sub
inc
mov
add
sbb
xor
or
sub
movsb
push
pop
xlat
sub
mov
add
push
or
and
cwtl
popa
sub
jb
mov
inc
movsb
enter
or
call
push
add
stos
add
dec
or
push
xchg
arpl
data16
pop
push
cld
out
ret
imul
shll
add
jae
or
inc
xorl
adc
jnp
lock
add
adc
js
push
in
jbe
ljmp
aaa
push
fldcw
aad
lock
daa
push
jmp
fistpll
sbb
fld
or
or
out
adc
mov
pop
imul
lahf
mov
mov
pop
in
mov
inc
fcomp
jno
test
jne
dec
sbbl
sub
mov
in
xor
xchg
loop
cwtl
sub
fists
push
jp
add
sub
jb
jo
adc
inc
xor
add
dec
int
inc
add
or
push
ja
jae
int
subb
sbb
mov
and
and
js
xor
mov
pop
or
pop
mov
roll
scas
mov
and
push
fcoml
cld
fldenv
mov
pop
in
pop
xor
nop
imul
fcomps
xchg
dec
add
jle
jge
push
inc
and
fucomi
push
cmpsb
testb
dec
jg
shlb
cmp
push
add
lcall
jo
int3
faddl
inc
int3
rcr
mov
in
call
push
sbb
inc
cmpsb
mov
cmp
bndldx
jbe
jle
add
loope
pushf
les
dec
adc
icebp
daa
push
rcll
dec
mov
pop
mov
dec
mov
inc
push
les
or
sub
outsl
testb
jge
sub
jecxz
jge
lds
push
add
inc
push
dec
enter
ror
xor
mov
ret
sarl
insl
xor
inc
daa
mov
inc
or
adc
sbb
dec
pop
mov
movsb
aas
dec
adc
outsb
jb
sbb
xlat
enter
add
inc
dec
je
mov
mov
add
lea
push
lock
invd
repnz
push
enter
inc
in
sbb
mov
xchg
cld
xor
das
inc
inc
sbb
push
add
xor
lret
add
icebp
xor
jle
out
xor
add
xor
and
loopne
arpl
and
sub
cwtl
rcr
imul
mov
loopne
aad
sub
rcll
call
sbb
and
pop
into
and
cmpsl
pushf
inc
and
je
and
pop
fs
jmp
adc
mov
jae
daa
dec
packsswb
je
js
sbb
call
mov
jmp
pop
insl
fidivl
mov
stos
mov
mov
xlat
js
or
push
mov
test
sahf
pop
stos
pop
enter
jecxz
mov
loopne
push
xchg
or
sub
mov
add
cld
cmp
cld
notl
jb
ss
ljmp
repnz
ljmp
scas
sub
dec
sbbb
dec
push
aaa
loope
add
fs
test
aaa
adc
xor
mov
inc
and
mov
mov
sub
les
addr16
clc
push
add
clc
fwait
push
out
imul
movsl
lret
ljmp
jb
jo
es
insl
mov
or
mov
out
xchg
jae
repnz
sbb
cld
add
inc
or
imulb
and
ljmp
aam
inc
push
push
aam
aas
loop
cltd
add
xor
push
fistps
ficompl
or
int
orb
xor
enter
fistpl
and
addb
out
mov
dec
cmpsb
out
add
mov
sub
in
adc
vmaxpd
mov
sub
sub
add
xchg
push
addr16
xor
jno
or
dec
adc
sti
mov
dec
xor
aam
adc
notb
cmpl
or
inc
fst
fwait
cmpsl
jge
adc
mov
jmp
out
add
popa
stos
cmp
out
sub
or
shrl
cmp
or
pop
xchg
cmp
jo
add
sbb
loope
sbb
pop
icebp
jmp
sbb
popa
dec
pop
fmuls
and
mov
cltd
addl
int3
mov
add
test
ret
fdivrp
xor
and
popf
jecxz
and
inc
adc
and
lock
lds
adc
lods
aam
inc
adc
sub
fiadds
mov
sbb
push
orb
cltd
push
xor
add
push
push
push
mov
jnp
jmp
or
and
fldenv
sbb
push
and
adc
cmp
mov
and
ret
jbe
outsl
mul
sub
inc
imul
and
xchg
test
xor
sub
aad
add
ret
inc
cs
addl
jge
repnz
imul
fidivl
push
mov
gs
sbb
shl
enter
cmp
clc
mov
dec
xor
jmp
add
fsubl
pushf
jne
repnz
push
or
or
and
bound
and
pop
mov
sub
out
push
rcll
ret
xor
cmp
scas
lods
sub
das
push
icebp
pop
mov
aas
jmp
add
push
aas
lret
sub
and
xchg
fmull
mov
cwtl
movb
clc
lods
cmpsl
mov
pop
jg
ljmp
xor
jmp
lea
and
mov
les
lea
cs
dec
cwtl
mov
pop
push
or
xorl
pop
xchg
into
pop
mov
cmp
sub
and
sub
xlat
push
je
scas
fiaddl
mov
imul
jo
mov
mov
mov
pop
inc
lret
mov
jne
in
loop
lock
mov
pop
fiaddl
gs
in
jmp
es
nop
and
inc
sub
push
imul
adc
daa
cmp
dec
add
add
push
aaa
fsubrl
fnstsw
lock
jg
fistpl
adc
icebp
mov
cmp
clc
add
adc
mov
dec
mov
sub
hlt
mov
jns
mov
pop
lcall
sub
shll
loope
psllw
push
mov
sbb
sbb
inc
divb
fnsave
add
jae
mov
jbe
sbb
test
fwait
xlat
lods
push
pop
add
jp
push
fisubl
jmp
dec
sbb
mov
fwait
out
adc
mov
sar
call
push
int
mov
xchg
adc
mov
and
pop
jl
cmp
cmp
cld
aas
mov
push
loop
popf
push
insl
mov
stos
inc
dec
sub
or
pop
mov
jmp
push
inc
xor
loop
inc
jo
aam
cli
fistpll
and
push
loope
out
sbb
testb
sub
mov
add
adc
fdivr
or
inc
in
add
dec
fs
ret
pop
pop
xchg
call
frstor
insb
sbb
mov
add
or
popf
xchg
inc
or
pushf
mov
nop
out
jnp
iret
jmp
push
test
push
std
incl
sbb
xchg
add
and
pop
js
fisttpl
rorb
cmpsb
into
mov
sbb
pop
call
ss
repz
pushf
dec
push
es
cmc
add
fwait
xor
mov
adc
and
xchg
inc
lods
and
sar
outsl
scas
sbb
xchg
loop
xchg
imul
addb
push
push
nop
outsl
ljmp
jbe
xchg
je
mov
test
mov
cmpsb
mov
into
out
dec
mov
adc
jmp
dec
push
iret
xor
push
cmp
call
in
inc
cld
sbb
andb
out
push
mov
ret
mov
mov
add
inc
cmp
push
add
pop
sti
or
imul
movsb
and
push
fwait
mov
rorl
jns
addr16
mov
cs
inc
mov
rclb
or
pop
dec
add
or
shlb
push
fistpll
dec
jg
inc
in
xchg
push
inc
jbe
and
rcrl
les
xchg
mov
sahf
dec
adc
fadds
adc
or
mov
push
inc
sarl
popf
push
test
cs
sub
lods
les
leave
cli
inc
pusha
sbb
xchg
test
add
fnstenv
ljmp
inc
icebp
icebp
mov
push
lock
jg
adc
bound
imul
sarl
mov
xor
push
rcrl
mov
adc
dec
or
mov
pushf
idivb
call
enter
pushf
add
add
addr16
int3
dec
test
and
push
push
xor
insb
sahf
or
inc
negb
xor
iret
cmp
negl
insb
popf
outsb
stos
cltd
addb
mov
bound
mov
add
xchg
arpl
clc
pop
cld
and
dec
push
push
sbb
test
loopne
out
test
mov
xor
insb
push
les
lcall
or
mov
pop
test
push
lods
out
jo
aad
xchg
xchg
icebp
inc
insl
stos
xor
xorb
mull
outsl
in
out
repz
in
fidivs
rolb
rorb
push
mov
aaa
sbb
andl
add
repz
fildl
or
sub
push
and
idivb
lea
fstp
mov
int
push
sub
das
mov
mov
inc
xor
jecxz
mov
addb
add
push
js
mov
mov
aas
sbbb
mov
movsl
call
pop
fiaddl
or
sbb
inc
fdiv
scas
and
sub
and
fcoms
sub
add
js
ja
mov
icebp
test
out
mov
push
aam
dec
xor
jb
mov
jo
cmc
or
adc
clc
and
fbld
xchg
outsb
fcmovne
dec
xor
loop
push
push
push
or
inc
out
jb
repnz
pop
xchg
sar
sbb
and
les
inc
push
dec
push
lret
mov
cmpsb
push
sti
sub
es
sbbl
mov
fisttps
xlat
mov
das
sar
pop
or
jl
das
cli
mov
lret
mov
mov
subb
pop
incl
loop
decb
xchg
and
sub
push
and
rolw
mov
mov
mov
add
pop
and
adc
mov
cltd
pop
fstpt
outsl
dec
out
mov
enter
scas
push
jbe
jp
sub
mov
pop
frstor
cltd
push
dec
and
pop
mov
mov
sbbb
and
lods
jle
cmpsb
stos
and
addr16
cmp
pop
push
push
cmp
push
inc
popa
mov
frstor
jo
es
jo
dec
js
push
inc
dec
loopne
add
andl
adc
push
pop
mov
test
adc
jns
rcrb
fisubl
mov
cmp
pop
sub
adc
popl
fyl2x
inc
sti
push
cmp
sbb
sar
jg
pushf
mov
or
add
lods
jbe
push
cmp
mov
or
je
and
adc
cmp
mov
loope
mov
adc
and
sbb
mov
xchg
add
out
movsb
sbb
jecxz
dec
loopne
insl
add
js
xchg
outsl
clc
sbb
xor
mov
test
jg
loopne
jecxz
js
shll
into
rcr
mov
add
mov
dec
into
test
mov
orb
mov
loopne
in
sub
gs
pop
jg
test
jb
popa
gs
pusha
inc
and
xor
andb
push
subl
notl
pop
inc
and
stos
add
adc
clc
iret
xor
mov
aam
adc
sbb
ret
les
inc
xchg
mov
neg
in
or
dec
push
jmp
ficoms
sti
xor
adc
pop
fisubs
mov
shll
fcmovnu
push
cmpsl
idiv
add
cltd
push
cmp
mov
mov
push
and
leave
dec
pop
call
sti
stc
mov
and
adc
cwtl
adc
dec
push
add
in
testb
jecxz
add
lock
nop
aad
andb
rclb
aaa
xchg
in
out
scas
add
shll
and
mov
push
pop
add
ret
mov
bound
aam
fdivs
or
mov
adc
mov
rclb
xor
add
dec
sarl
pop
lock
add
pop
adcl
rcll
call
and
inc
jle
sub
cmc
jns
jl
push
lea
cmp
mov
cli
sbb
jne
adc
inc
cmc
inc
push
jg
sbb
aaa
andl
and
xchg
and
mov
xlat
and
dec
add
call
jb
jns
cmp
outsl
fwait
jnp
shrl
es
lcall
or
push
loope
add
aaa
cld
pusha
push
and
pop
sbb
sbb
not
and
push
and
xor
sbb
add
pushf
andl
mov
popl
cwtl
orl
pop
xchg
xchg
mov
cmp
arpl
aas
sbb
and
sbb
popa
outsl
or
fwait
in
test
sub
pushfw
xchg
fbstp
or
jp
inc
mov
xor
sbb
ja
sbb
xchg
les
jl
hlt
or
xchg
fidivs
push
mov
push
enter
in
xchg
jo
mov
mov
and
push
pop
popa
push
mov
es
sub
icebp
test
sbb
sti
out
sbb
sbb
or
shl
stc
lea
ud1
xor
mov
mov
jae
add
arpl
xchg
js
jbe
adc
jb
movsl
cwtl
popa
push
addb
xchg
sub
push
sahf
shlb
sub
call
outsl
pop
mov
test
ja
rcrb
cmp
aaa
test
mov
mov
hlt
and
jmp
test
add
je
add
lock
mov
inc
repnz
or
or
decb
cwtl
jne
test
pushf
dec
jne
popf
fcompl
cmp
dec
mov
xchg
es
add
loopne
in
adc
add
add
mov
xchg
insb
mov
dec
pop
add
jge
cmpsb
cmp
jge
and
add
ficompl
mov
ds
sbb
movsl
lahf
movsb
fiadds
mov
push
pop
ret
mov
and
adc
jmp
shl
scas
or
dec
cmc
test
jae
pusha
adc
rorb
inc
push
add
gs
out
enter
loope
call
mov
cmc
or
loop
push
mov
xor
add
lcall
inc
rcrl
pop
and
lcall
sub
lret
fsts
and
cmp
mov
sub
sub
aaa
sbb
push
sbb
adc
mov
arpl
hlt
in
adcb
cmp
add
adc
pop
inc
out
bound
fisubl
sbb
sahf
or
mov
insl
test
out
incb
orb
fdivl
xor
pop
add
ret
xor
hlt
pop
lcall
xlat
aad
inc
sub
mov
add
fidivrs
mov
cmp
sbb
pop
dec
in
or
fsubl
dec
fisttpll
pop
mulb
pop
xchg
sti
xchg
sub
rcrb
or
xlat
jl
adc
jmp
xchg
inc
and
out
hlt
lcall
add
sbb
lods
les
and
sbb
push
mov
in
or
mov
sub
push
or
mov
or
int3
sarl
pop
test
push
out
fnsave
or
dec
pop
shll
pop
test
je
cwtl
enter
icebp
mov
mov
sbb
jae
xchg
sbb
in
faddl
cwtl
add
adc
jae
dec
sub
mov
mov
in
aad
fimull
movsl
add
dec
push
xchg
orb
jnp
or
pop
rcr
mov
cmp
mov
lret
shl
sbb
jae
mov
inc
dec
sub
arpl
xor
mov
cld
out
adc
mov
sbb
pop
jl
inc
adc
inc
cltd
dec
cmp
mov
icebp
cmp
fcomi
idivb
push
add
xchg
int
xor
fidivrs
ja
sub
xor
out
or
sub
loope
or
daa
movntps
sbb
fdivrs
push
xchg
mov
adc
add
sub
inc
pop
std
clc
sub
repnz
into
insl
adc
incl
or
pop
enter
int
sti
ss
les
rcrb
push
in
push
sar
push
add
aam
adc
repnz
push
ljmp
push
std
roll
mov
in
sbb
mov
xchg
inc
inc
inc
ljmp
je
or
jmp
xchg
fwait
xchg
out
hlt
add
stos
popa
fisttpl
xor
call
test
in
nop
jbe
call
gs
xchg
adc
loop
xor
mov
arpl
add
nop
sub
jae
jnp
add
outsb
xchg
xor
mov
rcrl
add
adc
loope
popa
add
fistpl
mov
int3
mov
sbb
cli
ljmp
test
cs
pop
vmovddup
mov
cltd
pop
std
rcr
and
outsl
clc
in
les
nop
pop
inc
sub
xor
rcl
mov
xchg
repnz
lahf
pop
pop
add
adc
xor
in
arpl
lret
mov
xchg
mov
pop
lods
add
mov
or
sub
lcall
fdivrl
lret
sub
orb
ret
lds
add
push
test
cmp
push
decl
call
jmp
cmp
push
cmp
clc
inc
mov
jne
add
out
or
cltd
xchg
into
jb
movsb
mov
lods
sbb
cmp
push
fsubrl
mov
in
push
cmpsl
cltd
icebp
inc
arpl
dec
pushf
add
insl
jge
xor
mov
xchg
out
pop
jp
xor
cmpsb
jbe
in
jp
sub
and
cltd
mov
cs
shrl
lret
sbb
add
push
test
or
loop
int3
incb
add
cli
pop
sub
xchg
pop
push
adc
fwait
hlt
test
fs
adc
and
std
loope
add
lock
fisubs
sub
or
ds
adc
cmpsb
sti
inc
jmp
fildl
adc
and
dec
push
gs
repz
sub
scas
stos
pop
push
mov
xchg
add
imul
aad
dec
cmp
ljmp
out
cmpsb
outsb
popf
pop
nop
jo
out
je
and
sbb
sub
sbb
pop
push
int3
mov
call
mov
push
in
or
mov
cmp
push
or
pushf
ljmp
popf
sub
test
jl
mov
mov
or
out
add
call
push
aas
enter
inc
call
daa
or
shlb
mov
lock
mov
push
pop
loopne
sti
inc
ret
movsb
and
cwtl
int3
sub
add
out
fucom
push
fwait
cmp
test
sub
xchg
stos
lods
test
rolb
lahf
mov
add
aam
scas
xor
mov
hlt
pusha
xchg
daa
fmull
fwait
sub
inc
mov
aas
int
pop
stc
addr16
xchg
loope
ret
sub
out
rolb
dec
add
sbb
daa
rorb
adc
dec
insb
adc
js
test
cmp
shlb
cmp
pop
adc
push
sbb
test
insb
stos
push
xor
add
inc
xor
jb
or
jg
pop
int
shll
ds
xlat
cmp
push
ljmp
inc
jecxz
stos
add
pop
push
xor
aam
adc
rorl
push
sbb
fistpl
pop
pop
push
scas
xor
out
pop
popa
push
xchg
adc
lock
in
inc
add
push
loopne
pop
mov
push
fs
ret
mov
scas
push
add
sub
mov
inc
insl
andb
xchg
xor
add
sbb
loope
jb
mov
jo
push
mov
push
mov
and
fbstp
jae
pop
mov
jmp
sbb
pop
inc
fbstp
cli
ds
into
dec
arpl
scas
jge
adc
cmp
je
pop
shrl
push
inc
pop
push
std
sub
arpl
sbbb
pop
negl
push
aam
es
push
add
adc
test
jae
add
addr16
add
dec
add
scas
rolb
pop
adc
mov
stos
sbb
test
ret
movsb
addr16
mov
xor
sbb
inc
add
cmp
dec
addb
loop
aas
out
fsts
dec
xor
lds
rolb
mov
mov
mov
and
dec
adc
shlb
pop
leave
adc
pop
pushf
loope
inc
scas
rorb
jno
sbb
repnz
pushf
ds
div
hlt
shlb
dec
pop
lcall
rolb
loopne
rorl
cmp
inc
mov
in
call
fisttpll
outsb
mov
pop
sbb
test
imul
adc
sarl
ljmp
lret
test
shrl
and
movb
push
lock
fxch
sar
xchg
dec
fwait
xor
mov
pop
clc
rcr
sub
and
xor
pusha
xor
adc
cmc
decl
xor
rorb
imul
roll
and
xchg
shr
push
mov
inc
push
fisubl
cmpsb
arpl
shl
outsl
inc
fsubrl
inc
movsl
sbb
and
pop
faddl
sbb
mov
in
out
and
add
call
add
pusha
mov
add
pop
sub
pop
sarb
mov
je
inc
push
adc
out
mov
movsb
mov
add
xor
in
jg
flds
sbb
sub
shlb
jb
xchg
fistl
outsl
sbb
lods
cmc
icebp
inc
and
sub
shlb
incl
jnp
adc
and
add
in
lcall
imul
inc
xchg
xlat
mov
sbb
repz
or
mov
push
push
sbb
xor
idivb
aas
xchg
pop
jp
mov
sub
xor
adc
in
je
in
lcall
gs
mov
jle
nop
inc
je
les
dec
test
in
or
jb
push
addr16
hlt
hlt
push
test
in
pushl
inc
sub
mov
sbb
mov
mov
cs
ret
or
js
mov
pop
sbb
push
cmp
or
pop
inc
js
outsl
fwait
jg
lret
ja
arpl
adc
mov
push
add
clc
ret
sar
cmp
adc
js
pop
xchg
xchg
aas
in
ret
mov
stc
bound
dec
icebp
xchg
jnp
xchg
adc
pop
sub
mov
ret
inc
test
xchg
int
xchg
xor
das
test
push
icebp
cmp
add
adc
inc
out
jmp
shr
push
inc
bound
imul
cld
shr
outsb
pop
push
sbb
std
jle
mov
insb
aaa
stc
inc
dec
sub
add
jb
push
rorl
fwait
or
add
jno
xor
add
icebp
lds
lods
push
test
sbb
push
not
pushf
xchg
scas
pop
jmp
mov
or
push
filds
arpl
faddl
aam
out
divl
jecxz
or
push
cmp
test
movl
inc
popf
arpl
loopne
ljmp
fcmovnu
test
addps
mov
xchg
sbb
mov
sbb
ds
mov
stos
inc
rcrl
and
push
and
call
pop
outsl
cmp
fs
mov
adc
ficomps
or
mov
pop
xchg
or
inc
xchg
mov
cld
adc
add
hlt
adc
out
ds
jo
add
xor
sbb
xor
cwtl
and
mov
in
jbe
mov
fsub
add
mov
fs
js
fildll
sbb
dec
xchg
push
pop
push
sub
xchg
outsb
outsl
push
test
and
cmp
xor
xor
sbb
mov
adc
adc
dec
jmp
mov
fdivrs
popa
mov
and
lods
fistl
add
adc
cmp
xchg
cmp
fidivs
gs
bound
pusha
add
push
inc
insl
jbe
cmpsl
add
push
adc
push
stos
cmc
outsl
adc
inc
fmul
dec
xchg
dec
mov
das
enter
jmp
clc
mov
insb
mov
cmpsb
adc
adc
test
js
cmp
jle
mov
pop
fcmovu
mov
and
xlat
mov
xchg
ret
sub
test
imul
mov
repnz
repz
push
clc
lods
pusha
mov
pushf
into
mov
rcll
aad
fldt
add
inc
sbb
push
jl
dec
pop
xor
sub
outsl
fcmovnbe
scas
lods
aad
shll
jo
fwait
add
mov
icebp
adc
jbe
js
pop
ficompl
adc
dec
and
mov
and
mov
shll
inc
dec
cmp
jge
pop
subb
stc
and
sbb
int3
xchg
repnz
sbb
mov
mov
jp
dec
adc
sbb
mov
aam
cld
out
push
mov
aaa
in
leave
les
gs
stos
out
je
dec
addl
out
cmpsl
mov
fcomps
lea
mov
fisubl
mov
call
push
jmp
loopne
xchg
movl
mov
push
jl
lods
jle
add
out
add
inc
pop
lea
bound
mov
subl
mov
inc
inc
hlt
lods
xchg
outsb
jg
aad
out
push
ficoml
lock
push
push
and
mov
das
push
sbb
push
inc
popf
ljmp
insl
mov
push
push
loopne
add
out
lock
cmpb
in
lods
push
out
cltd
mov
test
imul
cmp
mov
jb
loope
aad
pop
xor
sbb
mov
pop
push
pop
cld
jecxz
adc
fistl
rol
mov
div
dec
fmull
test
decl
out
ret
pop
test
mov
test
inc
idivb
sahf
ds
jmp
add
cltd
jle
and
popa
add
out
dec
outsl
jg
dec
stos
mov
inc
mov
outsb
cmp
clc
jno
fildl
outsb
push
stos
into
in
and
pop
push
aam
lock
test
scas
sar
fists
xor
sbbb
jecxz
loopne
int
xorb
mov
shll
loope
jbe
xor
bound
dec
das
imul
inc
ja
clc
adc
xchg
jg
xchg
mov
cmp
mov
cmp
jl
mov
push
push
mov
xor
out
push
pop
dec
in
pop
mov
mov
movsl
dec
pop
push
or
xchg
je
mov
aas
adc
adc
xchg
int3
or
cld
lahf
imul
xor
aaa
jbe
fs
lahf
push
adc
push
push
lock
sub
cmp
adc
inc
jbe
xlat
outsl
sub
push
pop
out
jecxz
jo
or
mov
push
pop
inc
mov
or
insl
imul
sub
shlb
adc
das
sub
sbb
push
pop
ret
or
lock
inc
push
xchg
mov
mov
pop
jge
mov
and
shr
and
movsl
sbb
sahf
inc
ljmp
imul
arpl
jg
jbe
ss
pop
je
sahf
adc
in
inc
sbb
sub
imul
jmp
je
pop
or
push
pop
cmp
sub
imull
xchg
lea
dec
jae
jl
outsl
aaa
icebp
std
icebp
movsl
pop
lea
mov
and
rcr
leave
popa
daa
call
lahf
icebp
pop
outsl
mov
test
fadds
out
push
mov
aad
movsb
stos
loopne
imul
push
add
adc
lea
fnstcw
push
icebp
cmpsb
mov
out
add
lock
test
lcall
lret
shlb
sbb
sub
push
cmp
add
jle
popf
rorl
and
lret
pop
mov
cld
jmp
and
jnp
mov
shrb
sbb
lcall
xchg
adc
ss
mov
in
ret
add
mov
push
and
inc
es
lock
or
push
dec
xchg
jg
lock
add
out
add
les
loopne
int3
adc
in
pop
sbb
fs
xor
loope
mov
das
std
outsl
lcall
push
inc
push
push
pop
sbb
mov
xchg
push
das
sbb
js
sbb
outsl
xchg
jg
add
mov
daa
addr16
or
addr16
dec
inc
xchg
mov
cmp
aaa
jmp
icebp
xor
xor
out
inc
std
add
cmp
mov
ret
lods
lods
ljmp
sti
or
std
ljmp
add
clc
daa
mov
mov
push
notb
mov
dec
movntps
ret
pop
mov
outsl
in
adcl
mov
xor
ds
in
mov
mov
movsl
push
mov
lock
jne
pop
pop
mov
inc
mov
mov
in
mov
out
push
out
xchg
or
xchg
push
inc
movsb
xor
sbb
push
incb
shll
cld
jo
scas
mov
lds
xchg
mov
sbb
pop
sbb
int
std
or
adc
sbbl
mov
out
push
pop
gs
test
ljmp
hlt
in
push
pop
add
or
test
xorl
test
call
or
mov
popf
std
jg
sbb
inc
das
pop
cmp
in
or
cmc
divb
aam
mov
mov
imul
nop
and
mov
inc
hlt
mov
inc
push
mov
sub
pop
mov
or
mov
std
pushaw
mov
push
jae
mov
loop
add
pop
popf
mov
pusha
mov
call
nop
dec
add
je
mov
inc
pop
jp
xor
loope
adc
cwtl
adc
adc
xchg
test
cld
fld
rcl
lds
jmp
inc
jge
call
jecxz
mov
shrb
mov
mov
add
jge
int3
add
sub
rorl
cltd
inc
jge
and
outsl
jl
clc
sub
fidivs
setbe
mov
jmp
jno
xor
and
test
mov
fwait
clc
mov
les
push
cwtl
pusha
pop
and
or
aad
daa
fisubs
mov
inc
out
add
xor
dec
and
fstl
call
lahf
xchg
js
sbb
and
jl
cmpl
xchg
icebp
and
negb
mov
push
loopne
fadd
cmp
sbb
mov
out
lcall
add
cmp
jmp
push
rorb
fwait
cmc
cmp
inc
pop
jle
nop
mov
insb
and
popa
arpl
mov
mov
sarl
aaa
mov
adc
xchg
cmp
scas
cmpsb
pop
bound
pop
mov
add
or
dec
ljmp
shll
popf
test
outsl
insl
fiadds
xchg
add
testb
or
in
sbbb
mov
jbe
lahf
adc
and
mov
testb
insb
inc
cmp
sti
lcall
or
inc
add
mov
jns
pop
xor
fisubl
xor
cmp
popf
xor
lds
lock
xorl
mov
or
add
sbb
pop
sbb
stos
and
pop
loop
imul
xlat
jg
mov
iret
pop
mov
jns
imul
add
shll
push
mov
adc
jmp
and
call
in
jecxz
icebp
test
push
mov
enter
xor
sahf
call
loopne
mov
add
sbb
xchg
sub
cmpb
inc
sub
push
push
add
aam
jno
xor
ljmp
push
hlt
addb
cmp
push
inc
xchg
loop
mov
outsb
or
jbe
mov
or
loopne
adc
sub
shr
fldenv
and
test
jo
or
enter
mov
inc
popf
lea
xchg
jge
add
adc
and
rcrb
mov
not
cmp
and
sub
push
rcr
jno
ss
xor
push
adc
pop
cmp
pop
sbb
loop
mov
add
pop
add
ret
and
je
inc
jl
pusha
mov
sub
add
cmpsb
lahf
or
subb
or
jmp
and
mov
add
shrb
rcll
xchg
mov
cli
or
mov
call
and
ret
fwait
adc
or
add
and
dec
cltd
cmc
and
popa
inc
sbb
add
stc
fistpl
adc
mov
adcl
rcr
imul
push
add
lods
out
add
stos
mov
xor
add
hlt
push
daa
add
pextrw
lds
or
xchg
sbb
pop
pop
dec
sub
jbe
andb
xor
jge
repnz
sub
stos
pusha
rclb
popw
mov
stc
in
or
sbb
xor
lea
rorb
sbb
jmp
or
adc
sub
mov
adc
sub
int
inc
xor
test
xorl
jbe
add
mov
sub
xchg
rorb
out
or
push
cmp
jmp
pusha
cwtl
push
cmp
or
dec
int
es
xchg
jb
popa
ret
pop
int
jl
inc
or
fisttpl
sub
push
or
inc
mov
add
push
rolb
ds
push
or
scas
sbb
add
add
push
clc
adc
les
push
xchg
ljmp
dec
aas
mov
stos
inc
jae
pop
imul
es
add
sbb
adc
jecxz
sahf
xchg
filds
das
ljmp
fisttpll
mov
cmp
movsl
aam
add
or
lods
orl
and
xchg
add
aam
xor
shrl
aam
fsubr
out
dec
push
push
sub
jle
mov
or
outsl
mov
cld
adc
scas
scas
jle
push
testl
movsl
adc
and
mov
cmp
push
or
les
pop
loop
xchg
mov
push
mov
xchg
leave
push
out
fbld
mov
sbb
daa
mov
pop
adc
push
mov
fnstcw
nop
cs
iret
add
sbb
cli
jg
inc
and
popf
inc
dec
xor
aad
inc
call
push
shrl
aaa
clc
add
sub
pop
mov
xor
andb
bound
lret
notb
sbb
inc
insb
gs
shll
fs
fmulp
mov
sbb
mov
pop
jbe
pop
pop
int3
adc
stos
and
adc
shll
cltd
pop
test
and
addr16
fstps
add
shlb
xchg
pushf
mov
icebp
jg
and
sbb
decb
push
call
repnz
stc
es
xor
imul
hlt
jmp
fdivrl
jg
mov
pop
je
push
test
cmp
lahf
bound
push
movsl
fisttps
pushl
inc
xchg
mov
jg
ljmp
xchg
sbb
adc
push
mov
cmp
push
std
push
mov
lcall
pop
stos
sarl
push
dec
aas
cmc
or
movsb
movq
imul
dec
or
jmp
pop
fldt
mov
adc
or
mov
and
rclb
xchg
adc
pop
pushl
dec
pop
pusha
push
dec
xor
mov
xchg
sub
cli
or
scas
das
das
fwait
sub
push
xchg
sub
rorl
cld
xchg
xor
mov
mov
stc
sbb
adc
out
or
xor
push
add
ljmp
insb
orb
ret
add
subb
fstpl
mov
xchg
imul
add
sbb
lret
dec
inc
adc
out
xchg
arpl
push
mov
fcoml
mov
mov
push
xor
adc
cli
pop
outsl
lcall
ret
fiadds
sub
add
adc
lahf
xor
movsl
test
xor
nop
sub
cmp
loope
pushl
test
out
lods
sbb
cmpsl
shlb
lret
mov
inc
push
or
out
jne
and
test
mov
xlat
xchg
xchg
fdivs
adc
push
rol
cmp
inc
dec
outsb
in
inc
aam
xchg
pop
repnz
out
pushf
pop
xchg
jne
scas
ljmp
or
cmp
rcrl
fsubrp
ja
cs
sub
adc
rcrb
sbb
sti
bound
lods
mov
mov
test
mov
jbe
push
push
or
loopne
mov
call
push
xor
sbb
out
std
fnstcw
jge
mov
fstpl
data16
ljmp
rol
rcrb
mov
mov
mov
cmp
mov
add
adcb
cmp
shlb
iret
cmpsb
ljmp
push
or
into
mov
cwtl
xor
or
inc
loopne
clc
test
mov
sar
outsb
and
ja
pusha
jno
in
and
or
andl
jmp
and
mov
outsl
push
or
pop
or
test
fistl
or
sub
xor
clc
cli
arpl
movl
adc
jnp
mov
fwait
mov
mov
test
pop
cmpb
inc
pop
jnp
mov
std
stc
das
mov
pop
ret
lock
andb
sti
jnp
cmp
lcall
loopne
lahf
push
cmp
inc
sbb
xchg
nop
xchg
lock
jo
addl
and
pop
mov
pop
imul
cld
sbb
cmp
push
mov
test
jg
cmc
and
push
mov
adc
and
or
out
fidivrs
sbb
add
pop
mov
dec
adc
or
cs
nop
ss
cs
in
add
clc
shlb
pushl
xor
dec
aaa
dec
jmp
fwait
mov
sub
dec
adc
shlb
clc
aaa
cld
inc
add
inc
sub
popa
shlb
cld
aaa
pop
push
push
jp
mov
add
sti
push
xor
mov
add
and
mov
std
mov
das
lods
jae
xchg
pop
cli
mov
dec
mov
or
jmp
aad
jo
idiv
sbb
shrl
sbb
dec
jg
dec
icebp
outsb
pop
popa
dec
subl
outsl
mov
fadds
xor
and
add
mov
pop
cs
inc
outsl
lods
inc
xchg
sub
mov
push
sti
inc
test
popf
xchg
and
shrl
incl
bound
mov
loopne
pop
call
adc
jmp
outsl
pop
outsb
xor
xchg
cmp
mov
das
mov
js
mov
int3
push
xchg
xchg
aad
jbe
pop
mov
iret
jbe
pop
test
xor
ficompl
insb
xchg
or
aam
sub
punpckhdq
jp
loope
pop
or
xor
aad
jg
add
mov
sbb
adc
cmp
dec
jne
pop
mov
inc
int3
test
jg
jg
cli
call
sub
popa
call
fistps
push
inc
jg
test
jne
xlat
add
add
jle
push
je
enter
icebp
mov
sub
into
and
scas
dec
xor
add
inc
fldt
jmp
aas
push
call
ficoml
cmp
out
cs
mov
aad
out
or
mov
mov
or
adc
cmp
movsl
lods
ljmp
xchg
xor
adc
dec
pop
scas
mov
mov
jle
outsl
loop
mov
out
jbe
enter
inc
or
add
pop
loop
inc
ds
xchg
mov
fldt
mov
js
push
or
push
mov
mov
inc
lds
push
adc
pop
cli
cmp
xor
popf
sbb
into
lock
xor
pop
stos
mov
lea
pop
push
insb
push
mov
lahf
jg
loopne
or
or
roll
cs
iret
jg
bt
cmpsb
cmp
jae
mov
ja
call
add
inc
gs
dec
loop
outsl
sbb
out
pop
xor
and
mov
adc
add
divl
dec
push
movsl
xor
or
data16
xchg
in
jge
cs
movsb
imul
mov
jecxz
xchg
repnz
inc
cmp
jbe
sbb
insl
mov
push
nop
stc
daa
mov
ror
and
outsl
sbb
faddl
adc
shlb
sahf
dec
and
jbe,pt
add
scas
ss
push
pop
loopne
call
out
in
inc
xchg
and
pushl
loop
sahf
jnp
push
mov
ja
sbb
and
fadd
cmpsb
adc
jnp
and
shrb
mov
test
mov
xchg
test
pusha
popa
jmp
mov
jecxz
mov
jb
pop
push
movb
addr16
idiv
lcall
enter
cmp
xlat
lret
fwait
imul
and
mov
fsubp
adc
lds
cld
jne
mov
inc
xchg
loopne
ja
add
mov
mov
xchg
mov
testb
arpl
aas
push
nop
push
cld
cwtl
add
fcoml
stc
cmc
adc
push
hlt
pop
testb
out
dec
pop
and
fcoml
mov
sbb
lcall
js
in
or
mov
stc
xchg
adcb
les
jg
mov
hlt
xchg
or
push
mov
mov
adc
dec
jnp
outsl
pop
or
xchg
inc
pop
xor
movsb
inc
mov
leave
jne
pop
adc
add
leave
movsb
inc
push
out
ss
adc
scas
mov
rolb
fstp
stos
pop
add
mov
xchg
pusha
lds
mov
push
icebp
or
push
inc
enter
adc
or
adc
fsubrs
and
test
popf
adcb
jns
or
pop
mov
stos
ret
icebp
insl
jmp
in
or
cmp
mov
lea
adc
adc
add
lea
and
jo
clc
or
or
pop
adc
ret
rolb
mov
test
aaa
dec
sbb
sbb
push
orb
dec
ret
mov
mov
std
jg
mov
cmpl
jnp
inc
dec
cmp
les
mov
pop
pop
xchg
or
fldt
incl
out
xchg
scas
push
cli
jge
mov
xchg
ja
fnsave
pushl
jb
sbb
clc
adc
pop
movsl
mov
loop
imulb
mov
jo
pushf
mov
pop
js
mov
scas
and
scas
fsubrl
push
sub
mov
call
dec
or
mov
push
call
fnstsw
outsl
and
icebp
test
xchg
adc
jmp
mov
xor
xchg
scas
and
pop
or
test
dec
and
cmp
lods
mov
push
bswap
fs
add
push
test
hlt
and
adc
ret
cld
adc
pop
add
inc
sar
cmovg
testl
fcomps
test
test
or
jnp
aaa
xor
pop
add
push
das
arpl
fnstsw
in
loopne
mov
push
dec
std
add
jecxz
test
pop
mov
jne
aas
xchg
lock
leave
rolb
xchg
inc
ss
mov
adc
addr16
pop
sti
fldt
push
sbb
and
and
xor
push
cmp
or
cwtl
sahf
lock
nop
or
lcall
inc
aas
jbe
jnp
popa
mov
jmp
xchg
sub
sti
mov
into
lods
sub
push
inc
xlat
mov
pop
and
jg
mov
xchg
and
ret
or
loope
and
xchg
insl
rclb
push
cmp
js
jg
loop
push
add
mov
lret
ds
negb
shlb
jg
lods
adc
lahf
push
js
or
out
or
jbe
sbb
pop
cmp
fcmovb
jmp
lds
sub
js
sub
add
popa
fcmovu
fcmovb
or
mov
cmc
sub
flds
mov
push
std
xor
daa
imul
pop
or
and
aad
shrb
into
ficoms
call
push
mov
jg
ret
fldt
and
sbb
mov
inc
bound
mov
out
imul
icebp
push
inc
addb
mov
orb
push
loopne
imul
es
xlat
inc
mov
push
std
dec
jl
out
cmpsl
mov
inc
push
loope
outsl
mov
stos
sub
popa
sbb
sahf
push
dec
inc
lcall
pop
mov
mov
adc
or
mov
bound
xchg
sub
xor
in
es
lods
adc
popa
add
cli
jbe
loopne
mov
sbb
jo
jle
aaa
push
mov
pop
outsl
inc
sbb
std
outsl
sub
pushf
inc
out
fistpll
sub
push
aad
xor
nop
test
repnz
jnp
loope
pop
dec
inc
jge
fmulp
cld
xor
cmp
divb
cs
movsl
mov
push
jge
dec
cwtl
and
cltd
andl
lcall
and
scas
adc
ljmp
or
or
jno
mov
inc
shl
movb
add
roll
cmpsl
shr
clc
dec
mov
je
sub
mov
mov
repnz
push
or
push
outsb
rcrb
mov
cmp
addb
fsubrs
addr16
int
dec
pop
int
shrl
sub
cmpsl
jl
add
jp
clc
jmp
and
std
mov
and
pusha
push
hlt
or
and
add
outsb
outsl
out
mov
insb
fists
dec
adc
push
xor
aam
cmpsl
and
movl
nop
cmpb
push
repnz
imul
pop
pop
ret
sbb
call
sbb
enter
pop
push
inc
ficomps
or
dec
or
adc
pop
lds
subb
xor
mov
sub
popa
call
sahf
xorl
addr16
or
or
lret
andb
cld
popf
popa
pop
jno
push
sub
int3
adc
cmp
movsl
mov
cmp
mov
testb
inc
adc
adc
or
daa
andl
cmp
stos
dec
shrl
mov
xor
add
and
adc
cmc
les
push
adc
inc
xchg
jge
pop
mov
mov
push
xor
sarb
loopne
shll
dec
adc
mov
and
push
push
xlat
adc
stos
and
das
testl
xor
cwtl
rep
fs
adc
icebp
push
push
jae
lods
sub
sbb
lods
and
jge
adc
add
call
sub
or
das
mov
loopne
adc
fisttpl
or
xchg
xlat
push
mull
and
adc
lcall
in
stos
andb
xor
leave
mov
and
sbb
movsl
cmpsb
popl
mov
mov
add
sub
xor
fdivrl
cli
jge
aad
nop
insl
mov
std
xchg
ja
fwait
push
lret
je
rolb
mov
mov
in
jne
mov
andl
sbb
mov
in
cmpsl
call
cli
cmp
mov
sub
nop
rep
xchg
clc
push
dec
scas
lahf
andl
cmpsl
jp
mov
push
jge
daa
pop
inc
push
xor
mov
mov
rolb
add
cwtl
lods
ljmp
jge
and
and
jle
ss
lcall
les
jle
shl
inc
and
jg
incl
add
and
test
jmp
pusha
dec
outsb
jmp
mov
xchg
mov
cmp
std
pop
sbb
adc
clc
ja
lahf
pusha
cmpsb
out
fdivrp
ja
or
cmp
sarl
or
push
mov
mov
stos
popa
jge
add
push
dec
out
or
out
sub
jbe
or
daa
bound
pusha
push
xchg
sub
fcmovnbe
pop
cmpsl
imul
stc
in
stos
inc
fistpll
jno
sub
loopne
adc
filds
pop
mov
dec
adc
and
adc
pop
or
icebp
les
mov
sbb
test
or
cld
popa
or
inc
push
inc
cmc
add
pushl
dec
andb
fiaddl
into
cmc
adc
shrl
popa
cli
mov
into
mov
hlt
mov
xor
loop
add
aas
xor
mov
imul
sbb
xchg
add
pop
out
add
adc
sbb
clc
aas
pusha
inc
and
bound
loopne
jp
pop
insl
ja
xor
mov
cmpsl
mov
cmp
sub
xor
mov
add
nop
xchg
pop
nop
popf
jmp
add
bound
mov
xor
loope
jno
in
and
push
dec
pushf
lock
adc
jp
roll
inc
in
in
xlat
sbb
cs
outsb
adcb
aaa
adc
jb
int
sub
insb
cmpsb
or
pop
jne
and
cmp
lods
cwtl
mov
jg
shll
int
push
adc
aaa
out
mov
adc
mov
add
xlat
cld
in
add
cmp
shll
mov
mov
lock
in
dec
sub
and
cmp
imul
push
xchg
mov
rolb
jo
loopne
xchg
or
sub
cmpb
insl
cltd
nop
xchg
xchg
add
adc
inc
mov
fadd
xor
push
add
es
test
add
data16
popf
push
shr
sbb
hlt
adc
pusha
push
fists
jmp
add
push
in
xchg
add
sbbl
mov
out
mov
xchg
lods
fldenv
lcall
adc
adc
add
lods
stos
inc
ds
cld
push
lahf
push
loope
adc
fcmovnb
mov
stos
subl
xchg
push
sbb
xor
pop
loopne
cli
out
add
or
out
mov
push
lods
outsl
xchg
ss
fucomi
addr16
fsubr
call
jg
inc
and
repnz
add
loopne
test
adc
and
outsb
daa
aas
dec
int3
fildll
xlat
call
incl
data16
push
pop
inc
and
pop
call
adc
sbb
cmp
mov
mov
xchg
sub
aad
jbe
jge
xlat
push
or
fidivrs
loopne
enter
cli
xor
mov
xchg
cs
jo
lea
in
test
xchg
cmc
in
hlt
mov
mov
es
jae
add
adc
mov
cmp
mov
mov
pop
inc
inc
out
into
sti
jnp
test
aas
mov
xchg
or
out
sbbb
hlt
dec
sub
fcompl
aam
adc
cli
cmp
add
pop
and
lock
sti
push
adc
addr16
icebp
pop
inc
pop
jmp
and
aad
arpl
repz
out
dec
and
push
pop
cmp
das
leave
push
rolb
cli
pop
add
or
cmp
insl
shlb
daa
sub
ja
fdivrp
mov
adc
dec
in
xchg
jge
sbb
push
cwtl
les
dec
movsb
pop
mov
cwtl
rcrl
sti
fcoml
in
mov
scas
fbstp
jl
xchg
push
and
jnp
ljmp
ficoml
idivl
push
scas
sbb
inc
mov
stc
in
insb
clc
push
lock
cmp
das
rcll
and
sbb
fwait
and
adc
fcom
ds
loopne
jmp
mov
push
inc
shll
insl
inc
pop
movsb
rorb
scas
xlat
adc
jle
inc
push
inc
les
jmp
movsl
lahf
mov
and
adc
push
xchg
dec
jne
movsl
and
sub
mov
js
push
leave
out
ss
popa
pop
clc
test
inc
bound
add
xor
subb
in
mov
dec
fs
xor
mov
push
xor
mov
push
movsl
test
jmp
test
mov
iret
daa
movsb
pop
push
nop
adc
outsl
or
insb
sub
cltd
lahf
cmpsl
cltd
inc
scas
mov
aad
cmp
cli
aad
mov
push
jbe
sub
test
stos
push
adc
jp
jo
loop
out
mov
adc
lret
sbb
push
insb
mov
push
xchg
test
fistl
push
push
fdivp
mov
and
sbb
lods
sbb
jmp
add
cwtl
xor
popa
mov
andl
lds
cltd
push
add
lds
in
add
jp
mov
pop
ja
adc
out
add
into
movsl
sti
sub
das
fsubl
in
aad
jp
enter
insl
insb
sub
pop
add
hlt
sub
sbb
popa
mov
adc
inc
xor
or
jg
and
rep
xlat
test
loopne
stos
scas
std
xchg
addr16
jge
outsl
adc
xor
stc
push
pusha
loope
cs
daa
loope
mov
lock
inc
outsl
lds
call
cmp
and
pop
mov
in
xchg
cltd
sub
sti
je
jp
ficompl
ja
je
mov
loop
fcmovnu
lods
dec
inc
lock
add
sbbb
in
out
jo
xor
pop
jne
shl
data16
icebp
cwtl
call
decl
pushf
jge
pushf
adc
xchg
jae
sbb
fadd
popf
inc
dec
cmp
js
outsl
fdivr
sub
jnp
xchg
lret
jne
frstor
jnp
fucomp
pop
xor
and
or
les
cmp
iret
data16
jns
xchg
stc
cmp
jecxz
loop
inc
bound
inc
pop
divb
hlt
sbb
adc
sarl
ds
loopne
xchg
xchg
outsl
adcb
js
dec
lods
ret
add
pop
repnz
push
xchg
sub
push
les
fwait
orb
pushf
cmp
push
insb
scas
scas
stos
xchg
jbe
cs
ficoms
mov
pop
pushf
and
mov
hlt
stos
push
mov
call
mov
sub
fdivl
clc
mov
imul
inc
xchg
rcrl
mov
lock
jbe
push
add
mov
or
daa
jp
pop
jne
outsb
jecxz
daa
arpl
cmp
int
inc
xchg
ljmp
xchg
pop
add
cmp
xchg
xor
out
pusha
inc
adc
popa
ficoml
jmp
or
or
jecxz
mov
sub
and
lds
testl
loopne
cmp
add
cmc
adc
xor
sub
mov
jecxz
cmc
jae
call
mov
cs
mov
sbb
push
xchg
ds
add
mov
stos
pop
hlt
sub
cmp
or
xor
ror
xor
test
clc
xor
mov
fcompl
sbb
and
pop
jbe
jae
and
push
outsb
loopne
push
out
cmc
dec
add
mov
push
sub
xchg
in
inc
mov
inc
dec
mov
add
out
das
add
shr
pushf
cmpsl
and
fcomp
js
int3
adc
add
mov
sbb
cli
jnp
fnstcw
jnp
add
jnp
inc
and
xchg
aas
xchg
inc
lock
into
xor
xchg
stos
mov
or
pop
xchg
pop
adc
add
sub
jo
xchg
inc
add
shrl
sub
xor
add
jp
jo
pop
jo
in
mov
leave
add
insl
or
fwait
mov
pop
add
add
inc
and
je
or
fistpl
mov
dec
push
or
sbb
sbbb
mov
cmp
insl
ret
icebp
dec
xchg
and
inc
cmpl
cmpsb
dec
sti
arpl
lock
mov
jne
ss
cs
pop
int
inc
leave
pop
leave
add
inc
mov
or
cld
or
orb
jle,pn
mov
mov
test
faddp
push
push
lds
sti
aam
adc
adcb
fnstcw
rolb
shl
popf
sub
fs
popf
add
stos
lret
sbb
shlb
sub
mov
add
xor
cmp
mov
push
adc
mov
cmc
pop
out
dec
or
test
xor
and
mov
ja
in
jge
scas
stos
loopne
mov
add
and
stos
or
or
andb
pop
adc
xorl
jo
pop
pop
fists
pushl
sbb
scas
mov
xor
pop
movsb
sub
jne,pt
sbb
inc
jmp
shlb
mov
pop
imul
lods
mov
dec
adc
dec
js
rorl
shr
cmpsb
shlb
push
fidivrs
adc
popa
mov
test
push
jmp
mov
std
pop
jge
shlb
cld
rolb
int3
push
orl
push
pop
jb
mov
js
mov
popf
xlat
ljmp
jge
xchg
inc
in
inc
inc
sub
fldt
lods
loop
mov
cmp
or
call
aam
jecxz
ljmp
fmull
mov
das
fwait
test
pop
xor
lahf
stos
pop
std
popf
add
movsb
fstp
push
call
xchg
jg
sub
mov
testb
push
cmp
sti
ret
outsl
popa
cmp
sbb
cmc
sbb
mov
out
push
inc
dec
xor
psubq
outsb
sub
dec
mov
sbb
inc
and
mov
lock
push
out
adc
std
or
fsubrp
inc
lods
adc
lea
pushl
inc
pushf
mov
mov
or
cs
addr16
nop
popf
lods
shr
test
sbb
jmp
dec
or
mov
decl
es
xchg
sub
cmp
enter
fdiv
jg
jmp
dec
push
test
adc
jo
fwait
dec
faddp
in
pop
enter
movb
dec
pop
clc
out
xchg
mov
and
fldl
xor
pop
jno
mov
rcrl
nop
sbb
aad
inc
add
push
mov
mov
mov
mov
inc
xlat
push
aam
lods
sub
sbb
jne
or
lock
jl
mov
call
dec
adc
fcompl
push
xchg
inc
pop
lock
sub
inc
les
bound
push
mov
loope
insb
subb
add
ja
sbb
adc
mov
data16
pop
push
shlb
jnp
pop
out
push
out
add
imul
loopne
and
jbe
jg
mov
xchg
sub
dec
sbb
inc
std
cmp
mov
enter
adc
mov
push
push
iret
inc
inc
xchg
push
inc
fmull
inc
push
nop
rolb
cwtl
jmp
shrl
mov
sbb
subb
or
jb
ja
mov
and
dec
aad
xor
xchg
call
mov
je
add
in
jle
add
lahf
mov
push
aas
imulb
mov
addb
orl
out
int
cld
pop
ja
xchg
mov
lock
test
lds
mov
inc
pop
fimuls
aaa
popf
cmpsb
sub
es
pop
add
clc
stc
int3
js
iret
test
fsubrs
sahf
and
rorl
mul
in
jg
cwtl
add
rcrl
inc
adc
push
push
jae
jg
and
roll
rcrb
pop
fcoml
repnz
mov
xor
jp
adc
ficomps
sahf
rorl
or
add
add
add
pop
call
cs
andl
add
andb
mov
push
or
add
test
faddl
loopne
jnp
push
rorl
push
xchg
test
xor
cmp
add
lea
fwait
rcrb
dec
pop
adc
dec
int3
and
xlat
rolb
je
sbb
aad
mov
push
out
jmp
add
inc
aaa
das
filds
out
push
adcb
add
and
sbb
jns
inc
aad
adc
notb
sub
cmp
dec
jge
insb
adc
pop
cmp
mov
call
and
insl
fsubr
jl
enter
lds
mov
and
ss
hlt
dec
test
push
fimuls
or
mov
scas
popa
mov
test
int
cmp
add
mov
or
add
cmp
sti
hlt
pop
push
testl
mov
aam
cwtl
mov
add
sbb
stos
sahf
mov
xor
mov
add
add
push
inc
out
add
or
jp
pop
aaa
enter
xor
sbb
gs
cmp
iret
inc
xchg
das
jnp
mov
aam
sbb
mov
or
or
fdivp
sub
fidivrs
or
int
lret
imul
aam
or
out
int
mov
ds
mov
push
aam
pop
call
pop
inc
aam
cmpsb
subb
fadd
or
add
dec
aam
lcall
push
ss
dec
cltd
into
mov
das
cmpsl
sub
cs
xchg
push
orb
push
add
lret
ds
adc
and
sub
pop
dec
jns
mul
mov
mov
add
aam
out
cli
out
js
in
push
cld
out
inc
test
mov
cld
sub
jmp
jecxz
ficompl
inc
call
fnsave
mov
push
dec
mov
loope
loope
movsl
repz
and
xchg
call
lcall
jb
mov
push
pop
xor
pop
mov
dec
mov
push
xor
adc
loop
xchg
loopne
andb
cmpl
adcb
pop
scas
or
and
shll
cltd
sbb
cmpsl
fcompl
inc
push
gs
and
adc
sbb
outsl
jae
push
cli
or
add
and
out
sub
aad
jne
in
push
push
inc
mov
xor
pop
std
inc
pop
out
in
push
into
test
rcrl
lea
add
jmp
sbb
mov
mov
mov
xchg
loopne
adc
cmpb
bound
sbb
pop
sub
fmul
jl
dec
clc
pop
js
into
sub
push
mov
and
cli
in
into
les
cmp
jnp
dec
lods
pop
add
fcomip
stos
les
mov
inc
inc
mov
and
mov
insl
out
sbb
je
stos
sbb
mov
push
ss
daa
xchg
inc
mov
inc
popf
scas
imul
and
ret
cmp
add
fdivrl
mov
pop
mov
mov
cmpsl
pushl
loop
mov
mov
cmpsb
inc
fldt
orl
sbb
cld
shll
outsl
hlt
and
and
mov
sbb
pop
cld
jge
ret
movsb
sub
sbb
dec
je
add
test
out
mov
pop
mov
push
xor
popa
pop
add
add
in
or
lahf
aad
outsl
cmp
sbb
mov
adc
xchg
mov
outsl
fsts
cmpb
stos
inc
and
push
test
jecxz
inc
insb
add
mov
inc
push
cmc
mov
sub
fistl
xor
sbb
in
push
dec
xor
fwait
and
jbe
popa
idiv
jmp
push
jg
fildl
xor
sarb
xor
int3
shl
add
mov
std
pop
pop
ficoms
mov
add
movsl
pop
sub
lea
clc
aaa
outsl
imul
iret
dec
aam
in
pop
movsl
jnp
and
sub
push
adc
jb
std
pushl
sub
test
sti
lods
shlb
shlb
sub
mov
sub
xchg
movsl
pop
xor
divb
mov
sub
pop
or
std
hlt
add
cmp
add
inc
int3
sbb
ror
pop
gs
and
add
mov
adc
lea
sub
sbb
mov
inc
and
sti
sbb
adc
les
imul
pop
pop
xor
int3
and
shr
xor
pop
mov
dec
std
push
out
rolb
imul
sar
push
add
push
xor
data16
call
jno
mov
bound
addr16
mov
xor
in
push
lret
cmp
mov
ret
loopne
shrl
in
xchg
mov
and
fimull
lds
mov
inc
adc
pop
pop
sarl
mov
xchg
mov
bound
add
pop
xchg
xor
jnp
aaa
shrl
cwtl
and
push
xor
pextrw
scas
fisttpl
rorl
rcll
clc
test
clc
outsl
les
and
inc
test
mov
or
out
out
mov
jl
sub
test
push
xchg
lods
in
dec
ja,pt
out
or
inc
cmpb
add
lahf
adc
and
mov
and
lock
loop
out
ljmp
jmp
dec
adc
jg
add
les
sbb
cmp
jmp
sbb
or
test
aad
xchg
sub
add
js
imul
lock
sbb
mov
mov
xor
fiaddl
inc
add
ffreep
sbb
icebp
push
std
test
orl
ret
outsb
mov
jge
movsb
cwtl
pop
mov
cwtl
jmp
add
xchg
add
mov
mov
fidivrs
hlt
dec
push
sub
lcall
and
cli
or
xchg
ficompl
and
xchg
xchg
pop
push
push
lods
mov
fdivr
mov
push
stc
scas
scas
dec
sbbl
mov
aaa
xlat
aad
jae
mov
and
adc
daa
xor
jge
and
and
das
inc
inc
mov
ja
dec
testb
dec
jle
std
pop
lds
fs
sub
jmp
arpl
fsubr
cwtl
pop
mov
pop
std
add
push
test
dec
shrl
pop
sbb
test
mov
ljmp
sbb
mov
push
ja
fwait
outsl
insb
test
sbb
add
push
cwtl
js
pop
pop
sub
adc
sbb
mov
ret
mov
lret
xor
mov
arpl
inc
dec
std
mov
pop
xor
sub
rclb
mov
rclb
cmp
std
movsl
dec
flds
mov
outsl
je
out
js
test
outsl
das
lock
test
lods
add
or
sbb
filds
sbb
shlb
dec
add
cli
das
das
aad
cmpsb
clc
dec
pop
stos
or
pop
std
jecxz
xor
or
sbb
jo
loope
mulb
sbb
sub
insl
sbb
sbb
xlat
mov
pushl
or
inc
or
shrl
add
cmp
or
inc
push
fnstcw
lcall
jg
addb
mov
or
push
cmpb
cmpl
pop
outsl
jae
push
es
incb
dec
jl
and
popf
jno
icebp
push
mov
out
or
add
add
out
popf
shl
push
clc
mov
movsl
loopne
jae
mov
mov
mov
mov
mov
jne
and
sub
bnd
mov
outsb
outsb
dec
mov
mov
mov
rcrb
mov
adc
xor
xchg
leave
fstpt
ja
adc
gs
mov
mov
sub
mov
or
add
enter
sub
dec
xor
mulps
loop
mov
inc
les
push
adc
ja
loope
jl
inc
out
push
xor
dec
aam
loopne
daa
push
dec
imul
and
subb
push
and
sbb
leave
jo
ret
sarb
add
loop
cli
aad
outsl
sbb
xlat
jl
das
mov
fs
push
adc
sub
arpl
mov
rol
adc
jbe
ret
mov
push
inc
es
mov
sbb
sub
lret
les
rcr
loop
mov
sub
loop
shll
pop
push
xor
pop
sbb
std
in
dec
enter
adc
rorb
adc
inc
flds
test
cmp
xor
dec
ret
icebp
dec
adc
stos
aad
adc
outsl
std
add
sub
dec
xchg
insb
es
xor
test
int
push
adc
lahf
add
add
mov
jge
and
add
add
andb
adc
xor
out
inc
jne
xchg
adc
pop
and
lea
nop
inc
nop
dec
pop
and
hlt
insb
pushf
sbb
or
mov
inc
pushf
lret
dec
aaa
lods
xor
sub
lret
adc
sub
cpuid
fmulp
add
adcb
push
roll
or
sub
call
xor
test
add
push
andb
adc
and
jae
add
sbbl
loop
rcl
fldcw
mov
and
adc
jnp
mov
or
fcoml
int
fmuls
fwait
cmc
push
push
mov
xchg
jbe
clc
mull
iret
fildll
xor
pop
les
sahf
test
les
sbb
jmp
jge
and
xchg
push
mov
add
loope
fcoms
push
daa
repz
movsb
mov
cs
ja
xor
cs
add
gs
pop
sbb
aas
inc
adc
iret
loopne
mov
inc
or
xor
scas
pop
push
cmp
loop
sub
data16
test
cmpsl
mov
repz
or
mov
cmp
pop
andl
xchg
or
sub
sarb
sbb
enter
sub
sar
fnstenv
cmp
add
lds
call
xor
and
lret
or
or
jp
andl
and
loopne
loope
xor
loop
add
add
pop
or
sub
sahf
or
or
mov
cmp
or
or
icebp
or
je
jne
stos
in
call
dec
dec
push
push
shll
xor
dec
ficomps
aam
scas
push
aam
pop
dec
pop
mov
stos
pusha
or
pop
cmp
inc
sbb
adc
fmul
cmpb
lcall
outsl
xchg
sub
cmpsb
dec
add
adc
daa
sarb
mov
inc
call
repnz
lock
or
icebp
lea
mov
add
push
loopne
pop
gs
sub
aam
fwait
xor
adc
mov
mov
or
dec
js
xchg
test
sbb
jne
or
mov
sub
jg
xorb
cmp
sti
inc
fimuls
pushf
xchg
in
adc
xor
pusha
push
push
push
dec
cmp
bound
aam
sbb
xchg
pop
push
scas
sub
xor
adc
fwait
adc
cld
cmp
or
sbbl
mov
sti
out
push
shl
adc
mov
popa
lcall
push
mov
ljmp
add
or
nop
mov
pop
sub
and
cmp
sub
sbb
or
push
pop
mov
push
xor
subb
in
icebp
and
and
lock
inc
mov
test
ret
xor
mov
lods
ret
mov
xchg
outsl
loopne
cmpsb
in
std
inc
aam
cmp
push
out
int3
ljmp
sub
mov
push
decb
imul
adc
mov
pop
xrelease
adc
fadd
rorb
and
xor
pop
cld
ret
mov
test
pop
add
push
lea
repz
test
pusha
outsb
sbbb
push
add
and
mov
negb
push
jno
pop
fmulp
add
cmp
mov
jo
sbb
fistpll
out
enter
lock
fcompl
inc
loope
mov
sarb
fnstcw
pop
xchg
inc
sarl
icebp
fucomp
sbb
pop
mov
test
inc
mov
incb
pop
mov
mov
pop
sub
fcomip
cltd
mov
lret
jbe
pop
adc
pusha
sub
loope
xor
cmp
xchg
fcmovnu
mov
jo
add
cmp
pop
mov
cmp
adc
pop
jge
call
pushf
mov
push
insl
push
repz
clc
call
cmp
xchg
bound
aas
and
aam
das
aad
movsb
jp
push
add
xor
ds
cmpsl
lss
sarb
test
mull
ret
jno
mov
adc
pushl
lcall
or
leave
subb
aam
out
jns
adc
xorb
sub
shl
movsl
mov
cltd
dec
das
jmp
inc
movsb
pop
push
cs
or
pop
jno
sbb
repnz
mov
cmpsb
xchg
adc
jbe
mov
pusha
or
rcr
int3
jmp
mov
shrb
adc
xor
decb
rolb
fsubs
and
nop
dec
fstpt
push
jle
push
gs
or
je
cs
inc
jbe
pop
or
jns
ljmp
arpl
and
dec
sbb
outsl
lcall
cmpsl
lock
push
pop
in
xor
cwtl
cli
pop
frstor
mov
and
or
sbb
mov
loope
push
hlt
scas
ss
dec
out
test
loop
scas
cwtl
xchg
jmp
dec
pop
ljmp
cli
shll
pop
push
jbe
cs
adc
sub
pop
and
mov
pop
xchg
scas
andb
std
adc
insb
cmc
jae
sub
rorb
test
mov
shrl
push
and
sar
jg
sbb
popf
bound
sub
stc
outsl
pop
jbe
ds
ss
and
push
add
lods
mov
pop
add
sub
lret
popa
leave
test
add
loope
mov
push
xor
incl
xor
push
in
inc
nop
loop
mov
mov
test
pushf
cs
inc
outsl
lret
sub
mov
mov
sbb
push
ljmp
sbbb
jb
leave
jecxz
push
arpl
std
fcmovnu
dec
mov
and
cltd
bound
pop
sbb
inc
push
mov
insl
mov
xchg
sub
pop
mov
sar
jl
jp
orb
jg
mov
xor
or
in
jecxz
mov
and
imul
or
lock
jle
sbb
dec
push
fsts
scas
inc
ds
cs
stos
imul
fcomps
aam
dec
ljmp
fucomp
xchg
call
rcll
or
xor
cmc
xlat
mov
adc
addb
dec
sub
inc
movsb
testl
jg
cmpb
imul
push
ror
jo
fwait
jb
and
adc
test
cmp
outsl
mov
arpl
push
cmp
fmuls
or
pop
aas
orb
mov
cmpsb
rorl
pop
push
icebp
mov
adc
mov
mov
fistps
mov
mov
xchg
sbb
dec
mov
mov
inc
in
scas
and
mov
rcrb
cmpsl
jb
fldl
cmp
lret
stos
or
fs
mov
lds
pop
pop
pop
loopne
lret
adc
pop
fnop
xor
call
movsb
idivb
mov
mov
dec
add
mov
mov
insb
ret
movsb
xchg
jg
mov
sbb
mov
aam
lock
loop
sarb
pop
insb
sub
mov
pop
shll
repnz
push
adcl
lret
rorb
lcall
add
jb
and
dec
jecxz
out
lock
adc
shrl
les
add
int3
xor
xor
mov
inc
pop
mov
nop
sbb
sub
and
lahf
hlt
cmp
mov
inc
in
push
loope
xlat
sub
and
fidivrl
fiadds
pop
in
mov
sti
gs
or
add
mov
aas
call
jg
lret
stc
adc
jle
xchg
lahf
or
fildll
sub
and
or
push
mov
mov
aas
imul
inc
jmp
pop
mov
push
mov
std
push
mov
shrl
mov
adc
or
mov
cmpsl
jg
xor
mov
or
inc
mov
loope
sbb
fiaddl
pop
add
mov
rcrb
andb
push
lods
mov
js
inc
xlat
mov
add
and
clc
pop
lods
das
lock
mov
les
or
pop
jecxz
inc
hlt
adc
cmp
pop
adc
dec
lahf
inc
cmp
outsl
jae,pt
fcomps
add
mov
rcrl
mov
adc
push
jp
or
sbb
cs
cmp
adc
xchg
add
push
vsubsd
fisubrs
or
or
inc
sub
mov
loop
cmp
push
es
ss
or
push
inc
add
mov
sub
ret
mov
mov
imul
cmc
add
push
das
fcompl
sub
cmpsb
mov
pop
sbb
inc
std
xchg
das
inc
push
and
test
ret
div
and
jb
je,pn
rorl
and
xchg
loope
jns
icebp
push
int
xorb
xchg
loope
in
movb
adc
add
push
out
lock
jns
mov
cmp
push
cli
inc
rorl
movq
push
mov
insb
divb
das
xchg
test
popa
stc
nop
js
and
xorb
mov
xchg
mov
lret
ds
dec
xor
pusha
pop
cmp
xchg
std
pop
out
sbb
inc
ss
pop
jmp
push
add
or
mov
and
sbb
loop
mov
cmp
add
aas
jns
or
pop
or
cltd
push
or
mov
and
push
inc
adc
fcmovnu
je
jns
inc
or
push
cmp
mov
ljmp
lods
popf
add
cmp
sub
das
popf
adc
jg
cmc
mov
jnp
nop
clc
fnstenv
movsl
inc
mov
mov
push
stos
inc
cmp
sub
xchg
imul
xlat
adc
push
mov
pushf
imul
dec
call
sbb
push
push
pop
cwtl
inc
aas
jo
outsl
jmp
jb
stc
sbb
mov
unpckhps
add
clc
fwait
push
arpl
pop
adc
pop
fstpt
test
push
lcall
adc
fnstsw
imul
mov
test
addr16
ss
xlat
stc
mov
dec
dec
sub
lods
add
adc
aad
in
jb
movsb
mov
jg
fbstp
sbb
loop
ret
incb
sti
sbb
push
or
push
add
adc
sbb
ljmp
jne
sbb
cmc
add
inc
out
loop
test
movsl
mov
dec
push
enter
mov
insb
add
dec
jmp
jo
add
repz
xchg
loopne
fcoms
add
adc
call
js
es
push
cmpsb
or
shr
out
push
inc
sbb
ret
aas
pop
cmp
cmp
adc
stos
xor
xchg
outsl
pop
pushl
mov
jle
mov
movsb
inc
or
cmpsb
fwait
mov
imul
in
mov
add
push
sbb
inc
incl
dec
orl
icebp
rclb
mov
cmp
pushl
call
cmc
mov
leave
mov
sarb
xor
sbb
pop
test
push
imul
inc
loopne
jb
sbb
pop
pop
stc
das
pop
fmull
mov
das
and
pop
test
arpl
cmc
cmp
test
inc
push
incl
sub
mull
fdivr
notb
popa
ja
and
cmp
dec
pop
mov
movsl
cmp
scas
hlt
jp
clc
fwait
lcall
sub
mov
mov
test
stc
mov
pop
add
jg
shrl
add
je
add
out
out
or
rcrb
cs
xchg
mov
pop
jns
ljmp
and
adc
inc
add
pop
sub
clc
push
shr
idivl
mov
fsubl
mov
testb
adc
adcl
ret
inc
aad
dec
ficompl
icebp
push
pop
inc
js
mov
shrb
repnz
push
iret
dec
cmp
mov
xor
xorl
std
imul
test
or
add
clc
push
xchg
fwait
loopne
das
push
cmp
fisubs
xchg
push
xchg
sub
aad
mov
jo
pavgw
pop
mov
mov
xor
sahf
shlb
mov
mov
into
cli
or
data16
push
cmp
lcall
mov
inc
test
mov
nop
and
jg
fwait
mov
push
inc
jb
dec
sub
adc
mov
xor
jmp
jnp
lods
mov
push
imul
leave
xchg
push
in
mov
imul
sub
out
dec
cmpsb
jl
jbe
jb
jbe
push
sbbl
adc
daa
enter
testb
cmc
mov
jge
pushf
pop
cs
and
call
add
mov
lret
call
in
mov
adc
xchg
mov
pop
mov
push
mov
fdivrl
nop
in
dec
inc
mov
pop
push
xadd
shl
jmp
insl
movsb
add
mov
push
idivb
dec
mov
inc
cltd
pop
lret
test
add
lcall
stos
jle
or
imul
cmp
mov
mov
inc
adc
mov
push
pop
sbb
pop
dec
xor
sbb
fsubs
inc
aas
dec
jo
jge
rolb
add
add
or
add
cli
push
add
pop
mov
sub
in
cmp
or
sar
ljmp
fisubrl
mov
iret
add
rcrb
inc
jg
outsl
push
cmp
mov
sbb
not
dec
inc
shlb
movsb
mov
sbb
hlt
jns
js
sbb
add
xor
loopne
push
xor
in
inc
inc
xor
mov
subb
mov
add
or
lods
sub
int3
js
adc
fcompl
mov
lret
add
es
add
inc
add
xor
dec
and
push
aaa
sti
push
cwtl
enter
fs
roll
rclb
mov
test
add
push
std
xchg
add
mov
addr16
cwtl
sub
rcrb
into
add
xor
add
andb
lds
sbb
ljmp
fmuls
bound
nop
mov
ds
mul
add
mov
cmp
adc
push
inc
addl
call
icebp
jae
cld
lock
and
inc
movsb
pop
out
loopne
lock
fs
les
adcb
xor
mov
faddl
or
lods
clc
xor
test
dec
adc
adc
xchg
int3
iret
cmp
inc
jl
ds
mov
xor
jb
das
out
popa
subb
aaa
addr16
sbb
popl
cmp
or
jae
inc
lea
or
scas
and
imul
ficoml
xchg
cmp
int3
lea
push
cmc
add
fwait
out
and
lock
push
mov
add
pop
xor
aaa
ljmp
jl
ja
rolb
sub
mov
fidivrl
aam
and
or
jmp
xor
shlb
jl
sbb
push
lret
inc
jge
xor
iret
inc
xchg
jle
clc
roll
mov
ss
lcall
rorl
cs
int3
sarl
sarb
int
add
jo
adc
adc
push
xor
xor
xor
dec
push
xchg
and
push
sbb
pop
and
outsb
imul
add
mov
dec
fwait
bound
fiaddl
int
out
sub
fdivl
shl
adc
sub
jno
or
mov
out
xorb
jp
push
mov
and
cmp
scas
pushf
fs
in
out
push
add
out
sub
test
mov
xor
mov
xor
nop
nop
xchg
loop
test
imul
pop
push
jl
xor
jne
mov
adc
daa
push
loopne
outsb
push
sub
pop
or
test
shrl
iret
orb
sbb
sbb
push
test
fsubrp
or
sub
scas
and
push
pop
pusha
or
imul
popa
lea
inc
adc
mov
sbbb
in
adc
cltd
xchg
mov
iret
outsb
stos
xchg
and
sub
jl
push
jp
jl
addr16
lods
enter
fisubs
xchg
jmp
sahf
mov
repz
sbb
pop
mov
adc
pop
loop
fisubl
xchg
push
xchg
or
outsl
lock
pop
icebp
mov
arpl
xor
jnp
std
jg
int
lock
pop
mov
add
incl
pushf
add
mov
out
adc
gs
inc
in
test
dec
jg
or
mov
mov
fdivrs
cmp
in
pop
pop
xor
inc
je
test
adc
ret
push
mov
mov
jl
je
jbe
xchg
cmpl
sahf
xor
or
ret
cmpsl
jp
pop
xchg
or
or
rclb
dec
inc
add
pop
push
xchg
sbb
inc
inc
mov
cmc
cs
sbb
inc
call
and
rol
xor
test
mov
dec
out
xlat
and
or
xor
jb
add
gs
aad
mov
jmp
daa
popf
shl
stos
mov
hlt
mov
cmc
sub
inc
aaa
inc
fsts
push
clc
cld
adc
out
push
jg
or
sbb
cmp
and
and
popl
sub
lahf
rcr
ja
jecxz
pop
fsubs
xchg
mov
adc
es
in
subl
mov
add
pop
or
add
push
jno
stos
hlt
lods
fisubrs
jl
jbe
sub
cld
movsl
mov
xor
mov
pop
adc
lock
mov
or
mov
and
or
jmp
jle
pop
insl
lea
xlat
mov
dec
cltd
and
cmp
shl
lcall
add
sub
xchg
popf
jle
shrb
out
sub
adc
inc
repz
mov
fildll
mov
call
clc
dec
aad
mov
clc
cli
pop
mov
aam
outsb
inc
push
cmpsl
popf
adc
and
andb
aaa
test
add
mov
shll
jne
inc
push
mov
ss
cmp
in
and
mov
mov
sub
jg
mov
popa
and
incl
repnz
push
in
sbb
testb
dec
mov
add
addl
pop
mov
cmp
sub
cmpsl
pop
inc
popaw
rolb
pusha
inc
sbb
pop
add
movl
xchg
sbb
xlat
mov
lods
mov
pop
and
iret
leave
and
dec
adc
popa
popa
sub
je
iret
imul
icebp
ffreep
stos
fisttpll
lods
or
lea
popf
pop
push
pop
sub
fucomip
add
cli
movsb
popa
and
xchg
mov
cmp
addb
push
add
jl
pop
push
cmp
out
mov
nop
lods
stos
pop
cmp
or
or
clc
xchg
loope
sub
xchg
mov
adc
call
add
push
addr16
fstpl
fisubl
adc
mov
push
lock
in
cld
bound
adc
pop
jl
mov
pop
call
ljmp
sbb
mov
aam
sbb
push
sub
adc
rcrl
pop
clc
imul
mov
imul
ss
stos
das
ljmp
jnp
call
bound
outsl
std
and
out
stc
mov
or
sub
sti
sbb
out
fistpll
cmp
sub
cmp
cmp
ja,pt
dec
adc
nop
in
sbb
cwtl
inc
lods
enter
sbb
shrl
jo
push
xchg
fldcw
mov
fistpl
stos
xchg
dec
sti
inc
jae
pop
sti
sbb
les
popa
cmp
xor
lock
jo
sub
lds
imul
mov
outsl
sbb
daa
dec
in
nop
mov
cmpsl
stos
mov
pop
push
mov
push
cltd
outsl
adcl
jo
out
psllq
pop
push
or
clc
inc
push
aam
inc
aaa
push
icebp
push
push
add
cld
popf
pop
sbb
mov
sbb
inc
popf
add
shrl
scas
repz
pop
mov
adc
push
test
mov
add
dec
inc
outsb
pop
push
jecxz
push
push
stos
mov
cmpsb
jp
or
sub
push
mov
icebp
mov
adc
dec
jecxz
and
rclb
xchg
fwait
insl
imul
in
inc
fwait
and
or
jle
mov
mov
dec
adc
shrl
jg
mov
sbb
cmpsb
aam
mov
dec
dec
movsl
mov
push
cmpsl
mov
movsb
fcoml
int
cmpb
jnp
clc
push
xchg
push
mov
inc
adc
jp
cwtl
enter
or
cmpb
jo
or
dec
inc
jge
hlt
out
add
or
das
in
adc
jp
and
lds
sbb
dec
mov
sub
mov
mov
ret
add
inc
and
push
sbb
test
repz
or
push
adc
test
jne
sub
inc
lods
adc
xor
cmpsl
inc
inc
inc
inc
fidivl
adc
push
add
adc
adc
ret
dec
arpl
bound
cmp
adc
add
insb
outsb
inc
pop
push
inc
xor
xchg
cmp
inc
enter
stos
fiadds
inc
jbe
dec
xchg
or
xor
xchg
scas
imul
push
cmpsl
mov
pop
add
std
jae
jbe
loope
insl
adc
test
xor
scas
push
add
fmul
and
rol
mov
arpl
fildl
imul
stos
ja
pop
dec
xor
rorl
push
xor
push
outsl
add
xchg
ss
int3
ret
sub
mov
push
mov
mov
or
xor
and
push
aad
inc
sahf
sbb
lock
sub
or
jnp
ljmp
mov
std
xchg
adc
add
cwtl
adc
aad
inc
cmp
add
fldenv
movsb
popa
xchg
mov
hlt
into
out
cltd
hlt
mov
cmpsb
pop
xchg
in
cwtl
orl
test
xor
pop
jl
cmp
inc
add
push
test
xchg
add
ret
pop
push
int3
nop
and
push
add
pushf
ljmp
sbb
addr16
out
clc
hlt
inc
push
jp
cwtl
cwtl
xchg
sbb
jb
stc
add
andb
dec
pop
imul
add
sub
push
xor
idivb
push
inc
inc
lret
push
mov
loop
jno
ja
mov
adc
ss
shlb
mov
sbb
sbb
push
sbb
sbb
fsubrs
or
and
sbb
dec
out
mov
jns
addr16
and
mov
rcll
lock
lock
dec
scas
mov
out
lods
jecxz
aaa
jo
ja
cld
ror
jnp
sbb
mov
or
jbe
insb
adc
sarl
sub
push
iret
pop
xchg
sbb
shrl
jbe
adc
xor
add
xchg
shr
popa
jae
pushf
inc
mov
cmp
ret
adc
pop
mov
inc
in
dec
std
insl
push
shrb
sbb
xor
pop
cwtl
fmull
jns
cmp
adc
cmp
and
ret
out
rcrl
add
les
sub
fists
push
sbbl
adc
or
push
jb
loope
pop
or
fiaddl
xor
movsl
dec
gs
xor
jmp
inc
or
ret
lcall
std
aas
adc
insl
or
inc
jmp
push
test
jecxz
dec
mov
mov
test
shrb
xlat
fsubp
push
dec
out
mov
pop
das
sub
mov
dec
jp
push
pop
aaa
cli
div
stos
add
sbb
xor
or
iret
rolb
cmpsl
mov
loop
stos
mov
sub
sub
push
mov
mov
mov
test
mov
les
into
aam
or
sti
cld
pop
insl
cmp
jno
pushf
sbb
repnz
rorb
arpl
xchg
pop
sub
mov
push
inc
daa
sbb
dec
fucomi
dec
shlb
lahf
lods
add
sub
cmp
fbld
pop
mov
test
xchg
and
test
mov
mov
xchg
inc
mov
popa
fwait
pusha
sti
mov
fs
mov
add
mov
sbb
mulb
pop
push
add
xchg
sub
into
sub
lods
pop
in
outsl
and
adc
push
or
mov
push
inc
add
sbb
jmp
notb
lahf
cmp
fucomp
lods
sub
shrl
pop
call
xchg
sbb
shrb
lea
mov
pop
in
popa
adc
test
add
mov
or
adc
sahf
decl
xchg
xor
subl
sub
or
stc
sub
mov
sbb
notl
jo
iret
dec
mov
cmp
ss
and
jo
mov
pop
sub
fisttpl
arpl
call
cltd
mov
imul
rcr
inc
and
mov
sbb
test
add
add
inc
xchg
push
aam
sub
les
push
mov
mov
loope
jle
cld
paddb
jmp
pop
dec
stc
lahf
mov
sub
stos
dec
aad
aam
les
pop
mov
and
pop
jecxz
jmp
subb
xor
in
je
loopne
sub
pop
cs
xchg
rorl
xchg
ljmp
lds
mov
je
jo
sub
jno
mov
inc
icebp
lea
fisttps
cmpsl
push
incl
in
fcoms
lea
dec
sbb
sub
aam
fnstenv
ret
sub
adc
sbb
add
cmpl
xchg
repnz
add
dec
loopne
inc
in
and
sbb
cmpsb
outsb
jg
xor
pop
jno
iret
mov
xchg
mov
mov
xchg
pop
lcall
std
pop
inc
push
sbbb
movsl
inc
pop
pop
or
das
lock
xor
out
push
das
insl
ja
push
jp
inc
in
lods
rorl
or
mov
dec
jno
inc
sbb
inc
pusha
adc
and
inc
xchg
fdivrp
call
lcall
xor
cs
lock
ret
ficoms
xor
fnsave
jg
jg
xchg
movsb
jbe
add
je
nop
xchg
mov
fistpll
cmp
arpl
pop
sub
in
imulb
inc
loop
xlat
adc
jne
cmp
sub
cmp
sbb
inc
in
ja
movsl
mov
push
mov
adc
out
dec
push
cmpsb
push
cmp
lods
xor
push
sbb
movsl
dec
stos
daa
pop
js
adc
mov
inc
and
outsl
mov
call
push
pop
push
mov
or
mov
or
es
mov
pop
sub
fcoml
aam
in
stc
rorb
das
adc
int3
scas
xor
call
test
xlat
mov
jno
loop
cmp
xor
inc
ja
cli
fstpl
add
int3
addl
or
mov
inc
mov
outsl
fnstsw
xor
cmp
jg
and
mov
push
adc
sahf
ljmp
xchg
mov
lock
jnp
jbe
in
scas
fwait
jae
inc
imul
jmp
inc
incl
jl
xchg
int
xor
rcr
fidivrs
out
push
pop
mov
xor
fcoml
dec
jo
mov
imul
and
loope
xchg
in
dec
adc
mov
add
inc
xorl
inc
repz
in
add
xchg
sub
daa
push
inc
out
fstps
sbb
mov
lds
inc
rcrl
sub
pusha
bound
sub
lgs
push
mov
out
call
xchg
mov
adc
push
sbb
in
xchg
sub
or
push
and
pop
bound
jns
sub
pop
mov
push
lret
jg
decl
cmpsl
cmp
xchg
adc
push
stc
gs
scas
mov
fsubs
sarb
in
ror
and
notl
cmc
or
nop
add
or
xor
and
cmp
dec
icebp
test
mov
pop
pop
pop
mov
pop
bound
xor
xchg
addl
mov
cltd
or
cmp
cmp
mov
les
and
adcb
xorl
adc
dec
sbb
adc
ds
pushf
cmpsb
or
and
push
xlat
inc
jecxz
xchg
mov
mov
outsb
shlb
aaa
fisubl
pop
jge
xchg
hlt
mov
cli
and
nop
repnz
std
stos
dec
xchg
jecxz
adc
clc
loopne
fsubrs
xchg
or
sbb
or
daa
shl
xor
cmp
stos
xchg
decl
add
dec
repz
mov
and
ja
sti
sub
imul
lahf
fstl
loopne
dec
sbb
adc
icebp
or
cmp
mov
push
test
into
add
std
sub
inc
data16
push
ds
cmp
push
push
and
ljmp
dec
in
sbb
dec
push
ljmp
mov
cmpsl
lcall
ret
lret
dec
cmp
fildl
inc
pop
jae
add
test
sbb
gs
cmp
insl
xor
int3
inc
pop
sbb
or
rorb
ret
mov
mov
insl
imul
call
push
ljmp
pop
inc
iret
or
sbb
jecxz
cld
add
sbb
clc
sub
push
cwtl
clc
fwait
cmp
les
mov
daa
cmp
incb
sbb
sbb
aas
sub
and
out
xchg
sbbb
cltd
and
icebp
jbe
fwait
loopne
std
dec
and
aas
dec
pop
insb
pop
jae
out
insb
pop
jo
outsb
fbld
adc
sub
cli
mov
loope
jp
dec
out
repz
call
sub
sbb
and
mov
loopne
into
adc
lahf
cli
int
les
shrb
ss
adc
xchg
adc
jg
mov
lock
xchg
mov
and
jbe
in
sbb
js
mov
int3
push
xor
test
pop
mov
xchg
in
pop
cmp
icebp
and
nop
fdivs
je
stos
fidivs
and
clc
or
jbe
and
push
jb
aaa
fsubrs
lcall
pop
add
call
movsl
mov
xchg
push
test
cmp
loop
sbb
sub
adc
dec
sbb
or
imull
add
shrl
adc
mov
mov
xor
fdivrp
clc
push
dec
pop
jp
push
test
js
mov
or
jmp
jae
out
dec
rcll
jo
lcall
in
aas
ss
insl
dec
js
fwait
out
inc
cmpsl
test
iret
xchg
inc
or
cmp
imul
ds
or
imul
push
dec
jo
lahf
shr
daa
das
insb
jne
test
adc
jmp
pop
dec
leave
jno
dec
or
aad
add
push
es
and
pop
add
pop
call
fidivrs
leave
call
mov
hlt
out
dec
ja
repnz
cmova
inc
mov
and
fdivl
add
mov
nop
dec
mov
ljmp
cmpsb
xchg
repz
mov
in
decl
lcall
and
cmp
inc
xorl
cltd
pop
xchg
push
mov
pop
and
pop
aam
outsl
sub
mov
xor
pop
and
xor
mov
ljmp
fisubrl
nop
lret
insb
mov
mov
pop
sbb
xor
not
les
mov
mov
add
lds
dec
je
lea
loope
fwait
mov
pusha
inc
jne
pop
jo
pop
cmpsb
rcr
adc
shl
cltd
xchg
jle
das
jno
fs
xor
mov
jg
or
pushl
or
aam
pop
lcall
in
mov
shll
ss
push
testb
cmp
test
xchg
pop
or
dec
mov
pop
test
popf
sarl
lahf
into
inc
adc
jl
mov
xchg
mov
jecxz
mov
adc
and
rclb
shrl
std
psubusw
cmc
cs
sbb
and
sbb
fdivr
pusha
repnz
addr16
inc
std
inc
ss
and
push
aas
out
das
mov
xor
cmp
dec
or
inc
xchg
aad
push
lock
mov
pusha
leave
and
push
or
hlt
dec
ss
sbbb
mov
dec
inc
orl
aas
xor
aam
rclb
lcall
lea
pop
pop
hlt
outsl
push
push
add
and
add
aas
call
pusha
movsl
mov
mov
xor
clc
aaa
mov
movsl
imul
and
and
jp
ss
xchg
mov
sbbb
cmc
js
out
mov
dec
scas
push
shrl
test
lret
lock
icebp
ret
arpl
jbe
mov
mov
test
les
mov
hlt
xor
push
xor
scas
icebp
imul
ljmp
sbb
movsl
xor
mov
cld
mov
xchg
inc
andb
jnp
xchg
ljmp
sar
or
xchg
push
cmc
cmp
in
mov
stos
dec
stos
mov
pop
test
cli
mov
mov
jp
or
scas
rcll
lea
and
ret
repz
xchg
clc
sbb
repnz
lret
icebp
nop
lds
bswap
xorps
stc
arpl
pop
xchg
or
dec
or
movsb
outsl
incl
aas
fldcw
notl
jl
jne
fs
mov
imul
jbe
and
pminub
or
jg
jmp
cmp
pop
je
mov
cli
sysret
stc
xor
scas
mov
xor
enter
push
push
xchg
rcll
jge
mov
jmp
push
mov
adc
mov
cmp
cmpsb
outsl
cld
adc
dec
pusha
jns
inc
call
stc
and
incl
repnz
push
ds
push
adc
cli
inc
das
into
adc
test
pop
sbb
scas
add
pop
push
push
push
inc
mov
out
sbbl
push
or
aaa
negl
mov
adc
out
fwait
mov
je
sahf
fimuls
pop
test
cmpsl
das
cld
ret
cmovge
mov
mov
rorb
cmpsl
cmp
je
in
sbb
pushl
rcl
pop
mov
dec
mov
ja
aaa
dec
mov
add
add
fcmovne
xor
jge
je
cmp
aas
xlat
push
ffreep
popa
pop
pop
popf
and
xor
jge
sub
pop
cmp
xchg
ljmp
in
cltd
add
xor
cmp
xor
imulb
rcrb
sbb
cmp
std
aaa
shlb
dec
aaa
dec
lds
in
mov
cmp
stos
cmpsl
dec
je
dec
pop
jb
inc
shl
cltd
js
xchg
add
cmp
fsts
sti
aaa
shl
pop
loop
ficoml
imul
dec
cmp
aas
or
addr16
mov
lahf
pop
add
fdiv
and
stos
mov
mov
add
xchg
repnz
pop
pop
repz
icebp
adc
mov
mov
mov
hlt
movsl
cmp
and
jmp
dec
lods
pop
jb
or
or
std
pop
mov
and
movsl
pop
clc
inc
add
sbb
mov
and
fwait
aas
test
mov
lds
push
xor
sub
negl
outsb
inc
mov
push
xor
scas
stc
shrb
sub
sahf
in
icebp
sbb
inc
inc
gs
sahf
pushf
out
xchg
dec
or
sub
ss
add
out
pop
push
mov
stos
int
cmp
ljmp
xlat
xchg
leave
push
jp
incl
pop
push
enter
test
pop
mov
fs
jns
shrb
outsb
clc
in
rorl
sbb
jmp
sbb
or
pop
popa
mov
aad
mov
scas
out
roll
dec
add
jbe
neg
sub
popf
aad
push
fdiv
inc
shrb
std
jg
cmpsb
xchg
fxch
lock
sbb
out
adc
int3
adc
orb
fs
mov
pushf
rcr
jmp
xor
test
ja
add
jae
fidivl
test
pop
aad
movsb
lret
cmp
icebp
push
and
add
call
divb
xchg
pusha
rcrl
or
pop
dec
jno
inc
or
mov
push
int3
pop
adc
je
inc
pop
or
mov
cs
mov
loop
in
clc
adc
lea
xchg
loop
out
stos
xchg
inc
pushf
orl
inc
jnp
mov
sbb
pop
sub
inc
xor
mov
dec
jo
push
xor
pop
nop
and
ds
or
mov
sbbl
stos
in
and
clc
loope
mulb
in
scas
add
arpl
gs
shrb
popa
dec
mov
lcall
decb
mov
pop
xor
dec
iret
cltd
pushf
and
and
pop
dec
mov
iret
insb
iret
jp
push
outsl
mov
add
pop
inc
stos
in
ret
fcoms
add
jo
sbb
jmp
sbb
clc
in
jl
mov
fidivrs
jecxz
shrl
pop
mull
data16
dec
sub
ret
outsb
add
dec
decb
fbstp
loope
bound
stc
or
sub
cmp
decl
mov
and
push
out
xchg
subb
rcll
pop
lea
jg
or
loop
icebp
loope
pop
cld
mov
adc
jne
fiadds
push
lods
jge
dec
push
and
sbb
cmp
jnp
gs
pop
add
sub
out
mov
mov
jge
inc
mov
ficompl
enter
dec
push
mov
or
xor
aam
pop
adc
stc
xor
add
decl
mov
push
sbb
adc
adc
sub
loop
and
mov
iret
inc
lds
dec
shll
sar
aam
jb
sub
mov
push
mov
hlt
andb
outsl
xchg
rcll
cmp
cmp
and
pop
rorl
xchg
push
rorb
jb
sub
mov
aam
int
fs
idivl
push
cmp
jmp
movsb
outsb
cmp
inc
mov
orl
scas
sub
mov
ror
loop
mov
int3
push
das
test
or
jne
repz
and
lahf
jp
pop
xchg
adc
in
addb
scas
xor
dec
data16
test
add
rclb
lret
mov
adc
int3
pop
inc
pop
je
or
mov
or
outsl
movl
mov
mov
push
std
aas
jne
add
mov
test
push
xor
push
inc
mov
inc
mov
mov
sarl
and
int3
push
push
rcl
jp
cmp
or
inc
icebp
dec
push
inc
xor
jbe
xchg
jo
or
clc
mov
out
in
add
mov
lret
mov
or
jne
inc
adc
adc
push
or
dec
adc
adc
loope
shll
adc
mov
testl
insl
mov
in
jge
outsl
mov
loop
jmp
mov
int3
pusha
adc
icebp
pop
inc
xchg
cmp
jae
jno
dec
shlb
xor
or
icebp
daa
enter
in
les
sub
or
pop
popf
cltd
sbb
jnp
test
add
or
add
or
in
or
or
cld
in
pop
xchg
stc
sbb
cmp
jbe
pop
xlat
mov
cmp
divl
add
xor
push
mov
ret
pop
xchg
xor
or
sbb
hlt
rcrl
sub
and
dec
adc
pushf
or
mov
xchg
push
and
in
lock
inc
out
and
cmpsl
add
adc
pushf
bound
subb
inc
dec
inc
enter
ss
push
inc
mov
mov
lcall
adc
mov
mov
adc
cmp
adc
ret
movsb
das
push
xchg
cld
mov
adc
xchg
test
adc
lahf
push
ds
and
inc
xchg
mov
or
xlat
movb
in
lahf
mov
int3
enter
fstl
inc
adc
xor
insb
xor
lods
sbb
sbb
outsl
and
repnz
adc
ret
les
xchg
inc
hlt
add
jb
inc
arpl
add
loopne
mov
popa
aam
inc
jb
add
jnp
divl
pop
les
shlb
mov
sbb
cmc
mov
mov
rol
add
xchg
jmp
mov
push
sarl
and
push
testb
pushf
dec
mov
sbb
push
mov
test
lods
mov
xor
out
test
fdivrl
fsubrs
adc
dec
roll
push
and
into
and
cmp
testl
shrb
sbb
into
icebp
enter
popf
jnp
into
cwtl
mov
and
add
int
cltd
lret
jb
lret
pusha
cwtl
ret
jbe
loopne
add
call
dec
clc
ds
in
mov
adc
push
adc
fwait
mov
lods
dec
stos
and
push
test
loopne
and
orb
add
sarb
sbb
inc
icebp
aam
ljmp
cld
and
or
outsb
inc
jp
or
mov
mov
dec
push
add
add
gs
xchg
jmp
sbb
jecxz
push
push
push
pop
loopne
inc
lcall
or
ret
and
and
push
jge
ljmp
shll
inc
xchg
test
aam
push
ret
pop
sub
popa
inc
add
outsl
lock
pand
add
int
sub
xchg
roll
je
mov
dec
cmp
je
les
fwait
dec
add
roll
add
sbb
ja
or
inc
andb
jae
sti
test
jne
jbe
and
lods
cmp
xor
mov
jnp
jge
adc
test
shlb
dec
push
int
rorl
or
cld
icebp
loop
hlt
push
push
inc
arpl
inc
into
pop
jl
push
and
sbb
repnz
je
repz
jne
inc
cmc
xchg
xor
test
pop
out
clc
mov
or
popa
das
push
xchg
jmp
test
jne
jmp
cmp
xchg
and
inc
adc
pop
lods
hlt
mov
enter
in
sbb
test
nop
mov
pop
dec
sub
adc
push
addr16
jb
add
stos
sub
out
mov
sahf
or
call
pop
pop
sub
lock
ss
dec
jbe
pop
test
add
or
sbb
roll
dec
in
nop
push
push
pop
push
lahf
cmp
or
mov
icebp
daa
jge
daa
pop
pop
mov
popf
add
xchg
mov
sbb
loopne
mov
inc
lcall
push
mov
inc
lcall
mov
sbb
cmp
test
popa
outsb
cmp
and
and
sub
mov
ret
mov
or
and
sub
push
mov
jmp
negl
test
sarl
pop
enter
mov
adc
jbe
xchg
jl
sub
add
je
xchg
pop
daa
xor
push
cld
dec
shrb
jg
jmp
imul
fists
stos
and
adc
adc
dec
into
aas
or
shrl
pop
xlat
aad
loope
pop
nop
hlt
and
dec
aad
and
mov
aaa
mov
fcoms
lds
repnz
into
jne
outsl
or
mov
or
mov
addr16
xor
sub
sbb
scas
dec
and
sti
pop
inc
nop
add
dec
and
add
push
push
mov
add
jnp
jg
add
cmp
pusha
into
es
inc
adc
ljmp
mov
nop
scas
icebp
or
pop
inc
push
scas
mov
in
lods
orl
mov
enter
fnstcw
movsb
jge
inc
sbb
hlt
and
sarb
mov
mov
inc
jecxz
mov
push
iret
add
cmc
cmp
mov
cwtl
xor
bound
ss
cld
outsb
jb
test
das
std
ljmp
push
sti
ss
or
mov
lcall
xor
shrl
xchg
js
jge
bswap
xchg
xor
add
sar
out
add
incb
push
mov
lods
icebp
jbe
aas
jg
sbb
cs
out
cmpl
xor
sbb
inc
outsl
mov
push
push
dec
mov
fidivs
xor
mov
and
outsl
mov
xor
dec
lret
add
cli
sbb
adc
jno
push
loopne
sub
pusha
jo
test
sahf
jl
cmp
pop
sti
mov
add
dec
iret
xchg
push
mov
xor
ja
mov
daa
pushf
jae
adc
jne
cmp
in
pop
or
sbb
pop
in
and
xchg
repnz
mov
je
and
dec
cmc
mov
xor
aas
and
icebp
outsl
gs
outsl
adc
push
addb
insb
mov
aaa
sti
fistps
pop
mov
shll
ljmp
push
pop
rcr
jl
cmpsb
xor
addb
xor
es
incl
out
mov
lahf
in
sub
mov
sbb
lds
std
jmp
cmp
or
add
scas
rolb
outsb
jnp
sbb
xchg
mov
insb
lahf
or
push
add
mov
jbe
mov
sbb
movsb
out
pop
addr16
pop
outsb
dec
dec
sub
rorl
push
mov
cmpsb
cs
lds
flds
dec
pop
push
and
rcr
js
inc
xchg
sub
mov
mov
mov
in
test
pop
xchg
ss
dec
mov
xor
add
mov
scas
mov
aam
sbb
pop
pop
test
adc
in
or
add
les
adc
ds
mov
enter
mov
lcall
ret
cmpsl
mov
dec
pop
push
and
xchg
fsubp
inc
jg
arpl
cmp
mov
jle
adc
mov
fidivs
mov
sbb
push
mov
jnp
push
push
jb
loope
cmc
inc
lret
je
adc
inc
add
jle
cmp
pop
add
dec
into
rdpmc
stos
lods
test
pop
add
inc
mov
hlt
jl
mov
cmc
pop
mov
inc
mov
adc
icebp
dec
sbb
shrb
ja
stos
imull
mov
in
lcall
sub
and
and
fistpl
lods
les
mov
jecxz
xchg
or
push
mov
sub
jl
inc
cs
xchg
imul
sbb
inc
mov
xchg
cwtl
rcrl
mov
fisttps
mov
stc
jecxz
int
pop
imul
add
push
fxtract
push
pop
rorb
hlt
call
ja
push
movsb
sub
inc
mov
xor
ret
add
push
cmc
cmp
push
aam
cmp
xor
sub
ret
dec
test
cmpsb
jno
push
xor
pop
inc
mov
cmp
ss
sbb
xor
ss
adc
lea
cmp
cld
movsl
out
clc
cmc
movsl
pop
push
lret
repz
stos
cmp
cmp
in
add
pushl
push
in
in
push
add
sbb
outsb
std
xor
pop
cmpsl
pusha
incl
scas
clc
mov
dec
cwtl
mov
xchg
inc
mov
and
ljmp
xlat
push
mov
push
in
or
mov
imul
out
and
rcrb
popa
aas
in
outsb
imul
arpl
jmp
enter
outsl
dec
shr
sbb
cwtl
aas
fwait
and
idivb
lahf
sub
dec
xchg
stc
aas
adc
sbb
inc
test
clc
push
incl
xchg
stos
jle
add
sub
xor
daa
mov
and
mov
out
adc
mov
rorl
arpl
add
xorl
push
dec
adc
loopne
mov
add
jge
sub
jne
xchg
cld
stos
cli
pop
mov
test
aam
sbb
aaa
push
pop
push
cmp
cmpl
mov
mov
incl
push
loopne
imul
xor
call
mov
fiaddl
push
inc
mov
aaa
push
into
pushf
arpl
inc
xor
cmpb
or
mov
mov
sub
rorl
inc
sub
movsl
repz
xor
ror
adc
pop
inc
mov
shlb
scas
nop
cmp
int
pop
pusha
out
inc
cmp
sbb
cs
push
inc
adc
pop
mov
or
mov
hlt
jecxz
and
push
or
push
in
lret
xor
int3
leave
or
int3
or
xor
jbe
push
push
shll
add
cmp
aas
push
push
dec
add
daa
clc
and
hlt
scas
jo
js
or
dec
push
arpl
call
and
push
popa
dec
and
adc
test
or
cltd
mov
sub
es
fists
call
xor
bound
push
push
adc
mov
call
shll
pop
test
stos
and
push
adc
loope
cmp
shll
jle
js
imul
fstps
repnz
mov
pushf
es
and
loopne
mov
inc
hlt
or
andps
xor
pop
xchg
les
pop
or
dec
mov
test
and
inc
rcrb
fs
rcrb
adc
cmpsl
rorb
out
bound
cmp
mov
iret
cmp
cmp
mov
xchg
sub
out
fnsave
or
and
rcrb
adc
fucom
adc
inc
mov
ret
arpl
rcl
pop
cmc
mov
gs
stos
jbe
clc
xor
mov
sub
sub
mov
push
bound
and
sarl
jnp
lret
lea
ja
lods
lock
std
push
xor
fwait
cli
and
mov
and
lret
es
cmc
js
insl
pop
daa
sbb
aam
xchg
sbbl
adc
lahf
lds
incb
sarb
repz
adcb
aas
aam
adc
mov
dec
fwait
dec
jg
ljmp
pop
loope
nop
rclb
push
push
fcmovbe
jg
faddl
insb
outsl
aam
and
data16
mov
mov
cs
fs
xlat
sub
les
fnstsw
cmp
test
mov
push
je
push
adc
add
and
into
jne
in
repnz
mov
xchg
lods
jmp
mov
stc
push
mov
stos
outsb
sbb
push
add
pop
xlat
stos
fbld
outsb
lcall
adc
adc
fsubrp
mov
or
xchg
add
movb
jbe
jecxz
or
ja
cmp
fs
push
inc
test
adc
into
or
loopne
mov
pop
sarl
cwtl
and
clc
push
mov
xchg
ret
lret
call
stos
and
movaps
mov
or
add
mov
leave
ficomps
push
enter
aaa
les
pushf
mov
pop
pop
test
or
xchg
dec
or
fwait
mov
dec
in
adc
pop
dec
scas
push
jo
sub
fstpt
loope
or
fsin
outsb
mov
iret
pop
enter
lds
movsl
es
repnz
jge
lock
loop
ss
das
fisubrs
add
jge
notb
sub
gs
insb
stos
arpl
lods
out
and
xor
ljmp
xchg
sbb
cmp
push
or
ja
cld
push
pop
xor
bound
adc
adc
pop
clc
lods
xor
into
xchg
xchg
or
sti
xchg
push
outsb
dec
enter
xchg
repz
xchg
stos
call
xchg
mov
push
jp
mov
xor
idivl
sahf
std
mov
cwtl
add
and
ret
roll
inc
xor
xor
and
call
lods
lret
mov
push
gs
pop
jnp
insb
scas
inc
mov
fistpl
dec
mov
mov
cmp
mov
fs
shr
fildll
leave
imul
jp
mov
push
inc
fisubrs
pop
and
cld
js
mov
cmp
fisttpll
fimuls
cs
sti
push
or
cld
or
movsl
jle
inc
dec
rcl
push
mov
inc
and
inc
daa
popl
cmp
cmp
gs
adcb
push
aad
mov
bound
inc
and
pop
rcr
xchg
adc
mov
imul
inc
gs
xor
test
mov
dec
negb
pop
pop
adc
shr
push
negb
push
pop
aas
sbb
pop
pop
daa
jmp
movnti
sub
in
cmp
in
xchg
cmp
mov
lea
mov
sub
cmp
mov
lea
sbb
into
cltd
test
pop
mov
cmp
mov
fdivl
push
les
push
cld
pop
cli
sub
xchg
je
nop
orb
fwait
push
add
add
pop
mov
std
sbb
out
shlb
inc
and
mov
sub
inc
pushf
popa
or
lods
fwait
xorl
rorl
in
sub
sbb
popf
cmp
decb
jge
add
sbb
dec
jecxz
je
lock
mov
shlb
cmpsl
sahf
lods
outsl
mov
and
mov
xchg
out
jmp
mov
into
in
popf
adc
dec
icebp
test
movsl
fisubl
or
shrl
dec
push
adc
loop
pop
pop
sub
in
and
dec
pop
test
add
cld
pop
fsubrl
sar
pop
bound
add
fwait
sti
and
inc
addl
jg
or
sub
jle
and
mov
mov
dec
jae
lea
jg
jp
repz
lcall
xor
sub
mov
adc
adc
mov
imul
inc
aad
push
aaa
sbb
xor
inc
aas
stos
ret
add
push
push
loopne
js
ds
sub
mov
sbb
and
bound
or
dec
or
push
xchg
lods
fiadds
shlb
in
dec
pop
orps
paddsb
addb
mov
cmp
cmp
and
pop
lock
push
push
nop
dec
aam
add
sub
add
pop
sbb
xor
dec
inc
cld
out
mov
es
jge
repz
jnp
rcrb
or
and
xor
push
dec
push
pop
push
in
xlat
sbb
inc
mov
or
push
enter
cmpsl
adcb
cmp
sub
cld
inc
mov
in
adc
add
cmc
nop
xor
cmp
icebp
dec
sbb
es
inc
xor
pop
leave
stos
fsubs
jle
mov
lret
mov
cmp
mov
add
lret
test
push
and
pop
lods
fildl
mov
test
loop
or
fsub
push
in
and
jb
bound
inc
out
and
xor
pop
mov
adcb
sbb
or
jb
mov
sub
add
mov
popa
mov
jle
testb
icebp
mov
mov
mov
ljmp
cmp
ja
xchg
jns
dec
adc
pop
jno
lods
sbb
ja
cmp
outsl
out
mov
push
int
push
fcmovnb
repz
mov
xchg
stos
push
mov
ret
pop
dec
mov
stc
call
and
outsl
std
loope
icebp
insl
sub
fbstp
and
aaa
out
push
xchg
inc
jno
dec
mov
mov
fnsave
pop
mov
mov
jb
push
lock
inc
test
cmc
aaa
ds
pop
mov
arpl
jmp
or
pusha
xor
add
mov
jmp
pop
repz
inc
mov
addr16
rcrb
inc
lods
pop
and
jl
lock
mov
xchg
mov
xor
movsl
sub
dec
jae
call
push
jge
mov
mov
xchg
jmp
xor
and
mov
mov
lods
push
sbb
mov
cmp
aaa
jne
push
int3
pusha
loope
sub
ljmp
sub
lahf
xor
add
outsb
cmp
sbb
test
push
mov
and
mov
push
xchg
int
aam
adc
pop
loope
fdivr
dec
dec
or
push
hlt
cmp
and
jb
insl
xchg
mov
test
das
push
cmp
sub
lret
lret
adc
mov
sub
shlb
mov
in
jnp
roll
int
in
pop
loop
subl
jns
add
test
enter
jecxz
or
push
dec
push
fmuls
es
pop
mov
cmpb
mov
cmp
inc
lcall
sarb
rcrl
je
adc
dec
jbe
mov
je
je
cmp
pusha
scas
mov
fsubr
and
lahf
enter
popa
adc
daa
cmc
pushf
decb
jg
push
ret
movsb
jle
xor
mov
andb
sub
or
and
xor
and
and
scas
push
cld
pop
cmp
loope
mov
imul
inc
pop
rcll
cli
test
push
and
cs
xchg
clc
loope
mov
mov
fistl
sbb
inc
mov
clc
or
and
adc
rolb
inc
je
sub
popa
clc
popf
rcll
or
sub
out
or
mov
sub
dec
jo
stc
jle
inc
fwait
add
xor
cmpsl
ja
lret
adc
fcomip
test
in
dec
mov
sbb
cltd
aam
in
mov
aaa
mov
mov
jl
mov
sbb
xchg
mov
fiaddl
and
fwait
xor
xor
loop
push
lods
mov
lret
in
ja
or
push
adc
mov
dec
push
lods
sbbl
nop
idivl
fildll
xchg
push
fwait
loope
outsb
jmp
fcomps
ja
cltd
outsb
test
ljmp
inc
popf
jb
ss
mov
mov
inc
lcall
inc
mov
scas
sbb
cmp
mov
pusha
mov
adc
and
addl
cmp
lods
and
repnz
sub
mov
out
lds
inc
push
push
mov
popa
xor
pop
nop
lods
test
sarl
and
adc
rcrl
movsl
inc
stos
sbb
add
andl
subb
mov
imul
or
data16
push
add
lock
syscall
sub
orl
ljmp
inc
idivb
sub
adc
xchg
orl
jnp
or
or
fadds
mov
inc
cmp
add
testl
inc
sbb
std
sbb
nop
sbb
jb
mov
inc
add
jae
loop
test
or
add
aaa
sub
inc
cmpsb
les
fsubl
add
xchg
inc
shlb
das
ret
cli
cld
addb
mov
scas
in
dec
add
cli
out
imul
push
outsb
push
inc
adc
js
sub
add
xor
mov
and
xor
into
push
add
add
popf
mov
lock
popf
adc
repnz
loope
in
and
loopne
push
xchg
inc
dec
arpl
push
shrl
push
lods
or
inc
pop
mov
mov
jp
mov
pushf
and
repnz
ljmp
loopne
ret
or
aaa
mov
loopne
mov
mov
icebp
xor
inc
inc
add
pusha
jno
js
or
inc
mov
shrb
fs
lods
or
lock
adc
movsl
mov
dec
cmp
ljmp
roll
and
and
xchg
push
cmc
xchg
lea
pop
sahf
mov
imul
xchg
rolb
in
in
sbb
add
sbb
adc
lcall
pop
xchg
test
xchg
lret
es
inc
cmp
jmp
fcomps
cmc
sbb
daa
mov
and
mov
xor
fnstenv
cmp
sbb
pop
addr16
loopne
or
cli
push
out
pop
push
lods
in
rcl
movb
add
icebp
lods
mov
outsb
jg
jl
inc
inc
fcomps
jp
sbb
cmp
daa
outsl
shl
mov
ret
xorb
or
jp
adc
incl
adc
adc
xor
inc
mov
adc
mov
dec
movl
inc
daa
pop
int3
mov
fistpll
fildll
xor
mov
and
pop
sbb
loop
shrl
pop
sbb
or
cli
add
sbb
adc
mov
fadd
ds
test
mov
or
or
ret
or
outsl
incl
jecxz
lods
shrl
and
fisubs
or
mov
sub
push
loopne
mov
push
out
pop
das
inc
mov
fisttps
dec
pusha
fs
xchg
mov
sti
pushl
or
daa
test
jne
outsb
cmp
sbb
xchg
sub
shl
push
pop
rol
addr16
pop
out
pop
adc
adc
outsb
adc
gs
mov
add
mov
nop
sub
add
shll
pop
dec
and
ljmp
pop
push
ja
inc
adc
xor
mov
and
sbb
rorb
ds
pop
mov
add
mov
xchg
lock
jnp
fadd
scas
inc
push
out
sbb
movl
mov
push
ret
xchg
movsl
inc
orl
xor
cmp
daa
inc
les
fists
pop
inc
outsb
les
dec
outsb
ss
push
dec
stos
or
stos
or
ret
push
push
dec
sub
rolb
xorl
and
stos
addb
divb
mov
xchg
mov
mov
xchg
mov
xor
pop
cmpl
ja
xlat
jl
stos
call
popa
xor
xlat
mov
xor
adc
sub
ds
rol
jo
push
aam
rorl
add
in
or
pop
push
mov
cmc
in
push
popa
add
inc
inc
xor
mov
adc
fadds
xchg
adc
or
mov
dec
and
sbb
bnd
loopne
out
inc
das
pop
loop
push
loopne
xchg
pop
jl
or
adc
roll
mov
cmp
mov
jae
enter
mov
jge
push
enter
add
adc
fiaddl
ds
enter
enter
sub
fwait
js
in
mov
orb
xor
or
mov
pushf
adc
in
loope
inc
jle
mov
in
out
jae
mov
or
out
mov
pop
add
lret
push
rorb
add
add
cmp
stos
movsl
add
movsb
sbb
rolb
xor
or
pop
push
aad
add
sbb
call
sub
fwait
mov
in
enter
jo
sbb
or
xchg
add
and
pop
inc
or
xor
dec
mov
pop
imul
dec
and
js
dec
mov
push
lds
fs
mov
xlat
outsl
pop
jnp
sbb
add
mov
insl
dec
pop
call
dec
mov
inc
add
loopnew
ret
xchg
push
xor
sub
cmp
lret
jg
and
leave
ret
or
cvtps2pi
fstl
or
adc
daa
jmp
add
decl
jne
mov
out
add
mov
in
jnp
or
mov
mov
push
in
inc
adc
test
outsl
aad
jmp
psubd
fdivs
mov
mov
sub
jb
aaa
es
inc
push
test
adc
jge
sub
xor
cli
xchg
push
subb
xor
ficoms
adc
outsl
stos
cmp
or
or
fistpl
jno
fadds
bound
add
ss
inc
mov
fimuls
adc
dec
pusha
and
sbb
add
jno
aad
in
xor
loope
xchg
loopne
mov
xlat
adc
pop
add
popa
mov
outsl
divb
pop
cld
fisttps
aas
add
fwait
sbb
and
test
mov
push
pop
mov
xorl
pop
lcall
faddp
jle
mov
mov
xor
or
mov
std
fs
hlt
loope
loope
jb
pop
mov
sahf
in
and
ficompl
fwait
sbbb
ret
fwait
jbe
enter
loope
cmpsb
push
movsb
xchg
jno
bound
mov
push
icebp
test
jl
sar
jl
icebp
lods
mov
push
insb
addl
aaa
lock
cmp
movsb
mov
jp
bound
in
or
ja
jl
mov
fnstsw
ja
lds
add
xor
mov
push
rorb
jecxz
lock
jle
pop
pop
push
jp
ret
popa
popa
mov
push
stos
push
sar
testb
push
sbb
pushl
loopne
inc
ret
mov
or
stos
xchg
and
hlt
mov
ds
mov
adc
xor
ja
dec
and
and
insb
shlb
inc
je
jmp
addr16
or
insb
aad
lret
mov
xchg
aaa
clc
xor
loope
mov
gs
sbb
fildll
add
cwtl
in
adc
ja
and
push
pop
std
mov
and
cmpsl
ljmp
inc
lea
out
cmp
and
aam
outsl
fmull
loop
adc
dec
jmp
jo
inc
mov
nop
xor
and
rorb
mov
sbb
pop
mov
in
sbb
or
and
scas
lcall
je
dec
add
loop
loope
inc
or
jle
or
data16
clc
pop
jmp
sahf
aad
mov
add
and
outsl
aad
pop
out
jecxz
bound
dec
imulb
adcl
push
stos
mov
pop
clc
push
fldenv
mov
xchg
adc
add
jbe
cmp
sbb
jg
push
inc
xchg
call
and
jne
cmp
sub
orl
dec
pop
es
nop
rcl
cwtl
cs
mov
sub
outsb
pop
pop
push
jmp
and
inc
add
sbb
in
adc
and
insb
mov
mov
or
jbe
jno
dec
hlt
in
pop
jecxz
xchg
add
rcrb
imul
mov
adc
sub
xor
cmp
jae
fcmovnb
cmp
and
outsb
fwait
or
mov
sti
add
and
adc
arpl
and
mov
jbe
jmp
cmpsl
loop
pop
mov
push
mov
or
mov
mov
push
sbb
out
push
dec
jecxz
movsl
repz
push
fildl
arpl
hlt
and
jl
mov
inc
shl
repnz
popf
pushf
pop
pop
push
add
enter
sahf
mov
movsl
call
sar
xchg
mov
fnstsw
and
cld
or
ds
xchg
push
inc
sbb
filds
cwtl
mov
mov
push
mov
xorb
or
inc
jmp
mov
push
and
xor
mov
adc
fcompl
cs
hlt
cwtl
lcall
lods
dec
lock
xchg
or
stos
popa
jno
js
sub
fwait
ss
sbb
aaa
roll
and
hlt
xchg
xor
lock
mov
notb
lcall
outsb
pop
adc
mov
ror
dec
jbe
mov
push
and
and
add
ss
bnd
jge
es
mov
lcall
out
mov
insb
jge
pop
mov
int3
and
mov
pop
fbld
int3
pushf
push
aad
pop
push
jnp
lea
stc
mov
and
clc
lcall
movsl
loopne
pushl
jbe
dec
inc
decl
pop
mov
test
xor
mov
ds
shr
stos
or
nop
not
push
inc
mov
out
jno
push
lret
daa
dec
data16
fidivl
adc
or
sub
cli
sbb
mov
sbbl
dec
sbb
iret
mov
add
mov
and
mov
and
das
insl
mov
dec
sub
inc
inc
dec
and
sub
inc
stos
cmp
xor
and
and
cmp
inc
imul
adc
dec
fidivl
int
adc
mov
push
mov
push
push
xchg
adc
popf
mov
loope
test
push
adc
add
adc
pop
xor
outsb
mov
in
movsl
lds
dec
adc
or
cmc
dec
fbstp
mov
add
out
sbbb
mov
and
adc
icebp
xchg
inc
loop
movsb
add
inc
add
add
mov
mov
std
insl
or
imul
dec
xchg
out
xchg
jecxz
xchg
sub
popf
ficompl
loope
cld
mov
aad
out
stos
ja
cli
inc
sub
shl
imul
ret
xlat
js
cld
mov
adc
sub
repz
sbb
out
movsb
inc
int3
push
sub
cs
mov
and
clc
cmp
or
scas
icebp
fbstp
cmc
pop
add
cs
push
mov
dec
push
mov
mov
mov
cltd
int
dec
insb
and
clc
std
lret
lcall
pop
adc
in
addl
dec
iret
push
scas
aad
or
and
add
test
mov
add
push
jecxz
js
jo
imulb
cmp
dec
sbb
leave
stos
cmpsb
out
push
inc
xor
sub
fldt
fisubs
add
pop
imul
iret
jmp
pop
fldenv
push
bound
mov
add
sbb
or
add
sbb
xchg
jb
pop
movsl
sbb
rolb
jl
jmp
cld
inc
inc
stc
sbb
inc
jp
subb
mov
les
mov
or
mov
outsl
dec
sarb
popf
or
in
pushw
addb
dec
dec
mov
imul
cmp
pop
pop
fstl
stos
add
or
pop
imull
mov
mov
fcompl
dec
jns
lods
gs
xor
je
addb
sahf
add
jmp
jg
add
lds
sub
imul
dec
sbb
add
stc
icebp
lahf
add
into
dec
push
outsb
gs
cmpsb
insl
fistpl
fsubrs
sbb
stos
arpl
pop
push
lds
pusha
xchg
jmp
and
es
or
enter
xorl
or
enter
loopne
jns
mov
ja
out
adcb
popa
push
inc
inc
push
xchg
or
xor
call
rcr
push
test
lods
push
push
xorl
shll
mov
and
push
dec
mov
cmc
in
and
out
fs
lods
or
jbe
mov
test
jge
push
mov
mov
sti
dec
pop
ja
xlat
or
shll
jae
outsl
mov
xor
jecxz
nop
xchg
xlat
mov
cld
push
out
sub
fildll
pop
push
gs
add
insl
add
jge
pop
xchg
jo
xor
jnp
mov
cmp
sbb
fists
aad
mov
xor
and
cmp
movsl
push
mov
inc
sbb
fldcw
pushl
rorb
das
xchg
sub
add
dec
mov
push
adc
jno
inc
insl
sti
or
ja
scas
xchg
shl
cmp
mov
cs
rcr
hlt
lds
push
fcompl
cmp
pop
es
pop
js
loope
fists
cmc
or
inc
add
mov
pop
aam
test
adcl
xor
or
lods
and
in
aad
xchg
sahf
xor
dec
push
jmp
pop
hlt
sbb
mov
rclb
decl
clc
mov
mov
xor
repnz
ds
inc
mov
jae
inc
fldl
or
xor
fcmovnbe
mov
fdivr
aaa
cld
pop
pop
loope
push
cmc
jle
dec
and
inc
orl
ja
cs
adcb
cli
jle
es
or
cld
push
and
push
out
adc
mulb
aam
mov
int
in
add
add
pop
insl
add
loope
or
jmp
cmp
xor
inc
dec
mov
push
ret
cmpsb
mov
or
stc
cmp
sub
in
jg
add
or
and
in
and
loopne
cli
outsl
rolb
or
pushf
imul
sub
icebp
call
jno
repz
sar
clc
push
push
rep
and
iret
popf
mov
jno
jne
mov
cmc
and
mov
bnd
pop
mov
mov
add
div
push
fcomip
dec
call
add
daa
mov
nop
adc
test
js
push
outsb
icebp
push
jl
out
add
stos
out
push
mov
dec
xchg
fnstenv
mov
jg
pop
dec
pop
xor
adc
lods
outsb
mov
cld
mov
movb
xchg
pop
cmp
pop
subl
aam
aaa
mov
sub
aam
test
mov
push
sub
icebp
mov
or
arpl
popa
movsl
sbb
decl
shrb
pop
ljmp
scas
mov
xor
push
sbb
add
outsl
mov
mov
cli
and
pop
pop
fs
popf
jmp
dec
pop
sub
push
push
xor
sub
sbb
mov
std
data16
adc
cwtl
inc
orl
push
xchg
cmpsl
pop
adc
and
mov
out
mov
and
inc
mov
adc
outsl
sbb
lock
cmp
pop
in
pop
xor
lds
xlat
fcoms
push
push
shlb
sbb
add
inc
and
outsl
add
mov
sub
jg
sbb
push
push
jecxz
sarb
out
inc
cmp
addb
movsl
xchg
std
std
pop
mov
or
or
sub
and
cmp
mov
stc
dec
cmc
add
leave
pop
in
add
and
push
iret
xlat
pop
iret
jo
cmpsl
and
cs
mov
jmp
std
insl
xchg
les
mov
pop
push
dec
insb
pop
adc
jno
int
push
mov
xchg
and
xor
mov
loop
es
pop
nop
sub
dec
or
fcompl
pop
in
and
ds
mov
lret
movsb
mov
nop
add
into
mov
inc
aaa
pop
popa
stos
ds
mov
mov
cwtl
add
sti
or
lock
iret
incl
cli
test
xchg
xchg
adc
cmp
mov
cmpsb
into
add
scas
sbb
dec
mov
sbb
pushf
adc
iret
fs
aas
in
test
sub
sbb
fadd
mov
orb
mov
or
add
pushf
lock
mov
xchg
mov
jl
mov
inc
sbb
mov
pop
pop
inc
and
test
out
xorl
out
dec
cmp
sti
push
insl
xor
pop
ss
unpckhps
out
mov
lods
add
jbe
dec
dec
ljmp
pop
push
mov
inc
or
dec
dec
lods
xchg
mov
mov
fadds
jg
daa
nop
nop
arpl
push
xchg
jne
popl
je
adc
popa
or
inc
pop
add
pop
cwtl
push
sbb
addr16
mov
push
cs
sbb
sbb
and
inc
ds
gs
pusha
pop
dec
out
in
mov
xor
mov
push
lods
dec
lds
into
out
xchg
int
jg
lock
ret
xchg
pop
cmp
and
and
pop
or
sti
push
sbb
pop
or
fs
sub
pop
fldl2e
mov
testb
cwtl
loopne
cmp
adc
inc
jne
mov
and
dec
add
dec
cmp
mov
add
lock
insl
xor
cmpsb
punpcklbw
jle
pusha
addb
fbld
faddp
xchg
neg
xchg
mov
sub
jnp
mov
pop
add
xchg
dec
cltd
inc
push
test
jecxz
xor
sub
and
test
dec
mov
das
xor
lahf
jg
push
lock
cmp
mov
adc
rcl
call
and
clc
movsl
in
mov
adc
int
movsl
push
aaa
xor
stc
lret
insb
dec
add
inc
mov
loope
add
pop
jecxz
iret
inc
pop
mov
dec
pop
loopne
inc
popa
jmp
or
adc
pop
xor
xchg
dec
mov
jbe
pop
adc
aaa
pop
mov
mov
out
push
daa
div
inc
pop
mov
les
jnp
push
or
dec
gs
inc
enter
add
out
pop
pop
jnp
data16
divl
or
pop
inc
cli
movsl
lds
movsl
xchg
out
test
lahf
notl
pop
bound
dec
xchg
lcall
pop
adc
ljmp
scas
mov
pop
inc
mov
cmp
xor
adc
adc
jmp
adc
sbb
lds
call
add
xor
push
mov
sahf
add
or
or
xor
flds
adc
xorb
fildll
sub
mov
pop
stos
pop
js
dec
jmp
pop
add
sub
out
jmp
aad
jg,pn
pop
js
pop
inc
dec
or
mov
ret
mov
arpl
inc
sti
movsl
adc
xlat
mov
clc
xchg
pop
sub
scas
test
fbld
hlt
and
in
addb
add
ret
and
ret
lods
addr16
pop
push
add
add
dec
jnp
sbb
dec
cmpsb
lods
shlb
and
add
sbb
and
lock
insl
lret
outsl
pusha
lds
rorl
mov
pop
imul
push
out
pusha
jl
test
ss
mov
addb
loope
outsl
movsl
das
sbb
cmc
pshufw
add
xor
and
hlt
sbb
lock
mov
cld
xor
adc
mov
cmpsb
scas
nop
imul
push
xchg
sbb
mov
add
add
mov
arpl
nop
xor
hlt
ds
movsl
mov
cltd
xchg
add
sub
scas
mov
jl
or
sbb
pop
jp
mov
lahf
das
fs
sarl
arpl
das
icebp
inc
data16
and
clc
add
jae
pop
jo
xchg
fdivrs
push
jns
fiaddl
mov
xor
pop
shlb
push
lods
fidivs
scas
adc
push
ret
leave
cmp
insb
ja
mov
pop
cmpsb
dec
push
aad
outsl
loop
in
shrl
mov
in
xchg
or
mov
pop
jmp
mov
and
cmp
jg
mov
jl
bound
loope
pop
mov
cltd
je
pusha
ja
aaa
mov
ljmp
mov
and
nop
lock
leave
dec
and
js
and
sbb
jge
fsubrl
in
daa
out
add
and
push
jecxz
insl
pop
dec
cltd
adc
xor
add
xchg
cli
fwait
jmp
sahf
out
sahf
movsb
and
lcall
cld
sbb
test
cltd
mov
in
sub
dec
test
pusha
push
mov
push
cs
stos
sti
fbstp
arpl
jg
movsb
popa
xor
fisubl
mov
xchg
bound
or
and
test
push
push
dec
in
fbstp
sbb
arpl
push
adc
xchg
sbb
jmp
lds
daa
mov
mov
repz
faddp
dec
or
jp
or
sar
push
push
jge
add
jns
fneni(8087
loope
std
mov
sbb
xor
repnz
push
inc
into
mov
sbb
unpckhps
fsubl
les
inc
inc
mov
or
cmpsb
jmp
cmpsb
imul
leave
cmp
arpl
jmp
cmp
cltd
sbb
push
stos
ret
sbb
sbb
fsubrl
loop
stos
xor
cwtl
into
insb
cwtl
fistps
lods
pushf
insb
adc
jno
cmpl
push
mov
xchg
or
and
jo
pop
jbe
lods
jnp
movl
xchg
pushl
sbb
or
icebp
ljmp
mov
fmull
adc
cwtl
icebp
pop
mov
scas
outsb
loopne
test
jle
mov
mov
jmp
lds
inc
roll
fnstsw
pop
sub
pop
jge
add
mov
push
fmul
jns
lret
lcall
adc
aaa
mov
and
shll
xor
std
ja
fiaddl
inc
mov
aam
std
pop
pusha
push
inc
mov
sbb
test
add
xor
ret
lahf
sbb
jo
add
or
and
pop
lods
aaa
pop
cli
int3
setge
mov
por
ret
aas
sub
inc
adc
arpl
lods
cmc
or
jmp
jle
xchg
sub
and
or
push
mov
mov
aam
xor
jns
out
adc
sub
and
xchg
jnp
or
pop
add
out
xchg
loop
jo
mov
stc
jo
ja
sub
pushf
out
je
outsl
adc
loope
xor
aam
sub
mov
dec
andb
in
sub
inc
test
in
mov
pop
mov
push
insb
add
stos
mov
loopne
daa
addl
push
enter
rcll
sbb
inc
fstp
sub
push
gs
ljmp
aam
or
fs
adc
inc
in
inc
mov
in
xor
mov
dec
pop
adc
adc
pop
mov
into
add
push
mull
push
push
fstl
fst
popl
clc
pop
inc
inc
cld
dec
es
rolb
pop
xor
mov
test
addl
adc
mov
adc
xor
adc
scas
mov
xor
xchg
popa
inc
xlat
mov
roll
cwtl
add
xorl
sub
pop
mov
dec
and
test
sar
or
push
cmp
ss
roll
sbb
pop
jge
insl
dec
add
ficoml
push
add
cltd
jle
cld
add
add
in
mov
adc
and
sbb
push
sub
std
idiv
sub
add
mov
push
dec
or
arpl
xor
ja
adc
and
pop
cld
xchg
sbbb
adc
sub
push
adc
mulb
add
push
ss
jp
dec
mov
jbe
adc
rcrl
inc
inc
repz
jnp
sbb
jmp
out
xor
inc
fwait
jle
dec
adc
mov
add
int3
pop
add
push
xchg
cli
out
sub
sbb
cli
inc
cmp
mov
inc
fsts
xor
rcll
in
push
and
rcl
dec
dec
push
pusha
sub
je
fwait
cmp
inc
test
insb
pop
add
mov
add
clc
mov
adc
pop
or
test
push
push
jnp
push
out
mov
dec
fs
sub
aas
int
mov
inc
clc
push
push
movl
loope
add
add
shlb
inc
sub
ret
outsb
pop
inc
add
adc
add
push
or
repz
neg
mov
mov
sbb
push
lea
lret
sbb
adc
filds
push
test
ljmp
icebp
lea
add
cli
xorb
mov
and
sbb
xchg
mov
push
and
test
inc
hlt
cmp
push
fldt
lock
mov
mov
adc
cmp
cmp
dec
mov
mov
data16
jae
xchg
adc
mov
pop
mov
imul
jmp
pusha
or
push
cltd
xor
ret
inc
das
sbbb
jle
xor
mov
lock
push
lods
or
add
jp
sbb
add
push
cmp
sub
fs
sbb
in
arpl
test
jbe
xor
push
mov
pop
imul
cs
push
or
sub
cld
add
lods
dec
scas
faddp
mov
push
sub
mov
mov
aaa
sti
pop
sub
fiaddl
mov
sbb
sub
and
popa
lcall
mov
ds
rcrb
add
fistpll
push
cmc
xchg
notl
cmc
rorl
inc
das
mov
pop
inc
and
mov
and
xlat
nop
jo
mov
pop
cmp
cmp
add
xor
mov
lahf
rcl
sub
ja
mov
leave
mov
mov
inc
insb
scas
mov
mov
aam
jmp
movsl
cmp
inc
push
ljmp
push
shlb
add
adc
add
or
outsl
pushf
mov
loope
mov
aam
call
xchg
test
fsubs
xchg
xchg
push
aaa
dec
adc
bound
outsl
fistps
fildl
cmp
lahf
gs
shl
mov
rol
push
sub
cld
inc
aaa
sbb
lcall
incl
push
leave
jo
movmskps
mov
lahf
add
loopne
outsl
mov
out
xchg
das
out
pushf
cmp
out
pop
xor
ss
stos
cmp
imul
pop
shll
sub
arpl
xchg
pop
or
fistpl
or
sub
or
sub
fucomip
aaa
xchg
or
xor
test
cmp
or
lcall
aaa
es
movsl
sbb
in
xchg
mov
cmp
adc
or
mov
hlt
shlb
lock
mov
jp
sti
test
jb
enter
push
pop
xchg
or
enter
orl
ret
xor
in
std
arpl
jl
sbb
add
jne
gs
pusha
mov
adc
js
js
jecxz
lahf
sahf
fisttps
in
pop
jg
jp
sbb
outsb
lahf
sub
jnp
adc
aaa
sbb
mov
cmp
xchg
jbe
jae
daa
inc
inc
shlb
iret
inc
inc
out
xor
dec
sbb
xor
bound
sarl
add
adc
in
mov
mov
mov
pop
mov
or
add
pop
jno
jns
and
sbb
mov
jbe
sub
ljmp
cmc
andl
fstpl
pop
inc
imull
xchg
roll
mov
cmp
add
cmpsb
test
push
inc
sub
and
cmp
xorb
je
stc
daa
shlb
adc
movsl
cmp
adc
adc
add
enter
les
and
mov
sbb
cs
mov
mov
cmp
xor
adc
jp
or
and
rclb
sbb
idiv
mov
xchg
std
inc
and
mov
lcall
shll
add
xchg
mov
cmpsb
push
jae
loop
mov
push
imul
pop
add
or
fiaddl
add
add
cmp
dec
mov
xor
sub
repnz
adc
dec
mov
mov
out
rcl
mov
out
ss
or
xchg
dec
cmpsl
pop
mov
test
mov
xor
js
jno
adc
adc
enter
push
dec
inc
mov
pop
imul
mov
adc
sti
pop
repnz
lret
add
xor
inc
mov
adc
stos
push
inc
cwtl
ret
out
push
push
stos
loop
fwait
push
add
adc
mov
cmpsb
cltd
cmp
add
push
inc
out
mov
mov
and
cvtps2pi
fimull
les
fadds
mov
adc
test
and
xchg
jns
aas
or
cs
sub
or
adc
cmp
and
test
notb
mov
push
sub
push
sbb
and
add
ds
enter
rcll
int3
mov
sbb
fucomi
or
cmc
out
adc
dec
add
sub
add
repnz
imul
es
js
jae
jbe
and
inc
jge
loope
arpl
jb
add
sbb
fs
cwtl
push
push
shrb
insb
or
jg
fdivs
jmp
jne
adc
add
jb
adc
sbb
shlb
adc
es
and
or
push
andb
and
loop
xor
sti
mov
xor
xchg
xor
jecxz
and
or
pushf
cmpsb
out
ss
pop
mov
popf
enter
jo
lods
xchg
dec
loope
pop
push
les
inc
addr16
or
mov
add
xchg
add
insl
jecxz
mov
mov
in
jae
decl
out
clc
daa
loopne
sbb
inc
ret
jbe
pop
inc
add
test
cmp
aad
adc
ss
mov
cmp
pop
shl
dec
or
mov
unpcklps
ffreep
out
add
outsl
out
fadds
mov
stc
push
mov
addr16
and
lahf
mov
imul
mov
incb
insb
xchg
les
outsb
push
mov
or
xchg
add
mov
fistpll
pop
lret
imul
push
ja
xchg
imul
dec
data16
jg
test
inc
lock
loopne
sbb
outsl
and
mov
cmp
insl
sti
sub
mov
scas
xchg
mov
fstps
mov
aad
in
push
add
dec
mov
sbb
adc
shl
movsl
mov
and
lahf
cli
bound
pop
cld
jbe
push
or
mov
xchg
call
dec
fstpl
loopne
add
cmp
out
stc
frstor
fsubrs
daa
jge
shl
cs
adc
jecxz
icebp
outsl
xchg
imul
mov
cli
lea
fincstp
insl
int3
or
fldenv
adc
mov
shrl
test
add
cmp
ret
push
dec
fldt
adc
xor
sub
adc
mov
xor
popa
adc
or
in
mov
dec
mov
adc
repz
pop
popa
add
movsb
cmpsb
push
sbb
add
jmp
jns
inc
rcll
cli
push
bound
cltd
add
mov
mov
mov
fdivrs
sti
ret
jne
repnz
iret
negl
jno
or
fcmovu
outsl
fwait
xchg
xor
sub
sub
popa
sub
movsl
mov
mov
call
cmp
jecxz
clc
sub
cs
jp
test
loop
sbb
vmovdqa
jg
call
adc
insb
mov
push
push
and
add
lcall
mov
mov
aad
pushf
imul
sbb
mov
jno
insl
jmp
lcall
int3
and
subb
sub
cmpb
rcrb
mov
pop
sbb
mov
adcb
jmp
stc
xrelease
jecxz
xchg
jecxz
jmp
jno
jmp
sub
bound
xchg
les
jno
mov
push
fcmovnbe
and
or
sub
les
movsl
adcl
cmp
push
lahf
jp
bound
insb
outsb
sub
lretw
inc
mov
imul
clc
decl
sub
xchg
repz
lock
add
dec
mov
jg
fbstp
fdivrl
outsl
dec
add
leave
lret
pop
mov
jecxz
sub
push
sbb
sti
fistpll
dec
fisubl
aam
add
fldl
xor
jmp
xchg
insb
add
lea
push
push
xor
inc
sbb
je
mov
mov
xchg
mov
clc
jg
test
imul
cmp
inc
outsl
or
adc
adc
mov
sub
push
nop
sbb
add
addb
push
testb
dec
cld
in
in
jmp
loope
lret
out
ja
mov
std
jecxz
mov
pop
in
bound
pop
lock
mov
mov
xor
mov
sub
mov
mov
sarb
adc
fwait
xchg
sbb
jle
notb
add
cltd
mov
lock
pop
rcrb
push
push
inc
adc
pop
je
inc
mov
xchg
leave
mov
sarb
in
arpl
fwait
adc
xchg
repnz
mov
std
sbb
add
jecxz
dec
out
sbb
ss
adc
cli
cmp
mov
mov
ds
lock
dec
xor
das
mov
mov
jecxz
orb
ja
lea
popa
inc
cmp
popa
and
push
and
scas
clc
xchg
fs
lea
and
movsb
sbb
fs
sti
jg
shll
jg
loope
or
mov
lcall
sbbb
sti
push
sti
inc
add
jmp
jae
pop
loope
in
bound
sub
sbb
scas
cmp
mov
in
cmpsb
bound
ljmp
stos
or
jl
jne
jbe
add
leave
adc
shll
push
mov
sub
imulb
ret
mov
movsb
dec
out
mov
dec
jg
orl
insb
jbe
and
rclb
cld
or
aam
sub
test
mov
mov
shrl
addr16
lods
mov
mov
inc
shrb
xchg
rcrb
ljmp
mov
rcll
out
fimuls
xchg
and
addl
mov
push
fwait
jbe
nop
xor
mov
in
add
outsb
adc
aas
js
inc
mov
cltd
sbb
lcall
rcrb
xchg
add
cli
cmp
loop
stc
fucompp
aaa
stos
aas
mov
movsl
mov
cmpsl
pop
xor
cmp
bswap
lods
lock
fidivl
xchg
pop
int3
rcl
incl
lods
dec
add
stos
out
es
pop
xor
incb
mov
pushf
xor
push
xor
adc
add
fnstsw
decl
pop
cmp
cs
push
xor
rorl
push
mov
push
or
stos
and
xchg
inc
dec
imul
fisttpl
cmp
in
cmp
dec
fs
and
pop
aaa
mov
loopne
mov
std
push
inc
and
fistpl
jo
rorb
call
adc
js
add
pop
nop
clc
sbb
movb
ret
sub
in
sar
gs
jl
dec
adc
or
cmc
cmpsb
or
jo
or
arpl
or
in
cwtl
push
pop
loope
cmc
xor
push
roll
pop
shr
mov
or
fadds
and
and
lds
sbb
outsl
filds
mov
sar
xchg
jg
mov
and
and
sbb
adc
stc
stc
outsb
sub
aad
fwait
dec
mov
pop
jb
notb
push
or
not
add
sbb
lahf
ja
cmc
push
mov
lods
or
aad
inc
aad
mov
mov
fs
std
jg
incb
shrb
xchg
scas
cltd
add
cmp
xchg
aam
in
add
pop
ss
outsl
std
mov
cmpl
fstl
or
mov
jmp
push
std
ljmp
imul
xor
jb
push
cli
ljmp
add
push
and
xchg
or
shl
lcall
mov
push
mov
adc
aam
push
sbb
or
aaa
jbe
inc
mov
xchg
xchg
scas
sti
test
cmpsl
ss
call
icebp
dec
dec
into
add
jbe
outsl
ss
sbb
loopne
xchg
orb
sbb
out
call
cmp
mov
inc
ret
add
pusha
imul
mov
adcb
in
fldcw
lret
or
and
ljmp
je
push
pop
mov
push
fidivrs
mov
in
ret
mov
pop
adcl
stos
sbb
jmp
sub
lcall
movsl
push
jge
test
mov
scas
mov
clc
adcb
push
mov
inc
mov
mov
xchg
aaa
fildl
scas
jle
xchg
mov
aaa
incb
sbb
inc
cli
mov
push
cld
jg
inc
gs
mov
dec
frstor
dec
test
jl
lods
mov
into
gs
inc
jle
mov
std
ret
icebp
in
xchg
in
popa
test
cli
push
ja
adc
add
sbb
mov
mov
adc
xor
xchg
imul
sbb
cmp
add
adcl
and
or
rcrb
fidivrl
fnstsw
aaa
icebp
cltd
xchg
and
inc
addl
or
adc
scas
push
and
loopne
inc
ss
pop
add
mov
cld
and
mov
lea
jg
icebp
lret
stos
xchg
sbb
push
adc
bound
js
dec
fdivrs
cs
xchg
cmp
scas
rolb
aas
sub
push
dec
xlat
and
repnz
mov
std
and
cmpsl
add
stos
cmp
xor
das
pusha
add
add
lock
mov
push
aas
pusha
jbe
inc
fs
icebp
add
adc
into
repz
or
out
rolb
jl
add
add
mov
std
adc
ret
sub
push
sub
mov
sahf
es
inc
imul
pushw
add
mov
push
int
dec
xchg
and
lea
test
dec
aaa
xchg
adc
pop
push
pop
adc
mov
fcoml
jmp
inc
mov
mov
jge
rorl
rorl
pop
add
sbb
dec
in
insb
cwtl
adc
inc
or
add
adc
jb
fdiv
insl
sub
pop
adc
push
cmp
add
adc
or
and
mov
orl
inc
das
pop
aad
mov
lock
out
daa
jo
mov
imul
jecxz
push
sbb
js
pushf
jecxz
mov
pop
jno
jb
adc
inc
mov
rcrl
ret
jge
add
inc
lea
mov
sbb
adc
fdivr
ss
cmp
sub
mov
mov
insb
pop
lock
loopne
add
insb
cs
push
push
or
xchg
insb
adc
push
pop
add
inc
addr16
add
xchg
sub
sbb
mov
and
push
pop
sbbb
add
sub
dec
cmp
sbb
bound
aam
inc
mov
and
aaa
dec
data16
scas
mov
int3
dec
pop
sub
orb
bound
mov
imul
imul
mov
out
xchg
adc
cmc
lea
sahf
mov
ds
or
xor
je
jp
sbb
call
cli
mov
popf
leave
push
push
rorb
js
mov
repnz
inc
or
or
arpl
fiaddl
or
push
adc
push
cmpsb
mov
test
jp
push
cmp
aad
cwtl
mov
sbb
imul
sbb
fisubrs
or
or
cmp
add
bound
sbb
and
dec
inc
or
test
cmp
mov
and
daa
sbb
lret
and
sarb
mov
inc
pop
pop
jmp
pop
xor
cwtl
mov
rorl
dec
inc
jns
mov
data16
dec
sbb
xor
cmp
ljmp
or
fdivrs
sub
out
mov
lds
push
int3
sub
loopne
in
mov
sahf
add
insb
cld
lret
clc
pop
leave
pop
push
mov
xor
cmp
orb
in
sub
pop
push
cmp
inc
incb
xor
mov
cwtl
js
mov
test
fsubrs
cmpsb
mov
enter
fsubl
call
in
or
sbb
xchg
ret
idivl
test
outsb
dec
inc
inc
rol
sub
iret
call
dec
mov
rolb
push
testl
push
test
adc
mov
push
adc
dec
in
jno
sbb
cmc
sub
mov
fsts
negb
andb
xor
test
fildl
jb,pt
pushf
adc
or
inc
mov
pushf
nop
jmp
jb
add
inc
scas
jbe
sbb
pop
subb
adc
insl
push
or
mov
cs
sub
dec
insl
hlt
jg
cmovo
je
shlb
clc
mov
jle
xchg
mov
sbb
out
mov
push
stos
dec
and
stc
push
shll
cmp
fstps
loop
stc
lock
pop
mov
add
cmc
mov
and
movsl
pop
out
sub
addl
sub
stos
sub
and
test
icebp
cmp
adc
fcoml
cltd
and
shlb
out
rorl
push
xchg
sub
adc
mov
adc
pop
jns
pop
popa
or
test
xor
fs
insb
and
roll
sbb
test
das
cmp
filds
sub
adc
scas
pop
xchg
jno
push
pop
push
les
int
adc
mov
push
insb
rcrb
lock
push
jge
stos
cmp
mov
int
adc
mov
clc
dec
add
xchg
ficoms
ds
inc
imul
push
leave
mov
or
jle
pop
les
or
push
add
xchg
adc
mov
sub
mov
add
pop
test
push
popf
fdivs
iret
cmp
int3
xchg
push
inc
add
and
mov
lea
cmpsl
mov
fmul
or
xor
les
adc
pop
je
in
sbb
add
sub
mov
sub
enter
fadds
xor
mov
jbe
test
ja
es
inc
out
fsubrs
mov
jae
xor
fmull
xorb
jo
pushf
or
cwtl
mov
add
pop
or
mov
out
and
inc
aas
andl
or
loopne
add
xorb
popf
mov
mov
insb
lods
pop
inc
sbb
push
ds
fsubr
fbld
inc
xchg
test
jo
cmp
lock
mov
dec
add
mov
sarb
sub
add
out
clc
clc
sbb
clc
or
cld
mov
mov
and
lret
push
frndint
sbb
and
push
inc
adc
lock
mov
fldcw
adc
adc
and
fbld
and
inc
sub
dec
addr16
imul
loopne
je
add
mov
push
bound
fmul
sub
xchg
jae
mov
add
add
test
or
mov
or
inc
pop
adc
jns
fbld
push
sbb
es
dec
mov
or
mov
daa
push
xchg
push
mov
in
lock
loop
pop
mov
xchg
pop
cmpb
adc
add
lret
ss
or
cmp
addr16
inc
jae
inc
or
add
mov
and
sbb
loopne
popl
xchg
add
jb
pop
ljmp
mov
loope
rorl
xor
incl
sbb
bound
in
xchg
jb
adc
dec
inc
icebp
add
jmp
mov
mov
push
mov
adc
fildll
pop
lret
cmp
inc
dec
lods
xchg
xor
dec
or
xchg
aas
mov
ljmp
loope
filds
inc
mov
lea
xchg
or
aas
mov
and
xchg
stc
pop
mov
aas
enter
mov
jae
and
aaa
mov
lahf
xor
jne
add
jl
mov
rclb
sbb
dec
fsubrs
call
pop
mov
fstpl
in
stos
lret
ficoml
gs
lods
fstpl
in
loopne
cs
mov
push
cmp
pushl
adc
inc
and
sub
pusha
cld
sbb
add
cmp
cld
aas
inc
rolb
js
popf
or
push
ret
mov
xchg
out
cmp
shrl
mov
ret
rcr
call
hlt
dec
repz
adc
cmp
divb
inc
ror
mov
insl
mov
mov
sub
enter
pop
pusha
test
mov
mov
call
xchg
push
movsb
cmp
mov
nop
aad
insb
ret
lahf
mov
xchg
dec
push
mov
sub
out
and
pop
mov
sbb
or
jno
hlt
jbe
lock
mov
cmp
jb
rolb
push
mov
dec
ret
xor
push
in
xchg
in
mov
rorl
stos
dec
mov
arpl
rorl
lock
mov
adcb
pop
in
and
mov
adc
dec
add
add
sbb
and
or
int3
sti
add
lock
ret
enter
rorb
adc
mov
dec
test
or
sub
xor
mov
dec
in
and
sub
ss
xchg
sbb
xor
mov
mov
add
mov
mov
pop
addr16
mov
pop
in
xacquire
lods
inc
addr16
mov
test
push
jmp
pop
sbb
enter
jnp
sti
lret
push
pusha
js
jo
arpl
repnz
pop
ficomps
push
add
cli
or
inc
and
cmp
mov
pop
mov
and
sbb
pop
subl
xchg
mov
outsb
cld
mov
adc
mov
notb
xchg
andl
inc
jno
sub
xor
or
dec
cmpsl
mov
mov
pop
sbb
xchg
or
add
mov
lods
jbe
lods
std
cli
or
pushf
loopne
in
cltd
dec
mov
xor
outsb
loopne
pop
pop
rcrb
clc
jns
stos
in
aad
add
and
sub
add
subb
and
dec
adc
or
push
mov
mov
push
lea
mov
in
shrl
mov
pop
jb
mov
and
rcr
mov
sahf
adc
ja
mov
syscall
adc
mov
adc
imul
sbb
test
faddp
mov
add
cli
jg
xor
leave
adc
lock
rcr
aas
mov
jge
lods
xchg
and
sbb
xchg
inc
pop
aas
xor
jp
outsl
push
push
js
xchg
dec
push
in
add
jo
add
data16
mulb
stos
sbb
jb
mov
xor
in
inc
jecxz
pop
or
inc
outsl
push
mov
pop
lds
push
pop
enter
mov
ret
sbb
shrb
in
xchg
mov
jnp
call
cltd
sbb
mov
push
in
js
leave
imul
in
lcall
mov
mov
ret
push
in
cmp
push
and
mov
sbb
add
lahf
xorb
dec
les
stos
test
call
pop
mov
xchg
and
orl
pop
popf
push
loopne
in
ret
mov
sbb
add
inc
sub
xor
lcall
rolb
sarl
loopne
mov
mov
inc
mull
aas
pop
sbb
ljmp
or
fwait
jb
mov
leave
add
adc
push
es
aad
inc
cld
pop
xor
icebp
mull
adc
mov
in
in
push
repnz
sbb
lea
sub
cld
fdivp
mov
fnsave
add
push
mov
sub
aad
pusha
mov
fmull
or
jo
mov
push
addb
xchg
dec
and
mov
jmp
pop
mov
sub
data16
loop
and
adc
sub
testl
mov
pop
add
in
adc
popa
or
add
xor
dec
lret
in
mov
loopne
out
cmp
xchg
jecxz
mov
bound
or
pop
inc
pop
lea
xchg
and
jge
add
lcall
call
dec
sarb
popa
push
adc
inc
sbb
inc
xchg
mov
add
fbld
imulb
or
xchg
dec
inc
shl
push
xchg
in
mov
icebp
icebp
push
les
jo
or
das
or
lods
icebp
subl
push
dec
mov
cmpl
cmp
call
sbb
inc
and
or
cmp
mov
add
or
push
idivl
push
shll
and
in
sbb
int
push
sub
inc
adc
dec
push
fstpt
fisttps
aam
mov
add
xorb
push
rolb
dec
inc
sti
sub
out
mov
aas
lods
xchg
inc
shlb
inc
orb
test
aas
lea
jecxz
and
inc
test
inc
xor
lret
xchg
xor
xorl
sti
and
js
xor
mov
lods
push
adc
jne
mov
or
test
push
sbb
sub
mov
adc
xchg
lcall
dec
jb
imul
jb
jb
mov
ds
cli
fstpl
mov
outsl
jle
cmp
sbbb
hlt
push
ds
push
mov
pop
jl
repz
repz
lea
loop
stc
clc
mov
push
adc
lock
out
addr16
cmp
cmp
cmp
pop
outsl
jno
hlt
mov
jno
insb
lods
jl
push
sbb
and
js
add
xor
dec
mov
outsl
rcll
dec
clc
cmp
add
clc
add
repnz
xchg
cli
mov
pop
aam
cli
adcl
jmp
ds
mov
pop
cmpsl
pop
lcall
nop
add
pop
push
repz
clc
lods
shr
cmp
xchg
jl
orb
add
mov
shrl
inc
repz
dec
aaa
push
inc
shlb
subl
mov
js
mov
and
dec
jg
add
mov
icebp
and
sahf
mov
sbb
fistl
mov
shrb
ljmp
or
pop
cli
or
test
inc
sbb
shlb
inc
sub
addr16
adc
movsb
xchg
push
push
mov
rolb
test
mov
cld
sub
and
sbb
jbe
push
cmp
lret
cmpsb
inc
xchg
mov
dec
out
nop
mov
lahf
loopne
rolb
aad
dec
cmp
idivl
add
lcall
in
inc
pop
jb
test
leave
dec
mov
push
lcall
inc
jno
outsl
clc
sub
cmpl
sbb
adc
incb
mov
cwtl
lock
test
loope
mov
jno
mov
add
jle
jo
xlat
pop
inc
ret
push
mov
fbld
popa
add
daa
imul
adc
cmp
add
dec
outsb
inc
aam
push
and
cltd
mov
or
sub
jmp
lcall
inc
in
adc
and
inc
out
mov
pusha
bound
mov
loope
in
sub
sub
pop
ja
test
lock
faddl
or
dec
cmp
mov
sti
jae
shl
push
push
addr16
sub
or
pop
mov
lods
xchg
ss
mov
pop
js
and
cmp
push
std
pushf
inc
push
nop
fwait
loop
xchg
out
push
imul
daa
in
jo,pt
jp
xor
popa
and
scas
test
xchg
cs
cmp
icebp
adc
mov
popa
jge
jle
mov
inc
out
stos
sub
or
out
std
dec
inc
sarb
popf
aaa
mov
in
xchg
xorb
icebp
xchg
xchg
sar
js
in
aas
jp
int
xchg
call
ja
mov
sub
insl
push
jmp
cmpsl
add
and
stc
dec
mov
fimuls
cmp
sub
sbb
or
stos
out
movsl
outsl
sbb
xchg
mov
pop
out
adc
in
test
je
push
test
add
movsb
je
mov
sub
add
sub
ret
faddl
mov
dec
add
xchg
dec
mov
jg
js
fwait
mov
enter
rolb
les
out
shl
mov
fldl
mov
rcrb
adc
jmp
push
ss
test
lret
je
jg
pop
iret
inc
enter
fisttps
xchg
or
jecxz
out
test
imul
and
mov
outsb
adc
or
in
jbe
mov
xor
or
inc
add
or
xor
aaa
mov
jecxz
pop
push
inc
std
int
sub
cmp
pop
fstpt
shrb
xchg
jl
pop
mov
pop
andl
mov
dec
jne
push
sub
call
add
inc
push
lea
add
push
out
lret
mov
jg
std
jle
test
push
icebp
pop
jl
stos
xlat
cmp
lods
push
cld
fcomip
scas
aad
dec
pop
into
std
fists
je
in
xchg
lock
push
imul
push
xor
push
mov
out
jmp
out
leave
xor
or
bound
int
mov
adc
pop
push
dec
rolb
addb
rcll
das
sub
lahf
fiadds
lcall
inc
dec
sub
jl
ret
pop
and
or
rcr
sbb
jnp
sarl
add
mov
jo
filds
add
cmp
push
mov
sub
mov
jg
sahf
fsub
xor
int
sub
mov
and
mov
adc
dec
lock
cmp
out
mov
lds
xchg
sub
xchg
push
inc
sub
xor
jb
xchg
js
pop
mov
bound
test
sbb
addb
int
cmp
xchg
adc
dec
adc
rorb
movsb
clc
push
arpl
nop
dec
lcall
dec
add
push
add
or
add
jle
push
add
lea
insl
xor
dec
sbb
enter
mov
mov
in
add
test
or
cs
and
scas
push
inc
fcoms
inc
jmp
adc
mov
inc
hlt
lahf
scas
sbb
add
pop
stos
lcall
xor
add
ficomps
test
or
jb
dec
outsl
dec
push
inc
rolb
mov
mov
sub
inc
les
cmp
and
pop
cmp
repz
inc
shll
and
ljmp
shl
and
aam
hlt
lret
xchg
and
jg
mov
mov
or
cmpb
bound
and
mov
loop
xor
pushf
jnp
adc
fs
xchg
mov
test
or
idiv
push
add
xchg
clc
push
mov
gs
cli
lea
or
mov
mov
push
cmpsb
fcomps
adc
mov
pop
nop
mov
nop
rcrb
retw
push
test
aas
push
stc
adc
add
adc
mov
insl
lock
mov
push
mov
rcrl
icebp
adcb
xchg
dec
mov
xor
adc
pop
loopne
inc
cltd
bound
and
and
pop
mov
fldcw
inc
mov
xor
and
cli
jnp
scas
idivl
inc
orb
movsl
add
or
mov
in
mov
mov
inc
sub
or
leave
dec
fs
sbb
int3
mov
mov
daa
jp
test
call
clc
push
mov
jp
icebp
and
rcr
pop
ja
jl
or
fisubrs
xor
sbb
imul
and
lcall
je
mov
fists
pop
cld
ss
mov
leave
inc
mov
add
inc
pop
cwtl
inc
cmp
add
clc
decl
pop
cli
arpl
jnp
addr16
inc
outsb
ds
adc
push
cmp
dec
nop
jno
push
mov
xchg
sahf
imul
inc
mov
pop
int
in
in
loope
inc
or
adc
xorl
outsl
cld
adc
loope
jl
js
mov
nop
lret
lds
cmpsl
pushf
pop
pop
dec
dec
cmp
test
pop
ja
clc
fldl
sbb
mov
xor
clc
test
call
cmp
fsubs
jbe
and
arpl
decl
cmc
dec
or
push
adc
xor
icebp
add
lock
fcoml
mov
mov
call
rcll
dec
fstl
cmp
add
inc
mov
mov
adc
or
dec
je
sti
pop
sar
loop
xchg
insb
iret
lock
insl
xor
aad
in
and
xchg
jne
cltd
inc
test
push
adcb
cmp
xchg
negb
cs
ss
push
add
lock
mov
sbbb
repz
inc
sub
sub
lock
add
mov
and
or
adc
dec
mov
out
cmpsb
icebp
outsl
inc
sub
inc
rcll
stos
test
jle
rcrl
nopl
scas
pop
mov
icebp
or
les
data16
arpl
mov
lock
icebp
jmp
xchg
out
push
in
hlt
push
or
mov
les
adc
aam
pop
push
leave
mov
fimull
je
mov
sbb
ficompl
inc
and
es
fisttpll
xor
and
fistpl
pop
outsb
rcrl
addl
cmc
jmp
sbb
mov
add
adc
jne
pop
insb
add
and
mov
lret
inc
movb
dec
hlt
push
push
mov
mov
icebp
push
or
push
add
das
xor
adc
inc
out
and
mov
or
xchg
fadd
pop
lret
xchg
fsubrl
leave
mov
sub
aam
sub
pop
jg
xor
inc
sub
lock
out
lods
dec
or
pop
add
fwait
mov
popa
inc
pushf
aam
push
and
sub
leave
sub
adc
mov
or
andl
loope
add
je
cmp
sub
jno
daa
aam
mov
add
or
dec
push
ret
adcl
add
js
pusha
inc
test
mov
inc
mov
cwtl
inc
aas
icebp
int3
and
jae
dec
cwtl
lock
ja
and
add
aas
ja
repz
in
mov
cmpl
fcomi
fcmove
add
cli
pop
btc
ret
rclb
or
aaa
and
sub
cli
sar
fcompl
mov
pusha
clc
dec
rorb
and
in
faddl
loopne
inc
mov
jmp
pusha
push
fucomi
push
out
fucom
gs
push
out
adc
popf
push
lock
subb
arpl
push
and
ud0
push
cs
test
int3
jae
ja
int3
fbld
bound
cmp
pop
and
test
les
sub
bound
dec
jmp
push
fwait
test
inc
lock
lcall
push
jmp
pop
push
cmp
add
nop
and
aad
in
sbb
jo
inc
int
out
xor
push
insb
mov
mov
fldcw
cwtl
or
inc
daa
xor
ja
fisttpll
jmp
imul
bound
enter
push
lods
inc
lcall
cmpsl
adc
jbe
sub
test
out
jecxz
dec
pusha
lret
pop
fstl
test
sbb
mov
adc
bound
mov
paddusw
mov
cmp
jmp
aam
push
dec
and
push
mov
int
add
inc
push
ljmp
inc
mov
sbb
or
popf
sti
aaa
dec
icebp
jb
or
scas
push
push
test
dec
and
fldt
dec
or
inc
adc
psubd
xor
hlt
bound
add
insl
aaa
fwait
adc
xchg
arpl
cmp
mov
pop
testl
sub
cs
shll
inc
sub
dec
inc
add
fldl
inc
add
loop
mov
mov
xchg
call
test
aaa
pop
dec
xor
adcb
ror
xchg
push
pop
adc
andb
jnp
inc
sub
mov
stc
lods
insb
push
aam
or
arpl
sti
pop
add
cmp
jbe
or
mov
idivb
in
popl
in
aas
inc
cld
rcrb
sub
stos
and
jmp
and
arpl
into
add
mov
xchg
sbb
add
sub
pop
or
in
cmc
xchg
stos
in
mov
into
cmp
arpl
fst
cmp
jle
dec
ret
shlb
push
lea
out
fimuls
push
cmp
jge
jbe
mov
jg
je
movsb
sub
xor
inc
mov
jl
cwtl
dec
sbb
std
cmp
jne
inc
and
call
or
jmp
cmp
mov
out
cmp
iret
inc
sti
cmp
xchg
pop
sbb
and
push
xchg
xor
jns
ja
or
sbb
lret
xor
and
inc
lahf
lods
mov
jae
jo
adc
loopne
jo
insl
out
test
fists
jbe
add
mov
lcall
sub
sub
pop
icebp
ret
in
push
mov
pop
jge
sarb
clc
jmp
xor
add
test
or
inc
cmpps
push
add
mov
sbb
outsl
in
mov
test
jb
mov
add
pop
xor
dec
es
movsl
enter
add
imul
add
fld
bound
lock
dec
push
jae
or
sub
fwait
and
inc
rcl
loope
xchg
mov
mov
hlt
dec
adc
cmp
mov
pop
xchg
or
nop
les
pusha
loope
and
sub
jmp
jge
cld
inc
xor
or
xchg
test
jae
push
mov
enter
adc
addb
mov
dec
je
jmp
xlat
pop
cltd
sub
loope
adc
leave
cwtl
cmp
ljmp
jge
and
inc
add
popa
jno
add
push
scas
cltd
fisubs
mov
and
adc
dec
push
rcrb
inc
pop
pusha
adc
cmp
push
loopne
ljmp
fmull
adc
and
int
pusha
repnz
mov
shrl
loopne
pop
add
loopne
jmp
ds
xor
add
jle
shl
insb
add
push
movsl
test
adc
fsubrs
cmp
jmp
loop
cmp
adc
sub
fisubrl
movsb
and
movsb
andb
mov
int3
sahf
test
adc
jmp
or
xor
or
xor
jb
lods
mov
int3
xor
lods
inc
outsl
inc
or
mov
add
ds
andb
xor
fidivs
int3
or
push
loopne
iret
sbb
cmp
or
shll
sub
lock
mov
jo
out
push
movsl
mov
xor
push
push
xchg
es
loope
jae
testl
and
xor
pusha
cmp
int3
mov
add
jnp
xchg
mov
sti
mov
jo
das
dec
cmpsl
sub
fisttps
subb
cmp
jne
sbb
aam
popf
mov
mov
jmp
ljmp
outsb
mov
add
ds
jmp
aaa
inc
add
pop
rol
inc
inc
mov
jne
push
xchg
ja
fstl
inc
inc
scas
add
lods
push
xor
int3
lcall
xchg
pop
into
and
arpl
mov
hlt
mov
stos
pop
cmp
stos
mov
sahf
fisubl
or
fildll
cmp
mov
or
adc
andb
pop
mov
imul
xor
mov
movsb
sbb
cmp
test
ja
adc
mov
push
clc
das
cmp
inc
add
clc
in
cmp
jnp
pop
shll
aad
mov
ss
xchg
cmpl
mov
and
lock
sbb
sbbb
rolb
xchg
out
addr16
cwtl
cs
loopne
ds
jae
fwait
jbe
jmp
sbb
push
or
fs
pop
loopne
push
cmpsl
or
jecxz
fimull
mov
sub
mov
inc
xchg
scas
and
sub
test
cmpsl
xlat
iret
push
sub
mov
inc
out
js
push
pop
inc
mov
add
imul
orb
lock
shr
xor
push
push
cmp
mov
test
dec
icebp
push
mov
xchg
insb
mov
cli
test
or
dec
fwait
lcall
xor
icebp
xchg
jle
sbb
cwtl
adc
adc
sbb
fsts
mov
jmp
sub
sub
and
addr16
mov
mov
pop
xchg
cmpsb
push
pop
test
xchg
sub
pusha
and
adc
cmp
rcrb
and
fidivs
testl
stos
adc
adcb
inc
add
in
js
es
cmp
adc
repz
ret
jg
aas
test
pushf
fimull
sbb
pop
or
mov
jecxz
mov
mov
pop
cwtl
js
ret
xorb
pop
sub
mov
test
sub
mov
stos
repz
xchg
mull
clc
or
or
push
decl
orl
dec
xor
xchg
and
mov
and
hlt
adc
push
add
push
out
pop
movsb
jbe
add
mov
dec
inc
sub
and
mov
fmuls
lods
xor
out
out
dec
pop
sub
cmp
cli
push
push
adc
add
in
out
into
fmuls
dec
or
add
in
jp
stc
fcomps
pop
insl
mov
or
add
cwtl
and
fdivrl
mov
rorb
push
data16
mov
xor
outsb
inc
and
inc
and
add
push
push
pop
fisubl
add
and
xlat
pushf
fimuls
pop
inc
outsl
dec
adc
aaa
arpl
fcoml
es
ret
sahf
addl
call
cmp
and
fidivl
data16
inc
adcb
xor
jle
aaa
cmc
jge
add
or
cmp
jae
jo
adc
sbb
loopne
mov
push
das
stos
lock
mov
movsb
add
es
or
aas
cmp
iret
xlat
rolb
aaa
sarl
pushf
xchg
mov
mov
mov
xor
mov
faddl
or
inc
mov
cmp
loop
xor
push
push
pusha
add
stos
xor
loopne
jnp
xlat
dec
rorl
sbb
adc
popa
pusha
mov
xor
iret
xor
fidivl
testl
aad
test
inc
push
inc
mov
mov
sbb
jb
push
pop
sbb
or
adc
dec
inc
fsubs
aad
or
xor
movsl
outsb
push
lcall
sarl
sbb
icebp
iret
cmc
cmp
or
pop
cmp
dec
mov
lea
xchg
add
mulb
add
and
push
inc
fimuls
pop
fstps
sbb
add
sbb
push
xor
add
adc
mov
lret
xchg
sub
or
add
pushf
xor
and
rcrb
stc
and
test
and
dec
fsubrs
push
pop
aas
inc
lret
sbb
cmpsb
mov
inc
inc
jb
aas
adc
mov
jecxz
lock
mov
gs
mov
inc
jmp
mov
adc
mov
adc
jnp
mov
xchg
pushf
xor
divb
mov
mov
fisubrs
test
inc
push
add
mov
es
or
jecxz
test
or
in
mov
out
nop
ret
js
xchg
sub
xorb
add
fcoml
jp
lds
into
test
rcrl
mov
or
inc
js
mov
sbb
cmp
mov
movsb
idiv
popa
call
adc
loopne
js
adc
fsts
or
push
daa
mov
fcomip
in
rorb
in
shlb
push
shl
cmpsl
daa
test
and
xor
sub
adc
mov
jmp
or
fwait
xor
cld
pop
pop
adc
mov
mov
pop
popl
aad
or
loop
in
xor
add
and
dec
xor
cs
divl
and
add
adc
outsb
or
add
fsubrl
neg
outsl
and
mov
sub
jp
inc
sub
aad
or
sub
jbe
roll
adc
push
xchg
test
loopne
adc
out
push
sub
inc
shlb
push
iret
mov
data16
shll
push
addr16
push
orb
xor
rorb
out
shr
pushl
sbb
and
dec
inc
lds
pop
fistl
push
fdivl
loope
lcall
enter
daa
jl
lods
fdivr
shll
or
sahf
sub
mov
inc
xchg
xchg
imul
rolb
push
jp
repnz
flds
fstl
push
lret
add
dec
notl
inc
insb
divb
and
stc
mov
jecxz
orl
add
add
outsb
adc
adc
out
mov
push
dec
gs
adc
cltd
mov
ljmp
push
aam
xchg
mov
cmpsb
lds
and
hlt
sarb
sub
xchg
sbb
mov
push
fildll
add
mov
ror
push
push
imul
add
mov
test
pop
mov
gs
gs
ljmp
and
insl
and
es
addb
push
inc
fdivl
addps
fisttps
arpl
fisubrs
add
sbb
call
addr16
sahf
mov
scas
fs
movsb
mov
xor
xor
or
or
fcompl
adc
test
and
sub
and
cltd
imul
jg,pn
pop
dec
push
cmp
adc
je
sbb
sub
lods
cwtl
rcr
addb
shl
es
cmp
aad
mov
sub
jg
stos
cmc
jle
cwtl
shlb
into
adc
push
int3
add
std
daa
fs
fs
out
add
testl
mov
mov
mov
mov
adc
mov
imul
pop
dec
pop
inc
lock
mov
jnp
mov
fadds
in
or
imulb
ds
lods
ret
jg
sub
pushf
repnz
outsb
hlt
sub
test
add
inc
ljmp
scas
dec
pop
mov
sahf
cmp
imul
xchg
adc
push
mov
or
call
loopne
addb
sti
cld
fbld
mov
sbb
hlt
lahf
hlt
mov
cld
and
mov
rcrl
push
into
jb
and
cmp
adc
dec
or
add
hlt
jo
fsubrl
popf
lods
lahf
ds
jl
jl
mov
fiadds
dec
jb
je
and
xchg
mov
jo
inc
int
cwtl
js
clc
loop
pushf
mov
xor
adc
pop
push
and
lret
in
pop
sbb
repz
sbb
in
and
pop
jno
movsb
pop
shl
es
scas
shlb
push
loopne
call
push
pop
or
or
mov
adc
cmp
lcall
loope
jne
lahf
cld
sbb
leave
int
inc
add
mov
daa
mov
jle
ret
test
insl
cmp
ds
js
and
pop
sbb
ds
fisubl
xchg
cs
shl
dec
sahf
loop
xchg
nop
and
into
ss
movsb
pop
cmp
sub
out
dec
inc
out
inc
shlb
data16
into
inc
test
subl
subl
loopne
inc
lods
mov
pop
test
lock
aam
cwtl
lret
xchg
sub
mov
ja
inc
xor
aaa
inc
sbb
dec
dec
out
add
movl
add
fwait
jp
mov
xor
insb
out
cmp
into
mov
cmp
xchg
dec
adc
cmp
fildl
inc
outsb
pop
add
add
add
add
add
adc
lods
pop
xor
inc
add
pusha
sub
pushf
xchg
movsb
pop
inc
cmp
sbb
push
sub
jle
mov
mov
push
cmpsl
push
pusha
xchg
ret
mov
push
lods
pop
xor
jl
mov
jecxz
sbbb
jbe
loope
fs
orl
adc
mov
xchg
fsubrl
insb
adc
lds
xor
scas
scas
add
adc
out
or
xchg
jmp
aaa
xor
cltd
dec
jge
arpl
or
sub
lods
arpl
push
repz
popf
sub
bnd
hlt
lahf
adc
add
int
jae
or
rolb
jle
inc
cmpsb
mov
rorl
or
sub
leave
jp
and
sbb
sub
xor
add
js
imul
orb
xor
inc
sar
std
adc
add
jns
call
pop
neg
clc
arpl
pop
fistl
add
shlb
sub
pop
adc
pop
movsb
shl
ret
jmp
mov
cmp
jne
cmpsl
out
fstpt
jnp
sbb
cmp
inc
jne
add
mov
push
mov
sub
clc
test
sub
je
lds
xchg
xchg
fs
in
adc
or
das
xchg
faddl
subb
or
mov
or
xchg
and
shll
push
pop
sar
and
push
or
and
sbb
mov
xor
aaa
inc
cli
dec
aad
push
add
push
jo
sub
pop
cmp
jae
nop
call
out
or
test
test
ja
pop
xchg
push
adc
dec
aam
mov
cmp
jb
inc
loopne
rcll
xchg
cs
bound
iret
sbb
popf
movsl
repnz
mov
inc
mov
adc
fisubrs
push
xchg
add
mov
cmp
xor
cs
arpl
xor
xor
or
out
pop
sub
inc
push
or
or
stc
stos
pop
addr16
test
inc
push
into
es
sarb
in
xor
les
aas
test
inc
sti
mov
inc
add
inc
fldcw
or
loop
test
push
daa
jge
inc
pop
sub
pop
jne
lea
cmp
xor
xor
inc
stos
push
cmp
fsub
mov
ljmp
add
rclb
jbe
rorb
in
es
inc
cmp
add
fadds
sbbb
lcall
stos
sti
mov
add
out
dec
dec
stos
jecxz
inc
pop
lock
sub
sub
adc
into
cmpb
cmp
fstps
push
cmp
pop
es
fiadds
adc
add
es
or
push
jo
push
add
sub
and
xor
inc
cmp
cmpsb
cwtl
push
daa
or
outsl
roll
cmc
add
mov
fidivrl
shlb
int
popf
or
lds
out
lahf
ljmp
add
int3
subb
in
inc
mov
adc
loopne
xchg
lods
mov
mov
imul
fbld
daa
int
pop
jb
inc
and
dec
adc
sub
xchg
sub
adc
add
arpl
daa
mov
lock
add
inc
imul
daa
adc
add
jl
mov
sti
shll
cli
data16
popa
or
into
jae
add
cmc
and
jle
pusha
push
cwtl
bound
enter
call
dec
add
adc
popf
test
aas
out
mov
add
xchg
adc
inc
inc
fwait
les
pop
mov
pop
add
sahf
add
jmp
das
ret
inc
push
push
pop
cmp
or
cwtl
jmp
test
jae
leave
rorb
push
xor
mov
xchg
orl
subb
test
xchg
push
das
shlb
out
mov
imul
push
pusha
or
in
inc
dec
enter
mov
in
xchg
stos
jp
mov
xor
xchg
adc
add
outsl
cmp
rcrb
fisttpll
or
or
inc
outsl
or
jmp
add
push
xor
and
mov
int3
pop
in
jae
cld
inc
popa
mov
and
inc
adc
mov
add
sub
xchg
mov
xor
mov
shlb
sbb
and
fistps
add
lds
or
shrl
inc
or
pop
aam
pop
adc
jp
mov
jle
nop
add
leave
push
adc
jmp
test
push
mov
fldcw
push
inc
sub
jecxz
cmpl
sbb
ret
add
mov
push
cltd
mov
test
fistps
imul
cmc
leave
in
xchg
mov
fwait
movsl
or
jp
cwtl
movsl
pop
arpl
imulb
mov
and
xor
mov
lods
aaa
je
adc
adcb
dec
pop
push
inc
mov
cs
and
push
inc
ljmp
add
pop
js
push
cmp
int
mov
scas
jbe
pop
pop
add
sti
sub
add
ds
pushl
and
lods
inc
std
xchg
inc
cmp
sbb
sbb
xlat
push
push
push
in
mov
call
push
popf
lahf
ljmp
inc
and
xchg
decl
aam
xchg
or
push
dec
or
xchg
and
inc
push
jmp
es
and
pop
push
in
das
ja
lret
and
test
pop
popa
dec
fdivs
push
and
dec
loope
sub
int3
jns
pop
xor
ror
int3
push
movsb
outsl
mov
lods
int3
enter
scas
in
inc
adc
jl
mov
out
push
inc
outsb
mov
cmc
cli
ja
ficomps
ss
pushf
mov
lods
pusha
adc
rclb
and
cmp
mov
decb
push
std
aaa
inc
lea
test
mov
jbe
xchg
insb
mov
ds
insl
fisubrl
xchg
ret
stos
mov
xor
or
jl
lea
testl
add
adcl
into
pushf
xor
loopne
add
jbe
mov
pushf
andb
xchg
loope
dec
call
mov
clc
rdmsr
je
or
add
sub
sub
shl
adc
adc
cmp
sub
aas
or
sub
mov
adc
sub
adc
call
mov
cmp
outsl
or
fs
cli
and
push
clc
xchg
mov
adc
mov
mov
cld
mov
test
lret
sub
testb
mov
sbb
clc
lock
mov
popl
lds
mov
xchg
clc
dec
daa
fcoml
addr16
adc
adcb
dec
in
fcmovnu
push
add
adc
adc
sarl
mov
sahf
std
fcoms
ret
lods
and
aam
or
jg
cld
in
mov
add
xor
ss
xchg
fsub
inc
and
add
ret
loopne
inc
call
jp
fdivs
sbb
add
sub
pop
cmpsb
shlb
or
shlb
xor
mov
add
or
sub
jg
out
int3
pusha
xchg
addb
adc
icebp
bound
ss
push
mov
push
and
add
in
cmp
xor
ret
mov
in
push
sbb
sub
add
cwtl
rol
stos
mov
push
clc
push
mov
sbb
push
inc
xor
cmpps
sbb
call
jmp
test
add
clc
or
repnz
mov
or
and
or
xchg
sti
pop
and
or
and
mov
in
jne
test
cmp
fisttpl
push
shrl
inc
sbb
mov
and
mov
xchg
jo
and
inc
add
test
std
dec
leave
sbbb
push
outsl
jb
adc
jmp
imul
fisttpl
test
decl
xchg
xchg
mov
push
ret
adc
js
jp
inc
jecxz
out
add
rcr
mov
fmul
push
jno
cmp
mov
cmp
mov
jo
movsb
cltd
sbb
orb
pop
sub
pop
cwtl
sub
add
lods
out
xor
push
adc
xchg
xchg
ret
out
xor
mov
out
xchg
pusha
inc
adc
mov
jmp
aad
loope
call
push
aaa
inc
movsb
jbe
xor
ljmp
pop
jmp
sbb
jno
sub
adc
or
dec
mov
xor
jbe
pop
outsl
lret
ret
jl
lahf
jnp
stos
push
loopne
insb
cld
pop
inc
test
xor
andb
ss
popf
es
adcb
ja
inc
les
fsubs
cs
fiaddl
push
or
xchg
fs
cs
mov
les
sub
das
test
inc
popf
dec
out
dec
add
hlt
lds
outsb
outsl
sti
stos
subb
and
pop
shl
outsl
shl
xor
jg
push
std
push
add
sti
push
imul
adc
aam
cli
test
pop
repnz
imul
test
shl
cmp
les
and
add
jmp
push
or
xchg
push
lret
rorl
push
out
push
add
pop
ljmp
or
add
mov
xchg
popaw
mov
shrb
xor
xchg
test
in
inc
dec
mov
data16
jecxz
sub
mov
sti
add
xchg
jbe
lods
sbb
mov
push
mov
sub
sahf
pop
fimuls
and
mov
mov
aad
and
jbe
ja
pop
mov
push
xlat
pop
push
lahf
push
sarl
jg
pop
add
push
inc
push
pop
in
pop
xor
dec
outsb
call
in
idivw
adc
jmp
dec
in
pop
ja
mov
xchg
mov
adc
push
dec
pusha
rcl
push
jmp
dec
push
pop
jl
fs
cmc
xor
lods
sbb
lock
sub
pop
loopne
rcr
xor
loopne
or
mov
stc
fistl
mov
sbbl
pop
in
adc
int3
decl
or
pop
js
ljmp
push
jae
inc
pop
cmp
fldt
mov
mov
add
dec
inc
test
je
adc
lods
mov
loope
mov
daa
dec
shll
outsl
push
pop
inc
add
adc
clc
ret
jp
jge
adc
test
add
rolb
ss
je
pop
xchg
test
push
sbb
popf
icebp
clc
mov
pop
sti
repnz
adc
xor
push
cmp
mov
push
insl
aad
insl
gs
jns
sub
icebp
decl
jnp
mov
push
cmpsb
imulb
or
ljmp
fdivs
or
pusha
or
push
mov
xchg
shll
cmpsb
ret
test
inc
jnp
xor
stos
pushf
hlt
in
sbb
rclb
lea
sub
mov
scas
add
adc
sbb
fildll
push
cmp
ja
mov
push
mov
ret
mov
xlat
std
pop
jne
in
outsl
push
xchg
jno
pop
xchg
adc
les
sahf
aaa
andl
ljmp
jle
les
or
xchg
fildll
stc
outsl
fcomi
fisttpl
push
aam
push
and
scas
add
rorb
inc
pop
dec
int3
rcll
clc
or
mov
test
mov
xor
ret
or
adc
mov
mov
ret
push
xor
or
pusha
mov
cmp
push
nop
sub
mov
fwait
and
sbb
outsb
inc
mov
xchg
out
xchg
subb
fsubl
loopne
outsb
dec
xor
js
imul
dec
cltd
push
fsts
and
adc
sbb
cmp
xchg
sub
mov
dec
mov
mov
mov
aad
rcrb
in
sbbb
inc
sub
lret
adc
mov
cld
jg
addb
xor
fldcw
scas
or
in
int
mov
leave
jmp
test
lock
outsb
call
mov
dec
inc
mov
das
add
in
xchg
and
rcr
xchg
sub
add
jnp
out
into
pusha
gs
fistl
in
pushl
add
mov
pop
xor
mov
push
sub
xchg
in
aaa
fsubrl
faddl
mov
mov
mov
out
adc
inc
lock
xchg
fildll
xor
pushl
rorb
icebp
and
or
pop
dec
cmpsl
mov
sub
sbb
or
jecxz
inc
pop
stos
addl
cmp
stos
sbb
fsubr
push
je
or
jmp
fistps
sub
inc
mov
mov
push
out
inc
adc
adc
push
rcll
ds
repz
inc
loop
xchg
cltd
cld
push
jbe
adcb
arpl
add
and
push
outsl
sub
and
fimull
cltd
sbb
das
fucomi
pop
stos
ljmp
clc
mov
push
fs
inc
dec
ret
mov
js
pushf
push
notl
ss
dec
add
in
dec
lea
inc
lret
mov
nop
sahf
jbe
fisttps
lock
or
fadds
fsubrs
ficompl
inc
dec
pop
cmpl
push
and
pop
sbb
jge
jbe
pop
mov
pop
mov
fwait
add
dec
mov
pop
add
call
mov
std
push
pop
ret
pop
mov
enter
clc
add
cmp
mov
pop
mov
test
rcll
add
mov
mov
stos
jae
add
adc
mov
mov
aad
pop
repz
in
jecxz
push
cmp
inc
subb
pop
push
ret
inc
add
aaa
add
inc
xchg
dec
dec
cmpsl
loope
xchg
ss
and
push
shlb
frstor
pop
adc
hlt
call
test
dec
or
mov
mov
pop
or
cmp
jnp
daa
into
mov
nop
fisubrl
xlat
dec
rclb
push
hlt
pop
fwait
sbb
push
inc
add
xchg
pop
push
inc
xchg
mov
push
mov
icebp
dec
xor
pop
pop
in
leave
and
ss
incl
inc
sbb
mov
adc
or
adc
sbb
in
test
jg
rolb
loopne
xchg
inc
repz
fiaddl
cmpsb
adc
cmpsb
push
cmp
clc
jg
mov
clc
movsl
popf
daa
ss
cmp
leave
ss
mov
fsubl
mov
orl
test
iret
mov
rcrl
jle
xchg
mov
and
pop
xor
jge
mov
clc
or
dec
cmpb
popa
in
ljmp
nop
sbb
movsl
sbb
stc
sub
pop
sub
fcmovnu
addl
inc
ficoms
add
test
test
ret
loope
mov
pop
push
neg
mov
rcrb
cmp
cs
jns
mov
call
xor
sub
ret
push
xchg
ret
stc
dec
repz
andl
xchg
jge
xchg
sahf
stos
adc
popa
sub
push
test
in
testb
or
out
int3
fwait
stos
testb
inc
outsl
cmp
ficoml
jl
aad
jne
popa
jbe
pop
and
ficompl
mov
lahf
mov
mov
loopne
pop
je
xor
inc
or
fistpll
test
pop
ret
rolb
test
mov
ffreep
add
in
dec
dec
mov
fidivs
fnstsw
inc
mov
cs
ret
ret
test
jp
mov
psubsw
push
or
outsb
int
mov
pop
mov
push
out
es
mov
adc
shlb
pop
in
sub
mov
push
inc
adc
and
dec
cmp
sarb
jg
sarl
mov
sub
pop
mov
shll
js
mov
rorl
repnz
dec
js
xor
push
sub
mov
adc
jae
imul
xchg
popf
adc
test
cli
jecxz
jnp
push
insl
fadds
pop
stc
ss
inc
or
leave
nop
arpl
lea
lods
movsl
jo
mov
fbstp
sbb
push
add
inc
xchg
pop
ds
sti
adc
xor
cmp
xor
pushl
call
mov
outsb
lret
sbb
or
out
outsl
or
dec
xlat
dec
ret
mov
add
movsb
mov
mov
and
dec
clc
inc
aas
fidivrs
es
shll
and
hlt
int
mov
cli
ret
mov
jp
shrb
insl
stos
ss
iret
xchg
push
mov
fisubrl
mov
bound
cltd
mov
lcall
jo
push
mov
enter
jnp
lods
xchg
add
pop
outsb
push
jg
std
shrl
js
in
lret
arpl
ljmp
test
cmp
jge
push
cmp
cs
outsl
fldl
cld
inc
inc
hlt
aaa
cmc
adc
mov
shrb
ja
cmpsb
mov
ret
add
mov
outsl
mov
mov
inc
push
rorl
sub
ljmp
sti
add
loop
stc
xchg
or
jo
and
int
xchg
test
cli
lret
sbb
outsl
xlat
pop
mov
ss
jbe
pop
inc
loopne
push
push
loop
mov
aas
mov
push
pop
jbe
ja
sub
mov
ret
shlb
cld
sbb
mov
mov
and
mov
mov
inc
mov
enter
jg
pop
sub
inc
scas
cwtl
out
adc
mov
test
repnz
mov
or
inc
scas
fsubrs
jg
out
adc
outsl
mov
adc
stc
and
inc
sbb
and
fwait
popa
xlat
lods
dec
inc
cwtl
stos
stos
jecxz
mov
jg
cmpl
cmovle
cmp
dec
mov
and
mov
scas
popf
sti
jg
nop
inc
nop
fiadds
mov
push
mov
mov
mov
push
sub
jl
xor
xchg
mov
outsl
mov
cwtl
sub
xorl
addr16
or
jbe
outsl
dec
fmuls
pop
push
clc
push
daa
or
lods
stos
in
int
xor
test
xor
cmpsl
ud1
in
add
pop
xor
sbb
mov
jmp
add
je
loopne
popf
andl
pop
add
pop
into
dec
jne
out
sbb
jmp
jg
popa
js
push
push
pop
ja
pop
cmp
adc
cld
mov
outsb
loop
sbb
in
sahf
and
xor
dec
insb
aas
hlt
adc
xor
stos
fistpll
jecxz
inc
sbb
cmc
xlat
push
std
inc
push
sbb
mov
and
lods
inc
add
outsl
fldenv
mov
or
aam
shl
imul
xor
ljmp
ja
repnz
mov
and
cmp
ficomps
dec
jl
dec
loope
sbb
mov
sti
loope
das
xchg
clc
cld
aas
push
pop
fiadds
lret
cmp
lock
xchg
cs
pop
pop
adc
and
cld
or
or
push
int3
andb
movsb
pop
faddl
in
daa
jbe
push
imul
jnp,pn
outsl
orb
dec
cld
adc
or
aas
sbb
jecxz
popa
mov
ljmp
dec
rorl
shl
lock
lock
outsl
cld
mov
sbbb
add
xchg
dec
lcall
cwtl
pop
mov
and
in
cld
test
jno
jae
jge
mov
out
cli
mov
aam
mov
jle
cltd
push
jle
rcrl
std
shlb
rorl
cmp
mov
push
orl
ljmp
adc
jno
ret
sti
je
les
fs
jb
pusha
pop
pusha
movl
loope
mov
jnp
arpl
repnz
sarb
inc
mov
orb
or
fstl
xor
cli
fistpll
inc
testl
cmp
inc
mov
mov
xor
imull
add
mov
cld
stos
fcmovnu
je
dec
sbb
imul
cli
fistpl
and
or
cs
imulb
jmp
mov
call
out
test
pop
std
push
cmc
aaa
mov
sbb
jmp
mov
outsb
or
jb
push
outsl
cs
adc
sub
add
imul
pop
inc
enter
xchg
hlt
mov
cmp
aaa
ljmp
out
outsb
test
insb
dec
or
xor
xchg
dec
jl
mov
aas
stc
xlat
into
adc
or
adc
mov
cmp
sub
fnsave
and
adc
or
fistpll
dec
outsb
mov
sub
stc
xor
scas
jno
push
xchg
fwait
stos
add
ret
push
fiaddl
mov
out
loop
inc
adc
aam
cmp
in
jle
cs
pusha
mov
mov
sub
in
fucomi
and
inc
mov
int3
bound
es
mov
in
jae
or
dec
nop
aam
outsb
std
add
lahf
sbb
les
and
xchg
pop
ret
jmp
pop
mov
cli
imul
insb
adc
cmp
outsb
icebp
cmpsl
and
xchg
movsl
xor
mov
lods
push
rcrw
sbb
hlt
pushf
lret
mov
add
xor
clc
adc
clc
pop
push
jecxz
or
dec
cmp
dec
add
sub
movsl
movsl
js
adc
pop
sbb
aaa
dec
aam
je
inc
out
xor
jmp
add
and
loopne
mov
fstpt
dec
xchg
xor
mov
mov
and
jmp
fwait
sbb
or
push
inc
ja
in
mov
fidivrs
inc
push
inc
xchg
sbbb
sub
int3
jecxz
dec
jo
cmpl
loopne
cmc
cmp
stc
icebp
imul
imul
jne
jecxz
and
add
les
mov
fldt
jno
mov
movsb
sub
stc
pop
mov
xchg
push
out
jae
xchg
and
jbe
push
inc
bound
nop
add
adc
push
imul
stos
mov
sub
pop
lea
push
dec
cwtl
inc
clc
rorb
movsl
pop
shrl
fdivs
test
mov
jbe
cli
push
mov
inc
mov
ds
and
jmp
pop
ret
imul
add
stos
dec
adc
inc
sti
sar
adc
out
add
fbld
das
adc
dec
sub
mov
push
stos
add
add
out
mov
xchg
xorb
inc
mov
repnz
pop
pop
mov
fcomip
mov
hlt
adc
or
in
push
xchg
je
sarb
loopne
adc
xchg
xchg
sbb
mov
xchg
push
cmp
and
testb
mov
xor
je
mov
call
popl
dec
int
enter
mov
mov
popa
outsl
add
xchg
mov
in
xchg
aaa
cmp
mov
sub
mov
dec
pop
popa
into
xlat
add
and
loopne
sub
add
pusha
dec
inc
icebp
mov
add
adc
dec
xor
pop
xchg
inc
roll
inc
adc
or
js
mov
adc
dec
mov
xor
fs
aam
mov
push
sub
int3
or
and
inc
add
fisttpl
mov
dec
pop
int3
mov
loopne
dec
inc
push
loope
lcall
and
icebp
adc
test
or
cmpsl
jnp
dec
push
mov
and
int3
push
sub
push
neg
outsl
sub
mov
jp
je
loop
inc
pop
adc
adc
push
lds
jecxz
nop
mov
or
pop
adc
pushf
jp
push
subl
adc
xchg
adc
popa
leave
rcr
inc
mov
or
and
add
out
les
enter
dec
or
add
test
ja
mov
inc
adc
mov
mov
adc
sbb
cmp
sbb
xor
and
and
jge
les
xor
leave
and
mov
fldlg2
add
inc
scas
xchg
xchg
sub
sbb
movsb
push
sub
mov
mov
stc
fs
mov
data16
lret
iret
mov
push
pop
push
int
popa
fiaddl
mov
add
lock
jg
ljmp
orb
xchg
lds
jne
dec
cmp
mov
push
mov
stos
inc
adc
adc
fwait
nop
add
lock
mov
sub
mov
cltd
sbb
mov
adc
jl
push
jbe
mov
roll
ficoms
add
push
mov
test
subl
xor
or
or
and
push
jle
and
xor
rclb
leave
or
adc
adc
repnz
insb
and
add
xlat
test
inc
add
sbb
outsl
ja
decl
mov
cmp
and
dec
hlt
or
push
stc
lock
xor
sub
fsubs
test
or
add
inc
dec
je
or
aam
jbe
add
inc
sub
add
add
fidivl
fstp
aam
or
rorb
jno
sub
push
add
pop
inc
out
bound
and
sub
enter
inc
dec
orb
faddl
lea
call
xor
lock
adc
cwtl
ss
je
ds
out
or
in
rcrb
adc
fimuls
mov
inc
push
stos
jp
inc
sbb
fildll
sbb
push
add
aam
cmp
jge
and
das
jb
int3
pop
es
cltd
in
pop
mov
fdiv
add
cmp
pop
mov
leave
outsb
dec
and
insl
push
pop
dec
sub
push
mov
or
repnz
or
pop
pop
cmp
push
adcb
cmc
les
sbb
xchg
inc
icebp
sbb
das
or
pushf
int
pop
jge
inc
pop
daa
mov
shlb
stos
addb
and
cmp
mov
lods
in
pop
xor
or
rcrb
shll
dec
lock
leave
mov
aaa
push
jbe
inc
cmp
lcall
sub
mov
and
add
cmp
adc
insl
add
fisubrs
jmp
xor
test
stos
mov
push
mov
sbb
mov
clc
out
mov
jmp
fisttps
inc
sbb
pop
loop
adc
pop
mov
loope
cmc
adc
dec
xor
ss
mov
nop
imul
mov
adc
jl
jle
insl
mov
inc
mov
mov
ret
les
mov
adc
add
in
mov
popf
fnsave
cwtl
js
imul
lods
push
or
sbb
sbb
mov
fsubp
cmc
lods
add
popa
sub
lds
fisubs
ret
sti
call
fcoml
or
push
in
pop
pop
pop
jb
sbb
jg
mov
add
loope
and
mov
adc
sbb
fst
ss
or
or
and
in
pop
clc
xchg
add
push
fnstsw
pop
movsb
in
test
inc
push
mov
mov
fnstcw
or
js
mov
jo
xchg
or
pop
lock
jge
pusha
push
loopne
rorb
pop
sbb
mov
les
cld
frstor
in
dec
adc
dec
or
xor
cmpsb
aas
dec
shlb
jns
pop
jnp
pop
sti
cmpsl
inc
int
loope
sub
jecxz
enter
pop
dec
sub
es
sti
in
sbb
jmp
insb
icebp
sub
outsl
fcomp
je
pop
add
fs
cmp
cmp
adc
mov
pushl
xchg
cmp
scas
inc
dec
lods
movsl
pusha
lcall
adc
inc
lea
nop
fs
lods
mov
iret
int
arpl
or
aad
mov
inc
mov
mov
inc
outsl
pop
mov
adc
aaa
or
adc
ffree
adc
pushf
outsb
inc
add
add
pop
sub
rclb
iret
dec
mov
ss
je
aaa
sub
imul
inc
fwait
rcl
adc
repz
mov
mov
dec
mov
xchg
dec
or
cmpsb
fsubl
and
lcall
mov
jo
sbb
fisttpll
aam
in
jge
lcall
aaa
push
scas
xchg
std
dec
in
jno
inc
les
testl
mov
mov
pop
rol
inc
lock
sub
xlat
fildll
or
xor
lahf
mov
stc
repz
packuswb
pop
push
push
inc
mov
add
lea
mov
adc
xchg
test
cld
sbb
daa
leavew
es
sub
pop
xor
mov
stos
mov
or
inc
mov
inc
stos
stos
cli
hlt
movsl
sbb
pop
inc
iret
xlat
sbb
add
arpl
ror
int3
imul
lea
mov
imul
jle
or
lret
sbb
in
in
loopne
push
add
mov
inc
stos
aaa
add
fdivl
mov
fisubs
sbb
and
jno
push
aaa
or
mov
and
leave
xchg
jl
call
inc
or
mov
jge
ja
pop
or
js
mov
call
test
push
mov
mov
xlat
sbb
push
sti
imul
stc
addr16
rclb
jg
add
jno
mov
cmc
cmpsb
cs
jne
and
sbb
insl
adc
ja,pt
stos
scas
movsb
or
inc
xchg
push
jmp
push
movsb
out
cmp
xchg
adcb
pushf
or
fdivs
sbb
icebp
mov
sbb
or
loop
or
hlt
adc
movsl
sbb
aam
or
pusha
sbb
adc
push
push
inc
sbb
sti
xor
adc
cmp
fcmovu
test
daa
clc
imul
loopne
xlat
clc
sti
and
or
adc
push
xor
add
add
sub
xor
mov
lahf
ja
andl
xor
sub
and
clc
fs
adc
mov
add
pop
int3
push
dec
sub
das
outsb
arpl
outsb
adc
cmp
test
clc
fsubrl
lcall
mov
cmp
add
fs
jnp
inc
xor
rcll
or
pop
jnp
sbb
test
mov
in
sub
cmpsb
adc
inc
outsb
inc
mov
push
in
notl
push
cld
push
xchg
cmp
sar
loop
mov
test
adc
mov
sub
cmp
call
jle
shll
or
adc
aam
aam
xchg
fcmovu
add
mov
dec
adc
fisubs
int3
jg
into
mov
dec
sbbl
repnz
aas
dec
push
dec
insb
dec
cmp
and
cli
stos
loop
shlb
or
mov
or
stc
test
mov
imull
sbb
pop
outsl
push
cmp
inc
out
cmp
push
xchg
lret
sbb
dec
call
jg
mov
in
push
and
jp
mov
pop
das
rolb
sbb
dec
sub
mov
nop
in
add
dec
cmp
pop
mov
pop
cmp
inc
std
pop
lock
lods
and
push
jne
icebp
add
cmpsb
incl
outsl
lds
popf
and
or
out
jp
sti
jae
andl
xchg
scas
mov
push
leave
das
mov
enter
mov
popa
in
outsl
incl
cld
adc
negb
inc
sbb
cmp
movsl
sbb
roll
movsb
imul
and
shlb
inc
mov
mov
mov
jg
inc
and
inc
pop
subl
jl
or
jo
std
shr
lret
clc
inc
push
arpl
ret
mov
in
add
push
test
add
mov
popf
mov
cld
pop
cmp
rorb
jl
adcl
in
das
adc
pop
cmp
jns
xor
outsb
fldt
stc
inc
push
cmpsl
clc
loop
repz
das
fsubl
lcall
jb
cmc
mov
repnz
lock
pop
in
dec
or
mov
xchg
sti
jge
and
hlt
dec
sbb
mov
and
into
clc
push
jne
xor
inc
jmp
add
ret
cmc
test
jne
push
push
cmp
fmul
or
lcall
lcall
and
pushf
jle
decl
lret
shll
fmull
jg
mov
outsl
icebp
push
xchg
insl
in
in
or
hlt
in
loop
cmp
or
xor
push
xchg
test
and
gs
ret
pop
sbb
sbb
push
aaa
pop
and
pop
dec
mov
je
rcr
stos
xorl
adc
cmpsl
mov
add
xchg
bound
test
or
mov
push
pop
fdivrl
xchg
or
pop
outsb
cmp
mov
sahf
inc
mov
in
insl
loope
jecxz
mov
scas
or
sub
sbb
push
mov
adc
jp
xchg
aam
subl
mov
ret
push
das
sub
inc
ret
xor
cltd
lock
hlt
cld
test
cmpsb
pop
sahf
push
xchg
movb
call
test
jbe
xor
mov
inc
xor
dec
or
pop
scas
test
test
jl
pop
pop
push
mov
shl
sub
fistpl
push
add
call
repz
fsub
inc
cmp
rclb
inc
jae
dec
push
ljmp
inc
mov
mov
push
and
imul
frstor
jo
push
pop
repnz
pop
je,pt
jl
in
call
mov
cmp
add
xchg
and
or
clc
movsl
divb
mov
mov
xchg
push
outsl
push
adc
mov
jo
sbb
clc
aam
testb
dec
cmpsb
test
and
push
inc
dec
sub
push
or
xlat
cld
js
pop
jne
lods
decl
cmpsl
or
js
scas
inc
dec
push
mov
ret
push
fiaddl
sbb
pop
clc
push
fsubrs
outsb
les
ss
fnstenv
mov
les
out
ljmp
adc
sbb
in
xchg
xchg
test
insb
pop
mov
jmp
push
test
add
jg
lret
add
sar
mov
fbstp
cmp
pop
aaa
lret
orb
test
cmpsb
or
cwtl
mov
scas
push
adc
loop
lods
cmp
mov
push
jnp
inc
xor
pop
sbb
jg
xchg
icebp
xlat
push
pop
cmp
arpl
icebp
lods
lea
inc
mov
mov
or
or
aam
cwtl
fidivrl
ljmp
dec
jg
loopne
in
push
test
lds
outsb
mov
out
test
inc
push
orb
scas
dec
sbb
mov
cmc
xchg
and
icebp
gs
fildll
push
repz
aad
fs
and
cmp
push
aam
push
dec
orb
cmp
and
add
pushl
jp
mov
dec
sub
sarl
sub
or
stos
into
sub
inc
or
fisttps
add
lds
mov
pop
push
out
cmp
stc
xor
xchg
or
test
in
pop
stc
loop
push
sarb
out
or
cs
lahf
adc
cmp
shlb
xor
or
enter
js
mov
mov
add
add
mov
popf
js
gs
leave
and
sbb
out
mov
ljmp
sbb
mov
mov
jae
sbb
dec
adc
and
and
les
bound
add
insb
lock
add
pop
push
scas
out
popw
and
or
or
sub
and
mov
mov
add
enter
bound
adc
enter
pop
iret
cvtpi2ps
popf
mov
aaa
sbb
mov
xor
test
and
lcall
in
inc
clc
dec
add
imul
pop
xchg
daa
fadds
mov
adc
mov
shr
str
and
adcb
push
subl
jg
add
icebp
pop
fidivrl
es
stc
cmp
adc
xorl
outsl
rcll
cmpsl
pusha
ret
mov
cmp
inc
and
add
in
push
mov
dec
in
sub
out
mov
ss
into
push
push
add
or
sbb
xor
adc
inc
and
je
inc
in
stc
dec
and
ss
mov
ja
scas
mov
addb
jge
sub
mov
mov
adc
mov
mov
decl
add
stc
push
popf
pop
mov
fbld
sub
add
mov
inc
xchg
test
outsb
mov
mov
loop
push
xor
ja
mov
insb
push
fmuls
mov
push
push
sub
and
jnp
dec
data16
or
xor
cmp
pop
mov
call
ss
mov
sahf
push
es
and
adc
sti
out
sub
push
sub
insb
inc
pop
stos
popa
mov
push
mov
scas
movsb
sbb
inc
je
lock
sub
pop
out
add
push
fdiv
mov
xor
outsb
mov
loop
xchg
xor
incb
mov
mov
into
stos
push
rolb
ffree
fucomip
das
and
and
decb
mov
adc
pop
je
lods
outsl
mov
and
sbb
sbb
fbstp
in
not
adc
cmp
stos
ja
sar
subl
cmp
fistpl
lea
mov
jp
pushl
or
dec
lods
jae
daa
lods
addr16
shrl
ljmp
or
lcall
outsl
clc
scas
mov
and
movsb
xor
cmc
inc
mov
fs
incl
jmp
lret
fldl
mov
cmp
and
jno
or
loopne
jge
popa
outsb
mov
fbld
mov
jne
push
clc
fdivrl
outsl
fiaddl
fmull
jecxz
inc
enter
and
outsl
fsts
adc
fwait
ljmp
movsb
mov
mov
sar
rorb
add
inc
adc
adc
mov
nop
js
mov
lret
mov
shrb
sarl
popf
inc
jle
out
out
sub
pop
movsb
aam
in
jp
jae
sub
inc
aam
adc
cli
mov
ss
xchg
mov
popa
xchg
add
les
and
pusha
lods
jmp
fsubr
jb
shrb
sbb
inc
sub
lret
push
inc
arpl
stc
inc
sbb
dec
adc
mov
movsl
out
loopne
iret
fcomi
mov
push
mov
fsts
adc
inc
pop
in
repnz
adc
cmp
pusha
xor
dec
add
inc
loope
pop
aad
xorl
jecxz
sarl
das
loope
mov
xlat
sub
add
dec
jge
xchg
inc
and
or
aaa
stos
push
leave
repz
scas
outsb
sbb
ljmp
jle
push
popf
movsb
xchg
ret
mov
loop
fs
fisttps
pop
scas
push
and
add
inc
loopne
xor
add
movsl
neg
pop
aad
out
pop
cs
enter
es
popf
subb
mov
inc
mov
in
inc
or
es
xchg
adc
popa
add
mov
adc
adc
inc
stc
rcrl
fldt
fildl
or
in
ja
outsb
es
push
or
xchg
pop
cli
adc
js
jb
sub
neg
xchg
rcl
push
pop
test
int3
mov
pop
fimuls
add
add
inc
out
jecxz
mov
movsl
mov
and
dec
push
and
sahf
xor
xlat
sub
xor
push
mov
mov
add
out
cltd
pop
addb
sbbl
int
add
sub
add
rol
ljmp
push
hlt
lds
insb
jp
mov
push
dec
add
dec
enter
sbb
outsb
cmp
stos
sub
icebp
cmp
aas
sbb
sbb
xor
dec
mov
or
add
pusha
shlb
jl
adc
lahf
and
dec
les
jae
inc
or
adc
js
cmp
inc
mov
push
lods
mov
mov
scas
lds
mov
mov
inc
pop
enter
fnstenv
sbb
enter
cwtl
sub
mov
sbb
mov
addr16
add
imul
or
mov
outsb
mov
ds
push
clc
push
daa
or
popf
sub
push
jle
test
stos
dec
inc
dec
or
loop
sub
push
enter
aam
inc
cmpsl
mov
push
jne
lcall
add
cmpsl
arpl
inc
sbb
or
in
enter
ret
and
inc
xchg
popf
jae
cmpsl
mov
lahf
out
or
inc
add
inc
adc
out
pop
or
or
clc
inc
and
subb
pop
int
lock
cmp
sbb
mov
out
addb
ficomps
insl
xor
add
jne
mov
xor
pop
mov
std
sbb
sub
adc
adc
imul
insb
inc
mov
push
fdivl
mov
push
cmc
fadds
imul
sahf
test
jae
fsubrp
or
enter
mov
rcll
pusha
jo
daa
adc
pushf
enter
dec
add
push
push
and
das
call
pop
inc
call
test
push
shlb
cld
ret
sbb
adc
push
popf
pop
push
mov
bound
pop
mov
and
adc
dec
stos
adc
lret
pop
sbb
mov
dec
fldl
or
push
shll
lea
lcall
mov
pop
in
mov
hlt
pop
mov
roll
add
popf
xor
clc
aas
adc
lock
mov
jle
mov
dec
or
pop
dec
jl
pop
ret
rolb
mov
mov
rcrl
aam
push
mov
fadds
xchg
adc
dec
imull
pop
loop
sub
jle
add
std
jg
add
or
in
sbb
xchg
mov
pop
loopne
add
out
mov
xor
cli
sub
xchg
mov
out
inc
aad
mov
jl
mov
test
ret
mov
dec
sarb
lret
mov
rclb
mov
pop
sbb
mov
inc
ja
aam
arpl
and
fdivl
sbb
outsl
mov
test
mov
push
repz
inc
aad
mov
icebp
jecxz
call
nop
push
pop
mov
dec
adc
test
inc
push
test
ss
les
sub
in
sub
flds
fildl
inc
jmp
movsb
mov
fdivrp
imul
fsubl
xor
decb
or
loope
lret
adc
movsb
xchg
mov
lea
xchg
and
aad
outsb
pop
loop
stc
cmp
adc
and
lahf
cmc
movsl
negb
imul
mov
inc
add
jge
das
sub
data16
jecxz
fisttpl
jg
xchg
insl
xor
std
scas
pop
jbe
xchg
icebp
or
mov
test
pushl
or
pop
pushf
dec
mov
jg
and
ds
dec
sub
cmp
adc
stc
pop
jl
pushf
or
or
jle
pushf
loope
sbb
inc
sub
jg
and
mov
andl
sbb
shrb
mov
and
xchg
xchg
lds
test
lret
jo
xchg
xchg
int3
push
cwtl
or
jmp
or
cmp
jge
jmp
cwtl
mov
popf
scas
inc
andb
inc
iret
push
fsub
push
pop
int3
xor
or
enter
push
sub
cs
mov
les
ljmp
and
mov
sbbl
cmp
shrl
insb
aaa
fcompl
mov
pop
int
push
push
icebp
jbe
cs
push
int
mov
stos
mov
repz
jg
and
adc
add
mov
xchg
icebp
shlb
xchg
int3
xchg
mov
inc
sub
sub
dec
lahf
ret
insl
sub
sahf
mov
aad
push
pop
aad
sbb
mov
shr
push
shlb
pop
ret
adc
je
sar
clc
or
dec
jp
iret
xor
jns
test
pop
out
cld
loopne
mov
std
aas
adc
decl
pop
aaa
inc
jae
xchg
adc
test
lds
call
fisubl
faddp
cmpsb
mov
test
addr16
cmp
adc
ret
das
mov
lods
lcall
push
pop
mov
cmp
cmpl
add
cmp
js
movsb
fistps
sub
scas
or
cmpsb
dec
fnstcw
xor
addr16
mov
je
push
xchg
out
mov
imul
and
iret
jno
xor
jno
iret
enter
cli
aaa
or
out
or
inc
add
pusha
orb
xchg
out
pop
push
dec
pop
mov
cmp
cmp
mov
mov
lcall
in
scas
and
xor
fldl
lahf
scas
mov
cmp
mov
pop
in
lcall
cmp
insl
aam
pushf
add
mov
rcl
inc
in
data16
orb
xor
ret
inc
mov
enter
xor
shll
pop
and
inc
in
add
mov
ret
insb
inc
mov
in
je
fstpl
mov
sub
fdivrl
outsl
push
push
cmp
cmp
mov
dec
mov
inc
je
js
jb
mov
dec
stc
mov
inc
sbbb
add
xor
enter
imul
push
mov
jbe
inc
inc
cwtl
and
mov
mov
fs
shll
dec
lods
test
push
add
dec
xor
adc
xchg
jmp
adc
dec
mov
das
out
sub
je
sti
or
out
inc
cmp
mov
jne
in
lock
pop
lods
ljmp
sub
ret
cmp
ret
decl
out
inc
adcl
sbb
mov
sbb
mov
repz
loop
mov
in
and
aaa
jmp
mov
mov
jp
fistpll
and
push
push
loope
test
fidivrs
jns
cmp
sub
jo
adc
jp
and
inc
dec
clc
xor
xchg
mov
dec
call
fistpll
mov
leave
push
fwait
or
test
das
or
fisttpl
and
mov
jg
and
add
mov
insl
push
push
pop
and
and
mov
xorl
mov
mov
cmc
pop
cld
mov
scas
adc
and
sub
sub
repz
push
inc
cwtl
cmc
movsl
xchg
ja
adc
aas
rcll
mov
sub
das
mov
es
aam
fildl
shll
xor
call
adc
inc
icebp
mov
inc
push
clc
addr16
in
test
insl
sbb
mov
cmp
mov
das
insb
std
pop
enter
ret
mov
inc
mov
inc
mov
jp
inc
js
sub
mov
sbb
cmp
mov
dec
fsubrs
jne
mov
or
push
dec
shrb
jle
dec
add
jo
mov
out
ss
mov
scas
leave
ss
iret
mov
pop
orl
pop
fbld
incb
movsb
or
and
push
pop
mov
icebp
in
mov
mov
cwtl
lret
popf
jecxz
mov
ja
mov
jp
mov
shrl
inc
push
adc
mov
push
dec
adc
sub
push
add
int3
into
sbbb
dec
fsin
out
sub
push
xchg
pop
jle
in
dec
cmc
mov
mov
lods
ret
in
cld
ljmp
cmp
arpl
xor
daa
pop
fucomip
or
test
leave
notb
clc
ljmp
jg
jns
dec
rcr
adc
mov
adc
inc
les
mov
xchg
pop
add
fistl
jo
or
lods
mov
les
pop
inc
mov
pop
adc
xor
mov
sbb
jmp
cs
hlt
or
lea
add
or
sbb
xchg
ljmp
sub
and
pop
shl
negb
cmp
push
cs
ret
hlt
adc
insb
add
scas
outsl
rcrl
lock
and
lret
mov
flds
jecxz
or
adc
mov
ljmp
and
lods
add
mov
inc
iret
mov
jg
jle
and
sub
or
in
outsb
mov
mov
movsl
mov
outsl
sti
dec
push
or
xchg
or
clc
or
pop
lret
repnz
pop
adc
negl
jg
push
rclb
xchg
cmp
outsb
cld
dec
inc
cmp
xchg
sbb
sbb
pop
sub
rorb
mov
mov
mov
dec
out
icebp
pop
inc
or
cmc
addl
mov
fsubl
sub
adc
std
or
data16
or
lret
mov
inc
daa
aam
pusha
and
xor
cmp
mov
pop
sbbb
pop
add
sub
push
bound
inc
xchg
or
iret
adc
xchg
xchg
sbb
gs
add
loopne
fisubrs
mov
jge
loopne
fistpl
stos
data16
jae
dec
aaa
xor
jbe
sbb
in
mov
add
xchg
add
sbb
in
sahf
mov
fs
orl
add
dec
mov
pop
jne
push
jne
rcll
lock
sbb
jnp
adc
xor
nop
cs
in
add
and
es
adc
jb
inc
push
hlt
bound
lock
push
inc
push
jg
je
xchg
insb
loop
repz
adc
mov
fisubrs
aad
xchg
or
dec
xchg
and
adc
push
cmc
movsl
ss
cmc
mov
imul
mulb
fs
lock
inc
std
sub
mov
shl
push
test
das
mov
pop
nop
in
mov
iret
lods
pop
cld
mov
mov
push
xor
add
pusha
and
push
push
sbb
adc
sbb
push
std
xchg
xor
fnstsw
cmpsl
cld
je
and
jo
rcrl
add
add
addb
cld
gs
jp
xchg
andl
sbb
sahf
mov
adc
aaa
sbb
inc
fucomip
rorb
dec
sbb
push
mov
pop
inc
xor
out
inc
aam
push
fnstenv
int3
call
lret
jp
mov
rclb
popf
icebp
sarb
shlb
movsb
xor
adc
mov
hlt
push
push
aam
mov
dec
jo
fs
notb
test
mov
ficoml
cmpsl
push
xor
cld
xchg
xchg
xchg
xor
scas
adc
leave
push
sarl
cs
mov
adc
dec
lock
jge
pop
and
inc
fidivs
sbb
push
sub
sub
loop
dec
adc
pop
or
shlb
in
adc
les
loopne
mov
sub
xor
push
incl
sbb
adc
dec
gs
loop
jb
call
jbe
add
aad
add
mov
decb
cltd
sti
sahf
call
ficompl
adc
nop
fstpl
mov
jecxz
adc
add
je
insb
rol
push
or
test
int3
dec
rorl
push
dec
push
or
dec
pusha
xchg
icebp
or
bound
cmp
pushl
scas
cmpsl
mov
mov
and
or
lret
dec
call
pop
mov
dec
mov
sbb
inc
pop
cli
jle
xchg
mov
mov
or
push
push
enter
ds
mov
push
mov
loop
lret
fs
mov
mov
call
and
sbb
or
inc
adc
push
jp
xchg
iret
push
mov
push
cld
loope
inc
adc
test
sub
incb
and
outsl
add
les
pop
mov
ljmp
push
fwait
leave
lods
cli
xor
push
inc
lock
adc
mov
dec
nop
cli
jg
mov
mov
cli
push
pop
imul
in
sub
test
aaa
test
cmpl
cwtl
sbb
mov
mov
sbb
adc
pop
jmp
outsb
outsl
jg
aaa
push
mov
jg
sbb
fdiv
test
popf
aam
push
lcall
pop
adc
fs
adcb
mov
fmul
push
stos
shl
stos
lahf
les
decl
mov
mov
push
mov
xor
test
pop
mov
pop
sub
and
sub
arpl
and
jl
incl
subb
leave
movntps
mov
and
or
mov
inc
call
fsubl
enter
andb
in
into
add
decl
data16
mov
cmc
ds
cmp
mov
and
test
mov
neg
mov
add
jmp
push
lahf
sub
add
mov
lcall
xor
out
lret
out
mov
movsl
lods
jg
mov
bound
aaa
pusha
xlat
or
add
outsl
je
ljmp
jg
cld
inc
mov
roll
in
andl
mov
or
sub
outsl
out
ret
mov
pop
push
sbb
cmc
and
and
jle
inc
sti
inc
sbb
int3
test
lret
inc
add
push
mov
dec
inc
jbe
push
outsl
mov
inc
mov
call
and
jecxz
daa
repz
mov
rclb
or
js
mov
pop
and
test
mov
aad
pop
push
jp
and
int3
xor
pop
in
pop
fidivl
adc
mov
jns
cmp
pop
push
pop
jecxz
jle
incb
adc
push
mov
add
cmp
lock
push
mov
push
lds
mov
sbb
fldenv
lret
push
mov
ja
frstor
test
scas
push
jb
inc
in
adc
es
xchg
pushf
adc
cmpsb
sbb
ret
sbb
test
mov
add
xchg
orb
dec
stos
adc
adc
sub
inc
popf
shrl
cmp
aam
out
push
sbb
pop
roll
call
fstps
loopne
xchg
lock
push
lds
and
aam
cmp
les
inc
cwtl
push
inc
int
and
inc
xchg
mov
and
push
xor
push
xor
mov
sub
add
fsts
push
inc
pslld
loop
dec
adc
iret
cmp
sub
fldenv
clc
adc
sahf
testb
jo
stos
push
ss
test
pop
and
aad
orb
jae
jecxz
mov
add
add
or
jo,pt
add
mov
cmp
mov
call
lock
push
mov
stos
iret
cld
add
and
out
xchg
lock
in
ljmp
fldcw
inc
pop
add
in
pusha
pop
mov
test
pop
jns
inc
mov
cmp
mov
pop
mov
pop
adc
mov
push
popa
fistl
xchg
inc
adc
fcoms
add
xor
pop
inc
and
dec
in
je
sub
and
lret
xchg
iret
sbb
cwtl
adc
out
cmp
inc
icebp
pop
cmc
js
daa
int3
in
jno
outsl
sbb
pop
ljmp
mov
jno
fiadds
jecxz
addb
mov
out
push
fnstcw
mov
ljmp
and
sti
mov
cmp
ss
out
cmp
dec
imul
push
lahf
mov
in
jle
fsubrp
and
push
mov
mov
scas
push
cmp
add
push
and
sub
inc
adc
xor
outsl
rolb
jbe
mov
mov
and
incl
and
mov
stos
ja
cmpsl
aad
mov
ja
push
dec
mov
fsubrl
aaa
sbb
add
loope
push
sbb
mov
fmuls
and
jo
mov
dec
xchg
call
lds
pop
adc
arpl
sub
push
jno
hlt
in
fwait
mov
mov
inc
adc
add
xor
pop
sub
push
dec
jb
insl
cmp
add
shlb
leave
lock
jge
flds
mov
xchg
jbe
mov
mov
std
sbb
sbb
dec
push
adc
insb
scas
pop
mov
fisttpl
nop
add
mov
les
test
adc
sbb
out
add
lock
push
mov
test
je
mov
pop
in
mov
jno
shr
push
outsb
les
mov
dec
adc
or
inc
pop
sub
jne
orl
add
neg
cmp
fisubs
cmp
sub
mov
les
cld
add
push
popa
add
ret
jo
shlb
push
cli
notl
add
ljmp
sysret
call
in
shlb
pop
and
or
divl
arpl
cmpsl
ficompl
xor
sbb
clc
xor
lcall
adc
out
push
movl
stos
mov
pop
outsb
cmp
push
andb
in
in
and
inc
shl
jns
lcall
dec
inc
and
scas
fistpll
sbb
cwtl
pop
sbb
aam
sub
pop
ret
in
outsl
xor
xchg
mov
in
in
scas
and
jle
testb
pusha
hlt
push
jp
jb
dec
int3
roll
das
pop
fiaddl
sub
add
outsl
dec
int3
pop
bound
les
xchg
jecxz
push
loop
mov
add
push
ljmp
inc
xchg
xorb
mov
ja
cwtl
inc
test
mov
mov
jbe
or
sbb
in
inc
fstp
addb
nop
call
enter
add
pop
push
add
mov
sub
hlt
adc
sub
fsubrs
add
xchg
ret
test
inc
cmc
cmc
and
or
dec
mov
sbb
dec
sub
xchg
pop
inc
dec
and
xchg
inc
push
lds
fiadds
adc
and
sbb
rcl
aas
or
in
cmpsl
roll
pop
mov
push
cld
push
sub
push
aam
adcb
add
and
adc
pop
jl
xchg
push
adc
fisubrl
inc
dec
out
and
ss
push
pop
jo
mov
repz
add
sbb
cmp
xchg
add
ret
add
aas
lret
adc
mov
inc
shlb
fwait
test
add
scas
adc
sbb
sti
and
sub
leave
stos
mov
std
mov
pusha
lcall
test
xor
inc
dec
sub
push
int
mov
pop
cmp
xor
es
push
jge
cmp
cmp
push
or
dec
idivb
jecxz
cmp
fstpt
add
out
pop
hlt
ds
push
pop
testb
adc
sub
aad
data16
push
test
rcrl
dec
cmp
in
mov
inc
lret
arpl
rcrb
adc
shr
mov
mov
sub
adc
add
lock
push
mov
outsl
sub
and
and
xor
cmp
jb
push
jb
xchg
add
push
inc
mov
addr16
loope
test
adc
cmp
jae
xor
loopne
inc
mov
pushf
mov
sub
lock
pop
mov
pusha
inc
mov
inc
mov
popa
les
cmp
or
fsubs
push
jle
jmp
das
cmp
mov
dec
lahf
adc
shrl
rclb
jg
bswap
call
rcl
sbb
adc
dec
jg
push
or
ret
inc
das
cmp
cmp
mov
filds
mov
roll
out
push
cld
sub
bound
je
mov
ret
fistpl
filds
xchg
mov
add
and
es
and
incl
dec
add
push
sub
or
lods
ss
das
fnsave
sarl
les
adc
sbb
nop
loope
aam
add
sub
ljmp
mov
add
sahf
sub
jb
outsb
add
arpl
scas
sbb
jecxz
es
popaw
adc
sub
ss
clc
pop
jg
scas
jb
and
mov
pop
sub
fs
cmp
and
test
jl
sub
call
ss
mov
mov
xchg
or
outsb
mov
repnz
in
loopne
or
fstpl
jne
lods
dec
lea
adc
cmp
dec
addr16
jmp
push
inc
xor
jle
std
mov
jb
cld
mov
sbb
jmp
sbb
mov
mov
jae
mov
xor
jp
sbbl
sub
push
fistps
clc
xchg
xrelease
lahf
cmp
shlb
push
popa
xlat
jb
jg
pushf
cs
sub
or
loop
push
jl
cmp
adc
test
jno,pn
push
mov
imul
ss
inc
or
invd
sar
mov
xchg
cmp
jnp
cmp
gs
xchg
mov
inc
pop
ja
push
shlb
and
pop
aad
pop
push
mov
test
add
inc
adc
int3
insl
jbe
sbb
test
cmp
lahf
aad
mov
inc
inc
mov
pop
dec
mov
pop
push
imull
push
add
shrb
test
inc
and
outsl
aam
mov
sbbb
nop
or
adc
cli
and
popa
pop
xor
inc
and
push
les
push
push
add
push
inc
mov
std
daa
out
sldt
arpl
adc
rolb
sbb
jo
jle
sub
mov
out
add
outsl
inc
push
jno
mov
idiv
add
adc
dec
mov
pop
mov
movsb
test
int
hlt
filds
bound
xlat
and
inc
mov
or
add
mov
jg
and
cld
adc
in
in
outsl
imul
add
aam
add
xor
loope
mov
xor
and
sub
adc
sub
inc
out
cltd
mov
adc
jg
mov
inc
pop
in
clc
arpl
in
cmp
dec
movsb
sbb
mov
mov
sub
inc
fsts
dec
mov
add
outsb
incl
daa
es
lret
mov
mov
dec
andl
cmpsl
das
bound
in
lods
add
cmc
push
popf
negb
outsb
adc
cmp
cmp
mov
push
mov
push
fildl
adc
push
xor
test
adc
mov
insb
adc
je
and
push
push
sub
adc
decl
dec
dec
lea
subl
loopne
jl
lcall
mov
jb
mov
sti
pop
mov
pop
xor
cmpl
lret
mov
jmp
outsb
push
sar
jmp
jge
push
xchg
add
inc
aaa
faddl
push
or
lock
cmp
jne
push
or
push
adc
cmc
in
je
test
cmp
inc
mov
mov
pop
sbb
mov
sar
inc
xchg
sbb
add
add
sbb
test
jb
in
add
jg
enter
std
jo
pop
testl
dec
rclb
sbb
aam
iret
repnz
call
push
add
fistps
sub
icebp
sbb
ja
fists
bound
jb
dec
cmpb
add
mov
mov
aam
cs
daa
adc
add
and
cs
or
lret
and
add
push
add
lea
or
les
dec
and
outsl
fisttpll
or
incl
xor
sub
add
je
data16
add
jp
inc
push
inc
and
cld
adc
pop
test
push
dec
lret
and
add
pop
dec
arpl
mov
mov
test
stos
add
dec
mov
inc
add
xchg
clc
ljmp
ljmp
sub
and
fdivr
mov
clc
mov
add
push
das
mov
and
popf
add
rcrl
cmc
mov
mov
imul
xor
incl
popf
int3
add
or
push
mov
ss
fsubrs
loopne
jp
add
out
fistpll
lret
cmp
fimuls
jmp
inc
xchg
std
fs
add
mov
adc
es
add
jne
lcall
xor
add
ja
mov
xor
sub
pusha
push
popf
sub
lcall
mov
mov
aam
sbb
adc
mov
mov
cs
sbbl
mov
fwait
jns
sar
push
and
sahf
in
dec
push
or
bound
inc
callw
pop
mov
cmpsl
adcb
cmp
pushl
adc
cs
xor
loopne
inc
loop
sbb
std
call
and
sub
stc
fadd
repz
gs
sbb
or
inc
adc
loop
lcall
push
sbb
decl
cmc
xchg
int3
mov
outsb
js
js
mov
add
inc
outsl
jl
lock
push
sbb
movsb
adc
inc
xor
mov
das
bound
in
jmp
mov
stos
mov
inc
adc
and
mov
cmp
std
mov
add
inc
repnz
test
jmpw
repnz
mulb
xchg
imul
lret
pop
inc
xlat
sbb
adc
js
jne
jg
push
xchg
dec
adcl
add
xchg
pop
mov
pushl
add
sbb
cwtl
in
lds
movsl
aas
dec
lcall
push
stos
fmull
outsl
imul
inc
insb
cmp
sub
jne
mov
cltd
jge
filds
aaa
xchg
lret
insb
cmp
jecxz
inc
cmp
mov
outsl
sub
xchg
das
fs
leave
bound
xchg
scas
cmpb
sarl
stos
insb
push
in
cwtl
push
movl
adc
into
stc
dec
neg
mov
jno
andb
fimull
je
ss
movsl
clc
add
jecxz
sub
pop
movsl
dec
jbe
pushl
add
fnstenv
inc
adc
cmp
dec
dec
jecxz
and
mov
incl
push
test
sti
test
or
iret
scas
push
test
mov
iret
loop
push
xchg
lcall
or
fiadds
sub
mov
lret
and
jb,pt
loopne
and
sar
ret
shl
sub
fs
push
dec
cli
test
popa
out
jp
mov
inc
adc
add
ret
or
pop
cli
aaa
add
xor
xor
pusha
push
inc
jl
pop
in
xchg
bound
das
mov
mov
add
das
jl
das
sbb
jmp
in
cmp
xor
push
test
mov
lret
mov
xchg
decl
xlat
add
loope
push
into
cmpl
or
movsl
fwait
push
inc
rorb
mov
in
lcall
fimuls
xor
std
pop
jg
push
add
mov
jge
add
in
xor
push
pop
and
in
fimull
repz
rcrb
mov
inc
pop
enter
add
mov
pop
sbb
dec
xchg
xchg
push
dec
icebp
mov
pop
push
jp
in
rorl
push
rorb
jle
mov
sbb
out
sbb
rcll
outsb
cmpsl
xor
or
push
sbb
icebp
push
or
jg
push
adc
lods
into
push
std
movsb
mov
test
lock
cmp
out
cmp
mov
fs
pop
and
xchg
xor
add
jmp
jl
movsl
jg
sbb
pop
stos
andb
adc
sbb
push
adc
and
or
jp
mov
push
push
mov
and
lahf
and
test
add
and
ret
pop
sub
rcrb
ror
mov
lds
sub
negb
and
sub
adc
out
rcrl
lods
imulb
xor
aaa
cmp
les
andl
sbb
into
fistl
push
pop
dec
adc
jno
mov
lret
ljmp
cmpb
adc
jo
pop
loope
mov
mov
pop
movsl
movsl
nop
lods
inc
hlt
cmp
mov
decb
push
and
or
out
stos
popa
add
incl
or
ss
mov
cld
lods
std
das
mov
js
test
pop
sahf
xchg
mov
adc
xor
mov
jne
imul
adc
je
adc
xor
pusha
cwtl
aas
ret
mov
pop
xchg
fadds
stos
enter
mov
sbb
mov
mov
add
dec
or
cmpsb
ret
hlt
shll
das
sbb
jmp
mov
adc
enter
js
sbb
inc
xor
cli
jg
mov
xor
cli
xchg
inc
xchg
imul
add
or
imul
add
mov
out
icebp
imul
mov
and
xor
mov
fildll
jae
pop
repz
xchg
pop
adc
fiaddl
inc
mov
loopne
jg
jg
xadd
mov
mov
stc
cmova
mov
cs
push
fcom
mov
inc
or
out
mov
clc
aaa
xor
in
add
lods
add
loope
push
out
or
rcrb
hlt
or
icebp
jg
mov
lret
or
out
push
cli
cmpsb
sub
iret
push
and
fnstsw
mov
sti
sbb
mov
or
pop
cmp
and
leave
shlb
inc
xor
xchg
push
jg
sbb
pop
push
lahf
inc
shlb
aaa
jg
push
cmp
jno
cmp
clc
sub
push
fwait
add
inc
out
adcb
das
insb
data16
lahf
jno
cmp
sub
es
cmp
and
inc
stos
adc
aaa
pop
mov
mov
js
xor
outsl
fdivrl
adc
std
mov
jb
sub
xor
mov
aad
movsb
bound
nop
out
dec
push
jnp
sti
fmull
arpl
cli
sbb
pop
xlat
and
incl
cs
es
hlt
jne
popf
je
jg
or
push
movsb
dec
sbb
test
mov
out
or
in
dec
fwait
clc
or
pop
xchg
nop
rorb
pop
mov
ds
pop
wrmsr
int3
out
test
xchg
test
mov
test
jae
call
mov
xchg
add
pop
cmpsl
mov
mov
gs
iret
mov
push
inc
stos
insl
subl
sbb
stos
sub
cmpsl
call
dec
cld
push
sbb
jg
mov
adc
in
ja
pop
and
rolb
dec
push
adc
xor
mov
pop
int
stc
or
imul
sarl
or
repz
sbb
in
cmc
dec
or
xchg
insl
rolb
push
push
sbb
cmp
imul
or
call
mov
mov
cmp
mov
int3
std
ds
ret
jb
xchg
lret
add
mov
fidivs
hlt
test
mov
push
add
lret
aad
mov
xor
test
fldt
ljmp
rol
clc
lods
repnz
mov
test
mov
xor
rorb
sbb
add
enter
sub
or
mov
pop
loopne
sub
push
je
ljmp
mov
insb
jbe
insb
or
enter
lods
jg
test
mov
outsl
adc
scas
mov
mov
into
data16
gs
stos
outsl
add
inc
lods
pop
xor
cs
pop
xchg
dec
imul
sub
inc
mov
adc
cld
mov
xchg
adc
dec
jge
inc
fldt
or
imul
aam
in
push
pop
xor
mov
dec
in
cmp
jle
push
arpl
loope
pop
in
call
popf
push
push
mov
insb
jno
and
pop
jbe
and
lods
xor
lods
mov
out
mov
adc
pop
push
mov
inc
inc
adc
xchg
clc
fcomip
jle
push
test
mov
push
subb
call
mov
pop
pushl
fisubrl
dec
add
in
jecxz
insl
add
jbe
fmuls
mov
or
dec
fs
or
clc
push
rclb
xor
test
lods
addb
pop
icebp
cmp
push
push
adc
pop
push
inc
sub
decl
je
outsb
mov
test
mov
mov
je
aam
push
sub
sbb
mov
dec
inc
movsl
decl
xchg
pop
loop
sub
popa
pop
cmp
adc
jnp
mov
loopne
lock
inc
dec
inc
andl
mov
imul
mov
mov
inc
outsb
lods
fadd
sbb
fisttps
clc
xchg
xchg
test
inc
scas
jmp
jo
inc
pop
daa
xor
inc
lcall
inc
das
pop
icebp
pop
mov
mov
or
xchg
adc
jmp
xchg
inc
popl
jle
pop
jl
pop
cwtl
icebp
fcmove
xor
jo
das
add
popf
jmp
inc
ja
ja
insb
jnp
xor
cmp
and
repnz
inc
push
popa
in
mov
clc
or
ljmp
stc
arpl
add
clc
outsl
pop
push
addr16
mull
icebp
or
dec
push
jno
incl
fadds
hlt
aad
inc
inc
lea
inc
iret
test
lods
push
jno
jb
arpl
mov
call
aas
push
shrl
fdivs
pop
inc
lahf
popa
sbb
push
lods
testb
je
add
movb
out
sbb
insb
call
stos
insl
jne
or
inc
mov
and
mov
loope
dec
fdivr
test
push
mov
xchg
sahf
std
outsl
fnstsw
iret
iret
rorl
cld
jo
and
jp
and
inc
sub
mov
inc
lods
dec
bound
push
ret
cwtl
cmpsb
mov
jge
loope
adc
fistpll
cltd
clc
or
je
xchg
fmull
lea
xchg
sahf
ss
sbb
push
jl
mov
leave
jae
xor
dec
mov
mov
mov
fwait
push
pusha
mov
pop
ss
cmp
cmpb
in
mov
daa
push
xchg
mov
cwtl
xor
je
das
pop
jo
pop
mov
les
dec
mov
sub
dec
addr16
test
js
push
mov
outsl
loopne
fstpl
jl
push
std
jecxz
inc
jle
inc
mov
mov
cmp
pop
mov
lock
incl
and
push
in
fstpl
int
sti
jb
cmp
loopne
mov
jb
push
xchg
ss
ficompl
fdivrl
push
add
xchg
decl
adc
or
adc
out
push
and
arpl
add
and
test
jecxz
hlt
jne
adc
push
arpl
adc
fdivrl
je
add
test
sub
lock
add
or
pop
mov
enter
push
out
push
dec
adc
mov
cmp
les
js
pop
push
dec
andl
sub
inc
scas
dec
stos
clc
xchg
inc
mov
add
inc
inc
mov
xchg
or
push
icebp
mov
je
mov
dec
cmp
data16
test
insl
and
and
xchg
hlt
cld
dec
add
xor
fldt
fnstcw
ret
sbb
roll
mov
lret
mov
outsb
cli
inc
popf
xchg
das
cmpsl
test
jbe
mov
add
lods
ja
dec
mov
mov
aad
rcrl
movsl
cs
add
fs
bound
outsb
ffree
push
clc
push
ficomps
fadds
mov
lret
cmp
clc
adc
push
push
xor
je
add
imul
dec
int3
dec
inc
inc
mov
fimull
hlt
add
repz
jns
add
dec
inc
sbb
sub
cli
in
adc
in
stos
bound
push
cmp
loope
in
mov
xchg
fbstp
xchg
sbb
dec
ja
les
jmp
std
add
xchg
aam
xchg
sbb
in
mov
xchg
inc
push
mov
add
imul
xor
jecxz
and
push
jbe
cltd
dec
outsl
inc
xlat
cwtl
adc
popf
jmp
mov
in
aas
xchg
mov
subb
cmpsb
gs
inc
mov
and
cld
test
fdivr
push
insl
or
cld
mov
mov
add
cmp
or
das
jne
lea
sub
jmp
rorb
dec
xor
push
xchg
cmp
das
inc
dec
popf
mov
imul
mov
and
xor
mov
sub
fimuls
enter
lahf
sbbb
sbb
movb
adc
mov
add
mov
aad
push
or
aaa
orl
sub
and
mov
mov
add
pushw
xchg
popa
cli
ffreep
data16
stos
mov
sbb
mov
mov
xor
notl
jg
test
arpl
les
mov
and
add
sbbb
sub
gs
outsb
mov
jno
lcall
loope,pn
and
stos
dec
dec
jl
adc
sbb
fcompl
mov
pop
outsl
adc
sbb
mov
ret
inc
jge
add
in
outsl
sbb
pop
lods
dec
in
cmpsb
xor
lock
test
mov
das
cltd
mov
push
roll
lret
push
cld
inc
movsb
sti
iret
bound
jns
enter
pop
or
mov
pop
and
mov
sub
fucom
mov
shll
add
es
lods
icebp
sub
mulb
pop
inc
negl
or
dec
pop
pop
aaa
fnstenv
repz
fildll
mov
test
ds
and
push
sbb
icebp
push
lock
or
mov
ret
lods
xchg
xor
cmpsb
aam
push
push
or
mov
push
sbb
xchg
ja
popf
stc
xchg
les
add
scas
fwait
dec
lds
insb
and
xor
fidivs
hlt
imul
cwtl
fdivp
or
mov
mov
mov
loopne
adc
mov
fstpl
push
jle
dec
outsl
popa
mov
cmp
sub
scas
xor
notb
test
inc
repz
jp
fs
or
lock
dec
fwait
jno
ljmp
sub
imul
aaa
inc
push
inc
repnz
dec
sbb
ret
adc
fistpl
add
lock
jb
ds
mov
jo
dec
popa
je
lods
pop
in
out
xchg
repz
and
mov
lcall
adc
inc
js
sbb
inc
xchg
movsb
fldl
fwait
clc
sbb
sub
or
pop
xchg
outsl
xchg
fiadds
iret
ja
in
lret
loope
lret
arpl
mov
dec
jge
cs
push
mov
sbb
je
out
xchg
pop
out
pushl
aad
mov
or
pop
adc
mov
or
lods
sub
dec
sub
inc
ljmp
jle
mov
sahf
xlat
repnz
push
sub
mov
lods
pop
xchg
mov
test
in
or
pop
and
jno
jecxz
sbb
ds
inc
or
jecxz
pushl
or
mov
rolb
stc
popa
lods
lds
jnp
push
mov
cli
js
and
aaa
mov
fstl
outsb
pop
inc
out
sub
sbb
pop
cltd
sbb
stos
lea
or
movsb
ror
inc
cmp
or
lahf
aas
pushf
jecxz
sub
fstl
pop
xchg
inc
push
cli
outsl
inc
bound
push
test
sti
pusha
mov
leave
mov
xor
clc
xor
fsubrs
push
rcr
jae
ds
outsl
je
aad
out
and
push
lret
push
pop
inc
inc
cmp
jne
push
sub
hlt
or
aaa
sbb
in
loope
rorb
rorl
out
mov
outsl
repz
sbb
in
inc
orb
stos
insl
add
push
push
je
cmpb
inc
cld
push
cwtl
jecxz
lds
jb
fisttpll
or
roll
rorl
sbb
fs
testl
cltd
push
xchg
mov
sub
rcrl
decl
scas
mov
shl
movsl
pop
pop
enter
test
inc
ret
or
mov
mov
jne
sbb
movsb
sub
fisttpl
std
call
shlb
and
lret
sub
jle
mov
cmp
aas
jb
ja
or
push
pop
in
adc
cmp
mov
jmp
pop
mov
sti
ljmp
and
pop
loope
mov
daa
pop
bound
fcoml
lret
jmp
xchg
push
mov
cmpsb
rol
cmpsb
pop
fnsave
ja
pop
ljmp
sahf
js
pop
jge
and
popa
lahf
xor
jmp
jnp
cmp
pop
jge
sbb
fidivl
or
sbb
mov
in
or
and
jno
mov
test
in
mov
call
cmpsb
or
xchg
movsb
outsl
and
ds
xor
inc
adc
add
lock
lock
out
inc
sbb
mov
or
add
filds
movsl
dec
cli
dec
call
dec
add
add
inc
add
sub
outsb
fistl
test
xchg
adc
jmp
lcall
mov
xor
xchg
iret
dec
sbb
cmpsb
mov
fmuls
sub
sbb
adcl
cmc
add
cmp
or
sbb
ficoml
dec
sub
test
aad
dec
ds
pop
or
ficomps
jns
jp
add
nop
sbb
clc
scas
pop
fnsave
push
call
jge
jecxz
mov
lds
xchg
lret
gs
or
mov
mov
dec
sbb
add
push
mov
mov
bound
enter
xchg
dec
mov
sub
or
loopne
mov
ljmp
hlt
lahf
or
adc
push
pushl
pop
mov
lods
mov
aaa
ficompl
adc
in
mov
push
pop
push
inc
pop
ss
fbld
repz
xor
xrelease
scas
ds
xor
mov
mov
fsubrp
mov
adc
aas
add
and
sbb
mov
imul
push
ljmp
rolb
into
push
dec
mov
test
dec
aad
jl
ficoms
out
test
cmp
mov
lar
subl
aad
outsl
outsb
orl
roll
or
in
xchg
mov
clc
jecxz
nop
inc
jb
cwtl
test
les
movsb
sbb
pusha
sbb
xor
hlt
xor
mov
shrl
inc
sbb
push
loop
rcrb
mov
xor
pop
pusha
and
inc
insb
pop
cmp
and
mov
test
cli
das
jne
pop
inc
cmp
inc
and
mov
mov
push
xchg
inc
pop
insl
loope
addl
test
imul
pop
push
jns
fldt
pop
cli
xchg
sbb
inc
xchg
idivb
mov
lock
mov
add
gs
xlat
popa
imul
int3
es
xlat
and
sub
mov
cld
mov
out
lcall
push
dec
and
xchg
push
popa
rdtsc
xorl
jle
insl
push
je
sbb
shr
sub
lea
adc
xor
aaa
cld
int3
leave
and
int3
inc
lods
inc
add
aam
in
add
lds
hlt
je
add
and
sbb
adc
in
loope
xor
pop
data16
cmp
dec
cli
repnz
adc
test
in
cmp
jo
pop
mov
fmulp
movsb
push
xor
add
cmp
stos
pop
or
and
push
sub
adc
js
mov
shlb
xor
mov
add
xchg
push
pop
pop
test
inc
xchg
ss
int3
add
lcall
imul
adc
lahf
cltd
jg
nop
ret
mov
and
jb
sbb
incb
pushf
xorb
in
jp
and
or
aas
mov
adc
decb
jo
lcall
lret
test
inc
mov
cmp
cmp
rcll
xchg
push
cld
sbb
xorl
or
xorb
clc
ss
xlat
xchg
ret
dec
popa
pushl
ds
adcl
aam
sahf
sbbl
ljmp
mov
xchg
aaa
push
rorl
lahf
inc
addb
pusha
adc
jl
test
sub
jb
add
dec
xchg
stos
push
outsl
jne
inc
jns
xchg
cmc
dec
sbb
movsb
inc
repnz
mov
mov
leave
jno
jb
cmp
dec
es
decl
enter
mov
xor
stc
shll
sbb
sbb
shlb
sub
cmp
sub
or
or
lret
mov
push
lods
cwtl
dec
add
xorb
call
mov
push
mov
jno
mov
lcall
arpl
pop
iret
sub
inc
das
hlt
dec
das
xchg
push
loopne
mov
rcrl
aaa
mov
and
xchg
or
adc
cmp
lds
call
or
clc
neg
push
lea
aad
pop
jl
aad
inc
mov
sub
loop
lods
sub
mov
mov
xchg
fwait
insb
mov
bnd
sbb
push
lret
mov
sbb
or
movsl
cli
jne
fwait
sbb
cmc
call
sbb
cmpsb
pushl
xchg
adc
movsl
pushf
adc
pop
cltd
incl
lcall
shll
add
lret
fcmovnu
sbb
jg
test
add
cmpb
xchg
aas
negl
push
sub
pusha
in
nop
add
mov
decb
adc
pop
lods
mov
mov
xchg
push
lock
mov
mov
mov
mov
inc
sbb
inc
inc
mov
inc
lods
cltd
and
lock
lea
pushf
adc
and
and
stos
aam
or
xchg
mov
pop
jp
popl
cmp
dec
xchg
and
sub
fwait
lds
imul
mov
sbb
mov
icebp
xor
mov
and
js
mov
lock
lahf
cmp
lahf
aam
add
jo
addl
cmp
in
jbe
repz
mov
bound
xchg
movsl
mov
sbb
sub
inc
jmp
out
and
mov
ret
out
rorb
and
sub
sub
inc
jg
outsb
icebp
andl
pop
pop
jle
inc
ds
mov
fisttpl
sbb
sub
repnz
out
pop
mov
mov
leave
push
in
rcl
push
aaa
xorb
das
imul
pusha
mov
aam
call
xchg
imul
inc
outsb
ljmp
jp
enter
cmpsb
and
outsl
or
xchg
data16
out
fbld
imull
or
adc
mov
xchg
pop
shl
xchg
leave
mov
fistpll
jbe
js
mov
rolb
popf
fadds
mov
push
repnz
stc
dec
lahf
negl
add
jecxz
sti
movsl
aam
xor
nop
and
mov
and
insl
negl
inc
fiaddl
loopne
push
cli
iret
test
jbe
imul
popa
lods
xor
lret
pop
outsb
xchg
push
push
lea
add
aad
sbb
pushf
test
enter
insl
fcomi
out
shlb
mov
pop
push
jg
std
outsl
cmc
lds
push
xchg
dec
mov
scas
fistps
cmp
dec
test
sarl
mov
lcall
sbb
ljmp
mov
and
pop
mov
int
outsl
rorb
and
sub
pushl
in
pop
dec
mov
sahf
testl
shrb
test
inc
or
add
pusha
ret
shl
ror
pusha
mov
cmpsb
cmp
jno
jge
imul
stos
fdivs
movsb
inc
fcomps
pop
movsl
js
push
adc
sbb
push
sbb
jb
test
mov
xchg
adc
mov
cwtl
sub
inc
stos
pop
stos
push
js
insb
in
adcb
ret
pushf
sbb
dec
popa
enter
jge
and
xor
mov
jmp
adc
sub
cld
imul
lock
adc
je
sbbl
dec
push
adc
loopne
clc
out
jbe
pop
mov
pop
adc
sbb
aas
sub
cmpsb
mov
das
faddl
adc
mov
add
fnstsw
out
cwtl
data16
aas
xor
add
jne
clc
popf
test
xor
lret
inc
cmp
pop
icebp
std
cmp
outsl
jg
jns
aas
sahf
cs
mov
scas
arpl
pop
or
movsb
inc
pop
pop
jp
mov
fdivrs
addl
xor
mov
aad
fdivl
dec
mov
out
or
js
add
lret
test
mov
lods
es
add
inc
call
or
nopl
jne
adc
sbb
js
mov
xchg
mov
andl
xorl
cmp
aad
inc
popa
loope
pushf
xchg
je
adc
loopne
mov
shll
nop
pop
jl
dec
addr16
mov
jbe
fwait
or
or
add
sbb
outsb
lods
scas
jle
inc
push
test
push
arpl
fnsave
xor
mov
push
ss
mov
arpl
pop
cli
pop
addr16
mov
sbb
gs
subb
lea
std
inc
push
lret
push
jae
jp
inc
into
pop
jne
cs
shlb
sbb
and
je
lds
or
mov
sti
fiaddl
xchg
iret
xor
mov
mov
fistl
mov
sub
and
pop
push
sbb
push
mov
pusha
roll
call
or
adc
insl
fstpt
shll
mov
jmp
addr16
adc
push
mov
inc
or
inc
decl
fsubp
xor
and
clc
fldt
das
add
inc
shlb
add
inc
or
popf
outsl
adc
push
in
ret
jbe
and
cmpsb
loop
xchg
pop
dec
pmaddwd
call
inc
and
lret
insb
call
cld
incl
notb
jle
push
and
xor
lock
jbe
jp
mov
ljmp
add
nop
insb
loop
jg
jl
inc
int3
test
inc
sbb
push
test
dec
xchg
inc
shl
dec
xor
out
int3
mov
cld
jbe
add
ja
mov
mov
sbb
aaa
mov
hlt
and
pushf
jle
and
xchg
mov
aad
inc
jo
test
pop
pop
outsl
sbb
aaa
mov
loope
repnz
loopne
mov
movsl
sbbb
je
add
mov
clc
push
loopne
sub
idivb
adc
jb
mov
inc
pop
gs
ja
and
adc
jne
in
xor
jmp
je
xchg
ret
adcl
adc
in
mov
or
xchg
xor
mov
mov
in
inc
test
stos
lret
xchg
add
test
cli
sub
sub
and
movsb
mov
sub
inc
movsl
sbb
jge
outsl
orb
mov
jb
jmp
inc
xorl
js
mov
fs
xchg
sbbb
add
std
loopne
jae,pn
ds
mov
lods
scas
test
fists
cltd
pop
mov
jmp
out
cmp
add
insl
xor
pop
iret
and
roll
dec
mov
push
mov
scas
enter
rolb
mov
loopne
mov
jecxz
pop
add
mov
xchg
adc
and
dec
xor
outsl
lods
mul
inc
jg
lods
dec
in
jg
out
sbbl
sub
add
adc
add
mov
mov
pop
call
cli
dec
in
adc
imul
push
mov
mov
dec
jecxz
and
pop
xchg
movsl
inc
sub
leave
fnsave
push
cmp
pop
mov
in
ret
jne
cmp
sbb
pushf
jno
mov
rorl
xchg
mov
int
mov
pop
std
mov
push
or
loope
sub
cmp
popl
stc
and
lods
push
lock
dec
addr16
call
jecxz
ja
inc
ljmp
inc
jle
faddl
pop
lods
push
mov
mov
subl
test
jle
push
fwait
cmp
cmc
jl
repz
or
and
xchg
addr16
aas
iret
rorb
mov
sub
pop
nop
inc
mov
xchg
lods
lea
ret
in
xor
pop
jg
insl
rorl
add
cli
stc
xchg
out
shll
outsl
push
xchg
dec
push
shll
call
adc
or
js
insl
pushf
xchg
test
hlt
data16
mov
icebp
xchg
das
leave
dec
stos
fstl
sub
xchg
test
adc
jle
dec
cmp
push
mov
jne
mov
push
fstpl
test
inc
insl
jmp
sub
out
mov
popa
call
ret
and
stc
mov
pop
je
test
mov
je
mov
dec
sub
mov
sub
jmp
cmp
pop
test
cld
dec
xchg
xchg
les
inc
sarb
cmp
mov
xchg
dec
lea
in
sub
xor
mov
aas
les
sbb
jecxz
lea
and
mov
bound
mov
push
inc
push
inc
pop
idivb
add
imul
mov
mov
icebp
pop
addb
leave
adc
pop
mov
ffreep
jecxz
inc
int3
fnstenv
cmp
adc
loopne
lods
cmc
jle,pn
hlt
mov
ljmp
pushf
mov
push
and
xchg
ja
pop
or
aam
pandn
push
outsl
rclb
pusha
shll
sub
adc
sub
loop
cli
lock
push
test
xchg
pop
test
mov
pop
xor
lahf
cwtl
jb
or
dec
sahf
dec
hlt
lcall
ss
add
aas
das
and
rorl
cmp
mov
or
jge
push
and
loope
xchg
lods
scas
add
mov
aam
or
mov
repz
cmp
loop
mov
in
sub
sub
adc
sub
std
pushf
adc
jae
mov
add
push
jmp
test
outsb
adc
lcall
or
call
lods
and
pop
inc
jg
pop
bound
push
pop
ret
addb
faddp
insl
faddl
notb
dec
xor
adc
popa
cld
pushl
das
js
adc
insb
andl
in
xor
daa
add
dec
call
test
jns
xchg
mov
bound
sbb
je
add
inc
fcmovb
jg
std
leave
out
and
cmp
xchg
adc
push
mov
negl
mov
test
ret
push
xchg
mov
or
sub
jecxz
ljmp
in
sbb
out
dec
jb
outsl
cmp
inc
mov
sbb
jge
jbe
stc
jle
aam
imul
sbb
lret
jp
sbb
das
xchg
mov
xchg
pusha
cs
fildll
ret
rol
or
orl
cmpsl
gs
mov
imul
sahf
shll
push
mov
jg
aaa
gs
jle
push
lock
inc
adc
xchg
push
shll
and
test
inc
test
sub
or
dec
sahf
les
pop
std
inc
loope
or
cmp
jg
jecxz
cli
pusha
push
in
jp
mov
pop
sbb
das
or
sbb
shlb
cltd
or
imul
js
hlt
popa
scas
sub
and
and
mov
or
popa
ljmp
cli
mov
jg
mov
loop
popa
hlt
outsl
hlt
notb
xchg
pop
xchg
outsb
adc
imul
int3
sbb
lret
xchg
lahf
loop
shl
repz
cmp
jmp
gs
int3
push
or
or
rorl
cmpb
aas
pop
jbe
stos
mov
dec
das
sub
into
lcall
addl
mov
fcmovnb
mov
and
lods
dec
jne
ljmp
mov
jl
sub
push
fs
in
xchg
clc
inc
sbb
push
cld
je
nop
cld
test
aad
pop
test
push
and
imull
sub
cs
and
inc
mov
fxch
cmp
loop
mov
sbb
pushf
dec
ja
push
rcr
rolb
or
sub
pop
pop
out
sbb
push
bound
jle
sbb
sbb
nop
lret
cmp
pop
fildll
jg
push
cmpsl
pop
xchg
sar
adcb
mov
test
aas
mov
jmp
mov
enter
jns
jge
xor
mov
stos
adc
ja
fs
icebp
call
mov
jp
daa
fcomi
sbb
test
outsl
icebp
fists
cmp
or
shll
mov
jnp
cmpsb
cli
mov
leave
adc
dec
pop
loopne
xchg
jne
dec
mov
pop
sbb
call
mov
inc
pusha
cmp
cli
sub
das
pop
push
fs
push
jbe
notrack
fldl
mov
jbe
rorb
incl
cli
adc
fcomi
or
aas
mov
rol
movsl
stos
enter
adc
loopne
call
xchg
adc
jge
sbb
fsubr
test
fdivr
push
sub
xchg
pop
mov
fmuls
dec
shll
jp
sub
ss
dec
out
in
dec
mov
ss
inc
lods
jge
sahf
imul
jmp
or
cs
adc
lods
fwait
or
imul
in
jns
in
pop
jo
jg
enter
inc
and
cmp
mov
std
jg
lods
cmpsb
xor
push
test
and
pop
fidivl
loop
lods
mov
shrb
adc
push
mov
movsb
and
mov
mov
sbbl
bound
pop
xor
sbb
ljmp
adc
loop
mov
insb
loop
adc
jl
pop
repnz
push
jmp
jecxz
stos
test
xchg
aam
shll
nop
inc
and
xchg
push
and
sbb
jne
or
mov
inc
in
in
fnsave
add
aad
arpl
or
xor
inc
push
jg
jns
sub
xchg
aam
adc
sbb
cmp
ja
not
idivl
xor
pop
add
xlat
gs
add
mov
xchg
addr16
aam
call
test
std
fnstenv
hlt
icebp
movsl
in
jmp
lock
mov
movsl
decl
mov
decb
xor
push
inc
bound
cmc
cmp
mov
ss
cmp
ret
lea
dec
mov
movsl
xchg
jo
jbe
and
adc
lcall
push
mov
aaa
jge
jnp
nop
push
dec
xchg
mov
push
mov
stos
sub
and
fs
in
out
lret
cmp
notb
sub
cmpsb
out
scas
mov
sbb
mov
mov
test
adc
fdivs
mov
adc
cmp
jecxz
ss
inc
mov
push
sbb
or
mov
insl
aam
scas
or
shrb
sahf
push
or
fisubs
push
cmp
call
negb
shll
push
mov
aad
jle
push
iret
jl
ret
shrb
andb
int
js
pop
mov
push
xor
mov
adc
dec
inc
std
or
ds
icebp
xchg
pop
sub
fsubs
addr16
adc
das
je
dec
mov
nop
mov
icebp
pusha
jb
pushf
sbb
js
test
inc
add
fdivrp
jge
add
sub
ljmp
andl
push
or
mov
lock
adc
adc
movl
add
add
mov
hlt
mov
lret
faddp
in
cwtl
nop
add
mov
push
aam
add
into
add
pop
aaa
pop
out
filds
incb
push
test
adc
mov
stos
js
sbb
sbb
ficompl
je
pusha
loope
int
out
and
pop
jne
pop
mov
test
jge
rol
pop
cmp
sbb
insb
push
addr16
lods
mov
das
aad
pop
xchg
xchg
lahf
call
in
loopne
fsubrs
cld
sti
lea
mov
xlat
fwait
dec
bound
in
out
xor
pop
pop
fcoms
adc
xchg
jmp
jge
repz
mov
out
enter
cli
or
fisubl
cli
push
push
dec
addb
popa
mov
ret
mov
mov
xchg
pusha
cmp
xchg
imul
pop
xor
and
push
rorl
lret
pop
outsb
insl
mov
call
dec
outsb
fcomi
mov
clc
pushf
or
loopne
cmpsb
xchg
xorb
inc
test
pop
sbb
clc
mov
cmpsl
mov
sti
push
and
lea
mov
lods
icebp
add
cmpsb
outsl
inc
fs
lcall
inc
test
popf
test
mov
incb
cmp
inc
mov
ret
ror
imul
call
es
sub
mov
notl
loope
cmc
adc
mov
es
sti
loopne
add
jp
stc
adc
cmpsl
sbb
and
mov
lahf
mov
call
inc
das
jl
mov
and
dec
cld
mov
ss
inc
ret
loop
mov
hlt
lods
add
or
loope
push
lods
scas
outsl
ljmp
fdivs
xchg
inc
rcrb
sbb
jbe
loop
and
decl
cltd
repz
and
jg
pop
and
jne
push
pushf
and
mov
inc
adc
mov
les
out
push
je
cmp
cld
push
xchg
aam
cmc
subl
jg
or
cli
scas
movsb
push
jns
pusha
test
rcrb
dec
and
in
ljmp
testb
and
mov
inc
ljmp
stc
icebp
xchg
jmp
cli
mov
mov
call
or
ljmp
test
ret
outsl
aam
icebp
popf
scas
pop
rcll
pop
jp
jg
test
sub
add
pushf
mul
mov
xor
je
push
fiaddl
dec
ret
jne
les
std
xor
stc
and
xchg
mov
add
jecxz
sub
clc
mov
cli
inc
jmp
insl
or
js
std
mov
nop
ficoml
sub
pop
xchg
dec
shlb
cmp
xchg
xchg
pop
add
test
rorl
jns
adc
mov
test
jl
repz
dec
push
loope
cwtl
add
insl
rorl
aaa
int3
addb
pop
xor
subb
inc
jne
xorb
push
adc
loop
jl
xor
sub
bound
pop
test
xchg
push
sub
imul
mov
xchg
sub
push
sub
jmp
pop
clc
dec
lods
adc
movsl
cmp
dec
xchg
add
ss
cwtl
cmp
fistps
insb
inc
pop
in
inc
adc
sbb
cmp
add
adc
sbb
sbb
push
jns
mov
cmp
pusha
xor
pop
js
mov
arpl
sbb
mov
inc
scas
popf
out
jmp
mov
xor
subb
clc
mov
push
sbb
test
inc
cmp
push
pop
test
les
or
es
rorl
jge
fimuls
jge
lret
adc
rorb
mov
aam
fidivrs
enter
mov
addr16
clc
in
cs
bound
testl
shlb
shrl
cmp
mov
push
mov
movsl
incl
or
out
jno
dec
arpl
adc
fnsave
call
mov
add
sbb
sub
loopnew
int
leave
and
pop
leave
fidivrl
pop
push
pushf
xchg
or
sahf
xchg
cmp
mov
mov
les
je
lahf
adcb
in
dec
shll
or
test
scas
nop
dec
push
insb
in
xchg
sub
xchg
jle
dec
pop
pop
and
bound
ss
jle
sbb
int
icebp
popa
fiadds
dec
cmp
clc
negb
es
or
ljmp
in
push
stos
mov
and
dec
call
adc
inc
jle
loop
xchg
mov
outsl
add
loopne
and
sbb
pop
jp
jmp
pop
popf
mov
lcall
je
jmp
or
adc
push
xchg
or
mov
mov
ret
mov
mov
into
dec
movsb
shl
ljmp
pop
sbb
xlat
add
push
sbb
jp
mov
sub
mov
adc
dec
sahf
push
loopne
loope
hlt
mov
dec
jle
data16
sub
mov
xor
sub
ret
lock
std
rol
sti
movsl
mov
push
cwtl
dec
insb
mov
in
sub
sub
shrb
cld
idivb
int
xor
dec
aaa
scas
xlat
jns
and
lds
pop
movsl
push
cltd
bound
lea
or
mov
xlat
inc
insb
stc
movl
mov
jmp
pop
addr16
psraw
pop
nop
xor
rol
in
cmp
into
mov
dec
xchg
jno
or
test
out
inc
sbb
pop
sti
xlat
lret
jg
mov
jo
cmp
inc
sub
inc
inc
andb
cmpsb
lock
cmpb
loop
pushf
jmp
jge
test
std
lea
push
sahf
and
add
insl
lea
jne
cs
das
mov
nop
je
out
test
outsl
jl
loopne
adc
adc
push
mov
icebp
outsl
add
mov
arpl
clc
mov
jp
cmp
mov
pop
mov
rcr
mov
jge
sbbb
les
and
pop
pop
test
les
sub
mov
jle
mov
stos
arpl
lock
dec
fidivs
loope
sub
ljmp
and
pop
jae
jns
xor
sbbl
popl
mov
loopne
loope
es
xchg
sahf
inc
ljmp
xchg
xor
hlt
nop
xlat
pop
mov
push
mov
push
not
and
push
ret
lahf
jnp
push
pop
daa
dec
addb
test
mov
dec
push
and
sbb
or
stos
or
ss
cmp
xchg
icebp
lods
jbe
inc
lods
xor
ds
push
xlat
inc
cmpsb
or
or
adc
call
cmp
mov
jno
imul
imul
pop
mov
mulb
and
dec
add
fs
int3
mov
cs
jbe
fildl
ljmp
jle
xchg
lahf
test
xchg
shrl
mov
cli
outsl
leave
jecxz
xor
aad
dec
pop
pop
stos
or
sub
mov
sub
mov
adc
mov
sbb
and
cmc
movsl
and
or
aaa
in
in
and
out
ja
inc
cmpsb
je
stos
aas
xchg
adc
xlat
ljmp
cmp
lods
add
movsb
sbb
into
mov
jnp
fdivr
leave
mov
js
out
or
incl
sub
jecxz
aad
sti
pop
cltd
incb
pop
lock
test
add
lret
imul
fwait
mov
adcb
adc
movsl
out
js
and
notb
iret
adc
imul
das
fcmovne
jno
jne
rorb
xchg
xorb
sub
inc
push
sbb
sbb
inc
jmp
sub
jb
repnz
out
loop
push
clc
xchg
mov
jge
cmp
cld
or
clc
xchg
adc
mov
jecxz
jl
pusha
adc
inc
cmc
jbe
rcll
sbb
adc
or
push
movsl
in
add
inc
mov
mov
inc
imul
add
pop
jno
mov
jg
sub
mov
ret
mov
in
lret
pop
mov
inc
in
test
cmp
jge
xor
imul
call
adcb
push
je
add
loope
popa
add
outsl
add
sbb
sbb
pop
push
in
pop
cli
ret
adc
rcrb
das
fstpl
fbstp
movsb
jne
data16
incb
inc
xchg
mov
cmpsl
add
icebp
mov
mov
or
inc
or
pop
xchg
repz
pop
mov
cmp
xorps
das
push
pop
mov
adc
mov
jle
push
std
cmp
pushf
or
scas
cmp
pop
mov
xlat
lret
test
inc
xor
add
shll
sti
push
mov
or
dec
or
mov
mov
lret
inc
rep
push
sub
cmp
addl
xchg
negb
ficompl
mov
mov
add
mov
mov
fistl
andl
or
adc
inc
ret
jmp
cmp
rclb
cmpsl
arpl
cmp
incb
imul
into
insb
fldenv
lret
or
loope
or
sbb
xor
xor
stos
push
aam
clc
mov
lods
and
sub
lods
loopne
pop
adc
jl
aas
test
or
scas
outsb
ljmp
cmp
jmp
adc
clc
or
mov
cltd
inc
xor
sub
pop
das
pusha
pxor
xor
lahf
push
insl
ljmp
outsl
decl
in
mov
sbb
leave
add
test
out
cwtl
adc
rolb
rcr
adc
and
out
dec
mov
sub
push
jg
mov
cld
adc
cmpsb
inc
pop
in
fwait
sub
loopne
pop
adc
dec
ds
repz
xlat
push
pop
mov
and
inc
dec
or
push
mov
xor
mov
pop
xchg
ss
aam
fs
mov
lcall
inc
adc
scas
call
push
mov
fwait
add
repz
push
pop
sbb
gs
mov
outsl
pushf
jmp
sub
pop
mov
test
pop
jg
fisttpll
loop
scas
push
xchg
roll
dec
mov
lret
dec
leave
movsb
sahf
add
inc
xchg
decl
ret
sbb
or
adc
das
adc
push
add
adc
dec
mov
incl
rclb
sub
jle
and
fwait
mov
sbb
inc
pop
int3
mov
pop
adc
std
push
fdivl
sbbl
je
ja
jo
push
inc
push
bound
push
stos
out
mov
test
call
mov
popa
inc
pop
xchg
inc
fdivrl
lea
mov
mov
jae
out
sarb
outsl
scas
push
add
filds
ret
push
lahf
adc
push
cmp
call
jmp
outsl
dec
std
add
inc
lahf
adc
shlb
cmp
push
icebp
lcall
pop
test
mov
adcl
pop
xor
or
aas
push
mov
pusha
int3
xchg
lret
add
mov
int
inc
ret
pop
je
adc
xor
mov
push
dec
fistps
xchg
jno
ljmp
fcomp
or
push
sbb
test
in
icebp
cld
pop
push
je
aam
jo
push
mov
add
sub
clc
mov
xor
push
xchg
imul
ds
xchg
pop
js
sub
mov
inc
fildll
xchg
sahf
adc
pop
sbb
enter
pop
mul
stc
sbb
mov
or
testl
add
arpl
xor
fidivs
adc
jo
and
icebp
test
es
nop
and
push
inc
cmp
scas
sub
mov
jo
leave
pop
mov
das
lret
sbb
es
hlt
push
nop
push
sub
lcall
scas
add
int3
inc
scas
pop
mov
repz
repz
cmpsl
movsb
repz
mov
fwait
lock
loop
adc
fisubrs
sub
aas
add
fldt
outsb
scas
sbb
inc
ds
data16
cld
jge
mov
adc
inc
lcall
insb
pop
jne
loope
insb
cmpsb
ret
dec
mov
and
daa
test
insl
mov
into
subl
lods
jno
push
call
dec
push
mov
call
mov
stos
lahf
dec
mov
dec
insb
sahf
mov
xchg
cmc
std
push
mov
lods
scas
cli
fdivs
daa
mov
xchg
mov
ficoml
dec
pop
adc
std
outsl
sbb
daa
fs
cld
pop
mov
dec
pusha
dec
xor
or
inc
sub
add
icebp
or
sub
cs
mov
fdiv
pusha
push
fldenv
cli
mov
jle
push
mov
pop
lock
inc
sbb
call
arpl
sub
push
or
sbb
pusha
shl
jg
xchg
xchg
in
add
ja
call
inc
fbstp
mov
ljmp
push
out
mov
jge
loope
xchg
inc
fistpll
cmpsl
fmull
js
idivb
xchg
test
test
bound
out
mov
repz
and
push
movsl
int3
scas
inc
inc
andl
int
cs
fildl
repz
clc
enter
idiv
fwait
mov
shrb
cmp
enter
inc
fadds
xor
cltd
mov
std
push
mov
mov
mov
jb
aas
cltd
xchg
push
cmp
or
cmpb
dec
mov
ja
mov
mov
jp
js
lds
xchg
test
dec
xchg
xchg
sub
push
pushw
movsb
mov
mov
xlat
test
push
mov
and
roll
aaa
std
push
mov
or
icebp
pop
cmpsb
xchg
frstor
incl
jae
fdivs
or
das
and
enter
and
lock
lea
inc
push
adc
dec
iret
or
sub
jle
inc
test
imul
js
repz
shrl
mov
das
pop
lahf
dec
subb
or
jecxz
xor
hlt
repnz
clc
cmpsb
mov
mov
lock
cmp
xor
fwait
sbbb
scas
nop
lods
and
and
and
addr16
jae
insl
stos
mov
pop
mov
mov
jp
cld
imul
into
lods
scas
je
mov
adc
adc
cs
adc
pop
sub
inc
mov
add
adc
pop
pop
jae
and
fcomp
push
and
loop
dec
loop
cwtl
in
outsl
sub
dec
lods
loope
push
inc
lahf
add
rclb
inc
cmp
mov
push
adc
test
push
paddusb
mov
mov
sub
xchg
mov
loopne
ss
mov
adcl
pop
fdivrs
and
ja
ljmp
jp
mov
jmp
or
inc
andl
ret
jbe
cli
das
mov
hlt
dec
jne
and
inc
mov
ja
inc
orl
out
mov
sub
or
or
stos
xor
add
stos
fistl
sub
ljmp
jnp
je
xchg
push
xchg
mov
and
adc
lcall
jge
or
add
xor
or
jg
and
dec
rorb
fnstsw
es
mov
mov
outsl
sub
sbb
dec
ljmp
mov
clc
or
pop
pop
or
add
and
jle
fldl
mov
mov
jns
loopne
add
xorb
adc
cs
shll
test
lock
mov
aad
rcll
shlb
repnz
ljmp
xchg
mov
pop
bound
popa
shlb
test
jp
mov
aaa
je
pop
incb
loop
lret
mov
lds
sub
stos
test
clc
in
add
mov
test
iret
ds
cmp
shrl
sbb
mov
mov
icebp
mov
xor
ljmp
add
lahf
sub
dec
and
xor
je
xor
in
add
das
call
pop
mov
mov
call
push
gs
pusha
add
mov
inc
mov
jg
add
jae
icebp
inc
and
fidivs
lods
xor
xor
jae
adc
inc
cmp
or
rorl
out
dec
mov
mov
jae
popa
decl
sarl
or
push
into
test
mov
or
outsb
ljmp
fwait
mov
sub
dec
mov
loope
cmp
pop
test
cmp
lods
mov
push
stos
enter
rorl
icebp
sarl
mov
pop
push
cwtl
push
andl
outsl
or
pop
mov
arpl
enter
and
test
test
adcl
adc
and
out
stos
inc
shrb
les
pop
das
les
roll
add
dec
jle
mov
push
stc
jle
cmc
inc
adc
ljmp
xchg
loop
jp
jg
pop
insl
nop
lcall
shrl
xchg
dec
in
pusha
inc
jge
test
xchg
jae
xlat
in
xchg
xor
mov
and
sbb
fstl
fs
sbb
add
jb
mov
adc
mov
jae
loope
adc
push
push
xchg
push
mov
popa
or
shl
xchg
pop
add
in
push
stos
rclb
jne
test
inc
rol
push
negb
pop
mov
pop
push
mov
adc
sub
daa
sub
add
shrl
mov
rcll
jmp
fidivl
loopne
test
adc
push
fistps
jp
dec
ljmp
add
dec
and
add
lcall
sbb
out
fs
and
sahf
cmp
xchg
loopne
push
test
lahf
sbb
mov
push
rcr
mov
pop
addl
repz
mov
shr
pop
imull
pop
mov
mov
sub
aaa
and
mov
outsl
addl
pushf
add
sub
add
rolb
or
mov
mov
sbb
test
les
ss
fadd
aas
pop
and
and
adc
aad
lods
fdivs
outsb
pop
adc
mov
icebp
mov
lcall
mov
jbe
aam
cmp
leave
lahf
fwait
in
cmp
jg
fwait
xchg
jp
adc
pop
pop
fiadds
jno
test
imul
mov
shrl
push
and
xchg
in
add
or
mov
test
stos
push
jbe
inc
sbb
xchg
add
jbe
stos
cld
dec
xchg
xor
int3
jnp
jae
pusha
lock
cmp
and
mov
mov
fucomi
cmp
out
push
and
mov
roll
mov
or
lcall
adc
lods
loopne
adc
ss
sarb
flds
std
xchg
mov
sahf
mov
hlt
push
mov
pop
call
je
adc
and
or
and
jecxz
xor
nop
rorl
ja
shlb
pop
in
in
mov
add
mov
sahf
pusha
and
xchg
sbb
add
and
pop
push
pusha
das
add
adc
pop
das
xor
icebp
jbe
push
lds
lret
push
ror
hlt
mov
xchg
or
push
hlt
aaa
jb
add
fists
xchg
in
pushf
icebp
mov
push
test
xchg
adc
or
mov
rorl
ret
ljmp
shl
cmc
filds
dec
sbb
push
push
stos
cs
movl
sti
cmpsb
in
outsl
insb
mov
pop
popa
rorb
inc
mov
aas
pop
js
iret
mov
bswap
shrb
mov
sub
xor
clc
sbb
inc
jmp
push
popf
inc
dec
shrl
push
bound
push
jg
xor
pop
push
inc
adc
inc
lea
int
adc
jae
adc
imul
add
push
shr
mov
xchg
pop
push
daa
cmp
out
push
cmpl
xor
test
stos
adc
inc
pop
sub
and
fstpt
mov
or
sbb
cwtl
jno
mov
addr16
cmpsb
push
aam
sbbl
jle
ret
pop
lods
imul
push
dec
ret
call
test
cs
test
pop
sbb
das
push
mov
cs
inc
jb
andb
sbb
pop
lds
sbb
add
stc
sub
xchg
add
das
aaa
mov
mov
jl
cs
add
or
fstl
movsb
sbb
add
inc
mov
pop
cmp
sti
sbb
cmp
loope
xchg
cmp
sbb
popa
dec
dec
fst
cmp
mov
xchg
dec
xor
mov
inc
or
addr16
sar
aad
cli
or
xchg
jns
sub
sub
insl
mov
in
cs
mov
mov
inc
and
clc
scas
jbe
enter
leave
and
mov
out
fstps
xchg
and
sti
addl
decl
xor
and
adc
cltd
in
xchg
jmp
jno
out
push
insb
imul
cmp
mov
pusha
adc
jo
sub
dec
lret
fisubl
sbb
mov
dec
mov
mov
aaa
sbb
xor
xlat
stos
pop
mov
fisttpll
dec
adc
sarl
jecxz
mov
push
popa
daa
lock
insl
repnz
test
insl
adc
test
mov
lret
mov
sub
ret
fildll
aam
adc
add
cli
sbb
inc
dec
test
int
sbb
sub
movl
ljmp
add
les
clc
sbb
pop
push
pusha
or
inc
cmc
orl
push
mov
adc
mov
sbb
mov
insl
movsb
int3
mov
cmpsb
sbb
dec
loopne
xchg
jle
add
inc
lret
les
pusha
or
ljmp
cmp
loop
or
mov
rorb
mov
or
and
add
arpl
jl
fldenv
addr16
push
decb
fwait
nop
and
mov
and
jmp
and
fdivrl
ds
in
dec
mov
jne
or
cmp
inc
gs
test
sti
mov
xor
mov
xlat
ja
mov
mov
inc
mov
sbb
stos
cld
push
mov
fldt
mov
xchg
inc
stos
push
sbb
sub
xchg
ds
std
aad
push
or
outsb
call
dec
mov
decl
xchg
mov
sbb
add
push
add
mov
mov
xchg
lds
outsl
push
test
filds
inc
movsl
ds
loope
xor
sbb
push
ljmp
aaa
mov
add
pop
out
mov
sub
mov
hlt
push
sub
sbb
adc
stos
adc
sbb
outsl
mov
mov
in
mov
shl
adc
pusha
in
adc
mov
sbb
pop
fisubrl
or
dec
mov
lock
inc
inc
and
push
cmpsb
or
loopne
popa
neg
push
mov
nop
xor
pusha
in
sub
adc
push
lods
sar
sbb
imul
xor
je
fnstcw
jg
adc
shl
add
daa
push
ds
insl
jecxz
inc
stos
and
sbb
mov
push
cld
into
sbb
rcll
push
rorl
or
xchg
decl
mov
gs
fdivp
pop
jmp
loopne
cmc
mov
adc
mov
notb
sbb
stos
insb
clc
repz
arpl
xchg
lahf
pop
inc
jb
mov
movsl
jge
mov
pop
pusha
push
push
xchg
and
mov
jmp
loop
in
std
adc
test
sub
popa
lcall
sub
rclb
or
andl
add
enter
cld
or
dec
in
sub
mov
xor
xor
and
cmp
mov
adc
or
fstps
add
lea
cltd
loopne
dec
test
movsb
roll
and
je
sub
int
xchg
and
push
sbb
sti
ja
das
push
neg
ljmp
clc
outsl
push
jle
pusha
fstps
pop
ss
jecxz
xchg
push
mov
mov
pop
or
and
or
enter
sbb
int3
imul
mov
pop
mov
lock
mov
xchg
mov
fistl
mov
test
sub
andb
roll
out
push
int
mov
pop
dec
mov
insl
paddusb
jbe
in
popf
jle
xchg
shll
jp
cltd
jmp
scas
pop
ret
xchg
outsl
and
sbbb
shl
adc
xor
inc
mov
orl
cmp
and
push
iret
adc
mov
outsl
jne
jnp
mov
lcall
pop
arpl
push
dec
insb
arpl
mov
shrl
sti
lods
sbbl
insb
scas
pop
cltd
icebp
lea
mov
icebp
sbb
and
ja
notl
add
ret
es
add
movsb
arpl
aad
pushl
adc
lcall
adc
mov
mov
insb
mov
dec
cmpsl
add
xlat
cmovne
jle
xor
ret
or
icebp
mov
and
scas
sub
cs
mov
cwtl
push
lds
pushl
fdivl
aam
and
push
dec
dec
or
and
movsb
shll
and
pop
stc
pop
dec
mov
ret
cs
cwtl
cmpsl
cld
call
mov
outsb
add
mov
mov
sub
sub
pusha
out
lcall
mov
dec
bound
dec
mov
ret
inc
xchg
and
push
pusha
add
fwait
loope
ret
adc
cld
xlat
push
mov
sub
push
sub
push
cmp
subl
jb
add
push
gs
sbb
sbb
mov
sbb
push
or
fisttps
shrb
negl
popa
push
xchg
aad
pop
js
in
fisttpl
jns
test
leave
mov
sbb
pcmpgtw
or
mov
stos
div
dec
daa
mov
enter
mov
ljmp
mov
icebp
push
daa
rolb
cmpsb
add
mov
outsb
shll
mov
pop
mov
add
and
shlb
aam
pop
push
movsl
cmpsb
jmp
fistl
lds
std
push
push
mov
leave
jbe
dec
pop
pop
lock
inc
shll
cmc
and
mov
loopne
ret
inc
adc
mov
insb
push
inc
add
je
jno
sbb
negl
cmp
cmp
xchg
int3
ja
fucom
pop
fs
pusha
aas
stc
push
mov
fstl
popa
add
sti
inc
mov
jp
repnz
loope
cwtl
dec
jne
jnp
jle
repz
push
cmp
and
inc
push
aad
dec
inc
adcl
add
lock
outsl
ret
inc
loopne
popa
push
add
fdivl
int3
and
push
jecxz
dec
jnp
inc
sub
mov
jmp
dec
inc
loopne
test
pop
pop
scas
xor
dec
in
sub
push
jnp
adc
outsb
fildl
lods
dec
sbb
sbb
lret
aam
out
fistpl
mov
sbb
sbb
pop
sbb
cmp
mov
adc
lret
add
cmp
or
decb
je
or
sbbl
mov
int
and
bound
xchg
aad
or
add
pop
pushf
cltd
sti
mov
and
mov
cmp
dec
push
inc
and
or
mov
push
cld
in
shll
pop
incl
inc
dec
lods
pop
divb
std
mov
pushf
jmp
sub
cmp
pop
add
xchg
movsb
cltd
sbbb
dec
add
mov
shlb
mov
rcrb
push
out
repz
aam
nop
xor
ret
xor
add
fistpl
pop
aas
sub
movb
pop
push
pop
std
mov
arpl
pop
cld
mov
bnd
inc
sub
sti
and
sbb
ret
ds
decb
mov
jl
inc
fisttpl
daa
push
or
imul
ficoml
loop
std
insl
iret
or
cmpsb
aaa
test
push
les
cmpl
mov
jae
gs
popf
xchg
fistl
xor
inc
in
add
or
imul
xor
xor
ljmp
adc
push
mov
mov
ja
and
sti
cmp
push
xor
cli
shr
lods
jmp
call
or
fisubrs
adc
mov
sub
aas
test
pushf
dec
xor
je
call
mov
sahf
jbe
out
sbb
fistpl
jbe
sbb
test
loope
in
scas
add
or
scas
push
cs
clc
call
sarl
mov
jmp
inc
arpl
sbb
xchg
adc
or
cltd
pushf
incl
jecxz
mov
lahf
dec
pop
push
xlat
add
dec
add
jecxz
pop
sub
adc
repnz
pop
jnp
sbb
jne
inc
pop
dec
cmp
lcall
lods
inc
rcrb
shll
jge
push
cmpsb
push
mov
dec
pop
std
out
decb
mov
mov
fnstcw
or
push
cmp
hlt
push
sbb
mov
ficoml
lods
jmp
in
dec
inc
inc
xchg
push
or
or
inc
inc
or
ljmp
sbb
sub
movsb
inc
pop
sbb
mov
mov
inc
mov
shll
notb
inc
inc
scas
push
xchg
cld
pop
stos
sbb
ret
inc
jmp
pushf
dec
daa
inc
jns
repnz
inc
mov
mov
insl
outsl
fnsave
insb
mov
jl
jo
xorb
push
ret
adc
sbb
std
jp
cmp
jbe
ss
jle
inc
lcall
or
mov
mov
rcll
xchg
add
shll
pop
mov
or
and
inc
jecxz
cmp
xchg
or
test
cmp
ficoms
hlt
test
sub
cli
sub
sub
rclb
mov
lcall
pop
loope
jl
cmc
js
out
mov
decl
hlt
lea
jae
adc
push
outsb
pop
jo
add
cmp
leave
jp
mov
mov
xor
xor
push
mov
fcompl
movsl
sub
cmpsl
fildll
mov
adc
push
insb
iret
mov
incl
and
cld
and
fstpt
stos
adc
shlb
jbe
xlat
mov
int
jp
stos
jo
decl
or
cmp
mov
test
sbbl
sbb
push
adc
or
pop
adc
pop
popf
jns
xor
scas
mov
xorb
adc
into
orl
shrb
or
ffreep
pop
push
andb
push
push
sahf
dec
mov
cs
mov
inc
stos
stos
add
dec
outsl
rcrb
sbb
inc
xchg
xchg
lcall
insl
mov
xor
pop
mov
cld
test
jmp
outsb
cld
sub
in
xor
lds
cmpsb
inc
pushf
add
shrl
mov
loopne
inc
sbb
stos
outsl
sbb
dec
pop
or
cmp
or
cmpl
jno
xor
in
pop
imulb
outsb
test
ffreep
shrl
mov
mov
call
inc
push
inc
mov
jbe
clc
aaa
shrb
add
pop
out
arpl
adc
bound
sbb
clc
fildll
fs
mov
mov
mov
xchg
inc
push
insl
mov
xor
mov
sbb
test
push
add
adc
shrb
jnp
in
sub
sub
pop
je
xchg
outsl
rorl
test
insb
mov
mov
mov
ljmp
outsb
and
xchg
sbb
out
xchg
mov
clc
jge
fwait
in
in
stc
push
mov
in
adc
in
dec
jp
mov
adc
les
loope
aas
arpl
mov
outsl
aaa
pop
dec
ficomps
pop
mov
hlt
nop
out
pop
call
inc
stos
sbb
insb
std
in
enter
fsubrs
sub
mov
xor
popa
inc
xchg
mov
cmpsl
pop
stos
sbb
mov
sbb
sub
adc
cmp
fstl
test
jne
clc
sub
call
push
cmp
push
push
jmp
int
mulb
es
xchg
push
in
fwait
movsb
popf
inc
inc
pop
push
mov
inc
jnp
mov
adc
ret
cli
xchg
push
shll
pop
jecxz
sbb
enter
xchg
inc
aad
cmc
decl
fbstp
hlt
sub
rol
repz
daa
out
jg
push
test
stos
push
in
test
push
clc
sub
cli
pop
xchg
sbb
add
add
and
cmc
inc
adc
test
xor
push
jo
out
sub
or
sbb
inc
ds
aam
mov
lea
pop
test
addr16
insl
insb
jo
jb
mov
add
xor
cld
jmp
mov
mov
pop
sbb
dec
xor
push
ja
icebp
jge
add
inc
dec
mov
or
into
push
jp
scas
incl
jmp
sbb
aas
jns
cmp
inc
jle
test
subl
fs
mov
int3
push
mov
xchg
cmpl
inc
mov
mov
adc
mov
in
testl
mov
and
popa
mov
mov
xchg
into
add
fst
push
jno
push
mov
jne
ret
clc
mov
cmp
xor
dec
fdivs
adc
mov
fists
and
mov
pop
cmpsl
arpl
stos
mov
pusha
and
add
xchg
pop
fs
fs
xor
pop
xlat
fisttps
cmpsb
add
pop
sqrtps
mov
or
xor
mov
push
mov
sub
jecxz
mov
popf
lea
mov
pop
add
cmp
and
mov
jns
adc
cld
xchg
sbb
repnz
adc
and
movsl
cmpsb
clc
inc
pop
imul
hlt
inc
add
andl
adc
sbb
add
outsl
fists
push
cmc
xchg
dec
lods
cmp
adc
mov
sti
cmp
in
pop
cmp
test
es
insb
mov
cmp
mov
sub
and
sbbb
mov
lods
aam
ss
cld
dec
cmpsl
add
adc
cmp
and
adcb
dec
sbb
cmp
xchg
sub
jl
sbb
loop
sbb
rolb
outsl
pop
sub
cli
pushf
and
pusha
xchg
stc
mov
je
mov
sbb
fistpll
xchg
sbb
push
shl
add
mov
adc
addr16
stos
jmp
mov
jle
sbb
sahf
in
push
push
mov
inc
add
xor
mov
lret
pop
cs
ss
mull
in
sbb
cmc
add
repnz
out
jle
arpl
jae
sti
enter
andb
jmp
mov
lods
push
addr16
mov
scas
push
mov
scas
xchg
jge
lock
inc
mov
mov
cs
mov
and
adc
sub
aad
leave
loope
push
xor
in
movsl
dec
pop
pop
addr16
loope
int3
les
lret
lahf
xor
pop
bound
loopne
fidivs
icebp
test
aad
std
inc
insb
in
orl
jecxz
jbe
insb
loope
sub
cs
mov
shl
in
inc
in
ss
pop
rol
shlb
mov
out
das
imul
add
jle
add
cmp
xchg
sbb
outsl
fcompl
ds
dec
mov
pop
int
lds
cmc
divb
push
aad
lret
adc
xorl
das
shrb
fildll
fdiv
das
and
jle
mov
cmp
inc
add
inc
mov
fsubrp
xchg
fadds
cmp
adc
orl
cmp
es
shr
cmp
rorb
lret
in
mul
push
cmpsb
cwtl
adc
and
pop
les
stc
push
insl
lea
add
and
mov
jp
fstpt
pop
or
or
push
or
ja
pop
mov
mov
push
xor
and
dec
mov
ss
test
add
xchg
push
es
in
arpl
cmp
pop
xor
add
lahf
mov
lret
cwtl
fstpt
jge
cmpsb
cmp
into
pop
bound
mov
js
fcoms
jp
lret
pop
in
fdivr
push
in
fcmovnu
push
insl
pop
inc
mov
cli
or
xorl
fbld
iret
adc
addr16
mov
or
insb
scas
jmp
cmp
xor
stos
mov
data16
test
xchg
call
jnp
or
nop
mov
lods
jmp
jnp
mov
pop
cmc
push
dec
insl
xor
inc
and
mov
jp
lret
dec
aaa
push
mov
jno
push
sub
cmp
scas
std
or
mov
shll
mov
xchg
xchg
jp
ja
ja
daa
cmc
in
stc
and
xor
arpl
sbb
or
sbb
pop
mov
dec
popa
icebp
add
pop
xchg
pop
mov
sub
icebp
push
push
adcb
cmp
inc
insl
adc
add
sbb
iret
es
or
into
repz
pop
outsl
rclb
inc
leave
iret
pop
nop
and
mov
xchg
jg
mov
xor
pop
pop
pop
rol
pushf
mov
sbb
or
clc
jne
mov
into
cmp
adc
lock
cmp
es
mov
pop
jnp
je
ss
sbb
ret
cmp
xchg
jmp
fs
clc
push
repz
mov
mov
xor
insb
rclb
mov
dec
in
jne
inc
outsl
cld
mov
stos
sub
push
cmp
shlb
add
aaa
lock
sbb
lock
sbb
in
ret
cwtl
push
cmp
fcoms
loop
insb
sti
fidivrl
inc
mov
das
je
incl
jns
lods
mov
inc
in
push
and
adc
pop
mov
lcall
outsb
pop
addr16
sbbb
ja
mov
or
movsl
scas
pushl
out
adc
or
mov
idivb
mov
dec
jle
xchg
subl
idiv
div
cli
scas
dec
pusha
dec
xor
pop
imul
je
xchg
add
mov
cltd
ds
shlb
adc
incl
jl
push
aad
mov
mov
add
fsubs
or
dec
loope
add
mov
push
xor
into
dec
hlt
mov
shlb
push
sarl
xor
mov
mov
loopne
stos
cmp
nop
pushf
pop
mov
mov
arpl
dec
ljmp
cmp
fiaddl
test
clc
in
ss
jno
nop
test
jb
test
call
push
sub
jne
sti
push
int3
mov
in
mov
ja
cld
push
sub
cmp
fsubrs
lcall
les
in
jmp
jb
fistpll
std
xchg
in
test
pushf
test
sub
mov
leave
movsl
je
pop
push
push
lahf
pop
aaa
cli
rcrb
pop
adc
ds
xchg
mov
lcallw
mov
inc
ret
pop
out
adc
shrb
mov
dec
imul
dec
and
adc
jno
les
jns
push
add
jle
mov
adc
subb
mov
jbe
xchg
cmp
inc
adc
xorb
adc
push
adc
stc
sbb
or
out
sbb
pop
loop
scas
sarb
outsl
pusha
loope
add
test
xor
dec
push
xchg
icebp
repnz
stos
mov
mov
call
push
loopne
mov
nop
mov
imul
sbb
inc
lret
stc
dec
sbb
filds
dec
mov
sbb
pusha
xlat
sub
call
dec
xchg
add
jmp
negb
pop
test
insb
icebp
add
jle
pop
icebp
out
orb
push
sub
sbb
ret
mov
cmpsb
loopne
mov
movsb
push
data16
mov
aam
cmp
out
xchg
rolb
mov
inc
ror
gs
push
pop
jb
daa
add
adc
inc
adc
mov
cmpb
or
mov
jno
mov
test
fdiv
add
mov
stc
es
lods
cs
push
cmpsb
dec
and
sbb
pop
je
mov
xor
pop
ja
test
les
mov
adc
jne
icebp
add
add
dec
sti
or
mov
jno
and
mov
fldl
push
lahf
and
mov
fildl
pop
pusha
aam
mov
call
adc
sub
xor
cltd
sti
lods
jbe
pop
push
ja
cltd
xchg
mov
mov
test
xorl
test
add
in
stos
rcrb
aam
lahf
sbb
mov
and
xchg
push
mov
mov
fsubrp
loopne
repz
in
mov
cmc
sub
cli
jl
stos
jne
xchg
hlt
jmp
test
dec
and
gs
adc
fbstp
ljmp
adc
pop
sub
sub
ljmp
xor
rcl
in
and
sub
mov
ljmp
clc
xor
outsl
add
pusha
add
test
loop
ljmp
leave
mov
es
mov
mov
push
ffreep
cmp
lret
push
inc
shrl
adcb
mov
push
cmp
xor
mov
ja
out
push
mov
mov
jbe
shl
adc
pop
ds
jge
jp
sbb
pop
mov
add
mov
or
pop
cmp
in
dec
sub
pusha
jnp
push
pop
pop
and
inc
cmp
cmpsb
test
adc
mov
inc
and
hlt
jmp
int3
adc
in
leave
pop
sbb
movsl
jg
or
leave
push
xor
lcall
xlat
pushf
sti
fisubrs
and
lahf
pushf
loope
jmp
hlt
fwait
sbbl
pop
sarb
outsb
xlat
leave
ds
adc
or
movsb
lods
test
jae
cmpsl
xchg
mov
decb
mov
push
cltd
fcompl
dec
mov
adc
sbb
xchg
pushl
repnz
jge
sub
sbb
jmp
aaa
lock
adc
or
sar
insl
test
not
sbb
xchg
lock
xlat
jmp
enter
je
add
mov
ljmp
fdivs
out
sub
lret
sub
push
pop
pop
nop
sbb
sti
add
dec
clc
or
outsl
inc
mov
ljmp
add
shll
xchg
mov
pop
sarl
mov
push
mov
sti
xchg
sub
inc
das
hlt
pop
inc
gs
dec
std
mov
pushf
fbstp
invd
adc
add
clc
sbb
xor
out
or
pop
jp
add
cmpsb
or
and
mov
pop
insb
adc
cwtl
fdivrp
xchg
loopne
mov
xor
mov
cmp
push
rorb
add
test
incb
mov
jb
inc
inc
lahf
jb
fcos
fistpll
push
sub
inc
adcb
push
add
int
and
push
jg
fimuls
adc
xchg
mov
jnp
test
mov
and
mov
fisubl
mov
icebp
adc
xor
aaa
xchg
int3
icebp
adc
lret
lods
jae
rol
sbb
ret
pop
fcmovnu
adc
xchg
inc
xor
sub
int3
pop
add
pop
sbb
dec
or
vpunpckldq
mov
negb
inc
inc
inc
imul
cltd
dec
xor
pop
sub
and
test
dec
xchg
ret
and
xchg
push
mov
push
add
fistl
inc
mov
xorl
out
std
pushl
ljmp
xchg
fs
shlb
movsl
es
push
fmull
mov
out
addr16
pop
push
inc
mov
cmpsb
shrl
cmp
lret
ret
jne
loopne
and
cmp
bound
adc
or
adc
jbe
fisubrl
ret
cmpl
add
mov
dec
jno
sub
rclb
movsl
enter
movsl
loopne
xchg
subl
mov
mov
mov
mov
push
xor
fs
imul
push
dec
mov
inc
cmp
call
fnsave
xchg
cmp
rclb
mov
sbb
sbb
inc
insb
cmpsl
xchg
iret
xchg
push
mov
add
cs
mov
mov
adc
sub
cmpsb
dec
je
outsl
xchg
sub
pop
mov
sbb
jmp
push
stos
sbb
or
sub
xchg
adc
insl
jnp
pusha
add
cmp
out
lods
imul
ljmp
or
insl
jmp
pop
or
mov
xor
ljmp
pop
mov
and
imul
sub
mov
push
xchg
and
mov
shl
in
mov
push
andb
push
leave
test
imul
cmp
and
sub
add
lcall
int3
jnp
xchg
rol
dec
sbb
pop
sti
pusha
push
or
sti
pop
jmp
nop
mov
enter
sarb
push
ljmp
and
shll
ret
ljmp
cmpsl
out
pop
mov
ret
jg
jo
lea
xor
dec
icebp
pop
cli
dec
sar
jg
hlt
sbb
sbb
push
in
and
aad
jo
aaa
cmp
jp
lea
lock
mov
push
jg
pushl
pop
in
mov
call
mov
fdivl
add
movsl
insl
cs
es
mov
bound
jae
inc
jnp
pop
cmp
test
shl
outsl
pop
pushl
pop
and
and
fdivs
cmp
xchg
sub
mov
xchg
add
ljmp
hlt
decl
mov
aam
int3
daa
call
repnz
test
lcall
sti
iret
pop
mov
loop
jecxz
pusha
cli
push
inc
pushf
int
mov
and
call
in
pop
dec
pop
push
xlat
xor
test
add
mov
fiaddl
ds
push
mov
push
mov
lret
adc
adc
mov
test
fwait
xlat
cli
inc
pushl
repnz
ss
inc
adc
push
xchg
sub
decl
ret
jnp
out
jmp
sbb
adc
ret
fmulp
jle
insb
aad
mov
call
clc
inc
and
push
iret
pop
ljmp
pop
lret
pop
xorl
push
inc
jmp
frstor
mov
repnz
lret
pop
lods
dec
xchg
gs
jmp
sahf
xor
lahf
xor
test
pushf
faddl
mov
ss
sbb
je
sar
outsl
cli
dec
ja
cmc
mov
dec
movsb
xor
addr16
fldt
loopne
xor
ss
jg
test
dec
or
iret
jp
fldenv
dec
pushl
clc
dec
cli
or
jae
inc
fmuls
xlat
fiaddl
push
cli
lods
mov
dec
sbb
dec
cmpsb
cmp
jg
mov
aam
cmp
jae
andb
xchg
fabs
adc
stc
incl
ficoml
data16
lds
leave
adcl
sbbb
and
dec
in
test
sarl
adc
add
xchg
sub
mov
js
and
pop
xchg
in
adc
jne
and
pushl
push
movsb
std
in
out
ljmp
add
loopne
push
cltd
dec
push
or
lea
jo
sub
in
mov
aam
push
xchg
push
sarb
into
sub
mov
sub
jg
js
arpl
xor
sbb
mov
push
adc
xchg
mov
in
adc
pop
jecxz
cli
xsaveopt
insl
repz
call
pushl
mov
jns
das
enter
loopne
in
pop
push
into
dec
out
adcb
addb
hlt
addr16
outsl
leave
pop
lahf
iret
push
bound
pop
insl
add
sub
inc
stos
rorb
add
mov
sub
mov
sbb
add
and
inc
jb
and
inc
xorb
push
adc
mov
sub
fnstsw
test
shlb
int3
adc
test
push
fwait
decl
fnstsw
pusha
iret
jge
faddp
jmp
pop
inc
or
push
mov
out
jb
or
pushl
clc
xor
stos
not
cmp
ja
orl
xchg
push
mov
mov
nop
int3
dec
lahf
lahf
adc
leave
orb
fiaddl
jmp
inc
movsb
pusha
mov
insl
cli
stos
sub
pushf
sbb
stos
xchg
mov
fsub
and
and
mov
mov
mov
outsb
out
mov
mov
dec
pop
jbe
pusha
and
cmp
dec
push
xchg
fiaddl
adc
add
scas
mov
jno
mov
inc
mov
mov
dec
call
push
pop
pop
test
cmc
sub
cltd
out
jns
outsl
sub
idiv
das
icebp
push
jno
and
pop
imul
xorb
cli
mov
adc
jg
jo
push
cmpsb
loopne
jae
xor
test
and
aaa
sub
add
xor
incl
mov
sub
ret
push
je
dec
mov
adc
pop
cld
insb
fstpt
aaa
test
cli
jg
and
mov
mov
cmc
xor
arpl
xor
js
push
ret
jmp
xchg
arpl
pop
in
inc
dec
ret
mov
jg
fisttpl
mov
sub
mov
xor
ljmp
mov
fistps
aam
fsubs
jo
inc
lock
enter
lods
push
inc
adc
clc
outsl
lock
movsb
fildll
push
addl
cs
call
xlat
xchg
into
lods
leave
imul
movsl
fldt
xchg
dec
mov
mov
push
repnz
call
int3
inc
mov
xchg
popa
addr16
es
push
ret
cltd
jbe
ds
mov
xchg
pop
sbb
pusha
out
cmpsb
pop
cs
xlat
cmp
sbb
call
pop
pop
xor
jbe
mov
lahf
push
adc
add
sbb
ljmp
std
xchg
cmp
sbb
fwait
aad
adc
lcall
repz
pop
in
jns
jge
std
incl
xor
push
pop
aam
cli
and
inc
jmp
decl
cli
mulb
mov
ljmp
mov
aas
test
nop
jmp
xchg
push
rcrl
loope
incb
or
fsubs
add
xchg
clc
loopne
int3
stc
data16
mov
jnp
jmp
inc
push
icebp
or
adc
and
mov
mov
ljmp
push
adc
add
mov
mov
sub
sub
ss
lea
inc
mov
dec
out
inc
sti
popf
outsb
fisubl
or
test
adc
inc
cmp
insb
sub
mov
mov
inc
repnz
cld
inc
xor
push
pusha
or
inc
push
in
jns
push
ret
push
daa
jg
movsl
and
pop
xchg
xor
sbb
call
daa
les
and
rcrb
xor
mov
or
jmp
sarl
lahf
mov
and
sbb
jns
or
cmp
dec
rorb
lcall
outsl
jmp
push
sbb
aas
xchg
jle
fdivs
daa
or
pop
or
daa
stos
mov
sbb
insb
sub
sub
fistpl
or
lret
incb
out
inc
out
push
insl
cmp
sti
sbb
imul
mul
mov
dec
jge
fstpt
cmpsb
ljmp
loop
mov
sub
cmp
bnd
or
push
jl
push
dec
fstp
mov
into
popf
lret
jl
dec
mov
fucomp
or
out
scas
test
ljmp
xchg
and
call
jns
aas
decb
stc
cmp
bound
cmc
decl
xorl
addb
fsubrl
pushl
inc
movsbl
fidivrs
imul
push
sub
call
jnp
push
pop
aaa
push
es
int
or
pop
cmp
lcall
adcl
cmp
xchg
mov
std
call
pusha
lret
cmp
divl
push
xchg
pop
mov
jg
sbb
iret
aad
mov
mov
pushf
daa
sbb
scas
aaa
mov
decl
cli
in
sub
out
push
iret
insb
outsb
imul
inc
leave
push
ljmp
push
in
insl
and
jmp
mov
cmpsb
dec
xor
movsl
ljmp
icebp
ljmp
xchg
push
jp
cmp
lcall
and
xchg
jp
ljmp
test
and
fstl
pop
jbe
push
fldl
sub
sbb
xlat
js
data16
cltd
pop
lods
loop
lcall
add
lea
leave
xor
aad
push
incl
leave
pop
xlat
jmp
inc
test
les
inc
cltd
jle
nop
idivb
incl
test
mov
out
jb
jne
mov
std
adc
mov
jg
sahf
sub
xorl
adc
test
pop
call
decl
or
mov
insl
arpl
xlat
push
xor
jne
push
jb
mov
cmc
inc
icebp
lcall
testl
outsl
popf
mov
cmp
aam
lcall
add
int3
mov
and
fimuls
or
stos
inc
cmp
mov
je
dec
lock
test
cli
ret
sbb
lcall
into
mov
in
aaa
push
scas
sub
add
lds
cmc
incl
adc
icebp
roll
sub
call
add
std
jno
inc
dec
mov
fstl
dec
push
loopne
mov
call
cmpsl
sub
jp
lods
scas
push
das
xlat
pop
imul
test
or
xchg
outsl
xor
and
xlat
dec
incl
add
sbb
mov
mov
outsl
loopne
mov
adc
mov
jne
fwait
mov
xor
add
lock
popa
adc
aaa
xchg
loope
or
decl
imul
leave
jbe
in
mov
cmp
push
ret
stc
inc
inc
subl
mov
cmc
dec
cwtl
ds
mov
and
movl
stos
movsb
cmp
aas
lahf
pusha
jne
sbb
sahf
sub
aaa
pop
push
xor
dec
mov
sub
in
out
icebp
daa
adc
xor
xchg
outsb
std
incl
jg
mov
stos
lcall
xor
ljmp
fsubrl
in
mov
bound
js
and
or
cld
or
icebp
lea
popa
adc
fisttpll
rclb
lods
incb
xor
add
je
jmp
scas
jb
in
sar
jge
cmpsb
mov
mov
mov
mov
fbld
or
dec
mov
lock
and
dec
jl
mov
loop
aaa
pop
sbb
ljmp
ljmp
jp
std
outsl
lock
imul
int3
pop
xchg
jg
ljmp
push
sbb
scas
or
inc
dec
ret
xchg
in
and
cmp
push
mov
jp
xchg
daa
cltd
or
xor
lods
cmpsl
fs
sub
xor
or
repnz
fdivl
jno
cwtl
xor
fistpll
add
sbb
cmp
lcall
pop
lret
int3
dec
outsb
mov
inc
je
sub
ljmp
loopne
ss
lahf
xlat
enter
inc
rorb
sti
xchg
gs
and
lods
cmp
jae
sub
or
fmull
and
decl
rcll
aas
dec
mov
scas
sbb
call
int3
push
adc
mov
decl
repnz
mov
scas
push
push
movsl
loop
shl
pop
pop
into
mov
aaa
cli
jl
xchg
xorb
xchg
sbb
shll
mov
mov
sti
fstl
mov
sahf
xchg
cmp
inc
pusha
adc
xchg
call
std
xchg
test
add
mov
mov
xchg
jns
xchg
jae
aas
add
dec
pop
cld
dec
xor
sbb
inc
repz
ljmp
xchg
lock
jmp
out
jno,pt
adc
aam
xchg
in
mov
mov
mov
outsl
lcall
mov
xchg
fbld
and
aas
test
arpl
jecxz
call
js
mov
cld
cmp
lea
fsubs
in
mov
cmpsl
loope
mov
dec
call
pushl
mov
lea
mov
dec
adc
movsb
popa
pop
lods
adc
mov
daa
cld
mov
and
addr16
mov
mov
ja
mov
scas
fnstsw
decl
xchg
xchg
inc
mov
sub
test
xchg
push
sahf
inc
xor
adc
hlt
pmulhw
jne
and
clc
pushl
adc
jno
mov
push
inc
and
fcmovnb
bound
adc
andb
stos
enter
cmpsl
jbe
cmp
ds
or
dec
or
dec
dec
add
faddl
pusha
mov
add
leave
dec
push
jecxz
xchg
adc
decl
pop
inc
sub
push
clc
mov
daa
ficompl
ljmp
mov
lcall
lds
into
mov
xchg
pop
ss
cmp
jmp
call
pop
clc
or
movsl
imul
hlt
jb
lret
ss
das
push
cli
inc
adc
add
fildll
jmp
loop
mov
lods
xor
push
mov
jmp
dec
mov
lcall
lret
adc
lcall
xchg
push
pop
sub
jns
and
bound
call
pushf
xchg
pop
jg
xlat
add
sub
jno
mov
jns
jg
jmp
out
dec
mov
lcall
and
lcall
aad
sti
je
push
push
arpl
push
nop
pushl
clc
jmp
jno
xor
shll
jmp
push
jg
and
call
sub
pop
jg
sub
xchg
adc
jg
test
xchg
int3
ja
enter
jmp
or
nop
frstor
pop
xchg
gs
sub
push
adc
pushf
xchg
jns
jg
fidivs
pop
outsl
icebp
es
xor
mov
xchg
mov
jo
sti
sbb
or
xchg
jmp
movsl
lock
xchg
sub
push
pop
and
mov
ljmp
jg
jns
movsl
sub
jne
mov
js
mov
notb
dec
or
inc
dec
lds
sbb
cs
aad
fwait
push
adcb
pop
pop
cli
lcall
ffreep
ret
cmp
lea
jns,pn
push
je
sar
outsl
std
rcrl
nop
in
in
pop
add
sub
lcall
or
dec
cld
lods
mov
shl
in
out
jg
inc
fisttps
fucomip
aaa
jb
out
stc
mov
sbb
stos
popa
jp
ret
xor
xchg
fists
clc
shr
xchg
mov
repz
xchg
lds
push
mov
sub
jg
sub
adc
cmp
mov
mov
loopne
adc
sbbl
aad
hlt
ljmp
xchg
jecxz
int3
push
ret
add
fs
push
inc
gs
mov
mov
rcrl
mov
je
rclb
call
sbb
add
and
pop
cld
data16
jno
decl
push
test
dec
fwait
lcall
ret
stc
mov
dec
cmp
cltd
mov
int
outsl
lock
mov
testb
pushf
mov
daa
scas
punpckhdq
jg
movsl
xchg
pusha
and
mov
lods
adc
aas
mov
aam
push
sbb
lock
aaa
roll
in
or
iret
mov
bound
push
outsl
dec
insl
xor
lahf
ret
cmp
xor
mov
or
xchg
ljmp
cs
outsl
sti
jnp
test
les
mov
decl
xor
sbb
aam
subb
movsl
sar
sbb
sub
and
xchg
bound
inc
inc
testl
faddl
pop
scas
cmpsl
imul
call
icebp
sbbl
scas
pop
pop
sbb
lret
lock
mov
aas
fimuls
jmp
push
in
add
push
hlt
ja
enter
adcb
pop
lds
pushl
dec
mov
xchg
stc
and
adc
pushf
in
xchg
xchg
loopne
stos
lcall
or
pop
inc
imul
or
push
inc
insl
sub
cmp
jge
jnp
call
xchg
push
scas
cwtl
test
mov
mov
sub
pop
pop
add
pop
jb
dec
or
enter
adc
xchg
adcl
fdivr
ret
add
addr16
fisttps
add
ljmp
add
mov
aas
pop
cmpsl
inc
js
into
xor
notb
xor
mov
xchg
clc
fildll
leave
inc
dec
adc
fcoms
shrl
and
test
out
inc
call
cld
jmp
fsubl
in
xorl
in
and
fidivrs
call
sub
fildl
out
xchg
int3
pop
lods
mov
sbb
cmp
inc
test
decl
repz
lcall
movsb
mov
mov
loopne
clc
out
sbb
jb
and
xor
out
pop
jl
adc
call
in
arpl
sarl
decl
hlt
aam
jge
mov
pushf
mov
mov
and
incl
jae
xor
push
daa
mov
and
adc
pop
jmp
sub
loop
mov
xchg
and
dec
mov
test
inc
ljmp
jg
enter
aad
jle
and
ret
mov
inc
inc
testb
or
sahf
into
inc
mov
push
adc
inc
sahf
xor
adc
aad
loopew
pushf
mov
push
sub
mov
setb
sub
lods
push
mov
xor
or
lcall
pushl
sbb
repz
popa
lret
mov
add
xchg
fsubp
aam
push
or
mov
lods
or
sarl
pop
xor
pop
mov
inc
je
mov
negb
sbb
fnsave
inc
lcall
ja
add
mov
mov
jge
leave
sti
cmp
stos
or
add
pushl
jp
add
in
cmc
cmp
aam
pop
les
out
and
stos
les
jl
repz
lret
ss
xchg
repnz
cmp
dec
sarb
sahf
mov
dec
and
xor
mov
push
ljmp
subl
xchg
pop
repnz
pushl
movsl
les
es
pop
sub
nop
sbbb
sbb
pop
ss
pushl
vpaddw
xor
jp
int
divl
add
in
rcll
push
ljmp
pop
ljmp
jle
aam
movsl
iret
add
rcrl
out
pusha
nop
mov
add
cmc
clc
push
decl
mov
mov
dec
jecxz
faddl
stc
arpl
pusha
xchg
cmp
mov
pusha
aam
pop
jno
sbbl
xlat
stc
outsb
cmp
cwtl
mov
add
stos
lcall
jo
aad
sahf
leave
add
xchg
mov
sub
shll
cmp
scas
push
stc
sub
ja
cwtl
out
movsb
fidivs
or
idivb
gs
cmp
ja
mov
out
sbb
decl
movsb
int
enter
negl
push
iret
fcmovnb
mov
das
inc
adc
fsubl
in
sbb
pop
aad
sbb
loope
lcall
mov
fistl
mov
add
sub
sbb
jns
jle
sbb
fnstcw
cmc
call
int
ret
inc
inc
shlb
lahf
cmpsl
xor
sbb
call
push
sbb
popf
enter
inc
clc
or
imul
imul
jmp
and
xchg
scas
mov
jge
mov
inc
sbb
out
fiaddl
fwait
mov
stos
loopne
inc
inc
lret
icebp
cmp
push
mov
push
cmp
or
sti
mov
cmp
mov
jp
hlt
pushl
xor
rolb
pop
ret
out
sbb
mov
data16
mov
xchg
popf
sarl
mov
jae
xchg
lcall
outsb
jae
push
sti
cmp
outsb
xchg
hlt
jge
insl
sub
sbb
adc
daa
cmpsb
mov
fidivrs
sub
stos
stc
push
sub
arpl
rcr
ljmp
jno
inc
jae
ss
xor
cmp
inc
rclb
movsb
scas
decl
push
popf
out
jno
cmp
jno
mov
dec
adc
pop
xchg
or
and
mov
sti
mov
push
adc
sub
pusha
cs
scas
aam
movsl
jmp
leave
scas
aam
lds
fnstenv
adc
dec
hlt
adc
js
outsb
push
jae
ds
jmp
mov
popf
add
pop
insl
jae
outsb
push
loopne
or
jl
lods
es
sbb
fnsave
inc
mov
ljmp
fisubs
inc
inc
xor
in
in
fbstp
clc
jp
mov
test
stos
pop
mov
add
sti
call
cmpsl
xchg
push
add
loop
adc
dec
mov
ljmp
jne
cmp
pop
jbe
inc
stos
sub
gs
jno
sbbb
mov
cmpsb
inc
adc
inc
test
fists
cmc
mov
int3
rcrb
xor
int
mov
fistps
inc
ret
mov
pop
inc
fnstcw
and
jne
push
push
mov
lock
inc
mov
xchg
and
xor
divb
sar
aaa
cli
mov
adc
aam
out
cmc
mov
cmp
gs
mov
das
cmpsb
or
movsb
pop
xchg
sub
mov
lea
incl
mov
fisttps
imul
test
test
rcll
or
out
jg
es
imul
iret
outsb
sub
out
pushf
call
push
cmc
inc
jb
xor
mov
xchg
add
push
std
aam
imul
pop
jb
xlat
dec
lcall
mov
mov
push
fdivrp
incl
cs
hlt
push
inc
inc
mov
sti
lcall
xor
sbb
push
pop
std
aaa
clc
pop
and
mov
imul
aam
cld
incl
es
mov
std
cmpsb
and
push
jnp
push
push
ss
xlat
and
rolb
pushl
mov
and
jle
sbb
test
mov
fucomip
xorl
sbb
xor
inc
add
push
jb
mov
jg
sbb
roll
scas
loope
jnp
hlt
sub
or
and
mov
push
or
add
cld
xor
ret
test
shufps
dec
fs
sub
xchg
mov
jmp
xchg
push
aad
pop
and
mov
jnp
mov
inc
sbb
out
jae
or
stos
pop
std
jp
pop
lahf
dec
stos
inc
test
jae
adc
fldenv
loopne
sar
mov
xchg
inc
mov
stos
clc
and
xlat
decl
sub
das
insb
test
mov
sbb
jmp
sub
sub
or
cmc
dec
inc
or
int
pushl
mov
jno
push
rol
or
sbbb
loopne
sub
push
int3
rolb
xchg
ljmp
jbe
jo
or
inc
mov
push
cli
jp
jmp
int
movsl
push
inc
repnz
out
pop
stos
enter
jne
lcall
sbb
jnp
xchg
rcrl
inc
inc
mov
aam
jb
mov
les
call
sub
mov
dec
repnz
cmpsl
adc
jne
mov
outsb
sub
imul
jle
popf
xchg
or
fs
loop
or
and
adc
scas
imul
cld
mov
cmp
mov
xor
pop
sahf
xor
xor
fldt
sbb
xchg
mov
fstpl
push
negb
ss
jb
mov
sarb
cli
mov
pop
or
mov
xchg
mov
repnz
pop
mov
loope
xchg
adc
or
jno
sbb
mov
and
incl
and
xchg
cmp
mull
jmp
jmp
or
and
mov
dec
inc
out
jbe
jae
sub
dec
sub
pop
sahf
mov
sbb
fnstsw
sub
sar
lret
mov
nop
mov
xchg
add
jge
sarb
xchg
inc
cmpsb
cltd
leave
xchg
mov
ja
lahf
add
jg
mov
pushf
xchg
dec
add
enter
add
testl
jg
jmp
pop
jo
aaa
lds
es
mov
jo
fisttpll
std
ljmp
cs
pop
xchg
les
dec
mov
ret
ljmp
adc
ljmp
stos
shll
popa
cmp
orb
mov
sbb
mov
cwtl
inc
jmp
push
jg
sub
sub
ficoml
sbb
cmp
and
pop
mov
lds
xchg
add
fwait
addl
add
cmp
es
lcall
jns
or
pop
jno
mov
es
cmpb
jmp
outsl
xchg
mov
dec
pushf
insb
std
in
lods
mov
insb
push
and
adc
pushl
mov
nop
push
mov
or
or
dec
loopne
dec
nop
sub
xchg
decl
lret
cltd
sti
mov
mov
cmpsl
adc
test
movsl
arpl
pop
pushl
das
js
int3
insl
xchg
mov
mov
vunpcklpd
dec
mov
cmp
fmulp
inc
insl
clc
mov
mov
mov
jle
clc
lcall
sbb
es
cmp
push
call
enter
ljmp
fiadds
mov
sub
sbb
das
cmc
mov
das
pop
adc
fcomps
push
xchg
aam
std
sbb
pop
es
adc
lods
lock
jmp
inc
pop
sahf
cmpsb
scas
mov
mov
cmpsb
jle
dec
mov
pop
lods
sbb
and
push
pop
push
xchg
ljmp
dec
std
ljmp
cmp
xchg
lahf
xor
push
xchg
loop
mov
outsl
lcall
xlat
inc
xchg
fimull
xor
in
scas
mov
incl
mov
and
shlb
rclb
push
ljmp
mov
mov
js
sarl
insl
xor
add
call
mov
dec
subb
push
fs
cli
jecxz
call
sahf
scas
dec
adc
subb
sub
fmul
popa
lds
dec
aaa
or
cli
aam
in
arpl
mov
fisttpll
mov
in
pop
sbb
lcall
xor
mov
idivl
pop
data16
pushl
in
out
fldenv
mov
xchg
sahf
jmp
sbb
sbb
sbb
cs
ja
xchg
es
lret
sti
in
arpl
jg
lcall
dec
jp,pn
mov
das
fstl
sbb
mulb
add
into
cwtl
and
xchg
clc
pop
std
bound
lahf
mov
inc
jecxz
inc
xor
xchg
adc
sub
pop
pusha
aad
jp
sahf
mov
push
sbb
decl
xchg
nop
push
pop
mov
dec
scas
adc
out
push
inc
jb
sub
and
xor
in
ret
sub
insl
mov
lcall
adc
ljmp
mov
shrl
cmpsl
xor
mov
jmp
shrb
pop
test
mov
popa
mov
mov
and
add
pop
cwtl
pushf
cmc
xchg
add
and
cwtl
incl
lret
push
push
adc
bound
adc
jno
mov
inc
jnp
ljmp
insl
fstpl
imul
adc
imul
test
jg
mov
inc
call
jmp
push
fimull
mov
push
outsb
call
sub
pop
outsl
or
rolb
filds
cmp
cmp
mov
addr16
ret
jg
cwtl
data16
les
mov
sub
rcll
jns
ljmp
jae
or
aam
dec
adc
mov
lahf
xor
insl
cltd
in
ljmp
mov
jge
adc
sti
cmpsb
cmp
push
outsb
mov
sub
les
sub
clc
pop
loopne
pop
mov
outsb
push
xchg
gs
adc
lods
jg
incl
cmp
mov
imul
lock
out
movsb
cmc
decl
fcmovnbe
into
rclb
mov
adc
mov
aam
mov
call
mov
shlb
jecxz
add
call
js
jmp
test
leave
dec
scas
adc
ljmp
or
jecxz
push
ret
jle
cmp
xor
jge
mov
inc
incl
and
adc
and
jno
into
movsl
jb
add
dec
inc
inc
sub
cli
mov
and
hlt
or
jecxz
call
lock
cmp
jge
mov
imul
push
outsb
popf
fwait
and
fdivr
xchg
fmull
dec
pop
loop
cmp
mov
jbe
aam
cmp
testl
sbb
icebp
push
jg
adc
sbbb
mov
or
ljmp
inc
mov
adc
lret
out
in
hlt
aaa
out
ljmp
ljmp
and
sbb
dec
adc
stos
ret
cltd
and
push
rcrl
lcall
add
xor
mov
inc
imul
jmp
push
or
call
add
lcall
movsl
incl
cli
loop
leave
daa
dec
inc
stos
pushl
out
into
or
fisttps
mov
in
jge
ja
out
xchg
jg
andl
dec
sub
jmp
mov
jmp
pop
xchg
mov
in
lcall
push
dec
cmpsl
cmp
inc
jg
jmp
out
xchg
lret
mov
je
bound
push
shrb
imulb
and
ljmp
std
std
stos
outsl
dec
jo
lods
dec
push
add
shlb
push
pop
cmp
inc
sub
inc
ret
std
jae
shl
mov
testl
loopne
add
aaa
jg
push
pop
test
pop
jo
cmpsl
rorl
rorl
lods
cmp
push
sti
aad
mov
jle
call
clc
mov
mov
jmp
dec
out
int3
add
loop
dec
mov
push
cmc
sbb
repnz
hlt
aaa
clc
fbld
pop
push
addr16
sub
ljmp
lods
das
in
ljmp
mov
ror
popa
xchg
stc
addr16
mov
ljmp
pop
jmp
dec
int3
pop
pop
add
add
iret
push
or
sbb
ss
pushl
cli
lds
mov
sbb
sbb
hlt
mov
jbe
scas
lods
cmc
lcall
push
aaa
stc
cwtl
pop
repz
mov
shll
rorb
cmp
popf
xchg
adc
cs
repz
pop
dec
adc
or
out
lea
xchg
xlat
sub
push
ljmp
lock
lret
repnz
nop
jmp
add
sbb
or
call
cli
or
insl
xchg
scas
mov
pop
adc
lcall
mov
pop
jo
fisubrl
jmp
pop
or
out
cmpsl
cld
int
cmp
jecxz
pop
xor
pop
pusha
cmp
pop
pushl
clc
testb
push
inc
aas
icebp
cmp
fadd
mov
sti
lods
fucomip
in
add
icebp
scas
addr16
jns
imulb
add
mov
or
decb
out
mov
jmp
pop
inc
addr16
outsb
stos
pop
rclb
mov
push
incl
xchg
in
sub
stc
mov
sub
adc
fstpt
push
stos
or
shl
jae
mov
inc
cs
push
cmp
cs
outsl
scas
push
xor
xor
and
or
incb
cmpsl
sbb
aad
ret
lea
aam
lahf
mov
lcall
xor
dec
push
mov
aaa
and
add
and
into
push
out
jl
jnp
xor
scas
cmc
xchg
cld
adc
dec
loop
pop
dec
xlat
repnz
and
push
stos
xchg
inc
inc
mov
or
ror
inc
icebp
clc
adc
loopne
jg
out
mov
stos
std
mov
adc
push
int3
subl
jmp
fdivr
lcall
repz
xchg
jecxz
mov
add
push
jmp
mov
cmp
dec
add
sub
push
push
fidivs
sbb
mov
outsb
movsb
cwtl
adc
xchg
xchg
movsl
xor
es
xchg
push
scas
loope
and
movsl
mov
or
sti
mov
sbb
in
mov
in
fildll
call
fildll
loop
xor
cwtl
jno
pop
jne
lahf
cld
imul
std
lcall
adc
test
and
jnp
es
mov
mov
mov
push
pop
dec
call
xchg
pop
and
stc
add
mov
cld
in
shl
add
out
cmpsb
mov
cmp
inc
outsl
std
ljmp
mov
xchg
rcl
sub
push
bswap
in
mov
sub
mov
push
xchg
jo
mov
and
shll
js
std
sbb
dec
inc
xlat
and
pop
push
adc
incl
filds
ret
adc
xchg
add
cld
mov
push
and
lods
adc
arpl
sub
int3
dec
adc
lcall
enter
enter
lds
into
lret
repz
out
jnp
incl
mov
mov
pop
outsb
mov
push
dec
lret
push
push
mov
adcl
ja
mov
stc
jmp
inc
xlat
mov
lea
cs
inc
pop
jg
outsl
std
mov
jmp
mov
xabort
push
xchg
inc
call
clc
fcmovnb
push
cld
inc
and
sbb
dec
test
sub
adc
lcall
cli
sbb
sbb
imul
pop
mov
mov
outsl
push
loop
lods
and
sub
sbb
cmp
neg
xor
push
leave
mov
pop
pop
mov
inc
dec
cmc
pop
int3
jg
pop
imul
ds
subb
jne
pop
fldenv
shrb
pop
fs
dec
jg
dec
push
jb
pushl
dec
lcall
pushf
xchg
leave
xor
ljmp
clc
fldcw
mulb
push
stc
leave
mov
cmp
ljmp
sub
mov
aad
aas
mov
jns
xor
pushl
and
dec
cmp
test
lods
push
out
sbb
push
int
mov
pop
dec
pop
push
pushf
pushl
jmp
ret
jecxz
out
mov
in
jle
inc
inc
test
das
aam
and
setg
decl
push
js
mov
jg
dec
mov
out
mov
dec
jl
jb
adcb
imul
xchg
popa
mov
adc
dec
aas
imul
scas
rcrb
decl
cld
pushl
jno
sub
aaa
ljmp
dec
inc
pop
xchg
cmp
and
jmp
out
scas
jbe
mov
mov
push
pop
sahf
ret
sarl
push
nop
and
sbb
stos
add
dec
std
push
loope
sub
pusha
jp
lret
mov
jmp
mov
mov
mov
js
jne
dec
inc
sbb
shlb
and
loopne
mov
fisttps
ljmp
pop
pop
mov
xchg
in
jp
push
adc
mov
jg
mov
cmp
clc
push
xor
mov
or
std
fucomip
mov
or
and
pop
cmp
dec
sub
or
lds
inc
and
loop
mov
push
mulb
push
add
sbb
lret
fisubrs
in
push
lcall
insl
inc
mov
xchg
pop
stos
fldenv
jns
mov
pushl
lods
mov
add
std
mov
fs
lahf
or
pop
or
sbb
adc
jne
xor
mov
sbb
xchg
sub
push
sub
mov
mov
mov
cli
rorb
adc
les
inc
sub
lods
sbb
repnz
iret
pop
ja
roll
mov
nop
repnz
and
inc
push
add
lods
movsb
jp
scas
movsl
sbb
lcall
shrb
xor
cmp
shrb
pusha
decb
cli
js
popf
dec
push
sub
adc
shr
jge
fs
jno
inc
shl
mov
aas
in
mov
push
inc
pop
push
mov
adc
cmpb
das
loope
test
mov
rep
jne
loopne
cwtl
es
incl
incb
or
sub
fwait
push
adc
sbb
fwait
pop
dec
repz
cmpsb
jmp
mov
jmp
push
ficompl
arpl
sbb
add
gs
lcall
arpl
in
adc
dec
cld
incl
and
arpl
cli
dec
dec
adc
push
xchg
lock
jg
mov
mov
push
fwait
dec
push
push
dec
xlat
jbe
sub
decl
dec
mov
cmp
dec
test
out
jg
lcall
sub
mov
xchg
sub
adc
push
xor
sbb
bound
ficompl
outsl
xchg
sahf
rorb
stos
ds
jmp
loop
cld
pop
jno
xor
xlat
add
xchg
adc
rorb
test
outsb
fstps
mov
jle
mov
xchg
fdivr
incl
in
jbe
jne
out
sub
mov
and
inc
jl
outsl
js
or
test
lcall
xchg
lods
mov
mov
mov
aam
cmp
sub
loopne,pt
ret
mov
iret
lcall
sub
jmp
fistl
mov
jg
stc
lds
cld
cmp
dec
add
mov
stos
mov
push
movsl
clc
xchg
gs
cmp
lret
ljmp
ss
pusha
sbb
shll
jl
outsb
cmp
test
xchg
arpl
sub
or
mov
pop
scas
mov
inc
jno
or
mov
and
or
repz
dec
nop
jle
fcomps
aaa
cli
cmp
out
arpl
test
and
push
pop
cli
add
sub
jecxz
int
divb
pop
test
jne
std
out
cmpb
mov
in
fnstenv
les
orb
sbb
cmp
xchg
pusha
push
scas
sti
lahf
iret
xchg
inc
mov
xor
jae
mov
xor
sbb
pushl
sbbl
fdivrl
cmp
xchg
dec
xchg
mov
dec
test
jmp
push
cmp
hlt
fisttps
jae
xlat
mov
out
movsl
xchg
pushl
xchg
repnz
imul
jmp
lcall
adc
push
aam
pop
ss
jbe
int
push
or
or
loopne
jl
xor
mov
cmp
pop
mov
pop
hlt
lahf
pop
and
sub
pushl
sub
xchg
push
push
adc
cwtl
rcl
mov
testb
sub
cld
adc
lret
sti
jnp
call
in
aas
js
sbb
adc
mov
filds
mov
lcall
push
enter
xchg
test
das
shlb
cltd
sub
pop
mov
mov
mov
scas
lahf
lods
aaa
repz
xchg
sub
mov
out
mov
test
add
xor
test
cmp
sbb
ljmp
jae
daa
loopne
mov
popa
out
inc
dec
fs
lods
outsl
movsl
jecxz
outsb
divl
cmp
loopne
mov
shll
test
cmp
push
rol
sub
push
cmc
jg
and
rcl
pop
loopne
sbb
out
cwtl
stos
ss
push
addr16
loop
mov
incl
pop
cld
inc
jns
push
incl
cmp
in
sbb
lods
dec
inc
bswap
rolb
aad
cmp
out
jnp
cmpsb
rol
xchg
add
call
pusha
pop
shlb
test
mov
sub
sub
mov
and
sub
pop
sub
jmp
mov
pop
popf
insb
cltd
decl
jle
addr16
fistps
inc
or
sub
pop
sahf
jb
les
xor
icebp
decl
addr16
lds
outsb
outsb
sub
mov
arpl
in
daa
mov
jne
bound
and
es
jmp
jnp
mov
dec
ret
xchg
xchg
les
incl
dec
sbb
sbb
inc
sahf
add
jecxz
mov
inc
and
push
push
fldenv
jno
pushl
adc
xchg
jns
mov
mov
mov
testl
cmp
jle
pop
cwtl
pop
cld
cli
pop
jbe
scas
hlt
xchg
inc
xor
jg
popa
into
jae
mov
out
xchg
jp
shll
jnp
mov
stos
mov
mov
inc
rcr
stos
fs
shrl
imul
mov
xorb
rorb
sub
mov
or
call
cltd
ret
jle
cli
or
xor
daa
inc
sub
in
inc
jg
pushl
jb
loopne
or
mov
mov
es
sbb
mul
add
rorl
add
in
in
dec
fsubs
lcall
sbb
loope
mov
data16
mov
add
lahf
mov
pop
out
mov
mov
pushf
sub
lret
stc
ret
mov
shl
jg
aaa
cwtl
inc
pop
arpl
push
or
decl
es
rol
mov
aas
stos
mov
adc
add
mov
outsl
gs
sbb
mov
push
cmp
jnp
stc
pop
sbb
movsb
popf
leave
gs
insb
and
push
inc
push
pop
mov
je
in
jbe
subl
jg
jmp
stos
negb
pop
sub
leave
cmp
inc
mov
sub
push
jbe
sub
mov
sahf
mov
cltd
pop
cli
icebp
xchg
jmp
mov
stos
adc
fisubs
out
enter
incl
loop
cli
pop
fnstenv
call
inc
inc
push
push
aad
jmp
es
mov
mov
inc
outsl
arpl
ror
jbe
xchg
jno
mov
stos
push
mov
testb
dec
pop
outsl
icebp
pushl
insb
insb
test
dec
ficoms
sub
inc
sbb
and
add
adc
mov
mov
or
pop
pusha
inc
mov
fstps
mov
repz
push
fldenv
std
mov
gs
lahf
push
push
ret
mov
inc
mov
rolb
lcall
pushl
cmpsb
xchg
js
adc
pushf
ss
sbb
int
test
push
ljmp
jnp,pn
hlt
and
mov
hlt
repnz
mov
popf
pushw
ja
and
cld
fwait
lock
sub
adc
push
lcall
je
mov
dec
cld
sbb
lock
inc
rcrl
xor
dec
and
lock
jg
or
sarb
xchg
xchg
addl
call
jno
bound
ljmp
or
sti
sub
mov
mov
jge
in
imul
sub
pop
inc
stos
pop
loop
inc
jae
orl
jns
andb
mov
push
push
and
and
cmp
adc
cmp
jg
fmulp
test
push
xor
push
mov
cmpsl
pop
sbb
sub
jg
and
xor
push
cmpsl
inc
inc
fists
call
addb
pop
dec
dec
cld
ljmp
fsubrl
jge
pop
insb
pop
lock
jle
sbbl
fsubs
mov
insb
je
mov
clc
call
shll
call
sbb
mov
ja
push
lcall
and
lock
inc
cld
push
push
cmp
mov
int
xor
pushl
mov
imul
sbb
push
push
mov
push
jmp
mov
jp
cmp
xor
xchg
mov
cmp
adc
in
fnstsw
add
sbb
call
cmp
xchg
ljmp
loop
scas
add
mov
enter
mov
inc
mov
sub
cmp
stos
cmp
test
rcrl
pavgb
stc
sbb
inc
add
in
insb
fimuls
outsl
je
dec
mov
rcrl
jbe
mov
and
xor
mov
and
imul
mov
xchg
sub
in
pop
add
test
add
enter
lods
neg
sbb
xchg
mov
jecxz
ljmp
dec
mov
ret
insl
loopne
jge
sub
pop
xor
loope
lock
pop
call
imul
imul
iret
data16
mov
fstps
pop
decl
mov
mov
call
xchg
js
mov
stc
call
xchg
jnp
sbbb
or
mov
addr16
lods
push
mov
adc
add
push
mov
push
xlat
je
stos
notb
insl
dec
jmp
stos
dec
bound
mov
xchg
repnz
xchg
insl
mov
push
dec
shrl
lods
sbb
inc
add
push
out
das
loopne
add
cmc
mov
lcall
sub
loopne
loopne
sub
fidivrs
es
fsts
inc
xchg
fadds
hlt
loop
test
mov
outsl
std
addr16
cli
fnstcw
addl
or
add
mov
pop
clc
outsl
pop
pop
cmp
sub
sbb
test
out
mov
lock
call
or
hlt
push
xor
push
mov
icebp
xor
call
mov
iret
ss
jo
or
testl
add
incl
mov
xor
rcll
dec
pusha
fsubrs
push
push
or
stos
hlt
xchg
or
push
cmpsl
cli
pusha
adc
arpl
xor
fldcw
jle
movsb
movsl
inc
jg
mov
lret
jbe
mov
mov
mov
imul
jb
repz
jnp
dec
int
jne
test
jg
mov
repnz
gs
mov
sub
fbld
fidivs
aas
or
push
cmpsb
add
xchg
push
adc
shl
add
xchg
add
daa
js
add
or
add
int
ja
mov
cmc
out
mov
adc
mov
mov
es
sbb
mov
push
xchg
adc
sub
add
cld
xchg
jne
pop
aad
rclb
sub
mov
sbb
add
test
mov
cmp
or
test
push
fwait
bound
shr
jne
jge
add
dec
add
push
inc
mov
push
movdqu
ja
or
xchg
dec
mov
shrb
lahf
and
adc
fiadds
jns
mov
stos
pop
call
mov
loope
sarb
fcomp
mov
push
push
imul
add
inc
std
lds
pushf
push
cmp
shr
or
jle
and
xchg
lods
jg
scas
add
mov
or
jo
cmpsl
cmp
push
out
outsl
cmp
cmpsl
mov
imul
outsl
ret
sbb
add
add
inc
sti
ret
inc
call
je
push
xor
adc
mov
les
ds
test
add
ja
cmp
lcall
push
lods
subl
pop
inc
and
jg
outsl
and
dec
icebp
mov
jmp
pop
cmp
and
jmp
gs
cmp
mov
jno
ds
jb
mull
xlat
mov
aas
outsl
jg
push
jle
inc
and
sub
xor
or
incb
xor
in
xchg
loopne
sub
out
pop
clc
push
add
mov
leave
add
lahf
mov
jb
sbb
xorb
int
push
roll
aad
repz
pop
mov
xor
push
cmpsb
outsb
mov
mov
push
sub
mov
mov
stos
in
inc
mov
xor
or
and
or
jbe
pop
sbb
mov
les
add
add
cli
sbb
push
sbb
jl
or
test
jmp
pop
mov
aam
loopne
inc
cmp
vmovdqu
cmp
call
test
inc
push
mov
adc
adc
movsl
adc
mov
and
orl
mov
inc
ja
lds
lcall
push
mov
insl
sbb
mov
flds
into
fprem
adc
lock
icebp
icebp
popf
ret
vmwrite
push
leave
scas
mov
xchg
sbb
lret
out
dec
lret
mov
jp
incl
inc
cmp
andl
scas
je
and
jbe
xor
jnp
stos
sbb
aad
inc
jbe
mov
cmpsb
cmp
clc
incl
lds
and
and
sub
mov
ret
adc
and
inc
je
dec
add
sbb
sar
js
xchg
pcmpgtd
dec
pop
sub
inc
and
dec
sti
movsl
dec
pop
dec
sahf
inc
push
pusha
aaa
sti
push
cmp
and
aad
add
sub
movsl
push
pop
push
add
sbb
sub
popa
imul
test
cli
call
or
jo
movsl
fs
lds
jg
xchg
jno
stos
int
mov
add
sbb
and
addr16
add
loope
sbb
xor
sub
sub
leave
mov
or
pop
and
and
mov
in
push
mov
je
sbb
and
sbb
test
rcll
fnsave
ret
mov
int
push
fimull
mov
repz
in
inc
lcall
lock
enter
jg
popf
jge
pop
lods
les
dec
add
push
stos
lods
inc
es
ret
subb
lahf
dec
movb
into
add
push
fimull
mov
sar
rolb
fs
lret
add
dec
aas
int3
and
aad
inc
adc
push
xor
iret
fcomip
out
dec
sub
sarl
jns
push
test
test
outsb
negl
add
add
cltd
aad
insl
incl
mov
adc
and
and
imul
cmc
add
dec
mov
fcmovu
xor
push
inc
aaa
mov
insl
sti
or
push
movsl
fsub
pand
dec
cmp
add
jmp
or
std
xor
adc
cli
aam
test
test
es
fldt
cmp
mov
mov
testb
jg
sub
pop
ret
pop
sbb
xor
pop
cltd
dec
add
push
push
mov
mov
add
movsl
mov
fidivs
jp
cmp
jno
and
xchg
cmp
jg
jecxz
lea
lds
pushf
das
js
imul
or
aam
jne
cmp
pop
add
rcrb
add
clc
mov
mov
dec
andb
push
sub
repnz
das
imul
js
or
hlt
inc
fs
movsl
fisubrl
xor
mov
in
jne
lods
aaa
jo
jecxz
push
cmp
jne
jnp
aaa
cwtl
jno
xor
cmp
push
or
fcomip
jge
sbb
inc
or
add
int
inc
add
popf
add
lock
inc
jl
fwait
xchg
xchg
in
jne
movsl
das
push
add
dec
inc
mov
jg
cmp
xor
mov
shrl
sub
xor
stos
cwtl
es
push
clc
push
or
fs
dec
mov
lods
lock
jmp
sahf
mov
add
push
sbb
push
cli
std
ja
add
and
leave
lock
xchg
aaa
push
ret
in
shrb
or
jg
mov
inc
sbb
mov
add
and
cltd
xor
ljmp
push
lcall
pop
lret
xor
jge
icebp
cmp
cs
repnz
lahf
or
in
push
lcall
add
jae
inc
stos
or
xorb
sub
mov
test
sub
mov
dec
or
call
lods
pop
ljmp
in
sbb
cs
test
add
mov
lea
clc
jl
push
sub
adc
lea
scas
test
mov
das
cli
cmp
stos
dec
roll
or
and
fcoms
mov
frstor
dec
push
js
call
test
outsb
sti
or
out
ja
adc
push
imul
roll
mov
fst
fcom
nop
std
movsb
add
adc
in
imul
xor
inc
aam
andb
cmp
sbb
into
dec
cmp
fcoms
cmpsl
or
mov
lods
insb
sbb
ja
lret
xlat
add
hlt
ret
int
add
sub
push
mov
inc
add
and
int
mov
ror
pop
push
xor
cld
movaps
jmp
or
pop
sbb
int3
adc
adc
sub
or
mov
and
sub
fucomi
lods
inc
or
lds
in
aam
mov
cmp
insl
iret
int3
cmp
mov
rcll
mov
adc
mov
jg
adc
jl
lds
add
ss
or
rcl
adc
jnp
add
mov
jg
push
out
mov
in
mov
mov
gs
test
fcmovne
mov
sub
mov
lods
ret
shrl
push
les
mov
addr16
call
jecxz
jb
test
pop
gs
dec
mov
mov
stc
loop
test
shll
jb
insb
push
outsl
mov
nop
add
or
in
pop
cmp
fiadds
xchg
sbb
pop
xor
ss
fdivrl
mov
gs
mov
and
jno
mov
test
lods
inc
add
mov
ja
or
push
or
add
ficompl
mov
mov
cmp
xchg
insl
or
js
push
movsl
jbe
add
push
out
cmp
xor
stc
mov
pushf
xchg
adc
cmp
pop
jnp
cmpsb
mov
jne
sub
inc
or
test
or
inc
dec
push
mov
lods
jl
fdivrs
aaa
pop
jo
mov
movsl
mov
pop
outsl
std
mov
add
js
in
mov
jo
in
arpl
jb
xor
sti
lds
enter
lret
into
sbb
mov
or
rorl
ret
outsl
fisttps
es
aaa
ss
inc
lds
adc
cmp
inc
sub
rcrb
scas
add
pop
cmp
xor
mull
push
jecxz
jge
mov
and
jo
sarb
mov
pusha
cs
ret
push
push
xlat
jge
jmp
or
dec
nop
inc
mov
inc
das
fnstsw
es
in
mov
lock
enter
jns
bound
mov
xchg
fdivr
push
mov
dec
add
add
dec
push
xchg
repnz
lods
mov
adc
dec
lods
clc
xchg
std
insl
jmp
cld
movsl
mov
fildll
xor
dec
inc
enter
movsl
xchg
mov
mov
jecxz
xor
insl
cli
cmc
and
cmp
outsl
jg
push
xchg
cmp
jecxz
xor
pop
fdivs
sbb
nop
sahf
sub
adc
sbb
lcall
clc
in
or
adc
adc
sub
adc
sub
int3
lock
loop
cwtl
mov
mov
outsl
std
outsl
fwait
ja
in
ret
push
jo
and
add
imul
pop
xor
out
mov
stos
dec
pop
call
or
addr16
sub
aas
pop
jle
or
adc
adc
adc
mov
sbb
scas
ficompl
xor
in
xlat
scas
cmp
hlt
ljmp
mov
cmp
inc
popa
imul
addr16
addb
test
popa
jmp
mov
test
mov
in
jb
inc
enter
aam
jge
jns
out
leave
lret
dec
fidivl
sub
sbb
mov
clc
or
testb
adc
fcmovnu
nop
dec
insb
cmp
loopne
adc
mov
call
sub
jo
push
adc
push
dec
out
add
aad
mov
rolb
cmp
insl
inc
pusha
orb
mov
adc
mov
jne
insb
and
mov
call
ds
cmp
xchg
stos
lock
popa
test
mov
rclb
mov
imul
or
mov
mov
pop
mov
pushl
xchg
cld
jbe
mov
js
inc
push
push
xchg
fdiv
nop
sbb
lock
xchg
mov
call
sbb
jbe
mov
jecxz
movsb
sbbb
push
push
or
loopne
push
push
jmp
faddl
jb
ret
bound
pop
mov
in
pop
xchg
fs
insb
cmp
aaa
mov
inc
movsl
sbb
fisttps
or
add
mov
mov
xor
pop
adc
inc
jnp
call
pop
adc
dec
fwait
negl
lods
push
dec
sbb
push
adc
adc
out
xchg
lcall
les
xchg
aad
mov
add
test
ljmp
pop
mov
cmpb
bound
sti
jae
fnsave
push
cmc
loop
addr16
and
call
inc
and
lea
scas
ret
cmp
test
out
call
imul
mov
aad
fmuls
fnstcw
mov
sar
xchg
hlt
in
addb
inc
mov
push
nop
insb
insb
fnsave
test
or
pop
int3
mov
in
add
jg
jb
sarb
aaa
fidivrl
insl
in
cmp
mov
icebp
in
jp
ja
dec
sbb
sbb
cmp
aaa
sub
fwait
in
pop
fdivrl
mov
faddl
repz
sub
bound
mov
add
shrb
mov
xchg
stc
inc
lods
into
rorl
dec
sbb
or
xor
jge
pop
cmp
pop
push
clc
lea
xchg
adc
or
pop
cmp
loope
adc
jg
lea
roll
ss
lcall
or
loopne
or
das
test
pop
xor
dec
mov
lods
fstpt
cld
adc
test
bound
call
mov
inc
push
cmp
out
add
push
dec
out
jg
les
pushf
mov
fnstsw
in
inc
js
add
jno
pop
add
inc
lret
call
clc
jl
pop
mov
xlat
dec
push
into
lods
dec
or
inc
sbbl
gs
outsl
loop
dec
shll
into
outsl
jmp
xchg
scas
add
sub
jl
adc
rcrl
mov
fs
sbb
lea
fidivrl
and
or
xchg
pop
je
fwait
test
jmp
mov
add
std
insb
inc
add
lcall
pcmpgtd
sub
add
fdiv
push
dec
xor
outsb
mov
sbb
cmp
jecxz
popa
test
in
fiaddl
loope
push
xchg
test
mov
pop
aad
call
jl
mov
and
fadds
and
out
or
and
inc
mov
push
inc
add
icebp
cmpsl
xchg
lods
das
inc
and
cwtl
adc
stos
inc
pop
push
inc
in
mov
stos
cmp
jnp
cmp
mov
out
push
adc
rcl
add
ds
mov
adc
xor
shlb
std
and
xchg
jp
inc
fcom
mov
sbbb
insl
jo
push
push
pop
int3
cld
jg
je,pn
fldl
jb
push
jl
mov
bts
xchg
dec
ror
add
insb
mov
das
ss
push
fists
mov
dec
inc
sub
inc
sub
jbe
nop
mov
shrb
fnsave
adc
jbe
lock
jp
arpl
cs
push
out
cmpsl
pop
rorb
add
cltd
or
decl
mov
sbb
sarl
dec
mov
ret
cmp
jecxz
jbe
mov
xchg
in
gs
dec
mov
insl
push
loopne
shlb
cltd
xor
mov
addr16
pop
outsb
push
pop
in
push
xchg
das
sbbb
pop
setg
imul
outsl
mov
out
xor
loopne
lods
add
aaa
das
inc
push
push
lock
popf
add
push
mov
cmp
cmp
or
mov
jge
cmp
pop
outsb
icebp
and
cmp
jb
iret
lock
xor
and
call
jns
dec
jbe
cs
leave
ja
test
add
push
mov
cmpsl
loope
insl
xchg
mov
jle
jnp
cwtl
jecxz
out
in
xchg
jbe
adc
and
pusha
cmp
ds
jle
sbb
scas
adc
mov
popa
mov
push
sbbb
roll
jecxz
sbb
ret
cwtl
shlb
push
mov
adc
sbb
cmp
lods
mov
lea
mov
clc
sub
test
out
ja
or
hlt
and
mov
mov
pop
cld
out
icebp
push
xor
cs
jne
mov
xchg
insl
pop
js
stos
cmp
xor
loop
sbb
push
add
sub
rcll
jno
jecxz
popa
jecxz
inc
jno
push
lods
xchg
sbb
jge
inc
negl
test
cmp
dec
or
outsl
cld
test
push
daa
and
mov
xchg
push
loopne
inc
mov
test
in
insl
out
add
cwtl
aas
stc
pop
pop
lret
sub
mov
pop
sbb
xchg
inc
sbb
cmpsl
testl
cmp
pushf
adc
shll
or
or
adc
outsl
cmpsb
lea
mov
xchg
xchg
movsl
sub
push
fstpl
leave
psadbw
js
into
sbb
stos
pop
sub
rolb
dec
mov
test
push
stos
test
and
pop
mov
mov
and
imul
cli
add
cwtl
loope
arpl
shrl
test
stos
test
jg
loope
in
test
xlat
jno
lret
mov
je
fildl
xor
bound
and
nop
bound
cmp
or
dec
fisttps
dec
sbb
js
not
aad
jg
dec
cmp
sbb
mov
pop
ljmp
stc
shr
aam
imul
cmpb
bnd
into
adc
and
and
sbb
mov
xchg
idiv
rcrb
cld
add
mov
push
cmpl
and
mov
mov
mov
das
inc
mov
bound
sub
int
pop
cmp
fnstsw
mov
enter
jb
add
clc
cld
and
gs
in
pop
lods
rcrb
jbe
xchg
inc
cmp
stos
push
sub
popf
pop
adc
outsl
imul
les
mov
xor
insb
ljmp
cmp
cmc
test
repz
bound
inc
js
daa
xor
mov
xchg
je
fwait
popf
or
pop
xchg
add
rolb
std
test
mov
aad
mov
imulb
inc
scas
mov
cli
mov
mov
lods
add
mov
dec
hlt
pop
jl
mov
mov
pop
adc
xchg
dec
jb
adc
in
icebp
and
cmp
mov
test
ds
mov
mov
inc
xor
add
fstl
je
pop
fdivs
in
std
inc
xor
xor
add
or
cmp
and
dec
nop
jg
xor
fstpt
subl
stos
sub
outsl
shrb
inc
inc
call
stc
xchg
push
adc
jecxz
idivb
ljmp
into
push
xchg
fs
scas
sbb
xor
lret
repnz
stos
inc
lretw
add
inc
mov
cli
xchg
jns
dec
push
jecxz
sbb
jne
insl
cmc
ds
push
add
mov
cld
ret
jno
gs
dec
scas
subb
or
dec
dec
jecxz
scas
xchg
ss
adc
mov
mov
insl
mov
xor
adc
jne
gs
adc
adc
push
jmp
or
es
lea
pop
es
jg
mov
jecxz
jo
push
rcrl
lret
je
sbb
push
cs
adc
push
push
and
test
ret
leave
inc
pop
mov
lret
pop
xor
movsb
ja
xor
sbb
dec
scas
insb
pusha
or
add
out
std
mov
mov
cs
and
jbe
mov
push
aas
cmp
out
test
in
mov
out
idiv
mov
sub
sub
xor
inc
loopne
in
inc
repz
test
mov
mov
adc
pop
out
push
mov
cmpsl
and
adc
mov
nop
mov
cmp
dec
call
aam
ljmp
dec
fdivrl
dec
popl
sbb
mov
and
in
sbb
repnz
xchg
cld
push
gs
aad
mov
adc
loopne
xor
jbe
sub
fs
jo
iret
or
inc
adc
bound
adc
jle
rolb
xchg
inc
add
inc
call
push
das
mov
adc
xchg
jns
xchg
arpl
mov
dec
sbb
sub
push
push
jle
mov
adc
sub
xor
jne,pt
push
fidivl
es
pushf
push
int
adc
stos
loopne
xor
jbe
push
cmpb
into
and
shlb
pop
rclb
push
jp
xor
dec
push
pop
adc
rcrb
pop
lea
mov
jmp
lods
mov
and
sti
dec
mov
pop
in
xor
rcpps
push
jo
call
ljmp
hlt
and
into
add
push
in
xor
or
icebp
xchg
mov
xchg
add
jge
in
push
call
push
sub
sub
and
sbb
icebp
insl
hlt
insb
mov
pushf
cli
mov
xchg
dec
sbb
or
pop
fucomip
rol
cs
jno
mov
movsl
mov
subps
jae
arpl
dec
adc
aas
sbb
shr
pop
mov
pop
xchg
scas
aas
addr16
out
outsl
cld
insl
lea
adc
mov
loop
lret
in
pop
scas
stos
jne
inc
mov
in
mov
data16
dec
pop
push
pop
adc
or
outsl
inc
inc
popa
ret
in
jae
adc
cmpsb
daa
or
aaa
mov
jg
imul
xor
inc
into
mov
into
xchg
sub
dec
dec
sbb
xor
jp
incl
std
or
inc
mulb
mov
lods
decb
out
adc
sbb
jg
cld
mov
jg
push
pop
dec
dec
lcall
pop
inc
lods
fwait
mov
lret
mov
fstp
add
lods
ret
outsl
stc
aaa
subb
std
cmp
aaa
sbb
adc
xchg
pop
mov
xlat
jmp
enter
imul
cmp
sub
hlt
subb
xorl
lds
nop
dec
movsl
stos
leave
mov
push
sub
movsl
popa
inc
ljmp
pop
imul
adc
cmp
sub
incb
lea
mov
fwait
xor
pop
push
out
jno,pn
mov
dec
sbb
ss
loop
xchg
dec
cmp
popf
jg
add
movsl
push
pop
pop
mov
xor
push
pop
add
rcrb
cmpsl
dec
pop
test
das
test
lea
and
out
lcall
pop
pop
insb
mov
xchg
insb
call
cmpl
mov
aad
data16
jb
mov
pop
push
icebp
shlb
inc
test
mov
jmp
iret
sub
add
pop
clc
shl
ffree
pop
call
outsl
add
and
cs
push
cmp
mov
cmc
and
dec
pop
jno
add
push
movups
aas
add
sub
cli
inc
movl
pop
cmc
loope
jbe
in
dec
fwait
aaa
bound
xor
in
test
sti
in
sar
jbe
andb
cmpsb
shl
jnp
sarb
or
push
cmp
bound
pop
inc
push
in
mov
xor
sub
cmp
fcomi
in
mov
and
lcall
pop
inc
mov
or
and
mov
pop
call
sbb
xor
fs
repnz
inc
or
push
int
xchg
fidivrs
push
add
mov
add
icebp
test
jae
push
push
xchg
jl
outsl
mov
int
iret
push
popf
mov
pop
test
push
jle
idiv
jge
rclb
les
movsl
repz
add
shll
mov
lret
cmp
dec
shl
push
lods
pushl
loop
jo
dec
scas
pop
cmp
cli
pop
movsl
xor
out
outsl
mov
dec
mov
inc
push
sub
xor
jnp
sub
in
call
hlt
or
cmp
jl
xor
push
sbb
fwait
mov
addb
dec
lcall
loopne
inc
jo
jae
mov
and
sbb
outsb
sub
inc
mov
aam
outsb
sti
outsl
cld
or
mov
cwtl
mov
adc
jmp
in
or
mov
adc
out
adc
lods
inc
bound
xchg
push
dec
movsl
mov
or
shr
es
xor
mov
jg
mov
mov
mov
push
test
xlat
inc
push
mov
add
cli
mov
lea
call
push
push
sub
sbb
mov
mov
nop
and
sti
das
pop
mov
icebp
push
dec
jno
es
lret
incl
add
and
push
popa
cmpb
inc
and
mov
int3
gs
jecxz
stc
adc
adc
pushf
jo
sbb
das
lock
jmp
inc
mov
mov
stos
cli
xchg
insb
aaa
outsb
mov
es
push
icebp
push
push
or
das
shl
sti
hlt
inc
sbb
and
jne
and
pushl
dec
pop
push
test
sahf
cmp
fildl
ret
xchg
daa
data16
imul
addr16
shll
jnp
ds
adc
stc
lock
out
loopne
inc
aad
and
or
shll
stc
or
xor
jmp
jg
and
pop
ds
or
adc
mov
pop
jg
lcall
outsl
and
or
add
mov
leave
lahf
adc
inc
sbb
mov
jg
cmp
xchg
sbb
pop
add
push
inc
cmp
mov
mov
jns
ret
mov
dec
add
icebp
jbe
fwait
add
lret
and
xor
pop
cmp
mov
imul
add
push
adc
mov
jmp
rcrl
push
das
push
jp
cmp
das
mov
xor
ja
fldenv
mov
movsb
or
and
inc
cmp
jbe
bound
stc
test
cld
ds
cmp
push
adc
clc
mov
sahf
stos
or
mov
test
and
jno
pop
dec
nop
push
mov
rcl
pop
dec
cmpsl
jbe
orb
pop
scas
sbb
scas
jne
jg
cs
or
or
mov
bound
push
mov
cmp
lods
mov
add
or
jbe
in
mov
ret
inc
arpl
iret
or
sub
pop
pop
fwait
test
cmc
out
adc
push
ret
call
dec
sbb
fcoms
mov
jno
jl
cmpsb
bound
or
mov
scas
aaa
leave
mov
lret
fidivl
outsl
loop
std
push
stos
in
in
dec
sbb
mov
and
das
mov
add
iret
movsb
push
jmp
pop
or
jo
shll
rorl
mov
sbb
scas
fcmovbe
jo
sub
inc
dec
cld
mov
test
cltd
dec
sahf
sbb
subb
in
jnp
push
lds
adc
test
filds
pop
fcmovu
cwtl
jge
icebp
movsl
aam
dec
push
lock
cmpsb
sbb
testl
fistps
cmpsb
mov
xchg
jb
dec
lock
jl
xchg
in
lret
push
mov
inc
jno,pn
nop
push
aad
sbbb
scas
jb
je
sub
dec
mov
call
mov
movsl
lods
cmpsb
xor
lahf
jmp
xchg
in
xchg
test
cmc
mov
pop
inc
dec
sbb
inc
aas
and
jge
push
mov
mov
fsts
mov
ds
mov
cmp
inc
int
in
push
outsb
cld
neg
faddp
cli
cmp
jnp
mov
or
dec
flds
xchg
out
loope
ljmp
movsb
cltd
icebp
push
xor
xor
scas
mov
popf
mov
mov
fistl
ja
dec
jbe
fs
cwtl
xor
adc
fisttps
outsl
jg
in
and
out
push
dec
aam
mov
push
jmp
mov
and
adc
inc
mov
adc
incl
push
inc
xchg
test
mov
adc
aas
fiadds
out
and
lret
and
insl
imul
lcall
mov
add
arpl
gs
dec
dec
outsl
aam
jmp
push
cmp
mov
mov
pop
cli
cmp
jne
pop
mov
pop
orb
movsb
das
fstpt
ja
push
xor
scas
sub
in
xchg
mov
cld
insb
xor
add
add
idivl
xchg
les
cmp
inc
xchg
inc
jp
adc
dec
lods
sub
das
les
adc
xor
rolb
jp
fstl
and
into
inc
cmp
pushf
aaa
daa
es
insl
test
stos
dec
push
arpl
push
outsl
frstor
int3
movsb
roll
lock
push
aas
sbb
sbb
clc
sub
push
mov
cmp
mov
mov
push
les
pop
ss
nop
movsl
mov
call
sub
insl
in
add
pop
or
add
negb
mov
or
sti
pop
je
in
add
sbb
aaa
ficoms
in
inc
icebp
outsl
xor
or
xlat
ret
mov
and
cmp
loop
jns
adc
orb
nop
sbb
sahf
enter
mov
jns
mov
rolb
addr16
outsb
and
sub
cmp
popf
and
mov
aaa
call
addb
adc
repz
jmp
ret
insb
aam
and
ret
sbb
push
inc
test
imul
lds
stc
rcl
rcrl
jo
adc
adc
aad
adc
push
dec
pop
dec
fdivrl
add
xor
push
or
jno
mov
lods
adc
and
sahf
mov
repnz
or
insb
aaa
mov
inc
sarb
push
ds
ljmp
pop
scas
dec
mov
pop
pop
adc
cli
fildl
divl
int
sub
cltd
test
inc
adc
sub
mov
clc
imul
popf
pop
cmp
xor
loopne
jge
lods
gs
cmp
aam
insl
cmp
in
mov
xor
xchg
cli
lods
lods
xor
cmp
jbe
js
jne
fists
xor
add
and
test
inc
andb
in
sbb
xor
out
mov
call
aad
in
dec
popa
js
xor
fneni(8087
fistpl
mov
insb
pop
in
add
clc
ljmp
push
dec
mov
imul
mov
sahf
xor
jecxz
jo
icebp
cmc
or
test
pop
push
push
xchg
cmp
fsubrs
push
push
je
adc
outsl
cmp
mov
inc
xchg
jne
mov
outsl
fidivrl
add
or
les
push
cmc
or
dec
mov
call
scas
sti
sbb
mov
mov
out
pop
dec
repz
push
pop
clc
aaa
add
inc
leave
or
lds
sbb
ljmp
xchg
sbb
or
mov
sbb
test
cli
jno
int
int
shlb
leave
sub
mov
loop
add
lods
ljmp
movsb
fwait
sbb
adcl
std
aaa
mov
jmp
in
push
leave
aas
enter
or
popa
mov
push
dec
push
outsl
push
add
dec
aaa
push
adc
pop
jmp
ljmp
imul
pop
pop
ljmp
xchg
pop
test
rcrl
out
mov
xchg
push
xor
hlt
fildll
cmp
sub
enter
xor
out
add
inc
and
outsl
mov
cmpsl
sbb
sub
adc
add
ret
xchg
jle
shl
pop
adc
out
enter
cld
lods
xor
push
inc
pop
les
rol
imulb
jns
sub
shll
pop
rcrl
sti
in
or
push
loope
outsl
std
ljmp
mov
pslld
out
fidivrl
test
sahf
sahf
push
pop
stos
shrl
pusha
mov
xchg
xchg
and
lret
out
les
sub
pop
push
popa
inc
es
cmp
fildl
or
pop
dec
iret
incb
mov
je
hlt
jno
add
scas
jmp
pop
mov
and
sti
mov
jg
out
dec
ret
pop
test
cmp
pop
add
rorb
stos
scas
cmp
pop
xor
insl
ja
ljmp
push
and
and
mov
mov
xorl
les
and
adc
shrl
inc
xchg
sub
cmp
add
mov
adc
xor
sub
jmp
in
add
xor
jbe
clc
push
push
lcall
pushf
mov
adc
cmpsl
scas
movsb
sub
push
sbb
pop
into
jmp
fidivl
fstpt
loopne
pop
mov
cld
fstps
fiaddl
lods
inc
aam
add
add
add
andl
jbe
dec
inc
test
mov
in
inc
mov
in
xchg
aaa
sbb
subl
iret
jmp
es
cmp
push
sub
pop
bound
xor
push
push
sub
sub
rcll
push
add
outsl
nop
outsb
inc
pop
mov
mov
pop
cld
add
daa
out
xor
inc
jmp
add
dec
dec
or
test
sub
lcall
dec
inc
cmc
lock
adc
test
mov
mov
push
mov
gs
insb
jbe
aaa
adc
and
jnp
lcall
xchg
fs
push
pop
sub
cmp
cmovnp
shrl
movsb
sbb
push
inc
jg
dec
adc
adc
cmc
test
lods
adc
rolb
mov
pop
outsb
cld
jg
cwtl
or
out
out
pop
and
mov
adc
andb
cwtl
dec
mov
stos
fistpl
pushf
sub
xchg
mov
add
mov
lret
cmp
call
fdivrs
jae
inc
add
push
call
fmull
in
in
arpl
dec
outsb
ja
movl
out
cmc
push
sub
rol
cmpsb
push
rorl
pop
adc
or
or
pop
pop
fdivs
out
adc
mov
jecxz
out
cmp
call
and
sbb
xor
insb
add
pop
or
push
sbb
mov
dec
pusha
jg
mov
adc
loope
xchg
pusha
lods
lea
das
rorl
cmp
inc
stc
outsb
cmp
icebp
add
js
lea
and
dec
icebp
fs
inc
pushf
clc
add
out
call
pop
pusha
inc
ja
sbb
adc
repnz
jge
outsb
test
inc
iret
orb
adc
and
les
dec
inc
sahf
or
jb
add
sub
pop
inc
rcr
mov
lret
mov
fnsave
push
mov
bound
sub
pop
fisttps
mov
daa
and
outsb
fdivr
in
adc
cmp
mov
dec
cwtl
fmuls
push
add
test
mov
aam
jg
in
fwait
sub
ljmp
daa
stos
push
mov
test
dec
ret
push
pop
into
mov
mov
xlat
loopne
mov
xchg
fists
daa
bound
push
mov
and
in
push
push
mov
cmpsb
jno
push
insl
mov
add
subl
je
mov
ficomps
movsb
sbb
adc
mov
push
sub
cld
push
clc
mov
clc
pop
inc
lea
push
mov
outsl
leave
test
sbb
pop
adc
in
adc
jno
add
aas
in
cmpsb
roll
or
xchg
nop
movsb
jecxz
adc
shll
inc
cmpsb
adc
mov
add
in
clc
ret
aaa
rcrl
add
inc
jg
shr
dec
push
inc
mov
ret
xlat
cmp
inc
adc
inc
sbb
gs
clc
dec
rcll
sbb
bound
mov
and
push
push
test
mov
bound
fcompl
mov
xchg
arpl
daa
fnstcw
call
dec
mov
mov
gs
lods
push
loope
mov
inc
mov
adc
out
lea
adc
pop
aam
js
rcll
jns
push
mov
adc
lcall
test
mov
inc
stc
add
clc
sbb
imulb
push
fimuls
add
push
movsb
and
cmp
arpl
jmp
sub
out
sbb
incl
push
jmp
inc
nop
xchg
and
add
out
ljmp
sbb
fnsave
add
sbb
out
push
leave
pop
mov
js
fiadds
bound
fldz
iret
or
mov
shrl
lock
mov
nop
rcrl
and
lcall
das
push
sbbl
ret
pop
and
mov
sbb
icebp
rcll
xchg
mov
cmc
mov
or
scas
into
cmp
add
mov
push
andb
mov
pop
push
pushf
fs
fidivl
inc
add
jmp
fadd
lock
xor
mov
mov
jne
pop
test
rclb
lods
and
mov
pop
data16
and
lret
xchg
push
mov
push
fdivs
jg
inc
popf
sub
fucomip
dec
or
fildl
aam
test
loop
and
ffreep
decl
push
loop
sbb
jne
or
scas
adc
or
push
xor
dec
lds
test
out
adc
mov
pop
inc
addr16
adcl
lret
in
add
outsl
in
jp
lods
add
adc
inc
push
xor
aam
cmp
sub
sbb
inc
in
pop
mov
dec
adc
bound
add
push
push
jge
cmp
in
pop
jle
insl
jb
push
add
shrb
bound
dec
mov
ss
jg
mov
pop
and
cmpsl
or
mov
cmpb
xor
je
mov
lea
jnp
cld
popf
xchg
mov
mov
xchg
movsb
fildl
lods
incb
or
scas
or
mov
lret
cltd
je
xlat
ret
xor
dec
add
out
ljmp
xor
stc
pop
push
das
mov
add
lods
scas
inc
sbb
xor
add
pop
popa
push
leave
adc
cmp
xchg
jnp
dec
pop
mov
add
sub
adc
inc
mov
mov
xor
mov
xor
xor
xor
push
mov
idivl
pop
mov
or
ret
mov
and
movl
xor
incl
aaa
sbb
sub
add
lock
je
or
shr
test
pop
inc
pop
jne
insl
insl
popf
mov
outsb
mov
jo
jno
mov
inc
gs
cmovb
push
test
andl
aad
cmc
adc
add
scas
dec
push
aaa
mov
into
rolb
inc
in
and
lahf
fbstp
mov
adcl
fdivp
outsl
mov
dec
rcr
aaa
mov
inc
sti
popa
jmp
pop
loope
out
mov
adc
popa
dec
mov
xor
mov
mov
pop
mov
fucomip
sbbl
pop
add
scas
std
in
cltd
dec
lods
outsb
sub
push
outsl
push
or
and
mov
test
sbb
movsl
ljmp
lock
jnp
aad
jg
mov
sub
dec
ret
mov
pop
pop
ret
sub
push
mov
and
std
lock
ficoml
popa
mov
mov
pop
cltd
and
and
mov
aaa
pusha
mov
sbb
movl
mov
jge
mov
lods
mov
inc
add
dec
push
insl
outsb
dec
mov
stc
mov
test
push
adc
pop
sub
xchg
into
mov
cmp
insb
scas
mov
pop
leave
aaa
sub
out
ja
adcl
loopne
adc
aad
mov
mov
aas
cmc
ja
mov
push
data16
sbb
mov
mov
ja
les
pop
mov
data16
js
mov
movsb
cs
std
mov
or
roll
dec
sub
pop
insl
add
xlat
jmp
jp
jo
fmuls
mov
popf
in
or
ret
insl
stos
dec
int3
adc
adcl
xor
lret
ret
repnz
xchg
pop
cld
cmpsb
rcll
aaa
test
mov
pop
fadds
call
xchg
fdivrl
xor
pop
scas
add
pop
int3
mov
mov
cmp
imul
fstpt
jge
add
cmpb
mov
cmp
mov
enter
mov
push
test
popa
rorb
add
inc
ret
push
test
ret
dec
push
inc
loope
shlb
or
jnp
inc
mov
inc
ret
mov
jg
push
jp
cmc
pop
push
xchg
loope
sbb
aaa
adc
push
dec
jno
insl
jmp
jecxz
test
or
xor
mov
mov
inc
pusha
arpl
lods
push
add
test
or
jecxz
mov
mov
and
dec
fwait
dec
jae
cmp
loope
xchg
pop
adc
jecxz
cmp
dec
sar
fcomip
iret
push
sub
lret
test
lcall
shll
lret
testl
out
mov
cli
dec
or
sbb
pop
push
mov
sbbb
adc
fisttps
cmpsb
int3
dec
stos
call
push
lods
xlat
sti
mov
adc
inc
bound
dec
pop
xchg
mov
ss
mov
call
rorl
pop
clc
push
jg
mov
cld
mov
sbb
mov
ljmp
fcoml
loope
pusha
cmp
sub
xchg
lock
mov
push
mov
mov
orb
sti
popf
or
or
pop
es
mov
or
xlat
mov
mov
or
mov
fistpll
push
pushf
mov
sbbl
insb
gs
jecxz
loopne
sub
pushl
idiv
jp
nop
pop
arpl
inc
push
arpl
and
mov
out
in
out
jae
xchg
adc
lea
aas
cwtl
jae
inc
xor
push
push
lcall
add
add
aaa
notb
push
aaa
mov
fldl2t
lret
shlb
icebp
jno
test
movb
jb
jmp
call
sub
pop
ss
inc
inc
xchg
ja
loop
inc
dec
adc
xchg
dec
nop
cltd
pusha
mov
es
lcall
arpl
sbb
xor
repz
xor
sub
cli
cli
mov
fldcw
fnstcw
fadds
aaa
or
les
jae
inc
iret
or
movsl
add
jo
push
push
int
out
cmp
ret
jbe
push
mov
mov
add
sub
arpl
out
mov
stos
rol
hlt
fbld
jl
sbb
mov
push
mov
shrb
cmp
pop
stos
mov
mov
icebp
or
test
mov
or
mov
pop
pop
mov
arpl
or
vsqrtss
add
adc
stc
mov
ror
ror
or
sar
ffreep
cli
scas
add
push
and
mov
dec
pop
mov
mov
push
jae
inc
decl
out
call
push
push
mov
inc
pop
push
xor
ficompl
sbb
mov
mov
push
loopne
insl
or
and
aam
es
or
call
pop
mov
sbb
shl
xchg
int3
imul
mov
push
pop
popa
cld
inc
push
ds
pusha
ss
lcall
pop
sub
and
sub
inc
fs
dec
xor
inc
loope
inc
aaa
lea
or
or
push
in
imulb
pop
mov
xchg
pop
fwait
and
push
jo
or
fidivl
xchg
mov
sub
pop
cmpsl
mov
sub
or
pusha
push
aam
add
in
rorb
pushf
pusha
xchg
jbe
jae
fwait
popa
add
push
stos
out
cmp
jge
je
test
rolb
fisubrs
icebp
sub
sub
mov
push
inc
imul
repnz
dec
mov
add
mov
repz
in
inc
imul
cld
aaa
pop
cld
das
int3
rcr
inc
xchg
inc
xchg
or
sub
jbe
adc
pop
or
mov
jo
cmp
addr16
mov
mov
lods
dec
push
insl
mov
stos
icebp
ljmp
fldl
fistpl
insb
mov
adc
sbb
js
lret
xor
fincstp
sbb
das
into
or
pop
das
sub
mov
int3
lea
jmp
mov
mov
insl
pop
mov
out
inc
mov
xchg
xlat
xchg
and
pop
loopne
fstpt
inc
das
cwtl
xchg
xor
cwtl
lcall
pop
cli
aas
mov
mov
inc
sub
sub
mov
in
ja
idivb
rcll
clc
jno
fisttpll
lea
xchg
ret
sbb
mov
stos
das
push
add
stos
or
imul
sub
pop
cmp
sub
in
mov
cmp
mov
mov
roll
push
rorl
or
jnp
mov
add
mov
mov
mov
test
dec
mov
mov
call
inc
clc
das
mov
addl
fistl
jb
jmp
fdivrp
xchg
out
adcb
andl
in
shrl
xchg
or
dec
adc
sti
data16
push
jne
adc
dec
int3
jae
dec
loop
mov
lcall
adc
and
sbb
outsl
rolb
loope
dec
sbb
test
mov
std
test
pop
lds
imul
imul
hlt
inc
jl
lods
jmp
sti
adc
aad
sub
stc
push
push
or
sub
pop
sub
jg
adc
dec
loopne
inc
dec
cld
outsb
cmp
movsb
mov
mov
mov
insl
inc
lcall
sbb
add
divl
adc
xchg
cltd
icebp
insb
push
jge
push
jnp
rol
mov
mov
dec
out
addr16
push
mov
shlb
pop
adc
dec
insl
je
jle
stos
mov
and
or
mov
lock
and
cwtl
sti
addb
fldt
les
or
xchg
push
and
push
xlat
and
and
jns
mov
dec
pop
sarb
xchg
aaa
mov
imul
sub
fcomps
xchg
sub
lret
out
adc
aaa
sarb
sbb
adc
push
xor
psubq
mov
sarb
fnstsw
test
cltd
lods
sbb
lods
inc
mov
xchg
add
pop
cltd
inc
or
jecxz
shr
lretw
loopne
scas
hlt
insb
push
pop
mov
pusha
jle
hlt
add
pop
int
cmp
pop
outsb
cli
inc
mov
js
or
and
out
aam
rorb
ret
das
adc
popf
dec
incl
adc
add
aad
rclb
aam
popa
sti
cli
into
cld
cltd
popa
push
test
rol
imul
or
add
aaa
aad
jecxz
dec
xchg
adc
pusha
aas
mov
out
lcall
sahf
jmp
test
rcr
push
subb
idivb
fucom
loop
sti
push
mov
push
into
popf
mov
push
pop
pop
inc
and
mov
xlat
sti
pop
sub
cmp
jle
into
ja
iret
fcomp
jmp
imul
or
loope
xor
or
dec
jmp
pop
or
ljmp
aas
leave
and
adc
pop
push
lea
xchg
inc
or
ja
es
adc
std
dec
imull
inc
insl
aaa
jo
data16
pop
mul
inc
mov
push
add
aad
and
aaa
jp
daa
push
mov
call
loop
or
test
nop
mov
pop
aaa
inc
mov
dec
or
decl
ljmp
pop
inc
outsb
dec
xchg
incl
or
xor
and
jno
dec
ds
les
cltd
mov
mov
pop
cwtl
cmpb
cmp
stos
jl
and
add
sbb
dec
adc
popf
jg
fildl
call
cmp
testb
inc
xor
and
divb
jp
mov
fs
sub
inc
sub
pop
or
xchg
sub
test
jge
mov
outsl
mov
idivb
enter
insb
scas
sub
xor
lods
sub
push
add
inc
cltd
add
xor
inc
pop
lret
gs
mov
add
call
int3
xchg
decb
fwait
xchg
cwtl
addr16
je
adc
mov
in
movsl
incl
lahf
fcmovne
test
add
mov
jno
and
jmp
adc
xchg
roll
adc
loopne
fistpll
xchg
sbb
xchg
and
dec
pop
aam
push
pop
fwait
stos
push
ss
lcall
cs
mov
dec
sub
sahf
popf
stc
add
shlb
pop
push
jmp
loop
sbb
adc
icebp
outsl
rorb
mov
cmpsb
sbb
outsb
arpl
int3
mov
pop
cld
pop
mov
std
stos
add
jecxz
pop
sub
xlat
pop
dec
adc
dec
cltd
out
lods
or
or
rep
call
fsubrl
lods
xchg
aas
cs
mov
inc
jnp
adc
cmpsl
pop
push
insb
or
mov
sub
cld
dec
cmc
in
imul
fwait
sar
negb
fwait
bound
and
cmc
imulb
add
stos
jl
js
mov
xor
push
fwait
repnz
pop
lods
adc
mov
inc
push
sub
pop
les
shrb
fbstp
notl
int3
rol
xchg
fiadds
xchg
mov
mov
loope
mov
ret
mov
shll
or
jecxz
into
sub
sub
inc
adc
lret
imul
mov
xor
xor
jno
jb
std
outsl
cld
mov
push
inc
sbb
dec
sbb
stos
jmp
pop
xchg
cmp
xchg
mov
mov
mov
std
mov
xlat
sbb
cld
jmp
movb
add
cmp
aaa
jge
add
inc
pop
jo
test
or
jno
push
imul
mov
stos
fsubrp
jbe
jle
cmp
and
nop
popf
inc
in
sbb
aaa
icebp
outsl
cmp
inc
push
jne
fucom
jl,pt
in
cld
ja
and
adc
add
mov
cmc
das
jp
ss
xchg
sbb
stc
mov
cmp
gs
pop
mov
sub
mov
mov
xchg
lea
push
aaa
pushf
lret
and
jnp
push
pop
les
or
fwait
ret
mov
cmc
mov
and
cmpsl
jle
gs
mov
insl
stc
xchg
xchg
adc
push
clc
inc
mov
adc
ret
rclb
lods
mov
insb
lock
xchg
xchg
mov
push
in
or
jo,pt
or
mov
adc
jno
popa
stos
loope
cmpsb
mov
ljmp
mov
imul
xchg
es
shl
es
jecxz
sbb
push
and
or
mov
mov
daa
inc
mov
inc
arpl
insl
sub
sub
pop
insl
and
jns
movsb
cld
inc
es
cs
inc
xor
push
inc
push
int
mov
in
mov
adc
lock
fldl
insl
add
cmp
jnp
cs
add
xor
sahf
hlt
mov
shl
mov
loopne
sub
add
mov
sub
sub
outsl
fimull
xor
pop
es
stos
mov
popl
test
aaa
inc
movsl
test
jl
hlt
addr16
xor
and
aad
push
adc
aad
js
pop
inc
fildll
inc
out
sbb
test
inc
popa
mov
mov
arpl
mov
push
or
dec
fldt
fstpt
mov
add
jl
and
cli
in
pop
adc
xlat
mov
adc
add
sub
repnz
xchg
rclb
inc
sbb
xchg
js
jnp
pop
test
ret
jecxz
xor
fstpt
ret
mov
decl
sub
addr16
cli
fbstp
mov
enter
cld
test
icebp
lahf
clc
notb
ret
in
mov
js
cmp
xchg
js
or
int
mov
jle
fistpl
adc
xchg
jae
in
mov
push
arpl
sbb
sarb
leave
dec
jp
or
mov
mov
cmc
ja
jecxz
enter
fdivr
nopl
bound
imul
xchg
adc
inc
xchg
inc
jo
hlt
mov
adc
jno
lods
jne
push
dec
out
add
sbb
push
ss
push
adc
push
mov
mov
movsl
sbb
fistpll
lret
push
dec
dec
aaa
mov
push
ljmp
das
mov
call
or
push
insb
push
notl
test
es
shlb
cmp
push
and
clc
adc
or
fwait
outsl
mov
mov
cmp
out
lret
add
push
movsl
loope
cmp
addl
inc
in
mov
decl
inc
pop
call
lods
sbb
dec
mov
push
mov
test
jns
mov
aad
imul
xchg
mov
icebp
sbbb
arpl
mov
fs
add
stos
int3
sub
hlt
pop
addb
test
addb
repnz
ljmp
out
xor
inc
adc
aas
pop
cmp
fld
imul
pop
cltd
ss
dec
sub
inc
cli
fimuls
std
fistpl
call
pop
add
scas
iret
hlt
mov
lods
aam
subb
sbb
lock
scas
xorl
cmp
mov
inc
push
rcr
pop
fbld
stos
dec
movsb
jmp
in
aaa
mov
out
es
out
or
or
rcrl
dec
pusha
jmp
dec
faddp
dec
loopne
imul
inc
enter
sub
ret
mov
pop
cmp
mov
mov
gs
shl
in
xchg
mov
jmp
mov
cwtl
loopne
mov
inc
in
sar
lods
aaa
roll
adc
int3
jmp
inc
cmp
orl
pop
push
pop
mov
ficompl
outsb
add
fdivl
sbb
loop
jg
jl
and
jle
fisttps
or
mov
call
lock
out
lret
mov
add
push
leave
jg
out
addl
decl
sub
mov
pop
fs
movsl
test
ret
lods
xor
aad
dec
mov
stc
call
ljmp
lds
hlt
sbb
pop
scas
ret
mov
push
push
enter
sub
xchg
leave
dec
xorb
mov
mov
xorl
xorb
jl
push
arpl
cltd
cmp
mov
push
dec
ljmp
nop
aas
mov
in
mov
xor
xchg
roll
pop
xchg
lods
sub
movd
in
repz
outsl
orb
mov
jb
jnp
loope
test
add
enter
jg
je
mov
cmpl
sbb
clc
adc
cmpsl
jmp
xchg
clc
and
shlb
in
sbb
add
push
sub
aas
inc
mov
jae
jne
jno
shlb
decl
dec
js
es
cmp
cmp
inc
and
pop
push
mov
iret
in
or
pusha
jge
adc
pop
nop
loopne
pop
cs
push
sti
sbb
mov
pop
fs
sub
pusha
sbb
loope
movsb
inc
fs
aad
loopne
je
sbbb
mov
fcoms
and
mov
xchg
lods
jmp
cmpsb
lock
ret
adc
cwtl
mov
dec
test
movsl
jp
leave
mov
popf
out
mov
addb
incl
push
add
decb
inc
pusha
mov
push
sub
jl
adc
in
push
pop
fwait
xor
or
pop
cld
pop
out
jecxz
xor
adc
inc
add
mov
pop
jge
lahf
xor
mov
fmulp
sbb
imul
test
jg
je
arpl
scas
mov
dec
loope
dec
loopne
dec
adc
cli
in
mov
sahf
xor
jns
adc
push
xchg
repz
adc
test
mov
xchg
xchg
aad
cltd
popa
mov
call
xor
dec
pop
pop
pop
adcb
pop
fwait
sbb
jno
mov
mov
int
icebp
out
adc
ret
in
adc
cld
imull
push
lcall
jns
add
pop
loop
outsl
test
or
sub
xchg
sbb
xchg
jle
push
and
dec
jge
jo
xchg
xchg
ret
gs
cmp
pop
test
sub
jecxz
imul
insl
adc
cmp
into
rolb
sbb
mov
and
cmp
dec
data16
add
jl
and
push
dec
adc
cmp
or
scas
dec
pop
popf
sub
in
inc
mov
pop
pop
shll
mov
cs
or
jmp
mov
dec
dec
in
push
or
push
push
mov
jmp
xorl
sbb
ss
mov
loopne
les
sbb
mov
movsl
mov
aas
fwait
rclb
ret
push
lcall
loopne
mov
mul
outsl
cld
pushl
pushf
je
addl
das
movsb
sbb
mov
sarl
roll
cmp
push
add
sahf
cmp
test
int
scas
pop
shll
popf
mov
inc
push
pusha
mov
xor
pop
adc
stos
fiaddl
ss
mov
sub
outsl
stos
inc
sbb
imul
inc
out
push
xchg
movsl
call
fcmovu
mov
fcmove
jae
lock
repnz
jg
enter
loopne
aam
cmc
or
push
xchg
mov
mov
mov
sarl
pusha
sbb
and
jno
sti
lods
int
nop
xor
in
ret
arpl
aaa
mov
mov
jge
notl
pop
icebp
add
das
test
in
decl
hlt
mov
mov
aad
pop
scas
pushf
or
call
andl
cld
shll
pop
scas
lods
pushl
rorl
mov
mov
cltd
shrb
pop
push
ret
jmp
loop
pop
mov
bound
mov
jg
jl
push
sub
mov
xchg
call
push
cmp
js
adc
outsb
cmp
loopne
push
orl
add
cltd
xchg
add
popa
shll
xchg
data16
test
add
inc
mov
ror
mov
pop
mov
je
dec
inc
push
sbbl
andl
sbb
push
lea
int3
adc
aam
pop
imul
int3
mov
mov
push
mov
xchg
mov
loope
push
rolb
pop
xchg
mov
std
test
js
icebp
es
xadd
adc
push
jg
test
or
ja
shlb
or
ljmp
jge
push
rorl
loope
and
add
dec
cmp
xchg
mov
pop
popf
jb
jne
cmpsb
dec
push
pop
pop
test
fisubl
je
xchg
pop
mov
inc
arpl
add
loop
push
mov
mov
inc
xacquire
out
cli
add
fisubrs
orl
gs
pop
fldcw
je
shlb
outsb
out
push
jmp
shlb
mov
jo
orb
pop
or
inc
or
mov
repz
lahf
inc
popa
stos
push
cmp
mov
outsb
cmpsl
and
movsl
cmp
and
add
pop
add
mov
jno
icebp
push
lret
pop
push
xchg
cmpsl
mov
arpl
addl
mov
mov
aad
call
sbb
clc
push
and
jecxz
outsb
jmp
dec
xchg
push
lcall
sbb
adc
sub
add
ds
ja
call
lcall
mov
xchg
xchg
xor
loop
jns
cmp
add
pop
push
sub
push
mov
pop
xchg
sbb
shrl
xor
enter
push
sbb
repnz
ret
outsb
fcomps
pop
test
pop
ret
test
daa
popf
cmp
pop
xchg
aad
mov
lock
pushf
and
lock
test
sub
sub
push
inc
mov
pop
psubsw
outsl
add
fisubrl
jp
jno
mov
push
mov
shlb
rorl
addr16
mov
lret
lea
sbb
sub
inc
lods
sbb
adc
pop
jl
test
scas
push
jo
dec
mov
jae
movsl
mov
cmpsb
enter
push
mov
rcrl
cmp
sbb
subb
insb
cli
outsl
loopne
pop
cmp
xor
ja
out
mov
xchg
add
cmp
sbb
sbb
push
lret
add
test
nop
jbe
lret
cmp
inc
sbb
add
insb
fdivrs
hlt
add
scas
jmp
or
cld
mov
sub
sti
ja
inc
sub
mov
mov
loope
lock
dec
int
mov
cmp
xor
pop
gs
js
fidivs
hlt
xor
add
filds
and
repnz
mov
cmp
jl
xor
out
mov
adc
scas
and
dec
stos
movsl
loopne
sbb
fcomp
mov
and
les
outsb
mov
mov
shrl
in
adc
pushf
imul
loop
jge
push
sbb
cmp
outsb
fwait
cs
dec
push
or
mov
inc
ja
fstpl
addr16
inc
add
jb
sub
rcrb
loopne
setns
roll
sub
inc
std
scas
inc
jge
adc
mov
push
inc
jb
hlt
pop
push
orps
mov
jnp
cmp
sub
xchg
add
fiaddl
push
test
ficoml
repnz
js,pt
mov
test
ja
jmp
out
jecxz
mov
out
dec
fldcw
das
xchg
mov
pop
mov
mov
push
xor
mov
mov
cmpsb
mov
cs
shrb
ret
add
pop
and
in
cmp
shll
sbb
jecxz
mov
cmpsl
inc
xchg
add
mov
loopne
insl
pop
jle
xchg
xor
and
pop
or
inc
jle
fwait
insl
outsl
pushf
mov
jnp
mov
inc
push
xorb
adc
fisttpl
outsl
xchg
sub
mov
insl
ds
test
xchg
mov
mov
lds
fdivs
or
and
aam
cli
lahf
scas
jg
sbb
out
outsl
jp
push
int
outsl
push
into
dec
cmp
ja
pop
es
adc
cmp
bound
cmp
lea
mov
in
adc
sarb
stos
mov
mov
outsl
cld
pop
sbb
jb
lods
jns
push
or
pop
test
mov
pop
repz
and
sub
inc
jmp
fimuls
sbb
pop
cwtl
sarb
rcrl
loop
push
jecxz
test
xchg
mov
mov
sahf
mov
pop
jno
add
fcmovbe
cmp
adc
or
inc
adc
cmpsl
mov
incl
sub
adc
addr16
les
jbe
popa
gs
jmp
jecxz
mov
aaa
jl
icebp
ror
cmp
or
scas
arpl
mov
inc
cmp
nop
dec
jbe
out
mov
fwait
inc
push
ret
or
icebp
push
and
xchg
xchg
divb
fstpl
jb
sbb
mov
mov
es
xchg
pop
cld
fldt
adc
imul
das
jl
and
jge
shrl
cmp
ds
jl
add
popf
jecxz
cmp
mov
adc
xchg
xchg
inc
mov
mov
nop
pop
pop
xor
dec
push
mov
call
push
lea
add
test
aaa
mov
in
sbb
ljmp
mov
jae
mov
or
int3
dec
adcl
outsb
stos
adc
sti
cmp
insb
xchg
jne
jno
outsl
inc
incb
mov
lea
sbb
outsl
and
sbbb
push
mov
ja
add
add
inc
lret
mov
dec
fisttpl
into
jnp
pop
lea
lret
cmp
push
mov
orl
insb
outsl
arpl
out
jns
add
xchg
push
xchg
jno
mov
int
mov
xchg
push
sub
mov
idivb
sbb
lcall
outsb
lock
decl
int3
dec
mov
xor
imul
fwait
test
jp
sub
mov
mov
mov
rolb
and
decl
dec
aaa
pop
cmp
pop
fmull
inc
enter
pusha
loope
cmpsb
test
or
mov
adc
or
mov
dec
inc
sub
adc
pop
inc
xor
inc
sbbb
lret
add
lea
cmp
mov
pop
push
test
hlt
jns
sbb
popf
cld
call
mov
sbb
xor
push
sub
mov
jbe
add
xlat
loopne
xchg
adc
inc
icebp
test
std
inc
movsb
cmpsb
dec
rorb
pop
insl
mov
loop
cltd
inc
ret
incl
ljmp
push
ja
stc
xchg
cld
dec
and
mov
mov
cmp
insb
loop
loope
mov
inc
cmp
inc
sbb
aam
inc
cmpb
push
pop
mov
test
das
les
loope
fstpt
shl
xor
outsb
fnstenv
testb
aad
sti
push
xor
pop
add
cmp
mov
packuswb
pop
in
dec
adc
or
push
xchg
call
jb
mov
incl
jae
push
jge
push
sbb
mov
or
aas
xchg
pop
cld
cli
sbb
pop
add
call
movsb
fstps
jmp
in
sub
in
pop
or
fwait
cmpsb
mov
and
mov
xchg
fldt
and
pop
mov
push
xchg
test
cli
and
ret
ret
inc
sbb
or
ficoml
dec
dec
hlt
orl
or
les
clc
nop
cmpb
pop
pusha
out
mov
xchg
push
adc
sbb
push
xlat
xchg
inc
out
sub
movsb
xor
fmul
cmp
add
icebp
pop
pop
scas
test
lret
jg
std
ret
inc
addl
iret
jg
inc
outsb
int3
and
ljmp
fcmovbe
fbstp
movsl
cmp
fcomps
mov
jo
xor
sbb
push
cmp
mov
push
push
aaa
repz
imul
loope
pop
rorl
sbb
pop
inc
jle
cmpsb
dec
cwtl
sarb
ss
or
lcall
inc
rolb
nop
adcb
mov
xor
pop
cli
cmp
movsb
in
xlat
not
cmp
sarb
adc
or
adc
or
xor
lret
and
jl
push
imul
ret
jp
rorb
mov
sti
jle
cwtl
pop
push
scas
out
xchg
cmpsl
loopne
sub
dec
cmp
cld
pusha
mov
dec
lods
movsb
cld
into
mov
hlt
iret
fstp
data16
inc
jg
mov
loopne
add
outsb
cmp
sbb
movsb
mov
jne
add
je
test
ss
mov
inc
sbb
ds
push
fucom
mov
pop
js
inc
xor
sbb
ficomps
dec
es
loop
mov
mov
sbb
and
mull
arpl
sbb
scas
orb
mov
inc
fstpt
addb
lods
lock
fcmovnu
sarb
insl
inc
fbld
nop
pop
je
xchg
inc
movsb
fwait
cs
mov
out
mov
rcl
jno
inc
orb
push
sbb
les
jle
and
dec
into
dec
mov
pop
jno
or
pushf
lcall
mov
fcomi
daa
inc
insb
cmpb
mov
lock
dec
fisttps
rcrb
subb
fwait
sbb
xorb
cs
mov
stc
xchg
icebp
mov
ss
data16
fucomip
dec
aad
mov
or
out
pop
mov
sub
inc
push
imul
pop
jg
add
lret
pop
pop
rcrl
or
push
ret
mov
inc
scas
test
push
and
lcall
inc
jle
and
add
lea
mov
dec
cltd
mov
loop
push
clc
test
fidivs
addr16
fs
mov
scas
into
dec
rorb
outsl
jmp
fwait
loopne
daa
mov
sahf
push
adcl
ret
cmp
mov
xchg
add
adcl
dec
or
jle
pop
enter
pop
push
mov
cmp
push
nop
mov
shl
pop
jno
and
and
and
xchg
fists
mov
mov
xor
xchg
out
lret
cs
movsl
lea
adc
xchg
sahf
dec
sub
xor
lahf
mov
push
cmp
ror
shrb
pushl
ret
or
gs
nop
mov
loope
and
js
es
push
and
mov
pusha
and
cs
std
sbbb
sarl
lret
inc
push
popa
aam
xor
mov
push
in
ret
cmp
icebp
cmc
xchg
ss
mov
pop
push
out
into
mov
cmc
jo
mov
inc
push
jl
mov
mov
sbb
pusha
idiv
inc
inc
cli
push
mov
lock
das
mov
dec
lea
add
sahf
sbb
cwtl
xchg
add
push
add
inc
movsl
mov
popf
cmp
stos
xor
pusha
popa
jae
scas
pusha
or
mov
sbb
push
mov
out
mov
mov
repnz
fnstenv
shll
adc
push
fcmovnu
rorb
lock
push
addb
jnp
ret
pop
ss
cmp
jb
call
fwait
mov
je
sub
and
inc
loop
add
inc
hlt
decl
mov
leave
dec
jb
mov
pop
and
xor
sti
insl
mov
dec
push
inc
mov
stos
mov
mov
inc
sti
test
pop
add
arpl
inc
dec
jb
or
fidivrs
mov
rcl
std
mov
in
rcrb
mov
mov
cmp
leave
sbb
pop
in
jp
mov
jno
ljmp
add
mov
pop
cld
test
pop
mov
aad
ret
or
sub
cmp
stos
movd
pop
js
pop
mov
xor
fcompl
fcmovb
pop
pop
adc
pop
test
xor
dec
mov
aas
lahf
std
popa
sbb
adc
test
loop
or
shl
push
int
add
xchg
data16
in
lcall
inc
test
cmc
inc
or
lret
sbb
nop
in
repnz
push
incl
lret
mov
xchg
push
xchg
mov
mov
or
pause
aad
jne
fdivrl
pop
sbb
jne
mov
pop
loopne
insl
stos
ret
inc
lods
outsb
cmp
addr16
lret
jne
jmp
cmpsl
dec
adc
xchg
sub
loop
fistpll
inc
hlt
pop
loopne
aam
pcmpgtb
xor
mov
fimuls
mov
or
cmpsb
lods
arpl
pop
pop
stos
and
mov
inc
rcrb
sub
push
ficoml
sub
dec
popa
pop
das
mov
leave
fnsave
enter
fsubrs
add
ja
shl
xor
outsb
jae
and
jae
lods
cmp
test
sub
popa
xlat
loopne,pn
ljmp
jb
addl
js
xchg
jne
jmp
xchg
sub
inc
ret
mov
imul
das
shrb
sub
or
mov
incl
inc
and
mov
or
mov
leave
dec
mov
outsl
push
movsb
pop
cmp
rclb
and
push
pop
inc
fdivs
or
cwtl
cmp
xchg
or
insb
sbb
into
or
and
push
inc
lock
mov
and
fidivs
cli
jge
enter
out
xor
and
test
mov
dec
fwait
push
jbe
repz
mov
dec
inc
cld
xchg
push
mov
bound
mov
pop
mov
cmp
rcrl
and
xor
mov
mov
fnstcw
cli
jnp
scas
popf
add
xchg
adc
ret
popf
addl
cmpsl
stos
mov
out
jecxz
lock
dec
push
mov
hlt
or
cmp
mov
and
push
cmp
or
neg
dec
orl
pushl
pop
add
mov
jmp
sub
mov
js
ljmp
gs
and
cli
movsl
pop
jbe
sbb
sahf
pushf
add
pop
mov
insb
jmp
xchg
dec
jmp
aas
mov
sbb
push
or
and
js
sbb
xchg
lcall
push
ret
mov
imul
mov
jmp
ss
mov
xor
ds
insb
mov
adc
pop
loopne
aaa
xchg
sub
sub
inc
cmp
aam
sbb
int3
sub
stos
loopne
aad
mov
lret
push
mov
je
mov
daa
xchg
jle
loop
popf
lods
xor
xchg
cmp
or
addl
in
dec
cmp
xlat
nop
cmp
xor
test
inc
or
cmpl
mov
aaa
stc
lret
mov
lea
adc
scas
or
xlat
mov
mov
push
popa
dec
ja
inc
nop
lret
and
cli
pop
sti
sub
pop
ret
imul
je
in
push
push
pop
sub
cmp
sub
sub
ud2
enter
test
lgs
jge
outsl
jg
imul
or
push
icebp
jg
xchg
lret
test
mov
mov
repz
pop
mov
frstor
int3
jle
jns
aad
mov
test
push
adc
data16
insb
andl
inc
mov
dec
rolb
mov
dec
dec
cmp
outsb
pop
insb
pop
fdivrs
movsb
or
sub
in
pop
jbe
xor
inc
movsb
sbb
pusha
inc
sbb
dec
outsb
add
int
data16
hlt
add
or
inc
sub
push
outsl
addr16
dec
rcll
jb
push
test
pop
and
xor
std
mov
roll
ja
or
add
es
ret
inc
pop
and
pop
lds
inc
shl
loopne
mov
and
adc
jbe
in
jae
mov
push
jl
ror
inc
sub
arpl
dec
xor
imul
jne
arpl
cmp
sbb
pop
and
add
push
xchg
adc
dec
jno
sbbl
xor
ret
addr16
leave
push
sbb
inc
ljmp
inc
pop
fcoms
pop
add
lea
out
dec
push
mov
cwtl
jo
mov
je
jns
inc
sbb
cld
jne
test
and
andb
jns
adc
pop
mov
jnp
mov
loope
or
jne
sbb
cs
sbb
pop
mov
jl
lods
sbb
inc
sub
scas
lock
leave
outsb
adc
outsb
cmpl
jl
je
hlt
mov
xor
push
and
inc
call
xchg
push
mov
jmp
je
mov
sub
lock
cli
inc
rcrl
mov
out
stos
xchg
lret
or
lcall
leave
out
movsb
pop
xor
cmp
aad
and
sbb
jecxz
loope
ds
and
mov
cltd
and
fsts
mov
xchg
sub
fistpll
jbe
imul
adc
jns
lods
mov
cltd
mov
push
jo
mov
les
dec
pop
out
push
inc
scas
inc
pop
lea
adc
mov
and
in
call
orb
cmp
sub
or
inc
fildl
xchg
stc
imul
popa
and
mov
fisttpl
incl
aas
mov
push
sub
push
mov
inc
sahf
inc
push
or
je
add
std
mov
test
lds
fadds
push
ljmp
mov
mov
movsb
xchg
outsl
lock
iret
xchg
push
lret
out
aaa
aam
cltd
sub
mov
xor
roll
sub
mov
pop
stos
sbbl
push
mov
cmp
mov
push
shrb
jns
sbb
stos
pop
leave
push
inc
add
movsl
dec
loop
xchg
jmp
dec
hlt
pushl
out
jl
lret
stc
lds
or
ret
bound
mov
add
push
adc
jp
lahf
add
adc
mov
mov
and
lcall
stc
sub
mov
mov
cli
jp
pop
sbb
jmp
aad
xchg
or
cs
enter
sar
xor
outsb
loopne
inc
movsw
rclb
mov
or
sbb
das
inc
or
dec
inc
mov
ljmp
outsb
mov
out
pop
add
jmp
fs
sbb
fucomip
mov
inc
adc
std
aam
icebp
and
setb
jnp
add
es
addr16
dec
mov
incl
push
jmp
faddl
pop
mov
ss
add
lds
sub
mov
pusha
jecxz
call
int3
sbb
mov
inc
insl
test
rcll
cli
mov
bound
add
xor
add
ret
jle
popa
loope
stc
lods
pop
pop
incl
push
fwait
push
and
gs
inc
ja
push
jne
insb
mov
sahf
shrb
push
clc
stos
cmp
mov
mov
mov
inc
push
gs
repz
loopne
and
lret
popf
push
popa
inc
xchg
test
cmp
adc
push
add
adc
cmp
mov
jo
push
push
add
incb
addb
mov
inc
inc
and
and
ljmp
push
push
stos
out
hlt
cmpsl
inc
aad
sub
xchg
dec
xor
mulb
cmp
adc
jle
icebp
je
out
shl
push
lcall
pop
cmp
adc
in
dec
push
add
mov
mov
test
scas
pop
xchg
add
pop
test
or
incl
and
or
loope
je
jbe
nop
call
lods
sbb
hlt
cwtl
inc
push
jne
adc
add
or
outsl
pop
dec
insb
sbb
icebp
es
push
loopne
cs
and
fimull
add
loop
repz
inc
loop
and
mov
jecxz
push
in
xchg
mov
pop
cmp
push
repz
ret
jecxz
jl
lods
jbe
in
outsl
call
adc
mov
cmpsl
in
into
test
loope
outsl
fbld
jbe
movsb
fcmove
and
cwtl
loop
lods
loopne
popa
cld
adc
xchg
sbb
popa
push
ljmp
inc
cmc
mov
pusha
in
push
lcall
dec
pop
inc
pop
ljmp
sbb
cmpl
dec
xchg
mov
cwtl
loopne
scas
pop
ljmp
loop
cmp
in
fcmovu
dec
mov
push
cltd
scas
sub
popa
stos
mov
fsub
push
ret
pop
hlt
test
cs
aam
lods
shrb
inc
rorb
mov
lea
adc
dec
pop
and
sub
mov
sbb
pop
imul
shl
subb
pop
jp
or
mov
decb
jmp
out
mov
or
pop
mov
pop
inc
cs
xchg
or
sar
cmp
stos
jo
lret
cmc
stc
and
mov
or
xorb
lret
xlat
arpl
je
xor
adc
add
and
lods
or
mov
or
adc
out
mov
push
sub
sbb
cmc
and
sahf
dec
sti
call
call
pop
push
out
jl
in
add
mov
or
and
cltd
nop
push
xor
test
pcmpeqw
shlb
push
sub
shll
adc
mov
xchg
push
scas
das
lock
imul
inc
ret
sbb
jp
cli
jg
pop
callw
dec
mov
ljmp
movl
pop
cmp
push
push
jge
adc
mov
icebp
icebp
adc
nop
push
negb
xchg
rorb
shlb
or
test
mov
out
push
clc
lock
testb
push
sub
adc
loope
pop
or
adc
push
cmpb
jo
cmpsl
sub
push
in
dec
sbb
inc
dec
add
inc
loop
insb
cmp
push
push
mov
inc
sti
repnz
mov
and
lock
ret
lds
pop
fistpll
cli
dec
adc
lret
test
xchg
ss
sbb
jbe
test
imul
sbb
jmp
cmc
pop
aas
leave
jl
push
adc
roll
fidivl
cwtl
stos
in
add
mov
jnp
pop
push
inc
out
aaa
inc
lock
jno
xor
call
ret
pop
lea
dec
lret
outsl
jb
loopne
cmpsb
in
jp
mov
cld
sub
xor
cmp
mov
jecxz
inc
mov
and
pop
repz
jecxz
in
sub
or
cmp
in
fcmovb
outsb
fxch
jle
in
or
inc
stc
push
ja
xor
push
jb
clc
filds
and
arpl
xchg
hlt
ret
xor
xchg
adc
imull
movsl
add
xchg
in
in
fimuls
insl
les
xchg
adc
call
mov
testb
pop
push
xchg
loope
mov
dec
and
je
fbstp
or
das
loopne
mov
int
clc
notb
adc
lods
inc
jno
mov
mov
and
fdivr
pop
es
lret
adc
loop
mov
or
subb
xor
leave
push
cli
cmpsb
andl
outsb
add
mov
das
cld
push
std
shrb
inc
or
and
in
dec
pop
aas
fsubrs
out
repnz
out
loopne
xchg
or
jne
repnz
imul
cmpsb
xchg
data16
sarb
sbb
jg
sbb
subb
or
push
push
cmp
outsl
std
aam
nop
xor
jbe
into
add
lret
mov
sbb
mov
dec
leave
pop
movsb
xorb
and
cmp
dec
sbb
mov
into
jl
cmp
andb
js
in
ds
xor
clc
dec
pop
dec
mov
movsl
sbb
popf
lods
cs
pop
adc
test
dec
in
push
mov
sbb
mov
test
sti
shll
and
add
lods
xchg
js
pushl
loope
ss
or
sbbl
push
push
pop
sub
push
and
das
push
inc
mov
sahf
mov
fidivrs
out
push
xchg
mov
mov
sub
xchg
mov
or
push
mov
mov
pop
and
mov
daa
sbb
or
cmc
push
rorb
jl
pusha
push
loope
sub
mov
sbb
insl
cld
stos
mov
add
popa
inc
int
add
hlt
and
bound
add
loope
das
les
call
add
pop
pop
dec
cmc
ret
add
leave
sub
dec
xchg
mov
mov
pop
lfs
cmp
outsl
rclb
jns
cs
lods
cmc
fs
or
hlt
ret
xchg
insb
push
aas
jb
insl
ss
ds
mulb
push
xor
ret
sbb
loope
mov
mov
lret
mov
push
dec
mov
outsl
arpl
dec
arpl
push
divb
outsb
xor
and
std
cs
inc
les
xchg
add
test
in
pushw
out
test
icebp
mov
add
sbb
add
mov
mov
mov
add
or
mov
jg
cmpsb
cmpsl
inc
bound
enter
cmpsb
cmpsl
add
lcall
sbb
push
sahf
inc
pop
mov
lock
dec
clc
loope
je
push
mov
adc
ror
faddl
popa
lock
aam
incl
adc
ja
rorb
notl
push
mov
cwtl
ja
ret
fsubrs
mov
inc
push
pushf
and
add
fstp
xchg
push
mov
test
js
jbe
mov
inc
pop
pusha
iret
shl
xchg
fdivrs
jg
xchg
push
mov
pushf
ljmp
fs
in
mov
dec
push
xchg
cwtl
movsl
cwtl
mov
mov
mov
dec
push
pop
jnp
stos
aaa
fbld
mov
push
mov
test
movsl
jg
test
sbb
jo
and
aam
bound
call
jg
inc
data16
push
int3
cmc
bound
or
and
cmp
mov
xor
xor
push
mov
loope
cmp
ret
push
sbb
mov
adc
xchg
push
int3
xchg
mov
adc
or
jbe
lock
lcall
std
xchg
sbb
xchg
jl
adc
mov
cld
into
out
fldl
repz
aaa
lock
aas
fsubp
mov
aam
cmp
push
out
jae
movsb
or
std
lcall
sti
lods
mov
rclb
aad
std
ret
adc
and
fldt
cmpsb
push
mov
mov
test
clc
nop
cmp
subl
sub
push
mov
mov
jle
loop
outsl
sbb
mov
imul
or
jl
lcall
dec
in
or
es
sbb
push
mov
fildll
test
add
and
je
call
call
pop
cmp
mov
ljmp
push
out
cmp
inc
scas
xchg
sbbb
cmc
mov
dec
push
fucomip
fcmovnb
int
repnz
or
push
loope
test
push
jge
fildll
out
aam
mov
icebp
test
xorl
pop
fcmovb
sti
pop
adc
gs
inc
inc
cmpsb
jo
lcall
stos
int
xchg
test
push
sar
inc
movlhps
filds
addr16
add
sti
clc
dec
sahf
push
push
push
shrl
pop
mov
jo
sbb
or
mov
mov
sbb
mov
test
pop
lret
inc
pop
xor
xor
fiaddl
and
sbb
add
cmp
stos
sti
cmpsb
xor
mov
stos
outsl
push
mov
mov
or
or
mov
or
loope
pop
inc
jmp
nop
inc
and
imul
adc
xor
out
bound
push
jno
mov
cs
je
inc
mov
ret
movsb
mov
outsl
incl
mov
rcrb
jo
jecxz
bound
outsb
loopne
jbe
sar
psubsw
mov
rolb
or
sub
sbb
cltd
fildl
push
jmp
push
in
frstor
jg
cld
mov
add
decl
sub
mov
jb
outsl
aaa
sbb
mov
lods
jo
pop
xchg
jg
sub
rclb
jns,pn
popa
adc
dec
stc
je
fidivrs
jb
push
pop
fcomi
xchg
or
push
adc
ja
mov
pushf
lods
fbstp
xchg
in
roll
mov
cs
mov
movsl
push
mov
std
push
mov
mov
andl
addr16
lods
push
jo
xchg
loopne
push
push
in
fildll
adcb
adc
fs
loopne
fsub
jl
cmp
jne
cmp
xchg
subb
xchg
push
push
adc
adc
stos
xchg
lods
outsl
fdivrs
bound
sbb
add
inc
and
out
or
push
inc
push
movsb
jg
imul
cmp
js
ret
enter
xchg
sbb
ss
jnp
sub
mov
mov
xchg
inc
sarb
mov
js
in
jg
cli
std
mov
enter
bound
mov
fadd
dec
cmpb
adc
and
lods
lods
cs
adc
inc
mov
lods
insl
jmp
add
dec
add
inc
pop
inc
xlat
add
mov
inc
add
sbb
and
jmp
inc
or
fmuls
pop
clc
ret
mov
out
add
mov
sub
fistpll
inc
lock
insb
je
jno
ficoml
and
mov
dec
and
pop
add
sbb
pop
push
mov
sbb
mov
fs
jp
nop
xchg
popa
xor
mov
pop
stos
dec
pop
andb
push
add
mul
mov
sbb
fists
xor
mov
popa
outsb
dec
xorb
test
out
rolb
cli
mov
shll
sahf
subb
insb
mov
into
jae
mov
push
xor
clc
ja
xchg
enter
sbb
int
or
mov
aad
nop
testl
or
call
or
adc
push
xchg
cli
jg
outsl
xchg
ficoms
jbe
sub
shlb
mov
add
push
fisttps
andnps
add
jge
cmc
ljmp
fdivrs
fnsave
jecxz
mov
xor
jne
stos
into
fildll
push
arpl
loope
fisttpl
insb
jp
push
js
std
mov
popa
bound
jge
or
sub
les
icebp
outsl
xchg
jns
popf
pop
lret
jmp
mov
call
mov
or
sub
rcl
mov
xchg
jg
sahf
or
mov
jle
mov
add
inc
test
or
shrl
pop
inc
or
mov
idiv
sub
push
sbb
mov
pop
test
mov
xchg
call
sbb
mov
push
jmp
mov
lods
out
fs
loope
adc
adc
fdivs
js
push
dec
mov
ret
mov
jle
jge
or
mov
loop
jle
shrb
cmc
movb
leave
shr
es
jge
fiadds
or
inc
xor
jae
outsb
rorb
lea
cmp
push
mov
or
test
sbb
sbb
inc
jg
jns
pop
loop
cli
cmp
dec
push
je
stc
sbb
outsl
or
pop
push
pop
incl
cmpsb
gs
and
jo
les
pushf
loop
decb
and
cmc
push
int
dec
inc
orl
or
add
push
call
jg
aam
or
fidivl
inc
rol
or
loop
adc
mov
jmp
or
sub
jmp
adc
pop
in
ljmp
adc
ljmp
je
and
mov
mov
add
fistpll
fistps
add
push
out
dec
incl
rol
sbb
insb
fldt
js
sti
sub
inc
xor
test
hlt
les
xor
inc
inc
dec
nop
popa
adc
dec
xor
or
add
dec
insl
jns
dec
or
mov
mov
movsb
cmp
add
sbb
fwait
lock
xorb
outsl
mov
cmp
jge
pop
icebp
jg
cmpsb
inc
inc
repz
jp
dec
cmpsl
outsl
lods
insl
popa
mov
sti
push
sbb
push
cltd
dec
aam
push
cmpsb
pcmpeqb
aaa
jno
fistpl
incl
insb
add
inc
imul
jne
push
xchg
push
scas
adc
jmp
inc
cwtl
sub
daa
adc
xor
les
pop
subl
repnz
movsl
jne
aaa
decl
adc
and
push
and
jbe
xchg
or
adc
fs
mov
adc
and
decl
fstl
scas
inc
rorb
mov
xchg
and
and
lea
lret
rcl
mov
repz
push
ret
mov
test
pop
addr16
shlb
sbb
pushl
mov
xchg
fsubrs
xchg
std
cs
add
pop
jle
push
jo
flds
andb
sub
arpl
aad
xchg
cmp
loopne
jmp
jns
orl
lock
out
xor
inc
xchg
mov
negl
aam
stos
mov
or
ds
mov
push
aaa
sub
push
stc
and
mov
push
inc
bound
pop
and
mov
les
sub
test
icebp
mov
aad
movsl
mov
jl
add
mov
sbb
insl
cmp
mov
cltd
adc
insl
lahf
adc
shl
inc
jecxz
dec
int3
push
insl
xor
push
out
dec
cld
jg
push
stos
mov
cmp
leave
lcall
adc
mov
adc
pop
mov
fisubrl
inc
push
clc
xchg
dec
mov
fadds
push
imul
or
int
out
or
in
sbb
or
aad
dec
and
loopne
mov
xor
ret
jg
mov
stc
ret
ja
icebp
scas
mov
sbb
inc
and
push
pop
outsb
lock
dec
mov
push
call
adc
add
daa
mov
aaa
jle
pop
xchg
loop
das
shl
int3
add
cmp
dec
jno
loope
add
roll
enter
loop
repz
out
push
mov
je
push
stc
xchg
jae
adc
aam
inc
pop
fbstp
jle
inc
call
das
lahf
mov
pop
sti
or
notl
mov
shlb
and
mov
popf
dec
pop
test
jb
xor
iret
loope
sbb
jmp
in
add
mov
out
mov
test
pop
jmp
ljmp
mov
icebp
xor
lret
xor
or
xor
adcb
aad
aad
adc
out
fistps
mov
adc
movsb
add
rolb
pop
lea
cmp
stos
dec
fcomp
cmpsl
imul
mov
sub
aaa
cmp
icebp
cmp
xor
mov
xor
inc
xchg
fwait
clc
mov
cmp
adc
sbb
inc
loop
les
rorl
pop
inc
mov
push
into
and
mov
test
es
add
xor
xchg
or
std
cmp
pop
movsb
fmuls
and
mov
outsl
sbb
xchg
test
popa
adc
add
jg
es
jge
and
pop
add
mov
stos
mov
ret
leave
jnp
cmp
insb
push
pop
fwait
mov
enter
je
std
cmp
movsl
mov
rolb
push
movsl
xor
push
int
and
shll
mov
stos
rclb
inc
sub
divb
xor
popf
xor
push
daa
mov
mov
sbb
mov
fsts
cs
mov
lods
xorb
jnp
mov
nop
lds
test
push
inc
cmpsl
loop
sub
push
sbb
rolb
test
or
jge
cld
in
xchg
cli
push
lret
sub
push
outsl
daa
test
mov
insb
push
shlb
push
push
shl
inc
test
push
stos
in
jle
and
sub
mov
notl
test
sub
pop
call
mov
clc
andb
clc
test
sti
in
or
decl
loopne
inc
fistpl
add
int
into
out
movsl
outsl
insb
jmp
jbe
ficomps
pop
push
xchg
mov
test
loope
add
arpl
push
jnp
mov
add
test
mov
pushf
les
adc
pop
pop
mov
sbb
lret
das
fcompl
mov
mov
inc
add
inc
push
in
mov
cli
mov
sub
stc
dec
xor
or
rorb
pop
or
push
arpl
fsubl
dec
mov
mov
lret
std
lea
sbb
imul
fneni(8087
and
nopl
cmp
and
sub
icebp
adc
cmp
int3
sahf
or
cli
inc
cs
call
aam
std
aaa
inc
rorl
hlt
in
cmp
lods
pop
cs
test
xor
push
jp
ljmp
leave
dec
fdivrs
jo
pusha
fs
push
jmp
push
ds
test
pushf
repz
int3
addl
pop
and
or
int3
inc
iret
jne
subb
push
daa
cltd
mov
xchg
call
fwait
cmp
xchg
bound
sti
mov
dec
rorb
jmp
pop
addr16
dec
fdivl
dec
jg
jnp
adc
das
rcrl
test
pop
sub
xor
hlt
ljmp
push
inc
adc
vmovddup
hlt
adc
cmpl
pop
push
lds
push
hlt
das
hlt
push
jecxz
sub
into
cmp
in
mov
nop
xor
fistpll
mov
inc
inc
pop
clc
xchg
xchg
cmpsb
inc
mov
add
xor
cmpb
jp
ljmp
mov
adc
inc
lret
ficoms
or
jg
or
inc
xor
mov
repnz
push
flds
scas
sub
cli
inc
je
into
scas
pushl
or
lret
cld
sahf
lea
mov
adc
ljmp
pop
dec
imul
or
adc
mov
lea
dec
negb
mov
ja
xor
fsubr
adcl
dec
xor
and
sbb
cmp
sub
fisubs
jp
cli
test
sahf
out
sbb
stos
adc
loopne
jmp
jle
popa
mov
nop
ljmp
lcall
adc
fwait
push
stos
cmpb
pushf
enter
dec
lea
dec
mov
or
jmp
loopne
cs
lods
js
jg
cld
xchg
mov
xlat
popl
insl
add
fiadds
pop
mov
mov
push
jae
jne
cltd
mov
xorb
push
push
cmp
mov
imul
out
loop
das
mov
push
fcmovnb
and
cwtl
pop
push
xor
lea
push
mov
clc
call
addr16
dec
ficoml
js
xchg
dec
popf
mov
ficompl
cs
and
pop
sbbb
sub
xchg
lea
jmp
sub
cmp
inc
xchg
dec
aam
movsb
leave
and
jno
inc
push
test
mov
shlb
cmc
push
push
jmp
iret
lret
lret
pop
fdivs
ljmp
aaa
and
xchg
pop
mov
imul
dec
dec
arpl
out
sbb
stos
xchg
clc
movsl
mov
sub
rcll
pop
mov
movaps
xor
fs
test
incl
aaa
test
xchg
ds
arpl
and
adc
add
cmp
or
das
pop
pop
call
insb
add
sar
pop
stos
add
xor
in
mov
faddl
xchg
xor
xchg
inc
rcrw
add
dec
pop
rol
call
sbb
jl
push
mov
pop
sarb
pop
mov
xchg
jns
dec
ds
mov
mov
jmp
ss
jp
add
aas
je
push
out
inc
push
pop
jge
cmc
ret
out
in
or
push
aaa
add
repnz
call
cmp
in
sbb
lods
sub
sbb
incb
add
push
lds
xor
adc
popa
test
incb
mov
fsts
fistl
mov
mov
outsb
xchg
jle
pop
mov
xchg
cmpsl
pop
and
push
repz
into
or
xor
xor
dec
or
push
dec
add
push
fistpll
insb
mov
enter
dec
std
inc
sbb
call
jbe
or
sub
sub
mov
mov
arpl
mov
mov
and
mov
pop
mov
movsl
push
jb
js
sti
fmuls
roll
mov
outsl
fistpll
pusha
rorl
out
sbb
push
jg
out
cli
sarb
fiadds
inc
mov
dec
push
sahf
sbb
shrd
sbb
call
pop
jns
adc
sbb
and
pop
inc
sub
mov
les
insl
push
lea
inc
jbe
cmpsb
addb
sbb
or
push
mov
js
adc
aad
into
fldt
cwtl
xchg
shlb
mov
mov
mov
stos
fs
rcrl
fildll
pop
mov
cs
es
daa
mov
jl
dec
nop
cmp
and
shrb
rcrl
cli
sub
xchg
mov
jae
pop
loopne
mov
sub
test
xchg
sub
adc
push
clc
lods
sbb
addb
mov
sub
jns
dec
pop
out
or
and
lcall
add
or
js
xlat
jb
add
and
push
mov
push
fnstenv
rcll
and
int3
push
and
aaa
jno
and
fisttps
adc
add
jge
dec
xchg
pop
xorb
mov
cmpsl
insl
push
push
push
or
stos
push
les
shl
cmp
xchg
mov
mov
mov
insb
mov
loop
add
repz
lret
cmp
jmp
cmp
mov
sbb
cs
sub
fs
xor
mov
pop
push
jno
mov
jmp
inc
xchg
xor
mov
mov
sbb
add
scas
inc
push
adc
std
enter
cmpb
cmpsb
xchg
fstp
icebp
mov
mov
shll
loopne
add
cmp
outsl
aaa
int
jle
jmp
mov
push
int
inc
push
push
mov
mov
inc
mov
sbb
incl
xor
fistps
call
add
mov
or
subb
pop
sbb
das
sbb
mov
add
aam
je,pn
ja
sub
clc
add
mov
jae
sbb
bound
ret
xchg
pop
outsb
mov
ja
sub
mov
push
pop
int
jmp
cwtl
mov
mov
daa
pop
xor
jg
movb
lods
push
mov
add
aas
jo
mov
in
or
mov
lock
pop
clc
sub
das
js
dec
popa
std
cmp
std
repz
lods
call
jmp
cmc
cmpsb
mov
jg
pushf
and
or
xor
scas
mov
inc
jl
mov
in
sbb
out
push
lcall
icebp
cmp
sub
jg
in
xchg
mov
cs
mov
test
repnz
xlat
push
inc
jno
xor
in
fbstp
out
sbb
popf
stos
cmc
jl
loope
xor
dec
mov
jno
in
daa
push
call
imul
into
cld
outsl
mov
inc
ret
leave
ffree
imul
cs
sbb
xchg
aaa
adc
out
xchg
xor
lods
jnp
lret
jb
into
push
pop
lret
fildll
out
rorb
pop
xchg
decl
call
js
mov
lret
arpl
jae
test
pop
lcall
xor
adc
mov
mov
mov
pop
call
faddl
test
sub
sbb
jns
pushf
mov
inc
pop
out
je
jle
jecxz
je
mov
inc
mov
cmp
push
cld
or
xor
push
cmp
add
insl
rolb
mov
rcll
hlt
test
iret
add
rep
call
lods
mov
movsl
ja
mov
aaa
jns
into
aas
fmull
pop
mov
push
sub
inc
inc
sub
gs
add
test
sub
inc
adc
lret
dec
jnp
pop
ret
inc
and
jecxz
xor
scas
lret
mov
mov
sti
inc
push
out
data16
xor
xor
cmpl
push
dec
dec
push
xor
and
scas
enter
rorl
push
cmp
push
movl
rclb
jnp
xchg
lds
sar
pop
data16
mov
daa
sahf
lcall
dec
aad
repnz
adc
outsb
sbb
icebp
repnz
and
test
fidivrl
mov
scas
sbb
or
sbb
adc
fadd
in
fcoml
test
and
push
js
xchg
mov
push
popf
ja
jnp
and
popa
xor
pop
push
inc
xlat
adc
mov
sbb
rclb
clc
mov
into
ret
fstpt
out
gs
inc
pushf
and
fbld
decb
or
jecxz
sbb
push
shlb
cmpsl
sahf
pop
add
mov
fidivrl
adc
sahf
mov
push
mov
stos
popa
mov
dec
push
jecxz
mov
jle
mov
movsl
dec
in
push
add
pop
adc
and
out
sbb
sub
xor
mov
call
push
mov
and
pop
push
cli
push
lods
adc
mov
mov
and
fisttpll
stos
or
and
inc
in
sbb
sti
push
imul
xchg
add
ljmp
outsl
dec
test
push
mov
repz
mov
xchg
nop
and
xchg
int3
push
fadd
mov
and
fisubrl
mov
nop
mov
inc
mov
sbb
in
push
cld
stos
push
call
cwtl
out
xor
les
adc
sub
jbe
jp
jg
ljmp
and
dec
inc
nop
gs
insl
push
jecxz
jp
pop
imul
shrb
movsl
mov
mov
mov
int3
cmp
inc
pop
clc
aaa
iret
iret
mov
leave
cmp
mov
ret
sti
filds
mov
dec
jns
rcll
cli
adc
mov
xor
and
ja
jb
aas
and
mov
call
pop
mov
xor
mov
xor
adc
fbld
fists
jne
cs
mov
popf
jo
popf
sarl
gs
rolb
int3
push
and
insl
das
jl
lds
and
pop
cmp
add
inc
cmpsl
ret
cmpsl
pop
rolb
xchg
js
rolb
dec
dec
addr16
mov
dec
mov
sbb
jmp
inc
aam
sbb
fnstenv
imulb
cmpb
fld
jp
push
lea
jg
mov
jg
test
ja
mov
jns
aas
icebp
adc
mov
add
enter
lds
inc
and
int3
or
test
outsl
insb
xchg
cmc
pop
fwait
sbb
add
mov
andb
in
jb
imul
add
fistl
sahf
xchg
inc
rcrl
mov
jge
cmp
test
repnz
cld
fistl
or
dec
pusha
je
fiaddl
es
aaa
sar
xor
adc
lret
or
lods
and
test
push
les
lret
jmp
pop
and
mov
xchg
fcompl
inc
sub
lahf
mov
div
mov
mov
inc
xor
ds
jns
lcall
dec
ficomps
aaa
lea
leave
sub
out
pop
inc
out
push
mov
data16
rorl
inc
inc
repnz
mov
enter
stc
mov
and
add
mov
cli
outsl
ficoml
xchg
add
or
push
test
xchg
jmp
pusha
pop
mov
movsb
out
mov
xchg
mov
dec
clc
sbb
jg
adc
notb
inc
or
lret
ljmp
faddl
adc
rolb
out
test
pop
ss
sarb
cli
aam
lds
adcb
mov
jbe
add
mov
out
dec
stos
outsl
daa
or
inc
loope
xchg
aad
shrl
std
sbb
dec
pop
gs
js
inc
gs
stos
push
pop
mov
or
shlb
inc
pop
in
outsl
lret
and
shr
sub
jb
pop
mov
mov
incl
dec
xchg
jnp
repz
mov
lock
mov
jb
adc
jne
jno
ss
mov
mov
add
or
or
mov
xor
or
sahf
int
push
or
mov
lahf
cmp
xor
pop
fdivrp
fcomip
nop
adc
pop
loopne
bound
push
add
mov
jge
shlb
sub
pop
inc
pop
mov
sbb
test
sub
sub
pop
or
jle
mov
xlat
pop
sbb
adc
xlat
stos
jnp
in
mov
stc
repnz
mov
rolb
daa
pop
mov
out
aad
lods
sbb
sub
out
incb
mov
push
aaa
or
leave
pop
test
dec
push
sub
pop
adcb
loope
pop
fcmovnu
pop
in
mov
inc
stos
xorl
or
rclb
sbb
pop
dec
lods
mov
pop
mov
dec
lret
mov
mov
add
dec
nop
sbb
sub
dec
dec
stos
mov
jecxz
test
mov
sub
mov
clc
and
es
in
mov
enter
outsb
out
and
sbb
ss
pusha
out
or
inc
iret
out
std
mov
jo
dec
std
pop
cmpsl
or
data16
clc
pop
negl
out
sbb
push
and
dec
dec
jl
adc
movsl
and
lcall
mov
adc
insl
fidivs
add
or
mov
roll
xchg
mov
in
xor
add
or
notb
out
push
push
pop
sti
mov
pop
repz
jne
int3
mov
push
sbb
sbb
das
fs
add
mov
push
mov
insb
and
xor
rclb
aad
shrb
sti
decl
inc
sbb
xchg
call
inc
icebp
pop
loope
int3
mov
lods
push
and
pop
pusha
loopne
inc
out
mov
sub
call
xor
out
sbb
xchg
je
movsl
mov
iret
out
jp
fists
stos
and
enter
mov
or
fidivrl
inc
sub
mov
icebp
pushl
mov
or
cmp
adc
xor
movsl
adc
push
aad
and
int
pop
les
xchg
mov
or
dec
jns
add
and
cmp
fistpl
push
rolb
mov
sti
jl
test
xchg
pop
fadd
incl
inc
stos
jmp
and
pop
stos
xchg
testl
jg
pop
jae
jmp
push
daa
sub
pop
lock
dec
inc
clc
mov
pop
arpl
sub
in
cmp
mov
push
sub
or
addb
dec
fdivr
xor
insb
pop
mov
fcomps
mov
pop
push
mov
incl
or
mov
ret
rclb
fbld
outsb
xor
mov
outsl
mov
xor
sbb
mov
inc
pop
mov
lret
out
daa
mov
imul
add
or
aam
sub
cld
cld
mov
fnsave
stc
subl
mov
push
pusha
pop
pushl
dec
ja
dec
outsb
je
pusha
inc
lds
pop
mov
xor
rcr
ljmp
lock
adc
or
mov
shl
pop
pusha
push
in
js
out
or
push
mov
cmp
frstpm(287
mov
mov
or
push
push
mov
notb
jl
push
inc
xlat
mov
mov
pop
test
pushf
jmp
adc
sub
enter
adc
sub
test
mov
mov
in
cmpsl
mov
out
adc
roll
jmp
stos
xchg
dec
dec
sub
mov
mov
in
adc
in
add
sbb
sbb
xchg
ljmp
adc
xchg
add
cmp
clc
mov
shll
test
int3
outsb
mov
in
cltd
sub
mov
or
sub
pop
or
pop
insl
mov
xchg
out
xchg
xor
mov
or
mov
sahf
inc
test
mov
in
pop
sti
fldl
cmp
inc
scas
bound
dec
cli
rclb
clc
lea
leave
ss
js
aas
push
xchg
pop
sub
inc
sub
aaa
jne
pop
insl
shl
or
dec
in
mov
movsl
fidivrl
clc
mov
rcrb
mov
sbb
mov
lcall
mov
cmp
daa
xor
int
jl
add
sti
and
xchg
add
pusha
mov
jbe
xor
out
sub
fwait
out
sbb
inc
push
jo
repnz
daa
mov
movsl
shrb
xchg
sub
jae
mov
loopne
jge
mul
lds
fldt
xor
repnz
mov
sti
mov
add
call
or
dec
mov
mov
add
or
mov
imul
add
test
adc
test
mov
aad
inc
xchg
mov
jo
movsb
mov
add
inc
ja
std
outsl
ret
adc
cmc
cld
enter
das
sbb
xlat
pop
inc
and
mov
mov
jg
test
test
rcrb
test
mov
call
rol
ret
mov
jmp
addr16
xor
mov
mov
dec
mov
xorl
into
pop
popf
stos
adc
idivb
jo
adc
mov
mov
adc
mov
test
mov
mov
out
push
dec
sahf
jne
xchg
loope
cli
lods
jl
dec
negl
test
into
dec
outsl
xor
mov
jge
jg
dec
popl
adc
cmp
mov
xorb
lds
mov
mov
pop
popf
or
out
sub
in
and
xchg
clc
fistl
rep
test
subb
cld
pop
cmpl
lahf
popf
xchg
rcl
xchg
fadds
out
pop
dec
in
or
sub
inc
rorl
jg
aas
inc
jo
pop
jg
xorl
cmp
cmpb
or
xor
sarl
je
jg
shlb
xchg
lods
leave
stc
push
nop
lods
inc
ljmp
jecxz
leave
cltd
pop
stos
pop
fidivs
jp
fldenv
lea
push
inc
enter
xchg
jge
mov
test
aaa
push
icebp
inc
jge
stc
cld
cmpsl
mov
pop
hlt
daa
lock
lahf
sbb
std
lock
ret
lret
lock
adc
test
aaa
fisubrs
xor
test
dec
and
or
in
pop
xor
in
jno
mov
jne
mov
jmp
mov
pop
movsb
insb
shll
dec
lea
and
mov
jmp
loopne
add
add
pop
or
pop
outsb
insl
loope
pop
fwait
repz
lods
and
mov
push
xor
adc
or
arpl
mov
das
in
lret
inc
jne
scas
int3
inc
add
jnp
jne
push
imull
shrl
xchg
xlat
mov
jp
les
cld
jo
popf
inc
ret
test
push
and
mov
add
mov
test
inc
add
mov
addb
test
dec
add
and
fistpll
adc
mov
inc
nop
and
adc
inc
xchg
clc
and
jg
fcmovnu
inc
sub
adc
dec
inc
pop
inc
inc
nop
inc
nop
or
sbb
mov
mov
or
adc
ja
add
test
dec
mov
and
fcmovu
mov
pop
and
add
and
add
or
out
outsb
cmp
andb
and
dec
jno
inc
js
mov
andb
and
sub
insb
dec
imul
mov
in
inc
adc
or
insl
imul
pop
push
dec
jbe
dec
insl
lods
mov
xchg
andb
xchg
or
test
and
les
lret
int
fisttpll
adc
nop
popa
and
inc
mov
inc
add
mov
dec
add
mov
imul
and
insl
jae
imul
push
add
and
in
inc
imul
and
xchg
int
mov
scas
adc
test
push
add
test
mov
out
mov
mov
sub
pusha
iret
inc
pop
rcr
push
clc
adc
in
inc
inc
or
insl
pop
inc
add
xor
or
add
add
inc
inc
and
adc
pop
add
mov
sbb
push
negb
or
sub
mov
xor
mov
mov
sbb
and
pop
mov
out
int3
or
sti
inc
scas
cmp
nop
or
insl
cmovo
fcoml
ret
inc
pop
cs
push
test
mov
cmpsl
test
xchg
jl
insl
pop
imul
flds
xor
adc
and
pop
mov
jae
aaa
lods
or
mov
pop
jg
xor
xlat
rcrb
adc
jb
dec
popf
push
jbe
xchg
lods
adc
pop
cmpsl
sbb
inc
sub
mov
pop
imul
push
inc
shll
mov
pop
fisttpl
test
ss
test
fs
test
add
dec
xchg
movsb
jbe
mov
stos
adc
cs
fisttpl
push
dec
dec
pushf
and
push
addr16
pop
jae
cmpsb
and
data16
xchg
test
jbe
dec
cmp
sbb
leave
pop
sbb
pushf
mov
test
jo
loop
scas
dec
andl
inc
inc
loopne
inc
imul
xchg
jo
nop
inc
aam
add
xchg
sbb
and
adc
and
insb
cmp
sbb
adc
insl
jae
and
jnp
inc
adc
popf
test
sbb
jae
fwait
inc
subb
mov
jae
sub
insl
imul
cmp
js
cmp
push
xor
cmp
in
pop
stos
subb
and
lcall
jnp
int
pop
jmp
or
int
insl
add
mov
call
stos
or
lods
loope
outsb
push
xchg
mov
xchg
leave
repz
xchg
stc
push
adc
mov
hlt
inc
daa
push
cmp
mov
pop
or
push
insb
lods
rorb
add
push
or
adc
lcall
inc
xchg
and
add
sbb
out
sub
or
andl
sub
push
rclb
lea
sub
or
popa
inc
adc
or
mov
or
fwait
add
inc
mov
or
imul
stos
mov
adc
lods
stos
jp
add
nop
adc
nop
ss
pop
aad
add
inc
sbb
or
adc
xchg
and
inc
inc
adcb
fistpl
bound
and
addb
mov
mov
or
adc
add
pop
imul
inc
sbb
subb
test
mov
add
pop
push
imul
mov
mov
inc
push
cmpsl
dec
mov
inc
pop
imul
inc
mov
jne
roll
xchg
and
aaa
ret
add
xorl
inc
inc
pop
aad
inc
add
or
mov
fiadds
mov
and
sbb
sub
dec
add
addb
imul
cwtl
cltd
or
popf
popa
imul
add
orb
or
pop
js
outsb
add
aaa
cmc
out
mov
clc
or
pop
or
mov
daa
sub
dec
cmp
insl
imul
or
outsb
lods
mov
pop
inc
xchg
scas
adc
inc
inc
mov
fcmovbe
or
add
mov
lods
test
js
dec
dec
and
pop
mov
and
inc
and
scas
add
stos
add
add
inc
pop
add
adcb
or
and
adc
jl
sub
subl
cmp
cmp
xor
mov
or
lods
sub
ja
or
lods
loope
lcall
sbb
insb
icebp
mov
mov
mov
orb
fwait
dec
or
add
mov
int
rcl
mov
pop
adc
inc
add
int
fcoms
sub
xor
loop
decl
jmp
sub
insb
xchg
mov
pop
cli
loope
mov
sbb
dec
sbb
xchg
push
xor
fistpl
sbb
filds
xor
lods
popa
dec
sub
adc
lods
mov
or
ss
dec
sub
xor
inc
push
pop
or
test
and
dec
adc
inc
cmc
stos
gs
cli
mov
cmp
outsb
pushf
jae
xor
push
test
insb
dec
inc
xor
adc
popf
sub
sbb
sub
push
ss
imul
sbb
lods
adc
dec
jge
imul
pop
test
xchg
insl
inc
add
jne
pop
imul
rol
test
sbb
push
adc
insl
out
adc
sub
lods
mov
addb
lods
adc
adc
add
xchg
ds
pop
fisttpl
add
push
sbb
jge
stos
inc
mov
sbb
imul
pop
dec
iret
test
mov
push
xchg
add
push
or
inc
sbb
lcall
imul
mov
mov
mov
int
or
gs
jge
mov
nop
adc
mov
inc
dec
popl
mov
mov
adc
orl
dec
cmpsl
out
mov
imulb
mov
imul
stos
mov
mov
pop
xor
mov
add
sub
jl
dec
pusha
imul
cmp
or
xchg
push
push
scas
dec
out
test
cs
and
sbb
lods
cld
mov
pop
xor
xor
pop
int
mov
pusha
sbb
fildll
data16
pop
and
push
xlat
dec
mov
xchg
jne
push
data16
pushf
sub
xchg
addr16
test
mov
cs
add
jmp
imul
scas
inc
push
add
push
push
inc
jae
add
jnp
int
dec
cs
inc
flds
into
rcrl
pusha
enter
inc
pop
jo
loopne
flds
shl
xchg
mov
xchg
arpl
jnp
test
push
in
les
out
aad
hlt
test
andl
and
sbb
xor
scas
popf
mov
imul
loopne
add
pop
dec
push
subl
js
cltd
add
adc
and
jns
adc
pop
lods
sbb
cmp
or
mov
mov
js
fstl
cs
adc
in
loop
imul
dec
ja
xlat
xchg
lcall
hlt
mov
add
inc
shll
xchg
bound
jmp
xorl
inc
mov
adc
push
adc
aad
scas
pusha
test
pop
ficompl
pop
sahf
or
jae
mov
push
mov
pop
call
imul
test
outsl
je
or
and
add
sbb
test
cmp
xchg
mov
push
sbb
hlt
inc
sub
cs
arpl
out
push
jecxz
jb
pop
nop
pop
inc
push
jae
mov
test
or
pop
out
xor
add
add
arpl
mov
rorl
push
xchg
cmp
fwait
lret
inc
push
jne
data16
adc
or
dec
cmp
inc
out
lcall
and
mov
cmp
scas
mov
jge
dec
addl
pusha
sub
mov
sbb
sahf
cmp
dec
jnp
das
add
roll
xorb
shll
cmp
push
pop
adc
loopne
inc
in
xchg
xchg
xchg
pop
ds
pop
sbb
invd
call
pop
xor
add
dec
fwait
addl
mov
adc
in
xor
pusha
jb
mov
or
cmpb
xchg
lea
std
and
lods
mov
mov
jnp
sub
xor
in
push
inc
adc
push
sub
jns
xor
sub
jae
pusha
inc
or
insb
add
inc
sub
xorb
push
push
rcl
sub
mov
dec
lods
xchg
test
insb
inc
imul
mov
mov
sub
xchg
adc
dec
and
push
lds
imul
adc
mov
js
movsb
stos
cwtl
sub
inc
ret
cltd
adc
add
jge
inc
mov
or
ret
outsl
add
xchg
mov
sbb
jo
pushf
mov
leave
in
sbb
cmpl
xor
sti
ret
sbb
rcll
mov
jae
cwtl
test
scas
mov
xchg
stos
cmp
shrl
ljmp
sbb
pop
pop
daa
or
test
in
rclb
lock
xor
xchg
inc
jno
xchg
jb
sub
sbb
mov
sti
sbb
out
in
lods
inc
sbb
call
stc
decl
add
add
insb
inc
imul
outsl
arpl
imul
inc
gs
outsl
jmp
insl
and
dec
popa
insl
gs
adc
jb
outsb
je
push
jb
dec
adc
inc
or
push
je
or
inc
push
gs
outsb
jbe
jb
outsb
insl
es
adc
addr16
ja
jae
inc
outsb
fs
insb
outsl
jae
inc
outsl
jb
popa
pop
gs
or
jae
popa
addr16
arpl
andb
lods
cmp
arpl
je
inc
jb
insl
das
cmp
dec
inc
sub
mov
mov
fisubs
jno
push
jns
sbb
imul
je
jb
jne
dec
outsb
outsw
insl
imul
jnp
mov
jo
imul
xor
sub
sbb
in
aaa
sti
imul
inc
insb
lds
in
lret
ds
cmp
jb
mov
jae
sbb
out
or
sbb
mov
loope
jbe
test
sbb
popa
arpl
fimull
push
jb
sbb
fistpl
vmwrite
sbb
or
push
pusha
inc
pop
imul
arpl
dec
and
in
jbe
pop
sub
jne
jns
add
pop
xlat
mov
xorl
bound
sub
inc
sub
fmuls
insl
inc
dec
sbb
inc
out
or
inc
jne
add
jne
popaw
push
and
cmp
out
inc
mov
imul
ret
cmp
test
lret
push
popa
popa
bound
lcall
lahf
inc
cmp
nop
outsl
into
bound
xor
movsb
dec
dec
adc
mov
iret
bound
sbb
fs
psubw
dec
add
add
imulb
add
adc
push
and
adc
jbe
aaa
xchg
sbb
inc
or
pop
add
or
jg
ret
cmp
je
mov
add
xor
jnp
cmp
pop
push
add
pusha
dec
call
jo
xor
mov
mov
mov
es
je
js
fildl
add
shr
ret
inc
cs
popa
or
sub
sti
sub
or
dec
inc
or
rcrb
test
jb
cmp
mov
mov
mov
inc
daa
insb
xchg
or
sbb
adc
mov
in
daa
jo
sub
daa
nop
std
push
shlb
push
sbb
popa
add
add
pop
sub
add
incl
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
or
add
xor
add
nop
add
adcb
add
rolb
add
adc
add
add
pop
add
add
cmp
add
mov
add
add
add
addb
add
sbb
add
inc
add
or
add
push
add
add
add
add
roll
add
add
add
add
add
roll
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
roll
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
addb
add
or
add
add
add
faddl
add
push
add
add
add
js
add
mov
add
add
add
orb
add
lock
sbbb
add
sbb
add
add
add
or
add
add
and
add
add
add
add
add
add
loopne
add
add
add
add
add
loopne
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
test
and
add
dec
jae
add
add
add
add
mov
nop
and
add
pop
jae
add
add
dec
add
add
add
and
add
push
or
nop
or
add
jo
add
adc
adc
and
add
js
add
sub
add
mov
add
add
add
add
add
add
add
lods
mov
pop
add
sub
sbb
in
aas
jle
out
ja
add
daa
cli
add
out
jg
scas
sbb
lods
std
fwait
add
std
sti
add
lods
mov
add
cmc
fiaddl
in
jge
add
mov
sbb
lods
movsl
jg
mov
das
pop
add
movsl
sbb
out
jge
add
mov
pop
add
out
add
sub
push
add
out
add
xor
push
add
idivl
add
gs
add
lods
pop
add
idivl
add
lcall
add
insl
jg
mov
insl
fiaddl
mov
cmpsl
jp
std
insl
fiaddl
in
jge
add
mov
add
ja
add
daa
cli
add
mov
add
and
cli
add
addr16
mov
out
ds
std
mov
add
sbb
cld
lods
sti
add
addr16
lcall
add
insl
fiaddl
lods
out
lcall
xor
jnp
out
das
mov
add
cmc
fiadds
lods
daa
pop
add
mov
add
sub
push
add
jle
cld
jge
add
mov
fildl
cld
jne
add
cmp
lahf
add
mov
jnp
in
mov
push
add
sub
fwait
add
cmp
sbb
fildl
std
mov
incb
in
jg
add
cmp
aas
add
outsl
lahf
add
cmp
incl
out
cmp
mov
add
addr16
add
ja
add
movsl
sahf
add
aas
push
add
lods
filds
out
mov
incb
std
out
add
aas
mov
add
lcall
mov
add
out
add
lods
incl
out
out
add
negl
add
insl
filds
mov
and
add
daa
fwait
add
insl
fildl
mov
movsl
mov
add
aaa
pop
add
scas
jg
lods
cmp
jg
mov
in
add
gs
cmp
jnp
lods
cmc
jp
mov
std
fiadds
mov
mov
add
out
add
cmpsl
cmp
out
fwait
add
sub
pop
add
pop
add
insl
pop
add
cmpsl
jnp
scas
mov
pop
add
daa
jnp
std
aaa
jp
ljmp
jnp
mov
sub
cmp
scas
addr16
out
incb
cld
out
jnp
scas
cmc
jnp
mov
mov
add
movsl
cli
add
outsl
jg
mov
addr16
mov
mov
lcall
cmpsl
sti
add
mov
add
mov
lahf
add
aas
pop
add
cmp
incl
mov
cmc
aas
add
pop
add
in
add
in
add
out
add
mov
mov
add
cmpsl
fiadds
mov
aas
incb
lods
daa
mov
add
cmpsl
pop
add
cmc
sahf
add
std
mov
add
das
pop
add
aas
jp
mov
jne
add
aaa
lcall
sub
lahf
add
in
add
in
add
in
sbb
mov
cmpsl
incb
mov
mov
add
aaa
fildl
out
pop
add
ja
add
in
jnp
out
mov
pop
add
in
add
outsl
cmp
stc
ljmp
cmp
push
mov
jne
mov
rorb
test
mov
in
mov
rorb
sbb
mov
or
mov
out
lods
cmp
xor
xor
add
xor
sub
dec
fsts
inc
ss
sbb
xchg
xchg
mov
jbe
sbb
ja
fnstenv
xlat
test
adc
jns
jno
popf
jo
dec
mov
insl
fistps
lcall
iret
jle
cmp
pusha
and
add
in
sub
inc
jl
sbb
jbe
sub
shlb
loope
xchg
and
jo
rcll
and
insb
cltd
cwtl
std
dec
or
mov
dec
test
inc
out
pop
mov
lret
cmpsl
out
jmp
xchg
mov
mov
add
test
xchg
pop
push
loopne
xchg
cltd
mov
adc
push
aaa
mov
repnz
sbb
cmpsl
mov
jno
jo
adc
adc
in
dec
aaa
sub
pop
fwait
in
stc
cmpsb
fxch
lcall
shl
pop
js
sub
push
mov
testb
pop
sarb
leave
add
les
sbbl
jnp
lahf
xchg
xchg
les
inc
push
xchg
cltd
popf
cwtl
mov
add
outsl
sti
fstps
fdivs
xlat
icebp
in
dec
decb
inc
rcl
mov
mov
add
and
mov
add
add
push
inc
adc
mov
mov
sbb
div
ds
loop
repnz
xchg
xlat
lock
and
arpl
dec
push
aad
xlat
xor
push
dec
faddl
lahf
insl
lahf
jns
jecxz
dec
and
outsl
aam
xchg
out
popf
mov
jmp
sti
dec
loop
les
cmp
mov
inc
or
ja
adc
out
ljmp
out
cmc
mov
xor
iret
hlt
adc
divb
cmp
fdivl
mov
cmp
popa
daa
or
jae
xor
push
push
sbb
xor
jg
in
dec
popf
sbb
hlt
push
cwtl
into
xor
xor
xor
int3
ss
sbb
pop
repnz
add
pop
icebp
std
pushf
cmp
ret
jmp
dec
imul
loop
mov
fsubs
mov
jg
mov
rorl
fstl
test
out
jne
sub
jle
jns
mov
test
test
adc
and
out
dec
push
mov
out
sbb
mov
add
cld
lods
gs
sbb
jecxz
sbb
repz
adc
push
xor
dec
or
dec
sub
movsl
jmp
pushf
je
cmc
clc
mov
notb
sar
lea
sahf
fwait
scas
nop
out
mov
cmp
and
xchg
fidivrl
jns
in
mov
hlt
cs
mov
jae
mov
or
mov
loopne,pn
xchg
add
arpl
and
xchg
sub
pop
in
dec
pop
insl
out
xchg
xchg
ljmp
or
insl
sub
jns
nop
loop
xchg
mov
mov
rcr
movups
push
jo
cmpsb
addb
dec
lods
sbb
scas
pushf
pop
outsb
jbe
notl
pop
dec
pop
stc
inc
xchg
jge
and
mov
fbstp
filds
inc
lahf
js
mov
pop
rclb
push
xchg
sbb
clc
test
sub
popf
nop
pop
sub
pop
ret
enter
mov
dec
shrl
mov
fistl
mov
je
icebp
mov
xlat
jo
inc
jmp
jle
cmp
fdivrl
push
enter
arpl
inc
xor
inc
out
fisubs
imul
cltd
xlat
adc
mov
int3
popa
pop
ds
pop
pushf
pushf
cltd
fldcw
scas
pop
lods
mov
lret
cld
pop
lcall
add
movsl
aad
imul
popa
cmp
in
into
cmp
int3
mov
inc
imul
lock
inc
dec
cli
and
push
pop
cmpsl
xchg
sbb
push
js
jle
lcall
sbb
cmovbe
popl
scas
cmpsl
lea
push
shrl
xchg
in
cltd
xor
inc
pop
cmpsl
xchg
cmp
adc
push
iret
and
icebp
xchg
setae
mov
jo
push
aaa
addr16
push
adc
mov
sub
imul
xor
mov
xchg
adc
mov
mov
test
inc
xchg
cld
repnz
inc
add
les
xor
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
jo
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
jne
outsb
add
add
add
add
add
outsb
add
add
add
sbb
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
popa
add
imul
add
insb
add
popa
add
add
push
add
and
inc
add
outsl
add
add
add
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
cmp
add
add
add
and
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
popa
add
jae
and
push
add
outsb
add
arpl
and
inc
add
insb
add
add
add
add
insb
add
and
push
add
imul
and
push
add
add
je
add
add
bound
pop
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
dec
add
jne
outsb
add
push
add
add
add
arpl
add
add
imul
jae
and
xor
xor
xor
xor
sub
add
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
push
add
add
add
and
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
jns
push
add
add
add
jo
jae
and
dec
add
jb
jae
add
and
dec
add
add
add
and
push
add
jns
and
pop
add
add
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
cmp
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
jg
add
add
bound
add
add
and
or
inc
or
add
add
addb
add
and
and
add
sbb
adc
addb
adc
or
mov
add
add
loopne
add
add
shl
add
loop
add
lock
add
loopne
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
