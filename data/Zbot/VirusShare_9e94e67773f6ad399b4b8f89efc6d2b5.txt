add
scas
adc
add
shr
add
adc
shr
add
mov
inc
add
add
fnop
jmp
inc
add
add
fnop
jmp
pop
add
add
fnop
jmp
add
add
fnop
jmp
repz
add
fnop
jmp
mov
add
std
fnop
jmp
flds
add
mov
and
add
xchg
shr
add
int
shr
add
sub
shr
add
adc
shr
add
mov
shr
add
ret
jmp
or
add
mov
shr
add
jo
shr
add
and
test
mov
inc
push
push
push
add
call
nop
jmp
pushl
ret
add
pusha
push
push
push
mov
inc
push
add
call
nop
jmp
pushl
ret
dec
mov
popa
mov
fnop
jmp
and
add
mov
fnop
jmp
jno
add
fwait
mov
fnop
jmp
fiadds
add
and
and
mov
add
sub
mov
add
fnop
jmp
data16
add
fnop
jmp
sahf
add
add
fnop
jmp
sti
add
add
mov
fnop
jmp
add
add
fnop
jmp
or
add
cs
jmp
flds
add
inc
fnop
jmp
incb
add
dec
fnop
jmp
cmpsb
add
add
fnop
jmp
sbb
add
mov
shr
add
sbb
add
add
fnop
jmp
pop
add
add
jmp
ret
add
add
fnop
jmp
add
add
fnop
jmp
cmp
add
psubusw
jmp
int3
add
add
shr
add
test
shr
add
sub
shr
add
pop
sub
fnop
jmp
sbb
add
adc
add
add
mov
pop
mov
dec
fnop
jmp
mov
add
ret
fnop
jmp
jge
add
lcall
pop
add
add
mov
add
fnop
jmp
mov
add
jns
fnop
jmp
dec
add
add
push
add
add
fnop
jmp
je
add
xchg
fnop
jmp
dec
add
add
fnop
jmp
sahf
add
add
shr
add
xchg
fnop
jmp
sahf
add
add
shr
add
aam
shr
add
add
shr
add
jp
shr
add
and
shr
add
clc
fnop
jmp
sbb
add
out
shr
add
sbb
shr
add
add
shr
add
fnop
jmp
push
add
xchg
fnop
jmp
xchg
add
add
add
roll
sbb
pop
add
add
dec
fnop
jmp
inc
add
add
mov
fnop
jmp
add
add
jmp
ret
add
add
into
mov
fnop
jmp
dec
add
add
jmp
mov
fnop
jmp
add
add
mov
fnop
jmp
sbb
add
xchg
add
pop
add
fnop
jmp
xchg
add
add
test
fnop
jmp
repnz
add
fnop
jmp
mov
add
dec
je
fnop
jmp
mov
mov
fnop
jmp
roll
add
fnop
jmp
adc
fnop
jmp
rolb
add
cmp
cmc
fnop
jmp
add
add
mov
fnop
jmp
movb
add
xor
fnop
jmp
clc
add
add
mov
fnop
jmp
dec
add
add
neg
shr
add
lods
mov
fnop
jmp
sub
add
mov
jmp
out
add
add
add
inc
fnop
jmp
or
add
xchg
fnop
jmp
faddl
add
inc
fnop
jmp
addl
fnop
jmp
pop
add
add
fnop
jmp
sbb
add
test
fnop
jmp
push
add
add
xchg
add
add
fnop
jmp
loop
add
and
shr
add
data16
jmp
out
add
add
rolb
add
loop
add
pop
fnop
jmp
dec
add
add
fnop
jmp
add
add
fnop
jmp
mov
jmp
fnop
jmp
dec
add
add
fnop
jmp
roll
add
fcmovu
shr
add
fnop
jmp
insb
add
add
fnop
jmp
stc
add
add
shr
add
aad
fnop
jmp
lods
add
add
fnop
jmp
cwtl
add
add
fnop
jmp
cltd
add
add
shr
add
jbe
shr
add
mov
shr
add
and
shr
add
and
shr
add
ja
shr
add
fs
jmp
sti
add
add
fnop
jmp
movsb
add
add
shr
add
pop
fnop
jmp
sti
add
add
shr
add
iret
fnop
jmp
daa
add
add
sbb
add
add
shr
add
lock
jmp
in
add
add
fnop
jmp
jns
add
gs
jmp
int3
add
add
fnop
jmp
movb
add
shr
add
ret
jmp
fiaddl
add
mov
shr
add
in
shr
add
jecxz
shr
add
and
shr
add
add
add
add
shr
add
adc
shr
add
or
shr
add
jl
shr
add
push
fnop
jmp
jb
add
cmpsb
fnop
jmp
pop
add
add
fnop
jmp
mov
fnop
jmp
or
add
push
fnop
jmp
in
add
add
shr
add
fsubl
shr
add
std
fnop
jmp
sbb
add
xor
add
data16
jmp
test
add
cld
fnop
jmp
pop
add
add
shr
add
out
fnop
jmp
add
add
fnop
jmp
push
add
add
fnop
jmp
jmp
fnop
jmp
loope
add
mov
shr
add
mov
out
add
add
add
add
fnop
jmp
dec
add
add
fnop
jmp
repnz
add
pop
add
add
lods
add
add
icebp
add
add
add
add
shr
add
adc
add
shr
add
mov
add
mov
shr
add
dec
fnop
jmp
movb
add
shr
add
xchg
shr
add
cmpsb
fnop
jmp
stc
add
add
shr
add
pop
fnop
jmp
aam
add
xor
shr
add
rcr
shr
add
mov
popl
add
push
fnop
jmp
lret
add
add
fnop
jmp
fadds
add
sbb
shr
add
mov
or
add
add
shr
add
and
shr
add
inc
fnop
jmp
lahf
add
add
fnop
jmp
in
add
add
sti
add
add
fnop
jmp
addb
add
shr
add
fs
jmp
pop
add
add
fnop
jmp
inc
add
add
fnop
jmp
lret
add
add
movsl
add
add
flds
add
fnop
jmp
loopne
add
or
shr
add
scas
fnop
jmp
faddl
add
sub
shr
add
js
shr
add
lock
jmp
sub
fnop
jmp
movsl
add
add
fnop
jmp
xor
add
and
jle
add
or
dec
add
add
shr
add
or
shr
add
cwtl
fnop
jmp
adc
add
andl
jmp
push
add
add
mov
add
into
fnop
jmp
test
add
stos
fnop
jmp
test
fnop
jmp
movsb
add
add
pop
add
add
jmp
lcall
jmp
adc
add
iret
fnop
jmp
aas
add
add
shr
add
lahf
fnop
jmp
dec
add
add
shr
add
jb
shr
add
loopne
shr
add
fnop
jmp
addl
add
fnop
jmp
cmp
add
pop
fnop
jmp
pop
add
add
pop
add
add
popa
fnop
jmp
dec
add
add
shr
add
and
add
push
fnop
jmp
pop
add
add
fnop
jmp
std
add
add
fnop
jmp
and
add
in
fnop
jmp
inc
add
add
jmp
lahf
add
add
fnop
jmp
movb
add
fnop
jmp
repnz
add
testb
add
jno
add
and
shr
add
mov
into
add
add
adc
add
sub
shr
add
push
fnop
jmp
inc
add
add
jmp
sub
add
xor
shr
add
push
shr
add
test
add
sbb
xor
add
cmc
pusha
fnop
jmp
add
add
xor
fnop
jmp
fildl
add
add
insb
add
add
fnop
jmp
jle
add
es
jmp
add
add
mov
shr
add
xchg
shr
add
xchg
fnop
jmp
in
add
push
fnop
jmp
mov
add
fcompp
shr
add
outsl
fnop
jmp
out
add
add
shr
add
mov
shr
add
adc
shr
add
pop
fnop
jmp
ret
add
fnop
jmp
sub
fnop
jmp
fiaddl
add
scas
popa
fnop
jmp
pushf
add
add
shr
add
test
shr
add
dec
fnop
jmp
dec
add
add
shr
add
sbb
imul
shr
add
arpl
shr
add
fnop
jmp
jno
add
pop
fnop
jmp
and
fnop
jmp
add
add
add
shr
add
fstp
shr
add
fs
jmp
cmc
add
add
out
add
add
add
add
fnop
jmp
xchg
add
add
fnop
jmp
or
add
test
shr
add
push
fnop
jmp
sub
add
shlb
shr
add
sub
shr
add
int3
pusha
fnop
jmp
in
add
add
fnop
jmp
mov
add
loop
shr
add
or
shr
add
outsl
fnop
jmp
ljmp
jmp
mov
add
insb
fnop
jmp
add
add
fnop
jmp
fadds
add
jns
shr
add
fs
jmp
dec
add
add
fnop
jmp
or
add
out
shr
add
dec
fnop
jmp
roll
add
psubusw
jmp
data16
add
fnop
jmp
xor
add
out
fnop
jmp
inc
add
add
fnop
jmp
jge
add
mov
lcall
shr
add
insl
fnop
jmp
pop
add
add
pusha
fnop
jmp
popa
add
add
shr
add
mov
shr
add
xchg
fnop
jmp
roll
add
push
fnop
jmp
ret
add
add
sbb
add
lods
fnop
jmp
dec
add
add
fnop
jmp
test
add
clc
fnop
jmp
xchg
add
add
mov
fnop
jmp
pop
add
add
push
add
add
shr
add
lret
jmp
js
add
xchg
fnop
jmp
mov
fnop
jmp
cmp
add
es
jmp
and
add
int3
fnop
jmp
xor
add
mov
add
pusha
fnop
jmp
sub
add
dec
pusha
fnop
jmp
cmp
add
fnop
jmp
or
add
adc
shr
add
popa
fnop
jmp
add
add
push
fnop
jmp
inc
add
add
shr
add
loope
shr
add
iret
fnop
jmp
jae
add
mov
shr
add
data16
jmp
xchg
add
jae
shr
add
mov
shr
add
xchg
shr
add
es
jmp
ljmp
jmp
and
fnop
jmp
addl
shr
add
adc
shr
add
iret
popa
fnop
jmp
pop
add
add
shr
add
mov
add
insb
fnop
jmp
add
fnop
jmp
dec
add
add
fnop
jmp
sldt
add
fnop
jmp
jp
add
xor
shr
add
sub
shr
add
int
shr
add
mov
shr
add
push
fnop
jmp
sahf
add
add
stc
add
add
test
add
scas
fnop
jmp
pop
add
add
fnop
jmp
test
fnop
jmp
pop
add
add
fnop
jmp
lea
add
cmc
fnop
jmp
popf
add
add
fnop
jmp
mov
add
shlb
jmp
addb
add
fnop
jmp
jne
add
mov
add
cmp
shr
add
int
shr
add
fcmovnu
shr
add
rcr
shr
add
lcall
add
jbe
shr
add
lret
fnop
jmp
mov
add
xor
shr
add
ds
jmp
dec
add
add
fnop
jmp
xchg
add
add
fnop
jmp
jne
add
jns
shr
add
jg
shr
add
xchg
fnop
jmp
mov
add
push
shr
add
ss
jmp
imul
shr
add
jmp
fnop
jmp
xor
fnop
jmp
pop
add
add
add
mov
shr
add
xlat
fnop
jmp
aad
add
fnop
jmp
push
add
add
fnop
jmp
std
add
add
fnop
jmp
add
add
fnop
jmp
nop
add
add
shr
add
out
fnop
jmp
cmp
add
stos
fnop
jmp
popf
add
add
fiadds
add
mov
shr
add
pop
fnop
jmp
dec
add
add
jmp
and
add
je
shr
add
push
fnop
jmp
and
add
mov
shr
add
cs
jmp
fwait
add
add
add
rcr
shr
add
or
shr
add
cmp
shr
add
xor
cmp
fnop
jmp
xchg
add
add
shr
add
pop
fnop
jmp
xor
add
ja
shr
add
insb
fnop
jmp
mov
add
dec
fnop
jmp
int3
add
add
pop
add
add
fnop
jmp
mov
add
push
fnop
jmp
and
fnop
jmp
push
adc
push
mov
mov
push
call
mov
inc
push
ret
neg
shr
add
mov
shr
add
pop
popa
fnop
jmp
loopne
add
rcr
shr
add
xchg
pusha
fnop
jmp
and
add
cmpsl
fnop
jmp
xchg
add
add
fnop
jmp
leave
add
add
fnop
jmp
pushf
add
add
fnop
jmp
push
add
xchg
fnop
jmp
mov
fnop
jmp
xchg
add
add
shr
add
cmp
shr
add
xor
shr
add
in
fnop
jmp
in
add
add
shr
add
add
shr
add
mov
shr
add
mov
shr
add
movsb
fnop
jmp
mov
add
sti
fnop
jmp
mov
add
jecxz
shr
add
icebp
popa
fnop
jmp
mov
add
pop
fnop
jmp
ret
add
add
fnop
jmp
dec
add
add
fnop
jmp
nop
add
add
fnop
jmp
popa
add
add
fnop
jmp
mov
add
lods
fnop
jmp
jo
add
repnz
jmp
repz
add
jmp
rolb
add
fnop
jmp
js
add
inc
fnop
jmp
adc
add
sbb
shr
add
inc
fnop
jmp
inc
add
add
fnop
jmp
cld
add
add
shr
add
pop
fnop
jmp
testl
shr
add
imul
jmp
inc
add
add
shr
add
sub
shr
add
push
popa
fnop
jmp
jo
add
psubusw
jmp
add
add
shll
shr
add
dec
fnop
jmp
daa
add
add
fnop
jmp
mov
fnop
jmp
addl
add
fnop
jmp
clc
add
add
faddl
add
ret
jmp
cld
add
add
shr
add
lahf
fnop
jmp
jb
add
mov
shr
add
js
shr
add
ss
jmp
lods
add
add
shr
add
vaddsubpd
add
aad
shr
add
sbb
rolb
add
neg
shr
add
and
shr
add
fwait
popa
fnop
jmp
mov
add
imul
jmp
mov
pusha
fnop
jmp
les
add
jge
shr
add
test
shr
add
push
fnop
jmp
hlt
add
add
fnop
jmp
push
add
add
shr
add
sbb
jmp
xchg
add
in
shr
add
pop
fnop
jmp
push
add
add
inc
add
add
fnop
jmp
pop
add
add
add
add
icebp
add
add
push
add
add
sbb
fnop
jmp
mov
add
mov
shr
add
push
fnop
jmp
xor
add
ljmp
add
add
fnop
jmp
add
add
add
test
shr
add
in
shr
add
test
shr
add
jnp
shr
add
xchg
shr
add
adc
shr
add
mov
xchg
add
je
shr
add
sbb
add
add
sub
fnop
jmp
xchg
add
lods
fnop
jmp
xchg
add
add
fnop
jmp
icebp
add
add
fnop
jmp
mov
add
je
shr
add
stos
fnop
jmp
and
add
adc
pop
add
add
popa
fnop
jmp
push
add
add
or
add
add
call
addl
add
or
mov
lds
iret
add
add
clc
add
add
aam
add
test
roll
addb
add
and
or
addb
add
add
sbbl
add
xorb
add
add
add
movb
rcll
xor
pminsw
out
adcb
xorl
add
add
pop
add
sbb
add
sarl
rolb
xadd
add
ljmp
add
pusha
fiadds
test
rolb
into
or
add
jg
jg
jg
jg
data16
push
dec
movb
pusha
add
pusha
add
push
pusha
add
add
add
pusha
add
pusha
add
pusha
add
dec
push
add
pusha
add
pusha
add
pusha
add
add
add
pusha
add
pusha
add
pusha
add
pusha
add
inc
pusha
add
dec
movb
pusha
add
add
add
pusha
add
add
add
pusha
add
pusha
add
push
scas
push
movb
pusha
add
out
pusha
add
pusha
add
pusha
add
dec
push
add
add
mov
pusha
add
push
pusha
add
pusha
add
pusha
add
pusha
add
push
pusha
add
pusha
add
pusha
add
xor
add
ret
movb
pusha
add
pusha
add
add
push
pusha
add
pusha
add
add
add
sbb
sub
cmp
lret
pusha
and
ljmp
pusha
add
cmpsb
pusha
add
add
mov
loopne
push
pusha
add
pusha
add
ds
add
inc
test
add
pusha
add
stos
mov
add
add
stos
jle
add
pusha
add
pusha
add
pusha
add
inc
loopne
pusha
add
pusha
add
pusha
add
add
add
pusha
add
stos
out
pusha
add
pusha
add
loopne
push
pusha
add
pusha
add
add
add
pusha
add
stos
out
pusha
add
pusha
add
pusha
add
loopne
sub
pusha
add
adc
loopne
cmp
pusha
add
add
add
pusha
add
add
add
add
pusha
add
aam
add
pusha
add
mov
stos
jl
add
pop
pusha
add
add
inc
loopne
mov
add
pusha
add
add
pusha
add
pusha
add
pusha
add
pusha
add
add
add
pusha
add
add
pop
pusha
adc
cmp
push
movb
or
add
add
add
inc
push
int
add
inc
popa
add
dec
movb
pusha
add
add
add
pusha
add
add
call
add
pusha
add
test
add
add
add
add
pusha
add
add
pusha
add
pusha
add
pusha
add
into
pusha
add
pusha
add
or
loopne
loope
mov
xor
add
pusha
add
pusha
add
add
add
pusha
add
add
pusha
add
pusha
add
pusha
add
loopne
and
sbb
add
pusha
add
add
add
inc
movb
pusha
add
loopne
push
pusha
add
add
add
pusha
mov
pusha
add
pusha
add
outsb
pusha
add
pusha
add
add
pusha
add
pusha
add
pusha
add
inc
movb
xor
stos
or
add
bound
add
add
mov
dec
mov
mov
xor
xchg
xor
cld
jo
in
xor
stos
shlb
add
lock
xor
fdivs
add
xor
xor
cmp
sbb
add
xor
jp
add
fs
xor
push
xor
inc
xor
mov
add
xor
xorb
repnz
loop
xor
shlb
add
xor
xor
and
xor
xor
pop
sbb
add
xor
push
xor
stos
lock
xor
jbe
xor
xor
push
xor
mov
add
xor
mov
cwtl
push
test
add
add
xor
stos
out
add
xor
cmp
add
xor
stos
or
add
data16
dec
xor
stos
mov
add
add
xor
push
xor
inc
xor
or
add
add
xor
dec
xor
mov
mov
daa
movsl
mov
inc
mov
add
lock
mov
push
xor
pop
xor
jmp
xor
shlb
add
jle
sub
inc
shll
leave
xor
fwait
xor
xor
shlb
loopne
inc
xchg
xor
push
stos
mov
xor
lret
add
add
add
xor
jb
push
mov
in
add
xor
xorb
sub
xor
cmp
jnp
in
repnz
add
adc
push
cld
add
dec
ret
add
xchg
add
aad
jge
add
cmp
es
stc
xchg
add
sbb
add
in
jae
sbb
sbb
mov
cwtl
sub
jp
out
jb
sub
outsl
or
add
inc
cmp
sahf
and
cmc
xlat
adc
inc
jl
add
inc
nop
cmpb
add
add
add
imul
add
sbb
inc
cmp
adc
aad
xchg
repz
stc
add
cld
add
enter
adc
add
sbb
outsb
cld
add
lcall
xchg
hlt
hlt
imul
xor
and
add
add
add
lea
xor
nop
add
cmpsl
add
add
mov
test
add
mov
movsl
mov
jo
xorl
add
mov
lods
xchg
andb
addb
ljmp
and
add
jmp
add
add
add
xchg
add
add
inc
add
adc
mov
xchg
add
pushf
inc
repnz
jo
xchg
add
rolb
xchg
add
add
lods
add
xchg
add
rolb
test
add
xchg
add
push
add
add
or
xchg
orb
add
addb
aam
add
jo
fidivs
or
stos
pop
jo
or
imul
jo
stos
add
add
jo
adc
jo
push
je
pop
je
adc
stos
sbb
adc
and
adc
or
add
jo
test
mov
sbb
add
push
jo
lahf
jo
pop
jo
movsb
jo
sbb
add
add
add
jo
sbb
cmp
jo
out
lea
testl
das
add
add
in
out
loopne
loop
add
out
out
add
jmp
div
inc
lock
repnz
std
inc
add
mov
add
stos
mov
add
mov
mov
lcall
mov
add
add
add
add
add
add
pop
add
add
ltr
add
add
lds
mov
rol
int3
int
inc
add
iret
enter
sbb
ljmp
decl
pop
add
add
add
add
pop
add
add
lock
lds
add
adc
add
add
add
or
add
pop
add
add
add
add
add
add
cmp
inc
sub
bound
iret
add
mov
in
call
test
xchg
mov
dec
sbb
push
inc
dec
fadds
ja
cmpsl
add
pushl
ljmp
popf
fstl
and
stos
pop
insb
pop
out
add
je
xchg
insb
add
adc
add
sbb
and
mov
xor
xorl
and
jecxz
cmc
call
aaa
xchg
shl
shl
jb
add
movsl
and
clc
push
je
cmp
and
pusha
fs
push
and
mov
sub
sbb
mov
arpl
or
add
stos
pop
jp
add
jge
xchg
es
add
fistpl
add
adc
mov
iret
xchg
dec
add
and
inc
add
and
xor
xchg
add
inc
mov
add
test
jo
pushf
pop
mov
popf
insl
cmp
pop
add
scas
movsl
ja
nop
loopne
fcmovbe
ja
lock
popa
bound
push
fcoml
orb
add
jge
scas
add
adcb
add
jbe
loope
push
test
sub
lahf
testl
lods
lock
lock
cmp
sub
pop
int3
mov
add
test
addl
sahf
inc
lcall
popf
mov
cmpsl
xorl
sub
mov
loopne
inc
pusha
or
in
inc
mulb
inc
add
gs
aaa
sarb
fildl
inc
movsl
in
add
cmp
stos
push
rolb
daa
cmpsl
or
roll
pop
int
dec
lods
mov
and
fwait
add
mov
aam
mov
add
scas
pop
sbb
mov
cmp
lahf
sub
fiaddl
data16
cld
ljmp
fucomip
inc
xor
add
jbe
cli
lods
push
in
pop
inc
push
add
mov
scas
lret
mov
pop
test
xor
mov
push
rcrl
push
test
adc
fdivl
mov
inc
movsb
add
or
jbe
push
jle
mov
add
push
or
add
js
iret
mov
jmp
adcb
sbb
je
add
out
inc
pop
imul
inc
add
xor
pop
add
rep
decl
add
mov
push
addl
pop
test
pop
add
and
rcll
add
leave
cmp
jno
inc
inc
mov
mov
lea
and
dec
rolb
adc
mov
add
rolb
mov
cmp
movsb
repz
add
pop
xor
sub
mov
add
nop
and
add
arpl
add
push
push
decb
xchg
insl
popf
std
in
lret
add
fsts
insl
add
inc
push
cwtl
or
add
xchg
sbb
dec
sbb
add
mov
dec
mov
jnp
idivb
add
fildl
sbb
jb
xor
shr
jnp
jecxz
stc
icebp
gs
fistpll
xchg
loope
addl
adc
sbb
add
cli
outsl
mov
stc
dec
stc
add
iret
xor
dec
or
mov
insl
ljmp
inc
add
icebp
adc
fwait
bound
shrb
cmp
lds
add
mov
loop
add
addb
add
add
add
mov
ret
add
mov
add
mov
add
adc
add
add
test
add
and
add
push
rolb
rolb
rolb
rolb
aad
add
add
les
inc
rolb
or
add
rolb
pushf
shlb
add
push
xchg
shlb
mov
push
jmp
roll
mov
fwait
add
inc
inc
out
aam
adc
into
sahf
add
addr16
cs
test
sub
icebp
sbb
rorl
movsb
pop
mov
aam
and
xchg
in
inc
ret
dec
add
push
cld
mov
push
cli
add
andl
sarb
adc
cmp
push
insl
faddl
jge
cmp
fcmovb
mov
fdivrs
inc
dec
add
push
mov
je
mov
shll
pusha
xor
call
inc
add
mov
in
insl
andb
stos
xor
mov
mov
fcomp
xor
pop
sub
cmp
add
add
sti
andl
add
ds
aad
xchg
mov
je
xor
lret
in
add
fisttpl
xchg
add
daa
add
dec
sbb
outsb
adc
fimull
out
jbe
jb
mov
xor
pop
and
pop
insl
add
mov
mov
shlb
xor
add
add
loope
add
ret
arpl
ss
gs
mov
add
push
popa
pop
loopne
add
rorb
movsb
add
popa
xor
pusha
add
add
add
popa
add
add
test
test
push
add
add
mov
jmp
lock
loopne
dec
loopne
call
add
inc
loopne
mov
lret
loopne
jmp
cmp
mov
stos
mov
xchg
add
add
add
add
inc
loopne
xchg
xlat
add
add
add
add
data16
push
add
ja
add
add
loopne
dec
loopne
lahf
loopne
dec
loopne
push
push
add
add
jbe
or
add
add
push
cld
loopne
and
call
add
add
loopne
adc
add
enter
add
add
xchg
test
push
add
add
or
add
add
add
push
testb
inc
loopne
jmp
out
nop
loopne
rcll
filds
cld
loopne
add
loopne
or
int3
add
loopne
jle
loopne
shl
add
add
sbb
mov
add
loopne
sub
loopne
vmovups
add
loopne
jl
loopne
filds
enter
add
add
loopne
pop
loopne
dec
push
loopne
dec
loopne
loope
or
loopne
mov
add
loopne
lods
loopne
out
add
add
push
add
add
loopne
jne
loopne
loopne
add
add
adc
add
pop
cmp
test
loopne
sub
add
loopne
jmp
unpcklps
add
loopne
loopne
and
fsub
adc
add
add
inc
add
add
mov
add
add
mov
sbb
add
add
add
loopne
mul
or
add
or
add
add
add
or
add
inc
loopne
mov
test
xor
add
or
add
add
add
add
add
add
sub
loopnew
insb
adc
cmp
loopne
sub
rcll
loopne
jg
sbb
loopne
mov
add
sub
push
add
add
loopne
aaa
loopne
lock
loopne
xor
loopne
fistl
or
loopne
sbb
or
loopne
lds
push
and
or
inc
loopne
jns
fiadds
je
add
push
loopne
fs
add
or
xor
add
add
push
add
lock
sbb
sbb
loopne
aas
loopne
loopne
add
push
jo
shlb
push
jo
add
in
inc
lock
movsl
jo
and
jo
inc
jo
or
loop
or
jo
sub
cmc
add
adc
add
jo
mov
inc
lock
jo
call
push
jo
out
add
jo
shlb
repz
or
jo
xchg
lock
stos
sbb
or
add
mov
jo
add
add
jo
pop
jo
lock
lock
add
lock
inc
jo
leave
jo
mov
add
lock
stos
nop
jo
cli
jo
mov
sub
and
clc
jo
jne
add
jo
mov
stos
loopne
add
fdivs
cmp
add
jo
int3
jo
pop
jo
mov
cmp
ss
add
jo
cmp
add
add
jo
mov
add
jo
lcall
mov
add
test
add
jo
addr16
cwtl
jo
stos
pshufw
add
add
add
jo
icebp
xor
push
jo
je
add
jo
cmpsl
lock
push
jo
out
and
jo
mov
jo
sub
add
fnstenv
cmp
addb
xor
add
jo
sbb
data16
stos
adc
add
add
and
jo
inc
jo
xchg
jo
stos
mov
add
stos
mov
add
stos
call
add
jo
popf
jo
stos
shlb
pop
lock
jo
cmp
mov
addl
jo
sub
add
jo
sbb
stos
std
lock
jo
pushl
or
stos
mov
add
add
add
add
lock
push
jo
mov
or
fists
add
mov
lock
adc
lock
xorb
jo
clc
jo
movsl
push
jo
lock
jo,pt
call
jo
in
add
add
add
addb
add
jo
jbe
or
add
jo
ss
jo
jb
push
jo
jecxz
or
xchg
push
jo
adc
add
add
add
jo
jbe
or
jo
add
add
test
imul
add
add
adc
add
jo
mov
add
add
add
jo
int3
jo
push
jo
pop
icebp
pop
jo
stos
enter
jo
jae
add
lock
clc
jo
stos
and
add
lock
fdivl
sub
lock
jo
loope
add
xchg
add
add
add
jo
jo
add
cmp
jo
inc
jo
mov
aaa
sub
nop
jo
addb
out
hlt
jo
jg
add
jo
adc
nop
jns
test
outsl
filds
or
jo
push
lock
jo
pop
lock
jo
jno
jo
add
cmp
add
jo
enter
jo
and
add
loopne
sub
add
jo
or
add
test
add
or
jo
stos
sbb
hlt
jo
adc
add
add
lock
jne
add
lock
stos
test
add
jo
pushf
jo
xchg
lock
jo
test
cmpsl
lock
sbb
fdivs
push
lock
push
shlb
push
xor
test
xchg
pop
or
add
add
push
jo
fs
sub
push
jo
inc
push
jo
mov
add
jo
pop
aad
sub
jo
xorb
test
mov
add
rol
int3
int
iret
add
leave
lret
aad
xlat
add
rcl
rcr
fstp
filds
fcomp
fcmovu
in
out
add
loope
jecxz
in
out
out
add
jmp
div
add
icebp
repnz
std
incl
clc
stc
cli
sti
test
mov
scas
scas
add
mov
mov
mov
mov
mov
cwtl
cltd
lcall
mov
mov
add
inc
inc
dec
dec
dec
dec
add
dec
dec
push
push
push
push
add
push
push
pop
pop
pop
pop
add
pop
pop
fs
bound
insl
outsb
outsl
add
push
je
jbe
add
jb
jl
jle
add
jp
add
push
pop
add
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
decl
decl
decl
pop
decl
decl
repz
add
mov
nop
xchg
loopne
xchg
pushf
popf
sahf
decl
decl
decl
pop
decl
decl
decl
decl
cmc
psubd
add
pop
add
cmp
mov
add
add
add
jg
sbb
cmp
adc
aas
add
add
or
mov
inc
icebp
add
mov
cmp
push
add
add
adc
add
lds
je
cmp
push
mov
or
inc
arpl
lds
add
or
push
add
and
add
or
mov
inc
add
add
adc
loopne
inc
add
pop
push
aaa
outsb
or
gs
lds
add
test
popa
vpextrw
lds
lds
lds
outsb
lds
lds
push
lds
mov
lds
jbe
pop
ja
xchg
add
cli
lds
lahf
lds
jae
add
jge
movsl
lds
jle
fwait
lds
mov
mov
movb
lds
lds
add
nop
lds
add
add
ret
or
enter
fadd
add
or
lret
adc
aam
adc
push
lds
lds
sbb
pushf
lds
pop
lds
add
mov
lds
add
ffree
add
sub
lret
lds
xor
aad
xor
lds
add
stos
lds
aas
lds
lds
cmp
sbb
lds
loopne
insl
hlt
lds
outsl
fcmovb
push
jne
jecxz
jb
loope
add
cmc
lds
fcmovnb
add
icebp
lds
into
lds
adc
in
inc
add
inc
xor
lds
and
iret
lds
int
add
in
cmp
fld
add
test
lds
data16
cld
lds
xchg
lds
popa
in
lds
inc
add
lds
out
add
mov
lds
jno
in
lds
clc
lds
jle
xlat
lds
out
add
mov
lds
jnp
pop
add
add
add
ljmp
or
out
lds
push
mov
pop
repnz
sbb
lods
lds
sbb
scas
lds
and
jmp
sub
rol
add
out
lds
ss
mov
aaa
repz
cmp
lods
lds
cmp
scas
lds
gs
data16
add
leave
hlt
pusha
rol
add
aas
hlt
shlb
add
gs
insb
shlb
insl
shlb
shlb
outsl
shrb
shlb
add
and
push
and
add
pop
hlt
je
cmp
add
data16
jbe
pusha
hlt
add
hlt
jo
insb
hlt
add
outsb
hlt
jb
outsl
hlt
add
imul
add
jne
jle
ja
add
jno
js
jae
add
jge
jp
jg
add
jns
add
jnp
add
rol
add
rolb
rorb
add
push
hlt
add
pmuludq
add
or
or
or
add
rorb
add
rclb
or
adc
add
rcrb
rcrb
add
rcrb
adc
sbb
add
shlb
hlt
adc
and
add
shlb
adc
sub
add
shrb
add
shrb
add
shrb
sbb
sub
add
shlb
sbb
pop
hlt
add
rcrb
ror
add
ffreep
jnp
fcmovnb
add
shl
add
shl
add
shl
add
loop
add
shl
or
in
ret
shr
push
shr
add
shr
or
call
jmp
ret
shr
adc
hlt
ret
shl
push
shl
add
shl
adc
lock
shl
adc
bnd
shl
sbb
cld
ret
sar
push
sar
add
test
and
roll
add
roll
add
roll
add
mov
sub
rorl
add
rorl
add
rorl
add
xchg
ret
xchg
ret
rcll
add
xchg
shlb
rolb
ret
popa
ret
add
xchg
shlb
rolb
ret
insl
ret
add
sahf
shrb
rolb
ret
imul
ret
imul
rolb
ret
jne
mov
jbe
mov
add
rol
ret
add
ret
ret
add
sarb
rolb
ret
jg
iret
rolb
ret
jns
push
rolb
ret
jnp
lret
rolb
ret
add
push
ret
pop
ret
add
ret
add
icebp
rolb
ret
add
test
rorb
ret
cmpps
add
ret
or
clc
rolb
ret
or
cli
rolb
ret
adc
push
ret
pop
ret
add
ret
adc
xchg
add
ret
adc
test
sbb
mov
sbb
push
ret
pop
ret
add
ret
sbb
rolb
ret
sbb
mov
add
ljmp
es
daa
ret
add
ret
and
rol
add
ret
and
xlat
rolb
ret
sub
cs
das
ret
add
ret
sub
fadd
add
ret
sub
fcmovb
add
fcmovnb
xor
ss
aaa
ret
add
ret
xor
out
add
ret
xor
rolb
ret
cmp
ds
aas
ret
add
ret
cmp
in
rolb
ret
cmp
out
rolb
ret
inc
retw
dec
movl
pusha
ret
dec
movl
arpl
dec
movl
insl
ret
outsl
movl
push
inc
movl
jne
push
imul
add
imul
ret
push
movl
jae
or
add
jge
add
je
jg
or
add
ret
push
movl
add
ret
push
movl
add
push
or
pop
movl
push
ret
pop
movl
or
pop
movl
or
pop
movl
adc
movl
push
ret
movl
adc
popa
movl
adc
arpl
add
insb
sbb
and
ret
jbe
add
ret
ja
and
jo
add
ret
jno
and
jb
add
ret
jae
sub
jl
add
ret
jle
add
ret
jg
sub
js
add
ret
jns
sub
jp
add
ret
jnp
xor
add
add
ret
pop
movl
xor
movl
xor
add
add
ret
add
cmp
or
add
int3
jae
add
enter
add
add
in
popa
int3
in
add
loope
int3
gs
insb
int3
addr16
int3
pusha
out
outsb
int3
out
int3
pop
out
push
int3
pop
out
push
fs
int3
insb
out
je
push
out
jns
movsb
out
int3
mov
out
out
int3
lock
add
int3
add
int3
ret
out
int3
clc
out
or
int3
adc
add
int3
push
in
int3
movsl
out
adc
fsubp
push
int3
inc
out
pop
int3
inc
out
int3
in
out
sbb
out
out
int3
jecxz
add
int3
in
out
int3
out
xor
push
lds
int3
push
in
cmp
push
in
int3
push
in
cmp
push
in
int
loopne
and
add
and
es
loopne
int
loopne
and
leave
loopne
int
loopne
sub
loopne
sub
cs
loope
int
loope
sub
enter
shl
add
int
loope
int
out
xor
jg
xor
ss
out
int
out
xor
fsub
xor
loopne
add
int
loope
int
loope
cmp
loope
into
in
data16
in
into
shl
pusha
into
shl
into
ret
in
into
int3
in
into
int
add
in
into
shl
add
xlat
in
into
out
add
loop
imul
in
je
xchg
in
into
nop
in
jbe
xchg
in
into
xchg
in
jo
xchg
in
into
pushf
in
jb
popf
in
into
sahf
in
jl
shl
into
in
js
in
out
into
ljmp
pop
into
lahf
in
into
cwtl
in
into
cltd
in
add
lcall
push
into
xlat
loop
into
add
jae
or
psraw
or
imul
into
fsub
add
into
fsub
add
into
ftst
adc
add
into
mul
adc
mul
add
into
push
add
sbb
jb
add
into
or
sbb
push
add
and
and
es
imul
add
into
jns
and
ret
and
out
and
outsb
loope
sub
jbe
sub
cs
fsub
das
into
add
into
cmpsl
loop
into
mov
mov
jecxz
xor
into
in
add
into
xlat
jecxz
into
shl
add
into
stos
loop
into
test
xchg
cmp
test
add
into
shl
add
into
shl
cmp
cld
in
cmp
fsubp
cmp
add
clc
add
cli
add
insb
iret
in
out
iret
jecxz
add
imul
iret
popa
out
pop
iret
in
out
iret
into
out
add
fwait
add
iret
fsub
add
iret
push
out
iret
pusha
out
or
psraw
iret
int3
out
adc
out
out
iret
inc
out
push
iret
inc
out
iret
data16
cmp
addr16
enter
and
adc
and
es
enter
and
adc
and
adc
add
enter
enter
sub
sbb
sub
cs
enter
sub
sbb
sub
sbb
add
enter
enter
xor
and
xor
ss
enter
xor
and
xor
and
add
enter
enter
cmp
sub
cmp
ds
leave
leavew
lret
lret
leave
ror
leave
ror
leave
ret
leave
ret
lret
leave
int3
lret
int
add
into
lret
iret
lret
leave
enter
leave
lret
leave
lret
leave
lret
lret
leave
aam
jne
aad
add
lret
xlat
lret
leave
ror
jno
ror
add
ror
jae
ror
add
lret
add
fmulp
jg
add
fmul
jns
fxch
add
fcmove
jnp
fcmovne
add
in
add
push
leave
out
pop
leave
out
add
leave
loopne
add
loope
add
leave
loop
add
jecxz
add
in
lret
in
lret
leave
out
lret
out
lret
leave
call
lret
leave
ljmp
adc
hlt
lret
cmc
lret
leave
test
leave
test
lret
icebp
lret
leave
repnz
repz
leave
cld
lret
std
lret
leave
dec
sbb
cli
lret
leave
sti
lret
test
add
leave
xchg
add
leave
xchg
and
or
and
or
add
leave
or
leave
mov
add
leave
mov
add
leave
mov
add
leave
mov
xor
xchg
lret
leave
xchg
lret
xchg
lret
leave
xchg
lret
nop
lret
leave
xchg
lret
xchg
lret
leave
xchg
lret
pushf
lret
leave
popf
lret
cmc
cmc
add
div
addr16
add
lock
popa
lret
add
repnz
arpl
repz
add
cmc
insl
lret
add
cmc
outsl
lret
add
clc
cmc
imul
lret
imul
cmc
add
cmc
jne
test
add
xchg
ja
xchg
add
xor
lret
add
xor
lret
add
cmc
jge
cmc
add
mov
jg
cmc
add
mov
jns
mov
add
mov
jnp
mov
add
xchg
cmc
add
push
lret
pop
lret
add
lret
add
xchg
cmc
add
lret
add
xchg
cmc
add
pushf
cmc
or
push
lret
bswap
lahf
cmc
add
lret
or
cltd
cmc
add
lret
or
fwait
cmc
add
movsb
cmc
adc
push
lret
pop
lret
add
lret
adc
insl
aad
adc
outsb
aad
lret
add
push
aad
push
lret
pop
lret
add
lret
sbb
jne
add
lret
sbb
ja
add
jo
and
es
daa
lret
add
lret
and
jge
add
lret
and
jg
add
js
sub
cs
das
lret
add
lret
sub
add
push
aad
lret
add
mov
xor
ss
aaa
lret
add
lret
xor
inc
cmc
add
lret
xor
dec
cmc
add
das
aad
lret
add
lret
cmp
insl
in
pusha
xlat
push
lds
jns
xchg
lds
mov
fs
adc
data16
data16
adc
pusha
in
in
popa
adc
in
in
adc
and
in
adc
outsb
in
outsb
in
adc
push
int3
cmp
add
push
leave
int
add
jo
enter
jo
stos
leave
jo
xlat
jo
xlat
jo
fbstp
stos
fbstp
cmp
ljmp
loopne
add
add
jo
xchg
jo
jecxz
add
jo
xchg
jo
in
add
jo
xchg
jo
out
add
add
jo
call
add
jo
jmp
add
jo
lock
pop
in
add
add
dec
jo
leave
push
jo
push
jo
mov
add
add
jo
mov
add
add
jo
loopne
add
add
push
jo
push
jo
loop
add
jecxz
jo
pop
jo
in
jo
pop
jo
out
jo
pop
jo
in
add
add
lods
jo
pop
jo
icebp
adc
add
lock
jo
outsb
jo
scas
jo
stos
outsl
jo
scas
jo
push
add
jo
push
add
jo
stos
jo
je
add
add
add
jo
cmpsl
jo
jo
add
jo
mov
add
jo
mov
add
add
add
jnp
jo
jno
add
add
add
stos
push
jo
mov
add
jo
mov
add
jo
add
mov
add
jo
shl
jo
mov
jo
mov
add
jo
mov
add
jo
mov
add
or
push
jno
or
inc
jo
adc
add
jo
aas
adc
add
add
cmp
add
add
pop
cmp
add
add
adc
add
inc
add
add
cmp
add
add
and
add
add
cmp
add
add
daa
cmp
add
add
and
add
lds
add
add
add
cmp
add
add
das
cmp
add
cmp
add
cmp
add
add
add
cmp
mov
test
popa
cmp
add
add
add
add
add
inc
add
add
add
add
add
into
leave
into
add
add
hlt
leave
into
leave
into
add
add
mov
add
in
add
add
popf
add
add
repnz
lods
icebp
add
lods
lock
lods
testl
add
mov
mov
add
mov
add
lods
mov
add
stc
test
aam
test
enter
int3
stc
test
sar
add
stc
test
cmp
test
cmp
test
xor
test
xor
test
sub
test
sub
test
mov
mov
mov
mov
into
into
into
in
into
into
into
into
into
into
into
mov
mov
mov
add
stos
cmpsb
mov
incl
add
xchg
add
mov
test
add
add
add
add
mov
add
loope
mov
loope
hlt
add
add
out
add
add
mov
mov
mov
mov
loopne
loopne
loopne
cli
sti
test
addb
mov
xchg
nop
xchg
xchg
xchg
loopne
loopne
loopne
pushf
popf
sahf
lahf
cwtl
cltd
lcall
mov
scas
scas
test
stos
stos
mov
add
add
cmpsb
cmpsl
mov
scas
test
stos
mov
mov
mov
mov
mov
mov
add
xchg
xchg
fwait
mov
xchg
stos
cmpsl
scas
mov
add
mov
add
add
xchg
xchg
fwait
xchg
stos
test
add
mov
xchg
mov
mov
add
add
scas
add
add
add
add
add
add
add
add
repnz
mov
cmpsl
mov
out
loope
mov
out
add
add
out
loope
mov
out
in
loope
mov
add
mov
mov
ljmp
mov
stos
mov
mov
stos
test
test
cmpsl
scas
add
andb
subl
mov
test
cmpsl
scas
add
mov
test
out
mov
leave
into
lods
mov
mov
in
loope
out
mov
mov
movsl
add
mov
stos
mov
mov
into
mov
and
loope
out
into
add
add
jmp
cmpsl
add
add
add
add
add
add
add
je
outsb
imul
add
sbb
sub
ds
sub
and
and
sub
cs
and
and
push
add
inc
push
inc
dec
push
cmovp
add
adc
xor
xor
sbb
sub
add
add
outsb
pop
dec
dec
popa
inc
dec
dec
push
pop
add
add
pop
dec
arpl
imul
addr16
popa
je
jo
jne
dec
add
add
push
inc
inc
push
pop
adc
add
add
aam
jecxz
hlt
jecxz
in
iret
std
cld
iret
jmp
jmp
sar
in
out
stc
xlat
lock
aad
lret
add
mov
hlt
rcr
into
ror
rol
aad
add
and
and
jge
daa
sub
jae
xor
jbe
sub
imul
add
jno
outsl
push
xor
imul
jo
insb
es
imul
add
enter
aad
add
push
je
jg
data16
add
scas
int
stos
mov
xchg
sahf
test
lcall
add
add
xchg
nop
mov
xchg
adcl
mov
scas
cmpsl
lods
mov
xchg
mov
test
nop
nop
add
add
adc
sbb
add
les
pop
sbb
add
add
xchg
rclb
enter
test
fadd
add
addl
fstpl
lods
mov
in
mov
movhps
adc
or
add
add
push
jno
add
test
sahf
sbbb
popf
fwait
xchg
cwtl
mov
mov
mov
scas
test
xchg
cwtl
mov
aad
loopne
cltd
mov
mov
lret
rolb
testl
rcl
adc
add
mov
in
out
jecxz
mov
mov
cmc
mov
mov
mov
mov
test
add
add
mov
loop
mov
jp
bound
add
sbb
sbb
adc
adc
push
add
push
pop
pop
adc
dec
pop
push
adc
add
add
es
sub
add
xor
imul
sbb
add
dec
dec
push
dec
push
dec
inc
inc
inc
dec
inc
dec
push
push
inc
adc
pop
push
push
sbb
adc
orl
adcb
xchg
xchg
cltd
xchg
xchg
xlat
xchg
adc
out
jmp
add
pop
adc
push
push
pop
or
push
push
adc
les
push
push
add
add
adc
adc
add
loopne
out
loope
cmpsb
repz
out
in
jmp
repz
std
out
out
cld
ljmp
inc
push
dec
push
push
les
pop
dec
dec
dec
push
or
push
inc
inc
push
push
pop
add
add
faddp
xchg
rcr
fld
lcall
popl
add
sub
das
add
aas
and
xor
xor
and
xor
sub
and
xor
or
xor
add
add
div
in
jmp
in
ljmp
loop
add
les
adc
push
pop
add
adc
sbb
or
and
enter
out
aam
rolb
rcl
out
rcl
add
add
xchg
mov
orl
mov
xchg
lods
xchg
pushf
sahf
xchg
pushf
add
arpl
dec
jo
arpl
inc
outsl
jg
ja
arpl
add
push
push
inc
push
jle
inc
push
pop
pop
jo
dec
pop
add
adc
push
pop
or
xor
or
sbb
adc
pop
sbb
add
or
adc
add
add
add
sub
or
sbb
mov
mov
movsb
add
sub
cmp
and
sub
stos
mov
mov
mov
add
add
or
aaa
sbb
push
push
push
or
add
ret
aad
fsubrp
into
add
nop
xchg
xchg
addb
mov
add
add
add
sbb
or
add
adc
sbb
adc
add
leave
int
repnz
iret
into
ret
add
out
div
leave
idiv
std
add
adc
les
pop
add
or
add
fst
leave
jecxz
aam
add
aam
filds
add
fcmovb
call
add
add
out
in
in
div
ljmp
jle
jge
push
outsl
jne
and
and
add
mov
lcall
xlat
rol
test
xlat
mov
xor
add
inc
inc
push
inc
pop
pop
pop
inc
adc
pop
add
add
std
ret
fsubrp
cld
stc
add
add
adc
sbb
pop
add
add
out
cli
in
std
jmp
ror
ret
xlat
rol
ror
in
aam
ror
xchg
sbbb
std
loope
in
shr
out
loop
div
add
add
mov
mov
mov
stos
movsb
mov
add
lods
mov
adcl
cwtl
xchg
xchg
cltd
xchg
mov
ret
test
mov
test
scas
movsl
mov
test
mov
mov
mov
popf
pushf
lahf
xchg
add
pop
dec
add
add
cmc
lret
aad
add
add
mov
add
add
mov
xchg
add
add
das
jp
push
inc
pop
dec
push
jle
sbb
mov
add
cmp
add
add
cmp
add
add
push
inc
inc
push
inc
push
inc
jg
imul
jp
bound
popa
arpl
push
jp
jg
jle
add
lret
int3
mov
idiv
lock
add
clc
jmp
mov
hlt
cmc
hlt
idiv
lock
add
mov
rol
fiadds
mov
mov
add
stos
mov
jecxz
add
add
adc
dec
sbb
sbb
mov
add
dec
pop
dec
dec
dec
push
dec
pop
add
add
sub
das
xor
xor
add
repz
ljmp
add
mov
mov
mov
add
add
scas
mov
xchg
xchg
mov
mov
xchg
mov
xchg
xchg
xchg
mov
mov
add
test
add
std
in
in
out
imul
incb
add
add
das
cmp
add
add
jecxz
loopne
cmc
cli
repz
add
mov
mov
mov
add
add
sub
aaa
and
sub
sbb
cmp
push
add
adc
or
adc
or
push
add
std
mul
loopne
out
out
fmul
jecxz
ror
add
iret
sar
rcl
test
add
and
or
cmp
or
sldt
add
fmul
int3
ret
iret
xchg
pusha
push
inc
inc
add
add
jle
dec
pop
add
add
mov
add
arpl
pop
add
add
xchg
xchg
xchg
xchg
xchg
ljmp
int3
leave
pushf
mov
cmc
cli
loop
repnz
pop
sbb
add
sbb
adc
add
bound
outsb
jbe
fcmovnb
int3
int3
fmul
fsubr
repnz
repnz
vpsubsb
sti
ljmp
out
add
dec
add
sub
xor
add
add
add
add
sbb
adc
pop
add
add
ret
jmp
fcmovbe
aam
add
hlt
in
clc
repnz
icebp
push
repnz
add
inc
pop
inc
dec
pop
or
add
xchg
leave
ror
nop
fcomp
fcomp
xlat
roll
pushf
xchg
add
push
push
dec
dec
pop
push
push
pop
pop
inc
add
jo
fs
jp
jo
jp
add
js
outsl
js
jle
jb
pop
inc
pop
push
inc
jo
inc
pop
dec
inc
or
dec
dec
inc
dec
inc
inc
push
add
add
sub
sub
aas
add
add
outsb
imul
add
add
dec
dec
add
add
sbb
sbb
or
in
out
in
stc
in
in
repnz
pop
movaps
add
pop
adc
push
add
dec
pop
inc
imul
add
add
popf
xchg
cwtl
lea
add
loopne
repnz
out
out
out
incl
add
addr16
addr16
ja
inc
dec
pop
inc
imul
add
add
add
add
dec
push
dec
dec
add
add
jl
add
in
cld
cli
out
repnz
loope
repz
imul
add
add
fadd
rol
lahf
ror
add
add
add
cmp
mov
cmp
les
gs
ds
add
push
das
imul
add
lret
xchg
xchg
cmc
out
repnz
xchg
mov
add
outsb
and
xor
xor
out
stos
mov
mov
cmpsl
mov
rcr
mov
add
adc
add
add
add
fcmovnb
add
add
add
roll
ret
rcl
aam
fcmovnbe
iret
lret
add
add
adc
xor
adc
fs
inc
inc
inc
push
dec
pop
push
add
add
imul
cmp
cmp
or
sub
add
add
pop
mov
sbb
or
add
jle
pop
push
inc
push
sbb
push
sbb
ss
dec
push
inc
pop
push
pop
push
or
sub
insb
jge
ja
jo
ds
add
nop
mov
mov
mov
int
cmp
fistpl
fcomp
cmc
add
adc
sub
and
or
sub
add
movl
std
jecxz
ret
add
add
mov
xchg
mov
cmp
cmp
and
jl,pt
aas
ss
add
movsl
lcall
mov
xchg
xchg
add
add
cmovbe
dec
add
add
dec
jns
outsb
add
add
cwtl
mov
lahf
mov
stos
xchg
popf
mov
mov
test
test
ret
scas
mov
mov
add
add
addr16
push
inc
inc
push
inc
push
pusha
jo
pop
dec
push
dec
push
inc
push
jp
dec
dec
inc
dec
pop
pop
push
bound
inc
add
gs
es
pusha
insl
push
js
add
add
mov
xchg
xchg
xchg
xchg
fidivs
test
ss
adc
xor
add
adc
add
cmp
or
adc
bound
popa
js
sub
es
popa
data16
jno
jo
outsl
add
andl
cmpsb
mov
mov
xchg
mov
mov
cwtl
mov
xchg
mov
lods
mov
add
loop
call
bound
push
pop
inc
inc
adc
push
dec
pop
pop
dec
dec
add
add
pusha
ja
jnp
push
pop
add
int3
int3
fmul
fmul
jmp
imul
cmc
call
fstp
ret
ffree
repnz
add
push
and
outsb
les
xor
aaa
xor
sbb
xor
add
add
test
add
sbb
sbb
adc
adc
pop
adc
adc
dec
dec
pop
inc
inc
dec
dec
dec
inc
jge
dec
inc
push
dec
sbb
pop
inc
pop
dec
add
dec
dec
pop
sbb
push
adc
add
inc
jg
jge
ja
cmp
imul
inc
jge
outsl
insl
jae
jge
sub
popa
push
inc
push
popa
add
ljmp
add
cmp
xor
pop
add
xlat
rcl
faddl
add
add
add
add
jne
inc
push
push
inc
add
jb
inc
dec
pop
inc
add
push
inc
push
push
pop
dec
dec
pusha
jle
dec
add
push
jo
imul
outsb
add
jae
xor
ja
add
js
inc
inc
je
jbe
adc
xchg
in
lret
int
into
iret
add
enter
inc
jns
pusha
add
jne
push
je
add
push
popa
jb
dec
add
fs
imul
dec
jb
fs
inc
push
inc
add
inc
pop
dec
pop
pop
inc
add
das
ss
adc
adc
add
inc
add
cltd
xchg
xchg
sahf
add
jne
bound
jne
jae
push
jb
outsl
add
jno
je
dec
imul
bound
jg
dec
add
pop
inc
push
inc
imul
push
push
push
pop
add
push
push
inc
push
add
add
in
ljmp
jecxz
add
mov
aad
shl
cmc
rcr
iret
add
int3
rol
aam
jmp
add
ret
int
mov
add
ffreep
loop
loopne
adc
idiv
testl
lods
mov
mov
mov
in
mov
mov
in
add
cwtl
lahf
sahf
add
rcr
fstp
adc
add
clc
incb
add
ret
adcb
xchg
mov
out
add
out
call
repnz
lock
mov
mov
subb
lea
mov
xchg
add
ret
popl
enter
add
mov
lods
add
cmc
in
add
mov
add
out
mov
stos
mov
fadd
xchg
add
fmul
clc
fsub
fadd
add
aad
fadd
or
add
ret
aad
mov
in
sti
mov
xchg
add
lret
add
idivl
incb
clc
loopne
test
in
add
fdivp
push
sbb
adc
adc
push
add
push
push
add
or
push
bound
adc
adc
add
add
sub
and
and
xor
adc
and
cmp
and
das
sbb
sub
add
outsl
xor
dec
arpl
pop
pop
adc
add
push
push
adc
pop
dec
pop
js
push
inc
inc
add
add
jge
outsb
jb
outsb
pusha
ss
ja
jp
add
jb
addr16
bound
fs
fs
popa
and
and
xchg
mov
repnz
adcl
add
pushf
lret
adcl
mov
mov
xchg
add
movsl
mov
cmpsb
movsb
mov
movsb
mov
xchg
mov
add
test
add
icebp
ror
inc
add
enter
add
fwait
add
mov
mov
or
loopne
jecxz
mov
dec
pop
dec
add
inc
jl
inc
pop
dec
add
xchg
pop
xor
add
pusha
rorl
mov
scas
cmc
icebp
mov
loope
pushf
xchg
add
jecxz
cld
mov
leave
ror
xlat
add
or
add
add
or
add
or
add
jne
js
popa
inc
push
push
pop
inc
pop
add
sbb
push
sbb
cmp
add
xor
mov
scas
addl
cltd
sbbb
mov
mov
add
jmp
adc
dec
addb
mov
adc
sbb
or
ds
xor
sub
data16
add
repnz
jmp
rorl
mov
test
mov
and
subl
dec
add
dec
push
or
inc
dec
pop
inc
into
cmpsb
lods
mov
add
pop
dec
inc
add
dec
pop
or
inc
and
dec
dec
pop
add
neg
add
rolb
lret
rolb
dec
add
dec
inc
dec
add
inc
or
dec
inc
adc
xor
loope
add
sub
inc
jo
addb
arpl
addr16
js
add
add
arpl
add
outsl
pusha
push
data16
add
xchg
mov
mov
mov
mov
mov
movsl
movsl
test
mov
ret
add
iret
cwtl
cwtl
mov
test
fcom
fwait
xchg
lahf
pushf
xchg
xchg
add
rolb
add
sbb
sbb
cmp
cmp
and
add
xor
xor
add
and
xor
xor
add
dec
inc
dec
sbb
push
movups
pop
inc
inc
add
xchg
addb
and
xlat
xchg
rorl
xchg
add
mov
mov
inc
fisubrs
adc
outsl
je
inc
and
push
add
sti
add
fcmovnu
into
lret
xchg
clc
faddl
rcr
aad
rol
fiadds
rol
test
push
jge
fs
popa
cmp
dec
arpl
and
push
or
add
call
xchg
cwtl
addb
leave
leave
ror
mov
mov
xlat
add
stos
std
test
sbb
hlt
loopne
mov
xchg
lret
out
stc
jmp
out
loope
mov
loop
add
decb
add
add
or
sbb
sbb
push
pop
test
and
add
stc
ljmp
add
sub
jbe
daa
jp
add
adc
add
adc
xor
or
add
inc
pop
pop
adc
outsl
add
inc
adc
push
pop
inc
adc
sbb
push
inc
inc
dec
add
dec
or
push
adc
shr
out
out
frstor
test
add
jne
add
out
cmc
cld
inc
mov
mov
add
sbbb
or
pop
push
push
orb
stos
stos
scas
mov
add
mov
mov
test
test
mov
xchg
add
roll
test
xchg
test
sahf
lcall
inc
and
add
pop
pop
pop
push
les
add
cmovbe
jnp
add
add
adc
pop
push
add
add
sbb
inc
jns
ss
push
fs
insb
gs
sub
push
pusha
fs
or
adc
adc
pop
dec
dec
sbb
or
add
add
or
sbb
push
add
push
push
adc
add
and
sub
sub
add
sub
sub
add
cmp
ss
aaa
xor
aas
addr16
pop
inc
add
addb
add
xchg
add
mov
lods
add
stos
add
mov
add
add
add
in
mov
push
cwtl
add
add
add
stos
xchg
loopne
mov
add
push
stos
xchg
bound
mov
add
bound
loope
add
add
test
loopne
xchg
adc
add
out
jmp
adc
mov
nop
nop
and
add
add
add
mov
stos
and
add
mov
test
stos
stos
ljmp
mov
stos
xchg
mov
mov
add
mov
lods
add
mov
add
in
loopne
andl
inc
test
add
add
cmpsb
mov
add
mov
mov
movsl
mov
nop
lods
rolb
mov
add
addl
mov
mov
lea
test
add
mov
mov
xor
mov
xor
mov
and
mov
stos
mov
push
push
movsl
jo
mov
add
add
mov
mov
add
xchg
nop
adc
add
add
repnz
sbb
add
add
sbb
xchg
rolb
xchg
lock
mov
test
xchg
adc
mov
xchg
test
add
add
jb
repz
add
push
loope
add
movsl
hlt
and
inc
add
rolb
adcl
stos
add
and
push
add
add
mov
mov
adc
shll
lods
add
pop
jno
roll
cmpsb
xor
push
add
ljmp
mov
addl
jno
lods
stos
scas
loopne
add
xchg
add
xchg
add
nop
lea
andb
mov
xchg
addl
adcl
mov
popl
add
nop
mov
xchg
adcl
pop
mov
xchg
mov
xchg
test
add
or
add
mov
or
add
pop
add
xchg
push
add
add
add
mov
xchg
add
xchg
pop
mov
addb
cmpsl
jbe
add
add
sub
add
add
add
adc
xor
mov
mov
or
mov
mov
mov
stos
add
mov
movsl
test
mov
push
mov
xor
mov
lock
rcrl
mov
and
cmp
fstpl
mov
mov
or
add
sub
mov
add
cmc
add
stos
add
add
xchg
add
xchg
xchg
mov
subb
lea
xor
inc
xor
or
push
mov
pusha
or
add
inc
add
movsl
rcll
and
addl
xchg
shll
orb
adc
js
cmp
iret
push
dec
adc
cmp
add
adc
es
iret
add
pop
xchg
dec
sub
iret
sub
cmp
cmp
add
ret
testl
jb
dec
mov
popf
dec
aaa
aaa
popa
dec
adc
add
int3
add
rorb
sub
add
add
int3
lret
jae
enter
int3
add
add
iret
adc
addb
addb
adc
add
add
push
xor
cmp
xor
sarb
rclb
add
cmp
shlb
add
cmp
fcoml
add
xor
fmuls
add
or
mov
dec
adc
or
sub
add
cmp
dec
mov
dec
ret
or
or
add
in
orb
dec
add
enter
inc
sub
adc
lret
inc
les
pusha
sbb
rclb
fimuls
push
dec
mov
add
mov
scas
cmp
aas
lret
lret
inc
shll
loopne
jl
test
dec
add
out
add
mov
das
mov
jae
aam
add
lods
lret
jae
inc
enter
mov
loopne
rolb
das
popf
dec
add
add
das
mov
cmp
and
mov
cli
inc
or
das
std
push
add
inc
das
notl
fsubrs
jmp
or
lret
add
inc
xchg
in
test
das
fnstenv
enter
das
xor
test
add
ret
add
add
and
dec
ret
or
das
scas
cmp
mov
out
xor
lock
stos
xor
test
add
xor
lcall
mov
add
inc
push
jo
dec
xor
push
xor
pop
xor
popf
and
add
adc
mov
cmp
add
movsb
cmp
cmp
mov
lds
dec
mov
lock
dec
or
dec
lds
inc
add
fdivrs
mov
dec
inc
add
add
mov
scas
add
and
add
and
sub
dec
inc
add
lcall
and
sub
and
xchg
sub
sbb
and
lret
inc
sbb
sbb
and
add
dec
mov
repnz
sub
stos
cmpsl
lds
scas
adc
lds
pusha
cmpsb
lds
inc
mov
inc
add
mov
sub
mov
orb
loopne
and
sub
sti
inc
lds
xor
mov
add
mov
sub
mov
add
test
stos
push
add
adc
addb
repnz
lahf
and
sbb
and
incb
and
aas
das
mov
and
test
add
cmp
jo
mov
cmp
icebp
inc
aam
loopne
mov
add
pop
test
inc
add
mov
dec
add
out
inc
add
out
loopne
xchg
or
xor
xor
sub
mov
testl
adc
inc
stc
cwtl
jb
xchg
lds
add
xchg
xchg
xchg
lods
mov
xchg
cmp
dec
adc
xorb
mov
lods
dec
and
insb
adc
inc
add
mov
xchg
mov
pop
mov
pusha
add
add
lcall
xchg
add
mov
pushf
add
in
add
xchg
scas
ficoms
and
add
sub
xchg
dec
adcl
adc
test
mov
lahf
or
clc
rcrl
xor
sub
add
add
scas
mov
cmp
add
lock
or
push
push
mov
cmp
inc
add
add
dec
add
dec
inc
or
cmp
sub
add
add
add
inc
sub
movb
dec
adc
cmp
pop
mov
dec
and
cmp
add
add
sub
fcoms
dec
ret
dec
mov
dec
mov
xchg
add
mov
dec
push
scas
cmp
xchg
dec
cltd
xor
add
sbb
add
add
dec
mov
lods
mov
test
cmpb
int3
xchg
cmp
add
cmp
int3
dec
xchg
add
scas
in
fcoms
adc
mov
in
cmpl
cmpsb
testl
dec
mov
cmp
add
sub
dec
lds
inc
add
add
xchg
scas
add
cmp
push
inc
lds
dec
cmp
sbb
rclb
lds
add
loopne
add
testl
test
filds
dec
add
cmp
cmp
test
subl
xor
xorl
cmp
add
adc
push
rolb
add
lds
lret
pop
nop
add
call
inc
dec
add
pushf
dec
mov
or
add
std
or
mov
mov
xchg
cmp
or
xchg
scas
add
or
add
flds
mov
xchg
subl
aam
bound
cmp
dec
adc
dec
stos
movl
addb
push
xorl
mov
add
add
inc
sub
lods
lds
add
add
inc
add
sub
add
lret
inc
pop
andb
cmpb
add
mov
enter
movb
shlb
xchg
lods
movsb
orl
orl
dec
and
xchg
add
add
cmp
adc
add
inc
push
rolb
faddl
pop
sub
add
mov
xchg
cmp
enter
inc
int3
inc
stc
add
mov
add
sbb
add
add
sub
aas
cmp
fwait
adc
lcall
xchg
xchg
jg
inc
adc
rclb
xchg
xor
push
rolb
inc
aas
ret
enter
adc
inc
roll
add
mov
or
rorb
or
shll
cmp
or
dec
mov
fsubrl
xlat
rorb
push
xchg
inc
test
orl
cmp
orb
fadds
add
or
cmp
stos
cmp
aam
rclb
inc
mov
insb
pop
add
mov
add
fcmovb
add
sub
sub
addb
xchg
or
jl
adcb
dec
xor
lret
xorl
adc
inc
mov
mov
test
sub
mov
addl
in
sbb
or
xchg
add
addl
mov
dec
push
sub
inc
dec
lds
inc
fadds
xchg
mov
fsubrl
rolb
xchg
sub
inc
add
fadds
inc
dec
sub
ljmp
lods
and
add
sub
and
xor
add
sub
aaa
lret
inc
rolb
dec
ret
xchg
inc
in
xor
lret
inc
push
subb
scas
lret
mov
pusha
add
and
xchg
loopne
or
shll
std
cltd
xor
adc
mov
xor
inc
and
lods
xor
icebp
imul
xor
inc
das
add
xchg
dec
xchg
xorl
subb
int3
and
loopne
and
not
and
rol
idivl
das
pusha
xor
add
inc
pop
add
dec
cmp
mov
fadd
add
dec
adc
aas
add
mov
add
orb
aaa
mov
mov
adc
xchg
xchg
mov
adc
sub
mov
adcl
subl
xor
xor
fisttpl
add
xchg
sub
mov
mov
pusha
cmp
add
xorl
scas
stos
dec
mov
pushf
sub
lea
addb
lods
xor
pop
add
pusha
sbb
lods
xor
pop
mov
pop
roll
loope
pop
add
add
rolb
stos
inc
dec
mov
pushf
sub
pop
pop
add
xlat
add
push
xlat
add
mov
roll
xlat
add
pop
add
add
test
sub
adc
lds
and
out
rolb
pop
movsb
in
rolb
pop
ljmp
adc
rolb
adc
push
dec
mov
mov
mov
int3
inc
mov
xor
xorl
addb
add
outsl
dec
add
cmp
outsb
scas
sahf
pushf
sub
sub
outsb
lahf
les
xchg
sbb
adc
add
jns
add
cmp
mov
dec
or
pusha
push
add
mov
add
das
testl
shlb
rcll
pushf
sub
and
xchg
scas
and
dec
bound
test
and
bound
lods
dec
or
add
pushf
sub
int3
negl
std
cltd
xor
dec
cmpl
and
ret
xchg
and
cmp
pop
mov
dec
and
adc
sub
mov
cltd
add
std
cltd
sub
dec
mov
pushf
sub
faddp
adc
cmp
enter
mov
lds
xor
popf
add
loopne
and
cmp
sub
and
decl
mov
inc
add
inc
and
mov
cmp
test
adc
adc
inc
add
mov
orl
rorl
pusha
andb
adc
dec
adcl
shrl
add
orb
sarl
mov
dec
adcl
adcl
xor
rorl
add
mov
dec
sub
mov
test
pushf
or
fucom
test
sub
add
dec
xchg
xor
and
mov
add
mov
loopne
xor
pusha
adc
add
movb
loopne
xchg
sub
andl
sbb
xorl
andb
adc
sub
sbb
test
sub
adc
add
jne
add
insl
adc
add
gs
dec
cmpl
arpl
jl
inc
dec
xchg
adc
sub
jge
add
jae
inc
sub
loopne
dec
inc
push
add
jbe
mov
or
dec
mov
xchg
xchg
cmp
push
jo
and
inc
jo
add
or
jno
push
inc
add
mov
pushf
sub
shlb
outsb
adc
and
pusha
inc
sahf
sub
add
mov
xor
xor
ficomps
sub
ret
cmp
lret
inc
cmpsb
and
add
mov
pushf
pusha
dec
mov
add
sbb
xchg
dec
adc
cs
xchg
sub
dec
xor
or
es
movl
mov
pushf
sub
pop
add
add
sub
add
adc
xor
inc
jno
or
add
or
jge
pop
lret
xorb
int3
dec
ret
lret
adcb
inc
cld
add
inc
xchg
xchg
xchg
dec
inc
jno
add
cmp
sub
inc
inc
inc
pusha
addb
cli
pop
and
xor
jo
inc
add
mov
pop
lret
or
inc
add
and
add
sbb
jae
dec
fwait
insb
rclb
and
inc
es
add
scas
pusha
inc
and
jge
add
add
cmp
adc
add
iret
inc
add
mov
dec
adc
sub
mov
inc
mov
and
movsb
jp
jnp
fwait
je
pusha
test
add
or
add
cmp
cwtl
sub
add
push
scas
lcall
fldenv
sbb
or
or
add
jns
add
dec
pop
sub
mov
add
pusha
cmp
lret
inc
arpl
and
add
add
and
shlb
adc
add
dec
cltd
cmp
mov
jo
mov
xor
add
jo
cmp
loopne
lock
lock
enter
xchg
dec
xorl
add
pushf
sub
adc
add
sub
xchg
lods
ret
mov
subb
dec
mov
jbe
adc
push
loop
inc
push
inc
pusha
add
sub
adc
dec
dec
add
xchg
dec
mov
cwtl
pushf
sub
addb
sbb
dec
jns
pusha
push
shll
sub
push
mov
pop
icebp
or
and
sub
dec
add
inc
xor
orl
rclb
xchg
dec
mov
shll
adc
sub
push
adc
loope
pavgb
xchg
xchg
andl
xchg
cmp
xor
jae
add
and
test
xchg
or
xchg
push
mov
add
or
sbb
mov
or
pop
and
rolb
inc
mov
inc
cld
jb
adc
scas
lods
add
add
xchg
add
add
mov
cmp
movsb
dec
adcl
or
add
mov
sbb
jle
fmull
lret
inc
or
add
and
mov
dec
mov
shl
lcall
add
dec
addb
movl
fiaddl
hlt
mov
add
int3
scas
test
sahf
and
lock
xor
roll
adc
das
push
icebp
add
repnz
hlt
mov
inc
inc
cmp
and
add
dec
pop
mov
aam
mov
add
add
subl
sbb
inc
stos
and
mov
cmp
fdivrl
icebp
mov
mov
and
dec
lret
inc
icebp
and
add
cmp
xchg
xchg
cmp
loop
pusha
punpcklbw
adc
mov
ret
add
add
orb
xchg
pushf
sub
xor
add
mov
movsb
mov
jno
push
scas
add
sbb
lcall
sub
cs
and
push
pop
rolb
scas
xchg
ret
add
and
dec
mov
pushf
sub
jl
add
inc
mov
or
push
xchg
mov
lret
inc
pushf
loopne
adc
adc
or
mov
addb
xchg
dec
jno
mov
sbbb
enter
push
or
daa
and
add
sub
mov
inc
sub
add
xor
lods
mov
cmp
push
add
add
cmpl
add
addb
je
or
mov
xor
fsubl
adc
xchg
scas
add
xchg
add
add
mov
mov
add
in
add
dec
addl
mov
xlat
inc
add
lret
jae
mov
sub
push
test
and
dec
inc
and
xchg
nop
aas
dec
mov
xor
fdivs
pop
or
sub
xor
das
into
inc
cmp
mov
leave
cmp
cmp
or
orb
sbb
adc
sbb
adc
inc
sub
push
adc
pop
or
xchg
nop
pushf
sub
and
xchg
inc
or
mov
mov
ds
out
add
xor
add
cmp
scas
lds
jno
add
sbb
ret
nop
inc
mov
sahf
inc
test
lock
or
cmp
dec
mov
das
shll
dec
cmpl
and
adc
aad
das
cvttps2pi
push
add
adc
cmp
inc
or
sub
mov
mov
xchg
mov
or
mov
cmp
divl
add
in
dec
shlb
add
leave
loope
incb
mov
cmp
push
lret
jb
mov
rorb
mov
dec
mov
add
cmp
add
inc
sub
dec
mov
pushf
sub
aad
add
scas
mov
mov
pushf
sub
jmp
mov
pushf
sub
out
sub
int3
dec
andl
orl
dec
add
cmp
add
xchg
xchg
xchg
cmp
xor
roll
sub
imul
push
int3
add
mov
cmp
add
test
add
xchg
xchg
dec
add
xchg
dec
nop
loopne
dec
addb
xchg
dec
sbb
add
inc
add
inc
js
add
add
ret
cmp
loopne
xchg
sub
and
cmp
sub
cmp
cmp
add
mov
xor
mov
faddl
sbb
inc
dec
add
add
mov
lods
cmpb
add
xchg
scas
add
add
test
inc
add
lods
add
mov
dec
add
adc
lds
pop
xchg
add
jl
enter
sub
mov
and
adcl
cmp
addb
mov
cwtl
loopne
fmull
loopne
pushf
inc
pop
push
add
sub
aam
cmpb
sub
addl
addl
addb
add
add
in
scas
add
dec
je
add
adcb
roll
push
fdivrl
rcrl
orb
cmpl
cmp
pop
pop
lret
inc
dec
test
add
add
or
mov
add
mov
xchg
xchg
or
xor
loopne
sub
cmp
cmp
add
xchg
pushf
inc
sub
lret
lds
xchg
add
or
xchg
shll
movl
jg
cmp
inc
rol
or
dec
mov
int3
xchg
dec
or
mov
dec
and
adcl
push
mov
orb
andb
aam
or
cmp
fwait
lcall
cltd
push
rolb
jnp
scas
int3
negl
adc
add
add
cwtl
pushf
sub
lret
inc
mov
sub
rolb
dec
rolb
rorb
xchg
add
movsb
mov
dec
rolb
mov
inc
sub
scas
add
cmp
mov
in
incl
mov
xchg
dec
inc
add
dec
addb
dec
roll
push
add
xchg
inc
add
aas
std
cwtl
loopne
mov
test
pushf
sub
rclb
dec
add
and
out
adc
rolb
faddp
add
loop
add
subl
divl
orb
add
xchg
xchg
addl
push
inc
inc
add
in
xchg
inc
das
fsubs
xchg
add
scas
lock
or
pop
inc
or
outsb
add
mov
inc
sbb
mov
dec
mov
add
scas
mov
cmp
cmp
int
dec
pop
mov
lcall
add
cmp
dec
or
sub
dec
xor
cmp
addb
xchg
dec
dec
add
sub
mov
popa
addl
inc
xor
add
lret
jb
dec
roll
mov
or
sub
clc
mov
add
notl
test
in
add
sbb
lds
dec
add
or
add
adc
push
add
xor
or
inc
inc
adc
insl
cmpb
cmp
dec
dec
and
xchg
add
mov
cmp
xor
xor
inc
lret
sbb
xorl
xchg
cmp
incl
lret
aam
mov
jb
rorb
rclb
loope
xchg
loopne
add
or
add
stc
addb
mov
dec
adc
or
lds
dec
mov
jl
addl
sub
inc
addl
je
inc
addl
jl
inc
addl
icebp
hlt
xlat
and
sbb
cmp
pusha
add
sbb
add
jne
add
adc
xchg
xchg
sub
sub
add
loopne
inc
push
dec
ret
add
andl
mov
movsl
add
add
add
lcall
scas
mov
dec
jno
add
pushf
sub
iret
andl
outsl
add
add
or
add
roll
xchg
xchg
mov
dec
add
roll
xchg
rolb
test
pusha
xor
cmp
sbb
and
cmp
xorb
shlb
xchg
sub
add
lahf
sarb
shrw
or
mov
and
leave
les
sub
inc
push
int3
xchg
sub
loopne
outsl
jnp
mov
adc
nop
inc
jnp
loopne
nop
dec
jo
add
and
or
into
pusha
ss
movsb
jl
inc
mov
jg
jl
dec
fiaddl
and
addb
jl
sarl
add
inc
sub
mov
add
mov
xchg
mov
dec
jl
add
mov
adc
aam
add
roll
cld
cmpb
std
mov
inc
repnz
jle
jl
and
adc
push
mov
popa
add
loopne
sarl
mov
test
test
test
add
addl
mov
xchg
and
xchg
rclb
cmp
mov
and
inc
ret
add
cmp
jno
loopne
nop
add
xchg
push
and
scas
and
add
add
sub
popa
add
addl
shlb
xchg
mov
mov
pusha
int
sub
lock
outsl
sub
mov
xchg
push
add
mov
loop
scas
sub
and
or
and
nop
daa
aas
cmp
loop
mov
push
dec
and
sub
and
dec
pop
mov
cmp
fadds
sbb
or
mov
bound
iret
push
or
les
xchg
dec
push
loopne
or
sub
fisubl
cmpb
adc
adc
sub
xchg
sub
inc
cs
addl
or
addb
cli
in
inc
add
add
add
inc
pop
add
roll
mov
xor
test
adcl
dec
and
inc
sarb
lret
inc
mov
add
aaa
push
and
mov
push
fidivl
push
rolb
test
add
roll
lock
push
roll
roll
loopne
push
dec
roll
xor
repnz
jl
inc
sub
and
add
shl
rol
pop
mov
shl
dec
icebp
cmp
add
push
or
xor
loopne
lods
mov
xor
test
xor
push
mov
xchg
repz
dec
orl
add
mov
push
xchg
cld
dec
jae
inc
and
add
inc
push
xchg
pusha
ja
addl
or
insb
fmull
and
xchg
add
jle
test
cmp
or
xor
test
cltd
push
dec
xorl
popa
pusha
add
sub
mov
pop
jo
xchg
dec
sub
nop
add
test
inc
lret
test
cmp
sbb
push
sub
and
mov
loopne
push
rorb
mov
test
loope
nop
push
test
fsubs
add
bound
sub
jge
inc
mov
lock
lock
adc
fsubrl
fcoml
push
inc
in
inc
lret
test
cs
xchg
repz
test
and
test
add
enter
jl
addl
enter
mov
cmp
mov
push
add
data16
xor
cld
jl
icebp
add
rcrl
and
aam
dec
icebp
ss
loopne
pop
lods
sbb
xchg
cmp
les
mov
push
or
and
jo
addb
loopne
cwtl
loopne
and
sbb
inc
rol
add
pop
icebp
add
pop
dec
adc
loopne
andb
xor
pusha
movsl
aam
add
push
dec
enter
xchg
loopne
popa
add
cmp
cwtl
jl
roll
jle
roll
and
inc
add
adc
push
push
xchg
sbb
mov
call
pop
xor
das
shlb
xor
xchg
add
hlt
xchg
mov
sub
xchg
add
xchg
add
jl
xchg
add
lahf
add
sub
xchg
add
xchg
add
nop
add
jl
mov
inc
fwait
add
rorb
in
sub
nop
add
sbb
cwtl
pop
mov
loope
mov
inc
loope
inc
add
decl
add
mov
mov
std
pushl
fcoms
ret
sub
mov
inc
cmp
mov
inc
and
add
mov
scas
rcrl
in
nop
cmp
rorl
push
mov
push
das
lock
cs
fsubl
rorl
mov
shlb
and
cmp
adc
sub
mov
add
cmp
mov
add
add
sub
addb
xchg
sub
push
add
or
sbb
sbb
rcll
cli
mov
dec
mov
mov
xchg
cmp
cld
mov
adc
jl
leave
mov
sub
xor
add
and
loopne
ss
mov
or
dec
cld
xchg
and
xchg
mov
ficoml
rclb
inc
sub
nop
sub
pop
bound
mov
sar
mov
enter
push
xor
sub
sbb
sub
cs
push
xor
lods
xchg
fstl
mov
sub
stos
add
sub
lds
dec
push
add
mov
testl
cmpl
xchg
dec
add
add
adc
add
addl
mov
lcall
fucom
cmp
shlb
xchg
add
xor
and
and
xor
loopne
dec
lock
adc
adc
dec
loopne
bound
sub
add
inc
and
add
add
xchg
popa
mov
jmp
or
push
test
jl
cmp
sub
mov
mov
add
add
add
lds
lds
dec
mov
cld
jl
inc
add
mov
push
push
dec
mov
add
dec
and
xchg
dec
and
in
int3
xchg
cmp
lds
add
add
aam
add
lret
inc
js
add
add
add
dec
inc
xchg
loopne
add
xchg
add
call
add
and
adc
rolb
add
dec
mov
and
xchg
add
or
adc
arpl
sub
cwtl
add
add
cmp
loopne
sar
add
inc
in
sbb
gs
fldl
pop
add
add
cmp
pop
sub
add
add
mov
push
inc
add
out
add
clc
or
mov
and
inc
or
push
sub
addb
subb
mov
in
scas
add
add
loopne
andb
xchg
xchg
add
lock
ficoms
xor
and
andb
movb
add
inc
cmp
mov
nop
inc
add
mov
add
add
cmp
cmp
inc
add
cwtl
scas
mov
dec
jo
inc
cmpb
sub
and
faddl
pop
in
push
adcb
dec
dec
add
xchg
add
addl
movl
sub
scas
add
faddl
add
xchg
adcb
sub
movsl
lds
inc
add
mov
add
add
mov
loopne
cmpb
loopne
xchg
or
idivl
rolb
cmp
int3
adc
add
fadds
jp
lret
inc
push
addb
push
fsubrl
scas
add
call
dec
in
lods
xadd
popa
add
sub
jge
cmp
das
int
or
add
adc
lahf
dec
and
cltd
pop
xchg
dec
sub
add
inc
dec
xchg
xchg
dec
or
cmpsb
add
add
push
dec
xor
mov
inc
cmp
nop
lret
dec
dec
rorb
add
cmp
cmp
sub
add
add
xor
roll
add
add
add
cmp
addb
add
ret
add
rolb
jb
dec
mov
add
lret
jb
dec
ror
dec
add
icebp
add
call
mov
incl
int3
mov
add
add
out
cltd
int3
or
or
push
add
lret
jb
add
mov
call
mov
dec
enter
testl
rolb
cs
and
pop
xchg
xchg
xchg
scas
int3
testl
aaa
or
add
jns
add
add
lret
inc
call
sarl
or
add
add
add
jl
add
sarl
add
rorb
sub
cmp
and
inc
pop
sub
push
inc
add
inc
add
adc
insl
inc
add
inc
add
add
inc
add
into
rolb
aad
les
pop
inc
enter
addb
imul
inc
fucomip
inc
mov
filds
fisttps
in
sbb
push
mov
adc
lds
hlt
inc
pop
lret
inc
fildl
loope
es
popa
add
outsl
add
pushf
lds
dec
xor
cmp
cmp
inc
jle
add
jbe
add
call
or
mov
loop
dec
loope
add
add
inc
loopne
mov
hlt
xchg
push
sub
andl
xor
adc
sub
add
dec
cmp
and
lds
add
xorb
mov
xor
push
rolb
sub
cmp
add
inc
sbb
dec
mov
call
ret
push
add
dec
jge
imul
inc
imul
xchg
subb
cltd
lcall
out
loopne
cld
add
push
test
je
subb
push
adc
sub
sbb
push
pusha
add
push
loopne
loopne
add
add
cld
aad
mov
add
add
imul
and
dec
push
loopne
add
or
call
mov
pop
add
or
and
ret
incb
xchg
test
and
popa
xchg
fsubs
int3
dec
nop
loopne
lods
add
add
rorb
add
sub
inc
add
pop
inc
add
rcll
or
inc
add
lods
xor
xchg
mov
mov
sub
movsb
addb
pop
inc
xor
loopne
dec
mov
dec
mov
loope
jle
ds
popa
mov
mov
add
jl
mov
sub
push
mov
loopne
lret
inc
test
test
in
add
lret
inc
fwait
mov
lock
test
add
inc
clc
je
lret
inc
icebp
add
add
cmp
stos
pop
and
inc
inc
hlt
loope
fsubs
add
out
and
and
mulb
aam
pop
mov
or
add
loopne
inc
mov
push
aam
add
ret
into
adcb
sub
cmpb
rolb
add
add
rolb
add
mov
inc
add
dec
add
shlb
jmp
call
js
inc
outsb
push
popa
or
cld
add
add
mov
rolb
cmc
mov
inc
mov
pushf
testl
inc
lock
fldl
mov
adcb
mov
cmp
mov
sub
cmp
inc
shlb
dec
add
pop
xchg
sub
loopne
inc
les
int3
xchg
dec
or
bound
andb
adc
cmp
loopne
lret
inc
arpl
or
cmp
add
mov
test
sub
push
add
fwait
lcall
push
test
xchg
xchg
mov
jne
adc
add
and
aam
cltd
loopne
in
rolb
add
fidivs
and
out
add
rolb
test
inc
in
cmp
and
and
xchg
xchg
addb
xchg
subl
jo
push
sub
cwtl
sub
sarb
addl
mov
jo
enter
int3
xchg
xor
adc
nop
or
lcall
loopne
cmp
xchg
sub
xor
imul
pop
in
jo
pusha
inc
inc
dec
push
or
or
cmp
adc
ret
roll
mov
mov
rcl
add
jl
roll
and
roll
call
cmp
aam
adc
xchg
int3
xchg
push
div
sub
pop
ret
jo
out
add
mov
popa
add
xchg
jnp
push
andb
mov
xchg
bound
jp
xor
pusha
add
pop
mov
mov
cld
inc
mov
sub
sub
pop
add
push
add
sqrtps
hlt
pop
add
sub
mov
xor
mov
sbb
mov
aad
fsubrl
cltd
jo
pop
sbbb
pushf
sub
xor
daa
mov
inc
pop
inc
add
xchg
mov
cmp
aam
mov
loopne
jbe
mov
mov
inc
adc
inc
sub
xchg
inc
jne
das
or
aaa
cmpsb
ret
and
in
sarl
jae
and
in
or
add
adc
dec
inc
sub
add
sbb
add
jl
rorb
add
jl
shlb
addb
jl
sbb
mov
lret
addb
jl
mov
add
push
xchg
addb
push
jl
and
add
push
xor
add
es
arpl
add
les
mov
shrb
add
pop
jl
and
add
scas
and
pop
jl
xchg
adc
fs
and
xor
data16
xor
jl
jecxz
bound
ja
adc
insb
jl
in
ret
jl
and
pushf
rolb
adc
jl
inc
pop
addb
jl
mov
add
jl
roll
jb
dec
sub
add
jl
jle
addb
jl
inc
dec
addb
jl
adc
dec
adc
test
addb
jl
orl
jl
and
add
jl
mov
mov
jo
or
jl
sub
add
or
xor
add
jl
inc
fwait
adc
adc
mov
mov
addb
jl
pusha
xor
xor
adc
adc
sbb
test
jl
xchg
addb
sbb
addb
jl
inc
rolb
stos
addb
or
addb
jl
mov
addb
jl
jo
add
nop
jno
add
jl
jp
add
sub
addb
jl
arpl
pop
mov
inc
outsl
addb
or
mov
mov
jl
mov
jl
sub
adc
jl,pt
mov
add
cmp
addb
jl
inc
pop
addb
jl
pop
addb
or
addb
jl
xor
addb
jl
push
addb
jl
ficoms
add
adc
andl
dec
mov
add
aam
push
jecxz
jl
arpl
adc
sarb
addb
jl
subl
int
add
mov
addb
jl
loopne
and
xor
inc
dec
mov
jge
sub
add
std
addb
jge
and
xchg
mov
sbbb
in
mov
push
mov
rorb
mov
mov
jge
lock
jl
push
xor
and
ret
jl
xorl
cli
jge
nop
arpl
stc
rolb
test
add
jge
adc
push
dec
test
or
addb
scas
mov
lock
addb
in
and
rcll
add
sbb
xchg
mov
data16
addb
jl
ret
push
mov
xchg
jl
and
adc
sahf
jl
and
addb
jl
mov
pop
mov
ret
cmpsb
sub
int3
and
cmpb
xchg
lods
jl
repz
sbb
adc
test
je
rcll
add
mov
xchg
shlb
mov
dec
daa
mov
push
repnz
add
dec
or
add
mov
es
lock
movl
cmp
inc
cmp
mov
dec
inc
dec
mov
push
mov
pusha
inc
dec
repz
jecxz
dec
add
dec
jo
mov
add
mov
iret
add
inc
mov
mov
aad
xor
adc
mov
add
popa
iret
add
mov
pop
xchg
dec
sub
cmp
inc
sub
xchg
xchg
xchg
dec
mov
loopne
jl
add
add
ds
sbb
inc
add
dec
and
testl
lods
orl
scas
add
scas
lds
loopne
dec
add
sub
dec
add
fwait
lcall
mov
pop
add
add
xchg
xchg
dec
ss
add
cmp
cmp
call
mov
add
inc
add
lret
inc
jecxz
cmp
ret
inc
xlat
dec
xchg
int3
dec
dec
add
inc
inc
cmp
cmp
add
inc
add
xchg
sub
mov
add
dec
sbb
cmp
adc
sbb
inc
lds
add
dec
mov
xchg
xchg
cmp
add
adc
adc
add
dec
int3
dec
xchg
sub
xchg
sub
xchg
fadds
adc
add
mov
push
jl
add
dec
xor
add
cmp
scas
add
pushf
dec
or
sahf
lds
add
jl
add
lods
add
add
xchg
dec
adc
andb
mov
and
and
lods
addb
xor
dec
mov
js
js
sbb
xchg
sbb
sbb
sbb
icebp
sbbb
sbbl
je
jns
sbb
xchg
and
mov
sub
sbbb
dec
sbb
negl
dec
mov
pop
jl
sbbl
orl
xor
sub
mov
add
dec
cmpl
xor
incl
lret
inc
push
add
mov
inc
dec
add
pushf
inc
add
add
mov
std
mov
dec
mov
cmp
add
mov
inc
inc
add
int
pop
xchg
xorb
cmp
mov
inc
add
scas
rcrl
add
test
add
sub
add
xchg
cmp
mov
dec
add
mov
xchg
adcb
rclb
faddl
int3
mov
mov
rcrb
lds
cmp
add
lahf
andl
add
sub
rolb
sub
inc
add
sub
rolb
cltd
adc
push
add
cmp
int3
dec
xchg
add
xchg
int3
fwait
lcall
rolb
cmpsb
inc
sub
add
rcll
dec
add
mov
dec
jo
add
cmp
add
sub
sub
add
loopne
xchg
jl
inc
add
add
jl
or
inc
add
jl
roll
lods
inc
add
push
add
rolb
loopne
add
rolb
dec
cmpl
add
rorb
dec
js
cld
rolb
add
jl
rolb
sub
lds
inc
adc
mov
rclb
dec
add
clc
movl
add
add
enter
loopne
add
cmp
inc
add
cmp
mov
enter
mov
mov
dec
mov
jo
and
cmp
int
mov
aam
sub
sahf
xchg
scas
int3
lods
sub
nop
xchg
sub
rcrb
add
add
and
add
xor
add
js
dec
add
add
add
sti
sub
add
fnsave
add
add
ret
testl
inc
inc
mov
cmp
adcb
add
push
rol
dec
xor
mov
inc
cmp
inc
cmp
incl
add
into
mov
and
loopne
dec
push
das
ret
add
add
pusha
add
enter
add
mov
inc
cmp
mov
inc
cmp
and
loopne
mov
rcrb
add
add
lret
push
add
das
jb
testl
inc
cmovne
push
shl
push
xchg
testl
or
cwtl
popa
add
mov
mov
test
fadds
in
pop
fdivp
add
frstor
incl
sbb
leave
add
sbb
pop
push
enter
test
inc
cmp
cmp
testl
shlb
add
dec
test
dec
add
xorb
int3
xchg
sub
popf
add
arpl
xchg
xchg
lret
jae
int3
xchg
dec
add
mov
lret
add
dec
mov
cmp
imul
lret
imul
push
dec
add
cmp
enter
ss
push
lret
imul
imul
dec
mov
jae
decl
sbb
inc
pop
andb
add
rolb
enter
sbb
mov
dec
and
enter
pop
rolb
add
insl
lret
jb
test
or
lds
or
mov
dec
mov
dec
addl
mov
lds
aam
pop
das
ret
xlat
dec
aad
xchg
sbb
and
das
call
sar
or
mov
scas
add
dec
mov
inc
adc
adc
inc
push
lcall
sub
and
notl
add
cmp
sub
dec
xchg
xor
xchg
sbb
mov
ror
dec
dec
inc
inc
add
int3
dec
xchg
sbb
add
dec
mov
dec
xchg
cmp
adc
lret
dec
mov
xchg
add
enter
cmp
and
addb
xchg
adc
add
dec
xor
incl
mov
dec
cltd
xor
add
cltd
aam
push
lret
roll
cmp
aam
mov
mov
dec
add
mov
scas
xor
mov
int3
mov
das
add
inc
mov
aam
lds
sarb
and
sub
add
xchg
add
dec
xchg
xor
xchg
cmp
add
imul
lret
imul
sbb
int3
inc
add
and
ret
mov
and
mov
mov
mov
dec
mov
orb
lret
imul
jb
xor
add
mov
mov
dec
mov
dec
add
repz
add
or
into
or
add
and
add
cmp
push
movl
lds
or
and
incl
mov
mov
xchg
adc
and
fsubp
add
roll
xor
add
shlb
cltd
faddl
adc
decl
loopne
cmp
loopne
xor
mov
adc
cmp
add
pop
add
jns
push
lds
sub
and
add
dec
mov
int3
dec
add
lock
or
das
xor
movsl
sub
mov
xchg
xchg
dec
and
add
xchg
aam
or
divl
add
cmpl
jl
mov
call
add
sbb
or
nop
dec
mov
das
adcl
and
call
dec
shll
or
adc
add
popf
dec
mov
dec
mov
incl
xor
or
cltd
sbb
jae
sub
lret
jae
sub
int3
xchg
inc
mov
sub
adc
adc
push
mov
adc
mov
sbb
lret
ret
add
dec
mov
dec
cltd
sbb
mov
cmp
or
xor
add
lds
cmpl
mov
add
dec
xchg
cmp
incb
cmp
and
mov
inc
add
dec
addl
mov
cmp
or
mov
or
sbb
jno
mov
add
and
incl
cmpl
mov
xchg
add
inc
mov
roll
mov
incb
and
dec
ror
adc
dec
add
cmp
lret
add
inc
rcrb
lret
int3
inc
mov
ret
mov
inc
mov
add
add
enter
dec
rclb
add
add
dec
xchg
aas
subb
enter
adc
ret
cmp
lret
les
mov
push
rorb
rorl
push
vmptrld
mov
repnz
add
adc
add
adc
ret
lds
add
sub
aas
cmp
add
sbb
adc
add
add
aaa
inc
subl
sub
adc
inc
incl
adc
inc
test
inc
test
jl
dec
mov
add
lcall
jmp
xchg
xor
cmp
arpl
loop
and
and
cmp
loope
or
xor
or
lret
jae
into
mov
nop
addl
cmp
rolb
je
adc
inc
dec
mov
jo
mov
mov
mov
mov
mov
and
mov
les
jno
mov
inc
rcrb
les
add
or
loop
insb
dec
mov
sub
mov
jecxz
sub
dec
xchg
xor
xchg
cmp
or
sub
mov
sub
aas
call
push
and
cmp
sbb
mov
inc
cmp
test
cmp
fidivrl
addr16
cmp
test
pop
mov
mov
or
cmp
pop
das
fmuls
mov
mov
add
mov
cltd
int3
and
cmpb
aam
cmp
mov
add
cmp
mov
pop
lret
dec
inc
add
cmp
sub
add
inc
sub
lods
cmp
mov
mov
mov
sbb
js
pop
mov
mov
or
mov
cmp
add
cltd
adc
mov
sub
and
cmp
sub
sub
cmp
shrb
dec
enter
inc
mov
mov
and
es
adc
push
les
adcl
cwtl
add
sub
mov
lret
jae
shlb
xor
mov
cmp
popa
and
add
nop
add
add
jo
dec
add
inc
add
inc
inc
cmp
add
js
and
adc
ds
andl
jae
nop
add
push
int3
nop
add
and
or
sbb
add
fidivs
lret
jae
inc
add
lret
cmp
lds
add
add
inc
push
mov
xor
cmc
addb
mov
mov
call
add
sbbl
cmp
add
push
xor
inc
cmp
push
inc
adc
inc
add
cmp
inc
xor
insl
push
inc
cld
inc
add
sub
adc
dec
mov
push
inc
cmp
cmp
xor
pop
inc
push
push
xor
js
jae
xor
aas
xor
xor
js
dec
mov
and
inc
je
dec
out
add
data16
xor
sub
outsb
xor
jb
and
dec
shll
inc
inc
bound
jo
and
inc
and
enter
xchg
mov
add
ds
inc
sub
add
jecxz
mov
aas
lret
sbb
enter
xchg
jl
dec
mov
sub
jl
les
sub
jl
add
sbb
mov
mov
inc
aas
push
test
aas
sub
aas
shrb
dec
mov
aas
sub
cmp
les
add
or
sbb
adc
and
inc
mov
mov
pusha
add
inc
add
in
mov
mov
sub
dec
in
mov
and
xchg
and
push
push
inc
and
sub
movsb
inc
dec
lock
xchg
inc
and
cmp
mov
xchg
inc
and
and
nop
inc
inc
and
inc
and
pop
inc
andb
scas
inc
add
jle
inc
push
jle
cmp
jle
inc
push
jle
inc
dec
mov
xchg
inc
pusha
cmp
jg
das
mov
push
dec
orl
orl
add
incl
xorl
dec
add
mov
lret
jae
sub
cmp
sub
add
sub
xor
cmp
dec
cmpl
inc
mov
sbb
push
and
dec
xchg
xor
dec
clc
fiaddl
add
dec
adcl
lds
adc
mov
add
mov
dec
dec
sbbl
sbb
sarl
add
roll
and
mov
ret
add
dec
sbbl
mov
cmp
adc
rolb
add
mov
inc
add
andb
andl
add
sbbl
inc
mov
add
add
movb
rcr
adc
cs
adc
lds
or
dec
adcl
add
dec
addb
movl
add
rolb
lret
inc
data16
add
inc
lret
int3
inc
mov
ret
mov
inc
mov
mov
lock
ret
dec
enter
add
sbb
add
dec
mov
js
sub
dec
mov
and
int3
enter
cmpl
mov
rorb
cmp
xchg
add
cmp
and
add
decb
movsb
mov
or
ret
lds
cmpsl
dec
cmpl
sub
aaa
add
movb
sub
je
add
xor
addl
sub
or
aam
addl
cmp
inc
subl
test
lret
dec
in
or
fwait
dec
add
add
enter
aam
inc
push
add
xchg
dec
add
negl
std
add
xchg
int3
dec
add
notl
add
cmp
jb
test
addl
sbb
cltd
rolb
mov
dec
sbb
xchg
rolb
dec
fwait
test
or
or
mov
incl
ss
dec
fisttpll
add
das
in
inc
adc
movb
fisttpl
add
shlb
add
or
inc
and
cmp
add
lcall
or
mov
lret
jae
xchg
roll
xchg
xchg
testl
mov
inc
loop
add
lret
jae
add
pushl
lret
inc
fldl
add
test
adc
jae
dec
add
mov
add
dec
cltd
sbb
inc
sub
or
subb
scas
movsb
lcall
xor
rorl
xor
ret
dec
xorl
lret
inc
mov
mov
lret
sub
mov
add
xor
ds
imul
ret
jae
dec
xchg
add
dec
andl
adc
adc
adcb
xor
mov
lret
inc
in
adcl
adcb
fiaddl
int3
lret
jae
add
jae
and
cwtl
aad
or
sbb
imul
mov
movl
mov
imul
dec
mov
inc
std
add
sbbb
inc
imul
cmp
dec
xor
pop
lret
inc
jle
add
add
bound
add
mov
add
shr
or
or
rol
aam
inc
add
mov
mov
jmp
aaa
mov
sub
cmp
dec
or
adc
sub
add
add
fld
sub
add
mov
mov
inc
add
incl
mov
mov
inc
decl
mov
sub
fmul
inc
repnz
and
call
sbb
or
or
or
inc
add
shl
sub
or
subb
lods
add
loopne
add
inc
mov
lds
aas
das
into
dec
mov
orb
cmc
dec
cmpl
add
sbb
lea
add
lret
inc
push
jge
pop
and
movl
int3
mov
movsb
and
pusha
add
add
shlb
fs
dec
xchg
xchg
or
int3
rorl
lret
cmp
js
xchg
sub
add
xchg
add
mov
mov
mov
add
inc
mov
cmp
mov
dec
xchg
adc
jae
addl
sub
cmp
cmp
in
test
mov
xor
inc
add
sbb
add
leave
dec
mov
cmp
sbbb
xor
mov
dec
cltd
or
adcb
popf
inc
add
inc
pop
mov
scas
lcall
loopne
scas
rorb
enter
mov
and
and
mov
add
mov
lods
sbb
mov
sub
inc
and
shl
subb
dec
divl
cmp
and
mov
inc
add
mov
lahf
or
testb
add
dec
nop
loopne
shlb
int3
or
int3
pusha
add
addl
xchg
scas
nop
dec
cmp
and
andl
inc
add
add
inc
mov
and
orl
add
lret
inc
popa
inc
add
jae
int3
xchg
xchg
xchg
cmp
shll
test
inc
sbb
in
mov
adc
add
int3
xchg
xchg
sub
in
test
add
inc
xorb
int3
loopne
loopne
mov
add
addb
dec
mov
or
jb
loope
or
or
and
loopne
dec
or
addb
loopne
inc
dec
and
and
je
add
int3
lret
push
add
and
clc
lds
lret
cmp
mov
add
add
add
addb
xor
pusha
inc
das
fisubs
inc
cmp
mov
popa
add
cmp
popa
add
cmp
dec
addb
xchg
dec
and
dec
orl
loopne
mov
sub
loop
call
loopne
xor
loopne
scas
aam
xchg
dec
xor
sub
shlb
dec
xor
addb
imul
add
addb
dec
sbb
inc
and
cmp
shll
dec
add
add
lock
or
inc
shrl
add
testl
xor
push
shlb
or
sub
dec
rolb
fsubrl
loop
mov
xchg
sub
mov
cmp
js
inc
lds
dec
xor
add
add
dec
or
adc
push
add
int3
sub
add
cmp
dec
sub
add
dec
faddl
mov
xchg
sub
mov
popa
dec
jmp
mov
add
arpl
loope
sbb
mov
mov
xchg
subb
add
add
ret
inc
add
add
lods
test
add
scas
enter
push
xor
add
add
add
sahf
adc
jge
nop
add
test
lds
and
inc
dec
mov
or
idivl
dec
orl
or
jb
dec
add
int3
sub
and
add
iret
pop
lock
sarl
jo
jge
add
mov
inc
mov
mov
sub
dec
add
dec
xorl
loopne
lock
push
dec
add
jg
adc
pop
add
adc
add
es
and
iret
push
dec
mov
sub
mov
mov
rorb
pop
daa
ret
add
dec
xchg
or
push
push
orl
mov
lret
push
push
push
dec
jl
add
and
pusha
or
and
xchg
enter
inc
or
add
xorb
inc
nop
or
dec
cmp
cmp
inc
dec
loope
add
or
inc
add
jb
inc
int
xor
dec
andl
push
int3
mov
pop
loopne
into
adc
and
add
add
out
subl
dec
and
cmp
fs
sub
adcb
push
add
insb
int3
scas
push
fmull
pop
add
test
add
pop
mov
shlb
sub
sbb
nop
add
inc
xor
xor
pop
adc
xor
dec
mov
adc
rolb
dec
cltd
cmp
dec
cltd
xor
cltd
cmp
xor
lcall
lret
inc
push
add
add
lods
shll
inc
testl
inc
cmp
lret
inc
jl
add
cmp
push
roll
sarb
add
std
mov
add
mov
cmp
shrl
rcrb
cmp
sbb
mov
dec
mov
scas
pop
int
dec
mov
mov
mov
add
add
lock
jo
and
add
andl
add
lds
sub
jno
mov
cmp
int
cmovns
xchg
into
scas
int
adc
xchg
sub
rorb
subl
int
cmpl
xor
or
inc
jmp
mov
or
inc
adc
sub
cltd
int3
add
das
xchg
dec
adc
test
sub
push
add
pop
lret
jb
xlat
mov
sub
xorb
add
xor
adc
add
push
xchg
scas
sub
xchg
les
frstor
pusha
add
mov
dec
add
cs
aam
push
dec
adc
iret
and
iret
loopne
les
dec
sbb
pop
lret
adc
sub
mov
xchg
push
xchg
sub
push
ret
or
inc
add
add
les
xchg
cmp
add
sub
and
xor
aam
inc
je
add
and
or
cmp
mov
rolb
sbb
std
xorl
sbbb
add
mov
jp
xor
add
sbb
mov
dec
sbb
inc
and
decb
add
aam
or
push
add
ret
das
lret
enter
ror
and
rolb
das
add
inc
add
xor
aam
add
adc
decb
add
lret
push
add
inc
and
inc
add
iret
xor
xorl
inc
or
int3
inc
arpl
push
mov
aam
add
scas
adc
dec
xorl
sub
xchg
nop
ja
adc
lret
jae
xor
or
fsubl
xchg
scas
ret
sub
mov
xor
mov
push
jb
loopne
push
and
pop
inc
es
pop
iret
adc
cmp
xchg
dec
iret
or
mov
rcrb
pusha
add
shrb
inc
add
inc
add
icebp
inc
add
pop
or
adc
pusha
lret
push
testl
cmp
inc
add
mov
mov
mov
add
cltd
cmp
mov
cmp
xchg
mov
test
or
xor
adc
sub
xorb
xor
jnp
lea
or
daa
inc
ret
inc
dec
push
add
scas
rorl
inc
add
push
pusha
add
loope
inc
mov
sub
inc
push
dec
mov
mov
add
push
lret
jae
add
mov
jo
clc
movsb
pop
lahf
add
push
cmp
dec
pop
sub
jmp
add
mov
xchg
incl
pusha
mov
enter
dec
add
sbb
and
inc
daa
add
aaa
lret
jb
movl
iret
xor
cmc
add
subb
push
mov
dec
mov
dec
mov
decl
dec
orl
es
dec
xor
xor
xor
sub
out
add
add
popa
iret
adc
adc
inc
cmp
mov
inc
mov
call
add
cli
add
dec
sbb
and
sub
adc
add
fmuls
add
scas
xchg
dec
sub
dec
rcll
sub
and
scas
inc
and
push
add
mov
ret
int3
mov
inc
mov
xchg
and
jl
sbb
js
sbb
jno
addl
xchg
dec
xor
xchg
add
rolb
dec
xorl
or
inc
mov
push
dec
das
ret
scas
add
lea
dec
xor
xor
out
loopne
das
rolb
add
add
iret
ret
sub
rolb
mov
add
cmp
shrb
add
test
add
inc
mov
push
cmp
enter
xchg
add
dec
or
inc
sub
xchg
mov
mov
int3
inc
or
sub
add
push
add
mov
das
roll
inc
add
jle
ret
add
out
jge
add
add
incl
in
add
fyl2xp1
add
add
stc
add
add
add
add
add
mov
scas
add
das
ret
das
scas
add
das
sar
add
add
adc
stc
add
add
xchg
push
add
xchg
scas
add
inc
add
scas
add
mov
cmp
pushf
add
cmp
mov
scas
add
sub
cmp
cmp
add
xchg
cmp
push
push
add
add
int3
pusha
add
xor
cvttps2pi
test
dec
ret
dec
add
dec
add
and
subb
addb
add
jl
rolb
cmpl
stc
add
inc
add
int3
dec
movsb
dec
cli
orb
orb
orb
sub
orl
dec
repnz
xchg
addl
adc
adc
xchg
lods
rolb
dec
mov
xchg
inc
dec
jno
cmp
cmp
lds
add
pop
addb
mov
inc
add
rolb
add
inc
cmp
orb
dec
xchg
dec
mov
addl
jne
fwait
inc
add
aad
mov
add
sub
cmp
cmp
or
adc
cmp
in
add
add
mov
scas
add
int3
xchg
or
mov
sbbb
mov
cmp
xadd
add
mov
inc
cmp
cmp
divb
addb
movb
add
mov
sub
mov
adc
mov
adc
test
adc
movl
loopne
adc
inc
adc
add
andl
sub
incl
adc
xchg
sub
shlb
testl
add
std
dec
and
aam
xchg
mov
mov
out
scas
pushf
das
ret
add
das
testl
pop
xchg
inc
and
into
roll
xchg
rolb
add
lcall
pop
aam
dec
fcmovb
inc
rorl
dec
outsl
mov
xadd
add
dec
inc
push
xchg
xchg
xchg
lods
or
shll
mov
adc
mov
add
cmp
call
mov
xchg
inc
add
xchg
dec
mov
scas
add
rolb
jmp
add
incb
add
divl
add
orb
or
addb
inc
mov
cmp
adc
xchg
shlb
sub
aas
inc
dec
inc
mov
mov
cmpsl
add
xchg
cmp
mov
pop
mov
test
cmp
xchg
dec
sbbl
add
add
js
add
les
dec
mov
inc
and
mov
jp
shrb
rcl
add
mov
rorl
inc
enter
cmp
cmp
or
popa
inc
outsb
inc
lods
adc
and
rcll
mov
inc
dec
loopne
nop
xchg
dec
icebp
push
pusha
add
cmp
lods
sub
add
and
addr16
rolb
cmp
add
test
mov
pushf
and
and
lcall
test
stc
loope
mov
std
stc
mov
incl
mov
xchg
lods
push
add
int3
add
mov
adcl
movsb
addl
push
adc
lds
add
and
mov
cmp
sub
pop
rcrb
fldl
push
sbb
sbb
int
add
cld
add
add
inc
xor
inc
push
or
jle
testl
add
bound
lods
movl
mov
lret
push
add
add
add
mov
rorb
aam
dec
int3
testl
mov
and
dec
dec
loope
popl
xchg
sub
loopne
add
mov
inc
add
inc
add
imul
add
add
addl
add
add
push
outsl
test
dec
add
inc
pop
loopne
add
lock
ret
jns
dec
cmp
iret
xchg
sub
cli
add
sub
cmpb
dec
add
dec
mov
xchg
mov
ljmp
add
cmp
pop
lret
dec
pusha
inc
inc
add
int3
sub
loopne
dec
mov
lret
dec
dec
mov
mov
sub
or
repz
cltd
shlb
test
dec
inc
nop
add
cmp
add
out
add
daa
das
dec
mov
mov
xorl
loope
mov
call
inc
loope
and
xchg
xchg
lods
sbb
test
addb
in
subl
add
ret
sub
repz
mov
lds
lcall
add
call
pusha
xchg
dec
sbb
inc
test
add
sbbl
inc
addl
cmpb
rcrb
push
inc
sub
xchg
add
daa
shrb
xor
xor
add
dec
mov
sub
mov
add
andl
mov
test
add
mov
dec
xorl
test
int3
scas
lds
pusha
addb
mov
mov
dec
xorl
xchg
cmp
and
ret
or
xor
or
hlt
dec
xor
cmp
popa
pop
popf
xchg
sub
repnz
rorb
mov
mov
or
inc
pop
and
xor
cmpl
orb
enter
add
cmc
rorl
roll
lea
cmp
inc
and
das
sub
mov
mov
scas
adc
dec
inc
cwtl
add
dec
andl
lds
orb
scas
dec
inc
sahf
push
add
xchg
and
adcl
add
mov
jbe
jo
movsb
cmp
shrb
cmp
xor
sub
xor
shrl
and
sub
loopne
nop
or
push
rclb
rorb
cmp
iret
add
rolb
jl
insl
aam
movsb
or
jo
sbb
add
xor
aaa
cmpl
add
jno
dec
inc
rclb
shlb
or
xor
loopne
xchg
xchg
and
xchg
sub
add
add
push
addb
aas
and
add
sub
or
cmp
xor
cld
cltd
aas
lret
add
loope
add
jb
aas
xchg
orb
cmp
cmp
xor
into
movsb
add
into
mov
add
rcl
mov
incl
mov
testl
inc
add
cmp
jp
xor
movl
adc
sbb
push
add
inc
mov
aam
dec
lds
inc
push
add
add
or
xchg
scas
rcrb
sub
hlt
add
and
inc
mov
push
add
lds
enter
add
add
into
add
dec
mov
xor
or
inc
iret
rolb
mov
inc
pushf
mov
inc
fadds
sbb
and
inc
repz
cli
nop
add
lret
add
and
ds
inc
xor
mov
dec
roll
inc
add
sub
or
icebp
adc
cld
pop
cltd
inc
push
cmp
add
sarb
aas
ret
adc
add
mov
shll
xchg
mov
xchg
dec
cltd
or
sar
add
sub
add
add
orl
lret
jb
dec
mov
jl
mov
mov
dec
test
fsubs
push
xor
push
inc
ds
movsb
mov
mov
cmp
sub
cmpsb
cmp
and
divl
mov
add
lds
add
mov
dec
pushf
inc
fmull
shrb
lock
adc
cmpxchg
rorl
scas
popf
mov
daa
mov
xchg
xchg
int3
sub
adc
rolb
xchg
push
xchg
jp
lock
and
mov
lcall
aas
add
cltd
xor
inc
fdivs
je
mov
punpcklbw
mov
inc
jg
mov
popa
add
aaa
mov
jl
inc
and
dec
xorl
xorl
sbb
adc
inc
or
sub
cmpl
sub
cmp
lods
push
cmp
sbb
push
inc
add
mov
lods
mov
dec
pop
addb
dec
pop
hlt
push
add
mov
sub
mov
addr16
andl
mov
add
sub
testb
aas
mov
or
add
mov
jo
adcb
gs
inc
inc
cmp
lret
inc
out
addb
adc
inc
dec
in
bound
cmp
adc
xor
pusha
cltd
sbb
inc
shl
add
daa
jno
fcoml
push
add
inc
or
rolb
sub
inc
add
test
xchg
lods
popa
pop
xchg
rorb
rorb
and
add
adcl
je
add
inc
pop
xor
gs
add
add
clc
lock
dec
mov
and
aaa
lret
dec
mov
nop
ret
mov
inc
adc
mov
lret
inc
xchg
xor
add
mov
dec
inc
fmull
adc
inc
adcl
mov
fbstp
inc
lock
mov
cmc
jno
lret
inc
fiaddl
addb
lret
inc
shl
add
std
fcmovne
inc
iret
addb
cltd
inc
sbb
je
dec
les
mov
push
add
adc
pop
push
pop
icebp
push
add
sub
inc
loop
pusha
das
mov
or
jb
lods
loopne
xor
pop
inc
cmp
inc
cmp
xor
inc
cmp
lret
dec
addb
pushf
loopne
loope
lock
mov
sub
hlt
loopne
mov
sub
add
test
stos
inc
add
jb
dec
mov
and
xor
add
dec
rorl
push
add
add
arpl
dec
pushf
shl
add
adc
xchg
xchg
dec
sbbl
push
addl
push
divl
dec
adcl
xlat
push
cmp
mov
cmp
dec
mov
xchg
dec
mov
sub
aaa
and
sub
mov
adc
and
cmp
jo
das
jmp
cmp
lret
dec
into
jle
add
test
rorb
xchg
add
push
aam
add
jmp
push
int3
add
inc
pop
mov
mov
push
cs
xor
shlb
xchg
sub
popa
pop
int
pop
dec
xor
rclb
jno
add
inc
sub
lock
dec
subl
push
testl
cwtl
add
into
dec
add
mov
ret
xorl
dec
addl
test
sbb
dec
inc
or
rorl
inc
add
cmp
sub
mov
icebp
js
sbb
adc
aaa
out
add
cmp
add
sub
pop
and
xchg
push
std
mov
xor
mov
or
dec
mov
adc
cmp
inc
and
or
mov
adc
dec
adc
das
mov
mov
mov
dec
inc
adc
xchg
dec
mov
xchg
sub
ljmp
inc
adc
cmp
cmp
nop
adc
push
xchg
lock
pop
dec
subl
push
add
pusha
inc
add
cmp
dec
popa
cmp
add
cmp
inc
rolb
adcb
test
inc
add
lret
dec
cmp
cmp
add
push
inc
add
das
lret
cmp
mov
add
dec
cltd
aas
xchg
sub
sbb
add
dec
mov
sub
add
sub
aas
add
add
add
inc
std
shll
mov
scas
aam
inc
inc
add
ljmp
rorb
scas
lds
sub
mov
mov
inc
inc
cmp
lret
inc
dec
add
add
mov
sub
ret
xor
jo
inc
cmp
mov
mov
int3
xchg
dec
adcl
inc
add
dec
orl
xchg
xor
xorb
xchg
add
inc
or
add
aas
add
add
dec
and
add
add
cmp
outsl
xchg
cmp
add
add
xchg
add
dec
mov
or
inc
add
das
repnz
sub
xor
pop
xchg
subb
cmp
lds
sub
add
or
pop
and
dec
cmpl
inc
jns
cmp
inc
mov
inc
ja
add
cmp
adcl
push
or
dec
sub
sub
inc
mov
xorb
rol
dec
cmpl
xchg
cmp
adc
mov
cmp
test
leave
add
das
sti
cmp
inc
add
das
sub
sub
dec
cmpl
and
inc
mov
dec
addl
dec
xorl
xorl
addl
mov
or
add
push
aam
cmpb
sub
adc
add
xchg
add
cmp
testl
idivl
xchg
dec
addl
pushf
dec
mov
add
sub
mov
add
leave
testb
mov
orb
push
xchg
testl
pop
and
das
sbb
and
loope
add
cmp
dec
adc
iret
push
dec
adc
add
add
add
es
iret
push
mov
mov
ss
inc
inc
inc
add
add
mov
rclb
inc
icebp
or
movsb
inc
add
adc
addb
lcall
jo
xorl
inc
inc
pop
xchg
dec
addb
test
das
testl
inc
mov
add
fdivr
xor
dec
sbb
rolb
rolb
xchg
sub
out
add
or
rcll
pushl
mov
sub
test
in
cmpb
aam
inc
and
xchg
sub
orb
movb
mov
jb
and
mov
inc
outsb
shrb
mov
int
xor
lds
adcl
add
daa
cmp
test
sub
add
dec
ret
ret
mov
xor
sub
cmpl
sub
add
andb
inc
adc
inc
pop
xchg
sub
mov
or
mov
sahf
or
adc
test
int3
sub
add
sub
shrb
mov
shll
push
or
xchg
add
push
add
and
adc
adcl
inc
mov
rorb
into
orb
and
int3
xchg
sub
and
das
lret
leave
test
das
add
sub
loopne
sarb
lds
push
add
loop
cwtl
xchg
sub
inc
pop
mov
pop
add
cmp
xchg
xchg
xchg
dec
xor
negl
xchg
dec
and
xchg
and
inc
or
mov
inc
inc
mov
mov
cmp
das
leave
roll
roll
mov
sub
mov
pop
lahf
dec
and
cmp
xor
xchg
add
xchg
xchg
jp
add
add
add
inc
mov
cmp
xchg
scas
lds
inc
test
roll
aam
cltd
add
rol
push
xchg
xchg
dec
mov
ffree
add
adc
movl
rolb
add
incl
xor
add
sub
in
and
xchg
sub
int3
mov
cmp
and
push
or
add
mov
xor
xor
sub
in
addb
fwait
adc
or
setb
add
test
dec
inc
push
sub
push
loopne
push
sahf
shlb
add
dec
nop
and
cmp
push
leave
popa
add
testl
add
add
lcall
scas
in
sub
and
lcall
add
pop
mov
lds
sub
push
adc
and
and
ret
loopne
xchg
sbb
faddl
sbb
loopne
adcb
loope
inc
scas
lds
mov
and
xchg
lea
inc
sbb
add
xor
add
fwait
daa
xorl
call
enter
xchg
negl
idivl
mull
add
cltd
cmp
sub
popl
lds
incl
mov
xor
mov
dec
int3
inc
add
aas
mov
adc
lret
mov
shlb
cmp
adc
add
aas
mov
je
sub
cld
cltd
int3
mov
inc
sti
int3
add
dec
xorl
enter
sbb
and
dec
cltd
or
cltd
enter
and
inc
cmp
shlb
sub
popf
and
or
mov
mov
test
addb
int3
xchg
dec
adc
or
scas
add
lahf
inc
cmp
xor
xlat
xchg
dec
mov
adc
loope
iret
lds
sub
rorb
addb
addb
add
sub
mov
sbbl
xor
mov
sub
add
sub
addb
inc
mov
dec
mov
dec
inc
sbb
push
xchg
add
mov
sbb
adc
add
add
inc
sub
add
sbb
filds
xor
xchg
loope
and
xchg
les
sub
xchg
pusha
jo
add
pusha
insb
cmp
add
shll
and
dec
subl
add
xchg
add
cmp
dec
sub
push
and
shlb
inc
sub
movl
leave
dec
mov
mov
loopne
add
sub
jge
and
jb
dec
or
pop
inc
jle
add
int
push
xchg
sub
push
add
aam
das
adc
dec
mov
loopne
and
icebp
cmp
xchg
add
cwtl
loopne
dec
and
adc
adc
aam
ret
xlat
mov
adc
push
addr16
sub
and
mov
loopne
lret
jb
shl
lret
jb
in
add
mov
dec
cwtl
loopne
sub
add
dec
sbb
or
cltd
inc
mov
mov
add
mov
fdivl
fldl
enter
sar
mov
fstpl
add
push
test
mov
add
sub
inc
and
inc
add
dec
mov
dec
add
in
test
loopne
or
lds
rcrb
fbld
xchg
sub
dec
push
add
jb
or
fs
lds
sub
pushf
add
add
xchg
cmp
add
xchg
scas
mov
inc
cwtl
sub
out
add
jmp
loopne
call
xchg
sub
jns
push
lret
inc
xlat
xchg
nop
add
or
hlt
jo
mov
xchg
adc
add
inc
xor
lds
or
sub
aas
adc
cmp
jns
loopne
add
push
loopne
or
sbb
add
adc
add
mov
loopne
popf
addb
add
adc
sub
hlt
nop
sbb
jns
loopne
jo
xchg
sub
pushf
loopne
lock
pop
out
add
dec
mov
mov
or
sub
mov
shrb
lret
xchg
sub
mov
mov
into
and
inc
add
fsubp
add
add
mov
xchg
mov
mov
add
add
xor
add
sub
faddp
add
jb
dec
add
decl
mov
mov
rclb
sbb
xor
lds
das
testb
xor
add
out
add
xor
cwtl
fsubrs
lock
sub
addb
dec
or
pop
andl
mov
cmp
and
add
lret
inc
dec
lock
add
cld
lock
or
pusha
push
shlb
sub
xchg
add
les
or
add
gs
xchg
and
dec
add
add
xorl
add
je
add
adc
xor
and
lods
data16
adc
or
push
sbb
pop
and
and
sub
sub
loopne
lret
jae
mov
mov
push
lods
xor
push
and
add
lods
cmp
add
pusha
or
sub
or
cmpsl
add
je
add
add
addb
xchg
cmp
popa
or
shrl
test
stc
mov
mov
xchg
call
xchg
add
cmp
insb
orl
cmova
loope
xor
sub
push
cmp
idivl
incl
add
mov
scas
ret
dec
mov
lahf
sub
cld
addb
add
mov
int3
lahf
sub
adc
decb
add
movl
sbb
adc
imul
dec
add
pop
enter
and
fnstsw
lock
add
cmp
jb
add
jb
lds
add
nop
mov
xchg
xchg
add
aaa
mov
sub
dec
mov
jo
inc
ds
mov
into
inc
shll
and
inc
ss
inc
add
and
mov
dec
xchg
inc
mov
sub
mov
add
adc
add
cmp
adcb
adc
rcl
fsubrs
repz
mov
or
pop
add
insb
das
fdivrl
mov
cmp
adcb
repz
mov
jl
lret
cmp
and
mov
dec
add
xchg
dec
cmp
add
mov
scas
dec
add
sahf
sub
adcb
dec
mov
add
repz
mov
mov
in
mov
cmpl
jno
pop
add
mov
pop
aam
mov
add
lret
jae
das
jbe
or
mov
inc
and
test
push
rclb
sbb
mov
xchg
idivl
add
xchg
mov
rclb
add
push
mov
add
dec
lret
mov
inc
sub
shlb
sub
subl
sub
icebp
mov
stos
and
dec
add
test
divl
add
and
mov
and
lea
roll
xchg
dec
jo
xchg
loopne
shlb
inc
add
xchg
lods
sub
sub
xor
cmp
jbe
xlat
xchg
add
xchg
and
add
in
add
nop
sbb
fwait
lcall
cmpsb
push
jl
add
lahf
xchg
lods
ljmp
cmpxchg
cmp
loopne
in
pusha
daa
int3
and
sub
orl
or
inc
push
rolb
push
and
xor
add
rorl
xchg
rolb
mov
lods
sub
shlb
xor
add
push
add
pusha
add
inc
repz
mov
mov
fsts
or
dec
lret
rolb
mov
mov
lret
aas
inc
or
dec
xor
inc
jo
add
test
mov
xor
hlt
and
jo
dec
fdiv
add
lock
aam
lock
orb
and
loopne
popf
adc
loopne
shlb
rcrb
inc
rcrb
cwtl
dec
flds
lret
inc
rcrl
and
inc
call
ret
add
das
into
mov
fdivs
fdiv
add
xchg
inc
loopne
icebp
sub
enter
jo
scas
add
adc
xchg
xchg
lods
mov
xchg
xor
cmp
cwtl
and
xorb
lods
jecxz
add
add
push
add
mov
mov
sub
addb
xchg
rcll
mov
decb
mov
mov
inc
pusha
in
leave
add
xchg
loopne
loopne
stc
xorl
xor
sub
mov
sub
bound
adc
mov
jnp
sbb
xor
and
add
adcl
inc
add
add
jl
mov
mov
scas
lds
add
in
add
add
add
add
inc
cs
add
fadds
push
inc
add
sub
test
cmp
pusha
roll
cmp
popf
dec
or
jae
or
sbb
add
mov
inc
add
mov
scas
in
int3
adc
in
add
loopne
mov
add
add
lret
imul
add
add
adc
mov
rorb
add
aas
mov
dec
repz
mov
cmp
and
xchg
add
js
jb
addl
sar
mov
rclb
add
xor
mov
add
fwait
lcall
xchg
scas
cmp
mov
cmp
add
add
aam
add
add
dec
mov
adc
dec
dec
enter
aam
xor
or
pop
addb
dec
push
aam
or
xchg
cmp
add
test
inc
add
fiaddl
xchg
testl
add
xchg
cld
and
mov
or
shrl
cmp
add
add
fwait
push
enter
dec
sub
fcoms
add
sbb
cmp
add
lret
jae
test
dec
orb
roll
sub
cmp
movsb
andb
mov
mov
dec
mov
mov
jp
orb
rolb
lds
xor
cltd
xor
mov
jae
cmpl
mov
rorl
in
add
mov
mov
hlt
das
out
dec
mov
inc
sub
mov
mov
iret
mov
xor
xor
xlat
addb
sub
iret
addb
ret
dec
and
sub
and
andb
add
and
push
sub
add
roll
add
add
out
subl
inc
add
xor
fdivrs
mov
add
inc
xor
add
add
dec
or
adc
popf
adc
add
hlt
jmp
mov
addb
out
add
inc
or
cmpl
negb
das
jmp
add
push
add
movl
inc
and
add
or
ret
add
addr16
add
ja
cmp
clc
sarl
dec
or
adc
dec
lods
rolb
mov
xorb
mov
cmp
mov
add
mov
scas
and
sub
dec
add
inc
inc
or
orl
adcb
enter
adc
or
enter
or
sarl
jg
rorb
or
vmovaps
ret
roll
inc
cmp
rolb
sub
dec
add
dec
sbb
lcall
inc
and
mov
dec
cmpl
lret
jae
scas
movb
xchg
xchg
scas
in
or
orb
mov
lret
or
fldl
or
add
lret
inc
lret
test
dec
add
lret
jae
aam
push
sub
stc
andl
cmp
inc
xchg
aam
lds
add
adc
sub
sbb
clc
fmul
jae
add
or
int3
sub
cmp
xor
xchg
sub
insl
int3
sub
nop
add
dec
sbb
lret
dec
aad
or
inc
sub
loopne
jbe
add
mov
add
shll
inc
cmp
and
mov
in
data16
loope
adc
add
stc
popa
and
add
or
add
scas
lds
or
rorl
sbb
cmp
fmull
cmp
cmp
cmp
xor
orb
int
add
ja
das
xchg
loop
rcll
cmp
sub
mov
xor
sbb
mov
and
add
and
cwtl
lret
inc
sub
push
bound
das
inc
and
lret
add
add
adc
add
cmp
das
jno
sbb
lret
inc
sti
loopne
and
test
add
add
add
loopne
das
inc
inc
aas
int
cli
or
dec
lea
mov
shlb
ror
inc
repnz
add
inc
add
add
sub
sub
cmp
and
add
add
dec
test
add
inc
repz
loope
adc
xor
add
xor
or
add
sbb
sbb
inc
add
add
int
add
add
inc
sub
loopne
scas
mov
xchg
cwtl
xchg
or
xchg
idivl
dec
and
mov
xor
dec
addl
sub
inc
push
inc
or
shlb
xchg
negl
sub
ds
and
dec
inc
rcll
add
das
test
xchg
mov
add
dec
dec
andl
add
dec
inc
dec
rcll
xchg
call
sbb
inc
mov
xor
inc
mov
scas
lds
das
ret
shlb
inc
push
pop
push
add
sub
mov
test
rolb
sub
mov
add
popa
add
pusha
add
add
or
cmp
dec
xchg
cmp
je
and
scas
mov
add
add
dec
mov
ret
mov
scas
xor
mov
jge
add
dec
adcb
call
jo
inc
mov
and
lcall
dec
cmp
cmp
inc
adc
add
add
mov
add
addb
and
dec
sbb
inc
cmp
cmp
dec
add
das
orb
inc
pop
mov
stc
loopne
and
fadds
into
lcall
add
ret
mov
add
aas
das
rolb
or
inc
add
mov
mov
xchg
orb
cmp
inc
mov
rorb
subl
clc
mov
loop
lret
or
icebp
and
and
enter
aam
sbb
ret
lds
and
pop
insb
add
add
fadds
and
addl
out
adc
addl
add
dec
mov
inc
add
xorl
and
fldenv
xchg
cmp
mov
icebp
pop
mov
dec
dec
add
andl
arpl
loopne
lods
rorl
test
adc
int3
insl
add
mov
frstor
pusha
popa
add
dec
bound
aam
add
inc
mov
shrl
pusha
add
or
and
pop
roll
aaa
rorb
xor
int3
add
rclb
add
dec
adc
sub
add
or
lods
into
mov
adc
inc
aam
xor
xor
add
sub
add
add
fimuls
sub
push
sub
popa
and
jae
dec
inc
and
push
pop
cmp
les
adc
adc
jmp
adcb
and
xchg
add
add
int3
aad
popa
add
mov
testl
testl
pop
push
arpl
loope
jno
nop
xchg
and
and
xor
dec
mov
add
loope
inc
movl
sub
add
orb
dec
cwtl
loopne
divl
add
sbb
testl
or
lret
xor
inc
cmp
shl
add
or
dec
loopne
add
cmp
shll
xor
sbb
add
or
es
jae
rorl
frstor
xchg
orb
xor
cmp
testl
scas
sarl
cld
pusha
push
testl
sub
test
add
loop
jne
inc
and
mov
xchg
aad
mov
push
xchg
xchg
daa
push
andl
lahf
xor
pop
add
lcall
mov
inc
mov
std
push
popa
add
mov
rolb
mov
loope
sub
jnp
adc
inc
adc
add
faddl
xchg
dec
add
mov
fmull
xor
mov
dec
cmp
sub
pop
add
fwait
lcall
jo
cwtl
je
mov
add
push
xchg
mov
adc
enter
dec
xchg
add
shlb
shrl
movsb
add
stos
add
movsb
add
cmp
add
pusha
xchg
mov
push
incl
mov
leave
rcrb
int3
cmp
aam
dec
xor
movb
xor
jo
add
lds
rcrl
inc
cmp
mov
xchg
or
stc
and
out
dec
add
inc
cmp
iret
push
lret
inc
push
rolb
add
scas
rorl
cmp
cmp
xor
rcrl
mov
push
sub
sub
lock
idivl
std
mov
add
inc
mov
dec
and
rclb
xor
cmp
mov
rcl
mov
mov
lcall
inc
mov
add
mov
scas
lds
mov
xor
aaa
scas
add
shrb
pop
push
das
inc
rorl
mov
cmp
xor
or
inc
scas
jo
cmp
cmp
and
add
lret
inc
lahf
lock
add
mov
cmp
inc
mov
cmp
sub
dec
bound
lret
lock
call
inc
push
jo
xchg
sub
aad
adc
adcl
inc
mov
xchg
xchg
lret
inc
push
add
repnz
repz
push
dec
dec
xchg
and
lret
inc
jno
scas
and
negl
xchg
xchg
lock
cmp
jecxz
cmp
dec
cltd
cmp
ret
repnz
add
jno
mov
add
xchg
dec
xorl
push
adc
or
mov
dec
xorl
push
pop
adc
adc
inc
jecxz
pop
shll
sbb
addb
add
mov
add
rclb
fisubl
adc
mov
adc
rorl
jno
rorl
mov
rolb
popf
rolb
dec
cmpl
add
test
nop
cmp
sub
mov
dec
stc
inc
push
add
xor
xchg
mov
mov
popf
lock
ror
pop
add
adc
xor
xchg
sarb
and
lret
inc
inc
xor
xor
outsb
mov
sar
mov
scas
lds
aas
rorl
mov
mov
add
andb
lock
inc
es
mov
das
mov
inc
cmp
subl
addb
push
pop
cmp
inc
div
or
shlb
fisubs
cvttps2pi
mov
mov
add
dec
xchg
sub
mov
fwait
lcall
and
or
or
add
dec
cwtl
loopne
iret
adc
add
ud1
or
inc
loopne
mov
xchg
add
push
or
cmp
add
and
and
shrl
cwtl
and
sbbl
push
inc
add
shll
stos
xor
gs
arpl
jmp
sbb
arpl
leave
cmp
sub
sbb
or
mov
in
add
add
sub
std
add
dec
mov
and
imull
test
and
add
cmp
rolb
add
lods
and
shll
rcr
push
add
dec
cmp
loope
push
jp
cltd
fstl
in
add
mov
xor
adc
xor
mov
xor
cmp
dec
add
inc
mov
cmp
aaa
mov
enter
add
rorb
lcall
adc
xchg
dec
sub
add
xchg
lods
nop
roll
mov
addb
mov
rcr
aam
add
add
xchg
dec
addl
xchg
cmp
cmp
shl
add
fnstsw
add
scas
aam
add
mov
cmp
faddl
sub
mov
ja
sbb
cmp
dec
add
test
dec
pop
lahf
or
add
xchg
xchg
dec
icebp
enter
xchg
add
add
addb
repnz
in
add
add
mov
cmp
sub
leave
add
dec
cmp
fdivrs
mov
add
add
pusha
add
add
int3
xchg
sub
xchg
add
testl
add
out
xchg
int3
testl
mov
mov
dec
xchg
mov
xchg
cmp
pushf
xchg
xchg
dec
add
xchg
cwtl
add
xchg
xor
xchg
mov
cmp
jb
into
add
jb
into
lds
pop
lret
jb
into
cmp
mov
add
cltd
cmp
lods
add
pop
add
add
cmp
add
inc
dec
add
repz
dec
enter
add
ret
add
cmp
rolb
ror
cltd
add
orb
inc
add
inc
mov
insb
fwait
lcall
negl
xchg
roll
add
add
mov
mov
dec
lcall
sbbb
add
add
rolb
or
sub
add
mov
dec
add
inc
add
add
sub
push
add
xchg
pop
or
add
nop
adcb
addb
add
xchg
mov
dec
sbbb
add
add
std
lcall
add
lret
inc
and
add
or
inc
pop
add
lret
inc
push
inc
add
pop
lret
inc
push
rolb
or
jl
inc
xor
rorb
int3
dec
inc
roll
dec
insb
add
dec
cmp
xorb
data16
xchg
xchg
cmp
adcb
push
sbbb
mov
sub
add
sbb
mov
dec
test
loopne
add
lcall
lcall
adc
loop
add
incl
mov
dec
xchg
rolb
cmp
mov
push
iret
adcb
rol
inc
push
add
sub
adc
adc
rolb
mov
dec
sub
pop
add
sub
cmp
cmp
dec
addb
xor
add
add
movl
scas
pushf
rcrb
and
inc
push
shrb
idivl
dec
mov
add
dec
mov
add
fldl
mov
add
movl
xchg
dec
mov
mov
enter
cmc
cmp
lret
inc
inc
add
nop
mov
mov
cmp
mov
cld
nop
repz
mov
dec
shl
rolb
cmc
mov
dec
sar
aad
add
xchg
lds
movb
dec
add
pop
mov
ret
dec
fiadds
add
adc
mov
orb
dec
xor
inc
lods
or
mov
int3
mov
in
pushf
nop
clc
push
mov
fisttpll
lret
sbbl
int3
dec
xchg
xchg
dec
sarb
inc
xchg
int3
mov
fwait
lahf
sarb
add
xchg
inc
mov
or
jb
add
mov
add
and
pushf
mov
cmp
lret
jae
dec
mov
cwtl
dec
rolb
hlt
mov
int3
inc
int3
cmp
mov
add
dec
orl
xchg
xchg
lret
jb
mov
testl
add
fwait
xchg
dec
or
add
movl
add
add
dec
xorl
cmpl
hlt
dec
add
add
or
ret
dec
xor
adc
or
xchg
rclb
pusha
pop
incl
mov
filds
mov
inc
mov
add
dec
adcl
mov
vpunpcklqdq
add
fwait
cwtl
dec
adc
dec
inc
cmp
lahf
add
pop
mov
dec
fwait
enter
in
ds
mov
xchg
sub
mov
loopne
test
inc
mov
add
mov
mov
dec
mov
add
in
push
mov
out
add
dec
add
cld
add
push
movl
mov
dec
mov
dec
adc
add
xchg
pusha
cwtl
lcall
pop
xchg
add
xchg
call
add
lret
jb
orb
add
movl
add
mov
decl
add
shrb
fisttpll
dec
mov
loope
dec
sar
inc
cmpb
mov
fwait
dec
mov
cmp
inc
pop
mov
cmp
inc
add
cmp
inc
add
lcall
mov
xchg
mov
sbb
xor
push
xor
mov
movb
popa
cmp
dec
mov
push
xor
xor
mov
dec
repnz
add
dec
dec
mov
dec
lret
mov
add
dec
mov
pushf
cmp
hlt
lret
jae
inc
sbb
dec
enter
fidivrs
add
mov
int3
mov
add
or
xchg
xchg
add
and
xchg
sub
add
inc
mov
enter
roll
inc
mov
add
sub
push
cmp
or
xchg
inc
dec
adc
xchg
rorb
add
sub
add
sbb
lret
or
pop
xchg
pusha
add
cmp
add
popa
das
rolb
xchg
out
xchg
fwait
dec
xchg
fmull
clc
lcall
test
mov
shrb
mov
mov
add
mov
mov
incl
mov
mov
std
mov
xchg
add
xor
lahf
add
sbb
pop
fwait
lahf
decl
jg
lea
iret
pushf
inc
or
add
adc
rolb
inc
lret
and
xorb
pop
xorb
cmp
or
xchg
lock
xchg
hlt
inc
add
rorb
dec
xchg
in
add
xchg
test
in
dec
inc
mov
mov
sarb
dec
lret
int3
dec
xchg
lds
dec
adc
mov
add
dec
mov
inc
addl
push
in
add
push
lock
mov
mov
dec
nop
loopne
rorb
je
das
movb
sbb
mov
loopne
mov
sub
and
sub
jb
xchg
loopne
aam
add
addb
inc
add
leave
cmp
mov
aam
sbb
add
add
xor
xchg
dec
sbb
mov
jmp
inc
pop
movb
xor
sbb
adc
aas
xor
inc
fistpll
xor
sub
rolb
or
sub
rolb
cmp
mov
daa
lcall
loop
ret
sub
loopne
andb
cmp
lcall
sub
nop
add
add
lcall
inc
or
mov
mov
rolb
or
les
dec
pusha
add
pop
cmp
repnz
mov
push
pop
test
rolb
push
add
mov
das
in
add
or
dec
sub
mov
mov
shlb
rcrb
cld
inc
push
cmp
mov
push
or
mov
fwait
dec
mov
in
dec
xchg
hlt
dec
add
dec
xchg
dec
add
sub
adc
xchg
dec
mov
movl
hlt
add
and
inc
and
pop
dec
cltd
enter
xor
add
mov
scas
rcrb
scas
mov
hlt
xchg
sub
ret
iret
add
testb
mov
or
cwtl
jl
add
inc
add
and
add
mov
jo
in
lds
add
loopne
dec
mov
movsb
push
dec
mov
in
add
adc
loopne
addb
xor
dec
sarl
pop
dec
jo
add
mov
add
add
rolb
add
xor
mov
add
sub
xor
xor
sbb
mov
sub
cmp
cwtl
loopne
das
rclb
sar
add
inc
clc
push
or
inc
loopne
add
andl
cmpb
mov
xorl
cmp
add
clc
andl
scas
jo
push
add
cwtl
loopne
dec
mov
cld
adc
add
std
mov
add
test
in
movb
sbb
inc
loope
add
loopne
lret
inc
mov
inc
aas
push
dec
in
adc
clc
mov
out
pop
rorl
mov
add
dec
xchg
incl
mov
inc
dec
mov
fsubrl
roll
add
subb
inc
mov
add
add
faddl
mov
notl
xor
push
fdivr
lock
mov
stc
mov
loope
rolb
adc
or
add
add
dec
cwtl
loopne
sub
cmpb
cmp
add
lock
mov
xchg
or
adc
pop
sub
mov
roll
and
lock
mov
fadd
add
or
loopne
loopne
or
mov
fdivl
aam
or
call
push
and
inc
add
lret
inc
je
adc
inc
and
inc
or
add
rolb
cmp
add
rorl
xchg
mov
dec
push
sbb
adc
sub
cmp
and
cmp
in
lds
das
xor
cmp
lock
add
or
rolb
push
hlt
lret
sub
mov
shl
mov
push
idivl
rclb
rorb
mov
loope
add
dec
xor
xorb
rcrb
shlb
or
sub
add
adc
adc
lds
mov
and
cmp
xchg
nop
push
mov
aad
es
andl
cltd
rolb
ds
sarb
notl
push
xchg
testl
add
xor
push
add
mov
add
sub
lds
das
lret
fisubrs
mov
fildl
and
xor
cmp
xchg
pusha
add
or
add
add
dec
mov
enter
xchg
push
dec
push
jae
mov
loopne
add
das
fmulp
add
fiadds
cmp
or
sub
mov
add
pop
or
insl
das
aad
or
adc
scas
add
add
mov
add
push
stc
push
dec
mov
dec
lock
nop
add
mov
add
or
orb
fstl
jae
adc
inc
decl
xor
add
mov
adc
nop
mov
dec
or
cmc
test
adc
mov
dec
push
ficoml
mov
mov
and
xor
addl
xchg
enter
nop
int3
lret
push
add
aam
mov
or
repnz
flds
inc
loop
add
testb
add
lahf
aam
int3
cmp
add
and
rcl
lret
sbb
and
testb
dec
ret
pop
mov
lds
inc
add
sub
xor
and
add
cmp
add
shrb
pusha
pop
xchg
dec
or
push
shll
and
mov
lock
adc
pop
adc
add
xchg
xchg
dec
xor
xor
sub
aaa
adc
popf
nop
insb
enter
rclb
dec
ror
mov
lea
ret
mov
xchg
int3
add
fcomip
cs
sub
adc
loopne
int3
xor
xchg
sub
adc
leave
add
rdmsr
imul
mov
mov
inc
adc
testl
add
enter
sbb
dec
enter
decb
mov
lret
addl
jecxz
jo
lret
jb
lret
jb
out
cmp
das
xor
xor
daa
mov
dec
mov
push
or
outsb
popf
fwait
pushf
push
enter
nop
push
int3
inc
pop
mov
in
add
divl
testl
popa
sbb
loope,pn
bswap
lods
hlt
adc
jbe
mov
bound
popa
cmp
add
jmp
sbb
add
sub
and
inc
pop
dec
or
adcb
or
add
inc
cmp
and
dec
add
rcrl
das
shrl
aam
mov
loope
dec
and
nop
add
rolb
imull
adc
mov
bound
add
mov
test
shll
adc
add
mov
add
add
add
or
cmp
pusha
xchg
std
divb
push
dec
add
add
add
or
pop
add
inc
testl
add
loopne
jmp
adc
add
adc
pop
xor
lret
lods
add
add
xor
mov
sub
jp
push
sub
add
cmp
inc
add
orb
add
cmp
add
dec
aaa
add
add
add
mov
xchg
scas
add
cmp
dec
and
shl
cmp
subl
dec
mov
pushf
lds
xchg
dec
cmp
add
cltd
dec
pop
lahf
add
rolb
aam
xchg
push
testl
dec
mov
dec
add
xor
mov
test
push
hlt
add
add
hlt
movl
test
scas
or
sub
add
add
dec
cmp
scas
cmp
cli
dec
test
add
aam
int
xchg
add
rolb
dec
add
dec
mov
xorb
xor
dec
add
mov
subb
leave
subb
mov
or
add
adc
xor
ret
mov
insb
lds
int3
inc
add
testl
add
das
out
add
mov
dec
adc
imul
mov
sub
inc
add
mov
sub
addb
inc
sub
addb
sub
addb
or
add
ret
inc
add
cmp
test
add
mov
dec
jmp
sub
sbbl
addl
xlat
sub
add
stos
aam
xlat
dec
mov
add
xor
cmp
cmp
lcall
test
sub
adcb
cmpb
cmp
or
push
mov
add
inc
sbb
mov
cmp
add
inc
cmp
adc
cmp
in
and
dec
lret
jne
inc
push
dec
stc
adcl
inc
sub
scas
repnz
mov
adc
sub
dec
add
dec
add
xorb
add
xchg
add
and
test
add
lret
inc
mov
add
add
inc
or
sub
call
lret
add
cmc
add
scas
cld
dec
mov
or
cmp
dec
add
add
aam
or
inc
add
adc
and
lret
inc
add
std
inc
dec
mov
pushf
sub
orb
sbb
sub
addl
xor
sub
addb
add
jb
add
xchg
dec
subl
mov
add
add
lret
dec
push
jo
adc
sbb
xchg
dec
add
dec
xor
inc
cmp
push
pop
or
rolb
cmp
add
orb
pop
lcall
std
jns
add
cld
jmp
ret
cwtl
popf
mov
movb
std
cld
mov
inc
cmp
shlb
inc
cmp
lock
add
fimuls
and
push
das
ret
add
dec
xchg
sbb
sub
inc
and
add
inc
mov
jmp
lahf
lcall
add
add
scas
repz
mov
add
sub
lcall
adcl
imul
divl
xchg
lods
mov
xchg
scas
lds
inc
loop
cmp
pushf
mov
cmp
inc
and
xchg
scas
clc
dec
add
pop
inc
je
negb
sub
and
cmp
add
adcl
inc
and
add
loopne
add
std
mov
mov
xor
sub
sub
add
roll
add
shlb
negb
pop
popa
add
call
push
add
fwait
adc
mov
add
sub
loopne
add
lcall
add
lods
inc
stc
cwtl
jb
add
lds
lret
add
pusha
and
insb
clc
test
cwtl
cmp
fsubs
pop
orb
add
inc
xor
inc
inc
loopne
mov
mov
dec
or
and
adc
inc
popa
add
adc
mov
cmp
mov
dec
adc
add
inc
inc
addb
lahf
dec
or
addb
dec
or
and
inc
pop
mov
add
pushf
sub
inc
dec
add
cmp
add
xor
add
inc
enter
pop
sub
lret
addb
add
loopne,pn
loope
add
das
ret
scas
add
lcall
pop
test
dec
fldenv
movsb
rcr
and
dec
or
add
add
add
addr16
mov
fsubrl
add
dec
icebp
sbb
add
xchg
inc
adc
adc
inc
or
adc
add
rcrb
add
and
mov
inc
add
dec
add
les
subb
cmp
add
or
push
rolb
flds
std
fldenv
or
roll
rolb
sar
mov
dec
flds
sbbl
test
sub
pop
shlb
call
pushf
sub
orb
sub
mov
loope
add
dec
sbbl
xchg
xchg
sub
fcoms
sbb
add
int3
pushf
dec
mov
push
aaa
or
add
rolb
andl
pusha
add
orl
loopne
inc
mov
inc
popa
and
xchg
scas
add
add
filds
add
les
add
dec
and
and
and
loopne
push
jl
pusha
add
bound
popa
add
adc
add
bound
xchg
scas
stos
and
and
and
and
mov
mov
pusha
insb
xorl
mov
and
inc
and
test
xorl
add
inc
lret
dec
xchg
insb
sub
add
and
mov
pop
add
add
inc
mov
inc
ss
incl
sub
xor
subl
mov
and
or
pop
add
rolb
ret
add
lahf
xor
mov
xor
inc
outsl
loope
testl
test
add
and
inc
add
into
scas
int3
loopne
add
jno
dec
subl
pop
dec
or
sub
adc
cmp
dec
icebp
imul
sub
dec
sbbl
int3
nop
cmp
xchg
dec
lcall
lds
add
dec
or
into
add
int3
add
aam
cmp
inc
add
xchg
dec
mov
mov
xchg
sub
pusha
add
mov
ror
mov
add
mov
add
dec
xchg
fidivs
add
lret
adc
inc
xor
adc
add
dec
add
add
shlb
lds
sar
adc
imul
adcb
in
xchg
dec
mov
push
xor
push
push
add
add
fmuls
in
andl
inc
nop
lretw
add
mov
dec
mov
sub
out
ret
inc
sub
sbb
add
jno
in
inc
add
dec
xor
xchg
dec
sub
adc
mov
inc
and
sub
mov
mov
jnp
push
or
sub
movups
mov
addb
shrb
fwait
push
lahf
or
loopne
dec
mov
dec
sar
test
xor
dec
xor
xor
sub
data16
add
cmpl
sub
rorb
cmp
orb
int3
xchg
sub
add
add
add
out
xchg
int3
adc
cmp
add
add
sub
add
addl
mov
out
push
out
add
ds
dec
pusha
sar
sub
push
add
dec
scas
add
aas
xchg
xchg
sub
xor
push
and
sub
inc
add
dec
add
cmpl
cmpb
jecxz
mov
add
inc
mov
shl
inc
popf
popf
jo
ret
std
orl
push
xchg
cmp
dec
cmp
adc
push
jmp
add
pop
xchg
outsl
fists
xchg
cmp
or
test
xchg
lods
sub
andb
shlb
lcall
dec
mov
enter
ret
popf
inc
pop
mov
xor
dec
mov
sub
jae
sub
xchg
jnp
add
jae
sub
ret
mov
shrl
sub
add
add
pop
xchg
dec
mov
mov
and
dec
mov
mov
sub
fnstenv
cmp
lds
decl
mov
loop
cmp
add
das
incb
add
hlt
sub
push
push
filds
cmc
push
push
das
rorb
mov
cmp
sub
cmp
scas
cmp
xor
mov
test
add
dec
lds
rorl
aam
cmp
inc
ds
mov
add
mov
cmp
mov
sub
outsl
and
and
int3
xchg
dec
mov
loopne
sub
sub
and
dec
and
and
and
loopne
in
addb
dec
cmpb
inc
nop
sub
and
shlb
lcall
add
cmp
dec
add
loopne
sub
sbb
shrb
in
add
add
xor
int3
dec
mov
dec
test
test
hlt
add
lock
inc
pusha
inc
orb
fcoml
rcrl
loope
add
es
dec
shl
popa
imull
jbe
andb
cmovge
sub
lock
cmp
push
call
ficoms
xor
add
add
sub
notl
popf
and
jo
add
dec
iret
mov
shrb
into
xor
adc
sub
pop
xor
das
mov
icebp
adc
add
add
loope
scas
call
loopne
lea
loopne
ret
jns
icebp
add
dec
xchg
sbb
aam
sub
bound
andb
or
dec
rolb
call
shrb
xor
mov
dec
add
ret
lods
js
test
xchg
sub
rolb
dec
lret
or
iret
loope
call
adc
mov
in
sub
xor
dec
ret
in
add
in
dec
dec
sub
sub
and
scas
shl
push
arpl
mov
lahf
dec
and
sub
mov
inc
xor
cmovg
cmp
scas
rclb
sub
push
xchg
dec
xor
mov
cmp
aas
testb
cmp
sub
cmp
cmp
inc
cli
add
cmp
adc
add
loope
mov
andl
add
push
push
dec
or
dec
cmpl
add
icebp
nop
add
and
loop
mov
aam
add
sbb
addl
out
dec
mov
sub
lock
dec
rclb
xchg
mov
pusha
pushf
sub
mov
cld
add
scas
shrb
xor
xchg
xor
loopne
dec
dec
mov
cmp
mov
mov
mov
mov
test
enter
rorb
mov
inc
sub
enter
add
cmpl
mov
orb
pop
lret
inc
int
add
mov
xchg
lods
add
add
xchg
xchg
pusha
aam
shl
roll
add
mov
cmp
rcll
add
pushf
xchg
lods
les
ret
push
or
pusha
or
cmp
dec
aaa
add
or
add
add
or
mov
add
or
leave
into
loopne
inc
cmp
mov
jno
dec
pop
nop
push
xchg
sub
jmp
and
and
or
xchg
add
xchg
add
dec
mov
addb
add
mov
or
mov
adc
jo
test
add
mov
shrb
addb
push
adc
fwait
gs
lock
pop
xor
dec
xchg
xchg
dec
xchg
cmp
dec
cltd
cmp
xorb
mov
mov
inc
addb
lret
jae
xchg
inc
add
aam
sub
sub
sub
sbb
add
dec
add
xchg
mov
jle
and
das
repnz
mov
push
dec
sbb
adc
shufps
add
mov
cmp
sarb
mov
dec
cltd
int3
add
cmp
cmp
add
inc
add
add
add
add
add
mov
dec
add
add
inc
add
incb
add
scas
lahf
mov
xchg
dec
add
add
add
sub
sub
cmp
roll
das
add
pop
dec
pushf
fmuls
loopne
inc
xchg
dec
add
cmp
mov
lcall
add
inc
mov
dec
sub
add
xchg
mov
flds
inc
lahf
add
add
sub
add
xor
add
mov
inc
mov
aam
xchg
mov
mov
add
pop
xchg
dec
sub
add
inc
stc
jnp
xchg
add
xchg
xchg
xchg
lret
inc
dec
movl
pop
add
inc
add
lret
inc
inc
add
mov
inc
mov
lret
dec
add
int3
xchg
sub
and
cltd
add
stc
or
aad
add
add
xchg
cmp
adc
orb
cmp
and
lret
inc
repz
lods
add
dec
add
cmp
mov
mov
inc
mov
aam
mov
add
sub
or
and
cmovge
cltd
sub
sub
cmp
xorl
xor
dec
subl
addl
xor
lds
mov
sub
aas
add
add
add
sub
and
add
inc
xorb
pop
add
lret
xchg
je
orb
mov
enter
cmp
add
in
mov
adc
or
and
stc
add
inc
sbbl
dec
inc
add
xchg
xchg
sub
add
das
mov
add
cmp
test
add
cmp
int3
popa
add
enter
lret
dec
cltd
andb
adc
inc
dec
sub
sub
cmp
mov
rolb
push
inc
mov
icebp
inc
inc
mov
dec
mov
lods
or
push
orb
lret
inc
and
inc
xor
les
dec
subl
mov
cld
sub
test
testl
std
mov
xor
scas
lds
cld
sub
addb
add
sbb
cmp
cltd
cmp
inc
cmovns
aas
sub
add
adc
ret
or
dec
rcr
xchg
dec
adc
sub
das
orb
cmp
push
mov
xchg
xchg
les
inc
add
inc
mov
mov
adc
sbb
call
sub
add
inc
inc
mov
adc
sbb
cmp
inc
add
add
inc
dec
rolb
add
mov
int
sub
lods
cmp
sbb
test
dec
and
xorb
mov
ret
subb
mov
add
sbb
and
dec
test
or
jl
rclb
incl
test
add
or
inc
dec
addl
in
mov
cmp
addb
sub
addl
rclb
sub
subb
or
add
push
mov
inc
mov
in
cltd
cmp
inc
shlb
xchg
lods
push
sub
repnz
sbb
test
cmp
add
mov
subb
sub
out
adc
mov
sub
fisubl
or
cmpsl
addb
mov
pop
das
ret
add
cmovo
dec
orb
dec
mov
movsb
rorl
cmpb
xchg
xor
inc
xchg
xchg
dec
mov
fsub
push
or
inc
sbb
push
inc
aas
cmp
roll
jne
mul
and
les
iret
sbb
test
das
testb
jne
sbb
add
pushf
cmp
sub
sub
aam
add
sub
int
pushf
movsb
cmp
mov
or
popa
fwait
adc
xchg
xchg
xchg
dec
add
mov
mov
in
subb
pop
dec
subb
mov
das
scas
adc
jnp
pop
xchg
ret
push
dec
mov
add
sbb
xchg
xchg
cmp
sbb
sub
and
push
mov
adc
lret
sub
in
pushf
lods
dec
or
add
and
inc
sub
inc
sub
je
push
and
lahf
inc
pop
inc
sub
add
lahf
xchg
xor
imul
dec
and
sub
add
inc
sahf
mov
into
xchg
dec
pop
sub
sarb
lods
add
mov
mov
xchg
mov
subb
add
and
dec
and
fsubrl
and
dec
add
js
lds
in
test
cmpl
cltd
pop
cmp
std
mov
clc
lret
inc
cli
add
cld
xchg
sub
fiaddl
lds
dec
and
insb
lds
and
sub
in
or
dec
jno
loopne
pusha
add
and
inc
cmpsl
pusha
jp
or
rcrl
inc
sbbb
and
and
mov
lock
mov
add
add
or
sbb
sub
call
mov
dec
and
loopne
mov
or
pusha
leave
xlat
loopne
test
cmp
insb
shrl
jnp
add
pusha
loopne
cmp
push
inc
add
hlt
and
lret
inc
sub
or
add
pop
add
int3
inc
add
lds
xchg
add
fadds
movl
loopne
mov
or
xor
mov
sub
ret
add
add
add
int3
pusha
add
add
fisttpl
dec
js
inc
cmp
add
call
pusha
add
xchg
dec
push
inc
mov
subb
sub
enter
out
adc
pushf
sub
int3
xor
inc
pop
rorb
sub
lcall
add
pop
lcall
loopne
aam
rcrb
sub
mov
mov
int3
dec
add
das
rorb
loopne
pusha
adc
dec
addb
add
rclb
add
and
cmp
push
add
mov
pushl
push
cmovge
add
iret
loope
ret
sub
add
arpl
and
loop
add
fadds
cmpsl
movsb
inc
insb
int3
mov
rolb
rorb
xchg
adc
pushf
dec
xchg
int
add
add
sub
xor
xor
nop
xchg
xchg
mov
idivl
add
scas
std
mov
in
push
add
cltd
xor
mov
xchg
cmpb
lds
aas
sub
mov
subb
bound
repnz
inc
or
ja
cmp
lock
add
jle
loop
mov
pop
inc
inc
push
loopne
adc
dec
subl
push
pop
clc
add
aas
ret
add
and
in
add
inc
cmp
inc
movsb
push
adc
fwait
mov
nop
add
pop
dec
add
add
add
add
inc
add
mov
xchg
divl
add
ret
and
out
add
adc
inc
push
add
test
call
mov
dec
adc
mov
decl
or
mov
push
rolb
lcall
dec
cmp
add
or
mov
add
cmpl
jb
std
clc
or
je
test
mov
cmp
clc
pushf
mov
negl
mov
push
jno
mov
dec
pop
dec
add
sub
bound
add
jb
aas
scas
push
cmp
inc
str
lret
jb
add
cmpl
test
add
xor
je
das
in
add
jb
enter
add
add
add
iret
add
jae
das
testb
or
lret
inc
push
add
shlb
or
aad
cmp
sub
test
push
xor
add
xor
hlt
inc
pusha
sahf
mov
test
add
lret
jae
mov
dec
mov
xor
inc
mov
adc
in
add
add
scas
int3
add
xchg
negb
cld
fidivl
ror
pop
cmp
add
cmp
pop
fidivl
shrb
pop
shrb
add
jb
dec
mov
dec
enter
loopne
sub
mov
inc
mov
call
cmp
nop
sub
sbb
dec
xor
add
iret
dec
shlb
dec
rorb
mov
into
add
jecxz
add
add
xor
inc
test
and
out
out
add
inc
cmp
mov
scas
test
pushf
dec
mov
scas
cmp
jne
xchg
cmp
test
push
add
mov
lret
jb
inc
add
test
xor
adc
push
pop
rolb
jae
mov
scas
negl
lods
add
test
dec
cltd
sub
add
xchg
loopne
dec
orl
inc
add
lods
and
push
pusha
add
adcl
sbb
dec
cltd
sbb
and
add
adc
xchg
dec
mov
xchg
dec
mov
rorb
adc
mov
aam
add
dec
mov
pushl
fmul
inc
xchg
mov
xor
nop
mov
icebp
add
adc
lods
test
cmpsb
xchg
xchg
and
add
xlat
rorb
xor
pop
mov
loope
mov
nop
inc
and
sub
sbb
or
mov
inc
dec
cltd
xor
cltd
xor
aam
mov
lret
jae
aam
dec
xor
shrb
icebp
or
push
cmp
scas
into
cmp
mov
dec
cmp
adc
inc
xchg
xchg
mov
rolb
sub
sbb
cmp
shll
add
inc
add
and
xchg
aam
sbbl
adc
mov
pop
out
push
lret
mov
in
addl
add
lods
in
or
push
xchg
nop
stos
adc
sbb
add
or
lret
mov
out
mov
and
loopne
out
xor
xchg
add
adc
rorb
pop
sbb
or
inc
mov
add
sub
mov
repnz
or
adc
addb
cmp
addl
mov
lods
xor
cmp
sbbl
mov
adc
adc
add
gs
fxch
cmpb
inc
pop
adc
mov
aam
pop
nop
pop
sub
rcrl
dec
ret
jo
mov
adc
and
xchg
js
add
shrb
adc
mov
dec
ret
dec
mov
or
dec
mov
mov
rorl
add
mov
or
add
cmc
add
dec
sbb
sub
jno,pn
ret
adc
add
inc
mov
dec
add
aam
aaa
sub
hlt
add
xor
xor
or
sub
adc
rolb
add
mov
dec
fimuls
ds
pop
mov
out
adc
add
dec
ficoml
cli
lret
add
test
pop
out
pop
add
divb
add
add
push
inc
push
mov
orb
dec
lock
mov
call
add
dec
adc
add
adc
sbb
mov
jbe
loopne
and
add
inc
add
int
dec
push
adc
add
add
out
add
enter
dec
add
nop
in
adc
xchg
sub
add
negl
xchg
add
les
cmp
dec
sbbl
add
rcrl
dec
xchg
les
shr
adc
dec
mov
testb
xchg
xchg
sub
mov
adc
sbb
das
pop
inc
lock
nop
sbb
das
lret
inc
add
jmp
iret
cmp
xor
and
mov
xor
dec
adcl
sub
sbb
and
inc
add
sub
rolb
testb
loopne
xor
sbb
add
and
cmp
rolb
push
add
add
add
jmp
fdivr
dec
addl
mov
dec
or
adcl
lret
rorl
das
into
add
rclb
je
push
dec
rolb
sbb
mov
negl
sub
ds
push
mov
cmp
mov
xor
dec
add
dec
int3
test
mov
add
cld
jmp
mov
add
lret
addl
clc
cld
pushf
lds
or
sub
pop
add
add
pushl
mov
lods
add
add
add
add
xlat
test
inc
add
aam
xchg
lods
sub
dec
lret
add
sub
sbb
inc
cmp
mov
sub
add
xchg
add
imul
pop
lahf
add
dec
xor
add
clc
mov
addb
add
enter
add
dec
fisttpl
cli
inc
add
add
clc
in
aam
int
add
clc
leave
mov
clc
cli
mov
sar
mov
je
das
adc
testb
inc
xchg
dec
sub
inc
sub
testl
mov
dec
mov
cmp
mov
lret
add
lds
add
or
lret
clc
mov
cmp
add
dec
lock
inc
clc
clc
lret
inc
imul
xor
xorl
add
addl
inc
mov
sbb
mov
rolb
lret
inc
push
orb
test
inc
subb
movsb
stc
test
inc
scas
ret
sub
subb
add
inc
jg
lar
jbe
add
ret
dec
xor
faddl
orb
sub
add
lret
jb
cmp
jb
mov
and
faddl
add
dec
sbb
sub
add
cmp
inc
add
iret
cmp
cmpl
mov
inc
das
fwait
add
dec
inc
nop
add
das
adc
add
mov
add
mov
clc
into
mov
clc
add
mov
clc
loop
jmp
out
add
shll
lods
adcb
pusha
xchg
add
roll
inc
add
fsub
das
add
dec
ret
cmp
rolb
cmp
addl
lret
inc
or
add
movl
idivl
std
andb
aam
inc
inc
shlb
dec
add
lret
inc
cmp
add
hlt
out
das
add
into
inc
cmp
cmp
cmp
inc
cmp
dec
xchg
popa
inc
shll
add
mov
add
rolb
ds
lret
pop
pop
cmp
inc
daa
add
inc
pop
hlt
push
inc
cmp
cmp
inc
es
inc
add
hlt
adcb
add
lds
movb
das
dec
enter
cmp
loopne
lret
inc
mov
fwait
add
ret
push
add
add
loopne
scas
add
xchg
test
pop
cmp
rorb
xor
add
orb
add
add
rorb
enter
shlb
add
cmp
rolb
add
orb
enter
add
int3
dec
mov
inc
in
add
xchg
dec
cltd
cmp
add
mov
xchg
dec
mov
inc
orl
mov
cmp
std
xchg
add
mov
inc
mov
addl
mov
mov
cmp
add
xchg
dec
cmpl
mov
dec
add
sbb
fwait
lcall
or
pop
sbbb
xor
dec
cmc
das
and
fisttpl
aaa
lcall
sbb
add
mov
push
int
sbbb
into
add
mov
dec
mov
xorb
cmp
mov
addb
mov
rorb
mov
inc
add
inc
mov
inc
add
mov
inc
sbb
cltd
xor
adc
dec
xorl
lds
das
fisttpl
fisttpl
or
dec
movl
mov
mov
add
shr
cmovge
dec
cwtl
pop
sub
and
sub
adc
add
inc
addl
dec
push
dec
cltd
inc
cmp
adc
cmp
sub
sbb
test
mov
notb
push
push
out
clc
mov
fld
push
dec
or
mov
out
add
xchg
dec
enter
sub
sub
push
xor
or
dec
mov
pusha
cs
and
xor
jns
mov
sbb
pusha
jb
adc
add
sub
inc
add
dec
addl
xor
add
inc
loopnew
popa
adc
sub
mov
shlb
addb
pop
lods
inc
adc
test
adc
jae
dec
add
push
mov
add
rol
incl
xchg
dec
rcr
dec
or
lcall
xchg
xchg
and
pop
xchg
sub
mov
cmp
mov
mov
and
cmp
xchg
sub
add
mov
xor
xor
mov
xorb
xor
das
pusha
lcall
lret
inc
fwait
shrb
sbb
arpl
xchg
sub
inc
sbb
add
sub
or
and
mov
add
ret
test
dec
adc
add
dec
inc
xor
sub
sbb
pop
cmp
inc
cmp
xchg
adc
jbe
sub
adc
int3
xor
add
loopne
movb
sar
add
sub
or
add
add
into
cmp
sub
mov
andb
add
xor
addl
int3
mov
lods
xchg
mov
test
mov
adc
ret
or
test
sub
adc
out
add
enter
sbb
pop
mov
xchg
jbe
sub
mov
xchg
jp
add
out
pop
xchg
sub
mov
orb
xchg
add
inc
cmp
loope
aam
lds
xchg
sub
adc
cmp
cmp
jb
inc
sub
xchg
xchg
dec
xor
add
dec
andl
xor
cmp
aad
rorl
mov
mov
adc
cmpl
loopne
incl
mov
out
add
dec
cmp
add
and
inc
sub
xchg
divl
orb
mov
sub
loopne
and
fcmove
inc
cmpl
ficoml
js
or
inc
add
scas
add
scas
push
dec
adcl
add
xchg
scas
fisubl
addb
test
add
mov
add
cmp
lret
inc
dec
addb
add
push
loope
sub
leave
subb
or
add
cmp
mov
dec
mov
sub
test
add
cmpb
add
lahf
dec
pop
loopne
add
roll
dec
sbbb
adc
add
dec
icebp
jo
or
inc
add
cmc
mov
cmpb
add
adc
mov
dec
xchg
enter
rclb
movsl
adc
add
cmp
loope
inc
push
or
sub
add
inc
pusha
push
scas
xchg
scas
lds
shl
test
pusha
loope
pushf
add
mov
std
add
cltd
aam
push
shlb
aam
add
js
mov
ja
mov
and
mov
rolb
sub
roll
cltd
repz
addb
jb
bound
xchg
xchg
xor
filds
xchg
inc
and
inc
or
xchg
inc
and
inc
es
dec
or
adc
test
adc
dec
mov
arpl
scas
std
mov
mov
incl
mov
add
das
imull
hlt
add
xchg
xchg
cmp
add
push
add
rorb
add
xchg
cmp
push
int3
cmp
cwtl
roll
fidivl
incl
add
shlb
or
mov
mov
repnz
mov
add
add
outsb
int3
push
add
mov
nop
push
lret
scas
inc
add
popa
add
int3
loopne
ret
mov
xor
sbb
shlb
add
push
push
add
aam
xchg
sub
scas
lds
xor
testl
add
inc
sbb
pop
xchg
cmp
roll
cmp
shll
cmp
arpl
fs
adc
adc
add
sbb
adc
mov
mov
sarb
shrl
jbe
shlb
sub
add
add
xchg
xchg
xchg
dec
inc
xorb
cmp
cmp
nop
rclb
stc
xor
divl
xchg
sbb
ret
loopne
and
mov
inc
add
add
cmp
cmp
sbb
jno
aam
sbb
add
mov
sub
nop
add
scas
add
inc
andl
push
add
andb
mov
addb
or
push
mov
push
adc
jno
xor
add
sub
add
or
divl
sub
ret
push
push
or
repz
enter
mov
dec
inc
add
lret
scas
add
cmp
insb
mov
inc
cmp
mov
les
rolb
or
add
push
fisubl
faddl
mov
add
mov
mov
mov
je
pop
testb
andl
xor
sbb
add
and
jo
xchg
scas
mov
sbb
inc
and
dec
rolb
mov
add
fmull
xor
mov
xchg
lret
push
pop
sbb
shll
and
rolb
adc
negl
xchg
xchg
add
add
addb
incl
push
and
add
inc
dec
jo
out
add
sub
out
add
roll
movl
mov
or
add
jb
inc
push
pop
add
inc
adc
sbb
add
add
dec
xchg
and
push
dec
push
sub
add
dec
xorl
dec
inc
add
xchg
lock
nop
mov
popa
mov
push
push
cmpsb
mov
mov
adc
add
mov
dec
pop
inc
mov
fwait
nop
mov
inc
and
or
and
cmp
loopne
adc
xchg
push
xchg
inc
adc
adc
adc
xchg
dec
test
mov
sbb
rcr
push
push
xchg
lcall
jae
inc
cmp
mov
into
inc
cmp
mov
mov
pusha
xchg
add
mov
rcl
shrb
xchg
and
add
das
insb
aam
lret
mov
mov
movb
lcall
xor
cmp
sub
mov
xchg
dec
sbb
and
sub
sbb
mov
aam
sbb
jo
je
or
clc
nop
add
adc
adc
adc
adc
int3
xchg
xchg
inc
add
jecxz
add
mov
dec
mov
int3
sub
dec
mov
add
cmp
loopne
rolb
adc
cmp
cmp
or
cmp
add
add
lahf
dec
and
mov
pusha
add
push
pop
lds
dec
nop
loopne
fsubrl
adc
lret
inc
fnstenv
xchg
add
fsubl
cmp
inc
or
dec
and
inc
fadds
dec
add
enter
xor
mov
shlb
loopne
add
xor
mov
lret
or
add
sub
sub
or
int3
inc
insl
rcrb
inc
and
mov
xor
into
incl
mov
nop
add
shlb
std
mov
lock
add
and
cmp
int3
mov
and
fists
fadds
and
push
mov
mov
sarl
in
adc
andb
mov
mov
orl
add
lcall
inc
mov
adc
adc
add
push
cmp
loopne
mov
xchg
or
mov
sub
adc
rolb
xchg
adc
sarb
shll
push
lret
inc
xlat
aas
push
sbb
add
lahf
xchg
push
rorb
hlt
pop
dec
xchg
int3
lock
xchg
pusha
andl
jo
mov
mov
push
add
sub
mov
dec
cmp
mov
addb
xor
mov
rorb
add
cmp
add
aad
pop
adc
add
add
inc
mov
mov
add
sti
mov
cwtl
add
push
cmpl
add
lret
push
push
adc
adc
call
jo
int3
xchg
add
cmp
movl
mov
scas
cwtl
popf
inc
mov
shrb
or
outsb
loope
mov
and
jbe
add
xor
lret
dec
xorb
xchg
notl
jp
push
add
dec
shrb
xchg
test
out
add
inc
and
test
add
xchg
add
andb
add
push
inc
ds
pusha
adc
enter
dec
add
test
out
test
and
dec
clc
jns
add
idivl
cmp
add
adc
std
inc
add
jbe
add
mov
sbb
aam
add
int3
add
inc
inc
and
add
add
roll
add
add
enter
test
adc
js
add
testl
adc
add
dec
sbb
add
or
add
xchg
dec
sub
aam
add
pop
xchg
xchg
dec
xorl
cmp
call
inc
add
lods
dec
cmpl
movl
cmp
clc
add
inc
cmp
lds
aam
adc
sbb
cmp
mov
in
inc
xor
cmp
pop
in
add
int
mov
call
or
add
add
addb
cmp
add
xor
test
inc
add
popa
xchg
mov
testl
jl
add
ss
lods
xor
add
add
test
addl
sub
xchg
dec
xor
pushl
sub
adc
cmp
out
add
or
xor
dec
adc
imul
dec
add
loopne
int3
lcall
add
fwait
add
int3
add
sahf
insb
lds
icebp
in
jl
das
movb
sub
mov
dec
rorb
add
inc
cmp
add
sbb
testl
std
mov
int3
add
ror
adc
notl
inc
add
push
add
incl
add
mov
xor
int3
add
cmpb
xchg
dec
add
mov
adc
jle
add
add
xor
add
lret
jb
cmp
add
dec
enter
push
or
mov
add
dec
fadd
add
cmpl
lds
roll
decl
add
mov
fwait
ss
adc
or
add
add
std
mov
xchg
xchg
add
lret
jb
cmp
dec
rol
add
add
adcb
dec
mov
lret
shlb
ss
and
xor
or
hlt
sar
cmp
enter
lcall
dec
mov
cmp
fwait
or
inc
pop
add
cmp
cmp
dec
xorl
or
inc
dec
shl
add
cmp
add
insb
add
idivl
notl
add
cmpl
add
cmp
int
cmp
inc
aas
add
or
stc
test
das
movb
mov
leave
inc
cmp
lret
inc
push
add
add
mov
orb
dec
mov
shll
xchg
sarb
orb
dec
add
add
rolb
es
into
push
dec
mov
add
xor
add
movb
and
add
inc
ror
dec
xchg
cmp
dec
add
push
mov
leave
cmp
inc
add
push
mov
lret
inc
sahf
add
add
add
hlt
inc
dec
xorl
xchg
add
xor
mov
enter
inc
mov
enter
mov
scas
sarb
ror
adc
scas
add
sub
cmp
cmp
dec
cmpb
lret
add
inc
mov
fcoml
cmp
mov
testl
xor
cmp
cmp
cmp
xor
and
jb
add
rclb
cmp
sbb
cltd
shlb
pusha
jo
inc
add
xor
je
mov
jo
int3
ret
subb
addb
mov
ja
je
ja
jp
shrb
xchg
add
cmpsl
dec
adc
inc
and
dec
addl
xchg
sub
or
pushl
mov
dec
addb
cmp
pushl
rolb
dec
aad
xchg
lret
dec
aam
add
dec
xchg
lret
test
nop
decl
sub
add
xchg
add
xor
xchg
and
hlt
loopne
and
addb
aam
ret
sub
mov
rolb
loopne
xor
roll
adc
and
pusha
sub
fs
add
faddl
lret
jb
xchg
sub
std
and
and
sub
cmp
fs
mov
inc
pusha
inc
add
inc
lret
subl
add
add
negl
dec
cltd
xor
cltd
cmp
pop
lret
inc
fiadds
sub
loopne
inc
and
xchg
mov
mov
sub
fisttps
add
sub
or
cmp
inc
add
dec
pop
out
test
loopne
pushf
mov
jl
push
or
or
mov
dec
mov
scas
in
nop
mov
cvtps2pi
das
add
or
pop
add
ret
inc
mov
sub
add
scas
shl
popf
xor
rcll
sub
loope
mov
inc
add
or
das
movsb
and
dec
mov
sub
dec
or
add
inc
cmp
adc
push
add
add
mov
lret
shrl
and
add
lds
addb
mov
mov
adc
mov
rolb
inc
mov
mov
addb
mov
aad
je
cmp
and
inc
push
mov
add
lret
inc
xor
andb
add
frstor
shll
dec
nop
test
add
iret
inc
cs
mov
add
add
addb
dec
rolb
jae
inc
movsl
mov
iret
inc
ds
adc
dec
aad
jg
dec
addl
sbb
test
sbb
mov
mov
add
add
push
pop
add
in
add
fcomi
lds
add
loopne
test
sub
push
or
and
push
add
rorl
das
int3
inc
or
mov
sbb
scas
add
das
testl
push
adc
cmpl
xchg
xchg
dec
mov
xor
sarb
cmpsb
dec
mov
cmp
jb
rorb
mov
cmp
inc
cmp
add
andl
test
cmp
sarl
or
scas
add
aas
xchg
add
mov
add
stos
shrb
inc
or
cmp
inc
add
cmp
scas
dec
add
xchg
dec
add
dec
leave
shlb
add
push
testl
dec
jge
add
sar
cmp
lcall
dec
mov
testl
sub
add
std
pushf
xor
cmp
inc
add
add
or
add
out
scas
test
xchg
xchg
jno
jl
or
adc
aas
mov
push
cs
mov
add
int3
inc
add
dec
lcall
add
sub
sub
cmp
cli
cmp
pop
dec
addb
loopne
inc
add
incl
mov
std
cmpl
lds
lret
das
iret
leave
inc
pop
sub
inc
and
add
or
sbb
or
add
add
mov
and
das
lret
add
or
add
mov
nop
add
addb
inc
xchg
add
or
addr16
xchg
add
rolb
add
rcll
stos
in
add
add
xchg
add
add
xchg
add
xchg
add
add
rclb
add
push
xchg
add
xchg
add
xchg
add
xchg
add
push
xchg
add
xchg
add
xchg
add
add
movsb
xchg
add
xchg
add
add
xchg
add
pushf
xchg
add
mov
xlat
icebp
or
add
add
push
rorl
adc
add
add
add
xchg
add
add
or
xchg
add
xchg
add
xchg
add
xchg
add
add
add
movsb
xor
push
xchg
add
inc
xchg
add
jno
push
xchg
add
add
xchg
add
add
xchg
add
add
add
add
add
or
xchg
add
stos
roll
hlt
xchg
add
test
add
movsb
xchg
add
xchg
add
add
xchg
add
add
xchg
add
add
add
xchg
add
and
add
pusha
xor
std
lods
adc
addr16
add
sub
sbbb
das
icebp
push
or
lods
fcoml
lods
sub
add
pusha
xchg
rolb
cld
ret
ret
add
mov
scas
shrl
add
push
add
pop
mov
cmp
mov
add
dec
add
icebp
cld
jo
cmp
sub
push
add
push
add
push
add
add
imul
pushf
jo
xchg
scas
lds
mov
loopne
das
jo
enter
sub
and
add
mov
iret
scas
movl
fwait
lcall
sub
xchg
xchg
xchg
pusha
ja
add
dec
mov
loopne
mov
adc
cmp
xchg
nop
add
sbb
adc
lret
inc
dec
loopne
lret
jae
inc
int3
dec
and
xchg
xchg
add
enter
and
or
xchg
scas
add
cmp
pop
pusha
adc
mov
shl
das
cwtl
dec
mov
cmp
pusha
add
scas
xor
dec
cwtl
loopne
cmp
dec
stc
nop
pusha
add
adc
pop
nop
loopne
and
sub
rorb
fmull
cmp
loope
add
xor
lock
cmp
das
ret
mov
dec
ret
dec
pop
xor
or
push
shrb
add
or
testl
ret
test
lds
mov
test
xor
push
testl
add
sub
xchg
subb
sub
cmp
add
incl
add
mov
shlb
loopne
loopne
add
jb
shll
iret
add
mov
fiadds
and
add
clc
add
add
add
incl
lret
inc
filds
mov
sub
roll
add
dec
test
idivl
sub
add
iret
cmp
jae
adc
lret
inc
aaa
lock
sub
add
lock
add
xor
lds
or
add
xchg
icebp
push
fdivl
rolb
cmp
test
jg
addb
push
mov
shl
add
dec
cwtl
loopne
sub
mov
int3
sub
and
sub
push
cmp
int3
sub
and
adc
dec
and
or
idivl
xchg
dec
inc
loopne
jno
xchg
lods
dec
repz
sub
stc
scas
add
adc
rclb
pushf
xchg
add
add
lock
rolb
loope
ljmp
push
lret
adc
loopne
mov
addb
mov
fdivrl
add
xchg
add
xchg
scas
pusha
loope
cmp
and
xor
and
add
dec
pop
loopne
adc
add
xor
or
sbbb
es
xchg
sub
add
cmp
nop
adc
inc
add
xchg
xchg
xchg
dec
add
xchg
dec
nop
loopne
sub
mov
add
nop
pop
loop
dec
orb
push
adc
cmp
insb
inc
push
xchg
add
icebp
push
xchg
add
mov
fdivrl
adc
add
lds
xchg
mov
roll
adc
mov
cmp
mov
xchg
push
rolb
popa
add
in
push
or
adc
fadds
test
inc
jae
lock
jae
and
push
jae
test
or
add
mov
lds
sbb
xchg
sbb
cmp
addb
xchg
sub
jp
cmp
bound
fadds
and
loopne
add
enter
cmp
pushf
loopne
in
add
xchg
add
scas
into
popa
add
in
sub
mov
subl
push
or
xchg
cmp
loopne
ret
inc
sarl
lock
inc
add
inc
add
jo
faddl
cmp
das
fmuls
rclb
sub
cmp
cmp
xchg
mov
ret
lret
jae
loopne
faddl
addb
push
xlat
add
inc
add
shrl
mov
cmp
mov
add
dec
mov
cmp
mov
xor
mov
add
add
icebp
jo
jl
add
shrl
dec
add
movb
sub
add
add
xchg
sub
add
adc
and
xchg
sub
add
loopne
inc
add
dec
mov
subb
js
add
lret
inc
mov
cmp
xor
loopne
test
add
sbb
filds
pop
out
xchg
add
jnp
cmp
loopne
sub
add
add
inc
sti
and
cmp
pop
fcoms
aad
add
inc
and
lret
inc
loope
push
mov
loopne
lods
hlt
mov
jae
loopne
call
sub
leave
add
jo
add
mov
lret
jae
loopne
add
ja
dec
cwtl
loopne
sub
add
cmp
int3
das
movb
add
lret
add
cmp
or
inc
jns
or
and
sbb
sub
and
ror
inc
arpl
add
or
addb
in
mov
xor
loopne
inc
add
add
repnz
mov
addl
lret
dec
add
cmp
inc
add
sarb
loopne
mov
dec
addl
jnp
loopne
jnp
sub
js
cmp
scas
enter
addb
xor
inc
xor
fmull
dec
add
add
xchg
dec
fiaddl
dec
add
add
add
add
loopne
add
int3
sub
sbb
add
ret
xchg
sbbb
xorb
add
push
xlat
add
js
loopne
sub
dec
aam
add
in
inc
inc
add
or
and
sub
sbbb
adc
push
mov
sub
aam
add
sub
ret
sub
test
jg,pt
rclb
sub
sbb
cmp
lahf
dec
and
xchg
dec
sub
lods
add
mov
pushf
and
mov
add
pop
mov
add
xchg
sub
add
add
cmp
fmuls
push
enter
adc
xchg
dec
or
add
add
scas
in
add
pop
sub
jge
add
inc
aam
cmp
lret
inc
add
add
add
jo
mov
test
inc
rorb
jae
add
mov
xchg
cmp
rcrl
inc
pop
pop
addb
pushf
sub
rolb
adcb
inc
inc
add
es
dec
addb
mov
ds
mov
hlt
je
mov
rolb
out
add
dec
sbb
inc
add
inc
add
rolb
dec
add
mov
inc
add
inc
add
and
xchg
lods
sahf
out
ret
add
sub
roll
add
add
je
lds
loop
mov
sub
add
cmp
mov
sub
adc
add
sub
rolb
sub
add
xchg
sub
lahf
add
mulb
add
lcall
adc
clc
xchg
adcb
in
sar
mov
jle
add
test
xchg
in
xchg
ret
bound
adc
ds
cmp
mov
jnp
adc
rolb
sub
add
dec
nop
loopne
fsubrl
add
orb
add
iret
call
cmp
lds
rolb
lret
test
add
cmp
mov
orb
in
negb
dec
xor
mov
cmp
add
jnp
cmp
rorb
pop
popa
add
shrb
add
negb
das
add
add
rorb
or
out
inc
pop
mov
loop
add
paddb
inc
int3
rolb
dec
or
outsb
loopne
add
popa
sbb
inc
and
sub
xchg
jle
jns
sub
daa
and
mov
inc
repz
sub
mov
ds
cmp
sbb
pop
add
or
in
sub
sbb
rolb
arpl
or
mov
dec
cmp
mov
scas
lds
pusha
cltd
adc
sub
jl
sub
scas
jo
add
addb
adc
cli
and
scas
mov
inc
dec
cmp
cmp
or
cmp
sub
jno
add
inc
mov
lret
or
stc
add
and
sub
sahf
sbb
add
loopne
out
inc
sub
adc
and
sub
imul
enter
into
and
aam
dec
sbb
add
add
and
lret
inc
xchg
andb
pop
fmul
inc
mov
add
add
movl
int3
mov
lret
jb
lret
jae
dec
add
dec
push
xor
cmp
sub
call
push
icebp
xor
add
add
bound
nop
aam
nop
testb
and
and
xchg
dec
inc
and
xchg
add
adc
mov
add
sub
mov
pop
xor
mov
and
lret
inc
push
pop
sub
int3
sub
sbb
xchg
dec
cmovge
xor
enter
out
add
or
in
or
jns
jl
cmp
bound
cmpsl
shlb
mov
adc
fisttpl
enter
cmp
mov
cmp
iret
clc
lds
add
enter
cmp
add
cmp
dec
add
or
les
add
sub
push
add
pusha
or
cmp
push
inc
mov
rorb
aam
mov
sub
loopne
xchg
sub
mov
aam
pusha
add
sbbb
sarl
and
shll
mov
pop
mov
add
inc
xor
push
scas
add
movsb
dec
xchg
rolb
or
pop
and
dec
cwtl
loopne
inc
or
mov
add
jb
cmp
add
icebp
js
loope
sub
pushf
add
das
xchg
mov
test
inc
and
lret
inc
xor
sub
mov
sub
push
addb
roll
mov
xchg
push
fsubs
push
add
repnz
cmp
inc
push
in
add
push
inc
add
jecxz
nop
and
dec
mov
sub
jecxz
add
loopne
in
mov
sub
test
add
inc
push
xlat
lds
sti
and
add
push
sbb
in
outsl
add
mov
fmuls
fisttpl
add
enter
in
nop
inc
sub
arpl
add
outsb
mov
add
xor
mov
push
add
and
mov
call
mov
lds
addr16
sbb
or
xchg
sbb
loope
sub
jno
lock
adc
add
sub
rolb
data16
inc
adc
rolb
xchg
sub
push
add
mov
push
add
scas
mov
add
sbb
arpl
add
dec
leave
xor
add
inc
or
add
add
dec
idiv
mov
loopne
mov
inc
cmp
mov
test
int3
int3
and
dec
mov
add
inc
lods
add
add
or
das
xor
cmp
and
add
dec
roll
add
inc
cmp
mov
test
test
or
enter
dec
cmp
push
jmp
lods
or
add
jbe
subb
cmp
mov
rorb
mov
lock
add
gs
add
test
push
inc
or
add
dec
aad
mov
cmp
add
add
fimuls
xchg
add
xchg
add
test
pop
dec
stc
popa
add
lcall
inc
seta
pop
inc
mov
mov
sarb
inc
and
mov
nop
add
mov
lods
sub
pusha
jnp
popa
aam
add
mov
or
inc
data16
xor
xchg
mov
dec
jl
rorb
sbb
das
int
mov
rolb
inc
add
ss
add
jae
jg
lock
cltd
aam
add
cltd
aam
pop
incl
add
add
xchg
movl
xchg
mov
lock
loopne
mov
cmp
mov
or
in
cltd
aam
pop
jne
ret
jp
lcall
add
xchg
dec
mov
mov
lret
or
dec
popa
add
or
cmp
jae
add
roll
fwait
pop
xchg
jnp
adc
jle
jb
mov
fldenv
daa
sbb
sub
push
pop
mov
cmp
pusha
adc
add
lcall
fwait
shlb
xor
enter
add
xchg
fldcw
test
inc
and
dec
xchg
pop
xor
icebp
adc
add
in
fwait
lcall
jno
xchg
cmp
sarb
push
inc
mov
nop
adc
or
mov
jno
mov
roll
lret
xor
roll
sub
xor
add
add
xchg
dec
add
in
mov
cmp
add
nop
int3
cmp
nop
push
add
xorl
pusha
lahf
clc
sub
lcall
xchg
negl
adc
in
add
cltd
aam
loopne
rcrb
dec
and
dec
adc
add
mov
adc
pusha
or
rorb
out
mov
in
adc
and
or
dec
mov
mov
add
fcoms
push
into
add
mov
scas
add
pop
xchg
or
mov
fwait
inc
sub
xchg
add
or
fwait
or
cwtl
or
imul
cmp
mov
cmp
push
adc
add
loopne
adc
xor
push
cmp
or
or
inc
sub
nop
pop
mov
xchg
dec
xchg
xchg
jp
add
adc
nop
dec
movsl
cmpsb
add
inc
add
cmp
scas
adc
scas
add
inc
xchg
xchg
add
pop
dec
cmpl
test
fwait
mov
dec
cmpl
xor
sub
sbbb
lahf
scas
add
lcall
xor
pop
in
mov
cmp
sub
cmp
dec
inc
int3
adc
and
adc
dec
add
push
lock
and
cmp
sbbb
sub
je
inc
pop
fdivs
cmpb
xor
mov
sub
add
or
mov
scas
xchg
lods
std
loopne
sub
sub
pusha
mov
movsl
nop
sub
xchg
inc
or
push
dec
dec
add
shrl
addr16
into
adc
shlb
shrb
adc
sbb
sub
push
and
std
cltd
int3
add
jb
add
mov
dec
inc
fsubl
clc
rorb
mov
or
inc
bound
add
and
icebp
add
adc
inc
add
dec
sbb
icebp
xor
test
nop
pop
dec
pop
xor
dec
int3
or
push
xchg
jo
xlat
inc
add
test
xor
mov
xchg
mov
testb
rorb
cmp
or
push
or
mov
notl
dec
add
nop
xor
lods
push
jno
nop
pop
dec
add
fisttps
out
xchg
divl
xchg
xchg
xchg
add
jo
and
add
dec
pop
cmp
add
roll
cmp
mov
adc
sbb
lret
mov
mov
inc
int3
push
shrb
xor
sbb
lret
enter
sub
sub
cmp
int3
in
inc
add
mov
out
shrb
push
mov
xor
push
add
mov
mov
xchg
das
fldl
push
sub
enter
rclb
add
daa
inc
enter
and
testb
mov
aam
sbb
xor
bound
jmp
xchg
jae
ret
xchg
scas
ret
lock
dec
xor
insb
mov
testl
lret
push
add
add
xor
fcoms
movsb
lock
into
mov
inc
or
fwait
lcall
xchg
mov
jae
sbb
cmp
int3
xchg
xchg
inc
icebp
ss
mov
sub
xor
adc
int3
das
sub
add
cmp
rorb
aam
jbe
cmp
dec
add
cmp
mov
lret
add
add
mov
fdivr
xor
rol
add
dec
or
or
incl
mov
leave
dec
cmp
dec
pushf
sub
cld
cmp
cmp
dec
mov
mov
inc
cmp
add
sub
addl
sub
imul
sub
add
add
push
rolb
xchg
add
lret
jae
scas
ret
lds
add
dec
cmp
cmp
mov
testl
lret
push
add
mov
xor
fcoms
mov
ds
add
mov
cmp
mov
fnstsw
rcll
or
dec
or
rcll
mov
or
dec
add
xchg
dec
sub
inc
add
add
xchg
inc
ds
mov
addb
mov
lods
inc
add
add
xchg
sub
add
cmp
add
and
add
notl
jge
mov
add
xor
add
add
mov
add
inc
sub
add
inc
cmp
add
mov
cmp
test
loopne
inc
sub
roll
inc
add
xor
mov
std
jno
adcb
sbbb
inc
add
add
pop
mov
dec
mov
das
dec
cltd
test
add
dec
mov
xchg
addb
subl
inc
orl
or
rorl
lods
mov
stc
cmp
inc
subl
mov
inc
test
xor
xchg
xchg
dec
add
dec
pop
cmpl
daa
lret
dec
adcl
add
enter
and
add
or
inc
cmp
inc
add
fdiv
push
jg
dec
movl
lods
push
add
dec
xchg
cmp
inc
cmp
cmp
xchg
dec
add
xor
cmp
add
mov
dec
add
sub
dec
inc
cmp
add
testl
sbb
out
xchg
scas
add
pop
inc
add
inc
dec
inc
je
cmp
mov
push
rolb
mov
divl
cmp
ja
dec
add
outsb
addb
mov
int3
addb
mov
das
inc
adc
ja
adc
enter
add
out
sarb
push
rorb
enter
add
or
roll
int3
add
scas
movb
lods
inc
add
addb
mov
inc
adc
inc
adc
xchg
xchg
xchg
scas
inc
enter
xchg
lods
inc
gs
adc
rorb
addl
cmpl
add
rcrl
filds
test
add
dec
mov
xchg
test
dec
cmpl
or
mov
orb
jecxz
fdivrs
inc
sub
ret
sub
inc
xchg
divl
xchg
scas
movb
iret
inc
sbb
shlb
scas
xchg
inc
sahf
andl
xchg
xchg
xchg
cmpb
add
cmp
inc
lret
stc
fiaddl
pop
mov
add
int3
sub
outsb
cmp
popa
subb
add
push
xchg
add
cmp
adc
addb
or
rolb
inc
fwait
lahf
dec
cmpl
rol
dec
dec
cmpl
and
sbb
add
inc
cmp
mov
add
testl
test
and
mov
add
loopne
ret
inc
push
mov
add
add
lds
rolb
arpl
inc
mov
loopne
pusha
enter
add
dec
loopne
cmp
rol
add
add
loopne
ret
cmp
ret
cmp
adc
test
add
pop
xchg
dec
or
addb
dec
rorl
sbb
rolb
fs
adcl
mov
dec
adcl
rolb
cmp
enter
int3
xchg
sub
in
mov
push
and
add
ret
xchg
xchg
idivl
mov
rcl
cwtl
xor
addb
andl
and
inc
and
sarl
and
add
rorb
xor
or
addb
roll
add
cmp
push
mov
sub
add
xchg
add
negl
xchg
scas
in
cmp
adc
add
adc
popa
and
scas
in
cmp
andl
rolb
subl
add
mov
cmp
movsb
bound
in
xchg
dec
inc
or
add
mov
cmp
in
loopne
add
ja
and
xor
add
dec
pop
mov
xchg
add
cmp
pop
lds
sbbb
dec
icebp
loope
mov
scas
fldl
subb
mov
inc
xor
xchg
sub
arpl
es
or
add
repz
pushf
inc
adc
pop
add
pop
mov
mov
xchg
roll
ret
add
rorl
stc
add
add
add
into
stc
add
hlt
add
ficomps
inc
pop
test
sub
add
fwait
pushw
lcall
inc
lods
nop
cli
test
fsubs
sbb
add
sub
jecxz
aam
jne
daa
adc
adc
pop
inc
mov
mov
inc
sub
xor
add
sahf
xchg
inc
dec
insb
xchg
or
insb
and
insb
dec
addl
mov
mov
dec
rorb
inc
push
cmpb
xchg
xchg
xchg
mov
pop
orb
aam
mov
aam
xor
sub
and
das
aam
cmp
sub
adc
cmp
xorl
push
add
mov
enter
mov
loopne
lods
add
sub
pusha
add
inc
mov
enter
push
mov
add
add
fmull
mov
sub
repnz
dec
xor
lods
bound
das
add
or
sub
addb
dec
cltd
mov
dec
pusha
push
pop
sbb
inc
push
and
add
lods
insb
popa
mov
add
add
adc
sub
aas
add
pop
jmp
add
andb
push
dec
push
cltd
xor
inc
mov
insl
xor
adc
sbb
mov
pop
xchg
sub
cs
pop
mov
dec
xchg
pop
dec
add
dec
mov
cmp
sbbl
push
xchg
jo
xchg
xchg
adcl
add
xchg
jno
push
push
and
sarl
mov
xlat
adc
cmp
add
cltd
and
push
cmpl
mov
push
xor
xchg
sub
adc
inc
mov
jb
cmpb
sub
add
shlb
dec
inc
push
pusha
sbb
xor
ret
scas
inc
aam
add
fwait
rcl
and
aam
imul
dec
mov
lock
add
dec
adc
rcrb
inc
sub
outsb
and
cmp
shl
rolb
adc
adc
nop
aaa
dec
jno
inc
cmp
cmp
xchg
sbb
mov
add
xchg
sub
rorb
add
shlb
das
divb
sbbb
add
test
test
jo
cmp
cmp
xchg
adc
cmp
inc
add
inc
sub
add
dec
inc
je
add
push
repnz
xor
add
xor
sar
add
pop
aam
popa
lret
inc
es
jo
adc
int3
push
add
mov
sbb
mov
pusha
mov
inc
adc
pop
loopne
add
lret
dec
jns
push
rorb
xor
add
add
fwait
lods
shlb
in
lock
shll
sbb
mov
mov
adc
sub
mov
testl
dec
cmpl
roll
inc
dec
sub
dec
mov
inc
add
aaa
das
lret
stc
or
cmp
xor
xchg
dec
mov
add
xchg
dec
ds
xchg
enter
jbe
mov
ss
adcb
adc
das
out
xor
add
fimuls
add
out
xor
jb
ror
dec
fadd
mov
mov
inc
cmp
lahf
lock
dec
add
mov
ret
add
das
and
or
xchg
dec
mov
add
push
sbb
add
and
inc
lock
dec
sbb
mov
dec
sbb
dec
orl
inc
mov
mov
add
mov
inc
imul
inc
cmp
push
and
test
add
mov
add
add
dec
adcl
rcrb
inc
stc
push
add
rolb
jb
add
mov
dec
or
andl
dec
mov
jo
add
dec
pxor
nop
add
mov
or
iret
add
addl
inc
sub
out
push
adc
dec
add
push
dec
cmpl
dec
mov
pop
add
rolb
cmpl
sbb
or
mov
add
ret
lret
jb
add
xor
cmp
sub
mov
addb
mov
inc
cmp
inc
cmp
pop
xchg
inc
and
mov
and
xchg
cmp
mov
shrl
ss
stc
and
adc
pop
mov
rolb
add
xchg
icebp
or
movsb
aam
add
dec
xchg
enter
add
lret
dec
pop
pusha
xor
or
pop
lret
inc
push
daa
dec
mov
inc
add
inc
mov
xor
mov
mov
and
xchg
lds
add
aad
mov
cmp
loopne
incl
dec
adc
jnp
adc
dec
subl
in
mov
mov
jns
and
add
mov
rorb
popa
add
shrl
test
dec
mov
add
aam
decl
pusha
add
mov
mov
add
pusha
push
push
push
push
push
add
push
notb
or
cmovne
comiss
adc
psrlq
or
or
inc
mov
int
sti
nop
lret
inc
inc
sahf
jo
inc
add
mov
inc
xchg
adc
jae
lock
loopne
sbbl
sub
xchg
sbbb
cmp
jo
push
push
inc
adc
push
lret
inc
in
sbb
sbb
sub
mov
rol
jo
incl
inc
add
inc
mov
mov
inc
dec
push
adcb
repz
sbb
lret
jb
add
add
decl
add
mov
adc
in
enter
add
sbb
sbb
jecxz
adc
lret
jb
lds
push
dec
jb
out
xchg
xor
mov
lds
jge
sbb
dec
punpcklbw
sbb
sub
push
lret
inc
addw
pop
test
and
add
adc
test
shll
mov
add
scas
pushf
sub
ljmp
xor
dec
repnz
xchg
sarb
cld
nop
adc
sub
add
dec
xchg
rolb
dec
xchg
aam
adc
rclb
andb
ror
mov
and
mov
and
std
adc
loopne
add
dec
adc
add
or
or
inc
and
add
std
and
addb
lret
and
or
aam
fnstenv
add
adc
dec
mov
subl
fsubrl
or
sub
and
mov
fdivl
inc
adc
sbb
add
cmp
add
cmp
inc
cmp
add
cmp
mov
loope
add
iret
stc
fiaddl
push
add
inc
je
add
lret
jb
add
jb
movb
cmp
sti
nop
add
xorb
xchg
lret
inc
xor
fadds
add
and
mov
dec
inc
inc
add
add
inc
add
dec
orl
fmull
loopne
add
mov
orb
xchg
cmp
lock
push
add
add
fadds
popf
idiv
fbstp
fiadds
push
or
push
das
rclb
shrl
mov
subb
add
cmp
out
sbbb
lods
lret
inc
fiadds
mov
mov
stc
push
or
pop
andb
dec
mov
cmp
cmp
enter
mov
add
out
or
and
mov
add
add
or
out
or
sbbb
movsb
dec
mov
iret
inc
add
adcl
dec
adcl
out
push
adc
dec
add
inc
xorb
pop
add
dec
lods
add
add
addl
cmp
add
and
dec
rolb
xorl
rorb
xor
mov
mov
xor
mov
mov
jno
cmp
cmpl
js
adc
and
jl
lds
ret
clc
cltd
mov
clc
nop
mov
inc
rcr
sbb
xchg
inc
test
inc
jl
lcall
add
cmp
lcall
push
add
dec
add
cld
fldl
dec
and
faddl
inc
ds
and
addl
sti
xchg
dec
sete
lret
inc
fcom
add
dec
xchg
inc
mov
inc
sub
sub
cmp
inc
rol
sub
shrb
shrb
sub
adc
adc
cmpb
adc
push
xor
adc
inc
adc
in
xor
cmp
mov
inc
inc
xchg
movb
movl
loopne
xchg
inc
daa
dec
xchg
xchg
or
mov
push
sub
adcl
inc
adcb
add
add
adc
add
inc
pop
movsl
dec
addl
mov
dec
xchg
add
dec
int
xchg
xor
mov
fsubrs
rolb
add
int3
inc
cmp
rcrb
cmp
add
sahf
or
inc
jb
add
add
cltd
lret
inc
pusha
add
fwait
mov
int
cmp
inc
mov
xor
lret
jb
rolb
add
int
mov
dec
dec
add
dec
call
adcb
inc
dec
das
ljmp
xchg
aam
xchg
xor
push
add
dec
dec
xchg
enter
out
subb
mov
dec
ror
adc
add
pusha
cmp
add
or
mov
std
mov
shlb
dec
add
add
aam
and
adcb
mov
add
rorb
or
push
subl
dec
sub
adc
sub
mov
jp
inc
mov
cld
movsl
filds
and
cmp
loopne
inc
inc
lret
inc
out
shll
loopne
mov
inc
inc
xchg
cmp
fildl
add
and
fsubp
add
push
inc
inc
mov
add
add
fsubl
fadd
mov
dec
add
cltd
lcall
out
mov
addl
lret
inc
fadd
add
scas
add
dec
nop
pop
sub
sti
inc
or
mov
dec
sbb
or
add
inc
xor
push
and
aad
xchg
xor
lret
inc
sub
add
test
incb
xor
add
add
das
sub
dec
inc
dec
add
movl
int3
das
daa
adc
add
lcall
bswap
scas
add
cmp
dec
orb
dec
orb
iret
decb
inc
add
or
das
push
inc
inc
mov
mov
mov
add
mov
orl
mov
pusha
add
sbb
addb
xchg
rolb
or
inc
add
sbb
add
dec
subb
jmp
mov
rolb
add
or
inc
add
aad
or
mov
testl
dec
pop
loopne
sub
xor
and
add
int3
mov
pop
orl
sub
subb
mov
dec
xchg
dec
cmpb
mov
lret
add
int3
add
add
adc
loopne
add
lcall
push
add
push
lret
dec
add
push
testl
dec
xchg
inc
push
rol
sub
rolb
dec
roll
mov
notl
incl
das
ret
add
push
push
add
push
add
pop
sub
sbb
or
and
clc
dec
sbb
add
inc
out
add
push
loope
sub
loopne
lret
mov
inc
add
lret
inc
aas
add
add
xchg
subb
inc
adc
sbb
pop
add
testl
or
pushf
sub
sbb
mov
xchg
ror
sub
js
add
inc
pop
mov
mov
inc
add
sub
dec
mov
das
or
lret
mov
adc
push
add
sub
lret
inc
cltd
mov
das
pop
jae
inc
add
adc
add
inc
adc
mov
inc
in
add
enter
inc
cmp
mov
stc
addb
mov
stc
jecxz
lock
and
shll
inc
ds
add
add
andb
sub
lret
inc
adcb
aas
dec
lret
inc
jo
add
mov
push
jge
lret
xchg
add
inc
jae
add
int
inc
inc
push
add
lret
inc
popa
addb
scas
adc
lock
add
xor
pop
xchg
add
inc
mov
add
into
mov
icebp
add
mov
add
mov
add
shrb
push
add
mov
hlt
pusha
add
pop
pop
jecxz
add
pop
xlat
xor
stc
int
pop
mov
add
add
addl
aaa
aas
cmp
stc
addl
mov
sbb
mov
addb
pop
mov
inc
jns
add
adc
loope
inc
adc
adcl
adc
sub
inc
add
dec
add
mov
loope
insl
inc
add
mov
loopne
aam
cwtl
pop
mov
add
add
fwait
xor
incl
mov
add
inc
dec
int3
inc
or
xchg
shr
das
leave
add
push
std
xchg
mov
test
pop
xchg
dec
adcb
push
lock
clc
mov
clc
mov
inc
xor
mov
jb
loopne
rolb
jb
add
push
add
jo
and
push
xor
inc
dec
cmpl
mov
xchg
xor
shrl
jmp
mov
cmp
dec
ds
test
lret
cmpb
in
test
andl
add
add
add
lret
inc
in
or
cmp
push
add
ljmp
xor
dec
add
sub
sub
popa
cltd
xor
adc
incl
dec
mov
dec
cmpl
sub
sub
ror
inc
jns
pusha
dec
andl
test
loopne
sub
sub
data16
add
lds
in
inc
xorl
test
clc
mov
jb
outsb
lds
imul
adc
adc
jmp
and
push
rcll
or
andb
ret
dec
or
adcb
and
jo
add
int3
xchg
adc
inc
lahf
adc
and
mov
mov
sub
mov
rclb
dec
mov
lret
inc
add
add
movsb
adc
add
out
pop
test
dec
dec
cld
xor
cld
jo
inc
lret
mov
sub
sbbb
add
lret
jb
xlat
dec
xor
pop
dec
rol
inc
xchg
rol
das
push
cli
es
add
cmp
daa
das
mov
xorl
xchg
movb
add
and
push
inc
cmp
sbb
sub
add
add
sbb
add
ss
and
dec
mov
pusha
and
and
fbld
and
lret
jb
roll
sub
pop
jo
dec
ret
or
aad
push
push
xchg
add
les
das
nop
adc
xor
and
std
mov
inc
mov
and
adc
inc
mov
add
cltd
cmp
or
clc
adc
fdivp
add
add
cmp
sarb
insb
or
add
or
inc
sti
pusha
add
or
xor
loopne
adc
stos
rcll
mov
cmp
and
add
mov
sub
cmp
add
rol
push
inc
cmp
bound
jb
repz
jmp
add
or
icebp
or
mov
and
add
or
xlat
addb
or
or
outsb
dec
fldln2
xchg
lock
or
push
mov
shlb
test
int3
xchg
pop
jo
xchg
or
or
add
mov
enter
add
cld
enter
enter
sub
inc
add
add
movsb
out
lock
sub
mov
daa
test
daa
nop
iret
daa
rorb
subl
mov
roll
add
sub
add
add
ljmp
fsubrs
outsl
sub
jns
sub
aad
int
pop
loope
arpl
inc
push
mov
xor
cmp
mov
mov
lret
inc
cmp
cmp
add
sub
dec
mov
lret
add
add
dec
cltd
cmp
decl
std
lcall
lret
jb
dec
mov
lret
add
into
std
mov
mov
add
adc
fimuls
mov
xlat
lcall
add
incl
xor
cwtl
xor
lret
inc
add
lcall
add
cmp
dec
and
loopne
mov
dec
adc
fmuls
cmp
mov
cmp
int3
sub
add
inc
call
add
popl
and
add
mov
add
adc
inc
adc
xchg
lret
inc
push
and
dec
lret
jb
xchg
nop
lret
inc
scas
push
add
sbb
iret
jmp
dec
test
add
xlat
add
xchg
or
cs
inc
mov
sub
test
dec
sbb
push
add
push
fs
sbbb
lret
jb
add
add
dec
add
add
cmpl
sub
adc
dec
mov
or
sti
add
add
dec
add
das
lods
add
xor
sbb
add
sbb
testl
add
add
mov
or
add
dec
mov
add
inc
and
dec
subl
test
test
lret
push
add
inc
add
cmp
mov
jb
orl
adc
xor
mov
add
lret
lret
inc
cmp
add
add
loopne
inc
mov
add
adcb
incl
lret
dec
lea
and
shrb
mov
test
sbb
add
mov
add
faddl
dec
xchg
fmuls
sub
cmc
and
cmp
cmp
das
add
dec
xchg
fsubr
push
lcall
iret
decb
inc
ds
pop
inc
pop
add
jmp
inc
or
pop
sub
add
test
add
push
lret
inc
push
xor
pusha
cmp
sbb
push
rolb
dec
jle
add
mov
pop
add
into
mov
lret
add
inc
add
inc
ds
inc
ds
mov
inc
ds
dec
add
test
add
cmpsb
inc
inc
add
mov
adc
into
mov
xchg
sub
dec
sbb
int
add
out
adc
in
inc
fstl
adcl
mov
adc
or
adc
cmp
or
int
andb
mov
enter
or
inc
arpl
sub
unpcklps
add
adc
into
mov
dec
es
rorb
adc
adc
or
mov
inc
push
shlb
adc
and
imul
pusha
cmp
mov
inc
adc
insb
dec
xchg
add
dec
enter
and
int
pop
sbb
mov
push
shrb
inc
or
sub
push
push
mov
push
enter
lret
inc
push
imul
push
push
pop
outsb
pop
inc
xchg
dec
push
push
mov
mov
inc
in
push
testl
inc
das
xor
sbb
dec
mov
test
stos
and
mov
lret
inc
push
and
dec
xchg
xor
push
ds
mov
outsl
mov
add
shrb
sar
add
subb
and
insl
dec
or
outsb
shr
add
xchg
rorb
flds
sbb
rorb
incb
subb
dec
xchg
incb
insb
mov
in
out
or
or
dec
adc
pop
decl
mov
xor
sbb
mov
mov
mov
mov
popa
adcb
mov
test
das
jne
sbb
sbb
popa
push
loopne
mov
xchg
push
popa
jo
and
in
js
inc
pusha
jne
inc
push
gs
push
stos
arpl
sub
push
stc
push
add
bound
add
add
je
or
add
xchg
sub
push
int3
add
sbb
add
addb
loopne
lcall
popa
addb
add
lret
test
add
enter
add
mov
lret
inc
or
add
mov
or
jae
add
push
add
imul
sbb
inc
xchg
mov
sbb
inc
add
push
or
add
lret
dec
mov
add
or
jb
and
rcl
outsb
cwtl
loopne
and
mov
xchg
and
in
add
add
fcomi
add
add
rolb
adc
aad
add
add
push
add
ss
add
add
rolb
adc
sbb
mov
add
add
lock
add
in
adc
imul
push
xor
pop
add
add
mov
add
cmpsb
lock
add
nop
rolb
add
jno
add
add
das
es
sarb
mov
and
cmp
inc
sti
nop
mov
sub
jo
lret
jb
rclb
or
dec
add
xor
movsl
mov
jno
add
mov
in
add
lea
das
xchg
cmp
ret
pusha
lret
jb
insb
test
mov
adc
lea
repnz
and
stc
fidivrl
shll
adc
nop
iret
loope
sbbl
or
add
nop
mov
inc
mov
xchg
pop
rolb
mov
xchg
dec
xchg
rorb
rolb
sub
or
into
inc
jb
in
out
enter
nop
add
xchg
ljmp
xadd
rolb
ret
sarb
lret
test
mov
scas
cmp
imul
insb
pusha
add
and
xchg
orb
andl
or
add
pushf
inc
movl
and
adc
mov
cmp
mov
sahf
shrl
add
popf
popf
inc
add
iret
dec
lcall
mov
pop
rcrb
mov
dec
orl
add
sub
mov
popf
adc
inc
adc
and
jl
lock
sub
xchg
test
add
add
sbb
adc
int
add
add
push
or
pop
add
movl
adc
or
inc
and
inc
inc
and
dec
xor
add
and
and
scas
push
add
and
jmp
mov
adc
mov
mov
or
int3
lock
xchg
pusha
or
sub
orb
and
jbe
add
sub
cs
adc
adc
sbb
add
push
dec
or
add
lds
dec
or
mov
out
mov
xor
xor
rorb
xor
and
add
pxor
cmp
aaa
rclb
push
mov
adc
fadd
adc
sbb
sub
es
and
loope
inc
aaa
sbb
ret
xorb
sub
inc
push
pusha
shlb
or
mov
cmp
xchg
enter
rorb
xor
clc
add
mov
mov
rolb
cmp
clc
dec
adc
mov
sub
add
inc
addl
and
lret
inc
xchg
and
add
add
std
mov
inc
pushf
mov
dec
inc
dec
adc
movl
int3
mov
dec
and
add
dec
adcl
pop
xor
filds
fcoml
dec
lcall
add
shrb
xchg
dec
mov
movl
inc
mov
sub
jb
lock
test
dec
or
and
add
dec
andl
dec
mov
dec
addb
add
mov
inc
cmpb
iret
dec
dec
xor
pusha
inc
mov
das
fmuls
inc
sbb
add
mov
sbbl
scas
ds
add
xchg
cmp
cmp
push
addb
andl
add
inc
enter
cmp
and
add
test
shl
test
adc
xchg
in
push
and
loope
sbb
cmp
pop
inc
es
shll
fstl
bswap
inc
xchg
dec
adc
shl
mov
mov
xchg
or
jno
inc
or
push
xchg
mov
or
adc
adcl
dec
dec
inc
xchg
push
push
in
and
jo
sub
add
cmp
dec
adc
and
add
sbb
loope
push
andl
sub
ljmp
or
dec
cmpl
and
lock
mov
rcrb
inc
add
sub
push
ret
loop
rorb
cltd
xor
loopne
add
das
sub
das
or
add
cld
xor
decl
mov
add
xchg
xor
add
add
sub
push
cmp
cmp
mov
cltd
xor
cmp
incl
das
fisttpl
mov
fdivr
lcall
int3
mov
testl
decl
dec
add
cmp
add
and
cmp
loopne
test
loopne
mov
dec
add
scas
add
mov
dec
cmp
aam
xorb
mov
inc
mov
cltd
xorb
jo
push
sub
xor
ret
sub
or
gs
inc
andb
or
add
or
arpl
dec
les
and
or
adc
jb
dec
or
add
inc
and
dec
add
dec
ror
xchg
lret
inc
pop
add
add
dec
add
xchg
dec
invd
xchg
push
add
adc
dec
cltd
cmp
or
xchg
addb
in
adc
inc
adc
in
xchg
fimuls
mov
mov
incl
add
mov
add
mov
inc
mov
xor
sub
add
add
or
add
push
add
add
add
dec
inc
xchg
cwtl
incl
sub
adc
lds
cwtl
ss
adcl
hlt
add
jb
xchg
std
xorl
add
pop
dec
push
sub
add
add
cli
add
xchg
in
pop
adc
sub
sub
and
add
adc
pop
lcall
lds
pop
dec
add
subb
inc
pop
adc
sub
enter
add
cmp
lret
inc
mov
addb
fld
adc
mov
out
sbb
inc
mov
dec
addb
inc
mov
scas
add
pop
sub
in
sub
add
cmp
das
loope
add
sbb
iret
decb
and
push
dec
xchg
lret
inc
or
mov
xchg
and
lret
inc
mov
add
loopne
add
mov
add
into
lret
add
add
add
inc
add
or
enter
cmp
leave
mov
stc
inc
add
add
movsb
lret
inc
xor
add
faddl
addl
lret
inc
pop
add
or
inc
cmp
lret
add
sahf
mov
lret
inc
xchg
xchg
add
stc
rolb
mov
add
mov
add
inc
xchg
icebp
pusha
add
mov
orb
add
add
dec
inc
shl
add
add
add
dec
mov
xor
int3
rclb
add
lds
ja
add
aam
gs
lret
dec
inc
or
xchg
jns
and
and
inc
mov
scas
add
pushf
fwait
lcall
push
push
popl
test
mov
add
add
addb
or
pusha
add
test
stos
loopne
add
pusha
add
add
xchg
test
pop
pusha
add
loopne
andb
loopne
and
xchg
test
dec
pusha
or
stos
pusha
add
sahf
test
stos
ss
push
add
add
pusha
add
push
pusha
add
pusha
add
add
test
add
pusha
add
pusha
add
pusha
add
add
cltd
test
add
add
add
or
add
pusha
add
out
test
sbb
mov
test
inc
mov
mov
aam
add
mov
add
subl
add
pusha
add
pusha
add
mov
pusha
add
mov
pusha
add
add
pusha
add
lods
test
add
add
or
test
add
add
add
mov
int3
add
into
iret
enter
leave
add
lret
aam
xlat
rolb
rcl
fiadds
add
sbb
fnsetpm(287
in
add
out
out
loope
jecxz
add
add
in
out
out
call
add
jmp
hlt
cmc
testb
lock
repnz
repnz
repz
std
incl
addb
add
cli
sti
test
addl
add
add
pusha
add
ljmp
sbbl
test
add
add
fwait
test
mov
pusha
add
pusha
add
cmpsl
test
xor
jecxz
test
popf
push
pusha
add
add
add
pusha
or
pop
cmpsb
test
popa
add
pop
push
loopne
lret
push
pusha
add
pusha
add
add
add
add
add
pusha
add
add
add
pop
push
loopne
stos
shl
add
pusha
add
add
dec
sub
clc
add
add
inc
mov
cmp
xor
pusha
add
xchg
dec
cltd
rclb
dec
adc
push
dec
cmpl
sbb
sbb
mov
dec
add
dec
xor
add
stos
sahf
lret
es
scas
add
sub
cmp
loope
adc
loopne
std
mov
mov
std
mov
fmul
dec
jne
add
mov
sub
jae
rcr
add
mov
fmuls
test
add
dec
inc
add
xchg
add
inc
loopne
add
in
mov
in
mov
cmp
incl
cmp
add
test
inc
sti
adcl
inc
xor
xor
add
add
daa
cmp
dec
xor
xorb
ret
scas
cmp
dec
or
or
sub
add
syscall
sub
add
add
fsubp
add
dec
mov
lret
jae
enter
mov
dec
fadd
push
loopne
adc
lret
imul
fadd
or
movl
or
addl
dec
orl
add
add
xorb
iret
jno
push
and
inc
mov
add
roll
lods
roll
pop
add
add
add
add
add
add
shrl
dec
add
nop
add
dec
inc
xchg
lock
test
js
cmp
nop
rolb
add
jge
add
add
loopne
dec
mov
jo
fdivrp
inc
add
mov
lret
add
mov
scas
sub
add
dec
xchg
inc
add
rol
or
add
sub
push
add
mov
mov
inc
sbb
add
dec
pop
out
mov
mov
mov
pusha
add
dec
add
add
test
add
add
cld
and
jo
add
mov
jl
leave
add
jns
add
cmp
lock
int3
add
clc
and
dec
dec
mov
mov
das
fldcw
adc
dec
push
and
nop
das
enter
add
add
std
mov
or
lds
daa
aaa
sub
push
sbb
and
dec
inc
faddl
lock
pop
scas
popf
xor
sbbb
out
mov
dec
or
add
xor
decl
ljmp
dec
or
shll
call
add
and
sub
cltd
rolb
sbbl
or
xor
fmull
and
mov
sti
mov
inc
popa
pushf
adc
add
inc
mov
dec
jns
xor
push
add
pop
aam
add
sub
addl
jns
add
or
enter
add
adc
adc
rclb
add
cmp
sar
add
add
mov
rolb
or
inc
and
int3
inc
and
lds
xor
sbb
mov
dec
xchg
push
rorl
add
add
mov
or
add
jb
int3
add
orb
inc
dec
cltd
sub
sub
sbb
add
or
enter
adc
mov
inc
or
inc
add
cmp
lea
inc
or
aaa
outsl
add
adc
dec
mov
mov
lods
dec
cmp
cwtl
add
sbb
mov
cmp
dec
cmp
sbb
sbb
pop
rolb
jo
imull
out
adc
dec
out
loop
cmp
adc
dec
ret
mov
mov
inc
add
sbb
mov
dec
add
loop
mov
cmp
dec
xorb
enter
subl
or
cwtl
mov
mov
das
fmulp
jb
lds
shrl
adcl
adc
test
cmpb
push
mov
sub
and
addb
xchg
sub
std
inc
ret
data16
dec
mov
cmp
or
inc
add
add
push
mov
das
movl
mov
or
mov
xchg
or
or
bound
addb
or
fimull
popa
sub
dec
add
mov
addb
mov
dec
push
subl
int
or
inc
mov
pop
addl
add
decl
inc
std
into
mov
add
notl
dec
mov
sub
pop
mov
std
xchg
xor
lcall
sub
cmp
adc
movl
mov
std
xchg
add
mov
incl
lret
inc
lods
add
lret
jb
test
mov
mov
decl
mov
fdivl
inc
ret
aaa
das
lds
add
pop
cltd
cmp
inc
testl
jno
push
cmp
inc
adc
xchg
add
push
dec
cltd
or
and
sub
or
or
mov
std
repnz
mov
std
mov
dec
mov
stc
sbb
cmp
lret
inc
and
test
fbld
fsubs
cmp
mov
lret
dec
adc
xchg
add
add
add
rorb
push
aas
mov
dec
adc
add
sahf
std
push
inc
mov
shlb
mov
cmpsb
cmpsb
ss
and
es
xor
cld
or
test
xchg
mov
cmpsb
mov
mov
incl
cmp
nop
inc
mov
mov
sti
into
mov
push
push
xor
mov
aad
aam
mov
int
sub
mov
xorl
add
xchg
sbb
das
aad
or
lods
mov
stc
add
xor
mov
inc
mov
enter
aas
cmp
lods
add
add
leave
and
mov
add
sub
dec
mov
inc
or
mov
icebp
test
add
dec
into
dec
add
cmp
add
shrb
cmp
cmp
mov
std
mov
add
sarb
test
inc
add
xchg
loopne
add
cmp
push
add
enter
mov
adc
sbb
jns
add
das
loopne
fs
inc
adc
mov
dec
xchg
push
out
xchg
dec
dec
mov
dec
aad
xchg
push
mov
shrb
scas
cmp
faddl
add
adcb
add
int3
mov
add
test
dec
addb
cmp
and
repnz
add
mov
rolb
sub
stos
and
inc
add
dec
or
or
int3
xchg
sub
or
add
cmp
cs
or
xchg
xchg
cmp
pop
sub
xor
dec
push
add
xchg
mov
add
sub
icebp
add
inc
cmp
sbb
test
pusha
push
and
pop
xchg
sub
add
jp
add
stos
cmp
lcall
int3
add
mov
add
cmp
jl
test
xchg
add
cmp
cmp
mov
lret
rolb
testl
xchg
dec
sub
call
pop
xchg
dec
mov
jl
add
add
dec
cltd
cmp
adc
add
jnp
push
aam
xchg
inc
dec
add
dec
addb
xchg
add
push
lret
inc
arpl
push
add
add
mov
dec
xorl
jno
inc
inc
add
dec
or
add
dec
adcl
xor
add
sub
add
add
xchg
xchg
cmp
les
pop
dec
xor
aaa
mov
rolb
pop
add
mov
pop
add
mov
adc
shl
add
cmp
pusha
inc
add
xchg
xchg
sub
cmp
iret
xchg
cmp
sarl
cmp
scas
add
rolb
cmpl
orb
cltd
add
mov
std
cltd
xor
xor
add
add
dec
cmpl
add
dec
rolb
add
test
notl
testl
dec
xchg
add
lret
jae
dec
shl
testb
notb
mov
mov
lcall
sar
pop
mov
or
mov
xchg
xchg
add
ror
fmul
jae
push
mov
mov
idivl
jg
add
and
xchg
das
xor
and
ss
enter
xchg
dec
test
dec
inc
test
fadds
cwtl
sbbb
add
or
roll
add
lret
inc
andb
and
pushf
std
inc
test
adc
inc
add
pop
testl
jns
orb
mov
in
jno
add
rorb
das
mov
dec
roll
int3
add
inc
ret
dec
xor
movsl
adc
or
mov
add
add
scas
ret
add
xorl
icebp
add
loopne
sub
das
fildl
shrl
into
add
scas
ret
lcall
mov
inc
add
test
xor
ret
xchg
and
sub
inc
add
pusha
xchg
add
mov
dec
sbbl
add
sub
rorb
ret
add
adcl
add
lret
jb
add
das
testl
cmp
incl
inc
or
adc
adc
inc
add
mov
add
test
add
movb
xchg
dec
or
negb
cmp
lods
aam
inc
mov
add
rolb
add
adc
jns
cmp
cmp
lods
add
add
clc
adc
push
add
sub
popf
add
cmp
mov
dec
add
xchg
xchg
cmp
add
mov
cmp
or
mov
cmp
rclb
rorl
add
fwait
lcall
inc
xchg
testl
and
cltd
xchg
or
jb
addb
mov
cmp
rcl
roll
inc
cmp
mov
scas
add
pop
movl
add
add
or
iret
orb
inc
add
adc
push
enter
xchg
inc
add
dec
cmpl
xchg
scas
roll
or
rol
cmp
sub
pusha
pop
loopne
dec
icebp
popa
push
dec
sbb
add
inc
aas
lds
cmp
mov
inc
mov
sarl
cmp
adc
add
adc
sub
xchg
xchg
dec
icebp
and
push
xchg
scas
rcrb
xor
add
and
fimuls
xor
mov
xchg
dec
mov
xchg
scas
cmp
xchg
pusha
jns
add
or
xor
or
mov
movsb
imul
xchg
add
and
jl
add
rolb
rolb
add
and
adc
add
add
jge
and
sub
rolb
pop
adc
add
add
cmp
cmp
sbb
add
sbb
aas
mov
ret
idivl
dec
cltd
in
enter
rolb
in
rolb
std
cltd
fdivl
fs
cmp
and
inc
cmp
mov
adc
in
mov
add
mov
inc
fsub
daa
in
lods
rolb
mov
sbb
add
add
loopne
and
inc
cmp
rorb
and
cmpxchg
stc
or
or
add
leave
dec
lds
inc
or
and
add
pop
cltd
or
in
xor
test
add
fs
xchg
enter
std
or
or
scas
int3
add
cmp
jnp
add
add
dec
add
add
hlt
lods
cmp
dec
sbb
inc
pop
mov
inc
mov
scas
add
aas
insb
rorb
mov
cmp
mov
mov
cmpl
xor
rol
sub
adc
mov
inc
add
xchg
sub
popa
or
rol
cmp
ret
cmpb
sub
add
cmp
sub
inc
add
add
and
or
add
das
sub
inc
and
sbbb
scas
xchg
scas
lds
test
adc
loopne
dec
cmp
mov
pop
add
add
add
mov
xor
pop
add
std
cltd
shlb
loopne
cmpsb
sbb
mov
cmpb
jmp
out
pusha
xor
xorb
addb
cmp
test
push
sbbb
inc
pop
sub
add
mov
das
iret
popf
loopne
call
mov
nopl
push
inc
add
sub
pop
push
cmp
sarl
inc
subb
xchg
xchg
cmp
sub
inc
shll
addb
dec
sub
or
add
pop
mov
inc
mov
add
rolb
aas
add
cmpl
lret
inc
icebp
and
inc
dec
or
mov
loopne
rclb
lret
inc
and
das
ret
add
lret
jb
divl
out
add
add
mov
dec
add
xorl
addb
das
ret
addb
or
add
add
cmpl
or
xor
cmpb
cmpl
add
clc
lds
aam
sub
push
xor
pop
incl
cmp
inc
dec
inc
add
and
test
jno
lcall
mov
and
add
mov
cmp
fdivrs
mov
cmp
mov
jo
xchg
dec
add
cld
rorb
ret
dec
xchg
lock
inc
or
adc
or
inc
cld
shrl
das
adc
dec
xor
add
cmp
xchg
xchg
sub
mov
das
inc
lret
loopne
adc
xchg
sub
add
xchg
and
cmp
adc
xchg
sub
fwait
rolb
cmpl
mov
cmpl
pop
inc
cmp
push
push
pop
sub
jo
and
push
dec
int3
and
inc
inc
sub
mov
add
xchg
rclb
sbb
and
lods
push
fwait
xor
rorb
push
and
lock
dec
cmp
push
xchg
jp
nop
adc
and
cmp
add
adc
adc
std
mov
mov
mov
jno
dec
inc
push
add
sub
sahf
adc
and
lcall
dec
pop
inc
lahf
inc
arpl
dec
dec
add
xchg
lods
int
add
sarb
cmp
les
mov
scas
aam
add
or
clc
xchg
and
loopne
dec
xorl
mov
addl
add
dec
cltd
or
adcl
dec
rorb
add
add
add
aaa
mov
or
cmp
push
std
inc
test
or
clc
mov
xchg
nop
xchg
dec
mov
xchg
nop
adc
mov
cmp
dec
adc
mov
adc
cmp
adc
jbe
sub
add
loop
addb
add
rcrb
adc
cmp
mov
cmp
in
xor
mov
dec
ret
adc
inc
fstl
adc
dec
pop
das
int3
xchg
sub
sbb
add
dec
lahf
push
xchg
and
add
fidivl
repz
test
mov
ja
in
jo
mov
xchg
rolb
mov
cwtl
add
push
mov
nop
adc
cmpl
sarl
inc
or
xchg
test
xchg
add
addl
cwtl
add
and
xchg
dec
mov
enter
xchg
xchg
sub
adc
rclb
icebp
xchg
push
xchg
xchg
jnp
push
adcl
mov
adc
addl
cmpsb
xor
adc
pop
inc
sbb
mov
shlb
add
dec
xchg
jb
sbbl
je
fs
dec
das
into
add
arpl
add
inc
inc
push
dec
mov
rclb
lock
sub
cmp
ja
add
bound
or
mov
icebp
jo
add
loope
add
testl
inc
add
rcl
rcrb
sub
lods
and
cmp
adc
add
jae
roll
sbb
loope
lcall
mov
jge
ret
and
add
movsl
xor
lret
add
leave
icebp
add
out
add
and
rolb
gs
add
xchg
xchg
sub
pusha
push
movl
sti
xchg
jno
xchg
inc
sub
xor
mov
das
inc
cmc
dec
enter
addl
dec
leave
test
lret
jae
loope
icebp
add
rolb
mov
test
xchg
or
mov
xchg
jmp
cmp
and
jl
add
add
and
mov
leave
loopne
int3
loop
add
add
insb
xchg
addr16
add
setp
push
data16
cmp
sub
int3
adcb
xchg
add
pop
jo
inc
add
inc
repnz
rolb
xchg
stc
lds
lret
mov
pusha
adc
mov
xor
lret
inc
push
addb
mov
and
dec
mov
loopne
sub
inc
add
xor
cmp
fimull
xchg
sub
push
lock
dec
and
dec
movsb
inc
add
xor
das
inc
add
inc
add
add
jl
sub
add
rolb
gs
or
push
adc
cmp
xor
xchg
cmp
add
loopne
or
dec
js
dec
adc
sub
lcall
inc
aam
mov
add
ret
xchg
int3
push
stc
add
mov
mov
dec
adc
xor
cmp
and
inc
mov
add
or
push
icebp
mov
cmp
add
leave
adc
mov
lods
add
das
sarb
mov
aad
lds
add
xchg
sub
inc
inc
xor
stos
mov
dec
and
sbb
push
xchg
dec
mov
adcl
int3
sub
add
add
inc
add
ret
dec
test
sub
sarb
add
inc
cmp
mov
inc
cmp
add
mov
xchg
or
sub
mov
mov
inc
sub
mov
inc
add
mov
dec
aas
das
rol
andl
mov
scas
add
add
dec
mov
jmp
push
jo
xchg
cmp
add
loopne
xor
pop
sub
fwait
add
push
rclb
push
xchg
es
cmp
inc
jbe
adc
fs
inc
rorb
into
adc
popa
jle
jo
pop
dec
add
pusha
jge
cmpsl
stc
ret
adc
xor
lock
scas
inc
add
aas
mov
cmpl
inc
mov
xor
sbb
inc
adc
scas
lds
loop
mov
push
adc
jne
sub
hlt
inc
inc
cmp
inc
pop
icebp
add
in
adc
mov
pusha
add
add
add
sub
xchg
mov
repnz
mov
add
mov
test
mov
add
popa
pop
mov
scas
xor
xor
add
pusha
add
orl
test
xchg
or
adc
mov
push
mov
int
add
add
pusha
cmp
cltd
lahf
mov
push
rolb
dec
add
inc
sub
add
scas
add
cmp
adc
test
xchg
or
rorl
add
scas
lds
sub
int
add
dec
cmpl
add
xchg
scas
add
dec
inc
cld
cmp
cmp
cmp
int3
add
lds
hlt
cmp
cmp
in
add
dec
add
test
add
test
dec
or
nop
adc
jp
sub
add
fwait
xchg
xchg
dec
mov
jl
add
mov
xor
cmp
inc
insb
test
jg
add
xchg
add
icebp
jo
xchg
cmp
add
incl
mov
dec
add
dec
addl
inc
add
add
lds
dec
sbbl
add
push
xor
adc
sub
cmpb
cmp
add
or
xchg
xchg
dec
stc
sbb
xchg
add
lods
push
dec
test
push
dec
xor
sub
mov
lods
test
dec
add
dec
sbb
in
addb
fwait
lcall
add
testl
pop
add
js
pop
js
adc
mov
andl
andb
jnp
add
push
inc
add
adc
pop
xchg
xchg
sbb
sarl
insb
add
orb
dec
cmpl
lahf
adcl
rcll
aam
add
adc
add
sub
subb
testb
xchg
lret
inc
aas
shll
lcall
das
xor
dec
xchg
dec
addl
inc
mov
dec
add
inc
mov
call
sbb
inc
pop
mov
dec
iret
cmp
cmp
or
adc
sub
pushf
add
add
cmp
incl
testl
add
dec
rorb
mov
dec
add
inc
dec
sar
add
andb
out
rol
xchg
sbb
test
xchg
scas
idivl
add
adc
cmp
adc
inc
add
out
cltd
enter
rol
xchg
add
shll
or
sub
scas
lds
or
adc
xor
xchg
xchg
cmp
push
add
enter
dec
mov
in
jge
inc
add
add
clc
add
add
cmp
xor
cmp
dec
xchg
dec
mov
sbb
inc
sub
xchg
add
jle
pop
dec
cmp
stc
int3
add
sub
mov
testb
or
add
leave
add
inc
add
out
je
adc
xchg
lods
add
addl
leave
addl
mov
add
jle
adc
and
shrb
sub
sub
shrb
cmp
enter
add
inc
push
inc
or
icebp
push
sbbb
adc
adc
rolb
icebp
add
lods
addr16
or
xor
rolb
push
aam
test
les
faddl
loopne
inc
add
inc
add
inc
add
inc
add
adc
addb
stc
add
stc
adcl
add
mov
aam
stc
add
mov
cmpb
lcall
daa
add
mov
sub
jbe
cmp
rclb
rol
dec
xchg
jnp
rclb
in
add
sub
stos
cmp
fwait
mov
add
add
pop
inc
add
mov
lods
lods
jb
add
sub
std
add
sub
sub
cmp
addr16
rolb
cmp
add
cmp
inc
cwtl
rolb
and
add
xor
add
sar
mov
je
lahf
inc
addr16
andl
mov
jp
orb
scas
mov
mov
daa
add
inc
testb
xchg
cmp
adc
and
dec
inc
cmp
inc
mov
dec
dec
roll
xchg
sub
mov
mov
lret
push
add
loope
rclb
adc
add
cmp
inc
dec
xorb
stc
mov
inc
push
addb
cmp
int3
add
test
dec
or
aas
pusha
xchg
mov
cmp
add
add
xchg
cmp
daa
pusha
add
jecxz
mov
add
inc
dec
pop
and
sub
dec
mov
icebp
popa
cmovg
inc
add
leave
cmp
inc
add
nop
mov
das
jecxz
addl
or
and
add
sub
and
xchg
cmpsb
pop
shl
and
js
faddl
add
xor
adc
pop
add
jle
jnp
xchg
xchg
dec
fnstenv
add
add
dec
cmpsb
popf
cmp
xchg
cmp
xor
scas
push
scas
add
cmp
xchg
xchg
scas
push
xchg
xorb
cmpl
cmp
pushf
add
cmp
loopne
cmp
mov
adcl
mov
mov
cmp
mov
shrb
testl
inc
push
les
mov
add
lcall
push
add
sbb
add
mov
sub
filds
add
roll
int
dec
cmp
push
push
cmp
popa
fwait
sub
pop
mov
push
inc
rcrb
push
inc
and
sbb
add
cmp
rcrb
lahf
mov
dec
fldenv
sub
add
and
dec
rcrb
lods
dec
add
int3
add
mov
add
xchg
incl
mov
mov
shl
lds
dec
fnstcw
add
das
ret
add
loope
lds
fxch
popa
xchg
dec
adc
adc
adc
and
int3
xchg
lods
movb
fldenv
mov
int3
sub
jne
bound
pushl
mov
mov
sub
lods
popa
addr16
and
sub
jl
aad
mov
lret
inc
lods
inc
xchg
lods
add
sub
imul
add
hlt
cmp
mov
mov
add
or
dec
inc
add
addb
add
lret
inc
in
add
dec
movsb
mov
mov
xchg
dec
rol
mov
scas
add
xor
cwtl
xorl
jmp
mov
pop
mov
and
push
addb
movl
or
lcall
push
push
inc
pusha
sub
repnz
add
inc
outsl
rolb
add
xor
dec
add
test
adc
nop
add
in
mov
and
add
addr16
rorb
addr16
push
add
das
push
je
incb
mov
lahf
and
or
mov
sub
shlb
roll
scas
clc
scas
add
jo
sbb
push
inc
mov
add
or
add
add
add
aam
xor
add
xchg
dec
inc
adc
ds
add
push
sub
mov
scas
dec
mov
adc
shrl
dec
xchg
or
sub
icebp
mov
adcl
sbb
adcb
inc
xchg
xor
shr
pusha
sbb
jae
xor
int
inc
mov
divl
dec
add
daa
hlt
and
dec
shl
sub
xor
jo
dec
mov
jo
jb
inc
adc
sarb
push
sub
dec
addb
push
enter
inc
sub
xchg
cmp
adc
mov
pusha
xchg
and
jo
int
mov
sub
xor
xor
js
adcb
push
push
pusha
scas
add
negl
cmpb
sub
adc
add
add
add
cmp
or
js
pop
add
xorl
or
mov
add
movl
adc
add
cmp
push
and
add
add
add
add
cwtl
mov
xchg
sub
fidivl
and
mov
add
das
jl
das
mov
add
cltd
cmp
inc
and
lock
test
cmpl
pop
icebp
inc
add
add
and
pop
xchg
dec
test
dec
inc
sub
add
lods
xchg
dec
addb
in
orb
cmp
call
leave
dec
mov
sub
add
and
and
xchg
xchg
jg
rcrb
xchg
testl
inc
sub
pop
mov
dec
pop
popa
add
xchg
mov
dec
inc
add
das
iret
lods
add
inc
add
dec
add
xchg
xchg
sub
fistl
add
add
dec
mov
jl
roll
mov
add
jo
push
xchg
jnp
or
inc
dec
add
add
inc
movsb
dec
mov
jl
and
out
sbb
add
or
dec
mov
pushf
and
dec
xorl
sub
xchg
add
movl
incl
mov
xlat
and
mov
roll
adc
push
xchg
cmp
dec
mov
mov
add
int3
add
movsb
xchg
sub
inc
cmp
cmp
roll
adc
add
dec
mov
xchg
scas
clc
add
xchg
add
add
aam
dec
subl
inc
add
inc
inc
add
inc
add
and
bound
scas
aam
test
loopne
in
xchg
add
add
jo
loopne
inc
add
xchg
cmp
add
pop
lret
jb
mov
rorb
loopne
push
add
mov
gs
push
in
sub
addb
rcrb
and
jl
inc
cmp
std
adc
add
mov
sbb
sbb
loopne
pushf
sub
add
cmp
add
sub
enter
inc
cmp
add
scas
rcll
sub
mov
add
add
dec
and
dec
mov
add
fdivl
inc
nop
loopne
sub
xorb
inc
lods
xchg
adc
repz
pusha
add
add
add
cmp
sbb
dec
loopne
fadds
cmp
push
adcl
mov
repnz
add
js
add
lret
jae
loopne
scas
add
add
cmp
add
push
dec
rdpmc
inc
xor
add
enter
nop
loopne
inc
mov
mov
addl
nop
or
and
adc
hlt
xchg
xchg
push
add
sub
call
loopne
pusha
xchg
testb
add
nop
xchg
scas
ljmp
sub
mov
popf
popf
adc
mov
nop
loopne
in
or
xchg
int3
mov
rolb
inc
add
std
mov
lret
add
jl
rcl
xchg
push
daa
and
inc
pop
xor
movb
and
inc
jno
rolb
lret
add
aas
cmp
out
sub
iret
push
in
fisttpl
add
popa
add
xchg
add
adc
in
sbb
rorl
sub
mov
add
add
sbb
fwait
lcall
int3
add
lods
fs
mov
imul
push
fs
ss
or
rolb
mov
push
push
cld
mov
int3
xor
mov
jg
sbb
xor
and
bswap
xchg
sub
nop
add
and
add
xchg
lods
mov
ss
loopne
addb
adc
sub
lock
out
nop
add
add
mov
xchg
mov
adcl
dec
xor
subb
cmp
sub
add
out
rcrb
add
pop
push
pop
inc
sub
mov
mov
mov
mov
mov
cmp
sub
add
dec
sbb
cli
push
add
xlat
or
shlb
ret
out
and
test
notb
jno
and
add
cmp
xchg
shl
xchg
dec
inc
adc
orl
mov
shrl
enter
subb
testl
pop
inc
sbb
aam
or
in
bound
addb
aam
mov
mov
les
push
cmp
das
add
xorl
cs
add
addl
sub
test
or
loopne
and
dec
cltd
sbb
sti
roll
scas
addb
or
inc
xor
mov
lock
fs
ret
mov
int3
add
add
adc
loopne
sub
pop
add
cmp
shl
mov
adc
adc
shrb
xor
sbb
add
add
dec
dec
loopne
lds
add
xchg
int3
inc
or
sub
xchg
add
add
sub
movl
hlt
add
sbb
mov
dec
inc
cmp
cmp
add
inc
cmp
dec
iret
xchg
add
int3
sub
fwait
add
add
movl
add
mov
xchg
dec
dec
add
xchg
adc
cmp
add
lcall
mov
cmp
add
je
and
shrb
testl
jg
add
mov
add
adc
arpl
pop
out
add
inc
jg
add
popa
lahf
and
add
push
or
add
scas
enter
xchg
cmp
add
xchg
add
shll
add
mov
dec
fmull
shlb
sub
orb
inc
inc
imul
add
insl
andb
add
inc
pop
addb
insb
in
loop
inc
or
and
add
xor
mov
dec
stc
sbbl
add
cmp
push
xor
add
xchg
mov
jmp
orb
orb
orb
movsb
mov
add
sbb
add
add
orl
mov
shrl
cmp
cld
cltd
dec
int3
mov
adcl
add
dec
add
xorl
mov
add
lahf
add
xchg
sub
mov
or
fwait
lcall
inc
sub
xor
cmp
sub
adc
add
testb
mov
adc
cmp
adc
scas
addb
sahf
add
add
dec
add
addl
dec
mov
in
cwtl
or
adc
sub
orb
adcb
sub
rolb
xchg
cmp
add
mov
in
add
and
add
mov
inc
sbb
dec
and
cmp
and
dec
rolb
sub
cmp
cmp
add
incl
mov
and
inc
mov
cmp
add
add
inc
sahf
rorb
fsubrl
enter
inc
add
inc
inc
xchg
xchg
rorb
add
sub
or
cmp
addb
xchg
xchg
lods
add
add
cmp
test
add
lret
inc
xlat
rorb
cmp
in
add
dec
icebp
push
inc
add
jae
insb
mov
rclb
mov
add
inc
sub
adc
loopne
add
xchg
sub
adc
cmp
add
in
ret
push
inc
leave
add
inc
pop
aam
and
adc
shlb
add
cmpsb
mov
negb
cmp
and
add
inc
mov
add
or
push
in
test
add
inc
cmp
mov
scas
test
pushf
les
push
loopne
rcrb
xchg
sti
add
int
clts
adc
sub
add
add
lods
orb
scas
sarb
rorl
rolb
addl
xchg
or
xor
add
clc
sarb
cmp
cmp
shl
add
xchg
cmp
adc
cmpl
ds
and
and
ds
addb
movb
sub
inc
adc
daa
add
add
cmp
add
addl
add
xchg
sub
das
add
icebp
adc
flds
add
dec
out
add
add
rcll
aas
out
cmp
pusha
je
inc
push
mov
pop
xor
or
test
enter
adc
shlb
scas
sarb
hlt
cmp
test
add
jo
mov
sub
icebp
add
dec
andb
add
inc
or
xchg
lods
movsb
inc
cmpsl
xor
cmpb
and
rorb
hlt
dec
flds
shlb
shrb
jg
add
cmp
inc
dec
inc
loopne
add
add
xchg
loopne
xchg
dec
adc
lods
add
adc
inc
pandn
rcll
pusha
inc
sbb
imulb
int3
lods
jne
or
stos
pusha
or
inc
dec
nop
or
jmp
and
xor
lret
inc
dec
and
adc
xchg
sub
in
push
xchg
sub
into
cmp
inc
add
push
add
cld
cwtl
loopne
mov
scas
xchg
lds
rclb
aaa
pop
aaa
lds
scas
lds
andb
mov
pusha
push
shrb
sub
cmpb
andl
xchg
or
add
loopne
mov
add
cmp
cmpb
add
fsubrs
sub
mov
add
fldl
addr16
ja
push
sub
mov
cmp
xchg
push
int3
add
add
pop
sub
and
pop
lret
inc
add
pop
andb
and
dec
cmpl
cmp
loopne
add
mov
test
push
std
xchg
add
mov
inc
or
inc
std
jmp
jae
movb
mov
rolb
stos
mov
inc
cmp
inc
shufps
add
aam
movl
xchg
cmp
add
mov
sub
inc
iret
add
sub
mov
dec
sbb
call
add
add
int
add
das
fimull
add
adc
add
das
adc
xchg
inc
daa
and
pop
xchg
sub
mov
and
sbb
pop
mov
xorb
stos
mov
scas
cmp
add
inc
pop
lret
adc
add
or
xchg
dec
add
ret
mov
xor
pop
dec
mov
add
ljmp
call
mov
loope
movb
int
enter
pop
add
dec
xchg
add
jp
lret
push
pop
xor
lea
cmp
scas
into
dec
add
push
xor
and
testb
add
scas
aam
incl
add
xchg
dec
fadd
dec
add
clc
divl
or
mov
pusha
faddl
jne
xchg
add
lds
iret
dec
ret
hlt
mov
clc
std
mov
adcb
aaa
mov
pusha
mov
lcall
or
out
or
or
lea
xor
dec
add
stos
ret
mov
add
addb
inc
cmp
dec
add
scas
or
out
add
mov
add
add
add
dec
xor
hlt
add
rorb
adc
add
cmp
add
mov
cmp
cmp
mov
mull
and
aaa
mov
add
cmp
or
and
add
dec
mov
mov
lock
std
cmpl
cmpl
mov
fisttpl
enter
out
inc
add
cmp
addr16
dec
add
daa
xorl
add
xchg
sub
jo
cmp
mov
dec
cmp
pop
sub
and
add
scas
ret
dec
mov
or
testl
test
dec
or
ds
orl
add
xchg
xchg
xchg
lods
and
add
sub
xchg
xor
adc
adc
jo
dec
or
movl
andb
jo
inc
sub
aaa
mov
add
xchg
xchg
jp
add
sbb
mov
xchg
scas
lds
xchg
inc
arpl
cmp
dec
mov
cmp
scas
lds
rolb
inc
xchg
bound
adc
or
add
cs
xorl
dec
cmp
pop
rorb
cmp
sub
add
inc
cmp
mov
testl
xor
mov
or
push
or
pusha
pop
das
sub
and
pusha
sete
push
push
dec
mov
cmp
push
loop
jo
and
int3
mov
orb
lcall
in
sub
mov
scas
movb
lods
cld
in
sub
sbb
je
insl
xorb
dec
xor
sub
and
xor
sbb
mov
dec
icebp
js
or
movups
aad
cmp
pop
mov
xchg
sub
mov
adc
fwait
lcall
adc
push
xchg
negb
jo
pushf
inc
stc
adcl
dec
inc
aam
or
sbbl
icebp
add
aam
adc
scas
lods
mov
lods
push
adc
add
lock
push
cmp
sub
and
and
xchg
sub
sbb
add
or
addb
pop
mov
add
xchg
adc
scas
movb
add
shlb
cmp
test
test
sarb
loopne
pusha
or
mov
mov
in
lret
jae
inc
cmp
inc
cmp
mov
int3
inc
add
mov
mov
das
into
bound
loopne
jp
cmp
add
add
inc
jle
mov
pop
lods
xchg
shlb
ret
outsb
sarl
rcrl
sbb
insb
inc
aam
pop
lret
inc
stc
push
pop
dec
add
push
adc
xchg
xchg
idivl
cmp
xchg
rclb
xorl
aas
mov
adc
sbb
sub
mov
jl
and
es
cwtl
loopne
xor
shrb
mov
push
scas
rclb
dec
inc
add
and
add
cmp
adc
add
inc
shrb
jne
adc
xor
jp
add
add
add
add
cmp
rorl
dec
nop
loopne
sub
repz
sbb
add
cmpb
in
mov
dec
nop
or
jl
rolb
sub
or
push
bound
mov
arpl
sbb
jae
loopne
xchg
movsl
push
add
push
add
xchg
loopne
inc
nop
add
add
dec
dec
js
bound
inc
dec
add
in
cmovg
push
add
adcb
xchg
rcll
adc
nop
or
xchg
nop
add
xchg
bound
xchg
push
xchg
push
add
inc
push
mov
add
icebp
adc
xlat
xchg
pop
cmp
push
inc
add
fs
mov
adc
xor
inc
xchg
xchg
ja
cmp
xor
xor
pop
xchg
dec
test
or
sub
lock
rcrb
nop
js
add
dec
xorl
rorb
pusha
add
or
inc
das
jo
inc
incl
lret
movsb
inc
addl
sbb
add
sub
sub
xchg
xchg
dec
dec
adcl
mov
add
add
mov
inc
add
xchg
jae
add
xchg
inc
adc
orb
xchg
dec
addl
les
cli
movsl
adc
cmp
shl
xchg
adcb
adc
dec
xchg
mov
mov
orl
sub
rcrb
pushf
mov
dec
addb
test
int3
or
movsb
andb
push
sub
add
mov
sarl
mov
dec
adcl
add
add
add
lahf
sub
test
int3
shl
xchg
xchg
cmp
lds
or
int3
cmp
rclb
rcrl
cmp
divl
dec
dec
in
add
dec
inc
call
sub
add
xchg
cmp
addl
mov
add
dec
inc
hlt
pusha
add
inc
sub
xor
pusha
sbb
push
jo
xchg
sub
mov
nop
mov
dec
add
add
mov
testb
adc
mov
add
lock
shll
ds
ss
lods
or
add
arpl
xchg
scas
lds
and
dec
or
add
xchg
add
in
mov
add
add
adc
add
add
mov
add
xchg
scas
rclb
or
xchg
aas
lcall
scas
push
and
xor
and
aam
in
inc
or
fmull
cmp
mov
xor
add
add
daa
scas
int3
xchg
dec
lcall
adc
dec
sub
adc
call
rolb
xchg
xchg
cmp
cmp
xor
rcll
in
and
sbb
mov
push
in
inc
in
and
fdivs
or
push
add
std
lcall
add
test
mov
dec
cmp
mov
add
call
movl
cmp
shlb
rolb
sub
cli
mov
int3
lds
add
add
dec
inc
inc
test
enter
inc
adc
sbb
scas
aam
add
xchg
sub
adc
dec
inc
mov
adc
pop
dec
inc
loop
mov
xchg
xchg
sub
rolb
adc
fsubrl
adc
mov
aad
add
movsb
add
add
incl
lret
inc
fadds
cmp
cmp
add
mov
mov
xchg
push
cmp
add
add
add
scas
lds
and
adc
cwtl
add
xchg
inc
cmp
cmp
shll
pushf
popa
add
add
sahf
push
add
sahf
dec
cmpl
inc
rolb
dec
fldcw
dec
xchg
add
dec
sbb
inc
add
mov
xchg
cmp
dec
or
dec
stc
push
test
add
adc
dec
add
cmp
mov
inc
add
add
sbb
dec
add
add
push
add
inc
add
mov
jl
adc
or
sub
pop
dec
inc
add
addb
jg
push
adc
inc
add
push
sub
scas
add
ds
add
stc
and
add
jb
addb
rcl
rolb
addb
cmp
dec
lea
aam
inc
add
add
or
mov
dec
xorb
pop
xchg
add
bswap
jb
out
dec
add
lret
clc
fs
add
gs
clc
addr16
cmp
mov
inc
push
pusha
adcb
mov
inc
push
popa
addl
das
dec
push
dec
test
mov
data16
or
inc
aad
fldl
fs
add
or
xchg
lds
xchg
mov
inc
and
inc
xchg
rolb
aam
add
inc
xchg
aad
add
int3
adcb
sub
cmp
inc
sub
inc
adc
add
sarb
xorb
and
rclb
xchg
xor
movb
jo
jo
push
mov
mov
subl
dec
lea
repz
sub
and
cmp
rorb
sub
clc
cmp
cmp
mov
xchg
jp
add
add
add
leave
xor
xchg
add
das
int
add
sub
xor
cmp
lcall
and
dec
and
rolb
rclb
call
aam
add
dec
xchg
rorb
shrl
sub
push
cmp
dec
xchg
loopne
dec
mov
xchg
inc
dec
subl
mov
cmp
or
sub
scas
add
rorl
dec
subl
add
or
xor
cmp
outsl
dec
dec
push
add
inc
cmp
notl
popf
mov
inc
or
enter
aaa
loopne
add
xchg
xorl
dec
add
xchg
sub
out
cmp
push
enter
dec
addl
xchg
xchg
xchg
inc
and
lret
inc
mov
adc
inc
xabort
add
lret
inc
testl
shll
shlb
cmp
cmp
add
cltd
roll
loopne
cmp
add
dec
addb
jp
rolb
mov
xchg
rolb
dec
mov
fcmovnbe
rol
add
cwtl
loopne
xchg
cwtl
loopne
xor
push
xorl
je
xorl
rcrl
inc
aas
pop
add
cmp
jne
adc
pop
std
inc
cmpxchg
inc
adc
pop
inc
push
inc
mov
or
inc
push
xor
adc
lret
inc
jle
inc
add
mov
popa
or
loope
xor
inc
xor
inc
add
cmp
pop
cmp
add
lret
inc
dec
inc
add
and
add
mov
call
lods
add
add
das
stos
xor
or
int3
add
push
and
or
loopne
inc
jl
add
xchg
lods
aad
in
js
adc
stc
lret
jae
or
fmul
jae
addl
pusha
add
add
dec
add
adc
dec
nop
loopne
dec
mov
loopne
sub
xchg
add
das
dec
enter
and
sub
or
and
push
shll
hlt
inc
xchg
lahf
add
int3
mov
xor
xor
push
mov
sub
stos
and
push
loope
pop
sbbl
cmp
cmp
pop
cmp
pop
les
and
das
lret
addb
add
shll
aas
and
and
nop
ret
test
add
pusha
inc
add
xchg
dec
mov
mov
or
and
or
mov
or
shlb
xor
jno
popa
das
loopne
addb
xchg
xchg
add
jno
and
push
aad
or
or
adc
or
scas
or
or
cmp
cmp
sbb
aam
loopne
and
add
adc
fsub
and
or
cmp
loopne
loope
cmp
cld
inc
and
dec
and
or
or
adc
and
and
iret
add
aad
xor
mov
add
stos
and
pusha
mov
or
and
sub
mov
je
or
and
popl
rcr
aad
inc
add
mov
lahf
jne
mov
pop
inc
inc
and
add
shll
out
shll
xor
add
adc
push
adc
icebp
push
sub
pop
sub
push
aaa
cmp
and
xor
sub
add
xor
scas
in
xchg
add
sbb
sub
icebp
cmp
cmp
sbb
sbb
je
lds
inc
je
or
push
sub
int3
add
int3
add
int3
add
inc
lret
cltd
or
sub
ret
add
inc
nop
or
inc
cli
hlt
mov
or
sub
cmp
xchg
loop
hlt
loopne
adc
test
adcl
pop
out
sbb
enter
sub
outsl
sbb
or
add
pop
add
jo
fimull
call
testl
roll
inc
addb
mov
test
push
in
incl
add
pop
xchg
xchg
dec
test
enter
negl
xchg
dec
cmp
das
sbb
inc
inc
mov
jne
xchg
decl
add
in
add
std
fidivl
add
add
xor
ss
cmp
mov
test
add
rcrb
test
jno
movsb
cmp
push
add
addl
mov
xchg
add
dec
ljmp
xorb
inc
mov
add
dec
or
lcall
lcall
lcall
cmp
sbbb
mov
inc
loop
jns
sahf
cmp
loopne
cmp
sub
mov
add
mov
inc
sub
and
dec
mov
rorb
adcb
xor
sub
sbb
or
add
sbb
std
add
in
mov
add
inc
cmp
or
add
stc
rorl
lret
dec
or
xchg
inc
or
mov
jl
xchg
xchg
add
adc
cmpl
cmp
int3
inc
nop
insb
add
adc
mov
repz
cmp
mov
inc
cmp
mov
stos
mov
add
faddl
cmp
inc
inc
mov
int3
inc
test
add
pop
iret
adcl
push
jnp
push
sbb
or
adc
lock
negb
shrl
dec
leave
orl
cwtl
mov
shlb
bound
cmp
rolb
rolb
adc
lahf
mov
inc
mov
jo
xchg
dec
xchg
addr16
cmp
push
rolb
xchg
add
sbb
sbb
mov
cmp
shll
loopne
add
jmp
ficoms
test
adc
mov
add
add
adc
psrld
fcoms
add
add
inc
or
mov
std
mov
dec
mov
and
xchg
dec
enter
add
mov
xor
lret
inc
push
and
add
jno
dec
icebp
add
out
fadds
cmp
jno
xchg
cmp
push
push
cmp
mov
scas
iret
pop
add
pushl
dec
jmp
add
scas
add
add
lds
add
add
add
jb
add
andb
pop
sub
sahf
xchg
mov
or
lds
out
or
das
dec
ficoml
adc
leave
adc
fwait
lcall
invd
cltd
lahf
popf
rcrl
adc
ds
scas
rolb
fwait
dec
cmpl
xchg
scas
lds
push
adc
and
pop
xor
int
outsb
or
sbb
push
xchg
scas
roll
ss
inc
mov
inc
dec
cltd
cmp
jns
mov
je
lds
dec
test
mov
inc
sub
jno
mov
cmp
ret
dec
add
scas
loopne
jle
sbb
xchg
sub
pusha
adc
cmp
inc
add
cwtl
jb
add
lret
inc
add
add
sbb
pushl
mov
adc
cli
dec
mov
adc
cvttps2pi
sbb
add
dec
addb
add
mov
outsb
in
add
scas
test
add
sub
add
add
sub
add
call
mov
dec
andl
mov
loopne
jg
pop
inc
dec
add
xchg
dec
addl
pop
fildl
mov
rorb
xchg
and
shlb
inc
add
sarb
mov
adc
xchg
mov
pushf
sub
icebp
add
mov
or
adc
cmp
add
xchg
dec
pusha
cltd
mov
roll
rcl
nop
mov
dec
mov
sub
xor
or
testb
xlat
dec
orl
faddl
dec
mov
add
fs
mov
mov
pushf
sub
mov
mov
pushf
sub
mov
lock
addl
mov
nop
or
dec
andl
jns
push
pusha
sub
jmp
popf
inc
add
adcb
fadds
subl
or
inc
mov
lods
ret
add
orb
push
add
cmp
mov
rcrb
dec
adc
inc
sub
add
xchg
orb
sarb
sub
pushf
jae
xchg
rcrb
push
xor
inc
and
leave
cmp
dec
add
andl
inc
dec
popf
cmp
inc
cmp
mov
xchg
scas
int
push
dec
add
popf
xor
cmp
orb
dec
mov
push
add
mov
inc
mov
cltd
int3
and
aaa
lret
inc
sbb
add
dec
xorl
adc
xor
mov
cli
add
lret
inc
je
add
mov
mov
pop
add
cwtl
dec
int3
inc
pop
lret
inc
push
dec
mov
inc
incl
inc
addb
mov
cmp
dec
verw
out
add
inc
add
add
dec
andl
add
add
dec
jno
xor
add
sub
call
add
cmp
add
cmp
out
add
inc
add
mov
xor
cmpb
sbb
bound
inc
enter
out
add
xchg
add
or
int3
dec
pop
incl
icebp
cmp
cmp
add
cmp
cmp
cmp
cmp
dec
cmpl
pop
add
fwait
dec
add
push
rolb
xchg
dec
sub
int3
movb
add
push
cmp
cmp
cmp
or
mov
int3
xor
mov
dec
inc
add
sbb
dec
add
mov
or
dec
mov
dec
add
mov
cvttps2pi
call
ret
int3
adcb
mov
aaa
dec
lds
ret
add
lds
mov
je
test
adc
xchg
xchg
scas
add
pushf
sub
addb
add
loopne
subb
add
idivl
dec
and
add
dec
mov
add
cmp
and
inc
test
mov
popf
scas
mov
sbb
add
xchg
xchg
add
jp
js
add
xchg
scas
shrb
call
sub
or
cmp
and
adc
dec
cwtl
loopne
clc
sub
cltd
add
add
sbb
adcb
or
dec
and
dec
mov
add
lds
add
dec
mov
dec
add
fwait
lcall
enter
sub
dec
cmpl
xchg
adc
popa
negl
std
add
sbbl
inc
es
orb
into
addb
dec
add
mov
dec
pop
and
add
lds
push
incl
jns
xchg
sub
out
and
cmp
sbb
sub
cld
add
dec
cmp
adc
inc
jecxz
jp
aam
add
dec
add
add
dec
add
mov
add
add
add
add
and
rolb
sahf
xchg
scas
add
or
sub
add
add
inc
mov
xlat
inc
movsb
xchg
xchg
cmp
cmp
hlt
roll
mov
orb
int3
add
cmp
rolb
addb
shr
add
adc
and
add
mov
orb
xchg
sub
or
cwtl
shlb
cltd
and
andb
sub
inc
and
sbbb
and
add
rolb
mov
into
inc
pop
cmp
sub
rolb
and
aas
inc
xor
and
inc
sub
inc
enter
aaa
add
rorl
aad
add
dec
repz
xorb
scas
cmp
lret
inc
rolb
jge
add
fmul
testl
dec
mov
dec
aam
test
shlb
ret
add
adc
add
xor
mov
dec
ret
fdivrs
sub
inc
test
pop
add
lahf
int3
xchg
xorb
xor
cmp
cmpb
addb
sub
add
les
repz
xor
mov
andb
add
inc
pop
or
inc
pop
rolb
xor
push
icebp
inc
and
sbb
mov
loopne
sub
add
or
inc
add
lds
add
dec
add
cmp
push
adc
dec
xchg
rolb
dec
xchg
add
add
std
mov
inc
push
ss
paddusb
lods
add
and
and
in
and
and
sub
rorl
incl
xor
mov
push
cmp
sub
xchg
cmp
in
inc
dec
mov
push
andl
add
orb
aam
add
addb
shrb
pusha
add
inc
or
inc
or
loopne
add
xchg
add
shl
addr16
dec
addb
push
xlat
mov
xchg
adc
lret
bound
arpl
sub
adc
add
sub
add
in
call
in
inc
cs
xchg
and
sub
xchg
dec
xchg
loope
add
cmp
cld
addb
add
add
add
sub
cwtl
add
adc
xchg
aam
add
adc
xchg
xchg
orb
xlat
inc
orb
mov
cmp
push
add
add
rcrb
and
rorb
dec
shrl
inc
mov
mov
add
in
sub
subb
xor
inc
xor
add
add
add
xor
add
sar
pusha
pop
das
jae
inc
push
add
dec
or
scas
inc
sbb
mov
inc
cmp
lds
xorb
mov
pop
add
cmp
enter
add
xchg
das
rol
add
mov
mov
bound
pop
add
xchg
jno
push
inc
loopne
jno
sub
inc
add
mov
sub
les
bound
aam
xchg
xchg
scas
jmp
cmp
add
outsl
inc
cmp
mov
add
cmpl
xor
xchg
lret
inc
inc
and
inc
mov
popa
dec
xchg
lods
pusha
adc
rorl
rorb
cs
inc
cmp
add
mov
dec
popl
dec
xchg
scas
fadds
sub
inc
adc
cmp
sbb
add
xchg
scas
fstps
add
sub
mov
mov
mov
dec
mov
das
stc
inc
push
mov
sub
addb
dec
xchg
add
jae
adc
dec
adcb
lret
inc
shlb
add
add
xchg
sub
jecxz
scas
sub
add
cmp
dec
xchg
andl
push
or
mov
dec
mov
int3
mov
test
and
mov
and
inc
add
inc
in
jg
int3
test
and
and
loopne
add
cltd
add
negl
xchg
inc
pop
faddl
mov
lods
mov
cmpb
and
lret
inc
mov
aam
add
lret
loopne
mov
loopne
inc
mov
test
popa
test
sub
scas
add
repnz
hlt
xchg
or
add
sbb
xchg
loop
add
int3
push
and
loopne
add
pusha
and
dec
cwtl
loopne
das
add
add
loopne
add
nop
scas
sbb
jge
pushf
sub
jge
adcb
xor
scas
cmp
add
sub
in
add
in
sub
add
jg
add
xchg
mov
xor
cmp
jnp
dec
xchg
mov
rolb
lret
lret
inc
inc
nop
add
int3
and
xor
mov
or
mov
dec
xor
jne
cmp
hlt
inc
shrb
mov
cmp
mov
fsubrl
rolb
inc
mov
nop
add
xor
add
adc
lods
ret
add
add
add
aam
add
das
in
ss
inc
loopne
sub
inc
push
inc
inc
mov
int
add
cwtl
sub
jg
and
push
das
shll
xorb
loopne
shlb
xchg
jae
add
dec
lds
push
or
mov
sbb
and
mov
and
ret
pusha
dec
sbbb
rclb
inc
mov
push
xor
loopne
je
aam
data16
es
jge
xchg
divl
std
add
mov
mov
ficoms
mov
cmp
and
sbb
aam
pusha
mov
dec
sbb
mov
int3
notl
sub
xor
ret
cltd
cmp
sbb
cltd
subl
dec
outsl
add
outsl
add
cmp
cmp
int3
nop
ds
jo
sub
roll
scas
in
mov
mov
sahf
or
dec
nop
loopne
add
divl
out
cmpb
mov
shlb
aam
fiaddl
sbb
mov
popa
movsb
or
push
add
inc
add
loope
mov
or
or
das
mov
mov
shl
mov
lcall
int3
dec
or
adc
add
call
or
mov
pop
and
addr16
or
aas
adc
out
or
add
or
or
jo
shlb
dec
sbb
adc
xor
loopne
cmp
sub
add
nop
add
and
lahf
repz
ja
add
out
and
std
addl
adc
adc
rorb
shrb
xor
push
repnz
dec
mov
adc
dec
xchg
rolb
inc
mov
dec
sbb
jno
rolb
cmp
xchg
xchg
icebp
mov
adc
push
sbb
in
sub
repz
pusha
add
adc
scas
push
pop
andl
fcoml
add
cmovl
inc
ret
pminub
xchg
mov
rclb
repnz
ret
loopne
dec
or
inc
push
add
sub
pusha
adc
movsb
loope
add
sub
jns
jnp
add
fdivs
mov
mov
add
rol
mov
sub
arpl
int3
jo
sub
push
add
aam
arpl
nop
cmp
push
pop
dec
sbb
sbb
les
xchg
rcrl
add
sbb
adc
roll
xlat
orb
xor
sbb
cmp
add
into
rolb
je
das
xor
and
sub
adc
icebp
mov
test
jo
xchg
dec
cmpl
xchg
xchg
jno
dec
cltd
cmp
jnp
xchg
dec
stc
int3
inc
add
je
scas
rolb
xchg
loopne
dec
xorl
add
bound
pusha
push
cmp
add
add
mov
inc
mov
add
or
mov
les
rolb
cmp
cmp
mov
cmp
fwait
dec
cmpl
add
sbb
adc
insb
loopne
negl
dec
add
fs
xchg
xchg
xchg
scas
loopne
xchg
dec
cltd
mov
int3
mov
icebp
push
rclb
dec
stc
movsb
dec
xor
ror
fadds
rcll
cld
rolb
imul
in
adc
inc
mov
jle
testl
cmpl
pusha
sbb
cmpps
mov
lds
iret
scas
aam
adc
cmp
dec
xorl
fdivl
loopne
nop
pop
add
dec
cmp
sub
mov
cmp
cmc
xorl
add
xor
testl
nop
leave
cmp
inc
cmp
add
inc
cmp
inc
mov
and
mov
nop
jge
sub
hlt
adc
rorb
sub
or
subl
mov
mov
xchg
test
scas
ret
das
ret
jge
fadds
add
or
xlat
push
hlt
clc
mov
in
adc
or
orb
or
sub
add
dec
xor
add
pushl
mov
scas
ljmp
xorl
xchg
dec
or
mov
sub
adcb
inc
sub
sbb
daa
scas
shrb
add
mov
push
add
insb
push
pop
rclb
movsl
cld
cltd
inc
aam
jmp
add
aam
add
inc
nop
cmp
sub
xchg
add
and
inc
adc
sbb
mov
add
in
jo
add
xchg
xchg
lods
add
add
cmp
test
add
cmp
rcll
je
lcall
testb
xchg
add
xchg
xchg
dec
icebp
sub
add
inc
mov
roll
add
lret
jb
rorl
add
push
pop
scas
in
xchg
cmp
add
add
mov
add
testb
push
cltd
add
enter
negl
xchg
cmp
mov
test
mov
sub
add
movsb
xchg
std
add
mov
dec
inc
mov
cmp
sbb
cmp
dec
sbb
add
mov
cmp
stc
dec
mov
push
add
inc
xor
xorl
inc
adc
mov
cmp
jno
sub
sub
add
add
add
and
add
fwait
lcall
icebp
jo
xchg
subb
add
scas
cmp
arpl
testl
add
into
add
add
or
sbb
add
or
xchg
int3
inc
add
cwtl
and
lret
addb
cmp
repz
adc
ljmp
mov
dec
or
test
xchg
sub
add
add
inc
enter
mov
sub
mov
dec
add
cmp
lcall
subl
adcb
push
jl
lds
add
sub
xor
add
addl
pop
and
inc
xchg
dec
mov
adc
push
orb
add
adc
dec
mov
add
testb
add
dec
xorl
rol
fmulp
add
cmp
sbb
xor
mov
cmp
xchg
test
sub
adc
rorb
sub
sub
add
cmp
cmp
cmp
add
arpl
pop
add
clc
negl
std
mov
mov
jmp
xorl
inc
test
dec
roll
addb
subl
orb
add
enter
mov
add
cmp
movsb
shlb
lahf
lcall
mov
mov
roll
fistl
jle
mov
add
out
mov
or
mov
loope
mull
and
sub
add
imul
jns
mov
movb
xor
movb
shll
add
mov
and
jns
jle
xchg
lds
jno
insb
rolb
repz
lds
sub
es
push
cli
testl
loope
repz
lds
cmp
or
enter
cmp
gs
loope
cwtl
ss
cmp
popa
insb
mov
cmp
or
gs
pop
jne
rclb
pop
lock
mov
xor
lahf
sbbb
sbbl
orb
or
enter
add
rorb
jle
add
repnz
daa
add
sbb
loope
adc
mov
or
sub
es
lea
add
cmp
sub
xchg
fldenv
in
cmp
cmc
rolb
mov
repz
add
and
jb
add
push
je
loope
lret
scas
rorb
cmpl
aaa
rcrb
add
movsbl
sbb
divl
sbb
pusha
pop
mov
adc
or
xor
cmp
pop
in
add
in
jl
push
movb
subl
push
add
sbb
andl
insl
sbb
pop
pusha
adc
add
loop
adc
adc
outsl
addl
mov
fs
or
pop
jge
and
and
add
repnz
ret
add
or
add
xchg
lods
movb
add
add
or
mov
pusha
adc
sti
imul
add
or
add
pop
test
xor
push
xor
xor
add
fists
mov
xor
add
jle
add
push
xor
push
or
dec
loopne
loope
arpl
push
test
cmp
inc
cwtl
mov
adc
imul
addl
mov
mov
in
incb
test
mov
out
ja
leave
mov
xchg
inc
jle
adc
cltd
mov
insl
jno
ds
dec
inc
xchg
xor
or
add
mov
jne
rcrl
cmc
loopne
std
lcall
or
jnp
aaa
and
cmp
repnz
popa
adc
adc
pusha
add
and
and
pusha
jg
add
fadd
add
xchg
xchg
xchg
or
and
mov
sub
fsub
insl
inc
sub
add
cmp
and
subb
add
add
mov
dec
add
subl
shrb
add
add
add
dec
mov
inc
or
dec
dec
cmpb
add
inc
scas
or
lock
cwtl
mov
xchg
xchg
xchg
pop
cmp
cmp
jno
or
arpl
adc
and
adcb
movsb
shlb
lcall
aad
push
mov
cmpsl
mov
cmp
jo
loope
sub
inc
inc
jno
out
mov
decb
cmp
xor
add
xchg
daa
cmc
je
mov
das
inc
aaa
loope
adc
rolb
je
add
cmp
aaa
add
fnstsw
add
aaa
insb
jge
pop
pop
mov
and
adc
adc
loopnew
sbb
push
adc
insb
mov
cs
inc
add
xchg
and
or
mov
push
stc
shll
xor
imul
add
rcrb
enter
xor
mov
adc
shl
cmpb
push
and
xor
add
inc
dec
shrl
shrb
mov
xlat
in
add
aas
and
inc
insl
fbstp
repz
jb
pusha
or
jb
and
jb
push
loope
jle
dec
push
sbb
pop
popa
or
push
insb
mov
cmp
or
fs
adc
mov
loopne
cmp
icebp
add
cli
aaa
enter
testl
ja
pop
loopne
add
enter
mov
inc
data16
xor
xlat
mov
adc
rclb
sbb
loop
mov
jmp
cli
push
adc
inc
pop
mov
push
icebp
ret
push
and
sub
pop
rcrl
pusha
xor
mov
loopne
bound
cmp
pop
loope
lods
enter
cmc
jae
sbb
loopne
or
andb
xor
aas
mov
cmp
jbe
pusha
push
sub
fs
cmp
lock
pop
and
add
mov
jnp
popa
clc
add
scas
out
pusha
call
das
or
aaa
loope
mov
add
cmp
lds
dec
push
add
fildll
sub
enter
pop
cmp
mov
std
lock
add
and
mov
push
push
pop
adc
inc
and
das
xchg
xchg
dec
and
adc
inc
loopne
add
add
rolb
xor
dec
or
add
add
adc
or
shlb
add
cmp
inc
mov
add
add
xchg
dec
addl
or
cli
jecxz
add
rcll
inc
test
dec
lock
adc
clc
push
add
stos
pop
addl
addb
addb
xorl
nop
pop
scas
add
pop
mov
sub
ret
and
inc
dec
jae
movl
add
add
pop
dec
jae
push
roll
add
add
scas
jo
dec
jae
add
jae
inc
add
add
add
add
cmp
add
xchg
bound
sub
push
or
cltd
mov
add
push
xchg
xchg
dec
mov
jl
add
inc
dec
cltd
cmp
arpl
test
xor
aaa
lret
inc
push
and
dec
push
mov
add
adc
incl
mov
mov
mov
rolb
cmpl
inc
cmp
mov
dec
inc
pop
add
adc
lds
xchg
cmp
and
inc
sti
ret
add
fnstenv
cmp
add
add
dec
mov
dec
xchg
mov
add
or
addl
xor
cmpl
jg
cltd
cmpb
ret
testb
cltd
sub
rcl
test
sub
sub
inc
and
add
add
xchg
xchg
dec
cltd
jo
cmp
jo
pop
mov
inc
stc
xor
add
and
addb
xor
std
cltd
xor
inc
jl
add
add
cmp
sarl
lock
orb
orb
inc
push
mov
incl
lret
inc
popa
and
mov
aam
adc
adc
test
inc
and
or
sub
add
pop
xchg
sub
and
ret
push
cmp
add
jb
lcall
xor
xor
xor
cmp
dec
adc
addb
push
add
sub
and
cmp
negl
adcl
xor
inc
xor
and
inc
mov
mov
push
pop
add
jno
lods
ret
inc
xor
lea
inc
add
inc
rclb
test
or
icebp
mov
dec
cmpl
xchg
aaa
and
add
js
mov
push
sub
incl
loopne
icebp
cld
xlat
inc
test
shll
test
subb
out
add
mov
movb
pop
jo
mov
jo
push
loopne
roll
nop
test
add
sub
pusha
add
mov
inc
add
test
shll
lock
adc
in
sbbb
loopne
lea
add
cmp
inc
cs
pushf
loope
icebp
push
loope
mov
sub
sbb
pusha
xor
and
ret
add
xchg
add
add
or
jnp
rolb
dec
jo
and
xor
lret
xor
mov
sub
sbb
shl
scas
add
mov
in
insl
fwait
mov
je
xchg
addb
cmp
add
or
pusha
sub
repnz
pusha
aam
add
xchg
lock
mov
sub
and
das
movl
aas
cmp
lds
or
mov
push
add
mov
inc
add
mov
testl
mov
pusha
jbe
addl
das
lret
std
adc
mov
dec
sbb
cmp
test
xchg
sub
rclb
fmull
and
inc
int
xor
adc
xchg
sub
aam
adc
xor
and
cmp
js
add
xchg
xchg
mov
mov
xchg
cmp
or
xchg
scas
rorb
xchg
cmp
sub
orb
xor
mov
int3
mov
and
cmpl
add
push
aam
lock
mov
nop
adc
and
mov
jo
cmpb
rolb
dec
add
xor
dec
rclb
xchg
inc
cmp
adc
inc
push
inc
sarb
xor
cmp
shl
add
inc
xchg
add
ja
rcrb
add
or
cmp
cmp
call
and
cltd
cmp
push
lock
adc
addl
rcll
add
sub
lret
dec
je
xor
inc
call
call
sbb
mov
dec
int3
pusha
add
dec
in
int3
shlb
sub
and
loope
inc
or
adc
add
adc
mov
fsub
cmovg
loopne
ficomps
cmp
add
rorb
loop
inc
sub
mov
adc
test
inc
lods
xor
add
mov
divl
loopne
mov
inc
cmp
add
xchg
add
mov
scas
cmp
fsubl
aam
add
or
cmp
mov
stc
dec
subl
inc
and
fsubrs
adc
inc
and
dec
int3
dec
add
dec
mov
popa
popa
popa
lods
orb
push
test
add
cmp
dec
pop
mov
pop
xchg
dec
sub
add
xchg
xchg
xchg
add
mov
cmp
dec
sbb
add
mov
dec
andl
test
scas
int3
pushf
add
mov
mov
add
or
cmp
subl
cld
dec
dec
mov
xchg
add
aam
cmp
and
popa
popa
popa
xchg
popa
cmp
add
add
mov
mov
cmp
add
jo
mov
int3
dec
xchg
cmp
lcall
rolb
adcl
cmp
inc
mov
add
cmp
add
add
xchg
add
pop
xchg
xchg
cmp
xchg
xchg
add
loopne
shrl
cwtl
loopne
mov
loopne
lret
mov
inc
dec
fdiv
lahf
push
int3
add
add
xchg
xchg
inc
aas
cmp
enter
aas
dec
adc
or
xor
pop
sub
add
cmp
cmp
add
enter
xor
xor
adcb
adcb
adcl
add
fwait
lcall
repz
inc
andb
loopne
cmp
test
inc
inc
mov
mov
mov
adc
inc
xor
add
add
sar
cmp
inc
sbbl
cmp
ja
sub
dec
sar
addb
dec
add
add
add
add
add
or
aas
add
add
cld
dec
mov
add
iret
cmp
inc
add
inc
call
ret
dec
sub
mov
shrb
add
add
cmp
ret
mov
movl
and
dec
mov
rolb
sub
hlt
add
dec
fwait
cmp
inc
cmp
sbb
cmp
jmp
sub
inc
sbb
shrl
add
sub
sbb
or
pop
mov
sbb
int3
add
dec
adc
add
ror
push
scas
int
lcall
xor
inc
and
inc
add
mov
jb
scas
int
mov
push
inc
es
inc
add
rolb
dec
cmc
mov
lcall
add
xchg
xchg
xchg
sub
sbbb
subb
test
inc
addb
push
cmpsb
add
and
rol
pop
subb
inc
mov
testl
or
xor
xchg
dec
lock
dec
add
adc
shlb
xchg
sub
lea
push
lcall
xor
push
inc
jecxz
cmp
mov
orb
add
loope
push
dec
xor
add
sub
or
xor
add
push
xchg
xchg
mov
xchg
adc
mov
andl
dec
lret
cmp
int
cmp
enter
mov
sub
rorb
loopne
dec
rcr
add
mov
sub
addb
testb
shlb
adc
pop
enter
les
sub
inc
adc
adc
fcmovnb
sub
int
ret
dec
ret
movl
int3
adc
sub
add
add
mov
push
add
jae
xchg
inc
add
in
int
add
mov
mov
test
sub
add
dec
mov
inc
or
add
lea
adc
dec
enter
xchg
xchg
sub
add
loop
add
or
lds
int3
or
mov
and
leave
mov
int3
test
add
int3
xchg
testl
inc
cmp
cmp
das
roll
and
and
inc
cmp
lret
jae
movb
mov
pushf
mov
xchg
inc
add
add
dec
mov
add
ror
inc
or
in
mov
mov
int3
inc
add
lret
or
jnp
add
inc
add
lret
jae
add
adc
mov
mov
scas
push
into
mov
or
mov
lcall
xor
dec
push
add
xchg
divl
add
cmp
inc
inc
adc
add
lds
das
roll
test
add
xchg
dec
xchg
lds
add
inc
ds
mov
pusha
or
int3
dec
xchg
adc
ds
add
dec
push
das
fmull
pop
add
mov
inc
add
dec
xchg
jnp
add
inc
add
add
xor
cmp
scas
xor
inc
add
loop
mov
mov
dec
cmpl
mov
sbb
lcall
dec
or
aam
scas
into
fwait
xor
xchg
inc
add
add
xchg
dec
lds
add
add
add
add
add
dec
fisttpll
and
inc
dec
negb
orb
jae
dec
xchg
inc
sub
push
das
fimull
and
or
es
lret
adc
loopne
fadd
and
inc
pop
mov
ret
int3
lds
add
rorb
inc
and
das
jle
add
int3
inc
dec
pop
mov
arpl
lahf
arpl
enter
mov
enter
or
dec
mov
pushl
push
orl
xchg
xor
rorl
les
mov
add
xor
aam
xchg
shlb
add
out
cmp
test
int3
das
leave
xchg
dec
cmpb
ret
mov
fwait
dec
mov
dec
enter
sahf
add
ret
lret
inc
add
or
xor
cmp
mov
mov
dec
add
dec
xchg
cmp
push
call
add
inc
dec
add
adc
pusha
adc
mov
dec
std
hlt
mov
dec
aam
dec
push
sub
cmp
cmp
adc
mov
mov
roll
mov
inc
adc
popa
addb
out
add
rolb
dec
mov
inc
xor
sub
mov
ds
pusha
popa
int3
xchg
xchg
or
add
aam
add
cmp
cmpl
lret
inc
lret
cmpl
add
dec
mov
add
and
inc
sub
cmp
add
ss
loop
dec
clc
add
pusha
mov
add
or
push
pop
roll
into
inc
add
cmp
andb
incl
mov
add
dec
add
pushf
lds
add
rorl
cmp
das
in
iret
loope
lret
inc
add
add
mov
mov
add
out
cmp
sar
iret
add
sbb
cmp
mov
dec
dec
mov
mov
loop
incb
jne
add
mov
das
nop
sarl
cmp
push
sbb
adc
xor
dec
xchg
cmp
adc
inc
cmpl
pop
dec
mov
sub
das
leave
loopne
lock
cli
sub
jo
fs
and
push
rorb
loopne
push
lret
inc
jnp
or
cmp
int
lret
inc
cmp
shlb
and
add
movb
addb
mov
dec
add
lret
jae
inc
sbbb
mov
leave
mov
inc
pop
decl
push
mov
add
frstor
adc
xor
push
mov
inc
or
adc
shlb
fs
push
push
fsubl
xchg
xor
orl
std
mov
js
add
paddq
idivl
dec
mov
dec
mov
cmp
mov
lret
inc
rorb
add
pop
dec
or
add
add
adc
adc
mov
push
add
mov
inc
push
add
mov
inc
push
xor
or
daa
das
add
xchg
xor
dec
enter
int3
dec
add
jnp
mov
mov
xor
pushf
mov
adc
roll
dec
xorl
mov
cmp
mov
aad
or
add
add
adcl
or
mov
xor
pusha
push
adc
mov
aam
mov
xchg
adc
loopne
sub
xor
test
add
inc
cmp
add
lret
jp
lret
jp
inc
out
adc
shrb
adc
xor
mov
das
mov
jnp
push
adc
outsb
or
add
roll
sbb
pop
mov
in
push
mov
inc
stos
mov
roll
add
addl
add
out
pop
testl
xor
bound
adc
out
nop
or
iret
or
rorl
pop
ret
inc
pusha
add
or
lock
add
out
adc
lahf
nop
dec
or
or
pop
mov
rorb
push
add
cmc
out
adc
sub
stos
xchg
or
or
add
sub
add
flds
or
addb
popa
add
lret
inc
add
push
add
or
or
mov
inc
or
sar
test
or
add
cmpsb
pop
das
int3
mov
inc
xor
mov
adc
add
int3
inc
push
mov
addb
mov
xchg
xchg
sub
rcrb
dec
and
xchg
xchg
xchg
xchg
or
shll
cli
cmp
dec
or
add
sbbl
adc
mov
xchg
xchg
and
cmp
rolb
int3
xchg
or
add
mov
sub
add
hlt
add
xor
enter
xchg
xor
sub
adc
ds
adc
xorl
xor
cmp
cmp
add
adc
mov
andb
cmp
add
lds
cmp
cli
dec
rorb
xor
adcl
fs
dec
adc
dec
cmpl
dec
add
mov
cmp
add
ret
dec
mov
dec
lds
xchg
jb
mov
add
mov
testl
jge
inc
add
add
push
enter
sub
scas
add
pop
xchg
add
inc
cmp
mov
sub
test
rolb
add
loopne
lods
sub
push
inc
aaa
jo
ret
aad
dec
or
mov
add
lds
pop
addb
inc
cmp
inc
mov
iret
pusha
add
jb
test
roll
fst
add
push
mov
add
jno
cmp
add
or
add
mov
test
nop
mov
das
testl
nop
pop
mov
xor
and
add
call
mov
push
add
mov
fidivrl
inc
mov
push
inc
int
cwtl
sarb
movb
mov
addl
inc
or
movb
push
cmpsb
shrb
dec
add
roll
lock
or
call
add
mov
inc
add
into
mov
dec
push
test
lret
xor
shrb
inc
jg
xor
mov
scas
in
sbb
adc
sub
cmp
cmp
mov
idivl
std
add
or
add
dec
sbbl
add
dec
mov
jp
inc
inc
add
lret
add
lcall
test
sub
add
mov
add
pusha
push
adc
xorl
or
xor
dec
inc
fmul
fidivl
inc
inc
or
daa
dec
mov
addb
lcall
add
mov
dec
rolb
lret
dec
mov
dec
xchg
cmp
add
add
dec
jnp
cmp
inc
pop
in
mov
push
in
loope
add
lret
jp
inc
rcrl
xlat
test
inc
dec
sbb
jp
cmp
add
cmp
dec
xchg
cmp
push
add
lcall
aas
add
mov
inc
ds
mov
adcl
lret
inc
mov
push
add
or
das
jmp
ds
lret
inc
popf
loopne
inc
aas
leave
or
inc
xchg
addb
mov
jmp
mov
lret
inc
xorb
nop
lds
add
rolb
cmp
inc
add
rorb
rorb
push
enter
add
pop
lds
mov
mov
add
add
mov
dec
xchg
shlb
enter
incl
add
dec
adc
jo
cmp
add
adc
sub
xchg
cmp
lds
sbb
mov
addb
sbb
cwtl
add
add
orb
sub
add
mov
or
inc
faddl
lret
inc
mov
mov
add
or
dec
sub
sub
mov
out
add
and
xor
cmp
dec
push
dec
subl
dec
mov
dec
xorl
add
add
cmp
cmp
stc
hlt
jg
add
add
jp
jns
xchg
mov
scas
sub
and
cmp
aaa
movl
pop
cmp
cmp
or
add
cmp
sar
xlat
test
inc
pop
mov
in
inc
or
dec
or
mov
xor
add
add
test
dec
and
xchg
dec
add
add
cwtl
jb
add
add
out
cmp
add
cmp
test
inc
cmp
and
orb
lcall
enter
add
mov
negb
sub
xchg
add
xor
cmp
xor
inc
add
popa
testl
lret
push
add
inc
and
inc
add
lret
imul
dec
cmp
cmp
dec
adc
xchg
cmp
add
mov
dec
mov
mov
scas
rorb
lahf
add
aad
movups
adc
cltd
cmp
pop
das
xlat
scas
aam
add
jle
or
cmp
add
aam
inc
add
decl
cli
mov
xchg
shl
add
add
dec
cltd
add
lods
add
movb
dec
add
add
dec
and
negb
orb
adc
and
fwait
lcall
int3
andl
add
inc
sti
add
add
shrb
out
add
add
mov
testb
add
lds
adc
xchg
sub
and
cmp
dec
dec
dec
sbb
add
push
add
inc
add
mov
dec
addl
push
add
ret
or
add
jp
sub
dec
mov
orb
rcrb
addl
or
shlb
mov
lds
mov
or
dec
cmpl
stos
orb
mov
xchg
fisttps
mov
cmp
clc
shlb
and
mov
in
or
orb
and
int3
mov
dec
mov
sub
inc
dec
sarb
or
lods
fadds
or
shrl
pop
push
subb
shll
add
lret
jae
lods
flds
or
test
add
insb
inc
or
aam
lret
inc
inc
inc
add
inc
jo
pop
scas
add
mov
adc
mov
testl
dec
dec
addl
inc
add
add
orb
push
add
dec
cmpl
cmp
test
roll
push
loope
cmpl
sbb
inc
and
fiadds
in
hlt
scas
and
cmp
sub
loopne
scas
roll
add
fadds
add
mov
dec
repz
xor
sub
cmp
sub
add
add
lcall
cmp
sub
xchg
dec
mov
xchg
dec
mov
loopne
inc
sti
lds
mov
dec
and
xchg
sub
mov
ljmp
adc
or
adc
inc
sub
fadds
and
mov
loopne
mov
add
lahf
dec
add
inc
inc
add
testl
or
or
loopne
inc
add
sub
insl
and
and
in
andb
dec
or
sub
adc
adc
and
dec
xor
sub
and
jno
int3
cmp
loopne
add
dec
inc
into
loope
sub
inc
and
cmp
add
dec
xchg
fwait
shlb
sub
add
xchg
cmp
fsubrl
in
add
cmp
dec
and
sub
inc
cmp
cmp
dec
or
fmuls
faddl
inc
and
add
add
fsubrl
inc
mov
shrb
sub
addl
add
inc
lldt
cmp
add
test
cltd
inc
mov
xchg
xchg
xchg
dec
ss
stos
faddl
shrl
add
or
pop
sub
mov
pop
rclb
dec
or
add
dec
addl
test
mov
add
cmp
xchg
and
add
sti
add
add
shl
das
shrl
push
sub
push
out
adc
mov
add
test
and
ret
scas
pusha
fwait
rcl
push
adc
xchg
sub
cmp
cmp
and
pusha
xchg
divl
addb
sub
xor
cmp
sbb
jl
add
add
cld
xorb
shll
inc
add
hlt
cli
or
dec
xor
mov
arpl
aaa
lret
add
push
xchg
sub
add
lret
jb
add
add
and
jae
loopne
add
dec
inc
add
add
loopne
test
add
add
xor
jae
loopne
add
adc
inc
dec
loopne
lods
add
adcb
mov
lods
hlt
loopne
add
adc
add
xchg
sub
adc
testl
xchg
xor
mov
inc
mov
aam
add
jae
loopne
xor
pop
fistps
inc
push
mov
pop
out
sbb
cmpl
and
pop
popa
cmp
inc
xchg
cmp
adc
cmp
add
loopne
dec
pop
das
filds
jg
ficoml
lret
add
icebp
and
dec
xchg
int3
dec
je
add
das
pusha
inc
add
scas
xchg
scas
inc
ret
pusha
mov
mov
rcrl
cmp
lret
inc
das
inc
pop
xchg
sub
in
cmp
xchg
adcb
in
roll
push
rolb
mov
fdivl
loopne
add
inc
add
inc
jle
add
lret
inc
push
add
push
xchg
inc
or
inc
lea
sti
scas
lods
xor
and
sub
add
cmp
nop
cmp
inc
pop
push
add
mov
mov
add
inc
inc
push
add
sub
push
push
add
and
cmp
inc
mov
scas
lds
sbb
jo
push
add
rolb
mov
loopne
sub
xor
inc
add
add
dec
mov
lret
push
pop
cmp
or
xorb
sub
and
xor
xor
or
mov
xor
inc
dec
push
add
inc
aas
mov
jno
das
rorl
sub
mov
add
and
dec
sarl
and
icebp
adc
and
adc
aas
lret
inc
pushf
inc
xchg
mov
adc
sub
push
nop
sub
sub
loopne
jg
and
xchg
dec
stc
add
xchg
dec
pop
sub
stos
xor
xor
or
add
sub
sub
or
rclb
addb
addl
add
cmp
xchg
and
add
sub
mov
mov
inc
add
shll
dec
test
loopne
add
lcall
xchg
dec
xor
xchg
idivl
or
xorl
add
add
jo
adc
cmp
scas
lds
popa
add
pusha
add
add
scas
popf
mov
scas
ret
add
xchg
cmp
sarb
int3
sub
sub
inc
mov
dec
cmpb
orb
mov
mov
aam
pop
add
cmp
cmp
push
xchg
dec
inc
addb
mov
dec
or
testl
cmp
add
dec
cmp
loop
add
add
sbb
pusha
setno
rolb
sub
push
add
add
dec
pop
dec
mov
enter
das
ret
push
int3
push
add
pop
cmp
rcl
inc
add
xor
and
cmp
sub
rorb
sbb
mov
push
jno
lret
inc
test
sub
seto
in
and
add
std
mov
incb
addb
xchg
xlat
add
aam
adc
sahf
incl
mov
es
add
sbb
inc
add
ret
ror
xor
loope
push
add
mov
or
test
sbb
add
add
inc
add
xchg
cmp
andb
rolb
adc
nop
pop
cld
xor
hlt
sub
jns
xchg
dec
fdivs
jne
add
or
aas
in
dec
ret
sub
nop
pop
das
add
dec
add
mov
xchg
sub
dec
aaa
movsb
and
scas
int3
shlb
push
js
add
and
roll
testl
hlt
das
int3
xchg
sub
inc
adc
and
xchg
and
loopne
dec
xor
push
xchg
int3
nop
add
and
call
sub
nop
daa
dec
mov
mov
xchg
jae
nop
add
and
mov
lock
cmp
mov
cmp
sub
adc
fdivl
fsubrs
mov
cmp
psraw
ror
js
sub
mov
and
call
add
xor
pusha
or
fdivl
adc
xchg
xchg
xchg
xchg
add
jo
and
test
aam
lods
divb
xor
rclb
sub
push
add
add
fsts
inc
cli
add
pop
nop
scas
lods
loope
test
or
dec
cmpl
cmp
dec
cmpl
mulb
xor
adc
loopne
mov
fs
jo
lret
add
inc
lret
nop
add
sub
xor
and
rclb
mov
int3
xchg
xchg
xchg
out
jle
jge
jno
mov
lret
inc
add
cmp
mov
dec
cltd
fcoml
add
outsl
icebp
add
mov
lods
shll
out
inc
add
add
nop
add
lret
lods
fcoml
mov
lods
aad
stos
add
sbb
mov
lock
scas
pop
adc
adc
or
xor
add
andl
xchg
sub
push
add
and
sbb
sbb
lock
pop
adcl
push
cmp
movsb
jg
or
add
dec
adcb
hlt
sbb
xorl
rclb
xchg
inc
xchg
negl
cmp
dec
xorl
std
nop
cltd
jl
repz
sub
rolb
shl
aas
mov
dec
ret
sarb
loopne
aad
add
shll
xchg
xor
xchg
loopne
fwait
add
test
sbb
dec
cmpl
mov
add
int3
cld
dec
mov
dec
mov
fsubrl
lock
rolb
mov
add
mov
xchg
ror
push
sub
rolb
sbb
pop
xor
lahf
andl
lock
inc
dec
cmp
inc
and
pusha
cmp
xchg
lods
xor
sbb
nop
shlb
stc
xor
add
inc
inc
dec
push
add
sub
xor
adc
repz
rorl
in
sub
fbld
and
fwait
jo
dec
pop
adc
sub
hlt
jl
rorl
adc
add
or
xlat
xor
fldl
and
dec
nop
add
mov
orb
xchg
xor
add
dec
xorl
jns
add
sub
jl
add
sub
or
sarb
add
mov
negb
add
stos
rclb
jo
xchg
cmp
cmp
flds
mov
lods
andl
xor
cmp
nop
xchg
xchg
dec
inc
roll
sub
lock
add
addb
cmc
lods
cmp
and
mov
xchg
cmp
incl
jl
and
mov
ror
jae
xchg
dec
movl
in
je
and
fsubs
or
dec
add
or
loope
dec
xchg
into
xchg
add
je
add
and
push
xchg
sub
adc
adc
xchg
add
add
mov
pshufw
dec
add
mov
xchg
mov
add
lods
icebp
push
xchg
sub
lock
fwait
movb
cli
mov
inc
cmp
add
mov
add
int3
add
cmp
xchg
add
cmp
add
mov
add
cmp
add
add
mov
dec
inc
xor
add
cmp
cmp
out
cmp
cmp
mov
add
cmp
cmp
cmp
adcl
inc
add
add
add
cmp
cmp
pusha
testl
or
dec
add
xor
sub
dec
or
clc
dec
nop
xchg
dec
mov
movl
dec
cmovge
cmpsl
add
cmp
scas
test
mov
enter
sarl
add
cli
testl
in
jb
xchg
cmp
int3
dec
nop
roll
aam
ror
cmp
cmp
mov
add
decl
inc
or
mov
or
mov
dec
add
xchg
cmp
add
stos
add
fwait
lcall
dec
xchg
xchg
xchg
xorb
pop
add
add
cmp
sarl
test
dec
cmpb
mov
xchg
xchg
add
add
pop
cmp
dec
xor
add
mov
out
rol
xchg
add
pop
test
xchg
xchg
sbbb
add
fildll
xchg
cmp
insb
bound
add
dec
lds
das
lret
inc
add
xchg
loopne
xchg
cmp
lock
add
or
cmp
inc
mov
nop
orb
flds
idivl
add
mov
cmp
scas
cmp
add
xorb
dec
mov
cmp
inc
lock
dec
inc
je
cmp
cmp
addb
and
roll
sub
add
jl
mov
or
inc
and
andb
rolb
testl
enter
push
addb
incl
sub
add
cmp
sub
add
inc
outsl
addb
or
add
inc
inc
inc
xor
xor
add
dec
rolb
andl
popl
cmp
add
mov
dec
andl
rorb
cmp
cmp
mov
push
inc
cmp
xchg
add
xor
inc
add
sub
sub
cmp
inc
add
test
cmp
add
dec
inc
push
add
xor
cmp
cmp
inc
add
out
and
cmp
inc
inc
sbb
cmp
cmp
subl
and
add
jnp
xchg
sub
das
push
cmp
idivl
orl
add
inc
rolb
lret
inc
cmp
inc
cmp
std
mov
jo
add
sub
add
cmpsb
pop
scas
enter
xchg
add
xor
in
cmp
clc
movl
rorb
lret
jae
ret
lahf
out
add
fwait
mov
dec
add
mov
cmp
pushf
xchg
cmp
dec
sbbb
or
divl
addb
cmp
add
das
leave
testl
sub
add
add
dec
inc
rclb
add
addb
dec
adc
inc
add
clc
inc
js
into
pusha
rclb
pop
addb
pop
add
addb
cltd
aam
pop
or
inc
dec
inc
add
enter
dec
cltd
int3
dec
fadd
xor
filds
pop
dec
nop
into
lock
ss
ds
mov
aam
push
and
incl
mov
nop
dec
xchg
rolb
mov
orl
adc
aam
mov
and
call
mov
lret
jae
xchg
add
mov
inc
add
lret
add
xlat
adc
mov
and
sar
adc
lret
enter
dec
inc
cmp
dec
mov
and
add
lahf
dec
shrb
popa
sbb
sbb
inc
add
jge
add
andb
shrb
add
add
pop
dec
cltd
cmp
clc
add
hlt
xchg
dec
cltd
and
hlt
add
xchg
add
int3
cmp
jl
and
andl
xchg
sub
sub
or
mov
decl
add
dec
xchg
and
sub
inc
xor
jno
push
jg
rolb
push
xor
sbb
andl
orb
mov
ret
imul
dec
cltd
and
adc
sub
rolb
fsubl
xchg
and
mov
movl
add
inc
xor
add
mov
xor
sbb
inc
cli
add
xor
xchg
cmp
and
dec
add
sbb
aam
add
dec
andl
movl
loope
inc
insl
das
and
add
add
xchg
add
xchg
enter
out
mov
dec
lds
pop
rolb
shrb
mov
arpl
push
push
int3
mov
out
add
push
pop
add
mov
push
int3
add
xchg
call
mov
inc
js
int3
inc
loopne
shlb
into
adcb
shrb
dec
clc
add
adcl
dec
mov
mov
dec
xchg
int3
add
aam
int
xchg
enter
add
shlb
popa
adc
push
add
adc
and
push
xchg
mov
mov
int3
xchg
dec
add
popa
ret
lret
jb
cld
dec
mov
lock
pop
lret
imul
add
out
sbbb
mov
dec
add
lock
xor
mov
inc
loopne
dec
xchg
cmp
mov
dec
and
mov
mov
dec
mov
dec
popf
or
out
cltd
mov
cltd
add
orb
clc
lds
out
mov
faddl
das
ret
dec
lret
add
add
movl
mov
das
nop
push
clc
mov
roll
add
add
enter
mov
add
inc
add
decl
add
sbb
in
clc
sub
mov
popa
add
dec
scas
aam
add
ss
cmpb
mov
enter
sub
bound
cmp
jae
add
iret
insb
lds
sub
pop
mov
into
add
dec
add
mov
insb
and
mov
loope
inc
cmp
inc
xor
movsb
cmp
scas
enter
sub
xor
cltd
mov
add
adc
shll
ret
testb
sub
icebp
adc
inc
test
xchg
dec
inc
mov
add
xchg
push
push
add
pop
mov
dec
and
pusha
add
add
sarb
dec
lret
dec
or
inc
adc
dec
inc
cmpl
inc
in
mov
dec
cltd
xlat
das
test
or
movsb
or
xlat
mov
orb
dec
add
mov
inc
add
das
dec
and
int
add
inc
ret
cmp
or
jo
lret
inc
stc
rolb
shrb
inc
sbb
jp
xor
insl
mov
inc
loopne
addb
mov
jo
mov
addl
adc
rolb
sub
cmpl
cltd
js
inc
mov
shrb
jg
andl
adc
pusha
dec
addl
sbbl
add
dec
xorl
cmp
dec
jge
add
cltd
insb
dec
cltd
push
inc
inc
mov
js
adc
xchg
mov
pusha
push
rcll
jo
adc
push
sbb
pop
xor
cltd
add
mov
std
cltd
xor
lret
inc
xor
mov
mov
andl
les
shlb
scas
lds
add
cmp
cld
cltd
pop
xorb
rcll
shl
jo
adc
scas
lds
add
and
mov
addb
and
push
loopne
std
cltd
mov
int3
mov
std
cltd
and
adc
push
or
xor
push
add
or
sub
rolb
xchg
xor
shlb
adc
mov
dec
cmpl
nop
xchg
rolb
test
shrb
sub
roll
xorb
xorl
adc
roll
or
adc
sub
jo
scas
dec
lret
rorb
rolb
aas
push
sbb
push
add
or
push
pusha
add
mov
xor
int3
mov
clts
and
add
xchg
xor
rcrl
xor
gs
cltd
aas
das
insb
xor
xor
add
dec
mov
add
xchg
dec
mov
push
sub
dec
cmp
addb
or
and
dec
adc
imul
add
test
andb
fs
dec
add
dec
xchg
dec
add
add
dec
xchg
xchg
inc
add
adc
add
mov
das
int3
loope
mov
pop
fwait
lcall
mov
sub
mov
push
sbbb
mov
mov
mov
push
das
iret
cmp
add
icebp
add
inc
and
mov
sub
aad
add
lcall
add
adc
orb
popa
sub
mov
cmp
xor
cltd
nop
je
or
sub
dec
adc
or
mov
rol
test
das
ret
nop
or
jbe
mov
out
add
mov
add
call
jmp
add
adc
adc
repnz
xchg
arpl
xchg
dec
cltd
int3
xchg
mov
stos
sub
dec
add
mov
nop
add
lcall
or
mov
xor
or
dec
add
and
mov
xchg
cmp
mov
arpl
add
insb
scas
shl
dec
mov
xor
roll
test
dec
sbb
xor
lods
das
leave
add
or
sbb
or
or
xchg
and
xchg
cmp
sarb
mov
cmp
cmp
sbb
sbb
or
or
scas
sub
xor
pushf
cmp
movsb
cmp
dec
inc
and
inc
sub
popa
xchg
xchg
sub
shrb
xlat
lret
inc
and
inc
dec
ja
push
add
dec
cmp
jo
jns
pusha
dec
sub
imul
sbbb
cmp
in
sub
dec
add
add
subl
cmp
adc
dec
xchg
insb
loopne
cmp
and
lock
dec
xorl
xchg
lods
mov
inc
inc
icebp
add
sub
std
cmp
mov
das
hlt
nop
sbb
add
cmp
lods
sub
push
mov
adc
inc
int3
and
aam
cmp
cmp
push
inc
cmp
adc
lds
inc
and
inc
sub
xchg
xchg
scas
lds
sub
adc
add
cmp
and
pop
dec
stc
hlt
mov
adc
icebp
mov
nop
add
dec
inc
and
inc
push
rolb
mov
icebp
inc
mov
ljmp
add
loopne
rcll
push
shrd
xchg
cmp
add
leave
mov
push
add
add
add
add
dec
addb
xchg
cmp
inc
add
insl
add
or
push
add
lcall
sub
adc
inc
int3
dec
sbb
pop
jno
jge
inc
adcb
or
push
or
or
scas
dec
xchg
xchg
xchg
dec
xchg
mov
icebp
jb
push
jnp
or
dec
inc
mov
inc
sarb
dec
cmpl
out
add
jno
mov
loopne
aam
mov
inc
pop
cmp
lret
jae
add
lret
jae
int3
add
add
add
shlb
int3
ret
adc
cmp
scas
mov
add
or
xor
inc
add
mov
scas
aam
xchg
adc
js
sbb
loopne
scas
xchg
cmp
ja
rcll
aam
add
cld
mov
add
adc
lds
pushf
scas
add
dec
add
lds
add
repnz
rcll
test
sub
cld
add
cmp
enter
add
add
test
add
xchg
dec
andl
adc
test
scas
ret
and
nop
add
rorl
inc
lret
scas
or
or
or
es
lcall
xchg
dec
sub
and
sub
xchg
xchg
dec
add
dec
adc
add
clc
add
lods
cmp
aam
xchg
cmp
mov
test
inc
xor
inc
pop
add
or
xor
rorl
shrb
dec
fiaddl
inc
add
aam
xchg
add
rclb
xchg
cmp
add
push
add
add
mov
add
add
cmp
or
dec
cmp
xchg
add
add
add
adc
add
repnz
ret
mov
aam
aas
sub
cmp
enter
rolb
in
cmp
mov
mov
add
xchg
sub
fiadds
cmp
fwait
lcall
cltd
pop
subb
dec
xor
inc
aas
add
pop
add
inc
add
ret
rorb
add
aam
lahf
sbb
cmp
add
mov
ret
rolb
cmp
mov
inc
pop
mov
rolb
cmp
or
dec
xchg
aam
addl
xchg
dec
fcoml
adcl
cmp
shlb
xchg
enter
add
inc
pop
mov
leave
xchg
cmp
sub
jno
sub
int3
dec
mov
add
dec
xchg
rorb
add
inc
add
push
je
das
aam
push
add
sub
pop
cmp
testb
lcall
aam
xchg
xchg
dec
mov
inc
or
inc
negl
sub
pop
cmp
dec
loope
std
cltd
enter
mov
or
cmp
movb
cmp
cmp
dec
sbb
or
add
lcall
add
leave
dec
add
inc
mov
inc
add
das
ret
dec
xchg
int3
dec
add
dec
or
adc
dec
xchg
rolb
add
xchg
dec
mov
xor
mov
testl
rorl
decl
lret
dec
mov
inc
and
std
mov
enter
dec
mov
shrb
sbb
add
subb
dec
or
test
xchg
mov
idivl
das
xchg
sub
mov
inc
cmp
rol
mov
mov
roll
cmp
cld
sbb
fiadds
add
into
xchg
sub
lcall
xchg
xchg
sub
dec
inc
jb
add
add
add
add
fwait
popf
pop
xchg
xchg
inc
jp
mull
cmp
roll
cwtl
rcrb
xor
inc
xor
mov
int
mov
add
imull
cmp
rol
dec
mov
push
inc
sub
sarb
xchg
lret
inc
dec
sarl
int3
testl
adc
xor
jnp
cmp
cli
add
insl
add
add
add
add
xchg
out
dec
add
out
dec
or
fadd
inc
lret
inc
inc
out
adc
mov
mov
fcmovb
add
add
add
dec
orb
cmp
inc
mov
jo
adcl
shl
dec
mov
rolb
add
rorb
pop
add
dec
add
loop
cmp
dec
mov
inc
adc
lret
inc
sbb
and
rolb
add
inc
sti
add
int3
dec
mov
inc
pop
aam
cmovns
jnp
add
mov
enter
push
or
pop
dec
lret
push
dec
shl
inc
dec
mov
pusha
add
dec
mov
dec
mov
and
mov
xchg
add
inc
push
add
push
rorl
fmuls
rcll
mov
push
mov
add
adc
dec
xor
pusha
add
xchg
sub
enter
add
xchg
lret
cmp
cmp
aam
dec
mov
testl
enter
cmp
enter
incl
mov
lods
mov
mov
pop
inc
cmp
sbb
xchg
xchg
sub
leave
popa
xchg
rorb
hlt
dec
add
int3
xchg
sub
or
pop
mov
scas
add
scas
add
icebp
add
xchg
rorb
popa
sub
cmp
scas
hlt
pushf
sub
int3
inc
push
dec
ret
add
add
adc
add
testl
sub
and
inc
sub
add
dec
adcl
mov
adc
mov
adc
dec
inc
fisubrl
inc
adc
addb
adc
inc
adc
dec
dec
aad
andl
mov
add
xorl
and
add
dec
mov
sub
orb
ds
int3
xchg
sub
sbb
sbb
pop
rorb
and
or
addb
dec
add
rorb
xchg
dec
mov
inc
out
popa
inc
pusha
push
fwait
inc
mov
inc
and
hlt
xchg
inc
add
xor
xchg
sub
inc
add
jno
int
dec
mov
xchg
and
loopne
adc
sub
add
push
sub
mov
mov
mov
loopne
and
inc
adc
inc
xchg
and
mov
add
mov
inc
aaa
negl
aad
dec
cltd
xor
loope
push
xor
mov
mov
dec
inc
inc
cwtl
shlb
sub
inc
and
add
inc
xorb
ret
testb
dec
jns
aas
cmp
movsb
sub
and
dec
add
sar
mov
dec
mov
pushf
sub
add
iret
add
add
cmp
add
dec
cltd
add
inc
cmpsl
cmp
and
scas
add
sahf
dec
mov
add
enter
lret
inc
and
or
je
adc
pop
ret
ret
xorl
pusha
add
pop
xchg
lods
loope
scas
dec
lds
add
add
and
xor
cmp
and
addb
cmp
xchg
mov
cmp
cmp
add
mov
das
add
dec
cmpl
cmp
cmp
test
add
shlb
loopne
cmp
iret
rolb
rolb
add
cltd
iret
mov
inc
or
sub
movb
cmp
dec
adc
cmp
iret
fwait
es
int3
add
inc
sub
and
cmp
loopne
and
les
das
pushf
addl
mov
add
sub
pusha
ss
int3
add
adc
cmp
push
cmp
popf
popf
ret
adc
dec
inc
js
push
xchg
rcll
push
js
ret
xorb
and
loopne
inc
mov
subl
add
inc
push
mov
add
inc
xor
push
add
xchg
scas
mov
add
adc
add
push
add
xchg
sub
add
push
xor
push
add
sbb
cltd
aas
mov
add
pop
mov
mov
inc
cmp
add
dec
add
repnz
cs
aas
mov
xor
sub
xchg
jo
mov
cmp
cwtl
push
adc
dec
mov
or
lret
inc
inc
mov
mov
mov
cmp
xchg
xchg
or
xchg
add
sub
int
push
and
xchg
in
into
lock
shlb
hlt
dec
mov
lds
jno
rcrl
aas
mov
sbb
adc
xor
std
cltd
xor
push
adc
mov
cmp
xor
inc
xor
add
adc
xor
shrb
cmp
cmp
ja
dec
shlb
call
add
sub
dec
mov
dec
test
xchg
dec
add
cs
xchg
inc
and
scas
adc
dec
mov
das
add
dec
subl
cwtl
lea
add
xor
pop
xchg
xchg
dec
add
mov
cmp
shr
aam
dec
scas
dec
addb
jo
add
add
or
test
cmp
push
mov
xor
and
mov
add
xor
mov
loopne
cmp
push
roll
add
sub
push
rclb
xchg
sbb
into
dec
add
sub
movsl
add
mov
int3
lret
add
dec
shl
pop
xchg
mov
add
hlt
add
adc
scas
shl
fwait
xor
xor
pop
adc
or
movl
cmpsb
and
lock
mov
add
lods
stos
mov
das
out
scas
rolb
xor
add
fmull
add
loopne
lret
jb
xor
filds
xor
cmp
mov
add
push
add
pop
in
dec
add
add
xchg
sub
add
push
pop
xchg
xchg
xchg
inc
cmp
divl
nop
push
xchg
add
inc
xchg
rclb
xchg
orb
adc
xchg
sub
push
inc
sbb
add
add
sub
test
cmp
jns
dec
mov
subb
add
dec
iret
sub
addb
sbb
sahf
imul
ds
das
int3
nop
pusha
dec
sub
dec
add
cmp
shrb
jnp
xchg
sub
xor
testl
cwtl
add
movsb
inc
add
or
sub
dec
mov
je
add
dec
mov
dec
mov
dec
mov
inc
or
lds
sbb
out
dec
cmpl
cmp
enter
mov
inc
cli
push
sbb
mov
adc
push
push
dec
cltd
xor
orb
cmp
sub
xor
jo
mov
or
cltd
cmp
inc
adc
lds
xor
sbb
or
add
add
mov
sub
orl
scas
lds
stos
push
push
icebp
add
sbb
lret
inc
andb
dec
cwtl
cli
lds
test
adc
sbb
cmp
cs
or
repz
sub
add
int3
add
inc
xor
add
add
or
xor
cmp
dec
cmpl
das
xchg
or
add
or
mov
adc
fwait
push
add
shlb
xchg
sub
lock
cli
mov
add
push
jecxz
mov
add
sub
rolb
or
sub
xorb
cmpl
cmc
adc
enter
adc
enter
filds
sbb
xor
add
dec
cmp
inc
mov
adc
dec
pop
inc
lock
dec
add
inc
sbb
dec
cwtl
loopne
mov
or
jno
mov
dec
xor
test
sub
mov
xchg
add
sarb
das
dec
add
dec
or
sub
add
cmp
dec
cwtl
test
xor
cmp
push
mov
jge
mov
cmc
mov
lds
stos
pusha
aam
cwtl
loopne
inc
adc
dec
aaa
inc
adc
shll
movsl
push
or
pushf
addb
rolb
das
dec
pop
and
mov
and
in
sub
dec
cmp
mov
mov
dec
xor
mov
dec
adc
mov
sub
pusha
sbb
lods
lock
add
aad
loopne
add
addb
xor
push
lds
push
add
lock
rolb
xor
add
xchg
xchg
or
push
test
inc
mov
mov
dec
int3
and
add
pushl
cmp
cmpl
add
lret
inc
xor
push
cli
inc
cmp
jmp
mov
addb
jae
xor
lret
inc
jo
loopne
mov
mov
add
enter
test
inc
push
adc
inc
or
xorl
mov
mov
shlb
inc
mov
rol
inc
int3
add
int3
dec
mov
cmc
add
loopne
in
das
in
add
aam
shrb
in
dec
xchg
push
bswap
xor
mov
clc
lds
in
add
or
enter
out
cmp
shlb
std
mov
scas
add
scas
enter
sub
nop
jae
inc
add
leave
xor
inc
mov
nop
adc
dec
ret
xorl
xor
sbb
inc
fcoml
jle
push
testl
and
testb
xor
xchg
je
mov
int3
dec
addl
lock
aam
divl
dec
cltd
sub
adc
dec
adc
sbb
add
int3
dec
mov
inc
xlat
adc
xor
fstpt
lret
add
lock
subl
push
add
test
and
sbb
mov
dec
andl
cmp
add
inc
mov
add
add
mov
dec
adc
sub
cmp
add
rolb
aad
push
popl
push
dec
add
fsubrl
enter
xchg
scas
nop
shrb
add
call
mov
xor
mov
add
add
add
inc
cli
lds
add
dec
ret
enter
addl
lret
inc
out
add
add
add
in
lret
inc
into
add
add
inc
lds
or
add
add
dec
inc
sbb
add
int3
add
add
add
inc
push
and
in
add
inc
and
add
inc
mov
rorb
jns
add
push
cmp
int3
add
add
adc
xchg
dec
addb
andl
cmp
flds
pusha
dec
add
cmp
cmp
pop
dec
add
add
inc
add
mov
sub
sub
scas
rcrb
lds
and
xchg
scas
lds
sub
inc
xchg
xchg
dec
cltd
sbb
dec
andl
add
inc
add
xchg
dec
sbbl
jo
scas
add
adc
inc
add
xchg
cmp
push
ret
adcb
add
int3
add
add
cltd
sub
flds
int3
inc
sbbb
pop
sub
roll
mov
or
inc
push
das
add
add
xor
add
mov
push
add
mov
jae
ret
orb
xchg
cmp
adc
xor
orb
jne
or
dec
cltd
adc
add
xorl
aas
ret
dec
add
inc
ds
call
add
lds
push
inc
cmp
mov
and
int
test
add
add
testl
mov
fadd
inc
dec
mov
xchg
add
mov
dec
mov
add
add
mov
mov
mov
std
mov
xor
into
dec
add
add
das
add
addl
scas
add
sub
wbinvd
add
addb
scas
add
fadd
ret
mov
scas
add
dec
mov
sub
add
inc
xor
sub
addb
inc
incl
cmp
or
mov
cmpl
sbb
cld
add
add
das
stos
loope
sbb
inc
add
inc
add
add
cld
add
mov
sub
add
testl
filds
sbb
fwait
lcall
add
inc
sub
dec
cmp
addl
scas
mov
sarb
aam
lods
icebp
mov
add
cmpl
add
mov
xor
mov
sub
push
inc
leave
jns
or
add
or
ret
test
inc
mov
test
xor
rolb
enter
add
sub
rclb
add
add
cmp
push
mov
scas
dec
or
sub
inc
adc
inc
xor
mov
sub
loop
adc
dec
xorl
add
sub
push
cmp
dec
addl
pop
mov
orb
sarl
addl
xchg
sub
add
push
cmp
sub
faddl
pop
inc
adc
push
cmp
shrl
add
cmp
mov
mov
std
mov
sub
inc
rcr
pop
mov
add
dec
negl
std
fmul
inc
inc
pop
popa
dec
add
inc
loopne
push
add
add
inc
faddl
mov
popa
dec
and
std
subl
and
dec
rolb
add
inc
std
add
cmpl
add
filds
dec
mov
or
dec
dec
mov
inc
add
movl
icebp
dec
andl
and
subl
xor
add
rol
addb
sub
jnp
cmp
or
cmp
xor
cmpl
subl
call
inc
pop
sub
mov
inc
sub
mov
in
pusha
nop
xorl
mov
in
add
lds
sub
or
test
dec
subl
icebp
inc
add
cmpb
add
add
cmp
testb
inc
sub
pusha
adc
add
lods
test
add
cltd
aas
cmp
rorl
cwtl
rolb
fstps
push
cmp
mov
dec
movl
incl
xor
dec
mov
int3
add
xchg
add
mov
idivl
xchg
sub
add
cmp
inc
add
mov
xorl
xor
mov
add
adc
test
dec
addb
push
lock
push
xor
ljmp
es
add
cmp
and
lds
lret
add
daa
subb
ret
clc
in
addb
clc
jmp
add
clc
test
mov
negb
sub
movsb
sub
and
cmp
inc
add
movsb
inc
pop
enter
adc
xchg
sub
loop,pt
xchg
stc
adc
lods
js
xor
addl
mov
add
inc
or
or
or
or
inc
sbb
ja
add
into
ja
das
ret
inc
das
ja
dec
cmp
or
and
jns
cmp
bound
add
sbbl
pop
inc
add
mov
mov
inc
stc
or
sbb
add
rclb
mov
inc
mov
lds
mov
scas
lds
or
add
lret
or
cmp
mov
cmp
cmp
xorl
sbb
or
sub
xor
inc
mov
jmp
and
sub
sahf
loopne
mov
dec
cmpl
orb
mov
clc
sbb
mov
mov
dec
addb
negl
dec
cltd
sub
pop
test
inc
insl
mov
add
test
xor
add
add
add
scas
fmuls
xor
movl
mov
dec
add
add
les
cmp
aam
bound
add
movb
and
rcrb
add
scas
rcll
xchg
pusha
and
add
and
shr
roll
loopne
loopne
inc
mov
inc
sub
xchg
subb
cmp
sub
pusha
and
add
lock
pop
mov
cld
fdivl
dec
jno
rcrl
push
rcll
adc
incl
mov
imul
sub
cmp
movsb
add
cs
cmp
add
cmp
adc
int
adc
push
addr16
jo
inc
mov
xlat
inc
mov
lcall
in
enter
addb
mov
adc
adc
int3
lret
add
push
rorb
dec
sub
cltd
add
incl
mov
scas
rorb
mov
pushf
pusha
or
and
add
mov
cmp
inc
add
cmp
mov
inc
add
add
add
lcall
cld
dec
into
inc
cmp
add
into
das
int3
add
mov
add
in
test
sub
daa
das
out
std
lcall
scas
or
mov
xchg
mov
int
sub
adcl
pusha
cmp
cltd
xor
inc
popa
mov
jnp
ja
add
ret
cmp
gs
add
xchg
jo
add
add
mov
lret
jae
xchg
sub
push
jge
cmp
adc
lret
jae
shll
add
or
fadds
mov
mov
scas
add
sahf
mov
pop
xor
mov
xchg
push
cmp
xor
dec
or
sub
mov
mov
xchg
dec
inc
pop
inc
sbb
mov
xchg
jo
dec
push
push
popa
add
inc
push
mov
scas
xlat
add
cmp
or
adc
rclb
dec
aam
pusha
add
push
inc
adc
adcl
cmpxchg
and
nop
test
xor
dec
orl
pop
xchg
xchg
xchg
xchg
xchg
dec
inc
and
push
push
cmp
xchg
add
push
add
inc
add
xchg
sbb
pop
pusha
pop
jo
in
dec
inc
cmpl
mov
mov
and
pop
jno
xor
xor
jo
xor
xor
icebp
and
sbb
add
push
mov
xchg
sub
push
mov
inc
add
icebp
push
xor
aam
mov
clc
lds
cld
std
pushf
shlb
push
outsl
and
shl
imul
mov
push
ret
js
sbb
xchg
xchg
dec
hlt
dec
sbb
dec
mov
out
sbb
inc
mov
add
lds
lret
inc
inc
enter
std
lret
inc
and
dec
add
pop
dec
addb
das
ret
inc
cld
loope
ret
mov
or
xor
pop
xchg
xor
push
adc
mov
testl
jo
int3
dec
xchg
cmp
add
cmp
or
sbb
adc
addb
mov
dec
rolb
dec
int3
dec
pushf
shr
add
rclb
push
orb
inc
pop
mov
jno
add
add
and
dec
dec
sbb
or
dec
mov
dec
add
or
or
aad
out
add
xor
fs
loopne
sub
and
add
mov
inc
adc
mov
jo
dec
add
xchg
dec
shl
sub
lock
dec
mov
xor
adc
imull
and
xchg
cmp
push
add
jo
rolb
dec
cld
xchg
push
dec
mov
add
dec
mov
xor
inc
adc
je
loop
fsubl
xor
add
lock
ss
mov
xchg
dec
cltd
int3
add
xchg
int3
dec
and
aam
add
incl
xchg
int3
mov
mov
mov
in
xchg
add
movl
mov
sbb
add
cltd
mov
inc
add
inc
sub
add
or
inc
and
ret
mov
add
das
rolb
add
mov
cmp
xchg
flds
sbb
cmp
dec
and
mov
cmp
mov
shlb
movb
scas
dec
mov
aam
int3
lret
inc
xchg
push
inc
xchg
test
sbbb
sbb
add
push
dec
adc
push
decl
xor
dec
clc
add
mov
out
mov
repz
and
cmp
and
adc
lock
repz
inc
push
add
xorb
mov
add
dec
mov
dec
xchg
shr
adc
aam
adc
or
mov
xchg
sub
xchg
mov
mov
sub
xor
addl
push
or
das
cltd
xchg
or
jecxz
ret
mov
out
cmp
xchg
mov
pushf
jo
lock
inc
add
movsb
stc
xchg
xor
mov
add
dec
mov
dec
inc
mov
lds
add
je
push
xchg
add
rcrb
int3
iret
xchg
sub
sub
add
decl
add
and
into
orl
add
push
and
dec
or
test
rcl
mov
testl
sar
fmul
inc
xor
dec
mov
negl
add
scas
int3
xchg
dec
and
xor
inc
inc
and
sub
push
add
nop
add
shl
cltd
sub
and
orb
cmp
ret
jno
rorb
pusha
adc
cmpl
add
lret
jae
shlb
ror
add
push
rolb
and
or
inc
and
in
jae
dec
mov
sbb
cmp
mov
inc
add
ds
xchg
mov
testl
dec
add
dec
mov
xchg
dec
mov
xchg
cmp
xchg
xchg
adc
loope
and
andl
mov
mov
dec
add
inc
mov
rcr
dec
adcl
push
and
adc
mov
dec
xchg
cmp
mov
dec
mov
add
inc
jb
lds
sub
xor
dec
mov
test
sbb
sbb
lret
inc
loopne
add
xchg
add
addb
lods
sub
push
push
inc
dec
sbb
cmp
and
dec
scas
adc
xchg
lods
or
or
cmp
xchg
sub
mov
sub
out
add
ret
lock
mov
movsb
xchg
or
sub
inc
pop
dec
fwait
enter
int3
das
cwtl
dec
ret
add
mov
loopne
loopne
xor
mov
test
add
mov
repnz
leave
inc
mov
mov
inc
pop
fnstcw
repz
or
add
rolb
xchg
xchg
sub
popa
addb
ret
vmovlpd
out
sbb
cmp
aas
enter
cmp
mov
or
pop
inc
lret
and
loopne
add
lcall
lret
popa
sub
lock
adc
jb
fsubrs
jb
call
add
sub
jb
lock
sub
jo
dec
mov
adc
repz
rolb
xchg
sub
or
add
cmp
sub
fnop
add
sarl
cmp
mov
sub
add
sub
add
aam
cmp
add
pop
xchg
dec
cmp
cmp
xor
mov
enter
sub
add
cmp
mov
sub
dec
sub
add
or
add
add
rolb
mov
hlt
sub
sbb
inc
cmp
lret
inc
inc
add
add
and
add
add
lret
jp
or
or
add
divl
xchg
xchg
xchg
xchg
cmp
icebp
mov
shll
rolb
call
add
inc
ljmp
xchg
xchg
cmp
inc
adcb
in
add
movl
add
fadd
jge
xchg
test
mov
sarl
push
notl
inc
mov
xchg
lret
push
push
mov
inc
add
inc
add
add
xor
inc
xchg
xchg
cmp
and
dec
xchg
add
or
sarl
cmp
dec
cwtl
add
clc
lcall
lret
inc
popa
lds
add
scas
fmull
loopne
add
dec
icebp
add
orb
add
add
cmp
xchg
xchg
cmp
scas
adc
add
mov
jno
inc
mov
cmp
fadds
in
add
jg
cmp
enter
mov
xor
add
fsubrl
js
cmp
inc
loopne
add
xchg
sub
test
add
adcb
dec
dec
loopne
add
inc
pop
add
inc
add
rolb
add
cmp
lea
aam
mov
mov
xorb
cmp
add
sbb
cmpsl
inc
pop
sbb
lcall
rolb
repz
dec
js
and
xor
xor
jge
xchg
test
std
mov
add
mov
dec
mov
aam
add
add
adc
or
push
inc
jle
ss
fisttps
roll
inc
dec
subb
sub
jg
cmp
add
shrb
add
aam
jb
add
dec
mov
mov
in
cmp
add
int3
xorb
lds
adc
xchg
lods
xlat
nop
add
in
add
orb
loopne
shl
les
inc
into
inc
mov
add
xadd
rcrb
cmp
aaa
inc
add
inc
add
add
adc
inc
pop
cmp
mov
call
and
sub
add
fwait
add
and
rorb
sub
add
add
xorb
pushf
sub
mov
push
inc
jb
je
and
in
xchg
das
fcmovb
or
xchg
sub
int
cmp
xchg
sub
jle
add
pop
add
in
xchg
inc
push
orb
loopne
sub
xchg
add
pop
das
push
xchg
dec
add
idivl
dec
mov
rol
sub
add
sar
add
cmp
add
call
xchg
cmp
dec
xorb
je
fwait
add
inc
and
sbb
add
pop
add
inc
sub
pushf
andb
add
mov
cmp
imul
das
int
addl
dec
xor
aaa
mov
dec
inc
or
add
add
rorl
xor
sub
addb
dec
inc
add
cmpsl
adc
jl
jo
inc
cmp
mov
sub
mov
inc
push
roll
and
xor
dec
sbb
add
cmp
pusha
sbb
dec
inc
pop
lahf
or
jl
add
mov
add
enter
xor
add
mov
scas
dec
mov
and
enter
popa
mov
je
cmp
fisubs
cmp
mov
test
pushf
sub
js
add
or
loopne
or
sbb
add
cmpsl
inc
mov
cltd
scas
lds
and
and
dec
adc
add
aam
shrb
inc
inc
mov
add
lock
testl
insb
andb
or
aam
add
enter
scas
lds
and
sbb
cmp
inc
sub
lret
jb
lret
sub
lds
push
pusha
add
pop
add
nop
loopne
add
push
inc
add
dec
add
mov
loopne
rolb
add
add
lcall
mov
decl
mov
mov
shlb
add
repnz
gs
clc
add
dec
or
cmp
add
inc
add
add
add
sub
pop
add
pusha
add
inc
cmp
dec
mov
out
add
push
fmull
fneni(8087
add
loope
incl
cmp
inc
and
add
dec
and
orb
stc
add
dec
fistpll
movl
cmc
mov
add
lds
loopne
add
mov
mov
inc
mov
add
arpl
add
mov
int3
lea
icebp
or
inc
popf
mov
and
xchg
lret
inc
add
into
lret
inc
xchg
add
add
movl
mov
cmp
inc
aas
mov
leave
shrb
or
rolb
cmp
xchg
mov
nop
mov
dec
ret
cmp
lds
mov
lret
inc
add
or
cmp
loopne
add
add
add
rcrb
and
pop
or
rcll
add
mov
inc
jge
cmpb
shl
sub
test
inc
movsb
add
mov
sub
add
mov
xchg
mov
mov
add
sub
add
add
clc
int3
mov
mov
mov
dec
subb
add
push
or
and
and
hlt
mov
std
mov
aam
mov
pop
cpuid
movl
incl
lret
inc
aam
and
dec
and
aam
or
dec
inc
xchg
int
sub
popa
or
lret
shlb
in
arpl
and
hlt
mov
jo
or
das
push
push
orl
mov
rolb
dec
add
cmp
cmp
mov
shrb
test
add
xor
sbb
aas
in
inc
repz
add
add
rolb
sub
add
adc
or
add
lret
inc
push
fildl
addl
mov
xor
lret
inc
cmp
or
mov
lret
inc
xor
lret
add
adc
sahf
lret
dec
jle
addb
and
sbb
and
add
mov
add
mov
mov
mov
mov
inc
insl
inc
add
shlb
mov
sub
add
inc
sub
sub
inc
sub
sub
add
scas
addb
sub
mov
add
in
mov
mov
mov
add
jecxz
lret
lea
addl
sub
lret
sub
sub
ret
addb
pop
or
inc
add
add
ror
xorb
enter
loope
adc
mov
dec
mov
movb
adc
insb
add
add
fcoms
ljmp
addb
mov
add
mov
mov
xorb
inc
roll
aad
enter
ds
sub
inc
movl
and
inc
aas
xchg
lret
inc
sub
addb
add
sub
into
adc
movsb
jno
icebp
jae
ljmp
rolb
iret
sub
adc
add
sub
aas
jmp
addb
add
sub
xor
pop
addl
add
test
inc
dec
addb
add
sub
inc
addb
add
clc
adc
lret
inc
into
rorb
inc
aas
xchg
inc
mov
adc
enter
add
add
cmp
inc
aas
xchg
lret
inc
inc
sub
das
mov
push
add
clc
lret
adc
and
xchg
lret
inc
mov
shrb
sub
ds
js
add
bound
mov
mov
inc
insl
pop
jo
mov
rolb
lock
in
icebp
dec
loopne
sub
sub
push
addb
lret
inc
lds
adc
out
lret
inc
adc
pmulhuw
movsl
inc
aas
inc
cmpsl
dec
rolb
sub
and
add
enter
mov
lret
dec
xchg
rolb
and
shrl
add
adc
notb
add
das
hlt
inc
aas
int
inc
rolb
rolb
inc
aas
jmp
inc
push
je
shlb
add
push
add
xor
cmpb
push
aaa
iret
sarl
inc
mov
dec
and
add
or
inc
sbb
pop
add
cmp
mov
inc
aas
mov
lret
inc
je
add
or
mov
add
add
roll
ret
add
pop
rolb
in
and
or
addl
jb
inc
add
test
add
inc
adc
sarl
inc
dec
add
add
adc
mov
rolb
lret
inc
clc
aam
pop
add
rolb
xor
fadd
add
mov
scas
int
push
pushf
inc
add
add
pop
fbld
push
sbb
mov
mov
sub
or
inc
outsb
roll
jno
add
test
inc
push
inc
add
inc
mov
mov
addb
mov
lret
inc
dec
repnz
adc
or
push
mov
add
movsb
add
mov
xchg
lock
in
inc
xchg
add
inc
out
addb
jmp
rclb
in
add
push
add
cmp
add
push
add
push
add
cmp
add
push
add
pusha
push
add
lea
adc
bound
inc
jle
add
cwtl
pop
mov
jne
add
lret
aam
stos
xchg
add
push
add
add
pop
lret
inc
inc
fwait
add
mov
xchg
add
jecxz
jecxz
add
jb
xor
sub
sbb
cmc
gs
add
lock
adc
imul
mov
aam
lret
jp
xor
push
sub
addb
xor
loopne
paddsw
loopne
mov
inc
sub
mov
xor
adc
loopne
mov
xchg
add
add
jnp
les
mov
add
rolb
inc
jb
dec
dec
mov
sbb
inc
leave
rolb
and
iret
lret
inc
popa
loopne
cmp
and
addb
add
lret
push
add
inc
les
mov
push
add
add
stos
jecxz
das
sbb
inc
cmp
cmp
mov
xor
add
sub
scas
add
add
mov
mov
mov
add
pop
dec
mov
inc
inc
ds
inc
shl
sbb
push
jno
adc
rolb
pop
js
lret
inc
loopne
cmp
aam
inc
xchg
sub
add
nop
lock
inc
div
add
push
add
mov
pop
lret
inc
into
rolb
add
sub
inc
mov
or
nop
sub
sub
mov
lds
xor
lret
inc
jb
cmp
dec
nop
add
in
dec
mov
lret
inc
bound
js
ds
add
ret
add
inc
mov
dec
fiadds
sub
and
inc
iret
add
add
add
in
scas
add
std
add
lret
inc
stos
add
iret
add
ret
lret
inc
cmpsb
sub
sbb
cmpsb
dec
add
mov
ret
add
adc
add
add
aas
in
lret
inc
je
or
loopne
mov
sub
mov
add
rolb
mov
inc
add
add
dec
mov
aam
push
xchg
add
cmp
add
inc
nop
mov
cmp
add
aam
out
add
add
adc
adc
cld
add
sbb
add
cwtl
aaa
ret
push
sub
cmp
add
dec
add
dec
pop
enter
mov
out
cmpb
dec
mov
in
add
inc
aas
add
mov
gs
clc
test
cmp
mov
xchg
dec
adc
sbb
faddl
push
sub
aas
into
mov
out
sbb
sbb
push
add
inc
cs
orl
xlat
mov
and
inc
inc
scas
andl
addb
dec
cmpsl
mov
add
sub
dec
xchg
int
add
xor
cmp
jp
add
hlt
pop
dec
or
adc
or
or
inc
or
add
add
dec
add
add
sbb
push
cmove
add
fmull
pop
fadd
sub
adc
inc
imul
cmp
cmp
pop
xchg
vxorps
leave
lret
dec
insb
inc
and
add
inc
inc
rolb
adc
lret
inc
mov
enter
inc
mov
add
add
inc
add
cmp
add
cmp
rolb
add
cmp
aas
sub
adc
cmp
mov
add
add
or
xorb
mov
rcrb
enter
inc
dec
adc
rcrb
rcll
mov
mov
cmp
mov
mov
lret
dec
fdivrs
cmp
inc
or
roll
or
push
inc
sbb
sub
add
insb
inc
sbb
ds
lret
inc
dec
inc
pop
add
inc
addb
inc
sbb
roll
inc
xor
lret
inc
or
pop
add
add
int
inc
mov
popa
pop
arpl
jmp
aad
or
ss
inc
ret
aaa
rolb
add
in
addb
add
mov
cmp
movb
inc
lret
xor
loop
int3
sub
sub
aas
mov
cmp
rorb
add
insb
int3
inc
mov
inc
cmp
test
js
inc
add
sub
add
add
inc
fimuls
loopne
lret
jb
add
sbb
add
and
add
aad
and
sub
orl
dec
addb
pusha
jle
add
aam
mov
inc
mov
addb
rol
dec
stc
push
shrb
shll
inc
loopne
insb
in
mov
insb
xchg
pusha
add
dec
mov
dec
or
sbb
inc
mov
cmpb
mov
pop
adc
icebp
sbbl
inc
sahf
loopne
mov
adcl
pslld
addb
fsubr
and
dec
mov
enter
pop
call
sar
mov
dec
add
ds
dec
cmp
dec
and
adc
pop
lret
inc
pop
and
inc
stc
push
xchg
inc
adc
mov
shrb
xchg
rcrb
shl
add
or
lcall
and
add
mov
lret
inc
jb
pusha
push
std
rol
loopne
shrl
add
minps
lret
dec
mov
or
add
subb
and
or
or
mov
lret
jb
pop
dec
inc
mov
mov
xor
xorb
ljmp
jnp
and
add
pop
mov
inc
aas
incl
subl
jmp
loope
sub
enter
push
rolb
or
jp
pusha
mov
or
aad
lea
and
or
inc
add
pop
add
or
pop
inc
cmp
shlb
int3
inc
lret
mov
adc
addb
sbb
pusha
cmp
mov
fwait
and
loopne
inc
cmp
sbb
enter
mov
popa
or
rorb
pop
fbld
or
mov
das
xorl
add
aad
adc
push
jmp
inc
pusha
add
or
aam
sub
add
inc
inc
or
loopne
and
add
add
xchg
add
loopne
shlb
xor
rolb
loope
nop
loopne
stos
mov
arpl
rolb
enter
rolb
dec
addb
mov
rorb
enter
and
lock
xchg
xchg
pusha
add
add
add
add
xor
sbb
xor
cmp
add
add
xor
add
add
lock
testb
call
adc
xchg
sbb
add
xrelease
xor
test
add
add
inc
xor
loopne
xchg
xchg
xor
mov
xor
cmp
add
std
xchg
xor
xchg
add
xor
push
xor
insl
xor
or
add
add
add
stc
add
add
test
xchg
xor
test
add
add
add
xchg
stos
xacquire
add
add
xor
sbbb
add
incl
or
add
xor
repz
xchg
add
add
mov
xlat
pusha
add
add
xor
inc
add
add
jb
add
add
pop
dec
int3
testb
hlt
int3
sbbb
add
dec
int3
mov
scas
aad
das
or
notl
icebp
add
lret
push
push
add
dec
xchg
push
push
add
rorb
dec
xchg
rolb
rolb
dec
add
xchg
xchg
xchg
xchg
idivl
addl
mov
int
add
cmp
cmp
mov
add
add
add
jl
or
scas
add
cwtl
push
loopne
xor
xor
enter
cmp
sub
push
cmp
add
shrl
cmp
inc
or
rclb
add
cmp
add
mov
dec
or
sub
rolb
sub
mov
xchg
sub
push
add
add
js
xchg
sub
addl
fwait
lcall
add
lock
ljmp
je
das
sbb
add
test
shll
inc
leave
popa
add
je
xchg
add
rcll
cmp
or
xor
mov
negl
xchg
adcl
push
nop
mov
dec
cmp
add
rolb
sub
dec
and
dec
xor
aas
mov
std
cltd
cmp
add
pushl
mov
xchg
cmp
cltd
icebp
or
icebp
or
dec
cmpl
addr16
mov
sub
dec
jo
xchg
sub
push
add
inc
cmp
or
add
lock
mov
int3
scas
lds
lock
pop
testb
add
sub
adc
xchg
inc
xchg
scas
lds
cmp
pop
mov
add
roll
or
rclb
movsb
add
pop
xchg
xchg
negl
dec
cmp
dec
mov
ds
lret
inc
in
add
add
mov
fdivs
cmp
sub
test
inc
or
fs
nop
ds
mov
dec
inc
mov
inc
adc
gs
sbb
inc
inc
xor
dec
inc
sarb
sub
or
xor
xchg
cmp
les
cmp
xorb
pop
mov
dec
dec
loope
inc
xchg
dec
sbb
add
inc
dec
mov
sub
mov
pop
addl
jo
sbb
xorl
cmp
dec
sbbl
orb
cmpl
xor
mov
cmp
nop
pop
sub
pusha
pop
xor
in
rol
push
pop
cmp
inc
inc
or
mov
adc
cld
cltd
cmp
cmp
xor
add
mov
inc
add
xchg
inc
inc
add
xchg
sub
pop
pusha
add
mov
and
das
ljmp
fs
xchg
cmp
sbbb
in
pop
cmpl
rclb
idivl
add
cmp
xchg
sub
daa
cmp
lcall
sub
mov
cmp
loopne
sbb
jo
pop
sbbb
add
cmp
loop
and
sub
cmp
in
sub
adc
jno
xchg
xchg
scas
adc
dec
jns
adc
push
dec
add
cmp
add
mov
dec
mov
mov
mov
sub
xorb
add
xchg
dec
add
and
dec
inc
icebp
add
mov
pop
xchg
scas
movb
add
shll
test
orb
int3
xchg
sub
xor
push
xor
sub
cmpb
or
lds
add
sub
sbb
adc
icebp
and
add
cmp
jae
and
popa
xor
mov
out
orl
push
cmpsb
inc
mov
inc
leave
xor
xchg
aam
add
xchg
jo
das
sti
insb
int3
mov
and
dec
cmp
jb
insb
nop
mov
lods
je
cwtl
sub
push
push
mov
add
shlb
adc
xchg
scas
xchg
xchg
add
add
test
or
mov
rolb
scas
sarb
shr
push
shlb
add
adc
and
cltd
int3
add
scas
dec
cmpb
mov
sub
pusha
ret
sub
ja
add
lahf
fdiv
add
add
lret
push
add
cmpl
mov
add
sub
add
ret
rolb
leave
dec
jns
adc
sub
in
nop
inc
loop
jns
mov
rolb
mov
and
jnp
xchg
shll
and
cmp
add
dec
ret
jp
add
add
xlat
scas
aam
sub
push
popa
pop
add
dec
ret
dec
inc
mov
xchg
xchg
lods
cmp
lahf
sub
mov
mov
jo
sti
xchg
xchg
dec
sbb
inc
adc
dec
add
add
rolb
pushf
add
add
push
inc
sub
inc
mov
push
sub
mov
add
cmp
xor
jo
sub
adc
scas
add
xchg
dec
cltd
xor
rol
popa
cs
mov
rclb
cltd
and
pop
lret
mov
pop
inc
pop
add
scas
aam
and
repz
pop
add
add
aas
mov
dec
and
nop
ss
pop
and
cmp
xor
stc
scas
add
cmp
sub
ljmp
push
xor
dec
sub
das
fsubl
das
fistpl
test
inc
adc
add
filds
add
add
dec
mov
sub
inc
add
push
add
cmp
xchg
sub
adc
dec
xchg
rorb
add
sub
jo
ret
add
and
add
aam
add
push
add
dec
adc
cmp
dec
fadds
mov
lret
inc
jle
add
add
dec
jo
xchg
sub
incl
pop
mov
lret
jae
inc
cmp
inc
cmp
inc
add
incl
mov
dec
and
ds
dec
add
mov
mov
mov
std
into
mov
dec
add
dec
mov
dec
enter
add
add
xor
add
dec
pop
cmp
inc
add
mov
inc
cmp
sub
sub
push
cmp
add
xor
cmp
add
add
testl
dec
rolb
add
sub
push
cmp
add
cmpl
inc
add
cmp
mov
nop
add
sub
add
xor
add
cmp
mov
push
add
add
dec
and
add
adc
lret
inc
pusha
add
dec
lock
inc
mov
pop
add
or
adc
dec
xchg
and
dec
add
push
cmp
dec
add
lret
inc
dec
or
push
cltd
and
xchg
fwait
idivl
mov
je
test
dec
add
cmp
cmp
hlt
add
mov
xchg
cmp
cmp
sbb
aad
add
and
addl
fnsave
xchg
sub
sarb
jo
push
inc
add
lret
dec
cmpl
pop
and
adc
or
sub
sub
aas
pop
cmp
mov
add
subl
cmpl
lret
inc
std
add
ret
add
or
xchg
cmpb
sbb
xor
add
add
and
add
lods
pop
and
sub
addl
and
faddl
mov
test
inc
loope
jnp
add
or
add
andl
inc
adc
inc
andb
dec
aaa
sub
add
outsb
cmp
push
idivl
inc
addb
sub
cmp
cmp
loopne
aam
lret
jae
mov
incl
xchg
inc
mov
lods
add
sub
dec
add
add
or
adcl
loopne
aam
sub
orb
mov
loopne
sub
pop
cmp
dec
or
xchg
shlb
or
cmp
cmp
lret
test
xchg
orb
xchg
sub
shlb
mov
add
add
loopne
rolb
add
mov
fadds
add
fmuls
loopne
dec
mov
and
jg
xchg
rolb
pop
mov
sub
insl
cmp
xchg
sub
add
sbb
dec
mov
dec
or
sub
jnp
daa
sbb
pop
lret
add
into
rclb
mov
cmp
or
or
addb
push
clc
cmp
testl
cltd
xchg
sub
xchg
xchg
inc
sub
rclb
rol
mov
and
enter
addb
xchg
add
fdivl
add
cmpl
addb
add
sbb
xor
mov
add
sub
add
scas
add
addb
mov
out
rol
xadd
add
add
shll
add
aam
int
mov
imull
add
add
test
cmp
in
mov
cmp
mov
cmp
int3
cmp
aam
adc
in
sbbl
add
add
cmp
cmp
mov
cmp
mov
rolb
adc
inc
pop
aam
adc
dec
sbb
xor
lret
inc
adc
inc
dec
inc
or
rolb
mov
pop
or
sub
add
inc
add
inc
push
jb
add
lret
inc
bound
push
addb
inc
push
and
dec
ljmp
mov
dec
xor
es
cmp
out
icebp
mov
or
add
pop
and
in
add
adc
cmp
pop
subl
inc
inc
loopne
rolb
rcr
adc
ret
divl
or
add
das
cmp
dec
jo
add
pop
movb
mov
lods
add
add
popa
adc
mov
enter
dec
movsb
cmp
shll
and
cltd
cmp
add
rorb
xchg
mov
imul
add
add
enter
sub
or
inc
add
mov
inc
cli
add
cmpl
insb
subb
adc
xor
inc
addb
mov
add
rorb
insb
clc
push
test
inc
add
sub
adc
cmp
das
testb
dec
ret
inc
leave
addb
inc
or
aam
adc
add
mov
inc
mov
add
push
add
xchg
scas
loop
pushf
jge
jl
add
add
dec
mov
scas
shrb
add
pusha
imul
roll
loope
cmp
adc
sub
add
push
adc
addb
sbbb
adc
orl
add
dec
repz
or
in
add
push
adc
cmp
add
inc
pop
mov
loopne
xor
dec
cmpl
cmp
and
dec
dec
add
push
cmp
aad
xor
mov
add
mov
sbb
mov
or
lock
or
inc
or
lods
lods
inc
add
mov
adc
xor
dec
subl
and
lret
inc
out
add
and
add
inc
out
add
xorb
cmpl
mov
dec
mov
rcll
inc
pop
popa
mov
mov
adc
mov
or
inc
sub
add
push
cmp
or
pop
xchg
cmp
push
mov
sub
std
mov
dec
mov
sbb
in
iret
addb
pushl
das
shrl
aam
aaa
xchg
dec
sbbl
or
divl
xchg
dec
sub
pusha
add
or
add
adcl
shll
mov
std
add
mov
std
add
aam
inc
and
xchg
sub
add
add
jl
add
add
in
add
rorl
and
dec
mov
dec
mov
adc
cmpl
adc
xchg
sub
add
xorl
adc
das
lret
cld
xchg
xchg
testl
shlb
cltd
orb
pop
push
rclb
add
pop
int3
dec
mov
aam
or
add
loopne
and
xor
xor
and
mov
add
inc
add
mov
and
dec
test
loopne
dec
pusha
add
and
mov
sub
mov
les
jg
cmp
sbb
inc
dec
mov
dec
leave
mov
sub
xchg
pop
cmp
pop
pusha
adc
or
add
and
imul
lock
roll
xchg
or
enter
das
test
dec
sbbb
aam
add
enter
pop
adc
iret
or
dec
or
or
adc
and
xor
adc
add
incl
lds
lcall
leave
movb
loope
icebp
add
xchg
push
xor
shl
addb
add
mov
test
mov
add
add
add
add
dec
test
and
add
jecxz
inc
and
jo
movsb
push
pusha
xor
add
xor
pop
xor
dec
xor
inc
xor
test
add
xor
cld
xor
lock
adcb
lods
xor
std
fiadds
push
add
jo
fdivs
add
xor
shrb
add
xor
icebp
add
jo
mov
add
add
jo
cmp
add
xor
rcrb
icebp
add
jo
mov
and
add
aad
add
add
xor
and
add
add
lock
js
add
add
add
xor
icebp
add
lock
add
pop
xor
pop
xor
push
in
xor
pusha
xor
icebp
add
lock
mov
add
add
add
enter
int3
xor
icebp
push
std
or
add
or
stos
push
add
xor
call
xor
loopne
add
xor
fdivs
add
xor
aam
add
xor
sbb
xor
shlb
mov
cmp
add
xor
xor
add
add
push
xor
lret
adc
push
add
xor
jnp
add
sub
add
push
add
pusha
mov
or
add
add
add
jo
xor
je
add
add
pusha
push
xor
xor
pop
xor
pop
xor
push
push
xor
push
xor
dec
xor
dec
xor
inc
push
xor
inc
xor
mov
add
lods
xor
and
add
add
add
test
add
xor
lock
hlt
xor
push
xor
in
xor
mov
add
add
push
xor
in
add
xor
fdivl
add
push
xor
aam
add
xor
pop
mov
shlb
add
add
lret
xor
xor
add
add
xor
mov
add
add
xor
sbb
add
stos
xor
icebp
add
add
xor
add
add
xor
jo
add
stos
push
add
add
pop
pop
xor
pop
xor
std
add
xor
or
pop
mov
adc
add
or
jo
inc
xor
pop
mov
stos
xorl
mov
push
jo
stos
xorb
xor
lods
jo
lock
stos
in
add
xor
fdivl
add
xor
pop
out
jo
jecxz
add
add
sbb
inc
xor
xchg
faddl
add
add
push
fldl
add
cmc
push
lock
mov
sub
add
add
add
xor
sbb
xor
aam
add
xor
add
add
add
jo
xor
mov
add
roll
inc
add
rolb
add
pop
stos
xor
xor
sahf
lock
mov
dec
xor
stos
dec
xor
inc
xor
inc
xor
mov
sub
lock
xor
cmp
add
add
push
cwtl
jo
cmc
add
xor
bound
xorb
pop
jo
call
add
add
xor
fdivl
add
xor
stos
aam
add
xor
int3
xor
shlb
rolb
add
enter
add
xor
sub
add
add
xor
in
lock
xor
jne
cli
push
xor
xor
divb
add
add
jo
add
add
add
pusha
xor
std
add
xor
xor
add
js
adc
jo
pop
jo
es
stos
sbb
add
xor
adc
add
xor
stos
movsb
mov
cwtl
xor
pushf
xor
nop
xor
stos
xchg
xor
mov
add
stos
test
add
xor
cld
xor
lock
stos
hlt
xor
call
add
xor
stos
in
add
xor
fdivl
add
xor
stos
aam
add
xor
int3
xor
shlb
mov
xor
cmp
lock
add
xor
stos
xor
add
xor
sub
add
xor
stos
and
add
xor
sbb
add
xor
stos
adc
add
xor
or
add
xor
stos
add
add
add
jo
add
xor
insb
xor
pusha
xor
push
xor
dec
lock
mov
jno
push
push
lock
add
push
xor
inc
push
xor
mov
sbb
xor
mov
mov
test
add
je
xor
push
or
add
xor
push
mov
pop
xor
icebp
add
add
stos
xor
cmc
add
mov
mov
add
xor
stos
fdivs
add
xor
shlb
add
xor
stos
enter
xor
shlb
add
add
add
xor
xor
add
xor
sub
add
xor
stc
add
push
lock
add
mov
imulb
add
add
add
add
lock
add
addr16
jo
fs
xor
pop
xor
pop
xor
push
xor
push
push
xor
dec
xor
dec
xor
inc
xor
inc
sub
add
add
mov
mov
add
add
add
stos
mov
xor
sbb
add
mov
or
add
sbb
cmp
add
add
add
cld
add
lock
in
add
fadds
push
faddl
push
rolb
push
aam
add
enter
iret
add
rolb
cmp
add
cmp
add
xor
push
xor
push
sub
add
add
add
add
sbb
add
adc
add
add
add
lods
push
add
les
pop
add
add
add
add
add
push
add
pusha
add
cmp
daa
pop
add
pop
push
add
push
add
push
add
dec
add
dec
push
add
inc
add
inc
add
mov
add
mov
add
lods
push
addb
sbbb
add
add
mov
add
add
addb
push
addb
addb
sbbb
addb
push
addb
addb
orb
addb
push
addb
addb
addb
addb
push
addb
add
addb
addb
int3
add
sub
add
add
add
push
addb
addb
addb
addb
push
addb
orb
add
adc
add
orb
push
addb
addb
addb
orb
push
addb
addb
addb
addb
push
addb
cmpb
add
addb
addb
addb
addb
push
rolb
rolb
rolb
rolb
push
rolb
rorb
rolb
rolb
push
rolb
rolb
rolb
rolb
push
rolb
rolb
rolb
rolb
push
rolb
rolb
rolb
rolb
push
rolb
rolb
rolb
rolb
push
rolb
rolb
rolb
rolb
push
rolb
rolb
rolb
rolb
push
rolb
rolb
rolb
rolb
push
rolb
rolb
rolb
rolb
push
rolb
rolb
rolb
rolb
push
rolb
rolb
rolb
rolb
push
rolb
rolb
rolb
rolb
push
rolb
rolb
rolb
rcrb
add
rolb
rolb
rolb
push
rolb
rolb
rolb
rolb
push
rolb
rolb
rolb
rolb
push
rolb
rolb
rolb
rolb
push
rolb
rolb
rolb
rolb
push
rolb
rolb
rolb
rolb
push
rolb
rolb
rolb
rolb
push
rolb
rolb
rolb
rolb
push
rolb
rolb
rolb
rolb
push
rolb
rolb
rolb
rolb
push
rolb
rolb
rolb
rolb
push
rolb
rolb
rolb
rolb
push
rolb
rolb
rolb
rolb
push
rolb
rolb
rolb
rolb
push
rolb
rolb
rolb
rolb
push
rolb
rolb
rolb
shlb
rolb
rolb
rolb
rolb
push
rolb
rolb
rolb
rolb
push
pusha
add
pusha
add
pusha
add
pusha
add
push
pusha
add
pusha
add
pusha
add
add
pusha
add
add
add
add
pusha
add
add
add
add
pusha
add
add
add
add
pusha
add
add
add
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
push
pusha
add
pusha
add
pusha
add
pusha
add
push
pusha
add
pusha
add
pusha
add
pusha
add
adc
add
pusha
add
ret
add
pusha
add
pusha
add
pusha
add
push
pusha
add
pusha
add
pusha
add
pusha
add
push
pusha
add
pusha
add
pusha
add
pusha
add
push
pusha
add
pusha
add
pusha
add
pusha
add
push
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
add
add
add
mov
add
pusha
add
add
push
pusha
add
add
pusha
add
add
pusha
add
pusha
add
pusha
add
pusha
add
push
pusha
add
add
pusha
add
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
push
pusha
add
pusha
add
pusha
add
pusha
add
push
pusha
add
pusha
add
pusha
add
pusha
add
push
pusha
add
pusha
add
pusha
add
pusha
add
inc
pusha
add
ret
ds
add
push
pusha
add
pusha
add
pusha
add
pusha
add
push
pusha
add
pusha
add
pusha
add
pusha
add
add
add
add
inc
push
pusha
add
add
loopne
jp
add
pusha
add
add
add
add
pusha
add
add
add
add
pusha
add
add
add
add
pusha
add
add
add
pusha
add
add
pusha
add
add
pusha
add
add
loopne
ret
add
add
movl
add
pusha
add
pusha
add
pusha
add
push
pusha
add
pusha
add
pusha
add
pusha
add
push
pusha
add
pusha
add
pusha
add
pusha
add
push
pusha
add
pusha
add
pusha
add
pusha
add
push
loopne
ds
add
pusha
add
pusha
add
push
pusha
add
pusha
add
pusha
add
pusha
add
push
pusha
add
pusha
add
pusha
add
pusha
add
push
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
add
add
add
pusha
add
add
add
add
pusha
add
add
add
add
pusha
add
add
add
add
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
add
push
pusha
add
pusha
add
pusha
add
pusha
add
push
pusha
add
pusha
add
pusha
add
pusha
add
push
pusha
add
pusha
add
pusha
add
pusha
add
push
pusha
add
pusha
add
pusha
add
pusha
add
push
loopne
ds
add
pusha
add
pusha
add
push
pusha
add
pusha
add
pusha
add
pusha
add
push
pusha
add
xor
adc
add
xor
or
add
xor
add
add
xor
jp
xor
jle
add
add
add
xor
outsb
xor
bound
add
add
xor
pop
xor
push
xor
push
xor
dec
push
xor
dec
xor
inc
xor
inc
xor
mov
xor
mov
add
xor
scas
xor
mov
add
xor
xchg
xor
xchg
xor
mov
add
add
xor
xor
repnz
divb
add
push
xor
out
xor
loop
add
xor
ficoml
add
xor
shlb
add
xor
lret
add
xor
ret
xor
cmp
and
xor
xor
add
xor
sub
add
xor
and
add
xor
sbb
add
xor
adc
add
xor
in
lds
add
xor
fnsave
add
push
xor
xor
repnz
stc
xor
roll
cmp
add
cmp
xor
xor
sub
add
xor
and
add
xor
push
xor
or
add
xor
add
add
xor
jno
add
add
add
xor
popa
xor
lcall
out
and
in
add
add
mov
rolb
xor
add
out
jb
dec
rolb
movl
adc
inc
cmp
mov
inc
add
addl
inc
mov
add
mov
test
rolb
roll
push
add
xor
cmp
add
lds
add
addb
dec
xchg
lret
add
lds
add
add
sub
push
les
and
cld
add
rolb
addb
mov
roll
mov
movb
dec
adc
shll
add
add
shlb
movb
cmpsb
cmp
cmp
dec
nop
pop
and
and
cmp
inc
mov
ret
loopne
pop
pusha
sub
movb
push
add
add
int3
sub
adc
push
add
inc
add
out
add
push
mov
popa
add
inc
add
mov
movsb
add
inc
xchg
add
adc
and
adc
inc
add
or
sbb
mov
cmp
out
and
arpl
mov
adc
add
pop
lds
add
mov
adc
or
test
cmp
rolb
cs
add
nop
add
mov
xor
mov
and
ret
jmp
add
pop
sub
push
popa
add
insb
add
aam
je
xor
ret
roll
ret
adc
mov
pop
inc
mov
add
adc
push
and
push
add
sbb
add
ret
push
mov
jae
ret
adcl
inc
aam
aam
mov
fcomps
ret
sub
stc
add
das
add
roll
inc
mov
inc
mov
or
mov
arpl
fbld
add
mov
or
les
pop
add
jl
pop
test
insb
sub
rolb
rclb
and
insb
sub
repz
xor
jp
cmp
cmp
loope
loope
iret
jmp
sub
adc
adc
pusha
mov
adc
inc
jno
push
inc
add
or
ret
jb
test
add
nop
adc
pop
pop
add
sbb
add
ret
fisttpll
ret
cmp
sbb
aas
sbb
sub
lock
xor
add
push
add
or
jnp
add
movl
xor
push
lret
lret
dec
xchg
add
inc
add
or
cmc
add
add
lret
dec
inc
inc
icebp
add
add
mov
repz
push
add
mov
push
add
adc
rclb
sub
aam
rol
jo
shlb
push
push
ret
mov
sub
hlt
add
mov
adc
fcoml
rolb
add
roll
sub
push
add
or
sbb
push
or
ret
and
lds
movl
add
add
icebp
les
add
or
xchg
ss
jo
fs
jno
push
mov
ret
in
loopne
dec
mov
flds
jge
add
push
test
add
and
mov
mov
add
mov
add
mov
sub
lea
push
stc
mov
shlb
out
mov
add
sub
add
mov
and
ret
and
popa
add
xor
push
ljmp
mov
mov
add
rol
mov
sub
adc
cmp
pop
add
sub
cmp
into
mov
jp
mov
add
rolb
pop
add
pop
add
roll
dec
add
ret
and
mov
add
or
faddp
and
movl
rcrb
add
xchg
add
add
mov
adc
inc
lret
inc
mov
sub
add
mov
flds
aam
rolb
nop
mov
sub
add
enter
rolb
add
add
mov
lcall
sbb
sub
mov
test
les
add
push
sub
addl
adc
sbbb
push
add
lret
inc
lea
add
sub
push
or
mov
or
or
popf
add
movl
xchg
andl
adc
add
add
add
enter
sub
add
ret
mov
xor
cmp
ret
xor
add
movb
loop
pop
add
sub
orb
jnp
mov
sub
orl
bound
add
add
test
add
add
addl
and
add
cmp
lret
add
fwait
ret
or
lret
jb
dec
rolb
movl
adc
inc
or
inc
or
add
or
inc
or
mov
adc
dec
add
ret
dec
adc
ret
movb
add
pusha
add
lret
add
ret
add
addl
rolb
adc
cwtl
pop
orb
add
push
mov
adcb
clc
andb
clc
bound
ljmp
mov
loop
push
mov
fiaddl
sar
test
sbb
test
sbb
xchg
mov
xchg
dec
inc
dec
mov
rolb
test
es
or
inc
jp
xor
enter
add
sbbb
lds
jnp
add
andl
pop
pusha
sub
xor
cmp
cmp
adc
mov
cmpsl
sub
popa
pop
stc
add
or
add
add
lret
inc
ds
mov
addb
mov
sub
add
inc
ds
inc
cmp
xchg
loop
cmp
add
aad
add
inc
add
inc
add
inc
add
inc
adc
pop
adc
sub
inc
add
ret
mov
push
pop
adc
adc
inc
adc
mov
movsb
sub
add
and
inc
add
pop
fldt
addb
push
shlb
int3
add
das
test
or
jecxz
lock
roll
int3
cmpb
filds
sub
inc
add
int3
nop
mov
add
fisttps
or
sub
ret
movnti
mov
or
leave
mov
cmp
sub
aaa
push
sbb
sub
into
and
roll
sub
mov
dec
daa
enter
mov
add
daa
dec
inc
add
aas
or
addb
mov
mov
imul
and
mov
ret
ret
fisttps
aad
bound
cmp
aas
fs
and
add
push
loopne
inc
add
lret
adcl
adc
add
add
arpl
sub
adc
add
ss
sub
or
sbb
add
xor
pushf
jl
add
movb
xlat
add
mov
pop
add
dec
pusha
add
add
call
movb
add
mov
add
add
add
sbb
or
mov
add
jo
add
in
adc
mov
add
insb
mov
pusha
add
loopne
cmp
inc
push
push
movb
jo
mov
inc
add
add
rolb
add
push
js
dec
xor
les
adc
xor
jo
add
mov
sbb
pop
xor
inc
adc
push
add
xor
loop
add
xor
mov
add
add
add
add
add
dec
movb
push
xor
xor
xchg
xor
lods
xor
mov
xor
pop
xor
jbe
add
push
xor
adc
add
xor
cmp
add
push
xor
xor
movsb
xor
mov
xor
pop
xor
push
add
xor
or
add
add
or
xor
out
xor
fdivl
add
xor
push
lock
add
add
add
xor
xor
push
xor
adc
add
xor
xor
cmp
add
mov
shlb
add
xor
call
xor
mov
add
add
mov
xor
divb
add
add
push
xor
stos
data16
je
add
add
add
sbb
add
xor
cmp
add
inc
stos
xor
xor
ljmp
xor
sub
add
add
mov
jo
push
xor
or
add
ds
add
inc
test
add
xor
test
add
xor
inc
xor
push
xor
insb
xor
stos
jle
add
xor
sbb
add
xor
stos
cmp
add
jo
in
add
xor
stos
add
jbe
add
add
add
xor
xchg
xor
clc
xor
stos
out
xor
xor
and
push
push
xor
stos
jle
add
add
add
add
xor
mov
add
xor
stos
out
xor
shlb
add
xor
jo,pt
sub
xor
sbb
or
jo
cmp
xor
or
add
add
xor
inc
xor
mov
add
xor
xor
out
xor
or
xor
add
add
mov
xor
jl
add
pop
xor
stos
dec
xor
test
inc
jo
mov
add
xor
mov
add
xor
stos
out
add
xor
xor
add
xor
stos
push
xor
or
add
add
add
xor
mov
add
xor
xor
xor
push
add
xor
icebp
add
add
add
add
cmp
push
inc
xor
icebp
add
add
xor
call
add
inc
xor
cmp
movb
xor
or
xor
jo
add
add
add
xor
cwtl
xor
mov
add
aad
add
xor
into
xor
shlb
add
pushw
lock
cmp
inc
xor
sbb
add
xor
add
add
add
xor
push
xor
inc
xor
mov
add
add
xor
out
xor
shlb
add
xor
sub
pop
xor
sbb
xor
add
add
add
add
xor
inc
xor
ljmp
add
add
add
add
add
xor
push
xor
push
xor
add
add
outsb
push
xor
push
xor
inc
xor
test
add
xor
test
add
xor
fiadds
add
inc
movb
push
xor
or
add
bound
add
xor
cwtl
mov
in
add
push
xor
test
add
in
push
xor
shlb
add
lock
xor
fmuls
add
add
inc
movb
xor
sbb
add
xor
jp
add
xor
push
xor
inc
xor
stos
mov
add
add
xor
loop
add
xor
ret
stos
xor
and
add
pop
sbb
add
xor
stos
lock
push
xor
jbe
add
push
xor
stos
mov
add
add
sbb
xor
xchg
push
xor
xor
out
add
xor
cmp
jo
and
add
xor
jl
add
xor
dec
xor
mov
add
xor
xor
xor
inc
xor
or
add
xor
data16
dec
xor
mov
mov
mov
shll
lds
add
pusha
inc
mov
inc
mov
push
dec
xor
pop
xor
shlb
push
xor
and
sub
mov
mov
add
das
xor
mov
pop
inc
and
xchg
lods
xor
stos
jo
xor
lret
cmp
or
xor
sub
add
xor
jb
mov
stos
in
add
xor
xorb
sub
sub
cmp
lds
mov
mov
xchg
movsl
lods
mov
stos
add
test
mov
cmpsb
scas
mov
movb
mov
mov
add
mov
xchg
mov
adc
xchg
add
sar
mov
lock
add
test
add
mov
add
addl
test
mov
setbe
xchg
mov
add
mov
loope
add
add
nop
and
cmpl
stos
stos
test
adc
mov
add
xchg
add
mov
mov
lds
lods
test
cwtl
stos
mov
xchg
or
add
inc
icebp
pop
adc
add
rorb
shufps
test
cmpsl
add
mov
add
pop
add
rcll
xchg
add
or
andb
mov
rorl
dec
add
add
pop
movsl
mov
dec
xor
roll
xchg
add
push
xchg
sub
clc
jns
test
fs
pop
or
or
or
vmovhps
lea
test
stos
xchg
mov
mov
mov
movsl
mov
add
xchg
add
add
rclb
add
lods
mov
add
cmpsl
mov
add
add
andl
scas
xchg
add
mov
xchg
mov
mov
xorl
add
xchg
nop
nop
lods
add
add
xchg
add
stos
mov
lods
test
add
xchg
inc
lds
add
xchg
mov
pop
movb
add
dec
push
mov
mov
cmpsl
add
mov
cmpsl
mov
pop
add
faddl
adc
test
mov
mov
lea
movsl
test
mov
add
cmpsl
movsl
test
add
add
mov
push
add
add
mov
mov
cmpsb
mov
mov
sub
subl
rclb
movsl
test
mov
mov
addl
xchg
mov
dec
mov
insb
add
cmpb
adc
inc
test
add
or
rcll
sbb
lods
stos
mov
mov
orl
sahf
addl
jno
fadds
cmpb
adc
addl
sbb
nop
lods
test
xchg
inc
test
mov
jbe
mov
xchg
add
ljmp
mov
add
rclb
xor
ret
xor
mov
adc
adc
inc
andb
movsl
add
dec
push
jns
xchg
mov
test
inc
or
shll
sahf
stos
stos
mov
stos
mov
movsl
mov
outsb
or
mov
push
pop
or
add
mov
xchg
dec
add
lds
sbb
mov
add
pop
shll
add
stos
rcrb
adcb
adc
subl
scas
xchg
movsl
shlb
xchg
insb
inc
pop
test
rclb
mov
add
rolb
add
movb
dec
add
jp
seto
stos
stos
test
mov
notb
lods
stos
sub
loope
inc
int3
mov
ret
cmp
add
add
inc
add
xor
movb
test
stos
cmpsl
scas
inc
flds
stos
rol
add
pop
mov
inc
aas
push
mov
ffree
cmpl
test
mov
int
roll
ja
imul
push
imul
in
add
jmp
popa
adc
or
adc
mov
mov
lods
cmpsl
orb
or
test
test
mov
lods
mov
shr
stos
test
sbb
adc
add
nop
fs
inc
test
add
bound
adc
pop
mov
mov
adc
add
loope
xchg
stos
test
test
rcrb
bound
add
adc
xchg
nop
xchg
add
test
test
mov
loopne
and
add
mov
stos
add
mov
add
movsb
mov
mov
popa
and
pop
mov
mov
movsl
shrb
stos
mov
and
sub
test
movsb
sbb
jo
mov
nop
adcb
push
jecxz
and
pop
daa
add
and
xorb
lea
xchg
sbb
and
sbb
mov
inc
mov
add
rclb
mov
add
inc
loope
add
xchg
pusha
push
push
mov
movb
or
xchg
mov
ljmp
mov
mov
and
mov
mov
add
add
inc
popf
lods
stos
mov
or
lahf
popa
add
and
and
xor
add
stos
mov
mov
add
mov
mov
mov
sub
mov
add
mov
mov
mov
mov
or
add
or
adc
mov
test
add
jmp
and
mov
cmpsb
push
mov
stos
bound
loope
sub
add
adc
mov
mov
ret
add
pop
and
xchg
movsl
add
add
movb
fidivl
or
xchg
dec
pop
mov
sub
test
fmuls
inc
mul
add
pop
add
add
add
add
lods
mov
mov
popa
or
adc
push
lock
mov
rcrl
xchg
add
add
fisubl
test
add
sbb
pop
test
mov
xor
pop
jno
mov
orb
je
push
and
add
test
add
xchg
mov
mov
lods
add
stos
mov
jbe
sbb
xor
cmpsl
pop
xor
or
and
jno
addb
xchg
stos
movsl
mov
add
mov
add
mov
or
cmp
add
nop
mov
stos
mov
test
xor
adc
add
xor
xchg
mov
mov
push
push
lret
xchg
movsl
adc
add
out
shll
stos
adc
or
push
rorl
mov
test
push
jecxz
add
or
add
ss
or
adc
mov
sbb
mov
add
add
sub
jecxz
adc
xor
sub
rorb
loopne
jo
and
add
add
add
add
dec
mov
xchg
cltd
mov
cld
adc
nop
stos
mov
test
or
sti
inc
jp
add
add
dec
mov
shll
jl
xchg
add
or
notb
mov
jbe
push
xchg
add
push
add
lods
iret
icebp
add
pop
pusha
inc
mov
push
sbb
add
jno
mov
or
mov
ja
aaa
movb
stos
xchg
stos
lods
cmpsl
stos
mov
mov
pusha
xor
inc
subb
lods
mov
movsl
mov
addl
fadd
mov
mov
mov
xor
sarl
or
xlat
push
nop
add
adcb
xor
add
jno
mov
outsb
lds
mov
xchg
add
std
aaa
jb
ret
or
add
add
xchg
xor
icebp
add
jecxz
mov
add
cmp
sbb
xchg
add
xor
cmpsl
scas
xchg
stos
cwtl
mov
mov
add
mov
mov
shrb
adc
test
mov
cmpsb
xchg
add
insb
sbb
cmc
add
add
cmpsl
imulb
jae
mov
out
xlat
adc
decb
movb
add
add
adc
jns
lea
and
repnz
jb
andl
bound
add
xor
cmpl
inc
mov
add
add
dec
icebp
add
add
stos
scas
mov
mov
pop
adc
mov
cmpsb
mov
cmpsl
mov
mov
inc
bound
jb
jg
fsubrs
loope
mov
add
add
mov
leave
xorb
add
and
mov
or
adc
mov
les
xor
mov
and
jne
add
adc
test
add
mov
test
ja
xchg
add
jae
inc
jns
test
push
add
test
inc
adc
into
ja
add
out
push
add
add
shlb
add
add
pushf
add
add
add
pop
xor
sbbl
sbb
and
lods
mov
mov
lods
add
mov
pushf
jb
jnp
arpl
mov
icebp
je
test
push
lock
push
stos
scas
mov
shlb
mov
in
mov
xchg
add
add
mov
jb
movb
add
test
sbb
mov
lods
mov
push
mov
mov
add
repnz
inc
mov
repnz
iret
push
daa
loop
rclb
sub
lds
rolb
sahf
stos
roll
mov
and
loope
add
sahf
adc
mov
xchg
lods
sbb
roll
adcb
xchg
div
ljmp
add
mov
add
add
add
mov
add
mov
cmpsl
or
xchg
add
lea
add
mov
add
test
stos
mov
or
pop
xchg
movsb
lahf
add
mov
lods
mov
mov
mov
add
xchg
scas
lods
mov
stos
stos
adc
setno
mov
jb
cmpsl
mov
mov
mov
lods
test
add
xchg
or
xchg
mov
mov
mov
stos
stos
add
add
xchg
movsl
adc
lods
add
hlt
add
test
testb
popa
xchg
add
jae
xchg
mov
mov
xchg
movsl
test
add
adc
or
lds
mov
lods
stos
mov
mov
push
test
mov
subb
mov
xchg
mov
mov
mov
andl
or
mov
mov
xchg
stos
mov
mov
mov
out
xchg
lods
mov
mov
add
mov
mov
andb
dec
mov
mov
movb
adcb
test
aam
daa
xchg
mov
movsl
inc
stos
cmpsl
mov
or
lods
mov
movsl
test
lods
mov
add
movb
add
mov
mov
test
stos
mov
add
addl
testb
add
add
or
mov
movsl
test
stos
test
mov
xchg
rorb
or
add
and
sbb
push
lds
jmp
adc
cmp
movsl
mov
lods
cmpsb
test
xchg
mov
add
lds
and
addb
add
inc
or
mov
js
add
dec
push
addb
or
inc
adc
xchg
daa
les
rorl
add
add
xchg
sub
mov
dec
xchg
movsl
mov
add
shrb
xchg
mov
add
andl
adc
xchg
lods
mov
mov
mov
addl
mov
mov
inc
andb
add
add
add
mov
inc
inc
roll
xchg
mov
add
inc
sbb
add
and
lea
xchg
xchg
and
fwait
test
pop
shlb
mov
mov
stos
mov
or
mov
andb
lds
xchg
sbbb
or
add
in
xchg
add
pop
inc
add
subb
jae
mov
jl
and
mov
mov
mov
cmpb
add
loop
xchg
fs
and
subl
ret
add
mov
mov
and
add
stos
stos
inc
mov
mov
adc
push
mov
xchg
test
pop
add
mov
and
add
inc
mov
mov
mov
add
xchg
mov
adc
mov
add
mov
and
cltd
dec
out
add
sbb
or
mov
mov
mov
movsl
test
cmpsb
cmp
cmpsb
add
or
sub
test
mov
frstor
popa
lahf
inc
punpckhbw
mov
lods
punpcklbw
jo
sub
mov
mov
push
mov
test
add
cmpsl
add
and
and
jecxz
mov
popa
cmp
and
bound
loopne
inc
add
mov
add
or
push
test
push
pop
mov
loopne
and
mov
xchg
subl
or
adc
or
stos
scas
lods
mov
mov
mov
test
add
lcall
mov
mov
xchg
mov
pusha
insb
add
cmp
add
or
stos
gs
mov
shll
mov
mov
sub
add
mov
cmpsl
mov
ret
add
mov
lods
ret
testl
add
add
add
add
add
add
add
test
xchg
test
cld
jo
mov
jo
call
add
xor
rclb
add
xor
cmp
xor
and
add
xor
adc
add
add
add
add
add
push
xor
dec
xor
sbb
xchg
sub
add
pop
adc
jno
xchg
xchg
add
dec
loopne
sbb
sbb
add
add
add
test
sti
add
add
cld
add
sti
add
add
and
add
repnz
add
repz
sti
add
add
cld
sti
add
jne
add
cld
add
cld
add
jbe
add
cld
add
ja
add
cld
add
cld
add
and
add
ret
and
ret
sti
add
push
es
add
int3
sti
add
cld
add
adc
add
cltd
cld
add
add
cld
add
daa
cld
add
adc
add
cld
add
dec
sti
adc
dec
sti
add
xor
add
mov
add
cmp
add
add
adc
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
aam
add
js
repz
add
repz
and
sub
add
repz
sar
cld
add
cld
fdivr
loopne
call
clc
cld
cmp
cld
add
cld
test
add
sti
lock
add
mov
add
fadd
add
add
hlt
shl
cmc
shl
add
cmc
loopne
call
clc
cmc
xor
cmc
nop
cmc
add
cmc
mov
add
cmc
push
cmc
add
pusha
cmc
push
js
cmc
or
adc
add
cmc
and
sub
xor
add
cmc
shl
not
testb
mul
imul
div
testb
testb
add
divb
inc
testb
testb
mulb
push
js
testb
adc
add
mulb
imulb
divb
testb
test
enter
add
mul
imul
div
testl
mov
nop
testl
test
mov
add
notl
add
pusha
imull
jo
add
testl
sbb
and
sub
xor
add
test
lock
lock
call
clc
lock
lock
lock
lock
add
lock
lock
pusha
lock
js
lock
adc
add
lock
sub
xor
add
lock
icebp
shl
add
icebp
loopne
call
clc
icebp
xor
icebp
nop
icebp
add
icebp
mov
add
icebp
push
icebp
add
pusha
icebp
push
js
icebp
or
adc
add
icebp
and
sub
xor
add
icebp
shl
repnz
add
repnz
call
clc
repnz
repnz
repnz
repnz
add
repnz
repnz
pusha
repnz
js
repnz
adc
add
repnz
sub
xor
add
repnz
repz
add
repz
call
clc
repz
pause
repz
repz
add
repz
repz
pusha
repz
aas
js
repz
adc
sbb
and
sub
xor
cmp
sar
cld
sar
fdivr
loopne
call
cld
cmp
cld
nop
cld
cwtl
cld
mov
cld
mov
cld
push
cld
pop
cld
pusha
cld
push
cld
cld
or
adc
sbb
and
sub
xor
cmp
sar
std
sar
fdivr
loopne
call
hlt
add
in
add
add
dec
clc
push
clc
push
clc
fdivr
fdivr
in
loopne
in
stc
call
stc
cld
stc
clc
stc
test
cmp
xchg
add
nop
add
add
jl
js
add
std
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
fcos
xchg
jmp
decl
pushl
mov
stc
sbb
cli
sar
scas
cli
mov
sti
add
add
pop
hlt
mull
icebp
stc
icebp
gs
lods
repz
repz
mov
std
or
clc
sbb
mov
push
stc
js
sbb
push
cli
out
sti
clc
sti
add
add
add
hlt
test
xor
jno
adc
popf
testl
es
icebp
adc
out
mov
cld
adc
sub
cmp
clc
in
stc
xor
into
cli
sti
xor
add
add
loopne
add
push
mov
negb
outsb
lock
icebp
ja
ret
repz
jmp
sti
add
add
enter
mov
add
mov
add
mov
hlt
testb
inc
mul
lock
lock
dec
repnz
std
cld
add
ret
clc
in
loop
jp
push
clc
sar
idiv
xchg
stc
cmp
xchg
lods
cli
fsincos
in
sti
sti
scas
sti
jg
or
sbb
add
pop
add
add
hlt
jecxz
jmp
hlt
xor
hlt
nop
hlt
popf
hlt
movsb
hlt
mov
hlt
mov
hlt
dec
hlt
push
hlt
pop
hlt
push
ja
jns
pop
hlt
or
adc
sbb
and
das
hlt
xor
cmc
mov
cmc
pop
cmc
pop
cmc
addr16
insb
cmc
imul
jnp
add
stos
divb
testb
negl
testl
repnz
repnz
dec
repz
cld
push
cld
and
call
clc
arpl
jb
or
add
add
add
hlt
jno
jle
and
popf
cmc
adc
adc
sbb
xor
idivl
repnz
adc
mov
nop
repz
mov
cld
xor
mov
lahf
movsl
jo
xor
sar
call
pushl
cmp
repz
test
outsb
clc
or
stc
fdivrp
lock
clc
stc
cwtl
stc
mov
cli
cmc
cli
cli
lcall
sti
pop
sti
add
add
add
add
add
mov
ret
test
in
testl
lock
icebp
fdiv
div
test
popf
icebp
fwait
icebp
mov
inc
icebp
push
icebp
pop
icebp
jnp
adc
push
icebp
xor
xor
int3
repnz
repnz
xor
repnz
repnz
bnd
add
pop
repnz
in
mov
mov
pop
repz
repz
enter
imul
mov
std
xor
decl
lcall
pusha
incl
adc
and
clc
loopne
test
xchg
clc
mov
clc
add
add
add
or
push
std
and
cmp
aam
sar
out
hlt
inc
clc
lret
clc
in
clc
test
scas
clc
mov
clc
imul
stc
cli
test
mov
mov
sti
movsb
sti
add
add
add
hlt
mov
pop
hlt
popa
hlt
or
sbb
cmc
push
cmc
pop
cmc
gs
insl
cmc
jne
jge
add
cmc
and
sub
cmp
int3
neg
mul
div
idiv
testb
sahf
mulb
repnz
repnz
repnz
repnz
repnz
sbb
xor
xor
leave
repz
xchg
repz
repz
repz
std
xchg
pop
pop
jnp
sbb
incl
stc
fyl2xp1
stc
stc
cli
sar
cmp
sti
add
lds
jo
add
sti
hlt
xor
movsl
hlt
stos
hlt
mov
hlt
je
add
hlt
shl
xor
sahf
cmc
mov
inc
cmc
pop
cmc
push
cmc
leave
not
div
testb
notb
sbb
mov
cmpsb
test
icebp
nop
icebp
mov
icebp
pop
icebp
gs
sub
into
repnz
repnz
repnz
repnz
repnz
in
mov
repz
repz
repz
out
cld
sti
cld
fwait
cld
mov
mov
cld
push
cld
loopne
mov
test
std
dec
std
push
std
pop
std
imul
dec
clc
hlt
stc
xchg
stc
mov
inc
stc
arpl
adc
and
xchg
sti
add
add
lds
les
add
mov
pop
hlt
vminss
xor
shl
inc
notl
lock
lock
inc
lock
lock
lock
loop
test
cmpsl
icebp
dec
icebp
push
jl
sbb
xor
aas
icebp
xchg
movsb
repnz
repnz
repnz
repnz
repnz
repz
lahf
repz
lret
cld
xchg
cld
cwtl
cld
mov
pop
cld
outsb
cld
and
add
sahf
std
mov
std
gs
add
sbb
sub
decb
pop
pushl
jns
add
adc
pop
jmp
ds
clc
loopne
call
clc
mov
xchg
clc
lahf
clc
movsl
clc
arpl
jnp
pop
clc
aaa
clc
into
stc
sar
out
in
stc
cmc
stc
repnz
clc
stc
sahf
stc
cmpsb
stc
pop
stc
jg
push
stc
xor
in
sti
sbb
add
lds
push
lds
add
hlt
dec
hlt
and
cmc
xlat
cmc
xor
cwtl
cmc
push
cmc
pop
cmc
pusha
cmc
outsl
cmc
jmp
mul
testl
daa
divl
idivl
testl
lock
pop
lock
or
adc
lock
and
cs
xor
cmp
icebp
int3
icebp
leave
icebp
icebp
shl
fdiv
in
loop
out
icebp
hlt
icebp
icebp
icebp
icebp
sti
icebp
xor
icebp
mov
xchg
icebp
pushf
icebp
cltd
icebp
cmpsb
icebp
mov
icebp
mov
mov
icebp
dec
icebp
dec
icebp
push
icebp
pop
icebp
pop
icebp
addr16
insb
icebp
imul
js
add
icebp
adc
adc
push
icebp
sbb
and
sub
icebp
cmp
cmp
bnd
repnz
shl
fcomip
in
loope
out
bnd
lock
repnz
repnz
mov
mov
xchg
repnz
repnz
repnz
repnz
repnz
mov
repnz
repnz
repnz
repnz
repnz
repnz
push
bnd
add
add
push
repnz
adc
sbb
repnz
sub
ss
cmp
repz
shl
loopne
out
repz
repz
repz
repz
popf
repz
repz
mov
repz
repz
aam
jecxz
repnz
je
jae
cmp
hlt
push
pop
jnp
xor
cmp
add
int3
call
fdivr
in
push
loope
cmp
stc
stc
fs
cli
jb
cli
repnz
fs
arpl
add
add
lds
pusha
add
add
cmc
in
cmc
sub
in
divl
lock
lock
cmp
iret
icebp
aad
loope
div
movsl
icebp
test
mov
repnz
repnz
repnz
push
repnz
and
in
repz
cld
dec
cld
js
add
push
cld
ss
test
std
push
std
imul
sar
push
push
sbb
cli
call
ljmp
aas
call
clc
dec
clc
push
clc
pop
clc
in
cwtl
stc
mov
cmp
cli
je
push
cli
or
sti
test
movsb
sti
scas
sti
dec
sti
pop
sti
jg
aas
sti
add
add
hlt
lods
hlt
dec
hlt
insb
hlt
add
cmc
fdiv
repz
mov
pushf
cmc
mov
mov
cmc
or
push
cmc
and
mul
notb
imulb
divb
jp
loop
mov
mov
inc
test
mull
imull
imull
lock
shl
in
lods
icebp
dec
icebp
pop
icebp
sbb
int3
repnz
repz
xchg
repz
ss
nop
std
mov
push
stc
add
add
add
repnz
repz
cmp
sar
lcall
sar
cli
test
add
add
nop
repnz
jno
ss
mov
cld
cmp
test
movsl
decb
and
in
incl
add
add
and
sub
sub
xor
xor
cmp
cmp
add
shl
cmc
enter
shl
fdiv
fdiv
in
loopne
in
cmc
call
cmc
cld
cmc
clc
cmc
test
xor
cmc
mov
xchg
cmc
nop
cmc
pushf
cmc
cwtl
cmc
movsb
cmc
mov
cmc
mov
mov
mov
cmc
inc
cmc
dec
cmc
dec
cmc
push
cmc
push
cmc
pop
cmc
pop
cmc
fs
pusha
cmc
insb
cmc
push
cmc
jl
js
add
cmc
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
add
shl
testb
testb
notb
pop
negb
mulb
insb
imulb
je
jo
jl
js
add
testb
notb
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
add
shl
test
neg
neg
mul
mul
imul
imul
div
div
idiv
idiv
divl
idiv
repnz
inc
jmp
mov
clc
jecxz
cwtl
clc
stos
clc
inc
clc
jg
or
pop
clc
es
xor
ret
stc
icebp
stc
scas
stc
adc
outsl
cli
jge
call
sti
mov
inc
sti
pop
sti
data16
outsl
sti
or
push
sti
add
add
lock
add
hlt
lret
hlt
pushf
hlt
jno
js
add
pmuludq
ss
aam
loop
cmc
mov
cmc
mov
idivb
sbb
cmp
iret
idivl
idivl
lock
sbb
hlt
icebp
xchg
icebp
jno
jg
xor
lret
repnz
repnz
repnz
out
repz
repz
repz
repz
or
adc
pop
repz
cld
xlat
cld
in
cld
clc
cld
cmp
cld
movsb
cld
mov
cld
inc
cld
dec
cld
insl
cld
imul
cld
aaa
cld
ds
leave
std
xchg
std
fwait
std
mov
std
jae
sbb
aaa
std
sar
jmp
cmpsl
pop
addr16
insb
jle
or
and
ss
clc
incl
mov
incl
decl
call
clc
fdivrp
cltd
clc
inc
clc
push
clc
add
and
sub
cmp
lcall
cli
in
cli
xchg
cli
cli
push
cli
and
sub
cmp
sti
stc
sti
xchg
mov
xchg
sti
xchg
sti
cwtl
sti
cmpsb
sti
mov
sti
mov
sti
dec
sti
push
sti
pop
sti
pop
sti
pusha
sti
outsb
sti
jbe
jle
push
sti
sub
xor
cmp
push
lds
hlt
lds
add
hlt
shl
loope
lock
cli
hlt
mov
lods
hlt
mov
hlt
push
push
hlt
and
cmc
out
cmc
div
xchg
cmc
xchg
cmc
lcall
cmc
pop
cmc
fs
cmc
push
cmc
not
testb
movsl
mulb
testb
adc
mulb
imulb
divb
idivb
testb
ret
neg
div
idiv
testl
divl
negl
imulw
testl
imull
divl
neg
lock
loope
out
lock
lock
lock
lock
lock
lock
and
and
ss
cmc
icebp
std
icebp
mov
icebp
jl
add
push
icebp
sbb
sbb
cmp
cmp
lock
repnz
repnz
repnz
repz
std
pop
std
cmp
into
aam
popf
push
ss
loop
out
clc
dec
clc
sub
sub
add
leave
stc
repnz
clc
stc
mov
nop
stc
sahf
stc
mov
stc
inc
stc
pop
stc
pusha
stc
ds
xchg
jg
add
cli
aad
loopne
cmp
sti
addr16
add
lds
and
add
call
hlt
mov
hlt
jnp
add
sbb
cmp
iret
cmc
xlat
cmc
fprem1
mov
cmc
outsl
cmc
jne
pop
cmc
shl
out
out
imulb
idivb
push
negb
idivb
lock
lock
icebp
mov
dec
icebp
push
icebp
push
and
shl
fdiv
cli
repnz
bnd
add
sbb
repz
repz
out
call
cld
xchg
cld
mov
cld
pushf
std
jp
or
pop
std
out
stos
mov
pop
incb
sbb
jmp
call
inc
clc
sar
loopne
mov
mov
clc
addr16
jg
es
add
in
std
stc
int
aam
in
cli
lcall
cli
sbb
scas
sti
inc
sti
pop
sti
insl
sti
jge
or
daa
sti
aaa
sti
add
add
rol
add
hlt
jecxz
test
cmpsb
hlt
mov
hlt
or
push
hlt
sbb
sbb
xor
loopne
icebp
cmc
sti
cmc
xchg
cmc
movsb
cmc
mov
pop
cmc
cmc
js
sbb
sub
mul
div
testb
divb
add
test
in
xchg
xchg
mull
imull
adc
neg
lock
call
lock
mov
mov
sahf
lock
lock
icebp
xchg
icebp
push
icebp
addr16
imul
icebp
sub
enter
in
call
repnz
repnz
repnz
popf
rep
repz
inc
repz
repz
or
adc
and
das
repz
cld
idiv
cld
cld
cli
cld
mov
xchg
cld
cmpsb
cld
stos
cld
inc
cld
insl
cld
jo
js
pop
cld
or
std
mov
xchg
std
cwtl
std
mov
test
dec
stc
inc
cli
je
add
adc
sti
xchg
sti
push
sti
data16
push
sti
and
add
add
xchg
cmc
cwtl
cmc
inc
cmc
pop
cmc
test
mov
or
add
xor
lock
lock
lock
lock
pop
lock
icebp
out
icebp
mov
movsb
icebp
scas
icebp
push
adc
shl
repnz
repnz
in
repz
repz
rep
repz
cld
test
cld
gs
jns
add
sbb
xor
fscale
mov
std
js
icebp
sti
decb
pusha
decb
inc
clc
sar
in
cld
clc
xchg
clc
dec
clc
sar
stc
lret
stc
fyl2xp1
fwait
stc
mov
fs
push
stc
es
jmp
cli
cli
and
cmp
add
add
cmc
sbb
and
xor
idiv
testb
cmp
repnz
xchg
repnz
repnz
lret
repz
and
sti
cld
cltd
cld
pop
cld
pop
cld
aad
fdivr
sti
std
add
cmp
popf
incb
pop
imul
mov
sahf
ljmp
incl
jmp
jmp
clc
cmc
clc
scas
clc
pop
clc
stc
lret
cli
add
add
cld
mov
xchg
xchg
call
clc
pop
clc
add
clc
vpsrlq
aaa
cli
mov
dec
sti
or
add
add
cmc
xchg
divb
imull
divl
neg
lock
jg
sub
aad
fdiv
mov
bnd
into
repz
into
cld
cmp
mov
mov
clc
vpsadbw
mov
xchg
stc
movsb
stc
mov
mov
stc
jne
or
xor
mov
mov
mov
mov
dec
cli
xor
out
cwtl
sti
mov
add
add
add
sub
cwtl
hlt
inc
hlt
jg
daa
hlt
add
cmc
insl
cmc
inc
divb
lock
lock
jne
jns
add
lock
es
add
icebp
xor
icebp
mov
jl
push
icebp
sub
add
icebp
shl
hlt
repnz
mov
mov
dec
repnz
repnz
add
cmp
into
repz
repz
test
mov
add
repz
repz
js
push
repz
repz
repz
repz
cld
add
cld
cld
test
popf
cld
add
cld
ja
add
cld
adc
cs
cmp
sar
repnz
cmp
xchg
std
lods
std
mov
cmp
into
cld
incb
test
mov
mov
push
pop
push
add
add
sar
nop
incl
dec
call
push
jmp
incl
int
in
clc
clc
mov
add
clc
xlat
stc
and
aam
add
pmuludq
cmc
aam
add
divb
loope
div
add
jg
add
lock
lock
loopne
add
icebp
sbb
and
andb
add
repz
stc
add
in
add
lods
andb
cmc
cmc
cmc
repnz
add
cmc
inc
cmc
dec
cmc
imul
fcomi
repz
cmp
add
icebp
lret
icebp
jecxz
xor
xchg
icebp
push
icebp
pop
icebp
adc
add
dec
incl
xchg
xchg
lcall
mov
clc
dec
clc
add
or
or
xor
in
add
lret
cli
add
cli
ja
cmpb
cli
mov
adc
movb
xorb
hlt
addl
cmc
sbb
stc
add
or
in
cld
pushf
cld
inc
add
or
leave
incb
data16
hlt
incl
dec
add
movsb
clc
lods
stc
pop
stc
mov
cli
inc
cli
jmp
popa
sti
cmp
movb
sbbb
mov
add
adc
aas
cmc
icebp
mulb
mull
imull
xor
add
cmp
lock
lock
lock
shl
fldl
lock
in
loope
in
add
jmp
lock
adc
stc
lock
lock
lock
lock
lock
lock
add
movsl
lock
add
mov
mov
mov
inc
lock
lock
lock
add
push
lock
lock
lock
add
gs
lock
lock
jge
mov
or
lock
lock
lock
lock
icebp
lds
repnz
repnz
repnz
sub
repnz
test
repz
cld
add
sti
std
cltd
std
mov
std
inc
std
dec
sarb
sbb
ret
stc
addr16
mov
shrb
sti
xchg
sti
lcall
and
dec
xchg
movb
sarb
hlt
add
hlt
xor
hlt
cltd
hlt
add
pop
hlt
pusha
hlt
hlt
add
hlt
cs
ret
cmc
lret
shl
in
in
cmc
test
add
cmc
jge
add
cmc
or
adc
jecxz
add
idiv
testb
mul
notl
mul
lock
fs
js
add
adcb
lock
and
sub
xor
add
fs
add
add
hlt
enter
hlt
shl
fdiv
fdiv
add
hlt
loopne
in
hlt
call
lock
cld
hlt
clc
hlt
add
hlt
xchg
hlt
add
hlt
movsb
hlt
test
hlt
lods
ror
shlb
inc
and
xor
rolb
loopne
lock
xor
cmc
add
cmc
push
cmc
and
jo
les
and
add
cmc
shl
mul
testb
testb
add
mulb
add
notb
mulb
testb
test
shl
loopne
add
testl
inc
notl
pusha
testl
adc
and
add
test
lock
lock
sub
add
or
add
aas
add
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
cmp
and
aaa
add
ror
ret
pop
xor
mov
jge
mov
cmp
movsb
jmp
add
daa
dec
lahf
sub
jne
add
enter
xchg
mov
jb
inc
aas
cmp
xor
lods
push
xchg
lods
shlb
push
adc
fs
jo
arpl
jbe
xchg
pushl
int
xor
add
inc
in
jbe
je
scas
pusha
add
and
rcll
jl
test
inc
xchg
push
test
push
in
movsb
sar
sbb
xchg
sbb
sub
fadd
jge
or
std
add
fs
mov
xchg
pop
cmp
sub
je
cmpsl
push
sub
mov
push
ds
dec
jbe
add
fbld
add
test
dec
add
adc
add
mov
mov
add
or
cwtl
push
mov
leave
adc
xor
add
ljmp
adc
popf
add
ret
push
mov
js
xor
int
xor
jecxz
push
add
xchg
arpl
xor
outsb
add
mov
dec
fstps
add
cmc
cmpsb
jns
in
cmp
xchg
fldenv
out
add
cmp
xor
fcoml
and
repz
xor
js
xor
andl
and
mov
int
adc
inc
movsl
push
cmp
add
stos
mov
sbb
add
jl
add
adc
add
xchg
loope
add
aaa
jge
rorb
xchg
add
xor
push
add
aad
jle
cli
cld
sahf
pop
repz
out
pop
test
sbb
fiaddl
imul
icebp
push
add
jge
push
cwtl
rclb
add
inc
les
aad
in
cs
adc
add
aam
loope
dec
mov
cmpsl
pop
movsb
loope
add
cmp
icebp
add
repz
xchg
faddl
jle
mov
into
lret
mov
lea
bound
cmp
mov
mov
sbb
dec
mov
push
adc
setbe
dec
mov
pushaw
pop
and
data16
mov
andl
popf
paddusw
cmp
jecxz
iret
fsts
fcomps
std
das
inc
adc
inc
sbb
adc
fsqrt
inc
icebp
adc
adc
sub
outsl
repz
inc
xchg
nop
mov
mov
add
push
xchg
pop
adc
rcrb
out
adc
jo
pop
aaa
or
gs
andb
cli
aaa
das
test
sub
xchg
mov
cltd
add
mov
xchg
gs
adc
aam
fwait
popa
and
add
ja
jg
sub
jmp
adc
imul
mov
or
inc
imul
mov
sti
dec
and
jo
mov
stos
into
sub
sbb
insb
pop
bound
mov
aam
inc
push
fs
sbb
mov
xchg
inc
add
in
cli
andl
jge,pt
inc
dec
pop
jg
add
dec
and
lcall
into
inc
mov
nop
sub
inc
inc
cmp
jl
jg
push
mov
push
push
xchg
cs
cwtl
or
xchg
lret
sub
dec
mov
ss
repz
sub
js
mov
cmpsl
lods
popf
mov
sub
scas
dec
loop
mov
sub
mov
or
jo
scas
adc
fcompl
inc
dec
mov
xor
gs
dec
and
mov
adc
inc
jbe
ds
clc
jne
insl
mov
test
jno
lods
jne
cltd
data16
adc
je
mov
mov
fcoml
pushf
hlt
push
dec
pop
xor
mov
cli
shlb
js
pusha
sbb
movsb
push
dec
aam
dec
and
jbe
xor
mov
sarl
xchg
inc
and
ja
sub
andb
or
mov
mov
rcrb
pushf
pop
pushaw
xchg
push
pop
jecxz
and
cs
xor
ljmp
into
lret
push
mov
mov
fnstsw
jb
imulb
nop
jp
sahf
add
sub
xchg
sbb
in
mov
into
push
adc
aaa
cmpsb
mov
fstpt
lret
mov
mov
outsl
sub
xchg
cmp
gs
cmpb
icebp
test
loop
add
sbb
movsl
mov
int
inc
pushf
aam
mov
pop
lds
call
into
mov
and
mov
mov
mov
adc
inc
push
outsb
jbe
inc
and
xchg
pop
popa
pushf
loopne
xor
stos
pop
jae
jnp
cld
sub
lea
sub
jl
stos
or
test
pushf
cmp
cltd
jl
test
jl
daa
in
push
shlb
push
xchg
push
mov
dec
in
into
mov
xor
ds
arpl
pushf
xlat
xchg
dec
pop
shrb
leave
imul
rcrl
and
mov
pop
mov
ret
enter
sbb
out
in
lods
lret
inc
or
arpl
sub
ds
test
or
xor
inc
scas
ret
arpl
sbb
pop
aad
adc
fucomip
clc
loope
lea
and
insb
jge
popf
jne
mov
cmp
dec
je
adc
ret
rep
cmp
or
cmp
jecxz
push
push
mov
ljmp
fwait
jge
mov
mov
cli
shlb
js
pusha
sbb
movsb
push
dec
aam
dec
and
jbe
xor
mov
sarl
xchg
inc
and
ja
sub
andb
or
mov
mov
rcrb
pushf
pop
pushaw
xchg
push
pop
jecxz
and
cs
xor
ljmp
into
lret
push
mov
mov
fnstsw
jb
imulb
nop
jp
sahf
add
sub
xchg
sbb
in
mov
into
push
adc
aaa
cmpsb
mov
fstpt
lret
mov
mov
outsl
sub
xchg
cmp
gs
cmpb
icebp
test
loop
add
sbb
movsl
mov
int
inc
pushf
aam
mov
pop
lds
call
into
mov
and
mov
mov
mov
adc
inc
push
outsb
jbe
inc
and
xchg
pop
popa
pushf
loopne
xor
stos
pop
jae
jnp
cld
sub
lea
sub
jl
stos
or
test
pushf
cmp
cltd
jl
test
jl
daa
in
push
shlb
push
xchg
push
mov
dec
in
into
mov
xor
ds
arpl
pushf
xlat
xchg
dec
pop
shrb
leave
imul
rcrl
and
mov
pop
mov
ret
enter
sbb
out
in
lods
lret
inc
or
arpl
sub
ds
test
or
xor
inc
scas
ret
arpl
sbb
pop
aad
adc
fucomip
clc
loope
lea
and
insb
jge
popf
jne
mov
cmp
dec
je
adc
ret
rep
cmp
or
cmp
jecxz
push
push
mov
ljmp
fwait
jge
mov
mov
cli
shlb
js
pusha
sbb
movsb
push
dec
aam
dec
and
jbe
xor
mov
sarl
xchg
inc
and
ja
sub
andb
or
mov
mov
rcrb
pushf
pop
pushaw
xchg
push
pop
jecxz
and
cs
xor
ljmp
into
lret
push
mov
mov
fnstsw
jb
imulb
nop
jp
sahf
add
sub
xchg
sbb
in
mov
into
push
adc
aaa
cmpsb
mov
fstpt
lret
mov
mov
outsl
sub
xchg
cmp
gs
cmpb
icebp
test
loop
add
sbb
movsl
mov
int
inc
pushf
aam
mov
pop
lds
call
into
mov
and
mov
mov
mov
adc
inc
push
outsb
jbe
inc
and
xchg
pop
popa
pushf
loopne
xor
stos
pop
jae
jnp
cld
sub
lea
sub
jl
stos
or
test
pushf
cmp
cltd
jl
test
jl
daa
in
push
shlb
push
xchg
push
mov
dec
in
into
mov
xor
ds
arpl
pushf
xlat
xchg
dec
pop
shrb
leave
imul
rcrl
and
mov
pop
mov
ret
enter
sbb
out
in
lods
lret
inc
or
arpl
sub
ds
test
or
xor
inc
scas
ret
arpl
sbb
pop
aad
adc
fucomip
clc
loope
lea
and
insb
jge
popf
jne
mov
cmp
dec
je
adc
ret
rep
cmp
or
cmp
jecxz
push
push
mov
ljmp
fwait
jge
mov
mov
cli
shlb
js
pusha
sbb
movsb
push
dec
aam
dec
and
jbe
xor
mov
sarl
xchg
inc
and
ja
sub
andb
or
mov
mov
rcrb
pushf
pop
pushaw
xchg
push
pop
jecxz
and
cs
xor
ljmp
into
lret
push
mov
mov
fnstsw
jb
imulb
nop
jp
sahf
add
sub
xchg
sbb
in
mov
into
push
adc
aaa
cmpsb
mov
fstpt
lret
mov
mov
outsl
sub
xchg
cmp
gs
cmpb
icebp
test
loop
add
sbb
movsl
mov
int
inc
pushf
aam
mov
pop
lds
call
into
mov
and
mov
mov
mov
adc
inc
push
outsb
jbe
inc
and
xchg
pop
popa
pushf
loopne
xor
stos
pop
jae
jnp
cld
sub
lea
sub
jl
stos
or
test
pushf
cmp
cltd
jl
test
jl
daa
in
push
shlb
push
xchg
push
mov
dec
in
into
mov
xor
ds
arpl
pushf
xlat
xchg
dec
pop
shrb
leave
imul
rcrl
and
mov
pop
mov
ret
enter
sbb
out
in
lods
lret
inc
or
arpl
sub
ds
test
or
xor
inc
scas
ret
arpl
sbb
pop
aad
adc
fucomip
clc
loope
lea
and
insb
jge
popf
jne
mov
cmp
dec
je
adc
ret
rep
cmp
or
cmp
jecxz
push
push
mov
ljmp
fwait
jge
mov
mov
cli
shlb
js
pusha
sbb
movsb
push
dec
aam
dec
and
jbe
xor
mov
sarl
xchg
inc
and
ja
sub
andb
or
mov
mov
rcrb
pushf
pop
pushaw
xchg
push
pop
jecxz
and
cs
xor
ljmp
into
lret
push
mov
mov
fnstsw
jb
imulb
nop
jp
sahf
add
sub
xchg
sbb
in
mov
into
push
adc
aaa
cmpsb
mov
fstpt
lret
mov
mov
outsl
sub
xchg
cmp
gs
cmpb
icebp
test
loop
add
sbb
movsl
mov
int
inc
pushf
aam
mov
pop
lds
call
into
mov
and
mov
mov
mov
adc
inc
push
outsb
jbe
inc
and
xchg
pop
popa
pushf
loopne
xor
stos
pop
jae
jnp
cld
sub
lea
sub
jl
stos
or
test
pushf
cmp
cltd
jl
test
jl
daa
in
push
shlb
push
xchg
push
mov
dec
in
into
mov
xor
ds
arpl
pushf
xlat
xchg
dec
pop
shrb
leave
imul
rcrl
and
mov
pop
mov
ret
enter
sbb
out
in
lods
lret
inc
or
arpl
sub
ds
test
or
xor
inc
scas
ret
arpl
sbb
pop
aad
adc
fucomip
clc
loope
lea
and
insb
jge
popf
jne
mov
cmp
dec
je
adc
ret
rep
cmp
or
cmp
jecxz
push
push
mov
ljmp
fwait
jge
mov
mov
cli
shlb
js
pusha
sbb
movsb
push
dec
aam
dec
and
jbe
xor
mov
sarl
xchg
inc
and
ja
sub
andb
or
mov
mov
rcrb
pushf
pop
pushaw
xchg
push
pop
jecxz
and
cs
xor
ljmp
into
lret
push
mov
mov
fnstsw
jb
imulb
nop
jp
sahf
add
sub
xchg
sbb
in
mov
into
push
adc
aaa
cmpsb
mov
fstpt
lret
mov
mov
outsl
sub
xchg
cmp
gs
cmpb
icebp
test
loop
add
sbb
movsl
mov
int
inc
pushf
aam
mov
pop
lds
call
into
mov
and
mov
mov
mov
adc
inc
push
outsb
jbe
inc
and
xchg
pop
popa
pushf
loopne
xor
stos
pop
jae
jnp
cld
sub
lea
sub
jl
stos
or
test
pushf
cmp
cltd
jl
test
jl
daa
in
push
shlb
push
xchg
push
mov
dec
in
into
mov
xor
ds
arpl
pushf
xlat
xchg
dec
pop
shrb
leave
imul
rcrl
and
mov
pop
mov
ret
enter
sbb
out
in
lods
lret
inc
or
arpl
sub
ds
test
or
xor
inc
scas
ret
arpl
sbb
pop
aad
adc
fucomip
clc
loope
lea
and
insb
jge
popf
jne
mov
cmp
dec
je
adc
ret
rep
cmp
or
cmp
jecxz
push
push
mov
ljmp
fwait
jge
mov
mov
cli
shlb
js
pusha
sbb
movsb
push
dec
aam
dec
and
jbe
xor
mov
sarl
xchg
inc
and
ja
sub
andb
or
mov
mov
rcrb
pushf
pop
pushaw
xchg
push
pop
jecxz
and
cs
xor
ljmp
into
lret
push
mov
mov
fnstsw
jb
imulb
nop
jp
sahf
add
sub
xchg
sbb
in
mov
into
push
adc
aaa
cmpsb
mov
fstpt
lret
mov
mov
outsl
sub
xchg
cmp
gs
cmpb
icebp
test
loop
add
sbb
movsl
mov
int
inc
pushf
aam
mov
pop
lds
call
into
mov
and
mov
mov
mov
adc
inc
push
outsb
jbe
inc
and
xchg
pop
popa
pushf
loopne
xor
stos
pop
jae
jnp
cld
sub
lea
sub
jl
stos
or
test
pushf
cmp
cltd
jl
test
jl
daa
in
push
shlb
push
xchg
push
mov
dec
in
into
mov
xor
ds
arpl
pushf
xlat
xchg
dec
pop
shrb
leave
imul
rcrl
and
mov
pop
mov
ret
enter
sbb
out
in
lods
lret
inc
or
arpl
sub
ds
test
or
xor
inc
scas
ret
arpl
sbb
pop
aad
adc
fucomip
clc
loope
lea
and
insb
jge
popf
jne
mov
cmp
dec
je
adc
ret
rep
cmp
or
cmp
jecxz
push
push
mov
ljmp
fwait
jge
mov
mov
cli
shlb
js
pusha
sbb
movsb
push
dec
aam
dec
and
jbe
xor
mov
sarl
xchg
inc
and
ja
sub
andb
or
mov
mov
rcrb
pushf
pop
pushaw
xchg
push
pop
jecxz
and
cs
xor
ljmp
into
lret
push
mov
mov
fnstsw
jb
imulb
nop
jp
sahf
add
sub
xchg
sbb
in
mov
into
push
adc
aaa
cmpsb
mov
fstpt
lret
mov
mov
outsl
sub
xchg
cmp
gs
cmpb
icebp
test
loop
add
sbb
movsl
mov
int
inc
pushf
aam
mov
pop
lds
call
into
mov
and
mov
mov
mov
adc
inc
push
outsb
jbe
inc
and
xchg
pop
popa
pushf
loopne
xor
stos
pop
jae
jnp
cld
sub
lea
sub
jl
stos
or
test
pushf
cmp
cltd
jl
test
jl
daa
in
push
shlb
push
xchg
push
mov
dec
in
into
mov
xor
ds
arpl
pushf
xlat
xchg
dec
pop
shrb
leave
imul
rcrl
and
mov
pop
mov
ret
enter
sbb
out
in
lods
lret
inc
or
arpl
sub
ds
test
or
xor
inc
scas
ret
arpl
sbb
pop
aad
adc
fucomip
clc
loope
lea
and
insb
jge
popf
jne
mov
cmp
dec
je
adc
ret
rep
cmp
or
cmp
jecxz
push
push
mov
ljmp
fwait
jge
mov
mov
cli
shlb
js
pusha
sbb
movsb
push
dec
aam
dec
and
jbe
xor
mov
sarl
xchg
inc
and
ja
sub
andb
or
mov
mov
rcrb
pushf
pop
pushaw
xchg
push
pop
jecxz
and
cs
xor
ljmp
into
lret
push
mov
mov
fnstsw
jb
imulb
nop
jp
sahf
add
sub
xchg
sbb
in
mov
into
push
adc
aaa
cmpsb
mov
fstpt
lret
mov
mov
outsl
sub
xchg
cmp
gs
cmpb
icebp
test
loop
add
sbb
movsl
mov
int
inc
pushf
aam
mov
pop
lds
call
into
mov
and
mov
mov
mov
adc
inc
push
outsb
jbe
inc
and
xchg
pop
popa
pushf
loopne
xor
stos
pop
jae
jnp
cld
sub
lea
sub
jl
stos
or
test
pushf
cmp
cltd
jl
test
jl
daa
in
push
shlb
push
xchg
push
mov
dec
in
into
mov
xor
ds
arpl
pushf
xlat
xchg
dec
pop
shrb
leave
imul
rcrl
and
mov
pop
mov
ret
enter
sbb
out
in
lods
lret
inc
or
arpl
sub
ds
test
or
xor
inc
scas
ret
arpl
sbb
pop
aad
adc
fucomip
clc
loope
lea
and
insb
jge
popf
jne
mov
cmp
dec
je
adc
ret
rep
cmp
or
cmp
jecxz
push
push
mov
ljmp
fwait
jge
mov
adc
mov
ja
cs
jbe
adc
scas
cli
je
scas
adc
jns
loop
mov
ljmp
mov
adc
icebp
dec
xor
push
aaa
push
sub
outsb
ss
cli
imul
sbb
adc
inc
xor
mov
mov
pop
adc
pop
scas
pop
push
inc
int
push
lahf
enter
insl
adc
xor
xor
jle
outsb
jns
rolb
mov
js
xor
pusha
das
sbb
fdivrl
xor
jbe
or
push
pop
mov
les
cmp
fstl
dec
xor
jbe
cmp
pusha
and
out
jp
cmp
inc
pop
or
fwait
or
daa
ljmp
ret
xor
jae
sbb
fiaddl
xlat
jmp
mov
aad
xchg
adcb
cmp
scas
jp
sub
pop
xor
jae
or
inc
push
fiaddl
xlat
jmp
mov
sahf
mov
mov
adc
addr16
xlat
jp
cmp
pusha
inc
or
cltd
push
push
ret
mov
shlb
fdivs
sub
inc
cmp
pop
xor
inc
dec
cmp
iret
inc
jno
jmp
fimull
xchg
cmpsb
pushf
mov
adc
les
xor
data16
cli
in
dec
dec
sub
adc
hlt
adc
pop
les
jo
je
cs
jp
push
fdivl
xor
jno
xor
inc
pusha
xor
inc
inc
mov
cs
rcll
aas
adc
iret
aad
adc
adc
pop
scas
jp
pop
out
adc
or
js
xor
add
pop
adc
pop
scas
js
mov
push
in
cli
xor
adc
scas
sub
jp
sbb
adc
dec
adc
mov
push
js
movsb
sti
xchg
add
shr
add
adc
in
mov
push
pop
scas
stos
adc
mov
xchg
sbb
sub
das
cmpsb
xchg
int
ficoml
jb
push
and
shld
pop
scas
adc
cmpsb
in
adc
in
adc
fsubrs
andb
dec
add
push
jmp
insb
adc
fwait
stos
mov
scas
js
xor
adc
pop
scas
js
movsb
jge
and
fstpl
test
push
pushf
and
in
push
push
daa
sbb
push
pop
sub
addr16
jmp
pop
popf
push
adc
sbb
aad
pop
dec
adc
shlb
push
push
pushf
stos
xchg
or
leave
mov
shrb
int3
pop
out
adc
daa
aad
rcrb
xchg
pop
pushf
test
dec
les
scas
adc
shr
sbb
sbb
lahf
mov
add
lahf
sar
push
cmp
fistpl
mov
sar
push
xor
pop
adc
or
jbe
in
scas
test
das
repnz
repz
daa
shll
sti
scas
adc
pop
insl
cltd
repnz
sub
les
and
mov
aad
mov
shrb
mov
xchg
dec
movsb
mov
dec
loopne
test
add
out
lods
push
sbb
ret
stc
cmpsb
adc
adc
xchg
lods
dec
movsb
mov
cltd
shrb
sti
cmpsb
stc
shrb
xchg
out
scas
addr16
shl
sbb
sbb
aam
or
xor
shr
or
jecxz
add
sbb
shl
push
add
movsb
daa
pop
lods
mov
sub
mov
cltd
adc
push
in
ja
jne
jmp
xchg
outsb
data16
in
subb
xchg
dec
lods
cltd
lret
dec
scas
jecxz
push
outsb
adc
movsb
jle
mov
pop
scas
fwait
mov
dec
sub
or
pop
shlb
scas
xchg
add
lock
loopne
sbb
inc
stc
push
mov
stc
pop
sub
push
scas
pop
inc
fucomip
cwtl
mov
pop
pop
pop
scas
adc
sbb
dec
clc
sar
or
sbb
gs
push
movsb
sti
xchg
cmp
outsb
sbb
popa
sarb
pop
addr16
adc
movsb
fisubrl
mov
dec
test
icebp
data16
flds
pop
sub
mov
out
sub
inc
int3
ds
and
add
sub
movsb
push
inc
and
movsb
push
in
mov
lret
movsb
push
inc
fisubrs
jp
daa
in
fisubrs
inc
jo
mov
lods
test
push
in
adc
sbb
movsb
push
in
imull
push
in
mov
movsb
push
in
push
icebp
stc
pushf
shlb
xchg
jno
push
in
mov
sahf
in
lds
out
add
fcomi
push
scas
aad
out
adc
pop
jle
xor
adc
push
add
pushf
pop
scas
shl
fwait
jo
in
cwtl
and
in
xorl
lahf
mov
orl
xchg
xor
mov
shlb
xor
or
repz
or
sbb
aas
popa
sbb
arpl
add
jp
pop
dec
inc
inc
dec
dec
bound
inc
pop
inc
bound
aaa
popa
arpl
jae
pop
js
push
popa
push
js
cmp
push
push
jb
add
inc
outsl
arpl
pop
inc
insl
pop
dec
add
dec
push
arpl
push
add
insb
dec
imul
jno
outsl
xor
outsb
imul
dec
jbe
add
inc
dec
jo
push
add
arpl
inc
imul
pop
dec
push
dec
dec
add
pop
pop
ja
imul
ss
insb
push
push
xor
push
inc
jo
xor
add
cmp
je
outsl
add
xor
addr16
push
xor
add
jbe
push
fs
jne
add
push
popa
push
push
push
inc
cmp
xor
push
gs
push
add
jns
push
inc
xor
xor
jns
inc
push
xor
bound
data16
xor
jae
dec
data16
jb
jb
inc
push
add
push
outsl
push
push
push
add
bound
push
dec
xor
push
jae
dec
aaa
jae
js
push
push
jb
jbe
push
insl
xor
insl
add
outsl
jo
push
inc
outsl
jns
add
dec
ja
xor
add
xor
jp
gs
add
jo
inc
jp
xor
push
outsb
inc
jp
push
pop
add
push
popa
push
push
bound
push
inc
dec
jno
jae
push
jns
push
js
add
inc
insb
push
jo
push
dec
jne
gs
jb
jbe
xor
push
jo
pop
inc
dec
dec
push
xor
outsl
outsl
inc
bound
xor
dec
dec
outsb
inc
dec
aaa
add
jno
inc
aaa
bound
pop
inc
imul
inc
inc
arpl
dec
jb
add
push
pop
outsl
dec
inc
dec
push
ja
add
dec
pop
je
add
dec
inc
push
jp
popaw
push
add
ja
jne
bound
add
push
bound
outsl
add
arpl
xor
dec
jno
add
data16
push
popa
fs
dec
add
inc
dec
push
data16
push
imul
xor
gs
jo
insb
push
push
add
xor
je
pop
add
inc
gs
inc
add
jbe
imul
jae
inc
jne
inc
push
push
add
dec
pop
dec
aaa
push
dec
push
popa
pop
add
jo
jbe
xor
add
jne
dec
add
push
pop
js
add
pop
js
cmp
xor
inc
xor
inc
inc
dec
jb
dec
push
add
imul
dec
xor
jp
add
xor
popa
pop
inc
push
add
dec
jae
pop
dec
push
add
inc
dec
jp
jne
arpl
inc
add
dec
dec
jp
add
push
inc
dec
js
dec
insl
dec
cmp
js
fs
popa
add
dec
dec
jbe
js
insb
push
push
fs
add
addr16
inc
data16
dec
push
xor
arpl
push
inc
dec
jns
dec
jns
push
push
push
dec
jo
bound
inc
push
xor
push
jo
dec
arpl
inc
add
inc
ja
arpl
imul
dec
outsb
jno
pop
dec
inc
data16
push
add
push
popa
push
add
xor
push
push
jbe
push
pop
add
push
pop
fs
js
add
outsl
popa
insb
addr16
push
je
inc
jb
push
jo
addr16
add
push
ja
add
popa
imul
push
insb
imul
dec
jae
add
jp
jbe
push
xor
dec
jne
jns
insb
jb
push
push
inc
add
jb
outsb
inc
insb
js
add
push
xor
inc
add
dec
xor
jns
xor
dec
xor
jne
je
jne
dec
add
jbe
pop
jae
add
dec
gs
arpl
dec
push
add
jno
ja
add
xor
dec
bound
add
arpl
push
dec
jns
add
inc
insb
dec
dec
jno
cmp
add
je
add
pop
movsl
add
mov
add
add
add
add
stos
add
mov
add
add
stos
add
cwtl
stos
add
test
add
mov
add
mov
stos
add
fsubrs
add
cld
stos
add
or
add
sub
add
dec
stos
add
push
stos
add
stos
add
js
add
mov
add
test
add
mov
stos
add
fisubrl
add
cld
stos
add
adc
add
lods
add
dec
lods
add
pop
lods
add
outsb
lods
add
subb
cmpsb
lods
add
mov
lods
add
loop
add
imulb
add
add
inc
lods
add
push
lods
add
lods
add
js
add
mov
add
mov
add
enter
fsubrl
add
add
add
push
scas
add
sub
add
push
scas
add
data16
add
jp
add
mov
add
mov
add
enter
fisubrl
add
add
add
es
add
cmp
add
pop
scas
add
outsb
scas
add
subb
add
scas
add
shrb
add
imulb
add
sbb
add
xor
add
pop
mov
add
add
add
xchg
mov
add
add
lret
add
mov
add
mov
add
mov
add
mov
add
add
inc
mov
add
add
add
js
add
mov
add
mov
add
enter
fdivl
add
add
add
sub
add
push
mov
add
add
add
mov
add
scas
mov
add
mov
add
mov
add
mov
add
mov
add
add
and
add
inc
mov
add
add
push
mov
add
mov
add
add
fdivl
add
add
add
push
mov
add
mov
add
stos
add
cwtl
stos
add
test
add
mov
add
mov
stos
add
fsubrs
add
cld
stos
add
or
add
sub
add
dec
stos
add
push
stos
add
stos
add
js
add
mov
add
test
add
mov
stos
add
fisubrl
add
cld
stos
add
adc
add
lods
add
dec
lods
add
pop
lods
add
outsb
lods
add
subb
cmpsb
lods
add
mov
lods
add
loop
add
imulb
add
add
inc
lods
add
push
lods
add
lods
add
js
add
mov
add
mov
add
enter
fsubrl
add
add
add
push
scas
add
sub
add
push
scas
add
data16
add
jp
add
mov
add
mov
add
enter
fisubrl
add
add
add
es
add
cmp
add
pop
scas
add
outsb
scas
add
subb
add
scas
add
shrb
add
imulb
add
sbb
add
xor
add
pop
mov
add
add
add
xchg
mov
add
add
lret
add
mov
add
mov
add
mov
add
mov
add
add
inc
mov
add
add
add
js
add
mov
add
mov
add
enter
fdivl
add
add
add
sub
add
push
mov
add
add
add
mov
add
scas
mov
add
mov
add
mov
add
mov
add
mov
add
add
and
add
inc
mov
add
add
push
mov
add
mov
add
add
fdivl
add
add
add
push
mov
add
mov
add
jb
gs
xor
cs
insb
add
push
insb
gs
js
push
imul
jb
je
arpl
inc
jb
popa
je
push
jb
arpl
jae
add
push
gs
gs
jae
dec
jne
gs
add
gs
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
gs
je
inc
imul
je
outsl
jb
imul
push
arpl
add
je
jns
je
insl
push
imul
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
add
push
imul
jb
je
arpl
inc
gs
jb
imul
push
add
inc
gs
jns
je
insl
push
imul
push
je
jb
jne
dec
outsb
outsw
inc
add
insl
imul
outsl
arpl
jae
add
imul
jae
dec
gs
outsl
jb
add
inc
gs
jns
je
insl
push
imul
fs
imul
add
inc
gs
je
jb
jne
dec
outsb
outsw
push
add
popa
fs
jb
arpl
jae
gs
outsl
jb
add
je
je
jb
jne
dec
outsb
outsw
inc
add
imul
insb
gs
bound
arpl
add
outsb
push
fs
insb
add
outsb
dec
je
jo
insb
outsl
jae
dec
popa
outsb
fs
add
push
imul
jo
outsb
push
gs
gs
add
push
imul
gs
jo
imul
outsb
dec
je
jo
jb
popa
je
push
jb
add
push
imul
insb
outsl
jae
dec
popa
outsb
fs
add
push
imul
jb
popa
je
push
jb
add
push
imul
jb
popa
je
push
jb
add
push
imul
jb
popa
je
push
jb
add
push
imul
jo
outsb
push
gs
gs
add
push
imul
jb
popa
je
push
jb
add
push
imul
push
insb
popa
je
outsl
jb
add
push
imul
jo
outsb
push
gs
gs
add
push
imul
insb
outsl
jae
dec
popa
outsb
fs
add
push
imul
jb
popa
je
push
jb
add
push
imul
insb
outsl
jae
dec
popa
outsb
fs
add
push
imul
jo
outsb
push
gs
gs
add
push
imul
jb
popa
je
push
jb
add
push
imul
jb
popa
je
push
jb
add
push
imul
jb
popa
je
push
jb
add
push
imul
jb
popa
je
push
jb
add
push
imul
insb
outsl
jae
dec
popa
outsb
fs
add
push
imul
jo
outsb
push
gs
gs
add
push
imul
jo
outsb
push
gs
gs
add
push
imul
jo
outsb
push
gs
gs
add
push
imul
insb
outsl
jae
dec
popa
outsb
fs
add
push
imul
insb
outsl
jae
dec
popa
outsb
fs
add
push
imul
jo
outsb
push
gs
gs
add
push
imul
jb
popa
je
push
jb
add
push
imul
insb
outsl
jae
dec
popa
outsb
fs
add
push
imul
insb
outsl
jae
dec
popa
outsb
fs
add
push
imul
insb
outsl
jae
dec
popa
outsb
fs
add
push
imul
insb
outsl
jae
dec
popa
outsb
fs
add
push
imul
insb
outsl
jae
dec
popa
outsb
fs
add
push
imul
jo
outsb
push
gs
gs
add
push
imul
insb
outsl
jae
dec
popa
outsb
fs
add
push
imul
gs
jo
imul
outsb
dec
je
jo
jo
outsb
push
gs
gs
add
push
imul
jb
popa
je
push
jb
add
push
imul
jb
popa
je
push
jb
add
push
imul
insb
outsl
jae
dec
popa
outsb
fs
add
push
imul
insb
outsl
jae
dec
popa
outsb
fs
add
push
imul
jb
popa
je
push
jb
add
push
imul
gs
jo
imul
outsb
dec
je
jo
gs
jo
imul
outsb
dec
je
jo
gs
jo
imul
outsb
dec
je
jo
jb
popa
je
push
jb
add
push
imul
insb
outsl
jae
dec
popa
outsb
fs
add
push
imul
jb
popa
je
push
jb
add
push
imul
insb
outsl
jae
dec
popa
outsb
fs
add
push
imul
jo
outsb
push
gs
gs
add
push
imul
insb
outsl
jae
dec
popa
outsb
fs
add
push
imul
jb
popa
je
push
jb
add
push
imul
jo
outsb
push
gs
gs
add
push
imul
jb
popa
je
push
jb
add
push
imul
jo
outsb
push
gs
gs
add
push
imul
insb
outsl
jae
dec
popa
outsb
fs
add
push
imul
jo
outsb
push
gs
gs
add
push
imul
jo
outsb
push
gs
gs
add
push
imul
insb
outsl
jae
dec
popa
outsb
fs
add
push
imul
gs
jo
imul
outsb
dec
je
jo
insb
outsl
jae
dec
popa
outsb
fs
add
push
imul
jb
popa
je
push
jb
add
push
imul
jo
outsb
push
gs
gs
add
push
imul
jb
popa
je
push
jb
add
push
imul
jo
outsb
push
gs
gs
add
push
imul
insb
outsl
jae
dec
popa
outsb
fs
add
push
imul
jo
outsb
push
gs
gs
add
push
imul
jo
outsb
push
gs
gs
add
push
imul
gs
jo
imul
outsb
dec
je
jo
jo
outsb
push
gs
gs
add
push
imul
jo
outsb
push
gs
gs
add
push
imul
gs
jo
imul
outsb
dec
je
jo
jb
popa
je
push
jb
add
push
imul
jo
outsb
push
gs
gs
add
push
imul
jo
outsb
push
gs
gs
add
push
imul
insb
outsl
jae
dec
popa
outsb
fs
add
push
imul
jo
outsb
push
gs
gs
add
push
imul
insb
outsl
jae
dec
popa
outsb
fs
add
push
imul
jb
popa
je
push
jb
add
push
imul
jo
outsb
push
gs
gs
add
push
imul
insb
outsl
jae
dec
popa
outsb
fs
add
push
imul
insb
outsl
jae
dec
popa
outsb
fs
add
push
imul
jo
outsb
push
gs
gs
add
push
imul
jb
popa
je
push
jb
add
push
imul
jo
outsb
push
gs
gs
add
push
imul
gs
jo
imul
outsb
dec
je
jo
insb
outsl
jae
dec
popa
outsb
fs
add
push
imul
gs
jo
imul
outsb
dec
je
jo
gs
jo
imul
outsb
dec
je
jo
jb
popa
je
push
jb
add
push
imul
insb
outsl
jae
dec
popa
outsb
fs
add
push
imul
jb
popa
je
push
jb
add
push
imul
jb
popa
je
push
jb
add
push
imul
jo
outsb
push
gs
gs
add
push
imul
insb
outsl
jae
dec
popa
outsb
fs
add
push
imul
gs
jo
imul
outsb
dec
je
jo
gs
jo
imul
outsb
dec
je
jo
gs
jo
imul
outsb
dec
je
jo
jb
popa
je
push
jb
add
push
imul
insb
outsl
jae
dec
popa
outsb
fs
add
push
imul
gs
jo
imul
outsb
dec
je
jo
jb
popa
je
push
jb
add
push
imul
jo
outsb
push
gs
gs
add
push
imul
insb
outsl
jae
dec
popa
outsb
fs
add
push
imul
insb
outsl
jae
dec
popa
outsb
fs
add
push
imul
insb
outsl
jae
dec
popa
outsb
fs
add
push
imul
jo
outsb
push
gs
gs
add
push
imul
jb
popa
je
push
jb
add
push
imul
insb
outsl
jae
dec
popa
outsb
fs
add
push
imul
insb
outsl
jae
dec
popa
outsb
fs
add
add
add
add
add
or
add
and
add
addb
addb
add
add
add
add
add
add
or
add
add
cwtl
add
addb
add
mov
add
enter
add
add
loopne
add
clc
add
addb
add
adc
add
sub
add
inc
add
orb
add
pop
add
orb
add
jo
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
loopne
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
inc
inc
xchg
dec
testb
push
inc
inc
xchg
dec
testb
push
inc
inc
xchg
dec
testb
push
inc
inc
xchg
dec
testb
push
inc
inc
xchg
dec
testb
push
inc
inc
xchg
dec
testb
push
inc
inc
xchg
dec
testb
push
inc
inc
xchg
dec
testb
push
inc
inc
xchg
dec
testb
push
inc
inc
in
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
sub
add
add
xor
xor
xor
cmp
xor
xor
bound
xor
add
mov
cmp
add
inc
add
insl
add
add
je
jae
add
inc
add
jae
add
add
outsb
add
add
dec
add
and
bound
jns
and
inc
add
add
add
add
add
jb
arpl
push
add
bound
jae
and
inc
add
insl
add
jb
imul
add
and
push
add
popa
add
add
inc
add
add
add
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
push
add
add
je
push
add
inc
add
add
jb
outsl
add
jo
add
add
cmp
or
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
jbe
outsb
add
jbe
imul
add
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
or
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
outsb
add
jbe
imul
add
add
jb
daa
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
sub
inc
add
add
add
add
add
add
add
add
add
add
add
add
push
add
inc
add
add
jb
outsl
add
jo
add
add
sub
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
jbe
outsb
add
jbe
imul
add
add
js
add
add
add
add
add
jb
imul
je
add
jne
imul
add
dec
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
add
je
push
add
inc
add
add
imul
xor
and
push
add
add
add
add
xor
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
jo
add
imul
inc
add
imul
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
.byte
