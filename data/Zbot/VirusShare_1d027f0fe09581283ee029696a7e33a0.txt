stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
ret
add
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
ret
add
xor
mov
mov
pusha
call
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
add
lea
sub
sub
mov
pop
mov
mov
mov
mov
push
mov
xorl
pop
sub
or
xor
mov
push
push
push
pop
push
pop
stos
shr
stos
shr
stos
shr
stos
pop
pop
subl
neg
clc
sbb
pushl
lea
lea
pop
repz
add
cmp
jne
mov
pop
ret
add
add
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
jmp
ret
and
push
pop
sub
mov
mov
shl
xor
sub
mov
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
je
mov
sub
jb
push
pop
je
popf
push
pushl
decl
ret
or
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
push
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
push
push
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
inc
and
add
and
add
and
add
add
and
add
add
adc
add
in
and
add
add
and
add
and
add
add
jl
add
in
and
add
and
add
and
add
and
add
and
add
add
add
and
add
add
mov
add
dec
and
add
add
add
add
and
add
and
add
and
add
add
add
add
sbb
add
inc
and
add
and
add
add
add
add
insb
and
add
add
add
and
add
and
add
and
add
add
adc
add
add
mov
add
add
add
add
add
nop
and
add
add
add
add
jl
add
movsb
and
add
add
shlb
add
xor
add
mov
and
add
and
add
add
adc
add
in
and
add
add
and
add
and
add
add
jl
add
in
and
add
and
add
and
add
and
add
and
add
add
add
and
add
add
mov
add
dec
and
add
add
add
add
and
add
and
add
and
add
add
add
add
sbb
add
inc
and
add
and
add
add
add
add
insb
and
add
add
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
aad
inc
imul
add
push
gs
imul
add
gs
outsl
jbe
inc
imul
jns
add
repnz
imul
jb
je
arpl
add
rolb
insb
outsl
bound
dec
outsl
arpl
add
add
je
jne
jb
outsb
je
jb
arpl
jae
call
inc
imul
bound
gs
add
roll
dec
gs
jo
jb
add
addl
jb
popa
je
inc
imul
jns
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
insb
outsl
jae
dec
popa
outsb
fs
add
gs
popa
jae
inc
jb
outsl
jb
add
dec
outsl
arpl
inc
insb
popa
addr16
add
inc
gs
je
imul
inc
add
call
inc
imul
bound
gs
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
push
jb
jbe
je
push
jb
imul
inc
add
add
gs
outsl
insl
insl
inc
jb
popa
imul
xchg
add
je
jne
jb
outsb
je
push
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
rolb
jae
imul
mov
inc
imul
dec
gs
popa
addr16
add
jnp
push
gs
outsl
arpl
add
xchg
push
push
gs
jae
addr16
add
xchg
inc
gs
imul
js
push
add
mov
inc
jb
jns
je
imul
ja
jo
imul
pop
dec
jae
outsl
outsl
insl
gs
jnp
inc
gs
imul
outsb
addr16
add
into
pop
dec
outsl
popa
fs
jne
jae
jb
add
imul
jae
popa
addr16
add
jae
push
gs
jne
jae
jb
outsl
jae
add
or
jae
dec
gs
popa
addr16
add
push
push
inc
push
xor
cs
insb
add
add
inc
fs
jae
inc
jns
popa
insl
gs
add
add
je
gs
jns
popa
insl
add
pop
add
je
popa
insl
gs
jns
jns
gs
add
or
inc
gs
gs
imul
push
push
dec
inc
dec
cs
insb
add
dec
jae
popa
je
push
push
inc
add
push
dec
push
push
dec
cs
insb
add
add
push
test
mov
pop
adcl
sbb
xor
roll
cmp
cmpl
sbb
cmpb
lods
pop
les
push
sbb
xorb
inc
repnz
ljmp
inc
test
mov
movsl
inc
aas
fs
jo
dec
dec
xor
jbe
std
out
add
xor
scas
lret
xchg
in
or
hlt
ret
jg
push
repnz
adc
jns
hlt
out
pop
testb
subl
dec
push
leave
imul
sbb
repz
shl
xor
pop
mov
sbb
ficoml
mov
scas
je
pop
or
pop
mov
outsl
jmp
xchg
mov
push
shlb
inc
out
or
pushf
je
cwtl
xchg
xchg
lcall
jo
mov
mov
testb
cli
mov
clc
adc
subl
bound
jle
add
sub
in
aam
adc
test
mov
pop
pop
xor
les
adc
mov
cs
loop
lret
add
ja
icebp
cmp
mov
xor
jo
cmp
testb
dec
loop
pop
mov
cli
lods
cmp
push
cld
mov
loop
mov
cmp
in
sar
cmp
dec
cmp
stos
add
rolb
imul
pop
fs
hlt
cmp
arpl
xchg
cmp
pop
popa
clc
lods
xchg
sub
shl
sarl
push
mov
or
sbb
repz
pop
xor
mov
sub
and
stc
xor
mov
xchg
test
mov
push
xchg
push
sub
dec
pushf
and
push
loop
push
sub
adc
mov
lock
mov
in
pop
rcll
add
add
add
add
xor
add
decl
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
or
add
adc
add
or
add
and
add
or
add
add
add
add
add
add
add
add
push
popa
add
test
add
clc
xchg
add
add
add
add
add
or
add
mov
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
sub
add
movsl
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
fwait
pop
xchg
xchg
xchg
or
jle
jl
jp
lods
stos
lods
add
test
push
mov
mov
mov
les
int3
int3
into
rcl
in
rcl
shl
iret
iret
shl
into
int
hlt
enter
leave
enter
in
mov
mov
lods
lods
lods
lea
fwait
fwait
and
jae
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
sahf
add
mov
jae
mov
out
leave
lret
rcl
cld
xlat
fcom
std
xlat
fdivr
fcomp
fdivr
aam
ror
sar
into
int
aad
dec
iret
iret
inc
ret
std
mov
mov
scas
iret
movsb
mov
mov
xor
and
add
push
add
add
add
add
add
add
add
add
lods
lods
stos
add
scas
scas
sbb
mov
jnp
mov
sar
lret
lret
iret
rcl
aam
fcom
fcomp
fdivr
aad
dec
int
dec
int3
int
aam
aam
int
int3
inc
sarb
mov
scas
lods
std
cmpsb
cmpsl
cmpsb
ljmp
pop
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
push
push
add
inc
add
pop
add
or
inc
or
sbb
add
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
leave
enter
into
call
rcl
fcomp
fdivr
fcomp
call
aam
into
int
dec
lret
int
int3
inc
mov
mov
mov
cmpsl
test
jmp
fwait
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
imul
fs
aas
cmp
das
prefetchw
xor
cmp
cmp
and
adc
add
add
add
add
gs
mov
pop
mov
mov
mov
mov
mov
rol
ret
ret
ret
leave
call
rcl
call
aad
call
aam
dec
iret
sar
enter
inc
ret
mov
mov
ljmp
mov
pushf
xchg
cwtl
xchg
lcall
test
pop
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
add
jo
jg
jle
jge
jg
jo
jno
arpl
mov
cmp
cmp
inc
inc
inc
mov
outsb
outsb
jo
popa
bound
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
enter
lret
lret
lret
lret
enter
mov
mov
scas
lods
scas
jmp
lcall
xchg
xchg
xchg
xchg
xchg
fwait
cltd
fwait
in
test
cmp
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
outsl
outsb
add
pop
or
jnp
xchg
nop
fcoms
addl
jnp
jmp
outsb
jo
push
push
je
jle
jg
js
jp
fs
inc
inc
cmp
sbb
sbb
adc
or
stos
lods
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
test
sahf
sahf
sahf
call
test
incl
xchg
xchg
lahf
sahf
sahf
sti
mov
xchg
xchg
mov
jp
js
das
xor
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
addl
in
mov
incl
xchg
std
mov
jge
jo
jo
jae
je
jle
jg
addb
xchg
push
cmp
ss
jle
cmp
mov
test
lods
sti
lods
lods
lods
lods
lods
lods
test
stos
std
mov
lcall
mov
jge
jns
js
jl
jns
mov
xchg
movsl
movsl
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
push
adc
add
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
xchg
xchg
incl
test
mov
xchg
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
enter
int
mov
mov
push
push
push
push
push
rdmsr
inc
inc
inc
dec
insb
imul
xchg
fwait
lcall
lcall
std
mov
decl
mov
lcall
cmpsl
cmpsl
ljmp
mov
std
mov
mov
mov
std
mov
mov
mov
jnp
or
add
add
pop
pop
adc
cmpsl
lods
call
lcall
incl
xchg
xchg
xchg
xchg
sahf
sahf
popf
std
mov
mov
xchg
in
nop
nop
in
xchg
push
jne
cmovp
add
inc
or
or
sub
dec
dec
outsw
jb
test
xchg
xchg
rclb
xchg
std
decb
xchg
xchg
lcall
movsl
cmpsb
ljmp
test
lods
mov
xchg
test
std
ret
mov
mov
ljmp
sahf
adc
add
add
pop
pop
adc
mov
jmp
pushf
cltd
pushf
decl
mov
xchg
nop
call
xchg
xchg
sahf
pushf
sahf
movsb
movsl
mov
movsl
mov
xchg
fstpt
jl
push
push
push
outsl
dec
dec
dec
pop
bound
jb
jne
jl
jge
test
mov
mov
xchg
testl
mov
jmp
mov
mov
pop
mov
mov
xor
ja
mov
movsb
mov
mov
mov
lods
lods
stos
mov
movsb
movsl
add
mov
add
pop
adc
mov
ljmp
popf
decl
xchg
call
xchg
xchg
call
xchg
fwait
fwait
lcall
sahf
sahf
mov
movsl
mov
out
nop
xchg
mov
xchg
aad
cltd
lcall
lea
stc
xchg
test
std
xchg
jb
lcall
jmp
jnp
mov
jp
mov
je
mov
outsb
ljmp
pcmpgtw
lods
or
ljmp
jg
mov
mov
lods
pushf
movsl
movsb
movsl
and
add
add
mov
add
pusha
adc
mov
ljmp
lahf
call
xchg
xchg
lcall
pushf
pushf
lcall
popf
popf
lcall
xchg
xchg
call
cwtl
xchg
call
cwtl
lcall
fwait
mov
cld
popf
mov
xchg
imul
xchg
dec
jp
lcall
pushf
push
push
jmp
adc
stos
adc
stos
adc
lods
pcmpgtd
scas
adc
mov
push
mov
imul
adc
mov
fwait
scas
mov
scas
lods
scas
movsb
movsl
movsb
sub
movsl
mov
add
add
add
mov
pop
pop
adc
mov
ljmp
popf
call
sahf
popf
lcall
movsb
movsb
jmp
mov
xchg
decl
mov
xchg
xchg
jbe
cltd
jo
cltd
bound
call
sub
decl
pop
call
add
push
lcall
add
ljmp
pushl
push
outsl
pushl
push
jae
mov
and
mov
inc
test
ret
xchg
scas
mov
scas
lods
mov
lahf
mov
movsl
add
pop
pop
adc
lods
mov
mov
lcall
mov
cmpsb
test
cmpsl
cmpsb
cmpsb
ljmp
cmpsl
cmpsl
lcall
orb
mov
decl
sub
mov
incl
or
addb
decl
add
xchg
add
xchg
add
lcall
jmp
push
outsl
pushl
sub
mov
sub
les
jle
enter
enter
movl
inc
mov
mov
mov
mov
mov
add
add
add
push
adc
cmpsl
lods
ljmp
popf
jmp
stos
test
lods
lods
lods
ljmp
mov
lods
scas
scas
jmp
jno
incl
or
push
incl
add
incl
push
incl
add
lea
push
call
add
cltd
add
lahf
add
movsl
add
lods
adc
mov
ss
cmp
leave
cmp
call
cmp
call
cmp
xchg
dec
mov
std
mov
mov
movsl
mov
mov
add
dec
dec
adc
movsb
cmpsl
ljmp
popf
jmp
lods
scas
pushl
mov
pushl
mov
ljmp
jbe
decl
or
mov
pop
incl
or
test
push
incl
add
mov
push
call
add
popf
add
mov
add
lods
add
jno
ret
cmp
dec
inc
call
inc
call
dec
nop
call
dec
xchg
fmuls
fimull
fisttpl
fsts
call
xchg
std
mov
mov
movsb
movsl
movsb
arpl
mov
add
add
add
lcall
adc
jnp
movsl
sahf
mov
lcall
stos
stos
pushl
mov
pushl
mov
mov
mov
jmp
aaa
insl
decl
pusha
decl
push
pop
decl
or
add
nop
add
xchg
add
sahf
add
mov
add
test
add
ja
into
inc
mov
push
cltd
fcoms
ficoml
fcompl
fistps
fistps
jmp
pop
lahf
jmp
pop
mov
fadds
mov
test
sahf
mov
lahf
add
inc
inc
adc
ja
lahf
cltd
popf
jmp
lahf
lcall
mov
mov
mov
mov
mov
mov
mov
ljmp
inc
je
and
xchg
and
xchg
and
xchg
pop
arpl
xchg
sbb
xchg
or
popl
push
call
add
mov
add
stos
add
mov
data16
mov
xor
call
pop
fwait
fldenv
fbld
jmp
mov
jmp
fs
out
test
call
addr16
jmp
xchg
mov
cmpsl
cmpsl
mov
mov
add
add
add
xchg
xchg
xchg
add
inc
adc
jae
cltd
xchg
cwtl
call
lahf
popf
sahf
ljmp
mov
pushl
mov
mov
mov
mov
cmp
sub
fwait
outsb
lcall
sub
xchg
sbb
pop
call
add
mov
add
lods
add
mov
pushl
adc
roll
fsubl
jmp
jo
jmp
jo
call
jb
in
je
jmp
scas
out
jbe
in
jne
out
jae
jmp
mov
mov
cmpsb
test
lahf
sahf
sahf
pop
mov
add
add
add
add
jg
ds
adc
insl
js
mov
lcall
mov
pushl
mov
mov
mov
mov
scas
lcall
xor
sahf
cmp
mov
xor
lcall
call
add
add
stos
add
mov
pushl
add
enter
fsts
jmp
js
jmp
jg
in
xorb
repnz
hlt
xchg
push
cmpb
mov
shl
stos
test
pushf
pushf
pushf
daa
mov
lahf
mov
add
pusha
add
cmp
pop
pusha
pop
jne
jge
out
xchg
xchg
xchg
xchg
pushl
mov
mov
mov
ret
ret
inc
ret
sar
mov
jmp
cmp
mov
inc
jle
movsb
aaa
jbe
lcall
lcall
pop
ljmp
add
add
mov
add
shlb
cmp
call
mov
push
mov
push
xchg
ret
xchg
sar
nop
push
nop
ret
clc
xchg
clc
mov
out
pop
fidivl
ret
clc
stos
stos
stos
mov
sahf
pushf
xor
pushf
sahf
add
add
add
cmp
push
inc
dec
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
mov
inc
ret
inc
mov
mov
jge
lcall
dec
cmp
movsb
xor
lcall
add
mov
add
lods
add
mov
arpl
mov
add
movl
mov
out
xchg
fwait
push
lcall
cmc
lcall
clc
popf
lret
cli
sahf
int3
cli
lahf
int
cld
cwtl
lret
xchg
ret
fbstp
cli
mov
mov
mov
xchg
xchg
add
add
add
das
cs
cmp
dec
jecxz
pop
call
mov
mov
mov
mov
inc
inc
mov
lahf
jmp
push
mov
lods
dec
xchg
mov
push
pop
lcall
pop
ljmp
add
mov
add
enter
rorl
je
loopne
xchg
out
mov
push
movsl
int3
push
cmpsb
into
stc
cmpsl
iret
sti
test
into
cli
test
cld
stos
iret
std
stos
iret
test
push
popf
mov
dec
enter
mov
into
sahf
lahf
lahf
dec
xchg
xchg
xchg
add
fwait
lcall
xor
add
sub
or
inc
bound
push
xlat
jae
jb
mov
mov
ret
rol
ret
ret
dec
leave
inc
rol
mov
cmpsl
jmp
push
mov
lods
dec
test
mov
add
movsb
add
lods
add
mov
mov
add
int
outsl
call
add
loopne
jnp
out
pop
cmpsl
push
lahf
leave
sti
scas
aam
sti
mov
cld
mov
cld
mov
mov
cld
mov
cld
mov
std
mov
mov
cld
mov
push
movsl
mov
dec
enter
mov
ficompl
xchg
xchg
or
add
add
xor
sbb
sbb
outsb
outsl
outsb
mov
vpsubusb
fsubr
aam
not
rcl
std
lret
int
dec
leave
leave
dec
leave
lret
dec
lret
lret
leave
mov
lods
jmp
push
mov
lods
cmp
jmp
add
lods
add
mov
fs
mov
add
roll
outsb
call
add
fiadds
jne
ljmp
sti
scas
sar
cld
mov
mov
fdivr
mov
cld
mov
fcos
inc
fcos
mov
int
out
call
lret
int
mov
sahf
lahf
jo
xchg
xchg
or
add
add
xor
add
pop
or
leave
movb
in
out
call
test
jecxz
leave
fsubp
fcmovu
fcomp
fsqrt
aad
xlat
std
into
iret
iret
mov
imul
jmp
add
mov
popa
mov
add
lret
call
add
fildl
jne
in
ja
out
xor
cld
mov
inc
loope
std
loope
std
inc
dec
dec
inc
fdivrp
dec
dec
sti
mov
lret
leave
into
mov
mov
xchg
adc
add
add
std
std
add
incl
std
incb
hlt
div
or
out
jmp
in
out
in
sub
out
in
dec
ljmp
xchg
out
jmp
aad
fcmovnu
jmp
mov
xchg
cmpsl
cmp
movsl
adc
pop
ljmp
add
add
les
push
int
insl
call
add
loopne
ja
jmp
inc
fwait
sti
mov
loop
cld
int3
jecxz
std
into
out
dec
in
dec
loop
std
int3
jecxz
std
int3
loopne
dec
in
shl
shl
std
shl
cld
out
mov
inc
cmpsl
cmpsb
mov
cwtl
cwtl
add
add
add
std
incl
incl
idiv
clc
add
repz
repz
out
icebp
lock
out
icebp
out
cmp
out
in
pop
fnstsw
loopne
mov
xchg
sti
mov
add
pop
ljmp
inc
add
leave
add
roll
jb
flds
je
in
jp
in
push
pop
stos
cli
mov
dec
in
std
iret
in
shr
shr
shl
std
aad
fsubr
fsubr
fucomi
fucomi
fldl2e
cld
iret
loope
hlt
aad
in
lret
rep
stos
test
and
xchg
xchg
add
cli
add
std
clc
add
cli
cli
add
cmc
repz
aam
xor
mov
xchg
negb
add
test
pop
ljmp
add
les
push
call
add
faddl
jne
out
jns
out
sbb
sti
std
fldl2t
std
fucomi
std
std
fldl2e
std
fucomp
std
fsubr
fsubr
fsubrp
std
fucomip
fucomip
cld
aam
push
ret
jmp
aad
call
iret
sar
lods
lods
stos
lods
xchg
xchg
xchg
outsl
jo
add
add
mov
loope
add
leave
lds
lods
jge
repnz
jmp
add
mov
add
int3
add
aam
jno
loopne
jae
ljmp
cld
mov
std
shl
fdivp
fsubr
std
fucomi
std
fucomi
xlat
out
std
aam
std
aam
cld
shl
cld
shl
push
iret
fdivrp
test
in
mov
xlat
sti
mov
mov
fwait
cltd
lcall
cltd
cltd
add
xlat
add
leave
adc
lods
mov
lcall
add
mov
mov
add
roll
outsb
fadds
je
loop
jp
call
aaa
xchg
cli
xchg
sti
leave
loope
cli
lret
sti
clc
rcr
idivb
sar
lock
iret
in
mov
lret
jmp
rcl
call
vmaskmovdqu
fsub
cmc
loopne
mov
mov
xchg
add
add
add
int
add
mov
loopne
xor
jmp
add
mov
gs
mov
add
into
or
rorl
ficoml
jns
loope
cmp
call
scas
lret
call
scas
std
loope
cld
fidivs
neg
mov
lret
ret
int3
in
enter
into
aad
loope
fcmovnb
out
loopne
jmp
out
repnz
out
popf
ljmp
push
stos
lods
lods
adc
test
cmpsl
add
popf
stos
aam
dec
jg
popf
sbb
cmpsl
push
imul
and
js
mov
inc
test
ret
stc
leave
gs
mov
out
mov
rcl
ror
aam
lret
rcl
int
int
mov
xlat
rcl
jg
fcmovu
jb
gs
in
out
out
ljmp
sub
cmc
mull
repnz
icebp
sbb
or
mov
int3
add
add
add
mov
roll
mov
test
pushf
cmc
mov
je
ljmp
mov
sarb
mov
les
rcrl
int3
jp
int
addr16
iret
push
iret
rcl
dec
xlat
xlat
inc
aam
xor
fcmovu
daa
fcomp
fcompl
fcmovu
ficoms
fucom
loop
in
call
icebp
in
add
sti
testb
std
add
incb
incl
mov
mov
shrb
mov
mov
mov
mov
mov
mov
mov
mov
rcll
ret
inc
ret
leave
xor
int
daa
int
iret
and
aam
sbb
rcll
rcl
aam
rcl
aad
rcr
add
fcmovnu
add
add
in
add
in
jmp
lret
add
std
add
mov
add
rol
ret
sub
ret
ret
sub
mov
mov
push
rol
or
enter
enter
int
add
aad
add
xlat
aam
rcr
add
add
aad
add
xlat
loope
aad
add
loop
add
add
out
add
icebp
lock
std
add
std
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
ret
mov
ret
ret
mov
mov
mov
ja
test
test
xchg
xchg
xchg
pop
add
add
add
add
add
add
scas
scas
mov
mov
mov
mov
enter
into
jmp
aam
cmc
aam
aam
iret
iret
sar
int
int3
stc
lret
lret
int3
hlt
mov
mov
iret
lods
lods
lods
fwait
xchg
xchg
xchg
dec
aas
ds
and
add
sbb
add
adc
add
push
add
add
cmpb
aas
inc
inc
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
leave
cld
iret
into
into
aad
call
aad
call
rcl
dec
into
iret
dec
lret
sarb
cld
stos
stos
stos
icebp
cltd
xchg
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
jae
jae
jae
gs
dec
dec
dec
cmp
sub
sub
xor
dec
sub
inc
adc
sub
add
add
mov
mov
mov
mov
mov
mov
dec
lret
rcl
sar
rcl
aam
lret
lret
mov
mov
ljmp
popf
popf
cwtl
cwtl
xchg
jmp
jo
xchg
pop
adc
add
add
add
add
add
addb
addl
aam
push
mov
push
push
push
stos
push
push
push
pop
pop
cmp
cmp
pop
outsl
outsl
jno
scas
mov
pop
mov
mov
mov
mov
mov
rol
mov
inc
mov
mov
mov
ljmp
lcall
xchg
xchg
xchg
cltd
cltd
lcall
dec
dec
dec
movups
add
add
add
add
add
pop
cltd
fwait
lcall
xchg
lcall
addb
jl
jge
js
jp
jnp
jnp
jp
jns
jb
je
push
push
push
cmp
je
pushf
pushf
sahf
mov
lods
scas
rep
lods
scas
sti
scas
scas
scas
std
test
sahf
sahf
call
xchg
call
mov
scas
jmp
lods
scas
leave
cmpsb
cmpsb
movsb
cltd
je
je
adc
adc
add
add
add
add
outsb
outsl
outsl
pop
xchg
mov
mov
xchg
std
mov
xchg
lock
nop
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
jo
outsb
orl
lcall
lea
call
pushf
popf
ljmp
test
mov
mov
mov
xlat
movsl
mov
addb
add
add
add
add
pusha
or
lods
mov
cmpsl
sahf
movsb
decl
mov
lcall
popf
lahf
sti
mov
cwtl
cltd
call
push
push
push
jo
pop
push
outsl
insl
outsl
insl
xchg
subl
mov
lcall
popf
pushl
outsb
xchg
mov
push
mov
mov
mov
out
scas
stos
insl
test
add
add
add
add
popa
or
mov
in
mov
nop
call
xchg
call
lcall
fwait
sahf
sahf
cli
xchg
xchg
cwtl
jmp
xchg
xchg
aam
mov
out
xchg
jbe
notb
cmp
dec
jnp
movsb
inc
js
scas
ss
mov
jb
mov
outsl
pushl
sbb
mov
mov
scas
scas
jle
movsl
movsb
push
pusha
pop
popa
or
mov
in
movsl
cmpsl
call
sahf
popf
jmp
mov
xchg
decl
addl
xchg
jno
cld
xchg
pop
cmp
dec
js
cmp
nop
sub
xchg
sbb
punpcklbw
sahf
punpckldq
cmpsl
pop
imul
mov
insb
pushl
push
jno
mov
pop
mov
scas
scas
xchg
lahf
sahf
lahf
adc
add
add
pusha
pusha
pop
or
lods
mov
test
mov
test
stos
stos
stos
ljmp
xchg
cltd
decl
push
mov
decl
adc
xchg
push
decl
add
call
add
test
pushl
sub
mov
xor
enter
leave
xor
xchg
inc
stos
mov
mov
scas
movsb
test
test
pusha
pop
popa
or
movsb
stos
in
mov
test
scas
scas
scas
pushl
mov
jmp
aas
jno
mov
pop
decl
or
push
push
decl
add
xchg
add
sahf
add
cmpsb
add
mov
outsb
inc
cmp
call
inc
mov
roll
call
inc
nop
fadds
call
bound
stc
mov
mov
mov
std
add
add
add
pusha
or
sahf
mov
ljmp
mov
pushl
mov
ljmp
jl
mov
call
pop
pop
decl
add
xchg
add
mov
add
lods
add
ja
rorl
fcomps
ficompl
ficomps
loope
mov
jmp
insl
cmpsb
dec
test
cld
mov
mov
cmpsb
stos
cmpsb
xor
add
add
dec
pop
jge
jnp
fwait
xchg
cwtl
jecxz
mov
scas
pushl
mov
mov
lcall
sub
lcall
and
xchg
cvtdq2ps
xchg
add
popf
add
cmpsb
add
scas
add
mov
xor
jmp
insb
test
out
lods
ljmp
out
jae
jmp
test
std
mov
cmpsl
test
add
add
add
dec
pop
outsb
outsb
push
mov
xchg
pushl
mov
mov
mov
jbe
lcall
cmp
sahf
sub
cwtl
or
pushf
add
mov
add
mov
fs
or
xchg
jmp
jp
jmp
mov
push
xchg
xrelease
mov
push
cltd
cltd
lcall
sub
push
push
push
dec
pop
addr16
loopne
mov
mov
mov
ret
mov
popf
jmp
inc
cmp
sub
lcall
ljmp
add
add
int3
adc
fbld
in
pop
push
xchg
xchg
push
cltd
stc
lcall
notb
inc
mov
stos
popa
mov
add
add
xor
inc
pop
pop
pop
pop
fisttpl
mov
mov
rol
inc
xchg
test
ljmp
imul
add
pusha
pushl
dec
add
fldenv
cmp
jnp
push
movsb
lret
push
test
sar
cld
test
iret
cld
lods
sar
cli
test
jmp
mov
inc
rol
test
sahf
pushf
or
add
add
dec
push
push
aaa
jb
je
stos
stos
stos
ror
into
int
lret
int
cmc
leave
lret
lret
sti
leave
leave
enter
mov
bound
mov
add
mov
fs
add
into
add
flds
jne
ljmp
sti
mov
cld
mov
fdivr
mov
xlat
std
mov
sar
ljmp
repz
scas
mov
add
add
add
add
pop
or
aad
dec
loopne
jecxz
fsubp
fistps
fcmovnu
xlat
fsubr
shlb
cmpsl
sub
jmp
add
mov
add
xlat
add
or
repnz
mov
sti
loopne
inc
loopne
inc
dec
std
leave
loopne
std
lret
std
out
mov
leave
divb
sahf
sbb
add
add
incb
incb
jmp
in
sbb
in
in
xor
loop
jecxz
mov
mov
mov
add
mov
fs
add
into
add
fildl
jne
ljmp
std
ret
std
shl
shl
call
in
shl
std
xlat
call
shl
push
enter
int3
sar
mov
mov
mov
add
add
std
incl
std
add
std
std
pop
aad
aad
mov
pop
mov
lahf
or
stos
add
mov
fs
add
roll
jo
fiadds
jbe
out
and
shl
fsubr
std
fldl2e
xlat
jmp
cld
xlat
out
std
fld1
cld
aam
push
xlat
jmp
rcl
sti
mov
sahf
sahf
das
add
add
int3
into
int
mov
fs
lahf
adc
stos
add
mov
add
add
loop
js
out
xor
cli
int3
loop
clc
lret
cmc
vpaddd
aad
icebp
ret
out
ret
in
sar
out
aad
ljmp
ljmp
stos
das
std
incl
aad
push
mov
je
or
mov
insb
inc
sbb
int
jnp
aad
test
loopne
lcall
mov
out
loop
lret
jmp
fdivrl
leave
loopne
sarb
in
ficompl
out
call
rorb
mov
add
stos
stos
stos
add
xchg
movsl
les
pop
xchg
mov
fidivrl
jg
rol
lods
mov
mov
ret
mov
int3
insl
aad
int
ror
rorl
fcomp
cmp
das
in
frstor
jecxz
icebp
adc
in
in
or
std
add
add
add
std
add
mov
outsb
scas
mov
lods
mov
push
mov
mov
shrl
leave
enter
rclb
sarl
or
or
into
int
stos
stos
stos
add
std
std
add
std
std
add
add
add
int
pextrw
or
into
into
int
lods
stos
stos
add
std
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
lcall
rol
enter
mov
mov
mov
mov
insb
lods
stos
stos
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
lods
stos
lods
add
mov
jmp
aad
std
rcl
sar
int
iret
std
mov
stc
mov
mov
roll
pop
add
add
add
add
add
add
add
add
jb
jae
addr16
inc
das
das
cs
inc
inc
inc
and
add
add
mov
mov
cmpl
dec
int
call
rcl
dec
iret
iret
inc
enter
mov
lcall
mov
push
add
add
add
add
jne
jae
xchg
aad
outsb
outsl
ret
arpl
outsl
outsb
outsl
jb
popa
pusha
cmp
pusha
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
lcall
cwtl
xchg
lds
jno
daa
and
add
add
add
jb
jb
fwait
xchg
pushf
mov
xchg
mov
xchg
test
test
imul
mov
into
mov
mov
xchg
decb
mov
fwait
fwait
popf
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
push
add
add
xorb
lods
movsb
test
stos
mov
mov
lea
cld
popf
pushf
popf
cmc
cltd
cltd
cltd
in
test
push
imul
jle
lea
xchg
notl
mov
pushl
push
lcall
lods
scas
push
stos
lods
lods
add
add
add
mov
mov
lods
cld
xchg
xchg
xchg
call
lcall
xchg
lcall
xchg
mov
loope
je
out
nop
arpl
std
pushf
inc
jbe
cmpsb
ss
lods
sub
mov
outsl
pushl
aaa
jl
mov
mov
imul
int3
add
xchg
pop
scas
movsb
stos
test
lahf
popf
popf
jmp
mov
xchg
decl
ja
nop
inc
jb
mov
imul
sbb
pop
call
or
scas
sbb
je
mov
sub
lds
test
rcrb
subl
jae
push
movsb
fwait
mov
cld
test
test
scas
scas
mov
scas
scas
mov
lahf
xchg
decl
or
xchg
push
decl
add
mov
adc
shll
dec
ds
iret
inc
mov
aad
call
dec
xchg
dec
lcall
mov
add
add
imul
cmpsb
mov
scas
pushl
mov
ljmp
cmp
xchg
pop
call
push
push
call
add
lods
add
mov
push
xchg
fistpl
jmp
pop
mov
jmp
movsl
call
lcall
cmpsb
cmpsb
cmpsl
pop
add
add
popa
arpl
mov
lcall
mov
mov
lcall
xor
lcall
jmp
add
mov
xor
jmp
outsl
stos
jmp
ja
jmp
mov
out
jle
push
jle
ficompl
mov
and
add
add
dec
adc
push
cmp
mov
mov
ret
mov
fs
movsb
inc
jge
mov
add
ljmp
add
les
insb
fisttpl
in
mov
push
xchg
push
xchg
push
xchg
jmp
cmpsl
mov
movsl
cmpsb
sub
aas
aas
aas
adc
push
xchg
mov
mov
inc
ret
vcmpsd
ljmp
sbb
movsb
add
mov
gs
add
aam
ja
in
outsb
scas
clc
cmpsb
into
cli
stos
sar
cld
lods
sar
sti
scas
sar
cld
lods
sar
ljmp
fldenv
std
incb
xor
xor
scas
mov
mov
mov
aam
rcl
shr
leave
enter
xchg
jmp
add
les
imul
add
call
pop
cld
mov
fdivr
std
ret
std
rcr
inc
out
mov
ret
cmpsl
test
jg
addl
stos
lods
lods
add
jmp
or
out
jmp
outsb
movsl
and
pop
mov
add
fldl
ja
out
cmp
cld
into
out
std
iret
in
call
in
shl
std
aam
push
enter
enter
lods
scas
popa
addb
add
std
add
incb
lret
int3
shrl
mov
add
mov
add
loop
jns
repz
cmpsb
std
loopne
aad
aam
std
aam
std
shl
cli
shl
push
leave
fsin
fcmove
shl
mov
mov
xchg
xchg
xchg
pop
scas
mov
cld
lods
add
insb
dec
or
fistps
cmp
insl
lods
cld
lock
shl
call
ror
call
lret
ljmp
scas
ret
cltd
lcall
add
add
pushf
lods
xchg
and
push
mov
shll
lret
mov
mov
int3
adc
into
outsl
xlat
int3
into
pop
xlat
dec
jecxz
fistpll
out
call
sbb
rol
add
mov
cmp
mov
scas
push
mov
mov
les
lret
sbb
bswap
int
or
aam
push
std
incb
addb
add
add
add
mov
incl
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
std
adc
xchg
sub
arpl
dec
mov
rcl
repz
rclb
icebp
mov
fidivs
push
cld
xchg
scas
mov
sbb
and
iret
push
pop
push
xchg
jae
cmc
movsb
mov
pop
in
jl
testl
lds
mov
jp
mov
add
inc
push
pop
mov
gs
xchg
mov
xor
call
or
cmp
adc
outsl
push
mov
lea
in
mov
push
add
jno
lret
xchg
icebp
mov
test
xsha256
cmpsb
push
std
push
popf
cmp
mov
mov
fsubrl
push
hlt
pusha
mull
inc
jle
js
movsl
cmp
cltd
pushf
xor
ret
pop
or
mov
js
inc
fsubrs
jge
xchg
scas
xchg
testb
out
stos
sbb
cmp
push
cmp
leave
push
pop
lock
mov
mov
bndstx
and
add
pop
test
ds
and
outsl
and
push
nop
inc
fcmove
jae
out
mov
sbb
dec
lods
jg
fists
mov
es
fldcw
mov
test
jmp
adc
aas
pushf
xor
push
lods
js
mov
lret
into
gs
xchg
out
push
out
mov
outsb
add
cmp
pop
mov
nop
pop
mov
push
mov
lahf
fnstsw
mov
int3
std
push
push
lds
stc
nop
shlb
dec
jecxz
adc
iret
inc
subb
fs
in
xchg
aad
pop
pop
mov
or
sub
sub
les
pop
mov
pop
dec
loope
mov
es
push
inc
xor
push
push
jmp
inc
movsb
cmp
jb
xchg
ret
notl
ja
dec
scas
insl
pusha
mov
ja
andl
push
clc
lahf
xchg
sub
sbb
mov
and
sti
xchg
mov
les
in
xor
mov
or
sub
jae
pop
sub
mov
dec
ffreep
or
mov
jecxz
std
adc
aaa
mov
add
mov
xor
xchg
sub
jbe
mov
mov
adc
in
inc
add
arpl
fsubr
orl
sub
lahf
pop
sti
jmp
sub
dec
or
add
stc
push
repz
fsubl
arpl
jbe
sahf
xor
leave
sbb
ss
cmp
stc
nop
hlt
nop
adc
stc
nop
adc
ss
scas
addr16
xor
or
ficoml
or
sub
mov
inc
in
es
into
gs
lods
inc
add
in
orl
mov
stos
ljmp
mov
std
push
inc
fldl
mov
inc
ret
stc
hlt
dec
mov
sbb
mov
ss
push
out
inc
cli
xchg
jae
fdivl
xchg
sbb
xchg
out
int
mov
scas
out
push
jmp
or
into
cmp
push
in
mov
nop
daa
shrd
fbstp
scas
inc
bound
xchg
sub
or
mov
mov
test
ljmp
sub
lahf
pop
cli
in
subl
mov
jle
inc
lahf
sub
push
icebp
inc
frstor
jae
sbb
lahf
ss
xchg
sbbb
sbb
aaa
sbb
jae
cmp
xchg
repnz
jae
adc
mov
loope
xchg
adc
into
xchg
xor
scas
push
mov
cmp
pop
inc
fimull
xchg
xor
sarl
mov
sub
rol
jns
pop
add
pop
xchg
insl
add
ret
hlt
mov
pop
jecxz
mov
push
jmp
xchg
shrl
ret
repz
repz
nop
sarl
xchg
das
js
pop
popl
lcall
jne
popf
cs
in
pop
mov
jbe
lds
int
push
pop
icebp
pop
mov
xchg
fbstp
and
push
call
scas
rcr
je
iret
in
std
sub
xor
int
push
jns
xor
iret
dec
in
ret
jecxz
cmc
sbb
push
inc
insb
push
lods
cltd
gs
xchg
mov
sbbb
adc
lret
rcrl
ja
cwtl
popa
fbstp
mov
std
xchg
in
ds
outsb
inc
mov
jne
cmc
mov
test
mov
and
stos
pop
push
daa
mov
add
je
dec
pop
push
in
mov
adc
lret
and
lods
inc
mov
jne
or
jo
dec
pop
shrl
cwtl
rcrl
mov
dec
dec
xor
test
sbb
or
jge
and
fisubl
es
dec
sub
jge
jns
rep
scas
inc
xchg
cs
dec
iret
data16
xchg
sub
lods
sub
scas
inc
push
mov
pop
scas
popa
cmp
push
rcrl
push
out
hlt
cmp
popf
xor
mov
cltd
xor
cmp
add
lds
clc
inc
mov
je
pop
mov
fwait
xor
dec
movsl
cmp
sbb
dec
stos
dec
in
fsubrl
push
inc
fiadds
and
adc
add
add
add
and
xchg
sub
sbb
sub
sti
test
sub
cmpsb
scas
rep
cmp
jns
mov
sub
out
cld
mov
fsubrl
jg
push
scas
or
mov
mov
leave
pusha
add
notb
mov
fs
outsb
jno
lahf
push
es
popl
cwtl
mov
outsb
dec
out
sbb
jl
fucomp
jg
push
out
xchg
xchg
sti
xchg
leave
jecxz
data16
jbe
add
xor
hlt
mov
pop
stc
nop
mov
push
cmp
iret
sbb
xchg
or
jne
sbb
mov
add
scas
push
call
xchg
icebp
pop
and
xor
into
in
jne
and
je
out
pop
sahf
sbb
adc
inc
and
mov
enter
push
ljmp
jp
xor
or
pushf
xor
push
aam
addb
push
xor
cld
sub
xor
xchg
mov
ss
dec
or
inc
fwait
aaa
into
shlb
add
icebp
push
in
es
xchg
sub
push
inc
xchg
scas
mov
fdiv
xchg
out
bound
mov
cltd
in
repnz
mov
loop
add
lahf
outsl
cmp
mov
loop
pop
fistpll
fsubrs
mov
push
jecxz
insl
and
mov
xor
in
popa
clc
and
popf
jnp
jecxz
cs
xchg
fdiv
shrl
inc
insl
jb
xor
sub
repz
icebp
jns
and
or
imul
jnp
aad
and
pop
cs
adc
es
sub
testl
dec
das
jl
fdivl
cmpsb
inc
xchg
sahf
xor
test
daa
mov
cmp
enter
lea
iret
adcl
out
pop
call
adcl
rcrb
scas
lea
cltd
jnp
add
gs
out
mov
and
sbb
jns
aaa
into
mov
fistpll
rorb
fsubrs
xor
dec
js
mov
fidivl
shrl
rolb
or
push
fidivs
ja
stos
movsb
jbe
rol
dec
mul
cmpsb
mov
dec
xor
lahf
gs
or
ret
xchg
lods
hlt
fnstenv
dec
dec
sub
xchg
xchg
cs
fisubrl
lds
bswap
gs
pop
testl
fcmovbe
les
std
inc
sub
jno
dec
stos
inc
addl
lock
or
adc
sub
mov
jge
ds
sahf
fsubr
iret
lret
sub
std
lock
and
fsubr
push
inc
push
and
mov
les
push
push
adc
testl
les
inc
ficoml
add
cmc
mov
data16
lea
scas
inc
loopne
inc
fmuls
push
xor
aaa
das
pop
negb
gs
sub
push
in
pop
out
aam
and
push
pop
push
xchg
stos
rorb
mov
cmpsl
sbb
dec
push
jns
nop
lods
iret
mov
je
push
push
lret
sti
leave
stc
nop
sti
sbb
jle
xor
lock
les
sbb
repnz
inc
lock
sub
cli
jl
insl
testl
xor
jle
or
mov
sti
push
sbb
mov
or
test
or
xchg
inc
mov
gs
movsl
jbe
mov
jbe
shrb
mov
stc
js
mov
dec
bound
add
repz
or
ds
and
jmp
xor
and
add
pop
xor
xchg
jne
leave
repz
mov
negb
mov
sbb
xchg
mov
gs
lahf
test
push
and
xchg
ret
int
cmpsl
mov
std
repnz
cltd
aam
js
xor
dec
cmp
fsubr
cmc
jbe
and
shll
lds
cld
push
mov
or
test
imul
scas
add
pushf
insb
dec
pop
mov
in
cmp
loop
xor
mov
jae
movsl
in
fstl
jg
dec
lahf
adc
push
mov
into
adcl
xchg
or
inc
je
sti
jle
lock
xor
jle
call
lahf
insl
adc
xor
imul
arpl
insl
inc
adc
loop
mov
mov
push
xchg
loope
ficoms
lea
in
sbb
rcl
push
mov
jbe
push
addr16
iret
sub
fisttpl
mov
mov
cmpsb
sbb
sub
int
cmp
popa
dec
sti
sar
jns
pop
movsl
int
push
jmp
push
inc
stos
and
stos
xor
xchg
dec
icebp
movsl
loope
mov
jbe
push
jne
loopne
lcall
sbb
or
nop
ds
sbb
mov
pop
push
test
pop
lods
cmpsl
push
mov
mov
or
cmp
stos
call
cmp
icebp
inc
sbb
jae
fnstcw
add
jb
push
popf
and
push
cmpsb
std
outsl
push
jne
lods
xchg
add
lcall
pop
jecxz
mov
adc
movsb
pop
popf
xor
push
arpl
xor
mov
xchg
rcrl
add
fidivrs
incl
mov
xchg
lcall
aas
cmp
scas
push
adc
jge
jmp
xor
repnz
adcl
cmp
in
data16
idiv
jb
pop
enter
and
xchg
fisubrl
cs
fwait
and
xor
push
dec
cmc
push
scas
loopne
mov
cmpsb
gs
or
xor
jno
ss
in
xlat
cli
data16
dec
jns
addb
mov
sbb
pop
xor
inc
fldcw
mov
sti
leave
int
add
adc
xor
adc
mov
rol
mov
call
jo
mov
push
out
or
xchg
add
push
mov
or
enter
inc
jmp
movsb
cmp
push
scas
or
mov
jo
sbbb
and
in
lods
inc
and
insl
add
dec
fidivs
ret
in
cld
xchg
ret
or
sbb
lods
cmp
iret
dec
xchg
push
in
xchg
rolb
jno
je
mov
and
sub
xor
and
push
call
out
mov
sbb
or
test
mov
mov
push
out
sar
lret
bound
sbb
inc
sub
adc
data16
push
std
pop
sahf
jnp,pt
sbb
fisubl
lret
mov
xor
popa
clc
stos
pop
shrl
ret
jg
cmp
pop
mov
outsb
lcall
mov
dec
loope
push
call
call
testl
imul
pop
lea
and
jp
pop
hlt
les
add
fdivrp
xchg
and
mov
sahf
dec
sbb
jae
test
roll
xchg
pop
mov
pop
out
pop
xlat
aad
mov
jbe
cwtl
loopne
mov
lahf
les
mov
aad
sub
jb
dec
dec
loop
jge
nop
xchg
ja
add
xchg
fiadds
ss
mull
jmp
arpl
or
nop
daa
aas
add
xchg
jns
mov
xor
sar
addl
or
gs
mov
lods
lea
int3
mov
stc
cmc
in
outsb
pop
pop
inc
fcomps
add
js
pop
divb
and
enter
std
loope
xor
push
dec
in
adc
add
fsubrs
fisttpll
lea
aad
stos
cld
xlat
outsb
in
push
xor
cmpsb
or
cltd
mov
int
mov
dec
outsl
push
mov
ret
cmp
dec
loope
fldcw
call
add
jle
dec
add
popf
inc
bound
mov
mov
leave
sub
in
inc
dec
loop
cmpsl
jnp
clc
xchg
imul
in
mov
inc
push
mov
cmp
cmp
pop
mov
int3
loop
pop
push
and
inc
pop
xor
lahf
outsb
push
mov
mov
cmp
in
jle
push
push
pop
repnz
das
pushf
xor
jb
adc
xchg
sarl
pop
test
shrl
inc
and
jne
add
pop
cmpsl
pop
mov
inc
push
jmp
jmp
aam
fiadds
repnz
push
mov
adc
idivl
das
xchg
int
jae
mov
ljmp
jge
lahf
sbb
mov
adc
jp
xor
mov
repz
fisttpll
and
jnp
fimull
add
cltd
xor
fidivl
ds
jbe
jl
js
pop
popf
addb
je
shlb
xchg
adc
hlt
xor
lds
pop
or
repnz
sub
jle
jns
pop
cwtl
dec
loopne
jbe
cs
out
push
mov
call
adc
jnp
push
movsb
cmp
add
add
stos
push
sub
ja
jge
leave
fsubrl
mov
stc
enter
and
adcb
dec
cmp
js
sahf
xor
or
jbe
pop
ror
popa
mov
shr
jg
mov
mov
fcoml
cmpsl
sbb
adc
push
inc
xlat
add
cmc
mov
push
sub
jl
cltd
inc
mov
xor
pop
cmpsb
cmp
daa
mov
pop
loope
pop
add
jecxz
fwait
sub
mov
mov
pop
mov
lret
pop
ds
cmp
jb
pop
repz
fdivrs
leave
outsb
js
ret
das
adc
testb
add
ja
movb
mov
xchg
mov
fs
add
sbb
add
cs
aas
xchg
nop
daa
gs
pop
out
mov
jbe
adc
arpl
xchg
mov
mov
ret
scas
sub
or
add
out
test
popa
clc
sub
mov
push
shrl
sbb
dec
fildll
lods
inc
xor
pop
lret
pop
test
outsb
mov
scas
jle
mov
and
aam
mov
stc
mov
repnz
fsubrs
out
and
cmpsl
aaa
pop
mov
mov
lods
inc
mov
fxch
bound
push
data16
nop
or
mov
mov
fsubs
fldcw
ret
dec
ss
push
insb
insb
add
jl
xchg
sbbl
mov
cmp
cmp
pop
daa
xchg
pop
repnz
inc
out
jns
das
outsl
repz
dec
mov
popf
sbb
mov
mov
aas
test
enter
dec
in
ss
inc
or
add
mov
int3
and
pop
xlat
inc
xlat
add
outsb
push
sub
popa
jg
mov
jl
sti
cmp
mov
adc
xor
cmp
push
lret
ret
ftst
xlat
outsb
add
imul
sub
mov
mov
dec
jnp
stos
bound
lds
dec
out
dec
out
adc
imul
lds
call
jno
sbb
add
icebp
sub
enter
stc
loope
loope
adc
incl
lds
xchg
mov
aam
cwtl
sti
fdivl
mov
xchg
in
sbb
aaa
add
jnp
adc
in
lods
xor
inc
push
cltd
xor
push
in
push
mov
dec
ds
add
data16
cwtl
adc
xorb
rcrb
es
dec
ds
fildl
push
out
xlat
push
stc
xchg
icebp
test
mov
mov
xor
inc
aas
mov
jbe
fcmovu
jno
in
test
daa
clc
jo
or
int3
lcall
sti
xor
repz
push
in
insl
sbb
cmp
jno
scas
cmp
es
scas
inc
xchg
int3
arpl
sahf
in
cmp
ljmp
sbb
dec
outsl
ss
popa
push
out
xchg
pmulhuw
push
stos
ret
jge
inc
push
loopne
xchg
test
arpl
fsubr
xor
pop
or
mov
daa
mov
cmp
inc
fcoml
popa
push
cli
inc
push
xchg
scas
cmp
mov
ret
pop
sbb
cmp
push
pop
lret
cmp
test
cmpsb
or
js
shl
lock
sub
dec
fildll
les
xchg
mov
test
jo
test
cltd
mov
cmp
fdivs
pop
sub
into
gs
fbstp
sahf
clc
pop
push
std
xchg
lcall
mov
lock
icebp
cmp
or
fs
andb
out
pop
stos
sbbb
jb
or
jnp
aaa
mov
fisubrl
dec
clc
fmul
arpl
adc
mov
movsb
adc
arpl
mov
ljmp
sbb
mov
test
mov
jae
inc
fsubl
iret
arpl
add
lret
bound
xchg
aam
lahf
ss
sbb
pop
jbe
mov
dec
arpl
or
es
fidivrl
sbbl
je
and
mov
mov
add
or
jo
sub
in
inc
nop
mov
fisubrl
adc
add
mov
fistl
test
fisubrs
pop
repz
sti
xchg
cs
addr16
xor
dec
adc
adc
mov
xchg
push
mov
test
cmp
cmp
jmp
push
in
fsubrl
xor
sbb
xchg
sub
ds
imulb
test
mov
mov
xor
add
jle
xor
testl
shrb
pop
pop
pop
and
mov
ds
or
mov
sti
cmp
lret
add
mov
dec
scas
sub
mov
push
iret
dec
jmp
jcxz
add
ds
cmp
pop
arpl
gs
lea
rcll
int3
xchg
mov
fistpl
mov
xchg
sbb
dec
les
dec
inc
test
cmp
sarb
sub
jnp
scas
movsb
or
xchg
popa
or
dec
aas
pop
and
or
aad
mov
pop
mov
inc
gs
addl
dec
mov
pusha
or
mov
sub
jbe
dec
imul
loopne
mov
jle
mov
inc
xor
aad
push
sub
adc
shlb
sbb
icebp
fisubs
aad
sti
testl
aaa
insb
mov
paddq
xchg
fcmovne
jmp
push
bound
xchg
mov
or
fs
pushf
je
arpl
push
mov
aad
sbb
test
mov
jl
dec
out
dec
push
mov
dec
inc
idivb
test
xorl
dec
stos
push
cs
inc
push
inc
xchg
sti
mov
sahf
aad
cmp
hlt
cmpsb
dec
xor
push
sub
loop
in
dec
test
and
fdivrl
out
outsl
push
mov
adc
lret
cmp
xchg
movsl
js
dec
jl
add
push
mov
mov
push
cmc
sahf
mov
stos
stc
fwait
xor
ficoml
mov
sub
test
sbb
addr16
jmp
bound
sub
stos
mov
repz
jl
out
or
nop
mov
push
xor
xor
ret
pusha
jecxz
out
not
int3
movb
rclb
xchg
pusha
mov
and
cmp
adc
add
cmp
lock
pushf
add
test
divb
push
sarb
shrl
inc
mov
ljmp
mov
repz
aaa
out
jg
mov
ret
pop
xchg
add
jnp
mov
stos
or
push
xor
mov
ja
mov
mov
shl
loop
lcall
xor
xchg
in
lods
mov
and
je
adc
test
insl
enter
pop
jle
negb
aam
dec
mov
and
xchg
mov
jp
mov
clc
xor
sbb
stos
mov
stc
ljmp
aad
ss
and
jns
jns
test
imull
clc
sub
xor
aaa
cli
pop
bound
popf
sbb
adc
bound
ljmp
outsb
test
sub
mov
pop
stc
jmp
cmp
idiv
adc
js
test
aaa
call
jmp
fld
out
mov
add
mov
cmc
sbb
aad
mov
xor
pop
jecxz
adc
mov
sarb
mov
mov
mov
pop
ss
in
jge
movsb
fdivrl
mov
adc
xor
into
cmpsl
aad
movsl
jns
cmp
shlb
push
mov
cwtl
push
stos
mov
push
inc
xchg
out
ljmp
sti
stc
cmp
loop
aam
cs
mov
in
out
mov
pop
xor
mov
jmp
sub
cmp
inc
add
ljmp
mull
xchg
jno
sbb
addr16
imul
cs
xchg
iret
imul
mov
or
out
fidivl
imul
ljmp
outsb
xchg
push
fs
les
fisubrl
stos
std
jl
push
dec
imul
xchg
pop
mov
dec
iret
or
fs
movsl
lret
sub
int3
scas
or
cmp
lea
data16
jbe
cmp
jnp
cmp
cwtl
fsts
mov
sub
sti
push
mov
out
pop
out
arpl
shll
dec
sub
mov
cmpsb
mov
leave
xor
sarb
aas
bound
aas
imul
cmpsb
data16
and
lds
push
mov
mov
push
mov
imul
cmpsb
or
ss
cmp
pop
jno
loopne
jns
dec
dec
push
push
and
mov
cmp
sub
adc
mov
shlb
sbb
xchg
std
inc
xor
dec
or
jecxz
and
jge
stos
test
mov
jmp
and
ret
or
sbb
mov
sub
xchg
or
ftst
xor
mov
lahf
cmp
xchg
les
push
ljmp
fmull
scas
dec
icebp
xchg
adc
mov
into
add
push
loop
jns
in
add
in
dec
aad
xor
loope
in
sarb
or
in
xchg
and
add
mov
jnp
push
lret
push
mov
xchg
push
sub
xor
push
or
divb
xchg
decl
jg
sub
gs
xor
lret
and
adc
je
push
aad
insb
lods
jo
mov
mov
test
mov
xchg
inc
mov
jl
cmp
and
cmp
mov
sub
cwtl
mov
sub
enter
mov
sub
pop
cld
bound
pop
sbb
fwait
adc
shll
inc
sbb
push
jnp
lds
out
je
ret
sbb
lcall
int3
andb
cmp
test
push
add
add
cmc
cs
dec
inc
fwait
sbb
mov
mov
sbb
xor
mov
sub
test
push
fs
and
pop
jno
insb
test
test
adc
aad
into
jns
adc
inc
jmp
test
and
inc
cmpsb
push
mov
pop
push
arpl
mov
mov
hlt
stos
pop
push
inc
add
shl
adc
jbe
mov
or
mov
add
mov
shrb
mov
xchg
jne
dec
jg
push
and
rorl
sub
data16
fsubs
mov
jne
outsb
mov
movaps
add
jbe
pop
or
mov
aaa
pop
cmpsb
sub
lods
jns
inc
xor
rol
mov
ret
sbb
mov
dec
pop
std
pop
jle
loope
push
imul
test
and
mov
pop
mov
cmp
dec
mov
jle
dec
and
dec
or
repz
andl
dec
sahf
aas
out
fstpt
inc
inc
movsl
jle
sub
jecxz
ret
fmuls
mov
jg
xor
inc
push
push
mov
push
ds
pop
cmp
inc
dec
mov
fbstp
sub
jnp
iret
add
sub
je
mov
andb
inc
push
lock
dec
fisubrs
pop
adc
repnz
daa
ret
dec
rsm
and
cmp
fidivl
lret
inc
call
out
mov
mov
shlb
pop
fwait
and
rcrl
sbb
es
push
mov
sub
bound
out
aaa
cmpsb
shr
jae
xchg
and
pop
sbb
mulb
add
out
jno
out
test
insl
call
adc
and
icebp
inc
pop
dec
push
rorb
in
cmp
push
jmp
sarb
sbb
mov
fisubl
fnsave
push
xor
mov
add
jg
adc
test
and
cmp
jne
les
fisubs
aam
xor
adc
jp
adc
call
fidivrs
insb
xchg
test
sbb
movsb
mov
sub
push
pop
rolb
mov
and
xorb
mov
mov
movsb
jae
into
stos
push
pop
push
sbb
sbb
jnp
pushl
mov
in
pop
into
fsubrs
pop
int
stos
push
rorl
pop
popa
cltd
stos
lahf
adc
out
xchg
dec
loop
and
jmp
mov
fcoms
enter
jp
dec
mov
fisttps
daa
add
out
cmp
hlt
push
mov
inc
dec
lahf
jbe
fbstp
push
pop
lock
or
pusha
xchg
insl
mov
push
or
test
sti
inc
sbb
out
test
jmp
pop
jae
rol
out
push
xor
cmp
sub
outsl
lret
inc
lock
xor
lret
mov
push
sahf
pop
lods
pop
jns
push
push
jb
dec
pop
insl
es
dec
inc
or
testl
les
cmp
loope
dec
cmp
mov
loop
mov
dec
stc
test
outsb
fwait
std
scas
sub
popf
rcl
jp,pn
lods
pop
push
xchg
jbe
mov
aaa
sub
sub
insb
jg
sahf
mov
in
cmpsl
jecxz,pt
jmp
push
aaa
das
fiadds
or
jne
add
adc
pop
sbb
sbb
push
jnp
push
ja
sub
test
mov
int3
test
cltd
in
nop
fdivp
or
mov
mov
add
pop
or
mov
lret
pusha
frstor
inc
lods
cmp
pop
imul
lcall
je
pop
dec
and
mov
adc
lods
xchg
sub
clc
cmp
sub
test
repz
sbb
lods
aam
add
or
sti
lods
aad
pop
fucom
sub
rcr
mov
mov
cmp
sbb
into
out
aad
rcrl
movsl
clc
cld
nop
mov
clc
outsb
and
mov
xchg
rcrb
mov
je
cs
cmpsb
mov
cld
stos
dec
in
add
mov
sbb
dec
es
aad
xchg
jmp
imul
lods
fstl
xchg
xchg
rcrb
lods
fwait
sub
stos
popf
jb
out
xor
inc
xchg
sbb
inc
adcb
rcrb
push
xchg
jns
pop
mov
push
sbb
mov
mov
cmp
mov
rorl
ja
cmp
mov
pop
adcb
mov
xchg
nop
cmp
pop
cmp
jns
ret
aam
push
mov
mov
xchg
add
add
sbb
clc
jae
or
jecxz
negb
inc
and
and
rcll
mov
ss
mov
lock
xchg
shlb
or
int
jb
dec
ss
mov
cmp
lods
aam
add
xor
pop
jns
inc
push
push
xchg
mov
ss
lods
in
lret
test
shr
xor
rol
mov
mov
lahf
mov
jl
xor
cmp
mov
mov
lcall
fstl
mov
arpl
pop
fwait
dec
xor
in
hlt
in
inc
gs
rcrl
lds
xchg
push
jl
xchg
fucompp
lcall
add
or
and
dec
and
fistl
loope
js
sbbl
cltd
rcrb
pop
xor
fadds
inc
pop
cmp
dec
imul
or
cwtl
push
mov
mov
sbb
subl
pop
fbstp
sbb
call
mov
xor
mov
mov
mov
sub
xlat
mov
loopne
push
flds
inc
xchg
dec
test
xchg
or
adc
push
icebp
inc
das
jnp
int3
pop
ljmp
popl
aad
lods
popf
push
fdivrp
inc
decb
inc
or
jae
sub
fs
xor
outsb
js
xor
push
lcall
or
scas
lock
mov
scas
push
push
das
pusha
push
andb
xchg
cmpl
ja
sub
das
sbb
sbbb
and
in
xchg
insb
cmpsb
mov
pop
add
xor
test
lahf
stos
inc
rcll
sub
push
xchg
int
mov
jne
cmp
ds
ljmp
push
lahf
push
out
icebp
inc
jbe
mov
pusha
ljmp
pop
movsb
adc
jbe
mov
movsb
pop
mov
push
fsubrl
ss
mov
dec
leave
movsl
int3
leave
shll
mov
jns
ret
daa
loop
cmp
imul
fcmovnu
clc
int3
jp
outsb
push
sub
stos
xor
lods
mov
xor
add
jg
cmpsb
push
mov
push
std
mov
mov
xchg
dec
faddl
in
pusha
aad
call
pop
shlb
shr
les
jmp
and
jnp
cmp
popf
lods
push
jle
add
stos
pop
jmp
cwtl
mov
sbb
adc
cmp
xchg
pop
popa
and
sbb
push
addr16
enter
ret
lcall
fstpt
inc
add
lds
mov
lock
cmpsb
adc
xchg
cmp
pop
aad
inc
in
xchg
jnp
call
inc
loope
cmp
aad
lahf
ret
insb
jnp
sahf
mov
ret
xor
push
jne
cmp
dec
or
or
adc
imul
jbe
pop
rcll
sub
outsl
dec
mov
mov
mov
outsl
and
mov
push
lahf
int
push
add
cmc
inc
jbe
stc
xchg
sub
cmpsl
mov
dec
int3
jg
jno
adc
jnp
lcall
mov
and
jl
sbb
jae
test
inc
sbb
mov
idivb
jo
fiaddl
add
push
xlat
orb
lods
in
in
mov
xchg
pop
adc
mov
sahf
fistl
test
xor
sbb
and
and
int
cmp
cmp
scas
sbbl
add
addr16
mov
mov
xor
mov
in
inc
not
lahf
and
outsl
push
xchg
inc
es
cmpsl
mov
imul
xor
int3
das
jns
sbb
lods
mov
arpl
or
sub
js
push
mov
or
out
pop
cli
inc
add
or
push
cwtl
mov
scas
push
pop
popl
push
jmp
mov
jl
rcll
vandpd
lds
mov
mov
adc
mov
and
sti
sbb
movsl
loopne
cmpsl
sbb
sub
jl
sahf
dec
adc
dec
icebp
roll
adc
sti
cmp
pushf
mov
push
test
and
inc
sub
vxorpd
jmp
imul
pop
insl
cwtl
repnz
mov
adc
ds
arpl
dec
nop
fldl
popa
popf
loope
xor
imul
cmp
aaa
fnstenv
call
addr16
jmp
or
cmp
jge
and
push
sub
pop
push
nop
inc
stos
pop
xor
dec
xchg
mov
adc
sub
mov
and
cmpsb
sahf
inc
movsb
xchg
jnp
mov
ret
mov
push
pop
cmp
test
xchg
xchg
or
mov
adc
lcall
or
out
jp
pop
and
sub
mov
mov
fdivl
sti
xlat
sub
data16
and
xor
movsb
sbb
out
iret
cwtl
adc
pop
mov
mov
mov
sub
xor
mov
test
adc
testl
add
addr16
xchg
sub
pop
mov
nop
shll
and
pop
sahf
pop
fadds
les
inc
je
fs
rclb
neg
call
int3
fwait
insl
or
xchg
push
imul
outsb
test
daa
pop
imull
jbe
inc
loopne
loop
mov
mov
xlat
paddq
xchg
test
xor
in
lahf
sub
jb
push
xchg
xchg
cmp
lcall
mov
fstpt
mov
cmp
inc
dec
pop
popa
xorl
aas
mov
das
jl
dec
push
push
mov
out
jp
jnp
push
inc
and
movsb
bound
sbb
sub
jae
nop
shrb
js
lret
sbb
in
ret
sbb
jne
lods
pop
xchg
loope
wbinvd
dec
mov
outsl
mov
frstor
mov
fstpt
inc
dec
movzwl
in
dec
adc
mov
or
mov
shlb
sub
mov
lods
mov
inc
movsl
into
dec
inc
jle
pop
sbb
push
sbb
jp
insl
mov
cmc
cwtl
test
mov
lret
out
fstpt
jmp
add
std
pop
outsl
and
jnp
mov
adc
xor
ret
add
push
add
mov
pop
mov
aam
stc
insb
adcl
fs
mov
cmp
cmp
sahf
jb
push
hlt
mov
xor
in
test
inc
cmp
shr
fstpl
dec
sbb
fistpl
sub
add
repnz
test
xchg
mov
orb
pop
fbld
add
mov
or
jnp
rep
lret
out
and
mov
pusha
call
repz
jbe
dec
mov
cmp
fnstsw
xor
add
and
pop
jo
cld
dec
cmp
push
push
push
mov
adc
sbb
loop
out
add
divl
es
xchg
rcrb
add
jge
and
adcl
fstpt
push
mov
or
push
or
enter
push
scas
cmp
cmp
movsl
inc
dec
sub
lcall
push
loop
add
ror
fldcw
in
testb
jecxz
dec
cmp
fisttps
repz
dec
xor
mov
movsb
adc
push
jno
cvttps2pi
xorl
sub
arpl
mov
jge
xor
aad
sub
mov
xchg
push
movsl
lcall
stc
je
orb
fs
xor
movsb
cmc
jnp
push
jae
movsl
mov
jo
or
mov
sub
mov
clc
movsl
jmp
mov
ret
xchg
pop
ss
icebp
pop
pushf
dec
movsl
test
adc
or
adcb
stc
push
and
mov
or
std
insl
les
or
dec
jne
ret
and
mov
push
shr
iret
hlt
xchg
add
hlt
test
je
sbbb
xchg
insb
mov
dec
imul
ret
aam
pushf
xchg
scas
adc
sahf
aaa
cmp
push
shll
or
lock
int3
adc
pop
lcall
sbb
push
mov
xlat
and
sub
stos
jecxz
scas
sbb
addr16
je
clc
mov
pop
lret
addl
jns
jno
jae
shll
jne
mov
cld
sahf
jecxz
subl
ja
add
fistps
fsubrs
mov
xchg
sbb
or
dec
stos
lock
sub
nop
sub
xor
sbb
xor
call
xchg
adc
in
dec
dec
jp
xchg
mov
mov
cltd
imul
adc
stos
dec
or
mov
sub
test
jle
es
mov
xor
fidivrl
cmp
push
imul
cltd
mov
scas
outsl
mov
cltd
sbb
stc
cmp
sub
add
mov
add
in
dec
insb
dec
and
outsb
insb
fldenv
pop
das
adc
dec
jo
pop
and
lret
mov
pop
fs
push
sbb
dec
cmp
jae
ljmp
jle
inc
push
push
aas
test
insb
rol
mov
aas
rep
inc
pop
adc
rolb
add
mov
scas
popf
push
or
int
or
gs
pop
cltd
mov
cmp
sub
xor
push
inc
pop
nop
clc
jnp
in
jne
jb
mov
mov
in
test
jmp
sar
and
fwait
jne
fwait
fwait
mov
js
jns
stos
fsubrs
ljmp
test
lods
notl
and
xor
push
pop
aaa
xchg
xchg
hlt
rolb
insl
add
call
daa
jecxz
inc
dec
and
jge
xor
fs
cmc
test
jmp
mov
sub
cmp
sub
sub
or
cmc
mov
pushf
negl
cmc
out
call
mov
cmp
test
out
daa
add
xor
lods
ret
mov
stos
add
iret
push
sbb
imul
pop
popa
lret
jns
cmpl
pop
adc
sub
loope
or
test
pusha
ljmp
push
cmpb
outsl
xchg
dec
and
xchg
pop
add
mov
leave
setbe
fsubs
cld
jecxz
out
outsl
inc
inc
test
xchg
scas
or
mov
repz
adc
jae
fldln2
mov
dec
addr16
jmp
push
mov
mov
fdivrl
push
loop
filds
mov
fs
pop
test
xor
lea
frstor
mov
inc
popa
cli
cld
icebp
or
lahf
push
div
sub
sarl
sub
repnz
pop
jnp
sbb
es
lret
push
add
mov
cs
xlat
lahf
xchg
xor
sub
cmp
mov
imul
icebp
test
and
jecxz
imulb
mov
xorl
arpl
xor
flds
enter
subb
daa
cmpsb
mov
es
ja
mov
test
inc
push
inc
cmp
xor
shll
cli
lock
dec
push
lock
adc
shrd
insl
aas
test
dec
pop
inc
push
cmpb
dec
add
mov
xchg
xorb
push
imul
stos
loop
push
and
rcrl
xlat
in
dec
jbe
ljmp
punpckhbw
xchg
adc
mov
loope
icebp
ds
lcall
and
pop
mov
cmp
and
push
adc
fbld
fwait
imul
ficoml
xor
fwait
jo
adcl
adc
xchg
insb
lods
adc
in
push
pop
jle
cmp
sti
cmc
in
push
arpl
cmp
ja
hlt
push
lock
adc
adc
xchg
xchg
cmp
subl
out
mov
and
dec
cmp
mov
fcoml
mov
pop
arpl
jle
mov
lods
ror
cmp
adc
and
or
jle
repz
fdivrl
adcb
jmp
in
int3
cs
into
adc
push
push
xor
cmpsb
stos
cmpsl
push
mov
and
dec
cli
fs
mov
jbe
cmpsb
jno
add
sarl
mov
push
div
subb
scas
mov
inc
cwtl
lea
inc
dec
je
xor
mov
mov
into
dec
icebp
lret
lock
mov
add
or
orb
pop
fisubrl
mov
push
fucomi
call
or
sbb
mov
ja
push
lods
or
popf
mov
jno
call
mov
cmp
shll
mov
inc
mov
fptan
fisubl
mov
dec
inc
js
sbb
cs
cmpsl
jnp
imul
sahf
repz
fnstenv
out
shll
test
and
inc
lcall
xchg
push
loope
shlb
sub
sarl
mov
mov
jle
nop
aam
cwtl
clc
leave
ss
mov
jle
cmp
inc
shl
inc
push
jmp
cltd
jmp
vpsllq
push
mov
test
bound
push
aam
sti
adc
icebp
pusha
insb
add
and
lods
mov
inc
cmp
push
push
lods
adc
scas
sub
iretw
pop
inc
lahf
xor
add
pop
pusha
clc
clc
fs
jge
lds
inc
and
mov
jp
or
add
pop
faddl
fadds
push
mov
sub
lea
stos
icebp
cltd
sbb
mov
or
cltd
loopne
mov
rcr
test
shlb
mov
insl
inc
dec
jle
inc
cmpsl
push
push
sub
and
mov
inc
es
rcr
sub
jne
sub
jmp
dec
xchg
fsubr
mov
hlt
lcall
cld
mov
punpckhdq
imul
lods
sub
adc
leave
fdivl
pop
ds
scas
roll
pop
push
bound
inc
insb
into
lret
jecxz
shrb
and
jbe
and
cwtl
jb
call
inc
into
scas
add
lcall
test
push
mov
xor
push
fistps
hlt
daa
movd
in
test
jp
mov
addr16
imul
xlat
out
movsl
arpl
xchg
or
sbb
icebp
dec
and
xchg
in
adc
sbb
xlat
dec
push
jecxz
fsubrl
mov
lret
cmpsb
out
cmpb
in
jno
sbb
lcall
ss
scas
nop
in
call
jecxz
loop
xor
mov
lcall
mov
or
movsl
inc
mov
inc
js
cmp
and
jno
add
call
fildl
div
jle
addb
xchg
xorl
and
syscall
add
imul
ss
dec
iret
sbb
divl
mov
xchg
insl
stos
hlt
sbb
pop
dec
andl
mov
popa
ljmp
jo
and
fdivrs
add
jb
sub
cmp
sti
popa
cltd
xchg
and
mov
cmpsb
lahf
int
add
jle
jmp
out
xchg
xchg
scas
mov
inc
adcb
lock
jl
mov
cmp
js
cwtl
fs
inc
jb
cli
xchg
push
outsl
aam
in
jp
shll
sbb
test
xor
decl
filds
cmp
cmp
test
mov
out
or
outsb
stc
out
sbb
inc
jg
add
push
out
sarl
loopne
clc
bound
inc
sub
out
sbb
iret
pop
push
adc
sub
mov
lods
cmp
cli
mov
std
movsb
insb
xchg
xchg
or
add
psubw
dec
mov
inc
add
or
test
lahf
bound
js
mov
xchg
push
jp
inc
js
push
push
and
jne
out
jmp
pop
mov
pusha
jb
and
cmp
mov
cmpl
jmp
xchg
mov
mov
pop
or
dec
lahf
push
cmp
xchg
jecxz
mov
adc
aad
or
xchg
out
push
fdivrl
mov
pop
sub
xor
pop
pushf
dec
push
or
insl
fcomps
cmp
leave
out
sbb
adc
pop
out
sub
xor
mov
push
out
mov
pop
dec
ds
add
stos
loopne
adc
pop
inc
xor
and
inc
pusha
lea
add
hlt
aam
mov
cmpsb
lea
add
data16
jno
stos
push
mov
imul
sub
pop
das
enter
stos
in
mov
adc
es
popf
pushf
dec
jl
aaa
mov
sar
aaa
sub
lods
mov
adc
lahf
dec
clc
cs
mov
push
dec
ret
js
enter
cmc
push
sbb
inc
and
push
cmpsb
pop
clc
xchg
dec
fsubr
jecxz
jmp
icebp
pop
push
out
push
jb
or
call
insl
push
xchg
pop
or
je
insb
daa
cmp
mov
and
adc
in
pop
mov
inc
lock
xor
inc
lds
sti
aas
movsl
jle
aad
lods
inc
imulb
popa
loope
lret
bound
jmp
or
pop
sahf
xchg
pop
sahf
and
es
sub
clc
jge
pop
notb
lahf
sbbl
push
mov
das
mov
fbstp
js
xor
insb
fs
add
mov
mov
ret
ret
pop
lock
dec
loopne
es
pusha
mov
jns
mov
frstor
dec
xchg
xor
pop
bound
jbe
pop
lock
xchg
or
mov
pop
lods
daa
mov
lods
incl
xor
push
out
call
sti
andb
or
test
aad
xchg
sub
mov
stc
dec
mov
bound
ja
insl
repnz
rorl
repnz
pop
scas
jb
xor
inc
xchg
sub
les
jecxz
in
jmp
mov
jb
imul
nop
daa
mov
addr16
int3
arpl
out
xchg
sub
mov
or
lahf
pop
stos
sub
fsubrl
es
jnp,pn
fldt
pusha
idiv
mov
js
push
hlt
mov
and
into
hlt
mov
cltd
cmpsb
cmp
inc
in
scas
sbb
ds
mov
test
mov
ss
aam
in
push
js
lea
loopne
pop
scas
cli
xchg
fdivrs
test
and
mov
incb
adc
adc
enter
xchg
jmp
dec
loop
xor
popa
outsb
psubb
mov
addl
jp
pop
add
cmp
xchg
add
es
fstps
es
mov
ficoml
add
cmp
pop
add
cmp
or
leave
cli
xchg
repz
pop
scas
loopne
pop
mov
add
push
cwtl
pop
or
jecxz
rclb
test
add
sarb
pop
mov
mov
test
cmp
fcomip
mov
test
push
enter
cli
xchg
xchg
cmpsb
cmp
xor
jnp
cmp
pop
inc
fiaddl
test
push
shl
enter
push
ljmp
mov
aas
fcomps
enter
jnp
pop
inc
in
jg
sbb
ficompl
add
and
pop
addb
jp
lea
fwait
loop
xchg
es
and
shlb
xchg
jnp
cmp
lret
pushf
jmp
in
dec
in
call
xor
jo
addr16
insb
xchg
imul
mov
lock
fldenv
mov
popa
and
add
rcrl
xchg
sub
push
adc
repz
jae
pop
lods
outsb
std
xchg
cwtl
into
movsb
cmp
mov
cmpsb
cmp
cmp
pop
xchg
sub
test
pop
repz
es
dec
sbb
fcomps
sub
and
jbe
push
inc
adc
jge
inc
fisubrs
or
xchg
mov
push
out
aad
lcall
mov
mov
fxam
jl
xor
jmp
pop
pop
and
test
pop
movsb
leave
inc
xlat
icebp
push
jmp
adc
dec
and
pop
insb
testl
loop
xchg
cs
xchg
and
adc
cmpsl
push
cmp
add
pop
mov
mov
jb
sti
lods
cmpsl
test
loopne
aaa
into
clc
add
cmp
lea
gs
sub
faddp
or
sub
sbb
dec
fbstp
mov
sahf
xchg
dec
loop
sarb
adc
ss
ljmp
mov
sub
jmp
xchg
adc
lahf
ss
xor
adc
xchg
pop
pop
mov
fldcw
mov
aaa
and
pop
push
mov
outsl
cmpsb
mov
hlt
in
scas
inc
add
cmp
aaa
and
lahf
pop
push
pushf
xor
mov
xor
decb
jo
dec
push
pop
icebp
lea
xchg
lods
popf
xor
mov
pop
in
clc
stos
inc
and
sbb
jnp
jg
sbbl
jecxz
xor
add
cmp
mov
imul
mov
inc
xlat
dec
loope
add
xor
pop
mov
test
scas
movsl
dec
iret
pop
hlt
idiv
pop
scas
sub
inc
fiaddl
call
xor
mov
dec
fists
ss
into
jo
stc
mov
popf
xor
jmp
ds
mov
xor
sub
mov
xor
fsubr
test
adc
aaa
xchg
jo
xchg
sub
mov
inc
ficoms
push
jmp
jno
popf
xor
xchg
pop
xchg
sti
xchg
fwait
and
jns
adc
test
xchg
and
mov
inc
fstl
aam
and
shrl
xchg
xchg
sub
je
dec
movsl
call
mov
dec
ja
cwtl
das
inc
cwtl
hlt
mov
shrb
repnz
in
adc
inc
xchg
sub
lret
popa
push
jmp
in
or
out
inc
fisubrl
insl
add
nop
inc
xlat
leave
bound
cltd
ljmp
lock
test
jbe
mov
inc
xchg
cmpsb
cmp
xchg
in
dec
adc
aam
push
mov
jg
push
sbb
or
and
and
stos
inc
jge
jns
fs
lcall
xchg
sub
cs
dec
enter
mov
cld
mov
enter
clc
xor
fwait
push
pop
mov
mov
ds
rcll
adc
xor
mov
cmpl
push
idivb
pushl
daa
push
andl
dec
movsl
inc
ja
mov
fistpl
loop
sub
add
mov
aaa
xor
insb
xchg
inc
in
andl
sbb
sbb
cmp
sub
mov
test
pushf
sub
and
push
je
dec
stos
jge
fwait
movsb
int
cli
lret
sbb
notb
das
mov
pushf
addr16
movsl
out
mov
fsubr
add
aam
add
outsl
popa
push
xchg
push
insb
stc
nop
mov
jle
jecxz
sahf
daa
xor
pop
scas
aaa
xchg
test
icebp
xchg
aad
iret
push
sub
and
and
fbld
dec
push
cmc
je
out
ja
pushf
andl
adc
cmp
test
pop
cmpsl
mov
fisubrl
aam
cli
or
pop
adc
sub
outsb
inc
imul
mov
leave
outsl
push
add
mov
cs
jecxz
xorl
mov
in
jmp
in
aas
pop
outsl
or
inc
push
mov
lret
mov
mov
sbb
jb
and
mov
push
je
test
mov
rcr
or
mov
add
aas
mov
jp
outsb
lods
inc
movsb
mov
loop
testl
adc
xchg
test
sub
add
loop
fisubrs
inc
movsl
push
lea
jns
shll
xchg
int3
sbb
movsl
dec
push
push
das
leave
jge
fstps
sbbl
mov
ret
add
jno
xor
sbb
arpl
lret
scas
add
pushl
cmp
fisubrs
mov
mov
jge
sub
jne
mov
decl
cmp
push
mov
dec
adc
push
mov
dec
cmc
test
adc
cli
inc
adc
push
mov
xchg
aam
lods
push
mov
fxch
jne
push
daa
leave
jb
call
or
lcall
shr
sub
mov
dec
icebp
push
mov
or
and
pop
gs
mov
and
adc
les
sub
push
fs
data16
pop
popf
scas
rolb
mov
xlat
or
dec
pop
cmp
xchg
ja
enter
sub
cmpsb
pop
sbb
jmp
test
testl
aaa
aam
pop
jecxz
push
sub
mov
push
aad
jnp
xor
std
addl
rcrb
xchg
sub
cmp
fisubrs
mov
cld
mov
mov
loopne
sbb
jno
andb
push
movsl
cmc
xchg
into
inc
fxch
pusha
or
ficomps
mov
sbb
adc
rcrl
mov
popa
ret
and
mov
out
addr16
cmpsb
pop
mov
cmp
and
pop
mov
les
lods
sbbl
insb
and
xor
mov
testb
push
fsubs
adc
popf
xor
dec
cli
xchg
jle
les
lahf
and
rcrb
mov
sub
and
js
jne
scas
inc
xor
push
dec
in
jmp
imul
cmp
insl
stc
mov
sub
cmpsl
ds
inc
pop
lods
lds
int3
arpl
jecxz
and
add
dec
xor
mov
dec
daa
mov
mov
inc
fld
rcrb
or
push
out
sbb
adcb
cmp
mov
les
mov
mov
adc
jecxz
jae
mov
sbb
adc
cld
lea
stos
inc
aas
out
pop
repz
jo
push
push
jb
call
cs
fld
pop
cld
lea
mov
sbb
sub
adc
ss
repz
lcall
cmpsl
mov
xchg
hlt
mov
and
inc
mov
xchg
xorb
add
lea
fstps
scas
inc
dec
cld
test
push
mov
rcr
test
or
xchg
iret
mov
adc
fbstp
cli
inc
ficomps
ja
adcb
sbb
sbb
hlt
sub
adc
xchg
sub
pop
mulb
mov
xchg
xorl
loopne
popf
xor
add
lea
xor
dec
add
adc
ss
or
das
lods
fmul
inc
out
jmp
pop
ret
das
add
arpl
loope
jnp
shll
fwait
xor
pushf
jmp
push
cmpb
out
jo
fdiv
push
adc
ret
hlt
cld
adc
cmc
mov
push
iret
cmp
cmp
xchg
lcall
clc
in
cmpsb
xor
mov
lahf
lret
out
js
jb
mov
in
mov
fiadds
sub
jp
inc
xlat
pop
fwait
jle
or
mov
in
test
dec
into
jmp
jge
jp
cmp
int3
pop
sbb
fisttps
cmp
fs
jmp
jge
xchg
in
add
add
and
lahf
adc
and
shrl
xchg
mov
fstps
xchg
int3
sub
das
pop
in
fbstp
jae
in
movsb
inc
fidivl
lds
scas
iret
sbb
andb
inc
xlat
fwait
inc
sub
je
mov
popa
leave
setp
inc
ljmp
xchg
cmp
pop
outsb
mov
cmp
mov
mov
insb
push
and
divb
mov
aad
push
cwtl
ficoml
enter
adc
dec
xchg
rol
xchg
push
lods
and
jp
sub
bts
ficompl
loopne
imul
aas
call
sub
loopne
cld
push
xorl
mov
pop
repz
mov
dec
cli
loope
adc
mov
inc
push
imul
add
stc
xlat
inc
mov
ret
push
aad
out
fdivrl
push
pop
fidivs
popf
je
dec
sbb
lret
int
fwait
push
xorb
push
icebp
rcll
aaa
orb
jns
enter
loope
mov
bound
shl
mov
sbb
mov
out
inc
loop
cltd
je
adc
push
xchg
cld
jle
add
mov
insb
pop
sbb
sarb
cmpl
arpl
scas
mov
jne
cmpsl
pop
xchg
test
xchg
out
lcall
dec
pop
popf
shll
mov
popf
xchg
mov
mov
xor
dec
sub
pop
cltd
loopne
cmp
mov
mul
adc
pop
test
clc
cmp
mov
pushf
dec
mov
psrad
adc
jns
mov
hlt
outsb
mov
test
pop
cld
shlb
jno
das
bound
divl
stos
inc
push
lahf
testl
sub
call
out
dec
clc
cmp
out
ret
sahf
mov
mov
pop
scas
push
inc
fildl
mov
mov
push
out
filds
paddb
out
daa
loopne
pop
out
lea
jb
push
movsl
in
dec
xlat
int
cmpsl
std
push
loope
mov
testb
mov
fsubrs
inc
xor
xor
pop
lock
inc
pop
lock
insb
mov
int3
pop
lock
dec
pushf
xor
pop
insl
dec
push
mov
inc
arpl
xchg
jae
jo
rcl
repz
or
lret
or
lods
xchg
dec
jno
cmp
inc
mov
xor
push
in
dec
xor
mov
aad
lret
lds
or
push
jb
inc
sbb
aad
mov
repnz
das
sub
lahf
add
or
pop
xor
nop
adc
inc
xchg
lock
mov
adc
add
fnsave
in
ss
icebp
mov
mov
push
arpl
xor
cmp
push
push
push
aad
sbbl
or
dec
cmp
cmp
adc
add
jae
mov
adc
cmp
xor
adc
fidivrl
xchg
insb
dec
push
inc
mov
pop
xchg
jmp
leave
bound
inc
fisubrl
fsubrl
iret
fdivs
pop
jae
jle
push
sub
hlt
xorb
mov
dec
loope
insb
movntq
mov
pop
push
test
mov
lods
movsb
int3
fbstp
into
mov
add
push
in
pop
xor
test
ret
cmc
pop
pop
repnz
sbb
inc
fdivr
gs
xchg
lcall
scas
out
shlb
out
insb
add
sbb
data16
arpl
dec
mov
mov
mov
mov
xchg
sub
mov
lret
cmp
adc
pop
pop
sahf
dec
push
jb
xchg
adc
xlat
out
or
dec
aas
in
or
xchg
jl
xchg
scas
repz
ror
arpl
or
push
jnp
xor
test
sub
aad
fidivs
mov
jb
sub
repnz
inc
adc
movl
and
pop
aaa
imul
aas
repnz
jecxz
sbb
xchg
sub
pop
lods
inc
push
out
leave
sbb
insb
fs
cmpsl
cmp
jecxz
scas
jmp
mov
dec
gs
jno
lea
mov
aad
mov
or
jae
xor
xor
xor
mov
rcl
insb
add
cwtl
das
pop
jb,pn
popa
fwait
int3
arpl
adc
es
mov
or
in
push
testb
in
aam
ffreep
xchg
sub
push
mov
xchg
pop
xor
dec
ret
fidivl
addr16
cwtl
test
push
sbb
repz
push
push
scas
inc
sub
inc
popf
loopne
adc
adc
or
in
cmpl
jnp
sub
pop
icebp
mov
lea
cmpl
lea
and
xchg
clc
repz
jl
lea
mov
stos
and
aaa
repz
pop
and
jae
test
popa
clc
mov
push
popf
jmp
add
jecxz
imul
test
loop
or
sbb
test
cwtl
and
or
pop
push
in
pop
daa
mov
cli
dec
stc
nop
lock
nop
jecxz
add
aaa
call
incl
cmp
xlat
outsb
in
js
jns
cli
imul
stc
adc
jmp
std
lods
inc
out
imul
ljmp
add
dec
and
cmp
inc
fdiv
pop
shrl
sbb
jp
jnp
sbb
test
xchg
outsl
adc
repnz
mov
pop
dec
push
pop
testb
stc
lcall
pushf
out
pushf
xor
adc
aad
inc
fistpl
mov
jp
lret
mov
rcrb
mov
and
and
pusha
notl
aam
jne
pop
add
mov
pop
repz
mov
outsl
insb
sti
inc
fldt
jo
ljmp
aad
gs
test
push
and
pop
inc
mov
arpl
inc
fcoml
pop
sub
stc
jne
rclb
add
sbb
in
cmp
and
add
iret
push
rcrl
test
sbb
adc
fs
sub
pop
mov
pop
shll
cli
sbb
test
fwait
push
andb
jmp
inc
fisttpl
and
stos
inc
nop
addb
mov
out
mov
pop
pop
sti
xchg
mov
mov
iret
into
lds
test
sub
pop
ret
daa
mov
mov
lret
std
sub
mov
inc
js
or
jns
xchg
outsl
add
mov
pusha
pop
lds
push
popf
push
cmpsb
cli
fadds
add
and
cmp
rorl
cmp
test
jns
jecxz
and
notb
sbb
pop
or
push
mov
out
les
cmp
cli
jp
xlat
outsb
sbb
pusha
sub
push
lock
sub
jle
imul
lret
out
cmp
dec
loop
cmp
pop
lods
ds
xorl
lods
pop
lcall
push
in
ret
adc
ds
bound
cmp
cmp
mov
push
mov
adc
inc
lods
inc
jb
dec
out
pushf
dec
loop
xlat
pop
enter
sbb
cmpsb
jle
mov
fs
fwait
insl
mov
shlb
arpl
lret
bound
xor
es
dec
adcb
jmp
jle
lods
xor
loop
scas
jnp
and
ja
xchg
in
mov
pop
fdivs
aaa
sub
or
jge
lret
rolb
add
xor
jno
fmuls
push
loop
lret
popf
xor
and
adcl
cld
das
orb
mov
movsl
pusha
notl
pop
mov
add
fimull
mov
jae
lods
inc
pop
adcl
je
sbb
iret
and
ficoml
lds
cwtl
das
mov
stc
xchg
leave
stc
mov
mov
mov
cli
mov
mov
jecxz
in
pop
icebp
inc
push
test
xchg
mov
out
mov
pop
loop
mov
fimuls
cli
ds
add
mov
xchg
xlat
mov
inc
fdivl
pusha
test
pop
jmp
cmp
mov
scas
dec
sbb
ja
mov
mov
rclb
rcrb
testb
inc
sub
pop
lock
pushf
mov
push
jmp
or
insl
pop
mov
xchg
lea
mov
fnsave
test
sub
or
mov
pop
scas
lods
sub
mov
add
xor
lods
inc
push
push
imul
test
leave
jmp
cmp
inc
les
outsl
sub
pushf
popf
fidivl
mov
clc
xchg
es
add
inc
push
mov
pop
mov
lea
mov
in
sbb
rcrl
or
loopne
adcl
xchg
jecxz
inc
adc
aaa
into
imul
cmpl
mov
and
sub
je
inc
fnsave
aam
sti
add
dec
sbbb
xor
cmp
xchg
ret
push
sbb
xchg
cs
pop
fsubrs
cmp
imul
adc
vmread
lret
testl
movsl
dec
push
ds
mov
scas
adc
mov
push
jno
std
mov
leave
add
adc
ds
in
add
mov
leave
xlat
outsb
sti
adc
faddl
lds
mov
pop
lcall
mul
sub
loopne,pt
pop
rcrl
mov
aam
test
pushf
sar
push
das
repnz
js
inc
fimuls
lret
dec
in
in
mov
push
mov
pop
mov
das
mov
mov
mov
dec
out
pop
lds
call
pop
adc
push
cmpsl
and
pop
xchg
iret
sbb
sbb
scas
inc
pop
pop
add
fildll
ret
cmc
add
adc
ret
push
add
pop
mov
push
jecxz
inc
faddl
or
idivb
pop
adc
enter
rorb
std
xchg
jl
push
ljmp
hlt
mov
js
loop
xchg
sub
loope
inc
shr
xor
pop
adc
lea
shll
mov
mov
pop
scas
loope
clc
or
or
pop
pop
scas
mov
sub
sub
mov
lods
fwait
adc
and
xchg
lahf
movups
jmp
add
xor
movsb
pop
pop
xor
mov
mov
movsb
aam
xlat
lcall
xor
mov
mov
or
dec
aam
es
xor
or
mov
sub
mov
xchg
sub
movl
inc
mov
into
mov
rcll
jl
loop
aaa
adc
pop
xchg
aaa
into
outsl
mov
shlb
pop
call
add
sub
ds
jns
cs
aas
sbb
hlt
fistpll
rcrb
enter
out
aad
pop
imulb
ret
clc
cmc
call
nop
daa
dec
jmp
mov
addr16
mov
loopne
rclb
aaa
into
test
pop
out
aas
mov
lahf
sub
xchg
movsb
mov
jle
fidivl
and
hlt
pop
mov
mov
jge
jns
push
out
mov
pop
cli
out
xor
adcb
nop
add
fdivs
jmp
repnz
and
cmp
leave
dec
inc
fidivrs
jmp
sbb
adc
adc
push
test
fwait
push
filds
adc
push
cmp
outsb
insb
push
jo
mov
rolb
sahf
add
xlat
popa
sub
rcll
aaa
into
test
aaa
into
add
xor
movsl
cmp
aad
lret
lds
fs
cmc
xor
in
pop
mov
adc
cmp
push
shrl
rol
fidivs
test
sbb
jge
clc
pop
xor
dec
adc
mov
fwait
sub
mov
leave
pop
icebp
cli
mov
inc
sti
pop
bnd
cltd
xor
int3
ds
lret
push
ljmp
and
les
push
jmp
xor
and
jge
push
jmp
cwtl
fs
mov
aam
imul
push
popa
clc
aas
daa
es
js
dec
jecxz
xchg
pop
hlt
mov
and
add
loope
sub
lock
push
mov
lret
loop
loop
or
dec
es
nop
ds
loope
mov
and
push
sub
ret
pop
movsl
inc
pop
hlt
jbe
arpl
jbe
cli
xchg
shlb
xchg
data16
popf
xor
ja
xor
cmp
ja
ds
lahf
fdivl
lcall
sub
outsl
push
inc
inc
sbb
js
or
xor
sbb
xor
fsubrs
nop
pushf
xor
int3
imul
jmp
rcrb
mov
fdivl
cs
mov
movsb
cmp
push
jmp
mov
push
pop
dec
xor
in
imul
sti
xchg
or
nop
daa
lods
and
int
cmp
scas
std
int
out
enter
and
xchg
adc
adc
or
mov
and
push
cmpsb
push
out
sbb
sub
adcb
mov
repnz
inc
fstp
sbb
ret
dec
out
enter
lret
bound
mov
push
popf
sub
or
dec
pop
mov
dec
arpl
sahf
or
pop
dec
pop
lods
and
pushf
xchg
sbbl
dec
stos
lods
inc
fnstsw
xchg
insb
cmc
dec
loop
lahf
mov
addl
mov
frstor
sub
daa
pop
call
andl
jle
xchg
testb
daa
cmpsl
inc
fcoml
push
lods
inc
andb
mov
stos
stos
inc
sbb
jbe,pn
mov
shrl
rol
sub
iret
add
ja
lret
bound
ja
pop
push
imul
mov
mov
lods
inc
or
xchg
dec
loop
cmpl
scas
imull
call
jmp
rcr
adc
inc
inc
psllw
mov
leave
in
test
sbb
mov
inc
fdivl
int
insl
sub
sahf
sbb
nop
mov
mov
int3
add
add
sbb
lea
mov
leave
mov
xchg
sub
jo
shll
adcl
subl
lahf
loope
int3
arpl
scas
imul
add
push
mov
inc
push
lods
inc
mov
push
xchg
mov
dec
in
cld
in
xchg
cs
mov
cmp
and
or
aam
dec
out
xchg
in
fisubl
cmp
imul
sbbl
sub
fsubrl
push
loope
dec
loope
in
in
jg
test
fimull
mov
push
mov
lret
das
pop
mov
rorl
cmpsb
ret
daa
inc
fcomps
clc
in
out
movsl
out
jne
int
sbb
sbb
mov
daa
mov
mov
sarb
mov
push
in
and
icebp
mov
daa
mov
sub
lret
scas
xor
loopne
clc
jge
xlat
cs
xor
repz
test
repz
ret
add
out
xchg
sub
ja
sbb
test
leave
out
mov
mov
mov
mov
mov
into
gs
xlat
outsb
cmp
imul
lahf
lcall
mov
movsl
mov
incb
stos
add
xor
xchg
cs
dec
xor
jle
adc
lret
ja
loope
inc
adc
movsb
cmp
sbbl
dec
fnsave
out
mov
push
movsl
fisttps
outsl
inc
cmp
push
and
mov
aad
clc
or
and
push
mov
add
mov
lds
imul
inc
fstl
pop
scas
ss
js
dec
fnstenv
movb
cmp
and
lods
outsb
lds
adc
loope
enter
add
fbld
mov
mov
mov
xchg
sbb
jg
adc
xchg
and
sub
outsw
mov
pop
cmpb
or
sub
shl
imul
aas
mov
out
stos
test
iret
inc
or
jg
mov
mov
mov
jg
std
xchg
mov
sbb
pop
sarl
das
filds
ds
inc
dec
ds
jno
pop
jmp
adc
ds
or
lock
adc
les
xor
adc
inc
push
mov
test
mov
mov
cli
xor
movl
add
add
out
test
push
pop
jns
clc
icebp
leave
imul
iret
xchg
divb
das
pop
sub
sbb
sub
testb
pop
fstpt
jo
clc
mov
xchg
mov
cwtl
scas
int3
mov
lahf
mov
popf
stc
jle
ljmp
ret
stc
repnz
sub
push
and
xor
inc
pop
fmuls
dec
inc
add
pop
pop
add
cld
push
outsb
jp
lea
loop
push
jae
jnp
dec
push
enter
cmp
pop
xor
push
or
xchg
ret
adc
dec
mov
push
lcall
in
mov
mov
mov
cwtl
sbb
int3
mov
push
mov
mov
inc
add
xor
flds
insl
xchg
or
test
jl
loop
icebp
jmp
cmc
aam
scas
jge
push
and
popa
insl
xchg
popf
les
pop
dec
pop
jp
push
xor
cmc
push
shrl
lds
ljmp
sbb
push
stos
mov
push
jmp
and
mov
dec
sbb
cmp
ss
sbb
push
pop
out
mov
mov
or
mov
xchg
sub
lods
fnsave
mov
addl
shlb
push
outsl
push
test
mov
and
dec
mov
inc
sub
leave
popa
in
cli
xchg
and
jmp
scas
je
pop
sahf
mov
and
jmp
incl
xor
jb
div
stos
inc
and
xchg
sub
leave
pusha
jne
mov
sahf
xchg
out
enter
icebp
jmp
out
xchg
and
or
cs
clc
lcall
adc
pop
jne
stos
je
xchg
adc
ficoml
xor
inc
sti
scas
inc
sub
dec
int
loop
lahf
mull
jns
es
adc
js
int3
lods
inc
call
int3
arpl
sbb
jae
test
adc
fistl
xor
inc
cld
scas
inc
arpl
xchg
dec
int3
movl
fidivs
adc
push
ljmp
jno
js
mov
stos
test
adc
sti
pushf
mov
and
sarl
test
out
rol
pop
clc
icebp
testb
inc
adc
je
add
mov
push
out
adc
inc
cmp
imul
or
jl
pop
ret
inc
icebp
adc
or
mov
adc
and
or
and
cld
test
shll
push
xor
ss
mov
test
shll
stc
fildl
jb
sub
push
push
pop
insb
add
mov
and
mov
inc
xor
push
pop
mov
loop
bound
add
cs
push
mov
push
and
pop
mov
pop
icebp
stos
hlt
pop
hlt
and
inc
jnp
js
xchg
cs
cltd
cltd
xor
jae
dec
movsl
in
mov
push
shrl
aas
aad
jno
repnz
mov
insl
adc
push
shrb
icebp
aaa
das
push
mov
mov
inc
stos
mov
mov
lods
outsl
lds
cmc
popf
fdivl
data16
mov
and
nop
sbb
outsl
int
addr16
cmpsl
ret
int
js
sbb
clc
sbb
or
fwait
mov
dec
stos
sub
inc
cmc
popf
jae
icebp
lret
adcb
mov
loope
inc
into
jnp,pn
movsb
xchg
cmp
and
inc
fldl
inc
mov
aad
jno
fst
and
jp
mov
sbb
call
aas
jge
cmp
scas
sub
add
in
cmc
inc
cld
mov
pop
mov
sbb
pop
sbb
dec
jge
cli
lods
insb
popa
negl
sarb
and
xor
push
mov
rcr
divl
popl
repnz
adc
cwtl
adc
ljmp
in
aas
add
xor
jae
scas
push
insl
add
mov
nop
sub
icebp
test
es
dec
mov
enter
aam
add
lea
or
test
sub
jo
xor
add
mov
pop
in
sub
dec
in
dec
fcomip
mov
or
cmpl
push
mov
dec
jae
jae
mov
rolb
movsb
shr
pop
mov
outsb
aaa
pushl
sbb
loop
fnsave
dec
add
lcall
out
and
xchg
cmp
push
imul
push
imul
inc
lods
jnp
mov
leave
xor
cmpsb
daa
pop
pop
dec
or
ret
pop
jle
adc
cmp
push
fiaddl
das
push
inc
push
mov
sahf
outsl
push
in
scas
adc
leavew
xor
mov
cmpsl
lods
mov
push
test
loope
mov
jae
pushf
push
sbb
lcall
mov
enter
fucomip
adc
mov
xor
outsl
mov
push
fsubrs
lds
lahf
adc
ds
movsl
negl
and
mov
and
mov
or
jg
mov
jmp
loop
popf
adc
mov
sbb
xchg
neg
cwtl
mov
out
call
xchg
fs
push
mov
and
pavgw
fiaddl
push
inc
ja
mov
out
dec
js
mov
add
push
fcomps
fcom
xchg
dec
jmp
es
and
push
ja
lea
pushf
aas
pop
lds
sub
out
cmp
ret
movsl
jp
lods
and
lcall
call
lcall
cwtl
mov
jns
fidivrl
sub
add
jae
in
sbb
xchg
int3
outsl
sub
arpl
clc
call
clc
jb
loop
or
lret
lods
das
mov
insl
das
ret
popa
rcrb
adc
test
arpl
sbb
jp
repz
push
sarw
subl
imul
ja
adc
jl
push
jbe
shl
ret
test
xchg
das
mov
and
and
test
fwait
xchg
aam
jbe
cli
shrb
scas
sbbb
stc
jecxz
loop
dec
in
inc
mov
jg
out
adc
xchg
push
aam
iret
enter
cld
jno
lret
fisubl
or
lods
jle
cld
cmp
fistps
push
xchg
pop
inc
xchg
inc
je
repnz
into
outsb
aad
jns
aas
rcrl
daa
xor
sub
and
dec
sub
mov
fs
in
lret
enter
pop
inc
rol
mov
inc
push
add
shrb
dec
rcrb
out
lret
dec
jge
sub
dec
mov
enter
cltd
inc
xchg
push
sub
mov
js
cmp
arpl
and
icebp
push
mull
mov
mov
xchg
add
mov
shl
popa
enter
xchg
jle
pop
rcll
mov
push
xchg
inc
push
aas
xchg
inc
sub
aaa
adc
bound
inc
cld
xchg
leave
fcmovbe
push
and
mov
pop
xchg
inc
iret
aam
pop
mov
mov
mov
jne
pop
test
adc
nop
inc
stos
dec
cs
pusha
js
fwait
pop
jne
stc
iret
popa
add
fsubr
mov
clc
pop
sub
fdivrs
xlat
addl
xor
push
cwtl
aam
ds
jae
push
dec
and
lds
add
outsb
dec
in
jns
inc
out
loopne
call
imulb
test
ret
das
int
jl
dec
data16
pop
leave
dec
aam
sub
call
mov
and
sahf
rcr
xchg
inc
jg
lcall
cli
push
jns
jge
cmpl
das
ror
add
jg
fidivl
fdivrl
sbb
movsb
imul
or
or
sbb
cld
outsl
dec
pop
xlat
cltd
adc
or
push
inc
pop
cmc
fildll
push
jae
in
nop
mov
push
pop
jecxz
inc
adc
cld
cld
shll
jecxz
std
clc
lret
cmp
sbb
pop
cmpsb
ja
fisttpl
orb
fsts
std
cltd
adc
je
mov
inc
xchg
repnz
ljmp
stos
scas
adc
sub
sbb
insl
push
mov
xchg
mov
jno
sbb
out
push
mov
testb
lock
xchg
xchg
sub
int3
mov
lahf
test
cmp
rorl
cmp
mov
dec
out
enter
push
push
fsubrl
adc
ficomps
lret
mov
adc
inc
les
movsb
mov
lahf
stc
dec
inc
and
mov
mov
mov
mov
int
mov
sbb
fisubl
cmpsl
or
sbb
mov
sub
or
aas
mov
xchg
mov
imul
mov
mov
lods
adc
inc
and
loope
mov
hlt
xor
pop
gs
inc
adc
mov
scas
or
xor
xchg
mov
sub
je
and
mov
mov
ret
sbb
mov
push
mov
mov
push
stos
lods
cmpsl
pop
fists
pusha
push
pop
in
or
jnp
iret
xchg
add
cld
inc
adc
xlat
jae
add
or
jb
push
idivl
mov
sub
xchg
inc
jbe
dec
insb
movsb
fiadds
int3
sti
hlt
lret
popf
xchg
pop
mov
pop
inc
adc
je
scas
movsb
lea
out
xchg
and
pop
dec
sbb
dec
out
fcoms
jle
dec
in
shr
inc
out
jle
sarb
lea
pop
ret
jmp
mov
sti
sbbl
psubusw
ffreep
aam
mov
xor
mull
mov
std
xchg
mov
dec
stos
inc
aas
add
or
xchg
sub
pop
mov
pop
aad
test
jge
leave
or
iret
data16
sbb
icebp
fisubrl
int3
jle
jmp
cmp
cmp
mov
sub
scas
mov
jl
xchg
fidivrl
adc
repz
dec
fimull
lss
imul
xchg
movsl
mov
scas
and
popa
inc
fcoms
in
cwtl
xchg
addb
jb
add
stc
or
sarb
sub
cwtl
mov
inc
sub
lret
in
xor
push
popf
call
jmp
and
adc
sub
mov
out
mov
insl
add
repz
outsl
and
and
nop
cmp
xor
mov
repnz
lods
push
in
inc
fcompl
popf
arpl
push
data16
cmp
push
pop
imul
dec
pop
pushf
inc
xchg
adc
inc
cmpl
sub
pop
lcall
xor
pop
pop
sub
test
scas
cmpsb
cwtl
das
fmul
pop
add
mov
sub
in
push
dec
aam
jg
add
ror
and
and
aas
dec
inc
lds
pop
hlt
sahf
xchg
dec
jecxz
mov
push
sbb
lcall
mov
cmpsb
cmp
jmp
les
or
loop
addr16
adc
mov
ficompl
mov
add
cmp
pop
push
outsb
add
scas
stos
mov
xchg
add
cltd
jl
cwtl
pusha
test
rorl
jne
loop
pop
cmp
dec
dec
lret
sub
cmp
fistpl
push
adc
xor
dec
dec
mov
cmpb
mov
rorl
pop
sub
rolb
cmp
sbb
iret
push
mov
outsb
jle
mov
stos
out
jae
sub
incb
popf
mov
xchg
or
push
movsl
test
sbb
dec
sbb
pop
dec
push
rcrl
mov
add
inc
adc
mov
popa
xchg
sub
arpl
dec
out
pop
repnz
shrb
pop
jp
cmp
xchg
push
movsl
fisubrs
sub
xor
aad
xor
loope
push
repz
cmpsl
adc
daa
cli
das
sub
cmp
dec
in
pushf
ret
sahf
imul
out
loopne
and
mov
xor
stc
sbb
and
cmp
ret
xchg
xor
leave
sbb
test
sbb
ds
mov
roll
popf
ret
or
mov
daa
mov
lret
or
sahf
xchg
and
cs
sub
sub
xor
mov
push
in
cli
aam
stos
lds
ds
push
pop
lock
or
jl
lds
push
jmp
int3
iret
data16
shrl
stos
leave
pusha
faddp
leave
pusha
mov
fbstp
xlat
adc
test
push
in
fisubl
xchg
cs
fidivl
add
cmpl
fsubrl
add
push
lods
fnsave
mov
mov
pop
repz
flds
insb
cmp
das
fstp
pop
repnz
pop
icebp
stos
mov
test
mov
movsl
jp
pop
inc
in
test
ljmp
lret
movsb
cmp
jb
lods
aam
shl
test
in
ljmp
dec
and
or
es
pushf
add
aam
jb
push
cmpsl
ds
scas
lods
inc
fisubl
into
push
jge
cmpsb
jne
xchg
addr16
fnstenv
mov
pop
cli
xchg
pusha
sbb
xor
mov
adc
jge
mov
std
lock
mov
jnp
push
pop
cmc
mov
xor
dec
insl
lea
mov
xchg
ljmp
and
inc
or
aaa
mov
nop
mov
pop
and
pop
and
pusha
jo
jae
sub
lds
jmp
xchg
pop
mov
add
xor
insb
dec
rclb
shlb
pop
stc
nop
dec
fisttps
std
jo
cmp
shlb
xor
cmc
pop
lds
push
inc
test
pop
imulb
inc
fldcw
iret
sbb
ljmp
nop
ret
sub
test
inc
adc
or
dec
out
sub
jecxz
mull
mov
xor
mov
inc
stos
push
in
lock
adcl
jbe
ja
std
push
mov
push
ds
sahf
xlat
ss
scas
jno
and
popf
xor
icebp
mov
dec
xor
jae
out
xchg
aaa
into
inc
jns
pop
imul
fmull
lea
cmpsl
cmpsl
daa
mov
nop
jl
sub
mov
mov
dec
sbb
sub
cwtl
pop
push
jne
dec
neg
jb
imul
pop
mov
call
xorb
add
shlb
dec
pop
repnz
mov
mulb
cmp
add
inc
adc
ds
mov
dec
aad
cltd
add
pop
test
jae
jno
inc
frstor
dec
adc
jne
push
lods
xchg
and
pop
mov
stos
sub
std
xchg
xor
mov
imul
pop
repnz
add
arpl
shrb
pop
cmp
jl
pop
icebp
mov
in
dec
test
data16
xor
shlb
rcll
ret
shl
jecxz
sti
aam
xchg
sub
cmc
xor
out
dec
loope
pop
xchg
sub
pop
push
out
lcall
subb
mov
mov
stc
cs
and
add
or
lods
scas
inc
fdivrl
mov
js
out
mov
xchg
ja
fbstp
sbb
jmp
stos
add
adc
stos
movsl
cmp
pop
lea
jns
out
imul
pop
pop
insl
add
jle
insb
jo
xchg
sub
add
sub
xor
mov
int
sub
ret
clc
pop
jbe
push
xchg
sbbl
orl
mov
push
mov
push
mov
ja
outsb
stos
mov
sbb
jp
aas
cmp
pushf
xor
rcll
test
mov
scas
mov
sbb
mov
insl
out
cmp
jnp
jl
rcrl
xchg
das
aam
mov
ret
mov
stos
inc
imul
adc
pop
xchg
fcmovu
adcb
cld
sbb
sbb
push
xorb
nop
daa
adc
adc
mov
gs
aad
mov
fidivl
sub
les
hlt
add
pop
jae
sbb
push
push
pop
testb
adc
sub
mov
cmovge
mov
cmpsb
cmp
lds
repnz
xchg
test
inc
popa
pop
testl
sbb
push
jmp
testl
ret
jg
mov
inc
pop
cmc
jno
call
inc
or
lret
arpl
cs
jle
stc
nop
pushl
cmc
mov
ret
sbb
movsb
movsb
aad
mov
test
dec
loope
sub
add
stc
add
sbb
xor
mov
pusha
adc
sbbb
dec
loopne
lds
into
sub
or
or
lods
inc
fidivrs
test
icebp
andl
arpl
lahf
ss
add
and
dec
adc
mov
fmull
ja
jmp
push
insl
jae
jg
jb
pop
hlt
dec
xchg
lock
daa
inc
fstpl
mov
pop
negb
sub
cld
push
sbb
dec
jo
bound
cs
data16
hlt
xchg
cmp
in
cli
xchg
xchg
mov
sbb
xchg
sub
jns
add
shrb
aaa
insl
loope
mov
and
arpl
add
lea
sbbl
jecxz
add
cltd
xor
or
out
sahf
scas
mov
xor
jo
dec
lods
push
xchg
mov
xor
lds
lds
xor
add
repnz
fisubrl
push
decb
js
mov
xchg
mov
adc
inc
outsb
add
ret
sahf
dec
jb
sub
inc
and
insl
or
xchg
dec
mov
mov
dec
gs
xlat
adc
divl
jno
inc
shrl
dec
add
test
add
xor
mov
pop
push
and
repnz
sbbl
adc
xchg
test
movsl
pop
jle
movsb
cmp
popa
stos
push
loope
mov
cwtl
das
mov
ficomps
iret
adc
test
loop
xchg
sub
add
mov
ret
xchg
inc
xlat
push
mov
xchg
cltd
outsl
push
jl
mov
adc
cwtl
das
dec
add
shll
add
sub
imull
ja
or
and
adc
sti
movsb
lahf
adc
cs
add
jge
mov
call
and
femms
inc
xlat
jb
push
scas
add
test
lcall
nop
push
jp
call
test
lods
popa
cmpsb
in
cli
orb
cmpsl
mov
ret
rol
insl
add
icebp
push
popf
mov
xchg
cltd
aad
push
mov
push
xchg
icebp
sbb
movsl
adc
adc
cs
cli
xchg
lret
call
fs
sarb
stos
mov
lds
mov
div
inc
sbb
push
adc
mov
ja
clc
outsl
lret
fcoml
push
mov
inc
push
popa
icebp
dec
fbld
orl
jae
mov
xchg
rorb
cmpl
pushf
xor
mov
ret
scas
inc
daa
fstpl
push
dec
fidivl
das
imul
into
orb
inc
cld
xchg
ss
cmp
or
icebp
mov
inc
fidivl
push
add
or
popa
pop
out
xchg
sub
mov
add
cmp
out
mov
out
xchg
outsb
fs
xchg
out
jge
fisttpl
or
sub
inc
fsubl
inc
fcmovnbe
mov
leave
cmc
pusha
xchg
sub
push
outsl
push
lods
push
lret
bound
stos
mov
mov
sbb
dec
cmpsl
incb
pop
fucomip
std
xchg
roll
pop
xor
sbb
push
mov
loopne
fsubrl
xor
jae
xchg
movsl
or
test
xlat
outsb
cld
add
stc
jne
shrl
mov
inc
in
mov
imul
out
mov
jo
add
lcall
stos
dec
cltd
les
mov
push
int3
jo
mov
push
push
movsl
mov
cli
sub
out
pop
mov
imul
push
inc
sbb
jg
shlb
mov
inc
loope
jg
sbb
movsl
jne
mov
test
stos
add
inc
mov
cmpsb
aad
fadds
adc
push
sbb
cmp
jo
jge
mov
mov
inc
popf
clc
adc
pusha
ret
pop
lods
shrl
subl
adc
lock
lods
cmc
jbe
ficoml
add
test
and
repz
and
or
adc
mov
ret
hlt
fmuls
int3
xlat
fldt
ret
mov
stos
ljmp
xchg
jae
cmp
outsb
inc
loope
pop
daa
xchg
pop
sub
roll
adc
push
js
addb
jnp
add
jne,pn
icebp
mov
cs
fnstcw
into
gs
pushf
cmp
int
in
push
add
mov
in
test
cld
ret
adc
test
les
stos
add
sub
jge
or
std
sub
push
fwait
enter
lods
outsb
insl
mov
add
xchg
sub
inc
jge
xor
subb
jnp
mov
adc
push
movsl
jb
loop
push
xchg
push
pop
mov
pop
repnz
imul
xchg
arpl
or
jmp
and
inc
fistl
mov
stc
loop
xor
outsl
add
sub
or
push
repz
into
ja
int3
push
out
loop
shlb
aaa
loope
xor
enter
sub
jne
push
fsts
out
xchg
dec
insl
pop
adc
mov
es
lods
out
and
addr16
loop
insl
xchg
fidivl
mov
jp
test
inc
jl
xchg
jp,pn
lock
fwait
mov
sub
xor
mov
lock
dec
out
pushf
jp
into
adc
mov
out
ret
pop
loopne
mov
sbb
dec
loop
clc
pop
cmc
ljmp
mov
sbbb
sub
sbb
pushf
addr16
pop
adc
and
sbb
jmp
pop
mov
stos
decb
add
push
stos
bound
push
push
in
in
mov
cld
insb
mov
pop
pop
pop
scas
dec
sbb
outsl
adc
cmc
mov
scas
lds
ljmp
imul
std
shrb
test
jecxz
scas
inc
pop
jb
cmp
jg
aad
fcmovb
lds
and
fists
dec
in
cmpl
mov
fdivrs
lret
mov
shrl
jge
pop
mov
mov
inc
inc
sub
cmp
out
xchg
icebp
mov
addr16
pusha
xlat
popf
xor
int3
in
cmpl
cmpsl
ds
jle
mov
lea
jge
stc
jecxz
sbb
sbb
xchg
into
xchg
sub
dec
pop
lock
fidivl
xchg
test
enter
sub
jg
jne
mov
jo
adc
sbb
adc
jae
shrl
mov
push
fdivl
and
leave
mov
ret
or
mov
mov
and
cli
xchg
push
loope
fdivl
push
test
adc
out
jno
mov
testb
ret
mov
sti
call
and
jmp
sbb
mov
popa
fidivs
push
in
in
aaa
cmpsb
cmp
mov
cmp
cwtl
test
adc
cld
xchg
test
mov
jo
xchg
adc
inc
lcall
cltd
shrb
jle
mov
pop
push
adc
test
rclb
cltd
xor
mov
pushf
sbb
or
add
mov
mov
jbe
out
mull
xor
mov
scas
int
xor
into
out
popa
clc
mov
cs
and
jmp
or
cmp
pop
icebp
rcrb
loope
mov
and
inc
data16
pop
sub
and
adc
loope
xor
adc
sub
dec
pusha
imull
jg
arpl
sti
xchg
and
add
jae
jle
add
add
movsb
and
and
inc
inc
fidivs
sbbl
cwtl
cmp
and
add
pop
lds
mov
mov
add
rcl
insl
out
cli
xchg
mov
shrl
int3
arpl
testl
out
cmp
pop
mov
jmp
dec
not
push
loop
rcrl
in
test
mov
out
jne
add
pushf
xor
jne
pop
cmp
cwtl
cmp
pop
dec
pop
cmp
inc
mov
ret
mov
mov
ret
xchg
mov
fsts
scas
out
pop
cmc
rolb
loopne
loope
sahf
mov
push
in
add
insl
add
and
or
xchg
mov
ja
add
outsl
push
jne
in
adcl
and
js
adc
fidivs
jmp
cs
insb
add
lods
ret
mov
repz
ficomps
test
add
loop
mov
popf
and
sub
out
xchg
mov
daa
adc
mov
pop
mov
sti
call
ljmp
add
adc
push
nop
cmp
shll
dec
loop
mov
push
loop
in
mov
sub
adc
mov
mov
addr16
lcall
mov
jmp
push
jmp
pushf
nop
or
jecxz
inc
pop
repnz
sub
test
jns
lock
lret
aam
or
mov
andb
ljmp
jno
pop
loopne
mov
push
les
fisttpll
int
and
aas
mov
shrl
rorb
mov
cmp
scas
imul
stc
nop
addl
cmp
mov
rcll
inc
jnp
in
lahf
addr16
lahf
sarb
ror
jmp
mov
push
loopne
mov
mov
cmp
or
shrb
addl
jo
enter
adc
testl
test
xchg
cmp
std
xchg
cmp
test
push
and
mov
cmc
aas
aam
divb
es
pop
hlt
cmpsl
inc
mov
loop
gs
adcl
or
into
or
sarb
data16
sti
push
movsl
ljmp
mov
testb
push
fwait
clc
pop
in
dec
ss
dec
dec
loope
adc
jne
lods
shrl
pop
add
and
mov
pusha
es
jp
mov
and
adc
push
dec
sbbb
aaa
push
in
cmp
pop
pop
hlt
inc
addr16
pop
bound
rorl
sbbl
int3
dec
mov
jno
mov
or
into
js
jecxz
xchg
mov
push
xlat
xchg
in
cmpsb
cmp
mov
ret
or
test
push
in
mov
fisttpl
mov
dec
push
dec
out
outsl
mov
or
mov
and
adc
lods
inc
push
js
cmpsb
cmp
nop
xlat
sub
or
pop
hlt
pop
add
lods
xor
into
and
mov
pop
cmp
add
in
scas
adc
pop
out
jae
add
xchg
jb
dec
filds
les
stos
inc
mov
sbbl
xchg
mov
icebp
mov
popa
dec
push
push
jmp
xchg
xchg
imul
js
scas
test
pop
jne
cmp
pop
lret
cmp
aam
clc
push
inc
mov
pusha
loopne
lods
fisttps
cmpb
orb
dec
loop
leave
adc
imul
mov
cmp
jne
cmp
jl
ret
mov
mov
sub
arpl
mov
ret
ret
jne
in
dec
jmp
fmull
repz
xchg
loope
mov
xor
arpl
ja
fimull
xchg
sbbb
and
lods
mov
ret
roll
push
cmp
or
insb
xor
jge
mov
shlb
mov
and
data16
pushf
inc
dec
pop
adc
mov
insl
adc
pop
add
and
popa
inc
cli
xor
dec
mov
push
sahf
bound
pop
outsl
dec
mov
gs
pop
mov
jg
sbb
xchg
pop
repnz
sbb
cmp
mov
dec
imul
loope
dec
lods
inc
orb
push
add
cmc
sub
movsl
cmp
xor
push
mov
add
rcrl
sahf
mov
add
lods
xor
in
test
xor
mov
repz
frstor
in
inc
popa
fwait
rol
sbb
loopne
lock
stos
test
sti
mov
inc
ffreep
movsb
pop
xlat
fbstp
outsb
fisubrl
sbb
xor
dec
add
in
scas
mov
std
shlb
ja
nop
insb
dec
scas
call
xor
mov
repnz
pop
lock
inc
cmp
rcrl
mov
jns
pop
pusha
or
outsb
push
imull
inc
mov
js
jns
ss
xchg
sub
scas
mov
sub
scas
inc
sub
dec
mov
popa
xlat
push
mov
push
mov
scas
ja
push
jmp
dec
mov
push
xchg
cmpsl
adc
stos
pop
lahf
pop
lds
dec
dec
lds
xor
pop
inc
xor
pusha
pop
and
push
xchg
out
cmp
inc
pop
push
out
arpl
scas
loope
jbe
scas
movsl
push
pop
or
xchg
lea
test
push
dec
mov
pop
aam
mov
jns
ss
pop
dec
mov
mov
pop
adc
loope
push
sbb
xchg
mov
inc
loopew
arpl
mov
pusha
sbb
shrl
cmp
insl
pushf
mov
mov
and
jg
jbe
ret
pop
jae
cld
push
adc
lcall
mov
nop
adcb
xchg
ret
into
inc
enter
fs
stos
inc
rcl
xlat
dec
dec
iret
push
ror
cmp
push
sub
inc
xlat
ficoms
inc
ss
scas
les
sbb
loope
jb
push
data16
push
jae
movb
fnsave
int3
push
adc
mov
sbbb
outsl
adc
cmp
xchg
stos
xlat
adc
sarl
mov
out
jo
mov
jl
aad
adc
sub
and
call
push
call
in
subl
push
mov
fiadds
rol
pop
mov
out
pop
repz
mov
popa
std
sbb
stos
jne
xchg
sub
roll
aad
cmp
test
or
hlt
outsl
push
jmp
out
shll
or
aaa
cmp
xchg
mov
mov
shlb
aas
xorb
cwtl
sub
outsl
ss
inc
mov
sub
out
ljmp
iret
lods
xor
adcl
scas
inc
sub
jl
adc
xchg
add
clc
or
inc
fcompl
cli
mov
inc
pop
add
mov
out
lret
push
mov
add
push
int3
das
lret
sti
insl
add
or
aam
repz
push
movsl
cld
adc
adc
add
inc
sarb
ds
repnz
imul
fwait
sbbl
push
adc
inc
dec
lock
push
dec
sub
insb
pop
clc
sub
dec
loope
jns
xor
ds
subl
int3
xchg
push
xchg
test
sbb
cmpsl
jmp
or
xlat
fcmovnu
lahf
push
xor
mov
dec
pop
in
cmpl
mov
push
xchg
adcb
ds
jmp
test
hlt
jbe
outsb
addr16
mov
push
fiaddl
cmp
pop
pop
scas
cmp
mov
roll
call
test
fbld
sarb
ret
mov
cld
or
lods
pusha
mov
ss
add
push
cld
jbe
into
push
fldenv
adc
icebp
sbb
and
test
repnz
cmpsl
push
test
je
add
mov
and
stc
cmpsl
and
outsl
push
enter
dec
shrb
sub
cmp
cmpsb
pop
les
sbb
pop
sub
add
xchg
pop
and
lods
ret
pop
fistps
dec
popa
repnz
inc
sti
xchg
jns
hlt
mov
mov
jae
xor
leave
add
dec
push
jae
pop
cmp
imul
pop
jl
pop
sar
les
cmc
lods
lret
xchg
out
test
cli
add
enter
rcrb
cmc
pushf
mov
clc
stos
xchg
dec
orl
stos
inc
cmp
fcom
daa
in
push
push
adc
cmpb
or
cmpsb
sub
test
push
call
push
xchg
mov
sbb
cmpsl
ds
leave
test
movd
sub
pop
out
daa
ja
mov
jb
xor
dec
fstpl
shl
nop
das
ljmp
shrl
jo
and
or
aam
lea
pop
out
sbb
jbe
jb
mov
cli
out
arpl
jns
call
mov
add
je
cmp
jge
lret
aaa
pusha
data16
jnp
add
jg
pushf
add
fidivrs
imul
push
shll
inc
xchg
shr
test
mov
pushf
xor
popa
xchg
sub
mov
mov
mov
pop
lret
lahf
nop
dec
sbb
fidivrs
fwait
add
in
daa
push
sbb
adc
mov
pop
arpl
lret
popa
and
nop
fwait
rcr
jp
inc
cmp
adc
int3
sbb
iret
mov
xchg
and
push
stc
jle
jno
aad
insl
mov
sbb
push
push
lods
cmc
sub
jo
lahf
ss
xor
lods
mov
sbb
mov
mov
ja
imul
pop
into
outsl
mov
lds
inc
stos
rcr
or
and
and
dec
loop
jle
scas
movsb
out
pop
xlat
loope,pn
mov
mov
cmp
imul
push
add
push
imull
lret
sti
xchg
std
repnz
jne
dec
or
int3
cli
loope
pop
mov
mov
into
aam
mov
cmpsl
mov
push
mov
hlt
mov
fbld
lahf
sbb
stos
xor
cltd
dec
stos
inc
xchg
sub
sub
sarb
and
mov
sahf
insb
push
lds
loopne
lret
sbb
mul
cmp
out
push
in
call
loopne
inc
ljmp
sbbl
das
cmp
push
jae
lahf
xchg
cmp
lcall
sbb
dec
xor
jno
lcall
js
sub
nop
sbb
shlb
pop
les
cli
xchg
jne
call
out
stos
inc
and
hlt
call
dec
and
push
mov
xor
ret
idivb
sbb
or
cmp
mov
adc
add
sbb
dec
fwait
rcrb
jb
lds
mov
shrb
or
mov
or
mov
stos
outsb
not
ljmp
pop
ljmp
mov
pop
add
into
lds
sahf
add
mov
and
dec
leave
push
pop
cli
jp
mov
inc
outsb
aam
mov
inc
jge
sbb
or
lods
mov
bound
out
jecxz
mov
xchg
call
and
adc
sahf
fwait
lret
test
fs
out
sub
scas
inc
mov
rcr
mov
pop
xchg
dec
sar
mov
adcb
push
mov
iret
mov
cltd
or
xor
aas
test
repnz
xor
inc
dec
jecxz
cmpsb
cmp
mov
pop
icebp
mov
lahf
inc
push
lret
sub
push
sti
into
and
addb
fucomp
shrb
sbb
push
xor
fbld
fwait
adc
and
std
aad
das
cli
stos
xchg
lock
mov
mov
popf
dec
jecxz
xchg
cmp
mov
sub
jne
sbb
mov
jno
inc
shl
in
sbbl
mov
push
jne
lret
and
mov
repz
jmp
add
dec
sub
repnz
mov
popa
ret
ja
addr16
andb
dec
repz
fcompl
ret
adc
out
rolb
sarw
add
mov
imul
add
or
pop
popf
or
and
test
fsts
dec
fsubl
lods
adc
test
sub
mov
inc
pop
cmpsb
inc
mov
insb
sbb
adc
mov
add
popf
dec
xor
xchg
mov
mov
out
inc
cs
adc
into
jae
fs
div
cmp
xor
stos
push
int
std
push
xor
sbbl
out
jnp
fisubrl
jbe
in
push
jmp
movsl
mov
jecxz
dec
cwtl
ja
mov
repnz
fldcw
je
das
fcmovb
and
cmp
or
mov
mov
in
mov
lea
lods
jmp
dec
lret
js
daa
test
xchg
add
xchg
ret
lods
lcall
shrb
jl
fbstp
jae
xor
pop
imul
testb
mov
hlt
popf
cmp
cli
movsl
pop
iret
into
jo
jmp
mov
jg
inc
xchg
cmp
scas
xchg
jmp
jne
rclb
mov
push
paddb
imul
jb
gs
test
cmpsl
sub
fsubrs
jp
das
dec
aad
subb
aaa
cmp
push
jo
cmp
popa
imul
fsubp
into
adc
push
add
fisttps
lcall
aam
pop
int
dec
aam
aas
mov
push
push
aad
fs
inc
imul
mov
inc
or
pop
movsb
xchg
mov
push
f2xm1
pop
pop
mov
fstpl
and
imul
loope
loop
repnz
popa
test
rcr
mov
sbb
pop
int3
mov
jnp
loop
movsb
out
cmc
imul
dec
ret
lock
pop
jmp
xor
push
pop
fsubl
xchg
dec
aam
and
pop
arpl
sbb
icebp
cwtl
cmp
dec
jmp
leave
out
dec
fs
andb
std
inc
in
fsubrs
in
add
lret
jnp
int
cmc
mov
addr16
mov
clc
sbb
sub
fs
pop
sbb
pop
loopne
mov
jmp
and
add
loope
shr
dec
pop
loop
xlat
inc
sbb
mov
iret
mov
push
cld
fcmovne
cmp
mov
call
push
jmp
sahf
fisttpll
lds
inc
out
aad
and
imul
xchg
stc
daa
mov
in
lret
push
ret
insb
repz
push
cmp
jl
dec
sub
dec
stc
lock
jnp
stos
jmp
mov
push
pop
test
stc
cltd
mov
int
call
jo
mov
les
mov
dec
lds
push
jb
test
dec
pop
shll
adc
xorb
mov
add
cwtl
int3
adc
rorl
test
inc
pushf
rcr
cmp
add
rorl
movsb
dec
dec
imul
pop
xchg
je
or
sub
xor
cmp
repnz
cmp
push
lds
xchg
int3
bound
stos
clc
scas
dec
adc
mov
pop
push
pusha
mov
xchg
mov
les
mov
repz
cwtl
cmpsb
cmp
pop
and
push
jge
jl
sahf
jg
fcmovnbe
fnstsw
inc
lds
fstpt
mov
mov
arpl
pop
mov
mov
xchg
insb
jmp
ret
int3
cmp
jl
iret
movsb
fcmove
mov
push
cs
ret
scas
push
pushf
or
sub
mov
mov
xchg
push
xchg
sub
test
fstps
insb
jmp
leave
ss
xor
adc
inc
push
shlb
push
femms
popa
add
sbb
pop
fnstenv
call
fwait
xor
pop
pop
in
add
data16
lcall
cmp
pushf
xor
xor
out
jo
ljmp
test
sbb
xor
pop
cmp
lods
sbb
jae
pop
jo
into
add
or
in
adc
fisubrl
push
or
xor
dec
imul
movsb
sub
icebp
or
lods
ficomps
push
lock
pop
cmc
jnp
or
sbb
hlt
js
std
xor
push
ss
jge
and
adc
pop
cmp
pop
inc
pop
and
dec
xor
in
adcl
rorb
xchg
xorb
sti
push
lcall
cli
scas
inc
sub
dec
stos
push
lcall
xchg
jb
pop
movsb
mov
inc
pop
adc
popa
push
enter
testl
rcrb
ja
adc
sbb
lea
repz
and
repnz
xor
stc
out
push
mov
lock
dec
add
pop
fbld
xchg
gs
or
rclb
outsl
pop
pop
scas
dec
push
xor
addl
sbb
add
jbe
adc
out
aas
pop
mov
movsb
frstor
bound
aaa
pop
add
lcall
fwait
xor
popa
sbb
shl
icebp
imul
or
daa
or
adcl
or
xchg
lea
lcall
add
adc
mov
push
dec
test
add
adc
fwait
out
cmp
shrl
popf
mov
lods
mov
outsl
movsb
inc
jecxz
popf
push
out
into
or
push
mov
imul
mov
out
subl
push
inc
pop
mov
mov
fs
jae
mov
xchg
sub
mov
int
mov
sbb
seta
lods
movsb
and
mov
loop
mov
xor
rolb
sub
in
pop
and
mov
adc
pop
out
dec
jle
inc
pop
das
or
sbb
xor
push
mov
mov
ror
mov
jmp
or
lret
subb
lret
scas
dec
add
mov
repz
mov
arpl
sahf
int3
mov
shrl
push
pushf
xor
sti
xlat
pop
xlat
or
sbb
add
pop
ss
stc
popl
orb
lea
rcrb
into
lret
ret
xchg
fstps
insl
fdiv
int3
aaa
jnp
sbb
pushf
into
mov
adc
xchg
push
lods
adc
pop
sbb
mov
loopne
cmp
shl
cs
mov
icebp
lock
sub
adc
or
jne
or
inc
push
imul
test
sahf
pop
shr
pop
mov
pop
jbe
test
push
mov
insb
mov
cmp
xchg
adc
gs
adcb
fdivrs
addb
dec
outsl
fucomi
lods
push
mov
insl
or
xor
popa
and
cmp
inc
das
das
push
call
sbb
dec
pop
test
mov
push
je
sti
mov
mov
or
add
fidivl
cmp
loop
mov
fucomip
xlat
out
subl
movsb
cmp
inc
xor
scas
adc
inc
push
lcall
pop
mov
xor
gs
xchg
jg
jl
test
jge
loopne
pushf
dec
jns
pop
shlb
pop
sbb
in
mov
lcall
and
imull
jns
loop
adc
inc
xchg
pop
xchg
rcrl
jmp
adc
adc
repnz
cmp
pusha
push
ljmp
xchg
adc
inc
and
lock
cmp
inc
xchg
loopne
mov
ljmp
scas
jbe
fcmovb
and
jmp
mov
adc
addr16
jmp
xchg
xchg
dec
cli
ss
rcll
inc
push
mov
pop
ja
je
fistpll
pop
mov
hlt
jmp
and
pop
jl
pushf
popa
stc
dec
xlat
sub
int3
jae
inc
push
cmc
dec
cmp
jle
outsb
dec
mov
mov
lods
ja
add
les
xor
loope
ret
lahf
xchg
iret
rcrb
xchg
sub
ljmp
add
insl
das
iret
stos
cmp
pop
testb
and
into
lret
imul
rol
jnp
cltd
mov
insl
insl
sub
dec
hlt
sbb
xchg
movsl
inc
add
addr16
sub
das
mov
adc
aam
mov
pop
aad
pop
fs
out
sub
pop
jl
or
jbe
fldcw
cmp
jne
pop
repz
in
jb
mov
push
jae
or
ja
sub
cmpsl
lea
cmp
pop
lock
pop
leave
xchg
xlat
lahf
rcl
pop
jmp
imul
iret
push
ret
xor
push
rorl
xchg
movsb
lret
out
outsb
add
cwtl
loopne
cmp
out
sub
xlat
nop
daa
lret
stos
std
arpl
pop
mov
pop
sbb
jnp
lahf
mov
xor
fcomps
cmp
mov
enter
test
lahf
mov
ja
imull
lods
pop
fucomip
pop
sub
out
inc
cltd
stos
pop
mov
mov
sbb
adc
testb
jno
mov
mov
push
out
jmp
insb
cmpsl
pushf
mulb
addr16
in
sbb
jbe
dec
mov
pop
mov
mov
outsb
roll
orb
adc
inc
adc
enter
inc
scas
in
mov
xchg
shlb
dec
fstpl
jnp
fcomps
pop
std
test
adc
addr16
xchg
test
cwtl
mov
or
jnp
cmp
xor
and
ss
jns
pop
dec
es
cmp
dec
xor
push
stos
jg
jmp
xchg
sub
in
xor
shrl
lret
jge
loopne
and
sub
mov
shrl
test
and
aas
into
gs
mov
xchg
and
mov
cltd
inc
fcmove
repnz
in
popa
clc
sbb
jg,pt
jo
rcrl
popf
xor
in
fbstp
in
push
pop
inc
std
xchg
jb
fnstenv
xchg
sbb
mov
fists
out
lods
and
push
into
jne
add
sbb
movsb
icebp
mov
out
adc
xor
pop
lods
lret
dec
je
fucomp
cmp
xor
and
test
out
pop
sbb
std
roll
ljmp
jno
lret
mov
pcmpgtw
mov
test
test
xchg
cmp
imul
push
aam
adc
xor
in
ja
and
jle
fdivrs
and
lods
jmp
jl
sub
mov
xchg
mov
pop
imul
jle
icebp
cwtl
pusha
dec
insl
mov
pop
jecxz
dec
enter
imul
inc
pop
idivl
nop
idivb
xchg
pop
roll
cltd
add
data16
sub
clc
and
lret
icebp
dec
mov
mov
cmp
ror
rcll
sub
aas
dec
bound
cmc
or
out
push
jl
in
inc
repnz
jae
in
incb
pop
insl
sbb
mov
push
inc
dec
push
lea
repnz
roll
mov
pop
dec
xor
jg
adc
jp
adc
shl
cmp
dec
pop
inc
dec
adc
dec
inc
bound
hlt
dec
or
in
dec
xlat
cmpb
push
hlt
mov
stos
aas
cmp
das
mov
stc
lods
lret
dec
out
dec
je
repnz
popa
mov
aad
pop
and
xor
in
dec
in
cmp
ja
mov
or
push
inc
dec
pop
test
ljmp
mov
xchg
xor
cmp
xchg
push
leave
icebp
mov
mov
inc
add
xor
ljmp
jne
push
sbb
ret
sub
xchg
cmp
adc
sub
or
sbb
push
ret
cld
imul
mov
mov
leave
sti
inc
sti
popf
inc
dec
cld
sub
pop
adc
adc
add
dec
sub
shrl
inc
or
fimull
cmpsb
dec
lods
sahf
lods
rclb
in
das
daa
cli
test
das
pop
out
xor
jo
and
aas
mov
fstpl
js
cmp
iret
cltd
mov
adc
shlb
or
jecxz
adc
hlt
inc
sarb
sbb
pop
bnd
pop
imul
cltd
dec
mov
inc
dec
fnstsw
mov
adc
lcall
jne
push
adc
daa
bound
inc
je
mov
test
mov
adc
push
dec
push
rolb
insl
sbb
push
shrl
pop
test
add
mov
lahf
fwait
push
incl
aaa
mov
xchg
scas
outsl
xor
sbbl
enter
cmpsl
mov
out
pop
icebp
data16
cmc
xor
sub
xlat
push
mov
aam
adc
dec
or
dec
xor
inc
aas
fnop
loopne
clc
lcall
push
xor
sub
add
repnz
and
mov
bound
ljmp
sub
or
sub
in
pop
cld
nop
ficoms
sub
dec
lods
inc
xorb
movsl
pop
inc
xlat
pusha
mov
pop
mov
nop
pusha
lods
andl
add
and
sbb
jnp
popa
sub
pop
jb
popa
fsubs
cmp
nop
pop
xlat
insb
movsb
cmp
rcrl
repz
xchg
xlat
ret
fprem
lock
rorl
das
lea
aas
sub
push
cmc
mov
push
call
les
fcoms
test
notb
jge
cmpsl
mov
clc
test
push
dec
xchg
stos
pop
addr16
jl
mov
push
adc
shrb
outsb
mov
das
mov
add
out
hlt
sbb
cmpsl
test
push
movsl
insb
icebp
imul
pop
dec
mov
xlat
mov
pushf
scas
push
mov
loopne
lock
dec
cs
or
xor
dec
gs
mov
jle
xlat
enter
aas
cld
addr16
inc
cmp
out
sti
sbb
sbb
out
cmp
inc
loopne
notb
sbb
jo
mov
faddl
mov
jmp
pop
shll
or
push
mov
jo
mov
out
xor
push
out
mov
xor
mov
in
fs
shll
lss
add
jae
shlb
imul
mov
daa
stos
dec
sbb
jl
pop
adc
mov
mov
aam
xchg
negl
mov
filds
out
cwtl
das
or
lods
add
mov
insl
xchg
xchg
and
dec
jecxz
mov
out
in
popf
popa
aaa
adc
dec
out
pop
mov
xchg
inc
in
cli
movsl
inc
pop
fdivrl
test
std
push
jne
push
push
out
sub
jg
mov
mov
mov
push
iret
mov
push
or
ds
adc
pop
fldenv
shlb
xchg
sub
aaa
les
outsl
lods
jmp
int
mov
repz
add
sbb
pusha
jne
cmpsl
add
pushf
mov
mov
inc
fdivr
ds
sbb
addl
scas
divl
adc
aam
mov
xchg
lcall
push
popf
cmp
or
adc
inc
mov
ja
sarl
pop
insb
test
dec
mul
pop
in
cmpsb
sbb
mov
mov
xor
mov
adc
dec
iret
int3
cld
loope
jnp
adc
insb
sbb
mov
mov
aad
mov
cmp
push
je
pop
sbb
into
cwtl
mov
inc
cwtl
mov
outsb
add
sbbl
mov
cmpsb
or
faddp
dec
cmpsl
lds
data16
repnz
in
adc
sbb
dec
arpl
xchg
xchg
arpl
stos
mov
lcall
mov
nop
scas
pop
je
xchg
dec
cmc
lret
xchg
in
rclb
add
in
clc
outsb
sbb
add
jns
testb
add
jecxz
not
outsl
into
or
or
and
nop
pop
out
shll
bound
sub
lcall
push
cmpsb
test
push
int
cs
fstl
faddl
sti
loope
insl
xchg
or
xchg
mov
in
push
inc
out
stos
dec
mov
pop
outsb
inc
and
push
xchg
push
dec
xchg
jg
xchg
dec
notb
cmpsb
inc
ret
jecxz
loope
adc
in
push
aaa
icebp
mov
gs
fsts
xor
in
subl
ss
sub
inc
fadds
xor
cmc
push
loopne
repz
jecxz
into
jle
mov
addr16
and
data16
jno
aaa
mov
fbstp
rorl
enter
shlb
xchg
adc
push
ja
dec
test
aas
lret
push
aas
loopne
out
push
sub
in
out
pop
aas
pop
or
mov
adc
adc
or
add
aam
shll
into
pop
xor
adc
xor
xor
adc
xor
jo
mov
stos
mov
jb
and
pushf
sub
and
daa
cmp
cli
call
pop
lcall
add
cmp
or
je
ret
and
cmpsb
lock
popf
mov
mov
pop
je
mov
pop
stc
sub
popa
test
xor
mov
clc
stos
cmp
sbb
dec
std
xor
loop
sti
pusha
clc
mov
out
mov
mov
push
stos
jmp
inc
mov
mov
jge
xchg
adc
mov
mov
cmpsb
mov
cmp
notl
arpl
lea
icebp
cmpsl
cmp
mov
les
rcll
inc
mov
push
jae
mov
sbbl
out
xlat
out
je
lcall
push
movsl
lods
mov
lea
adc
sbb
inc
xlat
shl
push
in
mov
fwait
push
mov
pop
jne
or
insb
inc
popf
popf
cmp
sub
aad
and
stos
das
lret
bound
pusha
loopne
mov
ret
enter
pop
jmp
test
xchg
aam
scas
shl
mov
mov
add
mov
not
cmpsb
inc
cwtl
pusha
aaa
cmp
mov
sbb
call
push
movsl
clc
into
pop
cwtl
test
insb
jnp
push
gs
push
cld
imul
stc
add
jmp
inc
mov
jo
ljmp
pop
jp
lea
andb
xor
mov
int3
mov
pop
sahf
push
mov
arpl
movsb
cmp
std
fisttps
mov
les
dec
loop
imul
ja
out
and
in
pusha
and
adcl
cmp
scas
dec
in
cwtl
enter
cli
cli
ja
jne
add
lods
xor
incb
jmp
les
into
jle
lods
mov
lahf
push
mov
mov
jmp
pop
nop
iret
insl
aad
or
dec
ret
lds
hlt
mul
rolb
dec
inc
mov
or
adc
sub
cmpsl
cmc
out
mov
push
cmpsb
cmove
or
mov
imul
or
movsb
push
and
test
jp
popf
or
inc
fistl
pop
xchg
sub
test
pop
sub
pop
pop
and
stos
jg
sub
xchg
jl
dec
ljmp
out
push
sahf
ds
popa
out
imul
mov
and
jo
test
fstps
sub
jle
hlt
outsl
dec
loopne
push
sbbl
or
mov
insb
and
in
or
push
arpl
mov
pop
sbb
xchg
fmuls
mov
fidivl
out
mov
cmp
dec
pop
push
jl
ret
scas
mov
dec
pop
jp
jecxz
rclb
je
push
pop
pushf
xchg
or
pop
ss
sbb
mov
int3
call
loopne
ljmp
jb
scas
gs
sbb
fstl
int3
mov
ret
into
dec
lret
lcall
push
imul
mov
or
xor
xchg
mov
imul
dec
jp
and
mov
dec
jns
jnp
movsb
add
in
pop
aas
inc
testl
in
add
pop
int
xlat
push
jle
mov
mov
dec
xor
mov
sub
test
out
bound
icebp
test
and
push
popf
loope
jmp
cmc
jl
repz
inc
sti
stos
das
cmp
xchg
jg
or
jae
fbld
or
lods
dec
pushf
mov
test
pushl
jecxz
pop
adc
fs
loope
in
cmp
jbe
filds
and
test
bound
or
mov
enter
adc
lcall
mov
mov
test
xchg
xlat
dec
jbe
dec
clc
sbb
mov
mov
cli
lds
adc
into
lret
pop
xchg
lods
jo
xor
or
in
sbb
notb
nop
jecxz
pop
sub
add
mov
decb
outsl
inc
cmp
add
sbb
mov
mov
neg
mov
rorl
mov
fsubrp
inc
incb
enter
aas
ret
dec
inc
push
cmpsl
ljmp
in
data16
mov
adc
mov
cmpsb
push
stos
push
xor
arpl
jbe
pop
mov
cwtl
sbb
gs
mov
add
inc
in
pusha
orl
jae
insb
fidivrs
std
sar
ja
or
je
or
sub
cld
add
xchg
pop
push
jmp
test
clc
aad
out
sti
out
mov
fcoml
fsave
pop
mov
in
sub
dec
inc
xchg
imul
imul
divl
fmuls
mov
jne
lock
cli
inc
adc
dec
pop
inc
mov
imul
mov
cli
pop
mov
in
jb
std
xchg
pushf
mov
icebp
jae
daa
adc
gs
lahf
jp
shr
dec
mov
in
mov
test
cltd
stos
jmp
decb
or
test
xchg
jl
leave
ss
cmp
pop
aas
push
aam
inc
inc
std
popa
in
cmp
cmp
std
mov
mov
rclb
pop
adc
and
scas
shll
inc
or
loopne
data16
add
cmp
dec
dec
lods
ror
mov
shr
pushf
or
testl
iret
int
inc
or
movsb
inc
out
inc
aas
je
into
das
mov
cmc
adc
mov
push
dec
pop
loopne
lods
lea
cmpsb
icebp
jge
inc
dec
or
mov
rorb
mov
out
sahf
cmp
add
mov
das
addr16
dec
popf
jns
mov
insl
cmp
sbb
xchg
xor
shrl
mov
fwait
pop
adcb
mov
popf
stc
in
mov
sub
negb
sub
sub
test
pop
xorl
fisubrs
mov
push
xchg
dec
pushf
and
pop
sub
movsb
dec
mov
and
push
and
test
shrb
imul
aas
mov
jbe
imul
add
mov
movsl
and
xlat
xchg
jl
ret
cmpsb
imul
arpl
add
push
xor
mov
dec
cld
aad
jbe
faddl
cmp
cmp
add
pushf
xor
out
ss
in
fldenv
lahf
xchg
cmp
mov
push
cmp
push
rolb
daa
mov
lret
xor
incb
das
imul
lods
cmp
test
repnz
call
xor
pop
or
inc
mov
std
xor
repnz
push
adc
mov
push
outsl
dec
cltd
cs
mov
cmp
lret
cli
pop
inc
cmpsl
push
cmpsl
ja
mov
sbb
js
fimuls
mov
cwtl
in
sub
loopne,pt
in
pop
icebp
and
sbb
das
and
call
and
data16
mov
out
jge
stos
scas
mov
imul
scas
mov
out
sahf
lods
mov
daa
dec
in
mov
jge
mov
sub
popa
mull
add
jle
mov
cmp
or
std
or
outsl
inc
ljmp
sti
xchg
js
or
mov
jne
ds
jg
jae
xlat
push
cltd
jo
or
xchg
cltd
je
fmuls
rcrb
rol
cmp
jmp
cld
or
mov
pop
adc
lcall
sbb
jmp
jne
ljmp
ja
test
sub
into
mov
jno
out
test
and
sbb
cmc
or
xchg
xchg
jp
xchg
inc
imul
sub
stos
cmpsl
fisubl
and
test
cmp
adc
mov
lods
mov
cwtl
and
add
je
dec
jecxz
out
pop
inc
dec
fldcw
mov
push
lods
fwait
lods
mov
pop
movsb
adc
mov
adc
push
mov
xchg
sbb
xor
jge
loopne
daa
jg
dec
mov
adc
lea
pop
push
xchg
inc
nop
dec
das
lods
inc
popa
jo
push
jne
das
mov
lcall
insl
xchg
pop
inc
fldt
cmc
pushf
fisttpll
sbbb
stos
mov
pop
addr16
pop
test
mov
pop
lahf
push
push
mov
mov
daa
sub
lods
into
ficoml
jp
add
lods
fisubs
cmp
and
loopne
jb
pop
movsb
add
lea
dec
fdivrl
loop
cli
xchg
sbb
sbb
cmc
in
mov
mov
or
aam
mov
imul
stos
testl
lcall
cwtl
daa
cmp
jge
mov
aas
dec
inc
fidivrl
jno
or
fsubrs
cmp
out
lret
jnp
jmp
jo
stos
out
fstl
xchg
inc
cmp
jae
adc
and
lods
inc
pop
pop
outsl
adc
movsb
fidivl
shrb
sub
mov
jge
or
push
xor
push
insb
lea
jle
das
ljmp
xor
test
andb
dec
test
nop
popf
lret
sbb
testb
andl
hlt
ss
daa
jmp
jno
add
sub
pop
dec
fs
mov
mov
js
mov
in
std
cmp
xchg
leave
mov
mov
mov
cmp
mov
push
xor
mov
mov
push
dec
push
je
jae
dec
push
mov
je
dec
mov
sbb
ds
inc
or
cmp
xor
hlt
mov
xor
adc
inc
fcmove
and
add
js
outsl
jge
push
les
loope
add
sti
loop
xor
pop
gs
int
fsubr
outsb
add
inc
or
sbbb
leave
pusha
add
shlb
add
inc
sbb
ss
ret
add
pop
ret
lods
sub
mov
dec
outsb
shl
test
ja
push
cltd
cmp
adc
enter
adc
adc
js
dec
stos
lea
xchg
and
pop
sub
test
jns
cmc
xor
and
aas
push
divb
cmp
jmp
sbbl
ffree
fldl
jecxz
mov
and
cltd
insb
mov
iret
iret
jecxz
out
out
test
lahf
jb
sbb
outsb
mov
and
out
add
stos
out
lds
jge
gs
ljmp
mov
xchg
cmp
imul
adc
push
gs
pop
icebp
or
jb
shlb
int3
pop
sbb
out
xor
cmp
mov
pop
inc
add
sub
sub
push
dec
jmp
add
pusha
imull
and
inc
out
call
int
jb
ja
out
fsubp
sub
xchg
scas
add
jo
dec
mov
dec
or
lcall
and
cmpsb
clc
lret
mov
shld
xor
lods
jo
fists
test
repnz
xchg
sbb
enter
cmp
pop
sub
fdivs
dec
insb
cmpsl
jle
fmuls
aam
sub
mov
rcll
pop
scas
push
pop
and
iret
jecxz
mov
iret
inc
popf
push
jnp
out
or
adcb
add
jo
loop
in
mov
dec
imul
test
out
and
push
das
xchg
insb
pop
repnz
add
mov
fistl
nop
and
mov
ja
xchg
xor
arpl
addr16
jns
inc
add
cmpb
icebp
mov
jnp
lahf
mov
ds
jp
std
or
lds
mov
and
inc
in
js
push
popa
mov
dec
dec
test
das
mov
fisttpl
xor
xlat
xor
pop
mov
aaa
inc
testb
sbb
fnstenv
aam
add
sahf
xor
pop
loopne
add
mov
neg
adc
lds
adc
arpl
arpl
add
iret
mov
adc
fldenv
lahf
xor
data16
cltd
test
sbb
out
sahf
xor
push
mov
cmc
test
inc
jl
xor
jle
sbb
cmp
pop
jle
cmp
aad
sbb
xchg
lock
sbb
sti
mov
mov
jbe
cs
push
cmp
aad
adc
inc
cmp
jne
cs
lea
inc
mov
fadd
lahf
test
mov
adc
leave
shll
mov
shlb
dec
and
push
pop
adc
jg
mov
loopne
fildll
adc
push
sbb
inc
or
mov
in
cmpsl
xchg
xchg
mov
dec
lret
les
test
dec
sarb
roll
lea
pop
imull
outsb
or
or
stos
mov
xchg
ficomps
std
sti
mov
sbb
out
fadd
mov
adc
inc
xorl
aaa
out
mov
xchg
imul
xor
add
sbb
scas
jo
sub
divb
adc
jns
lahf
xor
cmp
mov
mov
pusha
fucom
sub
or
addr16
push
ljmp
ljmp
inc
faddl
cltd
roll
dec
mov
hlt
cmp
and
shll
pop
adc
and
push
push
aaa
mov
movsb
sub
or
popa
pop
lret
enter
movsl
scas
mov
imul
mov
inc
out
and
and
push
andl
movl
int
inc
hlt
cwtl
fdivl
std
fcompl
or
outsl
into
arpl
into
inc
inc
rcr
jno
add
clc
jae
pushf
pusha
int
int
in
and
push
jbe
jl
xchg
mov
hlt
cltd
mov
mov
and
imul
call
imul
push
mov
cmpsl
jmp
pop
in
dec
hlt
dec
clc
fisubs
push
fisttps
push
ret
cmp
jle
ret
movsb
gs
xchg
insl
loopne
inc
icebp
scas
fnsave
inc
movsl
std
xchg
mov
std
lret
sub
mov
push
iret
out
dec
or
cmp
pop
imul
mov
enter
dec
data16
ljmp
test
into
jle
lret
cmp
push
mov
inc
mov
in
or
popa
pop
pop
pop
into
xchg
add
testb
sub
xchg
sub
in
out
pop
cmp
pop
mov
loope
ret
pop
push
dec
sbb
lret
xlat
pop
adc
mov
cwtl
shl
das
pop
imul
jl
jb
dec
mov
js
in
pushf
sub
fstl
fimuls
xchg
and
loopne
shlb
mov
xlat
mov
inc
imul
jg
cmpsl
les
dec
or
or
dec
stos
and
mov
repz
ss
fdivrs
rcr
cmp
dec
mov
jns
ffreep
dec
push
mov
repz
jl
mov
mov
lods
push
testb
mov
lcall
and
ret
subl
or
xor
push
pop
mov
std
cmpsl
mov
cmp
jbe
lea
sbb
sbb
cmpsb
insl
xchg
mov
push
xor
addr16
sahf
push
mov
sbb
add
xor
xor
add
leave
mov
es
and
or
es
xchg
jno
mov
sbb
data16
and
mov
jle
mov
adc
fnstenv
cld
jecxz
rorl
or
push
add
inc
fcmove
xor
inc
mov
pusha
inc
jo
scas
inc
sub
rorl
fs
ret
jge
push
cmp
sbb
shlb
ret
cmp
pop
add
nop
jl
pop
push
call
iret
mov
jge
mov
fwait
jbe
hlt
ret
sbb
jae
fwait
mov
push
jmp
or
jbe
sub
lahf
outsb
ja
pop
cmpsl
sub
pop
lock
sbb
mov
xor
jae
add
xor
inc
pusha
jns
sub
add
mull
movsb
sub
lea
daa
inc
hlt
daa
enter
xchg
sub
dec
scas
xor
loopne
bound
jg
dec
mov
cmp
aad
adc
nop
stos
lahf
les
sbb
and
xlat
imul
adc
jne
jmp
add
push
cmp
push
add
fidivrs
movsb
cmp
scas
inc
sbb
pop
sub
mov
mov
shl
sub
sbb
fisubs
push
leave
int
xor
mov
pop
dec
jo
insl
jnp
out
or
ljmp
cli
shrl
mov
dec
adc
ret
mov
insb
add
mov
pop
movsb
mov
fists
daa
jl
outsl
psrlw
mov
xchg
mov
add
aam
pop
add
aam
and
mov
jbe
add
jno
jbe
mov
mov
shlb
add
mov
call
jle
mov
lahf
aam
mov
pop
std
pop
imulb
vaddps
adc
cltd
mov
cltd
scas
pop
mov
loop
sbb
lock
xchg
sub
nop
pop
push
mov
xchg
data16
xchg
adcl
push
jbe
in
xchg
lcall
ja
sbb
ljmp
sub
mov
mov
xlat
pop
shrl
dec
std
or
outsb
cmpsl
ja
cld
subl
xor
xchg
xchg
mov
jbe
sbb
fwait
pop
test
inc
xor
jnp
mov
add
xchg
or
nop
data16
pop
pop
cmp
shll
loopne
mov
push
xchg
stc
jmp
push
or
jge
jo
cli
iret
js
outsb
iret
dec
cltd
dec
add
jmp
cwtl
mov
sbb
into
nop
aas
push
cmp
loope
adc
cmp
xor
outsb
ret
or
push
mov
cmp
call
in
mov
inc
pop
lret
inc
inc
fbld
iret
lret
xor
gs
xor
push
dec
lock
jne
jle
xchg
mov
lahf
inc
and
je
decl
and
jp
pop
loopne
jb
fnstcw
jno
adc
dec
adc
add
xor
xlat
cmp
jb
lock
sti
pushf
movsl
dec
sbb
mulb
push
inc
std
inc
js
clc
and
shll
mov
sbb
mov
scas
xchg
and
cmp
push
mov
cltd
xor
test
inc
xchg
adc
icebp
mov
push
insl
rorb
push
jmp
mov
mov
gs
cmp
sbb
popf
jo
mov
sbb
scas
mov
pop
mov
fidivs
jnp
ds
jmp
pop
loope
aam
out
xchg
sub
movsb
dec
out
add
pop
mov
mov
add
pushf
cmp
mov
mov
fimull
push
or
jge
sbb
ds
notl
mov
cmp
sbb
out
mov
popf
bound
movsb
test
arpl
enter
jns
fsts
mov
mul
repz
lcall
popa
sbb
out
pop
clc
and
pop
lret
lods
sti
hlt
sub
pop
aad
or
pop
jae
shll
pop
cmpb
jns
xor
adc
inc
or
fsubrp
and
push
aam
sbb
in
dec
popa
in
rcl
xchg
sbb
out
xchg
xchg
shl
je
insl
sub
ds
cld
cmp
iret
sbb
iret
loopne
mov
iret
and
add
lret
pop
and
inc
xchg
mov
push
in
negl
loop
inc
jecxz
clc
stos
lock
sbb
xchg
pop
push
daa
push
mov
fcoml
into
lret
movsb
mov
jle
int3
xchg
pop
lahf
pop
mov
aam
sbb
ret
inc
push
aad
sbb
nop
ss
inc
sub
jns
aas
outsl
decb
dec
xchg
mov
adcl
je
outsb
lahf
xchg
push
xor
std
iret
dec
out
mov
ljmp
add
sar
adc
fisubl
fdivl
mov
sub
fisubrl
jg
inc
hlt
mov
push
out
mov
mov
sub
jne
push
dec
add
fdivl
loopne
mov
into
gs
xchg
inc
dec
mov
in
xchg
cmpsb
shlb
jge
pop
imul
lcall
out
push
xchg
popf
out
sub
jle
pop
out
adc
pop
ret
hlt
mov
sub
dec
in
je
out
in
xchg
dec
xchg
arpl
pusha
cmp
cmp
insl
iret
inc
rcl
lods
add
xchg
daa
cmp
les
pop
jp
or
aad
cmp
or
sub
test
fsubs
movsb
scas
mov
xor
fmuls
stc
fcmovb
jne
out
rcll
imul
loopne
mov
std
scas
dec
cmp
jns
and
out
sahf
mov
lods
cmp
or
inc
or
sarb
cmpsl
mov
dec
lret
and
jne
pop
imul
adc
cs
imul
jno
test
and
scas
clc
inc
mov
negb
add
adc
ret
pop
xchg
add
mov
push
daa
jle
in
in
fwait
mov
jae
out
das
iret
cli
clc
xor
or
nop
xchg
mov
adc
pop
mov
rcrb
clc
cmp
cmp
sti
stos
xchg
and
mov
jne
lahf
xchg
out
inc
cmc
sti
fwait
cmp
jmp
sti
andb
fcoml
leave
lret
icebp
pusha
negb
fwait
mov
insb
cs
jno
insb
cmpsl
xor
bound
js
xchg
mov
fwait
lods
pop
jp
nop
cli
and
mov
ret
pop
lock
daa
ficoms
stos
jns
stos
int
roll
mov
ljmp
push
mov
mov
fidivs
push
movsb
enter
jnp
inc
cmpsb
out
sbb
dec
jmp
sbb
cltd
xor
add
push
aam
lret
cwtl
ret
inc
xchg
push
repz
ljmp
or
xchg
out
xchg
rclb
fdivs
sahf
sub
sbb
rep
adc
xchg
pop
movsl
dec
std
push
test
sti
flds
or
cmpsl
jle
subb
xchg
adc
push
icebp
mov
out
lds
inc
mov
icebp
orl
cli
xchg
push
pop
mov
cmp
sbb
xchg
cmp
not
and
sti
mov
inc
sub
sahf
jge
jno
jno
add
dec
outsl
adc
jb
sub
inc
mov
push
popf
enter
mov
sub
call
xor
int3
lcall
adcl
call
cmpsl
fs
adc
loop
shr
stos
add
pop
pop
pop
inc
hlt
add
in
cmp
mov
iret
mov
outsl
lret
xor
movsb
mov
out
aad
testb
add
inc
fnstenv
dec
mov
sahf
ljmp
mov
adc
mov
sub
leave
dec
mov
and
adc
fnstcw
idiv
jecxz
sub
push
in
or
out
test
loopne
jne
fwait
jg
int
adc
out
pop
das
mov
test
test
repnz
daa
cmp
mov
in
jb
stos
leave
cmpl
inc
jl
push
mov
sub
adc
rclb
das
dec
gs
out
clc
push
adc
lcall
inc
mov
fcmovne
arpl
aam
iret
adcl
cmp
mov
call
lds
movlps
mov
xchg
call
xchg
add
lret
xchg
jno
cld
xchg
inc
ret
xchg
js
in
icebp
push
daa
add
inc
js
cli
loop
mov
jmp
or
nop
or
jnp
or
xchg
repz
and
movq
aaa
rcrb
stc
sub
jno
in
lahf
sub
ret
mov
xchg
in
imul
cmc
gs
js
stos
gs
push
fs
inc
mov
mov
and
mov
lods
test
outsl
ret
pop
rorb
bound
out
or
aas
dec
mov
cmp
das
inc
lret
add
xchg
push
adc
out
mov
test
cmpsl
cs
movsl
mov
das
push
not
scas
dec
and
and
mov
push
xchg
jae
push
inc
or
fsubl
bound
push
push
test
lret
push
jg
aaa
mov
inc
loop
ja
cs
push
sbb
dec
aas
jecxz
out
dec
test
das
pcmpgtd
adc
xchg
int
cltd
xor
addl
inc
xchg
mov
dec
pop
or
ljmp
popa
popf
jo
dec
adc
pop
cmp
das
adcb
xchg
out
scas
inc
and
xor
pop
mov
xor
push
mov
dec
inc
sub
xchg
cmp
push
jbe
subl
sti
les
mov
or
mov
arpl
movsb
cmp
adc
sahf
shrl
xor
out
push
gs
out
inc
jl
pop
mov
jne
jecxz
aas
shlb
and
std
xchg
push
dec
lret
dec
or
adc
and
mov
inc
mov
js
adc
pushf
jnp
movsl
cmp
cmp
scas
adc
pop
out
in
into
push
flds
in
jge
pushf
push
in
lcall
push
test
insl
jle
out
test
das
stos
imul
jmp
mov
xchg
lods
push
lods
mov
ja
cwtl
sub
idivl
dec
add
arpl
xchg
stc
sub
in
int
sbb
icebp
rcll
dec
jg
jp
inc
fcoml
push
popa
popf
or
ficomps
arpl
ja
cmp
mov
test
in
xor
rorl
or
push
pop
xchg
add
sbb
aam
stos
sbb
sub
fwait
xor
dec
xchg
pop
out
inc
push
mov
push
cli
pop
stos
in
adcb
lcall
pop
ret
cmc
or
xchg
push
jge
nop
sub
icebp
cmp
cmp
outsb
dec
mov
cmp
sub
mov
rolb
and
xor
iret
arpl
andb
rcrl
divb
cmp
mulb
ja
jno
jno
rcl
int
rep
mov
mov
mov
jae
inc
xlat
gs
mov
jge
cmp
push
jb
imul
lods
ret
mov
aam
push
stc
call
out
mov
lock
loope
out
outsl
rcll
loopne
shrl
sbb
xchg
and
scas
out
loopne
out
xchg
cltd
shr
lret
data16
mov
jle
pop
jge
sbb
pop
aad
mov
flds
and
push
mov
out
mov
or
seta
cmp
fbld
sbb
inc
xor
or
jg
out
xchg
xchg
popf
push
fdivp
shrl
fcomps
push
iret
adc
cmp
hlt
mov
pusha
xlat
insb
push
pop
mov
inc
jecxz
xchg
pop
imul
jmp
in
cmp
mul
stos
cmp
cmc
les
adc
popa
aaa
mov
cld
test
lret
movsl
adc
ja
push
dec
in
push
or
jle
test
aam
xchg
push
lret
ret
pop
cli
test
in
or
cltd
push
pop
fs
push
mov
pop
inc
pop
cmp
lcall
cmp
mov
orb
adc
aad
and
inc
enter
testb
dec
adc
je
insl
adc
push
arpl
test
and
leave
lds
pop
test
pop
pop
ds
pop
lods
fmull
ret
shll
aaa
stos
mov
les
out
adcl
xor
dec
xchg
mov
mov
ret
lret
fsubrs
les
flds
test
loopne
dec
insb
in
mov
aas
pop
jo
jo
mov
jge
inc
fadd
fisubs
arpl
cwtl
mov
sub
sbb
add
pop
outsl
push
test
lock
add
push
outsb
adc
aad
ds
jmp
cmp
aaa
mov
adc
mov
inc
xchg
cli
pushf
stos
ss
add
jl
jle
add
es
mov
sbb
jl
cmp
push
mull
cwtl
int
int3
jnp
sahf
xor
ljmp
add
xchg
and
dec
outsl
mov
mov
mov
and
std
and
push
cmpb
sbb
push
aaa
ret
frstor
les
dec
xor
xchg
outsw
xchg
adc
arpl
iret
lcall
pop
xlat
jp
out
cmp
in
sub
iret
lock
cmpsl
inc
fmuls
test
shrl
jmp
movsb
fisttpll
iret
jb
and
add
sarl
ret
fadd
pop
data16
test
test
lret
cld
or
mov
xchg
mov
inc
cmpsl
add
sbb
out
and
lahf
push
xor
dec
jge
out
lock
es
adc
popf
cmp
sbb
sahf
inc
jg
insb
jl
push
aam
pop
add
xor
nop
out
inc
push
add
outsl
ds
mov
push
xchg
stc
je
repnz
sbb
mov
scas
jmp
sbb
iret
aaa
push
rcll
mov
inc
push
popf
pop
sbb
xor
subb
in
mov
push
or
fnstcw
xchg
or
iret
fildl
mov
out
mov
add
test
lret
cld
lahf
lret
xor
mov
fadd
imull
cmc
test
fsubrs
das
dec
jne
add
aaa
lret
test
and
or
lods
ljmp
xchg
sub
cwtl
inc
pop
call
ljmp
pop
push
xor
sbb
clc
or
lods
sub
insb
sti
rorb
jbe
call
mov
cmp
jl
sbb
add
mov
cs
xchg
pusha
sbb
fwait
xchg
repnz
pop
arpl
lahf
cmp
push
xchg
call
jle
pop
scas
repnz
jo
adc
mov
cmp
in
pop
icebp
fiaddl
shlb
xor
mov
push
call
sbb
fcom
daa
mov
addr16
loopne
mov
jns
xchg
imul
aad
adc
inc
sbb
das
int3
fisubrs
push
jb
bound
mov
je
inc
add
mov
inc
cwtl
lods
dec
adc
int
jge
xor
aad
ret
imul
dec
out
rcrl
dec
mov
inc
fisttps
sti
imul
pushf
adc
cmp
cmpb
mov
imul
jnp
pop
and
out
addr16
loopne,pt
inc
jbe
mov
inc
jmp
je
popf
lods
cmp
lret
push
sbb
or
scas
out
aam
mov
test
jns
lahf
pusha
rorb
test
les
push
inc
add
mov
push
inc
pushf
xlat
cmp
test
mov
add
ficomps
jbe
push
xor
idivl
push
movsl
nop
push
push
or
popf
xor
mull
jg
orb
in
test
pop
hlt
sarb
aas
mov
ffree
lds
and
pusha
push
jg
mov
pop
sarb
or
mov
movsb
scas
add
and
les
insl
les
aad
jne
mov
scas
fs
xchg
jns
call
mov
mov
insl
fisubs
mov
xchg
scas
insl
imul
or
call
pop
fmuls
in
sub
cltd
pusha
pop
jecxz
xor
mov
ljmp
mov
add
call
pushf
mov
push
cmp
mov
mov
std
xchg
pop
push
push
sub
inc
aad
fwait
xchg
inc
and
push
out
loopne
aas
loop
cmp
xchg
cmp
out
push
push
outsl
or
push
jle
sub
lahf
xlat
scas
inc
ja
cmp
into
mov
ds
rcll
cmp
out
xchg
cmp
cmp
push
jl
push
cmp
shrb
sahf
and
jmp
daa
lcall
sbb
xchg
int
sbb
mov
psrlq
adc
sub
xor
push
jmp
popf
pop
xchg
mov
mov
mov
mov
in
popf
mov
mov
jb
inc
pop
xchg
adc
pop
fstpl
mov
in
sti
repnz
mov
iret
or
fwait
jbe
addr16
jle
cli
js
lcall
jbe
loopne
xchg
mov
mov
push
outsb
xchg
out
mov
mov
mov
outsb
add
call
xchg
js
stc
xchg
pop
mov
pop
fdivl
addb
lcall
jecxz
mov
div
push
jno
vhaddps
and
xchg
leave
cmp
mov
lahf
ss
mov
jecxz
and
rcl
insb
out
add
pop
mov
or
test
pop
add
push
mov
loope
cmp
mov
jns
repnz
cmp
add
xor
xor
add
jge
push
pop
test
outsb
mov
xchg
repz
sti
jecxz
sbb
push
or
dec
xchg
das
fmuls
mov
pushf
fs
cmc
mov
xor
pushf
test
cmp
push
mov
loop
and
lock
xor
orb
std
mov
push
dec
ret
shl
sbb
sub
incl
dec
or
test
imulb
dec
fmuls
jbe
out
sahf
xchg
push
out
sbb
out
xchg
sarl
sbb
out
xchg
repnz
adc
push
ss
rcrl
push
inc
pop
ljmp
push
in
pop
mov
mov
hlt
dec
ds
adc
xor
jmp
popa
xor
aas
sbb
int
jecxz
dec
adc
mov
xchg
sub
or
xchg
fldt
cmp
lds
fwait
inc
push
push
imul
mov
xchg
xchg
lock
jbe
mov
mov
push
insl
inc
or
mov
xchg
cltd
inc
pop
inc
mov
lret
addr16
jg
push
mov
sahf
inc
and
pushf
test
adc
je
jo
sbbl
jae
fwait
outsb
outsb
xchg
push
cmpsl
push
imul
loope
shll
leave
jae
xchg
roll
xchg
pop
ret
bound
addr16
pop
mov
mov
push
push
mov
and
ss
out
ficoml
fistpll
mov
idiv
xor
mov
xor
enter
dec
pop
stos
cmp
shrb
sub
test
lretw
pop
add
inc
cmovo
lods
fbstp
gs
fs
add
inc
gs
das
mov
js
movb
dec
test
nop
mov
test
in
ds
icebp
push
cmpsb
cmp
pusha
es
push
sub
rolb
cs
xchg
dec
or
pop
call
jbe
ja
mov
fdivl
xlat
arpl
stos
cmp
jbe
xchg
das
mov
andb
xchg
fnstcw
notl
lret
add
shrl
mov
daa
lahf
aas
pop
cltd
mov
loope
mov
loope
js
loopne
push
jecxz
test
adc
push
adc
mov
push
fiadds
adcb
lret
pop
fimull
xor
icebp
xor
cmpsb
stos
jp
or
pop
pop
out
out
xor
js
mov
shl
fidivs
sbb
clc
jg
out
popf
popa
sub
mov
out
adc
and
mov
ljmp
mov
cmp
push
out
dec
and
mov
nop
daa
iret
scas
push
xor
push
xor
push
out
dec
jp
pop
cmp
subb
rclb
int
les
push
shr
add
icebp
jg
dec
mov
push
push
in
shrb
mov
imul
adc
roll
pusha
ret
cmpsb
lret
xor
cmp
push
cwtl
inc
pop
inc
gs
add
pop
xor
rcl
test
repnz
sub
aam
xchg
jb
and
stos
test
cmp
sub
sti
or
dec
inc
inc
or
aas
addr16
lods
sti
mov
fmul
mov
push
jo
pushf
dec
xor
xchg
xor
daa
rcrl
dec
arpl
or
arpl
cmc
hlt
fstps
rorb
push
out
cmpsl
sbb
cmc
sbb
xor
insl
inc
test
push
jg
jmp
das
pop
pop
or
insb
test
adc
fstl
and
js
push
pushf
mov
add
mov
aas
add
pop
addr16
jge
xchg
pop
pop
mov
hlt
jge
pop
jp
xchg
pop
pop
leave
and
mov
decl
mov
std
out
add
pushf
jp
aam
int
fdivrl
mov
fldl
mov
ljmp
jp
out
stos
popa
psrad
jno
adc
and
jl
cmp
insl
add
rolb
iret
push
push
scas
jno
into
jnp
push
xchg
add
and
push
add
adc
mov
sbbb
adc
dec
jecxz
mov
loopne
adc
enter
pop
cmp
dec
lods
fdivrs
sub
lds
fwait
xor
mov
jne
xor
push
pusha
fidivl
enter
arpl
ljmp
in
popa
mov
xchg
mov
and
adc
xchg
sub
mov
dec
insl
add
inc
sbb
add
out
adc
xchg
mov
stc
cmp
icebp
fwait
pushf
sti
dec
push
hlt
pop
jge
insb
inc
mov
mov
fisubl
pop
insl
pop
test
sbb
cmp
in
mov
rcrl
jmp
je
pop
lock
fistpll
test
popa
mov
adc
insb
shrl
sbb
outsl
add
xor
sbb
sub
fsubl
mov
mov
or
imul
pop
xor
mov
xor
popa
adc
bound
xchg
mov
into
into
imul
subl
pop
shl
aaa
cli
addr16
adc
mov
cmpsl
in
cmp
mov
mov
push
push
into
jae
sbb
push
push
pusha
jp
scas
lret
pop
or
pushf
sub
mov
pushf
fsubrs
cmp
int3
out
and
lret
aas
ret
inc
test
jo
inc
cli
aad
xor
popf
pusha
daa
mov
sbb
mov
ficompl
scas
xchg
pusha
or
adc
push
hlt
cmp
mov
mov
movsl
pop
inc
fisttpl
and
push
or
jb
xor
inc
movsl
or
adc
outsb
leave
ficomps
jmp
and
inc
pop
xor
scas
pop
xor
mov
sbb
push
xlat
ss
lock
bound
lret
hlt
or
or
pop
daa
mov
fwait
add
jns
fsubl
jecxz
add
insb
js
and
push
fnstcw
data16
addb
xor
pop
fimuls
push
jmp
aas
push
xor
das
shlb
inc
test
iret
mov
mov
push
rcll
test
daa
adc
iret
test
outsl
mov
jg
mov
in
sub
in
inc
fwait
idiv
dec
sarl
in
es
fldt
add
adc
or
xchg
cld
mov
mov
fisubrs
mov
out
pop
mov
mov
xlat
fdivl
adc
add
cmp
imul
mov
inc
push
adc
jg
pop
fmul
jl
jb
fidivl
xchg
push
mov
jb
out
js
add
mov
pop
and
push
cmc
inc
mov
jb
std
cmpsl
aas
jne
add
or
mov
movsb
nop
cmc
pusha
shlb
lock
or
adcb
inc
leave
pusha
aaa
sbb
jo
lds
xchg
sub
ret
jbe
push
aas
shlb
dec
sub
lds
push
out
les
mov
in
and
push
push
stos
inc
cli
pushf
out
adcl
mov
cwtl
repnz
mov
jo
leave
dec
or
pushw
cmpsl
leave
jecxz
aaa
dec
lea
stos
inc
add
xor
out
jae
leave
pop
sbb
xor
xor
fs
sarb
pop
pop
lcall
push
cmpl
and
push
and
mov
sbb
dec
jb
sub
push
mov
mov
mov
inc
loope
pop
mov
dec
xchg
call
sbbl
icebp
sbb
enter
and
clc
push
sub
xchg
ds
mov
or
fnsave
jb
dec
cmp
mov
gs
inc
jecxz
and
hlt
subl
lods
ss
sbb
add
imul
mov
add
xrelease
cmp
xchg
jp
enter
mov
outsb
add
push
into
cmpl
lods
sbbb
dec
xchg
xchg
mov
shrl
outsb
aaa
bswap
in
pop
scas
cld
out
clc
sub
das
fwait
xor
xchg
ljmp
add
or
out
shlb
jl
mov
and
xchg
test
mov
cmpsl
and
mov
call
enter
jno
mov
sub
pop
mov
dec
mov
imul
adc
push
into
inc
fstpt
mov
dec
push
stos
leave
int
pop
dec
pop
loopne
mov
xor
popa
jecxz
mov
cmpsl
and
cmp
mov
test
xor
movsb
xlat
fcoms
pop
jge
pop
mov
cmp
lods
stos
or
scas
sbb
rcrl
lret
fsubl
outsl
push
pop
xor
sahf
mov
and
gs
adc
push
imul
popf
insb
popf
or
ljmp
jle
out
popa
push
mov
out
jbe
scas
mov
rclb
adc
insb
mov
push
lods
pop
cs
mov
jbe
mov
pop
leave
bound
addr16
iret
jle
gs
iret
sub
cld
jno
into
shrl
stos
imul
ja
mov
clc
jle
cwtl
xchg
movsl
jnp
rclb
mov
daa
jp
push
dec
adc
insb
push
out
lock
sbb
add
add
or
jne
mov
dec
lock
pop
xor
or
or
pop
in
in
xchg
pop
push
or
repnz
lods
inc
icebp
psllw
cmp
leave
bound
lret
into
fcomps
cld
inc
outsl
cmp
and
xchg
das
les
xor
loopne
adc
and
cltd
dec
cld
mov
cltd
leave
rcr
cld
pavgw
or
dec
push
mov
adc
leave
adc
es
out
fs
fistps
adcb
andb
mov
sarb
mov
mov
out
rcl
mov
xchg
mov
cmpb
push
xor
fwait
push
fwait
or
pop
cs
add
mov
pop
or
lcall
push
out
dec
test
mov
mov
adc
pop
shll
mov
lea
cmpsb
xor
inc
int3
cmp
inc
mov
mov
xor
das
pop
rclb
sub
xor
cmpsl
inc
cltd
mov
lods
fnsave
add
xor
jb
jno
rcr
add
pop
lock
aam
jnp
xor
and
cs
sbb
jl
dec
repnz
push
mov
sbb
pop
fldcw
cmp
cs
cmc
or
xchg
cwtl
dec
mov
and
dec
rorl
mov
in
sbbb
xor
inc
inc
cwtl
insb
pmaxsw
push
jmp
inc
push
jmp
mov
enter
adc
fdivrl
pop
adc
repz
imul
cmp
fwait
mov
cmp
xor
inc
ret
mov
out
jle
pop
adc
add
aaa
popf
xlat
sbb
sbb
mov
push
and
insl
test
movsl
push
jge
aam
sti
lods
cmp
adc
jp
iret
sbb
dec
xor
adc
xor
rclb
adc
loop
sub
dec
jmp
mov
add
inc
ficoms
mov
inc
jecxz
stos
sahf
jbe
dec
inc
push
stc
push
cld
push
xor
push
mov
leave
push
fnsave
frstor
fwait
push
popa
pop
add
cmpb
jle
rcrl
inc
jns
jb
lret
ja
clc
es
fildll
out
aam
mov
inc
cmp
bound
aad
or
jnp
jno
into
sub
jno,pt
jo
push
xor
data16
sub
cmp
shll
pop
mov
mov
mov
loope
ds
out
inc
insb
roll
cmp
shlb
imul
jmp
xchg
mov
fdivrs
icebp
fsts
in
adc
ss
sbb
ret
arpl
leave
pop
ds
xchg
adc
lods
jae
ret
out
loop
in
aas
arpl
jbe
test
push
mov
insb
dec
lahf
adc
repz
push
push
inc
int
jo
dec
rcrl
xchg
cmp
sbb
lds
pop
test
rol
xor
lcall
mov
ret
inc
jns
jae
or
sar
mov
das
jl
xchg
scas
push
or
jae
pop
sahf
leave
outsl
pushw
dec
ljmp
push
xchg
aad
jp
mov
movsb
pop
pop
sub
push
out
cld
aas
enter
dec
push
je
test
dec
pop
mov
ficoms
and
popf
out
xor
scas
and
lea
lahf
mov
mov
or
loop
push
xchg
pop
sti
jecxz
testl
cwtl
mov
out
and
inc
fnsave
sub
sarb
dec
in
push
fwait
loop
sub
mov
mov
lods
popf
adc
pop
dec
pop
je
cwtl
testl
push
fnstenv
ss
arpl
int
xchg
incl
jl
cmp
sub
pushf
addr16
leave
pusha
enter
mov
mov
mov
je
mov
jne
das
aam
jmp
and
fbld
adc
jb
js
int
inc
dec
out
sub
sti
aaa
inc
shrl
and
push
std
out
push
leave
aaa
add
inc
scas
bound
xor
xchg
pop
xchg
test
stc
adc
pop
icebp
dec
in
sub
sar
or
lahf
int3
xchg
in
pop
out
test
dec
pop
add
sbb
inc
sub
lret
repnz
aad
mov
enter
adc
in
and
ret
jle
xor
fidivrs
outsb
jbe
push
shr
into
jno
sbb
jecxz
daa
andl
pop
mov
mov
mov
add
shlb
jo
popf
dec
in
ljmp
cli
jbe
xor
int3
movsb
into
mov
repnz
stos
imul
loopne
test
icebp
adc
pop
cli
push
jbe
hlt
push
scas
and
js
dec
mov
cltd
push
adc
xor
rcll
push
jb
mov
mov
cmp
sbb
out
or
ja
jmpw
cmc
es
jo
jmp
pop
and
fnstsw
out
ljmp
fs
repz
xchg
sbb
cld
imul
dec
mov
scas
les
jg
push
mov
mov
cwtd
add
rcll
mov
and
rcl
push
shrl
inc
leave
jmp
adc
adc
pusha
movups
test
and
sbb
pushf
or
adc
jmp
pusha
dec
xchg
cltd
orb
lods
nop
inc
cmp
fmulp
sti
stos
lds
into
aas
xor
dec
dec
pop
cmp
inc
mov
enter
fs
in
test
out
data16
mov
add
fcmovbe
loop
std
pop
out
mov
dec
ret
mov
cltd
test
addr16
sbb
out
popa
add
clc
jae
dec
daa
iretw
sti
mov
sub
push
dec
loope
xor
and
xor
xchg
pusha
aaa
jno
enter
icebp
mov
outsl
adcl
out
std
mov
cmp
jne
lcall
jne
xor
sbb
sbb
xor
sbb
adc
frstor
notl
add
bound
or
mov
inc
call
stos
imul
lret
popf
xor
push
fs
imul
mov
pop
fbld
sbb
enter
xor
mov
adc
add
stos
adc
xor
std
mov
clc
add
test
push
inc
pop
mov
cli
xchg
add
cmpl
test
adc
mov
dec
mov
push
aaa
pop
iret
push
jnp
xchg
cs
pop
adc
pushf
dec
mov
fcmovbe
mov
stos
daa
xchg
icebp
push
inc
pop
adc
and
enter
pop
out
imul
hlt
inc
mov
cmpsb
ljmp
hlt
or
es
je
js
fs
test
xchg
jecxz
pushf
inc
pusha
mov
mov
clc
pop
inc
adc
test
out
cmp
leave
imul
pop
pop
mov
or
pop
in
add
or
jae
repz
stc
nop
sbbb
repnz
popa
int3
call
ljmp
jl
loopne
push
movsb
or
aad
sahf
sub
scas
test
push
mov
nop
mov
pop
add
add
loope
dec
dec
pop
jge
xlat
and
xchg
das
cmp
jno
pop
ljmp
pop
sbb
sub
outsb
lgs
jge
cs
xchg
pop
cmc
mov
dec
push
jmp
jle
aas
lcall
sbb
sub
popa
hlt
mov
sahf
test
js
mov
add
pop
mov
subb
cld
jg
jno
cmc
dec
popf
xor
adc
mov
aaa
xor
js
test
stos
mov
call
sbb
ficomps
pop
pop
mov
shrl
jae
inc
fstpl
mov
fsubrp
iret
mov
jmp
inc
mov
xchg
dec
inc
fdiv
testl
popf
test
and
dec
pusha
fisubl
mov
xchg
out
bnd
fwait
sub
push
roll
addr16
addr16
sbb
ljmp
mov
movhps
in
pushl
ja
les
adcl
sti
movsb
inc
cmp
push
xor
pop
sub
xlat
add
ljmp
xor
fsubrs
and
xchg
pushf
dec
adc
sbb
fcompl
dec
dec
lret
aam
pushf
mov
lds
stc
adc
into
mov
or
psubq
adcl
cmp
inc
dec
das
dec
out
nop
sub
aam
aad
mov
dec
sub
push
dec
rcll
pusha
xor
mov
push
stos
rcrl
mov
std
loope
cs
add
lods
dec
dec
push
cli
jge
test
pop
fidivrs
popf
or
das
test
add
sub
je
in
jnp
xchg
cltd
std
lcall
lds
out
add
xchg
pop
cmp
mov
je
pushf
and
jnp
loopne
outsl
mov
xchg
pop
xor
in
jns
mov
cmp
mov
and
jl
add
xor
orb
daa
insl
popa
ret
mov
mov
pop
pop
repz
and
test
sub
incb
fisttpl
sbb
jle
cmp
filds
ficompl
push
xor
cwtl
mov
adc
fnsave
inc
pop
loop
cmp
push
jecxz
repnz
mov
add
fnsave
das
lods
fwait
scas
ljmp
jne
aad
sub
mov
lcall
or
sti
sbb
fcoml
je
out
lea
pop
pop
pop
sub
cmp
notl
sbb
aad
inc
mov
in
das
and
aam
lods
ret
lock
stc
cmc
pop
sub
lret
cmp
scas
dec
adc
and
lods
stc
repz
and
or
pop
sahf
and
xor
cld
cmp
aad
xchg
outsl
lahf
ret
cmpsb
mov
xlat
pop
loopne
ss
mov
cmp
sub
adc
pop
popa
pop
fdivs
add
mov
je
push
into
fwait
test
aad
fsubl
dec
cmp
jmp
push
mov
sbbb
or
jne
lcall
adc
pop
pop
insb
test
in
add
pop
or
jne
sub
mov
or
add
push
and
popf
push
cmp
sti
or
jg
dec
stos
andb
test
pop
movsb
sahf
shl
push
sbb
sub
stos
cmp
adc
and
fwait
mov
dec
or
je
sarb
and
xchg
cs
and
sub
add
xorb
mov
cmp
mov
xchg
lcall
xchg
sbbl
push
ret
pop
cmp
sahf
shlb
pop
push
out
cs
loop
cmpsl
in
ja
add
jns
aas
std
bound
fcoml
inc
pop
gs
inc
flds
cmp
xchg
aaa
sub
roll
or
mov
std
inc
into
test
sbb
or
aam
neg
xchg
js
sbb
cmpb
pop
repz
xor
mov
insl
adc
ljmp
outsl
cmp
push
nop
in
jmp
xor
jno
ret
push
and
cmp
ja
cwtl
out
and
outsl
jle
andb
add
inc
mov
inc
test
pop
add
cmp
xchg
xchg
aas
dec
sbb
or
dec
mov
shlb
mov
add
cmpsl
sahf
xor
jbe
mov
cmp
sti
pop
repz
pop
jne
xchg
jp
cmpsb
xor
pusha
je,pn
mov
adc
xchg
stos
jmp
fidivrl
or
dec
gs
xchg
outsl
dec
cmp
cmp
icebp
movsl
stc
sub
mov
cld
push
xor
out
jno
bound
in
mov
push
dec
cmp
sarb
pop
push
shll
sahf
sbbb
sahf
lds
imul
jno
dec
dec
cmpsb
push
test
out
in
inc
push
jecxz
inc
fimull
add
mov
fcoms
mov
xor
dec
xchg
jae
mov
ja
rcrl
xor
repnz
dec
mov
aad
inc
push
mov
clc
adc
cmp
xchg
fstl
cmp
cli
out
adc
inc
jmp
sti
ret
repnz
test
mov
pop
sub
cmc
mov
cltd
sbbl
sbb
sti
and
js
and
jge
in
int3
mov
and
pop
mov
xor
stos
ds
add
mov
dec
and
xchg
pop
test
mov
mov
stos
xchg
mov
aaa
or
mov
push
push
rorb
ljmp
sahf
add
scas
and
mov
sub
sbbb
inc
int
push
jp
pop
inc
xor
stc
or
dec
mov
test
mov
roll
push
ss
mov
push
out
mov
in
sti
lret
arpl
mov
bound
shlb
imul
sbb
jne
cpuid
lods
sub
adc
pop
jp
ds
insl
cmpsb
scas
push
nop
cmp
jecxz
out
or
dec
lahf
in
popf
xchg
roll
inc
les
jmp
xchg
fstpt
push
cmp
dec
dec
and
dec
movsb
fmull
jle
push
pop
push
mov
out
std
int3
push
fwait
sbb
mov
sarl
rol
pop
sbb
dec
push
test
into
mov
stos
pop
adc
inc
sub
orb
xlat
jp
xchg
sub
add
iret
mov
xchg
lock
mov
lcall
jl
push
mov
xor
xorb
iret
addr16
mov
lret
popa
and
shr
cld
rcrl
xor
jne
xor
and
cmp
cmp
repz
push
jl
out
stc
adc
pop
fwait
mov
outsl
adc
pminub
cmp
xchg
out
rcll
push
fsubr
test
lcall
mov
shll
or
xchg
add
add
xor
dec
cmpsb
adc
data16
mov
push
dec
cmp
fwait
cmp
lret
mov
cli
mov
push
xor
lcall
sahf
xor
pop
jecxz
xchg
ljmp
test
fisubs
es
fdivrp
push
mov
inc
fdivl
gs
sahf
insl
add
xchg
insl
xor
push
scas
pop
xchg
int
dec
sub
mov
sbb
lods
outsl
mov
push
pushf
push
movsb
add
and
cmp
ljmp
dec
xchg
icebp
sub
fmuls
mov
xchg
push
xorb
das
push
out
and
popf
adc
leave
and
xchg
pop
fstpl
push
mov
enter
inc
adc
mov
lcall
xchg
adc
aam
in
mov
mov
jo
xor
jle
fucomp
loope
mov
pop
scas
inc
out
jno
adc
lret
les
sbbl
push
mov
add
xchg
sub
lahf
stc
push
sarl
stos
xchg
xlat
and
popa
jno
ja
dec
nop
mov
roll
mov
cmp
and
arpl
adc
and
es
xchg
inc
mov
fbstp
das
cmp
mov
sub
cmp
sub
add
xor
fwait
xchg
int3
mov
sbb
cltd
pop
cld
rorl
fs
stos
aas
insb
xor
in
scas
xchg
repnz
mov
or
lret
jle
xor
cmp
stos
xchg
or
loopne
lods
fldl
pushl
jno
jns
scas
ss
push
jo
rol
leave
or
adc
sub
clc
sahf
jl
dec
xchg
scas
lods
sahf
roll
add
lret
mov
mov
jne
cmp
adc
test
and
jo
lcall
mov
popa
adcl
and
pop
mul
in
jle
xchg
or
jp
sahf
mov
cwtl
aam
loop
out
adcb
mov
stc
bound
mov
mov
xchg
adc
jo
mov
imul
repz
sti
out
sahf
and
inc
shrb
jno
or
jg
adc
aad
push
test
repz
and
inc
bound
mov
fmull
push
aaa
cmp
cwtl
movsl
cmp
cmp
sti
push
mov
mov
repnz
adc
add
cmp
idivl
and
sub
std
es
leave
push
rcl
lods
mov
mov
mov
stos
fsts
push
xchg
popf
xor
jo
popf
inc
scas
mov
push
sbb
enter
dec
ja
dec
dec
adc
mov
push
es
dec
push
popf
add
jo
cmc
xor
popa
xchg
mov
or
push
insl
lahf
and
aam
pop
mov
and
sub
bound
mov
inc
xor
lds
fistpll
shrb
jne
pop
jbe
push
push
hlt
dec
mov
lods
xchg
inc
push
adc
daa
xor
lods
sbb
fsubs
test
aam
sar
push
xchg
in
jecxz
jl
xchg
push
sbb
pusha
cmp
sbbl
lock
jle
add
xchg
cmp
das
pop
jno
cs
xor
pop
xor
std
mov
and
lock
push
rcrb
into
mov
inc
sbb
add
mov
addl
sbb
stc
popf
andb
jns
stc
xor
add
mov
mov
movsl
fiadds
mov
pop
pop
mov
mov
mov
sbb
lods
inc
sti
mov
lret
enter
in
jmp
or
push
jo
outsb
add
sub
mov
pop
dec
das
into
lock
and
cmp
notb
mov
add
jb
out
jbe
mov
jmp
adc
sbb
push
xor
pop
insl
jne
ds
pop
sbb
andb
int
and
loop
add
sbb
xchg
std
lock
xor
mov
xchg
xchg
daa
cmp
fstps
ret
sbb
jl
es
sbb
aaa
xchg
sub
mov
inc
adcl
cmp
sbb
mov
cld
push
mov
sub
push
cmpsl
sbb
jle
xchg
fnstsw
mov
sub
push
or
xchg
aam
lret
xor
das
add
push
stc
or
push
leave
test
jns
fadds
fs
sub
rol
loopne
adc
nop
adc
jnp
push
push
pop
adc
ficoms
ret
popf
lret
mov
sahf
pop
or
ja
nop
sbb
pop
sub
addl
jmp
test
push
inc
mov
movsl
lock
movsb
and
out
rol
inc
jecxz
push
or
cli
nop
sub
int
pop
loopne
add
sbb
jbe
stc
pop
fs
cmpsb
cmp
popf
dec
lods
mov
frstor
fsubrl
add
mov
in
test
hlt
dec
and
hlt
mov
sub
pop
fnstsw
lret
adc
test
xor
lods
push
cld
aas
shll
push
push
pusha
test
lds
aad
repz
mov
out
adc
pop
mov
outsb
push
pop
arpl
mov
add
or
cwtl
gs
hlt
bound
jne
mov
sub
ljmp
push
sub
jno
fucom
mov
cli
subl
cmp
popa
js
add
or
inc
leave
popa
imul
sbb
cmp
or
loope
loopne
push
bnd
aam
mov
in
sub
mov
cmp
mov
data16
dec
loop
lcall
pop
fbstp
inc
mov
mov
fiadds
push
or
inc
loop
or
aad
aam
pusha
orl
jmp
stos
lock
pusha
push
test
shl
scas
lock
iret
dec
in
dec
pop
jl
cmc
mov
adc
adc
and
aad
cmp
push
lcall
push
ljmp
jno
inc
shrb
repnz
dec
inc
push
fldl
sub
push
cmpsl
roll
sbb
cmp
inc
lods
test
test
lret
jecxz
ljmp
das
sub
xor
int3
call
push
cmp
rolb
imulb
cmp
add
ret
test
fsubp
hlt
pusha
fwait
movsb
cmp
adc
mov
mov
in
inc
sarl
pusha
mov
scas
in
inc
pop
je
cmp
lcall
lcall
sbb
mov
test
dec
icebp
cmp
iret
sbb
jnp
sahf
and
xchg
cmp
das
pop
mov
xchg
inc
push
sbb
xchg
cmp
shr
mov
dec
in
push
mov
inc
push
mov
std
jo
and
sahf
xchg
mov
out
fwait
jne
aas
ja
dec
jecxz
sub
fmul
pusha
into
icebp
imul
push
jb
or
out
sub
add
jae
sbb
cmp
and
push
mov
insl
jecxz
jmp
lods
jb
jbe
fsubl
push
testl
mov
sub
loop
inc
dec
inc
mov
mov
push
jmp
cli
mov
lods
cmpb
ret
mov
mov
pop
xchg
lods
add
dec
rcrb
pop
pop
xor
aas
rcrl
jne
pusha
push
pop
add
std
repz
cltd
test
jno
shr
in
inc
or
jbe
jo
jg
jecxz
mov
adc
insl
xlat
outsb
leave
adc
in
add
nop
push
inc
fwait
pop
and
leave
inc
fsqrt
andb
and
mov
enter
mov
aam
xchg
pushl
bound
test
pop
cmp
and
cmp
jne
out
ret
outsb
or
loope
mov
push
push
sbb
sub
jno
xor
sub
outsl
adc
and
add
mov
mov
sub
shl
jg
dec
dec
sahf
clc
in
pushf
into
cmp
mov
fstp
push
and
or
push
adc
mov
sub
push
sub
sbb
jno
lret
lahf
mov
leave
mov
int
stos
push
xchg
mov
lret
pop
icebp
jo
sub
xchg
js
sbb
add
repnz
mov
arpl
cmp
fistl
sub
popa
jne
arpl
push
sub
cmp
out
fisubs
or
sahf
insb
push
xchg
fs
dec
je
mov
xchg
xchg
inc
iret
dec
outsl
repz
roll
loop
and
sbb
mov
rclb
jno
jnp
and
mov
cltd
cmp
aaa
call
stc
push
jmp
into
inc
mov
nop
push
gs
lods
cmpsl
rorl
nop
dec
xor
jl
xchg
sub
stos
imul
shrl
das
push
cmpsb
pop
loope
stos
xor
inc
or
dec
and
jle
pop
jno
stos
inc
inc
movsl
stc
out
xchg
push
or
mov
lea
lds
xchg
sub
cld
jmp
pop
shll
jnp
cmp
or
push
mov
in
mov
pop
ret
xchg
adc
push
push
imul
cmpsl
repnz
inc
or
mov
test
mov
and
sub
xchg
lods
inc
pop
sarl
mov
movsb
cmp
scas
adc
cwtl
das
out
leave
or
lods
dec
nop
inc
pop
repnz
enter
dec
adc
mov
stc
mov
in
push
xor
lds
icebp
cld
fsubr
sub
add
mov
push
pop
adc
mov
pop
mov
mov
xor
jp
add
fcmovnbe
cmp
lock
mov
pop
push
aam
inc
out
cmc
cmc
insl
imul
or
dec
dec
icebp
movsl
ljmp
add
push
sbb
cli
mov
jno
dec
lds
xlat
lds
pop
adc
int3
cmpsb
sbb
xlat
lock
add
xchg
in
pop
dec
mov
jge
jbe
scas
pop
mov
stos
dec
pop
out
jl
cltd
xor
sbb
push
dec
cmp
int
jb
add
mov
mov
mov
fbld
sub
and
lahf
dec
jo
jg
sbb
mov
sub
jp
adc
xchg
out
aaa
int3
icebp
or
addr16
push
inc
lds
dec
jecxz
xchg
and
sbb
push
mov
jae
xlat
shlb
sub
push
pusha
neg
outsl
and
inc
stos
inc
cwtl
imulb
in
test
push
je
rorl
sbb
inc
sub
and
dec
loop
mov
cmpsb
mov
in
xor
and
mov
outsb
push
mov
pop
add
ret
sbb
mov
xchg
ret
mov
js
test
shlb
js
les
dec
ret
into
addr16
and
pop
test
seto
mov
repnz
inc
sahf
fadds
sbb
cwtl
jge
outsl
push
aad
or
aaa
or
jmp
pop
popf
out
sbb
lahf
adc
push
mov
and
jb
cli
jg
jmp
std
pop
pop
pushl
push
insl
in
lea
dec
mov
jecxz
sub
add
in
repz
mov
pop
notl
loope
dec
scas
out
out
jmp
xor
arpl
xchg
pop
stos
xchg
push
out
out
mov
push
test
or
dec
mov
ja
lahf
sub
pushf
push
mov
push
and
shlb
inc
push
aas
in
and
faddl
sti
outsb
les
pop
filds
ret
movb
out
imul
dec
or
pop
repz
fwait
pop
pop
inc
sub
jb
shll
mov
push
mov
cld
push
mov
jbe
push
das
lret
mov
or
dec
mov
sbb
and
pop
test
iret
sub
loopne
movsl
dec
sub
inc
lcall
pop
stos
test
sbb
lock
dec
cs
push
pushf
jecxz
jb
lea
push
mov
xchg
call
or
outsb
push
or
ds
jecxz
adc
pop
or
cmp
pop
mov
jge
mov
mov
lods
aaa
pop
out
sbb
sarl
out
fildl
adc
fwait
pop
pop
test
cmc
imulb
decb
mov
fsubl
or
outsl
push
xchg
push
adc
iret
mov
mov
lock
and
adc
dec
or
js
dec
mov
rorb
aaa
js
sti
cld
push
mov
push
xlat
popa
push
imul
jbe
mov
add
mov
lock
lods
stos
add
repnz
std
mov
dec
and
call
imul
pop
les
hlt
lods
and
or
lods
loopne
stc
pushf
into
dec
in
jg
inc
lds
xor
mov
push
push
popa
cld
pop
cmp
mov
pusha
and
inc
dec
push
add
rcrl
lock
pop
and
jbe
lahf
repz
subl
les
and
dec
jecxz
aaa
pop
cltd
cmp
mov
mov
ret
sbb
rcrb
test
inc
push
call
dec
dec
cli
mov
pushw
imul
cli
and
xchg
push
fnstcw
iret
or
shrb
add
cmp
insl
shl
aas
sub
pop
jne
cmp
fbld
dec
enter
adc
test
pop
icebp
int
xchg
add
inc
jo
sti
adc
sbb
or
jo
loope
mov
xor
outsb
lods
push
sub
cmpsl
push
hlt
mov
test
and
adc
mov
mov
inc
inc
and
inc
pop
repz
mov
fdivl
mov
shrb
push
xor
insl
sbb
test
mov
test
into
movsl
sbbb
mov
jg
fcomp
inc
or
mov
aas
pop
dec
push
push
fbstp
loop
sub
mov
shrl
jns
cmp
sahf
mov
into
rcrb
lahf
mov
out
adc
iret
mov
test
shl
jne
cltd
sub
lcall
push
and
outsl
jecxz
lahf
pop
lds
addb
std
jne
add
mov
fidivs
mov
dec
adc
shl
push
cmpsb
dec
xlat
push
rorl
dec
jp
mov
cmp
sbb
xchg
aad
jle
cmp
fnsave
add
add
xchg
lods
lds
repz
lock
add
ja
pop
xor
je
sbb
adc
ss
outsl
pop
pop
int3
fs
pop
jmp
js
ror
cmp
insb
inc
add
pushf
mov
mov
xor
pop
loopne
mov
fnstcw
aas
sub
aam
aam
push
sbb
fcoms
adc
out
outsl
iret
daa
in
leave
mov
or
stos
inc
mov
daa
inc
xchg
pop
fwait
sti
lahf
rol
xchg
mov
xor
dec
cs
mov
jo
fildl
push
adc
and
jge
xchg
mov
adc
inc
adc
lret
outsl
or
daa
cmp
loope
pop
sbb
ret
jmp
sub
mov
imulb
pop
shl
loopne
push
mul
sub
xor
cli
daa
jp
inc
ljmp
cmp
paddw
jle
push
dec
or
das
or
cmp
inc
lds
cld
stos
jle
ret
dec
popf
and
scas
fs
mov
fmull
push
js
mov
xchg
xchg
fcomps
imul
test
adc
sub
jnp
jecxz
push
stc
int3
ja
notb
sbb
push
nop
jnp
mov
mov
into
loop
in
push
sub
or
sbb
sti
cmpl
inc
dec
cli
mov
jge
add
add
xor
in
jmp
and
mov
or
popl
addr16
push
pop
adc
aas
outsb
sub
mov
sbb
jnp
movsl
movsb
stos
sub
push
int
imul
iret
sbb
popa
fisubrl
dec
add
sti
aas
or
std
xor
inc
pop
push
mov
sarl
es
adc
pop
lock
sbb
aad
ja
test
xor
or
cltd
test
or
loopne
out
mov
decb
es
push
mov
iret
mov
jbe
sbb
mov
clc
cmp
add
mov
sbb
in
popf
bound
dec
sub
sub
aad
push
and
xchg
repnz
sbb
push
out
add
adc
pop
sahf
daa
setl
inc
dec
es
fstpl
mov
aad
xchg
nop
pop
sub
cmp
ret
enter
push
cltd
mov
mov
push
or
aad
daa
outsl
jnp
pop
sub
inc
pop
fistpl
mov
fdivr
jo
adc
xor
imul
or
or
adc
xchg
pushf
repz
xor
sti
imul
out
pop
mov
cmp
push
xchg
imul
jo
mov
pop
mov
insb
ss
add
lea
or
cwtl
stos
sub
push
popf
popa
loop
jmp
pop
bound
ret
xor
loopne
cli
pushf
lock
and
pop
hlt
add
sub
push
xchg
pop
loopne
rcrb
push
in
clc
js
ja
hlt
aam
cwtl
cwtl
xor
out
ret
fisttps
mov
sub
pop
orl
pop
shl
cs
cmp
lea
jp
out
test
pop
stos
lea
adc
icebp
cmp
xor
sbb
xchg
scas
sub
fwait
push
push
dec
xchg
movsb
leave
pusha
test
negb
mov
fdivl
cmc
mov
popf
outsb
xchg
fidivl
mov
lahf
iret
sbb
and
mov
into
addr16
sbb
add
outsb
popf
push
jl
pop
mov
mov
in
jle
xchg
shrb
ret
mov
loop
nop
pusha
and
int3
cltd
cmpsb
stc
dec
in
cltd
or
fs
adc
jmp
scas
add
or
int
inc
test
cwtl
scas
jnp
loope
stos
ret
pop
out
dec
mov
jp
cmp
movsl
popa
les
mov
iret
inc
pop
sub
add
je
mov
ljmp
jno
sahf
or
iret
xor
test
scas
pushf
test
mov
insb
sub
pcmpgtd
dec
lock
stc
icebp
and
push
notl
push
adc
stc
or
and
inc
pop
and
popf
stc
cld
pop
pop
xor
out
lds
test
pop
fld
repnz
stc
andb
aam
and
xor
repnz
cmpsl
ds
outsl
in
sbb
je
outsb
jae
jae
or
out
add
sub
sub
cmp
imul
cmc
jmp
sbb
popf
dec
mov
sbb
and
popa
dec
aam
nop
push
jp
addb
loope
fcomps
cmp
jo
mov
incl
in
push
scas
or
sub
pop
rcll
dec
aas
xor
les
incb
pop
xchg
jne
jne
xor
mov
sbb
aad
cltd
xchg
bnd
xor
addr16
and
ror
gs
jae
pushf
mov
sbb
jg
add
mov
mov
inc
test
fcoms
ss
mov
jmp
pop
or
lock
add
scas
or
cltd
int
arpl
push
js
in
mov
lahf
adc
pop
xor
leave
popa
add
rclb
icebp
mov
enter
leave
inc
xlat
cli
shlb
sub
mov
testl
jno
repz
sbb
out
ljmp
push
push
mov
jno
les
aas
mov
lods
and
ljmp
pop
icebp
lea
xchg
adc
scas
js
loope
lods
mov
out
int3
and
out
imulb
mov
lods
inc
sbb
push
mov
insb
mov
inc
or
in
xor
mov
inc
jecxz
add
ret
out
xchg
lret
sbb
sub
or
dec
decl
jmp
out
incb
mov
mov
push
push
cltd
adcl
xchg
dec
hlt
in
test
outsb
xchg
adc
into
pop
cmp
jmp
dec
pop
in
test
scas
lcall
inc
lret
pop
mov
adc
or
xchg
push
popa
mov
push
and
cld
mov
int3
popa
cmp
pop
sbb
sbb
pusha
lcall
xor
adc
dec
push
jge
mov
inc
adc
fcmovnb
test
insl
loope
and
outsb
insl
pop
cmc
test
daa
jge
xlat
daa
xchg
dec
in
or
ret
push
jno
add
dec
mov
frstor
lea
lods
jg
outsb
jl
adc
cmp
xchg
push
pop
dec
in
sub
sbb
mov
inc
loope
ja
mov
xchg
mov
test
call
imulb
inc
incb
popa
xor
jno
inc
stc
js
pop
ljmp
cmc
adc
xor
push
fldl2e
xor
rorl
shl
lods
inc
stos
sbb
mov
push
ss
icebp
in
xchg
dec
adc
popf
dec
xchg
cmpsl
dec
divb
sub
add
cld
subl
aas
mov
dec
pop
cs
lods
and
aad
mov
and
xor
mov
inc
mov
std
xchg
int
dec
leave
or
mov
mov
fisubrs
sub
fdivl
add
fadds
cmp
and
and
in
fcompl
fbstp
addr16
je
xchg
aad
scas
xchg
pop
repnz
jns
sbb
dec
push
insb
jae
or
lahf
add
mov
out
enter
mov
jge
pusha
pop
ret
shl
dec
pop
dec
jecxz
repz
test
pop
xor
and
in
mov
mov
movsl
call
fbstp
jne
and
sti
xchg
lods
mov
sbb
add
add
ss
xchg
sbb
sbb
or
jno
inc
mov
sti
int
adc
dec
inc
and
adc
je
cmp
arpl
lahf
fidivrs
pusha
std
xchg
test
dec
in
xchg
sbb
imul
xor
sub
mov
or
pop
sbb
xchg
fwait
loopne
and
add
cmpsb
ret
iret
sbb
mov
cs
ljmp
nop
jne
xor
pop
xlat
push
add
insb
sub
sub
jbe
arpl
sti
loop
adc
add
ja
mov
mov
adc
xchg
jno
dec
lret
sbb
mov
ret
mov
mov
jg
inc
std
cli
adc
ja
jl
in
add
lcall
gs
sahf
sahf
or
addr16
fbstp
lods
mov
or
sbb
sbb
sub
mov
pop
dec
cmp
jb
je
inc
pop
stos
mov
ret
mov
xchg
dec
xor
sbb
push
fwait
aaa
movsb
movsb
jns
mov
or
add
inc
and
push
ljmp
jno
je
repz
mov
repnz
jle
lret
pop
and
orb
mov
cmp
daa
sub
adc
adc
fdivrs
jge
mov
popf
sbb
int
aaa
fmuls
xchg
mov
fnsave
ja
mov
insb
andb
xchg
shll
icebp
sub
lods
je
ja
ss
in
mov
cmp
mov
cmp
pcmpeqw
sbb
shr
test
scas
sub
insb
mov
cmp
cmp
lods
pop
in
cmp
jp
add
shlb
js
scas
sbb
repnz
mov
push
aad
mov
adc
jbe
aaa
into
dec
lock
mov
outsb
push
jne
insb
or
mov
cmpsl
loope
mov
aas
out
jmp
cmp
add
sti
arpl
inc
push
inc
cmp
jl
ret
jl
mov
js
jne
mov
fsubr
jb
lds
cmp
daa
outsl
mov
pop
pop
xor
lds
pop
adc
test
pop
idivb
shl
outsb
leave
fdivrs
pop
mov
or
popa
dec
dec
shlb
and
push
mov
or
fdivrs
jo
mov
mov
pusha
stc
mov
mov
rorl
and
xchg
add
or
movsl
mov
ficompl
mov
test
lea
aas
pop
xor
rol
icebp
outsl
xchg
sub
nop
jp
aad
sub
push
mov
and
out
mov
xor
adc
dec
lret
sti
bnd
fidivl
sti
sub
ljmp
outsb
add
adc
jb
mov
add
xchg
xchg
sub
out
aas
pop
frstor
xor
push
std
in
push
mov
aad
sub
pop
dec
xor
mov
out
fdivl
add
adc
arpl
fbld
add
pop
sbbl
ja
cli
pop
push
pop
mov
jg
mov
shll
inc
lds
and
xchg
ret
cmpsb
fisubrs
pop
mov
add
mov
popa
loope
js
or
js
insl
out
xor
fwait
add
cmp
aad
sub
xor
out
inc
xchg
or
pop
xchg
sub
movsb
dec
cmp
adc
inc
adc
out
jl
scas
inc
popf
pushl
fwait
lods
mov
rcr
inc
arpl
mov
iret
fs
inc
jmp
js
push
cli
cltd
pop
sahf
xor
orl
aam
mov
xchg
mov
inc
mov
aad
in
pop
cmp
jns
movsl
inc
fst
fdivrl
add
rcl
jmp
inc
xchg
je
push
inc
movsl
cmp
add
cmc
mov
pop
pop
repnz
fs
stos
xchg
test
mov
xor
mov
adc
inc
push
pop
pop
std
xchg
mov
adc
dec
pop
fsubl
sahf
cmc
int
add
adc
pop
loop
push
decl
bt
and
and
or
mov
test
sub
adc
pop
jl
enter
rolb
popf
pmaddwd
push
repnz
hlt
jno
lds
cld
fistpll
insl
jbe
loop
pop
push
adc
mov
bound
lahf
sbb
mov
sub
mov
mov
cmp
stos
inc
pop
and
test
pop
leave
xor
or
scas
sub
mov
jno
inc
mov
mov
xchg
xlat
pop
add
pop
ret
jmp
and
mov
cmp
xchg
insl
rcrl
leave
cmp
adc
rorb
xchg
sbb
xor
sbb
or
cmp
ds
mov
dec
test
mov
or
pop
cmpsl
xor
dec
stos
jne
jg
push
pushf
cmp
insl
std
into
fsubr
cmp
lcall
push
std
mov
popa
xor
sbb
scas
pop
push
jb
out
xchg
es
mov
cmp
movsl
movsb
cmp
inc
jbe
fs
or
test
add
or
cs
dec
in
dec
stc
stc
xor
inc
fdivrp
popf
mov
pop
scas
xchg
insl
jmp
mov
jmp
push
cwtl
and
pop
add
xor
cld
fwait
inc
out
lock
pop
mov
aaa
lods
push
mov
cmpsl
ret
push
cmpb
xor
in
jns
and
sub
or
loope
mov
jl
adc
scas
cmp
dec
stos
inc
push
je
das
push
das
leave
mov
out
enter
lds
rcrb
ror
sti
iret
mov
dec
and
call
or
arpl
or
mov
cld
mov
push
adcb
xor
movsl
cmp
ret
in
xchg
stos
ret
sub
push
add
sbb
pop
and
dec
lods
or
dec
outsl
shl
and
mov
mov
insb
add
or
mov
mov
and
mov
adcl
adc
dec
sub
dec
shrb
nop
nop
push
sahf
pop
imul
and
dec
dec
mov
int3
movsb
cmp
push
scas
loopne
ret
mov
and
or
cmp
ljmp
push
or
pusha
mov
inc
lea
icebp
fidivrl
push
pop
push
cmp
arpl
out
add
daa
outsl
pop
les
test
stos
movb
fidivs
idiv
adc
lcall
add
sbb
push
inc
shr
sbb
push
rclb
inc
aas
adc
loop
xchg
or
cmp
clc
push
movsl
xor
xor
mov
sti
fwait
call
sahf
popf
addr16
rorl
jl
data16
mov
sub
out
test
repnz
mov
cmpsl
mov
shll
rcl
jp
add
cs
add
setbe
test
dec
lahf
xor
and
mov
adc
push
in
dec
pop
inc
pop
sbb
add
cmpsl
dec
xchg
lods
cmc
cmp
cmp
enter
mov
out
lret
add
hlt
dec
imull
lret
jne
jmp
mov
mov
insl
jle
mov
shrb
lock
xchg
lahf
push
addb
dec
hlt
cmpsb
pushw
popf
test
lock
mov
jo
negl
dec
push
xlat
sub
aam
cmp
inc
dec
into
gs
push
push
xchg
in
push
js
mov
in
orb
mov
lea
mov
mov
mov
sbb
push
dec
add
in
inc
frstor
inc
pop
outsl
divl
iret
and
sbb
cmp
ss
das
shlb
out
fwait
icebp
ljmp
lods
xor
jb
repnz
rcrl
ljmp
cmc
mov
aam
xor
jl
sbb
lds
sub
or
and
cmp
pop
inc
sbb
int
std
mov
pop
adc
pop
hlt
test
je
or
mov
sti
pop
movb
shlb
cwtl
pop
jmp
mov
das
into
aas
lock
push
sub
mov
push
stos
push
sub
mov
xor
or
aaa
pop
sahf
inc
in
out
outsb
jnp
inc
mov
dec
movsl
scas
mov
adc
stos
inc
dec
mov
movl
and
or
mov
pop
out
cmpsb
ret
or
push
push
dec
push
js
fstpt
mov
pop
outsb
cli
pushf
sar
xchg
xor
and
fwait
sub
inc
adc
and
cld
iret
push
scas
add
xor
enter
in
push
inc
loop
or
lahf
mov
lds
add
rcrl
call
push
popf
pop
cltd
jnp
lcall
ret
or
add
or
cmp
fsts
sbb
scas
loope
pop
or
cmp
lcall
aad
jge
add
js
loope
adcl
adc
sbb
pop
cmc
or
push
or
lret
jnp
mov
hlt
pop
je
in
roll
cwtl
dec
sbb
cmp
std
stc
xchg
inc
pop
sbb
into
cmpsl
es
out
adc
jge
cmc
jp
popf
push
imul
adc
jnp
sub
loopne
ljmp
sbb
loopne
cmp
sbb
jecxz
movsb
pop
push
test
sub
mov
mov
cltd
cmp
xchg
inc
adc
je
test
add
xor
addr16
and
inc
pop
jg
fwait
dec
movsb
inc
call
pop
pop
sub
mov
clc
inc
xlat
mov
aaa
jnp
xchg
mov
std
add
sbb
sbb
and
inc
fadds
je
iret
adc
or
mov
push
shl
mov
pop
mov
and
push
xchg
jo
add
sub
lea
push
pop
jge
lock
icebp
in
fidivl
adc
clc
and
push
cmc
sbb
ja
test
sbb
inc
shl
inc
mov
in
inc
in
mov
in
movsb
setae
xchg
lods
lock
add
test
mov
inc
or
je
dec
sahf
inc
mov
or
sub
push
xchg
xchg
ret
adc
inc
ja
ret
cmp
in
icebp
mov
rclb
movsl
xor
shrl
cmp
shll
lea
and
insl
adc
pop
test
lret
into
mov
sub
fucom
loopne
daa
inc
testl
aaa
fwait
push
mov
leave
sub
mov
sbb
add
cmp
mov
icebp
xchg
pop
loop
push
fistl
int
sub
mov
sub
loop
xchg
mov
add
jb
cmp
fdivrs
inc
jne
xchg
adc
xor
jle
std
push
mov
xlat
cmpsl
bound
xchg
xchg
sub
lcall
xchg
inc
mov
xchg
repnz
push
repz
rcrl
mov
adc
stos
jp
fdivl
jmp
or
xlat
xor
mov
stos
push
sbb
adc
jl
dec
outsb
push
out
lahf
push
negl
or
or
jecxz
sahf
dec
out
sahf
std
sarb
stos
and
adc
mov
mov
pop
dec
add
cmp
leave
and
nop
dec
dec
rclb
cmp
std
cmc
mov
adc
in
pop
cmpsb
xchg
dec
andb
pop
and
popf
pop
js
call
out
push
jne
mov
mov
or
call
xor
scas
fcmovu
imul
frstor
push
outsb
loopne
and
enter
xchg
shll
cmp
adc
jl
xor
lods
jbe
sbb
adc
ss
push
fisubrl
aam
mov
cs
lcall
in
jl
push
popf
stc
dec
stc
jle
mov
jge
dec
mov
stc
or
jns
mov
jecxz
jmp
aaa
pop
cmp
pusha
xchg
dec
loopne
ret
sub
popa
pop
cmp
cmp
xchg
aam
adc
ret
pop
int3
jns
sub
dec
call
add
xor
xchg
sub
out
in
jmp
decb
mov
arpl
sub
in
sbb
arpl
mov
loopne
adc
pop
mov
fs
in
and
aad
mov
pop
in
cmp
add
test
std
dec
lret
out
and
sub
stos
sbb
and
ljmp
iret
stc
loope
out
stos
mov
push
aas
sbb
push
push
lret
stos
fsubs
je
mov
sbb
inc
push
outsb
push
mov
xchg
loop
stos
push
scas
inc
sbb
xchg
xor
sahf
daa
push
mov
loopne
and
insl
mov
and
insl
sub
ds
bound
cmp
outsb
cmpsl
adcl
and
sar
fbld
or
lcall
std
pop
cmp
fisubs
ja
pop
hlt
aaa
sbb
test
push
add
leave
mov
mov
mov
xchg
out
insl
lock
xchg
mov
lahf
or
in
xorps
push
inc
mov
jae
xchg
pusha
shlb
sbbl
xor
or
xor
jecxz
pop
std
sub
xor
xchg
pop
xor
loopne
cltd
fwait
cmp
fwait
int3
and
cli
loopne
mov
sbb
pop
mov
popf
fwait
das
sti
xchg
stc
shl
xchg
dec
mov
xchg
push
and
pop
aad
fdivp
mov
add
bound
fstpl
gs
dec
repnz
call
scas
adc
cmp
dec
cmp
test
test
dec
jecxz
imul
enter
sub
nop
mov
xchg
mov
enter
fs
inc
xchg
mov
dec
and
stos
ss
dec
mov
sbb
or
pop
lret
enter
test
in
repz
sub
inc
mov
scas
xor
xchg
dec
xor
cltd
dec
repnz
jb
loop
xchg
xor
cmp
es
mov
pop
jno
lods
divb
clc
cmp
sahf
sub
push
or
and
jl
inc
jb
adc
and
inc
fcoml
adc
repnz
testl
pop
test
pop
mov
inc
pusha
sub
repz
xchg
or
cmp
xor
shll
gs
rolb
push
fiadds
sbb
imul
rcr
sti
aaa
leave
pop
xchg
inc
movsb
xchg
push
mov
fisubl
jp
dec
shrb
ja
jecxz
pop
arpl
addr16
cmp
shll
es
ja
or
pop
xlat
mov
cmp
xchg
fucomip
and
out
sahf
sub
sub
pop
fldl
push
rol
dec
int
pop
dec
adc
jnp
into
ljmp
bound
addr16
dec
loope
fs
jmp
inc
mov
testb
aam
jmp
jle
mov
mov
fcom
jmp
shlb
push
add
mov
icebp
movsl
add
mov
inc
aaa
shlb
fwait
loopne
and
movsb
aas
dec
scas
dec
push
daa
ljmp
push
in
dec
out
hlt
sbb
divb
in
mov
into
adc
int3
cmp
std
hlt
je
loopne
sub
repnz
out
mov
xor
jns
jne
mov
dec
in
fdivr
les
cmpsb
cmp
dec
jl
sub
xchg
mov
subl
clc
cmp
and
sbb
jg
dec
jmp
negl
ljmp
jne
push
jae
jl
fcoml
add
pop
xchg
sub
jb
leave
lret
mov
in
pop
sbb
pop
jno
mov
cmp
jbe
lret
xor
push
jae
xchg
int
push
iret
mov
cmp
es
xchg
notb
mov
xor
xor
idivl
loope
pop
out
cmpsl
test
jb
gs
cmp
sbb
ds
aaa
div
xlat
pop
cmp
mov
xchg
repz
shlb
add
push
insl
push
push
pop
in
and
les
sub
or
lret
dec
jecxz
mov
mov
popa
fwait
icebp
lahf
push
mov
in
xchg
cmpl
add
add
notl
mov
arpl
xor
jbe
xchg
mov
jbe
xchg
sarb
in
inc
fs
cmc
pop
adc
sbb
push
mov
jmp
push
sub
rcll
jmp
test
outsl
iret
dec
movsb
lahf
dec
mov
mov
lods
out
les
fistl
adcl
stc
xor
icebp
xor
subb
xchg
xchg
dec
adc
push
jge
mov
ds
push
rcrl
sub
dec
push
sbb
aas
bound
fldl2t
outsl
aaa
sbb
enter
mov
testb
nop
adc
mov
pushf
outsb
adc
rorb
push
fcmovu
in
repz
inc
push
call
cmp
and
mov
jb
mov
or
cli
cmp
mov
sub
and
js
dec
xchg
mov
cld
dec
add
adc
popl
testb
popf
mov
in
faddp
in
inc
jg
daa
into
stos
adc
nop
and
imul
cld
lods
aam
sbb
inc
add
adc
xlat
cmpsl
js
pop
stos
jecxz
lcall
loop
push
inc
pop
push
aas
jnp
rcrl
xchg
dec
daa
jle
mov
je
pop
outsb
mov
cmp
scas
mov
pop
lods
ss
jmp
paddb
pop
push
adc
out
sub
dec
lds
mov
jmp
push
mov
mov
lds
lret
sub
sub
push
adc
mov
fcomps
fs
loopne
jmp
in
ret
pop
icebp
cli
pusha
dec
pop
test
js
jecxz
shl
jecxz
and
out
mov
shrb
incb
leave
ret
lods
in
aas
pop
in
cmp
pop
idivl
cmp
sti
sub
jge
push
cmpb
add
lcall
xor
cmp
fwait
xor
sbb
mov
pushf
or
into
mov
push
mov
sub
addr16
ret
dec
mov
popa
ret
sbb
push
rclb
sub
gs
loop
push
addl
popf
sbb
or
or
std
push
jo
shlb
fnstenv
outsb
pop
hlt
xchg
adc
pop
jmp
jbe
xor
sarb
repz
xchg
adcb
cmpsl
push
neg
popa
push
aas
push
jae
iret
in
pop
icebp
jnp
leave
cmpsl
fnstsw
into
iret
aad
jno
or
pushf
insb
stc
lods
sbb
xchg
mov
push
in
adc
dec
or
in
push
test
aad
dec
fldenv
data16
jmp
jge
mov
test
or
push
jae
popa
sbb
xchg
cmc
cli
push
sub
cmpsb
les
popa
xchg
sub
loope
jb
sub
push
aas
add
xor
imul
mov
lock
cmp
dec
dec
in
dec
jnp
jg
jge
icebp
loopne
push
adc
inc
incb
in
push
push
cmpl
xor
hlt
mov
js
aas
add
dec
ret
cld
or
fmull
dec
ljmp
cmpsl
or
jmp
repz
es
mov
cmp
mov
fisttpll
lahf
sbb
ds
aad
sub
cmp
into
mov
or
pusha
or
stos
add
sub
inc
sbb
sti
xchg
insb
add
fisttpll
clc
dec
sub
xor
jg
mov
imul
jecxz
out
xchg
ss
mov
shlb
adc
movsb
loope
cmp
add
sub
cmpsl
cmp
inc
cld
xchg
xor
lcall
lret
sbb
push
ss
cmp
inc
mov
shrl
dec
mov
test
or
mov
jl
inc
push
pop
cmc
addl
fildll
inc
fldt
cli
sbb
inc
push
pop
addb
adc
push
jnp
sbbb
xchg
xchg
sub
movb
sub
mov
xor
lret
aas
push
add
pop
mov
sbb
inc
fidivs
int
andl
dec
mov
test
push
scas
xchg
cmpsb
inc
int
push
out
stos
sbb
cmp
sbb
cltd
lods
inc
bswap
jge
inc
sub
sahf
jle
test
dec
mov
in
cmp
and
loope
adc
stos
add
gs
jecxz
cld
hlt
dec
dec
cmp
pop
iret
push
lea
mov
pop
xchg
lahf
cltd
xor
movsb
add
fdecstp
cmp
jbe
jns
push
and
les
les
ja,pt
adc
mov
push
add
cmpsb
loope
test
pop
cld
mov
push
lret
loope
rcr
fmuls
mov
rorb
mov
inc
add
jge
cltd
or
dec
mov
cmp
lret
add
cmp
ljmp
jno
adcb
xchg
mov
add
xchg
sub
and
cmp
scas
xor
mov
outsb
add
cmp
sahf
clc
jae
xchg
pop
adc
add
mov
test
pop
add
push
inc
call
lds
mov
cmc
mov
add
nopl
jne
cmp
aam
mov
xlat
arpl
jle
call
xchg
cmp
jecxz
add
mov
pop
repnz
inc
les
cmp
test
cltd
fs
out
shl
adc
aas
xchg
lock
ds
pop
dec
imul
imul
into
jns
fwait
adc
inc
xchg
or
pop
adc
jnp
xchg
sub
rcrb
cmpsl
aas
sub
inc
repnz
in
in
inc
or
lock
or
adc
dec
pop
clc
xor
or
xor
push
fs
sbb
pusha
lods
imul
mov
pop
bound
fmuls
inc
loop
sbb
punpcklbw
jl
mov
dec
pop
dec
pusha
push
mov
push
or
imul
push
mov
adc
into
imul
fisubrl
cli
das
test
add
xor
add
mov
mov
jo
jle
jecxz
ss
aad
mov
pop
pusha
cmp
das
shr
pusha
lods
mov
xchg
ret
lret
scas
jnp
sub
aas
and
pop
sub
cmp
cs
jb
jl
jmp
mov
lea
js
fidivrl
add
test
pop
dec
bound
iret
push
and
loop
sahf
movsb
jecxz
and
pop
push
enter
inc
and
push
add
jl
aam
add
xchg
xchg
pop
fwait
sbb
push
xor
fucomp
fistps
jg
xlat
push
loopne
adcb
sbb
hlt
cmp
xchg
clc
jmp
movsl
xchg
adc
and
sbb
out
add
mov
ljmp
and
aam
xlat
movsb
shll
push
aad
xchg
dec
add
in
lock
xchg
mov
rolb
out
ficoml
jb
xor
insl
sbb
in
add
loop
cli
jg
fcoml
dec
and
aad
stc
push
inc
jp
cmpsl
inc
sub
jb
mov
add
mov
mov
cmp
mov
jp
decb
ljmp
lods
xchg
jle
cli
adc
jecxz
xor
xchg
out
dec
add
xchg
mov
pushf
dec
mov
xor
add
cmc
rol
cmp
insl
jb
inc
cmp
sbb
sahf
mov
enter
idiv
push
sbb
fidivl
mov
pop
xor
fbstp
push
repnz
loopne
cmp
cmp
and
les
or
pop
mov
add
jg
mov
jbe
lahf
rcr
arpl
andl
rclb
adc
fidivl
dec
and
sbb
add
sub
rcrb
int3
sbb
sub
and
xchg
or
mov
test
scas
les
push
mov
test
popf
pop
or
aad
mov
mov
mov
jb
xchg
cmpb
inc
mov
cmpsl
jae
mov
sbb
ds
jo
xor
aas
inc
push
fdivs
insl
sub
xorps
pop
adc
arpl
loopne
lahf
es
inc
xchg
insl
nop
cmpsb
push
cltd
add
hlt
pop
repz
jae
pop
arpl
or
cs
clc
insl
mov
sahf
inc
sahf
adc
shrb
pop
mov
jle
mov
data16
adc
push
int
hlt
push
idiv
sti
push
adc
adc
inc
and
rol
rorl
addb
or
pop
add
inc
xor
pop
or
lea
shlb
add
inc
mov
ret
adc
dec
push
adc
roll
xchg
sbb
dec
mov
testl
pop
and
sahf
clc
xor
mov
push
cs
pusha
add
sub
scas
sub
xchg
int3
jl
mov
dec
push
pushw
arpl
sbb
fbstp
jle
sub
mov
lods
and
pop
xchg
std
aas
push
fbstp
pop
mov
hlt
push
mov
je
inc
jecxz
cmp
xchg
adc
xchg
mov
ljmp
adc
outsb
inc
cmp
mov
andl
mov
sahf
or
inc
aam
xor
xor
aad
arpl
inc
adc
rcrl
pusha
stc
xor
icebp
jbe
jg
mov
dec
adc
mov
and
aam
in
mov
cmp
test
push
out
push
jp
negb
jne
movsl
mov
jae
mov
push
enter
add
dec
mov
inc
inc
imul
gs
jns
arpl
sub
sahf
insl
inc
dec
xchg
inc
jmp
mov
or
aad
add
or
inc
fistpl
out
pop
or
insl
sbb
mov
cli
ja
addr16
fistpll
popf
jg
sbb
sub
mov
cli
movsb
insl
sbb
int3
push
pop
mov
hlt
in
jmp
and
mov
dec
rcll
or
fsub
xchg
cs
mov
shl
xchg
into
cmp
dec
and
pop
push
out
sbb
outsl
mov
mov
sub
stos
int3
imul
and
outsl
pushf
test
and
daa
xchg
cmpsl
adc
cmpsb
shlb
call
addl
fcompl
jne
jne
and
lods
inc
loop
push
cmc
pushf
xchg
arpl
push
ljmp
test
push
bound
dec
mov
pop
addr16
add
and
stos
push
pop
and
sbb
xchg
mov
push
mov
pop
sar
push
dec
dec
loop
add
xor
stos
mov
test
rcl
insl
ret
inc
dec
pop
jne
out
in
jmp
xchg
pop
mov
sbb
cltd
dec
rolb
push
inc
fwait
or
testb
dec
xchg
inc
fistl
or
jp
in
outsb
sbb
js
mov
xor
outsb
adc
gs
clc
cmpsl
dec
or
nop
and
jnp
repnz
xchg
notl
sbb
cmc
dec
sub
es
data16
aaa
dec
ss
shr
xor
cmp
sbb
mov
ret
hlt
pop
lods
and
lcall
pop
and
test
ds
jne
fcompl
push
sbb
pop
lret
inc
jo
jecxz
call
rep
xlat
mov
jmp
notl
and
xorb
pop
ljmp
icebp
mov
repz
mov
inc
sti
push
xorb
mov
push
xor
push
mov
pop
or
push
data16
sbb
inc
jg
lods
mov
pop
dec
pusha
xchg
jge
lcall
das
ret
or
gs
jl
or
aad
inc
inc
or
adc
out
mov
lods
in
mov
scas
mov
insb
iret
loopne
inc
inc
fnsave
adc
mov
or
stos
test
outsb
push
data16
and
sub
and
inc
add
pop
push
and
frstor
fistpl
fstpl
outsl
ret
rcrl
insl
mov
sti
fbstp
outsb
call
popf
adc
bound
mov
cmpsb
dec
push
repz
and
loop
rcpps
mov
xor
out
pop
arpl
and
add
or
push
icebp
adc
inc
sub
xlat
push
pminub
test
cwtl
mov
test
xchg
imul
lret
add
in
add
jmp
aad
or
adc
sub
pop
jb
add
dec
pop
xor
adc
sarl
cld
repnz
movsb
std
test
mov
fiaddl
out
lods
lods
loopne
fmulp
cwtl
pop
cwtl
in
adc
mov
lret
out
xlat
shlb
loop
pushf
cmpb
mov
pop
test
xchg
test
sahf
outsl
push
clc
mov
jmp
cmp
rolb
mov
je
mov
sub
popf
je
add
inc
repnz
sti
jbe
fwait
popf
jg
mov
cltd
mov
imul
adc
cld
ja
mov
cltd
sbb
jmp
inc
filds
adc
jns
insb
xchg
or
imul
adc
push
push
movsb
inc
cli
sbb
push
leave
cmp
cwtl
lock
sub
sub
aam
pop
sahf
outsl
stos
cmc
int
lods
pushf
mov
int
mov
fnstenv
popf
jge
cld
stos
stos
xchg
in
stc
dec
gs
in
test
xchg
push
mov
aam
and
adc
or
pop
je
sbb
and
xchg
pusha
das
movb
push
jmp
test
enter
fs
xchg
ds
scas
lds
iret
addr16
ds
lods
jbe
add
mov
adc
mov
sbb
mov
dec
adc
push
repz
or
stos
icebp
xchg
sub
mov
and
addr16
dec
inc
and
push
daa
xchg
loope
inc
dec
lea
push
test
imul
add
into
enter
mov
inc
mov
shrl
leave
outsb
addl
loope
ds
mov
mov
into
loop
mov
test
jecxz
mov
push
sub
test
cmp
fld
dec
test
cltd
or
icebp
dec
imul
mov
int3
push
jbe
xor
ror
and
fisttpl
push
out
and
sub
lret
jae
fnstenv
rolb
les
rorb
and
mov
ljmp
xor
shll
xchg
insl
aad
out
mov
sub
ljmp
adc
aaa
xchg
adc
sbb
das
xor
cmp
pop
pop
xchg
sub
lcall
or
out
cs
pop
push
or
jne
addr16
push
les
mov
mov
pop
iret
pop
popf
push
imul
push
pop
dec
int3
inc
sbb
ja
rcrl
mov
idivb
jg
dec
cmp
shlb
mov
xchg
adc
fs
inc
jecxz
movsb
in
imul
push
pushf
lock
inc
xor
inc
and
add
adc
mov
mov
outsb
in
add
shl
cmp
lock
cmpsb
and
bound
iret
dec
sbb
jg
inc
pop
xchg
xchg
push
hlt
es
sub
fsubp
popa
jle
rolb
shll
call
xor
leave
sti
decl
and
test
stos
inc
repnz
cltd
dec
cmp
ljmp
jno
cmpsb
inc
fsubrl
sahf
ret
or
aaa
mov
movsl
inc
mov
pop
jg
jno
aas
jnp
pop
in
loope
mov
mov
arpl
xchg
fstpl
push
mov
mov
lcall
fsubrl
mov
push
test
enter
enter
lods
pop
pop
imul
call
arpl
pop
mov
jle
and
shlb
insl
mov
lahf
mov
add
stos
or
jne
lret
lods
dec
out
test
jb
pop
jmp
jbe
bound
pop
mov
sub
es
andb
dec
sub
icebp
popf
pop
cmp
outsl
icebp
repnz
and
push
out
popf
nop
push
fnstenv
ds
and
sbb
push
mov
outsb
notb
loopne
mov
inc
in
jns
int
jmp
inc
rep
enter
jo
or
stos
sahf
add
iret
mov
add
push
xor
test
dec
cs
daa
into
inc
dec
xchg
sbb
add
addr16
out
dec
mov
xor
push
sbb
arpl
pop
push
adc
cld
inc
aas
out
adc
mov
xchg
mov
dec
dec
insb
jp
leave
add
loope,pt
and
jp
insb
les
scas
out
xchg
fsubrl
ss
sbb
jae
dec
push
cli
test
or
and
or
pusha
and
mov
lea
dec
fstpt
jno
rorb
and
mov
addr16
ss
adc
ja
xchg
push
sub
incb
test
ds
add
negb
and
xor
lods
pushf
dec
ss
pop
xchg
arpl
jo
movsl
or
add
addl
cmpsb
gs
inc
add
cmpsl
test
push
mov
adc
cmp
cmpsl
dec
je
popf
inc
lods
push
lcall
mov
lret
pop
push
and
dec
inc
and
and
ss
jecxz
pop
mov
repnz
mov
ficompl
inc
cli
inc
xchg
sbb
lret
aad
cmp
mov
nop
pop
xchg
dec
cmp
or
data16
xor
xor
mov
push
aas
leave
sub
loopne
sbb
xchg
push
lods
lds
mov
mov
adc
shl
sti
insl
stc
pop
mov
aad
cmp
adc
xor
test
add
sbb
xor
xor
out
push
dec
stos
inc
test
lahf
mov
or
xchg
jg
lret
mov
mov
cli
jg
dec
mov
sub
daa
pop
mov
std
cmp
xchg
pop
cmp
fildll
cmpsb
lock
cwtl
inc
pop
xor
jecxz
mov
fs
in
into
iret
test
negb
imul
mov
mov
mov
mov
fidivl
out
popa
pushf
testl
loopne
lods
mov
xchg
xchg
inc
gs
mov
cmc
and
sub
xor
inc
pop
inc
push
test
xchg
shrl
loope
stos
cmpsb
fnstsw
mov
int
adc
pop
push
and
mov
inc
or
imul
mov
push
sbbl
xor
sbb
shl
sahf
outsl
dec
xlat
xor
pop
push
out
or
and
out
push
push
mov
faddl
dec
jp
xchg
push
lods
fwait
jp
xchg
into
ror
mov
clc
mov
jmp
dec
inc
or
and
outsb
xlat
mov
xor
leave
jbe
pop
stos
sbb
push
push
call
mov
mov
sub
arpl
add
mov
add
and
and
lcall
push
movb
movd
mov
xor
pop
addr16
lahf
test
int
sti
lea
out
fldenv
inc
add
mulb
cmpsl
or
cs
sub
mov
scas
and
out
fimull
aas
jmp
cli
mov
adc
cwtl
xchg
mov
sub
cltd
ret
push
lods
jb
push
je
push
test
shll
int
xchg
call
dec
lods
push
sbb
or
js
sub
call
rorb
inc
insb
add
outsl
mov
pop
or
in
scas
test
sub
jb
out
rol
aam
int3
sub
adc
dec
adc
xchg
scas
xor
jmp
loopne
daa
ss
lret
xor
insl
nop
inc
outsl
fbstp
into
ret
hlt
scas
and
pop
cli
sbb
mov
mov
sub
jl
mov
fsubp
push
mulb
dec
pop
cmp
xor
nop
adc
jmp
dec
test
outsl
sti
xchg
fisubl
js
les
pop
jae
scas
movsb
jge
gs
sbb
enter
push
les
les
mov
mov
ret
cmpsl
inc
jb
pusha
jnp
xchg
int
lds
out
mov
fcoms
mov
fldl
inc
sub
out
pop
lahf
out
cmpsl
hlt
dec
outsl
imul
add
mov
cs
mov
and
and
hlt
out
pop
mov
push
loopne
lock
or
out
xor
adc
push
push
outsl
xor
xor
xchg
sub
adc
cmp
das
sbb
out
orb
pop
stos
test
lods
mov
test
mov
push
sub
pop
loope
scas
repz
inc
insb
add
add
mov
les
inc
push
mov
lcall
mov
cmp
lahf
dec
in
jo
mov
or
and
shl
xchg
cld
popa
xor
mov
fnstenv
fdivrl
pushl
push
push
insb
shrl
insb
pop
mov
mov
mov
xor
scas
rcrl
inc
cltd
std
jg
pop
hlt
cmp
sub
test
cmp
mov
push
pop
icebp
xchg
fsubrs
inc
loopne
scas
call
aas
imul
xor
adc
enter
mov
sbb
lds
cmp
lret
adc
inc
arpl
sbb
adc
inc
filds
sar
add
inc
outsl
sub
fistl
lcall
dec
ds
pop
xchg
mov
pop
outsb
cmp
les
es
push
frstor
es
push
dec
inc
push
clc
pmuludq
inc
xor
inc
inc
loopne
inc
fcmovb
stos
ja
sub
inc
cwtl
les
cltd
imul
cmpsl
popf
imull
es
sbb
lds
jnp
mov
push
fsubrs
push
xchg
mov
ret
outsb
jl
push
xchg
cwtl
push
and
jmp
sahf
lods
test
enter
pushf
mov
inc
movsl
or
call
sub
dec
lods
ret
std
sahf
dec
int3
sbb
mov
push
cmp
sub
pop
push
mov
les
sbb
imul
sti
rcl
shll
cld
scas
mov
add
xchg
mov
cltd
xchg
adc
xchg
or
scas
and
mov
jle
imul
add
dec
shrl
pop
jae
sub
popa
stos
inc
jge
insl
push
ds
out
mov
aaa
adc
addr16
cld
inc
sub
jp
xchg
cmp
bnd
pop
in
repz
push
cmp
xchg
adc
repnz
call
xchg
sbb
jno
cmp
cmpsl
ret
add
bound
push
testl
pusha
arpl
jb
mov
push
nop
push
nop
inc
dec
filds
cmpsl
fldenvs
mov
rorb
test
es
push
unpckhps
or
ret
jno
pop
arpl
push
stc
xor
repz
in
dec
or
lock
movsw
mov
imul
cmpsb
pop
adc
sbb
pop
xchg
loop
pop
lock
lock
push
pop
ja
aas
push
xchg
insl
loope
int
cmp
jns
add
xchg
mov
enter
orb
mov
nop
fdivrl
inc
lahf
inc
aaa
push
jbe
fdivp
push
jae
dec
sub
mov
cmp
stos
aad
mov
fsubl
bound
or
add
sbb
insl
add
push
cwtl
lods
roll
jo
mov
jl
stos
inc
pop
decl
push
mov
lods
push
add
aam
sub
jmp
hlt
fildll
jmp
mov
mov
push
mov
sbb
mov
outsb
aad
insl
stc
pushf
pop
jno
enter
inc
fs
pop
push
pop
inc
scas
cmp
loope
ja
jg
out
mov
mov
out
in
ljmp
mov
or
das
cmpsb
jp
adc
lods
lods
int
xchg
inc
xor
int
popa
repz
jb
mov
rolb
sarb
lods
out
cld
fwait
je
xchg
cmpsb
push
pop
stos
or
pop
cli
ret
sub
sub
cmc
cmp
cmp
xchg
jae
push
mov
sbb
mov
loope
cmpsb
cmp
adc
sbb
push
pop
negl
sbbl
leave
movsl
push
ja
dec
sub
jl
pop
push
hlt
dec
jb
xchg
cmp
cmpsl
inc
jbe
frstor
push
pop
sbb
andb
add
pop
cmp
sti
repnz
jae
notb
test
and
mov
cmp
mov
enter
loope
jnp
jl
push
mov
cmpl
dec
sti
jg
fcmovb
sbb
add
fisubrs
daa
outsl
lods
inc
and
cmpl
jmp
jg
aad
cmp
call
sbb
int
dec
fbstp
xchg
sub
sbb
mov
mov
and
addr16
addr16
dec
push
outsl
dec
mov
aas
xor
dec
sub
ljmp
cmp
sbb
int
push
fs
add
mov
cmc
pop
frstor
or
aaa
xor
int
cli
sbb
cmpl
xor
and
leave
lds
inc
adc
mov
push
ficoml
dec
mov
sahf
mulb
cli
bound
gs
adc
adc
nop
push
mov
jno
rolb
dec
loope
inc
mov
add
pop
xor
pop
mov
xchg
in
popf
xor
scas
cmpsb
jge
add
or
mov
mov
insb
fildll
inc
adc
sbb
dec
dec
jp
insl
sub
call
inc
mov
dec
loopne
jl
sbb
mov
cwtl
adc
pop
xchg
cmp
test
push
fisubl
fstpt
cmp
fldenv
lods
xor
mov
and
arpl
jne
cmp
movsl
dec
ficomps
lahf
push
adcb
lcall
or
sbb
or
lds
jecxz
test
xor
inc
ja
and
cmpsl
ror
inc
scas
dec
pop
faddl
dec
cmp
std
pop
push
push
mov
jbe
add
iret
xor
in
add
fldl
js
mov
hlt
jbe
stos
dec
sbbl
push
mov
int
clc
popf
mov
sbb
hlt
push
loop
push
lret
pop
mov
scas
loopne
lods
fldl
in
pop
pop
add
pop
xor
int
sbb
push
mov
cli
mov
ljmp
pop
jne
cmp
fs
sbb
and
fildll
inc
fcomps
shlb
testb
jno
lds
scas
mov
rclb
mov
jae
push
and
xchg
leave
mov
mov
addr16
mov
ficoml
mov
test
bound
jno
mov
sbb
lock
into
pop
xchg
sub
adc
sbb
insb
icebp
xlat
aas
test
not
adc
mov
jecxz
xchg
imul
jbe
fs
sub
sbb
nop
fistpll
scas
lods
out
mov
push
mov
sbb
cmc
leave
push
xlat
icebp
mov
mov
addr16
out
sti
ret
repz
es
add
jno
fs
cmp
insl
dec
sbb
add
jne
out
test
ret
outsl
jl
ficomps
dec
or
pop
cmpsb
jge
push
jp
pop
out
add
pop
lods
xor
fldl
enter
leave
ss
fucomip
mov
ss
into
pop
lret
cmp
and
mov
test
dec
rcll
push
mov
pop
push
ss
jae
adc
sub
pop
cmp
adc
mov
lods
adc
pop
xor
push
mov
add
xlat
cmp
jl
or
inc
sub
dec
or
gs
mov
mov
rcrb
jle
cmpsl
jecxz
cs
ljmp
pop
inc
xor
in
or
push
sahf
push
add
pushf
insl
mov
or
xchg
xchg
imul
cmp
xchg
dec
insb
xor
add
cmp
cltd
clc
lods
push
cmp
incl
lods
das
bound
popl
hlt
xor
mov
jmp
fbstp
cmp
loop
movl
std
shll
mov
mov
dec
popl
dec
pop
adc
loop
jne
and
lea
mov
subl
xor
lds
pop
adc
cld
xchg
xor
dec
inc
or
cmp
imul
jecxz
nop
pop
test
aam
jle
test
cmp
clc
xchg
sub
pop
imul
mov
pop
cmp
and
push
adc
dec
cmp
jae
sbb
call
ret
fistpll
out
adc
xchg
sub
jb
imul
inc
or
inc
inc
jae
dec
dec
push
xlat
decl
negl
mov
xchg
push
addb
mov
lahf
sub
mov
and
and
lds
addr16
pop
jecxz
aad
cmpsb
mov
push
subl
fsubrs
fnstenv
pusha
fwait
bound
adcb
int3
call
jne
adcb
xchg
das
test
add
aaa
mov
cmp
pop
bound
pushl
gs
xchg
das
mov
mov
mov
dec
rcrb
cmp
push
shl
jns
es
stos
add
cmpb
pop
pop
adc
in
leave
jle
test
dec
arpl
stos
mov
in
adc
cmpsb
sub
mov
das
add
mov
cmpb
es
dec
xchg
inc
scas
cmp
dec
ds
hlt
mov
in
insb
push
in
or
mov
arpl
pop
mov
cmpsl
std
divb
std
sub
ret
mov
inc
pop
lahf
push
pop
jmp
rorl
lea
mov
insb
enter
mov
ret
sub
and
pop
movsl
mulb
shll
push
push
aam
jp
nop
bt
stos
inc
inc
popa
pop
lock
dec
cmp
into
mov
jb
mov
mov
push
jmp
test
mov
pop
insl
dec
rcll
ja
test
sub
mov
mov
fpatan
sub
sub
cmpsl
xchg
sub
or
pop
stos
lahf
call
decl
push
shr
fldcw
push
dec
mov
dec
aaa
int3
fisubs
cmp
adc
xor
cwtl
call
add
mov
outsb
adc
aaa
inc
mov
and
rolb
push
cltd
subl
mov
std
nop
jecxz
sarb
sub
rcr
inc
adc
cmp
lock
test
adc
xchg
sub
mov
mov
flds
pop
test
xchg
mov
adc
shrl
mov
pop
loopne
stos
xchg
sbb
loop
mov
xchg
outsl
jecxz
das
fiadds
push
lods
add
jp
mov
gs
outsb
std
cs
test
imul
imul
jl
cmp
add
xchg
rol
in
out
rsm
mov
shr
imul
sbb
add
clc
ds
push
sbb
or
popa
into
lea
and
jp
out
and
mov
shrl
jle
out
repz
or
jne
test
dec
add
iret
push
and
jb
mov
jbe
push
pop
xor
cmp
imul
lds
mov
repnz
es
movsl
cmp
pushf
cwtl
repnz
push
add
fcomip
jge
aad
jmp
xor
mov
jg
int
mov
sub
shrb
in
xchg
mov
jecxz,pn
das
scas
xchg
test
int
push
sbb
dec
add
in
jl
xor
popf
jnp
add
int3
and
xor
cmpsl
fwait
aas
nop
arpl
es
loopne
ret
pop
add
jg
sbb
data16
cmp
mov
std
ds
in
adc
lcall
loop
lock
js
in
lret
xor
out
stos
fistpll
push
push
jne
repz
dec
sbb
mov
mov
add
mov
addr16
pop
cltd
test
add
ss
arpl
imul
adc
scas
lea
push
lcall
push
out
int
nop
sub
push
xchg
push
jle
xor
ficoms
outsb
jecxz
pop
dec
enter
stos
imul
push
icebp
jle
pusha
js
or
outsl
push
negb
out
adc
divb
mov
imul
stos
jbe
test
arpl
popf
testl
jle
call
push
jbe
iret
pop
stos
mov
insl
pop
mov
xor
jnp
dec
and
or
test
in
dec
jecxz
ret
jb
mov
insb
out
xchg
add
pop
and
ss
movsb
stos
mov
mov
cmp
cli
inc
mov
cmp
cmc
ss
rcrb
addr16
test
xchg
xchg
ja
movsb
test
mov
sub
imul
movsb
fsubr
mov
dec
scas
and
gs
iret
xor
fwait
mov
fildl
jbe
mov
lret
je
notb
leave
cmp
fs
fildl
xchg
push
jecxz
insb
sub
sub
nop
mov
jg
adc
cmovs
lods
dec
outsl
cli
cltd
or
mov
sbb
jae
adc
fists
cmpsl
adc
sbb
pop
xor
and
inc
fnstenv
push
mov
jmp
inc
mov
into
sbb
xor
sub
sti
scas
xor
push
notl
adc
jge
and
movsb
call
in
adc
add
add
in
sub
icebp
movsb
fbld
ljmp
adc
jl
sahf
test
hlt
dec
mov
popf
fwait
push
hlt
adc
shrb
fnstenvs
xchg
outsl
xlat
push
pushf
dec
inc
jnp
pop
mov
mov
jecxz
lea
fsubrs
test
pop
jbe
fisubs
pushf
scas
or
pop
jae
mov
adc
insb
nop
stos
push
mov
aad
std
or
pop
push
dec
mov
ja
out
and
lahf
dec
push
xor
cmp
xlat
dec
mov
jecxz
popf
mov
lds
rclb
iret
ss
cmc
mov
adc
push
sbb
xchg
lcall
mov
add
lods
cwtl
add
sarb
test
sbb
dec
or
aas
jae
fsts
mov
mov
addb
sub
xor
cld
int
in
sub
pop
jnp
fisubs
push
push
insb
dec
pop
stos
xchg
mov
or
mov
pop
js
cli
call
in
inc
fcomps
lret
pop
stos
mov
jo
mov
cld
pop
or
stos
fldcw
add
mov
cmpsb
mov
inc
pop
add
jns
and
out
fnsetpm(287
in
fmuls
dec
stos
and
cltd
jl
int3
dec
cmp
xchg
pop
mov
jnp
mov
ret
mov
int
pop
imul
push
pop
roll
jbe
pop
cmpsb
mov
sarl
cmp
or
push
imul
sub
cmp
jmp
pop
cmp
xchg
sbb
pop
xor
xor
inc
insb
sub
push
jb
push
loopne
xor
sarb
mov
mov
out
das
pop
cld
pop
push
jl
add
pop
pop
test
mov
mov
frstor
add
out
mov
int
mov
pop
mov
sub
gs
mov
jb
leave
push
xor
xor
jb
xor
stos
mov
call
or
inc
push
mov
jb
sbb
cltd
lods
test
fistpll
jo
in
sbb
xchg
std
fistpl
clc
push
xchg
sub
jg
test
cmp
pushf
and
xchg
fldenvs
or
sarb
sbb
rcrb
fucomi
mov
mov
add
psrlw
push
mov
fisubl
sbb
mov
inc
data16
mov
mov
je
push
fiadds
push
sub
popa
and
fstpl
cli
xchg
sbb
mov
mov
int
outsb
mov
fistps
or
in
mov
or
add
or
jmp
into
cmc
jge
int
fwait
insb
and
pop
xchg
popa
jp
test
loop
sub
push
mov
cmp
mov
dec
lret
es
daa
sub
push
cmc
mov
scas
add
adc
fnstcw
fidivs
jae
in
inc
sbb
ja
out
pop
sub
inc
inc
xor
icebp
push
xlat
aas
add
add
cmpsb
leave
mov
and
fldl
cmp
fwait
das
and
sbb
or
mov
mov
into
stos
fwait
or
xchg
xchg
orb
cmp
or
lcall
stos
mov
mov
mov
pop
bound
in
popa
xchg
nop
jne
pop
hlt
sbb
and
in
xchg
dec
fadd
nop
mulb
lds
insl
std
push
call
cmpsl
push
mov
les
fidivrl
cmpsb
stos
jecxz
xchg
sub
inc
pop
or
lahf
repz
sub
push
push
stc
inc
xor
fistps
iret
mov
mov
jno
mov
sbb
mov
sbb
mov
cmp
mov
insb
int
sub
incb
imul
lret
cmc
xor
sbb
inc
push
jl
xchg
xchg
push
les
xchg
sub
xor
xchg
dec
vmovaps
dec
popa
iret
arpl
xchg
pop
fnstenv
das
xchg
jne
imul
outsl
scas
sbb
outsb
pop
nop
jmp
xchg
xor
inc
loop
cmp
sub
js
lret
push
adc
in
inc
aas
sub
enter
mov
mov
test
mov
adc
cmp
mov
int
jb
addr16
sub
jecxz
mov
lods
cmp
lods
mov
push
out
push
mov
les
in
popf
push
bound
into
lods
popf
xor
cld
cmpsl
cmp
xchg
inc
int3
push
mov
test
das
adc
inc
orb
lcall
jmp
mov
pop
movsl
ret
shlb
mov
pop
ret
or
aaa
stos
nop
mov
inc
fcomp
mov
loop
insb
and
push
inc
lcall
jmp
negb
push
cmp
out
and
xchg
adc
sbb
mov
std
cwtl
rcl
test
out
inc
pop
das
sub
fldenv
pop
jg
add
stos
cmc
dec
stos
jmp
sbb
shll
les
push
out
pop
sbbl
adc
xor
cltd
daa
clc
js
jp
pop
mov
push
xchg
insb
shll
in
jp
pop
adc
mov
jns
sub
imul
xchg
xchg
dec
mov
out
xchg
and
mov
loop
xchg
sti
push
sub
cmp
enter
cmp
xor
jl
inc
mov
sahf
xor
cmc
inc
cmp
aam
add
out
push
imul
mov
xchg
popa
aad
jno
push
pop
fdivl
in
gs
mov
mov
and
sub
xchg
std
xchg
leave
out
push
pop
arpl
loope
inc
loope
ljmp
aad
dec
or
inc
pop
xchg
mov
mov
mov
jnp
mov
outsb
loope
pop
cltd
push
xor
jmp
lcall
push
push
xchg
mov
mov
cld
cs
in
or
and
jecxz
xor
repz
mov
xchg
add
ss
cs
jecxz
xchg
repz
jae
imul
out
push
fcompl
cli
xchg
ljmp
loopne
pop
sbb
imul
test
add
cli
jg
cmp
xchg
rcr
aad
xchg
mov
lahf
in
xchg
mov
pop
cmp
insb
sbb
pusha
or
or
int
adc
jne
mov
push
push
test
test
lods
inc
or
and
mov
push
fld
push
xchg
sub
mov
jle
shrl
pop
mov
lret
ret
sub
lods
sub
mov
pop
das
mov
add
xor
data16
jmp
or
sbb
dec
fiaddl
inc
dec
add
mov
shr
test
xor
into
rcl
jns
pop
test
loop
jo
mov
fsubs
mov
lret
testl
cmpsb
imul
pop
outsl
dec
movsb
sbb
mov
pop
sahf
xchg
enter
gs
jb
imul
jno
or
dec
dec
push
jnp
mov
push
xchg
mov
stos
mov
mov
jg
stos
aam
les
cld
dec
jecxz
and
pusha
dec
out
mov
pusha
imull
sub
lods
testb
std
ret
xchg
test
int3
pop
push
mov
add
inc
loopne
inc
int
jbe
in
jnp
sbb
orl
int3
mov
and
cmp
rol
fs
or
adc
mov
xchg
and
in
mov
push
inc
inc
mov
push
add
push
in
aad
and
popf
movsl
or
popa
mulb
out
inc
add
mov
jnp
cmc
cmp
lcall
icebp
pop
sbb
inc
fcmovu
out
mov
fldt
push
add
loope
jmp
das
xchg
dec
stos
cwtl
es
call
xchg
jne
aam
add
movsl
lds
out
ret
xchg
pop
test
and
je
add
sbbl
jno
movsl
sti
mov
lret
push
sti
or
adc
sbb
cmpsl
out
xor
lret
mov
push
das
mov
lea
push
aaa
ret
in
in
insl
xchg
pop
and
mov
pop
mov
daa
pop
cmp
outsb
sub
mov
fbstp
jns
inc
arpl
add
cmp
pop
mov
fs
mov
pop
negl
and
lret
xchg
addr16
je
movd
popa
jns
adc
popf
adc
and
dec
mov
mov
push
in
sbb
cmp
xorb
cmp
jl
test
ss
mov
xchg
adc
pop
add
nop
clc
cwtl
mov
out
js
stos
adc
out
jb
xor
test
fistps
mov
and
outsl
jae
and
xchg
mov
ret
sarl
stos
in
or
fnstsw
adc
lcall
pusha
test
out
jle
lock
push
dec
mov
jo
xchg
pop
jbe
addl
mov
testb
std
lds
dec
push
xchg
sbb
test
jmp
sahf
gs
mov
cld
mov
movsb
sbb
push
dec
cmpsl
ja
add
xchg
and
jbe
mov
aaa
jecxz
std
cwtl
mov
sub
clc
push
nop
mov
sbb
adc
aaa
into
pop
in
xor
lahf
notl
and
dec
rolb
mov
inc
fildl
mov
or
bound
mov
push
mov
mov
jb
sbb
sahf
daa
mov
les
xor
fnstenv
dec
test
xor
in
in
movsb
cmp
xor
pop
data16
and
mov
out
cmpsb
sub
sbb
jbe
mov
test
cwtl
push
call
cmpsb
ljmp
call
mov
push
imul
ja
jnp,pn
adc
mov
in
dec
cld
sub
sbb
mov
cmp
ret
scas
dec
scas
lcall
mov
in
inc
ficomps
xchg
xor
repnz
lcall
out
and
push
mov
sarl
dec
lods
test
int3
orb
jp
mov
imul
push
sbb
xchg
call
jp
inc
sbb
adc
xor
dec
stos
jge
and
mov
mov
fisttpl
arpl
jge
mov
pushf
lods
lods
lret
imul
lret
xor
pusha
cli
out
mov
nop
mov
xchg
push
dec
inc
out
xor
xor
cmp
sbb
dec
nop
gs
xchg
mov
add
inc
aas
pop
sbb
add
int
std
out
dec
lahf
pop
push
inc
fstps
cmc
fnstenv
movsl
mov
or
insl
jnp
divl
xchg
mov
sbb
adc
ja
lret
xor
xchg
jp
rorl
iret
mov
ja
push
ljmp
mov
int3
insb
inc
mov
fildl
outsl
insl
mov
ja
pop
into
frstor
test
iret
gs
pop
fwait
dec
lret
arpl
mov
jmp
push
or
push
cmp
add
mov
fdivrs
and
fimull
mov
das
call
leave
call
pop
sub
or
test
sub
or
pop
jp
mov
imul
inc
mov
pop
add
fidivrs
dec
sbb
dec
loopne
mov
call
xor
or
push
or
dec
mov
jnp
jecxz
fistpl
data16
subl
add
xchg
pop
sbb
cmpsb
jmp
jb
and
push
push
lea
mov
adc
mov
movsl
or
xor
sub
leave
push
or
jg
push
jecxz
mov
pop
fsubl
aad
fnsave
mov
insb
sarl
jmp
mov
pusha
rcrb
lea
and
ss
push
mov
jge
add
jns
test
push
fistpll
out
push
sbb
aaa
mov
and
out
fisubrl
sub
imul
testl
xchg
insl
or
and
sbb
xchg
jne
adc
ljmp
cltd
push
adc
cltd
and
dec
lcall
in
cmc
pop
dec
js
sbb
sahf
xchg
das
test
xor
je
ret
repnz
xorl
insl
mov
pop
jne
movsl
jno
xlat
push
fwait
xor
das
or
aam
int
dec
pop
jl
ds
and
cmp
outsb
shrb
lds
outsb
lret
aam
adc
outsb
mov
ret
cmc
sbb
sbb
inc
fwait
out
movsl
mov
lret
adc
jmp
int3
sarb
mov
pushf
fsubr
lock
aad
lea
push
ret
loopne
inc
dec
xor
sti
lea
mov
fcmovu
sub
int3
sbb
push
cmpsb
mov
and
jmp
cmc
push
movsw
cmp
das
cmp
pusha
arpl
ret
and
sbb
mov
and
ja
outsb
pop
sbb
shlb
pop
shrl
and
gs
iret
push
xchg
mov
out
jo
jns
mov
xchg
cs
lods
das
push
jae
sti
stc
inc
popf
lods
mov
test
jmp
jecxz
ret
sub
xchg
flds
pop
stc
cs
sbb
push
dec
js
js
loop
std
xor
pop
outsl
mov
loope
dec
add
lea
out
aas
pushf
jle
jmp
or
cmp
jae
push
jge
sbb
insl
mov
cwtl
mov
cmp
xor
cmp
lret
bound
pusha
push
jmp
lods
inc
jo
jb
pop
mov
xchg
dec
mov
or
inc
push
pop
add
xor
inc
fdivs
outsl
dec
lock
ljmp
call
pop
fstpt
jge
xchg
push
sbb
mov
ret
mov
sbb
es
mov
imul
pop
leave
sbbb
mov
inc
sub
gs
cmp
addr16
xorl
mov
out
ret
and
pop
fnstcw
loope
std
xchg
fsubp
lret
jae
loopw
cmpsb
dec
pushf
pop
lock
cs
jg
pop
xchg
out
or
mov
push
jge
dec
cmpsl
nop
jnp
stos
pop
aam
adc
and
mov
push
sub
aam
sub
clc
stos
xchg
ds
pop
sahf
scas
xchg
ror
xor
add
mov
dec
jno
inc
ret
sub
sbbl
gs
mov
add
pop
pop
cmp
pop
test
cmpsb
aam
sbb
lret
sbb
adc
in
rol
mov
mov
pop
xchg
leave
pop
push
hlt
cmp
popf
cs
mov
jb
push
loop
mov
or
jp
xchg
and
inc
dec
lds
xchg
push
add
daa
test
sbb
icebp
or
pop
dec
fwait
shlb
jg
cmovg
negl
out
stc
dec
pop
fld
insl
inc
cmp
pop
leave
je
lret
cld
push
clc
sahf
cs
mov
lcall
je
mov
mov
lret
jmp
xchg
pop
adc
adc
pop
fdivs
dec
rorb
call
sbb
mov
fdiv
int3
fbld
jae
repnz
fs
sub
roll
inc
dec
jnp
mov
out
push
dec
stc
rol
aaa
aad
in
fcmovnbe
mov
dec
out
shl
loope
rcrl
in
popa
call
loopne
fsubrs
push
add
loop
mov
cld
xor
or
ljmp
adc
ror
lods
xchg
in
mov
inc
mov
pop
icebp
adc
out
push
ret
scas
xor
add
fsubrs
out
stos
out
xchg
jl
xchg
inc
xchg
jmp
push
jns
add
stos
cmpsl
out
shlb
dec
push
inc
sahf
or
add
inc
clc
push
icebp
adc
je
mov
cmpsb
pop
dec
lahf
std
pop
repnz
xchg
xor
loope
inc
lods
jb
push
inc
xchg
mov
sub
dec
insl
call
pop
pop
xlat
jp
or
mov
xchg
sub
xchg
dec
popf
test
in
cmp
insb
jle
add
cmp
ja
insb
rclb
inc
mov
adc
push
arpl
mov
aam
or
or
lock
sub
popf
roll
test
mov
std
aaa
fisttps
movsb
cmp
xchg
aaa
push
idivl
fs
sahf
xor
sbb
push
and
sub
jge
jno
jo
push
out
xchg
sarb
mov
and
cmc
dec
pop
aam
add
mov
push
jo
testl
stc
adc
dec
mov
dec
mov
faddp
fisttpll
lcall
inc
xchg
fadd
dec
aad
and
push
sub
sbb
gs
mov
pop
test
cmp
inc
in
loop
outsb
xor
xor
rclb
add
and
push
jecxz
fiadds
dec
push
ret
mov
popa
ror
mov
cltd
test
insl
adc
jbe
pop
mov
add
das
sarl
movsb
lahf
cmpsb
sbb
sbb
rclb
cmp
sub
fstpl
and
add
pop
icebp
jp
jl
push
dec
and
nop
insl
xchg
xor
xor
adc
cld
or
aam
test
bound
lret
mov
push
cmp
nop
inc
fcmovb
aad
sub
mov
adc
xor
sbb
mov
adcb
mov
push
loopne
xchg
ja
femms
bound
jmp
dec
adcb
out
push
xchg
out
sub
pop
inc
push
loope
fwait
out
dec
xor
cmp
jmp
add
fcmovnbe
loopne
add
cmovne
pop
lahf
or
add
sub
cmpsb
jbe
daa
cmp
and
rorl
xchg
inc
in
mov
cmpsl
cwtl
xor
testl
push
mov
push
rorb
outsb
xorb
popf
inc
inc
outsl
sti
aas
fcoms
or
outsb
cmp
fwait
fwait
xchg
das
and
daa
mov
imul
ret
cmpsb
xchg
sbbl
mov
mov
imul
dec
inc
mov
push
or
inc
stos
jp
push
mov
imul
enter
push
fsub
imull
adc
jb
leave
sub
mov
xchg
pop
cmc
adc
les
stos
xor
sub
ret
cld
cli
mov
fldl
test
jecxz
jae
gs
sub
aas
insb
insb
jbe
fcoms
adc
arpl
popa
aas
movsb
xchg
fdiv
inc
mov
jmp
jmp
or
sti
pop
insb
enter
add
push
or
or
pop
mov
sarb
test
sarl
sub
xor
cmp
inc
xlat
jle
dec
inc
aam
push
cli
push
js
and
je
je
or
lds
fucomp
imul
arpl
or
sbb
pop
test
mov
jge
or
and
mov
shll
inc
pop
arpl
int3
jnp
xor
inc
mov
loopne
movsl
mov
insb
call
sbb
push
stos
lea
iret
mov
lock
test
add
push
xor
fisubl
movsl
icebp
cld
jnp
push
jb
xchg
ljmp
cmp
cs
or
jle
addr16
dec
loope
add
cmp
dec
ljmp
inc
jecxz
clc
lret
add
call
jmp
enter
cmp
cmpsl
cmpsl
and
dec
mov
arpl
leave
dec
ficoml
cli
inc
xchg
ss
test
test
jle
adc
das
popa
leave
lahf
data16
dec
iret
jns
jmp
xchg
xor
cmpsl
xor
xorb
popf
inc
sbb
mov
xor
bound
test
sub
jae
xor
mov
call
lcall
xchg
xchg
test
lds
jg
lret
bound
gs
pop
and
popf
clc
std
jmp
mov
mov
insb
mov
pusha
ljmp
arpl
vandnps
pop
filds
shrb
sbb
xor
cmp
or
lods
pop
outsb
cmp
push
mov
shrb
dec
add
add
xlat
sub
xor
pop
mov
jns
sub
pop
mov
add
jns
xchg
sub
mov
cmp
movsl
push
mov
mov
cltd
int
dec
and
jl
inc
and
inc
loopne
lds
xchg
sub
sub
lock
dec
je
popa
sub
and
aaa
xchg
adc
inc
dec
add
icebp
cmpsl
fiadds
xchg
fdivl
jae
jb
mulb
adc
adc
pushf
and
lea
mov
mov
ljmp
jno
sub
stos
fyl2x
out
pop
mov
subl
and
shlb
pop
adc
xchg
js
adc
mov
sbb
add
xor
cmpsl
mov
push
sub
pop
mov
std
xchg
xchg
int
mov
or
cli
and
xor
or
cmp
int3
mov
cltd
jo
cmpsl
popa
jno
xchg
out
or
add
ds
push
sbbb
shlb
in
pop
push
inc
sbb
stos
mulb
fbld
cmpsl
dec
cmp
dec
stos
dec
repnz
dec
shll
xorl
aaa
aad
cmp
stc
jns
sbb
leave
adc
leave
push
or
sub
mov
mov
into
mov
sarb
push
lret
mov
cmp
pop
xchg
xchg
add
test
push
inc
es
pushf
jge
sti
xchg
jne
dec
and
insb
mov
jnp
and
cmp
mov
xor
and
or
mov
xchg
scas
or
jmp
or
add
je
mov
cmp
add
jle
int3
inc
es
jge
push
add
and
shll
fwait
out
insb
das
adc
inc
sbb
mov
mov
rcll
xchg
jae
xchg
roll
addb
repz
adc
mov
cmpsb
pop
jg
dec
lds
xchg
into
or
jns
dec
icebp
mov
imul
pusha
xchg
mov
xchg
out
pop
cmp
out
push
pop
add
adc
enter
rorb
xor
mov
dec
mov
or
push
inc
cmp
mov
pop
push
imul
imul
adc
pop
lret
jnp
lret
popa
repnz
sbb
xchg
pusha
clc
iret
or
jae
sbb
inc
fs
idivl
mov
jp
pop
nop
das
jg
rcrl
adc
pop
imul
and
div
sbb
push
xchg
arpl
dec
dec
xor
cmp
inc
addr16
lcall
in
orl
mov
andb
adc
pop
cld
shll
in
xor
or
inc
mov
push
xchg
cmpsl
into
ja
insl
cmp
dec
and
sbb
ret
mov
xor
push
jo
andl
mov
in
popa
shll
sahf
jo
sbb
lahf
fidivrs
subb
lds
cld
add
aad
adc
insb
aad
imul
push
cli
sbb
and
lock
fisttps
pop
jo
in
jae
lcall
xor
rcrb
fildl
insb
add
movsl
or
sub
xlat
push
andb
int3
addr16
outsl
lods
mov
jb
scas
test
loope
stos
push
mov
icebp
int3
rcrl
outsl
mov
addl
cltd
insb
jnp
adc
and
hlt
adc
outsl
jge
pop
push
movsl
mov
stc
inc
div
jg
or
push
or
mov
mov
loopne
fstps
jnp
sbb
cmc
nop
and
sbb
add
std
push
xor
mov
jle
sub
inc
mov
shll
xchg
dec
sub
jg
mov
cltd
dec
mov
aas
push
call
or
mov
push
and
mov
sbbl
xchg
mov
pop
aaa
push
sbbl
enter
and
clc
ficoml
dec
xor
xchg
fnstcw
mov
clc
daa
cmp
insb
mov
xchg
jae
xor
lahf
pop
or
mov
cmp
mov
icebp
pop
filds
cmp
hlt
jne
add
sarl
inc
lock
xchg
mov
aad
repnz
sbb
sub
fwait
cmp
lret
mov
xorl
mov
scas
stos
push
popf
adcb
addl
daa
cmp
mov
or
mov
cmp
js
mov
mov
push
sti
pusha
or
shrl
lods
cmpsb
xor
push
gs
test
lahf
mov
xor
sub
mov
test
mov
dec
sbb
jbe
or
mov
dec
push
jo
xchg
daa
jnp
lods
aad
nop
dec
mov
add
movsl
dec
dec
mov
push
dec
lods
hlt
push
sub
ret
aad
mov
fimull
mov
lahf
in
inc
cltd
test
push
sbb
mov
leave
dec
insb
inc
lods
in
adc
sub
xor
sub
scas
sub
or
adc
dec
xchg
xor
pop
loope,pn
in
popl
movsl
jl
mov
aad
sub
mov
sbb
dec
pop
rcll
xchg
aad
xchg
ret
ds
iret
mov
data16
push
or
ret
test
clc
shrl
or
enter
decl
mov
cs
sub
fs
arpl
mov
mov
dec
push
lea
sbb
push
ja
je
inc
loope
xchg
pop
rcl
push
stos
or
sub
xor
mov
push
mov
fistps
or
aas
dec
movsb
jg
adc
mov
add
pushf
mov
xchg
test
cmp
ja
xor
loop
xchg
dec
sub
lods
stos
scas
sub
in
aam
mov
xchg
imul
xchg
adc
repnz
loope
rorb
or
mov
mov
outsl
jmp
in
mov
adc
push
or
insb
pusha
push
lahf
sub
or
gs
xor
insb
fnstsw
es
je
dec
pusha
repnz
adc
xor
and
and
mov
xchg
sahf
shlb
push
mov
inc
fcomps
mov
dec
int3
loopne
hlt
mov
or
pop
dec
pop
dec
and
jae
jno
imul
cmc
sti
or
add
gs
or
mov
js
inc
fstpl
or
mov
fdivrs
pop
pop
mov
dec
dec
in
jp
lock
push
je
insl
pop
pop
dec
in
push
hlt
aam
mov
lea
sub
data16
pop
jg
scas
jg
stos
mov
xchg
and
out
std
ss
cmp
push
push
cmp
movsb
and
lock
sbb
ret
shrb
mov
testl
cmpsl
dec
shl
test
mov
test
lret
sub
dec
into
ficoml
add
lods
xchg
and
xor
jne
xlat
sub
and
xchg
jb
fldenv
push
call
iret
jmp
pop
cld
sbb
sub
jmp
imull
sti
notb
xlat
repz
or
fisttpll
sub
imul
aas
dec
mov
and
sub
cmp
mov
cmpl
into
and
bnd
mov
je
test
repz
negl
mov
cmp
rcrb
jo
and
lret
xchg
cmp
das
call
and
adc
jmp
push
popa
jmp
cmp
mov
fidivrl
or
sub
sbb
ror
and
adc
jne
mov
pop
inc
push
cltd
inc
in
sbb
pop
sub
push
mov
fldcw
lock
push
inc
es
bound
pop
mov
test
pop
out
adc
cmp
mov
lds
repnz
je
rcrl
cltd
inc
mov
imul
es
and
xor
add
mov
cs
push
int
out
xor
or
das
mov
cmp
sbb
mov
ss
xchg
mov
pop
imull
scas
sti
jge
add
mov
or
loop
rcrb
mov
mov
dec
in
sub
sti
xchg
mov
mov
add
jne
mov
inc
mov
or
jl
fistpl
ss
rolb
jge
lahf
ret
rcr
jecxz
lret
out
jo
pop
aaa
dec
add
inc
mov
dec
loopne
push
shlb
andl
mov
dec
lods
ljmp
insb
add
fisubrl
pop
push
lods
movsb
loopne
adc
cmpsl
test
cwtl
rcr
sti
or
mov
fisttps
push
jecxz
out
cmc
scas
inc
jmp
dec
dec
fisubrl
ret
fmul
iret
push
insb
pushf
xor
jl
stos
insb
dec
adc
mov
fdivl
xor
mov
cmp
fcomps
pop
test
xchg
cmp
divb
jl
insl
pop
and
jp
mov
fnsave
repnz
arpl
in
jmp
cmp
push
jb
daa
push
pop
scas
lcall
mov
mov
mov
call
jmp
pop
and
mov
jge
rcll
sub
mov
fildll
orb
data16
jp
mov
ror
daa
dec
hlt
mov
inc
outsb
insl
int3
imul
jmp
les
mov
in
jmp
push
cwtl
mov
idivl
int
and
mov
cmp
xchg
pop
in
icebp
sbb
sbbl
or
mov
cmp
lret
push
or
xlat
pop
int3
enter
add
jne
mov
dec
icebp
rcr
xchg
into
in
movsb
dec
lret
aad
cmpsl
dec
icebp
mov
in
xchg
data16
xchg
popa
xor
xor
xor
sbbb
inc
dec
lret
push
scas
fidivl
aaa
or
push
sbb
push
or
imul
icebp
inc
add
cmp
pop
stos
andl
imul
scas
jmp
jbe
adc
int3
xor
nop
xor
pop
pushf
jecxz
push
sub
dec
cmpsb
div
loopne
cwtl
mov
insl
lcall
orb
sbb
hlt
shrb
mov
popa
iret
add
lret
ret
test
pop
cmp
and
mov
xchg
add
pop
pusha
mov
lahf
testl
sti
push
mov
imul
push
test
sub
pushf
mov
mov
lea
adc
clc
insl
les
or
inc
fsubrs
loope
mov
outsb
add
mov
test
xor
xor
aam
pop
lods
jo
hlt
pop
loop
xchg
push
scas
jnp
or
data16
shlb
cltd
mov
xlat
push
les
inc
shrl
and
adc
push
lock
jge
imul
repz
rorl
xlat
add
push
lahf
or
mov
cmp
mov
adc
mov
pop
repnz
jns
cld
mov
jg
in
ret
fldl
imul
dec
push
lahf
cmpsb
shll
inc
adc
and
cli
lret
jge
es
aaa
fists
inc
pop
arpl
or
dec
icebp
pop
inc
and
cmc
mov
sbb
in
cmp
sbb
pop
cmp
popa
daa
negl
pop
imul
or
movsb
mov
jle
or
xchg
lahf
xchg
or
out
mov
xor
insl
sub
push
adcb
sarl
jo
inc
mov
cmp
mov
xchg
bound
and
adc
pop
pusha
lea
aam
imul
adc
test
xor
daa
rorl
mov
loope
xchg
dec
dec
push
enter
xor
subl
jb
push
mov
inc
xchg
jb
mov
ljmp
jb
push
std
xor
sub
or
sub
mov
dec
test
inc
mov
int3
mov
cmp
add
sub
dec
or
outsl
es
sub
dec
mov
dec
pop
xchg
imul
not
pop
cmp
cmp
mov
daa
out
jo
ficoms
data16
mov
mov
lods
insl
xchg
dec
jecxz
ret
fstpl
imul
loop
stos
pop
push
dec
fisttps
imul
jo
rorl
loop
jb
mov
jae
adc
xlat
sbb
mov
xor
sti
stos
popa
push
bnd
or
cs
pop
aad
and
mov
movsl
cmp
xor
dec
pop
repnz
inc
or
fdivrs
fistps
orb
adc
xchg
and
js
mov
push
mov
imul
mov
lretw
and
stos
push
aas
fldcw
mov
fildl
or
in
loop
sub
mov
stos
sub
sbb
adc
shl
pushf
lods
test
hlt
sbbb
push
mov
ret
pop
lret
gs
push
scas
test
jl
jb
add
gs
lods
cmpl
push
jmp
mov
loop
ss
divb
in
adc
scas
fnsave
inc
fsqrt
cli
jl
imul
cmpl
fistps
clc
push
dec
inc
xchg
std
lds
test
mov
scas
add
testb
xor
loop
lods
push
fisubrl
or
xchg
adc
jae
adc
cli
es
push
and
scas
dec
adc
sbb
arpl
mov
mov
lret
sub
ss
mov
adc
jecxz
lret
and
mov
aam
imul
adc
mov
cmp
sub
cwtl
icebp
rorl
xor
addr16
cmp
add
xlat
lock
jg
aam
test
dec
mov
push
sub
insb
cmp
dec
iret
test
fstl
lret
out
rcll
lock
test
cmpsl
repz
sbb
lods
and
scas
mov
fdivp
xchg
sbb
leave
push
out
adc
js
loope
push
inc
pop
sub
inc
lret
sahf
cmp
roll
insb
aam
sbb
add
outsl
and
jne
lods
and
notl
imul
jo
xchg
pusha
inc
dec
repz
leave
or
push
xor
out
imul
pop
loope
mov
fsubr
sbb
pop
inc
into
jnp
push
lods
lods
fcoms
test
adc
xorb
shll
jns
sahf
insb
inc
dec
or
inc
popa
mov
add
or
pop
cli
stos
lods
jb
sub
pusha
mov
mov
negl
jnp
mov
and
mov
js
push
sahf
mov
flds
push
lods
cli
leave
fistpll
aad
dec
in
lret
and
fldcw
jmp
pop
ret
outsl
adc
sbb
pop
ja
xor
and
xchg
out
inc
iret
cmpb
jae
cmpsb
mov
fdivl
adc
leave
pop
xchg
jg
add
out
lahf
ja
popf
cld
inc
cwtl
or
push
ja
hlt
pop
mov
lds
mov
adc
cmp
lret
cltd
pop
mov
xchg
out
scas
scas
adcb
ja
fwait
sub
xchg
call
adcb
mov
leave
lret
ja
dec
mov
fimull
and
jle
aas
push
jo
pop
mov
frstor
sub
in
je
jns
lcall
ficoml
pop
push
in
scas
leave
icebp
xor
or
mov
stos
fstpt
mov
fnstcw
xchg
cmp
pusha
imul
ja
mov
out
pushf
out
sub
sbb
aas
fwait
xor
sub
mov
fdivs
test
scas
outsb
cs
out
push
cmp
push
lods
xor
xor
push
sbb
test
mov
loop
jae
xor
and
std
stos
jl
repz
dec
jns
stos
jno
push
mov
xor
mov
pushf
sub
je
insb
sbbb
adc
lds
popa
fnsave
cmp
lods
adc
pop
add
test
cld
test
out
popa
mov
push
cld
aam
in
std
cmpsl
cltd
ds
mov
fistpl
loopne
cmp
dec
cmp
aam
out
mov
sbbb
ss
jns
test
lods
icebp
push
add
cmp
and
or
jae
or
cmp
rcrb
sub
mov
cmc
sub
outsb
xor
ds
add
mov
iret
scas
into
push
subl
aam
sahf
jb
in
add
mov
adc
sub
dec
adc
xchg
xlat
xor
dec
push
sbb
or
ficomps
cmc
mov
hlt
ja
xor
xchg
sub
inc
sbbl
lfs
pop
push
pop
sarb
icebp
icebp
or
hlt
jns
scas
and
ja
loopne
leave
test
mov
lret
fucomi
das
mov
sub
sub
adc
les
add
dec
push
jp
cmpsl
jae
scas
inc
and
add
cwtl
les
push
mov
push
mov
fisubs
push
gs
add
js
mov
mov
js
jle
sti
inc
popf
mov
aam
mull
mov
cmp
test
xchg
xorb
out
icebp
cmp
add
loope
jge
sub
pop
add
sbb
and
mov
push
pop
push
and
or
jge
hlt
sub
dec
mov
fcmovnbe
cmp
ljmp
shl
aad
push
mov
decb
pushf
icebp
push
fcmove
outsb
aam
pop
bound
mov
stc
or
addl
sbb
arpl
cltd
pop
xor
cmp
popf
je
or
mov
sti
mov
pop
inc
nop
jno
mov
lock
push
loopne
mov
fldt
add
push
sbbb
mov
push
sub
call
subl
popf
jg
repz
lret
shr
cmp
cmc
rol
fildl
sti
adc
icebp
or
incl
stos
ret
mov
inc
fdivl
aaa
mov
mov
push
xchg
mov
push
sbb
xchg
stos
test
in
outsb
push
clc
dec
test
xor
subb
fwait
push
and
lcall
jne
insl
xor
jecxz
and
push
xchg
mov
sub
mov
movb
fcomps
ja
movsl
xlat
cs
out
hlt
imul
sub
xor
or
popf
repnz
and
test
jb
push
cmp
sub
pop
mov
inc
scas
push
cmpsl
cmp
inc
aas
jo
mov
fsubs
sarb
mov
mov
bound
xchg
pop
mov
int
or
dec
mov
push
inc
incb
adc
dec
adc
ljmp
or
adc
xchg
sub
mov
cmp
cmp
bound
cmp
rcrl
pop
test
and
cmpsb
sahf
lea
dec
call
inc
and
js
pop
repz
xchg
insl
push
pop
xor
pminsw
shll
sbbb
shrb
pop
xor
and
stos
jmp
inc
mov
mov
jb
push
xchg
pop
cmp
add
jecxz
das
sub
sbb
xor
add
inc
loopne
add
sub
or
inc
pop
xor
mov
mov
pop
ss
and
add
rcr
icebp
jmp
pop
in
xacquire
add
pop
pop
popl
pop
outsl
jge
jbe
int3
movsl
jl
test
or
lds
divb
ljmp
jno
js
push
popf
pop
push
mov
pop
sti
sbb
dec
sbb
daa
push
adc
inc
jmp
cmp
xor
in
mov
arpl
mov
fstpt
roll
mov
outsb
outsb
and
std
pop
pop
dec
xchg
sbb
rcrl
dec
mov
insb
sti
cmpsl
xchg
pop
gs
je
mov
je
mov
lahf
lds
sti
fwait
test
sub
xor
bound
hlt
mov
stc
lock
and
xchg
shrb
rol
sub
out
shrl
sbb
dec
aaa
jle
data16
imul
dec
pop
rcll
or
mov
cmp
dec
rcr
loop
xor
pop
fxch
inc
sub
test
mov
cltd
sub
and
outsb
dec
jecxz
nop
or
mov
je
pop
and
push
ja
test
or
pop
mov
xchg
push
cltd
or
clc
stos
mov
push
stos
in
push
and
mov
rol
daa
outsl
jo
push
cmp
xchg
imul
js
call
fstl
or
leave
add
and
mov
jbe
ds
pop
lods
mov
mov
jne
and
xchg
sub
ret
jo
pop
int
std
lods
jmp
mov
call
cmp
cmp
xor
inc
jne
mov
test
fsubrs
dec
push
lods
jl
mov
in
xor
arpl
mov
sbb
stos
leave
icebp
mov
insl
xchg
arpl
fwait
adc
mov
sbb
adc
mov
cli
dec
aam
int
mov
je
mov
loope
mov
cmp
pop
or
loope
insl
fiadds
xor
fsubrs
outsb
or
imul
sbb
fidivs
outsb
and
ret
rorb
pushf
dec
insl
jge
dec
aas
sahf
sub
inc
scas
sbb
movsb
mov
jae
decl
lahf
mov
enter
rclb
insb
pop
out
popf
mov
in
fwait
xchg
jge
ds
push
cmp
mov
lcall
arpl
mov
fwait
es
daa
push
mov
or
mov
inc
sbb
mov
ret
sub
outsb
fsincos
mov
shll
imul
std
cltd
pop
adc
adc
cmp
mov
adc
stc
or
insb
scas
daa
sbb
sub
xchg
outsb
xor
xor
cmp
nop
cld
in
adc
stos
in
add
and
dec
fisttpl
xchg
rep
repz
stc
add
lds
addb
testb
and
jmp
mov
dec
dec
fwait
fs
pushf
std
cmp
jbe
jnp
int
faddl
jmp
out
jmp
sbb
xchg
cwtl
push
mov
xor
mov
cmp
popf
inc
imul
in
mov
ljmp
xchg
lock
add
mov
hlt
mov
jmp
daa
sahf
aam
sbb
fistpl
xor
jl
sbb
int3
add
inc
orb
nop
imul
in
pop
sub
test
xor
sbbl
and
or
icebp
popa
mov
dec
or
es
das
adc
outsl
jo
xchg
inc
call
and
iret
inc
xor
subl
enter
cwtl
jns
dec
jnp
mov
mov
int
outsb
sub
sub
pushf
aad
testl
lret
lret
pop
mov
jno
ljmp
es
dec
cmp
sub
imul
or
inc
mov
inc
sbb
in
test
stc
mov
push
nop
daa
push
sti
imul
pusha
scas
inc
push
nop
shll
int
arpl
sbb
test
xchg
dec
out
jne
lea
lds
jecxz
dec
jbe
jmp
lock
ret
orl
and
inc
adc
or
mov
xchg
or
fwait
mov
sahf
lds
or
aad
cmp
dec
in
pop
mov
fmull
es
pusha
pushf
stos
test
sti
or
insl
mov
jbe
dec
loop
in
adc
icebp
ss
sti
xchg
adc
inc
cwtl
sub
sbb
rorb
fwait
stos
sub
test
adc
inc
push
cmp
pop
stos
daa
and
mov
dec
push
ficomps
fdivrs
xor
jbe
aam
aaa
sbb
outsl
or
fs
push
icebp
cmp
std
sbb
jp
lock
mov
mov
xor
lea
daa
inc
test
sbb
outsb
inc
adc
stos
lret
or
lretw
jge
btc
out
dec
add
inc
xor
sub
fld
pop
dec
inc
push
js
and
inc
add
adc
stos
stos
test
and
pop
repnz
lods
lret
mov
push
inc
inc
test
xor
in
stos
inc
jmp
sub
fstpl
mov
mov
mov
imul
test
cwtl
and
xchg
jne
sub
lret
mov
mov
xorl
mov
je
daa
push
call
sub
lret
xor
inc
sub
inc
out
sbb
repnz
jnp
jge
mov
mov
jae
mov
fucomi
sub
jp
push
cmp
into
loop
cmp
pop
outsl
test
mov
leave
inc
lret
out
bound
flds
pop
mov
pop
in
jle
push
insl
sahf
pop
jge
xchg
lahf
xchg
rorl
mov
mov
sub
mov
pop
mov
jb
scas
ret
xlat
jle
or
into
cmp
jo
mov
jle
int
lcall
push
inc
xor
enter
mov
or
jo
dec
das
out
pop
dec
inc
icebp
cmp
add
mov
dec
pop
fsts
scas
std
cwtl
adc
out
test
xchg
push
test
loopne
jecxz
sub
add
js
push
mov
or
mov
les
jle
mov
mov
shlb
das
mov
insl
test
loope
and
and
in
pushf
cmpsl
xchg
cmpsl
ds
pop
insb
mov
adc
int
add
aas
popf
das
das
ss
ffreep
out
ret
gs
pop
loop
inc
stos
add
add
negl
sahf
jbe
adc
test
mov
daa
dec
cmc
xchg
xchg
push
push
mov
ljmp
dec
gs
xchg
insb
lds
sbb
push
popf
out
addl
aaa
mov
repnz
insb
std
fdiv
or
sbb
mov
movsl
sub
stc
push
call
mov
psubusb
mov
push
and
insl
pop
loope
sti
sub
in
in
sub
jle
aaa
aaa
aad
dec
sub
daa
pop
pop
insl
mov
inc
das
xor
push
or
lret
mov
int3
mov
pushf
in
lods
int
enter
xchg
out
push
mov
jle
sbb
xchg
pusha
fistpl
lret
sarb
xlat
fists
stc
imul
jg
jno
jbe
lcall
inc
aad
or
out
test
das
inc
push
mov
data16
js
sub
dec
es
dec
jmp
or
ds
roll
repnz
js
les
adc
scas
add
jecxz
xchg
jbe
pop
test
xor
in
leave
mov
repz
push
aad
les
leave
sbb
dec
mov
inc
movl
and
mov
add
orb
fwait
sbb
xchg
cmp
cmc
mov
mov
sarl
pusha
stos
ja
and
lds
jns
testl
pop
push
jp
les
sbb
js
jmp
daa
mov
mov
xchg
add
push
adc
mov
mov
ror
sbb
xor
out
into
jge
pushf
dec
jne
in
inc
into
inc
fisubl
dec
adc
push
dec
inc
cli
adc
insb
lds
jg
pop
fidivrl
inc
xor
mov
fs
out
fsts
bound
mov
cmp
mov
mov
and
xchg
jecxz
pushf
cld
sub
mov
add
lahf
jbe
add
std
cltd
jae
loopne
aaa
mov
shlb
mov
jo
lret
or
pop
xchg
and
adc
xchg
mov
fildl
dec
jge
lahf
mov
pop
out
xchg
jp
insb
inc
orb
push
divl
xchg
fisubrl
shrb
in
push
cmp
push
mov
lret
pop
and
rol
pop
add
pop
or
mov
insb
mov
insl
repz
fsubrl
dec
arpl
xchg
and
fisttpll
adc
fldenvs
out
dec
fwait
xchg
enter
lods
inc
fidivs
add
adc
sbb
fdivp
or
cmpsb
out
test
pop
jp
xor
pop
sbb
add
testl
cmp
push
and
jp
inc
in
and
imul
movsb
add
sbb
daa
ret
lret
mov
sahf
xor
xchg
sub
jns
mov
and
sbb
xor
xchg
xchg
fisubl
add
insl
sbb
outsb
xor
lahf
or
cmp
jl
or
jp
in
orl
or
sbb
inc
cmp
mov
sbbb
test
je
js
add
adc
or
and
int
push
shrb
mov
pop
movsb
popa
out
and
adc
inc
push
out
jb
out
add
shl
mov
and
and
and
jo
add
xchg
adc
lahf
inc
inc
mov
cwtl
jmp
xchg
sub
add
or
stc
lret
bound
mov
cmpsl
sbb
xor
xlat
scas
inc
cli
insl
cmc
sub
inc
iret
adc
scas
xchg
sbb
icebp
aaa
ss
lea
or
iret
data16
add
jbe
cs
xor
pop
out
push
lret
fwait
repnz
cld
test
jge
mov
dec
push
pop
adcb
mov
cltd
test
inc
sti
xchg
ja
jmp
scas
dec
xor
stos
cmp
pop
cs
add
ret
cmp
add
nopl
into
xor
mov
mov
mov
mov
jecxz
cli
icebp
cmpsl
adc
test
sti
rclb
lods
idivb
inc
ffree
call
cld
jp
or
sbb
mov
pop
nop
js
in
lcall
xchg
push
int3
pop
mov
ret
in
test
fisttps
cmpsl
out
jmp
mov
or
fists
cmc
xchg
daa
gs
mov
mov
mov
and
rorb
adc
mov
dec
aaa
or
addr16
sub
out
sub
jnp
cmp
mov
roll
mov
and
jmp
lahf
scas
mov
push
jmp
mov
mov
mov
movsl
adc
aas
fimuls
sub
ljmp
mov
popl
cmc
xlat
repz
jmp
push
pop
aad
ja
and
lahf
sbb
jb
or
nopl
aam
jecxz
jbe
test
fiaddl
in
inc
pop
mov
ss
insb
mov
push
jae
or
cltd
and
push
mov
push
jo
mov
mov
xchg
popf
push
lods
pop
xor
in
xor
xchg
movsl
pop
sbb
add
clc
xor
cmp
and
ficoml
push
push
dec
sbb
aas
adc
nop
jl
xchg
mov
xchg
fldt
dec
or
mov
xchg
jge
mov
movntps
hlt
cmp
ja
mov
dec
jecxz
test
inc
or
and
ret
mov
sub
popf
in
mov
mov
sbb
out
mov
loopne
fsubs
mov
sbb
mov
xchg
in
mov
cmp
js
push
adc
shrb
mov
or
stos
into
xchg
orl
fstpl
inc
xchg
out
push
fidivl
adc
mov
sbb
sub
in
mov
add
mov
sub
sti
daa
cld
mov
adc
inc
and
pop
pop
sub
lock
and
pop
lahf
cmpb
lds
scas
aaa
jae
and
push
push
cltd
addl
sbb
dec
orb
and
mov
xchg
mov
scas
inc
push
lock
loopne
int3
shr
jp
add
xchg
push
push
iret
add
aaa
ds
fdivs
xor
add
stos
xchg
jmp
dec
pop
movsl
add
outsl
cmp
or
les
lret
int
cli
push
sbb
fchs
xor
xchg
jp
xlat
loope
imul
jae
jbe
or
xor
xchg
ret
ja
cmp
adc
sbb
fwait
pusha
roll
mov
inc
sub
rclb
pushf
pop
jno
mov
inc
or
movsl
inc
int3
pusha
xchg
outsl
sub
inc
sbb
push
stos
in
dec
add
jne
mov
mov
sub
bound
popa
jg
lret
mov
pusha
negl
inc
sub
pop
scas
jo
mov
inc
aad
adc
xchg
ss
xchg
push
hlt
clc
mov
call
or
fmul
sub
pop
ljmp
inc
out
sbb
aas
dec
push
outsb
jns
stos
xchg
jns
push
insb
xor
gs
inc
and
out
jp
jae
or
sub
outsb
test
jbe
jns
fsubrl
test
xchg
hlt
das
mov
pop
lret
out
sti
jle
nop
mov
rcrb
inc
push
ret
andl
jne
icebp
fwait
xor
jbe
mov
fdiv
mov
dec
dec
cmp
mov
adc
inc
fcmovnbe
inc
in
inc
sbbb
ret
int
mov
rep
jb
imul
hlt
lgs
mov
jl
mov
leave
imul
wbinvd
lods
xor
fs
cwtl
adc
pop
add
sub
out
stc
sbb
fdivp
sbb
mov
rorb
mov
and
and
les
jb
mov
arpl
push
mov
jno
add
cmp
mov
jmp
xor
dec
nop
fdivp
add
pop
andl
xchg
insb
jge
push
push
mov
ret
icebp
jl
xlat
int
push
jle
sahf
movsb
jmp
xor
inc
inc
cmp
ljmp
popf
mov
inc
inc
fldenv
repnz
adcb
movsb
pop
mov
push
arpl
aam
xchg
pop
xabort
pop
sub
mov
add
jle
cmp
aam
push
push
fisubs
sub
shll
jmp
inc
jbe
adc
mov
dec
mov
rol
sub
shrb
and
ss
mov
cmc
mov
sbb
std
test
test
xorb
mov
arpl
jge
ret
fidivrl
mov
lock
mov
fisubrl
rclb
mov
fists
adcl
xchg
jne
ret
dec
mov
frstor
and
cmp
ss
cli
pop
pop
mov
addb
mov
rorl
xchg
mov
movsb
xchg
lea
xchg
aas
js
fdivrs
dec
or
add
or
pop
ja
mov
xchg
jl
test
leave
lods
pop
scas
lock
add
xor
jle
movsb
xchg
add
loop
stos
dec
cmp
sbb
lock
scas
mov
inc
test
xchg
fisubl
jns
iret
fnstsw
mov
push
filds
lea
loopne
popa
jl
add
pop
dec
pushf
inc
lods
int
xchg
push
xchg
stc
fisubrl
mov
imul
pop
dec
hlt
jbe
mov
mov
dec
cmpsb
cmp
stos
fld
in
push
mov
and
rcr
stos
adc
popf
lea
mov
push
add
and
fnstenv
or
cs
shl
idivb
sub
shll
and
or
xlat
mov
push
jae
mov
sub
pop
push
add
fstpl
jge
push
pushf
test
cmp
lea
aas
loope
xchg
mov
cmp
out
sub
clc
rorl
and
xchg
and
dec
test
jae
cmp
in
enter
cmp
pop
jne
test
push
inc
sahf
mov
in
and
sub
dec
popf
mov
je
cmpsb
xchg
dec
push
dec
adc
mov
cli
xor
iret
bndldx
push
dec
lds
xlat
mov
inc
or
and
mov
jno
divl
imull
out
xchg
sub
or
out
into
and
sub
ret
push
iret
fnstenv
int
imul
pushf
sub
adc
nop
inc
test
mov
pusha
aaa
in
ds
fisttpll
lret
jne
adc
inc
and
jbe
sub
fildl
add
lahf
and
into
inc
loopne
mov
dec
jle
cmp
insb
mov
std
sti
and
sar
adc
inc
mov
iret
into
nop
movsl
xor
push
sarb
pop
testb
add
jns
push
es
sub
mov
fiadds
stc
pop
mov
xchg
pop
and
mov
stc
subl
xchg
lret
add
xor
or
or
xchg
pop
gs
sub
pusha
mov
push
inc
xchg
inc
mov
das
add
xchg
mov
push
dec
mov
cld
or
sbb
das
subb
dec
idivb
loopne
call
in
mov
pop
jnp
jb
jl
clc
cmp
pushf
xchg
cld
stos
or
jb
push
xor
xchg
push
xchg
arpl
cmp
cltd
das
pop
jno
movsb
sub
into
pop
fisttpll
dec
aam
in
push
ss
add
fcomip
and
insl
push
sbb
cmp
cmp
rcr
cmpb
inc
sub
jmp
xor
dec
or
or
popf
aaa
std
sub
xchg
lcall
aad
cltd
xor
xchg
cmp
add
ret
xchg
sarb
cmpsl
lds
not
out
jge
xlat
jbe
xor
loop
xchg
sub
add
faddl
shlb
stc
das
dec
fbld
and
imul
gs
mov
stc
out
pop
dec
sub
addl
fstps
leave
cs
lods
pop
xor
and
add
jbe
fildll
js
dec
add
ds
push
and
int
in
movsb
shr
gs
dec
add
inc
js
ljmp
dec
pop
mov
cmp
jp
add
mov
push
je
lock
cli
xchg
ja
into
insl
fstpl
or
mov
sub
incb
inc
pop
sub
int3
arpl
xchg
insl
add
mov
repz
jb
pop
mov
nop
adc
jns
sub
call
pop
loopne
js
fldt
scas
sarl
or
ja
or
scas
stc
outsb
xchg
mov
dec
sbb
mov
shll
fstpt
mov
or
xchg
xor
repz
hlt
and
cmp
pop
lret
jnp
lock
je
das
test
adc
mov
jle
js
or
adc
adc
faddl
mov
fisubs
or
xor
out
mov
aad
xchg
repnz
mov
adc
add
sub
lods
pop
test
gs
adc
mov
aad
std
add
xchg
into
repnz
mov
adc
push
sub
dec
pop
cwtl
divl
sub
xchg
sbb
leave
jge
jo
pop
sahf
adc
inc
stos
add
fcoml
aaa
or
mov
fisubrl
fwait
pop
loopne
popf
popa
clc
push
test
lcall
hlt
mov
dec
sbb
or
xor
arpl
add
pushf
inc
adc
int3
lock
pop
mov
sub
push
xchg
outsl
push
mov
push
push
jl
cmc
push
sbb
lock
push
xchg
and
test
or
cmc
mov
sub
nop
sbb
jno
mov
std
add
testl
adc
ret
push
push
sub
cmpsl
pop
int3
push
in
jmp
dec
data16
mov
mov
jbe
push
jg
xor
sbb
adc
pop
add
insl
cmp
push
movsb
mov
lea
lock
adc
jp
pop
mov
cmpsb
mov
mov
ret
adc
enter
lods
mov
sbb
sub
jmp
arpl
ret
outsl
mov
push
loopne
lahf
adc
mov
ljmp
in
xchg
mov
push
push
push
mov
js
aad
xor
add
ja
arpl
nop
outsl
push
mov
ja
dec
add
and
cltd
sarl
pop
xor
aam
xor
sbb
mov
loope
push
sub
mov
popf
push
in
mov
mov
testl
xor
cmp
sub
inc
pop
xchg
jl
mov
fistl
mov
dec
add
lods
push
or
adc
cmpb
popf
pop
sbb
test
push
mov
insl
add
fs
mov
adc
push
jl
lods
lock
xor
xchg
stos
out
call
pop
cmpsb
jno
out
nop
mov
popf
xchg
sbb
es
push
push
jae
loopne
inc
sbb
inc
fs
scas
xchg
fs
iret
lret
frstor
outsb
aas
add
ja
mov
inc
mov
outsl
jecxz
pop
roll
in
sub
out
sub
hlt
aaa
mov
andb
mov
xchg
add
ret
inc
aad
jno
mov
push
sub
shrb
mov
in
and
xchg
xor
or
loope
clc
movsl
xchg
aaa
loope
inc
and
lret
jg
stos
mov
mov
iret
pop
jae
cmp
das
sub
mov
fiaddl
add
or
daa
call
add
aam
arpl
push
push
jne
sub
ljmp
lret
pop
cltd
sub
xor
dec
dec
or
adc
movsb
push
test
fisubs
sahf
push
lcall
add
in
repz
movsb
cmp
dec
cmc
mov
and
gs
xor
cltd
fs
inc
xchg
add
xor
and
pop
pop
push
repz
div
xchg
mov
std
xchg
in
popf
and
inc
std
pop
insb
push
movsl
fisubrs
repz
jb
sarl
lds
dec
lods
pop
repnz
clc
inc
test
int
movsl
int
pushf
mov
movsb
addr16
mull
gs
repnz
jg
loope
jecxz
sbb
incl
adc
sbb
cmp
insl
rol
pop
lock
outsl
pop
pop
add
stc
inc
test
andl
fadds
testl
test
sbb
into
fildll
xchg
mov
cmp
cmp
or
push
outsl
push
mov
mov
push
push
fildl
push
scas
inc
lret
xor
daa
insb
fcomps
shl
lock
cmp
push
adc
lret
mov
sti
mov
in
scas
and
sub
jae,pn
enter
pop
or
jns
mov
loope
push
out
mov
cmp
cli
adc
sbb
cmpsl
sub
out
pop
mov
and
jo
push
sbb
cmp
jne
pop
testl
mov
and
shll
jns
mov
and
xchg
loop
xchg
adc
dec
fs
add
xor
mov
popa
pushf
cli
iret
movsb
sbb
xchg
sub
dec
fnstenv
mov
and
and
mov
or
mov
xor
int3
add
sarl
xchg
mov
or
leave
or
inc
sahf
sub
push
and
cs
sbb
mov
loope
nop
addl
and
jp
bts
fldl
popa
xlat
mov
xchg
inc
mov
xchg
sbb
xor
lret
xor
sub
inc
test
mov
xor
inc
xchg
xchg
xor
add
ja
loope
int
inc
lds
pusha
adc
into
enter
pusha
mov
mov
cli
mov
sahf
sub
pop
popf
fs
sub
fisubs
and
test
jnp
leave
int
test
stos
cmpsb
pop
mov
into
xor
leave
test
and
test
lahf
daa
bound
push
adc
movsb
sbb
out
mul
and
inc
cmp
ja
pop
lret
pop
mov
jp
imul
sbb
nop
add
mov
and
lcall
cmpsl
mov
adc
aad
xor
je
aam
sahf
imul
inc
aam
je
sbb
gs
js
gs
push
cmp
jecxz
sbb
push
cltd
clc
inc
arpl
xchg
in
test
iret
jae
in
push
nop
add
and
sbb
ret
xlat
mov
dec
adc
pushf
sbb
lds
sub
mov
lods
pop
mul
jg
js
jp
push
pop
test
xchg
unpckhps
add
jg
push
mov
jo
push
mov
push
in
ret
lret
pop
cmc
cld
mov
jg
cmp
outsl
scas
xchg
inc
stc
add
push
cli
jno
adc
jbe
jns
mov
sub
or
cmpsl
in
jge
push
push
cmp
push
cmp
out
ficompl
mov
ja
jne
jecxz
lds
cmp
jecxz
push
pop
pushf
out
add
lahf
testl
stos
pop
faddl
mov
jge
dec
addb
test
and
lea
lcall
or
out
dec
sbb
pop
cmp
fisttps
pop
sub
push
jo
sub
sbb
mov
sub
xor
xor
pop
pop
mov
das
adc
push
mov
sbb
sbb
jae
bound
scas
fs
xchg
rorb
or
fisubrl
jmp
lret
xorl
sub
pop
inc
std
mov
cmc
outsl
push
clc
or
add
add
xor
xor
push
jbe
dec
xchg
fsubs
test
int3
mov
or
sti
lock
sbb
lret
mov
xchg
jo
loopne
fstps
sbbb
push
push
insl
add
scas
test
mov
sub
lret
pop
call
push
push
mov
insl
sarl
fiadds
test
popa
sbb
sbb
jl
cmp
pop
push
sbb
jbe
call
mov
pusha
jl
mov
xchg
jecxz
addr16
sub
test
iret
or
mov
sub
and
jo
and
mov
or
das
repnz
dec
and
inc
pop
mov
loopne
aas
push
adc
adcl
cs
cmc
push
ja
test
jl
mov
pushf
stos
mov
cmp
sbb
mov
popf
stos
imul
cwtl
jo
adc
xor
and
or
into
push
push
fstl
push
or
pop
xchg
adc
xor
sub
pop
inc
popa
clc
jne
jbe
add
cli
in
scas
mov
pop
add
xchg
cmp
and
add
int3
outsb
lret
add
mov
mov
out
shll
std
xchg
pop
repnz
mov
cs
enter
inc
jmp
push
mov
decl
das
jp
imul
in
fnstenv
mov
andb
push
or
xchg
push
jl
jge
push
jno
lahf
push
or
add
incl
imul
aaa
arpl
jno
dec
rcrl
jl
inc
jno
test
jecxz
rcrb
dec
mov
xchg
xchg
xchg
dec
loope
jl
lret
xlat
dec
dec
aad
cmc
gs
pusha
lahf
xchg
mov
jae
sbb
pushf
sbb
ret
jne
std
in
cwtl
or
lock
inc
scas
fdivl
ja
dec
aad
adc
cs
xchg
fsubl
push
adc
xchg
jecxz
fs
mov
push
or
enter
jp
in
fidivrl
int
addr16
pop
mov
jg
pop
xor
jg
push
pusha
mov
adc
mov
fwait
jo
int
mov
dec
xor
or
or
sub
pusha
scas
adcb
sarl
sub
mov
mov
mov
and
and
inc
push
or
dec
add
xchg
sub
movsb
aas
mov
inc
data16
dec
loop
inc
int
jno
out
jp
lds
test
fdivrs
sub
dec
in
dec
scas
shll
aas
fisubrs
xor
sti
jle
mov
cmp
popf
sbb
andl
ds
lods
jb
or
add
add
pop
add
pusha
loop
notb
inc
in
inc
sti
xor
jae
dec
or
cmpsb
add
outsb
out
scas
pop
add
orl
out
cwtl
push
icebp
lea
cli
mov
and
mov
pop
mov
pop
adc
xchg
movsl
les
andb
hlt
popa
adc
in
sti
push
mov
sbb
repz
push
jecxz
cmpb
out
xchg
jnp
loop
int3
fnstcw
clc
inc
lock
mov
pop
sahf
push
test
or
xchg
sub
arpl
hlt
inc
xor
je
push
jmp
add
xchg
js
jb
cwtl
ficompl
xchg
inc
mov
shll
inc
mov
fnstcw
adc
adc
pusha
fildl
push
sub
outsb
dec
decb
xor
push
cld
xchg
jle
xor
std
mov
cltd
call
push
mov
mov
das
xchg
fwait
repz
and
addr16
pop
jle
cmp
pushf
jmp
test
lahf
dec
xor
dec
stos
mov
add
cwtl
out
and
xor
mov
or
daa
stos
notl
mov
lret
jp
push
js
add
add
sbb
xor
and
in
mov
mov
test
lahf
popf
adc
xor
jb
add
je
aas
jns
stc
xor
push
es
sub
fmul
ljmp
ja
jae
xchg
and
js
cmp
scas
pushf
test
add
push
daa
or
mov
cmc
loop
lods
sub
rcr
mov
ljmp
cmp
ret
ds
or
or
xchg
dec
mov
je
cmpl
adc
std
adc
fdivl
cli
fmulp
inc
or
pop
cmp
or
sbb
or
adc
aaa
pop
imul
out
push
xchg
movl
loopne
push
popf
icebp
add
call
cmp
in
int3
push
jns
dec
lods
mov
call
or
mov
and
js
leave
leave
push
push
je
pop
imulb
pusha
inc
lret
dec
jge
mov
mov
divl
loopne
xchg
push
xor
outsl
xchg
pop
push
xchg
popf
rcrl
inc
and
push
test
xchg
cs
jae
dec
scas
add
xchg
shl
push
aad
gs
stos
cmc
and
mov
push
bound
sub
test
mov
push
lret
adc
shrb
adc
mov
pushf
cmp
out
shrb
adc
mov
xor
out
cmc
les
add
into
cltd
mov
dec
and
adc
adc
divl
adc
mov
xor
arpl
imul
orb
incl
mov
pushf
jbe
into
inc
pushf
cli
inc
out
out
inc
xor
int3
cmpsb
popa
cmpsb
dec
popa
jl
jnp
inc
adcl
xchg
mov
data16
mov
jno
xchg
or
mov
xchg
adc
pop
scas
inc
push
negb
inc
cmpsl
outsl
jo
repz
movsl
and
cmp
shrb
popa
sbb
sbb
dec
dec
pop
cmpsb
inc
popf
out
in
ret
mov
xchg
jbe
pop
sub
idivl
lods
xchg
repnz
stos
xor
movsb
fdiv
sbb
sbb
cmp
outsl
daa
xor
test
xchg
testb
inc
cmpsb
xchg
mov
sarl
dec
push
mov
xor
pushf
mov
rcll
loop
sti
mul
aaa
jb
sub
scas
sti
aad
sbb
xlat
insl
enter
cltd
mov
shr
mov
adc
vcmpss
imul
mov
scas
and
imul
pop
sub
jp
pop
add
adc
ror
sti
stos
mov
pop
xor
aaa
sbb
stc
scas
push
or
ja
sbb
cmp
xlat
mov
shr
scas
xchg
adc
std
mov
outsb
jo
into
enter
adc
push
mov
inc
mov
pushf
loope
cli
fnstcw
loope,pn
fisttpl
popa
shll
jecxz
in
pop
addl
fisubl
mov
sbb
shll
lret
bound
lds
jecxz
iret
ss
enter
das
jecxz
in
scas
gs
gs
movsb
int
aaa
push
jns
sub
jae
pop
cmp
stos
sbb
mov
add
adc
push
jl
mov
jecxz
fisttps
adc
leave
adc
fisttps
faddl
cmp
je
inc
dec
lret
lret
add
push
mov
out
jns
lcall
lock
mov
int
movsb
sub
clc
push
out
or
xchg
in
adc
push
mov
std
fldl
and
push
sbb
dec
movl
inc
xchg
int
int3
mov
repnz
jne
push
sbb
dec
pushl
mul
minps
iret
sbb
nop
and
add
or
das
xlat
jmp
stos
das
inc
insb
mov
movsl
inc
lea
test
ja
jno
sbb
mov
or
test
push
mov
mov
xor
call
movsl
xor
xor
dec
push
insb
out
xchg
jno
and
inc
cmp
inc
lods
mov
mov
cmp
adc
push
or
dec
and
cmpsl
xor
pop
cmp
pop
scas
roll
sti
xor
mov
int3
pop
jbe
mov
je
jmp
cwtl
out
jbe
add
inc
ljmp
stos
adc
int
cmp
outsl
xchg
inc
pop
pop
in
xchg
aas
push
notl
hlt
dec
inc
fstpt
mov
out
and
xchg
cmpsl
adc
sbb
mov
sahf
adc
push
aaa
pop
mulb
sub
push
add
out
mov
xchg
push
pop
pop
pop
mov
cmp
push
or
jno
jl
jno
out
xlat
outsb
mov
out
adc
dec
pop
aas
out
pop
scas
clc
sbb
iret
jecxz
test
mov
jle
mov
sbb
xor
cltd
jnp
andl
or
add
pop
or
pop
inc
and
stos
ror
pop
cmc
add
jbe
shll
les
xchg
jle
add
lret
xchg
jno
sub
xchg
mov
rclb
adc
dec
mov
push
cmp
lcall
dec
stc
into
repnz
mov
lods
insb
out
cld
or
scas
lods
xchg
xor
mov
loop
sub
add
dec
scas
sbb
sub
pop
movsl
lea
rcl
cmc
pushf
test
idiv
push
fstps
jne
mov
jp
fildl
dec
jmp
cli
ror
mov
ds
or
add
in
dec
dec
fstpl
out
sub
mov
fcompl
push
addr16
cmc
mov
or
int
adc
aad
movsb
xor
add
sbb
movsb
mov
add
jns
mov
fisttpl
adc
jne
int3
into
add
mov
cmpsb
xchg
fs
sbb
add
cmp
ss
cmp
mov
adc
fnstcw
jae
sub
outsl
push
call
push
pop
inc
or
lds
or
out
out
xchg
mov
and
fwait
test
jmp
or
pop
and
mov
add
mov
fcmovb
in
enter
scas
dec
icebp
or
fnstsw
xchg
popf
int
ljmp
jbe
test
inc
cmp
adc
out
mov
dec
in
in
lock
adc
ljmp
out
test
arpl
negb
inc
cwtl
jecxz
out
pop
shl
push
insl
push
push
cmp
lret
mov
add
sbb
dec
jb
aaa
in
xor
cwtl
push
mov
lea
int3
adc
jge
add
add
pcmpgtd
jne
cmp
adc
jle
sbb
push
dec
aaa
js
and
jl
int3
push
xchg
add
leave
adc
inc
dec
inc
fwait
sbb
dec
roll
aam
push
imul
lret
sbb
std
in
outsl
repnz
testb
andl
jbe
sbb
jo
scas
and
push
push
pusha
lods
subl
jae
mov
scas
cmpl
ret
outsb
jmp
nop
fdivs
mov
cmc
je
adc
mov
bound
sbb
stos
stos
inc
fmul
inc
mov
jb
daa
movsb
cmp
mov
lods
mov
imul
add
cmp
sub
in
lahf
xchg
aas
xchg
ja
adc
pop
cmp
stos
inc
out
jp
wbinvd
adc
cmpb
out
or
ljmp
idivl
mov
and
in
cltd
sbb
cwtl
mov
cs
outsl
ret
adc
xor
mov
sahf
cmp
xchg
arpl
mov
ret
test
jne
fdivrs
aam
sub
scas
xchg
xlat
push
mov
nop
leave
cli
loope
sub
sbb
not
push
add
test
mov
mov
ljmp
testb
jmp
jl
jns
notb
fwait
loope
mov
mov
dec
add
and
loop
inc
and
sub
cmp
scas
pushf
lea
dec
ja
std
push
insl
in
inc
scas
pop
outsl
mov
dec
lret
xchg
push
mov
lcall
or
inc
adc
add
dec
daa
test
aad
sbbb
test
hlt
mov
adc
adc
aaa
dec
loop
sub
xor
xchg
inc
lret
pop
loopne
pop
mov
imull
xlat
icebp
pop
mov
cld
or
xchg
dec
sub
lret
lret
or
mov
pop
xor
fs
cltd
int
mov
xchg
jecxz
cmp
pop
insb
jp
in
inc
lods
out
or
out
sbbl
xchg
add
adcb
cwtl
cmc
ja
mov
cmpsl
mov
ljmp
jno
fsub
mov
push
je
pushf
lcall
and
sub
push
xor
popa
stc
fbld
xchg
xor
inc
out
mov
or
mov
lods
std
sbb
inc
or
js
adc
push
sbb
push
and
mov
out
xorb
cwtl
lahf
xor
out
add
addr16
lcall
sbb
add
inc
test
pop
rcr
imul
sbb
je
mov
cmp
xor
nop
jg
stos
fists
xor
repnz
mov
mul
jns
loope
adc
push
mov
test
xchg
push
sub
sub
mov
fistpll
call
sbb
sub
pop
jnp
lea
enter
andl
aaa
test
jmp
fidivl
push
popa
imul
fwait
enter
stc
cmp
cmp
jno
or
push
loope
xor
fisubrs
xor
lods
popf
cmpsb
rolb
jg
or
stos
aam
int
mov
popa
rolb
mov
or
mov
mov
imul
arpl
dec
aad
jle
xor
test
sbb
out
inc
jno
addr16
xlat
les
scas
add
mov
jmp
stos
inc
movsb
inc
dec
dec
out
insl
leave
sbb
xor
sbb
mov
push
xchg
jmp
mov
int
stos
bound
cmp
push
jl
xor
sbb
pop
add
nop
sub
lods
mov
ret
lods
mov
ret
imul
pop
lahf
shlb
jl
ja
aaa
loope
mov
or
mov
leave
sub
inc
mov
and
sbb
mov
out
out
pusha
popf
mov
pop
aaa
mov
arpl
xchg
and
mov
pop
int3
outsb
push
xchg
add
cltd
mov
xorl
fdivs
cmp
jo
or
call
in
dec
fstps
cmpsb
cmp
add
rolb
sbb
out
das
lds
pop
push
movsb
fadd
loop
or
xor
test
es
sbb
and
pop
xor
dec
jns
jo
inc
pop
sbb
inc
push
std
lock
jo
icebp
dec
loop
enter
negl
jo
movsl
mov
popf
out
in
rcll
ret
pop
mov
out
scas
pop
int3
mov
das
imul
xchg
cmpsl
adc
pop
jecxz
mov
sahf
enter
dec
dec
jmp
test
in
push
inc
ds
out
out
inc
xor
shrl
shrb
movsb
adc
and
mov
icebp
add
adcl
sbb
pop
and
xlat
repz
xchg
xchg
push
mov
insb
mov
lods
mov
mov
movsb
or
mov
xor
out
or
add
cli
nop
fwait
test
add
test
push
jg
xchg
mov
cltd
adc
dec
pop
lahf
loopne
cmp
dec
inc
adc
inc
xchg
mov
ret
jecxz
or
adc
rcl
jl
in
mov
pop
aam
inc
sahf
decl
jle
adc
push
mov
xchg
push
popf
lds
and
sbb
xchg
push
loopne
addr16
les
outsb
mov
das
cmp
inc
pop
ret
lcall
es
popf
sti
loopne
sub
xchg
fimull
pop
and
fcoms
pop
aas
xchg
add
lret
das
pop
or
and
push
sahf
push
ss
pushf
sbb
cmpsl
sbb
stos
pop
push
aad
and
pop
push
lret
test
shrb
inc
add
divl
xchg
pop
push
flds
add
test
test
out
inc
orl
pop
inc
scas
nop
shl
clc
sbb
xor
push
stc
pop
pop
aas
push
xchg
aas
jp
pusha
add
dec
loopne
fs
adc
cmp
popf
mov
es
scas
mov
adcb
sbb
fdivp
aam
pop
mov
sbb
imul
jno
mov
out
push
and
out
test
jle
sbb
dec
mov
div
xchg
fs
stos
mov
mov
fdivl
push
aaa
or
add
sbb
add
out
jo
mov
ret
into
push
addr16
in
mov
stos
popa
adc
and
lds
or
insb
pop
jb
sub
pushf
cmpsl
imul
mov
loop
cli
test
call
call
jmp
or
loope
aad
aaa
ret
xchg
cmp
xchg
cmpsb
sbb
insb
shlb
cmpsb
pushf
xchg
adc
lahf
test
sub
mov
xor
loopne
adc
mov
and
xchg
cmpsb
add
jecxz
dec
cmp
fisubrl
and
mov
fistpl
leave
mov
movsl
sbb
test
and
mov
fisttpl
test
insl
inc
dec
rcrb
cltd
jmp
xchg
inc
scas
mov
or
pop
das
fisubl
loope
sub
clc
cmp
sub
ljmp
pop
in
int3
mov
mov
ss
pop
jbe
sbb
mov
lods
call
xchg
scas
lods
test
mov
inc
dec
std
data16
bound
pop
int
les
inc
out
in
inc
ficoml
ljmp
and
movsb
mov
fcompl
and
clc
imul
sub
call
sub
imul
mov
xchg
gs
lods
adc
mov
push
adc
int3
loop
das
or
test
push
fs
outsl
scas
xchg
in
stos
repnz
scas
xchg
adc
add
out
insb
xor
or
arpl
sub
imul
jno
or
sub
fwait
movsb
and
cmp
jl
clc
sub
test
inc
dec
adc
push
sahf
mov
lea
shrl
xor
ds
and
fwait
mov
mov
nop
xchg
in
scas
mov
and
cld
add
fidivs
in
in
stos
inc
vprotb
or
popf
stc
mov
inc
pop
dec
lea
fs
movups
push
inc
and
inc
mov
in
inc
insl
leave
in
imul
inc
leave
xor
and
inc
dec
xor
pop
mov
sub
push
pop
xchg
decl
lds
sub
adc
stos
and
mov
or
inc
arpl
adc
xor
cld
mov
test
add
sub
push
sub
loope
decl
scas
fdivs
mov
inc
and
mov
sbb
jns
mov
out
cltd
shlb
jmp
mov
or
xor
adcl
lahf
cmc
adc
insl
hlt
pop
or
xor
mov
insl
lahf
or
mov
outsl
clc
addr16
inc
xchg
mov
fstl
cmp
repz
sbb
mov
call
rcrb
arpl
cwtl
inc
shl
ret
or
add
loopne
dec
and
adc
push
and
test
jb
int
push
insb
mov
sbb
push
fadds
add
jge
out
ds
bound
out
sub
xor
test
loope
bound
mov
outsl
push
test
in
fadd
mov
push
icebp
fnstcw
push
mov
push
fmul
rclb
cmp
push
ljmp
jl
out
pushf
push
cmp
aaa
mov
mov
mov
and
pop
lahf
incb
enter
pop
add
arpl
imul
call
rolb
outsl
out
aas
test
movsl
mov
xor
gs
in
ja
cltd
mov
xchg
xchg
jno
sub
push
sbb
mov
inc
shlb
pop
jnp
in
arpl
cmpsl
mov
mov
into
popa
or
dec
inc
xlat
js
adc
out
cs
xor
jo
push
ret
mov
add
cmpsb
mov
fwait
loope
mov
mov
inc
fmull
shrl
ja
das
bnd
test
adc
pop
outsl
sbb
pop
jae
xor
pushf
jns
test
arpl
adc
mov
lea
out
outsl
jge
add
int3
and
ret
dec
jno
jle
add
gs
stos
mov
add
fdiv
mov
jge
in
mov
loope
negl
rcll
xchg
and
dec
xchg
dec
scas
clc
stos
jge
pop
sub
clc
xor
ja
mov
jecxz
arpl
jp
lods
pop
outsl
ds
arpl
jmp
jmp
sbbb
jb
jge
rorl
fwait
push
loop
pop
test
movsb
test
and
paddsw
sub
adc
inc
fmuls
cmp
sbb
in
adcl
je
repz
jg
push
mov
cmc
and
jns
fs
lock
lods
cmp
inc
cmpsl
test
jle
into
sbb
testl
jp
push
std
push
ss
jecxz
mov
jno
sbb
mov
negl
xchg
hlt
repnz
jmp
push
lock
aaa
scas
xchg
aam
pop
cmp
add
cmp
lea
xchg
pop
rcrb
ror
cmp
das
cmp
clc
fwait
lea
fwait
xchg
out
pop
push
mov
jmp
adc
into
jg
pop
push
imul
in
sub
movsb
ljmp
das
insb
mov
mov
cmp
data16
add
shrl
vcvtsd2si
pop
mov
dec
sub
lea
ds
in
popf
xchg
mov
adc
out
test
fcomps
pop
sti
or
clc
rol
pop
or
es
cwtl
jae
movsb
sbbl
jb
or
call
push
data16
addb
in
sahf
test
jge
fbstp
lahf
sub
in
push
mov
jecxz
lahf
fcoms
inc
pop
cmp
xchg
cmp
pop
adc
pusha
xor
lods
sahf
push
sbb
jle
mov
aas
mov
xchg
inc
nop
sub
jno
mov
adc
pop
cmc
cmpsb
loope
cmpsl
push
inc
fmull
xor
cmpsl
nop
dec
adc
inc
xor
out
repz
cmpsb
ret
mov
shrl
or
or
adc
dec
adc
sbb
cld
int3
movsb
cmp
sbb
cmp
ds
inc
push
shr
cmpsl
mov
jnp
jb
sbb
out
push
pop
sar
add
sbb
call
repnz
adcl
mov
fnstenv
or
stc
pop
insl
das
mov
popf
xor
mov
pop
inc
std
cltd
inc
jns
rcrl
dec
lods
xchg
rorl
decb
ja
fs
sub
push
imul
icebp
mov
rcrl
out
outsl
stc
pop
cltd
inc
mov
out
loop
daa
mov
ds
push
repz
mov
xchg
push
popf
repz
cmc
lock
stos
cld
shll
mov
xlat
aad
enter
bound
mov
addr16
and
fcoms
ja
cli
jg
lods
mulb
shlb
repz
fdivl
dec
pop
repz
jno
xchg
add
xchg
jnp
add
mov
dec
loope
lret
outsl
push
jae
daa
jg
fiadds
xchg
and
mov
pop
data16
jl
movsb
dec
pop
push
xchg
aam
rorb
jle
xor
cmp
mov
sbb
jns
nop
mov
adc
push
mov
mov
add
repnz
rorl
jo
and
into
unpcklps
and
bound
enter
cmp
jl
sbb
mov
in
pop
lea
cmpl
lock
and
and
xchg
add
xchg
fiaddl
fldt
push
icebp
movsl
pop
xlat
repnz
mov
mov
sbb
in
psadbw
sub
movsl
sbb
add
mov
clc
cmpsb
les
outsl
fnstenv
jg
xchg
stc
fwait
mov
clc
lods
int3
mov
cmp
pop
int
push
xchg
dec
loop
clc
repnz
repnz
ljmp
aam
jns
sbb
fistpl
mov
lahf
scas
pop
out
stc
int
es
cmpsb
cltd
cwtl
push
cmpsl
nop
ljmp
cltd
fnop
and
add
stos
push
pop
jmp
pop
cltd
lret
inc
fadd
fisubs
push
dec
outsb
dec
std
in
mov
lcall
iret
or
loopne
push
sbb
fidivl
int3
jb
mov
and
sub
test
jle
mov
call
xchg
fsubl
or
jno
xor
inc
push
add
pop
mov
outsb
push
mov
push
adc
jbe
fxch
cmp
cmpsl
push
sub
xchg
cld
jp
dec
loop
inc
enter
out
fs
push
push
addl
xchg
fdivrl
mov
insl
push
cwtl
cmp
enter
cmpsb
push
syscall
mov
test
push
negb
fmulp
add
xchg
les
cmp
pop
out
push
pushf
jg
outsl
leave
stc
rcr
jmp
xor
inc
mov
ja
mov
paddb
sub
and
stc
sarl
hlt
stos
bnd
pop
or
xchg
and
mov
xchg
pushf
mov
pop
pusha
jg
addr16
mov
or
push
out
je
addb
imul
imul
loop
xchg
cltd
fsubs
ljmp
dec
pop
int3
int3
pop
popa
dec
pop
xchg
jl
jns
aaa
cmp
lods
popa
mov
jmp
pop
pop
leave
mov
jo
and
aas
stos
test
push
scas
xchg
or
push
sti
ss
xor
jmp
dec
aad
addr16
aad
pop
aam
lods
adc
addl
pop
loope
push
push
mov
lods
sub
jl
lds
test
in
shlb
pop
xchg
clc
sub
fistps
xor
sarb
mov
or
mov
movsb
cmp
xor
mov
mov
aam
sub
dec
sahf
sub
cmpsb
mov
out
jno
iret
mov
int
rcrl
mov
aaa
enter
mov
dec
jp
jl
xor
pop
mov
lods
xor
push
jmp
lahf
das
or
jle
and
jnp
jae
push
repnz
cwtl
aaa
fimull
cwtl
arpl
sub
clc
iret
clc
mov
inc
pop
sbb
fldenv
jns
sub
test
pop
dec
enter
stos
lea
pop
cmp
inc
mov
mov
popa
xchg
mov
les
inc
cmpsl
orb
jno
sbb
sbb
ss
aaa
dec
dec
mov
jmp
cli
test
lock
pop
loope
or
pop
mov
cmp
movsb
outsl
mov
jl
xor
jae
int3
push
sbb
dec
scas
dec
mov
das
lods
fcompl
aad
cmp
pop
insb
inc
dec
fmuls
bound
add
nop
inc
xchg
inc
mov
and
cmp
xchg
ja
int
repz
and
xchg
test
ret
push
pop
dec
add
cld
cltd
cmp
dec
add
decl
adc
mov
sbb
sub
pop
lret
adc
jmp
fcmovb
ljmp
xor
mov
lods
cld
xor
fisubl
push
test
inc
sub
dec
repz
fdivl
dec
push
inc
mov
pop
mov
jl
cmp
mov
mov
adc
aaa
xchg
rcrl
call
dec
addl
adc
inc
cltd
mov
fisubl
pop
movsb
addl
test
cmp
sti
rcr
das
xchg
into
fiadds
pop
popa
cmc
lods
push
repz
inc
inc
cmp
out
and
and
fs
lods
mov
xor
popa
push
fildl
add
add
stos
inc
push
es
mov
aad
loope
rcrb
or
push
testb
ljmp
lcall
push
fiadds
addr16
negl
mov
jne
insb
or
push
xor
outsb
pop
and
adc
in
std
add
aas
dec
out
dec
pop
leave
je
mov
push
mov
mov
push
stos
jmp
loop
sub
mov
lods
dec
mov
repnz
jnp
sbb
test
mov
enter
ss
mov
push
push
sub
faddp
pop
add
pushl
lret
jae
xchg
push
jno
out
popf
mov
pop
dec
dec
sbb
rcr
cmp
jo
popf
xor
rolb
jp
mov
ds
int
pop
imul
mov
jp
mov
sbb
inc
add
mov
insb
mov
dec
adc
dec
pop
xor
je
sbb
xor
pop
xchg
fiadds
sti
fidivs
inc
jbe
int
cld
push
loop
fidivrs
nop
xchg
ds
rol
fstpl
dec
cmp
ret
out
lcall
sarb
cmp
lret
mov
call
sbb
mov
enter
lcall
sahf
jno
adc
stos
or
or
insl
inc
sbb
xlat
cs
mov
dec
add
mov
or
push
mov
shlb
add
out
cmp
pop
rcl
push
dec
ficoms
pop
lea
xchg
mov
xlat
inc
arpl
xchg
dec
adc
daa
shll
stos
sbb
sub
fstpl
aam
pop
cmp
outsb
mov
sbb
xchg
loope
data16
add
add
aam
push
xor
jle
imul
inc
test
lahf
ljmp
dec
cld
adc
lds
pop
add
mov
inc
lock
push
inc
jmp
push
shll
jecxz
pop
int
dec
adc
inc
dec
adc
test
xor
loopne
jnp
adc
in
lret
xchg
addr16
jb
mov
pop
inc
cmp
lods
jns
jb
sub
xchg
xor
notl
cld
inc
xchg
or
sbb
mov
xor
push
jmp
es
push
lahf
icebp
daa
add
inc
mov
mov
sbb
pusha
adc
jo
jae
inc
ficoms
gs
in
or
and
fdivrs
jae
fmull
mov
fcompl
cmpsl
pop
jno
imull
lret
cltd
stos
es
push
cltd
outsb
and
cmp
xchg
mov
lods
push
jecxz
cmpsl
pop
lret
arpl
push
cs
enter
imul
pop
movsb
mov
add
subl
jmp
into
lods
fcom
mov
fs
movsl
push
in
ja
subb
test
fldl
cmc
enter
sbb
orb
xor
cmpsl
xchg
orl
inc
into
or
mov
push
cmp
cmpsb
into
insb
loope
mov
mov
sbb
pop
aas
gs
pop
sahf
cmp
jmp
loop
jl
mov
sub
lret
cmp
addr16
hlt
adc
getsec
mov
lea
pusha
jp
xchg
dec
sub
xor
subl
xchg
and
test
mov
sub
jg
xchg
ret
fldt
aaa
sub
lcall
adc
rorl
dec
sub
mov
popf
sbbb
rcll
mov
xor
jp
cltd
push
mov
bound
inc
loope
push
stos
ljmp
shr
ret
sub
xor
xchg
cmc
cmp
cltd
cmpsb
adc
jp
out
les
mov
cmp
mov
ljmp
add
or
xchg
mov
mov
push
fnsave
lret
sbb
aam
xchg
sub
aas
adc
mov
sbb
push
sbb
loopne
xchg
in
icebp
pushf
push
loop,pn
cmp
out
mov
pop
mov
dec
fsubrl
dec
pop
lods
mov
pop
adc
pop
inc
jnp
nop
sub
test
jg
push
icebp
jb
cwtl
movsb
call
pop
lret
inc
push
xchg
andb
outsl
daa
and
iret
pop
out
ljmp
lock
insb
jae
push
les
cmp
cmp
jmp
add
xchg
cmp
gs
dec
lods
or
mov
push
jno
scas
mov
mov
iret
dec
out
xchg
repnz
inc
sub
por
push
lahf
int3
or
cmpsb
cwtl
sub
xor
notb
mov
push
rcrl
ljmp
xchg
pop
lahf
pop
add
push
inc
and
fmull
movsb
lea
and
imul
pop
mov
sbb
xor
cmc
ss
xchg
mov
push
inc
fildl
mov
cmp
or
out
dec
add
add
fwait
andl
cld
jo
xor
push
sub
out
outsl
inc
and
mov
adcl
mov
mov
push
sbb
cli
test
scas
fwait
ds
inc
ds
je
imul
sub
out
stos
xor
dec
pop
xor
xchg
add
jp
adc
sub
mov
jns
xchg
enter
in
sbb
cmc
adc
fiadds
int3
aam
js
adc
mov
xchg
mov
lods
lret
push
test
daa
adc
cld
mov
pop
aad
in
dec
ret
icebp
fwait
shr
rclb
jb
sbb
mov
ret
psraw
push
push
jle
xor
xchg
popf
scas
out
jno
inc
and
not
bound
subl
ja
add
cld
pop
rolb
mov
mov
pop
xchg
fucomip
loope,pn
in
ss
mov
notb
inc
push
je
cld
pusha
je
jae
dec
movsl
cmp
insl
pop
dec
out
sub
dec
push
pop
jbe
add
add
mov
je
cli
xchg
jecxz
popf
mov
iret
mov
mov
push
adc
imul
sahf
xchg
mov
pushf
or
out
jbe
and
arpl
sub
sub
cld
sbbb
mov
ret
fwait
je
pop
mov
jmp
fsubl
ret
add
test
popa
sub
and
data16
cmp
cmpsb
pop
lds
ss
in
je
test
cld
gs
gs
icebp
xchg
push
adc
mov
push
cli
xor
push
adcb
imul
sarb
jb
je
pusha
and
and
daa
cli
and
mov
sbb
jns
idivb
mov
adc
add
cmp
mov
and
out
jb
lret
jb
mov
xor
adc
fbld
andl
sub
sbb
fcomps
or
pop
jle
aad
jg
mov
jnp
mov
test
ja
pop
out
inc
lahf
das
add
loopne
lret
out
xchg
pushf
clc
cmpsb
ret
and
push
out
jl
mov
mov
in
lods
dec
std
stos
es
je
fwait
and
mov
and
jnp
cmp
xor
iret
pop
mov
test
cmp
adc
sbb
mov
outsb
pushf
int3
mov
lds
es
add
dec
adc
jne
jns
inc
or
ss
scas
movsb
dec
stc
push
clc
mov
sahf
out
out
mov
mov
xlat
mov
and
and
dec
and
dec
dec
subl
sarb
adc
fistps
imul
in
mov
imulb
mov
mov
pop
out
mov
das
mov
mov
dec
stos
jmp
adc
imul
fbld
jmp
adc
jae
inc
scas
sub
syscall
push
scas
test
fstp
xor
ds
cmc
push
sahf
jg
in
fdivrs
xchg
fwait
shl
xor
bsr
inc
mov
in
inc
lods
inc
pop
xchg
sbb
jg
loope
push
movsl
ret
lcall
cld
ret
push
stos
jecxz
sbb
or
mov
cmp
cmpsl
shrl
dec
movsb
mov
push
daa
test
in
je
insb
add
pop
outsb
inc
incl
scas
repnz
cltd
mov
adc
cli
test
pop
jl
dec
aad
imul
add
inc
gs
cmp
adc
cmp
mov
add
xlat
or
cs
hlt
pop
jne
jmp
sub
and
inc
fidivl
add
mov
fsubp
mov
fbstp
inc
xor
cli
jne
xlat
cmc
cmp
push
fnstenv
stos
ficomps
scas
out
lods
adc
out
jbe
movsb
out
outsl
sarb
int3
mov
jge
sbb
lcall
and
ret
mov
and
ljmp
mov
inc
jnp
inc
xchg
mov
push
dec
imul
ds
jmp
scas
jmp
pop
loop
and
scas
das
sub
inc
scas
bound
paddb
stos
lods
movb
mov
or
cmp
or
mov
fnstsw
xor
sub
aad
mov
dec
dec
xchg
incb
stos
xor
xor
push
mov
jle
cmp
jo
out
mov
jb
shrb
dec
pop
push
loop
jmp
leave
sbb
call
sbb
sahf
jne
sbb
push
or
cld
cmpsl
ja
arpl
xor
inc
rorb
add
into
dec
lock
addb
sbb
xchg
inc
leave
repnz
push
mov
dec
ret
sar
popa
stos
pop
shlb
mov
push
repnz
and
sti
test
rcl
xchg
and
jns
enter
jns
inc
int3
mov
hlt
pop
into
cpuid
data16
push
mov
adc
sbb
xor
lahf
gs
mov
mov
cld
fwait
jle
stos
mov
jg
mov
sbb
pop
scas
push
stc
scas
in
int3
test
std
jle
ret
push
dec
call
or
jno
mov
ljmp
xor
push
mov
adc
xorl
pusha
popf
test
push
jbe
enter
movsb
out
rol
imul
scas
or
into
push
aad
aam
shl
jecxz
out
inc
xchg
out
arpl
mov
and
mov
pushf
pop
ss
in
mov
jmp
and
cmpsb
es
mov
in
sbb
sbb
mov
outsb
pop
test
cmp
pop
mov
mov
aaa
push
pushf
scas
repnz
dec
fildll
ja
mov
jmp
cmpsb
fs
pop
stos
test
push
das
sbb
daa
in
inc
addr16
mov
add
dec
inc
stc
ds
inc
in
movsl
ds
push
ljmp
cmp
mov
jae
loope
lock
fsubs
repnz
fwait
icebp
fidivl
ret
adcl
push
loopne
andb
cmpsl
sarl
or
adc
pop
add
jl
push
or
ret
xchg
push
out
loop
mov
xchg
jns
in
cli
inc
pop
xchg
fsubl
dec
stos
push
stos
jae
mov
mov
rclb
or
sti
cwtl
cltd
xor
mov
aam
dec
jnp
fdivs
enter
xchg
arpl
mov
sbb
dec
test
bnd
fldl
movsb
push
sub
add
dec
fnstenv
sbb
jo
aam
shlb
xlat
inc
leave
pop
repnz
or
std
dec
cmp
cmp
sub
scas
fimull
je
add
mov
clc
imul
cmp
jge
outsb
push
or
aam
cmp
movsb
inc
mov
push
in
pop
sub
js
das
call
sbb
cmp
push
mov
filds
add
sbb
test
daa
sub
ja
xchg
add
mov
ret
push
mov
push
and
call
push
cltd
call
out
pop
popf
xchg
xor
jp
dec
inc
adc
lcall
sbb
pop
pop
je
adc
leave
xchg
popa
ret
sbb
enter
jge
repnz
aad
cmp
lock
enter
sahf
sbb
jae
jbe
lea
jmp
fwait
jae
inc
bound
in
sbb
mov
repnz
cld
pop
ds
sbb
nop
push
std
pop
es
jge
imul
ss
xchg
jmp
xchg
cwtl
dec
sbb
loope
push
shl
std
and
xor
cmc
and
popf
jle
iret
lods
sub
stc
int
inc
fadds
lret
push
and
sti
ficoml
je
shlb
jge
shrb
xchg
loope
push
icebp
mov
push
je
pop
xor
adc
sub
and
dec
out
daa
orl
in
dec
idiv
mov
jge
cmp
add
movsb
lods
ljmp
pushf
cmpb
dec
int
roll
in
imul
cmp
pop
out
sbb
mov
mov
xor
xor
add
ret
jb
sbb
dec
dec
xchg
out
xchg
adc
jl
or
mov
out
adc
nop
xorb
mov
push
sub
ret
adc
mov
or
andl
das
pop
or
rorl
scas
sbb
mov
imul
cld
xchg
stc
push
ja
push
pop
aaa
sbbb
pusha
fstpl
xchg
les
out
mov
arpl
adc
jl
movl
test
sbb
cmc
icebp
nop
shlb
das
xchg
sub
mov
mov
std
shlb
adc
jns
imul
repnz
jns
pop
pop
lock
and
xor
xchg
sub
add
add
mov
push
jbe
lds
push
es
dec
cmp
jl
xchg
dec
mov
push
mov
rcr
daa
imul
daa
dec
mov
sub
mov
cmp
jb
mov
jnp
hlt
or
or
xor
inc
pushf
mov
or
push
sbb
xchg
inc
pop
xor
loopne
loopne
mov
cltd
mov
jl
rolb
aas
aam
push
jbe
icebp
test
pusha
aaa
jb
add
jbe
jmp
push
andl
leave
or
mov
bswap
cmp
sbb
je
lea
push
addr16
pop
jle
cvtps2pi
mov
sub
jnp
sbb
cmc
scas
and
stc
imull
ds
mov
push
mov
xor
test
mov
and
cltd
adcl
jnp
mov
xchg
in
mov
js
fnstcw
loope
std
dec
jecxz
sub
jg
push
push
lods
cld
inc
fidivrs
test
lret
push
push
add
stos
inc
pop
test
jno
rol
pop
test
das
mov
sti
inc
scas
aam
imull
push
aaa
mov
jle
mov
loopne
jg
stos
mov
pop
push
out
clc
sarb
xor
mov
or
js
and
jl
dec
pop
push
xchg
jp
jae
mov
sub
jne
fwait
hlt
ljmp
xchg
scas
mov
dec
xor
pop
fistpl
addr16
jge
cmp
sub
lea
sbb
xchg
mov
iret
lea
cmp
dec
pop
sub
sahf
loop
enter
xlat
push
or
lds
jecxz
mov
sub
lods
push
mov
orl
js
jb
cmp
sbb
pop
cmp
push
fwait
jle
testl
mov
outsl
pusha
mov
pop
adc
mov
popf
push
inc
jmp
rcr
xor
jns
xor
test
fwait
scas
or
jecxz
cwtl
ds
arpl
cmpsb
imul
cmp
sahf
push
lcall
push
xor
aad
sub
rcll
insl
dec
pop
ja
cmp
sub
push
insb
jmp
add
mov
or
cs
pop
ucomiss
mov
inc
cmpsl
leave
jmp
adc
fildll
cmpsl
xor
jne
inc
test
jmp
jle
xor
lret
push
pushf
scas
xlat
mov
clc
push
out
mov
les
rcll
ret
xor
test
sbb
sti
les
or
add
repz
ffreep
loop
in
push
inc
movsl
push
xor
sub
sarb
inc
cld
push
stc
xor
mov
pop
lret
cld
push
pop
fbld
or
cmpsb
lock
repnz
je
or
mov
jae
xchg
mov
push
sbb
inc
mov
cli
lods
mov
ret
xor
pop
dec
out
add
shrl
roll
push
pusha
test
aas
cmp
out
push
cmp
xor
inc
pop
lds
push
shlb
dec
fists
jmp
sbbl
lcall
in
stos
bound
inc
fsubl
je
test
pop
push
pusha
and
push
mov
dec
cmc
das
adc
adc
xor
pop
pop
adc
fimuls
inc
mov
lss
jmp
sub
sub
dec
xchg
pop
xchg
out
or
gs
xchg
or
aaa
sub
sub
bound
and
insb
jns
jnp
inc
xchg
notb
mov
jge
mov
pop
lods
cmp
cs
push
xor
mov
inc
out
dec
stos
xchg
ss
aas
add
sbb
fisubrs
dec
jge
inc
dec
pop
idivb
lcall
inc
mov
inc
jmp
dec
shlb
push
jmp
cwtl
mov
push
or
sti
popa
xor
daa
ficoml
fisttps
stos
push
outsb
sti
pop
jmp
sahf
mov
fistpll
xlat
outsb
sbb
rol
aas
add
cmp
popw
or
jnp
je
and
in
xlat
cs
dec
or
adc
lcall
jno
xchg
test
ja
jns
lods
andl
inc
roll
bound
andb
popa
or
xchg
test
dec
movsb
mov
fdivl
xchg
jb
out
test
aad
lds
cmp
lods
testb
cmp
dec
cmp
fdivrl
and
test
xchg
into
aaa
aad
lds
pop
adc
loopne
and
orl
sarb
dec
loope
mov
ja
bndstx
loope
jno
pop
add
fmuls
stos
inc
cmp
outsb
popf
pusha
in
fsts
mov
aas
jecxz
mov
lds
mov
cmp
inc
fwait
cmp
fldenv
mov
jmp
inc
pop
loope
rorb
jmp
lret
jno
cmp
add
outsb
loope
pop
repnz
nop
or
push
sbb
mov
xchg
das
test
mov
jae
mov
shrd
fbstp
out
test
mov
aaa
jle
mov
push
or
inc
pop
jae
mov
push
mov
adc
leave
sub
xchg
or
adc
lcall
mov
sub
ds
fcomps
dec
push
cmp
dec
lods
adc
std
pop
sub
xchg
outsl
sbb
pop
add
push
mov
lret
or
pusha
add
je
sbb
push
inc
or
imul
fnstcw
mov
int
xchg
sbb
int3
lret
js
mov
mov
adc
cmp
cwtl
jnp
inc
xorl
xlat
scas
stos
mov
sub
fldenv
loopne
stc
lea
ss
ljmp
cmc
adc
stos
inc
pop
push
xchg
setb
lods
push
add
adc
lcall
pusha
inc
lret
mov
mov
xor
cli
jnp
push
mov
xchg
sbb
mov
lcall
or
rcll
addb
dec
adc
cld
dec
push
inc
fucomip
std
adc
stos
and
imul
jecxz
pop
pop
lock
es
push
es
cmp
jo
cmp
pop
sbb
pop
and
imul
sahf
in
mov
lahf
pop
dec
shll
fildl
test
dec
sub
cltd
rcrb
cld
add
lds
or
andnps
js
repnz
fs
and
add
mov
xlat
pop
lret
push
xlat
cld
bound
das
jnp
pop
add
push
xor
mov
lss
xchg
pop
jg
sbb
in
out
jle
cmp
or
pop
shll
out
ja
pop
sub
and
test
inc
cwtl
ds
lods
fistps
mov
mov
ss
jp
shrb
add
stos
gs
cmp
outsl
mov
adc
mov
xchg
jecxz
enter
loop
mov
inc
inc
mov
cmp
sub
and
jb
int3
movsb
insb
sbb
sbb
ds
repnz
jno
lods
pop
popa
jl
int
or
jnp
add
inc
or
jne
mov
pop
insb
adc
hlt
xchg
xchg
jecxz
dec
loope
xor
jnp
mov
cmpsb
adc
popa
repz
jge
dec
cmp
and
pop
push
xchg
addr16
sub
sbb
sub
jb
testl
mov
xor
cwtl
jmp
lcall
rcl
cmc
data16
xchg
jmp
push
out
scas
inc
test
and
pop
popf
xor
add
jg
mov
pop
xchg
sub
das
lahf
loope
sbb
mov
lcall
stc
lea
cmp
sbb
push
cwtl
imul
mov
loopne
cs
sbb
lods
aam
mov
mov
mov
jae
movsb
icebp
push
pop
dec
in
das
pop
insl
call
mov
mov
arpl
sub
sti
or
inc
insb
push
bound
aaa
cmp
into
negb
out
pop
push
shlb
ret
fnstcw
mov
popf
xor
push
mov
fistpl
cmp
data16
cmp
cmp
cltd
test
ror
in
jnp
xor
lods
fistl
out
test
outsb
xchg
sub
jmp
mov
clc
fsubrs
test
leave
cmp
leave
sbb
fstpl
movsl
out
cs
inc
loop,pt
pushf
mov
repnz
xlat
or
lahf
add
insl
add
fldenv
outsb
insl
lahf
push
jnp
fs
mov
pop
outsb
das
std
aam
jg
lock
es
enter
fidivs
sub
pop
push
in
mov
dec
mov
xor
or
mov
xchg
mov
mov
mov
loop
ficompl
filds
adc
cltd
mov
mov
fdivr
je
scas
fistpl
push
cmp
icebp
loope
rorl
stos
mov
sti
push
movsb
push
mov
cs
in
or
int
xchg
das
cmc
mov
sub
mov
xchg
pop
sbb
add
dec
xor
dec
pop
daa
sti
or
mov
fisubrl
das
mov
sub
movsb
sahf
lds
cmp
cmp
sub
ret
xchg
scas
mov
sbb
dec
scas
xchg
fs
in
in
jl
ljmp
inc
idiv
inc
comiss
push
icebp
push
xchg
add
lret
cld
mov
mov
xor
jbe
or
push
in
lret
cmp
push
cmpsb
mov
loopne
stos
adc
mov
mov
lds
adc
fldcw
xchg
imul
lock
push
or
xor
xchg
push
xchg
xchg
mov
jp
xchg
mov
inc
bound
insl
xor
ds
or
pushf
xor
dec
xor
push
mov
dec
clc
clc
cli
pusha
adc
cmpsb
cli
jne
adc
adcl
out
negl
inc
lods
jp
test
dec
into
scas
xchg
dec
mov
cmc
sub
mov
es
add
jbe
test
mov
into
repnz
pop
fmull
aaa
jmp
test
xor
popf
repnz
sub
sbbl
fnstcw
adc
inc
inc
nop
jnp
out
pop
cmp
scas
or
push
popa
movsb
or
icebp
dec
cmp
and
or
mov
cmpsl
mov
and
inc
xlat
and
jecxz
add
add
cvtps2pi
mov
cwtl
sbbb
fldl
jb
bound
mov
fs
jecxz
cmp
mov
movsb
outsb
dec
pusha
aas
stc
outsl
lret
scas
inc
dec
xlat
xor
mov
or
mov
pop
imulb
mov
add
xor
loop
and
data16
mov
push
mov
and
ficoml
xor
int
inc
aas
push
fisubs
cmpl
mov
sbb
sbb
cwtl
pop
shrb
dec
sbb
and
fwait
std
loop
adc
sbb
or
pop
and
push
mov
into
out
pop
sub
lock
addl
dec
cmp
mov
cltd
std
mov
mov
stos
icebp
inc
and
lcall
cli
shr
cmp
testb
ficoms
pop
mov
xor
call
sarl
es
xchg
cs
enter
dec
mov
mov
pop
cmp
pushf
mov
aad
das
xchg
sub
or
mov
and
inc
pushf
xor
addr16
sbb
cltd
and
fists
inc
xchg
push
cmp
push
pop
ljmp
notb
xor
push
into
cwtl
jns
jbe
xor
jno
sahf
mov
mov
leave
pusha
loop
mov
add
popa
jns
cmp
push
sbb
leave
mov
in
aad
mov
aam
in
jp
xor
cmp
dec
test
jecxz
shrb
lea
xchg
pop
or
add
jge
xor
mov
and
iret
pop
inc
pushf
cltd
std
cld
xor
add
adc
mov
ja
sub
mov
add
cmp
mulb
rolb
xchg
jnp
fwait
jbe
shrb
addr16
aaa
scas
ds
aam
outsb
mov
mov
sbb
imul
clc
je
orl
add
mov
fisubs
test
in
in
cmp
push
add
sbb
pop
iret
pop
and
and
fisttps
cmp
pop
dec
sbb
iret
xor
and
pusha
into
sar
xchg
add
outsl
cmpb
sbb
push
pop
xchg
mov
mov
push
loop
mov
int
das
lods
jmp
lock
add
test
in
xchg
ljmp
sahf
push
cmp
fidivl
add
cmp
aaa
adc
imull
push
push
jne
es
sti
mov
push
ret
dec
adc
xchg
pop
pop
pop
in
xchg
lods
xor
cmpsb
mov
std
xchg
orl
sbb
out
adcl
xchg
xor
rorb
divl
adc
or
pop
inc
push
les
lahf
negl
daa
adc
test
stos
stos
fadds
push
or
sbb
mov
adc
push
rcpps
jb
add
adc
xchg
mov
ret
ret
or
popa
pop
or
mov
lds
insb
addl
or
xchg
and
dec
cmp
in
imul
mov
test
pop
out
nop
pop
mov
sub
sbb
push
shrl
mov
cwtl
push
pusha
leave
dec
addl
fmuls
popa
or
icebp
inc
cmp
in
adc
rcl
aas
adc
mov
cwtl
stc
cmc
jbe
pusha
mov
in
adcb
mov
inc
pop
jle
ret
daa
xchg
xor
pop
dec
mov
leave
push
lds
xchg
rclb
jg
mov
fsubrp
sbb
lock
cmp
fisubs
mov
xchg
shrb
cmpsb
movsl
push
sbb
xchg
xchg
out
xchg
mov
or
inc
push
jns
fmull
lret
pop
ja
pusha
ret
outsb
cmp
cmpl
es
dec
xchg
test
inc
inc
jl
fs
nop
inc
push
mov
sbb
imul
jno
adcl
inc
fstpl
lods
sbb
mov
imul
push
xchg
scas
test
jb
inc
in
sub
andb
sbb
cmc
pop
aad
call
call
mov
and
test
mov
cwtl
ljmp
shlb
cmp
mov
lcall
negl
out
sub
push
es
pop
lock
xchg
imul
loop
xchg
add
je
jnp
mov
sar
test
insb
rclb
inc
dec
and
mov
js
leave
lcall
loopne
adc
subb
cli
xchg
pop
and
insl
or
std
xchg
test
cli
inc
hlt
cmp
lods
jnp
adc
pop
mov
xchg
scas
ret
dec
lcall
lea
xchg
sbb
icebp
push
ja
jnp
and
sub
stos
insl
jbe
push
dec
inc
sbb
mov
cli
adc
repz
add
mov
xchg
pop
cltd
adc
movsb
shl
cmp
loopne
xchg
aam
cmp
xchg
push
stos
lcall
adc
ss
imul
icebp
or
xchg
lds
pop
xlat
stos
jge
jno
mov
mov
pop
fistps
jbe
lods
dec
test
push
dec
shr
in
cli
scas
mov
vfmsub231pd
pop
fldcw
cmp
imul
xor
in
dec
inc
inc
xlat
jbe
xor
push
stos
or
mov
imul
adc
out
repnz
das
and
outsl
dec
mov
fcmovbe
sbb
jb
adc
stc
sbb
adc
mov
adc
xor
call
mov
mov
xchg
xor
pop
push
cli
adc
mov
sbb
push
fsubrl
sbb
mov
bound
dec
mov
push
mov
jno
mov
pop
fdivp
xchg
mov
jl
jle
mov
sbb
mov
cmp
mov
loope
cmp
lods
adc
shrl
pusha
shrb
xchg
xor
fisttpl
repnz
sbb
ffreep
jmp
adc
out
mov
std
pop
mov
lods
out
jb
mov
fisttps
cmc
je
inc
das
sbb
sub
jnp
lds
iret
add
cmp
cwtl
pop
mov
or
sub
mov
mov
insl
dec
jae
mov
fisttps
adc
scas
frstor
push
popf
stc
flds
add
mov
cli
aad
repz
dec
dec
pop
dec
stos
inc
jg
rcrl
sbb
dec
sti
pop
mov
jae
ret
adc
scas
inc
lds
pushl
mov
jnp
inc
incb
mov
xor
and
repz
lret
xchg
cs
imul
mov
jmp
mov
lock
pop
scas
std
dec
mov
ret
dec
das
mov
lcall
cld
dec
jmp
jle
js
test
insb
xchg
xor
out
sti
fisubrl
push
mov
aad
cmc
outsb
dec
push
sub
lods
jmp
xchg
mov
xchg
data16
dec
cmp
mov
push
jmp
mov
sti
stos
ficoml
lea
sbb
mov
mov
jb
pop
sbb
rol
cs
cmc
repz
sbb
lret
call
dec
das
scas
lcall
cmpsl
xor
jae
sti
xchg
aas
inc
push
sbbb
jecxz
xchg
movsl
mov
mov
or
cmp
jb
push
aam
hlt
lret
movsb
cmc
flds
inc
sub
dec
out
aam
sub
dec
dec
imul
aaa
mov
cld
test
lods
jmp
jl
test
addr16
cmp
dec
test
xchg
movsb
or
outsl
cmc
into
lods
aaa
jb
xchg
mov
push
jae
add
pop
lcall
push
jmp
popf
scas
fisttps
xlat
repz
dec
jge
es
aad
sub
inc
inc
dec
ja
clc
data16
movsl
adc
jbe
or
xchg
jge
popa
xchg
add
loopne
fiaddl
rol
adc
ficompl
leave
jge
shl
and
mov
mov
inc
test
dec
leave
pop
jno
icebp
rcrl
inc
arpl
pop
popa
jg
sbb
sub
lret
xchg
pop
or
loop
shll
sti
stos
inc
data16
lret
or
inc
xchg
lock
and
sbb
pop
daa
jne
xchg
icebp
jb
push
jnp
bound
mov
test
in
iret
icebp
cld
sub
aas
fwait
sbb
shll
ljmp
mov
jnp
enter
jno
fsubrs
mov
shrb
bound
inc
pop
mov
nop
arpl
popf
shlb
pop
clc
cs
cmp
lret
stc
pop
pusha
adc
sahf
cmpsl
shlb
lds
xchg
adc
fnsave
aam
test
cmp
push
adc
jg
cli
push
xchg
xchg
mov
xor
iret
add
cli
xor
dec
inc
in
xchg
xchg
sub
mov
scas
and
add
cmp
add
cmpb
das
scas
sub
dec
mov
add
mov
jl
movsl
inc
or
int3
lcall
xchg
jl
xchg
arpl
cmp
pop
call
les
gs
add
inc
out
out
je
jge
mov
push
jmp
loopne
jmp
stos
add
outsb
inc
cld
add
fmul
add
lea
into
cmp
arpl
pop
sahf
test
pop
hlt
adc
or
cmp
enter
icebp
lcall
int
sbb
arpl
hlt
sti
ja
ret
test
pop
mov
mov
movsl
or
push
outsl
push
xchg
or
dec
adc
jmp
ret
inc
ret
push
pop
insb
xchg
icebp
cwtl
xlat
sti
rolb
sub
mov
push
int3
inc
pop
repnz
insb
icebp
test
int
in
inc
pop
scas
cld
xchg
xor
loop
dec
xor
or
lds
cltd
cmp
out
test
adc
imul
cltd
xlat
xor
pushf
pop
sbb
shlb
insb
aas
push
clc
stc
jmp
xorb
add
aam
into
repnz
mov
movsb
out
push
pushf
out
adc
fidivrl
pop
and
int3
pop
outsb
jae
pop
lock
sarl
divb
cmp
jmp
mov
push
pushl
scas
cmp
lahf
leave
add
test
xchg
pop
inc
fimuls
push
ljmp
jno
mov
repz
xor
outsl
fwait
adc
and
jg
adc
rcrb
and
lahf
imul
pusha
xor
icebp
addr16
in
mov
pushf
cmpsl
and
lcall
ja
jp
cli
xchg
push
int
cmpsl
insb
push
test
xor
or
hlt
and
mov
lahf
incb
adc
fs
shr
addb
sub
sub
dec
gs
jecxz
xchg
sub
imul
fsub
cmp
xchg
in
mov
jnp
pop
out
repnz
jmp
out
lret
loopne
in
xchg
stos
add
inc
movsb
add
fs
mov
testl
mov
inc
xor
push
xchg
push
scas
daa
ljmp
sarb
cmp
shll
es
xor
lret
dec
jge
or
cld
push
stc
pop
and
lahf
cmpsl
aad
push
nop
enter
insb
or
push
pop
sub
sub
popf
rorl
loopnew
mov
insb
xchg
scas
addr16
mov
ja
jbe
ret
es
aaa
ljmp
jbe
lods
movsl
clc
add
and
push
sbb
cs
xchg
adc
test
sbb
push
pop
mov
or
fidivl
mov
leave
jbe
cld
pusha
mov
ret
outsl
xorl
mov
lods
sub
cmp
ss
bound
add
loop
dec
push
push
mov
adc
mov
pop
mov
dec
push
add
mov
pop
arpl
add
aad
repnz
jg
ret
xchg
mov
leave
roll
and
xchg
cs
push
leave
xor
mov
mov
lea
sub
dec
inc
pop
jnp
repnz
xor
bound
and
adc
and
sub
xlat
clc
mov
mov
inc
fdivr
cwtl
das
in
xor
ja
es
mov
jbe
mov
es
clc
movl
ja
pop
cmp
rclb
js
sbbb
dec
inc
cld
bound
push
sub
test
mov
fbld
jb
scas
or
inc
lods
fstps
test
ja
outsl
add
pusha
into
adc
leave
pop
ljmp
mov
lret
dec
or
icebp
push
mov
adc
fadd
sub
aam
sub
das
pop
cmp
sub
lret
lock
in
cmp
push
sub
clc
out
jno
jecxz
mov
mov
leave
frstpm(287
not
dec
dec
les
adc
cmc
test
sti
int3
adc
nop
sahf
in
add
mov
aam
pop
pop
pop
scas
lret
ds
movsl
sub
pop
rolb
mov
shlb
or
stos
pushf
je
ret
lods
inc
stc
mov
push
je
adc
mov
lock
ss
and
adc
mov
xor
xchg
dec
xchg
ds
shrb
or
sbb
pop
daa
inc
mov
sub
inc
shlw
lret
ljmp
dec
dec
mov
gs
shlb
jo
test
cmpsl
inc
nop
idivl
jmp
mov
adc
add
daa
add
shrb
add
push
std
dec
inc
popa
xor
insb
aas
xchg
sub
mov
xor
xchg
es
fsubrl
sub
bound
mov
and
repz
lcall
push
pop
inc
cs
xchg
sub
sbb
and
lods
cs
lret
ds
inc
mov
mov
fsubs
and
xchg
adc
adc
jmp
in
inc
ja
repz
pusha
add
push
movsl
lahf
and
cmp
bound
int
aaa
call
sbb
cmp
cltd
loope
repz
out
mov
aad
cmp
mov
les
es
icebp
lods
shl
divb
lcallw
int
xor
mov
inc
or
fwait
pop
push
andl
pop
testl
pop
movsb
xchg
adcb
fwait
insl
mov
sahf
mov
sbb
mov
ret
mov
mul
fldt
shlb
jle
jns
jg
es
xor
mov
mov
negb
jmp
dec
or
mov
cltd
std
adcl
xlat
xchg
cmp
lcall
inc
or
hlt
mov
pop
adc
pop
push
daa
loopne
bound
adc
jo
pushf
xor
push
sahf
stos
test
das
adc
outsb
xlat
and
xor
sub
imul
jmp
fstp
pop
xchg
daa
add
fs
add
ds
pop
inc
lods
stc
sti
lahf
repz
jp
push
pop
cmpsb
adc
sub
lds
ret
add
push
lock
repnz
jmp
sub
push
jp
xchg
cld
out
icebp
pop
push
fidivrs
stc
cmp
outsb
push
loope
pop
lods
test
pop
cmp
or
pop
lahf
cmpsb
sbb
pusha
testl
jl
xlat
cld
dec
pop
adc
lcall
insb
jbe
les
icebp
mov
jno
adc
mov
test
divl
add
mov
stc
test
loopne
stc
orb
mov
stc
je
nop
sti
jbe
mov
adc
sub
sahf
adc
and
out
dec
dec
icebp
sbb
aaa
and
push
fildl
dec
xor
push
push
dec
fbstp
mov
mov
xchg
mov
inc
mov
cmpsb
push
mov
std
inc
test
xor
mov
cmp
out
sbb
dec
adc
imull
or
push
cmc
push
sub
inc
rorl
sbb
mov
aad
shll
test
or
dec
jo
test
movsb
dec
mov
fstps
jge
pusha
and
daa
sbb
xchg
xchg
call
add
outsb
lret
out
xchg
shlb
test
inc
std
mov
sahf
or
mov
int3
gs
push
icebp
xchg
stos
jae
outsl
xchg
cmp
scas
xorl
adc
add
add
or
flds
pop
icebp
loope
in
aaa
mov
outsl
pop
lret
popa
mov
mov
addr16
imul
rcl
leave
add
shl
mov
lea
fwait
pop
repz
nop
daa
lret
xchg
scas
scas
push
dec
adc
roll
icebp
jl
rcl
cmpsb
lock
insb
cli
push
aam
pop
test
or
pusha
bnd
lock
dec
addr16
pop
cltd
imul
fistps
push
aas
mov
cmp
xlat
adc
add
mov
leave
daa
insb
inc
cld
lock
cmpsb
and
aad
inc
lret
dec
testb
je
icebp
mov
imulb
sbb
sahf
mov
clc
dec
pop
ficoms
jae
sbb
mov
mov
pop
repz
popa
inc
lret
sbb
jbe
xchg
mov
xor
rolb
mov
movsb
rol
mov
ja
fdivrl
cltd
iret
loop
jmp
pop
jmp
fbstp
add
jl
cmp
fldenv
or
pop
pushf
add
push
ljmp
inc
aas
add
adc
pushf
cmp
jmp
outsl
ja
ret
mov
and
mov
adc
mov
ds
xchg
dec
xchg
rorb
xchg
jo
mov
sub
arpl
sub
adc
lea
fsubrl
push
out
pop
std
cwtl
and
inc
loopne
sti
jecxz
das
sbb
mov
push
std
xchg
xor
mov
shl
mov
cmp
iret
jb
push
add
sahf
mov
inc
push
testb
enter
cmp
add
sahf
fidivrl
xor
outsb
mov
xchg
movsb
adc
jle
mov
dec
add
data16
fbld
push
fiaddl
in
fsubrs
clc
mov
mov
mov
lret
mov
or
leave
push
cmpsb
cs
test
lret
push
and
pop
roll
cld
lcall
in
dec
aad
sub
ss
arpl
loop
pop
sbb
add
cs
xchg
push
add
nop
xchg
pushf
add
ret
xchg
inc
or
cmp
xchg
sub
fbstp
stc
xor
mov
xor
popa
ds
aas
iret
cmpsb
ds
pushf
pop
lds
pushw
mov
xchg
leave
dec
mov
add
dec
jl
fildll
mov
inc
test
inc
pop
mov
xchg
adc
xchg
cli
rcl
ja,pn
jg
dec
xor
jp
dec
add
push
or
loopne
lock
out
rcll
mov
ficomps
aad
stos
sbb
mov
loop
or
lcall
int
call
and
inc
push
or
dec
pop
jae
jns
mov
ja
psubusb
inc
push
loop
cmp
adcb
cmp
add
pop
lock
iret
loop
ja
or
dec
pop
ss
add
sub
push
rcr
int3
incl
xorl
adc
and
aaa
inc
es
pushf
in
std
je
sub
xor
xchg
test
xor
xor
jecxz
mov
fwait
xchg
jecxz
into
pop
rorl
mov
push
and
hlt
mov
add
test
push
mov
lods
aam
das
cmpl
shll
aad
clc
mull
jle
sbb
and
mov
mov
rclb
cmpsb
std
push
and
inc
aaa
adc
dec
sbb
mov
jl
ja
bnd
add
incl
jl
lcall
stc
mov
mov
add
dec
loop
repz
or
imul
mov
rcl
stos
xchg
mov
int
dec
jbe
jecxz
push
push
lock
add
xor
aam
jbe
arpl
and
outsb
arpl
test
aam
push
mov
rorb
fwait
pusha
xchg
inc
mov
or
icebp
push
cmp
jmp
xor
inc
fldcw
add
sub
sub
mov
push
jne
fwait
xchg
mov
push
out
mov
or
xchg
push
xlat
and
inc
adc
xchg
neg
xchg
mov
or
sti
pop
ds
push
int
int
xor
addb
push
jmp
xor
out
xchg
jmp
or
mov
shrl
mov
aaa
jo
out
xchg
xchg
lcall
stos
clc
daa
popf
jb
mov
push
xor
out
or
fsubl
add
dec
and
aam
mov
aaa
dec
sub
xchg
sub
sbbl
mov
push
call
ror
xlat
mov
sbb
ror
stos
inc
lods
out
xlat
mov
scas
dec
test
inc
lahf
out
bound
pop
adc
sub
sbbl
add
ds
ljmp
inc
pop
jecxz
dec
pop
ret
adc
inc
push
push
decb
add
inc
lods
aas
mov
mov
imul
lods
rorb
outsl
jl
popf
xchg
add
out
push
fwait
je
hlt
xchg
push
push
sub
xchg
sahf
sbb
and
push
push
loop
stc
or
out
faddl
push
aad
dec
and
jg
push
jne
mov
inc
sbb
add
mov
push
inc
inc
cwtl
cli
jae
hlt
push
incl
les
and
scas
mov
pop
mov
mov
aaa
and
inc
xor
sub
dec
or
das
inc
movsb
cmp
cmp
les
aam
ret
adc
dec
push
fadd
pop
int
fxrstor
stos
pop
jbe
in
sbb
sbb
cs
stos
cmp
leave
jo
orb
dec
cmpsl
push
insl
sub
adc
repz
lret
inc
cmc
xor
in
mov
dec
inc
fidivrl
sbb
lods
pop
fstl
push
test
mov
cmp
sahf
sbb
fmull
sub
imul
mov
jl
pusha
sub
sahf
inc
and
mov
push
mov
shrl
push
pop
push
cltd
sub
pop
push
int3
mov
fsubr
xchg
mov
paddusb
mov
aas
mov
sar
xchg
add
shll
inc
nop
les
arpl
jo
lahf
adc
fldenv
rcll
flds
in
adc
or
mov
jo
cmpsl
ret
das
jbe
outsb
push
insl
mov
or
xor
lods
mov
xchg
pop
adc
adc
test
es
push
mov
repz
jnp
cmp
pop
adc
sub
sub
jl
pop
mov
test
fwait
pop
popf
sub
cmp
in
xchg
out
leave
ds
mul
pop
in
cmc
mov
or
call
cmp
je
outsl
cmpsb
lea
bound
adc
jb
and
fs
or
sub
pop
jne
lahf
in
ret
loopne
lret
pop
mov
addr16
inc
loopne
aad
in
rclb
pop
xlat
ret
jnp
nop
push
xchg
aas
dec
mov
call
insl
add
mov
jo
jp
fnstenv
sbb
fidivl
imul
pop
fcmove
aad
mov
clc
cmc
mov
lods
fcmovne
test
mov
push
clc
jae
lods
call
push
loope
sahf
adc
or
dec
inc
and
sahf
popl
jnp
ret
ljmp
sub
mov
xchg
jnp
cmp
jnp
and
sti
lcall
in
stos
sbb
add
or
rolb
mov
and
sub
loope
mov
adc
mov
out
popa
xchg
add
daa
dec
pop
daa
data16
mov
adc
ja
adc
fs
pop
scas
pop
adc
or
pop
and
leave
int
xchg
push
push
mov
push
mov
sub
shr
clc
repnz
mov
mov
js
outsl
mov
cmpsb
jb
mov
add
leave
mov
decl
enter
shl
xchg
pop
imull
jnp
cmp
icebp
insb
jl
cltd
push
fldenv
iret
adc
push
outsb
into
or
stos
lock
inc
adc
mov
cmp
cmpsb
lock
add
pcmpgtd
mov
jae
jbe
loop
mov
cmpsl
cmp
xlat
rolb
or
xor
fwait
push
loope
sahf
push
loopne
aad
es
sahf
mov
dec
call
dec
jae
mov
pop
dec
cmp
xchg
xchg
rcrb
mov
arpl
xorb
test
test
push
xlat
into
inc
add
popa
jns
arpl
inc
mov
and
cmc
pop
stc
add
sub
pop
pop
xchg
push
dec
idivl
repz
sub
add
lcall
xchg
popa
and
int
loop
ja
stos
int3
iret
and
push
ficoml
es
mov
fs
mov
lods
sahf
in
les
js
in
add
dec
xor
imul
mov
push
sbb
mov
push
hlt
out
addr16
rclb
das
stos
mov
lods
xchg
jl
jecxz
fdivrs
addr16
ds
add
adc
add
fimull
scas
mov
popf
pcmpeqd
les
hlt
cmpsl
sub
sub
adc
sbbb
out
xchg
js
std
and
adc
cmp
out
sbb
push
ss
push
out
jmp
clc
add
jg
push
js
inc
rorb
pop
mov
movb
bound
outsb
mov
inc
pop
fidivs
mov
xchg
add
jns
inc
ret
jp
dec
jnp
dec
call
push
mul
mov
nop
out
mov
sub
sbb
pand
mov
push
bound
pop
xor
mov
lret
sbb
jno
loop
jl
jne
jne
sahf
fdivl
ficomps
mov
pop
loope
inc
sti
xchg
xor
xchg
lds
sahf
sbb
pop
test
jnp
test
jo
movsl
xchg
inc
shll
divl
lcall
mov
scas
mov
notl
aam
or
mov
mov
mov
and
adc
mov
divb
sub
mov
adc
ret
mov
es
xor
fs
push
leave
and
iret
or
sub
mov
dec
push
jmp
jge
dec
mov
inc
lret
jp
mov
and
mov
js
js
pop
mov
jbe
les
pusha
aad
inc
es
es
push
scas
push
jo
pop
cmpsb
add
sti
sub
sub
xchg
mov
dec
lock
xor
dec
cwtl
inc
or
mov
adc
ss
mov
es
pop
xchg
adc
mov
pushf
aaa
call
int
ljmp
ficoms
in
fwait
sub
cmp
mov
dec
inc
sbb
xchg
jecxz
or
push
fwait
sti
mov
adc
data16
pushf
fwait
std
lock
fnstenv
in
mov
add
and
pop
cmpsb
push
iret
xchg
mov
push
rcr
cwtl
jno,pn
iret
lock
mov
iret
lret
addr16
mov
mov
jo
ret
inc
fiaddl
addr16
mov
xor
rorb
in
scas
or
inc
vpcmpeqb
stos
cli
and
enter
call
and
mov
and
pop
mov
and
mov
stos
movb
pop
mov
and
mov
aam
jne
jb
pushf
inc
push
cld
xor
arpl
lret
pop
imul
and
mov
push
and
popa
imul
je
or
xor
ret
iret
pop
leave
and
mov
and
bnd
lods
pop
hlt
push
mov
es
sti
decb
iret
mov
pop
scas
mov
cmc
lods
sarb
jnp
and
int3
dec
bound
jae
push
jmp
xchg
mov
repnz
ficoms
les
cmp
xchg
lods
adc
scas
aas
aad
fsubrl
pop
into
xchg
mov
fldt
push
jbe
dec
mov
repnz
sarl
mov
lods
lret
cmp
popf
sbb
fisubl
or
mov
dec
mov
ret
jbe
add
pop
mov
pop
leave
adc
jecxz
sbb
icebp
aas
int
add
scas
jp
sub
cld
adc
cld
lahf
push
fisubs
call
stc
nop
cltd
nop
jb
or
jge
cmpsb
mov
shl
icebp
pop
sti
fsts
clc
lods
jnp
int
stc
push
lods
sub
and
fs
loopne
push
lods
mov
push
std
test
inc
sbb
xchg
mov
insl
mov
xor
add
jmp
push
lea
fisubl
and
mov
push
sub
stos
inc
sarl
mov
mov
pop
ljmp
test
inc
gs
pushw
lea
lods
sbb
out
dec
mov
pushf
jecxz
fiadds
dec
xorl
ror
cltd
out
push
cmp
add
dec
enter
out
xchg
fnsave
cltd
or
leave
inc
jbe
and
lods
shl
sti
lods
adc
insb
dec
ret
cmc
popf
dec
test
loope
push
push
lret
sar
mov
sahf
arpl
repnz
adc
and
mov
xor
int3
imul
sbb
jo
add
stos
or
push
ds
sar
je
xor
testb
loopne
out
mov
cmc
mov
int3
adc
aas
push
push
leave
pop
sahf
xchg
cmp
mov
xchg
mov
sbb
into
push
mov
sub
jmp
cwtl
push
mov
pop
jecxz
xchg
inc
xchg
in
mov
aas
cmp
cli
cmp
js
mov
xchg
mov
push
push
jnp
int
das
fwait
bound
mov
inc
and
lahf
pop
adcl
fsqrt
in
popa
ss
cmpsl
cli
mov
cwtl
addr16
add
xchg
cltd
cmp
add
mov
fsubs
dec
sub
push
xchg
stos
xchg
or
mov
fwait
mov
pop
sbb
xlat
and
adc
enter
enter
std
inc
call
ficoml
pop
ret
add
sub
cmp
scas
mov
fbld
in
inc
push
mov
ficoms
dec
lret
js
es
or
cmp
sub
sbb
add
popa
lret
sub
jae
repnz
imul
mov
adc
fbstp
add
adc
mov
fwait
sbb
mov
into
pop
mov
xor
arpl
jbe
inc
lret
bound
addb
push
jb
rolb
sbb
lahf
iret
enter
adc
test
sbb
rcl
cmpsl
jo
mov
fidivs
push
loope
pop
ss
push
xchg
das
or
out
fpatan
mov
sub
jecxz
daa
rolb
lods
mov
out
fiaddl
ret
mov
mov
mov
lret
ljmp
xchg
cld
push
mov
xor
and
int3
cmp
popa
addl
fnstcw
or
mov
dec
mov
loop
xlat
fistpll
ret
jle
insb
daa
insl
push
cmpsb
movsl
dec
and
jp
leave
sti
js
scas
jnp
stos
mov
mov
in
or
fwait
scas
cmp
movsb
mov
pop
inc
or
push
movsl
pop
adc
xor
dec
xor
cmpb
add
jb
inc
ss
movsb
jecxz
popf
push
jmp
adc
cwtl
das
notb
out
mov
ret
shl
jo
and
ss
sub
scas
jo
inc
popf
out
aas
sti
push
jmp
and
mov
mov
mov
push
mov
inc
cmp
sbb
xchg
pop
hlt
mov
cmp
hlt
fistl
dec
and
push
mov
sahf
iret
iret
loope
ss
mov
and
jns
test
inc
and
dec
movsb
and
lds
mov
fdivl
mov
int3
xchg
scas
shl
leave
dec
push
out
ljmp
sar
mov
mov
jne
cs
sub
pop
inc
fisubrl
mull
sub
push
sub
pop
mov
lahf
movl
push
lods
ficoml
push
sti
jae
mov
in
les
fisubl
mov
and
int3
fmuls
pushf
fidivrl
out
push
mov
jle
fldenv
jo
dec
arpl
cmc
sbb
mov
movsb
inc
int
push
push
ret
out
enter
dec
ffree
add
inc
xor
mov
push
cs
xor
cs
hlt
fildl
inc
dec
jle
jmp
mov
or
lret
xor
xchg
aam
sbb
mov
push
jae
scas
adc
fbld
test
dec
fimull
dec
data16
test
ret
jns
jae
or
or
or
pusha
mov
pop
dec
cmp
xor
das
aaa
dec
les
stos
aam
repz
cwtl
fwait
pushf
scas
std
jl
imul
or
pusha
push
ljmp
inc
adc
sub
cmp
fwait
cmc
add
sarl
xor
mov
outsb
push
pop
sub
fimull
pop
fidivs
add
scas
jbe
jecxz
or
out
and
popa
add
ljmp
jecxz
out
push
xor
lahf
xor
sahf
test
clc
aaa
stos
popf
mov
xchg
lea
imulb
ds
lods
xchg
imull
dec
add
repnz
mov
orl
aad
mov
xlat
test
rolb
push
arpl
push
push
push
mov
cmp
cmp
jno
sub
popf
xchg
pop
repz
cmc
add
jp
xchg
gs
sub
fidivs
xchg
and
dec
cmp
sbb
stc
inc
cmp
sub
sub
jmp
jae
mov
ds
adc
cmpsl
mov
pusha
outsb
rorb
or
pop
pop
sbb
push
jle
loopne
notb
aaa
mov
adc
push
movsl
xor
xlat
adc
call
xchg
xchg
adc
imul
cmp
push
mov
loope
sbb
inc
push
mov
pop
jne
jnp
sbb
fs
stos
pop
iret
mov
ret
leave
enter
jmp
xor
jge
scas
push
cmpl
inc
popf
xor
mov
sub
testb
pop
int3
mov
imul
lcall
xor
and
cmpsb
jge
jl
add
call
loope
int3
jecxz
or
push
aad
or
cltd
jecxz
out
nop
or
add
jbe
adc
lret
sti
repnz
dec
test
mov
pop
je
aaa
fimull
mov
lahf
push
mov
shll
jmp
je
mov
add
jmp
sub
jne
sbb
push
in
fs
out
test
or
clc
fadd
sub
and
push
xchg
dec
mov
mov
cmp
sahf
test
fdivrs
dec
dec
mov
test
adc
jne
xchg
es
and
xor
xchg
xor
inc
add
cs
in
pop
fmull
push
sahf
insb
in
scas
out
cmpsb
push
jmp
negl
xor
or
stos
dec
sahf
popa
test
mov
lret
xor
xor
mov
jae
jo
rol
xchg
adc
jnp
popl
adc
clc
lea
and
adc
push
idivl
pop
mov
popa
mov
rcl
xor
pop
mov
jg
cmpsb
cmpsb
aad
fildl
xor
mov
mov
cmp
sub
cmp
popf
push
xor
aaa
or
ja
sub
mov
jae
lahf
fstps
mov
cmp
push
out
test
je
sbb
xchg
in
ret
shr
sub
rorl
outsb
aad
jecxz
addr16
or
inc
call
or
roll
or
gs
dec
lret
out
popf
mov
lcall
dec
or
std
adc
xchg
jnp
jbe
add
fisubs
sarb
icebp
sub
cmp
sbb
fxch
inc
push
fdivl
lods
add
xchg
and
dec
fdivl
mov
adc
pushf
mov
ljmp
popf
enter
lret
and
dec
test
imul
sbb
mov
xchg
xchg
or
incb
cmp
pop
cltd
or
mov
out
or
mov
jmp
pop
sbbl
or
cli
xchg
and
pop
mov
loopne
enter
or
sub
shrb
pop
lods
out
adc
ss
sub
rcll
jmp
in
sbb
outsb
addl
add
and
mov
out
aaa
arpl
adc
xchg
jmp
inc
pop
dec
add
jl
data16
insb
mov
loope
mov
punpcklwd
xchg
call
push
loopne
std
in
push
mov
pop
or
movsl
push
and
jbe
sub
xchg
adc
add
jnp
cmp
xor
mov
mov
das
dec
clc
sahf
roll
adc
outsl
mov
js
cmp
sbb
pop
mov
mov
xor
jmp
xor
repz
mov
dec
inc
fiaddl
mov
mov
sub
push
lcall
cwtl
xor
iret
mov
scas
xor
sbb
xor
int3
iret
mov
and
xchg
pop
frstor
xchg
sub
sub
sbb
lods
je
mov
bound
mov
lock
adc
mov
test
adc
pop
ja
pop
adc
das
iret
xorb
mov
ljmp
mov
xor
shll
shll
xchg
xchg
add
mov
pop
push
lret
lods
adc
outsb
and
push
jbe
sub
ficomps
or
test
shrb
push
cmp
lds
mov
jecxz
insb
or
push
loopne
inc
pop
adc
dec
pop
mov
dec
lods
and
jp
stc
mov
xchg
sub
xchg
xchg
push
insl
bt
test
push
enter
arpl
test
mov
ffreep
lock
or
sbb
sbb
ffreep
mov
ss
mov
sbb
cmp
les
mov
pop
xor
into
out
and
push
push
or
fsubl
imul
imul
rcl
sbb
push
int3
stos
adc
daa
xchg
mov
ret
pop
lcall
xchg
cmpsb
imul
aam
out
clc
lds
popf
jbe
cli
adc
test
hlt
add
dec
inc
add
btl
popa
xor
mov
imul
fistpll
andl
fcmovnbe
push
in
jmp
mov
cmc
pop
mov
les
adc
or
scas
fistl
adc
subb
and
loope
sbb
cli
inc
sbb
leave
xchg
sub
loopne
sbb
xchg
mov
ret
mov
cs
dec
into
add
pop
call
nop
cmpsl
and
or
mulb
xchg
sub
cmc
mov
inc
pop
push
mov
aas
push
fstpl
dec
push
add
inc
dec
xor
xchg
adc
sbb
rolb
mov
pop
pop
jp
shrl
call
sti
mov
aas
loop
andb
push
outsb
stc
pop
mov
push
xor
xor
pop
xchg
or
lods
and
inc
sbb
push
leave
ficompl
fs
cmc
leave
cmp
mov
into
lcall
arpl
dec
shlb
dec
mov
int
call
pop
pop
ljmp
ret
and
sub
push
cwtl
xor
mov
adc
xor
mov
es
jg
aad
std
pop
jp
gs
orl
orl
lods
ss
test
add
lds
rolb
jb
add
fisttpll
dec
lahf
xchg
ret
push
pop
cmpsb
dec
test
adc
xor
dec
mov
iret
xor
push
adc
mov
jnp
inc
pop
mov
jle
fcomps
push
movsl
daa
xor
cltd
add
push
ljmp
jno
mov
inc
jmp
sub
jmp
mov
push
sbb
sub
pushf
enter
ret
cmp
out
sti
leave
push
inc
mov
xchg
stos
lret
xor
mov
add
ljmp
pop
sbb
imul
scas
and
push
mov
inc
lret
push
xchg
std
or
xor
into
pop
push
xlat
outsb
addb
cltd
in
movsl
and
ds
add
push
lods
lock
int3
jg
aaa
inc
push
aaa
or
xchg
data16
mov
cmc
sub
jns
dec
lcall
xor
adc
mov
ja
mov
jle
cmp
push
dec
fidivs
mov
call
push
push
dec
outsb
arpl
jnp
or
mov
shll
mov
or
push
fiadds
inc
pushl
cmp
pop
push
dec
cmp
fsub
js
lret
cmp
dec
adc
cmp
adc
lret
stc
sarl
jmp
cmp
aas
pop
out
jp
subl
inc
test
xchg
dec
loope
cmpsl
lods
sbbb
and
sub
lds
mov
adc
mov
xor
scas
mov
pop
sbb
push
push
test
loopne
and
ret
out
inc
lret
mov
push
push
jg
test
popf
xor
mov
cmp
insl
and
jle
add
std
xor
add
test
sub
popl
xchg
loope
mov
mov
fldpi
insl
leave
xor
mov
pop
std
pop
push
or
xor
lret
insl
push
sub
pop
sub
shll
stos
gs
pop
jo
outsb
lds
pop
insb
xchg
ds
stos
scas
mov
cmp
test
fidivrl
push
adc
in
add
sbb
push
push
pop
jmp
jnp
repnz
mov
dec
add
daa
mov
or
dec
lods
mov
add
mov
in
push
popf
imul
outsb
in
mov
insb
xchg
dec
push
int3
mov
ss
movsl
test
cltd
stc
push
hlt
xor
es
mov
stos
iret
fcmovnu
cli
mov
mov
std
jmp
push
pop
push
xchg
push
sub
addr16
xchg
dec
push
ret
pop
js
ljmp
mov
lret
adc
push
inc
in
mov
dec
ljmp
fstpt
cmp
std
test
das
lret
jmp
mov
sub
mov
jge
addl
mov
xor
cmp
repz
dec
fidivrs
or
cmp
fisttpll
sub
fldenv
mov
add
out
roll
and
int
mov
ds
pushl
fwait
mov
inc
and
push
mov
test
and
add
pop
mov
outsb
dec
test
dec
in
fldt
out
add
out
xchg
in
int3
jo
icebp
sbb
dec
mov
imul
cmp
dec
inc
mov
movsb
pop
mov
clc
mov
lods
arpl
movsb
pop
dec
in
jl
push
jb
gs
xor
sbb
mov
insb
fs
jmp
ss
aaa
sahf
xor
mov
fisttpll
sbbl
lret
and
repnz
addb
add
sbb
push
pusha
cmp
dec
dec
lea
jle
insl
mov
and
stc
je
inc
and
in
stos
lret
mov
and
pop
jne
daa
adc
dec
cmpl
cmp
out
dec
inc
les
pop
stos
dec
pop
fnstsw
lods
mov
push
sbb
xchg
fiadds
mov
pop
xor
mov
into
xchg
cmp
stc
xor
mov
or
sbbb
sub
test
out
sahf
sub
rcrl
imul
push
push
push
push
jns
in
andl
or
cmp
push
jl
je
add
pop
mov
jae
imul
sbb
push
repnz
clc
sub
fiadds
scas
push
adc
pop
test
das
xchg
bound
adc
int3
add
ja
adc
add
mov
push
lods
add
push
lahf
and
adc
outsb
loop
das
mov
mov
push
mov
repnz
gs
sbb
cltd
inc
pop
add
sbb
shrb
add
ret
je
lock
push
sub
pop
cmc
xchg
inc
aam
cmpsb
mov
enter
xor
jae
es
jge
mov
jmp
or
sbb
shrl
mov
lret
push
jecxz
lods
mov
jge
inc
iret
pop
ss
imul
jno
pop
lret
pop
dec
clc
or
ret
lea
mov
aam
test
mov
test
std
push
dec
dec
js
push
movsb
xor
daa
mov
mov
mov
dec
aad
in
jnp,pn
add
xchg
jnp
mov
cli
push
das
pop
lret
sub
xchg
std
aad
test
xchg
jne
pop
sbbb
xchg
loopne
cmp
hlt
dec
add
and
out
xchg
test
out
pop
outsb
inc
and
or
mov
jmp
push
add
shrl
jg
xor
mov
ret
add
xchg
push
push
and
pusha
dec
dec
add
cmpb
and
lea
stos
inc
mov
testb
hlt
fucomip
aad
jnp
xchg
adc
inc
jno
into
and
in
in
sub
loop
rcll
clc
scas
ret
fdivl
dec
cmpb
jg
jns
jl
push
pop
mulb
cmp
mov
pop
sub
push
and
push
jo
fiaddl
or
jecxz
orl
fidivl
jne
or
in
rcl
addr16
add
or
stos
clc
es
ret
shll
mov
lcall
inc
sti
addr16
fs
or
and
in
mov
ja
bswap
lds
gs
add
jecxz
add
xor
inc
jnp
imulb
pop
lret
push
int3
xor
inc
sbb
add
mov
ds
pop
popf
jae
loop
aaa
nop
das
out
pop
push
or
test
add
mov
xchg
cld
xchg
test
incb
and
fwait
mov
and
sbb
insb
pop
cli
cmpsb
sbb
sbb
test
jge
adc
push
mov
mov
loop
test
hlt
ds
ss
adc
or
mov
add
aas
add
inc
xor
pop
std
loopne
and
mov
arpl
xor
and
xchg
inc
outsb
rcr
int3
fdivrs
mov
outsb
jle
mov
mov
sub
inc
sti
add
dec
lcall
idivl
xor
inc
xchg
sahf
js
lock
mov
cmpsl
xchg
adc
or
cli
push
jbe
cmp
pop
cmp
pop
push
outsb
rorl
stc
xchg
inc
rcrl
cltd
stc
sbbl
dec
js
in
lcall
ret
insl
jl
loope
adc
push
push
aad
test
in
insl
add
into
js
enter
adc
pop
jbe
popl
mov
lea
daa
inc
sub
lods
add
test
test
testl
pop
test
insl
dec
aaa
jb
and
inc
or
mov
scas
add
jecxz
scas
xlat
and
sarw
addr16
insb
jle
mov
ret
dec
inc
popa
inc
cmpsl
dec
adc
mov
pop
repz
pop
mov
enter
mov
ss
pop
test
mov
inc
fnstcw
jecxz
ja
ret
and
stc
jp
inc
rclb
sbb
push
scas
fwait
xor
ss
mov
jle
aad
lahf
mov
xchg
rcll
fiadds
in
push
xlat
je
or
and
push
add
pop
pop
sub
shrl
out
xor
cmc
loop
mov
call
cmpsl
jne
adc
mov
adcb
das
gs
scas
sub
ficoms
inc
repz
sti
clc
lcall
std
aas
mov
xor
push
out
loop
push
rcl
sub
imul
mov
mov
push
adc
mov
dec
jne
repz
addb
test
aad
ret
mov
fdiv
dec
sahf
movsl
xchg
movsl
lds
cmp
fidivl
sub
int3
in
mov
mov
fmull
adc
testb
jp
stos
outsl
xchg
dec
out
loop
test
ss
push
mov
test
dec
fdivs
dec
out
imull
mov
iret
sbb
les
inc
into
or
pop
or
pop
repz
arpl
jno
jl
cltd
xchg
xchg
int
mov
dec
fildll
sbb
xor
imul
mov
filds
lcall
cli
dec
pop
daa
dec
xchg
jecxz
insb
or
cmp
sbb
dec
fdivs
and
cs
ljmp
mov
or
sbb
insl
imul
jb
jo
aaa
sbb
dec
or
pusha
testl
mov
cmc
mov
dec
mov
subl
xor
fbld
inc
addr16
je
push
call
or
jle
add
les
xor
mov
xchg
and
cld
data16
loope
in
adc
inc
fwait
xor
dec
pop
xchg
test
inc
sub
sbb
data16
arpl
adcb
cmpsb
sub
lahf
cmp
xor
dec
inc
jmp
and
jno
xchg
enter
sbb
pop
mov
les
aam
mov
popf
xor
mov
stc
and
mov
fdiv
dec
mov
push
test
pusha
mov
dec
ror
jb
ljmp
and
out
imul
jmp
test
pop
inc
jge
jmp
dec
test
sbb
and
fstpt
push
push
cmpsl
jge
out
aaa
push
add
jecxz
nop
out
outsb
sub
scas
mov
fnstsw
sahf
cmp
fdivl
pop
clc
nop
pop
mov
push
movsl
ja
sti
xor
imul
stos
push
sbb
mov
xor
mov
int
rorl
lret
adc
mov
pop
sti
fildll
cld
scas
and
xor
in
aas
dec
adc
xchg
adc
loopne
data16
dec
or
mov
or
aad
dec
mov
out
pop
inc
lret
dec
cli
lods
cmp
push
mov
outsb
into
mov
add
stc
xor
add
cmc
js
daa
cmpsl
mov
fadds
mov
in
sbb
into
sbb
sub
pop
fbstp
sbb
push
adc
push
jae
addb
lds
pushf
pushw
xchg
mov
or
or
xchg
cmp
popf
ljmp
dec
fidivrl
push
add
cmp
adcl
arpl
mov
dec
popf
call
or
test
repnz
sub
jns
or
and
scas
sbb
push
stos
dec
insb
hlt
or
fwait
xor
shlb
andb
mov
mov
nop
sbb
leave
shlb
int
rcrl
dec
sahf
lods
in
push
ret
jecxz
mov
push
aas
cltd
test
push
inc
adc
mov
jo
sbb
jno
sub
and
cmp
insb
jae
icebp
adc
loopne
stc
inc
mov
push
cmp
inc
addr16
push
mov
sti
and
add
and
jp
subb
addr16
inc
or
xchg
xchg
hlt
loop
pop
test
lock
mov
dec
dec
mov
sub
lods
scas
enter
adc
cmp
xchg
ljmp
es
gs
ljmp
cmp
daa
xchg
add
sub
cmp
icebp
mov
jae
xor
int
mov
jns
adc
and
push
mov
sub
pop
add
jge
add
sbb
add
mov
loope
cmp
pop
inc
xchg
and
shrb
shll
jl
shll
adc
mov
dec
pop
jg
inc
icebp
nop
mov
jbe,pn
add
jl
test
pop
mov
addb
add
push
in
shl
imul
dec
push
jnp
xor
adc
pop
xor
lea
mov
testl
sub
and
ljmp
imul
jl
add
data16
or
jg
in
mov
adc
xchg
mov
imul
fildl
iret
sub
pop
loopne
adc
push
cli
pop
push
clc
mov
jge
xchg
rolb
pop
or
popf
scas
sub
mov
add
dec
ss
imul
pop
jmp
lea
inc
and
repz
jecxz
outsb
std
dec
enter
outsl
inc
dec
test
scas
ret
aam
movd
rol
lret
push
clc
cli
dec
pop
lock
mov
mov
shlb
dec
mov
popf
xor
cwtl
sub
or
push
popf
fsubrs
adc
scas
jno
mov
pop
push
ficoms
cmpsl
xchg
and
mov
ljmp
push
mov
cmp
ss
scas
fisubl
call
adc
adc
daa
cmp
mov
out
popf
sahf
or
xchg
aam
xor
lock
push
add
mov
sbb
mov
or
mov
stc
and
dec
pop
mov
dec
mov
pop
leave
test
aad
in
sbb
mov
mov
or
aad
inc
in
mov
adc
test
out
ljmp
adc
test
sub
lods
ret
jge
inc
fdivrp
sbb
lea
gs
xchg
adc
dec
push
shlb
in
mov
fdivr
out
add
bound
imul
xchg
jb
scas
xor
iret
inc
mov
fildll
mov
mov
mov
fldl
cmp
cmpsl
std
cltd
mov
adc
fldcw
pop
shlb
movsb
in
and
imul
test
test
in
stos
ss
scas
lret
ljmp
outsb
filds
push
mov
setns
nop
inc
stos
mov
cmp
arpl
insl
inc
sub
xchg
mov
and
shrl
mov
sub
push
enter
adc
cmp
sbb
enter
jno
pusha
sub
imul
dec
xchg
mov
insb
movsb
push
lods
mov
fnstenv
into
or
cld
mov
repnz
cld
push
cltd
push
xor
or
xchg
shr
push
movsl
sbb
jae
ss
mov
es
lods
push
pushf
push
and
jecxz
movsl
adc
lods
nop
dec
leave
xchg
pop
jb
mov
and
mov
push
sub
loopne
inc
sub
out
sub
sbb
leave
subb
and
mov
and
pusha
fcmovb
in
push
jne
push
shll
sarl
inc
ret
cmp
mov
arpl
pop
mov
cmpsb
adc
cmc
aas
dec
aad
in
orl
inc
pushf
fisubrl
or
outsl
repnz
xor
add
pop
test
xchg
xor
mov
sub
inc
jge
gs
ficompl
add
sub
faddp
xor
pop
mov
push
aas
fs
fwait
daa
mov
outsb
mov
or
adc
call
aad
es
pop
jno
gs
stc
adc
imul
mov
les
pop
cmp
or
ds
icebp
fisubs
outsl
mov
mov
or
jns
add
sbb
mov
inc
pop
cmc
dec
pop
mov
xchg
in
xchg
out
adc
fsubr
mov
lret
hlt
not
pop
hlt
add
mov
mov
pop
push
adc
pop
stos
jb
movsl
dec
sbb
mov
mov
jge
mov
iret
and
mov
pop
cmpsb
rcrb
movsl
pop
je
test
push
pop
inc
sbb
mov
sbb
xchg
ljmp
or
xlat
pushf
data16
dec
lods
sbb
fsubl
pop
mov
or
lcall
nop
mov
adc
mov
jns
xchg
lret
fildl
xchg
popa
xor
scas
or
adc
dec
ds
jno
xlat
sbb
xor
sbb
lea
jge
lcall
fs
aas
loop
clc
and
std
mov
hlt
mov
mov
push
xor
imul
jae
xchg
data16
lods
outsl
pop
adc
popf
cmpsb
aad
adc
pop
imul
push
loope
pop
out
lods
rcrl
imul
outsl
push
dec
sbb
mov
loopne
push
outsl
mov
mov
sti
and
cmp
fisttpl
sub
fidivl
fnsave
or
fldt
fsubrl
popa
arpl
ja
inc
int3
lret
cwtl
cs
inc
dec
push
sbb
nop
mov
ja
scas
lods
loop
icebp
add
adcb
mov
dec
pop
mov
jmp
and
pop
outsl
out
lret
jl
imul
repz
mov
lcall
repnz
out
stc
or
and
out
pop
pusha
mov
jne
in
hlt
fwait
mov
frstor
xor
test
dec
mov
dec
sbbb
jl
cwtl
pop
or
cmp
mov
pop
dec
call
inc
cli
sahf
jne
aaa
push
mov
out
sub
pop
and
adc
mov
adc
and
fidivs
fsubr
fimull
push
cmc
sti
popa
test
xor
fstpl
and
int
mov
test
sub
adc
inc
sahf
or
sbb
movsl
lds
jae
lock
xchg
push
cmp
pop
lods
js
fptan
adc
xor
lea
dec
push
repz
adc
mov
std
lcall
sub
testl
xor
stc
push
push
aas
or
fsubs
shrl
xchg
or
jae
iret
mov
loopne
in
sub
pop
mov
jo
jnp
lods
clc
xchg
sub
sub
cmp
push
mov
inc
and
mov
into
xchg
das
add
sub
clc
call
sar
jl
jmp
inc
xor
xorb
sti
push
aas
stc
mov
je
int3
movsl
imul
shll
dec
aaa
mov
hlt
orb
push
lods
and
cmp
jb
subb
mov
and
sub
dec
frstor
xor
bnd
mov
xchg
adc
inc
je
push
cmp
aad
inc
shlb
add
pop
jle
sbb
or
sbb
push
outsb
cmc
xchg
push
and
insb
imul
xor
mull
mov
movsb
jl
cld
mov
stos
in
leave
pop
mov
test
mov
add
jl
mov
mov
pop
jge
fisttps
push
push
and
pusha
aad
inc
mov
cld
sahf
push
test
dec
jne
mov
cmc
jae
mov
mov
outsb
push
hlt
dec
xchg
call
imul
pop
mov
divb
mov
mov
inc
and
pop
and
jmp
out
push
js
cmp
jne
mov
push
mov
add
sbb
and
mov
and
sub
out
xchg
jne
mov
mov
push
imul
inc
push
orb
push
xor
ds
dec
in
mov
fwait
mov
movsb
adc
push
fwait
or
aas
jmp
xchg
pusha
lods
inc
inc
jne
fldcw
imul
sbb
pop
inc
cmpsw
mov
xchg
mov
popf
sub
lret
push
mov
push
xor
das
outsl
push
cmc
inc
mov
jl
or
jns
xchg
push
lret
pop
or
in
in
stc
shl
imul
dec
xor
jp
sbbb
mov
dec
fimull
sbb
lds
jae
jno
fdivrl
fs
lods
sbb
jo,pt
out
mov
add
out
addr16
ud1
aad
inc
sahf
aaa
out
sahf
aam
add
sahf
xchg
mov
shlb
gs
push
aam
enter
mov
arpl
push
xchg
es
xorl
jnp
jne
jbe
mov
mov
std
sub
add
arpl
lret
sbb
or
or
and
jnp
movsl
jmp
xchg
rorl
adc
aad
aaa
repnz
sbb
stos
add
lea
rorb
mov
mov
dec
mov
mov
mov
xchg
adc
pop
mov
loope
cmp
jno
sub
cmp
pop
pop
dec
js
jmp
inc
mov
rolb
nop
das
pop
imul
add
dec
mov
xchg
cmpsl
sbb
popf
rcrl
push
insl
push
push
mov
mov
test
inc
push
in
push
jbe
fsubl
jns
addb
sbb
jle
lcall
in
mov
inc
push
adc
inc
push
mov
repz
sbb
sbb
je
and
pop
arpl
mov
dec
lds
adc
inc
pop
aam
mov
int3
bound
jg
out
pop
cmp
pop
xlat
scas
xchg
lock
pop
ss
mov
stc
pop
jecxz
xchg
test
imul
push
popf
repz
pop
dec
lds
jbe
xchg
daa
pusha
xchg
jo
sub
push
pop
call
xor
lahf
rorl
mov
stos
out
mov
xchg
js
fwait
sarb
sti
bound
cmpsl
imul
shrl
or
mov
and
xor
pop
jl
xor
fwait
push
cltd
fnstcw
fs
mov
pop
roll
pop
out
lret
and
xor
or
xor
pop
lret
adc
mov
and
and
in
aas
jle
shlb
cmp
pop
dec
push
dec
sub
idivl
addr16
test
cmp
test
jge
subl
ds
jmp
andl
and
fsubrl
mov
sbb
mov
mov
push
test
aaa
test
ljmp
flds
andl
mov
fbld
or
mov
jns
push
cmp
pop
es
sti
cmc
sahf
std
rcrl
mov
or
insb
popf
xchg
adc
or
aad
lock
xchg
ss
enter
pop
jmp
test
pop
leavew
enter
loopne
and
inc
xchg
popl
pop
out
aaa
and
imul
outsb
add
jb
add
cmp
cli
mov
sbb
clc
imul
xchg
gs
leave
cmp
xor
push
jno
in
cld
adc
mov
mov
dec
cltd
in
scas
or
imul
in
mov
rclb
and
fmul
cmpsb
popa
sub
cmp
aaa
notl
stos
aaa
int3
dec
test
fcoml
shll
sub
sarb
iret
fistpl
xor
dec
dec
loop
cltd
mov
mov
pop
sub
shl
clc
cs
insb
std
cmp
notb
dec
xor
sub
jecxz
cmp
lea
test
lds
and
repz
lcall
mov
mov
xor
scas
inc
enter
lods
jmp
aas
addl
sub
test
sbb
imul
sbb
sbb
out
cli
adc
inc
ret
stos
leave
push
push
call
loopne
pop
sarl
dec
pusha
fs
pop
and
out
adcb
sbb
push
mov
addr16
leave
enter
les
pop
iret
jno
inc
push
push
insb
jl
into
xor
mov
jecxz
jmp
mov
add
in
lods
test
lods
push
loopne
adc
mov
mov
fdivrp
jecxz
clc
mov
stos
loope
js
loopne
inc
int3
aad
repnz
jmp
lret
icebp
jno
divl
cmp
orb
jne
nopl
dec
pop
clc
lcall
pop
pusha
and
aaa
sub
mov
out
mov
dec
adc
inc
jbe
add
aas
aas
lret
adc
push
jge
incl
push
cmp
dec
or
mov
test
std
and
sub
leave
dec
adc
xor
pop
insl
pop
mov
daa
mov
add
mov
in
adc
insl
fcom
and
ret
mov
mov
test
xor
data16
ja
test
jo
js
inc
stos
mov
cltd
das
test
outsb
add
insb
dec
fistps
xchg
int3
inc
jo
jecxz
sbb
in
dec
fucomi
scas
sbb
fldcw
sub
or
push
call
jno
outsl
push
xlat
xchg
xchg
inc
inc
jge
and
or
push
mov
push
cli
jne
outsl
out
popa
gs
mov
mov
testl
daa
push
adc
mov
adc
jb
lea
ret
es
or
cmpsb
sub
in
divl
xor
adc
popf
es
sarb
sbb
mov
imull
pop
clc
fimull
cmpsb
int
fdivs
popa
clc
movsl
call
stc
adc
pop
and
cmp
mov
hlt
cld
aaa
or
in
sub
xor
movsl
jp
sbb
jbe
pop
test
mov
mov
jmp
aam
shl
mov
scas
dec
fildl
push
js
xchg
rcrl
push
arpl
std
enter
rorb
or
inc
movsb
inc
mov
sbb
popa
sub
loop
mov
xchg
imul
ljmp
inc
ds
ret
xchg
pop
int3
arpl
es
xchg
dec
push
mov
dec
insb
mov
fcmovbe
push
test
cmp
sti
mov
adc
popf
mov
sahf
mov
dec
mov
ret
loop
arpl
sbb
repnz
outsl
scas
or
fisubs
or
test
fsubrs
addl
xchg
dec
mov
jl
aad
fwait
pop
and
inc
out
dec
mov
mov
ret
xchg
in
fbld
cmp
push
inc
insb
cli
out
iret
sbb
pushf
ds
int3
sbb
push
jl
out
sahf
adc
rcrb
mov
cmpsb
adc
xor
bound
or
or
mov
mov
pop
insb
inc
mov
mov
mov
xchg
into
xor
pushf
out
pop
cmp
xchg
jnp
push
cmpsl
inc
jmp
cmp
sahf
in
sbb
mov
mov
adc
daa
fists
inc
pop
ds
out
jp
int3
es
xchg
push
outsb
jp
adc
inc
and
xor
pop
pop
mov
adc
sub
in
push
lcall
ds
mov
add
push
addr16
add
ljmp
or
dec
pop
mov
dec
out
iret
pop
outsb
int
aaa
jnp
subl
mov
gs
xchg
sar
mov
scas
mov
jle
push
call
ja
out
ss
mov
jno
ss
fs
inc
scas
cmp
outsb
fprem
in
jbe
ficoml
dec
mov
dec
in
std
jo
nop
aam
pop
pop
loopne
jns
add
cmp
cmc
mov
and
ret
shl
xchg
jge,pt
jo
jno
push
es
push
popa
mov
in
lea
mov
loope
or
lret
xor
sbb
or
mov
data16
fstps
jb
repz
stos
adc
fadds
int
or
pop
inc
sub
movsl
mov
push
push
mov
lret
xor
arpl
and
cmp
ror
jl
cli
mov
ret
xor
and
rolb
xchg
rolb
in
aas
insl
loopne
xchg
hlt
xor
dec
lcall
es
call
sub
or
adc
pop
xor
sub
out
mov
aad
sbb
and
jl
or
jno
lret
fldcw
pop
push
insb
add
pop
push
rdmsr
pop
packssdw
jl
lods
sub
subl
xor
test
inc
loopne
cmp
and
mov
xchg
repz
stc
adc
in
sub
mov
repz
je
cmp
mov
jo
lret
xchg
negl
cmpsl
ss
arpl
xchg
and
push
stc
loope
and
adc
pop
ds
push
sbb
mov
or
adc
pop
testb
or
adc
int
and
push
test
int
test
js
jns
les
dec
inc
in
add
jp
mov
dec
push
cmp
lahf
or
mov
sbb
in
jmp
or
mov
sub
xor
aas
lret
stc
push
xchg
sbb
xchg
insl
fst
cs
shrl
inc
dec
pop
add
mov
sarb
cs
or
jb
inc
gs
xor
lds
inc
inc
pop
test
fiaddl
jne
inc
add
cmpsl
imul
mov
fidivl
xchg
leave
push
adcb
adc
inc
mov
jle
push
mov
push
or
add
xor
out
addr16
and
iret
les
lds
gs
out
out
cmp
stc
imul
popf
xor
push
dec
cmp
loopne
xchg
push
test
in
mov
fbstp
sub
jns
or
cld
repz
pop
movb
add
movsb
cmp
xchg
and
icebp
movsl
cmp
adc
test
jne
sub
mov
xchg
mov
sbb
xchg
push
jp
in
jle
movsb
dec
mov
xor
pop
in
add
outsl
jb
cmpsb
les
add
mov
mov
sub
aaa
push
lret
xorl
int
outsb
sbb
mov
cmp
lea
lea
adc
sti
lcall
mov
aaa
inc
lds
std
scas
out
popf
repz
sti
test
inc
sahf
mov
loop
mov
lock
jno
or
mov
test
lret
data16
int3
pop
pop
adc
mov
aad
mov
arpl
lret
out
daa
dec
jle
dec
mov
mov
push
arpl
sti
mov
mov
inc
push
lret
shlb
fbstp
add
sbb
gs
xchg
xchg
mov
fisubrl
add
in
push
stc
mov
gs
rcl
and
xacquire
jnp
in
jecxz
lea
mov
cmpb
adc
adc
mov
adc
sub
push
xor
fcoms
jno
jl
fwait
js
clc
or
sub
dec
stc
fcmovnu
xor
adc
xchg
adcb
dec
push
shlb
lcall
add
fmuls
stc
jl
pop
mov
insl
inc
mov
ja
aaa
xlat
cmp
push
dec
je
xchg
movsl
imul
pop
mov
sti
testb
jge
xor
les
loope
cmpsl
adc
jmp
xchg
ds
test
cmp
jne
cmp
push
mov
lahf
fdiv
inc
in
pop
sahf
push
das
pop
xor
test
cmp
imul
xlat
lret
xchg
jns
test
mov
in
adc
and
loopne
dec
fwait
cmc
xchg
sub
push
hlt
addr16
stc
mov
imul
xchg
es
arpl
jl
fwait
jp
xchg
popa
mov
outsl
rcll
lock
addl
cli
iret
mov
outsb
push
xor
adcb
data16
add
sbb
inc
mov
mov
add
add
mov
test
and
lret
dec
je
idivl
push
sbb
push
lods
cld
mov
mov
ss
lret
inc
data16
xor
jo
out
push
cmc
insb
addb
push
fcoms
push
dec
xor
inc
cwtl
jle
lret
out
xchg
test
sbb
mul
mov
test
inc
aas
ret
sbb
inc
fstl
mov
xlat
cmp
out
or
dec
arpl
pop
sub
repnz
pushf
mov
movsl
loop
mov
psubsb
into
aaa
test
movsb
cltd
jl
out
and
jno
cmovp
sub
int
das
push
sub
push
ret
jmp
or
orl
or
int
sub
cmp
fnsave
fldl2t
mov
jne
add
xor
stos
mov
xchg
xchg
jne
xor
mov
shlb
pop
andl
push
dec
xor
sub
adc
popa
dec
mov
repnz
fcmovbe
xchg
ficompl
movsb
push
movsb
repnz
sbb
jmp
or
pusha
lret
cld
sbbl
jns
sahf
push
push
add
mov
cltd
pusha
jbe,pt
orl
jl
add
iret
mov
test
inc
mov
fwait
lods
xor
and
repz
mov
jmp
push
jmp
or
xchg
lock
inc
mov
push
inc
inc
xchg
dec
jecxz
mov
xor
jmp
cmp
add
push
lret
cld
jbe
rcrl
jg
inc
jl
je
fldl
fstpt
imul
lods
add
push
inc
scas
xchg
loop
or
pop
sub
popw
lds
sub
or
add
or
aad
pop
sahf
cmp
fsubs
orl
fwait
sub
and
fistpl
or
inc
lock
lods
pushf
pop
ret
outsl
ja
je
ficoml
xchg
lahf
pop
push
add
sbb
xchg
cltd
cltd
pop
xlat
mov
sub
pop
lods
mov
or
sub
les
test
add
outsb
ja
push
or
push
fdivl
ret
push
mov
outsl
movsl
inc
call
cmp
ljmp
mov
rep
shl
testb
movsb
mov
ds
shlb
sub
gs
jae
sub
add
cmp
sub
fucomip
rolb
mov
push
mov
adc
mov
push
clc
fmuls
imul
pop
in
dec
push
lods
push
rorl
push
xor
js
out
mov
dec
add
jnp
jp
test
in
test
xorb
orl
fs
jb
adc
insb
cmp
push
test
ja
lret
cmc
mov
inc
adc
rorl
fnstenv
adc
xlat
shr
push
popf
enter
xor
call
or
cmp
mov
ror
jle
jbe
ss
fcoml
mov
mov
mov
rolb
pop
in
imul
dec
xchg
and
cmp
aad
sbb
cs
lret
xchg
jae
in
pop
adc
leave
fnstenv
mov
inc
cmp
fnstcw
inc
adc
pop
cmp
mov
in
aad
mov
adc
pop
cmpsb
ret
push
fwait
insl
inc
or
fcmovb
xchg
test
repnz
mov
adc
jne
or
jbe
out
les
cwtl
stos
lret
bound
fiaddl
jmp
mov
push
add
mov
adc
loopne
push
xor
fidivrl
jbe
jp
adc
jb
or
mov
lods
mov
mull
xchg
lahf
testb
push
in
test
cmpsb
or
sti
jl
shlb
push
pop
lea
sbb
xor
mov
repz
adc
aam
mov
cmc
fdivl
dec
es
mov
es
xlat
xchg
inc
cmp
and
or
push
pop
push
ret
cmc
jmp
insl
outsl
pusha
fnstcw
rcr
leave
jb
add
ss
or
and
inc
mov
loope
leave
mov
sbb
push
ds
ljmp
jb
jg
pop
push
aas
aad
rcrl
addr16
cwtl
jne
scas
cmpsb
mov
push
daa
data16
stc
sub
daa
mov
ret
sbbb
in
jbe
test
push
push
cmp
decl
mov
arpl
push
call
movb
or
or
jne
cmp
ret
and
dec
sahf
xlat
ret
xor
dec
inc
adc
mov
sahf
out
cmp
and
lcall
cmpsl
rcr
mov
inc
aaa
xlat
bound
adc
lds
mov
in
outsb
adc
mov
pushf
dec
lods
test
fildl
mov
and
je
sahf
dec
mov
andb
aam
mov
jne
inc
subb
mov
jae
outsb
jp
call
jno
in
movsb
xor
cmp
sub
jp
jne
call
and
jae
fcompl
int3
lds
fsubrs
adc
dec
jp
push
aas
daa
xchg
sub
pusha
outsl
adc
mov
mov
pop
repz
add
loop
lods
pop
aas
enter
inc
add
push
call
jb
fwait
pop
in
subb
mov
cli
es
inc
push
ds
loopne
ljmp
cli
inc
stos
push
dec
xchg
jp
mov
test
std
aam
fwait
inc
stc
and
sbbb
mov
adc
lods
sbb
sbb
ja
gs
rcrb
push
pop
sahf
and
loopne
aad
out
stos
insl
fsubrl
je
dec
mov
aaa
pop
xor
icebp
testl
xchg
pop
cmp
scas
push
xor
enter
dec
pop
lock
xlat
push
aas
testl
sbb
pop
push
cmp
clc
add
mov
in
jmp
pusha
fs
xchg
sbb
sbb
imul
repnz
adc
call
or
cmp
out
inc
lret
adc
dec
es
popa
xlat
jno
test
add
cmc
arpl
xor
je
loop
jmp
loope
dec
lret
push
push
jmp
int3
mov
inc
repnz
sbb
out
jnp
lahf
mov
sbb
int3
dec
dec
rol
xor
dec
sbb
mov
out
stos
cmp
out
cmp
and
and
in
orb
rcr
adc
and
xor
ror
push
or
mov
iret
pusha
testl
xchg
jle
arpl
pop
xchg
sahf
pop
shlb
pop
lret
xchg
inc
jo
js
data16
mov
insb
sub
out
js
jb
gs
test
mov
call
std
add
xor
mov
fldenv
inc
aad
xchg
in
sti
std
adc
push
inc
je
js
aad
dec
mov
jl
xor
push
lcall
sub
loope
add
xor
fistpll
fbld
xchg
repnz
push
and
clc
ja
cmp
sub
stos
push
jbe
dec
stos
mov
mov
push
sbb
cmp
imul
xor
xor
scas
mov
mov
std
or
enter
cmpb
rol
cmpsb
mov
cmp
fstl
in
xlat
shl
xchg
js
aas
cwtl
xor
movsl
inc
mov
mov
mov
pop
icebp
scas
sub
adc
mov
dec
pop
cmc
fwait
push
adc
fdivrs
push
out
jnp
mov
out
outsl
push
add
daa
mov
pop
popf
ja
sub
imul
ljmp
insl
sub
xchg
xor
fldt
cwtl
xchg
cs
daa
xor
sarb
dec
dec
fstpt
ja
shlb
pop
adcb
test
loop
shrl
enter
or
sbb
icebp
sub
xchg
loopne
outsb
test
adc
mov
les
push
xor
push
repnz
adc
rcrb
add
jp
xor
movsb
lcall
adc
or
lods
js
xor
push
jmp
jecxz
mov
call
sub
mov
inc
jne
mov
shl
pop
xor
sub
add
ret
movsb
dec
add
fnstenv
cmp
xor
ret
sub
pop
sub
or
bound
fsub
jb
imul
dec
jb
pop
adc
adc
cmp
cmp
jge
je
int
popa
sbb
mov
imul
test
xor
cmp
shr
out
popf
sub
and
aaa
fldenv
xor
fcmovne
fmuls
inc
aaa
iret
adcl
fstl
aad
sbb
adc
mov
int
dec
hlt
ret
mov
scas
add
mov
nop
mov
mov
sbbl
pop
iret
mov
mov
repnz
xlat
jg
jg
and
sbb
push
and
lahf
stos
cmp
call
or
loop
adc
fidivrs
mov
mov
inc
or
sbb
popa
popf
mov
dec
or
test
fnstcw
jge
mov
nopl
pop
mov
std
aam
insl
sub
cmpsl
pop
aad
enter
into
js
arpl
lds
stc
sbb
aad
xchg
lcall
je
sub
mov
lcall
je
pushl
ret
imul
hlt
push
inc
cld
mov
mov
inc
in
xchg
sub
jae
gs
aaa
cmpsl
push
outsb
lret
cmpsl
out
gs
test
mov
fstps
fmull
cmp
not
pushf
jns
mov
mov
inc
or
clc
jo
xchg
ficoms
push
xchg
mov
dec
pop
inc
shrl
pop
or
cmpsl
push
movsl
dec
mov
fwait
sbb
mov
ret
hlt
cs
lret
in
jp
rcrb
stos
push
dec
pop
adc
cmc
cmp
fs
fidivrl
adc
ret
stc
xor
scas
pop
ffree
js
clc
xor
xor
aas
xchg
cs
popf
jo
or
gs
fcmovne
pop
add
xor
mov
push
or
jns
push
stos
xlat
pop
arpl
pop
xchg
dec
xchg
out
clc
and
out
dec
outsl
add
adc
xchg
je
and
mov
push
sti
pop
fisubl
lret
mov
xlat
xchg
mov
fsubrs
adcl
rclb
subb
mov
inc
popa
cli
pop
gs
mov
outsb
push
scas
insb
and
sub
mov
icebp
ss
stos
lods
mov
sbb
pop
lea
mov
lret
repnz
add
mov
adc
jb
mov
xor
cs
inc
jbe
or
push
pop
pop
xchg
bound
fidivrs
movsl
mov
xchg
or
mov
jg
mov
jno
in
and
add
rol
jmp
aaa
rorl
mov
push
std
loopne
cs
icebp
sub
jmp
xchg
shrb
mov
test
lahf
pop
out
addr16
sbb
loop
into
div
add
push
cmpsb
in
insb
or
and
push
mov
xor
cmp
icebp
add
xchg
mov
movsl
pop
lock
jge
xor
ja
aas
dec
mov
push
inc
xchg
jl
out
xor
aam
xor
pushf
xchg
mov
dec
xchg
pop
aas
cmpsl
iret
jecxz
je
mov
sub
lret
popf
mov
mov
add
or
mov
mov
jecxz
sub
inc
fcomp
movsb
mov
push
cmp
aad
clc
popf
je
imul
popl
sub
imul
sar
iret
stc
es
lock
dec
aaa
into
xor
cmp
lcall
loop
popa
push
jno
dec
imul
imul
inc
jbe
inc
inc
es
test
fsubrs
dec
lea
imul
push
cmp
sarl
xor
cmp
gs
sahf
shrl
call
or
dec
fwait
btr
out
bound
sti
loopne
inc
movl
mov
cmpsb
xor
mov
xchg
adc
out
xlat
popf
mov
pop
insb
in
sub
jne
cmp
pop
int3
pop
bnd
xchg
mov
or
inc
cwtl
in
pop
mov
mov
frstor
lret
xchg
ja
mull
or
mov
movsl
xchg
mov
fucomp
adc
adc
rclb
inc
loope
cli
push
test
xchg
arpl
xor
dec
adcl
mov
loopne
sbb
bound
or
add
adc
push
inc
cmp
pusha
or
adc
loopne
mov
daa
stos
mov
out
mov
and
int
xor
pusha
les
out
shr
and
dec
cmpsl
and
inc
int
lahf
imull
outsb
lds
rorl
pusha
out
adc
cwtl
pop
stos
pop
call
pop
mov
iret
push
lods
jo
lock
sub
mov
mov
movsl
cmp
xchg
loope
inc
xor
or
sbb
xor
and
push
shrl
pop
test
pop
test
aad
arpl
cltd
lret
pop
mov
xor
dec
cs
les
outsb
jmp
lock
push
push
bound
in
stc
pop
orl
daa
pop
pop
out
sbb
xlat
sub
shlb
sub
outsl
movb
pop
and
in
aam
adc
push
daa
inc
xor
scas
test
out
inc
mov
or
scas
xchg
mov
jae
push
int3
and
mov
sti
or
enter
sarl
cwtl
jge
lea
and
inc
in
aaa
dec
dec
mov
cmc
push
jmp
sbb
dec
xor
repz
cmp
mov
in
fstps
sub
outsb
cmpsl
add
push
movsb
xor
hlt
cmp
push
fisttpl
ja
inc
cld
jecxz
test
ficomps
insl
insl
push
pushf
outsl
lahf
mov
pop
mov
shrb
or
insl
mov
dec
xlat
out
stos
in
jge
ficoml
inc
pop
cmp
mov
xor
imul
subl
push
fadds
mov
lcall
popa
mov
jns
dec
add
insb
xor
jb
sub
inc
pop
pop
fidivrl
cmp
xchg
mov
adc
mov
xor
pushf
fists
push
test
jg
pop
nop
sub
mov
mov
lahf
and
enter
mov
inc
mov
fdivl
cmp
sbb
or
mov
mov
shl
mov
mov
mov
leave
or
bound
leave
imul
xchg
push
and
int3
cmp
inc
pop
sub
orb
mov
mov
in
pop
push
ss
adc
pop
cmp
and
ja
dec
mov
jo
jo
xchg
inc
inc
enter
mov
rorl
xor
scas
mov
mov
sub
inc
or
jno
xchg
dec
sub
bound
insl
leave
lret
mov
dec
cld
jle
push
ficoml
es
jg
mov
nop
inc
fsubp
mov
mul
sbbl
push
cltd
inc
enterw
lock
out
test
pop
cld
xchg
and
or
cmp
ss
negl
insl
pop
pop
mov
jge
into
sbb
adc
rclb
aam
cmp
fistps
adc
pop
fs
sahf
jno
inc
in
dec
pop
fcoml
stos
sbb
popf
push
mov
and
cwtl
push
push
pop
rcrb
jo
icebp
in
dec
cmpsb
sbbb
cmpsb
in
fsubs
adc
aaa
inc
push
scas
adc
xor
rcrl
mov
sub
jnp
add
cltd
inc
inc
bound
sbb
or
xchg
inc
and
mov
mov
xor
mov
ret
dec
fadds
cmc
lret
and
pop
and
dec
mov
hlt
add
cld
add
jns
and
push
jecxz
pop
adc
push
stos
jmp
aas
and
call
in
push
push
mull
ds
jp
pop
insb
dec
ds
push
adc
bound
jbe
fsub
inc
mov
ficompl
out
dec
cmp
inc
mov
cltd
xchg
iret
push
jmp
sub
das
mov
fcoml
les
scas
fcoml
imul
ror
scas
push
dec
add
inc
push
pop
sub
inc
dec
push
shrl
cmpsb
stos
das
cmp
mov
add
ds
xchg
fstps
dec
xchg
and
push
ret
fwait
icebp
jne
cmp
push
cld
xchg
test
cmpsl
pop
add
in
rcll
push
mov
mov
cmp
mov
and
jl
in
test
cld
int
mov
or
shl
adc
fistpl
fidivl
and
cld
sbb
stos
adc
push
push
mov
clc
inc
scas
inc
arpl
movsl
test
std
adc
cmc
stos
lds
popa
sbb
dec
add
ljmp
lret
or
pusha
cmp
es
icebp
mov
stc
push
in
ja
xchg
lock
ret
ja
test
mov
das
mov
in
pop
ds
pop
cmp
xor
pop
inc
pop
shrl
push
enter
outsb
cld
mov
arpl
mov
mov
jmp
mov
out
lds
out
jnp
cmp
push
mov
punpcklwd
xor
sub
adc
inc
pop
sbb
dec
mov
fldl
cmpl
inc
push
arpl
insl
inc
leave
rclb
push
js
or
in
xor
xor
lock
and
stos
lds
dec
fidivs
push
xor
xchg
cld
push
enter
and
rcrb
mov
mov
shr
hlt
cmp
ds
mov
dec
mov
adc
adc
xchg
in
add
jle
fcomps
cwtl
in
std
pushf
clc
push
je
dec
lods
inc
fcmovu
outsl
insb
pop
jl
scas
sub
adc
adc
jp
fmul
fsubs
stos
mov
fdivp
test
lods
repnz
jmp
iret
test
shll
pop
cwtl
fstpt
imul
xchg
push
and
in
les
cmp
scas
jnp
cmp
pop
push
mov
sbb
or
stc
mov
pusha
inc
xor
fs
mov
iret
daa
pop
scas
sub
cmp
je
ret
mov
dec
pop
inc
fld
pop
or
rep
adc
cld
ret
xchg
out
jecxz
sbb
jb
shll
cltd
jle
jge
out
fidivrs
xchg
pop
outsl
insl
loopne
mov
out
cwtl
mov
mov
mov
lcall
push
dec
in
scas
clc
adc
lods
dec
jecxz
js
mov
mov
lahf
aas
mov
pop
icebp
pusha
es
push
cltd
movsl
inc
jnp
adc
mov
cmpsb
xor
cmc
mov
pop
add
jne
mov
push
or
or
mov
lret
sbb
inc
or
lds
es
dec
jecxz
cmp
lds
sub
push
mov
out
ja
adc
adc
jnp
xchg
outsl
jl
notb
jno
pop
call
lods
aad
ds
dec
popa
mov
insl
or
mov
push
pop
icebp
push
testl
movsl
enter
lret
dec
adc
fstp
arpl
cmp
push
add
fsubrs
dec
xchg
cmp
jo
movsb
js
mov
cmpb
and
and
dec
mov
arpl
cmp
mov
loopne
ret
xor
jo
pop
les
gs
cmpsl
sbb
dec
push
jmp
std
add
sbb
mov
and
adcb
pop
jbe
inc
xchg
sub
mov
shr
gs
hlt
inc
ljmp
jno
call
in
push
jo
or
repnz
fs
call
test
imul
ret
or
push
mov
adc
cmp
cmpsl
insb
mov
push
inc
or
stos
ds
imul
inc
jns
outsb
xchg
push
dec
pop
ss
shrb
dec
cmpsb
scas
aad
sub
dec
xchg
mov
orl
push
or
xchg
scas
lock
daa
bts
ret
jo
jnp
fmuls
loopne
mov
push
pop
push
nop
pop
adc
push
sahf
lods
lods
mov
jb
aas
fldcw
ljmp
sub
int
roll
lea
imul
outsl
add
testb
mov
sbb
pop
fs
mov
mov
das
or
shr
mov
fs
in
test
incl
add
loope
loop
fimull
mov
push
cmpsb
jg
push
call
adc
mov
xchg
bound
mov
cltd
fdivl
push
into
jp
pop
jne
cwtl
adc
fwait
lods
fcoml
mov
movsl
imul
notb
insb
imul
rcrl
cs
scas
repnz
push
add
ss
and
in
lahf
mov
fwait
jnp
jno
scas
mov
mov
inc
push
dec
push
xchg
xchg
pop
jb
fwait
push
mov
ja
fstpt
pop
stos
ljmp
insl
add
or
addr16
adc
xlat
jecxz
pop
pop
ret
repnz
lret
testb
inc
pop
aas
addr16
jae
push
mov
addr16
cmp
xor
dec
popa
dec
call
xor
dec
notl
fwait
push
sub
jae
pop
pop
leave
xor
xlat
dec
xchg
or
gs
stos
sbb
jle
cmp
push
fidivs
enter
sub
ficompl
push
int
push
cli
mov
jne
push
add
add
add
xor
cmp
xor
sub
jbe
test
iret
pop
sbb
in
je
or
ficoms
xchg
lahf
pop
add
push
outsl
das
addr16
xor
std
test
arpl
cmp
testl
or
rclb
pop
cmpsb
mov
push
insb
or
cwtl
inc
xchg
sub
rol
fstl
test
jns
push
mov
mov
loopne
leave
sbb
mov
arpl
xchg
test
xchg
imul
fcom
and
aad
mov
and
xor
or
pop
es
bound
mov
sarb
fildll
sub
add
pusha
sbb
ja
dec
xchg
shrb
and
stos
cmp
out
dec
cmp
ds
lahf
push
movsb
mov
and
sbb
nop
pop
jo
shrb
and
test
push
lods
ss
aas
setl
movsb
inc
repz
jecxz
pusha
jp
mulb
dec
test
sbb
stos
sbbb
inc
movsl
xor
jmp
pop
lret
jmp
popf
xchg
sahf
subb
test
fs
iret
lds
push
jg
stos
or
mov
popa
mov
push
jo
pop
lret
je
aas
mov
adc
sub
push
xor
movsb
cwtl
xor
or
js
sub
pop
xor
adc
call
fcomi
jl
dec
pop
or
dec
jo
aam
pushf
lea
dec
dec
xlat
xor
scas
cltd
adc
in
mov
mov
imul
cli
pushf
push
sub
xchg
push
jge
clc
jbe
cmp
fdiv
inc
sbb
push
jne
rcr
xchg
sbb
jne
aad
in
call
fstpl
push
mov
pop
push
sub
jbe
aad
mov
adc
inc
push
xlat
cmp
movsb
test
test
imul
int
divl
shlb
inc
xor
mov
or
cmpsl
push
cwtl
fsubs
mov
outsb
orl
or
out
mov
pop
cmp
jb
add
xchg
dec
hlt
add
and
int
imul
iret
jecxz
mov
jnp
add
popf
aad
sub
divl
mov
shll
mov
mov
loop
in
xlat
add
push
cs
add
or
dec
add
jne
or
aad
add
jne
pop
loop
mov
mov
ds
inc
fidivs
cmpsb
sbb
mov
add
push
insb
aam
mov
mov
shlb
popa
cmp
scas
add
mov
fsubrl
dec
mov
dec
lods
cltd
call
and
call
sub
into
shrb
mov
int
xchg
mov
add
or
jp
adc
into
jg
push
xor
mov
push
inc
rcl
sub
mov
fldl
push
xor
pop
nop
jnp
sbb
push
mov
mov
push
mov
cmp
enter
lcall
hlt
out
xchg
dec
jne
sti
into
or
lret
mov
ficoml
fmull
inc
popa
push
pop
aas
adc
pop
xor
divb
fnstsw
shlb
mov
add
inc
jnp
jmp
jge
jg
adc
pop
pop
pop
popf
inc
pop
jle
pop
data16
xchg
sub
aad
pop
testb
adc
or
gs
loop
outsb
mov
mov
xor
and
jb
jns
mov
adc
sbb
lcall
jo
push
mov
cwtl
gs
lret
movsb
inc
bound
mov
cltd
xchg
testl
jge
mov
bound
mov
fs
out
mov
cmpsl
loope
pop
add
mov
arpl
out
movsl
loop
or
mov
iret
and
scas
cmc
add
enter
movsl
dec
outsl
cmp
jbe
roll
cwtl
add
mov
rcrb
push
inc
or
xchg
jnp
fdivl
ret
mov
jl
xlat
lods
movsb
insl
add
into
adc
push
pusha
mov
decl
mov
sahf
mov
mov
mov
jge
cmp
or
xlat
mov
xchg
jge
fdivrl
xchg
fdivl
push
mov
nop
sub
jl
dec
and
ja
stos
inc
sbb
dec
mov
rcl
daa
outsl
pop
pop
xsha256
cmpsb
push
inc
jae
aam
xor
cmc
cltd
dec
add
clc
xchg
xlat
movsb
xchg
push
adc
xchg
and
test
add
aad
arpl
jns
in
fnsave
xlat
and
pop
cmc
cli
pop
mov
scas
fists
cltd
je
cmp
ljmp
sub
or
adcb
mov
pop
dec
push
stos
aaa
pop
xchg
popa
xor
push
jo
ret
jmp
repz
cs
or
mov
pop
pop
in
out
sub
dec
mov
xchg
dec
add
std
scas
push
shlb
loop
xchg
dec
notb
out
sub
fucom
int3
orl
popf
mov
mov
fcomps
mov
rorl
add
inc
aas
cmp
jo
and
lods
push
jbe
dec
adc
sub
sti
xchg
bound
fistps
adc
ljmp
pop
mov
rorl
xor
sbb
add
xchg
ret
push
daa
fistps
popf
xor
mov
in
mov
and
jo
out
and
inc
cmp
cmpsl
outsb
in
lock
mov
and
pop
cmp
cmpsb
data16
dec
adc
rcl
mov
push
or
mov
pop
insb
inc
aaa
mov
popa
cmpb
mov
push
mov
and
lahf
cmpsl
rcrl
out
mov
pop
lds
mov
jnp
jne
lret
add
clc
jno
xor
and
inc
xchg
xchg
push
pop
lods
or
add
xor
xor
pop
dec
loopne
mov
popa
sbb
bound
sub
add
outsl
push
or
les
movsb
in
repz
rolb
xor
data16
scas
push
sub
subl
cli
inc
iret
jne
add
or
jp
or
das
inc
xlat
sbb
mov
test
xchg
outsl
dec
jp
pop
fimull
push
xchg
jge
lahf
mov
nop
fsubl
into
add
int3
fs
xchg
jge
out
in
mov
sbbb
ds
stos
call
sbb
lret
cmp
incb
push
inc
xor
js
mov
push
ja
add
arpl
xor
push
test
or
sub
fcmovnu
mov
popl
jge
cmp
and
inc
or
arpl
jo
movsl
insl
nop
fcoms
and
rclb
jp
es
test
push
fisttpll
hlt
mov
jns
push
and
adc
inc
es
push
cwtl
jae
jo
mov
pop
mov
xchg
pop
repz
imul
mov
fldcw
push
sub
sub
testl
loopne
popf
cmp
test
xor
std
xor
jo
jb
adc
cli
or
dec
stos
sub
add
in
and
icebp
pop
xor
and
cmp
xlat
data16
pop
addr16
idivl
ret
pop
jge,pt
repz
jne
xlat
repz
xchg
rol
mov
leave
cmc
mov
jns
test
negb
sbbb
and
inc
pop
lret
bound
mov
flds
loope
push
fbstp
push
scas
rcll
jg
pop
mov
xor
or
and
lds
xlat
outsb
jne
lret
pop
mulb
pop
shll
leave
add
mov
add
pop
jno
pop
xchg
xchg
fisttpl
movsl
or
add
dec
pop
sub
and
nop
inc
mov
into
iret
and
adc
push
out
jbe
sub
adc
ret
and
out
movsl
pop
pusha
cmpsl
ds
loopne
test
out
js
cli
pop
xchg
xor
push
sbb
sbb
bound
jge
scas
scas
add
cltd
mov
dec
fwait
mov
inc
enter
cwtl
in
or
push
and
lods
xchg
in
cltd
cmc
test
xor
add
mov
outsb
xor
xchg
das
call
and
or
pop
mov
addl
push
sbb
mov
pop
sub
pop
fwait
cmpsb
ds
cltd
cmp
jo
add
inc
xchg
mov
lahf
xor
inc
clc
cmpl
pop
dec
stos
fcoms
aaa
loope
or
ja
call
enter
jge
xchg
negb
and
push
jb
and
xchg
lcall
stos
loopne
iret
lretw
test
pop
rcrb
mov
rclb
aam
sub
fadds
stc
inc
pushf
mov
aas
push
mov
andb
in
fists
inc
pop
lods
dec
push
repnz
sar
pop
mov
ss
mov
ljmp
and
sub
in
scas
nop
in
aad
lahf
in
scas
dec
outsl
sub
aam
or
mov
clc
xlat
pop
int3
outsl
lret
fsubrs
fisubs
repz
enter
imul
push
push
push
aas
cmp
jne
xchg
inc
cli
jmp
dec
adc
pop
inc
imul
xchg
sbb
popa
clc
cmp
clc
and
hlt
push
cmp
mov
lret
test
add
sub
sub
and
xor
aas
push
cs
das
imul
mov
aam
xchg
and
adc
mov
cwtl
das
out
inc
lock
mov
je
push
mov
adc
mov
pusha
xor
daa
imul
dec
daa
xchg
add
push
push
mov
push
in
shlb
mov
inc
xchg
lea
ffree
or
and
sbb
push
mov
cmp
or
xchg
mov
testb
or
sti
xor
outsl
add
adc
pop
cmp
std
insl
adc
lret
mov
mov
jmp
xchg
loop
bound
sbb
fsts
jge
cmpsb
fisubrs
pop
push
jp
or
adc
in
sti
jo
mov
and
lods
mov
shrl
shlb
hlt
mov
add
pop
out
and
mov
fdivs
xchg
ret
or
testl
out
aad
and
push
inc
fistl
testl
shrb
pushf
push
mov
sti
mov
and
push
leave
mov
movsb
out
fdivl
cmpsl
mov
or
aaa
pop
cmp
mov
mov
pop
xorb
ss
rorb
pop
cltd
pop
cmp
stos
fidivs
inc
adc
jmp
std
xchg
jge
mov
jnp
fidivl
dec
jne
mov
sub
aaa
divl
mov
sub
cwtl
frstor
xor
testb
add
arpl
xchg
jne
iret
pop
shlb
sbb
jl
lods
dec
pop
and
or
dec
dec
fwait
out
dec
in
loopne
out
add
lahf
gs
dec
int
jne
fcoms
decl
stc
into
mov
pop
add
sbb
and
aad
lahf
push
decb
jl
xchg
sub
add
in
jbe
sub
dec
pop
jecxz
sub
sahf
xchg
push
popf
je
dec
stos
lret
loope
lods
adc
xor
loop
mov
xor
mov
push
cmp
push
outsb
enter
dec
sarl
daa
push
cmp
mov
jp
sub
xor
cmp
hlt
jnp
pop
mov
cmpsb
ret
push
out
gs
into
loope
les
add
jl
dec
fbstp
int
add
aaa
jg
push
cwtl
push
mov
lcall
outsb
std
pop
ret
iret
scas
cmpb
int3
xor
ja
cmp
mov
inc
ljmp
sub
insb
cli
xchg
xorb
fistpll
icebp
dec
xchg
repnz
mov
xor
in
test
or
inc
sub
insl
sub
cmp
jge
imul
and
js
push
stos
xrelease
je
cmp
mov
data16
mov
sbb
inc
push
fwait
jl
in
push
loopne
jbe
jae
push
mov
add
adc
fsubrs
movsb
mov
mov
pop
stos
or
or
pop
jge
mov
iret
adc
stos
in
ja
arpl
pop
pop
setb
pusha
mov
or
call
mov
add
insl
sub
pop
xchg
je
lods
inc
push
jecxz
ret
push
add
inc
cltd
inc
xchg
mov
adc
jecxz
mov
in
inc
test
jns
and
push
push
and
imul
add
mov
pop
std
adc
pop
into
gs
icebp
or
and
outsl
jnp
and
xor
in
rclb
or
adc
xchg
iret
sbb
and
jmp
push
mov
push
cmpsl
rorb
or
outsl
push
xor
inc
xor
enter
ss
pusha
add
xchg
mov
sbb
rorb
pop
scas
cmp
aaa
dec
sbb
mov
ss
jne,pt
push
in
movb
aam
fs
inc
sub
cwtl
inc
push
dec
jmp
or
mov
xor
xchg
mov
mov
in
daa
mov
aas
insb
dec
arpl
or
or
mov
or
xchg
shrl
jbe
lret
cmpsl
xor
fistpll
lea
push
imul
rcr
pop
xor
push
test
rcrb
or
push
lcall
sahf
xor
addr16
sub
inc
xchg
pop
inc
jle
xlat
mov
lea
sti
sahf
pop
push
int3
call
inc
push
daa
hlt
xor
add
or
call
or
jns
xchg
movsl
sbb
cmp
mov
mov
dec
mov
push
cmc
mov
cmp
mov
adc
or
jle
pop
jns
mov
or
aaa
add
sbbl
and
cmpl
pop
or
add
and
push
fstl
ljmp
sbb
insl
sbb
cmp
outsb
sub
fs
inc
mov
inc
lret
cmp
cmpsb
jnp
mov
fmuls
repnz
mov
pusha
mov
gs
stos
jg
xchg
stc
lds
push
sbbb
bound
hlt
xor
adc
rcrb
jecxz
outsl
and
mov
dec
out
push
add
dec
not
daa
sbb
popa
mov
lret
mov
or
cmpsb
inc
and
mov
mov
sbbl
cmp
xor
repz
jne
sbb
xchg
mov
stos
out
xlat
add
sti
push
xor
cmp
cmp
lcall
and
lock
sbbl
pusha
loope
stos
icebp
or
sbb
rcll
mov
mov
lret
pop
sub
xchg
popa
and
xchg
pop
sahf
call
repz
enter
jp
sbb
push
stos
cli
cwtl
or
xor
inc
lods
push
fs
dec
mov
dec
iret
sub
sub
push
mov
and
cmpl
or
out
and
adc
les
out
cmp
push
pushf
js
mov
les
or
jbe
sub
cmp
cmp
mov
dec
mov
push
roll
add
fwait
mov
inc
sub
das
mov
cmp
iret
adc
fdivrl
dec
jg
movsb
loop
push
fimull
outsl
call
and
scas
xor
outsl
les
outsb
dec
mov
xor
cld
inc
mov
cli
mov
pop
adc
sbbl
jmp
cmp
int3
mov
sbb
inc
pop
in
xchg
mov
enter
fiaddl
pop
popa
mov
call
jmp
pop
in
and
sti
mov
cmp
addl
outsl
or
mov
xchg
clc
inc
add
xchg
jp
out
nop
imul
leave
cli
inc
lcall
and
pop
leave
add
sarb
xor
mov
pop
pop
scas
popf
xchg
out
cmpsb
ss
out
ret
sbb
adcb
fdiv
out
inc
push
ret
sti
push
push
mov
xlat
sub
fwait
cmpsb
xor
lret
mov
fst
imul
cmpl
cmpsl
mov
sahf
in
into
es
lret
in
mov
fbstp
mov
pop
std
cmp
out
in
cwtl
dec
mov
inc
cmpsb
stc
cmp
cmpsl
call
add
cltd
mov
push
loope
in
sbb
xlat
outsl
pop
shll
jb
dec
lahf
xchg
sub
repz
lret
mov
xchg
shlb
pop
pop
dec
je
mov
xchg
sub
lret
mov
addr16
hlt
nop
adc
or
jno
icebp
daa
cli
test
cli
gs
int3
in
and
neg
outsl
sub
testb
negl
out
pushf
arpl
scas
mov
adc
mov
pushf
dec
shlb
and
jnp
adc
add
lods
sub
lds
fdivr
dec
pop
insb
jg
xchg
dec
int
or
sub
addr16
xor
add
es
fisttps
push
cmpsb
mov
jmp
pop
mov
pop
sub
test
scas
rol
add
stc
push
mov
popf
out
ja
repnz
pop
daa
das
pop
mov
inc
inc
into
jnp
jnp
lret
pushf
xor
jecxz
test
jmp
mov
xor
rcrl
cmp
pop
sbb
mov
cmp
push
push
or
cmpsb
cld
sub
inc
xor
mov
andb
mov
aas
mov
xchg
dec
fs
sarl
adc
pop
push
inc
fldl
fmulp
jmp
fucomp
xchg
jmp
test
mov
xchg
dec
xor
stos
inc
mov
dec
cmp
xchg
push
jo
push
mov
push
jle
mov
mov
shrb
mov
stos
sbbb
leave
les
cmc
or
dec
sbb
xchg
scas
inc
lds
push
jbe
repz
pop
rcr
push
scas
push
outsl
push
rcl
outsb
add
mov
dec
fstpt
pushf
movsb
mov
dec
jg
mov
lock
cs
cli
xchg
scas
and
dec
dec
ret
hlt
insb
rcl
mov
or
les
adc
aaa
ss
jno
cwtl
inc
ret
adc
data16
xchg
fsubr
test
movsb
sbb
jb
and
ss
xchg
popf
sti
fisttpll
xor
xor
aaa
cwtl
subl
push
push
xor
stc
pusha
cs
mov
jle
shll
jnp
outsl
ret
das
lahf
bnd
pop
in
xor
sbb
push
adc
rclb
push
and
arpl
ds
sar
cs
int3
cmc
inc
ja
sub
subb
jno
sahf
sbb
mov
int3
and
push
jb
xor
stc
jb
lds
aad
or
push
imul
test
push
rorl
sub
incb
int
sti
popa
xchg
jo
or
fbld
js
cmpsl
insl
sbb
cmp
push
mov
sbb
xchg
ds
add
mov
sbbl
xchg
in
add
push
pushf
ss
sbb
inc
mov
and
push
sub
in
sti
std
divb
add
out
push
jnp
fidivs
dec
push
pop
xchg
cmp
sub
dec
out
pop
cmpl
xchg
mov
and
lret
scas
testb
and
jbe
cwtd
xchg
adc
xchg
inc
mov
xor
arpl
aam
popf
cmpb
fimull
gs
or
lea
mov
xor
xlat
sahf
jne
out
scas
cmp
jb
mov
stos
rcr
push
sub
cmpsl
push
sbb
jmp
fcmove
jo
cld
testl
ljmp
xchg
insb
xchg
xor
js
iret
dec
push
pop
or
jnp
enter
rcrl
push
mov
scas
mov
lds
or
inc
shl
add
pushf
sub
inc
inc
fidivrl
and
fwait
bound
mov
data16
push
cmp
sbb
dec
mov
mov
pop
xchg
dec
mov
cmp
daa
mov
andl
faddl
jae
cmpsb
int
add
xchg
sbbl
and
leave
mov
add
ljmp
jnp
out
insb
adc
mov
roll
sbb
out
rcrl
std
or
pop
xsha1
cmpsb
pop
stos
mov
test
push
lahf
pop
xchg
jle
sub
pop
sub
dec
push
pop
out
cld
pop
int
rol
xlat
stos
mov
cmp
daa
pop
pop
andl
xor
add
inc
stos
cltd
push
xor
xchg
or
pop
cmp
inc
sbb
push
adc
push
mov
jmp
jno
add
jb
pop
scas
pop
call
out
repz
add
std
out
adc
mov
outsb
add
mov
mov
adc
mov
inc
scas
jo
leave
mov
xchg
xor
rcrb
imul
xor
mov
or
and
fwait
sub
lea
adc
pop
mov
or
pop
add
jbe
lock
adc
imul
je
sub
push
decl
sbb
sar
sub
jp
and
stos
icebp
xchg
dec
mov
lahf
addb
mov
dec
stos
push
inc
xor
nop
cld
mov
nop
das
adc
sbb
das
inc
call
loope
push
and
sti
push
mov
stos
fldcw
testl
ret
cmp
jecxz
jecxz
nop
fnstsw
mov
cwtl
jle
loopne
cli
fs
dec
sbb
in
mov
dec
or
push
mov
xchg
cltd
ja
pop
mov
dec
in
cmc
ret
packuswb
pop
jl
scas
scas
or
sahf
sub
sub
sbb
mov
idivl
fisttpll
mov
mov
or
jne
nop
dec
push
and
push
das
outsb
shrb
jne
movsl
cmpsb
mov
mov
xor
sbb
cmp
mov
xor
sbb
push
iret
data16
call
mov
xor
cli
and
inc
cmpl
shlb
jb
dec
adcl
push
jmp
ret
sbb
das
shrl
adc
pop
ja
jmp
and
shrl
xorb
mov
adcl
add
iret
xchg
push
add
test
jbe
inc
mov
add
jno
std
mov
push
sub
or
jbe
test
xchg
push
cwtl
fimull
ja
cmp
scas
push
aaa
sbb
leave
mov
lea
pop
lcall
loopne
roll
xor
loope
rorl
mov
add
lcall
jbe
lods
xor
ret
popa
xchg
mov
ret
or
pop
sbb
mov
addr16
aam
dec
or
mov
popa
mov
adc
subb
push
rorl
jle
out
stos
rcrb
add
add
je
test
ljmp
call
pop
fsub
fadds
je
sti
ficomps
or
push
mov
push
mov
test
insb
and
ret
inc
push
test
bound
pop
loope
add
push
add
cltd
icebp
hlt
adcb
and
mov
rdpmc
push
mov
cmp
add
jmp
fidivrl
mov
fwait
into
cmpsb
aam
mov
inc
xchg
daa
inc
sub
comiss
test
push
mov
sub
cmp
cmp
fcomip
sbb
mov
sbb
add
add
hlt
test
inc
ficoml
fimuls
movsb
lahf
stos
pusha
call
adc
cltd
orb
adc
jne
jo
cld
ljmp
sub
sub
notl
fs
ja
add
ljmp
lock
push
xchg
filds
fisttpll
jbe
mov
xchg
push
aad
fsub
push
mov
add
ret
dec
jo
notb
xor
leave
movswl
popa
and
sahf
int
inc
inc
lea
mov
scas
in
cltd
pop
out
sahf
xlat
xchg
inc
mov
push
fistps
stc
fildl
pop
fdivrs
inc
iret
stos
popa
xchg
icebp
dec
out
lea
lret
push
cld
add
std
movsl
jl
xchg
cmp
jge
add
stos
sahf
sub
lcall
loope
scas
and
mov
mov
mov
lea
mov
pop
push
xchg
add
cmp
dec
enter
in
add
sbb
add
mov
dec
mov
jbe
jo
das
push
or
pop
mov
and
xchg
push
push
int3
and
sbb
call
or
mov
mov
lret
jnp
hlt
das
pusha
repz
sbb
xor
popf
arpl
aaa
dec
aaa
or
push
inc
fs
in
cmc
jae
adc
pop
xor
int
mov
pop
out
sub
dec
push
cld
jnp
outsb
inc
popl
pop
daa
mov
mov
sbb
dec
xlat
cld
imull
mov
fisubs
loopne
js
sbbl
pushl
sbb
std
jo
xor
xchg
test
decl
xchg
sbb
dec
loopne
sarb
mov
xchg
cmc
jns
aam
sbb
rcrb
sbb
xor
in
aam
popf
xor
xchg
shll
xchg
mov
aaa
jecxz
ja
push
addps
mov
xchg
outsb
cmpsl
and
jbe
repz
push
pop
mov
jns
xor
sub
or
cmp
push
push
push
or
lock
cmpsb
inc
push
in
ja
push
lods
testb
jl
call
shll
or
lods
iret
xchg
daa
adc
scas
imul
mov
cmp
data16
xor
lea
fs
xor
push
inc
pushf
xor
repz
mov
mov
push
ljmp
xor
mov
add
push
nop
add
js
mov
push
pop
mov
faddl
add
and
xchg
sarl
mov
xchg
add
xor
push
add
mov
and
xchg
sub
jle
push
lcall
push
fistps
mov
adc
xor
ss
loop
xchg
pop
jnp
push
lods
mov
iret
mov
mov
xor
nop
sarl
or
ret
lahf
push
dec
leave
pusha
jl
and
nop
outsb
sahf
xchg
push
pop
insl
inc
lahf
jno
fisubs
in
or
jecxz
in
inc
shrl
dec
xor
call
xchg
les
js
adc
testb
push
or
add
xor
pushf
xor
in
pusha
fdivl
or
cmp
test
inc
mov
frstor
out
sahf
sub
gs
push
pop
dec
in
stos
in
imul
int3
outsl
inc
xor
ds
insl
push
xor
dec
pop
pop
repz
dec
rcr
aas
mov
inc
aam
sbb
dec
sbb
inc
add
int3
lret
dec
or
add
jge,pn
fnstcw
dec
xchg
jl
fsubl
les
mov
popf
sub
adc
dec
cmp
imul
mov
jnp
outsl
scas
adc
inc
cwtl
mov
push
cs
insl
sbb
inc
loope
mov
mov
out
mov
adcb
cmp
and
push
in
int
call
sbb
aaa
test
js
sbb
aad
movsb
aaa
cli
sarb
jbe
test
jo
xor
adc
stc
and
cmp
sub
scas
adc
or
add
gs
rolb
jne
mov
and
cwtl
xchg
mov
cmpsb
or
je
push
push
in
rep
loopne
mov
add
or
je
idivl
or
test
adc
fistps
bound
adc
mov
add
xor
not
fsts
or
icebp
push
xchg
lock
cwtl
mov
lahf
in
lcall
pop
cmc
mov
and
movups
jp
mov
int
in
mov
push
mov
add
inc
mov
sbb
adc
rolb
xchg
sti
cmovge
popf
int
dec
fs
jecxz
dec
mov
cltd
pop
in
xchg
mov
push
stc
aad
jnp
les
cmp
dec
pop
mov
xchg
cmpsl
pop
xor
lcall
push
add
sub
adc
mov
mov
and
dec
jecxz
sbb
adc
xchg
adc
xlat
push
push
mov
out
test
cmp
lret
bound
push
aaa
fildll
sub
mov
mov
dec
jb
inc
cli
sub
dec
or
or
sarl
daa
imul
mov
sub
hlt
and
loope
in
sti
outsl
aas
sbb
insb
inc
inc
mov
add
pop
inc
or
cmp
push
in
and
sti
inc
push
sub
cli
int
sub
lods
in
mov
push
push
mov
outsb
ret
sti
inc
dec
dec
icebp
sub
ds
inc
inc
add
insb
scas
dec
arpl
rcr
das
sbb
adc
lcall
cmp
ja
icebp
into
rol
sahf
xorl
sub
mov
cmp
mov
xchg
out
sbb
xchg
sbb
fidivrl
cmc
xor
sarb
outsl
jp
mov
jno
inc
aaa
push
cli
pop
dec
sahf
push
imul
loop
jae
and
pop
popf
xchg
pop
test
les
sbb
shrl
outsb
rcrl
jl
mov
push
add
jb
rcrl
cmp
dec
pusha
aad
or
mov
fwait
loopne
sbb
cmp
lahf
inc
cs
movlps
jns
cmp
stc
push
rcrb
pop
sbb
add
xchg
inc
mov
out
cmpsl
sti
sub
sbb
pop
cmc
mov
or
jle
mov
icebp
pop
jo
into
sub
push
in
pusha
sbb
outsl
push
out
xorl
sbb
loope
lret
mov
fstpt
adc
in
dec
nop
xor
in
data16
js
arpl
jno
add
insl
mov
adc
cmp
add
and
jnp
fcompl
add
mov
xchg
mov
mov
xchg
cmpsl
jne
cmp
xchg
cmp
enter
icebp
ret
mov
dec
daa
fisubs
inc
cmp
aas
xchg
imul
movsl
mov
or
push
inc
sub
sahf
pop
xchg
lea
mov
fst
stos
mov
and
fdivs
add
imul
inc
orl
push
add
push
stc
and
mov
sahf
int3
addr16
icebp
jg
popa
inc
push
inc
in
arpl
jb
inc
push
out
push
dec
movsl
or
xor
fists
push
xchg
jecxz
add
xchg
pusha
subb
or
dec
lods
sub
gs
jg
xor
fsubrs
add
mov
pop
out
popl
out
ret
icebp
jbe
stos
scas
dec
mov
shlb
adc
inc
cs
cmp
jp
dec
in
fld
testl
inc
xor
sarl
ret
ret
cmp
jb
jl
inc
insb
xor
mov
inc
insl
push
add
js
fldenv
in
ss
fwait
mov
and
mov
loopne
push
popf
dec
inc
xacquire
sahf
jmp
loopne
mov
bound
jle
in
mov
add
ret
dec
xor
data16
inc
push
cmp
mov
aad
je
shr
jg
outsl
sbbl
in
or
xor
mov
ret
sbb
sbb
lods
and
insb
aam
sahf
out
lahf
inc
inc
out
repnz
jbe
insl
mov
imul
cltd
inc
xlat
lret
inc
mov
sti
mov
mov
and
mov
int3
in
mov
pop
mov
pushf
js
adc
sub
rcrl
xchg
imul
mov
daa
add
pop
push
popa
repnz
in
lds
mov
aad
daa
inc
push
clc
or
adc
aaa
ljmp
mov
js
in
mov
and
pusha
test
xchg
pop
lea
shl
mov
mov
pushf
pop
out
lea
xchg
pop
icebp
insb
cmp
xlat
test
or
mov
xchg
sub
int3
scas
inc
mov
mov
mov
push
ljmp
negb
addr16
aad
pop
pop
shr
lds
pop
popa
add
xorl
adcl
push
jl
mov
fisttpl
test
test
push
push
std
xchg
dec
xor
xchg
outsl
sbb
pop
and
or
sub
xchg
rcrb
mov
testb
mov
subl
sbb
mov
outsb
icebp
movsl
lahf
ret
cmp
xor
rcll
pushf
xor
dec
dec
jnp
ret
movsl
cmp
fisubrl
xchg
out
dec
sti
dec
xor
into
push
lret
push
jne
in
out
cmc
dec
cs
or
out
cmp
ret
adc
sbb
dec
lods
dec
pop
in
dec
pop
cmp
dec
data16
add
inc
enter
pop
or
stos
fcompl
aas
inc
inc
jp
fsubp
pop
outsb
adc
aad
xor
or
lds
stc
enter
adc
shl
adcl
or
jg
xor
lahf
test
mov
fnstsw
frstor
movsb
test
mov
lods
fistps
dec
mov
pushf
xchg
mov
inc
loopne
aaa
mov
fucom
mov
inc
inc
andb
shll
dec
or
pop
scas
in
sub
jecxz
pop
stc
xchg
xchg
sub
pop
rorl
xor
cmpsb
push
inc
mov
push
cmp
dec
es
push
enter
out
movsl
sbbl
imul
jge
andl
jne
xor
outsb
sahf
je
rorb
leave
xlat
inc
mov
cltd
leave
xchg
int
fs
cmp
inc
adc
cmpsl
mov
and
jns
jg
jl
test
dec
mov
repnz
aaa
push
fs
mov
jo
dec
or
xchg
in
xchg
fnstsw
and
jp
xchg
add
mov
inc
cmp
out
bound
leave
std
jo
mov
jmp
dec
inc
mov
cmp
iret
lea
push
add
cmpsb
jo
sub
and
inc
xchg
clc
ljmp
shlb
int3
movsl
or
inc
repz
push
jle
sbb
push
mov
mov
insb
jno
das
sahf
shrb
nop
mov
lods
test
shrb
fimull
mov
sbb
pop
jne
nop
cmpsb
pop
adc
clc
pop
adc
jbe,pt
imul
in
cltd
pop
pop
out
cmp
jmp
jmp
enter
repz
pop
enter
mov
popa
cmp
pushf
push
inc
shlb
dec
movsb
sti
sti
cmp
mov
cmpsl
stos
and
dec
inc
mov
adc
xor
xor
jno
inc
shll
push
arpl
stos
fdiv
ljmp
ljmp
cli
add
mov
sbb
add
mov
mov
xor
lods
jbe
sbb
shlb
xor
and
jnp
push
jge
lea
inc
imul
idivl
xor
outsb
add
test
psrad
lea
mov
ret
mov
mov
adc
xchg
push
pop
lods
mov
test
ljmp
mov
ficoms
push
and
xchg
mov
mov
mov
in
out
pand
popa
int3
xor
popa
pop
loopne
mov
rolb
outsl
cli
lock
and
inc
sbb
ljmp
cmp
or
sbb
mov
jge
adc
enter
jnp
push
pusha
lods
cmp
jmp
and
in
hlt
push
in
inc
sub
or
adc
jp
repnz
adc
push
cwtl
or
and
mov
cld
aas
xchg
hlt
push
subl
mov
addl
xor
shl
or
in
push
fisttpl
push
push
cld
shlb
js
addr16
lods
dec
cli
stc
popf
mov
adc
inc
fsubrl
test
lods
mov
sbb
loope
push
pop
sub
arpl
inc
popa
and
aas
pop
movsb
mov
dec
mov
arpl
xlat
fs
lahf
lea
scas
fcoml
outsb
sub
arpl
adc
mov
lock
jge
and
jp
cmpsb
jg
mov
pop
mov
sub
sbb
inc
dec
pop
push
rcrl
mov
xchg
aaa
pop
repz
shlb
jnp
xchg
dec
cs
xchg
push
arpl
mov
cmpb
adc
shrd
jb
pop
rolb
mov
lods
repz
pop
icebp
ret
fstpl
add
push
cmpsb
jae
shrb
inc
jecxz
daa
mov
lods
mov
testl
imul
fs
pop
sahf
rorl
inc
mov
mov
shrl
xlat
sub
nop
fistps
ret
xchg
mov
shlb
pop
jb
jge
jp
xor
test
sbb
ret
out
ja
inc
xor
and
sub
cmp
mov
cltd
push
pop
fnstenv
mov
pop
xlat
jp
fnsave
sub
leave
jmp
xor
mov
aam
popa
add
mov
dec
ret
sbb
xlat
outsb
jl
dec
mov
xchg
repnz
outsl
xor
xchg
pop
dec
xchg
imul
inc
pop
cmp
icebp
testb
in
out
jne
cmpsl
cmp
into
inc
rcrl
lods
adc
test
iret
adc
xor
dec
push
jmp
push
push
jmp
mov
sub
mov
nop
dec
mov
pop
sahf
cld
or
or
test
aad
inc
mov
incl
cwtl
inc
xchg
xchg
repz
mov
mov
ret
mov
push
xor
scas
into
gs
add
xor
out
jge
popf
mov
mov
imul
outsb
lock
stc
pop
icebp
mov
xchg
add
mov
sbb
xchg
xchg
mov
clc
data16
or
cmp
or
add
push
test
in
xor
xor
mov
push
add
ss
imul
sub
inc
inc
mov
pop
in
imul
loop
jmp
sub
add
or
push
mov
and
hlt
cmp
push
inc
sub
pop
inc
js
andl
lea
adc
mov
insb
add
mov
push
subb
or
sti
test
adc
add
dec
mov
pushf
hlt
cmp
or
jp
fwait
sub
sarl
dec
cmp
push
xchg
fimuls
cmp
jne
stos
inc
std
imull
push
insl
rcrl
jg
mov
add
out
jecxz
iret
pop
mov
aas
clc
in
call
adcb
out
or
add
arpl
jno
repz
xorl
jmp
aaa
adc
fsubs
clc
mov
setge
scas
cmc
aad
ja
fld
add
push
push
lods
movsl
fnsave
maxps
adc
sbb
es
push
cmpsb
shrl
lret
and
dec
loope
ret
inc
ret
push
xor
in
js
push
pop
cltd
add
mov
pop
call
dec
or
or
jle
out
dec
dec
ss
jecxz
cmpsb
xor
mov
cmp
lods
cltd
mov
add
es
aam
fwait
xor
jbe
sub
pushf
pop
mov
stos
lret
out
out
xchg
add
mov
sub
jae
repz
imul
jno
je
iret
ljmp
sub
out
xchg
cmpsb
mov
ret
jl
add
subb
movsl
mov
stos
hlt
cmp
and
mov
xor
jo
or
ret
addb
clc
mov
xlat
push
mov
scas
push
mov
push
jle
pop
mov
inc
or
int
fnstenv
fwait
dec
sub
dec
dec
loope
push
into
cmp
mov
ret
cmp
sbb
call
ss
incl
ljmp
xchg
cmp
lds
lods
shrl
loopne
pop
repnz
pop
fisubs
mov
aaa
mov
jno
mov
jg
lahf
push
and
cs
jbe
shll
add
ret
add
repz
add
arpl
lret
aam
ss
xchg
mov
add
inc
dec
xchg
push
mov
inc
jmp
mov
mov
add
inc
sbb
stos
andl
pop
dec
cmpsb
out
aas
pop
xchg
fcoms
xchg
mov
adc
mov
jae
jo
sub
xor
jp
outsl
das
mov
lcall
loopne
jns
outsl
ror
dec
cmp
mov
add
loope
subl
int
sub
adc
into
and
or
aas
jae
fmull
sahf
mov
or
mov
mov
int3
jg
mov
int
xor
push
adc
clc
sbb
sub
in
dec
ja
shrb
dec
test
push
adc
ss
push
xor
imul
stc
xchg
sub
sahf
add
out
and
outsl
push
push
push
mov
jmp
aam
das
or
nop
jae
sub
dec
fidivrl
repz
cmp
aas
dec
sub
push
add
sub
icebp
test
lahf
xor
pop
pushf
push
sub
add
je
lock
loopne
scas
or
cmc
rcrb
cmp
mov
fsubl
pop
jecxz
push
popf
out
or
imul
aam
push
gs
or
cli
or
and
add
fsubs
inc
jmp
shll
jno
push
sbb
mov
loop
faddl
push
hlt
std
sub
nop
xchg
sahf
shr
into
popf
pop
jg
push
scas
test
repnz
into
or
in
xchg
sub
lds
addr16
and
sbb
dec
sbbl
sti
sbb
ret
movl
xchg
or
ret
pop
mov
pop
aaa
mov
xor
xor
fs
add
lea
adc
stos
sub
in
pop
test
insl
addr16
jecxz
mov
ror
inc
test
adc
das
jns
cli
ret
push
push
jecxz
pop
push
das
popf
jg
xor
pop
ja
or
leave
int3
xor
lods
daa
mov
aam
xorl
popf
mov
pavgb
in
jb
xor
and
xchg
dec
adc
adc
jo
fcmovu
mov
mov
jbe
cld
and
gs
fisubrl
xor
or
rorb
ret
leave
sahf
jbe
jns
xor
ljmp
std
jb
xor
sbb
xchg
dec
pop
push
loopne
stos
inc
ror
mov
and
loopne
insb
jle
icebp
or
bound
push
loopne
mov
and
mov
lods
lock
mov
aad
xchg
shrb
pop
fldt
mov
insb
imul
int3
sub
popf
and
imul
mov
js
lret
shrb
sub
movsb
test
dec
ss
push
push
sahf
sub
push
pop
lea
push
icebp
mov
cmpps
or
inc
out
cltd
or
and
sub
xlat
pop
jl
jmp
paddw
adc
sub
insl
xchg
dec
dec
fisttpl
imul
fnstenv
sub
jne
dec
pop
scas
xchg
subl
nop
mov
lea
mov
lock
clc
xlat
outsb
ljmp
lds
inc
fwait
mov
pop
push
sbb
insl
sahf
fldcw
gs
cli
dec
jecxz
data16
push
adc
xchg
fidivrs
arpl
dec
rol
push
loop
or
fwait
push
popa
sbb
fiadds
cmc
je
cmp
adc
mov
push
cmp
jb
inc
sub
jnp
into
mov
jno
mov
adc
xor
fildl
push
mov
arpl
sbb
into
mov
jne
lret
dec
mov
mov
adc
push
push
in
fisttpll
popa
mov
add
xlat
shrl
jbe
scas
dec
pop
loopne
inc
cmp
jecxz
pop
insl
cmpsb
jge
in
push
mov
pop
dec
cmc
mov
xor
scas
mov
inc
adc
and
xor
or
jb
daa
lcall
loopne
out
sub
jns
jp
fnstenv
jns
jle
xor
and
sahf
pop
xchg
jbe
push
test
mov
jo
add
test
jl
or
sbb
ret
or
cs
xor
dec
sub
js
je
in
adc
sbb
xchg
sbb
popf
in
es
xchg
dec
mov
lods
nop
shlb
fbstp
mov
iret
stc
or
aam
adc
aad
mov
fiadds
insb
bound
sahf
push
mov
pop
lock
nop
test
pop
mov
mov
add
sbb
adcl
enter
gs
jle
pop
pop
sbb
or
aas
pop
jg
jg
scas
mov
jnp
mov
test
imul
add
mov
xchg
pop
xchg
popf
addr16
ja
push
add
pop
rcrb
popf
sbb
mov
pushf
xor
cmpb
cmp
lcall
sub
jo
xchg
and
jle
push
dec
sahf
xor
push
loope
imul
mov
jbe
jl
push
push
icebp
jnp
mov
cmpsl
test
js
loopne
in
pop
mov
push
scas
dec
fisttps
mov
inc
adc
sub
jmp
repnz
lds
xor
in
inc
dec
or
roll
xchg
sbbl
mov
hlt
jg
and
jno
fldl
fdivr
paddsb
fwait
pop
frstor
pop
jns
into
les
mov
adc
dec
js
jb
inc
dec
adc
daa
push
xor
adc
and
gs
stos
jl
dec
jle
xchg
insl
out
scas
xchg
imul
cld
loop
dec
mov
enter
pop
sub
insl
and
das
out
lret
incb
or
adc
mov
aad
mov
je
in
xor
and
imulb
sahf
inc
ret
lahf
pusha
and
scas
sbb
jne
push
inc
aad
sub
adc
mov
dec
in
aam
movsb
shll
mov
icebp
add
inc
mov
int3
jmp
mov
pusha
icebp
cmpsb
mov
sbb
pop
cwtl
xlat
jbe
add
mov
cld
scas
jns
mov
in
sub
sbbl
lret
bswap
bound
fiadds
pop
gs
add
jmp
jg
adc
flds
repnz
xchg
lcall
mov
cmpsl
lret
aam
fsubl
fisttpl
lahf
mov
lret
or
cmc
push
sub
add
push
sbbb
je
sub
push
repz
jle
push
movsl
mov
push
sub
cmpsl
mov
sbb
shl
cmp
and
loope
pmulhuw
ja
fwait
jne
call
inc
mov
test
jb
aam
fadds
pop
pop
out
dec
push
lds
push
xchg
mov
gs
mov
loopne
xchg
and
mov
mov
test
push
rcll
ss
cwtl
daa
inc
fsubrp
jg
cmpsl
sub
loopne
inc
test
sub
stos
adc
sbb
xchg
addr16
fwait
aas
push
sub
lret
sbb
xchg
mov
or
inc
mov
cwtl
sbb
jp
add
stos
lcall
adcb
lcall
nop
roll
inc
out
stos
xlat
pop
lock
sub
mov
push
fisubrs
add
cmp
push
mov
or
insl
mov
test
dec
or
leave
subb
sbb
test
addb
jp
aam
lret
mov
out
mov
push
imul
movsl
dec
push
inc
sahf
mov
pop
add
sub
movq
push
lods
pop
dec
or
addr16
push
testb
out
out
jb
mov
ret
rcrb
orb
mulb
and
jno
out
lea
cmc
popl
mov
mov
mov
leave
cld
cmp
cmp
inc
pop
ljmp
jo
inc
fwait
int3
dec
xchg
cmp
in
bnd
mov
inc
mov
cmc
rclb
push
in
adcb
and
xchg
cs
enter
dec
pop
pusha
lock
pop
jge
cwtl
das
jg
mov
mov
notl
inc
stos
hlt
fiaddl
rclb
inc
shl
stos
push
add
inc
or
or
mov
xchg
or
jl
sub
jl
clc
jbe
mov
sbb
jl
adc
pop
dec
jle
cmc
outsl
xor
mov
icebp
push
test
dec
pop
xor
jl
loope
sbb
add
int3
and
jno
lds
mov
adc
rorb
sub
mov
jmp
xchg
scas
mov
cvtdq2ps
push
or
rol
stc
sub
jmp
cs
adc
loope
sbbb
mov
cmp
push
lds
mov
lret
fcmovnu
orb
int
jb
in
cmpsl
or
cmp
or
sbb
sub
push
mov
shll
iret
mov
jo
push
setbe
je
mov
rcll
shlb
adc
loopne
cmp
add
cwtl
adc
je
pushl
xor
cld
fdiv
js
xchg
out
out
icebp
int3
out
shrb
mov
lods
mov
cmpsb
mov
js
push
test
pop
sub
pop
subb
add
add
mov
lcall
push
cmpsb
pop
cmp
sbb
cmp
out
cmp
push
shlb
aad
int
adcb
and
adc
inc
jae
inc
push
pusha
ss
addb
inc
data16
lret
mov
adc
pop
push
loope
fcoml
loope
mov
movsb
aad
incl
loopne
stc
sub
out
mov
mov
pop
cmpsb
les
das
mov
jle
pop
inc
add
addb
jno
xchg
xchg
insb
xor
lock
or
test
scas
lret
leave
pusha
lods
adc
out
jnp
std
cmp
adcl
or
lods
push
sbb
lods
sbb
std
mov
jmp
sti
sti
gs
push
orb
pop
jnp
rolb
std
fistpll
xor
xor
in
mov
dec
aas
fdivp
mov
cmpsl
jb
mov
jp
jge
insl
filds
test
sarb
lods
mov
fisubl
jle
push
mov
out
fnsave
push
test
pop
nop
addl
in
sub
push
mov
data16
outsl
pop
movsb
nop
xchg
mov
xchg
leave
mov
stc
xchg
pop
mov
inc
les
mov
push
lds
repnz
xchg
cs
jo
xchg
or
popa
jecxz
sub
std
loopne
shrb
pop
jmp
xchg
pop
sbb
push
adc
fwait
mov
rorb
test
and
cwtl
das
inc
ret
push
lcall
in
les
add
and
mov
hlt
ljmp
subl
mov
or
vpaddsb
dec
imul
add
pop
mov
andb
insb
adc
mov
push
sbb
mov
pop
cmpb
mov
mov
add
sub
mov
nop
nop
aad
add
ret
leave
xchg
aad
ja
push
testb
jne
cld
mov
fisubs
mov
test
stos
add
mov
lahf
in
es
aad
std
push
imul
popf
xor
mov
lock
adc
sub
outsl
fisubl
and
mov
sub
lret
dec
cli
jno
out
adc
mov
test
dec
push
xchg
mov
adc
sub
mov
cmp
icebp
iret
mov
std
adc
push
ret
inc
out
cmc
jno
cmp
cmp
nop
pop
pusha
mov
push
insl
testl
mov
and
and
fsubrs
xchg
std
dec
out
xor
push
cs
push
cltd
clc
cmp
pusha
mov
sbb
dec
loopne
aaa
xchg
bound
push
sub
xchg
sbb
in
jecxz
test
add
mov
cld
xor
and
mov
dec
sub
jns
inc
rcr
xor
cld
pop
scas
jmp
pusha
fdivs
pop
fs
arpl
negl
test
mov
lods
adc
fisubrs
rcrb
rcl
mov
sub
add
bound
aas
push
lock
or
icebp
shlb
stos
pusha
adc
sub
pop
out
in
scas
fnstenv
sub
lret
loopne
xchg
lcall
out
popa
sbb
notl
test
scas
lods
addl
int3
mov
and
adc
in
pop
rorb
xchg
dec
into
gs
or
adc
div
dec
adc
stos
lds
xchg
mov
add
insl
sahf
push
arpl
mov
cld
cmp
ja
outsl
cmpsb
shrl
cmp
cmpsl
jg
iret
adc
xor
cmpsb
dec
test
std
xchg
flds
in
xor
fcmovne
lahf
fcomi
jp
bound
mov
mov
lds
fiaddl
lea
or
idivb
adc
jno
and
addl
xchg
mov
sbb
fs
call
test
xchg
out
push
adc
outsw
rcrl
xchg
push
lea
repz
mov
sbb
adc
insl
jle
jno
jmp
icebp
cltd
jo
or
sbb
add
sbb
dec
aad
mov
push
popf
jbe
mov
in
ss
cs
inc
hlt
push
add
or
mov
rcrb
pushf
sbbl
in
mov
lahf
arpl
sbb
mov
add
mov
dec
inc
fiadds
jmp
dec
pop
test
sub
push
lods
mov
xchg
and
call
xor
mov
outsb
rorb
inc
out
iret
sbb
leave
xchg
stc
je
cmp
add
fsubrs
inc
lods
std
sub
xor
iret
shlb
pop
stc
push
dec
inc
mov
mov
das
jge
jne
dec
lcall
dec
xor
pop
leave
enter
stos
mov
icebp
pop
fnstenv
das
mov
pusha
pusha
ljmp
lahf
inc
fsubr
jb
xor
adc
and
popa
and
lret
and
data16
dec
pop
stc
and
mov
aad
sbb
cmp
out
enter
push
bound
lahf
mov
out
mov
lds
add
sbb
cltd
or
orb
mov
adc
test
das
addr16
outsl
or
and
fisubl
into
xchg
mov
nop
daa
adc
gs
mov
and
aam
pop
push
imul
insb
daa
loopne
or
xchg
lds
pop
mov
mov
mov
cmpsl
es
fstp
pop
repnz
mov
cmpsb
jge
hlt
cmp
fildll
jno
pop
mov
repnz
jns
pop
std
xor
lret
call
inc
mov
and
lret
adc
jo
xchg
fnstenv
mov
mov
jmp
stc
sbb
sub
inc
adc
sub
xchg
gs
xor
fmull
mov
mov
jecxz
stc
sarb
and
mov
mov
stos
sub
leave
je
insl
ss
or
cmpsb
outsb
mov
cmp
mov
aad
mov
test
adc
sbb
dec
test
movsb
cmp
adc
leave
jae
lds
adc
inc
mov
ja
loop
sub
sahf
push
mov
rcr
mov
mov
inc
sarb
pop
insb
adc
mov
inc
push
adc
jmp
loope
mov
lret
inc
ret
rorl
lds
movsl
out
jae
dec
inc
out
rcr
out
add
hlt
mov
and
and
outsb
xor
push
scas
addr16
inc
fisttpll
mov
adc
lahf
es
jp
xor
sub
fwait
cmpsl
xchg
test
pop
xor
cmpsl
lret
popa
or
cs
xchg
xor
lods
icebp
dec
pop
dec
in
pop
xchg
push
call
mov
ret
outsl
dec
jbe
cmp
insl
add
outsl
mov
popl
xor
testl
cmpsb
mov
mov
xchg
adc
mov
push
fidivs
inc
and
and
ja
mov
sbb
ljmp
lock
fstp
mov
or
xchg
outsb
adc
fdivrs
pop
test
add
ret
js
pop
idivb
xor
jmp
or
mov
pop
sti
clc
adc
testb
pop
jb
jecxz
std
and
xchg
bnd
xchg
push
mov
hlt
ret
sbb
out
in
pop
or
jle
movsl
in
push
add
push
lcall
sbb
push
call
jne
outsl
shrl
and
push
pop
mov
addr16
push
cmpsl
dec
and
sbb
inc
pop
add
adc
sbb
pop
or
xchg
sub
and
lds
mov
dec
xchg
pop
and
sbb
lock
jno
out
mov
sub
xorb
test
mov
jg
hlt
or
cwtl
dec
push
xchg
push
outsl
adc
fisttpll
mov
js
xor
add
aas
movsb
data16
dec
cltd
out
call
xor
mov
std
inc
mov
xchg
aam
daa
fsubs
lods
or
loope
aam
mov
es
outsl
into
jae
jmp
or
lods
cmp
imul
and
cltd
addr16
mov
lods
push
test
mov
loope
das
xchg
mov
hlt
outsl
inc
clc
mov
imul
ja
and
outsl
mov
test
and
ret
xchg
jecxz
xchg
outsb
scas
add
hlt
mov
lcall
or
stc
xor
pop
cmp
and
push
or
fdivrl
add
mov
jp
push
mov
nop
or
mov
std
mov
jae
aas
sub
rorb
loop
sub
daa
sub
cmp
mov
pop
jmp
xchg
push
mov
in
pusha
dec
xchg
xor
xchg
sbb
leave
dec
pop
fstpl
fidivrs
enter
pop
xlat
jge
stc
mov
imul
mov
rclb
dec
out
inc
mov
shr
xor
xchg
push
push
fucomp
lds
or
push
add
push
mov
push
xchg
sub
sbb
movsb
out
fs
jge
lea
out
or
cmp
outsl
jae
out
mov
xor
ss
and
xchg
ret
ffreep
ja
cmpsb
jbe
cwtl
cmc
notl
xor
jo
jne
mov
adc
out
push
sbb
push
jge
negb
imul
jg
cmp
aaa
scas
cmp
sbb
and
enter
xor
xor
xor
cltd
and
cmpsb
ss
ljmp
insb
lcall
pusha
stos
inc
xchg
add
pop
ret
fwait
aaa
iret
xchg
or
pop
jne
jns
out
jno
inc
add
push
cmp
es
mov
adc
int
movsl
popa
xchg
jge
mov
icebp
nop
rolb
repz
test
xchg
cmp
pop
stos
sbb
das
fnsave
pop
leave
int
mov
inc
sets
lock
cmpsb
std
adc
mov
imul
cmp
fisubs
or
subb
lods
test
cmp
push
pusha
mov
push
aad
fcompl
pop
cli
scas
jb
dec
pop
xor
fstpt
hlt
jge
inc
mov
or
xor
cld
aam
mov
out
fsubr
push
lsl
fwait
add
cmpsl
decb
sub
sarl
cmp
fld
jmp
mov
xor
or
lcall
xlat
fwait
add
lea
cmpsb
pop
mov
pop
addr16
xchg
sub
mov
aaa
call
in
cli
or
jns
pop
or
pop
ja
push
mov
xlat
jnp
popl
adc
lock
fstl
jbe
aaa
mov
ss
mov
addr16
arpl
gs
dec
pop
cmp
xor
test
pop
xchg
or
adc
jle
nop
jmp
inc
mov
jp
daa
lock
in
pop
lret
les
insl
aas
test
xchg
jmp
cmp
mov
xlat
push
cltd
sub
xor
inc
xchg
jb
dec
mov
cmpsb
sbb
add
push
mulb
adc
mov
mov
jg
or
dec
inc
out
loop
push
adc
cmp
jo
and
mov
test
jb
cmc
int3
lcall
pop
sbb
popa
xorl
cmp
out
sub
sti
sbb
stos
in
ds
cltd
test
ljmp
push
add
mov
inc
xchg
insl
rol
imul
and
andb
cmp
clc
mov
orb
sbb
jl
leave
dec
in
push
jle
mov
ret
repz
jmp
jb
aad
lods
mov
adcb
sbb
ljmp
jecxz
jmp
mov
sti
push
shll
jbe
push
cli
mov
ret
lcall
negl
sbbl
push
mov
mov
jns
mov
imul
adc
movups
ljmp
mov
jno
mov
hlt
test
push
cvtps2pi
scas
js
or
adc
xlat
sbb
test
mov
mov
imul
rclb
xor
mov
in
repnz
das
dec
out
jge
icebp
inc
sbb
pusha
push
cwtl
mov
xor
leave
int
pop
xchg
sbb
shlb
rcl
fnsave
lods
stos
leave
sbb
adc
adc
fisubrs
mov
inc
pusha
movsb
mov
xor
jbe
mov
fcom
push
mov
mov
mov
adc
stc
cmp
popa
mov
mov
shll
dec
sar
adc
and
jb
dec
xor
jecxz
or
adc
sub
mov
jb
cwtl
add
mov
outsb
jle
add
loop
push
adc
pop
xor
out
mov
cmp
insl
les
add
mov
imul
shr
sti
push
sbb
mov
sahf
in
js
sub
stc
adc
loope
fists
stc
hlt
cmp
jno
data16
xchg
cmc
inc
jb
cld
cs
hlt
push
popf
jno
dec
lds
sub
jp
add
or
fcmove
pop
push
fucomp
inc
bound
in
cwtl
xor
and
aam
and
adc
add
mov
leave
fs
and
or
push
mov
cmp
xchg
ds
xorl
dec
adc
call
sbb
sub
testb
popf
rcrb
or
cmp
daa
cli
scas
pop
int
pop
les
mov
sahf
sub
pop
push
out
jnp
into
nop
push
rep
jl
and
mov
out
outsb
mov
or
mov
bound
mov
loope
pusha
sbb
aas
or
mov
and
or
add
jno
loopne
addr16
mov
mov
js
dec
es
jnp
hlt
test
sbb
dec
mov
xchg
inc
enter
addr16
pop
repz
stos
call
lock
mov
std
cld
lods
rolb
inc
jecxz
fidivl
fiaddl
int3
test
cmp
adc
xlat
sub
hlt
push
in
not
scas
fistpl
adc
cld
adc
ret
std
mov
popa
lret
sbb
mov
push
nop
cli
adc
data16
mov
pushf
movsb
jns
adc
sbb
xor
mov
xchg
jnp
test
sub
xor
mov
leave
sub
lods
push
in
loope
cwtl
das
mov
adc
and
inc
in
test
sbb
dec
mov
mov
fimull
rol
cmpsl
in
clc
imul
fisttpl
pop
test
scas
repnz
fwait
stos
mov
adc
lock
mov
test
xchg
call
push
fwait
xor
jbe
mov
dec
cmp
stc
push
adc
inc
xchg
int3
lret
pop
mov
cmp
xchg
add
mov
mov
lcall
aaa
fldenv
gs
add
shll
adc
push
lods
in
or
push
call
mov
cmp
push
loope
sbb
rep
mov
paddd
fwait
test
or
data16
mov
push
pusha
lods
sbb
clc
dec
not
xor
pop
aaa
into
xor
or
sub
adc
cld
fcomps
rcrb
iret
bound
mov
and
js
xchg
iret
cli
jle
mov
mov
sbb
mov
pop
xor
xchg
push
push
lock
mov
or
loopne
push
daa
pop
fidivrs
mov
popa
int
sub
jmp
cld
out
xor
and
mov
cmp
pop
mov
dec
and
notl
mov
pushl
divl
ds
dec
lea
cmp
mov
xchg
outsb
add
or
jl
out
mov
sbb
dec
mov
lcall
add
pop
js
push
in
dec
sbb
repz
cs
aas
mov
adc
xchg
rcr
pop
pop
repz
or
sbb
jne
dec
icebp
enter
or
xor
test
mov
loop
imul
cmc
jp
addl
sahf
popf
inc
mov
insl
jo
adc
pop
call
mov
sbbl
jecxz
sub
loope
push
mov
sub
je
stos
rolb
fwait
inc
dec
push
inc
popf
popf
stc
lods
inc
jmp
test
mov
dec
aam
jo
push
mov
outsl
fs
int3
pop
pop
sahf
dec
add
adc
std
push
push
mov
xchg
das
int3
pop
insb
lea
mov
dec
shll
pop
divl
mov
cwtl
sbb
add
jo
inc
fldl
inc
or
or
subl
sbb
mov
in
in
imul
mov
cmp
push
cmpsb
daa
push
cmpsb
mov
xchg
call
pop
jo
and
scas
pop
inc
push
sub
pop
mov
leavew
popa
mov
fsub
test
adc
ljmp
out
scas
sti
push
out
sarl
aam
orl
jns
loop
cmp
addr16
and
andb
pop
mov
fstps
lret
inc
popa
jmp
pop
in
mov
std
ret
ljmp
xor
mov
andb
push
insb
mov
addr16
inc
push
je
push
test
xchg
int3
cmpsb
dec
jnp
mov
ret
test
lret
push
cld
pop
in
pop
mov
mov
or
fsubrs
sub
je
mulb
mov
mov
push
pushf
xchg
xchg
jl
popf
mov
sub
mov
push
inc
mov
mov
int3
xabort
bound
inc
rorb
into
push
xor
fdivrl
jnp
and
iret
data16
pop
std
ja
pop
je
scas
mov
inc
sti
aaa
es
sub
adc
popf
dec
push
sbb
ja
add
loop
mov
or
stc
flds
enter
pusha
pop
push
shrl
seto
adc
or
into
gs
jo
mov
call
inc
cmpsl
mov
clc
fistpll
enter
addb
ja
out
std
out
fistpll
jecxz
enter
cmp
xchg
mov
aaa
divl
adc
push
imulb
add
lods
pushf
pop
iret
test
and
int
pop
cltd
mov
jp
cmp
and
out
in
push
fsts
fadds
das
xor
mov
into
or
dec
pop
sahf
sbbb
mov
idivl
jle
aam
test
dec
ffree
out
xor
cmc
mov
xorb
pop
xor
into
repz
mov
out
sbb
loop,pn
test
push
shll
fdivs
dec
mov
sub
clc
cmc
stos
jmp
mov
pushf
or
das
popf
stc
add
add
mov
adc
lds
mov
xchg
mov
adc
mov
cmp
inc
sbb
inc
push
dec
aam
push
pop
fwait
mov
xchg
jge,pn
jbe
fisttps
jle
push
push
cmpsb
push
mov
sbb
xchg
sbb
call
or
jbe
cmp
test
std
mov
int3
inc
dec
sbb
out
out
xchg
push
outsl
sar
in
outsb
inc
adc
loop
ja
dec
mov
dec
xchg
fs
inc
jecxz
test
scas
ret
shl
xchg
out
and
mov
scas
add
shr
in
fidivs
lea
test
inc
nop
rcl
adc
subb
mov
push
dec
xchg
pop
jns
push
gs
pop
int3
push
and
bound
add
filds
cltd
mul
lret
cmpl
fstl
sbb
mov
push
pop
sub
arpl
mov
cld
jnp
mov
dec
shrl
movsl
mov
xchg
xchg
or
es
and
push
in
addl
jecxz
out
mov
movsl
imul
sub
lcall
lds
cmc
push
shlb
dec
popf
out
cvtpi2ps
pop
jo
push
mov
pop
xchg
mov
add
out
scas
jle
and
mov
pmulhw
test
not
test
fmuls
loopne
xor
sub
jb
add
cli
mov
push
xor
jno
mov
sbbl
mov
and
out
mov
pushf
xor
imul
xor
mov
add
push
rcrb
jge
dec
mov
xchg
arpl
repnz
test
faddl
out
fiadds
push
xor
xor
pop
push
mov
push
xchg
repnz
jb
xor
dec
nop
fcom
mov
test
inc
int
fnstenv
mov
mov
jle
mov
leave
adc
aad
xchg
mov
int3
jecxz
outsb
aad
jmp
repnz
xchg
insb
lahf
cmpsl
dec
dec
mov
dec
idivb
push
mov
sbb
imul
pushf
push
jno
push
mov
bsr
inc
stos
push
fisttpl
and
inc
cmp
flds
adc
sti
pop
das
cmp
mov
rcl
push
cltd
lods
jns
andl
sub
loope
and
xchg
add
mov
andb
inc
mov
cmc
jnp
dec
into
xor
adc
push
outsb
shrb
mulb
leave
jbe
push
mov
mov
mov
xchg
and
add
jo
in
dec
jg
xor
dec
dec
invd
clc
ds
repnz
xchg
adc
lcall
lds
test
sbb
mov
xchg
scas
movsl
loop
movsb
jo
out
push
mov
js
fisubrs
repnz
inc
aam
jmp
pop
sti
cmp
pop
cmp
repnz
mov
int3
test
fnstenv
add
cmp
pop
scas
inc
cmp
cld
xchg
imul
sbb
mov
mov
pop
ljmp
mov
add
xor
xchg
jo
adc
sahf
mov
cmp
call
lahf
pop
jg
dec
push
sbbb
and
mov
ljmp
pusha
into
fwait
sbb
outsb
ret
in
mov
testb
xor
xor
jl
pushf
mov
fstpl
xor
lods
mov
jp
imulb
lds
or
stos
enter
lret
xor
arpl
mov
call
xor
ss
inc
push
repnz
pop
out
xor
mov
sub
xchg
ficompl
cmp
xor
pop
les
ds
sbbb
aad
stc
inc
mov
cmp
xchg
les
jae
or
add
jmp
lahf
iret
cli
mov
les
xchg
repnz
enter
inc
inc
add
std
popa
add
repz
rcll
leave
repnz
jnp
mov
lahf
in
adc
mov
add
mov
enter
cmpsl
shll
fsubl
dec
fadd
jl
sub
xchg
inc
enter
int
dec
mov
push
sbbb
mov
aas
repz
loope
repnz
pop
ret
mov
or
cmp
loopne
mov
pop
rcrl
push
push
iret
pop
jno
xor
push
jecxz
cmp
add
ljmp
or
test
imul
pushf
or
repz
jbe
scas
lds
adc
inc
pop
dec
xchg
scas
sub
mov
addr16
sub
mov
enter
lcall
jl
vpmacsdqh
add
std
scas
outsb
push
add
dec
fs
adc
and
jmp
adc
adc
aas
xchg
aaa
cmp
and
push
or
ljmp
outsl
stc
mov
push
mov
test
mov
xor
mov
jmp
cmpsb
mov
addb
cltd
cmp
and
cmc
lahf
popa
fsubr
test
mov
sbb
lods
adcl
cmc
pop
mov
pop
scas
dec
cmc
lods
in
shll
add
sbbl
pop
and
aas
push
subb
mov
push
int3
add
ret
push
push
jmp
pop
dec
jno
jl
sbb
mov
mov
test
sarl
pusha
dec
int
stos
insb
mov
xchg
rorb
push
mov
ror
pop
cmp
inc
insl
jnp
and
jno
movsb
mov
jno
cmp
ret
je
lret
and
cmp
insl
add
mov
cmp
sub
push
jg
subl
testl
arpl
jno
outsb
scas
pop
scas
xchg
cli
jne
inc
in
fmulp
test
std
jmp
loope
outsl
add
orl
cwtl
mov
add
mov
jno
test
jne
sbb
mov
jae
outsb
shl
loope
or
insl
add
push
fsubs
cmpsb
xchg
stc
mov
popf
mov
call
insb
jge
add
mov
rcll
outsb
leave
test
dec
pop
out
insb
ret
leave
xor
in
stc
cmp
jecxz
cmpsl
movaps
cmp
out
cmp
pop
repnz
clc
shrb
cmp
push
mov
lods
cwtl
sub
out
dec
pop
mov
pop
adc
nop
mov
fidivs
xor
lods
and
mov
decl
xchg
popa
cmp
popa
push
in
xchg
bound
xchg
mov
mov
int
or
inc
adc
repnz
fiadds
std
mov
das
test
popf
adc
out
data16
xchg
pop
adc
mov
mov
or
jne
push
shrl
pop
cmpsl
push
gs
mov
add
pop
cli
fs
push
lock
out
mov
mov
mov
sbb
popa
fnstsw
daa
pushf
xor
lret
int
push
pop
sbb
mov
xor
ljmp
push
dec
sub
mov
mov
lock
inc
xlat
lods
sub
sbb
and
jecxz
cmp
addr16
call
lea
aas
and
outsl
xchg
sbb
sbb
jno
jmp
push
lahf
or
jae
xor
xchg
cltd
xor
xchg
out
adcl
mov
fcoms
mov
inc
imul
outsb
push
push
insl
mov
pop
bound
loopne
std
adc
adc
out
xor
sarb
add
das
sbb
jns
jl
push
jle
or
je
enter
push
push
adc
fisubrl
adc
call
and
push
lret
jae
xor
nop
jp
xchg
dec
xchg
sbb
rcll
movsl
in
mov
movsl
jnp
loope
xor
cmp
cmp
jmp
push
jg
and
or
inc
aaa
pop
mov
insb
decl
fld
pop
pop
jo
dec
movsb
or
in
jbe
jo
std
push
ror
add
sbb
popa
xor
xchg
cmp
loop
dec
cmp
lods
mov
cli
or
or
pop
int
mov
and
sbb
mov
jbe
test
daa
push
lock
clc
mov
stos
xor
push
adc
pop
mov
or
lods
inc
mov
mov
ljmp
pop
sahf
xor
mov
fildll
aas
mov
js
dec
cs
adc
jb
das
addr16
cmp
sub
mov
dec
xor
idiv
jbe
filds
stos
cmp
dec
pop
in
mov
shr
aas
faddl
bound
int3
xor
and
or
fnstsw
outsb
or
pushf
dec
add
mov
pop
inc
int
xchg
fs
bound
lods
leave
xchg
into
dec
add
xor
das
adc
lahf
shll
mov
or
inc
imulb
jmp
mov
inc
test
neg
stos
add
in
cmp
rolb
cmp
enter
test
dec
pushf
xor
jmp
add
in
sti
addr16
loopne
fs
bound
cmp
rol
inc
pop
adc
or
cmpl
cltd
leave
push
in
stos
call
push
or
ja
shlb
lods
clc
mov
xor
std
addr16
jns,pn
jb
imul
sub
adc
sbb
lock
mov
adc
shl
jbe
sub
xchg
push
mov
rorb
xchg
dec
sbb
xor
ret
sub
add
test
xor
or
jl
xor
cmpsb
int3
xchg
subb
push
push
jmp
pop
add
cmp
add
pop
andl
fdivs
mov
aam
in
xchg
shrl
dec
push
fyl2x
mov
cmp
ss
dec
ds
push
lods
sbb
leave
pop
xchg
sbb
sub
jg
pop
xlat
mov
or
adc
xor
mov
icebp
pop
call
and
in
xor
ljmp
or
inc
lret
xchg
mov
xchg
xchg
aad
cmp
fcoms
std
clc
repz
adc
mov
dec
mov
sti
mov
cmp
jmp
or
cs
xlat
mov
into
imul
push
mov
div
dec
loope
xchg
testb
inc
mov
or
lahf
aad
pop
dec
cmp
ds
sub
out
lods
dec
cld
das
lods
jnp
test
xchg
push
movl
push
rcrb
xchg
pop
hlt
mov
mov
dec
jnp
cmpsb
mov
arpl
adc
sbb
pop
sahf
push
cmp
movsb
lret
clc
leave
xchg
scas
adc
pop
ror
imul
loope
repz
int3
fucomip
pop
pop
push
scas
or
inc
push
cmp
pop
scas
inc
int
dec
rclb
out
fnsave
mov
sub
fsubrl
pop
sbbb
cmp
mov
mul
imul
pop
add
sbb
subb
cltd
fwait
leave
ret
mov
mov
mulb
cmp
push
adc
hlt
sub
push
fildl
lahf
add
js
add
pop
repz
xor
fdivrl
push
or
orb
sbb
leave
cmpsl
sbb
push
lods
xchg
or
rcr
testl
repnz
lcall
or
jmp
xor
lcall
orb
ret
loope
insl
das
fiadds
sub
shll
shlb
jnp
and
mov
lds
push
insb
shll
out
mov
filds
mov
mov
out
ljmp
int
xor
push
call
fistpll
les
mov
pop
and
sub
sbb
dec
cmp
aas
add
pop
insb
mov
dec
jmp
jb
mov
std
lahf
cmp
dec
pop
mov
shr
loope
pop
jb
aaa
cmp
arpl
out
out
or
pop
in
out
idiv
dec
pop
in
aam
cs
arpl
push
add
mov
in
into
test
scas
fucomp
push
int
sub
mov
sti
leave
int
jo
xor
inc
pop
decb
flds
xchg
out
cld
fbstp
repz
lret
stos
int
lcall
sti
cmp
sahf
fdivrp
or
sbb
fildl
sub
push
jl
or
in
cmpsl
push
jbe
xor
or
shll
pop
dec
fistpl
shrb
or
in
icebp
aam
out
dec
adc
pop
cwtl
cmpsb
and
mov
pop
push
jo
and
mul
aad
fisttpl
mov
movsb
jle
inc
call
mov
movsb
imul
mov
xor
shr
mov
mov
xchg
cwtl
in
fwait
lcall
and
mov
sahf
inc
sbbl
dec
push
rorb
add
sbb
and
adc
xchg
ret
inc
mov
fs
cmp
and
pop
mov
or
xor
rol
sub
or
movsb
pop
sbb
push
sub
cmp
jno
mov
lret
jo
out
jge
pop
cs
bound
lods
mov
xor
fildll
cmp
cmpsl
mov
stc
neg
data16
popf
adc
push
shlb
mov
scas
pushl
imul
mov
jnp
lcall
shl
xchg
add
outsl
outsb
add
decb
and
dec
aaa
or
push
mov
push
mov
popf
and
ja
lcall
cltd
or
push
sbb
mov
dec
add
in
mov
stos
imul
out
jo
pop
stos
mov
mov
adc
push
inc
adc
jle
and
lret
sbb
mov
test
lret
mov
xchg
aad
rorl
push
lahf
orl
mov
in
jmp
dec
add
or
js
scas
and
in
out
push
push
cmp
pop
dec
add
adc
push
mov
mov
loope
jle
leave
daa
fdivs
enter
push
les
mov
xor
sbb
repz
push
ljmp
xor
xchg
or
mov
mov
shr
and
inc
adc
cmpsl
xorb
jne
mov
movl
cmp
pop
push
movsl
cmp
sub
lea
sub
cmpsl
sbb
add
in
push
cs
repnz
sbb
dec
pop
and
ss
nop
imul
xor
in
loope
out
enter
cmp
sub
lds
negl
std
xor
mov
xchg
and
orl
idivb
pushf
arpl
popa
adc
lock
loope
icebp
push
push
mov
ss
out
inc
xchg
mov
in
lret
push
cmp
xor
sbbl
fadds
adc
or
mov
cmp
ret
xorb
icebp
pop
inc
out
fbstp
sub
adc
jp
push
and
mov
lret
movsl
cmp
shll
mov
xor
cwtl
pop
jmp
mov
xchg
dec
inc
push
test
sub
stc
aad
cmp
sub
lods
mov
jp
inc
xor
sub
pop
leave
pushl
add
pushf
inc
dec
mov
mov
pop
out
adc
pop
inc
and
xchg
cmp
sbb
xchg
sbb
into
insl
rcrl
push
lods
dec
gs
ficoml
out
into
stc
push
call
xlat
mov
adc
jle
mov
push
call
or
adc
sarb
leave
cmpsl
idivb
or
std
flds
test
mov
daa
out
shrl
pop
jmp
jecxz
es
lea
push
fnsave
xor
push
add
xchg
insb
push
mov
mov
test
jnp
popl
cld
xchg
mov
lods
push
push
lcall
sbb
shll
mov
xchg
push
xchg
fs
js
jns
jo
mov
shr
fldl2e
mov
cmp
mov
scas
mov
in
orl
push
hlt
sbb
lahf
stos
imul
xchg
jo
adc
rclb
sbb
push
nop
aaa
cmpsb
movsb
sbb
mov
inc
cltd
pusha
push
fsts
dec
xchg
outsb
gs
jo
loopne
imulb
mov
movsl
lods
pop
mov
dec
lret
into
jg
mov
loopne
jne
into
arpl
sbb
fsubl
sbbb
subl
mov
sti
push
jb
icebp
sbb
jl
subb
mov
out
xchg
gs
pusha
xchg
mov
stos
inc
cmp
pop
xor
pushf
shl
cmp
sbb
out
mov
adc
stos
inc
cmp
leave
pop
test
dec
lahf
pop
clc
xchg
lods
out
inc
flds
lods
jo
pop
dec
int3
outsl
out
pushf
sub
cmpsb
or
inc
cmp
add
fdivp
xchg
mov
stos
mov
mov
pop
adc
mov
ds
pop
divb
outsb
lods
push
add
push
mov
fdivr
aam
sub
in
stos
xor
jae
xlat
scas
xchg
or
cli
cmp
nop
cmc
pop
pavgw
imul
test
int
insl
lods
xchg
fisttps
movsl
sub
cmp
sub
lret
dec
sahf
scas
cltd
or
cmp
fstl
pop
lods
enter
xor
inc
fldcw
nop
pusha
xor
cmp
push
dec
je
test
in
mov
or
pushf
fidivs
fstps
mov
std
xchg
xor
test
dec
mov
push
adc
mov
sbb
pop
xlat
icebp
cmp
cmp
cmp
xchg
cmp
cmp
mov
push
sub
inc
fwait
pop
data16
sbb
mov
fisubs
arpl
jae
mov
mov
push
repz
fcmovb
push
mov
jecxz
dec
movsl
mov
or
or
fldl
lret
movsb
pop
lahf
sub
mov
mov
fiadds
rorb
mov
imul
sahf
push
sti
or
sub
mov
mov
shll
mov
jne
jns
or
pop
lea
mov
cmpsl
sbb
outsl
push
fildll
or
mov
es
xor
pop
jbe
js
dec
and
pcmpgtd
cld
je
and
jne
gs
rolb
mov
push
outsb
test
loopne
mov
cwtl
das
mov
adc
movl
dec
arpl
fsubrp
dec
mov
sbb
or
and
pop
divl
add
popf
lods
dec
cmpsb
jle
pusha
and
call
xchg
jecxz
ljmp
jno
daa
push
xchg
je
dec
mov
outsl
cld
xchg
mov
sbb
pop
pop
sbb
in
cltd
int3
fsubr
fs
cli
dec
popa
xor
push
jecxz
and
add
pop
sti
cmpsb
out
xchg
mov
xor
adc
imul
mov
and
imul
push
cmc
or
in
dec
ret
cltd
jl
mov
adc
mov
mov
push
mov
mov
fsubrl
ljmp
push
imul
adc
test
test
imul
push
inc
imul
sub
mov
dec
loop
call
outsl
xchg
jmp
mov
mov
test
jge
jecxz
push
fldcw
mov
sbb
pop
mov
adc
and
fsubrs
test
or
aad
adc
add
cmpsb
dec
xchg
push
cmc
test
add
leave
test
mov
pop
out
xchg
and
sbb
jne
add
jbe
sub
andb
stos
aad
or
jp
mov
repnz
pop
das
xlat
shl
dec
shl
xor
test
or
test
std
pusha
sahf
int
or
in
mov
test
out
or
ljmp
idivb
scas
outsb
outsb
sarl
cli
shlb
nop
add
inc
enter
pop
shrb
popf
mov
mov
sub
cltd
mov
imul
jmp
push
xchg
or
mov
notl
out
sahf
mov
sarb
jp
outsl
cmp
jl
js
incl
icebp
stos
loopne
jb
inc
push
or
decb
mov
out
lcall
sahf
clc
push
scas
js
hlt
add
in
sub
sbb
sbb
and
out
out
fldl
test
rol
xchg
cli
aam
mov
imul
or
mov
loop
dec
frstor
cli
dec
test
xlat
mov
cmovno
pop
mov
jb
and
int
aas
std
xchg
mov
enter
xor
pushf
mov
jge
lods
das
mov
mov
cwtl
jle
shll
les
adc
test
cmp
iret
aaa
bound
push
push
jb
jne
stos
bound
mov
stos
jae
lods
inc
popf
lret
xchg
lret
fucomip
cmp
ds
pop
mov
cmpb
xor
int
push
xchg
mov
in
out
ja
sti
outsl
outsb
sub
cmp
ja
test
int3
adc
sbb
mov
cwtl
andb
sub
jb
fistpl
sbb
cmp
fnstcw
pop
andl
js
cld
leave
pop
pop
xchg
dec
jmp
xchg
sub
cmp
xlat
add
mov
repnz
lds
std
mov
pop
lea
xchg
mov
stos
in
out
decb
mov
mov
push
sbb
imul
test
les
cwtl
and
cmp
mov
inc
ret
pop
add
lds
out
hlt
adc
punpcklbw
andb
aaa
stos
mov
xor
xlat
icebp
andb
lock
cmp
ja
mov
sbb
mov
lds
daa
outsl
mull
cmp
jge
notl
aas
jp
shrl
xchg
pop
and
mov
push
mov
cld
lret
lea
or
cmp
jb
or
lcall
push
fisubs
lahf
js
fadd
xor
push
dec
cmp
sbb
jge
scas
addr16
es
rol
pop
adc
pusha
xor
dec
faddl
pop
loopne
stos
aaa
lods
add
les
loope
enter
jmp
hlt
dec
sti
add
adc
add
cmp
jnp
in
pop
lcall
cmp
push
cmp
adc
mov
mov
push
cmpsb
jns
cmpb
imul
jg
sahf
stc
mov
bound
mov
xchg
jbe
mov
pop
rclb
out
inc
sbb
and
push
inc
lahf
pushf
and
lds
pusha
divl
loop
fcompl
jg
inc
mull
inc
and
leave
xlat
mov
mov
push
inc
data16
mov
movsl
push
les
fisubrl
iret
loopne
lds
add
outsl
push
or
fistpll
cmp
cmp
xchg
lods
sbb
add
dec
add
cmp
cltd
std
push
iret
add
and
jnp
sahf
jmp
test
addb
adc
cltd
inc
cwtl
hlt
jg
sub
mov
dec
mov
in
dec
fcom
fstpt
add
scas
mov
pop
mov
dec
add
mov
mov
loope
pop
xchg
jb
movsl
cld
cmp
daa
sub
cmp
push
andb
and
cs
and
jmp
jecxz
pushf
mov
dec
sahf
push
lret
push
jnp
or
inc
mov
xchg
jno
cmpsl
mov
lock
pop
push
stos
sbb
jno
mov
mov
shll
std
xchg
sub
adc
push
xor
jno
mov
push
push
nop
fsubp
test
shlb
or
dec
adc
iret
sti
adc
popa
inc
pushf
ljmp
xchg
mov
adc
and
mov
jge
stc
mov
stos
loopnew
lret
adc
iret
lcall
mov
movsb
fwait
adc
scas
lret
push
push
mov
push
stc
xorb
push
aas
bnd
sub
andl
int
lahf
jbe
dec
iret
push
mov
int
xlat
outsl
ret
pop
popf
popf
jb
pop
idivl
mov
xchg
add
sbb
out
mov
mov
es
sti
addr16
xchg
stc
or
mov
sbb
pop
adc
andl
pop
or
dec
mov
int
int
testb
sbb
stos
dec
mov
cs
xor
sbb
xor
outsl
add
xchg
idivl
hlt
lret
push
jp
scas
je
mov
test
iret
sbb
mov
push
push
jae
pusha
push
test
rcrb
mov
sti
adc
mov
mov
mov
ret
jns
loope
popf
lret
lcall
or
addr16
lods
inc
jnp
sbbb
xchg
popf
hlt
std
dec
cltd
mov
testb
push
jno
jo
mov
or
rcl
gs
sbb
pop
and
shlb
mov
rorb
out
jle
jle
and
mov
mov
lds
movsl
mov
dec
jecxz
cmp
mov
mov
adc
scas
repnz
xor
inc
push
or
pop
push
in
mov
adc
push
repz
fnsave
pop
fmul
xchg
fs
ljmp
dec
insl
dec
xlat
push
in
lods
fidivrl
fists
ret
fiadds
es
jns
mov
mov
out
mov
xchg
fstpl
mov
mov
xlat
into
xchg
and
add
lret
fmuls
imul
aad
xchg
les
pop
jns
cli
daa
negl
mov
mov
into
pop
xor
push
xchg
jge
mov
repnz
out
sub
cwtl
sub
or
mov
jo
in
scas
stos
cwtl
push
mov
cmpl
insl
push
sbb
mov
pop
push
and
pop
xchg
shlb
sti
pushf
lods
inc
cmp
push
or
ror
popa
add
psrad
jbe
rcll
dec
cmp
xchg
and
pushf
mov
sbbb
inc
in
divb
push
sub
add
dec
nop
cs
mov
les
xor
ds
inc
sub
les
cmp
cmp
mov
lret
push
mov
lods
jb
jecxz
cli
xchg
inc
adc
out
push
sti
lds
negl
xor
cmp
mov
loop
addl
fadds
movsl
mov
lods
fmul
jle
add
jmp
push
jb
lods
icebp
mov
mov
pusha
mov
fucomi
outsl
test
xor
jg
mov
stos
pop
arpl
rcr
mov
mov
fisubrl
fsts
dec
and
jle
shrl
aaa
into
outsl
dec
lret
push
fs
daa
pop
fiadds
dec
mov
in
daa
pop
clc
nop
popl
inc
pop
dec
inc
push
dec
jle
pusha
lahf
imul
dec
xor
mov
push
das
cmpb
inc
in
xorl
repnz
or
dec
hlt
ret
xchg
add
pop
lret
jp
scas
cmp
jge
imull
jbe
pop
or
lock
adc
jp
add
lcall
xchg
incb
inc
ficomps
xor
or
subl
xchg
sub
hlt
daa
and
enter
stos
jecxz
push
dec
add
push
fsts
subb
repnz
nop
xor
ret
and
lods
xor
aam
mov
cwtl
stos
pushl
add
mov
xchg
shlb
add
repnz
xchg
push
dec
add
pushl
lcall
or
jb
push
lods
iret
hlt
jmp
push
divb
out
jmp
sub
xchg
push
xor
lods
mov
pop
mov
xchg
mov
inc
rcrl
out
sbb
dec
test
test
mov
pop
lods
or
mov
mov
je
imul
or
lret
lcall
andl
dec
mov
hlt
mov
cmovae
sbb
arpl
jle
jae
and
xchg
jns
loopne
aam
pop
xchg
cmp
dec
push
outsb
int
ret
inc
jo
pop
rcr
push
je
aaa
lret
push
mov
mov
dec
xor
popa
jnp
mov
mov
es
imul
fs
and
xor
sub
lret
into
insb
popf
idivl
and
repnz
cmp
lahf
mov
lret
stc
sub
hlt
pop
out
sti
fsubrs
mov
mov
xchg
mov
pop
jo
push
mov
xchg
loop
push
hlt
rcrl
out
and
dec
cli
inc
dec
xor
std
jecxz
sub
pop
push
in
push
ret
rol
and
in
push
jecxz
icebp
fcoms
sub
movsb
sub
push
je
sbb
notl
lods
sbb
inc
testl
xchg
pop
mov
add
push
xchg
pop
or
inc
mov
mov
pusha
mov
cmp
push
lods
jno
movsb
gs
fwait
push
jge
sarb
mov
mov
mov
lods
jnp
dec
aaa
jns
sub
pushl
jne
mov
sbb
arpl
lods
dec
xchg
ja
lock
outsl
xor
in
lret
mov
push
in
pop
outsl
test
adc
popa
sti
inc
fs
decl
xchg
mov
inc
push
or
andb
adc
ss
lcall
sbb
mov
and
lea
jle
aaa
iret
mov
shll
test
sbb
adc
shr
es
mov
in
ret
roll
mov
xchg
xor
fwait
addb
mov
dec
in
movsb
xor
repnz
mov
loop
pop
adc
lcall
xor
mov
lds
jns
iret
and
push
jne
mov
xlat
scas
in
and
pop
add
mov
mov
cmp
adc
ss
std
sub
je
stc
nop
lret
cmp
icebp
aaa
pop
cmpsb
add
test
popf
stc
movsb
icebp
test
xchg
cs
cmpsl
xor
push
std
inc
addr16
cld
imul
fcomps
jno
and
shl
repz
dec
add
xchg
aaa
push
scas
add
cmp
mov
in
sbb
fnstcw
lods
cmp
shl
cmpsb
imul
loope
hlt
pop
xor
cmp
xchg
enter
std
mov
scas
pop
xor
push
mov
sbb
rolb
mov
xor
test
sbb
mov
inc
dec
inc
xchg
js
loopne
dec
pop
mov
mov
mov
add
popf
mov
std
jnp
lds
pop
sbb
cmp
xchg
jmp
xlat
adc
mov
mov
jge
jmp
mov
sbb
fildl
push
stc
out
int3
adc
inc
fdivs
ror
mov
sub
aad
lods
xor
jecxz
dec
stos
fnstsw
movb
pop
xor
aaa
test
xor
lcall
inc
sar
dec
push
mov
mov
sbb
cmpsl
ds
sti
outsb
hlt
or
cmp
and
rclb
cmp
sub
insb
push
pop
mov
dec
dec
mov
clc
imul
and
and
fsubl
call
pop
fwait
bound
out
xor
inc
hlt
je
test
sbb
jl
xchg
add
arpl
inc
pop
js
adcl
call
jne
mov
stc
int3
sbb
fs
test
pop
data16
inc
mov
imul
xchg
inc
inc
jbe
mov
das
cwtl
pop
lods
inc
dec
add
mov
push
iret
mov
shrl
iret
adc
dec
test
adc
xor
mov
hlt
mov
add
pop
xchg
dec
sbb
clc
mov
test
sub
lcall
sbb
out
movsb
add
pop
test
inc
lcall
out
dec
push
aad
lret
out
mov
push
out
sarl
hlt
push
in
add
je
inc
ljmp
fadd
inc
add
mov
lcall
adc
or
fwait
popa
testb
cltd
fdivrl
outsl
inc
lock
mov
shr
test
pop
scas
cltd
std
or
stc
adc
xchg
in
out
xchg
je
cmp
xchg
mov
xchg
xor
or
inc
fucomp
je
adc
inc
mov
lods
in
lock
jbe
mov
shll
sbb
fsqrt
and
jle
divl
adc
inc
cmpsb
xchg
rolb
mov
loop
cmp
xchg
shrl
add
jb
in
stc
shrl
adc
es
pusha
rcrl
jecxz
xlat
cmp
cmp
push
mov
loop
test
and
ret
pop
test
rol
popf
popa
mov
jns
inc
pop
mov
dec
push
fstps
fcompl
xchg
mov
sub
stc
push
jnp
sbb
sbbb
inc
sub
lea
xchg
scas
inc
cmpsb
xor
mov
int
lret
loopne
cmp
mov
push
mov
add
and
jmp
hlt
addb
fwait
sbb
mov
pop
into
and
les
in
jne
mov
lods
mov
push
jae
in
lret
xor
cli
mov
or
xlat
shlb
outsl
aas
fcoml
stos
mov
out
daa
mov
popf
lock
loop
outsl
push
dec
pop
out
aad
or
and
cli
andb
sahf
add
jmp
shrb
and
jo
movsb
sti
cmp
add
push
fdivrl
fisubrs
iret
pop
lcall
pop
rolb
jno
jbe
sbb
jno
icebp
cs
imul
sti
fwait
pop
jns
sbb
repz
sbb
insb
xor
mov
cmp
and
and
pop
xchg
pop
int3
or
xchg
ljmp
in
pop
inc
std
fwait
das
call
pop
or
or
int3
mov
add
cmp
and
mov
inc
cs
fisubs
dec
gs
cmp
mov
test
ja
cmp
or
pop
sub
loopne
jge
jne
testb
adc
ljmp
or
jbe
std
cmpsl
push
xchg
inc
lahf
flds
lods
loope
sahf
sub
test
mov
xor
xor
lock
outsl
push
insl
out
test
cli
ljmp
dec
mov
enter
sub
xor
pop
jp
push
add
add
mov
mov
loopne
lods
mov
adc
ja
push
xor
mov
lret
rcll
sti
xlat
mov
xchg
clc
inc
pop
cmp
and
imul
aaa
mov
cmp
mov
cmp
mov
insb
adc
xlat
outsl
xchg
xor
sarb
jae
ret
sub
aaa
inc
push
outsb
adc
out
ret
icebp
xlat
mov
jb
jp
sbb
mov
and
xor
inc
cs
lret
or
insl
in
adc
dec
push
or
fists
les
and
cld
jg
sub
cli
ljmp
cmp
adc
gs
call
jae
fistpl
aas
stos
jmp
ds
mov
mov
iret
xchg
shr
adc
addr16
jle
xchg
push
sahf
adc
fs
inc
cmc
clc
psubusb
mov
movsl
rcrl
mov
add
xchg
enter
imulb
iret
daa
adc
sbb
lods
ds
sub
insb
xor
popf
mov
aad
imul
pop
mov
ss
fldt
cmp
test
aaa
inc
pusha
xchg
add
sbb
ficompl
and
ret
sti
xor
les
test
cli
divl
insb
scas
fcmovne
test
mov
sti
lods
mov
jmp
adc
mov
test
shrl
fimull
xor
jmp
sti
mov
mov
data16
stos
push
jne
mov
in
lcall
mov
push
jl
aam
mov
fdivrl
sti
mov
cmp
enter
pop
jmp
cld
mov
js
adc
mov
mov
lock
rcll
xlat
outsb
inc
repz
and
sub
es
loope
inc
pushf
xor
addr16
mov
ds
jmp
jp
mov
insb
or
sbb
fimuls
mov
cwtl
xchg
lret
push
adcl
push
pop
fucomi
aas
jne
dec
mov
leave
js
out
ss
in
fmuls
cmp
es
pop
shrl
add
and
sti
mov
xor
push
idivb
sahf
ljmp
aad
idiv
cmp
inc
call
mov
ret
mov
test
pop
shrb
shlb
lea
scas
mov
in
stos
sbbb
jecxz
mov
loop
popf
pop
popf
outsb
movb
or
xor
push
test
cmp
jbe
push
rcrb
addr16
fs
pop
test
scas
push
jl
add
clc
mov
pop
add
mov
and
mov
pop
ja
pop
cltd
inc
xor
xchg
lea
sahf
test
cmp
aad
xor
repz
sbb
int3
mov
pop
cmc
push
dec
rcr
sbb
jbe
lret
xchg
aam
add
insb
outsl
push
xchg
int3
xchg
jp
mov
stc
adc
mov
ljmp
enter
dec
pop
push
aas
nop
pop
ds
lcall
popf
or
sbb
mov
test
sbb
shl
out
sub
rclb
dec
adc
pop
stc
and
mov
push
push
push
jne
call
mov
out
repz
loop
pop
sbb
sub
cld
mov
jnp
mov
es
xor
jmp
push
cmp
and
jg
add
cmp
adc
repz
push
call
xchg
and
mov
pusha
push
shrl
daa
mov
mov
dec
lods
inc
cmp
dec
inc
cli
fiadds
addr16
lea
jp
jp
aad
outsb
xchg
adc
int
push
cmp
and
sub
call
pop
or
sub
test
icebp
lahf
sarl
inc
int
push
movl
nop
stos
add
lock
xor
cmp
or
cld
fwait
lods
cmpsb
lds
mov
faddl
cwtl
sti
jmp
sbb
dec
dec
mov
mov
je
daa
push
leave
and
xchg
pop
inc
dec
xchg
sahf
rcr
push
sahf
pop
dec
call
push
outsb
mov
insl
fstpl
fucomip
std
jne
xor
andb
call
lods
outsl
cmp
aas
testl
fisttpl
push
lods
pop
and
xchg
jnp
cmp
pop
mov
bound
sbb
sub
fdiv
rclb
dec
sbb
push
lcall
inc
popf
sub
pop
loope
loopne
fmuls
aam
and
fsubrs
rorb
push
or
push
add
xor
scas
pop
push
lods
inc
inc
sub
mov
iret
dec
out
sbb
pop
ret
jge
and
mov
cmp
adc
roll
jp
dec
je
xchg
fstl
jp
push
ficoms
dec
leave
xor
stc
fdivrl
imul
out
add
adc
pop
jne
cmp
test
sbb
dec
pop
xor
sub
lods
out
js
or
rorb
push
xchg
stc
jp
adc
sbbb
ljmp
jl
lds
dec
std
inc
dec
ss
add
jns
xchg
jnp
dec
lahf
scas
mov
sbb
and
push
push
scas
and
inc
fldl2t
lret
push
mov
jns
xchg
push
out
jns
mov
repz
xor
jecxz
stos
inc
in
dec
dec
mov
xor
jae
fsubs
adc
and
pop
sbbl
cmp
js
call
insb
dec
popl
mov
iret
lods
mov
adc
jg
les
insl
jecxz
dec
sbb
aad
and
dec
mov
fs
aam
lret
bound
mulb
or
cmpb
sbb
ficompl
mov
stc
mov
and
popa
ds
add
mov
inc
xchg
arpl
or
push
imul
mov
cli
xor
test
hlt
mov
add
sbb
cld
mov
popl
mov
inc
xchg
push
xchg
lods
cmp
sub
in
fsubrp
into
sub
dec
test
push
jno
jle
or
std
test
test
push
and
push
arpl
mov
cli
add
aaa
xchg
gs
fildl
sub
push
lock
xor
cmp
or
adc
inc
pop
repz
push
fstps
shlb
xchg
xchg
mov
mov
sub
push
mov
dec
sbb
pop
pushf
cli
cs
mov
loopne
fwait
pop
mov
test
jecxz
mov
int
test
aas
xchg
adc
push
pop
shrl
out
adc
ds
mov
ja
pop
mov
shrb
or
loope
sti
push
sub
mov
test
out
outsl
loop
push
aam
xchg
scas
int
sbb
test
and
fcoml
xor
sbbl
repnz
cmp
aad
aad
push
pop
js
lds
sub
icebp
mov
mov
shlb
enter
or
inc
fisubs
ss
mov
insl
mov
es
pop
cmc
jo
cmpb
push
push
scas
aam
sarl
in
int3
lret
insb
lcall
lds
repz
mov
sub
cmp
cmp
mov
jle
es
call
sbb
dec
data16
lds
sub
lds
mov
je
int
orl
cltd
cmc
adc
lar
ja
in
or
xor
mov
xor
dec
test
push
cmp
ss
fldenv
inc
xchg
jne
lods
push
add
lods
out
fucom
fs
push
mov
and
roll
add
mov
inc
in
sbb
sub
inc
mov
lea
jae
and
pop
cmpsl
mov
push
mov
mov
push
xchg
and
stc
scas
lods
insl
int
adc
jo
cmp
xchg
test
lahf
push
movsb
cmp
sub
cmpsl
nop
push
mov
adcb
mov
test
outsl
push
and
nop
push
add
iret
xchg
mov
mov
ret
pushl
stos
pop
and
in
mov
cmp
mov
dec
pusha
sahf
insl
inc
insb
scas
mov
mov
inc
mov
lock
inc
dec
pop
in
shr
loope
fisttpl
dec
jg
push
in
les
mov
sub
mov
mov
roll
adcb
mov
dec
xor
rcll
insl
sarl
sub
loope
adc
sub
inc
imul
push
xor
jne
sbb
mov
lcall
pop
jmp
or
mov
popa
push
inc
push
repz
sub
icebp
mov
xor
and
sbb
push
inc
mov
stc
pop
ret
loopne
add
and
jb
cmp
cmp
inc
xlat
or
sub
jns
mov
lods
xchg
mov
sbb
mov
sbb
sub
out
das
cmp
jns
jg
rep
jbe
das
push
jmp
xor
mov
mov
adcl
mov
add
loope
stc
push
mov
outsb
adc
ficompl
out
ljmp
movsb
inc
cmp
adc
arpl
cmc
in
ds
inc
add
daa
stc
out
xchg
mov
or
mov
aas
push
out
aaa
sbb
mov
jo
sahf
pop
ret
lds
stc
xchg
jns
mov
and
test
xlat
aad
fs
cmp
inc
pop
pop
popf
outsb
dec
pushf
je
ja
jge
cmc
out
int3
xor
and
test
add
popa
int
ljmp
push
test
fsubr
in
psubd
jne
fstps
mov
mov
dec
mov
adc
mov
sub
test
push
pusha
sub
mov
pop
test
fstl
xchg
jl
lahf
mov
fisttpl
jmp
push
jp,pt
stos
lret
data16
mov
fwait
imul
xchg
sbb
add
mov
das
bound
xchg
mov
sbb
mov
jmp
ret
movsl
in
push
sbb
out
mov
outsl
push
repz
dec
or
inc
dec
lcall
scas
or
repnz
sub
pushf
mov
mov
pop
cld
mov
sbb
mov
addr16
adc
mov
arpl
mov
shrl
sub
orl
jle
adc
cmp
jo
and
inc
arpl
ret
mov
lea
ror
lretw
pop
xchg
ljmp
ret
pusha
mov
int
scas
jle
andl
or
cld
pop
enter
in
mov
adc
aas
shlb
xor
push
adc
das
incl
xchg
cmp
push
ds
stos
xchg
fistpll
dec
fcoml
movsl
ficoml
push
jb
sti
popf
mov
adc
popf
jecxz
push
mov
push
mov
test
dec
fs
adc
rcrl
jp
and
xchg
pop
loopne
or
sub
jbe
xchg
ljmp
jl
stc
out
shr
xchg
mov
aad
fcomi
push
fwait
dec
jns
xor
push
sbbl
or
shrl
jnp
shrl
addr16
rorl
ss
add
mov
shrl
dec
add
dec
mov
mov
push
call
in
flds
cltd
mov
call
fidivs
dec
xor
cmp
dec
gs
sbb
dec
dec
aad
out
js
xchg
scas
js
sub
jne
add
rcrw
sbbl
cmp
mov
push
lret
mov
in
sahf
push
mov
push
mov
xchg
in
xor
aad
icebp
push
xor
mov
xor
addr16
bound
mov
andb
fildll
mov
sbb
mov
sbb
adc
in
xor
imul
ret
clc
jae
aaa
in
aam
mov
cmc
mov
cmp
negl
sub
adcl
int
sub
inc
cmpsl
ss
xchg
shll
mov
invd
ret
mov
and
dec
sahf
clc
cwtl
mov
jnp
ficoms
into
fisttpl
ds
mov
iret
iret
data16
cwtl
lock
lock
dec
lock
mov
pop
add
insl
out
and
jge
icebp
pop
repnz
icebp
stc
push
cmp
jns
sbb
inc
or
pop
in
nop
sub
adc
and
fidivs
jnp
inc
cli
repnz
popf
lcall
icebp
jle
andb
int3
imul
jecxz
dec
or
stc
nop
testb
mov
cmp
sbb
push
sbb
mov
xchg
add
les
dec
stos
dec
shrb
dec
rcl
rol
pusha
int
push
jno
inc
jecxz
dec
mov
daa
es
mov
dec
mov
adc
fidivl
es
test
jnp
add
cmpsb
ret
into
gs
and
outsb
sbb
fs
idivb
outsb
rorl
insb
jle
mov
xchg
lods
mov
push
in
adc
test
jbe,pn
add
movsl
int3
push
mov
lret
in
and
sbb
inc
hlt
enter
mov
xchg
es
jg
pop
xchg
ja
test
cmpsl
lea
outsb
jle
ret
ficompl
subb
pop
push
mov
jg
fistps
fcompl
orb
mov
mov
and
stos
xor
int
mov
jbe
add
es
pop
xchg
js
xor
cltd
mov
imul
test
add
arpl
rcrb
ja
push
jns
pop
jl
mov
xlat
dec
fnsave
push
lret
sbb
dec
in
adc
fnsave
imul
sbb
fisttpl
jge
mov
xor
movl
sahf
mov
xor
shlb
idivl
test
daa
lcall
adc
or
inc
inc
mov
cmpsb
aas
sbb
test
dec
pop
hlt
jnp
inc
pop
es
mov
dec
fbld
mov
sahf
in
call
xchg
loop
or
push
icebp
adc
jae
mov
fcompl
or
push
mov
or
outsl
out
cmpl
arpl
imul
imul
bound
fcoms
mov
lods
fimull
loop
jb
insb
movsl
mov
or
mov
lea
or
mov
and
mov
dec
adc
imul
adc
sbb
cmc
xor
in
test
xor
push
sbb
mov
ljmp
lods
sbbl
adc
ja
push
adc
cmc
out
sbb
push
sub
rcll
popf
dec
iretw
je
mov
fldt
loope
sub
dec
cmc
insl
aaa
in
xor
mov
mov
shll
imul
insb
adc
adc
sub
rcr
jb
sub
sub
cmpl
sbb
shrb
xchg
loope
inc
adc
inc
mov
in
bound
iret
lret
cmpb
mov
mov
pop
inc
or
adc
mov
inc
inc
out
or
xor
xchg
pop
inc
pusha
mov
pusha
pop
call
mov
lcall
mov
xchg
lret
jl
scas
adc
lahf
mov
jns
int3
into
fwait
mov
sub
mov
cltd
leave
test
mov
adc
cmp
test
dec
int3
cmpl
lret
and
add
popl
push
jge
mov
out
int3
mov
mov
inc
push
inc
adc
into
arpl
mov
add
mov
pop
mov
cmc
and
push
sbb
push
lds
mov
push
sti
int
aas
clc
hlt
mov
fucomp
jb
incb
sub
sbbb
mov
sahf
out
xchg
daa
pop
in
in
sub
movsb
dec
push
lret
fidivl
dec
popf
add
cmp
add
push
cmp
sbb
xor
insl
push
mov
in
ffreep
dec
adc
and
jge
shrl
and
mov
les
jl
decb
pop
dec
xor
gs
lret
and
dec
inc
test
outsl
fsubl
lds
cmp
add
insb
stos
clc
cmp
fsubrl
icebp
insb
add
xchg
dec
mov
loopne
xchg
pushl
cmpsb
cmp
ds
dec
loopne
nop
aad
pop
jmp
loope
xor
mov
je
inc
mov
jmp
test
adc
push
pop
cli
cmp
xor
shlb
insb
jmp
mov
jg
pop
nop
mov
push
jbe
xchg
push
stos
mov
mov
cmp
pop
out
push
daa
popf
sub
pushf
sub
ret
test
fiaddl
adcl
and
lock
and
sbb
sub
or
pop
push
subb
xor
cmp
pop
mov
mov
rcrl
push
stc
cmp
sub
push
cmc
add
rclb
mov
mov
ljmp
addr16
out
call
jg
aam
test
fiadds
jbe
fs
shl
popa
clc
pusha
sub
mov
mov
enter
add
and
fnstenv
fnsave
mov
push
lcall
sub
add
push
rorb
mull
pusha
imul
dec
aaa
xlat
pusha
or
leave
push
cmp
lea
xor
cmp
xor
dec
pop
inc
mov
je
mov
outsb
pop
lds
add
sbb
push
push
pop
xor
lahf
icebp
jnp
or
aas
pop
inc
out
sub
mov
dec
in
fcoml
cmp
xor
fndisi(8087
cmp
add
jnp
dec
sahf
inc
and
cmc
push
add
xor
push
aam
jg
dec
sbb
mov
incb
dec
out
sub
cld
sub
mov
jp
sbb
cmp
ss
fs
fsubrs
mov
das
mov
ja
ret
sub
xor
das
pop
push
stc
lret
out
daa
insb
xchg
add
dec
addr16
jl
into
addr16
inc
sub
je
mov
cmc
lea
orb
gs
jae
push
popf
cwtl
mov
pop
mov
mov
push
inc
and
sbb
jecxz
inc
pop
idivb
stos
push
mov
xor
mov
movb
rorl
push
mov
pop
int
xor
lods
xchg
hlt
loopne
pop
inc
mov
lock
icebp
js
bound
xchg
jne
jmp
jo
pop
mov
fcmove
fs
imul
push
idivl
pusha
and
push
mov
gs
add
pop
push
je
leave
bound
enter
cs
fcomps
xchg
icebp
jl
or
sub
mov
mov
xchg
mov
repnz
mov
jns
pop
push
clc
dec
popa
inc
ficompl
sub
movsl
cmp
js
nop
mov
pop
adc
mulb
cmp
sahf
push
testb
out
push
cmp
divb
cmp
mov
jmp
mov
push
push
inc
lds
idivb
or
jl
out
xchg
subl
sub
rol
pop
xchg
push
iret
sbbb
aad
pusha
xor
aaa
je
adc
stos
mov
rolb
in
in
pop
mov
scas
push
ss
dec
data16
mov
jp
adc
data16
clc
sub
clc
sahf
mov
repnz
pop
scas
int3
int3
adc
xor
rcl
js
adc
dec
mov
repnz
jecxz
mov
mov
cwtl
xchg
dec
add
push
scas
inc
jp
pop
lahf
inc
pop
into
gs
lods
mov
sbb
outsb
movsb
cmp
repz
es
inc
jae
adcb
sahf
fs
jnp
lock
icebp
lods
adc
addr16
or
mov
mov
adc
bound
jl
mov
sub
xchg
lahf
lock
cld
and
xor
loop
add
hlt
sbb
mov
push
loopne
leave
in
lods
inc
push
mov
inc
fstl
fisubl
pop
aad
cmp
jbe
ret
js
fdivrs
pop
scas
mov
fistps
and
cltd
dec
add
dec
mov
push
js
sbb
cmp
mov
scas
lahf
add
mov
lcall
aas
xchg
sub
mov
call
insb
sub
jge
cld
outsb
divl
push
sbb
ficoms
xor
adc
bound
sbb
xchg
stc
ja
pop
mov
push
mov
push
mov
xor
inc
push
lock
inc
pop
loope
xor
arpl
mov
adc
cltd
cmpl
es
ret
pop
sbb
nop
iret
repz
inc
mov
out
imul
popf
adc
or
mov
mov
mov
daa
addb
out
xor
xlat
enter
out
or
push
push
movsb
dec
pop
xor
jmp
mov
inc
pop
xor
cmp
inc
or
pusha
mov
mov
lods
fisubs
mov
stc
sar
lahf
sbb
pusha
lret
push
mov
jg
cs
jb
or
push
inc
sbb
gs
ror
inc
push
pop
xor
jmp
test
iret
icebp
push
push
call
sub
cmp
mov
or
shl
push
inc
sbb
fs
out
push
pusha
or
addr16
faddl
int
xor
push
jmp
push
jnp
jle
mov
jmp
out
fs
jb
and
push
dec
mov
sub
xchg
aas
dec
rcrl
and
stos
cwtl
daa
mov
mov
ret
xchg
ror
sub
pop
clc
jae
clc
das
mov
sbb
cs
pusha
or
rol
or
notb
call
loop
sarb
rorl
mov
test
outsb
jg
xchg
mov
stc
and
mov
pop
scas
fidivs
in
lds
adc
mov
ja
mov
and
mov
xor
std
sub
sbb
push
lahf
stos
mov
dec
add
out
cwtl
pop
jmp
or
mov
inc
add
je
sbb
decb
cmp
filds
mov
bound
push
and
cmp
or
mov
sti
arpl
sub
xchg
dec
pop
mov
push
out
mov
add
dec
inc
loopne
cmp
jbe
inc
out
insb
jns
std
and
frstor
imul
imul
lods
fs
repz
xchg
push
vcvtdq2ps
add
test
mull
jne
add
mov
mov
fisttps
into
lret
add
dec
adc
lds
cmpsl
pop
hlt
cwtl
imull
pop
mov
idivb
mov
ds
pop
or
add
mov
fisubl
sbb
or
jns
iret
sbb
jae
cld
pop
outsb
jle
lods
test
and
dec
jl
jmp
mov
sbb
int
out
mov
lahf
mov
mov
jecxz
jecxz
imul
aad
lcall
and
sbb
sub
lea
inc
sbb
add
jle
and
test
fxtract
outsl
xor
jae
into
pushf
cmpsb
mov
mov
int
xchg
push
push
nop
xor
pop
sub
fisttps
sub
cmp
iret
lret
pop
insb
loope
and
mov
push
popf
leave
jecxz
ss
stos
jbe
lret
adc
stos
pop
sub
mov
adc
jmp
repnz
cs
push
push
sub
add
mov
fmulp
sub
add
and
repz
inc
lret
gs
mov
push
enter
mov
push
in
or
sub
pusha
int3
or
push
cmp
ljmp
nop
nop
insl
dec
adc
pusha
xchg
lock
add
mov
cmpsl
mov
rcl
jmp
div
cmp
stos
rcrb
imul
jae
in
jl
sti
inc
mov
xor
dec
icebp
adc
xchg
out
stos
push
int
inc
xchg
aaa
mov
andb
fnsave
inc
sbb
jl
push
aam
aaa
add
xlat
xchg
sbb
out
pop
mov
jne
loop
mov
mov
movsl
lods
not
into
fmull
xor
test
lret
cmp
add
push
pop
insb
push
int
mulb
mov
and
xor
in
out
mov
idivb
xchg
outsb
lods
or
adc
stos
adc
push
inc
or
test
mov
jnp
or
or
imul
cltd
dec
mov
adc
sarb
cs
imul
pop
lahf
xchg
and
cltd
inc
pop
cmp
dec
xchg
pop
outsl
mov
jno
scas
inc
jmp
daa
sub
push
jne
sti
js
mov
movl
and
subb
xchg
and
xor
inc
pop
test
movsb
imul
cmc
test
fsin
xchg
jle
and
pusha
into
cli
cwtl
movsb
addb
pop
and
sti
fwait
inc
add
lcall
ja
xor
push
jno
xchg
sbb
dec
sbb
iret
popf
outsl
inc
rcrl
dec
sub
aam
mov
pushw
mov
add
lea
rolb
int3
inc
imul
in
ret
in
add
shrb
test
stc
and
ja
inc
mov
leave
movsb
jnp
mov
ficoms
mov
push
and
orb
pop
sbb
addl
mov
in
clc
cmpsl
outsb
dec
dec
jo
inc
mov
scas
ret
dec
loope
iret
hlt
mov
mov
pop
inc
xchg
insb
adc
stos
lea
addb
mov
fisttpll
push
out
add
adc
dec
dec
jb
imulb
shrb
jns
daa
mov
pop
add
jno
inc
pop
xor
lea
push
mov
push
sub
fstpl
push
push
in
inc
lret
fildl
push
enter
cmpsl
jae
pop
mov
cmp
loop
arpl
test
pop
divl
or
push
pop
mov
mov
in
jecxz
xor
pop
fidivs
mov
pop
mov
inc
and
inc
sub
lret
jg
sbb
push
jmp
addr16
cmp
clc
sub
aaa
xchg
inc
lods
lcall
add
fs
loop
shr
std
sbb
pop
dec
push
in
cmp
imul
mov
ljmp
int3
adc
dec
ficompl
jp
lahf
or
movsb
mov
test
jecxz
loop
insl
pop
and
mov
out
in
insb
jb
dec
mov
and
hlt
call
fdivrl
push
test
lods
mov
xor
mov
adc
add
mov
push
pop
sub
mov
mov
enter
test
outsl
mov
rcl
sbb
adc
inc
mov
cmp
pop
and
shrb
mov
jae
call
xor
inc
xor
stc
and
das
fmul
jp
mov
jb
and
icebp
mov
xor
movsb
addr16
pop
sub
inc
fs
test
test
push
call
jno
js
mov
sbb
inc
add
mov
pop
jno
push
out
ret
in
jp
xor
shll
push
ja
cmp
jl
test
mov
sti
mov
pop
loopne
and
mov
xchg
fiaddl
sub
push
and
into
fdivrl
lcall
gs
lcall
mov
mov
outsb
inc
aam
jne
push
lods
das
pop
mulb
and
sub
int
loope
insb
cmp
pusha
pop
adc
cmc
cmp
ret
sbb
xchg
xchg
cmp
mov
and
cmc
arpl
call
xchg
dec
add
and
ficoms
jne
adc
dec
mov
jae
out
pop
data16
fisubrl
cmc
dec
push
popf
jb
inc
movsb
in
and
lods
sbb
shrb
lahf
adcb
push
jle
mov
out
call
push
sub
in
int
pop
jo
pop
mov
aam
lods
dec
cwtl
mov
cmp
test
cmp
jmp
fiadds
popf
adc
adc
bound
push
ret
jecxz
jno
je
jge
xor
push
xlat
repz
add
dec
pop
add
rcrb
and
rcrb
aas
dec
insb
fbld
and
mov
int
push
mov
aam
pop
in
mov
popf
popf
sbb
xor
jge
or
test
dec
sahf
or
das
and
mov
stos
ja
xor
sbb
jg
addb
pop
rcrb
fnstenv
mov
sti
cmp
pop
sti
sub
sub
sub
xchg
pop
in
subl
push
sub
pop
add
sub
repz
test
lret
mov
and
sub
mov
aas
mov
lret
rcrb
sbb
pop
xchg
add
bound
xchg
lea
mov
push
notb
addl
cmp
sbb
mov
fisubs
pop
int
push
notl
xor
shrl
xor
popf
jo
iret
shrl
in
addr16
and
fldcw
lcall
cmpsb
or
jle
cmp
in
lods
mov
addr16
push
stos
loop
scas
inc
stc
adc
addr16
push
lahf
xor
pop
insb
dec
sbb
loop
loope
aaa
out
dec
xchg
dec
psubusb
mov
cmp
pop
mov
cltd
lea
loope
cmp
fists
repz
int
lret
lret
icebp
pop
cmp
loop
pushf
xor
outsb
test
mov
dec
pop
jp
add
pop
jo
adc
mov
idivl
mov
xlat
and
fadd
adc
out
pop
and
cmc
push
push
cmp
xchg
push
fnsave
scas
and
int
scas
fwait
or
cltd
dec
in
xchg
sti
jbe
imul
cli
popf
ss
call
jnp
test
mov
out
popa
mov
ret
imul
mov
xor
add
mov
andb
sub
leave
xchg
js
js
aas
lods
and
xchg
mov
push
out
ja
cld
nop
xor
push
inc
sahf
outsl
pusha
jge
push
cmp
ficoml
sahf
push
cmpsb
cmp
and
daa
inc
mov
xor
mov
repnz
adc
das
scas
add
out
mov
sub
mov
ja
adc
nop
insl
inc
inc
push
fiaddl
pop
mov
cmp
ljmp
xchg
xor
cmpsb
jns
adc
jnp
dec
std
lods
cmpsl
nop
add
jecxz
and
fwait
mov
pop
fadds
vpsrlq
add
mov
jo
push
scas
fnstsw
in
dec
orl
movsb
push
scas
movsl
shr
adc
sbb
sti
mov
xlat
insl
sub
clc
mov
repz
repz
xchg
dec
sbb
and
mov
ret
stc
nop
sbb
pop
sub
pop
icebp
in
pop
cmp
shlb
or
adc
mov
fcomps
fucomp
lods
dec
jp
inc
adc
bound
cld
test
cmpsb
mov
outsb
jae
test
addr16
gs
xor
push
push
inc
cltd
addr16
sbb
icebp
or
push
je
repnz
or
ljmp
fdivrl
mov
repnz
jmp
xchg
xchg
fs
stos
aaa
sub
add
jle
pusha
cld
inc
mov
jae
cmc
pop
push
jo
adc
das
and
int
nop
jbe
pop
addl
pop
test
cli
xchg
add
sbb
scas
sbb
add
jae
nop
cmc
and
xchg
movsb
aaa
sub
ljmp
dec
mov
and
xchg
orl
movsl
sarl
xchg
dec
mov
lds
popa
cmp
fcoml
or
jg
adc
repz
ss
mov
mov
jp
nop
mov
pop
cmp
cmc
insb
outsb
call
add
dec
xchg
cmp
pop
mov
inc
sbb
pop
xchg
pop
or
add
scas
jb
sbb
rcrb
jns
jecxz
int
js
or
mov
mov
xor
mov
mov
mov
lret
es
push
shlb
mov
push
imulb
xchg
dec
dec
add
subl
movb
sbb
push
dec
xchg
pop
jg
scas
std
mov
add
sbb
push
lods
inc
ja
andb
leave
fimuls
pusha
stc
test
jecxz
fstpt
fstpl
cmp
jo
aas
stos
xchg
mov
push
jb
das
cmp
pop
push
inc
xchg
cmp
mov
xchg
cwtl
cmpsl
cltd
test
cli
pop
pop
and
jmp
dec
scas
call
out
repz
sti
out
add
or
sub
xlat
aad
std
xchg
dec
mov
push
enter
rol
andl
sub
inc
mov
arpl
pop
enter
pop
das
ss
dec
push
mov
xor
xor
aad
xor
or
sub
arpl
dec
cmpsl
xchg
mov
mov
lahf
shrb
pop
jo
add
icebp
xor
enter
mov
jle
scas
mov
ds
aam
scas
push
es
sbb
ja
pusha
and
jns
ror
es
xor
sub
lret
ret
arpl
testb
cmp
insb
inc
xchg
popa
dec
mov
cmp
in
mov
bound
cmpsb
xor
lcall
sarb
push
dec
stos
imul
adc
add
sti
xchg
or
push
mov
dec
scas
pop
sub
mov
xlat
sahf
sub
js
test
testb
loopne
addr16
ljmp
xchg
mov
enter
push
jo,pn
jecxz
cmp
lret
inc
cmc
pop
mov
jns
cmpsb
cmp
pop
test
repnz
ds
xor
inc
pop
push
jno
dec
notl
das
mov
and
int3
lahf
repnz
sub
enter
mov
frstor
or
mov
push
cmp
in
addl
mov
push
xchg
inc
push
test
cmpsl
cmpsl
xchg
sub
push
shl
adc
jo
bound
data16
xchg
hlt
dec
pop
sbbb
jae
repnz
sub
jg
adc
lret
cmp
iret
data16
jnp
cltd
mov
mov
aaa
lds
mov
mov
cmp
fstl
sti
test
pop
dec
xor
iret
push
sbbb
imul
mov
insl
rcll
sbb
xlat
xor
add
fwait
mov
out
je
scas
inc
cmp
mov
js
lret
mov
inc
push
xchg
cmp
jb,pt
jge
mov
pop
repz
nop
movsl
pop
std
cltd
aam
add
pusha
jno
inc
stc
nop
insb
ljmp
push
daa
adc
add
jle
fstpt
jmp
scas
rcll
pop
jae
xchg
ja
mov
int
ja
sbb
fbld
int
push
and
aas
mov
out
es
pop
ja
mov
test
outsl
push
pushl
jno
mov
out
inc
repz
sub
das
sarl
imul
adc
fs
hlt
test
mov
in
loope
sub
ja
mov
je
push
das
sub
ret
repnz
outsl
sbb
inc
push
iret
jl
stos
rcr
nop
movl
mov
repz
iret
ret
cmpsb
jmp
test
or
adc
inc
imul
dec
jbe
lods
xchg
sub
dec
mov
sbb
lret
sbb
mov
sub
scas
and
inc
idivl
push
dec
cmp
cmp
add
push
sbb
test
or
loope,pn
or
mov
es
test
push
iret
inc
icebp
xor
bound
into
xchg
pop
addr16
daa
aas
stc
iret
push
sub
out
lahf
lcall
pop
jns
clc
jle
dec
jecxz
loopne
xor
mov
arpl
outsb
and
xorl
lret
cmpsl
sbb
dec
adcl
mov
enter
sub
adc
inc
mov
fnstsw
mov
or
into
mov
icebp
insb
mov
mov
bnd
incb
pusha
xchg
jbe
cld
rcrl
cltd
mov
or
rcl
push
push
daa
mov
mov
or
inc
cld
aad
dec
popf
fdecstp
push
scas
mov
inc
pop
cmp
sbb
dec
jge
sbb
or
shlb
dec
icebp
dec
lahf
sbb
ret
outsl
dec
loope
xorb
fcmovnb
mov
fldcw
and
imul
in
push
mov
inc
or
loop
ret
sub
out
push
mov
cmp
mov
enter
pop
mov
insl
test
push
add
mov
xchg
jecxz
out
cltd
in
aas
jecxz
push
mov
test
push
inc
jg
popa
es
cld
xchg
or
adc
mov
sbb
xchg
adc
in
outsb
sub
ja
es
mov
jg
pusha
icebp
mov
jmp
int
inc
fwait
sbb
jecxz,pt
pop
idivl
sub
clc
push
movsb
insb
lret
scas
ret
lds
das
int3
decb
pop
jg
subb
dec
pop
mov
lds
leave
push
push
dec
mull
iret
sub
sbb
xchg
jb
mov
into
sub
cmpsl
mov
sub
or
add
and
out
into
jp
das
out
aas
in
inc
pop
pop
cmc
in
sub
push
cmp
inc
or
ja
pop
pushf
push
test
ss
in
mov
int3
mov
nop
sbb
arpl
add
or
ds
lea
jb
out
movsl
sbb
bound
sbb
insl
clc
js
push
inc
push
dec
xchg
das
icebp
hlt
inc
out
push
inc
push
stos
es
jp
push
xor
push
test
insl
mov
inc
jo
lret
and
bound
push
stos
add
push
dec
jb
jge
imul
dec
shrl
cltd
decb
inc
xchg
push
jno
xor
pop
lods
clc
fwait
jl
inc
sbb
nop
sbb
cmp
sahf
scas
mov
mov
mov
enter
jle
dec
pop
in
test
or
loope
sub
dec
mov
mov
add
je
les
pop
or
add
sub
aas
xlat
test
add
imul
lods
dec
pop
pop
jle
add
mov
cmp
mov
add
std
lds
pop
adc
jne
jnp
fstpt
xchg
lock
mov
push
aas
cmpsb
push
cmp
cli
ret
rclb
aam
xor
jle
pushf
jo
sahf
mov
push
mov
gs
sbb
dec
cmc
jno
add
mov
xchg
and
lcall
into
dec
arpl
lcall
sbb
push
aam
testl
xchg
decb
jecxz
sub
pop
lret
rol
mov
loope
aad
fmul
ret
cwtl
mov
fmull
pop
mov
scas
pop
mov
sbb
sbb
dec
or
mov
dec
lock
nop
adc
nop
push
clc
iret
data16
das
loop
scas
roll
mov
rclb
out
pop
sbb
fildll
mov
inc
into
jecxz
leave
jge
test
push
dec
add
mov
andb
sar
imul
xchg
inc
xor
xchg
xor
sub
cli
inc
xchg
imul
add
or
test
das
insb
sbb
and
xor
sbb
adc
ds
enter
loope
mov
movb
xchg
popa
add
add
push
mov
fldt
mov
dec
cmp
sub
cmpsl
xchg
fdivl
gs
mov
loop
mov
icebp
movsb
xchg
add
sub
cmp
push
sbb
push
sbbb
sub
add
dec
imul
repnz
mov
movsl
nop
jne
inc
mov
pop
lret
pop
dec
test
mov
xor
std
sub
ljmp
pop
rolb
fdivs
dec
orb
mov
test
inc
jl
repnz
hlt
cmp
jecxz
insl
pusha
nop
in
mov
loope
pop
ljmp
neg
outsl
iret
fstp
outsl
xchg
mov
insl
fld
scas
inc
mov
testb
aam
arpl
push
and
xchg
cmp
push
repz
cltd
cmp
testl
adcl
mov
pop
push
lcall
pop
cmp
cli
inc
lcall
inc
mov
push
es
sbb
or
add
test
adc
adc
lock
stos
shlb
mov
cmp
push
flds
jg
aaa
sub
test
push
lcall
shll
in
add
out
repz
mov
push
call
add
inc
movsb
iret
mov
das
adc
popa
out
pop
dec
pushf
call
stos
pop
les
adc
mov
daa
movsb
jo
mov
jo
and
push
lret
fidivs
stos
ljmp
or
pushf
xchg
cmp
xchg
xor
push
sub
mov
cld
mov
mov
sbb
jo
loopne
mov
xchg
xor
mov
adc
mov
adc
mov
cmpsb
xor
ja
jnp
and
rorl
clc
xchg
or
idivl
fstps
das
sbb
roll
pop
mov
sub
dec
pop
sub
xor
mov
cmpl
cmpsl
mov
out
mov
xor
inc
fsts
adc
jecxz
add
ja
xor
push
popl
test
fldenv
add
in
ljmp
push
dec
mov
inc
push
jmp
es
add
xor
and
ficoml
or
push
adc
xchg
dec
mov
shl
call
andb
sub
sbb
mov
or
test
les
pop
dec
push
imul
int
pushl
iret
mov
pop
add
inc
inc
pop
push
pop
shrl
into
push
loopne
imul
int
jle
call
xor
sbb
inc
or
cmp
test
outsl
xlat
ja
or
dec
push
mov
add
jnp
cltd
jl
mov
in
out
pop
cli
shrb
sub
cmp
adc
inc
push
xchg
mov
insb
leave
fsubrs
mov
mov
in
mov
mov
sbb
cmp
xor
mov
mov
adc
xor
ret
pop
and
lret
inc
leave
mov
mov
fwait
imul
or
or
ja
add
mov
xchg
movsl
dec
enter
sbb
movb
sbb
lds
loope
xchg
mov
xor
mov
arpl
rorb
push
clc
dec
loop
mov
jle
testb
inc
push
fistl
xchg
sub
hlt
mov
fs
add
in
sbb
sub
fbstp
mov
add
lds
ja
movsl
stos
push
mov
sbbl
fwait
and
pop
mov
dec
mov
rcrl
jmp
push
mov
leave
test
jp
cmp
push
jno
pop
mov
add
aas
and
mov
xchg
hlt
aaa
mov
and
dec
stos
xchg
dec
fcmovbe
insl
data16
pcmpeqb
pop
adc
lock
iret
push
push
sub
ljmp
push
pop
scas
aas
repnz
mov
push
jmp
or
xchg
inc
or
aaa
stos
push
sub
inc
pop
cmp
mov
push
insl
adcl
xor
mov
add
idiv
jp
in
sbb
cltd
add
in
test
jnp
rolb
sbb
jl
push
into
andl
xorl
les
in
pop
dec
pop
adc
sub
inc
mov
out
adc
inc
enter
lock
fnstsw
shrl
aad
mov
push
cmp
mov
nop
xlat
outsb
add
fwait
push
push
insb
aad
push
sti
inc
dec
fucomip
mov
jae
jns
in
xchg
push
dec
inc
call
jmp
mov
call
fldenv
movsb
daa
push
cmc
mov
sub
pushf
shl
dec
loop
arpl
sub
pop
jb
pop
daa
imulb
adc
dec
out
shlb
mov
add
cmp
sarb
int3
sbb
fnsave
shrl
pop
xor
jno
repnz
and
incl
cmp
or
sbb
nop
cmp
jp
mov
sarl
lret
pop
xchg
mov
pop
lahf
push
jns
mov
das
or
inc
outsl
enter
aad
lret
negb
scas
add
fwait
mov
pop
or
pop
push
sub
daa
mov
test
repz
add
and
jecxz
mov
arpl
push
ljmp
jno
xlat
cmp
enter
sub
pushf
mov
fdivrl
mov
xor
inc
push
xchg
daa
xor
or
mov
sub
daa
stos
dec
dec
aas
bound
movsb
push
jecxz
jge
movsb
hlt
mov
pop
fisubs
xchg
fisubrl
adc
cwtl
fs
mov
in
pop
ret
mov
lret
out
push
mov
sbb
push
adc
hlt
inc
jne
scas
and
subl
ss
ror
outsb
sub
hlt
push
stos
adc
les
mov
xor
dec
in
shrb
insb
test
dec
sbb
xchg
cli
pusha
movsb
jnp
inc
pop
adc
sbb
gs
adcb
insl
call
pop
jne
mov
into
pop
cmpsb
push
out
fwait
xor
jp
fsubl
xchg
std
cmp
xlat
outsb
call
cmp
lods
mov
mov
dec
inc
insb
sar
pop
sbb
outsb
pusha
negl
lock
and
xor
movsb
jle
loope
jp
out
test
push
push
xor
sub
xor
mov
rol
push
jecxz
imul
xor
inc
mov
ret
pusha
mov
add
mov
daa
cmp
add
xor
loop
mov
jb
leave
std
xchg
divl
push
add
xlat
mov
bound
xchg
sub
loopne
jge
scas
mov
cmp
inc
popa
mov
xchg
jbe
lahf
xor
jmp
pop
and
push
and
lods
cmc
mov
cmpsb
mov
aaa
adc
xlat
out
push
sub
and
jmp
push
lea
repz
pop
stc
js
mov
cmp
adc
mov
cmpsb
pushf
sbb
adc
sub
xchg
je
insl
sub
popf
xchg
mov
in
mov
pop
out
cmp
jns
rol
ficomps
pop
adc
insb
xor
aam
ds
out
daa
in
sbb
lcall
sbb
fldpi
mov
push
fidivs
jmp
adc
xchg
sub
das
jnp
dec
mov
and
and
push
jl
push
pop
ret
push
mov
push
mov
call
mov
or
add
push
and
movsl
lds
mov
lahf
lds
int
xor
mov
ds
adc
ret
adc
in
lods
icebp
les
jne
outsl
int3
dec
loope
adc
pop
hlt
call
int3
sbb
lea
mov
lret
mov
out
xchg
push
out
add
add
lret
inc
or
rcll
stos
inc
hlt
gs
push
mov
jne
cltd
push
mov
sarl
xor
inc
repz
and
inc
movsb
cmp
inc
pop
pusha
adc
mov
cld
cmc
jbe
loop
xchg
jnp
mov
add
mov
jno
jg
push
stos
mov
xor
xchg
andb
scas
adc
and
xor
dec
jge
ret
adc
les
adc
mov
mov
lret
inc
and
fld
and
push
loopne
cmp
std
rolb
and
ficompl
stc
dec
jb
dec
xchg
sub
xchg
sub
mov
dec
xchg
pop
jle
mov
cltd
mov
mov
cld
cmp
and
lcall
cmp
pop
popl
sbb
adc
cmp
mov
orl
mov
push
and
rcrb
cld
cli
sbb
push
push
fisubrs
adc
lods
jmp
bnd
mov
or
adc
mov
jle
rcl
rorb
stc
mov
sub
lahf
jl
jb
lods
mov
sub
sbbl
push
jecxz
cmp
test
pop
xchg
inc
pop
mov
addr16
sub
jno
add
fnstcw
iret
jne
out
out
adc
jmp
adcl
lds
mov
out
inc
lret
pushf
daa
stos
or
mov
ds
imul
jne
add
jo
jb
and
mov
data16
and
ret
sub
dec
in
jmp
cmp
ss
cli
dec
mov
inc
les
imulb
pop
testl
xchg
pop
rcll
xchg
repz
push
aad
mov
fcoml
imulb
test
stos
and
mov
mov
xor
inc
xchg
xor
pop
xorl
mov
mov
adc
outsl
test
push
jo
mov
xchg
mov
outsb
testb
xchg
repnz
out
in
cs
mov
cld
stos
ss
popa
xor
mov
ret
out
jo
mov
cmp
ljmp
fnstenv
nop
and
adc
test
loopne
insl
sbb
add
xor
cli
addr16
pop
mov
sbb
inc
xchg
adc
push
movsb
xchg
adc
sbb
divl
mov
outsb
in
out
push
in
push
xor
xchg
data16
stos
jmp
add
jbe
push
stos
push
dec
in
arpl
aad
imul
push
leave
sahf
jnp
add
xor
cmpsl
and
mov
out
cmp
cld
fwait
test
or
cmc
insl
or
int
jp
pop
mov
lods
nop
test
testl
or
in
ficoms
jp
or
pop
dec
push
xchg
loope
jnp
pop
daa
nop
cmp
dec
mov
inc
insb
fstl
mov
inc
arpl
pop
das
sub
mov
popa
sbb
sti
pop
or
aas
bound
push
lock
stos
in
loopne
test
icebp
out
jecxz
std
mov
and
test
xchg
adc
inc
mov
arpl
xchg
out
mov
arpl
mov
or
pop
adc
xor
es
xor
push
lods
adc
xor
lret
out
pop
mov
inc
inc
outsl
fsubl
sbb
add
out
movsb
push
rolb
add
dec
sbb
mov
add
inc
leave
jno
aad
ljmp
lods
inc
inc
arpl
jae
imul
int
aas
jb
lret
inc
jb
ljmp
mov
decl
mov
fdivr
push
cs
xor
repz
sbb
add
dec
cmp
bound
pop
mov
jns
add
outsb
sub
dec
sahf
shrl
pop
loopne
addr16
add
push
mov
or
adc
adc
and
lret
popf
out
ret
stos
ret
mov
stc
mov
nop
inc
pop
test
push
xor
cmp
add
sbb
inc
cmpsb
adc
mov
and
pop
out
iret
cmc
iret
fldt
mov
and
dec
rcrl
xchg
mov
ja
aad
add
pushf
daa
jmp
push
insb
lods
jo
jno
mov
loope,pt
dec
cmp
cmp
in
arpl
daa
ljmp
int3
dec
call
ds
xchg
outsl
mov
xor
aam
mov
mov
xchg
jl
dec
mov
inc
nop
sbb
mov
jnp
scas
jecxz
pop
mov
ret
mov
mov
and
push
xchg
fisubl
jp
jb
and
es
mov
popa
cmp
xchg
cmp
ffreep
rclb
mov
iret
mov
cltd
mov
in
icebp
pop
xchg
xor
jnp
sahf
fdivr
mov
sarb
das
xchg
pop
repnz
or
push
in
push
add
loop
lock
cmp
mov
add
inc
mov
push
sub
loope
sbbl
mov
and
xor
jecxz
xor
jle
clc
pop
lods
mov
fdivl
sar
sub
xchg
xchg
lods
cmp
jecxz
aad
sbb
outsl
jae
lea
testl
popa
or
cmp
jbe
pushf
cmc
dec
cmp
mov
jmp
add
sub
mov
fsubrl
mov
or
jl
mov
xchg
pop
sbb
rcrl
lock
ficomps
loopne
in
rcrl
sarl
mov
mov
mov
xchg
push
xchg
cmpl
add
mov
in
pop
cltd
fnstcw
shll
sub
sbb
lock
sbb
push
cmp
pop
mov
adc
sbb
ja
dec
xchg
sbb
adc
test
subl
xor
adc
mov
push
loop
lods
mov
aad
daa
int
or
rorl
in
push
mov
mov
push
test
xchg
xchg
xchg
decl
test
xchg
mov
add
pop
addl
mov
popf
jae
mov
pop
arpl
int3
arpl
std
jmp
xorb
shrl
xlat
test
roll
loop
push
mov
mov
popf
cmp
fstps
clc
sub
pop
fwait
sbb
fcompl
mov
xchg
sub
xlat
pop
loopne
pop
movntq
imul
push
inc
pop
out
sub
in
fdivl
test
bound
and
ds
dec
stos
mov
je
cmp
sbb
movntq
jae
xor
pop
out
mov
in
fwait
push
fstl
stos
dec
fnstcw
or
lock
nop
add
cwtl
pop
mov
push
std
nop
ret
das
mov
push
mov
dec
lahf
cmp
fdivrl
pop
arpl
in
jge
jle
mov
scas
mov
fsubl
in
jo
push
addr16
mov
test
iret
dec
lods
ja
inc
fbstp
adc
jl
pop
into
fnstsw
jns
mov
or
or
jae
ret
push
ficoms
mov
xor
mov
sbb
hlt
addr16
lahf
lock
xchg
jne
enter
dec
or
bound
aas
outsb
xor
call
mov
iret
hlt
sub
hlt
les
shl
push
or
xor
or
shll
movsl
jp
les
pushf
insb
cld
cwtl
in
clc
cwtl
or
ljmp
cmp
inc
inc
fs
movsl
cmp
mov
cmpl
movl
cmp
jbe
movhlps
adc
daa
xchg
mov
fisttpll
jle
scas
jne
in
cmp
daa
pop
gs
cmpsl
dec
addr16
mov
arpl
loope
xor
cltd
inc
push
ljmp
mov
push
xchg
mov
pop
out
jae
adc
add
mov
cmc
pop
je
pop
fnsave
add
cmp
jg
jmp
test
fwait
or
stos
xchg
and
cmp
cmp
dec
scas
aas
fsubl
xchg
test
in
push
xchg
in
mov
test
pop
dec
lods
mov
sbb
and
cs
add
pushf
sbb
xor
mov
mov
les
adc
into
fidivrl
ds
jnp
sbb
add
pop
xchg
popf
and
push
mov
stc
je
mov
pop
push
add
pop
sbb
pop
pop
mov
lea
adc
lods
insb
cmp
jns
jns
notl
jecxz,pn
cltd
xor
js
inc
andb
call
enter
jmp
or
cmp
out
xchg
jl
dec
mov
hlt
ja
sarl
pop
cwtl
mov
push
add
pop
xchg
daa
mov
adc
sub
mov
push
and
push
add
in
scas
cmp
lret
jmp
cmp
imul
jo
fdivl
sub
sub
push
fwait
jle
test
aaa
sbb
xchg
and
out
adc
movsb
sti
stos
add
push
lret
jae
lods
jae
ja
outsb
andb
push
lock
dec
jmp
mov
orb
fnstcw
push
dec
pop
jl
dec
scas
ss
mov
fstpt
inc
mov
aam
int
mov
andl
aaa
sahf
popf
ja
cmp
cmc
dec
aas
data16
or
ss
cmpsl
adcb
repz
inc
xor
mov
dec
push
jnp
cmpsl
and
setge
push
arpl
lods
inc
fwait
push
jno
xorb
sbb
sahf
in
cld
add
adc
mov
adc
mov
add
mov
aaa
or
and
test
lret
imull
ss
fdivr
ds
xor
ss
or
cmpsb
loop
pop
jnp
mov
shlb
dec
fidivrl
jg
mov
cli
xchg
inc
push
mov
shrb
sbb
rorb
mov
push
mov
adc
fisttpll
sbb
and
in
push
je
xor
sbbl
sbb
mov
jmp
ljmp
push
mov
test
and
shlb
testb
add
notb
cmp
scas
or
dec
dec
movsb
jo
lea
pusha
pop
in
adc
and
and
pop
add
xor
arpl
loope
mov
shld
xchg
mov
outsb
addl
insl
fwait
or
xor
in
hlt
sbbb
push
mov
mov
insb
mov
std
popf
movsb
inc
ficomps
ss
fldenv
lea
lods
dec
pusha
ret
add
sub
enter
jb
stc
sbb
ror
push
add
negb
sub
js
inc
xchg
stos
test
mov
je
dec
mov
and
mul
lret
fdivl
pop
mov
or
lock
add
add
push
adc
ficoml
stos
int3
jb
pop
mov
movsl
movsl
mov
call
decl
push
lea
jge
push
std
jp
jne
test
lret
mov
mov
cmp
push
call
dec
pusha
test
cmp
jg
inc
mov
pop
mov
fimuls
mov
out
movsb
inc
fildl
dec
push
pop
push
push
hlt
repnz
jne
add
psubsw
or
in
push
repz
leave
push
cwtl
lret
push
jp
xchg
mov
repnz
test
mov
mov
popf
clc
and
and
lock
mov
sub
pop
lcall
cmovb
out
jge
push
push
mov
mov
lea
enter
std
adc
sbb
jne
xor
lods
add
ret
insl
cmp
into
sub
ret
xor
push
sbb
addr16
shr
stc
test
xor
jge
dec
xlat
scas
nop
add
adc
cltd
rcr
push
inc
xor
subb
pop
pop
pop
jecxz
jo
fildll
mov
rcll
scas
push
subl
xchg
shrl
add
jl
aam
test
dec
push
mov
inc
xlat
cmp
mov
sbb
pop
les
jo
xchg
into
gs
scas
and
mov
or
push
mov
or
and
and
test
jns
mov
rol
xor
je
pop
stos
loopne
enter
dec
stc
mov
popa
loopne
push
icebp
mov
in
inc
pop
lahf
and
loop
adc
dec
sub
sbb
push
in
push
loopne
cmpsl
es
mov
inc
inc
fistpl
aaa
shll
mov
lret
arpl
mov
sub
arpl
lods
add
aad
andb
add
test
fsubrs
push
ret
dec
xor
fcomps
loopne
jae
vandps
inc
fstl
adc
add
and
fidivs
orb
and
incb
lea
adc
xlat
orl
ss
sub
sbb
aas
mov
push
stos
pop
add
test
repnz
push
test
test
das
xor
adc
sub
test
push
jbe
mov
and
mov
pop
add
aaa
pushf
pop
inc
rorb
jecxz
out
loop
xchg
rcll
adc
movsl
pusha
push
cwtl
arpl
andl
mov
push
test
mov
lcall
sbb
pop
xlat
outsb
xchg
xor
jne
mov
pop
xchg
sub
adc
cltd
lds
mov
mov
loopne
lea
xor
inc
mov
pusha
cmp
shlb
sbb
push
arpl
push
cmp
insb
cmpl
dec
notrack
inc
lods
popf
xor
push
or
jp
dec
push
popf
jg
sbb
test
adc
inc
mov
sbb
ljmp
sub
jbe
cmc
xchg
je
add
nop
gs
push
inc
mov
lds
jl
pop
mov
mov
jne
aas
lods
int
lret
dec
icebp
sbb
daa
rolb
sub
sbb
fcmovu
dec
adc
loope
lahf
sbb
jl
mov
or
cmp
clc
xchg
sti
rol
push
sbb
mov
rcl
and
mov
sbbb
cli
sar
lock
icebp
push
scas
in
orl
mov
pop
fs
into
in
xor
lds
movsl
push
xchg
jl
or
das
imul
cwtl
mov
mov
cmp
arpl
mov
pop
mov
add
add
mov
sarb
jb
pop
adc
or
pop
mov
xorl
nop
inc
push
inc
pop
pusha
ja
push
clc
adc
ficoml
stos
or
mov
and
ljmp
cmpsl
popa
rcr
pop
cmpsb
jge
je
movsl
cmp
rcl
push
or
mov
sub
xlat
jmp
push
adc
jbe
adc
or
cwtl
add
add
xor
add
or
and
addl
sub
xchg
sub
mov
inc
vmptrst
pop
cmpsl
cmc
push
sub
test
pop
cmp
ja
in
sub
pop
and
mov
mov
pop
loopne
mov
jnp
cmp
test
inc
and
xlat
outsb
jmp
das
push
out
push
or
or
lds
jb
fs
lock
push
mov
cmpl
pop
cmpsl
in
xchg
sub
or
and
mov
cltd
xchg
or
jbe
xor
mov
cwtl
loopne
dec
inc
dec
pusha
rcrl
jle
jecxz
in
or
test
mov
jle
pop
cltd
cmp
cwtl
ljmp
mov
int
mov
stos
cmp
popf
cmp
movsl
ja
add
jle
lret
insb
psrad
xchg
pop
mov
inc
repz
xchg
inc
xor
sub
xchg
outsb
inc
xor
sahf
jmp
cmp
in
cld
test
stc
fistpl
xorb
fwait
inc
fwait
xchg
fxch
arpl
xor
ljmp
in
sbb
pusha
in
add
rcrl
test
mov
insb
push
cmp
add
je
inc
mov
fsubp
xchg
add
mov
ljmp
call
push
mov
in
sbbl
sahf
out
ret
in
mov
jnp
mov
mov
sub
sbb
outsl
pop
lock
jl
mov
push
adc
lods
in
jae
dec
mov
mov
stos
mov
jmp
mov
jp
xchg
sbb
lds
cmc
mov
mov
mov
and
and
jb
data16
fs
lret
pop
mov
mov
push
push
jmp
adc
call
loop
sahf
mov
or
cmp
incl
pop
scas
mov
sbb
mov
filds
lds
icebp
aam
aam
pop
fmul
in
fists
dec
inc
sar
dec
out
jb
test
arpl
mov
jl
lret
mov
sbb
filds
mov
cmpsl
pusha
aad
pop
pop
jg
cmp
dec
mov
jae
notl
cmp
mov
cmpsl
in
jecxz
pop
stc
inc
testb
or
inc
ret
add
jl
push
mov
mov
and
les
xchg
xor
arpl
push
ljmp
lock
mov
dec
imul
cmp
jl
xchg
sub
clc
sub
mov
decl
in
repz
sbb
mov
inc
shl
aaa
adc
stos
mov
fisttpll
mov
pop
aad
mov
jg
sbb
inc
outsb
mov
mov
addr16
imul
lock
sub
pop
mov
push
fdivl
sub
jle
cmp
mov
jne
inc
or
cld
dec
sbb
mov
sahf
sbb
sbbb
cmp
outsl
cmp
out
sarl
test
mov
scas
cmpsb
lea
mov
jp
arpl
sub
scas
repz
std
jge
or
addr16
and
sub
jae
inc
xor
and
iret
cwtl
xor
out
inc
mov
rcr
mov
pop
push
cmpsl
or
or
sub
scas
std
push
adc
adc
mov
push
adc
pop
pop
cmpsb
mov
xchg
mov
adc
test
loopne
and
mov
push
jo
cmpsb
pop
jg
nop
or
xchg
insb
ffreep
loopne
cmp
cmc
sub
scas
not
popf
stos
add
pusha
aam
std
mov
adc
jg
mov
add
loope
mov
jle
imul
inc
aam
hlt
ljmp
lds
pop
push
sbb
mov
and
and
jp
ja
jecxz
cmp
aas
out
popa
xchg
mov
enter
mov
mov
jmp
add
and
leave
cmpsb
adc
aad
xor
jmp
jo
push
xor
test
pusha
xor
aad
push
js
cmc
push
daa
cmp
or
scas
roll
fs
js
sub
int3
decb
cmp
or
xchg
mov
enter
stc
stos
sub
and
lea
jp
pop
scas
inc
das
rol
jae
sub
mov
inc
dec
pop
repnz
scas
cmp
aaa
pusha
fildll
scas
out
es
jge
and
roll
adc
jne
mov
pop
jp
push
pop
mov
jne
cmc
cmpsb
ds
sub
xlat
mov
or
pusha
pop
and
sahf
dec
sub
aaa
push
xchg
dec
int
mov
push
mov
dec
push
lahf
daa
add
fwait
push
jne
ljmp
xor
push
cmpsb
out
ficoml
mov
xor
enter
push
fsubrp
aas
jbe
and
gs
sbb
inc
aaa
enter
aad
xchg
mov
mov
imul
xor
popf
or
ss
push
dec
or
xchg
adc
fistpll
stc
test
mov
addl
or
mov
addb
pop
pop
adc
mov
xor
scas
add
jecxz
pop
lahf
ss
pop
idivb
add
lret
cmp
cmpsl
adc
push
mov
xchg
mov
out
xor
imul
ja
jecxz
pop
cmp
decb
in
mov
cltd
roll
push
mov
data16
and
xchg
std
sbb
fimuls
into
adc
jbe
clc
mov
notl
sub
pop
cmp
rorl
push
shlb
loop
dec
dec
unpckhps
mov
into
dec
pop
arpl
sub
lods
shrb
out
jbe
int
push
hlt
mov
push
ljmp
push
dec
jno
jmp
jo
push
adc
icebp
or
aaa
mov
out
outsl
sub
cmp
mov
push
pop
int3
lret
fs
or
imul
push
icebp
movsb
mov
sub
cwtl
loop
dec
lock
dec
test
fdivrl
push
cmp
pop
gs
lret
fistpll
adc
dec
sbb
popf
bnd
enter
cmp
mov
stc
mov
testb
pop
imulb
or
js
fs
or
bnd
jl
and
push
cmp
jno
mov
xor
stos
add
inc
movsl
jecxz
aaa
leave
int
test
inc
and
cs
cwtl
dec
and
cmpb
fisttps
add
inc
loope
aaa
push
pop
mov
fld
xor
mov
sub
addr16
notb
lds
out
cs
pop
clc
mov
xlat
js
or
rcl
inc
add
stos
cmp
adc
aaa
lret
mov
push
out
fistps
stc
pop
and
pop
stos
push
sbb
or
clc
das
add
push
loop
stc
adc
lret
gs
xor
ret
iret
sub
cmp
outsl
fstpt
lcall
fiaddl
cwtl
je
xor
xor
test
mov
dec
repz
jo
dec
push
mov
cmp
mov
sub
or
test
and
sub
std
dec
sbb
popf
les
iret
cltd
call
int3
out
or
push
test
ja
jg
rcl
push
in
mov
xor
push
dec
lea
mov
lea
xchg
ret
pop
movsb
imul
test
xchg
mov
xlat
mov
sub
gs
xchg
addr16
inc
inc
cmp
jns
out
ret
test
dec
out
bound
dec
dec
inc
dec
insl
adc
cmp
sub
arpl
lretw
in
mov
arpl
inc
loopne
push
fbstp
imul
push
mov
adc
je
in
mov
test
repz
xchg
out
or
cmc
test
shr
std
push
mov
jo
pusha
fnstcw
push
stos
or
xlat
addr16
cwtl
ljmp
mov
pushf
pushf
fsubs
ss
and
inc
loope
mov
sti
aas
mov
les
mov
xchg
jns
xorb
shlb
inc
mov
fs
pop
repnz
loop
idivl
sbb
sub
sbb
xchg
adc
mov
cmpsb
test
std
cmp
into
xchg
add
stc
push
sub
pop
sahf
or
mov
data16
es
imul
stc
mov
movsb
cmp
and
pop
push
aad
in
and
push
aaa
xor
or
mov
jmp
xchg
lods
fidivrl
xlat
cmp
sub
ret
lahf
inc
mov
jns
pop
cmp
lcall
cwtl
jb
imulb
leave
jg
adc
mov
adc
insb
add
adc
test
arpl
sub
sahf
ss
push
mull
adcl
scas
or
or
pushf
sbb
and
jne
faddl
xor
xor
xchg
sub
add
jns
cltd
xor
lods
lahf
mov
xor
push
add
mov
dec
and
outsb
mov
out
lods
scas
mov
xor
pop
ficomps
xchg
push
int3
mov
fcmove
psllw
cmp
call
dec
mov
mov
inc
inc
dec
mull
movsb
out
jne
jno
mov
ds
in
insb
cwtl
or
dec
pushf
xor
fdivrs
in
sahf
xor
inc
mov
push
inc
sub
inc
mov
mov
mov
mov
push
adc
mov
fdivs
subl
insl
sub
in
mov
aam
outsl
or
sbb
jo
sahf
pop
dec
ret
outsb
xchg
and
shlb
cmp
and
popa
and
scas
lds
repz
lds
xchg
test
enter
add
xor
aaa
xchg
stos
movsl
mov
pop
iret
ret
jae
enter
xchg
rorb
std
subl
jns
jb
ds
inc
imul
repnz
divb
sub
pop
imul
or
dec
test
test
scas
xchg
movsl
jne
jecxz
sbbb
jmp
ja
arpl
pusha
cs
bound
sbb
call
test
or
sbb
sbb
stos
lods
mov
es
push
sti
stos
mov
insb
rolb
and
iret
mov
jnp
gs
int3
mov
mov
jbe
iret
daa
xor
push
out
cmp
fmul
push
fwait
add
in
mulb
test
cmp
imul
jnp
sbb
imul
inc
aam
mov
imul
sahf
aad
jmp
inc
ret
xchg
ret
push
out
xlat
pop
push
xor
pop
or
push
xchg
rorb
mov
mov
lret
mov
sub
mov
mov
and
movsb
pop
xchg
push
enter
into
cmc
negl
mov
andb
shl
inc
ret
sbb
je
mov
jb
mov
xchg
inc
adc
ljmp
insl
iret
jns
mov
push
je
fldt
xchg
sub
das
push
imul
and
and
cwtl
mov
dec
jl
sbb
sub
lret
mov
popa
pop
add
nop
dec
nop
push
in
push
pushf
jle
adcb
test
mov
mov
mov
xchg
mov
mov
lock
sub
sub
pop
stos
test
rcl
push
push
fbld
mov
pop
adc
arpl
adc
addr16
and
dec
push
insl
cmp
mov
aad
outsl
adc
out
sti
out
sbb
pop
mov
xchg
imul
arpl
scas
test
mov
je
push
popf
fpatan
ret
pop
xchg
adc
aaa
movsb
jg
inc
movsb
jg
enter
cli
test
aam
lahf
mov
sbb
ja
test
ret
nop
popf
mov
repz
mov
iret
pop
jns
xor
sbb
popa
xor
dec
test
mov
add
mov
movsl
aam
rorb
add
or
push
stos
mov
pusha
cs
lret
jno
pop
cmp
sub
xchg
or
xchg
jge
sbb
stos
adc
jge
mov
stos
add
nop
cld
pop
or
pop
mov
jmp
sub
cli
icebp
add
inc
negl
das
loop
scas
out
mov
xor
adc
push
xor
lgs
out
mov
add
mov
testl
mov
lock
fs
jb
in
xchg
movsb
and
loop
sub
mov
test
test
adc
jmp
cmp
outsl
cs
add
or
cmpsb
mov
cmc
cwtl
pop
adc
stos
shr
dec
mov
les
cmpl
push
ret
arpl
inc
lods
cmp
scas
jg
add
add
cmpl
enter
pop
rorb
inc
in
add
aas
movsl
and
adc
in
fbstp
dec
clc
lcall
mov
fbstp
push
inc
inc
in
xchg
mov
pop
mov
pop
aad
out
ret
cmp
imul
pop
rcrb
sbb
stos
out
mov
xlat
fwait
push
popf
nop
jae
push
movsl
jp
jnp
push
inc
les
out
cmpsl
inc
test
out
mov
cltd
xchg
testl
ss
add
mov
fsubp
pop
add
inc
out
cmp
jb
xchg
add
jns
pushf
jo
sub
mov
adc
test
pusha
nop
mov
insb
jl
pop
call
fdivl
hlt
dec
mov
xchg
daa
in
rcrb
mov
enter
pushf
push
daa
push
jle
jl
repz
rol
pushf
push
cmp
repz
mov
xchg
movsb
lods
push
in
sti
dec
sbb
fstl
mov
outsl
sub
sahf
mov
or
jno
hlt
fwait
cmp
pop
cltd
mov
jg
xchg
xchg
push
adc
pusha
outsl
add
repz
and
and
add
les
cltd
std
test
inc
xlat
sub
pop
sub
mov
dec
loopne
fdiv
fwait
xchg
outsl
pusha
inc
push
nop
jmp
lds
fmul
test
popf
int
int3
addr16
popf
jo
dec
imul
push
push
pop
push
inc
xor
jmp
dec
jmp
cmp
jecxz
fcoml
pop
mov
pop
addr16
fidivrl
pop
dec
dec
fdivrl
dec
mov
cmp
add
gs
mov
lea
nop
sahf
jp
cmp
cmp
imull
jmp
xchg
xor
jge
imul
out
cltd
pop
dec
pop
in
mov
mov
adc
stos
or
mov
push
jae
dec
or
fdiv
pop
xchg
int3
arpl
jnp
sbb
xchg
pop
mov
dec
cli
mov
mov
ret
push
add
into
in
dec
push
sbb
cmp
xchg
mov
int3
jle
cmp
lret
in
rol
dec
xor
stos
arpl
mov
mov
lahf
pop
clc
in
cmpsl
fucomp
scas
mov
shl
ret
inc
fucom
cvtps2pi
lods
dec
insl
dec
repnz
shlb
mov
addr16
jmp
cmpsb
sbb
mov
movsb
mov
rorb
aad
and
bound
mov
movsl
mov
lods
jmp
mov
popf
xor
sub
fsub
mov
adc
sbb
fidivrl
enter
popf
shlb
cmp
pop
out
mov
ljmp
sbb
mov
in
jp
ljmp
fcmovu
xchg
lock
adc
and
pop
icebp
jns
mov
pop
add
xor
ret
std
pop
fucomip
jb
lea
cmp
xchg
scas
push
lahf
pop
sbb
xchg
cs
fnstenv
inc
loop
push
xlat
sbb
mov
jae
lahf
push
pushf
jno
subb
in
jo
jae
sbb
adc
data16
lcall
jg
add
add
dec
mov
orl
nop
cmp
sbbb
jo
scas
insb
loope
xchg
or
sahf
mov
andl
and
inc
ljmp
sbb
aad
ljmp
mov
int3
lret
js
pop
mov
mov
movsl
icebp
pop
adc
jp
mov
cld
dec
cmp
cmp
movsl
cmp
divl
out
mov
popa
sub
imul
mov
sub
jnp
mov
or
pop
mov
out
in
or
cmpsb
sbb
pushf
jbe
icebp
gs
lahf
adc
cmp
ja
lahf
ss
lret
bound
test
jg
adcb
jae
xchg
or
or
sbb
cltd
add
pop
hlt
mov
testb
mov
mov
jl
dec
in
mov
setp
jg
insl
add
mov
sbb
sub
pop
je
insl
clc
scas
stc
nop
push
and
xchg
or
data16
xor
mov
cmp
add
pop
nop
jo
popa
imulb
cmpsl
ds
movswl
lea
ret
pop
mov
sbb
or
jp
and
push
sbb
jnp
mov
cmp
mov
adc
mulb
sub
xchg
jae
xor
pop
xchg
push
rorb
repz
mov
je
pop
xor
cmpsl
mov
xor
push
pop
jle
mov
popf
test
lods
sti
rcl
insl
pop
in
or
popf
je
test
mov
cmpsl
rcll
mov
cmp
rol
cltd
cmc
test
cwtl
clc
adc
jp
pop
rclb
xor
mov
adc
imul
adc
sti
mov
sarl
cs
outsb
je
popf
mov
clc
and
xor
cld
mov
cmp
cmp
jg
cmp
aam
ds
je
xlat
daa
adc
dec
movsl
pop
mov
inc
adcl
movsb
scas
mov
or
mov
sbb
dec
or
lret
enter
sbb
push
gs
addr16
rolb
icebp
mov
lock
pop
mov
mov
xchg
mov
xchg
or
loopne
adcb
push
add
inc
lahf
test
adc
inc
add
cmpl
sbb
adc
stc
pop
popa
mov
push
std
sahf
iret
mov
mov
cmpsl
pop
add
pop
push
push
push
push
sti
sahf
pushf
movsb
mov
out
enter
call
scas
insb
sti
popf
xchg
stc
insl
sub
sbbb
sub
test
xchg
push
loop
pop
ss
cld
adc
cmp
dec
or
inc
sbb
mov
lods
and
fcoms
mov
mov
mov
loope
pushf
repz
jmp
or
aas
mov
inc
jbe
es
mov
pop
cmp
lds
or
gs
jg
xor
popf
inc
sub
jp
out
and
enter
push
sbb
out
mov
jmp
enter
fdivs
mov
jnp
int3
lods
push
shrb
cmp
mov
aam
cmp
pop
xor
outsb
lahf
mov
sbb
push
cmc
cwtl
loope
dec
pop
hlt
push
push
pop
ds
rcrb
in
popf
jecxz
mov
mov
push
mov
pop
sub
mov
stc
pop
xor
pop
cmp
rcr
dec
jecxz
in
xor
cmp
lods
pop
pop
or
mov
outsl
xor
mov
lock
push
loop
jle
cld
aam
ljmp
push
std
out
lds
jle
mov
cld
jmp
or
mov
sbb
aad
cmpsb
sti
mov
lcall
adc
jb
jo
sbb
sbb
sahf
stos
inc
rolb
dec
pop
adc
xor
xor
push
jle
cmp
mov
pop
mov
iret
rorb
adc
push
ds
adc
fwait
sub
mov
in
das
jbe
addb
cmp
mov
cmp
pop
movsl
push
pusha
adc
lds
and
inc
jb
rorb
sbb
inc
adc
fwait
mov
sbb
loopne
out
shlb
fwait
cld
lahf
xor
adc
xor
fildll
push
push
test
mov
or
iret
int3
pop
sti
jb
popf
scas
add
stc
fiaddl
xor
test
adc
je
shll
sbb
jmp
inc
fs
adc
pop
lcall
das
out
lret
fdivl
or
adc
push
out
dec
inc
push
out
xor
outsb
cmp
decl
sti
je
push
nop
jl
lcall
pop
aaa
push
jne
loop
iret
lods
fdivr
pop
lock
rolb
arpl
push
popf
daa
aam
jns
fwait
ljmp
addr16
mov
lret
xor
jle
rolb
mov
mov
in
dec
or
clc
add
mov
push
inc
cmpsl
xorl
out
pop
ret
ret
adc
jne
test
movsb
jne
mov
push
jns
cmp
into
in
dec
jle
jge
xor
jecxz
popf
jb
add
test
and
stc
cwtl
mov
jmp
ds
in
dec
les
and
test
in
jg
cmp
in
push
sbb
adc
mov
popa
mov
arpl
movsl
in
sub
loop
xorl
mov
shll
shl
clc
setae
int
popa
cli
mov
dec
add
enter
std
test
out
pushf
mov
sbb
add
jns
icebp
stos
std
ja
push
mov
dec
xor
lock
aam
test
jne
mov
dec
pop
sub
and
cmp
call
jl
pop
jnp
xchg
jl
fdivrp
mov
mov
imul
arpl
test
sub
repnz
cmpsl
sub
lock
lods
mov
pop
out
push
sbb
sbb
in
mov
xchg
dec
clc
pop
insl
add
sbb
repz
jae
mov
icebp
scas
push
pop
push
xchg
add
sub
scas
xchg
outsb
pop
jo
psubsw
push
int
out
test
or
fimuls
push
inc
rcrl
sub
mov
stos
subb
jnp
scas
mov
mov
mov
and
mov
addr16
push
push
aas
xchg
xchg
cmp
inc
and
or
scas
mov
sbb
dec
pop
movsb
in
inc
sbb
jmp
insb
icebp
jp
in
int
xor
pop
and
xchg
out
xchg
arpl
lahf
scas
and
bound
call
push
stos
pop
inc
jmp
pop
popa
fsubrl
pop
inc
pop
cmp
lcall
movsl
push
push
loopne
cmp
leave
iret
das
outsl
lods
inc
movsl
sub
movb
cmc
outsl
arpl
addr16
mov
push
mov
add
imul
addr16
mov
mov
int3
push
dec
sub
sbbl
mov
loopne
lds
pop
add
sbb
pop
imul
or
jno
xchg
cmp
aad
test
pop
xchg
stos
inc
bound
push
inc
ret
dec
xchg
std
push
popa
cmp
pop
lds
xchg
sahf
push
cld
lret
add
pop
and
hlt
dec
and
clc
lahf
push
popf
roll
shl
adc
xchg
ret
and
fildl
movb
pop
das
inc
sub
mov
sbb
imul
fiaddl
push
mov
fcompl
xchg
sub
jae
push
in
xchg
pop
mov
sbb
icebp
andl
aam
xor
xchg
sub
lahf
fs
stos
outsb
aam
ret
in
or
xor
pop
adc
mov
fisttps
insl
js
mov
cltd
mov
xchg
insb
bound
cmp
fisubrl
xchg
ss
jg
in
andb
jecxz
imul
enter
iret
or
mov
sbb
js
or
mov
push
rcrb
adc
std
mov
or
mov
test
cmpsl
mov
stos
jne
aam
sub
fsubs
lods
push
pop
and
ffreep
cs
test
jnp
jbe
pop
jp
data16
int
int
out
inc
mov
inc
int
cmc
out
movsb
ret
out
jo
cmp
aaa
adc
lods
repnz
or
imul
push
jb
dec
jns
mov
pop
or
fsts
fsubrs
scas
call
dec
adc
pop
ja
xor
pop
sbb
xchg
cmp
dec
pusha
cmpb
out
jg
gs
stc
scas
inc
xrelease
mov
mov
xor
dec
xchg
dec
shlb
shl
fcoml
push
sti
popl
push
pop
sub
lret
in
je
ja
mov
movsb
jne
sbb
xchg
dec
jge
in
je
stc
je
sbb
xor
std
rcrl
fiadds
sahf
lea
inc
andb
test
jp
mov
sub
pushf
inc
mov
jne
movsl
pop
repnz
cmpsb
cmp
mov
push
mov
adc
cmpsl
ds
push
sbb
pop
xor
mov
xchg
pop
in
dec
rcr
or
jecxz
jmp
add
es
sub
sbb
mov
fwait
pop
mov
scas
push
fwait
testl
jno
mov
jle
xchg
and
andb
dec
into
daa
test
je
call
imul
jns
fcomi
sub
lret
call
fimuls
rcr
aas
adc
jo
aad
mov
cmc
daa
mov
sub
inc
push
jb
or
in
xchg
xlat
imul
int3
jge
and
add
clc
jne
mov
stos
addl
cmp
add
insl
pop
jp
mov
insl
sbb
sti
mov
sub
insl
sub
les
mov
ret
push
xor
dec
dec
lods
ficomps
aam
cmp
imul
addb
dec
jae
cmp
xchg
sub
out
and
fwait
mov
icebp
xlat
xor
cmp
call
sahf
add
out
ja
cmpsb
adc
adc
jge
pop
jae
in
push
xchg
cwtl
cli
sbb
test
call
mov
outsb
insb
nop
jnp
jae
lods
arpl
and
inc
shlb
mov
cltd
aam
cs
jp
clc
dec
scas
ret
pop
aas
into
xchg
xchg
stos
xchg
iret
loope
rclb
jns
in
sbb
imul
sub
fnsetpm(287
daa
sub
xor
ficompl
and
rolb
push
test
push
and
xchg
sub
cmpsl
xor
scas
das
adc
rcl
inc
and
jns
xchg
nop
daa
les
sbbl
outsl
scas
dec
dec
fsubrs
mov
lcall
adc
mov
aam
xor
pop
cmc
dec
and
inc
lods
imul
sbb
add
stos
mov
xor
cmp
sbb
sbb
or
nop
daa
mov
cmpsl
scas
aas
add
and
int3
adc
mov
fidivrl
loopne
and
cli
xchg
xlat
out
or
clc
sbb
in
dec
pop
orl
je
pop
add
in
jnp
jnp
ss
pop
adc
add
sbb
xchg
push
cltd
mov
pop
das
push
call
add
sbb
and
cld
std
aam
cmp
pop
adc
repnz
mov
out
xchg
nop
icebp
or
pop
scas
into
rcrl
fimuls
nop
add
div
xchg
lret
and
xchg
sbb
adc
fnstsw
adc
add
sbb
repnz
and
and
jmp
dec
pop
aaa
ss
ss
pop
cs
sti
popf
and
dec
test
pop
test
test
fiaddl
addl
out
cld
int3
sub
or
mov
arpl
sub
pop
sub
nop
mov
dec
cltd
sti
bound
negl
shll
dec
sub
xchg
out
or
mov
ficomps
adc
cmp
and
stos
mov
data16
fidivl
or
jb
mov
jmp
add
and
add
stos
inc
dec
mov
cmpsl
js
xchg
cmp
leave
add
clc
loop
xor
lret
out
cmp
push
aas
cs
pop
or
cltd
pop
rorb
arpl
xchg
dec
add
lahf
pop
aaa
test
js
dec
insl
sub
aad
ret
ljmp
dec
scas
std
dec
push
lcall
les
lcall
jne
add
stos
inc
xchg
and
mov
jl
push
addr16
sub
in
xor
mov
xor
shrl
xchg
aaa
lods
sbb
dec
fisubrl
push
shrl
sub
fdivs
sub
cmp
mov
pop
je
cld
cmpsl
push
mov
sbb
movsl
stos
xchg
loopne
fwait
fwait
sub
pop
push
xor
pushf
adc
inc
rcll
js
fsubrl
mov
pop
fwait
cmp
incb
mov
adc
mov
movl
insl
mov
xchg
add
ja
xor
pushf
mov
loopne
inc
xchg
push
repnz
mov
mov
stos
aas
fcompl
mov
xchg
std
inc
out
out
imul
mov
dec
or
jmp
jns
push
loopne
push
addl
hlt
cmpsl
push
popf
scas
test
std
notb
mov
xchg
cmp
xchg
xchg
dec
pop
push
ret
adc
mov
cmp
pop
mov
or
and
outsl
std
movsb
pop
jmp
orl
ret
and
scas
cmp
push
mov
aad
xlat
xor
sub
or
gs
loopne
in
jae
xchg
insb
add
push
push
dec
mov
test
repz
decl
gs
and
ss
popf
lods
inc
add
fsubl
pop
mov
mov
xchg
movsb
xchg
movsl
xchg
add
call
cmp
les
jmp
or
xchg
rcr
mov
int3
rol
loope
xlat
xchg
sub
mov
not
push
add
mov
xor
in
mov
add
mov
pop
mov
mov
mov
or
mov
sub
push
jecxz
mov
lret
cld
mov
cmp
test
sti
pop
clc
scas
fiaddl
sahf
jle
xchg
xor
lods
cmpsb
inc
inc
test
inc
lcall
push
mov
pop
hlt
push
push
xlat
mov
mov
iret
es
ja
ljmp
cmp
mov
mov
add
iret
sbb
mov
lea
cmpsl
stc
jmp
adc
jecxz
cmp
xchg
ja
mov
fists
repnz
bound
fcoml
repnz
lcall
in
sarl
not
dec
xchg
test
hlt
push
fadd
je
sub
pushf
cmpsl
mov
add
or
or
sbb
mov
out
out
fdivr
cmp
push
add
lret
xor
popf
mov
adc
jno
sub
shll
les
xor
xchg
pushf
or
xor
fists
mov
or
fbstp
imul
loop
add
push
adc
and
adc
sub
push
fcoms
outsb
inc
inc
cs
je
shrl
fsub
adc
inc
pop
loopne
cmp
daa
mov
xor
inc
lods
adc
dec
adc
nop
lods
cmpsl
push
mov
push
repz
adc
mov
xor
mov
sbb
jno
and
mov
inc
call
adc
jo
adc
xchg
lret
jne
test
jg
scas
enter
subl
dec
ljmp
pop
icebp
and
xor
jo
mov
push
jae
cmp
inc
mov
hlt
enter
stos
inc
in
pop
imul
loope
dec
push
in
pop
dec
imul
jnp
packuswb
clc
jle
add
lcall
cmp
mov
addr16
arpl
jp
stos
and
sahf
mov
popf
sti
pusha
lret
or
jne
and
mov
or
icebp
insb
movsb
lret
mov
cmp
mov
add
negb
sub
mov
push
fidivs
lods
vorpd
ret
pop
in
adc
mov
rorb
sub
cmpsl
lcall
icebp
repz
outsb
dec
jo
hlt
imul
mov
jns
rcrb
pop
clc
cld
mov
push
sub
sbb
scas
pop
lock
scas
sti
push
xlat
adc
cmp
js
fwait
mov
push
inc
jg
leave
jmp
jl
cli
pusha
jge
add
jl
hlt
repz
outsl
negl
mov
xor
inc
popf
out
xor
mov
fmul
sub
paddd
pop
stc
pop
inc
add
mov
pop
and
pop
jns
pop
sub
push
add
push
jecxz
mov
test
inc
xlat
mov
mov
les
negl
out
jns
cwtl
push
or
inc
add
jns
or
jo
ljmp
jmp
lds
add
mov
mov
cwtl
stos
mov
daa
lcall
adc
push
lcall
les
push
jae
sub
stos
jge
cmp
push
std
xor
in
pop
pushf
repz
jno
gs
sti
and
test
aad
xchg
gs
dec
gs
mov
std
xchg
sub
push
xor
pop
icebp
jp
inc
cli
mov
jns
imul
jg
push
mov
in
ja
shll
je
insl
orb
jg
mov
scas
inc
movsl
jecxz
sub
imul
daa
rcrl
int3
inc
idivl
into
scas
cwtl
ret
sbb
fdivrs
mov
adc
popf
mov
fisttpll
aaa
idivb
adc
fwait
and
lods
mov
lods
add
fsubs
cwtl
je
stos
dec
jecxz
rorl
hlt
or
sub
lds
insl
mov
bound
fiaddl
lcall
xor
daa
sbb
icebp
mov
sbb
pop
mov
cmp
hlt
push
testl
sbb
jge
lods
insb
pusha
test
xor
lea
test
xorb
xchg
addr16
adc
pop
and
test
mov
fiaddl
in
les
xchg
xchg
jnp
ror
repnz
xchg
bound
cld
fs
cmc
mov
jo
adc
mov
mov
fcoml
sbb
and
lret
enter
xor
loope
js
push
loopne
movsl
int
xlat
loop
stos
or
fldt
or
test
dec
jbe
dec
xlat
das
cmp
adc
xchg
add
sbbb
mov
ficompl
jle
lahf
cmc
pop
int3
int
xchg
cltd
sub
mov
fbld
inc
cmpsl
jo
push
popf
xor
cltd
mov
pop
mov
mov
push
addr16
data16
sbb
adc
mov
push
sbb
add
or
enter
push
das
cmp
jnp
call
or
adc
mov
xchg
std
rcrl
ret
pop
mov
fndisi(8087
lods
push
mov
cld
or
or
call
or
jne
sbbl
push
aam
mov
ja
push
sbb
mov
mov
je
ret
ret
fiaddl
ja
push
hlt
pop
repnz
popf
xor
push
inc
pop
sub
jo
cltd
pop
notl
xchg
cmpl
lahf
mov
pop
lock
test
rorl
and
cmc
int3
je
sub
lods
lods
xchg
add
or
or
pushf
scas
ss
xchg
add
fcmovne
xor
ja
push
scas
iret
mov
insl
test
jns
shlb
loopne
aad
jno
push
mov
icebp
mov
pop
xor
jecxz
jae
push
lock
push
lahf
lahf
adc
xchg
dec
out
adc
push
mov
wrmsr
cmpsl
or
push
fdivl
mov
clc
popf
jo
daa
xchg
push
fs
clc
adc
inc
cmpsb
jb
pop
add
mov
inc
push
arpl
ret
pushw
ds
jo
lds
pop
jbe
mov
hlt
icebp
movsb
iret
mov
inc
cmp
ss
inc
call
push
xchg
add
add
aas
sub
out
sub
ds
imul
push
xor
inc
jno
pop
cmp
fwait
jbe
mov
adc
sar
aad
mov
sahf
adc
pop
loopne
jmp
out
mov
and
and
sub
mov
ljmp
ret
dec
xlat
jmp
dec
scas
xchg
orl
shrl
sbb
loop
mov
les
insl
movsb
sti
pop
cmp
sbb
adc
adc
inc
cltd
test
or
xlat
cmp
sbb
cs
out
push
mov
add
or
aaa
push
jle
daa
lods
pop
mov
cmp
sahf
shl
and
adc
mov
stc
cmc
add
std
lods
push
xchg
js
adc
out
jge
xchg
xchg
sbb
mov
push
inc
and
je
in
dec
mov
pop
mov
fcoml
fiaddl
fldlg2
test
cld
dec
es
je
xor
lock
and
push
movsl
scas
xchg
les
iret
xor
mov
mov
rcrl
test
pop
test
xlat
test
cli
ss
sub
add
out
out
out
call
gs
dec
lahf
or
cmpsl
out
leave
add
stc
fyl2xp1
add
cmp
sti
aaa
out
adc
ss
subl
xchg
jecxz
jnp
cwtl
xor
xorl
push
aam
mov
cmc
xchg
stos
push
inc
lods
cmp
lret
jae
sbb
mov
push
hlt
cmp
mov
add
mov
sbbb
pop
mov
cmpl
es
sbb
xchg
test
mov
out
lds
pop
xchg
cmp
adc
gs
lret
cmp
mov
adc
neg
call
sti
cld
sub
xlat
push
scas
cwtl
push
std
xchg
mov
jns
push
repz
adc
roll
cmp
mov
jg
sub
xchg
xchg
sub
negb
pop
ljmp
pushf
arpl
rcrb
add
stc
lret
scas
cmp
pop
mov
lcall
push
inc
addb
mov
js
jnp
cmpsl
and
mov
ret
mov
arpl
push
inc
fmul
cltd
jge
ljmp
push
xorl
add
dec
mov
sahf
lock
jno
sub
and
jmp
add
jmp
cmp
bound
outsb
lds
arpl
clc
dec
pusha
sub
daa
mov
lret
mov
insl
loop
gs
sbb
adc
ret
test
or
aas
bound
inc
movsl
cld
mov
push
inc
jae
mov
push
jecxz
mov
cmpsl
adc
scas
imul
xor
add
push
fcmove
jae
dec
push
mov
or
imul
lods
fwait
xor
sub
filds
sub
pop
push
mov
pop
and
adcl
xchg
sub
sub
jp
lret
insl
sub
ffreep
arpl
inc
xlat
push
push
xorl
decb
xor
mov
lcall
push
mov
mov
xor
adc
mov
int
lds
mov
in
orl
inc
testb
int
data16
mov
cltd
shrb
push
faddl
bound
adc
test
fcoml
inc
filds
mov
inc
ds
push
xor
push
dec
mov
adc
xorl
xchg
icebp
cli
jnp
aaa
adc
cs
or
jnp
dec
jmp
flds
jge
jns
lods
cmp
hlt
mov
repz
sub
mov
outsb
lods
ret
leave
push
stc
mov
repz
lods
xchg
lret
popf
pop
fisubs
jnp
mov
rcrb
jp
ret
inc
push
xor
mov
pusha
push
mov
mov
xchg
das
loope
or
addb
pop
xor
pop
negl
xchg
pusha
aad
cltd
sbb
jo
stos
cmp
add
adc
pusha
sbb
dec
mov
je
and
out
mov
shlb
cmp
hlt
inc
mov
jg
xchg
cmp
cwtl
pop
popf
xchg
mov
fs
jae
mov
sub
cmp
lcall
push
pushf
in
stos
dec
adc
lret
xchg
in
clc
pop
push
lods
inc
jmp
mov
icebp
xor
stc
aaa
mov
lret
adc
mov
xor
lock
or
cltd
outsl
lds
adc
jl
mov
outsb
sub
cmpl
std
push
mov
jle
lds
cmpsb
imulb
xchg
pop
mov
cmp
inc
adc
and
add
daa
mov
call
ret
loope
out
inc
enter
mov
cs
int3
lahf
std
mov
push
icebp
pusha
stos
bound
shrl
shl
aas
clc
xchg
push
mov
addb
sub
je
adc
pop
ss
clc
and
cld
test
add
push
lock
in
jnp
fsubrs
mov
sbb
dec
lahf
dec
pop
shrb
or
in
and
push
nop
daa
std
lahf
adc
mov
sbb
or
sbb
push
test
aad
lahf
sbb
shlb
mov
jno
ret
mov
mov
sub
aad
fistpll
les
jle
cltd
or
or
cmp
out
pop
repz
int
pop
mov
xchg
cmp
insl
add
test
ret
bound
outsb
rorl
les
ljmp
test
pop
sbb
mov
in
vmovdqa
daa
cli
inc
xchg
push
lahf
sbbl
xor
scas
mov
lea
xchg
jne
les
movsb
sarl
scas
scas
clc
movsl
pop
fisubrl
pop
adc
subb
das
mov
sbb
sahf
sbb
test
ja
mov
xchg
push
hlt
icebp
jbe
fdivrl
lret
push
xchg
int3
sub
mov
push
stc
inc
leave
sbb
adc
fwait
mov
jge
psubusw
test
jle
in
scas
movsb
fcmovnb
push
int
dec
pop
notl
scas
adc
adc
jne
mov
cvtdq2ps
int3
loop
call
cmp
dec
or
inc
fcomps
das
or
clc
xchg
sub
nop
lahf
add
ret
lods
jecxz
test
and
sbb
jae
cmp
mov
xlat
lret
or
xchg
lock
movsb
mov
push
loop
add
jne
lock
inc
fistpl
dec
in
ja
fistl
sbbl
jp
cmp
shrb
dec
lcall
ljmp
call
leave
push
outsl
pop
gs
dec
ja
ret
pushf
push
mov
pop
mov
out
andl
lds
inc
xchg
pop
js
in
clc
dec
xchg
sub
daa
or
xor
sti
pop
adc
sbb
jns
cpuid
push
inc
fmulp
sti
sub
cmp
rcl
pushf
ret
std
cltd
outsb
mov
xor
enter
push
jmp
sbb
sahf
xor
mov
or
test
or
adc
iret
ljmp
xchg
call
inc
cwtl
xor
jno
scas
je
lret
pop
test
mov
push
mov
cli
or
aaa
mov
push
lcall
lock
cmp
aas
xchg
xchg
jne
pusha
repnz
lds
jae
fnsave
sahf
mov
inc
daa
add
enter
mov
leave
xlat
xchg
cmp
out
les
lahf
lock
cmpsb
out
adc
push
out
fisubl
cs
sti
jbe
insl
loop
clc
sahf
mov
sbb
push
in
test
fmull
adc
loope
pop
mov
cmp
inc
and
inc
pop
jne
or
push
rcl
inc
loop
dec
out
pop
test
das
aam
fildll
push
fs
test
jno
push
fcmovnbe
rorb
shrb
pop
add
cmp
adc
inc
stc
pop
fmull
adc
dec
sbb
scas
lods
insb
fstps
scas
push
leave
shrb
or
sbb
lcall
inc
inc
mov
pop
pop
mov
imul
cwtl
fistps
out
dec
cld
inc
fsubrl
ljmp
and
addl
js
mov
lret
mov
mov
lods
push
sbb
dec
cltd
std
mov
push
jbe
xor
pop
cmp
adc
adc
addr16
push
mov
mov
movsl
pushf
push
and
test
xor
fistpl
mov
neg
mov
adc
jno
adcl
push
push
ficomps
xchg
gs
push
add
push
sub
aaa
fisubl
dec
test
insl
push
pop
mov
cmpsb
mov
push
out
aad
jae
lcall
loopne
dec
push
mov
ljmp
pushf
pop
ret
sbb
in
pop
movsl
jmp
sti
lea
adc
pop
or
mov
mov
idivl
or
cmc
out
dec
in
dec
pop
imul
or
xor
push
into
mov
les
mov
mov
jo
fnstsw
gs
xchg
out
xor
movsb
aas
jae
sahf
sub
popa
mov
push
divl
data16
xchg
clc
loop
imull
add
clc
int3
jle
int3
pop
and
xchg
xor
push
popf
sub
sub
iret
pop
add
lock
pushf
cmp
mov
add
sbb
insl
dec
test
cmc
ror
mov
xchg
push
imul
lcall
push
push
jne
in
lods
inc
in
std
sbb
dec
push
std
mov
stc
mov
sti
xchg
ljmp
lret
mov
sbb
xchg
push
jmp
fnstcw
aaa
or
or
jge
mov
xchg
arpl
xchg
xchg
test
mov
pop
push
mov
incb
pushf
rolb
and
mov
push
jno
mov
divb
mov
loope
ret
test
arpl
push
ljmp
push
sbbl
xchg
sbb
imul
cmp
cld
repz
dec
add
sarl
ficomps
add
mov
dec
mov
stc
decb
mov
push
cltd
inc
mov
cmpsl
bound
imul
inc
mov
pop
iret
push
lret
xchg
lods
mov
and
xchg
push
adc
and
jmp
adc
mov
ljmp
xor
mov
adc
in
sub
dec
jne
mov
lret
rcll
mov
imul
jae
movsb
lret
mov
cld
loope
or
stos
mov
push
add
popl
jmp
mov
movsl
inc
orl
lret
fwait
mov
sub
pushf
cmp
add
bound
scas
cmp
lods
mov
adc
inc
addb
add
out
into
mov
sub
dec
fiaddl
xor
push
add
mov
fidivrs
pmuludq
negl
push
push
adc
sub
mov
lahf
xor
lods
dec
movsb
push
aas
mov
pop
add
jbe
push
rolb
dec
out
fbstp
imul
mov
iret
lea
mov
adc
shl
sub
mov
dec
add
inc
dec
test
pop
shrb
or
mov
sahf
lods
lock
add
add
pop
mov
mov
addr16
leave
std
insb
xor
scas
int3
sbb
std
adc
jle
jecxz
mov
ljmp
cmp
and
hlt
mov
mov
loope
xor
nop
jnp
jne
fucomp
adc
jbe
mov
xchg
mov
ds
lahf
jno
pusha
mov
sbb
sub
xchg
loopne
ret
xlat
pop
xor
outsb
out
push
aam
mov
mov
stc
nop
out
mov
test
andb
loope
and
pop
jae
and
aam
and
andl
stos
cmp
lcall
imul
lahf
icebp
in
jae
fwait
xchg
lock
mov
xchg
and
aad
out
popf
and
mov
addb
pop
aad
pop
sahf
xchg
notb
roll
and
test
jecxz
fimull
or
cmp
rorl
mov
cltd
or
mov
add
out
dec
push
icebp
push
loope
loopne
loopne
xchg
xchg
pop
addr16
insb
paddsw
push
insb
xchg
push
mov
in
cmp
pusha
add
mov
jae
pop
sub
xchg
add
push
cmp
ret
pop
subb
pop
addr16
imul
int
pop
enter
adc
adc
dec
cmpsb
cmp
loope
push
xor
xor
jl
or
pop
decb
test
and
xchg
cwtl
ds
cltd
mov
daa
add
xlat
int
or
mov
dec
or
aas
outsb
pusha
mov
cmpsl
jge
rcl
lret
repnz
adc
sbbb
lods
fsubl
sub
test
inc
sbb
cld
movsb
aaa
dec
rorb
sbb
xchg
pop
in
insl
dec
pop
les
js
bound
inc
and
push
shrd
cmp
jecxz
mov
aaa
into
ljmp
cmc
jo
int3
lret
sbb
xchg
test
or
shrb
test
push
cmp
sbb
push
add
rcl
test
pop
mov
fdivp
int
xchg
push
sub
dec
js
cmp
add
fisttps
lahf
push
pushf
xchg
push
ljmp
pop
imul
sahf
xor
mov
mov
or
rclb
mov
mov
jno
cmpsl
fsubrp
adcl
mov
sahf
clc
je
inc
into
sbb
jnp
xchg
test
add
sbb
jbe
push
jmp
out
xor
or
mov
addr16
out
cwtl
lods
scas
adcb
stc
outsb
into
mov
sbb
adc
popl
mov
clc
cmc
scas
xchg
add
add
dec
pop
dec
jmp
repz
stos
adc
rorl
fisttpll
ds
lods
cmp
bnd
sub
pop
xchg
sbb
mov
or
movsb
or
adc
push
int3
jno
insl
jmp
push
imul
adc
enter
and
sbb
outsb
shll
dec
jnp
shrb
adc
in
nop
push
outsl
inc
fldt
mov
aaa
inc
aad
test
add
jne
cmp
xlat
push
fnsave
add
cmp
and
loop
sahf
fxch
pusha
fidivrs
test
xchg
sub
mov
bound
repz
mov
insl
sahf
mov
nop
movsl
das
mov
jno
std
pop
cmp
push
jmp
fstpt
nop
adc
jb
or
je
push
sub
cmpsl
ds
neg
xcrypt-cfb
cmpsl
fs
repz
enter
aas
jp
jo
fdiv
add
lods
mov
lcall
lods
push
add
pop
or
rcrl
faddl
loop
movb
cmp
sbb
sub
sub
inc
push
popa
iret
sbb
dec
or
lret
mov
xor
mov
mov
arpl
out
pop
std
adc
fisubrl
lret
and
mov
pop
jae
xor
jns
loope
add
icebp
mov
dec
dec
and
out
mov
loopne
fnstenv
or
imul
mov
push
push
popf
enter
fdecstp
outsb
xor
xchg
gs
in
test
mov
sbb
mov
ret
lahf
imull
pop
mov
addr16
jle
pop
push
ljmp
js
sub
mov
jmp
jmp
sbb
sbb
arpl
js
pop
sahf
lock
pop
popa
cs
sbb
push
popf
lcall
push
adc
loopne
mov
fistl
stos
lods
cmp
or
in
sbb
cmp
andb
mov
mov
mov
cs
xor
mov
cmpsb
pop
push
pop
lahf
sub
pop
mov
fstp
jbe
jmp
in
sbb
rol
popa
lods
pop
xor
xor
mov
mov
scas
cmp
inc
bound
jns
repz
pop
popa
mov
push
andl
popa
movsl
shlb
or
cmp
mov
or
adc
xchg
jb,pn
add
imul
test
lea
mov
dec
xor
mov
xor
inc
push
inc
pop
lret
cwtl
push
daa
aas
in
stos
jbe
xor
enter
dec
inc
bound
sbb
addr16
sbb
mov
mov
xlat
rol
add
sahf
mov
lcall
jno
ss
setae
fnstenv
mov
int
mov
jne
jnp
jmp
xchg
or
lcall
fldenv
arpl
or
inc
mov
mov
lods
adc
lds
mov
insl
testl
out
in
push
inc
inc
xor
inc
and
ss
mov
pushf
pop
push
sbb
pop
cmp
mov
xor
rorl
mov
mov
sarl
fsts
js
ret
nop
xor
dec
dec
insl
cmpsl
dec
inc
fdivrs
push
lret
roll
jmp
fcompl
shlb
mov
push
mov
aam
ret
mov
pop
mov
insl
add
in
jb
ss
icebp
ret
stc
nop
cmc
adc
push
adcl
lods
sbb
addr16
cwtl
mov
scas
ret
or
lods
pop
fisttpll
jmp
mov
inc
repz
xor
jg
outsl
mov
and
loop
mov
add
test
mov
mov
jno
mov
mov
or
mov
jecxz
inc
dec
out
jne
andl
or
subl
push
sub
cmp
xlat
adcb
and
scas
inc
movsb
inc
fidivl
dec
push
je
xor
bound
pop
xor
mov
mov
loopne
inc
adc
in
fwait
cli
mov
push
sub
mov
scas
ret
inc
pavgb
or
arpl
mov
mov
adc
dec
push
pushf
cli
fcmovne
lock
jmp
and
xchg
jne
pushf
cli
fstpt
les
pop
test
jmp
jg,pn
stos
push
clc
iret
es
pop
xor
sarl
dec
xchg
mov
clc
adc
out
mov
adc
mov
cmp
testl
mov
push
jae
in
xchg
aad
mov
adc
push
xchg
sbb
sti
dec
fidivl
mov
popa
add
es
and
loopne
mov
sti
lret
xor
pop
loope
pushf
push
daa
push
sub
fs
jnp
pop
mov
xor
repz
fs
arpl
mov
dec
call
push
push
dec
push
imul
xchg
imul
pop
aad
rsqrtps
fdivs
jp
jns
test
in
mov
xor
lahf
aad
jg
mov
out
mov
cmp
xor
lret
xlat
sti
movl
stc
scas
mov
in
push
movsb
popf
dec
pusha
imul
into
lods
enter
and
adc
cltd
stos
and
mov
or
in
mov
add
movsb
imul
or
lods
daa
push
out
push
mov
cld
ljmp
mov
inc
pop
in
cmpl
adc
pop
or
insl
push
insb
movsb
mov
shl
and
xchg
inc
inc
pop
add
mov
cmpsl
add
sub
in
fists
sbb
in
inc
dec
popa
iret
sahf
mov
jb
dec
scas
and
mov
push
repz
aaa
push
xchg
pushf
xor
push
cmp
mov
push
push
cmp
not
test
ffree
ja
ret
jno
hlt
lret
mov
jmp
shll
push
fiaddl
sbb
scas
push
mov
inc
hlt
and
push
sti
xchg
arpl
shrb
push
mov
ja
inc
inc
lock
inc
mov
pop
shlb
xlat
add
test
lret
into
cmpsb
jbe
in
xchg
scas
add
bnd
icebp
mov
scas
pminub
into
sub
test
adc
rcl
cld
jg
dec
dec
xor
aaa
into
dec
mov
pop
xor
arpl
xchg
cmpsl
or
mov
add
dec
cs
in
notb
mov
in
cmp
inc
mov
jp
out
jmp
ficoms
jne
lock
jle
xor
add
pop
loope
faddp
xchg
pop
leave
inc
dec
fisttps
cmp
in
sub
adc
pop
stos
xor
add
cltd
xchg
pop
int
xchg
adc
jbe
loop
out
xlat
pop
stc
jo
nop
mov
imull
xchg
icebp
mov
inc
sbbb
mov
add
insl
cmp
scas
sbb
mov
pop
adc
fld
nop
cli
sub
inc
adc
cmpsl
push
inc
jno
cli
das
loop
stc
inc
inc
in
jecxz
xor
fcmovnu
cwtl
test
sbb
push
test
negl
shr
dec
addr16
or
ds
cwtl
sub
inc
bound
mov
dec
and
scas
jae
cmc
mov
or
mov
add
jnp
jae
dec
xchg
pop
add
imul
lcall
addr16
dec
adc
cmp
add
adc
insl
lret
iret
push
xor
nop
cmp
loop
orl
sbb
dec
loopne
push
xor
cmp
addr16
sbb
cmpsl
sub
xor
in
pusha
int
cmp
in
mov
mov
movsl
mov
out
aam
hlt
cld
mov
pop
push
dec
pop
xor
sub
cmp
cmp
cmp
mov
sbb
sbb
sbb
xchg
mov
jg
in
xlat
repz
dec
push
add
popa
std
aas
fs
and
loopne
mov
cli
dec
pop
popf
jne
das
dec
adc
jo
inc
movsl
aam
mov
rcr
push
cmp
test
jo
in
xor
loopne
push
xchg
or
int3
lret
nop
ss
inc
lret
and
xchg
std
bound
je
mov
fisubrs
adcb
in
pushf
sbb
xlat
lods
push
pusha
sbb
jnp
pop
push
sahf
and
mov
test
test
lret
jbe
int3
es
test
hlt
int3
addr16
sub
xor
xor
or
imul
sbb
jmp
push
jbe
lcall
jmp
jg
mov
mov
pop
pop
xor
ret
jo
fld
jne
es
mov
lret
test
adc
sahf
add
jmp
cltd
adc
mov
jecxz
mov
and
ljmp
add
lods
sbb
fisubrl
shrb
repnz
fwait
aam
inc
jbe
mov
outsl
ja
lcall
and
lcall
mov
stos
call
push
adc
inc
lcall
je
jno
iret
xchg
cwtl
mov
xor
mov
adc
xor
mov
cld
xor
or
lea
xchg
lea
test
inc
jge
xor
std
lods
mov
push
stc
xlat
lods
pop
push
call
test
lret
add
push
inc
adc
push
ret
ljmp
das
out
add
add
cwtl
loope
repz
sahf
lds
inc
pop
mov
popf
mov
sbb
or
inc
inc
arpl
out
addr16
inc
es
outsb
xchg
push
mov
fs
out
push
mov
mov
xor
pop
sbb
fdivs
pop
push
test
out
push
mov
adc
orl
fists
out
scas
lahf
mov
sub
jo
in
sbb
mov
bound
pushf
in
fucomp
dec
cmp
or
arpl
xlat
int
jbe
dec
enter
jl
mov
sub
pxor
aaa
shlb
iret
mov
sub
or
and
jns
ja
and
pop
clc
daa
test
lock
aas
cmp
inc
cbtw
mov
sbb
in
clc
mov
test
nop
fcmovne
in
cmp
das
popa
inc
mov
js
xor
inc
mov
sarb
sub
pop
scas
add
scas
outsl
jnp
in
push
xchg
pop
cmp
nop
sub
mov
pop
and
cli
adcl
mov
aad
test
jbe
inc
inc
vhsubpd
mov
hlt
pop
mov
in
call
aas
enter
push
ficompl
mov
fstps
in
push
js
idivb
test
lock
mov
clc
xchg
xchg
mov
les
add
pop
mov
outsb
lods
push
ret
jo
mov
icebp
xlat
jbe
clc
inc
mov
jo
xor
enter
pop
push
mov
lods
add
push
aas
sbb
rorb
and
mov
mov
mov
lods
add
scas
fs
je
jp
pop
cmp
aaa
mov
cli
jg
test
imul
pop
les
out
push
mov
mov
xchg
cs
dec
in
mov
jle
cmp
movsb
xchg
mov
add
dec
mov
test
push
add
fnsave
popf
dec
push
fnstcw
popf
jmp
lcall
pop
jp
subb
fsubr
popf
jg
push
scas
mov
aam
inc
xchg
mov
lods
ja
push
xchg
data16
stos
push
jbe
cld
sbb
add
or
sarl
mov
ja
subb
out
xchg
incl
xchg
rclb
sbb
sub
push
cmpsb
ret
cli
nop
xchg
mov
movsl
lds
inc
hlt
dec
jg
push
in
jmp
xchg
dec
gs
jecxz
jmp
mov
sahf
pop
out
inc
out
insl
jge
cmp
mov
or
xor
pusha
bound
cmpsl
roll
or
sti
adcb
incl
push
jno
data16
cmpb
mov
pop
mov
xchg
push
out
pop
aas
xchg
daa
xchg
lcall
in
aaa
jle
sub
rcrb
in
inc
call
lret
bound
cmp
and
outsb
fsubrs
cmp
int
aas
shlb
mov
mov
cwtl
lods
cmpl
pop
int3
pusha
mov
jg
aas
gs
mov
jmp
insb
out
xor
xchg
popf
incl
and
mov
add
xlat
cmc
xor
adc
pop
movsl
int3
jo
mov
repnz
insb
push
cli
adc
add
movsb
outsb
gs
aas
dec
pushf
mov
cmp
imul
fisubl
and
xor
xor
cmp
mov
sbb
cmpsl
cmp
sbb
in
or
mov
sar
mov
push
jp
cmpsb
mov
jmp
out
ja
lock
std
inc
mov
add
in
jne
inc
mov
jmp
cmp
inc
add
mov
fbld
imul
xchg
dec
test
test
out
jns
jle
pop
push
inc
cmpsb
cmp
ret
adc
and
add
data16
cmp
test
inc
fdivs
dec
jb
fldcw
notl
pop
inc
push
or
sub
and
dec
das
ficoms
shrb
lahf
js
sar
mov
dec
pop
mov
psubusw
sub
ss
test
ja
mov
jno
cs
push
aas
std
cmp
imul
adc
xchg
fistps
insl
jp
mov
push
push
xchg
cmp
xchg
cwtl
fists
test
mov
fisubs
jmp
orl
dec
sbb
fs
jae
mov
arpl
xchg
inc
dec
mov
pop
sub
loop
pop
push
cld
in
pop
xor
push
ficomps
nop
push
dec
bound
addr16
sub
xor
in
call
in
mov
mov
and
ja
into
stos
cmp
je
iret
or
fs
sbb
dec
sbb
ds
stos
mov
push
popf
jae
mov
add
lahf
xchg
pop
test
or
ja
call
pop
hlt
aam
divl
jle
sahf
mov
push
xchg
neg
xchg
lods
pop
popf
dec
mov
dec
loop
lahf
mov
add
int3
into
pushf
popa
lret
jecxz
dec
cmc
mov
adc
mov
std
inc
sub
xchg
test
mov
lock
mov
xchg
jp
fwait
test
dec
adc
loop
cmpsl
adc
ss
loop
cmpsl
dec
adc
mov
mov
icebp
sbb
mov
sub
stos
fldlg2
inc
pop
cmp
xor
lds
aaa
mov
rcl
pop
sub
pop
cmp
lcall
pop
jns
scas
andb
ret
sbb
mov
adc
insb
or
adc
cmp
pop
popf
and
pop
rcl
ret
addr16
popa
in
sbb
in
mov
pop
mov
sbb
dec
adc
shrb
jne
sub
and
mov
std
mov
mov
testb
test
add
fadd
add
mov
jne
push
mov
loopne
add
cmp
sub
jg
dec
pop
mov
mov
adc
sbb
jle
ds
stc
jo
add
add
jecxz
nop
daa
push
push
inc
outsb
dec
mov
das
in
leave
add
push
mov
sbb
push
das
jne
jmp
and
shr
push
and
lods
mov
aaa
stos
fdivr
fwait
or
push
jo
xor
out
xor
cwtl
aaa
mov
outsb
sub
aad
int
je
loopne
repz
sub
xlat
outsb
out
outsb
adc
sbb
lret
jno
jmp
rcl
jnp
mov
sbb
adc
sub
shl
ret
xor
sbb
sub
int
lods
insb
jbe
mov
rcrl
ljmp
lds
add
jmp
int
imul
fldt
mov
sbb
add
or
int3
ss
jl
xchg
jae
mov
add
xchg
les
add
and
push
popf
sti
mov
push
sub
sarl
shlb
cltd
les
repnz
inc
inc
inc
arpl
jbe
xchg
lret
xor
push
mov
jne
xor
cmpsb
mov
add
mov
pop
inc
fwait
sti
jno
jb
add
xchg
xor
lahf
out
jle
scas
xchg
and
pop
sub
cmc
repnz
xchg
outsb
sub
rep
mov
dec
fsubrs
out
xchg
js
xchg
loop
pop
ss
imul
out
inc
push
mov
and
enter
jge
lret
push
test
sbb
sbb
push
sahf
scas
ret
mov
in
loopne
sbb
adc
aas
fs
cwtl
and
testl
lods
dec
adc
lahf
add
lcall
jne
movsl
mov
dec
cmpl
cmc
loope
jecxz
xor
sub
movsb
dec
fnstenv
mov
in
fisubs
vmwrite
adc
lods
mov
lret
xchg
lds
mov
lods
cmp
sub
fs
cmp
mov
mov
js
pop
adc
sub
lret
push
adc
rcrl
mov
pusha
negl
add
jae
and
ss
shll
xor
es
sub
mov
or
dec
mov
jecxz
out
rcll
or
imul
pop
aam
orb
jl
std
or
and
aad
fwait
and
xor
outsl
out
mov
adc
mov
and
test
dec
cmp
mov
push
lods
sbb
cmpsl
out
adc
push
and
or
jmp
pop
pusha
ss
cwtl
mov
push
adc
fnstsw
pushf
pop
int3
mov
sub
mov
notl
add
testb
js
movsl
in
cs
add
ss
addb
das
push
sbb
out
xchg
and
xchg
fisubl
push
mov
sub
dec
and
mov
int
pop
xor
adc
and
adcl
mov
jo
push
xchg
das
push
cmp
mov
push
hlt
addl
out
outsl
push
mov
jp
inc
and
bound
push
xor
adc
sbb
in
push
cmp
cmc
cmc
dec
stos
push
ja
pmuludq
cli
sbb
dec
lcall
scas
adc
out
ficoml
sbbb
dec
in
ja
pop
test
stos
xchg
lret
test
adc
adc
outsb
inc
mov
mov
and
outsb
cli
fimuls
nop
push
mov
mov
fcmovne
ja
jae
mov
loopne
dec
cmp
cmp
push
add
pop
push
stos
xchg
and
mov
xchg
add
das
jmp
and
fisubl
stc
ret
lds
mov
cmpsl
out
fsts
test
mov
shrl
fnstenv
shlb
mov
mov
jbe
sub
ljmp
push
push
xchg
jp
mov
fcomp
mov
mov
scas
xor
xor
out
push
cwtl
xchg
jbe
xchg
scas
andl
push
jae
movsb
fisttpl
cmp
xchg
fsubrl
in
dec
dec
cld
dec
mov
dec
cmp
cmpsb
test
hlt
cmpsl
cli
adc
push
push
daa
orl
xor
imul
xchg
push
repz
outsl
gs
jae
int3
mov
stos
fidivrl
inc
xor
add
mov
dec
imulb
adc
out
add
rcr
jb
outsb
add
cmc
pop
fstpl
dec
cwtl
jmp
mov
mov
cmpsl
gs
sbb
jp
push
jnp
mov
mov
mov
cmpsb
pop
add
mov
repnz
mov
adc
pop
popw
sbb
jne
stos
addl
xlat
or
test
inc
int
mov
std
outsb
aaa
jo
stc
nop
push
ret
mov
jg
sbb
stos
iret
cmpsb
jnp
pop
add
mov
pop
mov
push
aas
push
lea
cmp
xchg
repnz
cmp
insb
and
sti
and
push
outsl
les
add
ror
mov
add
jo
insb
cmc
and
mov
jmp
data16
push
xchg
inc
xchg
mov
mov
mov
cmp
mov
sub
mov
nop
inc
cmc
daa
xor
push
jno
roll
es
stos
mov
jo
addl
inc
sbb
cmpsb
js
xor
enter
test
mov
mov
pusha
lods
pushf
xor
pushl
dec
inc
lods
ret
sbbb
mov
pop
jmp
imul
inc
stc
mov
push
xor
adc
gs
popa
cli
sti
enter
nop
jl
incl
mov
pop
movsl
sbb
es
cmc
test
je
ds
cmp
pop
outsl
fldl
scas
rolb
adc
and
mov
inc
arpl
push
ss
jne
aas
push
data16
pop
dec
ror
ja
iret
and
jg
mov
loopne
jg
xor
inc
scas
pop
popf
pop
ljmp
stc
in
ja
xor
jecxz
ret
fxch
clc
add
jns
and
and
xchg
movsb
inc
std
xchg
dec
inc
movsl
ja
insl
sbb
in
fsubl
ret
pop
pop
mov
sti
neg
sbb
and
xor
int3
jbe
sbb
inc
test
jo
and
and
pop
shll
mov
mov
shll
cmp
out
out
test
pop
push
dec
sub
xchg
sub
dec
jb
divl
pusha
jl
iret
mov
pop
inc
inc
mov
sub
dec
movsb
inc
pushw
xor
test
test
lock
mov
mov
push
add
call
cmpb
xor
cmp
inc
add
xchg
pop
daa
lret
xor
xor
mov
inc
stos
mov
fwait
cmpsl
mov
push
xor
mov
sti
mov
aad
es
mov
stc
inc
scas
cmp
scas
call
and
stos
nop
test
dec
pop
pop
inc
inc
lret
sbb
mov
xor
mov
cmp
add
and
int
hlt
sbb
add
sub
sti
xor
mov
leave
pop
xchg
pop
add
or
test
pop
call
in
mov
sub
cmp
shl
push
mov
adc
xor
jo
sahf
cmpb
mov
fstps
cmpsl
mov
pop
and
push
leave
imul
ret
shrb
test
pusha
imull
jmp
add
xor
addr16
rol
push
rorb
sarb
cltd
out
sub
lods
add
jo
dec
or
insl
mov
mov
int3
and
xchg
enter
xchg
in
adc
mov
pop
adc
pop
xchg
mov
mov
loop
addl
loop
push
sub
int3
mov
push
inc
sti
jae
push
scas
mov
pop
outsb
inc
adc
flds
hlt
adc
cmp
inc
adc
ret
pop
adc
stos
jne
cmovnp
mov
push
lret
add
mov
xchg
dec
lds
icebp
imul
mov
dec
pop
add
je
ret
xchg
jo
push
lcall
push
inc
sub
pop
push
pushf
mov
lret
jae
stos
daa
mov
rcr
mov
or
push
int3
push
mov
test
popa
xchg
sub
mov
shrb
mov
scas
enter
aas
mov
fidivrl
xor
fsubrs
jns
xchg
insb
and
int3
xchg
inc
xor
push
lahf
stos
test
scas
jbe
or
dec
decl
lods
jo
inc
inc
stos
jne
stos
mov
test
mov
shlb
mov
mov
inc
loop
jbe
sti
mov
push
movsl
in
pusha
sbb
mov
inc
or
xchg
dec
add
testl
push
in
hlt
cmp
cltd
xchg
sbb
dec
test
cmp
dec
mov
mov
faddp
pop
cmc
loopne
int3
mov
jg
sti
loopne
pop
repnz
add
rcrl
adc
lods
mov
cmpsb
mov
or
jge
push
cwtl
lahf
data16
shlb
mov
js
mov
mov
cmp
add
add
pusha
loopne
adc
outsb
jl
push
nop
imul
repnz
add
and
mov
fwait
inc
lea
mov
dec
shlb
mov
or
mov
mov
jns
inc
test
testl
xchg
andl
popa
rcrl
imul
insb
aas
dec
aaa
mov
pop
lret
sahf
mov
mov
mov
outsl
sbb
pop
lds
mov
cmpsl
aaa
loop
rol
jmp
js
or
in
add
mov
call
mov
pop
adc
sbb
sbb
fnsave
dec
add
pop
adc
jmp
fcomi
adc
sub
dec
fdivrs
inc
enter
aas
jns
pop
xlat
and
mov
enter
dec
std
add
adc
cmp
dec
lretw
adc
inc
push
leave
andb
mov
inc
dec
repnz
xor
inc
aaa
lret
fcoml
mov
js
xchg
jl
lods
ljmp
daa
mov
sbb
push
xor
inc
inc
sbb
inc
mov
lods
jo
lock
sub
adc
pop
cmp
dec
stos
out
js
repz
mov
or
stc
in
js
adc
imul
pop
ret
in
xor
fnstenv
pop
cmp
lods
outsl
or
fs
jmp
dec
arpl
dec
in
popf
icebp
and
imul
lods
push
or
or
mov
xchg
inc
call
adc
pop
test
scas
movsb
daa
mov
push
incb
int3
mov
sbb
enter
inc
clc
push
jp
clc
in
jge
aaa
or
lcall
adc
mov
inc
push
gs
fwait
bound
mov
cmp
or
pop
daa
cmpsl
pop
add
mov
fsubs
arpl
pop
mov
hlt
or
xchg
pop
out
cmp
pop
outsb
out
sbb
jbe
sub
sbb
fsts
sub
xlat
repz
pusha
out
ficoms
js
and
jg
sub
in
cmp
mov
pop
loop
dec
add
mov
mov
hlt
sarb
mov
adc
clc
push
mov
int
mov
push
add
mov
les
lods
clc
ja
test
xchg
sub
imul
add
mov
mov
dec
icebp
jecxz
cmp
sbb
lods
ret
inc
aam
mov
mov
lret
pop
jecxz
lahf
mov
scas
xchg
pop
stos
jle
lret
lahf
xchg
sbb
mov
out
outsl
xor
imul
call
mov
jp
lret
adc
push
shlb
adc
clc
add
lret
mov
mov
xchg
xchg
mov
popf
mov
push
mov
add
sbb
inc
add
sub
pusha
fcmovnu
cmp
outsb
sub
xor
loope
fldcw
orl
cmp
mov
jnp
adc
popf
adc
scas
cld
pop
mov
sbbl
mov
push
jge
enter
xor
mov
repnz
push
lahf
lds
divb
sbbb
push
icebp
or
cli
rcl
stos
xor
xchg
daa
inc
jns
jns
push
stos
ficoms
lods
push
hlt
adc
jno
or
fdivl
inc
gs
cwtl
lods
lds
pop
xor
jp
test
xor
cmpsb
or
lock
xorb
cmp
cmp
fucom
cltd
imul
cli
pushf
std
imul
push
jle
mov
lahf
shlb
das
fwait
enter
loope
insl
testl
imul
jp
cltd
and
inc
fisttpl
bound
xor
das
addr16
in
and
cmc
mov
pop
arpl
sub
rorb
enter
pop
repnz
push
es
jns
aaa
test
xchg
dec
std
insl
aad
lods
sbb
ljmp
mov
xchg
jecxz
test
popf
adc
jp
stc
mov
or
push
pusha
pop
daa
jg
cmp
mov
cltd
jo
jbe
inc
fwait
imull
push
movsb
jnp
cmpl
mov
inc
mov
adc
leave
pusha
pop
loope
push
push
dec
out
hlt
cmp
das
and
jnp
jmp
push
inc
stos
aaa
stos
mov
call
mov
xchg
fs
push
subb
js
test
rcll
je
loopne
je
hlt
push
movsl
dec
flds
shll
pusha
daa
sbb
popa
gs
mov
push
mov
adc
dec
je
fwait
loope
lods
fwait
test
sub
dec
pusha
push
and
cmp
xor
pop
icebp
outsb
ret
xchg
aad
out
sar
push
inc
shufps
pop
mov
xor
mov
pop
shlb
in
pop
insl
jle
out
ret
repz
or
hlt
stc
push
push
lods
mov
paddusb
jge
dec
sarb
lcall
mov
repz
or
push
pop
rcr
mov
fnstenv
xchg
push
and
and
into
cmc
cmp
pop
js
sbb
rcrl
shll
stc
movlps
ja
clc
or
cltd
xchg
dec
jl
push
mov
adc
sahf
out
lahf
aas
jb
xor
mov
xchg
mov
sbb
imul
outsb
fstpt
dec
call
aaa
push
mov
mov
mov
push
stc
fwait
add
jmp
xchg
sub
imul
lret
popa
mov
pushf
jecxz
pop
ljmp
inc
push
push
jns
fadd
data16
out
dec
xor
xlat
popf
mov
test
add
int
test
mov
jmp
cmpsb
adc
xor
stos
es
cmp
lret
inc
and
lcall
push
adc
push
mov
test
push
ud1
into
pushf
xor
and
lods
push
push
cmp
push
lahf
gs
cmpsl
jnp
add
enter
push
std
xchg
cmp
sub
int3
xor
jns
dec
jb
pop
mov
nop
roll
ret
jno
out
imul
fiaddl
sub
cmpps
push
mov
loope
mov
insl
std
sub
movsb
cmp
dec
and
ret
and
pop
ficomps
push
das
fcoml
pop
bt
dec
lods
adc
xor
jne
xor
inc
jp
jmp
cmp
test
push
mov
or
rorl
lcall
jno
or
push
cmp
add
ss
mov
js
and
xor
repnz
mov
lea
fwait
mov
sbb
ror
mov
cmpsb
loope
add
es
loope
jp
fidivs
pop
popf
lods
mov
push
into
data16
cmpl
or
mov
or
cltd
mov
and
mov
and
mov
outsl
push
lock
loope
sub
jl
jns
call
cmp
ljmp
push
aas
or
adc
sub
push
push
hlt
mov
cmp
push
shll
lahf
push
jge
push
movsl
dec
sub
sarb
dec
xchg
xchg
aam
and
mov
sar
test
sub
pop
xchg
mov
mov
adc
hlt
rorl
outsl
das
pop
jno
incl
or
cmp
loopne
push
or
inc
popf
sub
pop
ret
cmp
mov
outsl
cmpsl
repnz
and
sub
jp
rorb
add
inc
dec
adc
push
sub
or
lds
repz
lods
leave
fldcw
ss
cli
inc
lock
orl
dec
clc
and
inc
decb
cwtl
jnp
inc
mov
xlat
mov
adc
arpl
js
cli
xchg
stc
xchg
scas
sub
push
jo
inc
data16
cmp
push
inc
jge
mov
add
mov
loop
inc
adc
push
cmc
cli
cmp
adc
ja
sub
jne
in
cltd
jbe
dec
xchg
or
ret
bound
xchg
and
fucomp
xchg
push
out
sahf
and
clc
jp
cmp
sbb
test
push
mov
arpl
or
sahf
stc
in
and
cwtl
int
aas
add
repnz
and
loopne
loopne
inc
or
xchg
pop
int3
pop
xor
push
nop
out
lods
fwait
repnz
sbb
cmp
jbe
clc
sbb
xor
inc
popf
js
sbb
mov
mov
cwtl
stc
popf
pop
jge
imul
push
xor
push
jp
lea
stc
scas
mov
data16
mov
cli
or
icebp
test
mov
mov
adc
jg
jmp
cmc
jne
retw
xor
sub
mov
push
or
repnz
int
fcomp
mov
loopne
enter
cltd
std
push
pop
mov
sub
add
inc
das
cli
daa
add
xchg
adc
mov
movsb
rorb
mulb
mov
dec
popf
mov
out
add
xchg
lahf
negl
jmp
dec
fadds
jmp
ret
jge
fwait
sub
mov
pop
jle
push
insb
sahf
mov
or
out
or
outsb
adc
pop
loope
nop
arpl
dec
cmp
inc
dec
mov
dec
aaa
jnp
push
jns
je
push
aam
lods
push
cmp
push
sbb
fwait
push
mulb
fcmovnu
cli
adc
repz
addr16
aad
cmp
test
jb
int3
adc
dec
push
add
shrl
sbb
test
hlt
insl
mov
push
js
jmp
or
mov
pop
mov
dec
cli
je
rcl
add
xchg
das
aaa
sub
lcall
lcall
push
push
test
xchg
cmp
pusha
ss
faddl
inc
insb
jg
pop
dec
dec
shll
scas
sub
sahf
push
pushf
incl
lock
mov
pop
rcr
cmpsl
jg
sbb
push
xor
xorb
jg
pop
fiadds
and
jae
shl
mov
or
push
clc
rcrl
jo
or
jae
imul
push
in
fiaddl
je
xor
mov
sti
dec
mov
or
xor
rcrb
inc
pop
shrb
xlat
and
out
add
cwtl
gs
dec
and
xlat
xlat
push
in
mov
fnstenv
push
sub
push
jns
in
daa
test
push
mov
fstps
aad
jns
adc
leave
sbbl
and
insb
adc
mov
bound
sbb
imul
jg
sbb
mov
jnp
cmpl
sub
mov
push
mov
dec
repnz
dec
jae
insb
les
sub
shl
jbe
jae
xchg
mov
adc
dec
sbb
movsl
hlt
and
xchg
stos
cmc
add
push
pop
testl
mov
movsl
jle
pop
jbe
sub
cmp
mov
cld
ret
xchg
push
inc
push
fisttpll
push
out
cmp
sbb
sub
inc
push
loop
mov
xchg
or
dec
and
inc
pusha
adc
push
orb
or
jmp
mov
cmp
push
add
dec
arpl
movsb
mov
repz
fldcw
ret
push
inc
mov
repnz
dec
imul
lcall
push
inc
inc
add
or
clc
fnstcw
mov
scas
xorl
mov
imulb
xchg
dec
stos
in
ds
outsl
push
dec
dec
loope
add
hlt
or
xchg
jp
scas
jg
fldcw
xor
in
adc
ds
dec
mov
addr16
out
leave
xchg
or
jge
xchg
adc
bound
jmp
mov
or
dec
add
sub
movsb
xchg
cli
pop
es
xor
std
or
push
add
leave
lock
je
aam
out
mov
mov
cmp
add
in
out
lret
addl
cmpsb
add
xchg
xor
out
xchg
clc
lea
inc
push
add
in
arpl
leave
cmp
adc
cmp
stos
test
or
pop
mov
push
fdivrp
or
std
cli
loope
inc
push
jle
test
dec
pop
lock
lea
out
sahf
adc
leave
aad
mov
jecxz
cmp
mov
fistl
mov
sub
push
inc
or
and
popa
pop
mov
lods
pop
jns
sbb
jb
es
and
mov
xchg
clc
das
hlt
ja
das
test
xor
dec
ret
pop
out
mov
xorb
cmp
sbb
mov
subb
sub
and
inc
or
sub
gs
aaa
clc
frstor
inc
les
jg
push
sbb
xor
add
or
jns
rcr
aam
xlat
pop
outsb
ja
pop
inc
inc
pop
jno
adc
ljmp
and
cmpsb
leave
fnstenv
mov
scas
sub
mov
cmp
dec
add
outsl
cmp
repz
or
adc
mov
cwtl
mov
and
and
out
xor
sti
xchg
sub
stc
clc
repnz
daa
mov
out
imul
aad
ja
add
jne
aam
mov
xor
push
inc
cmpsl
or
stc
mov
pop
and
packssdw
insl
cld
fwait
cmpsb
or
add
mov
sbbl
rorb
dec
jae
add
arpl
mov
daa
stos
mov
xor
add
inc
lahf
mov
sbb
pmullw
movsb
aad
inc
pop
popf
jmp
fdivl
lds
xchg
inc
or
mov
gs
xchg
daa
in
jne
xlat
dec
sub
cmp
sar
sahf
dec
fucomip
aad
mov
sarl
test
ss
xchg
loopne
push
cmp
ret
dec
mov
or
andb
ja
ret
hlt
cmpsb
add
xor
jbe
mov
adcl
adc
jle
jo
rcrb
mov
adc
inc
cld
pop
push
jne
mov
xchg
push
fnsave
js
fidivrl
pop
outsb
fwait
sub
sbb
ds
loope
notl
add
or
or
add
nop
jle
sub
sahf
mov
push
dec
mov
int
push
push
jmp
mov
xchg
add
out
pop
outsl
push
loopne
dec
push
or
dec
inc
inc
adc
mov
aas
and
or
sub
pusha
push
push
jg
inc
mov
sbb
xchg
fxch
ret
xor
lret
adc
into
or
call
sbb
mov
lods
lods
push
roll
dec
dec
call
cmp
push
and
add
aas
jne
and
pop
movsl
lds
cmp
push
inc
pop
jbe
pop
mov
or
add
outsb
fnstsw
out
dec
les
dec
leave
add
divl
dec
mov
jne
sub
jae
loopne
out
adcb
out
popa
xchg
push
cmpsb
dec
fidivrl
jno
out
inc
cld
aas
mov
dec
sbb
ret
or
in
lcall
fidivrs
mov
sub
std
arpl
mov
data16
arpl
sahf
xor
cli
and
add
daa
add
pop
movsb
push
pushf
and
rolb
xor
sbbl
cmpsb
sub
stos
imul
ds
pop
pop
icebp
mov
aam
insb
inc
iret
int3
add
push
movsb
scas
dec
dec
fbstp
cmp
and
jp
jecxz
sub
dec
xchg
dec
pop
xor
test
mov
in
pop
lret
jp
inc
test
pop
xor
adc
or
xor
je,pt
sti
data16
mov
jns
cmp
mov
iret
aam
pop
stc
aam
aaa
enter
fs
shrl
loope
aad
hlt
inc
sahf
jne
jne
lods
movsb
sub
xchg
jl
and
mov
es
cld
out
scas
mov
rep
aam
add
es
test
cmp
xor
jo
xor
fs
call
push
gs
cmpsl
lret
mov
mov
xor
add
repz
mov
adc
das
sarl
sub
lock
aaa
sahf
dec
mov
jmp
xlat
outsb
cmp
inc
out
ja
jb
cmp
cwtl
lods
mov
jl
in
test
cmp
into
js
mov
lods
movsb
cli
fisttpl
xchg
cmp
adcl
das
bound
into
inc
jno
add
adc
sbb
ja
add
mov
into
in
sub
inc
mov
fidivrs
mov
into
sbb
mov
sarb
lock
jnp
imul
sbb
dec
fcmove
clc
ja
pop
cltd
int
push
mov
pushw
push
test
xor
add
push
adc
rcrb
cwtl
mov
lret
stos
pushl
and
push
ljmp
inc
out
add
addr16
out
pop
sbb
out
jo
cwtl
xchg
sub
ss
mov
pop
dec
pop
lods
jo
outsl
lods
cmp
cld
mov
cmpb
push
mov
mov
lahf
scas
mov
xor
lods
addl
push
mov
push
mov
fs
pusha
mov
dec
xor
cmc
lock
or
cmp
pop
push
xchg
fcoms
popf
popa
in
enter
lods
pop
mov
and
rcrb
push
cli
pushf
aaa
pop
sub
sahf
sbb
dec
jb
hlt
xchg
sbb
sub
add
std
cmpb
pusha
push
mov
loopne
jne
jle
xchg
ljmp
mov
mov
and
inc
cmpsl
popa
xorl
test
rcrl
adc
and
add
faddl
add
push
test
or
mov
ss
cltd
stos
dec
fidivrs
and
arpl
xchg
int
int
add
sahf
mov
mov
cltd
jne
adc
jge
stc
push
adc
and
push
adc
push
aam
pop
add
dec
pop
cltd
loop
xchg
sub
adc
pop
daa
notrack
xchg
mov
jge
mov
idiv
or
xchg
push
mov
stc
loope
fsubrp
ja
cmp
fwait
and
call
jp
call
out
push
ret
test
mov
or
pop
fwait
xor
push
sub
mov
push
xchg
push
frstor
push
xlat
insb
jno
adc
sarb
xor
pop
ret
jmp
push
xor
pop
in
dec
xchg
fnsave
call
clc
pushf
pop
mov
ljmp
mov
mov
or
out
mov
into
push
push
imul
ficoml
lcall
mov
cltd
clc
fdiv
fcomps
aas
dec
mov
mov
ret
outsb
stc
dec
scas
addb
scas
jb
stc
pop
adc
in
cmp
cmc
ss
pop
js
mov
es
popa
sub
mov
mov
loopne
ret
adc
lret
and
popf
sub
mov
ja
sub
dec
and
lea
loop
call
dec
in
jecxz
mov
int
pop
mov
pop
pop
insb
sti
sub
je
stos
mov
fsubrl
adc
fst
insl
push
cmc
push
jle
mov
sub
mov
xlat
or
sbb
or
mov
test
cmp
push
repnz
adc
jmp
lret
cmp
movsb
and
inc
fstl
cmp
stc
roll
mov
mov
push
test
sub
xchg
jae
push
sub
shrl
sub
push
jne
mov
addb
jl
scas
xchg
cmp
icebp
insb
add
insl
incb
push
jecxz
push
test
adc
sub
les
jg
jge
dec
lcall
sahf
jb
cltd
arpl
mov
sti
xor
push
test
aaa
mov
loope
scas
pop
mov
cld
xchg
lret
mov
jmp
loope
js
popa
stos
lds
icebp
ret
scas
xchg
cmc
adc
add
dec
mov
test
or
fsubr
xchg
push
mov
adc
xchg
jle
int3
jg
fisttpl
mov
sub
out
or
mov
cmp
loopne
push
in
rcl
es
mov
or
sti
subl
ds
push
cmpsl
lods
inc
push
inc
xor
jge
push
in
fcomi
lea
mov
int3
std
sbb
movsb
xor
out
inc
xchg
fwait
nop
daa
lds
clc
and
adc
imul
daa
jge
push
pop
into
subl
or
lret
cwtl
xor
mov
pop
nop
push
dec
add
filds
mov
mov
pusha
mov
mov
out
divb
lds
leave
cmc
xchg
ds
daa
in
pusha
ja
imul
das
addr16
fbld
gs
inc
pop
imul
xchg
lret
jb
cmpsl
shrl
adc
push
dec
adc
push
cmp
stc
sub
cli
pushf
test
enter
sahf
add
fdivl
in
cmp
test
jae
and
es
dec
or
rcrl
das
xchg
xor
mov
inc
jne
mov
daa
andl
adc
orb
or
loope
mov
inc
cmp
dec
insl
arpl
or
bound
xor
pop
test
fdivr
push
inc
outsb
mov
mov
dec
sbb
pop
fidivl
cmp
mov
and
cmp
sbb
adc
mov
cmpsb
push
fildll
test
xchg
pop
stc
pop
xchg
xor
add
jl
push
ret
push
cs
xor
mov
mov
xchg
and
add
lock
jbe
xchg
and
xchg
pop
or
fisubrl
cmp
dec
pushl
outsb
sub
pusha
xor
cwtl
shll
ds
cmpsl
adc
jmp
or
add
and
jne
in
imul
ret
in
repnz
loopne
clc
adc
fildl
nop
fistps
fbstp
int
ds
mov
pop
push
pop
jo
jl
popa
imul
inc
out
xchg
or
add
adc
clc
add
stc
jns
inc
xor
dec
bound
subb
aaa
rcrb
fbstp
or
xor
test
lcall
outsb
mov
bound
sbb
lock
mov
in
pushf
sbb
or
cmc
xchg
dec
cmp
cmp
lods
ljmp
stos
out
call
pop
mul
mov
push
xor
mov
lock
adc
orl
loopne
mov
imul
sub
mov
sahf
sahf
hlt
int
cmp
lock
mov
outsl
cwtl
push
xchg
xor
push
repz
fidivrs
test
mov
or
sbb
or
or
dec
pop
enter
push
shlb
lret
int
sub
icebp
mov
fldz
lods
mov
andb
outsb
inc
js
repnz
call
push
ret
aaa
sti
inc
imul
push
cmp
adc
or
add
dec
lahf
or
les
leave
xlat
mov
xchg
clc
mov
sbb
xor
mov
es
cli
mov
jge
add
add
push
imul
pop
add
ret
adc
sbb
mov
mov
sbb
daa
jmp
jmp
and
adc
inc
enter
mov
shll
mov
fs
pop
insl
pop
push
mov
test
mov
sub
movl
or
aaa
std
das
push
in
jnp
xor
fnstcw
jae
xor
xchg
mov
mov
sbbl
fsubp
mov
cmp
sbb
into
xchg
dec
xor
adc
mov
das
shll
gs
push
loop
sub
mov
pop
and
outsl
jle
stos
jmp
mov
cwtl
gs
test
dec
sbb
jb
imul
mov
dec
insl
pushf
mov
stos
pop
popf
sub
inc
int
mov
inc
jno
push
xor
fimuls
pop
xlat
call
mov
adcl
adc
int
pop
ret
cmp
mov
rcrl
iret
fsts
lock
rorl
sbb
and
sarb
je
nop
jmp
sti
add
leave
push
daa
mov
jb
sbb
xor
cmc
sub
cmpsb
inc
test
aaa
aad
imul
add
xchg
je
hlt
repz
cld
pusha
sbb
adc
hlt
xchg
ss
dec
inc
into
mov
jne
and
push
sahf
in
clc
shll
dec
pop
out
push
mov
xor
ret
ja
aam
mov
mov
or
imul
das
dec
mov
loop
loopew
rorb
mov
into
add
fs
pushfw
movsl
js
push
test
mov
movsl
test
arpl
pop
adc
mov
and
cli
stos
xchg
mov
jge
cmp
lahf
mov
stos
popf
repz
and
clc
sti
das
mov
test
push
dec
aad
mov
shrl
and
cmpsl
mov
mov
xchg
out
push
fidivs
lock
and
dec
and
cwtl
cwtl
enter
mov
push
push
and
mov
lret
mov
fbld
push
jl
sub
sti
xchg
jbe
dec
gs
subl
aas
jo
int3
pop
adc
iret
lods
adc
xchg
int
pop
imul
xchg
mov
inc
loop
outsb
fwait
loope
enter
and
jno
out
inc
je
orl
vcvtsd2ss
cs
xor
call
shlb
stos
push
jmp
lods
icebp
pop
jb
mov
inc
test
outsl
insb
xor
fisubrs
dec
aas
xchg
cld
sti
and
dec
push
ret
pop
negl
mov
push
xchg
adc
xchg
scas
mov
jmp
adc
nop
lret
mov
xchg
daa
repnz
sbb
inc
out
sti
rcl
ret
pop
scas
hlt
rcrb
pushf
adc
and
jns
xchg
mov
fwait
jmp
adc
or
ljmp
ret
cld
xor
cmp
inc
dec
adc
mov
cld
or
dec
shlb
out
pusha
repz
adc
stc
punpcklbw
jae
sub
fidivl
subb
mov
lcall
rcrb
int3
add
push
cmp
pop
mov
inc
aas
jns
sub
je
stos
mov
or
dec
js
scas
mov
getsec
jne
lcall
in
jge
fldl2t
jp
jbe
cmp
jns
lock
insl
dec
shl
mov
pop
push
test
popa
clc
das
jl
insb
lcall
sahf
add
rcll
pop
cmp
push
mov
inc
ficompl
cli
mov
repnz
jno
mov
pop
sahf
insl
outsb
gs
sbb
ret
sbb
icebp
dec
loopne,pn
pop
inc
ja
xchg
dec
sub
std
sbb
filds
push
call
xor
jmp
bound
test
mov
scas
js
imul
dec
mov
sti
enter
push
push
push
lahf
inc
das
outsl
rcrl
push
cmp
mov
arpl
sbb
sbb
push
repz
dec
sti
mov
lods
into
adc
inc
push
ja
cmp
mov
popa
ljmp
and
xor
dec
cli
inc
jg
movsb
jecxz
push
cltd
xor
push
sbb
sub
movsb
mov
sbb
cmp
fsts
inc
bound
sub
push
outsl
xchg
ds
test
int3
and
push
or
lods
jo
pop
fs
std
sti
and
mov
push
out
out
mov
sbb
test
adc
sbb
outsl
fdivrl
cmp
mov
push
das
pusha
lock
xchg
fdivp
js
sub
or
and
push
shlb
sbb
jbe
cld
cmpsl
inc
aaa
dec
mov
xor
in
jle
out
xchg
clc
cmpsl
mov
ljmp
jmp
pop
insb
mov
push
xor
shr
add
outsb
shr
mov
add
sbb
lods
push
mov
cmpsl
add
je
mov
pop
outsl
add
fs
pushf
xor
mov
orl
fisttpl
xchg
adc
enter
ds
mov
loop
pop
inc
push
mov
orb
out
data16
mov
scas
movsl
clc
pop
mov
jae
ss
rol
imul
sbb
cmp
stos
adc
ja
xchg
mov
jnp
or
sbb
sub
xchg
and
dec
cltd
test
lods
std
imul
sti
cli
lcall
sbb
and
xor
and
mov
lahf
xor
add
dec
in
cmp
push
div
mov
repz
cmpsb
mov
imul
out
or
pusha
add
fists
lods
mov
push
movsb
push
aas
sbb
in
or
mov
repz
cmp
push
adc
xchg
aas
push
stos
xlat
adc
rorl
in
mov
cmp
je
lret
xchg
lret
bound
ljmp
pop
roll
fstl
pop
jl
imul
daa
dec
out
cmp
cmp
inc
popf
into
and
xchg
popf
lock
aaa
stos
jbe
loop
sub
cli
push
js
inc
cwtl
push
dec
sub
cld
das
addr16
adc
add
mov
fcom
sbb
xchg
jns
adc
dec
sub
loop
jp
xor
push
adc
insl
data16
cmp
loop
ds
nop
addb
outsb
sahf
clc
ret
inc
mov
in
or
xchg
lret
jb
clc
cmpsl
pop
sbb
mov
enter
hlt
mov
push
clc
out
push
out
out
decl
pop
jo
mov
or
mov
out
lahf
or
xchg
mov
out
mov
jmp
mov
out
mov
jmp
cli
pop
push
cmp
mov
fbld
scas
mov
in
pop
and
dec
lcall
into
jno
push
shlb
and
pop
lcall
xor
das
jmp
leave
enter
popa
fldcw
fidivrs
stos
out
jmp
mov
aad
andl
stos
arpl
movsl
cld
rcll
cmp
data16
incb
dec
mov
outsb
push
dec
imul
and
and
ss
cmp
xchg
in
pop
xchg
mov
imul
push
lds
and
aad
pop
movl
cs
lock
adc
je
xor
popa
scas
sbb
mov
xor
adc
jmp
pop
outsl
push
in
adc
jb
nop
and
negb
lds
pop
daa
pop
jne
ret
js
cmp
add
push
rcrl
cli
popf
sub
test
xor
mov
sbb
das
inc
pop
mov
aad
sbb
outsb
leave
int3
inc
daa
mov
jno
xchg
or
insl
xlat
ret
cwtl
popa
dec
dec
rclb
xchg
mov
loope
aaa
arpl
jp
leave
ljmp
pop
fwait
xor
pop
mov
out
cmp
mov
mov
roll
push
sub
insl
xorb
mov
fcmovb
dec
dec
pusha
lcall
jbe
mov
dec
imul
jb
test
cmp
cmp
stos
lcall
lahf
jo
pop
daa
lret
jnp
das
mov
mov
data16
fcoml
mov
mov
cmp
mov
dec
pop
sbb
mov
mov
mov
cmpsl
loope
adc
pusha
stos
sub
iret
les
test
in
pop
outsl
push
lret
jp
xor
sbb
fdivl
outsl
mov
ret
popa
lea
and
mov
adc
lahf
mov
out
mov
cmp
out
fistpll
and
ja
test
inc
sti
fwait
in
in
jl
dec
lahf
stos
jp
inc
dec
sub
cld
pop
xchg
jp
inc
pop
test
push
pop
insb
rolb
shlb
mov
jp
icebp
mov
xchg
cmpsl
jo
stc
or
and
pop
mov
icebp
ljmp
mov
jb
iret
and
push
add
cmp
jl
push
popf
push
and
sbb
popa
outsl
and
mov
ljmp
sub
pop
movsl
lds
cmp
jbe
mov
pop
and
push
lea
scas
call
loop
repnz
jmp
mov
inc
mov
scas
ret
popfw
pop
xor
mov
dec
imul
inc
rclb
hlt
psubb
add
push
xchg
jp
xchg
fistpll
ja
insb
ficoml
mov
push
es
sub
xchg
fsubl
sbb
inc
sbb
ds
fsubs
nop
mov
pop
xor
cmp
cwtl
and
cltd
xor
push
cs
and
cmp
js
leave
test
inc
push
xor
mov
enter
sbb
in
or
ja
mov
jp
mov
hlt
mov
pop
push
jle
pop
stc
jnp
stos
lods
sbb
jp
adc
mov
jns
cmp
sar
int
xor
scas
sbb
ret
and
fwait
scas
push
ljmp
push
loopne
lea
icebp
cmpl
pop
or
in
test
ret
aam
cmp
pop
out
rol
xlat
or
test
repz
cli
or
sbb
das
vpmullw
rcr
inc
add
into
gs
movsb
outsl
jns
pop
push
jmp
jae
jo
fstps
jl
stos
pusha
lahf
mov
lcall
and
nop
xor
int3
sub
test
fisttps
dec
mov
test
pop
mov
mov
adc
popf
fs
mov
clc
leave
hlt
and
fsubl
push
cli
addr16
lret
js
xor
add
repz
das
mov
add
and
mov
dec
out
pop
jbe
cmp
ja
aas
decb
mov
and
sub
fmul
lret
mov
stc
push
pop
scas
inc
mov
divl
pop
into
jbe
loop
jp
xchg
fbstp
clc
xchg
cs
mov
mov
lret
or
data16
lods
dec
stos
in
test
jmp
sahf
xchg
mov
mov
gs
sbb
jae
inc
sub
sub
push
xlat
cmpsl
in
mov
jp
and
xlat
movsb
decl
rcrl
sbb
stc
fiaddl
dec
or
sub
jecxz
jl
dec
add
mov
lcall
mov
adcb
cmpsl
jp
sbb
add
ja
ljmp
cmp
or
xor
xor
xchg
xor
push
icebp
pop
mov
pop
test
xchg
add
pushf
mov
and
mov
adc
les
pop
adc
xchg
push
xor
jno
repnz
mov
adc
leave
pop
dec
or
popf
inc
fsubl
push
mov
mov
shrl
xchg
jge
into
fadd
add
loope
pop
xor
jg
je
inc
sub
xchg
cmpsl
xor
outsb
cmp
out
pop
cmp
pop
repnz
call
cmp
scas
cmp
lods
jns
fsubs
popa
push
cmpsl
out
or
fwait
and
cltd
cwtl
out
dec
out
test
popf
imul
mov
dec
jne
jo
mov
push
imul
mov
test
lcall
imul
mov
insb
scas
xor
popl
not
xor
mov
je
sub
jbe
loope
fnsave
call
mov
fsincos
xchg
ja
adc
add
mov
lea
iret
mov
mov
fxch
push
pop
cmp
push
insl
repz
xor
je
cmp
pop
mov
ret
add
cmp
in
push
push
dec
jb
cmpsl
aas
add
jo
je
shlb
mov
or
cmpsb
xchg
outsb
pop
and
jp
sbb
gs
repnz
mov
xchg
xchg
pop
ret
sahf
jl
dec
adc
push
mov
cwtl
adc
loopne
ss
xor
leave
cld
lcall
in
test
lahf
lea
jbe
mov
dec
les
daa
sbb
jge
pop
test
cltd
jae
push
mov
cmp
adc
in
lds
daa
adcb
nop
stos
aaa
mov
int
jae
sbb
adc
inc
mov
iret
pop
sahf
pusha
lea
call
add
xor
add
or
mov
push
sahf
lods
xchg
js
sbb
fs
imul
movsb
mov
mov
dec
or
lds
mulb
sbb
rol
test
stc
mov
stc
lcall
push
scas
cwtl
out
push
decl
cmp
out
mov
push
rclb
cmp
into
and
cmc
xchg
mov
push
in
outsb
add
pop
dec
sbb
fldl2t
fnstsw
pushf
cli
outsb
andb
mov
ret
bound
test
adc
lods
shrl
mov
or
call
popa
sbb
cmp
mov
test
pop
xchg
addr16
jne
xchg
sub
lock
aas
mov
xor
xchg
fld1
inc
mov
outsl
push
pop
add
shl
cld
lea
mov
jbe
movsl
adcb
and
mov
and
push
push
lock
xor
jge
out
cmp
pusha
inc
outsb
lds
in
sti
mov
shrl
loopne
or
js
sti
xor
scas
add
lahf
lea
cld
mov
aad
fadds
xlat
mov
pop
cmpsl
popf
in
or
and
aas
dec
jge
iret
sbb
stos
cmp
xchg
imul
ljmp
ss
std
roll
es
pop
fs
inc
sahf
lods
pop
sub
sbb
dec
imul
xchg
cmpsb
mov
sbb
addr16
push
fs
mov
lods
jne
dec
push
lret
int3
test
xor
sbb
xor
or
or
or
cltd
xchg
rcll
adc
xor
dec
cmp
cmp
dec
pop
push
loope
ss
inc
dec
mov
xor
les
push
faddl
cmp
jge
or
shlb
nop
ja
jp
xchg
sub
and
push
push
mov
cmp
inc
pop
aas
aaa
loopne
jnp
shll
jg
int
xlat
shrb
jl
mov
das
pop
outsl
pop
pop
sbb
jbe
xlat
repz
les
jb
mov
xor
add
movb
loop
cmp
daa
orb
jle
xor
aad
cmp
mov
lds
lods
aaa
add
sub
pop
pop
dec
dec
loope
push
and
mov
fsubs
jle
pushf
pop
lock
jmp
xchg
adc
push
mov
roll
cltd
add
fsubrs
mov
in
or
jno
hlt
mov
pop
out
adc
sub
push
mov
jo
add
test
cmp
mov
vmread
jno
lret
test
rorl
bound
inc
aam
ret
add
es
pop
lods
inc
lret
into
mov
stos
mov
push
addr16
and
fmull
mov
ljmp
fucomip
mov
mov
mov
sub
xchg
movsb
adc
pop
add
mov
xchg
lods
shr
sbb
cmp
imul
adc
test
jae
inc
aam
inc
pop
out
arpl
pop
cld
push
ljmp
xchg
mov
mov
jae
add
ja
es
or
test
jo
adc
mov
int3
out
lret
jae
mov
lods
frstor
adcl
clc
out
mov
mov
jbe
jmp
stos
push
jecxz
adc
inc
push
and
mov
pop
or
movsb
mov
pop
daa
outsl
ret
fsubs
pop
cmpsl
imul
movb
out
das
inc
movsl
cmp
and
inc
push
bound
sbb
popf
adc
pop
iret
xor
add
push
cmp
mov
jae
sub
repz
xor
enter
sti
xchg
fs
mov
pop
imul
sbb
mov
add
nopl
xchg
sbb
fs
and
add
xchg
sti
xchg
cmpsl
out
loope
cmpsb
ret
xchg
push
fnsave
sbbb
sub
js
dec
lods
fmull
mov
or
or
pop
idivl
cmp
test
scas
or
cmpsl
fdivrs
cmp
lret
mov
sbb
imul
add
stc
mov
data16
leave
fstpt
in
push
inc
inc
lock
dec
int
pop
adc
popa
inc
es
mov
fnstcw
or
mov
sbb
or
mov
ljmp
into
push
add
sahf
sub
repnz
mov
js
dec
and
add
pop
or
push
pushf
mov
push
mov
push
jbe
cld
iret
xor
jp
call
and
movsb
roll
aaa
pop
out
adc
pop
lods
xor
fdivrs
orb
mov
jl
push
fs
int
xchg
stc
mull
ja
pushf
xor
add
test
mov
mov
loopne
or
xorl
insl
js
mov
push
mov
cmp
inc
out
stc
popf
add
push
ljmp
pop
dec
dec
leave
inc
data16
dec
pop
pop
das
dec
dec
add
sub
sbbb
cmp
into
jmp
jbe
popf
stc
mov
insl
jg
xchg
add
rolb
pop
pop
stc
jo
test
dec
fnstsw
ret
push
int
push
pop
xchg
jns
dec
in
test
cmp
shrb
jg
fnstcw
lods
or
ficompl
xor
mov
push
nop
popf
ret
in
fsubrs
mov
ret
arpl
xlat
inc
mov
mov
push
out
xchg
push
jb
sbb
add
add
lods
pop
stos
jmp
pop
in
add
hlt
xchg
les
push
in
pop
lock
aam
je
mov
push
inc
push
xchg
jnp
push
dec
sub
aad
ss
pop
dec
cltd
std
insb
add
mov
xchg
fidivrl
mov
adc
fwait
aaa
xor
and
bound
int3
int3
decl
fwait
push
and
fldl
andl
lods
insb
aas
out
pop
xchg
fs
fwait
int3
mov
mov
out
ficomps
push
repz
in
xchg
sti
dec
pop
mov
lcall
in
cmp
popa
mov
mov
sub
pop
mov
mov
mov
aas
mov
loope
sbb
cmpsb
lcall
cli
or
jmp
push
xor
inc
xchg
and
scas
aaa
dec
je
cmp
test
sub
lods
inc
imul
mov
push
insl
enter
adc
mov
xchg
jmp
mov
sbb
fwait
xor
add
lcall
mov
mov
rcl
mov
cmp
out
ret
lret
pop
hlt
adc
xchg
popa
es
push
inc
sub
jne
shrl
dec
dec
dec
xchg
rcrl
cmp
jl
sarl
xor
jo
push
xor
or
sub
mov
inc
jmp
mov
xchg
stc
int3
push
and
arpl
cmp
in
lahf
or
jle
dec
fmul
push
sbb
outsl
divb
push
call
cmp
aam
xor
loop
icebp
pop
fisttpll
imul
scas
mov
out
jbe
outsl
cmp
jnp
mov
jg
mov
xchg
in
dec
push
ljmp
inc
xlat
lcall
and
pop
sbbb
dec
fbld
jl
ja
outsb
data16
psubusw
sub
std
aad
int
xchg
or
int
aad
pcmpgtd
ds
je
xlat
movsl
outsl
jge
dec
xorl
cmp
or
xlat
int3
lret
cmp
fnstcw
imul
mov
jno
add
fidivrl
cmp
ljmp
fdivs
fbstp
into
mov
fcmovbe
test
pop
dec
mov
cmp
aad
out
add
daa
jbe
push
xor
mov
xchg
sub
ret
mov
cmc
testl
rcll
loop
jecxz
inc
frstor
fs
negb
sbb
shl
mov
dec
es
mov
push
adcb
test
sub
sbb
lds
lods
ja
loopne
pop
fwait
cmp
and
xor
push
repz
xchg
or
push
mov
js
in
pop
pop
jecxz
xor
stos
and
testb
scas
rcrl
sbbl
ja
lret
mov
lea
adc
xor
lock
addr16
adc
lahf
jo
mov
lret
les
xchg
cmp
dec
arpl
xchg
add
cmpsb
jnp
push
mov
movsl
inc
test
xchg
fwait
and
and
mov
mov
dec
mov
repz
mov
jle
icebp
sub
and
std
mov
mov
pop
stos
lcall
insl
jbe
xor
sbb
hlt
cwtl
xchg
lea
jnp
sub
pop
lcall
loopne
add
dec
fucomip
xchg
icebp
push
xor
sbb
sti
sub
mov
adc
stos
mov
int3
movsl
outsl
mov
icebp
stos
nop
xor
mov
popa
add
scas
dec
sub
push
mov
jno
daa
and
cmp
dec
popf
stos
inc
iret
insl
pop
ss
push
dec
loopne
mov
addr16
das
pop
push
movsl
or
test
sub
cmp
nop
push
in
ret
das
and
mov
cwtl
imul
adc
inc
mov
in
push
lds
aad
sbb
lret
adc
filds
or
lret
das
adc
push
fists
out
lea
stos
popa
sbb
mov
dec
nop
mov
ss
lock
push
pop
int3
or
mov
xchg
inc
pop
dec
repz
add
add
in
loope
xchg
pop
cld
xchg
inc
aas
push
decb
fsubrl
aaa
push
sbb
or
push
xor
lcall
cltd
sbb
xchg
pop
mov
xchg
add
mov
mov
sub
jmp
add
inc
pop
sub
dec
lahf
push
in
push
mov
aaa
shlb
pop
jmp
push
mov
or
add
shr
lcall
clc
out
xchg
mov
fsubrp
inc
jae
xor
loopne
fstl
or
cmp
mov
mov
cmp
mov
imul
push
scas
push
mov
test
sbb
pusha
jbe
fistl
jb
and
movsb
lods
add
xor
cmp
sub
mov
xchg
cmp
sbb
mov
inc
test
xchg
pop
jl
mov
xchg
sbb
xor
xchg
dec
dec
mov
push
jno
sub
sbb
and
popf
in
xchg
push
stos
cmpb
insl
and
or
pop
cli
jne
stc
mov
fiaddl
mov
aam
mov
push
fs
mov
sub
adc
add
and
incl
into
test
mov
rcll
mov
jmp
inc
push
mov
nop
xchg
sub
sbb
loopne
je
cmc
movsl
in
test
jo
adc
sarl
or
sub
int3
pop
or
jl
in
loop,pt
ljmp
adc
pop
xor
jnp
fsubr
jg
call
sub
pop
rolb
out
inc
jmp
fadds
insl
add
js
insb
popa
cmpb
icebp
movsb
add
sub
xchg
imul
shlb
inc
outsb
aad
popa
in
mov
ret
mov
pop
movsb
scas
push
xor
xchg
inc
out
mov
out
inc
cld
sbb
aam
dec
jns
cld
cmp
enter
pushf
pop
cmp
test
add
inc
mov
mov
enter
cmp
imul
push
lret
aas
or
push
or
stc
cld
sub
pop
dec
ss
and
adc
add
cmp
sbb
pop
cmp
jecxz
test
mov
mov
jno
test
sub
push
mov
or
xchg
aaa
adc
mov
or
pop
repz
sbb
popf
js
lods
test
mov
fcomip
test
mov
aad
push
aas
push
loopne
adc
sub
dec
stos
cmp
aaa
xchg
or
mov
arpl
test
repnz
sub
pop
incl
lds
aas
sbb
adc
jp
fdivs
xor
scas
push
fcoms
stos
inc
popa
testb
mov
mov
testb
and
jecxz
adc
std
xchg
bound
lcall
dec
push
bound
jmp
push
mov
and
je
xchg
rcrl
pop
ret
cmp
push
jae
pop
mov
shll
xor
data16
test
xchg
mov
lret
adc
sbb
xor
in
cmpsb
mov
mulb
lret
adc
scas
sbb
add
ljmp
xor
pop
aaa
jns
in
js
mov
sahf
add
inc
cmp
movsl
sub
das
sahf
mov
push
insl
fldt
lcall
or
lock
mov
pop
stos
add
js
inc
fdiv
stos
in
mov
add
dec
inc
lret
adc
xor
shlb
fmuls
pushf
jmp
stos
add
add
in
xchg
xchg
inc
xlat
lods
aas
inc
cmp
or
and
xor
aad
dec
dec
mov
imul
cs
dec
inc
xor
in
les
xor
repnz
cmpsb
jmp
popa
jl
into
stos
or
cmp
sbb
inc
dec
ss
dec
out
jno
xor
fildl
inc
movsl
inc
push
fxch
xor
pushf
mov
iret
jp
aas
outsb
addr16
imul
lret
xchg
es
jb
notb
shrb
mov
fnsave
push
mov
arpl
push
xor
push
inc
lods
mov
fidivs
pop
imul
inc
in
ja
mov
push
mov
push
and
lret
add
dec
xlat
and
push
js
jb
jg
std
jo
xchg
sub
pop
cld
loop
or
clc
sbb
push
cwtl
sbb
scas
mov
pop
xchg
inc
xchg
mov
sbb
or
push
out
mov
cmc
sbb
pop
cmp
and
dec
roll
sub
daa
iret
cmp
sbb
aad
and
push
jmp
pop
ret
lea
cli
mov
jnp
and
push
mov
rclb
addb
jle
sub
sbb
push
xorb
stos
nop
dec
cli
test
movsb
mov
les
enter
add
pop
inc
orb
dec
mov
cmp
push
pop
dec
ds
jns
das
fwait
add
loopne
sahf
dec
xor
or
icebp
mov
add
inc
sahf
dec
ja
lock
fdivrl
and
iret
sub
jne
in
xor
sbb
mov
jno
ljmp
lods
shrl
inc
mov
inc
lods
inc
out
sub
pop
aad
mov
cmp
repnz
mov
inc
push
adc
mov
cmp
push
movsb
into
shlb
call
mulps
mov
jns
adc
gs
pop
clc
or
jbe
mov
aad
mov
insl
jge
xlat
jg
andb
popf
pop
icebp
inc
mov
fldt
rcr
xor
cmp
stc
in
out
popf
pop
xlat
jns
repz
stos
or
testb
clc
xchg
sub
sub
adc
into
stc
clc
movsl
inc
sub
cmp
adc
dec
and
xlat
mov
movsb
lcall
in
cli
test
les
or
loop
arpl
shrb
mov
xor
dec
in
aam
fidivrs
pushf
enter
repnz
icebp
lods
and
xchg
inc
adc
xchg
cs
negb
pop
jl
add
es
inc
push
jmp
es
mov
or
pop
out
cli
test
xor
sbb
inc
push
das
sbb
mov
push
fstpt
cmpb
insl
sub
xlat
mov
insl
test
push
jo
lods
inc
push
pop
sub
jne
fistpl
lret
ret
sbb
test
sbb
and
orb
pop
bound
imul
lcall
cmp
or
sahf
xchg
mov
mov
mov
les
mov
jnp
jnp
call
push
mov
hlt
push
dec
in
pop
mov
dec
cli
xchg
cwtl
xchg
sub
insb
jmp
fwait
in
pop
das
test
cmp
test
mov
and
sub
shrl
mov
das
mov
jae,pt
out
jp
ret
mov
movsl
sub
test
mov
jge
dec
xchg
push
fcmovnbe
outsb
or
cs
dec
iret
push
pop
adc
dec
lahf
imulb
sbb
out
inc
ret
and
inc
gs
sub
mov
and
push
add
sbb
das
xchg
ret
dec
cmpsl
js
scas
push
sub
jle
movsb
loope
fisttpl
or
cmpsl
aas
add
cmp
adc
pop
xchg
xor
or
and
dec
call
adc
mov
arpl
cwtl
outsl
cmp
imul
mov
cmp
cmp
mov
sti
pusha
lea
sub
mov
inc
push
stc
jp
adc
push
je
xchg
xchg
xor
mov
mov
pop
cmpsb
cmp
shlb
sbb
int
pop
mov
fsubr
pop
add
sbb
cmpsl
or
mov
repnz
stos
and
pop
jns
adc
bound
stc
jno
dec
adc
idivl
add
xlat
lcall
fcompl
sbb
aad
inc
nop
sbb
jl
lock
pushf
mov
jge
stc
call
cmp
adc
sti
out
nopl
inc
test
stos
push
mov
fistl
lods
sub
ret
pop
int
movsl
fdivl
xor
fstpl
shll
mov
out
jbe
sbb
aad
ss
adc
popa
sahf
clc
mov
es
mov
fwait
ss
inc
dec
and
insl
mov
cli
pop
shlb
pop
or
and
test
out
jmp
add
movsl
scas
das
push
jb
push
sub
xchg
add
es
and
incb
adc
mov
mov
dec
xor
push
imul
les
dec
repnz
add
jbe
cmp
negl
out
fcompl
mov
pop
cltd
daa
jb
xchg
clc
sbb
out
fsubs
fimull
insl
gs
lcall
and
fisubl
shrl
mov
out
xchg
pop
imul
out
jne
les
fs
or
jne
sub
mov
aad
lods
add
pop
je
inc
aas
sbb
xor
jmp
sbb
test
jle
jmp
test
jb
inc
movsw
dec
clc
clc
lret
fsubl
lret
popa
hlt
jo
call
mov
inc
fiaddl
mov
sbb
ds
outsb
sub
nopl
sub
fs
dec
outsl
cltd
js
dec
and
clc
sbb
cwtl
insl
cltd
add
mov
test
cmp
jo
mov
mov
pop
pop
or
push
push
sub
xchg
add
mov
loop
pusha
ss
xchg
jns
std
mov
sub
enter
jle
shll
cmp
and
daa
pop
sub
bound
rclb
push
or
repnz
jecxz
and
lahf
jo
cs
mov
lea
lcall
dec
loop
in
popf
or
jae
xor
sub
test
out
nop
sbb
das
mov
mov
nop
xchg
fnstenv
in
push
in
test
popa
xor
add
aaa
sub
gs
or
sbb
push
push
xor
and
and
lahf
adc
cmp
jmp
jae
jb
or
mov
adcb
fadds
pop
cs
ljmp
and
outsl
and
stos
mov
jge
and
pushf
jl
jae
stos
push
jne
dec
inc
or
pusha
inc
int
jne
xchg
jg
int
in
push
cmpsl
js
dec
fsubrl
xor
jl
jmp
ret
sbb
mov
mov
insb
es
ret
test
fsincos
imul
push
aam
sbb
cmp
addr16
subb
or
xor
adc
adc
iret
xchg
mov
in
outsb
mov
xor
adc
and
sbb
aas
push
inc
ds
jl
or
push
arpl
stos
xchg
pop
jo
add
mov
sbbb
fcmove
adc
inc
add
mov
push
pop
in
or
mov
adc
sub
mov
ficoms
ljmp
dec
adc
aaa
mov
cmp
into
dec
popf
sbb
pusha
mov
in
jle
call
addr16
out
out
bnd
and
outsb
outsl
jno
or
sbb
sub
in
mov
call
mov
xchg
jp
dec
loopne
or
addr16
mov
xchg
sub
push
adc
cltd
dec
xor
mov
xlat
outsb
push
adc
lock
jl
mov
pop
xchg
xor
ret
aas
es
jmp
outsl
jnp
or
imul
mov
test
sbb
pusha
xchg
inc
dec
out
xor
dec
int3
lods
cmp
aad
sub
cld
mov
mov
cmpsb
adc
sbb
jne
pop
push
fs
psubsw
add
jge
push
mov
xor
inc
stos
jp
lret
and
lea
dec
sbb
xor
xchg
mov
mov
and
push
data16
xchg
leave
mov
icebp
stos
add
fadds
or
popa
clc
pop
mov
mov
mov
add
mov
flds
and
mov
out
movsb
notl
mov
lods
jo
in
std
aad
out
ret
outsb
mov
and
push
outsl
pop
mov
sub
dec
push
sar
loope
push
xor
dec
mov
adc
sub
loope
sti
inc
lods
inc
jns
ss
sbb
pop
cld
ds
repnz
loopne
lahf
test
inc
rclb
ja
mov
push
stos
inc
xor
mov
lret
div
in
and
mov
mov
xor
cwtl
iret
lea
dec
xchg
mov
mov
test
out
test
pop
push
push
shll
fnstenv
jmp
std
ljmp
or
and
aam
mov
aas
xor
xchg
cli
push
std
ljmp
pop
add
mov
xor
out
pop
dec
rcll
inc
enter
dec
inc
sub
iret
aas
dec
mov
clc
movsb
cmp
lds
je
and
push
repnz
insb
sub
lods
int3
shl
repz
sub
xor
shll
cli
push
mov
dec
adc
repz
xchg
xchg
cmp
cmpsl
mov
pop
sub
rcrl
fistpll
div
or
inc
jns
jne
bound
clc
outsb
dec
push
sbb
aam
pusha
jge
mov
in
pop
sbb
pop
and
xchg
mov
cld
jae
insl
enter
sahf
sub
repnz
dec
pop
add
pusha
xor
inc
std
sub
xor
ret
pop
in
mov
sti
adc
push
xor
jns
insl
in
inc
push
repz
dec
ret
pop
cmpsb
aas
pop
cmp
jle
inc
push
mov
xor
jo
lods
clc
dec
fisttpll
mov
bound
je
mov
inc
xchg
jns,pn
insl
lea
mov
int3
jno
sub
rorl
add
push
or
adc
in
sbb
adc
adc
jp
xor
enter
shrb
push
xchg
outsl
daa
dec
jne
mov
push
adc
pop
jns
mov
in
push
pop
rcll
adc
fdivrs
test
mov
cmc
cmp
adc
repnz
les
jp
xchg
xchg
sub
xchg
pop
hlt
inc
pop
mov
leave
push
shrl
add
jle
std
cmp
pop
lods
add
ret
sbb
dec
xchg
movsl
ret
icebp
popa
mov
push
icebp
stc
loope
or
ret
into
popa
call
dec
loope
sbbb
dec
iret
cld
pop
add
aas
cltd
cwtl
and
mov
xchg
orb
das
pusha
ljmp
sbb
sub
add
or
jl
xchg
lret
xchg
fs
push
jb
test
push
lods
cmp
fnsave
ret
ret
add
adc
or
dec
test
cltd
xor
inc
mov
mov
dec
dec
mov
sahf
fmull
jp
pop
lods
negl
faddl
mov
mov
arpl
test
mov
mov
test
jb
cmpsl
ds
inc
mov
addr16
rcrb
pop
or
mov
push
mov
or
inc
aaa
sub
ja
sbb
mov
imul
adc
scas
std
jp
inc
lcall
sub
daa
lds
lcall
cmp
arpl
cmp
mov
orb
jnp
add
push
jle
je
push
xchg
call
pop
inc
outsl
add
xlat
pop
sbb
dec
dec
fbstp
insl
imul
cmp
test
xchg
leave
xor
sti
inc
stos
fiaddl
mov
pop
or
mov
pop
sti
xchg
stc
cmp
pop
in
mov
lea
jo
mov
or
call
movsl
rcr
out
js
int3
lret
call
in
pop
jmp
fimuls
jnp
adc
ja
jb
stos
leave
repnz
stos
shll
inc
pause
mov
pusha
ja
jne
add
jmp
shrl
and
mov
int3
sbb
push
iret
das
adc
ret
mov
xor
mov
adc
adc
repnz
xchg
inc
imul
es
xchg
pop
xchg
add
push
sub
pop
mov
hlt
xchg
lret
add
pop
shrb
xor
inc
mov
pop
imul
sahf
mov
push
inc
cmpsb
xchg
lret
push
pop
inc
cld
into
fsubrl
rcl
push
dec
add
cmpsb
cmp
popf
imul
jo
wrmsr
or
mov
xchg
sbb
add
je
daa
clc
sub
sbb
jl
out
cmp
out
sub
ret
int
iret
das
jle
shr
xchg
pop
outsb
dec
pop
sbb
cmp
push
push
movsl
aaa
xor
mov
push
out
test
xchg
cs
fistpll
mov
cmpsb
push
cs
bound
push
lahf
jecxz
rorl
js
scas
mov
cwtl
es
adc
lcall
aas
fidivl
mov
les
jns
xchg
jg
loopne
jns
adc
pop
int3
lods
shrb
lret
pusha
mov
pop
jae
hlt
inc
and
sar
pushf
pop
ret
lods
imul
mov
xchg
add
shlb
sub
and
dec
imul
push
rorl
xor
ficoms
mov
popf
shll
outsl
dec
aam
push
cwtl
incl
push
icebp
fiaddl
dec
cld
ja
mov
mov
cmpsl
jns
fstps
mov
mov
cmp
arpl
xchg
add
add
xchg
sub
add
xor
mov
dec
jecxz
mov
in
add
adc
xor
sbb
out
adc
fmull
jle
pushl
push
scas
aas
out
out
mov
push
pop
dec
and
xrelease
sub
xchg
adc
enter
pop
pop
shrl
adc
mov
fwait
ss
lods
mov
xchg
lds
into
and
clc
jbe
add
or
addb
andl
cmpsb
jl
cmpsb
fistpl
cmpsl
push
fs
sub
xchg
sub
or
xor
les
adc
add
mov
cltd
stos
xchg
mov
fstps
jns
sahf
pop
inc
pusha
addb
pop
pushf
loop
fsincos
mov
sbb
fsubr
std
pusha
sbb
je
cs
xor
adc
jle
aaa
lret
loopne
sti
or
jg
fiadds
jge
bound
xchg
xor
add
outsb
push
out
mov
jmp
shrb
xor
sub
mov
cmpsl
pop
push
jmp
pop
xchg
sub
add
mov
les
outsb
mov
dec
in
std
nop
frstor
movsl
inc
mov
xor
sub
fildl
sub
sahf
jl
sahf
movsl
icebp
add
and
adc
and
adc
xor
daa
mov
movsl
xchg
nop
jne
shrb
es
ret
mov
data16
xchg
mov
scas
mov
test
inc
shlb
or
fwait
add
shlb
mov
mov
rol
push
mov
shlb
mov
aad
fisttps
sub
pop
imulb
xlat
or
add
cmpsb
jg
cmp
aam
xor
clc
push
add
xor
sub
inc
mov
lods
cmpsl
push
add
dec
add
popa
aad
dec
mov
loop
sbb
cmp
std
stos
hlt
pop
rclb
fcoml
arpl
push
jg
push
lock
inc
shll
adc
cwtl
mov
pop
mov
dec
ss
jbe
sbb
dec
mov
outsb
scas
imul
js
mov
xor
push
mov
int
cwtl
movsb
add
das
cs
div
pmaxub
xorl
inc
mov
adc
filds
movaps
jmp
and
pop
or
imul
repnz
lret
jne
in
sbbb
dec
pop
jmp
push
mov
mov
imul
pushf
xor
or
mov
mov
lods
insb
mov
decl
aas
fnstenv
or
mov
inc
scas
faddp
mov
cli
mov
subl
sub
sbb
gs
and
dec
pusha
jno
adc
or
test
sub
rorb
sbb
xlat
sub
test
arpl
sbb
inc
cmp
pop
pop
jmp
loopne
ret
adc
data16
in
leave
in
test
push
pop
fisubrs
adc
clc
test
call
cmp
sti
or
call
xlat
xchg
stos
inc
sbb
sub
loop
stos
dec
jl
je
mov
sarb
xor
clc
fs
add
fcomip
dec
mov
insb
adc
mov
les
sahf
or
test
sub
sarl
pop
and
test
gs
mov
aad
les
std
loope
xor
pop
into
pop
into
adc
mov
mov
es
filds
shrl
xchg
cmp
and
cmpsl
pop
loopne
dec
fisubs
dec
sub
fsubrl
scas
xor
dec
sbb
jne
sbb
xchg
test
jge
sub
push
cli
inc
shl
js
fidivrs
mov
fisubs
cld
insb
inc
ficoml
scas
sub
xor
xorb
or
pop
xchg
jge
clc
negl
insb
shr
jb
or
mov
jnp
jo
sbbl
pop
jp
dec
and
pop
cltd
xchg
jae
xor
pop
popa
lds
cld
lretw
fstps
add
les
jo
stos
adc
enter
jne
je
test
pop
aam
dec
cli
dec
out
ret
mov
xlat
cmp
inc
mov
xchg
cs
popa
clc
mov
dec
pop
push
out
clc
sbb
mov
out
jae
pop
cmp
adc
shr
outsb
adc
jl
pushf
scas
sbb
pop
add
mov
dec
or
dec
mov
inc
out
test
arpl
repnz
leave
lcall
fsubr
stos
mov
fdivrl
outsb
or
std
mov
in
mov
add
inc
cmp
mov
jmp
jmp
out
push
enter
dec
hlt
dec
mov
callw
add
lea
cltd
push
out
into
adc
xor
xchg
and
popa
mov
or
fdiv
sub
lods
adc
inc
sahf
std
negb
sbbl
sbb
and
push
mov
addr16
dec
push
pushf
data16
aaa
into
push
lods
into
xor
int3
in
sbb
mov
faddp
jb
mov
mov
das
sbb
lods
cmp
push
in
dec
xlat
ret
xlat
pusha
jae
xchg
stos
xor
pushf
xor
mov
ret
repz
lret
mov
fbstp
cmp
int3
xchg
sub
mov
pop
dec
adc
iret
mov
vmovq
leave
push
fs
scas
ds
cmp
inc
ficoms
mov
leave
out
outsl
notl
out
inc
cli
in
push
outsb
push
insb
mov
popf
arpl
and
xor
adc
popf
lahf
xor
mov
mov
push
out
dec
cmp
inc
or
in
fwait
std
xchg
and
pop
repnz
test
pop
sub
test
loope
int3
cmpsl
ljmp
xor
repz
scas
rcrl
jp
adc
sbb
mov
push
out
aam
in
rorl
jp
cmp
add
mov
adc
int
lret
shrb
sbb
leave
jp
cmp
cmpsl
nop
test
mov
xchg
sbb
mov
imul
gs
aad
mov
fs
jge
inc
scas
xchg
add
dec
fcompl
or
loop
xor
sbb
jmp
cmp
pushf
pop
jmp
into
iret
xchg
xor
mov
aad
xchg
nop
jmp
add
cmp
cmpsb
gs
cmp
xchg
jg
dec
ss
stos
jecxz
loope
loopne
lods
and
inc
xchg
rorb
and
jp
mov
jle
sbbl
jge
xor
gs
jl
addr16
ret
lea
sbb
dec
out
sbb
negl
addr16
pop
jbe
call
sub
out
sbb
and
pop
iret
outsb
and
lods
into
fs
push
cmp
jb
dec
pop
pushf
inc
pop
mov
outsl
loope
jle
pop
add
add
sub
xchg
in
in
push
ja
xor
stos
push
sub
std
scas
subb
gs
pop
js
pop
add
arpl
push
add
repz
mov
pop
mov
ret
loope
std
jle
dec
mov
sbbl
fsts
ljmp
je
loop
aam
int3
fimull
fildll
xchg
andl
jg
and
fildll
jl
movsl
test
inc
or
lcall
dec
cs
ret
cmpsb
in
fidivl
xlat
add
xor
push
fmuls
jle
divl
repnz
adc
push
xchg
sub
jno
adc
cmp
loopne
xchg
sahf
and
inc
and
mov
pushf
test
movsl
pop
out
ljmp
xor
loopne
arpl
insb
ret
and
rclb
lcall
shlb
jbe
andl
pop
jmp
aaa
xchg
pushf
mov
mov
adcb
inc
inc
arpl
in
inc
push
fisubs
mov
xor
fstpl
rcll
imul
sub
movsl
out
jmp
push
sub
test
imul
cmc
push
add
icebp
xor
mov
mov
icebp
adc
gs
lret
dec
mov
movsb
jns
daa
pop
or
int3
mov
mov
outsl
testb
xor
sub
fbstp
add
pop
nop
mov
jmp
ljmp
push
adc
mov
fs
movsb
stos
push
pop
push
adc
imul
repnz
out
inc
push
mov
pop
sub
dec
jnp
test
fdivrp
sub
pop
push
mov
les
test
lcall
and
or
and
sub
cmp
push
dec
jecxz
idivb
leave
add
lods
ljmp
pushf
cmc
push
out
popa
push
js
rep
jmp
jnp
xchg
inc
loope
fcompl
ljmp
aam
jno
ss
push
cli
mov
xor
bound
stos
inc
lods
aad
mov
andb
lods
xchg
loop
mov
and
or
xor
push
cmp
clc
xchg
mov
mov
fisubs
repz
dec
pop
push
lcall
sbb
out
xchg
push
lods
dec
lea
mov
pop
xchg
jl
imul
loopne
xchg
push
push
add
jno
sub
in
mov
out
das
jmp
ja
cli
mov
mov
shrb
dec
or
xchg
pop
xchg
dec
push
jo
in
sahf
popf
fsubl
mov
insl
xchg
add
pop
adc
adc
xchg
dec
ss
mov
loop
push
out
andl
push
xor
sbb
dec
and
mov
popa
stc
scas
ds
arpl
sbb
outsb
cmpsl
stc
lods
sub
xor
mov
insb
push
ret
or
xchg
mov
icebp
inc
mov
dec
notb
movsl
pop
push
jecxz
imul
jmp
xchg
ficompl
mull
cmpsb
xchg
fwait
pop
xor
mov
testl
sub
mov
mov
addl
dec
add
jno
xchg
sti
push
shll
sub
insb
outsb
mov
fistpl
sbb
adc
push
cltd
sbb
sbb
ret
shlb
repnz
sarb
pop
test
sbb
cmp
stc
mov
fwait
stc
push
inc
jbe
or
inc
pop
loope
test
jae
clc
lea
cld
jg
cs
push
repnz
popa
cmp
cmp
push
test
push
push
repz
sti
jb
sbb
xchg
movsb
cmp
jnp
mov
mov
cmp
repnz
xchg
lcall
sbb
out
cmp
sbb
dec
dec
fwait
scas
pop
lahf
jo
jb
push
in
lret
popa
mov
loope
ret
pop
mov
dec
js
xor
mov
loopne
or
cwtl
push
je
mov
test
and
stos
mov
cmpsl
outsb
jne
outsb
pop
add
test
mov
sub
shlb
mov
lahf
lods
stc
out
outsb
inc
push
daa
outsl
test
adc
fsubl
das
cmp
fs
or
cmpb
sub
mov
mov
mov
or
shlb
xor
sti
dec
lds
or
daa
sbb
dec
xchg
call
mov
ljmp
inc
cli
xchg
js
shrl
lcall
shlb
inc
mov
sbb
xchg
movsl
lds
ret
pop
pop
js
jl
dec
sbb
lea
ret
inc
scas
xchg
and
sbb
idiv
xor
insb
std
lcall
lods
lret
ret
xor
mov
push
outsb
mov
cmpsb
fldenv
aam
addr16
lods
xor
push
dec
inc
test
std
bound
fldenv
dec
fwait
jno
mov
call
sub
std
adc
and
pop
out
adcb
add
xchg
mov
push
jl
push
aaa
pop
mov
daa
movsl
cmp
cmc
out
cmp
inc
test
adc
sbb
mov
fwait
jp
fwait
scas
dec
lcall
cmpsb
jg
das
mov
push
out
sti
fnsave
adc
shrb
xor
xor
xorl
cmp
cli
jbe
inc
xor
std
inc
fsubrs
push
icebp
scas
orb
mov
fld
pop
add
mov
and
stc
fwait
ret
popl
outsb
test
repz
jbe
dec
nop
or
subl
push
mov
test
scas
loopne
loopne
or
mov
push
out
stos
add
sub
dec
add
test
stos
jne
sbb
jae
jno
insl
loopne
sbb
ds
add
and
pusha
repz
mov
imul
inc
icebp
pop
movsb
test
bound
adc
je
add
mov
out
ljmp
in
shr
jp
sub
adc
repnz
cmp
repnz
mov
jge
and
lcall
add
outsl
mov
arpl
loop
mov
cmp
stos
inc
mov
rcl
call
mov
andnps
adc
lods
pusha
mov
mov
test
lret
pop
mov
mov
and
sbb
lds
loop
xchg
mov
mov
outsb
adc
ja
pushf
pop
cmp
cmpsl
inc
xchg
push
cmp
lds
jae
test
add
rcrl
adc
roll
jns
mov
mov
jnp
mov
pop
add
loopne
jg
loope
popa
mov
mov
xor
pop
addr16
rcl
add
jge
sbb
loopne
cmp
add
aad
lea
or
add
cmp
push
jmp
push
jbe
clc
in
dec
mov
dec
sub
test
pop
les
loope
aam
inc
inc
push
xor
shll
cltd
add
mov
inc
adc
jl
repnz
inc
adc
push
inc
push
out
in
xchg
lods
into
fsubl
movsb
and
push
mov
repnz
fs
pop
mov
dec
sub
aas
pop
jo
push
pop
cmc
test
das
sbb
pusha
or
gs
push
in
jbe
les
lret
add
adc
ljmp
and
sub
xchg
pop
mov
aad
add
sbb
sahf
hlt
in
in
xor
scas
fistpl
cld
pandn
mov
jne
cmp
leave
cs
dec
lods
push
sub
mov
enter
xor
mov
packssdw
mov
lods
test
cmp
jb
lahf
jle
addr16
pusha
cld
clc
cwtl
out
mov
sbb
daa
insl
sahf
xor
cmp
inc
xchg
mov
mov
inc
sbb
dec
fwait
imul
pop
mov
or
popa
push
jae
jmp
aad
enter
fisttpl
cmc
or
lock
xor
addl
mov
push
dec
leave
enter
pop
cmp
and
pop
lret
sti
outsl
mov
dec
sbb
jg
cmp
std
loop
ret
shrl
rorl
mov
and
cmp
in
pop
out
add
cmpsl
cmp
add
xchg
sub
enter
mov
cmp
syscall
jno
aaa
test
push
test
dec
minps
push
lret
rol
inc
sbb
xchg
jo
mov
repz
testl
ret
or
and
xor
and
mov
jl
mov
dec
loope
push
xchg
jne
mov
or
loope
ja
vmovaps
add
icebp
dec
mov
dec
fdivl
in
inc
cmp
subb
or
shr
cmp
ja
mov
dec
fwait
mov
pusha
movsb
mov
cmpsl
aaa
hlt
dec
out
scas
jnp
mov
xorb
xchg
sub
stc
mov
fildl
mov
test
add
nop
jge
loop
adc
sub
aam
lcall
mov
jae
xchg
mov
fists
inc
ficoml
xlat
and
rorl
jb
mov
and
fiadds
lock
imul
cmc
sti
lcall
cwtl
adc
or
cmp
lea
in
sti
shl
add
cli
sarb
out
loop
hlt
or
jmp
repnz
or
xorl
les
dec
testb
adc
mov
inc
outsl
movsl
mov
int3
push
inc
daa
pop
loope
pop
pop
mov
loop
outsb
jbe
xchg
sti
pop
repnz
sahf
cld
mov
mov
jns
mov
pop
cmp
cmp
or
mov
lods
inc
rorb
lret
cmp
out
mov
enter
sbb
enter
loopne
mov
xlat
and
push
cld
cltd
jbe
enter
dec
in
cmp
roll
adc
mov
outsl
jns
add
jb
jbe
cwtl
xchg
in
rorl
and
test
mov
arpl
sbb
into
insl
imul
cmc
pop
mov
mov
lea
adc
or
loope
loope
and
sbb
fs
cmp
pop
add
nop
add
rclb
test
mov
test
mov
or
bound
sahf
mov
out
mov
mov
es
ret
pop
int3
pop
jo
outsb
dec
montmul
cmpsb
orl
inc
mov
or
testb
pop
outsl
push
push
into
testl
aas
ds
shlb
andb
add
mov
dec
das
ret
out
icebp
shll
cmp
jmp
cltd
insl
rorl
xchg
and
int
addr16
bswap
inc
fxtract
sub
fcoml
fnsave
sti
cmpsl
loopne
or
jns
iret
in
or
push
icebp
mov
dec
add
les
sub
hlt
pusha
sbb
inc
mov
jb
clc
jnp
cmpsl
ds
int3
cwtl
daa
mov
sbb
call
popa
lret
xchg
inc
imul
xchg
ficoml
pop
pop
fnstsw
cmp
lods
xchg
pop
sbb
into
test
cs
scas
test
jmp
jle
add
cmp
pop
pushf
fstps
stos
jnp
fnstcw
cld
in
lahf
femms
xchg
add
lret
xchg
mov
daa
push
lods
es
adc
inc
frstor
add
xor
xchg
dec
fldl
shl
mov
mov
test
mov
mov
mov
pop
mov
cwtl
dec
fmull
sub
out
jle
rcrb
out
enter
shrb
xchg
add
aaa
addr16
pushf
xchg
call
sti
imul
mov
jne
aaa
test
pushf
mov
inc
xor
sar
pop
dec
jno
xor
xchg
sti
push
aaa
or
out
mov
mov
jmp
xchg
in
les
adc
aaa
clc
xor
lods
xor
xlat
cmp
inc
and
jp
jns
pop
stos
andl
cmp
mov
icebp
dec
dec
hlt
inc
stos
test
shll
add
andb
lods
fisubs
pop
rcrl
fs
add
bound
push
cli
mov
xor
push
push
sub
adc
out
fs
dec
aaa
je
push
js
outsl
push
in
or
aaa
call
jnp
call
jno
mov
stc
and
or
sbb
clc
dec
xchg
adc
xor
xor
arpl
aam
nop
xchg
cmp
cltd
jl
inc
lds
imul
inc
jae
inc
xor
dec
loop
push
clc
or
push
int3
push
xchg
sub
jge
test
mov
dec
push
dec
loopne
insb
aaa
mov
add
mov
aaa
push
int3
das
addb
and
pop
daa
aam
pop
jno
jns
aas
imul
outsb
sbb
cwtl
jbe
xchg
sub
js
les
push
hlt
jp
jmp
movsl
mov
mov
mov
pop
adc
je
clc
call
mov
sub
xchg
in
xchg
out
pop
xchg
ret
jbe
lock
gs
jae
jae
add
test
mov
xor
movsb
cld
sbb
sbb
sub
push
sub
int
pop
hlt
sbb
std
sub
or
mov
repnz
outsb
mov
mov
cmc
test
dec
push
xor
sbb
push
jmp
and
mov
fsubs
adc
clc
dec
push
out
stos
je
cmp
popa
xchg
cli
nop
ror
mov
scas
add
lock
sub
cltd
sub
iret
mov
xchg
int
sbb
xor
or
add
fsubrl
pcmpgtd
ret
pop
xchg
mov
pop
dec
stos
sahf
inc
xlat
insb
arpl
in
lea
int
sbb
cltd
and
call
mov
push
jo
xor
les
pop
cmc
add
xchg
lahf
and
sbbl
clc
fsubrp
mov
cwtl
lods
mov
cltd
loope
and
call
movsb
sti
jb
sub
movsl
mov
sbb
test
idivb
cwtl
cs
mov
movsl
outsl
pop
arpl
dec
ficomps
lock
lea
jo
and
shrb
xchg
arpl
mov
clc
mov
icebp
pushf
mov
es
jecxz
inc
or
std
inc
dec
aaa
lret
pop
sub
int3
inc
pop
adc
cwtl
in
lret
rol
test
pop
adc
pop
imul
mov
flds
sbb
out
shrl
test
xchg
push
sub
test
cmpsl
outsb
lea
lds
repz
push
insl
mov
enter
scas
scas
jns
orl
jp
push
daa
jo
pop
hlt
jl
scas
orb
adc
ja
cmp
fists
daa
pop
pop
out
cld
fmul
pop
lods
jbe
xor
mov
dec
loop
inc
sti
or
mov
or
xor
and
ljmp
pop
aam
push
or
xorb
add
aaa
sub
xor
icebp
xchg
sub
jl
test
pop
iret
fdivs
shll
sbb
and
clc
subl
rclb
xor
pop
loopne
or
push
es
jnp
sbb
insl
shlb
stos
xchg
push
rcll
aaa
mov
iret
in
mov
lret
inc
pop
imul
xlat
jmp
inc
insl
mov
pop
pop
cmp
stos
into
pop
mov
aaa
hlt
cs
ds
adc
dec
fcomip
aas
lock
gs
adc
rolb
fildl
fs
arpl
inc
sbb
ss
push
sub
or
cli
lret
jb
mov
ficoml
fxch
adc
pop
xor
jge
test
cmpsl
je
and
xchg
sub
add
insl
aaa
aam
xor
pop
hlt
adc
xchg
inc
cli
adc
enter
rol
repnz
dec
or
loop
int
dec
and
jecxz
add
cmp
insl
fdivl
shlb
pop
dec
dec
loopne
mull
sub
das
sub
imul
out
stos
fucomi
adc
pop
sbb
xchg
cmp
mov
call
inc
dec
daa
jmp
push
in
fcmovu
jge
shlb
sahf
pop
notb
cmp
negb
xor
imul
cmpsb
daa
mov
inc
stc
inc
pop
dec
sub
out
push
sahf
shl
xor
pop
leave
mov
mov
stos
inc
int
mov
std
scas
pop
mov
inc
sahf
dec
fsubl
inc
data16
inc
jecxz
mov
or
lea
jle
pop
push
in
xchg
cmc
xchg
push
cmpsl
call
jp
adc
inc
inc
cs
test
xor
or
repz
push
mov
sbb
mov
sti
mov
inc
adc
inc
bound
adc
mov
mov
outsb
xchg
jnp
xchg
jbe
mov
insl
and
xor
jno
scas
pop
adc
clc
fwait
mov
xchg
xchg
xchg
mov
cmpsb
push
lock
mov
mov
loopne
neg
sbb
sub
mov
mov
ret
insb
fmull
adc
stc
out
sub
mov
cmp
ja
shlb
inc
faddl
and
out
push
icebp
enter
lods
sbb
lods
add
pop
mov
pop
dec
bound
fbstp
mov
xchg
mov
sub
push
sub
adc
add
in
mov
xchg
ds
test
or
clc
test
push
repnz
data16
in
add
test
fildll
lods
mov
outsb
pop
and
popl
xor
sub
imul
aaa
adc
rcrb
notl
pop
inc
lds
or
cmp
js
sbb
fbld
mov
or
pop
outsl
rcrl
and
mov
cmp
insb
imul
repnz
repz
fwait
fs
push
mov
and
ja
ret
test
cwtl
adc
mov
cmpsl
call
iret
mov
add
pop
or
int
xchg
mov
jg
out
test
ljmp
fistl
xchg
pop
mov
mov
sbb
dec
scas
sti
mov
mov
jno
test
adc
clc
fisttps
mov
icebp
xchg
jle
xchg
jmp
push
enter
in
fldt
pop
mov
dec
es
std
shlb
xor
lods
push
sti
out
cld
push
inc
imul
inc
cmp
out
jp
aaa
lods
dec
sti
xchg
fcomps
movsl
push
insb
xchg
sbb
les
insl
mov
ja
xchg
and
push
add
fdivs
inc
pusha
shlb
xor
dec
popf
mov
popa
mov
insb
inc
imul
adc
clc
push
jp
xchg
mov
add
loopne
movsl
jl
mov
mov
mov
push
jbe
mov
pop
push
ret
add
jmp
jne
enter
test
push
mov
xchg
in
inc
cmovne
stos
ret
mov
dec
insl
sbb
mov
ret
stc
call
push
scas
inc
ds
ss
xor
lret
jbe
cli
xchg
cmpsl
sub
gs
inc
and
sbbl
icebp
cwtl
fisubrs
sub
testl
ret
arpl
aam
lods
jp
fiadds
dec
fbstp
out
jg
ret
insl
xchg
xchg
lods
pop
test
fidivl
mov
cmpsl
sub
lods
inc
xchg
mov
mov
inc
cmp
dec
add
ss
sbb
aas
sbbb
push
es
xchg
imul
in
cltd
test
ds
test
fmulp
push
mov
ja
jne
push
mull
jmp
icebp
packssdw
iret
and
sbb
mov
or
push
sbb
push
dec
aas
cmpsb
in
std
cwtl
pop
loop
out
mov
sbb
pusha
cmpb
jge
add
shrl
sbb
xchg
iret
xor
mov
sub
ljmp
adc
push
dec
int3
out
out
inc
sbb
dec
add
ficoml
testl
rorb
mov
shlb
lea
dec
adc
aaa
cmp
mov
fisttps
pop
ss
in
cwtl
and
and
xor
add
xor
inc
pop
add
addr16
loope
add
dec
cltd
repz
ss
dec
aaa
lea
in
out
in
mov
push
out
push
shrl
cmp
fnstcw
call
stos
mov
cmp
flds
push
enter
jne
mov
fcmovb
aas
pop
push
sar
jno
sub
jne
daa
cmpsb
or
adc
pop
imul
and
or
xor
push
xchg
jbe
mov
sbb
lret
mov
test
inc
rorb
push
mov
fildl
jns
cmp
jmp
adc
or
push
xor
hlt
sbb
testl
sbbl
pop
fdivp
xor
cmp
pop
adc
hlt
mov
pop
push
mov
imul
xchg
jne
add
daa
int
mov
nop
div
xor
adc
mov
sub
movl
xchg
ret
repz
lock
rcrl
mov
ror
and
outsl
inc
sub
lcall
mov
sbb
sub
adcl
dec
in
dec
daa
dec
in
push
jp
scas
lahf
hlt
pop
jbe
sub
xor
xchg
call
mov
adc
shll
pusha
sbb
outsb
ret
pusha
push
jmp
sub
jmp
ds
test
jg
adc
test
adc
addr16
cli
or
arpl
fidivs
push
out
ficoml
cmpsl
lret
xchg
fbstp
mov
pop
sbb
mov
mov
mov
push
pop
dec
out
jmp
mov
sbbb
mov
sbb
mov
rclb
inc
xchg
xor
pop
jae
xlat
outsb
arpl
dec
in
in
icebp
xlat
jo
mov
lahf
jno
push
out
sbb
mov
inc
in
xor
dec
in
lret
cmp
mov
sub
enter
jg
adc
pop
push
mov
daa
xor
cli
and
les
push
push
xchg
cmp
sbb
mov
sbb
xor
xchg
rorl
es
imull
add
movsb
xchg
rcr
iret
pop
dec
sub
or
repnz
sbb
pop
jb
ficomps
fs
scas
cmp
sub
aas
dec
sti
lahf
popa
cmp
adc
das
leave
jle
ds
mov
xchg
jo
sti
dec
fldl
or
mov
cmpsb
or
mov
lods
neg
push
shll
sub
or
enter
and
push
adc
gs
mov
or
sbb
out
dec
pop
in
jae
icebp
or
dec
push
decb
mov
mov
icebp
push
jo
mov
imul
jge
mov
popf
or
scas
xchg
push
or
jnp
mov
sub
or
ror
je
xor
pop
lds
xchg
add
cmp
mov
in
hlt
lds
push
dec
or
negb
insb
pop
mov
aas
sub
lcall
rorl
pop
adc
nop
adc
mov
jae
xsha256
cmpsb
push
xchg
arpl
int
out
data16
push
imul
push
icebp
mov
xlat
cli
rcrb
mov
jmp
les
dec
div
nop
dec
lods
aad
test
cwtl
adc
mov
mov
dec
rclb
push
ds
sti
push
insb
scas
jmp
and
shll
and
call
cltd
jl
scas
mov
outsb
push
inc
xor
pop
jp
cmp
push
test
cwtl
das
popf
into
jp
inc
push
mov
add
or
insb
jno
imul
cs
sub
sub
inc
addr16
jb
and
popa
mov
test
fsubr
ret
cmc
sub
fmul
adc
mov
hlt
xor
jmp
je
outsb
ret
pop
pusha
cmp
lock
ret
sub
hlt
xor
repz
mov
fcmove
fsubr
icebp
movsl
inc
jp
or
xchg
jecxz
adc
out
cmp
shll
cmc
jmp
xchg
xor
jne
inc
sub
xchg
enter
imul
sbb
sbb
lods
add
mov
sub
cmp
xor
cmc
sub
push
sub
jecxz
inc
clc
aaa
dec
pop
imul
in
mov
dec
data16
xor
mov
sbb
arpl
inc
cmp
push
cmc
roll
insb
movsl
push
int
adc
in
scas
pop
xchg
out
jge
cs
hlt
add
cs
and
shlb
fadds
insl
aam
add
fisttpl
push
movsb
mov
and
test
aaa
sub
jecxz
lret
in
out
icebp
cld
fsubr
sub
leave
jne
je
xor
rorb
icebp
loope
inc
pop
in
ret
aad
imul
xor
jmp
jbe
shlb
mov
leave
mov
out
inc
repnz
std
push
mov
xchg
in
shrb
dec
outsl
leave
lahf
sbb
mov
pop
push
mov
and
loope
imul
mull
and
rclb
mov
jne
pop
cld
icebp
mov
push
lods
push
or
enter
ud1
mov
pusha
sahf
notb
mov
pushf
andb
out
mov
mov
int
pop
xor
inc
mov
mov
inc
pop
fs
fdivrl
push
add
ljmp
jb
jne
popf
sub
xor
jno
popf
xor
sbb
xor
push
js
cwtl
jo
adc
fnstcw
pop
outsb
outsb
cmp
add
scas
shll
jp
ret
aaa
sarb
rcll
pop
xchg
ret
loope
mov
scas
int
ljmp
xor
pop
pop
pop
cs
sub
and
mov
rclb
fsubs
mov
ljmp
sub
inc
jbe
pop
pop
jmp
in
test
cmp
loopne
incl
imul
xor
enter
cmc
mov
sbb
sub
fisubl
push
cmp
daa
jae
leave
sbb
or
sahf
xchg
pop
in
pushl
and
clc
enter
out
idivb
push
jbe
jae
imul
test
jg
mov
or
cmp
or
imul
sti
int
repnz
out
jbe
pop
xor
cmp
mov
mov
leave
pusha
cmc
mov
lds
jbe
sbb
mov
fsubs
outsb
stos
sar
push
test
jg
mov
mov
lea
fidivrl
das
adc
xor
aaa
mov
sub
mov
mulb
push
jae
nop
push
add
jnp,pn
xchg
push
mov
add
repnz
fcoml
xchg
add
aas
cmp
push
notb
push
sbb
mov
fldl
pop
shr
and
pusha
stc
mull
xor
enter
outsb
outsb
jle
fildl
mov
sub
and
rcr
dec
adc
ret
xor
dec
aas
call
add
loopne
insl
push
jg
inc
adc
daa
add
fdivrs
inc
in
inc
jbe
sbb
js
xchg
fidivrl
in
lods
lret
sbb
scas
sub
rcrb
add
test
xor
pmaxsw
idivl
repz
mov
push
pop
scas
sub
stc
inc
add
jl
jno
pop
hlt
and
insl
dec
scas
jmp
add
hlt
push
dec
xchg
lods
ljmp
cs
jne
testl
push
inc
push
int3
cmp
pop
clc
je
insl
fcoms
addr16
mov
ficoms
jae
scas
lcall
sarb
cmp
pop
out
ds
fmuls
adc
xchg
xchg
mov
adc
xor
jo
loope
mov
mov
and
pusha
rcrb
repnz
lods
mov
ret
repz
mov
push
sub
icebp
cmp
scas
ret
ficomps
pop
jecxz
or
data16
cmp
test
adc
into
data16
jns
and
dec
jbe
cmpsb
xor
mov
ret
in
stos
shlb
into
faddp
push
mov
push
dec
sub
inc
sub
fs
mov
xchg
jp
stos
cltd
mov
pop
push
cwtl
bound
je
push
mov
arpl
dec
dec
lret
or
adc
enter
enter
dec
bound
pop
push
popf
pusha
std
mov
inc
arpl
stos
lea
stc
add
sub
aas
test
and
dec
scas
dec
jecxz
les
sahf
push
aaa
mov
xchg
xor
es
sub
dec
pop
cmp
mov
sub
mov
mov
stos
popa
lret
pop
add
stc
xchg
pop
jmp
inc
imul
add
and
mov
inc
in
outsb
loop
mov
dec
add
cli
iret
jmp
ret
insl
inc
int
push
ss
xchg
sbbl
repz
mov
sbb
adc
push
int
aad
mov
sub
lret
dec
dec
jmp
xchg
sbb
scas
nop
cmp
add
push
mov
popf
jns
stos
mov
pop
cmp
push
data16
inc
into
lcall
push
gs
leave
int3
repz
jle
jle
or
test
in
jns
push
and
es
aad
dec
jge
les
cmc
dec
mov
adcl
or
or
sub
mov
pop
add
push
sbb
daa
lods
sub
ljmp
into
decb
ret
jecxz
push
sbb
or
addr16
push
adc
jp
nop
or
dec
sub
push
jg
imul
call
mov
mov
xchg
ficoms
aad
xchg
or
cmp
addb
repz
add
sub
imul
arpl
push
aam
lahf
push
ljmp
sub
lret
repz
fistpl
push
fwait
push
js
shlb
lea
aam
mov
push
dec
pop
and
mov
nop
das
stc
push
fimuls
xor
mov
js
loope
adc
dec
hlt
lods
push
sub
jb
push
sub
int
sbb
or
lea
ds
cmpsb
out
and
xchg
jp
clc
outsl
mov
xor
bound
jge
sarl
mov
cmp
or
sub
push
stos
inc
inc
xor
scas
inc
pushf
loopne
rcrl
lods
idivb
push
test
in
mov
add
mov
fs
insl
add
clc
mov
stos
mov
jmp
subl
cwtl
or
int3
jecxz
jno
roll
xorl
sbb
pusha
mov
loope
jns
add
xor
inc
or
sub
push
xchg
mov
mov
inc
jecxz
out
dec
test
lret
fldl
sbb
andl
and
xor
push
xor
stos
arpl
mov
mov
jbe
mov
aaa
shl
pushf
jns
sub
sub
dec
jo
inc
cli
cli
dec
mov
sbb
or
dec
sub
jnp
mov
inc
add
sahf
push
in
mov
push
jae
mov
testl
xor
addr16
adc
mov
icebp
sbb
push
mov
fists
xchg
or
imul
cmpb
pop
xchg
push
shll
nop
jle
shrl
std
fwait
xchg
mov
outsl
cli
cltd
xor
cmc
loopne
insb
inc
mov
and
add
pusha
mov
push
out
out
cmc
imul
int
in
test
cld
mov
push
or
xchg
sar
or
mov
sbb
and
icebp
mov
pop
inc
adc
cmp
mov
xchg
mov
xchg
ja
dec
jl
cmp
fbstp
into
adc
add
data16
jno
jnp
leave
shll
iret
mov
fisttpl
pushf
mov
insl
aas
call
add
sbb
and
sub
xor
dec
incb
cmp
mov
ja
sbb
sahf
xor
jge
mov
xor
bswap
lds
lods
mov
add
dec
in
cmp
bound
std
sbb
enter
ss
add
stos
cwtl
jne
out
cmp
jno
cltd
cmc
adc
aam
hlt
stos
xor
mov
push
pop
mov
push
pop
push
push
inc
fnstsw
cmp
insb
pop
out
push
mov
push
inc
rcrl
movsl
sahf
out
push
pusha
pop
shrb
andb
in
ret
push
rcrl
adc
es
xchg
xchg
fwait
mov
dec
repz
cmp
ret
push
lcall
adc
adc
aaa
xchg
lods
dec
dec
pop
movsl
mov
out
jecxz
sbb
or
ss
mov
adc
aam
adc
pop
testb
mov
cmp
insb
js
push
pop
push
xor
scas
pop
ljmp
jnp
enter
mov
xchg
xlat
dec
push
test
sbb
std
jnp
jle
push
es
jb
bound
ret
sbb
das
test
mov
loopne
loope
bound
es
jl
push
mov
lock
push
cltd
cmc
adc
push
cmp
or
sarl
and
mov
adc
inc
mov
adc
mul
mov
ret
stos
jae
lretw
ja
cmp
pop
aad
stos
mov
add
jne
ljmp
stos
inc
adc
sub
vmread
aam
mov
and
pop
or
ds
daa
mov
lret
sbb
gs
fwait
ljmp
or
pop
jb
jns
stos
out
inc
scas
adc
jno
inc
cltd
and
lret
iret
mov
mov
mov
push
dec
popf
mov
hlt
dec
fadd
dec
or
cld
es
enter
sbb
dec
repnz
sbb
adc
movsb
inc
mov
xchg
mov
push
push
pop
iret
cltd
sub
jo
mov
shrl
cltd
mov
movsb
inc
xor
loopne
inc
mov
sbb
aas
and
jecxz
push
sub
add
lock
loope
gs
push
je
push
xchg
mov
pop
clc
mov
cmp
inc
pushf
push
and
out
cmp
in
push
fidivrs
subl
mov
mov
mov
rcl
in
mov
mov
mov
lea
flds
in
and
das
rcr
sub
iret
std
sub
rol
dec
and
dec
mov
mov
jg
lea
sbb
inc
mov
push
xlat
xchg
addr16
inc
push
cmp
loope
cmpsl
ret
scas
add
cmp
int
popf
or
cmp
imul
out
push
aaa
icebp
dec
out
aas
daa
mov
insb
jmp
jl
mov
ror
out
sahf
dec
xlat
push
jo
lods
movsb
cmp
or
mov
ret
les
aam
cmp
aam
repnz
in
and
aaa
push
das
push
shlb
mov
lds
je
lret
mov
xlat
mov
cmc
fdiv
fisttpl
pop
push
repnz
xor
adc
fnstcw
imul
mov
add
mov
int3
arpl
mov
test
jp
insl
add
loope
fmuls
push
fsubrs
ret
cmpsb
mov
jne
push
popf
dec
out
arpl
loope
adc
out
stos
cmp
imul
cmpl
scas
sar
fimuls
mov
idiv
arpl
dec
in
test
push
mov
and
pop
imul
test
add
lret
mov
mov
imul
xchg
lock
rcrl
negb
fstpl
ds
cmc
push
and
xchg
xor
mov
int
or
cwtl
xchg
or
or
mov
insl
inc
or
fsubs
cmp
mov
pop
jg
or
dec
mov
fmul
outsb
in
push
inc
daa
push
inc
push
out
repnz
popf
insb
xchg
xor
push
in
addl
addr16
push
adc
dec
pop
clc
jnp
jle
nop
jo
repnz
out
inc
sbb
jnp
subl
sbb
faddp
adc
gs
mov
cmp
and
sbb
cmp
sbb
xlat
mov
ret
push
fisubl
inc
push
xor
inc
popa
push
xor
inc
lahf
leave
push
xchg
int3
or
xchg
inc
sub
push
das
cwtl
mov
pop
out
aas
rolb
inc
add
mov
pop
repz
push
jp
test
decb
mov
arpl
ret
add
invd
scas
leave
insb
pop
cmp
add
xchg
cmp
xor
fsubl
shrb
jbe
call
jp
and
test
das
sub
pushf
xchg
je
ret
insb
insl
in
pop
in
mov
movl
dec
xlat
add
cmpsb
aaa
inc
mov
repz
mov
aad
arpl
mov
popa
int
das
mov
ljmp
popf
pop
dec
mov
inc
in
dec
fnsave
xchg
mov
add
mov
dec
in
mov
adc
test
push
ficompl
or
int
push
mov
jg
push
jo
sti
popa
lret
shlb
test
jb
push
jb
leave
mov
dec
ss
pop
repnz
int
testb
sub
sub
mov
fucomp
lret
test
jb
test
and
jae
shrl
add
sbb
ficompl
cwtl
mov
push
mull
ljmp
jp
hlt
dec
push
cld
xchg
cmp
aam
rcll
mov
call
ret
cmp
jb
icebp
adc
pop
daa
rolb
mov
xor
xor
pop
cli
shlb
mov
jno
loope
push
sbb
dec
daa
insl
and
dec
roll
cs
lret
pop
orl
clc
sub
call
pop
sub
jg
cmp
int
push
push
fsubr
icebp
add
std
mov
out
xchg
jmp
ret
and
aam
dec
bnd
icebp
pop
inc
mov
xchg
add
sbb
shlb
mov
push
lea
pop
roll
in
std
repnz
and
push
jge
shll
fwait
insb
sti
cld
mov
sti
xchg
dec
adcb
das
add
push
sbb
push
mov
jnp
iret
std
xor
ja
ja
inc
repnz
cwtl
jg
lds
std
sar
into
inc
mov
test
shrl
push
sahf
ret
icebp
mov
sti
jno
and
dec
sti
addr16
loopne
shlb
or
mov
and
cmp
lea
mov
pop
lcall
out
aam
loop
xchg
fcompl
ja
sub
lcall
and
popa
xchg
fsubl
sbb
sub
sub
cld
imul
push
dec
inc
add
add
aam
jmp
xlat
gs
cmpsb
sbb
sbb
mov
dec
pop
dec
jge
lods
jmp
fs
decl
ds
movsb
xchg
ss
jp
or
push
lahf
adc
shrb
add
ljmp
dec
dec
ss
mov
dec
arpl
aaa
popa
adc
xchg
push
xchg
inc
sbb
mov
jae
fstpt
sub
test
int
inc
leave
dec
lea
lret
adc
fistps
jg
cmp
into
jle
push
popf
fidivrs
andb
and
cmpsl
inc
or
shll
push
xchg
addl
jecxz
lods
pusha
in
adc
int
add
mov
xchg
aas
push
testb
jne
and
or
clc
scas
insl
cmp
cmp
cmp
sbb
xor
pop
out
popf
lods
pop
jl
outsl
sub
out
js
inc
pop
jecxz
mov
mov
dec
push
dec
add
outsb
inc
je
enter
movsb
sub
ss
inc
dec
cmp
mov
data16
repnz
pop
shlb
pop
mov
and
fnsave
and
mov
cli
push
mov
pop
int3
lret
lea
add
xor
pop
and
pop
lods
push
inc
hlt
andl
push
sbb
jl
and
aas
in
sbb
xchg
sbb
add
bound
fisubl
cli
call
mov
dec
mov
sub
and
add
push
mov
mov
or
add
mov
mov
dec
xchg
pop
jmp
and
repz
add
mov
mov
or
cwtl
or
jb
mov
mov
xor
cmpsb
scas
pusha
mov
cld
mov
xchg
std
cltd
mov
cmpsb
jne
pusha
dec
out
call
or
cwtl
outsl
insl
push
in
and
or
and
imul
stos
cmp
inc
pop
add
sub
int
faddp
pop
and
mulb
sbb
aad
push
cmp
and
stc
push
inc
cmp
and
pop
aad
sbb
outsb
mov
popa
clc
rol
sub
je
jge
xchg
cmpsl
ljmp
stos
imul
js
xor
lcall
sbbl
mov
xlat
insl
jecxz
mov
or
loopne
xchg
aad
arpl
cwtl
fimuls
jl
orl
cld
fs
push
pop
xchg
pop
cmp
aaa
fwait
adc
pop
mov
hlt
aaa
xor
add
push
pop
inc
mov
mov
inc
mov
dec
xchg
or
fistpll
pop
pop
pop
push
add
imul
call
repnz
xor
fnstcw
or
hlt
shrb
adc
pop
cmp
jmp
add
mov
dec
loopne
stos
inc
pop
lahf
sbb
dec
lods
xchg
sub
push
push
inc
sub
negl
jle
mov
adc
mov
sbb
mov
sahf
shlb
jne
sub
aas
mov
and
repnz
mov
xlat
jne
mov
cmpsl
dec
push
gs
cltd
sub
mov
push
dec
pop
mov
gs
sub
outsb
je
sbb
subl
dec
sub
das
insb
push
test
mov
and
pop
cmp
inc
in
dec
mov
je
push
jns
out
mov
sub
clc
lock
arpl
loop
inc
shll
stc
aad
hlt
mov
rolb
movsb
ja
daa
jbe
sbb
xchg
ss
shrb
hlt
pop
repnz
sub
out
pop
imul
leave
mov
bound
ljmp
xor
sbbb
add
outsb
mov
sbb
test
sbb
jb
adc
sub
cmp
mov
push
cmpsl
es
arpl
out
outsl
dec
cmc
push
repnz
sbb
mov
add
xchg
adc
sbb
lret
sbb
inc
loopne
pminsw
nop
xchg
or
xlat
movsb
xlat
test
pop
or
adc
sub
xchg
repz
fwait
mov
dec
sub
imul
mov
mov
dec
cmp
jnp
insb
pop
loop
sub
adc
xor
bound
inc
push
pop
ficoml
test
push
nop
mov
adc
int3
sub
rorl
in
push
pop
adc
sub
mov
add
cmp
loopne
pop
std
cltd
jecxz
xlat
mov
idivl
push
add
out
xchg
lcall
mov
aad
lret
jo
cli
fcmove
sub
testl
pop
loope
out
mov
shrl
push
scas
hlt
xor
imul
xor
push
decl
push
fnsave
daa
lock
inc
es
adc
cmpsb
push
and
lock
les
mov
pop
out
jle
dec
add
outsl
adc
fists
inc
int
push
out
push
out
fisubrl
mov
cmp
xchg
imul
lret
xchg
popf
cmpsl
ret
lods
xchg
stos
std
mov
xchg
mov
in
cmp
add
lcall
pop
push
ret
fbstp
cs
pop
jp
xor
cmp
push
rorl
pushf
xor
dec
mov
in
sbbl
xchg
shl
lret
dec
paddw
das
cmp
popa
nop
jp
mov
sbb
ficomps
pop
stos
xchg
mov
cli
and
nop
xchg
insl
sub
pop
insl
pop
pop
jno
outsl
insl
mov
or
ja
ret
sub
insb
pop
icebp
popf
dec
stos
push
jb
add
imul
cmp
repz
pushf
push
popa
mov
push
sbb
or
mov
aaa
into
aad
sub
mov
in
fisttps
popw
inc
in
xor
push
fldenv
out
xor
jl
inc
outsl
add
push
repnz
mov
sub
enter
mov
fldcw
pop
rcrb
lcall
movsb
pushl
movsl
or
sbb
popf
mov
or
inc
in
repz
orl
inc
and
outsl
mov
dec
add
sbb
jno
fcmovnb
xchg
sbb
jno
sahf
stos
mov
jmp
fmull
dec
jle
jb
mov
scas
rcl
lods
push
xor
xchg
fdivl
enter
add
xchg
xor
push
inc
cmpsb
push
and
mov
gs
and
jmp
xlat
and
sahf
pop
sub
insl
cmp
je
int3
leave
jge
jnp
arpl
lds
mov
mov
into
xor
imul
lock
icebp
dec
aad
cld
fwait
cltd
in
fs
xor
sbb
mov
jle
dec
and
int3
lret
xor
stc
mov
rorb
enter
outsb
test
mov
gs
dec
fldt
fwait
sub
repz
mov
and
dec
cltd
lret
out
jl
adc
lret
mov
loopne
push
call
push
insb
pop
and
icebp
stc
imul
popf
sbb
dec
test
fwait
mov
xor
lock
dec
inc
shl
mov
dec
lret
pushf
cmc
mov
mov
stos
push
arpl
andl
or
pmaxub
repnz
mov
sbb
mov
nop
out
mov
mov
cmpsb
es
inc
es
mov
in
xchg
pusha
push
insb
jl
sbbl
scas
pop
inc
aaa
aad
push
add
pop
int3
cwtl
xchg
pop
scas
dec
mov
adc
add
out
jb
adc
mov
data16
mov
rcrl
cld
std
subb
or
add
in
xchg
xchg
scas
ret
loope
aad
clc
pop
jmp
aas
pop
insb
mov
inc
mov
test
aaa
sbb
cmpsl
shrl
mov
out
cmpsl
int3
sub
jmp
add
lea
xchg
repnz
xchg
mov
lea
adc
add
pop
xlat
pop
push
mov
fists
lret
movsb
dec
movsl
test
mov
jp
inc
shll
pushf
xor
cmpb
repnz
jecxz
or
sub
inc
jae
add
jne
jp
add
fdivrl
out
cmpsb
jmp
cld
js
icebp
adc
adc
sub
jecxz
lea
clc
xchg
mov
inc
sbb
rorb
inc
fiadds
adc
sbb
aas
test
repnz
adc
mov
sbb
cmp
rcrb
push
sbb
add
aam
lods
sub
cmpsb
adc
inc
dec
test
rorb
cmp
icebp
fmuls
or
incb
je
adc
xor
scas
sbb
stos
xor
stos
rcr
xor
dec
pop
mov
andl
mov
jae
xchg
lods
lea
addr16
or
fbstp
sub
pop
push
xchg
xchg
xor
xlat
lods
and
dec
into
adc
arpl
xchg
sub
mov
test
fisubs
cltd
outsl
mov
outsl
sbb
mov
movb
nop
cmp
pop
mov
mov
movsl
sbbl
enter
mov
leave
mov
test
mov
adc
sbb
push
cwtl
shrb
out
cmpsl
inc
mov
cmp
or
sbbl
mov
es
xchg
pop
mov
mov
push
sbb
fdivl
stc
jmp
and
xlat
push
iret
sahf
mov
mov
addr16
jl
cmp
jo
xor
je
in
xchg
addr16
add
cmp
pop
and
jne
incb
push
js
adc
mov
mov
inc
test
lock
add
mov
es
push
adc
hlt
aas
and
negl
enter
cld
xchg
adc
jecxz
stc
pop
or
loop
inc
fstpl
add
cli
add
xchg
or
dec
lock
pop
cmc
out
lret
xor
or
pop
and
mov
mov
mov
add
add
imul
pop
sahf
cli
mov
test
and
pop
sub
pop
shrl
std
xchg
mov
stos
hlt
test
out
xchg
data16
xchg
cmp
pop
push
xchg
push
js
in
inc
gs
in
test
sub
sub
sbb
stos
inc
icebp
cmovg
dec
scas
pop
or
jl
aas
adc
mov
cltd
add
cmp
xlat
mov
sub
stos
add
jle
xor
push
ljmp
jb
jg
mov
mov
mov
xchg
pop
and
push
out
jns
add
mov
dec
inc
mov
fcomip
adc
ss
je
lods
mov
cmpsb
jns
imul
imul
mov
jmp
mov
cmpsl
mov
aad
hlt
mov
dec
pop
fsubr
xor
pushf
clc
jle
jbe
jae
and
scas
push
add
outsl
sarl
imul
sti
jecxz
in
xchg
repz
xlat
jbe
imul
xchg
aam
stos
mov
cmc
movsl
xor
xor
or
lds
push
jno
mov
add
inc
push
or
mov
sarb
mov
fsubs
int
jno
dec
outsl
hlt
jle
clc
and
fwait
dec
adc
ja
and
inc
sahf
mov
xor
dec
and
pop
rep
sub
testl
or
and
ret
lret
xlat
jmp
or
adc
xchg
mov
or
lds
aad
cs
xorb
pop
mov
or
sub
cmp
cli
sub
jecxz
or
pop
outsb
imul
test
mov
dec
and
and
xchg
lahf
mov
ret
and
sbb
sbb
fcomps
inc
and
jmp
jle
push
fmuls
daa
cmp
je
push
popa
cli
xchg
push
enter
xchg
shlb
push
mov
pop
or
jb
shrl
xchg
pop
test
repnz
jl
sbb
cmp
cmp
pop
lea
jno
arpl
adc
mov
gs
int3
adc
sub
and
inc
xor
cli
jnp
mov
and
aas
xor
cli
test
mov
adc
or
pusha
mov
and
dec
ss
ljmp
repnz
push
data16
lret
shll
inc
int3
jae
push
cmp
repz
rcl
cmc
or
call
adc
aas
subb
jns
ret
xor
mov
cmpsl
adc
sbb
addr16
push
cltd
xor
push
insl
adc
pop
shrb
pop
mov
inc
cs
jmp
repz
jns
inc
add
push
jg
xchg
mov
rclb
cmp
lret
dec
xor
pop
inc
lret
xlat
movsl
mov
pop
loop
jno
jecxz
jle
mov
sahf
into
or
pop
js
sub
mov
ss
jge
cli
xchg
push
fisttps
mov
imul
das
ds
les
imul
loopne
or
adc
xchg
pop
jmp
daa
aad
sbb
push
leave
lds
test
sbb
fimuls
out
subb
push
mov
fcmovu
xchg
out
repz
lret
push
movsl
fwait
rcl
inc
fcoms
in
push
into
mov
rcrb
int3
test
scas
inc
cli
leave
push
push
cmp
jne
cs
push
jge
leave
sbb
dec
dec
push
repz
enter
stc
jge
sub
scas
call
fwait
jbe
xor
cmp
sbb
in
xor
add
pop
imul
fstl
jns
andb
push
mov
jge
mov
setne
cld
cmpsl
and
je
sbb
sbb
adc
push
jae
jb
sahf
xor
lret
xchg
and
popa
dec
push
sbb
cs
test
loopne
aas
imul
in
mov
loopne
add
push
mov
xchg
or
jae
xchg
mov
aaa
cli
pop
sbbb
xor
gs
outsb
fs
or
sbb
dec
cmp
sbb
ds
lret
lcall
xchg
cmc
pop
repz
push
test
or
cmp
mov
mov
imul
mov
adc
les
std
lahf
outsb
dec
dec
cmpsb
cli
sahf
mov
mov
xchg
mov
dec
push
loope
mov
sbb
xor
test
addr16
dec
push
adcl
xchg
out
imul
add
adc
and
adc
cmp
out
jae
sub
adc
iret
pop
cs
lea
or
jge
jmp
test
mov
xor
inc
xchg
mov
mov
inc
jno
out
ret
mov
in
jl
cli
iret
mov
jmp
lret
sti
lret
pop
std
sbb
dec
sub
or
xchg
pop
icebp
mov
cmc
mov
jl
sub
jb
dec
adc
clc
fidivl
dec
and
orb
jno
lods
data16
pop
icebp
mov
jno
fwait
adcb
or
inc
int
xorb
xlat
stc
sbb
add
outsb
loope
sub
int3
or
pop
outsb
pop
inc
les
out
fucomip
jmp
out
es
cmp
cld
push
jo
lods
fisubrs
addb
push
or
push
cmp
enter
push
add
out
and
jecxz
stc
shlb
mov
ret
outsb
jnp
xchg
mov
cltd
cmp
xchg
push
fdivp
ss
jo
add
movsl
ja
icebp
insb
mov
jmp
jbe
jnp
cli
ja
sbb
stos
cli
fwait
mov
lahf
fistl
mov
mov
cmp
mov
xlat
fwait
icebp
lahf
mov
lods
jp
fisttps
mov
push
inc
push
jb
js
gs
sub
push
jmp
sub
out
lds
std
out
push
push
cmp
inc
call
nop
mov
adc
inc
cmpsl
enter
jbe
loop
lret
fistps
scas
pushf
push
sarl
mov
mov
call
pop
mov
and
call
inc
mov
test
std
xchg
aas
stc
push
mov
add
adc
mov
call
sub
mov
aas
test
cmp
sbb
sub
icebp
jge
mov
sbb
pop
dec
add
push
adc
pop
fdivl
aas
inc
leave
pop
out
inc
cmp
push
xchg
sub
popf
sub
int
ss
fxch
or
imul
scas
inc
add
xchg
inc
call
mov
push
in
add
xor
sub
bound
xchg
lcall
push
cs
popa
xor
test
and
daa
lret
imul
mov
outsb
xchg
mov
imul
cs
pop
xlat
insb
jp
cmpsl
pop
pop
cmp
jp
lds
lock
aaa
push
cwtl
xchg
test
cli
fnstenv
orb
xor
out
add
xchg
out
mov
test
lret
ja
nop
andb
outsl
fmull
ljmp
jns
dec
push
push
mov
btc
out
insb
je
icebp
adc
jb
cmp
mov
jno
mov
mov
pop
jne
add
xlat
mov
push
pushf
jp
mov
dec
push
shlb
test
popa
push
or
das
fwait
cli
xor
xchg
mov
jne
mov
imul
sbb
inc
dec
shrb
outsl
in
push
xor
mov
sbb
fs
jo
jae
xor
jmp
aaa
cmpl
dec
daa
into
cmp
adc
sti
pop
adc
mov
mov
divb
cmp
or
push
xchg
ja
imul
aam
push
mov
add
or
mov
adc
addr16
icebp
or
js,pn
fisubs
repnz
movlps
cli
xchg
dec
mov
push
daa
lret
adc
dec
mov
loopne
incl
mov
inc
in
fs
inc
out
pop
andl
loopne
sub
and
in
imul
outsl
addr16
fldenv
xchg
cli
sbb
cmpsl
mov
cs
and
inc
nop
and
mov
jle
sub
mov
outsb
dec
jle
and
movsb
cmc
xchg
out
imul
aaa
out
dec
movsb
or
pop
popf
inc
xchg
or
jbe
lahf
divb
mov
test
shl
movsb
test
stc
jns
xorl
call
leave
xor
jae
out
push
sbb
ror
cmp
hlt
bound
or
mov
push
push
enter
lea
cli
scas
mov
mov
pop
movsb
xor
adc
ss
outsb
mov
xchg
mov
cmpb
xchg
sub
xchg
shl
cwtl
push
in
fistpll
sahf
dec
fidivrl
dec
jg
jne
loop
inc
cmpsl
sub
xchg
sti
js
mov
out
popf
les
rcrb
cs
rcl
adc
mov
andb
adc
je
aam
adc
pop
mov
xchg
inc
fadd
insb
mov
cli
clc
ds
jne
sbb
outsb
push
add
jns
push
repz
shl
add
shl
push
insl
mul
inc
inc
inc
outsl
mov
ja
inc
fistpll
clc
adc
push
out
and
cmpsl
or
xchg
stos
xchg
imul
mov
outsb
push
mov
popf
popa
xor
pushf
mov
rorl
rolw
or
sbb
push
cmp
ud1
cmp
lahf
inc
xchg
jne
cmp
sbb
adc
stos
outsb
lds
mov
add
sbb
das
dec
pop
rcll
or
mov
xor
sub
jge
jl
cmpsb
sub
mov
das
mov
cwtl
xchg
push
aad
jmp
test
jbe
js
mov
push
icebp
pop
shr
sahf
add
adc
js
repnz
and
xorl
rolb
fucom
add
daa
arpl
dec
inc
cltd
or
push
jnp
lock
xor
in
mov
mov
int
sub
scas
cmp
loop
cmpsl
lcall
sbb
mov
adc
jecxz
lock
mov
dec
addr16
xchg
cmp
in
movsl
jns
mov
je
fs
divl
adc
or
out
in
jmp
shl
mov
pusha
in
jns
cld
dec
rol
push
bound
inc
shrl
insb
notl
mov
lret
test
xor
ja
xor
jbe
xchg
fwait
out
test
js
pop
fdivl
add
mov
and
cwtl
sbb
xor
mov
pop
add
outsl
mov
les
jne
mov
dec
sar
aaa
pop
stc
jno
arpl
and
mov
pop
dec
imul
add
lds
dec
push
jbe
sub
sub
imull
jp
adc
sbb
test
outsl
mov
jns
int
idivb
push
dec
jae
test
push
and
cltd
movsb
mov
cvtps2pi
and
jnp
xchg
aas
cltd
push
je
mov
add
xchg
loopne
out
insb
rcrb
cmp
or
fcoms
or
loopne
mov
in
xor
pop
cs
jne
push
and
popa
ficoml
out
jb
shrl
xchg
xor
dec
dec
leave
jns
and
pop
or
cmp
pop
jnp
cmc
sbb
add
or
addl
xor
out
cmp
lret
xor
mov
pop
insb
mov
andb
and
cmpb
movsb
mov
nop
out
pop
mov
sbb
inc
flds
cmp
push
xacquire
add
xchg
sbb
sub
adc
lahf
mov
fwait
imul
into
xchg
dec
fs
movsb
and
fsubrp
mov
add
fcoml
jae
movsl
pop
enter
fwait
outsb
pop
push
stos
sbb
leave
in
cmp
push
mov
pop
inc
pop
movsb
mov
iret
pop
xlat
cmpsl
nop
stos
add
stos
repnz
pusha
fwait
in
shl
and
jns
negb
insb
cmp
inc
add
hlt
fbld
fs
sbb
mov
popa
or
push
aad
mov
movsb
cmpsl
std
enter
dec
pushl
xchg
adc
dec
jnp
movsb
pop
aad
or
xchg
inc
mov
adc
lret
and
repz
in
mov
pop
mov
cmpsl
add
popf
sbb
aas
push
xor
sti
inc
scas
mov
pop
xlat
xchg
push
mov
test
enter
in
std
push
xchg
pop
ret
xchg
nop
scas
and
insb
add
test
lds
in
mov
fisubs
test
cs
movsb
test
mov
flds
lret
fbstp
and
cwtl
lahf
stos
add
movsb
jmp
pop
mov
scas
push
mov
jnp
xor
in
push
xor
dec
jb
mov
xchg
and
mov
xor
out
fdivrl
jmp
sbb
pop
cmp
mov
jbe
fisttps
std
rcll
movsb
pop
cmp
fidivs
pop
pusha
mov
inc
pop
orb
aas
pop
xor
dec
dec
inc
in
mov
jg
or
addb
xchg
or
out
pop
dec
pop
and
subl
enter
dec
loopne
cld
cwtl
add
adc
mov
jecxz
imul
add
adc
scas
xor
mov
lds
jbe
aas
ret
xchg
pop
jnp
sbb
fstl
push
test
sbb
xchg
shlb
test
jne
das
inc
push
adc
sbb
scas
mov
aad
push
pushf
mov
or
add
decb
cli
sbb
push
inc
dec
mov
scas
add
mov
mov
dec
pop
cmp
xchg
dec
out
adc
mov
je
xchg
dec
sbb
dec
scas
dec
cmc
sub
cmp
adc
pop
sub
add
outsl
jnp
and
push
cmpsl
jb
xor
cli
mov
sbb
insl
rcl
jecxz
adc
dec
pop
sbb
sbb
inc
ret
in
sarl
sub
jl
dec
push
mov
dec
repnz
add
push
add
and
jne
or
fisubs
int
add
lcall
and
push
es
mov
xchg
mov
mov
jecxz
test
add
or
mov
inc
adc
xchg
cltd
scas
pushf
cli
dec
dec
fnsave
mov
bswap
mov
push
jle
cmp
out
scas
mov
mov
mov
push
jmp
push
add
sub
and
mov
test
sub
cmp
xor
faddp
lock
cmp
cmpsl
ret
jp
addr16
or
adc
ret
add
push
aam
push
lock
add
cmp
scas
arpl
jne
test
inc
push
push
ja
out
movsl
loop
mov
imul
pushf
xchg
out
push
test
int
stc
cmp
movsb
dec
int
call
test
rorl
es
insl
and
stos
mov
fmull
xchg
cmp
xor
fwait
into
mov
iret
push
pop
jno
push
inc
popa
inc
psubw
mov
pop
mov
or
fidivrs
movsb
or
lahf
jge
sbb
aam
pop
ret
push
mov
pop
mov
mov
xor
sub
mov
inc
cltd
icebp
mov
cmpsl
bswap
pop
shl
and
movsl
add
cmp
xchg
xor
inc
fstl
xor
jne
mov
xor
jns
push
fidivl
mov
in
xchg
cmpsl
inc
jbe
out
addr16
mov
es
icebp
sbb
mov
mov
popa
mov
or
shrb
mov
insl
scas
jb
pop
in
scas
inc
inc
fadd
mov
mov
pop
mov
ss
mov
sbb
inc
push
mov
stc
addr16
xchg
mov
add
enter
cwtd
std
lret
cmp
cmp
lds
imul
push
es
pop
mov
arpl
in
mov
mov
push
sahf
push
outsb
pusha
mov
dec
jge
js
in
movsb
xchg
repz
adc
sbb
sbb
imul
mov
clc
psrlw
cmpsl
das
dec
add
loop
cwtl
daa
sahf
push
or
jae
mov
sarb
push
jmp
push
pop
cmp
adc
push
dec
mov
cwtl
mov
ds
movsl
fadd
cmp
cld
jae
in
sub
in
ret
xor
es
int
inc
int3
lret
lods
mov
xchg
outsb
xchg
outsl
pushf
pop
cmp
jb
and
pop
xor
jo
sbb
stos
push
fimull
enter
sub
mov
in
sbb
lds
push
and
sub
ret
or
repz
push
jge
jne
cs
jae
pushf
pushf
dec
idivl
fs
faddl
push
std
pop
ficompl
cmp
ucomiss
pushf
js
shrb
jle
outsl
daa
jg
aas
es
lea
mov
insl
addr16
sbb
xor
push
push
lret
stos
movsl
pop
and
inc
aaa
jge
mov
mov
stos
mov
scas
mov
jno
xchg
jg
mov
les
dec
loopne
js
int
xchg
sub
mov
insl
test
xor
or
enter
leave
jmp
aas
push
ret
cwtl
cmpsb
adc
jp
mov
mov
mov
movsl
sbb
dec
push
outsb
mov
push
int
adc
and
sbb
insb
bound
dec
pushf
imul
int
jbe
in
gs
cmp
in
dec
inc
lods
dec
mov
sbb
xor
sub
dec
xor
clc
je
xlat
popf
lock
inc
push
jbe
std
aam
xchg
mov
aad
outsb
sub
jns
mov
test
push
test
pop
pushl
push
xor
cs
mov
xchg
sbb
add
stos
outsb
sub
pop
popf
stos
iret
xor
cmp
loopne
push
push
xchg
mov
int
outsb
push
sbb
dec
inc
aaa
insb
rcll
adc
loope
cmc
dec
test
jecxz
aas
aad
jg
stc
ja
cmp
or
xor
sbb
iret
mov
jbe
mov
les
enter
test
add
pop
out
xchg
and
push
push
add
adc
jg
xchg
sub
pop
xor
add
pop
cwtl
pop
aam
push
pop
outsb
sahf
adc
negl
add
les
push
and
andl
out
push
enter
out
push
stos
sti
out
cld
xor
cmpsl
lock
fsubrs
ret
inc
stos
sbb
push
or
jp
xchg
icebp
push
dec
fdivs
test
xor
push
sbb
push
mov
jne
xchg
add
imul
lcall
add
mov
mulb
cltd
and
pop
hlt
ss
out
stc
sub
lret
aam
mov
and
cmc
adc
xor
aam
bound
jge,pn
rcrb
jle
and
cwtl
testb
inc
negb
cmp
js
shll
mov
in
int
cli
or
movsb
out
mov
hlt
cmc
adc
scas
sbb
inc
movsl
xchg
jbe
in
inc
call
pushf
fnsave
xlat
rolb
test
push
mov
lods
push
in
mov
pop
and
or
inc
mov
dec
repnz
mov
sbb
dec
ret
xor
mov
hlt
cmc
les
inc
dec
push
dec
aam
scas
shl
ja
jmp
add
xor
leave
imulb
lds
hlt
popf
push
rcl
jmp
inc
cli
iret
sub
mov
fldl
or
or
or
shl
inc
xchg
scas
adc
jb
push
inc
out
jnp
mov
daa
addr16
sub
mov
or
jne
nop
jmp
mov
test
imul
dec
daa
jno
mov
not
mov
pop
sub
xchg
mov
push
adc
sub
cld
loop
xor
dec
out
pop
mov
movsb
imul
jo
fbld
xchg
jno
stos
lods
inc
and
scas
mov
fnstenv
iret
sbb
mulb
xchg
and
xor
jge
cmp
mov
rorb
xchg
and
ds
test
movsb
mov
addr16
ds
inc
pushf
mov
push
and
js
add
xor
loopne
mov
inc
and
push
addr16
mov
ret
hlt
into
cwtl
jae
push
mov
inc
es
xchg
push
movsb
shld
xor
inc
imulb
jecxz
mov
jg
shll
pop
mov
cmpsl
out
repnz
fcoml
cmc
ja
out
mov
loopne
out
test
jp
xor
push
daa
inc
xchg
test
mov
xor
sbb
cmpb
mov
ljmp
insl
jge
imul
nop
dec
test
mov
les
bound
jg
stos
out
cld
xchg
mov
inc
push
push
daa
lea
mov
leave
mov
mov
dec
cmp
lahf
stos
mov
mov
scas
pop
ljmp
movsb
fadds
scas
iret
mov
leave
aad
repz
fidivrs
fadds
mov
lret
sub
gs
xchg
mov
divps
out
xchg
enter
iret
sbb
cmp
add
or
xor
in
test
mov
ret
dec
mov
pop
push
mov
es
jl
push
in
mov
push
jmp
jne
shlb
test
insl
icebp
mov
and
pop
xor
xor
movsl
and
ret
inc
and
lds
xchg
popf
cmpsl
xor
jmp
subl
subl
aaa
xchg
aad
dec
pop
rorb
aas
inc
jp
aad
sub
adc
cltd
movsb
inc
add
jl
dec
mov
dec
lret
imul
in
dec
in
cmp
jmp
fwait
cltd
ss
cld
xor
jnp
std
lods
jnp
mov
jmp
sarb
outsb
in
dec
ret
orl
pop
orl
pop
xor
add
outsl
inc
sarl
inc
and
cmp
add
cmpsb
mov
mov
aas
adc
or
add
test
pop
lahf
testb
cmpb
loope
inc
sbb
pop
cmpsb
jae
push
iret
mov
pop
out
push
cmc
mov
pop
in
pop
add
lcall
hlt
lods
push
lcall
mov
mov
add
xor
mov
inc
xchg
and
push
mov
sbb
ret
lds
rcrb
subl
in
or
and
dec
mov
xor
sbb
or
sub
std
pop
xchg
dec
sub
pop
or
mov
test
roll
dec
stos
sub
repnz
out
test
inc
out
fs
iret
cmpsb
dec
in
negl
add
jno
push
push
jnp
iret
dec
inc
hlt
mov
cltd
xor
or
cmp
sub
fwait
pop
bound
sarb
mov
clc
inc
pop
out
adc
jbe
inc
aad
aam
dec
sti
sbbb
xor
pop
mov
xor
jne
push
jne,pn
and
xor
cmc
loop
xlat
push
push
push
jno
ret
and
lret
into
aas
xchg
shll
ss
and
out
and
in
hlt
or
jno
int
ss
mov
lea
jno
aas
pushf
daa
dec
push
sub
xchg
xor
cld
inc
jmp
push
inc
loope
outsb
out
lock
push
sarl
mov
cmp
loop
xchg
outsb
pop
dec
or
push
pusha
or
jne
aam
mov
fadds
jp
outsb
pushf
pop
in
ret
jno
jl
xor
inc
jge
rorl
mov
jno
jecxz
inc
jl
dec
push
lock
outsl
jnp
je
ss
gs
mov
lods
scas
rcrl
test
mov
fidivs
xor
in
movd
xor
push
ljmp
pushf
xor
stc
nop
mov
push
pop
scas
pop
jg
lds
mov
divb
sub
jp
jmp
in
test
mov
mov
and
outsl
xchg
dec
xchg
sub
mov
mov
nopl
and
ds
sbb
pop
arpl
mov
and
adc
stos
xchg
xor
enter
inc
fisubrl
shlb
popa
daa
in
cwtl
pop
test
nop
sub
sbbl
sarb
add
jne
insl
jns
cmpsl
out
lcall
mov
mov
push
in
ss
data16
lods
inc
popf
in
test
xchg
das
mov
mov
rcl
outsl
les
scas
mov
sbb
jle
ss
lea
lret
bound
jmp
fidivs
lret
cld
test
ss
jo
frstor
pop
repz
xor
xchg
mov
xlat
and
mov
cmp
cwtl
das
test
cmc
mov
mov
stos
sbb
aaa
jg
push
popf
imul
mov
shlb
xchg
loope
push
adc
sbb
int3
xor
cmp
pop
shlb
sub
testl
mov
shlb
lret
lret
and
call
jo
push
scas
inc
dec
xor
ret
int
mov
jle
xorb
popa
clc
scas
adc
inc
iret
jg
fldl
push
punpckldq
cmp
pop
adcb
push
xlat
outsb
test
xchg
sub
sub
jne
add
cld
xchg
lods
pop
jo
mov
mov
adc
aam
arpl
test
or
outsb
jge
icebp
scas
in
add
js
std
in
sub
nopl
dec
pop
cmp
and
lods
stc
nop
fildll
xlat
outsb
xchg
or
fisttps
xor
lea
sahf
mov
fbld
push
movb
je
stc
nop
adcb
scas
fsub
push
in
adc
aad
sbb
fsubrs
cmp
mov
testb
mov
fnsetpm(287
jb
andb
sahf
repnz
mov
test
push
lods
cmp
xor
mov
lds
push
jmp
addl
in
into
scas
data16
fstl
mov
lahf
pop
hlt
int
je
ficoms
cld
addb
jb
xchg
sub
stos
and
addl
jb
aas
lret
stos
inc
fstp
push
pop
scas
addl
jae
cmp
sub
addl
jbe
adc
fists
sub
das
int
mov
fistps
rorb
mov
fisubs
fcoml
stos
inc
mov
adc
je
jp
xor
jecxz
cmp
leave
add
iret
aaa
in
cmp
sbb
jne
test
pop
fimuls
ljmp
stc
nop
mov
inc
xlat
stos
jae
loopne
lds
ficomps
or
mov
cmpsl
pop
scas
dec
in
jp
ret
stos
std
insb
add
jnp
jg
jecxz
fsts
jp
aad
add
and
jp
rep
jmp
dec
sbb
stc
test
jnp
shrl
jl
outsl
mov
pop
scas
inc
arpl
xchg
fcomps
inc
mov
imul
cltd
fiadds
fistpll
push
sbb
nop
out
lds
mov
sahf
xor
lcall
cmp
pusha
pop
xchg
sub
call
cmp
sahf
xor
ljmp
push
jne
add
nop
mov
xchg
jae
push
lods
xchg
cmpsl
popa
clc
aad
rclb
ret
pop
je
adc
rorb
insl
add
insl
xchg
fidivs
arpl
jno
xor
ss
push
testl
leave
jl
sti
mov
pop
sahf
lea
std
pushf
fwait
xor
leave
mov
rcrb
lea
cmpsl
mov
data16
rcrb
xchg
mov
mov
lds
mov
mov
jle
shrl
cmpsl
cmp
aad
shrl
dec
jb
jg
mov
les
push
in
test
fistpll
xor
int3
scas
sbbb
pop
gs
lea
add
movsl
cmp
mov
icebp
in
pop
sahf
jb
enter
lds
pop
out
in
test
mov
fbstp
mov
jle
cmp
push
mov
stos
inc
push
mov
push
ljmp
ret
imul
sub
jno
rclb
sbb
das
roll
mov
jns
xor
shlb
stos
inc
sub
mov
jbe
pop
jle
and
popa
xor
xchg
cmc
push
call
into
jmp
sbb
inc
mov
ds
and
push
xor
scas
inc
adc
sbb
sbb
test
mov
sbb
adc
repnz
fmull
test
mov
jp
pop
aad
sbb
jge
das
stos
and
push
out
jb
inc
movsb
pop
outsl
xchg
lret
jb
and
mov
imull
cmpsb
lcall
jle
vmaxps
flds
iret
pusha
pop
out
test
push
imul
xor
xchg
mov
cmpsl
sarb
pop
mov
xchg
sub
es
ljmp
push
insl
xchg
mov
ret
mov
lods
jecxz
data16
lea
cmpsb
cmp
les
sub
cbtw
data16
int3
mov
cmp
subb
add
test
aad
shrb
dec
mov
jnp
icebp
mov
pushf
xor
xlat
sbb
pop
jl
test
dec
popf
in
rcl
sbb
jp
pop
hlt
dec
movsb
add
pop
inc
inc
fnstenv
clc
dec
test
js
push
inc
jle
js
xchg
sub
xchg
sub
into
popa
clc
decb
andb
adcb
mov
iret
ret
pop
push
loop
mov
or
fidivrs
adc
shll
sti
xchg
popa
clc
push
movsl
push
movsl
shlb
mov
bnd
sub
jns
clc
dec
les
sbb
daa
dec
lcall
sahf
repz
sub
clc
popl
mov
jns
xchg
cmc
ret
mov
lret
shl
jne
push
cmp
enter
mov
push
and
fdivrl
push
and
sub
jp
sbb
into
in
xor
data16
and
inc
cwtl
das
jae
movsb
cmp
xchg
scas
inc
ret
jecxz
jecxz
iret
sbb
mov
pop
mov
adc
fidivl
jl
pop
scas
mov
add
js
push
aam
leave
add
es
fcoms
add
jl
sbb
push
into
sbbl
jne
mov
dec
mov
and
and
rep
dec
loop
sbb
orb
and
imul
popf
push
lods
inc
aas
xchg
pop
mov
repnz
jle
and
jl
mov
jecxz
inc
fxch
cmp
cwtl
das
test
fidivs
cmp
add
ss
scas
jae
fstpl
inc
fdivs
fwait
rclb
push
mov
sbb
arpl
pop
sti
cs
mov
std
sbb
add
cmpsl
pop
cmp
dec
mov
popf
insl
or
mov
les
movsl
arpl
popf
inc
int
lods
xchg
ja
mov
mov
mov
lock
jmp
push
lret
iret
inc
in
add
icebp
cltd
mov
and
mov
mov
sub
or
jg
ja
pusha
sub
push
nop
sub
ja
add
in
popw
hlt
xor
int
test
jmp
or
mov
xchg
jns
mov
xchg
jp
mov
push
xor
add
push
out
and
xchg
out
cmp
or
cmp
loop
inc
mov
hlt
xchg
sbb
inc
add
cmpb
push
cwtl
sub
xchg
sub
in
outsb
mov
repnz
inc
ja
ret
rclb
mov
popa
fistl
ljmp
aad
lea
or
or
cmc
sbb
xor
lock
push
ljmp
sbbb
bound
leave
xchg
cmp
push
mov
lock
cmp
pop
cwtl
es
ds
imul
lmsw
push
std
sub
or
inc
jg
imull
pop
push
mov
and
outsl
push
pop
push
lret
cmp
jge
call
inc
mov
mov
xchg
sub
cltd
je
mov
aam
ret
sahf
pusha
fadds
cmp
sub
push
inc
ret
push
repz
addr16
jns
add
jge
pop
cmp
xorb
push
iret
mov
call
int
xchg
int
sub
jp
pop
push
push
dec
fists
ret
push
pop
adc
hlt
sbb
push
sub
nop
jp
push
add
ljmp
imul
jmp
push
jmp
fsubp
inc
jmp
lods
cmp
clc
mov
loope
jle
mov
lock
adc
mov
aam
dec
add
push
pushf
inc
ficoms
mov
pop
adc
cmp
imul
icebp
ss
int
arpl
roll
mov
sub
cmp
push
dec
int3
dec
push
lahf
xchg
out
mov
test
negb
jmp
xlat
dec
popf
loop
or
jmp
sub
xchg
add
jp
cmp
jne
cwtl
xor
and
es
sub
push
out
lods
insl
dec
dec
pop
faddl
inc
test
xchg
or
rcrl
xor
cld
mov
mov
hlt
mov
int
mov
pop
sub
rorl
lock
cmp
arpl
stc
test
ljmp
pop
adc
sbb
sub
mul
jnp
cld
xchg
xchg
in
dec
jnp
cmp
jo
int3
inc
test
mov
rorl
push
mov
sbb
cld
es
or
inc
das
js
scas
xor
mov
jns
or
pop
pusha
movsb
pop
jg
inc
push
pop
push
mov
jae
pop
rcll
out
bsr
in
xor
gs
enter
fidivl
sbb
stos
sahf
xor
call
and
cmp
imul
pushf
ljmp
stos
xlat
dec
xor
sarb
nop
mov
out
xorl
adc
dec
jbe
test
inc
ds
push
dec
dec
rcll
out
push
push
inc
faddl
movsl
ds
sti
and
inc
mov
call
mov
shlb
test
lret
xchg
pop
loopne
jae
fidivs
pop
push
or
lods
outsl
sub
dec
out
outsl
mov
insb
call
fnstcw
jmp
lcall
dec
mov
in
ret
inc
loopne
push
adc
fsubp
dec
loopne
lahf
shll
add
lds
adcl
sub
inc
lret
push
shlb
xor
mov
rcr
adc
or
cld
jmp
int3
insl
add
mov
adc
cmp
mov
in
lds
cmp
fists
adc
inc
jp
mov
daa
bnd
enter
inc
xor
rcll
jo
and
jl
mov
cltd
xchg
mov
pop
outsl
ret
movsb
pop
or
pop
jmp
lret
add
lahf
cmpl
loopne
add
scas
aaa
decb
pop
pop
iret
nop
mov
sub
ja
xor
daa
orb
cmp
jo
push
imul
jo
test
jbe
sbb
lea
jns
or
ret
cmp
in
jnp
dec
inc
mov
lods
gs
mov
adc
cltd
mov
int3
je
out
and
sarb
imul
xchg
repnz
iret
adc
add
add
and
adc
add
adc
ss
and
sub
shrl
pop
aam
and
xchg
sub
lods
mov
hlt
jmp
mov
cltd
sahf
outsb
movsl
cmp
sbb
addb
adc
movb
fwait
adc
aad
ja
ja
test
into
mov
in
mov
sub
dec
imul
pop
fdivs
jle
scas
cmp
mov
mov
aam
insb
jecxz
pop
hlt
fildl
sub
cmc
mov
mov
jl
or
xchg
orl
dec
ret
cmp
ljmp
ficoms
xor
bnd
inc
xchg
jns
push
mov
pop
shlb
mov
sahf
mov
fnsave
fsubr
roll
push
in
fiaddl
out
ljmp
movsl
ret
cmp
xchg
outsb
jecxz
mov
les
push
shl
cwtl
cmpl
jae
jns
dec
mov
cmp
pop
aad
push
in
lcall
inc
lods
inc
sbb
jp
cmp
cs
cmp
adc
rcrb
in
add
mov
mov
push
and
pop
push
cmp
loop
flds
lods
push
adc
pop
mov
movsb
sbb
and
test
rcll
xchg
js
lods
jne
popf
inc
int3
sub
mov
test
push
add
add
cmp
push
add
jmp
push
daa
mov
jp
fdivl
pushf
in
and
fidivs
inc
out
fs
lods
inc
and
int3
inc
xchg
inc
add
mov
nop
mov
mov
int3
aam
or
rcrb
in
ficompl
sub
ret
xlat
mov
jns
stc
ljmp
stc
flds
dec
jecxz
pop
mov
scas
xchg
testl
sub
sub
js
rolb
repnz
mov
outsb
and
aaa
repnz
jle
xchg
inc
leave
imull
ja
movsb
das
aad
mov
sahf
mov
mov
adc
sbb
dec
ret
mov
loopne
push
add
jno
sbb
pop
mull
mov
enter
clc
inc
aam
lods
pop
jge
mov
jmp
mov
iret
fs
es
test
stos
jg
push
jnp
pushf
adc
nop
mov
lds
rorl
dec
mov
mov
cmp
lret
mov
sub
adc
pop
mov
fldl
testl
push
in
xor
fstpt
add
fucomip
pop
aam
mov
addr16
xchg
pop
mov
test
test
add
or
fisttpl
lret
xchg
aam
das
loopne
pop
mov
fildl
aad
adc
cmp
sub
fwait
xchg
les
addr16
insb
mov
ror
mov
jbe
xor
jecxz
adc
or
jp
sbb
pop
out
fimuls
mull
adc
in
or
mov
aas
lock
pop
shl
imul
xor
push
data16
jae
add
inc
mov
inc
inc
pushf
inc
dec
pop
push
push
jns
insb
pop
xor
cmp
fs
mov
mov
mov
rorl
mov
pop
push
pop
jae
pop
or
rclb
adc
xor
xor
dec
jecxz
lcall
mov
ret
pop
shll
pop
sarb
aas
rol
cltd
push
mov
in
insl
sbbl
sbb
mov
sub
inc
loope
inc
xchg
imul
pop
lock
sub
in
cmp
ljmp
inc
fcmovnbe
ds
je
rorb
bnd
cmpsb
and
adc
xor
push
jbe
xchg
cmovg
stos
pop
ja
add
cmpsb
jo
rorl
mov
jp
jne
int3
xor
push
scas
ja
jmp
out
or
xor
test
out
add
cmc
sbb
ficoml
xchg
iret
cmpsl
imul
mov
daa
ljmp
jb
xchg
insb
cmp
xor
test
out
jle
mov
sbb
fnstsw
pusha
movsl
ja
pop
cmc
out
imul
outsb
js
push
subb
and
bound
lea
xor
push
vstmxcsr
ret
stc
call
xchg
mov
sti
add
mov
fisubrl
mov
sub
jns
sbb
in
sub
jge
stos
add
add
pop
aad
mov
pop
rcrb
loope
loop
movsl
int3
cli
sbb
enter
jmp
mov
ja
addl
and
cmpsb
fcoml
rol
push
adc
loop
in
test
cltd
dec
mov
rcrl
dec
sbb
push
rorl
or
lock
jno
mov
or
dec
in
ja
mov
xor
pop
hlt
pop
cmc
ret
ret
lret
inc
cmp
cmp
outsl
push
movsl
mov
les
mov
jmp
xlat
sbb
dec
roll
inc
or
push
jne
out
xor
xor
fs
std
cmpsl
daa
sub
shll
cmp
mov
call
jmp
loopne
cmp
scas
and
or
loopne
xor
das
loope
push
lret
ficomps
fstpl
pop
iret
adc
add
imul
faddp
lret
cmp
imul
ret
roll
add
ret
xchg
enter
shrb
lret
fdivr
aas
ffreep
xlat
mov
shrb
imul
sbb
adc
dec
mov
movsb
xchg
xchg
and
data16
leave
ja
lds
dec
out
and
in
and
add
sbb
sub
mov
in
or
and
mov
in
adc
sub
sbb
pushf
les
cwtl
mov
xchg
int3
sbb
dec
in
cmp
mov
push
rcll
sbb
movsb
out
sbb
rorl
mov
stc
xor
fisttpll
pusha
fstpt
aaa
mov
aas
pop
jno
std
push
ss
push
mov
and
mov
ret
pop
out
xor
je
mov
adc
data16
inc
xor
xchg
jg
mov
mov
lock
outsb
sarl
incb
xchg
mov
xor
adc
imul
mov
pop
mov
loope
push
fmul
pop
ret
fildll
sub
roll
add
div
and
or
into
popa
imul
inc
mov
shrl
lods
jg
jns
fidivrl
push
mov
rcrl
mov
nop
mov
test
pop
sbbb
mov
cmpsb
and
ja
cmpsb
xor
leave
arpl
mov
imul
dec
int
jb
outsl
leave
cmp
fnstsw
clc
xor
fnsave
adc
data16
jo
clc
and
xchg
lods
jnp
mov
xor
xchg
push
or
fimuls
test
jae
cs
das
movsb
lcall
mov
cltd
xchg
push
ja,pt
stos
out
xor
jmp
enter
xor
mov
xlat
sbb
js
lds
in
loop
xchg
mov
sbb
mov
cmp
jle
jbe
add
aaa
jmp
jae
rorb
and
push
xor
loope
pop
and
xchg
test
push
repz
frstor
ret
fs
call
lods
xor
adc
out
pop
adc
push
cmp
jg
pop
loope
in
aas
jbe
fildl
daa
loope
test
fidivs
dec
and
push
adc
cmp
or
xor
push
int3
dec
jne
sbb
insl
xchg
mov
jns
js
xchg
ja
or
call
cmp
ret
xor
dec
jne
lods
inc
lock
fmull
sbb
cmp
in
push
mov
add
push
sub
push
roll
jne
push
mov
inc
out
add
dec
sarb
fcomp
das
fisttpll
sbb
jecxz
fistpl
pop
inc
sti
pop
lds
out
sbb
mov
or
xchg
lea
lods
pusha
mov
adc
push
out
mov
adc
lods
imul
aad
xor
xor
or
out
dec
jecxz
or
scas
jb
in
push
in
adcl
fildll
loop
pop
sahf
lcall
leave
mov
jmp
or
ftst
and
scas
mov
mov
pushf
push
into
std
and
mov
mov
jmp
dec
repz
mov
sbb
outsl
push
sarl
roll
fstl
aas
xchg
mov
divl
fdivr
push
int3
fst
gs
in
jecxz
mov
int
lret
adc
cld
push
daa
fimull
lock
mov
mov
ret
ret
hlt
xlat
into
imul
add
and
push
pmulhuw
shrb
add
cmpsb
pop
int3
adc
jns
lret
mov
lret
inc
add
xchg
js
std
stc
sub
xor
sub
test
jge
insl
mov
sub
push
cwtl
xor
imul
inc
jmp
cmp
jle
lret
sub
movsl
fwait
jecxz
push
loop
or
or
cmpsl
ds
in
fs
fnsave
call
out
call
mov
fstl
je
out
cmp
mov
mov
adc
test
mov
outsl
push
stos
shl
and
mov
out
fiadds
stos
testb
arpl
fcomps
filds
lds
and
xchg
out
ret
dec
icebp
sbb
test
cmpsl
sbb
xchg
jp
cmp
cltd
jns
es
push
mov
lahf
aas
push
mov
dec
out
bound
push
cs
jno
push
xchg
cmp
dec
cwtl
popf
pop
push
in
jmp
into
rorb
jecxz
pop
and
popa
mov
in
and
or
and
push
lcall
jl
rorb
sub
mov
test
rorb
inc
leave
pushf
sbbl
sbb
nop
sbb
xchg
pusha
les
fisubrl
sahf
xchg
mov
adc
addr16
cmp
pop
iret
add
inc
mov
and
jns,pt
fmull
xor
xchg
outsb
das
hlt
adc
fstl
push
inc
xlat
aaa
dec
repnz
pop
dec
rclb
xlat
cmp
sub
inc
inc
jns
in
cmp
test
cld
jo
mov
or
inc
rcrb
rcll
lret
jns
das
repnz
jbe
add
inc
cltd
arpl
int
pop
test
xlat
clc
pop
scas
bound
cmp
cli
push
mov
fs
mov
add
loop
adc
dec
loope
xchg
filds
fdivrs
jecxz
mov
or
xchg
jo
adc
xchg
rcll
jmp
jns
adc
pop
mov
sbb
icebp
mov
adc
ficompl
adc
mov
nop
jmp
daa
loope
stos
xchg
call
mov
push
mov
repnz
xor
rcr
mov
xchg
insl
add
mov
mov
cmpsb
das
es
mov
xchg
and
inc
mov
sub
xor
inc
and
adc
cwtl
into
gs
adc
jmp
add
dec
cli
sbb
dec
dec
xor
jo
cmp
push
xor
ret
pop
cld
xor
and
idivb
sub
shll
dec
int3
arpl
lcallw
sbb
adc
jnp
and
add
xor
and
int
add
pop
xchg
xchg
xchg
pusha
inc
les
jbe
add
leave
push
adc
inc
push
subps
ljmp
mov
sub
dec
inc
outsb
jl
nop
push
lret
push
fstl
dec
outsb
sarb
dec
jle
test
aad
cmpsl
mov
push
push
jmp
fprem1
inc
fdivl
gs
xor
fistpl
fucom
dec
enter
cli
lods
pop
aad
scas
je
shll
jne
mov
lcall
push
call
sbb
push
stos
dec
nop
xor
das
dec
arpl
xchg
push
gs
loope
xlat
rorb
push
or
inc
sbb
sti
cmpsl
and
aas
js
push
or
cmp
cmp
push
aam
jnp
sti
ss
out
pop
and
push
test
loope
inc
or
jg
xchg
pop
push
in
test
xchg
or
pushf
pop
movsb
cld
push
adc
ficoml
push
mov
cld
xchg
mov
jge
inc
add
test
pop
sarl
std
dec
jecxz
subb
hlt
dec
dec
ret
cmp
pop
or
jnp
fnstcw
adc
sbb
aaa
or
scas
xchg
push
inc
add
addr16
sub
int
push
jle
aam
cwtl
lock
je
push
inc
mov
xchg
aam
lea
out
inc
pop
int3
fisubrs
lds
sub
fwait
xor
cmpsb
adc
test
inc
mov
mov
rep
int
and
ror
cmc
xchg
ljmp
sbb
leave
inc
mov
shlb
dec
mov
sbb
xchg
repz
in
pop
mov
insl
mov
enter
jne
mov
call
cmp
jo
jb
scas
pop
sbb
push
and
cmp
jb
push
inc
in
sub
aam
mov
jno
sbb
pop
lods
out
inc
add
cli
in
cmp
sbb
div
sub
adc
loopne
in
or
mov
out
iret
mov
popf
xchg
push
ds
test
adcl
xchg
jl
add
mov
mov
sub
addl
or
xlat
imulb
rorb
outsl
loop
mov
cmp
stos
repz
popf
and
or
ljmp
add
jnp
push
inc
bsr
fistl
xchg
movsb
sub
jno
jnp
jb
cmp
test
add
xchg
push
add
xor
inc
gs
pop
lret
lock
cmp
pop
mov
in
cmpl
cwtl
adcl
jo
push
test
adc
push
mov
sub
jns
stos
jns
into
cmc
int3
push
lret
push
adc
test
in
std
push
xor
adc
jecxz
out
mov
imul
push
mov
shrl
sub
scas
mov
imul
call
faddl
lds
sti
ror
lods
pop
fcmovb
inc
fldt
out
shrl
lock
vxorps
sbb
jle
mov
lock
int
adc
xor
inc
add
push
mov
repnz
xchg
in
je
jbe
ret
sbb
jb
jle
xchg
rcll
inc
xchg
jp
lcall
addr16
inc
lods
mov
sub
popf
jnp
outsl
dec
shlb
mov
std
test
hlt
push
aam
test
and
sbb
adc
ds
rcl
enter
es
lahf
xor
nop
in
icebp
mov
and
cmp
cmp
daa
jge
fdivs
lahf
scas
fs
movsl
cmp
jne
mov
pop
les
rorb
lock
pop
lds
xorb
sbb
cmp
test
fadds
add
push
xchg
ss
decb
xchg
fisubrs
fldt
adcl
cld
es
in
or
sti
sahf
cmpsl
sbb
ljmp
or
cmp
stc
cltd
std
xchg
lret
mov
jmp
icebp
loope
shll
movsl
ss
inc
in
xor
outsb
les
cli
imul
and
lea
sub
addb
mov
sbb
imul
push
les
inc
lcall
pop
aad
andb
mov
stc
cmp
insl
pop
lahf
aad
stc
mov
xchg
xchg
pop
add
adc
sbb
and
pop
rorl
xchg
mov
cmp
xchg
sbb
addr16
xchg
popf
push
sbb
in
adc
rolb
call
out
xchg
popa
push
popf
xchg
mov
or
mov
mov
cmp
mov
mov
clc
mov
jg
fildl
out
xchg
cld
popf
xor
push
or
push
andl
dec
loopne
div
mov
dec
addr16
jl
adc
sbb
pop
jecxz
dec
outsl
inc
fisubl
ret
repz
adc
mov
sbb
ret
cwtl
cmp
push
dec
loope
dec
push
popf
jnp
push
lods
int
jg
iret
out
xor
pop
icebp
sahf
mov
sbb
sub
mull
xchg
insb
xchg
sub
mov
mov
sbb
fnstenv
cmp
adc
add
roll
and
mov
lcall
dec
in
ret
std
xchg
cmc
push
mov
mov
popa
fdivl
xchg
or
sarb
mov
push
call
inc
fsubrs
mov
into
loop
testb
push
in
push
aam
and
dec
adc
push
call
outsl
call
scas
inc
ret
cmp
pop
pop
call
push
lods
stos
push
fucomp
push
dec
loop
pcmpgtw
inc
cmpsl
imul
push
adc
loope
push
fnsave
mov
rcll
xchg
sbbb
xorl
pushf
jl
es
lock
pushf
mov
pushf
jae
ror
lock
lods
mov
notb
outsl
ja
or
jb
ljmp
call
dec
notl
fstl
sbbb
lock
scas
insl
xor
mov
lods
mov
push
dec
push
cmp
das
lcall
shl
inc
lds
xchg
test
or
in
jl
mov
es
js
dec
mov
mov
mov
imul
cld
xchg
or
lret
or
sbb
mov
add
push
inc
dec
pop
lcall
in
dec
ljmp
ret
cmp
push
rorl
sbb
pop
adc
sub
push
push
lcall
dec
mov
stc
int3
sbb
or
icebp
xchg
jae
stos
and
push
cld
dec
or
adc
jge
jae
push
push
stc
mov
inc
int3
push
data16
jp
pop
mov
sub
xor
pop
clc
fmull
sub
mov
inc
inc
adc
and
adc
mov
mov
dec
test
jp
jmp
mov
enter
pushf
jmp
inc
adc
clc
push
in
cmp
fstpl
dec
push
push
mov
data16
aam
mov
or
inc
ja
clc
adc
ljmp
daa
add
jo
mov
xchg
or
cmp
push
jbe
cmp
pop
std
jns
lcall
in
mov
test
cmp
cli
mov
or
add
push
cmc
in
pop
push
ja
jne
cmpsb
repnz
scas
call
subb
enter
es
adc
sbb
dec
jge
mov
mov
sahf
es
aam
sbb
mov
pop
sub
adc
sub
sub
stos
xchg
lret
xchg
insl
or
sbbl
icebp
lret
sbb
push
sub
fcmovu
fdivs
or
notb
mov
push
xor
push
mov
testb
fisttps
sti
xchg
mov
pmaxsw
je
adc
hlt
ret
es
jne
pop
push
xor
dec
test
mov
ljmp
sub
gs
outsl
int
cmpsb
mov
pop
icebp
mov
or
in
shlb
test
mov
or
xor
lret
test
jbe
pop
mov
push
out
je
dec
data16
mov
pusha
cmp
mov
aas
and
mov
cmc
mov
out
out
test
mov
call
andb
mov
cmp
mov
cmp
xor
push
out
jae
aaa
cmpsb
sahf
insb
cmc
fs
mov
cli
push
jno
cmp
pop
inc
and
or
push
aas
cltd
repz
leave
fucomi
xchg
inc
add
pop
lea
mov
daa
mov
lea
lds
addb
mov
test
rorb
lret
mov
movaps
pop
pop
subb
cmpsl
mov
pop
add
loop
movsb
nop/reserved
out
insl
xlat
sarb
jle
mov
movsb
and
mov
mov
popf
dec
sti
mov
jns
mov
mov
push
call
stc
imul
cmpsb
sub
gs
dec
adc
adc
xlat
jge
fdivrl
mov
aaa
icebp
pop
add
mov
les
iretw
xchg
in
ficoms
mov
xor
aad
mov
jmp
insl
movsb
icebp
pop
mov
test
dec
adc
inc
xchg
cmp
lods
aad
xor
sub
mov
faddl
xchg
xchg
xor
adc
adc
call
pop
mov
fldl
and
adc
nop
cmp
aad
jp
push
push
fldl
push
xor
xchg
sbb
std
gs
std
call
pop
testl
pop
fidivl
nop
cmp
mov
pusha
jmp
jg
xlat
add
jns
push
ljmp
sbb
mov
mov
cmc
xorb
mov
in
jp
test
out
inc
or
push
aam
aas
sbb
mov
mov
xor
imul
lock
inc
sbb
dec
lret
xchg
xorb
aad
cwtl
sbb
sbb
fimuls
in
inc
or
ret
xchg
xchg
sbb
ds
jg
fildl
push
cmpsl
sub
push
mov
dec
jae
enter
pop
rorb
inc
adc
aad
and
mov
xor
fwait
or
iret
les
pop
fmulp
sbb
add
sti
pop
mov
mov
fiadds
call
pop
cltd
jnp
fiadds
insl
jmp
in
jnp
mov
mov
push
leave
nop
xchg
inc
adc
pop
xlat
xorb
punpckhdq
or
mov
mov
cmpsb
push
add
dec
setno
xchg
ja
xlat
mov
data16
pusha
icebp
mov
mov
mov
xor
xlat
stos
aad
pusha
push
popa
repnz
jnp
inc
adc
mulb
dec
jne
mov
movsl
mov
jae
scas
sub
push
add
inc
mov
insl
in
fistl
mulb
pop
stc
xchg
scas
sub
fisubrs
into
mov
lods
xchg
push
in
outsb
fsubl
xchg
pop
clc
push
inc
pop
mov
aam
fistpll
adc
xor
sub
dec
clc
sti
pop
out
xchg
pop
cli
icebp
repz
cmp
out
sub
jnp
sbb
sbb
out
mov
std
pop
imul
mov
int
fidivrl
adc
aaa
mov
pop
fisubrl
jp
push
or
pop
jle
imul
xor
lcall
insl
out
add
xchg
add
pop
or
pop
cli
xchg
arpl
inc
adc
fstpt
jne
fwait
mov
pusha
loopne
test
add
xorl
push
add
rol
out
hlt
popa
fdivr
jne
sahf
pop
jne
aam
add
jg
mov
cmp
jge
pop
fisubl
mov
mov
fnstsw
mov
mov
xchg
jne
std
pop
popa
imul
sbbb
add
mov
fnstsw
stos
cmc
popa
mov
cmp
insb
scas
inc
adc
shll
add
daa
sbb
pop
dec
cmp
add
fadds
roll
mov
dec
jle
test
data16
lcall
adc
jno
dec
jnp
cmp
mov
les
sti
pop
popf
addr16
mov
nop
inc
mov
subb
fdivrs
jbe
rcll
int
add
sub
mov
sarb
aad
push
add
or
shl
rcll
into
subb
xchg
xchg
rol
push
into
subb
mov
jmp
mov
testl
jbe
aam
pop
sbb
leave
nop
dec
fiaddl
popf
lcall
jne
gs
addr16
nop
loop
push
dec
push
stc
ret
test
adc
sub
int
dec
repz
scas
xor
add
cwtl
inc
sbb
adcb
push
dec
sbbb
lcall
icebp
dec
daa
lods
pop
loop
fistpll
nop
cmp
dec
orl
push
mov
sbb
jp
dec
es
andl
mov
outsl
dec
xchg
jle
ds
xchg
mov
pop
cwtl
sarl
dec
es
add
xchg
cmp
jnp
pop
jmp
std
adc
fwait
stc
xchg
sarl
jmp
lods
sub
cmc
pop
fs
shll
js
pop
and
les
movsb
daa
stos
or
mov
stc
lea
push
jmp
mov
sbb
je
aam
mov
sarb
pop
inc
or
negb
addr16
lea
cmc
pop
mov
fiaddl
jecxz
push
jl
push
popa
std
mov
repnz
ljmp
test
push
std
xor
lret
xchg
outsl
daa
mov
jae
pop
mov
ja
out
jb
arpl
xchg
lds
lret
rorl
icebp
pop
cli
xchg
in
into
lcall
imul
ljmpw
inc
mov
xchg
arpl
adc
addr16
pusha
mov
add
dec
cmpsl
lret
xchg
rcrl
aaa
xchg
jno
and
sub
addr16
xor
mov
sub
ret
xor
pop
ja
loope
test
lcall
mov
xchg
pop
testb
in
out
cli
push
jo
in
or
cltd
repz
fildl
adcl
mov
push
cmp
in
insb
and
sbb
cltd
flds
es
add
xchg
adc
push
cmp
div
sbb
adc
dec
scas
sub
das
add
movsb
mov
aaa
mov
les
pop
mul
and
rcll
sarl
dec
mov
loope
cwtl
push
and
int
pop
repz
and
or
and
lods
gs
sub
sarb
xchg
rorl
movsl
xor
mov
lock
xchg
inc
adc
js
dec
gs
roll
aad
dec
in
test
je
mov
test
movsl
and
aad
lea
adcb
insb
ljmp
es
pushl
test
mov
jge
xchg
cs
mov
xlat
out
das
pop
or
scas
xor
es
or
sbb
ret
mov
push
stc
add
cmp
cmp
dec
adc
mov
push
loope
inc
or
cld
pop
or
test
pop
xchg
fcoml
ja
das
cmc
push
cmp
pop
push
out
sub
pop
push
sub
cmp
cmp
lret
fdivrl
jg
mov
movsb
enter
pop
std
jle
sbb
sbb
cmp
scas
outsl
idivb
stos
or
outsb
xchg
in
push
orb
and
rcr
andl
fs
imul
xor
cmp
leave
cmpsb
xlat
inc
or
mov
xor
inc
adc
push
add
int3
xchg
xchg
jb
or
or
scas
push
mov
test
jmp
movsl
xchg
cmp
adc
mov
inc
jne
xchg
push
loopne
std
enter
lock
adc
into
lahf
inc
push
jb
incb
inc
pop
nop
push
insl
cmc
sub
sub
repz
addr16
mov
sbb
stos
aad
ja
push
imul
fs
push
jle
cmpsb
das
adc
scas
xor
adc
inc
pop
add
cmpsb
daa
pop
gs
inc
ja
ret
mov
bound
sbbb
data16
add
inc
or
fndisi(8087
insl
aad
loop
ret
add
std
adc
mov
jmp
dec
jae
dec
call
adc
dec
lret
or
sub
stos
das
dec
or
mov
cwtl
scas
scas
push
push
out
sbb
cmpsb
dec
dec
or
mov
mov
inc
adc
pushf
mov
lods
pop
inc
adc
scas
inc
adc
or
test
pop
addr16
sbb
xchg
loop
fnstcw
std
into
mov
mov
bound
dec
inc
adc
mov
aas
xchg
mov
sahf
push
mov
add
and
dec
mov
jge
jecxz
jb
out
daa
lds
loop
pop
jg
adc
dec
repnz
mov
filds
pop
fnstenv
lds
cltd
inc
push
mov
pop
sbb
dec
imul
or
arpl
cli
pop
les
aas
sbb
mov
sbb
popa
mov
icebp
xchg
jns
ja
lahf
cmp
outsb
aaa
mov
stos
xchg
scas
sub
pop
cld
xor
scas
in
xor
xchg
sbb
add
dec
inc
std
push
je
xchg
mov
loopne
lea
roll
stos
pop
pop
mul
mov
aad
mov
test
and
pop
pop
testb
fiaddl
dec
lret
icebp
dec
shrd
shlb
cmp
sarb
pop
mov
mov
cmc
fs
scas
stc
push
dec
xchg
jbe
int
daa
mov
sbb
pop
stc
es
test
stc
bnd
fnsetpm(287
inc
adc
cmpsb
add
outsl
mov
lods
sub
repz
repnz
out
aaa
fwait
cmp
iret
sbb
cmp
daa
scas
bound
ss
js
inc
adc
jecxz
sub
lcall
mov
arpl
cmp
scas
jecxz
mov
icebp
rorl
popl
leave
mulb
or
jecxz
mov
pop
clc
jge
mov
out
in
jo
xchg
repz
sub
cli
arpl
add
xorl
loopne
fidivrl
cli
adc
pop
push
mulb
push
imul
dec
jle
ret
dec
pop
xchg
mull
push
sub
sbb
sar
ret
adc
cmp
xlat
outsb
push
daa
out
pop
pop
testb
addb
push
js
jg
mov
std
pop
sub
shr
pop
add
mov
pop
xchg
out
xchg
imul
mov
gs
shlb
loopne
xor
fisttps
jle
jecxz
outsb
add
xor
and
mov
lock
add
pushl
test
dec
jle
mov
insb
push
xchg
aas
lcall
jb
stos
push
or
inc
mov
xor
pushf
dec
or
adc
sub
xchg
outsb
adc
pop
test
movsl
das
pushl
es
and
nop
add
lods
pop
out
push
mov
cmpsl
jecxz
sub
cmp
add
push
gs
adc
push
roll
push
dec
rcll
std
cmp
sbb
sub
jnp
sti
js
sub
pop
xchg
sub
push
shll
sbb
mov
repnz
lcall
lods
ss
mov
sbb
je
notb
out
mov
cltd
inc
in
push
sti
jg
push
clc
jp
out
mov
stos
sbb
fcmovne
cmp
sub
jns
repnz
adcl
lret
mov
loopne
outsb
inc
mov
js
scas
mov
mov
dec
or
ret
push
mov
push
dec
sub
pop
adc
movsb
xor
jmp
ret
adc
dec
dec
or
enter
addr16
stos
leave
mov
mov
adc
mov
mov
insb
fwait
sbb
or
cmp
out
sub
ja
in
loopne
xchg
leave
lea
cltd
cmp
push
aaa
popa
clc
addr16
jge
orl
xchg
lock
add
inc
mov
stos
in
divl
mov
lds
cmp
xchg
cmp
add
aad
mov
int3
mov
mov
mov
pop
jecxz
aam
addr16
xchg
jmp
cmc
mov
stc
jg
hlt
push
out
xchg
sbb
popf
inc
movsb
cmpsb
mov
and
xchg
jp
dec
daa
pop
add
out
lcall
imull
ss
aas
mov
outsl
mov
ljmp
add
les
sub
ret
fsubrl
push
stc
test
jge
mov
mov
fsubrp
jno
sub
add
adc
test
xchg
dec
aad
adc
aas
fwait
or
iret
ds
negl
and
push
xchg
out
leave
je
scas
call
cli
add
mov
je
add
fwait
aaa
xor
xor
jle
call
test
push
int3
shll
mov
or
xchg
ljmp
cwtl
cmp
int
nop
inc
xor
mov
sub
iret
movsw
jg
ljmp
pop
lds
leave
pop
insb
sbb
stc
mov
xchg
jmp
jne
fucomip
mov
push
add
or
pop
jmp
dec
fiadds
sub
cmp
insb
cmp
orl
movsb
daa
jg
mov
insb
inc
pop
jmp
jl
and
popa
jmp
cmp
int
inc
pop
sbb
dec
pop
add
test
jge
jmp
add
mov
xor
push
test
icebp
pop
aas
push
fs
std
pop
push
adc
aam
mov
fidivrs
daa
lock
or
out
mov
arpl
loope
jne
sbb
dec
sub
popa
adc
inc
pop
lret
int3
int3
popl
jp
pushf
inc
xor
and
pop
aaa
fs
popf
pop
iret
popl
orb
mov
and
jge
in
jnp
xchg
push
add
jb
nop
ds
sahf
cmp
sti
dec
or
add
xchg
push
fnstcw
lret
add
inc
aas
xor
jno
stos
hlt
bound
int3
jmp
lea
rclb
inc
xchg
jbe
mov
jo
js
in
popa
scas
xor
dec
inc
cs
lcall
xor
fildl
pop
fisttps
fwait
xchg
cmp
leave
mov
and
adc
ja
cmpsb
pop
ljmp
out
adc
mov
scas
pop
cli
jmp
cmp
lods
sub
dec
cmp
icebp
push
xchg
test
les
inc
or
jecxz
cld
test
sub
cmp
lcall
pop
pop
sub
dec
mov
scas
lret
fprem1
pop
stc
std
adc
repnz
push
mov
adc
add
mov
scas
sub
popl
fildl
cld
cmp
addl
pop
ja
daa
adc
jns
pop
or
dec
adc
insb
call
xchg
sbb
ja
dec
aaa
stos
sub
lock
push
lock
into
and
icebp
mov
inc
xor
push
dec
repz
bnd
push
mul
fildl
jge
enter
fists
xchg
mov
enter
mov
aam
cmp
test
js
cmp
stos
lret
sub
movsl
das
inc
inc
mov
pop
lcall
ss
pusha
sub
pop
loope
movsb
adc
mov
dec
xor
ret
pop
mov
xchg
cmp
or
notl
sarb
jne
xchg
cmp
xchg
inc
daa
xorl
dec
jo
fs
lods
push
in
mov
sahf
cmp
pop
mov
movsl
add
sub
out
fstpt
rolb
jge
enter
fnstenv
std
mov
mov
mov
mov
inc
xchg
xorl
arpl
adcl
faddl
pop
ret
ret
push
test
cmovno
filds
imul
xchg
jg
leave
lds
fcmovbe
or
mov
out
outsb
adc
fidivrl
push
in
sahf
insl
ljmp
roll
xchg
loop
mov
mov
push
fdivl
sahf
xorl
int3
loope
adc
js
jb
mov
pop
gs
enter
je
xor
dec
adc
cmpsb
outsb
out
mov
jp
jnp
cmp
fsubrs
inc
mov
call
daa
lods
mov
jmp
mov
add
sub
cmp
jne
inc
adcb
dec
fisttpl
mov
sarb
in
arpl
cmpsb
sti
xchg
sub
sbbl
mov
xchg
cmp
cmpsb
and
mov
mov
lods
dec
pop
fwait
aas
adc
sbb
pop
mov
bound
mov
loopne
xorb
push
add
jns
scas
jns
fdecstp
mov
jge
out
sbb
xchg
jae
pop
fmul
scas
daa
sub
push
out
xor
outsb
add
and
leave
xchg
enter
dec
sbb
les
push
sbb
movb
mov
xor
cs
rorb
mov
fwait
nop
aas
inc
gs
add
popf
movsl
arpl
sub
fldenv
dec
or
dec
mov
pop
mov
scas
sub
lods
mov
pop
or
aas
adc
cmpsl
xor
jmp
fdivrs
movb
or
mov
mov
movsl
int3
mov
mov
adc
jp
mov
insb
or
shlb
push
adc
mov
pop
iret
xchg
xorl
and
adc
lret
call
cld
daa
out
out
pop
add
out
lods
add
sub
push
aam
xchg
lcall
in
mov
add
mov
clc
cld
mov
sbb
out
lods
aas
pop
push
dec
mov
scas
xor
mov
adc
inc
cmp
mov
fldt
dec
imul
loopne
jo
loop
das
outsl
jle
popf
lret
inc
pop
popa
sbb
xchg
cmp
push
and
jbe
daa
test
lods
lock
lds
rcrl
shlb
mov
test
test
mov
rcrb
lret
jge
mov
lods
inc
push
pop
jl
jle
mov
aam
dec
jo
movsb
subb
pop
shr
hlt
mov
je
daa
push
add
aam
adc
jne,pt
sbb
inc
adc
sarl
jecxz
call
ret
xchg
aad
outsl
call
dec
ja
jmp
xchg
cli
pop
inc
adcb
sbbb
or
rclb
push
mov
sbbl
xor
xchg
loop
push
and
sub
xor
std
data16
dec
adc
pop
loopne
adc
push
lret
mov
fs
cmp
lret
xchg
mov
in
mov
mov
leave
and
inc
cmovnp
testb
adcl
xchg
mov
mov
mulb
aam
lcall
clc
cld
pusha
shrb
sbb
xchg
aaa
mov
roll
loope
aaa
into
cmp
aas
and
add
cltd
inc
xchg
loope
sub
aas
daa
test
adc
push
sti
test
test
rorb
mov
sahf
aas
mov
jno
add
mov
ror
xchg
pop
push
push
enter
pop
mov
push
cli
mov
scas
jbe
sar
test
sbb
rcrb
int3
jbe
mov
adc
ret
jae
jg
es
imul
fstpl
notl
mov
jns
movsb
popa
in
outsb
popf
jae
insl
jp
push
add
push
orl
dec
ja
mov
xchg
cmp
fidivl
insb
mov
lds
lahf
orb
inc
adc
mov
mov
stos
daa
scas
cs
mov
or
push
lcall
jae
es
insb
movsb
xor
and
jbe
add
sbb
sbb
in
xchg
roll
sub
xor
pusha
lock
shll
dec
loopne
test
or
and
sbb
aaa
fstpt
out
push
data16
fnstcw
cmpsb
sub
insl
sarl
cmc
dec
adc
push
mov
enter
pop
loope
fadds
es
cli
pop
loop
inc
adc
iret
ds
popf
adc
fs
inc
nop
inc
loopne
inc
adc
sti
xor
xor
mov
stos
fcmovnbe
aad
mov
push
rcr
sahf
cmp
popa
repz
cs
xchg
pop
jg
adc
mov
nop
cmp
test
jecxz
lods
jmp
in
mov
lret
mov
lock
insl
pop
hlt
jl
js
jecxz
jo
jle
push
fs
or
and
push
loop
or
push
test
jmp
bound
popf
push
sbbb
outsb
repz
aas
push
adc
or
rol
pop
cmpsb
sub
adc
mov
mov
dec
test
ret
fistpl
jns
orb
sub
add
mov
mov
je
mov
fldl
in
adc
in
adc
leave
pop
outsb
icebp
adc
inc
pop
mov
stos
and
sub
negb
cmp
or
or
pop
jle
jg
xchg
cmp
jnp
sub
sub
pop
add
cmp
int3
popf
xor
and
xor
sbb
loope
push
lds
sti
or
je
loopne
clc
insl
cwtl
cmp
inc
cmp
pop
scas
add
mov
xor
push
test
xchg
inc
ja
lods
subb
sahf
fistl
sub
and
mov
movsb
mull
ss
pop
cld
sub
jbe
jecxz
in
call
insb
add
test
xchg
cmp
xchg
jg
push
mov
jle
push
loop
mov
stos
inc
or
push
cmp
pop
shl
mov
testb
adc
xchg
and
xor
ja
mov
sub
ljmp
xchg
or
inc
cmp
jmp
hlt
fidivrs
pop
xchg
cmp
mov
aam
pop
push
add
lock
xor
or
aas
lahf
popa
xchg
inc
ds
jns
nop
andl
cltd
fisttpll
dec
insl
xor
icebp
out
cmp
mov
pop
sti
subb
pop
mov
cmpsl
mov
xchg
montmul
cmpsb
mov
dec
push
cltd
push
push
rcll
inc
les
test
ret
dec
dec
adc
pop
cmp
cwtl
or
inc
imul
nop
inc
nop
nop
jge
xor
mov
dec
cs
push
xchg
lods
sub
inc
xor
or
inc
rclb
nop
xchg
sub
jns
mov
push
mov
inc
inc
popf
inc
pop
xchg
cmc
pop
cmp
xchg
mov
imul
add
jbe
or
mov
mov
aaa
cmp
lret
xchg
and
inc
or
lods
sbb
mov
fs
mov
push
std
push
mov
jnp
sbb
orb
outsl
fistl
scas
jge
fdivrl
jns
imulb
xlat
xchg
lock
movsl
lret
imul
dec
or
pop
jp
test
dec
or
mov
jno
dec
dec
or
int
add
push
jae
rol
call
push
and
xchg
xor
es
mov
lods
orl
push
cli
jae
mov
mov
addl
repz
mov
mov
mov
popf
fsub
add
int3
add
aam
push
adcl
lea
dec
cwtl
cmp
shll
dec
sub
mov
push
in
push
pop
mov
mov
jl
jns
fists
jns
std
stos
sub
push
cld
lahf
adc
cmc
adc
mov
mov
into
dec
or
mov
pusha
jmp
movsl
jae
sbb
sub
jnp
cmp
outsl
mov
sub
cmp
inc
call
repnz
cmpl
addl
aas
js
jno
negl
arpl
imul
push
inc
or
leave
push
jne
and
xor
xchg
pop
push
cwtl
test
mov
orl
xor
jmp
out
fidivrl
sub
push
movsb
hlt
fimull
jns
imul
outsb
addb
jno
out
lock
adcl
mov
imull
xor
mov
push
iret
mov
rolb
xor
lcall
dec
adc
rolb
je
insl
pushf
mov
out
lock
pop
add
jb
pusha
je
mov
jbe
lods
call
mov
ss
out
lea
xchg
inc
test
in
pushf
fstl
jnp
push
out
and
negl
rorl
scas
hlt
push
test
ja
inc
sahf
aas
inc
jne
bound
mov
inc
inc
out
pop
int3
popf
rclb
xchg
mov
addr16
xor
xor
das
inc
pextrw
xchg
adcb
push
add
pop
pop
clc
mov
lock
mov
shll
add
xchg
fwait
addl
mov
push
xor
cmpsl
clc
xor
mov
cmpsl
sub
mov
push
dec
scas
adc
and
cmp
and
sub
jl
lock
and
pop
mov
xchg
rolb
inc
push
imul
popf
xor
dec
mov
scas
mov
sbb
dec
sbb
out
adc
es
nop
cmp
xor
enter
sub
mov
cmp
add
dec
pop
dec
das
adc
inc
mov
mov
jg
gs
cli
adc
jg
jle
cmpsb
cmp
mov
sub
dec
or
jb
orps
lcall
lock
mov
pop
sti
fistps
sub
leave
imul
push
mov
popf
xchg
pop
cmpsb
das
gs
xchg
jl
adc
add
jb
jns
adcb
iret
pop
or
xor
xor
lcall
stc
pop
cmc
out
test
xor
sbb
cmpsb
rolb
dec
mov
lods
xor
pusha
repz
cmp
jae
adc
dec
adc
push
scas
fadds
dec
pop
sahf
inc
and
aaa
ja
xor
popf
inc
bound
mov
or
lods
lahf
inc
mov
mov
inc
or
mov
jl
push
std
loope
loop
imul
inc
sarb
jge
lret
data16
dec
jno
dec
or
push
aaa
adc
call
lods
adc
mov
push
repz
jle
sbb
adcl
jle
enter
stos
adc
ss
insl
in
cld
pop
les
mov
and
push
push
hlt
pusha
scas
pop
jns
mov
xlat
jge
repnz
testl
aas
sahf
adc
mov
popf
fiaddl
ret
push
add
out
jbe
sarb
fdivrl
or
mov
xor
es
pop
mov
xchg
mov
cmp
sub
mov
sahf
nop
cmp
mov
leave
pop
jo
int
nop
inc
or
aam
jmp
outsl
repnz
rcl
aam
or
test
inc
pop
add
into
sarb
data16
ret
xorb
sbb
xchg
cwtl
pusha
test
stos
jle
fsubl
negb
or
push
xchg
mov
inc
or
fdivrp
popa
inc
cmp
push
mov
sarb
xchg
or
lcall
mov
xlat
insl
inc
mov
push
dec
sub
jb
xchg
mov
outsb
bnd
sbb
adcl
pop
sti
pop
cmpb
lret
jge
mov
in
rol
mov
xor
mov
mov
mov
mov
pop
sbb
mov
lods
sarl
jne
icebp
dec
dec
ret
pushf
and
mov
add
aad
cmpsb
daa
cmp
jg
das
sbb
sbb
dec
xchg
cmp
jg
bswap
sbb
out
aad
ret
add
jns
pop
int3
mov
lret
jb
dec
out
int
xor
mov
ret
dec
in
stc
xchg
inc
mov
cmp
sbb
pop
sbb
insb
cmc
xchg
stc
inc
push
test
xor
pop
fcmovnbe
jle
xchg
out
jb
pop
rorb
call
enter
jmp
scas
jno
sub
rorl
xlat
call
jae
and
mov
negb
test
lret
mull
fsubrl
pop
aaa
xor
gs
fcmovu
xchg
add
outsl
icebp
lods
push
inc
or
testb
nop
cmp
adcb
movsl
cmp
push
fidivs
jp
rorb
or
xor
daa
fdivrl
ds
or
fildl
nop
xlat
fdivrs
lret
mov
fs
cmc
loopne
std
jns
enter
fdivrs
push
xchg
fcoml
or
or
dec
or
push
xor
clc
cmp
leave
mov
mov
push
jno
addr16
fisubrs
in
jbe
jne
jnp
pop
cld
cmp
or
sbb
add
mov
fnstcw
lods
icebp
arpl
sub
jle
cmp
shll
jl
push
dec
or
and
inc
fidivl
cmpsb
popa
clc
xlat
outsb
enter
and
aad
sbb
add
rcrb
add
mov
dec
and
ret
xchg
lret
or
or
mov
icebp
popa
pop
insl
dec
sarb
add
faddl
and
or
jecxz
adc
lcall
js
aas
popf
mov
mov
cmp
push
push
sbb
push
xlat
das
mov
or
es
xchg
cmp
jo
out
cmp
xorl
dec
mov
push
clc
inc
mov
mov
mov
pop
push
xlat
fs
popa
mov
sahf
inc
pop
movsb
iret
xchg
int
arpl
push
shll
sub
push
lret
repz
insl
dec
jns
jge
sub
jge
xor
pop
cmp
mov
mov
sahf
sbb
jo
out
dec
jns
cli
sub
jnp
mov
mov
jns
fbld
mov
sbb
lock
bound
loopne
jne
mov
insb
jae
jge
xor
testl
addb
push
mov
popf
in
jmp
iret
mov
aam
in
jg
push
das
mov
movl
out
in
xchg
cmp
lret
pushw
les
mov
das
movsl
pop
jmp
mov
fcomps
int3
xchg
aaa
pop
out
into
xchg
cmp
call
jg
mov
negl
rolb
dec
mov
jge
pop
lock
sahf
aad
shlb
push
test
repz
lret
cld
inc
adc
dec
xchg
das
mov
shrb
call
lock
cmp
insb
pop
xsha1
cmpsb
dec
lea
les
mov
lds
push
inc
xchg
jp
popa
mov
xchg
flds
cwtl
or
pop
mov
or
pop
cmp
aam
pop
jecxz
iret
pop
repnz
jns
push
add
mov
je
cmpsb
push
ds
mov
stc
movsl
pop
repz
sbb
imul
sub
mov
rcll
repnz
mov
iret
adc
movb
and
in
inc
repnz
imul
xchg
adc
cmp
pop
test
xchg
cmp
mov
pop
in
push
mov
fisttps
lcall
and
mov
aas
cs
jns
push
pop
hlt
subl
adc
jle
mov
cmc
cltd
xor
sarl
add
dec
jnp
pop
icebp
push
pushf
aad
into
jne
xcrypt-ofb
cmpsl
out
repz
leave
xchg
sub
jae
mov
dec
xchg
das
mov
shrl
out
in
ret
icebp
mov
cmp
push
adc
mov
fisubs
jecxz
xor
pop
arpl
jecxz
mov
mov
xchg
xlat
add
out
pop
mov
pop
pop
cmp
aam
pop
in
mov
pop
repnz
lods
add
push
jmp
mov
jae
das
movsl
push
ds
mov
clc
mov
aad
dec
cmc
jp
daa
insl
repz
rclb
icebp
fwait
mov
int
xor
inc
out
aam
and
in
inc
repnz
insb
add
xchg
adc
cmp
lds
pop
test
jecxz
mov
pop
jecxz
push
mov
fisttpll
fwait
mov
cmpsb
cmp
fildl
inc
xlat
sub
dec
pop
cmc
subb
xchg
pop
mov
push
mov
hlt
lcall
dec
mov
icebp
push
fwait
insl
int
js
movsl
out
hlt
mov
xchg
sub
jb
mov
dec
xchg
xor
les
push
in
in
shl
repz
insb
add
adc
mov
jecxz
xor
pop
bound
imul
and
mov
mov
nop
add
in
and
aaa
jp
aad
pop
in
mov
pop
repz
stos
add
push
std
and
movsb
dec
ds
lds
repz
insl
dec
repz
and
inc
cwtl
das
js
adc
lret
adc
enter
imul
dec
out
aas
repnz
insl
add
xchg
adc
cmp
lds
ss
jecxz
mov
pop
loop
push
mov
fisttpl
pushf
mov
cmpsb
cmp
fiaddl
inc
fsubrs
pop
idivb
add
sarb
mov
repz
xor
inc
mov
repnz
cltd
xlat
outsb
lret
jno
adc
lds
stos
jo
mov
dec
xchg
xor
ret
imul
repnz
xor
adc
mov
fldt
in
cs
pop
pusha
or
and
and
mov
aas
loop
and
xor
push
in
mov
pop
hlt
sti
test
jl
dec
sti
and
mov
ret
mov
hlt
rclb
xlat
outsb
dec
icebp
jnp
and
mov
adc
leave
rdmsr
leave
inc
ljmp
xchg
cmp
outsb
add
roll
and
loop
adc
inc
lea
pusha
loopne
imul
add
jg
popf
xchg
ds
cmpsl
and
fdivrs
pop
mov
inc
fldcw
shl
jp
dec
pusha
idivl
add
sarb
mov
icebp
pushf
xor
lret
cmp
push
jbe
pop
repz
xchg
fsubrs
outsl
jp
mov
ret
cwtl
das
cmc
cmp
mov
dec
xor
shrb
fwait
loope
out
mov
outsb
add
inc
xchg
xchg
fldcw
in
sub
pop
pop
pop
insl
add
jg
jge
pop
mov
mov
add
add
and
xor
xlat
cmpsl
push
out
xchg
pop
cmc
stc
cmpsl
add
fcomps
jge
dec
stc
and
mov
sarl
into
adc
outsl
inc
out
jl
and
lea
mov
mov
lret
insl
sbb
call
insl
mov
push
in
adc
aaa
loopne
adc
inc
mov
dec
in
lods
lret
test
call
and
push
push
popf
test
test
pop
movsl
and
jle
pop
mov
inc
fldcw
shl
jnp
dec
pusha
idivl
add
into
ja
mov
out
pushf
xor
lret
sti
inc
mov
hlt
dec
xchg
fsubrs
outsb
jnp
mov
ret
hlt
cmp
insb
adc
xor
mov
fists
adc
add
inc
test
xchg
xlat
stos
inc
or
pop
pop
push
outsb
add
scas
pop
mov
mov
add
add
and
xor
movsl
push
out
test
pop
cmc
mull
jge
dec
clc
and
sahf
dec
inc
fdivrs
mov
test
fsubrs
out
jge
and
lea
mov
mov
lret
xlat
outsb
sbb
call
insb
mov
push
loop
adc
xor
push
lods
inc
mov
dec
out
stos
lret
subl
std
call
and
push
push
popf
subb
inc
pop
mov
pop
scas
cmc
inc
fldenv
shl
jl
dec
pusha
idivl
add
int3
jbe
mov
pop
leave
aas
cli
inc
mov
cmc
dec
xchg
fsubrs
insl
jl
lahf
out
lea
rcrl
push
mov
leave
mov
fstl
push
mov
outsb
add
aas
orb
aad
inc
pop
mov
out
sub
pop
pop
add
out
lods
pop
lea
into
add
ljmp
and
xor
fsubs
pop
div
movsb
add
adc
daa
imul
mov
pop
test
fnstenv
in
jge
push
testl
jmp
or
cmp
xlat
outsb
pop
pop
push
jmp
push
jo
loope
adc
xor
xor
push
push
lods
inc
mov
dec
out
test
insl
add
cld
jmp
and
push
pop
sahf
subl
and
pop
lods
hlt
inc
fisubl
inc
popa
clc
js
add
lret
je
mov
push
aas
clc
aas
mov
cmc
dec
xchg
fnstenv
imul
testl
imul
xor
mov
fcoml
or
outsl
push
pusha
or
stos
cmp
pop
xor
aam
inc
push
mov
out
daa
leave
pusha
pop
add
xor
push
lea
int
pushf
test
and
push
cld
leave
pusha
jb,pn
fldenv
les
cmc
mov
jg
dec
hlt
and
pushf
inc
inc
fdivs
mov
test
fidivl
ljmp
xchg
cmp
push
lods
call
or
outsb
adc
ss
mov
jno
loopne
adc
xor
xor
or
scas
inc
xchg
int3
arpl
jg
add
sti
ljmp
dec
or
pop
mov
pop
stos
repz
stc
jbe
add
push
xchg
adcb
jb
mov
sbb
inc
xlat
idivb
pop
testb
jno
imul
adc
ss
lods
adc
mov
mov
ficoml
or
jo
pop
or
and
shrb
loopne
lret
add
xor
jg
push
mov
cld
cmpsl
lods
inc
fstps
lret
jo
fisubl
ret
repz
adcb
repnz
and
xor
jne
mov
test
call
stc
nop
xchg
cmp
out
mov
int
loope
outsl
adc
jmp
xor
lea
jb
fiadds
nop
daa
xor
xor
or
inc
test
out
cmpsb
int3
arpl
jle
add
sub
mov
add
or
push
lahf
es
stos
icebp
inc
int3
out
incb
stc
je
add
pop
jno
mov
sbb
inc
fdiv
cmp
inc
mov
jno
push
clc
adc
lods
btc
xchg
mov
fnstenv
fcoms
or
jo
pop
or
lods
cmp
and
mov
lods
inc
add
lret
add
xor
jg
push
es
push
popf
cli
cmpsb
lods
inc
fcomps
and
bound
outsb
inc
ficompl
shlb
lahf
pop
sahf
rclb
adcb
icebp
and
xor
je
mov
clc
or
jb
out
push
sbb
nop
xchg
cmp
scas
in
mov
int
loopne
jo
pop
push
jmp
xor
mov
jb
faddl
nop
daa
das
fnstenv
lret
scas
inc
subl
call
jge
push
scas
imul
subl
dec
or
push
popf
es
test
lret
out
std
inc
stc
jb
push
popf
dec
xchg
adcb
jo
mov
sbb
inc
fxtract
cmp
inc
mov
jno
addr16
cltd
adc
push
lods
arpl
mov
lret
mov
fidivl
push
jmp
out
jo
pop
or
scas
cmp
and
mov
lods
inc
add
lret
pushl
xor
jg
push
es
push
popf
stc
movsl
lods
inc
xlat
sbb
bound
insl
inc
ficompl
mov
pop
sahf
iret
adc
mov
xchg
inc
inc
fidivl
mov
clc
lds
out
push
sbb
nop
xchg
cmp
scas
jecxz
mov
int
jo
push
push
jmp
xor
mov
or
test
daa
fdivs
lret
scas
inc
subb
call
aad
outsl
push
scas
imul
subl
dec
or
push
pushf
es
test
inc
fistpl
lret
cld
inc
stc
jno
push
popf
dec
xchg
adcb
outsl
and
mov
ret
repz
inc
mov
jno
data16
cwtl
fdivrp
adc
push
lods
bound
xor
mov
fidivl
aad
jmp
out
jo
pop
pop
pop
scas
cmp
and
mov
lods
inc
ljmp
lret
bound
jno
das
je
andb
pop
sahf
clc
mov
es
sub
popf
dec
jmp
stc
out
pushf
pop
sahf
int
sbbl
pop
fs
ss
inc
inc
fidivl
mov
clc
ret
or
jae
in
push
push
pop
cli
xchg
nop
aaa
popf
xor
mov
scas
loop
mov
into
xor
fnstenv
push
push
in
xchg
testl
mov
xchg
sub
dec
scas
inc
subl
int
aam
outsl
push
lods
cmc
jmp
daa
into
lea
dec
or
push
fwait
daa
mov
cmpsb
in
inc
fcompl
enter
aas
arpl
jo
push
popf
dec
xchg
sbbl
sahf
in
ss
rolb
aaa
mov
clc
inc
mov
jb
fs
xchg
nop
popf
xor
xor
scas
popa
or
mov
fidivl
aam
ljmp
jno
pop
add
es
push
xor
inc
test
int3
arpl
jno
sub
dec
es
lahf
mull
daa
mov
imul
inc
jmp
cli
out
lcall
inc
in
and
aaa
xchg
ds
fisubrl
mov
clc
rorl
je
loop
push
adc
sti
xchg
xor
sbb
mov
fcmovnu
jo
push
push
in
xchg
testl
mov
xchg
sub
xor
add
es
call
sarl
push
stos
hlt
in
andl
lea
inc
or
push
cltd
sub
movsb
jmp
fstpl
call
sti
outsb
sbb
sahf
dec
popl
mov
adc
inc
xor
stc
inc
mov
jae
bound
xchg
or
sbb
cmp
rclb
mov
nop
loop
jb
push
add
scas
xor
nop
daa
test
lret
cld
cmpsl
push
jmp
sbb
jb
sub
andb
or
rcll
sub
and
inc
fstpl
mov
or
aas
ljmp
xchg
cmp
fldt
mov
stc
mov
loopne
pop
adc
xchg
lea
sahf
xor
filds
cmp
xor
fidivl
push
push
out
test
pop
movsl
jne
xlat
jg
lods
mov
xchg
sub
shlb
add
jle
push
jmp
shll
pop
test
in
test
mov
jbe
lods
inc
dec
xchg
sub
enter
mov
jmp
cld
insb
pop
or
mov
loopne
cmp
mov
mov
cli
aas
xchg
je
pusha
sbbl
or
mov
pop
mov
into
scas
pop
fdivl
rclb
add
jae
push
add
mov
jne
sub
enter
movsl
push
in
sbb
gs
divl
sub
andl
or
iret
adc
rolb
and
ficomps
mov
or
cmp
pop
mov
fsubrl
rclb
arpl
mov
fiadds
xchg
mov
lahf
arpl
push
mov
cmp
das
fcomp
jb
push
push
out
subb
nop
pop
mov
pop
scas
scas
notb
int3
add
dec
jl
push
ljmp
jno
cmpsl
lock
test
leave
es
inc
or
dec
xchg
sub
outsl
int3
arpl
ret
ljmp
push
or
mov
fisubs
fsubr
xor
sti
ds
je
pop
sbbb
xlat
sti
xchg
or
sbb
cmp
lods
pop
fnsave
push
in
ljmp
or
sbb
cmpsb
push
aaa
into
add
inc
stc
mov
iret
dec
cmc
jae
daa
outsb
in
test
rorl
repnz
scas
inc
int
sub
inc
out
int
and
fists
mov
or
cmp
daa
mov
nop
cmp
imul
loopne
faddl
xchg
mov
lahf
ss
stos
sbb
faddl
cmp
cs
push
pop
out
subl
jbe
aam
pop
scas
lods
cmc
xchg
sub
iret
xor
dec
jnp
push
ljmp
jno
movsl
out
out
test
es
inc
or
jae
scas
inc
dec
xchg
sub
lds
arpl
shr
repz
imul
sbb
mov
fsubr
xor
push
bound
fs
cmp
fidivs
pop
sbbb
cld
xchg
or
sbb
ss
iret
lods
push
fnsave
push
in
stos
sti
xchg
fcompl
jne
push
std
sbb
movsl
dec
aaa
into
add
dec
clc
mov
shlb
repz
and
inc
xchg
sub
or
icebp
cltd
scas
inc
lret
adc
ret
int
push
gs
loopne
aas
jmp
jno
addr16
call
or
mov
ss
fsubl
ret
mov
mov
fiaddl
xchg
mov
sbb
push
mov
cmp
sub
dec
pop
lock
nop
pop
mov
pop
scas
stos
hlt
xchg
sub
int
int3
incb
dec
jns
push
jmp
lcall
mov
lds
movsb
jno
scas
inc
dec
xchg
sub
ret
imul
popf
in
loopne
mov
addr16
adc
mov
mov
fucomp
rcrl
gs
cmp
sbbl
aam
xchg
push
scas
mov
mov
add
push
xor
cmp
stos
push
fidivs
lret
push
out
cld
test
xchg
ficompl
sbb
mov
les
in
rclb
shrl
icebp
je
and
xchg
mov
mov
leave
adc
inc
ljmp
xchg
cmp
push
mov
cmp
sub
lea
frstor
ret
pop
loopne
fs
mov
loop
xor
sbbb
push
add
pop
cmpsl
push
mov
jle
push
mov
cmp
sub
fdivl
dec
pop
icebp
jge
cli
xchg
push
sahf
js
sarb
scas
test
lret
cmp
pushf
leave
mov
cmp
push
nop
xor
pop
lcall
cli
scas
cmp
and
pushf
push
add
ljmp
fstl
lcall
ja
ret
cmp
int
test
dec
dec
bound
mov
out
test
into
in
jnp
mov
add
dec
ret
add
mov
adc
aam
movzbl
insl
inc
xor
inc
push
mov
sar
out
jl
repnz
push
sbb
in
push
mov
cmpsb
cmpl
push
cmpsb
jns
aaa
cmp
inc
cli
ret
lret
test
rcrb
out
jb
lods
sti
sbb
loope
sbb
nop
jp
int3
push
ret
jo
aam
int
fldenv
fnsave
push
sub
mov
xlat
je
mov
jp
test
lds
les
fwait
xchg
lock
jnp
cmpsl
rep
pop
cmpsb
fisttps
push
sub
popa
push
mov
mov
jmp
pop
sub
push
movl
ljmp
and
test
mov
xchg
aad
cmp
icebp
mov
movsb
push
mov
aad
sub
repz
loopne
stos
adc
lret
dec
fcomps
inc
inc
inc
fisttpll
inc
mov
jle
repnz
nop
jl
lret
pop
or
mov
lret
dec
push
cmp
adc
bound
addr16
hlt
inc
shlb
jle
dec
sub
push
out
imul
mov
xchg
addr16
sub
mov
dec
inc
inc
push
pop
in
or
push
adc
imul
adc
xorl
loop
jg
fcompl
sbb
adcl
popa
sbb
pop
xchg
adc
nop
outsb
sbb
fwait
jb
and
test
arpl
mov
jg
lcall
jg
xchg
movl
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
push
pop
das
sub
maxps
movsl
xor
xor
mov
add
push
xchg
jp
fldcw
loope
push
orb
mov
loope
rcll
adc
aad
adc
outsl
xchg
rorb
insl
inc
insl
xchg
mov
inc
imul
cmp
sbb
or
cmpsb
mov
jnp
loopne
stos
xchg
jns
int3
cmpsl
pop
mov
psubb
push
cmp
or
cld
cmp
dec
ljmp
or
push
adc
addr16
sti
push
ss
andb
sbb
outsl
xor
aam
loopne
push
insb
xchg
push
test
xchg
insb
push
dec
or
loope
enter
jp
cmpb
jge
adc
cmp
mov
ljmp
je
or
mov
push
in
dec
sub
mov
sub
or
xor
lock
cli
inc
loope
pop
into
mov
add
push
sbb
dec
iret
mov
or
mov
stc
outsb
outsl
iret
xor
test
push
adc
add
mov
pop
pop
inc
inc
xor
stc
psadbw
lret
mov
divb
pusha
nop
lret
sub
jns
cmp
into
and
repz
clc
and
pop
mov
es
push
gs
sub
out
sahf
aaa
scas
pop
lds
dec
dec
add
lcall
jmp
dec
int3
pop
popa
push
outsb
push
mov
test
cmpsl
mov
test
scas
xor
pop
cmp
loope
xchg
test
cmc
lods
adc
add
xor
mov
mov
fbstp
mov
push
cmpsl
xor
and
pop
scas
enter
xchg
add
and
sub
insl
clc
add
ds
hlt
lcall
inc
pop
jp
imull
out
jl
adc
fstpt
jno
daa
push
out
leave
mov
sub
inc
into
cltd
mov
mov
shll
xlat
mov
stos
dec
in
dec
xchg
insl
push
aaa
add
lret
stc
xchg
int3
iret
mov
cwtl
dec
xchg
mov
xor
ret
mov
lret
hlt
or
aaa
out
mov
ss
lret
cmp
std
les
lret
ja
jmp
cltd
push
fldenv
out
adc
add
lds
lea
insl
sbb
std
jp
jmp
or
cmpsb
lock
stos
pop
lods
xchg
jo
notl
adc
stos
lea
jae
insb
shll
pop
incl
adc
in
out
mov
loopne
pop
and
push
icebp
xor
xor
aad
imulb
shrb
mov
ljmp
test
add
cmp
in
sbb
loop
push
mov
jmp
cmpsl
in
mov
call
nop
jno
mov
mov
dec
mov
dec
mov
mov
cmp
shll
aaa
orb
fbld
pop
les
inc
mov
mov
mov
sti
into
xor
std
icebp
jbe
xchg
cmp
je
cmp
fnstenv
adc
out
fidivs
test
cs
scas
mov
sub
mov
ljmp
daa
mov
cmp
daa
mov
push
cmpsl
xor
mov
movsl
cld
mov
ja
pop
mov
pop
mov
cli
out
cli
lock
mov
das
add
aam
das
pop
pusha
fcoms
sahf
bound
cmp
xchg
cli
and
fldl
dec
mov
cmp
mov
stos
xchg
dec
cmp
push
jo
jmp
cmp
pop
lods
lods
das
je
aad
rcrl
sub
daa
mov
xor
cmpsl
std
jl
add
mov
cmpb
mov
outsl
js
adc
test
pop
in
inc
ret
and
mov
sub
cmpsl
pop
icebp
int3
daa
lea
xor
cmp
inc
add
mov
mov
mov
jp
sub
xlat
cmpsl
xor
sahf
pop
mov
add
icebp
test
inc
push
js
adc
jo
jno
pop
or
iret
mov
push
mov
xlat
dec
scas
push
mov
lods
repz
inc
std
and
add
or
dec
sub
sbb
rorb
mov
pop
bound
cli
repz
xchg
add
cwtl
into
clc
jg
insb
sarb
sub
xor
dec
push
inc
mov
push
push
inc
repnz
pop
arpl
adc
psrld
xor
jns
mov
pop
insb
xchg
mov
out
shlb
jno
and
fdivl
lods
add
adc
iret
mov
jbe
mov
fst
in
lahf
daa
cmpsb
mov
pop
dec
fs
sub
mov
pusha
pop
and
sub
push
std
pop
xchg
sub
scas
lods
add
jno
gs
out
jne
arpl
xor
add
xchg
add
mov
mov
cmpsl
add
add
fs
mov
sti
lock
cmpsl
pop
fmulp
jns
test
testl
sub
inc
cld
insl
pop
movsl
bound
scas
xor
pop
mov
mov
push
mov
cli
int3
lods
mov
out
aam
lret
cli
jno
push
je
mov
xchg
fiadds
inc
or
mov
sub
sarl
pop
notb
pop
inc
sbb
lea
in
mov
sbb
xchg
mov
sub
inc
add
in
lahf
sbb
incl
cmp
enter
std
mov
lods
xchg
aad
les
inc
sti
pop
mov
mov
dec
push
or
mov
idivl
ret
lret
and
fnstcw
mov
out
out
rol
dec
es
sbb
dec
cmp
and
xor
xchg
mov
mov
push
fwait
inc
dec
popa
adc
out
sahf
push
inc
popa
addr16
ficomps
mov
pop
mov
jnp
negb
mov
mov
dec
cltd
jno
adc
mov
ljmp
int3
dec
call
movsb
sahf
pop
ljmp
jbe
push
mov
daa
fildll
xor
imul
stc
add
fcomp
cwtl
mov
push
std
and
into
cmpsl
lods
outsb
fnstcw
dec
int
cltd
xchg
xchg
addr16
pop
loope
xlat
sarb
jns
jge
popfw
outsb
ret
dec
add
dec
add
lahf
dec
add
mov
mov
lret
scas
add
scas
lret
stos
sub
push
dec
adc
fs
gs
out
xchg
push
dec
and
andb
pop
jo
sub
and
lcall
