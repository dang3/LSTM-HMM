push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
lcall
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
add
jmp
stos
xor
mov
mov
pusha
call
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
jmp
ret
std
xor
mov
cld
add
mov
mov
shl
sub
mov
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
mov
jbe
mov
popf
dec
call
add
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
pop
lea
sub
sub
mov
pop
mov
mov
lea
mov
push
mov
xorl
pop
sub
or
push
pop
xor
movl
add
and
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
sub
cmp
jne
mov
pop
add
jmp
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
out
add
scas
and
add
and
add
and
add
and
add
add
mov
and
add
add
into
and
add
and
add
and
add
add
andb
add
add
fsubs
add
xor
add
nop
and
add
and
add
add
add
add
enter
mov
add
xchg
and
add
and
add
add
mov
and
add
add
push
and
add
add
inc
and
add
add
add
and
add
and
add
add
and
add
add
add
add
add
add
and
add
add
add
add
push
add
add
add
add
and
add
add
mov
add
add
add
add
add
nop
and
add
add
add
add
jle
add
movsb
and
add
and
add
and
add
and
add
and
add
add
mov
and
add
add
into
and
add
and
add
and
add
add
andb
add
add
fsubs
add
xor
add
nop
and
add
and
add
add
add
add
enter
mov
add
xchg
and
add
and
add
add
mov
and
add
add
push
and
add
add
inc
and
add
add
add
and
add
and
add
add
and
add
add
add
add
add
add
inc
imul
insl
gs
insb
outsl
jae
add
add
je
jb
jbe
je
push
jb
imul
push
add
inc
jne
jb
outsb
je
push
add
out
inc
gs
imul
bound
gs
add
ret
gs
jne
jb
outsb
je
jb
arpl
jae
jge
dec
jo
outsb
dec
jne
gs
add
repnz
imul
jb
je
arpl
add
dec
add
insb
outsb
inc
add
dec
add
popa
insb
dec
outsl
arpl
cmpsb
add
je
gs
imul
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
fs
imul
add
push
add
outsl
jae
dec
popa
outsb
fs
add
popa
je
inc
jbe
outsb
je
add
roll
dec
gs
jo
jb
add
data16
je
je
dec
popa
outsb
fs
add
aad
inc
gs
gs
inc
imul
gs
jb
jbe
push
jns
gs
add
add
popa
jo
gs
jb
jns
push
push
je
imul
inc
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
push
dec
inc
dec
xor
cs
insb
add
lods
add
gs
insb
inc
bound
je
add
add
je
popa
arpl
outsl
outsb
inc
add
adc
inc
insb
insb
push
outsb
jb
imul
jb
gs
sbb
insb
imul
outsl
outsb
add
add
addr16
jne
jb
inc
imul
push
je
inc
push
add
inc
jb
add
mov
push
dec
inc
gs
gs
imul
push
dec
inc
gs
popa
insb
insb
outsl
arpl
pop
add
addr16
imul
addb
dec
inc
gs
popa
insb
insb
outsl
arpl
push
add
addr16
arpl
jo
inc
imul
push
gs
popa
addr16
outsl
js
add
push
dec
inc
dec
dec
xor
cs
insb
add
add
dec
inc
outsl
outsb
imul
popa
push
outsl
jne
arpl
add
push
push
dec
dec
outsb
jae
popa
insb
insb
inc
jb
jbe
jb
add
add
dec
dec
outsb
jae
popa
insb
insb
dec
inc
inc
inc
add
add
inc
gs
jbe
imul
imul
dec
inc
inc
inc
inc
push
xor
cs
insb
add
add
inc
push
dec
xor
push
inc
arpl
outsl
insb
add
dec
push
inc
push
dec
xor
fs
insb
add
pop
lret
mov
mov
loopne
jnp
rolb
adc
xchg
and
repz
movsb
mov
inc
xor
stos
push
scas
push
les
lods
or
fsubl
aam
lds
xor
test
mov
repz
xchg
sbb
int
imul
popa
mov
andb
pushw
jecxz
xor
rcl
lcall
fst
ficoml
lret
push
sub
adc
adc
push
fistpl
std
xchg
fistpll
sahf
xor
sbb
insb
add
xchg
bound
cmp
ret
add
xchg
rol
mov
inc
adc
enter
mov
sar
mov
mov
inc
mov
mov
ret
mov
out
rcrb
addl
test
ret
mov
xchg
fsubrl
mov
xor
enter
lea
xchg
jl
clc
mov
mov
out
sbb
inc
test
or
sti
pop
cld
mov
cmpsl
out
es
movsb
sub
sub
outsl
push
rorl
test
inc
xchg
jmp
xor
es
aaa
mov
ljmp
jnp
out
and
shlb
cmp
aas
adc
cmpsl
cmp
pop
repnz
loopne
sub
loop
jno
pushf
push
pop
mov
push
int
mov
cmp
and
es
hlt
or
aaa
mov
push
or
mov
ss
push
add
cld
les
jae
in
jb
inc
je
daa
mov
xchg
nop
nop
or
mov
popf
int
add
and
pop
pushf
dec
mov
icebp
jecxz
adc
rcr
adc
mov
sbb
dec
mov
dec
addb
xchg
pop
jl
xor
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
jno
add
add
add
add
add
xchg
add
test
add
mov
or
add
mov
add
ss
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
push
sub
sub
xchg
xchg
xchg
add
lods
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
stos
lods
stos
mov
mov
lcall
jle
add
jp
lods
stos
stos
add
cmpsl
push
mov
mov
mov
ret
leave
lret
lret
int3
int
rcl
shr
rcl
shl
iret
ror
hlt
int3
int
hlt
mov
leave
out
mov
mov
mov
lods
stos
lea
fwait
lcall
add
add
add
push
add
add
add
add
add
add
add
add
mov
sahf
add
mov
jae
mov
out
leave
lret
rcl
cld
fcom
fdivr
fcom
fdivr
xlat
xlat
aam
rcl
sar
into
into
into
aam
dec
rcl
inc
mov
mov
iret
mov
mov
and
add
push
add
add
add
add
add
add
add
add
lods
lods
lods
add
scas
lods
sbb
mov
jnp
mov
sar
lret
call
rcl
aad
aam
xlat
xlat
call
xlat
call
aam
dec
into
int
int3
into
int
aam
aad
int
int
mov
mov
mov
std
test
cmpsl
ljmp
pop
or
inc
add
add
add
add
add
pop
add
add
add
add
add
add
pop
pop
push
add
dec
add
push
add
or
inc
or
sbb
push
add
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
enter
into
call
rcl
fcom
xlat
call
fcomp
call
aam
dec
into
int
lret
lret
lret
int
inc
rol
mov
mov
ljmp
mov
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
push
push
imul
pop
pop
pop
fs
ds
das
push
movntps
push
sbb
aaa
cmp
cmp
sub
and
adc
push
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
mov
dec
leave
enter
sar
aam
call
aad
call
rcl
dec
enter
mov
ret
ret
mov
mov
ljmp
movsl
movsl
popf
sahf
popf
xchg
xchg
xchg
lcall
addb
add
inc
add
add
add
add
add
add
add
add
add
adc
add
or
add
push
add
outsl
xor
jge
jg
jge
jo
jno
bound
mov
cmp
cmp
inc
inc
inc
mov
outsl
outsb
jo
bound
pusha
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
mov
dec
leave
lret
enter
ret
mov
mov
ljmp
movsl
mov
call
xchg
xchg
xchg
xchg
xchg
lcall
lahf
aas
ds
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
outsb
jo
pop
pop
pop
or
jp
mov
xchg
xchg
xchg
incb
jp
idivb
jp
outsl
outsl
outsl
out
addr16
fdivs
jae
jle
jg
jns
jns
fs
inc
cmp
pop
sbb
adc
adc
lods
lods
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
cmpsl
cmpsl
lcall
incl
addl
xchg
xchg
xchg
mov
mov
xchg
mov
jns
jp
das
das
cs
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
jno
fwait
sahf
in
mov
mov
addb
decb
xchg
loope
jno
enter
mov
addb
xchg
addr16
cmp
ss
jle
cmp
mov
test
lods
sti
lods
stos
lods
lods
lods
lods
test
movsl
movsl
std
fwait
lcall
xchg
jle
jns
jns
jnp
jns
mov
xchg
movsb
mov
mov
mov
mov
mov
mov
mov
lods
scas
stos
xchg
push
adc
add
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
xchg
incl
xchg
mov
xchg
std
xchg
xchg
cwtl
stc
xchg
xchg
xchg
in
mov
or
addb
mov
push
push
or
inc
inc
dec
insl
insl
insl
jl
test
leave
lcall
out
cltd
lcall
mov
incl
mov
lcall
ljmp
mov
mov
mov
mov
std
mov
mov
movsl
movsb
mov
or
add
add
pop
pop
adc
scas
call
fwait
xchg
xchg
incl
xchg
decb
xchg
xchg
pushf
sahf
popf
std
movsl
movsl
mov
out
xchg
xchg
xchg
in
nop
xchg
nop
in
xchg
push
jne
push
or
inc
or
or
daa
daa
push
dec
dec
dec
data16
jo
mov
xchg
rclb
xchg
std
lea
call
lahf
lahf
jmp
test
lods
pushl
lahf
scas
mov
xchg
mov
mov
ljmp
mov
add
pop
pop
adc
mov
jmp
sahf
xchg
pushf
decl
mov
nop
xchg
xchg
call
xchg
xchg
pushf
sahf
popf
movsl
movsl
movsb
test
test
movsb
movsl
movsl
notl
jp
movsl
push
push
push
outsl
dec
dec
dec
popaw
pusha
bound
je
mov
jge
addl
int
xchg
xchg
in
xchg
xchg
testl
mov
jmp
mov
mov
pop
mov
xor
ja
mov
movsb
mov
mov
stos
stos
mov
movsb
movsb
add
mov
add
pusha
adc
mov
ljmp
pushf
decl
call
xchg
xchg
call
xchg
fwait
lcall
lahf
mov
mov
stc
xchg
cwtl
fwait
out
xchg
xchg
nop
xchg
xchg
les
lcall
mov
stc
xchg
test
std
xchg
je
lcall
jmp
inc
jge
mov
jp
mov
jae
mov
outsl
ljmp
adc
stos
or
or
pushl
mov
mov
pushf
movsb
mov
movsb
add
pop
pusha
adc
mov
ljmp
lahf
call
xchg
xchg
lcall
pushf
pushf
lcall
sahf
sahf
lcall
xchg
xchg
call
xchg
xchg
call
cltd
cld
cwtl
xchg
pushf
stc
lahf
lcall
popf
mov
xchg
push
xchg
pop
jg
xchg
dec
js
cltd
cmp
imul
pop
imul
mov
adc
ljmp
adc
stos
adc
scas
adc
mov
push
mov
imul
mov
fwait
scas
mov
scas
lods
scas
mov
movsl
movsl
add
add
add
add
add
pop
pop
adc
mov
ljmp
popf
call
sahf
pushf
lcall
mov
movsb
jmp
xchg
xchg
decl
mov
mov
mov
xchg
ja
lcall
xchg
dec
jp
xchg
cmp
insl
decl
pop
decl
add
pop
lcall
push
pop
ljmp
sbb
pushl
sbb
outsb
mov
and
and
shlb
mov
xchg
lods
mov
lods
lods
mov
lahf
mov
movsb
add
pop
pop
adc
scas
mov
shll
sahf
pushf
popf
jmp
cmpsb
jmp
test
jmp
fwait
popf
call
pop
js
mov
decl
popa
decl
push
pop
incl
add
incl
add
mov
pop
call
add
cltd
add
sahf
add
cmpsl
or
mov
outsl
pushl
sub
mov
sub
ret
inc
sub
dec
das
cmp
movl
sarl
mov
mov
mov
add
add
add
push
push
adc
test
ljmp
lahf
jmp
stos
test
ljmp
mov
scas
lods
scas
jmp
mov
xchg
arpl
test
pop
incl
pop
push
incl
add
test
push
incl
push
decl
add
xchg
add
cltd
add
lahf
add
add
scas
adc
mov
cmp
inc
cmp
int3
cmp
call
cmp
call
cmp
dec
mov
std
mov
mov
movsl
movsb
movsl
push
mov
mov
add
add
add
mov
dec
dec
adc
mov
mov
mov
test
ljmp
mov
pushl
mov
pushl
stos
lods
lcall
es
mov
push
decl
xorps
mov
push
incl
add
mov
push
decl
add
xchg
add
popf
add
mov
add
lods
add
jno
ret
cmp
int3
inc
call
inc
call
inc
fmuls
call
dec
xchg
fisttpll
ficoml
call
test
std
mov
mov
movsb
mov
sahf
or
add
add
add
add
dec
dec
adc
jp
movsl
lahf
mov
jmp
stos
stos
pushl
mov
pushl
mov
mov
mov
jmp
ss
decl
sbb
nop
sbb
mov
pop
decl
or
mov
push
call
add
popf
add
add
cmpsl
add
test
pop
gs
mov
dec
mov
aad
xchg
call
push
cltd
ficoml
fcompl
ficomps
ficomps
jmp
pop
lahf
jmp
pop
mov
fadds
ret
mov
mov
jne
lahf
sahf
or
xchg
xchg
cwtl
add
inc
adc
jns
sahf
lcall
mov
lods
lods
pushl
mov
mov
mov
mov
ljmp
inc
je
xchg
and
and
call
call
or
call
add
cltd
add
mov
add
stos
add
mov
fs
mov
xor
call
pop
cltd
fldenv
fisubs
fisubs
in
test
in
cmpsl
jmp
test
push
call
stos
fldl
ret
mov
cmpsl
mov
sahf
lahf
add
inc
inc
adc
jae
cltd
xchg
lcall
fwait
sahf
ljmp
mov
pushl
mov
mov
mov
mov
jle
xchg
sub
lcall
call
sbb
pop
call
add
mov
add
stos
add
mov
pushl
call
inc
fsubl
jmp
outsl
stos
jmp
outsl
lods
jmp
jo
ljmp
in
jne
out
jbe
in
jbe
out
je
jmp
mov
mov
test
lcall
mov
add
add
add
jg
cmp
insl
insl
js
lea
lcall
mov
mov
mov
mov
mov
mov
mov
cmpsl
lods
lcall
jo
sahf
cmp
mov
xor
cltd
push
callw
pop
jmp
add
add
mov
popa
pushl
add
enter
fsts
jecxz
mov
call
jge
in
cmpb
icebp
cmpb
repnz
push
cmpl
inc
mov
test
daa
lahf
sahf
sahf
add
add
add
pusha
add
aaa
cmp
pop
pusha
pop
jne
jg
out
test
xchg
xchg
xchg
pushl
mov
mov
inc
rol
ret
ret
ret
ret
sar
mov
lcall
cmp
mov
inc
jge
movsl
ss
cltd
pop
call
add
movsl
add
add
lods
add
mov
gs
mov
add
call
daa
cmp
movsl
ljmp
in
mov
push
nop
ret
nop
ret
push
xchg
xchg
ret
push
xchg
push
mov
out
nop
sar
mov
inc
ret
stos
lods
stos
mov
sahf
sahf
xor
popf
add
add
add
inc
cmp
push
inc
dec
inc
jb
pop
dec
in
imul
nop
pushl
mov
mov
inc
ret
mov
mov
jle
lcall
dec
cmp
dec
test
mov
punpcklbw
cltd
add
mov
add
lods
add
mov
mov
add
leave
add
mov
out
mov
out
xchg
ret
push
lcall
repnz
lcall
stc
popf
lret
cli
sahf
int
sti
lahf
int
cli
lcall
fidivrs
enter
mov
lahf
sahf
mov
add
add
add
das
das
or
cmp
jecxz
pusha
pusha
decl
mov
mov
mov
mov
inc
mov
sar
mov
ljmp
push
xchg
mov
push
pop
lcall
pop
ljmp
popa
mov
add
enter
rorl
jbe
loopne
xchg
out
mov
push
movsl
int
mulb
iret
cld
cmpsl
sar
cli
movsl
into
cld
test
iret
stos
iret
std
test
push
popf
jmp
mov
dec
lret
mov
mov
lahf
sahf
lahf
dec
xchg
xchg
xchg
add
lcall
xor
xor
sub
or
inc
bound
push
xlat
je
jo
mov
sarb
mov
ret
ret
ret
dec
leave
inc
rol
mov
cmpsb
jmp
push
mov
scas
dec
xchg
mov
add
jmp
add
mov
arpl
mov
add
into
add
fadds
je
fists
jl
out
pop
cmpsb
push
lahf
lret
cld
lods
aam
cli
scas
cli
mov
cli
mov
mov
std
mov
mov
mov
mov
cld
mov
push
movsl
jmp
mov
call
leave
int
mov
mov
lahf
mov
xchg
or
add
add
push
add
dec
dec
outsb
outsb
outsl
mov
mov
fcom
jmp
xlat
fdiv
rcl
sar
int3
int3
int
lret
lret
lret
dec
lret
lret
inc
enter
mov
mov
lods
push
mov
lods
cmp
jmp
add
add
mov
arpl
mov
add
rolb
outsl
fadds
je
filds
je
ljmp
cld
scas
aad
cld
mov
cld
mov
fdivr
std
mov
xlat
cld
mov
xlat
mov
fcos
clc
mov
jmp
mov
call
leave
into
mov
sahf
mov
or
add
add
xor
add
add
or
leave
movl
call
out
loope
loop
fsub
fcmovnu
fcomp
xlat
cli
xlat
fdivr
int
sar
mov
imul
jmp
add
mov
popa
mov
add
lret
add
aam
jno
fildl
jne
in
js
in
xor
cld
mov
std
ret
inc
loopne
inc
inc
loopne
dec
fdivrp
inc
std
std
enter
leave
loopne
cld
mov
lret
lret
mov
mov
xchg
adc
add
add
std
incl
std
incl
incl
hlt
div
or
out
jmp
in
in
out
sub
out
out
dec
ljmp
xchg
call
out
aad
jmp
mov
xchg
cmpsb
cmp
mov
add
test
add
mov
add
int3
add
xlat
add
filds
jbe
jmp
inc
fwait
cli
mov
loop
std
lret
loop
dec
in
dec
in
std
int3
jecxz
dec
loope
dec
loop
dec
in
dec
in
shl
shl
cld
out
mov
inc
ret
ret
cmpsl
cmpsl
mov
cwtl
cwtl
add
add
add
std
incb
std
std
add
stc
testb
hlt
repnz
repnz
push
out
lock
pop
out
repnz
in
in
pop
loop
les
sti
sahf
and
jmp
add
lods
add
mov
gs
add
enter
roll
jno
fiaddl
je
in
jns
jmp
jl
negl
sti
mov
shl
std
shl
call
out
call
out
shl
std
out
call
out
std
xlat
out
std
fldl2e
dec
loopne
repz
in
fcos
lret
repz
xchg
xchg
and
xchg
xchg
add
sti
add
std
clc
add
cli
stc
add
div
or
aam
mov
jae
negb
add
cmpsl
add
scas
add
mov
add
lret
call
add
fldl
ja
out
ja
out
sbb
clc
je
cli
cld
xlat
ljmp
fldlg2
fucomi
fucomi
fsubr
std
fucomp
std
fsubrp
std
fsubrp
std
loopne
cld
aam
push
ret
aam
out
fdivr
iret
iret
sar
lods
lods
lods
lods
xchg
xchg
xchg
outsl
outsl
jo
xchg
xchg
xchg
add
loopne
add
leave
sbb
stos
jl
repnz
ljmp
add
mov
add
int
outsl
call
add
fiadds
je
ljmp
sti
mov
std
aam
std
fsubrp
fsubr
fucomi
fucomi
call
jmp
cld
aam
cld
shl
cli
shl
push
into
fdivrp
clc
lret
fdivrp
cmc
rcl
in
mov
fcos
xlat
xlat
sti
mov
mov
cltd
lcall
fwait
cltd
cltd
add
xlat
aad
mov
rol
lods
mov
lcall
add
mov
fs
mov
add
iret
add
xlat
add
loope
jp
call
aaa
xchg
sti
xchg
cld
enter
lret
cld
clc
mov
aad
hlt
mov
into
push
mov
into
ljmp
ljmp
cli
ljmp
cmc
fsubrp
mov
mov
xchg
add
add
add
int3
add
rol
mov
movsl
loopne
xor
jmp
add
mov
addr16
mov
add
int3
push
jo
rorl
fsts
jns
loope
cmp
jmp
scas
int3
ljmp
std
loopne
ret
cld
loopne
cli
fnsave
lock
int
iret
fsubp
rcl
shl
xlat
fcmovb
out
loopne
in
in
test
out
out
popf
call
lret
lods
stos
stos
adc
cmpsl
test
add
ret
mov
ret
ret
pop
mov
stos
aam
dec
jg
pushf
sbb
cmpsb
sbb
jb
mov
ja
mov
inc
xchg
ret
push
mov
lret
test
mov
shll
rcl
mov
lret
rcl
int3
mov
into
shlb
rcl
jg
jb
gs
in
call
in
jmp
repnz
cmc
sub
cmc
cmc
and
lock
sbb
fcmovnu
or
mov
into
add
add
add
rolb
mov
test
fwait
cmc
mov
je
ljmp
mov
sarb
test
mov
pushf
leave
ror
int
lret
jp
int3
shlb
iret
rclb
rcl
dec
aad
aad
aam
aam
aad
xlat
daa
ficompl
fcmovnu
ficoms
fucom
loope
loopne
in
out
ljmp
cld
cmc
add
std
sti
add
std
incl
std
add
mov
mov
mov
stos
mov
mov
mov
mov
mov
ret
kandw
mov
daa
int3
ror
and
aad
sbb
aam
adc
aam
aam
aad
aam
fadds
fstp
add
add
in
add
in
jmp
add
std
add
mov
add
ret
ret
sub
mov
mov
push
ret
or
leave
movl
int3
lret
add
aam
add
xlat
add
aad
aam
add
aam
add
fsub
add
aad
add
loopne
add
fstp
add
in
add
icebp
repnz
incl
std
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
ret
ret
mov
mov
mov
ja
test
test
xchg
xchg
xchg
pop
add
add
add
add
add
add
mov
mov
mov
mov
sarb
aam
into
into
jmp
aad
cmc
aam
sar
iret
into
into
cli
lret
int
stc
lret
lret
mov
mov
iret
lods
stos
lods
fwait
xchg
xchg
xchg
dec
ds
cmp
sbb
add
adc
add
push
add
add
addb
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
sarb
iret
iret
sar
aad
call
dec
iret
sar
int
int
lret
lret
mov
mov
cld
lods
stos
stos
icebp
xchg
cltd
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
jae
jne
je
fs
dec
dec
dec
cmp
sub
sub
aaa
xor
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
inc
ret
int3
lret
rcl
sar
aam
sar
int3
lret
mov
inc
mov
mov
test
lahf
lahf
cwtl
cwtl
cwtl
jmp
outsl
jno
pop
adc
add
add
add
add
add
addl
test
push
imul
push
push
stos
imul
push
pop
pop
cmp
cmp
pop
outsl
jno
adc
mov
mov
ret
mov
mov
mov
ljmp
pushf
pushf
call
xchg
xchg
cltd
cltd
fwait
out
addl
movups
xor
add
and
add
adc
add
pop
lcall
pop
fwait
cwtl
cwtl
fcoml
addl
jmp
jns
sarb
jnp
jp
jp
jae
jae
push
push
push
cmp
jae
sahf
sahf
sahf
mov
scas
scas
repz
lods
lods
sti
scas
scas
scas
std
test
pushf
popf
call
test
call
mov
lods
jmp
scas
scas
leave
movsl
cmpsb
movsb
cltd
jae
jb
adc
adc
add
add
add
add
outsb
outsb
outsb
pop
nop
mov
sahf
lcall
mov
mov
xchg
xchg
xchg
lock
xchg
fimuls
mov
jp
pop
and
inc
inc
dec
jo
jo
mov
cltd
cltd
cwtl
cltd
repnz
xchg
xchg
std
mov
call
lahf
ljmp
test
std
mov
mov
stc
mov
mov
cmpsl
mov
addb
add
add
add
add
pusha
or
lods
mov
cmpsl
mov
mov
mov
lcall
sahf
mov
negl
jle
stos
push
push
push
jo
pop
pop
outsl
imul
jg
subb
nop
xchg
lock
xchg
xchg
ljmp
sbbb
mov
push
mov
mov
mov
out
scas
lods
insl
test
add
add
add
add
popa
or
mov
in
movsb
test
xchg
xchg
call
cwtl
xchg
lcall
cwtl
cltd
cltd
fwait
pushf
fwait
lahf
pushf
cli
xchg
xchg
xchg
jmp
xchg
xchg
aam
mov
out
xchg
jne
notb
pop
jg
pushf
dec
jp
mov
ss
mov
je
scas
pop
outsl
ljmp
sbb
mov
mov
mov
jle
movsb
movsl
push
pusha
pusha
popa
or
mov
in
movsb
cmpsl
lcall
lahf
popf
jmp
mov
xchg
decl
orl
cld
xchg
popa
cmp
dec
jns
cmp
nop
daa
imul
xchg
adc
sahf
punpcklwd
cmpsl
push
imul
mov
insb
pushl
sbb
jbe
mov
test
scas
xchg
popf
lahf
popf
adc
add
add
popa
popa
pop
or
lods
mov
stos
movsb
cmpsl
jmp
cmpsb
test
stos
stos
test
lcall
pop
jns
mov
imul
mov
pusha
decl
or
mov
pop
call
add
cmpsl
or
je
mov
jle,pn
lds
jle
enter
lret
xor
cwtl
inc
test
divl
test
add
add
add
pusha
popa
popa
or
movsl
test
test
cmpsb
cmpsb
pushl
mov
pushl
mov
decl
adc
xchg
push
incl
add
nop
add
xchg
add
sahf
add
add
mov
insl
inc
ss
inc
mov
rolb
call
inc
nop
call
inc
nop
flds
call
bound
stc
mov
mov
movsl
mov
incl
add
add
popa
pusha
pop
or
mov
ljmp
mov
pushl
mov
test
decl
sbb
decl
or
popl
push
call
pop
ljmp
add
ja
rorb
fcoms
fcompl
fistps
jmp
pop
mov
fisubrs
int
mov
ret
cmpsb
xor
addl
dec
dec
dec
pop
jge
jp
fwait
cwtl
cwtl
jecxz
mov
scas
pushl
mov
mov
lcall
cs
lcall
and
xchg
push
pop
call
add
cmpsl
add
scas
add
push
addr16
xor
jmp
insl
test
jmp
jno
in
jae
jmp
test
std
mov
cmpsl
test
jg
addb
add
dec
dec
dec
pop
outsl
outsl
insb
bound
lcall
mov
mov
sar
mov
jmp
cmp
jmp
sub
lcall
add
mov
add
mov
inc
or
aad
xchg
jmp
js
jmp
mov
out
cmpl
hlt
xchg
out
mov
mov
cmpsl
cmpsb
push
cltd
cltd
lcall
sub
push
push
push
dec
pop
pushw
loopne
mov
mov
sarb
mov
mov
jmp
sub
fwait
push
pop
jmp
add
mov
arpl
mov
push
jne
fbld
out
nop
sar
xchg
ret
push
cltd
xchg
push
fwait
leave
sti
pushf
lret
xchg
jmp
lods
inc
mov
stos
popa
mov
add
add
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
rol
inc
pushl
pop
xchg
stos
dec
cmp
and
add
ljmp
add
mov
add
and
push
mov
into
cli
stos
into
sti
stos
sar
std
stos
sar
cld
lods
sar
cli
cmpsb
int
out
leave
inc
mov
test
or
add
add
dec
push
push
aaa
je
jb
test
into
int3
out
int
cmc
lret
int3
int3
sti
leave
lret
enter
movsb
mov
stos
bound
jmp
add
mov
fs
add
into
add
fiaddl
push
xchg
cld
mov
cld
mov
fdivr
mov
fdivr
mov
sar
ljmp
repz
scas
lods
mov
add
add
add
add
or
aad
dec
loope
loop
fsubp
loope
fcmovnu
ffree
fcmovnu
fcmovu
aad
xlat
out
mov
gs
test
jb
cmpsb
push
popa
pushl
add
lret
call
add
loop
jl
repnz
mov
cld
inc
std
enter
enter
leave
std
fdivr
out
mov
lret
divb
sahf
pushf
sbb
add
add
std
add
std
add
jmp
in
sbb
in
jmp
jmp
in
xchg
mov
mov
mov
add
mov
fs
add
iret
add
fldl
jne
ljmp
std
ret
fdivrp
std
shl
shl
call
in
std
shl
std
out
std
xlat
jmp
push
enter
lret
sar
mov
mov
add
std
incb
std
std
incb
std
cld
cld
pop
aad
push
mov
pop
mov
sahf
or
ljmp
add
ret
add
rolb
outsl
fiadds
jne
out
and
cld
shl
cld
std
fldl2t
cld
xlat
out
fsub
std
shl
push
enter
rcl
sti
mov
lahf
lahf
das
add
add
int
int
mov
bound
ljmp
gs
add
add
loopne
js
out
das
xchg
stc
lcall
stc
lret
loopne
cmc
hlt
ret
aad
icebp
rcl
lock
sar
in
aam
out
aad
in
shl
in
fsubrp
mov
test
std
std
add
add
add
aam
push
mov
jae
push
data16
mov
insl
inc
pop
jno
int
jge
sub
sti
fists
clc
jecxz
mov
out
jecxz
lret
mov
leave
ffree
lret
leave
loopne
sarb
in
ficompl
out
jmp
rorb
mov
add
stos
stos
stos
add
xchg
mov
ljmp
nop
fidivrl
jg
rol
stos
mov
lahf
mov
shlb
leave
jge
aad
iret
pop
rcl
iret
dec
fnstcw
fildll
in
fsubl
jecxz
icebp
adc
jmp
or
std
incl
std
std
add
mov
outsb
scas
mov
lods
data16
mov
mov
mov
xor
enter
aam
pop
rol
adc
rcl
or
loopne
or
int
add
std
add
std
add
add
add
int3
int
mov
int3
into
add
std
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
cltd
lcall
ret
enter
leave
enter
enter
ret
mov
mov
scas
insb
stos
stos
stos
xor
jne
add
add
add
add
add
add
add
add
add
add
add
add
stos
lods
stos
add
mov
enter
sar
aad
aad
rcl
sar
into
iret
int
mov
stc
mov
test
jle
push
push
pop
add
add
add
add
add
add
add
add
jb
jno
addr16
inc
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
int3
int
aad
sar
int
into
dec
mov
ljmp
sahf
sahf
sti
mov
cs
add
add
add
add
jne
jae
test
aad
outsl
jo
bound
mov
data16
insl
outsb
outsl
jb
bound
pusha
pusha
pop
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
lcall
xchg
cltd
lds
jae
daa
daa
daa
das
add
add
add
add
je
jae
fwait
xchg
fwait
mov
test
clc
mov
test
addl
push
push
dec
inc
mov
pushf
into
mov
mov
xchg
decb
mov
popf
pushf
popf
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
jg
jg
lods
mov
cmpsb
cld
mov
mov
xchg
xchg
xchg
cld
pushf
popf
popf
cmc
lcall
mov
push
push
imul
jge
xchg
aam
xchg
notl
mov
mov
cltd
pushl
jo
mov
lods
lods
push
stos
stos
stos
add
add
add
test
test
xchg
xchg
xchg
call
cltd
lcall
cltd
lcall
mov
loope
jbe
out
xchg
arpl
std
pushf
inc
jne
cmpsl
ss
scas
sub
pushl
sbb
mov
jge
mov
mov
imul
int3
add
test
pop
scas
movsb
lods
test
lahf
pushf
sahf
jmp
mov
xchg
decl
push
js
popl
decb
sbb
call
or
or
scas
sbb
jne
mov
daa
jp
lds
xchg
mov
mov
subl
je
push
mov
mov
cmpsb
ljmp
scas
mov
sahf
xchg
decl
or
xchg
push
decl
pop
jmp
adc
shll
dec
inc
mov
rolb
call
inc
call
dec
xchg
dec
cwtl
mov
mov
mov
movsb
movsl
movsl
push
add
add
imul
test
mov
scas
pushl
mov
movsl
call
pop
call
pop
push
call
add
add
mov
push
xchg
fcompl
jmp
pop
mov
jmp
cmpsl
call
fwait
mov
mov
mov
test
cmpsl
pop
add
add
popa
bound
mov
fwait
cld
mov
mov
mov
mov
mov
popf
dec
jge
pushf
xor
cltd
and
call
add
add
mov
dec
xor
jmp
outsl
lods
jmp
jl
out
jle
out
jle
fstps
mov
and
add
add
dec
adc
push
cmp
mov
mov
ret
mov
bound
lcall
add
pop
pushl
pop
outsb
fisttpl
out
lea
hlt
xchg
xchg
leave
stc
xchg
jmp
cmpsl
inc
mov
movsb
sub
inc
inc
inc
adc
push
xchg
xchg
mov
inc
ret
inc
mov
xchg
ljmp
sbb
movsl
add
mov
arpl
ret
add
aad
js
ljmp
clc
stos
sar
cli
lods
sar
std
lods
sar
cld
scas
sar
jmp
enter
mov
ds
std
incb
xor
outsl
inc
scas
mov
mov
aad
mov
aad
rcl
out
lret
cli
mov
mov
jmp
inc
add
add
out
xchg
notl
cld
mov
inc
cld
ret
lock
ret
in
cmpsl
test
cmpb
add
add
stos
lods
stos
add
in
in
or
out
call
outsb
fcomp
fldenv
mov
add
mov
add
fldl
jbe
out
aaa
xchg
cld
scas
std
iret
in
std
shl
call
out
std
aad
std
aam
push
aam
int3
in
scas
scas
scas
popa
jg
addb
add
incb
std
std
push
int
shrl
lahf
sbb
lods
add
mov
add
loope
jns
hlt
push
cmpsb
std
loopne
aad
cld
aam
aad
cld
aad
stc
shl
push
fsin
fcmovne
shl
mov
mov
xchg
xchg
xchg
pop
ret
les
mov
add
mov
or
jg
ljmp
cli
out
mov
into
bnd
shl
out
rcl
ljmp
scas
cltd
cltd
fwait
add
sarl
xchg
dec
and
shll
lret
mov
xlat
mov
lret
adc
into
outsl
xlat
lret
into
pop
fst
xlat
dec
in
loope
out
call
sbb
rol
add
mov
scas
arpl
stos
mov
ret
mov
cs
mov
int3
sbb
fstp
bswap
int3
int3
or
aad
std
add
incb
lods
incl
sarl
add
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
in
cwtl
pop
mov
lock
cmp
sbb
xor
jmp
cltd
mov
adc
push
pop
mov
push
ljmp
mov
jbe
icebp
xchg
mov
into
push
sbb
add
inc
lods
dec
push
int
jnp
inc
adc
xchg
sbb
orb
xchg
cltd
xor
movsl
push
ret
js
push
and
pushf
in
xor
sbb
jle
cltd
into
mov
mov
pop
psubw
aaa
ss
pop
je
jp
je
lret
jo
dec
or
add
or
mov
cmp
andb
mov
lods
lret
xor
ret
outsb
add
movsb
test
fnsave
pop
dec
pop
clc
push
inc
mov
fsubrs
mov
mov
fadds
es
mov
fcomps
and
push
aam
push
jge
cwtl
aaa
popf
gs
jle
loope
in
and
inc
bound
jp
jno
sub
mov
add
jg
dec
call
dec
mov
xchg
neg
subl
pushf
jl
push
fisubl
popa
sbb
dec
sarb
sub
nop
and
dec
xchg
sbb
into
push
sub
movb
popa
test
sbb
and
shlb
fldl
jno
shll
popf
push
cmp
mov
ficompl
cmp
xchg
das
cmp
popf
sub
adcl
pop
sarb
in
jno
outsb
repnz
gs
add
pop
scas
add
xchg
push
push
or
and
jno
pop
lahf
aas
das
mov
lret
out
dec
adc
repnz
ja
enter
mov
dec
andb
jnp
daa
std
inc
out
insb
jl
sub
mov
adc
jo
mov
and
jns
dec
cmp
imul
mov
insb
push
sub
sti
pop
pop
hlt
push
add
lds
mov
mov
add
jecxz
lock
imul
push
js
add
and
jg
cmp
shl
cli
push
sbb
rclb
ja
iret
add
sbb
mov
add
shlb
cmpb
jae
push
push
subb
or
stc
pop
testb
and
pop
imul
scas
jmp
js
and
fnstcw
cmp
in
lods
test
pop
mov
mov
xchg
cmpsb
adc
xchg
add
mov
pop
mov
sub
cmp
test
sub
dec
jecxz
mov
jb
cld
lret
add
pop
pop
cmp
pop
mov
inc
or
mov
mov
jl
mov
or
ja
mov
xchg
pop
mov
insb
or
mov
fisubrs
stos
lret
mov
rcll
outsb
imul
add
dec
or
xlat
cld
cmpsb
sahf
and
mov
test
sbb
mov
mov
cmc
pop
inc
fmuls
mov
pushf
sub
cld
push
mov
sub
lock
leave
sub
and
test
mov
pushf
cmp
sub
fstpt
sub
aad
int
push
cmp
fwait
sub
loope
mov
cmpsl
mov
push
add
int3
aad
fidivl
outsl
mov
pushf
mov
or
outsl
loop
mov
dec
loopne
stc
pop
dec
add
arpl
xchg
or
xchg
dec
push
lods
jg
mov
add
xchg
push
mov
inc
sarl
jnp
sbb
push
fmul
dec
fistpl
mov
cld
pop
popa
hlt
cmp
mov
inc
dec
in
hlt
lds
imul
add
stos
icebp
mov
lods
sub
scas
mov
or
insl
jmp
xchg
jl
outsl
movsl
mov
out
loopne
dec
inc
notl
mov
aam
sub
iret
xchg
mov
inc
ret
lret
or
push
iret
std
fdiv
lock
cmp
adc
loopne
sbb
ja
and
push
bound
xchg
stos
push
addb
add
test
fcoms
fisubl
add
cmp
sbb
push
cld
xor
and
and
xor
jae
nop
xchg
inc
pushf
inc
lods
shrl
mov
mov
hlt
push
inc
mov
push
pop
int
jge
test
adc
xchg
cmp
inc
arpl
pop
test
push
test
iret
sub
shlb
xchg
popa
sbb
cs
sub
lret
dec
loop
xor
popf
adc
stos
ja
xchg
jmp
addr16
dec
mov
or
mov
pop
mov
pusha
imul
mov
jo
mov
mov
xor
jp
cltd
and
sub
test
adc
test
add
rol
sub
cli
orb
sbb
pop
pop
push
stos
dec
or
lret
adc
fiaddl
adc
aas
dec
loopne
in
icebp
jns
sub
fwait
sahf
inc
decl
jl
mov
jp
mov
xchg
sub
lret
mov
insb
or
js
mov
jb
call
push
mov
pop
into
lock
ja
lcall
mov
jne
imull
cmc
pop
sbb
mov
roll
pushf
into
pushf
xor
add
jb
push
out
dec
mov
repnz
mov
or
imul
mov
fstl
sub
mov
fcomip
lock
and
add
push
in
xchg
or
stc
mov
adc
mov
or
mov
fwait
cmp
ds
stos
inc
aam
push
mov
jl
fwait
insl
notl
daa
and
jns
inc
xlat
adc
dec
in
fildl
add
push
mov
cmpsl
ds
aad
je
add
mov
sti
outsl
pop
mov
pop
les
loop
std
mov
mov
or
push
int
xchg
xor
lret
pop
in
and
sbb
push
cmpsl
fildl
fcomi
stos
jae
iret
add
out
and
xchg
cmpsl
mov
scas
mov
das
repz
cwtl
dec
rcrl
aam
movsl
filds
popa
clc
xor
out
push
jg
test
popf
xor
lock
and
mov
inc
jbe
fnstenv
xchg
enter
testl
and
inc
xor
ja
and
leave
loop
xlat
adc
outsl
push
sbb
lea
xchg
xchg
stos
inc
ret
ficompl
pusha
pop
cs
jle
adc
pushf
mov
fisubs
mov
pop
xor
add
fnstsw
adc
and
stos
mov
xorl
jmp
inc
mov
mov
mov
jecxz
sti
xlat
nop
add
sti
fwait
adc
ja
das
popf
stc
push
arpl
xchg
into
iret
lea
bound
movsl
fidivrs
loope
out
lods
insl
sub
pop
cmp
xchg
xchg
stos
dec
dec
dec
jecxz
lock
mov
gs
lret
sub
imul
test
push
movsl
stos
cld
or
sub
dec
sub
jg
dec
loop
mov
imul
and
xchg
testb
pop
cmpsb
cmp
leave
push
pop
pushf
ljmp
lock
add
ret
mov
jecxz
mov
mov
aam
xor
pop
repz
jp
mov
je
or
xchg
sub
mov
xor
inc
mov
aad
pop
ret
shr
pop
sub
aas
mov
fucom
pusha
ja
xchg
add
cmp
inc
fisubl
inc
shrb
sbb
cltd
dec
xchg
pop
repnz
insb
hlt
mov
and
jno
push
ljmp
push
mov
and
test
mov
pop
cmc
cmovnp
cmpb
xchg
push
jge
mov
arpl
xorl
mov
sbb
addb
scas
mov
stc
nop
and
ret
cmp
cs
pushf
inc
fdivrs
pop
sbbl
loope
lods
shrb
test
fs
xchg
das
pop
mov
jns
loope
or
and
or
mov
mov
movsl
mov
cmpsl
jns,pt
adc
insl
fs
push
or
je
jbe
fisubs
pop
testb
call
insb
rcrl
mov
mov
dec
mov
jae
dec
out
pop
js
inc
push
sbb
cs
pop
int3
pushf
xor
jns
inc
imul
xor
arpl
pop
sbb
xorl
das
push
inc
cmpsl
ds
testb
fmuls
imul
jle
fldt
adc
add
loope
and
mov
mov
dec
sub
mov
xchg
cmp
dec
loopne
pop
lret
cmp
mov
pop
mov
lret
hlt
push
adcb
adc
pop
icebp
sbb
test
fidivrs
scas
lods
jns
add
inc
js
jl
or
dec
repz
movsl
cmp
pop
mov
jns
cmpsl
ds
lcall
lret
sub
xchg
popa
mov
out
cmp
js
loopne
pop
sbb
mov
int3
arpl
mov
mov
bound
shll
inc
cwtl
das
xchg
sbbb
inc
mov
adc
shrl
loop
or
into
mov
sbb
mov
and
xchg
and
call
mov
es
pop
dec
jb
cmp
sti
xchg
das
pop
out
xchg
movsl
cmp
jo
mov
in
xchg
sub
rcll
imul
test
sbb
imul
lods
or
and
call
fdivl
movsb
xchg
sub
cmc
popa
clc
out
xchg
cmpsb
pop
dec
loope
push
js
mov
push
popf
inc
sub
rcrb
jp
xor
insl
push
push
push
in
inc
test
repz
outsb
push
jae
pop
test
inc
sbb
nop
mov
xchg
cmp
test
iret
data16
sbb
nop
dec
mov
push
and
repz
inc
inc
fidivl
push
lods
inc
dec
jl
mov
dec
sbbl
insl
adc
add
mov
adc
cwtl
das
xchg
mov
std
xchg
daa
xchg
rorb
cmp
lret
xchg
pop
xor
dec
cmp
int
insl
lea
pop
inc
fdivl
dec
in
fildll
ret
std
xchg
test
jo
sbb
add
dec
adc
xchg
mov
fidivrs
rcl
sbb
jecxz
in
sub
push
jmp
in
xchg
aas
pop
mov
mov
push
and
sub
dec
ss
sbb
jbe
push
jecxz
lods
push
je
mov
lock
cwtl
lret
sbb
cmpsb
mov
xor
aas
sub
imul
push
popf
ret
cmc
add
jo
mov
pop
in
negl
leave
mov
push
push
out
popf
leave
pusha
rdtsc
jbe
push
xchg
mov
ret
lahf
ss
cmpsl
ds
mov
leave
test
fnsave
es
jb
lock
xor
cmp
movsb
pusha
notl
rclb
mov
pop
leave
mov
mov
into
les
sbb
std
xchg
loop
test
add
je
jecxz
cmc
xchg
sbb
shlb
movsl
cmp
jle
out
stos
mov
aad
je
testb
pusha
adc
clc
jb
std
arpl
jno
imulb
and
xor
test
cmpsl
ds
cmp
aas
scas
out
in
sar
xchg
ret
adc
jecxz
je
cmpb
call
or
inc
pop
hlt
jb
lods
inc
push
push
sbb
aas
das
insl
add
shlb
add
lods
or
loopne
or
scas
inc
shr
xor
fnstcw
jmp
cli
mov
jno
or
sub
adc
fidivl
xor
and
test
stos
call
mov
fstp
insl
add
jae
pop
stos
in
xchg
jae
push
in
lock
push
jmp
sbb
inc
fnstenv
push
in
cmpsl
ja
ljmp
std
xchg
jl
xor
push
cmp
pop
neg
fdivs
clc
adc
ficoml
mov
and
adc
mov
xorl
fwait
xor
ficoml
lcall
dec
loopne
add
jb
pop
scas
lret
xchg
add
es
out
pop
sti
xchg
mov
mov
xor
xor
cmp
daa
dec
lret
out
test
jno
arpl
out
scas
inc
notb
add
subl
ret
in
add
rorl
and
imul
mov
push
outsb
add
jns
lock
jle
scas
sub
pop
repz
push
sahf
xor
les
test
push
in
out
out
inc
and
fdivr
clc
or
mov
in
popf
xchg
cs
adc
mov
pop
mov
cmp
inc
mov
js
push
mov
sbb
test
std
cli
daa
mov
mov
dec
in
js
repnz
or
int3
xor
clc
lds
mov
int3
arpl
dec
sbbb
jmp
and
or
cmp
jle
lock
repz
adc
push
push
jl
mov
push
lds
inc
fdivrs
fcoml
int
push
in
push
out
ljmp
add
jae
mov
mov
dec
xchg
sub
jns
cwtl
add
xchg
inc
mov
sbbl
ds
orb
sbb
in
shrl
xchg
cmp
int3
test
xchg
idivl
xchg
lods
sbb
inc
mov
jge
inc
adcb
icebp
push
out
or
mov
push
in
adc
mov
and
nop
fwait
xor
pop
cmpsl
ds
jecxz
or
jp
out
cmp
push
mov
mov
xor
push
lods
xchg
dec
pop
lock
mov
mov
lods
adc
rorb
or
imul
jge
ds
mov
fwait
popa
jmp
inc
mov
outsl
push
sub
stos
inc
rorl
pop
loop
inc
mov
loopne
dec
loopne
mov
cmp
iret
data16
sbb
cltd
xor
js
popf
inc
loope
popa
shll
gs
pop
mov
loope
pop
mov
jae
pop
xlat
sahf
xor
mov
lock
scas
imul
dec
pop
cmc
pop
das
hlt
mov
and
sub
repnz
ret
pop
jge
sbb
cld
mov
mov
loop
cmp
jae
mov
jle
je
mov
mov
fsubl
mov
pop
aad
ret
or
arpl
test
testb
test
test
push
xchg
pop
aas
cli
xchg
mov
xchg
sub
cwtl
xchg
sub
fildl
lcall
ljmp
lds
or
jns
sub
add
shll
aad
mov
les
clc
loop
cld
in
das
mov
fbstp
aam
popa
push
shlb
mov
xchg
mov
lret
lods
inc
data16
sub
inc
mov
icebp
aad
mov
inc
daa
sbb
xchg
jns
popa
cs
mov
inc
movsb
cmp
xchg
sub
xchg
fsubrs
add
aad
js
xchg
or
or
or
jnp
std
mov
movsb
lock
fstps
std
aam
xchg
fs
xchg
mov
stos
xor
stos
inc
jo
mov
inc
inc
in
or
cmp
add
adc
pushf
inc
out
jge
lods
add
ror
mov
adc
and
push
loop
ja
cld
test
sub
rorb
movsl
loopne
xlat
sub
aas
adc
jle
outsb
sbb
popf
push
jmp
test
icebp
gs
scas
leave
and
jns
xorb
ds
inc
stc
inc
inc
cmp
xor
dec
inc
fidivrl
mov
repnz
or
jae
xchg
dec
sbb
stos
push
jmp
dec
loop
jmp
mov
scas
imul
clc
jl
fldt
or
int
sbb
or
xor
cmc
xchg
or
adc
xchg
scas
jl
dec
cmpb
addr16
movsb
fbstp
push
out
test
movsb
cmp
mov
push
in
in
adc
lods
inc
mov
fnstenv
scas
scas
inc
loope
idivl
mull
rcll
jle
fldt
push
popa
cmc
testl
cmp
jns
xchg
stos
and
inc
jb
jle
mov
test
xchg
inc
lret
cmpsb
jae
out
inc
ficompl
ret
mov
sbb
es
sbbl
sub
pop
mov
shrl
lods
mov
pop
adc
lods
inc
test
lret
cld
xchg
jb
test
jg
in
mov
aad
mov
pop
dec
in
xor
adc
movsb
stos
xor
mov
test
sub
pop
repz
iret
popaw
es
pop
or
nop
inc
cwtl
das
push
mov
cmpsb
repz
pop
inc
adc
jmp
cmp
or
cmp
jg
test
cmpsb
push
popf
adc
jnp
lods
cmp
add
shl
inc
icebp
icebp
mov
in
jg
adc
shrl
test
sbb
arpl
dec
in
aad
xor
repz
xor
sub
sbbl
ds
or
mov
pop
data16
inc
push
into
dec
in
mov
add
js
out
out
rcrl
pop
scas
sbb
mov
imul
test
test
xchg
popl
and
movsb
inc
outsb
jge
cmp
dec
jecxz
pop
test
repnz
mov
inc
cmp
test
dec
pop
and
stos
outsl
cwtl
das
mov
ret
and
dec
loop
inc
xchg
ja,pn
imul
cmpb
cltd
inc
mov
test
mov
sub
pop
lahf
into
ret
dec
push
inc
fwait
mov
or
int3
arpl
jmp
inc
fcompl
mov
repz
cmp
insl
sub
pop
mov
in
sub
xchg
sub
push
aad
fninit
jp
sub
lahf
pushf
sbb
out
mov
das
xchg
daa
inc
fidivl
xor
sub
dec
xor
addb
mov
mov
rcl
mov
sub
pop
pop
cmc
ja
sub
sbb
out
or
mov
loopne
mov
test
repnz
pop
inc
fisttpl
or
mov
dec
out
fnstenv
lret
inc
xlat
lea
mov
add
xor
out
test
xchg
inc
lods
hlt
ficoms
out
mov
pop
cwtl
imul
sub
and
inc
inc
dec
in
pop
pop
mov
inc
xor
push
cltd
fadd
pop
lret
or
sbb
out
test
andb
mov
xchg
and
push
data16
cli
xor
out
test
cmc
leave
pusha
out
cwtl
das
lods
shrb
fnstcw
sbb
adc
rorl
adc
mov
mov
jae
in
in
lock
rcrl
daa
mov
push
pop
inc
mov
pop
addps
xchg
push
pop
sahf
cmpl
or
fcmove
sti
dec
mov
cmpsl
adc
sar
arpl
icebp
pop
divb
or
out
stc
sub
leave
das
or
mov
push
in
sub
sub
pop
dec
jae
pop
sub
ret
cmc
mov
xor
push
cltd
cmp
cmpb
cmpsl
std
sbb
sahf
push
push
ljmp
xsha1
cmpsb
dec
xor
subb
popf
mov
es
xchg
sbb
repz
mov
xchg
outsb
sbb
push
pushf
outsl
push
jmp
mov
or
jns
inc
ffree
lcall
sbb
lods
inc
ja
xor
dec
das
cmpsb
inc
push
test
adcb
jbe
mov
mov
jne
sub
pop
xchg
aam
sub
lret
inc
dec
movsl
cmp
data16
cmp
push
pop
sub
insl
pop
mov
mov
lret
xchg
sub
ds
outsl
aas
mov
mov
mov
fsubl
jns
aad
sbbb
notb
mov
aad
pop
loop
sub
movb
inc
xor
push
mov
iret
mov
ret
pop
sbb
inc
fsub
cmp
xchg
nop
or
mov
or
ljmp
push
lods
dec
stos
sbb
in
and
shlb
sbb
jmp
dec
loopne
or
stc
cmp
pop
push
lods
insb
and
out
push
adc
inc
mov
or
mov
or
sub
inc
push
sbb
jb
pusha
inc
insb
inc
fisttpl
lcall
pop
fnstenv
fcmovnbe
imul
lock
cld
xchg
xor
push
adc
rcll
call
movsb
inc
out
sub
fcmovne
pop
ljmp
pop
jp
push
lods
daa
pushf
mov
sbb
sti
pop
cmp
cmpsl
sbb
push
in
fwait
and
xchg
cmpl
idivb
sbb
xchg
pop
pop
pop
sahf
lcall
mov
fsubl
cmpsl
push
aam
rol
out
test
add
cmc
iret
sub
in
inc
mov
repnz
ret
mov
decb
scas
xchg
cltd
clc
jno
mov
inc
js
mov
lods
inc
dec
test
jmp
xchg
notl
cmp
scas
insb
adc
iret
adc
in
push
xchg
or
mov
push
jmp
rcll
fwait
mov
enter
rolb
sub
inc
cli
sub
dec
ja
je
inc
xlat
test
pop
lock
out
push
push
clc
inc
fisubrs
xor
xorb
jne
push
pop
sahf
test
and
dec
lret
or
mov
aaa
mov
insl
add
xor
jmp
ljmp
popa
cli
ds
icebp
or
loope
shrb
dec
mov
loop
stos
out
sbb
and
in
push
call
imul
ds
or
and
jno
ja
dec
loope
cwtl
cmpsl
ds
xor
inc
testb
or
xchg
bound
or
add
es
xchg
lcall
cmp
test
leave
mov
sbb
sub
call
cs
jns
lds
pop
outsl
out
pop
ret
pushf
sub
dec
adcb
mov
or
lret
bound
mov
mov
xchg
adc
add
jae
add
jb
xchg
aaa
mov
inc
fmuls
stos
push
in
sbb
lock
movsl
das
push
jle
and
gs
fldcw
jne
push
mov
ja
adc
inc
fidivl
test
inc
loop
add
push
cli
inc
or
xor
fnsave
insb
add
push
pop
cld
cmp
and
cmc
testb
cltd
aam
xchg
pop
mov
inc
sbb
cmp
cmc
cmp
sbb
rcr
xor
fdivrs
cmp
mov
cmp
sub
into
xor
sbb
dec
xchg
testl
jnp
jae
inc
and
popf
pop
jle
ds
pop
hlt
mov
stc
std
add
cmp
add
popa
and
xchg
iret
stos
xchg
loopne
int3
aam
dec
in
cmc
push
mov
ret
rep
jle
pop
enter
outsb
push
movsl
lahf
roll
mov
ja
loop
jo
js
jl
pop
fidivs
out
stc
out
lods
inc
sub
inc
rcll
sub
inc
dec
xchg
adcb
addr16
jne
xchg
sub
xchg
test
les
stos
cmp
test
jne
mov
hlt
inc
pop
rcrb
mov
fistl
add
int
inc
jp
data16
int
and
into
jb
sub
add
xor
sbbb
out
pop
outsb
xlat
pop
cltd
adc
outsl
arpl
inc
cmp
jp
dec
out
sub
adc
adc
add
xchg
cwtl
jnp
sbb
stos
inc
data16
push
stc
lret
push
jno
mov
gs
and
lods
and
xor
adc
sbb
lret
aad
mov
pop
call
cmpsl
mov
ja
mov
and
in
jmp
jle
dec
in
xor
in
mov
cli
push
insl
mov
mov
add
mov
xchg
mov
subb
or
jno
sbb
jmp
adcl
in
push
das
xlat
xor
sub
xor
daa
fnstenv
out
scas
and
jecxz
pop
push
inc
flds
sbbb
mov
or
fcmovb
push
or
add
mov
test
ret
test
notl
rcll
xchg
or
sbb
sub
out
sbb
imull
sbb
or
sti
inc
icebp
sbb
or
push
cld
daa
inc
mov
iret
pop
sbb
push
mov
ret
add
add
sbb
in
popa
aaa
cmpsl
push
lea
ret
cmp
scas
jae
pop
fldenv
add
jns
inc
aas
cmpsl
out
test
jl
orb
add
inc
push
inc
aaa
test
pop
scas
popa
sub
insb
add
mov
inc
mov
jle
mov
jo
mov
xlat
outsb
outsb
lock
xlat
and
sbb
imul
and
sbb
std
scas
jge
aaa
inc
jmp
loope
ss
fidivrs
sub
push
xchg
mov
pop
lea
sbb
addb
mov
adc
xchg
dec
rolb
push
sarb
icebp
sub
lds
std
pop
lds
idivb
mov
xor
testb
cmc
mov
mov
scas
in
adc
sbb
dec
mov
in
jecxz
or
mov
nop
daa
or
shrb
out
jbe
mov
fucomp
jg
or
and
add
dec
jb
lds
mov
cltd
xor
dec
in
sarb
insl
xchg
sub
mov
xchg
dec
filds
xchg
insl
or
enter
mov
test
gs
fcom
push
movsl
and
mov
push
mov
aad
sub
sub
int3
jne
xor
pop
push
mov
jecxz
push
fimuls
or
js
xchg
dec
out
inc
sbb
enter
shll
and
mov
sar
xchg
fwait
jb
adc
arpl
shll
pop
sbb
inc
scas
adc
adc
inc
xor
xor
mov
inc
adc
jo
mov
fstpt
hlt
mov
fmuls
adc
es
cs
sub
dec
and
enter
mov
sti
mov
adc
int3
xchg
push
mov
adc
mov
or
xchg
mov
repz
or
jne
add
lock
pop
mov
dec
dec
jge
addr16
sti
sbb
push
in
pop
cmp
cmpsb
xchg
jge
das
dec
clc
ret
mov
mov
gs
pop
xlat
adc
push
out
in
jo
mov
cs
scas
cmp
ja
pop
pop
ss
incb
xor
inc
adc
clc
pop
aas
xchg
imul
or
cmp
ss
pop
jp
mov
mov
in
cltd
xlat
outsb
lret
or
mov
mov
stos
std
mov
dec
mov
pop
xchg
data16
push
mov
push
push
fs
aas
cli
popf
in
add
vmaxps
in
into
insb
add
in
xchg
js
inc
dec
outsl
mov
push
in
outsb
movb
insl
mov
pop
das
faddl
dec
adc
arpl
in
push
pop
insl
in
push
je
mov
add
icebp
aaa
push
pop
scas
dec
inc
imul
jae
fldenv
jecxz
iret
gs
mov
fmul
or
dec
inc
xchg
sub
scas
cmpsb
jmp
test
or
aaa
dec
pop
pusha
hlt
les
inc
mov
mov
pop
dec
out
ret
pop
xchg
int
imul
addr16
das
dec
sub
lea
jmp
jne
cmpsb
inc
aam
js
les
scas
and
push
iret
in
ficompl
idivl
stos
cld
adc
xchg
mov
fcoml
iret
sbb
push
nop
rcrl
lds
data16
xlat
repnz
or
push
and
add
in
js
push
cmc
int3
push
mov
dec
ficoml
scas
xlat
dec
cmpsl
leave
icebp
jbe
cmpsb
and
inc
pushl
pop
cmc
movsl
push
fldlg2
cmp
out
test
jnp
add
pop
int3
pop
pop
jnp
push
pop
hlt
push
lds
addr16
in
add
pop
mov
les
ja
pop
shrl
mov
xlat
xor
pop
adcl
andl
mov
xor
sub
jl
and
xor
inc
int3
popf
test
or
push
push
pop
or
dec
bound
sbb
cli
insb
inc
dec
mov
js
add
std
mov
mov
insl
or
adcl
jge
mov
mov
xchg
inc
div
push
lock
fnstenv
adc
mov
jle
sub
pop
stc
mov
fimuls
push
or
lret
cmp
jmp
mov
orl
icebp
push
xor
jbe
sar
mov
add
xchg
outsl
lds
add
rcll
into
dec
inc
and
xor
inc
xlat
jge
or
cltd
dec
jecxz
in
std
or
push
adc
jns
inc
xchg
cmp
arpl
or
lds
xchg
stc
ret
sub
inc
or
mov
fimuls
aas
addr16
adc
and
adc
push
dec
dec
insb
hlt
mov
mov
cmp
mov
push
leave
mov
aam
addr16
pop
xchg
mov
push
push
hlt
jns
repnz
ljmp
sub
movsb
sbb
add
pop
mov
jmp
pop
aam
rcll
xor
xchg
xor
adc
mov
outsl
fsubrs
imul
negb
inc
inc
pop
mov
fmul
sbb
sub
mov
fildll
or
lock
mov
loopne
insb
loope
adc
out
xorb
push
not
and
cmp
shlb
dec
xchg
stc
mov
icebp
bound
cmp
mov
rolb
lods
rcrb
mov
mov
lea
mov
jb
xor
dec
pop
rol
jb
mov
stc
ss
dec
inc
add
out
test
mov
mov
jne
lahf
xor
mov
or
jne
sbb
add
adc
or
arpl
aam
in
lahf
in
inc
jle
notl
in
sub
jne
iret
mov
mov
mov
xchg
add
add
jo
inc
mov
dec
shrl
inc
repnz
sub
sub
push
sbb
pop
lret
cmpsl
or
movsl
dec
loopne
and
lock
pop
int3
adc
add
ljmp
push
jo
mov
dec
out
push
sbb
pushl
mov
mov
dec
or
scas
jbe
pop
xchg
dec
loop
in
mov
aad
dec
popf
aam
into
mov
mov
call
sbb
push
scas
push
push
xchg
dec
ja
test
decl
xor
lret
fwait
xchg
aas
mov
xchg
inc
jmp
or
xchg
pop
stos
inc
nop
mov
imull
lods
jne
mov
lcall
testl
in
in
jno
xor
ljmp
jno
mov
inc
data16
xlat
dec
lods
js
test
std
xchg
sbb
clc
mov
pop
adc
fbstp
fidivs
sti
test
sbb
xchg
and
push
aad
push
repz
mov
sub
aam
mov
ret
arpl
loopne
data16
mov
jg
or
sarw
rcll
add
aas
pushf
cmp
adc
jns
cmp
test
shll
lahf
daa
call
ljmp
cmp
sbb
pop
pop
mov
adc
aam
pop
mov
jg
into
cltd
push
mov
mov
jge
jmp
pop
std
mov
test
sbb
xchg
xchg
hlt
jb
js
in
xchg
mov
popa
divb
mov
neg
add
mov
mov
dec
les
iret
je
test
pop
scas
add
ss
cli
xchg
adc
jbe
cmp
std
jno
in
push
outsb
int
pop
fisubrs
mov
inc
test
out
jge
neg
loop
mov
adc
xorl
lahf
pop
lock
xor
rorb
rcrl
arpl
mov
outsb
fisttpl
xchg
test
pop
sar
lods
ss
ret
push
sbb
subb
mov
pop
and
test
sub
pushf
loope
into
imul
roll
ds
into
jge
fsubrs
inc
das
lods
cmp
mov
fdivrs
lods
movsb
sub
sub
cmpsl
icebp
sbb
repnz
aas
js
mov
xorb
lods
lods
lods
subl
cmp
cmc
mov
rorl
insl
leave
lea
aad
or
xchg
rcrb
into
popa
clc
jmp
out
or
shlb
sub
fisttps
inc
rcrl
or
mov
fwait
xor
jg
in
mov
mov
dec
xchg
aaa
add
call
test
popa
push
inc
test
in
mov
mov
mov
mov
out
push
mov
incl
pop
shl
add
int
faddp
xchg
jle
in
lods
mov
lret
or
daa
scas
out
push
cmpsb
and
add
mov
psubsb
in
push
fbld
or
add
sbb
pop
adc
inc
pavgw
xor
psllq
push
testl
sub
pop
inc
pop
movsl
test
leave
mov
pop
lds
dec
fldl
mov
push
pushf
insl
adc
jbe
inc
popf
or
pop
xchg
scas
xor
xor
ja
cmp
mov
add
xor
rorb
movsl
add
dec
xchg
das
xor
mov
fwait
adc
sub
xor
or
pushf
jno
into
add
addb
mov
cmpl
fmull
loope
icebp
adc
jnp
andl
push
pop
stos
dec
lds
sbb
mov
faddl
xor
cmp
stc
fdivrl
adcb
dec
sarb
movsl
cs
pop
adc
jecxz
dec
sahf
xor
mov
movsb
jle
rcll
add
out
mov
stos
cmpb
cwtl
aaa
icebp
sbb
cmpsb
ss
es
ljmpw
cmp
and
add
adc
jbe
and
sbb
pushf
rorb
xor
sbb
push
mov
shll
xlat
pop
rclb
inc
fiadds
cmp
jne
dec
and
test
push
sbb
insb
mov
add
ss
sub
adc
or
aas
fisttps
push
jne
pop
movsl
pop
mov
xchg
lret
je
cwtl
cltd
cmp
jge
mov
mov
mov
pop
add
add
xchg
scas
mov
cmp
add
add
aas
inc
movsb
ss
out
out
into
scas
jmp
dec
mov
inc
push
repz
in
jecxz
push
push
fnstenv
xor
xor
rclb
jnp
xor
cmp
shll
mov
pop
jns
mov
inc
dec
lret
pop
sub
sub
push
ds
sub
sub
ficompl
wrmsr
ljmp
lods
xor
xor
cmpsb
fnsave
push
cmpl
xchg
jle
or
and
test
push
sub
pop
jno
bound
ds
xchg
out
loope
mov
cmp
outsl
adc
push
insl
int
cmp
scas
std
xchg
mull
add
clc
and
push
mov
inc
outsb
pop
mov
xchg
cwtl
pop
add
ds
pop
xchg
popf
loope
inc
mov
out
mov
xorb
push
popa
imul
push
lock
rorl
dec
dec
push
test
xor
push
dec
inc
addr16
hlt
jns
inc
xchg
pop
lea
andb
xchg
mov
pop
sbbl
hlt
mov
sub
out
xor
mov
movsb
es
xchg
and
call
test
jae
outsw
jae
add
mov
out
sub
pop
iret
add
jae
mov
sbb
pop
inc
xor
stc
nop
or
jmp
push
add
pop
ret
hlt
inc
sbb
mov
mov
sbbl
push
js
adcl
popf
xor
cmp
add
xchg
and
lret
test
fimull
in
adc
sar
in
dec
sbb
inc
cwtl
and
mov
fnstsw
fwait
sbb
cltd
pop
fistpll
rorb
or
and
push
mov
call
add
add
leave
sbb
outsb
pop
pushf
popa
lods
int
filds
mov
hlt
push
sbb
daa
cs
pushf
xchg
sbb
pop
notb
or
xchg
sub
and
std
out
sbb
and
fiadds
xchg
sub
mov
mov
sti
scas
in
out
aaa
inc
aas
cwtl
in
out
nopl
cmc
inc
andl
jno
lahf
data16
stos
dec
push
ffreep
and
and
testb
push
mov
insb
lods
lock
add
outsl
sub
sbb
and
mov
fwait
push
orb
sub
pop
or
pop
jbe
in
in
jl
and
mov
cli
popf
xchg
cmp
data16
loop
dec
in
add
sbb
add
movsb
mov
dec
cli
aas
sub
cltd
xlat
cwtl
and
mov
xchg
adcb
xor
outsb
sub
insl
dec
inc
les
mov
daa
inc
inc
ss
cli
movsl
icebp
data16
adc
popf
in
outsl
or
sub
cmp
sbb
push
clc
add
insl
add
and
mov
dec
dec
nop
adc
mov
dec
dec
pop
xchg
rcl
das
jno
ss
imul
mov
shll
and
shll
inc
repz
ja
sub
fimull
sub
subb
cmc
pop
sbb
enter
repz
cmp
dec
ret
addr16
adc
sbb
outsl
xor
outsb
push
push
loop
inc
sub
pop
je
mov
mov
mov
push
fisubrl
adcl
mov
addr16
sar
cmpb
push
daa
sub
out
add
je
pop
xchg
ror
cmp
enter
push
aas
pop
xor
mov
ss
cltd
stos
push
daa
fwait
in
ret
dec
addl
stos
aam
cli
fbld
jns
add
nop
cmp
nop
insl
sub
mov
pop
fcoml
scas
gs
fbstp
pop
jp
cwtl
loop
outsl
test
mov
shll
aad
fstpt
into
inc
mov
mov
cmp
and
push
dec
loopne
jg
ljmp
push
fnstsw
es
xchg
movsb
cmp
add
xchg
jno
out
ret
pop
and
in
mov
fbstp
mov
push
cmp
js
fsubrl
lds
mul
gs
dec
aaa
mov
pop
and
std
mov
xor
shll
pop
repnz
std
pop
into
push
in
jne
rclb
and
inc
dec
and
inc
fcomi
push
je
push
adcb
xor
cmpb
sbb
pop
int3
arpl
lods
mov
pop
pop
pop
mov
inc
insl
jl
testl
je
stos
or
repnz
cli
and
gs
cli
pop
js
outsl
int3
lock
outsb
push
or
sbb
sbb
jmp
pop
pop
and
mov
fnsetpm(287
fwait
fs
scas
cmp
adc
faddl
mov
repnz
mov
push
test
cmpsb
cli
sbb
arpl
adcl
imull
test
lret
and
push
dec
loop
push
or
or
fsubrs
call
mov
sub
and
mov
xor
lcall
mov
arpl
xchg
aaa
mov
mov
sub
mov
mov
jl
das
int3
cmp
or
sbb
or
pop
negl
mov
mov
pop
pop
adc
notl
push
adc
and
push
aam
push
jb
mov
and
shll
inc
out
xchg
mov
add
rol
ret
pop
xchg
mov
in
adc
pop
sahf
lods
repnz
push
adc
ss
mov
dec
cmpsb
ret
mov
stc
jg
mov
into
and
notb
or
mov
aaa
divb
adc
mov
incb
fsubr
push
sbb
pop
mov
icebp
mov
sbbl
jmp
addr16
aad
testl
mov
fldcw
or
mov
pop
lock
andb
jne
lds
sbb
pop
jmp
add
insb
int3
pop
mov
popf
xor
into
fidivrl
fisubrs
stos
cmp
cltd
dec
cmc
fwait
clc
lock
mov
cmp
nop
stc
out
inc
ds
cmp
imul
in
int
inc
incl
je
fisttps
sub
je
shlb
mov
pop
sarl
test
clc
and
mov
fwait
js
ljmp
lret
cmp
or
add
dec
scas
insl
popa
jns
loopne
popf
or
inc
sbb
dec
xor
fistps
dec
xchg
push
stos
mov
cmpsb
icebp
stos
pop
test
pusha
jne
hlt
mov
je
fisubl
rorb
bound
jb
cmpsl
mov
pop
xlat
cmp
loopne
mov
daa
mov
or
lds
jecxz
push
jg
pop
std
add
cmp
push
push
adc
xor
inc
outsb
mov
mov
fistpl
sub
push
xor
fisubs
adc
add
mov
pop
arpl
push
neg
jns
mov
jge
gs
push
mov
push
movsl
jae
and
iret
movsl
dec
mov
sti
idivl
lret
ja
xchg
popf
enter
jmp
jae
and
les
add
push
std
inc
out
xorb
mov
add
call
push
add
jb
fnsave
ret
mov
sbb
mov
adc
or
mov
push
jge
mov
xchg
push
mov
xchg
jno
andl
insb
leave
stc
add
mov
mov
mov
popf
dec
sub
gs
mov
dec
sbb
sbb
mov
inc
lods
mov
ret
push
lods
enter
mov
adc
lea
or
fdivs
sarl
mov
in
outsb
mov
shll
jp
scas
in
clc
sbb
mov
mov
xor
inc
ror
jno
gs
in
jle
push
daa
or
rcll
int
xlat
stc
movsl
xchg
inc
sub
push
pop
sbb
jg
outsb
scas
add
jg
iret
daa
pop
outsl
pop
in
jl
sbb
mov
xchg
imul
imul
fbstp
icebp
loopne
fidivl
and
jl
repz
mov
ja
add
jle
ja
and
repz
test
xor
push
movsb
aaa
mov
adc
xor
dec
fidivl
sub
xor
or
pusha
mov
push
in
xor
push
je
repz
das
in
jl
cld
adcb
in
and
shrd
adc
push
loope
add
xor
js
test
inc
test
lahf
pusha
std
mov
xchg
fwait
or
cltd
cmp
rorb
leave
push
dec
mov
test
inc
sub
int3
add
mov
adc
les
lds
dec
pop
daa
lds
cmp
and
sti
pop
xchg
xor
lret
movsb
ds
pop
cmpsl
fildl
xor
das
mov
je
ss
lods
lret
mov
jp
outsl
daa
push
rorl
xor
xchg
negl
sahf
and
ret
xchg
test
clc
cmpsb
push
sbb
cmp
xchg
fwait
dec
test
stos
xchg
sub
fisubrs
mov
into
das
mull
pop
loopne
pushf
cwtl
xlat
dec
mov
or
or
jb
push
mov
push
fidivs
adc
test
test
out
pushf
out
adc
cmp
js
add
jmp
jmp
shrb
nop
call
mov
cmp
cmpsb
xchg
fidivl
int
popf
cmp
sub
push
mov
xchg
pop
aas
add
scas
xchg
mov
movsb
cmp
adc
lock
lods
or
sahf
xor
adc
negl
xchg
stc
or
loop
popa
add
iret
xchg
xchg
and
mov
adc
dec
push
or
cmp
xchg
adc
imulb
mov
lods
fstl
leave
mov
cli
ss
imul
shll
mov
pop
cmc
jecxz
inc
or
mov
imul
xor
stc
or
shlb
mov
cli
mov
and
rorl
lret
mov
mov
rcl
jb
mov
mov
ja
cmp
shlb
dec
jecxz
mov
out
div
adc
mov
outsl
push
test
imul
sbb
std
movb
std
sbb
data16
enter
jne
jl
xchg
sub
cmp
fisubs
xor
xchg
xchg
repnz
rcrl
cmc
mov
add
sub
popa
mov
or
js
ret
xchg
mov
pop
insl
pusha
pop
popa
enter
jle
jge
add
insb
in
cmp
stos
sarl
repnz
adc
pop
push
adc
pop
and
fidivl
push
cwtl
mov
aad
sub
or
pop
dec
out
stc
outsb
imul
mov
xchg
outsl
test
xchg
lods
pop
icebp
fildll
stc
pop
cmp
imul
mov
sbb
aam
mov
and
mov
inc
mov
fucomip
push
or
es
shl
add
dec
mov
repnz
js
mov
pop
xlat
xor
mov
cld
mov
clc
nop
ja
mov
lods
ljmp
int3
cmp
mov
jg
push
sub
jge
cli
std
cmp
rol
pop
and
aaa
mov
ficoml
cmp
fimull
cltd
lcall
in
cmc
add
mov
ret
mov
sub
dec
cmpsb
adc
jl
mov
out
and
sub
sub
pop
popl
add
rcl
add
or
push
pusha
push
mov
testl
jb
loop
jp
ret
nop
ds
je
pop
sbb
inc
aas
repz
loopne
adc
aaa
fchs
or
cli
repz
insb
xrelease
clc
mov
gs
into
jne
inc
orl
repz
lret
push
sti
jbe
jg
jnp
ljmp
xchg
pusha
ss
lret
sub
gs
jmp
xchg
pop
mov
pop
pop
testb
sbbb
stc
push
fimull
gs
mov
xchg
nop
daa
ret
sti
test
dec
pop
data16
adc
adc
pop
xchg
push
rep
inc
cmp
ljmp
jmp
push
sub
outsl
push
inc
je
cmp
adc
adc
mov
bound
mov
and
adc
sbb
ds
cmp
aad
pushf
pop
subl
aaa
mov
lock
and
test
loope
orl
stos
push
lock
popa
test
inc
call
lea
ret
lcall
jge
dec
and
lds
shll
pop
push
jecxz
dec
aam
fisttpl
mov
inc
rcl
sbb
inc
fnsave
mov
dec
and
mov
ljmp
jg
enter
or
adc
sub
adc
enter
rcrb
mov
inc
in
gs
ds
dec
iret
data16
mov
orb
mov
imul
jmp
lods
sbb
xor
xor
arpl
mov
cmp
sbb
or
or
sub
jp
insl
sub
push
inc
mov
inc
stc
push
pop
or
add
jno
notb
jns
call
mov
movsb
adc
jp
pop
xor
in
cld
or
mov
dec
inc
sahf
js
arpl
into
sub
clc
sti
mov
shl
dec
fistpll
cmp
fisubrs
push
addr16
push
sub
cmp
lret
xlat
push
sahf
imul
ljmp
jmp
mov
jle
push
dec
or
jmp
lcall
nop
inc
or
xorb
or
out
es
out
mov
xchg
adc
cmp
shll
hlt
cmpsl
xor
sbb
cmp
and
push
or
mov
lock
push
gs
fldenv
pop
and
cmp
out
xor
mov
jp
rol
pop
ret
fucomp
insl
shr
mov
sbb
rorl
lds
mov
jo
mov
int3
push
and
gs
dec
push
in
in
fadd
push
xchg
push
mov
outsb
jmp
push
movsl
call
xchg
and
sub
dec
in
jle
jno
mov
add
jne
clc
push
fimuls
xlat
repz
mov
add
fiaddl
insb
inc
or
mov
cmp
loopne
xchg
ret
jae
mov
cmp
cmp
in
and
out
mov
cld
fistps
sbb
mov
movsb
das
xor
shll
cmp
or
sub
jbe
ds
xchg
adc
inc
jmp
sbb
sub
mov
adc
push
pop
movsl
xchg
mov
and
adc
test
repz
rcrl
in
cmp
add
fildll
add
icebp
insb
shll
dec
mov
lcall
lods
imul
ror
mov
fistps
aam
sarl
nop
cmp
xor
adc
inc
and
inc
ljmp
add
ljmp
in
lock
das
mov
cmp
fstpt
push
mov
and
addr16
mov
push
cmp
js
shrb
inc
pop
addr16
ljmp
fisttpll
mov
out
xor
jb
and
scas
stc
nop
and
int
out
pop
cmpsl
mov
adc
sahf
mov
iret
xor
pop
pop
cwtl
ret
or
cmp
add
mov
pop
sub
icebp
jnp
sub
ret
icebp
sub
pmaxsw
mov
jmp
lea
jge
and
sbbb
mov
mov
shlb
sub
test
adc
jle
iret
or
mov
mov
adc
stos
outsb
std
xchg
in
mov
or
test
sub
or
mov
dec
adc
pop
mov
jle
push
scas
mov
xchg
arpl
mov
xchg
push
xchg
lods
ja
adc
cmc
and
mov
sub
rcrl
cli
lcall
iret
add
jnp
popf
sub
pop
xchg
cmp
pop
insb
pop
lret
bound
insb
insl
test
fmuls
mov
ss
gs
adc
xchg
data16
cmp
cwtl
rolb
mov
and
inc
push
xor
dec
jb
mov
sub
dec
sbb
mov
lock
xchg
bound
pop
mov
sub
mov
imul
data16
mov
pop
mov
loopne,pt
lods
cmpsl
cmp
sub
pop
std
pop
xchg
pop
movsb
xchg
jbe
add
push
dec
xchg
mov
cwtl
inc
or
add
mov
ret
add
out
test
imul
loopne
pop
fs
or
dec
sbb
mov
jg
adc
add
rcrl
lcall
or
movsl
and
lods
inc
adc
repnz
arpl
push
and
cmp
fs
aam
xlat
adc
lea
test
dec
or
test
leave
cwtl
fidivrl
outsb
aaa
mov
mov
cmp
and
sti
sahf
jp
repnz
mov
cltd
insl
test
sar
les
cmp
xchg
xchg
fwait
out
pop
add
adc
jg
adc
int
aam
out
nop
or
jle
jb
and
jg
pop
dec
fcomps
jne
xchg
cmc
sbb
sbb
jp
add
cs
je
mov
movsb
repnz
sub
notb
and
and
orl
arpl
and
mov
or
inc
cmp
pop
cmpsb
inc
in
mov
inc
cmp
or
and
call
inc
enter
inc
mov
jecxz
fcoml
push
mov
je
nop
daa
aaa
cmp
ss
sbb
arpl
rcrb
inc
std
test
mov
andb
jae
aaa
inc
loope
test
inc
or
push
dec
adcb
sub
adc
pop
mov
ja
xchg
int
mov
jmp
xor
xchg
nop
ja
adc
dec
dec
xchg
psraw
xchg
push
adcb
loop
arpl
dec
pushf
das
jge
fs
fcom
sti
ret
dec
and
fwait
cmpsl
cmp
call
stc
cmpsb
sbb
sahf
dec
ss
enter
mov
adc
or
dec
test
pushf
hlt
adc
es
outsb
push
jl
repnz
inc
in
aaa
popf
mov
inc
fsubrs
call
jg
iret
mov
pop
into
adc
or
fisubl
add
adc
out
ret
push
dec
mov
dec
out
dec
js
jle
ja
fimull
out
in
jne
sub
sub
stos
pop
jnp
adc
push
leave
mov
jae
imul
subl
push
fcmovbe
arpl
dec
inc
push
push
or
rclb
inc
xchg
mov
jo
ljmp
jno
jo
mov
outsb
sub
sahf
pop
aad
cmp
fsubrp
lods
xor
cmp
int
adc
movsl
cmpsb
and
pop
jg
or
jnp
arpl
cmp
jl
inc
fwait
je
xchg
ss
inc
or
inc
pop
dec
data16
lret
or
cmc
cmpsb
scas
xor
jp
sub
decl
cmpsb
repz
add
aam
xlat
test
aam
test
mov
ret
push
jb
adc
sbb
mov
outsl
lock
dec
sarl
imul
cmpl
call
iret
lods
inc
add
mov
push
lret
sbbb
xchg
jecxz
add
add
push
pop
pop
xor
ds
push
fbstp
fdivrl
cmpl
mov
lds
addr16
pop
imul
push
imul
or
pusha
out
pop
xor
mov
and
mov
mov
xor
lods
xor
mov
push
mov
aad
sbb
xor
inc
and
mov
fwait
or
fldl
jo
xor
jns
xchg
lea
xchg
stos
into
insb
pop
out
popf
out
ret
or
shrl
out
cmpsl
add
jae
dec
imul
xor
inc
or
pop
pusha
sub
mov
sub
aas
dec
test
jl
movsb
jle
hlt
and
push
sub
xor
lret
inc
out
into
sbb
sub
adc
rcrb
clc
testl
and
pushf
mov
popf
lret
arpl
sub
and
lds
in
stc
dec
pop
insl
xor
jmp
and
add
scas
lea
mov
lods
fisttpll
stos
pop
lret
push
cwtl
aam
sbb
mov
loope
scas
pop
sub
cmc
shrb
xchg
lcall
mov
pop
push
inc
fildl
push
inc
out
pop
movb
in
aam
imul
out
out
add
jmp
mov
pop
lds
sub
inc
sub
mov
lcall
ret
lret
cmp
push
mov
mov
lds
jno
and
js
clc
push
or
xchg
arpl
cmpps
repz
and
rolb
sbb
sbb
xlat
outsb
jno
or
cmc
mov
add
add
cmp
push
icebp
or
lock
negb
fadd
ja
test
xchg
xlat
fxch
lock
imul
add
jns
test
imul
test
icebp
push
repnz
int3
sub
or
or
popa
orl
pop
push
jno
mov
push
cmpsl
sarb
in
jne
arpl
lret
mov
add
xor
js
hlt
sbb
add
adc
mov
pushf
mov
mov
hlt
das
mov
cmc
jno
enter
scas
jl
jg
mov
cs
scas
mov
in
and
xchg
bound
dec
cmc
dec
imul
add
imul
mov
mov
push
mov
dec
cmc
out
test
inc
sub
test
add
cmp
push
cli
cld
clc
jle
popf
xchg
rcrl
loopne
xchg
mov
pop
push
push
xchg
jmp
jne
and
inc
into
cmp
ljmp
mov
ss
xchg
mov
lods
in
push
mov
adc
lcall
xchg
int3
arpl
xor
jmp
push
rolb
popa
or
and
pop
mov
push
cmp
rdtsc
in
bound
jbe
jp
movsb
stos
push
call
or
sbb
ss
xor
and
lret
les
cmp
pop
mov
inc
mull
sub
xchg
dec
or
push
xor
ss
sub
sub
arpl
mov
adcl
pop
mov
pop
push
cmpsl
jo
fnstcw
in
in
sbb
cli
dec
push
cld
pop
stos
inc
cmp
enter
push
lcall
mov
jae
popf
mov
push
adc
aad
imul
loope
fbstp
add
add
out
dec
pop
lock
stc
xchg
push
jo
iret
push
xor
int
jecxz
inc
cmp
sub
rorl
jl
mov
push
movsb
xchg
divb
sarl
mov
lahf
mov
loope
and
dec
hlt
cwtl
push
movsl
leave
mov
mov
add
cmp
sbb
and
stos
xchg
push
cmc
and
adc
pushf
mov
rep
and
mov
or
fpatan
lret
test
push
sbb
mov
xchg
sub
push
iret
push
notb
sub
mov
cmp
int
sub
add
xor
push
mov
enter
jle
outsb
mov
push
les
mov
xor
push
adcb
pop
mov
cmpsl
imul
sarb
out
test
jne
jno
cmp
lods
loope
fdivrl
dec
lret
inc
push
out
stos
mov
or
in
test
push
mov
jae
sti
imull
push
cmp
inc
dec
sbb
and
and
adcl
mov
daa
data16
push
lret
dec
xor
inc
into
xor
jmp
and
mov
lcall
push
dec
gs
cmp
fs
pop
jbe
inc
test
dec
mov
cmpsb
lret
ficomps
aad
dec
jmp
cmp
lods
repz
shll
mov
or
and
stos
fstl
mov
int
xor
test
cmp
loopne
nop
jp
dec
jns
lods
pop
scas
repnz
xchg
rcll
push
outsl
test
andb
rcl
jnp
push
outsl
sbb
andl
mov
jmp
fldt
shl
int3
loopne
jl
mov
xchg
ja
aam
cld
mov
fiaddl
stos
test
leave
cmpsb
adc
mov
pop
lret
mov
cld
sbb
fdiv
xor
push
and
jo
jno
inc
out
test
add
lock
pop
mov
mov
in
test
xchg
fidivl
loop
lock
adc
mov
cmp
vpsllw
in
testb
sbb
push
or
fwait
aas
iret
sub
xchg
sbb
jg
mov
mov
xor
mov
out
cmpb
sarl
lds
add
inc
lahf
imul
pop
popa
ja
adc
cmpl
mov
xchg
stos
loop
lods
cmp
aaa
or
dec
imulb
or
pop
fcoml
cmpsb
test
pop
mov
mov
adc
pushf
arpl
hlt
jne
adcb
dec
scas
sub
scas
adc
mov
lret
pop
mov
and
cmp
je
adc
shll
arpl
scas
dec
ds
mov
jle
lods
mov
filds
cmp
add
mov
cli
adc
fidivl
arpl
mov
and
push
inc
xor
xchg
pusha
push
int
sbb
lods
cmp
jo
xor
jbe
jge
scas
xchg
insb
jle
rcrb
aas
nop
mov
mov
mov
lods
mov
xchg
fnsave
into
dec
sub
sarb
in
pop
lret
jae
shrb
scas
mov
jbe
xchg
inc
mov
outsb
cmpsl
fs
push
or
rcll
jle
cmc
imul
mov
push
sub
imul
pop
adc
pop
ja
test
dec
out
push
xorl
fst
and
and
jle
xchg
scas
add
cmc
and
pop
les
mov
push
ret
jle
mov
mov
call
cwtl
stc
and
mov
push
test
mov
lret
adc
test
adc
inc
push
cmp
push
cs
fcompl
in
cmp
xchg
or
int3
push
xor
xchg
scas
mov
xlat
imul
cld
jno
pushf
cmp
fs
mov
fxch
shll
rcrb
mov
out
bound
in
pusha
or
lods
xchg
and
lahf
mov
sbb
sti
divl
sub
movsb
pop
cmp
neg
mov
lods
jo
test
inc
leave
std
imul
xchg
xor
movsl
push
mov
mov
clc
push
sbb
ds
inc
into
pop
xor
sub
ret
pop
popa
sub
andl
jns
inc
pavgw
test
xchg
xor
loopne
sbb
add
xor
mov
outsb
imul
cld
daa
nop
test
mov
pop
mov
mov
mov
ret
pop
je
push
mov
pop
imul
lahf
negl
cmp
and
test
or
push
mov
subb
stc
sbb
adcb
aas
and
cmp
xor
mov
mov
mov
leave
adc
push
and
dec
rclb
je
cmp
lods
loopne
and
jle
xor
add
jae
inc
cmp
adc
test
fidivrs
mov
ja
dec
outsl
push
cmp
xor
iret
xor
and
inc
xchg
xchg
call
sbb
popf
add
icebp
dec
aam
inc
pusha
push
adc
stos
cli
stos
movl
outsb
popf
ss
lret
mov
inc
popa
fidivrs
xor
xor
xchg
dec
ss
lock
aaa
push
test
dec
jl
ret
mov
add
les
xor
adcb
push
mov
xchg
adc
cmp
mov
push
pop
rcrl
sub
test
pop
push
loop
sbb
jae
xchg
pop
loopne
dec
mov
push
xchg
imul
aaa
test
mov
jmp
dec
dec
fucomip
lock
or
dec
scas
xchg
out
pop
mov
lea
cmpsl
mov
idivb
shlb
adc
jmp
je
insb
add
sub
dec
cld
inc
stc
pusha
lock
pop
xchg
aaa
add
icebp
and
sbb
imul
mov
ret
ret
xlat
mov
mov
sbb
sbb
or
add
jno
mov
shrl
pop
fadds
mov
adc
stos
pop
icebp
mov
subb
push
js
push
and
cmc
loopne,pt
in
aam
add
adc
je
mov
sbb
int
iret
bound
or
jmp
inc
xchg
push
int
jb
sub
xchg
popf
xchg
sbb
and
mov
clc
jge
dec
pop
fcmovnb
jecxz
ret
les
mov
or
inc
ljmp
mov
loope
ja
ret
xor
pop
mov
shlb
push
push
out
add
inc
xor
test
jnp
xor
push
lahf
pop
gs
inc
js
mov
xlat
jns
iret
xor
rorb
cld
mov
in
dec
ret
pop
dec
out
inc
arpl
repnz
sbb
sbb
imul
or
rorb
mov
cmpsl
outsl
adc
mov
xor
fnsave
mov
out
adc
in
inc
xchg
dec
dec
mov
in
dec
adc
aad
into
and
popa
mov
xor
push
jne
push
mov
clc
dec
pop
sbb
sbb
add
sub
jns
xchg
cmp
hlt
jae
jae
mov
ljmp
clc
pushf
dec
out
je
cli
xor
ficoml
dec
outsb
inc
mov
mov
push
xchg
icebp
adc
pop
imul
push
xchg
in
mov
sbb
dec
lods
push
shr
lds
ss
push
aas
faddl
rcrl
loope
fiaddl
or
pop
repnz
int3
movsb
icebp
add
hlt
mov
arpl
inc
jo
popf
or
xchg
andl
cltd
lods
test
adc
mov
or
cmpsl
icebp
or
stos
jbe
and
xor
dec
mul
data16
adc
in
hlt
jp
jae
outsb
mov
mov
sbbl
mov
sahf
mov
sbb
xorb
in
stos
mov
mov
lock
and
jns
lock
push
or
sub
dec
outsb
add
cmpsb
in
out
gs
les
js
dec
sub
fnstcw
cs
xchg
movsl
mov
scas
jnp
fbld
sbb
mov
clc
movsb
cmp
dec
dec
jmp
cli
outsb
shll
cmp
dec
xlat
mov
aaa
mov
ljmp
scas
xchg
stos
jno
fnsave
rcr
loopne
mov
sbb
loopne
adc
rcrb
xor
aaa
or
inc
xor
fsts
xorb
xchg
or
lcall
into
aad
in
push
lahf
out
mov
add
incb
cmp
pop
sub
xchg
pop
jg
sub
cld
xor
add
pop
dec
mov
loopne
sub
pop
inc
rcrl
imul
push
mov
xlat
jmp
sub
or
fisubrs
mov
in
bound
sbb
or
cmp
ljmp
pop
int3
xor
push
insl
sbb
inc
and
and
hlt
scas
dec
int
cli
loope
out
shrb
inc
fisubrl
adc
inc
xor
outsl
in
and
sub
test
and
sbb
and
xlat
in
sub
stos
mov
mov
and
dec
mov
scas
es
mov
adc
or
js
inc
cs
sbbb
sbb
jg
mov
pop
and
je
add
or
push
out
mov
sbb
daa
jle
aad
add
push
mov
xchg
pop
test
lods
pop
jle
pop
mov
mov
cmpsl
push
push
lahf
loop
xchg
jle
call
sbb
out
dec
dec
jns
sub
repz
out
or
xor
es
or
out
cmp
mul
in
test
xor
jae
ficomps
push
sbb
fistl
mov
push
or
mov
cwtl
lods
leave
xchg
jle
pop
mov
nop
shld
jle
dec
add
sbb
jno
jno
cmp
dec
dec
adc
sti
gs
xchg
sbb
sahf
cmp
dec
call
je
jns
call
int3
adc
loopne
push
push
es
shr
or
xor
outsb
in
insb
pop
repnz
or
adc
inc
xchg
ja,pn
push
and
enter
add
outsb
int3
gs
lods
fisubl
mov
cmc
lret
mov
nop
stos
adc
cmp
push
insl
arpl
push
jb
jg
imul
sbb
mov
imul
push
cmp
xchg
sub
pop
add
mov
jp
sahf
leave
frstor
and
jne
insl
lods
lds
pop
insb
jb
lods
ret
xchg
sbb
mov
call
stc
imul
roll
or
loopne
xor
enter
js
add
add
dec
and
push
sub
enter
paddb
lods
mov
frstor
fs
pop
xchg
in
mov
and
ret
and
add
push
sub
jle
sti
mov
and
xor
insl
iret
sub
aad
mov
out
pop
sub
scas
lock
pushf
inc
in
clc
sub
adc
or
call
sti
push
xchg
jnp
mov
inc
mov
test
xor
scas
push
scas
sub
stos
rorb
lods
shrb
les
movsb
sti
xorb
push
outsb
rcll
jge
ja
dec
gs
pop
hlt
leave
shrb
push
xchg
insl
inc
lahf
jb
mov
pushf
dec
imul
lret
or
cmc
loope
mov
mov
or
repz
lea
hlt
icebp
icebp
jno
push
repnz
add
pop
adc
stc
ret
inc
push
rep
es
lret
sub
scas
xlat
push
rcrl
dec
in
mov
fsubs
outsl
or
incb
xchg
push
inc
in
testb
mov
pop
xor
or
ret
cmp
adc
inc
filds
in
or
popf
pop
mull
push
hlt
je
and
sbb
add
ja
mov
cmp
mov
aad
mov
mov
mov
imul
jb
cwtl
dec
cmp
and
test
data16
out
xchg
popa
adc
pusha
int3
cmpsl
test
lret
or
mov
push
push
cmpb
lods
movsb
loop
lea
adc
dec
int3
and
inc
fbstp
insl
movsb
shrb
push
push
inc
sub
xor
rcrl
mov
jo
push
or
mov
popf
sbb
and
inc
mov
test
cmp
cmpsl
mov
add
inc
idivl
dec
jmp
add
js
stc
or
adc
ja
mov
js
jae
inc
fucomi
std
outsb
sub
lods
jbe
sub
pushf
leave
pusha
fwait
lds
ss
out
pushf
ficoms
pop
xor
and
clc
popl
and
inc
pop
push
xor
iret
mov
addb
xor
jge
mov
add
es
lcall
test
rcrb
arpl
movsb
pop
aam
mov
push
rorl
cmpsl
cmp
in
daa
fxch
int3
jns
mov
shl
add
lcall
inc
add
aad
scas
out
xlat
mov
mov
out
and
icebp
in
jne
lcall
out
out
jbe
and
test
jmp
insl
and
punpckhbw
jb
fisttps
je
push
in
xchg
push
jecxz
mov
test
add
jle
int
mov
add
enter
cmp
adc
popf
dec
ljmp
cli
fdivrl
loopne
aaa
rorb
test
push
or
loopne
mov
rcrl
pop
dec
jne
jge
adc
jp
popf
jnp
mov
test
jmp
insb
pop
lcall
fisubrl
jmp
xor
cs
bound
scas
sbb
xchg
or
rcl
arpl
add
cmpsl
ds
jp
pop
lods
push
bound
cmp
xlat
or
adc
jo
jnp
xchg
or
mov
jp
sahf
jp
inc
jb
addr16
shll
mov
dec
and
shll
and
cmp
adcl
shlb
test
inc
enter
pop
lds
dec
sahf
outsl
jbe
sti
lock
pop
sbb
push
pop
inc
testl
out
push
scas
inc
aaa
cld
push
test
in
push
lea
ss
xor
int
xlat
push
in
xchg
mov
movsl
add
fidivl
lahf
andb
adc
sbb
shll
add
dec
cmp
add
sbb
rclb
sub
popf
mov
fsubrp
lods
mov
push
stc
sub
mov
popf
and
data16
sti
mov
loopne
xor
xchg
and
sbb
dec
in
push
mov
pop
fisttpll
cs
cmp
lahf
lods
ljmp
xchg
arpl
adc
std
xchg
imul
fwait
lods
out
movsb
xacquire
scas
ficomps
sub
insl
add
out
xorl
mov
outsl
sub
sub
hlt
stos
sti
push
out
jae
push
es
xchg
jne
scas
xlat
loop
or
mov
lahf
lds
notl
sbb
call
xchg
sti
inc
rcr
jo
lea
push
inc
std
xchg
xor
mov
divl
cmp
jb
jne
rclb
jle
jns
mov
int
inc
jnp
sub
xchg
mov
mov
push
pop
inc
sbb
test
dec
cld
lcall
push
inc
inc
adc
xchg
push
fnstcw
or
mov
das
pop
and
dec
fnsave
mov
xchg
out
xlat
test
cli
jne
outsl
dec
jns
xor
pushf
test
xchg
int3
sbb
xorl
dec
xor
adc
sub
add
dec
outsl
pushf
xchg
push
xchg
popa
cmp
aas
mov
movups
add
mov
loopne
aaa
cmp
pop
scas
pop
sbb
sti
and
fdivp
rorb
notb
pop
adcb
adc
imul
pop
out
and
repnz
enter
sub
and
jne
lahf
add
jmp
or
rclb
repz
cmp
xlat
mov
push
dec
pop
inc
in
and
pop
cmp
xor
xchg
loope
inc
inc
in
push
cwtl
mov
int
ss
jmp
adc
cltd
mov
repnz
xor
pop
add
gs
add
daa
mov
fsts
out
test
addb
movd
add
ret
xchg
jp
test
dec
aam
lcall
ret
lds
push
push
cld
xchg
ret
lods
cmp
push
ja
outsb
adc
mov
ret
repz
jmp
xchg
mov
arpl
js
xor
xchg
fwait
or
add
sbb
popa
jg
jb
je
jmp
mov
push
add
lea
je
movb
mov
sub
xchg
xchg
lods
ret
add
insb
ss
imul
push
and
jne
fidivs
ds
jg
mov
xchg
sbb
sub
mov
les
pop
and
ds
je
enter
xor
enter
dec
sti
xchg
adc
enter
lcall
inc
fmul
pop
mov
xchg
pop
insl
lcall
inc
xor
pop
mov
icebp
add
jecxz
fsubl
or
cmp
push
stos
sub
pop
pop
loope
jno
test
ja
cmp
cmc
add
fsubrs
sub
push
and
mov
insb
fsubrs
or
scas
out
test
repnz
pop
fsts
movsb
lods
add
jnp
clc
pop
xor
popa
imul
loopne
fisubl
inc
or
jmp
sarb
gs
and
and
mov
jo
test
movzwl
cmc
mov
iret
sub
jl
mov
add
stos
and
jbe
outsb
pop
jp
in
repnz
roll
sbb
pop
and
dec
lahf
scas
jnp
loope
addb
dec
loopne
or
jne
jle
dec
ffreep
adc
or
mov
pop
inc
inc
bound
mov
xchg
bnd
sub
xchg
add
jno
gs
pop
add
test
es
mov
sub
sub
xor
fpatan
mov
scas
xchg
sbb
sub
js
xchg
jp
insb
adc
cli
xchg
or
push
jg
cltd
adc
adc
mov
push
js
cmp
mov
and
lock
cld
fsts
lret
shl
jmp
xor
or
lcall
fsubrp
imul
loope
out
inc
stc
adc
rcl
ret
mov
fcompl
jbe
aas
jg
mov
loop
add
or
add
mov
scas
addr16
cmpsl
jl
mov
cltd
lock
fsub
stos
stos
punpcklbw
scas
xchg
js
adc
pop
shll
mov
add
dec
inc
arpl
pop
fwait
push
test
sbb
inc
fnsave
lods
and
xor
jl
ret
imul
rorl
dec
pop
pop
xchg
clc
insl
sub
das
sbb
adc
insb
and
adc
gs
aad
addr16
loopne
fisttpl
sub
pop
push
in
dec
push
aaa
clc
xchg
pusha
je
jl
int
mov
shl
dec
xor
int3
push
stc
mov
iret
data16
dec
jecxz
in
icebp
mov
roll
popf
les
aam
jge
push
cmp
test
mov
push
enter
shrl
adc
jnp
subb
nop
stos
mov
lcall
sar
jl
rorl
ss
pop
hlt
jg
outsb
xor
jnp
ja
push
mov
adcb
cs
cld
inc
mov
xor
cs
sub
cli
and
inc
jg
dec
pop
push
mov
xor
mov
adc
push
stos
test
dec
mov
dec
ds
mov
dec
shll
mov
adc
loope
shrb
imul
mov
xchg
lods
int3
mov
gs
icebp
adc
or
incb
clc
dec
jmp
cmpsl
pop
ljmp
popf
cmpsb
xchg
xlat
shlb
ficomps
xor
jmp
add
in
js
aas
xchg
stos
inc
jecxz
jp
sti
mov
jnp
sbb
or
cli
xchg
mov
imul
mov
mov
adc
mov
ret
mov
into
jns
jne
gs
dec
rclb
ret
js
addr16
nop
add
dec
lds
push
aaa
jmp
cmp
in
jmp
ss
xlat
mov
and
add
sbb
es
out
push
out
xchg
or
add
mov
rcrb
pop
out
sahf
es
inc
cmp
mov
popa
rcl
pop
inc
in
jb
and
daa
mov
pop
data16
int3
into
pop
fucomip
xor
xorl
cmp
mov
dec
sbb
mov
pushf
xor
mov
lcall
mov
std
loopne
scas
inc
and
or
ja
push
push
or
fnsave
imul
outsl
add
adc
ljmp
rorl
push
cwtl
cmp
cltd
push
sub
pushf
fildll
icebp
jg
mov
fildl
or
mov
incb
add
imul
and
pop
out
ss
ja
icebp
test
sahf
call
addr16
xchg
lds
jns
jne
sbb
loope
jmp
mov
or
add
lahf
scas
jno
push
xlat
push
dec
ljmp
movsl
pusha
jl
adc
sti
nop
ret
inc
pop
inc
lcall
add
dec
fstpt
lock
mov
xor
xor
mov
push
stc
mov
dec
cmp
lods
inc
bound
and
dec
shl
and
icebp
sarb
arpl
ret
pop
xchg
cbtw
or
in
xchg
lahf
imul
mov
iret
and
inc
sub
add
ficoml
mov
xlat
out
mov
sbb
pop
testb
lret
sub
out
adc
mov
xchg
insl
fidivrs
sub
mov
incl
out
jmp
enter
sbb
sub
adc
movsb
divl
inc
mov
lds
xchg
push
lods
and
mov
push
lret
add
cs
dec
sti
stos
sbbl
mov
femms
movsl
sbbb
scas
in
or
adc
adc
add
divl
xlat
gs
jno
jb
into
mov
xor
push
mov
push
mov
dec
lds
fsubr
in
and
add
ljmp
dec
jbe
xchg
popa
cmp
out
fldcw
push
jmp
into
sub
and
lock
addl
stos
and
and
xor
add
xor
stos
repnz
ss
xlat
xchg
cs
rcll
sbb
sbb
xchg
test
cmp
sub
pop
or
jmp
addl
lret
xchg
push
ret
inc
loope
ljmp
inc
rorb
dec
pop
push
inc
fistpll
mov
int3
inc
out
je
shr
jge
xchg
imul
andb
shll
inc
dec
test
ret
push
jbe
adcl
nop
jo
and
cmpsb
push
mov
mov
sbb
test
in
push
inc
jne
enter
push
mov
and
jbe
cmp
dec
je
out
inc
xchg
mov
mov
add
int
cmc
or
adc
std
adc
and
cs
inc
cs
clc
in
sbb
and
mov
xor
cmp
in
sbb
add
bound
dec
std
xorl
shr
ret
fstps
mov
mov
mov
scas
in
das
fmuls
pusha
fistpll
adc
ss
push
mov
fbstp
rcll
adc
cwtl
cmp
rcrb
aam
xor
push
mov
icebp
add
leave
dec
lcall
out
pop
int
pop
sub
xchg
cmpsb
push
pusha
loop
inc
jle
lods
mov
hlt
js
add
jno
cmp
cmc
xchg
dec
mov
jl
mov
out
mov
jl
add
or
stos
shrl
repz
dec
jne
pop
divb
sar
cmp
bound
test
mov
and
sub
cmpl
xchg
loope
mov
pop
ret
test
push
adc
cmc
or
rorb
insb
inc
lods
fdivrl
mov
aaa
gs
mov
aad
sub
adc
std
mov
outsl
push
push
mov
mov
mov
addr16
xor
mov
fistpll
insb
pop
incb
dec
sub
shll
xor
mov
or
sbb
imul
mov
dec
jnp
dec
addr16
ds
stos
add
outsl
daa
outsl
push
cmp
add
test
dec
cmp
jno
dec
movsl
fcom
push
outsb
adc
adc
xor
mov
sbb
sbb
mov
das
push
pop
outsb
rolb
jb
adc
mov
cmp
add
rcll
cmc
and
ds
in
repz
xchg
fs
arpl
jnp
lcall
ret
pop
add
jecxz
push
mov
stos
inc
das
cmp
call
xor
inc
jmp
sbb
xchg
inc
leave
jge
sti
arpl
lahf
mov
fisubs
mov
mov
adc
decb
daa
loopne
jo
lock
inc
dec
jno
aas
mov
xchg
sarb
pushf
push
out
and
loopne
xchg
insl
out
cltd
dec
xor
jmp
dec
into
jmp
in
andb
in
fucom
or
lock
aas
outsl
adcb
cmp
pop
mov
test
inc
pop
cmpsb
mov
jge
jno
mov
xchg
xlat
push
addr16
repz
lahf
xor
dec
pop
inc
clc
xchg
mov
pop
outsl
in
jo
cwtl
mov
mov
lahf
rcll
shr
cli
push
and
sti
fsubl
test
loopne
lods
cmp
adc
fimuls
out
stos
mov
pop
adc
das
pushf
dec
pop
stc
ss
or
mov
add
out
cmc
gs
sbbb
dec
in
dec
mov
out
out
loopne
push
xchg
ret
pop
or
bound
push
out
ja
outsb
sub
leave
sub
stc
loop
aad
xchg
dec
in
stc
cltd
loopne
loop
out
pop
sub
jns
inc
lods
cmpl
xchg
jo
fsubp
ja
in
outsl
pop
enter
mov
mov
push
sub
fildll
lret
xchg
ficoml
repnz
fsubrp
stos
mov
or
cmp
fcomps
adc
push
pop
in
mov
mov
add
fs
in
add
clc
mov
icebp
adcb
xor
fwait
jne
imul
sub
jecxz
ficompl
cmpsb
mov
aaa
ja
xlat
jbe
insl
stos
imul
xor
aas
sub
out
dec
mov
sahf
pushf
scas
mov
lods
addr16
xchg
cmp
push
xor
mov
hlt
cmp
inc
xor
cwtl
add
mov
pop
adc
or
ret
mov
or
lea
pop
mov
addr16
xor
jno
push
xchg
adc
lret
out
sbb
push
imul
mov
or
mov
mov
and
jb
mov
into
xchg
inc
pop
or
mov
test
xor
pop
mov
int3
lock
xchg
sti
xlat
xchg
in
or
jno
push
cmp
rcll
out
fbld
inc
mov
cli
or
xchg
push
outsl
push
rcl
adcl
or
iret
test
jmp
mov
fldenv
fwait
into
arpl
cs
push
iret
data16
aaa
cmpsb
stos
fs
push
mull
fxch
push
int
pop
jecxz
gs
mov
push
in
jno
inc
xor
xor
lcall
in
push
push
movsb
out
and
jns
ucomiss
inc
cld
sub
rol
mov
mov
xor
lods
pop
cmp
sub
shrb
insl
fs
sbb
movsb
cmp
and
les
scas
inc
dec
fstl
ds
mov
fldcw
push
jmp
sub
das
int3
negb
push
ss
jno
dec
mov
pop
aas
add
mov
int
insb
hlt
xchg
or
xor
cli
jmp
jg
sbb
mov
adc
test
adc
dec
inc
inc
aas
lret
dec
or
mov
stos
add
sbb
movsb
pcmpeqb
or
lods
push
aam
add
cmp
movsl
dec
ljmp
dec
stos
sbb
or
decb
inc
fnstcw
xor
sub
cmp
arpl
bnd
inc
and
push
sbb
fstl
lahf
xor
xor
mov
fbld
mov
jg
or
mov
imul
xor
and
aaa
or
sub
in
xor
mov
dec
adc
mov
pop
mov
xor
push
mov
pop
imul
jo
int
sbb
fbld
mov
sbb
mov
dec
rcrb
ljmp
jne
loope
xor
mov
mov
and
das
outsb
xchg
push
xor
ret
aaa
push
inc
and
push
dec
dec
cltd
clc
je,pt
or
and
add
dec
fs
inc
xchg
test
cmp
jge
sbb
inc
sub
popf
lock
scas
scas
int3
mov
fisubrs
sub
push
push
outsb
in
es
mov
dec
pop
out
jge
test
and
icebp
jg
and
gs
inc
incb
lcall
aad
jnp
rcrl
scas
dec
shl
pop
jno
lods
pop
xchg
rcl
mov
loop
push
push
aam
mov
cmpsl
call
jmp
rorl
mov
enter
push
jmp
sarb
popf
aaa
in
repz
xchg
jmp
mov
icebp
lea
fs
das
repz
lock
js
add
add
stos
pop
xor
mov
ror
addb
cmp
or
adc
dec
sbb
test
jbe
jnp
sti
fdivp
sbb
inc
popf
push
lds
xor
and
movsl
cmp
stos
mov
mov
jbe
loop
mov
mov
test
sti
pop
adc
mov
sub
out
cmpsl
adc
ret
sbb
cmpsl
shll
push
sbb
fbstp
mov
mov
cmp
pop
leave
and
cmpb
jmp
aas
test
dec
jg
push
loop
cmp
mov
sub
stos
xchg
lock
outsb
push
repz
xor
loopne
xchg
adc
cs
das
aaa
mov
mov
pop
dec
push
mov
push
cltd
mov
sub
push
jg
lahf
and
rcrb
jl
stc
lea
aad
aam
js
xchg
push
push
mov
shrl
sub
dec
mov
repnz
jns
sti
mov
js
ds
cmp
mov
xor
es
lds
cmp
and
in
sub
mov
pop
adc
lret
or
jg
lahf
cli
cmpsb
cmp
pop
add
dec
ss
popf
and
gs
int
cmc
fdivrl
jl
test
lret
push
cmp
push
insl
jae
or
pop
lea
push
fnsave
ss
mov
cld
xchg
pop
mov
and
scas
sub
xchg
sub
xchg
add
test
iret
popaw
inc
push
mov
jns
and
sub
ss
dec
ljmp
adc
xchg
call
or
cmc
mov
mov
mov
xlat
outsb
pop
mov
cmc
adc
adc
arpl
lahf
mov
arpl
xor
jnp
sub
mov
sbbl
in
negb
lahf
adc
jb
out
test
xor
mov
mov
sti
pop
std
stc
nop
cs
jb
in
andl
xchg
ret
lcall
push
stos
in
push
ja
mov
retw
sub
call
test
nop
hlt
mov
test
out
mov
cmp
daa
mov
pop
xchg
fdiv
dec
lret
and
cmc
adc
mov
cld
loop
mov
xchg
push
cmp
adc
dec
inc
lock
into
ss
mov
sbb
ja
mov
dec
cmp
dec
pop
lahf
dec
add
push
mov
out
add
mov
insb
insb
hlt
push
iret
dec
push
iret
faddl
and
jmp
mov
fwait
es
sbb
mov
push
pop
xchg
or
mov
inc
cmc
push
lds
das
dec
add
sti
push
sub
dec
outsl
lcall
stos
jae
lods
std
cld
popf
clc
sub
sbb
mov
adc
insl
add
aaa
pop
adc
mov
sbb
cmp
adc
pop
mov
jno
repz
mov
mov
arpl
out
int
fdivl
les
cld
cli
jne
mov
push
scas
jb
jae
xchg
popa
in
subb
leave
outsl
inc
sub
push
dec
add
adc
cwtl
test
je
scas
or
jmp
sbb
int
das
lret
pop
pop
jmp
mov
adc
rclb
in
push
subb
jge
or
fcompl
ljmp
xor
add
test
xchg
jns
jp
icebp
adc
icebp
cmp
inc
jp
movsb
xchg
mov
dec
jl
cmp
add
out
and
xlat
mov
mov
add
dec
mov
lods
icebp
adc
mov
jns
scas
out
loope
outsl
lds
mov
insl
dec
shll
xlat
and
pop
std
int
pusha
sbbb
dec
jge
mov
sbb
pusha
fstpl
call
xchg
rorl
cmpsb
xchg
testb
iret
jl,pt
movsl
mov
mov
xchg
mov
insl
adc
ljmp
or
cmc
add
shr
popf
ljmp
fisttpll
pop
hlt
ljmp
dec
cwtl
and
mov
sahf
sbb
fdivl
push
jb
inc
adcl
mov
or
pop
xchg
pop
dec
iret
adcb
mov
and
push
dec
popa
mov
rolb
add
dec
lahf
mov
mov
in
add
sbb
pop
bound
mov
mov
out
push
cs
inc
mov
das
nop
mov
push
jmp
xchg
js
imull
pop
jmp
push
test
lret
lret
test
lret
fists
movsb
xchg
nop
jl
jl
pop
dec
or
mov
sbbb
scas
mov
xchg
inc
in
pusha
hlt
fwait
dec
imul
jge
sbb
adc
int3
addr16
fwait
xor
daa
adc
std
xchg
scas
mov
sub
mov
xchg
jbe
clc
lods
arpl
fisttpll
xorl
cmpsb
iret
test
sbb
or
jl
testb
hlt
outsb
add
out
fmul
imul
mov
push
push
lret
es
hlt
cmpsl
ds
repnz
or
int
and
mov
xchg
scas
in
clc
lahf
rcrb
lea
nop
dec
repnz
sub
adc
jb
mov
lahf
ss
lahf
cmp
inc
xchg
data16
jae
cs
int
mov
add
dec
pop
jl
stos
sub
cmpsl
pop
lods
mov
pop
popf
add
lret
jecxz
and
lcall
sub
and
js
mov
fisubs
jno
into
mov
push
or
in
or
stc
hlt
sbbl
inc
xchg
sbb
mov
mov
data16
ja
adcl
jb
das
cmp
cmp
mov
jp
add
sbb
stos
or
cmpsl
xor
aad
xor
push
mov
mov
inc
cwtl
pop
popa
daa
mov
xor
push
int3
arpl
movsb
and
and
xchg
or
mov
cli
stos
imul
lret
pop
ja
mov
sbb
aad
pop
and
stos
cmp
mov
fdecstp
inc
dec
and
push
mov
movsl
cmp
push
adc
mov
push
add
mov
xorb
dec
out
pop
xchg
sbb
insl
js
pop
ss
mov
add
or
push
mov
fidivl
movsl
aas
jb
pusha
jp
cmp
and
xor
cltd
imul
jmp
inc
pop
sahf
or
bound
and
push
loopne
rcrb
pop
std
mov
inc
aas
test
dec
mov
push
stos
leave
xor
xchg
pop
fsub
fldl
iret
fcoms
js
push
js
inc
leave
mov
ficoml
and
or
fmulp
and
add
rclb
or
xchg
mov
jp
fisttpll
mov
ja
or
aas
xchg
lods
pop
aad
mov
cmc
push
pushf
sbb
inc
lahf
shl
arpl
jmp
jo
repz
pop
rcrb
loope
add
inc
into
fdivrl
dec
push
shlb
jle
mov
pop
fmul
jge
sbb
add
mov
ret
xchg
fnstcw
jl
daa
cld
data16
inc
mov
movsb
jno
pushf
pop
push
dec
pop
loopne
aas
lock
sahf
mov
enter
adc
inc
movsb
or
dec
or
loop
data16
lock
xor
aad
pop
orb
mov
stos
imulb
dec
pop
popa
cmp
pop
pop
data16
ss
sti
arpl
lock
shll
fmull
or
bound
shrb
stos
sbb
movsb
dec
cmp
fsubl
aam
xchg
add
mov
pusha
lret
push
call
adc
mov
data16
sub
add
xchg
mov
fucomi
sahf
mov
cld
loopne
or
popa
test
cwtl
pushf
add
cmc
hlt
shlb
adc
mov
jecxz
mov
dec
fs
xchg
adc
std
xchg
mov
ss
insb
cmpsl
ss
or
pmullw
pop
sub
mov
repnz
outsb
add
jnp
lea
ss
cwtl
jns
sti
loope
xor
adc
fs
and
xor
pop
insb
bound
sarl
shl
mov
lea
add
xchg
pop
in
cs
push
push
test
mov
lahf
xchg
frstor
push
nop
dec
push
sub
scas
push
idiv
jmp
iret
mov
lock
gs
jge
xchg
pop
xlat
repz
jnp
sub
mov
cmp
sub
mov
adc
pusha
aaa
enter
mov
lret
pop
cld
sub
sub
mov
mov
jnp
push
arpl
addr16
inc
sbb
out
int3
fs
xchg
jae
or
ja
int
mov
jecxz
pop
pop
jp
push
je
or
sub
insl
pop
cmpsb
cmp
mov
test
nop
into
test
mov
fs
sarl
xchg
mov
lea
push
xchg
inc
lods
aaa
mov
sti
scas
and
xchg
xchg
ljmp
fnstcw
sub
leave
pusha
ud0
adc
push
xchg
mov
or
dec
add
or
ljmp
push
dec
mull
in
add
in
pop
loop
adc
mov
xlat
cmp
stc
jno
cmp
and
rorb
bound
std
addb
lods
inc
popa
test
adcb
sti
jbe
sub
enter
xchg
test
mov
stos
jmp
outsb
ss
sbb
sub
sub
push
fwait
or
lds
insb
call
aaa
aad
mov
mov
sarb
jne
jnp,pn
cmpsb
mov
dec
jp
dec
xchg
mov
enter
int3
jnp
jb
bound
jmp
gs
or
xchg
adc
hlt
cmc
jge
push
dec
adcl
shlb
xlat
cmp
ljmp
push
out
push
cmpsl
scas
mov
dec
xor
fistps
rol
aad
pop
mov
ja
ret
call
and
incb
adc
std
fildl
adc
xor
cli
jmp
jnp
pushf
addl
or
outsb
aas
insl
add
push
jl
dec
xor
cmp
cmpl
outsl
cwtl
stos
sbb
jns
jb
pop
xor
ret
in
adc
add
daa
jmp
jnp
push
or
fwait
inc
in
pop
cmpsl
loopne
fsub
mov
or
sti
and
fwait
das
mov
fdivrs
aaa
ret
ret
ss
jno
stos
mov
adc
mov
repnz
sti
mov
fs
cltd
cmp
mov
cwtl
and
sbb
setl
jle
adc
and
loope
pop
jo
loopne
cwtl
pop
adc
sub
sbb
mov
jge
jg
xchg
stc
daa
mov
add
mov
divl
loope
jle
pushf
ret
cmp
pop
popf
outsl
add
jbe
lods
fs
jmp
xor
orl
pop
rcll
les
test
xchg
fs
inc
pop
gs
repnz
ljmp
mov
xchg
pop
sbb
ds
movsb
test
lahf
xchg
xchg
scas
and
out
push
jb
inc
mov
popa
aas
dec
xchg
add
xor
pop
push
pop
xor
inc
mov
cmp
dec
lahf
subb
inc
add
push
daa
sbb
lea
push
dec
lds
idivl
or
xchg
cmc
mov
push
call
push
xlat
js
and
fsubs
and
push
mov
xchg
pop
fldcw
sub
mov
mov
jns
xor
enter
cmp
test
or
out
aaa
fiaddl
frstor
pop
jbe
and
stos
gs
xchg
push
pop
adc
push
push
dec
xor
in
mov
mov
xor
test
mov
bnd
push
insl
aad
dec
push
gs
hlt
or
ror
repz
je
dec
stos
aam
stc
xor
lea
iret
dec
movsb
imul
imul
ds
pop
sbb
cmp
jo
mull
mov
adc
aaa
bound
push
sbb
lcall
lock
cs
repnz
mov
cmp
mov
pop
push
cmp
pop
inc
push
inc
in
sub
mov
push
cli
xchg
ss
es
push
sbb
arpl
pusha
xor
pop
dec
jl
fdivrs
push
mov
aam
xor
inc
cmpsb
mov
jno
adc
jno
test
and
xchg
cmc
data16
cmp
inc
decl
fcmovnb
mov
cli
xchg
sub
xchg
push
xlat
pop
mov
shll
jp
push
cmpb
cld
xchg
mov
push
mov
or
mov
test
fidivrl
pop
xor
cmp
je
xchg
pop
daa
inc
int
decb
hlt
mov
hlt
jg
adc
xor
cld
fcomip
inc
fstpl
pop
xchg
dec
push
outsl
inc
add
jb
stos
inc
aas
xchg
pop
adc
mov
loopne
aam
cmpsl
jb
sbb
fucomp
lods
mov
pop
sub
push
clc
dec
cmp
sbb
mov
fisttps
xor
add
fpatan
js
popa
je
pop
xor
test
sbb
ss
aaa
sbb
pop
ret
test
das
inc
cmc
mov
mov
scas
xchg
inc
push
xor
cmp
test
push
or
fbstp
push
mov
dec
inc
inc
sti
ja
pop
and
mov
stos
pop
mov
cmp
xlat
mov
push
cmp
mov
add
sub
enter
dec
push
xor
sbb
pusha
adc
or
stos
mov
mov
pop
lock
xchg
in
jno
sub
jle
mov
push
fwait
add
pop
arpl
lcall
sbb
orb
or
mov
adc
mov
stc
and
cmp
shl
out
xchg
fidivrl
fsubrl
subb
arpl
popa
outsl
daa
adc
insl
into
jb
lods
mov
lods
mov
mov
aam
mov
shll
push
fcoml
call
and
out
mov
xor
adc
sbb
dec
pushf
pop
jno
outsl
outsb
or
aas
xchg
adc
lahf
test
cmp
xchg
sti
enter
loop
jne
or
arpl
add
lahf
cmp
inc
fdivr
lret
lcall
lret
std
lods
clc
pop
inc
fimuls
stc
push
icebp
movsl
out
mov
or
and
mov
insl
mov
dec
mov
push
push
mov
das
pop
push
mov
movsl
in
test
pop
inc
test
pop
nop
aas
adc
jne
test
es
xor
cmp
push
scas
sbb
dec
loopne
xor
cli
add
enter
cltd
mov
out
insl
adcl
fmuls
or
or
fadds
and
jmp
test
xchg
in
xor
cmp
out
dec
jmp
add
push
notb
xchg
daa
stos
loop
inc
mov
mov
dec
aad
pushf
mov
mov
adc
adc
cmp
nop
pop
lahf
sub
push
stc
pop
add
xchg
popa
sub
push
cld
mov
andl
test
dec
in
into
pusha
sti
cmp
mov
push
popaw
addr16
pop
out
test
hlt
sbbl
inc
sbbl
aam
jnp
mov
jbe
jecxz
aaa
call
and
inc
ficomps
inc
in
inc
lods
mov
insb
adc
aad
pop
dec
icebp
aam
dec
in
in
jb
mov
test
pop
push
xchg
dec
pop
les
cmp
bound
outsl
data16
mov
sbb
xor
out
call
sbb
sub
das
ret
sbb
dec
sbb
scas
push
mov
and
cmp
leave
fldenv
add
testl
xor
addb
mov
arpl
sbb
and
cld
jg
xor
dec
sbb
imul
decb
mov
mov
and
popf
inc
pop
loopne
loopne
mov
outsl
add
insb
or
fadd
loop
mov
mov
push
dec
outsl
fnstenv
shll
dec
xor
jns
or
cmp
insb
fisubrl
push
jmp
ds
push
push
cmpsl
cltd
loop
movsb
cwtl
xor
loopne
bound
jb
mov
fnsave
stos
sub
jno
clc
andl
cmc
or
mov
sub
pop
add
adc
ja
sarb
add
xor
outsl
sbbb
insl
add
inc
and
inc
gs
inc
pop
dec
jl
mov
les
inc
jecxz
and
xchg
adc
rcrl
push
jge
cmp
push
loopne
stc
push
insb
xor
and
sbbb
inc
pop
dec
jne
popa
clc
in
pushf
pop
nop
or
loope
sub
repz
xchg
out
mov
fmuls
or
insb
jle
cld
mov
dec
ds
adc
and
push
mov
cmp
icebp
jp
ret
dec
mov
aam
cmc
mov
in
jl
in
fwait
sbb
cltd
xor
cmpl
or
xlat
sub
cwtl
faddl
mov
mov
push
mov
aad
dec
lret
addr16
cmc
pop
push
lret
mov
int
dec
add
ja
mov
add
and
pusha
mov
and
call
jg
mov
repz
pop
ret
notb
clc
in
adc
enter
inc
and
data16
xchg
sbb
pop
jne
push
aas
add
popf
mov
adc
imul
es
out
jbe
dec
pop
cmp
add
pop
cmp
mov
rcrl
push
sbb
stos
pop
push
test
stc
sub
sub
das
movl
sahf
aaa
decb
fmull
sbb
xor
insl
imul
mov
add
lcall
inc
call
jo
sbb
dec
sbb
aad
xor
pop
xor
xchg
movsl
sbb
xchg
dec
pushf
mov
mov
shrw
mov
pusha
inc
inc
out
xchg
in
or
out
add
sbb
sub
filds
dec
mov
popf
pushf
sbb
add
sti
subl
push
iret
jle
hlt
mov
cmp
ret
cmpsb
pusha
pop
xchg
mov
xor
ja
out
dec
in
in
push
or
cmp
pop
jge
int3
pop
out
pop
out
push
mov
cmc
push
es
fwait
sub
rcll
cmp
push
cmp
fstpt
pop
jmp
outsl
in
mov
pushl
mov
xlat
mov
addr16
cwtl
cmp
cmp
push
add
ljmp
in
xchg
rol
push
shrb
sbbb
in
mov
jge
pushf
dec
push
enter
dec
pop
mov
rol
and
mov
leave
and
jg
jae
push
mov
addr16
jne
xchg
lahf
loop
ss
and
push
xchg
in
imul
mov
pop
inc
xchg
xor
push
mov
lock
pop
inc
loop
pop
sub
xchg
push
daa
mov
cmp
nop
scas
fadds
mov
and
and
mov
pop
das
or
pop
inc
popa
xchg
mov
loopne
cmc
jbe
into
adc
fcomip
stos
or
inc
push
jg
popa
push
in
cmp
mov
fnstsw
clc
push
loopne
adc
cld
inc
dec
mov
test
mov
pop
or
imul
repz
into
push
es
lock
movsb
xor
dec
mov
adc
movsl
sub
mov
sbb
jmp
aam
sbb
sub
loope
adc
push
notb
xor
clc
lahf
int3
int
mov
hlt
inc
and
lods
mov
shlb
insl
daa
sub
add
mov
jb
nop
dec
adc
out
fnsave
mov
inc
inc
xchg
xor
cmp
or
or
es
shrl
push
js
mov
rclb
insb
sbb
dec
xor
jl
popa
shlb
add
jae
rcrl
or
rolb
shlb
jmp
push
sbb
sbb
push
iret
inc
fs
adc
bound
clc
loope
lods
pop
sbb
lds
xor
or
mov
xchg
pop
stos
mov
sbb
loopne
test
mov
enter
pop
ja
cmpsl
subb
push
fdivr
repz
fcomps
xchg
jp
push
lods
add
repz
and
xchg
add
inc
or
std
pop
and
mov
nop
inc
fisubrs
sbb
ret
repz
test
dec
mov
inc
nop
stos
test
inc
addr16
aad
fildl
mov
cli
sbb
push
js
push
dec
jge
movsl
lods
insb
xor
jp
xlat
jmp
add
aad
dec
adc
nop
jns
jno
mov
mov
xchg
mov
push
lcall
es
jmp
xchg
inc
cmpsl
lcallw
mov
test
movsb
iret
jle
jo
gs
inc
cmpsb
and
outsl
adc
mov
dec
imul
out
pop
loopne
adc
pushf
enter
aam
sbb
jno
mov
int
test
dec
or
cmp
fmull
mov
pop
aam
lea
xor
mov
jge
sbbl
in
stos
push
xor
cli
xor
mov
and
adc
cli
ja
sub
sub
pop
lret
jae
dec
fsubp
pop
sub
dec
dec
loope
in
pushf
dec
arpl
mov
int3
inc
push
cmp
fidivl
imul
xchg
adc
xchg
imul
xchg
mov
inc
popa
fistpl
mov
inc
cmpsb
sbb
call
sub
and
cmc
jnp
xchg
test
xlat
sub
js
cmpsl
mov
mov
jmp
inc
enter
loopne
fisttps
lock
fisubl
xlat
push
add
jne
cli
cwtl
adc
jecxz
bound
mov
bswap
or
xchg
mov
or
movsb
icebp
mov
pusha
push
mov
aaa
xchg
mov
sub
rolb
mov
mov
sbb
in
cmpl
push
jb
pop
aad
mov
mov
insb
mov
mov
in
mov
or
jle
sti
sub
xor
mov
mov
arpl
clc
ret
sti
pop
call
mov
ucomiss
xchg
mov
adc
nopl
jae
or
mov
xchg
stos
adc
adc
pop
pushf
cmpsl
sbb
sbb
push
adc
orw
fisubrs
mov
xchg
out
xchg
inc
pop
aad
xchg
icebp
cmpsl
lods
iret
fidivs
mov
out
xchg
jge
xor
jbe
cmc
test
mov
mov
rcr
test
mov
push
ret
mov
andl
lock
fisubs
ss
std
arpl
dec
cmpsb
jl
mov
sub
inc
in
cmc
sahf
inc
mov
cld
pop
cmp
cmpl
rcl
clc
out
lds
inc
dec
jno
mov
jns
cltd
jb
in
les
repnz
in
xlat
daa
push
outsl
loop
lret
pop
cmc
cld
fcmovbe
outsb
jp
movsb
jae
and
push
filds
sub
cld
fyl2xp1
out
adc
sbb
push
insb
enter
push
stos
fcompl
sub
and
lahf
push
addr16
fstps
mov
test
fwait
and
aaa
cmp
mov
movsb
insl
addr16
mov
sub
pop
sub
mov
mov
fcoms
call
mov
outsl
add
adc
popf
mov
subl
pop
fs
jae
mov
stos
push
aaa
cmc
jbe
std
cmpsl
lods
inc
or
stos
cmp
cmpsb
push
push
fcoms
pop
inc
cmp
push
sbb
add
xchg
jnp
fwait
xor
mov
mov
dec
sub
dec
adc
dec
mov
or
in
push
jl
test
punpcklwd
inc
sub
out
jle
inc
cmpsb
ret
int
lea
int3
push
scas
jmp
fidivrs
cld
pop
dec
mov
xchg
sub
orl
sub
stc
insl
add
pushl
and
or
add
inc
mov
test
lret
aad
std
xor
jnp
mov
mov
cmpsb
pop
jae
push
js
loopne
sub
mov
pop
and
mov
push
cmc
enter
inc
ret
js
adc
jl
jg
daa
xor
xor
push
inc
inc
addb
jecxz
lret
adc
mov
ret
xor
jecxz
out
clc
mov
mov
pop
mov
nop
nop
popf
hlt
in
jl
pushw
jl
push
add
push
xor
push
test
imul
sub
adc
mov
nop
jp
insl
lods
cmc
rcl
lahf
jbe
and
std
adc
jl
dec
lcall
dec
loop
rclb
mov
fcomi
fdiv
arpl
lahf
sub
mov
lcall
add
ljmp
and
aad
data16
sbb
jp
or
pushf
orb
filds
cmpsb
jno
adc
mov
cs
ret
std
xor
xchg
dec
xor
adc
pop
gs
mov
xchg
dec
adc
ds
aad
pop
fwait
xor
insl
popa
push
sbb
mov
fdivl
push
insl
push
inc
stos
sarb
sbb
pushf
mov
dec
pop
or
mov
fisttpll
fistpl
push
xchg
inc
xchg
xchg
mov
lcall
adc
xor
push
shll
hlt
adc
call
out
sbb
loop
popf
push
adc
dec
jmp
mov
mov
shr
sub
test
add
sbb
adc
add
subb
incb
pop
mov
test
mov
lcall
les
aad
sbb
pop
mov
adc
xchg
cmc
movsb
xchg
sub
sub
or
iret
xchg
dec
mov
push
out
dec
pop
insl
stc
int3
in
rolb
and
mov
jb
inc
setbe
mov
lcall
call
xlat
outsb
xchg
jl
popa
fwait
mov
ds
nop
pop
stc
jbe
lds
enter
call
icebp
xor
inc
in
or
cmp
mov
rorb
add
cltd
cld
enter
ret
pop
mov
into
movsl
out
mov
imul
sub
mov
sbb
push
pop
shlb
adc
push
or
pop
mov
jnp
adc
pushf
test
cmp
iret
bound
cmp
push
push
fsubs
mov
popf
sbb
scas
add
sub
xlat
roll
lds
inc
call
mov
mov
test
adc
pusha
dec
jle
adc
lret
cmp
ds
push
out
hlt
std
test
push
xchg
cs
sub
xchg
mov
daa
pcmpgtb
push
push
sub
inc
into
fsubl
iret
xor
jbe
sbbb
nop
and
in
add
mull
stos
sub
inc
xlat
icebp
jge
scas
test
cmp
xchg
popf
adc
cmpsl
cmp
mov
add
int
push
push
outsb
cwtl
push
xor
lret
sti
mov
test
xor
xchg
icebp
push
push
movsl
inc
push
push
addr16
mov
cmpsl
push
hlt
xlat
jnp
sbb
in
mov
nop
push
cmp
push
adc
outsb
pop
fldl2t
sub
mov
inc
adc
and
addr16
iret
fidivrs
ljmp
mov
test
sub
xor
fisttps
push
mov
inc
fs
mov
movd
movsb
jnp
xlat
push
lea
rcrl
xchg
xor
in
jecxz
js
dec
lret
aas
jge
or
mov
cmp
ret
cwtl
xor
cmp
mov
mov
pop
hlt
rorl
cmp
adc
inc
out
adc
mov
outsb
sub
testl
imul
sbb
xchg
or
daa
stc
cmpsb
imul
fwait
in
in
test
rcrb
hlt
mov
outsl
cmpsl
ds
or
xchg
scas
imul
scas
sbb
scas
dec
push
in
or
ja
ret
sub
or
call
or
jle
push
aam
cmp
or
xor
test
sbb
sub
outsb
inc
ret
mov
mov
xor
test
push
psadbw
push
and
sbb
icebp
sbb
lret
lds
fisttpl
push
mov
adc
cmp
sbb
dec
xlat
outsb
jg
jg
loopne
mov
test
mov
lock
sub
mov
dec
scas
lds
stos
xchg
fsubr
xchg
sbb
adc
cmp
xor
fnstenv
mov
sub
shll
xchg
ss
inc
mov
loop
or
jae
lds
repnz
insl
dec
xlat
cli
mov
inc
mov
mov
pop
hlt
sbb
jnp,pt
pusha
out
xor
sub
sahf
lock
dec
push
ljmp
jno
fidivl
fwait
pop
pusha
or
mov
fcoms
xchg
jae
push
inc
push
cwtl
mov
sbb
jns
cmp
insl
dec
sbb
cmp
std
or
icebp
fldl
nop
mov
hlt
jnp
in
repnz
loope
sub
gs
scas
and
lret
ljmp
fisubs
mov
cli
pop
adc
or
in
imul
adc
mov
cmp
push
rcll
or
mov
ret
push
push
adc
iret
push
sub
leave
test
cmpsl
ret
push
xchg
sub
xchg
push
and
push
fisttps
or
xchg
sub
shll
add
pop
jno
push
mov
lea
mov
dec
push
push
int
pop
repz
mov
pop
ljmp
in
and
mov
es
ja
push
test
lea
fdivs
mov
cmp
call
test
xor
cmovno
mov
mov
pop
or
mov
xor
fwait
bnd
stos
in
mov
test
adc
add
in
insb
pop
imul
aad
inc
cwtl
test
mov
or
jmp
test
xchg
iret
aad
pop
or
orl
jo
xchg
or
dec
and
test
aaa
and
iret
sub
jp
push
leave
lods
push
fs
js
mov
push
outsl
mov
sub
mov
pop
add
dec
cmp
ficoml
adc
data16
outsb
sbb
or
loop
fldl
cltd
imul
or
xchg
fildll
vcvtpd2psy
sahf
sub
add
sti
push
and
popf
aaa
jp
daa
xor
in
pop
jb
pop
mov
test
and
subb
add
pop
add
cmpsb
sub
sub
xchg
fs
jp
cmc
pop
and
cmp
popa
nop
dec
aaa
push
loop
aam
mov
sbb
push
sbb
mov
ljmp
lcall
and
mov
fistpl
out
inc
das
dec
sub
clc
je
rol
mov
add
fstps
cmp
jg
pop
push
xorl
push
adc
mov
out
data16
sub
sbb
nop
sub
stc
mov
imul
call
push
inc
mov
cmp
sub
sbb
daa
push
movsl
cmp
js
arpl
test
stc
inc
pop
test
call
xor
push
push
cmp
bound
sbb
dec
add
mov
shll
xchg
xchg
repz
hlt
sub
mov
sti
sub
int3
pushf
arpl
ficomps
cld
push
and
gs
into
xchg
aad
out
and
adc
loopne
mov
ja
xchg
dec
push
fdecstp
jg
xor
or
sub
shrl
mov
lret
shrl
or
flds
pop
jl
loop
in
inc
add
cmp
xor
mov
stc
test
jg
xor
inc
popf
adc
sbb
jo
mov
dec
popa
das
pop
movsl
std
dec
inc
inc
lock
push
add
ljmp
insb
pop
das
mov
or
xlat
jp
mov
js
push
sbb
and
mov
loopne
or
hlt
mov
in
pop
jp
xchg
stc
pusha
repz
jno
pop
pop
int
mov
ja
xchg
jle
or
fwait
jp
or
jecxz
rol
les
imulb
push
adc
das
and
push
mov
mov
leave
inc
push
mov
jno
and
insl
adc
lret
in
lods
sub
sbb
dec
dec
and
negl
aad
jg
mov
cmp
les
mov
push
test
fnstcw
sbb
or
sub
inc
call
fldt
or
outsl
cmp
in
loope
testb
cmpsl
adc
ret
push
dec
hlt
mov
out
imul
adc
mov
sarl
call
cltd
mov
aaa
cmpsb
cmp
xchg
cltd
cmp
adc
mov
sahf
mov
scas
in
stc
inc
cli
pop
popa
mov
daa
mov
pop
mov
aam
mov
mov
arpl
addl
test
jne
and
ja
sbb
pop
mov
ret
fmulp
hlt
jns
cmp
outsl
push
das
push
adc
sub
push
lret
and
inc
cmp
int
out
fnstsw
inc
mov
push
cmp
mov
fs
push
fs
push
loop
xor
dec
or
jl
int
add
mov
mov
inc
cmpl
or
and
sbbl
inc
mov
test
dec
push
mov
adcb
sub
mov
pop
icebp
adc
and
out
mov
xorl
xchg
in
bnd
push
enter
or
sti
sub
fsubrl
mov
add
clc
cmc
jle
or
mov
sbb
cmc
sbb
or
push
jp
or
or
rorl
mov
je
pop
aam
lea
sub
adc
movsb
dec
pop
add
pop
pop
cmp
jp
loope
lock
sahf
fnstcw
cmp
dec
mov
inc
arpl
pop
clc
repnz
fisubs
lret
jbe
inc
enter
adc
adcb
cltd
or
int3
cmp
sub
nop
mov
insb
scas
cmp
es
jns
push
int3
add
mov
outsl
arpl
mov
sbb
lds
lahf
xor
sarl
cmp
lea
sub
push
inc
and
adcl
mov
xor
fidivrl
setg
cld
icebp
sub
sub
inc
sti
cmpsl
ja
je
xchg
mov
into
jp
lods
stos
out
mov
sbb
pop
out
cld
lahf
ss
push
xor
mov
adc
inc
xchg
add
mov
mov
pop
nop
dec
push
cli
data16
fucomip
rolb
dec
aas
dec
mov
mov
jmp
pop
ret
hlt
sub
repnz
nop
shlb
and
xchg
cwtl
pop
adc
js,pt
cmp
jecxz
xchg
push
fmull
test
sbb
sbb
inc
std
mov
jmp
negl
mov
clc
xchg
jbe
xchg
daa
mov
jecxz
mov
pop
jle
rorb
mov
add
movsl
fcoms
loopne
imul
ret
push
dec
leave
aam
into
cmp
xor
jno
test
add
push
sbbl
or
and
pop
add
mov
inc
stos
sbb
fsubl
clc
sbb
cmp
cmpsl
jge
les
popf
mov
shlb
das
push
xchg
sbb
lods
inc
or
and
insl
push
mov
adc
pop
es
sbb
retw
jecxz
mov
or
xor
adc
cmp
mov
repnz
mov
icebp
rcll
jg
push
fldt
mov
mov
mov
jne
or
and
shrl
dec
movsb
cmp
call
jae
mov
inc
loop
jne
aas
sbb
gs
sub
inc
lds
aad
push
je
add
bound
push
test
or
stos
ficoms
cmp
sarb
xor
addr16
jmp
inc
mov
je
test
jbe
cld
push
push
xchg
pop
push
mov
in
aas
xlat
pop
or
mov
lahf
shlb
cltd
sbb
or
inc
pop
ficoml
je
sti
ss
sub
mov
pop
repnz
jle
sub
mov
lods
push
inc
test
mov
loopne
mov
lcall
es
repnz
int3
mov
imul
out
mov
sarb
lock
lea
repnz
aad
les
cmc
and
pop
push
xchg
jne
lds
fimull
and
shlb
ret
ljmp
lcall
lret
int
std
and
out
push
jo
pop
cwtl
pusha
mov
mov
test
mov
xchg
fists
lret
push
jmp
movl
dec
or
xor
inc
and
call
ret
in
adc
addb
mov
dec
push
loope
pop
mov
mov
dec
cmp
sbb
insb
aad
push
popa
addl
mov
mov
test
pop
hlt
mov
imul
and
cmp
es
fucomip
movsb
pop
in
jae
mov
insl
adc
stos
jne
mov
sub
push
sarl
shlb
pusha
dec
mov
mov
push
sub
insl
lcall
les
pop
inc
int
mov
pop
cmp
dec
jne
ret
and
cmc
push
dec
sbbl
inc
sbb
jns
cmp
jo
push
call
outsl
mov
dec
idivl
dec
sbb
js
in
repnz
cmp
push
add
gs
fldlg2
sbbl
or
out
lret
xor
inc
cs
xchg
and
add
push
or
pop
xorl
mov
jnp
inc
jo
stc
jo
inc
push
in
ja
push
stc
test
into
jle
adcl
jno
leave
jle
push
mov
addr16
daa
sahf
aas
loop
les
cmp
lods
inc
jo
arpl
mov
orb
popa
ss
pop
inc
push
shlb
and
push
mov
or
fbstp
jo
rcrl
inc
in
test
xlat
mov
mov
adc
dec
imul
nop
sbb
dec
data16
into
insb
add
insl
sub
xchg
pop
mov
dec
ja
mov
pop
mov
jmp
sub
out
adc
out
leave
push
lods
in
mov
fdivrs
ficompl
mov
fwait
cmp
fildl
out
test
arpl
pop
cmp
xchg
ret
mov
inc
jno
incb
lret
inc
sbb
nop
xchg
dec
dec
jl
xchg
cs
sahf
shlb
fsts
pop
dec
sbb
scas
lea
stc
cmp
add
rcrl
cli
push
mov
mov
in
push
xchg
gs
sub
addr16
sub
repnz
jne
pop
adcb
cmpsb
jge
lret
inc
sahf
add
inc
ss
in
aam
or
xor
cli
cmpsl
or
pop
xor
lret
cmp
or
popa
adcl
xchg
cltd
pop
test
or
jge,pn
pusha
and
fwait
cmc
inc
pop
dec
js
and
mov
sub
and
sub
or
movsb
dec
sbb
sbb
shlb
add
ss
jbe
xor
jmp
ret
out
bound
hlt
std
pop
push
std
and
iret
jne
test
inc
fwait
xor
mov
mov
cmpsl
imul
enter
fs
mov
in
xchg
fisttps
or
mov
add
rcl
push
scas
inc
cmpsl
sub
int
enter
mov
jl
repz
add
fsubs
outsb
mov
mov
mov
add
and
lods
fdivrs
push
leave
jle
add
jmp
pop
cwtl
and
inc
loope
add
push
mov
adc
dec
jl
add
pop
mov
in
jnp
mov
gs
cltd
and
pop
mov
pop
pop
cli
jne
shl
jo
lods
cmp
pop
mov
inc
in
lods
rclb
fistl
hlt
xlat
pop
add
lods
pop
popf
sub
cmp
jecxz
and
inc
pop
sbb
jg
xor
xchg
and
call
add
lret
addl
mov
repnz
fldl
mov
frstor
jb
lods
push
fsincos
adc
call
mov
dec
popa
fs
dec
in
xchg
jecxz
cmc
inc
stc
lea
mov
call
lea
jb
jp
xchg
nop
les
div
lahf
inc
daa
sbb
fstl
shrl
mov
dec
rcrl
aaa
int
rorl
popf
xor
or
dec
and
adcl
dec
sahf
inc
lret
mov
loop
xchg
dec
out
push
mov
dec
hlt
mov
xchg
inc
pusha
cli
cltd
ljmp
xorb
fidivs
pusha
xor
jne
add
and
std
popa
mov
cmp
or
out
mov
test
fcoml
mov
repnz
insl
aad
imul
mov
fadd
ss
and
scas
jae
popf
mov
xchg
sbb
fwait
sbb
js
std
cmp
add
aam
das
ja
fwait
xchg
sub
incl
xchg
dec
sub
jle
insb
popf
add
pop
jns
js
in
std
insl
jge
cmp
cmpsl
dec
sbb
jo
lcall
stos
sti
xchg
push
nop
mov
mov
test
dec
leave
or
xchg
fs
lds
pop
hlt
repnz
or
cmpsl
inc
mov
outsb
jle
scas
hlt
loopne
scas
aaa
mov
mov
mov
push
test
add
sub
mov
dec
pop
dec
push
insb
test
popf
push
into
mov
scas
call
ljmp
popf
sbbl
mov
mov
scas
xchg
jmp
ja
jne
dec
cmpsl
cmp
cmpsl
jno
dec
imul
into
loope
repnz
sbb
inc
push
mov
imul
pop
js
lods
mov
rolb
cmc
xchg
mov
mov
push
ljmp
push
dec
pop
xchg
lahf
fs
mov
sbb
loopne
and
aas
dec
mov
mov
dec
aad
in
jnp
fcmovnbe
jmp
mov
cmp
add
xchg
mov
pusha
xchg
jns
lahf
xchg
and
jp
add
adc
sti
pop
pop
adc
scas
jne
pop
or
mov
adcb
or
aad
inc
nop
mov
sbb
enter
push
mov
xchg
dec
or
mov
jno
lds
mov
sbb
lock
push
pop
imul
lds
andl
cltd
adc
int3
mov
mov
ficomps
or
mov
cmp
out
rcrb
sub
mov
lods
mov
lret
sbb
sbb
icebp
in
lahf
mov
insl
out
addl
xlat
add
notl
aam
hlt
js
in
in
test
mov
je
inc
ds
in
pop
and
repz
mov
jns
imul
les
imul
outsl
push
cmpsl
adc
imulb
leave
lea
push
sbb
sbb
fildl
and
enter
xor
inc
scas
in
sub
cmp
jno
cli
cmp
clc
and
movsb
mov
shrb
xchg
outsl
ds
cwtl
xchg
mov
in
jg
test
dec
ror
or
insl
fsubp
mov
icebp
and
jmp
mov
mov
add
cmp
xchg
arpl
aam
fdivp
out
imul
inc
cmp
dec
mov
dec
movsl
aaa
out
pop
icebp
cmp
cmc
fs
mov
push
mov
xchg
push
mov
sub
sbb
inc
fisubs
addb
stc
in
gs
push
push
fnstenv
call
es
xchg
dec
int
jle
mov
xchg
lret
xchg
mov
jg
push
jno
adc
sub
jp
adc
fs
jp
lcall
mov
dec
and
mov
insl
jle
es
pop
pop
push
mov
aaa
mov
test
jno
inc
xchg
in
push
in
std
sarb
mov
jno
hlt
daa
mov
mov
mov
xor
movsb
add
fwait
jg
sub
fldenv
mov
fsubrs
pop
lret
inc
mov
add
xor
test
pop
sahf
repz
lret
pop
andb
jp
lods
pop
mov
add
fs
mov
aaa
sbb
mov
repz
in
xchg
jecxz
jp
xor
fildll
add
scas
sbb
aam
flds
inc
and
pop
out
and
mov
cmpsl
roll
dec
cmp
test
pop
daa
ficoms
dec
lret
mov
aad
out
out
cmp
call
sub
cltd
add
cltd
push
cmp
xchg
mov
pusha
cs
iret
pop
mov
mov
ret
aaa
xor
outsb
es
mov
sti
loop
mov
mov
sbb
pop
in
rcrl
fdivs
aad
jne
in
jl
bound
lods
test
xchg
mov
mov
es
sbb
test
outsb
sbb
jge
xchg
cmpsl
jecxz
in
add
jmp
cwtl
push
mov
inc
sbb
xchg
add
fs
mov
fisubrl
insb
out
sub
sub
in
sub
inc
out
sub
add
sahf
dec
add
iret
into
stos
das
lret
cmp
pop
dec
and
mov
scas
sub
shlb
dec
in
jnp
fists
inc
xchg
incb
testb
xchg
adc
or
mov
cmpsl
sub
test
cmpsl
aad
aam
or
adc
dec
mov
xor
and
inc
outsb
es
lea
out
cwtl
stos
xchg
xchg
bnd
jp
hlt
aaa
mov
jmp
cmc
xchg
jp
push
adc
pop
dec
lods
out
imul
out
mov
xchg
sbb
xchg
lods
clc
or
cmc
call
leave
stos
inc
fcoms
ss
inc
out
insb
mov
push
fsubr
rcr
cmp
test
push
dec
xlat
outsb
mov
arpl
jne
test
push
inc
test
push
lock
cld
inc
imul
mov
fwait
out
dec
or
and
out
inc
push
fcompl
jns
sub
in
adc
imul
sbb
and
add
lahf
es
outsl
mov
nop
and
xlat
adc
sub
jecxz
sbb
aas
jns
pop
cmp
in
sahf
icebp
fmuls
sbb
sbb
adc
push
scas
jns
sub
add
jb
mov
stos
xchg
xchg
out
das
into
ffreep
xor
cmp
sbb
mov
dec
lods
in
insb
mov
xchg
dec
mov
push
mov
xor
je
rep
loope
iret
loop
cmp
adc
add
out
dec
in
or
cmp
push
dec
movsb
scas
or
pop
lds
outsb
adc
divl
push
or
or
push
test
popf
nop
xor
add
xchg
pop
out
xor
xchg
jmp
add
inc
aas
es
mov
rorb
xlat
insb
mov
outsb
cmpsl
aad
orl
mov
out
rcll
pop
mov
scas
jle
ss
mov
mov
jl
push
test
fbstp
cltd
and
pop
loop
je
sarl
pop
dec
mov
fildl
enter
and
pop
add
jne
mov
mov
sub
xchg
dec
mov
rclb
fistps
nop
mov
fisttpl
xchg
sub
mov
in
mov
arpl
xlat
xor
scas
xchg
inc
or
or
lret
sar
sbb
mov
sbb
inc
mov
inc
jl
insl
data16
xor
sbb
popf
pop
mulb
sbb
jb
call
fstps
loopne
push
pop
jecxz
mov
cmpsl
dec
pusha
inc
bnd
sub
mov
jecxz
ficoms
popf
cmp
mov
sub
cmp
out
dec
incl
cmp
faddl
or
jp
stos
lods
xchg
xchg
pop
jns
hlt
mov
push
xchg
es
rcll
repz
sub
xchg
test
loope
lock
arpl
imul
andl
mov
inc
push
js
dec
mov
push
in
loop
in
pop
sbb
pop
stc
sbb
pop
fisubl
lds
lea
push
cmpsl
and
and
cmp
loop
in
loop,pt
std
fldenv
lock
sub
std
xchg
les
out
ds
and
insl
cwtl
insb
sbb
clc
fwait
cmp
in
pop
sub
jmp
push
jg
lock
sub
mov
iret
sub
mov
dec
jecxz
lcall
dec
cmp
xchg
cmpsl
rcr
incl
or
xor
pop
insl
jne
add
jp
lcall
mov
stc
add
test
pop
lcall
mov
out
aaa
fcmovbe
andl
test
mov
or
int3
add
or
push
push
popf
xchg
xchg
lods
je
pop
icebp
dec
jge
xlat
pop
lahf
jl
int
sbb
cli
lock
repnz
roll
jmp
jp
sbbl
xchg
inc
pop
test
movsb
sti
test
sbb
gs
xchg
lods
mov
faddl
lret
sbb
jg
cwtl
push
dec
pop
pop
testb
add
dec
and
adc
mov
lods
mov
lock
mov
loopne
sbb
lahf
iret
mov
mov
and
mov
loopne
inc
xor
mov
jbe
lock
jo
jae
push
ds
dec
fildl
cmpsl
inc
pop
lcall
stos
xchg
fidivl
mov
xor
xchg
xor
insb
subb
cmp
dec
shl
rcrl
sub
or
and
loopne
icebp
or
test
aad
xor
pop
cmp
shrb
mov
ss
mov
mov
repnz
ljmp
test
cmp
cmpsl
jno
inc
push
imul
xchg
adc
bound
mov
dec
arpl
cmpsb
sbb
mov
pop
inc
aad
mov
iret
pop
push
xor
sub
int
push
mov
or
data16
cmpsb
cmp
inc
out
pop
insb
sbb
in
jp
fbstp
push
jnp
adc
inc
shll
and
dec
lcall
xchg
cld
call
mov
pop
fwait
sbb
ret
cmpsb
xchg
iret
loop
jnp
fisttps
adc
bound
add
je
inc
cmpsb
bound
cld
fmul
imul
push
add
jp
dec
pop
add
add
rorb
popw
stos
popa
adc
dec
mov
mov
inc
vcvtps2pd
xor
sub
or
pop
mulb
cmpsl
or
inc
sub
stos
sbb
imulb
jo
loop
ja
mov
stos
push
jno
mov
in
mov
lock
jmp
aas
imul
je
sbb
sbb
inc
dec
fnclex
test
stos
push
jge
pop
subb
mov
xchg
mov
or
ds
rcrl
jge
lahf
pop
daa
cltd
jg
inc
sub
jb
mov
iret
lret
push
lods
clc
xchg
or
dec
cwtl
lods
in
sbb
flds
cmpl
outsb
add
add
xor
mov
rorb
lods
adc
cmpsl
cmp
push
jle
sbb
cmp
data16
iret
jecxz
push
or
mov
xchg
sbb
sahf
pop
pop
jmp
inc
sub
in
adc
push
lods
sbb
inc
fucomip
mov
and
mov
flds
adc
sub
adc
mulb
push
imul
dec
loop
dec
pop
aam
cwtl
test
ljmp
insb
and
sbb
lock
nop
stos
and
xchg
mov
ret
xchg
inc
push
sub
xchg
jl
lds
mov
sbb
pop
lret
mov
inc
jecxz
cli
fnclex
mov
xor
loop
repnz
sub
sub
int3
xchg
mov
cld
mov
lret
dec
xchg
push
mov
fldt
xor
je
jmp
arpl
add
pop
push
cli
pop
mov
ror
notb
loop
xchg
aad
mov
enter
mov
add
pop
mov
rorl
in
pop
xchg
sbb
push
std
adc
loop
loop
pusha
stos
les
cmp
jl
fadd
clc
sbb
pop
dec
sbb
push
sbb
mov
mov
mov
mov
cltd
test
or
jno
sub
xchg
mov
xchg
push
xor
cmp
test
dec
or
subl
popf
dec
add
or
xchg
mov
leave
push
ds
mov
xchg
data16
loop
xchg
ljmp
xor
aaa
add
popf
loop
dec
mov
sbb
jle
mov
mov
movsb
repz
repnz
push
cltd
aaa
lret
int3
sub
fisttps
shlb
repz
jne
inc
push
repz
in
push
call
mov
outsl
jl
aam
dec
or
cmpsb
dec
jecxz
adc
add
inc
ficompl
orl
gs
call
mov
push
xor
jne
mov
adc
and
jns
fisubl
fimuls
dec
fcompl
enter
pop
jl
or
inc
mov
out
pop
xlat
lret
in
pop
fprem1
fbstp
adc
pop
cltd
cmp
out
xor
push
pushf
push
sahf
outsb
push
mov
push
lds
add
fsubrl
jp
push
pushf
mov
jbe
mov
xchg
scas
push
inc
sub
push
mov
cltd
lret
fmull
ljmp
mov
mov
gs
mov
adc
fwait
cmpsl
push
cmp
xchg
xor
inc
in
mov
xor
add
push
addb
xchg
pop
data16
push
jbe
fildll
insl
test
notl
jge
pop
inc
lret
sbb
loop
rcll
out
add
mov
push
ds
aam
je
push
mov
fcmove
inc
gs
rcrb
dec
push
movsl
xlat
add
into
xor
and
cmp
xchg
add
aad
jge
scas
popa
sub
repz
pop
gs
leave
aam
cli
mov
cmp
add
call
jl
addl
cmp
cmp
sub
scas
ret
dec
int
js
fidivrl
add
outsl
jb
std
mov
leave
test
xchg
sbbl
xor
cli
es
fisubs
and
mov
jp
js
dec
xchg
fucom
sub
leave
negl
add
lods
outsl
mull
cmpl
xchg
loopne
sbb
jle
or
jmp
aas
add
adc
mov
dec
shl
xchg
fs
mov
sub
dec
and
xchg
push
sahf
lds
jae
mov
mov
lods
lret
and
mov
inc
jecxz
fdivl
mov
mov
adc
insb
sub
push
scas
push
sub
lea
push
or
xor
or
lret
pop
sub
mov
aas
mov
sub
push
ja
inc
subb
sbb
inc
sahf
repz
jecxz
ss
cmpl
xlat
mov
imul
sbb
jecxz
popf
xor
sub
mov
pop
mov
jae
jno
push
cmp
shlb
xchg
jmp
or
jl
loope
dec
xlat
push
icebp
inc
cmp
leave
bound
mov
and
dec
out
pop
pushf
ds
cmp
mov
fidivs
fcoms
daa
je
sbbl
mov
xchg
jo
sbb
xchg
hlt
push
inc
pop
pop
inc
cltd
inc
addr16
cli
mov
inc
sbb
movsl
push
imul
popa
xor
cmpsb
inc
stos
or
cli
sub
lahf
pop
sbb
fidivs
test
lock
outsl
js
xchg
popf
stc
inc
push
and
test
std
rcl
jno
xchg
incb
repnz
jo
xchg
cli
fs
sahf
fdivs
popa
jbe
xchg
inc
fcmovnb
shr
ljmp
jl
js
adc
pop
daa
xchg
loope
mov
cmp
mov
sbb
fnstenv
or
pop
into
and
sbb
jle
ret
pop
lock
add
lds
test
pusha
in
sub
inc
orl
xchg
sbb
sbb
testb
cld
dec
cmp
pop
scas
jp
bound
sbb
fldt
mov
lfence
or
adc
lret
cld
pushf
lea
scas
pop
mov
aam
adc
cmpb
mov
or
sub
inc
mov
aad
in
jge
cmp
aad
mov
pop
mov
mov
cmp
ret
test
in
push
cli
ss
jo
fbstp
lds
pop
lods
inc
jp
sbb
adc
pop
push
mov
ret
call
fcmovb
bound
sti
mov
mov
mov
push
cwtl
sbb
test
rorl
cmc
mov
andb
iret
mov
inc
cld
add
add
xor
lea
add
add
fisttpll
cmp
xor
dec
jmp
or
mov
or
cmp
push
cmp
sub
dec
bsf
fistps
xor
or
mov
fwait
cli
and
das
or
cmp
jge
mov
ja
in
sbb
pop
nop
xchg
and
pusha
int3
xor
fwait
adc
mov
add
adc
jbe
test
lret
push
push
scas
cld
outsb
or
xchg
insl
sbb
nop
jge
insl
or
in
jp
scas
xor
loope
rcl
daa
mov
icebp
mov
push
jg
and
add
cld
push
outsb
hlt
testl
xchg
outsl
cld
xchg
mov
clc
aas
mov
testl
cmp
stos
in
in
in
test
inc
in
fcoml
push
and
and
out
push
clc
ror
lock
pop
dec
bound
popa
cmc
push
cmp
and
mov
mov
int3
xor
ljmp
mov
in
fildl
or
ret
jb
sub
xchg
push
jns
fimull
xchg
cld
mov
push
mov
xchg
ljmp
stos
mov
cmp
arpl
and
out
test
mov
xor
cmc
pop
cmp
adc
hlt
xorb
rol
jo
jns
adc
dec
jp
mov
cli
dec
add
clc
sbb
or
sbb
test
cld
mov
and
stos
sbb
fwait
jbe
cmpsl
std
jo
ja
fnop
adc
xor
inc
cli
fsubr
push
push
push
je
add
xchg
enter
fs
add
jle
lret
imul
and
pop
jae
mov
adc
dec
mov
popf
cld
stos
cmp
stc
dec
fildll
repnz
les
popf
mov
jno
sti
adc
mov
pop
pop
jge
sbb
stos
xchg
faddl
outsl
cmpsb
push
repz
cs
pop
decl
jge
aas
divl
rdtsc
enter
add
icebp
and
sub
in
mov
sti
daa
enter
lods
mov
stos
mov
push
cmp
cmc
and
jl
je
xlat
mov
xchg
add
mov
adc
cwtl
mov
fistpll
adc
push
xor
push
sbb
jo
adc
sub
addb
dec
incl
mov
gs
pop
addr16
adc
les
add
mov
std
cmp
push
cli
in
fistl
ljmp
lds
or
fdivl
int3
hlt
ss
add
lahf
aam
dec
movsl
nop
xor
or
sub
daa
imul
scas
out
jge
dec
sub
mov
push
adc
lea
insl
data16
out
push
hlt
cmp
mov
aad
inc
push
or
adc
mov
mov
lcall
mov
fwait
inc
ds
div
scas
imul
stos
popw
jb
fldt
imul
movsl
clc
shlb
jnp
push
mov
and
cmpsl
add
loop
adc
mov
inc
int
repz
dec
fisttps
scas
data16
leave
push
imul
lock
out
lods
mov
orl
movsb
aad
sbb
test
dec
pop
je
add
jb
cmc
dec
inc
ficoml
addr16
ret
imull
jno
mov
subb
cmp
jo
aas
mov
stos
sbb
scas
push
mov
inc
sbb
outsl
daa
and
mov
push
ficomps
pop
lret
lret
insb
mov
fldcw
mov
scas
xlat
and
mov
call
push
jae
pop
mov
pop
xchg
data16
fistpll
imul
cmpsb
in
rcrb
aaa
rclb
sub
inc
xlat
and
push
cmp
xchg
dec
push
and
add
push
sub
mov
pusha
push
popa
jp
clc
inc
adcb
adc
mov
and
sbb
sub
push
inc
fbstp
out
imul
inc
cli
cmp
push
inc
fmul
mov
jg
xor
jae
and
push
psubd
wbinvd
pop
das
mov
pop
cmpsl
push
out
inc
pop
or
outsb
jnp
and
pop
filds
jecxz
jne
jecxz
pop
pop
push
add
cmp
loopne
dec
mov
mov
pop
mov
lods
sub
int3
push
add
into
pop
and
aam
ss
jge
push
jno
adc
lods
adc
inc
xchg
sahf
xchg
stc
lods
fwait
xor
or
cli
lds
push
cld
ss
fildll
ret
mov
fcmovu
std
aam
add
test
mov
sbb
sbbl
movsb
xchg
ja
push
lods
ljmp
sbbb
mov
dec
mov
pcmpeqw
inc
pop
scas
je
pushf
jg
push
stos
cli
xchg
mov
cltd
sub
leave
das
xor
arpl
or
push
cmpsb
cmp
sub
pop
pop
mov
loopne
mov
fisubrl
jns
mov
jmp
and
movsl
cmp
lods
out
or
lcall
sbb
mov
jge
and
popa
in
jp
mov
test
aas
test
stc
push
std
mov
and
cmp
insl
iret
mov
push
jae
andl
inc
dec
jo
inc
mov
lret
dec
cmpsb
ja
aam
push
push
or
xchg
iret
pop
lock
cmp
in
aam
push
sbb
test
xor
ret
lock
jo
addr16
push
pop
xor
cmp
cmp
or
in
pop
in
adc
cli
lock
sub
xchg
add
pop
add
push
xchg
adc
mov
sbb
cmpsb
rcrl
pop
mov
dec
mov
push
or
fidivs
bound
ret
pop
jge
xchg
scas
rclb
adc
js
out
ss
lock
xlat
rclb
es
dec
loopne
cltd
mov
into
shll
jbe
lret
xchg
fdivl
mov
jge
ds
mov
ret
mov
mov
xchg
sbb
sub
in
fcoms
lahf
idivl
jnp
inc
jp
sub
fldl
jno
iret
jb
fdivs
xor
popa
les
outsb
cmpsb
insb
add
roll
call
pop
mov
adc
nop
std
xorb
ljmp
out
pushf
mov
mov
jnp
xchg
test
enter
sub
stos
xchg
sub
cmp
jno
movsl
and
fs
pop
imul
jmp
jo
cmp
ss
mov
jae
jecxz
cmc
xchg
add
fptan
enter
pop
sahf
sub
out
fs
add
es
sbb
xchg
das
movsb
push
add
pop
jbe
and
cmpsb
imul
faddp
pop
add
sub
insl
stc
inc
ss
popa
testb
push
jbe
cltd
jge
mov
les
les
push
push
outsl
xor
fstpt
icebp
dec
shl
enter
inc
xchg
sbb
call
loopne
push
roll
cwtl
nopl
mov
mov
xchg
and
mov
jle
popf
out
mov
icebp
mov
clc
paddsw
jle
enter
in
and
leave
adc
mov
xchg
jle
jecxz
or
in
cmc
rcll
pop
mov
jne
cmc
out
cmp
js
sub
insb
js
push
xchg
cmp
mov
aaa
inc
add
out
arpl
add
dec
mov
lret
add
or
scas
cmp
jno
fmull
adc
fs
and
adc
mov
mov
add
adc
sub
sbb
inc
ds
push
push
jae
adc
cmc
jl
addr16
repnz
cmp
mov
jne
mov
pop
dec
arpl
cwtl
cwtl
jbe
lods
mov
lret
add
popa
lods
movsb
gs
enter
ret
pop
lods
hlt
mov
shll
mov
mov
ficompl
push
outsb
outsb
or
cmp
cmc
xchg
push
xor
lods
mov
pop
jg
pop
mov
inc
cs
mov
add
bound
test
or
jbe
pop
lret
ja
inc
and
jne
in
pop
push
push
sti
push
push
sub
bound
sbb
lea
inc
fsubr
inc
into
lret
xor
xchg
jecxz
adc
mov
shrl
ficoml
roll
insb
adc
pop
loope
orb
lret
pop
shl
in
sbbb
cmp
imul
mov
out
mov
in
imul
mov
xchg
mov
fsubrs
push
push
inc
jl
addl
jecxz
in
adc
imul
inc
fbstp
lcall
cwtl
adc
push
sbb
sub
push
shr
dec
mov
lock
bound
imul
shlb
and
add
sbbb
cld
icebp
inc
jno
mov
cmp
movsl
push
mov
lods
movsb
or
aad
lds
loope
sub
pop
mov
dec
xchg
push
lret
testb
cmp
push
sbb
jge
fwait
and
ds
adc
fistl
imul
call
jae
es
cwtl
pop
int3
shlb
lahf
xor
sti
sbb
pop
sbb
call
int
inc
add
jl
das
mov
add
push
add
ficomps
arpl
mov
test
cmp
stos
jg
and
or
out
sbb
mov
in
pusha
loop
push
popf
inc
mov
inc
xor
sbb
addr16
int
fildl
rclb
xchg
mov
or
push
xor
push
movsb
cld
or
xor
or
sbb
pop
scas
fbstp
ret
cmp
jl
call
jl
xchg
ds
outsl
repnz
cmp
inc
stos
cld
outsb
loope
not
jns
mov
cmp
sti
xchg
in
movsb
leave
pop
leave
es
sbb
pusha
scas
call
int
loop
les
and
mov
repnz
or
das
cmc
jg
mov
bnd
gs
mov
es
js
mov
sbbb
cmpsl
out
push
mulb
jnp
outsl
andl
ror
adc
imul
adc
es
jns
cli
sub
out
hlt
push
xor
jmp
dec
das
in
add
sub
dec
jmp
pushf
and
pop
loop
test
lahf
inc
frstor
jns
cli
subb
gs
cwtl
dec
inc
arpl
mov
aam
sbb
mov
shl
add
addr16
lcall
mov
stos
ds
pusha
inc
push
rcll
pop
inc
testl
cmp
sub
pushl
jo
jmp
jl
std
loope
or
or
daa
cmp
xchg
add
jae
scas
flds
mov
add
push
mov
insl
insb
imul
sar
mov
adc
jnp
and
insl
fdivr
inc
mov
lock
pusha
or
jecxz
push
inc
fwait
jns
xor
push
push
pusha
fbld
aas
xchg
sbb
sub
mov
cmp
sti
push
pop
repnz
or
sbb
shll
divb
fisttpl
inc
mov
pop
xor
subb
mov
inc
aaa
xor
adcb
gs
dec
es
lret
add
ret
fwait
gs
test
sub
xor
sub
sub
insb
jle
jmp
xchg
mov
lods
push
xor
jno
ret
outsb
inc
and
or
out
test
or
icebp
cmp
sub
lahf
stos
push
outsb
pop
cmp
ja
gs
add
fwait
xor
enter
aaa
cs
into
out
sbb
ret
mov
jmp
mov
or
add
repnz
daa
scas
sub
int
sub
and
fistl
sbb
imul
sbb
sub
data16
lods
inc
movsl
dec
cltd
or
les
shl
nop
flds
std
push
sbb
fcmovb
xchg
out
popa
scas
divb
xor
mov
les
jno
mov
sbb
lea
jle
lret
jns
sub
lret
cmpsl
movsl
xchg
jmp
sbb
push
cmpsl
push
insl
stos
xor
popa
movsb
jbe
sub
les
iret
and
jge
or
cli
mov
mov
arpl
aad
push
jle
inc
sti
xorb
sub
outsb
push
push
in
sbb
and
inc
lods
clc
pushf
test
sbb
cmp
ljmp
subl
es
popf
push
lods
les
pop
and
dec
arpl
inc
jg
scas
imul
push
pusha
jns
sbb
push
sbb
icebp
inc
xchg
add
lods
scas
lock
pusha
mov
shrl
sti
lods
dec
fucomi
orb
mov
movsb
sbb
xorb
adc
or
adcb
dec
and
sarb
push
or
inc
lea
fwait
and
and
cmp
nop
push
pop
cld
mov
clc
dec
adc
loope
cmp
call
scas
xlat
sub
divb
jecxz
mov
and
push
in
xlat
jmp
lret
xlat
stos
fistps
inc
cmp
fiadds
mov
jne
xchg
pushf
cmp
inc
xor
sub
in
fstpl
push
push
test
mov
push
jmp
mov
int
xor
xor
popa
cld
dec
xor
mov
sbb
es
and
mov
cmp
imul
jl
in
sbbl
pop
sahf
and
lea
jecxz
dec
lcall
in
ds
roll
inc
insb
jg
daa
test
push
pop
out
dec
cmc
sahf
stos
jmp
repnz
or
es
pop
ds
aaa
out
adc
dec
cmp
inc
lret
test
leave
pop
jne
fadd
int3
and
mov
mov
int
add
dec
stc
inc
jge
lcall
fsubp
add
repz
dec
sub
and
testl
cli
mov
pop
idivb
jns
jns
sub
sbb
xchg
adc
mov
xor
stc
lock
ret
xor
ds
mov
sbb
pop
dec
fmul
popa
arpl
push
cmp
daa
inc
iret
xchg
and
lods
xchg
out
pop
and
sbbl
in
out
mov
pop
stos
jg
movhps
repnz
push
lods
sbb
or
lret
lds
mov
add
mov
pop
call
cmp
stos
lods
mov
inc
add
or
loopne
mov
cmp
or
ds
jp
sub
push
adc
adc
dec
jg
xchg
dec
inc
mov
pop
or
cmp
mov
bound
xor
fyl2xp1
cwtl
ss
popa
dec
jo
push
test
pop
sbb
dec
push
xor
push
cwtl
negb
inc
setne
cmpsb
aad
mov
out
out
clc
popa
sbb
push
das
push
out
adc
leave
jne
jge
adc
sbb
xor
repnz
rorb
sbb
adc
xor
loopne
popf
adc
mov
mov
and
xchg
xchg
xor
mov
cmpsl
mov
mov
scas
scas
mov
mov
mov
cmp
sub
jmp
xchg
jle
mov
xchg
cld
inc
loope
hlt
insb
mov
imul
fdivr
dec
inc
ss
add
aas
das
stos
and
daa
jg
jp
daa
inc
jecxz
outsl
je,pn
ss
mov
fsubrs
insl
roll
cli
repnz
push
sub
pusha
ss
repz
mov
cmp
cwtl
push
imul
out
sahf
and
je
xor
inc
iret
mov
push
jecxz
xchg
loop
inc
pop
movsb
cli
dec
movd
or
jo
jl
mov
movsl
dec
int
pop
mov
push
fcmove
adc
push
aas
fs
lret
jno
into
sbb
xor
pusha
es
aad
xchg
mov
repz
push
insl
repnz
aam
std
pop
xchg
in
scas
mov
loopne
int
bound
pop
rclb
jp
sbb
std
icebp
inc
aam
aam
fcoms
jbe
stc
sub
or
push
pop
jle
mov
or
aad
loopne
or
shrb
mov
std
cmp
neg
ds
rolb
or
cs
fnstsw
inc
push
xchg
in
add
jnp
inc
pop
jmp
mov
pop
dec
jp
adc
push
jae
jo
decb
xor
adcb
sbb
vpshufhw
mov
cmp
call
or
dec
cltd
adc
mov
jg
scas
pop
aas
pop
dec
mov
ljmp
jno
and
addr16
mov
mov
shll
fildl
xor
xlat
outsl
negl
aad
xchg
sti
mov
pop
sub
jnp
sbb
movsl
mov
test
inc
inc
testb
insl
add
push
push
or
cmp
notl
cmp
xchg
sub
dec
inc
mov
faddl
cmp
outsb
ljmp
ss
into
xlat
sub
jg
je
mov
inc
push
push
je
sub
roll
mov
push
lods
push
xor
es
jge
bound
inc
jmp
xor
lods
in
idiv
inc
push
iret
push
data16
xchg
ss
cwtl
ror
repz
ljmp
jbe
pop
das
add
lcall
or
insb
push
mov
rcrb
push
or
in
cwtl
movsb
int
jecxz
push
mov
add
push
adc
dec
imul
xchg
add
add
pop
mov
pop
popf
lods
dec
cmc
mov
cmp
aas
xor
or
cmpsb
imul
lret
push
scas
push
rcrl
cld
jo
stc
shrb
add
scas
scas
test
popa
enter
or
mov
pusha
fildl
fwait
andb
or
mov
arpl
xchg
push
cmp
xor
sub
ljmp
jl
mov
or
pop
shrb
mov
jecxz
adc
push
pop
outsl
xchg
xor
xchg
dec
cmp
stos
mov
push
stc
cmp
xchg
pop
je
js
push
imul
and
inc
push
in
ss
push
daa
inc
popl
imul
bound
leave
push
mov
imul
xchg
jl
mov
dec
push
mov
imul
mov
in
sub
xchg
jmp
pushf
jbe
push
xchg
fnstenv
dec
bndldx
stos
fsubl
mov
mov
cmp
movl
or
pop
lock
mov
or
ja
add
leave
pusha
inc
lret
xor
xor
jge
iret
cmc
popf
mov
cwtl
push
push
shlb
scas
cli
fisubrl
push
xor
lods
mov
adc
aas
ds
iret
fisttpl
mov
mov
and
dec
dec
and
rcrl
jecxz
fwait
in
sbb
aam
adc
dec
and
cmc
paddsb
cli
cld
jmp
popf
int3
cld
mov
bnd
mov
or
dec
notb
xlat
sub
fcompl
push
sbb
subb
xor
jg
dec
cs
outsl
pop
add
gs
gs
mov
push
and
mov
dec
fs
cmpsb
fsubrl
dec
inc
ret
push
stc
dec
fcomps
mov
repnz
int3
or
mov
outsb
sbb
or
imul
js
loop
and
pop
jle
shll
xlat
daa
stos
iret
in
getsec
into
aas
xchg
jne
xchg
pop
subl
dec
adc
mov
jg
outsb
xlat
mov
and
outsb
sarb
aad
les
int3
mov
test
insl
clc
rorl
clc
inc
cli
jne
xchg
pop
lret
in
rol
pop
adc
jl
push
jmp
jmp
sbb
gs
xchg
mov
pop
in
push
arpl
js
insl
xchg
xor
adc
fdivs
mov
ss
nop
push
imul
pop
repnz
or
dec
jns
jp
cmpsb
jge
jnp
cmc
in
ljmp
pop
dec
and
add
inc
sbb
bnd
xchg
xchg
sub
push
mov
and
in
outsl
cmp
jo
inc
fisubs
xchg
outsl
adcb
shlb
sub
cmp
add
sub
cltd
cmp
stc
or
sahf
xor
adc
mov
sub
mov
cmp
inc
mov
imul
xchg
cld
jnp
cmp
lcall
lods
jb
sbb
and
scas
insl
inc
lahf
xchg
push
int
mov
mov
push
das
jl
adcb
in
sbb
cmp
or
push
push
stc
or
add
cltd
daa
clc
dec
imul
xlat
insl
push
or
fnstenv
jp
pop
sub
adc
pop
dec
imul
dec
and
testl
adc
jp
inc
push
mov
cmpsl
shl
inc
stos
cmc
or
add
scas
inc
shrl
int
cltd
pop
lods
pop
popa
ficomps
push
push
in
nop
mov
dec
mov
shll
mov
es
aad
jbe
jns
lret
push
ss
push
outsb
or
outsb
jne
inc
orl
jl
fwait
or
or
xorl
add
xchg
adc
and
stc
adc
jle
shlb
dec
es
push
pop
jb
cli
cli
xchg
sub
and
in
xchg
cli
jo
xchg
mov
cmp
lret
fbstp
mov
xor
sbb
mov
mov
cltd
jo
fsubs
inc
push
stos
rolb
lea
add
imul
sti
dec
push
mov
lahf
and
lahf
or
mov
mov
adc
xchg
adc
cmp
imul
pop
dec
jo
mov
lret
mov
adc
adc
add
sub
arpl
mov
iret
add
icebp
shl
sbb
test
mov
inc
popf
fdivrs
mov
call
repnz
ljmp
test
adc
sub
jmp
sub
into
cmp
aas
adc
rcrl
mov
or
mov
sbb
dec
imul
xor
mov
jge
shlb
mov
xchg
and
xchg
popa
sub
sti
mov
ret
mov
enter
xchg
outsl
lret
test
test
dec
cmp
or
test
pop
test
out
fwait
mov
pop
clc
sub
ret
dec
mov
push
and
dec
mov
push
pop
push
ds
lods
cmc
cmpsb
mov
sbbb
shll
xchg
pop
aas
lock
mulb
jmp
mov
icebp
decb
imul
and
sbb
out
mov
daa
shll
icebp
mov
push
out
sub
mov
pushf
hlt
adc
sub
rcl
cmp
jp
leave
jecxz
inc
fimull
shl
mov
stos
mov
xchg
xchg
fidivrs
mov
test
or
sub
or
dec
xorb
test
addr16
ficoms
call
or
mov
adc
je
jge
pop
and
daa
neg
mov
in
in
das
pop
pop
test
test
cmpsl
or
sub
jge
mov
sbb
ja
dec
pop
pop
in
cmp
in
testb
jle
in
cmp
mul
clc
and
sbb
or
cmp
or
mov
xor
sbb
add
add
scas
mov
movsl
call
mov
mov
shrl
loope
add
fisubs
hlt
or
mov
sbb
xor
sti
xor
in
push
cmp
js
add
movsl
fwait
adc
or
cs
fs
adc
outsl
imulb
leave
xlat
mov
fldl
lret
mov
adc
ret
dec
cli
cmp
insl
xchg
in
jae
pop
or
dec
add
or
lret
mov
and
mov
mov
movsb
mov
test
scas
int3
pop
sbb
fldenv
fildll
adc
mov
shlb
stos
inc
cmp
xlat
mov
pop
sbb
mov
mov
mov
push
stos
xor
sbb
adc
xor
add
jns
mov
or
mov
xchg
push
mov
adcb
fs
pushf
bound
lock
lods
sbb
push
scas
sub
push
loop
push
push
mov
aad
mov
popf
jo
test
add
mov
or
push
popf
push
mov
dec
pop
adc
cld
push
push
adc
shl
mov
lahf
xor
xor
mov
and
ror
in
orb
xor
dec
loop
push
mov
sub
aam
out
cld
or
out
xor
sbb
sbb
test
jns
ljmp
jmp
ja
push
add
mov
cmp
mov
and
loopne
or
xchg
mov
in
adc
cli
lahf
sbb
sbb
lock
mov
mov
fnsave
bound
aad
in
inc
call
push
pop
adc
js
daa
xchg
negb
push
stos
jae
movsb
mov
cltd
push
test
sub
addl
notb
in
iret
xor
mov
pop
pop
rcl
push
daa
test
or
jnp
decb
jmp
xchg
bound
dec
adc
sub
aam
cmpsb
ss
add
mov
rcrl
xlat
push
sub
cmpsl
jp
cmp
cwtl
ljmp
jbe
fisttpl
sbb
fdivrs
jae
fnstcw
push
or
jb
das
dec
mov
repz
adcb
sbb
pop
fidivrl
pop
push
jno
fsub
repz
repnz
mov
ja
jge
pop
jo
dec
lea
mul
push
not
mov
gs
out
sub
inc
js
mov
cmp
test
mov
sti
xchg
enter
dec
sub
decb
sbb
mov
out
lret
enter
push
jmp
and
aas
or
fs
subb
inc
add
jne
std
pop
pop
aas
jae
or
stos
nop
daa
imul
daa
les
pop
xchg
cwtl
push
mov
pop
ljmp
push
std
cmp
in
push
loopne
mov
orl
sub
add
push
mov
inc
push
lods
xchg
in
pop
jl
xlat
sub
xor
es
fcoml
jno
scas
or
or
jnp
dec
jecxz
mov
shll
cld
pop
sti
lret
rcrl
sub
add
fisubrs
sbb
into
xchg
add
bound
add
and
mov
add
cmp
gs
mov
daa
das
insb
inc
adc
jl
cmpxchg
test
out
jp
in
sub
xchg
lret
aas
jecxz
push
in
jmp
mov
push
mov
lea
mov
pusha
sbb
addr16
shll
out
jle
mov
sbb
xor
sar
pop
icebp
mov
pushf
dec
lahf
leave
addr16
das
test
mov
dec
leave
mov
je
push
or
and
scas
push
sub
lea
xor
pop
or
sbb
mov
xor
cld
arpl
aas
push
jecxz
dec
movsl
into
in
test
data16
mov
mov
fdivl
cmp
mov
sub
jns
and
push
inc
push
ljmp
mov
pop
out
ret
hlt
js
ret
dec
add
or
sub
inc
or
mov
add
dec
repz
lret
out
sub
scas
pop
lret
sbb
scas
dec
and
scas
sbbl
push
sbb
add
and
mov
pop
imul
push
repnz
stos
sub
xchg
repz
in
scas
cmp
mov
sub
fsubs
movsb
cld
push
xchg
add
pop
in
lods
fidivl
fwait
push
mov
fsts
jnp
js
ss
andb
dec
sub
sub
loope
push
cmp
outsl
or
inc
dec
shll
cmp
repz
mov
mov
dec
jle
std
mov
aas
xchg
lret
stc
mov
imul
mov
adc
cmpb
stc
scas
jno
sbb
fsubl
adc
cmp
fcomps
shrb
scas
xchg
jg
sbb
sub
mov
push
lds
mov
int
pop
lret
xchg
sbb
jge
pop
push
ljmp
inc
pusha
sub
pop
xchg
popf
sbb
movsl
sbb
xor
mov
sub
mov
rcll
leave
adc
loope
sahf
sub
int
shrb
stc
mov
and
cmpsb
repz
iret
ja
cli
push
ret
sub
loop
lds
cmpsl
mov
addl
mov
fdivrp
lods
inc
add
imul
lock
outsl
mov
xor
adc
rcrb
les
imull
inc
xchg
jg
mov
cmc
xor
mov
add
inc
loopne
ret
mov
pop
fdivl
lcall
inc
adc
adc
push
xchg
sub
dec
and
pop
lods
ja
lods
lret
dec
pop
fisttpl
jl
mov
pop
leave
out
js
fsubl
sbb
lods
dec
in
sti
mov
pop
jb
inc
cwtl
push
xor
xor
lahf
mov
dec
dec
fdivrl
push
arpl
xor
in
push
sbb
sbb
cmp
std
mov
loopne
loopne
or
push
pop
jg
lea
and
mov
xchg
jp
dec
mov
repnz
pop
mov
pop
jbe
cmp
mov
cmc
sub
pop
mov
mov
sbb
push
xlat
dec
out
jge
js
jg
mov
mov
in
dec
pop
xor
fistpl
rclb
daa
nop
xlat
mov
lret
das
fwait
adc
fsubrl
inc
repnz
daa
outsb
jo
addr16
mov
lret
call
jnp
adc
dec
sarb
orb
notb
add
ret
sbb
in
leave
out
enter
adc
mov
dec
mov
dec
or
scas
scas
addr16
aas
rcrl
dec
dec
loope
cmp
xor
mov
js
stc
lea
mov
hlt
cmp
push
lods
mov
sbb
push
stos
sub
fwait
stos
lahf
test
mov
loopne
sub
lock
jns
and
push
subb
mov
pop
js
inc
stos
push
fbld
loopne
xchg
xchg
lds
mov
cmc
fwait
pop
fbstp
es
inc
mov
xchg
sub
add
sbb
push
cmpps
lcallw
lock
outsb
xor
ret
bound
scas
xchg
adc
fdivs
fidivl
jge
loop
xchg
lahf
stos
test
and
adc
call
icebp
xor
and
test
push
ja
outsb
xchg
xchg
fstpt
add
lret
jne
aaa
jg
out
mov
mov
pop
in
jne
adc
je
or
and
push
ja
jnp
sbb
fs
leave
test
out
push
test
mov
rol
cwtl
adcl
sahf
sub
cmp
jnp
mov
add
add
fs
andl
jle
imull
mov
mov
and
in
mov
dec
out
lods
loop,pt
adc
scas
mov
push
xor
inc
or
sbb
mov
movsb
mov
inc
mov
cwtl
pop
dec
pop
dec
push
inc
lods
mov
or
pop
mov
push
fisubrl
fiaddl
cmp
xchg
insl
adc
xchg
fwait
in
cli
mov
scas
cmp
cmp
aaa
pop
xchg
out
lcall
incb
mov
fnclex
stos
pop
pop
pop
fwait
jecxz
dec
movsl
push
and
mov
int3
mov
sbb
pop
ljmp
xor
dec
lods
mov
xchg
mov
out
data16
mov
cli
xchg
fwait
pop
inc
fcompl
out
adc
sub
push
ror
outsl
add
enter
arpl
xor
xor
sub
imul
push
jno
mov
mov
fwait
add
inc
test
mov
mov
push
mov
mov
mov
arpl
push
cmp
inc
lcall
scas
ljmp
xor
pop
ja
aam
daa
in
mov
dec
xor
pop
test
or
out
cmp
lods
repnz
mov
or
inc
dec
mov
jle
lock
xchg
pop
push
pop
mov
fistpl
stos
xlat
fcomip
mov
cmp
jecxz
xchg
dec
inc
fisubrs
xchg
or
mov
test
push
xor
jns
mov
mov
repnz
and
dec
std
test
sub
and
dec
outsl
scas
sub
mov
lds
or
mov
cmc
aad
out
mov
mov
add
push
cmp
insb
inc
lret
push
int
jo
cmp
sti
jl
out
sub
mov
mov
mov
ja
cmp
stos
mov
push
lcall
in
stos
popa
test
outsb
into
dec
lods
add
mov
mov
dec
scas
xchg
cltd
cwtl
cmpsl
mov
push
cmp
inc
ljmp
cmpsb
je
popf
xor
jmp
and
push
sarl
nopl
insb
loop
ja
push
mov
mov
inc
mov
jg
mov
sub
and
and
cmp
test
and
sarl
int
mov
daa
dec
out
pop
sub
add
and
fcmovu
sahf
fsubl
sbb
imul
inc
mov
test
dec
popa
mov
testl
xor
inc
stos
add
xor
loop
cs
pushf
inc
stos
in
push
and
jge
cmp
pop
jl
and
jmp
scas
aad
insl
and
ret
das
fcmovu
arpl
push
inc
xor
call
jns
lcall
push
jmp
or
jmp
ds
andb
pop
iret
rcl
sub
push
outsb
jmp
xchg
lods
leave
out
movsl
cmp
roll
mov
sub
out
sbb
push
ret
fisubl
push
pop
xor
xchg
out
out
ret
jne
pop
test
cmpsb
mov
sbb
mov
stos
jbe
xchg
cwtl
rcr
or
int3
cli
adc
cltd
xor
mov
in
subl
jp
mov
sbb
mull
pop
scas
jge
jno
mov
test
cmp
cltd
daa
je
mov
inc
out
sbbl
add
ret
pop
mov
test
out
lea
jbe
xor
mov
or
sub
push
daa
ljmp
pop
or
mov
mov
movsl
jl
mov
pop
test
add
and
fidivs
push
jecxz
fdivrl
mov
fwait
es
lea
mov
pushf
outsl
lahf
dec
mov
in
shrb
sbb
xchg
in
mov
mov
jp
lds
mov
xchg
push
call
or
scas
jge
cmp
nop
mov
out
lret
lret
js
ja
xchg
insb
or
jl
mov
dec
push
push
lret
adc
fstp
dec
add
ja
push
fs
push
push
decl
scas
xor
mov
aas
and
pop
loopne
cmp
pop
adc
shll
mov
ja
mov
fnstenv
or
insl
in
cli
fwait
xchg
xor
in
xor
mov
mov
test
xchg
pop
mov
jnp
test
pusha
mov
repnz
adc
xchg
ja
mov
dec
push
lea
aam
cmp
imulb
loopne
cmp
insb
sub
lds
lea
mov
pop
cmp
repz
cmp
xchg
fidivl
sarb
adc
pop
lcall
dec
mov
test
faddl
cmpsl
imul
and
sbb
loop
data16
out
push
insl
xchg
add
fs
nop
sub
xor
cmp
call
fsubl
xchg
data16
leave
cmp
sub
push
out
aas
dec
xchg
fxch
push
dec
out
push
jle
cmp
insl
pushf
cmp
mov
dec
nop
push
in
ret
out
and
fwait
or
scas
cmp
scas
imul
lcall
xchg
push
jnp
dec
call
cld
cmp
popa
scas
cwtl
gs
je
mov
push
cltd
adc
add
add
add
repz
call
push
int3
in
fwait
add
repz
jbe
scas
pop
aad
addl
out
lcall
adc
and
rcrb
cmp
int
and
jae
lock
pop
inc
push
xor
jbe
sub
dec
sbb
aad
insl
mov
inc
and
fdivs
pusha
scas
inc
inc
pop
fadds
in
stc
or
add
or
rcrl
movsb
cmp
test
loope
jb
push
shrb
mov
and
je
outsl
jns
xchg
mov
pop
push
push
test
mull
cmp
outsb
sbb
enter
mov
in
sub
pusha
sahf
jp
cld
out
cs
les
and
insl
cs
arpl
lcall
sub
fistpll
lock
cld
adcl
push
cltd
incl
inc
addl
add
int
sbb
inc
dec
imul
lret
lds
mov
in
mov
imul
inc
repnz
movsb
fisttps
and
inc
test
push
cmpsb
adc
jns
outsl
mov
mov
fnstsw
lret
std
into
jmp
add
imul
ficoml
ds
movsb
lahf
ret
fidivl
loopne
imul
lock
iret
push
lea
out
cmp
mov
int
aam
cmp
out
test
pop
jl
sbbb
lea
addr16
mov
cmc
mov
es
imull
and
push
xor
sti
add
test
outsl
daa
inc
adc
mov
fistpl
nop
mov
in
mov
cmp
fcomps
push
inc
and
or
xchg
cmp
push
sub
sbb
add
lret
cmc
psubb
lret
or
and
pop
dec
in
stos
inc
inc
xchg
and
fdivs
call
sbb
mov
lds
cmpsl
ss
adc
out
out
cltd
test
cmp
loope
adc
out
pushf
fildl
sahf
fnsave
imul
mov
in
and
js
shrl
fs
cmp
jecxz
pop
cmp
jns
aaa
cmpsb
repnz
adc
adc
mov
adcb
pop
jo
mov
fidivrl
mov
mov
shll
es
je
mov
rclb
sbb
mov
fcoml
push
cs
aam
icebp
dec
outsl
in
and
mov
and
mov
and
out
push
ss
nop
ret
pushf
aad
addr16
cmc
cmp
mov
inc
add
pop
push
shrl
mov
push
ja
nop
into
nop
ror
jne
push
cmp
jno
dec
mov
imul
repnz
sbb
mov
inc
imull
cmp
fyl2xp1
or
bound
rcrb
shl
mov
das
test
dec
jle
xchg
repz
sbb
hlt
pop
push
mov
mov
or
adc
aaa
stos
dec
in
ret
stos
cmp
jns
xchg
icebp
mov
push
xchg
int3
mov
insl
push
or
loope
stos
call
adc
xchg
pop
inc
dec
je
dec
lods
or
loope
sbb
repz
mov
lods
pop
push
cmpsl
ds
mov
mov
vpcmpgtd
cmpb
cmp
out
sbb
nop
lock
fs
xchg
xchg
mov
adc
js
xor
adc
popw
inc
fcom
mov
jp
pop
mulb
dec
jge
cli
sub
fistps
stc
nop
out
jl
fisubs
adc
mov
test
jns
and
pop
xchg
in
push
sub
rcl
jb
mov
cmp
lret
in
cmp
fcmovu
jb
push
imull
mov
add
dec
popf
pushf
and
pop
subb
das
or
jno
xchg
mov
dec
fbstp
stc
lock
mov
adc
jae
xchg
xchg
mov
and
inc
cmc
push
cld
push
aas
mov
aas
setne
fdivrl
fsin
bound
es
std
xchg
pop
dec
mov
ds
or
les
sbb
arpl
rorl
add
and
testl
int3
dec
aas
push
jp
aaa
into
push
mov
inc
sti
addr16
push
xor
cmpsb
cmp
mov
pop
repz
pushf
mov
sub
inc
cmpsb
mov
cmpsl
push
fimull
jl
sbb
jmp
xor
aam
push
inc
aas
adc
out
lea
jg
sub
sub
mov
fcompl
sub
mov
cmp
dec
lcall
xchg
mov
pop
lds
inc
cltd
out
or
xchg
jg
mov
movb
movsb
jecxz
pop
mov
js
insl
push
out
sahf
mov
cli
xor
dec
gs
jle
and
gs
cmp
xor
cmp
cmp
sahf
adc
dec
dec
or
add
mov
mov
sub
cmpsb
dec
arpl
mov
sbb
int
dec
imul
out
xchg
stos
repz
jg
mov
movsl
sub
mov
lock
xor
test
jbe,pn
mov
mov
ljmp
movsl
cmp
sbb
push
imul
int
leave
es
push
je
stos
jb
xchg
jle
mov
ret
xor
stc
dec
mov
negl
jmp
dec
cmp
xchg
call
or
pop
ds
push
ljmp
push
xchg
movsl
cmc
mov
arpl
lret
scas
inc
mov
lahf
push
lret
ljmp
cwtl
mov
and
jle
push
les
and
cwtl
pop
or
jno
sbb
mov
fldcw
movsl
inc
data16
in
inc
jb
jbe
test
pop
jo
sub
push
pop
lret
push
arpl
popf
dec
shll
dec
cmp
outsb
cmp
lds
jne
sbb
or
push
xor
fldl2e
mov
dec
mov
pop
mov
xchg
xor
inc
or
fsubl
xlat
aaa
incb
fnsave
push
sti
xchg
mov
mov
daa
jle
lret
into
movsl
sub
aad
cmc
sbbb
lahf
mov
popa
ja
mov
adc
xor
test
iret
mov
das
cmp
in
xor
add
lods
mov
xlat
les
sbb
jmp
in
andb
fbld
pop
and
lcall
sti
jbe
mov
lcall
sub
std
mov
xor
in
xor
xor
outsl
fdivl
xchg
fidivrl
gs
iret
outsb
inc
bound
adc
pop
sub
inc
lret
push
loope
adc
cs
push
orl
lock
or
ja
xchg
push
xor
inc
adc
les
jns
shrb
aas
or
mov
and
ljmp
mov
int
movsl
mov
push
add
mov
clc
cmp
xor
cs
sub
subb
dec
in
and
push
mov
mov
filds
fs
mov
mov
mov
stc
xchg
ljmp
pop
mov
clc
sahf
mov
cmp
push
cmpsb
call
fwait
pop
mov
test
dec
pop
shrb
dec
scas
movsl
icebp
mov
dec
insl
push
and
dec
dec
divb
jnp
jne
addl
pop
iret
or
jnp
mov
adc
mov
popa
add
mov
fmul
mov
fistpll
cmp
jbe
xchg
test
mov
pop
inc
rorb
dec
jmp
leave
mov
dec
and
cltd
je
push
xchg
rcrl
adc
push
jmp
in
sti
mov
pop
mov
repnz
xchg
push
call
fisubl
or
je
cmpsb
mov
scas
xchg
dec
cmp
dec
jg
mov
cmp
out
fcomps
lods
jg
inc
jno
lock
leave
rorb
pop
mov
push
out
in
aas
mov
pop
xor
out
mov
aam
loope
adc
dec
push
test
or
sbbl
fstpl
push
xor
je
sbb
sub
pop
jno
cmp
rcrl
xor
pushf
jo
and
scas
ret
call
push
cwtl
scas
aas
pop
int3
lods
les
add
cmp
pop
mov
jge
mov
sub
popa
outsl
out
or
ret
ror
or
repz
inc
enter
ret
popa
in
mov
mov
in
pop
adc
mov
sub
shrb
add
inc
in
fsubl
sub
out
enter
pop
in
arpl
test
test
push
mov
push
adc
mov
adc
jb
loope
ja
dec
out
jo
adc
or
dec
pop
xor
cmp
sub
lods
sbb
std
xchg
dec
mull
mov
xchg
xor
fbstp
and
or
loopne
inc
push
mov
ja
pop
push
and
cmpsl
stos
inc
cmpsl
orl
pushl
push
outsl
popa
mov
imul
inc
dec
inc
mov
jmp
xchg
add
stc
nop
dec
and
into
aaa
das
fidivs
pop
mov
iret
in
adc
dec
add
test
jno
adc
xchg
push
mov
cwtl
xor
xchg
popa
sub
cmp
sahf
sbb
dec
xchg
mov
nopl
dec
or
sub
out
les
jmp
mov
jge
jb
popa
ljmp
ja
add
jge
mov
shlb
push
ja
outsb
into
or
xchg
dec
in
push
js
fcomps
or
cwtl
std
gs
test
xor
aad
jmp
pop
sti
xor
sub
loope
ljmp
mov
pop
add
push
inc
push
push
mov
icebp
cli
mov
add
inc
leave
pop
cli
pop
data16
insb
inc
mov
in
popa
jnp
mov
imul
mov
pop
jecxz
popa
aad
jecxz
fildll
mov
pop
mov
mov
adc
mov
sub
push
test
shll
pop
shrb
cmp
and
fs
inc
pop
jmp
lret
and
out
sbb
push
lods
inc
aam
nop
xor
lret
lods
ret
test
dec
xor
inc
insl
out
push
push
dec
repz
aas
bound
call
add
inc
pop
fxch
xor
loopne
inc
es
aam
aam
mov
push
int3
out
dec
pop
mov
fwait
lret
xchg
lea
insl
daa
mov
sbb
rclb
jge
into
cmp
stc
xchg
mov
adc
stc
les
shlb
jbe
jns
outsl
es
int3
arpl
sar
sbb
mov
in
das
pop
pop
insl
inc
xchg
ds
out
mov
insl
idivb
lret
stos
adc
adc
push
fdivl
sbbl
cmp
notl
popf
lods
push
inc
lods
fisttpl
xchg
jp
enter
imul
gs
ljmp
or
push
sub
test
sbb
push
enter
movsl
cmp
dec
sti
fwait
mov
jae
adc
add
fldt
cmp
loope
jae
xchg
shl
loope
int3
movsl
inc
or
sub
arpl
int
inc
cmp
xchg
xor
inc
push
push
ffree
jle
inc
pop
call
pop
pop
inc
inc
mov
sbbb
cmp
inc
cmc
sbb
mov
xchg
jge
stos
movsb
xchg
shll
mov
gs
andb
or
pop
inc
in
cmc
cmp
xchg
dec
shll
cmp
mov
in
inc
repz
fbstp
loopne
sub
vmovq
fiadds
clc
nop
cs
dec
sub
add
sbb
test
jae
mov
mov
addl
inc
es
popa
inc
add
fisttps
inc
out
mov
cmp
xchg
add
cmpsl
and
xchg
xor
inc
ds
xor
cltd
data16
clc
aas
xor
imul
xorl
sbb
push
xor
cmc
mov
jo
jge
sub
stos
pop
les
push
pusha
xrelease
push
mov
pop
decb
cmpsl
aas
push
push
jp
pushf
mov
mov
jp
jne
int3
xor
es
xchg
popa
aam
ficompl
clc
std
dec
js
push
dec
loop
rorb
push
es
xor
scas
pushf
push
loopne
imulb
and
jmp
mov
mov
push
pop
cli
pushf
lret
or
sahf
jno
adc
movsl
lret
lock
pushl
xlat
xchg
jnp
or
sbb
cmpsl
jo
lds
mov
imulb
shll
sbb
jg
insb
inc
sub
mov
add
mov
shl
leave
and
dec
sub
inc
xchg
loop
push
or
inc
add
daa
xchg
ss
inc
jp
out
push
pop
pushf
int3
enter
xchg
push
jl
nop
movsl
jbe
outsl
jg
push
mov
mov
sbb
push
adc
cmp
xor
mov
ret
outsb
jp
out
pop
cmp
or
jae
push
mov
divps
stos
xchg
adc
sbb
das
movsb
inc
das
jnp
add
pop
dec
test
cmpsb
outsl
int
cmp
sub
shl
and
adc
add
add
fildl
push
fists
xor
cmp
cs
and
popa
mov
adc
jnp
stos
lret
xor
xor
mov
and
mov
dec
outsb
pop
rcrb
and
dec
push
fcomps
jp
fcoms
xor
leave
je
jns
jno
test
jno
in
idiv
xchg
xchg
mov
sub
sub
arpl
fnstsw
push
add
push
decb
xchg
pop
jge
mov
adc
cmp
push
out
mov
mov
pop
das
mov
pushf
mov
ljmp
inc
sti
pop
imul
pop
cmp
test
aas
adc
iret
mov
sti
lret
lcall
and
fidivs
mov
xor
inc
test
sbb
xor
inc
jo
push
call
mov
rol
pop
cwtl
ljmp
insb
fsubrs
std
imul
sub
test
add
data16
sbb
ss
mov
cmp
in
loop
sti
mov
pop
push
pop
scas
testl
pushf
or
add
les
jp
outsb
les
dec
ret
outsb
negb
sbb
xor
divl
jns
iret
cli
std
nop
movsl
lret
sub
jne
sbb
into
imul
sub
cmp
cs
test
cltd
jg
jge
popf
loope
stos
push
iret
lcall
fs
lcall
pop
push
push
testl
daa
dec
cmp
lock
cmp
loop,pt
ljmp
sbb
and
mov
adc
jle
pop
xchg
mov
pop
imul
aam
xchg
dec
aad
int
fs
mov
int
outsl
lcall
inc
and
xchg
nop
pop
push
and
xchg
and
sub
pop
incb
push
cmp
mov
push
pushf
adc
lods
movl
pop
scas
sarb
aam
dec
pop
xlat
js
mov
xor
decb
addr16
cmp
mov
sub
xchg
inc
or
int3
inc
inc
mov
mov
movsl
nop
pop
out
lea
aad
mov
aas
add
sbb
push
sahf
sbbb
and
jl
dec
dec
daa
mov
mov
cmp
mov
mov
pop
inc
add
pop
mov
push
cli
add
mov
in
outsl
je
ret
repz
test
sahf
sbbb
inc
jecxz
sbbl
adc
outsb
dec
sbb
fidivrl
les
pop
pop
in
insl
inc
sub
add
mull
scas
mov
fistpll
repnz
testl
lret
mov
push
mov
dec
sti
sub
xor
popa
pop
std
or
xchg
test
or
stos
mov
dec
rorb
mov
adc
xchg
adc
mov
push
jecxz
cmp
sub
sub
nop
add
in
aam
cmp
std
imul
lods
xchg
sbb
cmp
out
imul
fildl
cmp
in
push
scas
cmc
sbb
iret
pushf
out
call
int3
ljmp
xor
xor
push
jl
call
inc
sti
pop
mov
jl
hlt
jbe
fisttpl
inc
sbb
mov
sar
cmp
inc
cli
cmp
jbe
stc
out
adc
mov
push
sbb
sbb
xor
in
sub
popa
mov
inc
pushf
stos
xchg
push
jne
sbb
popf
call
and
sarl
add
out
fldenv
mov
repz
mov
sbb
xchg
mov
cltd
jbe
push
aad
cmp
dec
out
inc
lods
negl
jl
add
push
mov
ret
xchg
adc
mov
mov
sbb
testl
faddl
icebp
jno
and
cmp
adc
imul
pop
cmc
xchg
in
push
xor
lret
std
push
stos
and
xchg
jno
mov
iret
out
lock
or
insl
cmp
jae
push
movd
aam
jp
mov
pop
cld
push
jg
mov
and
inc
fisubl
pop
jecxz
daa
jmp
cmp
js
cli
xchg
outsl
cltd
inc
int3
mov
insl
icebp
xchg
pop
dec
dec
pop
jp
movsl
push
imul
xchg
inc
mov
xor
mov
or
fwait
sbb
jge
xchg
das
scas
in
pop
out
pop
mov
and
xor
mov
or
xchg
jmp
xchg
insl
jbe
jno
inc
sbb
xchg
out
xor
fistps
int
mov
imul
movsl
lds
xor
sbb
xchg
arpl
gs
test
xchg
add
sbb
sbbb
xor
outsl
pop
cmc
xchg
add
ja
dec
push
subl
cmp
call
xchg
addr16
sbb
test
rcrb
adc
mov
negl
roll
pop
add
pop
mov
sbb
and
cmp
outsl
cmpsb
outsl
test
dec
mov
in
fisubrs
les
push
scas
insl
sub
lret
cli
pop
loope
repz
mov
call
loop
movsl
int
insl
ret
div
adc
addr16
cmp
out
jle
dec
mov
cmp
mov
mov
adc
outsb
add
add
adc
icebp
adc
in
orb
inc
clc
loope
and
mov
dec
push
jmp
negl
test
xchg
cs
or
xchg
mov
xchg
add
pop
push
out
cmp
sub
mov
ret
mov
adc
popa
insb
leave
test
je
cli
mov
push
jo
add
xchg
int
mov
testl
jmp
je
lret
mov
inc
mov
aaa
aam
sbbb
jo
or
pop
push
push
leave
loope
aaa
stc
shl
mov
jg
loop
cmp
imul
test
push
dec
dec
push
sbb
jle
or
xchg
daa
imul
fwait
xor
ds
repnz
ret
lcall
jbe
lea
pop
sbb
cmpsl
xchg
mov
and
fstl
jno
repnz
xor
fcomps
call
mov
adc
and
add
pop
push
mov
testb
lea
jno
push
sbb
leave
popl
sti
mov
gs
test
mov
mov
out
push
push
mov
mov
mov
lahf
bound
shl
shlb
repnz
cmpsl
cltd
inc
mov
or
jb
dec
outsl
mov
jle
movsl
mov
cltd
loop
push
push
out
xor
out
mov
inc
mov
xchg
pop
rclb
push
sets
mov
cmp
jo
lret
shlb
push
popa
push
xchg
inc
call
sub
xchg
ret
add
mov
mov
push
fimuls
jno
in
push
jmp
or
push
dec
data16
repnz
mov
outsb
sub
out
inc
mov
xchg
and
and
mov
mov
je
int3
mov
pop
enter
daa
mov
mov
rorl
jo
call
insl
pushf
and
or
ljmp
lds
jne
push
xor
inc
mov
cmp
sub
mov
jl
in
inc
enter
cltd
test
or
add
xor
lahf
sub
push
mov
cltd
cmp
lret
cmp
loopne
inc
jns
cmpl
stos
adc
mov
iret
stc
jnp
jge
jbe
andb
xchg
pop
push
repz
stc
std
mov
xor
decb
mov
fwait
push
mov
clc
add
pop
adcb
repnz
aad
adc
xchg
imul
cmp
and
and
push
lret
loop
aaa
mov
fimuls
adc
stos
fdivrp
cli
dec
fs
inc
jl
inc
cmp
mov
mov
cmp
out
inc
add
mov
movzwl
divl
or
push
sbb
cmp
fisubl
in
pop
pop
adc
pop
stos
mov
fdivrl
nop
sar
dec
mov
cmp
out
cmp
sarb
and
cmp
ljmp
pop
add
dec
aam
addb
xchg
xchg
jno
repz
call
push
cmp
shlb
sbb
mov
cmp
xlat
pusha
pop
mov
stos
js
fiaddl
add
add
lret
push
cs
fsts
dec
pop
fs
stc
and
inc
roll
pop
std
mov
out
xchg
mov
sub
sbb
adc
xchg
pop
test
mov
lahf
call
xchg
data16
jge
jle
insb
sub
dec
mov
push
or
xor
lods
xchg
jmp
and
int3
mov
cmpl
outsb
pop
xor
mov
jge
sub
xor
rcr
sub
aas
sbb
ret
ja
sub
push
sbb
insl
pop
lods
outsl
call
test
pushf
mov
add
scas
push
out
inc
loop
xlat
lods
mov
lods
jg
inc
pusha
psrad
mov
imul
mov
outsl
daa
scas
push
mov
adc
jbe
push
jl
out
mov
pmulhw
mov
adc
sbb
pop
ret
outsl
je
das
enter
out
sbb
adc
stc
mov
jle
dec
dec
movsb
mull
or
push
popf
pop
jb
dec
addl
or
mov
xchg
inc
nop
enter
mov
or
xchg
and
movsl
mov
insb
xor
loope
sub
movsb
cmpsb
repnz
pop
adc
jecxz
mov
adc
stos
xchg
shlb
fcmove
mov
hlt
shrb
ja
mov
sbb
mov
int3
mov
clc
and
fs
es
ja
insb
popa
inc
or
scas
adc
adc
dec
scas
inc
jp
dec
push
add
test
inc
add
xchg
sub
mov
lahf
push
xchg
adc
xor
popf
out
rclb
add
loop
popf
fadds
pop
iret
push
mov
shll
clc
mov
cmp
pusha
sub
adc
ret
bound
mov
int
pop
mov
rorl
xor
loope
mov
lods
mov
xor
sbb
daa
ret
icebp
add
or
lea
pop
std
or
dec
aam
adc
aaa
into
push
popf
test
add
push
in
arpl
testb
sbbl
mov
push
pushf
jecxz
stc
adc
cmp
adc
sahf
dec
fisubs
sarb
in
bound
adc
push
cmp
subl
fsts
cli
jbe
adc
out
das
adc
sbb
icebp
mov
or
pop
test
add
stos
inc
xchg
jmp
enter
mov
pop
out
cwtl
lds
insl
sbb
push
mov
test
mov
push
xor
xor
scas
mov
mov
fmul
fldl
jae
mov
test
lret
lock
sbb
icebp
mov
cmpl
inc
mov
cmpsl
scas
lcall
aad
das
sub
or
test
xchg
and
xor
mov
mov
ss
cmp
insb
push
and
fwait
cmc
aad
mulb
adc
mov
sbb
or
icebp
movb
jmp
stc
nop
ficoms
jno
push
leave
ljmp
call
cmp
mov
xchg
mov
sahf
mov
or
sbb
in
hlt
mov
sub
lock
fists
inc
loop
out
arpl
jne
or
int3
das
test
es
xchg
add
mov
push
mov
jmp
cmp
mov
jge
jmp
dec
push
mov
cld
cmc
pop
pop
es
push
push
cmpsb
cmp
les
dec
pop
arpl
pushf
lret
jp
push
mov
ret
xchg
mov
rclb
in
jo
idivb
daa
mov
sub
das
sbb
mov
fisttps
outsb
out
sub
fstps
dec
lss
sub
pop
js
xchg
out
inc
cltd
loope
xchg
stos
mov
cmp
cmp
fcompl
add
push
fwait
je
nop
xor
and
jmp
vphaddudq
fs
mov
jmp
inc
rolb
lock
ret
shll
pop
sub
dec
ret
jp
mov
fcomps
or
and
pop
test
or
mov
adc
fs
inc
cld
mov
inc
pop
lcall
inc
gs
clc
inc
pop
push
loope
arpl
mov
jne
pop
mov
jnp
push
lret
test
inc
and
bound
sbb
ret
push
int
add
jnp
addr16
push
add
fs
ret
movsl
jmp
xor
cmpsl
pushf
jg
inc
aas
mov
mov
pushf
adc
mov
dec
scas
es
jmp
mov
dec
addl
fsubrl
lods
ret
inc
add
jae
mov
cwtl
adc
rolb
fisubl
pop
loopne
cmp
xchg
mov
repz
ficomps
jns
xchg
jae
sbb
jo
inc
movsl
mov
push
stos
nop
pop
imul
xor
addb
adc
or
sbb
into
ljmp
push
adc
inc
leave
ja
fs
inc
push
fstpt
adc
add
cmp
movsb
mov
xlat
loop
lea
ret
sbb
iret
cmp
pop
inc
fdivl
cmp
sub
aam
mov
push
jnp
aaa
shrl
jle
repz
push
stos
pop
sbb
add
frstor
dec
dec
pop
cmpl
lret
in
and
pop
test
add
push
mov
and
mov
lods
arpl
mov
in
push
adc
cmpsb
mov
jae
hlt
out
imul
mov
xchg
ss
jecxz
cmpsb
or
in
cmp
sub
jg
lret
pop
push
out
or
xlat
nop
push
inc
das
sahf
mov
cltd
cmc
mov
movups
cmpsl
inc
cmp
loope
mov
std
test
jmp
xor
mov
mov
data16
push
arpl
add
cmp
imul
mov
imul
enter
xor
jle
adc
out
lds
jbe
add
pop
out
pop
xchg
dec
push
sub
pop
xlat
and
ja
jle
and
or
xchg
jl
addb
or
mov
pop
ljmp
jle
jb
push
dec
ficoml
out
fisttps
pusha
xchg
daa
jo
aam
call
insb
sahf
xchg
lret
mov
fdivs
jl
or
inc
ret
pop
pop
fsubrs
push
test
inc
je
xchg
dec
das
sbb
stos
jle
fucomp
iret
dec
xor
rorl
xlat
mov
dec
mov
shll
sub
ret
les
cld
aas
insl
outsb
adc
push
lea
lret
shll
ret
jbe
inc
icebp
pop
xchg
outsb
or
mov
arpl
call
sti
jns
scas
push
rorb
inc
sbb
pop
jle
mov
adc
mov
insb
add
add
adc
jg
xchg
icebp
mov
cltd
sbb
shlb
js
enter
int3
sub
jl
or
push
dec
out
bound
lcall
loope
aad
fsubp
mov
out
mov
push
out
hlt
insl
repz
mov
sub
sbb
gs
js
pop
push
cwtl
lods
jno
insl
mov
xchg
dec
ljmp
scas
add
jno
fs
out
sub
arpl
cmp
loop
scas
dec
test
cmp
sub
push
int
jb
movsl
imul
lods
bound
fwait
push
lret
mov
gs
add
shlb
leave
loop
sti
into
cs
xor
cltd
lock
mov
fdivr
imul
daa
loop
aad
or
jno
adc
pop
data16
dec
and
test
scas
movd
mov
mov
ss
jb
ja
cmpsb
nop
and
push
cwtl
outsl
mov
sub
inc
pop
jmp
mov
loop
push
fstpl
movsl
jns
pop
fs
bound
or
ljmp
shl
adc
adc
cmc
leave
xchg
xor
xchg
and
ljmp
js
rcll
in
stc
mov
out
les
xchg
filds
stos
xchg
cs
int3
jecxz
pop
scas
add
mov
nop
js
or
pop
outsl
sbb
inc
das
addr16
lahf
push
mov
ret
sub
das
arpl
outsb
psubsw
loope
into
xchg
das
fnstenv
shl
aaa
cmc
mov
fs
sbb
popa
add
xchg
iret
orl
mov
dec
sbb
repnz
adc
lret
adc
sub
xor
movsb
in
test
ja
call
sbb
jne
cmp
test
lcall
mov
cvtps2pd
push
pop
mov
mov
mov
pop
mov
pop
mov
cltd
cld
and
and
pop
push
jl
lahf
cli
xor
ja
add
mov
xchg
push
shlb
fidivrl
out
scas
in
pop
and
lods
inc
xor
xchg
push
jb
dec
insl
mov
jmp
inc
fmull
lods
arpl
sti
push
push
xor
xchg
lahf
testb
data16
sbb
xchg
mov
cli
arpl
and
mov
cmp
inc
fdivrp
fnsave
mov
mov
jge
add
jne
adc
xor
or
lds
fnstenv
enter
sahf
mov
sbb
xor
ret
shrl
out
out
pop
int3
pop
mov
mov
gs
lret
jb
lock
pop
sub
push
mov
push
inc
js
jl
loop
xor
adc
xor
add
aas
xor
mov
cli
and
flds
outsb
ds
inc
xchg
rclb
loope
sbb
fsts
jmp
xchg
dec
cmp
call
pusha
std
mov
das
adcb
jb
dec
pop
mov
sbb
sub
dec
rcl
cmpb
adc
push
jne
arpl
sbb
add
jo
jl
xor
lock
mov
ret
mov
push
stos
lret
mov
fwait
lret
pop
lock
mov
cmp
inc
xchg
ljmp
call
ja
and
pop
divb
xchg
jne
adc
jg
push
ljmp
lods
dec
cmp
jns
stos
push
cli
xchg
add
mov
and
mov
pop
xor
and
mov
jmp
clc
shr
dec
pop
mov
pop
cmp
pop
aaa
lret
popf
jmp
inc
out
mov
fidivl
adc
mov
xchg
adcb
inc
mov
stos
inc
fs
aaa
ficompl
icebp
xor
je
xchg
sub
mov
pop
in
cmpl
jbe
mov
inc
movsl
fildl
mov
clc
xchg
jbe
push
outsb
mov
sbb
jle
ret
sbb
scas
jg
loope
psrad
pop
in
fsubrl
orb
mov
pop
adc
sysret
ret
sbb
pop
cmpsb
mov
push
outsb
add
xchg
repnz
popa
mov
mov
orl
add
sub
push
or
jno
and
xchg
outsb
inc
fs
mov
cmp
dec
sub
inc
mov
add
sub
adc
pop
inc
mov
int
into
out
jnp
mov
in
or
cs
pop
xchg
call
shrb
negl
xor
add
mov
sub
jg
and
popf
sub
imul
mov
movsb
rclb
in
mov
pop
es
cmpsb
sbb
and
and
std
push
cld
clc
aam
loopne
sbb
fwait
test
xchg
xchg
xchg
iret
jecxz
mov
mov
fimuls
and
pop
pop
add
fisubrs
mov
xlat
test
add
ret
es
pushf
xor
push
icebp
push
xor
aas
dec
sub
xchg
adc
adc
push
or
lods
xchg
daa
insl
das
into
jp
mov
std
cmp
test
sbb
adc
fs
test
xchg
out
jp
aaa
roll
push
or
dec
mov
jmp
ljmp
add
sbb
or
outsl
stos
dec
addr16
pop
loop
test
add
jl
stc
adc
mov
call
pop
inc
out
pop
xchg
negb
lods
lahf
lock
pop
ret
jmp
out
aad
xchg
nop
dec
mov
push
leave
aaa
incb
push
inc
out
mov
inc
iret
inc
add
mov
rolb
lret
mov
xchg
nop
popl
aas
mov
or
imul
mov
lret
das
jnp
aam
inc
pushf
mov
into
push
sub
mov
iret
out
lahf
xchg
dec
cmp
mov
addr16
adc
mov
sbb
jnp
dec
or
dec
roll
cltd
add
push
push
loope
push
in
loop
mov
ja
out
inc
clc
jge
xchg
dec
or
out
sahf
aas
pop
dec
jecxz
xchg
stos
cltd
or
imul
imul
add
push
inc
push
shl
into
sbb
inc
daa
and
sahf
pusha
int
add
repnz
loop
loope
fcmovnbe
cmpsl
insl
lds
adc
cltd
dec
popf
inc
pusha
movsb
addr16
call
cmp
adc
inc
data16
push
pop
jmp
or
mov
js
fisubrs
inc
xor
and
aam
aaa
push
lock
mov
into
ja
fs
lea
les
mov
ret
xchg
insl
clc
call
stc
pop
fisubrs
mov
xchg
mov
xor
pop
xchg
scas
fisubrl
jns
bound
inc
call
incl
lock
sahf
push
shl
jns
lret
sbb
cmpb
pop
inc
ss
cmc
pop
sbb
sub
push
mov
outsl
pushf
dec
sbb
sti
pop
loop
lods
adc
pushf
mov
add
movsb
and
lret
mov
jmp
sahf
sbb
cmp
sarl
mov
dec
lea
push
or
pop
imul
sbbl
pushf
fcmovnb
loope
test
xchg
mov
add
inc
les
mulb
sbb
fidivs
daa
jb
cmp
cmp
lret
notb
push
mov
mov
jae
pop
out
dec
in
sbb
je
into
imul
fldl
lret
in
fldcw
addr16
stos
mov
andl
insb
hlt
mov
cmp
cs
cmp
pop
fdivrs
or
loopne
daa
rcrb
pop
jnp
daa
mov
imul
lret
inc
sub
pop
das
push
sub
in
hlt
push
cmpsl
idivl
fwait
sub
fsubrs
test
pop
idiv
cmp
out
mov
xchg
add
push
and
stc
lods
movsl
imul
ja
and
adc
push
adc
fldcw
je
jno
jae
das
cmp
and
ret
mov
loope
icebp
sti
nop
mov
dec
pop
scas
fsub
jecxz
arpl
cmp
stc
mov
ljmp
mov
pop
pusha
fistps
test
jbe
and
push
push
std
in
out
push
loop
ja
mov
bound
mov
out
ja
jp
adc
cmpsb
add
pop
add
stc
out
dec
cmpsb
into
lds
daa
es
mov
push
adc
cmp
sbb
fistpl
and
int
jecxz
cmp
ss
push
and
dec
lods
arpl
sbb
aaa
or
pusha
xor
cltd
data16
mov
jnp
fwait
fdivl
adc
test
scas
jle
lea
test
add
aaa
jmp
mov
mov
or
mov
mov
stc
push
jbe
sbbl
cld
push
call
cmp
outsl
daa
mov
mov
jo
shlb
sub
pusha
jp
loopne
mov
out
outsb
movsb
inc
dec
push
push
inc
out
inc
popf
jns
pop
ljmp
mov
stos
mov
xor
iret
imul
scas
jbe
test
data16
mov
outsb
enter
stc
mov
insb
or
push
orl
loopne
lock
xchg
inc
into
ljmp
add
or
push
test
add
pop
fbld
mov
and
push
stc
mov
test
ljmp
mov
add
or
stos
dec
jmp
lret
jbe
lret
jge
popf
repz
push
push
pop
xchg
pop
ds
sbb
outsl
xchg
pop
inc
ds
loop
leave
scas
scas
psraw
push
xor
inc
out
imul
mov
aas
jmp
push
cmp
adc
lcall
xor
xor
fdivrs
add
xchg
xchg
imul
shrl
pop
xchg
fdiv
mov
fidivl
shrb
or
fsubl
cwtl
and
mov
call
sbb
cmp
fdivs
inc
pop
inc
fisttpll
out
adc
call
rcl
test
sbb
out
and
in
add
sbb
cmpsl
jecxz
leave
cmp
jge
jmp
aaa
jns
ret
jle
es
out
push
or
mov
xchg
nop
adc
sub
fstpt
shll
aam
pusha
xor
rcll
fnstcw
ljmp
jl
fldcw
mov
adc
cmp
inc
mov
cs
xchg
add
fisubrs
adc
mov
mov
mov
std
loopne
mov
pusha
jmp
mov
jo
jae
pusha
mov
lods
mov
push
jge
pop
divb
pop
sub
popa
icebp
or
std
jecxz
inc
std
cli
mov
cmp
stos
add
jo
or
pusha
pop
jecxz
add
ret
leave
cmc
jno
push
add
daa
jle
lahf
out
ret
xor
mov
sbb
das
mov
pcmpgtd
mov
and
inc
nop
push
mov
sbb
lahf
sbbb
mov
mov
sub
repz
sbb
daa
inc
pushl
cltd
or
fnstenv
aad
push
or
jl
mov
sbb
jnp
xchg
movsb
rolb
shll
ljmp
mov
adc
xchg
sbb
fnsave
xor
adc
mov
call
arpl
mov
gs
sbb
sub
adc
inc
leave
cmp
dec
pop
xchg
sub
inc
mov
mov
insb
mov
mov
sub
leave
mov
loope
pushf
pop
push
out
push
aaa
int3
in
imul
dec
test
add
cmp
xor
in
push
dec
movsb
inc
xchg
hlt
sub
lret
dec
dec
loop
mulb
testl
xchg
jae
mov
decl
dec
cli
pop
out
call
xchg
cmp
xchg
inc
popf
dec
jmp
adc
inc
sub
or
xchg
and
lods
or
fisubs
cmp
leave
jp
sbb
jmp
in
fcoml
pop
lds
xchg
inc
out
cmp
out
les
dec
lret
mov
sbb
add
js
or
xchg
or
mov
lds
mov
inc
ret
jge
xor
lahf
inc
xlat
shlb
xchg
test
xor
jo
mov
dec
xor
dec
icebp
adc
imul
pop
int3
mov
imul
mov
pop
mov
data16
shrl
mov
mov
ss
jecxz
mov
aas
add
shrb
fs
pop
dec
dec
int
cli
ret
cs
cmp
mov
loopne
out
inc
adc
lods
xchg
jge
ret
into
push
jmp
data16
cmp
fcmovbe
sbb
nop
int3
popa
ret
jle
in
jnp
iret
xor
fisttpll
lret
xchg
push
out
cs
add
aam
or
ljmp
jbe
or
add
sub
fwait
or
orb
pop
dec
push
in
cmpsb
sub
fcmovbe
outsb
test
push
xchg
jl
arpl
nop
dec
sub
xor
test
icebp
mov
imul
stos
rcl
push
adc
js
cmpsb
cmp
xchg
fdiv
jmp
loop
rcrb
add
and
insl
arpl
lahf
push
in
loopne
jns
dec
stos
in
mov
or
scas
inc
andb
and
jge
xor
mov
sahf
call
shlb
dec
lret
adcl
jne
push
mov
imul
push
xchg
sarb
and
sub
adc
push
inc
xor
jp
mov
jecxz,pn
negl
fildll
xchg
xchg
mov
xchg
in
add
aas
pop
mov
or
insl
pushf
push
aaa
adc
push
add
lds
mov
sbb
adc
xor
pop
pop
adc
sarl
out
js
ret
fidivrs
fptan
mov
pop
out
xchg
mov
mov
jle
cmpsl
mov
call
ficoms
cmc
mov
pop
add
les
xor
pop
jbe
xor
out
out
pop
and
or
pop
xor
sub
test
xor
loop
jge
cmp
in
add
lcall
sarl
add
mov
fdivrl
ja
jno
push
xor
and
cmp
sbb
or
je
fisubl
push
push
sub
pop
fdivp
jbe
add
lcall
punpckldq
outsb
xchg
xor
inc
jle
sub
ljmp
push
or
es
push
test
xlat
orl
lods
cmp
adc
cmp
cmpsl
mov
xrelease
or
adc
pop
pop
pop
sbb
jne
mov
add
mov
mov
xlat
mov
pop
mov
pop
sbb
mov
outsb
notb
xchg
and
lahf
cmpsl
test
xchg
cli
loopne
add
xor
rorb
pop
xor
xor
mov
daa
pusha
sub
test
jae
adc
rclb
xchg
mov
hlt
push
and
scas
push
aaa
idivl
xchg
mov
jno,pt
cmp
stos
sbb
icebp
jne
sbb
pop
adc
jg
sub
push
mov
cmp
sub
pusha
shrb
inc
xor
push
push
sub
adc
jne
insb
lods
movsb
lahf
sarl
cmp
sbb
je
sub
flds
out
cwtl
pop
test
add
push
mov
loope
sub
dec
es
hlt
mov
repz
jbe
jp
lea
cmpsb
cmp
fildl
pop
adc
inc
cmpsb
mov
adc
je
push
xchg
push
imul
add
outsb
push
imul
pop
out
cmpsl
xchg
outsl
push
pusha
cmp
mov
dec
je
jno
enter
scas
adcb
int3
pop
out
pushf
inc
xchg
out
cld
outsb
fnsave
aaa
stos
pop
jbe
xor
add
mov
iret
xor
mov
movsb
aam
in
popf
cmp
or
int
aam
jns
push
packuswb
sarl
inc
xchg
mov
lahf
loop
dec
sub
mov
cmp
push
rcll
cmpl
or
mov
rcrl
repz
pop
ficomps
out
xor
into
iret
push
xchg
in
loop
sbb
call
dec
xlat
sub
les
shrl
negb
mov
push
xchg
jmp
pxor
stc
subb
push
jae
jnp
shl
mov
push
mov
int3
imul
mov
push
in
jne
cmc
shrl
push
movsl
mov
rorb
lahf
inc
add
or
cs
cmpsb
sub
or
and
cmp
fildl
adc
lods
push
ret
lds
cmp
mov
inc
call
cld
lahf
test
inc
xor
cmp
aad
pop
mov
test
mov
add
arpl
outsb
in
std
imul
dec
pop
mov
xchg
fisttps
add
xor
xchg
push
adc
xchg
adc
push
sbb
fwait
sti
dec
pop
jl
and
mov
pop
ja
jb
mov
icebp
and
mov
ret
stc
nop
cmp
mov
or
jnp
jns
loop
add
or
cmp
sub
push
sub
in
xor
xchg
jno
pop
mov
dec
hlt
dec
cmp
adc
addr16
gs
fidivrl
in
popl
dec
out
mov
add
inc
push
xor
push
pop
out
xchg
cwtl
mov
pop
cmp
xchg
jle
inc
lods
push
or
xchg
std
xor
mov
adc
sbb
ret
loope
xor
cmp
std
ss
adc
movsl
ret
outsb
arpl
pop
adc
lret
mov
aaa
stos
popf
lahf
push
in
sbb
sub
repz
cld
and
sbbb
fwait
rol
out
mov
dec
addr16
test
jge
popl
mov
arpl
outsl
add
dec
out
add
jb
icebp
adc
pushf
cmp
jnp
or
in
jg
xor
movsl
push
pusha
mov
xchg
xor
xchg
call
or
inc
mov
pushf
mov
xchg
orb
sub
mov
mov
push
imul
xorb
call
xchg
enter
push
push
xchg
out
lods
iret
rcll
adc
dec
mov
add
loopne
mov
cmp
dec
ret
cmc
dec
inc
and
repz
addr16
pushf
inc
push
aam
cmp
lret
sahf
pop
mov
cmp
push
in
push
push
mov
outsl
subl
add
rorl
mov
dec
pop
insb
sub
into
fxtract
incl
xchg
lods
mov
inc
aas
mov
xor
sbb
adcb
out
andl
sbb
sahf
xor
mov
repnz
and
roll
xchg
inc
jg
push
mov
add
pop
or
jmp
sub
or
out
or
adc
cmp
pop
ja
inc
in
jae
or
xlat
sti
sbb
xlat
and
jp
ljmp
jns
addr16
pop
inc
sbb
ljmp
ljmp
inc
xchg
jno
lods
fs
int
jg
rolb
enter
xor
cmp
fsubl
mov
jg
jb
adc
bound
adc
in
iret
pop
sub
mov
mov
lods
inc
or
push
fnstcw
std
or
adcl
jne
sarb
test
sub
xlat
repnz
sahf
xchg
sub
dec
pop
mov
add
pop
jb
pop
xchg
jns
sarl
ss
cmpsb
ljmp
into
add
jg
adc
push
fisttpll
bound
push
inc
movsb
sub
sbb
call
and
test
hlt
lea
lds
inc
fistpl
sti
mov
and
rcr
popl
cmpsb
xchg
iret
aad
pushf
lcall
test
or
push
jns
xor
xchg
dec
jns
outsb
loope
cmpsl
in
pop
lods
andb
addr16
stc
sti
orb
dec
push
xchg
sti
vmread
xchg
roll
hlt
adc
push
ljmp
jno
or
and
sbb
ds
div
cmp
arpl
popa
out
add
jbe
adc
cltd
xor
cwtl
inc
push
jmp
push
scas
pusha
insb
enter
ss
mov
mov
adc
aaa
dec
inc
jle
pop
mov
mov
imul
mov
or
xchg
stos
mov
fdivp
dec
test
ffreep
adc
push
adc
jb
sub
popf
mov
cwtl
pop
cmp
push
jmp
sub
cli
sbb
enter
inc
data16
inc
fildl
sub
aam
stc
xchg
jne
jb
xorb
rcr
int3
scas
inc
cld
sbb
stos
enter
popf
rolb
pushf
mov
lret
sbb
cmp
jp
movsb
xchg
jbe
popa
xchg
cmp
mov
cmp
jne
mov
lods
inc
push
xchg
mov
imul
stc
or
jle
ficomps
sbb
xchg
fmuls
mov
sar
pop
in
sti
cltd
dec
pop
dec
pop
add
data16
insb
adc
mov
jp
sbb
dec
incw
cmp
arpl
cmp
cmpsl
sub
fidivrl
lods
das
test
xor
subl
jno
sahf
arpl
mov
ds
add
jb
or
or
ftst
fnstsw
shll
dec
fisttps
les
mov
sub
inc
fsubs
dec
or
cmpsb
add
int3
inc
popw
jle
push
inc
fdiv
in
sti
jmp
es
sub
sahf
dec
xor
mov
in
jne
ds
add
add
ret
call
or
xchg
pop
xchg
sub
sub
dec
pop
jne
sub
sub
sub
pop
sbb
and
js
rsm
out
stos
xchg
add
cmpsb
push
jl
je
push
adc
hlt
xchg
sub
out
in
pusha
int3
into
mov
cmp
pop
jle
pushf
xor
fucomp
imul
leave
out
xlat
or
out
leave
movsl
ds
xchg
inc
fidivrl
int3
fdiv
inc
popa
jnp
push
mov
nop
xchg
ret
nop
mov
testb
daa
cs
inc
sub
cmp
rep
fcmovbe
fnsave
test
aad
and
mov
or
push
jns
negb
lods
js
cmpb
add
xchg
sub
or
sbb
mov
andb
push
rcrb
inc
pop
mov
mov
sahf
dec
mov
pop
cmp
mov
pop
sub
loope
ja
mov
lret
sar
jbe
fistpl
decl
arpl
call
ljmp
mov
mov
push
montmul
cmpsb
cmpb
or
ja
loop
leave
ss
repz
xlat
addr16
mov
mov
xor
sub
mov
lahf
push
popf
rorb
pop
jp
and
fs
movsl
lret
mov
cmpb
xchg
stc
jns
pop
sahf
lds
add
mov
ret
fldcw
fldl
cmp
jmp
sbb
ret
out
clc
mov
jg
jnp
and
sbb
pusha
adc
sahf
mov
push
jae
push
xchg
or
push
out
mov
bnd
lret
outsl
out
lds
in
adc
aas
jne
xor
push
sahf
fwait
adcl
loop
pushf
mov
mov
xchg
pop
and
sti
data16
mov
insb
idivl
scas
pop
aaa
ret
pop
sahf
aaa
pop
mov
and
xchg
add
dec
ror
inc
outsl
loop
imul
xlat
jge
lcall
addr16
pop
outsl
cs
aam
imul
inc
aam
jb
pop
xchg
fs
sub
xor
repnz
inc
stos
xchg
mov
fs
das
xchg
jl
sti
fdivs
jle
adc
outsb
jbe
int
dec
mov
xlat
add
sub
and
push
mov
ja
fdivl
sub
cmpsb
cmp
sub
dec
pop
and
adcb
sub
push
and
outsl
loop
mov
insb
pop
push
mov
icebp
mov
jl
adc
decb
mov
pop
mov
add
int3
stos
add
cltd
mov
cs
outsl
xchg
add
add
movsl
icebp
pop
sbb
mov
repnz
dec
out
inc
call
and
aaa
fnstsw
jbe
jg
sub
fnstenv
shrl
insb
mov
decl
push
mov
arpl
iret
fidivrl
jg
mov
sbb
test
mov
xor
bound
lea
jp
add
out
gs
popa
pop
stos
inc
push
addr16
lahf
test
cmp
xchg
js
add
dec
mov
pop
and
xchg
cmpsl
cwtl
xor
cmp
dec
idivl
imul
push
imul
xor
mov
push
mov
ret
cmpsb
jmp
and
mov
xor
xchg
out
jns
hlt
or
mov
scas
aaa
popa
je
pop
mov
lods
cld
ror
ret
les
addr16
dec
push
arpl
xor
cmp
test
add
mov
push
and
jmp
or
pop
scas
jle
add
add
pop
ret
lret
pop
call
jg
icebp
adc
dec
push
lcall
shlb
int3
fldcw
xchg
sbb
sub
jp
push
data16
cmpsl
leave
stc
aas
push
dec
das
addr16
icebp
adc
fstps
fisubrs
mov
jbe
fwait
daa
pop
mov
js,pn
xchg
jle
pop
scas
insl
or
repnz
cwtl
lock
dec
mov
scas
aad
shll
sbb
decb
ja
lods
mov
aam
iret
gs
stc
iret
data16
test
arpl
stc
leave
orb
sbb
pop
adc
xor
or
cs
xchg
dec
lds
add
xchg
inc
stos
push
popf
lcall
jnp
imul
iret
push
sub
sti
sbb
fildl
mov
test
xor
mov
adc
xchg
adc
fwait
imul
scas
inc
xor
data16
cmp
fstpt
cwtl
shlb
das
mov
std
or
scas
or
and
dec
popa
in
sub
icebp
fisubrl
xchg
cmp
or
fiaddl
roll
dec
mov
and
ss
iret
addr16
adc
stos
and
add
mov
popa
push
pop
mov
fldenv
jbe
hlt
mov
aad
in
sbb
add
adc
or
push
andl
xor
popa
push
sbb
dec
xchg
push
dec
dec
out
out
leave
xchg
pop
lret
ret
dec
xchg
lods
sbb
repnz
lods
in
xchg
pop
xlat
xchg
ljmp
addr16
loope
sub
shr
data16
mov
enter
pop
insb
dec
cmc
mov
mov
or
jb
sub
inc
push
scas
mov
xor
stos
jbe
or
jno
in
mov
mov
popf
push
push
inc
pop
push
fistpl
lods
jo
call
movsb
andl
and
out
xlat
xchg
in
jl
mov
jmp
stos
mov
lret
imul
rclb
es
xor
xchg
insb
push
mov
pop
push
mov
jbe
subb
stos
scas
inc
sub
push
xchg
xor
sbb
mov
imul
xchg
popa
and
mov
xchg
ss
jae
inc
ret
sti
xchg
lds
push
mov
mov
test
sub
fsubr
push
es
mov
fiaddl
bound
lea
les
inc
xor
xchg
and
int
inc
rorl
add
mov
hlt
cmp
ljmp
push
je
pop
dec
bound
scas
out
sub
cmp
out
sbb
lret
out
mov
test
in
pushf
mov
xchg
mov
pusha
add
sti
jp
jbe
test
fmul
fwait
andb
inc
inc
and
int3
test
gs
mov
cmpsb
lods
test
lret
cli
lea
stos
fyl2xp1
das
pop
mov
shr
and
inc
stos
cmpsb
nop
daa
fmul
pop
ficompl
mov
fstl
adc
lret
inc
and
pop
mov
pushf
and
in
mov
dec
jecxz
jne
xchg
cmp
in
xor
js
mov
inc
lahf
dec
das
inc
fs
out
sub
mov
flds
fists
scas
fdivrs
mov
lcall
pop
cmp
gs
inc
mov
pop
jle
lods
es
mov
adc
mov
imul
sahf
jl
mov
jbe
jb
call
cmp
mov
sub
js
cwtl
test
test
add
sbb
sahf
or
inc
movsb
or
pusha
outsl
push
stos
adc
adc
scas
jecxz
adc
fs
hlt
and
popf
fucomp
mov
mov
jl
repnz
int3
jp
or
lcall
lret
cmp
sbb
adc
insl
stos
sub
cmp
movaps
stos
cli
std
dec
movsl
mov
call
inc
push
addr16
push
icebp
aaa
cmp
and
cmc
sub
inc
ret
inc
jmp
push
in
inc
fists
push
stc
jmp
push
ja
lcall
mov
and
mov
push
ret
jno
mov
dec
jnp
imul
pop
pop
xlat
outsl
aam
or
and
pop
add
or
jecxz
sub
mov
mov
dec
cmp
jmp
mov
cmc
or
or
mov
test
cmpsl
add
mov
les
add
add
inc
popa
mov
pop
insb
or
sbb
add
mov
xchg
jns
mov
in
scas
jmp
dec
into
jae
sarb
sub
loope
call
cs
inc
fisttpll
outsl
jne
loope
inc
mov
out
xor
adc
and
subb
push
movsb
cmp
fisttpl
lock
test
mov
push
popl
or
imul
sub
pusha
jne
pop
dec
notb
movsb
xchg
mov
pop
add
jbe
mov
lret
mov
test
mov
sbb
dec
mov
mov
push
std
sbb
sub
into
cmp
pushl
shrb
add
outsb
cwtl
pusha
out
add
rcrl
lret
std
and
xor
lods
inc
ljmp
xor
fcmovu
aaa
test
in
and
push
xchg
call
push
lea
mov
sbb
test
fidivs
or
shll
out
push
mov
mov
pop
mov
dec
stos
mov
cld
cwtl
subl
addb
not
repz
cmpl
push
cld
sarb
pop
es
mov
add
rcrl
inc
pop
pushf
and
aaa
shrb
jecxz
mov
cmpsl
leave
insl
push
mov
or
mov
daa
inc
shlb
mov
cmp
pop
or
add
xor
aad
push
push
sub
lods
jo
fdivrp
pop
das
addb
and
gs
bound
test
cmp
push
out
mov
mov
xchg
xor
ljmp
aam
ss
jb
sbb
fldcw
data16
pop
adc
push
pop
jg
fsubl
or
cmpsl
inc
fstp
rcrb
pop
addr16
cmc
mov
cmpsb
and
stos
sub
mov
sahf
and
mov
cmp
rol
mov
jo
adc
ds
add
and
mov
mov
shlb
arpl
int3
mov
lcall
lret
and
lock
sbb
push
popa
or
sbb
call
add
xchg
sub
testl
daa
sub
pusha
lock
mov
add
lock
aad
mov
jp
mov
push
and
push
add
popa
cmp
xor
test
loope
push
insb
jecxz
and
mov
incb
pop
sbb
inc
sbb
fucompp
stos
add
cli
inc
lods
or
or
and
cmp
dec
arpl
xor
insb
flds
cld
cmp
scas
shll
rcr
pop
push
bound
xchg
js
lds
inc
dec
lahf
sti
ja
lods
sub
dec
adc
cmp
inc
cmc
andb
add
pop
adc
mov
sti
inc
lods
mov
jne
inc
sbb
mov
push
ror
aaa
push
sbb
add
pop
in
cs
into
pop
imul
mov
jo
cmpsb
sub
or
pop
cwtl
mov
mov
in
xchg
inc
adc
pop
mov
jcxz
push
xchg
mov
gs
pop
xorl
jbe
jl
sub
xchg
mov
mov
pop
loope
pop
pop
jg
imul
sarl
clc
ljmp
call
jp
cmpsb
cmp
xchg
mov
and
lods
je
js
xor
mov
sbb
xchg
mov
lcall
sbb
mov
adc
shlb
fcmovu
scas
sbb
ds
jbe
insb
loop
cmpsl
xchg
test
loop
mov
loopne
dec
call
loopne
pop
sahf
sbb
jae
mov
jge
add
inc
mov
mov
aas
loop
and
mov
das
in
pop
roll
sub
loop
test
inc
push
stos
cld
js
in
cmp
fwait
in
xchg
icebp
push
cmp
les
idivl
mov
lret
iret
mov
pushf
sub
push
mov
daa
cld
and
das
or
imul
in
in
push
xlat
inc
mov
mov
push
gs
push
sub
jns
jmp
hlt
push
bound
mov
outsb
stos
mov
mov
divb
roll
inc
push
sub
dec
ja
push
test
inc
fcoms
or
xchg
dec
pop
sbb
mov
xchg
pop
andb
loop
push
fwait
imul
hlt
sub
jmp
ja
mov
fisubrs
cli
adc
push
dec
dec
mov
pop
xor
mov
mov
push
add
mov
xor
scas
aaa
xlat
fdivrs
mov
call
xor
xchg
jg
jp
mov
fyl2x
out
fisttpll
push
test
and
mov
dec
enter
mov
xchg
inc
pop
scas
adc
inc
dec
ljmp
xor
xor
lods
pop
xor
xchg
jl
inc
jge
cmp
movsl
stos
inc
xlat
xchg
ret
shl
clc
scas
xchg
jecxz
in
insb
or
mov
subb
jno
test
add
rol
xchg
pop
insb
cmpsb
popf
xor
lahf
fiadds
add
add
ret
xchg
lds
dec
imul
jg
jecxz
sbb
mov
ss
imul
add
and
fs
jae
loope
cmp
cmp
sbb
hlt
push
push
push
movsb
repnz
sbb
jl
mov
addr16
out
add
insl
jne
data16
outsl
orl
and
shll
flds
xchg
xlat
aam
sbb
insb
jno
or
idivb
fwait
scas
inc
out
add
int3
leave
bound
scas
xchg
call
mov
sbb
lahf
popa
fadds
mov
sahf
and
cwtl
in
pushf
mov
push
jne
fstpt
movsl
sbb
test
pop
mov
or
pusha
aam
and
fsubr
bound
sub
in
movsb
sub
fdivs
test
out
mov
pop
push
fistpl
sub
jnp
mov
in
popf
or
loop
mov
sub
hlt
rorb
jle
es
xchg
mov
sti
push
xor
push
pop
pushf
xchg
mov
fbld
andb
pop
aam
add
jge
int3
pop
inc
pop
xchg
stos
mov
mov
aad
cs
insl
push
pop
cmp
loopne
pop
mov
mov
je
cmpsb
or
push
jle
xchg
mov
mov
lret
push
aaa
or
les
mov
or
ds
and
add
push
shrl
das
aam
sti
arpl
loop
pop
jl
mov
jne
mov
mov
imul
outsb
inc
inc
ret
loopne
aaa
rcll
xor
in
mov
pop
adc
jmp
in
filds
jl
in
test
sub
xor
push
insl
or
sbbl
rcl
or
subl
sbb
jne
fbstp
movsb
mov
shll
and
cli
push
lret
inc
xchg
stos
push
in
fdivp
mov
jb
cmp
cmp
pop
push
push
add
into
popa
loop
mov
sub
dec
popa
sub
cmpsl
mov
jge
jg
mov
fistl
loop
xchg
insb
mov
and
ja
repz
jle
fwait
cmpsl
xchg
sub
hlt
pusha
lret
in
sbbb
je
imul
rcl
cmp
test
test
lds
rorb
mov
dec
mov
or
ret
xlat
repz
movsb
xor
test
in
lock
cs
dec
and
les
xchg
dec
lcall
add
fsubs
xor
insl
fiaddl
ret
fdivl
pop
popa
jne
ss
inc
add
jae
lea
push
xchg
or
mov
mov
daa
or
nop
fcmove
nop
lcall
adc
xchg
cltd
call
popf
hlt
xchg
mov
fwait
std
pop
xchg
xchg
cmp
loop
sub
scas
inc
inc
jle
gs
addl
inc
inc
mov
jb
jae
push
adc
lret
xor
add
push
xchg
pusha
dec
sbb
jbe
fxch
sbb
mov
stc
or
dec
lods
adc
lretw
ss
ror
pop
add
je
sub
lahf
mov
ja
adc
add
jmp
mov
pop
scas
daa
out
aas
imul
out
dec
sbb
scas
sub
jge
xor
or
fs
mov
adc
push
push
xchg
pop
lds
jne
out
mov
in
push
test
imull
push
pop
in
int3
sub
or
pop
push
dec
sub
cltd
inc
jge
jle
or
stos
popf
hlt
pop
testb
or
std
stos
test
adc
mov
mov
jmp
sarb
push
push
mov
mov
rorl
imul
cs
pop
xchg
push
xlat
dec
imul
test
clc
nop
ds
insb
jg
or
and
mov
cltd
leave
ja
sbb
fistpll
imul
cmp
loop
add
imul
arpl
repz
sahf
dec
push
dec
in
mov
insb
lods
inc
mov
fwait
test
mov
in
mov
add
mov
cld
add
in
cmpl
pop
dec
pop
pop
ljmp
jno
push
out
xor
punpckldq
leave
inc
cmp
adc
and
pop
push
pop
testb
add
rcrl
es
jo
push
mov
or
shr
cmpl
or
mov
stos
push
mov
lretw
xchg
push
mov
popa
add
pop
movsl
in
push
aas
xchg
sub
jg
out
dec
pop
xchg
mov
cmp
push
or
iret
daa
in
adcl
or
dec
mov
jo
les
cmp
fildll
pop
xor
jns
xor
fwait
sub
xchg
adc
or
add
cwtl
push
pusha
sbbl
xor
push
add
sub
sub
cmp
out
fs
jb
les
jecxz
inc
cs
dec
push
hlt
les
notb
jbe
mov
lahf
cmp
inc
push
sub
or
aam
test
mov
or
in
cvtpi2pd
jl
pop
cmp
mov
add
dec
pop
cmp
sbb
lahf
pop
adc
int3
and
call
xchg
jbe
jb
dec
popf
push
fcomip
mov
and
sbb
xor
popa
mov
jnp
daa
mov
sarl
pop
je
in
add
pushf
sub
or
push
ds
mov
xor
cli
cwtl
fisubl
addr16
lods
inc
xor
mov
bound
and
rol
int3
in
mov
into
xor
scas
shrl
push
shll
jns
jno
fistl
jg
inc
ja
xchg
shrb
xchg
xchg
loop
adc
mov
sub
pop
shlb
pop
dec
mov
mov
into
jp
jno
sbb
mov
ret
adc
pop
out
imul
fwait
cmpsl
rcr
sub
adc
incl
push
cmpsb
pop
mov
jg
mov
lea
sub
gs
ja
in
adc
mov
or
ret
sub
dec
shrl
or
subl
push
rcrl
xor
mov
pop
sub
pop
add
pop
sahf
outsb
and
lock
in
inc
lock
out
test
inc
mov
xchg
popf
xchg
xor
or
sarl
cmp
les
cmp
mov
adc
das
mov
popa
shlb
sub
pop
mov
repz
aaa
fwait
sub
cmc
lahf
jmp
inc
push
gs
dec
dec
test
adc
xchg
in
and
cmp
mov
mov
sub
pop
inc
pushf
cli
out
mov
mov
and
sbb
stc
lock
xor
xchg
mov
or
adc
arpl
pop
iret
mov
adc
enter
jo
xor
lock
mov
fimuls
adcb
adc
or
jno
scas
fisubrs
sbb
movsl
dec
lret
scas
push
sub
outsb
xor
into
inc
test
sbb
stos
lds
sti
repnz
xchg
mov
sahf
push
pop
ret
mov
addr16
cs
mov
inc
or
mov
or
mov
pop
inc
pop
inc
cwtl
cmp
and
pop
movsb
std
pop
sbb
push
mov
inc
lretw
cld
xchg
inc
and
adc
xor
mov
outsl
pop
jge
pop
dec
sahf
push
nop
xchg
sarb
push
aas
notb
inc
sub
test
das
push
cmp
int
fidivs
and
adc
divl
fisubrl
pushf
pop
mov
pop
daa
or
mov
jecxz
lds
rcl
push
mov
daa
fbstp
sbb
sbb
pop
cmp
inc
xchg
sahf
fdiv
adc
rcll
out
frstor
mov
sub
std
adc
pop
pop
lret
mov
jmp
mov
mov
xchg
sub
addr16
rorb
xchg
notl
loopne
sahf
lock
pop
pop
jne
xor
or
in
mov
repnz
dec
add
leave
gs
or
arpl
cli
es
into
loop
rcll
mov
push
add
push
jno
imul
fidivl
and
subl
mov
dec
sbb
clc
movsb
mov
jl
imul
adc
loop
ljmp
lock
clc
cld
mov
sub
push
stc
mov
mov
mov
jne
mov
inc
scas
out
into
call
and
sbb
xor
es
pop
dec
test
sahf
xor
push
lock
cmpsb
push
lods
xlat
adc
stos
movd
mov
lahf
push
or
mov
sbb
imul
test
mov
adc
ss
shr
repnz
fisubs
dec
fadds
xchg
dec
test
inc
out
bound
popa
lods
enter
pop
fs
xchg
push
and
sub
inc
aaa
in
add
sbb
and
repz
test
adc
mov
iret
or
and
rclw
insb
jg
sti
iret
sbb
inc
arpl
dec
movsb
xchg
mov
or
imul
pop
dec
insl
jle
stos
nop
xchg
jmp
test
iret
cmp
in
cwtl
sbb
mov
and
rorb
addr16
mov
add
scas
mov
bound
mov
and
popf
ficoms
lret
cmpsl
sbb
cwtl
mov
dec
stos
dec
out
ljmp
push
cmpsb
and
or
test
pop
mov
notb
cmp
fxch
movsl
mov
cmp
push
loop
andb
adc
jo
xchg
scas
mov
cmpsl
push
mov
jno
sub
adc
aas
jo
test
push
inc
inc
in
jno
lock
pusha
fsubrs
push
xor
or
xchg
xchg
arpl
lret
dec
jb
ds
mov
lcall
and
sbb
sbb
lea
enter
and
jbe
insb
daa
fidivrs
pusha
inc
enter
leave
int
gs
pop
xchg
mov
bound
test
or
movsl
lds
aad
pop
push
imul
iret
mov
ficoms
test
pop
xor
xchg
or
adc
adc
xor
int
call
jo
inc
out
mov
xlat
add
lods
lods
mov
jno
push
mov
xchg
pushf
sbb
mov
mov
dec
insl
stc
stos
mov
jmp
sub
int
cmp
add
xor
xor
inc
sub
sbb
mov
leavew
sub
in
sub
clc
adc
sub
cmp
stos
mov
lods
imul
dec
adc
sbb
sbb
rorb
sbb
inc
pushf
cmp
insl
clc
push
fisubl
jae
dec
xchg
dec
dec
jl
stos
sbb
fidivl
pop
or
adc
loopne
js
jmp
pop
jge
push
movsb
into
dec
out
lds
adc
push
pop
xchg
lret
les
xor
xor
insb
loop
flds
aad
and
enter
add
js
incb
sahf
push
dec
pop
mov
arpl
jno
aam
ja
out
popa
sbbl
mov
lcall
or
ret
test
dec
loope
xlat
mov
or
dec
xor
lods
out
xchg
inc
int3
jg
jbe
cmp
test
ret
sub
fsub
clc
or
int3
inc
inc
or
push
mov
pop
aaa
xor
gs
mov
pop
repnz
gs
push
nop
push
or
scas
dec
repz
lds
mov
inc
in
push
pop
lret
dec
jmp
pop
sbb
lods
insb
inc
mov
mov
or
mov
popf
pop
mov
std
scas
mov
mov
lock
push
movsl
cmp
or
dec
mov
into
ret
pop
mov
mov
arpl
in
bound
out
ljmp
jmp
movb
test
dec
test
dec
jg
xor
adc
mov
aas
pop
out
loope
dec
push
rorl
fsts
pusha
mov
int3
cmc
roll
adc
enter
and
dec
notl
test
or
fnsave
push
aas
loopne
mov
adc
je
push
mov
lock
fbstp
popf
divl
gs
das
mov
mov
scas
das
shl
js
insl
into
loop
sub
fs
aam
mov
lods
sub
sbb
vpmaxub
movsl
test
aad
fxch
aam
cmp
cmpsb
je
negb
jge,pt
repnz
pop
mov
int3
jl
loopne
mov
hlt
mov
xchg
push
inc
xchg
ss
lods
ja
clc
mov
aad
imul
into
je
pop
xor
cwtl
xor
cli
sub
stc
inc
lea
xor
mov
int
mov
push
dec
jecxz
and
out
lret
add
rcll
test
rorl
in
mov
dec
push
sbb
jl
daa
sub
fwait
aad
icebp
into
enter
shll
pop
loope
sub
pushf
popf
clc
cli
ss
xchg
push
mov
mov
or
push
imul
push
xchg
cmp
fwait
andb
mov
jp
pop
imul
insb
mov
adc
test
push
popa
push
call
and
les
pop
dec
fistps
lahf
lods
test
fs
push
out
rolb
mov
repz
sub
jp
dec
daa
mov
push
mov
add
lds
add
fs
jae
insl
or
inc
inc
in
xchg
add
xor
inc
jecxz
adc
mov
in
sahf
push
dec
daa
jnp
test
or
outsb
ljmp
stc
mov
sbb
test
push
sub
or
push
in
aaa
adc
dec
pop
fmulp
mov
add
repnz
jo
daa
incb
fsubl
in
cmpsl
in
dec
in
popf
sarl
push
fcoml
mov
jl
xchg
es
std
jge
lods
in
or
pop
popl
push
subl
adc
pxor
xchg
sub
insl
mov
jge
test
mov
ljmp
xchg
icebp
mov
cmpsb
pop
push
push
jnp
jns
jp
push
ror
test
mov
xor
sub
cli
popf
sahf
cmc
fcomip
popf
stos
cmp
cli
jne
stos
mov
outsl
add
fsubl
dec
jno
jno
int3
scas
mov
jbe
test
pop
fsubs
fwait
adc
enter
push
int
inc
js
pop
mov
or
sub
pop
pop
ret
nop
jne
push
mov
add
inc
xor
decl
outsb
sbb
jne
push
daa
movsb
shlb
or
aad
push
sub
push
jo
sti
push
pop
test
daa
and
loope
pop
enter
andl
fiaddl
mov
sbb
sub
push
cld
xchg
aaa
sub
in
shl
loop
fdivrl
fwait
es
mov
in
xorb
xchg
mov
jnp
shll
pop
out
cmp
mov
add
cmp
andb
popa
jns
fwait
xchg
dec
and
leave
jecxz
nop
dec
push
dec
mov
jns
pop
hlt
andb
cmp
movsb
add
and
shll
cld
aas
push
cs
jle
push
sub
mov
call
repz
in
daa
or
lods
inc
fsqrt
dec
jecxz
mov
sub
mov
adcl
pusha
fidivl
mov
test
rcrb
iret
inc
in
mov
call
aam
addb
fcompl
or
pop
ja,pt
fcoml
repnz
add
mov
or
outsl
push
cmc
push
add
loopne
xor
mov
jbe
daa
mov
cmpsb
pop
lods
ret
jecxz
pmaxsw
scas
jb
or
inc
xchg
in
nop
lahf
xor
nop
repnz
jno
push
aam
cs
add
cli
inc
mov
insb
notl
ret
sbb
sbb
inc
xchg
int3
inc
xlat
aas
out
cmpsb
push
xor
pop
movsb
adc
cltd
or
test
in
fldenv
push
mov
js
xchg
jg
popf
jbe
xchg
push
jge
inc
fsave
push
inc
aam
in
inc
call
lock
and
pop
hlt
pusha
std
push
sahf
fldl2e
inc
negb
adcl
xor
out
push
mov
lret
jmp
mov
or
je
xor
push
and
mov
adc
addb
sbb
mov
gs
cmpsb
stos
imul
fldcw
inc
popf
pop
push
xor
loope
test
jge
sub
imul
mov
xor
test
xchg
addr16
jne
jno
insb
in
pop
mov
jbe
aam
movsl
mov
or
mov
cmp
repnz
jge
fwait
in
mov
push
pop
ja
or
or
xchg
sub
mov
mov
sub
pushl
dec
pop
fstl
or
in
or
iret
xchg
mov
cmc
xlat
loop
push
cmp
or
mov
icebp
xchg
in
inc
push
lds
xchg
gs
daa
add
or
std
xor
jecxz
xchg
sub
add
cs
push
pop
int
fs
mov
push
imul
outsl
inc
ret
or
push
jns
repz
pop
and
xchg
pop
mov
in
mov
xor
dec
stos
data16
pushf
stos
fcmovbe
push
aaa
pop
fists
incl
repz
gs
neg
push
jp
cmp
popf
cld
rcrb
xlat
icebp
push
insb
mov
adc
inc
pop
push
jle
dec
fs
add
or
lahf
jno
or
jge
jae
imul
sbb
int3
add
scas
xor
filds
jno
jnp
imul
mov
stos
xor
mov
cmpsb
xor
lret
js
mov
push
test
xchg
sub
xor
cmc
fwait
mov
and
xor
je
sub
scas
out
add
pop
cmp
mov
popa
inc
or
cmp
add
xchg
leave
mov
add
jbe
enter
jmp
xlat
xchg
push
add
das
call
dec
aam
jmp
movsb
shll
loop
loop
js
fwait
es
imul
mov
xchg
cmp
jo
inc
out
in
jmp
or
dec
cmpsb
daa
mov
outsb
test
pop
fimull
fwait
sub
push
xor
hlt
mov
stos
add
xor
cs
mov
dec
leave
or
test
cli
xchg
lahf
ljmp
negl
add
mov
mov
mov
lcall
mov
pop
jnp
stos
inc
push
sbb
outsl
fs
scas
test
pop
cmp
mov
repnz
in
xor
xor
fldenv
inc
cwtl
push
pop
in
addr16
sahf
sbb
xchg
outsb
dec
insb
inc
shll
cmp
and
push
sbb
or
xchg
lea
jp
shl
add
add
dec
ds
cwtl
dec
cmp
xchg
insb
jns
sbb
rcrl
and
push
shll
xor
mov
cmpsl
sbb
xor
xor
in
push
mov
mov
lcall
mov
push
lret
scas
fidivl
lock
fisttpll
jmp
imul
sti
es
jecxz
mov
mov
dec
mov
dec
fcom
std
adc
test
ret
adc
mov
mov
call
sbb
push
sarb
inc
int3
mov
gs
mov
int3
ret
jle
in
xchg
mov
imulb
cmp
fdivl
mov
mov
dec
inc
fidivrs
sbb
lcall
sub
dec
mul
adc
cltd
push
into
aas
xchg
xchg
daa
jle
add
mov
mov
dec
shl
pusha
add
and
adc
rol
pop
andl
jp
cmp
xchg
fwait
sbb
mov
jne
push
xor
jge
adc
in
jbe
dec
push
inc
les
jae
jnp
sub
sbb
add
cmc
or
mov
dec
rolb
dec
pop
jno
add
add
cmp
xchg
xor
adc
inc
int
push
jmp
mov
lods
ss
pop
ret
mul
sub
loope
xor
sub
into
xorl
inc
add
inc
pop
xor
cltd
or
jnp
push
xchg
push
cwtl
xor
push
mov
mov
xor
daa
or
out
inc
montmul
cmpsb
cmpb
sub
icebp
pop
lock
popl
lret
ja
int
add
imul
inc
pop
xchg
cmc
loop
add
adc
sbb
add
or
imul
sti
or
mov
pop
subl
sti
xorb
xor
repz
pop
cltd
sbb
or
insb
add
movsb
sti
jbe
jle
and
sbb
dec
jne
add
dec
xchg
subl
int3
push
jno
mov
hlt
inc
pop
push
cmp
jnp
mov
outsb
or
or
outsl
push
or
cmpsl
cmp
imul
adc
push
int
inc
cltd
push
rcrb
mov
pop
scas
sbbl
or
sub
add
dec
mov
sbb
lret
inc
stos
ret
pop
xchg
xchg
nop
daa
add
sbb
adc
das
cmp
sar
lods
mov
add
xchg
je
inc
mov
popa
push
je
aam
push
jno
add
imul
jne
xchg
sub
jb
mov
and
lahf
pop
pop
dec
mov
xchg
sub
out
adc
cmp
sub
loope
popf
add
js
and
ja
xor
test
enter
cmc
inc
sub
mov
dec
inc
adc
pop
popa
inc
xor
xchg
mov
pop
in
jl
lahf
repz
frstor
inc
call
pop
ret
lcall
inc
xchg
sti
rcll
inc
push
and
adc
shr
jmp
shl
sbb
push
and
push
inc
add
mov
inc
rolb
inc
cmpsl
mov
cltd
xchg
enter
mov
xor
xchg
mov
aas
jle
pop
add
inc
fidivrl
push
popa
xor
aaa
adc
lcall
stc
adc
sahf
inc
adc
mov
shl
pop
lea
mov
mov
and
mov
lret
mov
jp
shrb
cmp
das
ds
push
fucomip
dec
xchg
rcrb
adc
fsubs
and
aaa
in
xchg
mov
or
xchg
push
pop
test
jne
mov
or
les
xor
xor
sbb
in
fptan
sub
and
fnstenv
add
inc
andb
scas
mov
or
add
loopne
push
mov
dec
mov
xchg
pop
cltd
pushf
xor
fucom
lahf
push
insb
xchg
out
stos
dec
out
mov
bound
xlat
out
xchg
xchg
add
inc
push
cmp
cltd
pop
xchg
mov
and
or
inc
inc
adc
lahf
jbe
jne
sbb
fs
inc
xor
mov
and
pop
dec
pop
aaa
jno
jbe
cmc
mov
imul
inc
mov
je
push
out
lret
push
pop
adc
dec
dec
xchg
push
shrb
sub
das
pop
data16
lret
and
jbe
movl
adc
jno
or
mov
movsb
lds
cmpsl
add
into
das
ret
js
je
imul
movsb
xchg
dec
add
std
mov
cmpsb
out
sbb
dec
xor
jmp
pop
inc
aaa
sbb
enter
or
xor
pop
out
pushf
in
sub
ret
loope
enter
xchg
sbb
pop
mov
push
and
sbbb
pop
mov
inc
mov
addl
mov
cmp
test
test
dec
xchg
cmp
jae
fisttps
xchg
ss
cli
fs
fsubr
mov
sub
add
adc
shl
int
mov
mov
rcrl
xchg
dec
frstor
loopne
mov
iret
sub
sub
loope
testb
cmpsl
mov
lret
xchg
mov
cld
call
out
shl
mov
mov
cld
bnd
aas
xchg
out
adc
and
nop
xchg
leave
aad
movsl
add
lcall
fldenv
insb
push
mov
rcrb
mov
pop
push
divl
inc
jecxz
inc
jecxz
jb
cmpsw
mov
enter
mov
aad
enter
test
mov
ljmp
lock
and
push
and
out
scas
aas
cmp
pop
push
mov
idivb
jb
and
xor
inc
nop
daa
ja
fwait
lods
sub
fstpl
xor
cltd
dec
incl
orb
scas
and
lock
mov
out
aad
pop
inc
jecxz
mov
xchg
fbld
sti
cltd
jp
out
shlb
cmc
and
fwait
add
sbb
cltd
clc
iret
xchg
pop
cmp
and
cmp
mov
stc
popf
js
jb
sub
movsl
loopne
stc
sub
sub
insb
add
mov
fidivrs
pop
std
rolb
arpl
jbe
and
mov
popa
aam
sbb
ret
aaa
mov
dec
cwtl
xor
fnsave
dec
adc
enter
fimuls
sti
das
mov
jmp
pop
popf
jo
mov
mov
pop
mov
jnp
aad
sbb
add
fimull
jb
pop
in
xchg
insl
call
mov
in
aaa
or
jl
push
mov
xor
dec
in
test
fisttps
or
dec
mov
xchg
sbb
push
cmp
cltd
test
pop
cmp
pop
xchg
sti
jbe
cs
fwait
jno
dec
xchg
mov
repnz
in
mov
xchg
cmp
fs
into
mov
ret
movsb
push
sahf
push
and
xchg
inc
or
pop
lock
jp
data16
bts
adc
and
sub
int
sbb
gs
dec
xchg
xor
adc
xlat
fisubs
pop
imul
lods
fimuls
sbb
mov
in
vpaddw
roll
and
cld
notl
out
call
fnsave
fcoms
mov
rorl
pop
mov
sub
movsb
lea
ret
fimull
es
xor
push
lods
xorl
xor
xor
aaa
outsb
inc
push
test
and
push
lods
lods
xchg
mov
xchg
add
add
xor
subl
pop
jge
mov
push
ja
out
pop
scas
pop
lcall
dec
dec
outsb
add
sbb
mov
mov
popa
int
add
in
add
movsb
cmp
dec
jecxz
jecxz
xchg
in
stc
into
cmpsb
popf
daa
dec
pop
push
mov
xor
popa
xchg
fstpt
out
jae
in
mov
jge
icebp
lock
mov
or
jle
cmp
xor
mov
sbb
or
mov
mov
das
andb
cmp
xlat
mov
sarl
jle
dec
pop
and
mov
std
xchg
and
fwait
push
mov
ja
js
push
das
cmp
mov
cld
lcall
movsl
mov
aaa
int3
inc
fisttpl
xor
out
insb
daa
mov
dec
insl
pop
ds
cmp
cmp
es
aam
nop
and
sub
adc
add
rcll
fwait
cmpsb
push
out
pusha
sbbl
mov
popa
mov
pop
xor
push
sub
lcall
ret
jnp
cmpb
fwait
pop
imul
aas
dec
aad
mov
push
adc
leave
mov
ret
jl
out
inc
dec
inc
or
test
jne
gs
add
push
imul
shrl
xor
mov
jbe
push
data16
adc
push
repnz
pop
mov
decb
push
iret
loope
add
clc
daa
sti
pop
icebp
sub
lods
jns
and
rclb
mov
pusha
xchg
xchg
cmp
into
lcall
xchg
push
test
add
dec
outsb
arpl
pusha
dec
inc
add
mov
push
out
push
fistl
fcomps
leave
and
fsubrl
dec
cmpsb
repz
and
sub
inc
ret
movsl
in
mov
dec
jg
sbb
push
loope
out
incl
sub
xchg
ja
int
mov
repz
xchg
push
mov
sbb
dec
fs
cmpsl
fdecstp
sbb
jp
jne
mov
push
cmpsl
dec
fisttpl
pop
fnstenv
xchg
xor
jnp
scas
mov
pop
in
or
pop
jg
adc
mov
insb
in
xchg
ret
mov
push
in
das
inc
enter
cmp
lds
loop
mov
enter
movsl
stc
insb
cmpsl
ret
xchg
xor
cmp
pusha
ss
mov
adc
jge
enter
inc
loope
mov
push
or
and
sbb
pminub
jne
xchg
pop
push
dec
dec
cs
repnz
mov
xor
lea
sbb
inc
inc
jb
pusha
cmpsb
xchg
repz
push
rol
fdivr
mov
cmpsb
push
enter
call
mov
addr16
rorl
test
loop
push
push
fsubr
inc
add
push
adc
movsb
icebp
pop
outsb
xor
xor
stc
or
xchg
fs
dec
push
out
add
mov
inc
mov
test
and
cmp
sub
adc
pop
sbb
test
data16
add
mov
inc
push
lods
mov
aaa
push
adc
adc
jnp
xchg
imul
lds
mov
bound
shrb
push
xchg
ja
push
lock
xor
pop
cmp
mov
push
sbbl
inc
inc
xorl
mov
xchg
push
cmp
push
insl
gs
pop
pop
loope
add
sub
stos
shl
pop
lret
mov
sti
ret
sbb
push
les
popa
push
cli
clc
dec
insb
push
in
adcl
xchg
sbb
or
aaa
iret
lret
repz
cmp
xlat
ror
mov
xchg
add
dec
xchg
nop
mov
pop
sbb
aam
jl
lods
mov
sbb
call
inc
scas
subl
daa
test
add
call
adc
or
push
mov
jae
xchg
xchg
or
mov
xlat
push
sub
cmpsl
pop
pop
in
pop
push
vpmaddwd
sahf
mov
add
and
and
xchg
jp
xchg
daa
mov
sbb
shrl
popf
cmc
jle
scas
mov
push
push
ja
cmp
and
or
out
scas
push
lock
arpl
in
daa
lcall
sub
clc
stos
ljmp
imul
add
mov
jl
adc
xor
pop
xchg
fwait
popa
jne
xchg
cld
pop
or
fwait
and
inc
jne
sub
adc
call
addr16
pop
jmp
jge,pn
xlat
in
or
mov
fcomp
movb
dec
test
xchg
inc
or
lcall
icebp
xor
cwtl
lds
in
shrb
rcl
sbb
test
out
in
dec
dec
push
jle
insb
lcall
and
je
or
loope
shr
insb
mov
push
orb
jne
mov
cmp
push
adcb
jg
sbb
fdivl
rcrl
and
inc
outsl
mov
sbb
adc
decl
push
mov
in
mov
imul
lock
subb
sti
repz
adc
ret
stos
call
dec
inc
push
sbb
pop
add
sbb
push
mov
cmp
pop
pop
and
or
cmp
imull
or
sub
cwtl
pop
push
cmpsb
push
andb
and
dec
or
lret
testb
jne
js
cltd
xchg
insl
fsubrs
mov
mov
ljmp
out
xchg
nop
adc
add
or
icebp
cwtl
data16
adc
mov
popf
and
cmpsl
ljmp
fnstcw
mov
arpl
ja
xor
lods
adc
add
jne
cmpsl
aas
push
std
shlb
rcl
enter
jecxz
push
push
mov
stos
movsb
hlt
mov
jne
and
popf
cmpsb
out
hlt
imul
cmpsl
sub
pop
fistps
xor
push
add
mov
sar
xchg
adcl
push
pop
push
xor
out
mov
xchg
xorl
imul
ja
mov
or
ja
lods
mov
imul
je
repnz
sbb
adc
cmp
inc
fisubrs
pop
mov
pushw
push
xchg
and
mov
sti
lret
out
or
in
mov
add
bound
mov
sbb
call
jnp
popf
std
sbb
es
mov
popf
cmpsb
out
xor
adc
insb
cltd
lahf
icebp
enter
sub
push
xor
push
lds
out
movntq
cmpsb
pop
stc
enter
outsb
call
or
xorb
push
inc
cwtl
repnz
mov
out
cmpsl
inc
mov
xor
dec
cmp
push
sub
adc
push
jno
rorl
mov
mov
leave
xchg
sub
fs
mov
xor
test
xchg
lods
xor
sbb
je
and
push
sub
push
addr16
aad
cmp
leave
sub
jle
fsubrl
jg
jne
or
mov
test
or
lcall
xchg
fdivrl
add
in
adcl
sub
sbb
loope
mov
and
insb
lret
cmp
push
fnstenv
faddl
pop
lcall
mov
rcrl
jle
test
mov
fldcw
inc
call
sbb
mov
mov
and
sbb
inc
outsb
outsb
iret
lahf
and
jg
stos
mov
pusha
lret
popf
nop
fcomps
and
ficompl
ja
xor
decb
inc
inc
aam
pop
les
daa
jns
test
sahf
ss
mov
popl
cltd
jb
in
cli
sbb
fidivs
push
sub
inc
adc
add
jl
sub
add
mov
sarl
cmpsl
loop
fnstcw
cmp
sub
or
push
mov
adc
sbb
push
gs
fldenv
mov
and
sbb
std
sbb
ss
mov
leave
js
ds
ljmp
shlb
dec
lock
ret
stos
xor
rcrb
mov
cltd
imul
or
ret
adc
fmull
xchg
mov
adcl
mov
and
xchg
adc
pop
adc
pushf
fsubl
jns
loop
sbb
sub
pop
jne
insb
xchg
js
add
dec
in
jg
sarl
cmpsb
mov
adc
lcall
jp
xchg
sub
sub
insb
std
pop
lret
mov
rolb
sbb
rol
jg
sub
insb
pusha
jns
shll
xor
fsubp
movsl
mov
das
and
or
fwait
sti
xchg
int3
sbb
mov
popf
sub
aad
ret
enter
inc
add
xchg
adc
cmp
xor
hlt
mov
mov
gs
popl
in
push
push
or
sub
leave
xchg
add
or
jne
arpl
fstl
lds
jnp
jecxz
mov
shl
cltd
inc
pushf
inc
adc
pop
jo
movl
loopne
jge
lcall
add
shlb
cmp
sub
lret
das
test
dec
ljmp
popa
sbb
pusha
inc
les
movsb
mov
lea
dec
push
daa
or
pop
in
cmp
mov
jmp
add
repz
fwait
inc
cmp
pop
or
out
jne
fucomip
cmp
ja
mov
insb
outsb
jle
icebp
dec
mov
test
mov
loopne
xor
pop
ret
sbb
jl
adc
in
pop
xor
cmp
push
movsl
cmp
xor
imul
lock
mov
shlb
dec
loope
cmpl
adc
sbb
jns
fs
pop
cmp
orl
push
popf
and
and
in
adc
rorb
adc
lods
inc
or
mov
jb
xchg
pop
sbbb
sub
ja
adc
xor
jp
pop
aaa
xor
push
mov
inc
outsb
repnz
mov
movsd
and
dec
push
movsl
jge
mov
xchg
adc
sbb
xchg
adc
jecxz
xlat
xor
call
push
or
insb
mov
pop
jne
jne
cmp
add
mov
push
stos
adc
ror
push
aam
cmpsb
loopne
mov
jnp
movsb
jnp
std
cmc
sbb
add
je
call
pop
aam
xchg
sti
add
jns
divl
dec
pop
ret
cmpsl
or
std
ret
sti
mov
xor
gs
cmp
pop
dec
pop
dec
inc
das
hlt
xchg
sbb
pop
mov
and
insl
or
jl
jge
or
std
adc
xchg
and
or
cmp
dec
mov
mov
scas
leave
sarb
mov
push
jb
test
adc
ret
xor
xchg
cli
inc
cmpsl
jge
sbbl
sbb
jne
lock
jg
insb
jmp
lods
adc
pushf
js
add
loopne
push
or
sub
add
cmp
insb
gs
sti
adc
mov
popa
xor
loopne
sbb
inc
div
cmc
and
mov
test
scas
sbb
adc
loopne
mov
dec
pop
pop
aam
add
lcall
inc
cli
std
xchg
xchg
call
sbb
add
sarb
into
aas
inc
test
inc
int3
subl
sub
xchg
or
je
jb
mov
addr16
pop
cmp
mov
dec
pop
adc
test
push
push
rcll
outsb
test
mov
hlt
jp
push
dec
xchg
dec
sti
daa
int
ret
xor
imul
scas
jnp
mov
jecxz
sub
or
movsl
xchg
imul
mov
ret
mov
mov
push
mov
divb
iret
mov
sbb
adc
sub
cmc
pop
inc
frstor
cmp
arpl
stc
loop
adc
test
daa
daa
cmp
cs
xchg
xor
lds
push
jo
mov
scas
pop
shll
jne
and
lahf
lods
cmpsl
fcmovnb
push
fidivl
andl
shrb
lahf
loop
xor
xor
inc
fmuls
in
inc
pop
call
call
xchg
sti
sbb
push
mov
addr16
adc
stos
jmp
mov
fnsave
push
es
or
cmpsl
mov
mov
cmp
call
loope
stc
aad
hlt
mov
xchg
ss
rcr
or
jns
push
jl
push
sarl
and
int
outsl
adc
mov
hlt
cmc
xor
fisubl
mov
mov
leave
mov
or
and
mov
sbb
lds
and
xlat
cmpsl
cmp
fcomp
les
and
adc
and
pop
repz
ficoms
outsb
dec
xchg
scas
call
mov
int
pop
mov
sahf
add
and
jb
jae
mov
in
inc
mov
dec
shll
and
iret
or
stc
fwait
repz
adc
mov
test
lahf
sub
dec
stc
aad
add
sub
in
into
int
xchg
mov
cmpl
movsb
add
mov
push
mov
sahf
outsb
daa
aad
dec
mov
mov
lcall
push
jg
mov
pushf
fs
movswl
xchg
mov
arpl
cmpsl
push
mov
mov
enter
or
adcl
sub
sahf
pop
je
pushf
jg
sarl
sbb
or
inc
leave
xchg
pop
push
lcall
dec
push
push
stos
lret
fildll
in
jb
das
in
push
push
push
mov
enter
out
cmpsl
js
inc
cltd
imul
and
sbb
outsl
add
lds
das
imul
pushf
mov
xchg
movsb
xchg
sarl
popa
xorb
clc
shll
cwtl
mov
orb
rcl
insl
add
mov
mov
adc
es
and
mov
clc
arpl
push
pop
jae
sub
pop
imul
scas
gs
xchg
rcrb
xchg
data16
negb
into
andb
and
or
in
mov
dec
mov
enter
pop
lock
pop
push
sbb
jb,pn
cmpsb
inc
mov
pop
cmc
dec
and
test
inc
mov
je
mov
movsl
adc
fucomp
mov
ret
out
loopne
or
cli
test
mov
push
fwait
in
mov
cmpsl
ret
dec
fsts
ljmp
popa
mov
inc
and
add
mov
push
leave
bound
mov
aad
lret
mov
sub
imul
cmp
decl
pop
loop
scas
xor
mov
xchg
cmpsb
in
testb
jno
lahf
xchg
xor
cltd
xchg
add
ljmp
and
aam
into
dec
pushf
ja
test
xor
dec
add
mov
lea
dec
xlat
xor
adc
xchg
stos
faddl
test
addr16
loop
mov
mov
nop
lock
mov
outsl
movb
testb
mov
pusha
push
push
subl
es
rol
sbb
fisubl
push
les
mov
stc
nop
adc
or
and
pop
xor
insb
mov
xor
inc
and
ss
and
test
sub
xor
pop
mov
xchg
push
mov
cmpsl
iret
cmp
mov
dec
jmp
sbb
into
and
stos
and
jne
pop
hlt
xor
leave
xor
cmpsb
ret
je
mov
adc
xor
adc
out
divb
adc
pop
sarw
insb
sub
pop
sahf
ds
jb
outsl
shrb
dec
mov
rolb
xor
out
ljmp
shrb
push
adc
popa
mov
adc
out
inc
cmp
jb
ret
sbb
fs
test
test
in
push
xorl
popa
shrb
daa
inc
cmp
fisubl
fdivs
add
js
filds
pop
push
xchg
pop
fistpll
dec
dec
pop
lret
sub
out
mov
aam
vpinsrw
add
out
enter
sar
or
adc
cmp
and
in
subb
std
out
out
sahf
push
xor
xchg
mov
dec
xor
test
lret
sbb
push
in
push
call
stos
sbb
mov
push
push
mov
lret
icebp
notl
mov
cmpsl
addr16
hlt
shrb
xchg
sub
fabs
inc
or
sbb
scas
bound
jbe
sti
shrl
fisttps
xchg
inc
push
dec
jg
aam
das
xchg
repnz
jp
push
inc
adc
sbb
xchg
mov
jne
adc
call
push
pop
jmp
rolb
mov
dec
mov
aam
and
cmpsl
out
inc
pop
jp
push
sub
inc
fdivl
jge
xchg
xchg
cmp
mov
notb
test
outsl
sub
ficomps
dec
in
mov
add
addr16
sbbl
bts
es
sub
push
jmp
mov
ret
sub
leave
bound
pop
adcl
pop
xchg
repz
call
inc
movsb
cmp
pop
pushf
sub
out
cltd
xchg
dec
pop
repz
mov
xchg
jecxz
and
jne
mov
shlb
jle
push
fnsave
lahf
pop
pop
popa
xchg
and
or
jb
or
cltd
fcoms
aaa
pop
adc
jb
inc
mov
aaa
add
gs
lds
sarb
fnstcw
pop
xchg
mov
sub
or
loopne
inc
xor
jno
xchg
data16
push
idivb
orb
roll
dec
repnz
jmp
or
push
jae
sub
repnz
call
dec
mov
fbstp
or
sbb
mov
inc
insb
daa
ret
inc
fisubs
lods
adc
ljmp
and
int3
push
in
pop
and
test
mov
sti
gs
push
lcall
in
out
xchg
and
dec
pop
jbe
int3
lahf
pop
lcall
inc
mov
or
test
push
sbbb
icebp
insb
sbb
aam
sub
les
dec
mov
prefetcht1
fisubl
aas
aam
fbld
insl
in
jp
cmpsl
push
in
jmp
push
idivb
push
icebp
sbb
sarb
jl
mov
sahf
addb
inc
fnstsw
rcrb
inc
mov
fsubr
test
pusha
jl
popf
push
pop
mov
ja
or
pop
mov
lods
lea
or
sarl
in
xchg
jle
fmulp
mov
xchg
jp
adc
stos
inc
not
test
popf
leave
sub
mov
notl
int
outsl
jnp
mov
aad
cwtl
pop
loopne
mov
mov
sti
add
fwait
pop
testb
lds
dec
lahf
in
inc
into
pop
cmp
out
sub
mov
pop
or
aam
sub
orb
data16
cmp
sbb
xchg
ds
sbbl
ret
xor
pop
mov
inc
out
stos
jbe
andl
dec
pusha
int3
mov
sbb
mov
xor
xor
js
xlat
adc
inc
mov
cwtl
rol
mov
fwait
cmpl
cmp
cmp
cld
xchg
dec
inc
and
in
fsubr
data16
sarl
fidivrs
push
rcrb
mov
pusha
ret
cmp
adc
jno
jp
xchg
sbb
imul
test
xor
sbb
jnp
loope
jns
fsts
jg
sub
iret
mov
or
jbe
push
scas
jb
adc
js
sbb
lods
sbb
scas
push
adc
pop
stc
sub
cld
and
fwait
dec
sbb
inc
cmc
push
ds
xor
call
dec
mov
jnp
add
dec
in
popl
mov
mov
sbb
mov
outsl
cmp
pop
data16
bt
pop
out
ret
js
insl
inc
cmp
jnp
call
mov
push
xchg
jmp
sbb
lret
or
pop
add
adc
insb
lret
lods
pop
or
mov
loop
dec
es
push
pop
cmp
dec
cli
adc
push
lock
cmp
and
sub
pop
sub
lock
aam
push
in
pusha
or
mov
cmp
jb
fnclex
mov
lea
mov
dec
and
add
xchg
mov
xlat
add
jo
into
fadd
xchg
cmp
lahf
stos
fcmovu
xor
jmp
xchg
jmp
sti
lahf
push
aad
jmp
jbe
nop
daa
icebp
aad
xchg
push
fwait
clc
lret
xchg
mov
sbb
push
lods
push
cmp
out
pop
xor
add
lret
out
test
jle
mov
fwait
jno
dec
aaa
test
mov
ffree
movb
dec
loop
pop
cmpsb
aaa
repnz
outsb
jle
add
test
adc
cmp
fmull
push
out
push
push
dec
and
sarb
out
and
test
add
stos
xchg
lea
jl
sbb
push
inc
daa
lock
mov
popa
lcall
xchg
cmc
and
jbe
mov
adc
mov
aas
ret
cmpsl
dec
mov
les
dec
repnz
in
and
inc
incb
in
mov
jbe
imul
sub
inc
pop
loopne
push
dec
dec
push
and
adc
sub
in
sub
pop
notl
and
mov
jae
push
push
add
cmpsb
in
mov
xor
push
imul
popa
rclb
sbb
lret
adc
xor
fs
pop
jl
aas
lret
cmc
push
xchg
movsl
add
pop
and
lret
mov
dec
pop
cmp
sbbl
out
mov
hlt
or
sbb
pop
outsb
filds
push
mov
dec
mov
pop
mov
mov
push
or
and
inc
std
or
rcrl
adc
push
xor
xchg
sub
arpl
adc
sahf
mov
imul
jae
cmpsb
push
jb
pop
jnp
fisubrs
gs
mov
push
ja
lret
lret
or
mov
ret
pusha
adc
mov
stc
or
gs
fucomip
or
sub
add
pushf
pop
hlt
jmp
or
out
icebp
dec
pop
imul
and
mov
std
sbb
mov
adc
push
mov
mov
mov
pop
lahf
and
adc
inc
push
and
outsb
mov
lds
scas
test
mov
dec
popf
adc
sahf
dec
call
or
push
adc
mov
cld
mov
loope
add
jp
push
hlt
and
popa
addl
xlat
cmpsl
out
pop
fwait
push
movsb
movl
jecxz
sbb
movsb
and
xchg
scas
jp
in
push
clc
or
negl
aad
xchg
dec
and
cmpsb
imul
rol
cmp
jb
shlb
xchg
or
lret
mov
ret
sbb
jbe
pushf
arpl
push
sbbl
xchg
sub
xchg
loopne
clc
jmp
inc
dec
ficoms
mov
iret
jae
cmp
push
cmp
sbb
stos
mov
iret
xor
mov
ja
daa
cltd
andl
out
mov
jns
stos
jnp
jl
mov
cmpsl
mov
jecxz
mov
fs
sbb
je
xor
fildll
ffreep
sub
jg
cmp
xchg
test
inc
adc
mov
addr16
test
rcrb
fidivrs
add
or
sbb
pushf
mov
xchg
push
inc
incb
mov
pop
nop
dec
dec
dec
inc
xor
mov
xor
dec
jb
push
pushf
push
aas
out
xor
enter
xchg
movsb
ds
rolb
cmp
and
sarb
add
stc
orl
inc
das
add
lahf
lcall
in
pop
into
pop
xchg
add
xor
insl
and
mov
adc
scas
cmpsl
fisubrs
inc
nop
les
popf
lcall
out
js
sub
test
ljmp
pushf
xchg
sub
test
lret
jg
adc
push
fucomip
inc
xlat
mov
xor
mov
xchg
add
or
xchg
daa
scas
cs
int
stc
push
subb
lret
out
fdivrl
aad
cmp
mov
loope
or
sub
stc
cmp
sahf
jae
dec
sbb
aas
or
cmpsb
mov
int3
iret
into
scas
jne
push
cmp
stos
mov
add
aad
mov
testb
xchg
jbe
shl
pop
push
fldl2e
xchg
mov
shll
sub
out
das
xorb
int
and
in
leave
xchg
cs
dec
mov
leave
repnz
push
jle
mov
arpl
mov
iret
and
add
mov
inc
pop
jg
data16
adc
xchg
fcmovne
cmp
cwtl
in
in
jns
sbb
shl
jnp
mov
loope
push
popa
outsl
xchg
pop
out
jl
out
jae
or
fdivs
in
stos
add
sbb
mov
loope
cmpsl
push
aaa
lods
inc
push
jae
test
out
push
popf
xchg
inc
ja
mov
mov
xor
inc
xor
js
cmpsb
fcmove
mov
pop
dec
in
dec
push
hlt
xchg
scas
pop
movsl
jmp
decb
fidivs
pop
xor
push
sbb
int3
mov
inc
fmul
cld
sub
in
push
xor
insb
fs
addl
add
mov
outsb
sub
mov
pop
outsl
lahf
cmp
xchg
pusha
lahf
ss
movsl
data16
mov
adc
rolb
cmp
pop
cli
cmpsb
pop
pop
sbb
gs
pop
jns
mov
and
lret
jo
fs
pop
pop
mov
insl
das
sub
in
mov
fldl
outsl
jge
in
std
mov
cmc
cmp
mov
add
and
xchg
into
and
push
and
sahf
int
mov
idivl
mov
mov
cmc
cmovns
lret
fwait
ret
or
xor
cmc
adc
jne
add
stos
mov
iret
adc
cli
or
dec
scas
aas
add
mov
xchg
add
cmc
cmp
ljmp
cmp
pop
inc
sti
mov
jb
aas
add
shlb
push
loope
xchg
and
popa
and
xchg
lock
xchg
rcll
jno
insl
insb
out
test
fcoms
xchg
mov
sub
cmp
into
roll
cmp
jecxz
xor
sbb
adc
fldt
xchg
xor
jecxz
out
push
pop
adc
lcall
lahf
flds
aaa
pop
dec
sub
popa
hlt
cmp
fidivs
psrlq
scas
sub
add
mov
jae
sahf
sti
dec
test
inc
xlat
mov
fwait
sti
js
cltd
sbb
sub
icebp
arpl
cwtl
add
sbb
iret
push
cmp
add
dec
push
push
sub
aad
mov
jbe
pop
xchg
aam
call
pop
cmp
lods
insl
jl
test
cmpsb
sbb
xor
xor
inc
pop
iret
loopne
jge
mov
mov
stos
jbe
add
cmp
fidivrl
push
sbb
push
mov
dec
addr16
jp
test
sub
cmp
xchg
or
lret
out
clc
or
ror
pop
xchg
inc
jmp
sbbb
mov
cli
mov
mov
and
xchg
sbb
test
push
jmp
jle
push
in
popf
sbb
stos
pop
mov
cmpsl
icebp
jns
cmp
xor
stos
dec
mov
sub
fs
jmp
mov
test
sbb
pop
mov
daa
mov
adc
mulb
arpl
shlb
mov
pop
mov
mov
repnz
dec
inc
lds
aam
xchg
mov
lea
xor
xchg
lods
fisubrl
inc
jge
inc
or
mov
xchg
xor
xlat
jle
xchg
movsl
arpl
jo
sub
mov
add
pushf
aas
outsl
jno
pop
mov
jns
xchg
xchg
lock
adc
and
push
push
push
cltd
xor
jge
cmp
ljmp
mov
sahf
je
lock
xchg
inc
je
push
lret
dec
sub
sub
aad
xlat
jns
inc
push
testb
mov
in
xor
mov
sti
adc
xchg
test
inc
dec
mov
loop
movsb
adc
pop
xchg
mov
js
mov
sub
adc
cltd
cwtl
pop
into
aas
cmp
xchg
cmp
pop
pop
fldl
xor
cmp
jbe
cli
pop
ss
std
jo
adc
test
pop
xor
cmc
push
adc
push
mov
dec
andl
out
jle
fistl
fs
jbe
mov
test
lret
cmp
imul
or
xchg
sub
mov
dec
hlt
mov
add
pop
stos
loopne
push
or
enter
mov
aad
test
jecxz
fistl
and
and
jge
inc
stos
add
ret
test
sarb
sbbl
icebp
ljmp
ss
fbld
xchg
mov
push
sti
jbe
sbb
inc
cmc
fnsave
mov
jmp
add
push
sub
loopne
jmp
fidivs
pop
pushf
or
sbb
ds
mov
mov
cli
outsb
sub
andl
fsubrs
loop
stc
mov
scas
jne
dec
xchg
testb
nop
cld
stos
negb
aad
repz
mov
or
setp
adc
data16
mov
pop
andb
xor
rorb
shl
xlat
mov
or
aam
push
push
jl
mov
mov
testl
cld
fld
movsb
adcl
fisttpl
fisubl
mov
add
jmp
dec
and
rolb
adc
sbb
adc
add
push
pop
inc
jg
or
in
cmpb
int
xchg
xchg
mov
cmpsl
and
jp
dec
push
out
fwait
pop
mov
pop
in
pusha
jmp
cli
xor
xchg
dec
cmp
add
shlb
call
imul
mov
xchg
sbb
imul
pop
add
inc
gs
addr16
jp
inc
fmuls
sbbb
pusha
mov
jnp
in
and
push
jp
dec
mov
xchg
push
in
xchg
sbb
icebp
mov
cmp
sbb
out
mov
aad
lods
sti
mov
ficoml
lods
or
cmp
inc
in
aaa
mov
pop
lret
xor
add
mov
jmp
jp
data16
jmp
mov
aad
dec
jno
or
mov
sub
dec
repnz
and
push
std
repnz
jle
iret
cmp
push
rcrl
cmpsb
scas
test
cmpsl
inc
and
loopne
cmp
xlat
shrb
jne
decb
inc
jp
fsubrl
and
mov
cmp
ljmp
scas
std
sbbb
rclb
ljmp
jb
cmp
fsubl
sbb
lods
arpl
mov
sbbl
pop
cwtl
lahf
arpl
ror
mov
mov
mov
mov
and
cmp
mov
subl
test
insl
cmpb
dec
xor
pop
roll
add
mov
xor
pop
push
ljmp
xchg
call
lods
add
xor
ja
fldln2
sti
negb
ret
loope
repz
jge
xor
add
jmp
loop
out
xor
fs
jno
rcll
testl
fwait
and
xchg
maskmovq
popa
outsl
mov
mov
addr16
xor
mov
lods
mov
jmp
jecxz
test
cmp
movsl
rcl
fnstsw
sbbl
adc
int3
and
add
sbb
and
and
pop
xchg
stos
jmp
lds
pop
sbb
leave
out
sbb
pop
testb
je
pop
cmp
xchg
ret
sbb
push
mov
mull
shl
out
sti
pop
inc
sarl
ljmp
in
mov
add
aad
dec
lock
adc
fbstp
jmp
xor
out
mov
mov
popa
or
jecxz
lds
cmp
jecxz
mov
or
dec
jae
adc
or
rcll
jns
cmp
shl
mov
xor
leave
push
lods
dec
pop
repnz
pop
push
sub
dec
jne
popf
stos
lods
xor
dec
jecxz
jns
cs
call
fld
dec
pusha
repz
pop
lods
jp
pop
std
cmp
mov
lret
in
cmp
sbb
push
inc
pop
and
cltd
mov
add
int
je
cmp
clc
in
andb
lods
jmp
xor
insb
mov
dec
xor
aaa
xor
shll
xor
loope
popf
stc
pusha
lea
mov
enter
xor
and
jnp
mov
ja
les
ljmp
popa
push
mov
push
outsl
sub
xchg
jbe
es
xchg
cmp
sti
rcrl
sbbl
cmp
mov
sahf
cmp
mov
push
mov
mov
inc
pushf
popa
ja
adc
mov
pop
cmpsb
pop
sub
push
jnp
dec
push
das
in
dec
xor
aam
aas
xorb
fidivl
push
gs
repnz
in
mov
sbb
cwtl
das
fnstenv
sbb
add
sahf
dec
clc
jge
ss
mov
mov
decb
aas
es
push
pusha
adc
repz
test
jp
ret
add
mov
aaa
inc
les
adc
ret
stos
dec
aad
push
test
in
popf
pop
or
dec
jmp
stc
push
stos
pusha
and
arpl
fadd
mov
mov
mov
adc
cmp
out
pop
inc
and
aad
inc
and
cmpsb
inc
lahf
loope
lret
dec
lcall
fnstenv
cs
push
mov
jl
je
xchg
xor
ds
sub
and
jne
push
and
or
mov
lds
dec
sbb
sbb
mov
cmc
popa
cld
mov
pop
or
movsl
mov
dec
xchg
es
jne
fwait
or
cmp
xor
pop
jmp
ja
inc
imul
add
xchg
lods
dec
fcoml
xlat
lods
inc
mov
arpl
inc
pop
inc
pusha
lea
fwait
movsl
lret
jae
js
out
inc
jb
icebp
add
xchg
xor
sub
sbb
xchg
dec
push
xor
jg
fcomps
pop
gs
inc
mov
scas
mov
push
dec
adc
mov
fdivp
xchg
xlat
and
push
jle
xchg
pushf
imul
inc
mov
inc
mov
lods
xlat
inc
xlat
or
jno
mov
pop
andl
jbe
jecxz
cld
pop
xor
inc
inc
icebp
addr16
fmul
in
sar
nop
add
lods
push
pop
movsb
pop
push
repnz
shlb
mov
movsl
mov
rolb
in
xor
xor
cmp
arpl
or
andb
mov
sub
leave
imul
mov
fcomp
dec
cmc
loope
sub
mov
fsubrl
addl
cmc
in
rclb
fimuls
lods
std
sub
cmp
cmp
movsb
aad
out
push
lock
lcall
popa
xor
lock
mov
ret
adcb
pop
push
stos
into
mov
stos
sbb
enter
mov
push
mov
imulb
pop
sbbb
shrl
pusha
mov
xor
out
roll
push
pop
movsl
insl
fxch
rorl
hlt
loope
insb
inc
mov
pop
mov
push
and
mov
push
dec
inc
test
xchg
dec
addl
sbb
push
out
push
aam
cmp
test
repnz
cmp
cltd
xor
out
gs
pop
xor
fisubrs
shll
mov
pop
scas
inc
loope
stc
test
sub
mov
frstor
push
cmpb
push
daa
cmpl
mov
jp
pop
fwait
lahf
jnp
fxtract
xlat
outsb
sub
sbb
cmc
adc
push
int3
gs
cmc
or
pop
xorl
data16
sub
pop
mov
pusha
xchg
add
sbb
addr16
push
movsl
ret
aaa
mov
jns
xchg
stos
idivl
pop
xchg
bound
push
jne
adcl
xor
sbb
push
xor
xor
mov
jns
sub
outsb
loope
clc
add
mov
xchg
mov
jae
mov
cwtl
xchg
test
pusha
sub
mov
icebp
out
int
and
jg
out
mov
out
mov
popl
je
cmp
addr16
sbb
in
add
outsb
mov
lods
jbe
or
test
lcall
and
cmp
dec
inc
pop
sti
pop
pop
aam
adc
and
je
scas
pop
jno
bound
scas
dec
into
fdivrl
add
mov
cmpsb
mov
repnz
jmp
enter
dec
inc
inc
jb
mov
xchg
or
adc
lahf
lret
testl
adc
dec
movb
insb
mov
aam
out
clc
call
in
repz
mov
push
mov
rcr
pop
loope
mov
fidivs
mov
cld
inc
lds
push
xchg
xchg
adc
dec
mov
hlt
lret
inc
rcll
fstl
ret
xlat
ror
std
xor
es
pop
jne
or
lcall
inc
dec
je
mov
jno
cmp
cmp
out
aam
pop
shlb
add
dec
fmulp
jg
xchg
push
adc
sbb
repnz
jo
inc
and
ficoms
sbb
ret
cmpsb
mov
cwtl
ret
sbb
pusha
dec
pop
repz
cltd
push
out
and
xchg
jae
inc
pop
sbb
inc
cmp
dec
out
adc
inc
setbe
in
or
jp
movsl
in
jg
cmc
scas
jg
mov
mov
scas
outsb
sub
push
sahf
loop
fs
movsb
cmp
inc
fldlg2
int3
bound
mov
cmp
movsl
fwait
outsl
icebp
push
jl
cltd
adc
inc
sub
dec
xchg
xlat
outsl
mov
out
sbb
shl
cmp
mov
xchg
je
sbb
and
stos
inc
loop
test
mov
cmpl
jecxz
push
hlt
addr16
in
in
loope
jge
orb
ds
out
sub
lcall
andb
adcb
jne
inc
arpl
sahf
mov
push
lods
inc
mov
cld
cli
lret
add
jb
sbb
popf
add
add
enter
xor
sub
sbb
ljmp
inc
inc
inc
pop
les
fisubrs
js
jnp
lock
pushf
inc
aaa
add
xchg
xor
or
fs
sti
stc
popa
mov
xchg
sbb
push
loopne
xor
cmpsb
xchg
pop
cmp
mov
mov
les
icebp
mov
jg
sub
aas
cmp
cmp
inc
loop
aam
stos
pop
in
test
testl
mov
mov
adc
insb
and
add
inc
mov
mov
mov
int3
mov
xlat
jg
fisubs
subl
or
mov
mov
dec
outsl
mov
rcrb
sub
cmp
xor
inc
sbb
stc
mov
adcb
ret
ljmp
mov
pop
sbb
ja
add
pop
arpl
mov
push
lods
jae
push
add
es
aam
lods
inc
push
jnp
popa
sub
inc
out
pop
jns
popa
mov
or
dec
in
sub
jae
movsl
jb
add
out
xor
inc
fiaddl
shlb
pop
popa
sahf
lods
dec
inc
imull
sub
or
and
aad
inc
or
and
popf
xchg
scas
imul
out
xchg
cmp
cmp
lea
mov
shlb
mov
add
jle
xchg
sbb
pop
outsl
call
add
pop
das
subb
mov
in
inc
jmp
js
insl
jnp
insb
mov
cltd
call
or
imulb
adc
shlb
daa
stos
and
movntq
out
jae
cmp
subl
push
or
loopne
fcomi
leavew
fdivl
xchg
and
test
jbe
sti
mov
pop
pop
xchg
add
clc
jns
cs
out
jne
cltd
jo
lret
sub
imul
xchg
or
movsl
xchg
hlt
call
movsl
into
sbb
xchg
mov
enter
push
shrl
mov
rolb
les
fs
mov
add
pop
imul
push
xor
jecxz
mov
pop
add
or
bound
push
xor
cmp
pop
cmpsb
aam
mov
inc
jmp
adc
mov
jbe
jns
dec
stos
cmp
cld
cmpsb
inc
sarb
inc
enter
push
sbb
jnp
aaa
dec
rolb
cmp
jg
push
repnz
push
adc
sub
clc
nop
mov
stos
jge
rclb
ljmp
push
pushf
ljmp
int
aaa
jo
cltd
fisubrs
rol
jg
push
in
inc
mov
insb
es
ret
push
popa
in
in
jmp
mov
lods
push
mull
adc
add
mov
leave
ret
inc
xlat
mov
loop
js
in
dec
fidivs
enter
pushf
pop
inc
sub
xchg
aas
cwtl
das
jo
movsb
dec
mov
mov
mov
pop
xchg
mov
pop
cmp
pop
outsb
cmp
xor
pmaddwd
pop
lea
mov
pop
popa
fcompl
pop
dec
lock
addr16
adc
push
or
mov
mov
in
rol
inc
xor
or
xor
rclb
lock
sub
push
stos
sarl
out
cwtl
and
adc
dec
and
iret
mov
ficompl
sbb
test
sbb
int
popa
jg
push
popa
stos
addr16
imul
dec
lret
mov
mov
es
mov
cmp
pop
ljmp
jmp
xchg
adc
mov
xor
fidivrs
daa
inc
pushf
sti
icebp
xor
mov
push
push
inc
rorl
dec
cmp
inc
sahf
inc
cwtl
add
push
xor
dec
pop
outsl
xor
inc
cmpsb
cmpsl
dec
rcrb
sbb
inc
mov
mov
mov
movl
setp
xor
sbb
push
inc
cmpsl
mull
rorl
mov
mov
add
iret
out
addr16
adc
lea
lret
les
xchg
cmp
dec
inc
inc
mov
pop
sbb
aad
pop
lea
adc
cld
leave
xor
in
std
in
mov
add
inc
jmp
out
shll
lds
inc
repz
mov
jg
push
push
jbe
pop
enter
xchg
jmp
mov
cltd
xor
inc
jno
or
incl
cs
daa
cmp
dec
mov
pop
lods
and
mov
mov
int3
sbb
inc
push
pop
ret
jns
pushf
sbb
and
sti
mov
daa
jl
pop
mov
inc
lea
mov
jb
mov
push
sbb
sub
mov
scas
jmp
fistpll
mov
int
fldl
mov
ror
mov
in
push
inc
pop
or
int3
mov
repz
xor
lods
jmp
pop
xchg
and
dec
sub
xchg
fnstenv
xor
pop
add
pop
push
pushf
pop
clc
push
dec
cmpsb
fiadds
inc
lret
dec
nop
jae
push
inc
inc
adc
fidivrs
sub
lret
sahf
xor
popf
loop
jl
sbb
inc
hlt
fs
icebp
out
shrb
push
rcr
xor
cmpsl
jbe
lods
push
adc
out
bound
outsl
enter
insl
sbb
cltd
call
pop
aad
adcl
jbe
ljmp
pop
dec
pop
shlb
sub
repnz
shlb
jmp
scas
and
dec
rcrl
mov
mov
xor
lds
adc
test
out
orb
sbb
jmp
cmc
adcb
cwtl
cld
js
aam
es
std
js
ret
ret
mov
inc
bound
xchg
fldcw
repz
fdivs
jno
rcrb
jl
fwait
dec
jnp
mov
push
inc
jge
or
fwait
inc
sbb
and
lods
js
pop
xlat
adc
cld
aad
insb
mov
ffree
popf
sbb
push
movsl
ror
mov
adc
ret
pop
cwtl
and
enter
and
fbld
mov
gs
mov
push
outsl
xchg
js
cmpsl
jecxz
pop
or
subb
jl
std
mov
pusha
xchg
dec
xchg
les
outsb
fwait
and
push
jns
lret
sbb
outsl
mov
ret
and
dec
push
xor
sub
dec
dec
adc
jnp
cmp
mov
int
cli
cmp
sub
mov
hlt
add
mov
or
shll
push
paddusb
ja
mov
int
sbb
adc
cltd
add
es
notb
xor
jae
rcrb
jecxz
xlat
std
stos
mov
sub
mov
hlt
loope
xchg
dec
jmp
jnp
std
xchg
inc
adc
inc
mov
repnz
pop
sahf
adc
lret
mov
jmp
jnp
mov
clc
xchg
mov
add
add
mov
mov
lahf
mov
mov
jecxz
movsl
xchg
pop
pop
scas
push
js
add
test
pop
cmp
arpl
xor
dec
mov
lret
adc
jmp
imul
xchg
jo
hlt
cmp
jne
and
mov
cmp
nop
or
push
iret
outsb
testb
or
arpl
hlt
je
les
pop
rcrl
mov
int
sub
scas
or
cli
xchg
fdivs
call
in
and
dec
cld
jns
xchg
sub
inc
pushf
xchg
dec
sbb
mov
js
es
adc
psrld
data16
mov
lods
addr16
mov
pop
orb
mov
into
enter
or
negl
out
popf
sahf
mov
fwait
jl
pop
sbb
frstor
xor
sub
or
mov
pop
or
lret
xchg
dec
repz
cli
lock
sbb
pusha
nop
sbb
fisubl
mov
push
adc
cmp
in
push
push
dec
jp
inc
push
jb
xor
xor
sarb
jbe
das
mov
mov
daa
jns
int
cmc
add
sub
mov
push
push
xor
add
dec
cmp
leave
cmp
fcoml
inc
pop
adc
sub
or
inc
xor
jmp
mov
sub
jge
sti
imul
xchg
xchg
dec
add
in
jecxz
jmp
dec
push
out
xlat
mov
popa
mov
shlb
mov
andb
cmovs
pop
pop
movsl
lds
push
inc
dec
cmpsb
lcall
adc
sbb
fldcw
and
mov
lods
inc
add
dec
out
popa
push
rcll
popl
icebp
adc
outsb
inc
sub
mov
int
in
loop
adc
fnstcw
dec
pusha
ss
fists
loope
xor
pushw
mov
adc
out
ret
stos
icebp
sub
xchg
mov
shll
pop
popa
andb
in
jmp
xchg
ffreep
aad
loop
and
ret
pop
adc
xchg
sbb
lods
inc
add
subb
in
mov
xchg
xor
fbstp
push
cwtl
cmp
int
test
add
push
dec
fsubrs
mov
mov
clc
sub
push
scas
ret
jne
mov
lods
pop
add
xor
and
xchg
cmp
out
mov
pop
lds
dec
repz
pop
sbb
fildll
push
stos
push
mov
es
dec
dec
pushf
jmp
dec
out
repnz
out
ret
lahf
lods
xchg
stos
mov
jp
pop
stc
or
sub
data16
mov
push
inc
lea
xor
add
leave
fistl
adc
or
or
fnstcw
outsb
test
mov
cli
or
inc
pusha
divl
imul
dec
xor
les
sub
out
out
imul
sbb
xchg
push
in
call
imul
mov
dec
stc
xor
aas
mov
lock
push
aaa
xchg
jmp
and
stc
cmpl
mov
and
sbb
leave
push
je
enter
pop
sti
xchg
mov
insl
add
pop
add
sub
outsl
xchg
mov
repz
lock
cli
or
out
sub
sarl
incl
jg
daa
pushf
rcl
test
cmp
xor
mov
out
mov
xchg
call
jg
xor
jnp
fs
call
or
sub
les
and
jecxz,pt
jo
insl
in
jne
sub
dec
and
inc
inc
jl
cmpsb
js
push
push
xchg
bound
sbb
int
or
inc
sbb
mov
sbb
dec
adc
push
dec
loop
dec
cmp
clc
dec
out
lock
mov
push
push
xor
shrb
rcrb
fwait
xor
mov
cmc
xor
inc
out
shrb
pop
jmp
fisttpl
cld
add
cwtl
jnp
mov
inc
cwtl
test
ljmp
ljmp
inc
data16
imul
xlat
mov
scas
and
mov
lods
rol
test
adc
mov
xlat
pushf
mov
cmp
enter
mov
jae
mov
adc
or
pop
xor
sahf
sub
ror
xor
pop
xor
mov
push
lcall
in
dec
stos
dec
jo
jl
pushf
add
pop
cmpsl
lods
in
lcall
gs
jg
andl
lea
fs
sbb
les
popf
insb
dec
cmp
mov
cmc
push
out
mov
lock
insl
test
shr
sub
mov
mov
lret
dec
imull
daa
outsb
vcmpss
lret
push
and
sahf
and
negl
sub
out
sub
push
mov
das
xchg
cli
push
lahf
icebp
clc
sub
or
adc
shl
imul
fisubrl
test
shll
inc
sub
js
push
cmpb
cmp
mov
add
out
fiaddl
adc
mov
int3
pop
mov
adc
lods
xchg
mov
or
inc
add
lea
in
mov
scas
dec
out
dec
mov
dec
jecxz
sbb
and
icebp
jnp
and
les
loop
jle
or
test
jns
jo
adc
outsb
add
cmc
or
scas
std
xchg
loopne
outsb
std
inc
test
daa
add
xor
je
adc
or
xor
jle
lret
xlat
cmc
pop
loopne
pop
and
test
sahf
outsl
mov
jge
inc
fcomps
and
pop
out
std
and
lods
je
push
mov
inc
xchg
jg
sub
mov
cs
push
adc
pop
xchg
xchg
lods
enter
push
outsb
ret
stc
mov
movsb
mov
xor
xchg
movsb
ret
clc
add
jbe
cli
or
dec
fwait
ss
or
idivl
or
rsm
and
dec
xchg
ret
xlat
or
daa
xchg
and
pop
mov
imul
xor
cli
lock
leave
pop
jge
mov
fnsetpm(287
push
jno
mov
mov
mov
sbb
xlat
push
mov
or
cmpsl
push
movsl
xlat
mov
mov
movsl
paddusw
jl
cmp
int3
dec
out
push
dec
out
pop
insl
in
les
mov
xlat
outsb
pop
xchg
out
mov
cmc
mov
sub
or
lcall
fcomps
jge
push
mov
sahf
outsl
lock
jo
push
mov
adc
pushf
aas
mov
fs
and
loopne
mov
cmp
mov
jge
jnp
jnp
push
and
mov
push
push
mov
scas
out
sahf
sub
mov
fisubrs
stos
push
jbe
cltd
addb
je
loopne
lcall
adc
daa
push
jnp
test
pop
jne
frstor
subb
inc
lods
inc
add
scas
push
inc
jle
xchg
push
cmp
cmp
lock
movsl
sarl
mov
jb
lods
mov
adc
imul
repnz
popa
inc
mov
sbb
call
inc
mov
and
vshufpd
cmpsb
sbb
cmpsb
test
xor
in
jo
jmp
enter
stc
xchg
mov
or
call
inc
push
in
add
inc
insl
sti
lea
xchg
mov
loope
fs
jns
mov
push
aad
push
call
xor
fsubr
add
add
xchg
mov
jns
xor
sbb
push
or
jg
and
lock
sbb
test
loope
mov
push
out
pop
ret
jae
jmp
sti
daa
ret
mov
std
sbb
das
inc
sub
sub
mov
inc
pop
insl
addl
and
lds
push
mov
les
sbb
dec
pop
pavgb
cwtl
sbb
sbb
lcall
insl
testl
xchg
adc
dec
jae
pop
mov
cltd
data16
xorl
mov
xor
pop
adc
push
ret
jns
sub
mov
ja
mov
sbbl
sti
imulb
cmp
insb
pushf
aam
mov
pop
testb
loopne
outsl
jge
lahf
addr16
and
mov
xchg
add
push
xor
sbb
jp
xchg
push
fwait
xor
lret
push
cmpb
jbe
aam
loop
in
and
aad
je
xor
bound
ret
inc
and
sti
mov
nop
pop
fnsave
dec
sub
push
jno
xchg
out
xlat
lods
or
sbb
jbe
xchg
cltd
cmp
cwtl
jle
mov
imul
xchg
arpl
rep
mov
test
in
dec
sub
or
lret
insl
inc
stc
push
popa
les
bound
sbb
insl
or
lahf
scas
xor
push
imulb
cs
mov
dec
popa
or
ds
jae
test
dec
xor
inc
test
or
xor
add
inc
xlat
xchg
cwtl
mov
dec
dec
out
lcall
pop
ret
push
jns
es
test
xchg
sbb
mov
das
cli
pop
enter
loopne
mov
imulb
repnz
pop
or
testb
xchg
shlb
push
xchg
shrl
xor
sub
cmp
sub
lcall
xor
insb
fildl
and
pop
out
push
sbb
frstor
xlat
insb
sub
test
mov
daa
sti
push
xchg
sbb
fbld
addl
imul
sbb
arpl
lret
lret
mov
out
or
inc
sbb
cli
aam
insb
fsubr
or
pop
add
add
icebp
xor
and
jae
fistpll
inc
ds
fldenv
lret
mov
stos
dec
mov
mov
lock
sbb
loope
xchg
jne
cmp
movsl
mov
test
movsl
in
call
xor
scas
scas
incb
jbe
and
rcrl
fcomip
jecxz
pushf
in
push
mov
movsb
call
enter
ficomps
mov
scas
mov
sarb
push
outsb
stos
xchg
lds
divb
fs
sub
cli
pop
push
cld
push
adc
loop,pt
mov
sub
shrb
pop
in
pusha
popf
push
test
and
popf
xor
inc
call
and
andb
test
push
fcmove
xchg
jmp
pop
pop
xchg
and
cmc
ficomps
mov
int
mov
sbb
subl
in
add
or
sub
xchg
imul
shrb
mov
mov
int3
insl
aam
pop
pop
xchg
inc
lcall
xor
or
nop
add
adc
cltd
test
fsubp
xchg
sbb
mov
inc
xchg
mov
sub
jae
dec
jecxz
dec
cmp
and
inc
lock
cld
mov
js
outsl
in
mov
fs
dec
inc
cld
insl
mov
sub
ficoml
xchg
push
inc
dec
and
sbb
add
push
sub
mov
popf
or
pop
lods
out
and
mov
clc
sbb
cli
xchg
sub
orl
pop
fbstp
mov
fstpl
cmp
addb
loopne
inc
xchg
lret
stos
inc
mov
mov
jbe
adc
and
jae
es
test
adc
push
jbe
int3
lret
movsl
jl
mov
stos
mov
mov
mov
bound
outsb
jg
sbb
mov
pop
jp
out
inc
push
outsl
cltd
in
dec
lret
xchg
adc
mov
jno
insl
lods
xorl
or
aad
and
jb
or
adc
push
xor
ds
js
roll
sub
inc
dec
cmp
mov
aas
or
push
loop
ret
cmp
push
fwait
outsb
cltd
in
sub
sbb
push
aas
lea
mov
sbb
push
inc
shrb
ret
or
fdiv
imul
inc
pop
pop
jle
pop
pop
loop
sub
push
je
hlt
stos
mov
dec
out
bound
and
xchg
addr16
pop
out
fs
jg
jae
jbe
pop
stos
mov
popa
jns
push
xor
iret
lods
cmp
push
fidivl
popf
pop
cmp
popl
mov
xchg
pop
xor
cmp
hlt
adc
adc
fidivrs
dec
insb
scas
aad
sbb
dec
dec
mov
xchg
aaa
xchg
mov
rcrb
ja
inc
dec
mov
sub
imul
in
ljmp
roll
aam
adc
inc
aad
mov
push
pop
repnz
pusha
dec
scas
fs
adc
push
subb
aaa
in
shlb
lds
pop
loop
iret
dec
rcll
add
push
repz
mov
xchg
mov
inc
inc
cmp
jl
out
cmp
or
xor
add
or
push
faddl
adcl
rorl
push
jb
aad
mov
cmpsl
push
testb
xchg
pop
imul
loopne
mov
push
push
jb
sub
aad
xor
roll
clc
add
and
adc
xchg
bound
lods
jbe
lret
out
sbb
lock
dec
out
xchg
decl
jmp
inc
in
scas
mov
and
xchg
cwtl
gs
jmp
out
incl
gs
daa
cmp
xorb
in
xor
cli
xor
sahf
inc
fisttps
lahf
dec
loope
sar
scas
cmpsb
cmp
imull
fisubrs
cmp
cli
mov
mov
lret
shlb
mov
mov
add
or
test
sub
sub
pand
rclb
add
std
mov
xchg
xor
mov
inc
jmp
out
and
pop
rorb
pop
movsl
in
out
nop
aas
dec
sub
push
jb
inc
xchg
mov
cmc
mov
sub
mov
pop
and
into
popf
sub
push
popa
lods
cmp
push
imul
and
jp
movsl
popf
inc
cld
sbb
in
cmp
jmp
mov
cmp
ret
subl
push
ja
je
leave
int
xor
jge
cmp
sub
cmp
adc
add
ret
sub
or
mov
icebp
xchg
pop
inc
cmp
lret
mov
and
sub
ret
xchg
repz
lods
mov
jns
xor
dec
push
in
inc
xor
incl
mov
pop
jecxz
xchg
inc
push
xchg
pop
fisubs
hlt
push
in
data16
lret
dec
jmp
and
dec
rcl
insl
ret
xchg
es
aad
lea
adc
cmp
enter
sub
jnp
in
testb
sub
push
cmp
ss
lods
dec
pop
jb
jae
js
out
ljmp
testb
inc
and
test
leave
nop
pop
int3
or
xchg
sbb
sbbl
xchg
mov
adc
push
sti
and
popa
dec
enter
int
aad
or
sub
aad
pop
adc
es
stos
es
incb
cli
int
sub
pop
xor
push
cmc
imul
lock
fucomp
xor
mov
fsubp
fldt
mov
mov
addr16
push
mov
lds
jno
mov
cmp
cwtl
loopne
fdiv
std
or
or
mov
aam
or
daa
jp
pop
push
std
adc
fsubrl
xchg
test
int3
mov
lcall
pavgb
jae
jle
push
dec
or
cmp
add
dec
lcall
insl
jne
or
mov
ss
xchg
xchg
mov
jno
roll
add
nop
jns
shrb
popf
or
shll
dec
xchg
jb
mov
lock
inc
fdivrl
popa
xchg
push
mov
mov
jb
push
jmp
negb
andb
mov
jae
pop
mov
jge
jecxz
fs
stos
pop
test
fadd
mov
pop
aaa
adcb
sti
arpl
inc
push
and
lcall
sahf
ds
add
jl
rcrl
fwait
pop
push
mov
xchg
adcl
cmpsl
dec
movsb
dec
dec
mov
sub
das
lcall
push
sub
push
lods
push
movl
jns
fsts
xchg
shll
scas
mov
out
lods
jle
fmuls
push
imul
and
mov
xchg
lods
sbb
adc
pushf
mov
insb
shlb
jg
insl
iret
push
test
sub
setp
jbe
call
orb
sub
xchg
mov
xor
in
adc
outsl
add
cli
or
jne
inc
lahf
ljmp
lods
push
das
repnz
mov
cmp
jp
mov
push
jg
adc
dec
cwtl
test
stos
jns
mov
arpl
sbb
test
adc
lods
pop
rcll
out
icebp
mov
std
xor
or
mov
cwtl
test
inc
and
xor
xchg
orl
jbe
fsts
xlat
xchg
mov
adc
push
dec
loop
sub
scas
mov
push
inc
adc
or
push
rcl
jg
bound
aam
addr16
mov
add
mov
in
push
fistpll
pop
outsb
inc
sti
push
add
dec
sarl
sbb
mov
jb
mov
cmp
mov
loopne
mov
orl
fwait
xor
adc
and
and
push
xor
inc
movsl
inc
out
out
js
loop
adc
aad
enter
adc
icebp
mov
lods
jecxz
inc
mov
adc
mov
pusha
or
out
loope
jno
out
pop
sbb
sub
jo
cmp
fdivr
jo
mov
into
xor
insl
jl
clc
mov
js
in
jp
and
jb
leave
add
mulb
test
or
in
test
sub
in
mov
jle
mov
mov
les
repnz
out
xor
movsb
mov
aaa
push
call
rcrb
add
cmpb
iret
mov
gs
in
add
test
dec
push
fidivs
and
or
int
xor
xchg
hlt
cmpsb
les
and
add
lock
cmpsb
loop
aad
fidivs
stc
pop
fldl
ficoms
into
ficompl
push
sub
ja
lods
fistl
jns
xchg
add
lcall
inc
je
xchg
aad
xlat
icebp
push
movsb
pop
je
pop
adc
and
ret
cmc
adc
in
data16
roll
jb
shr
into
mov
xor
sahf
and
out
repnz
pop
aas
fiaddl
loop
sub
loop
jge
subl
lods
or
in
push
sub
mov
idivb
dec
outsb
sahf
imul
pushf
mov
jecxz
inc
lret
pop
adc
cwtl
jnp
dec
dec
xor
mov
testl
pop
outsb
pop
xor
aam
mov
lea
xlat
mov
ret
inc
clc
insb
cli
popa
jp
dec
out
out
stc
loop
insl
shr
add
sub
or
ljmp
pop
dec
push
jl
and
add
xor
cmp
dec
lds
inc
sbb
popa
imul
add
arpl
mov
mov
divl
add
cmp
subl
loop
lret
pop
jae
dec
jo
mov
or
pop
cmp
gs
jg
ja
js
pop
out
mov
test
sub
or
cmp
hlt
jecxz
xchg
cmpsb
jg
sub
loopne
sub
imul
cwtl
fwait
push
dec
dec
add
loop
push
or
mov
dec
xor
negb
pop
pushf
aas
mov
pop
cli
mov
add
xchg
push
xor
inc
subl
cmp
ss
movsl
mov
fmuls
stos
jecxz
fmull
cmpl
cmp
fdivrs
icebp
insb
scas
adc
jg
mov
inc
mov
stos
inc
xchg
in
shlb
dec
enter
out
cli
mov
mov
pop
sbb
fidivl
inc
jmp
in
jge
mov
rcll
sbb
mov
sbb
and
or
jbe
mov
mov
xchg
leave
mov
inc
cli
mov
and
jb
xchg
cltd
sbb
xchg
xchg
out
adc
out
jp
je
imul
dec
dec
cli
test
cltd
add
testl
add
hlt
xor
daa
in
mov
movsl
clc
stos
rcrl
add
dec
xchg
stos
daa
inc
fdiv
in
jp,pt
std
outsl
mov
add
adc
js
xor
push
out
mov
add
imul
hlt
ret
fbld
and
cmp
daa
and
adc
jb
lea
cmp
sahf
push
enter
mov
test
inc
dec
fdivrp
in
or
ljmp
fxch
movsb
mov
aad
or
icebp
cmp
sbb
mov
or
mov
mov
cmp
lret
sub
or
fidivrl
add
inc
inc
mov
mov
call
add
xor
sbb
or
push
jns
mov
out
xchg
sbb
in
cmc
iret
mov
and
push
outsl
push
mov
sub
das
repnz
sub
das
xor
mov
jo
in
jl
sti
shll
sub
jecxz
or
sub
adc
or
into
cmp
cli
dec
rclb
scas
mov
outsb
mov
dec
repz
jge
dec
pop
pop
pop
aam
jbe
fwait
xor
pop
add
lods
mov
fsubl
clc
sbb
cs
pop
daa
inc
insl
push
dec
push
je
adc
insl
adc
in
mov
adc
pop
test
push
outsb
xor
pop
decl
or
int
insl
jo
call
sub
jo
and
sub
popf
jne
xchg
jno
and
jge
xchg
lods
xchg
ret
jmp
xchg
and
loop
fwait
sti
and
fdivs
fnstsw
loope
into
sub
sub
fcoms
sub
push
sub
xor
aam
jg
in
iret
inc
and
mov
push
push
adc
lea
adcb
in
jb
pusha
inc
cs
jmp
repnz
call
cmp
push
inc
cli
ja
shll
xchg
add
xor
loop
xchg
or
adc
dec
fstpt
push
outsl
xor
das
jne
push
popf
jge
mov
mov
push
adc
test
addr16
clc
icebp
inc
pop
and
fstpl
push
and
inc
scas
subl
mov
inc
hlt
movsl
aas
jg
out
aaa
into
mov
xchg
and
xchg
pusha
insl
in
sbbl
xchg
mov
loopne
dec
psrld
lock
lock
sysenter
mov
icebp
in
test
lods
pop
and
je
xchg
dec
pop
xor
js
mov
inc
sbb
jp
cmp
out
dec
adc
nopl
mov
enter
mov
jl
xor
movsb
inc
lods
jl
mov
pop
sbbl
pop
inc
sbb
stos
cmpsl
stc
lock
dec
hlt
pushfw
add
mov
xlat
nop
push
or
sub
lods
test
fwait
xchg
fwait
stos
inc
int
lret
cmpsb
push
inc
mov
or
stos
pusha
add
lcall
xor
mov
dec
scas
repnz
leave
add
ljmp
xlat
mov
sub
test
movl
arpl
inc
ljmp
out
sbb
shl
mov
push
movsl
cmpsl
mov
jmp
lret
mov
adc
mov
movsl
stos
je
lret
cmpsb
mov
mov
dec
push
addl
push
dec
xor
shl
fdivrl
sub
adc
lock
fnstcw
ror
pop
fwait
das
adc
mov
daa
push
pop
test
xchg
out
cmp
xchg
gs
fwait
mov
fisubs
mov
sub
sbbb
popf
xchg
ret
into
lcall
jnp
pop
hlt
fcoml
shrl
loopne
outsl
popf
push
lock
jbe
push
push
rcrl
push
incl
mov
xchg
xor
push
out
sti
sbb
push
jae
loop
xchg
pop
aas
std
pushf
rcll
jle
cs
and
mov
icebp
clc
lock
push
jae
loope
shl
sub
jo
data16
out
fbstp
sub
jp
mov
dec
gs
jns
sub
cmpsl
clc
sbb
ljmp
adc
add
loope
fisttps
pusha
mov
cld
imul
insb
lods
push
scas
pop
outsb
jb
rclb
and
mov
push
dec
call
frstor
jmp
add
bswap
and
dec
and
or
call
cmp
lds
cs
clc
jnp
inc
dec
in
in
xor
mov
xchg
aam
mov
adc
push
fucomi
pushf
hlt
xchg
mov
fwait
sub
int
jne
dec
call
xlat
xchg
sub
das
xor
in
mov
push
dec
out
xorb
or
push
lahf
lcall
jmp
cmp
lahf
in
dec
inc
cmp
loope
sub
xor
arpl
movsl
inc
sub
add
adc
lret
pop
push
lods
sub
mov
in
repnz
js
aam
ret
add
gs
les
jmp
jno
inc
lahf
lods
fwait
sti
sub
mov
dec
jne
push
push
in
les
aaa
push
std
xchg
dec
lods
xor
bound
push
idivb
in
in
sub
mov
inc
dec
adc
and
add
jl
cmovbe
pop
ds
and
into
xlat
jb
int3
pop
cli
mov
out
and
sub
cmp
dec
mov
jne
js
dec
and
mov
div
jle
sbb
jl
nop
xchg
and
jnp
cmp
mov
or
imul
test
in
stc
popf
mov
cmp
negb
xchg
nop
std
jbe
pop
test
sub
xor
xchg
xchg
in
jo
out
pop
mov
sub
out
xchg
mov
xchg
pop
in
int3
arpl
jo
sbb
inc
insl
out
lock
stc
nop
inc
adc
mov
test
fmul
mov
rorl
cmp
shrb
pop
iret
jnp
or
sub
dec
insl
out
popa
lds
jae
lret
mov
outsl
add
je
pop
jmp
out
pop
cmp
dec
jo
push
fistpl
sbb
popa
sbb
outsb
adc
sub
jae
dec
jmp
lret
int3
xchg
cmp
sbb
jle
sbb
mov
pop
mov
sub
push
scas
sub
int
and
xor
inc
push
ss
push
mov
andb
lods
das
jg
stos
xchg
sub
jl
mov
das
lahf
cmp
mov
leave
lock
dec
lods
rcrb
iret
stc
movl
mov
xrelease
cwtl
mov
cltd
movsb
push
movsb
jg
orb
xchg
call
dec
push
aas
mov
mov
jecxz
mov
ret
loope
push
imull
int
fisubs
fs
mov
in
pop
mov
icebp
int
sbb
out
lds
repz
jb
repnz
js
cmp
add
fbstp
vprotw
sbb
insl
ja
outsb
and
shlb
imul
mov
cmpsl
mov
stc
nop
add
add
outsb
sahf
clc
push
sbb
mov
inc
testl
xchg
out
aam
ljmp
fdivrs
xchg
call
mov
adc
fldcw
pusha
jl
cwtl
std
int
inc
or
mov
stos
sub
insb
push
add
inc
into
frstor
les
pusha
scas
and
inc
pushf
inc
out
mov
je
add
fwait
push
xchg
stc
pxor
push
xlat
fsubrs
ficoml
push
jne
jb
pop
cmp
popa
jns
add
mov
cmp
addr16
push
xor
dec
xor
mov
mov
add
lret
icebp
test
data16
test
nop
mov
cmpsb
xchg
pushl
jg
push
cld
and
aaa
cmp
addr16
testl
pusha
ds
repz
bound
cmpsl
int
sub
lds
idiv
mov
mov
std
xchg
dec
jmp
dec
in
jae
pop
inc
pop
insb
jle
push
and
ret
shrl
lcall
xor
aas
je
inc
je
xchg
pop
hlt
xchg
xlat
outsb
add
push
push
and
or
lods
inc
push
add
fists
cmp
js
and
adc
cmp
std
insl
std
insb
sti
mov
sbb
cmpsl
and
sub
out
or
cld
push
jecxz
add
rol
jmp
fstpl
insb
dec
shll
cmp
outsb
sbb
je
jns
or
js
sbb
jbe
dec
mov
mov
mov
popf
pop
xor
lcall
pop
cmp
adc
fisttpl
aas
pop
mov
mov
sbb
jo
sub
dec
fwait
jmp
pushf
outsl
mov
mov
fcmovb
pop
add
add
and
inc
outsl
mov
jecxz
add
test
out
fstl
dec
loop
dec
cmp
jo
out
jp
mov
ljmp
dec
adc
xchg
sub
stos
mul
inc
pushw
xchg
stos
push
outsl
das
mov
outsl
cltd
and
shll
movsb
or
ret
hlt
cli
xchg
jecxz
add
icebp
mov
inc
rol
xorl
pusha
call
test
jo
adc
hlt
dec
outsl
xor
xchg
test
fst
sub
sbb
xchg
and
data16
aam
adc
rdmsr
and
outsb
pop
sub
push
test
scas
or
int
call
and
mov
repz
and
adc
cmp
mov
push
aaa
into
xchg
push
mov
mov
inc
frstor
fucomp
push
jmp
cmp
scas
mov
loope
and
sbb
iret
inc
cmpsb
cmp
imull
jns
pop
add
ficomps
scas
add
out
jp
jl
adc
pop
lods
push
mov
sub
mov
js
cmp
ret
or
adc
ja
pop
iret
or
jp
mov
daa
repnz
test
into
loopne
into
lahf
jbe
mov
mov
sub
imul
jno
hlt
es
pop
movsb
inc
out
repz
jns
pushf
fsubrs
push
out
ror
jb
subb
mov
fs
jns
add
pop
cmc
stc
jns
xchg
inc
lret
pop
push
hlt
js
sub
fistpll
inc
nop
mov
mov
xchg
sub
cmc
adc
ljmp
and
scas
mov
pop
mov
sub
push
ret
enter
pop
out
mov
pusha
or
neg
es
pop
call
sub
push
or
xor
test
pop
in
outsb
jb
mov
addr16
mov
jb
adc
inc
mov
outsb
push
ljmp
inc
fwait
and
and
xchg
mov
nop
outsb
mov
fwait
sbb
adc
cmpsl
or
fbstp
cmpsl
xor
pusha
enter
and
inc
bound
xchg
jp
mov
or
adc
push
outsl
pop
mov
or
bound
inc
shrb
inc
fildll
push
je
aas
cmpsl
cmp
sub
pop
fistpll
cmpsl
imul
call
pop
lret
adc
sbb
testb
mov
movaps
add
sbb
ja
push
mov
insl
andb
mov
divb
test
push
jns
pop
fwait
xor
mov
js
sub
push
jmp
or
pop
pop
lock
jg
repz
ja
into
sbb
sub
xchg
xor
jb
rcll
mov
shlb
dec
mov
outsb
sti
push
popf
ljmp
cmp
jg
divl
pop
mov
mov
pop
jae
in
and
imul
cmc
xor
sub
inc
ret
pop
xchg
mov
ret
sbbb
fsubs
les
jb
movsb
or
shr
sti
loop
pop
xchg
in
bound
imul
jae
dec
lea
cwtl
mov
test
fbstp
in
add
imull
out
push
fiaddl
adc
rcrb
or
es
cmc
or
pop
das
popf
pop
ja
call
movd
arpl
movb
cld
mov
push
adc
aam
adc
lret
jp
out
inc
pop
push
add
mov
push
jg
stc
scas
cmp
cmp
pop
pop
aaa
cwtl
mov
int3
push
cmpsb
push
xchg
add
push
enter
clc
out
add
loopne
mov
jne
pop
xchg
data16
xchg
inc
mov
sub
aam
inc
push
cmpsl
mov
and
push
dec
sub
or
pop
dec
inc
sbb
mov
ret
aaa
cli
divl
cmpsb
aam
xchg
push
or
gs
dec
loopne
mov
jp
arpl
lret
ds
mov
aad
test
subb
leave
mov
sarl
andb
jo
mov
in
ret
xor
sub
imul
jb
and
lret
fnstcw
aam
inc
sbb
and
xor
adc
scas
mov
dec
aam
pop
scas
cmpsl
mov
xlat
fists
movsb
cmpsl
mov
fadd
push
das
jl
insl
scas
adc
pop
flds
es
idivb
les
sahf
and
jge
inc
fwait
popa
in
sti
loopne
enter
inc
data16
dec
das
fistl
setns
loop
shrl
cmp
out
leave
int3
mov
push
aas
clc
addb
imul
mov
incl
mov
hlt
push
push
mov
call
lds
dec
cmp
in
or
les
xor
outsl
push
jle
lods
in
rep
das
push
pop
mov
fcmove
addb
in
enter
dec
dec
inc
xchg
jmp
lods
data16
cmp
ss
jb
shll
lret
ljmp
popa
cmp
dec
and
shlb
mov
sub
scas
out
das
fwait
mov
sarb
shrl
mov
stos
xor
cmp
cmc
cmp
sub
sub
jmp
or
lcall
xor
stos
aas
or
and
xchg
and
and
xchg
xor
cs
dec
loope
jbe
sbb
push
in
adc
enter
in
call
mov
push
mov
sbbb
fwait
push
sahf
xor
sbbb
int
pop
ljmp
cmp
jle
mov
pop
outsb
lock
lds
sbb
add
jo
jp
cmp
mov
incl
ss
xchg
cmp
rcll
imulb
mov
in
mov
add
dec
mov
dec
mov
add
add
xor
insl
cmp
lcall
outsb
mov
mov
or
and
mov
shrb
clc
fs
loop
mov
movsb
mov
cmp
out
imul
jge
test
inc
imul
xchg
pop
cli
leave
rcrb
test
sti
jno
xlat
mov
xchg
js
or
or
xchg
cld
jae
in
jecxz
push
sbb
test
xor
mov
bound
xchg
push
and
ss
outsb
add
sarb
jno
insl
loopne
or
fwait
xor
cmpsb
cmp
bound
xor
in
pop
out
adc
es
dec
xor
adc
aam
mov
xor
cmp
cmp
ja
sub
sbb
or
lods
adc
pop
cmp
pop
fdivp
mov
inc
test
sub
fimuls
orb
fimuls
ss
andb
lcall
jmp
and
into
rorb
jecxz
cld
cmp
sbb
adc
out
adc
shlb
add
sbbl
pop
out
daa
sbb
pusha
mov
lea
fistl
test
xchg
push
mov
fisttpl
loope
cmp
lds
jbe
dec
das
int3
jne
ljmp
cmc
push
mov
leave
test
andl
jno
mov
sbb
imul
repz
sub
mov
add
jb
xchg
mov
fwait
mov
add
mov
test
push
jecxz
inc
adc
sbb
sti
fisubrl
push
clc
data16
sub
push
loope
dec
in
cmp
cli
imul
mov
stos
pop
pop
mov
rcrl
fmulp
jnp
xor
aas
fistps
mov
test
daa
mov
shll
outsl
xchg
pop
lock
or
inc
add
fbld
cmpsl
jp
push
cli
cmp
stc
in
test
into
xor
push
mov
aaa
push
repnz
cmp
jno
lret
mov
pop
popa
gs
shrb
mov
popf
in
inc
ret
psubw
lods
xor
jb
out
jg
daa
into
aad
and
sub
test
lock
lds
imul
or
adc
lcall
cmpsb
int
inc
gs
inc
dec
fsubs
stos
xor
inc
pusha
aad
bound
mov
dec
aas
push
mov
shlb
adc
xchg
push
jmp
sub
mul
add
in
leave
adc
inc
fdiv
pop
and
jle
arpl
pop
mov
jl
movsl
lds
ss
test
fucom
paddw
in
add
xor
push
notb
push
cld
push
movsl
popa
fcompl
fildll
xchg
inc
dec
pop
sub
loop
push
ror
inc
and
stos
xchg
xor
hlt
mov
in
std
mov
cli
movsb
shrl
jp
lds
sarl
shr
push
lods
sbb
dec
loope
scas
inc
inc
pop
std
icebp
push
mov
adc
mov
dec
mov
sarl
cmpsl
dec
std
pop
jecxz
lods
stos
cmp
sbb
push
fstp
lock
sbb
or
dec
pop
jecxz
aad
jle
in
js
fs
dec
xchg
xchg
arpl
test
lds
ret
mov
adc
fistl
dec
out
mov
mov
jp
add
inc
rcrl
sbb
pop
popa
aaa
jae
lea
les
jo
cmc
subb
mov
cmc
mov
mov
jmp
mov
test
fwait
iret
jp
pop
enter
add
mov
and
mov
jle
cli
mov
inc
inc
stos
mov
inc
push
fbstp
sbb
mov
pop
push
repnz
mov
or
pop
out
data16
icebp
daa
movups
ret
fistpll
cwtl
into
xor
je
dec
aam
pop
lock
lods
push
pushf
and
orb
sar
ja
cli
fidivs
pop
lret
jecxz
ret
lods
cs
enter
xor
js
repz
out
push
mov
ljmp
leave
js
xchg
aas
and
push
fwait
pop
xorb
in
mov
inc
xchg
int
lfs
clc
test
push
ds
lea
xchg
xchg
jmp
scas
shll
pop
jb
mov
push
mov
js
fstl
mov
mov
imul
popf
mov
test
repnz
pop
cli
rorl
mov
push
les
scas
sbb
rolb
jns
out
adc
fmulp
stos
mov
incl
cmc
test
sahf
push
out
sub
cld
outsl
push
xor
add
jae
inc
mov
xchg
push
test
cmpsb
dec
xor
aas
mov
xor
stos
dec
in
mov
lods
inc
xchg
test
scas
cli
ds
mov
dec
or
rcrl
pop
fsubr
subl
ja
adc
push
lret
fnstsw
pop
add
push
jbe
loope
fdivl
cld
outsl
test
inc
mov
ret
fidivrl
int3
arpl
pop
test
xchg
or
xchg
fdivrs
dec
fnstsw
dec
or
add
jp
pushf
jmp
xchg
nop
das
add
imul
sub
push
data16
or
test
xchg
add
cmp
stos
sbb
js
mov
inc
ds
cmp
lds
push
jecxz
jecxz
xchg
movsb
and
xchg
dec
ds
ljmp
jno
xchg
cld
push
cmpsb
mov
sbb
lahf
andl
mov
pop
cs
mov
fimuls
filds
pop
mov
jl
mov
in
adc
loopne
jge
jbe
aas
ja
mov
inc
pop
xor
pusha
sbb
xchg
jbe
xchg
repz
cwtl
sbb
pop
add
xor
jecxz
cmpsl
ret
rcr
stos
imul
sub
dec
out
icebp
hlt
or
fistl
dec
jmp
outsb
fldcw
cs
xor
mov
mov
jp
fcmovnu
add
out
jmp
and
pop
es
in
aas
adc
jo
xor
loop
pop
fs
lea
cltd
ja
sbb
imul
xor
divl
lds
push
sub
xchg
adc
push
lret
or
rcrb
fldt
sub
icebp
and
jne
mov
xor
and
loopne
mov
mov
mov
inc
adc
fidivs
aaa
cmc
dec
ds
test
adc
mov
mov
or
aam
ja
add
repz
fisubs
and
inc
xchg
sub
and
jmp
bound
or
inc
jnp
mov
xchg
jp
sahf
lods
xchg
lret
and
xorb
xchg
push
jo
out
bound
cltd
push
xchg
int
mov
fucomip
lds
andl
jbe
push
xchg
push
jne
scas
mov
push
lret
sbbb
jb
jl
push
mov
cld
leave
mov
repz
clc
sub
addr16
mov
test
mov
scas
cmp
sbb
jge
mov
loop
rcrb
fimuls
add
mov
test
push
jmp
adc
jo
pop
jb
cmpsb
push
arpl
cltd
adc
mov
scas
ret
hlt
iret
call
add
lods
test
rcll
pop
andb
pop
mov
fsubp
cmp
test
out
xchg
dec
std
push
out
adc
mov
xchg
pop
xchg
xor
in
pop
and
out
inc
xchg
ljmp
adcl
mov
inc
adc
jle
fnstenv
lahf
int3
xor
fiadds
mov
loope
das
test
mov
mov
or
jl
inc
sbb
adc
mov
fdivl
fisubs
push
and
mov
arpl
les
imul
shlb
into
jge
stos
xor
pop
inc
mov
cmpsl
leave
test
xchg
shrb
xor
push
jge
into
dec
fsubrp
xchg
adc
fidivl
das
ror
subl
add
popf
or
dec
sbb
call
or
iret
add
outsl
mov
inc
sbb
ds
xor
das
neg
push
xchg
and
int3
jno
xchg
loop
cmc
mov
or
sti
mov
fchs
stc
xchg
jmp
push
sarl
pop
out
or
aaa
cli
clc
cwtl
testb
bound
popf
xchg
imul
out
or
fwait
add
mov
xor
sbb
push
fdivl
adc
jp
cmc
cmp
lods
lahf
cwtl
dec
lds
fistl
popf
and
sbb
mov
out
xchg
dec
sub
sahf
jg
loop
mov
ret
shl
es
pop
gs
mov
xor
adc
push
or
mov
mov
push
test
add
xchg
in
push
bound
fs
jnp
mov
or
scas
lret
cmp
pop
add
mov
int
rcll
mov
call
into
gs
iret
arpl
iret
cmp
andb
mov
mov
dec
push
test
fiaddl
lods
das
pop
test
cmp
loope
in
mov
pushw
insl
cmpps
out
test
and
cmp
std
pop
ja
and
pop
xlat
scas
or
daa
popa
add
ret
cs
loope
in
sbbb
push
cmp
mov
inc
add
dec
lods
sbb
popf
push
xchg
sub
ds
and
mov
outsb
int3
aas
std
insb
jmp
insl
les
outsl
mov
mov
add
scas
jge
int3
loop
mov
stc
call
divl
pop
loopne
xchg
divb
lahf
fs
lds
out
inc
add
cmp
popa
jne
shlb
add
push
imul
cs
aam
xor
lret
lea
lea
aad
in
scas
or
mov
add
test
enter
sbbl
test
mov
in
dec
inc
mov
mov
xor
pusha
cli
lret
imul
stos
les
stos
xchg
dec
sub
mov
pop
jb
stc
mov
dec
xchg
jl
movsb
lods
mov
push
xchg
dec
xor
or
adc
cmp
add
cli
mov
imul
aam
adc
sbb
mov
pop
sub
hlt
mov
rorb
push
out
popa
lea
jge
fbstp
jp
cmpsb
sbb
adc
enter
js
inc
jno
sub
push
push
je
or
movsl
push
inc
mov
iret
sub
stos
ss
push
mov
adc
cld
jl
xor
leave
add
cli
roll
sub
push
je
aam
int
and
xor
sub
es
push
xchg
popf
mov
push
sbb
ss
ds
push
loope
jb
jae
pop
mov
andb
divb
cwtl
mov
bound
cmpsl
rorl
adc
iret
xchg
stos
add
cmc
adc
cmc
dec
sbb
inc
push
push
jae
xchg
fld
xor
cwtl
loope
mov
add
dec
dec
xor
loope
cmp
add
sub
mov
cmpsl
clc
xchg
lock
pop
cmpsb
lock
jne
inc
xchg
imul
iret
cmc
mov
aam
test
mov
ljmp
popa
stos
outsb
adc
add
loopne
cmc
dec
jle
in
lahf
aam
in
daa
out
sbb
stos
out
pushf
fisttpl
scas
and
jno
mov
and
mov
pop
and
shll
inc
add
cs
xchg
testb
jl
and
push
xchg
incl
mov
push
or
outsb
add
push
xchg
fs
sarl
iret
adc
inc
mov
mov
sti
out
mov
lcall
pop
cmp
sub
sub
xchg
or
jb
adcb
daa
sub
pop
push
lods
mov
lret
cs
and
and
dec
pop
lret
rolb
test
ja
mov
dec
pop
inc
mov
jnp
inc
lods
test
lret
jns
xchg
test
in
stos
lret
pop
cmc
xor
sbb
outsl
mov
xor
adc
add
mov
bound
mov
mov
jns
aam
sti
out
or
jae,pt
out
xchg
outsl
mov
sbb
mov
aam
stos
lds
xlat
or
push
sti
not
insb
jo
out
sahf
adc
in
repz
mov
lods
daa
in
movd
xor
in
addr16
push
out
inc
mov
jnp
fistpl
call
fnstsw
pop
push
jl
outsl
push
lock
shll
adcb
or
sub
movsb
lret
mov
bound
lods
fcmovnbe
mov
xchg
cmpsl
inc
push
and
pop
mov
dec
inc
in
lea
mov
imul
int3
movsb
push
les
mov
mul
mov
les
daa
xchg
mov
or
outsb
mov
mov
pop
insb
jle
mov
mov
insb
lea
xor
xor
jb
pop
and
cmc
fcmovnb
pop
ficoms
xorl
mov
push
mov
shll
jecxz
fadds
rclb
aam
repnz
jne
arpl
ror
popf
es
sbbb
dec
push
sti
cmpsl
pop
sub
sahf
cmc
sbb
sub
adc
jp
movsb
jp
in
and
inc
push
je
adc
movsb
xchg
outsb
cmp
lock
or
out
outsb
js
loopne
jae
cmc
test
sub
inc
sub
push
fnstsw
aam
jae
ss
sub
mov
fldl
outsb
insb
push
out
dec
mov
xor
xchg
outsb
orl
cmc
nop
and
js
push
test
add
add
bound
stos
inc
cmpb
xor
imul
xchg
mov
fimull
jl
imul
fnsave
daa
mov
mov
pop
lock
xor
rclb
dec
loope
loope
push
lahf
cmc
cmp
and
or
jnp
mov
mov
adc
or
inc
push
add
testl
aaa
repz
loope
mov
push
add
iret
movl
mul
jb
pop
sub
jle
fxch
xlat
push
js
test
lcallw
push
repnz
das
dec
add
mov
fcmove
mov
sbb
inc
aam
dec
push
test
leave
xor
mov
repnz
cmpsb
ret
jns
fadd
or
pop
cmp
aad
sbb
in
loop
xchg
and
dec
aad
jl
pop
insl
pop
js
xorb
andl
outsb
pop
mov
adc
mull
mov
popl
rorb
pushw
lret
xor
ret
and
cmp
sbbl
or
dec
lcall
mov
arpl
xchg
mov
dec
repnz
insl
or
mov
xchg
shrl
insl
int
iret
arpl
mov
push
enter
icebp
adc
sub
int3
mov
inc
dec
and
mov
lods
ljmp
pushf
cli
ds
fwait
subl
dec
or
mov
add
fsubl
jp
cmc
xchg
mov
or
dec
mov
mov
and
xor
jns
push
sbb
ljmp
cmc
loop
loopne
jae
sbb
sub
loope
pop
mov
dec
adcl
je
xor
xchg
pushf
mov
outsb
push
lea
shrb
fsts
mov
out
scas
inc
and
rcl
inc
xor
xor
push
inc
and
xchg
push
add
add
popa
into
fldcw
adc
xchg
lret
popf
enter
adc
mov
mov
insb
pop
js
sub
lcall
inc
sbb
dec
fbstp
daa
add
call
sbbl
pop
mov
scas
mov
mov
ret
xor
mov
daa
jecxz
loop
cltd
mov
jecxz
pop
imul
aaa
pop
outsb
inc
scas
jnp
addl
cmc
les
mov
loop
pusha
repz
dec
or
scas
fdivrl
mov
imul
dec
stos
cld
or
push
lds
and
insb
sahf
sbb
xchg
inc
lret
mov
sub
clc
pushf
in
mov
sub
push
or
sbb
inc
dec
jp
outsl
scas
les
fwait
aas
mov
lea
xchg
dec
out
or
outsb
adc
aad
and
daa
mov
or
insl
dec
or
push
inc
sub
jns
sbb
iret
cmpsb
push
push
xor
jo
push
lock
sbb
jne
and
das
test
add
push
mov
mov
movsl
ret
lods
call
adc
inc
pop
jno
cmp
dec
filds
cmp
mov
je
inc
enter
nop
sub
adc
rcrb
cmp
enter
addr16
iret
fistl
negl
sub
add
jl
scas
cmp
push
inc
pushf
sarb
dec
jne
out
fmull
mov
cmc
jl
repnz
out
sbb
push
iret
xchg
inc
cwtl
lds
inc
push
insl
push
push
out
inc
mov
jno
lahf
mov
and
clc
lods
mov
mov
sub
aas
fdivp
sub
out
or
loop
xor
lret
jbe
cltd
or
test
call
cmpsb
or
sub
mov
mov
ret
outsl
daa
outsb
mov
mov
xchg
insl
repz
addr16
dec
mov
fstl
sub
jp
into
mov
jb
push
call
or
lahf
mov
rorb
inc
pop
mov
aam
roll
dec
ffreep
pop
dec
in
push
mov
mov
sbb
loop
ficompl
movsb
mov
out
pop
outsb
sub
sbb
aas
and
test
cld
dec
pusha
and
cld
adc
xor
ret
dec
mov
adc
aad
testb
xchg
stos
xor
xchg
sub
dec
incl
jne
and
or
test
pop
dec
pop
hlt
mov
mov
mov
jnp
aam
push
inc
pusha
dec
nop
daa
fwait
addl
jl
jle
push
sbb
xlat
outsl
imul
add
pop
jae
mov
xchg
frstor
lahf
ss
mov
aad
and
into
or
fmull
or
push
and
xor
cli
adc
aad
add
dec
js
out
or
andl
mov
mov
pusha
or
jb
mov
cli
adc
popa
xor
add
popf
aam
sub
add
test
jle
outsl
sbb
stos
push
mov
sbb
jae
jne
jns,pt
test
shlb
adc
arpl
icebp
jne
loope
repz
clc
xor
mov
dec
xchg
sub
mov
jne
and
icebp
add
es
pop
mov
mov
cwtl
insl
cwtl
clc
mov
lds
ret
sti
push
pop
arpl
ja
subb
sbb
int
fwait
arpl
mov
rolb
push
sbb
mov
repnz
shll
stos
push
mov
xchg
mov
repnz
loopne
lea
iret
adc
out
stc
mov
push
test
dec
nop
sub
pop
pop
mov
imull
jae
std
les
mov
aad
xchg
and
enter
add
lret
pop
and
fucompp
icebp
xchg
in
xor
cmpsb
or
cmp
insb
loope
sbb
mov
push
ds
jo
imul
adc
jmp
cmc
scas
mov
mov
sub
movsb
push
and
xchg
mov
jp
notl
call
or
push
pop
pop
and
scas
adc
cli
xlat
je
dec
pop
inc
mov
imul
pushf
xchg
jle
jns
cmp
xchg
andb
and
cmp
jmp
xor
and
push
xor
pop
cmp
push
inc
dec
adc
in
out
inc
jle
inc
in
loopne
cltd
arpl
mov
je
pop
mov
iret
mov
adc
insb
je
int
insl
std
push
sbb
mov
and
insl
push
mov
daa
push
jno
mov
mov
stc
in
inc
ficompl
lret
sbb
and
inc
test
icebp
mull
push
xchg
pop
popf
lds
popl
cs
enter
and
jo
pusha
in
mov
jmp
popa
into
insl
mov
icebp
xchg
mov
fnstenv
lahf
xchg
xor
adc
flds
imul
mov
pop
data16
shl
push
lret
add
push
ljmp
shll
aaa
gs
loop
push
pop
mov
dec
leave
lahf
lahf
mov
arpl
push
push
test
adc
das
cli
icebp
repnz
fisubrl
test
dec
ret
out
shll
sub
and
outsl
cmp
cmp
cmpsl
sub
pusha
cmp
test
outsl
not
add
rclb
dec
in
add
rcrl
or
popf
cwtl
pop
adc
cmp
movsl
cmpsb
mov
popa
push
jne
outsl
bound
or
mov
out
xor
xchg
ja
mov
inc
dec
out
inc
outsl
adc
mov
fwait
inc
test
int
out
scas
rcrb
dec
loopne
repz
out
sub
sbb
pop
cmc
adc
loop
mov
test
jns
inc
lods
fistpl
and
and
subl
cmp
lods
and
inc
xor
stc
movsl
icebp
aaa
xor
xchg
mov
jno
jge
addr16
sbb
and
inc
arpl
fsubrl
out
imul
cmp
adc
sub
mov
test
mov
xor
es
lods
jmp
mov
jb
add
jne
pop
jno
cmp
ror
mov
dec
add
cmp
stc
nop
int3
jbe
das
test
cmpsl
jns
cmp
mov
andl
insb
push
xchg
add
mov
mov
push
sbb
leave
mov
pop
mov
inc
fistps
mov
xor
fidivs
sub
test
ret
cld
jg
sbb
jle
es
fnstenv
cmpl
adc
loopne
repnz
add
ss
ret
push
in
repnz
dec
pop
shll
push
mov
ss
inc
sbb
dec
gs
pop
ja
addr16
ret
popa
fdivrl
sbb
push
pop
add
mov
mulb
out
xchg
xor
and
stos
sub
leave
cwtl
mov
bound
cmp
insl
and
bound
xor
sub
pop
testb
nop
sub
push
add
adc
sbb
xor
sub
in
ficoms
cld
push
cmp
push
in
xor
outsl
notl
push
rol
mov
jb
ret
mov
sahf
adc
xchg
daa
jmp
mov
inc
aas
cmpsb
aas
mov
int
xchg
sub
ss
mov
jo
inc
shrl
icebp
fistl
jp
sub
sub
insl
pop
mov
arpl
inc
jne
xchg
iret
outsl
mov
mov
mov
into
into
les
fstps
pop
dec
fbstp
lret
mov
mov
cbtw
movl
pop
dec
in
jb
in
xchg
mov
dec
and
sbb
jb
mov
push
add
inc
mov
jle
fcoms
fsubr
sbb
push
cli
jecxz
lock
aad
push
sub
repz
inc
jae
sbbb
int
cmp
sbb
mov
or
iret
data16
jle
cmp
je
adc
push
sbb
jp
icebp
pop
inc
mov
pop
mov
mov
ficoms
sbb
and
push
jmp
inc
and
lock
jg
int
aad
test
popf
mov
js
add
and
jno
clc
jmp
cmc
mov
mov
stos
mov
push
test
jb
or
adc
mov
fs
cli
decl
dec
rcl
cmp
dec
dec
mov
dec
inc
inc
or
mov
and
adc
xlat
hlt
or
out
dec
hlt
xor
frstor
leave
negl
sti
xor
push
inc
ret
xlat
subl
lock
pop
pop
cmpsb
in
fcoml
push
les
push
jno
push
hlt
cmpsl
sub
inc
push
aaa
pop
jle
dec
lock
ja
or
push
adc
xchg
or
xchg
mov
leave
dec
jo
mov
shrb
outsb
mov
xchg
mov
inc
call
iret
ror
int
cmpsl
ds
fnstenv
mov
jnp
in
jmp
push
push
ret
sbb
xchg
push
and
or
inc
xchg
dec
xor
jmp
je
inc
jp
std
jae
sti
shr
mov
fs
xchg
mov
pusha
mov
pop
int
sub
add
cmp
mov
push
jmp
dec
test
pop
lahf
pop
arpl
in
sbb
inc
vsubpd
test
imul
movb
test
inc
pusha
inc
mov
mov
mov
mov
inc
shlb
or
jecxz
int
jmp
mov
cmpsl
xor
leave
cltd
das
mov
jnp
pusha
fdivs
adc
and
push
cmp
gs
negl
sarl
stc
gs
adc
mov
dec
mov
aam
lods
sar
cld
pusha
push
cs
aaa
sbb
and
insb
mov
push
mov
rcrl
sbb
push
add
scas
dec
in
mov
cmc
je
aad
sbb
sahf
test
dec
outsl
ret
mov
dec
std
xchg
dec
in
xchg
dec
cmpb
mov
ds
hlt
and
rep
adcb
cmpsb
mov
iret
loop
sub
jmp
shrl
add
ja
jns
sub
filds
fiadds
xor
ljmp
je
push
insl
mov
popf
in
add
in
cli
int3
mov
lret
in
ret
push
xchg
xchg
stc
add
rolb
pop
cld
or
mov
mov
xor
inc
shlb
fucom
mov
incb
lock
enter
mov
out
jne
cltd
mov
shrb
cwtl
repnz
sub
ja
es
adc
mov
cmp
mov
and
lret
mov
push
shr
test
icebp
jns
xor
sbb
mov
sub
int3
std
jg
push
stos
lds
sbb
sahf
dec
je
ret
cs
or
cmp
jno
add
mov
jns
pop
out
aad
mov
insl
cmc
mov
sti
cmp
sub
pop
adc
sub
mov
js
ds
jmp
or
jno
loope
pop
jbe
lret
sbb
test
jne
cmpsb
push
movsl
fdivs
sub
jp
sub
pop
std
sbb
fbstp
cmp
int3
out
mov
adc
inc
in
push
cmp
inc
sbb
mov
add
fcmovnbe
pop
test
loope
mov
mov
popa
nop
xor
loope
and
cld
or
mov
xchg
es
ret
xor
lock
or
in
jmp
ffree
lret
jne
out
mov
in
outsl
push
mov
fstl
jb
xchg
mov
mov
mov
and
stc
cmp
ljmp
sbb
scas
mov
push
push
push
mov
dec
inc
scas
push
fcoms
daa
xchg
ds
insl
loope
push
fisubl
or
push
sub
xor
mov
cmp
mov
dec
or
cmc
ret
pop
inc
out
xchg
sub
imul
pop
es
call
pop
and
cmp
pop
mov
mov
lods
jecxz
pop
hlt
xor
pop
xorl
xchg
pop
aam
js
in
addl
adc
and
dec
cmp
movsl
cltd
xchg
jns
mov
js
ret
and
cmp
xchg
aaa
and
cwtl
imul
pop
add
xchg
imul
cmp
arpl
fstl
sbb
into
lahf
push
roll
jecxz
dec
xor
fimuls
jmp
and
cwtl
dec
out
stos
cmp
adc
int
xor
outsl
insl
jb
fisubrl
insl
mov
clc
mov
and
xchg
mov
and
push
lea
ljmp
push
mov
test
and
in
std
or
mov
pushf
in
mov
out
scas
outsl
cli
sub
lods
in
jp
jbe
xor
xor
xor
rcrb
repnz
push
ja
adc
divl
in
xchg
scas
sbb
pop
fnsave
je
in
push
shr
push
add
scas
xor
xor
inc
inc
pop
sub
dec
in
jge
mov
push
lret
scas
mov
fcomps
and
movsl
test
cmpsb
mov
into
fs
insb
scas
in
and
jnp
sti
jne
jmp
sbb
scas
mov
add
imul
mov
iret
popa
add
cmpsb
or
mov
cld
rolb
lss
dec
jmp
rclb
or
repnz
iret
xor
add
fstp
push
icebp
cmpl
mov
adc
insb
scas
sbb
cltd
dec
in
insb
hlt
inc
mov
push
add
sub
stos
outsb
jns
mov
inc
iret
push
fdivl
dec
dec
gs
sti
xchg
cmp
mov
jmp
bound
stos
add
xorl
xor
mov
pop
push
loope
add
pop
lret
es
fs
and
in
mov
jo
sbb
das
xchg
push
dec
fnstenv
ret
iret
fcoms
mov
insl
iret
adc
mov
orb
cmp
jl
out
mov
xor
ret
fcomps
ret
stc
dec
add
push
cmc
cwtl
das
daa
mov
out
xor
xor
dec
pop
call
ds
ljmp
rolb
int
mov
add
and
mov
jg
xchg
mov
mov
xlat
xchg
sub
push
lret
into
or
movsl
xchg
or
jnp
sub
mov
push
mov
or
cmpsb
and
leave
xor
ficoms
add
test
push
stos
and
inc
adc
mov
mov
inc
xor
in
ffreep
add
scas
inc
sub
push
adc
int3
pop
jb
js
addl
inc
adc
add
aas
push
outsb
add
subl
clc
cs
shll
dec
pop
mov
jl
ret
mov
mov
movsl
or
add
cmp
sub
test
je
pop
rorl
pop
add
mov
sbb
lret
in
out
sbb
jne
les
sub
mov
mov
out
notl
ljmp
push
and
xchg
stos
das
sub
add
popf
inc
icebp
test
xor
xchg
insl
repz
pushf
xor
test
xlat
mov
cmpb
data16
xchg
inc
fldl
cld
loope
mov
add
xchg
decl
roll
outsb
and
jno
cltd
dec
pusha
test
ja
scas
test
fadds
jae
stos
inc
rcll
mov
cmpsl
leave
pusha
fcomp
sbb
lcall
mov
imul
mov
out
popa
mov
fsubrl
mov
pop
mov
test
add
add
push
and
xchg
lret
or
mov
sub
clc
test
mov
dec
jp
fstps
dec
cli
insb
fnstcw
imul
fldt
sbb
cmc
hlt
stos
xlat
add
pop
sbb
notb
xchg
fsubrs
or
pop
cmp
sbb
loope
dec
inc
pop
mov
int3
daa
mov
ja
shll
push
inc
enter
cmpsb
fst
addr16
inc
push
rep
out
inc
sbb
xor
test
push
nop
inc
fwait
push
pop
or
mulb
scas
ret
cmp
ret
in
aaa
sbb
bound
xor
add
dec
dec
sbb
int3
arpl
inc
cmp
out
lods
dec
mov
jbe
repnz
xchg
cs
inc
repnz
aad
pushf
shr
popa
outsb
mov
inc
hlt
mov
insb
cmpsl
or
inc
jle
push
outsl
ficoms
popa
aam
mov
ret
lods
cs
fsubrs
or
cli
adc
sbb
xor
daa
enter
sub
fs
jle
jl
imul
xorl
lcall
jbe
push
addr16
psubusb
push
std
pushf
ds
pop
jb
nop
call
jne
aaa
sub
je
adc
sahf
lods
shll
imul
in
lods
inc
out
push
pop
cmp
shrl
add
dec
sbb
icebp
lcall
pushf
mov
pop
jbe
mov
inc
or
adc
mov
cmc
inc
pusha
in
outsb
rcr
mov
push
sbb
xchg
dec
or
das
lahf
pop
outsl
ret
sbb
pusha
sub
enter
into
mov
inc
push
subb
sub
inc
ds
js
hlt
pop
cmp
xor
movsl
push
js
test
pusha
repnz
xchg
test
jnp
bound
and
xchg
or
dec
aaa
sub
orl
push
and
jmp
repz
jp
frstor
add
or
mov
in
xchg
jecxz
rcl
xchg
div
outsb
mov
jl
push
mov
fdivrl
shlb
and
mov
fsts
test
daa
or
leave
mov
gs
out
pop
cmpsb
sbb
std
pop
sbb
and
sti
or
push
xchg
mov
scas
jne
adc
in
mov
movsb
inc
daa
jb
pop
int
adc
cmp
lcall
xchg
int
inc
jno
push
mov
test
lret
mov
xchg
push
inc
cmc
push
add
stos
movsb
pop
fidivl
shlb
daa
out
or
dec
pop
icebp
inc
pop
inc
fs
test
mov
cmc
jns
stos
cmpsl
push
loope
mov
sbb
adc
jnp
adc
imul
inc
sbb
cmp
nop
arpl
inc
adc
jmp
or
sahf
cmp
punpckhdq
mulb
mov
inc
cli
repz
cmp
cmp
fstl
cmp
xchg
js
add
sbb
repz
lea
stc
mov
fidivrl
mov
loopne
inc
aad
stos
add
test
outsl
mov
and
nop
pusha
mov
cld
jle
mov
adc
call
scas
and
xchg
movsl
mov
push
insb
jno
dec
xor
dec
mov
push
push
mov
mov
fsubrs
mov
mov
insl
popl
insb
xor
imul
repnz
lret
cwtl
bnd
popa
jmp
or
add
ror
mov
jne
dec
mov
or
push
imul
push
leave
mov
xchg
dec
fisttps
dec
inc
fstpt
loopne
repz
mov
add
mov
test
mov
sarl
js
cltd
lods
and
xchg
addr16
lds
sbb
dec
adc
xor
adc
jb
or
dec
add
fidivs
xchg
in
mov
xchg
add
pop
je
xor
push
xchg
sub
jne
ret
pop
mov
stos
cwtl
xor
int3
or
sbb
es
pop
aad
adc
scas
aas
mov
xor
mov
ljmp
or
sub
in
inc
pop
xorb
mov
jb
clc
pop
cmc
sub
jl
cmc
pop
xor
repnz
and
xchg
xchg
rcl
dec
inc
pusha
dec
push
mov
xchg
pop
shlb
iret
movsl
inc
mov
loopne
cmp
mov
sub
cmp
das
add
movsb
int3
pslld
and
imul
jno
xorl
mov
ret
sbb
push
push
in
scas
cmp
lods
adc
rcrb
call
pop
fidivs
popa
inc
mov
cmp
mov
aas
push
inc
and
lea
and
outsb
push
mov
lds
inc
popf
sub
es
sti
ret
mov
imul
xor
movsb
mov
cli
xchg
lret
testb
in
sbb
dec
pop
cmp
arpl
mov
fcmovnb
test
into
cli
enter
mov
subl
inc
push
pop
adc
xchg
sub
adc
jle
pop
push
pop
and
push
out
inc
insl
mov
lret
xchg
push
jne
flds
iret
jo
dec
ds
dec
lcall
mov
nop
call
in
fwait
test
mov
popa
mov
pop
das
push
ret
xor
cmp
imul
push
mov
push
lods
mov
je
mov
repnz
or
adc
mov
movsb
fwait
stos
cmp
or
jp
mov
and
fsubs
push
mov
lret
and
nop
push
lock
mov
fwait
test
loop
repnz
and
and
leave
mov
fcomip
js
bnd
icebp
cmpsl
mov
add
adc
push
mov
pop
icebp
sbb
pop
push
fldcw
pop
and
rcll
sbb
add
lock
xchg
jbe
push
das
ja
popa
ja
testl
ljmp
clc
jg
aad
adc
orl
jno
cmp
add
in
xorl
ljmp
ss
mov
inc
inc
icebp
in
sbb
ret
xchg
jecxz
mov
mov
mov
sbb
mov
sub
pop
test
inc
loopne
jne
test
in
sbb
sahf
ss
ljmp
mov
add
fisubs
imul
push
xor
icebp
std
cltd
aas
mov
je
and
cmp
add
dec
ss
loope
mov
and
push
outsb
mov
lock
call
loopne
shll
dec
ja
mov
lods
add
add
andb
inc
or
cmc
mov
sub
or
jge
dec
ffreep
xchg
or
or
cwtl
lret
js
jmp
mov
push
or
inc
dec
jl
out
push
jmp
fildl
xchg
inc
add
or
stos
nop
dec
push
loopne
jb
jb
pop
mov
adc
stc
test
mov
adc
fcoms
aas
jae
fwait
pop
mov
inc
sbbl
clc
in
jne
push
add
mov
lods
push
jmp
and
mov
inc
jns
aaa
jo
movsb
cmc
xchg
mov
push
aas
push
dec
in
test
cltd
sub
add
mov
jle
mov
enter
mov
outsl
mov
sbb
subl
dec
add
adc
cli
ds
insb
jo
push
popf
shrl
xor
fs
mov
jns
pop
rorl
pusha
call
aas
adc
jmp
mov
xchg
jno
scas
sub
movsb
mov
sub
cmp
inc
lret
bound
out
repnz
les
imull
fcomps
in
mov
mov
xsha256
cmpsb
rorl
cmp
pop
sub
idivb
ja
jno
xchg
sub
ja
or
inc
mov
cmp
daa
lds
scas
call
adc
mov
sub
adc
dec
mov
lock
and
jp
mov
cmp
int
xlat
push
adc
subl
aas
dec
add
outsb
lds
aas
rcrb
add
popf
add
es
sti
mov
imul
mov
pop
cmc
fs
dec
leave
jecxz
jl
ja
push
add
popa
add
mov
push
sti
jge
xchg
xor
out
dec
shlb
and
stc
mov
fiadds
push
mov
adc
dec
jbe
mov
and
xor
cmp
sub
pop
xlat
hlt
mov
mov
sub
jg
ret
cli
shrl
or
jp
bound
mov
call
test
adcb
in
mov
ljmp
les
sub
stos
fidivrl
cmpb
shrl
lds
xchg
and
decl
jecxz
sahf
push
add
push
out
adcb
inc
dec
or
sbbl
xor
lea
test
fwait
data16
and
xor
idiv
icebp
inc
or
mov
js
lret
add
and
leave
repnz
rolb
out
jge
xchg
sub
enter
cmp
ljmp
xor
cmp
call
sahf
leave
movsl
jns
xlat
and
icebp
push
adc
bound
ja
mov
iret
fs
or
cltd
sbb
in
inc
stos
shrb
arpl
js
imul
out
pop
rol
jp
adc
and
mov
out
inc
shr
aam
dec
pop
fnstcw
sahf
sbb
push
shlb
push
and
or
test
neg
pop
adc
inc
aas
push
icebp
and
xchg
cmpsl
fwait
das
lcall
cltd
cmpsl
dec
inc
or
lods
jb
fstp
jnp
mov
jg
push
ja
jb
ret
pop
pushf
dec
test
bound
imull
and
inc
ret
into
sbb
repnz
lcall
lods
fcomps
lds
adc
adc
shrb
bound
lahf
call
sub
imul
sahf
clc
mov
in
test
mov
scas
imul
scas
add
xor
jbe
bound
xchg
mov
xor
frstor
jo
cltd
enter
mov
ret
imul
jbe
add
inc
data16
ficoms
je
or
cli
rol
pushl
mov
scas
pushf
ds
roll
cld
popf
pop
cmpsl
adc
leave
rolb
jl
shlb
sbb
les
filds
inc
xchg
xchg
jl
loopne
xchg
xchg
dec
clc
jle
push
out
push
sbb
and
pop
gs
mov
push
xchg
add
dec
jmp
insl
cmovg
sub
hlt
mov
sti
jae
mov
xchg
inc
loope
jbe
aas
add
add
imul
push
xor
pop
sti
adc
stos
out
sbb
mov
lds
dec
insb
sbb
nop
js
push
lcall
in
jns
packssdw
inc
and
es
mov
movsb
mov
jb
test
dec
out
dec
sahf
inc
sbb
je
iret
xor
jno
xchg
push
xchg
ret
mov
mov
sbbl
sbb
jb
xchg
add
scas
mov
push
shlb
cmc
sarl
cmc
ret
outsl
sub
mov
shlb
push
xor
fdivrl
xor
scas
mov
pop
sbb
daa
mov
xchg
pop
pop
out
mov
and
loope
mov
mov
adc
mov
mulb
push
ds
repnz
adc
jbe
xor
or
stc
ret
and
sub
lret
push
inc
push
fsubr
xchg
jbe
icebp
cmp
and
push
cld
rcl
xor
mov
ret
fmuls
jo
jp
ret
rorl
rorl
icebp
loopne
test
adc
pop
xchg
shl
fmull
dec
mov
mov
xor
repnz
cs
mov
lds
add
and
and
jg
in
xor
mov
jmp
cmp
adc
mov
adc
es
cmpsl
mov
sub
dec
shll
pushf
sub
push
pop
mov
or
jns
mov
and
mov
pop
cmpsl
jle
lret
and
dec
rorb
enter
jmp
or
mov
scas
inc
mov
lret
xlat
int
and
inc
mov
dec
dec
ja
dec
outsb
iret
mov
fbstp
popf
pop
inc
mov
or
rclb
mov
xchg
ret
aad
cli
in
in
sbb
add
mov
or
adc
cmpb
outsl
testb
mov
pop
add
adc
sub
cmp
add
cltd
outsl
mov
scas
sarl
mov
jg
xor
push
outsl
movsl
sub
shlb
inc
mov
leave
int
sti
xor
jbe
mov
outsl
jo
xchg
insb
in
fisubl
mov
or
test
add
or
fsubrs
or
dec
fisubrs
cmp
mov
testl
adc
clc
mov
mov
int3
jmp
mov
lock
xor
mov
push
ss
fcomps
xor
out
push
mov
das
out
repz
shlb
add
daa
and
lock
lods
adc
cmp
out
xor
orl
pop
sbb
pop
sbb
in
cmp
jno
dec
out
dec
out
and
adc
dec
adc
leave
adc
fisubs
sub
andl
sub
stos
cli
or
cmc
xchg
addr16
xchg
and
inc
sbb
cld
int
fwait
jne
pop
cmc
push
xchg
xchg
mov
insb
decl
push
add
mov
push
jns
xor
xor
cmp
cmpl
and
and
sub
sti
es
mov
subb
lock
sbb
popa
xor
or
and
test
aam
pop
mov
sahf
gs
out
or
push
out
jp
cld
mov
sbb
imul
cmpsb
pop
popa
adc
adc
mov
pop
ret
sbb
sbb
std
xor
jne
sbb
dec
cld
aaa
adc
push
xor
aam
mov
in
mov
xchg
test
lret
lcall
xchg
cmc
xor
mov
sub
cmpb
mov
add
push
in
xchg
daa
outsl
iret
sbb
jecxz
push
clc
push
push
xchg
imul
sub
jp
mov
rol
mov
icebp
sbb
imull
mov
pushf
cmp
aaa
adc
xchg
sahf
cmc
out
es
pop
jge
mov
add
mov
dec
inc
inc
inc
lret
lds
jg
aas
or
popa
outsl
jg
jle
dec
mov
jb
push
push
dec
or
stos
dec
dec
xchg
out
sbb
loopne
add
rcrl
shll
scas
mov
xor
js
mov
lods
scas
inc
push
gs
xchg
dec
aas
das
aad
xor
inc
cld
mov
push
or
xchg
xchg
xor
mov
loop
mov
xchg
insl
mov
stos
hlt
dec
lock
out
and
cmpsb
jbe
jecxz
mov
imul
in
ljmp
int
push
mov
mov
out
mov
xor
arpl
ret
sbb
outsb
inc
lcall
dec
inc
cmc
cli
dec
push
mov
xlat
sub
scas
adcl
mov
xchg
mov
xchg
in
nop
mov
imul
mov
rcll
xrelease
and
pop
in
iret
sub
jg
negb
pop
mov
dec
xor
xorl
lahf
lret
sbb
pushf
jne
adc
inc
inc
pop
std
push
imul
ss
lods
test
push
xchg
movsb
dec
or
lea
insb
lds
push
dec
movsl
mov
sub
mov
cmp
ss
ret
inc
aam
std
push
and
fnsave
mov
lcall
cli
inc
sbb
sub
jge
inc
dec
dec
cmpsb
lods
dec
pop
mov
and
add
adc
mov
inc
lcall
testb
adc
push
iret
push
cwtl
repnz
popf
inc
jo
jns
jnp
mov
out
stos
inc
clc
in
sbb
popa
call
ja
jb
cmpl
test
ret
and
out
cmp
gs
arpl
mov
lret
mov
xor
pop
stos
daa
inc
cmovl
aad
jb
mov
lcall
stos
lret
movsl
push
inc
xor
cwtl
sahf
sub
out
adc
mov
test
in
inc
push
mov
sbb
es
mov
adcl
push
mov
or
icebp
jne
xor
add
xchg
push
inc
xchg
and
repz
jp
jne
pop
mov
push
push
lods
pop
xor
adc
xor
fcos
cwtl
jno
jo
xchg
push
jp
jmp
xchg
ret
push
mov
mov
js
xchg
sbb
out
int
push
adc
js
inc
or
xor
nop
xchg
mov
adc
loop
cmc
std
jge
jno
mov
fdivr
push
sub
pop
mov
loopne
xor
loope
adc
mov
mov
mov
movsl
test
fsubl
std
or
cmp
out
mov
shl
mov
add
xchg
dec
popf
arpl
inc
les
mov
push
ss
ljmp
push
cs
or
cmp
enter
out
mov
cmp
sub
inc
loope
hlt
and
adc
inc
xlat
stc
ss
xchg
mov
mov
mov
in
inc
inc
or
les
jbe
test
jbe
dec
xor
dec
jns
cmc
dec
sbb
xchg
repz
push
les
cmpsb
cmc
shrb
call
shlb
push
ret
in
xor
test
cwtl
sbb
adc
ret
shrb
insl
or
or
and
pop
icebp
push
and
jecxz
jbe
repz
add
outsb
adc
mov
dec
pusha
lods
fcoms
sbb
add
mov
shlb
or
mov
loopne
imul
xchg
add
jg
push
scas
or
cmp
add
std
das
push
fcomi
pop
shl
aaa
fbld
lret
pop
cs
ja
lock
insl
mov
jg
fidivl
aam
popf
add
stos
popf
stos
mov
imul
cmpsb
cmp
lcall
jno
mov
fdivl
cli
test
icebp
cli
pusha
mov
push
daa
push
insb
lock
imul
orb
mov
mov
popa
mov
xchg
in
cmp
jne
mov
cwtl
dec
inc
cli
mov
les
push
push
jne
sbb
push
pop
lock
sub
pop
lret
jae
imulb
or
les
jge
mov
enter
and
ljmp
call
lret
mov
xor
out
xchg
test
mov
outsl
inc
jg
push
mov
leave
xlat
lds
repz
gs
add
aas
fsubrs
sbb
insl
dec
insl
add
shrl
dec
sbb
gs
dec
cmp
movlps
adc
pop
inc
push
mov
lcall
sub
test
std
ljmp
mov
xchg
add
pop
outsb
sub
pop
lock
cmp
ja
push
jno
daa
pop
xor
sub
jb
xor
push
arpl
nop
lods
jg
cmp
int
sahf
pop
mov
and
push
cmp
imul
dec
and
scas
add
jmp
cmp
cmp
cmp
insb
push
icebp
push
out
loopne
pop
sub
or
pop
test
xor
mov
xchg
imul
outsb
xchg
cs
cmp
pop
mov
pop
lds
rorb
sub
js
cmp
pop
ljmp
sbb
xor
xor
inc
adc
rcl
sub
std
sbbb
sbb
popa
addl
scas
imul
lcall
add
fisubs
ret
sbb
adc
xor
cmpsb
clc
bound
aas
cltd
notl
int
xor
idivl
loopne
jmp
jg
repnz
xchg
mov
pop
sbb
out
and
mov
cmp
mov
push
daa
mov
jg
or
push
mov
pop
repz
filds
test
loope
stc
cwtl
repz
add
and
sbbb
xchg
add
sar
pusha
push
arpl
mov
cs
ret
hlt
sbbl
and
loopne
das
repnz
or
pop
pop
movsb
add
iret
cmp
pop
mov
or
jae
mov
jecxz
out
and
sub
jae
cld
mov
iret
add
adc
mov
movswl
push
adc
xor
xor
insb
cmpsl
lea
jecxz
addr16
jb
lods
inc
sbb
bound
or
stos
sbb
gs
inc
popa
lods
fidivrl
and
mov
fsubrl
jmp
popf
inc
scas
repnz
lcall
jge
jmp
jns
fldenv
pushf
ja
out
loop
pand
mov
or
mov
insb
xlat
pop
in
jge
out
aaa
push
mov
cmp
or
push
fsubrs
cmp
xchg
push
mov
adc
sub
test
stc
mov
mov
imul
mov
fsub
mov
pop
divb
pop
jge
rorl
fmuls
and
int3
jne
cwtl
cmpsb
in
jecxz
lret
and
xchg
and
popf
xor
or
nop
and
cmp
es
pop
scas
mov
xor
out
in
xor
sbb
push
movsb
cmp
sub
pop
pop
pop
add
push
stc
loope
sub
xchg
inc
or
ja
push
and
les
xor
jle
push
sahf
push
test
or
dec
or
lds
or
sarb
mov
dec
iret
mov
add
jge
pop
jne
cmp
jg
cmpsl
aad
mov
loope
sub
lods
pusha
xor
fistpl
mov
mov
aam
inc
ret
roll
insl
adc
inc
int
cmpsb
sbb
aam
popa
notb
ret
sbb
inc
subl
cltd
push
cltd
out
lock
mov
mov
mov
shll
pop
mov
out
pusha
cli
push
sti
xor
mov
xchg
mov
xchg
jns
add
or
fnstenvs
lret
push
jl
mov
outsb
nop
scas
mov
or
int
xchg
and
dec
aaa
outsb
fildl
es
test
dec
pop
icebp
cmp
xor
xrelease
aas
inc
fisubrs
push
or
xor
pop
in
inc
loop
imulb
ds
xor
sbb
adcb
mov
adc
mull
ucomiss
or
scas
dec
xchg
sub
xor
decb
sub
fs
pop
stc
je
idiv
mov
aas
pop
cmp
cmp
fdiv
int3
aaa
pusha
jp
scas
lds
out
cwtl
insb
rcll
or
xchg
and
cld
or
inc
cltd
mov
dec
sub
adcl
add
aas
sti
sub
xchg
cmp
xchg
test
std
add
cmpsl
stos
lret
notb
pop
cmc
sbb
pop
cli
sub
movsl
cs
loope
ret
jle
aas
or
lods
pop
loop
ja
ss
push
pop
cmp
movsb
je
inc
fsubl
push
or
lock
mov
fimuls
jo
test
scas
dec
loopne
mov
cmp
sarb
mov
fstpt
or
cmpsb
les
sub
push
fildl
aas
and
dec
mov
sahf
xor
jp
mov
jg
ds
orb
stos
xor
jno
mov
incl
clc
xchg
js
and
int3
into
cmpsl
add
std
aad
repz
sahf
add
test
adc
ret
pop
in
test
sbb
arpl
push
lcall
inc
jge
push
xor
test
pop
leave
xlat
cli
ficomps
out
icebp
and
pop
mov
fcomps
idiv
rol
popa
dec
sahf
jge
in
in
jno
push
push
sbb
negl
sbb
dec
ja
jnp
jecxz
jmp
inc
subb
and
mov
adc
sub
out
add
or
mov
clc
int3
jbe
fs
sub
mov
cmp
movb
mov
push
addl
and
stos
stos
inc
fucomp
lret
ja
pop
mov
in
sbb
add
mov
xchg
stos
and
ljmp
sub
sub
iret
dec
add
push
dec
outsb
mov
xchg
ljmp
aad
push
pop
call
repnz
pop
xchg
fisttpll
leave
add
mov
pop
arpl
mov
push
xor
or
sub
or
mov
cltd
and
mov
sbb
les
test
add
es
scas
divb
cmp
and
sbb
aad
bound
ret
inc
jp
fisubl
dec
lods
call
pop
cmp
jle
mov
int3
sub
xchg
nop
mov
outsb
or
out
xlat
rorb
inc
mov
lret
mov
loopne
sub
iret
daa
pop
aaa
add
out
and
icebp
and
fs
repnz
adcb
pop
outsl
test
cld
xor
xchg
out
test
aaa
icebp
out
sahf
and
inc
pop
cmp
rcrb
divb
in
sbb
xor
movsb
aam
sbb
jns
movsl
mov
gs
lock
cmp
add
sbb
cs
adc
add
add
repz
out
sbb
xchg
mov
test
addl
stc
add
inc
or
pop
cmp
scas
add
and
pop
mov
mov
shlb
cld
outsb
sbb
mov
bound
push
cmpsl
and
pop
das
cmp
or
cwtl
outsl
jp
xlat
rcll
push
jnp
test
lods
push
out
dec
sti
xchg
dec
enter
lods
cltd
and
mov
xor
xchg
mov
decb
mov
add
pushf
cs
xchg
mov
clc
adc
fistps
mov
mov
mov
fisttpl
gs
into
mov
rclb
jge
scas
inc
sti
and
in
mov
mov
push
jbe
pop
jns
insb
stos
jge
stc
daa
xchg
outsb
clc
lock
add
in
lret
pop
cmpsl
cld
push
mov
inc
pop
scas
jb
out
sub
daa
and
cld
jnp
xor
in
jg
xor
push
out
xor
xchg
jnp
mov
sbb
cmp
lods
jmp
add
fwait
xchg
hlt
push
data16
test
cmpsb
jnp
sbb
andb
cmp
div
leave
push
rcll
mov
push
or
jmp
dec
sbb
cmp
loope
mov
mov
iret
pop
inc
fcomps
sub
movsb
inc
cmp
jb
fisttps
jecxz
or
aam
jge
xor
fisubrl
xor
push
fbstp
fcomip
and
adc
dec
mov
iret
xchg
popa
jne
in
add
push
into
mov
or
xor
sbb
inc
in
popa
clc
or
lret
enter
jle
mov
pop
addr16
mov
stos
data16
mov
xchg
or
add
xchg
push
pushf
xchg
jbe
lea
negb
mov
mov
push
xor
sti
jp
icebp
in
and
xchg
add
cmp
cwtl
push
or
add
jbe
addr16
in
xlat
lret
lock
loopne
pop
adc
jecxz
sbb
aaa
add
es
mov
xor
lods
call
push
pusha
aas
pop
enter
mov
test
cmp
jmp
lret
or
outsb
xor
push
movsb
sti
xchg
addr16
out
cmp
mov
lcall
inc
sbb
cmp
and
jmp
subl
push
push
add
das
cmp
dec
orl
xchg
lret
out
imulb
lods
push
sahf
xchg
mov
xor
lock
imul
cmp
scas
icebp
and
or
int
outsb
lods
push
loop
add
xchg
xor
sbbb
jnp
test
insl
push
movsl
lcall
loopne
loope
dec
negl
dec
loop
imul
fstl
inc
stc
repz
jp
and
insb
aam
jmp
hlt
cld
repz
int3
dec
add
fstl
lcall
imul
daa
fwait
push
fcoms
sub
das
add
inc
push
mov
imul
insl
sbb
pushf
imul
jecxz
outsl
sbb
cmpl
add
ljmp
outsl
jae
pop
rorl
divb
movsl
in
sub
or
jbe
roll
inc
push
adc
mov
das
sub
jb
subl
into
in
dec
or
pop
in
lahf
push
shll
icebp
mov
dec
je
out
int3
jg
mov
idivl
pop
repnz
cmpsl
pop
mov
or
mov
sub
jnp
push
jnp
fisubl
push
mov
xor
mov
xchg
or
flds
cli
sub
jb
bound
jbe
jnp
cwtl
xor
adcb
add
adc
les
dec
sbb
xor
add
pop
adc
sub
sbb
inc
adc
xor
jl
sub
dec
pop
icebp
add
pop
mov
sbb
stos
xchg
jo
and
mov
jns
hlt
test
sub
dec
shl
fistps
push
xchg
sub
add
fstl
pop
movsb
dec
scas
push
xchg
dec
dec
inc
cmpsb
sbb
scas
in
inc
add
les
jecxz
and
jo
mov
jnp
sahf
cltd
movsl
aam
ljmp
adc
gs
aam
das
subb
mov
and
insl
sbb
xchg
mov
repnz
mov
aam
loope
test
sti
pop
cmpsb
das
popa
into
sbb
or
adc
sub
inc
jecxz
sti
stos
mov
sbb
cmp
popa
lock
loope
jl
insb
roll
xor
hlt
push
and
cmp
push
aas
into
inc
test
cmc
cmp
jb
imul
jb
mov
data16
adcb
scas
leave
int
gs
fisttpl
and
or
clc
std
or
cmpsl
pop
cwtl
ds
fmull
repnz
mov
lea
in
rol
mov
popa
scas
imul
mov
dec
pop
mov
adc
or
and
jnp
sub
jno
pop
pushf
mov
xor
int
imul
push
sub
mov
stos
cmp
je
pop
bound
cmc
sbb
je
inc
sbb
jecxz
sahf
addr16
mov
mov
ficompl
or
cmp
cmp
add
dec
loop
outsl
aaa
mov
jge
outsl
aad
pop
jae
stos
and
lahf
cmpsb
scas
xchg
fdivs
jecxz
scas
leave
xchg
loope
ja
jge
sarl
jnp
mov
mov
inc
cs
add
xchg
sgdtl
pop
sub
fstl
testl
inc
push
fidivrl
test
and
sub
xchg
faddl
xchg
stos
fdivs
xchg
inc
cmp
push
inc
adc
iret
cmpsb
dec
cmp
sub
push
xor
jmp
xor
bound
cld
cwtl
adc
nop
and
add
push
xchg
mov
iret
out
dec
ret
mov
cmpsb
popa
inc
lods
sbb
xor
jp
gs
cld
xchg
sarl
jl
push
fnstcw
jmp
add
mov
xor
mov
push
adc
subb
enter
icebp
test
xor
xchg
cmp
sub
pop
and
cmp
int3
fwait
cmc
sub
leave
js
add
xor
fidivs
xchg
arpl
pop
add
jbe
mov
and
mov
cmp
xchg
test
fsubrl
cmpsl
inc
test
rep
dec
mov
stc
jle
in
loop
inc
mov
push
push
insb
fidivl
scas
cltd
xor
jnp
cmpsl
sub
xorb
sub
push
imul
popf
stc
mov
adcb
add
aaa
scas
mov
push
inc
cli
pushf
inc
jne
dec
cltd
in
adc
inc
mov
cld
fcomi
jnp
sbb
aad
jp
push
lods
xchg
pop
dec
mov
inc
stos
push
outsl
scas
dec
xor
xchg
sub
mov
mov
pop
repz
add
xchg
div
jp
and
jbe
jmp
test
xor
cltd
push
subl
or
clc
es
roll
mov
mov
fs
push
lea
mov
roll
add
pop
xor
cmpsb
outsl
fcompl
nop
and
cmc
mov
js
cmp
pushf
scas
les
mov
push
imul
mov
dec
mov
xchg
cmp
sahf
xchg
push
push
mov
push
add
or
in
mov
xchg
mov
pop
xor
hlt
scas
movsl
js
jmp
mov
mov
add
test
sbb
adc
jns
les
std
xchg
cmp
es
divl
out
test
mov
fs
sub
out
dec
fsts
pushl
push
xchg
xchg
jl
sub
mov
sbb
fnsave
fildl
and
push
loope
aad
test
pop
repnz
jno
lret
jae
jns
inc
pop
int
dec
in
fisttpl
aas
sbb
lea
aad
lret
sti
imul
aad
push
adc
fildl
les
into
cmc
ret
pop
push
push
push
adc
and
mov
sub
xor
xchg
hlt
push
xor
cmpl
add
sub
out
add
lea
mov
shlb
lret
sahf
jno
in
xchg
fdivr
mov
pop
pop
enter
je
pop
pop
cld
adc
and
xor
mov
fsts
and
cmc
lock
daa
inc
test
mov
ss
addr16
iret
ror
adc
movsb
push
enter
inc
sbb
cltd
or
out
inc
and
push
test
clc
xchg
stos
cltd
dec
rorl
loop
adc
jecxz
mov
jns
lret
mov
lds
clc
cmp
jo
lcall
aad
gs
outsl
push
xlat
fs
hlt
int
adc
aad
add
mov
test
aam
and
sub
push
xor
jno
shl
mov
daa
insb
xchg
pop
jb
pop
push
cli
dec
pop
cmc
pushf
xlat
push
sti
adc
jge
jne
mov
jo
cmc
inc
in
add
sbbl
mov
mov
inc
les
push
push
cmp
xchg
es
jle
adc
jl
mov
scas
out
jge
cmp
das
fidivrl
jge
mov
insb
push
jmp
mov
sbb
bound
fxch
fistl
mov
movsl
mov
fcoml
pop
pop
bound
cmovp
fs
adc
pushf
xchg
dec
add
in
inc
jne
pop
imul
stos
faddl
test
movb
jge
lret
and
pop
cld
jae
das
sub
mov
cmpsl
ret
adc
js
jne
push
sub
xchg
mov
jp
inc
in
jg
and
push
push
jmp
je
push
jmp
xchg
in
in
mov
cmp
les
aas
cmp
cli
mov
int
repz
addb
mov
notb
sqrtps
mov
xor
add
xchg
cmp
sahf
cmpsb
mov
int3
inc
sbb
into
mov
test
sub
shll
scas
cmp
loop
shrb
jb
sahf
add
sub
in
sub
stc
pop
sub
scas
mov
inc
sub
push
aad
jb
repnz
imul
gs
cmp
pusha
mov
adc
jb
sub
sbb
ret
mov
inc
jne
sub
jnp
inc
adc
sti
aaa
jb
pop
add
mov
out
jg
inc
imull
and
iret
ret
aad
test
mov
xor
test
ja
sub
stos
lock
imulb
sub
jge
stos
jmp
mov
repnz
cmp
lret
jo
test
stos
jne
lods
cmpsb
int3
fmul
decb
test
inc
xchg
pop
cli
lret
push
xchg
inc
sbb
or
pop
shrb
in
data16
mov
jns
insb
mov
jae
or
pop
mov
fisubrl
lock
push
add
mov
dec
jmp
push
movsb
inc
adc
add
je
fistl
fsubl
rolb
mov
lret
adc
mov
movsl
cs
test
pop
mov
cs
addr16
inc
out
iret
shr
jno
xchg
repnz
xlat
adc
fucom
stc
aas
xchg
cltd
xor
out
sbb
cmp
popa
nop
sbb
cmp
imul
test
inc
xor
movsb
popa
xor
mov
push
call
or
inc
mov
es
add
cmp
xor
fistpll
daa
jge
aaa
jge
xchg
lods
inc
ret
mov
sahf
std
sub
js
insl
push
mov
push
lret
cld
movsb
out
lds
cmp
stos
pusha
mov
push
cmpsl
std
sub
sti
movsb
lods
push
out
pcmpeqb
mov
pushf
jb
xchg
insl
pop
ret
ret
in
rclb
outsl
daa
je
jns
push
lea
daa
shrb
test
xor
push
and
sbb
jecxz
popf
lods
in
jmp
xor
daa
ja
orl
push
pop
add
int3
ss
xor
mov
jmp
mov
dec
inc
shll
sbb
push
or
je
out
jp
sbb
inc
inc
ficompl
dec
outsl
push
fmull
ret
add
adc
xchg
cld
mov
in
aas
xor
call
jns
sub
std
dec
call
push
rclb
shrl
repnz
mov
adc
fiadds
mov
pop
cmp
pop
test
or
and
mov
pop
mov
cmpsl
int
cltd
add
cs
sbb
xor
rcl
int3
decb
mov
pop
iret
es
icebp
adc
cmp
push
mov
xor
jp
xchg
test
ds
adc
leave
dec
sti
push
or
lahf
ret
mov
test
xchg
imul
incb
scas
pop
addl
sub
push
addl
scas
or
andb
hlt
cmp
dec
jno
dec
inc
sbb
subb
dec
inc
pop
pop
push
ret
pop
add
jo
int
pop
sti
or
outsb
adc
movsl
and
shlb
rclb
mov
out
test
cltd
mov
ljmp
cmp
sub
jne
stc
bound
test
pop
push
fs
scas
sub
outsb
and
sarl
cmp
mov
add
fdiv
dec
in
add
or
aam
popf
scas
das
rclb
repnz
xchg
subl
mov
imul
or
mov
push
and
or
dec
xchg
fsts
rcrl
lea
in
loopne
push
lods
cli
in
pop
aas
sbb
out
inc
mov
adc
dec
cmp
inc
divb
scas
arpl
fmuls
sub
xchg
jg
ficoms
cmp
add
xchg
ret
push
mov
out
lods
icebp
adc
stos
test
mov
hlt
dec
push
adc
out
outsb
jnp
mov
movsl
xchg
sub
loope
xor
dec
mov
mov
scas
jle
es
push
push
push
fnstenv
cmc
xchg
pop
pop
test
sbb
jo
fidivl
call
das
xor
lahf
jmp
mov
cwtl
les
aam
add
xor
das
shll
clc
roll
aaa
xchg
aam
push
andl
inc
adc
mov
lds
mov
outsl
rol
fcoms
mov
mov
sub
sub
imulb
inc
scas
inc
sar
cltd
out
dec
int3
mov
dec
xlat
mov
and
jmp
push
popf
cmpb
sbbl
ret
ds
mov
push
sarb
ficomps
inc
fldenv
addl
inc
loope
outsb
and
sbb
xchg
mov
fwait
cmpsl
mov
adc
lock
fisubs
jp
clc
inc
sbb
movb
jnp
sbb
leave
or
adc
jne
or
jo
pop
insb
mov
or
test
jbe
shlb
or
incl
lret
fsts
mov
add
lods
lods
jmp
adc
popf
lods
notb
nop
xor
nop
xlat
mov
pop
dec
lds
pop
mov
rolb
mov
jnp
cli
std
enter
jne
arpl
pop
cmp
cmp
jb
adc
or
imul
ret
insl
sahf
les
stc
push
fstpt
in
js
sub
pop
ds
sbb
xor
cmp
xor
xchg
jbe
mov
lahf
xor
pop
push
mov
test
mov
addl
pop
cmpsl
sahf
inc
loope
jb
movl
or
dec
mov
nop
dec
pop
ret
mov
mov
pop
mov
shrl
pop
loopne
and
rclb
jp
xor
dec
add
mov
scas
pop
or
pop
jecxz
outsb
jle
mov
lods
adc
cltd
dec
lahf
xor
repz
cld
mull
mov
loope
mov
add
xor
mov
fisubrl
test
cld
xchg
mov
pop
movsb
add
dec
add
jl
add
xchg
xchg
push
test
push
jne
imul
fisttpll
sub
aam
adcb
jecxz
ja
out
movsl
dec
cwtl
std
xchg
or
push
jne
daa
pop
sub
xchg
pop
mov
inc
jae
dec
outsb
pop
scas
and
addb
or
shl
dec
in
stos
lahf
mov
cli
rol
inc
push
pop
add
fwait
cmp
call
stos
mov
out
pop
shlb
daa
movsb
pop
push
rolb
int3
jg
jl
or
out
popa
lcall
shr
fs
jnp
xor
test
mov
adc
nop
pop
sbb
aad
data16
xchg
test
fucomip
notb
sub
cmp
push
and
bswap
xor
xchg
lea
xor
test
mov
outsl
shlb
push
cmc
les
test
sahf
lods
pop
lods
mov
rolb
mov
xlat
bound
notl
adc
mov
fisubrl
mov
hlt
xchg
push
xchg
inc
xor
lods
adc
lock
test
pop
push
pop
icebp
and
fmulp
ds
shlb
test
popa
adc
sbb
xor
notl
fsubrs
xchg
sub
mov
mov
adc
outsl
shll
sub
stos
lea
xchg
dec
sbb
shll
cltd
frstor
fucomp
decl
add
mov
scas
rclb
outsl
mov
in
dec
pop
push
adc
in
add
sbb
hlt
call
dec
test
pop
cltd
ret
fldl
loope
notb
jg
leave
in
jecxz
loop
ds
fldl
ds
sub
test
mov
adc
stos
sahf
pop
jns
xchg
mov
inc
cld
mov
fnstsw
fwait
xor
or
xchg
scas
jne
dec
dec
or
loop
nop
pop
push
out
pop
insl
icebp
or
pop
xor
pushf
xor
mov
cmp
cmpb
movsb
dec
aaa
hlt
jnp
pop
icebp
xor
orl
mov
xchg
add
push
in
pop
ljmp
rolb
dec
lods
outsb
and
adc
aam
rcrb
ds
pop
mov
mov
test
cmp
sbbb
lcall
xchg
lods
sti
adc
lock
and
cld
sarl
jbe
cmpsb
arpl
pop
dec
jp
mov
fistpll
xchg
mov
add
in
pop
out
mov
mov
imul
in
cmpsl
aas
xor
out
loope
xor
sysret
popa
popa
popf
in
mov
fldt
mov
xchg
notb
ljmp
sub
mov
push
aas
daa
gs
mov
cwtl
sbb
jge
mov
sub
sbb
out
je
dec
loope
xchg
add
mov
lcall
jmp
movsl
and
pop
inc
test
lds
aaa
subb
pop
sub
cmp
xchg
cmp
loop
inc
ss
mov
inc
sub
rorb
mov
lds
roll
lret
in
dec
int3
jne
jb
add
icebp
xchg
xchg
dec
adc
cltd
xor
pop
mov
shl
arpl
test
cli
lock
inc
mov
jle
pop
icebp
aas
and
daa
imul
mov
fldenv
xor
inc
fmull
arpl
xchg
fstpl
mov
jmp
enter
ds
mov
and
inc
lods
inc
dec
lods
xchg
mov
mov
mov
sbb
push
inc
rolb
inc
repz
mov
mov
hlt
ret
aas
shrl
sbb
push
outsb
incl
cmpsb
xchg
pop
inc
in
push
insb
andb
and
jae
jl
pop
hlt
xlat
in
jl
xchg
clc
jnp
shrl
xchg
cmp
xor
pop
gs
mov
adc
bound
xor
pop
jb
shll
dec
pop
jo
fs
jecxz
lahf
inc
pop
xchg
arpl
in
pop
and
mov
mov
test
dec
inc
repz
dec
test
jae
std
xchg
mov
scas
and
je
push
pop
in
adcb
aas
mov
rcrl
popa
mov
out
lcall
call
test
mov
clc
stos
inc
sub
enter
and
push
push
popa
stos
mov
aas
or
adc
push
inc
lods
jo
push
ss
inc
fmulp
into
push
fnstcw
pop
jne
inc
test
inc
aad
pusha
pop
rol
lret
cmpsl
leave
sbb
mov
ljmp
jbe
mov
inc
lcall
clc
inc
or
icebp
faddp
cmp
mov
bound
mov
cmp
loop
sbb
mov
out
lea
push
es
pop
icebp
push
dec
imul
push
dec
fsubr
lea
cmp
cmp
sub
lahf
decb
test
mov
inc
sbb
fisubl
sbb
mov
scas
adc
hlt
jo
arpl
xor
cld
stos
mov
dec
out
sbb
hlt
lret
push
jecxz
or
mov
pop
lea
sub
xor
mov
xchg
and
mov
push
loope
rcll
mov
sbb
mov
lret
jl
and
cmc
ror
jg
mov
mov
cld
xchg
cs
mov
push
jecxz
cmpsl
out
jae
xor
pop
jbe
adc
shl
mov
fistps
hlt
leave
sbb
xchg
mov
test
lcall
jb
add
dec
fstpl
test
fildll
scas
cs
add
fdivrl
shr
mov
arpl
shll
xchg
sub
lret
and
pop
jae
jo
jb
movsl
test
jle
sahf
xor
mov
push
lea
mov
xchg
lret
xor
mov
out
jns
inc
test
test
push
pop
add
shrb
jg
hlt
dec
inc
dec
jecxz
std
xorb
movsl
repnz
xchg
js
sub
lcall
leave
xor
jl
pop
cmc
rcrl
fdivs
in
xchg
into
sbb
je
in
std
mov
leave
inc
fcomi
dec
dec
inc
cld
into
ss
lods
aas
aaa
test
aaa
jbe
adc
pop
jns
pop
fwait
pop
lahf
pop
out
negl
jmp
popf
loopne
pop
xor
xchg
add
cwtl
dec
ror
sub
imul
outsl
insl
loope
push
mov
out
aas
mov
add
jmp
jno
lods
inc
pusha
outsl
sub
loope
lret
lds
outsb
decb
ret
pop
fldt
aaa
iret
out
out
inc
mov
inc
push
popa
mov
adc
pop
inc
cmp
and
push
and
pop
jecxz
mov
out
test
xchg
and
dec
fisubrs
repz
mov
inc
popf
dec
fmull
icebp
add
and
popa
xchg
shl
pop
mov
jb
idivb
add
test
inc
ljmp
std
movsb
fidivs
mov
nop
daa
pop
push
push
mov
cmpsb
adc
fstps
mov
jg
cwtl
mov
cltd
fldl
jo
xlat
cmpsb
dec
mov
mov
and
jecxz
push
pushf
xor
or
lds
xor
push
ret
push
loop
sbb
data16
jle
jns
jne
xchg
xor
ljmp
and
mov
lock
sbb
sbb
js
ret
test
leave
stc
sbb
cli
arpl
hlt
cltd
mov
movsb
dec
adcb
in
pop
sub
pop
sbb
push
mov
sbb
rorb
mov
insl
push
lret
push
inc
inc
enter
adc
adc
in
sbb
ret
push
insb
das
repnz
lcall
cmpsl
fidivl
fnsave
lret
call
fisttpll
cmp
and
and
out
xchg
xchg
xchg
sbb
repz
adc
cli
xor
mov
sub
mov
mov
pop
dec
dec
fistpll
sbb
ss
fistpl
sbb
fdivs
jecxz
aas
lret
lds
lret
and
cli
add
mov
dec
test
call
shlb
inc
add
bound
pusha
push
inc
lods
mov
or
xor
inc
pop
lea
push
jne
mov
or
out
mov
mov
lods
adc
cmc
xchg
inc
cmp
xor
push
out
adc
mov
loop
dec
jecxz
cmp
icebp
mov
rcrb
and
loop
rorb
mov
push
push
and
cld
dec
bound
int
sbb
dec
or
ror
out
js
std
test
sub
sbb
sub
inc
adc
xorl
das
repz
xorb
xlat
repz
fstl
in
iret
mov
push
sti
addr16
ss
test
jmp
xchg
push
loope
mov
outsb
mov
iret
outsl
pop
or
fadd
movsl
mov
pop
pop
movsb
aam
test
pop
movsl
ja
xchg
mov
cwtl
sub
xor
xchg
icebp
test
mov
mov
bound
adc
out
shl
inc
xor
iret
popa
fsubr
inc
add
mov
dec
out
lahf
lods
push
add
cmp
movsb
cmp
push
js
dec
mov
int3
xchg
imul
gs
adc
xor
xor
les
ja
pusha
ret
jmp
mov
outsl
xchg
jno
loop
push
sbb
out
jbe
dec
xor
add
xor
dec
ljmp
cltd
or
std
icebp
push
lods
enter
mov
gs
js
ja
cmp
sub
pushf
in
jg
cld
pop
or
pop
ss
popf
cmp
orb
pop
idivl
mov
shlb
dec
dec
sbb
fisttpl
ljmp
pop
jl
and
insl
out
jp
loop
punpckldq
mov
dec
pop
push
fistps
aaa
popa
mov
out
push
add
xchg
ja
dec
xor
daa
lods
inc
pop
fbstp
mov
xchg
cltd
test
jmp
sub
pop
rcrb
lea
dec
loopne
and
mov
pop
dec
incb
popf
xor
pushf
xchg
insl
mov
sub
nop
xor
out
fcomp
inc
cli
into
or
mov
int
dec
hlt
adc
mov
mov
or
dec
mov
mov
jbe
fildll
aam
xchg
repz
pop
scas
daa
scas
mov
sbb
push
adc
out
add
mov
dec
dec
inc
in
aam
cmp
xchg
pop
cmp
rorl
imul
mov
cmc
xchg
dec
mov
jne
lock
mov
lods
mov
dec
sub
jg
adc
push
add
enter
std
je
inc
xor
sbb
and
xchg
jmp
pushf
pop
loope
mov
xor
sbb
mov
lret
jp
sub
nopl
stc
push
cmp
jo
xchg
mov
lahf
or
xchg
add
xchg
nop
pop
xchg
sbb
ja
cltd
rclb
loopne
add
sahf
dec
pop
xchg
mov
mov
inc
mov
or
rorb
pop
wrmsr
sbb
fwait
adc
mov
hlt
and
loop
push
rorl
out
sbb
xchg
inc
mov
push
fdivs
sub
arpl
sub
push
dec
add
rclb
add
pop
movsl
sub
xor
sbb
sbb
sbb
pop
mov
jno
mov
pop
xchg
sbb
dec
jns
jae
loope
nop
fdiv
mov
pop
repnz
and
add
sbb
push
stos
mov
jg
adc
bound
pushl
xchg
jo
inc
into
mov
inc
xchg
icebp
ficomps
and
and
jecxz
sti
es
into
adc
out
adc
mov
dec
jp
dec
push
shll
jbe
and
xchg
mov
add
and
mov
xor
inc
jl
sbb
scas
test
das
js
test
mov
sahf
pop
loopne
aam
fiaddl
push
fcomps
insb
es
push
dec
ljmp
xchg
int3
sub
xor
inc
push
jle
lret
dec
addl
jo
sub
shr
inc
xor
into
jae
andb
mov
jmp
inc
mov
leave
mov
lret
cmpl
out
fidivrl
popa
adc
mov
mov
pop
insl
dec
mov
aaa
fwait
sbb
pop
sti
adc
test
lock
in
sbb
dec
leave
mov
cmp
or
les
sub
jo
pop
xor
inc
ret
pop
pop
add
adc
inc
test
sub
sbb
cli
dec
xchg
mov
or
sub
rorl
mov
data16
xor
fcoml
xchg
add
mov
pop
icebp
inc
inc
mov
loop
dec
out
push
or
lds
mov
stc
adc
jns
adc
or
and
lret
xchg
adc
iret
mov
ret
call
adcl
xor
cmpsb
push
adc
loop
test
or
fidivl
ljmp
ja
sbb
sbb
adc
cs
popa
clc
sbb
imul
testl
mov
add
out
sbbl
pusha
mov
insl
push
outsl
xchg
arpl
sahf
test
xchg
push
mov
fwait
dec
popa
pop
mov
add
stos
lock
jl
or
or
jne
push
jno
pop
inc
fcoml
jns
cmp
ret
cmp
sub
movl
jb
insb
inc
lret
icebp
cs
mov
int3
push
in
mov
push
inc
hlt
popf
dec
pop
lock
lret
or
add
pop
lahf
es
sub
test
lret
sbb
cmp
xlat
cmpsb
mov
mov
lods
jno
push
pop
lods
outsb
es
mov
inc
enter
cli
cmp
sub
xchg
mov
sbb
cmp
adc
aaa
sub
pop
sub
lock
dec
movsl
inc
in
sbb
xor
nop
mov
mov
or
testb
jge
pop
sbb
mov
dec
and
push
sub
cmp
dec
insl
mull
xchg
scas
pop
movsb
dec
stos
add
loop
sbb
dec
inc
out
out
test
imul
js
push
pop
repnz
push
pop
movsl
pop
icebp
push
out
inc
lods
std
sbb
pushf
or
stos
or
pop
in
mov
rclb
inc
adc
insb
inc
enter
push
add
cmpsl
push
inc
adc
jl
ds
outsl
sub
inc
sub
rclb
pop
ds
cwtl
fs
in
js
jae
iret
orl
ret
mov
mov
sbb
sub
or
cmp
arpl
mov
add
push
incb
pushf
and
pop
data16
xchg
out
xchg
mov
in
insb
addr16
adc
mov
push
hlt
jmp
aaa
jae
fs
jne
mov
out
jge
scas
mov
push
out
xchg
push
mov
push
fwait
test
push
hlt
xchg
cmp
push
push
mov
imul
and
pushf
jl
jnp
jb
subb
mov
or
imul
icebp
mov
ret
jnp
rep
in
cmpsl
dec
pusha
mov
loop
fsub
inc
mov
add
mov
ja
xchg
aas
je
les
mov
std
add
cmpsl
imul
testl
mov
fnstsw
cwtl
dec
xor
call
adc
add
pushf
xor
xchg
pop
inc
push
mov
insb
and
mov
add
insl
ficoms
jmp
jg
jge
paddb
pop
mov
cwtl
das
dec
pop
fmuls
imul
popf
dec
mov
movsb
push
popf
aad
and
dec
add
lock
cmp
jno
mov
sbb
mov
inc
add
ds
inc
jo
push
pop
jb
arpl
scas
test
xchg
sbb
cmp
stos
in
cmp
xchg
sbb
mov
mov
xor
inc
shrl
mov
mov
arpl
out
push
mov
sub
loop
dec
inc
push
in
mov
imul
push
sub
imul
lds
jmp
popa
inc
ljmp
sub
repz
dec
mov
pop
xchg
adc
mov
push
and
fstl
inc
out
cmpsl
mov
cmpsb
notb
cld
jp
mov
cli
xor
xchg
hlt
or
fidivrs
fisubrl
inc
pop
das
rcl
pusha
add
mov
out
or
mov
dec
cmpsb
sbb
or
dec
jecxz
cmp
outsb
lret
out
push
mov
push
mov
sub
add
sbb
lcall
pop
loop
dec
loopne
orl
add
adc
and
xchg
xchg
into
out
xor
xchg
cmc
mov
xchg
mov
pushf
test
push
xor
fdivl
sbb
rol
bound
fisubrs
add
tzmsk
test
jns
mov
fs
das
add
shlb
pop
lods
cwtl
sub
enter
pop
dec
loopne
pushf
jb
mov
sbb
xchg
sub
out
pop
ret
rep
xlat
sbb
xchg
jle
fnsave
jnp
cld
pop
xor
push
push
jnp
mov
push
and
sbb
lret
hlt
jp
ss
call
mov
mov
inc
negb
je
fildll
push
jle
add
popa
jnp
popa
pusha
pop
mov
adc
repz
cmp
push
lea
mov
jmp
mov
jno
iret
lret
push
mov
lahf
and
add
repnz
xor
cmp
sub
jg
cli
mov
dec
je
cmp
jno
lcall
sbb
sub
leave
imul
movsl
inc
jecxz
lret
jb
xchg
jge
sbb
inc
add
add
adc
lock
outsl
jo
in
lea
mov
inc
xorl
push
enter
jne
jl
jns
cmp
fs
add
xor
jnp
and
jo
inc
add
je
jecxz
jo
mov
dec
rcrb
lcall
dec
push
das
and
sbb
sub
xchg
and
dec
daa
roll
jae
xchg
sub
stos
sbb
cli
mov
imul
mov
jp
jg
ds
pusha
sbb
xchg
out
lods
inc
loopne
mov
mov
push
aam
mov
fwait
cmpsl
fucomip
test
sbb
cmpsb
aaa
std
scas
inc
ficomps
movsl
into
in
mov
js
rcr
imul
dec
sbb
cmpb
pop
hlt
or
insl
cld
push
outsb
mov
ficoml
inc
fdivs
lods
js
mov
adc
lret
testb
push
mov
enter
inc
cli
sbb
rcrb
shrb
dec
mov
cmpsl
call
lds
dec
int3
jecxz
aam
pop
aad
push
jne
ja
aas
outsb
scas
pop
lods
mov
stc
push
test
mov
fcomi
pop
add
mov
loop
jo
jle
dec
sbb
and
dec
nop
les
stc
sbb
dec
inc
adc
cltd
test
mov
imull
mov
sub
imul
je
lret
lds
adc
dec
mov
cmc
mov
dec
movsb
push
cmpsl
cmp
lds
pop
cmp
sub
adcl
sbb
cld
ds
fwait
mov
testl
add
mov
or
xor
jnp
kxnorb
sti
cmpsl
sub
sahf
fs
xchg
movsb
outsb
mov
add
sbb
add
ja
jmp
jns
scas
mov
and
lahf
jne
cmp
jg
aad
test
ret
loopne
mov
test
icebp
mov
xchg
sbb
pop
movsb
sarb
shlb
inc
imul
push
ljmp
fnsave
outsb
addl
xchg
enter
mov
or
sub
pop
cld
or
push
mov
shll
movsl
pop
out
or
data16
movsl
cmpsb
add
sub
dec
xor
sub
addr16
fldenv
mov
in
mov
in
xchg
jae
mov
jecxz
cmp
int
sbb
ss
cmc
inc
mov
jl
sar
int3
pop
repz
out
xorl
pop
je
mov
call
cltd
es
cmpsb
mov
fldlg2
out
cltd
and
cwtl
xor
insl
xor
jmp
rorl
xchg
sub
hlt
jge
mov
fdivp
cmp
out
dec
test
push
fnsave
outsb
ljmp
movsb
insl
data16
addr16
cld
dec
nop
fwait
mov
nop
aas
dec
ljmp
data16
aam
adc
icebp
adcb
dec
add
and
inc
sbb
cmp
xchg
mov
stos
mov
push
lcall
loope
xor
and
sub
pop
xor
rcll
dec
adc
stos
xor
int3
pop
in
jbe
xorb
xor
jnp
aaa
hlt
loope
sub
lods
jnp
loop
cmpsb
pop
mov
mov
xchg
pop
mov
in
and
stc
mov
xchg
scas
ljmp
cmp
inc
inc
adc
inc
scas
or
mov
mov
fdivs
adc
sub
mov
or
cmp
xchg
scas
outsb
cmp
cmc
mov
sbb
aam
cltd
out
inc
mov
mov
pop
pop
notb
call
xchg
xchg
sahf
mov
cmp
repnz
push
adc
jae
mov
subb
or
cli
pushf
xchg
movsb
movsl
es
imul
jbe
jno
cs
xlat
lcall
lahf
xor
ja
ja
scas
shl
adc
sbb
and
add
add
xchg
push
push
mov
add
mov
js
cmc
inc
push
sub
pop
and
sub
mov
xor
lods
dec
mov
or
mov
insb
sti
adc
xchg
xchg
add
call
xlat
enter
jge
in
pop
mov
cmc
cvtpi2ps
xchg
outsb
jbe
pop
mov
pop
loopne
mov
xor
mov
sbb
mov
mov
sti
dec
pop
faddp
inc
fs
test
add
in
imul
push
outsl
mov
andl
or
cs
push
call
sub
inc
mov
rcll
clc
or
or
jnp
into
push
jo
adc
lcall
mov
das
shrb
xor
incl
stc
decl
and
pop
mov
stos
cmpsl
ss
add
test
xchg
sbb
cmc
cwtl
out
mov
shll
int3
push
pop
popf
in
or
adc
mov
lret
in
fnsaves
int3
or
into
or
movsl
pop
push
adc
inc
scas
xor
cmp
lcall
jns
push
jl
out
das
xor
push
nop
push
add
scas
xor
jbe
shlb
jb
arpl
cmp
scas
cmp
cltd
push
in
scas
aaa
mov
rcll
fnstenv
es
subl
and
sahf
aaa
pushf
sub
loop
add
sahf
shlb
xor
andb
movd
fs
ja
cmp
and
test
pop
ret
es
push
movsb
ror
mov
mov
or
adc
push
in
in
push
jne
cmp
cwtl
and
pop
add
iret
dec
mov
test
push
aaa
pop
fistps
fistpll
pop
cmpsb
popa
nop
and
dec
mov
pop
jae
fs
lock
out
jno
jno
out
ds
pop
fisubl
or
and
aam
movsb
xor
mov
lret
loop
or
sarb
int3
aam
add
sbb
dec
mov
hlt
or
adc
aaa
sub
sahf
pusha
jnp
sahf
and
jge
popf
call
mov
data16
lahf
xor
or
xor
mov
jbe
mov
and
mov
mov
push
test
inc
push
insl
rcrl
xchg
add
rcrb
out
aad
add
data16
js
cmp
xchg
cs
es
xchg
fnsave
js
dec
and
js
pop
aas
into
push
shlb
or
push
mov
or
ficoms
pop
popf
dec
and
xchg
stos
in
push
andb
xor
insb
pop
repnz
lea
pop
sub
test
sub
jg
or
jno
int3
jnp
push
lods
and
sar
xor
cmpsb
mov
mov
xor
ret
popl
adc
data16
dec
pop
ljmp
mov
ret
cmpsl
fisubl
popa
jle
sbb
pop
mov
fisubs
xchg
je
xchg
and
or
push
push
stos
psadbw
call
mov
fmuls
sbbb
subl
cmpsb
out
lret
cmpsb
sub
mov
aad
test
daa
jo
aam
or
fwait
push
lods
arpl
insb
sbb
or
dec
movsb
pop
sub
data16
ret
fwait
lods
xchg
fxch
push
das
xchg
aaa
loop
cltd
mov
dec
je
push
xchg
sub
xorb
filds
pop
adc
fdivs
pop
and
nop
out
inc
scas
pop
dec
in
xchg
jmp
xor
cld
pop
rorl
mov
jle
fbstp
push
ret
clc
xchg
dec
cmp
jecxz
mov
jae
pop
in
xchg
pop
fisubrl
fidivrl
in
ja
cs
sbbl
sbb
cmp
out
lds
fsubrl
or
fs
xchg
add
push
loop
inc
push
jbe
cltd
cs
dec
cmp
sbb
pop
nop
lea
lcall
repnz
data16
add
push
imul
popf
lods
gs
xchg
ljmp
jb
and
rol
push
cmp
loop
shll
insl
leave
push
ds
push
arpl
mov
sarl
jo
nop
addb
sbb
xchg
dec
test
test
das
filds
mov
addr16
cwtl
jbe
divb
xchg
ljmp
outsb
xchg
mov
test
shll
iret
arpl
popa
ret
cmp
or
and
mov
pop
repnz
jnp
push
push
add
int3
out
and
bound
call
in
and
jp
jmp
mov
bound
mov
sbb
lods
inc
hlt
or
lahf
and
movsl
mov
cli
pushf
loop
inc
and
adc
lahf
mov
imul
adc
sbb
loope
cli
jne
adc
sub
in
sbb
sti
mov
inc
xchg
sbb
int
in
cmc
loop
mov
repz
sarb
inc
jnp
out
dec
cmp
mov
xchg
jno
lcall
mov
fsts
insb
test
sub
or
stc
sbb
sub
jnp
repnz
lcall
mov
jnp
out
push
xchg
adc
adc
scas
jno
pop
mov
pushfw
mov
xchg
std
repz
fadds
aas
push
das
dec
push
inc
clc
arpl
loopne
mov
gs
rorb
xchg
sysexit
fsubs
out
addr16
sbbl
stos
xlat
outsb
faddl
sub
push
cmp
xlat
dec
mov
ret
fucomp
cmpsb
sbb
inc
jbe
push
mov
mov
arpl
xchg
or
mov
jl
out
jp
jp
out
je
fbld
es
xchg
lock
fucomip
push
sbb
out
xchg
dec
testl
jg
lock
fisttpl
cmpsb
ret
aam
add
mov
and
sub
sbb
xor
ljmp
movsl
rep
xor
sub
and
jmp
adc
jmp
push
jne
lock
dec
ror
cmc
dec
inc
jecxz
aad
xchg
dec
or
stc
arpl
and
call
mulb
sub
inc
std
loop
and
fisttpll
sarl
shl
shlb
mov
and
sbb
mov
jne
jmp
and
add
ja
cmp
flds
or
aaa
push
sub
loopne
mov
icebp
jmp
add
adc
and
add
insb
insb
rcl
fmuls
pop
jle
push
pusha
les
loop
push
push
jo
repz
add
and
aad
je
pop
pop
push
sbbb
xchg
hlt
fisubl
sahf
test
push
in
sub
cmp
cld
sub
aam
sub
repz
add
sbbl
adc
sub
or
icebp
movsl
push
jno
daa
int3
stos
mov
sub
pushf
xor
cmpsl
aas
insl
mov
xor
jne
adc
cmp
dec
adc
add
in
out
in
dec
cmpsb
and
push
mov
test
scas
pop
mov
das
or
sbb
sbb
ss
mov
or
or
mov
lcall
inc
lods
xor
jle
lods
adc
mov
and
jns
jbe
outsb
lcall
gs
xchg
sub
sub
int
push
jl
sbb
insl
add
pop
in
fs
fcomip
dec
pop
clc
sahf
bound
sbb
push
int3
sbb
cmp
add
les
out
xchg
rclb
imul
pop
mov
in
out
or
cmp
mov
mov
fildll
int3
sbb
rcrb
aad
cmpsb
lds
call
adc
sbb
test
daa
mov
pop
and
dec
pop
in
arpl
dec
push
hlt
pop
jno
add
popf
inc
icebp
scas
jb
int3
rcll
adc
andl
cmpsl
xchg
sbb
sub
scas
xor
jp
add
rolb
mov
mov
movsb
and
sbb
pop
repz
test
daa
dec
lock
dec
inc
test
sbb
mov
inc
test
mov
sub
jg
adc
sub
mov
xor
cs
push
jb
fs
or
push
popf
stos
mov
stc
iret
cmpsb
jl
push
pop
stc
inc
or
leave
int
push
or
adc
lcall
aad
stc
dec
movsl
sbb
and
pop
negb
and
xor
jmp
out
add
movsl
push
outsb
stc
push
inc
jmp
mov
xor
or
push
mov
sbb
cmp
add
mov
xchg
and
scas
lea
push
sbb
lahf
stos
repnz
jge
scas
divl
jecxz
sbb
jb
pop
pushf
jbe
add
pop
sub
pop
xchg
cmc
loop
pop
push
jg
pop
mov
seta
mov
push
and
add
or
andl
lret
imul
sarb
mov
dec
cmp
pop
ds
jno
pop
cwtl
mov
xchg
scas
dec
or
xor
cmp
sub
push
mov
lahf
lods
inc
shll
pop
fistl
inc
push
je
xor
test
rorb
fcmovnu
dec
jp
repz
stos
inc
jae
mov
mov
mov
in
out
call
int
cmp
dec
dec
cmpsb
fistps
test
mov
sub
push
test
xchg
xchg
sub
in
add
dec
ret
mov
js
jno
lods
mov
sarb
outsb
inc
je
and
ret
push
stc
adc
inc
lret
xchg
mov
xchg
push
or
ja
fwait
sti
fcoms
bound
sti
test
es
jge
into
xor
xchg
inc
out
dec
mov
inc
ret
pusha
in
jns
pop
dec
loope
outsl
andb
and
sbb
dec
mov
mov
mov
inc
push
movsl
jae
test
mov
pop
mov
jp
nop
mov
aas
dec
pop
pop
scas
push
pushf
cmc
cmp
pop
mov
rcl
mov
mov
add
jne
int3
sub
das
xor
mov
push
mov
fildll
fidivrs
shll
adc
es
mov
incl
stos
mov
xchg
adc
fcompl
push
mov
loopne
xchg
and
push
push
pop
mov
aaa
cmpl
xor
les
adc
xchg
sbb
mov
inc
ret
andb
imul
mov
fsubr
push
cs
cld
ret
pop
cmc
jecxz
sbb
mulb
sti
leave
jne
add
movsb
mov
mov
xor
movsl
out
add
flds
rorl
dec
inc
sbb
jbe
lcall
cmpsl
fiaddl
inc
jns
jns
mov
enter
testb
jnp
lea
cmpsb
sub
sarl
lret
data16
xchg
or
push
sbb
mov
divps
notl
dec
bound
push
out
call
outsl
push
and
xchg
inc
or
movsl
test
mov
xchg
and
mov
mov
mov
sub
fs
loop
and
push
dec
xchg
sub
ja
inc
clc
fstps
xchg
xor
imul
je
push
in
std
aas
jbe
mov
addr16
push
cmpsl
test
pop
popf
lahf
sti
cs
sarb
xor
sub
test
call
loopne
pop
adc
aaa
push
cmpl
mov
sbb
fsubrl
and
test
js
adc
cmp
pushf
mov
xchg
mov
lds
divb
mov
push
cmp
cmpsb
sub
sub
jecxz
add
fdivp
insb
ds
data16
dec
cmp
shll
mov
aam
cmpsl
cmp
notb
and
inc
scas
inc
push
jle
lock
fsub
adc
adc
sub
mov
and
outsl
pop
or
sub
cmp
lahf
xchg
insb
inc
test
call
jne
nop
movsl
clc
jae
add
stc
lcall
mov
pusha
bound
clc
aaa
inc
sti
dec
sti
jb
fsubl
add
fcomps
adc
ds
divb
in
mov
movsb
jle
mov
ss
fsubrs
jg
fcomps
testb
xchg
in
inc
push
sbb
jmp
scas
jnp
data16
and
out
fsubs
test
add
push
ljmp
jno
add
xchg
pop
dec
sahf
sbb
ds
mov
or
ss
mov
or
sub
adc
xlat
fnsave
and
mov
in
nop
add
repz
fistps
pop
out
repnz
std
leave
fldcw
idivl
mov
push
cmp
mov
dec
es
dec
sub
mov
jge
lret
jmp
fcomp
stc
sbbb
scas
jecxz
loope
and
push
inc
fwait
push
mov
and
test
push
pxor
jmp
mov
inc
push
aam
cwtl
aaa
into
mov
pop
xor
mov
or
popl
xor
in
in
xor
adc
out
notb
cwtl
clc
ret
add
or
lea
in
mov
sbb
or
or
lods
sub
cmc
xchg
insl
pop
rol
shlb
dec
out
xor
sub
push
out
dec
or
pushl
push
sbb
fnsave
cltd
mov
ss
add
push
adc
test
divl
sub
fnsave
xor
pusha
sub
or
pop
or
push
cmp
in
dec
sub
ss
or
and
push
inc
ret
shlb
inc
lds
xchg
inc
ds
jle
inc
fnsave
imul
pop
je
scas
push
mov
lcall
lods
adc
cmpb
mov
inc
mov
std
clc
inc
test
aam
lea
icebp
dec
push
orl
push
xchg
imul
movzbl
fists
cmc
out
add
test
xchg
mov
pop
sbb
rorl
mov
imul
popf
lods
dec
mov
pop
add
add
pop
jae
pushf
or
pop
icebp
nop
mov
and
cltd
out
je
rcrb
inc
jne
out
std
add
fnstenv
pusha
mov
adc
push
add
sti
sbb
lret
in
mov
push
imul
ja
adc
pop
shlb
jns
inc
or
imul
push
stc
xor
sub
mov
repz
test
popa
test
sbb
add
sub
aas
bound
inc
push
test
pop
in
mov
lea
nop
rcr
jb
cltd
pop
xor
stc
popl
loopne
arpl
adc
das
pop
or
lcall
mov
notl
stos
es
jecxz
fs
adc
add
rorb
mov
je
addr16
loop
mov
faddl
and
push
jns
fbld
popa
aad
imul
jmp
fiaddl
out
or
push
fwait
lahf
cmp
fidivl
adc
jge
xor
inc
cmpb
inc
in
std
rolb
test
das
jne
push
xor
repnz
popa
jmp
mov
out
cmp
repnz
out
cwtl
inc
sub
in
daa
cmp
loope
mov
and
and
outsl
push
xchg
push
fisttpl
mov
and
outsl
fdivl
inc
adcl
imul
leave
fldcw
vsqrtsd
push
mov
pop
xor
out
popa
pop
xchg
sbb
or
imul
dec
mov
inc
shlb
fwait
lock
push
pushf
pop
stos
inc
mov
mov
add
loopne
test
into
sub
ja
sub
adc
push
js
or
cmp
and
mov
rcll
mov
icebp
shlb
mov
xor
cmp
adc
aaa
or
push
xchg
add
push
jne
std
arpl
adc
mov
sbbb
std
xchg
in
ror
daa
mov
pop
gs
xchg
pop
pop
fcoml
shlb
js
es
xor
das
imul
outsb
and
nop
xor
out
cmp
or
pop
sbbl
cld
push
leave
push
cmp
fsubs
stos
or
addr16
jne
pop
jecxz
adc
mov
and
popl
test
jge
and
mov
dec
fsqrt
lods
sbb
mov
pop
imul
ljmp
jb
in
cmpl
ljmp
push
in
mov
dec
xor
shlb
addb
push
pop
pop
testb
sub
push
insb
add
das
lock
jmp
jle
lea
add
push
push
sub
xchg
xor
fsts
jle
popf
xor
adc
xchg
lds
and
dec
xor
imul
lods
cmpsb
outsl
cmp
outsb
je
rol
sahf
outsb
jg
lea
outsl
dec
push
jno
movsl
add
pop
stos
lods
lds
filds
dec
adc
fldl
loop
call
push
push
inc
std
xchg
jo
jae
dec
rep
add
mov
roll
addr16
dec
mov
add
pop
outsl
inc
push
jb
dec
pop
ss
outsb
loope
mov
push
fidivrs
add
add
test
fnstsw
mov
int
pushf
lods
mov
or
mov
adc
lret
push
add
xor
adc
push
aas
adc
in
into
fidivs
mov
xor
inc
aam
addl
jno
pop
aaa
dec
and
sahf
xchg
inc
sub
mov
push
ret
filds
push
add
mov
fcmovbe
addr16
jae
and
inc
int3
fidivrs
xchg
popf
mov
sub
dec
pop
idivb
cmpsb
dec
pushf
adc
sub
outsb
jl
jge
jecxz
lods
add
mov
jbe
sub
cmp
sub
mov
adc
dec
pop
mov
subl
test
sub
jb
jge
stc
and
sbb
lahf
push
lahf
push
rcrl
aaa
xor
mov
scas
pop
lret
dec
pop
jmp
adcl
imul
pop
xchg
lds
mov
cmpsl
loop
push
or
ds
in
pushf
cs
ljmp
xor
cmp
mov
cmp
xchg
jl
mov
jp
mov
add
sbb
clc
enter
and
repz
and
adc
movsb
pop
jecxz
repnz
sub
rcl
je
xchg
popa
jg
test
ds
mov
mov
aad
pop
pop
fstpl
mov
inc
movsl
cmp
lret
inc
mov
hlt
ret
sub
hlt
push
pop
loop
lods
cmp
add
jb
shl
dec
mov
add
mov
imul
cld
xchg
push
add
shlb
mov
popf
push
bound
std
stos
iret
sbb
push
cmp
fadd
lcall
push
loope
notl
inc
push
xchg
insb
mov
into
iret
mov
pop
add
aad
xor
arpl
mov
push
addr16
outsl
inc
sahf
fwait
add
cltd
call
mov
gs
xchg
xchg
lods
jne
mov
bnd
add
in
cld
adc
push
mov
shrl
lods
jmp
jp
mov
neg
nop
aam
xchg
push
movsb
andb
mov
pop
mov
dec
add
loop
mov
notb
sub
or
xchg
cmp
leave
je
fcompl
fisttps
jl
xor
jb
adc
out
sahf
addb
cli
mov
divb
jns
out
mov
mov
icebp
pop
in
sub
lret
ds
mov
fsubr
mov
push
mov
out
movsb
in
jae
sub
add
mov
jne
sbb
sahf
or
mov
loope
dec
pushf
ds
sbb
test
in
xor
jg
das
imul
or
icebp
jb,pt
sbb
divl
jg
jge
inc
popl
dec
jno
jle
out
gs
or
dec
xchg
jns
gs
insb
xchg
push
pushl
iret
ss
pop
icebp
or
out
jle
mov
arpl
or
arpl
cmp
mov
xor
jge
pop
xrelease
mov
ficompl
sub
xlat
pop
dec
lods
mov
inc
int3
fdivs
adc
jl
dec
xchg
cmpsl
loop
or
push
loopne
inc
or
cmp
push
sub
sti
inc
arpl
lock
push
movsb
dec
mov
rorl
lcall
mov
dec
and
mov
cmpsl
lahf
add
inc
rorb
xchg
divps
jl
in
pushf
ficoml
sub
inc
xchg
sub
mov
mov
or
fs
sbb
aas
sub
xchg
gs
inc
xor
shlb
fmull
iret
mov
sbb
dec
xchg
shrl
pop
mov
aad
or
iret
pop
mov
pop
adc
es
push
out
adc
lea
ja
mov
adc
cmpsl
or
clc
dec
dec
in
xchg
or
lods
shl
adc
or
loopne
jnp
xchg
pop
mov
sbbl
jl
sub
loop
dec
pop
fucomp
rorl
pop
out
xchg
push
out
sbb
push
push
out
pushf
xchg
jl
inc
scas
mov
andl
push
ljmp
sub
ljmp
jno
roll
mov
cmp
roll
jecxz
out
mov
sub
or
jae
int
into
dec
dec
andb
mov
mov
xchg
mul
movb
jne
or
fcomps
cmp
out
fsubrs
inc
mov
mov
add
fidivrl
repnz
push
filds
cmp
cmp
in
test
daa
cmp
mov
andb
test
jmp
repnz
iret
mov
cmpsb
mov
jecxz
inc
scas
mov
xchg
sbb
adcb
jle
cmp
push
jbe
cs
int
cmp
and
shll
dec
xlat
outsl
and
dec
into
loop
pop
lea
sbb
pop
push
or
js
mov
push
dec
jmp
adc
xor
pop
movsb
xor
mov
test
cli
les
pop
enter
jg
xor
sub
jge
adc
aad
cwtl
xor
cmpsl
adc
dec
adc
push
fisttpll
and
aam
stos
and
xor
inc
mov
or
mov
imul
cmp
xor
cmpb
insl
hlt
imul
push
add
jae
mov
lahf
jecxz
hlt
lret
sub
shlb
cmp
pop
inc
aaa
dec
add
dec
cli
adc
out
call
jne
push
fidivs
mov
ljmp
or
xor
outsb
call
or
addr16
jecxz
push
fcmovu
test
fwait
mov
xchg
cwtl
sbb
addr16
mov
mov
or
loopne
mov
dec
mov
jge
cmp
mov
sub
jp
addr16
pushf
or
mov
sahf
pop
mov
bound
outsl
jge
add
outsl
sbb
sbb
je
cltd
jns
push
jp,pt
lock
shll
add
sub
push
pop
ds
stos
cmp
mov
cwtl
push
loopne
int
cwtl
mov
lret
cmc
test
addr16
mov
stos
inc
loopne
cmp
icebp
lds
loope
adc
test
clc
cmpsl
mov
sbb
outsl
lahf
ret
sub
nop
mov
lds
and
mov
add
push
xor
dec
xor
insb
inc
push
mov
fldenv
insb
mov
stc
loope
fcoml
or
sbb
mov
es
imulb
add
outsl
in
loopne
pop
or
in
jb
scas
push
mov
mov
stc
mov
or
push
sbb
loopne
movsb
pop
clc
roll
sbb
daa
xor
dec
cld
test
insl
dec
inc
inc
shlb
fsts
fisubrs
xchg
sub
outsb
stc
cwtl
push
out
cs
imul
sub
popa
jmp
test
es
aad
aam
adc
lahf
fs
push
xor
nop
dec
sub
jno
xlat
repnz
mov
push
cld
outsl
inc
pop
mov
lds
jne
pop
mov
clc
push
call
imul
pusha
es
fwait
mov
dec
xrelease
cwtl
jmp
aaa
push
jecxz
pop
arpl
xor
mov
pop
std
or
movsl
lahf
mov
fidivrs
sub
mov
bound
movsl
lret
xchg
int
jecxz
mov
in
xchg
mov
dec
loop
sbb
es
addr16
pop
and
xchg
mov
fcmovnu
xchg
add
pop
inc
mov
test
das
inc
or
cmp
insb
fcomip
aam
push
cmp
icebp
in
fcomps
js
pop
stos
in
cmp
xchg
inc
roll
mov
inc
fs
les
lds
inc
movsl
push
fs
cwtl
jo
lahf
mov
inc
es
inc
push
inc
or
jecxz
cwtl
pop
jg
or
sub
lret
mov
ljmp
out
cld
insl
cltd
xchg
sub
or
pop
lock
xchg
negl
mul
mov
mov
iret
xchg
psadbw
in
cmpl
imul
cmp
hlt
pop
sub
inc
inc
xor
int
pop
test
fiaddl
scas
lods
xchg
cmp
pop
xchg
mov
xchg
cwtl
mov
sbb
cmp
pop
subl
or
sbb
jns
jns
mov
pushf
out
sub
cli
arpl
push
int
inc
pop
int3
fidivrl
nop
in
cmp
mov
test
mov
or
cld
adc
data16
cmp
jg
or
cmpsb
les
ret
jle
cli
push
push
fs
out
test
add
rcrb
push
adc
inc
inc
in
adc
pop
cwtl
mov
int
jns
dec
stos
jp
popf
push
mov
pop
test
ds
sbb
jp
mov
inc
wbinvd
fstp
mov
repnz
or
push
push
jns
mov
mov
mov
xchg
orl
push
decl
cld
mov
lahf
insl
sbb
lods
cwtl
cmp
out
dec
ja
cmp
rcrl
push
cmp
or
int
xor
push
add
mov
cmp
jle
jmp
or
mov
roll
call
sbb
les
xor
adc
jae
jbe
das
lret
lret
hlt
push
out
aam
mov
scas
sbb
out
and
adc
mov
mov
sarb
mov
repnz
fadds
mov
ljmp
pop
adc
adcl
sbb
cs
or
push
shr
mov
sbb
test
data16
dec
es
test
test
fbstp
mov
lea
sbb
dec
jp
xor
out
das
ds
pop
pop
and
daa
pop
jo
adc
call
in
loop
xor
ljmp
xor
sub
lcall
and
lods
cmc
gs
lcall
ds
aaa
test
int
popf
cld
dec
push
xchg
add
lods
push
inc
sbb
adcl
pop
out
adc
ljmp
aam
adcb
add
rcrb
add
mov
xchg
inc
cmc
mov
xor
outsl
cmp
inc
test
clc
push
adc
mov
nop
mov
jo
mov
xor
pop
lods
xchg
imul
jb
push
daa
dec
pop
xor
xchg
xchg
std
lock
dec
out
arpl
test
adc
imul
add
popa
addr16
popa
and
lret
or
mov
push
push
jmp
imul
or
sub
fiaddl
dec
mov
hlt
aam
in
or
push
fcmovne
stc
mov
movsl
dec
icebp
pusha
dec
lods
and
cld
mov
mov
push
cmp
pop
xor
pop
cmc
outsb
push
sub
push
or
cmp
pop
push
jo
lods
cmpsl
and
js
sbb
ja
mov
jnp
ja
out
jp
movsl
inc
dec
xchg
andl
jno
int
rcrb
or
daa
ss
and
jg
cmp
shll
dec
cmp
stc
nop
mov
test
sbb
sbb
xchg
dec
xchg
clc
arpl
sbb
sub
out
je
jg
stc
orl
mov
mov
vrsqrtss
mov
cltd
andl
add
jns
cli
das
test
int
push
orl
inc
mov
in
in
push
repnz
cmp
sti
cwtl
out
or
sub
mov
inc
push
jb
sahf
jb
dec
mov
and
jl
jle
jae
add
in
insb
aas
xor
outsb
add
out
je
sub
shlb
stc
sbb
and
jmp
xlat
push
imulb
lds
mov
les
sub
movsb
test
mov
mov
jecxz
xchg
gs
out
std
or
dec
sub
mov
mov
mov
sub
jae
push
push
xchg
daa
inc
outsb
push
fildll
imul
jg
xor
mov
mov
or
inc
adc
jne
or
popa
addr16
inc
or
inc
xor
rolb
les
dec
jb
jl
jl
cmp
insb
jl
dec
js
std
pusha
out
lods
dec
sbbl
mov
mov
icebp
sbb
adc
or
pusha
inc
adc
jne
test
adc
pop
cmp
aaa
dec
in
and
inc
cmc
mov
ja
mov
lret
into
movsl
ja
jnp
pop
sar
adc
mov
push
or
out
or
jne
ja
or
repz
lret
cmp
xor
jge
adc
lret
sbb
shlb
shll
ret
ja
and
add
sar
xor
sbb
mov
mov
imul
adc
xchg
enter
flds
aad
stos
jae
mov
jbe
mov
sbb
inc
mov
mov
int3
aam
dec
pop
push
repnz
test
call
inc
out
out
mov
ffree
addb
incb
das
jno
testl
sub
push
push
cltd
stc
pop
inc
mov
rolb
in
pusha
xor
sahf
mov
in
lock
sbb
mov
hlt
aaa
testl
mov
enter
nop
xchg
sub
jmp
ds
js
adc
in
stc
nop
push
push
sbb
jl
test
fs
cltd
xor
jle
call
out
faddp
enter
add
loopne
sbb
jb
adc
mov
pusha
pop
inc
fisttpl
cs
fstl
popf
xor
inc
sti
mov
dec
sub
cmpsb
mov
subb
xchg
movsl
js
sub
sti
test
inc
adc
or
pop
sbb
cmp
dec
data16
aad
mull
les
inc
mov
sbb
cmp
push
lods
cmp
jge
xor
cld
jnp
outsl
cmp
mov
js
imul
add
jnp
cmp
jge
fisubrl
mov
js
in
es
pop
cwtl
jmp
push
insb
mov
jmp
lret
mov
out
xor
push
pop
or
cmpsb
cmp
push
shl
cmp
inc
push
repz
pop
repz
mov
out
mov
sbb
mov
inc
out
adc
jg
enter
mov
sub
or
lret
lods
cmpb
mov
inc
loope
iret
adc
inc
xchg
xor
mov
mov
sbb
cmpsb
mov
xor
lds
lods
mov
gs
scas
fisubrs
fldlg2
incl
out
jns
sub
push
ds
mov
pop
fucom
xorl
push
sub
in
cmpb
jbe
sub
add
adc
rclb
loop
jecxz
and
rorb
in
repnz
mov
xchg
repz
push
in
or
pop
add
and
add
inc
cmpsb
and
rcrl
mov
cmp
mov
xchg
mov
jns
addb
les
dec
push
or
jno
in
cltd
stos
adc
dec
imul
lahf
mov
movsb
cmp
fsubs
adc
and
mov
xor
rcr
fs
cmpsl
leave
mov
lcall
rcrl
bound
fiadds
mov
mov
in
in
cmp
jl
das
mov
inc
fwait
jns
lods
iret
inc
pop
jge
sub
fwait
jmp
out
mov
mov
sar
mov
or
inc
xlat
in
mov
pop
ret
fwait
gs
xor
dec
dec
and
lahf
pop
ret
mov
sub
jno
push
cmp
mov
movsl
in
sbb
test
sub
or
cmpsb
stos
mov
inc
pop
add
fsubrs
fnstcw
dec
or
cmp
push
sub
inc
std
lret
xor
cwtl
je
pushw
jno
ss
stc
nop
ss
sbb
xor
and
add
pop
test
outsb
out
add
mov
cmp
int3
lret
or
jg
fisubl
std
sbb
lods
jp
add
imul
inc
jecxz
outsb
add
jo
or
ja
sub
push
pusha
push
add
sub
lahf
out
dec
movsl
je,pt
test
fdivl
jae
adc
add
mov
mov
in
fcmovne
push
cmp
neg
popf
ss
mov
and
jl
subb
stos
inc
and
shrb
loop
push
in
push
lea
cmp
sbb
xlat
pop
hlt
xor
loope
push
ljmp
call
cmp
addr16
jne
mov
mov
mov
ss
lret
cmp
pop
incb
adc
enter
push
dec
jmp
mov
in
adc
pop
mov
ss
cmp
insb
sub
orl
repz
dec
lea
fldl
addl
pop
cmc
subl
mov
subl
test
popf
xor
sub
jecxz
outsl
mov
lods
push
or
inc
mov
scas
mov
rcrb
mov
in
lret
and
or
xlat
cmp
in
pop
mov
push
testb
sbb
add
lock
ss
outsb
sub
negb
mov
and
and
sbbl
mov
mov
popf
jecxz
push
movsl
stos
add
test
prefetch
add
jle
mov
mov
loopne
jl
cmp
scas
pop
or
test
aaa
pop
pushf
addb
add
scas
sub
push
pusha
and
push
cli
iret
popa
andl
sbb
and
mov
lods
jbe
pop
xor
das
insb
arpl
in
push
mov
push
daa
outsb
ljmp
lcall
lcall
inc
loope
lea
jbe
lea
xchg
movsl
leave
adc
sub
fisttps
pop
fwait
test
lret
cld
dec
rcl
and
aad
jecxz
mov
cmpsb
jecxz
stos
adc
push
inc
jg
sahf
cltd
push
sbb
mov
fwait
mov
cs
and
sbb
inc
fisttpll
pop
ret
fsincos
dec
fstps
sub
jge
mov
int
cmp
sbbl
adc
jge
jge
jg
jl
xchg
push
push
in
ja
lret
push
adc
mov
ficompl
sbb
int3
jecxz
xorl
lods
mov
push
enter
and
jne
dec
inc
push
out
push
inc
or
inc
aaa
push
pop
or
pop
sub
cmp
insb
rcr
add
jnp
xchg
xor
stos
lds
xor
mov
mov
stc
sbb
fidivrl
adc
jb
aam
imul
sbb
cs
add
jae
repz
xor
cwtl
xchg
mov
insl
fxch
gs
insl
add
sbb
ret
xchg
and
mov
cmp
jl
inc
loope
out
pusha
or
cltd
mov
hlt
mov
xor
fcomp
test
mov
adc
xlat
lret
xchg
xchg
add
dec
and
sub
pop
dec
mov
dec
sub
mov
insl
std
sarb
test
sub
nop
inc
xlat
leave
or
mov
out
pop
lods
ja
add
mov
call
popa
lret
in
mov
stos
jecxz
lods
mov
aas
cmpsl
dec
pop
in
jnp
je
pushf
int
mov
mov
push
xchg
lds
lock
jl
adc
mov
or
adc
movsl
add
mov
add
adc
xor
call
pushl
mov
lret
les
rcl
cs
cmpsb
ret
leave
pop
ror
in
inc
cwtl
jb
rolb
and
dec
fs
inc
pop
loope
ret
xor
or
mov
xor
insb
ja
fdivs
fs
lods
fistl
jae
sub
testl
stos
xchg
pop
sub
aaa
dec
setae
mov
decb
repnz
pop
les
add
fiaddl
or
loop
mov
pcmpgtd
pop
test
mov
in
sbb
clc
dec
jne
pop
iret
cmp
stc
lock
mov
jecxz
adcl
bnd
fiaddl
or
lods
inc
sti
adc
std
add
inc
insl
js
in
imul
aad
mov
call
jns
mov
add
push
inc
pop
xor
mov
enter
and
pop
fisubrl
push
loope
push
call
popl
rcll
pop
subl
mov
dec
lea
loope
out
inc
rcrb
cli
int3
adc
mov
jne
push
lods
adc
jbe
popa
cmc
mov
push
xor
jge
pop
ljmp
insb
lret
js
insb
push
in
lds
pop
jmp
jge
push
mov
push
stos
xor
fdivrl
movsb
and
cmp
xor
mov
aam
popaw
test
xor
fildl
mov
stos
adc
fwait
rcl
xor
dec
jmp
jb
iret
and
mov
jge
scas
pop
aad
xchg
pop
dec
lret
jne
sub
adc
sub
pop
ret
xor
mov
jecxz
mov
sbb
mov
pop
mov
rcr
lret
add
subb
inc
dec
dec
stc
xchg
shrb
and
std
push
fsubs
xchg
fwait
rorb
push
mov
and
sar
in
sub
in
aad
loop
adc
insl
add
xchg
in
scas
mov
add
push
imul
pop
lock
xor
inc
ret
or
decl
or
lds
sub
lods
or
sbb
dec
xchg
test
push
fistl
aad
int
or
push
mov
pop
in
pop
rcll
imul
inc
mov
in
lods
push
ret
std
test
jecxz
mov
rclb
negl
divb
dec
lret
rclb
fcmovnbe
pop
push
popf
icebp
add
lahf
sbb
lret
and
pop
imul
xor
popf
aaa
sub
sub
cmp
push
sub
outsb
add
xchg
xchg
xor
lods
cmp
mov
fmull
mov
sbb
push
push
xor
sbb
and
mov
insl
mov
loopne
cmp
lods
ror
out
jae
jle
hlt
inc
in
cmp
pop
sub
dec
or
jne
repnz
xlat
add
push
andb
stos
xchg
mov
jns
insb
out
fistpl
fiaddl
outsb
iret
call
sbbl
pop
notb
loop
xchg
daa
aas
cmp
or
mov
mov
sti
pop
pop
arpl
pop
rcll
mov
adc
out
inc
out
lds
inc
lods
test
fidivl
or
rcrl
out
mov
aaa
push
lock
xlat
cmp
and
cwtl
cltd
rorb
mov
sbb
jnp
outsl
xchg
pop
push
mov
jns
mov
arpl
cli
mov
out
dec
pop
outsl
movsl
arpl
pop
lods
repnz
xor
arpl
mov
testb
mov
test
lock
jae
ror
je
incl
dec
xor
mov
gs
les
js
sarb
add
sahf
mov
shll
adc
aaa
je
push
mov
inc
sbb
push
push
jns
out
mov
fbstp
inc
dec
jnp
jg
sbb
adc
in
es
es
jge
jo
and
xor
sarl
cmp
cmpsb
pop
jns
mov
xor
sbb
push
inc
and
xor
inc
out
xlat
xchg
sub
ljmp
jg
xor
lahf
mov
shrb
lods
mov
popa
stos
push
insl
xchg
xor
mov
fists
aaa
cmp
mov
pop
call
leave
out
and
aaa
push
cmp
shl
int
repz
aam
jecxz
in
lock
int
subb
pop
insb
lds
sub
and
shl
adc
xchg
push
push
add
jnp
outsb
mull
dec
and
out
and
push
ret
das
jl
xchg
adc
stos
xchg
mov
jp
imul
cmp
jbe
or
and
lea
int3
mov
inc
fisubl
imul
add
mov
cld
sub
adc
cmp
jmp
or
cs
and
js
fsubs
std
sar
pusha
out
push
cmp
jg
addr16
jg
dec
addb
xchg
cltd
pop
mov
mulb
lcall
fisubs
or
or
add
add
mov
push
in
mov
or
call
adc
lret
mov
pop
enter
jb
cwtl
mov
das
outsb
mov
test
mov
lret
add
inc
push
pop
ret
pushl
cld
inc
adc
subb
fdiv
adc
fsubrl
push
add
jnp
je
imulb
mov
jae
lahf
sub
or
clc
sbb
sbb
sbb
mov
imul
cmp
int3
cltd
cmp
cmp
push
into
gs
sbb
popf
rclb
dec
in
sbb
scas
mov
insb
in
sub
repz
cmpsl
mov
pop
fimull
sub
rorl
in
jmp
push
cmp
les
sbb
jge
inc
sub
add
testb
push
mov
inc
push
push
outsb
mov
pop
loopne
stos
pop
addb
push
gs
push
jo
or
pop
xor
pop
cmc
enter
sahf
jmp
arpl
sub
and
das
ret
xor
rorb
leave
das
adc
pop
test
testl
fmul
arpl
std
pushf
lods
and
lret
jbe
inc
mov
sti
pop
mov
inc
jge
and
pop
or
mov
into
jl
lock
adc
pop
adc
mov
mov
int3
and
sbb
sar
inc
push
sbb
leave
subb
xchg
sub
sahf
aaa
into
outsb
xor
arpl
subl
int3
cmp
outsb
or
dec
or
sub
pop
cmp
xor
add
aam
xchg
sbb
outsl
push
and
xchg
dec
stc
cld
mov
push
sub
in
outsl
enter
aam
push
pop
pop
loop
jbe
lret
add
adc
sub
outsb
sbb
ret
fisttps
add
mov
and
sti
test
add
shrb
lea
sbb
jae,pn
les
call
jmp
or
pop
mov
mov
jb
and
divl
cmpsl
jo
stc
ss
out
push
cltd
add
mov
lcall
mov
sbb
mov
decb
pop
cmp
jecxz
movsb
xchg
mov
cmp
enter
aam
iret
mov
inc
fisubrs
insb
adc
inc
icebp
scas
cmp
pop
cmp
stos
push
inc
pop
clc
mov
fs
inc
push
sub
popa
ds
cmpsl
adc
out
lds
sub
jns
jnp
mov
dec
jmp
jge
push
inc
cwtl
cmp
mov
movsl
mov
sbb
mov
decb
and
icebp
pusha
adc
popa
xchg
mov
add
or
imul
push
adc
or
fidivrs
call
mov
dec
gs
inc
fwait
sti
js
sbbb
jbe
pop
iret
loopne
ret
mov
out
jbe
xchg
cmp
rcrb
or
push
xchg
jnp
jp
push
pop
cmp
or
subb
push
fstpl
les
ret
dec
or
xchg
mov
mov
jmp
sbb
testb
mov
out
psubw
in
push
xchg
loop
or
add
outsl
cld
mov
xor
xchg
xlat
xchg
in
rcr
mov
lods
hlt
push
cmpsl
jecxz
add
outsl
sub
lret
shl
dec
cmp
ljmp
mov
sbb
or
xlat
mov
pop
in
rclb
shrb
mov
pop
and
push
incl
fists
filds
xor
and
inc
arpl
adc
test
in
pop
sub
popf
sbb
mov
imul
lods
mov
leave
psubsb
ljmp
movsb
sbb
enter
xor
inc
fs
rol
out
add
enter
test
out
cmp
dec
dec
icebp
xchg
sahf
inc
and
jl
and
stc
sbbl
cltd
dec
pop
xor
mov
lods
jns
jmp
shlb
jne
fmul
adc
std
bnd
mov
jae
xchg
vmptrld
outsb
mov
or
and
negb
and
mov
inc
sub
mov
inc
or
sbbl
push
andb
push
pop
cmp
je
sbb
rol
clc
outsl
pop
cmp
cmp
fsubrl
mov
add
sbb
or
sub
pushf
adc
jo
push
pop
dec
dec
dec
stos
inc
les
adc
out
pop
setle
push
cmpsl
loop
fsub
in
dec
inc
pop
imulb
xchg
jl
jle
ss
adc
cli
and
jnp
cltd
out
out
sbb
dec
fists
jge
or
xchg
xchg
pop
xor
lcall
mov
add
inc
loope
enter
xchg
lods
jbe
sbb
je
push
mov
lods
jno
fstl
inc
mov
mov
test
into
jmp
adc
pop
inc
stos
xchg
xchg
mov
mov
orb
inc
adc
jne
jo
push
pop
pop
inc
push
push
fnstcw
movsb
das
or
je
insb
scas
pop
adc
imul
lcall
mov
pop
mov
fsubs
mov
mov
in
pop
add
dec
repz
xor
mov
inc
jmp
aam
mov
filds
aam
adc
adc
dec
jecxz
pop
fistpl
mov
ljmp
jno
adc
cmp
fsubs
mov
lds
adc
out
mov
push
ds
scas
or
sbb
aas
bound
mov
test
in
push
in
pop
int3
ja
mov
mov
pop
lock
bound
inc
sub
cmpsl
nop
xchg
push
or
jge
pop
mov
mov
loopne
int
dec
aaa
mov
ficoms
popa
loope
cmc
adc
int3
jg
mov
push
clc
out
push
les
or
mov
sbb
aad
jbe
add
jo
std
call
inc
adc
ret
inc
and
adc
mov
mov
and
push
ja
mov
push
mov
push
loop
sub
jle
fnstenv
outsb
pop
mov
daa
mov
int3
xor
pop
inc
fptan
movsb
push
pop
sub
jg
cmp
push
fimuls
inc
xchg
call
mov
scas
test
ror
mov
repnz
dec
sub
add
cmpsb
cmc
dec
sub
push
fadd
pop
into
arpl
test
and
mov
rolb
sbb
popa
icebp
rorb
or
mov
mov
xchg
mov
data16
scas
inc
fisttpl
pop
dec
cmpsb
mov
lods
sbb
sti
push
mov
xchg
adc
xlat
orb
je
lds
push
ret
and
dec
data16
dec
bound
aam
stos
mov
mov
xchg
xchg
fsub
mov
or
inc
push
inc
sub
cmpsl
mov
sbb
leave
sub
add
add
mov
and
std
mov
leave
cmpl
sub
ficomps
dec
arpl
adc
inc
push
rcrl
mov
pop
cmp
push
fwait
test
add
pop
test
fs
insl
lret
jl
std
lcall
xor
out
jns
inc
lods
sub
pushf
jae
sbbl
adc
push
pop
and
push
dec
add
jae
mov
addr16
dec
mov
out
xor
mov
movq
mov
dec
fildl
imul
adc
hlt
jnp
or
cmpsw
jge
mov
mov
cld
ret
inc
int
mov
pop
fwait
sub
dec
ficoms
pop
addr16
int
gs
outsl
lret
mov
mov
inc
sti
lahf
das
and
rolb
sub
popf
test
jne
popa
adc
test
jle
inc
leave
pop
call
mov
bound
lods
sub
ljmp
loop
out
sub
jno
add
mov
or
mov
gs
enter
xchg
outsl
push
lds
and
scas
or
fidivl
fs
or
push
dec
dec
outsb
or
mov
mov
inc
fdivrs
lcall
jl
mov
jecxz
xchg
clc
mov
xchg
mov
jl
stc
push
les
scas
mov
insb
daa
lret
jae
adc
je
or
mov
push
scas
sbb
sbb
cld
cmp
cwtl
leave
xor
addb
cwtl
jmp
cwtl
cltd
inc
sar
pop
mov
cwtl
lods
mov
pop
inc
push
adc
pushf
lahf
aaa
cmpsl
push
out
or
xchg
jl
jge
orb
add
add
lods
add
inc
fisttpl
push
fmuls
push
lea
in
stc
push
sub
jo
cmp
js
sub
jle
push
jp
push
adc
sbb
inc
mov
mov
cmp
cmc
mov
adc
dec
popa
cmp
fstpl
movlps
in
rcrb
add
push
or
add
pop
je
jle
out
call
push
lea
ss
xor
push
fisubs
jb
stc
mov
les
jmp
or
push
testb
imul
xchg
push
cwtl
mov
sbb
mov
add
mov
pop
mov
and
fwait
xchg
nop
adc
cmp
jns
push
stos
jmp
push
rcll
and
fisttps
lret
imul
aad
jge
adc
inc
jecxz
sbbb
adc
es
rorl
clc
xchg
scas
cmp
xchg
cmp
ret
hlt
xor
aad
loope
pusha
adc
pop
cmp
daa
ljmp
inc
les
repnz
add
rorb
inc
ds
in
push
aaa
mov
dec
sub
test
fstp
lock
mov
fisubs
and
sti
mov
push
nop
js
ljmp
scas
xchg
push
pop
imul
mov
sbb
sarb
mov
cmpsl
jp
xlat
out
inc
psubusw
or
scas
test
mov
cmp
inc
sub
subb
popf
shrl
aam
in
or
jo
fsubl
or
add
or
orb
and
jmp
adc
xchg
mov
hlt
push
aad
jg
js
pop
fcom
loope
sub
lds
xor
loop
jl
mov
adc
leave
mov
fsubp
les
dec
and
and
jb
stc
pop
loope
je
mov
rorb
pop
shrb
enter
and
xchg
jp
and
dec
add
xlat
mov
stos
movsb
xlat
lock
das
test
add
jae
pop
inc
push
inc
imulb
mov
sbb
int
call
jo
and
out
daa
push
jne
jno
push
lahf
xchg
mov
icebp
sbb
jns
divb
in
pop
outsl
add
repz
xchg
gs
inc
pop
dec
outsb
enter
xlat
outsb
aaa
pop
mov
fsts
and
jecxz
jecxz
sarl
lahf
dec
or
mov
dec
mov
outsl
test
adc
lea
adc
inc
push
xor
shrl
pop
and
hlt
and
and
lahf
dec
jae
push
fsubrl
mov
int3
stos
push
inc
xchg
jp
push
push
in
hlt
shl
repnz
cmp
dec
mov
mov
out
fisubs
lods
aas
mov
push
add
ljmp
scas
mov
cmp
push
mov
gs
ret
cmp
popf
push
and
nop
fs
frstor
inc
arpl
arpl
inc
out
push
inc
add
cmp
cmp
pop
and
les
mov
sbb
mov
scas
add
lahf
notb
xor
add
and
sub
inc
inc
bound
loope
dec
ss
xchg
in
std
jb
push
lret
sbb
inc
inc
cltd
or
cmpl
add
dec
xchg
mov
mov
mov
test
jle
mov
in
jnp
jae
leave
sbb
jl
sbbl
sti
mov
mov
fwait
add
inc
cmp
cwtl
lods
loop
cltd
pusha
mov
outsl
mov
stos
xchg
pop
icebp
xlat
sub
or
aam
rcll
sbb
divb
movsl
or
ret
pop
mov
loope
pop
aam
or
sti
pop
pop
mov
and
xchg
fdivrs
push
pushf
mov
adc
push
cld
push
popf
stc
fcoml
add
outsb
mov
mov
data16
cwtl
movsl
es
xchg
xor
cmp
jo
ret
xchg
xchg
sub
sub
xchg
or
cld
lcall
jbe
movsl
arpl
subl
add
mov
shrl
addl
add
and
jmp
or
repz
loope
and
push
or
cmp
mov
scas
dec
xchg
mov
aaa
pop
jns
xor
sub
pop
mov
dec
in
movl
add
enter
mov
fstps
xor
pusha
divl
jo
adc
mov
flds
mov
push
mov
jb
xchg
pop
add
hlt
sub
sub
dec
dec
fistpl
pop
testb
adc
fdiv
ret
mov
push
sti
add
xor
popf
addb
jb
sahf
sahf
and
jmp
sub
jg
test
push
into
mov
int3
sti
cltd
sub
mov
jne
sub
dec
test
das
call
mov
pop
dec
mov
xchg
adc
mov
in
adc
movsb
fidivl
push
mov
cli
testl
lcall
mov
mov
shll
mov
repz
cmp
popa
cwtl
outsl
jb
movsb
ljmp
addl
cmpsb
mov
add
mov
sbb
stos
imul
mov
outsb
cmp
stos
popf
gs
or
rorl
inc
insb
and
mov
iret
movl
das
adc
stos
arpl
fdiv
test
daa
adc
pop
pop
int
cmp
xchg
repz
dec
or
add
scas
and
sti
xlat
outsb
icebp
aaa
and
and
adc
arpl
stos
shl
mov
mov
cmp
sbb
jg
jne
incb
das
out
inc
cld
lds
mov
lcall
cltd
jle
decl
insl
add
popa
mov
pop
mov
push
cmpsb
cmp
sti
sub
mov
mov
lods
inc
inc
mov
and
mov
shll
jbe
push
cmp
push
mov
push
xor
inc
ffree
xchg
mov
shlb
test
mov
add
test
dec
mov
insl
aaa
pop
sahf
pop
push
in
push
hlt
call
xor
sarl
adc
int
mov
and
test
data16
mov
stos
aas
ds
stos
aam
push
adc
jae
aas
cld
push
scas
mov
shrb
ss
pop
push
adc
lods
xor
mov
fcmovnu
lock
scas
inc
int3
fildll
push
outsl
pop
push
sub
call
jb
sbb
and
mov
cmp
insl
scas
ss
into
fidivrl
cmp
inc
dec
sbb
sub
outsb
repnz
xchg
stos
adc
mov
repnz
cmp
sbb
shll
pop
call
fsubl
decb
and
cmpsl
xorl
push
sahf
mov
adc
pop
dec
inc
pop
push
in
dec
ss
fnsave
outsb
je
jbe
mov
outsb
mov
inc
inc
in
pushf
jb
fidivrs
loope
into
xor
rcrb
mov
fwait
pop
stc
lock
mov
jbe
out
enter
test
sbb
jp
inc
cmp
mov
mov
test
popa
enter
or
add
mov
addl
stc
std
fdivrs
test
sti
xchg
mov
inc
pusha
adc
pop
test
push
ja
xor
inc
rcll
clc
ljmp
cltd
push
inc
faddl
sbbb
arpl
mov
in
test
lret
int
or
je
movsl
jno
xchg
mov
push
into
mov
out
xchg
pop
enter
mov
imul
xor
std
into
jle
iret
out
mov
inc
inc
adcl
enter
test
outsl
shrb
mov
ljmp
aas
cmp
sti
xchg
std
or
pop
mov
sub
xor
dec
push
xchg
aad
xchg
nop
test
cwtl
iret
call
mov
sbb
rorb
and
loop,pt
and
movsb
push
daa
insb
add
ss
cltd
and
mov
shrb
aad
popf
push
sti
mov
les
stos
ficoms
and
push
xor
std
imul
cmp
sub
dec
mov
cmp
ret
imul
or
arpl
fcomip
lea
mov
loop
jbe
aam
int3
std
std
adc
push
adc
mov
jne
dec
push
filds
push
js
inc
xchg
xor
dec
cmp
jle
sub
pop
lods
insl
ret
sbb
mov
pop
cli
dec
push
repnz
sbb
int3
jae
fstpt
dec
inc
pop
jmp
mov
sub
jno
popa
dec
divl
cmp
dec
jge
pop
lds
xchg
mov
into
xchg
or
inc
push
dec
push
or
jge
adc
adcl
mov
in
sbb
mov
ja
scas
je
and
fimull
test
cmp
lods
push
test
jnp
cmc
js
push
daa
rcrb
std
cld
incb
xchg
shl
cmc
add
inc
lods
outsl
daa
sbbl
cmp
lret
mov
arpl
in
inc
mov
inc
ds
dec
jmp
mov
cmc
pop
in
sbb
sub
andl
jg
sti
ret
dec
xlat
ret
or
or
sbb
xchg
pop
add
push
xchg
test
fiadds
lcall
cltd
test
movl
jae
int3
or
xchg
sub
pop
and
inc
bnd
test
xchg
add
adc
cltd
js
mov
gs
xchg
cmp
inc
xor
pop
fcoml
push
jae
iret
mov
lret
fcomps
fdivrl
cmp
pop
dec
cmp
xchg
inc
cmpsl
or
and
shrb
and
fisttpl
xchg
adc
dec
or
sbb
jl
test
cmpsl
ja
xchg
es
add
mov
loopne
mov
js
mov
xchg
loopne
rclb
mov
out
in
cmp
and
out
faddl
xchg
and
fwait
les
decl
cmpsb
repnz
inc
aad
push
leave
shl
and
enter
jb
cld
jecxz
scas
inc
lahf
pop
pushl
xor
cltd
jmp
sar
xor
sti
xchg
sbb
or
xor
addb
sub
mov
lret
cmp
cmp
cmp
scas
and
fistl
loopne
shrb
enter
icebp
pop
mov
sbb
push
mov
pop
clc
or
xlat
jp
inc
xchg
bound
fisttps
push
mov
dec
inc
jb
xchg
nop
sbb
fs
cmp
lea
or
sub
je
outsb
test
dec
mov
test
inc
or
sub
inc
mov
addr16
inc
sbbb
movsl
cmp
sbb
popf
mov
push
sahf
bound
outsl
jo
mov
not
mov
inc
je
cwtl
ficoml
cmp
fistps
loopne
jbe
call
mov
inc
jno
orl
push
hlt
push
and
lahf
lahf
repnz
xor
lea
adc
sub
mov
xor
mov
cltd
rol
cwtl
fisubl
mov
icebp
pop
shl
jmp
gs
aad
call
sub
repz
push
aam
clc
sub
arpl
mov
mov
ds
xchg
cltd
mov
std
mov
jmp
or
stos
jae
pop
in
fcoms
fnsave
imul
adc
xchg
mov
dec
pop
push
cmp
into
movsb
cmp
fcoms
pop
mov
xchg
out
jno
fisttps
adc
fisubl
jb
and
xchg
pop
mov
movsl
int3
and
scas
mov
jne
dec
stc
push
push
push
push
popf
in
jbe
dec
push
pop
xor
mov
ret
pop
pop
push
cld
xchg
mov
xor
sbb
pop
loopne
cld
inc
out
jl
in
rorl
shrb
adc
add
add
xor
imul
stc
pop
mov
push
or
repnz
hlt
popf
lods
stc
sarl
add
andb
cmp
cmp
rcrb
add
cld
or
rorl
sbb
mov
rol
fsubrl
out
sub
mov
adc
fdivp
data16
xchg
push
or
out
lds
ficoml
jbe
cld
popa
add
xor
adc
adc
pop
sahf
hlt
mov
or
mov
pop
call
mov
cli
sti
adc
dec
and
jmp
dec
outsl
lods
add
insb
ret
dec
sbb
loop
orb
stc
sub
or
sbb
or
mov
mov
ret
sbb
add
outsb
xor
pop
sbb
dec
jg
mov
iret
roll
add
cltd
adcl
test
iret
ja
ss
sbb
cmp
jg
mov
nop
pushf
test
dec
mov
lcall
ja
mov
jo
aam
pcmpeqd
inc
das
jp
test
jmp
adc
shll
xchg
adc
ss
jb
add
ss
push
xor
pop
gs
xchg
inc
and
filds
and
loope
lcall
push
cmpsl
in
fwait
lcall
enter
mov
xor
ljmp
loope
add
movsl
cld
mov
movups
addr16
adc
fcoms
xchg
xchg
sbb
aam
add
rorb
gs
loopne
inc
adc
jns
push
cltd
push
or
jnp
push
int3
or
daa
in
inc
lahf
mov
xchg
fldenv
popa
loopne
jb
mov
icebp
jl
movsl
cwtl
test
cltd
add
inc
test
sbb
jne
or
cld
cli
lods
mov
push
sbb
add
in
loopne
mov
push
dec
popa
mov
xchg
xor
jo
sub
cs
pop
dec
xlat
and
sbb
iret
inc
stos
mov
mov
push
mulb
mov
cmp
push
xor
ret
pop
and
sub
lcall
jmp
movhps
fbstp
inc
sahf
sub
adc
hlt
insb
jl
lret
adc
mov
imul
fwait
shl
dec
scas
out
pop
sub
je
pop
adc
jnp
cmp
leave
test
mov
jp
jp
pop
repz
pushf
rcrb
jl
stc
aas
push
daa
iret
mov
jae
repz
pop
bound
push
push
ljmp
mov
ficompl
repnz
outsb
add
jge
and
loopne
movsb
daa
cmpsl
fisubl
or
testl
int3
inc
repnz
or
and
les
cmp
xchg
pop
inc
out
jp
xor
mov
imul
sbb
pop
sbb
inc
out
mov
xchg
enter
mov
pop
out
ljmp
or
cmp
xor
hlt
aam
push
lds
lret
push
push
lods
xor
scas
and
in
ret
push
mov
fdivs
clc
sub
sahf
cmpsl
sbb
adc
stos
aam
push
in
data16
das
lds
movsl
mov
daa
pop
stos
xor
loop
mov
xchg
test
dec
scas
ljmp
test
add
mov
bound
arpl
mov
jge
adc
mov
xchg
pop
test
out
into
push
bound
stc
shlb
and
call
and
pop
add
mov
loopne
adc
bound
sbb
jns
out
stos
fisttpll
movsb
les
xlat
mov
cli
iret
rcl
and
cmp
out
sbb
scas
imul
in
mov
add
inc
mov
push
imul
imul
out
ja
std
jne
mov
push
adc
xchg
jb
add
push
mov
outsb
sbb
cmp
loopne
call
adc
or
mov
jecxz
mov
in
popf
mov
push
cmp
fwait
adc
inc
lods
xchg
mov
jmp
dec
mov
out
inc
xor
das
inc
movsb
aad
mov
pop
test
ds
arpl
mov
pop
pop
sub
loope
jecxz
push
les
add
andl
lods
cwtl
mov
loope
jns
jp
dec
pop
cmp
mov
inc
cmc
inc
std
inc
mov
cltd
loop
jno
pop
sub
movsl
cmpsl
test
addr16
add
xlat
and
jp
jl
dec
aam
cmp
int
xchg
ds
mov
ds
stos
mov
mov
test
fucomi
pop
mov
xchg
mov
vphaddbq
lcall
mov
xor
out
adc
mov
and
fsubrl
inc
bound
mov
cmp
int
push
pop
adc
loop
dec
lret
cmpsb
cltd
bound
les
stos
inc
push
mov
aas
std
enter
ret
adc
loop
mov
aam
inc
push
xor
addr16
sub
or
psubw
add
mov
cmp
out
xor
subl
int
jge
and
repnz
jmp
mov
and
enter
out
push
mov
jl,pn
scas
jo
sahf
mov
dec
cmpsb
incl
rcrl
enter
test
xor
push
inc
jmp
mov
jns
js
mov
dec
loope
cld
lea
sar
nop
packuswb
sbb
out
sbb
rcrb
je
and
add
push
outsl
pop
mov
lcall
data16
sbb
inc
mov
mov
scas
inc
or
lret
adc
sbb
es
jle
xchg
movsb
sarl
mov
psubusb
iret
push
arpl
icebp
mov
pop
out
xor
enter
pop
and
aad
and
add
mov
fstl
mov
stc
sbb
push
mov
mov
aaa
push
mov
js
idivl
push
xor
sub
jae
ja
cmpsb
sub
inc
aad
mov
add
fs
xchg
and
jbe
out
mov
ret
jnp
push
push
mov
push
in
inc
pop
inc
cmp
scas
out
scas
loopne
icebp
xchg
cmpsl
push
add
in
arpl
sbb
cld
jne
push
sub
test
sbbl
inc
or
jge
shrl
pop
adc
fidivs
add
push
mov
shll
mov
fs
lea
sbb
je
mov
mov
cmp
push
js
pop
bnd
arpl
mov
sub
pop
cmp
cmp
jecxz
pop
sysenter
cmpl
mov
mov
orl
pop
lcall
pop
pop
cmp
sub
sub
cwtl
cmp
dec
stos
repz
adc
xor
popf
call
push
push
sub
cmp
in
js
xchg
addr16
xor
jle
inc
sub
out
outsb
sub
out
hlt
cmp
ficoml
cmp
outsb
dec
gs
popl
int
mov
fimull
in
sbb
jb
popf
cli
inc
jg
div
in
fidivs
push
xor
cmpsl
fs
push
out
adc
ret
movsl
lds
xor
xchg
pop
das
iret
push
mov
sub
ror
jbe
daa
pop
lock
xchg
stc
and
add
fs
out
fimuls
mov
pop
pop
cmp
in
clc
ja
mov
addr16
xchg
mov
sti
xchg
or
inc
sub
sbb
out
mov
sub
push
push
push
lcall
pop
cs
push
xor
shl
and
mov
push
faddl
out
mov
packsswb
adc
cmp
shll
mov
das
add
ja
xchg
ljmp
or
scas
stos
adc
sbb
scas
jb
or
ret
imul
ss
das
addl
mov
jl
sub
orb
mov
xor
lds
or
shl
sub
sub
loopne
pop
sbb
aaa
ficompl
test
fidivrs
push
call
shll
push
cmc
or
xchg
jg
mov
inc
xchg
adc
stos
sub
int
adc
sub
xor
or
popf
pop
repz
stos
push
mov
push
inc
jp
push
mov
or
xor
xchg
les
pop
xor
mov
test
inc
out
arpl
sbb
repnz
lahf
outsl
in
cmp
cmpsl
mov
and
or
add
mov
clc
and
sub
push
leave
fmul
fildll
jne
push
add
jo
inc
fcmove
test
ja
and
jae
sub
xchg
lret
filds
push
jbe
mov
fld
cmp
jnp
int3
ja
jl
in
loop
std
cltd
call
dec
mov
push
mov
or
mov
and
adc
jbe
pusha
mul
xchg
sbb
adc
lcall
ss
add
push
inc
vpcmpeqw
jmp
clc
inc
cmpsb
movsb
mov
or
cs
pop
sbb
call
test
lcall
push
sbb
mov
push
add
push
lock
pop
cltd
pusha
popf
icebp
popa
mov
les
jo
pop
add
pop
popfw
pop
insl
mov
je
lahf
xor
adc
movsl
clc
js
or
push
or
hlt
jecxz
std
inc
push
mov
fistps
push
aad
cmp
subb
test
and
in
push
popa
clc
sub
out
pushf
pop
ret
jg
cmpsl
add
in
mov
xchg
jmp
into
iret
mov
lock
jge
dec
icebp
loop
push
setns
mov
shll
and
sbb
jno
leave
xchg
mov
sub
sahf
test
mov
negb
xor
fwait
loopne
adcb
jns
leave
ret
sahf
or
adc
out
arpl
insl
xchg
and
gs
fisubrs
push
outsl
fildl
subl
sub
data16
stos
and
cmp
lock
mov
sub
fwait
popf
xor
stos
mov
scas
shll
gs
aaa
stc
mov
lcall
bound
int3
push
rorl
stc
shr
fnstsw
enter
test
jl
xor
nop
jnp
in
mov
test
mov
push
fnstenv
lret
mov
add
sti
repz
insl
xor
push
mov
jb
add
in
mov
sub
jne
cld
cmpb
jns
fbstp
jae
mov
push
pop
shll
ja
lock
xor
adc
or
mov
fs
jp
jl
popf
pop
outsl
push
push
rorb
lods
and
xor
dec
inc
outsl
mov
test
and
icebp
sub
cmc
mov
clc
cs
sub
or
lcall
add
xchg
xchg
in
jle
loope
cmp
iret
aas
xor
cmpl
icebp
mov
testb
enter
inc
lcall
inc
stc
jbe
ja
sub
mov
xor
jp
loopne
jnp
es
loope
mov
add
and
lret
jb
fdivr
femms
imul
cmp
inc
loop
push
test
pop
out
popa
test
sub
cmp
mov
es
rcr
and
or
adc
adc
lahf
pusha
xchg
out
jb
scas
mov
shlb
hlt
lods
sub
push
adc
clc
aas
sbb
out
jp
mov
pop
cmp
adc
mov
pusha
sarb
pop
jb
add
xchg
into
lahf
dec
dec
dec
pop
dec
stos
dec
add
out
das
adc
mov
stc
je
pop
loope
shlb
add
call
leave
stos
jne
jecxz
mov
xor
cmp
sub
sub
clc
inc
xchg
adc
sbb
cmpsl
mov
adc
roll
jno
enter
ret
mov
outsb
imull
popf
sub
sbb
cmpsb
sarl
daa
cltd
mov
movsl
adc
push
fiadds
mov
jne
leave
fldenv
repz
push
cmpsl
sub
and
out
rol
cmp
mov
cmp
sub
movsb
aad
mov
hlt
mov
fisubrs
sub
mov
les
jg
shrl
in
sahf
jmp
js
test
sub
push
or
jnp
lock
pop
sub
aas
mov
loop
pop
and
mov
or
in
push
and
sub
imul
mov
jecxz
mov
mov
inc
or
mov
sahf
fildll
mov
sub
mov
xlat
sahf
push
adc
ret
xchg
lcall
adc
sub
mov
je
inc
shll
pop
insb
pusha
fs
and
popf
jle
xchg
mov
test
jl
xor
sbb
pop
cld
outsl
lods
test
dec
add
mov
and
dec
pop
adc
out
popa
out
mov
stc
sahf
mov
jne
adc
xchg
pop
je
and
add
cld
leave
test
rclb
jmp
lahf
ljmp
jp
mov
ds
ret
andl
icebp
pop
inc
fdivs
into
aaa
push
pusha
jmp
das
xchg
mov
jb
outsl
dec
into
pop
es
in
mov
out
test
pop
or
cmp
xor
sub
pop
aam
scas
mov
mov
sub
xorl
inc
mov
pop
cmp
fildl
mov
sti
sub
fisttps
push
adc
shll
nop
lcall
sub
dec
mov
in
ss
jbe
jno
ror
mov
rcrl
int
jge
cltd
push
jo
lods
shll
pusha
lcall
cld
or
rcrb
xor
decb
das
xor
aam
cmp
mov
jo
in
mov
jnp
std
mov
pop
ret
dec
lock
jne
pop
int
mov
xchg
sbb
xor
xchg
in
jecxz
sbb
push
cwtl
mov
xor
or
in
mov
test
cltd
dec
pop
fst
xchg
and
push
and
or
int3
fmull
dec
scas
fidivs
daa
outsl
loop
pop
jmp
insl
add
push
cmc
jno
dec
mov
aas
outsb
jns
bound
xchg
cmc
enter
sbb
pop
shll
sub
test
lods
pushf
fucomp
lret
repz
call
popa
insb
add
mov
es
or
lcall
add
and
push
sbb
inc
fwait
sub
fsubrl
insl
push
inc
cltd
or
add
andl
or
mov
iret
call
rcl
gs
cmp
sbb
in
pop
notb
repnz
sub
mov
and
and
imul
push
xchg
adc
dec
inc
mov
xorb
cmp
xchg
mov
mov
pop
mov
pop
xchg
rcrb
stos
shrl
adcl
stos
jno
xchg
lods
sub
sbb
out
bound
cmp
xlat
fmuls
xchg
cmp
push
dec
stos
push
xor
je
inc
pop
adc
ret
pop
xlat
pop
popa
xchg
pushf
imul
out
mov
cmpsb
sbb
jo
mov
loopne
xor
pop
sahf
mov
sbb
jne
xchg
pop
mov
es
outsb
in
mov
jno
jns
xor
dec
sub
dec
aam
stc
rol
add
pop
lea
fwait
pop
addr16
adc
idivb
jle
dec
repz
fimuls
pop
shll
mov
cli
adc
filds
add
mov
pop
and
mov
repnz
orb
nop
in
adc
ret
mov
cmpl
or
call
in
jmp
ret
sub
ret
lcall
clc
scas
pop
outsb
mov
pop
sub
dec
stos
push
in
sub
or
hlt
test
sub
daa
mov
in
mov
inc
inc
jge
pop
mov
popf
daa
sub
std
inc
out
add
into
sbb
repz
orl
and
aam
mov
fnstenv
fs
mov
and
xor
push
rcrb
xchg
stc
incb
cmpsb
sbb
pop
cmp
imull
sub
data16
xor
enter
mov
jne
mov
pop
adc
loope
mov
pop
iret
xchg
pop
bound
out
cmp
pusha
int
pop
push
fisttpll
lods
and
sub
add
out
lods
inc
lods
in
adc
mov
mov
fnstenv
jo
mov
pop
bound
push
jae
mov
bound
push
cld
mov
jb
jecxz
cmpl
mov
jl
mov
fisttpll
adc
lahf
idivb
fs
dec
fsubrl
jo
scas
call
and
inc
pop
ds
mov
jb
mov
dec
push
inc
mov
sub
sahf
mov
mov
hlt
xchg
in
lock
pop
stos
in
add
and
fcoml
or
call
xor
rcrl
mov
mov
push
imul
dec
jecxz
push
addr16
aas
inc
popa
clc
jbe
add
pop
sub
xchg
xor
lods
loop
insb
jle
add
mov
mov
rdtsc
dec
push
fcoms
mov
push
mov
xor
push
add
aas
roll
mov
pop
xor
mov
cld
inc
cmp
mov
jle
jmp
nop
lds
divb
push
out
rcl
test
test
add
stc
mov
jns
mov
xor
fistps
insl
xchg
dec
pop
addr16
cltd
jp
push
mov
cmpsb
fwait
xor
scas
mov
sub
sbbb
rep
ret
aas
aad
mov
call
pop
or
push
mov
mov
faddp
in
lret
inc
sahf
scas
adc
sub
icebp
sbb
js
mov
popf
sahf
stc
into
lret
and
out
pop
adc
sbb
mov
xchg
divb
idivl
xchg
jp
in
jns
ss
mov
aaa
lgs
mov
pop
xor
inc
stc
mov
xor
add
cmpsb
sub
xchg
dec
stos
cmp
pop
addr16
mov
out
and
aaa
pop
rcrl
push
lods
push
mov
xchg
je
adc
pop
inc
fsubrl
cmovbe
xchg
fs
das
cmc
cmp
rolb
pop
in
into
and
adc
aas
lret
or
in
cmp
fdivs
lret
xchg
sbb
push
je
mov
sbb
pop
fldt
mov
push
adc
sbb
ret
jp
inc
iret
das
lods
sbb
fisubs
jl
arpl
cli
lcall
ret
pushf
pop
adc
repnz
jbe
in
xchg
adc
stos
inc
cmp
lods
clc
mov
movsl
gs
loop
jp
cltd
and
aaa
js
mov
ds
cli
cmp
jmp
push
mov
aas
mov
push
rcll
cli
leave
jno
daa
mov
int
cli
push
leave
dec
pop
jl
adc
das
dec
mov
imul
inc
outsb
add
outsb
pop
fwait
shr
pop
repz
movsl
icebp
jecxz
int
mov
mov
std
xchg
cs
test
notl
adc
loop
andb
jnp
mov
xchg
leave
rcrl
sub
popa
lcall
pop
popa
cld
pop
pop
adc
scas
popa
scas
mov
mov
mov
subb
add
loop
mov
mov
mov
xchg
stos
pusha
sti
pop
push
jge
push
mov
pop
sub
inc
imull
fcoml
jmp
inc
out
cmp
mov
outsl
or
sbb
rclb
sarb
cwtl
das
popf
add
pusha
jnp
mov
xchg
notl
cmpsl
aam
push
js
and
sub
hlt
jbe
jg
leave
cwtl
jno
in
scas
cmpsl
and
insb
mov
push
xchg
or
pop
sbb
sub
dec
lahf
or
leave
test
sbb
adc
and
ss
xchg
mov
push
jmp
out
bound
mov
or
in
adc
mov
inc
addr16
xchg
mov
pop
das
call
xorl
sbb
and
or
add
iret
fstpt
jns
mov
popa
fmul
rorb
inc
fdivrl
icebp
outsl
fiaddl
jo
mov
lods
dec
push
repnz
mov
repz
shrl
cmp
mov
jno
lock
add
or
pop
fisubs
sub
fwait
dec
test
les
xor
popa
fwait
loop
int3
xorb
xchg
sub
dec
pop
movsb
mov
enter
in
lds
push
cmp
or
fstpt
insb
add
xchg
fdivl
js
sahf
jl
cli
xchg
movl
sbb
fwait
test
mov
cmpsl
add
mov
dec
and
xchg
mov
stc
inc
in
std
xchg
incb
mov
adc
jne
icebp
jb
push
mov
mov
xlat
mov
jecxz
insb
mov
adc
pushf
mov
je
in
clc
shlb
pop
movsl
inc
int
pop
mov
push
cltd
test
pusha
xor
iret
mov
xchg
repnz
mov
bound
jecxz
push
ljmp
and
fs
sub
data16
into
repnz
into
jne
aam
xor
cmp
cmp
sbb
ds
add
stos
jne
int3
mov
lahf
push
fnstcw
addr16
push
mov
mov
repnz
pop
imul
repz
push
dec
adc
or
lret
sub
rcrb
pop
mov
fs
adc
into
popf
xchg
xchg
adcl
xchg
imul
or
aam
push
lock
pop
fnstenv
xchg
das
je
or
popf
iret
call
adc
sub
sbb
testw
xchg
mov
cpuid
jp
jle
mov
dec
loop
push
pusha
sti
ret
xor
mov
xor
mov
fsubrl
pop
sbb
jge
add
push
add
push
js
popf
sbb
ljmp
imul
jne
cli
das
dec
jns
std
inc
shll
or
mov
or
rclb
pop
fisubrl
aas
push
adc
cs
pop
sbb
adcl
xlat
sbb
inc
pushf
xor
iret
outsl
arpl
imul
test
movsl
insb
lea
jno
xchg
or
lds
in
cmp
pop
vpsubusb
mov
add
push
adc
dec
jne
test
test
frstor
pop
mov
int3
loop
adc
repnz
jp
pop
scas
out
hlt
daa
adc
test
unpcklps
aaa
lds
mov
out
mov
and
in
pushf
xor
js
fwait
arpl
jle
xor
dec
or
pop
cmpsl
inc
push
mov
dec
movsl
xchg
repz
mov
add
inc
lods
clc
mov
sarb
mov
mov
mov
clc
or
jg
sub
jge
fsubrs
loopne
aas
jmp
or
add
xchg
sbb
gs
outsl
inc
cmp
dec
xchg
lahf
mov
testl
mov
jmp
xchg
xchg
int
mov
ja
lret
repnz
ret
ds
std
push
addr16
repz
popf
inc
sub
rcrl
mov
fiadds
inc
fdivl
outsl
std
ret
arpl
into
es
or
sub
lret
inc
arpl
push
sub
mov
ret
repz
scas
inc
inc
xchg
mulb
pop
xchg
das
lock
in
jl
add
aaa
mov
ljmp
call
lcall
and
sub
xchg
mov
fistpl
ds
cmp
cmp
icebp
jl
sbb
dec
and
inc
xor
jmp
or
mov
mov
fisubl
arpl
sbb
dec
mov
cmc
mov
sbb
mov
mov
mov
pop
inc
pop
aas
jnp
out
lods
sbb
sbb
ja
push
cmp
shr
std
xchg
pop
das
or
pop
ds
daa
jbe
adc
mov
xchg
sub
adcb
das
dec
and
je
xor
sahf
add
add
push
call
or
cmc
or
xchg
mov
testl
sub
into
pop
das
imul
push
xchg
or
sbb
loopne
popf
fs
add
push
in
jo
out
aaa
push
push
sbb
loopne
mov
addr16
jle
jl
pop
popf
jl
test
xlat
push
ljmp
mov
arpl
xchg
sahf
adc
mov
nop
xlat
and
insl
fcmovbe
sbb
mov
mov
int3
fucomi
cmc
ficoml
test
or
scas
sub
push
xor
dec
mov
push
add
popf
xor
mov
mov
push
in
lret
cld
or
jmp
dec
inc
in
push
imul
xor
ds
xlat
outsb
adc
dec
les
cmc
adc
scas
adc
sahf
enter
jns
sbb
roll
mov
loop
into
adc
repz
aam
outsl
mov
dec
cmp
popf
mov
lds
leave
cmp
ficoms
test
xor
mov
push
loop
ficoms
mov
das
sti
inc
popa
or
in
loope
mov
cmpsl
fidivl
lods
mov
xchg
popa
ret
in
mov
pop
in
xor
in
xor
inc
xchg
jo
bound
sbb
pop
xor
sub
pop
call
pop
insb
in
test
mov
cmpb
mov
jne
dec
in
lret
inc
fnstenv
xchg
jecxz
enter
inc
loope
pop
clc
pop
daa
gs
leave
push
or
out
ss
ret
jle
sarl
stc
test
lret
lds
sub
xchg
mov
inc
imul
sbbl
mov
jg
mov
cmp
mov
push
out
lds
or
stc
inc
in
pop
push
jg
sbb
sbb
pushf
mov
and
push
fwait
sti
jp
into
das
cmp
mov
push
popf
jne
sbb
sub
unpcklps
mov
jg
mov
xor
sub
mov
push
movsl
nop
adc
jl
incl
aaa
adc
je
xchg
decl
outsb
lds
xor
pusha
cmp
or
sbb
aad
pushf
or
stc
cmp
jge
pop
test
push
rolb
hlt
pop
loop
ljmp
lods
jl
dec
scas
es
xor
jb
xchg
int
xchg
sbb
lods
sbb
jg
cltd
insb
inc
lahf
xor
jecxz
fistpl
xchg
fucomip
repnz
inc
pop
xchg
sbb
cli
mov
ja
mov
add
rcl
sub
aas
inc
push
jl
mov
push
sti
inc
int
repnz
adc
lds
cmp
addr16
push
aas
add
vpackuswb
hlt
rorb
mov
imul
int3
xor
push
mov
lcall
push
in
cmp
jge
sbb
enterw
sbb
push
aam
jp
jnp
inc
pop
lds
dec
jno
push
daa
into
repz
mull
mov
loopne
repz
or
jne
push
mov
cmp
pop
call
mov
test
shrl
mov
faddl
orl
dec
aam
fimull
pop
stos
mov
push
cwtl
add
pushl
les
cmpsb
add
pop
dec
mov
leave
mov
xor
push
cmp
shr
push
inc
inc
insl
add
in
jno
push
ss
out
shr
xlat
repz
ss
push
pop
sbb
cli
xchg
mov
les
loopne
loopne
push
popf
test
mov
xchg
inc
idiv
xor
insl
jmp
nop
jl
or
cltd
scas
adc
ja
jb
mov
dec
adc
jecxz
inc
iret
and
pushf
test
jo
jl
sub
mov
cli
xlat
sub
mov
call
add
mov
add
or
enter
or
sub
mov
stos
movsb
fsubrl
mov
out
or
mov
adc
mov
mov
mov
pop
int
mov
sub
je
pusha
movsb
repnz
cmpsb
or
inc
jl
sarl
out
mov
sbb
mov
add
fnstsw
loopne
int3
arpl
cli
pushf
fisubl
and
pop
jo
adc
mov
mov
xchg
std
jo
lds
in
or
xor
pop
out
dec
subl
mov
dec
gs
imul
in
sub
or
dec
jae
jge
rolb
push
mov
add
jo
es
aaa
rcrl
enter
cltd
xor
bound
je
call
cmp
sbb
or
out
dec
mov
les
loopne
pop
fisubrl
lds
insb
ss
adc
pop
add
lcall
orb
lods
addr16
stos
push
inc
jp
mov
subl
or
jle
cmc
cmpsl
out
mov
inc
fistpl
jb
jbe
fnsave
mov
aas
mov
icebp
xor
sub
sbb
sbb
leave
ret
dec
sbb
popf
in
mov
int3
popf
sub
mov
xchg
fcmovnu
lea
cli
mov
xchg
call
pop
cmc
cltd
stos
push
jmp
xchg
inc
jmp
lds
mov
adc
test
outsb
xchg
xchg
ss
xchg
lea
fiaddl
jg
lcall
add
pop
sarl
gs
cmpsl
sub
in
testb
jo
push
push
mov
mov
lahf
mov
jnp
jno
pop
ja
loopne
or
sub
aas
pop
sbb
and
ja
sub
mov
or
cmp
cmp
mov
jne
aam
adc
push
and
jb
dec
pop
fbstp
into
mov
xchg
imul
addl
je
cwtl
lods
icebp
push
ljmp
call
test
push
mov
sub
mov
xchg
add
jno
adc
ret
lcall
push
cltd
adc
mov
jp
imul
popa
cmp
mov
lret
jge
pop
cmp
jge
push
stos
addr16
mov
inc
in
fstpt
jo
mov
pop
retw
aaa
add
insb
jne
idiv
or
test
ret
jecxz
mov
pop
adc
add
pop
insb
inc
stos
jo
sbb
mov
sbb
xchg
cmpsl
mov
sbb
and
mov
aad
dec
iret
dec
mov
lea
test
xlat
ljmp
add
shrl
dec
xchg
jbe
pop
arpl
in
mov
mov
adc
cmp
adc
int3
pop
mov
jle
scas
jl
jns
or
subb
xchg
xor
mov
pop
sbb
mov
pusha
push
push
aad
ret
sub
mov
or
mov
fcmovne
fimull
add
jmp
mov
fcmovu
repnz
jne
ljmp
pushf
mulb
test
lea
fdivl
jbe
loopne
lret
adc
fcomps
xchg
fidivl
or
sub
cmp
ds
cmpsb
inc
clc
push
jmp
inc
fisubl
inc
popa
clc
js
sub
sbb
jg
int3
cmp
test
fcompl
push
jl
sub
lds
pop
push
addl
jge
pop
outsl
mov
lds
pop
cmp
movsb
or
mov
rol
iret
idivl
aad
stos
mov
cmp
notb
mov
cmp
pop
fbld
jle
push
sub
xchg
cltd
cli
pushf
xor
mov
xchg
aam
mov
sub
xor
call
push
add
pop
lock
imul
xchg
add
jns
pop
jmp
popa
out
shl
jo
xchg
outsb
cmp
popa
stos
dec
push
xchg
inc
or
push
popf
insb
loop
clc
inc
test
outsb
jle
in
in
sarb
int
jg
stos
mov
cmp
xchg
mov
in
fists
mov
test
adc
jp
sbb
je
push
or
mov
fldt
rcl
test
jecxz
loope
sub
jl
aam
mov
xchg
fmuls
icebp
fs
add
dec
mov
xchg
mov
mov
ss
xchg
sub
xchg
xor
pop
jb
sti
inc
mov
adc
mov
mov
xor
xor
loop
mov
andb
sub
xchg
cld
stos
ret
out
sti
fwait
inc
fistpl
mov
in
sarl
fdivrl
adc
xor
inc
les
mov
in
inc
dec
sub
inc
aaa
mov
cmp
imul
pusha
in
push
jbe
stc
and
aad
mov
mov
dec
dec
fwait
bnd
mov
push
out
lahf
mov
sarb
xor
repnz
pop
insl
cmpsb
sub
or
adc
leave
xor
jo
pop
das
loope
into
add
incl
pop
dec
sbb
out
fiadds
jnp
cmp
lret
rorl
sub
push
jno
inc
ljmp
adc
xorb
fistps
rcrb
adc
es
ds
ja
pushf
pop
pop
int3
cmp
data16
rorb
into
push
push
dec
loop
fidivs
or
ss
xchg
and
inc
push
jne
xchg
pop
sarb
xor
nop
cmpsl
jns
in
setnp
cmc
cmpsl
loope
aam
lds
sub
daa
mov
aam
cmp
in
jbe
mov
dec
pop
lea
dec
push
add
sbb
jmp
js
and
add
call
mov
mov
jbe
outsl
push
ja
aam
in
ja
test
in
ss
jg
adc
mov
addr16
adc
mov
into
xor
out
sahf
sub
sub
push
lods
std
enter
bound
incl
xor
sub
hlt
and
test
mov
xorb
pop
les
push
andl
pop
mul
mov
mov
push
pop
dec
lcall
push
xlat
mov
mov
scas
inc
pop
or
fs
mov
shll
ret
jg
add
mov
jns
sbb
add
xor
cltd
xchg
pop
sahf
jne
clc
and
jle
icebp
push
jmp
leave
popa
divl
sbb
out
subl
and
ss
daa
ja
cltd
add
dec
sar
ret
popa
inc
jp
call
sti
sbb
mov
aam
or
ss
aad
sbb
out
inc
xchg
push
mov
cmp
dec
ljmp
ds
mov
js
mov
mov
xor
rol
push
imul
rorl
ret
push
mov
inc
push
xor
insl
ja
cmpsl
out
icebp
dec
mov
repz
sub
adc
shrl
jge
aas
scas
lret
jne
mov
and
loope
sub
leave
jnp
sub
jb
inc
stos
jge
push
fucomi
mov
imul
shrl
jge
push
mov
or
add
add
pop
stos
and
ss
clc
test
out
adc
popf
das
inc
in
inc
pop
out
std
call
pop
mov
mov
jmp
int
daa
fnstsw
cmovns
cwtl
std
cmp
push
jmp
fldt
les
sub
popa
lret
iret
cmpsb
jg
sti
pop
sahf
pop
xor
cld
mov
mov
cmp
mov
test
sub
sbb
out
out
inc
cs
pop
movsl
lahf
mov
push
xchg
pop
dec
leave
js
add
and
enter
fs
jne
push
out
jmp
inc
data16
hlt
sbb
cltd
xorl
movsl
xor
add
popf
scas
test
jbe
fwait
sbb
pop
xor
jns
sub
push
mov
jnp
push
add
and
sarb
iret
add
lret
mov
sbb
cmp
hlt
mov
xchg
xlat
je
push
stos
add
push
cmc
shl
outsl
subb
int3
arpl
fbstp
cwtl
fsubrp
pop
int
jnp
push
sahf
inc
xchg
or
je
sbb
inc
jecxz
leave
cltd
shl
jne
aad
sub
das
adc
jl
mov
movsb
cmp
lret
cmp
jp
xchg
cmp
jmp
ss
jecxz,pn
stos
flds
shrb
add
and
int
xor
dec
sahf
aad
loopne
add
loope
cmpsl
cmpsb
faddl
repnz
sbb
adc
jge,pt
imul
mov
push
scas
pop
inc
sub
js
shlb
mov
push
mov
and
shrb
pop
mov
and
mull
mov
or
pop
movsl
in
add
out
push
rorb
insl
inc
cmp
pop
aad
insb
dec
or
push
lea
mov
in
les
movsb
addr16
hlt
mov
mov
ret
or
mov
push
aam
std
or
loop
xor
rorl
xor
cmp
jecxz
aam
roll
mov
jnp
fisttpll
mov
es
mov
cli
rol
repz
dec
icebp
push
jns
stc
xchg
int
negl
cwtl
pop
xor
and
into
loop
sbb
ljmp
iret
jae
adc
mov
or
push
pop
inc
push
out
insb
push
mov
adc
cmc
popl
ljmp
jg
enter
adc
aaa
into
js
loopne
sarl
push
stc
cmpsb
jo
sarb
jne
sbb
test
push
xlat
or
rol
push
int3
fistps
imul
push
rcll
sub
mov
sub
mov
outsl
pop
fsubrs
or
lods
and
lock
jecxz
or
lcall
and
or
push
call
or
inc
sarl
nop
mov
out
divb
fisttpll
daa
ljmp
xor
mov
cld
inc
idivb
xchg
sbb
add
fildll
pusha
push
dec
cmpsl
popf
ret
or
push
jle
jb
inc
mov
inc
clc
push
es
xor
adc
nop
dec
loop
or
and
pop
cmp
fwait
dec
loopne
xchg
cmp
xor
das
cmova
mov
sub
adcl
repz
and
icebp
orb
adc
add
jb
mov
aad
sub
lds
inc
imul
sbbl
dec
sbb
scas
inc
addr16
adcb
inc
pop
enter
push
in
sub
and
gs
cmp
clc
lret
into
xchg
dec
int
push
xchg
test
mov
xor
sub
fadds
lock
insb
mov
mov
pop
mov
fs
pmaxub
pop
repnz
adc
lds
into
pop
jno
outsb
cmpsl
mov
fisttpl
fisttpll
jg
loopne
sahf
mov
sbb
je
rorw
insb
add
sub
stc
inc
mov
enter
add
aaa
dec
rolb
aad
xor
push
push
cmc
jl
ds
xor
sbb
vhsubpd
push
mov
lock
jmp
mov
cmpsb
and
adc
add
xor
lret
jno
cs
enter
leave
ss
not
aad
pop
int
push
mov
mov
cmp
sbb
arpl
test
sbb
and
sarb
jne
insb
fs
js
cmp
lret
hlt
test
jl
push
test
xlat
pop
mov
adcl
mov
push
adc
mov
leave
gs
in
or
ds
daa
jnp
push
fwait
lds
repz
inc
out
xchg
fisttps
ficoml
into
and
push
push
add
js
sub
lods
mov
jle
je
sbbl
mov
jbe
mov
adc
cld
inc
push
mov
and
xchg
imul
movsb
cmp
add
cs
and
fstps
dec
cli
stos
lds
arpl
pop
xchg
dec
mov
scas
cmp
sbb
push
sub
mov
aad
ficoms
jo
cmp
jno
lock
sbb
sbb
movsl
cmp
adc
rcl
imulb
pop
icebp
in
cltd
andl
rorb
outsl
mov
sbb
sbb
push
lods
addl
call
jecxz
xor
pop
test
push
add
dec
sub
imul
push
out
das
test
xor
pop
rorl
ljmp
ja
fld
jecxz
lcall
cmc
mov
iret
popa
or
sub
adc
sbb
icebp
ss
jno
and
shll
adc
fs
jb
sub
lcall
push
test
imul
arpl
xchg
dec
hlt
pop
add
aam
push
popa
mov
lods
les
mov
loopne
insl
pop
loope
or
jno
ret
insl
xor
rorl
in
dec
mov
iret
movsl
mov
sbb
sub
insl
les
sbb
adc
andb
add
push
int3
divl
rcrb
icebp
lea
jg
mov
cmp
jb
out
jae
int
xor
push
jb
mov
ja
fucomi
insl
sbb
xchg
push
jl
cmp
dec
fiadds
mov
sub
popl
std
mov
xchg
sbbl
test
cmp
push
push
cli
repz
test
loopne
sbb
push
test
xchg
add
ja
mov
dec
or
nop
cli
push
addb
dec
std
xchg
sub
lret
mov
sbb
hlt
outsb
mov
pop
xor
subb
or
arpl
adc
movsl
push
popf
sbb
dec
out
adc
mov
xor
xor
mov
push
std
inc
or
cmp
ds
shrl
sbb
std
int3
inc
lds
cmp
hlt
push
data16
fsts
adc
mov
int3
cmpsl
push
ret
pop
ret
sub
scas
dec
mov
fwait
push
sbb
ja
cltd
xchg
push
mov
mov
xor
lods
pop
mov
jecxz
cmp
adc
addr16
fstpl
mov
push
les
icebp
aam
leave
and
outsb
dec
cs
insb
mov
jnp
and
inc
xlat
inc
mov
fmulp
mov
mov
cmp
xlat
cmp
mov
inc
fmuls
sub
push
inc
adcl
and
lea
xchg
xchg
mov
testb
jmp
or
pop
adc
rcl
das
adc
jecxz
imul
push
in
mov
imulb
aam
xchg
negl
sbb
xor
mov
jmp
ljmp
gs
push
and
shlb
adc
jle
mov
sti
or
sbbl
cmp
daa
lcall
or
sbb
fwait
adc
mov
jnp
mov
fists
push
adc
scas
sar
mov
push
and
and
cmp
mov
bnd
movsb
xchg
cmp
arpl
mov
cli
xchg
sbb
adc
sub
sbb
add
je
push
push
mov
inc
and
ror
in
mov
lods
insl
push
jmp
and
sahf
sahf
cmp
xchg
jbe
sbb
push
test
jge
xor
fisubrl
pop
ret
lds
push
inc
adc
repnz
mov
scas
sub
aas
mov
sub
adc
lret
jnp
inc
and
push
jmp
jg
jmp
push
pop
int
pop
testl
cmc
mov
mov
inc
fiaddl
fcomps
add
pop
cmp
aaa
outsl
loop
xor
pop
rcrb
imul
cmp
mov
test
xchg
cmpsl
mov
out
inc
rorb
test
incb
and
adc
clc
inc
imul
fcomi
cmp
mov
dec
mov
inc
loope
ret
fsubr
ret
mov
mov
inc
call
push
push
jb
cmpsl
std
mov
movsl
and
repz
inc
cltd
imul
inc
cmpsl
ret
je
cmp
add
dec
dec
shrd
and
push
cmp
shlb
inc
repz
movsl
pushf
pop
mov
lret
mov
mov
push
adc
out
mov
test
test
or
or
imul
xchg
sub
xchg
xor
sbb
pusha
dec
popa
je
enter
mov
into
lret
push
incb
push
movsl
incb
add
adc
in
jnp
lcall
cmp
bound
pextrw
push
dec
mov
in
lods
lret
lods
js
fisubl
push
cs
pop
cmp
fisttpll
aaa
xlat
rcll
lahf
mov
mov
sub
pop
scas
xor
pop
sub
scas
sub
popa
mov
add
arpl
pop
fsubr
int
aas
mov
mov
decb
xchg
xor
loopne
mov
fwait
jnp
jmp
sti
push
dec
add
in
xchg
stc
aam
idivl
xor
pusha
mov
je
pop
out
ds
nop
test
lock
pop
push
fistl
lock
lea
addr16
das
addl
lcall
fbstp
aaa
add
jnp
fnclex
jnp
adc
sbbl
mov
addb
cmp
shl
test
cmpsl
out
pop
ja
cmp
int3
jle
sbb
or
cmp
inc
and
mov
push
pop
cmc
inc
xchg
cmp
sahf
shll
mov
pop
les
inc
nop
arpl
mov
inc
push
inc
dec
xchg
lcall
xor
out
insl
leave
or
cmpb
rcll
mov
filds
in
nop
mov
imul
dec
scas
addr16
arpl
es
mov
mov
mov
adc
mov
xchg
pop
repz
cmp
add
and
dec
enter
mov
cmc
cmp
sbb
hlt
movsl
mov
inc
test
aam
xchg
cmp
jl
cwtl
sub
daa
cli
push
adc
fdivs
shrb
jp
or
lds
gs
sbb
jbe
inc
daa
je
out
and
leave
cld
xchg
adc
adc
je
mov
mov
addr16
or
push
lds
ja
aad
in
push
les
add
jl
push
cmp
dec
rcl
cmpsb
fwait
test
mov
ja
insl
stc
xchg
outsl
xchg
dec
addr16
insl
pop
in
mov
sub
xchg
movsb
cld
mov
aam
lahf
pop
les
jle
and
xorl
test
xchg
adc
lcall
and
sbb
xchg
rorb
add
push
testb
inc
fidivrl
stos
cmp
or
cmp
push
mov
pop
push
mov
mov
decb
jno
jmp
scas
adc
jnp
dec
stc
cltd
std
pop
or
int
sbb
push
push
sbb
mov
lret
sti
push
mov
and
inc
pop
cmp
pop
lret
lret
push
sbb
push
rol
sbb
cmp
sub
pusha
cltd
mov
pusha
in
cmp
or
enter
jo
repnz
test
mov
lahf
jae
addr16
in
insb
scas
ret
mov
shlb
or
bound
mov
test
cmpsb
imul
stos
inc
mov
adc
cmp
adc
mov
cmpsb
out
test
pop
out
adc
repnz
enter
add
sbb
xchg
adc
repz
mov
mov
stos
push
sbb
enter
fsubrl
insl
sub
xor
das
cli
sahf
rcl
sbb
movsl
adc
test
cmp
push
sti
push
js
mov
xchg
add
scas
jo
jnp
xchg
cmp
sub
rorl
lret
adcb
jns
dec
lret
fdivrs
stc
cmpsl
xchg
jg
jnp
mov
and
ror
bnd
rorl
loopne
shrl
inc
in
sti
cmpsb
in
scas
push
and
adc
daa
mov
jae
cmc
movsl
aam
pop
sbb
xlat
dec
jnp
cmp
enter
mov
mov
filds
pop
xor
icebp
mov
lea
int3
fcomps
jo
les
cmpsb
sub
mov
push
pop
mov
leave
in
cmp
fucom
testb
inc
test
mov
aaa
mov
xlat
std
icebp
leave
push
lods
mov
xchg
adc
jae
lds
sarb
add
inc
ljmp
sbbl
addr16
clc
lcall
push
aas
call
iret
adcb
mov
lds
aaa
xchg
pop
adc
and
repz
in
cmp
jo
jae
adc
das
lret
add
ds
pop
mov
cmp
stos
aas
push
adc
mov
das
mov
icebp
loopne
cmp
mov
imul
xor
xor
dec
pop
xor
or
jb
mov
shrb
fisubs
inc
pop
mov
or
mov
cli
lds
xor
adcb
sarl
into
pop
or
call
push
mov
movsb
mov
outsb
aas
fidivrs
mov
sub
insb
sarl
stos
scas
pop
pop
idivb
cs
push
movsb
jp
pop
rcrb
pushf
cmp
adc
xor
es
pushf
push
loope
cmp
push
pop
mov
divl
scas
in
fisubl
mov
lcall
arpl
ja
sbb
outsl
mov
mov
lret
jb
add
punpcklbw
xor
es
inc
hlt
mov
mov
xor
adc
cmp
and
stos
cmpsl
ds
lret
sub
add
mov
bound
or
or
lea
pop
jmp
and
mov
pusha
xor
test
aam
push
cmpsl
mov
sub
ds
mov
test
add
xor
aam
jno
in
jl
pusha
xchg
xor
pushf
popa
notl
aad
pushw
lahf
add
ds
push
adc
fbstp
test
fisubrs
div
rclb
shlb
mov
jp
test
mov
int
adc
sbb
mov
jb
and
divl
jo
dec
dec
sarl
jo
loop
adc
js
in
shrb
mov
pop
dec
cld
inc
loope
in
fnsave
pop
ljmp
cltd
lock
cmp
mov
xchg
mov
xor
adc
sub
and
in
push
sti
shlb
adc
mov
imul
pop
pop
in
cmp
lcall
orb
or
sub
or
cmpps
repz
xchg
ds
lret
icebp
jns
lods
jmp
mov
push
jecxz
in
jne
sbb
sbb
scas
fldt
cmp
in
dec
mov
inc
jae
mov
xor
gs
add
orl
outsb
test
pop
nopl
push
sub
and
fstpl
movsb
or
dec
pop
out
pop
idivl
imull
stc
je
xchg
imul
xchg
outsl
adcl
xchg
dec
push
pop
insb
cmp
mov
and
mov
xchg
ds
mov
xor
lret
pop
mov
jnp
mov
outsb
pop
mov
mov
aam
dec
push
pushf
and
sub
xor
inc
and
int
mov
jae
inc
negb
daa
movsl
imul
pushf
test
adc
add
mov
fstpl
ret
cmp
inc
cmp
aas
jmp
push
inc
sbb
stos
out
xchg
cmp
out
inc
xchg
ud1
mov
cmp
adc
pop
cmpsb
sub
mov
shll
jb
xchg
loope
hlt
mov
add
jge
jno
jne
xchg
ja
inc
std
add
data16
or
mov
sti
mov
xor
in
push
cs
mov
jb
mov
push
repnz
pushf
push
nop
sahf
cld
inc
lret
ljmp
mov
dec
scas
push
les
ds
bound
dec
aam
movsl
ds
pop
std
sahf
lret
xchg
out
call
xor
inc
enter
cmp
mov
xor
fstpt
or
hlt
and
sbb
jp
outsb
pop
movsb
addr16
mov
out
test
or
inc
sub
jle
sbbb
cmp
push
repz
ja
das
inc
pop
inc
and
mov
jecxz,pn
loope
insl
mov
and
sbb
scas
aam
mov
pop
fbstp
add
push
xchg
and
pop
scas
or
out
cmpsl
aaa
dec
scas
add
pop
fcomip
dec
mov
pop
shll
out
aaa
scas
push
jae
out
notb
sbb
cwtl
lahf
jo
sbb
sarl
cli
mov
fidivrl
scas
lret
out
fs
dec
sub
push
das
rcll
outsb
jl
lret
adc
mov
es
or
add
arpl
fwait
das
push
lcall
daa
sarb
sbb
xchg
sub
insl
xor
lods
ja
aad
inc
xchg
ficoml
fimull
or
inc
je
jle
cmpsl
out
out
lods
out
sti
loopne
cwtl
stc
jnp
xor
and
push
mov
daa
pop
inc
jl
inc
movsl
int
inc
push
push
decl
ret
fdivr
ficoms
cmp
pusha
lock
shlb
mov
mov
mov
repz
test
lcall
jmp
pushf
test
lret
ds
inc
push
push
fmull
mov
xor
repnz
mov
pop
cld
mov
add
out
jle
popf
and
push
and
ljmp
xchg
leave
xlat
pusha
sub
inc
sbb
cld
mov
push
frstor
add
test
xchg
inc
dec
inc
push
leave
mov
jbe
scas
inc
clc
adc
adc
adc
test
sti
cmp
pusha
nop
jnp
mov
inc
inc
mov
in
sub
jb
jb
sub
inc
jecxz
aaa
rol
hlt
pop
out
bound
and
jbe
test
loop
rclb
or
push
cmc
adc
and
ret
push
add
push
mov
pop
and
mov
nop
pusha
or
cld
dec
lahf
movsl
pop
push
nopl
push
or
mov
xor
test
shll
pop
push
and
xlat
mov
into
hlt
decb
xor
rorb
sbb
cmp
imul
mov
out
ja
rclb
sbb
test
cmp
sarb
fnstenv
add
jo
shll
dec
xor
sbbb
pop
out
stos
add
sub
bound
add
popf
aam
cwtl
xor
sbb
insb
hlt
add
test
sarl
mov
leave
int
push
aam
fcoms
hlt
adc
hlt
jge
dec
xchg
cs
or
testl
int3
jns
mov
dec
mov
adc
push
sbb
jnp
mov
test
cld
adc
dec
cs
das
inc
or
push
outsl
jne
enter
stc
jo
ds
out
mov
sti
int3
mov
ds
test
out
pop
mov
nop
adc
mov
xchg
mull
imul
call
pop
fs
ja
mov
je
push
cmpsl
imul
addps
xor
aam
aaa
fisubrl
mov
bound
inc
fsubr
into
pop
call
stos
dec
push
dec
inc
loope
mov
scas
stc
adc
lahf
xchg
lock
pop
pusha
add
mov
sbb
lds
js
cld
and
mov
inc
jo
sub
mov
jl
xchg
or
xchg
cmp
push
xor
fs
pop
and
push
jae
gs
fistpll
mov
lret
push
or
and
dec
dec
out
call
add
mov
movsl
and
cli
cmp
dec
lods
push
out
fcmove
stc
nop
add
cmc
xor
mov
mov
movsb
sti
jo
ffree
and
fwait
push
add
and
inc
nop
push
in
out
push
test
cmp
int3
int
std
pshufw
push
sbb
gs
int
lret
in
rorl
xor
adc
decl
enter
jge
push
test
mov
out
fidivs
dec
cli
mov
sbb
push
out
aaa
ret
cmpsl
in
js
and
cwtl
mov
add
mov
scas
cmpb
mov
lcall
rorl
add
cld
lcall
in
subl
or
add
lods
ljmp
pushf
inc
adc
push
test
xlat
adcl
dec
fucomi
je
jo
test
mov
aad
ret
fildl
dec
test
pop
jg
cld
push
or
cmpsb
pop
mov
lds
inc
sbb
cmp
insl
pop
adc
idivb
mov
iret
xor
outsl
test
pusha
shrb
push
in
inc
cmp
pop
dec
dec
mov
jns
push
popf
sub
and
incb
stos
inc
xor
loope
popw
mov
jae
jp
sbb
push
adc
std
lods
dec
test
jne
push
cmpsl
lea
ror
lcall
jmp
xchg
sbb
add
xchg
mov
and
push
sbbl
gs
aaa
xor
mov
aaa
lods
sub
sbb
jbe
push
jbe
loope
test
out
hlt
mov
xor
inc
push
sub
sbb
push
lahf
das
jmp
shrb
cld
fistl
orb
out
stos
ds
xor
bound
mov
adc
dec
out
mov
leave
sti
inc
cwtl
das
aaa
xor
sahf
xor
push
and
xchg
popf
pushf
xor
inc
pop
cmc
aaa
add
aam
mov
lock
and
test
cmpsl
out
pop
pop
jno
dec
add
adc
sbb
dec
dec
or
not
stos
pop
negb
inc
jmp
cmpb
xor
test
lds
movsl
cmp
shr
test
scas
testl
and
mov
xchg
inc
xlat
or
insb
xor
data16
out
xchg
shl
arpl
lods
cmp
push
out
push
push
sub
je
les
mov
bound
adc
fs
push
popa
mov
mov
aam
aad
push
pop
add
dec
xabort
mov
cmp
shll
push
inc
cmp
ss
std
xchg
mov
cmpsb
cmp
push
dec
add
les
mov
push
frstor
mov
stc
sub
adc
mov
push
xor
outsl
and
jl
push
sti
xchg
fsubl
insl
mov
ss
and
sti
pop
inc
cmc
xchg
push
insl
xor
lret
cld
in
int3
fcompl
jbe
clc
pop
cmp
xor
les
cmc
jl
push
xor
cmc
fsubl
std
adc
sub
sub
pop
cmp
inc
dec
dec
and
cmpsl
sbb
push
shlb
push
aas
inc
clc
icebp
jae
pop
mov
popa
cmpsb
cmp
pop
jmp
xchg
hlt
movsl
and
ja
pop
sbbb
xchg
es
jecxz
jge,pt
lcall
cmp
fs
int
add
inc
push
loopne
lods
xor
jmp
cmp
inc
adc
pusha
push
jae
in
xchg
inc
adc
jnp
fsts
mov
es
aaa
push
call
sub
lret
bswap
push
jmp
sub
push
fdivs
lcall
mov
and
in
das
push
std
mov
dec
jecxz
sub
popf
xchg
add
cmp
inc
and
rcr
xor
fucom
push
cmp
pusha
repz
mov
std
push
fwait
mov
in
rol
out
or
ja
stos
out
push
lock
mov
xchg
aaa
call
int
and
inc
loopne
dec
and
imul
adc
arpl
in
test
pop
mov
popa
push
out
push
je
lods
addr16
mov
imul
mov
ret
cmp
hlt
pop
fdivl
add
sub
ds
mov
flds
test
scas
xchg
in
mov
push
mov
adc
test
cmpsb
mov
aad
jo
lods
jmp
or
je
pop
in
aaa
pop
movsl
and
sbbb
mov
adc
pop
sbb
adc
jo
or
add
js
or
xchg
dec
aam
mov
mov
xchg
pop
test
rorb
in
movsb
and
inc
add
aam
dec
ret
fisttps
push
lret
cmp
pusha
lret
xchg
in
mov
sbb
sbb
data16
dec
icebp
jb
lret
stos
stc
xchg
stos
jp
sub
outsb
add
jle
mov
pushf
or
push
jae
xor
mov
sbb
cmp
dec
lods
lret
jg
ja
lods
scas
jp
xchg
jl
nop
test
push
add
dec
dec
add
jne
cmpsb
adc
movsl
dec
lret
out
andb
xchg
cli
and
adc
mov
lea
mov
push
mov
fisubs
stos
push
fisubrs
sbb
mov
sti
ljmp
adc
jns
dec
cmp
xor
in
stc
rclb
pop
mov
loopne
sub
adc
cpuid
ret
jl
stc
ss
mov
insb
jl
popa
nop
lea
mov
dec
xchg
or
movsb
sti
mov
pop
mov
xchg
mov
shrb
in
jecxz
ret
enter
aas
sub
sbb
or
xor
xchg
movsl
cmp
stos
movsb
in
xchg
pop
push
inc
dec
insl
cmp
inc
outsb
mov
or
sub
fstpl
sub
pop
test
mov
pushf
mov
xor
or
jg
stos
cmp
jae
aam
call
mov
lds
cmp
sub
mov
or
xor
and
and
inc
fldl
loop
pop
inc
sub
sti
push
push
jmp
xchg
int3
jno
cli
jmp
xor
mov
int
push
jno
mov
jne
xchg
sbb
inc
fstl
icebp
adc
pop
in
xlat
mov
adc
jo
jp
nop
lcall
jecxz
mov
movsl
out
cli
aam
inc
test
mov
sub
outsb
test
push
cwtl
or
in
pop
mov
add
shll
sbb
scas
xor
fisttps
xchg
xor
dec
sub
std
shrb
jnp
pop
orb
je
popf
mov
notl
adc
jno
gs
push
and
jns
fwait
out
int
movsl
addr16
push
sub
cld
pop
ja
and
ds
jmp
inc
and
ror
sub
repz
or
cs
mov
or
dec
pop
mov
lret
data16
scas
push
incb
jbe
pop
std
loopne
mov
scas
cmpsb
dec
addb
div
pop
pushf
dec
scas
roll
cmp
jb
mov
test
push
lea
push
js
mov
ret
add
push
pop
ret
cmp
insb
xchg
pop
cli
ljmp
stos
xlat
xor
cmp
add
outsb
dec
jne
cmc
sub
pop
pop
adc
cmpl
inc
pusha
dec
add
inc
mov
inc
orl
leave
pusha
pop
fstl
repz
icebp
mov
xsha1
cmpsb
into
cwtl
das
shr
cmp
in
enter
popl
repnz
pop
ljmp
push
test
jmp
adc
adc
data16
jns
jns
jmp
sbb
inc
inc
pop
xor
sar
cmp
mov
mov
cmp
fcomps
mov
sbb
sub
cmp
dec
add
lret
or
int
fwait
sbb
pusha
adc
stos
add
dec
pop
jne
lahf
cmpsl
loope
pusha
mov
mov
stc
mov
fildl
adc
leave
je
lods
cmp
and
loope
ja
mov
imul
jmp
adc
aaa
sbb
cmp
or
add
jl
notl
call
and
jp
je
mov
shlb
psubusb
stos
push
mov
rcrb
mov
mov
and
jae
lret
mov
popa
jbe
cltd
cs
iret
fdivrs
push
lods
push
xor
out
je
stc
or
and
int
cmp
xchg
out
push
std
decb
cld
push
dec
gs
clc
push
lea
dec
adc
jae
outsb
shrb
xorl
ljmp
xor
pushf
gs
push
and
jne
sbb
sbb
out
jno
xchg
push
loopne
sub
mov
cmc
lcall
lods
hlt
mov
dec
pop
inc
mov
mov
dec
aas
iret
loope
pop
sub
test
scas
push
mov
mov
and
std
repnz
jnp
les
test
stc
or
inc
xor
shlb
mov
cmpsb
das
push
mov
mov
fldl
sbb
mov
sbb
addl
mov
mov
frstor
push
imul
cli
loope,pt
stos
std
cmpsl
pusha
movsl
dec
in
push
xor
lods
push
adc
or
mov
and
cmpsl
push
xchg
stos
in
shl
adc
bound
sahf
push
pop
idivl
pop
aaa
ret
pop
imul
jae
addr16
ficomps
std
outsb
push
adc
lea
pop
add
test
dec
sarb
sarb
sarb
xchg
sub
mov
mov
fisttps
repz
cmpsl
push
cmp
outsl
pop
mov
call
cmp
jl
gs
or
jecxz
dec
mov
sarl
mov
push
outsb
lods
jnp
sbb
aad
lds
rcrb
cmc
inc
inc
xlat
push
xchg
sbbl
ljmp
incl
int
jge
sbb
aas
dec
movsb
mov
test
add
pop
dec
fwait
mov
ja
not
pop
xor
shlb
ret
jbe
push
ret
mov
and
test
mov
lods
andb
sub
jb
jg
outsl
ret
sub
dec
insl
add
jmp
xchg
loope
in
mov
adc
dec
ja
pop
lret
aaa
mov
mov
mov
in
in
ljmp
adc
xchg
outsb
insb
out
cmp
mov
pushl
cmp
das
mov
and
shrb
push
mov
cmpsb
add
sub
fdivs
or
dec
sahf
inc
in
in
jns
jmp
imul
mov
outsb
dec
jl
add
lret
scas
dec
lahf
pop
or
sub
inc
xlat
mov
fistps
sub
push
addr16
inc
pop
divb
xor
mov
ffreep
stos
mov
jp
cmp
pusha
ret
repnz
addr16
push
jne
cmp
bound
lcall
icebp
lods
shr
addb
mov
mov
xor
or
bound
jle
xchg
pop
rorl
rcl
xor
cmp
ja
pop
inc
sahf
lods
jae
inc
ljmp
sbb
les
mov
cli
movsb
mov
inc
pop
cmp
mov
repz
pop
faddp
inc
inc
add
aam
fdivr
mov
std
data16
daa
pop
jmp
cmp
adc
pushf
bound
andl
cld
stc
nop
das
mov
pop
jmp
jo
add
es
clc
jo
outsb
aaa
shlb
add
lret
inc
cltd
dec
push
ret
ja
pop
mov
add
cmp
inc
sbb
std
inc
push
pop
jno
jb
push
xchg
push
mov
xlat
or
or
pusha
daa
loopne
ficompl
lods
pushf
push
mov
jmp
push
out
fildl
add
loopne
sbb
sahf
ja
dec
mov
fwait
mov
mulb
pusha
les
jno
popa
mov
xchg
int
adc
test
in
addr16
push
aas
add
lea
jo
dec
loop
pop
xchg
cs
fisubrs
fmull
mov
mov
es
pop
fdivrl
dec
imul
repz
out
sbb
test
jecxz
fdiv
xchg
sbb
dec
mov
add
push
int3
mov
jmp
lahf
rolb
cwtl
add
pop
mov
cmp
sbb
mov
push
out
fs
cmp
repnz
dec
cmp
add
push
aas
sub
sbb
shl
xor
and
push
jle
sbb
pushf
scas
hlt
cmpb
aaa
sbb
push
dec
pop
les
jg
or
es
inc
xchg
fbstp
subl
inc
xor
fs
cli
cmp
add
loop
dec
iret
mov
lods
scas
and
imul
outsb
cmp
aaa
cmp
je
xchg
cs
lret
lret
sbb
mov
std
in
adc
xor
pusha
sarl
shlb
pop
dec
add
ret
dec
mov
jle
mov
jnp
sub
sub
jle
cmpsl
xlat
pop
mov
les
xchg
xor
insb
sbb
fidivrl
pop
push
das
test
xchg
fildll
mov
jmp
sbb
mov
jo
repnz
dec
lret
mov
std
gs
and
ja,pn
pop
or
insb
push
fsubp
ljmp
bound
loopne
adc
mov
inc
pop
mov
xor
movsl
stos
add
mov
cltd
outsb
xor
xchg
xor
xchg
sub
cltd
add
sbb
orb
sahf
mov
mov
out
and
jg
sbb
xor
inc
jae
xchg
push
xor
ja
sbb
sbb
push
jbe
mov
cmpsb
or
push
rorl
cs
enter
add
scas
int3
lret
or
incb
xor
cmp
push
mov
lods
sub
hlt
sub
mov
notl
xchg
xlat
ljmp
mov
test
scas
es
xor
jno
lock
cmp
imul
mov
nop
arpl
dec
jp
cli
ret
ja
sarl
leave
loop
lds
mov
inc
sbb
movsl
test
cmp
jo
mov
jmp
inc
sbb
lahf
and
aad
in
ret
add
mov
xchg
repnz
frstor
aam
and
mov
and
mov
test
mov
jo
insl
add
adc
mov
js
add
xchg
fcomps
shl
dec
add
loope
xor
xchg
and
mov
outsb
orb
loopne
fldt
es
lods
inc
in
add
jne
xchg
fwait
insl
add
mov
xchg
jl
mov
push
nop
lock
xor
test
inc
test
pop
lods
push
out
pop
fsub
aaa
iret
ret
cmp
movsb
dec
test
out
sarb
add
pop
outsb
push
xchg
fsubr
mov
popf
enter
push
lret
xor
push
pop
xchg
lahf
mov
pop
out
ljmp
arpl
int3
lret
sbb
and
int
mov
pop
ja
mov
cmp
or
lds
cli
faddl
aaa
mov
ds
lret
mov
lahf
mov
xchg
pop
mov
mov
movsb
ds
hlt
dec
add
lret
mov
or
xchg
sub
push
jmp
sub
adc
sbb
das
mov
push
mov
loopne
inc
and
lret
or
lret
lret
jo
inc
popf
mov
andl
and
aas
and
jg
pop
fmuls
fcomip
fistpll
pop
or
mov
push
outsb
cmpsl
jbe
lret
sti
push
in
dec
add
cmp
and
lds
fnstenv
mov
test
aas
mov
jo
adc
shll
xchg
pop
imul
sbb
stos
outsl
and
rcll
inc
insl
jns
lcall
cltd
sarl
adc
out
cmp
xchg
mov
fstps
jge
pop
jp
jl
out
rolb
pusha
pop
jbe
js
insl
add
insl
dec
pop
mov
pop
pop
jb
in
test
icebp
inc
cmp
push
popf
pinsrw
insb
xor
mov
rcl
sub
into
push
cltd
pop
push
push
notl
push
loopne
movsb
shll
cmpsb
testl
jge
pop
sub
xor
pusha
int
sbb
inc
sub
xor
divl
sub
push
mov
lds
test
dec
adc
pop
or
xchg
lock
ds
je
sti
mov
cmp
imul
pop
into
arpl
test
pusha
hlt
ljmp
mov
xor
dec
cmp
sarl
push
cmp
popa
jg
xor
push
nop
sub
pushf
mov
mov
mov
js
add
sbb
dec
and
cmpsb
inc
sub
jl,pt
divb
popa
xor
fwait
or
cmc
inc
mov
and
lods
std
inc
into
xor
jmp
iret
push
xlat
jmp
rorl
fwait
je
push
xor
sub
add
xor
stos
xchg
adc
cwtl
push
pop
cmp
sub
fyl2x
movsl
icebp
inc
mov
out
fwait
add
pop
test
bnd
mov
stc
outsb
in
ret
push
insb
jno
pcmpeqw
xchg
xchg
cmp
mov
sahf
mov
adc
ss
nop
daa
pop
sar
lea
sub
jmp
adc
push
shll
push
cltd
out
jne
inc
call
notb
adc
push
popf
mov
das
adc
movsl
jl
sbb
add
in
add
jb
adc
int3
scas
xor
lods
mov
adc
push
or
inc
test
jns
sahf
sub
cmpsb
in
cmp
in
pusha
dec
test
lcall
std
jmp
sbb
sbb
jae
dec
ljmp
in
sti
push
pop
rorl
push
inc
call
imull
test
sub
enter
jg
shr
and
pop
hlt
popf
stc
mov
or
dec
inc
mov
in
dec
sub
mov
cltd
pusha
inc
adc
das
push
es
push
sub
adc
or
xchg
inc
push
inc
test
hlt
inc
xor
vminps
test
sbb
cmp
and
xor
out
sahf
mov
inc
push
fisubrs
pop
lret
fwait
mov
into
mov
jp
sbb
imul
mov
cli
cmp
xor
pop
add
and
loope
mov
mov
mov
lcall
add
fistl
sub
mov
push
xchg
xor
pushf
pusha
insb
push
rcr
or
out
cmp
lahf
ss
stc
mov
pusha
sub
pop
sahf
or
gs
cmp
imul
icebp
mov
mov
mov
mov
xor
mov
fcoml
dec
aas
repz
push
mov
cmp
adc
jmp
xor
sbb
xor
lods
push
rcl
out
xor
adc
cs
mov
push
xorl
or
andb
and
mov
ljmp
pop
mov
outsl
cltd
lret
mov
js
inc
push
test
dec
mov
ds
mov
add
je
xlat
pop
leave
aad
mov
fildll
shll
shrl
lods
fdivrs
pop
push
in
sub
cmpsb
imul
push
idivb
test
dec
scas
and
mov
scas
mov
je
jge
jae
decl
hlt
sub
adcl
sbb
ss
dec
sbb
js
dec
aad
jle
inc
inc
mov
fnstsw
add
lods
push
add
add
and
mov
push
mov
xor
inc
pop
repz
inc
and
cmpb
mov
es
mov
dec
push
in
jbe
fbstp
pop
mov
lock
jo
ljmp
jl
push
xchg
or
pop
add
insl
roll
je
hlt
mov
movsl
inc
in
lock
jle
xor
push
movsl
xor
test
pop
cmp
imul
pop
mov
sub
jb
push
sbb
ljmp
pushf
fdivr
xchg
pop
sbb
and
popa
mov
adcb
nop
mov
sti
cwtl
xor
adc
push
idivl
push
jmp
jmp
popf
das
call
xchg
cs
cmpsl
or
mov
cmp
cs
pop
pusha
popa
notl
mov
mov
popa
jp
inc
mov
sub
inc
ret
ljmp
jae
or
or
mov
inc
and
sub
pop
das
inc
addr16
jae
mov
or
cmpsl
pop
insb
jo
push
lea
mov
pusha
aaa
add
mov
out
lock
hlt
mov
aaa
clc
push
rorl
outsl
cmp
inc
sub
lret
sti
movsb
mov
jle
inc
pop
xor
mov
mov
nop
push
jmp
mov
pop
mov
dec
fildll
xchg
arpl
adc
mov
insb
pop
repz
mov
inc
lcall
and
loopne
aaa
push
cltd
sub
xchg
add
addr16
mov
clc
test
mov
pop
mov
xor
cmp
pusha
cli
sbb
shlb
dec
jb
add
jp
mov
jmp
addr16
fadds
loope
sub
and
sbb
call
dec
adc
loop
cmc
pop
repnz
xchg
pop
sub
sbb
pop
sbb
mov
xchg
adc
fidivs
out
pop
ljmp
push
lea
add
xchg
shl
sar
cli
adc
xor
subb
lods
dec
fcomi
adc
push
dec
sbb
cltd
mov
stc
popf
call
push
das
data16
leave
jecxz
push
decb
test
stos
das
sub
jbe
adc
in
test
icebp
jb
bound
cli
cli
or
pop
mov
jns
mov
imul
xchg
orb
add
fwait
xor
test
or
mov
sbb
inc
cmc
call
jmp
enter
das
xchg
scas
test
stos
add
lea
add
and
fldl2t
dec
mov
jnp
xor
lods
sub
outsb
cld
std
inc
jo
sbb
xor
add
push
adc
movsb
inc
neg
jne
test
test
xchg
stos
insl
loope
stos
inc
out
rcll
lahf
js
push
aad
pop
cmp
adc
pop
jle
repz
lcall
dec
or
hlt
hlt
pop
inc
lcall
mov
pop
in
push
stos
or
sub
rcl
and
lds
jecxz,pn
bnd
inc
cld
std
test
movsl
icebp
mov
ret
lds
dec
push
in
rclb
xchg
xchg
bound
push
mov
les
mov
xchg
cmpsl
cmpsb
dec
mov
mov
mov
hlt
mov
fidivrl
pop
push
xchg
lods
pop
test
je
in
push
mov
idivl
push
daa
mov
in
cltd
negl
sahf
jecxz
push
shll
push
fcoms
int3
lods
es
sbb
jge
adc
rcrb
ljmp
addb
xchg
sbb
hlt
mov
addr16
sbb
mov
pop
mov
inc
das
cmp
dec
push
add
inc
lods
sbb
jae
push
cmpsl
xchg
mov
repz
cmp
dec
mov
push
mov
pop
lret
add
cmc
sub
lret
shll
or
xor
mov
mov
push
adc
xchg
and
inc
push
hlt
ret
shl
inc
xor
imul
stos
mov
and
xor
scas
add
cmp
mov
sbb
repnz
jge
mov
stc
lret
enter
dec
jecxz
aam
scas
push
daa
cmp
or
ret
push
sbb
orb
and
push
sbb
mov
addr16
pop
mov
pop
loope
aad
cmp
imul
mov
lods
jmp
ds
and
mov
pusha
adc
push
icebp
mov
push
cmpsl
daa
ds
repnz
loopne
out
repz
pop
jne
loopne
push
imul
scas
xor
and
pop
push
xor
cmp
jb
xor
aam
mov
and
jl
insl
sbb
xlat
or
cmp
sbb
mov
dec
aam
sbb
cmpsl
in
rol
pusha
xor
sti
mov
xor
out
xor
cltd
cmp
mov
shl
les
jmp
mov
push
mov
fiaddl
sbb
mov
movsl
lret
std
jne
jl
pop
les
xor
shlb
decb
xchg
in
popf
call
and
adc
aam
std
cmc
and
aaa
fstps
mov
jecxz
in
cs
push
add
cmpsl
test
mov
mov
lret
mov
pop
and
jo
sbb
pop
xor
inc
push
jg
jne
add
call
jmp
stos
mov
lret
stc
and
pop
lods
sbb
fsubs
and
dec
xchg
mov
jp
fstpt
movsb
jb
cwtl
pop
inc
inc
jmp
aas
ljmp
shl
jg
fstpt
mov
add
xor
rol
mov
scas
mov
mov
mov
xor
call
loope
jl
int
xchg
jmp
jle
clc
xor
or
insb
mov
cmp
call
sbb
dec
pop
shll
xor
arpl
les
dec
stos
rcl
ret
push
std
mov
mov
aam
jae
loop
or
repnz
lods
adc
fldl
std
cltd
cmp
jns
xchg
dec
ja
xor
pop
pushl
lock
cmp
push
cmp
ja
mov
mov
notl
and
sub
popf
out
fwait
cmp
cmpsl
daa
inc
xor
ud0
loopne
push
and
js
jp
fdivrs
sahf
or
sti
ljmp
push
lods
jne
clc
cs
pop
sbb
aaa
das
rcl
push
outsl
push
inc
ret
je
cmp
push
jmp
fisubrl
insb
orl
xchg
mov
shll
or
cs
or
push
add
pop
mov
mov
js
test
fstpt
push
push
dec
movsb
stos
jle
cmp
adc
dec
jp
cli
jmp
mov
es
and
jle
and
mov
in
push
adc
aas
iret
lcall
je
fisubs
idivl
call
push
subl
shrl
sub
sbb
push
cvtps2pi
push
outsl
add
cwtl
push
int
jbe
data16
lods
mov
jnp
jg
cmp
jle
xchg
clc
rcll
scas
pop
mov
jne
sub
int3
pop
sbb
inc
mov
int3
lods
gs
nop
and
or
mov
fscale
bound
adc
inc
movsl
mov
movsb
test
push
jns
shll
xor
dec
hlt
mov
in
test
ret
jb
or
mov
jle
lods
push
test
inc
xchg
repz
mov
dec
fucomi
ret
js
aad
cmp
or
sbb
inc
arpl
adc
xchg
xchg
mov
adc
sub
mov
pop
dec
int
stc
jge
enter
shll
int
or
filds
sub
or
inc
orb
loopne
repz
xor
lock
aaa
add
aaa
les
loop
xchg
mov
insl
adc
movsb
sub
stos
mov
rcl
or
sub
or
lahf
mov
pop
pop
jae
pop
sub
and
ja
sbb
dec
push
cmp
push
pop
inc
orl
hlt
repz
sub
dec
leave
pop
insb
pop
pop
xor
fs
imull
enter
lods
pop
fnstsw
loop
cmpsl
mov
pop
gs
nop
pop
mov
jne
lods
push
mov
jae
jns
and
and
cmpsl
mov
outsl
out
aad
scas
testb
mov
xlat
push
leave
sbb
push
std
jg
fidivs
jp
lcall
bound
push
mov
jecxz
mov
add
shr
cmp
push
mov
test
ret
inc
out
jnp
jg
imul
or
sarl
sbb
xor
or
push
mov
mov
scas
fadds
mov
inc
fadds
adc
int3
jne
imul
enter
xchg
pusha
movl
daa
xor
pop
stos
loope
pusha
enter
push
jl
hlt
decl
inc
in
loope
xchg
pop
pop
jae
aad
dec
push
add
aad
pop
push
mov
or
add
fwait
movsl
push
and
dec
jbe
out
movsl
xor
cs
mov
notb
sub
mov
loop
inc
icebp
movsl
in
movsl
xor
in
xchg
in
dec
imul
xor
aaa
mov
stc
nop
int3
pop
or
xor
xchg
sbb
sub
pop
shlb
pop
lret
push
insl
enterw
xor
fwait
or
adc
fidivrl
xchg
pop
je
push
mov
jl
rcr
repz
cli
repnz
jne
sub
call
xchg
and
inc
adc
mov
push
insb
enter
dec
popa
mov
lcall
cmp
inc
call
mov
das
pop
test
fldenv
sahf
icebp
popf
xor
lods
sub
sub
faddp
test
inc
dec
popa
sub
fcoml
rcrl
jnp
mov
inc
mov
add
mov
fcomp
xor
in
mov
ss
cmp
getsec
sub
in
cwtl
movsb
xchg
mull
push
fwait
mov
sub
push
fwait
xchg
cs
sub
add
xchg
and
push
idivb
shl
les
sbb
les
sbb
pop
push
cmp
inc
shlb
inc
enter
out
push
hlt
xor
scas
pop
nop
dec
loope
xor
cs
sub
jbe
sbb
push
and
or
outsb
ret
xchg
gs
sbb
mov
cmp
aas
mov
push
call
xchg
xlat
dec
stc
jnp
lcall
addr16
loopne
stos
sbb
mov
lret
adc
aam
cmp
out
pop
mov
popf
or
mov
shrb
push
shrl
lahf
dec
loop
pop
icebp
repz
or
adc
adc
fnstenv
daa
ret
pop
mov
dec
into
and
inc
sahf
lret
dec
pop
imul
loopne
dec
and
fnstcw
repnz
push
mov
lahf
testb
lock
cli
adc
test
hlt
push
add
jne
push
movsb
arpl
xchg
xor
lcall
sbb
push
in
xchg
lret
inc
cmc
loopne
int3
pandn
push
push
ret
incl
sti
cmp
sbb
rorl
sub
das
aam
pop
push
stc
xchg
scas
push
popf
popf
gs
push
jbe
xor
loop
push
bound
out
mov
rcl
sarb
insl
ret
inc
fsubs
mov
or
sub
movsb
inc
sbb
cmp
push
sub
sub
mov
add
adc
jl
shlb
lret
cld
scas
xor
dec
jnp
xchg
mov
pop
jnp
out
cmpsl
push
hlt
xchg
push
jns
mov
mov
push
sub
pushf
loope
pop
stc
pop
mov
push
das
mov
inc
cmp
repnz
leave
adc
cltd
jnp
cmc
lods
mov
push
rol
cmp
xchg
imul
pop
loope,pn
pop
jns
adc
inc
pop
icebp
jb
add
xchg
js
int3
rclb
inc
xchg
lahf
repz
lret
mov
fdivrl
mov
mov
push
fsts
loop
mov
push
xlat
cmp
cmp
in
and
out
into
ss
adc
ja
xchg
and
movb
add
cmp
sbb
and
fnstsw
data16
mov
je
push
popl
sbb
mov
mov
pop
or
mov
sub
mov
cld
sub
inc
inc
stos
ret
push
or
pop
mov
orb
fisubs
out
sysexit
fucomip
in
push
int3
add
xchg
arpl
scas
test
pop
adc
inc
addb
jns
inc
fsts
fwait
push
test
mov
mov
adc
or
pop
cmpsl
sub
jge
ret
adcl
popf
mov
sbb
out
cmc
dec
pop
daa
loope
mov
and
enter
xchg
sub
mov
push
nop
fs
mov
aaa
mov
pop
out
inc
cltd
and
inc
cmp
jmp
pop
in
sub
insl
loopne
cmp
js
cmc
outsb
add
xor
and
mov
mov
adc
jmp
mov
push
popa
adc
push
cmpsb
decl
hlt
inc
lods
mov
aaa
sbb
sti
lods
mov
cmpsl
rcrb
test
xchg
fcmovb
dec
pop
stos
sbb
or
std
pop
jo
outsb
fisttps
sarb
jmp
iret
fcmovnu
out
ss
push
pushf
pop
cmp
mov
jmp
orl
and
mov
mov
scas
push
rorb
mov
xor
push
inc
pop
xor
dec
negl
shll
mov
mov
push
dec
fsubs
test
jmp
popa
mov
mov
repz
push
jl
divb
sub
jl
shl
cmp
push
hlt
mov
das
adc
dec
pop
add
sub
add
loopne
fstpt
or
loop
sub
test
loop
cld
xchg
imul
mov
push
stc
pop
xor
cmp
into
push
stc
pop
aad
sti
pop
sub
lret
es
dec
int
push
add
mov
and
add
sub
cmpsb
mov
pop
cmp
sbbl
hlt
pop
pop
fcmove
mov
enter
lods
sub
imul
pop
jg
cli
or
insb
fwait
pop
out
lret
daa
icebp
aad
ds
test
mov
fcomps
push
mov
scas
aam
rclb
aaa
nop
jb
add
leave
fucomi
sub
nop
pop
pop
ja
add
nop
dec
pop
push
fdivrs
movsb
das
clc
aas
imul
cmp
cld
or
jb
es
movsl
fcmovnbe
out
nop
mov
dec
stos
inc
jge
les
xor
loop
mov
mov
les
mov
pop
scas
mov
mov
jmp
push
insl
cmp
jo
testb
mov
out
lods
adc
and
push
mov
call
cmc
sbb
add
in
dec
cmpsb
in
xor
mov
psrld
inc
fbstp
sub
pop
in
fs
scas
xchg
test
inc
faddp
xor
arpl
and
rorb
es
jge
inc
xchg
dec
shlb
push
mov
mov
popa
xor
adc
leave
stos
xor
insl
gs
or
mov
mov
mov
pop
pop
bound
jo
mov
adcb
mov
enter
ja
leave
rcr
repz
push
sbb
loop
cld
dec
xchg
or
punpckldq
xchg
jge
adc
stos
fsts
ret
hlt
cmp
and
push
lahf
imul
inc
adc
and
lret
popa
xchg
cmpsb
lea
cld
xchg
xor
push
adc
test
cmpsl
jns
cmc
cmc
dec
stos
fstl
sub
lea
cmc
mov
sub
das
movsb
adc
icebp
fcmovne
mov
jge
test
cmp
loope
fwait
std
leave
rcrb
push
pop
lds
mov
push
in
iret
lret
xor
orb
sub
push
insb
adcb
loopne
in
cmc
jnp
lods
cmp
add
daa
jl
mov
dec
popa
xchg
jge
inc
scas
mov
push
das
out
xchg
jmp
inc
movsb
mov
jbe
sub
leave
aaa
ret
add
pop
and
in
mov
ja
rclb
lds
sub
jmp
or
hlt
leave
daa
ret
inc
fsubrp
jnp
mov
add
fistpll
fcmovbe
insb
and
jnp
cmc
inc
sub
pop
aam
jns
outsl
pop
ja
popa
dec
loop
outsb
sbb
inc
imul
inc
inc
jo
jae
vmovsldup
jae
adc
mov
mov
add
iret
push
lea
mov
addr16
sbb
or
pop
inc
lds
dec
fbstp
dec
mov
cmp
xor
sub
mov
jg
data16
pop
push
je
stos
shrl
or
fidivs
rcl
in
imul
sbb
hlt
pop
fdivr
iret
int
in
or
sbb
iret
mov
adc
dec
push
mov
sub
or
pop
xor
sbb
mov
stos
testb
cmc
adc
fldenv
into
cmpsl
cmp
cmp
lret
ret
negl
repnz
sub
dec
cmp
inc
mov
stc
shrl
and
adc
or
mov
push
ljmp
adc
or
imul
push
les
xor
std
ret
idivl
pop
jns
xor
dec
pop
add
ljmp
jb
pushf
xlat
sbbb
dec
or
dec
les
imulb
js
dec
jmp
mov
fninit
and
test
push
jno
cmp
dec
cmp
mov
test
lcall
inc
imul
int
mov
xor
hlt
out
dec
sbb
testb
in
xorl
and
out
sti
clc
adc
push
std
inc
xor
cmpsl
inc
mov
push
out
pop
add
repz
and
xchg
or
stos
mov
insb
and
lcall
jp
scas
mov
push
and
icebp
mov
fidivrs
inc
and
fwait
push
push
adc
fnstenv
mov
xlat
test
testl
je
andb
mov
movl
push
xor
les
jge,pt
movsb
rcrb
or
or
nop
cs
cmp
testb
sbb
in
popf
sbbl
xor
mov
jp
xsha1
cmpsb
into
out
dec
pop
xchg
out
sub
push
push
rolb
xor
arpl
inc
sbb
mov
in
aas
xor
icebp
cmpsb
cmc
mov
aas
mov
ljmp
jno
mov
int
das
fs
add
pop
ss
jne
scas
xchg
ret
sub
add
repnz
jg
or
loope
sub
xor
jb
jns
sub
adc
cmpsl
cwtl
outsl
xorb
mov
pop
cmp
stos
int3
or
dec
test
mov
pushf
cld
addr16
cmp
push
addl
fidivrs
daa
mov
fdivrs
hlt
push
mov
push
mov
pop
adc
push
andl
xchg
push
sub
jnp
arpl
or
fisttps
loope
xor
mov
mov
es
pop
sub
mov
inc
sub
adc
xchg
nop
push
scas
dec
mov
andb
mov
dec
mov
lock
ja
push
add
xor
pushf
test
mov
enter
jg
lods
enter
push
popf
xchg
jbe
fwait
pop
ds
lods
call
or
leave
mov
js
xchg
rorb
mov
cmp
addb
adc
movsb
nop
mov
loope
pop
loope
lret
or
inc
or
int3
push
inc
and
mov
xor
adc
xor
and
out
icebp
and
sbb
scas
sub
sub
pop
lds
dec
xchg
mov
xlat
outsb
pop
icebp
pop
mov
cli
mov
push
xchg
xchg
iret
loope
fcomip
ds
xchg
adc
mov
pop
xchg
add
sar
iret
cmc
xor
out
lret
mov
es
imul
addb
jb
or
mov
testb
in
lock
mov
mov
les
mov
xorl
stos
push
mov
ret
aam
lods
mov
sbb
xor
adc
push
into
lods
inc
adc
adc
fidivl
xchg
pop
insl
mov
dec
cmp
mov
out
add
push
lock
mov
cltd
sbb
pop
dec
jbe
and
or
xlat
mov
fists
push
lahf
cmp
popf
cmp
or
je
and
addl
adc
dec
test
sbb
adc
hlt
sbb
and
or
mov
mov
mov
or
out
mov
mov
mov
adc
insb
sbb
mov
fs
cmp
popa
or
ja
jl
or
enter
insb
cmc
aad
push
or
cmp
inc
stos
lods
ret
push
out
xchg
cmpsl
in
add
mov
or
xorl
and
pop
jo
lret
test
addr16
push
test
rorl
sti
repnz
cmp
xor
es
mov
mov
and
xchg
pop
push
fdivrs
or
decb
pusha
or
cmp
xchg
icebp
sub
jae
xchg
and
enter
mov
jno
ss
int3
adc
and
add
jecxz
cmp
rolb
sub
pushf
jae
addr16
enter
cs
push
push
mov
ds
rorl
outsb
test
sahf
adc
xchg
adc
push
popa
xchg
daa
sti
jp
cli
inc
sbb
dec
push
xchg
dec
mov
sbb
push
mov
push
sub
adc
mov
adc
aas
xor
fcomp
icebp
add
mov
test
adc
push
push
pop
or
inc
popf
rcl
scas
xchg
sub
fstps
aam
add
imul
adc
mov
adc
pop
negb
rorl
mov
push
in
cmp
ss
pop
in
ret
mov
inc
and
nop
jecxz
jle
cmp
mov
and
sub
cmpl
dec
fmull
adc
pop
rorl
hlt
sub
push
jp
repnz
inc
or
hlt
mov
test
add
sub
out
loop
loopne
add
mov
jno
sbb
shr
scas
sbb
sbb
cmp
add
les
pop
out
lds
mov
mov
adc
dec
push
call
cmp
pop
xchg
pop
dec
jnp
xchg
mov
add
mov
cmpsl
cmc
inc
mov
std
adc
add
pop
test
leave
lret
sti
shlb
orl
fwait
jle
or
loope
adc
test
pushf
inc
sbb
leave
mov
ret
sbb
aas
sbb
pop
mov
subl
in
mov
mov
fadds
rcrl
pop
adc
fsubrs
lcall
dec
or
cmovs
lret
cmp
jl
int
cwtl
add
dec
mov
addb
xchg
pop
stos
rclb
dec
rol
jo
fistpl
notl
in
inc
pop
scas
mov
jmp
fucom
iret
jbe
cmp
into
xchg
xchg
jo
cwtl
mov
rolb
pop
or
or
and
sub
mov
movsl
and
sub
stos
ljmp
xor
inc
scas
jb
fwait
cmp
xlat
cmc
mov
inc
jno
icebp
test
jp
cltd
popa
and
js
pop
pop
inc
loop
cmp
sub
in
fsubrl
je
add
xor
sub
and
or
jl
cwtl
pop
jmp
mov
jno
sahf
pop
ss
aam
sahf
enter
push
mov
pop
cmpsb
rcll
outsb
or
pop
jecxz
cmpsb
xor
std
inc
sbb
rcll
cltd
js
push
fisubrs
imul
shll
sahf
addr16
pop
data16
sbb
cmp
push
outsb
fwait
push
push
out
xor
xor
xchg
xchg
lods
out
mov
adc
jle
mov
stos
les
jge
sti
es
push
cli
stos
add
inc
push
jbe
stc
adc
cmpsb
es
cmp
outsb
fidivl
movsl
and
scas
and
and
xchg
mov
and
repz
sbb
push
bound
xor
ja
push
and
aam
das
mov
shll
lods
mov
aaa
cld
ficomps
cmpsb
adcl
cmpsb
les
fiaddl
imul
lret
hlt
data16
mov
stos
fidivl
mov
clc
or
pop
sub
sub
push
inc
fistps
ss
scas
lods
fstpt
aaa
adc
xchg
xchg
adc
xchg
fldl
shlb
cltd
sub
adc
addl
icebp
adc
fmul
enter
jbe
enter
cmp
pop
cwtl
dec
add
mov
jnp
cmp
cmpsb
cmpl
sub
lods
mov
pop
inc
stos
inc
arpl
popa
gs
fadd
mov
stos
icebp
rcrl
mov
and
aaa
cmpsl
leave
loopne
repz
scas
call
add
jo
push
sbb
outsb
inc
cmp
daa
lods
rorl
repz
arpl
rcrl
mov
mov
push
mov
or
pop
aas
insl
ljmp
ds
bound
dec
aam
loop
push
out
dec
test
xchg
ljmp
insl
sbb
jns
mov
insl
mov
dec
leave
sahf
lods
and
pusha
mov
mov
icebp
lahf
jno
dec
fidivl
and
lcall
cmp
jle
sbb
fisubrs
jg
das
in
incb
imul
adc
test
xchg
cs
shrl
into
rcr
xchg
cmp
clc
lock
jecxz
shll
mov
lret
out
lcall
and
inc
leave
scas
in
push
push
xchg
xor
jl
inc
mov
xchg
ja
mov
jp
and
dec
lock
and
cmpsb
out
jbe
push
popf
sbb
xlat
repz
mov
add
add
test
pop
pop
stos
js
mov
push
sbb
in
dec
jnp
jp
out
mov
or
lret
jmp
fidivl
jmp
sbb
addr16
rcrb
or
int
movb
testl
bound
mov
push
popf
lds
call
imul
push
mov
mov
ret
adc
cmpsb
jge
cmp
mov
jbe
dec
fcomps
jp
stos
sub
sub
icebp
or
jo
int3
test
imul
scas
inc
and
dec
cmp
push
out
mov
sub
shl
sbb
icebp
cmpsl
pop
daa
mov
push
idivb
push
jle
scas
fidivrs
xchg
add
cmpsl
sbb
pop
sub
cmp
push
dec
sub
ret
and
add
xor
ret
enter
std
cltd
pop
mov
push
cmpsb
in
lods
push
inc
add
fnsave
call
push
add
repz
or
popa
cmp
cmp
outsl
in
das
imul
adc
pop
xor
mov
repnz
repnz
testb
sbb
ret
fxtract
push
or
mov
add
mov
fisubrs
inc
pop
jns
inc
dec
in
jl
sbb
enter
addr16
call
leave
add
insl
leave
fldcw
push
xor
pop
inc
in
add
sub
jp
inc
mov
xlat
das
fwait
mov
jp
movsb
sbb
lock
sbb
repnz
idiv
lcall
xor
mov
pop
dec
rorb
xchg
mov
dec
jl
mov
lea
sub
jne
mov
xchg
ds
and
loope
adc
sbbb
cmp
imul
out
cmp
sbb
frstor
ja
xor
sbb
sbb
lahf
stos
les
jno
sbb
ret
pop
cs
xchg
daa
pop
pusha
cmp
test
rorb
xor
and
jle
sub
aaa
call
icebp
sub
call
cmp
push
push
nop
xchg
ret
mov
int3
inc
das
mov
test
mov
dec
pop
pop
jo
lods
sar
ret
cmp
mov
cmp
mov
inc
jb
orl
out
stos
outsl
jge
fs
xor
inc
pop
cmp
in
std
mov
rolb
push
mov
push
mov
es
adc
and
xor
scas
or
adc
arpl
mov
fbld
mov
mov
outsl
incb
xor
fisubs
dec
xchg
jg
es
rcrb
pop
cld
xchg
dec
add
xchg
dec
and
adc
mov
mov
enter
scas
dec
push
push
jb
aam
cmp
inc
cmpsb
mov
xchg
in
test
loop
sbb
shll
push
int
ret
scas
sti
jmp
jae
xchg
pop
loopne
mov
mov
cmpsl
imul
pop
fwait
negl
loope
es
cmpsl
call
adc
xchg
lea
add
inc
adc
inc
addr16
push
add
or
sub
jp
mov
enter
lret
mov
jo
jb
clc
or
jp
xchg
call
test
std
push
sarl
inc
mov
jg
mov
push
aaa
push
cmpl
push
mov
adc
addr16
int3
xchg
shlb
sarb
add
dec
sti
jle
rcr
outsb
and
or
push
inc
jb
adcl
jmp
inc
scas
push
iret
pop
hlt
in
mov
icebp
out
int3
add
cmp
pop
ret
sbb
test
cwtl
lods
lahf
xchg
mov
test
pop
sub
push
inc
add
xchg
js
dec
stos
push
testl
outsl
jl
fs
cmp
xor
and
lods
adcb
int
shr
jecxz
scas
in
loop
push
aad
outsl
xor
insb
xchg
xchg
pop
mov
mov
out
leave
fldcw
dec
mov
fwait
data16
mov
sub
imull
or
scas
bound
xorl
ss
add
add
xor
xchg
xchg
enter
jl
sbbb
adc
jb
lds
test
cs
std
sbb
jl
xor
jle
or
adcb
jno
fsubrl
adc
mov
decb
fistps
dec
scas
fcomps
jno
inc
dec
push
pop
mov
mov
mov
sub
sbb
xchg
scas
sub
adc
pop
dec
adc
mov
sarb
loopne
jp
sub
lret
push
sahf
sbb
cwtl
scas
mov
inc
mov
inc
fisttps
and
xor
addr16
movsl
jle
arpl
pop
repnz
ss
and
cmp
aad
adc
mov
ss
es
inc
pushf
mov
sub
pop
inc
movsl
jbe
xlat
and
mov
out
sub
pop
pusha
dec
cmpsb
daa
jl
mov
jbe
ja
dec
jnp
push
mov
add
sarb
and
adcb
push
imul
push
mov
pop
fdivrs
sub
mov
sahf
int
cmp
aad
jb
call
inc
int
scas
data16
shr
jle
jmp
push
inc
jne
mov
xor
test
push
fs
push
out
and
lret
cld
stc
nop
mov
js
jo
pop
std
cltd
xchg
je
shlb
in
andl
xchg
mov
xchg
xchg
jbe
std
lods
sti
inc
sbb
pop
mov
mov
sbb
sbb
into
insb
je
lret
insb
jbe
dec
push
or
popf
adc
daa
scas
adc
and
daa
adc
ljmp
mov
sti
repnz
repnz
cltd
stos
nop
enter
cld
fs
and
inc
or
test
addb
mov
adc
pop
ja
dec
loope
rcrb
pop
jo
iret
sarb
gs
adc
sbb
add
repz
jo
int
test
nop
jp
arpl
xor
cmp
lds
adc
aad
or
mov
outsb
int
mov
clc
fisttpl
jmp
cld
outsl
sbb
add
inc
shlb
cltd
inc
pop
add
imul
mov
sub
dec
sarl
mov
xor
movsl
push
pop
xchg
sub
test
pop
mov
loope
das
insb
jge
cmp
popa
repz
pop
insl
jecxz
sahf
push
icebp
adc
add
sti
std
arpl
fsubl
out
cld
ds
lds
xor
fs
mov
push
or
jecxz
cmp
lods
inc
inc
mov
popa
cwtl
fwait
iret
jb
in
outsl
push
xchg
insb
js
mov
test
std
decb
ror
mov
xor
in
mov
xchg
test
and
repz
hlt
dec
sbb
addr16
fdivs
jae
je
cmp
out
xor
stos
mov
push
sbb
aaa
xchg
mov
and
int3
movsb
lret
xchg
mov
push
and
jae
dec
outsb
mov
mov
fcoml
dec
cmpsb
and
or
loope
inc
xchg
out
xchg
loopne
leave
loope
jnp
mov
and
repnz
gs
or
mov
cmp
pop
test
add
pop
out
dec
cs
lcall
cltd
xchg
mov
int3
enter
insl
push
mov
jmp
fxtract
icebp
cmp
mov
daa
int
xor
bound
ja
or
dec
and
loopne
rorl
jle
jns
aam
xlat
mov
push
std
outsb
testl
fcomps
xchg
cmpsl
push
pcmpgtb
jbe
sub
notl
cld
mov
sbbl
sbb
pop
js
mov
cltd
push
sti
pop
pop
fisubs
jns
and
push
mov
cmc
adc
jge
push
lcall
inc
lret
ds
xor
notl
cmp
pop
hlt
inc
int3
pop
scas
pop
cmp
add
push
popa
jg
mov
ret
sbb
push
cs
xor
popa
inc
sahf
icebp
mov
bound
js
mov
push
or
sub
js
inc
jmp
movl
jp
fwait
mov
mov
cmp
test
xor
inc
push
push
cmp
xchg
inc
call
pop
mov
and
repz
bswap
ds
xchg
lock
xchg
mov
enter
cmp
jecxz
sub
xlat
icebp
jge
pop
pop
sbb
stos
lcall
loop
inc
cmpsl
pop
test
mov
es
stos
inc
mov
mov
xchg
mov
mov
and
jns
fcoml
js
ja
and
pop
fcmovnbe
dec
or
jle
sub
sub
lock
ja
mov
scas
loopne
mov
fdiv
xlat
std
push
jae,pn
rorl
sarb
sub
sub
mov
add
mov
sbb
jp
mov
mov
dec
loope
jecxz
sbbb
vpsraw
dec
sub
mov
sub
xor
xchg
sub
adc
inc
sbb
je
xchg
ret
sub
ret
pop
jecxz
ret
rcr
nop
loopne
jecxz
cmp
sbb
out
xor
inc
and
fnsave
in
inc
mov
or
imul
subl
mov
xchg
fdivrs
sbb
sbb
pop
es
jl
pushf
cli
xchg
in
xchg
iret
shlb
mov
push
fstl
mov
mov
mov
fidivrl
popa
and
ss
cmp
cmc
push
inc
mov
sarl
pushf
mov
stos
in
rorl
mov
or
in
das
aaa
sub
inc
lret
aas
lcall
xlat
pop
mov
mov
or
dec
cmp
mov
adc
popa
xor
adc
mov
in
movsb
cltd
xchg
pop
inc
sar
lods
mov
insb
idivl
jecxz
repnz
ret
mov
lahf
push
mov
cwtl
pop
imul
sbb
jb
mov
test
iret
xor
in
push
insl
popf
adc
stos
mov
mov
jg
mov
or
jmp
outsl
sahf
add
cwtl
ljmp
mov
xor
ret
jb
outsl
add
sti
addr16
sbb
xchg
testl
test
mov
iret
cmp
mov
insl
jle
fisttps
lcall
push
subb
adc
sub
jno
jmp
movsb
repnz
dec
xchg
cmp
xchg
mov
out
sub
jae
cmp
sbb
pop
sub
jecxz
lret
xor
dec
cmp
daa
mov
scas
inc
pop
lret
xchg
popa
clc
enter
or
jg
sub
add
pop
sub
or
movsb
movb
lret
or
outsb
shll
cltd
adc
mov
mov
dec
loopne
push
das
add
or
pop
inc
rcll
insb
test
add
in
stos
adc
fimull
outsl
inc
andl
bound
or
popf
add
push
sahf
mov
cmpsl
std
setno
mov
push
js
js
sbb
cs
loope
sub
push
jno
test
lret
mov
push
fildl
push
add
jp
mov
orb
gs
pop
push
sbb
ret
loope
jmp
mov
rolb
push
xchg
ret
js
imul
push
and
mov
and
ret
bound
fmull
pusha
push
mov
or
mov
xorl
cli
or
ljmp
cmp
cmp
in
pop
shrb
dec
fwait
xorb
cmp
mov
xor
nop
push
sub
divb
push
inc
cmc
sbb
movsl
test
insb
cli
lret
mov
fiaddl
pop
mov
mov
stos
xor
xor
ret
xchg
push
clc
iret
js
arpl
adc
push
in
cs
rorl
into
push
pop
pop
xchg
sub
ja
mov
es
movb
inc
movsb
ficoms
addr16
pop
mov
popf
addb
push
shll
jecxz
les
fidivs
outsb
out
mov
xchg
adc
push
push
inc
fsubl
jl
stos
inc
push
lahf
dec
adc
jg
dec
pop
imul
sbb
lods
mov
cli
dec
and
sbb
xchg
sahf
aad
or
gs
repnz
mov
mov
cmpsb
pop
sub
test
sbb
jno
push
jns
ret
je
ffree
adc
jle
jo
ret
inc
enter
mov
lret
inc
fwait
ja
and
inc
lods
dec
enter
cmp
dec
xor
jno
mov
and
lret
iret
ret
jmp
loope
pop
adc
mov
es
loop
xchg
fsubs
cmpsb
dec
xchg
jb
push
pushf
push
dec
stc
push
mov
sti
es
iret
xor
xor
inc
enter
int3
pop
rcrl
aas
xlat
rol
pop
in
fbld
roll
sbb
push
mov
xchg
daa
repz
test
loop,pt
hlt
xchg
sub
adc
dec
aad
add
inc
cs
mov
imul
out
outsl
cmp
or
mov
cltd
pop
je
push
aam
cmp
inc
arpl
das
imul
outsb
cmp
inc
out
xchg
jno
xor
ret
sub
nop
dec
adc
repz
mov
ret
mov
mov
sub
shrb
xchg
jmp
and
push
lahf
aaa
std
rcrb
iret
xchg
jl
jo
clc
jbe
cmp
scas
dec
sbbl
cmp
arpl
jecxz
push
cmp
mov
sub
xchg
pop
cld
jae
call
pop
loope
ljmp
adc
mov
jns,pt
mov
jp
notl
sahf
xor
cmp
mov
dec
imul
cltd
test
daa
ljmp
push
mov
adc
jmp
fwait
cld
cli
nop
in
mov
and
shrb
lcall
jb
out
add
in
xchg
hlt
ja
pop
ret
cmpsb
adc
inc
dec
cmp
pop
pop
cltd
pop
pop
add
call
ffreep
popa
mov
inc
setle
dec
mov
xor
jns
fdivrs
rorb
push
jb
jecxz
lods
pop
je
js
cmp
mov
or
aaa
xor
mov
dec
in
xchg
sbb
cmc
sbb
mov
sti
jbe
ss
add
push
pusha
int3
push
xor
ss
add
repnz
bound
es
shll
xor
sub
repnz
nop
mov
mov
xchg
pop
inc
pusha
mov
fnstcw
cmp
int3
leave
cmp
dec
jae
out
sub
sub
pop
or
pop
adc
push
xchg
test
mov
pop
loop
in
imul
sbb
repnz
fdivrs
add
or
js
xchg
ja
lcall
sub
cmp
aas
jae
in
loope
jno
cmpb
cmp
dec
jecxz
pusha
enter
neg
es
imul
sbb
mov
sar
nop
pop
cmp
shll
fwait
loop
or
adc
jnp
rcrl
data16
rcll
sbb
ret
pop
cmpsb
adc
jae
icebp
divl
xchg
and
cli
and
mov
cmpsl
push
mov
jns
shrb
inc
fistps
mov
mov
lds
movl
mov
sbb
sbb
mov
xchg
mov
pop
xchg
dec
lea
jmp
inc
push
fucomip
fcmovnu
movsb
pop
out
stos
es
mov
add
xchg
dec
add
scas
in
sbb
mov
xor
push
icebp
sti
jbe
inc
pop
jno
mov
jno
xchg
pslld
push
pop
cwtl
bound
mov
fsubrp
push
add
adc
out
loopne
pusha
add
shll
jo
gs
cld
cltd
add
cmp
xchg
mov
inc
jmp
repnz
jae
dec
adcl
lea
cmp
mov
push
mov
je
push
iret
sub
push
xchg
jg
sbb
and
mov
mov
xchg
push
insl
adc
fldl
add
jae
adc
mov
or
fwait
xchg
xchg
jecxz
and
ss
dec
arpl
les
dec
dec
mov
cmp
ret
xlat
icebp
sub
loop
xor
je
ret
pushf
dec
loope
jns
test
repnz
daa
lcall
inc
mov
xchg
mov
sbb
or
add
add
push
aam
pop
lds
xor
add
xchg
in
test
mov
sbb
or
mov
out
outsb
pop
mov
push
gs
pop
and
cmp
ret
outsl
iret
lcall
into
push
loop
or
shl
testl
push
jbe
lds
gs
xchg
pop
sbb
add
insb
cmp
popa
pop
inc
fiadds
xor
pop
nop
push
aad
sbb
ja
push
and
popa
dec
pop
rcr
jg
nop/reserved
scas
and
out
lods
xchg
cmp
mov
aas
add
xchg
out
stos
and
jmp
cltd
sub
sbb
popf
pop
ds
nop
jge
xor
je
xor
dec
inc
push
dec
sbb
loop
mov
sub
scas
ss
test
mov
sarb
xchg
arpl
pop
ds
pop
lcall
xor
or
sahf
mov
pop
sbb
outsl
test
push
imul
outsl
lock
sbb
stos
push
add
fdivrs
dec
jge
xchg
stos
insb
push
insb
mov
sbb
imul
outsb
jae
jl
rcl
pop
push
jle
jne
xchg
stos
frstor
fsubrs
sbb
jle
mov
jnp
das
std
je
push
js
sub
and
inc
xchg
inc
and
dec
dec
imul
std
adc
pop
dec
mov
shlb
sub
mov
int
call
or
lods
xchg
add
mov
lcall
xor
jo
mov
mov
cmp
xchg
xor
lods
inc
idiv
sbb
push
pusha
mov
pop
push
jnp
test
sub
sbb
push
cmpsb
mov
push
out
mov
stc
inc
pop
testb
dec
stc
cwtl
jae
aad
cwtl
mov
fiadds
push
or
jl
sbbb
mov
mov
dec
adc
sbb
add
stc
aas
shll
test
mov
jl
dec
cmpsb
push
add
mov
setg
xchg
sti
rcl
sbb
adc
pushf
xchg
sbb
pop
aaa
mov
je
insb
sub
and
push
lock
adc
xor
sub
scas
push
xor
xor
cli
aam
xor
es
arpl
jp
cwtl
cltd
push
jmp
ret
inc
fstps
mov
sbb
pop
add
enter
lods
jo
adc
fildl
jne
nop
mov
adc
mov
push
lcall
dec
inc
inc
stos
stc
sub
shl
sbb
sbb
orl
lods
je
fbstp
out
inc
loopne
jb
outsl
daa
and
mov
outsl
xchg
subl
fisubs
fsubr
xlat
and
in
pcmpeqb
cli
fbld
cmp
lods
pop
cli
xor
gs
out
mov
ret
xchg
jne
and
mov
fimull
arpl
jns
idivb
imul
adc
mov
cld
mov
into
xor
in
xchg
pop
cli
jne
push
ljmp
mov
xchg
movntq
jp
push
push
hlt
xor
scas
sub
ja
sub
pop
lods
inc
ds
jnp
mov
dec
fwait
stos
push
icebp
sub
lahf
popf
lea
sub
movsb
addl
dec
decb
rclb
shl
xchg
outsl
das
inc
mov
or
in
es
popa
sbb
out
hlt
mov
cmpsl
data16
fsubrp
and
je
push
dec
xor
scas
push
push
out
mov
loopne
jne
pop
test
push
int
stos
jb
repnz
cmpsl
imul
fwait
mov
or
idivb
or
push
fdivrl
mov
rcrb
gs
shlb
decb
sbb
pop
loope
popa
ret
mov
or
adc
and
mov
xchg
lock
dec
push
inc
fildl
fists
mov
sbb
adc
lods
out
loope
stc
inc
pop
aam
jnp
sbb
fcoms
xor
push
mov
add
sub
lock
rcrb
or
add
pop
lods
dec
xlat
cs
push
mov
xor
dec
out
inc
jmp
mov
sub
dec
repz
call
pushf
pushf
fwait
mov
sti
add
or
inc
lea
push
inc
xchg
fwait
and
test
out
lea
xchg
test
mov
sbb
add
sahf
sbb
test
jno
jne
pushf
dec
sbb
push
movsb
pop
outsb
loope
jl
mov
mov
movsb
mov
or
adcl
loope
lcall
aad
dec
and
clc
mov
in
mov
pop
es
repz
movhps
xchg
cs
dec
aad
and
mov
js
fwait
pop
cli
pushf
aas
in
ss
push
in
add
hlt
movsl
push
lods
out
xchg
sbb
mov
inc
jle
mov
jbe
out
sub
lods
int
test
sti
movb
rorl
das
xchg
movsb
out
xchg
mov
pop
fistps
lock
call
in
pop
lock
mull
xchg
add
cmpsb
cmp
push
ret
les
cmp
ja
repnz
subb
sbb
cmpsb
push
ja
sub
pop
cmp
fstpl
dec
lods
lret
cli
mov
in
stos
mov
xorl
cmc
dec
xchg
pop
jg
out
movsb
sbb
scas
pop
in
imul
and
inc
add
xchg
pop
ja
jns
cmc
lock
dec
es
xor
pop
mov
shrl
lcall
jg
push
add
pop
popl
mov
jp
divl
jp
aam
bound
mov
cmp
add
aad
nop
pop
lods
lods
jmp
cli
pop
popf
or
or
fmull
add
lods
sbb
bound
into
insl
aam
sbb
lock
leave
or
ljmp
int3
icebp
add
inc
mov
lcall
sahf
scas
cmp
xor
xor
mov
into
cs
add
stos
adc
dec
cmp
rcr
jo
out
add
pop
mov
rorl
aam
push
add
inc
mov
or
movsl
jnp
nop
aad
fsubl
imul
clc
xor
cli
inc
cltd
movsb
cmp
test
cli
pop
ds
lods
cmc
cmp
xchg
cmp
scas
repnz
pop
push
xchg
add
dec
mov
test
and
sub
mov
or
pop
loopne
mov
mov
dec
hlt
xchg
pop
lods
lea
sub
pop
xchg
add
movsb
cltd
arpl
lock
pop
sti
push
rolb
mov
mov
lret
mov
push
and
loop
or
dec
mov
fsubrl
or
sub
or
lahf
in
int3
xchg
mov
push
aad
xlat
fwait
jbe
lods
pusha
push
cmp
dec
lock
or
xlat
dec
inc
test
push
shrb
inc
dec
add
push
xchg
cmc
or
movsl
lods
pop
or
adc
mov
pop
cmp
add
sbb
push
jle
sbbl
push
inc
pusha
ret
ror
push
adc
js
mov
shlb
ljmp
xor
test
mov
xorl
or
fmuls
pop
push
mov
and
mov
ljmp
imul
and
mov
inc
sub
dec
dec
sub
cmp
test
insl
push
adcb
loopne
sbbb
ja
repz
movsb
push
mov
ret
sub
in
sbb
jno
add
call
lahf
in
jb
jge
test
or
sahf
scas
dec
dec
push
ljmp
movsb
fucomip
mov
jg
mov
out
sbb
incb
filds
adc
mov
shll
or
pop
mov
jne
std
and
daa
inc
data16
sbb
xchg
shld
add
pusha
sbb
sub
test
adc
clc
nop
scas
jle
pop
dec
dec
aad
sub
fs
sti
pop
or
push
sbb
add
push
test
lcall
imul
in
mov
mov
jno
or
push
adc
add
sbb
jo
iret
outsl
mov
sub
cmp
je
add
testl
fidivrs
lds
mov
jno
in
add
push
lock
xor
push
adc
fimull
xchg
cmpsb
shlb
mov
add
test
pop
out
movsl
and
xor
cmc
xchg
test
lods
mov
sti
lods
gs
fmul
je
xchg
push
fistps
fnop
pop
mov
cmp
pop
sub
push
dec
popf
mov
mov
ja
shrb
sbb
das
inc
xchg
xlat
fisubrl
jne
imul
push
fnstsw
loopne
push
cmp
aaa
xlat
in
add
lds
cmp
cli
or
push
jmp
fcoml
cmp
adc
jle
push
add
sahf
cmc
xchg
and
mov
rol
icebp
or
jnp
jnp
cmc
and
cli
mov
jge
xchg
or
lcall
adc
xchg
sub
stc
and
dec
loopne
pop
mov
lret
mov
out
inc
inc
test
pop
daa
clc
sarl
ljmp
pop
icebp
rcl
data16
inc
jae
pop
xor
out
mov
addr16
sbb
data16
push
lods
aam
or
std
cmp
pop
jbe
push
les
ret
outsb
cld
aad
cs
clc
andb
inc
mov
push
mov
and
ret
push
lahf
pop
mov
shr
mov
pop
hlt
leave
outsl
dec
sub
icebp
outsl
mov
cmp
ss
dec
fwait
js
mov
mov
xlat
lret
cmpsb
test
lcall
in
sub
out
scas
lahf
push
or
add
andb
pop
sti
lahf
subl
adc
iret
jmp
mov
int3
sbb
fs
pushf
adcl
dec
cltd
xchg
push
xchg
mov
mov
cmpsl
cs
cld
mov
fadds
mov
adc
ja
jne
push
mov
repnz
repz
mov
jo
lret
cmp
mov
lret
cld
rol
and
inc
sbb
bound
add
inc
mov
sub
int
or
das
sbb
in
rclb
pop
lds
filds
pop
rcr
cli
fldl2t
xor
pop
mov
inc
pop
lods
int3
or
sti
stc
pop
fwait
inc
notb
push
xchg
mov
adc
pop
cmp
sbb
ret
mov
iret
mov
adc
push
outsl
mov
shll
shll
or
cwtl
test
push
fdivl
adc
push
pop
addr16
xchg
xchg
xor
inc
mov
cld
cmp
bound
adcb
cmp
enter
mov
push
insl
rol
into
mov
rcr
dec
pop
cmp
cmp
cs
test
insb
clc
fidivrs
daa
jl
movsb
out
push
mov
cmp
cs
in
movsl
sbb
mov
xchg
call
cltd
je
pop
push
sbb
adc
repnz
aam
lds
icebp
fiadds
in
fisubrl
cmp
dec
dec
sbb
lock
fwait
adc
mov
sbb
mov
sarl
cmp
inc
xchg
sub
aad
push
jne
xchg
out
mov
jge
ret
lahf
xor
xor
and
or
pop
int3
or
movsl
xor
iret
jmp
lcall
out
mov
call
jb
push
in
push
popa
jl
mov
jg
lods
testl
addl
pop
push
mov
in
movsl
shlb
cltd
jb
lret
jb
mov
xchg
push
jmp
adc
jmp
inc
or
push
pop
gs
inc
jl
jge
arpl
sti
in
add
popa
pop
mov
es
pusha
notl
add
xor
cmp
jne
mov
outsl
mov
rolb
mov
pop
shll
jge
cmpb
and
mov
mov
or
ljmp
shrl
cmpsl
cmpsb
popa
jb
test
jb
inc
lret
jp
pop
jmp
adc
pop
sbb
mov
jno
cmp
imul
sub
mov
xchg
cli
and
pop
xorl
pusha
pop
push
jns
js,pn
test
push
pushf
pop
pop
xchg
les
js
stc
daa
inc
mov
push
and
cmp
mov
hlt
lret
adcl
sub
jnp
dec
movsb
je
out
out
int3
and
sub
push
in
adc
xor
filds
xchg
cmp
push
mov
aas
insb
stos
es
aad
mov
mov
xor
decl
clc
mov
jnp
iret
shr
pushw
mov
jp
movsb
test
mov
add
xchg
ficomps
icebp
mov
popa
stc
idivl
mov
in
push
loop
cmpsw
xchg
movsl
inc
dec
jae
xchg
gs
xchg
cmp
lcall
or
popf
scas
jno
bound
jns
and
inc
and
sub
inc
fsts
inc
push
jle
push
mov
lret
shlb
inc
aaa
sahf
loop
movsb
fstpl
pop
cltd
xchg
add
mov
pushl
mov
push
cmp
stc
adc
adc
clc
cmp
repnz
int
jg
jg
mov
and
xchg
fwait
or
clc
pusha
cmp
xor
cmp
leave
jle
and
mov
orl
add
xchg
add
fwait
pop
gs
mov
or
xchg
sub
mov
push
cmovb
clc
pop
xor
inc
sbb
mov
xchg
push
and
cmp
out
or
or
data16
push
xchg
jmp
add
outsb
cli
and
mov
stos
mov
test
in
jmp
nop
lcall
xchg
pop
add
clc
add
das
dec
and
mov
mov
xorb
iret
leave
ret
pop
bound
iret
jnp
pop
xor
clc
mov
pop
das
les
push
shrl
mov
cmp
mov
in
loop
push
clc
idivb
scas
jo
mov
std
subb
insl
mov
pop
and
pop
push
adc
in
mov
test
data16
jecxz
push
sub
ja
out
xchg
pusha
or
mov
xchg
sub
adc
pusha
shll
es
adc
stos
inc
mov
repnz
jb
rcrb
data16
xchg
rcpps
pop
test
in
stc
in
lcall
jno
cli
es
ss
movsb
push
fidivs
push
fdiv
xchg
cli
es
movsb
adc
repz
out
aas
add
clc
dec
pop
fidivl
movsb
aaa
imul
mov
cli
js
sbb
pusha
push
adc
inc
sub
and
xor
into
fistps
xor
cwtl
add
ja
fstpt
loope
push
mov
sbb
test
cmp
fistl
aas
jp
jmp
xor
scas
push
jecxz
mov
lods
pop
jb
enter
or
ja
jp
ret
mov
loop
xor
push
aaa
fwait
lret
cmp
aam
scas
daa
and
mov
clc
jl
loope
clc
gs
or
adc
andb
ja
push
loop
iret
push
cmp
rcl
rcrl
jns
test
dec
cltd
movsl
movsb
mov
sahf
mov
scas
sbb
cld
push
cltd
stos
add
stos
mov
mov
subb
cli
into
gs
lcall
jnp
xor
ds
sub
inc
out
out
and
cmpsb
aam
xchg
push
inc
mov
jns
ficompl
add
das
fwait
sub
in
push
xchg
mov
or
inc
ficoms
lods
jmp
outsb
xchg
shll
nop
daa
aaa
cmp
xor
mov
or
cli
xchg
insl
rcll
in
into
das
xchg
mov
add
je
adc
test
dec
gs
in
jns
sub
mov
cli
out
xor
fnstenv
icebp
cmp
xchg
cwtl
mov
cmp
push
jo
dec
mov
push
sub
int
add
jg
popa
lods
xchg
mov
sub
cmp
mov
adc
bound
leave
and
adc
js
mov
cmp
fucomp
add
mov
add
cli
cmp
jge
stc
cmpsb
add
pop
rcll
add
cmp
xchg
push
inc
out
push
mov
xor
xor
aam
rorb
or
fistps
addr16
add
jae
pop
inc
or
ret
mov
adc
mov
cmp
cmc
dec
into
mov
pushf
cli
push
ljmp
scas
clc
sahf
fdivrs
pop
fisttps
fists
xchg
mov
xor
jge
inc
jnp
decb
fcomip
rorl
fwait
push
mov
gs
mov
js
sbb
xchg
cmp
push
xchg
adc
xor
cmp
xchg
jmp
test
fucomp
popf
addr16
push
cld
cmp
out
popf
sbb
jb
xchg
stos
add
repnz
mov
lret
icebp
inc
cmpsl
push
mov
dec
pop
ret
aam
xchg
mov
mov
fdivrl
xchg
sub
sahf
jae
mov
lds
sub
aas
cltd
xor
dec
fisubl
mov
pop
sti
loopne
adc
fists
stos
shlb
stos
adcl
lret
cmc
adc
dec
inc
xor
arpl
xchg
daa
popl
aad
xchg
outsb
mov
sub
mov
rcrl
xlat
pop
jmp
xor
adc
pop
sbbl
lea
mov
xor
dec
sbb
js
inc
xlat
in
sbb
xor
idivb
bound
popf
inc
aas
dec
popa
mov
mov
mov
jno
sbb
int3
psadbw
mov
inc
xlat
and
test
js
cli
or
push
mov
dec
insb
xchg
mov
sbb
or
fidivrl
or
dec
adc
mov
arpl
pop
sub
cli
mov
add
into
fwait
pushf
xor
outsb
leave
mov
aaa
outsb
aaa
stos
dec
jmp
adc
lahf
pop
shlb
shl
lret
push
lods
inc
das
or
fdivrp
xchg
nop
add
lock
leave
sbb
lcall
mov
xchg
aad
jmp
inc
ret
das
cmp
pop
cld
lcall
cwtl
nop
loop
in
or
cwtl
das
repnz
push
xchg
dec
and
jo
mov
repz
add
mov
xchg
push
cwtl
xchg
add
add
sub
xchg
testb
decb
dec
mov
fwait
sub
inc
inc
pusha
movsb
loopne
in
int
jns
xor
sbb
rcrb
sub
sbb
nop
inc
inc
pop
divl
mov
adc
or
mov
xchg
inc
add
add
cmp
sbb
cmp
pop
lods
push
negb
adcl
jo
jae
push
inc
arpl
jbe
dec
dec
hlt
test
je
xchg
cmp
or
subb
xchg
push
fsts
insl
sarl
lods
cmp
les
dec
xlat
cmp
pop
jecxz
outsl
lock
arpl
mov
lds
es
jbe
pushf
and
fldenv
outsl
push
aam
fstpt
jo
loop
das
cmp
jle
pop
mov
mov
int
push
sbbb
mov
call
xchg
int
or
mov
mov
cmp
adc
and
rcrl
sahf
fdivl
and
pop
push
outsb
pop
stos
fsubrp
shl
mov
cltd
or
sbbb
outsl
lods
mov
div
fnstsw
rclb
outsl
push
cli
xchg
xor
push
call
popf
sub
inc
fisttpl
fiaddl
push
xor
pop
mov
lahf
sahf
push
inc
test
fistl
lods
xchg
xchg
mov
mov
and
and
and
fcoms
xchg
and
pushf
stos
jo
sub
test
outsb
ss
mov
fstl
push
jecxz
cli
pop
mov
jbe
jg
bnd
sbb
inc
xlat
outsl
inc
pop
cwtl
cmp
mov
mov
fwait
jo
push
sub
pusha
jg
movsl
mov
iret
mov
ss
test
inc
stos
negl
jmp
and
push
mov
jno
fdiv
fcomps
scas
mov
cmp
cld
sbb
push
rcl
xchg
sbb
mov
jbe
add
dec
add
in
aaa
icebp
mov
flds
jg
int
jbe
mov
inc
and
repz
push
and
mov
pop
mov
adc
ljmp
cltd
std
inc
ficompl
add
std
or
int3
sahf
outsl
rolb
mov
xor
daa
jns
les
xchg
push
lods
inc
xor
sbb
rorb
shrb
cs
nop
clc
out
lock
test
cmp
push
aas
imul
cmc
enter
ja
clc
push
inc
fistps
jmp
inc
mov
imul
adc
push
add
push
adcl
sbb
or
pop
stc
ljmp
push
inc
xchg
xchg
mov
xor
mov
je
push
daa
jne
add
icebp
adc
rcrb
andb
shl
ret
fcomps
add
dec
jp
out
adc
add
outsb
cmp
fnstcw
pop
into
cmp
cs
inc
xchg
outsl
inc
pop
repz
mov
fwait
inc
bswap
enter
sub
mov
ljmp
jmp
sub
fstps
cld
push
sti
mov
pop
hlt
nop
dec
pop
repz
jnp
test
xor
mov
xlat
js
popa
iret
insb
xor
mov
jmp
add
xlat
icebp
adc
mov
lcall
lcall
test
sub
mov
popa
pop
add
push
pop
add
cmp
data16
inc
frstor
insb
int
daa
jp
push
sbb
into
leave
add
xchg
jne
mov
xlat
scas
dec
fs
lcall
stc
jb
cmp
mov
mov
cld
aad
cmpsb
jp
and
out
shll
fucomip
push
push
inc
outsb
and
inc
lods
je
xchg
pop
jb
clc
sub
pop
mov
loopne
in
sub
sar
shr
jb
and
adc
adc
cmpsl
inc
mov
loope
subl
sub
mov
add
or
es
call
sar
hlt
add
mov
pop
mov
jns
or
or
mov
in
dec
stos
or
lock
push
movsl
loop
inc
gs
jle
lcall
dec
insb
xchg
repnz
cmp
jle
sbbb
jb
dec
xchg
pop
jl
or
push
xchg
add
dec
lods
outsl
cmc
add
lea
or
sti
push
or
mov
or
lret
lods
sub
mov
add
aad
sub
add
cmp
lcall
lcall
mov
xor
arpl
mov
mov
add
mov
mov
ja
fildl
push
add
jne
aad
out
add
fs
inc
xchg
mov
xor
jle
movsb
xor
popf
xor
push
sub
in
icebp
push
testl
popf
or
test
xchg
mov
push
jno
mov
jmp
loopne
add
mov
mov
xor
sarl
pop
hlt
cmc
inc
inc
daa
push
mov
fcoms
pop
movsb
inc
rcrl
push
xchg
lock
adc
add
lods
bound
dec
mov
and
dec
outsb
mov
or
pop
jmp
or
lret
jge
andl
dec
loope
xchg
cmp
push
jb
sub
int
mov
test
add
jbe
sbb
push
subb
push
nop
mov
jbe
popa
jp
mov
in
push
xor
sub
push
ret
pop
inc
icebp
fucomp
inc
sub
aas
sti
ret
cwtl
das
dec
testl
enter
jae
mov
pop
xor
xor
xchg
jne
notl
fsubl
jge
std
xor
mov
lock
and
pop
fistpll
das
or
ss
imull
jle
or
or
in
xchg
add
imul
scas
add
pop
mov
xchg
or
and
pop
pop
jmp
lods
mov
pop
xor
sbb
cmpsb
cmp
das
and
pop
or
das
add
loop
arpl
jl
rorl
scas
inc
out
push
clc
or
rcll
mov
lea
add
or
lea
sub
sub
lods
cmp
ret
jge
icebp
cwtl
daa
push
push
popf
rolb
mov
int3
pop
mov
push
dec
hlt
rcll
cwtl
and
xchg
sbb
loopne
mov
fnstcw
xchg
test
push
mov
mov
mov
outsb
aam
or
inc
cmp
sbb
push
cmp
cltd
pop
cmpsb
inc
or
sub
test
enter
mov
xchg
sub
jo
in
lods
sbb
mov
mov
fdivr
and
stos
scas
into
jmp
push
testb
and
mov
xchg
insl
sub
mov
jp
in
xchg
pop
jmp
xchg
xchg
movsl
in
lea
add
lods
mov
or
xchg
les
fidivs
cmp
js
push
pusha
mov
sub
inc
pop
mov
mov
cmpsb
and
and
pop
movsl
cwtl
mov
xchg
dec
loop
fmul
inc
push
cmpsb
repz
test
lods
fsubrs
dec
inc
mov
jmp
dec
out
cld
daa
push
or
or
dec
outsl
ficoml
das
mov
push
pop
pop
ds
cli
inc
imul
inc
imul
pop
ss
fdivl
adc
push
add
ds
popa
mov
push
adc
mov
or
out
and
jge
push
int
push
sub
repz
insl
fxch
fdivl
mov
outsb
sub
push
inc
pushf
push
jecxz
outsb
out
jb
mov
dec
or
jmp
mov
jl
lret
aas
lock
test
lods
or
pop
inc
outsl
mov
push
imul
and
cmp
test
ds
ficompl
inc
sbb
jg
mov
cmp
sub
inc
add
bound
push
cmc
xchg
scas
dec
loope
je
dec
mov
mov
dec
push
ret
outsb
mov
sub
cli
int
xor
dec
adc
or
cmpsb
sub
jno
mov
imul
js
ljmp
cmp
jecxz
in
jnp
push
mov
cwtl
or
jle
mov
stc
inc
sbb
cmpsb
cmp
xchg
dec
popl
mov
addr16
push
add
adc
or
xor
jge
movsb
loopne
push
sub
in
and
lods
jecxz
push
adc
test
sub
addr16
and
or
les
cmp
shrl
jmp
mov
popa
cmp
clc
mov
dec
popa
nop
movsl
arpl
hlt
adc
mov
add
movsl
mov
pop
push
pusha
or
or
add
sub
dec
sbb
imul
push
out
ret
pop
inc
mov
in
lds
push
dec
pop
cmp
pop
or
sub
dec
mov
or
cmp
add
loop
int3
dec
int3
sbb
push
xor
inc
xchg
imul
and
in
cmp
aam
add
sub
ret
loop
jl
ret
sub
cmc
rcr
push
jns
ljmp
push
in
or
mov
dec
sub
and
pop
xor
addr16
and
inc
jp
stc
cmp
jle
xchg
add
jnp
and
mov
add
jge
test
cmp
nop
out
dec
adc
imul
mov
and
add
cmp
sarb
orb
mov
int3
es
mov
mov
jmp
cmpsl
aam
fcmovnb
dec
iret
xor
mov
mov
lcall
inc
mov
imul
cmp
sbb
je
out
fisttpll
iret
jecxz
fdivs
cld
and
mov
xor
insl
sub
xchg
xor
enter
data16
jecxz
xor
ljmp
and
test
lcall
in
xor
stos
in
bound
mov
imul
sbbl
mov
data16
xchg
sbb
push
int3
int3
lcall
mov
adc
mov
pop
jmp
or
fdivs
in
aas
fstps
shrb
jle
mov
loope
jb
lea
lahf
xor
sahf
or
mov
das
inc
stc
cmpsb
test
test
jbe
test
mov
xchg
pop
pop
sub
outsb
jp
in
jb
fsubrl
or
fldcw
push
dec
xor
push
cld
in
std
xor
pop
or
inc
in
scas
in
loope
call
or
lods
in
xchg
push
call
dec
mov
or
fwait
test
add
outsl
jle
mov
dec
adc
cmp
icebp
insb
mov
fs
jge
xchg
pop
sbb
inc
testb
xchg
xchg
insb
dec
add
mov
add
fucomp
icebp
out
jg
cmpsl
mov
or
arpl
clc
sbbb
int3
xor
mov
enter
adc
dec
pop
pop
and
or
push
pop
sub
lahf
xor
enter
mov
dec
sub
sub
ljmp
mulb
inc
cwtl
pop
mov
or
das
pop
imul
mov
mov
mov
scas
sbbb
aaa
pop
add
push
and
xor
sub
cmp
inc
test
inc
ret
test
pop
jbe
out
in
xchg
lret
outsl
icebp
loopne
scas
mov
mov
into
cwtl
pop
sbb
dec
inc
test
ds
jge
shl
cmp
mov
into
scas
dec
cld
mov
and
pop
cmp
test
cmp
aas
xlat
pop
dec
pop
mov
mov
hlt
and
push
stc
adc
test
jae
mov
mov
cmc
pop
cmp
fldenv
cmpl
rcl
inc
imul
mov
adc
sbb
fstps
inc
mov
fwait
mov
inc
inc
gs
jne
xchg
xchg
lahf
test
jb
arpl
pop
mov
test
or
aaa
xor
in
inc
pop
add
xchg
out
dec
lock
sub
jp
add
mov
push
dec
ljmp
inc
jmp
std
jle
xlat
inc
sar
mov
out
push
mov
ljmp
push
ret
sub
xchg
inc
pop
into
mov
add
inc
mov
cld
add
mov
mov
inc
roll
out
fistpl
mov
sub
ret
xchg
bound
fucompp
orb
and
nop
fs
inc
and
jnp
loop
scas
lods
sti
jbe
mov
dec
pop
icebp
jle
sbb
ds
lahf
push
adc
cld
xor
push
imul
decb
mov
pop
shr
lea
test
xor
ss
pop
cmp
pop
hlt
gs
clc
xchg
dec
mov
fdivp
xlat
popf
lods
mov
or
cmp
mov
shlb
jge
sub
rep
jge
sbb
dec
mov
insl
push
cwtl
stos
mov
sub
inc
pop
clc
adc
out
cmp
cwtl
pop
in
out
xlat
insl
icebp
in
jg
mov
nopl
sub
rcrb
dec
and
sub
add
scas
dec
add
jne
sbb
mov
push
nop
fstps
cmc
jmp
inc
shl
repz
stos
hlt
cs
out
jno
adc
and
mov
or
das
ds
sub
xor
dec
scas
popa
sub
stos
sbb
cs
addb
aas
cli
and
je
xchg
out
push
lcall
int
mov
push
mov
or
outsb
cmp
lahf
dec
pushf
add
testb
jno
xlat
mov
cmovne
std
mov
xchg
movsl
pop
cwtl
out
or
push
pusha
adcb
cli
sub
jb
ret
hlt
out
call
sbb
mov
rcrl
testb
cmp
pop
sbb
xlat
add
jnp
test
cmp
jg
and
test
je
sub
ficompl
push
mov
dec
paddsb
pop
sbb
or
out
ret
jb
js
arpl
pushf
les
loopne
cld
fisttpll
sbb
sbb
jb
jmp
scas
in
lea
movsb
je
or
mov
ret
adc
sbb
jp
cltd
jnp
xlat
mov
push
push
cmp
xor
sub
inc
fstpt
mov
cmp
aam
ret
fdivl
jbe
xorl
call
xor
stos
push
fnstsw
imul
hlt
or
push
pop
xor
dec
mov
or
cmc
and
js
orb
jns
mov
lret
xchg
sub
ret
in
hlt
into
dec
ljmp
sar
pop
and
mov
cld
movsb
stos
push
pop
fxch
jbe
jge
outsb
test
dec
inc
jg
in
movsb
dec
rorb
test
xchg
and
xor
pop
cmpsb
mov
int3
cmp
sti
add
in
cltd
dec
jecxz
push
call
dec
stos
repnz
fsubrl
ja
aad
lods
mov
call
dec
lods
xor
jbe
jne
or
pop
stos
inc
fnstenv
dec
daa
mov
mov
mov
rclb
dec
and
jg
adc
icebp
rclb
xlat
add
data16
xor
jecxz
sbb
mov
aaa
fs
add
loope
ss
xor
pop
xorb
inc
sbb
aam
fisubs
dec
pop
add
repnz
mov
dec
repz
jecxz
sbb
and
mov
ljmp
sahf
mov
lea
adc
pop
dec
and
repz
outsb
pop
mov
pop
clc
and
pop
mov
fucom
jns
inc
mov
jg
int3
pushf
pop
ds
sbb
lret
lock
adc
inc
xchg
sub
jbe
xor
ret
scas
leave
push
imul
lods
xor
xchg
jmp
pop
jae
push
and
jl
mov
cmc
inc
negb
daa
data16
pop
test
addl
cmp
out
pop
lahf
and
incb
ljmp
dec
mov
fiaddl
sbb
mov
loopne
mov
adc
cmpsb
inc
sarl
pop
mov
dec
adc
push
jo
insb
cmpsb
and
arpl
cltd
js
imul
dec
call
leave
add
aam
inc
je
mov
sbb
push
dec
stos
aaa
fsubr
push
xchg
das
cmp
cmp
push
popf
mov
and
lret
dec
shl
mov
mov
ljmp
ja
mov
inc
dec
cmpl
aad
jo
scas
pushf
xchg
roll
add
ds
movsl
mov
xchg
incb
aad
and
xchg
push
into
lret
sahf
sbb
mov
jo
pop
inc
cmp
outsl
dec
shll
add
jg
cwtl
or
int
inc
mulb
inc
es
cld
adc
ss
imul
or
ss
mov
test
push
mov
mov
popf
fistps
pop
cmpsl
mov
out
insl
mov
fstl
scas
imul
fsubs
mov
in
stos
sub
inc
pop
iret
sbb
jle
jge
mov
stc
push
call
fdivs
mov
sbb
in
sub
sbbl
test
mov
aad
jmp
push
pop
xor
shlb
mov
leave
fisttpl
or
loopne
sub
sti
xor
ss
pop
ret
pop
jne
xor
and
mov
ds
sub
sub
mov
jmp
repz
mov
leave
inc
mov
adc
in
ret
xlat
push
inc
sbb
jg
mov
cli
push
dec
cmp
xor
inc
sbb
jge
dec
scas
and
scas
rcl
insb
scas
js
fsubs
jbe
cmc
addb
mov
xchg
mov
rcrb
je
inc
std
enter
rcrb
mov
mov
test
and
xor
int3
icebp
xor
out
pop
cmp
rorb
jmp
test
add
mov
jp
add
aam
stos
add
push
inc
xchg
out
int3
fxtract
dec
dec
loop
sbb
ret
cmp
sbb
rcl
inc
jo
jecxz
mov
out
and
or
mov
xchg
add
into
cwtl
pop
lret
pop
daa
imul
loopne
lahf
ss
call
push
lds
and
in
lods
xchg
inc
mov
movsl
outsl
dec
cmpsb
ja
mov
or
mov
mov
cmpsl
fwait
push
push
adc
cmc
and
xor
daa
outsl
inc
inc
pusha
and
into
pop
push
inc
bound
add
cld
xlat
gs
jb
decb
xor
test
xor
xlat
jne
aad
inc
bnd
add
lcall
loope
scas
int3
mov
fisubs
jp
push
cbtw
std
ret
push
outsb
push
in
pop
mov
jecxz
in
mov
jne
enter
and
add
sbb
hlt
mov
xor
cmc
pop
dec
dec
lds
dec
pop
push
cmp
inc
cmc
add
mov
cwtl
pusha
out
rclb
mov
fldl
subb
add
add
sbb
iret
in
push
test
gs
inc
jnp
inc
out
cmpsb
inc
adc
and
mov
out
lret
scas
cmp
jno
fstpt
dec
fucom
dec
sub
test
loopne
mov
push
fbstp
push
pop
cmp
ror
insl
pop
outsl
push
mov
fisubrl
adc
in
or
mov
stos
add
xor
xchg
shlb
jnp
stos
notl
pop
out
jne
xlat
mov
pop
dec
sti
outsb
scas
out
aaa
das
jle
push
repz
mov
idivl
and
lcall
in
push
mov
ret
pop
mov
sub
das
popf
jl
pop
call
pop
shr
iret
and
lret
sbb
add
loop,pn
inc
dec
es
dec
loopne
aaa
lret
jecxz
in
fwait
dec
iret
out
add
aaa
mov
cmpsb
jmp
lock
movsb
testl
mov
inc
pop
incb
in
sub
add
or
movb
into
hlt
lret
jl
dec
sbb
mov
imul
lea
mov
mov
cli
xor
movsl
push
dec
cs
add
and
sbb
mov
aaa
mov
das
addr16
jp
jp
loop
mov
or
or
fpatan
hlt
out
nop
stos
sbb
add
imul
icebp
jae
adc
loope
cmp
fnstenv
push
imul
jl
dec
fnstcw
add
int3
adc
shrb
jnp
int
mov
mov
fs
cmc
pushf
out
cmpsl
jl
add
cwtl
pop
jecxz
push
orb
insl
cmp
push
nop
pop
jecxz
jbe
in
mov
xchg
mov
xchg
and
mov
xor
js
xchg
mov
aam
add
inc
icebp
and
cwtl
cld
jbe
repnz
xor
hlt
xchg
add
testb
stos
inc
popa
xor
pop
jne
xor
ss
push
push
jae
mov
bound
cltd
fidivrl
mov
adc
fwait
aaa
inc
sarl
and
and
int3
mov
bound
iret
inc
xchg
dec
call
fsubr
lahf
fcmove
xlat
xor
mov
cmp
scas
and
insb
push
insl
pushf
adc
repz
adc
nop
ror
outsl
nop
pushf
cli
mov
dec
mov
push
pop
mov
imul
pushf
pop
push
test
data16
pop
add
shl
and
cwtl
xchg
add
pop
or
cmp
cmp
test
jp
sub
xlat
adc
dec
cmp
out
mov
pop
adc
iret
lods
inc
stc
xor
int3
fdiv
cmp
sti
in
and
ret
inc
jbe
cld
in
out
lret
xor
cwtl
stos
cmp
push
repnz
adc
add
jns
sbb
stos
adc
cmp
clc
lcall
stos
cmp
mov
les
lea
ret
inc
pop
leave
ss
jp
pusha
movsb
test
lds
xchg
add
and
push
stos
fistpl
jno
or
mov
mov
test
icebp
lret
mov
xor
mov
and
jne
pushf
lret
mov
dec
out
imul
jns
xchg
leave
sub
push
ja
xchg
xor
sbb
aam
data16
cmp
sbb
push
in
jb
or
arpl
out
inc
pusha
adc
jecxz
orl
push
jne
fisubs
ror
fbld
or
sbb
sbb
inc
fsubrl
out
scas
mov
arpl
cmp
add
jle
mov
ficomps
test
andb
mov
xor
ret
mov
test
xor
and
mov
ljmp
mov
adc
inc
lea
mov
cmpsb
bound
mov
stc
cmp
jmp
out
cld
pusha
jge
jle
pop
mov
aad
pop
push
jno
xchg
cltd
xor
das
xchg
imul
or
xchg
sub
pop
fnsave
scas
sahf
rcr
cld
xchg
sbb
fsubl
cmp
outsb
insl
mov
xchg
mov
mov
ficoml
stos
or
stos
push
pop
in
and
mov
adc
adc
push
jmp
inc
xchg
jo
ret
jmp
mov
mov
or
push
stc
shr
sti
mov
iret
pop
stos
in
inc
jbe
jne
repz
fwait
pop
xchg
fstps
imul
xor
mov
aad
stos
push
jmp
test
inc
in
push
ds
ss
xlat
out
jecxz
lods
or
cmp
xor
fwait
or
or
and
xchg
jl
pop
scas
mov
xor
rcrl
sub
js
in
movsb
and
inc
sub
rcrl
dec
inc
mov
inc
fcoml
mov
sub
and
cmp
push
scas
fwait
jns
pop
fbstp
pop
aas
rcrb
mov
pop
cmp
inc
aas
pop
bound
loopne
test
jmp
cmpsl
and
and
pop
mov
mov
sarl
cmp
out
adc
stos
dec
lods
cmp
sbb
leave
fstps
mov
mov
outsl
sub
loop
ret
aas
inc
and
or
pop
pop
ljmp
mov
xor
es
push
dec
inc
or
inc
aam
leave
pusha
test
je
movsl
inc
sub
fs
xchg
jae
movsb
cmp
adc
out
cmp
scas
test
loopne
mov
pop
xor
in
sub
dec
into
gs
fucomp
mov
aas
scas
cld
xchg
adc
pop
ret
jne
sbb
adc
imul
cmp
xor
lcall
push
test
subb
jecxz
jnp
mov
adc
ret
aad
xor
dec
pop
push
add
add
mov
rclb
push
mov
adc
outsl
sub
mov
mov
push
add
cli
stc
ljmp
sbb
xchg
in
insl
pop
mov
inc
dec
lsl
test
dec
and
popl
lock
inc
in
mov
push
stos
or
inc
movsl
jne
loope
dec
popf
sub
adc
mov
in
pop
mov
push
add
stc
xchg
sti
cmpsl
cltd
das
inc
lret
or
dec
fisttps
or
cmp
jge
cmp
mov
sub
cmp
add
mov
push
imul
stos
xor
jp
xor
and
imul
cmpsl
cmp
imul
ss
inc
adc
sahf
test
ficoml
mov
insl
jge
sbb
js
mov
mov
sub
aam
ret
dec
mov
pop
cmp
aad
xchg
mov
ret
lock
cmp
insl
jne
xchg
push
mov
in
add
dec
dec
cs
in
inc
mov
pop
lret
fdivl
cltd
movsl
jae
loop
inc
aad
cmp
nop
xchg
in
lea
call
adc
js
xor
inc
cmpsl
add
xchg
push
xor
jge
insb
ret
and
outsb
sub
ss
mov
leave
pop
push
pop
nop
jnp
addr16
inc
cli
clc
sub
sub
xchg
call
mov
mov
mov
movsl
notl
pop
mov
pop
xchg
clc
outsb
sarb
and
push
pop
mov
cwtl
cmc
stos
adc
int
dec
lds
fsubl
negl
adc
xchg
cld
push
xor
or
mov
cmp
fiadds
insb
outsb
test
push
movups
cmpb
pop
std
jle
inc
repz
sbb
jo
shr
dec
push
cmp
loopne
push
outsb
test
shr
xchg
icebp
pop
inc
mov
sub
notb
test
xor
enter
pusha
adc
out
mov
stc
fimull
or
or
lea
jne
mov
int
cld
mov
repz
xchg
fldt
add
mov
push
xor
cmp
add
data16
adc
or
xor
sub
mov
orl
adc
ljmp
fwait
jg
sbb
push
cmp
sub
cld
add
clc
lret
inc
mov
ror
mov
mov
fcmove
jae
stc
jns
sbb
mov
loopne
movsl
out
push
cwtl
and
mov
dec
cmpsl
adc
js
addl
mov
notl
sbbb
cmp
cmpsb
mov
push
cmp
outsb
fsubl
je
and
sub
sti
into
cld
aad
lret
and
mov
ret
jp
mov
out
popf
push
sti
movsb
add
push
repnz
mov
rolb
xor
dec
aam
add
cmpsb
pop
inc
add
daa
mov
or
xchg
mov
std
sbb
int
shr
xchg
push
xor
popa
arpl
pop
lret
and
push
out
add
ret
stos
in
mov
lock
add
imul
lds
and
adc
mov
dec
loope
mov
sbb
imul
outsl
lret
sub
mov
mov
popa
push
rcrb
jnp
into
movsb
cmp
add
mov
push
fsts
jno
lahf
mov
seta
nop
adc
jge
mov
js
js
mov
jp
and
push
jecxz
dec
dec
in
pushf
sub
pop
sub
movsb
hlt
mov
lcall
out
pushf
je
or
aas
sub
cpuid
ja
xchg
lock
loopne
ja
ret
add
and
push
pop
rorb
jge
cmpsl
cmp
mov
sub
or
ds
xor
push
outsl
shll
inc
fdivrp
test
insb
jle
sub
adc
rol
push
stos
insb
cmp
insl
jmp
arpl
ret
mov
jae
insl
mov
shll
mov
loopne
cmc
pusha
mov
fstpl
enter
jmp
sub
out
xor
xchg
ljmp
adc
cmpsb
push
out
inc
add
and
stc
inc
pop
movsb
mov
gs
mov
push
jb
fcmovb
sbb
mov
mov
pop
rcrl
testb
das
adc
push
add
xor
sub
gs
int3
std
loope
sbbl
cld
dec
jg
nop
xchg
pop
mov
nop
je
or
dec
scas
stos
loope
push
lock
adcl
lcall
mov
cmpsl
pop
lret
adc
jmp
shlb
push
orb
adc
push
mov
insl
shlb
sbb
clc
int3
daa
flds
cmc
inc
divb
jmpw
push
dec
and
pop
sbb
mov
movsb
jmp
mov
jae
cmc
test
mulb
pop
xchg
inc
push
adc
and
jne
popf
hlt
mov
dec
add
jg
xchg
xor
lods
jo
fcompl
loop
cli
pop
icebp
add
sbb
pop
out
or
lcall
xchg
lock
push
int3
sub
rolb
stc
xor
xlat
add
push
inc
jnp
xchg
jae
adc
lea
adc
int3
xchg
dec
movsb
push
in
mov
rclb
fwait
adc
jg
jns
jae
incb
jmp
hlt
mov
pop
inc
out
iret
hlt
fwait
lods
push
sub
out
or
inc
int3
inc
test
lea
push
jmp
push
repz
ljmp
or
bound
mov
mov
pop
int3
fimuls
xlat
lods
add
sbb
dec
test
and
stc
outsb
dec
add
xchg
mov
bound
andb
mov
mov
inc
fldcw
movsl
lahf
cs
leave
pusha
or
mov
stos
sub
xor
movsl
arpl
xlat
mov
and
sbb
jle
loopne
lcall
clc
mov
mov
sarb
rcrb
sub
or
jp
jb
mov
and
gs
in
and
inc
push
mov
dec
dec
ss
inc
or
pop
dec
movsb
leave
loope
sub
lea
mov
adc
or
jae
ja
sti
cmpsl
cmc
cli
cmp
jecxz
cmp
cwtl
loope
in
adcl
jle
shl
fwait
test
pop
cld
jbe
test
rcl
fxch
push
adc
pop
lahf
sti
pushf
lcall
enter
lea
popf
imul
xchg
add
xchg
mov
xchg
sbb
dec
cli
addl
mulb
sub
sarb
lahf
stos
mov
jns
shll
test
loopne
ss
movb
pop
mov
pop
repnz
add
xchg
sbb
jmp
jne
cmp
adc
inc
inc
pop
lds
xchg
mov
mov
in
xor
add
adc
fistpl
fs
add
add
pop
lret
dec
pusha
pmuludq
xchg
mov
ret
jp
clc
or
fcomip
mov
mov
cmc
jge
sarl
outsl
andb
ret
cmp
movsb
jns
fidivl
inc
je
aas
iret
push
enter
jp
das
sbb
outsb
je
pop
pop
bound
mov
dec
test
in
out
add
je
rcrl
stos
jmp
inc
sbb
sbb
pop
xor
cs
xchg
push
add
lret
xchg
sub
and
mov
fwait
movl
stos
cmp
mov
pop
lahf
das
inc
xchg
stc
in
lds
nop
mov
add
add
dec
arpl
or
sbb
subl
xchg
mov
cltd
push
jno
or
test
lahf
iret
dec
int
les
movsb
dec
scas
pusha
xchg
mov
push
nop
jbe
psubq
sbb
jp
sub
sbb
mov
stc
in
add
xchg
sub
xchg
jge
mov
pusha
dec
sbb
jbe
mov
sub
lds
xchg
xchg
hlt
pop
dec
repz
rolb
mov
or
repnz
lcall
xchg
inc
fnstsw
and
mov
dec
and
mov
mov
add
pop
and
and
sub
xor
jae
inc
out
add
xchg
lcall
cmp
outsb
add
shl
or
mov
jg
mov
cmp
add
dec
ret
loopne
cwtl
pop
adc
push
leave
test
add
clc
int
lock
ljmp
inc
cmp
add
xchg
fisttpl
arpl
push
pop
decb
mov
pop
dec
loope
int
es
mov
push
lock
scas
xor
xor
add
push
lock
push
iret
xor
sti
sti
xor
sbb
mov
loop
inc
fmuls
jmp
addr16
and
test
xchg
pop
cmpsl
addr16
pusha
dec
cwtl
arpl
fs
pop
popf
jno
cld
divl
dec
add
fisttps
mov
imul
inc
notl
out
popa
loop
xchg
sbb
test
mov
mov
test
pop
stc
nop
faddp
insb
je
mov
mov
xchg
ret
adc
shlb
out
inc
jb
std
mov
imulb
outsb
push
push
mov
mov
divl
pop
ja
jmp
dec
movb
fdivl
mov
cli
aad
ss
mov
iret
cwtl
mov
xchg
cmp
les
push
inc
xor
jl
nop
inc
pop
jmp
inc
pop
sbb
push
mov
ja
imul
rorb
pop
cwtl
mov
pop
and
adc
add
icebp
sbbl
pop
aam
push
rorb
cmp
mov
out
ds
mov
dec
enter
cmp
xchg
repz
adc
xchg
out
and
push
fcomp
outsl
iret
shrb
gs
sbb
ss
cmp
adc
inc
lcall
dec
ljmp
es
mov
loop
xchg
push
cwtl
scas
xchg
ds
inc
push
in
ja
and
cwtl
jae
push
pop
test
cmp
adc
movsb
hlt
mov
je
je
xchg
sub
mov
xchg
sbb
lock
mov
mov
arpl
mov
aaa
shrl
out
push
sub
jp
in
std
sbb
mov
push
or
divb
je
lods
popa
into
push
loope
sub
sub
sarb
mov
or
or
enter
popa
mov
lods
mov
add
jp
scas
sub
lret
das
fdiv
adc
xor
adc
inc
fs
push
das
adc
iret
mov
mov
shrl
xlat
mov
enter
out
dec
xchg
arpl
inc
dec
lret
push
mov
scas
bound
mov
out
sub
jno
clc
mov
ret
mov
mov
sub
movsl
mov
mov
pop
imul
dec
idivl
les
lea
sub
movsl
daa
cld
push
es
mov
mov
cmp
imul
hlt
sbb
in
js
fwait
jnp
aaa
jne
shlb
pop
int
int
push
hlt
mov
sbb
adc
js
mov
lahf
add
xchg
and
mov
rorb
inc
fdivrl
and
xchg
pop
inc
mov
mov
int3
arpl
pop
inc
lds
lahf
mov
sub
or
dec
pop
outsb
jecxz
mov
nop
fidivl
test
clc
out
arpl
pop
insl
clc
test
xor
test
add
dec
loope
clc
xchg
mov
push
push
mov
sbb
pusha
rcll
jno
aam
mov
stos
sbb
push
scas
js
jbe
out
daa
or
in
iret
and
rorl
dec
mov
mov
adc
mov
mov
adc
insb
inc
ljmp
fs
lret
xchg
sub
mov
add
sbb
bound
xlat
sbb
mov
inc
stos
aad
cmp
or
inc
adc
std
cmp
imul
sahf
xchg
push
add
adc
dec
test
pop
cmp
push
mov
testb
imulb
xlat
outsb
pop
add
sub
clc
mov
negb
xchg
jecxz
mov
inc
jae
jns
ljmp
movsl
lret
xchg
pop
enter
stos
insl
pop
push
or
push
sub
xchg
enter
push
lock
arpl
in
jmp
dec
stos
or
sub
sub
fwait
push
nop
stos
lcall
cwtl
and
sub
out
test
loopne
insl
xchg
fsubrs
bound
mov
jae
dec
mov
sbb
pop
insl
sub
into
pop
sub
push
pop
ret
scas
movsl
jle
das
cmp
mov
xor
cmc
pop
push
shl
jle
jb
mov
lahf
add
dec
and
jae
stos
mov
push
mov
pop
mov
dec
sbbb
test
mov
loope
or
lock
out
imul
imul
jmp
push
or
in
faddl
add
dec
or
lea
push
xchg
sub
or
decb
add
movsl
dec
in
push
mov
shrl
scas
xchg
pop
push
cmp
dec
in
mov
mov
addr16
inc
test
scas
mov
push
insl
iret
mov
and
ret
sbb
push
xchg
std
bound
sub
push
dec
xchg
popf
mov
xchg
in
mov
xchg
neg
pop
fistl
adc
pextrw
dec
fcomip
xor
jb
cwtl
enter
stc
mov
fildll
js
jg
jg
jecxz
lahf
iret
push
cld
or
cmp
dec
ss
dec
and
mov
stos
fstl
or
das
cmp
sub
fwait
sub
dec
and
iret
pop
shll
xor
cs
ds
push
mov
mov
das
ss
xchg
pop
mov
pop
xchg
data16
adc
inc
sbb
outsb
mov
add
test
jmp
xor
insl
scas
inc
sub
xchg
int3
outsb
aaa
xchg
xchg
insl
in
and
mov
test
addb
repnz
cmp
xlat
insl
and
iret
cmpsl
inc
hlt
adc
repnz
and
repnz
imul
inc
rcll
inc
jns
bound
movzwl
inc
mov
insl
jnp
gs
pop
xchg
gs
dec
jne
stc
add
mov
in
push
jns
mov
xorl
jmp
lods
inc
insl
mov
rorb
rcrl
daa
mov
shl
add
mov
out
mov
rcrl
in
mov
add
aas
mov
test
push
inc
jae
cld
pop
in
or
inc
adc
fsubl
mov
cwtl
jmp
pusha
testl
jle
jecxz
sbb
or
test
mov
mov
inc
pusha
imul
testb
mov
out
jnp
les
lods
mov
push
lods
std
or
enter
mov
shll
dec
jg
in
mov
cmp
mov
es
add
loopne
imul
shll
push
out
lret
movsb
icebp
decb
imul
mov
mov
jp
leave
sbb
or
cmp
arpl
add
pop
iret
lret
jp
out
pushf
mov
add
mov
mov
mov
add
mov
or
test
cmp
sub
and
mov
xchg
inc
mov
sub
pop
sub
mov
pop
in
enter
jle
dec
adc
or
or
or
mov
xchg
inc
aad
fsubr
push
xor
or
adc
test
or
jnp
imul
ret
xchg
lock
sub
sub
aad
cmp
test
xchg
sub
cmp
adcb
aas
icebp
pop
mov
cmp
rorl
push
add
out
xor
je
into
sub
pop
testb
jge
es
sbb
sbb
adc
pop
out
xor
in
add
mov
mov
inc
push
add
fmull
mov
add
in
ret
push
je
aaa
cmpsb
add
fnsave
jmp
ret
mov
int3
xor
xchg
outsl
call
stos
and
mov
cli
jle
mov
jmp
mov
mov
push
hlt
in
imul
lret
xor
push
sbb
xchg
mov
pop
mov
imul
jg
loope
sbb
xchg
pop
push
ss
addb
in
je
les
adc
inc
or
push
and
clc
into
mov
outsb
in
fwait
add
addr16
fists
pop
cmpsb
popa
jnp
mov
push
pushf
xchg
adc
and
cmp
shlb
jno
divl
scas
cmpsb
jns
push
ret
pushl
mov
fdivl
out
repnz
in
subl
cmc
cmp
divl
sbb
mov
std
sbb
sub
add
testb
loop
xchg
rolb
cmp
push
ljmp
ja
icebp
or
mov
rcr
mov
stos
inc
movsl
add
fcoms
pop
jae
push
scas
cmp
xchg
xchg
sub
push
inc
xlat
inc
jl
dec
mov
jb
cmp
iret
loope
popa
clc
xchg
ds
xor
cld
xchg
push
push
cltd
xchg
bound
movb
mov
add
lret
sub
imul
xor
fbstp
adc
jno
repz
repz
jmp
and
xor
testl
lods
rcrl
cmp
jns
outsb
jno
mov
int
insb
add
decb
cmpl
into
fadd
dec
adc
repnz
and
loope
addr16
inc
int3
arpl
xchg
and
jbe
sbb
sub
dec
pop
popa
les
sbb
xchg
ss
mov
ja
iret
movsl
mov
pusha
cld
pop
jmp
enter
dec
jb
mov
dec
stos
fidivl
inc
movsb
test
add
and
pop
stc
pop
cmp
cmp
ja
cli
pop
cmp
push
and
out
lock
jge
adc
adc
popa
jno
xchg
dec
lahf
xor
pop
lret
lea
mov
push
repz
cmpb
mov
cmp
movsb
fstp
mov
mov
push
push
aaa
in
ret
sarl
push
and
dec
xlat
int
lds
pop
pop
stos
push
inc
or
daa
sub
sti
push
lret
xor
cmp
sbb
mov
jbe
aad
test
int3
pop
inc
dec
in
ret
or
xchg
sbb
or
daa
inc
pop
mov
jbe
ja
outsl
and
xchg
sbb
mov
add
pop
push
xor
stc
cs
iret
adc
cmp
cmp
mov
pop
insl
mov
pop
out
mov
ret
stos
test
ret
cli
jl
cmp
stos
xchg
stc
push
dec
loopne
lahf
leave
lock
es
sbb
scas
xlat
mov
or
hlt
cmp
pop
fstpl
jns
pop
out
gs
subb
shrl
add
sbb
fcomps
stos
pop
arpl
adc
nop
test
cld
test
adc
roll
xchg
xchg
fucomi
cmp
fldt
lea
or
cmp
mov
repnz
adc
ret
xor
out
xorb
jne
mov
in
pushf
cmpsb
sub
dec
cmp
pop
push
lret
jp
out
test
pushf
bound
jecxz
sbb
push
jno
adc
fsubrl
insb
movsb
cli
fisttpl
in
imul
and
lea
movsb
push
push
mov
nop
pop
xor
lcall
and
aam
sbb
aaa
hlt
xor
jnp
movsb
or
xchg
movsb
dec
push
dec
pop
insb
and
inc
aad
mov
cmp
pop
jmp
pop
push
inc
cmpsb
ja
das
fchs
ja
fidivrs
repnz
pop
dec
rcr
das
pop
shlb
repz
jl
out
xor
sarl
add
mov
cmp
add
cs
ja
xor
imul
loope
mov
push
mulb
leave
sub
cmpsb
lds
xchg
leave
sbb
push
out
sbb
in
insb
out
mov
add
movsl
aad
cli
adc
mov
loop
sub
lret
outsb
inc
sub
fsubl
scas
xchg
xchg
push
ficoms
inc
leave
sbb
add
or
or
es
fdivl
pop
scas
mov
sahf
out
sbbb
add
xor
xor
dec
es
and
dec
xchg
lods
mov
pop
sarl
dec
adc
aam
addr16
ret
fildll
pop
jle
pusha
cmp
lea
cmp
or
sub
mov
int
mov
sbb
inc
mov
in
jnp
pop
shr
add
ja
push
mov
push
loop
fisttpl
iret
push
adc
pop
test
mov
in
fwait
push
sub
xchg
jb
fdivrs
xchg
mov
into
fdivl
cmp
push
xchg
cmpl
nop
push
dec
int3
mov
fildll
adc
xchg
unpcklps
stos
push
mov
cmpsl
sub
inc
push
sub
sub
out
es
mov
nopl
jnp
jle
loope
cmpsb
mov
into
push
adc
mov
mov
push
jl
push
nop
imul
iret
mov
mov
movsb
rol
pop
add
sar
and
mov
sbb
addr16
les
pop
fmul
or
jno
jecxz
xchg
inc
dec
loop
xlat
jmp
int3
orl
jge
jp
mov
je
or
cmp
pop
jmp
fwait
rcrb
jge
insl
mov
pop
ljmp
ffreep
loopne
mov
xor
xchg
and
ja
inc
sbb
mov
sbb
stc
jl
jae
jp
mov
xchg
mov
sahf
in
inc
mov
jp
inc
sbb
jo
call
clc
sahf
sub
insl
adc
jns
insl
lahf
test
mov
leave
pusha
adc
mov
xor
xchg
lods
inc
and
negb
icebp
mov
cltd
jnp
pop
and
adcb
mov
mov
jp
ss
pop
push
fsubs
add
insl
sub
xchg
sbb
repnz
add
inc
xor
add
push
lret
adc
mov
aad
scas
mov
mov
pop
lret
dec
add
jle
and
cmp
int
das
lock
jae
sub
js
sub
and
ret
bound
and
pop
jo
push
nop
xor
adc
jle
add
mov
shrl
leave
sbb
sarl
pop
mov
stos
sub
mov
or
adc
mov
sub
pushf
push
adc
xchg
mov
loope
fs
or
cmp
fmulp
and
testl
inc
cli
push
std
xchg
rcl
cmpsl
test
ds
dec
test
mov
cmc
jae
mov
fmull
adcb
cmp
mov
push
jge
clc
cmp
adc
imul
inc
je
stc
nop
mov
incl
push
pop
or
jl
ror
fdivrs
add
pop
xor
std
out
hlt
dec
xchg
sbb
pop
loop
mov
stos
sub
fsub
int3
shr
jp
bound
inc
ja
in
push
test
pop
leave
add
sub
rorl
cwtl
jne
test
pop
sbb
cmpb
aaa
push
gs
clc
fbstp
mov
cmp
addr16
inc
lea
je
cmp
mov
lret
mulb
jge
push
test
xorb
sbb
and
faddl
aam
jle
inc
fisubl
or
lret
sti
fildll
movsb
jecxz
insb
mov
call
cmp
sahf
xor
inc
cwtl
lds
or
jge
shll
dec
or
mov
xor
jg
shr
mov
in
inc
mov
arpl
inc
aad
mov
stos
and
pop
dec
testb
cmp
sub
loope
fdivrs
xchg
mov
mov
subl
pop
push
arpl
stos
mov
mov
scas
sahf
ss
int
ret
scas
mov
negl
xor
ja
test
fstps
das
jne
inc
stc
mov
push
hlt
gs
sbb
xor
inc
mov
addb
test
adc
adc
cltd
xor
fs
andb
jbe
mov
lret
mov
or
test
add
popa
sbb
or
xor
es
pop
js
dec
xchg
inc
jg
dec
xor
loop
pushf
lods
fwait
mov
push
lret
mov
inc
lods
pusha
add
push
es
shll
xchg
mov
jne
push
pop
sbb
cmpsl
popa
mov
sti
xchg
xchg
or
fisttps
and
pop
call
enter
pop
out
aas
jae
lret
out
jmp
dec
out
in
or
rcrb
lret
pusha
cmp
lret
mov
cmovns
mov
mov
mov
fistpll
aas
cmp
loope
dec
and
lcall
iret
jecxz
je
lods
std
das
test
mov
lods
xchg
sub
cmp
mov
test
ds
aas
test
xchg
movsl
call
or
fdivrl
fsubrl
push
mov
mov
jbe
jp
test
xchg
mov
push
xor
ja
gs
inc
xchg
sti
mov
icebp
ret
insb
xchg
repz
push
cmc
mov
das
mov
gs
rcrb
popf
stc
loope
ds
loope,pn
out
in
cli
push
pop
push
dec
in
call
insb
ret
and
loop
in
dec
test
inc
movsb
repnz
sub
popa
fstpt
and
add
jge
xchg
sahf
or
fsubl
dec
sbb
jb
das
rol
jl
stc
jmp
movsl
popl
ficomps
push
inc
test
sbb
movsl
fnstsw
aas
ja
cmp
and
mov
movsb
je
sbb
out
mov
lea
sub
inc
shl
adc
bound
sub
mov
cmp
leave
rcr
std
xchg
sub
inc
mov
xchg
loopne
inc
xchg
jge
fnstsw
cwtl
xchg
outsb
cmp
bound
adcl
jmp
aad
mov
insl
cmpsb
aaa
pusha
bound
mov
push
cs
popf
cmp
mov
ljmp
fldcw
inc
sbb
fs
lret
in
cld
add
inc
stos
dec
adc
pop
xor
dec
push
sub
pop
call
lock
mov
cli
adc
cmpsl
jne
fldenv
xchg
ret
scas
test
popa
mov
arpl
cmc
lds
xor
ja
push
out
loope
shl
aas
xchg
in
in
mov
imul
push
and
insl
imul
dec
lock
leave
and
xor
push
sbb
call
pop
enter
outsl
imul
dec
icebp
ss
pop
mov
sahf
xor
jns
mov
sbb
loope
sub
leave
aad
pop
cmp
dec
mov
push
rcll
outsb
iret
fiaddl
adc
sub
je
mov
pop
fcomps
sub
iret
xor
test
mov
nop
fldt
test
scas
repz
push
jae
fisubrs
jmp
xor
outsb
mov
fidivl
mov
mov
insb
clc
cmp
stc
mov
sub
mov
mov
lret
enter
cli
aam
sbb
inc
pop
sbb
shlb
pop
je
sub
cmp
jecxz
push
pop
xchg
out
ret
test
push
hlt
dec
aam
sbb
push
and
mov
nop
mov
enter
movsl
dec
jle
jns
adc
push
cmpsl
sbb
pop
jns
fwait
ljmp
loopne
xchg
fs
add
dec
insb
pop
xchg
mov
cmp
xorl
inc
sub
fwait
mov
cmc
je
pop
in
pop
pop
hlt
cmpb
fistpl
jmp
pop
xor
aad
iret
inc
cwtl
cmp
leave
xchg
sbb
js
imul
mov
push
xor
bndstx
cwtl
inc
movzbl
mov
fsubl
mov
testb
inc
movsb
test
xchg
mov
add
push
mov
scas
add
pop
xchg
sub
pop
mov
jp
shrb
or
out
jo
jno
mov
push
mov
mov
mov
lret
fs
push
xchg
push
subb
xor
xor
cmp
scas
inc
mov
cmp
inc
push
int
add
push
outsb
mov
ret
fnsave
pop
stos
mov
add
dec
shlb
mov
pop
data16
lea
adc
loopne
lds
psllq
push
add
shlb
sub
xchg
mov
ss
or
xchg
cmp
lcall
cmpsl
xchg
xchg
test
fisubrl
sub
or
pop
mov
mov
or
sub
pop
mov
and
inc
pop
ret
std
xchg
icebp
fdivrl
stc
jle
in
aas
and
call
or
xchg
jp,pn
push
aas
enter
xchg
cmpsl
ds
ret
fisubl
jb
dec
jmp
add
out
sub
cs
leave
mov
mov
pop
jae
imul
pop
addl
xor
sbb
into
movsl
loopne
fs
sub
adc
mov
aaa
iret
out
stc
mov
inc
add
in
aas
xchg
and
cmp
inc
movsl
inc
test
or
fs
aaa
testb
pop
call
dec
jecxz
pop
sti
xchg
dec
out
lods
repnz
es
clc
jns
js
aaa
mov
cmpsb
jb
add
mov
pop
mov
je
inc
das
lea
add
xlat
xor
ror
outsb
push
ret
inc
xchg
or
dec
jl
iret
xchg
in
ss
enter
jbe
jle
push
nop
adc
mov
out
or
adc
lock
stos
xchg
fsubl
hlt
mov
aad
cmp
dec
cmpsl
mov
shrl
movsb
adc
mulb
add
mov
mov
dec
push
bnd
je
push
pusha
xchg
aad
xchg
jge
idiv
mov
sahf
stc
push
mov
sbb
mov
dec
pop
pop
dec
shll
mov
jp
dec
lods
inc
jo
mov
mov
lods
cli
pop
jmp
mov
sbb
push
pop
test
push
out
mov
shl
mov
cs
xchg
mull
divl
xlat
pop
mov
fisubl
sbb
sub
fisttpll
dec
jne
mov
mov
pop
popf
jbe
jo
mov
xor
mov
mov
into
push
mov
movsb
cld
sub
sahf
lods
lock
pop
xchg
mov
out
cld
sbb
push
xchg
sub
pop
test
jg
xor
push
in
aaa
push
popf
test
mulb
call
or
inc
cmp
repz
stos
add
sbbb
in
icebp
andl
sbb
or
mov
mov
xor
xchg
mov
add
add
xchg
loop
xchg
outsl
pushf
addr16
mov
sbb
mov
call
les
xor
jl
test
arpl
pop
lea
stos
call
mov
adc
jecxz
out
xchg
or
or
dec
adc
pop
dec
stos
jecxz
leave
push
testb
inc
sahf
adc
je
je
mov
les
or
push
jg
pusha
cltd
pop
sbb
mov
ja
lods
lock
lods
ljmp
xchg
mov
mov
cmp
dec
rorb
inc
cmpsb
cmp
movsl
adc
push
mov
mov
mov
ljmp
out
aaa
sbb
fwait
aam
mov
cmpsb
ss
dec
sbbl
loopne
sub
fadd
loope
ja
shlb
nop
jo
cmpsb
inc
insl
sub
dec
xlat
lcall
and
movsl
shrb
insl
mov
sahf
jne
rolb
xchg
mov
xchg
jge
dec
lock
sarl
pop
out
pop
pop
fnstsw
out
nop
add
pop
or
repz
js
dec
scas
ss
mov
lret
mov
sahf
test
repz
mov
or
pop
shrb
scas
xchg
ret
test
mov
lds
pop
mov
sahf
scas
icebp
push
pop
xor
ss
out
add
sub
sub
and
and
icebp
adc
xchg
daa
inc
add
ss
mov
push
dec
inc
jg
cmp
adc
in
sbb
mov
inc
cmp
cmc
jecxz
fnstsw
xor
test
mov
aas
jae
lods
jge
int
or
repz
or
filds
scas
fwait
inc
mov
testb
arpl
xchg
popf
data16
lret
je
pop
cmpsb
in
jg
push
fsubs
and
sub
loope
jecxz
enter
push
int
inc
repz
jns
mov
sub
rorb
into
xor
or
xchg
pusha
push
fidivrl
or
jmp
mov
adc
gs
mov
lcall
fsubrs
cmpsl
je
pmaddwd
mov
in
pop
cs
push
xchg
xchg
lock
add
fisubrl
je
jp
push
popa
out
sti
lea
in
pop
ds
push
jns
out
scas
inc
outsl
push
ja
xor
and
mov
pop
or
jge
jnp
cmp
add
adc
sbb
jmp
mov
jmp
pop
fcomip
js
cmp
js
or
fcoml
hlt
arpl
stos
test
lahf
cmpsl
adc
mov
sub
cltd
push
add
lret
popa
or
push
xchg
sub
pop
jecxz
fsubs
sub
xor
xor
daa
mov
mov
mov
shr
gs
insb
popa
mov
sahf
popf
mov
inc
insl
jae
jb
pop
out
mov
js
hlt
cmp
push
insb
jnp
inc
xor
sbb
mov
aaa
into
inc
add
push
hlt
mov
jg
push
mov
and
inc
xchg
xlat
data16
movsl
pop
pop
nop
in
jae
stc
into
iret
sti
stc
pop
and
inc
in
jp
adc
sub
fcmovnu
dec
xchg
mov
std
ja
movsl
xchg
addr16
add
jno
andl
or
negl
out
js
sbb
cwtl
dec
mov
pop
sub
pushf
movsl
cmp
data16
scas
xor
mov
rorb
add
in
loopne
jb
movb
xor
lods
int3
rorl
into
cmp
sub
testb
pushf
xor
or
dec
mov
jns
mov
aad
scas
pop
ret
cmp
mov
mov
fmul
mov
js
out
pop
in
inc
testb
scas
arpl
movb
imul
roll
mov
and
mov
ret
pop
push
popf
mov
and
imul
sahf
dec
arpl
ja
sub
add
je
mov
hlt
mov
rol
int
sub
ljmp
xchg
cs
pop
jp
mov
cmp
cmp
mov
clc
shl
rcl
stc
adc
mov
xchg
and
jno
movsl
jnp
and
addb
add
aam
adc
call
fldt
inc
mov
jp
jbe
jle
aam
push
xchg
imul
and
sub
rol
xchg
inc
fsubp
test
inc
fadd
cmp
xor
jmp
sbbb
pop
mov
pusha
sub
dec
pop
sub
shrd
dec
repz
and
push
adc
in
into
adc
mov
mov
jecxz
divl
xchg
sub
push
movsl
jns
xor
mov
rcll
frstor
lock
sbb
push
incb
movsl
xor
cmc
aad
adc
inc
jo
mov
data16
xchg
inc
cmp
rcrb
stos
or
mov
mov
push
js
not
imul
ret
sar
mov
push
daa
xlat
xchg
add
ret
aaa
or
dec
xchg
sbb
dec
mov
xor
inc
adc
shr
sbb
and
pop
gs
cmpsl
mov
mov
cmpsb
xchg
loopne
jge
cmp
and
dec
xchg
adc
ljmp
cmpsb
in
aad
imul
sbb
mov
xchg
aaa
lret
scas
rorb
mov
es
push
fs
adc
inc
out
sbb
fwait
xor
loopne
test
iret
inc
test
jne
ja
push
sarb
enter
xor
std
adcb
insl
lock
add
data16
jl
xchg
dec
jecxz
insb
inc
call
leave
xchg
in
in
stos
ljmp
addl
add
sbb
cmp
sub
lahf
xor
xchg
xchg
inc
pop
sub
pop
cmc
inc
dec
aas
push
push
das
add
subb
lods
mov
push
outsl
fildll
push
or
mov
jne
je
ljmp
mov
cmc
mov
js
sub
in
shrb
inc
fwait
jle
mov
push
add
repz
push
sub
int
jae
jb
cmpsl
sbb
add
mov
ljmp
mov
hlt
lds
sub
pop
dec
mov
stos
sub
lahf
jne
add
cmc
shl
lret
hlt
mov
dec
sub
add
aas
cltd
cltd
jecxz
xchg
mov
and
out
into
ds
repz
fbstp
movsb
fldt
xor
xlat
imul
cmp
push
popf
add
sbb
ja
mov
cmpsb
out
std
iret
fwait
mov
pop
repnz
dec
or
fisttps
cmp
mov
sbb
xor
push
test
fwait
sub
sbb
jae
mov
xchg
jno
xchg
pop
sub
cwtl
lds
and
inc
pop
jno
das
fbstp
push
in
insb
cmp
lods
add
pushf
repz
mov
cltd
aad
or
cltd
and
jl
fbstp
mov
in
and
nop
mov
inc
xchg
sub
cltd
addr16
and
xor
xlat
call
push
pop
cmp
pushf
xchg
out
call
mov
inc
dec
mov
xor
adc
shlb
repnz
xor
fcoms
dec
inc
shll
fwait
dec
test
popf
xchg
jmp
std
cltd
mov
nop
adc
ds
incb
xchg
cmp
pop
mov
sbb
cmc
dec
jbe
mov
lcallw
inc
pop
out
test
fiadds
jno
out
jle
fwait
scas
mov
int
sbb
repz
inc
fstps
sbb
cs
and
aaa
movsb
adc
into
gs
or
in
test
add
sahf
lcallw
cmp
notl
mov
and
addr16
outsb
scas
shl
sub
xchg
cmp
push
sbb
dec
mov
int
mov
mov
movsb
mov
pop
mov
mov
scas
ret
ds
cmp
pushf
push
inc
fld
test
out
les
vpcmpeqw
out
popa
dec
mov
add
lcall
es
cmp
jbe
imull
jne
pop
jg
xor
stc
xchg
pop
mov
adc
je
in
pop
mov
fisubl
ret
cmp
es
hlt
mov
clc
movsl
lds
push
jmp
adc
aas
sarb
or
mov
fwait
jae
fnstsw
popf
fmulp
adc
jbe
mov
inc
pop
mov
ret
and
ss
jns
lock
in
xchg
stos
mov
mov
adcl
adc
and
jl
cld
mov
arpl
add
mov
mov
shrl
sub
xor
mov
sbb
das
inc
sub
push
push
ss
nop
inc
push
inc
pop
cmp
adc
push
and
xchg
jbe
fcmovnu
push
andl
add
or
sbb
xchg
cs
pop
sub
dec
mov
std
lds
daa
push
hlt
mov
push
xchg
xor
mov
sahf
push
mov
loopne
or
sbb
sbb
rol
js
pusha
jecxz
fists
adc
sub
xor
out
enter
xchg
cmp
xchg
test
add
sbbb
aad
push
push
hlt
pop
push
pop
daa
popf
mov
xor
sti
iret
outsl
mov
stc
faddl
cmp
mov
iret
les
inc
sbb
lds
push
cld
jno
dec
sub
lahf
dec
fisubl
inc
pop
loope
inc
popa
cmpsb
add
jno
ret
pop
or
into
jl
sti
loope
out
adc
jne
xchg
or
fdivl
out
or
xchg
aad
sub
shrb
jl
cltd
iret
fidivrs
mov
into
mov
add
data16
mov
fsts
inc
inc
xorl
pop
fisubrl
xor
xchg
adc
test
xchg
push
pop
adc
inc
loop
jae
fwait
xor
das
sbbl
shll
in
xchg
add
adcl
nop
mov
aaa
lea
mov
filds
int3
cs
sbb
lret
ja
aam
jb
popa
cmpsl
jnp
lods
enter
push
mov
inc
ret
pop
pop
adc
mov
jbe
mov
fstl
icebp
clc
sub
add
repnz
pop
jp
cs
adc
dec
js
inc
sbbl
jo
and
test
fimull
fnstsw
imul
cwtl
lods
cmpsb
xor
test
leave
int3
mov
push
out
xor
lcall
jp
pop
push
pop
push
adc
mov
jo
mov
sbb
push
adc
insl
add
pop
jbe
out
sub
cmc
cwtl
cmp
adc
and
or
push
mov
js
xchg
mov
stc
sbb
pop
cltd
loop
cld
fdivs
and
ret
mov
scas
xchg
in
mov
add
iret
stos
adc
fisttps
stc
xchg
mov
sub
mov
push
fwait
sub
mov
mov
mov
xchg
mov
repnz
mov
into
std
cmp
pop
sub
sub
in
dec
ficoml
imul
pop
lea
call
int3
xor
mov
jb
adc
push
mov
fildl
jmp
sub
lea
ljmp
cmp
pop
imul
pushf
icebp
iret
cmpsb
adc
test
or
repnz
rcr
fisubs
dec
lret
and
daa
mov
add
mov
es
push
pushfw
or
jp
repz
pop
ficoms
ret
pushf
andb
movsl
cli
shll
stos
outsl
or
xchg
sub
or
mov
and
or
test
repnz
testb
inc
bound
mov
outsb
push
scas
xchg
mov
or
xchg
mov
fwait
push
lret
jbe
mov
sbb
cmpsb
dec
push
mov
push
cmp
cwtl
fistpl
or
ja
sub
push
sbb
push
mov
push
ljmp
jmp
xchg
pop
popa
xor
xor
mov
push
sahf
xor
inc
call
aam
cltd
adc
mov
or
add
sbb
ds
testb
stos
mov
mov
sbb
fisubrs
insw
sub
dec
hlt
imul
imul
scas
jge
xor
lcall
movsb
std
mov
mov
insb
sbb
mov
fildll
push
sbbb
xchg
xor
push
mov
pop
adc
push
cltd
push
xchg
lcall
fidivl
int3
mov
jecxz
dec
mov
xchg
pop
sbb
inc
outsl
jnp
xor
inc
enter
fdivl
dec
push
in
les
fs
push
inc
pop
js
and
jns
fldl2t
or
jne
hlt
enter
hlt
dec
jo
es
insb
push
fiaddl
and
jns
mov
add
icebp
add
inc
enter
jbe
cmpsl
lahf
inc
cld
xchg
inc
test
adc
sti
xchg
dec
xor
insl
sbb
mov
incl
push
int3
sbb
push
xchg
test
outsb
shll
fnsave
mov
cmp
jb
outsb
xor
ret
mov
mov
ss
in
mov
push
lea
pop
in
jp
xor
xchg
inc
cmpsl
dec
rcrb
test
scas
js
mov
or
xor
sub
pop
mov
xlat
nop
cmp
pop
adc
xchg
mov
push
cs
mov
jge
dec
pusha
cltd
cmpsl
shll
lea
add
jne
sub
out
pusha
pop
fsts
adc
or
pop
movsb
jecxz
mov
fisubl
pop
fldcw
mov
push
pusha
sbb
and
in
mov
cmp
jo
pop
xchg
mov
lods
loope
add
test
sbb
movsl
push
out
mov
je
divb
sbb
cld
or
xor
rclb
xchg
mov
in
push
mov
int3
shll
push
outsl
xor
mov
mov
pushf
xor
dec
bound
inc
ljmp
inc
inc
pop
jns
and
mov
in
inc
xor
repnz
scas
scas
ret
and
ret
stc
mov
add
daa
and
inc
lahf
lds
jecxz
mov
push
hlt
inc
push
insl
jne
cmp
adc
dec
adc
ja
inc
pop
sbb
stos
out
ret
adc
push
mov
add
repnz
int3
xchg
sub
in
push
fdivrs
add
push
adc
iret
sub
mov
mov
adc
aas
lock
ret
adc
mov
push
ljmp
jns
daa
ret
in
xorl
jne
clc
addr16
jb
out
insb
xlat
notl
in
sub
or
in
iret
int
mov
cmp
inc
and
test
push
daa
mov
cmp
mov
out
sbb
or
lods
mov
scas
stc
pop
pushf
out
mov
stc
dec
pop
idivb
sbb
or
jg
cmp
pop
and
insl
push
lret
lock
fisubrs
popf
mov
repnz
xchg
cli
imul
aad
xorl
pusha
int3
arpl
ret
clc
pop
dec
dec
shll
rcrb
int3
and
xor
fwait
out
cmp
shrl
xor
add
leave
aas
fisubs
pop
outsl
popa
sbb
out
push
mov
rcl
sbb
dec
sti
les
sub
jnp
cld
jns
in
out
or
out
mov
adc
cli
rorl
rclb
adc
mov
xchg
mov
or
loop
fsubr
jo
dec
mov
aam
mov
sub
repz
fstl
mov
das
adc
jl
cmp
test
pop
sbb
or
push
jne
or
xor
stos
dec
shlb
repz
mov
lret
sub
sahf
xor
jp
or
inc
jno
scas
stc
rcl
add
adc
push
jg,pt
fadds
sbb
lock
out
test
adc
inc
sbb
sbb
xor
shlb
add
push
push
push
mov
pop
xchg
push
inc
xchg
dec
fsub
fistps
push
adc
mov
pop
inc
fsubl
shll
sub
adc
mov
out
ret
movsb
xchg
dec
adc
add
mov
das
clc
and
daa
js
inc
push
mov
fcmovnu
xchg
into
dec
es
xor
push
jne
push
dec
jmp
es
mov
adcl
jo
fcompl
dec
idivb
repnz
out
jo
insl
fnstenv
pop
js
lcall
pushf
dec
ljmp
xchg
clc
dec
inc
stos
mov
inc
fsubs
in
jmp
push
xor
add
aad
mov
in
or
es
jl
pop
xor
mov
pop
out
aas
outsl
push
jno
dec
sbb
cmp
int
mov
pop
sbbb
add
push
or
xchg
into
ret
inc
std
shlb
retw
cli
and
fstpt
test
inc
nop
lret
imul
xchg
les
aam
lods
nop
shl
push
push
mov
mov
add
aad
and
jle
rcr
xchg
mov
les
cmc
dec
sub
push
xchg
jb
sarb
pop
xor
nop
pusha
xchg
cmp
push
fs
rcrl
test
out
mov
mov
loopne
add
sub
ret
xlat
jmp
dec
mov
inc
cmpsl
sub
and
fcmovnbe
xor
and
mov
mov
ret
outsb
mov
cmp
out
sub
cmp
ficoms
cmc
int3
xchg
cmpsb
push
imulb
xchg
jns
insb
mov
lods
sbb
fistps
push
and
dec
in
pop
loop
dec
insb
add
xor
daa
sub
negb
sub
insb
fwait
push
push
in
pop
sbb
mov
insb
adc
xlat
mov
out
adc
mov
mov
jne
out
or
outsb
jg
mov
xchg
sub
aam
mov
stc
jecxz
push
lds
lret
fnstenv
jg
fidivs
jnp
and
cld
push
mov
pop
fiaddl
out
adc
out
js
fidivl
lahf
mov
shll
and
popa
mov
sbb
or
stc
cmp
loopne
xchg
not
inc
sub
mov
daa
mov
lock
mov
push
das
or
imul
inc
lock
je
aaa
push
mov
in
clc
adc
cmp
cmp
push
cmp
stc
pop
xor
insb
in
push
and
sar
pop
ja
cmc
sbb
popf
arpl
out
mov
sarl
pop
jl
sub
mov
es
gs
es
stos
popf
sti
shlb
cmp
fldl
xor
pushf
cltd
xor
mov
ds
dec
sbb
jns
inc
call
pop
loope
mov
add
enter
lods
pop
stos
push
out
fsubrp
stc
and
inc
insb
add
imul
andl
jb
leave
xchg
idivb
sbb
dec
ret
add
movsl
sbb
shlb
or
ljmp
cmp
mov
subl
add
jg
ret
cmpsl
xor
mov
adcl
js
xor
jbe
inc
mov
fsts
mov
repz
xchg
sub
xchg
sbb
sbb
cmc
cmp
sbb
dec
hlt
push
idiv
lds
lahf
xor
ror
xlat
leave
jbe
sbb
pop
sbb
xchg
data16
cwtl
mov
shl
fldenv
xchg
sub
xor
and
and
xchg
div
dec
sbb
ftst
call
mov
and
ds
test
sbb
add
inc
mov
test
jbe
jb
call
sub
gs
hlt
mov
jnp
fucom
insb
aam
and
testb
inc
rcrl
arpl
mov
jmp
add
lcall
dec
pusha
add
xchg
les
cmc
dec
insl
mov
cmp
ss
or
push
stos
inc
dec
or
mov
movsb
adc
in
das
mov
mov
cmp
cmc
subl
pop
fsub
in
add
jne
mov
daa
mov
test
addr16
fdivs
fadds
loop
lret
jno
mov
mov
mov
stos
pop
test
rol
adc
shrb
cmp
pop
push
stc
ret
iret
mov
jo
pop
aam
jnp
sarl
and
pushf
lods
xor
push
cs
mov
xchg
pop
repz
add
inc
lahf
aaa
out
push
inc
dec
loop
shr
imul
negl
xor
out
jnp
es
loope
roll
sub
cli
inc
mov
add
icebp
or
xor
mov
mov
movsb
mov
pop
mov
bound
outsb
call
sbb
or
mov
lods
mov
xchg
mov
sbb
push
jb
mov
cmp
arpl
test
mov
nop
imul
sub
pop
mov
aas
cltd
mov
push
pop
in
xor
bound
jne
mov
jp
fsubrl
inc
inc
roll
sbb
mov
lods
scas
test
mov
shr
adc
jge
cmp
mov
xor
dec
jle
dec
fldt
aaa
push
loop
mov
loopne
inc
push
pop
cmp
rclb
push
or
das
or
cwtl
or
mov
pop
ret
pop
nop
pushf
fdivs
xor
mov
and
xor
lret
sbb
xchg
mov
add
insb
imul
sub
lahf
xor
dec
push
sub
push
pop
mov
in
js
andl
aas
pop
push
and
xor
dec
sti
push
in
inc
loope
enter
mov
cs
push
in
dec
stos
mov
inc
push
aas
inc
fidivl
fsubs
gs
inc
fdivr
addl
xchg
pop
repnz
sbbb
repz
data16
lret
pop
je
leave
inc
or
cld
in
or
out
add
ds
arpl
jl
inc
int
cli
lds
movsb
rcrb
push
fdivs
fs
call
pop
hlt
sbb
ret
fisttpll
and
js
jae
mov
jmp
push
cmp
lods
outsl
jecxz
push
add
cmc
mov
push
mov
pop
pop
rcr
lret
mov
std
mov
clc
sti
dec
pusha
fistpl
cwtl
push
lods
leave
aas
bound
lahf
sub
shl
sahf
pop
mov
pop
cmc
scas
cmpsb
and
push
loope
push
cld
jp
jge
repnz
pop
and
pop
adc
icebp
sub
pop
sbbl
push
fs
push
and
outsl
test
cmp
xchg
sub
outsb
je
lods
lock
test
inc
pop
test
and
fistpl
cld
inc
mov
or
notb
lcall
sub
push
lock
scas
xor
cmp
cmp
mov
or
lahf
js
dec
jo
sub
out
enter
leave
add
mov
insb
pop
mov
stos
cmp
stos
in
dec
mov
inc
out
ret
or
sub
pop
push
add
push
mov
sbb
cmp
ret
cltd
subl
sbb
mov
mov
stc
subl
cmp
cltd
and
pop
insb
jle
sbb
ds
sbb
repz
push
rclb
out
mov
push
cmove
pop
test
lret
sti
sub
xchg
xchg
dec
je
pop
mov
lret
pop
mov
pop
inc
imul
inc
sub
cli
icebp
testl
jge
jecxz
mov
aad
fadd
inc
cmpsl
jge
into
xchg
loop
sbbl
push
or
or
popf
xor
ds
jno
xchg
shll
push
sbb
push
mov
nop
jns
jle
mulb
addb
int
fcomp
out
je
mov
xchg
push
loope
js
es
mov
sarb
adc
jbe
and
sahf
or
lret
xchg
mov
inc
pop
xor
shll
push
sub
jae
lock
js
xchg
lahf
pop
rorb
xchg
push
stos
pop
mov
xor
cmpsl
pop
lock
inc
pop
scas
jp
ljmp
mov
fcompl
xchg
outsl
notl
cmpsl
stos
data16
test
idiv
insl
idivb
iret
mov
iret
in
iret
and
int
pop
or
fdivl
rcll
sbb
pop
inc
stc
add
xchg
int3
and
or
adc
pop
inc
mov
jp
sahf
insl
mov
push
cwtl
mov
mov
les
mov
movsl
mov
imul
fldcw
lret
ja
sbb
out
cwtl
sub
mov
xchg
loope
cld
and
ljmp
cmpsl
push
mov
push
mov
add
stos
es
cld
xchg
clc
push
cltd
test
dec
mov
jmp
or
xchg
add
sbb
dec
push
inc
and
jmp
scas
int3
das
jge
inc
push
loope
pop
aam
aad
lock
jne
pop
sarb
les
scas
pop
lret
fiaddl
imul
xor
cmc
out
andl
inc
sbb
mov
popa
shll
push
push
adc
xchg
jns
into
notb
mov
dec
dec
loopne
lcall
rcrb
popl
out
jno
sub
mov
mov
adc
mov
fldcw
push
sti
xchg
and
ret
stos
je
cwtl
inc
int3
push
lods
or
xor
out
mov
lret
cli
mov
bound
movb
xlat
fistpl
stos
adc
ret
jg
xor
fs
adc
rorb
arpl
and
mov
inc
push
fwait
add
sarl
lcall
or
lods
out
pop
fldcw
repz
jl
imul
test
push
add
leave
inc
push
jb
movsl
dec
pop
xchg
scas
inc
dec
pop
push
inc
cmp
int3
or
scas
movsb
mov
addl
xchg
ret
dec
add
jns
jb
inc
fdivr
out
xchg
rcrl
pop
ds
push
cmp
xor
inc
mov
insl
mov
fmull
bound
fdivl
shr
inc
mov
mov
in
push
mov
jbe
xor
repnz
pushf
jecxz
mov
pop
add
in
and
push
jne
mov
ficoml
inc
add
push
fisubs
xchg
sarb
rcrb
inc
xchg
rolb
pop
add
sub
adc
jp
pop
lods
pop
loop
xor
and
push
jmp
aad
add
mov
mov
fnsave
fsubs
add
jno
out
xchg
sbb
shr
nop
adc
xchg
hlt
push
in
cwtl
pusha
xor
sub
cmp
ds
aam
nop
pop
jge
sub
xchg
pop
dec
pop
stos
in
jl
out
adc
push
popa
icebp
std
xchg
sbb
pop
scas
fidivs
stos
inc
and
xor
pop
sub
jecxz
je
out
xor
xchg
xchg
lcall
lods
mov
sub
adc
sub
sbb
out
sub
push
pop
fbstp
cwtl
cld
push
mov
mov
pop
out
sub
insl
push
mov
rorl
mov
push
mov
inc
aaa
es
xlat
xlat
mov
and
mov
mov
aaa
mov
jb
aas
ret
mov
pop
cltd
iret
dec
inc
cmpb
aas
dec
jno
push
popf
xor
sub
sti
mov
enter
sub
rol
repz
outsb
push
mov
sub
ds
add
jns
ret
sub
pop
imul
add
xor
inc
push
pop
adc
ljmp
xor
push
icebp
loopne
push
fsubrp
sbbl
pop
lods
inc
fcomp
repz
fsubs
aad
cli
repnz
xor
negl
cmp
inc
mov
enter
mov
xchg
mov
jp
adc
pop
sahf
shlb
jns
mov
sbb
movsl
mov
xor
sahf
xor
adc
stos
push
je
arpl
xchg
cmp
add
popf
test
sub
fistpl
inc
push
stc
scas
cmp
mov
push
or
ret
mov
mov
mov
bound
lret
out
and
cmp
xor
inc
push
push
scas
sbb
mov
inc
lea
popl
sahf
rcr
stos
and
mov
dec
sbb
dec
insb
sub
stos
cmp
jp
mov
adc
sub
xor
dec
mov
sbb
mov
aam
clc
addr16
add
ret
loope
and
popf
ret
icebp
and
sahf
aad
inc
dec
adc
das
scas
inc
popa
pop
adc
xor
push
jne
lock
mov
test
fnstenv
fnstsw
push
mov
add
lods
lea
xchg
dec
xchg
mov
movsb
ljmp
shlb
mov
mov
scas
push
xlat
outsb
mov
add
push
dec
out
shlb
stos
push
jnp
mov
inc
mov
xchg
outsl
jecxz
jmp
cmp
mov
pusha
or
mov
ret
out
mov
mov
xlat
or
sbb
shrb
mov
jns
pop
stos
jno
imul
test
mov
pop
dec
pop
jecxz
clc
pusha
or
call
fldcw
adc
push
fldenv
js
jae
cmp
cmc
pusha
outsl
pushf
xchg
mov
push
pop
test
xor
jne
push
pop
xchg
push
movnti
das
push
mov
sub
push
cs
xchg
pusha
ljmp
in
pop
rcr
push
aad
incb
mov
xor
int3
sbb
inc
xchg
aas
push
int3
sbb
jge
sbb
xchg
loop
std
fcoml
jbe
aas
test
push
in
jns
xor
std
or
mov
push
cwtl
and
mov
lods
sbb
mov
pop
loopne
shl
mov
adc
pushf
lds
sahf
or
fwait
xchg
lret
fs
xor
bound
scas
xorl
repnz
push
fcomps
add
xchg
mov
ret
and
sbb
cmp
imul
js
dec
adc
in
in
inc
insb
sysexit
xor
dec
frstor
dec
cmpsl
loop
cli
das
push
lret
je
loope
cmp
inc
sti
xchg
test
loopne
mov
and
inc
or
cld
sbb
dec
dec
or
cmp
call
mov
popf
mov
mov
fwait
rcll
in
pop
imul
outsl
jnp
xchg
clc
xchg
hlt
push
fstps
sbbl
loopne
mov
xor
lds
stos
jmp
jnp
xor
dec
cld
jbe
outsl
ret
push
mov
push
bnd
jbe
int3
arpl
rcr
das
outsl
movb
dec
push
das
pop
lock
add
cmp
mov
dec
cmpsb
mov
fwait
inc
push
int
cs
cli
pushf
out
and
push
sahf
or
divl
hlt
xor
mov
cmp
dec
rorl
dec
out
sbbl
insl
es
movsl
xchg
fimuls
scas
sbbb
xor
xchg
cmp
sub
add
cmp
je
adc
sub
arpl
adc
mov
and
popa
pop
rcll
fisubrl
fists
cmp
dec
mov
bound
stos
sub
and
ret
out
js
or
pushf
ss
insl
dec
fisttps
sbb
sub
push
add
stc
or
scas
adc
jmp
cmp
popl
and
mov
repz
in
cmp
call
je
mov
sti
xor
add
in
daa
sub
and
orl
mov
imul
dec
pop
adc
bound
test
inc
jo
clc
js
pop
stos
or
xor
xchg
rol
repnz
cmp
push
stos
cmp
inc
adc
cld
add
adc
dec
sub
adc
xchg
addr16
pop
mov
xchg
mov
mov
cmpl
sahf
mov
test
mov
dec
push
adc
popf
inc
je
mov
fstl
lods
jg
pop
aad
mov
lea
jo
das
icebp
lock
scas
test
lret
leave
dec
cmp
sbb
xchg
add
stos
mov
lods
mov
xchg
jns
or
lods
shlb
mov
test
xchg
scas
test
xor
cwtl
fsts
mov
cmp
stc
mov
inc
pop
jno
adc
loopne
xor
loope,pt
bound
ret
ljmp
inc
jnp
stos
cmp
lcall
pop
iret
lcall
fucomp
stos
aad
shlb
xor
push
outsb
xor
imul
stos
sub
cltd
aaa
jno
sub
data16
sbb
or
xchg
push
pop
xorb
mov
inc
fldl
shll
mov
dec
fwait
stos
pop
je
cmp
addb
inc
xchg
insb
inc
imul
pop
sahf
int3
in
js
popa
mov
repnz
fbstp
mov
daa
fisttpl
out
cld
scas
test
mov
inc
xchg
nop
pop
push
hlt
nop
mov
pop
scas
jge
or
test
imul
pop
into
xlat
cs
pushf
and
mov
cmc
push
test
mov
adc
addr16
nop
push
mov
push
in
inc
xchg
out
in
popf
mov
imul
imul
rcrl
sub
mov
add
mov
call
or
rcrb
cmp
xor
fcom
sarl
jmp
cmpsb
lds
add
push
outsl
insl
sbb
push
mov
lock
pusha
orb
add
sub
mov
sbbb
cmp
rcrb
xor
inc
aas
into
inc
jno
mov
sarb
push
mov
pop
sbb
push
lret
out
xchg
outsl
jnp
popa
xchg
mov
sbb
jo
xchg
notb
cmp
push
and
popf
inc
mov
mov
stos
scas
pop
outsl
jnp
inc
test
inc
sbb
pop
xchg
in
push
pop
mov
pusha
inc
mov
pop
push
insl
lret
in
mov
loop
imul
adc
mov
ret
hlt
cs
or
imul
insb
sbb
and
adc
mov
xchg
jo
stos
mov
jge
fisubrl
repnz
cltd
stos
ljmp
xlat
pop
sbb
leave
mov
pop
sub
loopne
sbb
inc
rol
idivl
push
lds
into
push
test
sahf
push
std
lods
push
ss
aas
sti
into
add
xchg
loopne
xchg
call
jo
push
ja
test
lea
in
shl
fildll
mov
sub
stos
adc
mov
gs
mov
add
fnstenv
pop
fdivl
add
jp
jp
xchg
js
mov
scas
push
std
inc
mov
aaa
push
xor
xlat
jae
ret
pop
mov
xlat
cli
popa
test
iret
data16
in
and
adc
sub
sbb
cmp
add
mov
pop
mov
push
inc
pop
mov
cmp
pop
mov
addr16
cmp
out
pop
cmpsl
rorb
lret
lret
fcmovu
daa
mov
jp
inc
cwtl
pop
xchg
lret
in
jp
cmp
inc
aam
stos
loop
sbb
vmovshdup
test
adc
adc
shr
pop
jecxz
clc
sarb
or
jl
fs
js
adc
nop/reserved
and
or
cmp
test
scas
fsts
inc
xor
stos
mov
nop
cmpl
cmpsl
push
or
xchg
je
aaa
das
je
test
xor
sub
jb
in
pop
test
dec
scas
inc
or
bound
rcrb
mov
dec
jecxz
fldt
xchg
mov
mov
push
out
or
xor
sub
pop
jmp
sbb
jae
mov
and
mov
aam
js
add
xor
aas
stos
cmp
addr16
sub
jmp
xchg
xor
fidivs
enter
xchg
gs
xor
jmp
and
adc
fistps
lock
jne
add
test
push
sarb
inc
mov
jno
mov
andb
jge
or
stos
cmpsl
out
js
imul
add
das
sbb
mov
mov
pop
sahf
adc
inc
fdivrp
in
xor
jbe
lret
insb
sbb
lds
loop
lahf
divl
pop
cltd
mov
jp
imul
testl
add
jae
out
sub
pop
adc
inc
mov
lahf
nop
nop
adc
xor
or
lret
and
test
ds
xor
insb
out
jnp
jne
iret
mov
jae
jge
fs
out
lock
js
aas
insb
out
scas
sub
pop
push
icebp
jmp
mov
in
mov
ret
lea
mov
pop
out
pop
mov
les
fneni(8087
filds
cmpsl
push
jmp
jecxz
jmp
ja
or
sub
dec
lods
call
jae
aam
popa
dec
push
inc
and
cmpsl
xor
jge
sti
or
lcall
push
cmp
and
ret
mov
insl
cmpsl
mov
test
lret
sbb
inc
jle
call
xlat
imul
cmpsl
push
lea
idivb
icebp
clc
jge
fnsave
lret
adc
sub
mov
sbb
or
rcrb
mov
loop
loope
mov
outsl
movsb
xor
test
cmc
mov
xchg
bound
add
cs
adc
pop
jae
movsl
mov
cmp
ja
shll
dec
pop
xchg
bound
jnp
jl
jp
adc
dec
enter
mov
je
test
dec
out
stc
lahf
adc
test
into
aas
pop
push
xor
mov
dec
fwait
add
fucomip
and
push
js
add
mov
es
lahf
in
sahf
sbb
sub
cmp
add
jns
xor
aad
iret
dec
cmp
pop
insb
pop
scas
inc
fsubr
faddl
mul
mov
or
sub
dec
aam
push
out
jecxz
add
mov
addl
adc
cmpsl
xchg
xor
xor
or
push
jae
mov
addr16
sbb
aaa
and
push
inc
mov
xchg
sub
inc
or
mov
or
xor
sub
aaa
mov
mov
jmp
scas
push
mov
mov
mov
pop
mov
mov
push
cmc
sarb
loopne
pop
adc
inc
mov
push
lds
dec
mov
out
pop
dec
cmp
push
insb
insl
cmpsb
mov
cmp
dec
dec
xchg
cmc
sbb
inc
mov
pop
shlb
insb
push
subl
test
mov
ficoms
cmpsl
outsl
repnz
inc
adc
jae
repnz
outsl
add
insb
dec
sbb
scas
hlt
push
fdivrl
cmp
in
lea
mov
out
cld
mov
aad
icebp
or
enter
shlb
cltd
mov
lret
sub
arpl
adc
mov
clc
cld
lock
test
js
and
mov
sbb
repz
test
stc
nop
xchg
fidivl
sahf
mov
sbbb
hlt
or
je
sbb
mov
sbb
jae
loop
jmp
mov
aad
and
adc
and
testl
andb
xchg
lds
ds
push
jecxz
pop
xchg
in
dec
inc
adc
jmp
dec
push
pop
and
pop
sub
mov
mov
jae
lahf
sub
pop
xor
dec
es
cmp
roll
lret
test
inc
xchg
pushf
inc
push
jo
mov
xchg
xor
lret
std
adc
out
aaa
aam
push
mov
js
jo
or
aaa
mov
push
in
loop
xor
mov
mov
xchg
push
lods
mull
fsts
jecxz
and
cmp
insl
test
gs
or
mov
fs
and
push
scas
add
pop
scas
lea
dec
jecxz
enter
mov
icebp
movsl
fadds
lods
loop
je
adc
adc
out
test
xor
fidivs
sahf
decl
movsb
sub
int
lret
roll
pop
sub
fists
data16
insb
pop
je
pop
xchg
aam
adc
jle
sbb
imul
and
pop
out
cmp
xor
aam
adc
lret
pop
xor
pop
pop
insl
sub
int3
popf
mov
jo
mov
clc
xchg
sti
jbe
sbb
xchg
jle
mov
repz
pusha
cli
cmpsl
add
shrb
push
mov
sub
std
stos
sarl
dec
pop
and
pop
xor
es
pop
incb
in
inc
popa
clc
adcb
adc
pusha
mull
push
sarl
scas
aas
stos
adc
push
push
lret
adc
repz
jp
adc
aas
xchg
inc
xor
mov
js
test
add
and
inc
jbe
and
cmp
mov
dec
jnp
xchg
xchg
or
es
mov
daa
and
popa
rolb
es
xor
cmp
call
roll
aad
jb
cmp
and
loope
inc
push
pushf
pushl
fsubs
pop
or
es
xchg
inc
mull
inc
aam
icebp
inc
jg
in
adc
mov
fnstsw
popf
lret
int
insl
ds
mov
fimull
jns
das
pop
xor
ljmp
scas
mov
mov
leave
or
jle
sbb
test
jge
inc
bound
lahf
mov
push
out
das
ret
sub
aaa
clc
popf
inc
nop
sub
mov
push
aaa
push
cmp
icebp
ds
dec
sbb
pop
call
repnz
repnz
pop
inc
cmpsl
sbb
leave
popa
repz
or
sbb
xchg
cmp
push
sbb
push
pop
jne
inc
cmc
cmp
icebp
pop
aam
rcrl
mov
sbb
pushf
popa
jbe
push
movsb
repnz
repz
push
testb
int
add
adc
pop
clc
and
sub
push
js
not
jno
inc
test
jne
add
jl
dec
pop
jbe
je
adc
popf
scas
mov
cmp
pop
jp
ffree
ret
pop
jl
mov
sub
stos
insb
and
mov
jmp
mov
pop
lea
sbb
inc
sbb
or
rorb
mov
dec
jnp
sbb
out
adc
lret
xlat
add
sbb
sub
sti
rcrl
jp
mov
test
out
push
ljmp
sbb
pop
imul
sub
test
in
gs
and
pop
hlt
sti
dec
xchg
subb
fucomi
enter
push
aad
ljmp
push
push
mov
add
mov
adc
imul
xchg
test
and
and
ljmp
inc
aas
stos
cmp
mov
jecxz
and
dec
frstor
mov
insl
popf
aam
ret
fbstp
call
data16
ljmp
xor
aam
mov
test
push
inc
ljmp
xchg
push
xor
pop
clc
mov
leave
add
testl
add
fnstenv
dec
sti
out
jecxz
inc
and
inc
mov
push
out
scas
insb
inc
pop
lcall
and
aas
stos
mov
inc
addb
mov
lds
cli
pusha
cli
push
xchg
dec
pop
cli
repz
xchg
in
adc
gs
and
jns
lahf
jb
scas
sub
ja
pop
xchg
les
shll
clc
test
arpl
ss
jns
test
inc
cld
lret
sub
pop
adc
jecxz
shrl
push
pop
lret
mull
data16
cmp
push
or
insb
js,pt
mov
jo
mov
push
xor
mov
push
push
xlat
loopne
sbb
mov
mov
sub
test
popf
mov
in
sti
xchg
lock
sbb
or
stos
mov
aam
std
xor
or
push
sbbb
mov
mov
in
mov
shr
out
xor
pop
xor
push
cmp
xor
sub
mov
xor
mov
roll
xor
leave
fidivs
push
fcmove
aas
arpl
ret
mov
push
sti
lods
outsl
daa
test
testl
loop
mov
cmp
mov
arpl
loopne
cwtl
xchg
je
into
dec
faddp
out
jmp
dec
dec
jl
cli
ret
push
in
hlt
sbb
add
jbe
sbb
sbb
or
pop
mov
mov
push
cmc
mov
or
mov
arpl
int
cs
cs
or
movsb
enter
push
inc
arpl
mov
mov
shll
cmc
mov
lahf
lods
and
stc
fwait
setge
rcrb
movsb
es
lret
les
and
xchg
jle
push
daa
pop
in
fmull
mov
pop
leave
call
sub
pop
push
mov
outsl
imul
mov
popf
jp
cmp
mov
or
xchg
jbe
andb
push
mov
pop
mov
pmuludq
or
cs
aas
cmpsb
push
jecxz
inc
repz
subl
aas
in
adc
insb
sub
dec
xorb
push
or
std
fdivl
fsubs
loop
xchg
xor
mov
and
cltd
xor
iret
push
sub
mov
xor
rorb
adc
xchg
jl
sahf
xor
sub
mov
pop
pop
je
inc
out
xchg
test
lea
nop
enter
cltd
scas
and
and
add
inc
mov
xlat
mov
xor
push
add
cmp
add
cltd
pop
and
sbb
pop
sbb
js
add
and
push
push
mov
adcl
fidivrl
pop
cwtl
pop
test
adc
pushf
jo
sub
cmc
inc
aas
pop
push
pop
adc
cs
push
dec
inc
adc
leave
mov
jne
dec
push
jmp
sub
sbb
out
or
adc
xchg
es
aad
inc
adc
add
push
int3
aad
jbe
lds
aad
lods
lea
mov
int
insl
pop
mov
xchg
fbld
dec
or
in
lods
inc
cmc
je
or
das
aaa
jbe
insl
test
inc
icebp
lods
add
add
stos
stos
aaa
push
filds
xchg
sti
lcall
sub
dec
inc
push
add
add
adcb
imul
xor
add
push
jecxz
std
jbe
cli
jae
xchg
pop
outsl
imul
sbb
xchg
scas
ja
mov
rclb
xchg
ror
fldcw
cmpsl
mov
sub
leave
loope
not
or
dec
sub
adc
pop
sub
int3
mov
fsts
mov
mov
xchg
mov
or
pusha
adcl
pop
and
adc
daa
mov
adcb
ss
cwtl
stos
in
rcl
inc
lock
out
pop
add
out
popa
mov
loopne
out
pop
mov
cmc
loopne
xor
inc
xor
adc
cmp
fs
mov
add
sub
mov
xchg
mov
inc
cmpsb
addr16
sbb
mov
arpl
repz
rcll
je
inc
arpl
sub
push
mov
jmp
jo
inc
lock
inc
xor
lock
pushl
scas
xlat
push
jo
fwait
add
addb
add
jmp
scas
jp
inc
mov
mov
jbe
add
test
divl
dec
loop
jae
xor
test
cltd
or
pop
push
ds
sbb
add
cmp
dec
repnz
js
inc
xor
cli
and
lods
mov
dec
mov
pop
dec
cli
xchg
mov
dec
pop
lock
jmp
sub
out
ret
int
xchg
vpsubusw
dec
push
inc
mov
push
push
cmpsl
popf
sub
xchg
nop
test
push
jns
pop
loop
xchg
xchg
orb
subb
lret
out
test
das
xor
insw
lock
cmpl
test
mov
mov
or
shll
iret
mov
stos
iret
fcmovnu
scas
xchg
js
xor
sub
shl
aas
dec
sbb
mov
dec
sbb
sbb
shrl
loop
pop
adc
lea
adc
fnstcw
divl
aad
call
test
inc
fadd
ja
mov
lock
dec
aad
mov
repnz
inc
and
test
sbb
jne
adc
and
std
scas
inc
test
scas
out
bound
sbb
je
scas
fbld
or
mov
out
clc
sbb
mov
out
xor
mov
mov
xchg
or
mov
imul
or
fnsave
in
or
adc
rorl
add
mov
arpl
cmc
mov
imul
mov
and
sarb
mov
sbb
out
xchg
jb
jns
fnstcw
lds
mov
mov
outsl
jne
pop
mov
shll
push
cmp
test
and
cltd
mov
sbb
in
insl
in
out
sahf
iret
stc
add
jnp
cltd
dec
cltd
xor
mov
dec
jmp
or
lock
sub
mov
fnstcw
cmp
leave
int3
or
cli
sbb
jb
sbb
shlb
popa
out
mov
testl
sbb
xchg
xor
sbb
dec
cli
outsb
add
mov
push
imul
push
mov
enter
xchg
test
dec
cmp
push
movsb
jmp
out
mov
lret
or
inc
xor
mov
sub
push
sbb
inc
cmc
out
sub
data16
mov
jl
addl
xor
shll
and
sbb
sub
popa
add
push
aas
xchg
add
scas
inc
push
sbb
fisubl
aam
outsb
jle
cmc
daa
jp
fisttps
movsb
or
movsb
imull
out
mov
jecxz
jbe
jo
jbe
xor
and
mov
lcall
lret
lods
xchg
lahf
lods
mov
sahf
outsl
cli
adc
fcompl
out
xor
mov
aam
mov
fs
ljmp
lods
push
je
push
xchg
sbb
shl
cmp
or
popf
es
loopne
movups
and
repz
inc
cli
sbb
pusha
ds
fidivl
push
lods
js
es
adc
out
xchg
pusha
jnp
das
sub
dec
enter
icebp
sub
jmp
add
inc
xor
dec
adc
ds
aad
fistpl
or
lahf
bound
jae
mov
xchg
xlat
xchg
sub
scas
sbb
icebp
jb
sbb
push
mov
test
pushf
jl
sbb
lods
addb
das
mov
sub
hlt
subb
push
cmp
fidivl
fisttpll
psrlq
xchg
shll
xchg
out
mov
je
mov
jmp
inc
ljmp
movsl
jns
or
lds
add
data16
xchg
xchg
xor
shrb
adc
in
clc
xchg
adc
lds
aad
mov
lds
sub
dec
pop
mov
cmp
xchg
cmpsl
fstpt
xchg
mov
mov
sub
dec
in
jno
mov
and
cwtl
test
shlb
fld
mov
or
imul
sti
or
inc
repnz
pop
shll
xchg
mov
add
lock
sbb
mov
adc
ss
jbe
test
cmc
xor
xchg
sbb
movsb
enter
lds
shrl
add
push
enter
and
popf
or
decb
sbb
outsb
mov
subl
or
shll
lcall
and
icebp
xchg
mov
adc
jo
xor
and
in
mov
test
inc
lret
cltd
mov
or
mov
dec
sbb
fisttpll
scas
pop
push
stc
mov
jp
jl
sbb
sbb
in
addr16
mov
cld
mov
add
arpl
or
loope
cmp
stc
es
jge
mov
jo
mov
add
pop
test
mov
test
sbb
push
arpl
mov
fnstsw
movsb
fidivs
in
add
mov
fsubl
jmp
outsl
push
fs
sbb
lret
mov
rorl
dec
or
xchg
fstpt
stos
or
xor
js
lea
stc
les
mov
xchg
jo
mov
pop
loop
enter
jnp
mov
rcll
test
les
pop
stc
and
adc
adc
inc
test
inc
shrb
in
inc
call
addr16
stc
mov
fisttps
std
nop
jecxz
rcll
mov
fdivrs
mov
jne
ret
fistps
inc
or
shl
inc
mov
lods
cmp
ds
add
ret
jp
sbb
adc
shl
xchg
xchg
lea
push
xchg
add
sub
sahf
sahf
test
sbb
inc
or
loop
pop
jmp
int
orb
sti
mov
push
and
and
ss
lds
jg
push
jbe
lahf
adc
cmc
mov
adc
pusha
add
mov
dec
test
inc
xor
or
add
cmp
push
cs
cmpsb
repz
clc
cmp
sar
add
pop
mov
xor
adc
or
jbe
sub
jle
popf
stc
mov
dec
xlat
loop
sbb
xor
in
push
mov
sub
inc
cwtl
ljmp
xchg
test
into
pop
cmp
popf
inc
aaa
pop
in
into
inc
fdivrp
push
sub
xchg
test
xchg
sahf
scas
out
jle
adc
incb
add
add
es
aad
mov
sub
pop
jbe
mov
mov
mov
add
and
push
bnd
pop
cld
movsb
outsl
xchg
mov
adc
lret
stos
mov
sbb
sbb
js
imul
and
in
mov
sbb
or
add
push
pop
and
cmp
out
psrlq
popf
jl
mov
arpl
inc
lods
outsl
dec
mov
loop
andb
das
daa
jmp
sbb
cli
or
les
iret
xor
sbbb
fsub
inc
mov
lock
xor
jns
in
aas
push
data16
xor
gs
cli
int
pop
fisubrl
sbb
mov
fisttpll
mov
sub
push
sub
sbb
cmp
jo
insl
push
stos
test
in
repnz
mov
adcl
adc
xchg
push
push
adc
push
mov
push
xchg
cmp
sahf
movb
fwait
mov
fcmovne
jae
dec
movd
mov
cmpsb
ficompl
jg
fdivrs
pop
inc
mov
enter
mov
ret
jecxz
aas
xchg
je
iret
shl
daa
jo
pop
jmp
clc
sarl
mov
mov
adc
mov
lods
fcmovnu
jmp
fwait
pop
xchg
pop
movsb
xchg
neg
and
out
or
inc
fnstenv
push
push
mov
jg
sbbl
mov
lock
ret
xor
mov
lods
dec
lcall
jo
and
cmp
idivl
sarb
and
pop
push
xchg
cld
les
mov
mov
imul
in
into
fs
fwait
pop
es
shl
jb
push
push
mov
rorl
lret
int
clc
in
fxch
xor
ficoml
cld
jle
lods
lahf
stos
xchg
test
rcr
or
rcll
mov
stc
cmp
adc
mov
jae
push
sub
inc
out
ja
mov
inc
or
std
or
sub
ficoms
fdivs
add
out
add
sbb
mov
sub
cli
out
dec
incl
jo
mov
and
inc
fistl
adc
pop
fldl2t
cmp
stos
rcrb
lea
mov
adc
outsb
inc
frstor
imul
sti
fldenv
in
faddl
jo
xchg
lock
stos
mov
mov
add
or
push
mov
data16
mov
lcall
push
jmp
lods
or
push
gs
aaa
mulb
jns
sub
dec
inc
andb
inc
dec
into
cli
fistpll
adc
imul
pushf
test
cmp
out
pop
cmp
roll
arpl
into
cmp
insb
outsl
rcll
mov
arpl
shll
xchg
xchg
pop
fwait
mov
lret
push
sti
lcall
jle,pt
out
dec
lcall
xchg
call
repnz
cs
adc
rorb
imul
imul
ficompl
lods
es
test
xorb
in
js
mov
xor
sbb
ds
cmp
aad
xlat
aaa
push
aaa
cmp
dec
test
mov
add
loopne
stc
bound
fs
leave
int3
cmp
dec
cmp
aam
push
dec
cld
or
xchg
jmp
and
mov
mov
mov
cs
and
mov
inc
add
push
push
push
aaa
fisubrl
sub
mov
inc
sbb
jne
mov
push
popa
stos
mov
push
test
mov
mov
cli
fidivs
mov
or
shl
lods
dec
sbb
add
xchg
leave
sbb
push
stos
cmp
inc
push
mov
inc
xchg
mov
and
inc
sbb
loopne
push
decl
mov
icebp
push
jmp
fwait
out
out
stos
adc
test
stos
mov
mov
insl
push
pop
jnp
xchg
mov
push
sub
aas
dec
sbb
in
shl
test
mov
lock
push
into
push
or
mov
ss
fcomps
loopne
cmp
in
cli
pop
jne
jns
mov
popa
stos
inc
sbb
inc
dec
cmpsl
inc
push
fnsave
push
mov
xchg
cmp
add
aas
dec
inc
in
mov
sub
jle
jl
in
mov
frstor
dec
push
xchg
pop
xor
cmp
xchg
add
pop
lea
mov
sbb
adcb
jno
repz
xchg
mov
mov
sbb
test
test
cmp
pop
add
jg
xchg
pop
jge
hlt
cmp
dec
xchg
insb
ret
test
repz
testb
fbstp
cltd
jle
sbb
push
fdivrl
cli
mov
aad
test
jns
outsl
mov
andb
cmc
jge
mov
push
adc
bound
inc
dec
pop
adc
push
or
lahf
stos
and
fimuls
orl
jg
xchg
sub
fnstenv
xchg
mov
js
dec
stos
in
cmp
inc
sub
das
lods
inc
pop
popf
into
into
jle
pop
mov
push
test
popa
mov
and
jb
mov
push
stos
in
mov
aad
and
pop
mov
adc
pop
je
je
inc
push
ljmp
jg
cmc
adc
cmp
insl
mov
inc
icebp
imul
jl
lcall
pop
mov
sub
ret
pop
fwait
into
mov
adc
and
aam
xchg
jne
fnstenv
pop
ja
jno
lds
add
add
or
and
xchg
insl
leave
adc
push
roll
adc
jp
jb
pop
cwtl
je
add
lcall
dec
and
jb
mov
xorl
cmc
xchg
ret
leave
add
repnz
sbb
ljmp
xorl
cmpsb
jmp
push
jo
push
test
mov
jmp
mov
into
pop
js
int3
pusha
fdivl
insb
sbb
or
in
and
sbb
jns
ds
xor
rcr
scas
dec
and
mov
jecxz
jno
pop
xchg
jle
lds
test
out
sar
xchg
and
mov
stos
fcomip
dec
shlb
dec
dec
jb
inc
aam
ffree
jge
cmc
mov
cmpsl
jge
daa
cmc
cmpsb
add
inc
dec
dec
scas
inc
mov
aas
lds
data16
sub
push
jne
iret
scas
fnstenv
fwait
sub
dec
pop
mov
aam
xlat
ljmp
rcl
mov
fidivs
jmp
pop
jmp
rcrb
out
sti
jno
ljmp
lock
cs
les
and
jmp
int
aad
xor
lods
dec
sub
push
jae
orb
pop
ret
jecxz
sbb
xor
pushf
xchg
movsb
out
sahf
call
lcall
mov
lods
aad
ja
and
mov
push
add
xchg
loopne
cmc
aad
fmuls
pop
pop
sarb
mov
into
mov
shrb
push
cmp
test
fcmovnb
sahf
xchg
adcb
sbb
xor
lods
sub
mov
sti
mov
lods
push
xchg
add
mov
or
push
or
jle
mov
in
pusha
sbb
xor
sbbl
sub
sub
out
sti
and
call
dec
push
insl
cmc
in
pop
mov
push
cmpsb
call
imul
or
or
mov
icebp
popa
daa
mov
lods
adc
sub
and
sahf
push
aas
cmp
shll
cmpsb
cmp
or
les
sub
mov
pop
and
sbb
or
iret
mov
adc
mov
dec
lds
xlat
shl
loop
cmc
dec
lods
sub
fldpi
iret
data16
push
std
mov
aas
cmp
jl
les
fnstsw
push
lods
loope
gs
jne
aas
adc
sahf
adc
mov
lcall
xor
cmpsl
pop
repz
repnz
jp
imul
xchg
add
jnp
and
mov
lahf
add
jmp
or
scas
jg
xchg
cld
sbb
movsl
push
leave
cmc
mov
fldt
andl
dec
stos
inc
inc
add
mov
scas
out
jecxz
and
loop
dec
push
cmp
shrl
sbb
loope,pt
lods
jg
cmp
mov
pushf
dec
adc
test
push
sti
mov
sub
fsts
pop
or
lods
mov
dec
xchg
shlb
push
dec
cmp
fwait
mov
sub
mov
dec
pushf
sub
jae
ja
inc
mov
mov
jb
call
mov
lret
mov
repnz
gs
scas
jg
subb
adc
shrb
mov
je
cmp
sbb
shl
sbb
push
pop
jp
nop
call
fimull
or
scas
stos
out
cmpb
add
and
sub
sbb
insl
cmp
mov
jnp
mov
xchg
or
hlt
lods
adc
adc
xchg
sub
insb
lcall
je
dec
out
mov
bound
cmpsl
cmp
lds
je
insl
stc
lods
mull
mov
aas
lret
ret
adc
test
fistps
int
pop
mov
xor
pop
xor
cltd
arpl
aas
hlt
push
sarb
mov
push
out
movsb
pop
fsubrl
pop
out
cmpsl
pop
outsb
mov
mov
inc
leave
cwtl
insb
ret
xor
int3
test
ret
cmpsb
hlt
ret
in
out
sahf
sbb
aas
xchg
sub
xchg
dec
movsl
push
push
push
xor
jo
mov
adc
or
divl
mov
lods
add
cvtpi2ps
mov
idivl
cwtl
lods
jecxz
xchg
mov
lods
imul
clc
jae
adc
in
in
sbb
stos
cmp
push
in
stos
shlb
fstpt
fcomp
dec
and
mov
mov
jge
xchg
daa
flds
fisttpll
cltd
mov
test
fcmovnb
push
xchg
sbb
stc
mov
jle
insl
scas
xor
mov
loopne
sbb
push
jae
insl
cmp
jb
enter
int3
add
psadbw
mov
inc
mov
xchg
add
notl
or
out
lds
fdivl
out
sub
out
into
sbb
and
cmp
movsl
xchg
sbb
jmp
lcall
sub
push
rol
xor
cmp
mov
cmp
sub
pop
xlat
sub
sbb
sbb
adc
popa
pushf
lcall
lock
popl
scas
inc
popf
inc
push
fnsave
int3
jae
push
frstor
subl
in
mov
jno
cwtl
or
arpl
mov
jg
out
stos
icebp
fistpl
movsl
mov
sub
std
popf
ljmp
mov
bound
fsubrl
imul
jne,pt
jge
pop
mov
adc
daa
mov
je
movsl
cmp
fldcw
pusha
cmp
fsubl
insl
xchg
jecxz
out
mov
inc
outsl
add
mov
test
aas
xchg
xchg
outsl
xchg
jp
out
xor
pop
adc
mov
ja
mov
dec
nop
daa
mov
push
loope
jb
dec
dec
add
jl
daa
out
xchg
ret
loop
imul
clc
imul
cmpsl
fwait
clc
xchg
inc
enter
test
out
mov
je
int3
xchg
mov
stos
std
mov
mov
enter
jp
adcb
fwait
loop
xchg
xchg
jo
pop
cwtl
in
or
add
fidivl
stos
pop
repz
xchg
sub
jmp
lcall
and
jp
daa
insl
jno
insl
bound
mov
mov
mov
call
xchg
jns
cltd
xor
or
stos
fdivl
mov
ss
dec
in
shlb
add
imul
sbb
push
insb
sub
pop
cmp
mov
shrl
inc
int3
arpl
inc
cmp
lods
fldcw
xlat
pop
mov
pop
cmp
dec
jo
cmp
add
sub
test
lods
inc
push
jp
pop
mov
inc
fnstcw
inc
lcall
cmpsl
push
in
pop
push
out
pop
stos
jmp
fnstsw
and
sti
xchg
cmp
pop
sbb
and
ja
das
pushf
xor
cwtl
lods
mov
testl
lret
cli
mov
sbb
xchg
bound
xchg
mov
pop
jle
xchg
mov
xchg
push
icebp
push
call
leave
daa
loopne
push
inc
adc
test
push
pop
sahf
and
and
mov
loopne
shlb
sub
out
test
imul
xchg
data16
enter
popa
jmp
adc
pusha
cmp
push
add
mov
into
push
out
insb
data16
popf
pop
jbe
push
mov
xchg
sub
push
push
sti
xchg
inc
jo
nop
mov
jle
call
shll
and
mov
inc
in
xor
aas
inc
mov
pop
xchg
adc
roll
sbb
movsl
sub
mov
mov
xchg
sub
mov
test
shrl
adc
dec
inc
imul
mov
ret
hlt
ljmp
dec
push
shrl
ret
hlt
test
scas
inc
inc
stc
mov
mov
lds
lods
divb
push
bound
loope
dec
xchg
rcrl
fwait
xor
in
jbe
push
mov
mov
cmp
cmpsl
stos
mov
in
stc
std
pop
xsha256
cmpsb
push
pusha
leave
pusha
xchg
faddp
pop
adc
fbstp
push
push
movsl
aas
xchg
in
test
pusha
sub
xchg
out
mov
in
sub
imul
cmp
pop
cmp
fsubrs
mov
ret
mov
mov
dec
mov
icebp
mov
xor
mov
sahf
xor
loop
in
or
fnsave
lds
lret
loopne
bound
adc
mov
mov
js
filds
or
sbb
pop
dec
mov
push
or
mov
mov
mov
mov
loopne
adc
adc
hlt
jecxz
pop
hlt
mov
jno
ret
test
loopne
xchg
sti
xor
xor
xor
mov
fwait
xor
outsl
push
loope
ret
pop
lea
js
aaa
lods
adc
sub
sub
dec
mov
jl
push
out
xor
inc
faddl
mov
jo
lea
xchg
sub
movsb
and
clc
repz
call
test
push
testl
ret
lock
stc
nop
cs
aad
leave
mov
hlt
nop
std
and
dec
mov
insl
inc
fcomps
lea
mov
insb
gs
mov
jbe
les
je
test
ljmp
mov
jb
cld
and
xchg
out
xlat
push
test
mov
jg
cmp
add
mov
jbe
negb
and
xchg
or
jb
pop
out
std
xor
movsb
lret
loopne
pop
or
das
lcall
sub
jle
std
dec
out
lcall
sub
ret
jecxz
xor
pop
sahf
adc
add
xor
mov
insb
add
xor
lcall
xchg
sub
int3
jns
add
sbb
dec
add
test
fmull
lods
pop
or
mov
jecxz
jle
lock
in
add
and
stc
xchg
xor
outsb
add
sbb
pop
divb
mov
fs
out
jbe
push
or
cmp
in
add
pop
adc
inc
pop
shrb
rcl
outsb
add
aam
or
add
dec
fptan
mov
jecxz
adc
lret
bound
dec
loope
loopne
in
jmp
out
test
or
push
sbb
bswap
data16
jns
out
leave
pusha
push
xchg
or
and
inc
push
add
cli
shrl
xor
aad
in
clc
pop
mov
addr16
cld
xchg
dec
sub
stc
out
test
cmp
imul
out
mov
test
pop
clc
mov
lahf
ss
adc
add
dec
loope
enter
popa
hlt
mov
cmp
out
and
mov
fbstp
leave
or
sbbl
pop
mov
call
mov
mov
shll
fists
mov
jne
jbe
jb
add
das
movsl
out
jo
jge
push
scas
aaa
testl
icebp
andb
adc
inc
insl
icebp
mov
jg
bound
jno
xor
ficoms
mov
inc
outsb
loope
lahf
fistpl
mov
dec
xchg
sub
mov
iret
dec
pop
push
in
mov
les
xchg
adc
dec
pop
outsl
push
mov
lahf
or
mov
inc
call
clc
or
mov
adc
test
sbb
rcrb
aas
mov
pop
hlt
adc
lods
lcall
sahf
mov
arpl
pop
xchg
adc
adc
mov
xor
shrl
sbb
imul
fadds
popf
or
xor
sahf
adc
lahf
ss
and
push
push
sub
pop
sub
lcall
and
cld
dec
loop
and
cmpsl
push
and
rclb
insb
add
mov
ss
sbb
jo
dec
imul
ret
pop
jae
adc
inc
adc
test
pop
jno
push
xor
mov
movsb
cmp
pop
jno
pop
sbb
xchg
mov
mov
jmp
or
mov
pusha
xchg
test
xchg
mov
mov
mov
into
jecxz
sub
cmc
cmp
ljmp
movsl
cmp
mov
adc
pop
jle
cmp
lods
les
pop
pop
mov
dec
mov
imul
xor
je
push
mov
test
sub
hlt
out
es
pop
das
inc
jg
jae
scas
inc
jp
sbb
ljmp
sti
xchg
and
mov
inc
lods
inc
jae
xchg
sub
cwtl
xsha1
cmpsb
int
jns
and
leave
pusha
and
sbb
inc
out
jae
es
mov
repz
call
mov
nop
adc
jae
fnstsw
subps
aam
jp
mov
loopne
xor
dec
ss
nop
dec
lock
jge
inc
addb
and
add
pop
xlat
sub
sbb
inc
mov
lret
aas
lock
adc
outsl
add
fs
xor
or
test
cmp
rclb
movsl
mov
aad
rorl
scas
jno
js
decb
lahf
cmp
xor
outsl
mov
std
push
sbb
xchg
scas
xchg
sub
in
xor
setnp
sti
imul
in
adc
inc
inc
shl
fists
xlat
mov
lock
or
xchg
jge
sbb
and
cmc
into
inc
into
inc
cmpb
pop
fcoml
cmp
mov
ds
enter
xchg
fimuls
rorb
addr16
pushf
mov
lcall
xchg
cmc
mov
cmpsb
push
mov
jle
arpl
lcall
imul
jbe
xchg
repnz
inc
lcall
xchg
or
inc
jge
push
je
mov
push
mov
cmp
push
out
sahf
out
xor
xchg
and
push
jmp
push
rorl
ret
xchg
xchg
jle
ret
push
dec
xchg
outsb
outsl
pop
pusha
cwtl
and
adc
in
fwait
loop
addb
addr16
out
sbb
lahf
lret
je
fists
push
mov
pop
add
jae
push
incb
out
mov
ljmp
mov
test
or
sbb
mov
xor
in
push
sahf
dec
cmp
lahf
data16
push
mov
jae
popa
stc
out
dec
mov
push
jbe
pop
test
and
insl
aad
push
in
jb
xchg
xchg
fdivrs
jp
mov
in
sub
out
dec
dec
iret
pop
scas
and
movsl
sbb
push
cmpsl
in
mov
out
lret
xor
mov
addb
cmp
jp
adc
and
insl
mov
xor
jnp
mov
xchg
pop
xchg
adc
cmp
xlat
jns
int3
inc
adc
cmp
jnp
scas
pop
add
ja
pop
dec
mov
sub
sarb
pushl
imul
pop
inc
out
cmp
cmc
sbb
stos
dec
insl
shrl
dec
mov
add
test
aam
mov
call
pop
iret
out
add
cmp
inc
fldl2e
pop
xchg
jle
mov
cltd
das
inc
daa
mov
pop
icebp
ss
push
cltd
lea
in
scas
shrl
jge
dec
jecxz
sahf
popl
mov
repz
add
outsb
mov
dec
movsb
in
pop
or
pop
pop
popf
add
xchg
out
loopne
aam
dec
mov
push
mov
shrl
pop
fstps
push
pop
sub
fs
clc
fsubl
sbb
jg
pop
push
lret
xchg
pusha
mov
mov
inc
dec
movsl
lcall
adc
aaa
cltd
add
inc
xchg
cld
xchg
sub
in
pop
mov
xor
dec
in
das
addr16
das
lock
adc
and
stos
adc
cmpsl
in
push
or
cmpsb
insb
icebp
scas
add
ss
or
fisubs
in
test
pop
sahf
xchg
dec
push
xchg
jge
and
js
fwait
xchg
into
sub
in
jae
jg
mov
cli
fisttpl
test
aas
iret
adc
ficoms
sbb
jecxz
iret
xor
add
lods
xchg
mov
pop
xchg
jno
cs
mov
adc
imul
xchg
xchg
inc
shll
mov
ss
jge
xchg
mov
push
insl
lcall
test
lods
leave
aaa
adc
mov
xor
pop
stos
mov
out
dec
shl
jns
inc
xor
test
xor
aaa
aas
cmp
lea
xor
fs
fisttps
push
sub
into
je
outsb
dec
rcrl
movsl
jp
mov
test
ficoml
cmp
cwtl
das
shld
sahf
repz
mov
in
sub
in
test
int
dec
fists
lods
rorl
fmull
add
dec
mov
inc
sbb
stos
sub
repnz
or
dec
cmp
inc
vfmsub213ss
fsubrs
fcomp
jp
pop
inc
scas
xor
sub
jbe
dec
dec
aam
xor
hlt
push
or
or
cmp
fimull
add
mov
push
sub
rorl
adc
jecxz
jnp
aaa
inc
call
int3
inc
pop
jmp
outsl
lret
pop
xor
mov
js
push
lret
xlat
daa
xchg
xchg
and
js
push
cmp
lret
dec
dec
jne
mov
addr16
rorb
xchg
mov
clc
cs
dec
xor
push
lret
leave
arpl
mov
cmpsl
ss
js
es
lds
jae
cmp
jecxz
sub
repnz
insl
add
lods
jns
cli
mov
push
or
pop
pop
shll
push
mov
push
stos
outsl
movsb
jecxz
mov
mull
rcr
push
push
lods
pushf
int3
inc
xlat
ficoml
dec
mov
cld
add
lds
lahf
stos
lret
fucomp
jno
pop
rolb
add
jg
xor
pop
push
lods
lret
repnz
lds
fmul
movsb
jl
lret
push
in
gs
add
movsb
and
push
sub
faddp
adc
dec
cmpsl
into
inc
fcompl
dec
lock
sbb
mov
fcoms
jmp
mov
jae
jmp
mov
stc
add
loop
push
int
rcr
inc
xlat
rdtsc
lret
aam
lret
fisubs
jecxz
cmpsl
pop
ret
mov
scas
loope
movsl
popa
lret
in
xchg
scas
cltd
mov
out
loopne
int
mov
ret
aad
aam
call
cmp
cmpsl
jno
adc
lret
pop
data16
inc
fstps
dec
les
adcl
in
push
xchg
inc
xor
add
popa
mov
dec
sbb
sub
cmc
iret
data16
pop
stos
gs
in
pop
pop
fwait
cwtl
andl
stc
and
or
jbe
insl
dec
ret
cmp
repnz
les
ret
push
mov
js
pop
icebp
adc
sub
push
addb
push
inc
dec
iret
inc
and
fbstp
daa
add
repnz
test
cmpb
dec
mov
push
push
pop
add
sbb
jno
push
lret
and
push
lods
aad
popa
aas
mov
push
jge
xchg
xchg
or
nop
xor
pop
pop
jno
andl
mov
out
cmpsb
lret
shl
int3
inc
iret
rclb
out
mov
jae
mov
adc
mov
popf
sub
mov
scas
dec
and
imul
pop
mov
ljmp
mov
lock
mov
or
or
push
aam
cmp
and
xor
pop
fwait
adc
ficoml
mov
test
adc
dec
mov
sbb
push
test
scas
bound
int3
mov
xor
xchg
xchg
mov
mov
inc
pop
jg
pushf
sarl
in
aaa
call
shl
push
idivl
fisubs
stc
fcmovne
popa
mov
out
pop
sar
mov
mov
lods
pop
orb
or
stos
mov
fsts
call
mov
mov
call
jmp
xor
js
iret
push
dec
mov
fisubrs
ja
lahf
repz
jae
sbb
fistpll
xchg
mov
and
popf
popa
mov
cmp
pop
out
mov
les
cltd
pop
int3
lods
pusha
xlat
sub
jae
mov
pusha
xchg
dec
les
xor
pop
jne
sub
stc
sub
cwtl
pop
scas
adc
jg,pn
jnp
push
movsl
popa
pop
es
lcall
aaa
xchg
cmpl
xor
mov
jae
fcoms
sahf
mov
inc
movsb
inc
jmp
cmpsl
pop
cltd
loope
adc
mov
fldl
xchg
fcoml
movsl
mov
and
insl
mov
dec
dec
mov
inc
sbb
push
stc
nop
push
jo
push
push
je
mov
test
dec
xchg
inc
xlat
pop
mov
push
jmp
cmpsb
into
fs
lcall
testb
pop
mov
test
dec
mov
adc
mov
jne
and
rorl
ret
cmp
xchg
mov
mov
das
or
movsl
aaa
inc
sub
push
pop
sbb
les
testl
sbb
inc
loope
pop
je
xor
jnp
jo
inc
movl
subb
aaa
pushf
cwtl
das
std
jae
sbb
and
add
out
and
out
es
dec
lea
adc
test
ret
add
int
mov
cmpsl
notl
shrb
shll
push
call
mov
ret
mov
add
stos
mov
xchg
mov
mov
sbb
popa
movsl
leave
cwtl
jb
sub
jg
mov
in
add
push
adc
cmpsl
call
jno
mov
pushf
mov
xchg
inc
jo
push
rol
pop
out
pop
scas
aas
ret
sahf
inc
and
hlt
mov
or
xchg
pop
psraw
sub
push
and
dec
and
add
inc
inc
lock
fistl
aad
jmp
fs
aad
mov
icebp
ficoml
scas
inc
inc
mov
jae
dec
lahf
stc
dec
and
push
jo
mov
mov
ret
sahf
test
cli
xchg
mov
push
push
imul
movsb
dec
xor
imul
sbbl
jp
outsl
cmp
mov
jns
divl
scas
sub
outsb
jg
lret
push
xchg
mov
stos
aas
movb
sbb
jno
fidivl
rcr
jb
jne
ret
dec
iret
pushf
xor
hlt
scas
adc
push
movsl
cs
or
push
lret
repz
out
cmp
pop
lods
loope
hlt
bound
adc
out
and
push
add
imul
inc
mov
cmpsl
pop
pop
rorb
adc
lock
call
mov
loopne
push
fstps
test
add
andl
push
aad
outsb
je
xor
dec
shll
loope
sub
mov
lock
mov
shlb
push
mov
in
lret
test
leave
mov
or
mov
fisttpl
test
jg
mov
push
loope
movsl
push
lahf
addb
loope
in
inc
mov
popf
adc
pop
insl
xchg
push
sub
dec
pop
jb
repnz
jge
push
xor
xchg
addl
pop
mov
movsb
js
mov
iret
and
loop
cmp
leave
test
in
or
sub
xchg
adc
loope
jg
push
lcall
sub
test
mov
mov
mov
pop
lret
xor
jbe
pop
jb
mov
jg
add
mov
repnz
int
xchg
pop
ljmp
aaa
imulb
xchg
cmp
dec
xchg
aam
lock
pop
xlat
adc
mov
jecxz
add
xor
inc
xlat
sub
xchg
ja
dec
mov
xchg
push
xchg
sahf
sbb
movsl
cld
sbb
mov
test
push
jmp
mov
frstor
dec
mov
lock
cmp
and
mov
stc
mov
push
fbstp
in
cmpsb
das
hlt
push
inc
test
std
and
push
mov
ljmp
lret
dec
ret
mov
lods
arpl
std
aaa
into
rol
cmpl
ficoml
fucom
sbbl
lods
dec
shll
xor
mov
jno
in
ds
lret
scas
inc
sbb
ret
imul
stc
jg
jmp
mov
sub
sub
repz
sub
mov
into
cmp
aas
xchg
loop
stos
insb
cmpsl
pop
aaa
dec
data16
pop
mov
jbe
and
xchg
sar
mov
fsubrl
jae
pop
adc
xchg
pop
loop
popa
adc
aad
xchg
pop
leave
lods
sbb
push
stos
or
mov
mull
or
call
rorb
movlps
jmp
fwait
out
mov
orl
add
cmp
orl
scas
stos
cmp
das
mov
push
aam
sbb
cs
sbb
scas
xchg
mov
jge
fists
cmp
jmp
repz
inc
fstps
mov
sarb
je
fildl
das
mov
scas
imul
inc
xchg
adc
movsl
add
pop
mov
imul
test
mov
dec
rcl
mov
cmp
icebp
mov
mov
test
and
or
arpl
jl
mov
out
inc
ret
mov
mov
mov
lea
outsb
add
pop
mov
ljmp
inc
xchg
or
rorb
imul
inc
lds
shlb
fstp
js
pop
inc
lret
adc
loopne
mov
lea
rcrl
add
push
cmpb
push
fsubrp
cltd
xchg
mov
stos
inc
jnp
sarl
or
or
ljmp
rcrl
or
jg
aas
jecxz
cmp
xchg
and
or
xchg
fcompl
jo
mov
fwait
sbb
xor
addr16
out
cwtl
les
std
lds
adc
xchg
push
adc
movsb
rorl
jnp
pusha
adcl
cwtl
sbb
xor
cld
out
mov
or
xchg
cmp
pop
xchg
and
jge
sahf
xchg
es
test
test
jbe
fxch
mov
mov
sbb
and
xchg
inc
and
inc
fcoml
in
pop
ficoms
lock
and
lock
das
loopne
mov
and
je
repnz
sub
mov
dec
or
out
xor
andb
fistpl
inc
vmovntpd
pop
sarl
loope
jle
mov
adc
mov
xor
mov
sti
test
adc
out
xchg
and
mov
lods
test
or
mov
jno
fsubl
imul
movsb
bound
clc
xchg
mov
cmp
inc
lahf
sarl
in
or
mov
jmp
aaa
idivb
jmp
clc
inc
ljmp
xchg
add
xchg
adc
adc
xchg
js
int
jns
dec
mov
jl
pop
rorl
sbb
jnp
sarl
shlb
jmp
vandnps
add
mov
adc
mov
cltd
and
ficoml
push
jge
test
lods
inc
mov
ficoms
ret
jg
sarb
cmp
mov
test
test
push
lods
inc
lret
xchg
mov
sahf
mov
adc
xchg
mov
cmp
xor
inc
ret
jl
adc
dec
xor
adc
inc
fsubs
add
cmp
xor
mov
add
or
notl
in
cli
or
movsl
cmp
test
fs
enter
popa
popf
popa
dec
rolb
insl
call
fadds
js
push
cmp
inc
les
addr16
xor
xor
lret
jg
rclb
cmc
aad
lea
clc
cmp
mov
inc
int3
xchg
jecxz
mov
cli
xchg
in
js
iret
iret
mov
out
aas
xchg
jbe
xchg
xor
pop
mov
and
jge
push
nop
mov
xchg
add
dec
mov
pushf
pop
pop
cld
dec
adc
hlt
xchg
dec
and
imul
mov
adc
icebp
add
sahf
sahf
rclb
push
fdiv
shll
push
dec
loopne
push
mov
cld
add
rcrb
sub
scas
mov
sbb
mov
out
loope
or
dec
scas
les
inc
stc
sub
xchg
sarl
jl
imul
dec
test
and
inc
ja
xchg
cmp
pop
rep
insb
movsb
xor
pop
rolb
mov
cmpsl
orl
sarb
mov
jecxz
jl
pop
inc
dec
or
cmp
pop
push
js
mov
inc
sub
fwait
dec
icebp
sbb
or
mov
pop
cld
xchg
mov
ja
shrl
dec
shl
ljmp
adc
xchg
cwtl
adc
and
xlat
outsb
dec
jno
xor
imul
outsl
mov
ret
or
stc
lock
into
faddl
loopne
mov
int
and
cmpsl
leave
mov
sti
add
mov
repz
ret
in
pop
and
lds
push
aad
mov
mov
pop
in
dec
push
pop
pushf
nop
jno
arpl
nop
push
je
cmp
shll
aas
mov
cltd
or
cs
mov
cmc
and
lret
cmp
fnstenv
cmpsb
into
ds
movl
and
sub
out
mov
and
lods
xchg
movl
mov
sahf
adcl
pop
cmpsb
sub
jno
testb
cld
fmuls
int3
aas
lods
xor
das
xlat
pop
popf
and
and
mov
jo
or
icebp
bound
call
aaa
mov
sti
test
sbb
repnz
sbb
into
in
lds
lods
sub
cli
sbb
jo
mov
incb
mov
fcos
dec
cmp
pop
add
and
ficoms
loop
or
pop
cmpl
inc
add
nop
push
and
jg
pop
addl
ja
out
pop
mov
adc
adc
inc
lods
inc
fnsetpm(287
mov
rcl
test
add
mov
push
cltd
fnsave
dec
mov
call
lds
mov
loopne
push
aam
adc
test
daa
jmp
dec
or
lods
inc
mov
stc
mov
mov
mov
fimull
stos
pop
jl
movsl
push
mov
jmp
outsl
mov
lock
jp
sub
cmpsb
imul
bound
push
jno
jge
lock
jnp
jns
pop
aas
leave
movsl
jp
pop
lret
scas
test
sub
add
loopne
pop
pushf
addr16
dec
aad
mov
pop
shll
push
xchg
pop
inc
add
mov
int
pcmpeqb
int
mov
mov
pop
jo
bound
rorl
sbb
call
addr16
push
adc
adc
pop
jb
sarb
and
cmc
dec
addl
cmp
jb
jb
xchg
out
and
and
dec
hlt
jne
les
mov
inc
and
loop
outsb
mov
mov
ret
loope
add
imul
testb
pop
rclb
mov
mov
adc
xor
mov
aad
pop
ret
jl
push
lret
pusha
daa
pop
aad
das
pop
or
repnz
das
in
js
push
mov
cltd
add
pop
jecxz
cmpl
cmpl
lea
sub
aam
outsl
push
inc
rcrl
mov
in
clc
and
fmull
push
cld
push
scas
ret
mov
mov
fistl
decl
push
out
frstor
mov
adc
adc
lret
rolb
aaa
lahf
add
xor
jecxz
mov
mov
lock
inc
jg
push
loopne
jo
js
push
ds
lds
jns
es
lcall
fists
push
pop
inc
gs
outsb
int3
inc
xchg
cmp
fwait
xor
mov
pop
sub
xchg
insb
sahf
jp
sti
cmp
nop
jp
imul
push
roll
xlat
mov
inc
cwtl
lahf
sbb
cmpsb
dec
hlt
pop
aad
outsb
xor
icebp
xlat
sbb
adc
or
mov
pop
mov
sti
lea
sti
stc
sub
std
das
lds
adcb
daa
repz
mov
push
leave
jp
lahf
jno
pushf
and
pop
dec
dec
outsb
dec
imul
mov
sub
sbb
outsb
add
cmp
repz
adc
mov
in
das
mov
shll
stos
int
xchg
leave
sarl
xlat
outsb
add
rorb
cltd
adcb
pop
add
pop
fwait
mov
xchg
repz
outsb
scas
inc
adc
cs
dec
arpl
and
adc
ret
pop
sbb
cmp
mov
orb
and
xchg
ss
fbld
lods
xchg
aam
push
mov
pinsrw
in
and
test
xor
scas
je
mov
jns
gs
and
mov
and
lds
push
sarb
je
jge
leave
fs
fstpl
jno
inc
xlat
add
mov
mov
jecxz
jnp
cmp
pop
mov
mov
add
pop
add
cmp
sub
push
cld
aaa
ja
mov
out
mov
repz
sahf
cmpsb
inc
mov
adc
cmp
neg
jne
inc
jne
jbe
cld
xchg
jl
xchg
sub
popf
sbb
sbb
cmp
and
iret
data16
push
in
jae
in
test
xchg
je
in
mov
sbb
sub
push
mov
mov
or
in
adcl
sbb
or
mov
sub
push
fiaddl
or
fnsave
fs
popf
cmp
mov
das
int
sar
out
test
out
adc
repz
jecxz
sti
lcall
dec
lds
mov
sbb
sub
nop
daa
imul
mul
les
insl
idiv
fdivl
sbb
cmpl
or
fdivl
sub
cmp
cmp
mov
pop
testb
mov
arpl
fidivs
mov
in
fstl
push
cmpsl
dec
loop
das
sbb
pusha
stc
imul
mov
xchg
cwtl
das
add
out
mov
and
fwait
mov
sub
and
into
jecxz
xchg
and
cmpsb
inc
push
mov
scas
test
shrb
sbb
movsb
dec
and
pop
sahf
or
and
xchg
cmpl
cwtl
push
in
and
cmp
ja
add
scas
cmpsb
bound
shrb
mov
jb
push
gs
aam
pop
mov
imul
jb
ss
sub
jmp
nop
jge
pop
insl
fwait
sbb
jae
and
jmp
je
sub
pop
xlat
jp
imul
jp
push
jg
xor
sarl
idivb
and
mov
clc
div
or
xor
inc
cmp
xchg
arpl
jmp
and
sbb
repnz
mov
push
test
dec
imul
jb
and
cmp
mov
xchg
popa
xorl
jecxz
sub
cmc
mov
ss
xchg
push
shrb
icebp
jge
bound
aad
or
push
or
add
aaa
cld
pop
dec
iret
and
and
mov
xchg
test
in
icebp
sbb
stos
aaa
es
jge
cmpsb
addr16
iret
loope
push
test
xchg
dec
int3
inc
xchg
cmp
fwait
xchg
xchg
loopne
xchg
gs
ja
sub
xchg
lods
movsb
dec
pop
or
push
and
testl
mov
loopne
inc
bound
dec
out
inc
pop
push
lcall
jp
ja
pop
rclb
gs
push
add
sbb
inc
sarb
lcall
inc
gs
lds
push
enter
push
mov
mov
ror
ss
bswap
mov
inc
adc
in
test
mov
adc
mov
jp
lds
enter
xchg
adc
cmp
pop
adcb
mov
sbb
sahf
loope
iret
int
sti
mov
xor
es
ljmp
push
pop
xor
call
scas
push
or
cmpb
xchg
xor
cmpsb
test
or
mov
imul
sti
push
and
push
jo,pt
xor
int3
imul
jbe
subb
mulb
push
pop
sub
lds
lds
sub
or
ret
pop
pop
or
xchg
jge
mov
jne
jl
nop
das
pop
mulb
cld
add
pop
xor
xlat
add
adc
xor
push
and
jge
mov
pop
xor
dec
mov
lea
mov
sub
cmpl
mov
pop
movsb
cmp
es
mov
loopne
rcrl
call
xchg
lods
inc
fstps
test
shrb
and
xchg
test
lcall
andl
sub
cld
adc
dec
loope
js
cmp
mov
sahf
inc
dec
push
add
mov
cmpl
xchg
outsb
int3
cwtl
cmp
je
out
and
cmp
arpl
mov
jg
insb
mov
mov
mov
movsb
lret
mov
cli
pop
fiaddl
adcb
or
jns
sbb
mov
mov
xchg
push
clc
mov
sbbb
iret
aaa
xchg
cmp
and
add
jne
hlt
push
out
jbe
in
cmpsb
lret
push
and
xor
mov
cs
orl
lahf
dec
lahf
and
mov
inc
push
insb
movsb
adc
xchg
dec
ja
pop
add
sbb
std
arpl
test
imul
lret
jg
sbb
dec
repnz
xor
dec
cwtl
cmc
pop
pushf
and
mov
shlb
movsb
adc
push
jnp
out
popa
mov
dec
fwait
sbb
xor
xchg
cmp
jl
scas
loope
xchg
cmc
add
dec
inc
ss
jmp
sti
lods
sbb
mov
shll
mov
les
out
pushf
inc
mov
daa
stos
jns
mov
sbb
nop
cmp
insl
cmp
mov
in
out
je
negl
dec
mov
mov
fisubrs
mov
mov
pop
mov
stos
fiaddl
sarb
jle
addr16
popa
sub
cmp
stos
lock
cltd
lods
push
std
mov
mov
sub
aam
mov
mov
cmpsl
movsb
repz
mov
mov
pop
cs
dec
adc
subb
dec
fsubrs
xor
sub
int
mov
inc
or
mov
leave
mov
jae
push
fcmovb
mov
mov
lds
test
pop
mov
test
jmp
test
ljmp
adc
jmp
inc
movsb
sub
std
ja
dec
and
mov
cmp
jnp
into
xor
les
imul
pop
mov
inc
out
jns
mov
movsl
cmp
sti
mov
and
inc
clc
xchg
inc
dec
cltd
mulb
xchg
xor
or
push
xor
arpl
and
leave
jnp
mov
xchg
mov
aas
shlb
mov
daa
std
pop
mov
mov
or
pop
mov
pop
mov
out
mov
sbb
mov
mov
sbb
pop
and
mov
sbb
mov
movsl
xor
mov
fidivl
lods
jmp
mov
sbb
mov
cmpsb
stos
sub
and
sub
mov
inc
sub
sub
int
ret
sbb
ja
pop
mov
rcll
in
dec
pop
and
test
cmp
lea
jle
cmpl
xchg
popa
inc
adc
outsb
jmp
cmp
or
dec
in
lret
mov
cli
pop
sti
jg
test
mov
cmp
adc
fnstsw
dec
movsl
das
jl
or
pop
bound
cld
loop
mov
add
xchg
xlat
sbb
pop
test
repnz
xchg
inc
push
add
mov
mov
ret
fidivrs
mov
cmc
sbb
cmp
mov
cli
sub
dec
in
inc
rcll
aas
pushf
lock
jns
pop
imull
jle
std
js
arpl
in
rcll
out
xchg
cmpsb
das
cmpsb
jns
sbb
mov
xchg
cli
jnp
lcall
insb
dec
loope
call
daa
sti
cmp
out
and
in
xchg
sti
add
sbb
in
dec
loopne
addr16
cmpsl
das
test
inc
adc
mov
jo
push
stos
push
lods
mov
orl
inc
pop
mov
mov
sbb
movb
mov
cmpsl
sti
pop
mov
mov
jbe
pushf
ds
test
or
out
js
repz
fdivl
imul
pusha
imulb
mov
xor
sub
jno
loope
xor
lods
arpl
sub
icebp
gs
mov
jno
bound
nop
daa
mov
pusha
notl
mov
xor
inc
enter
lods
xor
cltd
sbb
mov
dec
fs
add
mov
mov
xchg
loopne
mov
push
stos
xor
outsl
xchg
dec
jl
enter
sbb
push
sbb
insb
jae
fnstcw
arpl
gs
fadds
dec
add
lcall
jno
shll
bound
lcall
add
lock
inc
dec
adc
xorb
add
cs
out
je
cmp
out
std
sbbl
dec
xchg
aam
push
cld
ret
out
adc
mov
push
sbb
pop
push
repnz
fstpt
jle
or
daa
sbb
mov
pop
xchg
xor
out
sub
fldt
dec
xor
daa
ret
xchg
mov
in
pop
setnp
aad
sarb
pop
adc
shl
ljmp
lahf
or
les
out
adc
outsl
xchg
in
jl
xor
fadds
dec
add
repnz
mov
in
bound
loopne
in
jl
add
cli
inc
or
push
dec
les
jle
push
adc
push
icebp
data16
pop
in
jle
mov
mov
add
loope
mov
cld
pusha
jge
mov
pop
add
aad
pop
add
add
les
xor
inc
pop
jo
push
cld
mov
sub
fstpl
push
fistps
adc
pop
add
mov
jg
loope
push
imul
mov
cmpsb
je
lods
cltd
rolb
rcll
ret
mov
sbb
jns
or
ret
push
out
scas
push
adc
lret
mov
shll
pop
jnp
loop
inc
bound
inc
dec
mov
insb
xchg
jbe
pop
ja
jg
and
jl
inc
orps
adc
lea
sahf
in
push
add
lds
xlat
add
or
pop
pop
cld
xchg
jae
ret
inc
icebp
sbb
ret
ja
mov
test
sbb
mov
ret
xchg
inc
xor
xor
adc
mov
dec
lcall
or
aas
sbb
dec
gs
mov
jnp
mov
ret
adc
pop
stc
rcll
mov
mov
mov
and
cli
scas
sub
or
adc
cmp
les
or
mov
sbb
or
inc
push
pop
cli
pusha
fwait
or
dec
orb
pop
daa
add
sbb
popf
xor
push
sbb
enter
out
jmp
cmc
ja
out
out
push
aam
cs
add
insb
repz
cli
pop
mov
mov
jns
fisttpll
sub
insb
push
aas
outsb
icebp
cmp
jecxz
in
sub
pop
sahf
cmc
mov
jnp
mov
push
xor
stos
xchg
cmp
fisttps
push
rcll
mov
mov
or
call
push
shll
mov
or
cmp
fdivl
jnp
jne
movsl
out
fchs
mov
mov
sub
inc
mov
push
ja
insl
lock
gs
jmp
mov
or
jecxz
push
imull
inc
or
jl
scas
mov
stos
mov
cmpsb
xor
cmc
pop
stc
and
arpl
ljmp
xor
push
xlat
outsb
test
push
test
mov
negb
jo
sbbl
test
test
fs
sub
xor
sub
mov
in
jbe
test
out
andl
inc
lock
and
cmp
nop
cmp
add
lcall
std
popf
insb
lock
inc
orl
xor
pushf
inc
andl
or
mov
pop
enter
pop
cli
arpl
push
out
ljmp
cmc
mov
das
daa
jno
ret
orb
test
jle
push
add
add
roll
dec
pop
out
pop
lahf
cmp
cmc
sahf
cmp
arpl
into
sbb
pop
adc
inc
push
into
push
fdivrl
push
fidivrl
jb
dec
test
inc
adc
mov
mov
insl
lods
sub
in
sbb
cli
pop
inc
add
adc
add
loopne
mov
sbb
stos
mov
cli
cli
pop
adcb
push
shl
jg
jbe
jns
into
push
mov
adc
pop
and
xchg
popl
out
xor
cli
popa
dec
sbb
jp
fwait
stos
xor
shll
test
sti
bound
iret
adc
mov
orb
sub
pop
loop
jae
mov
lret
lods
xor
lds
dec
fs
pand
orl
xorb
cld
repz
push
jo
cmp
xchg
stos
push
mov
push
add
xchg
arpl
fdivr
outsl
in
xchg
pop
push
mov
push
mov
jmp
mov
mov
cmpsb
int
aad
xor
imul
adcb
fdivrl
jae
inc
add
imul
pop
test
fidivs
lock
popa
mov
dec
cmpsl
push
negl
leave
movsl
je,pn
add
arpl
stc
in
jno
sub
stos
pop
jmp
push
fnstenv
pop
stc
out
test
mov
xchg
inc
or
pop
hlt
gs
push
xor
add
aad
pop
cmp
sahf
aad
lea
adc
gs
stos
sub
sub
sbb
cmp
out
jmp
jb
cmpsl
cld
pop
jb
daa
mov
in
mov
cmpsl
divb
cmp
jne
pop
call
sbb
je
push
sub
add
mov
or
lret
mov
scas
xor
shl
imul
xor
into
cmpl
std
xlat
cmp
adc
xabort
mov
lock
xor
jno
sub
imul
xor
xchg
les
jo
clc
push
iret
mov
xchg
stos
inc
pop
mov
sarb
jg
inc
push
jmp
adcl
mov
cmp
das
mov
cs
pop
dec
push
jnp
sahf
mov
ds
inc
sub
js
scas
das
bnd
es
pusha
out
insb
inc
adc
aas
jae
xor
fidivrl
mov
insl
xor
or
sub
rorb
insb
notb
aad
popl
jmp
insl
jge
pushf
cli
pop
sbb
pop
cld
out
xchg
xchg
add
aas
mov
movsb
aad
mov
popa
repz
add
icebp
adcl
xchg
add
minps
mov
ret
test
mov
xchg
xchg
jp
cmpb
in
bound
mov
test
xlat
adcl
push
int3
cmpsb
mov
sub
stos
cmp
dec
mov
sub
ret
nop
inc
sub
fwait
pop
cmp
sub
lret
cmp
mov
sub
leave
xor
xor
mov
cmc
jo,pn
ret
call
les
das
insl
mov
xchg
cmp
rorl
scas
xor
aaa
cltd
out
jb
movsb
cld
nop
ds
mov
std
scas
in
or
fdivs
cmp
test
mov
inc
in
mov
sar
fnstsw
or
cmp
fnstcw
push
xchg
inc
cmp
repz
cmp
jecxz
pop
push
stc
aam
pop
inc
aam
inc
dec
dec
or
notb
in
outsb
inc
popl
iret
push
popf
ja
aam
adcb
xor
sub
xchg
pop
xor
mov
shlb
jge
xchg
rol
movsl
xor
adc
insb
mov
mov
mov
out
dec
push
pop
sti
mov
fdivrl
scas
mov
cwtl
or
pop
push
mov
scas
daa
or
js
scas
xor
insb
ljmp
jno
xchg
xlat
push
pop
add
imul
icebp
out
cltd
inc
xchg
call
js
js
roll
add
ss
xor
pop
dec
cltd
ds
dec
inc
adc
mov
out
sub
and
outsb
cmc
je
push
stc
lret
iret
push
sbb
push
lds
and
sbb
fs
mov
addb
xchg
mov
test
jb
sbb
dec
mov
in
add
xchg
mov
adc
and
mov
cwtl
ret
dec
fildl
mov
mov
movsb
mov
je
test
outsl
in
fstpt
inc
push
arpl
fwait
ja,pt
test
insb
fbstp
inc
fnstenv
shlb
bound
sarb
xor
in
lods
ss
dec
adc
aas
stos
xor
aad
int3
lea
add
movsb
lahf
sbb
push
jbe
gs
push
inc
push
addr16
jge
xlat
jnp
lret
jp
aas
xchg
jmp
xchg
cltd
rcrb
mov
mov
aaa
sahf
add
push
xor
cmp
lock
out
sub
clc
pushl
add
dec
adc
lods
cmp
xchg
sarb
mov
not
aad
or
pop
in
jo
out
inc
or
pop
pushf
aas
push
adc
scas
adcl
fcmovnu
in
or
gs
pop
sarb
cmp
fwait
imul
mov
popf
insl
repnz
mov
loopne
sbb
subb
rclb
inc
outsl
or
int3
js
sbb
gs
mov
js
xor
mov
cmp
out
test
in
mov
popf
aaa
xchg
sarb
ja
pop
cld
push
imul
sbb
fildl
loope
jle
mov
icebp
push
cld
icebp
icebp
pop
shr
sub
sbb
mov
mov
test
push
sub
daa
popf
xor
scas
xor
push
mov
rorl
fsub
jne
jp
sbb
push
add
aad
pop
nop
cmp
loopne
push
add
shlb
jne
push
add
add
daa
mov
pop
jecxz
aam
push
rclb
jmp
les
xlat
lods
inc
or
scas
xor
pop
sub
bound
mov
shlb
jge
test
jo
jge
adc
ja
mov
sbb
stc
int
dec
adc
sbb
sub
inc
leave
imul
pushf
outsl
in
cmp
cmp
rolb
fildll
xor
stos
jbe
fldcw
leave
add
cmp
movsl
jbe
pop
add
data16
pushf
mov
lds
and
mov
add
cli
arpl
fdivp
pop
cli
jbe
adc
int
and
stos
cmp
jnp
mov
xlat
ja
pop
dec
pop
cwtl
xchg
inc
lock
inc
adc
mov
lds
or
aad
lods
sub
push
loope
or
insl
jmp
push
hlt
fs
mov
xor
test
mov
outsl
sub
scas
inc
push
cmp
imul
jo
add
int3
xchg
cmp
and
xor
in
mov
pop
cli
pop
ffree
xchg
aad
sub
xchg
sbb
push
ror
xor
mov
cmpsl
xchg
inc
cltd
mov
cmpxchg8b
rorl
loope
rorl
lea
and
push
fcoms
or
shrl
or
xor
dec
push
movsl
and
pop
aad
or
xor
mov
rol
mov
mov
cmp
ja
gs
mov
stos
loop
mov
pop
inc
or
decb
and
xor
int3
lea
mov
adcl
cmp
push
and
dec
or
sub
jo
push
in
xchg
loope
fists
mov
repz
sbb
fucom
jmp
cmp
in
test
clc
lcall
cmpb
shlb
or
adc
mov
negl
mov
jnp
cmpsb
daa
outsl
dec
andnps
adc
adc
push
xchg
sahf
ds
nop
sbb
dec
dec
jecxz
sub
xchg
cmp
lds
test
xor
dec
fists
and
sbb
imul
dec
xor
jns
cmp
insb
push
movsb
dec
punpckldq
xor
xchg
in
sub
lea
fwait
cld
bound
dec
push
rcrb
popf
cmp
push
and
cmp
out
inc
and
outsl
pushf
jmp
bnd
in
in
aaa
mov
push
sbbl
out
inc
adc
outsl
push
sub
add
dec
mov
mov
test
add
movsb
add
scas
xor
into
and
jae
inc
or
fiaddl
add
mov
xchg
push
cmp
out
inc
sti
jne
js
jmp
mov
stos
inc
mov
adc
mov
cltd
xor
mov
mov
fs
mov
cmc
pop
scas
adc
push
mov
iret
nop
ss
lea
and
test
mov
sbb
cs
aad
jmp
jns
pop
dec
push
adc
add
ds
adcb
xor
or
repnz
push
repnz
adcb
js
xor
sub
mov
cmpsb
inc
pop
decb
mov
push
inc
mov
mov
sub
xchg
dec
adc
sub
adc
and
in
push
fs
mov
push
divb
or
push
stc
scas
pop
imul
mov
out
je
xchg
mov
mov
lret
leave
sub
mov
sbb
mov
imul
mov
clc
flds
movsb
adc
mov
jp
lea
jnp
xchg
cmp
std
pusha
bound
scas
xor
mov
mov
jp
push
les
jecxz
xchg
cmp
clc
or
pop
lock
xchg
popf
cmpsb
sub
pop
add
lea
push
push
jae
jecxz
add
jnp
push
aad
lods
aad
jns
mov
leave
xchg
inc
movsb
ljmpw
inc
pop
sbb
xchg
cmc
pop
mov
test
dec
adc
cld
dec
call
jl
pop
imul
ret
mov
xchg
sbb
jmp
jl
insb
in
pusha
scas
sub
jnp
sub
shl
fs
mov
inc
inc
jp
fcompl
push
aaa
enter
sub
cmpps
aas
push
loopne
js
clc
pop
iret
push
and
dec
aam
addl
xor
adc
cmp
adc
dec
mov
mov
cs
jno
mov
xor
aas
mov
addr16
movsb
sbb
daa
cmp
fwait
and
xor
pop
test
jns
push
mov
push
in
lds
sahf
xor
dec
cltd
roll
lret
jb
sbb
dec
jecxz
jae
pop
mov
int
loope
in
outsl
adc
mov
loopne
inc
mov
jne
addr16
mov
mov
and
fwait
sbb
adc
xorb
sarb
in
jo
sbb
jbe
insl
loope
fdivp
push
sti
imul
mov
jge
fldl
rorb
mov
je
dec
scas
xor
fisubrs
stos
daa
sahf
inc
dec
mov
cld
bound
mov
xor
inc
scas
xor
add
xchg
lahf
in
jb
les
fisubrs
sahf
inc
mov
xor
mov
mov
jp
pop
adc
inc
inc
pop
sbb
push
rorb
cld
bound
cmpsl
daa
sub
cmp
adc
in
jb
inc
xchg
push
mov
push
xchg
repz
add
lcall
jb
sbb
shr
aad
in
idiv
pop
js
iret
mov
outsl
out
rcrl
mov
or
push
jle
call
repnz
push
fildll
jb
pusha
or
xor
out
pushf
sub
loope
movb
mov
pop
repnz
adc
sahf
xchg
jmp
cmp
call
flds
sub
mov
lods
movsl
sub
mov
push
sbb
dec
add
xorl
and
loop
test
mov
push
cmp
add
and
loop
push
xchg
xchg
inc
icebp
inc
adc
popf
and
test
scas
sub
pop
std
call
div
fs
push
je
aad
push
lret
jl
cmp
pop
into
xchg
sarb
push
ss
mov
cli
adc
dec
adc
or
xchg
cmp
mov
orl
scas
jle
mov
aad
imul
add
insl
jmp
pop
xchg
inc
icebp
pop
in
outsb
jbe
lret
outsl
pusha
negl
sarb
push
clc
rclb
mov
add
cld
and
or
xchg
aaa
pop
jno
ficoml
les
mov
push
int3
shll
mov
ja
movsb
cs
xchg
ja
mov
mov
add
cld
fwait
inc
out
sbb
push
leave
insb
add
sbb
dec
enter
xor
xor
jl
outsb
icebp
jne
psrld
bound
fs
pusha
jb
das
jecxz
rorb
pop
push
daa
jo
adc
xchg
cmp
inc
xchg
cmp
mov
sahf
sbb
mov
test
call
out
ljmp
imul
jne
jbe
mov
movsb
iret
mov
enter
jle
aad
out
subl
test
shl
xchg
jae
in
push
int
jnp
jo
loope
inc
and
push
stos
test
mov
in
mov
mov
or
pop
and
dec
jp
jmp
lcall
mov
negl
mov
mov
mov
cmp
cmpsl
mov
jge
clc
movsb
sub
scas
mov
clc
loope
mov
mov
je
lcall
daa
adc
jecxz
dec
mov
test
cwtl
push
rol
mov
pop
cli
mov
cli
pop
in
xor
in
hlt
lds
mov
jle
out
lods
lock
nop
pushf
xor
add
sahf
pop
adc
scas
push
dec
lcall
js
sbb
aam
xchg
imul
lret
adc
mov
inc
jnp
mov
xor
dec
xchg
mov
jmp
in
into
xchg
mov
mov
inc
loopne
cmp
or
call
test
adc
sub
mov
lods
push
ljmp
mov
push
std
mov
pop
std
jb
sub
pop
lahf
ss
lock
addl
mov
dec
adc
popa
div
pop
jb
and
cmp
fiadds
xchg
pop
add
sbb
cld
ss
mov
jno
popl
stos
push
aaa
cwtl
inc
mov
aas
mov
xor
xor
imul
out
dec
push
or
push
fidivrl
mov
cmp
cmp
aad
mull
in
mov
movsl
adc
in
adc
dec
stos
sub
enter
xchg
inc
mov
movsb
jp
dec
pop
icebp
addb
iret
mov
scas
pop
mov
outsb
mov
gs
jge
sahf
adc
fnstsw
cmp
dec
not
rorb
icebp
stos
sub
test
xchg
dec
adc
lds
push
mov
xchg
loop
outsb
jge
sub
mov
movsl
mov
lret
pop
or
or
test
sti
fistpl
sub
lods
std
lahf
mov
dec
push
xor
lods
dec
dec
cld
gs
orb
icebp
pop
jns
adc
mov
sbb
loop
js
ret
mov
aas
mov
jl
lock
xchg
inc
out
ja
xchg
int
int3
fwait
insb
in
sbb
call
push
pop
or
pop
pop
andb
pusha
mov
ss
pop
xchg
adc
xchg
xchg
fildl
cli
je
mov
in
ljmp
mov
cmp
mov
int3
repnz
mov
stos
pop
mov
lods
xchg
mov
ds
push
js
mov
mov
inc
pcmpgtw
mov
pop
mov
xchg
inc
hlt
pusha
mov
mov
dec
push
dec
andb
cwtl
inc
adc
fidivs
dec
xchg
jne
add
lea
pop
repnz
xchg
xor
andb
jns
jae
rcl
dec
adc
dec
jo
add
xlat
xlat
jp
dec
xor
in
mov
gs
out
mov
add
jg
rolb
push
ja
aas
adc
dec
cs
push
addb
jl
pop
lock
sti
xchg
jne
sub
movl
shrb
mov
icebp
or
sbb
pop
mov
adc
roll
sbb
cwtl
cmp
inc
scas
sub
in
and
sub
dec
or
mull
push
adc
leave
xor
mov
cli
inc
lcall
loop
repnz
or
xchg
das
mov
mulb
push
rolb
lahf
aam
mov
adc
and
cld
dec
test
loope
mov
mov
pop
sub
dec
xor
adc
sti
shr
insl
out
sub
mov
mov
stos
pop
stc
pop
pop
nop
cmp
loopne
sub
les
mov
or
xor
cmp
push
mov
jbe
push
fisubs
cld
sbb
iret
xchg
jns
cwtl
inc
jbe
test
jnp
mov
inc
out
call
clc
push
mov
jmp
add
mov
mov
lea
jne
mov
fnstsw
lods
add
add
mov
sbb
std
mov
andb
pop
mov
mov
scas
dec
or
clc
xor
je
roll
test
push
xlat
addb
leave
mov
pop
ljmp
mov
sub
pusha
hlt
aas
jge
out
and
mov
inc
adc
xchg
pop
push
push
sub
xor
cmpsl
das
inc
int3
cmp
fwait
and
add
push
jns
and
and
push
ss
cmp
fadds
sbb
inc
or
dec
cmp
stc
push
cmpsb
sti
popa
test
pop
lret
enter
inc
mov
mov
add
dec
mov
mov
filds
jns
lods
xor
aad
js
mov
ret
test
cmp
xchg
pop
add
mov
push
loopne
fiadds
loope
pop
push
test
rorb
lret
adc
int
data16
andb
popa
fistl
jp
test
jecxz
push
mov
inc
nop
push
insl
popf
into
lea
jecxz
fmuls
mov
and
bswap
pop
cmp
lcall
xchg
sbb
sahf
call
xchg
inc
fs
test
insl
lods
or
mov
adc
mov
dec
pop
das
jp
pop
mov
sbb
inc
mulb
aad
sub
aaa
dec
or
jb
xchg
gs
mov
mov
nop
daa
fsubs
xlat
xchg
stc
jge
les
mov
int
pop
subl
pop
add
inc
enter
inc
push
cmpsl
cmp
xlat
jp
adc
fs
jmp
dec
movsl
sbb
in
mov
add
dec
pushf
inc
or
lcall
lods
lods
cmpsl
in
lods
xor
hlt
adc
scas
xor
xlat
mov
mov
or
and
popf
iret
iretw
xor
xchg
cmp
icebp
pop
mov
dec
adc
faddl
dec
xchg
jp
fcomp
shll
push
mov
aam
push
push
jne
jge
inc
outsl
xchg
inc
das
pushf
lods
xor
std
pop
add
imul
data16
int3
jnp
daa
add
push
ret
adcb
jnp
jge
mov
lods
stos
adc
mov
sbb
int3
dec
arpl
mov
push
jl
sar
adc
test
clc
mov
mov
jmp
xchg
cmpsb
arpl
es
dec
adc
negb
jne
int
insb
pop
add
inc
mov
test
out
cmp
sbb
mov
clc
loope
test
clc
stos
xor
push
enter
les
mov
fnstsw
adc
lods
inc
adc
cmp
mov
andl
pop
add
adc
adc
inc
in
add
lds
cmp
or
xor
cld
xor
xor
loopne
fs
mov
out
mov
inc
adc
jmp
adcb
test
daa
jbe
jno
dec
stos
das
xchg
mov
ret
sbb
cmp
inc
dec
pushf
xor
pop
out
sub
pop
add
stos
xor
insb
jg
inc
adc
push
rclb
xchg
xlat
mov
inc
adc
shlb
sarb
ja
mulb
outsb
icebp
bound
mov
jmp
inc
jne
or
push
shll
add
xor
pop
ljmp
add
jecxz
pop
repnz
or
sbb
pop
test
xor
jne
mov
movsl
in
jle
sbb
mov
shrb
mov
mov
out
imul
push
adcb
and
cmp
fistps
sub
lds
mov
pop
push
in
stos
push
jae
mov
dec
dec
or
push
xchg
and
or
out
test
lret
int3
xchg
pop
xor
mov
out
test
fbld
push
xor
mov
mov
fcmovnb
mov
mov
cli
pop
add
pop
aaa
cltd
cmpsl
xchg
cs
mov
fwait
cmp
xchg
and
mov
sbb
xchg
inc
jl
je
fidivl
mov
xor
in
dec
ud0
mov
jle
mov
pushf
push
stos
loope
push
push
fwait
inc
std
xchg
pop
in
push
mov
sarl
outsb
cmp
xchg
stos
hlt
pop
sarl
pmullw
pop
fadds
fwait
int3
dec
adc
lret
ror
mov
adc
mov
push
mov
or
popa
out
dec
js
push
mov
add
jmp
sbb
iret
stos
fnstcw
lahf
fidivrl
imul
jns
xchg
sbb
pop
fcompl
sbb
or
or
pop
add
pop
mov
fimuls
fstpt
push
dec
push
add
push
int3
lea
jo
mov
sub
dec
jmp
inc
or
push
sahf
xchg
mov
and
mov
fadds
mov
lea
fdivrl
lahf
jne
dec
adc
sarb
sbb
dec
orb
or
iret
movsb
lds
inc
addb
lret
fsubrs
and
call
cmp
outsl
push
test
adc
and
scas
xor
loopne
lods
inc
dec
add
xor
popa
mov
ret
hlt
cmpsb
mov
inc
stc
lods
inc
sub
mov
jle
inc
lahf
call
stc
cmp
pop
adcb
inc
and
jne
sahf
xor
movl
cmp
insb
lods
stc
nop
fimuls
pop
scas
xor
mov
int3
xorl
data16
push
ljmp
jno
sub
adc
or
es
xor
pop
popf
lods
inc
iret
jg
out
lock
bound
shrb
add
jmp
and
pop
sahf
enter
stos
jmp
enter
inc
fisubrl
jle
lea
mov
fistpll
adc
and
fs
inc
mov
negl
mov
testl
scas
bound
lret
fnstenv
and
push
or
cmp
cmpsb
pop
push
lods
lea
scas
xor
fistps
lods
inc
dec
add
xor
popa
lahf
push
jno
test
call
xlat
adc
sahf
inc
clc
lods
inc
sub
mov
jge
inc
fucompp
sahf
jmp
stc
cmp
pop
sahf
and
pop
popl
mov
loop
inc
fcmovb
add
clc
sbb
jb
cmp
imul
xor
std
pop
scas
loopne,pn
push
adc
int3
xorl
push
ljmp
jno
ficoml
es
xor
pop
fwait
lods
inc
int
push
call
and
outsl
push
add
xorb
push
xchg
pop
sahf
ja
inc
test
lret
leave
pusha
std
cmp
push
call
clc
mov
fnstsw
pinsrw
xor
fiaddl
mov
clc
cltd
fnstenv
mov
testl
lods
popa
mov
lret
fidivl
and
push
pop
stc
nop
cmp
pop
movsb
pop
pop
scas
mov
mov
fstpl
lods
inc
dec
push
ljmp
jno
cmpb
es
or
sub
mov
jnp
inc
fucomi
pushf
jmp
cli
cmp
pop
sahf
and
mov
mov
loope
inc
fcmovb
add
clc
push
push
fdivl
aaa
jg
imul
sbb
adc
int
xor
jo
mov
testl
or
daa
jns
xor
pop
lcall
lods
in
int3
arpl
iret
outsl
push
add
xorl
or
cmpsl
out
mov
sti
cmp
sbb
jg
mov
mov
faddl
mov
popa
adc
fiaddl
mov
clc
xchg
aad
jno
mov
clc
pop
or
xor
lods
pop
mov
lret
mov
jno
pop
push
ljmp
jno
mov
les
int3
fistl
scas
inc
dec
cld
push
ljmp
jno
cmpb
rcll
or
es
mov
jns
inc
fsub
lcall
cmp
pop
sahf
push
pop
sbbb
aas
and
aaa
loopne
inc
fcmovb
add
clc
adc
fnsave
jg
addr16
xchg
fimull
sbb
push
dec
aaa
into
jg
fnstenv
mov
testl
pop
inc
xchg
sub
xor
pop
cltd
scas
inc
lret
jp
call
push
int
push
aas
jmp
jno
mov
ret
jae
inc
movsl
in
mov
stc
ss
fsubl
jmp
cli
mov
fiaddl
mov
pop
adc
cmpb
xchg
rcr
jb
mov
pop
jmp
or
scas
stos
pop
mov
int3
cld
mov
jb
sbb
cli
xchg
xor
push
sbb
hlt
test
int
adc
push
jmp
imul
or
jmp
out
lahf
nop
daa
rorl
or
and
sub
ja
inc
fucom
cwtl
ljmp
jmp
lahf
sbb
sbbl
cmp
mov
fcmovnb
mov
stc
adc
je
xor
pop
data16
sti
xchg
fadds
sbb
or
fidivl
sahf
push
in
iret
cmp
or
aad
lods
push
inc
xchg
sub
xor
pop
xchg
scas
inc
leave
jns
jmp
sbb
jo
cmp
es
nop
or
movsb
loop
mov
clc
xor
fsubl
ljmp
insb
or
or
lahf
ss
adc
inc
jle
push
mov
arpl
xchg
rcr
jb
mov
sbb
and
nop
push
or
scas
test
mov
int3
cli
scas
fdivl
sbb
add
xchg
xor
jb
lahf
push
sbb
repnz
aaa
into
fcoms
scas
inc
inc
stc
push
in
sub
fs
dec
jae
jge
jmp
in
sahf
xchg
sub
or
scas
inc
and
mov
jbe
inc
fucom
xchg
jmp
leave
add
cld
xor
push
sbbl
cmp
mov
fmull
mov
cli
adc
je
xor
xchg
xchg
mov
fidivrl
into
jnp
pushf
push
in
int
stc
nop
mov
jae
and
pop
scas
add
es
inc
js
ljmp
jno
std
cmp
subb
daa
push
mov
mov
mov
divl
inc
fsubl
jmp
dec
test
mov
or
or
lahf
ss
adc
inc
jl
push
scas
bound
iret
mov
sbb
and
nop
push
or
scas
cmpsb
pop
mov
int3
clc
scas
fnsave
push
jmp
add
xchg
xor
or
mov
cmp
xlat
adc
in
sub
fs
dec
je
jl
jmp
ljmp
mov
and
mov
jne
inc
fucom
xchg
in
or
gs
xor
or
xchg
sub
fimull
mov
sti
adc
je
xor
xchg
aam
mov
mov
fnstcw
into
jns
fdivl
lcall
mov
jae
push
rcrl
scas
add
xchg
sub
ss
xchg
scas
inc
lds
jmp
out
fs
jb
cld
cmp
subb
sub
or
mov
int
divb
inc
fsubl
in
orl
cli
mov
or
push
mov
lahf
ss
cmova
inc
jp
push
lods
popa
gs
xchg
int
jb
mov
sbb
and
xchg
push
push
mov
scas
movsb
pop
rclb
ss
lods
fidivs
pop
push
in
dec
cld
xchg
xor
or
xchg
sub
movsb
cmp
aad
mov
inc
notb
daa
fs
gs
dec
je
jp
in
sub
xchg
sub
or
mov
and
rorb
inc
fsubp
xchg
in
add
data16
xor
or
xchg
sub
rclb
fs
cmovle
jne
xor
xchg
roll
sbb
or
iret
js
fdivl
cltd
push
in
lret
xchg
scas
jmp
or
aas
xchg
sub
ss
xchg
mov
les
jmp
in
gs
enter
cmp
subl
sub
or
mov
ret
hlt
das
inc
frstor
in
addl
sti
mov
or
add
mov
fidivrs
jns
push
stos
pop
gs
nop
int3
fdivl
mov
sbb
pop
sti
xchg
push
add
cmp
jb
mov
push
rclb
aaa
into
cmc
stos
fidivs
push
push
in
inc
std
cld
xchg
das
imul
mov
cmp
rorl
mov
inc
hlt
push
in
and
inc
je
js
in
test
cltd
xchg
sub
or
cmp
mov
push
pop
sub
lea
into
gs
dec
xchg
in
add
addr16
xor
or
test
sub
fmuls
rcrl
fs
or
sbbb
mov
mov
mov
aad
push
pop
inc
cmp
ja
fdivl
cwtl
push
out
leave
jnp
xchg
lods
ljmp
add
xchg
sub
ss
xchg
mov
ret
jae
jmp
in
pushw
jb
clc
aaa
in
test
xchg
sub
or
sahf
fsubrl
rorb
inc
ficomps
in
addl
cld
mov
or
add
sub
push
or
cmp
mov
cld
mov
fnsave
sbbl
push
cld
xchg
push
add
mov
push
rclb
cmp
hlt
test
jne
adc
cld
xchg
sub
dec
sbb
in
mov
mov
inc
repnz
in
and
addr16
inc
je
jbe
out
test
xchg
xchg
sub
or
inc
sbb
sub
mov
dec
loopne
nop
in
add
addr16
xor
or
test
sub
xlat
mov
mov
dec
fbstp
sub
std
xchg
roll
sbb
push
inc
cmp
jbe
fdivl
xchg
push
out
enter
lods
jmp
sbb
outsb
and
into
push
mov
shll
mov
lds
divl
xchg
sub
or
popf
fisubrl
rorb
into
gs
sub
ficomps
in
test
cld
scas
or
add
mov
fistpll
jbe
push
test
data16
leave
fnsave
test
loopne
cld
xchg
dec
add
mov
push
rcrl
cmp
repnz
fbstp
adc
inc
cli
std
xchg
sub
jne
cwtl
dec
sbb
jmp
cmp
rorb
dec
ds
push
out
and
addr16
inc
jne
jne
out
test
xchg
xchg
sub
push
or
dec
sbb
ret
iret
data16
stos
dec
loopne
in
test
std
addr16
jecxz,pn
mov
xorb
cmp
xchg
mov
fisubl
or
jbe
sub
sbb
std
xchg
iret
jg
cmp
sarl
shlb
je
xchg
push
out
jns
xchg
stos
out
or
int
mov
cmp
iret
push
lea
in
mov
les
xor
test
xchg
sub
or
pushf
fsubrs
rorb
iret
data16
pop
adc
test
gs
lods
fs
xchg
into
sbbl
mov
shr
mov
loopne
je
push
cmpsb
pop
decb
je
lods
test
sbb
xchg
dec
add
sahf
push
ret
mov
loopne
fcoms
push
out
inc
stc
xchg
sub
xchg
dec
sbb
jge
xchg
sub
sahf
cmp
iret
or
out
and
addr16
inc
jbe
je
out
test
xchg
xchg
sub
add
movsb
xor
push
sub
mov
shlb
test
out
test
sti
addr16
sub
or
adc
sbb
xor
shll
cmp
xchg
mov
rcrl
data16
or
jbe
sub
int
mov
mov
rol
push
add
cmp
jb
fidivs
xchg
push
out
les
xchg
stos
in
or
int3
sbb
push
cmp
dec
mov
out
mov
ret
jne
cmc
xor
test
xchg
sub
or
fwait
sub
pop
mov
inc
ficomps
out
xchg
gs
stos
arpl
sbb
mov
ret
mov
loope
jb
push
movsb
pop
push
jne
stos
xchg
dec
movsb
cmp
insb
sbb
cmpl
ja
adc
inc
idiv
xchg
sub
or
jnp
xchg
sub
pushf
cmp
int
mov
cmp
pop
out
pop
pop
shrl
inc
jbe
jb
out
xchg
xchg
xchg
sub
add
movsl
xor
mov
sbb
ret
xchg
shlb
test
loope
mov
test
loopne
mov
jg
sub
arpl
dec
fbstp
xlat
data16
or
ja
sub
int3
jl
cmp
rol
push
add
shll
fidivs
xchg
pop
out
ret
jbe
xchg
test
jbe
push
lret
sti
aaa
xchg
sub
cmp
dec
mov
out
lahf
fst
xadd
repz
test
xchg
sub
or
mov
mov
cltd
aad
roll
shlb
daa
dec
fistps
out
xchg
data16
stos
popa
or
sbb
mov
ret
mov
loope
jno
pop
mov
fbstp
test
xchg
dec
cld
movsb
cmp
imul
dec
ret
mov
loopne
aam
pop
lock
cmc
xchg
daa
bound
xchg
dec
sbb
jns
xchg
sub
lcall
cmp
pop
out
sbb
jbe,pt
jo
lock
xchg
xchg
sub
add
cmpsb
xor
mov
push
push
sub
imul
mov
fimuls
cmovge
shll
cmp
orb
repz
pop
and
inc
loope
jns
test
pop
lcall
lods
in
sbb
push
add
shlb
fidivs
xchg
pop
lock
je
xchg
cmpsb
in
push
push
enter
aaa
xchg
sub
sbb
rorb
mov
mov
fst
push
icebp
xor
xchg
xchg
sub
movsb
mov
mov
xchg
aad
ret
shlb
daa
dec
loopne
or
xchg
jns
stos
pop
or
sbb
mov
ret
movsb
cmp
dec
loope
jno
pop
mov
loopne
mulb
call
sub
sbb
pop
jg
cmp
out
mov
pop
icebp
inc
repz
xchg
and
inc
sbb
ja
xchg
sub
leave
or
out
sbb
mov
or
loope
xchg
sub
add
cmpsl
xor
mov
adc
lds
cmpsl
dec
jecxz
mov
test
fmull
or
cs
pop
mov
dec
fbstp
shll
add
loop
jns
test
push
lcall
stos
in
push
mov
int3
rclb
cmp
outsl
pop
fbstp
nop
pop
icebp
shll
movsb
loop
unpcklps
sbb
sbb
rorl
mov
mov
fcmovnbe
imul
adc
movsl
mov
mov
xchg
shrl
add
shrl
and
lock
push
movsl
mov
xchg
loopne
movsl
cmp
add
xor
pop
mov
ret
hlt
cmpsb
xchg
fcoms
movsl
cmp
push
ret
pop
jle
cmp
jmp
loope
rorl
repnz
pop
jns
xchg
inc
sbb
cs
cmp
enter
aaa
jmp
aam
mov
ja
insl
lods
repnz
mov
cmpsl
xor
mov
adc
lds
movsb
dec
jecxz
mov
xchg
fmull
pop
jl
sub
pop
popf
cmpsb
cmp
mov
les
shll
add
loop
jbe
test
xchg
add
stos
jmp
rcrl
cmp
insb
pop
loopne
push
lea
mov
fistpll
adc
sbb
divl
xchg
sub
dec
test
fcom
imul
sub
xchg
xchg
sub
scas
arpl
add
dec
loope
or
mov
push
cmpsb
mov
xchg
loopne
movsl
cmp
add
insb
ret
pop
sahf
push
push
test
mov
fcoms
add
sub
mov
dec
les
mov
shr
lahf
loop
rorl
pop
repnz
add
mov
jne
xchg
loope,pn
cmp
movl
pop
icebp
sbb
imul
repnz
lea
cmpsl
sub
dec
lds
mov
lock
fisttpl
movsl
or
mov
jns
sub
pop
lcall
mov
les
shrb
add
jns
and
sbb
lds
cmp
lret
ret
cmp
imul
pop
icebp
mov
fdivrl
push
lds
sub
dec
xorb
aad
imul
sub
xchg
xchg
cs
jnp
movsl
lods
bound
ret
mov
push
pop
dec
loop
or
mov
jno
add
les
cmpsb
cmp
xor
pop
popf
push
push
cmpl
pop
adc
cwtl
inc
mull
mov
dec
les
mov
aam
popf
loop
iret
or
lock
lea
mov
scas
cwtl
das
loopne
cmp
lds
mov
xor
pop
icebp
pop
push
aad
xchg
js
push
repz
mov
test
fbstp
jg
shrb
mov
lock
movsl
or
and
sub
pop
cltd
cmpsl
ds
jge
loope
in
lds
push
jp
and
cwtl
les
cmp
leave
ret
aaa
cmp
js
mov
mov
fstpt
or
cs
cs
adc
mov
mov
pop
icebp
cwtl
aam
push
mov
icebp
mov
xchg
cs
jp
cmpsb
stos
pusha
mov
xchg
int3
sub
push
push
dec
jecxz
push
bnd
movsl
imul
and
mov
iret
push
popa
cmp
in
je
dec
aad
pop
sahf
std
test
sahf
adc
imul
je
jmp
fsubrl
push
scas
pop
cs
subb
xor
push
sub
loope
xor
sarl
dec
fnstcw
xor
mov
stos
pop
xor
mov
lock
sub
sub
jl
cmpsb
outsb
dec
pop
dec
jae
les
test
adc
int3
ret
incb
jp
pushf
subl
cmc
negb
mov
push
mov
sub
test
jae
cli
add
cmp
sub
cmpsb
lret
dec
ret
push
cld
leave
cmp
mov
lds
adc
clc
movsb
mov
dec
mov
iret
gs
jo
fistpl
xor
xor
and
push
je
add
xor
and
popa
pop
dec
jne
ss
push
inc
add
mov
ss
das
push
lea
fcmove
aam
cmp
lcall
ja
std
mov
and
mov
mov
cmp
sahf
testb
js
lcall
lods
or
mov
scas
push
popa
xchg
mov
cmpsl
pushf
add
fs
fwait
loope
push
adc
in
int3
test
inc
arpl
inc
test
jge
fstl
sbb
xor
shlb
leave
cwtl
mov
xchg
js
inc
movl
pop
jb
jbe
push
or
inc
scas
mov
add
in
verr
pop
sti
dec
mov
pop
push
or
mov
repz
push
sub
stc
xchg
lods
out
call
mov
repz
sbb
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
sarl
sarb
or
cmpsb
push
in
mov
sti
rorb
sahf
js
stc
movsb
sbb
scas
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
in
test
inc
cmpl
notb
and
notb
jns
addb
loopne
idivb
hlt
pop
mov
and
or
