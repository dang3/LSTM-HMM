push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
xor
mov
mov
pusha
call
add
pop
push
mov
sub
push
push
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
jmp
ret
std
sub
mov
cld
add
mov
mov
shl
sub
mov
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
push
pop
jbe
mov
popf
push
decl
ret
add
pop
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
lea
lea
sub
sub
mov
pop
mov
mov
mov
mov
push
mov
xorl
pop
sub
or
xor
add
push
mov
push
push
pop
push
pop
stos
shr
stos
shr
stos
shr
stos
pop
pop
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
sub
cmp
jne
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
and
add
add
fsubs
add
scas
and
add
and
add
add
and
add
and
add
and
add
and
add
and
add
and
add
add
fisubs
add
add
add
in
and
add
and
add
and
add
add
add
and
add
add
int3
and
add
and
add
and
add
and
add
add
fisubl
add
mov
add
pop
and
add
add
add
and
add
add
add
push
and
add
add
add
add
add
and
add
add
add
add
push
add
add
add
add
add
pop
and
add
add
add
add
add
add
mov
add
mov
and
add
add
mov
and
add
add
fsubs
add
scas
and
add
and
add
add
and
add
and
add
and
add
and
add
and
add
and
add
add
fisubs
add
add
add
in
and
add
and
add
and
add
add
add
and
add
add
int3
and
add
and
add
and
add
and
add
add
fisubl
add
mov
add
pop
and
add
add
add
and
add
add
add
push
and
add
add
add
add
add
inc
imul
insl
gs
insb
outsl
jae
add
inc
gs
je
dec
popa
outsb
fs
add
xchg
add
je
jne
jb
outsb
je
push
add
push
add
outsl
jae
dec
popa
outsb
fs
add
inc
gs
je
imul
inc
add
rolb
insb
outsl
bound
dec
outsl
arpl
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
je
imul
bound
gs
add
call
inc
imul
bound
gs
add
ret
gs
jne
jb
outsb
je
jb
arpl
jae
test
inc
jb
popa
je
inc
jbe
outsb
je
add
rolb
insb
outsl
bound
inc
insb
popa
addr16
addl
jb
popa
je
inc
imul
jns
add
cmp
push
jb
jbe
je
push
jb
imul
inc
add
add
imul
outsb
je
outsl
insb
add
add
imul
jb
je
arpl
add
cmp
fs
imul
add
movsl
add
je
gs
imul
roll
dec
gs
jo
jb
add
aam
inc
gs
jb
jbe
push
jns
gs
add
add
gs
outsl
jbe
inc
imul
jns
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
sbb
insb
imul
outsl
outsb
add
add
addr16
imul
adc
inc
insb
insb
push
outsb
jb
imul
jb
gs
push
add
addr16
arpl
jo
inc
imul
js
jb
arpl
outsl
outsb
inc
add
sbb
inc
jb
addr16
jne
jb
inc
imul
push
dec
inc
jb
add
mov
push
dec
inc
gs
gs
imul
push
push
bound
je
add
insb
insb
dec
gs
popa
addr16
outsl
js
add
mov
inc
push
add
push
outsb
jb
imul
jb
gs
addb
dec
inc
gs
popa
insb
insb
outsl
arpl
push
dec
inc
dec
dec
xor
cs
insb
add
add
arpl
je
js
insb
imul
jb
gs
or
inc
arpl
jb
gs
outsb
fs
jb
popa
jns
pop
add
arpl
outsb
jbe
jb
push
inc
push
outsl
inc
arpl
jae
add
push
add
arpl
outsb
jbe
jb
inc
arpl
inc
arpl
jae
add
dec
inc
push
push
inc
cs
insb
add
jae
push
push
popa
je
add
push
pop
push
dec
inc
dec
inc
cs
insb
add
mov
loopne
pushf
xchg
push
push
bnd
popf
cltd
in
dec
xor
shll
mov
rcl
pop
cmp
sbb
jge
shl
fcmovnb
movsb
lret
daa
pushf
sarb
sbb
xor
rcpps
jle
mov
loope
fwait
pop
gs
shlb
push
cltd
call
data16
mov
xchg
jnp
enter
outsl
daa
dec
push
adc
sub
sub
add
mov
push
dec
push
icebp
pushf
adc
cld
dec
popf
fwait
cmp
push
hlt
mov
daa
xor
jae
mov
mull
daa
lods
mov
stos
lock
xor
sub
ja
xor
or
mov
shll
popf
push
aas
ret
jle
mov
mulb
call
stos
out
ja
imul
and
push
push
xchg
mov
mov
jg
fwait
push
push
ds
std
adc
test
pop
mov
xrelease
jp
clc
scas
adc
test
pop
out
outsl
test
repnz
cmp
push
aam
mov
inc
into
pop
cmp
jne
fld1
jmp
loope
mov
inc
cmc
nop
or
pushf
or
popf
out
out
and
cltd
cmpsl
inc
sbb
sbb
ret
and
cmp
testb
fbld
jb
xchg
repnz
mov
iret
pop
push
pop
mov
insl
jg
inc
addr16
bound
push
test
bound
jb
sub
je
lds
notl
cwtl
aas
push
cltd
pop
xchg
xchg
adc
sbb
jno
lcall
test
loop
adc
sbb
daa
lahf
mulb
jl
mov
repnz
sub
mov
in
pop
pop
sarb
pop
je
or
xchg
push
pushf
stos
daa
popa
mov
cmp
int3
aaa
sbb
sbb
push
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
inc
add
test
add
clc
data16
test
add
mov
or
add
addl
add
mov
add
add
add
add
add
add
add
add
add
and
add
add
andb
add
imul
sub
add
movsl
movsb
pop
lods
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
fwait
pop
xchg
xchg
xchg
or
jg
jl
jnp
lods
lods
lods
add
test
push
mov
mov
mov
les
int
int
rcl
shr
rcl
shl
rcl
iret
hlt
int
into
hlt
leave
leave
leave
repz
mov
in
mov
mov
stos
lods
lods
lea
cltd
cltd
and
jne
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
lahf
add
mov
jae
mov
out
lret
rcl
sar
xlat
fcomp
std
fcomp
xlat
fcomp
rcl
iret
dec
int3
int3
aad
aad
ror
iret
inc
ret
mov
mov
scas
iret
movsl
movsb
movsb
xchg
xchg
das
and
add
push
add
add
add
add
add
add
add
add
stos
lods
lods
add
lods
scas
sbb
mov
jnp
mov
mov
dec
leave
lret
iret
sar
aad
aam
fcom
xlat
call
fcom
call
aad
dec
int3
int3
dec
into
int3
call
aam
dec
int
mov
mov
mov
std
cmpsl
test
ljmp
pop
fs
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
push
pop
add
inc
add
pop
add
push
or
or
sbb
push
add
add
add
or
or
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
enter
int
call
rcl
call
xlat
call
xlat
call
aam
dec
into
into
dec
lret
int
int3
inc
mov
mov
mov
mov
cmpsl
cmpsl
test
mov
fwait
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
bound
pop
fs
sbb
sub
sbb
aaa
cmp
aaa
cmp
cmp
adc
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
sarl
leave
mov
call
call
aad
call
iret
iret
inc
leave
leave
inc
ret
mov
mov
ljmp
mov
popf
cwtl
xchg
xchg
lcall
addl
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
jo
jge
jge
jg
jg
jo
jno
popa
bound
push
push
push
xchg
cmp
cmp
mov
outsb
jo
nop
popa
bound
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
leave
dec
lret
lret
dec
leave
leave
inc
leave
inc
ret
ret
mov
mov
scas
scas
scas
jmp
fwait
call
xchg
xchg
xchg
xchg
fwait
fwait
fwait
in
addl
push
prefetch
add
add
add
add
add
add
add
add
add
add
add
add
outsb
jo
add
pop
or
jp
mov
xchg
xchg
xchg
incb
jp
idivb
jl
outsl
outsb
outsb
out
push
data16
jae
jle
jge
jp
jns
arpl
fs
inc
inc
cmp
sbb
sbb
adc
or
stos
lods
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
test
lcall
nop
incl
test
xchg
xchg
xchg
lahf
lahf
sahf
sti
mov
xchg
xchg
mov
jns
js
das
cs
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
popf
in
mov
mov
addb
decb
mov
loope
jo
enter
mov
test
jp
push
cmp
ss
and
jge
jge
fwait
lcall
test
lods
lods
sti
lods
lods
lods
lods
lods
stos
test
mov
cltd
xchg
xchg
xchg
decl
jg
jp
jp
jl
jnp
xchg
cwtl
movsl
movsl
movsb
scas
mov
sti
mov
mov
mov
mov
mov
scas
lods
stos
xchg
push
adc
add
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
xchg
incl
xchg
std
xchg
xchg
xchg
std
xchg
xchg
cwtl
stc
xchg
xchg
xchg
in
mov
enter
int
mov
mov
push
pop
push
rdmsr
inc
inc
inc
dec
insb
insl
insb
jl
test
leave
cltd
lcall
lcall
std
mov
decl
mov
lcall
test
ljmp
mov
std
mov
mov
mov
std
mov
mov
mov
jnp
or
add
add
pop
pop
adc
cmpsl
scas
call
fwait
xchg
cltd
incl
xchg
decb
xchg
popf
sahf
popf
std
movsb
mov
mov
in
xchg
xchg
in
xchg
push
jne
or
add
inc
es
es
dec
dec
dec
data16
jb
mov
xchg
rclb
xchg
std
mov
xchg
call
lahf
sahf
jmp
test
lods
pushl
mov
test
std
ret
mov
mov
ljmp
sahf
adc
add
add
pop
pop
adc
mov
jmp
popf
cltd
lcall
mov
xchg
xchg
call
xchg
xchg
sahf
sahf
pushf
movsl
mov
test
movsb
mov
cwtl
fstpt
jnp
push
push
push
outsl
dec
dec
dec
pop
pusha
popa
jne
jae
mov
jle
orl
int
xchg
xchg
in
xchg
xchg
testl
mov
jmp
mov
mov
pop
mov
ss
mov
js
mov
movsl
mov
mov
mov
lods
stos
lods
mov
movsb
add
pop
pop
adc
mov
ljmp
popf
decl
nop
nop
call
xchg
xchg
call
xchg
cltd
fwait
fwait
lcall
mov
movsl
movsb
stc
cwtl
lcall
nop
nop
xchg
les
cwtl
fwait
in
xchg
cwtl
out
mov
stc
xchg
test
std
xchg
jae
fwait
imul
ljmp
cmp
mov
jae
mov
outsb
ljmp
adc
lods
or
lods
or
mov
jge
mov
mov
lods
pushf
movsb
movsb
movsb
and
add
add
pop
pusha
adc
mov
lcall
nop
xchg
call
lcall
sahf
sahf
mov
lcall
xchg
xchg
call
cwtl
nop
call
xchg
lcall
fwait
sahf
stc
lahf
xchg
popf
cld
sahf
mov
xchg
imul
cwtl
dec
js
cltd
jne,pt
lcall
lahf
sbb
movsl
adc
jmp
adc
adc
lods
adc
scas
adc
mov
imul
adc
pushl
jg,pt
rcrb
imull
mov
add
add
add
add
add
pop
pop
adc
mov
lcall
xchg
xchg
lcall
sahf
lahf
jmp
movsl
mov
call
mov
decl
jle
xchg
js
cltd
jo
lcall
call
cs
decl
pop
call
push
pop
call
pop
lcall
adc
ljmp
sbb
mov
outsl
pushl
push
je
mov
and
rcrl
mov
xchg
lods
mov
lods
scas
mov
mov
movsb
movsl
add
pop
pop
adc
lods
mov
shll
lcall
mov
jmp
test
jmp
lcall
mov
decl
cmp
xchg
arpl
mov
pusha
decl
or
incl
add
add
lea
push
decl
add
cltd
add
sahf
add
cmpsb
or
mov
outsb
pushl
sub
mov
sub
ret
inc
sub
leave
cs
jg,pn
movl
mov
mov
lret
movsb
dec
mov
movsb
mov
add
add
add
push
push
adc
test
mov
jmp
test
lods
ljmp
mov
scas
lods
lods
jmp
jo
incl
or
push
incl
add
incl
push
incl
push
decl
pop
call
add
sahf
add
mov
adc
mov
cmp
dec
cmp
into
cmp
call
cmp
call
inc
xchg
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
test
mov
mov
lahf
fwait
popf
ljmp
lods
scas
pushl
mov
pushl
mov
ljmp
decl
or
mov
pop
incl
or
xchg
push
incl
add
mov
push
decl
add
popf
add
mov
add
lods
add
mov
jno
ret
cmp
dec
inc
call
inc
call
inc
nop
call
dec
xchg
fmuls
fisttpl
fisttpl
fistl
call
xchg
std
mov
mov
movsb
movsb
movsl
arpl
mov
add
add
add
lcall
adc
jl
sahf
mov
lcall
stos
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
outsb
decl
pusha
call
adc
pop
decl
add
add
xchg
add
popf
add
add
cmpsl
add
test
add
jns
into
dec
nop
call
push
cwtl
fcoms
ficoml
fcompl
jmp
pop
pushf
fists
jmp
pop
mov
jmp
pop
lahf
fadds
mov
mov
cmpsl
cmpsl
test
sahf
mov
mov
add
add
add
inc
inc
adc
js
sahf
lcall
mov
stos
lods
pushl
mov
mov
mov
mov
ljmp
inc
jne
nop
pop
call
and
xchg
and
xchg
sbb
nop
add
xchg
add
fwait
add
mov
add
lods
add
mov
data16
mov
xor
ficompl
fisubs
fisubs
jmp
cmpsb
jmp
cmpsb
jmp
addr16
jmp
push
stos
fldl
mov
test
mov
lahf
mov
add
add
add
inc
inc
adc
jae
fwait
xchg
cwtl
call
sahf
fwait
popf
ljmp
mov
pushl
mov
mov
mov
mov
jg
xchg
sub
cltd
das
outsl
lcall
daa
push
cwtl
push
call
add
fwait
add
mov
add
stos
add
mov
pushl
adc
roll
jmp
outsl
lods
jmp
outsl
stos
jmp
jo
jmp
jne
in
jae
out
jbe
in
jne
in
je
jmp
mov
mov
cmpsb
test
lahf
sahf
lahf
pop
lahf
sahf
sahf
add
add
ds
js
mov
lcall
mov
pushl
mov
mov
inc
rol
mov
cmpsl
lods
lcall
xor
mov
cmp
sahf
xor
lcall
call
add
add
test
popa
pushl
add
add
leave
sbb
fistl
in
mov
call
jge
in
xorb
repnz
hlt
test
push
cmpb
aad
mov
test
daa
lahf
lahf
mov
add
add
add
pop
add
xor
pop
jne
jle
out
test
xchg
xchg
xchg
pushl
mov
mov
mov
ret
ret
pushl
insb
mov
lcall
jmp
aaa
js
fwait
sbb
xchg
add
pushf
add
mov
add
scas
add
mov
data16
mov
add
shlb
cmp
mov
in
mov
push
lea
push
nop
ret
nop
ret
push
nop
ret
stc
xchg
clc
pop
out
mov
clc
lods
stos
test
xor
popf
sahf
add
add
add
aas
add
xor
push
inc
dec
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
mov
sar
inc
ret
ret
mov
jge
lcall
cmp
movsb
xor
cltd
push
pop
lcall
add
add
lods
add
mov
mov
add
movl
mov
call
xchg
fwait
push
fwait
fwait
lcall
negl
int
sti
popf
into
cld
cwtl
leave
push
xchg
ret
fbstp
cli
mov
mov
lahf
lahf
sahf
aas
xchg
xchg
nop
add
add
add
aaa
add
das
or
cmp
outsb
push
dec
dec
jecxz
pop
pusha
call
mov
mov
mov
mov
inc
mov
inc
mov
mov
ljmp
dec
xchg
movsb
sub
lcall
jmp
add
mov
popa
mov
add
leave
add
rorl
jne
fiadds
in
mov
push
movsl
into
push
movsb
into
stc
cmpsb
int
cld
test
cli
cmpsl
sar
cld
test
iret
cld
stos
sar
cld
test
jmp
mov
dec
enter
mov
into
lahf
lahf
lahf
dec
xchg
xchg
xchg
add
cltd
cltd
add
add
add
xor
sub
inc
inc
inc
bound
pop
xlat
je
jb
mov
rol
rol
mov
inc
leave
inc
rol
mov
cmpsl
jmp
push
mov
lods
dec
xchg
lahf
sbb
lcall
add
add
mov
arpl
mov
add
into
add
add
loopne
jge
out
pop
cmpsl
push
sahf
leave
cli
lods
sar
sti
mov
sti
scas
sar
sti
scas
sar
std
mov
mov
mov
std
mov
mov
mov
push
cmpsb
jmp
mov
call
enter
mov
fisubl
xchg
xchg
or
add
add
xor
sbb
dec
dec
outsb
outsl
outsl
mov
fcom
fcom
jmp
xlat
not
rcl
std
lret
dec
leave
lret
leave
lret
leave
leave
inc
leave
mov
scas
jmp
push
mov
lods
cmp
jmp
add
lods
add
mov
mov
add
rolb
jo
add
fiadds
jae
ljmp
sti
scas
aad
std
mov
cld
mov
fdivr
std
mov
cld
mov
fdivr
std
mov
fcos
clc
mov
jmp
mov
call
leave
int
mov
mov
xchg
or
add
add
xor
add
pop
pop
pop
or
enter
loop
out
jmp
test
in
leave
fsub
fsubp
fdiv
fsqrt
fdivr
int
into
mov
imul
jmp
add
mov
arpl
mov
add
lret
add
add
faddl
ja
jecxz
js
out
xor
cli
mov
loopne
std
loop
inc
inc
fdivrp
std
leave
fdivrp
dec
fdivrp
dec
fdivrp
dec
std
leave
loopne
cld
mov
enter
sar
mov
mov
xchg
adc
add
add
incb
incb
std
incb
repz
or
in
in
pop
in
out
in
sub
in
in
dec
ljmp
xchg
out
jmp
aad
jmp
mov
xchg
test
js
movsb
adc
jmp
popa
pushl
add
movb
dec
add
add
fiadds
ja
call
inc
popf
cld
mov
in
cld
int3
in
std
int
dec
in
dec
in
dec
loope
std
int
call
in
dec
loop
shl
std
shl
cld
ret
fdivr
out
mov
xlat
inc
ret
out
test
test
xchg
xchg
xchg
sbb
lcall
incb
incb
idiv
testb
repnz
add
hlt
icebp
push
out
lock
pop
out
repnz
cmp
out
out
pop
fsubp
loopne
mov
xchg
sti
sahf
and
jmp
add
lods
add
mov
gs
mov
add
rolb
jb
flds
jbe
jecxz
jnp
jmp
jl
negb
cld
mov
cld
shl
dec
in
shr
std
shr
std
shl
call
call
fsub
std
fldl2e
std
shl
push
ret
in
fcos
leave
lret
lret
repz
test
and
xchg
cwtl
add
sti
add
testl
repz
or
shll
mov
je
negb
add
cmpsb
add
scas
add
mov
add
lret
add
rolb
jo
faddl
ja
call
sbb
cli
ret
loopne
cld
fsubr
fldpi
std
fucomi
fucomi
std
fldl2t
std
fucomi
fsubr
fucomi
fsubrp
std
fsubrp
jmp
jmp
cld
shl
push
ret
call
iret
sar
lods
lods
lods
lods
xchg
xchg
xchg
jo,pn
outsl
add
add
mov
loopne
add
mov
cltd
repnz
pop
lcallw
add
mov
mov
add
int3
add
add
fiadds
jae
call
sub
std
aam
fucomip
std
fucomp
std
fucomi
std
fsub
std
in
std
shl
cli
shl
cld
shl
push
into
clc
int3
fdivrp
cmc
ret
in
mov
fcos
xlat
fdivr
mov
mov
fwait
lcall
lcall
add
xlat
xlat
add
mov
mov
lcall
add
mov
fs
mov
add
roll
outsl
fadds
jb
loope
js
jmp
xor
enter
cli
int3
loop
cli
idivl
aam
repz
sar
repnz
into
jmp
mov
sar
jmp
shl
ljmp
in
mov
mov
xchg
add
add
add
int
add
mov
cmpsl
loopne
ss
mov
add
mov
addr16
mov
add
into
pop
jno
rorl
fsts
ja
loopne
cmp
inc
cwtl
ljmp
ljmp
std
loopne
ret
cld
fidivs
neg
mov
enter
int
rcr
fmulp
xlat
shl
xlat
fcmovnb
out
loop
jmp
call
popf
call
lret
lods
lods
lods
adc
cmpsl
test
add
ret
roll
ret
ret
sahf
stos
aam
dec
cmp
sbb
cmpsb
push
insb
scas
es
mov
jns
mov
dec
test
ret
stc
leave
gs
test
mov
out
mov
rcl
mov
int3
rcl
lret
mov
int
mov
fcom
aam
fidivl
fnstsw
gs
in
call
out
jmp
icebp
div
sub
div
and
icebp
lock
fcmovnu
or
mov
into
add
add
add
sarl
mov
xchg
lock
xchg
ljmp
mov
sarb
stos
mov
ret
cmpsl
mov
mov
enter
int
addr16
rcll
rcl
dec
aad
inc
rcl
aam
aad
fsubs
ficompl
fstl
fsub
loop
loope
in
out
jmp
add
cli
testl
std
std
add
incl
mov
mov
shrl
mov
mov
mov
mov
mov
mov
mov
mov
rcll
ret
inc
ret
xor
int3
lret
daa
int
iret
and
aad
sbb
aam
adc
aam
or
aam
aam
add
add
add
in
add
in
jmp
lret
aad
std
incb
mov
mov
add
rol
ret
sub
mov
mov
push
rol
or
leave
movl
into
leave
add
aam
add
add
add
fcom
add
aam
add
fsub
add
fiaddl
loopne
loope
loopne
in
out
repnz
repnz
incl
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
mov
les
mov
mov
ja
test
test
pop
add
add
add
add
add
add
scas
mov
adc
mov
aam
into
shr
aam
aam
rcl
sar
iret
ror
cli
int3
int3
lret
stc
lret
lret
mov
mov
lods
fwait
xchg
xchg
xchg
dec
ds
add
add
add
add
add
add
add
jg
addl
push
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
rol
mov
sar
xlat
xlat
aad
xlat
xlat
xlat
call
ror
dec
into
iret
dec
int3
lret
mov
mov
lods
stos
stos
icebp
cwtl
xchg
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
je
jne
jae
fs
dec
dec
inc
cmp
sub
sub
aaa
aaa
xor
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
mov
ret
lret
int3
int3
call
rcl
call
rcl
dec
lret
vshufpd
rol
mov
mov
stos
stos
stos
sahf
popf
lahf
xchg
cwtl
xchg
jmp
jo
xchg
push
push
adc
xor
add
add
add
add
jg
addb
jl
test
jp
imul
pop
pop
pop
movsb
push
push
push
stos
push
insl
outsb
push
pop
pop
cmp
cmp
pop
jno
jno
mov
scas
pop
mov
mov
mov
mov
sar
mov
mov
mov
jmp
lcall
xchg
xchg
xchg
lcall
xchg
dec
dec
dec
dec
adc
adc
add
add
add
add
add
pop
lcall
pop
popf
cwtl
cwtl
fcoml
addb
jnp
jnp
jp
jns
jnp
jp
jns
jns
jae
jae
push
push
push
cmp
je
pushf
popf
sahf
mov
scas
lods
repz
scas
scas
sti
lods
lods
scas
std
cmpsl
test
std
pushf
pushf
sahf
call
test
call
mov
scas
jmp
scas
scas
leave
movsl
movsb
movsb
cltd
jae
je
adc
adc
add
add
add
add
insl
outsl
outsb
pop
stos
movsb
stos
loop
lcall
mov
nop
sti
xchg
xchg
xchg
lock
nop
xchg
fimuls
mov
jp
pop
and
inc
inc
dec
outsb
jo
orl
cltd
lcall
lea
xchg
xchg
xchg
lcall
movsl
cmpsl
mov
mov
mov
scas
mov
mov
mov
cmpsb
movsb
cmpsl
pop
jg
jg
pop
popa
pop
or
lods
mov
movsl
sahf
movsb
decl
lea
cwtl
cwtl
cwtl
std
lahf
sahf
lahf
sti
mov
cltd
lcall
push
push
jo
pop
push
outsl
imul
jg
subb
mov
std
xchg
mov
ljmp
jle
pushl
pop
mov
mov
mov
mov
out
scas
stos
insl
stos
stos
stos
or
add
add
add
add
popa
or
mov
in
mov
xchg
call
xchg
lcall
cwtl
lcall
popf
popf
cli
xchg
xchg
xchg
jmp
xchg
xchg
aam
lea
xchg
jbe
notb
pop
jg
sahf
dec
jnp
movsb
inc
jp
scas
aaa
js
scas
sub
mov
outsl
pushl
sbb
mov
mov
scas
scas
jle
mov
add
add
add
popa
popa
popa
or
mov
in
mov
cwtl
lcall
mov
mov
decl
addb
xchg
jno
cld
cwtl
pop
test
xchg
dec
js
xchg
cmp
xchg
sub
xchg
sbb
cltd
punpcklwd
sahf
or
imul
mov
insb
pushl
pop
jae
mov
pop
nop
mov
lods
scas
xchg
lahf
popf
sahf
adc
add
add
pop
pusha
pop
or
lods
mov
test
mov
cmpsl
ljmp
test
cltd
decl
cmp
mov
decl
adc
xchg
push
decl
add
xchg
add
pushf
add
cmpsb
or
mov
jae
mov
jle,pn
les
jg
xor
dec
pop
xchg
inc
test
divl
test
sbb
add
add
pusha
pop
popa
or
movsb
test
cmpsl
mov
test
scas
scas
mov
mov
mov
mov
mov
movsl
cwtl
lahf
decl
adc
mov
push
incl
add
decl
add
xchg
add
sahf
add
add
mov
insb
inc
ss
inc
mov
into
inc
mov
roll
call
inc
xchg
fimull
call
arpl
stc
mov
mov
mov
std
add
add
add
pusha
or
popf
mov
ljmp
mov
mov
mov
mov
mov
lods
mov
jnp
pop
arpl
nop
sbb
pop
pop
decl
add
xchg
add
lahf
add
add
scas
add
mov
dec
xchg
call
pop
lcall
pop
lahf
jmp
pop
mov
fisubrs
dec
test
cld
mov
mov
cmpsl
lods
cmpsb
xor
add
add
dec
pop
jge
jl
pushf
xchg
cwtl
jecxz
lahf
mov
pushl
mov
mov
jmp
cs
lcall
and
xchg
adc
xchg
add
lahf
add
add
mov
arpl
mov
xor
jmp
insb
test
ljmp
out
jno
jmp
cmpsl
mov
shrl
addb
dec
dec
dec
pop
insl
insl
push
mov
xchg
ljmp
mov
mov
mov
jbe
lcall
cmp
popf
sub
cwtl
or
pushf
add
mov
add
mov
inc
or
call
inc
xchg
jmp
jp
jmp
test
push
xchg
push
mov
mov
cmpsb
test
cltd
fwait
fwait
add
sub
sub
push
push
dec
pop
pushw
loopne
mov
mov
mov
mov
xchg
ljmp
sub
fwait
pop
pop
jmp
add
mov
gs
mov
adc
mov
push
xchg
xchg
push
xchg
enter
enter
lret
clc
cwtl
jmp
stos
inc
mov
lods
popa
mov
add
add
xor
pop
pop
pop
pop
fisttpl
mov
mov
ret
ret
ret
ret
pushl
push
xchg
lods
dec
cmp
and
sahf
add
popa
pushl
dec
add
fldenv
cmp
jnp
push
movsb
lret
push
test
iret
sti
test
iret
cld
lods
sar
stc
cmpsb
lret
jmp
mov
dec
mov
stos
jne
popf
pushf
or
add
add
dec
dec
push
aaa
je
jb
test
into
into
out
iret
int3
cmc
leave
lret
lret
lret
enter
mov
bound
mov
add
mov
arpl
rolb
dec
add
flds
jmp
xchg
mov
std
mov
xlat
std
mov
fdivr
mov
sar
ljmp
repz
lods
mov
add
add
add
add
or
rcl
dec
jecxz
loopne
fistps
fcom
out
shll
test
je
cmpsb
or
scas
add
mov
add
add
or
icebp
dec
mov
sti
loopne
std
loopne
inc
inc
std
leave
fdivrp
dec
loopne
sti
lock
leave
divb
sahf
sahf
sbb
add
add
incb
std
std
add
jmp
or
out
in
sbb
jmp
xor
loop
loop
les
mov
mov
add
pushl
add
int
outsl
fildl
jne
ljmp
cld
ret
fdivrp
sti
shl
call
in
std
shl
std
shl
std
xlat
out
std
xlat
call
push
enter
lret
sar
mov
mov
add
incb
incl
cld
std
pop
aam
push
mov
pop
xchg
popf
or
ljmp
add
ret
add
roll
outsl
filds
jbe
out
and
std
shl
fsubr
std
fucompp
fld1
fldl2t
sti
fsub
xlat
out
cld
aad
push
enter
iret
sti
mov
sahf
popf
das
add
add
int3
int
or
bound
lods
add
mov
add
aam
jae
loopne
jns
out
xor
stc
int3
loop
cli
lret
loopne
test
repz
out
ret
out
in
shl
ljmp
ljmp
test
add
add
add
aam
push
mov
jae
or
imul
sbb
int
jge
aad
xchg
loopne
fwait
clc
loop
mov
out
in
lret
jmp
fidivrs
leave
sarl
jecxz
ficompl
out
call
rorl
mov
add
stos
stos
stos
add
xchg
mov
ljmp
xchg
fidivrl
andb
int3
mov
ret
ror
aam
int
ror
int
ror
rorb
xlat
fdivrs
fnstsw
loopne
in
fisubs
jecxz
repnz
jmp
or
std
std
std
add
add
add
std
incl
mov
mov
outsb
scas
mov
lods
mov
push
mov
mov
xor
leave
and
rcl
pop
rol
adc
rcl
or
loopne
or
int
add
std
add
std
add
add
add
into
into
shufps
or
int
int3
add
std
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
cltd
lcall
rol
enter
mov
enter
sarl
mov
insb
lods
stos
stos
xor
jne
add
add
add
add
add
add
add
add
add
add
add
add
stos
lods
stos
add
mov
jmp
aam
std
rcl
sar
int
int
mov
stc
mov
test
sarl
gs
sbb
add
add
add
add
add
add
add
add
jb
jae
push
inc
inc
das
cs
inc
and
add
add
mov
mov
cmpl
ret
dec
into
int
aad
aam
into
iret
iret
inc
enter
mov
scas
lcall
mov
push
add
add
add
add
jne
je
xchg
adc
arpl
mov
addr16
outsb
insl
insl
jb
pusha
pusha
cmp
pusha
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
lcall
cwtl
xchg
lds
jb
daa
daa
and
pop
add
add
jb
je
pushf
xchg
pushf
mov
test
clc
xchg
test
addb
push
push
push
inc
mov
fwait
into
movsb
mov
mov
decb
mov
popf
fwait
pushf
ljmp
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorl
cmpsl
test
mov
xchg
xchg
xchg
cld
pushf
popf
sahf
cmc
cwtl
lcall
push
push
push
imul
jle
mov
xchg
notl
mov
pushl
xchg
mov
test
call
lods
lods
lods
add
add
add
test
lods
cld
xchg
xchg
xchg
call
fwait
cltd
call
lcall
xchg
mov
loope
jne
out
nop
bound
std
pushf
inc
jne
cmpsb
ss
scas
sub
mov
jno
mov
insl
pushl
pushf
lods
lock
mov
imul
int3
add
xchg
pop
scas
movsl
lods
test
sahf
sahf
lahf
jmp
movsb
call
push
decl
inc
jb
mov
imul
push
call
or
or
ljmp
and
mov
sub
ret
aas
xchg
rcrb
subl
je
push
mov
movsl
cmpsl
cld
test
scas
scas
pushl
mov
decl
or
mov
push
decl
add
mov
adc
shll
call
inc
mov
inc
call
push
xchg
dec
cwtl
mov
mov
mov
movsl
movsb
movsb
push
add
add
push
push
cwtl
xchg
xchg
test
mov
scas
pushl
mov
ljmp
outsb
call
push
pop
decl
add
mov
add
mov
push
xchg
fstpl
loopne
mov
jmp
movsl
call
fwait
mov
mov
mov
cmpsb
cmpsb
cmpsl
pop
add
add
popa
bound
mov
fwait
cld
mov
scas
mov
mov
mov
fwait
dec
jl
pushf
xor
cltd
and
xchg
pop
pop
lcall
add
mov
xor
jmp
jp
out
jge
out
jg
fstps
mov
mov
add
add
dec
adc
addr16
mov
mov
mov
mov
ret
mov
bound
lcall
add
pusha
pushl
pop
insl
fimull
out
mov
push
xchg
push
xchg
enter
enter
mov
movsb
sub
aas
inc
inc
adc
push
xchg
mov
mov
inc
ret
ljmp
dec
cmp
pop
push
pushl
add
adc
ljmp
clc
stos
sar
sti
lods
sar
sti
scas
sar
cld
lods
sar
ljmp
fldenv
std
std
add
xor
add
scas
mov
mov
mov
aam
aam
out
lret
leave
lret
cli
mov
mov
jmp
fs
add
aad
jae
call
mov
mov
cld
rcr
inc
fdivr
cld
ret
lock
ret
in
cmpsl
test
addl
lods
add
jmp
or
out
out
loop
in
fcomp
mov
add
mov
add
fldl
jne
lock
xchg
cli
scas
aad
cld
into
in
shl
std
shl
call
in
std
shl
push
enter
enter
scas
scas
popa
cmpl
add
incb
std
std
push
lret
int
sub
sahf
sbb
lods
add
mov
add
jecxz
jns
hlt
push
movsl
cld
loopne
jmp
cld
aam
std
aam
cli
shl
push
fsin
fmul
shl
mov
mov
xchg
xchg
xchg
pop
mov
cld
lods
add
imul
push
je
fstpl
cmp
lock
shl
call
mov
shl
out
aad
call
fcmovnu
scas
ret
ret
les
lcall
sarb
xchg
and
push
mov
shll
ja
mov
mov
lret
int3
outsl
fxch
into
pop
xlat
dec
jecxz
fistpll
call
out
in
sbb
rol
add
mov
lods
arpl
lods
mov
ret
cs
mov
lret
sbb
fstp
bswap
int
or
aam
push
incb
cmpb
std
incb
lods
std
add
incl
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
out
cwtl
and
pop
xor
or
mov
pop
xchg
aam
call
push
sbb
rcrb
je
jae
mov
jecxz
xor
movsl
int3
icebp
xchg
dec
arpl
mov
mov
cmp
add
xchg
cli
repnz
jle
or
sub
ds
sbb
inc
pop
rorl
aaa
es
loopne
cmp
adc
nop
mov
add
xchg
scas
jle,pt
jb
enter
aas
pmulhuw
out
leave
cmp
inc
mov
xor
into
enter
loop
data16
xchg
add
fninit
and
shlb
test
pop
cmpsb
pop
xchg
fucomp
mov
outsl
jno
push
cs
add
dec
fcmovnbe
loop
jb
push
push
xchg
shrb
xchg
push
dec
lret
mov
jl
sbb
adc
enter
add
cwtl
jge
cmpsb
push
sub
jb
mov
sub
push
or
fmulp
clc
aaa
out
test
sbb
js
xlat
pop
sbb
insb
cmp
aaa
enter
imul
and
comiss
in
jg
scas
pop
fwait
sub
cmp
loopne
xchg
push
cmp
jmp
lea
sbb
mov
xlat
mov
sub
hlt
adc
lahf
es
popa
lods
add
xchg
in
jmp
lea
fists
pop
scas
dec
inc
ja
test
shll
mov
xlat
arpl
mov
insw
out
fistl
pop
sar
ret
lea
add
dec
out
inc
mov
pop
mov
scas
stos
xchg
stos
pop
adc
adc
mov
push
mov
test
jnp
jle
js
clc
or
test
mov
stos
inc
push
cmp
push
dec
fiadds
clc
roll
loope
test
addb
sbb
jecxz
iret
push
rcrl
push
jne
fs
aam
pop
jle
and
dec
cmp
cmp
push
movsl
shlb
ss
mov
xchg
push
cwtl
enter
lahf
pop
push
popa
pop
add
mov
data16
add
nop
roll
enter
pop
and
mov
clc
mov
aas
iret
xor
repnz
in
push
je
stos
clc
inc
stc
out
mov
mov
mov
cmpsb
fidivrl
mov
fsubl
cltd
cs
movsl
dec
or
bnd
pop
or
push
stos
jl
rcll
sub
or
pop
stos
jbe
shl
sbb
test
pop
mov
mov
mov
pop
daa
mov
jge
mov
mov
xor
xor
cmp
mov
mov
xchg
stc
dec
or
sbbb
insb
clc
push
outsb
in
cmp
cltd
inc
jmp
cs
sbb
xchg
inc
sbb
adcl
loopne
test
add
jbe
iret
sub
insb
es
adc
nop
sbb
cmpl
xlat
xchg
pop
mov
shrl
dec
push
lret
ret
add
dec
sbb
imul
ss
rcrb
push
add
xchg
arpl
fcmovnu
push
mov
push
adc
ret
rol
xchg
cmpsl
push
loope
fdivrl
push
cmp
jg
mov
ljmp
or
addr16
hlt
jne
xchg
push
in
sub
push
test
cmp
ffreep
inc
cmpsb
add
or
xor
xchg
loope
mov
dec
xor
dec
icebp
xchg
jp
adc
xchg
jle
xor
push
lock
cmpsb
xor
cltd
lcall
fidivrl
in
scas
sub
adc
dec
push
push
xchg
mov
fcmovne
bound
mov
mov
jnp
push
or
out
adc
das
xor
xchg
jae
stos
sub
insl
adc
lds
adc
push
lds
mov
lea
jb
ror
mov
enter
pusha
shll
rorl
je
fwait
test
scas
pop
cmp
jmp
loopne
jae
sbb
mov
jno
test
mov
pusha
mov
lret
inc
mov
repz
mov
xor
jne
inc
popf
inc
sub
dec
adc
cmp
into
adc
adc
inc
mov
lock
and
mov
testb
dec
sahf
dec
mov
loop
insl
inc
mov
jge
sub
sbbl
rcrl
inc
dec
incl
and
aas
loop
pop
inc
subl
dec
ds
cmp
pop
mov
xchg
sahf
mov
mov
lret
add
mov
js
je
cmp
push
inc
xor
mov
lods
and
push
insl
rclb
sbb
jae
add
jmp
push
cmp
bound
in
xor
mov
ret
sbbb
scas
pop
scas
lret
ret
stc
test
loope
pop
popa
sbb
sti
sti
sbb
or
icebp
cmp
jecxz
gs
and
cmpsb
cmp
add
pop
test
mov
adc
xor
mov
adc
test
xchg
out
ja,pn
mov
imul
outsb
pop
lret
bound
cmp
iret
inc
movsl
cmp
jnp
mov
repnz
mov
loopne
out
movsl
outsb
das
pop
lcall
fisubrs
arpl
sbb
imul
insl
add
cmp
into
and
sbb
jle
adc
xor
outsl
push
push
or
jbe
mov
ficoms
insl
rcr
mov
popf
xchg
adc
xchg
fistpl
gs
xchg
adc
push
jmp
in
adc
sbb
in
pop
ja
and
mov
gs
dec
mov
xchg
add
xor
mov
jle
aad
mov
pop
repz
sub
push
mov
lret
inc
push
in
jno
push
xor
pop
bound
es
out
mov
lods
inc
add
pop
pop
int3
adcb
mov
mov
sub
sbb
movsb
addl
fcomip
ss
xorl
xor
sbb
mov
shll
in
aad
dec
ret
adc
in
sub
sbb
mov
push
mov
popf
jmp
out
ss
sahf
addr16
outsl
push
cmp
lea
fiaddl
or
popa
clc
pop
add
popa
xor
push
mov
call
xor
cmpsl
push
popf
fsubs
push
push
stc
and
sub
jo
dec
inc
fnstcw
mov
popf
pusha
test
out
jle
and
lret
mov
ret
push
jmp
adc
fsubrs
imul
inc
out
mov
mov
loopne
fs
fbld
jae
iret
and
adc
jae
add
test
movsb
xchg
pushf
jecxz
xchg
mov
mov
mov
ret
movsb
jl
push
icebp
repz
sbb
jecxz
xor
adc
andl
push
inc
jle
add
xor
hlt
mov
lahf
jg
mov
jb
sub
popf
pop
aaa
adc
cli
sbb
lods
pop
daa
add
or
fstpt
sbb
lret
bound
dec
jmp
fnstsw
fbld
hlt
and
sbb
fidivl
mov
clc
leave
fdivrs
push
sbb
ds
xor
jg
xchg
mov
mov
scas
add
fnstenv
and
testl
mov
fnsave
lret
xchg
sub
push
call
mov
ret
int
cmc
aam
and
pop
in
orl
inc
pop
push
or
cmp
pop
jp
xlat
mov
ret
and
cmp
fdivrs
push
aad
daa
inc
push
mov
shlb
push
out
or
xchg
fsub
sub
fdivrs
out
scas
stc
cmpsl
ds
sbb
jge
mov
sbb
add
push
lods
mov
les
cmpsb
xlat
xchg
sub
inc
testl
inc
std
fnstenv
out
fwait
sub
in
test
movsb
aam
push
cltd
xor
mov
pop
jbe
mov
dec
loopne
sub
int
fwait
xor
out
aad
loopne
std
xchg
testl
pop
test
push
call
xchg
and
dec
loop
mov
ljmp
cld
nop
daa
es
add
hlt
jno
inc
arpl
inc
fcomi
outsb
jbe
lcall
jecxz
test
xchg
sbb
mov
add
iret
and
ror
mul
pop
repnz
sub
cwtl
add
pop
hlt
pop
cwtl
outsb
add
sub
lret
popf
int
fdivr
mov
pop
scas
push
daa
mov
test
push
lret
bound
lea
mov
pop
fdivl
sbb
mov
jle
xor
or
cmovb
xor
cmp
inc
jae
pop
cwtl
data16
inc
fldenv
sbb
inc
mov
or
lea
lret
pop
hlt
repz
out
xchg
mov
lret
and
push
aas
inc
ss
jno
adc
dec
jp
loopne
jmp
test
mov
insb
add
mov
andb
sbbb
inc
aas
cmp
stos
xchg
pop
jp
dec
xor
mov
adc
mov
adc
je
jae
and
dec
xchg
inc
and
sub
int3
arpl
mov
cmp
sti
xchg
inc
pop
push
dec
in
cmp
lahf
enter
test
cmc
cmpsb
int
out
push
sub
mov
push
in
lea
push
ljmp
jns
mov
fildll
rcl
mov
and
and
jecxz
jbe
or
cmc
mov
je
in
inc
fmuls
jp
int3
sub
lret
mov
mov
push
push
dec
stc
nop
inc
add
enter
push
je
mov
mov
jns
imul
lahf
sbb
imul
shlb
aas
out
xchg
rol
pop
lds
dec
test
mov
cmpsb
cmp
nop
or
mov
dec
in
sahf
jmp
adc
imul
mov
les
mov
movsl
cmp
xlat
or
shr
fldt
jl
cld
shlb
dec
mov
pop
adcl
sub
adc
add
cmpsb
mov
pop
mov
fiaddl
lret
pop
mov
fisubs
sub
push
lcall
and
push
lods
test
jo
mull
sub
mov
call
mov
in
test
fidivrs
iret
iret
clc
inc
xlat
div
and
pop
lret
cwtl
jae
cld
xchg
jg
lds
es
cwtl
lock
es
das
repnz
je
aas
lcall
push
jo
jb
jae
or
inc
test
xchg
shl
adc
mov
ret
stos
gs
sbb
adcb
ds
scas
mov
shr
cmp
roll
ret
shll
jno
hlt
imul
insl
pop
lahf
ss
aaa
lcall
push
sub
sbbl
rorb
mov
or
add
mov
adc
xchg
into
gs
or
lret
lods
inc
sub
cmp
cld
das
add
out
rcrl
rcl
pop
outsb
inc
fcompl
aam
fincstp
adc
in
lret
add
dec
loope
scas
ja
mov
sub
ljmp
sbb
jo
cs
cmp
dec
call
pop
sbb
mov
xlat
jne
pop
cmpsb
mov
aam
xorl
or
pop
sbb
lcall
in
sahf
xor
loop
sbb
mov
push
aam
mov
jbe
cmp
or
repnz
addr16
cmp
sahf
xor
mov
jmp
outsb
xorl
adc
adc
pop
push
cmpsb
shrb
sti
mov
and
sbb
sti
int3
ljmp
fildll
nop
daa
xchg
icebp
jg
jecxz
out
pop
add
dec
jbe
jl
cs
mov
lods
add
jae
mov
pop
aam
out
test
jge
rcll
das
aas
gs
std
or
inc
push
pusha
mul
mov
in
push
pusha
testl
push
sbb
xor
jno
cmp
add
call
pop
nop
jne
jp
mov
mov
push
test
jbe
and
push
mov
push
out
insb
adc
cmpsb
dec
loop
pop
hlt
mov
fnstenv
imul
jl
xor
outsb
or
js
add
sub
xchg
mov
push
ljmp
arpl
cmp
out
pop
pop
xchg
sub
das
shrl
mov
arpl
jge
jg
pop
jno
inc
fcompl
imul
daa
shlb
leave
pusha
idivl
add
cmp
pop
adc
sahf
gs
push
bound
jle
push
imul
sbb
mov
pop
xchg
sub
inc
mov
dec
lods
adc
pop
int
gs
loope
push
shrl
mov
out
ds
pop
sbb
push
cltd
rclb
xchg
lahf
stos
or
rol
pop
out
mov
mov
les
mov
aam
xlat
cmp
xchg
pusha
clc
es
dec
or
lods
jnp
sbb
in
fnstenv
add
mov
pop
sbb
inc
aaa
adc
jne
push
cld
dec
in
stos
push
jle
andb
adc
insb
lret
bound
and
pop
or
adc
adc
lret
mov
scas
inc
fisubs
mov
icebp
sub
xor
adc
add
push
sbb
enter
sbbl
push
lahf
ss
jmp
mov
pop
pushf
insb
add
jl
lahf
lods
out
mov
jmp
mov
xor
inc
enter
ret
and
xor
mov
dec
loope
aad
pop
shll
sahf
movsb
hlt
mov
ret
addb
push
out
and
or
movsl
pop
in
pop
hlt
mov
pop
hlt
and
inc
das
pop
shll
in
jp
sarb
or
cmp
inc
fistpl
and
pop
test
inc
xlat
inc
sub
aas
imul
cmc
mov
xor
fidivrs
scas
inc
fnstsw
fdivl
push
cli
add
ret
out
xchg
jb
cmc
xor
rolb
cmp
rcl
jge
leave
pop
xlat
xor
dec
lret
hlt
je
jg
pusha
imull
mov
imul
rep
add
sahf
sahf
xor
js
test
push
int3
inc
int3
arpl
add
xchg
pop
add
int3
jne
movsl
cmp
add
ss
pop
xor
pop
dec
push
or
and
pop
push
fdivrs
ror
in
test
jg
dec
jno
lods
inc
mov
push
int
cmpsb
cmp
aam
negb
inc
fnstcw
lcall
sbbb
shrl
add
mov
loopne
clc
mov
cmp
loop
insl
lock
cmp
add
pop
cld
xchg
insl
subl
adc
ss
in
loop
pop
mov
js
clc
pop
scas
sub
stc
nop
pusha
dec
xor
pop
loopne
pusha
aaa
rcl
gs
pushf
js
arpl
cmp
add
jge
dec
test
push
sub
adc
cmpsl
mov
call
fiadds
loope
aaa
into
shrl
mov
mov
js
pop
push
cmp
pop
and
fldl
lahf
out
cmp
or
movsl
in
xchg
cmpsl
push
ret
inc
pushf
mov
cli
popf
and
xor
in
rorb
xchg
sbb
in
inc
icebp
out
push
jmp
imul
adc
lcall
out
xor
je
add
mov
xor
jnp
in
test
push
add
jb
das
inc
cld
cmp
sub
movsb
mov
pop
cmpb
leave
aaa
xchg
jmp
mov
imull
sub
pop
cmp
mov
adc
fwait
push
mov
into
insl
pusha
stos
arpl
sub
pop
cmp
adcl
and
test
dec
adc
or
push
dec
mov
jle
jp
inc
lahf
stos
inc
and
cmp
test
cmp
jo
repz
xchg
inc
fcmovb
clc
adc
mov
repz
jmp
adc
adc
cmp
stos
test
mov
int3
jns
fstpl
push
rcrl
out
adc
push
mov
in
popf
add
lahf
sbb
sbb
cwtl
stos
cmp
stos
stos
pop
hlt
sbb
inc
fmuls
dec
loope
outsb
aaa
jg
lods
dec
pop
push
in
pop
outsl
dec
jecxz
jle
scas
lea
lds
inc
jl
cmp
mov
fs
aam
adc
sub
mov
mov
scas
inc
fsubrs
int3
arpl
add
jb
dec
pop
jo
lcall
adc
testl
dec
in
shrl
insb
and
and
pop
dec
out
jmp
imul
mov
mov
ret
pop
sbb
mov
adcb
pop
int3
je
or
xchg
rclb
cmp
sar
adcl
xor
nop
xor
xchg
cs
mov
cmpsl
sub
xchg
sub
lds
in
mov
cmp
stos
fnsave
iret
data16
and
xchg
pop
test
push
sbbb
cs
mov
dec
lds
jne
sbb
mov
pop
leave
pusha
dec
pop
out
dec
inc
pop
out
xor
mov
outsb
mov
popa
push
inc
xlat
xchg
push
jmp
adc
bound
jae
hlt
nop
dec
loope
push
sbb
out
sbb
xchg
enter
adc
cmc
fbld
fstl
xor
push
fs
mov
js
stos
fadds
pop
inc
cltd
movsb
cmp
sbb
data16
or
inc
jo
ret
mov
xchg
out
lods
inc
dec
gs
out
push
adc
insb
xchg
ss
pop
sbbb
loop
lods
rorl
lds
ss
adc
test
jno
jo
fwait
bound
mov
mov
cwtl
inc
fisttpl
push
sahf
xor
sarl
mov
xor
out
lods
repnz
xchg
mov
movsb
sbb
dec
xor
cmp
mov
push
call
inc
push
in
ss
js
pop
pop
call
test
sbb
mov
jbe
lds
jecxz
stos
mov
cli
adc
mov
xor
xor
fisubl
ficomps
and
pusha
punpckhwd
push
jb
inc
movsb
jae
scas
dec
in
mov
push
or
jmp
imul
mov
push
mov
js
lods
inc
insb
pop
mov
adc
rcll
lods
ret
jecxz
mov
sbb
fs
mov
out
xor
lea
xchg
mov
pop
stc
cmp
in
xor
mov
and
enter
pushf
in
jg
out
push
ljmp
popa
clc
ss
icebp
mov
in
ret
test
sbb
mov
mov
mov
sbbl
mov
or
mov
jnp
cmp
dec
inc
mov
lds
mov
push
insl
lods
shrl
vphaddbw
out
xchg
cmpsb
outsl
push
add
mov
loop
out
xchg
imul
sbb
pop
insb
aaa
into
ss
cmp
lret
imul
lds
jle
test
xor
cmp
cmp
pop
push
jg
xchg
subb
cmc
shrb
mov
xchg
repz
in
mov
adc
pop
je
adc
push
fs
notb
mov
mov
mov
inc
fiadds
cmpsb
xor
pop
push
out
push
sub
ret
and
enter
cmp
xor
mov
fldcw
jmp
or
rcrl
xor
jl
mov
idivl
shrl
insb
cmp
ss
cmp
pop
push
sub
jg
adc
mull
lock
sbb
movsl
add
in
xlat
and
mov
sub
fnstenv
xor
movb
cmp
hlt
imul
dec
push
mov
fidivl
dec
mov
pop
push
cmp
mov
imul
mov
int3
jns
in
in
xor
filds
xchg
fs
cmp
xlat
shlb
or
push
jge
mov
std
sahf
repz
pop
into
lods
aas
sub
mov
movsb
cmp
lods
dec
loopne
and
jl
pop
sbb
fld
pop
out
repz
lds
push
out
inc
imul
data16
cwtl
mov
xchg
sub
adc
jne
and
push
add
push
xlat
out
call
or
fs
xchg
sub
push
or
loop
cmpb
daa
repz
arpl
lret
cwtl
das
aam
xlat
outsb
shrb
jmp
cmp
push
insb
les
pop
in
dec
xor
mov
aam
cltd
cmc
and
or
repz
mov
xchg
and
inc
fmul
and
imul
pop
cmc
cmpl
sub
push
out
or
mov
in
push
loopne
nop
adc
lods
jbe
jg
mov
pop
notb
jmp
mov
adc
inc
les
cmc
cwtl
testb
and
push
inc
pop
bnd
out
sbb
push
hlt
sbb
js
push
jbe
push
scas
jle
sbb
add
sahf
xor
and
dec
pop
sbb
iret
data16
call
je
mov
sti
xchg
sub
cmc
mov
sbb
push
std
insl
add
pop
jne
xchg
xor
in
jmp
out
mov
fwait
es
dec
loope
inc
sbb
cmpsl
add
out
ret
pop
filds
add
mov
jno
movsb
add
inc
enter
push
sti
xchg
xchg
dec
fistps
sbb
popa
pop
push
inc
subb
pop
or
pushf
jae
rclb
push
jmp
in
pop
icebp
xchg
jmp
negb
test
push
sbb
lahf
ss
sub
imul
xchg
insb
dec
scas
inc
ret
insl
es
push
std
xchg
push
jmp
test
inc
fdivrs
pushf
cltd
sub
ja
mov
add
cmp
add
cmc
ja
es
mov
dec
in
jg
jecxz
mov
shl
repz
std
popf
jno
ja
xchg
cs
popa
clc
cmpsl
and
pop
xchg
pusha
dec
out
xchg
sub
test
xchg
jbe
dec
in
mov
xchg
stos
popa
mov
shlb
arpl
push
out
movsb
push
out
jo
ret
sub
pop
es
cmpsb
xor
adc
ret
fstpl
lds
in
pop
out
adc
mov
fucomip
dec
lahf
ss
sbb
mov
cltd
subb
stos
in
jnp
mov
jb
jnp
jl
xor
test
and
pop
jle
or
push
loopne
dec
out
call
pop
movsb
leave
popf
xor
push
shll
aam
inc
mov
repz
jno
in
inc
mov
or
arpl
out
xchg
cmp
sub
pop
hlt
dec
dec
ja
dec
and
adc
icebp
fbstp
xlat
adc
push
mov
in
daa
mov
sahf
repnz
mov
fnstcw
in
mov
dec
loop
and
jmp
fidivs
adc
xchg
fcoml
or
mov
cli
xor
cmc
out
daa
xor
mov
es
or
int3
arpl
push
mov
pop
jge
stc
and
js
stc
cwtl
cltd
movsb
imul
es
sahf
js
and
lods
inc
jmp
mov
and
inc
push
ljmp
push
loop
mov
pop
rcrl
jmp
mov
repnz
adc
dec
mov
mov
add
pop
cmpsl
xchg
xchg
stos
sbb
dec
inc
in
xor
dec
xor
ss
add
and
in
pop
scas
cmp
xchg
push
cmpsb
insl
fsubrs
pop
stos
mov
mov
jmp
dec
mov
push
sbb
in
orb
outsb
add
xchg
and
mov
mov
push
jmp
mov
gs
push
sub
nop
xchg
sub
sub
es
sub
js
cmovp
cs
popf
int
fistpl
int
or
lea
mov
sbb
pop
jmp
lods
add
js
sbb
add
lea
jbe
cmpsl
add
mov
or
jge
add
fiaddl
in
int3
adc
xchg
psraw
mov
arpl
xchg
push
or
xchg
addb
pop
pcmpgtb
cmp
stc
nop
xor
push
sub
imul
add
mov
shlb
stc
cmp
pop
rolb
pusha
clc
jno
sarb
mov
and
dec
mov
lock
push
repz
ret
shll
jae
push
sub
push
jle
mov
jae
outsb
sti
push
jae
stc
movsb
das
sbbb
lds
sbb
pop
out
imul
xchg
jnp
xor
adc
inc
fsubs
push
xlat
jo
es
je
inc
into
xorl
sbb
jb
stc
xor
xor
out
push
loopne
inc
ret
outsb
mov
push
movsl
pop
sti
push
sahf
mov
xor
sub
mov
popf
and
and
leave
stc
inc
shl
sbb
fidivs
ss
adc
mov
fcmovu
pop
mov
or
fldcw
pop
inc
sbb
mov
nop
stc
and
pop
pusha
scas
mov
mull
shr
sub
iret
or
dec
fsubl
pop
out
jge
lods
inc
lds
icebp
mov
fimuls
add
lcall
sbb
hlt
mov
idivb
mov
mov
in
cmp
insl
cmp
jnp
xchg
dec
mov
cld
xchg
addr16
ret
pop
inc
popa
pusha
cmpxchg
xchg
fmuls
sub
push
pop
lcall
mov
sbb
adc
or
sub
and
adc
fcoms
or
sbbl
cmpsb
dec
sub
xchg
or
je
xchg
ret
repz
adc
cwtl
stc
insb
out
fwait
cmp
cli
jns
xchg
mov
jo
in
mov
mov
pop
mov
ja
and
int3
rclb
add
in
mov
adc
mov
push
cld
jecxz
cld
pushf
mov
das
sahf
ficoms
inc
mov
sti
stos
jb
lods
dec
testl
lahf
xor
rolb
adc
stos
int3
and
mov
out
std
xchg
and
mov
and
xchg
cs
in
jne
jl
dec
ljmp
daa
adc
inc
fdivl
sbb
lds
and
adc
inc
dec
shrl
ficompl
xor
int
das
or
push
loopne
mov
dec
or
cmp
xor
js
jno
adc
test
arpl
enter
jbe
push
rclb
xor
lods
and
push
jle
or
js
dec
cli
jo
pop
jb
inc
rorl
rorb
cs
mov
loop
sbbl
or
dec
loope
out
jnp
roll
leave
add
aad
push
inc
mov
ja
add
iret
mov
test
push
imul
jmp
add
test
dec
pushl
movsl
inc
inc
xchg
sub
pop
add
shrl
lock
loop
cld
movsl
push
pushl
jno
arpl
incb
loopne
push
xchg
sbb
adc
cmp
enter
je
or
insb
int3
xor
push
jmp
jns
ficoms
outsb
js
imul
orl
dec
sbb
dec
in
xchg
mov
idivb
push
out
mov
insl
icebp
add
movsl
inc
dec
inc
jne
jb
into
ds
in
test
mov
mov
xor
push
in
outsl
push
pop
aas
sbb
fsubrp
mov
add
mov
sbb
adc
add
rcll
and
fidivrl
cmp
divb
cmp
subb
pop
sbb
cmpsl
rclb
fucomp
push
nop
loopne
inc
jmp
add
cmp
mov
outsb
adc
push
mov
xchg
sbb
inc
sub
test
dec
jmp
lods
scas
int3
add
subl
shll
fwait
adc
add
ret
mov
test
push
scas
mov
xor
sub
push
orl
rolb
adc
mov
mov
mov
mov
sarl
stc
xchg
test
scas
aaa
and
adc
push
pop
hlt
jae
into
pop
sti
pop
sub
pusha
lds
sub
xchg
pop
inc
stos
push
das
pop
jmp
inc
sub
mov
inc
mulb
rolb
or
out
ja
andl
mov
mov
es
stos
mov
mov
popf
xor
cli
sub
sub
test
xchg
cmp
mov
mov
push
sbb
popa
dec
push
xchg
jno
fimuls
scas
push
stos
stc
add
mov
mov
cmp
pop
inc
out
or
jl
and
ds
xor
std
add
orl
movsb
cmp
mov
xorl
scas
lea
in
xor
and
das
sbb
dec
lods
addb
push
mov
mov
pop
fbstp
repz
and
adc
push
gs
ja
inc
jmp
push
mov
push
jnp
mov
push
jo
adc
lahf
int
xchg
and
out
repz
jb
movsb
dec
pop
clc
xchg
mov
pop
fcoms
stos
mov
push
test
sahf
rolb
pop
enter
pop
cmp
xor
mov
xlat
jle
pop
mov
and
jns
clc
inc
imul
push
outsb
mov
fdivrs
cmc
add
and
aad
inc
sub
inc
sahf
push
scas
mov
fdivrs
mov
sub
shlb
pop
mov
aaa
mov
add
xor
shll
xchg
xchg
pop
cmc
jae
lret
enter
xchg
insb
es
adc
add
mov
mov
pop
adc
dec
jns
mov
lds
ret
push
inc
pushf
mov
out
ss
sub
push
mov
into
nop
add
pop
adc
in
mov
notb
cmpsl
imul
jae
push
movsl
inc
ja
loopne
inc
inc
mov
jle
idivl
mov
dec
jo
mov
mov
jge
or
or
mov
xor
leave
push
jo
jmp
pop
and
mov
cmovg
aam
scas
mov
add
enter
sub
das
enter
fisubs
and
push
sbb
push
xchg
outsl
pop
jp
jl
mov
out
les
stos
adc
xchg
sub
das
lret
fists
jp
int3
arpl
or
push
ds
add
aad
jmp
popf
lods
fnsave
lahf
jno
fcomps
push
mov
ja
dec
sbbb
jge
insl
and
and
add
mov
out
cmp
rol
mov
jg
fcom
cli
nop
lds
or
add
xorl
add
push
hlt
or
dec
sub
adc
cmp
mov
sti
pop
lods
ljmp
jmp
fidivs
leave
hlt
inc
imulb
inc
pop
xor
pop
shlb
jns
jae
and
add
xchg
aaa
in
inc
mov
les
shll
pop
jge
arpl
or
fsubl
movsl
xchg
sbb
in
cmp
pop
mov
aaa
push
inc
in
pop
std
inc
add
add
mov
xor
lods
mov
cmp
pop
es
inc
jbe
pop
movsl
pop
cmp
sbb
jo
pop
orb
pop
jecxz
and
mov
adc
movsb
out
adc
xlat
mov
push
sbb
or
sbbl
sub
cmp
sahf
test
inc
fadd
cmp
in
adc
push
nop
jle
pop
cmc
dec
mov
scas
inc
fcmovnb
push
in
incl
jecxz
stos
cmpsl
inc
or
clc
jecxz
lock
lods
sub
fbstp
xchg
movsl
mov
bswap
fs
pop
pop
or
cmp
push
lahf
imul
das
pop
shlb
andl
and
mov
les
lcall
in
out
clc
jmp
out
fld
pop
or
sub
ss
cld
loopne
or
sub
mov
inc
dec
jmp
test
mov
pop
call
push
stos
fwait
cld
daa
mov
sbb
or
std
jle
nop
inc
imul
bound
sbb
loopne
insl
out
icebp
or
add
rcll
dec
add
shrb
cmpsl
movsb
push
mov
loopne
subb
cmc
dec
mov
pop
cmpsl
dec
push
stc
pop
cwtl
cwtl
fiaddl
ret
icebp
pop
das
or
dec
mov
lock
push
pop
xchg
dec
je
adc
push
fcompl
sub
fwait
dec
shll
mov
cmp
fildll
dec
push
add
pop
inc
loopne
inc
inc
and
mov
or
ds
cmpsb
sub
mov
push
aaa
mov
adc
sub
push
mov
push
xor
shl
dec
sahf
stos
clc
ret
jmp
jg
cmpsl
push
into
lea
repz
pushf
imul
jp
inc
enter
daa
arpl
push
mov
inc
dec
cmp
repnz
inc
inc
push
mov
xor
inc
push
pop
add
jo
and
adc
mov
lds
add
std
mov
xor
sbb
cmp
sbb
test
popl
shl
jno
cmovnp
dec
cmp
xchg
xor
push
out
adc
and
mov
fmuls
stc
and
add
cld
das
lock
sbbb
ret
stc
xchg
sub
push
call
jp
outsl
ljmp
push
jmp
ja
push
jle
push
jmp
mov
dec
test
add
js
or
scas
push
cmp
push
xchg
pop
sub
test
shrl
push
adc
jne
sub
cmp
mov
stc
xchg
test
mov
fldcw
mov
add
mov
mov
push
mov
repz
daa
movsb
adc
and
subl
rcr
sub
adc
test
lds
aam
icebp
fwait
dec
inc
lcall
mov
addr16
xlat
lret
mov
ficoms
mov
inc
cmp
rclb
or
adc
xchg
jge
insb
scas
fistl
fdivp
lock
repz
sub
lcall
cld
insb
outsl
lcall
sarl
fdivrl
sbb
xor
jne
lock
add
lret
xchg
pop
outsb
dec
xor
dec
pusha
movsl
and
out
mov
push
repz
repnz
lods
mov
dec
nop
rcr
test
mov
pop
mov
stc
pop
adc
stc
test
fcoms
sbb
scas
push
xchg
negl
adc
xor
in
or
pushf
jns
pop
xlat
outsl
in
dec
fs
jns
imul
xchg
popf
mov
cmp
std
fsub
cmpsl
mov
sbb
mov
mov
mov
mov
pop
je
push
fwait
jle
sub
mov
dec
lcall
outsl
into
test
out
cmp
fmull
stos
cmp
aam
mov
arpl
cmpsl
daa
dec
push
in
jns
cs
inc
sbbl
decl
jp
sarl
mov
add
in
rcrb
int3
sub
mov
jecxz
pop
adc
sub
adc
xchg
mov
jp
loopne
imul
xlat
or
fs
orb
add
jl
addr16
popf
stos
xor
cmp
dec
insb
adc
xchg
push
or
jge
or
cwtl
jb
jae
cmp
jo
jp
dec
or
and
push
pop
jp
inc
gs
or
je
stos
loope
pop
xchg
cmp
push
mov
roll
lods
inc
ret
lahf
add
dec
push
adc
mov
pop
pop
inc
xor
enter
pop
bound
mov
lock
ret
iret
mov
add
cmp
pop
aad
jge
incl
jne
cmpsl
jnp
jb
add
je
cmpsl
pop
push
mov
pop
xchg
sub
test
xor
popa
or
sub
fdivrl
rorb
jg
stos
mov
inc
lock
xor
std
or
pushf
loope
mov
into
bound
mov
addr16
adc
sti
mov
loopne
test
into
adc
xor
pop
mov
lds
int
shlb
mov
add
xchg
loop
cli
test
inc
das
mov
movsb
xchg
cld
sub
mov
mov
xor
xor
mov
das
shrd
or
pop
inc
mov
xor
dec
jno
lock
data16
fs
adc
ss
scas
lcall
rcr
scas
dec
dec
stos
and
loopne
nop
sub
or
inc
add
xlat
or
dec
jo
icebp
mov
jae
sub
movsb
mov
push
lock
xchg
ja
test
outsl
les
or
inc
mov
cmp
jbe
inc
and
pop
push
mov
xor
xorb
mov
sysenter
lock
sti
fs
repnz
test
dec
push
cmpsb
mov
pushf
mov
cltd
inc
pop
pop
es
xor
cmp
jne
adc
pop
sbb
pop
sbb
ja
sub
sub
pop
fbld
outsb
pop
rol
aam
dec
inc
jb
test
mov
scas
xchg
loopne
sbb
inc
cmovg
jo
mov
xchg
fstps
scas
mov
dec
jne
push
cmp
lret
xor
insb
push
push
jmp
lea
mov
jae
add
lret
cltd
scas
lods
insb
aas
and
pop
ret
lock
inc
fildl
mov
xchg
mov
out
nop
add
mov
jl
sarl
fists
test
insl
xor
sti
adc
std
leave
out
cld
imul
push
or
jle
and
lods
sbb
dec
sub
movsb
mov
jecxz
pop
pop
shl
out
or
addr16
inc
repnz
ljmp
pop
int3
xchg
popf
cmp
jmp
mov
out
call
into
aad
mov
mov
movsl
lret
out
hlt
adc
icebp
lods
outsb
or
or
rcrb
push
popa
pop
hlt
leave
lret
add
xchg
mov
xor
jne
add
sahf
arpl
nop
sahf
or
repnz
pop
inc
push
pop
mov
or
push
mulb
cltd
pop
popf
cmp
or
pop
mov
rol
and
xorb
aad
mov
dec
in
xor
in
push
pushf
xor
mov
push
hlt
repnz
mov
fcmovu
outsl
or
cmp
mov
dec
push
mov
xor
out
repz
pop
pop
hlt
pop
leave
pop
and
adc
inc
mov
add
insl
shrb
mov
ds
fildl
out
lret
les
jle
iret
stc
rorb
cmp
sbb
call
test
aaa
cmp
inc
xchg
pop
xor
adc
in
insb
pop
iret
insl
je
shll
dec
outsb
mov
xor
push
lds
inc
test
idivb
mov
iret
stos
fidivrs
mov
push
rcl
pop
mov
lret
bound
pop
sahf
xor
xchg
cmc
fldt
in
mov
cmp
fidivs
ret
jae
sbb
mov
in
shrb
add
ret
pop
in
sub
out
sub
fsubrs
xchg
loope
dec
sbb
add
stos
xchg
scas
inc
lret
mov
xchg
inc
pop
test
push
add
scas
pop
neg
sub
pop
mov
icebp
mov
and
xchg
jo
inc
lds
icebp
adc
mov
pop
out
mov
sbb
movsb
loope
mov
xchg
ljmp
lds
nop
out
dec
xchg
addb
pushf
jnp
stos
testb
int3
mov
mov
movsb
push
das
xchg
bswap
movsb
push
jns
xor
popa
aas
jbe
adc
stc
mov
pop
in
int
into
popa
das
inc
or
push
call
lahf
lea
xchg
loopne
mov
ss
fcoml
pusha
jo
sub
leave
xchg
xchg
sub
ljmp
inc
fdivrs
adc
sub
jg
pushf
popf
jae
fadd
inc
int3
test
mov
loope
movsl
mov
icebp
mov
notl
mov
dec
out
out
pop
out
fistpll
push
jmp
dec
sbb
jno
lods
mov
fbld
insl
xor
jne
push
hlt
mov
cmpsb
adc
dec
clc
xor
sub
shlb
ret
push
out
hlt
pushf
insb
add
adc
mov
and
sub
in
addl
cltd
fstl
dec
ret
fsubs
add
daa
test
push
fnstcw
leave
out
test
xchg
xchg
mov
clc
push
sub
push
xchg
out
ret
jbe
and
lods
iret
jno
pop
push
ret
fcmovb
xlat
es
xchg
and
movsl
addl
dec
fs
inc
or
out
jnp
ja
ljmp
pop
in
sub
and
pop
jo
jle
inc
jg
mov
testl
cmp
add
int
out
shll
mov
or
xchg
push
cmpsl
fisttpll
lea
and
mov
out
sbb
inc
or
inc
sbb
jo
push
insl
stos
pop
mov
loopne
xor
jnp
dec
and
cmp
pop
outsb
mov
mov
fsubl
inc
adc
fldenv
mov
pop
cltd
test
push
pop
ret
lahf
hlt
xchg
in
repz
int
xor
jbe
das
mov
mov
adcb
push
ret
xchg
mov
ret
add
push
out
lock
fdivrl
pop
in
js
fwait
dec
fs
jp
adc
pop
cmp
popf
sbbb
jbe
mov
fisttpl
lret
jbe
fstpl
jmp
mov
mov
mov
fwait
lock
aas
cmp
stos
sub
call
idivl
ds
jb
bound
scas
mov
add
mov
sbb
mov
mov
shr
adc
sti
test
jmp
out
adc
xchg
jb
push
ds
imul
sahf
cmovl
sbb
inc
pop
repnz
jo
and
je
sbb
ljmp
jg
pop
lea
push
jne
xchg
sbb
in
fs
loope
cmpsl
call
popa
lods
xor
mov
mov
mov
inc
or
xor
test
cld
add
nop
dec
pop
cmpsb
addr16
mov
loop
mov
lds
mov
fs
scas
nop
dec
pop
movsl
xchg
call
or
mov
ss
jno
imul
mov
shrb
jmp
stc
lahf
in
stos
mov
cmp
sbbb
pop
es
add
in
cmp
daa
sbb
or
sti
pushf
imul
fsubrp
cld
or
sub
std
pop
lret
lock
mov
xchg
ja
mov
add
mov
insb
lods
xor
pop
mov
mov
xor
mov
push
test
aas
xcrypt-ctr
cmpsl
fidivs
sub
pop
pop
andl
fisubl
jl
push
push
mov
pop
scas
mov
adc
pushf
sbb
rep
fdivl
fld
es
shlb
xchg
inc
dec
daa
loope
sahf
inc
sub
shll
mov
std
push
and
pop
adc
iret
fcmovnu
mov
lret
ds
pop
inc
mov
sahf
xor
aam
mov
pop
clc
sub
cs
lret
jmp
int
adc
cwtd
lret
sbb
mov
popa
enter
imul
or
xchg
xchg
jns
ret
lods
outsl
pop
cltd
std
cmp
outsl
mov
push
xchg
dec
inc
cmp
out
hlt
xor
sbbb
dec
out
jb
int
bnd
inc
push
loop
les
fs
in
mov
jecxz
into
pop
xchg
mov
mov
cmp
or
jae
adc
stos
xor
cltd
movb
push
mov
sub
push
cmpsl
or
cld
ficomps
testl
out
jl
gs
dec
imul
fidivrl
aad
pop
cwtl
push
stc
rcr
mov
ds
ror
popa
test
lret
inc
daa
adc
gs
ret
xor
xchg
add
loop
mov
inc
sbb
cs
shl
repnz
mov
mov
xchg
out
pusha
enter
jmp
push
and
pop
inc
cmc
sub
mov
and
rcrl
mov
rcll
daa
pop
inc
dec
iret
pop
ss
push
loope
jmp
jl
jecxz
fdivl
or
out
mov
sub
inc
gs
jne
fldt
mov
add
dec
andl
inc
push
xor
pusha
test
int
cmp
lret
cld
fucomip
sti
pusha
cwtl
push
test
xchg
adc
les
cmc
dec
mov
in
mov
je
inc
jecxz
adcl
daa
jge
movsl
mov
xor
nop
lds
jp
shll
push
add
jne
cs
push
cmpsb
lret
mov
sarb
addl
lods
or
mov
dec
pusha
xorb
imulb
dec
mov
pop
mov
mov
inc
lahf
sahf
jecxz
xchg
mov
repz
cmpsb
mov
fistl
mov
and
dec
mov
adc
js
pushf
pop
mov
inc
arpl
jmp
dec
xor
xchg
xchg
inc
mov
mov
sbb
sbb
stos
cs
cmp
out
jno
and
adc
inc
cli
jne
mov
mov
push
rorl
subl
adc
lcall
inc
mov
aaa
mov
fistl
mov
or
xchg
sbb
mov
add
fcomps
mov
mov
into
push
mov
scas
arpl
jp
lcall
pushw
cltd
xchg
ret
cli
stc
pop
icebp
sub
and
enter
xor
cli
xchg
pop
xor
das
rclb
xchg
sub
xor
inc
sbb
or
lret
cmp
push
xchg
lahf
int
mov
sbb
in
js
mov
cltd
xor
sbb
xlat
outsl
mov
fstpl
xor
sub
movsl
lock
scas
xor
jle
push
sub
jnp
sub
sahf
inc
inc
mov
pop
fnstenv
adc
jb
testl
stc
or
dec
inc
mov
dec
cmp
icebp
mul
mov
repnz
and
dec
push
or
repnz
lcall
sub
sbbb
mov
jecxz
inc
adcl
pusha
clc
and
js
mov
jg
ja
dec
repnz
xchg
jnp
jns
test
push
or
pop
inc
pop
mov
lds
movsl
and
scas
jg
mov
das
test
rolb
loop
lods
insb
add
sbb
adc
xchg
cs
insl
pusha
jnp
mov
and
pop
jle
in
mov
sub
out
test
sub
lods
iret
bound
jge
jmp
das
dec
cmp
mov
adc
push
jl
xchg
cli
adc
stos
call
mov
mov
dec
movsl
test
in
xchg
jae
push
scas
movsb
mov
iret
or
lahf
notb
insb
out
out
xor
sub
pusha
in
cwtl
decb
sbb
imul
fs
mov
std
inc
and
jmp
inc
in
mov
adcl
xchg
xchg
sub
mov
fildll
push
loope
pop
frstor
mov
pop
lea
inc
lahf
out
ljmp
mov
movsb
addr16
xor
rcll
ss
out
mov
add
cli
lret
or
dec
enter
adc
or
pop
pop
jbe
movsl
out
xlat
pop
xchg
adc
out
and
cmpsl
xchg
hlt
addr16
enter
push
xor
int3
sub
xchg
ret
fistpll
xchg
cmpsl
sub
sbb
jg
and
shr
xor
fbld
push
leave
xchg
sbb
xor
pop
xor
sub
ret
sbb
mov
call
shll
movsb
mov
push
repnz
es
xchg
sbb
xor
das
outsl
test
scas
cmc
push
xchg
or
fldcw
stos
nop
sets
pop
scas
repnz
mov
mov
push
mov
roll
cmp
stc
lea
mov
daa
pop
jge
dec
fwait
push
stos
xchg
cmp
cmc
enter
fsubl
pop
adc
adc
sbbb
inc
mov
fs
sbb
aad
pushf
or
dec
dec
repnz
and
pop
test
outsl
into
scas
testb
scas
ljmp
lods
fsubs
xor
push
cli
adcb
xchg
iret
add
mov
and
adcl
pop
mov
jle
cmpsl
sbb
les
popf
xor
sub
mov
icebp
sbb
fsubrl
cmp
mov
cmp
jns
jo
leave
lcall
and
push
test
in
xchg
or
cmc
mov
stos
imul
aad
mov
incl
jmp
rcrl
les
lahf
pushf
data16
mov
stos
ja
int3
sub
leave
rcr
and
sub
mov
arpl
cmc
cmp
mov
lret
shr
stos
xchg
mov
cmp
in
repz
stos
or
lret
jns
jmp
aaa
lret
lods
into
xor
mov
loopne
mov
lods
sahf
sub
and
icebp
andb
pcmpgtw
xchg
pop
lea
sub
insb
fcoml
add
mov
enter
into
std
rorl
inc
pop
add
mov
push
fs
insb
sub
test
push
push
clc
nop
xor
mov
inc
pop
icebp
dec
cmp
incl
sub
adc
lcall
lcall
insb
in
xor
adc
push
adc
jno
sbb
cmp
mov
inc
out
rcrl
gs
shll
popa
push
pop
cmpsl
ds
popa
adc
push
enter
js
and
inc
pop
imul
ss
dec
daa
cld
jg
cli
and
fwait
iret
or
ljmp
mulb
and
mov
xor
xchg
cmpsb
jno
mov
dec
mov
jp
push
inc
cmp
pusha
mov
or
fsubl
arpl
es
lods
inc
std
inc
mov
xor
ds
fidivrs
pop
push
adc
or
mov
lahf
dec
stos
adc
lock
addb
dec
pop
movsb
sub
imul
popa
out
imul
push
jmp
imul
xchg
mov
add
xor
jg
cmpsb
jg
add
inc
mov
mov
xchg
loop
repz
adc
mov
fnsave
jno
ds
ljmp
xlat
out
push
push
sahf
add
repz
pop
les
lods
or
jge
in
cli
dec
iret
in
mov
cwtl
cmpl
ljmp
out
mov
cmpsb
fadds
jae
jne
ss
nop
push
mov
or
ret
add
outsb
mov
add
mov
insl
sub
fcoms
sti
adc
ja
pop
xor
xor
ljmp
notb
fimuls
into
gs
cmp
jne
mov
mov
xchg
sub
into
xor
cmpsb
mov
xchg
pusha
or
sbb
icebp
sub
inc
sbb
insb
iret
xchg
mov
mov
push
js
push
ljmp
pop
jl
or
adc
rcr
or
sub
mov
sub
rcrl
dec
mov
loope,pn
pop
cmp
inc
std
outsl
push
push
sbb
cltd
jmp
clc
pop
in
add
mov
push
dec
stos
dec
lea
loop
rcrb
fwait
mov
and
pop
mov
inc
out
add
imul
pop
xchg
in
sub
pushf
pop
sub
in
lds
loope
fsubrp
dec
in
xor
out
adc
push
add
test
gs
and
daa
push
dec
adc
jp
jge
flds
add
or
lods
pushf
inc
test
fstps
and
or
ja
jl
cmp
test
xchg
roll
push
cmpsl
ret
dec
mov
daa
aam
push
jbe
cld
jl
outsb
or
xchg
les
or
pushf
mov
jle
es
cli
test
inc
add
pop
sbb
aas
mov
inc
out
and
ja
popa
rcrl
fs
scas
mov
adc
cmpsw
mov
ja
test
mov
add
jo
cmp
push
sahf
inc
cmp
dec
push
lods
mov
xor
xchg
shrb
out
ds
fsubl
xchg
imul
orl
mov
repz
shrl
iret
push
and
inc
gs
repnz
sbb
fdivrl
sbb
test
or
mov
push
mov
mov
fst
fwait
mov
adc
push
lcall
inc
dec
adc
xchg
mov
lahf
jo
mov
mov
aaa
imul
jae
pop
sti
dec
insb
insb
jl
test
dec
sub
cs
loopne
pop
pushf
stos
daa
sub
push
lret
push
jl
mov
and
gs
arpl
xchg
aaa
cmpsl
shl
dec
popa
fnstenv
or
test
dec
push
adc
xor
pop
adc
mov
int
popa
int3
rorb
lahf
mov
mov
xor
loope
jno
incl
das
jne
xchg
mov
js
andl
mov
mov
call
jnp
lds
cltd
aaa
mov
push
je
fbstp
mov
lret
fprem
or
push
subb
pop
out
pop
loopne
pop
adc
in
lock
and
fcmovnu
and
clc
jb
dec
dec
pushf
pop
jg
int3
test
shlb
insb
pop
and
fucomi
orl
xlat
fwait
jge
mov
bswap
sub
push
popf
inc
fdivs
xchg
xor
mov
fisttpll
push
xlat
xor
gs
arpl
push
adc
pop
dec
xor
push
clc
cmp
sbbl
addr16
out
and
mov
mov
test
shrl
inc
mov
dec
or
push
dec
mov
je
dec
mov
testl
pop
in
test
mov
sbb
cmp
jp
call
cld
adc
xchg
jne,pn
testl
je
jo
adc
push
shrb
pop
out
idivl
ret
add
sti
jp
cltd
jns
out
test
fwait
push
mov
fists
jmp
dec
stc
push
fcoms
jge
sub
xor
push
mov
lods
xchg
adc
xchg
sbb
daa
cmc
test
and
js
and
cmp
xor
mov
ret
mov
add
cli
pop
or
rcr
aaa
push
xchg
pop
iret
mov
out
push
out
inc
int
sub
test
aad
in
pop
repz
push
add
jmp
push
push
mov
insl
es
aad
jle
add
push
ret
and
jae
sbb
push
outsb
mov
repz
cmp
xchg
in
pusha
mov
cmc
mov
loope
cmp
mov
outsl
push
sub
orl
in
lahf
js
insb
daa
bnd
and
xchg
add
into
mov
jmp
sbb
iret
jb
push
imul
xchg
pop
leave
inc
mov
call
or
mov
cmp
shrb
jne
out
jge
adc
std
sub
xor
ja
hlt
cmp
cmp
sbbl
dec
mov
popf
aad
fwait
loop
lret
add
rcrb
test
test
and
lods
add
jno
leave
aad
repz
cmpl
push
std
adc
mov
mov
or
mov
insl
add
es
outsl
sbb
or
dec
push
adcl
repz
xor
xchg
mov
and
and
dec
frstor
sbb
shll
movsb
fidivrs
outsl
aaa
cmc
punpckhbw
loop
mov
mov
and
popf
fcompl
addl
ja
shr
push
rcl
jle
jae
lock
mov
imul
xor
decl
mov
push
sub
mov
mov
mov
clc
jae
cmp
push
cltd
xor
xlat
mov
ficomps
push
lret
mov
jb
ja
sbb
mov
jo
or
cs
sub
lahf
inc
clc
xlat
mov
mov
clc
jecxz
mov
fistpll
incb
lea
lret
jg
sbb
fadd
fimull
fstps
mulb
sti
nop
shlb
jns
jne
enter
pusha
test
call
popa
xor
pop
adc
jle
push
in
mov
and
insb
inc
ds
mov
jae
mov
stos
adc
pop
xchg
pop
mov
mov
lods
inc
mov
outsb
pop
sub
xchg
testb
dec
fsubrp
ja
push
cmp
scas
rcrl
cwtl
pop
mov
jae
imul
mov
out
jge
fdivrl
into
dec
lret
push
mov
jbe
sbb
push
les
pop
pop
loop
fldcw
ja
outsl
test
and
cltd
out
inc
xchg
lret
push
mov
dec
sbb
movsl
mov
imul
or
test
enter
cmpsl
mov
dec
bound
imul
sub
adc
add
push
push
add
mov
pop
ret
shl
into
xchg
inc
mov
or
scas
inc
fldl
test
ss
mov
mov
es
mov
cmc
out
mov
inc
mov
imul
mov
jae
test
cli
mov
cli
xchg
mov
icebp
adc
daa
mov
das
xchg
testb
jnp
adcb
lret
add
and
scas
je
loope
fs
rorl
xchg
jnp
lahf
push
test
sahf
cltd
inc
sbb
incb
aad
ret
repnz
xor
adc
or
and
sahf
test
andb
mov
xor
cmp
sub
std
pop
lock
jns
out
cmp
mov
pop
cmp
dec
dec
mov
popa
mov
xchg
add
loop
lcall
and
pop
pop
andl
fdivs
in
and
mov
pop
pop
daa
outsl
jo
cmpl
adc
ficoms
push
test
sbb
mov
jmp
add
adc
pop
adc
out
in
xchg
mov
dec
or
cmpsl
lods
adc
mov
callw
xor
dec
pop
push
dec
rcr
xor
lods
sarb
daa
pushf
cmpsl
mov
dec
and
cmp
insl
sub
cmp
push
lods
cld
pop
jp
dec
mov
cmpb
fwait
dec
add
mov
icebp
mov
mov
dec
mov
in
jmp
lods
adc
and
jo
jmp
inc
stos
and
or
jg
mov
pop
mov
jne
in
push
popa
in
cld
leave
jp
sub
fwait
push
jne
je
clc
out
jp
sub
mov
push
and
notl
scas
ljmp
push
cmc
repz
imul
cmp
xchg
lea
repz
xchg
dec
lock
xor
mov
xchg
inc
or
fdivrs
pop
add
mov
fldt
mov
cli
outsb
jo
mov
pusha
subb
adc
jb
lds
mov
xchg
cmp
scas
out
clc
and
testl
jne
fwait
push
insb
repnz
xchg
das
sbb
lcall
loope
fwait
cmp
xchg
add
mov
jbe
lods
sti
inc
ficoms
push
aam
in
ftst
push
fdivrs
fldenv
mov
sbb
scas
dec
add
decl
xor
hlt
xchg
adc
mov
mov
cmpsb
jnp
sbb
push
and
aam
sub
or
cs
xchg
sbb
pop
or
lahf
cld
mov
sahf
orb
adc
sub
push
xchg
inc
aas
ja
jno
ss
out
andps
push
std
inc
jmp
lods
fsubl
jle
les
xor
shll
test
jg
cs
jo
dec
ljmp
int3
mov
inc
sub
ljmp
ds
dec
dec
mov
dec
test
popa
aam
sbb
pusha
push
in
jmp
add
add
cmpsb
xchg
or
adc
ss
and
jp
sub
outsl
inc
sti
pop
push
cs
lods
pop
fidivl
sbb
cwtl
pusha
stos
aas
jbe
dec
adc
test
xor
mov
idivb
xchg
mov
xchg
iret
dec
shlb
jecxz
xchg
xchg
jge
imul
jmp
pop
movsl
scas
mov
loopne
xorl
adc
jg
mov
mov
stos
dec
repz
jp
sub
adc
sarb
cmc
mov
aam
dec
cmc
sbb
pushf
push
mov
sbb
pop
lret
shl
sub
or
dec
pop
insb
xor
xor
mov
sarb
pop
flds
test
xor
and
gs
add
push
out
into
jmp
notl
or
std
adc
repnz
push
jae
movsl
push
out
jg
and
sbb
mov
loope
adc
pop
arpl
push
inc
nop
je
or
adc
adc
stc
jge
insl
sub
or
push
rol
xor
jle
fistps
dec
iret
xor
je
dec
jb
imul
popf
inc
pushf
lcall
pop
inc
xor
jl
push
loopne
cmpsb
xor
rorb
lds
sti
repnz
mov
in
xchg
ret
xchg
in
mov
or
sub
pop
add
xchg
xor
adc
imul
adc
cli
mov
push
jo
xchg
dec
scas
push
mov
test
out
test
leave
mov
mov
arpl
jae
adc
fnstenv
fimuls
int3
jg
loop
aad
out
pop
out
xchg
addb
xor
lock
ljmp
mov
call
xchg
xchg
mov
decl
cwtl
jl
xchg
inc
pop
sub
mov
dec
pop
cs
out
or
incb
std
and
popf
fisttpll
mov
push
inc
out
lds
imul
jno
shrl
cmpsb
stos
sbbl
shr
xchg
sub
xchg
shlb
mov
jne
or
nop
inc
xchg
mov
rorl
test
lahf
add
mov
jnp
aad
or
cmpsb
les
xchg
xchg
jmp
jns
cli
and
leave
fistl
xor
imul
mov
rcll
mov
gs
push
call
xor
ljmp
fwait
push
sti
push
adcl
je
cld
xor
mov
sub
rcrl
das
shl
cmovl
lahf
dec
sub
outsb
andl
mov
mov
stos
sbb
push
inc
mov
int
xchg
das
mov
pop
xchg
mov
push
loopne
gs
jecxz
nop
insb
inc
add
xor
mov
into
cli
scas
xchg
movsl
out
fisttpl
dec
ret
scas
shr
je
dec
jne
mov
xchg
cmc
or
xor
xchg
sub
jnp
mov
out
add
out
push
cmp
in
mov
test
jg
push
dec
cmc
push
pushf
arpl
xchg
mov
adc
daa
push
mov
addr16
adc
push
icebp
mov
xchg
mov
cs
leave
push
pushf
mov
mov
in
shrb
and
and
xchg
dec
ret
cld
pusha
sbb
testb
add
push
les
mov
roll
lcall
push
sub
push
push
cmc
mov
ljmp
dec
bound
fs
adc
pop
hlt
movsl
orl
repz
jns
xor
jns
inc
call
enter
pusha
mov
test
ljmp
out
cmp
cmc
lea
or
sub
jb
jnp
in
les
loopne
out
inc
loop
xor
sub
jl
cs
pop
mov
pop
xchg
cmp
xor
lods
lock
sub
and
gs
out
or
mov
jmp
ja
fcmovbe
pop
push
dec
cmpsl
ds
data16
daa
ds
push
add
fists
test
int
nop
js
add
ds
jae
test
cmp
jae
icebp
pop
leave
jns
cmc
stos
scas
rorb
loope
icebp
mov
mov
add
outsl
pushf
xor
ljmp
jne
push
mov
test
xchg
into
jo
mov
push
push
lcall
lahf
or
cmp
sub
dec
and
dec
hlt
int
addr16
call
adc
fwait
xor
inc
arpl
inc
leave
rcrl
push
subl
fcmovnb
int
mov
int3
pop
mov
sub
or
lcall
push
fiaddl
scas
mov
mov
inc
ljmp
pusha
mov
add
scas
add
loope
xchg
sub
pop
in
jg
dec
xor
xor
mov
push
mov
or
jns,pn
std
dec
pop
mov
enter
das
fwait
test
mov
sbb
pop
xchg
sbb
push
ljmp
in
inc
into
sti
stc
or
stos
pop
sahf
mov
enter
sbb
rorb
mov
repnz
push
call
clc
imul
mov
jno
fcoml
sub
xrelease
jecxz
std
xchg
sub
jb
inc
pusha
repnz
ret
cmp
xor
pop
subb
xor
add
push
ss
dec
cld
adc
aaa
adc
ljmp
pop
outsl
xchg
pop
repz
mov
adc
pusha
decb
xchg
jo
mov
test
lret
sub
pop
cs
lret
lret
into
imull
push
addr16
rclb
xor
push
call
cmp
pop
mov
ljmp
aam
sub
insl
dec
addr16
lcall
icebp
jnp
aad
fldcw
pop
jb
or
xor
sub
rclb
cmpsl
clc
xlat
jno
cmc
sbb
mov
cltd
das
leave
cmc
jp
addr16
stos
shrl
mov
insl
rcrb
cli
jle
rorl
mov
add
xor
cwtl
inc
push
stos
les
clc
and
lahf
data16
nop
push
ljmp
jnp
xor
jne
or
mov
sahf
dec
xor
lahf
imul
push
push
cltd
or
push
push
mov
cmpsb
je
fldt
pop
fildl
fdivrs
cs
decl
mov
cmpsb
loop
lock
sub
sbb
hlt
mov
gs
imul
xor
mov
call
adcb
add
xchg
mov
mov
jb
stos
sti
xchg
mov
or
repz
mov
ret
repz
or
shl
daa
mov
jb
push
in
lret
fldt
inc
inc
push
out
sub
jnp
lods
inc
mov
sti
add
cmpsl
jb
jge
xchg
dec
jecxz
repz
enter
insl
insb
shrb
xchg
aam
loopne
rorb
jns
mov
push
inc
adc
xor
in
cmp
and
cltd
mov
inc
cmp
shll
mov
out
xor
xchg
loope,pn
adcb
sub
adc
xchg
adc
jno
add
or
adc
dec
sbb
cmp
addr16
aad
test
mov
xchg
xchg
sub
cmc
push
mov
scas
sub
adc
aam
cmc
insl
pop
testb
mov
mov
sub
jns
loopne
roll
or
outsb
cli
mov
fdivp
jg
les
ja
mov
add
roll
push
xchg
subb
sahf
mov
sbb
adc
out
cmp
and
dec
mov
cmp
mov
xor
pop
hlt
push
xor
xchg
mov
sub
inc
bound
inc
and
xchg
jae
test
jnp
and
loopne
lret
sti
aas
jle
jno
mov
push
rclb
xchg
pop
js
rorl
push
into
movsb
sub
gs
xchg
ret
scas
out
mov
xchg
jmp
xchg
xor
bound
mov
add
stc
inc
sbb
lahf
or
insl
pushf
push
dec
lcall
sbb
rorb
fimuls
jb
xor
adc
pusha
push
cld
daa
dec
sbb
push
shl
dec
and
mov
into
sbb
sbb
adc
push
xchg
mov
test
dec
lcall
out
jae
addb
lahf
gs
pop
push
adc
icebp
mov
dec
js
xor
push
jge
imul
mov
mov
addl
sub
subb
mov
mov
mov
int3
pop
inc
stc
inc
cmpsl
imul
sbb
mov
sbb
out
gs
adcl
jne
mov
ss
stc
test
scas
xor
sbb
das
fbld
test
jmp
out
mov
out
adc
inc
adc
pop
mov
jg
fmul
jmp
mov
or
add
dec
jno
mov
shl
sub
shll
pop
adc
out
ljmp
sbb
pusha
add
cmp
imul
sahf
icebp
jne
jae
or
sbb
aas
arpl
fxtract
dec
fbld
rcr
leave
jmp
in
xchg
push
xor
xor
or
cmp
xchg
test
adc
ret
or
pusha
cmp
rcrb
test
inc
js
jmp
sub
fst
rcll
adc
sti
ret
pushl
hlt
mov
mov
and
call
push
daa
std
je
dec
xchg
stc
nop
enter
cwtl
popw
fmul
mov
xchg
or
sbb
cmp
add
fcomps
pop
push
mov
lods
sbb
loopne
cmp
test
inc
int3
lret
xlat
mov
imul
adc
sub
push
mov
xchg
push
fdivs
pushf
and
push
mov
or
aad
sub
jbe
iret
ss
push
or
or
insb
xor
xchg
xor
xor
test
push
jg
filds
xor
or
sbb
jno
xor
popa
sbb
lea
and
cmp
xchg
push
mov
push
fcom
mov
jns
sub
sub
rcr
mov
ret
mov
aaa
push
es
scas
jb
les
repz
ss
popa
arpl
pop
icebp
in
cmc
ret
xlat
dec
and
in
out
xlat
push
aad
shll
sbb
lock
cmp
jnp
mov
and
in
scas
rcll
xchg
pop
xchg
dec
fimuls
aad
push
ficoml
mov
add
dec
lods
push
jecxz
cmp
sahf
or
xchg
loope
aaa
jle
cmp
aas
xchg
xchg
and
add
push
or
xchg
popa
jbe
shlb
das
xchg
icebp
push
stos
add
xor
push
ljmp
add
xchg
out
ja
aam
mov
cld
cs
mov
pop
inc
inc
fdivl
xor
or
dec
jbe
jo
adc
imul
inc
xchg
push
out
call
dec
lock
pop
push
push
cmc
push
mov
call
xchg
jne
xchg
mov
out
das
push
cmc
and
addl
int
adc
mov
jno
incb
cmp
fs
movsb
addr16
in
dec
adc
pop
push
mov
out
or
mov
jae
push
cld
xchg
xchg
je
ret
cwtl
mul
fidivrs
add
ljmp
mov
xchg
ds
mov
adc
xchg
pop
jmp
pop
int3
jo
incl
mov
mov
adc
mov
xchg
jg
cs
jno
xchg
or
mov
add
sub
out
in
mov
pop
out
mov
rclb
cs
out
mov
add
scas
inc
pop
pandn
not
int
mov
pushf
xor
nop
inc
mov
xchg
iret
push
subl
outsb
shl
cmp
dec
iret
cmp
divl
lods
xchg
imul
xlat
cmpsb
lock
xchg
jl
repz
mov
hlt
and
add
ret
cwtl
cld
int
push
or
mov
inc
fwait
je
push
mov
dec
imul
shl
out
imul
mov
push
sti
xor
mov
and
xor
repnz
subb
xchg
sbb
mov
stos
inc
cmp
add
mov
jno
cltd
jg
lret
dec
test
jo
cmp
neg
mov
in
into
pop
into
dec
dec
and
aam
icebp
mov
clc
xchg
filds
imul
cmp
sub
test
sti
pop
sbb
mov
test
pop
mov
andb
scas
ja
and
xlat
repz
mov
cmpsl
adc
xlat
sub
cmp
sbb
das
pop
push
cmpsw
mov
fsubrl
push
cmp
add
mov
mov
mov
cmp
pop
clc
dec
dec
sub
fcomp
rolb
pop
sti
pop
sub
jmp
or
pop
js
lahf
dec
fists
pop
xor
xor
out
cld
sub
rclb
inc
movsb
cmp
nop
out
sub
push
cmp
rolb
dec
pop
aas
sub
sub
pop
xlat
push
adc
mov
and
cmpsl
xchg
mov
loopne
ret
outsb
sbb
sbb
jnp
clc
or
pop
mov
out
lret
pop
jle
fs
dec
add
push
xchg
cwtl
lds
iret
stos
and
jb
inc
push
in
je
or
pop
jge
icebp
outsl
std
cmp
or
test
push
pop
clc
iret
ja
jecxz
sub
cltd
out
adc
shl
mov
cmp
add
ss
int3
jne
sbb
mov
mov
int
repz
inc
pop
mov
xchg
sub
pop
pusha
mov
lahf
mov
pop
out
ret
sahf
or
and
iret
sbb
leave
mov
inc
cmp
fdivl
shlb
nop
in
fimuls
add
out
stc
stos
push
jb
sbb
inc
lret
sahf
das
xchg
in
mov
rcrb
lret
xorb
xchg
or
das
loope
popa
stc
lea
or
cld
xchg
pop
sarb
lcall
movsl
sub
mov
mov
mov
and
and
xor
mov
adc
jb
add
lahf
ss
pop
sti
lods
adc
pusha
mov
sub
ds
aaa
sbb
ja
add
dec
mov
test
in
adc
mov
mov
pop
mov
and
sub
scas
cltd
sub
or
xor
aad
lret
adc
call
cs
pop
cmp
fcoms
xchg
and
in
push
xchg
data16
ja
mov
daa
repnz
adc
add
add
scas
xor
pop
jl
xor
loope
outsl
adc
dec
loop
pop
andb
wbinvd
inc
ss
xchg
cmpsl
push
int3
lret
pop
out
cmpl
mov
jp
inc
lods
cmpsl
faddl
sub
pop
inc
into
gs
or
cld
cmp
mov
inc
aas
cmp
and
ss
sbb
sub
xchg
stc
sub
pop
mov
out
mov
fs
mov
arpl
dec
or
nop
pop
insb
mov
pop
or
or
rol
cmc
push
or
mov
fdivl
cli
out
sub
out
adc
inc
cld
fidivrl
fisubrl
repz
pop
cmp
insl
xlat
pop
mov
cltd
hlt
cmp
fsubrs
cltd
rcrl
jae
adc
mov
out
out
jmp
leave
sub
in
pop
push
mov
mov
add
rolb
sbb
fsubrs
inc
stos
aaa
push
outsl
ret
das
or
aas
insl
pop
out
fsubr
add
ss
je
xlat
js
mov
test
jbe
and
inc
test
insl
sub
and
fldenv
les
pop
pusha
testl
add
or
adc
dec
lret
lock
mov
int3
rorb
test
jle
pop
adc
scas
mov
pop
xor
in
push
js
mov
js
jns
xchg
in
dec
aas
and
outsl
shlb
inc
ret
inc
mov
mov
scas
lds
jge
sbb
sub
rorl
adc
in
lret
jge
push
or
mov
rcl
insl
enter
jecxz
repz
daa
inc
dec
repz
xchg
aad
add
jnp
arpl
pop
pop
sti
sub
shl
fs
loop
in
xlat
xchg
jg
or
push
icebp
inc
mov
lds
js
mov
sbb
shll
mov
ss
or
inc
pop
ss
aas
pop
outsl
add
jle
es
xchg
jns
icebp
insb
add
loopne
lock
or
dec
or
test
test
mov
cmp
pop
adc
mov
in
pop
cli
inc
repz
adc
adc
popa
ja
orl
lret
xlat
and
aas
dec
movsl
add
loopne
push
mov
sub
pop
push
fcoml
stos
cmp
in
xor
mov
sub
fiaddl
ja
push
and
inc
mov
repz
adc
dec
jmp
fwait
cmp
popf
jmp
ret
mov
adc
inc
int3
sub
hlt
mov
ret
sarb
nop
pop
aaa
testl
sti
mov
ret
addb
call
cs
adc
jg
adc
dec
int
push
inc
mov
repz
arpl
lret
in
lret
incb
insb
jmp
or
pop
or
inc
or
cld
lods
pop
and
out
push
jge
ja
adc
je
inc
incb
cmp
mov
xchg
fwait
xor
push
sar
or
push
je
fiadds
call
mov
frstor
icebp
jb
or
ds
in
cwtl
mov
sub
mov
cwtl
test
adc
enter
or
pop
inc
gs
xlat
ret
mov
test
cmpsl
push
lds
mov
sbb
mov
sarl
cmp
pop
or
fimull
popl
cmpsl
push
jo
lods
cwtl
xor
popa
pop
mov
int3
mov
ret
imul
mov
sbb
push
mov
or
js
js
sbb
adc
dec
pop
adc
jb
hlt
cmp
xlat
mov
pop
push
test
push
xchg
or
insl
and
cmp
or
sbb
dec
pop
hlt
out
push
push
and
data16
inc
xchg
jecxz
lock
cwtl
lret
pop
int3
in
or
pop
cmp
jae
mov
mov
rclb
mov
mov
jle
pop
cs
mov
cmp
ss
add
pushf
mov
mov
push
sub
testl
mov
imull
cmp
fisubrs
out
cld
mov
test
sbbl
lahf
test
xchg
je
jecxz
cmp
imul
xchg
stos
clc
jnp
shll
pop
les
jp
pop
in
es
in
dec
mov
cmc
push
cmp
cmpps
and
loope
sahf
aas
loop
mov
jbe
scas
dec
call
or
xchg
pop
push
out
add
fwait
xchg
add
adc
rcrl
sub
cmpl
gs
nop
mov
xchg
inc
insl
xchg
repz
adc
stos
popa
xchg
notb
outsl
outsl
inc
sub
fstpl
addr16
fisttpl
pop
mov
addr16
mov
clc
ror
mov
or
rcrl
mov
inc
ss
xor
std
pop
dec
fisttps
dec
negl
stos
aad
push
mov
mov
bound
stos
push
sti
loopne
pop
push
push
add
jg
fbld
mov
and
roll
dec
xchg
lahf
push
loope
cmc
and
lar
and
pop
daa
rcrl
xor
cmpsb
mov
sbb
xor
sarb
sub
nop
ror
pop
imul
scas
adc
push
popf
sahf
cmc
mov
mov
fdivrl
mov
or
cmp
lahf
orl
ja
mov
push
jl
pop
cmp
data16
xchg
pop
lds
out
stos
dec
pop
mov
lret
icebp
test
lret
adc
mov
mov
test
mov
mov
int
cmpsl
jecxz
insb
adc
cmp
outsb
scas
xchg
xor
out
in
adc
mov
imul
xchg
cmp
hlt
aaa
sarl
pushf
bnd
adc
mov
es
shlb
dec
lahf
ss
fsubs
repnz
shl
mov
add
sbb
in
test
mov
xlat
outsl
xchg
test
jle
dec
push
push
mov
pop
test
test
mov
fldt
out
fs
test
cmp
push
sbb
pop
mov
inc
aas
jecxz
or
cld
into
pop
test
or
lret
mov
rol
inc
jns
xor
fcmovnb
sbb
test
ret
nop
mov
mov
fldt
push
shl
mov
jl
mov
jmp
push
fiaddl
add
push
cmpsl
and
in
bound
inc
stos
inc
xchg
jne
lret
pushf
lcall
es
xor
arpl
jne,pt
outsl
int3
and
push
adc
push
adc
fnstenv
daa
or
shlb
iret
sub
popa
notb
je
add
out
das
or
mov
and
adc
push
leave
jb
mov
rcl
jno
shll
jnp
xchg
ja
sbb
ficoml
pop
mov
adc
rolb
mov
mov
fcmovnu
mov
pop
jbe
insb
imul
inc
ds
sub
inc
dec
rcrb
mov
mov
jns
pusha
stos
cmp
fstpl
adc
xchg
cmpsl
mov
push
rolb
jno
sbb
dec
mov
pop
cmpsb
mov
ss
mov
push
stc
rorb
aam
xchg
cmpsb
les
xchg
push
jl
jno
sbb
movsb
rol
mov
pop
test
rclb
xchg
jmp
add
pusha
xchg
jg
lret
sub
jle
xor
xchg
sti
testb
push
xchg
cwtl
pop
nop
loop
xor
pop
pop
adc
ret
in
in
inc
dec
xchg
imul
mov
xor
jecxz
mov
mov
out
fs
dec
loopne
mov
mov
ret
in
imul
mov
ja
imul
dec
push
lods
adc
ds
pop
in
xor
outsb
out
cli
push
xor
mov
fbld
clc
cmpsl
push
shlb
cltd
mov
adc
xchg
jnp
mov
gs
int
ljmp
and
in
xor
xor
cmp
lods
xchg
push
push
adcb
scas
inc
sahf
out
fimuls
cmpsl
stos
push
pop
hlt
inc
fdivrs
xor
imull
pop
dec
push
fstl
add
adc
subl
xchg
mov
push
subl
push
js
mov
out
sbbb
jl
test
and
shr
or
xchg
mov
sub
pop
stc
push
mov
rorb
mov
cs
outsb
stos
pop
mov
add
mov
fidivs
std
push
icebp
sbb
sub
pop
jne
fnsave
int
jecxz
popf
mov
xchg
cs
inc
sub
xchg
mov
jne
mov
shrb
add
loop
stos
cltd
sub
fcompl
adc
cmp
xor
outsb
sarb
mov
dec
push
sub
ds
out
dec
cmpsl
leave
mov
insb
ja
pop
outsl
ja
mov
and
xchg
int3
fdivp
test
xchg
pop
mov
cmpsl
in
cs
ss
cld
imul
pop
xchg
push
insl
mov
or
int
xchg
addr16
clc
cmp
sub
add
dec
ja
call
adc
hlt
test
std
xchg
dec
ror
jl
push
xorb
mov
and
imul
mov
lret
pop
jmp
pop
fadds
mov
mov
insb
add
push
fs
push
testl
dec
popa
ja
mov
test
cli
add
leave
mov
fstl
orb
jno
repnz
imul
and
jns
nop
out
sbbb
xchg
mov
add
iret
mov
xchg
lret
in
popf
imul
mov
pop
xchg
mov
push
mov
inc
out
cmpsb
stc
or
loop
fucom
aaa
sbb
push
ljmp
add
popf
and
jmp
stc
and
jmp
scas
push
dec
xchg
jmp
ss
jbe
enter
mov
push
push
sub
sub
lds
and
push
js
jge
sti
iret
mov
imul
shll
inc
lods
inc
js
pop
adc
adc
mov
adc
push
in
das
stos
sbb
jle
mov
test
sub
push
sbb
inc
aad
push
stos
loope
data16
push
push
lock
neg
mov
mov
fsubl
jne
cmpsb
aam
jl
cld
or
popf
movsb
cmp
pop
pop
icebp
aaa
dec
pop
lds
fstpt
push
mov
push
fsts
in
cmc
push
xor
movsb
icebp
je
lods
les
mov
enter
push
ds
pop
decb
push
inc
pop
mov
cmpsl
pop
lret
fmuls
in
les
ret
inc
adc
fwait
sbb
push
cmp
hlt
arpl
fnstsw
dec
add
xchg
test
mov
fcomps
clc
push
call
add
bound
fistl
inc
dec
lods
xchg
mov
add
push
xor
mov
outsl
arpl
test
or
movsb
sti
mov
push
sub
push
jge
movsl
daa
jnp
lods
inc
insb
sub
lahf
jnp
incb
out
ds
idiv
mov
in
insb
sbb
lahf
xchg
pop
icebp
test
push
daa
daa
scas
fdivl
inc
cmpsb
lock
test
add
daa
mov
dec
popa
outsl
movb
pop
mov
jge
leave
lods
fs
ja
adc
ljmp
fwait
addb
xchg
mov
mov
push
inc
adcl
test
lret
push
xchg
es
ja
mov
sbb
ja
mov
cmp
push
dec
push
cltd
aad
xchg
jl
movsb
dec
mov
pop
jle
loop
shl
push
add
popf
into
sub
je
movsb
movsl
jns
dec
mov
jmp
and
out
sub
inc
add
xacquire
cmp
push
jmp
mov
jl
test
in
aas
pop
je
aaa
and
cmpsl
test
mov
enter
sub
repz
jge
dec
sbb
push
add
inc
cmc
insb
adcb
hlt
or
test
jne
push
inc
jnp
push
jp
stos
xor
adc
xchg
lret
ja
test
mov
or
aam
sbb
ss
dec
imull
or
push
push
xor
pop
ss
aaa
jle
pop
jnp
cmpb
mov
xor
sysexit
xlat
push
adc
rcrl
adc
dec
lock
add
sub
xlat
sbb
clc
mov
pushf
outsb
std
mov
sbb
mov
popa
xor
jo
fs
dec
js
popa
add
sbb
push
adc
cmp
call
push
mov
iret
add
jne
ja
cmp
jl
cwtl
cmp
sbb
pop
fdivr
sbb
pop
fnstsw
pop
mov
shrb
inc
jmp
and
push
cmpsb
sbb
scas
adc
jmp
popf
xor
imul
mov
inc
pop
mov
shrb
lds
dec
push
or
jnp
pop
lcall
adc
lret
push
loopne
mov
mov
sbb
lock
loopne
jne
lds
dec
jp
stos
jmp
test
mov
mov
in
mov
pop
push
lret
and
xchg
ja
out
pop
pop
jge
pop
arpl
add
and
jle
fnstenv
orb
cltd
pop
mov
pop
in
and
push
inc
dec
xor
lea
mov
mov
bound
mov
popa
out
aam
or
test
sub
clc
mov
adc
inc
stos
and
jecxz
stos
jmp
jp
inc
and
jb
inc
or
sub
and
jmp
mov
xchg
and
jge
cmp
fcom
add
mov
loope
call
push
adc
cmp
aad
loop
adc
and
dec
out
and
divb
mov
adc
fistl
push
popa
shrb
add
mov
clc
ja
or
or
xchg
lods
push
mov
insb
mov
mov
or
mov
xchg
outsl
push
xchg
pop
mov
stos
push
out
bnd
ljmp
neg
inc
imul
loop
movsl
sub
push
xchg
xchg
jge
push
scas
mov
stos
call
xchg
out
push
sub
jne
sub
inc
jae
add
sbbl
push
mov
sub
xchg
hlt
scas
jp
inc
inc
jnp
repz
into
mov
jnp
pop
lret
dec
pop
jno
push
out
incl
and
stos
adc
cmp
add
in
push
push
inc
mov
arpl
pushl
loop
xor
add
test
hlt
sub
adc
repnz
addr16
pushf
cli
fadds
mov
cwtl
stc
sbbl
cmp
ret
cld
adc
sbbb
cmp
scas
mov
or
fdivrp
xchg
add
push
lcall
jb
sti
push
mov
into
roll
fnsave
sub
pop
ljmp
inc
or
cmp
das
sbb
insl
rcl
cmp
jne
fwait
push
or
cmp
xchg
add
loop
shlb
xor
mov
pop
sub
cmp
xchg
push
or
lret
icebp
or
and
mov
sbb
inc
es
cmp
push
jns
jl
mov
bound
pop
sbb
shll
cmp
mov
mov
mov
mov
push
cmp
fisubl
pop
cmp
pop
mov
lretw
das
cmpsb
xchg
pop
ret
mov
out
sbb
sti
lods
inc
std
sub
fs
hlt
jae
cmp
out
popl
dec
hlt
xor
xchg
dec
fdivrp
lds
mov
sub
rol
ret
add
push
cli
mov
mov
mov
lcall
popf
jecxz
test
cmp
push
cld
icebp
insb
sti
inc
outsl
sbb
push
push
loopne
dec
loope
fnsave
add
dec
adc
shll
dec
daa
in
popf
jecxz
ss
rolb
dec
xchg
call
cmp
adc
xlat
mov
sub
jnp
lods
sbb
das
adc
push
dec
rcrb
fdivrl
inc
xchg
mov
pop
aam
sub
mov
shll
inc
xchg
hlt
lcall
movsb
pop
dec
pop
ljmp
mov
stos
dec
fs
cmp
mov
mov
cmp
jl
pop
stos
jo
mov
sub
enter
mov
stc
mov
cmpsl
pop
xchg
and
push
adc
out
clc
or
sub
sub
fildl
pop
sahf
gs
lods
lret
filds
or
hlt
movlps
inc
mov
fmuls
aad
outsb
imul
sbb
decl
push
insl
aam
aaa
jp
jnp
xchg
out
inc
mov
cmc
pop
das
pop
int
or
xor
mov
cmc
lods
inc
je
cmp
aaa
xchg
lret
ret
es
sbb
pop
ret
stc
mov
aaa
int3
sub
outsl
ret
xchg
jmp
mov
loope
push
add
fiadds
cmpsb
and
data16
mov
pop
scas
or
xchg
pop
andb
mov
pop
cwtl
sahf
popa
dec
cltd
push
enter
jo
or
dec
fdivl
cmp
jno
and
dec
xchg
fisubrl
inc
loopne
mov
dec
mov
sbb
cmp
in
stos
in
cmp
add
and
outsl
and
cltd
dec
in
mov
fs
loope
sub
and
out
sub
es
xor
cli
int3
jo
lret
mov
fs
xchg
in
pop
dec
xchg
jo
shrb
dec
fbld
rorw
insb
scas
ja
xchg
js
ss
decb
addr16
xchg
dec
flds
cmc
je
pop
and
movsl
cmp
movsl
sbbb
in
sub
pop
cmc
sbb
stos
jne
push
decb
push
mov
push
mov
js
mov
lock
push
sub
mov
test
inc
loop
outsl
syscall
jne
out
mov
xchg
xor
ds
cmp
pop
lahf
ret
cmpb
or
dec
clc
ret
loope
cwtl
lds
add
dec
mov
nop
daa
pop
jmp
scas
daa
sub
lds
jno
imul
lods
clflush
xchg
lods
mov
rolb
je
xor
push
push
sbbb
xchg
and
js
sub
orb
xorb
sbb
mov
lahf
sbb
es
scas
sbb
add
xchg
jmp
dec
push
pop
push
popf
mov
out
adc
cltd
push
adc
imul
xor
pop
sti
pop
scas
orl
adcb
sbb
sbb
pop
stos
cmc
jl
mov
add
out
clc
nop
out
and
adc
pop
xor
push
scas
fldcw
clc
pop
inc
push
xchg
cmp
outsl
orl
fcomps
cld
jg
stc
pop
hlt
ja
pop
rorb
das
adc
cs
aaa
xchg
sub
jne
mov
stos
and
xor
adc
stos
lret
repz
and
jle
inc
add
xlat
and
repz
inc
mov
fiadds
mov
outsb
or
in
push
pop
dec
shrl
sub
lret
sbb
addr16
sbbb
push
aaa
xchg
and
push
repnz
push
mov
push
pop
das
outsl
mov
push
and
lock
xchg
and
dec
popf
sbb
fs
mov
out
inc
sbb
pushl
push
cs
dec
sub
jns
icebp
or
nop
je
clc
mov
ret
pop
stos
mov
ficoms
lret
xchg
push
ret
fst
cmp
out
mov
das
adc
dec
arpl
or
or
inc
lcall
xchg
dec
add
movsb
mov
sub
xchg
dec
out
lret
ret
sub
pop
sub
push
fildll
adc
jno
mov
lock
mov
sub
call
xor
mov
iret
inc
fstpt
lods
sub
lahf
bound
adc
and
mov
mov
insl
mov
xchg
stos
and
lock
xchg
push
xchg
enter
sbb
jbe
cld
ja
mov
sbb
mov
pop
cmpsb
scas
pop
jl
insb
or
cmp
fwait
scas
jp
and
test
cmp
sbb
mov
mov
bound
add
xor
xor
and
in
lahf
stos
push
loope
dec
repz
xchg
mov
mov
and
dec
and
std
ret
dec
out
testl
add
sub
not
sub
and
lock
pop
and
dec
mov
cld
out
mov
adc
lahf
xchg
cmp
push
jmp
mov
jae
and
sub
fwait
push
shlb
jg
fbstp
pop
aaa
fcmove
mov
cmp
imul
pop
clc
movl
daa
mov
nop
xor
adc
enter
insb
xchg
dec
leave
outsb
rolb
sub
jnp
add
sub
ss
or
ss
adc
out
adcl
xor
cmc
sub
mov
mulb
ret
inc
stos
mov
pop
out
ljmp
jle
and
jnp
mov
popf
mov
sub
lock
mov
push
add
or
les
sbb
pop
dec
sti
jecxz
stos
dec
loope
push
mov
daa
sar
repnz
sub
sub
adc
outsb
lahf
xchg
jecxz
jp
cmpsl
popf
sub
dec
rcrb
jp
rcrl
xchg
sub
sbb
out
das
jae
mov
andb
xchg
jecxz
mov
mov
xchg
jp
dec
jbe
gs
inc
add
jmp
into
out
sbb
lock
mov
sahf
xlat
outsb
shl
push
adc
xchg
xorl
mov
or
add
out
stc
out
cwtl
nop
unpcklps
push
adc
jb
sub
lret
xlat
outsl
aaa
xchg
stos
lret
lret
in
adc
dec
ja
insb
cmc
dec
dec
divb
ja
xor
test
ljmp
jno
adc
adc
pop
orb
bound
adc
xchg
mov
movsl
scas
mov
inc
dec
lock
sarl
push
pusha
ss
jp
add
scas
pop
out
in
imul
popa
adc
add
jne
inc
pop
shrb
ljmp
dec
shll
je
and
aam
sahf
shlb
and
cmp
add
in
cmp
cmp
sbb
push
sbb
pop
cmp
lahf
sub
mov
es
xor
popa
lods
cmp
mov
pop
gs
pop
out
gs
fwait
xor
mov
shll
iret
mov
lret
push
lock
pop
and
xacquire
dec
lahf
in
push
or
out
mov
stos
cld
push
out
subl
shrb
inc
lea
fists
and
mov
add
lods
sbb
adc
dec
dec
out
aaa
cmpsb
lret
pop
mov
stos
scas
or
dec
cmp
frndint
xor
cmp
insl
out
add
pop
insl
test
lcall
fbstp
call
sti
negl
ljmp
clc
or
fcoms
iret
pop
add
loope
idivb
cs
mov
mov
sbb
ret
xchg
and
adc
clc
sarl
dec
mov
adc
aad
cmpsb
add
aas
mov
outsl
sahf
out
dec
pop
sahf
enter
loope
inc
out
add
fcoml
mov
jo
push
aas
sub
inc
shrl
dec
and
cmpsl
out
inc
jmp
int
and
mov
add
cmc
xor
mov
scas
stc
fs
iret
xchg
push
roll
ds
icebp
shr
fcmovu
mov
insl
hlt
int3
lret
stos
jbe
inc
inc
leave
subb
xor
pusha
xor
stc
push
inc
and
mov
push
icebp
pushf
mov
cmc
push
popa
mov
pop
mov
bound
inc
mov
testl
movsl
cmp
dec
outsb
push
repz
stos
inc
xchg
test
cmp
xchg
ret
out
fs
and
sbb
insb
or
fidivrl
inc
ret
add
push
push
outsl
fs
fldt
in
pop
aas
les
or
pop
mov
ret
and
mov
xor
ss
adc
or
cmpsl
arpl
jae
aaa
xchg
mov
xchg
lods
mov
sbb
ds
stc
pop
in
or
cmp
mov
and
negl
loope
int
and
jae
xchg
popa
xlat
cmp
xor
sub
sub
add
push
scas
int
rorl
jb
xchg
mov
inc
imulb
outsb
test
xchg
add
dec
sub
imul
out
xchg
jb
pop
jbe
sbbb
into
iret
adc
repz
push
out
cmp
cmp
and
lds
sbbl
mov
add
movsl
insb
jle
in
negl
xor
mov
sub
jb
jo
pop
jb
push
jae
jbe
cmpsb
inc
ficoms
pop
lahf
pusha
loope
in
xchg
jns
daa
jbe
lcall
cmpsb
test
shlb
dec
idivl
shll
pushf
inc
fistl
popa
xor
lods
or
or
stc
addr16
sub
mov
cwtl
dec
pop
cltd
jg
ds
sub
imul
dec
inc
inc
xchg
pop
jbe
int
loop
or
add
shrb
add
shlb
addr16
popf
les
sbb
into
jge
sbb
jp
dec
loopne
xchg
hlt
xor
jle
push
call
jo
sub
inc
dec
nop
mov
xchg
popa
mov
in
test
sub
adc
pop
orl
lock
aad
les
or
dec
out
jo
and
add
dec
pop
xlat
mov
push
adc
fisttpl
mov
out
pop
das
mov
shrb
or
out
pop
sub
cmpl
cmp
je
jnp
out
and
adc
mov
aam
inc
bound
clc
daa
push
mov
mov
ja
mov
cltd
sbb
out
test
jne
cli
faddp
fidivrs
push
mov
sahf
pop
sub
push
repz
mov
mov
icebp
inc
adc
add
jmp
sub
xchg
add
out
addr16
mov
lods
jge
adc
rol
jns
sub
inc
lret
minps
jne
call
jbe
inc
movsb
scas
xchg
mov
xchg
mov
scas
mov
cmp
hlt
pop
popf
ret
shrb
push
mov
pop
rcrb
das
mov
hlt
xchg
shlb
pop
out
add
xor
and
push
gs
cwtl
pop
mov
iret
scas
xor
lock
fsubs
pop
mov
cmp
mov
pop
mov
data16
mov
rcrl
pop
cmc
dec
inc
push
outsb
xorl
mov
mov
dec
test
push
push
xlat
loop
outsl
cmp
dec
jecxz
jp
mov
push
in
pop
hlt
push
xchg
fidivs
jno
imull
push
pop
jne
or
push
inc
sub
inc
lret
rclb
test
inc
dec
nopl
movsl
fdivl
int
jle
fadds
ret
stc
inc
stos
fnstenv
cmp
dec
shlb
pop
push
jmp
xchg
push
scas
in
fiadds
adc
std
sub
adc
pushf
xor
xor
sahf
inc
fcomps
fistl
fsubrs
stc
sub
adc
push
mov
imul
sub
add
pop
jb
inc
sub
push
cmpsb
in
aas
mov
mov
gs
xchg
jbe
subb
enter
sub
enter
mov
pop
mov
mov
push
dec
test
adc
adc
sub
leave
pop
adc
lret
fwait
xor
ss
or
xor
add
pop
fdivl
js
add
repz
in
jae
cmp
mov
hlt
out
sub
add
data16
loop
stos
loop
idivb
inc
xlat
mov
sub
flds
divl
sub
lret
das
cmp
pop
popa
stos
fcom
dec
dec
mov
xor
mov
out
or
shrb
jo
test
mov
fimuls
dec
or
mov
mov
rcrb
xchg
and
scas
popf
shl
into
shlb
jo
dec
add
repz
fucomip
sti
adc
mov
dec
ret
lret
call
in
jge
xchg
pop
mov
sbb
or
imul
ds
test
pop
popa
or
lret
sub
clc
push
popf
les
mov
adc
fldcw
fs
lods
arpl
aam
test
xor
ss
filds
push
push
pop
sahf
xorb
sub
mov
cld
mov
inc
xchg
mov
adc
stos
xlat
mov
jge
pop
stos
push
sub
jmp
and
aad
lock
sub
stos
daa
data16
push
jl
or
push
cwtl
std
dec
jecxz
in
mov
lds
repz
add
fcomps
test
aas
out
js
ret
in
bound
mov
dec
fmull
mov
cld
mov
mov
sub
mov
jmp
clc
sbb
leave
pusha
dec
push
push
push
test
pop
jne
or
nop
and
xchg
dec
in
fcomps
sub
iret
addr16
pusha
sahf
lcall
out
mov
insl
aam
leave
lahf
and
out
mov
pushf
adc
push
js
add
xor
loop
dec
inc
dec
aaa
pop
dec
xor
push
sub
pushf
jno
xchg
inc
cmpsb
test
daa
push
sbb
xchg
lods
sbb
fistpll
cs
jae
dec
dec
cmpsl
test
es
cmp
clc
pusha
sbb
loop
inc
outsl
iret
mov
divl
pusha
dec
in
ja
outsb
cmpsl
mov
test
lret
outsb
mov
ljmp
test
inc
popa
cli
mov
sbb
or
push
mov
and
add
cmc
jae
mov
lods
dec
dec
sbb
dec
fbstp
call
lds
pop
shrb
inc
xchg
nop
addr16
push
out
add
pusha
test
xchg
cli
std
push
out
cs
sub
cs
pop
test
add
popf
pop
xor
push
jp
subl
daa
jb
pop
pcmpeqw
scas
out
inc
ret
push
mov
rorl
sarl
inc
fbstp
sbb
dec
sar
fwait
mov
pop
lret
aam
or
mov
dec
aas
xlat
outsb
push
fmul
rorl
xor
mov
sbb
cs
js
cmovbe
inc
pop
push
dec
iret
sub
push
jb
in
aam
xor
xor
or
lcall
outsl
mov
stos
lds
mov
in
out
loope
loopne
call
test
or
xchg
sbb
mov
inc
xchg
jbe
lahf
out
cmp
mov
jmp
and
lret
and
rcll
jb
push
aad
and
dec
xchg
cmp
cwtl
arpl
mov
sub
or
aam
loope
jge
mov
rcr
mov
bound
fcmovu
cltd
shrl
dec
push
stos
gs
ret
dec
mov
adc
ret
bound
pop
out
push
jnp
nop
fildl
add
sbbb
mov
imul
arpl
xchg
cmpsb
mov
test
push
fs
pop
pop
scas
notb
xchg
cs
into
jb
pop
jnp
mov
shll
lahf
cmp
repnz
push
mov
inc
mov
pop
or
push
or
loope
push
mov
lds
in
testl
popa
es
mov
out
pop
xor
jge
adc
dec
or
add
dec
nop
xchg
insl
push
mov
pop
int
jns
test
inc
pushl
push
push
mov
inc
sub
out
popa
scas
jg
ror
stc
aad
popa
pop
sbb
sbb
push
cmp
stos
add
push
cmp
adc
mov
test
movsl
push
std
cmp
das
inc
ljmp
xlat
mov
test
mov
les
test
je
sarl
stc
jg
adc
jb
jns
enter
leave
mov
push
push
insl
adc
outsl
xorb
pop
int3
jo
addr16
xchg
pop
sub
push
push
mov
adc
stos
pop
cmp
jne
sbb
dec
mov
jmp
pop
mov
jne
sbb
push
jge
popf
andb
mov
jno
adc
fnstsw
and
loope
lahf
testl
xchg
jg
xor
mov
sbb
mov
cmpsl
mov
into
clc
iret
jl
dec
loope
sahf
push
and
repnz
ljmp
xchg
pop
xor
push
sarl
incl
fisubs
pop
jne
rol
jns
xor
dec
addr16
push
mov
test
out
jo
pop
out
cwtl
and
loope
inc
int3
fdivs
imul
xchg
sbb
fdivl
jge
adc
pushf
test
push
sbb
sbb
jle
mov
aam
jge
mov
shrb
add
pop
jmp
add
sbb
add
mov
xchg
jle
gs
dec
imul
push
insb
cs
push
cmpb
fimuls
lods
adc
jecxz
pop
aaa
dec
cmp
stos
jbe
cld
dec
dec
jmp
lret
int
jg
push
and
mov
pop
lds
or
std
jg
popf
jle
push
cmc
aaa
addr16
jecxz
add
pop
sub
repz
sahf
stc
sbb
test
add
mov
push
stc
fidivs
cmpsb
jbe
hlt
sub
mov
mov
sbb
add
sbbl
xor
es
js
cs
inc
and
or
test
lret
or
inc
aaa
mov
test
pop
mov
sbb
xchg
imul
icebp
mov
jne
push
push
mov
lds
sub
dec
outsb
loopne
xchg
dec
out
popa
dec
cmp
out
jb
cmp
and
pop
or
mov
jno
sub
dec
bound
je
lods
inc
sbb
mov
incb
mov
mov
setl
fwait
imul
dec
and
cmp
testb
push
and
cmpsl
cltd
pop
cmpsb
cmp
subl
out
outsl
daa
dec
jae
ljmp
pop
jp
mov
ret
movsl
loop
test
arpl
jmp
icebp
jecxz
cmp
pop
inc
dec
loopne
outsb
sahf
xor
adc
mov
daa
xlat
fimuls
dec
pop
into
out
shrl
mov
test
mov
lock
rcr
sub
sti
adc
add
sbb
adc
ja
lahf
mov
test
pushf
sbb
loop
cwtl
xlat
cmp
fs
inc
xor
jno
adc
lret
jmp
push
scas
ds
dec
enter
sahf
push
xor
inc
cmpsl
mov
jne
mov
cmp
cmp
mov
les
insb
ja
xchg
mov
push
movsb
xor
cmpsl
mov
sub
mov
lcall
cmpsb
jns
arpl
jge
jbe
xor
or
mov
test
rep
imul
add
stc
popf
sahf
or
dec
pop
jo
inc
stos
push
mov
pop
sarb
leave
and
inc
push
jmp
lods
mov
pop
adc
dec
in
adc
shll
dec
fwait
push
push
cltd
enter
dec
insl
fwait
bound
in
mov
mov
dec
repnz
fwait
add
test
xor
and
fdivrl
pop
sub
sub
dec
loope
xorb
mov
rorl
mov
cli
push
int3
js
test
mov
xor
repz
sbb
xchg
pop
fldenv
and
mov
jg
gs
mov
cmp
add
repz
and
xchg
add
es
push
adc
xchg
mov
mov
push
mov
mov
cmpsb
xchg
je
test
pop
sbb
jge
cmpsb
cmp
jp
lret
ret
lds
fnstsw
add
in
test
pop
push
cs
pop
pop
mov
add
aam
pop
mov
loopne
insl
loopne
mov
outsl
sar
jle
outsb
imul
pop
mov
cmp
mov
cmpl
or
in
push
jbe
mov
fsubl
insb
ds
inc
fsubs
or
dec
xor
pop
jo
mov
dec
pusha
movsb
jne
cmpl
cmp
scas
pop
aad
mov
rolb
stos
adc
fnsave
ror
movsl
andb
push
in
lods
je
mov
sbb
xorl
cmp
adc
cwtl
and
sahf
adc
lcall
jne
push
mov
std
jo
inc
movsl
cmp
daa
out
test
cwtl
pop
data16
rorb
mov
test
or
lods
push
daa
mov
pop
das
inc
mov
xchg
js
xlat
jbe
xchg
and
ficoml
mov
cs
hlt
dec
mov
push
and
push
pop
sbb
ret
jge
mov
in
sbb
xlat
jp
imulb
sub
insl
add
insl
out
out
and
divl
cmpsb
push
xor
xchg
call
repz
mov
xor
clc
cwtl
das
gs
lds
xchg
mov
and
into
in
jb
cmp
addr16
les
gs
push
jmp
push
aaa
dec
add
roll
into
sub
pop
fbstp
jno
xchg
movsl
mov
or
add
and
stc
inc
pushf
cmpsl
std
dec
or
loop
daa
jle
add
lcall
mov
lea
xchg
xchg
ljmp
lock
faddl
lahf
mov
push
cwtl
popa
mov
push
adc
push
mov
xchg
ds
imul
add
outsb
ss
mov
pop
adc
mov
out
or
incb
test
xor
scas
test
movsl
mov
mov
dec
adc
mov
xchg
jge
dec
mov
ficoml
in
int
push
sahf
mov
fdivrl
add
mov
sub
nop
xchg
mov
or
xlat
shrb
ja
mov
lret
pcmpgtd
cmpsb
lcall
xlat
jb
dec
adc
and
sarb
lds
lret
sub
sti
mov
fs
inc
fsincos
loope
aas
push
sbb
fmull
sub
sub
test
pop
aam
pop
je
cmc
out
test
add
lcall
push
mov
pop
pusha
cmp
icebp
xor
sub
outsl
mov
and
adcb
cmp
cltd
jnp
mov
pop
pop
lds
or
sbbb
xor
mov
xchg
cs
test
jno
scas
inc
sar
ja
and
cli
pushf
int3
sub
sbb
push
dec
adc
jns
into
fcompl
and
mov
sarb
jmp
mov
pop
jno
sub
cld
aad
jne
das
imul
push
push
das
in
loope
dec
mov
sti
out
bound
pop
iret
cmp
das
daa
ret
lds
or
xchg
push
add
xor
fldt
bound
sbb
jmp
dec
or
mov
mov
mov
sub
ret
adcl
push
test
int3
lock
mov
hlt
mov
pop
addb
outsb
rsm
sub
mov
cmpsl
jle
xor
jae
cs
lcall
pop
jno
sti
mov
inc
cwtl
push
mov
jb
and
xchg
jmp
iret
mov
or
adc
fsubr
imul
xchg
mov
popf
das
mov
ds
pop
adc
gs
shlb
ss
fisubrl
mov
clc
dec
testb
ss
sti
lock
lret
inc
push
mov
test
and
std
into
lods
pop
push
and
push
push
mov
add
loope
rcll
cltd
scas
sbb
jmp
push
inc
je
mov
out
dec
loopne
popf
in
add
addr16
mov
sbb
in
pop
stos
test
mov
clc
jnp
pop
lock
add
inc
addr16
in
les
mov
aad
jmp
fsubs
adc
pop
cs
lret
aas
pop
shr
sbb
push
sar
lea
mov
xchg
xchg
mov
popa
das
adc
test
mov
loopne
add
lods
push
testl
arpl
pop
mov
jb
test
push
xorb
jae
or
nop
xlat
cmp
rol
popf
adc
hlt
mov
dec
inc
lods
jg
in
les
pusha
and
sub
mov
adc
dec
lcall
push
add
dec
scas
pop
inc
cmpsb
add
outsb
or
mov
test
push
push
push
mov
imul
cmpb
loopne
movsl
mov
xchg
sarb
insl
aaa
or
xchg
mov
push
nop
dec
and
popf
pop
jmp
xor
cmp
or
dec
loop
and
imul
jmp
dec
jecxz
jecxz
dec
cmp
aam
mov
push
xchg
mov
mov
dec
inc
ja
pop
in
pop
push
inc
push
mov
mov
xor
rcll
mov
add
fadds
mov
jb
sub
mov
mov
push
insb
aad
ja
fimull
inc
and
mov
les
jb
pop
xchg
int3
lcall
scas
xorl
daa
lret
fistpl
jle
pop
test
jle
mov
adcl
pop
scas
std
pop
lahf
pop
mov
leave
pushf
mov
mov
push
cmp
fdivs
lret
lret
jb
ljmp
push
and
push
xor
fisubl
and
sti
lret
fdivs
mov
out
leave
ljmp
test
sub
push
out
cmp
les
cmp
sbb
sbb
cmp
jne
jnp
add
jge
pop
xor
lret
mov
xor
outsl
std
cld
lahf
subl
outsb
add
xchg
mov
cmpsl
fucomip
push
push
adc
cltd
push
mov
push
rcrl
xchg
in
pop
dec
mov
in
mov
loope
fwait
outsb
shrl
xor
scas
xor
out
test
lock
xor
js
in
mov
lret
out
leave
pop
mov
dec
add
test
cld
inc
add
mov
popa
test
js
and
xor
push
js
or
push
push
xor
test
sub
fbstp
mov
std
or
scas
sub
pop
sbb
pop
cmpsb
and
dec
jl
loopne
repnz
lods
fwait
stos
push
stos
or
pop
xor
inc
cmp
bound
iret
inc
scas
call
insl
adc
divl
xor
or
lcall
fldcw
jne
frstor
jl
or
add
subl
lahf
add
fneni(8087
lcall
jle
ficomps
adc
data16
in
push
jae
aam
fldcw
cmp
cmp
fdivrp
dec
mov
ds
adc
and
xor
pop
mov
cmp
jecxz
xor
mov
sahf
push
push
mov
loop
aas
push
aas
or
push
sub
xor
or
incb
arpl
out
cltd
das
inc
mov
in
or
das
pop
out
icebp
and
call
mov
dec
jo
fidivl
xchg
stos
and
aad
cmp
jge
cmpsb
dec
xchg
mov
push
jne
mov
dec
mov
xchg
sub
push
jae
in
mov
fldt
inc
les
push
mov
push
leave
jecxz
push
aam
inc
pop
stos
jge
stos
mov
mov
outsb
xor
call
mov
fadd
in
daa
ljmp
ja
sarl
mov
jp
inc
bound
cltd
lock
xor
push
data16
fdivs
sub
int
clc
out
fnsave
addr16
adc
xchg
lods
push
or
std
jl
mov
mov
stos
sti
inc
fwait
xor
mov
push
int3
dec
gs
cmp
push
mov
add
sbb
out
sub
shll
cmp
jno
cmp
mov
xchg
loop
enter
jecxz
push
lahf
dec
add
mov
data16
test
pop
mov
mov
sti
test
push
bound
or
outsl
les
lret
je
push
aas
xor
sbb
mov
mov
outsl
pop
filds
push
cltd
shlb
jno
sub
js
or
jne
dec
inc
dec
dec
and
cmpsb
cmp
jne
aam
jecxz
sub
adc
nop
pop
pop
lret
pop
aam
shrl
pop
gs
inc
icebp
adc
into
enter
scas
cmp
and
pop
hlt
ds
sub
dec
jle
fwait
inc
push
popf
ja
hlt
adc
sbb
or
loop
inc
call
test
inc
fistpl
xchg
xlat
icebp
sahf
idivb
cwtl
fucomi
mov
repz
out
lcall
jae
cld
jne
sub
push
inc
bound
test
ss
push
movsl
adc
xor
sarb
dec
sti
inc
stc
lods
inc
shr
cwtl
add
pop
pushf
push
add
push
mov
out
push
mov
insb
mov
sub
inc
hlt
aaa
fldenv
es
mov
icebp
jecxz
mov
popf
xor
imul
sahf
clc
push
inc
fisttpll
mov
or
dec
inc
and
push
movsl
sbb
jnp
add
sub
mov
sbb
add
fcomi
jbe
out
icebp
es
decb
xor
jl
idivl
fisubs
jg
lea
push
aaa
xchg
insl
pushf
sbb
aas
repz
push
scas
inc
jmp
popf
add
sbb
cmp
mov
aaa
aas
push
inc
repnz
stos
dec
cli
xlat
push
add
pop
push
insb
mov
iret
popl
pop
xor
pop
and
fistpll
popa
mov
pop
mov
pop
mov
mov
add
mov
ficoml
adc
and
sahf
pop
aaa
push
leave
xchg
icebp
lds
mov
pop
jecxz
mov
pop
das
pop
or
cmp
ss
popf
dec
jmp
mov
scas
js
fdivrp
push
loope
jp
push
sub
jecxz
lret
imul
jmp
cmp
pop
dec
bound
ja
pop
mov
in
in
lcall
adc
and
cmp
frstor
adc
mov
loop
nop
daa
cmp
aam
cltd
pop
sub
imull
std
aas
xorb
sarb
or
mov
xchg
in
loop
push
in
xchg
mov
ret
sub
fdivs
decl
jae
test
cmp
lea
xor
sbb
mov
imul
fimull
shl
or
mov
and
push
add
les
pop
in
fbld
push
add
std
xchg
pop
xchg
outsl
iret
jle
sbb
pop
sarb
mov
idivb
mov
imul
test
inc
cmp
cltd
loope
sub
imul
adc
push
popf
dec
aaa
mov
sti
fwait
pushf
imul
mov
push
imul
dec
add
out
in
mov
ret
insl
loopne
xor
dec
enter
pop
xor
test
hlt
xchg
xor
jle,pn
popf
lods
mov
dec
loope
jno
xchg
jae
or
inc
sbb
xchg
xchg
and
sbb
loop
push
xor
xor
gs
cmp
adc
xchg
imul
push
pop
in
lret
ret
lea
mov
insl
mov
aaa
mov
jns
rcr
ret
nop
daa
cmc
outsb
out
mov
dec
fsubrs
cmp
add
pop
fimull
bound
mov
xchg
adc
aas
popa
clc
outsb
fidivrl
mov
push
lods
dec
fisttpl
negb
in
push
inc
lods
subb
aaa
into
sahf
sbbl
cld
mov
mov
mov
addr16
jns
push
pushl
psubsw
es
jbe
sub
xchg
xlat
dec
fidivs
pop
push
xchg
dec
xchg
pop
lds
mov
test
inc
shrb
dec
adc
inc
lock
lret
push
jg
fs
cli
pushf
dec
shll
inc
sbb
cmpsl
mov
sub
hlt
nop
mov
mov
push
pop
add
pop
push
xchg
scas
mov
sub
push
sbb
sub
std
stos
outsl
fwait
xor
dec
pushf
adc
push
cmpsl
dec
sub
lcall
xlat
popa
fists
fwait
sub
scas
out
sbb
pop
mov
jg
fldenv
jge
icebp
push
push
test
or
xor
pop
sub
push
pop
js
lods
adc
mov
lods
inc
jp
in
sbb
jno
sub
jno
mov
je
mov
rolb
mov
sarl
mov
daa
mov
mov
outsl
push
mov
adc
add
mov
mov
jp
sbb
mov
ret
cmp
outsl
mov
fsub
cld
push
hlt
insl
xchg
mov
clc
jae
pop
cmpl
fdivrs
push
gs
inc
test
lods
neg
cmp
sbb
dec
mov
mov
mov
jle
cmpl
sbb
movsb
dec
sub
mov
inc
shrb
or
repnz
mov
pop
lock
in
aam
ja
or
lcall
xor
dec
imul
cmc
popf
inc
xchg
sub
cs
call
shr
and
cmp
cmp
pop
test
push
cld
cmp
push
iret
call
fsub
jp
imull
fs
and
incb
push
jl
adc
in
pop
mov
or
scas
jb
fldt
ret
push
xchg
sub
mov
aaa
cmp
pushf
mov
sbb
sahf
xlat
and
dec
mov
aas
sti
mov
scas
sbb
mov
sbb
push
jp
or
pop
dec
popl
cmp
pop
mov
movb
inc
arpl
in
test
xor
xchg
mov
cmpsl
inc
enter
mov
mov
or
sti
out
sub
inc
xor
fs
ficomps
fs
dec
arpl
subb
sbb
mov
cmpsl
adc
std
xor
or
fwait
in
stos
push
sti
clc
jg
ss
jge
outsl
sbbb
leave
add
inc
fldl2e
mov
mov
and
fucomip
adc
divl
adc
add
add
test
cmp
push
ljmp
mov
cmpsb
imul
pop
aad
add
mov
imul
cmpsb
lock
add
add
adc
jp
xchg
sub
xchg
or
mov
hlt
outsl
stos
in
cwtl
mov
inc
fldcw
jmp
cmpsl
mov
or
lret
mov
mov
xor
pop
xchg
push
mov
lret
cltd
xor
mov
inc
shrb
and
lret
bound
clc
pop
repz
xchg
adc
cwtl
jp
lret
lock
cwtl
je
and
nopl
jns
std
mov
and
inc
push
mov
cld
fs
in
push
jecxz
mov
andb
icebp
xchg
pushf
inc
sub
js
xchg
add
inc
fdivp
loop
push
jae
or
sub
sub
sti
dec
push
jb
lret
jp
int3
fdivrl
rorb
nop
test
push
fstps
push
loope
dec
mov
in
sbb
in
cmp
ja
push
fidivl
jl
es
fbld
movsb
sarb
or
and
and
std
lea
cmpsl
mov
adc
push
mov
std
sbb
sbb
ds
scas
out
push
in
das
imul
mov
or
jae
or
mov
lea
xor
call
sbb
pop
icebp
in
popa
leave
stos
push
jnp
sbbl
xor
enter
mov
cmpsb
sbb
dec
fbld
ret
data16
mov
pop
lods
test
push
dec
loopne
push
lret
inc
addr16
xchg
inc
addr16
adcb
lcall
sbb
mov
or
les
inc
addr16
push
pop
repz
add
sar
jbe
cmpsl
cmp
adc
adc
rol
out
fwait
mov
jne
lock
inc
hlt
aad
mov
ret
mov
mov
xchg
xchg
ds
mov
or
testl
stos
cmp
pushf
cwtl
mov
lods
ret
lods
ljmp
dec
pushf
sar
xchg
test
lret
js
lds
inc
cli
outsb
cmp
mov
fwait
sahf
push
and
subl
mov
test
fnstenv
pop
and
and
fildl
es
xchg
xchg
out
dec
xchg
sub
nopl
jo
push
mov
or
mov
jbe
sbbb
mov
in
pop
rcll
mov
and
inc
mov
idivl
or
fildl
push
cmp
lods
imul
and
inc
lods
xor
test
das
or
lds
dec
cmc
sbb
inc
push
dec
mov
cmp
adc
mov
fneni(8087
sub
add
ret
jb
in
popa
fwait
cmp
jl
out
fmuls
imul
fistps
mov
flds
push
jno
je
fdivp
stos
fisubrl
shrb
cmp
enter
sub
shrl
push
repnz
xor
fldl2t
xor
lods
dec
add
stos
xchg
shrl
mov
sarb
aas
addr16
lcall
and
push
in
movsb
xchg
pop
out
add
gs
xor
pop
lcall
ljmp
fs
inc
mov
xchg
scas
pop
into
mov
pop
adc
ret
fwait
lret
test
rcrl
stos
loopne
mov
pcmpeqd
mov
mov
inc
std
out
sbb
ret
jbe
mov
cmc
fimuls
leave
cmpsl
sbb
out
adc
mov
test
cmp
push
pause
push
xor
in
std
insb
push
mov
call
cmp
movsl
push
and
add
testb
or
montmul
cmpsb
add
clc
test
fsubrl
icebp
dec
cltd
int3
sti
mov
ret
or
inc
lahf
fiadds
pusha
divl
icebp
out
pop
mov
jle
mov
cmp
or
pushf
push
loope
xor
push
decl
cmp
xchg
cs
mov
jnp
or
fmuls
outsb
in
mov
push
jge
and
dec
cmp
jno
out
add
pusha
fldt
dec
inc
mov
dec
sahf
cmc
cli
fstpt
imul
cs
pop
movsb
jno
push
jno
jae
je
sbb
jne
xchg
test
dec
pop
test
add
lret
mov
gs
mov
fimuls
mov
pop
mov
sahf
cmc
pop
add
mov
push
iret
fldenv
dec
dec
mov
shl
cmp
aas
push
xor
mov
dec
popa
dec
mov
vreducepd
mov
dec
xchg
pop
jecxz
icebp
jns
sbb
or
add
jnp
loop
out
insb
shlb
inc
sbb
dec
inc
fstl
lock
pushf
or
scas
jbe
into
gs
arpl
orb
addr16
rorb
or
dec
loope
call
iret
lds
bound
gs
or
fisttpll
test
lahf
ja
dec
and
sti
adc
adc
dec
xor
mov
faddl
mov
js
lds
adc
pop
bound
in
jmp
daa
mov
jo
dec
inc
dec
push
cmp
enter
xchg
sub
xchg
stos
out
pushf
sbb
jp
test
lret
jae
fisubrs
popa
cmp
mov
jmp
sahf
mov
xchg
xchg
and
test
sbb
mov
ret
mov
fcmovne
out
cmp
pop
or
xchg
shrl
adc
jno
mov
or
xchg
cs
mov
add
nop
mov
cmp
sbb
out
xor
mov
fidivs
sbb
push
add
lea
mov
mov
clc
shlb
sub
cs
mov
fdivs
into
push
jno
jl
cwtl
lock
inc
cmpsl
add
mov
daa
mov
iret
inc
bound
or
xorl
jle
push
lods
inc
ljmp
mov
andb
cmp
xor
mov
shll
pop
outsb
jnp
pusha
stos
mov
imulb
add
jle
jmp
push
outsl
sbb
inc
pushf
push
scas
mov
cld
hlt
inc
aam
push
sbb
out
push
xor
insl
jp
mov
rcrl
mov
shll
imul
in
push
rcr
and
insl
jne
stc
lcall
sbb
popa
push
lods
sub
mov
or
adc
inc
push
add
jmp
pop
add
jg
dec
cmpsl
sub
ret
mov
jae
dec
loopne
xchg
sub
jae
adc
cmpsl
push
sbb
sbb
lret
aas
and
insl
pop
mov
jle
mov
outsl
sub
pusha
fstps
daa
das
cli
pop
adc
cmp
mov
fdiv
jmp
cli
leave
fcoms
xchg
mov
stc
push
adc
mov
adc
andl
in
leave
int
mov
addr16
pusha
nop
daa
xchg
sub
in
pusha
call
or
pop
mov
and
outsl
jge
das
sub
push
sbb
aas
mov
shlb
loope
xchg
dec
imul
or
or
iret
dec
inc
cmp
mov
add
sub
xchg
jmp
sti
mov
dec
je
mov
jl
and
mov
sbb
and
or
jns
push
jno
lea
pop
or
insl
jecxz
inc
fmuls
repz
shll
mov
aam
aaa
or
mov
or
loope
xchg
jbe
into
es
cld
outsb
xchg
dec
pop
repnz
pop
lahf
jbe
xor
stos
mov
xchg
cmp
aad
mov
jmp
pop
push
mov
loop
scas
xor
iret
sub
sbb
sahf
and
jb
icebp
jnp
and
push
xchg
shrl
jne
push
outsb
cmp
faddl
pop
add
subl
das
pop
cmp
jnp
das
ret
or
sub
shlb
or
lcall
hlt
jb
dec
mov
test
or
mov
mov
jg
ficompl
ficompl
fs
dec
cmpsb
jns
mov
xchg
jae
add
pop
jecxz
lock
or
test
mov
jecxz
inc
jle
sti
aaa
lock
pop
add
fisttps
cmpsl
fst
sbb
mov
sbb
fisubl
insb
ds
cli
or
pop
out
sub
mov
pop
scas
bndldx
mov
shl
sbb
js
cmp
popf
inc
sbb
xchg
sub
xor
sub
sbb
pop
subb
pop
push
fidivs
pop
adc
xor
das
movb
fnstenv
dec
mov
sbb
das
rcrb
mov
test
cmp
imul
mov
xchg
pop
push
and
pushf
cmc
xchg
pop
ljmp
add
bound
dec
jp
jo
fbstp
pushf
lock
xrelease
pop
mov
dec
loope
fcomp
mov
andl
dec
dec
dec
push
fiaddl
add
and
and
pusha
aaa
cmc
insl
aam
cwtl
je
out
ja
mov
ret
divl
movsl
call
mov
mov
dec
mov
push
shll
dec
and
js
clc
es
mov
test
cmpl
enter
sbb
sub
push
mov
les
lods
aaa
adc
shll
mov
push
xlat
shl
jecxz
cmpsl
ret
jle
add
jle
adc
or
cmpsb
mov
sub
xchg
mul
test
xchg
mov
jle
inc
inc
lds
add
push
mov
xchg
push
mov
or
scas
xor
inc
push
fbld
stos
cmp
mul
mov
fstps
sbb
rorb
adc
aad
push
out
aas
aaa
aas
imul
mov
ret
iret
addr16
inc
loopne
mov
fwait
outsl
mov
push
hlt
push
adc
leave
xchg
add
sub
inc
rcrl
mov
insl
jge
jp
test
add
adc
push
dec
mov
and
enter
mov
ds
mov
fsubs
sbb
enter
incl
insl
rcll
ret
pop
das
rclb
cmp
icebp
stos
mov
sbb
iret
das
shrl
push
xchg
lds
and
dec
pushf
mov
pop
adc
lea
es
xchg
ds
xor
jne
adc
mov
fldz
fnstsw
roll
fnstsw
lret
test
mov
add
jp
and
cmpsb
cmpsb
jne
jg
mov
pop
adc
jge
jo
pop
insb
mov
js
fdivr
repnz
sub
or
jecxz
mov
insl
sti
aas
aam
jge
in
cmc
sub
fs
cmp
cli
lcall
sahf
cmp
cli
daa
cld
xchg
jg
cwtl
stos
shrl
repnz
shl
xchg
repnz
in
loop
jne
pop
mov
out
imul
inc
inc
mov
roll
sub
push
std
cmp
inc
xlat
mov
sub
mov
push
cmp
xchg
sub
mov
push
sub
enter
lahf
arpl
xor
lret
xor
jge
sub
loope
std
jae
mov
adc
xor
cmpsl
ret
fwait
push
push
inc
dec
xchg
out
aam
lahf
nop
mov
add
ss
xor
pop
lea
pop
mov
out
sbb
xor
cmp
je
das
lahf
cli
xchg
btl
adc
in
jg
xor
addr16
repnz
pushf
adc
outsb
data16
dec
out
push
inc
push
mov
cli
mov
movsb
inc
cli
pop
push
aad
pop
jmp
or
ljmp
push
xor
les
call
in
loope
add
and
sbb
adc
xchg
pop
sub
lods
sbb
in
insb
add
outsb
shll
mov
popf
ret
xor
and
pop
movsl
out
pushf
or
mov
adc
mov
fwait
jl
adc
idivl
jl
inc
test
in
lret
pop
popa
dec
int
cmc
inc
cmp
pop
ljmp
xor
jmp
jmp
out
aam
sarl
or
sbbl
enter
sbb
dec
in
xor
adc
sub
jmp
sub
bsr
or
int
cli
scas
inc
xor
js
std
dec
scas
sti
cwtl
test
negl
dec
mov
movsb
movsl
lds
mov
int
movsl
addr16
pop
fsubrs
xor
cmp
sahf
sahf
jmp
or
cld
dec
dec
inc
test
arpl
out
xor
cmpsl
xchg
sub
hlt
cmp
imul
push
sbb
insb
jle
cmp
nop
scas
mov
mov
dec
pop
jnp
in
xor
arpl
push
popa
rcll
add
dec
mov
xchg
mov
jo
inc
fdivl
lods
sbb
aam
cmp
addr16
mov
push
stos
mov
cld
push
addr16
hlt
or
popf
scas
movsb
xchg
adc
inc
push
movsb
mov
movsl
push
aas
and
and
movsl
scas
icebp
add
cmpsl
push
std
jecxz
mov
push
les
mov
jmp
lea
mov
loop
xlat
sbb
rcl
or
cmp
mov
inc
sbbb
mov
inc
dec
mov
and
mov
or
add
fiaddl
les
inc
jbe,pt
outsl
jbe
js
aaa
inc
scas
in
iret
xchg
outsb
jbe
inc
fbstp
jae
outsb
xchg
mov
mov
hlt
insb
add
in
xchg
fildl
push
lds
mov
fwait
sbb
icebp
pop
js
pop
out
mov
movsl
adc
out
jl
sub
mov
int3
outsl
add
out
shrb
dec
mov
cs
imul
adc
lret
mov
sbbl
xlat
sub
clc
insb
js
mov
sbb
les
pop
out
popa
stos
xchg
adc
sahf
mov
in
or
popa
nop
xorl
xor
cmpsb
pop
mov
pushf
xchg
pop
xchg
cli
add
clc
inc
sbb
cmc
xchg
mov
and
mov
fimull
call
lret
pop
dec
add
xchg
add
test
lahf
xchg
repnz
dec
int
jb
clc
cwtl
ss
leave
lahf
cmpsb
fimuls
jns
fdivr
inc
cmp
xor
inc
in
daa
inc
sahf
loopne
push
adc
stc
cmp
sub
add
adcb
insb
fldl2e
jns
mov
xlat
lret
xor
rolb
scas
jb
punpcklbw
adc
mov
pop
in
cwtl
data16
lock
mov
mov
addr16
ss
xchg
out
out
jmp
int
inc
inc
and
or
jnp
mov
sub
inc
dec
arpl
adc
test
ret
pop
mov
call
ds
cmp
jecxz
in
sub
mov
mov
out
pop
adc
shlb
mov
pushf
fmull
jecxz
sub
int3
xor
xorl
ret
mov
dec
out
dec
stos
loope
cmp
lcall
inc
gs
pushf
push
inc
fistpll
pop
insb
dec
push
testl
ss
icebp
sub
xor
mov
mov
fcomp
push
dec
loopne
je
jae
and
lea
lea
xchg
sbb
dec
xchg
stos
add
xor
xchg
outsl
hlt
push
shl
and
out
xor
push
stc
push
out
cmp
int3
insb
shl
xchg
fisubl
arpl
insl
ljmp
mov
cmp
iret
andb
and
int
lcall
pushf
out
adc
out
movsb
int3
arpl
fldt
ja
lods
mov
call
hlt
pop
mov
push
add
mov
xchg
sub
push
mov
sbb
push
jno
jle
jbe
in
push
jb
and
xchg
sbb
out
shlb
mov
add
lret
es
pop
xor
push
mov
pop
imul
cmp
push
cmpl
in
push
les
in
shlb
mov
inc
scas
shrl
jnp
mull
dec
mov
jo
into
cmp
pop
and
cmp
leave
xchg
push
and
add
dec
cmpl
pop
xchg
mov
jno
jbe
ficoms
nop
pop
dec
orb
rorb
xacquire
or
sbb
pop
gs
into
lcall
gs
pushf
xor
ss
and
pusha
xchg
jmp
scas
mov
mov
pop
in
scas
adc
xlat
mov
int
or
scas
mov
cs
cmp
mov
mov
cmp
pusha
addb
jle
jecxz
add
mov
out
jge
das
or
fiadds
lock
lcall
cmpsl
and
mov
jb
scas
nop
cs
notb
fsubl
in
or
cld
mov
insb
test
cmpb
xor
and
xchg
jb
or
cli
lahf
jb
popf
iret
jo
sub
nop
pop
and
jbe
pop
lods
das
cmp
sub
stos
dec
cmpsl
out
dec
int3
test
insb
subl
das
addr16
stos
cwtl
or
mov
call
mov
sbb
sarb
sub
xchg
aas
sbb
lock
movsb
push
imul
outsl
add
icebp
testl
imul
cmpsb
dec
mov
or
or
push
push
aad
ret
out
cmpsb
cmp
test
rolb
cmpsl
insb
out
loopne
pop
pop
dec
adc
cmp
ret
shll
outsl
jl
dec
pop
xchg
jle
add
and
cmpsl
push
aad
xchg
negb
or
pop
popa
xor
loopne
incb
aas
stc
lds
fldl
dec
mov
pushw
sbbl
lcall
ja
test
pop
je
push
sarl
xor
movsl
mov
jge
outsb
aam
add
mov
pop
jp
aas
mov
loopne
jne
dec
out
xchg
int
pop
sub
sbb
xor
fbld
xor
out
fildll
cltd
adcl
adc
ljmp
das
jne
push
arpl
shlb
loop
fisttpl
lods
bound
inc
xchg
mov
sbb
mov
arpl
out
fwait
rorl
mov
les
call
lahf
lods
cmpl
es
cmp
mov
cld
rcrl
jns
and
fldcw
mov
std
push
or
pop
ja
xchg
push
mov
lea
outsb
icebp
negl
cmp
or
mov
test
sbb
imul
pop
sub
ja
popf
sarb
jmp
insb
icebp
and
lods
pop
add
or
xchg
add
fstpl
cld
movsl
testl
adc
sarb
add
int
icebp
mov
xor
xor
test
push
lcall
and
fstl
xor
inc
xchg
sbb
jecxz
fists
inc
fnstenv
dec
cwtl
stos
jp
js
mov
push
inc
xchg
pop
mov
in
cld
fwait
mov
fldl
cmpsb
pop
inc
mov
enterw
pop
xor
lret
adc
ja
mov
daa
lcall
sbb
test
or
movsl
lret
push
ljmp
jno
mov
ja
push
mov
mov
call
cmp
mov
hlt
loopne
or
call
clc
iret
out
call
mov
ljmp
outsl
mov
je
iret
aam
and
add
rcrb
out
and
add
xlat
pop
mov
shlb
rorl
orl
pop
hlt
lret
jecxz
mov
xchg
iret
jnp
xor
enter
add
idivl
sub
dec
xor
xchg
xchg
inc
rorb
bound
mov
push
xor
jge
test
andl
les
mov
stos
out
jecxz
jecxz
decl
sbbl
jp
cmc
mov
addr16
xor
popa
in
and
dec
inc
push
nop
fwait
pop
jnp
dec
xor
loope
scas
rolb
xor
insb
push
shl
mov
aaa
ja
pop
fdivl
or
add
and
xchg
in
sahf
or
loop
sti
jp
sub
lret
data16
cwtl
mov
jmp
jmp
sub
mov
mov
inc
add
icebp
jmp
rcll
mov
xorl
insl
rorb
mov
pop
call
mov
movsl
mov
or
mov
out
xchg
add
jo
ja
push
test
mov
les
rorl
sub
ret
add
cli
dec
xor
ljmp
mov
adc
int
and
pop
adcl
pop
lret
fsubrl
test
mov
xorl
out
shrb
iret
mov
mov
insb
mov
push
mov
add
cmpsb
sbb
sbb
mov
loop
sub
icebp
push
dec
pop
test
push
push
adc
mov
repnz
cmp
sub
jge
jb
and
in
pushf
jmp
cs
inc
sbb
loope
or
jecxz
cmp
cwtl
fstpt
leave
popa
mov
flds
lds
js
xlat
outsb
rcr
cmp
ret
cmp
mov
xor
adc
call
enter
push
sbb
xor
mov
cmpsb
jo
adc
jp
das
addr16
ss
xor
push
in
and
xchg
dec
xchg
je
ret
popa
push
repnz
and
and
mov
mov
sub
repz
loope
mov
mov
push
aad
mov
push
inc
roll
jle
sbb
adc
dec
ds
out
and
outsl
fsubl
mov
addr16
test
out
xor
mov
ret
pop
loop
test
mov
push
ret
pavgw
fdivs
sub
into
movsl
cmp
lret
data16
sub
popa
add
insb
loope
or
outsl
push
loope
xorl
out
or
lock
es
les
ret
pop
dec
cmp
cmp
rcl
stos
mov
test
call
mov
mov
test
sub
xchg
pop
cmc
pushw
fistps
inc
push
sbb
in
fs
mov
add
cli
int3
push
je
pop
repnz
jne
mov
mov
mov
jp
push
pop
lods
cmp
lds
mov
pusha
testl
test
cmp
mov
adc
fists
mov
fmulp
push
mov
jp
push
jo
mov
mov
fbstp
xlat
push
sub
lock
fidivrs
xor
and
inc
aas
push
dec
imul
mov
jmp
inc
pop
cmp
push
je
les
jmp
dec
ss
cmp
lcall
ret
pop
mov
repz
xor
mov
popa
xlat
rcrb
int3
rcrb
or
fldl2t
adc
sarl
iret
xor
pop
mov
into
in
dec
mov
sti
sub
sub
in
cli
jmp
cwtl
mov
sar
pusha
pop
rcrb
sbb
mov
jbe
outsb
dec
push
xchg
mov
mov
add
jecxz
inc
inc
jp
mov
jns
into
negl
cwtl
shl
inc
jle
cltd
inc
mov
clc
xchg
inc
popf
mov
cmpsb
arpl
int3
je
ljmp
add
adc
inc
fcomps
out
pop
pop
mov
adc
jmp
cmpsl
ds
bound
lds
in
lcall
std
xchg
mov
imul
movsl
adc
stos
inc
mov
enter
lea
xchg
fstpt
mov
iret
inc
fnstcw
pop
pusha
pop
add
lret
and
xor
pop
repz
sub
push
aam
lahf
xor
cmpsb
cmpsb
sub
cmpsl
sbb
or
dec
ds
mov
dec
inc
or
sti
inc
or
adc
addl
xchg
icebp
inc
fs
sub
aam
inc
inc
cmp
dec
add
add
lea
repz
mov
pop
cmpsb
int
aaa
in
push
or
shrl
inc
sbb
cmp
cmpl
rcrb
int
movsbl
xchg
pop
mov
or
mov
xchg
sub
shrb
pop
xor
jae
in
push
std
dec
mov
orl
or
sbb
into
dec
aas
sarb
mov
aad
mov
pop
in
ffreep
xlat
jae
sub
inc
fwait
popa
inc
cmpsl
xchg
push
mov
jae
movsl
ffreep
push
adc
mov
movsb
dec
in
clc
jp
mov
add
fmull
mov
xchg
jno
add
cmpsb
mov
arpl
imul
mov
inc
subl
cwtl
xchg
dec
sbb
dec
insl
xor
ficomps
cld
outsl
xor
out
hlt
fidivl
fists
repnz
repnz
cmp
mov
jne
mov
pop
out
adc
dec
mov
mov
mov
sahf
daa
xchg
pop
dec
adc
fisttps
and
or
arpl
ret
hlt
xlat
outsl
push
pop
sbb
sahf
call
adc
lds
sbb
pop
loopne
pop
inc
add
mov
test
movsb
scas
fwait
sub
dec
xor
mov
js
pop
loope
nop
gs
add
and
xchg
xchg
xchg
stos
lahf
cmp
xor
ljmp
jmp
xchg
mov
fbld
sbb
lcall
fcomps
loop
sahf
imul
aam
icebp
mov
mov
mov
mov
cmp
jo
fisubs
cmp
test
fstp
sbb
test
in
gs
cltd
xchg
xchg
movsl
mov
inc
fmul
add
cli
sbb
cmp
add
dec
pop
sbbl
xor
mov
addr16
mov
xorb
push
push
adc
loop
cs
fldl
dec
push
pusha
cmc
add
test
sbb
jnp
arpl
mov
mov
decl
sub
loopne
insb
sub
dec
popf
rclb
and
jbe
fstl
mov
pop
jnp
adc
mov
lret
int3
cltd
dec
dec
fsubr
adc
stos
mov
sti
divb
ficoms
cmp
push
dec
and
xor
movsb
cmp
jne
mov
ljmp
je
out
popa
xchg
and
push
lods
jae
call
cmpsl
mov
cmp
insb
mov
dec
shrl
cmp
repz
shrl
mov
jbe
mov
neg
push
cmpsl
mov
fstl
add
aas
sbb
jne
mov
pusha
xchg
fiadds
pop
cmpsb
add
test
loop
arpl
clc
test
mov
into
cmp
aam
mov
int3
out
and
add
maskmovq
testl
inc
pushf
pop
call
lcall
cwtl
jnp
in
notb
out
cltd
jo
jecxz
mov
mov
inc
pop
lock
xor
xor
sbb
xor
mov
mov
stc
mov
adc
sbb
xchg
push
nop
jnp
inc
mov
icebp
add
inc
ror
rorb
xor
jns
sti
jbe
pop
push
mov
jns
mov
pop
sub
dec
scas
push
js
push
mov
fwait
push
popa
sub
cmp
mov
pop
add
mov
dec
mov
jle
enter
push
sarl
sbb
mov
jle
dec
lock
pop
xchg
shrl
add
adc
leave
stc
popf
cli
mov
inc
sbb
in
dec
cmp
pushf
sub
addl
stos
sbb
sbb
cmp
cwtl
push
in
fstl
inc
pop
jne
jge
pop
and
popf
xchg
rorb
fwait
clc
sbb
movsb
fstpl
xchg
rol
adc
lret
das
xchg
jnp
movsl
movsl
loop
daa
fstpt
or
ljmp
push
inc
jno
fsts
xchg
int3
fs
ljmp
in
cmpsl
ds
inc
jg
mov
shll
inc
push
rcll
jae
fs
sahf
xor
xlat
dec
mov
enter
or
fcmovne
lahf
or
cs
dec
and
test
adc
inc
rorb
add
in
pop
inc
mov
out
add
test
ds
fwait
loop
inc
pop
cmp
aad
mov
and
mov
sbb
mov
shr
rcrl
push
dec
rcrb
jg
mov
xor
adc
icebp
cld
adcb
icebp
add
xchg
pop
lods
es
dec
jae
sub
or
jl
lret
push
aas
ret
xor
push
push
loope
adc
imul
xor
into
and
xor
or
insl
ret
adc
mov
scas
push
inc
jecxz
sub
inc
dec
loop
push
clc
fwait
stos
push
pop
xor
mov
fstpt
dec
leave
clc
pop
ja
pop
leave
movsb
cmp
rorl
sbb
dec
out
js
in
inc
in
repz
adc
daa
mov
push
mov
cwtl
inc
mov
cmc
ljmp
inc
xchg
mov
jmp
imull
xchg
shlb
jle
lahf
push
dec
mov
mov
insb
subb
pop
in
xor
cs
aad
fwait
cld
mov
pop
iret
and
inc
push
mov
rclb
mov
pop
pop
ror
call
jno
sbb
jp
rcll
cmp
or
jnp
ret
xchg
adc
into
lea
mov
int3
xchg
push
imul
adc
je
popa
subl
dec
mov
mov
stos
mov
leave
in
repz
mov
jle
iret
pop
addr16
scas
push
cli
cmp
sbb
mov
or
shlb
push
mov
add
daa
cmp
stos
int3
push
sub
jmp
cltd
mov
lea
mov
cltd
bound
cltd
cmpsl
das
gs
cmpsl
lcall
jo
push
aas
sub
mov
mov
lds
es
sub
mov
shrl
xsha256
cmpsb
xchg
scas
dec
call
into
dec
divl
mov
lcall
xchg
and
push
mov
aam
or
cli
es
pop
cmp
jmp
iret
sbb
mov
mov
lds
mov
mov
xchg
pusha
out
add
xchg
and
inc
xor
dec
arpl
rclb
cmc
pop
adc
inc
cmpsl
xchg
ja
or
cwtl
out
fidivs
inc
or
xchg
inc
std
test
out
pop
addr16
pop
pop
pop
mov
fimull
push
jg
cmpsl
cmpsb
sbb
loope
jle
or
out
out
das
dec
in
lock
jo
int
sub
dec
dec
dec
adc
popf
xlat
cmp
arpl
push
pop
test
stos
push
xchg
fisubrl
xor
jl
xlat
cld
cltd
shrl
lret
in
and
push
xor
pop
test
es
xor
je
rol
push
pop
pop
jmp
jnp
stos
les
and
xchg
stos
inc
cltd
mov
pop
cmpsl
movsl
sbb
adc
xor
js
sub
lods
cs
sub
fldl
jns
xor
test
scas
in
push
sbb
mov
cmp
movsl
out
popf
mov
sub
pop
mov
jb
lds
stc
mov
push
ss
jne
inc
pop
or
jne
add
add
push
frstor
xor
push
bound
incb
movsl
inc
sub
xor
nop
outsl
cmp
mov
cmc
pop
xlat
enter
adc
xchg
mov
shrb
inc
mov
xor
daa
mov
pop
cmpsl
sbb
sub
test
push
jle
dec
mov
and
jae
mov
ds
pop
repnz
cwtl
cld
xchg
popa
jle
scas
mov
sbb
pop
insb
mov
dec
or
pop
xchg
andb
scas
mov
aaa
adc
jbe
enter
fcompl
xchg
mov
fnstenv
fisttps
mov
in
leave
inc
adc
fwait
cmpsl
sarl
pop
repnz
pop
and
xchg
mov
and
mov
xlat
mov
mov
adc
pop
mov
aam
jo
lods
mov
lret
pop
add
xchg
std
pop
lahf
push
bound
mov
fdivl
jp
lret
sub
push
out
sti
jno
or
xchg
hlt
push
lret
push
mov
lock
je
call
xchg
fmulp
stos
sub
mov
popf
ss
inc
inc
inc
jecxz
adc
pop
add
popa
inc
lds
mulb
inc
test
inc
pushf
cli
inc
neg
xor
imul
bound
jmp
pop
cmc
mov
dec
es
jnp
mov
sub
lods
mov
inc
cmpsl
push
nop
aad
in
lcall
mov
outsb
in
call
or
scas
push
int
insb
adc
fildll
sbb
or
daa
test
add
xchg
xchg
scas
addr16
mov
and
ja
jne
shlb
outsl
xchg
data16
pop
test
or
mov
inc
push
aad
cs
repnz
add
hlt
mov
cmpsl
and
daa
add
pop
adc
rclb
adc
inc
loope
mov
add
mov
dec
mov
loopne
jbe
mov
cmp
pop
inc
cmp
add
es
xor
loopne
xchg
xchg
ja
xchg
aas
adc
lahf
lret
lret
ror
pop
cmp
stc
or
sbb
mov
in
push
cltd
or
or
out
cmpsl
jno
sbbb
cmpsl
outsl
add
or
scas
mov
es
add
enter
or
dec
shlb
push
and
out
xchg
data16
fstps
push
lret
push
inc
jecxz
mul
test
push
insb
or
xor
jle
jb
mov
sub
pop
out
ds
aad
pop
aad
div
ja
loop
pusha
add
scas
mov
imul
push
out
and
and
push
push
sub
out
int
mov
dec
pop
push
repz
inc
pop
xchg
arpl
xor
pop
inc
fstpt
sbb
jp
adc
sbb
int3
inc
test
movl
shrl
cmp
lcall
mov
xor
sub
test
insl
flds
or
dec
popf
xor
jnp
push
pop
push
cwtl
aad
jb
sti
jno
pop
mov
inc
imul
ljmp
sub
push
xor
fwait
push
outsl
jnp
test
xchg
rcrl
psubsb
sbb
popa
xor
pop
ret
sti
jnp
xchg
xchg
mov
xchg
shlb
fiaddl
mov
or
dec
loopne
lahf
mov
out
out
and
inc
xor
subb
loope
mov
shlb
mov
jmp
sbb
adcl
loopne
sahf
sbb
popa
clc
cld
and
cwtl
cli
push
add
mov
inc
shll
push
ljmp
cmpsl
movd
mov
mov
sbb
call
mov
imul
bswap
fs
cmp
pop
test
shlb
call
push
lahf
hlt
cmp
pop
jg
in
das
adc
push
pusha
test
popa
shrl
adc
lock
pavgb
lcall
fdivr
int3
cli
xchg
mov
loopne
jmp
sbb
icebp
out
out
cmp
iret
popf
out
or
xchg
in
mov
xchg
inc
xor
test
sub
cltd
add
pop
jns
hlt
adc
sbbl
mov
mov
jmp
push
in
inc
dec
fisubs
mov
pop
sub
sub
mov
pop
inc
cld
mov
clc
cwtl
lret
popa
test
inc
call
nop
mov
call
pop
cld
outsl
inc
jmp
sahf
sub
xchg
hlt
mov
pop
cmp
stos
scas
clc
and
iret
dec
filds
movsl
sub
out
in
mov
mov
mov
lods
iret
jae
aaa
mov
hlt
in
adc
xchg
inc
out
xchg
push
pop
jmp
orb
std
test
mov
lahf
pop
mov
hlt
lahf
inc
std
xchg
dec
sub
xor
and
push
dec
mov
mov
mov
mov
adc
mov
mov
dec
ja
stos
out
stc
test
jbe
jnp
or
ss
and
mov
fidivrs
mov
insl
cmp
shlb
sbb
sbb
pop
jle
mov
and
and
lret
mov
repz
js
ds
ss
xor
in
jp,pt
mov
inc
jl
push
inc
bound
dec
jmp
pop
insb
test
lock
adc
std
xchg
pop
pop
xchg
dec
xlat
adc
mov
adc
and
mov
pop
aas
ret
fs
ja
incb
jbe
dec
pop
and
xchg
cmpsl
cwtl
adc
mov
dec
pop
pop
cwtl
pop
push
cmp
xor
popa
cld
push
shlb
popf
pop
repnz
xor
or
adc
call
sbb
imul
mov
stos
mov
sbb
dec
lret
inc
insb
xchg
rcl
xchg
xor
mov
cmp
psubusw
xchg
sbb
dec
lret
out
mov
cmp
negl
xlat
cmp
bnd
push
and
outsb
dec
fstpl
push
out
pop
stos
in
mov
mov
arpl
jne
push
ret
ljmpw
or
nop
xchg
rorl
mov
stc
movsb
ja
jbe
or
iret
lcall
decb
lret
dec
push
rorl
call
cmp
popa
push
sahf
mov
mov
mov
fisubl
pop
sub
shll
jbe
sahf
or
adc
addb
xlat
xor
xchg
stos
sub
repz
outsl
jmp
fiaddl
jb
fimuls
push
mov
hlt
pop
mov
dec
cltd
xor
pop
addl
nop
dec
or
inc
mov
push
ljmp
out
rorb
xchg
popl
jg
mov
icebp
inc
inc
mov
push
jae
dec
sbbb
dec
std
in
out
lds
movsl
xor
repnz
arpl
lea
insb
mov
adc
mov
arpl
shlb
inc
dec
iret
mov
xchg
mov
adc
shrl
inc
std
out
jg
push
mov
pop
push
inc
icebp
dec
xchg
dec
das
inc
pushf
jo
mov
dec
mov
leave
jmp
sbb
jl
jp
insb
sub
pop
dec
cmp
lea
js
sbbb
pop
sub
outsl
add
in
jbe
pusha
clc
lods
inc
sub
lret
xlat
into
cwtl
mov
push
xchg
dec
mov
xor
hlt
data16
aad
int
bound
xchg
inc
push
pop
push
cmp
enter
sub
mov
mov
and
rcr
lcall
inc
mov
pop
adc
js
push
scas
pop
shrl
call
sub
xor
daa
pop
dec
and
push
and
push
cmp
sbb
mov
fbstp
adc
sub
popa
push
jmp
nop
scas
jo
jmp
mov
ror
mov
add
rcr
mov
pop
lock
stos
cmpsb
frstor
dec
pop
sub
je
mov
test
inc
sub
mov
stos
std
test
ja
sbb
movsb
cmp
js
mov
ret
fs
movsl
jl
aam
inc
outsb
loope
xchg
mov
pop
pop
insl
sbb
fwait
pop
repnz
aaa
in
scas
push
mov
inc
insl
js
mov
movsb
mov
xchg
mov
mov
push
and
adc
scas
xorl
inc
lcall
inc
lods
das
adc
iret
push
dec
push
xor
sbb
clc
ret
mov
sahf
fwait
inc
call
pop
jno
sahf
fsubrl
das
push
je
lea
in
sbbl
aas
hlt
sbb
stos
nop
leave
push
cmpsl
dec
gs
mov
sub
sub
mov
or
out
add
cmp
dec
xchg
dec
add
jecxz
out
add
outsb
jp
sar
sub
cmpb
jmp
or
cltd
mov
mov
adc
add
push
xchg
ljmpw
insb
ja
lods
shrb
imul
jecxz
inc
adc
push
dec
pop
xor
out
and
movsl
orb
les
push
sbbb
push
in
insb
push
xchg
shl
jge
adc
adc
add
mov
push
aas
pop
les
ds
cli
cmp
repnz
test
fldl
mov
mov
jl
push
out
sahf
cmp
xchg
mov
mov
inc
cmc
stos
mov
test
jno
pop
cmpsb
scas
mov
xor
xchg
inc
jp
add
xor
lret
mov
xorl
arpl
out
fwait
aam
ret
cwtl
add
or
adc
jp
cltd
jl
xchg
xchg
push
stos
imul
shll
into
sbb
aad
jno
aas
push
adc
test
into
pop
nop
test
xor
and
pop
jbe
fucomi
icebp
fs
and
es
repnz
or
daa
sbb
out
adc
in
inc
cld
cmp
arpl
sbb
pop
add
mov
or
mov
mov
andb
cmc
aam
sbb
xor
rcl
incl
push
repnz
cmp
xor
inc
xchg
daa
loopne
sahf
push
movsl
inc
pushf
data16
xchg
loop
lds
scas
adc
repz
push
adc
iret
faddl
mov
into
das
adc
and
mov
lods
mov
out
and
sbb
out
insl
or
lods
test
mov
fdivl
add
adc
jl
dec
arpl
test
ret
out
and
ja
icebp
lret
or
movsb
popa
cs
inc
pop
cmp
or
xchg
movsb
or
cli
mov
fistl
pop
lret
loope
cmp
mov
sbb
stos
add
in
xchg
sub
incl
cmc
adc
mov
data16
cmpsb
aam
sbb
in
addr16
shll
adc
jg
cmp
adc
fidivrs
int3
out
xor
adc
xchg
aad
aad
xor
fincstp
stc
jg
sub
mov
inc
popf
xor
jecxz,pn
daa
add
cmp
jno
iret
push
pop
pop
and
mov
ret
aas
dec
jo
sub
int
ret
pop
dec
pushf
dec
test
inc
jns
ss
xor
mov
and
and
addb
bound
out
bound
ljmp
mov
jle
xchg
jg
jnp
and
add
push
cmc
mov
xchg
push
adcb
add
and
dec
mov
xlat
adc
movb
mov
cmp
lret
out
cmp
jp
or
jns
and
aaa
pop
ja
adcl
dec
and
fwait
testb
dec
scas
push
sahf
out
lods
push
stc
xchg
xchg
sub
mov
xor
call
jbe
pop
ds
aaa
out
arpl
cmpsb
add
push
mov
cmp
ja
insb
jle,pn
pop
bound
jecxz
stos
and
jb
xchg
popa
sub
or
sub
xchg
xor
ficoms
adc
les
cmp
pushf
push
pop
insb
adcb
xchg
shlb
data16
mov
f2xm1
jbe
and
pop
inc
ret
xor
lahf
jp
jle
cmpsl
cmp
inc
stc
mov
jo
pop
data16
xchg
pop
mov
mov
shlb
int
sbb
mov
ds
pop
dec
loopne
and
jnp
jbe
and
mov
mov
cmpl
or
sahf
and
push
mov
ljmp
lret
dec
jecxz
xor
push
push
lahf
shll
mov
test
nop
imul
jnp
mov
movsb
out
or
addb
jp
pop
mov
or
sub
jecxz
bound
and
addr16
inc
lcall
aaa
out
out
outsl
sti
int
mov
adc
notl
pop
xor
test
pop
push
iret
iret
shrl
fistl
imul
out
sbbb
dec
cmpsl
testb
jae
mov
les
loop
xchg
pop
dec
mov
loopne
cmp
jns
insb
jmp
and
ret
inc
sub
dec
sbb
inc
lds
andl
mov
fprem
xchg
fisubl
mov
loop
aam
sub
aad
leave
jl
cmp
in
mov
negl
add
inc
or
inc
mov
xlat
loopne
mov
or
mov
lcall
sahf
mov
sbb
bound
xlat
mov
int
inc
cmc
push
lret
lock
in
mov
fcomip
popa
pop
and
or
xchg
jmp
out
pop
imul
push
mov
idivl
mov
and
xchg
addb
sbb
ja
pop
or
mov
xchg
push
xchg
jbe
xor
mov
adc
fs
xchg
xor
fdivl
loop
movsb
xlat
mov
inc
xchg
push
inc
xlat
inc
popf
inc
inc
fmulp
das
cli
xchg
mov
push
lods
add
push
add
pop
mov
dec
data16
testl
ret
repz
std
stc
cmpsb
mov
xor
rorl
mov
mov
ja
mov
dec
xchg
sub
sbb
into
mov
xchg
jp
fsub
xor
push
les
xchg
mov
inc
mov
pop
in
sti
push
shrl
pop
out
dec
pop
and
fwait
bnd
and
sub
ss
cmpsb
out
cld
clc
int3
pop
mov
into
loope
cmpsb
mov
not
or
cmp
cli
xor
daa
clc
xlat
xchg
les
xchg
jp
pop
mov
xchg
fisubrl
bound
push
jnp
call
mov
cmp
scas
mov
addl
inc
sub
mov
stos
pop
int3
iret
gs
jge
lea
pop
ret
pop
push
adc
sub
mov
enter
sbb
push
imul
jmp
insb
jb
and
add
lcall
cmpsb
and
jno
adc
xchg
add
pop
and
fucomi
add
mov
movsl
sbb
adc
movsb
dec
lret
and
stos
shr
addr16
test
sub
jb
cmp
push
and
jbe
xchg
in
test
scas
jp
aas
inc
or
push
push
inc
fnstsw
push
or
push
adc
sbb
fstpl
int3
cmp
test
push
inc
xchg
inc
rcll
inc
jge
jg
out
adc
pop
shlb
ljmp
mov
fisubl
jg
adc
idivl
mov
mov
inc
jmp
jle
xchg
addr16
pop
xor
or
xchg
mov
cmp
add
cmc
outsb
fs
int
inc
js
and
xor
mov
sbb
rorb
shrb
out
int
xchg
testb
pop
sbb
in
jbe
and
iret
jae
push
mov
imul
jmp
or
into
push
sub
testl
gs
or
dec
inc
mov
ja
add
push
inc
outsb
ret
call
mov
adc
pusha
add
iret
sahf
lcall
push
xchg
sub
mov
cmp
mov
mov
adc
dec
loopne
movsl
xor
hlt
inc
pop
cmpsb
loopew
pushf
popf
cwtl
push
push
adc
aas
sar
loop
push
or
ja
mov
shll
cld
mov
pusha
jnp
pop
add
mov
scas
imul
rcll
jbe
daa
repz
mov
cwtl
mov
mov
or
sar
mov
add
pop
mov
push
test
jle
cs
or
add
adc
imul
inc
dec
push
jbe
adc
xchg
mov
mov
ljmp
stos
data16
lret
jb
loopne
mov
dec
push
negb
js
pushf
inc
add
outsb
push
jns
mov
or
inc
mov
or
inc
dec
jns
add
daa
cs
jbe
lret
shr
dec
test
adc
add
loope
pop
or
shl
hlt
mov
scas
lods
aaa
andl
sub
mov
rclb
xchg
stc
sti
test
sub
lds
sbbl
sar
data16
dec
push
cmp
mov
ss
and
stos
repz
test
pop
push
jno
hlt
shlb
jmp
mov
test
push
lea
rclb
inc
loope
sbb
dec
bound
xchg
add
push
aaa
cmp
mov
jne
aas
add
pop
pop
mov
add
test
cmp
fsubp
cmp
inc
or
pushf
pop
adc
and
or
mov
bound
push
inc
arpl
jg
and
inc
out
sarb
add
sub
js
je
jb
mov
hlt
fsubrs
or
stos
push
add
out
sub
mov
jne
and
cmp
mov
pop
notb
adc
cmc
lret
and
js
test
sarl
mov
data16
imul
dec
sbb
pop
hlt
mov
jmp
jl
imul
aam
adc
lock
adc
cmp
or
mov
enter
xor
shl
lds
fldt
or
cltd
lret
scas
dec
lock
loopne
stos
xchg
inc
test
xchg
mov
pop
add
push
aaa
outsl
icebp
mov
outsl
mov
mov
repnz
sbb
sbb
sahf
dec
lds
insl
or
mov
scas
aam
ljmp
and
call
movsb
mov
push
into
in
mov
insb
adc
insb
repz
popf
enter
sbb
jge
pop
std
inc
mov
mov
mov
jp
lcall
jg
xchg
xor
add
test
call
pop
nop
sbb
cmp
pop
inc
pop
jecxz
jl
ljmp
xor
sbb
or
loope
stos
mov
cmp
cli
imul
test
push
mov
mov
push
and
and
mov
int
mov
push
out
xchg
mov
add
hlt
loopne
sub
inc
lds
std
cmp
das
mov
dec
push
test
movsb
add
fsubs
in
pop
les
mov
jle
sub
insl
dec
mov
hlt
out
xchg
and
and
cmpsb
sbb
push
and
inc
inc
push
fs
bound
lahf
les
shlb
fs
rep
aas
jp
jno
pop
dec
jns
and
ljmp
sbb
fsubrl
mov
pop
xchg
lahf
lods
int3
pop
push
shlb
push
jno
fsubr
mov
dec
inc
add
inc
stos
fwait
push
and
inc
sbb
xchg
stc
out
ljmp
push
pusha
or
movsl
dec
icebp
xchg
inc
data16
pop
out
sbb
insb
orl
idivb
scas
hlt
lret
insb
push
jmp
xchg
add
es
push
cmp
imul
xorl
xchg
popf
dec
push
iret
testl
dec
cmpb
mov
aas
aad
fsubrs
mov
pop
jne
push
mov
clc
lret
outsl
out
push
fnstenv
mov
and
and
sub
jnp
sub
and
pop
insb
sti
push
adc
je
das
push
stos
jno
lods
push
jbe
jns
sub
inc
int
enter
sub
out
les
shll
in
stc
or
aam
jge
add
ljmp
jae
mov
sbb
and
in
fidivl
js
and
xchg
push
pop
and
and
sbb
cmp
shrb
jne
adc
xchg
ja
cltd
mov
push
sbb
clc
popf
js,pn
sub
sbb
xchg
mov
add
xor
call
hlt
pushf
push
aad
imul
les
ret
ret
outsl
xchg
fnstcw
sub
mov
stc
mov
jge
daa
or
mov
imul
adc
xchg
and
ficoms
xchg
popa
jb
push
icebp
cli
add
mov
push
cli
lods
push
xor
mov
movsb
pop
jne
ds
xchg
push
add
mov
jl
or
stos
popf
mov
push
mov
mov
in
adcb
in
dec
ficompl
es
push
lods
inc
subl
and
dec
sub
add
repz
jle
jo
fidivs
and
mov
mov
mov
sub
push
mov
sahf
mov
cwtl
repnz
add
fwait
sbb
loop
movsb
push
in
das
enter
jae
int3
nop
lret
push
gs
sbb
cli
xchg
test
out
es
lds
idivl
stc
xor
cmp
or
or
pushf
sti
icebp
cmpsb
mov
xor
or
int
fs
xchg
and
jb
sbb
cwtl
dec
scas
out
jg
cmc
mov
insb
inc
pop
andb
xchg
je
pop
jb
xchg
lock
jle
repnz
dec
mov
jnp
lods
mov
push
mov
xlat
pop
inc
hlt
inc
cmp
js
fstps
mov
lahf
pop
rcll
mov
inc
sbb
stos
movb
inc
sahf
ds
lea
push
add
es
jne
cmp
out
ds
and
fbld
push
sbb
rcrl
lock
or
and
push
repz
mov
pop
ljmp
addr16
popf
pop
push
mov
cmp
inc
sbb
dec
arpl
mov
and
mov
push
lods
mov
sbb
fnstsw
rcll
jns
xchg
jae
pushf
mov
nop
xchg
lcall
add
sahf
lahf
adc
jns
adc
mov
jp
xor
mov
or
cmovno
sub
push
rorl
and
aaa
adc
push
fld
int3
or
mov
jnp,pn
pop
mov
push
sub
inc
pop
pop
popa
rcrl
mov
xchg
mov
sbb
add
ffree
cmp
sub
pop
push
ret
decb
xchg
pop
shl
pop
mov
push
leave
sub
shlb
cmp
out
sbb
jmp
test
add
and
mov
sbb
jns
mov
or
pop
cmp
in
into
mov
sarl
or
js
psrad
dec
mov
sbb
pop
cmc
cmp
cmp
addb
lods
imul
and
dec
pop
imul
ljmp
dec
jo
add
push
lcall
xchg
xchg
cmpsl
sbb
jle
stos
inc
sbb
popf
jmp
leave
sub
in
idivl
jmp
pop
out
sarb
fadd
pop
outsb
leave
sti
cmc
adc
push
loopne
xchg
and
xchg
cmpsl
lret
fidivl
in
mov
fiaddl
imulb
dec
sar
pushf
test
and
fbld
das
sub
jae
leave
dec
sarb
mov
pop
imul
jle
add
fistl
mov
call
dec
mov
movsl
xchg
and
mov
add
cmp
std
lret
xor
xchg
mov
mov
fldl
mov
movsb
movsl
mov
sub
and
dec
int
repz
loopne
sbb
outsl
pop
ret
outsl
iret
adc
mov
pop
nop
leave
mov
cmp
or
icebp
mov
imul
fs
inc
popa
jmp
mov
dec
imul
sub
and
push
in
imul
out
test
scas
into
mov
ja
inc
roll
dec
push
aaa
andl
or
xchg
sub
in
in
cmc
fbld
sbb
xor
rorb
dec
dec
subb
cmpsb
adc
xor
jmp
daa
dec
jae
mov
adc
jmp
xorb
int
jl
inc
cmp
rclb
addr16
mov
mov
ds
xchg
sbb
jnp
adc
add
sub
js
xor
test
pop
outsl
xchg
xchg
orl
in
sub
xchg
in
jmp
sti
inc
jle
hlt
jne
rcll
add
cld
xchg
mov
test
sahf
pop
inc
loop
sub
ret
ds
add
jnp
cmpsb
mov
test
repnz
mov
addl
inc
movsb
cmpsl
jo
rorl
fdivrs
push
movsb
cmpsb
cmpsl
ror
dec
dec
ds
fsts
fsubs
mov
inc
outsl
cli
dec
push
outsl
frstor
push
sub
fs
mov
loopne
adc
inc
cwtl
loopne
pop
outsb
mov
shlb
jp
aad
fimuls
repnz
repnz
adc
sbb
adc
rol
xchg
outsb
mov
pushl
jmp
gs
mov
call
push
cmp
inc
push
stos
loopne
adc
or
addr16
leave
cmp
push
mov
subb
push
push
outsb
and
iret
xor
mov
out
test
mov
fucomip
inc
mov
aas
movsl
mov
or
cmp
pop
and
cmp
sub
ss
or
add
decl
les
mulb
jo
int3
xlat
test
insb
scas
jne
and
sbb
lret
stos
xchg
and
and
xchg
xor
sub
xor
jle
ja,pt
push
test
dec
arpl
mull
inc
push
mov
test
pushf
int3
mov
stos
repnz
xor
int
jl
lcall
mov
or
dec
jge
sub
enter
push
pop
divb
sarb
inc
icebp
or
ja
adc
or
mov
sbb
loopne
jbe
push
adc
push
dec
inc
fsubrs
push
or
add
stos
cmc
cld
xchg
loop
jae
push
lea
fld
adc
pop
ret
pushl
aam
out
mov
insl
push
ret
ret
iret
data16
inc
out
fcoml
push
cltd
test
mov
pop
sbb
push
scas
rcrl
mov
sub
and
push
hlt
rol
sti
push
mov
mov
pop
in
mov
jns
dec
mov
jo
shll
sbb
hlt
cmp
dec
hlt
cmpsl
sub
out
cli
enter
and
pop
or
push
sbb
aam
mov
pushf
mulb
add
xor
lods
gs
imul
lret
xor
jbe
rcr
mov
push
cmpsl
cmc
adc
push
repz
leave
inc
sub
arpl
cmpsl
xchg
les
sbb
je
inc
cmpsb
push
pop
loop
or
xchg
or
nop
into
repnz
sub
in
adc
std
push
xchg
pop
les
xlat
cmp
bound
cltd
inc
lods
xchg
adc
adc
leave
into
movsl
adc
daa
lock
ret
seta
sbbb
or
mov
imul
push
les
test
aam
sub
pop
push
push
push
add
loop
sub
mov
sub
mov
call
xchg
xchg
lds
and
loop
movsl
inc
cltd
insb
cli
scas
push
in
or
repnz
fildl
ficoml
cmp
cs
xchg
jge,pt
lret
push
aaa
sbb
push
divb
cs
dec
sub
jns
mov
mov
enter
addr16
std
inc
mov
adc
or
fildl
and
pop
dec
iret
jecxz
outsb
test
jbe
das
das
pop
sbb
cmpsl
pop
pop
clc
movsl
or
mov
out
xor
pop
sarl
jns
bnd
mov
in
ss
xor
or
in
loopne
into
gs
push
jae
mov
jmp
xchg
in
add
pop
xor
ja
mov
test
push
jmp
add
jb
sbb
dec
push
imul
xchg
imul
and
repnz
push
call
xchg
push
in
mov
jno
dec
mov
xchg
sub
rcrb
notb
test
ret
movsb
sub
and
push
test
aad
jle
in
jnp
cmp
stos
push
fdivrs
lods
inc
outsb
stc
fdivrl
imul
xchg
pop
push
in
and
js
dec
cs
test
mov
lret
lods
aad
push
rcr
jne
add
cld
outsl
add
rcr
movsl
mov
aam
mov
push
imul
xor
mov
lds
testl
mov
idivb
sub
iret
sub
lahf
xchg
sti
cltd
outsl
sub
jns
pop
addr16
bound
pushf
xor
cmp
xchg
daa
aaa
mov
adc
int
rcll
and
js
out
push
mov
jne
and
or
sbb
mov
pop
mov
mov
iret
xor
mov
jmp
and
cmp
mov
cmp
mov
jae
mov
dec
stos
je
dec
outsb
fs
and
xchg
outsl
cmpsb
xor
stos
or
imul
movsl
mov
or
mov
mov
in
repnz
inc
shll
gs
addl
push
ja
or
jecxz
xchg
decl
mov
popa
jecxz
outsl
cmpsl
add
nop
test
sub
lods
out
sub
adc
cmpsb
lock
or
fwait
jmp
scas
fnsave
out
test
mov
repz
push
cmc
mov
jmp
and
mov
pop
cmc
cwtl
outsl
inc
inc
push
out
pop
scas
lahf
or
dec
mov
mov
inc
gs
xchg
loopne
or
mov
add
negl
push
stc
popf
xlat
andb
push
jne
cmpsb
ljmp
pop
or
push
push
sbb
xor
lea
push
js
push
xor
xchg
rcll
push
xchg
push
jnp
push
pop
ljmp
lods
lcall
icebp
addr16
adc
aaa
mov
pop
imul
jne
mov
push
add
push
push
cs
jecxz
or
jno
push
inc
lods
add
inc
fistl
cmp
lahf
dec
xor
xor
sub
ret
push
and
lds
cmp
loop
xor
cli
shrb
inc
xor
lods
add
dec
mov
xchg
jb
sub
gs
xchg
in
sbb
jge
or
stos
inc
clc
inc
or
addb
in
mov
sub
fmulp
inc
pop
pop
sbb
inc
inc
mov
xor
cld
mov
sub
mov
lret
cmp
cmp
rcl
rorl
int
das
shl
out
push
cmp
imull
adc
pop
cmpsl
je
xchg
push
int3
dec
mov
xchg
pop
dec
mov
hlt
inc
xchg
ja
je
mov
dec
cwtl
dec
fildll
std
jae
cwtl
xchg
pop
fidivs
pop
gs
jge
and
adc
cltd
scas
dec
xor
push
or
cmp
push
sbb
rorb
pop
loop
pop
xor
add
daa
cs
and
push
mov
pop
cmpsl
jbe
stc
in
cmp
lods
inc
out
dec
fwait
cmc
gs
dec
or
and
repnz
push
popa
cmp
jbe
pop
xchg
mov
sbbb
xchg
push
out
in
sbb
cmp
inc
pop
cmp
pop
hlt
shl
sub
addl
adc
mov
negb
insb
shrl
push
add
shlb
sub
push
sbb
xchg
daa
pop
add
clc
inc
cmp
loope
push
dec
push
push
aas
dec
adc
sub
cmpsl
insl
add
ret
jns
push
fmuls
jmp
sub
into
sub
dec
movsl
mov
xchg
mov
je
std
js
out
test
insl
popf
gs
arpl
push
stos
xchg
mov
call
cwtl
es
lret
push
fbstp
add
pop
mov
or
aaa
ret
push
in
mov
mov
mov
out
popa
cltd
and
push
gs
cmp
sbb
outsl
jnp
add
mov
adc
lahf
pmulhw
add
dec
cmp
fbstp
test
and
inc
jns
cli
sub
int3
fmul
rcl
lods
sub
jmp
inc
loop
mov
push
push
jbe
sub
jbe
xor
mov
push
repz
movsl
or
push
jo
or
cmp
out
sbb
and
adc
aaa
mov
ret
dec
add
inc
xchg
jae
jns
jge
imul
out
test
stc
mov
das
js
imul
popf
mov
popa
push
jl
xchg
or
std
xor
sub
adc
inc
pop
push
cltd
and
cmp
loopne
sbb
lret
test
into
sbb
inc
insb
shrl
jb
in
scas
mov
mov
out
add
cmp
xor
out
and
scas
ret
lds
es
jle
cli
dec
int3
cmp
fsts
fimuls
or
pop
hlt
mov
mov
push
pop
sub
scas
adc
rol
dec
dec
imul
in
pop
sarb
jecxz
add
mov
inc
lahf
ljmp
jg
in
xchg
pop
adc
adc
or
aaa
mov
in
push
stos
dec
fucomip
jns
lea
insb
mov
add
inc
in
push
pop
adc
and
cltd
dec
or
stos
cmp
or
sub
inc
jnp
imul
jecxz
mov
sbb
loope
shll
cmp
iret
xor
push
aam
aam
in
ret
repnz
mov
imul
sbb
mov
sub
ja
adc
lcall
push
jns
sbb
adc
jecxz
insl
mov
and
xor
loop
pop
push
inc
push
mov
stc
fcomps
js
xchg
faddl
push
sbb
or
inc
fldcw
sahf
pusha
pop
in
mov
pop
and
in
sub
inc
aam
xchg
call
enter
leave
adc
es
into
xor
mov
mov
mov
sub
jl
aad
mov
fstps
shl
xchg
jae
daa
mov
adc
mov
cld
dec
movsb
test
xchg
and
lds
rol
es
mov
xchg
add
xlat
xchg
mov
mov
mov
pop
adc
ds
adc
repnz
mov
imul
jno
jae
mov
shll
push
push
push
mov
mov
rorl
enter
pop
test
shl
jns
fs
test
int3
leave
mov
sbb
negl
out
cld
es
dec
sub
mov
shlb
imul
int3
push
cs
push
addl
testb
push
pmulhw
test
aam
adc
sbbb
sub
xchg
jnp
dec
mov
jne
jb
or
insl
jge
sbb
add
and
cmp
lret
std
divl
clc
mov
hlt
rol
in
pop
xor
cmp
xchg
and
iret
sbb
dec
insb
dec
out
ret
push
jb
outsb
adc
in
push
cmpsb
push
jbe
int3
dec
sti
jb
ficoms
adc
or
sbb
es
mov
mov
pushf
aas
mov
sub
or
xor
mov
cmp
dec
out
fcoml
test
and
lret
test
rcl
xchg
add
xor
sahf
cmp
or
enter
popa
sub
cli
add
mov
out
jle
cltd
lods
jmp
xchg
add
sbb
mov
jecxz
sbbb
aaa
pop
insb
push
js
jae
jbe
mov
mov
imul
test
aaa
fst
push
fstp
mov
fs
pushf
insl
sub
cli
sub
lahf
xchg
sub
cmpsl
mov
mov
repz
out
adc
inc
faddl
scas
sub
nop
pop
inc
mov
out
add
cli
lea
cmp
pop
lcall
dec
mov
dec
hlt
xor
arpl
pushf
pop
or
push
inc
pop
adc
fs
pusha
rcrb
cltd
cmp
vshufps
out
in
dec
les
pop
insb
je
mov
mov
pop
sub
add
es
test
xor
xchg
inc
test
scas
mov
fwait
cmp
mov
mov
aad
fcmovbe
hlt
push
xchg
popa
xor
and
sahf
mov
xchg
pop
test
lods
or
pop
add
scas
xor
jb
adc
insb
mov
aaa
test
fcmovne
into
int3
js
mov
jb
pop
cwtl
std
jae
push
in
dec
pop
loope
test
and
movsb
pop
mov
sub
dec
data16
les
dec
jne
cmp
xor
pop
sub
jge
sub
add
in
mov
push
shr
insb
inc
mov
cmp
daa
scas
pusha
push
cmp
loop
subl
push
inc
test
sub
repnz
pop
arpl
and
dec
pop
clc
or
and
sub
dec
xchg
cmp
jo
mov
cmp
mov
dec
mov
jne
xor
test
xor
enter
addr16
addr16
in
mov
in
xchg
add
xlat
push
aad
lea
push
loopne
jns
gs
out
lcall
xor
gs
sub
sbb
push
fstl
nop
jmp
adc
repnz
jbe
fwait
test
adc
popl
out
push
mov
inc
orl
ret
in
ds
xorb
or
add
sub
fdivl
xchg
dec
mov
shrb
hlt
cltd
jl
popf
mov
push
es
in
xor
sar
jb
lahf
incb
cmp
mov
xchg
pop
addr16
sub
lret
jne
cmp
xchg
notl
cmc
jbe
mov
cs
sbb
cli
sub
pop
aaa
sarl
pushf
mov
dec
in
add
in
add
stc
inc
push
stos
fstps
pop
popa
push
mov
inc
ret
outsl
cmp
test
jb
jo
adc
add
cmpsl
in
shrl
adc
test
jb
push
popf
icebp
xor
fst
xchg
daa
mov
xlat
and
sub
mov
adc
cwtl
icebp
sahf
mov
lds
and
outsl
mov
or
and
mov
sub
inc
pushf
push
mov
lcall
jbe
push
mov
dec
adc
mov
clc
sti
mov
sbb
les
push
sub
jns
mov
nop
dec
jg
pop
jp
push
push
cmp
repnz
lret
cwtl
add
pop
mov
fs
cld
repz
mov
fcom
sbb
xchg
xor
or
and
popf
pushf
popa
cld
mov
andl
dec
bound
and
or
aad
cs
hlt
mov
sbb
outsl
mov
bound
pop
inc
sub
ret
notb
inc
jno
call
test
jae
push
jae
mov
push
jno
stc
loope
mov
pmaxsw
sti
xchg
lea
div
cmpsb
xlat
mov
xlat
fstl
dec
or
xchg
mov
orb
iret
fstpl
addl
adc
shlb
inc
ficoml
mov
cmp
stos
shll
in
out
loop
jns
scas
mov
incl
je
add
xchg
push
test
xor
mov
xor
pop
cmp
mov
add
jge
cs
sub
rolb
add
mov
int3
mov
insb
mov
or
aaa
aas
push
adc
lock
aam
xchg
pop
jno
mov
lods
sbb
test
out
clc
sub
cli
mov
addr16
in
adc
orl
mov
cmpsl
ret
pop
mov
andb
mov
mov
ret
imul
stos
clc
fcompl
lods
mov
jge
pop
sbb
mov
mov
stc
jnp
stos
push
sarl
in
vhsubpd
jbe
and
mov
mov
mov
inc
sahf
addb
gs
add
or
push
popa
leave
pop
add
jg
cmp
adc
fsub
mov
insl
pop
xlat
adc
push
popa
and
inc
arpl
pop
mov
add
and
test
nop
mov
push
sti
sbb
xchg
insl
jge
or
push
sahf
out
pop
shlb
out
mov
es
pop
pop
jle
pop
aad
popl
mov
icebp
hlt
test
ret
lret
push
sub
jp
enter
xchg
shrl
dec
dec
xor
sbb
mov
fisttps
mov
sub
divl
pop
dec
pop
hlt
popf
arpl
dec
adc
xor
out
xchg
into
mov
mov
pop
ljmp
leave
dec
push
adc
notb
push
std
mov
cltd
dec
clc
adc
mov
mov
cmp
mov
and
test
lcall
cmp
mov
stos
push
xchg
inc
clc
push
cli
loopne
pop
movsl
jb
sub
in
pop
in
fcoms
fistpll
lds
push
jns
xor
fs
mul
mov
mov
sub
shlb
push
inc
cmp
imul
pushf
inc
jecxz
daa
rcl
xor
in
mov
or
out
iret
loope
jmp
jo
shll
mov
shrl
or
mov
pusha
or
push
add
pop
jo
cltd
out
xchg
jmp
or
mov
fs
leave
jmp
and
mov
in
dec
ret
xor
dec
push
popa
add
dec
cld
in
fcompl
clc
or
push
cmp
push
popa
pop
ds
xlat
sarb
jg
mov
inc
into
mov
lock
loope
push
out
aad
faddl
pushf
lods
push
pop
and
aas
lcall
test
mov
outsl
cmpsb
ss
jp
dec
pop
xor
test
add
xchg
das
repz
test
cmp
fdivr
dec
arpl
js
mov
lods
or
shl
rcll
icebp
push
jp
push
sub
lret
call
cwtl
lcall
cs
fwait
pop
sahf
lock
in
or
pop
lcall
jecxz
addr16
xchg
xlat
sar
xor
pop
push
into
adc
jmp
inc
mov
loope
sub
pop
lret
push
sub
xchg
inc
push
jno
jle
add
inc
rcll
jno
or
mov
lea
sub
mov
adc
shlb
jae
xchg
xchg
lcall
std
jno
or
mov
add
xlat
mov
adc
adc
sbb
les
xlat
dec
out
jmp
jns
push
mov
test
sbb
cmp
xor
or
xorb
jb
stos
addr16
inc
dec
icebp
ja
xchg
mov
cwtl
cmp
adc
or
fnstsw
mov
fnstsw
movsl
adc
mov
mov
aam
jnp
test
and
loopne
xorb
mov
mov
and
pop
jo
sub
ret
incb
sub
jl
dec
mov
orb
ret
sbb
int
dec
inc
test
xchg
stos
inc
enter
inc
jmp
mov
lods
sub
jmp
popa
sarl
repnz
ret
adc
cmp
or
sbb
call
inc
mov
fnstenv
pop
mov
pop
icebp
jne
ja
popf
cmpsb
sbb
inc
push
in
gs
sbb
gs
movsb
xchg
fidivs
cltd
icebp
cltd
mov
add
push
inc
push
pop
das
and
jb
scas
add
sub
push
push
dec
test
ljmp
mov
jne
stos
inc
xor
out
test
jnp
mov
in
orl
jo
add
dec
popf
xchg
int3
mov
adc
or
add
fnstenv
jmp
nop
jnp
call
jp
push
xor
in
mov
or
xor
push
cmpsl
sub
xchg
outsb
dec
push
mov
test
xor
sub
push
xlat
jge
shl
mov
ds
orl
or
in
or
dec
cmpsl
jbe
in
and
or
mov
sbb
fdivrs
pushf
sub
dec
jo
jo
jecxz
jo
add
pop
mov
loop
sbb
psadbw
leave
aas
or
outsb
pop
dec
lods
shrb
add
fists
sub
jnp
loope
sub
cmp
mov
das
repz
fcoms
jbe
stc
out
xchg
push
sbb
mov
cwtl
lods
or
mov
or
cmpsb
push
loope
xchg
sub
lahf
int3
cmp
mov
sahf
shrl
repz
add
sub
mov
cmp
dec
xor
sub
push
adc
xchg
mov
ljmp
xlat
cld
xchg
or
in
push
aas
rol
testb
or
ret
das
outsl
aas
mov
mov
std
sub
mov
mov
sub
fsts
inc
fincstp
sbbb
jns
sub
sbb
push
mov
mov
jnp
jnp
mov
or
nop
shrb
lret
movsb
aad
xlat
ret
sub
outsb
lock
lahf
ss
mov
xor
into
test
out
xor
push
inc
lcall
imul
outsl
mov
sub
dec
push
jge
fimuls
movsb
cmp
xlat
aaa
nop
mov
mov
and
add
mov
push
and
into
jecxz
push
fcmovu
xor
jns
inc
icebp
ss
mov
jl
sbbb
dec
sub
jo
mov
out
ds
fidivrl
js
pop
inc
lcall
push
push
cmpsl
dec
add
daa
aad
pop
cmp
jp
inc
jo
xorb
dec
clc
and
dec
fstps
jmp
xchg
mov
inc
xlat
in
clc
sahf
icebp
push
pop
mov
push
adc
xor
bound
xchg
mov
mov
lock
mov
push
jle
out
mov
mov
xchg
push
sub
and
xlat
scas
rcrb
mov
arpl
lcall
sbb
insb
adc
lahf
imul
sahf
ret
push
ss
das
cmpl
push
enter
lea
lods
mov
mov
and
pop
mov
and
pop
bound
push
mov
pushf
pop
imul
or
jl
dec
push
loopne
ucomiss
cmpsl
push
hlt
push
or
xor
xchg
mov
sti
mov
movsl
mov
sbb
test
jb
dec
ja
loopne
xlat
cmp
aam
addr16
jbe
lods
inc
out
rclb
adc
insb
adc
scas
sub
in
lret
int3
xlat
push
sub
jno
adc
into
and
mov
lahf
xchg
push
or
jb
fs
cmc
and
pop
xor
xor
ljmp
outsb
mov
mov
leave
pusha
jl
in
xlat
popf
out
sarl
sbb
out
aam
add
mov
sbb
mov
or
lea
xchg
sbb
stc
mov
mov
shl
cmp
dec
loop
jnp
dec
mov
push
push
enter
decl
lods
inc
stc
fadd
lods
popa
outsl
jp
in
cmp
push
repnz
into
dec
pop
mov
imul
aad
pop
mov
nop
testl
pop
cmpsl
push
test
mov
stos
loop
xchg
xchg
fsubrs
loopne
out
cmc
test
add
push
ja
int3
jmp
shr
jne
mov
xchg
cmp
out
hlt
pop
jae
sti
sub
jno
add
nop
mov
adcl
push
out
push
loop
dec
or
jo
cli
xor
xchg
incb
es
add
aad
ljmp
lret
mov
sub
mov
mov
mov
cmp
push
push
xchg
xchg
adc
js
insb
mov
imull
push
hlt
mov
xchg
sti
mov
xor
pop
jle
lret
mov
dec
fsubrs
lret
adc
push
add
sub
cmpsb
sbb
jbe
push
push
xchg
sarb
outsb
addr16
pop
xchg
addr16
idiv
shrl
daa
or
scas
mov
push
pop
in
dec
enter
lods
or
pushf
xor
imul
sub
jbe
repz
call
cmp
or
jle
cli
scas
lcall
jnp
ja
push
ja
xchg
xchg
ja
jge
push
lods
popf
add
mov
out
movsl
popl
mov
pop
fs
imul
test
mov
jno
mov
sub
repnz
test
mov
dec
lds
mov
dec
cmp
sbb
scas
movsb
adc
js
pop
iret
test
cmpsb
out
setp
mov
adc
mov
push
xor
std
push
in
popa
push
std
in
sti
inc
cwtl
sbb
enter
sub
inc
arpl
shll
add
mov
aam
inc
sti
xor
adc
fbld
add
push
dec
clc
and
outsl
rep
push
roll
movsb
push
insl
fistpl
sbb
pop
ds
ljmp
add
fldcw
popl
push
inc
mov
stc
shlb
cld
outsl
dec
xchg
shrb
mov
cltd
hlt
dec
inc
sahf
dec
inc
dec
jnp
adc
pop
leave
xchg
scas
pop
mov
or
sub
xchg
repnz
cmp
and
into
out
cmpsl
iret
jmp
cmp
popw
clc
mov
daa
gs
insl
sub
out
xor
add
ds
bound
ja
in
cli
lahf
adc
xor
aad
pop
xor
inc
les
xchg
pop
sti
dec
pop
pop
outsb
mov
scas
loop
stc
test
jb
lahf
bound
aam
inc
ljmp
dec
fists
rorb
int3
sub
in
inc
cmp
add
lea
inc
mov
xchg
cmp
xchg
dec
icebp
fs
dec
pushf
test
ret
rorb
dec
out
es
mov
jecxz
inc
dec
ret
dec
out
inc
inc
push
loope
sub
outsl
sub
bound
adc
sti
aaa
int3
push
cmpsl
jbe
fnstenvs
push
aaa
rorb
pop
jecxz
into
inc
mov
sti
pop
mov
mov
inc
sahf
pop
in
rcrl
push
dec
and
mov
cwtl
xor
inc
jge
push
stos
cmp
or
sub
jne
mov
outsl
adc
scas
push
push
shlb
imul
adc
xor
adc
dec
cmc
inc
sarl
fists
movb
add
scas
arpl
xchg
xchg
fdivs
dec
mov
leave
and
lds
pop
movswl
lcall
xlat
imul
in
std
adc
mov
adc
xchg
push
out
loope
loope
lock
mov
ret
lods
xor
jo
outsb
loope
sbb
enter
pcmpgtw
mov
out
and
out
dec
in
fsubs
mov
pushf
and
cmp
mov
jp
push
je
imul
shl
mov
pusha
mov
xor
jnp
imul
sti
inc
aad
xor
push
insb
xor
cmp
or
push
xlat
dec
test
sbb
lea
dec
jae
ljmp
dec
fucomi
push
add
dec
dec
xchg
sub
scas
cmpsl
dec
fcom
stos
jo
inc
into
mov
pop
rcrb
ja
lea
cmpsb
fisttps
adc
pushf
cmp
sbb
inc
shr
rol
stos
xor
aam
ret
iret
and
sub
dec
jmp
or
mov
jecxz
loopne
ss
mov
movsl
and
fisttpll
fsubrl
push
lods
jg
pop
seto
xor
pushf
mov
inc
push
fs
mov
push
push
or
mov
adc
gs
jl
xor
pop
inc
loopne
stos
sbb
pushf
pop
push
daa
jg
mov
shlb
shr
cld
inc
pusha
mov
mov
pusha
jne
aaa
mov
arpl
sbb
loopne
pop
insb
mov
mov
lock
sub
fwait
sti
dec
mov
jns
out
mov
adc
xchg
dec
push
and
js
sbbl
jge
sti
jg
mov
adc
movb
clc
push
push
sbb
or
add
ja
and
mov
ret
out
pop
lods
or
outsb
pop
cmc
pop
dec
mov
orb
adc
mov
push
out
imul
lds
jbe
sub
and
push
xor
cmp
jmp
add
inc
lcall
and
adc
xchg
mov
mov
cmp
cmp
pushf
add
push
scas
fcmovnb
sahf
jo
fidivs
scas
sub
xlat
pop
xchg
rorl
int3
rcll
mov
out
fwait
lret
inc
or
jle
sub
mov
dec
dec
int3
push
js
dec
data16
jl
or
lret
bound
sbb
and
fimull
and
xchg
movsl
push
jae
hlt
cmpsb
out
inc
popa
sbb
or
imull
outsb
adc
shld
fcomp
jne
gs
cmp
sbb
popa
leave
sub
hlt
scas
test
pop
push
addr16
pop
orl
pop
std
insl
ja
push
enter
inc
xor
jno
add
add
loope
fdivl
mov
ds
adc
inc
sbb
imul
in
out
stc
ja
mov
xchg
test
dec
push
mov
loopne
or
movsb
cld
into
jns
push
iret
xor
leave
aam
push
push
aaa
loopne
add
or
xchg
push
out
dec
outsb
mov
mov
cs
inc
mov
sub
mov
sbb
hlt
jl
xchg
jno
mov
cwtl
bound
lea
or
mov
xor
div
pop
jmp
aaa
xchg
scas
push
test
xchg
and
int3
jns
paddd
lcall
add
out
test
or
cli
aaa
jecxz
in
sbb
mov
dec
jns
jge
add
push
ficomps
mov
jns
cs
mov
xchg
popa
or
mov
arpl
daa
outsl
mov
idivb
ljmp
xor
fs
jl
xchg
lahf
inc
dec
pushl
push
pop
mov
scas
cmp
pop
repnz
daa
icebp
mov
insl
and
pop
movsl
sar
mov
lahf
out
sub
mov
push
mov
jle
leave
inc
aaa
stc
push
lahf
hlt
icebp
sub
cmp
fbstp
cli
inc
inc
stos
add
push
add
sub
ret
jno
hlt
cmpsb
in
push
xchg
test
push
divb
iret
cli
or
adc
adc
jl
std
lods
in
lcall
mov
movb
mov
dec
push
aas
mov
push
dec
sbb
ret
inc
les
jo
scas
pop
shll
mov
xchg
ja
dec
cmp
lret
jbe
movsl
loop
mov
shlb
push
arpl
xchg
mov
mov
aas
add
or
adc
pop
pop
inc
je
shrl
cs
fdivrs
push
lock
xorb
fnstenv
inc
fwait
and
mov
or
je
cmp
push
inc
xchg
icebp
pop
hlt
negb
jl
dec
mov
cmpsl
cmpb
push
mov
jne
add
push
loopne
dec
cmp
jnp
push
sbb
subb
scas
sahf
lea
int3
out
sahf
int
lret
lret
ret
sbb
sub
xor
fwait
xor
int3
mov
xlat
add
jp
mull
outsl
cltd
xchg
lret
popl
xor
inc
push
adcl
cli
push
mov
or
mov
mov
in
test
out
push
cltd
xlat
add
jbe
movsb
hlt
mov
inc
stc
mov
fsts
cltd
cs
inc
mov
adc
aas
cltd
xor
test
adc
inc
push
aad
xor
cwtl
pop
test
enter
or
cmpsb
sub
and
ss
dec
fmulp
push
xor
cltd
dec
gs
xchg
push
shll
mov
fdivl
out
cld
mov
repnz
dec
push
cmpsl
inc
dec
dec
dec
mov
enter
inc
insb
jle
movl
jo
cmpsb
mov
mov
shlb
popa
into
and
cwtl
xchg
adc
daa
mov
mov
cmpsl
adc
addb
loope
add
lea
stc
sub
ret
and
cli
push
lods
mov
or
inc
movups
jecxz
lcall
es
and
jb
mov
push
sub
lds
sbb
int
daa
fwait
icebp
xchg
shll
add
add
adc
dec
inc
vpcmpeqw
fs
test
sbb
repnz
inc
jge
fs
inc
inc
push
arpl
lea
enter
adc
dec
movsl
dec
jp
pop
movsb
inc
sub
in
std
shlb
mov
cmp
adc
in
cmc
push
mov
das
ret
rol
les
add
mov
pop
movsl
mov
add
out
das
enter
cwtl
and
stos
cmp
imul
inc
shrb
xor
xor
pop
push
cmpsb
push
jnp
xor
das
jno
sbb
negl
inc
mov
jecxz
sbb
jp
push
inc
in
mov
or
mov
fsts
orl
mov
mov
jge
outsb
int3
inc
fnstsw
lods
lods
das
mov
and
clc
int3
inc
push
pushl
test
xor
into
push
das
das
pusha
sti
mov
xchg
pop
inc
insb
dec
mov
daa
pop
hlt
in
es
adc
repz
outsb
aad
bound
push
cmp
jo
xchg
dec
shrb
cmpsl
jbe
mov
shrl
cmp
cmpl
ljmp
mov
arpl
leave
cmp
add
jno
push
and
dec
scas
xor
jne
mov
xchg
xorb
mov
jl
cmpsl
movsl
xchg
mov
add
add
or
mov
cmpsl
stos
push
mov
jmp
sbb
sbb
or
insl
repnz
pop
outsl
ret
jecxz
stc
shr
add
sbb
add
mov
popa
loop
mul
or
sub
add
jg
vmovq
aad
cmp
in
pop
out
mov
out
xchg
testb
pushf
mov
mov
sub
xlat
jl
or
xchg
sub
xchg
sbb
push
dec
mov
div
insb
hlt
js
call
pop
fsubrs
push
sub
inc
bound
cmp
mov
pop
pop
cmp
andl
cwtl
ror
mov
popa
pop
adc
xchg
sbb
cmp
imul
sub
mov
push
sahf
mov
or
fadd
push
inc
push
arpl
push
cmpsl
aad
xorl
rolb
adc
je
mov
mov
mov
mov
mov
fwait
pop
hlt
int3
nop
xor
fsubr
and
cmp
pop
and
pop
nop
insl
add
scas
fsubs
gs
stos
arpl
inc
inc
sbb
cs
mov
and
call
les
mov
or
xchg
cs
sub
xlat
pushf
es
or
add
mov
mov
repz
hlt
aam
out
sbb
dec
pslld
inc
cmp
mov
lahf
notl
shlb
loopne
outsb
test
push
xor
sub
loope
repz
inc
lret
mov
xor
movsl
icebp
mov
push
aas
in
repnz
movsb
outsl
cli
push
mov
adc
pop
cmp
outsb
dec
xor
pop
ret
aaa
icebp
insb
loope
int3
xchg
jle
xchg
pusha
inc
add
fs
cmp
push
pop
xor
mov
int3
xlat
das
bound
xor
mov
and
dec
sbb
movsb
cltd
lock
rcr
jl
pop
lds
or
jl
mov
loop
aad
and
rol
jle
nop
mov
arpl
xor
jbe
jb
std
push
pop
dec
int3
mov
aam
movsb
or
aaa
cmp
shrl
lods
and
shr
hlt
test
das
daa
pusha
cmpsb
jnp
fcoms
and
int3
jecxz
ljmp
jno
pop
push
rorb
push
pop
dec
movsl
int3
gs
push
shlb
or
sub
adc
mov
sbb
fcoml
sbb
popa
adc
mov
mov
fdivrp
jge
ss
imul
mov
mov
mov
daa
pavgb
sbbl
lock
call
aam
outsl
daa
lret
movsl
fisubs
xor
jo
mov
jp
jg
iret
data16
movsb
inc
mov
in
inc
popf
xor
and
xchg
add
or
or
push
pushf
adc
add
ljmp
loop
addr16
lcall
cmp
cs
mov
loope
lock
cwtl
mov
les
pop
pusha
mov
push
test
xlat
xchg
mov
mov
fsts
std
sub
testl
leave
jnp
sbb
iret
sar
fidivl
sub
push
sub
push
and
fwait
jno
mov
mov
lahf
shrl
sub
dec
adc
dec
sbbb
push
iret
das
ds
fidivs
xor
adc
xor
das
sub
out
ljmp
ja
out
mov
xchg
leave
rolb
or
sub
outsl
stc
ret
or
sbb
push
sub
xlat
fwait
xor
imul
outsb
push
sbb
lock
insb
js
jle
mov
dec
jmp
sbbb
add
sbb
sbb
pop
xchg
out
pop
out
cmpsb
sub
xor
adc
jae
or
arpl
jb
arpl
inc
pop
icebp
xchg
jp
lret
js
pop
sub
jecxz
pop
dec
out
jnp
std
pushf
push
mov
cld
mov
leave
or
mov
push
scas
nop
mov
sbb
adc
sub
cltd
or
sub
dec
lahf
push
insb
ret
gs
popa
xchg
push
cmp
push
xchg
dec
fdivs
loop
fsubrp
call
les
pop
inc
mov
sbb
or
xor
push
mov
jp
jg
pop
fwait
hlt
and
push
in
adc
ss
dec
lcall
testl
sub
ret
pop
ja
std
test
movsl
ret
lock
push
add
stos
lods
pop
and
add
fstl
subb
stos
lds
rclb
push
xor
sarl
push
test
sub
push
enter
lea
aam
sub
dec
jp
cmp
inc
leave
ret
jge
adc
aas
jne
addr16
add
mov
mov
test
inc
inc
dec
xor
addb
aaa
into
and
sbb
movsl
xchg
and
negl
sahf
or
in
cmp
jno
pop
mov
add
xlat
inc
addl
into
scas
ljmp
and
cmpsb
iret
orl
mov
stc
gs
mov
pop
sub
jmp
mov
outsb
popa
les
imul
or
inc
cmpsb
mov
in
inc
xlat
pop
ss
bound
sbb
sti
sbb
notb
inc
push
xlat
or
mov
xor
dec
mov
repz
pop
shrl
test
ret
imul
xor
mov
push
in
out
sub
inc
pop
adc
push
jns
fwait
mov
adc
iret
ss
addr16
push
push
in
mov
add
sbb
lea
adc
add
xchg
pop
ficoms
loop
arpl
pop
out
mov
mov
adcl
popf
out
stos
loop
leave
cmpsb
sub
mov
andl
push
mov
pop
arpl
or
push
out
lock
sub
out
xchg
and
mov
test
adc
mov
add
cltd
out
xchg
pop
insb
hlt
mov
ret
repz
push
lds
enter
gs
adc
jnp
xchg
cmp
cwtl
and
xchg
test
xor
cld
inc
ljmp
std
inc
adc
mov
mov
mov
clc
ret
pop
xchg
or
jp
movsb
adc
aam
xor
ret
std
cmc
stc
dec
mov
pop
test
stc
in
rcll
lea
lret
or
cld
xchg
and
sbbb
mov
dec
mov
mov
jno
js
inc
stos
scas
sbb
pop
stc
cmp
incb
ljmp
out
test
andl
cltd
mov
mov
add
gs
adc
gs
add
xchg
pop
push
inc
cmp
and
fdivl
add
and
clc
adc
aas
mov
dec
movsb
pop
repnz
loop
jle
pusha
mov
and
aam
call
fidivs
adcl
fadd
cmpsl
cli
ja
es
ret
inc
add
jo
gs
push
cmp
stos
pop
int
fdivr
cmp
mov
jle
rolb
mov
mov
jnp
pop
push
movsl
sub
ljmp
test
aam
jb
pop
fidivrl
push
outsl
pop
pusha
push
nop
nop
dec
dec
mov
mov
mov
or
mov
dec
adc
cmp
pop
addr16
or
mov
insl
cmp
xchg
and
lret
test
push
and
cmp
push
mov
aas
mov
jl
enter
xchg
and
mov
pusha
fldt
pop
scas
ja
js
xchg
nop
jle
test
lret
mov
cmp
adc
ja
push
out
imul
adc
test
es
jns
pop
push
test
sbb
sbb
dec
and
xor
xchg
shrl
jg
sub
push
scas
and
cmpsl
adc
mov
xor
inc
add
inc
xorb
sar
std
pop
lret
pop
dec
xchg
mov
dec
mov
sbb
hlt
dec
sub
lahf
jmp
out
popa
or
data16
mov
mov
mov
lock
fwait
popa
into
in
cmp
mov
pop
jae
push
cltd
xchg
sti
inc
jno
jne
mov
insb
jmp
lahf
mov
or
rolb
inc
int
pop
mov
mov
lret
icebp
nop
test
ja
adc
les
test
pop
sbb
cmp
ficoms
adcb
jno
scas
rcrl
jne
push
js
cmpb
adc
rcrl
rclb
xchg
add
out
cmp
push
pusha
testl
push
and
and
cmp
addr16
pop
sbb
pop
xor
mov
dec
stos
inc
decb
xor
pop
lret
cwtl
fwait
push
ds
call
mov
mov
push
dec
add
lret
pop
outsl
jne
mov
jbe
jge
addl
adcl
jo
jge
cwtl
mov
sbbb
ror
xchg
mov
shrb
mov
or
sahf
mov
enter
out
mov
call
stc
jo
js
test
add
push
xor
scas
test
ret
cmp
in
test
xchg
xor
rolb
rcll
dec
inc
insl
sub
cs
shlb
or
cltd
mov
jbe
das
test
pop
div
or
dec
sbb
call
in
push
out
iret
popf
fwait
jno
push
fidivl
mov
imul
stos
cmc
jg
mov
mov
jg
add
or
lock
iret
fnstsw
mov
and
roll
cmpsl
and
les
insb
lods
xchg
lcall
aaa
mov
or
outsl
mov
mov
data16
adc
jb
fdivs
icebp
jmp
push
cmp
pop
scas
xchg
fistpl
lcall
inc
stc
xchg
mov
or
test
jbe
test
xchg
mov
adc
mov
mov
lds
pop
push
fidivl
xor
cwtl
sub
inc
iret
and
rorb
jbe
icebp
cmpsl
inc
dec
rclb
cmp
in
fstpl
lods
sbb
jmp
jmp
and
fildl
push
mov
je
push
xchg
imul
mov
pop
xlat
enter
jae
pop
imul
rorb
in
cmpsl
mov
jne
add
xor
jge
or
std
in
daa
test
xchg
orl
out
mov
in
aad
push
jmp
xchg
add
test
in
adc
jno
mov
movsl
bound
xor
das
push
into
sub
sub
or
js
fdivrs
inc
xor
lahf
pop
fistpl
mov
jne
push
movsb
repnz
inc
lods
dec
or
lret
jb
sub
ja
pop
mov
out
or
dec
cli
mov
sub
ljmp
jmp
mov
in
insl
jmp
sahf
pop
sahf
jno
mov
clc
jae
test
xchg
sahf
dec
push
test
imulb
cmpsb
or
mov
dec
jo
cmp
pop
adc
repz
das
add
push
dec
pop
fstps
call
sar
mov
mov
mov
push
xor
xchg
imul
flds
int
add
popa
mov
lods
inc
icebp
cwtl
call
lea
or
push
mov
push
out
add
das
xlat
push
add
mov
inc
arpl
nopl
leave
push
mov
ss
sbb
std
cmp
mov
pop
pop
test
xor
adc
aad
inc
inc
pusha
jbe
xchg
mov
or
mov
stos
ja
xor
mov
sub
mov
insb
hlt
sub
outsb
mov
fwait
cmc
inc
int
mov
jecxz
or
xchg
icebp
stos
push
mov
sbb
cli
inc
sbb
dec
and
inc
shll
mov
icebp
mov
fwait
stos
rcrl
int
mov
mov
mov
rcrl
fidivl
clc
or
adc
add
push
cwtl
sub
jno
int3
jle
inc
sahf
pop
mov
lret
cmp
cmpsb
out
xlat
inc
test
clc
in
or
lock
push
sub
mov
andb
mov
jecxz
mov
sub
dec
or
mov
push
pop
loopne
mov
cltd
cmp
sub
push
pusha
ss
dec
mov
ja
fnstcw
pop
pusha
test
dec
dec
scas
mov
sub
and
je
loope
jbe
mov
insl
test
dec
hlt
adc
dec
fs
lret
in
cld
jge
jecxz
stos
mov
add
pop
cmpsb
mov
enter
mov
dec
repz
sbb
or
xor
fxch
gs
inc
add
sub
std
lods
or
adc
dec
scas
call
cwtl
jb
add
test
inc
sbb
and
jp
push
and
cmpsl
andps
popl
inc
imul
jecxz
mov
jge
jns
pop
inc
push
nop
pop
mov
push
sbb
cmpb
jge
cwtl
fisttps
push
pop
out
loope
xor
mov
inc
mov
push
mov
mov
jno
pop
mov
pop
fdiv
fs
test
mov
loopne
into
adc
sbb
mov
pop
js
pusha
sbbb
movsl
xor
inc
inc
xor
mov
xor
cmp
mov
aam
and
push
jb
inc
insl
jns
hlt
mov
repz
cld
xchg
lret
or
sub
out
daa
push
popa
or
mov
inc
pop
call
pop
sub
jp
xchg
sti
shl
into
adc
stos
call
movsl
cwtl
push
pop
sti
in
subl
repnz
subl
adc
sub
ljmp
mov
add
pop
xchg
xchg
scas
pop
xor
mov
cmpsl
pop
imul
mov
shl
jle
xor
imul
pop
stc
adc
add
mov
pop
mov
mov
test
ljmp
out
mov
adc
xor
push
cwtl
test
imul
sub
pop
cmp
dec
in
es
frstor
add
mov
xlat
hlt
xlat
shrb
sbb
xlat
mov
shr
pop
xchg
fidivrl
pop
xor
rcrl
mov
xor
pop
push
ret
cli
pop
sub
jo
pushf
sbb
imul
cmp
lret
or
jl
push
outsb
sbb
mov
jo
lods
imul
adc
lea
pop
insb
das
loope
sahf
adc
sub
popa
cmpb
enter
shlb
jnp
pop
xchg
cmpsl
out
dec
popl
pushf
mov
repz
xor
sbb
dec
cld
xchg
push
sbb
mov
in
pop
adc
mov
lcall
inc
fidivrl
xor
sahf
popa
pop
push
andl
sbb
enter
dec
popf
xor
cltd
adc
jb
pop
jb
daa
test
das
add
ljmp
add
mov
fstpl
scas
test
dec
ss
sti
push
adc
cmp
cmp
dec
add
sub
pop
rorb
pop
hlt
icebp
lahf
ss
jno
jnp
dec
testl
pop
jb
arpl
es
adc
lock
pushl
xor
adc
ds
movsb
in
ss
mov
push
jmp
add
pop
cmpsl
mov
loop
xor
and
push
out
push
xchg
movsb
dec
in
mov
iret
fmuls
dec
jge
fs
pop
cs
dec
lods
or
jp
test
sti
dec
pop
lret
xor
push
jo
push
xchg
imul
adc
ljmp
pop
rorl
lahf
clc
je
jge
mov
xor
cmp
and
int3
adc
subl
sbb
shll
call
inc
sahf
sub
pushf
xor
ss
mov
xor
das
jge
lcall
and
sbb
xchg
fsts
lods
jns
xor
out
test
in
xchg
out
test
sub
repz
mov
rorl
mov
movsb
inc
adc
sub
dec
jle
pop
adc
cmp
es
adc
nop
dec
xor
cwtl
push
jecxz
test
out
xchg
cs
dec
mov
jb
mov
mov
out
mov
incl
jno
mov
sub
or
pusha
push
mov
sub
cmp
mov
mov
sbb
pop
iret
pop
ja
mov
xlat
gs
data16
fmul
or
lock
loop
pop
sti
test
sbb
out
ss
mov
or
xchg
adc
dec
shrl
pusha
stc
xor
inc
sbb
in
add
dec
mov
and
rol
cmp
mov
xor
pop
fsub
push
cli
cmp
mov
xor
dec
add
push
xchg
ret
inc
popa
movups
jns
jae
jbe
jne
xchg
mov
jecxz
fs
lods
mov
adc
mov
sahf
mov
nop
push
add
inc
je
mov
filds
mov
jne
shll
or
cmp
roll
sbb
pop
adc
xchg
out
insl
push
and
popf
or
adc
jno
movsb
aaa
jno
xor
out
scas
cmp
xor
outsl
jns
sub
lods
imul
movsl
xchg
dec
mov
jecxz
lock
test
xchg
add
dec
test
or
mov
popf
decb
adc
push
ljmp
arpl
xchg
xchg
icebp
stos
pop
add
or
pop
dec
push
movsb
rcrl
imul
orb
subb
pop
movsl
or
sbb
lret
cli
lock
roll
push
inc
xchg
loop
lods
into
popl
lods
data16
addr16
xor
js
adc
fs
or
movsb
mov
jg
inc
lea
mov
frstor
cmp
icebp
adc
xor
pop
ds
jns
and
lods
xor
lods
aad
dec
outsl
mov
adc
jb
lock
fwait
das
mov
mov
pop
and
jp
and
outsl
add
mov
sbb
lret
cmp
scas
jp
ds
mull
outsl
popa
sbb
lret
xor
or
scas
les
sub
aaa
clc
adc
mov
loop
out
arpl
sub
cmc
xchg
or
lds
mov
pop
sub
rcll
mov
or
cs
test
mov
icebp
jns
sub
test
add
sbb
jmp
add
subl
nop
xor
iret
inc
fsubr
stos
mov
or
sti
cmpl
rcrl
popa
fcomip
shll
xchg
loop
mov
dec
cmp
shl
xlat
dec
loope
stos
mov
pop
inc
icebp
push
mov
ss
add
pop
lea
sbb
and
or
or
mov
sbb
mov
cmp
push
out
xchg
cwtl
hlt
test
test
pop
out
hlt
xor
jmp
add
ja
pop
shrb
jl
fiaddl
sub
cmpl
mov
xor
out
jl
xchg
pop
cmpsb
js
cltd
scas
repz
lods
stos
jmp
jp
xchg
xchg
pop
pop
sub
push
push
pop
int
pop
addr16
aaa
arpl
out
mov
push
jnp
push
mov
mov
gs
sbb
std
xchg
push
js
pop
repz
pop
imul
ljmp
mov
scas
mov
cltd
pop
push
imul
movsb
int3
push
popa
dec
or
add
lahf
lods
jbe
mov
and
fwait
jne
mov
lret
in
fcomp
sbb
ss
int3
cs
std
jno
cmpb
into
cli
xchg
jl
or
sbb
adc
dec
pushf
xchg
fnstenv
adc
call
ds
insb
fisttpll
insl
sbb
shrl
mov
aam
mov
adc
sub
out
ja
pushf
push
and
and
inc
sbb
fdivp
mov
out
jne
mov
pop
xchg
daa
pop
pop
popa
aas
xor
test
sbb
lock
scas
repz
pop
lds
sbb
pop
dec
sub
sahf
scas
nop
inc
mov
adc
adc
push
lahf
sub
shrb
into
sbb
xchg
scas
cmp
sarl
lahf
lds
lahf
cmp
pop
xor
adc
sti
fwait
mov
push
jmp
add
push
insl
es
push
sub
sti
cs
subb
lret
mov
fsubr
dec
pop
je
cmp
xor
jecxz
je
xor
imulb
test
inc
or
ljmp
out
cmp
ljmp
repnz
divps
mov
scas
popf
addb
ljmp
mov
cwtl
call
pop
insb
and
jns
ret
sub
cmp
out
pop
jb
add
js
inc
push
int
pop
mov
lea
cltd
mov
insl
movsb
cs
jo
push
push
lcall
cwtl
data16
pushf
sub
xchg
in
les
cmc
pop
push
test
push
xor
lret
andl
inc
cmp
adc
add
movsb
adc
and
fisubrl
leave
popa
enter
int
cwtl
mov
bound
push
inc
mov
sahf
mov
add
repz
and
pop
push
das
addr16
sti
scas
jb
shl
dec
sub
in
mov
sbb
fnsave
mov
cld
in
and
cld
cltd
ja
lret
jge
into
movsl
mull
subb
sbb
jae
sub
lock
xor
jne
lret
mov
sbb
cltd
je
sub
xor
cmp
cwtl
cmp
lods
insl
mov
js
mov
shl
int3
icebp
insb
ljmp
and
xchg
mov
mov
iret
push
dec
xchg
cmp
int
sub
xchg
rorb
test
cmpsl
add
cltd
push
or
pop
inc
cvtdq2ps
sub
cltd
data16
shlb
dec
bound
int
mov
out
je
loopne
push
push
ljmp
fidivs
aam
pop
and
nop
notl
mov
xchg
mov
jb
dec
push
add
mov
push
xlat
aas
into
ficompl
inc
push
sbb
jae
mov
test
xchg
movsb
or
and
pop
push
or
frstor
dec
test
shrb
lods
lds
cmp
xlat
lock
push
lcall
lret
jb
loopne
push
mov
lds
lret
filds
iret
aaa
lret
lock
std
imul
out
pop
mov
xchg
cmp
ret
and
add
xchg
jnp
sahf
and
jle
mov
scas
inc
and
loopne
pop
and
lea
cmpsl
sbb
jbe
pop
pop
xchg
or
jno
push
pop
daa
mov
mov
cmp
stos
xchg
popa
dec
in
sti
scas
movsl
js
cltd
negb
sti
stos
xor
test
cmpsl
lds
mov
and
push
adc
mov
leave
pop
testl
subl
jmp
inc
sub
add
add
subb
and
cmp
loopne
cld
stc
xchg
loop
mov
mov
xor
lock
pushf
pop
int
jl
rolb
push
or
out
adc
das
pop
mov
pop
jge
jne
out
sti
adc
xchg
xchg
xchg
mov
dec
lock
sub
jg
sbb
mov
lret
adc
lcall
adc
inc
in
push
dec
in
mov
xchg
jmp
jecxz
je
inc
inc
divl
push
jge
jo
ljmp
mov
push
and
lock
mov
pop
in
mov
jmp
add
mov
fmul
add
xchg
or
adc
xchg
out
jle
stos
inc
mov
pop
push
out
or
test
mov
pop
stc
push
fistl
or
sbb
mov
cmp
jl
inc
daa
imul
jmp
data16
dec
or
ja
pop
xchg
rcr
xchg
inc
fdivrl
sub
pop
ror
enter
lret
dec
xlat
rol
push
lods
cmc
sub
xor
cmp
testb
pop
jno
mov
mov
std
fwait
insb
insl
sahf
int3
test
gs
les
xchg
mov
out
imul
and
push
jle
cmp
add
repz
sbb
mov
mov
bts
dec
cld
or
cmpsl
fiaddl
lds
cmp
dec
pop
or
jecxz
nop
ret
stc
push
xchg
es
push
mov
enter
outsl
loope
mov
add
pop
pop
push
mov
xor
stos
mov
fisubrl
adc
push
fiaddl
ret
push
lea
nop
xlat
xchg
scas
cltd
and
mov
lods
mov
out
dec
or
pusha
popf
sbb
mov
push
cmp
dec
cmp
out
arpl
gs
pmullw
subb
repz
loop
push
fdivl
xchg
movsb
sub
sbb
loop
pop
pop
nop
sbbl
mov
sahf
jb
mov
inc
setb
into
sbb
pop
fistl
jo,pn
test
out
flds
sbb
shll
cmc
mov
jp
mov
sub
sub
dec
adc
leave
pop
sbb
mov
ss
addr16
jp
or
fld
imul
fld
sub
loope
arpl
leave
imul
add
ljmp
inc
popa
mov
adc
loopne
push
daa
mov
fucom
mov
and
popa
xchg
rcrb
jbe
cld
ret
jge
pusha
subb
imul
lods
enter
push
jnp
mov
pop
xor
stc
mov
jo
in
cltd
imul
push
add
loope
testb
paddsw
js
pop
adc
sub
or
sub
popf
fwait
in
jle
xor
cwtl
sahf
mov
movb
test
dec
jecxz
data16
lcall
cmp
push
jno
mov
fnsave
les
pushf
scas
std
jne
pop
arpl
scas
inc
adc
adc
out
out
sbbb
mov
lock
cmp
jg
xchg
sbb
xor
pop
jg
call
andb
fsubrs
sbb
popa
fs
pop
mov
pop
xor
pop
push
or
jp
cmc
mov
adc
dec
push
lods
cmc
imul
xchg
adc
arpl
cmpsb
in
outsl
push
add
orl
lods
or
les
movsb
sbb
add
aas
dec
mov
dec
loope
fmull
fcoml
arpl
neg
pop
ficompl
shll
out
inc
xor
lret
push
fsubl
test
sub
fwait
daa
jle
sbb
ret
cmp
jecxz
adc
mov
mov
outsb
scas
push
jo
pop
push
iret
inc
lods
adcb
fs
jmp
push
cmc
mov
bound
int
jmp
lret
mov
into
cmpsl
lds
sbb
inc
xor
add
pop
repz
and
push
adc
xchg
stc
arpl
or
lret
mov
mov
ret
inc
push
adc
imul
jg
test
popf
cmc
xchg
or
inc
sti
ss
in
push
sub
push
rorl
js
cs
mov
repz
jg
pop
push
int
aaa
sub
sbb
roll
mov
dec
pop
pop
jb
xorl
subb
insb
in
add
ret
xchg
push
fdivrl
cltd
mov
mov
mov
jo
adc
scas
jne
test
mov
test
inc
mov
out
nop
lcall
repz
pop
icebp
leave
les
out
push
inc
or
jne
lahf
lcall
xor
mov
jne
pop
sub
xchg
sbb
dec
mov
sarl
insb
jmp
inc
dec
gs
shr
lods
das
sub
mov
cltd
sbb
icebp
mov
xor
std
mov
sbb
mov
push
insl
dec
xlat
pop
jle
inc
mov
inc
enter
jbe
adc
hlt
mov
cli
and
push
inc
fisubrl
addr16
mov
shll
xchg
in
shl
cmp
jl
test
sbb
jle
pusha
jmp
sbb
dec
sub
mov
fcomps
dec
mov
push
jmp
out
cmp
sbb
cli
xchg
jne,pn
cwtl
jecxz
cwtl
ja
mov
xchg
add
xchg
jle
push
pop
cmp
sahf
push
inc
js
movsb
and
xchg
out
data16
dec
push
das
sub
pop
out
je
aad
pop
gs
jl
push
nop
mov
mov
add
je
or
sahf
jnp
rolb
loop
stc
cmc
jmp
push
lock
pop
push
push
cld
and
mov
lret
adc
int3
lret
and
mov
push
xor
sbb
mov
sti
cltd
into
lret
mov
lock
xchg
fnstenv
sbb
dec
mov
bound
jb
or
mov
adc
jnp
stos
lock
or
add
notl
inc
pop
shld
push
mov
xchg
and
mov
xchg
insl
ja
in
push
and
ret
jle
jmp
and
lods
frstor
fists
pop
adc
gs
mov
and
pop
aas
addb
sub
enter
jle
push
jb
icebp
inc
jl
shrb
mov
pop
cmp
enter
inc
daa
aad
test
inc
pop
sbb
or
pop
rcrb
in
pushf
pusha
sahf
push
sti
hlt
into
xchg
aas
mov
jl
int3
test
jb
decl
adcl
fcompl
int
jge
jge
cmp
loope
ret
push
lret
in
aad
or
aas
lahf
in
jmp
mov
add
mov
and
push
inc
shll
mov
test
repnz
lods
add
sub
lea
jge
jo
out
popa
sbb
enter
jnp
mov
add
insl
rcrl
jo
fcmovu
movsl
test
push
xor
jno
pop
inc
rcrb
lret
stos
insl
and
mov
lods
pop
and
out
daa
test
test
daa
or
xor
lods
daa
cmp
jnp
stos
cmp
add
pop
jb
push
in
pop
mov
pop
addb
jl
into
add
dec
and
sub
imul
push
daa
fs
je
ljmp
xor
fdivp
xchg
arpl
ret
outsl
add
ja
je
in
cmp
lods
imul
push
cld
push
add
movlps
out
pushf
jae
shr
ds
mov
out
mov
sub
out
mov
inc
popf
repz
pop
and
jmp
ds
dec
jle
or
jne
mov
push
add
jmp
fiaddl
paddq
pop
xchg
sub
orb
movsb
out
outsb
jle
mov
je
xor
push
orl
fisttpll
jle
sbb
mov
jg
jne
cmp
mov
sbb
inc
pop
mov
or
iret
into
repz
std
repnz
jno
fildl
arpl
test
jb
adc
jp
test
xchg
pop
repz
xchg
and
xchg
sbb
xor
bound
out
rclb
add
imul
push
js
fcomip
inc
ds
repnz
dec
cmp
outsl
and
jge
sbb
jno
insl
into
gs
push
fnsave
mov
int
sar
fbstp
mov
pop
mov
and
inc
ljmp
ss
xchg
adc
ljmp
inc
into
cmpsb
pushl
rcl
icebp
sahf
jge
arpl
subb
pop
mov
push
jmp
fstpt
std
adc
mov
fldenv
xor
adc
ja
test
shll
int
mov
or
fists
loopne
es
aam
cld
shll
and
imul
lock
cmpsl
les
pop
push
cltd
cmp
leave
add
mov
push
push
mov
add
jne
dec
js
dec
std
inc
sahf
aas
call
push
sti
addr16
or
loope
fisttpl
lahf
or
push
out
cmp
imulb
shrl
rcr
push
and
dec
xlat
shl
mov
dec
cmpsb
xchg
jnp
es
and
test
xchg
adcb
fbstp
and
mov
mov
mov
mov
clc
les
lea
xchg
push
add
out
sti
aas
ja
or
xchg
sub
jl
popf
mov
xchg
mov
mov
es
or
rorl
mov
popa
sbb
pop
lods
lea
mov
leave
imul
xchg
adc
mov
iret
stos
mov
test
pushl
pusha
testl
sahf
addr16
jmp
mov
out
push
adc
cmp
sbb
mov
dec
dec
insb
ret
mov
dec
cmp
ljmp
add
dec
and
testl
push
or
sahf
dec
or
mov
mov
imul
mov
adc
push
out
ret
xorb
call
jmp
fidivrl
das
add
and
push
inc
push
loope
fcoms
mov
into
les
push
in
push
dec
stc
outsl
push
lcall
push
imul
dec
push
fadds
cmpsl
mov
ficoml
sub
xchg
arpl
imul
mov
pop
repz
inc
jecxz
xor
sarl
add
add
cld
test
arpl
into
ja
xchg
mov
out
notb
dec
jg
mov
xor
ficomps
adc
jno
lahf
and
and
pushw
add
stc
lods
sbb
mov
mov
xor
jo
jmp
dec
je
jle
out
bound
stc
inc
mov
pop
outsb
dec
lods
into
sub
jmp
in
nop
jnp
adcl
cmp
lods
cmpsb
les
mov
jne
andb
pop
xchg
adc
icebp
sub
mov
fnsave
mov
inc
outsl
pushf
cli
xchg
or
mov
psubd
jb
and
adcb
pop
out
mov
insl
add
lahf
push
aad
pop
mov
jno
pop
hlt
loop
add
inc
push
or
andl
sub
outsb
inc
fbld
dec
iret
addb
nop
pushl
sub
xchg
lock
sar
lods
and
shr
xor
mov
pop
push
cmc
pop
sbb
lahf
mov
stc
je
jne
js
adc
sahf
lcall
fiaddl
mov
xor
int3
jg
mov
cmp
sub
ret
pop
adc
sub
ret
add
cmpsb
cmp
mov
cmp
inc
std
cltd
enter
xor
lret
adc
loopne
daa
loop
insb
sbb
call
in
sub
test
lahf
sahf
push
sbb
jns
cli
mov
test
call
inc
in
push
pop
push
shrl
repnz
mov
lahf
pop
icebp
stos
fs
ss
mov
sub
jmp
test
pop
cli
dec
pop
sub
or
push
sbbl
in
pop
sbb
stc
testb
dec
xchg
xchg
sub
aas
add
repz
dec
fldl
push
neg
mov
xor
aad
adc
inc
cmpsl
mov
into
push
push
pop
mov
dec
insb
ret
jne
sub
out
cmp
out
sub
inc
xor
pmulhuw
push
or
jo
sub
jno
push
jle
les
jg
lds
rcll
addr16
jne
lret
data16
jo
xchg
mov
lods
mov
lods
adc
rorb
inc
insl
and
outsb
push
leave
pop
jno
mov
jbe
andl
aam
adc
notb
int
ret
out
dec
fcomp
xor
sub
jbe
mov
add
pop
mov
dec
loope
lret
sbb
adcb
test
inc
call
cmpsl
push
inc
mov
lret
jb
cli
inc
fs
adc
mov
pop
mov
ds
jmp
jmp
fdivr
jo
push
mov
imul
adc
shrl
push
adc
jl
subl
int3
xor
jmp
inc
jecxz
inc
addr16
cmp
imul
inc
push
inc
or
in
int
cmc
into
lret
std
lds
push
out
adcl
cmp
jbe
pushf
xor
aas
pop
dec
or
sub
push
clc
popl
mov
adc
push
fwait
mov
sarb
mov
fcomip
jne
adc
push
and
out
or
das
jmp
xchg
cmp
mov
adc
dec
dec
mov
or
sub
imul
pop
fwait
cmpsl
andb
jns
lock
lods
cld
repnz
pop
dec
adc
ficompl
pop
push
iret
cmp
jb
cmpsl
mov
enter
ja
pusha
rorb
mov
in
and
cli
cwtl
sbb
out
xor
xchg
clc
pop
xchg
mov
iret
insb
sti
out
imul
add
xchg
in
mov
in
add
fisubs
fwait
pushf
cli
xchg
sbb
mov
cmp
dec
add
xchg
sub
nop
sbb
divl
mov
insl
add
mov
xchg
cmp
mov
xor
mov
and
push
mov
pop
jmp
lcall
stc
scas
jno
xchg
int
test
mov
push
push
dec
sbb
jmp
shlw
or
insb
adcb
sbb
push
repnz
cmp
inc
push
test
sarl
mov
mov
aad
movsb
jg
cs
xchg
clc
mov
push
cmpsb
sub
lea
test
adc
adc
mov
mov
push
inc
int
ret
inc
push
aaa
hlt
xor
cli
xchg
sbb
jg
mov
and
movl
cmc
stos
fnsave
mov
sub
xor
xor
adc
popf
stc
and
cmpl
int3
lea
xor
push
jns
jp
xchg
test
rolb
xor
faddp
dec
dec
add
punpckhdq
verw
pop
dec
shufps
aam
mov
pusha
xchg
dec
mov
out
cmpsl
xchg
leave
sub
jmp
mov
lods
add
push
sub
aaa
jge
mov
xor
xchg
movsw
lahf
xor
enter
out
ljmp
out
test
mov
das
jnp
or
ja
push
jae
je
sti
subl
fildll
or
lret
subb
popa
push
add
add
or
xor
add
inc
adc
or
pop
shrl
mov
adc
xor
lret
add
ds
inc
dec
scas
out
icebp
popa
or
divb
inc
pusha
fcoms
mov
mov
out
in
and
hlt
repnz
mov
fwait
mov
les
test
int
movsb
and
cld
stos
ds
push
sbb
cmp
lea
pusha
sbb
or
dec
fnsave
js
sbb
xchg
xchg
in
xlat
xor
movsb
popf
scas
mov
hlt
ja
sahf
stos
ror
cmp
or
pusha
xchg
dec
mov
popf
xchg
inc
lea
push
xchg
jnp
in
mov
adc
fldt
dec
push
mov
add
bound
call
scas
or
out
dec
loop
cmc
and
mov
pop
imul
xorb
lcall
sub
in
xchg
jne
fstps
loopne
vmovshdup
xchg
push
mov
mov
and
jns
dec
push
in
cwtl
pop
pop
adc
sbb
cmpsl
pop
sar
mov
jle
out
fists
enter
dec
xor
jne
lret
and
pop
sub
pop
pop
cmpb
push
iret
xorb
xor
and
lret
int
or
push
out
push
les
scas
adcl
mov
or
icebp
push
mov
imul
pop
imul
ret
outsl
push
sub
addr16
mov
sbb
push
mov
push
jle
aaa
xchg
push
mov
lods
mov
fwait
scas
jns
loope
pop
into
add
out
int3
fisubs
or
jbe
xchg
adc
pop
cmc
push
add
push
mov
add
addb
pop
and
sub
jg
xchg
lea
or
hlt
dec
stos
std
adc
daa
cmp
sahf
xchg
sub
fsts
lds
pop
sub
fadds
push
jo
add
ret
fucomip
xchg
push
cmp
bound
test
xor
pop
loopne
jne
xchg
jg
shll
push
movsl
out
lods
and
mov
shr
mov
adc
dec
fxch
fcmove
jne
add
jecxz
mov
out
dec
fwait
adc
add
cltd
add
mov
mov
fwait
outsb
fucomp
xor
sub
sbb
dec
imul
jbe
leave
mov
movsb
jb
or
or
xchg
add
or
push
jns
xchg
cmp
add
fs
xchg
push
idivb
pop
mov
inc
call
add
mov
adc
inc
out
pop
jmp
idivb
and
and
xchg
idivl
arpl
sahf
or
mov
jnp
lea
lret
jne
test
mov
or
repnz
inc
inc
jne
pop
test
imul
cli
movsb
aam
ret
repz
pop
cmp
cmp
cwtl
sbb
pop
jge
shr
sub
inc
xchg
lcall
jb
out
outsl
movsl
push
stc
mov
cmp
push
mov
aam
ret
daa
out
or
movsl
mov
pushf
jnp
stos
add
popa
lea
dec
jmp
loopne
outsb
pop
jno
mov
cmp
push
sub
pop
pop
mov
cwtl
mov
fcomi
mov
xchg
dec
jo
iret
inc
and
jno
adcl
or
mov
add
sub
push
repnz
mov
gs
add
out
jl
add
dec
test
pop
xor
mov
lcall
mov
push
stos
jge
call
ret
add
lds
int
inc
pop
cmp
jmp
jge
push
inc
notl
dec
les
movsb
or
fmuls
jge
mov
imul
xor
lahf
push
inc
pushf
or
mov
lods
mov
push
icebp
cli
subl
adc
mov
mov
push
jne
cmp
shlb
cmp
lret
int3
or
pop
mov
xchg
fs
xor
cwtl
cmc
lahf
scas
mov
add
push
ret
pop
sub
mov
fnstenv
push
inc
fsubrl
and
mov
fs
sub
sub
int3
scas
pop
repnz
or
ss
stos
sub
fdivl
lret
pop
outsb
sub
xchg
mov
nop
outsb
inc
jle
jg
push
mov
jb
aas
int
dec
sub
jecxz
mov
fdivs
andl
push
dec
and
das
cmp
mov
pop
sarl
rcr
data16
push
or
mov
adc
adc
or
jae
dec
cmpsb
fnstsw
scas
fisubrs
adc
stos
jbe
aam
cltd
mov
ret
arpl
and
jnp
mov
hlt
in
repz
shrb
out
and
lahf
jae
jno
and
popf
xchg
or
mov
pop
stos
cwtl
add
dec
jnp
mov
and
aas
gs
js
cwtl
cmp
lret
je
stc
test
cmp
cmpsb
add
lret
xor
jae
outsb
adc
cmc
je
cltd
stos
sbbl
incl
mov
cmpsl
mov
stos
movsl
pop
sbb
push
xchg
cmp
cli
add
pop
push
push
sbb
aaa
and
inc
arpl
aaa
dec
sbb
cmp
inc
shlb
fbstp
movsb
push
lods
out
pop
test
mov
or
mov
subb
aad
mov
fildll
mov
xor
pusha
sti
es
movsl
pop
inc
testl
jl
and
mov
add
fstpt
arpl
pushf
pop
ss
ds
inc
sbb
sti
hlt
add
test
mov
lods
inc
cmc
pushf
dec
pop
xchg
sub
cmc
xlat
mov
sub
jl
out
sub
adc
mov
int
lahf
cmpsb
cmpsl
ret
rorl
aad
mov
pop
sub
push
pop
out
mov
push
jns
into
movsb
cmp
mov
adc
push
xlat
data16
push
in
push
ds
into
in
inc
sti
push
nop
and
or
mov
push
popf
push
ja
outsl
push
out
pusha
adc
out
jne
outsl
xchg
push
dec
shll
cmp
sbbb
rcrl
imul
subb
sahf
loop
mov
and
fadd
loopne
dec
leave
xor
in
inc
neg
jns
out
cli
jbe
and
subb
lret
inc
idivb
cwtl
fists
jmp
push
addl
sub
xchg
xchg
test
std
icebp
je
aaa
push
adc
cmp
and
aam
movb
xor
mov
mov
shl
push
sub
decb
testl
sarl
mov
mov
out
addr16
movsl
or
sub
jbe
pop
inc
les
decl
jle
movsb
scas
mov
cmpsl
mov
mov
popa
mov
pop
call
xchg
pop
xchg
mov
push
adc
insb
shlb
ret
into
cmp
pop
lock
push
adc
inc
jp
les
inc
dec
add
in
xchg
lock
adc
inc
pop
pushf
repz
and
aam
push
xchg
mov
insb
out
xor
ja
aad
sbb
dec
and
or
jge
or
ret
xchg
gs
repnz
fucomp
jne
and
ja
into
or
push
inc
nopl
pop
repnz
add
pop
add
sbb
mov
sbb
push
dec
add
jb
adc
xchg
scas
cs
xor
adc
stc
test
scas
sbbb
lcall
push
xor
xor
loope
bound
xchg
xor
sbb
push
lods
lods
test
leave
lret
lods
outsb
xor
pop
jne
fdivs
jg
out
mov
fs
push
xchg
adc
push
adc
fbld
jno
scas
jmp
daa
mov
cmpsb
and
test
out
xor
push
test
cmp
pop
clc
lret
and
pop
repnz
addr16
jo
inc
gs
sbb
jb
stc
mov
and
mov
shll
cld
xchg
xchg
sbb
test
push
fcmovb
stos
inc
mov
mov
pop
pushf
push
xchg
xchg
enter
pop
dec
test
stc
pop
cmc
pop
adc
xor
sub
rcrb
into
jg
test
jg
popf
push
jp
ficoml
sar
push
out
dec
jle
fcomps
push
je
or
adcl
iret
and
lea
adc
ret
std
cmp
and
ja
aas
loop
and
insl
xchg
add
sti
xor
aad
cmp
xchg
jae
ret
xchg
sbb
mov
scas
fnsave
in
addl
mov
cmp
sub
pop
pop
adc
pop
xor
outsb
lcall
loop
shr
adc
cs
clc
data16
ror
fs
mov
jge
scas
sub
repnz
and
movsl
jg
pusha
sub
push
loope
aaa
imull
adc
into
lcall
imulb
mov
test
lret
and
std
xchg
sub
sbb
jp
aam
pop
shlb
stos
xchg
dec
sbb
push
add
pop
xchg
hlt
mov
jns
xor
mov
movsb
xchg
into
leave
mov
or
or
shlb
pop
pusha
ss
mov
inc
iret
sub
mov
push
movsl
inc
in
arpl
and
xchg
add
push
push
or
incl
out
mov
enter
lret
add
dec
xchg
scas
adcl
or
and
mov
fistpll
aaa
insl
js
adc
test
sti
out
xchg
sub
scas
scas
fidivs
sub
jge
xor
cmpsb
mov
int3
insb
imul
jnp
mov
or
pop
mov
sub
shlb
adc
das
mov
filds
mov
out
movsb
in
aad
out
add
adc
enter
mov
repnz
sub
and
sbb
notrack
arpl
adc
out
mov
aas
mov
mov
cs
sarb
shrl
pop
mov
pop
in
push
jmp
outsl
jns
stc
stos
nop
clc
and
dec
testb
jns
xchg
stos
aam
ror
mov
and
mov
sub
xor
int
lock
xlat
lods
xchg
sbb
cmp
movsl
addr16
mov
add
cmp
or
dec
mov
dec
add
ror
fiaddl
sbb
int
out
fcompl
xor
mov
adc
inc
cmpsb
data16
icebp
andb
pop
outsb
jp
push
into
mov
add
fidivrs
bound
mov
sbb
xchg
push
ss
loope
sbb
mov
adc
pusha
mov
test
icebp
jb
push
or
mov
push
adcb
enter
and
sbb
cmp
and
mov
insb
test
inc
repz
pop
cmp
mov
mov
mov
mov
xlat
gs
mov
cmp
fcmovb
dec
mov
xor
xchg
xchg
call
mov
jge
lret
scas
push
pop
repz
xchg
push
fildl
push
aad
rcrb
pop
xchg
sti
push
pop
movsb
jmp
ljmp
das
pop
jnp
nop
mov
mov
mov
fimuls
pop
dec
sbb
inc
cmpl
stc
cmp
inc
lock
dec
xchg
inc
fidivl
pop
push
jae
or
pop
mov
fldenv
jecxz
pusha
pop
pushl
lcall
cmp
in
or
pop
ja
loopne
andl
xchg
sub
mov
or
pop
xchg
cwtl
and
inc
fldenv
push
mov
mov
stos
shlb
and
or
cmpsl
ret
pop
sbb
jae
fimuls
daa
mov
push
ret
add
sti
push
cmp
es
test
inc
jne
or
jp
sub
je
cli
dec
cmp
lcall
insl
xchg
lea
pop
sar
xchg
push
insl
ret
push
sbb
push
pusha
fmulp
outsl
fs
pop
test
adc
aas
pop
xchg
icebp
jge
mov
ficompl
movsb
sbb
xchg
cmp
inc
pop
cmp
push
cltd
cmc
push
repz
or
push
imul
in
popf
adc
mov
movsb
xor
jne
fcoms
test
mov
lds
adc
push
decb
xchg
outsl
mov
lcall
xchg
lret
in
mov
lret
cmp
jp
adc
lcall
jp
and
adc
cmp
add
inc
in
cld
or
daa
inc
jmp
mov
cs
pop
outsb
jle
test
add
loopne
int
and
outsb
cs
add
mov
inc
pusha
fcmove
out
fiadds
inc
pop
scas
lret
sbbb
lahf
dec
adc
dec
pop
shl
ret
mov
xor
std
aam
push
ret
pop
jg
sbb
fstl
sbb
movsb
inc
fmull
stos
cmp
xchg
das
jge
push
sub
xchg
pop
mov
or
push
jmp
xchg
cmp
stos
outsl
push
fstpl
xchg
sub
jmp
fs
dec
xchg
mov
push
jle
int
aam
dec
pop
subb
pop
xchg
mov
ret
in
sub
pop
and
cmc
dec
shrb
jae
loope
sub
loop
gs
adc
push
add
mov
sub
call
rolb
lcall
fdivp
aad
dec
jbe
push
daa
rcll
fbld
xorb
rcl
gs
dec
cmp
clc
xchg
sub
mov
fstl
test
add
xchg
jne
and
inc
sub
mov
lods
jecxz
dec
movsb
and
sub
and
aad
xchg
iret
dec
scas
xchg
lcall
and
cmc
push
push
repz
mov
repz
hlt
adc
push
leave
ret
pushf
dec
mov
or
loop
ss
imul
test
mov
or
rclb
sbb
fimuls
pop
lahf
sbb
jb
xor
push
adc
mov
call
test
je
loope
jle
movsl
adc
test
jg
add
nop
push
std
out
vmovmskps
add
pushf
mov
jae
mov
mov
dec
decl
mov
jecxz
or
adc
cmc
mov
mov
xlat
call
push
imul
xor
pop
scas
arpl
xor
pushf
scas
mov
test
div
inc
inc
and
lock
and
cmp
sti
xor
mov
adc
add
mov
mov
sbb
leave
sbb
xorl
je
and
out
cmpsb
popa
hlt
mov
mov
and
dec
mov
hlt
insl
stos
inc
popf
xchg
jno
repz
leave
mov
cmp
frstor
pop
pop
mov
inc
arpl
shl
add
cmp
les
mov
jl
push
rcl
mov
jmp
sbb
adc
jp
and
xchg
inc
sbb
mov
dec
in
pushf
jg
sbb
mov
idivb
rcrb
imul
call
out
inc
mov
pop
xchg
pop
insl
les
into
sub
jno
orb
lcall
jno
jbe
xchg
add
xor
sub
rolb
mov
dec
push
mov
stos
aad
mov
popa
push
sbb
in
stos
xchg
insl
push
xor
xor
cmp
sbb
jp
push
rolb
mov
xor
sar
imul
and
dec
dec
sub
push
jmp
in
sub
cmp
and
testb
xor
mov
adc
loope
lcall
js
push
lcall
cli
xchg
cs
mov
dec
mov
inc
cmp
jne
lds
and
adc
negl
cmp
inc
addb
mov
sti
mov
ret
push
incl
es
lea
lret
mov
adc
data16
arpl
call
stos
hlt
stc
mov
ret
cmc
aam
jmp
lahf
sahf
push
add
test
mov
fidivl
cld
push
mov
in
test
mov
lret
lret
cltd
imul
mov
shl
cmpl
aas
outsb
call
mov
je
fisubl
arpl
fsubs
insl
sub
lods
sbb
xor
dec
lock
and
xor
test
insl
pop
or
lea
xchg
sub
in
xlat
add
sub
das
addr16
js
movsb
shll
repnz
das
cmp
cmp
cltd
movsb
add
lods
xor
fcoms
rcrl
notrack
and
mov
hlt
out
xor
dec
mov
add
out
xchg
xchg
add
jp
push
rcrl
add
xor
mov
pop
repnz
adc
call
fwait
insb
inc
fsubrl
or
gs
pushf
testb
nop
mov
fisubrl
mov
fadd
ja
lods
daa
add
out
cmp
mov
faddl
leave
insl
scas
push
pop
ret
fs
cmp
out
add
faddl
sub
imul
inc
push
push
divb
and
xchg
stc
or
jge
pop
sbb
inc
xchg
push
jl
jb
pop
mov
jle
imul
xor
sub
fistpll
fsubr
mov
cmpsl
daa
outsl
mov
pop
sub
fs
pusha
xchg
push
mov
aaa
rcll
sbb
xlat
in
cld
and
mov
stos
mov
cmpsl
xchg
sbb
adc
push
mov
into
inc
and
fdiv
pop
push
in
and
nop
aam
adc
pop
jle
and
mov
xchg
out
lds
call
xchg
popf
add
loopne
adc
xchg
or
sbb
test
test
xchg
push
ja
cld
rolb
sbb
add
cld
dec
or
repz
inc
sarb
adc
dec
lret
jb
sahf
cmp
mov
add
pop
mov
nop
push
mov
xchg
add
decb
outsl
adc
lea
add
pushf
adcl
mov
hlt
js
ficoms
iret
sub
push
aad
gs
jmp
mov
lods
and
xor
gs
in
pop
push
insl
add
div
lods
mov
lret
jl
lds
sbb
pop
insl
scas
leave
push
les
mov
das
dec
cmpsb
outsb
and
jmp
or
jge
fstps
adc
test
dec
mov
jb
inc
mov
jmp
pop
addr16
mov
stos
aam
icebp
sub
and
jns
sub
mov
cmp
push
sub
or
xchg
cmp
icebp
mov
push
lods
xorl
xor
std
test
inc
decb
lods
div
adc
or
jno
mov
jb
mov
dec
xchg
add
push
repz
adc
cmp
testb
mov
fmulp
xchg
cwtl
ret
dec
pop
cmc
mov
lahf
idivl
dec
jbe
push
pop
dec
push
es
or
push
lds
loop
rorb
fistps
and
repnz
out
adc
inc
js
xchg
xchg
jg
lret
aad
jmp
sbb
pop
mov
sub
lahf
das
and
inc
cltd
cmpsl
add
inc
pusha
in
jae
jns
xor
xchg
mov
pushf
adc
add
shrb
dec
or
or
fwait
push
dec
xlat
repz
push
adc
nop
cwtl
fwait
movsl
mov
int3
testb
xor
pop
xor
iret
jbe
pop
mov
inc
jo
popa
mov
fcompl
fstpt
fnsave
jecxz
cli
xchg
xor
pushf
loope
mov
jp
dec
sbb
cmpsl
mov
hlt
dec
pusha
add
arpl
mov
xor
loopne
es
call
call
aas
adc
lcall
orl
lahf
xchg
inc
mov
push
mov
and
push
dec
adc
or
js
pop
pop
stc
je
rcrb
aas
push
cmp
jle
insb
into
pushf
cli
bound
faddl
out
mov
lcall
xlat
out
sbb
fisubs
je
sub
repz
xchg
sbb
and
pop
xchg
sbb
aam
imul
movsl
add
loopne
je
fwait
inc
inc
arpl
hlt
push
push
js
pop
push
mov
jl
mov
add
inc
adc
enter
xor
push
sub
mov
hlt
sub
jl
dec
repnz
inc
and
sbb
add
out
xchg
and
fdivp
pop
test
scas
xor
jmp
ficoms
sub
std
push
popa
push
xor
fistpl
loope
test
jns
es
lcall
and
in
cmpl
cmp
cmp
es
mov
shlb
shrl
push
inc
inc
or
mov
int3
inc
inc
dec
std
in
add
and
sar
loop
jnp
in
popf
and
xchg
dec
cs
dec
dec
insl
pushf
icebp
dec
mov
pop
iret
xor
push
inc
insb
mov
int3
cmp
dec
stos
lods
retw
dec
jge
jle
lock
leave
xor
cmpsl
lods
lea
movb
gs
and
cwtl
pusha
xchg
and
jge
add
or
les
scas
pop
repnz
in
test
jbe
jne
and
and
fisubl
rol
cmp
pop
jno
jns
fsubs
xor
mov
pop
and
stos
add
test
lcall
jae
loope
and
rclb
std
loop
mov
fcoml
adc
jb
std
das
mov
cmp
cmc
pop
push
popf
mov
cmc
xor
std
ret
imul
xlat
test
or
clc
orb
lea
in
scas
call
sbbl
xorl
sbb
pop
mov
movsl
popa
cmp
das
jmp
push
pop
cld
xchg
sbb
int3
pop
dec
aad
inc
xor
inc
loop
dec
aam
jae
pop
jge
imulb
notl
cmp
xchg
sub
pop
pop
nop
mov
add
xchg
mulb
in
cli
pop
cmp
outsl
dec
dec
rcrl
xor
addl
cmpsb
ds
cmp
mov
aam
loop
xchg
cmp
pushf
push
xchg
or
or
mov
jnp
fnstenv
fcmovnbe
lret
incl
test
aaa
loopne
int3
inc
std
xor
gs
out
insb
fwait
outsl
iret
mov
push
mov
jae
xchg
icebp
ja
pushf
adc
add
es
inc
xor
cmp
hlt
enter
mov
hlt
push
sbb
sbb
xor
mov
mov
push
or
fnstenv
fnstenv
jo
inc
push
jno
adc
cmc
lret
stos
cmpsb
dec
adc
add
xchg
test
xor
out
jecxz
sbb
aam
icebp
xchg
dec
pop
xor
mov
cld
xlat
addr16
and
ljmp
dec
std
jbe
fwait
mov
and
ficoms
sub
add
jae
call
jb
push
enter
pop
mov
dec
push
hlt
test
pop
icebp
mov
pop
ss
aad
je
lret
aad
adc
jmp
ret
mov
sub
in
mov
lcall
add
dec
mov
sub
fwait
xchg
cli
sbb
mov
mov
adc
cmp
inc
cltd
pop
add
ret
cmc
pmulhw
ss
jne
xchg
loope
xorb
dec
aam
ret
rorl
movsl
aaa
pop
mov
iret
push
and
daa
push
sbb
in
or
xor
push
adc
vmovd
movl
and
fcoml
sti
jae
dec
add
and
and
cwtl
add
fbld
jle
scas
pop
out
das
roll
lods
and
je
mov
fiadds
jge
jbe
clc
pop
int3
xor
inc
loop
out
cld
add
pushf
jg
inc
rcl
stos
ret
int3
dec
addr16
outsb
add
or
lds
or
fcoml
add
data16
adc
or
mov
rcll
out
inc
inc
ret
cmc
jne
sbb
pop
in
mov
or
mov
mov
cwtl
out
pusha
sub
cmp
or
jns
leave
pop
inc
clc
lret
shll
sahf
adc
repnz
mov
hlt
push
fstp
pop
sub
xchg
cmp
add
sub
inc
jmp
add
rclb
test
pop
dec
inc
test
xchg
adc
jecxz
lods
push
xchg
cmpsb
ja
mov
repnz
sti
cltd
stos
mov
or
test
dec
fwait
mov
add
mov
jmp
icebp
lret
lret
clc
bound
outsb
iret
xchg
fnstenv
xor
mov
pop
and
or
cmpl
xchg
stc
push
add
sbb
mov
mov
lods
cli
popa
insb
xor
ja
lret
rclb
arpl
outsb
lods
test
inc
scas
xchg
dec
loopne
pop
int3
in
int3
cmpsl
out
popa
and
inc
or
lret
mov
lcall
xor
xlat
stos
ret
jge
cmp
xor
cmc
mov
push
lret
int3
mov
adc
mov
xchg
lds
shrl
repz
pop
repnz
jbe
stos
orl
das
xor
lock
out
cmp
fldenv
adc
js
inc
fmulp
dec
rclb
gs
shl
xchg
es
out
push
lods
xchg
pop
fs
lret
dec
mov
cmpsl
pop
and
iret
jo
add
cmpb
mov
ja
jae
or
xchg
or
mov
and
jecxz
outsl
loop
mov
cmp
push
test
jae
pop
out
xchg
mov
pop
pop
jae
or
pop
in
ljmp
es
inc
ret
pop
pop
cmpb
sahf
sub
push
aam
aad
and
fdivl
lods
pop
outsb
popa
sti
mov
sub
push
pusha
push
pushaw
test
data16
inc
mov
ja
pop
cmc
int3
je
and
jp
and
daa
lcall
adc
push
shrl
pop
lahf
pusha
repnz
mov
into
out
or
test
and
movsl
cmp
dec
mov
pop
sub
rcll
sarb
inc
out
js
cmp
and
stos
inc
jo
rcrl
leave
jo
mov
mov
push
jle
lahf
dec
mov
or
mov
fucomip
xchg
imul
push
cltd
fsubs
shlb
mov
sti
jl
int
cli
pop
sahf
sub
and
jmp
dec
push
jo
inc
js
mov
andl
mov
mov
shll
mov
imul
jns
mov
in
bnd
rcrb
sbb
cmp
cmpsl
mov
cltd
adc
adc
aaa
mov
daa
xchg
sub
push
xor
adcl
inc
or
xchg
sub
out
ljmp
mov
lods
mov
mov
mov
cs
mov
arpl
mov
xor
xchg
ljmp
cmp
mov
mov
sub
popl
hlt
js
cli
mov
rorl
xchg
pop
add
xchg
pop
dec
enter
int3
mov
lock
insl
mov
das
loop
int3
adc
jp
add
shlb
add
jmp
push
push
loope
in
pop
decb
sbb
adc
jbe
cmpsl
xor
inc
or
daa
mov
mov
je
pop
lea
add
outsb
and
pusha
in
and
cs
imulb
loop
jp
jne
xchg
dec
add
loop
add
cs
bound
push
push
mov
inc
rclb
cli
shl
xor
lds
cmp
xor
inc
jbe
into
fcompl
rorb
sbb
mov
inc
imull
pop
pop
out
push
std
js
xchg
sbb
enter
lahf
iret
fneni(8087
or
or
nop
push
jne
push
jle
jae
mov
and
ficomps
lods
and
fmuls
cmpsb
pop
scas
fcomi
xchg
pop
sti
nop
call
sbb
mov
jae
aas
mov
push
inc
mov
test
mov
push
ficoms
jmp
mov
repnz
xor
push
and
dec
sarb
cs
lret
cmp
js
jbe
xor
inc
xchg
adc
dec
gs
fildl
lret
mov
call
xor
jns,pt
in
inc
test
sbb
pop
popf
lods
ja
das
jo
test
inc
mov
cwtl
scas
xor
mov
pop
sub
test
fcomip
test
pop
add
xchg
adc
jo
and
ret
sti
xchg
in
popa
sbbl
and
stos
lds
outsb
adc
mov
dec
cmp
scas
inc
imull
lret
mov
cld
ss
in
gs
sub
push
xchg
push
subb
add
mov
ljmp
dec
sub
cmpb
sub
call
mov
sub
popa
fwait
jmp
cld
out
push
nop
fwait
or
jne
fildll
lahf
fs
das
inc
mov
sbb
pusha
mov
xchg
push
in
xor
cmpl
dec
cmp
xor
scas
jb
scas
or
cltd
sub
sbb
shr
xor
clc
les
test
ds
fcoms
out
repnz
and
sti
push
mov
dec
xchg
gs
and
push
xor
cli
inc
popa
and
dec
lret
sbb
in
push
shrl
add
xor
xchg
arpl
jo
test
aaa
cwtl
test
xchg
mov
mov
push
mov
jbe
mov
lahf
or
ds
daa
push
xor
addl
cmpsb
sbb
sbb
scas
outsb
jl
outsb
xchg
jae
enter
movsl
push
or
adc
pop
mov
nop
pop
cmp
les
movsl
xor
push
adc
ja
push
adc
inc
int3
adc
jmp
mov
arpl
jl
sahf
test
lahf
xchg
adc
xchg
es
mov
popa
add
repnz
fs
test
lcall
sub
adc
cmp
push
push
insb
pop
mov
ret
mov
in
mov
gs
mov
das
fucomi
or
mov
inc
jae
inc
mov
inc
sahf
adc
inc
inc
jmp
and
mov
js
in
test
push
out
add
fiadds
subps
jg
ja
jns
addb
in
mov
adc
sarl
pop
jb
cs
jmp
sub
dec
push
mov
and
inc
test
pusha
and
shlb
ret
repz
jp
jl
cmp
cld
dec
sti
push
nop
fidivs
or
mov
fdivl
inc
movsl
sbb
inc
cli
popa
andb
cltd
pop
lret
or
adc
fstps
or
sti
jmp
daa
aaa
hlt
and
adc
dec
mov
pushf
push
fucomip
cmpsb
push
je
enter
into
sti
xchg
add
dec
push
pop
xchg
mov
aad
jb
add
jae
xchg
mov
xchg
outsb
inc
clc
push
bt
or
inc
dec
aaa
sbb
movsl
insl
pushf
dec
xchg
je
test
add
hlt
add
loopne
or
mov
sub
add
xor
sub
sar
popf
stc
fsubrp
jo
sub
out
push
dec
dec
les
dec
mov
inc
push
sub
mov
inc
cld
lret
lretw
mov
test
int
repz
lock
inc
push
adc
movsb
stc
pop
mov
mov
sbb
cmp
dec
cmp
fdivs
in
roll
mov
cmp
mov
cmpsb
cmp
adc
out
xor
pop
in
popa
in
lock
dec
ja
cmc
jge
adc
xlat
jno
cli
stos
movups
and
xchg
mov
inc
movsl
push
test
mov
cwtl
sbb
dec
mov
shlb
sub
ret
xchg
xor
scas
daa
out
inc
lods
imul
push
jmp
xchg
repz
aam
test
cmc
xor
jmp
stos
mov
sub
mov
add
lods
stos
jo
je
inc
pop
fcoml
stos
mov
mov
mov
aam
pop
xchg
ds
sub
or
test
mov
inc
mov
xchg
xchg
sbb
xchg
mov
ret
sbb
adcb
mull
mov
out
add
xchg
xlat
pushl
mov
mov
jns
int3
pop
and
inc
fbstp
imul
push
jnp
pop
aaa
clc
aas
std
jae
rclb
imul
dec
loopne
sbb
mul
repz
mov
jecxz
lret
jbe
sbb
fldenv
inc
leave
mov
bound
lock
mov
pop
cmc
rclb
adc
jp
add
sub
lock
fimull
or
inc
in
lret
sti
or
outsb
jle
push
imul
rol
dec
pop
dec
cmp
mov
fsubrs
lods
push
sbb
sbb
adc
addr16
je
clc
and
ss
push
int3
push
xchg
add
mov
xor
mov
cs
ljmp
test
sbb
repnz
pusha
pop
in
into
or
test
lahf
sbb
ror
in
cld
cmc
clc
inc
xor
in
mov
pop
cmc
pop
outsb
pusha
jnp
bnd
add
int
fistps
mov
movsb
mov
pavgb
or
jecxz
insl
add
test
cs
rol
xchg
scas
pop
ds
cmp
add
jae
xchg
mov
pop
imul
popf
pop
sbb
mov
pop
xchg
lcall
cmpb
adcb
stos
inc
jecxz
mov
mov
cwtl
popa
clc
push
xchg
jp
fistpll
mov
mov
mov
xchg
bound
cmp
movsw
fiaddl
adc
subb
leave
rcrl
jp
add
sarb
inc
shll
mov
cmpsb
les
inc
mov
mov
push
adc
xor
lea
mov
movsl
cmp
pushf
sbb
out
dec
fdivrs
mov
fsubs
pusha
aam
cmpsl
add
fsub
popf
sbb
lcall
or
xor
outsb
jns
aaa
pushf
imul
jle
out
cmc
mov
xchg
hlt
cwtl
fimuls
pop
call
in
add
cwtl
cltd
lret
aad
in
lea
idivb
fadds
sbb
jo
int3
into
add
push
lahf
sahf
xor
iret
loop
sbbl
add
int3
test
pop
int3
inc
jnp
scas
scas
xor
shlb
popf
and
leave
cld
outsl
mov
or
pusha
pop
out
adc
movsb
daa
dec
dec
lret
imulb
outsl
outsl
xrelease
insl
mov
xor
dec
add
push
cs
xlat
xchg
cmp
cs
push
loope
pop
enterw
daa
gs
and
or
inc
mov
mov
add
xor
add
pop
mov
mov
jg
clc
jae
sbb
fiadds
mov
add
jg
test
adcl
lret
xchg
scas
jae
stos
and
jns
mov
or
add
andb
sbbl
rcll
inc
push
cmp
dec
shlb
dec
cmpsl
inc
push
arpl
xchg
fldl
fidivl
lds
dec
add
push
les
negb
and
sub
jb
push
and
cmp
cwtl
bound
inc
pop
adc
fnstsw
test
fidivs
test
in
cmc
mov
gs
arpl
mov
cmp
jecxz
push
leave
cmp
jne
mov
fadd
fnstsw
outsb
mov
sub
popf
bound
adc
pop
mov
stc
je
and
xor
filds
inc
fwait
in
add
int3
mov
mulb
mov
mov
insb
sbb
sahf
popf
mov
jle
mov
jl
filds
xor
rcrb
dec
lret
cwtl
jmp
or
xchg
popa
inc
or
nop
mov
testl
mov
sbb
out
pusha
xchg
fs
cmp
ror
jl
push
insl
inc
fstps
fsts
shlb
pop
mov
mov
ljmp
jbe
pop
mov
lock
mov
test
add
xlat
mov
aad
xchg
adc
xor
mov
pop
fcomps
into
aaa
stc
out
mov
lds
lock
and
mov
and
sti
xchg
lahf
popf
push
addr16
cmp
jl
out
sub
mov
cmp
and
test
ds
cli
aam
or
xor
jo
int
pop
xchg
jle
nop
ja
and
jnp
cwtl
sbb
dec
ret
mov
subb
mov
test
dec
add
cmp
addr16
mov
jge
arpl
adc
leave
paddq
mov
fistpll
push
pop
xacquire
xlat
jae
bound
and
lea
ror
mov
mov
xor
lock
adc
xchg
adc
inc
aas
fdivrs
leave
pusha
xchg
popf
andl
je
adc
lret
movb
int
pop
insl
sub
addr16
aaa
popf
pop
in
lcall
bound
pop
insl
xor
jbe
jbe
jb
add
xchg
mov
and
push
fwait
mov
pop
xor
pop
inc
adc
fiadds
call
mov
sbb
mov
aas
dec
mov
mov
rcl
pop
shl
mov
jge
xorl
std
ret
loopne
mov
out
xchg
cmp
and
lcall
jne
cmp
test
sbb
clc
andb
enter
add
push
xchg
sbb
mov
lds
or
pop
fiadds
push
cmp
cmp
clc
pop
scas
cmpsb
xor
inc
jbe
sbb
jmp
dec
in
mov
or
mov
aad
push
pop
pop
mov
push
ss
subb
testb
pop
or
sbb
push
ret
mov
lret
inc
lcall
add
mov
loopne
xor
sub
pop
sub
andl
je
adc
sbbb
fwait
inc
sbbl
int3
lock
dec
and
jae
xlat
mov
jg
dec
scas
mov
out
iret
sbb
lret
aam
or
cmp
add
arpl
in
adc
pop
xor
jge
add
mov
and
fisubrs
lret
jbe
mov
gs
jbe
rcll
add
add
js
es
jb
jns
cmpsb
pushf
xor
fsubp
stos
cmp
dec
push
lret
jb
int
daa
idivl
pop
inc
push
fs
cmp
jl
test
cmpsl
cmp
clc
int3
mov
mov
xchg
or
mov
pop
popa
fsubl
push
lahf
arpl
inc
cmpsl
inc
mov
test
incl
add
shlb
xchg
add
jns
sub
insb
popa
cmp
sbb
hlt
jb
jb
decl
xchg
jle
jmp
mov
cli
ljmp
push
pop
cmp
xor
rol
repz
adc
cwtl
jmp
mov
mov
push
mov
sbb
repz
out
push
xchg
aad
sub
fs
fcmovb
push
gs
pminsw
lds
and
je
idivb
std
daa
sub
jp
jns
xchg
mov
vunpckhps
addr16
dec
ret
cmp
dec
inc
rcrb
inc
push
lock
and
imul
or
repz
and
sbb
pusha
xlat
loop
adcb
arpl
push
adc
test
bound
movsl
mov
or
fwait
aaa
mov
and
push
pop
out
aaa
mov
mov
imul
xchg
jae
add
xlat
inc
arpl
and
xor
shr
mov
fisttpll
loope
and
mov
loope
mov
movsl
cmpxchg
outsb
push
pop
adc
dec
add
sub
lods
xchg
mov
aad
into
xchg
add
loope,pt
insb
jmp
add
xor
test
push
popf
sti
iret
jne
mov
sti
es
in
loopne
fdiv
xchg
sub
ret
orb
arpl
pop
and
push
xchg
mov
push
adc
dec
jmp
jb
xchg
inc
pop
int3
out
cmp
pop
push
mov
aam
loop
xlat
adc
pop
repz
and
dec
add
iret
gs
icebp
mov
test
ljmp
or
jnp
jp
jne
mov
sbb
jnp
mov
pop
jmp
out
lahf
sub
adc
out
inc
mov
cs
daa
rol
test
dec
mov
das
sarl
adc
fistpl
sub
nop
sub
inc
sub
lret
xor
sub
pop
test
pop
out
ret
shl
hlt
rcrb
pop
or
shrl
push
mov
call
add
add
add
testb
aam
jno
out
fnstenv
rep
mov
jne
and
sub
lret
cmp
mov
addb
ss
adc
jmp
sub
jbe
jb
stc
xor
push
inc
fs
aas
bound
in
cwtl
ljmp
sbb
mov
push
add
and
subb
and
mov
bswap
and
push
dec
xchg
std
movsl
mov
into
jge
cmp
and
cmpsl
in
push
inc
lahf
add
lds
bound
xchg
mov
test
pop
xor
add
jecxz
clc
adc
clc
inc
js
mov
sahf
dec
or
lret
mov
jno
fstpl
fcmovnbe
xor
in
das
fdivs
out
icebp
faddl
jo
jo
adc
pushf
imulb
fs
inc
pop
cwtl
sbb
gs
jno
dec
push
aas
clc
jae
jmp
lret
mov
bound
push
mov
push
cmp
mov
lahf
push
xor
pop
jnp
inc
test
decb
mov
scas
ja
mov
fcmovne
dec
lea
cmc
xchg
sub
daa
fwait
jbe
jle
enter
pop
loope
mov
movsl
out
popf
add
sbb
adc
cmp
ja
jecxz
idiv
inc
inc
popa
mov
sbb
out
ror
cltd
cmp
pusha
pop
outsl
xor
push
xor
imul
mov
jge
ds
divb
inc
pop
lcall
mov
mov
mov
les
xchg
jl
jmp
cmp
mov
or
jb
and
stos
outsb
jae
mov
mov
aam
popa
lret
xor
stc
fwait
push
push
and
mov
adc
mov
fnsave
test
xchg
ds
cmp
mov
add
in
in
push
mov
data16
and
dec
fstpl
test
push
sbb
and
xlat
fisubs
movsl
inc
xor
ljmp
ret
mov
jmp
and
inc
jne
mov
fcoms
jl
jns
aam
ss
or
push
in
test
mov
pop
adc
lret
insb
sub
and
popa
xchg
subl
cli
fistps
fiadds
mov
mov
int3
data16
gs
fisubs
ja
mov
hlt
stos
popf
mov
stos
xchg
sub
dec
jecxz
push
in
mov
loope
xchg
bound
fnsave
js
sub
or
inc
and
and
sbb
and
adc
sub
out
ret
in
sarl
mov
sub
in
inc
push
daa
add
mov
ss
lods
addr16
sti
push
test
arpl
sarl
sub
jno
sarb
mov
pop
xor
jmp
cwtl
out
in
xchg
push
adc
add
and
cmp
dec
mov
in
cmp
jbe
fiaddl
push
inc
sti
dec
lock
scas
lret
inc
fbstp
mov
ja
outsb
stos
mov
test
dec
xchg
jl
mov
pop
mov
push
dec
scas
or
divb
mov
outsb
jbe
jmp
jecxz
and
ljmp
test
adc
and
push
in
mov
cmp
jae
in
jge
and
ja
insl
stc
mov
sbb
orb
cmpsl
pop
dec
ret
adc
or
pop
xchg
pop
xor
mov
stos
movsl
xchg
mov
fwait
xchg
inc
imul
mov
cmp
stc
pop
mov
adc
rcll
insb
push
mov
and
jns
les
jp
shrl
fwait
push
add
push
pop
outsl
xor
sub
fs
mov
lcall
add
int3
pop
insb
loope
adc
les
lcall
ret
push
mov
fstps
shlb
add
ss
dec
push
rclb
mov
mov
and
push
fstps
lds
sub
xor
movsb
sahf
fdivs
lret
inc
and
jbe
push
jb
insb
lods
inc
sahf
cmp
add
scas
inc
stos
dec
dec
fimull
cltd
js,pt
mov
push
inc
mov
mov
sbb
pop
adc
stos
inc
cmp
es
fcoms
or
xchg
push
shll
push
inc
sub
movsb
outsb
pop
fwait
test
ret
mov
jnp
and
dec
out
lods
xor
rep
inc
test
scas
mov
fbstp
aad
cmpsl
lods
mov
dec
ret
mov
loopne
testb
add
es
lods
fidivrs
xor
adc
pop
cmc
popa
shll
mov
jmp
jle
lock
pop
xchg
pushf
jmp
cmp
pop
ljmp
inc
add
lcall
sarl
cld
aad
outsl
sbb
mov
cmpl
and
dec
in
add
daa
shlb
lds
jmp
aaa
and
xchg
pop
or
add
inc
shl
mov
jle
xor
je
movsbl
mov
cmp
fmuls
jg
repnz
call
jns
dec
cmp
jecxz
stos
sbb
sub
outsl
jecxz
mov
pop
xor
jno
sarl
shrb
lahf
lahf
push
add
psrld
lock
fisubrs
sub
mov
dec
in
inc
sbb
fisubs
cmp
sbb
and
xchg
and
iret
out
sbb
rorl
jae
rcl
sub
iret
scas
and
push
dec
pushf
call
xchg
xor
xor
mov
adcb
xchg
or
push
into
shr
pushl
dec
dec
loop
xor
mov
adc
mov
sahf
push
jns
xor
fs
mov
enter
fwait
or
stos
inc
scas
xchg
or
mov
jle
iret
lods
jg
outsl
pop
jb
call
push
add
mov
xchg
cs
testb
mov
mov
aad
mov
ret
mov
mov
lahf
cmp
xor
mov
and
cwtl
mov
pop
jb
test
std
int3
mov
mov
outsl
fwait
out
into
inc
nop
popa
and
mov
lock
addr16
add
and
jge
mov
imul
xor
das
test
mov
sti
int
cmpsl
stos
addr16
jp
mov
dec
fcoml
cmp
sbbb
jge
push
loopne
add
inc
inc
jecxz
adc
push
repnz
psrlq
stc
rolb
xchg
pop
pusha
pop
add
pop
pop
xchg
sub
cmp
idivl
add
inc
jmp
xor
out
pop
cmp
stos
mov
or
mov
add
or
leave
int
push
xlat
imul
xor
lds
mov
es
dec
adc
jecxz
push
scas
mov
out
fwait
lods
shrl
pop
dec
popa
jg
lahf
mov
stc
adc
sub
in
test
in
pop
out
push
aam
dec
lods
xchg
dec
mov
movsb
mov
js
add
insb
mov
mov
stos
mov
xchg
jbe
arpl
cmp
inc
leave
xchg
js
in
rclb
jae
jbe
nop
jge
test
lret
cmc
mov
xchg
daa
mov
ret
push
jmp
ret
pop
daa
jp
jb
lea
aas
or
dec
lahf
xor
mov
mov
clc
imul
push
and
into
push
xchg
lea
cmp
jge
nop
cmpsl
jbe
shrb
mov
out
test
outsl
jb
xor
stos
xchg
sbb
test
mov
lret
shlb
test
mov
push
out
xor
pop
pusha
das
sbb
insb
ljmp
inc
push
push
xor
push
mov
pop
jmp
loope
cld
add
gs
pop
and
jae
ret
inc
fmull
ficoms
jb
cmp
add
jae
lahf
push
jne
arpl
outsb
and
mov
movl
jge
ret
jnp
mov
add
lret
js
sbb
inc
mov
or
mov
out
push
testl
jmp
repz
sub
test
pop
out
cli
mov
shlb
mov
mov
inc
sbb
test
loopne,pn
into
popa
push
mov
ds
cmp
cmp
cmc
notl
push
inc
mov
mov
mov
jl
out
sbb
mov
sti
pushf
data16
and
inc
mov
sbb
mov
mov
push
mov
sbb
roll
jmp
sbb
or
cli
mov
cmpsl
cmp
push
jne
push
sub
sbb
in
imul
ja
xchg
sub
call
shl
int
into
push
lret
movsb
cmp
jmp
push
stc
hlt
rcrb
fwait
movsl
add
test
int3
pop
es
stc
mov
mov
mov
imul
dec
mov
or
mov
mov
or
and
and
sbb
pop
icebp
mov
jns
cmp
dec
xor
add
pop
push
adc
popf
out
adc
pop
fisubl
mov
rol
ss
repnz
mov
push
adc
and
mov
subb
inc
sbb
mov
in
jo
ret
cmpsl
loope
fimuls
cltd
test
das
cld
inc
mov
dec
movsb
cmpsl
and
push
enter
stos
popf
add
je
jae
sbb
dec
lret
mov
hlt
mov
xchg
and
add
adc
xchg
in
mov
data16
push
repz
movsb
out
pop
or
in
jl
xchg
rol
dec
fstpt
xchg
dec
pop
shlb
xchg
cs
or
mov
add
xchg
xchg
pop
es
cmpl
jns
testb
dec
or
cmp
adc
xchg
add
jmp
xchg
jmp
push
mov
stc
xor
cmp
inc
dec
push
call
jae
sahf
stos
sahf
xchg
inc
lods
mov
mov
dec
mov
std
lods
xor
and
xchg
repz
inc
and
xchg
push
outsl
test
mov
int
cmp
pop
je
cmp
popf
and
jno
dec
in
dec
in
jne
inc
push
shrl
imull
fwait
push
ret
outsb
or
loope
ljmp
fdivrp
fidivs
orb
jnp
inc
popf
or
cmp
push
fdivrl
sub
mov
jl
adc
xlat
jg
and
leave
fnstsw
push
jns
lock
fsubp
jb
mov
mov
sbb
or
cmp
mov
hlt
mov
dec
jae
repnz
ja
call
sub
and
lds
adc
push
cmp
inc
sahf
imul
inc
push
imul
test
aas
push
repnz
out
ret
addb
cmp
or
subl
cmp
addr16
test
scas
add
dec
iret
jecxz
add
pop
fisubrs
add
int
and
sub
xchg
and
ret
ficoml
mov
mov
pop
mov
xchg
lret
sbb
mov
insl
sbb
pusha
mov
jbe
xor
sub
push
jp
push
ljmp
gs
or
fstpl
mov
jne
inc
dec
loope
push
lea
inc
or
pop
cs
cmp
mov
and
dec
in
jle
push
insb
ljmp
jo
lea
xlat
stos
add
in
outsl
sbb
xchg
insb
adc
into
mov
mov
fs
xchg
popf
aaa
push
ficompl
adc
clc
je
out
and
push
xor
jns
xor
dec
ljmp
pop
adc
or
xchg
mov
hlt
outsl
cmp
icebp
sbb
push
fwait
shlb
jp
jle
js
ret
and
jns
sarl
sub
cvttps2pi
and
mov
mov
xor
pop
lret
pop
push
mov
jno
adc
imul
cmp
jae
pop
fimull
test
scas
jge
xlat
js
sbbb
sbb
cmpl
sbb
dec
cmp
xchg
aas
je
out
xchg
subl
cltd
dec
and
inc
ret
pop
call
mov
and
add
lods
mov
cli
loope
and
push
out
inc
xchg
cmp
mov
mov
cmp
add
xor
and
xchg
cld
xchg
sub
sub
xchg
xor
mov
sub
call
out
test
lods
lock
mov
rclb
cmpsl
movsl
adc
mov
xchg
loopne
push
xchg
push
jbe
imul
cmp
and
in
adcl
shl
pop
lahf
adc
jo
cs
gs
sub
mov
inc
cltd
or
test
jl
or
xor
add
push
or
fldcw
test
pushf
notb
xchg
das
sub
lret
adc
add
arpl
call
mov
or
cmpsb
adc
pop
mov
mov
and
out
and
scas
and
pop
pop
mov
stos
jno
in
fwait
inc
scas
call
dec
icebp
sahf
pop
adc
jb
cld
pop
insl
pushl
call
mov
and
iret
pop
fdivrp
lcall
sub
adc
mov
outsl
dec
xchg
or
ss
notl
loop
andl
fdivl
cli
addl
lret
lahf
xor
popa
shl
lea
stos
inc
xlat
idivl
pop
jge
iret
pop
fidivl
pushf
lods
fwait
inc
test
jp
jno
sub
data16
sub
lcall
mov
pop
outsl
inc
pop
mov
jne
insl
loopne
sbb
sbb
mov
rolb
pop
scas
test
dec
fsubs
repz
jmp
fidivrl
xor
jl
fs
cwtl
das
jle
or
adc
jbe
mov
movsb
inc
stos
std
pop
jb
push
push
jbe
sub
or
mov
enter
jp
push
leave
pop
adc
pop
lahf
pop
pusha
ss
inc
sahf
shl
idivl
add
iret
mov
push
aam
push
mov
repz
jle
in
mov
xchg
adc
lds
outsl
pop
cmp
mov
addr16
sub
faddl
adc
imul
xchg
mov
pop
mov
xchg
xchg
inc
inc
cmpsb
ds
xlat
sub
imul
call
xchg
mov
test
fs
and
and
and
out
fidivl
sahf
ss
enter
int
divl
lods
xchg
jo
les
sbb
mov
cli
lds
sub
jge
bound
cmpsl
sti
xchg
and
add
cli
add
movsl
test
mov
stos
mov
sbb
pop
repz
cmp
lds
add
jae
and
ud1
insl
ret
push
repz
adc
mov
xchg
jb
mov
adc
xchg
and
enter
in
lcall
loop
pop
mov
decb
insl
nop
inc
or
cmp
hlt
sub
cmc
xor
ffree
inc
lret
je
jo
and
mov
outsl
andl
lret
ret
data16
dec
lret
sbb
out
add
cmp
imul
outsl
int3
pop
push
jnp
stos
sub
mov
inc
cmpsl
xchg
shr
dec
sbb
mov
arpl
int
cmp
lods
stc
dec
ret
es
push
stos
orl
dec
icebp
sbb
stos
imul
push
mov
push
divl
mov
cmp
inc
xchg
scas
inc
ficomps
test
test
lret
pop
cmpsl
clc
push
and
sub
lods
outsl
push
and
cmp
fidivl
jle
jmp
shlb
out
stc
aam
sbb
adc
inc
lods
mov
and
mov
lret
xchg
cld
jae
sbb
xchg
ja
sahf
and
fdivl
out
dec
loop
data16
and
cmp
testl
and
xor
cmp
inc
xlat
and
adc
jno
dec
jne
shlb
aam
ja
in
or
cmpsb
pop
jne
dec
aam
jle
fdivs
rep
movsb
add
mov
pop
insb
test
inc
into
test
adc
jl
cmp
imul
cli
xchg
add
xchg
sub
sbbb
lret
xchg
sbb
testb
add
xchg
add
cmc
mov
fnstenv
inc
mov
xor
cld
sbb
pop
pop
cmpsb
addr16
repz
xchg
mov
pop
pop
ja
pop
cmp
cmp
lea
call
lahf
lea
inc
mov
add
sahf
mov
cmp
cli
cmpsl
movb
fidivl
insl
ljmp
ja
dec
in
xchg
inc
stos
add
scas
inc
xchg
pop
cltd
and
cmp
xchg
fiadds
pop
xchg
and
loop
inc
mov
movsl
aas
mov
sahf
xchg
sub
rorl
sub
pop
xor
loopne
mov
popa
jmp
cmp
push
pop
ja
xchg
mov
lret
cmpl
arpl
jne
mov
lcall
shll
fmuls
aam
out
iret
mov
rclb
inc
dec
popa
push
mov
cmp
iret
push
xor
daa
xchg
sub
adc
cmp
lret
sub
popa
xchg
pop
jp
inc
mov
shl
mov
pushf
fsubrs
ja,pt
stos
imulb
fs
push
ljmp
add
cmpsb
arpl
out
xchg
mov
xlat
push
cli
and
aam
ret
add
cmp
js
pop
xchg
jg
jo
mov
adc
mov
sub
dec
out
jns
bound
fnstsw
mov
pop
lret
pop
mov
ljmp
mov
mov
shl
cmp
test
add
mov
mov
mov
imul
shl
das
addr16
addr16
pop
clc
inc
fmull
das
gs
inc
sub
and
mov
push
adc
mov
pop
push
mov
or
sahf
mov
jb
scas
sub
and
repz
xor
jbe
in
inc
and
mov
fistps
rcrb
pop
mov
jae
mov
pop
xchg
add
push
mov
dec
jmp
sbb
sbb
clc
and
push
sub
fcmovnbe
dec
dec
push
aad
xchg
adc
mov
das
ss
aaa
ret
cs
xorb
inc
fwait
test
or
mov
add
mov
jecxz
shrb
push
push
int
mov
sub
push
mov
bound
cmp
mov
fabs
xor
push
jnp
mov
je
in
pusha
ret
cmp
lea
push
xor
mov
pop
mov
shlb
xor
aad
cmp
pop
cltd
push
dec
push
lret
mov
mov
imul
addr16
push
push
push
pop
fs
adc
or
int3
mov
jmp
dec
mov
es
jno
je
cld
jae
fstpl
cltd
add
clc
adc
sbb
xchg
je
jecxz
push
mov
pop
imul
pop
dec
movsl
pop
scas
call
dec
dec
repnz
loope
sub
sahf
and
loope
cmp
cmp
mov
or
sbb
ja
cmp
out
mov
pop
xor
stos
cmp
sub
sti
cld
mov
dec
pop
xor
fidivrl
lret
loopne
push
ficoms
scas
push
movsl
fmul
mov
ja
sub
lret
icebp
test
mov
test
xor
loopne
insb
adc
mov
or
xor
push
or
fwait
lcall
decl
pop
xor
fiadds
xchg
pop
lods
fs
pop
cs
aad
jo
mov
pop
es
pop
addr16
dec
mov
dec
fldcw
dec
mov
ljmp
rcll
inc
movsl
pop
imul
enter
or
dec
ds
int3
outsl
push
mov
pop
pop
mov
sub
mov
leave
adc
cmp
cmp
lahf
pop
sahf
es
nop
mov
push
pop
icebp
enter
imul
and
mov
daa
inc
loop
aam
sub
pop
lahf
and
push
jne
push
push
mov
xchg
cmp
fisttps
data16
pop
insl
sub
jns
test
add
jo
in
mov
test
jns
mov
negb
pushf
add
sub
std
and
xor
sbb
jle
jnp
mov
insl
inc
jno
jae
sarb
push
jb
xlat
rep
jb
adc
inc
test
sbb
sbb
in
cwtl
das
inc
in
xchg
movsl
mov
xchg
sbb
lds
jbe
popf
outsl
add
jno
rolb
fmull
sbb
es
push
pop
fimull
xchg
cwtl
incb
fucomip
in
xchg
jb
or
xor
and
push
pop
mov
repnz
push
out
jns
push
xchg
mov
repz
mov
or
inc
hlt
out
imul
nop
push
out
xor
xor
pop
mov
int
int
and
scas
inc
add
mov
dec
jnp
rcll
sbb
sub
add
xor
sbb
push
ret
xchg
stos
xchg
jno
cmp
fbld
cmpsb
cmp
mov
pop
aad
cwtl
mov
ret
ljmp
xor
negb
fbld
or
das
testb
sbb
ror
cli
adc
enter
les
add
xchg
ret
ljmp
pop
int3
pop
iret
adc
jge
adc
lods
aam
aad
popf
sahf
lods
xchg
mov
jno
leave
jecxz
jbe
cmpsl
mov
sub
fimuls
clc
imul
jl
xchg
pop
addr16
jmp
daa
inc
lods
xor
gs
pop
pop
addr16
and
mov
cs
inc
add
scas
inc
popa
aam
cmpsb
stc
adc
into
ljmp
mov
push
or
scas
lret
idivl
push
mov
jecxz
repnz
es
ss
or
push
or
adc
popf
gs
push
daa
xor
out
sahf
add
negl
sub
xor
xchg
gs
fldenvs
or
call
lcall
int3
ds
outsl
daa
push
xor
fistpl
fbstp
mov
lock
xchg
xchg
or
daa
aas
push
inc
mov
inc
inc
pop
jge
inc
push
sub
adc
lret
cld
or
dec
mov
aaa
lods
daa
cld
faddl
mov
adc
mov
and
incb
or
xor
lea
cmp
xchg
data16
stc
mov
lahf
imul
inc
fs
mov
xchg
add
lahf
mov
mov
out
lcall
push
mov
sbb
aam
jecxz
add
and
lods
add
stc
mov
add
orl
stos
adc
and
jp
ficoms
ja
sbb
xor
pop
mov
ret
aas
jbe
push
dec
sbb
mov
andb
inc
jbe
ss
mov
inc
cltd
jg
clc
cmp
pusha
pop
insl
shr
or
out
andb
pop
movsl
add
mov
repz
adc
push
das
mov
cwtl
pop
frstor
jmp
imul
mov
int
sar
popl
jns
fadd
loopne
rcll
pusha
cld
mov
fiadds
adc
inc
popf
popf
inc
out
mull
mov
inc
arpl
xchg
pop
insb
arpl
je
sub
pushf
sub
rcrb
cmp
cltd
mov
and
push
sahf
push
or
divl
into
sub
or
scas
jle
in
call
insb
jle
pop
fyl2x
aaa
mov
inc
cmpsb
je
adc
out
cmpsb
repnz
fnsave
push
xor
into
or
push
and
push
pop
inc
test
ds
fwait
pop
mov
inc
jle
in
mov
stc
sub
add
dec
cltd
adc
push
mov
out
push
movsl
pop
je
dec
cmc
xor
fs
xchg
dec
mov
xor
nop
and
cltd
inc
add
xor
jns
or
xor
fstps
mov
cmp
or
adc
push
lret
jbe
dec
xor
data16
gs
jbe
inc
xor
adc
aad
mov
adc
enter
pop
jb
jb
sub
add
scas
das
pop
fsubr
test
idiv
push
mov
shll
pusha
jle
enter
aad
test
pop
repz
popa
fdivl
outsl
dec
in
sti
dec
pop
pop
and
sbb
push
sbb
into
mov
repnz
cli
mov
fiadds
insl
popf
dec
fsub
mov
fidivl
arpl
sub
or
enter
test
mov
inc
jecxz
push
cwtl
bound
and
imul
mov
cmpsl
xlat
push
imul
stos
and
insb
xor
xor
loop
repz
push
dec
cmp
push
fnstsw
leave
idivb
movsl
mov
mov
mov
pushf
cmp
clc
popa
and
leave
mov
and
inc
js
lds
je
or
mov
cmc
cmp
pop
cmp
cmp
sbb
mov
out
fs
loop
call
imul
ret
pusha
lahf
jecxz
and
in
das
loopne
adc
loopne
repnz
push
fmulp
mov
cmpsb
cli
cltd
mov
repnz
cmp
out
pop
hlt
pop
pop
inc
xlat
dec
inc
das
jnp
outsl
ret
and
jecxz
push
pop
mov
dec
xchg
jge
and
cmpsl
sbbl
stos
fldenv
pop
add
pop
xor
cmp
mov
icebp
sub
movsl
cltd
jnp
mov
lret
loope
pmaxsw
inc
cmp
repz
data16
sbb
jo
push
mov
movsl
inc
gs
pop
inc
call
dec
cld
mov
adc
sub
sahf
mov
xlat
sti
ds
jb
leave
pop
push
je
cmp
sti
push
push
jg
mov
in
add
or
mov
test
sbb
roll
mov
adc
cmp
cmp
inc
mov
loopne
mov
push
fcmovnbe
ds
or
xchg
arpl
mov
loop
push
sub
mov
enter
jae
cld
pop
xchg
dec
filds
icebp
data16
push
out
mov
adc
add
adc
sbb
movsb
movb
mov
mov
sbb
dec
sbb
lahf
stos
cld
push
shl
hlt
test
inc
in
mov
cmp
pushf
jmp
add
lods
xorb
adc
jp
stos
mov
inc
sbb
daa
pop
imul
clc
or
sub
nop
mov
lods
cmp
fdivl
push
fiaddl
sti
test
enter
rcr
and
cmpsb
ljmp
sub
mov
scas
xor
cmp
arpl
push
repz
rclb
cmp
cmp
pop
push
jbe
xchg
cmp
mov
sarb
test
inc
push
sub
lcall
shll
mov
in
stos
mov
test
ret
cld
loopne
xor
incb
stc
lcall
jg
xchg
int3
loop
scas
repnz
loop
lds
insl
or
data16
rcr
inc
sub
xchg
pushf
mov
mov
idivl
pop
fidivs
arpl
es
mov
stos
cmp
mov
push
pop
ret
add
inc
mov
adc
or
inc
mov
mov
daa
scas
pusha
push
mov
lea
jne
pop
shrb
adc
lock
jle
call
imul
xor
enter
push
and
xor
and
lret
jns
mov
test
ficompl
inc
lret
loopne
sub
mov
jae
adc
xlat
dec
pop
mov
test
xchg
pop
add
or
mov
out
adc
clc
mov
arpl
rorb
cmc
cmp
xchg
push
pop
and
ljmp
outsl
mov
mov
sarl
sti
adc
aas
push
xchg
xchg
sbb
jb
iret
mov
ss
xchg
outsl
inc
je
or
push
testl
pop
es
ss
int3
push
jmp
sub
shlb
xchg
mov
movsl
loopne
xchg
sbb
or
test
jl
pop
scas
xchg
dec
mov
sbb
cmpsb
in
lock
inc
or
adc
or
int
fidivrs
cmp
aaa
insl
or
push
xor
dec
add
aam
sub
or
call
jmp
or
cmp
aam
out
add
mov
aam
mov
xlat
sub
imul
mov
sbb
push
or
lods
in
cmp
iret
ja
add
xchg
pop
insl
imul
xchg
xchg
pushf
sbb
test
test
cmp
and
cmpl
aad
insl
cmp
xchg
push
in
jl
dec
fbld
pop
mov
fs
inc
adc
mov
xchg
or
arpl
test
ss
mov
insb
icebp
aad
push
adc
jmp
or
xor
pop
vmread
sub
mov
add
ds
mov
mov
xchg
mov
mov
ja
xlat
in
js
pop
add
stos
mov
inc
cmpsl
fisubl
mov
ds
dec
movsbl
aaa
jne
out
mov
fimull
lods
jo
pop
jbe
sbb
jl
xor
into
repnz
cwtl
push
shrb
mov
xchg
and
lods
sti
test
xor
lods
adc
ljmp
loope
xchg
xlat
insb
mov
movsl
cld
adc
jp
mov
mov
aam
jns
pop
adc
cs
add
and
dec
mov
faddp
adc
insb
and
lcall
addb
mov
mov
ret
sbb
sub
add
xor
mov
sbb
aad
sbb
scas
sub
lods
xchg
inc
clc
std
cltd
push
int3
dec
loop
add
lds
push
cmp
iret
mov
in
mull
int3
movsb
cltd
jo
adc
sbb
rorl
jnp
imull
push
dec
mov
out
cmpsl
inc
adcl
popf
mov
add
sub
mov
mov
dec
and
cmp
mov
fwait
push
arpl
cmc
mov
sbb
mov
repnz
pop
outsl
cli
inc
mov
fldl2t
xor
stos
mov
movsb
lcall
cmp
jle
fsubrs
and
and
nop
cmp
sarb
mov
call
cmp
daa
roll
aad
lods
testb
dec
loopne
xchg
xchg
loope
mov
cmp
mov
pusha
or
imul
xchg
shrl
cmp
out
cmpsl
loop
xor
pop
aam
xchg
and
push
psraw
fld
rorb
fisubrs
rcrl
in
cld
psrlq
cmp
nop
int
push
or
mov
pop
mov
cmp
push
enter
js
loopne
xchg
icebp
cmp
xchg
fwait
or
shll
cltd
lock
or
xor
in
lret
lret
sbb
daa
clc
shll
sahf
test
fnstenv
outsb
pusha
jge
pop
add
sbb
mov
test
dec
or
in
or
cld
aam
or
ss
hlt
stos
xlat
or
sub
je
in
cli
xor
andl
xchg
jae
sbb
out
in
inc
mov
mov
mov
imul
out
push
pop
mov
out
jne
adc
test
bound
and
xor
scas
inc
jle
sub
addr16
mov
or
cmp
je
inc
shlb
push
jno
mov
push
jne
lods
daa
mov
icebp
movsl
push
push
xchg
cs
rclb
pop
jb
or
sahf
add
stos
enter
cltd
jmp
jmp
dec
lret
sti
xor
test
mov
or
std
mov
mov
into
and
push
in
out
xchg
lea
fbstp
mov
xchg
inc
pop
testb
lea
cmpsl
xchg
in
cwtl
mov
jecxz
stos
push
andl
imul
xor
mull
adc
xorl
call
arpl
jl
mov
div
mov
xchg
add
sti
sub
sbb
dec
addb
xor
loopne
ja
iret
xchg
test
sbb
testl
sarb
imul
adc
scas
sub
xlat
jge
loop
rcrl
imul
sti
adc
in
pop
and
stos
cmp
cli
fisubrl
cmpsl
dec
push
out
xchg
xor
ret
lods
cmp
mov
popf
push
rolb
jbe
testb
daa
inc
xlat
mov
add
ss
int3
mov
push
mov
icebp
scas
sub
mov
in
push
jecxz
cmp
and
lods
pop
xor
gs
ljmp
jo
arpl
je
fucom
mov
dec
lret
lret
imul
out
daa
hlt
daa
xor
daa
decb
es
mov
cli
cmp
out
bndstx
adc
mov
add
dec
and
sar
xchg
dec
jns
clc
sti
je
fldln2
ja
mov
or
mov
daa
leave
in
mov
jp
shrl
lcall
push
pop
outsl
jnp
cmp
push
mov
subl
xchg
jns
shll
leave
xor
sbb
dec
call
xchg
insl
int3
dec
jne
mov
push
adc
dec
shlb
std
or
icebp
or
adc
loopne
aas
push
push
lods
call
scas
cmp
push
mov
mov
xor
imul
xlat
push
es
ficoml
js
pop
vmovlpd
cs
push
stos
rorb
jg
fiadds
jl
jp
adc
or
jnp
mov
push
jl
icebp
mov
fdivs
pop
sub
mov
daa
dec
loop
push
push
add
cmpsl
jbe
inc
adc
jne
hlt
nop
pop
xchg
add
cmpsb
lcall
mov
pop
repz
xchg
rcl
add
dec
add
add
mov
xor
scas
push
adc
push
decb
add
pusha
dec
pop
jne
iret
addr16
adc
rclb
sbb
mov
test
inc
stos
outsb
ret
dec
fnsave
mov
ret
rorl
adc
das
je
or
addb
loopne
and
aaa
lock
or
add
mov
ss
icebp
call
add
xorb
fwait
daa
xchg
icebp
outsb
adc
or
aam
arpl
dec
dec
dec
mov
loopne
aad
loope
ja
ja
les
lock
cli
repnz
out
cmpsb
icebp
push
lahf
mull
inc
mov
mov
push
in
out
cmpb
daa
push
lock
pop
push
js
loope
into
gs
adc
mov
mov
mov
scas
push
xchg
inc
mov
sbb
fsubl
jbe
or
push
jmp
repz
popf
outsl
mov
cs
jnp
repz
jnp
cs
xchg
arpl
out
scas
xor
scas
xchg
sub
push
xchg
xor
or
scas
sti
ret
or
pop
stos
repnz
add
repz
add
sub
popa
insb
jge
sbb
outsl
push
rcrb
mov
iret
xor
jl
jp
scas
jns
pusha
pushf
add
pop
lock
lock
adc
xor
xchg
dec
mov
mov
sub
sub
pop
cwtl
pop
ja
cltd
pusha
test
xor
sub
test
shrb
xchg
aas
movsl
rorb
dec
push
inc
std
inc
jecxz
scas
shr
push
cli
xor
and
xchg
rcrl
jle
jg
mov
ret
pop
xor
add
mov
out
mov
hlt
xorb
mov
add
hlt
and
fnstsw
add
and
fyl2xp1
fcoms
enter
cmp
test
jl
sub
jb
push
inc
loop
daa
jns
pop
icebp
inc
sbb
jno
add
sub
mov
fs
dec
mov
jmp
addr16
push
rcrl
xchg
push
repnz
sub
dec
shl
fidivl
cs
ljmp
ficompl
adc
sti
shrl
and
aas
push
ret
scas
out
jns
cmp
push
pop
les
pop
loope
add
adc
mov
pushf
xor
jo
mov
xor
movb
orl
cli
and
add
mov
mov
mov
jb
mov
xor
mov
xchg
pop
jae
sub
jnp
mov
push
in
adc
mov
loope
mov
mov
out
std
sbb
xor
mov
push
adc
stos
cmc
cmp
add
mov
push
and
lds
or
fnstsw
inc
add
or
mov
sbb
mov
movsl
pop
xchg
loopne
xor
lcall
out
sti
jae
call
and
fistpl
adc
adc
push
cs
nop
stos
movsl
jmp
repnz
mov
fldt
shld
mov
fidivrs
or
mov
sub
into
push
adc
sub
mov
incb
outsb
sbb
repz
mov
adc
shlb
inc
arpl
and
pop
jnp
int3
xchg
loop
mov
aam
sub
dec
or
cmp
push
adc
aad
scas
xchg
adc
dec
jmp
push
cmp
out
add
xchg
cwtl
call
into
das
and
mov
ret
aam
mov
mov
adc
sarb
dec
pop
add
pop
inc
dec
mov
xor
cmp
cmp
in
push
cli
mov
stos
cmp
pop
jne
ds
jae
push
ficoms
aaa
ss
les
faddp
clc
fsub
enter
add
hlt
notl
add
std
pusha
and
sub
fbstp
nop
scas
test
inc
xchg
mov
sbb
pop
movsb
inc
cs
int
pop
test
pop
add
stc
test
push
cld
xchg
inc
daa
lret
jmp
fldcw
jbe
xchg
stos
addr16
lret
test
cmpsl
xor
mov
mov
push
jp
std
xor
hlt
mov
xor
mov
mov
mov
testb
int3
cmp
mov
sarb
xchg
push
insl
rcrb
setb
mov
loopne
xlat
mov
mov
cwtl
xchg
fs
jecxz
sbb
pop
sub
insb
dec
jae
jb
push
stc
sbb
push
mov
lock
cli
popa
js
xchg
cmp
pop
xchg
dec
mov
es
in
mulb
cmc
pop
mov
rcrl
jmp
stc
jmp
fstpt
dec
test
aam
sbb
jns
shrl
mov
push
cmp
loop
cld
inc
sub
cmp
shlb
dec
xlat
stos
inc
and
aad
mov
shl
pop
out
cmpsl
mov
pop
inc
pop
loopne
sub
iret
pushf
sbb
dec
jns
sbb
lahf
out
rcrb
arpl
sti
inc
cwtl
sbb
std
and
mov
mov
shlb
scas
in
cmpsl
cmp
sbb
push
add
ja
jae
clc
mov
leave
pop
push
lods
outsl
idivb
sub
adc
mov
fldl
pop
pushf
stos
in
test
stos
or
in
arpl
jle
sahf
int
inc
jbe
pop
add
in
push
test
jge
gs
lods
mov
in
sbb
dec
shll
inc
add
mov
mov
add
pop
hlt
dec
pop
xchg
scas
jb
dec
repnz
fucomp
mov
inc
mov
loopne
sbb
jo
dec
mov
adc
mov
js
push
scas
push
shll
xlat
mov
add
sub
xor
mov
push
xor
je
push
pop
das
xchg
stos
sbb
xchg
in
xor
xor
fldl
mov
cli
inc
popf
sahf
es
add
xchg
jb
jne
push
xor
fldl
mov
mov
add
pop
or
inc
xor
mov
dec
jp
xchg
and
aas
sbb
xor
imul
lods
les
mov
roll
int3
mov
int
cmp
out
stos
inc
and
leave
test
mov
aaa
mov
out
rolb
cltd
add
add
in
mov
fistpll
into
fisubl
test
mov
adc
out
dec
cmp
aam
and
pop
loopne
lods
xchg
and
mov
adc
pop
lret
xor
xchg
into
insl
push
in
sub
push
pop
adc
imul
lahf
inc
stos
outsl
push
frstor
mov
mov
stc
cmp
sbb
jle
xchg
in
loop
and
add
cli
adc
xlat
mov
xchg
dec
data16
sbb
sbbb
mov
sub
fisubrs
inc
push
popf
movsb
push
imul
adc
or
fldenv
push
adc
flds
ss
or
cmp
add
shlb
jbe
mov
ja
inc
cltd
push
cmp
sahf
jo
nop
cmp
jb
jnp
mov
lret
lret
repz
cmp
mov
test
fwait
insl
or
xor
bound
rcrb
mov
cli
xchg
dec
shl
xor
int3
out
aaa
pop
int
mov
outsl
push
cmp
pop
ljmp
push
hlt
outsb
adc
add
test
shlb
dec
paddb
xchg
xor
jp
add
mov
push
sub
xchg
in
inc
lcall
add
iret
aam
add
addr16
or
out
test
xchg
dec
pop
rorl
repz
sahf
push
pushf
std
call
je
ljmp
mov
loope
les
cmp
leave
xorb
out
cmp
mov
shl
sbb
fcmovnbe
roll
mov
mov
fwait
loop
mov
inc
adc
arpl
or
mov
or
das
jge
pushf
insl
inc
fcompl
cmp
inc
cmp
imul
data16
js
xor
pop
and
inc
out
jae
call
int
popa
repz
dec
mov
stos
sub
iret
add
sbb
push
and
push
and
repz
cs
std
das
pop
arpl
rcrl
adc
xor
gs
xlat
inc
pop
call
in
mov
sbbl
stos
mov
sub
add
push
out
adc
test
nop
push
loopne
lods
fidivs
sub
jecxz
mov
push
adc
or
shll
fidivrs
mov
xor
xchg
push
ja
cwtl
xchg
mov
mov
fdivs
nopl
scas
es
jecxz
sbb
cmp
mov
sbb
aam
push
cli
rcrl
lea
push
add
pop
mov
lods
sbb
push
ret
hlt
mov
stos
inc
fnstenv
push
cld
mov
jmp
sbb
xchg
out
cmp
test
test
mov
orl
sub
and
sub
repnz
push
pusha
adc
adc
push
mov
pop
and
repnz
call
cmp
fst
inc
cld
sub
jp
jle
mov
fmull
arpl
xchg
bound
and
iret
into
int
push
sahf
mul
pop
cmp
mov
inc
inc
sbb
out
pop
outsl
cli
test
jmp
sbb
test
aaa
and
loope
sub
insb
test
jge
sub
cmp
mov
mov
jb
clc
sbb
sub
dec
push
rol
cmp
jne
jl
sub
mov
fadd
aad
dec
leave
mov
imul
repnz
jle
push
outsb
push
outsl
push
xchg
jbe
inc
cs
lret
push
out
xchg
adc
mov
ljmp
rorl
into
cmp
in
jmp
lea
jg
push
aad
pop
sbb
popf
mov
outsl
repz
mulb
push
jge
test
es
sub
inc
fiaddl
repnz
cltd
frstor
mov
dec
in
pusha
or
xchg
mov
xlat
fdivl
in
cmp
and
sub
sub
dec
pop
inc
jl
fidivs
popf
pop
ja
adc
mov
pushw
sub
aam
loope
adc
push
mov
sti
inc
aas
adc
pop
loop
cmp
mov
int
shrl
call
xor
hlt
shll
xchg
fnstsw
add
mov
pop
mov
mov
cmp
or
shr
test
arpl
and
cmp
roll
stc
sbb
mov
xor
jnp
pop
push
in
dec
repnz
and
mov
inc
xchg
test
push
ret
push
mov
xchg
ds
pushf
pop
divl
out
dec
pushf
aad
shl
or
sahf
and
pop
cld
xchg
push
je
icebp
dec
xor
or
jae
push
mov
ss
fsubs
pusha
or
aaa
dec
cli
adc
cwtl
xor
pop
push
lea
aaa
push
aaa
adc
clc
cld
call
add
in
jbe
mov
cmp
adc
aaa
jne
pop
fsubs
mov
cmp
xchg
jbe
fwait
pop
xchg
int3
jl
cld
lods
scas
jmp
fisttps
xchg
fdiv
mov
mov
add
scas
push
xchg
jns
clc
cmc
jns
daa
fldt
rorb
sarb
sbb
xor
push
pop
xchg
js
ds
fsts
or
test
int3
inc
dec
bound
scas
mov
aaa
pop
shll
mov
andb
hlt
fnstenv
sbb
stos
mov
dec
mov
jle
iret
sub
nop
pop
cmp
jbe
push
xchg
out
repz
xlat
mov
out
mov
popf
or
and
cli
ret
sbb
ret
xchg
mov
std
or
das
lds
sub
cmp
mov
xor
xchg
mov
inc
add
in
pop
dec
xchg
jmp
sbb
or
adc
and
mov
cwtl
add
das
cmp
sub
aaa
add
xchg
push
in
add
dec
pop
cmp
sub
outsl
mov
inc
pop
xor
lods
push
cmp
xorl
js
in
cmc
xor
rcrl
cltd
repz
hlt
xchg
jmp
pusha
mov
aam
pop
jno
mov
mov
jp
inc
test
mov
jecxz
jnp
mov
cmp
aas
sbb
sub
lods
inc
push
jl
fwait
movsb
mov
fbld
fistl
hlt
les
fdivl
call
adc
xor
and
dec
lds
imul
pop
lcall
mull
nop
sub
inc
mov
pop
jmp
and
xor
int
jmp
push
daa
sbb
scas
mov
andb
xlat
subl
mov
fnstenv
arpl
in
dec
mov
repnz
imul
lods
sbb
inc
xlat
ret
pop
leave
pop
cmc
mov
fldcw
or
int
xor
ss
addr16
ja
loopne
mov
xchg
outsb
test
in
inc
dec
dec
pop
mov
sbb
xchg
sub
and
dec
das
jmp
testl
popa
mov
enter
mov
adc
xor
movsl
or
push
adc
mov
subb
dec
push
sbb
aaa
cmp
mov
mov
ret
add
sbb
xor
add
inc
xchg
fisubl
cli
in
popa
aas
push
fildl
and
or
ja
icebp
mov
movsl
or
mov
mov
scas
je
fadd
xchg
ds
loope
adcb
aam
mov
pop
ret
mov
mov
rcrl
ds
in
sbb
pusha
cmpl
loop
cli
sbb
cmpsl
int
jg
sub
mov
mov
mov
jl
testl
pop
inc
imul
pop
mov
dec
jnp
sub
dec
fxch
mov
outsl
inc
pop
mov
iret
pop
or
pop
mov
lods
xchg
fsubl
ret
fdivl
stos
mov
enter
imul
and
add
loop
or
adc
loop
mov
psraw
and
sti
jbe
int3
stos
and
inc
mov
pop
les
sub
xor
cmp
push
scas
xor
xchg
mov
cli
stc
shll
sbb
mov
inc
addr16
sbb
in
subl
in
movsl
or
push
push
mov
pushf
xor
cmp
mov
lock
int
or
stos
jecxz
lods
bound
xor
mov
or
push
inc
cs
in
test
mov
or
rcl
shl
and
stc
or
cltd
pop
mov
dec
mov
insb
addl
mov
jns
loope
shl
cmp
inc
xchg
or
or
popf
imul
mov
xorb
push
mov
dec
sub
cmp
in
sahf
je
push
inc
sbb
mov
int3
xor
cmp
sbb
adc
inc
daa
mov
out
cmp
mov
jge
cmp
dec
jg
shr
push
inc
loop
bound
pusha
sbb
adc
cmpsb
push
mov
gs
ficomps
mov
xor
ss
xchg
mov
les
sub
xor
iret
push
push
fdivrs
or
jns
or
js
xchg
loop,pn
dec
movsb
dec
cmp
xor
ja
jecxz
push
sub
jle
fdivl
cmp
cmpsl
icebp
push
fsubp
mov
adc
fidivrs
jbe
adc
notl
xor
lea
int3
xor
sahf
sbb
lret
mov
cmp
xor
mov
jle
mov
jae
int
stc
mov
mov
mov
leave
fimull
mov
call
inc
and
mov
mov
dec
in
iret
and
or
inc
push
mov
jae
inc
fstl
out
mov
in
adc
mov
cmpsb
outsl
sbb
call
mov
dec
movsb
cmp
xlat
sub
lock
xlat
mov
in
inc
ficomps
jb
cmp
inc
rol
loopne
xchg
imul
outsl
push
call
cltd
lods
popa
adc
inc
jb
cs
push
lods
jmp
jmp
push
jnp
popl
dec
adc
jns
add
fmull
ficompl
mov
fucom
dec
call
jle
mov
mov
xchg
ss
and
mov
rcll
je
scas
xor
or
and
test
jne
outsl
imul
in
dec
outsl
jne
jl
in
jl
xchg
setle
inc
mov
add
cmpsb
rorl
mov
xchg
stos
jp
cs
xor
adcl
cltd
jo
inc
scas
sbb
mov
pop
or
leave
fxch
loope
push
jecxz
arpl
sti
inc
and
adc
pushf
in
std
adc
bnd
addr16
push
sti
sub
call
jb
pop
push
cmpsl
ret
fcmovb
aam
adc
pop
ret
pop
cmc
xor
mov
add
mov
fistl
nop
aas
adc
imul
dec
cltd
test
jo
pop
sub
sub
mov
jne
ret
stc
and
mov
push
imul
mov
mov
in
fwait
add
stc
shr
sbb
outsb
dec
ss
or
sahf
dec
arpl
adcb
ds
bound
out
adc
orps
outsl
dec
xchg
lret
lock
jno
cmpsb
jne
dec
lds
adc
popa
jno
iret
sti
adc
add
adc
fsubrs
adc
jg
or
inc
sub
js
or
cwtl
sbb
pop
lds
or
cmpsl
add
pop
les
pop
call
outsl
ret
call
aas
and
lds
sti
mov
insb
mov
sbb
inc
popa
fs
push
out
lods
pop
ljmp
push
push
lcall
mov
xor
add
inc
adc
jo
and
or
push
push
pop
insl
adc
fs
and
xchg
mov
nop
rcll
shlb
mov
pop
cld
mov
es
out
push
cmp
in
test
cwtl
mov
mov
push
leave
pop
cmp
xchg
nop
pop
mov
shlb
fdivrl
stos
xchg
and
inc
pop
outsl
dec
jp
int
jns
xor
js
sarb
xor
add
jbe
sbb
or
nop
jnp
jmp
rol
std
or
lods
icebp
iret
cmpsb
repz
cld
cltd
ja
add
dec
pop
and
jp
andb
shl
inc
enter
mov
xlat
lods
in
push
cmp
dec
outsb
daa
stc
rorb
inc
fdivr
sbb
icebp
add
insl
fsubrl
arpl
mov
nop
inc
cli
xchg
mov
bound
cwtl
test
sub
fists
mov
xor
enter
into
pop
jp
pushf
xor
jb
sbb
sti
xchg
sub
pop
cmp
cmp
subb
in
jno
cmc
enter
sub
jae
je
fisubs
je
aas
mov
sub
push
mov
and
iret
fdivl
test
cmp
stos
int3
xor
hlt
push
sub
sbb
popf
inc
imul
sarb
call
sub
pop
cmc
pop
in
xchg
inc
lods
push
movsl
pop
adc
fisubrl
inc
pop
mov
add
outsl
cwtl
xor
dec
nop
push
lahf
add
ret
in
push
fmull
or
pop
imul
icebp
xchg
cli
stos
jmp
pop
cli
fs
into
enter
mov
or
dec
icebp
and
push
adc
mov
loop
mov
rcll
test
xchg
ficomps
cmc
inc
sub
cmp
rcl
mov
cltd
je
cs
ja
mov
sub
pop
mov
sbb
imul
inc
xchg
movsl
es
jp
dec
icebp
mov
loope
out
cltd
add
dec
push
sbb
xchg
cld
divb
imul
mov
or
cld
repnz
mov
imul
ja
pop
mov
xlat
jge
out
cs
cmp
scas
aad
cs
sbb
jp
add
or
jns
mov
sub
inc
scas
cltd
xchg
sub
enter
push
inc
pop
filds
sbb
insb
jo
sbb
bound
in
cmp
xchg
add
push
ret
clc
jge
ljmp
or
pop
cmp
cmp
inc
ljmp
xor
rcll
jmp
xor
cmp
xchg
repnz
test
das
ret
shll
adc
cmc
int3
sub
jne
push
aas
push
lret
mov
push
or
inc
bound
scas
push
ret
leave
loop
mov
enter
add
addr16
dec
inc
popf
mov
mov
cmp
xchg
cmp
push
repnz
xchg
leave
fdivl
imul
push
mov
dec
fadds
loop
lods
sbb
mov
lret
test
inc
enter
mov
int3
sbb
sahf
push
popf
stc
lea
daa
dec
xchg
dec
popa
lds
adc
jmp
mov
push
push
mov
xchg
and
scas
sub
sub
sbb
jmp
aaa
cmp
dec
xor
out
jnp
jecxz
icebp
mov
jl
dec
js
push
push
jne
mov
scas
add
popf
idivl
test
addr16
cmpsb
sbb
test
and
leave
mov
lods
xchg
or
lret
jo
insb
fistpll
orb
cmpsb
arpl
in
movsl
push
push
inc
mov
mov
jmp
ds
push
mov
std
movsl
mov
aaa
add
jp
cltd
mov
pushf
int3
fmulp
mov
pop
inc
cmc
dec
fbstp
xor
sub
test
scas
adc
les
mov
mov
push
and
stc
xchg
rcr
rorb
fisttpll
push
cs
sub
icebp
xchg
sub
xor
sbb
pop
mov
rorb
stos
inc
adc
leave
jbe
lret
xchg
dec
cmc
adc
lret
sub
ds
pop
lcall
cmpps
adc
mov
pop
clc
dec
cmc
sbb
cld
sub
xor
xchg
sbb
stos
jbe
fdivrl
xchg
pop
or
mov
out
scas
push
fldl
out
add
xchg
inc
fwait
dec
hlt
mov
mov
mov
or
add
insl
stos
cmp
jl
mov
stos
push
add
fwait
jg
subb
inc
add
and
pop
repz
xor
imul
push
inc
fsubrl
je
stos
subl
mov
lds
cmp
or
enter
aaa
imul
push
add
xor
ss
cmp
std
loope
jle
popa
inc
stos
mov
pop
andl
push
inc
rolb
repz
aas
fidivs
xchg
mov
cld
fs
mov
test
lock
movsb
mov
jbe
jg
push
mov
push
cli
sbbl
sbb
aad
and
in
lea
icebp
stc
jno
mov
sbb
pop
inc
pop
cltd
sub
adc
mov
sub
jmp
in
pop
xchg
pop
mov
mov
push
cwtl
pop
push
out
sahf
sbb
dec
out
out
stos
fadds
pop
scas
shl
cltd
loope
decb
enter
sub
es
jne
test
lods
mov
idivb
push
pop
add
test
jmp
add
aam
pop
add
and
test
mov
movsb
divl
mull
ret
pop
fsubl
pop
data16
nop
dec
sbb
jbe
mov
out
aaa
sub
dec
add
rcl
cmp
cmp
aaa
cmc
popl
sbbl
sbb
mov
stos
test
push
cmpsb
jb
xor
xchg
inc
add
arpl
xor
scas
testl
adc
push
jb
ficompl
popf
stc
jg
inc
xchg
and
push
movsl
push
pop
and
sbb
push
cltd
dec
cmp
in
std
fidivrl
cmp
into
xor
adc
fmul
mov
into
ljmp
mov
imul
scas
mov
sub
jne
stc
or
lods
inc
lods
dec
cmp
push
xorl
push
in
stos
popl
inc
adc
cmp
mov
xchg
cmc
mov
add
pop
ljmp
call
adc
or
xchg
cmpsb
das
fdivp
cmp
sbb
and
iret
cltd
adcl
fildl
inc
sbb
cltd
out
divl
in
adc
jnp
js
cltd
jle
xchg
pop
call
imul
int3
jbe
mov
sbb
xor
mov
in
in
pop
out
jae
dec
fmul
sbb
push
bound
lods
aas
xor
pop
in
lds
xor
sub
push
out
inc
aad
dec
sar
out
in
sub
orl
cs
popa
shrl
sbb
pop
std
lods
and
shrb
add
imul
shll
into
jo
pop
in
add
mov
inc
gs
sub
shrl
xor
gs
xchg
sbb
arpl
mov
mov
fnstenv
ror
js
loop
jmp
ds
sub
or
push
loop
pop
cwtl
enter
mov
shrl
xchg
pusha
out
out
push
pop
push
and
lahf
incb
shll
mov
jnp
lcall
push
lods
cmpsl
adc
xor
stc
push
push
or
jmp
mov
ja
inc
mov
pop
sar
xchg
adc
sbb
outsl
push
jbe
xor
in
loope
sub
jl
inc
lcall
push
add
xchg
mov
mov
and
dec
popa
xor
bound
fnstenv
jl
mov
vcvtps2qq
aad
xchg
adc
test
addr16
pop
mov
inc
pusha
jae
inc
popa
leave
js
mov
push
mov
add
outsb
clc
inc
add
stos
xor
jo
testl
sbb
call
jbe
jp
ja
dec
test
fbld
icebp
sub
pushf
xor
mov
out
rclb
or
rcl
cmpsl
mov
lcall
sub
dec
push
dec
pop
repz
les
jle
jp
jmp
rcll
fstpl
mov
notl
sub
dec
rcr
mov
inc
das
jl
out
inc
jl
pop
cmp
jg
in
rolb
dec
xlat
jge
rcl
ljmp
xor
mov
fbstp
cmpl
push
lods
ljmp
mov
cli
mov
sbb
xchg
outsb
inc
and
imul
cwtl
cmp
jmp
lock
pop
lock
movd
ja
jo
loope
mov
sbb
data16
xchg
mov
sti
xor
incb
out
xchg
jl
or
aaa
aam
and
pop
idivb
mov
lea
mov
loop
jmp
xorb
sti
in
mov
fisttpl
in
int
stc
push
pop
fldenvs
movsl
sbb
adc
inc
or
mov
gs
int
repz
int
hlt
dec
pop
fistl
mov
sti
popf
popa
add
aad
lods
int3
and
subb
mov
fistpll
stos
xor
xlat
sub
push
int3
stc
fwait
sub
fsubrl
repz
cli
and
std
mov
sarb
mov
cmp
dec
fwait
or
and
push
push
in
pop
test
add
icebp
and
adc
lea
rcr
rorl
insb
and
iret
add
pop
shl
add
imul
jns
ds
fnstcw
int3
arpl
inc
ljmp
mov
out
fsubrl
cmpsl
inc
or
mov
xor
gs
jo
jl
jmp
jg
movsb
xchg
pushl
dec
imul
xor
push
cli
dec
bswap
je
push
inc
lock
cmc
xchg
jmp
cmp
jb
out
loopne
mov
sub
ret
mov
pop
lock
pop
negl
inc
push
sbb
das
loopne
popa
push
and
mov
jecxz
scas
sbb
fcoml
mov
xchg
movsb
dec
and
pop
pop
std
push
xor
xorb
add
std
lret
mov
push
inc
gs
or
push
in
sub
dec
push
or
dec
sbb
popf
push
xchg
decl
or
test
add
push
push
sbb
xor
cltd
in
push
xor
mov
pop
adc
outsl
int
push
sbb
sub
imul
mov
mov
or
mov
adc
ret
xor
cmp
nop
mov
outsb
jg
jl
jge
mov
sbb
das
outsb
ljmp
push
mov
dec
push
inc
or
push
mov
jp
xor
adc
testl
movsb
sarl
xchg
add
shlb
jmp
shll
or
mov
jmp
icebp
jo
sbb
pop
push
addb
pop
adc
das
mov
pop
leave
jno
sub
in
leave
mov
cld
xchg
rcl
jge
mov
xor
mov
inc
fildl
mov
cs
loop
test
test
repz
adc
aas
mov
mov
ret
add
int
push
cmp
push
and
sahf
and
scas
and
leave
jecxz
decb
lret
adc
cmp
into
add
dec
fsubs
mov
imul
sahf
mov
pop
dec
or
enter
cli
lahf
jg
xlat
repz
cmp
popf
push
out
xor
negb
jno
dec
pop
jge
fwait
cmpsl
loopne
cltd
mov
push
push
ret
scas
or
stc
lds
lods
aas
call
jmp
pusha
xor
xchg
push
jmp
xlat
loopne
daa
mov
loopne
xchg
mov
fwait
test
shlb
dec
xchg
outsb
andb
xor
outsb
sub
test
or
add
xchg
sub
mov
or
and
cmc
mov
std
pop
js
dec
pop
lea
movsl
cld
inc
push
mov
popf
insl
seta
andl
in
imul
icebp
nop
jl
in
pushf
aad
or
mov
sbb
popf
sbb
sub
test
sub
in
mov
mov
adc
iret
mov
in
mov
jmp
mov
jno
and
lahf
out
inc
pop
add
ret
xor
loope
ja,pn
cmp
cmpsb
rclb
push
jmp
scas
mov
fimull
mov
pop
and
idivb
jae
out
in
inc
rclb
push
pop
xchg
stos
fidivs
mov
mov
mov
mov
inc
mov
shlb
and
jne
scas
jns
stos
jbe
cmpsl
fidivrl
sahf
xor
int
cmpsb
inc
pop
leave
xchg
mov
ja
dec
mov
xchg
idiv
loopne
mov
mov
dec
xor
mov
shr
and
sbbl
in
jne
inc
jp
fdivs
mov
movsb
lds
repz
out
daa
out
in
jl
mov
pop
mov
jg
movsb
test
sbb
je
cmp
inc
ds
pop
mov
insl
jns
dec
add
sbb
mov
dec
mov
out
sub
mov
roll
pop
push
imul
mov
sub
push
daa
inc
test
inc
sbb
or
fadds
xor
imul
pushf
mul
imul
ja
mov
fidivl
testl
mov
cli
movsl
scas
imul
ds
and
lcall
mov
cmpsb
adc
jle
movsb
mov
sbb
lods
ss
into
inc
xchg
sbb
lret
ffree
cmp
fxtract
mov
sub
or
push
mov
jg
mov
lods
mov
sahf
lods
adc
outsl
imul
push
rolb
sbb
mov
jmp
or
xchg
cmp
addr16
sarb
call
out
fsub
out
push
adc
aam
ret
popa
pusha
mov
lds
or
or
sub
cmp
mov
pop
jo
cmp
sbb
xchg
push
popf
lea
jmp
fs
outsl
sbb
bound
mov
into
mov
jle
inc
fldenv
mov
fidivrl
jp
jae
mov
add
addr16
fstpt
xor
pop
cmp
nop
inc
ja
idivl
adc
in
xchg
dec
into
mov
scas
mov
pop
sub
cltd
sub
push
stos
mov
xchg
inc
arpl
in
hlt
or
add
push
jnp
mov
cmp
jle
mov
or
aas
dec
xchg
pop
dec
pusha
and
inc
lock
insb
adc
mov
shll
shlb
xchg
dec
dec
cmp
test
and
rcl
cltd
sbb
jns
shll
dec
mov
adc
sbbl
into
fstl
jp
data16
inc
pop
jl
fcomp
mov
das
jle
hlt
scas
push
or
lods
cmp
pop
sahf
sbb
and
xor
xor
xchg
sub
mov
pop
lods
dec
lcall
cli
in
enter
inc
fcomi
sti
dec
out
xchg
mov
pop
dec
js
cmpsl
inc
in
daa
out
inc
in
dec
sbb
jle
test
xchg
sbb
cmpsb
push
je
aas
mov
xchg
dec
pop
or
cltd
std
push
push
sbb
dec
xchg
aaa
stos
push
insb
add
jb
mov
pop
inc
fsubs
dec
ja,pn
inc
pop
jno
dec
or
push
cmp
pop
push
nop
adc
out
js
pop
mov
cwtl
lret
cltd
cmp
test
and
shrb
insl
jle
outsl
mov
dec
fninit
pop
popa
aaa
dec
hlt
sar
push
fbld
inc
xor
scas
mov
sbb
loop
cmp
dec
mov
mov
and
inc
cmp
movsl
pop
int
or
or
movsl
push
pop
push
outsl
dec
lods
test
sub
mov
mov
fadd
jae
cmpsl
call
js
push
sub
push
pushl
mov
ret
imul
cltd
xchg
and
sbb
pushf
out
fnsave
inc
jmp
int
push
or
scas
mov
sbb
ret
in
or
mov
xor
sub
je
inc
gs
push
sub
out
imul
pop
mov
pop
popf
ss
fldl
push
fs
dec
sub
jl
jb
xchg
push
dec
rcll
xor
and
xchg
xchg
mov
test
scas
or
cltd
ljmp
push
enter
jmp
xchg
mov
and
movsb
mov
mov
dec
aaa
stos
cld
mov
adcb
lods
pop
mov
inc
xchg
dec
cmp
clc
popl
xchg
add
lret
pushf
adc
and
mov
push
daa
cmc
out
cmp
iret
outsl
push
in
sbb
cld
mov
outsl
rcrb
mov
and
ds
sti
mov
imul
or
cmpsb
mov
push
jge
fs
ja
addl
pop
jno
rol
jbe
cmp
xchg
std
xchg
add
sbb
mov
and
shll
and
enter
cmp
out
cld
popa
fsubrl
leave
adc
xlat
aas
jp
ss
dec
or
and
xchg
push
outsb
jbe
xchg
push
hlt
movsl
and
movsb
arpl
lcall
mov
or
lret
sub
pop
fstp
xlat
repz
lret
fsubs
mov
push
add
lods
add
and
bound
adc
pop
aam
outsb
cmp
ret
fucomp
mov
aam
push
daa
in
add
rol
pop
add
adc
cltd
data16
mov
lahf
push
push
pop
push
call
mov
or
in
scas
jecxz
sub
add
cld
outsb
sarl
mov
rcrb
sbb
clc
sbb
cmp
outsb
in
sub
aam
inc
inc
mov
mov
je
ss
repz
push
scas
xchg
mov
nop
cld
lahf
ss
and
mov
xchg
sahf
out
dec
mov
sbb
dec
fsubr
push
sub
or
push
cmp
inc
jle
negl
cltd
idivb
ret
sahf
pop
mov
push
jge
xchg
stos
pop
movsl
imul
adc
out
mov
in
sbb
mov
mov
sbb
fmull
fs
cmpb
shll
test
xor
data16
test
xchg
dec
push
lahf
dec
pusha
cli
adc
jo
add
and
push
enter
stos
pop
aaa
xchg
in
add
inc
syscall
cmp
in
sub
pop
or
cltd
or
jmp
mov
mov
sub
sbb
push
mov
lret
sub
enter
fisttpll
das
ret
popa
outsl
add
adcb
push
push
in
int3
sahf
sub
in
lock
lret
sub
pop
ds
clc
sti
addr16
jmp
andl
mov
mov
jnp
cmp
or
outsl
fsubs
mov
subl
pop
jl
sbb
mov
push
aad
cmpsb
jecxz
aaa
ljmp
cmp
jne
xor
xchg
icebp
mov
sbb
sbb
popa
xchg
insl
mov
cwtl
insl
jge
dec
push
cltd
push
popf
add
lret
xor
out
mov
push
push
out
adcb
lcall
stos
inc
mull
sbb
jle
test
shlb
sbb
pop
pop
mov
push
enter
mov
or
cmpb
cmp
xor
and
or
call
jecxz
ja
and
xchg
cltd
mov
dec
adc
es
inc
aam
jns
out
std
push
pop
fldz
mov
rclb
inc
fdivs
push
fistpl
pusha
add
jae
push
jns
subb
int
pop
xor
rcll
in
and
hlt
mov
push
mov
pusha
ftst
sub
xchg
pop
ljmp
cmc
xchg
mov
push
jne
aad
fstpt
sbb
clc
data16
sbb
call
xlat
mov
mov
or
sahf
mov
and
push
call
fistl
in
jl
inc
or
cwtl
cmp
cmp
cmp
cmpsl
push
mov
xchg
andb
jbe
pop
mov
popf
sub
inc
adc
leave
loope
sub
cmc
pop
push
jbe
ja
cmp
xchg
lcall
out
dec
dec
cmp
mov
sbb
cmpsl
dec
mov
rcrl
test
ja
andb
mov
movsb
mov
jo
sbb
icebp
push
add
mov
lock
inc
and
jae
or
rorl
pop
dec
ss
arpl
flds
push
loop
loope
jae
sbb
push
out
sub
pushf
ds
xchg
pop
fsubrl
iret
pop
aaa
gs
mov
inc
dec
or
push
shr
mov
mov
int3
pusha
cmp
xchg
cmc
dec
shrl
sbb
mov
mov
aam
mov
hlt
push
stos
inc
xor
in
das
xor
jecxz
push
je
adcb
movsl
fcomp
add
aaa
adc
shll
jl
vpcmov
inc
mov
pop
iret
or
jbe
insl
pop
pcmpgtb
cmpsl
movsl
test
inc
push
fsts
fisttps
mov
and
jp
sbb
loopne
outsb
dec
testl
out
adc
and
movsb
inc
dec
cli
pop
ja
pop
dec
in
das
mov
or
sub
sbb
sti
add
sbb
lret
mov
fstpl
push
aam
inc
es
mov
out
jmp
inc
leave
lods
push
lods
rcll
mov
and
dec
cwtl
pop
call
add
repnz
shlb
push
aas
jnp
cmc
movsb
dec
movsl
inc
cmp
xor
mov
dec
mov
ret
hlt
ret
xor
in
jl
idivb
cmp
pop
jnp
dec
aad
adc
addb
stos
adc
xlat
and
shll
ret
xlat
mov
mov
mov
in
insl
testb
mov
mov
push
repz
or
and
push
xorb
into
sbb
mov
inc
in
jno
out
xorb
inc
xor
leave
add
cmp
in
leave
sti
ret
arpl
mov
int3
xor
cmp
repnz
jl
mov
int3
and
leave
leave
xor
lods
test
adc
add
gs
fwait
ds
gs
adc
cli
mov
xor
sarl
sbb
popf
sbb
outsl
cli
sbbl
cli
mov
es
lcall
data16
fimuls
pushl
loope
test
mov
ret
or
pop
scas
dec
adc
movsl
push
xlat
cmc
test
je
roll
dec
push
xchg
or
lret
sbb
pop
in
gs
pop
clc
dec
mov
mov
xchg
sub
and
inc
xchg
jg
jne
rorl
fistl
mov
push
cmp
add
shr
dec
sbb
mov
cwtl
jmp
jb
fimuls
sbb
inc
mov
das
out
add
insl
imul
insl
xchg
lcall
lret
jp
mov
jmp
adc
cmp
xor
xchg
pop
frstor
lahf
rsqrtps
jecxz
or
shrb
lods
cmpb
push
mov
add
lret
mov
orl
and
push
jb
push
subb
sbb
ds
mov
xchg
mov
or
lcall
sub
into
stc
xchg
mov
arpl
je
push
lods
es
pop
lret
retw
mov
inc
add
add
and
cmp
jle
call
lret
je
cmp
inc
nop
jp
xchg
mov
jp
in
mov
push
cmp
sbb
or
movsb
jg
ss
icebp
mov
cs
inc
lods
push
mov
cmpsb
or
lods
lcall
sbb
jne
repz
fs
dec
or
cltd
fimuls
sub
sub
xchg
sbb
nop
jg
push
insl
cmp
cltd
mov
add
imul
push
mov
mov
stos
or
ja
xchg
fsubrl
ret
or
jmp
fcomi
cmp
lret
in
in
dec
outsl
pop
adc
dec
les
aas
in
test
pop
cmc
mov
dec
jmp
testl
nop
jmp
xchg
ficoml
test
js
scas
xor
popa
data16
mov
addr16
rorb
mov
cmc
fnstsw
sahf
das
or
scas
inc
fdivl
shlb
out
or
sub
out
push
jno
inc
je
mov
adc
test
inc
in
sub
pop
imul
sub
xor
rorl
or
push
sub
aam
mul
ret
scas
out
fwait
repnz
gs
mov
sbbl
dec
jnp
jl
mov
idivb
int
fadd
sbb
ja
outsb
add
and
inc
inc
orl
arpl
lods
sub
sub
fs
push
imulb
mov
pusha
adc
std
ja
jo
xchg
loop
add
loope
mov
iret
push
adc
lods
or
pop
jno
xchg
test
jno
xor
mov
xchg
imul
mov
cli
mov
xor
add
insl
add
clc
insb
fucomip
xchg
mov
into
jp
daa
or
ljmp
idivl
cmp
pop
sub
js
or
xchg
fsubrl
xchg
inc
pop
std
dec
gs
mov
xchg
js
mov
scas
adc
adc
mov
outsl
jp
mov
popa
mov
pop
call
pop
inc
ja
les
addl
aas
push
sbb
shll
add
dec
inc
or
adc
sub
aaa
xchg
inc
fdivrp
xor
adc
dec
ret
jnp
test
add
je
xchg
lock
icebp
lods
mov
das
jmp
xorl
adc
jmp
add
mov
ja
xchg
inc
cwtl
push
lcall
xchg
xor
push
in
imul
arpl
adc
jno
in
ds
jbe
jne
pop
cmc
mov
sarb
mov
push
je
xchg
lret
and
pusha
mov
jbe
xor
or
push
loope
jecxz
pop
mov
in
stos
lea
lods
cli
inc
dec
fnstcw
xor
dec
lahf
dec
popa
clc
stc
cmp
cmpb
jle
jne
push
mov
ss
and
test
movsb
mov
aad
fidivs
outsl
jge
movsl
scas
nop
mov
mov
inc
pop
cmpl
xchg
or
stc
mov
jp
sahf
mov
pop
push
push
fnsave
mov
adc
lods
ljmp
sub
int
inc
frstor
add
gs
jae
pusha
add
lcall
mov
mov
cmp
push
inc
xchg
pop
cmp
jb
mov
outsl
sbb
jl
cmp
popf
js
xchg
push
xchg
jno
lods
ljmp
pushf
jbe
push
mov
cmp
mov
pop
insl
add
sbb
inc
mov
xor
lret
mov
scas
inc
loopne
aaa
cmp
push
orl
popf
sub
mov
or
jb
mov
into
push
jne
rcr
ss
inc
xchg
dec
pop
push
mov
loope
fdivrl
and
xchg
adc
mov
cwtl
sub
sbb
add
lahf
pop
jle
adc
mov
das
add
jp
cmp
dec
and
xor
jmp
loop
lahf
cs
into
mov
pushf
sub
inc
inc
in
enter
in
cmp
jecxz
lods
mov
adc
push
xor
fsubrl
pusha
mov
inc
pop
inc
xor
aas
ljmp
jle
cmp
loop
loop
cmp
pop
mov
pop
dec
pop
pushf
sub
bound
xchg
scas
cli
mov
dec
adc
mov
mov
mov
add
notb
out
lods
cmp
mov
mov
dec
jle
cmp
dec
mov
fildll
lret
xchg
xor
xor
adc
inc
movsl
fcoms
sbb
daa
cli
out
mov
data16
iret
pop
push
cmpsb
cwtl
lock
jmp
or
adc
mov
cmp
xchg
cs
xchg
ss
scas
cwtl
adc
test
popa
clc
popa
mov
pop
loope
cli
imul
leave
jno
fwait
inc
popa
int
out
xchg
or
jge
or
jns
aam
rolb
shrb
jae
cmp
les
mov
movsl
lea
enter
jnp
or
mov
mov
shll
out
repnz
mov
iret
call
push
push
pushfw
js
pop
stos
add
imul
xlat
cmc
out
imul
adcl
aas
push
sahf
mov
inc
pop
aas
ljmp
mov
dec
pop
and
lahf
cmp
jnp
subb
adc
dec
push
sub
push
dec
cmpsb
xchg
mov
std
mov
mov
test
mov
mov
jmp
push
adc
hlt
mov
fdivr
mov
xchg
aaa
into
ret
mov
or
push
xchg
insl
dec
push
add
mov
jnp
imul
sti
jo
loope
add
imul
sbb
xchg
jmp
ret
sbb
push
stos
xchg
jl
mov
les
loope
or
idivb
fidivl
inc
push
fmuls
xor
lret
test
sahf
shll
jmp
cmpsl
lahf
adc
lret
mov
xor
cmp
push
add
sub
xchg
mov
push
sbb
pextrw
xchg
mov
lock
stos
pop
mov
cwtl
negl
out
cld
push
cld
sahf
ss
inc
divl
fmull
mov
divb
test
lret
push
scas
mov
shrb
insb
and
pop
loopne
lods
cmc
fwait
xchg
dec
les
test
and
hlt
pusha
pop
sub
cmpl
loop
cmpsl
sub
mov
repnz
outsb
js
int
or
sub
insb
push
in
pop
mov
clc
rcl
inc
pop
ret
movsl
insl
jge
sub
or
sub
mov
sbb
cmpsb
aas
mov
lret
or
cmp
push
xor
add
inc
xchg
lods
repz
inc
mov
flds
add
dec
popf
inc
fsubrp
stos
ficoml
or
mov
mov
fmuls
test
mov
test
sahf
cmp
imul
stc
hlt
fwait
lods
inc
int
xchg
mov
or
mov
test
popf
push
in
sub
dec
je
cmc
and
imulb
lock
fsubrl
stos
cld
jnp
lret
push
xchg
add
hlt
aas
scas
xchg
mov
mov
mov
int3
decb
pop
sti
fistps
cmc
add
mov
rorb
sbb
lods
stos
xchg
imul
in
lret
xlat
push
sahf
cmpsb
jl
pop
and
into
xchg
adc
hlt
mov
mov
mov
push
lret
fdivl
fistl
mov
sub
lcall
jnp
vmovups
iret
scas
test
enter
mov
iret
lods
sub
ja
cmp
add
es
xor
mov
adc
popa
or
jb
pop
ds
mov
in
mov
je
std
shll
push
aaa
imul
bound
test
sub
jmp
add
pop
aad
lds
and
push
outsb
push
inc
inc
pop
jle
sbb
call
pop
shrl
add
inc
imul
ja
loope
mov
out
cli
repz
enter
popa
add
in
or
movsb
out
add
insb
sub
pop
lahf
cmp
test
leave
sbb
ds
jo
sbb
test
mov
jmp
xchg
mov
fwait
es
adc
mov
adc
add
xchg
xor
and
mov
adc
fldl
adc
std
cmpsb
xor
jl
jl
mov
mov
iret
jp
pop
jl
sarb
and
in
addl
mov
jno
lods
jg
test
inc
cmpsl
cmp
insb
push
sahf
in
adc
adc
xchg
stos
jno
daa
mov
xlat
cmc
mov
xchg
stc
ret
daa
shrl
loope
outsl
imull
iret
data16
add
fcom
xchg
mov
out
movsl
cmp
rolb
ja
sub
fldenv
or
cld
mov
insb
test
popa
cmp
lea
pop
in
das
fsubs
sbb
push
mov
les
xchg
ja
mov
mov
call
push
sub
stc
test
ds
jecxz
cmp
insl
inc
xlat
pop
push
leave
dec
jg
sbb
xchg
fs
ret
pop
push
test
andl
mov
daa
ret
ret
xchg
inc
shlb
call
or
xchg
scas
push
outsl
adc
lods
pop
jb
shl
and
push
cltd
cmp
dec
insb
jo
popf
out
xchg
lcall
jb
push
sub
jl
pop
ret
mov
scas
shr
movsb
cmp
sbb
scas
jo
aaa
stos
adc
jbe
or
push
add
sub
ds
and
xchg
xor
add
or
test
dec
mov
cmp
movsb
sbb
pop
lret
divb
test
or
sub
jae
jb
jg
xlat
add
mov
inc
push
jmp
shrb
push
jge
xchg
inc
mov
in
sbb
test
sbb
inc
movsl
mov
fildl
cmp
loopne
dec
adc
popa
aam
or
xchg
adc
das
movsl
sub
pop
push
imul
test
scas
mov
jle
push
ss
jle
push
and
mov
sbbb
jecxz
jp
inc
xrelease
mov
jg
lahf
jbe
ret
xchg
cmp
pop
into
fstpt
pop
cwtl
mov
cli
jne
jne
mov
shr
stos
dec
sbb
gs
cmp
xchg
outsb
mov
orb
scas
lret
push
and
loope
cwtl
xor
jge
iret
jp
fwait
push
sub
dec
xchg
mov
popa
loopne
inc
push
push
loope
mov
in
pusha
int3
cwtl
call
push
bound
iret
xlat
jle
dec
imul
dec
dec
test
jge
push
sarl
cmp
scas
dec
jno
shlb
cmp
gs
pop
and
and
into
iret
loopne
jb
jmp
dec
pop
mov
pusha
xor
int
cmp
xor
cmp
scas
lea
das
jge
pop
or
mov
inc
xor
movsb
inc
xchg
or
sbb
repnz
xchg
jb
dec
mov
jne
jg
xchg
pop
jmp
data16
lret
xchg
fsubrs
fcompl
ljmp
shll
cmpsb
imul
push
mov
lock
cmpsl
adcl
cmp
inc
push
mov
xor
clc
jo
arpl
subl
pop
xchg
cmp
fmulp
lret
imul
xor
jl
inc
and
aam
mov
lret
jge
mov
xor
das
pop
cmp
sub
dec
xlat
dec
leave
call
scas
movsl
xor
movsl
popa
xchg
add
xchg
test
and
ret
shll
movsb
pop
rorl
mov
gs
mov
xchg
pop
popf
scas
iret
shlb
cmp
out
rorl
aam
dec
rcl
mov
lock
ror
xchg
mov
add
push
enter
dec
jmp
sbb
fnstenv
dec
mov
inc
or
inc
mov
push
sbb
int
shll
pop
pop
notb
mov
daa
ljmp
xchg
cs
ss
push
inc
mov
inc
and
dec
test
aam
hlt
cltd
mov
bound
push
push
pop
adc
addl
push
aad
push
aad
mov
xor
fisubrs
test
push
inc
fwait
jp
movsb
aaa
pop
outsl
arpl
jle
fnstenv
adc
xchg
lahf
sbb
add
dec
dec
push
inc
mov
addb
mov
adcl
xor
dec
shrb
imul
adc
xor
je
imul
iret
sbbb
out
lret
pop
xchg
pop
cwtl
and
pusha
mov
add
js
icebp
mov
inc
cwtl
jecxz
adc
cs
aaa
pop
jns
lds
mov
or
fcompl
sub
fwait
add
test
push
mov
lret
data16
mov
out
cmpsl
sub
mov
imul
mov
in
jg
jge
sbbb
sub
enter
addr16
icebp
leave
int
aam
movsl
into
in
loopne
js
repz
lock
xchg
sbb
je
sbb
icebp
and
adc
lret
es
mov
adc
rcr
xor
dec
repnz
aam
jae
out
cmc
into
enter
iret
mov
fstl
sub
daa
adc
ret
sarb
mov
or
dec
dec
pusha
jbe
push
lods
push
and
ljmp
sbb
mov
and
test
mov
xor
sbb
pop
scas
in
pop
shrl
jo
cmp
or
inc
cwtl
adc
xchg
push
scas
imul
sbb
ret
xor
scas
jmp
or
lds
movsb
dec
data16
mov
cmp
and
mov
and
sbb
fisubrl
dec
lods
cmpsl
mov
jo
or
int
test
in
and
sbb
enter
movsb
imul
repz
lds
repnz
jne
dec
jecxz
jae
repz
push
dec
mov
push
jmp
dec
xorb
shll
pop
std
rol
xor
pop
inc
xchg
lcall
inc
in
out
or
pop
xchg
jbe
adc
cli
pop
mov
add
mov
stos
pop
pop
leave
fisubl
cmp
lea
mov
loopne
sub
sbb
sbb
repnz
loope
negl
jp
adc
inc
mov
fwait
mov
or
pop
cwtl
dec
shll
insl
lods
jae
xor
mov
adc
inc
push
in
push
adc
lock
das
lds
mulb
jg
inc
dec
cmpsl
xchg
cmp
outsb
mov
ret
ss
cmp
imul
std
xchg
arpl
mov
and
push
jae
push
scas
mov
outsb
mov
mov
pop
sbb
or
stc
dec
sbb
mov
aaa
dec
cmpsb
sbb
and
ljmp
popf
and
add
inc
test
adcb
dec
inc
cmp
sti
imul
fwait
adc
in
test
xlat
out
cltd
or
mov
mov
mov
cmc
push
mov
lcall
sbb
lods
stos
push
mov
lock
push
xor
cmp
push
ret
movsb
pop
sbb
fcmovnu
jmp
xor
repnz
push
pushf
adc
addr16
lds
fsubr
push
lret
ja
push
mov
mov
mov
and
lcall
xchg
push
fnstcw
and
nop
mov
jno
es
repnz
repz
clc
add
inc
outsl
sub
test
push
mov
stc
adc
mov
stc
adc
add
scas
inc
pop
push
mov
mov
adcl
xor
xor
jo
jnp
jecxz
fwait
enter
pop
mov
adc
js
rol
adc
cmpsb
lahf
cmpsl
outsl
daa
adc
sub
aad
in
mov
negl
inc
out
ss
jle
cmp
enter
sbb
push
loope
pop
adc
fistps
ror
insb
sub
repnz
sub
mov
mov
jb
repnz
jg
xlat
rcrb
sub
push
xchg
push
xor
iret
mov
sbb
jo
lods
fistl
xchg
adc
xchg
add
mov
dec
popa
mov
mov
sbb
jle
dec
adc
test
test
jns
std
mov
or
jns
adc
xor
jae
stos
pop
lret
sti
xchg
cmp
hlt
mov
add
imul
icebp
fdivrl
xchg
sub
jg
and
mov
repnz
xor
insb
cltd
mov
push
jl
mov
inc
fstl
test
in
test
add
data16
push
sbb
push
lods
mov
test
mov
mov
enter
out
inc
push
add
push
daa
sahf
jns
mov
add
popf
mov
and
sbb
lock
cltd
shl
push
ffreep
pop
or
loopne
aad
mov
fcomps
inc
rcrb
into
sub
sbb
fmuls
scas
mov
aas
lcall
mov
dec
loop
adc
popa
ja
jbe
andb
xchg
pop
jb
nop
cmp
push
gs
mov
es
push
addr16
pop
dec
sub
das
cld
js
stc
push
dec
in
mov
insb
dec
adcl
cmp
sub
pop
jae
xchg
or
push
addr16
roll
cmpsb
mov
repz
jp
jp
mov
jg
repnz
xchg
mov
sbb
daa
dec
cmc
adc
fimull
xor
adc
gs
xchg
xchg
test
jae
call
and
sti
mov
sub
mov
arpl
iret
jmp
sbbb
jecxz
fstpt
test
scas
or
push
mov
jp
xchg
cld
sbbb
mov
fwait
or
lahf
xor
mov
push
sub
clc
mov
jp
sub
fidivrs
sbb
dec
lahf
sbb
add
or
pushf
dec
in
icebp
mov
sbb
mov
shlb
in
shll
adc
loop
sbb
ljmp
add
jb
xchg
mov
mov
shl
pop
rcll
jle
jg
into
pop
cmp
cld
sbbl
mov
in
pop
sbb
nop
out
push
xor
daa
mov
jns
inc
lods
push
cmc
push
call
pop
sbb
pop
cmp
sti
dec
push
xchg
add
push
pop
push
mov
test
jae
adc
fisubs
fucomp
cld
push
scas
and
or
mov
mov
sub
loopne
or
bound
push
imul
js
sub
jne
insb
pushf
xor
mov
mov
sbb
lock
shrb
adc
pop
imul
loope
xchg
jbe
inc
test
cli
xchg
lods
jle
test
int3
mov
jae
mov
adc
popf
aam
sbbb
sbb
or
out
mov
cmp
xchg
cltd
pop
out
insb
jl
dec
fsubrl
jp
push
mov
fmuls
pop
test
negl
lock
fiaddl
adc
ja
scas
xchg
mov
mov
mov
or
call
xchg
adc
pop
fistps
stos
mov
inc
mov
in
icebp
dec
push
dec
dec
fwait
sub
jmp
push
jnp
movsl
xor
outsb
lods
push
daa
mov
pop
xchg
nop
incl
jns
out
outsb
ja
ret
xor
jns
push
ret
xor
out
repnz
jnp
int3
pop
cmp
push
mov
mov
lcall
sub
mov
dec
mov
rcll
aas
fwait
repnz
test
lret
loop
std
cmpsl
mov
fwait
xorb
jl
or
js
xchg
stos
mov
sbb
mov
filds
cmp
dec
cmp
mov
adc
mov
adc
fcmovnbe
pop
mov
adcb
or
push
xor
mov
push
fs
jno
imul
pop
or
mov
and
sbb
cmpsl
insl
add
test
or
push
inc
ror
pop
jbe
inc
fcoml
lahf
negl
stos
jge
xchg
pop
icebp
push
rcll
push
arpl
xchg
sub
sbb
xor
js
repz
inc
cmp
loop
push
movsb
scas
lahf
or
xchg
sbb
insl
shll
jnp
sarb
add
add
xor
lcall
in
cmp
lea
ds
dec
xor
pop
mov
xchg
mov
xor
pushf
cmpb
es
mov
daa
jo
pop
sub
xor
push
sub
dec
ja
in
test
adc
call
jmp
lods
aam
fwait
mov
adc
mov
jmp
push
xlat
outsb
sub
xor
dec
and
shlb
insb
inc
mov
mov
xor
clc
outsl
add
pop
testl
or
test
pop
pop
js
and
scas
mov
arpl
pop
pusha
mulb
outsb
xor
sbbl
xchg
fildl
jo
inc
fwait
cli
jle
cmp
xor
sub
xchg
sub
lods
rclw
mov
test
andl
leave
das
mov
out
inc
dec
adc
dec
and
inc
stc
xchg
pop
cmpsl
inc
fldt
xor
lods
xor
out
push
jmp
pop
out
jmp
xchg
mov
stc
frstor
add
pop
test
nop
nop
mov
jmp
push
mov
ret
enter
add
imul
add
test
or
mov
data16
pop
insb
jp
stos
imul
push
cld
aad
sub
sub
loope
pop
sbbl
jl
jbe
sub
sbb
jbe
xchg
pop
outsb
enter
shll
jo
lahf
in
cltd
ds
cwtl
pusha
or
push
arpl
fistps
mov
iret
shrb
pop
add
mov
hlt
dec
ds
jmp
mov
lds
mov
cmp
test
test
pop
xchg
aam
dec
pop
pop
dec
out
xchg
arpl
or
or
dec
or
sbbl
add
inc
aas
xchg
adc
cmp
or
in
cmpsl
cmp
xlat
aas
inc
and
cmpsl
pop
cmpsl
xchg
push
hlt
mov
dec
out
clc
fwait
pop
jp
cs
repnz
dec
in
idiv
inc
jmp
jle
loope
jl
out
lods
or
jne
stos
loop
stos
cld
push
add
add
push
cmc
imul
pop
dec
pop
scas
jge
dec
xor
dec
das
insl
and
inc
les
pop
mov
imul
lret
bound
out
outsl
fcomps
xor
pop
scas
mov
sbb
aaa
jb
repz
xchg
mov
pop
ret
clc
sbb
sub
mov
and
daa
adc
movsl
stc
shrb
pop
insb
push
mov
fnsave
and
jg
scas
repnz
pop
or
jge
loopne
iret
mov
mov
fmuls
das
loope
dec
cmp
inc
fimull
mov
push
adc
cld
lea
and
popa
sub
push
jbe
or
pop
cmp
xlat
aaa
das
jo
dec
pop
xor
mov
pushl
pop
xorb
sbb
out
imul
cmp
push
aas
push
jl
push
icebp
dec
bound
add
jmp
test
movsb
mov
out
test
lret
push
xchg
aad
fwait
int
arpl
scas
mov
pusha
lcall
inc
addr16
lret
inc
mov
cltd
pusha
adc
rorb
std
xchg
in
fildl
add
sbb
xor
jns
rcll
xor
mov
push
out
lds
pop
sbb
mov
out
out
iret
inc
sub
shlb
rol
mov
jle
push
xchg
push
mov
jb
pop
sub
sti
xchg
imul
insl
add
push
jge
jo
aad
xchg
mov
cmp
jns
stc
mov
jg
xorb
leave
pusha
or
test
data16
je
addr16
int3
pop
testb
push
mov
dec
mov
add
jns
adc
jecxz
sub
mov
scas
test
jge
stc
int3
push
leave
sbb
rorb
hlt
dec
jne
jne
enter
std
dec
and
loopne
pop
sbb
jb
hlt
pop
aaa
mov
lock
out
xor
jns
stc
stos
data16
frstor
pop
dec
movsl
xbegin
or
repz
repnz
xchg
push
fs
mov
mov
sub
jle
jo
cmpsb
xor
pop
mov
adc
out
mov
iret
cmp
sbb
pop
int3
cmp
push
pop
jb
push
push
sub
adc
aam
sti
ds
jo
jmp
mov
stc
subb
ja
lret
add
loop
push
fldcw
js
into
test
pop
call
lret
cmp
add
pushl
xor
inc
loopne
and
mov
nop
jno
push
xchg
adc
testb
movsb
aaa
inc
push
or
lret
insb
or
daa
movsl
sbbb
jbe
push
out
push
dec
lea
add
mov
sbbl
fbstp
ret
jne
and
ljmp
lock
mov
mov
pop
cmp
inc
sbb
xchg
fistpll
xchg
sub
dec
sbb
cld
jl
fs
add
je
add
sub
mov
xor
pop
test
mull
lods
add
ja
sub
cmp
insb
sub
mov
shlb
imul
jg
leave
mov
nop
out
push
lret
xchg
sbb
loopne
xchg
mov
scas
lock
adc
jb
mov
sar
lret
leave
fs
stos
insb
inc
popf
scas
xchg
jmp
xchg
and
mov
jae
cmp
test
fisttpl
add
sub
decb
sbb
pop
push
movsb
jge
fucom
cmp
push
add
jae
mov
mov
repnz
lea
sar
and
and
test
mov
add
lret
add
add
roll
movsl
jle
lcall
pop
mov
mov
test
xchg
call
and
lea
filds
in
mov
in
sbb
push
push
cmpsl
push
push
scas
dec
xchg
movsl
jle
jg
push
xchg
jecxz
fdivp
ficoms
mov
jno
inc
fwait
push
aad
cld
dec
and
js
mov
mov
jle
push
jae
out
test
adc
lret
dec
cmp
or
ss
cmpsl
dec
sub
add
adc
dec
push
and
shrb
mov
fs
mov
sbb
mov
je
out
leave
push
or
push
outsl
jno
test
int3
jmp
mov
sub
rcr
imul
call
and
adc
xchg
cmp
hlt
xchg
adc
nop
mov
test
add
popa
fistpll
fwait
mov
call
repnz
fstps
add
mov
arpl
mov
mov
rclb
push
stos
lahf
cmp
out
xor
test
cli
dec
sub
je
mov
sti
push
ljmp
sub
push
pop
hlt
outsb
ja
mov
mov
pop
mov
jle
rolb
inc
pushf
lea
clc
sti
sbb
push
imul
xor
pop
mov
adc
or
inc
push
jmp
push
push
inc
aad
inc
and
and
sahf
sub
in
xchg
pop
jge
add
cmp
pop
mov
pop
mov
adc
jbe
insb
mov
repz
ret
jmp
iret
and
xor
add
stos
sbb
mov
or
out
jmp
push
pop
jle
dec
or
fcoml
mov
and
xchg
cltd
int3
pop
jns
sbb
stos
push
fdivl
add
sub
inc
xor
xorb
or
push
mov
mov
aam
xor
lret
adc
ret
dec
jbe
icebp
adc
stos
in
xlat
insl
pop
hlt
xchg
pushf
mov
xchg
xor
adc
es
lcall
fistpll
mov
loopne
sub
rolb
mov
clc
out
sub
sbb
mov
pop
repnz
nop
les
sarl
aam
adc
sbb
fsubrs
inc
fistpl
sarl
add
ds
call
inc
imul
jl
loopne
add
lods
or
mov
mov
xor
mov
in
adc
push
or
mov
pop
and
sub
mov
mov
lret
and
scas
sti
out
sub
popa
pop
sub
jmp
out
pop
rcl
outsl
psubsw
ds
xor
call
mov
orl
xchg
pmulhw
sbb
or
cli
out
test
xchg
es
or
cli
dec
jmp
mov
mov
ret
cmc
add
mov
aam
stos
xchg
sub
add
mov
stos
inc
or
add
lods
push
jnp
adc
aaa
add
mov
mov
cmp
or
dec
mov
mov
push
aam
jl
loope
ljmp
push
cld
stos
push
sahf
add
jae
fildl
jo
mov
aad
bound
xchg
dec
in
rclb
lods
mov
fnsave
cmpsl
repnz
sub
pushf
out
into
pop
mov
sbb
call
addr16
outsl
aaa
jp
mov
inc
pop
sbb
lock
int3
std
or
daa
xchg
sub
mov
or
ja
mov
xor
cmp
repnz
stc
pop
xor
adc
lret
bound
cmp
outsl
jns
xchg
shll
in
push
call
data16
sbb
cwtl
addl
into
ficoms
push
loope
jmp
jae
ficoms
iret
sub
push
enter
sub
repz
xor
mov
rolb
cwtl
add
push
add
and
cmpsb
push
test
les
sbb
inc
pop
aaa
fsts
sbb
dec
jno
clc
shrl
lret
pop
in
mov
in
jae
cmc
cmp
mov
xchg
push
dec
shlb
or
jnp
mov
cmp
jecxz
lods
xchg
dec
and
fisttpl
add
jae
lea
test
mov
push
jge
mov
movsb
inc
mov
sti
out
fistl
xor
mov
faddp
cld
xlat
testb
jp
cmp
jbe
cld
movsl
mov
mov
push
mov
push
push
cmp
loope
push
es
loope
mul
add
xchg
adc
test
fmul
cmpsb
pop
loop
add
mov
jp
mov
jmp
jo
lret
outsb
icebp
jmp
inc
jns
in
or
test
lahf
cs
jl
sbb
fwait
xor
imulb
cli
mov
mov
in
inc
sti
xchg
cs
pop
dec
fistpll
add
sti
push
jns
and
jmp
rcrb
xchg
ret
lret
inc
dec
dec
sub
lahf
ret
add
and
adc
inc
pop
out
push
daa
mov
lahf
add
jno
pop
xchg
jns
pop
fcomps
fldl
repnz
and
jno
stos
dec
mov
jo
in
mov
and
ljmp
push
int3
jne
addr16
fwait
push
call
mov
or
cmp
add
outsl
or
mov
movsl
in
out
in
or
iret
popw
stos
mov
push
scas
and
stos
lods
stos
sub
fmul
xor
stc
inc
fisubrs
in
push
lret
ret
out
arpl
cmp
mov
inc
insb
xchg
sub
mov
xchg
add
dec
cmp
jg
cmp
cmp
decl
mov
shl
pushf
int
test
int3
or
cmpl
lods
rolb
popa
xor
in
ror
das
in
ljmp
enter
pusha
pop
bound
mov
outsb
push
nop
shl
jecxz
icebp
adc
jmp
pop
addr16
dec
jne
cmp
and
dec
fmull
cmp
out
les
xchg
cmp
push
in
mov
cmp
in
aas
mov
fidivrs
push
bound
aam
inc
imul
scas
stos
mov
aad
call
aam
shrb
or
or
imul
div
xchg
push
add
or
mov
xchg
sub
xor
es
inc
xchg
fcmovu
xchg
nop
ds
jo
stos
mov
adc
adc
mov
sarl
pop
rorb
pop
sbb
mov
fbld
jge
jae
cmpsb
lcall
ret
jge
sahf
push
jmp
mov
push
in
xor
push
fnsave
out
out
jne
pop
sbb
and
test
ret
cmp
sub
jg
les
xor
fdivs
xlat
rolb
lods
test
or
sub
sbb
js,pt
aaa
mov
shlb
sub
mov
mov
stos
fimuls
xor
mov
je
ljmp
test
lahf
cmp
aaa
mov
jge
pop
into
add
add
les
pop
daa
mov
mov
mov
cltd
sbb
dec
dec
imulb
js
jnp
les
popf
ffreep
pop
dec
and
mov
jno
pop
mov
push
push
mov
fstl
cld
js
sub
mov
fldenv
adc
fldenv
in
cmpsl
pop
divb
sarl
add
sbb
fwait
cmc
mov
stc
cwtl
mov
int3
orb
jns
push
push
pop
adc
std
add
mov
xchg
test
push
adc
mov
xor
dec
cltd
rolb
out
cs
jp
fidivl
adc
clc
sahf
xor
inc
addr16
mov
nop
in
test
cli
pop
mov
sbb
sbb
add
insb
lea
test
mov
adc
iret
jecxz
cltd
xorl
pop
adc
cmp
adc
imul
inc
mov
iret
xor
mov
into
es
add
push
lcall
in
scas
push
mov
sbb
pop
repnz
test
loop
mov
iret
hlt
push
add
add
jo
stc
adc
mov
lea
ret
xor
out
jne
push
lahf
in
cltd
cmp
xchg
sub
dec
scas
loopne
ficompl
imul
jb
push
mov
push
mov
test
sahf
notl
mov
inc
je
aas
adcb
ja
mov
sahf
mov
pop
sub
jne
ja
add
test
mov
call
sbb
jo
in
inc
cltd
push
push
mov
aaa
add
dec
or
and
sbb
ret
sub
sub
pop
xchg
lcall
gs
popa
sbb
xlat
jb
sbbl
rorl
and
cmp
add
push
pop
fwait
cmp
xchg
rcrl
aam
fadds
adc
pop
or
xorl
sub
jae
dec
cld
or
dec
out
cli
repnz
fcomps
pop
bnd
paddsw
popl
sbb
jmp
leave
xor
push
ss
leave
out
push
mov
lds
mov
adc
aam
adc
jae
adc
and
das
sub
iret
fildl
ret
outsl
add
rclb
or
inc
test
mov
xor
sbbl
xchg
ficomps
xchg
cmp
xchg
push
mov
or
dec
mov
push
sbb
movl
and
testl
sub
nop
push
cmpb
out
sbb
mov
in
mov
cmc
pop
push
xchg
dec
mov
xorb
mov
orb
mov
xchg
mov
pop
pushf
push
xchg
sbb
stos
fdivs
adc
fwait
lahf
test
adc
mov
lock
sbb
and
js
out
jae
xchg
arpl
iret
cwtl
cli
xor
mov
dec
shr
push
jl
xchg
enter
ret
iret
pop
daa
outsl
push
pop
js
lea
pop
mov
cwtl
sbb
inc
in
aas
out
cmc
leave
mov
out
jmp
and
jmp
pop
mov
adc
sub
xchg
mov
icebp
aas
dec
xor
push
adc
ss
add
adc
cmc
and
jl
iret
lods
in
add
std
xor
xchg
andl
jg
lods
add
mov
or
ficoml
shlb
mov
cmp
insb
insb
mov
mov
out
inc
test
in
xchg
xlat
repz
in
imul
pop
movsb
ja
or
lds
cld
shll
fwait
es
addr16
je
ss
mov
and
ss
mov
inc
adc
adc
or
pop
sbb
mov
and
stc
xchg
je
rcll
jb
or
sub
stos
cld
cmp
mov
ljmp
cmp
push
aad
not
fwait
sub
sub
outsb
pop
sbb
cmc
xchg
xor
les
sbb
cmp
loop
sarl
or
jno
push
dec
and
out
add
pop
sbb
inc
mov
ds
inc
jmp
repnz
mov
adc
mov
mov
or
daa
and
xchg
lcall
pop
test
lret
and
stos
xor
sti
es
notb
push
jmp
inc
pop
jne
loopne
inc
xchg
cmpsb
push
loop
jbe
and
decb
dec
inc
pop
test
push
ror
std
cmp
cs
fmuls
jp
lea
ret
xor
add
imul
or
or
pop
xchg
loop
les
ret
daa
xor
in
mov
lock
adc
js
xor
dec
push
mov
fdivrs
test
insl
cli
jae
sub
ret
fbld
aam
mov
jecxz
test
push
dec
pop
bound
loop
xchg
lahf
not
adc
inc
jbe
divl
inc
cwtl
addr16
fisubrs
movl
rorb
or
loop
lret
cwtl
adc
lahf
mov
cltd
gs
jp
les
pop
xor
pop
scas
inc
xchg
aad
xchg
sub
lret
jg
pushl
xadd
mov
hlt
lahf
pop
sbb
leave
jbe
aas
mov
lret
pop
inc
push
adc
repnz
popa
add
pop
or
sbb
xchg
cltd
cld
and
dec
push
cltd
xor
and
shll
dec
loope
xchg
std
repnz
cmpb
in
nop
pop
mov
sub
out
inc
push
fadds
out
adc
push
jno
es
pop
icebp
clc
stos
and
sub
js
add
pushf
or
ja
lret
inc
lret
cmp
into
pop
test
pop
cwtl
pop
cmp
pushf
xchg
icebp
lods
inc
daa
js
aaa
scas
push
inc
mov
adc
int3
mov
jmp
push
mov
inc
push
jle
arpl
mov
dec
out
shrl
test
mov
mov
test
stos
jmp
in
xchg
cltd
rolb
ljmp
adc
push
sti
inc
mov
sub
imul
or
xchg
inc
lret
mov
les
xor
add
test
imul
pop
inc
jne
repnz
jle
lcall
inc
fmull
out
mov
bound
pop
mov
ljmp
inc
lods
dec
cwtl
adc
in
jmp
nopl
mov
cmp
fistl
inc
shlb
cld
push
fiaddl
push
mov
lar
icebp
push
jae
mov
push
insl
div
xchg
aaa
shr
sub
mov
sbb
add
fwait
jnp
or
push
lds
ret
arpl
shlb
push
in
imul
rolb
in
inc
das
repnz
fbld
adc
adc
pop
fldcw
jns
mov
adc
mov
sub
in
and
xchg
xchg
jle
movsl
nop
out
adc
sub
sbb
cmc
cmp
ds
outsl
mov
idivb
dec
test
inc
xchg
rcrl
out
testl
insb
cmp
push
call
pusha
xlat
in
imul
insl
loopne
aas
cmp
push
int
sarl
fildl
cmp
push
jne
mov
mov
pop
sbb
test
orb
jnp
leave
pusha
mov
fs
xchg
in
pop
fidivs
adcl
cs
shrl
pop
into
pop
imul
aas
adc
adc
imul
out
nop
sub
sbb
mov
mov
sbb
std
xor
into
das
mov
dec
call
dec
mov
cmp
test
idivb
mov
lret
sub
in
mov
adc
outsl
daa
push
add
inc
jne
xor
ljmp
jmp
in
pop
rcl
push
icebp
mov
popa
cmc
js
pop
cld
ficoms
pop
dec
lret
test
push
cmp
sbb
cmp
mov
xchg
jae
dec
mov
and
mov
mov
adc
xchg
jo
icebp
mov
xchg
dec
push
imul
jo
sbb
aad
outsl
in
add
cmp
icebp
mov
adc
inc
int
sub
inc
sahf
fisubrs
pushf
aaa
fdivrl
pop
stc
push
call
es
and
je
lds
xorb
pop
ja
jb
clc
cmp
inc
orl
xor
js
dec
sub
jp
repnz
pop
mov
shll
imul
cs
or
fiadds
adc
into
mov
push
xlat
cmp
mov
or
shl
fdiv
adc
cmp
cmpsb
addr16
addr16
fs
xchg
add
and
pop
mov
mov
jnp
xor
je
aaa
mov
pop
or
push
mov
push
mov
pop
xlat
and
lock
js
push
sub
mov
push
daa
xchg
imul
movups
cmp
mov
sub
lret
xor
and
ljmp
mov
sub
pop
mov
outsl
mov
lods
jge
add
mov
sub
dec
sbb
out
in
stc
push
lret
shll
inc
loope
fisubl
shl
sti
inc
loopne
sbb
jge
aaa
into
shr
dec
sbb
push
mov
sub
popf
lahf
mov
daa
cmpsl
loop
dec
out
sbb
sbb
and
pushf
in
dec
mov
pop
sbb
pop
repnz
out
sarl
xor
cmpsl
and
jo
pop
mov
cmpsl
push
push
test
mov
bound
andb
and
movsb
clc
out
inc
sbb
out
xchg
clc
enter
sbb
xor
jmp
bound
ds
pop
pop
pop
mov
mov
xchg
iret
pop
add
js
and
data16
loopne
jbe
cwtl
cmpsl
lcall
pop
movsb
iret
mov
sub
sbbl
add
adc
cltd
or
mov
or
xchg
scas
fcmovne
and
inc
pop
add
shrb
mov
lock
outsb
jecxz
insl
jbe
push
dec
mov
cli
adc
subl
test
mov
mov
sub
bound
orb
pop
ds
cmpsb
push
push
es
pop
mov
test
push
outsb
mov
push
iret
and
or
out
push
xlat
imul
aam
jmp
xchg
test
xchg
xor
xor
test
sbb
mov
fbstp
std
mov
ret
mov
imul
imul
lds
mov
arpl
dec
inc
jecxz
imul
pushf
sub
popa
mov
inc
fadds
sub
jne
and
push
adc
std
xchg
cmp
cmp
pop
sbb
das
mov
push
out
test
call
into
mov
sub
cmp
enter
out
add
push
and
mov
popl
lret
xchg
mov
ss
rolb
bound
sbb
inc
fsubl
arpl
cwtl
inc
aad
xrelease
adc
inc
and
cmp
fsubl
sbb
or
loope
mov
outsb
andb
cs
lret
out
test
cwtl
push
lods
mov
and
sbb
lret
cmp
cmp
stos
sub
fcomps
pop
jae
mov
ds
cmp
hlt
sahf
cli
or
or
insl
pop
arpl
test
cltd
cmp
add
cs
jb
mov
sub
xchg
jo
cmp
pop
mov
pop
xlat
sbb
in
xor
push
mov
fdivr
roll
mov
pop
adc
or
mov
cmp
in
pushf
rcll
rorb
adc
dec
dec
mov
cmp
pop
push
in
rcrb
adc
lock
mull
daa
ja
or
and
jge
fdivl
loopne
fnclex
movsl
lcall
or
push
lods
lock
adc
jecxz
and
mov
js
cli
jp
lods
adc
rcr
jmp
jg
aad
fnsave
mov
scas
leave
push
fsubrs
jmp
mov
adc
lcall
lcall
aad
movsl
push
sub
sbbl
out
pop
xchg
ljmp
sub
cwtl
push
loope
scas
jle
add
mov
addr16
push
push
push
gs
rclb
cwtl
and
mov
inc
xlat
push
imul
pop
ljmp
pusha
es
push
xlat
popf
add
rol
fmulp
and
pop
jns
push
add
in
pop
sti
cmp
rorl
push
pop
stc
ret
dec
pop
pop
ds
mov
add
lahf
sub
add
inc
cli
push
mov
insb
es
cld
popl
inc
pusha
jmp
mov
inc
push
aad
cmc
in
pop
xchg
push
hlt
ffreep
mov
imul
leave
rclb
inc
mov
insl
mov
lahf
in
adc
fidivrs
movsb
mov
fsubrl
inc
add
es
mov
jno
sub
mov
push
imul
and
jb
ret
orb
adc
movaps
fidivrs
xchg
cli
out
sti
cmpsl
ds
iret
lds
jbe
loop
scas
add
fldenv
sub
and
jp
sahf
and
das
fisubrl
dec
test
jp
add
lods
mov
aas
or
pop
jmp
push
fwait
js
mov
or
xchg
mov
leave
loope
fbld
mov
inc
mov
sbb
push
and
pop
pop
lret
jne
push
out
aam
ret
cmc
jne
sub
in
fnstcw
jp
icebp
mov
repnz
jecxz
pop
and
and
sub
sub
pushf
sbb
mov
scas
and
inc
scas
sbbl
sub
ljmp
ljmp
mov
test
das
add
inc
mov
sbb
scas
fsubrl
pop
push
add
aas
inc
add
jb
xchg
xor
jbe
push
cmp
lahf
xchg
cmp
fs
push
test
xor
sahf
cmp
pop
inc
fs
hlt
push
jbe
in
mov
dec
dec
xor
fwait
jno
shll
mov
rorb
push
xchg
iret
push
cmc
or
xor
xchg
mov
lock
xor
outsb
jns
add
int
sarb
imul
arpl
stos
outsl
jnp
loop
sbb
add
xchg
mov
je
je
cmc
and
dec
aad
jp
shll
hlt
add
aad
jmp
les
in
add
or
mov
mov
sbb
stc
clc
or
push
jo
adc
adc
bound
and
sarb
dec
leave
mov
dec
pop
loopne
lret
mov
inc
push
xor
bound
sub
sbb
mov
jns
pop
lahf
xchg
add
jns
mov
cs
mov
sub
mov
hlt
test
cmp
movsb
xor
adc
scas
aas
shl
mov
call
adc
pop
push
adc
arpl
jecxz
add
push
xchg
or
mov
arpl
xchg
aam
incl
mov
inc
clc
stc
xchg
lds
push
push
push
rcrl
pusha
leave
repz
out
roll
fistl
orl
movsl
cmp
add
in
xchg
add
pushf
idivb
je
leave
cmp
pop
in
xor
mov
jbe
shlb
push
pop
mov
fdivrl
push
lcall
xor
fsts
fs
xchg
dec
or
jl
inc
add
mov
or
mov
add
jbe
inc
fxtract
push
test
clc
adc
das
inc
sbb
sub
sbb
movsb
mov
add
lret
rorl
out
jle
cmp
fldt
pushf
jae
pop
xchg
ja
leave
call
or
es
pop
out
jne
bound
sbb
js
or
sarl
xor
rol
push
push
and
sahf
mov
je
sub
cs
inc
xlat
fistps
sbb
in
test
mov
xchg
sub
sub
jbe
dec
dec
aad
dec
scas
inc
fwait
in
xchg
pop
out
test
notb
mov
jmp
fisubrl
push
cmpsb
dec
cmc
or
xor
enter
or
fistl
call
inc
popf
xor
test
xchg
pop
out
js
jns
dec
cmp
jnp
add
mov
inc
xor
enter
xorl
clc
cwtl
cmp
dec
xor
int
fnsave
dec
dec
pop
xor
cmp
movsb
sbb
dec
lds
sub
mov
cmc
push
popf
loop
jb
std
aas
xlat
loop
push
clc
test
scas
iret
testl
xchg
loop
fdivrs
mov
pop
mov
lret
sub
scas
inc
out
idiv
xchg
mov
into
push
imull
aaa
jge
outsb
mov
fidivl
xchg
orl
lea
popa
into
inc
sti
outsb
adc
jb
xlat
sub
neg
fs
inc
mov
pop
cltd
push
mov
or
dec
das
in
mov
mov
mov
and
adcb
int3
outsb
xchg
popf
stos
icebp
push
fwait
xor
xor
and
jg
divl
mov
lcall
lcall
mov
jle
and
test
push
lds
sar
mov
sub
xor
xchg
xchg
jg
lret
push
sub
mov
mov
jmp
stos
push
push
imul
scas
push
pop
push
inc
dec
popa
mov
cmpsb
les
or
imul
pop
out
mov
cmp
out
xchg
xor
dec
sbb
stos
xor
popf
or
decb
pop
lret
jecxz
pusha
adc
int3
rclb
adc
add
inc
push
aad
push
pop
in
test
adc
mov
mov
je
and
add
test
iret
mov
jge
push
leave
insb
mov
or
mov
mov
fimuls
loope
popa
clc
jb
inc
pop
cmp
add
mov
cwtl
gs
lahf
enter
loop
jg
adc
scas
fs
movsl
in
adc
popa
mov
gs
mov
xor
or
int3
shl
sbb
stc
cmpsb
cmp
lret
inc
cmp
mov
jns
mov
sbbb
jp
xchg
ret
jae
sbb
mov
mov
dec
pop
int3
jmp
push
xchg
or
clc
sahf
push
push
cmc
dec
inc
xor
sarl
sbb
mov
lds
mov
pop
movsl
push
and
xor
dec
or
cmpl
loop
add
xchg
bound
or
xchg
insb
add
pop
fidivs
faddl
jmp
inc
sub
push
popf
fcompl
jl
imul
cmc
mov
pop
adc
repnz
dec
sbb
cmp
cvtpi2ps
inc
testl
adc
fwait
dec
outsl
loopne
inc
lods
and
int3
xor
xchg
test
jmp
sbb
xchg
pop
sub
dec
insl
inc
daa
repz
loopne
mov
jae
ljmp
jl
xlat
mov
sub
sbb
test
lods
jo
push
ret
mov
in
outsb
and
aas
cmp
cmp
shlb
push
rorb
or
add
and
scas
sub
mov
rcll
pusha
push
or
mov
mov
fs
xchg
andb
stos
pop
pop
icebp
jl
enter
lock
cmp
pop
movb
test
aad
cmp
sbb
or
je
push
pop
pop
mov
xor
cmp
call
stc
je
test
hlt
mov
sbb
fstl
movsl
mov
mov
nop
test
cmp
out
ja
test
push
adc
mov
movsb
inc
and
enter
push
mov
jge
push
das
fwait
enter
testl
mov
data16
mov
leave
and
call
sub
jne
dec
out
fisubrl
sahf
xor
inc
mov
push
test
push
mov
rcrl
adcb
out
and
imul
clc
adc
addr16
add
xor
int3
xor
xor
aas
push
fs
inc
pop
shr
mov
sahf
mov
xchg
ds
sub
mov
into
sub
xchg
stos
gs
xor
iret
call
adc
inc
inc
ds
out
push
mov
cwtl
ret
pusha
pop
dec
mov
jl
hlt
iret
shrb
cmp
push
popa
lods
pop
adc
push
pop
mov
fsubl
add
int3
lret
adc
mov
adc
mov
adc
sub
call
xor
aaa
mov
adc
jno
pop
xor
into
inc
add
jg
cs
inc
out
mov
pusha
or
adc
addr16
push
lret
fcomps
mov
xor
mov
adc
cmp
cmpsb
insl
adc
push
sub
jo
xchg
dec
jbe
mov
sbb
sub
mov
fxam
out
inc
push
ficomps
xor
les
adc
sarl
mov
push
mov
mov
cmpb
in
ret
fbld
xor
out
cwtl
out
fwait
sbb
or
sbb
push
mov
stos
push
dec
jg
mov
fstpl
daa
outsl
test
ljmp
jns
dec
mov
add
sbb
jne
das
xchg
push
test
push
jo
xor
xchg
lods
aaa
pop
imulb
mov
movsb
leave
stc
push
jbe
add
enter
inc
inc
outsl
mov
dec
push
lock
jbe
add
nop
aaa
pusha
ret
imul
mov
sti
adcl
cmp
pop
insb
xorb
lds
jns
jmp
add
or
cmpsl
das
dec
dec
in
in
stos
inc
outsl
mov
add
xchg
enter
xlat
mov
xchg
rclb
int
movsb
inc
bound
jle
dec
push
movsl
sub
or
in
cmp
movd
sahf
sub
sbb
inc
clc
ror
pop
mov
test
sbb
inc
add
iret
int
popa
sbbl
jb
test
lret
mov
mov
and
into
cmp
mov
cltd
lea
nop
push
pusha
das
xchg
cmp
and
dec
in
jg
mov
test
outsb
sub
and
ljmp
xor
repz
fstl
xor
fstl
push
out
jmp
outsb
sbb
sahf
and
xor
sbb
add
jno
dec
loopne
xchg
ja
out
hlt
mov
lea
das
sub
xchg
and
outsl
push
incl
cmp
xorb
aam
pop
scas
jb
fisubs
mov
xchg
adc
fidivs
jmp
jecxz
mov
push
cs
inc
fcoms
mov
push
or
cli
mov
mov
addb
in
test
push
loop
mov
cmc
sbb
gs
icebp
push
fsubr
push
pushf
adcl
push
jecxz
frstor
mov
xor
ss
pusha
dec
sbb
and
gs
orl
inc
test
out
rcl
xor
cmp
lods
mov
dec
xor
and
inc
xor
add
xchg
test
mov
inc
push
or
jmp
mov
lcall
adc
mov
ret
add
repnz
loopne
xor
lea
movsb
sysexit
test
sahf
dec
frstor
jns
aad
or
push
cmp
xor
testb
in
inc
aas
pushf
fwait
int
push
push
jbe
movb
xchg
mov
cmp
push
jmp
fdivp
insl
pushf
gs
xchg
mov
in
fimull
stos
inc
out
inc
push
fdivs
adc
movsl
inc
sbb
sub
and
jo
sbb
cwtl
xchg
mov
mov
mov
test
scas
sahf
pop
dec
lahf
std
jge
or
ret
fs
adc
xor
jns
cmp
hlt
xchg
insb
inc
aas
lahf
inc
xor
jne
pop
inc
test
enter
mov
and
mov
mov
popa
jnp
and
imul
in
add
sbb
pop
dec
outsb
inc
sbb
test
push
negb
mov
and
dec
cmp
push
adc
dec
stc
mov
push
mull
ja
out
negl
and
std
lods
das
mov
jge
sbbl
xor
shlb
loope
sub
addb
lods
pop
insb
inc
in
movsl
inc
arpl
out
push
xor
lods
test
and
test
shrl
and
outsb
inc
or
and
adc
xchg
mov
jno
movsl
or
sbb
test
lods
or
sbbb
or
hlt
dec
fldenv
cmpb
adc
mov
adcl
loope
sbb
jb
test
lret
fwait
and
jmp
cmpsl
das
inc
adcl
mov
outsb
xor
jbe
rol
inc
filds
insb
cmp
xor
lods
xchg
inc
jp
scas
sub
mov
sub
cmp
mov
push
pop
pop
jno
inc
and
sbb
xchg
jp
fidivl
lock
mov
int3
mov
push
xor
mov
mov
xor
mov
cmpsl
lock
lods
jo
lea
sub
das
xor
sbb
jns
xchg
sub
cmp
leave
xchg
dec
rcrl
cmp
stc
test
lods
loopne
add
movb
fistpll
es
xor
fsubr
mov
loopne
and
out
shl
in
jbe
das
push
xor
push
dec
pop
jne
inc
mov
jl
or
lea
jmp
add
ds
xchg
inc
popf
test
icebp
insl
inc
movsb
and
mov
pop
mov
stos
mov
or
mov
nop
mov
clc
mov
mov
dec
clc
pop
mov
push
cmpl
out
cmpsb
push
jmp
jmp
filds
lret
pop
mov
pop
push
in
aam
and
jecxz
inc
fdivs
hlt
movsb
out
orb
stos
pop
outsl
ljmp
les
mov
pop
or
test
inc
sub
orb
and
and
imul
push
insl
xor
cmpsl
test
cwtl
jae
adc
mov
fwait
jbe
mov
fxch
mov
xchg
add
insb
fbld
sbb
or
jmp
pop
push
cmpsb
mov
in
xlat
jbe
nop
loope
dec
mov
aaa
stc
in
arpl
scas
inc
pop
cld
cmpsb
push
out
dec
in
add
or
imul
test
pop
add
cmp
push
jo
pop
mov
jae
inc
sub
fildll
mov
into
xchg
imul
add
sub
lock
mov
jne
ljmp
adc
add
mov
cmp
mov
inc
xchg
mov
test
test
iret
data16
repz
cmp
mov
fimull
lock
bnd
xchg
mov
sbb
sbb
cltd
pushf
movsl
lea
bound
sti
stos
adc
mov
cmp
xchg
adc
lcall
sub
ja
or
pop
insl
sbb
shl
out
dec
fcompl
xor
mov
xchg
cmpsb
cmpsl
mov
mov
lahf
mov
mov
xchg
dec
stc
mov
movb
shl
mov
icebp
movsb
cmp
ja
jo
cwtl
aad
cltd
clc
push
cs
cmp
in
mov
dec
mov
mov
clc
push
aad
add
neg
in
push
mov
dec
dec
int
mov
insl
in
mov
pop
cmc
pop
ret
push
xchg
mov
dec
dec
popa
iret
pop
hlt
ja
inc
pusha
out
mov
aad
pop
mov
lds
sub
ja
adc
xchg
shl
es
ss
xor
rorb
add
into
fs
lods
dec
test
adc
sbbl
jmp
stc
das
xchg
xor
xchg
repz
mov
lret
pop
push
lds
mov
xchg
sub
in
or
mov
pop
xor
mov
mov
fmul
and
sub
mov
fs
add
fstpl
gs
mov
xchg
loop
movups
mov
ja
ret
or
cmc
and
jmp
and
mov
pop
xor
or
sub
daa
in
sahf
test
pop
ja
adc
scas
and
data16
jmp
test
imul
outsl
out
popa
fstpt
sub
jmp
push
inc
and
jne
sbbb
cmp
cmp
test
push
je
inc
xor
imul
mov
fdivl
mov
scas
and
loope
push
jae
lods
jecxz
jbe
adc
test
lret
dec
dec
fistps
mov
lret
bound
cmp
mov
pop
cmp
xchg
data16
xchg
mov
adc
jno
pop
xchg
sbb
lret
pop
sahf
insb
lods
addb
pop
in
js
or
mov
add
add
mov
fsubrs
lods
adc
jbe
lods
mov
xlat
xor
dec
es
sti
es
or
in
loope
ror
xor
lds
adc
xchg
imul
dec
pusha
imul
jnp
movsb
dec
pop
pop
orb
scas
aaa
pusha
cltd
jnp
xor
popf
add
sub
out
int3
push
fdivr
popf
pop
int
inc
jns
les
and
fimuls
cmp
lock
out
and
ret
inc
sti
inc
test
sbb
mov
add
cwtl
adc
fisttpll
mov
stos
jne
push
nop
pusha
inc
popf
cmc
mov
sti
or
adc
push
test
pop
xor
es
hlt
test
nop
int3
pushf
cmpsl
xchg
shl
xchg
sub
xor
and
mov
lods
jp
fs
mov
loopne
das
xchg
add
add
fisubs
enter
fnstcw
nop
punpcklbw
int3
scas
lds
sub
in
xchg
and
sub
xor
addb
jg
pop
sahf
fs
lds
sahf
dec
je
mov
rorl
dec
mov
cmp
outsb
aad
outsl
xlat
mov
cmc
mov
adc
pop
mov
fsts
inc
xor
stos
mov
mov
int
cmp
mov
sbb
inc
jmp
shrl
push
test
mov
xchg
pop
lahf
jecxz
pop
xor
push
movsl
std
lahf
mov
imul
cli
popf
data16
xor
mov
or
cwtl
inc
pop
mov
rcrl
mov
sbb
rcr
rep
jnp
filds
cmp
decb
aaa
xchg
push
outsb
inc
inc
jno
push
xchg
mov
dec
popa
inc
orb
and
lret
insl
stos
add
or
or
and
adc
les
das
sub
dec
xchg
push
aaa
outsb
jne
repnz
push
add
sub
mov
sub
rcrb
pusha
dec
cmp
loope
imul
or
dec
ja
or
mov
push
inc
xchg
addr16
mov
subb
xor
popa
push
dec
in
ds
xchg
mov
popf
lock
lods
movsl
adc
cli
dec
ret
cmp
pop
ljmp
mull
lds
jmp
fiaddl
and
pop
decl
aad
add
loopne
stc
pop
in
lods
sub
or
dec
pop
in
push
jge
sbb
inc
cmpsb
cld
dec
in
enter
or
add
inc
enter
cmp
lret
into
je
loopne
out
adc
jnp
fnsave
fxch
jns
sti
fwait
fs
aaa
or
xor
mov
jl
inc
fsubrl
test
je
stos
adc
xchg
sbb
add
clc
arpl
nop
fistl
dec
ss
loopew
pop
rdtsc
orb
mov
or
xchg
dec
lods
sub
push
stos
int3
test
xor
outsl
in
movsb
xor
lret
test
int3
sub
push
out
push
shrl
movsl
lods
adc
out
scas
mov
pop
sbb
lods
das
inc
cmp
lods
sub
pop
aaa
jae
jns
into
xor
mov
cmpsb
xchg
cmp
in
add
or
jbe
or
cmpsb
movsb
pop
push
inc
dec
add
jecxz
in
push
xlat
pop
loope
adc
pushf
pop
int
mov
inc
mov
sub
stos
jl
adc
les
mov
or
cmp
shrl
dec
stc
nop
jle
mov
addr16
push
mov
push
inc
push
cli
rcrb
leave
mov
inc
xlat
sbb
lea
and
sub
adc
test
outsl
cmp
loope
in
sub
jecxz
mov
xor
xchg
jbe
cmp
fwait
cmp
test
daa
aaa
ficompl
adc
mov
mov
mov
xor
xchg
icebp
imul
ja
sub
in
mov
subb
push
test
cwtl
mov
and
cld
jecxz
cmp
dec
adc
dec
cmp
stc
movsb
cmp
adc
nop
sub
push
ljmp
jb
push
out
jb
out
das
insl
inc
mov
pop
cltd
jo
or
mov
enter
in
sub
pop
adc
loop
in
cli
popf
xor
xor
mov
test
lock
add
add
pop
mov
cwtl
cmp
sbb
enter
xchg
into
int3
test
jmp
mov
jne
xchg
xlat
adc
lds
scas
fs
inc
pop
test
insl
pop
sbb
push
popa
rcl
fildl
ret
shrl
inc
in
loopne
loopne
das
inc
mov
pcmpgtw
scas
into
push
ljmp
adc
add
scas
jle
loope
aam
push
in
shrb
movsl
int
shll
ljmp
scas
andl
lea
pushf
xor
lods
mov
outsl
adc
mov
add
xor
out
dec
jle
lea
outsl
mull
mov
lcall
sbb
inc
sahf
test
xchg
sub
xchg
xor
push
pushf
testb
clc
pop
push
dec
and
cmp
stos
mov
xchg
mov
mov
fmuls
test
js
lcall
push
and
jecxz
andl
out
xor
xchg
inc
rcrb
jge
cltd
in
mov
ret
jmp
lds
xchg
or
out
xor
and
test
sub
mov
cld
jle
insb
daa
ror
push
test
sbb
pop
insl
mov
mov
inc
sti
xor
imul
lret
mov
mov
jmp
imul
mov
add
cs
and
imul
fs
sub
fldenv
pop
adc
jp
test
in
int
dec
popa
add
movsl
sbb
pop
cmp
mov
mov
pop
hlt
pop
shlb
ret
cmc
inc
ret
movb
imul
fwait
jo
leave
es
inc
fldenv
movd
jo
jno
iret
inc
dec
jb,pn
dec
aaa
cmp
lods
je
aaa
xlat
fcoms
jle
and
test
jge
jne
repnz
dec
push
mov
sbb
mov
xchg
mov
das
jns
repnz
push
das
into
movsl
and
mov
jp
les
jae
jae
lcall
cmp
out
and
push
loop
dec
loopne
jbe
bound
xchg
sbb
inc
pop
pop
xchg
cmp
dec
out
bnd
in
mov
fidivrl
sub
std
mov
mov
mov
xchg
jecxz
fs
mov
es
ss
and
popa
lods
ds
mov
mov
pop
xor
inc
dec
ss
sub
pop
ljmp
addr16
xchg
push
push
scas
cmp
aad
inc
aad
test
cmp
mov
fs
xchg
aad
inc
push
cmp
inc
inc
cmp
mov
xchg
or
enter
mov
bound
sub
hlt
ss
mov
mov
sbb
out
xchg
push
insl
cmpsl
ds
addr16
inc
repz
push
out
outsl
data16
iret
es
push
sti
mov
sahf
cmp
adc
lods
sbb
pop
cmp
adc
dec
mov
xorl
daa
lret
or
mov
inc
push
push
ja
clc
pushf
mov
mov
lret
fdivs
pop
inc
gs
icebp
std
dec
stos
stos
mov
mov
out
xor
repz
sahf
cmp
pop
mov
sub
mov
insb
xor
cmp
shll
test
enter
popa
sub
mov
movb
pop
add
pop
cmp
out
xor
arpl
rcr
adc
andl
out
jle
xchg
call
fistpl
adc
loop
jg
cmp
sub
add
das
nop
jb
cmp
out
in
sbb
cwtl
and
das
lcall
sbb
dec
dec
jg
xchg
nop
enter
mov
arpl
mov
and
push
fsubrs
and
xchg
xchg
movsb
jle
fsubs
push
mov
clc
inc
inc
pop
and
lret
icebp
pusha
push
and
pop
or
dec
jl
sub
iret
mov
ds
call
sub
stc
xor
xchg
sbb
leave
xor
sahf
clc
mov
sbb
cwtl
inc
ficoml
aas
lds
lds
ljmp
lds
lds
cmp
stos
mov
scas
call
add
adcl
jbe
inc
aas
jno
out
push
xchg
mov
call
mov
test
push
loop
and
js
cli
aam
popf
call
jno
add
mov
xchg
xor
imul
pop
notl
movsl
jp
push
inc
push
mov
cmpsb
mov
cli
out
xchg
pop
adc
int
pushf
pop
or
ja
sbb
fists
enter
jno
inc
fisttpll
xor
and
inc
bound
into
orl
sbb
in
out
jb
mov
mov
pop
cmp
imul
pop
jo
or
pop
es
lea
dec
call
jge
scas
sub
add
cmp
nop
jle
fsubl
mov
int
pop
aas
mov
sbb
test
or
mov
dec
jle
inc
prefetch
cmpsb
std
cmpsb
sub
inc
faddl
mov
in
adc
sbb
test
xchg
cltd
es
wbinvd
dec
mov
sub
jno
mov
shr
xor
pop
pop
cli
xlat
int3
aas
dec
fisubs
shlb
sub
int
push
sub
mov
jg
mov
cmp
adc
outsl
jo
fdivr
popf
inc
das
push
xlat
lods
int
or
shlb
fwait
js
cld
xchg
xchg
aas
sub
add
xlat
es
mov
xor
leave
das
bound
cld
pop
adc
xchg
and
mov
or
daa
in
cmp
clc
fucomp
cmp
cmp
mov
mov
leave
inc
inc
cmp
iret
aas
inc
int
jno
lret
rcr
xchg
loopne
fs
hlt
or
mov
and
repz
imul
pop
xor
lock
mov
sbb
outsl
xor
lods
out
addb
scas
inc
pop
in
iret
or
jno
fistl
repz
adc
cmp
lock
dec
sub
hlt
cmp
jae
and
add
jle
adc
mov
test
pop
mov
in
cs
xchg
pop
movsb
repnz
xchg
repnz
in
inc
jb
mov
sub
inc
push
jo
test
lret
leave
movsb
mov
inc
jecxz
in
out
sahf
mov
mov
mov
jl
in
add
shlb
jae
jge
loop
mov
shll
dec
jne
dec
in
test
lcall
sub
dec
nop
jge
add
lcall
cmc
int3
shll
lret
les
leave
push
nop
sti
fisubrs
cmp
add
mov
mov
jp
dec
jecxz
lods
pop
lea
mov
addl
jmp
pop
sbb
push
pop
stos
mov
iret
push
int
sbb
xor
ljmp
lods
ds
ja
icebp
push
ds
pop
xor
fdivr
push
or
in
ja
popf
or
sarl
and
jns
push
xchg
add
insl
test
jge
adc
int
jbe
mov
xor
pop
sarb
pusha
and
stos
in
cmc
mov
test
jns
sti
inc
inc
mov
fmuls
xchg
out
add
adc
shlb
les
cmpsb
arpl
adc
push
push
xor
fcoms
ret
call
pop
mov
loopne
stos
cmpsb
mov
or
pushl
xor
adc
test
jno
xchg
stos
dec
add
nop
fs
test
arpl
inc
push
divb
cltd
mov
sub
pop
aam
pop
bnd
mov
imul
movsl
cmp
mov
cmp
or
es
mov
es
cli
aaa
ljmp
call
and
pop
loopne
mov
ja,pn
pusha
mov
imul
das
add
loopne
in
mov
xor
je
out
mov
sbb
push
sbb
cmp
mov
movsb
leave
xchg
add
lret
sub
insb
ret
sbb
pop
jle
jmp
xor
jnp
cmp
mov
xor
mov
mov
ljmp
call
out
mov
mov
dec
and
or
jle
sbb
les
in
sbb
insl
mov
js
jle
jp
dec
xchg
pop
out
je
pop
sub
fbstp
loope
mov
push
xchg
pop
scas
xor
xorl
push
sub
sub
ja
lods
xchg
add
lret
push
das
and
dec
fnstenv
push
sub
repz
pop
add
cli
ds
push
pushf
dec
adc
icebp
mov
push
lcall
sbb
addb
pop
mov
mov
inc
std
vzeroall
push
xchg
popf
addb
xchg
nop
in
imul
lea
movsb
jae
dec
lods
out
ss
sub
mov
ds
jle
in
test
inc
pmaxub
mov
cmpsl
movsl
xchg
insb
jle
push
cmp
imul
jo
outsl
push
and
js
test
mov
test
shlb
ret
push
push
push
lods
iret
push
pop
dec
cmp
stos
jmp
in
jg
xor
dec
icebp
push
ret
sbb
add
lea
int
jae
xchg
push
sahf
pop
cmp
sahf
repz
pop
insb
loope
pop
cmp
test
jmp
adc
sub
repz
in
lret
stos
in
neg
add
icebp
mov
rorb
imul
call
add
je
pop
pop
enter
in
mov
dec
scas
mov
iret
xlat
scas
jnp
pop
mov
pop
cmp
dec
cltd
mov
pop
mov
mov
xchg
movsl
adc
inc
xlat
cmp
or
scas
bound
adc
push
insl
mov
push
lods
icebp
cmp
ret
call
or
sbb
push
xor
push
mov
fdivl
rcr
jae
js
shlb
and
ret
sub
mov
pop
xchg
inc
inc
negl
dec
sub
add
xor
xor
les
mov
sahf
in
inc
pop
rolb
das
xor
pusha
dec
cmpl
cmp
xlat
shr
test
xchg
sbb
xchg
nop
das
popf
lods
scas
loope
cmp
fadd
pop
gs
pop
lods
cmpb
or
lcall
add
pusha
cwtl
inc
xchg
pop
aas
xor
cmp
shll
lcall
addr16
mov
pop
adc
xchg
fwait
je
sub
fldt
scas
cmpl
sahf
clc
cwtl
sbb
inc
push
xor
dec
in
ds
out
std
shlb
repnz
filds
test
data16
test
mov
fcomps
inc
dec
ds
sti
xor
adc
and
ret
pop
cmpsb
ja
xchg
aas
dec
mov
stc
mov
mov
inc
lcall
iret
xchg
iret
stos
mov
lret
mov
repnz
lods
sbb
cmpsl
ret
cmp
xor
jecxz
test
ffreep
push
jo
sbb
mov
xchg
jnp
subb
dec
mov
fstpl
out
lods
jb
xchg
or
clc
mov
leave
adc
xchg
in
push
push
push
cmp
leave
imul
cmp
int3
xorb
cltd
int3
shlb
int3
fwait
cmpsb
push
dec
in
aaa
call
sbb
cmp
push
scas
xor
cltd
popf
in
xor
xor
push
mov
enter
sbb
xchg
sub
mov
dec
cmp
in
icebp
mov
subl
aaa
aas
loop
ljmp
test
fistpl
or
xchg
outsl
push
xor
fcomi
adc
bound
xchg
jmp
popa
dec
aaa
mov
cltd
mov
mov
inc
mov
adc
xchg
scas
pop
push
xchg
xor
dec
mov
jnp
push
lods
icebp
shlb
into
sahf
push
in
push
mov
outsl
adc
pushf
ret
dec
pop
outsb
or
cmpsl
or
lods
mov
sarl
push
dec
loopne
jnp
test
out
pop
xchg
ret
testl
xor
mov
cmpw
mov
xchg
aas
push
lds
sbb
stos
loop
jmp
mov
stos
xlat
rorb
jns
jmp
mov
sbb
cwtl
pusha
jl
dec
cmp
push
jp
xchg
xchg
out
lahf
pop
test
xor
data16
push
push
mov
stos
outsl
stc
adc
xchg
adc
iret
xlat
pop
lds
std
dec
xchg
jbe
add
aam
or
pop
xor
fsubp
addr16
pop
test
jb
jmp
mov
pop
pop
and
xchg
stos
and
push
aas
cmpb
sub
rcl
hlt
xchg
or
mov
lret
jno
push
mov
and
lcall
push
sti
cwtl
das
sub
hlt
mov
rolb
mov
adc
mov
sti
dec
inc
mov
fldt
inc
not
gs
es
dec
fnsave
xchg
dec
out
inc
sub
cmpsb
cmp
xchg
jp
pop
xchg
test
adc
out
test
ds
cmp
outsl
loop
leave
pusha
push
push
loopne
sti
cmpsb
mov
sbb
jbe
int3
cli
fwait
int3
mov
jmp
aad
jl
scas
pop
es
fwait
js
mov
or
adc
daa
cmpsb
imul
addr16
sbb
jbe
rclb
mov
imul
push
sbbl
movsb
cmp
mov
lcall
aad
xor
mov
in
dec
and
testl
sub
into
sbb
shlb
ret
jle
dec
inc
inc
mov
aas
sub
dec
nop
jnp
int3
pop
dec
icebp
ret
xchg
mov
fadds
push
pop
ds
shl
xchg
mov
cmc
sti
jl
add
inc
aad
dec
jb
out
push
pop
inc
scas
xchg
dec
add
scas
int3
pop
xor
rcrl
bound
pop
popa
pop
cmpsb
xchg
xchg
mov
push
adc
movsl
in
andl
xchg
out
add
mov
sbb
inc
ficomps
test
jge
out
ret
jg
cmp
rolb
pop
test
fldenv
push
iret
dec
mov
aad
aas
push
test
fs
inc
xorl
xlat
lock
loop
xor
push
addr16
scas
add
mov
loopne
mov
mov
scas
repnz
mov
mov
mov
ljmp
jno
xchg
jp
iret
lods
sbb
sbb
andl
icebp
ds
jae
or
jns
rcrb
pop
mov
cmp
in
cmp
or
xor
ja
push
das
push
lahf
scas
push
sub
sarb
out
repnz
pusha
and
xchg
add
jmp
adc
push
lret
adc
cwtl
xchg
scas
es
lcall
inc
loope
add
push
xchg
pop
pop
std
fists
or
pop
scas
mov
test
jo
dec
pushf
xor
jmp
xlat
aam
sbb
out
inc
enter
jae
mov
add
push
jb
in
pusha
mov
ret
mov
popl
fidivl
cmp
pop
scas
fbld
ds
mov
lret
jg
out
movsl
pop
push
jb
add
mov
gs
push
test
mulb
xor
add
push
mov
lods
mov
lret
lea
shll
mov
mov
adc
repnz
dec
pop
outsb
cmpsl
dec
pop
loop
montmul
cmpsb
inc
repz
and
in
cld
lret
dec
loope
shrb
cs
sub
cs
cmpsl
jne
xor
or
into
or
push
pop
popf
sub
lcall
cmpsb
loope
inc
enter
hlt
in
lods
scas
les
push
mov
shl
push
into
cltd
xor
sti
jbe
and
dec
dec
push
add
frstor
xchg
cmp
lods
jmp
pop
add
sbb
mov
rcll
insl
xor
fbld
pop
xor
test
fmulp
xchg
movl
mov
mov
icebp
xchg
loope
out
mov
dec
sub
jl
scas
mov
jbe
test
aas
aad
or
fcoml
inc
leave
sub
pop
popf
bound
sub
push
rol
dec
pop
add
sub
or
ds
mov
ds
clc
insb
xor
or
pop
jns
stos
jmp
cmp
out
pop
fwait
sub
repz
ss
cli
sbb
rcrb
fsubl
hlt
xor
fmuls
push
popa
push
popf
ljmp
mov
xchg
inc
mov
ljmp
js
rorb
lods
fildl
int3
arpl
std
xchg
inc
and
push
push
jae
mov
nop
mov
out
sti
imul
bound
ret
adc
add
pop
xor
test
std
imul
adc
sbb
mov
push
jnp
push
and
aad
aam
adc
ss
push
popa
push
ja
mov
jg
lds
clc
pop
outsl
popf
xor
rclb
stos
dec
daa
dec
lret
inc
dec
sub
xor
ret
mov
mov
call
js
stos
rcr
mov
push
lret
sub
in
pop
cmc
xor
ja
mov
mov
mov
into
rcrl
outsl
data16
je
add
cwtl
cs
xor
lods
out
sbb
lcall
into
cli
bound
xchg
sbb
sarl
icebp
push
das
add
cli
xchg
jge
or
push
xor
sar
in
imull
dec
loopne
das
pop
movsb
pop
frstor
mov
insb
and
dec
mov
mov
inc
inc
les
dec
push
fcmove
popf
cli
arpl
pushf
fiaddl
lea
andb
xchg
and
cmpl
adc
repz
and
push
mov
pushf
cwtl
adcl
leave
and
je
ror
cmpsl
xchg
sbb
add
jne
or
add
mov
dec
and
add
aas
in
lods
mov
pop
dec
jo
sahf
mov
rol
xlat
shrl
sbb
jg
ljmp
push
mov
cmpsb
fdivrp
lds
sub
das
xor
lcall
inc
daa
imul
aam
jle
pusha
cmc
data16
push
rcrl
cmp
pop
notb
push
or
xchg
fwait
cwtl
adc
inc
mov
mov
xor
jb
and
pop
jmp
int
jg
push
inc
aad
mov
pop
inc
out
sub
or
andb
or
sahf
sub
adc
out
pop
repz
sub
xor
fnstenv
xor
int
fsubrp
mov
mov
xchg
pusha
push
aad
push
leave
das
inc
pop
repnz
push
and
int
xchg
mov
sub
jp
push
les
pop
int3
push
or
test
jbe
push
mov
fsubr
jge
ror
jbe
push
inc
adc
fistpl
adcl
test
addr16
rclb
jne
icebp
push
or
shll
xor
mov
mov
or
sbbl
jecxz
in
cmp
xchg
add
jo
clc
pop
loopne
pushf
xchg
loopne
sbb
mov
mov
mov
shrl
dec
add
mov
mov
jbe
or
push
lea
pushf
and
jge
ds
cmp
rcr
mov
imul
je
push
in
notl
push
and
in
add
popl
mov
int3
in
adc
loopne
lahf
or
sbb
outsl
push
sub
sarb
out
or
or
xorl
lret
rcrb
mov
and
push
jno
pushf
dec
aaa
es
stc
cwtl
pop
sub
xchg
cli
sub
stos
jmp
or
cmp
xchg
enter
scas
mov
pop
sbb
rcr
cmp
push
mov
mov
inc
inc
fwait
cli
mov
sub
xlat
ljmpw
les
test
call
inc
pop
push
out
cmpsl
roll
pop
out
dec
or
popf
dec
repnz
hlt
jno
add
mov
jg
or
ljmp
movsb
cmpb
add
rcl
cmpsl
test
lahf
pop
data16
es
and
in
outsb
inc
sub
cmp
adc
bound
fdiv
stc
dec
ret
jae
adcb
je
addb
daa
pop
lock
icebp
negb
push
in
xchg
jmp
jge
cmc
test
cmp
cmp
pop
popa
and
sbb
int
incb
mov
sbb
loop
or
test
xor
outsb
adc
out
outsb
imul
stos
jns
adc
xchg
sub
jae
inc
data16
addr16
jnp
fdivr
xor
or
scas
xchg
sub
xor
sbb
mov
in
rclb
add
cmc
jmp
lret
cmpsl
fdivp
cmp
xor
subl
pcmpgtd
mov
std
lock
lock
push
adc
iret
mov
rclb
shl
shrl
mov
pushf
push
cld
and
addr16
insb
mov
movsb
call
ljmp
arpl
cmpsl
inc
mov
jl
lods
inc
cli
popf
cmc
std
dec
push
xchg
jae
imul
out
adc
clc
push
sahf
pusha
adc
lret
xchg
loop
xchg
fldcw
orb
lahf
sar
shrl
jb
push
cmp
js
cmp
mov
fstps
insb
adc
push
fdivl
xchg
insl
dec
pop
les
out
xor
aas
shll
dec
aaa
sbb
xor
aaa
stos
xchg
xchg
and
jo
sarb
inc
xchg
inc
nop
adc
cld
sbb
pop
dec
arpl
and
adc
aaa
nop
hlt
sbb
in
xchg
shlb
add
pop
cmp
sbb
mov
add
lahf
xor
lret
adc
jno
mov
jae
test
ja
mov
cld
paddq
lcall
es
add
andb
dec
mov
les
cltd
push
aas
repz
or
ret
pop
adc
cltd
dec
loopne
pop
popf
movswl
pop
lods
sbb
xor
test
enter
jb
hlt
pop
pop
aam
inc
push
cmp
push
lods
sahf
lods
rcll
jmp
jbe
stos
push
xchg
push
pop
cwtl
inc
pop
xchg
dec
and
sub
mov
xchg
dec
xchg
mov
mov
ljmp
ljmp
pop
mov
out
xor
mov
sub
jl
xchg
pop
rcrl
xchg
sbb
in
push
sbb
cmp
push
in
push
stc
xchg
ficomps
dec
add
insb
mov
sbb
sbb
xor
ds
mov
int
scas
xor
mov
pop
lods
xchg
jns
jecxz
xchg
int3
jb
sbbl
pop
ret
pop
xor
mov
sbb
and
pop
xor
inc
clc
or
test
xlat
cmp
or
xor
add
jns
jno
in
data16
repnz
adc
push
or
mov
xchg
mov
cld
cmp
lcall
lret
cwtl
fisubrs
sbb
add
mov
mov
je
mov
popa
inc
sbb
cmc
lds
xchg
mov
imul
cmp
test
cmp
movsl
aas
pop
pop
cltd
xchg
push
enter
movsb
in
add
adc
or
push
mov
inc
or
mov
jnp
cmpsb
mov
insb
mov
mov
sbb
or
test
sahf
lahf
sbb
mov
int3
xor
idivb
jecxz
adc
idivb
dec
dec
ret
in
xor
mov
push
adc
adc
gs
bound
addr16
loopne
mov
mov
mov
lea
mov
push
or
pop
fnstsw
inc
mov
pop
inc
arpl
sbb
clc
lods
inc
sub
scas
sbb
dec
fcom
sub
mov
ret
sbb
fistps
sahf
sub
xorl
test
and
xor
pop
adc
mov
sahf
xor
roll
push
jns
pop
icebp
push
sbb
data16
xchg
and
je
cmp
ds
mov
pop
inc
adc
pop
push
sbb
sti
push
aam
rcl
sbbb
sbb
test
fs
mov
jle
stos
mov
lahf
cmp
push
cmp
divb
or
jecxz
and
dec
outsb
mov
xlat
aas
sbb
in
je
cld
das
xchg
or
xchg
xchg
mov
iret
xor
stos
mov
frstor
outsl
sbb
xchg
shrl
adc
jp
push
mov
aas
cwtl
or
add
mov
mov
aam
fdivrl
movsb
adc
xchg
xor
mov
mov
gs
call
repnz
adc
mov
push
mov
into
jne
sub
sbb
pop
mov
lds
shrl
sarl
push
mov
or
jne
mov
test
or
sub
insl
test
mov
cmc
mov
jp
sahf
stos
pop
outsl
addl
mov
fs
stc
and
inc
in
mov
add
jb
mov
and
jo
sub
inc
mov
shlb
sub
loope
outsl
xor
sub
pop
cmp
add
pop
xchg
stos
cmp
dec
aad
xchg
pop
cltd
mov
js
adc
xchg
mov
gs
pop
pop
inc
test
dec
jecxz
stos
mov
push
in
mov
sti
imull
mov
cmc
gs
shlb
test
bound
ret
dec
js
dec
and
dec
fsubrl
cli
adc
mov
mov
add
ja
push
cltd
push
ja
outsl
sbb
in
mov
aad
jg
cli
ss
mov
mov
sahf
and
scas
jg
inc
out
push
dec
ds
fcmovne
in
dec
inc
stos
dec
lea
ret
or
jg
insl
and
ja
mov
mov
cmp
aad
insb
xchg
or
pop
das
or
and
in
or
lods
mov
fidivs
enter
sarl
dec
nop
cmc
lcall
call
or
insl
pop
dec
loopne
mov
les
sahf
imul
popf
push
push
movsb
jmp
scas
xor
sti
pop
push
in
rcrb
shrb
jmp
xor
pop
cmp
bound
push
jg
push
loopne
iret
push
call
jbe
movsb
jbe
mov
adcb
je
or
xchg
cmp
push
popa
popa
xor
sub
dec
fnstsw
das
xchg
addr16
into
adc
mov
sbb
sbb
inc
scas
push
jo
cli
mov
and
out
js
in
inc
aam
movsb
xor
out
div
or
subb
mov
pop
movsb
sbb
imul
sub
add
cltd
sub
pop
hlt
stos
mov
sub
dec
movsb
stc
pop
stos
insb
sbb
mov
inc
dec
aas
dec
push
aaa
xor
push
test
or
xchg
push
fdivrs
push
std
cld
stos
or
and
pop
sti
xlat
and
jns
mov
dec
icebp
jmp
ficompl
inc
add
movl
pop
pmaddwd
inc
iret
fistpl
mov
add
pop
add
xchg
xchg
sbb
cmp
scas
sub
mov
sub
addb
ss
in
and
leave
xor
in
add
push
add
add
cmpsl
inc
pop
fnstenv
xchg
and
lods
cmpsl
or
mov
mov
loop
out
movsb
push
xlat
or
xchg
out
and
test
lret
mov
lds
adcb
jb
xchg
mov
dec
decl
pop
dec
jle
outsb
jp
xor
mov
pop
cld
sub
iret
mov
add
pushf
sti
fs
nop
mov
ret
in
sti
pop
in
sbb
data16
mov
lods
jnp
and
sub
mov
add
mov
push
inc
mov
stc
xchg
stc
in
rorl
cwtl
cli
pop
outsb
rcll
daa
sbb
cmp
mov
push
jle
icebp
incl
in
or
sbb
test
sahf
popa
sbb
jbe
cwtl
inc
int3
arpl
stos
mov
pop
jo
jnp
dec
mov
push
pop
sub
in
xor
inc
jmp
sub
into
jl
pop
outsb
aad
pop
inc
dec
jg
xor
push
sub
sbb
jae
xor
and
aas
mov
fbld
cs
js
in
jbe
pop
mov
lret
cmpsb
mov
sbb
push
mov
mulb
jno
mov
fists
xchg
std
inc
icebp
mov
icebp
test
push
mov
push
and
mov
cmpsl
test
fnstcw
out
pop
insl
dec
fistps
mov
and
cmpsl
pop
insl
fldcw
sbb
stos
inc
inc
mov
enter
cwtl
das
ss
popa
cld
push
mov
mov
lahf
scas
stos
jle
lret
push
popa
notl
sub
int
inc
jge
js
push
inc
aaa
pop
sub
add
lods
mov
fdiv
data16
scas
les
movsl
pop
mov
cwtl
add
jl
xchg
xor
rclb
daa
push
sbb
push
mov
loope
cvtps2pd
mov
sbb
jno
aam
movsl
or
mov
adc
inc
jl
arpl
adc
add
in
shl
loop
gs
and
lods
xchg
jnp
or
sub
mov
rcrl
sub
popf
aad
paddw
jns
in
jbe
sub
ds
sti
jbe
outsl
cmc
icebp
mov
ficoml
loop
int
pop
jb
or
mov
fldl
and
mov
xchg
lods
sti
dec
les
shr
rcrb
repz
mov
fistpl
mov
push
daa
or
rcll
sarl
add
jns
ret
scas
rorl
mov
push
push
and
cmpsb
in
sbb
push
imul
mov
enter
or
leave
inc
and
fisttps
and
cli
jne
dec
sbb
dec
hlt
lods
pop
shl
sbb
fistpll
push
je
imul
xor
mov
or
push
andb
imul
adc
jmp
mov
mov
adc
adc
movl
cmp
pop
xor
jecxz
inc
in
sub
jnp
push
call
cltd
scas
adc
sbb
in
dec
mov
je
and
dec
xchg
jne
test
mov
repnz
orb
push
cs
jbe
push
sub
push
mov
pop
jo
arpl
push
ds
and
jne
xor
out
and
test
and
sub
inc
mov
mov
pop
xchg
pusha
fsubl
sarb
pushl
adc
mov
mov
mov
xchg
pop
out
xchg
xchg
aaa
into
into
movd
inc
inc
xchg
cmp
nop
adc
or
pusha
sub
or
aam
movsb
imul
ret
adc
sbb
push
lcall
cwtl
dec
shl
push
dec
dec
dec
pop
push
inc
jae
notb
xchg
sub
lds
sub
icebp
sub
bound
sbb
call
mov
jb
aaa
nop
jo
std
xor
pop
inc
lcall
mov
fs
sbb
cmp
adc
orl
mov
mov
ret
mov
sbb
jne
jg
outsb
xchg
test
xchg
hlt
inc
dec
sub
stos
aam
ljmp
dec
fadds
lds
push
iret
fcmovnu
es
test
jae
jae
add
call
dec
call
inc
arpl
mov
lds
push
outsl
mov
push
jmp
out
inc
and
aam
cli
xchg
xchg
loop
add
ja
push
xor
jmp
nopl
aam
or
push
lods
jmp
ljmp
into
sbb
incb
dec
sub
or
das
pop
mov
mov
add
jle
bound
js
jl
data16
sbb
mov
xchg
roll
xor
jnp
xchg
add
dec
and
int3
ljmp
mov
push
incl
pusha
shll
shrb
sbb
shl
ss
addr16
lcall
and
push
mov
nop
test
aam
xchg
add
fistps
sbb
add
cmp
fidivs
aaa
into
dec
ja
pop
mov
mov
dec
cmpsb
inc
pop
cmp
adc
add
pop
enter
xchg
add
daa
mov
inc
call
out
ja
sub
sbbl
mov
xchg
test
sbb
leave
inc
or
rcrl
ret
push
dec
sbb
dec
sbb
jne
mov
pop
mov
xor
adc
loope
mov
mov
dec
ss
cmc
xor
jl
xchg
sub
sbb
arpl
sbb
out
push
push
jo
psrad
sub
daa
iret
arpl
mov
adc
rolb
xor
bound
fiadds
xchg
sub
mov
fsubrp
push
lods
clc
std
xchg
das
add
fstpt
stos
xchg
push
repnz
outsb
inc
add
cmp
mov
dec
and
rcl
mov
cmpsb
scas
out
mov
cld
pop
jns
shlb
xchg
rolb
sbb
icebp
xchg
jbe
js
xor
ss
xor
je
dec
andb
icebp
lods
sub
push
or
out
stos
jns
iret
xchg
adc
pop
cmpl
mov
cmp
mov
loop
out
pushf
jnp
shlb
cmpsb
push
jo
jmp
testl
jb
dec
jne
sub
aad
jle
outsb
enter
icebp
sbb
dec
fs
in
lret
das
daa
inc
and
pop
test
int
pop
jbe
or
jo
stos
pop
cmp
add
into
or
or
cmc
push
xchg
pop
cmpsl
sarb
inc
push
mov
mov
or
mov
adc
dec
mov
enter
adc
je
dec
aad
adc
scas
cli
bound
fwait
mov
and
dec
ds
mov
xor
in
jno
cmpl
mov
repz
test
sbb
out
fwait
das
lea
icebp
jbe
incl
pushf
arpl
mov
sub
fcoms
int
push
pusha
or
inc
adc
std
pushf
dec
call
pushf
stos
and
fs
scas
inc
adc
pop
cmpsb
cmp
mov
dec
add
pusha
test
push
daa
imulb
incb
shl
aas
add
jl
mov
cmp
aad
gs
mov
pop
xor
xchg
xchg
lods
pop
cmp
clc
pop
out
add
sub
negl
jmp
popf
aam
and
aad
jns
push
jg
mov
idivl
jo
mov
pop
in
mov
lcall
in
js
insl
pop
cld
push
xor
xchg
jns
fwait
cmp
sbb
jmp
into
mov
mov
push
sbb
sti
add
test
lret
pop
dec
jns
fsub
out
test
test
iret
xor
xchg
xlat
fwait
fwait
inc
je
jno
jmp
dec
sahf
push
push
add
or
hlt
rol
dec
pop
or
dec
outsb
leave
fnstcw
push
mov
or
jmp
cmpsb
cmp
mov
inc
movb
mov
popa
add
cmc
mov
xchg
fwait
les
cmc
cmp
dec
shr
cmpsl
pop
imul
sbb
dec
add
out
push
cmc
mov
lock
or
cmc
in
push
sbb
repnz
sbb
repnz
lods
repnz
sub
into
into
loope
push
clc
sbb
mov
xchg
fmul
pop
outsl
add
cmp
test
lret
mulb
xor
jge
mov
cmp
pop
insl
push
or
test
push
sub
ljmp
mov
mov
jns
call
dec
outsl
divl
das
jmp
cmp
fisttpll
pop
push
fidivl
dec
and
jle
sbb
daa
mov
sbb
imul
repnz
dec
jb
lret
cltd
rcr
pop
xchg
cmpsb
lock
or
jle
push
je
jns
lret
mov
or
mov
outsb
jl
add
pop
push
ja
xchg
and
inc
insb
jle
int3
lret
lds
rcrl
jo
into
pusha
pop
push
orl
cmp
push
ljmp
adc
or
lret
xor
dec
push
sbb
cmpsb
push
jmp
outsb
mov
xchg
fldt
call
cltd
jbe
or
jns
mov
sbb
xor
dec
jp
cld
mov
xchg
jns
xchg
push
mov
mov
pop
mov
scas
call
or
vpmaddwd
test
lods
rol
xor
ret
cmp
pop
lock
jge
js
sub
xor
subb
out
sahf
xchg
ljmp
jns
aad
and
pop
punpcklbw
mov
xlat
insl
lret
lcall
push
inc
into
fmull
cmpsb
jg
inc
mov
xchg
push
imul
stc
lock
rorb
cmpsb
fldl
inc
cmp
ljmp
mov
push
and
lea
pop
jmp
aad
and
pusha
out
shll
push
les
mov
stos
jge
movd
jo,pt
or
imul
lea
sti
xchg
xor
jbe
cmp
jae
mov
inc
push
icebp
std
mov
pop
mov
lock
adcl
addl
or
outsl
fwait
in
push
dec
aad
inc
nop
and
push
aad
cwtl
sub
in
jecxz
xchg
jbe
pop
push
cmp
scas
inc
stc
in
inc
xchg
xchg
int3
arpl
mov
out
mov
repnz
or
adc
bts
jns
sarb
cwtl
xor
cmp
cmp
push
sub
mov
mov
in
outsb
pop
mov
xor
adc
push
call
push
lds
mov
jae
lock
enter
pop
lock
pop
push
out
fwait
ja
int
std
mov
out
addr16
in
mov
out
fmulp
test
cmp
jbe
js
cmc
stos
test
adc
push
xchg
bound
fwait
mov
mov
rcrb
dec
outsb
mov
mov
xor
xchg
stos
repz
or
dec
pop
push
jmp
add
mov
fstpt
out
cmc
stos
mov
popa
sti
insb
add
lret
sti
mov
std
xchg
adc
dec
into
shlb
pop
pusha
pop
je
enter
cmp
jae
push
das
mov
pop
cmpsl
cmc
push
mov
xchg
xor
xchg
dec
in
in
mov
enter
js
add
decl
mov
aam
pusha
push
inc
in
mov
out
fbstp
mov
pop
push
xor
out
mov
test
mov
sbb
inc
dec
mov
outsb
cwtl
pushf
lods
inc
sub
or
out
mov
push
or
mov
sahf
mov
dec
into
mov
ret
push
push
xor
push
dec
jno
or
cmp
cwtl
and
push
ret
mov
push
push
test
jb
repnz
stos
inc
pop
std
fidivs
jae
in
xchg
jmp
jge
insb
js
pop
cmp
rcll
or
xchg
mov
sub
pop
out
cmpsb
sbb
mov
hlt
inc
or
arpl
mov
ljmp
nop
push
or
mov
cmpsb
sbb
and
pushf
loope
shrl
out
out
test
xor
add
push
or
sqrtps
call
push
cmp
imul
xchg
stos
sbb
xor
lret
lahf
jae
dec
xchg
call
dec
inc
arpl
mov
and
leave
leave
push
push
les
jnp
xchg
scas
stos
fsubl
fdivrl
daa
sub
pop
shll
sbb
adc
xchg
push
pop
push
mov
stc
add
inc
aam
out
test
lcall
cmpsb
and
mov
popf
or
fcomip
mov
je
out
and
mov
mov
push
mov
das
shr
ljmp
in
xor
scas
fadds
cltd
mov
jl
xchg
scas
and
push
mov
cltd
inc
lahf
and
rcll
scas
inc
mov
inc
fiadds
lcall
push
mov
movsl
pusha
cs
and
std
test
dec
loope
loop
or
sbb
rcr
mov
lfs
loop
test
add
std
sbb
lahf
sbb
fwait
sub
adc
xor
push
call
mov
mov
add
test
test
insb
add
addr16
adc
or
or
jg
cli
test
sbb
xchg
lds
mov
pusha
or
sbb
dec
in
sub
lods
div
fnstenv
and
pop
js
aam
adc
bound
stc
cmc
xchg
dec
add
xor
in
xor
aad
je
leave
insl
push
je
xlat
shlb
pusha
sub
pop
pop
lods
cmp
inc
loop
popf
loop
fcompl
mov
mov
mov
sarl
add
pop
mov
push
into
adc
mov
in
inc
test
push
call
pop
xor
int
mov
test
mov
mov
xchg
ret
sbb
or
sbb
sub
imul
sbb
xor
fs
stos
jmp
sar
jecxz
lret
push
ficoml
adc
xchg
pop
insl
add
arpl
jl
xchg
out
outsl
repz
movl
ja
mov
loopne
test
mov
cmc
mov
add
or
xor
movsl
popf
xorb
mov
inc
cmpsl
mov
jl
loop
jmp
cmc
fiadds
cmp
xor
xchg
test
sbb
mov
jmp
sub
ror
mov
in
insl
addr16
pcmpgtd
jge
sub
xor
lods
mov
and
xchg
adc
mov
ljmp
mov
test
inc
jmp
mov
pop
cmp
ret
dec
mull
fisttpl
mov
xchg
shll
mov
ds
out
popa
daa
in
adc
cwtl
xor
test
mov
popf
xor
iret
mov
jmp
xlat
not
push
fucomp
sbb
sub
test
mov
jg
pop
daa
jp
pusha
lods
cmp
push
lods
jl
sbb
cli
xlat
jmp
adc
daa
sbb
or
inc
fcmovne
stos
jns
bound
inc
push
into
enter
mov
push
fs
inc
pop
aas
mov
pop
fninit
iret
sbb
lret
lret
xchg
inc
inc
adc
push
cmpsl
mov
mov
or
xor
mov
inc
out
icebp
sbb
pop
fs
je
ds
cld
inc
mov
call
insl
sbbl
rcrl
cmp
gs
rolb
dec
lret
adc
lcall
push
sbb
sub
pusha
sbb
mov
or
adc
test
sub
out
ficoms
mov
jnp
inc
sarl
outsl
dec
dec
sub
test
pop
lahf
mov
outsl
xor
dec
popf
jg
sub
dec
pop
icebp
mov
aaa
cld
insb
jne
pop
xchg
in
mov
clc
mov
push
jle
out
mov
pop
addr16
inc
cltd
std
mov
jbe
mov
sbb
insl
mov
jl
arpl
repnz
mov
xchg
outsl
mov
pop
ljmp
mov
sub
cli
stos
orl
push
repz
cmp
es
and
int3
cmp
out
adc
test
fnstenv
jp
inc
outsb
fldt
mull
push
and
lods
mov
jmp
in
idivb
mov
out
insb
out
ret
lcall
xor
pop
cmc
dec
sbb
outsl
ret
rcr
pop
mov
cld
cmp
mov
daa
test
sub
inc
mov
push
adc
fcomps
insl
xor
inc
mov
and
jmp
std
mov
sbb
and
jmp
fsts
call
es
or
xchg
inc
mov
imul
jne
cmp
rolb
xchg
jmp
sbbl
cmp
pop
push
xchg
lock
inc
scas
jmp
push
fbld
cmp
inc
sub
fwait
sbb
add
cmpb
pop
sbbl
sahf
out
push
sahf
xor
fcmovnbe
inc
push
jnp
test
inc
pop
fistpll
inc
mov
inc
lcall
icebp
es
inc
mov
sub
dec
xlat
out
pop
pop
pop
sub
out
popf
mov
or
out
cmp
aaa
into
xlat
sub
cmpb
leave
test
dec
in
imul
pusha
jae
std
jnp
sbb
cltd
fwait
adc
xor
cs
sbb
lahf
push
jns
sbbl
mov
sub
inc
pop
push
das
test
shll
pop
dec
jns
into
xor
aad
adc
sub
pushf
mov
stc
enter
fmuls
cmpsl
lahf
or
mov
mov
inc
xlat
enter
std
nop
adc
insb
sub
pop
sti
push
icebp
push
sub
pop
dec
mov
subb
data16
out
mov
fxch
inc
sahf
jne
mov
cmp
in
xor
mov
gs
or
fdivs
or
or
pop
mov
das
pop
js
rorl
fisttps
fcmovnb
sub
push
sub
lea
and
mov
jnp
cmp
popa
sbb
call
jo
es
xor
fucomip
jl
push
stos
shlb
aad
rcrb
cmpsb
push
in
pop
ror
fisttpll
es
cltd
inc
call
decb
and
icebp
es
adcl
and
pop
ljmp
gs
mov
in
gs
fisubs
xchg
pop
scas
icebp
jle
aam
inc
dec
shrl
rcrl
add
jp
dec
lds
scas
mov
fcomps
dec
adc
sub
sub
dec
jge
idivb
insl
sahf
sti
or
jb
mov
mov
add
add
insl
ss
fbld
ret
sbb
mov
jle
stos
lahf
test
push
test
ret
xor
je
movsl
cs
xor
repz
ljmp
adc
sbb
pop
mov
subl
cmpsb
adc
or
cmp
jge
lcall
lret
or
movsl
adc
call
imul
pop
xlat
int3
jne
data16
pop
insl
loopne
cld
push
mov
mov
pusha
cmpb
sbb
orb
and
sbb
ljmp
inc
cld
dec
push
push
jmp
icebp
inc
popa
outsb
mov
fistps
in
or
bound
std
inc
inc
pop
xlat
out
xor
addb
push
inc
mov
push
push
pop
call
or
outsb
xor
sub
jno
movsb
sbb
xor
xor
shll
xchg
pop
mov
fidivl
xchg
or
shl
dec
mov
xor
and
aad
enter
jae
mov
push
imul
dec
add
mov
lds
test
jl
push
mov
mov
cmpsl
jle
dec
daa
jp
lea
push
xlat
sub
shlb
pop
in
cwtl
mov
dec
insb
sub
jo
add
inc
dec
dec
inc
push
lret
push
push
bound
fldt
lret
or
xor
sub
or
jecxz
loope
cmp
ss
stos
fsubs
pop
cmc
xchg
in
push
or
js
or
or
sbb
push
add
mov
mov
out
jb
pop
xor
imul
les
aam
std
jbe
test
iret
or
test
frstpm(287
or
insb
xor
mov
gs
xchg
cmp
and
dec
ds
stos
mov
cli
stos
inc
fiaddl
movsb
popa
add
sub
push
enter
fdivrl
sub
mov
xor
out
inc
adc
cmpb
popf
xor
pop
mov
test
add
xor
repz
xor
push
in
pop
jmp
je
jbe
adcb
xchg
inc
leave
ret
mov
mov
cmpsb
ja
jne
pop
cwtl
insl
sbbb
enter
loope
and
and
lcall
das
xor
mov
aaa
mov
cmp
mov
lcall
imul
mov
sub
pop
hlt
sbb
xchg
pop
adc
mov
nop
scas
xchg
cmc
xlat
sbbb
jb
testb
dec
sahf
cmp
mov
and
push
out
int3
cmp
push
sub
jp
cmpb
add
je
cmp
mov
sbb
adc
pop
cmp
out
inc
scas
cmp
xchg
aam
fistps
xchg
push
xchg
in
add
lods
notb
jbe
dec
mov
lret
movsl
cmp
jmp
rorl
fwait
pop
das
daa
jo
push
and
jle
je
lea
and
cli
mov
mov
fiadds
sbbl
adc
cmp
mov
addr16
mov
ljmp
dec
inc
popf
xchg
pop
int
lret
enter
inc
das
repz
outsl
fmuls
or
aas
sub
mov
inc
sahf
in
add
gs
outsb
sub
ret
sub
xlat
add
or
out
test
jmp
loopne
cmp
call
adc
sbbb
mov
iret
ss
cmp
bound
xchg
xchg
lret
jmp
popa
dec
outsb
hlt
dec
inc
xchg
out
test
int3
shrb
stc
xchg
nop
lea
and
or
push
mov
mov
sti
cmp
cmp
push
int
and
rol
je
push
andb
aas
xchg
roll
test
adc
cmp
cmpsb
arpl
addr16
scas
aas
add
mov
popf
mov
xchg
ljmp
sub
xchg
pop
repnz
cmc
rcrl
and
xor
aaa
into
faddp
add
icebp
jmp
test
cld
adc
movsl
orl
fdivs
push
in
xchg
mov
popf
cli
aaa
xor
dec
mov
xchg
insl
imul
fmul
sbb
sub
or
mov
push
sub
ret
add
fmull
add
mov
sbb
aaa
ja
into
xor
cmp
xchg
je
dec
adcl
sub
push
bound
xor
dec
jo
pop
shrb
sub
mov
pop
out
mov
inc
divl
subl
pop
and
pusha
inc
cmp
mov
mov
push
scas
mov
enter
in
add
shlb
adc
data16
pop
cmp
in
pop
aam
movsl
xor
enter
and
push
mov
data16
fnstsw
jae
rorl
push
and
mov
jge
cmp
test
test
add
jmp
mov
orl
mov
adc
pop
mov
daa
mov
adc
mov
fbld
rcll
add
sbb
mov
jb
outsl
movsb
lds
adc
xor
adc
inc
cwtl
in
add
andb
inc
mov
shl
cmpsb
sub
stc
pop
aas
and
jl
sarb
mov
ja
call
jns
int
pop
jg
call
mov
xchg
adc
dec
enter
fs
cmp
test
loop
ss
mov
xchg
clc
fidivl
add
mov
dec
je
cmp
aam
fcoms
or
outsl
insl
jecxz
mov
sub
add
sti
imul
or
das
pop
pop
pop
sti
push
lock
push
xor
sub
inc
and
mov
jle
inc
pop
or
shr
dec
mov
mov
out
adc
leave
in
dec
cmp
mov
dec
sbb
xchg
aad
mov
iret
mov
mov
lret
jge
jp
or
lahf
mov
mov
dec
test
ret
fldenv
mov
fiadds
call
jecxz
ljmp
add
jbe
add
cmp
jne
xchg
mov
into
lds
add
mov
jp
jmp
xor
mov
xorl
enter
and
xchg
xchg
pop
idiv
push
roll
jo
loopne
inc
push
mov
std
cltd
mov
stos
cmp
xor
push
ret
pop
push
fxch
mov
xlat
mov
rcrb
jle
cmp
insl
clc
mov
popa
mov
xlat
and
scas
cmpsb
mov
lods
inc
mov
int
fsubs
cmp
xor
inc
add
dec
movsb
cltd
xor
mov
xchg
add
jns
sbb
pop
lock
jmp
push
mov
xchg
scas
subb
cmp
ljmp
pop
jo
cmc
sbb
movsl
ret
xor
and
or
call
mov
xor
jns
and
add
shll
add
cmp
dec
cmc
mov
mov
aaa
cltd
std
adc
push
mov
ss
push
aam
movsl
stos
add
imul
fucompp
test
push
imul
outsl
push
dec
xlat
push
in
rcl
jl
pop
in
icebp
xchg
jp
fdivrp
mov
mov
add
push
jbe
cmp
fisubl
pop
fdivrs
ret
push
in
mov
andl
jg,pt
pop
mov
dec
pop
push
cld
nop
daa
enter
xor
xchg
xchg
xor
sti
inc
addb
scas
fisttpll
js
lea
sbb
sbbb
sub
fbld
push
dec
sbb
mov
push
push
add
or
pop
mov
jg
push
push
pop
or
cmpsl
mov
jle
les
cs
pusha
and
test
mov
mov
pusha
lret
enter
xchg
sub
repz
add
out
xlat
aam
nop
jp
leave
cmpsl
xchg
add
outsl
subl
clc
mov
adc
push
cmpsl
add
and
dec
xchg
fprem
pop
fimull
or
les
ds
pop
add
inc
xchg
ret
flds
cmp
lret
insl
movsl
movsb
cmp
rclb
insl
cmc
mov
pop
push
inc
aam
sbb
pop
daa
cld
xchg
xchg
divl
mull
inc
adc
pop
sahf
sbb
lret
jns
test
cld
ja
fnstsw
pushf
popf
mov
mov
testl
daa
insl
jo
insb
mov
pusha
mov
pop
decl
lea
rorl
sub
mov
sbb
test
inc
ds
jecxz
mov
nop
pop
xor
sub
dec
sub
scas
push
mov
lock
in
repnz
cwtl
xor
pop
nop
push
mov
mov
popf
icebp
dec
das
shl
push
je
mov
inc
mov
mov
les
loop
xor
cmpsb
pop
jecxz
jne
jp
rcrb
lea
rclb
xor
into
ss
pop
cli
cmp
lds
jmp
aam
mov
and
rorb
push
out
test
outsb
out
push
cmc
pop
sti
outsb
dec
push
pop
fdivl
popf
popf
dec
jmp
iret
and
rorl
inc
push
jmp
pop
shlb
fnsave
push
hlt
movl
out
icebp
repz
flds
mov
jg
jb
les
stc
push
cltd
push
das
xchg
adc
insb
dec
scas
xchg
cs
pusha
pop
adcl
mov
xorb
push
pop
mov
imul
sbb
mov
jne
adc
add
and
inc
or
gs
cmpsb
dec
popa
mov
loopne
mov
inc
cmp
insl
pushf
pop
lds
movsb
lret
mov
mov
out
and
push
and
xor
mov
out
xor
aaa
call
xor
jns
inc
adc
das
xchg
sub
jbe
dec
pop
mov
int
push
mov
out
dec
out
inc
sbb
dec
jmp
ja
cmp
ficompl
push
testb
ds
pop
adc
or
outsb
add
lods
call
xor
pusha
sti
jae
and
or
inc
cmp
dec
fadds
pop
and
and
cmp
ss
mov
into
or
sub
shrl
dec
mov
js
mov
fwait
and
negl
xor
jp
imul
das
enter
dec
or
ljmp
ss
pop
inc
popa
cmp
daa
push
test
aad
push
rclb
mov
mov
cmp
xchg
inc
out
fwait
mov
and
stos
xchg
pop
cli
ss
mov
clc
mov
and
popa
xorl
adc
xchg
adc
pushl
or
mov
dec
sub
ret
add
aad
jle
dec
dec
adc
aad
les
dec
mov
xchg
mov
outsl
mov
mov
xor
sub
xchg
pop
imul
mov
push
cwtl
push
repz
cmpsl
xchg
filds
sub
lds
mov
pop
icebp
clc
aam
inc
ret
pusha
js
xchg
add
dec
inc
sub
shlb
fstps
mov
and
mov
xor
cmp
loope
mov
sbb
jle
mov
pop
xor
jp
cld
fwait
test
mov
das
mov
hlt
jle
pop
loop
test
out
mov
mov
test
pop
mov
xor
mov
imul
ret
ja
bound
xchg
iret
dec
stos
pop
push
inc
sub
mov
arpl
pop
test
insb
jle
or
ret
or
mov
xor
xchg
push
subb
cmpb
mov
aaa
out
leave
roll
leave
es
sub
mov
xchg
rorl
in
xchg
sbb
lret
jl
mov
mov
cmpsl
inc
stos
mov
dec
add
test
inc
in
lret
mov
mov
inc
push
cmp
mov
stc
fldt
or
fdivrp
xor
and
mov
lods
mov
arpl
outsb
xchg
ja
loop
aaa
pop
jns
add
jle
loopne
xchg
adc
dec
jno
pop
lret
jle
jo
in
call
cs
mov
jnp
mov
xor
jle
inc
mov
mov
sub
mov
int
push
lds
sbb
xchg
pop
cmp
ss
push
dec
cmc
adc
pushf
inc
pop
xor
jge
mov
add
mov
lret
jmp
fstps
stos
aam
push
cmp
mov
add
sbb
cmp
mov
inc
xchg
sar
or
mov
cmp
hlt
fnstenv
dec
negl
sar
adc
outsb
jbe
out
add
lret
adcl
or
pusha
cmp
inc
push
push
add
jbe
push
mov
iret
stc
cmc
push
sub
test
sub
xchg
sti
mov
mov
scas
pop
in
push
adc
rclb
push
mov
mov
call
popa
mov
pop
shrb
add
es
ljmp
repnz
clc
inc
cmpsl
rcrl
inc
lret
out
dec
popf
cld
mov
mov
adc
mov
lods
bound
lret
jge
cmp
stc
jnp
add
popa
mov
jge
lods
sub
aam
sub
add
fsubrs
adc
inc
bound
in
aaa
push
jmp
push
sub
push
inc
fld
mov
inc
or
jmp
push
lods
out
lea
xor
cmp
push
nop
mov
outsl
push
stc
push
jo
mov
test
jb
insb
cmpb
cmp
loope
out
fs
int
dec
movsb
mov
add
mov
lods
push
mov
aas
mov
shrb
fidivrs
mov
loop
lret
shlb
adc
or
loopne
decb
push
not
mov
jge
in
mov
sahf
pop
mov
cltd
jge
imul
mov
scas
xchg
inc
mov
xchg
in
pop
mov
cmp
xor
cmp
mov
shll
mov
mov
cmp
ret
add
inc
and
adc
leave
ja
sbb
ljmp
loope
inc
cli
adc
test
mov
loop
mov
testb
push
shrl
inc
push
adc
and
cmc
pop
repz
adc
jae
ss
inc
fidivrs
mov
jmp
xor
sub
jns
jno
lds
outsl
push
cs
sub
nop
mov
mov
mov
dec
scas
pop
jns
test
mov
pop
adc
sub
pop
cltd
push
and
inc
imul
sub
dec
fcom
mov
xlat
sbb
aad
movsb
push
xchg
sub
push
push
push
mov
movsl
push
and
jne
out
xchg
adc
jo
push
adc
cld
push
jns
adcl
ja
fiadds
shlb
push
daa
iret
popa
js
pop
xchg
shll
dec
cmp
jnp
dec
lahf
das
push
test
mov
and
aad
pop
stc
in
jmp
loope
mov
cmp
ret
mov
and
test
and
cmp
sbb
js
shl
test
sbb
pop
mov
mov
addb
mov
repnz
cmpsl
fistl
dec
scas
aaa
inc
cmp
cwtl
inc
pop
sbb
sbb
jg
push
inc
push
add
sub
mov
cmpps
xchg
pop
pop
mov
test
cmpsl
push
dec
lock
push
out
pushf
xor
aaa
push
repnz
fwait
push
mov
out
adc
sub
jmp
adc
call
mov
into
or
jne
push
test
mov
dec
adc
mov
and
pusha
cmp
aad
lcall
ret
sbb
xchg
les
sahf
jno
cld
sub
mov
adc
xchg
mov
push
sub
out
xchg
clc
mov
mov
cwtl
aaa
into
xor
ja
stos
scas
out
cs
lret
add
lcall
in
stos
pushf
or
dec
fldenv
es
fs
add
popa
or
and
push
pop
xchg
sub
xchg
addr16
mov
aad
xchg
dec
shrl
mov
lock
adc
shrb
or
loopne
out
or
sub
jns
pop
jne
adcb
jle
insl
jae
lahf
fiaddl
gs
or
xchg
mov
inc
mov
xlat
popf
jecxz
cmc
dec
mov
xchg
call
inc
lret
int3
popa
dec
dec
rcl
shrb
dec
fs
xor
sub
cmc
pop
leave
jnp
lret
mov
outsb
dec
jg
pushf
dec
xchg
xorb
or
mov
push
sbb
dec
iret
das
fldl
cmpsb
in
push
movl
mov
rcll
push
test
rorb
xchg
adc
aam
xor
cmpsl
push
inc
scas
stc
xchg
or
cmp
repz
mov
inc
push
cmpl
popa
lahf
cli
movsl
inc
pop
outsl
jns
jb
inc
sub
cmp
dec
jg
mov
mov
jg
cmp
nop
cltd
movsb
cmp
movsb
lods
mov
cmp
push
sbb
ds
or
pop
dec
cmp
pusha
jp
jbe
aas
outsb
lret
and
dec
push
jno
stos
and
sahf
xor
jbe
jle
mov
lahf
push
push
jmp
pop
sbb
mov
fldenv
negb
adc
xchg
xor
movsb
mov
dec
mov
inc
sub
mov
ja
cli
inc
ds
xor
ja
jg
push
out
shlb
rcll
js
lret
and
xor
lret
adc
and
test
mov
inc
jecxz
fs
dec
mov
push
push
or
xchg
and
and
cmp
insl
jmp
fcoms
mull
sub
leave
inc
loopne
cmc
ljmp
pop
mov
mov
push
jo
push
and
shl
shl
sbbb
sub
push
xchg
js
and
fimuls
sub
cltd
push
xchg
rolb
add
jmp
lods
test
and
dec
je
in
sub
adc
insl
xlat
push
mov
jne
xchg
inc
add
sub
test
and
mov
inc
addb
jmp
leave
dec
push
cmp
pop
outsb
jnp
inc
push
out
pop
mov
pop
pop
and
push
xor
mov
movsl
jno
inc
addr16
into
push
xchg
in
mov
dec
out
and
jb
shrl
dec
jns
push
stos
or
mov
xor
jecxz
ret
bound
pop
enter
cmp
and
and
pop
push
inc
cltd
test
pushf
xchg
out
test
mov
hlt
inc
pop
mov
out
jns
xchg
aaa
je
scas
xor
dec
mov
jp
add
ret
pop
jp
lret
sub
ret
pop
pop
aad
popa
mov
loope
ret
cli
popl
insb
adc
mov
movsb
jnp
cmc
nop
icebp
inc
test
loope
enter
sbb
rclb
push
mov
xor
cs
inc
mov
fs
arpl
jns
pushf
add
xchg
cmc
iret
cs
test
popf
sub
adc
mov
test
mov
or
push
dec
sahf
popf
div
mov
push
push
adc
xchg
xor
jmp
adc
push
jnp
test
in
sub
or
jae
mov
filds
mov
xor
aam
cmp
lcall
inc
scas
lock
insl
and
jmp
jl
add
subb
add
lret
sti
mov
sub
and
push
sub
and
jmp
into
inc
add
pop
ds
fdivrl
push
xchg
mov
adc
jnp
fldcw
int3
pusha
subb
rorb
mov
fiadds
jmp
in
nop
adc
adcl
aas
daa
mov
and
dec
pop
mov
lods
dec
lods
fnstsw
cmp
xor
shll
xor
xor
pop
xor
xlat
loope
mov
mov
add
xchg
jns
loop
movsl
adc
add
push
push
inc
sahf
sbb
xchg
jae
sbb
je
clc
sahf
xchg
fstl
stos
call
packsswb
lcall
mov
xchg
test
mov
out
push
test
int3
sbb
cmp
movsb
sbb
int
cmp
packuswb
sahf
and
shll
repnz
mov
sbb
sub
sub
jns
xchg
in
shll
xor
fs
jle
sbb
addl
push
jns
mov
add
xor
push
arpl
insb
inc
mov
pop
daa
cmp
inc
cmp
int
and
rcll
fmull
jb
push
jo
es
jl
addr16
mov
mov
popa
pop
sub
dec
dec
sahf
sahf
dec
add
push
fwait
nop
push
xchg
and
xor
adc
push
dec
out
in
pop
lea
mov
sbb
out
ja
xchg
jae,pn
xchg
or
imul
mov
cmp
and
xchg
cs
xchg
sub
fnstcw
loopne
leave
pusha
repz
jbe
cmp
cmp
xchg
fs
mov
cmp
notb
push
sahf
jp,pt
inc
out
ret
ss
call
ret
repz
mov
insl
movsb
in
test
add
push
mov
fnstsw
cld
dec
sbb
or
jbe,pn
jle
xorb
or
js
mov
fcompl
lcall
ss
jp
inc
mov
mov
ja
mov
sarl
inc
shlb
pop
cmp
iret
es
pop
dec
cmpsl
mov
int
roll
aaa
mov
into
lcall
dec
jns
pop
mov
pop
jge
adc
js
aaa
jle
sahf
in
pushf
mov
or
sub
mov
addr16
lods
sub
ss
push
jecxz
fld
ja
stc
cmp
mov
sar
sbb
ljmp
pop
dec
pop
mov
je
xor
rcrb
pop
mov
daa
lods
mov
lret
pop
push
mov
pop
lret
push
cmc
cmp
adc
fstpt
jne
iret
das
loopne
loopne
push
sub
add
inc
mov
addb
xor
scas
xor
stos
mov
push
xor
or
lods
xchg
add
and
lret
push
aas
push
movb
push
iret
int
xor
mov
mov
cltd
out
test
inc
insl
les
and
push
out
pusha
int3
repnz
scas
add
in
and
mov
stos
insb
fbld
and
sub
or
int3
mov
push
add
pop
cmp
mov
stc
cmp
imul
sbb
dec
in
test
lret
sbb
xchg
jmp
push
xchg
mov
pop
add
mov
pop
sti
jbe
or
jbe
mov
jae
fdivrl
jle
adc
push
jae
fwait
and
adc
add
cli
sub
cmpsl
negl
or
push
adc
iret
add
cmp
loopne
xchg
add
repnz
sahf
pop
ret
hlt
and
mov
and
andl
jl
add
or
or
and
inc
push
in
data16
xchg
enter
jg
mov
xchg
arpl
pop
js
scas
movsb
jl
por
std
scas
mov
lea
test
inc
into
pop
pop
das
push
in
jne
push
xchg
stos
cltd
xor
xchg
icebp
mov
mov
add
adc
jnp
loop
fidivs
pop
add
jmp
push
mov
ja
insb
rclb
push
leave
sti
mov
xchg
xchg
jns
push
es
pop
repz
cwtl
xchg
pop
sahf
je
insl
mov
sahf
outsl
add
mov
push
adc
cld
inc
xor
xor
and
out
mov
addr16
cmp
xor
inc
mov
dec
adc
es
cwtl
inc
jg
jne
lret
je
push
je
test
sub
push
mov
jne
cmp
sbb
int
xchg
les
push
fpatan
cs
cmp
push
push
fnsave
sahf
xor
cwtl
or
inc
adc
cmp
cmpsl
dec
lods
jl
loop
fisubs
xchg
sbb
andb
sub
enter
aad
sbb
lcall
sarl
mov
jo
ret
jbe
mov
mov
ret
pop
lahf
push
nop
stos
sbb
fadds
add
leave
je
movsl
movsb
pop
adc
xchg
mov
popf
xor
push
push
dec
pop
lods
nop
jbe
cmp
pop
out
dec
pop
lahf
repnz
add
push
xor
push
shl
aas
and
inc
dec
call
addr16
cltd
cmc
fcomip
and
xchg
scas
ficoms
jge
nop
lret
fistps
inc
push
movsb
jl
mov
subb
rcrl
idivl
stc
fistpll
aad
push
aaa
push
mov
inc
push
add
imul
push
aaa
pop
and
pop
xor
xchg
pop
jge,pn
test
mov
jmp
shll
inc
xchg
out
lcall
mov
fnstcw
jb
ret
pop
fimull
inc
cli
jl
loope
ret
jl
jecxz
fistps
mov
jo
int3
cmpsl
imul
push
test
loopne
jnp
mov
push
jge
jbe
inc
test
test
adc
inc
lcall
inc
clc
cmp
push
mov
or
enter
sub
fbld
jae
push
lock
add
in
movsb
inc
or
pop
sub
dec
push
int3
add
xorb
mov
mov
mov
sbb
mov
push
inc
mov
mov
xchg
jnp
lcall
dec
adc
mov
movsb
sbb
sbb
call
in
mov
adc
push
popa
xor
xchg
push
enter
or
fs
push
pop
mov
and
aam
sub
cmp
loopne
push
in
aad
hlt
cmp
lds
jo
repz
scas
xor
lahf
cmp
ja
or
xchg
and
shrb
sbb
and
jp
fiadds
or
push
pop
out
test
add
dec
cmp
or
pop
cmp
push
popa
xor
aaa
cltd
arpl
in
stos
mov
and
test
cmpsb
adc
mov
mov
mov
cs
testb
push
push
icebp
or
es
jo
cmc
mov
sub
lcall
push
push
cs
in
insl
xchg
fists
xor
repz
fs
inc
mov
lods
es
in
sbb
sarl
shrb
xchg
xor
fisttps
xor
cmc
sub
mov
pop
and
push
mov
xchg
xor
adc
fwait
lods
inc
mov
mov
gs
lds
cmc
xor
imul
mov
mov
sbb
mov
les
ljmp
stos
fcmovb
sbb
pop
push
sti
xor
xchg
outsb
jle
imul
test
jle
cmpsl
test
out
xor
xchg
ror
inc
sub
xchg
or
addr16
push
daa
popa
push
lods
shl
ds
out
movb
pop
jge
sub
ss
mov
mov
icebp
sub
mov
jl
mov
fcmovbe
testl
dec
adc
out
and
inc
stos
imul
into
das
movsl
sbb
push
push
stc
or
lret
stos
outsb
lds
int3
push
jo
insb
xchg
pop
mov
fchs
jnp
sbb
mov
addr16
vpcmpeqd
add
icebp
stos
aas
aad
aas
or
dec
outsl
mov
dec
arpl
shl
pop
rcrl
dec
and
imul
popa
or
jno
sbb
loopne
xchg
cmp
into
daa
mov
out
cltd
mov
popf
cmc
dec
loope
and
xor
outsb
sbb
stos
negl
inc
popf
and
icebp
sbb
sbb
frstor
jnp
popa
cmp
mov
cs
jno
inc
dec
sbb
scas
in
dec
mov
or
or
jge
cmpsb
lods
xor
test
int
cmp
out
insb
sub
xor
xor
les
xor
sbb
leave
jae
dec
es
lret
sbb
sti
fwait
pop
mov
adc
es
negl
mov
xor
jle
pop
push
test
aas
push
aam
cmpsb
ret
sbb
mov
lock
ds
push
lret
jecxz
adc
mov
adc
adc
lea
mov
dec
shll
sub
in
les
jle
and
movsb
pop
add
cmpsl
cmpsl
lret
test
stc
ret
jge
data16
mov
je
sub
aam
ds
push
mov
xchg
mov
jo
insb
mov
xlat
sbb
adc
and
push
je
pop
push
sub
cmc
xor
and
cld
jmp
xchg
mov
rcll
andb
shl
das
out
aam
enter
aad
jae
clc
cmp
add
sub
push
dec
cmp
dec
inc
or
mov
popa
jmp
rolb
pop
cmc
xlat
in
call
inc
shrb
call
mov
mov
pop
into
in
js
stos
add
xor
mov
ss
push
imul
jl
xchg
sub
popf
sbb
inc
mov
mov
dec
addr16
loopne
and
fs
lcall
mov
shrl
cmp
adc
dec
mov
arpl
xchg
int3
ficoms
push
pop
int3
test
fdivl
das
fsubrl
cltd
xor
in
dec
mov
jns
adc
push
push
jno
xchg
enter
out
inc
cltd
cs
sahf
sbb
inc
sbb
cmp
xchg
sub
aaa
dec
dec
iret
mov
push
insb
inc
jb
scas
mov
adc
cmp
test
xchg
movsl
test
dec
inc
or
fcomp
fcomps
imul
dec
scas
cmc
arpl
faddl
jnp
cmp
inc
hlt
lret
push
cmc
ret
mov
cltd
jmp
dec
inc
ss
daa
pop
cwtl
xor
mov
inc
and
ljmp
cli
sti
es
jne
pop
xor
adc
xor
cwtl
adc
clc
inc
lock
stos
mov
pop
imull
movsb
notl
rcl
cmpsl
sub
aad
aaa
mov
out
xor
test
sbb
cmpsl
push
cltd
popa
imulb
out
stc
mov
ret
lahf
in
rcrl
sahf
or
mov
xchg
insl
insl
cmc
rcll
xor
cltd
bound
and
xchg
repnz
or
add
push
push
sbb
push
testl
jecxz
and
push
cld
xchg
add
repz
mov
mov
pusha
cld
jno
jns
cmp
ss
les
in
in
test
fisubrs
ret
stc
add
mov
jl
clc
inc
shrl
cli
int3
loopne
setb
or
es
cmp
andb
lret
test
push
into
loop
call
cmp
mov
and
dec
lock
pop
das
push
outsb
push
insb
ljmp
sbb
xor
sub
mov
inc
icebp
sbb
sarb
or
sbb
std
jg
divl
lds
imul
cli
loop
push
fidivl
test
sahf
sub
xchg
cmp
insb
loope
pusha
rclb
sub
sub
sahf
jno
jg
dec
dec
mov
iret
gs
idivl
cmpsb
dec
jecxz
adc
cmp
mov
sub
jae
fs
xchg
adcl
ljmp
mov
fnstsw
inc
nop
mov
mov
rclb
adc
inc
aad
cli
shll
push
popf
jns
push
popf
movsl
xchg
popf
arpl
shr
out
addb
add
pop
ss
mov
mov
enter
mov
xchg
xor
jecxz
jo
outsl
inc
mov
inc
push
fidivrs
fbstp
les
loopne
adc
adc
mov
adc
sub
stos
jns
pop
jmp
fstps
arpl
mov
jmp
ljmp
lds
arpl
or
pop
mov
iret
pop
mov
pop
call
pusha
popf
sub
test
dec
and
mov
icebp
xor
andb
imul
cmpsb
aas
mov
aaa
or
jno
push
shl
es
add
xor
sub
mov
rorb
add
iret
or
test
mov
lret
int3
aas
xchg
pop
sub
inc
shlb
push
rcrb
sbb
popf
es
cmp
adc
push
test
repnz
and
cmp
int3
sbb
jae
leave
ficompl
pop
sub
cmp
repnz
stos
call
outsl
jge
lock
shl
rcr
das
mov
sbb
pop
negb
mov
sbb
call
inc
popf
adc
fsubl
subb
sbb
jae
jne
adc
faddl
jb
lret
mov
mov
stos
mov
les
inc
sub
ljmp
leave
lahf
inc
pop
sbb
scas
aas
add
push
repnz
or
xchg
pushf
fucomp
fstp
in
sbb
cmp
cmp
add
mov
or
rcll
lret
incb
and
cmp
in
divl
push
bound
and
subl
push
roll
popf
test
iret
popl
jmp
jns
les
and
addr16
pushf
leave
cmpsb
dec
fstl
xchg
outsb
aam
mov
pop
add
push
sub
sarb
xchg
pop
lods
rol
into
mov
rcl
push
int3
loop
cmp
bound
shrb
pop
cmpsl
mov
push
inc
std
pop
loop
leave
push
xor
movq
push
fldenv
fs
mov
dec
push
mov
pop
mov
pop
inc
xchg
sub
aaa
mov
xchg
mov
dec
push
in
mov
lds
pop
jae
sar
lea
pusha
push
aaa
imul
and
ljmp
les
movsb
mov
jp
jp
xor
xchg
sub
push
sub
jle
lret
das
mov
jg
xchg
push
xchg
popa
loop
xchg
push
add
je
sub
popa
ljmp
mov
mov
lock
and
pusha
and
jmp
clc
jmp
fnsave
fsts
movsl
fs
pushf
test
into
mov
pushf
ds
imul
arpl
or
add
mov
push
out
or
movsb
aaa
cmpsl
loope
scas
cltd
stos
inc
inc
fisttpll
jbe
lods
sub
mov
fdivrs
cmp
jne
and
shlb
inc
aam
mov
loope
mov
out
xchg
les
mov
mov
add
ja
cld
jnp
cwtl
jle
dec
push
jg
subb
mov
add
jae
out
cmp
push
pop
xor
push
arpl
pop
fwait
push
push
sub
bound
xchg
jg
loopne
cmpsl
loopne
pop
mov
in
xchg
mov
or
jecxz
push
stc
adc
jge
fidivrl
jbe
iret
les
jnp
ss
daa
sbb
imul
imull
rol
popa
sbb
jge
mov
aad
shl
pop
insb
xor
adc
stos
and
into
xchg
mov
xchg
das
pushf
scas
push
js
mov
cmpsl
add
mov
in
inc
test
inc
shlb
adc
jg
mov
mov
ficomps
pop
inc
test
pop
gs
sahf
mov
dec
pushf
shr
iret
aad
aaa
push
push
jle
insl
push
xchg
jbe,pn
je
std
inc
push
fldl
je
fbld
and
xorl
inc
add
xchg
jb
dec
pop
stos
rclb
fimuls
arpl
jp
push
and
jo
test
ret
mov
sbb
sbb
xchg
fsts
dec
xchg
scas
cmp
and
cli
pop
jle
js
movsl
sub
decl
bound
les
add
loop
sbb
jne
inc
movsl
or
pusha
dec
cld
lcall
jae
gs
cmp
stos
pop
fsubp
mov
sbb
aas
pushl
push
mov
and
scas
lds
je
mov
imul
mov
xchg
lods
pop
aad
and
mov
lret
jnp
ret
in
mov
pop
imul
fnstenv
out
sub
iret
xchg
push
mov
dec
cmp
cmp
mov
jae
sbb
and
call
or
jo
js
lret
cli
mov
xchg
rcr
jb
js
xchg
test
nop
ficompl
pop
stos
dec
lret
imul
fwait
xchg
pop
mov
lods
aaa
xchg
xchg
addb
pop
pop
repz
loope
repz
sbb
push
and
imul
movsb
cmp
jle
int
mov
push
sahf
inc
dec
int
repz
pop
addr16
fcoms
sbb
mov
dec
aaa
out
daa
push
sub
into
es
sbb
in
incl
lods
mov
adc
andb
xchg
mov
ret
lds
and
dec
xor
movsl
inc
repz
mov
adc
mov
mov
outsl
ljmp
das
call
dec
loop
sbb
xchg
ficompl
mov
pusha
mov
clc
out
in
push
dec
loope
dec
sbb
icebp
outsl
and
jp
ja
dec
push
popa
mov
insb
jb
push
mov
dec
in
sub
add
mov
scas
movsb
loopne
pop
iret
cmpsl
popa
mov
loope
loope
addr16
js
sub
dec
ror
cld
inc
fucomp
pop
pop
into
lods
shlb
out
mov
les
mov
xor
cmc
pop
call
lret
or
xchg
xchg
sbb
cmp
mov
push
mov
je
call
inc
inc
mov
out
cmpsl
xchg
das
les
scas
mov
dec
xchg
xchg
sbb
dec
iret
push
sub
pop
cmp
add
or
scas
sahf
lahf
mov
outsl
add
jo
rcrb
xchg
jle
dec
or
movsb
pusha
stc
dec
sbb
mov
int3
jp
fwait
sub
int3
or
mov
data16
sbb
test
pop
dec
mov
mov
rorb
iret
mov
sbb
pop
or
popf
lods
in
push
jae
ljmp
cmpb
daa
lret
orb
lret
and
add
jb
sbb
les
arpl
mov
push
sub
aam
popf
pop
push
xor
lea
xor
iret
lds
sub
ret
mov
push
cmpsl
sti
mov
sub
add
pop
xor
jle
xchg
repnz
stc
and
mov
dec
jns
push
or
int3
addr16
test
sbb
add
sub
inc
lods
xor
mov
fistl
and
mov
and
lahf
andb
pusha
divb
clc
test
daa
mov
test
mov
jne
dec
sub
andb
adc
aad
and
push
addr16
cltd
jb
mov
cs
dec
and
aam
cmp
mov
adc
dec
jl
test
mov
lea
or
xchg
adc
mov
sub
sub
aaa
stos
push
out
adc
iret
inc
enter
pop
mov
scas
jp
sbb
jno
and
cmp
pop
add
mov
movsb
mov
movb
jg
add
mov
pop
sti
jp
mov
mov
dec
lea
dec
xchg
mov
fsts
shlb
pushf
inc
mov
add
scas
jnp
frstor
repz
mov
jns
mov
jno
adc
cmp
outsb
mulb
nop
jo
pop
mov
cltd
into
cmp
jmp
sub
inc
or
shlb
and
or
fsubs
push
and
dec
push
pop
lret
inc
push
adc
adc
stos
movsb
daa
lcall
sub
push
out
ret
out
pop
cmp
hlt
and
and
cli
lea
fcmovu
mov
or
rcrb
aad
lods
mov
dec
ror
pop
pushf
cmp
ljmp
mov
pop
inc
outsb
mov
ret
outsl
lret
mov
xorl
test
ds
inc
int
lahf
dec
sub
loop
push
mov
dec
mov
sub
mov
adc
sbb
jbe
jl
mov
mov
or
out
xchg
inc
cmp
sub
push
out
faddl
sbb
pop
popa
and
dec
jp
adcb
xchg
xchg
sub
sub
and
cltd
push
out
jae
out
movsb
out
loop
sub
pop
iret
loop
imul
ds
jae
ds
cmpsl
inc
inc
in
inc
cs
inc
clc
sahf
lahf
lods
rorb
pop
cmp
sub
or
into
movsb
push
add
sarl
lahf
ljmp
sahf
dec
fcmove
xor
sub
jae
or
xor
in
lret
test
inc
jle
jl
outsl
dec
push
sbb
cmp
int
mov
mov
out
sub
ss
push
adc
outsl
dec
mov
add
xchg
jb
pop
movsb
mov
aad
or
xlat
pop
pop
daa
in
call
or
and
fildll
mov
xor
std
mov
clc
mov
ljmp
loop
fcoml
mov
shrl
dec
adc
lods
out
es
imul
inc
mov
out
add
inc
xor
jl
repz
add
and
push
out
insb
jns
jp
testl
mov
pop
xor
sahf
mov
mov
outsb
int
repnz
iret
imul
sbb
adc
push
loope
cltd
pop
inc
xrelease
and
jb
test
fdivs
adc
lcall
or
pop
mov
jg
dec
scas
sarl
es
push
je
je
movsl
repz
xchg
ficoms
into
xchg
aas
orl
testb
cmpsb
pushf
popa
mov
inc
mov
mov
inc
cltd
loop
mov
mov
dec
mov
push
inc
pop
movsl
fistpl
inc
mov
jg
or
mov
adc
sbb
repnz
pop
lcall
pop
lods
and
rcrb
mov
std
or
pusha
fwait
inc
cli
sub
mov
mov
cld
fmull
in
xchg
adc
xchg
push
and
dec
in
jg
add
sub
shl
xchg
mul
add
adc
or
cmp
jno
sbb
or
cmp
rcl
call
inc
pop
jno
xor
push
ja
cmp
mov
loope
test
std
cmp
adc
jmp
jge
inc
mov
cwtl
in
nop
dec
lret
pop
push
gs
dec
movsb
popf
ficomps
out
out
movsb
repnz
dec
jp
sub
sbb
and
or
jo
repnz
stos
push
sbb
add
cmp
sub
mov
xchg
mov
xchg
and
sub
pop
sarb
in
int
adc
push
outsb
sti
push
dec
js
scas
out
jo
andl
jecxz
jae
xchg
mov
das
out
test
icebp
mulb
jne
pop
enter
sbb
ja
mov
inc
fcmovb
lds
jle
or
mov
cld
pop
hlt
lock
jne
push
es
cmp
jo
loope
or
push
ret
jno
sarb
cmp
je
aas
cmpb
cmp
inc
xorl
loop
outsb
mov
xchg
and
aas
dec
sub
cmc
sub
aas
pop
sahf
sub
mov
lret
xchg
inc
loop
add
or
add
stos
js
shrb
sbb
or
mov
cltd
sbb
pusha
dec
lods
sub
jmp
fwait
stos
shl
hlt
inc
push
push
outsb
orl
mov
clc
mov
push
jg
outsl
jmp
lods
add
or
pop
xor
jge
fs
test
adc
push
xor
mov
or
push
push
mov
addr16
pop
add
push
lods
jp
add
dec
mov
push
lret
outsb
dec
loopne
aad
add
add
xor
nop
arpl
leave
pusha
ret
stc
shl
pushf
xor
icebp
cltd
sub
sub
popa
call
js
hlt
addr16
adc
add
call
test
xchg
jmp
add
in
sti
pop
dec
das
scas
pushl
lret
lock
bound
jmp
sbb
push
mov
std
xor
mov
insb
lret
imul
push
clc
xchg
movsb
addr16
int
stc
push
sub
mov
jne
inc
ficoms
pop
stos
sbb
ljmp
xchg
rcl
ret
fwait
xchg
dec
sbb
sahf
inc
cmp
ret
lock
and
rclb
adc
das
push
adc
jae
loop
xlat
inc
pusha
xor
sbb
mov
and
out
lds
dec
loopne
add
dec
test
pop
movsl
fadds
mov
mov
dec
xlat
pop
cmp
fmuls
add
xchg
xor
adc
or
add
pop
jmp
mov
out
mov
sbb
dec
push
pop
repz
jmp
ds
xor
dec
push
addl
sbb
mov
cwtl
dec
xchg
inc
aaa
xor
movsb
fdivrp
fwait
add
loope
xchg
mov
inc
pusha
push
xchg
icebp
or
cwtl
mov
mov
jmp
test
or
or
movsb
sub
ret
js
xor
into
insl
push
xor
push
cld
dec
jp
les
push
cmpsb
and
call
rcll
bound
add
pushf
push
int
or
cmpsl
mov
fsubrl
and
pop
std
pusha
test
xor
dec
test
fisubs
xor
leave
xchg
pop
xchg
mov
adc
mov
into
out
cld
ret
aam
dec
inc
push
scas
out
orl
std
shl
jl
push
dec
shll
mov
inc
mov
aam
add
jnp
mov
sbb
cmpxchg
or
mov
cmp
adc
inc
mov
jo
cltd
dec
arpl
mov
pusha
xor
dec
and
pop
adc
iret
shlb
sbb
jns
add
push
push
fwait
popl
pop
popa
in
ficoms
sub
fstp
jmp
xor
xchg
push
pop
arpl
mov
pop
fwait
mov
pop
dec
fdiv
inc
inc
inc
pop
rcrl
jle
jae
mov
mov
adcb
sti
icebp
sti
nop
mov
adc
xchg
enter
mov
sbb
cwtl
movsb
ss
mov
cltd
push
xchg
xor
xor
repz
jmp
jle
test
sub
jb
sbb
jg
dec
jecxz
and
in
cwtl
outsb
push
outsl
mov
mov
pop
lahf
nop
shrl
xor
xor
in
clc
add
fisubl
add
jns
adc
lds
pop
adcb
adc
dec
push
mov
push
or
and
inc
push
mov
cmpsb
lret
xchg
in
icebp
xchg
stos
cmp
fldt
cltd
cmp
ljmp
or
push
mov
mov
shr
pop
sahf
sbb
xchg
sub
add
das
mov
dec
mov
lret
fadds
jne
loop
stc
push
xor
mov
dec
xchg
sub
cmp
call
jne
movsb
jle
xchg
cmp
mov
xchg
push
insb
dec
stos
cmpsl
fsubrl
mov
inc
cmc
mov
cmp
add
es
in
push
add
je
arpl
push
lods
cmp
xor
or
std
or
std
sbb
push
pop
push
call
clc
in
clc
flds
push
fs
add
xor
sahf
sbb
je
pop
movsl
add
mov
sbb
sub
dec
mov
lock
add
lods
xor
pop
fiaddl
dec
std
pusha
xor
loop
adc
repnz
inc
jl
ja
xchg
adc
pop
aam
push
lret
ret
sti
adc
js
mov
inc
ret
pop
mov
xchg
add
jne
es
lret
pop
icebp
insb
pop
lock
xchg
mov
xor
sub
jl
lahf
mov
mov
adc
mov
or
lcall
leave
test
dec
lret
jmp
xchg
dec
out
sbb
in
sbb
test
mov
mov
ja
pop
fmull
push
movsb
jg
cmp
ret
pop
repz
loope
push
cld
jbe
das
rorb
jns
xchg
xchg
stc
test
ds
xchg
and
movl
jecxz
fistps
push
add
shl
aad
fidivs
mull
repz
daa
xchg
sub
data16
jbe
inc
imul
mov
pop
iret
js
rolb
push
lcall
xor
mov
push
out
push
scas
push
ss
pushl
push
xor
lods
pop
pop
addr16
fdivl
fs
xchg
pushf
ds
bound
fldt
rolb
rcr
lea
imul
xlat
xor
or
sbb
inc
mov
pushf
inc
sti
add
push
imul
jnp
and
push
push
mov
and
jl
movsl
scas
jecxz
enter
or
inc
sbb
dec
dec
inc
lahf
cs
xchg
test
add
stos
mov
cmpsl
ds
rorl
xchg
mov
cltd
dec
mov
jne
jmp
sub
mov
outsb
in
push
xchg
jp
loope
ja
les
jb
and
dec
pop
xchg
mov
outsb
pmaddwd
mov
imul
popf
xchg
sub
fimull
sbb
fdivrl
dec
mov
lods
imul
push
add
psubsb
xchg
ljmp
fwait
mov
or
pop
mov
mov
leave
clc
push
cmp
aaa
or
test
int
jl
pushf
std
sbb
mov
sbb
bsf
xchg
mov
jecxz
inc
mov
lock
fildl
test
mov
xchg
xchg
xor
shlb
or
fidivrs
shrl
and
xor
xbegin
fs
insl
jmp
les
outsl
rcl
sbb
insb
inc
js
inc
scas
dec
imul
push
aad
in
lret
pop
pushf
dec
aad
xor
xor
fisttps
jnp
dec
inc
out
jae
jbe
cmp
pop
stos
adc
in
shll
and
xor
push
xor
push
push
mov
cmpsl
in
xor
cmp
sub
push
xchg
idivb
test
mov
rcl
leave
lods
test
lcall
sbb
mov
jl
cmp
jnp
mov
cmpsl
cmp
mov
cmp
imul
mov
pop
aad
xchg
push
sbb
and
cmpsb
adc
mov
ret
stc
inc
dec
adc
sub
adc
loop
pop
sub
jns
cmp
add
pop
dec
add
in
rsqrtps
leave
sub
shlb
fdiv
sub
add
jo
mov
movsb
adc
mov
jmp
fildll
movsl
cld
mov
push
jae
inc
mov
repz
or
aad
adc
cld
dec
push
fs
push
std
fucomip
push
xor
arpl
xorb
popf
and
cmp
aaa
sub
dec
mov
or
xchg
add
push
push
notl
sbbb
rorl
pop
out
sbb
lds
xorb
push
and
dec
std
fdiv
sbb
and
aaa
mov
and
cwtl
rorb
repnz
mov
mov
mov
lcall
in
adc
and
xor
repnz
xchg
data16
fwait
dec
lods
cmc
fidivrl
dec
pop
jle
or
dec
out
jl
xchg
push
ljmp
arpl
fs
lods
inc
fdiv
icebp
xchg
xchg
fsts
ds
push
je
js
mov
or
jmp
jp
jo
mov
add
xor
inc
mov
mov
xchg
mov
xor
xchg
inc
fadds
push
pusha
cmp
ret
fistpl
fistps
cmc
cmp
mov
push
rorl
inc
jbe
inc
sub
mov
call
push
hlt
subb
push
or
xchg
jp
mov
icebp
fidivrl
pop
push
xor
in
xor
push
jns
dec
pop
cmp
lcall
loope
sbb
jp
pop
std
je
outsl
inc
mov
pop
jp
pop
xchg
sarl
sub
mov
std
push
out
cmpsl
cltd
scas
xchg
add
ficomps
add
divl
ljmp
xchg
vhsubps
fcompl
test
inc
fisubl
aas
pop
pop
stos
push
xchg
fmull
rclb
add
mov
fstpl
rcr
pushf
xchg
add
push
into
enter
movl
adc
push
xchg
outsl
or
jl
ds
push
repnz
and
sub
or
mov
sub
aas
push
push
jbe
in
movsl
jg
in
jmp
gs
outsl
push
imul
jp
nop
ss
sub
ss
cltd
cmp
enter
cwtl
fildl
pop
jge
inc
adc
cmp
fbld
jnp
imulb
jge
scas
js
in
inc
insb
push
xorl
data16
jb
xchg
insl
sub
mov
mov
insl
push
inc
mov
pop
and
ret
icebp
xchg
js
lods
add
pop
ret
out
xor
xchg
rol
mov
rcrb
mov
pusha
addr16
ds
stc
pop
xor
jb
mov
jle
call
movsl
jl
mov
jle
fldl
push
sbb
and
adc
push
jae
jmp
outsb
arpl
adc
cmpsl
mov
pop
mov
push
pop
cmp
add
sarb
jl
dec
inc
shll
push
repz
cwtl
fbstp
xchg
cs
adc
popf
mov
add
imul
adc
mov
cmpsl
mov
jp
aad
pop
jge
jns
call
out
cwtl
pop
mov
xchg
rclb
xchg
stc
iret
movaps
jle
push
test
and
movsb
stos
jae
clc
mov
inc
push
sbb
sahf
and
aaa
mov
dec
or
clc
xlat
fucomp
mov
mov
gs
icebp
and
xchg
daa
push
test
add
pop
xchg
or
cmp
pop
and
clc
popf
xor
mov
and
and
or
sbb
pop
stos
pop
pop
fwait
ljmp
and
inc
cmpsl
push
cwtl
call
dec
mov
decb
leave
out
call
inc
mov
ret
and
sbbb
lock
lods
std
or
fs
fisttpl
pop
scas
jns
or
mov
pusha
sub
shlb
inc
gs
jl
pop
arpl
stos
cmp
dec
in
test
aas
ror
pop
or
rcrl
loope
push
or
mov
dec
fsubr
xor
sub
mov
stc
mov
lock
or
xor
push
movsl
scas
dec
adc
mov
gs
jbe
inc
lret
mov
fcoml
jle
arpl
push
and
dec
clc
movsb
stos
jbe
add
aad
lret
sub
and
xchg
insb
adc
xlat
jle
arpl
lahf
cmpsl
push
mov
orl
nop
scas
in
push
imul
cmpsb
call
push
xchg
and
mov
dec
enter
pop
outsb
sbb
dec
push
cld
mov
loop
sub
icebp
cmpsb
cmp
cld
inc
xchg
clc
xor
mov
adcb
sub
sub
pop
xor
mov
xlat
mov
out
jbe
and
mov
jne
push
or
push
movsl
jge
ss
cmp
shl
jno
loop
mov
jle
in
loope
adc
sbb
sbb
test
or
jo
xlat
inc
in
outsb
jg
dec
mov
stc
pop
or
mov
loope
cli
jp
pop
and
leave
inc
in
in
jl
push
enter
mov
insb
or
leave
not
outsb
sbb
or
xchg
mov
lahf
mov
mov
cmp
insb
popf
mov
dec
pop
adc
fdivl
and
int
xor
dec
xchg
sti
push
pop
in
cltd
pop
arpl
sbb
pop
scas
stos
mov
xchg
cmpsl
shrd
lahf
jns
mov
sahf
cmp
outsl
mull
jb
mov
cwtl
dec
mov
or
xchg
cmp
icebp
testl
shrl
pop
sub
sarl
cltd
xor
arpl
push
or
adc
sahf
in
daa
mov
add
dec
icebp
pop
mov
jge
aas
jge
mov
fwait
insb
push
jmp
add
icebp
fistps
std
mov
xor
push
adc
pop
nop
in
fdivl
xchg
adc
ljmp
cmc
packuswb
mov
push
cltd
test
cmp
push
clc
and
mov
scas
inc
push
lret
push
js
iret
mov
pusha
jecxz
and
push
jnp
sbb
fadd
aad
data16
xlat
xorl
stos
loope
stos
lods
add
mov
inc
add
dec
out
and
xchg
mov
stc
and
adc
adc
mov
stos
mov
stos
stos
inc
loopne
test
andb
inc
lds
shlb
fs
jne
scas
cmpb
out
jge
iret
mov
pop
orb
jge
shll
int3
in
mov
pop
xchg
pop
add
pop
jl
pop
push
mov
stos
inc
scas
ret
mov
shrb
pop
dec
test
sub
fistpll
sahf
inc
jae
adc
dec
fisttps
sahf
jg
add
and
imul
or
xlat
test
pop
pop
clc
fwait
xlat
cld
pop
je
sbb
mov
adc
pop
testb
pop
xchg
or
cmc
test
add
stos
sub
sbb
int3
iret
or
stos
insl
dec
loop
sbb
clc
pushf
cld
imul
cmp
pop
cmp
jbe
pop
cmpsb
cld
xor
out
mov
xor
or
andb
jno
in
jno
sub
jno
or
mov
orl
lahf
div
mov
sbb
sub
or
in
mov
aas
cltd
and
jl
aaa
stos
ja
ds
cmp
test
fimull
nopl
inc
mov
stos
push
gs
and
sahf
fcomps
push
fwait
xchg
push
sbb
cmp
les
clc
or
test
cmc
iret
add
sbb
dec
leave
aad
aas
cmp
sub
out
jecxz
pop
test
dec
jb
in
jno
pop
out
inc
dec
je
inc
pop
sbb
cmp
and
aam
mov
cltd
jno
ljmp
mov
sub
ret
fwait
sub
pop
hlt
nop
and
aaa
imul
push
sbb
dec
inc
jg
std
shr
ja
and
push
push
outsl
jnp
mov
dec
shrb
adc
testb
add
es
pop
inc
js
adcb
inc
arpl
push
jbe
mov
mov
jbe
pop
dec
pop
shl
loope
enter
adc
aas
or
mov
aam
lods
repnz
jp
mov
lea
sub
dec
mov
xchg
sub
cmp
arpl
ds
shl
mov
or
mov
stos
inc
or
divb
xchg
push
ljmp
jno
negb
cmp
push
sbb
push
nop
mov
inc
inc
mov
enter
mov
inc
and
ss
fwait
and
pop
mov
cld
inc
mov
hlt
push
out
out
adc
add
jne
lcall
jns
orl
mov
xor
popa
jns
mov
out
mov
enter
xor
rolb
push
dec
mov
sbb
add
addr16
test
mov
nop
sahf
ja
and
mov
mov
adcb
fistpl
nop
test
pusha
lahf
cmp
mov
sbb
adc
addr16
in
adc
mov
mov
mov
cmpsb
and
jle
jns
ret
ret
cmc
dec
pop
xchg
out
pushf
and
cwtl
stos
icebp
sub
aam
andl
cmp
pop
pop
jle
subb
mov
je
mov
mov
jns
jp
pushf
inc
and
repz
movsl
fidivl
or
xor
pop
push
ja
dec
push
add
or
xchg
adc
icebp
andl
loopne
and
mov
mov
stos
xchg
call
flds
lret
jb
xchg
ds
mov
mov
xor
loopne
xor
stos
in
mov
inc
pop
out
cmp
xor
fmuls
mov
push
push
clc
push
inc
push
fldt
add
mov
adc
jbe
pop
test
ret
jl
mov
fwait
mov
scas
xchg
pop
and
adc
cmp
mov
shr
out
insb
sub
or
and
pop
push
or
stos
shll
rclb
filds
data16
sub
mov
jmp
loopne
push
inc
sahf
in
adc
pop
into
inc
inc
mov
cmp
dec
mov
sbb
imul
lods
popl
mulb
mov
scas
jp
mov
mov
xchg
mov
leave
repnz
mov
cmp
or
xchg
cs
mov
cmp
mov
nop
nop
xchg
lods
aam
sarl
jo
cmc
jecxz
mov
push
mov
ljmp
ja
dec
fstps
mov
inc
cmp
imul
sbb
daa
mov
loop
inc
inc
xor
mov
inc
lods
mov
lods
sub
mov
xor
sbb
sahf
push
outsl
xor
jb
pop
xor
add
sbb
test
imul
gs
jb
fistpll
das
pop
into
fdivl
stc
xchg
dec
ja
xor
xchg
sbb
loopne
mov
push
pop
insb
jl
sahf
outsb
cmp
test
sub
dec
and
adc
cld
cltd
mov
fstps
mov
lcall
popf
imul
jl
iret
or
imul
mov
int
ja
xor
cmpsl
sbb
mov
fimuls
sbb
in
ja
jecxz
or
adc
jno
jle
into
pop
add
mov
jno
jno
mov
jle
lods
aaa
sahf
mov
pop
lahf
or
int3
mov
mov
jnp
test
js
adc
sub
cmp
lcall
cmpb
leave
and
push
stos
jmp
and
inc
sti
mov
or
cmpsl
dec
test
mov
cmp
hlt
push
and
push
in
fwait
std
orb
negl
push
pop
add
adc
cmp
insl
arpl
mov
mov
aad
push
mov
add
movsb
xorl
jb
enter
sub
and
mov
xchg
ss
mov
aam
ret
or
sub
mov
ds
and
aas
push
mov
push
call
arpl
sbb
insb
mov
add
adc
push
mov
cld
jo
push
lods
or
dec
sbb
aaa
enter
jmp
or
shrb
loop
out
or
mov
nop
pop
mov
scas
nop
or
pop
cmc
cmp
add
mov
mov
xor
mov
call
push
jae
xchg
sub
in
sbb
test
outsb
insb
dec
pop
add
sub
mov
xor
pop
inc
push
xlat
adcb
push
pop
mov
fldcw
ljmp
and
xor
clc
pop
stos
or
push
andb
xor
lahf
je
test
or
adc
loopne
xchg
push
mov
outsl
pop
cltd
lahf
sbb
test
inc
lret
shrb
testb
clc
call
sub
mov
fcos
mov
mov
ljmp
xor
cmp
jno
sbb
aam
mov
jno
adc
clc
and
std
fldl2t
es
xchg
icebp
pop
dec
ss
rclb
pusha
outsb
inc
fstpl
mov
movsb
adc
or
outsl
push
sub
pop
or
insb
sahf
inc
inc
fldt
lcall
cmp
outsl
and
xchg
out
scas
or
pop
decl
lods
xchg
popa
xchg
xor
aad
inc
fistpl
push
test
mov
insl
cmp
popf
ret
mov
repnz
adc
int
daa
jns
aad
dec
bound
idivl
mov
dec
xchg
insb
mulb
or
jnp
mov
dec
xor
push
pusha
ja
mov
arpl
xor
sub
push
addl
je
pop
jmp
loop
cmc
mov
stos
adc
loope
ds
fwait
xchg
xor
bound
xlat
fwait
sbb
push
push
and
mov
lods
jge
inc
scas
testb
adc
mov
mov
mov
xchg
sbb
inc
sgdtl
inc
gs
js
lret
pushf
scas
cmc
mov
orb
or
jecxz
rclb
out
jbe
cwtl
mov
and
mov
movzwl
std
pusha
mov
int3
or
je
push
pop
lret
adc
xlat
in
fistpll
or
shr
push
insl
fsubrs
dec
xchg
cwtl
xor
ss
xchg
aas
pop
inc
mov
icebp
pop
add
in
add
js
mov
xchg
stos
cmpsb
inc
add
mov
pop
xlat
ret
push
cwtl
fcomip
ret
xor
rclb
or
pop
es
jmp
inc
pushf
icebp
lods
mov
in
iret
mov
shrl
jmp
gs
push
mov
mov
subl
repz
loopne
sti
push
adcl
or
dec
aas
mov
js
pop
dec
mov
rcrb
rorl
cld
pop
shr
mov
cmpsl
cltd
flds
push
add
xor
cmp
repnz
mov
add
xchg
mov
cmp
sti
fwait
subb
cltd
sti
int3
in
push
outsb
sbb
repnz
sub
fcompl
xchg
out
mov
sbb
xor
push
inc
std
xor
dec
dec
or
pop
shll
loopne
mov
aam
fimuls
sub
stc
lods
lret
lds
jo
pusha
jge
push
test
push
sbb
push
jmp
sbb
mov
add
cmp
cmp
std
popf
mov
xor
xchg
stos
push
dec
sarb
outsl
cld
mov
mov
adc
xor
pop
stos
mov
gs
push
xor
loopne
push
mov
daa
inc
pop
clc
mov
sub
sub
pushf
adc
xchg
jge
pop
mov
cmp
fidivs
loopne
clc
cmp
popa
ljmp
xlat
arpl
icebp
xor
shrb
imul
aam
scas
mov
add
push
lds
add
add
adc
fnstenv
pop
ljmp
sub
inc
daa
mov
hlt
mov
pop
adcb
pop
sbb
xlat
mov
jns
test
jns
sub
cmpsl
xor
jmp
pop
in
dec
xchg
fwait
add
int
ds
das
loop
adc
test
push
popf
cmp
mov
loop
and
pop
into
sub
push
sbb
insb
addr16
xchg
data16
cld
and
out
inc
fcomps
jecxz
jb
andl
in
imul
int
cmp
shll
imul
dec
lret
xchg
mov
xchg
add
jo
dec
jae
jbe
ret
sbb
or
and
push
mov
mov
fs
mov
xor
dec
gs
mov
dec
data16
in
icebp
jl
rcl
bound
faddl
test
in
mov
test
xor
add
pusha
hlt
dec
mov
pushl
dec
push
addr16
mov
mov
das
mov
repnz
dec
jmp
mov
stos
dec
repnz
sub
popf
xchg
in
xchg
push
hlt
in
addr16
icebp
daa
xchg
int3
dec
test
insb
sub
xor
jbe
fiadds
and
sub
dec
add
push
push
cmp
cmp
cmp
push
outsl
daa
sbb
hlt
cltd
cmp
jge
aad
mov
sub
test
sahf
or
or
in
pop
mov
negb
sub
aas
ljmp
pushf
cmp
cmp
xchg
inc
aas
pop
je
andb
pop
bswap
xor
xchg
xchg
mov
aaa
stos
sub
enter
into
sbb
push
add
mov
xlat
repz
imul
pop
icebp
and
lods
dec
pop
xor
shll
mov
or
roll
cld
in
in
popf
stc
int3
jb
call
push
loopne
lret
jle
imul
add
pop
and
in
push
add
jmp
mov
jle
lea
jne
ret
or
push
js
fdivs
imul
jae
dec
jp
xor
fsubs
aad
jb
push
jo
xchg
cmpsl
ja
shrb
test
lahf
dec
jb
daa
sub
mov
cmp
inc
lods
and
js
pop
or
add
sbb
dec
dec
testl
cmpsb
outsb
jge
mov
push
daa
lret
push
adc
mov
ljmp
mov
pop
movl
adc
pop
imulb
loop
xor
fadd
andb
push
lods
ja
push
outsl
cmp
push
dec
sarb
ret
es
push
in
aaa
outsb
push
cli
inc
je
bound
adc
es
js
pop
call
rorb
xchg
cmp
mov
or
out
lock
leave
jecxz
leave
add
sbb
mov
aaa
add
clc
dec
mov
fsubrl
cmp
xchg
jp
dec
push
cmp
in
shll
pop
std
push
jno
and
cltd
pop
xchg
fsubr
orl
jl
imul
push
roll
fwait
sub
sti
push
test
inc
adc
xor
fsubrs
aaa
insl
sbb
sahf
mov
inc
mov
mov
pop
push
inc
sub
or
add
fwait
je
mov
icebp
mov
dec
adc
adc
cmp
adc
test
mov
adc
mov
inc
jecxz
cmp
dec
sbb
out
ss
outsb
daa
inc
add
pop
idiv
mov
xchg
jge
cmpsb
sbb
js
lcall
leave
lahf
ss
xchg
inc
xor
addr16
ja
jp
bound
cwtl
leave
ja
lock
jbe
lea
xchg
mov
xlat
cmp
sbb
xor
nop
stos
rolb
mov
mov
sub
push
scas
stos
inc
pop
inc
fstp
adc
cli
jl
loop
fwait
and
mov
das
push
sbb
xor
test
inc
cmp
outsl
shlb
call
lahf
add
out
js
push
inc
mov
js
aad
iret
test
dec
pop
push
rolb
push
xchg
nop
daa
enter
pop
scas
pusha
xor
jg
loope
mov
iret
xor
loop
popf
sbb
lret
imul
fnstsw
sbb
call
testl
push
js
fmul
fcoml
jg
mov
xor
or
lcall
jno
jecxz
leave
pop
xlat
mov
negb
pop
dec
sbb
mov
ss
xlat
mov
jo
adc
or
xchg
xchg
adc
dec
and
xor
ficomps
pop
dec
xchg
aad
adc
jmp
out
jmp
movsb
out
in
fs
cmp
fcmovb
rclb
scas
push
js
mov
and
cld
lcall
in
cmpsl
dec
les
jbe
fbld
xchg
cwtl
in
out
mov
xchg
test
sahf
lods
ds
cmp
aam
hlt
cmp
rol
aad
lret
sti
cmpsb
gs
pop
mov
or
xchg
push
sbb
xor
jne
icebp
daa
push
rcl
cli
test
sub
push
jno
xor
add
pop
xchg
sub
pop
test
mov
mov
cltd
mov
fcompl
xchg
dec
dec
pop
adc
rcll
pop
shld
jo
dec
mov
arpl
mov
aas
insl
bound
inc
loope
sahf
cmp
adc
addr16
mov
inc
out
jbe
pop
cmp
outsb
push
data16
adc
out
pop
xor
push
int
cmp
inc
int3
pop
lods
mov
jae
insb
and
jno
mov
xchg
xchg
lcall
int3
sbb
jno
xlat
out
cmpsb
xchg
ds
iret
rcrb
lcall
fwait
stos
xchg
xchg
mov
inc
lahf
xchg
cwtl
xor
les
push
hlt
xchg
xchg
in
mov
xor
push
cmp
out
push
hlt
xor
shrl
sbb
mov
xchg
mov
out
rcrb
mov
fdivrs
fs
sbb
shl
decb
das
xchg
pop
adc
or
push
jo
xchg
jbe
jmp
sarl
mov
out
test
push
adc
imul
insl
cwtl
sub
jns
dec
add
cli
cwtl
fs
out
jns
mov
sti
dec
pop
mov
es
aas
test
aas
cmc
jp
arpl
loop
fsubr
cli
call
mov
xchg
sub
mov
shll
mov
outsl
mov
test
sar
sti
in
leave
pop
pop
ffreep
aad
ljmp
arpl
mov
push
sub
cwtl
mov
xor
int3
es
movd
mov
fdivs
nop
xlat
mov
xchg
clc
push
inc
push
push
sbb
sbb
mov
sti
mov
jl
adc
push
mov
data16
das
pop
data16
dec
pop
or
inc
addr16
ss
aad
insb
push
mov
push
xor
rcrb
adc
xchg
jecxz
adc
imul
jg
dec
outsb
lret
dec
add
push
mov
test
sbb
mov
cmp
inc
cmpsl
sbb
pop
imul
mov
push
popf
sbb
into
dec
xor
mov
pusha
sbb
sub
and
add
mov
in
imul
in
jns
xchg
das
jl
pop
mov
mov
adc
pop
ficomps
adc
testl
cmp
loop
adc
mov
rcll
mov
leave
lods
dec
je
mov
xor
out
ss
mov
stos
inc
sub
mov
dec
pop
mov
and
scas
push
insb
cmp
js
or
mov
jp
push
xchg
ds
mov
jb
adc
outsl
pop
clc
push
mov
aam
nop
xchg
roll
sbb
frstor
dec
popa
pop
scas
push
jmp
xchg
mov
add
ds
pop
jae
insb
dec
fmuls
setnp
sub
stc
out
mov
sbb
daa
sub
mov
dec
sarl
jnp
mov
xchg
or
lahf
cmp
and
xchg
scas
add
xchg
das
lcall
add
and
push
montmul
cmpsb
xchg
movsb
jl
lods
inc
xchg
sbb
sarl
mov
pop
mov
dec
and
in
jg
sub
push
addr16
jnp
cmp
and
xchg
daa
orl
jmp
or
into
loope
sti
sub
add
test
mov
fstps
push
or
scas
lods
in
pop
sbb
pop
dec
inc
inc
test
scas
les
bound
pop
les
add
cmpsb
mov
jge
rcl
jne
clc
punpckhbw
jnp
mov
jle
sub
or
xchg
push
inc
inc
xchg
imul
sub
cmp
test
lcall
push
cmpsl
test
bound
sub
mov
jb
cmpsl
hlt
mov
push
scas
fnsave
adc
popf
addb
movsb
fimuls
insl
ret
or
rcrb
mov
aaa
mov
sbb
fidivrl
outsl
push
jae
push
test
mov
lret
xchg
test
adc
in
loope
lahf
inc
mov
xchg
jae
pop
cmpxchg8b
xchg
and
mov
inc
xor
pop
mov
pop
icebp
xchg
pop
jb
add
xchg
xchg
cld
cmp
imul
adc
sbb
jl
push
adc
fsts
or
lods
xor
xor
sti
movsl
push
test
call
inc
jae
ja
push
mov
pop
xchg
jecxz
bound
dec
insb
mov
mov
mov
sub
push
pop
dec
mov
out
call
inc
pop
jne
mov
jg
popf
sub
bound
mov
mov
ljmp
iret
mov
outsl
xchg
xchg
dec
es
out
adc
test
sub
adc
notb
mov
jnp
dec
xchg
jp
lahf
lcall
stos
xchg
daa
fadd
int3
dec
mov
xor
push
out
outsl
inc
orl
push
inc
pop
gs
sahf
dec
xchg
rcrb
lods
add
mov
mov
inc
pop
xor
fisttpll
inc
pusha
inc
jecxz
loopne
sbb
xchg
fxch
sarb
add
out
fst
mov
xlat
jmp
aad
cmp
xchg
add
or
sbb
xchg
pcmpgtb
pop
outsb
test
dec
pop
icebp
mov
xchg
out
add
sbb
out
insb
movsb
or
imul
fisubs
call
mov
insl
jmp
gs
xor
sub
lret
sub
jg
dec
pop
cli
mov
popf
in
subl
notb
js
out
mov
mov
lret
insb
jl
push
cmc
cmpsl
jae
xchg
xor
arpl
pop
outsl
addl
iret
jecxz
icebp
xor
ds
divb
fs
andb
scas
inc
loope
inc
inc
jg
jp
adcb
mov
pop
xor
fsubrp
incl
sbb
inc
adc
jp
outsl
test
scas
ret
mov
test
mov
adc
adc
inc
jmp
mov
imul
dec
and
sbbl
pusha
lcall
lret
mov
cli
rorl
adc
jnp
sti
addb
inc
shr
clc
fsubr
sub
mov
jge
inc
rorl
xchg
outsb
clc
pushf
sbb
insb
jno
dec
push
rclb
xor
in
sbb
stos
out
popa
popa
push
nop
in
and
sbb
lock
mov
das
in
out
inc
inc
sbb
xor
std
cmp
scas
dec
sbb
sti
jmp
add
mov
mov
cmp
lds
pop
out
js
data16
sub
dec
jle
sti
test
inc
adc
shl
popa
mov
inc
test
mov
inc
insb
arpl
xchg
xor
out
orb
imul
jno
pop
fcmovne
int3
mov
imul
cmp
mov
int3
pop
das
ret
shrl
adc
dec
mov
add
sbb
pop
xchg
add
and
push
or
enter
mov
inc
in
push
lret
lret
sarl
mov
fstl
test
in
lods
fs
les
daa
mov
xchg
add
outsb
sub
or
shl
mov
sub
pop
nop
lods
mov
jmp
daa
jo
mov
xchg
xchg
vmovsldup
cmc
add
cld
jecxz
inc
dec
and
mov
xchg
in
dec
sbb
int
sbb
lods
xchg
rep
jg
mov
mov
dec
push
cmpsb
xor
pop
jne
mov
fidivs
fstpt
scas
call
cmp
cmpsl
xchg
or
loopne
dec
lock
xor
lods
xor
es
xchg
cmp
jno
addl
dec
aad
call
xor
popa
cmpsl
out
jp
pop
outsl
mulb
mov
fisubl
add
mov
mov
ds
ja
popf
sbb
ret
mov
stos
in
test
dec
aaa
cmp
divl
addl
xchg
aaa
scas
repz
and
pop
cmp
jbe
in
loopne
cltd
jge
sarl
into
cmc
lret
jae
inc
fnstcw
pop
push
cmc
rcr
pusha
ss
inc
clc
xchg
mov
jp
or
rorl
movl
stos
push
sbb
or
lock
nop
aas
sbb
pop
cmc
testl
mov
aam
daa
mov
roll
cld
pop
pusha
testl
mov
outsb
sub
out
pusha
sub
jge
dec
add
adc
lahf
daa
add
data16
jecxz
scas
aam
inc
push
sbb
mov
cmp
xor
loop
lcall
sbb
xchg
ror
push
pop
xor
and
test
mov
push
add
and
das
shll
leave
ds
dec
mov
jno
sub
xchg
scas
scas
xchg
std
int
jp
imul
pop
ja
jge
outsl
test
sbb
pop
inc
and
popf
jg
out
jge
in
xchg
jmp
leave
mov
or
xchg
test
lcall
jle
mov
and
cmp
pusha
insb
rorl
adc
dec
cmpsb
loopne
mov
out
in
negl
shl
mov
and
cmp
fisubrl
inc
cmp
cmpl
in
push
fisttpl
inc
test
les
xor
mov
out
mov
cmp
jecxz
sbb
mov
push
arpl
or
iret
loope
aas
jno
repnz
mov
push
jns
addr16
pop
icebp
test
sub
cmpsb
js
fadds
xor
and
push
ficoms
pusha
mov
cld
into
cmp
lahf
lods
pop
pop
sbbl
iret
mov
lods
cmp
repnz
xlat
fisubrl
cld
int
rcr
push
xchg
jno
ss
inc
fs
jns
fimull
imul
fnstsw
lcall
pop
xchg
mov
movsl
sub
adc
sahf
dec
rclb
and
mov
xlat
xchg
sub
jp
jecxz
insl
dec
out
or
sti
dec
cmc
cmc
pushf
mov
push
cld
or
std
dec
rclb
add
popa
and
imul
leave
jne
into
loope
xchg
jl
test
mov
stc
sub
rorb
loope
mov
mov
sbb
sub
shrb
xchg
and
lret
jl
ficompl
xchg
mov
inc
or
mov
sbb
imul
ja
mov
mov
cmpsb
insb
cli
mov
cltd
std
add
push
mov
push
sahf
inc
push
inc
lret
mov
je
lea
pop
cmc
push
test
sub
xchg
xor
cld
cmp
mov
xor
dec
test
ds
jns
daa
insl
mov
and
jmp
cmp
add
mov
pop
sahf
imul
mov
jmp
jmp
cmp
jl
cmp
pop
insl
jg
outsb
mov
stc
das
cld
pop
mov
cld
dec
loope
cmp
sbb
gs
xchg
insl
jo
test
leave
sbb
pop
adc
cltd
or
aas
push
dec
and
sbb
cltd
lahf
ss
adc
mov
lods
repnz
jmp
inc
sub
jg
fisubrl
xchg
imul
mov
adc
clc
push
sub
aas
push
out
scas
cmp
mov
cwtd
xor
ljmp
decb
in
gs
pop
cmp
lds
jp
dec
and
push
insl
and
sub
add
iret
sub
ja
in
inc
mov
mov
test
and
pop
loope
and
sahf
sub
and
sti
cli
test
test
mov
push
fmul
jge
out
out
rol
jg
icebp
mov
mov
mov
js
sbb
sub
mov
jmp
sub
add
adc
or
sbb
sti
leave
and
repnz
sbb
xlat
adc
inc
pop
sbb
and
jl
fldcw
jb
sarb
das
inc
leave
scas
in
jp
loop
xchg
das
dec
mov
fcoml
pop
cmp
and
daa
cmp
orb
aad
imul
push
push
stc
push
mov
movsb
repnz
cmp
repnz
mov
arpl
mov
loopne,pt
outsl
pop
cmp
test
xor
fs
ja
fucomp
out
sub
sti
xor
repnz
mov
gs
lret
sbb
mov
je
push
int
jnp
cmp
ss
hlt
xchg
stos
and
inc
inc
daa
or
cwtl
repz
sar
push
fsubr
inc
popa
jmp
es
stc
sarb
cmpsb
pop
pop
jg
lcall
jae
xlat
jns
or
sbb
shlb
jmp
je
mov
fstps
pop
cmpsb
cld
mov
jb
je
js
push
stos
mov
sbb
dec
in
mov
pop
and
xlat
outsb
out
mov
push
movsl
xchg
imul
and
out
out
xor
sahf
aas
or
jno
dec
pop
xlat
cmp
jo
add
push
inc
mov
jbe
ljmp
jno
mov
jbe
jge
jno
and
sub
mov
btc
out
pop
inc
ret
iret
mov
or
popa
sahf
adc
cmp
sahf
mov
add
nop
adc
cmpsl
repz
add
lcall
popa
sahf
cs
mov
xor
sub
insb
arpl
and
jae
jbe
les
xor
fisttps
lds
push
cld
ljmp
mov
push
push
lds
xor
aad
xchg
call
sarb
aad
outsl
fmul
pusha
call
les
fiadds
and
repnz
lods
lret
shl
sbb
mov
lret
xor
xor
insl
lds
or
add
push
cmp
pop
cmp
jno
add
jp
xlat
imul
sbb
inc
dec
mov
or
xchg
and
mov
dec
sbb
dec
out
arpl
jae
xor
cltd
sarl
push
int3
push
js
xor
xor
pop
iret
dec
or
or
jne
sbb
fcomps
aaa
inc
mov
ja
lock
sbb
insl
pop
jecxz
dec
mov
or
les
mov
jp
jnp
data16
jmp
ja
fidivrl
adc
roll
jb
pop
mov
fsubrp
popa
add
pushf
and
add
outsb
test
fcmovnb
inc
or
mov
fistpll
in
dec
insb
inc
or
push
adc
jne
fsubl
sahf
pushf
fldl
testl
lcall
cli
inc
inc
cltd
xor
and
xorb
inc
int3
fwait
jecxz
jnp
aas
dec
loop
in
xor
pop
xchg
jge
add
sub
cmp
mov
jnp
inc
push
xchg
fidivrs
shll
xor
mov
inc
xor
jb
dec
dec
mov
mov
push
aaa
sarl
outsl
add
scas
not
pop
pop
jne
add
popa
test
and
push
test
push
cmp
lea
test
push
fs
push
scas
gs
repnz
mov
hlt
mov
fstps
xor
pop
shrl
stc
mov
daa
stos
dec
fcoms
in
in
cltd
repz
cmp
js
scas
mov
inc
xor
add
and
mov
stos
mov
mov
aaa
xor
add
out
dec
inc
lock
fxch
popa
je
stc
mov
dec
jg
mov
xchg
jo
push
and
sbb
xlat
aaa
into
add
cmp
push
jne
push
insl
push
ss
stc
sti
cld
xchg
sub
data16
sbb
or
fisubs
test
xchg
in
pop
xchg
lret
jne
movsb
xorb
shlb
push
fldz
out
add
sub
mov
jge
dec
dec
jae
popf
lea
push
aam
out
sbb
mov
popf
mov
mov
pop
out
inc
mov
xor
outsl
mull
loope
js
sahf
cmc
aas
push
daa
ds
jb
jne
enter
dec
loopne
sbb
arpl
nop
dec
into
pcmpgtb
inc
in
add
shrd
pop
mov
jbe
mov
ror
add
xchg
test
cmpsb
dec
and
std
loopne
loopne
sub
mov
movsl
cmpsb
es
mov
inc
push
test
lcall
pshufw
pop
aaa
pop
sub
inc
arpl
dec
cmp
mov
fsubs
lret
jmp
cltd
loop
ljmp
jbe
push
fs
xchg
push
ja
fisubl
sbb
jns
ficomps
sub
out
push
inc
dec
pop
js
mov
pop
jge
mov
repnz
mov
lret
mov
sbb
sbb
out
inc
ret
ja
and
jno
clc
setle
popf
call
in
call
imulb
xchg
inc
das
loopne
fwait
dec
outsb
add
dec
andb
testb
sub
fs
je
gs
mov
xor
cmpsl
mov
mov
or
mov
push
cmc
jmp
add
repz
pop
ret
xor
and
fwait
cltd
sbb
in
andl
add
fwait
enter
xchg
sbb
sbb
imul
rolb
mov
popa
shrb
cmpsl
mov
inc
inc
loopne
push
popf
into
mov
stos
mov
mov
xlat
push
icebp
lea
mov
sbb
xlat
dec
stos
adc
loop
lock
sbb
ds
sub
and
or
push
out
aad
and
mov
pop
xor
fsubs
adc
sub
pop
xor
push
push
add
push
iret
and
or
lea
lea
loope
mov
jb
inc
lds
push
movb
pop
mov
pusha
add
repz
adc
lods
and
inc
cmp
roll
fldcw
fisttpl
and
push
xchg
xchg
inc
xchg
adc
sahf
das
xor
lcall
in
xchg
cwtl
out
xlat
xlat
insb
or
orb
xlat
test
push
mov
push
mov
fistl
cli
xchg
outsb
in
jno
sti
inc
mov
lahf
test
sub
xlat
test
lret
addr16
daa
mov
test
inc
enter
add
xor
std
pop
lret
push
insl
cmpb
jg
lahf
and
sub
aas
shl
fstpt
pop
icebp
push
lods
adc
popf
cmp
xor
arpl
adc
fstpt
cmp
lret
insl
mov
outsb
add
lods
inc
outsb
dec
push
cs
es
inc
mov
sub
push
cmp
fists
sbb
jae
scas
mov
iret
in
pop
cs
and
daa
sub
inc
lcall
repnz
ret
mov
jo
mov
sbb
loope
outsl
mov
mov
dec
fstpl
test
cld
sbb
inc
sbb
pop
mov
out
mov
fistpll
or
mov
out
adc
mov
xor
add
mov
push
jnp
dec
pop
add
mov
jge
sub
popf
xor
dec
add
mov
push
loop
pop
mov
xchg
out
xchg
fwait
pop
ljmp
mov
cmpsb
jge
mov
mov
inc
cmp
jl
cmp
test
mov
mov
pushf
xor
xor
cmp
dec
jle
clc
jns
adc
cli
and
repz
mov
lods
dec
or
fs
sub
mov
cwtl
test
rcrb
sub
lret
adc
cmc
enter
cmp
cli
xchg
in
rorb
int3
mov
sub
ret
arpl
fwait
fs
inc
outsl
add
adcl
jl
and
dec
and
nop
inc
fisubrl
cmp
jle
pop
test
loope
sahf
adc
pop
mov
adc
inc
jb
fistpll
xchg
jo
xchg
push
pop
dec
pop
clc
popf
pop
scas
cmp
mov
push
js
dec
rcr
cli
cmp
in
js
xchg
pop
fs
jecxz
mov
jmp
mov
add
popf
pop
scas
int
or
test
pop
lahf
sbb
add
insb
and
push
jmp
mov
and
push
pop
sub
ret
lcall
jg,pn
and
enter
out
xchg
test
or
jmp
add
les
addr16
jecxz
push
mov
mov
pusha
mov
lods
daa
stc
sbb
int3
and
fldt
jae
ljmp
or
icebp
push
and
mov
sti
lret
gs
adc
mov
movsb
mov
push
dec
lret
stos
cmp
xor
mov
jecxz
sub
scas
in
add
enter
call
mov
mov
stos
adc
movsb
jo
mulb
movsb
popf
push
ret
outsb
add
dec
cld
or
pop
xchg
inc
sub
imul
inc
gs
lcall
shl
dec
push
or
sbb
shrb
jnp
lcall
movsl
rolb
mov
xchg
xchg
or
stc
push
mov
xor
xor
mov
dec
bound
scas
sub
pusha
sarl
aaa
adc
loope
jle
xchg
mov
add
add
jecxz
dec
or
or
mov
dec
fbstp
sbb
adc
insb
sub
inc
rolb
lcall
xchg
jge
les
jge
in
sbb
insl
pop
cmc
mov
iret
ds
mov
test
add
popa
arpl
sbb
iret
fisubl
and
jmp
push
mov
roll
sbb
sub
pop
lods
sub
pop
sbb
jmp
dec
push
cmpsb
fdivrl
mov
mov
adc
stos
leave
pop
bnd
aaa
add
mov
sahf
imul
popf
mov
sub
inc
mov
into
sarb
pop
mov
mov
fwait
xor
int3
mov
js
int3
arpl
mov
pushl
inc
lcall
fwait
dec
lods
rorl
sub
pusha
js
mov
fadds
movsl
mov
mov
jmp
aaa
in
add
leave
and
add
cwtl
in
push
leave
test
inc
sbb
add
enter
cld
fs
aam
mov
or
xchg
bound
sahf
enter
leave
in
ja
sbb
sub
push
lcall
lock
mov
xor
or
xchg
popf
mov
jle
outsl
push
clc
or
int3
mov
pop
add
enter
lds
into
pushf
arpl
rorb
ud0
cltd
insb
lcall
and
insb
daa
cmp
push
xchg
fimuls
and
push
fisubs
cld
repz
adc
xor
push
in
add
std
orl
movsb
ja
sub
and
mov
jb
xorb
xchg
inc
xor
pop
subb
jno
xorb
mov
mov
and
inc
gs
mov
pop
sbb
int
add
es
orb
add
sbb
add
leave
mov
jg
addr16
dec
mov
mov
sti
hlt
out
lea
push
movsl
cmp
cmp
in
ret
pop
fisttps
negl
pop
adc
mov
and
pop
mov
scas
aaa
dec
hlt
xor
cmp
pop
push
insl
inc
lret
xlat
subb
lods
addr16
mov
ror
xor
leave
dec
nop
adc
fsubs
inc
or
cmp
mov
pop
push
cltd
into
and
aad
lods
outsl
lds
lret
or
outsl
lret
jecxz
inc
leave
push
ret
jle
push
lock
and
dec
and
in
dec
mov
loope
movsl
xchg
lods
sbb
stos
xor
push
jne
dec
cmp
jg
adc
aad
mov
loope
in
pop
out
fiadds
inc
clc
inc
mov
pusha
aaa
pop
addr16
shlb
es
adcb
cmp
xor
inc
fwait
and
aad
inc
testl
iret
mov
mov
shr
dec
jb
cmp
mov
icebp
fistpl
aam
lahf
xchg
shr
ret
sbb
xlat
mov
xor
hlt
addr16
mov
fcom
js
sub
cmpsb
jge
cld
cli
inc
movb
jecxz
test
sarb
lock
js
xchg
lahf
in
sub
add
rcrb
and
xchg
cmp
int
mov
bound
push
xchg
sub
xor
add
scas
jmp
or
pop
sub
iret
xchg
ljmp
pop
jl
xor
xlat
cwtl
data16
mov
pop
fdivrl
stc
push
out
mov
xlat
out
stos
or
pop
std
cmp
addr16
push
mov
insb
adc
and
xchg
cltd
test
clc
mov
ljmp
adc
fnstenv
outsl
adc
push
test
pop
jp
or
mov
adc
lret
xor
les
aad
and
xchg
pop
push
cld
pop
loope
add
sbb
push
mov
ret
mov
gs
lds
dec
mov
shrl
roll
xchg
add
and
adc
xchg
push
inc
push
mov
pop
in
ret
jns
sub
je
adcb
mov
or
stos
push
inc
mov
scas
xchg
ficompl
iret
or
das
loopne
mov
mov
add
mov
pop
ss
mov
sbb
inc
test
mov
jecxz
push
mov
loop
les
xchg
jae
and
lea
mov
rcr
imul
mov
in
sub
inc
daa
rcrl
imul
mov
pushf
xor
js
xchg
adc
pop
push
daa
addr16
test
ja
mov
xchg
add
ficomps
shrl
call
out
mov
mov
xlat
cmp
seto
dec
push
dec
pop
mov
and
dec
mov
or
push
mov
and
sarb
sbb
and
scas
mov
pop
or
or
cltd
fdiv
mov
mov
subl
fs
jbe
adc
dec
or
bound
imul
or
fs
ja
mov
ljmp
stc
call
inc
sti
xlat
out
popa
lds
int3
jg
sbb
add
add
loop
test
jae
je
cmpsl
lods
and
or
insl
int3
orl
movsl
pop
out
test
mov
inc
jp
xchg
add
iret
fcmovnbe
xchg
push
pop
jne
rcrb
jp
fstl
inc
mov
and
cltd
std
icebp
adc
mov
test
sbb
adc
fwait
mov
icebp
movsl
je
fmulp
jg
lods
pop
mov
arpl
aas
push
push
add
xor
dec
and
insl
ficomps
jnp
pop
enter
xchg
add
mov
xlat
fxch
imul
inc
jecxz
jno
subb
jns
xchg
mov
cltd
add
test
or
inc
xor
push
arpl
lds
inc
fdivl
in
push
adc
xor
jmp
mul
sti
or
add
pop
mov
nop
mov
cmpsb
ret
xchg
pop
or
adc
sbb
je
fistpll
cmp
pop
cmp
jnp
xchg
pop
or
xchg
cmpsl
dec
cmpsl
out
pop
ljmpw
mov
inc
hlt
jno
xchg
enter
cwtl
sub
mov
xchg
stos
mov
aam
stos
xor
and
fwait
inc
sub
mov
sbb
add
outsl
and
fs
in
mov
aam
dec
les
loop
jne
mov
mov
pop
subl
leave
dec
cmp
dec
inc
dec
out
bound
push
fwait
data16
xchg
xchg
jmp
cld
sbb
lods
je
dec
es
mov
mov
mov
push
sahf
popa
idivb
fwait
or
data16
dec
xor
sti
es
fcom
pop
pop
lret
mov
sbb
or
lds
inc
sub
fcmove
xor
sti
cli
fdivrl
add
int
sbb
push
insb
in
cmp
pop
jle
les
xor
out
adcl
xchg
rcrl
jae
push
cmp
in
rclb
bound
mov
push
cmp
xchg
sub
ljmp
fmull
addr16
jle
sub
and
add
lret
fistl
sbbl
xor
jmp
push
inc
sbb
add
scas
insb
inc
push
lds
xchg
pop
lea
inc
inc
cltd
stos
dec
xor
aad
mov
pop
hlt
movsl
shlb
push
and
mov
sti
in
cltd
lods
adc
mov
shll
mov
bnd
das
sbb
lea
adc
jmp
xchg
push
jbe
orb
mov
add
lcall
scas
sub
jns
inc
push
xor
adc
sbb
sub
ret
test
mov
lahf
hlt
adc
mov
lods
lcall
lret
fsub
pushf
inc
and
iret
fisttpll
xchg
mov
and
stos
jecxz
ret
cmp
fnsave
fsubs
repz
mov
pusha
xchg
stc
rorl
adc
test
xlat
jecxz
mov
andl
shrb
adc
rolb
xchg
push
pop
cmp
mov
mov
orb
out
xlat
inc
test
mov
pop
jne
in
ss
xchg
call
mov
int3
arpl
mov
mov
inc
sbb
outsb
cmp
pop
push
jo
or
imul
dec
sub
or
mov
sub
inc
fistpll
jmp
push
addr16
cltd
arpl
mov
push
and
daa
mov
lahf
inc
cmp
and
cmova
dec
xor
mov
cmp
mov
call
mov
movsb
xor
and
in
mov
enter
mov
mov
jecxz
adc
enter
or
lock
cmp
xor
bound
jge
aaa
inc
or
nop
add
nop
push
inc
dec
js
add
ficoms
xchg
xchg
jne
movsb
stos
adc
pop
xor
lahf
mov
imul
dec
sbb
xchg
negb
add
xor
sub
inc
or
push
flds
push
push
movsb
jecxz
clc
xor
mov
clc
or
or
and
inc
dec
cs
push
stos
inc
sahf
mov
inc
jnp
jbe
aam
sub
rol
xor
inc
jb
leave
int
inc
fwait
jb
adc
push
sub
ds
jecxz
sub
sub
cmp
mov
rep
push
inc
sarb
push
ljmp
das
mov
adcl
mov
out
xchg
rcrl
or
hlt
pop
imul
or
rclb
jns
lods
sbb
lahf
test
orb
and
jecxz
flds
pop
fmul
lret
cwtl
jnp
lcall
iret
cld
xlat
pop
or
iret
aas
pop
xchg
add
vmovdqa
jno
fisubs
sub
pop
stc
mov
ljmp
dec
arpl
mov
into
adc
negl
mov
mov
xor
lock
inc
fwait
int3
arpl
test
shlw
int
mov
adc
xorl
sub
sbb
fnstenv
mov
setle
add
call
sub
lods
inc
pop
xchg
aaa
jb
mov
add
sti
adcb
std
mov
mov
adc
imul
and
jp
pop
jb
dec
insb
in
push
outsl
mov
dec
cmp
dec
and
lods
lahf
in
jle
xchg
andl
mov
mov
jle
daa
pop
leave
cmp
jbe
cmp
xchg
cli
js
aaa
lds
mov
inc
jecxz
fs
mov
out
incb
out
mov
sbb
xchg
sub
ds
add
mov
cld
mov
enter
lods
sbb
rorl
insb
cmp
fs
rcr
sbb
mov
lahf
sbb
int3
inc
add
ds
mov
mov
enter
movsb
pop
push
cmp
insb
dec
fs
outsl
dec
mov
adc
les
mov
cwtl
sub
outsb
add
mov
mov
addr16
xor
jno
sub
cmpsl
out
push
dec
dec
sub
cld
dec
push
sbb
or
cmp
lods
pushf
mov
push
loope
sbb
out
sub
jns
out
mov
loope
test
pop
or
sbb
jno
cwtl
pop
cmp
cmpsb
pop
cltd
adc
dec
aaa
fcompl
and
xchg
pop
cmovg
fcomps
pop
xchg
adc
popa
aas
push
stc
push
mov
xchg
icebp
xchg
dec
leavew
sarb
clc
fisubrs
jo
push
sbb
sbb
orl
inc
orb
and
js
push
push
gs
push
imul
sbb
les
out
pop
sbb
insl
nop
loopne
dec
mov
sub
faddl
xor
xor
add
es
mov
sarb
or
insl
pop
sub
mov
pop
call
inc
push
outsl
pushf
andl
std
mov
cli
lea
mov
mov
adc
mov
in
stos
ds
jmp
cmp
dec
inc
rol
inc
lods
adc
cmp
mov
sbb
push
adc
adc
push
inc
mov
mov
loope
push
addb
data16
aad
pop
andb
adc
xorl
mov
lods
inc
ret
sti
dec
push
add
cmp
repnz
cwtl
pop
jp
lea
cmp
clc
test
roll
pop
bnd
int
mov
jp
stc
cwtl
and
daa
loope
imul
imul
ret
shl
arpl
std
aam
mov
or
push
mov
sub
xchg
sub
lods
dec
pop
xchg
xor
test
sub
mov
ss
jno
sub
jge
or
sub
adc
or
jl
mulb
xor
pop
xlat
fdivrs
push
in
das
cmp
mov
adc
pop
loopne
sub
and
inc
movsl
or
lock
sahf
out
loope
lea
jl
jge
or
dec
jle
je
jle
dec
test
mov
rcr
mov
push
icebp
sbb
add
stc
je
xlat
mov
push
push
fiadds
imul
divb
pop
pusha
xchg
int
lret
stc
dec
daa
inc
lahf
mov
mov
sub
sbb
mov
sbb
xchg
mov
shrb
sub
xor
hlt
aaa
mov
cld
fimull
aam
loopne
sbb
stc
dec
andb
mov
push
adc
enter
movsl
fnstcw
push
mov
test
cmpl
pop
adc
fwait
xor
mov
or
sbb
mov
mov
inc
in
jbe
lods
jo
or
adc
jmp
es
repz
stc
and
xchg
enter
xchg
pop
lods
outsl
daa
hlt
stc
sub
sbb
mov
adc
aam
rcll
mov
or
adc
sbb
pushf
testb
push
inc
xorb
mov
sub
jns
clc
inc
fcomps
push
cmpsl
xchg
std
fldenv
out
ljmp
pop
int3
fmull
mov
or
lods
sub
repz
jb
push
js
dec
iret
push
jno
test
ds
and
pop
insl
imul
mov
add
jp
adc
arpl
push
mov
outsl
out
call
cmpsb
mov
pop
fisttpl
xor
ljmp
jne
stos
out
icebp
or
stos
shrl
mov
repz
je
scas
mov
and
xchg
fcomps
testb
divb
int3
mov
mov
ret
mov
mov
mov
inc
push
or
dec
push
hlt
lcall
popf
daa
or
inc
mov
and
lods
xchg
inc
loope
cli
sbb
into
fsubrs
or
cmpsb
daa
bound
test
lock
dec
mov
push
popf
insb
testl
int3
shlb
test
push
stos
mov
pop
pusha
mov
push
sbb
enter
push
push
xor
out
dec
filds
test
das
jns
push
dec
adc
inc
outsl
push
fs
outsb
jbe
mov
imul
or
or
mov
adc
xchg
in
orl
and
or
in
arpl
pop
mov
pop
ljmp
mov
ficompl
out
clc
mov
shrl
fsubl
jae
xlat
pop
sahf
xchg
ds
xor
pop
mov
insb
maskmovq
negl
mov
ljmp
jo
sub
shrb
jp
nop
and
pusha
sub
shrl
pop
and
mov
aaa
push
into
or
stc
inc
insl
inc
bound
test
out
add
popf
push
shr
cli
inc
and
push
ret
leave
bound
test
in
push
jbe
test
ljmp
push
adc
cwtl
adc
ss
ss
xorl
jnp
pop
mov
push
adc
mov
nop
pavgb
movsb
cmpsb
insl
sub
cmp
addb
push
outsb
or
ljmp
mov
jecxz
xchg
mov
les
fcomps
sbbl
pop
in
jmp
cmp
xchg
or
bound
push
call
sub
sub
mov
jg
mov
or
int3
sub
mov
inc
jmp
ret
sub
xchg
jbe
dec
mov
cmp
int
scas
xchg
xchg
mov
outsb
insl
add
scas
jp
push
les
fnstenv
out
daa
inc
jp
lods
mov
dec
mov
rcr
inc
movsl
jge
pop
or
decl
hlt
mov
adc
inc
aaa
out
sbb
jne
cmpsl
mov
lods
adc
ss
movsl
push
ds
clc
movsl
adc
sub
jecxz
mulb
jp
outsb
inc
inc
pop
lret
rorb
das
xor
mov
mov
je
xchg
loopne
sub
mov
movsl
arpl
push
fadds
gs
shlb
lcall
cwtl
lods
sub
outsl
push
bound
popf
sbb
push
push
sub
aam
cmp
dec
out
adc
push
pop
push
ds
pusha
repz
das
out
ucomiss
jae
and
jle
and
pusha
push
and
mov
loope
mov
cld
jle
sahf
xor
mov
sahf
mov
mov
sbb
call
test
iret
ret
jbe
push
jecxz
dec
pop
roll
inc
mov
jp
xor
lret
popa
cwtl
jge
jnp
loopne
test
dec
mov
stos
fwait
pop
les
xor
push
dec
pop
mov
add
leave
xchg
mov
dec
push
outsb
add
and
or
jmp
aaa
pop
mov
loopne
or
sub
lcall
inc
stc
stos
mov
js
adc
sub
cmp
push
mov
rcrl
add
jns
arpl
cmp
lret
sub
jne
pushf
jp
cwtl
pop
adcl
xorb
sub
inc
cmpsl
or
sbb
addr16
xlat
call
in
insb
push
cs
mov
pop
clc
std
jns
stos
sbb
jle
xchg
mov
lea
xchg
mov
push
fwait
arpl
xchg
jne
stos
mov
ror
sub
and
sub
mov
rcrl
sbb
add
mov
sub
movl
fcomps
sbb
xor
push
call
add
inc
stos
sbb
jo
lods
popa
test
push
les
xor
fists
sub
or
sub
neg
in
roll
lret
sti
cmpsl
mov
pop
fwait
cmp
pop
lcall
movsl
jle
shrl
xor
jp
mov
leave
cli
mov
in
sub
mov
jge
push
aas
or
cs
popa
popf
popa
or
cmp
cltd
lock
ds
in
lods
jecxz
dec
add
ficoml
jae
inc
cmpsb
and
sbb
insb
js
xor
test
hlt
jg
dec
insl
cmp
xchg
sub
xchg
xor
xchg
cmp
add
ds
callw
mov
cmp
pop
icebp
add
js
pop
jbe
add
xchg
lahf
adcl
mov
cmpl
adc
in
pop
lds
mov
in
dec
in
stos
xchg
jle
jge
imul
mov
rclb
cmp
insl
test
inc
call
push
mov
cwtl
call
test
mov
lret
sub
dec
pusha
in
gs
rorl
out
popf
mov
mov
push
adc
push
movsb
pop
mov
enter
mov
enter
and
arpl
push
insl
push
fstpt
aad
cli
pop
ljmp
lock
cmc
jp
popf
imul
push
sahf
cmp
mov
jae
sub
pushf
imul
aas
mov
jne
xchg
xor
mov
adc
inc
mov
roll
pop
adc
xor
push
fsubrs
ja
jle
stos
divb
jne
jge
dec
xchg
rcr
mov
mov
pushf
xor
pop
data16
pop
xor
cmp
test
sub
es
sbb
fsubl
fldcw
arpl
mov
jge
out
gs
pop
leave
xchg
xchg
xor
iret
in
add
push
sbb
push
jb
insb
int3
xor
adc
out
push
jae
pop
call
xor
stc
enter
cmp
lods
hlt
stos
clc
movsl
pusha
and
pop
scas
push
sub
cmp
mov
mov
in
cmpsl
ds
pop
inc
data16
pop
xchg
mov
rol
or
rol
sub
arpl
mov
push
outsl
iret
jb
cmpsl
and
imul
inc
fidivs
xor
enter
cmp
and
push
push
inc
sbb
jg
cmp
outsb
sbb
pop
push
cmp
fidivs
imul
xchg
cmpsb
adcb
jp
sbb
addl
sahf
adc
cld
mov
aad
cwtl
adc
push
cmp
xor
les
push
xchg
and
mov
jmp
sbb
push
rorb
mov
aaa
mov
test
testl
jae
cltd
push
test
xchg
dec
insl
xchg
inc
insb
pusha
pop
faddl
mov
call
cmp
fsubs
mov
out
cltd
jo
xchg
fdiv
push
aas
jno
movsb
mov
lock
insl
xor
movsl
and
lock
std
adc
inc
pushf
outsl
cld
cltd
mov
gs
nop
dec
ficoms
add
jbe
xor
ss
daa
fstl
or
std
cwtl
cld
sahf
gs
ja
mov
lfs
mov
cmpsl
mov
jmp
lock
fldcw
add
cmpsb
arpl
xor
cwtl
fs
pop
dec
test
cmpsl
mull
pop
mov
inc
pop
push
mov
push
mov
bound
int
push
daa
mov
xor
inc
push
push
fidivs
pop
push
mov
stos
mov
sub
pop
mov
or
cld
fbstp
pushl
cltd
add
outsl
fsubl
push
xchg
push
fwait
stos
jg
jo
js
fs
faddl
rclb
std
test
test
clc
js
mov
fyl2xp1
test
xchg
test
daa
cmp
mov
or
cmp
jnp
xchg
mov
fisubrl
adc
xchg
push
cmp
hlt
jmp
mov
push
push
cmp
jne
or
out
xchg
ss
cmpsb
sub
jle
push
fbstp
cmc
and
sub
enter
sbb
or
ss
xchg
in
in
mov
or
and
jbe
pop
dec
mov
sub
into
loopne
sbb
fs
ror
mov
sub
xor
push
push
inc
add
movsb
ds
jge
dec
fisttpl
mov
mov
or
addr16
lea
dec
ficoml
inc
mov
adc
test
test
fimuls
insl
dec
xchg
pop
mov
dec
out
push
dec
pop
xor
rorl
cmc
pushf
cli
cmp
test
dec
rcl
shl
idivb
jns
and
pop
cmp
or
jmp
nop
sbb
fwait
scas
sbb
jl
rolb
dec
les
sub
dec
mov
pusha
ret
pop
mov
jns
stc
pop
xor
add
mov
adc
jle
stos
sti
loopne
fidivs
inc
adc
gs
popf
scas
bound
xchg
rcrw
sbb
mov
mov
and
shr
mov
mov
cvtdq2ps
mov
and
fcoml
jmp
pop
fucomip
xor
lret
pop
mov
in
cmp
or
cmpsb
daa
mov
mov
and
clc
popl
outsl
sub
mov
xor
and
bswap
mov
stos
lds
lock
jb
and
mov
in
xchg
insb
cltd
ret
push
adc
iret
lods
test
jo
cmp
mov
xlat
mov
loopne
push
mov
sub
mov
inc
push
add
shll
dec
dec
aaa
mov
push
ret
das
mov
arpl
cmp
nop
loop
sub
sbb
aas
add
or
mov
or
sti
xchg
cmp
stos
outsl
mov
xchg
rolb
push
dec
or
mov
shll
nop
mov
dec
jbe
insb
fbstp
mov
repnz
pop
out
xchg
lods
dec
decb
fcmovnb
and
mov
push
push
sahf
cmpb
cmpl
icebp
insb
ret
imul
aam
xchg
xchg
jbe
lret
cmpxchg
pop
adc
add
pop
lock
jmp
inc
add
mov
fcoml
popa
xchg
or
pop
test
arpl
leave
sub
or
outsb
arpl
andl
rcrl
lods
hlt
adc
or
cmp
mov
pushf
mov
ljmp
jno
xchg
jmp
stos
inc
movsb
mov
bound
cmp
fstpl
jno
mov
cmp
add
addr16
in
push
pop
sbb
xchg
aam
mov
outsl
test
aam
ss
or
mov
rcrl
and
jae
in
fcmovnb
insl
imul
cmp
pop
cmp
add
shll
repnz
add
scas
sbb
fadds
hlt
pushf
mov
push
pop
xor
push
mov
xor
sahf
cmpsb
push
jle
or
cs
outsb
enter
pop
inc
push
fucomp
andb
mov
inc
push
inc
sahf
sub
scas
shrl
sub
jns
pop
and
lods
inc
xchg
inc
inc
fisttpll
cmp
mov
fs
call
or
dec
sub
scas
mov
rcll
jo
inc
iret
addr16
subb
sti
xor
mov
jle
mov
jle
mov
xchg
mov
jecxz
adc
xor
mov
mov
jge
ds
push
push
jae
pop
insb
ret
jns
jecxz
js
in
insl
inc
push
fimuls
pop
out
xorb
mov
push
jg
stos
int3
add
xlat
mov
popa
jmp
or
adc
sbb
dec
js
cld
daa
mov
cmp
mov
sbb
test
stos
ss
inc
mov
out
inc
mov
fmulp
xor
cmp
mov
push
dec
lahf
ret
outsl
xorb
popl
and
iret
repz
imul
sub
cltd
lods
dec
es
loop
std
adc
out
push
sbb
cmp
mov
xchg
jb
mov
lods
mov
cmpsb
hlt
mov
pop
or
jmp
pusha
sbb
test
shll
cmpsb
push
sub
jno
std
mov
movsl
or
nop
cmp
testb
mov
stos
loop
call
ret
inc
inc
push
out
lret
outsb
mov
aaa
jbe
cmpb
and
lea
stos
pop
xor
pop
ds
clc
and
push
cmc
add
sbb
testb
or
enter
outsl
pop
pop
and
or
push
daa
das
pushf
jne
dec
lcall
and
or
sbb
xchg
aas
mov
cmpsb
in
xchg
out
sub
mov
jle
pop
jecxz
xor
mov
mov
add
popf
or
stc
stc
cmp
stc
rolb
in
add
cmp
or
mov
inc
outsb
or
sbb
jmp
outsl
inc
loop
fsubr
sub
jb
add
mov
insb
xchg
cmp
popa
add
jns
sbbl
add
popa
mov
addr16
cmc
mov
aam
fsubs
hlt
pop
cli
mov
in
sbb
fnstenv
sbb
test
mov
jbe
xor
imul
push
jne
xor
xchg
push
add
xchg
jns
mov
clc
sub
xchg
sbb
xchg
jge
outsb
adc
sbb
ss
pop
test
rcrb
add
mov
pop
pop
pop
imulb
or
arpl
test
xchg
gs
loope
fwait
mov
adc
and
push
in
hlt
dec
cltd
sarb
ljmp
in
fidivl
cmp
sahf
clc
mov
jle
ret
call
xor
xchg
jns
daa
mov
xor
mov
shr
hlt
sti
xchg
es
adc
les
mov
inc
pop
call
push
xor
out
and
out
test
mov
popf
push
add
push
lcall
iret
jg
add
xlat
js
sbb
jmp
inc
enter
push
pushf
jae
in
xchg
lds
mov
insb
gs
bound
inc
jns
cmp
dec
lcall
sbb
and
hlt
dec
sub
repz
mov
or
lea
data16
outsl
shl
and
out
or
or
les
jp
push
mov
in
mov
jae
jbe
mov
repz
push
fwait
push
ror
daa
fsubr
test
pop
dec
fildll
fnsave
and
jns
cli
jns
dec
in
test
mov
cmc
push
repnz
sbb
sub
cmp
push
or
fcoms
daa
add
test
scas
lods
adc
mov
mov
and
les
push
mov
mov
ljmp
mov
cmp
mov
jecxz
shr
pop
add
cmp
sbb
dec
sub
pop
xchg
jmp
push
jg
jnp
aam
fdivrs
cmp
push
gs
fldt
add
dec
xchg
sub
std
outsl
cmp
cmp
fisttpll
mov
adcl
inc
in
add
xchg
push
dec
lea
fisttpl
addl
and
inc
xor
lcall
outsb
hlt
inc
xchg
ja
xchg
jmp
xchg
push
add
orl
xchg
pop
pop
lods
mov
mov
js
cmpsb
jns
aam
jnp
dec
jb
daa
ljmp
push
shll
jns
and
mov
js
push
repz
cmpsb
sbbl
daa
sub
or
shrb
xchg
dec
cs
mov
fistps
jae
jp
inc
and
push
mov
or
in
mov
subb
push
ljmp
and
adc
sub
dec
cld
mov
xchg
inc
dec
push
mov
cmp
mov
jg
xor
into
pop
shl
sarb
inc
jbe
out
or
popa
stos
aad
mulb
je
push
pop
xchg
flds
ss
pop
adc
mov
outsl
xlat
scas
repz
call
mov
movsb
mov
sbb
jle
jg
mov
pusha
int3
adc
sbb
into
xchg
xchg
sbb
cmpb
sbb
gs
xchg
daa
mov
mov
pop
sbb
inc
pop
pop
xchg
add
jl
movsl
cmpsl
nop
or
insl
xor
leave
int
out
sub
in
js
jp
mov
push
je
jne
xor
scas
insb
pop
jg
daa
shrb
insl
pop
xchg
mov
inc
int
jnp
sub
or
jmp
cmp
mov
dec
jns
cmp
add
sbb
imul
and
mov
mov
inc
aas
ret
repz
add
pop
nop
sar
test
dec
xchg
push
mov
mov
xchg
sbb
mov
repnz
lcall
fimuls
stos
jecxz
or
pop
jmp
in
fidivl
lahf
mov
fdivs
dec
mov
mov
sarl
sub
fs
xchg
mov
sbbl
ljmp
inc
sub
rcrb
loope
cld
xor
fstpl
sbb
push
imul
mov
mov
ljmp
dec
and
xlat
mov
sbb
xlat
aas
add
pop
insl
xchg
sbb
mov
cmp
out
jecxz
cmp
insl
loope
call
aaa
repnz
shl
jns
cmp
je
push
add
xchg
cs
negl
xor
movsl
lds
xchg
xchg
lds
xchg
daa
jmp
jle
cmpsb
lock
rclb
and
or
xchg
fidivl
movsb
sti
xchg
repz
jmp
repz
jp
mov
add
mov
mov
or
sbb
xor
lods
push
or
inc
mov
in
imul
iret
and
cmc
mov
dec
push
in
push
dec
adc
dec
cmpsl
in
pushf
lcall
cli
xorb
xor
adc
pusha
xorl
lahf
add
out
fwait
aas
inc
imul
neg
lcall
cmp
jl
and
dec
aad
jle
loop
cli
pusha
imulb
push
push
sbb
loopne
cmp
and
push
rcll
fdivs
std
or
in
fbstp
sbb
icebp
mov
arpl
ds
or
adc
sti
push
jno
push
mov
nop
test
sub
shl
push
sbb
ds
sbb
out
aaa
push
inc
mov
xlat
icebp
sbb
cmp
push
fwait
mov
jmp
popa
je
int3
xor
and
mov
ret
sub
repz
roll
mov
in
std
pop
add
jb
dec
sbb
in
test
xorl
adc
lret
inc
int3
inc
push
data16
add
mov
gs
mov
push
push
mov
mov
das
js
loop
cmp
bound
xchg
out
cmpsl
pop
lcall
popf
je
mov
xchg
push
fistl
or
cmp
mov
arpl
mov
jno
lds
insb
imul
pop
fwait
jg
mov
xchg
sub
mov
jno
sub
cmp
fbstp
fiadds
lods
std
pop
frstor
mov
gs
adc
xor
jnp
xchg
jl
and
shlb
sub
push
fdivl
mov
inc
leave
out
rcl
scas
lea
cld
xchg
xchg
add
bound
pop
punpcklbw
and
cltd
xor
inc
clc
or
mov
sub
je
jbe
out
push
std
add
xchg
xor
jae
pop
add
mov
enter
mov
mov
popa
push
shrl
push
fs
push
xchg
shl
or
stos
xchg
aad
lret
pop
outsl
or
lds
cmp
dec
and
loop
jmp
inc
mov
sbb
add
adc
fwait
in
into
push
push
nop
in
mov
mov
cmp
orb
sub
sbb
adc
insb
xchg
das
insb
inc
mov
push
les
inc
push
push
out
stc
or
xlat
imul
sbb
jge
pusha
mov
mov
in
xchg
and
pop
lods
xchg
sbb
lahf
mov
hlt
cli
or
mov
push
lea
add
push
pushf
test
ljmp
xlat
in
lea
jmp
or
push
push
iret
hlt
xor
sbb
lcall
dec
dec
xor
call
adc
cltd
xchg
pop
je
imul
fidivs
mov
rolb
ja
push
cs
test
loope
mov
ret
sarb
mov
bound
jecxz
fwait
inc
xor
mov
shll
sahf
or
push
adc
loopne
jnp
ds
add
pushf
scas
and
mov
divl
push
jns
and
imul
mov
add
dec
sub
jae
sub
jge
orb
icebp
push
cmpsl
pushf
adc
imul
jecxz
cmpsl
daa
cmp
push
insl
mov
jns
mov
push
pop
xor
scas
fs
faddp
das
xor
mov
jno,pn
pushf
dec
push
lret
fiaddl
frstor
mov
movsb
mov
push
add
push
arpl
lods
mov
sbb
adc
sbb
xlat
pop
lods
enter
rorl
add
lcall
xchg
pop
sbbb
dec
into
xor
mov
mov
inc
out
mov
cs
cli
pop
adc
add
test
or
in
stos
and
dec
call
pop
cmpsl
jg
and
enter
push
dec
mov
adc
sub
f2xm1
push
jp
test
cmp
nop
out
icebp
sbb
pop
sbb
xchg
xlat
push
nop
outsb
lret
scas
push
push
pushf
fsubr
repnz
std
jns
mov
cld
xchg
imul
callw
adcl
inc
fcompl
mov
jae
fstp
xor
push
outsb
xchg
pop
sub
xchg
das
push
cs
mov
xchg
xor
les
add
cmp
cmpsl
adc
cmovg
je
dec
cmp
jno
push
mov
sahf
testb
fidivrl
dec
or
jae
pop
push
xchg
test
outsl
lret
outsl
out
mov
pop
pop
push
cltd
shrl
dec
adc
add
movsb
mov
push
cmc
mov
popa
push
ja
xor
and
adc
in
sahf
pcmpeqw
fwait
cmp
ds
add
movsl
mov
adc
gs
mov
arpl
fnsave
bound
mov
mov
xor
je
pop
pop
nop
dec
xlat
in
sub
movsb
adc
ret
loop
loope
xor
shr
pop
xchg
into
fisttpll
lcall
push
shrb
mov
cmpsl
adc
mov
test
xor
inc
push
sub
in
sbb
lea
mov
adc
scas
xchg
enter
mov
sbb
pusha
les
ret
imul
insb
sub
xor
rcr
ret
jge
add
into
jne
aad
and
test
test
scas
in
push
xor
xor
test
xor
lret
jb
pushf
sub
scas
cmp
mov
gs
lret
inc
push
in
xor
pop
dec
fnstsw
aaa
push
aaa
in
jbe
push
xchg
mov
xchg
add
inc
outsb
sub
xor
xchg
lret
jae
icebp
movsl
pop
mov
inc
jge
loope
push
sub
scas
outsb
lea
pop
mov
or
mov
in
lea
cmp
ss
int
push
shufps
jp
jo
sti
lock
jbe
jle
xor
mov
xor
mov
imull
pop
fiadds
inc
lods
fistps
std
xchg
insl
mov
xchg
xchg
push
pop
ret
pop
sbb
mov
popf
xor
push
out
xorl
dec
adc
mov
test
mov
loop
bound
xor
xor
mov
push
ja
shll
sbb
iret
lahf
and
imul
xor
or
icebp
push
into
das
enter
mov
into
decl
lock
clc
mov
cmpsl
mov
add
scas
aas
in
int
pop
notb
lea
and
and
and
dec
imul
push
xchg
sahf
hlt
xchg
lea
mov
in
hlt
sub
dec
into
pop
fwait
imul
sbb
sbb
and
mov
pop
shll
lods
das
rclb
lds
fdecstp
fdiv
gs
aas
pop
lock
and
sbb
sbb
xchg
popf
sub
sub
cmpsl
xor
push
fbstp
popa
push
sub
jne
mov
push
jno
xor
cmpsb
inc
add
js
mov
rcrl
fisubrl
add
hlt
andl
loop
or
mov
push
js
out
aam
rclb
jp
mov
sti
leave
push
mov
and
and
inc
fldl
dec
dec
jbe
xor
and
arpl
push
sub
icebp
lahf
jo
jnp
shrb
mov
mov
in
movsl
mov
in
call
xor
push
pop
gs
cli
popf
cmp
or
sub
jecxz
loopne
mov
mov
or
shrl
push
mov
nop
fistps
jge
push
sbb
mov
push
pop
jmp
mov
hlt
push
test
repnz
xor
int
int
pop
call
mull
inc
hlt
and
into
mov
sbbb
fsts
rclb
inc
aas
sbb
inc
sbb
xor
mov
jle
mov
pop
dec
xchg
stc
add
xor
cmpsb
cmp
xchg
loop
outsl
clc
sub
push
push
adc
insl
jle
mov
push
and
and
shll
push
hlt
adc
fists
js
dec
jecxz
mov
mov
dec
aam
inc
fstpt
xor
inc
add
mov
movsl
fists
xor
mov
push
xor
adc
daa
popa
jl
loope
pop
dec
mov
fcomip
sbb
repz
mov
iret
fwait
add
inc
xchg
mov
loopne
ficoml
pop
inc
mov
jle
call
lds
das
repnz
out
in
add
mov
mov
lock
mov
int3
daa
pop
mov
lea
cmp
or
fcmovne
clc
imul
cmp
jo
and
dec
iret
test
arpl
adc
jne
dec
jne,pt
dec
pop
mov
shl
jo
cmp
mov
add
cltd
inc
loope
nop
jle
fs
mov
enter
xchg
mov
jns
adcl
in
icebp
sub
scas
ret
inc
stc
rolb
inc
mov
jbe
pop
sbb
mov
or
dec
jecxz
pop
lret
aam
out
or
pop
sahf
jg
pop
paddd
add
fs
lds
mov
test
sbbl
push
pop
mov
imul
out
push
mov
mov
gs
cli
loopne
daa
add
outsb
sub
cli
imul
pop
gs
repnz
es
scas
decb
cs
pushf
arpl
aad
inc
jne,pt
inc
dec
mov
lcall
aam
sub
test
jno
add
xor
mov
sbb
jp
dec
out
fidivs
jbe
jb
out
scas
pop
pop
mov
sub
jns
push
aaa
hlt
add
cli
or
je
add
dec
xchg
shlb
dec
addr16
lret
add
aas
xchg
push
xor
lds
jmp
js
or
or
inc
addr16
test
ljmp
add
cmp
cmc
lods
mov
jne
cmpl
loope
dec
or
push
mov
mov
sub
repnz
movb
mov
lahf
leave
and
or
cmp
mov
ljmp
test
pop
cmpsl
push
xchg
sbb
out
pop
fistl
jmp
scas
and
jb
mov
pop
xchg
push
mov
mov
and
or
roll
cmp
xor
push
fs
mov
in
pushf
push
shlb
popa
lods
sub
leave
mov
aam
arpl
je
das
jno
fidivrs
lcall
or
sbb
add
sbb
cmp
cwtl
jecxz
xchg
mov
mov
test
pop
jbe
adc
fs
cmp
sub
dec
jbe
and
sahf
and
mov
mov
sub
pusha
cmc
mov
test
mov
icebp
js
in
cmp
cmc
outsb
movsb
gs
test
fisubrl
leave
test
dec
cltd
xor
xchg
outsb
sahf
or
adc
xchg
ljmp
subb
dec
insb
js
jge
pop
xchg
out
jnp
in
cmp
xchg
cs
push
stc
out
jae
daa
push
bound
fcompl
push
or
sub
aad
loop
int3
xchg
xorb
testl
mov
or
jle
jae
mov
inc
js
lods
mov
adc
int
fsin
insb
out
inc
mov
pop
ret
aam
pop
insb
sbb
in
mov
sub
mov
pop
idivl
and
xlat
in
sbb
dec
inc
imul
adc
xchg
xchg
repz
adc
test
push
in
shrb
call
push
jecxz
inc
adc
sbb
shrl
dec
dec
pop
repz
aam
int3
loope
iret
pop
les
addl
fs
or
cs
lahf
mov
lret
inc
pop
push
popf
mov
ret
insb
sub
dec
loopne
pop
and
cmp
clc
imul
jmp
rolb
sbbl
pop
cmova
hlt
push
add
add
es
lret
fisubrl
cwtl
push
jbe
and
jb
xor
jmp
das
lcall
fmull
mov
sub
inc
cmp
or
sbb
mov
cwtl
push
cld
xchg
scas
mov
xchg
sbbb
mov
aam
add
xchg
ljmp
test
xor
ljmp
xchg
ss
das
mov
loop
lods
mov
mov
jns
ja
and
ss
ljmp
pop
mov
insl
jnp
pop
sub
dec
sahf
lods
jbe
xor
rcrb
popf
jecxz
adc
out
inc
leave
mov
retw
cwtl
push
dec
jl
dec
mov
pop
fsubl
sub
dec
push
in
inc
sti
mov
sbb
daa
adc
xchg
dec
lret
jp
test
js
in
inc
fsubs
sub
jnp
dec
lcall
dec
or
gs
dec
xchg
xor
sbb
outsl
fiadds
adc
rcl
or
shr
lret
ljmp
mov
jae
push
stc
bsr
sbb
inc
insb
cmp
bound
imul
sbb
sbb
add
rclb
push
call
or
in
ljmp
xor
cmp
push
popa
mov
mov
lret
imul
add
test
push
iret
outsb
daa
arpl
fistpll
faddl
mov
cmp
xlat
jno
pop
lcall
adc
and
mov
dec
push
outsl
int3
inc
inc
jns
pusha
addr16
test
out
mov
cmpb
dec
dec
inc
mov
fucomp
loopne
sub
adc
pop
jae
cli
notb
add
jp
sub
pop
dec
shl
xor
bound
negb
into
add
mov
push
adc
dec
mov
push
xchg
icebp
or
sub
dec
mov
stc
je
scas
jb
jno
lahf
push
push
mov
mov
cmpsl
push
popa
jl
push
mov
gs
dec
jne
lock
js
and
test
cld
inc
loopne
stos
xor
dec
push
push
jecxz
push
or
cmp
rcl
lods
dec
movsb
repnz
add
and
inc
notl
inc
or
mov
add
mov
orl
xchg
test
outsb
call
pop
mov
and
sti
sub
push
fldenv
mov
push
pop
rorb
mov
out
push
aas
xor
jne
fiaddl
pop
mov
popa
sub
inc
jbe
addr16
xchg
mov
xor
out
adc
pop
xchg
shrl
cmc
sbb
stos
es
or
call
fbstp
cmpl
das
push
adc
add
mov
inc
and
pop
and
push
xchg
dec
push
fmuls
lds
jp
js
add
mov
shufps
pop
cmpsb
pop
mov
jbe
loop
mov
push
bound
add
mov
add
pop
mov
in
mov
mov
mov
pop
mov
ret
sbb
pushf
or
xchg
inc
mov
popa
imul
sub
or
mov
leave
das
loopne
repnz
dec
and
sti
cmp
pop
fidivl
cmp
jae
adc
adc
xorl
testb
mov
cmp
jno
ret
mov
das
and
test
popf
add
test
mov
dec
pop
pop
fiaddl
mov
into
cmp
dec
inc
push
dec
mov
enter
in
mov
pop
mov
sub
adc
cld
cmp
mov
out
xor
in
pop
icebp
mov
int3
push
mov
cmp
pop
adc
in
jae
inc
mov
mov
or
dec
mov
popa
in
ljmp
es
inc
mull
push
sarl
js
cmp
inc
pusha
mov
jne
pop
xor
cli
dec
pop
or
add
call
push
xchg
mov
enter
in
mov
fcomip
fidivrs
or
repnz
aam
and
push
pop
or
ja
push
or
ds
xlat
ds
push
xor
mov
mov
push
jbe
scas
jle
or
cld
jnp
in
xchg
movsl
adcl
add
or
or
mov
ds
jnp
inc
sahf
cmp
mov
mov
xchg
jns
lock
inc
cld
stos
aaa
call
mov
jl
fmull
sub
movsl
adc
test
test
imul
push
hlt
mov
pusha
adc
adc
add
shrb
mov
sub
sub
push
in
inc
jo
pop
xchg
pop
mov
repnz
les
cmp
and
ficompl
nop
cmp
ficoms
in
sub
dec
in
push
enter
cmc
arpl
fistl
pop
pavgw
call
sbb
outsb
adc
adc
jae
repnz
cmp
shll
jge
pop
aaa
dec
push
jne
hlt
aaa
and
dec
lcall
divb
adc
or
xlat
in
andb
xchg
lock
pop
scas
call
mov
mov
je
inc
mov
mov
xor
and
dec
les
fistpl
push
pop
xchg
subb
lds
mov
mov
lods
sarb
outsb
jne
jnp
sbb
xchg
jno
das
pop
ljmp
push
adc
gs
ds
ret
mov
cs
pop
cmp
mov
lahf
shrb
cltd
sbb
dec
repnz
or
test
enter
stos
fisubl
lods
pop
mov
mov
push
pop
mov
sub
or
cmc
out
mov
int
or
jmp
lds
in
add
dec
pop
outsb
xor
add
pop
sub
mov
dec
and
dec
sti
and
or
xchg
decb
sbb
ffree
es
mov
cltd
imul
icebp
insb
jnp
sbb
lret
lds
popa
enter
jns
addr16
lods
sbb
mov
out
fmul
fs
je
adcb
xor
jae
push
mov
orl
mov
dec
adcl
add
xchg
lcall
and
push
add
mov
in
dec
dec
or
dec
mov
mov
call
mov
out
cld
fs
add
repz
test
inc
rorl
xor
adc
mov
mov
push
lds
cmp
mov
jg
lock
and
shll
adc
mov
or
cs
aam
xor
loop
out
test
mov
arpl
cmp
roll
inc
sti
lock
rcrl
out
aad
mov
loop
pop
mov
xchg
imul
in
stos
aas
add
movsb
inc
and
xchg
decl
add
dec
add
mov
dec
fnstcw
aas
push
repz
fadds
lds
imul
push
pcmpgtd
xchg
dec
data16
fwait
pop
icebp
push
aaa
mov
mov
cmp
and
aaa
cmp
sbb
imul
lods
jl
stos
inc
clc
fistpll
data16
inc
stos
sub
repnz
or
push
push
movsl
add
cmpsl
clc
inc
sub
add
or
lcall
lds
and
xor
mov
mov
loopne
cmp
clc
sbb
pop
adc
mov
icebp
adc
aad
inc
jge
es
daa
lcall
xchg
mov
cmp
xchg
or
sub
imul
std
js
in
push
ss
jns
cmp
mov
cmp
stos
cld
in
mov
mov
xchg
das
or
lods
imul
pushl
pop
fisttpl
daa
jmp
sub
xor
loopne
or
enter
mov
push
sbb
stc
lret
sti
decb
pop
test
xchg
cmc
int3
mov
aad
cwtl
mov
mov
cltd
shrl
sarl
mov
lahf
adc
push
sarb
sbb
adc
sub
or
icebp
dec
out
scas
sub
imul
pop
cs
bndstx
xchg
test
jo
mov
push
stos
imul
sbb
xchg
dec
sbb
rol
lods
mov
xchg
imul
shlb
xchg
loope
fs
mov
in
ficoms
mov
adc
xlat
xor
mov
andl
out
cmc
cwtl
cmp
adc
pop
jno
jae
xchg
test
xlat
popa
mov
cmp
inc
rorb
daa
push
hlt
aaa
test
rcl
ljmp
mov
repz
inc
les
mov
add
fnstcw
int
cwtl
arpl
and
repnz
mov
mov
pop
hlt
addr16
jae
fmull
add
aaa
pop
stos
sbb
or
cmp
mov
test
loopne
daa
adc
xchg
lea
add
sub
repz
jne
jb
pop
repnz
jb
hlt
mov
dec
cmp
sar
jp
scas
inc
setl
mov
mov
push
or
inc
arpl
mov
jmp
test
adc
xchg
mov
adc
dec
outsb
fwait
push
push
jbe
ss
dec
mov
bnd
push
in
lods
daa
ja
test
sbb
daa
jle
inc
shrl
shrl
sbb
or
inc
pop
leave
movsl
rcr
jae
or
xchg
jl
pop
lret
bound
es
pushf
popa
js
fisubs
push
aas
mov
fisubrl
push
pop
scas
push
xchg
insl
jge
push
adc
out
cld
mov
out
lods
cmp
sub
int
addr16
xchg
pop
sbb
addr16
jge
ret
hlt
inc
add
ficoms
test
xor
cli
pop
jecxz
aaa
pop
rorl
pop
adc
jge
mov
shrb
push
adc
sub
ds
mov
scas
shr
popf
out
mov
daa
cs
xchg
lcall
mov
cmp
jg
insl
loopne
mov
cmp
cwtl
sbb
sahf
mov
push
xor
sub
call
imul
ret
roll
inc
cmpsl
stos
cmpsl
addr16
mov
fistps
jecxz
clc
lcall
filds
push
pop
jno
sub
or
psubw
xor
loop
lahf
popa
mov
lock
pop
push
push
inc
imulb
nop
push
xor
xchg
imul
mov
iret
pop
lret
pusha
xlat
loope
pop
rol
sbb
das
add
mov
cmp
sub
dec
lock
push
lods
std
in
add
into
test
inc
fbld
imul
inc
aaa
sub
loop
add
or
pop
mov
push
and
out
cwtl
inc
ret
pop
scas
rcl
mov
lahf
ret
lds
fcmove
dec
cltd
jecxz
xchg
out
int3
pop
int
mov
insl
fisttps
lock
clc
movsb
repnz
xchg
lahf
push
push
lds
stos
xor
inc
std
push
push
imul
aad
into
jne
pop
mov
push
xchg
fisubrs
scas
fcoml
inc
sbbb
sbb
push
push
cltd
cmpl
stc
test
leave
stos
fnsave
or
sub
push
or
leave
and
cmpsb
inc
or
dec
mov
lcall
cmpsb
jmp
je
adc
xor
lahf
jle
std
repz
cld
stc
mov
xchg
mov
sahf
imul
cmc
jbe
shr
stc
xor
push
dec
and
mov
ja
aaa
mov
and
and
xor
arpl
sub
leave
push
push
mov
or
scas
ret
cmp
sahf
sahf
outsl
sbb
dec
sub
mov
lods
dec
cli
jmp
lea
int
and
push
push
xchg
xor
xchg
or
sbb
mov
test
sbb
adcl
push
jne
and
and
dec
lods
test
push
bnd
dec
daa
xor
into
mov
push
cmp
rolb
push
sbb
pop
mov
int3
inc
push
int
loope
out
or
jmp
lret
stos
and
in
imull
cmp
and
jbe
imul
in
stos
out
xor
jo
shlb
popa
es
addr16
xchg
scas
call
or
pop
ret
not
dec
cmp
fidivl
adc
pushf
lea
mov
cmp
push
dec
sbb
add
pop
lea
adc
outsb
bound
mov
iret
outsb
movsl
in
jle
scas
mov
and
xchg
sbb
mov
stos
mov
shll
jp
mov
adc
test
mov
cmp
cs
mov
dec
scas
push
add
fwait
adc
int
aaa
mov
outsl
sbbl
ss
xor
xchg
cli
mov
mov
aad
test
inc
cltd
mov
mov
jb
mov
lahf
cmp
pop
ret
ljmp
or
dec
int3
scas
cli
pushf
adcl
jmp
xchg
push
cmc
mov
subl
lods
cltd
mov
mov
cltd
data16
mov
fbstp
popa
int3
mov
bndstx
mov
mov
and
sub
lods
xor
mov
add
or
mov
add
push
adc
ret
xor
out
or
inc
mov
out
aam
inc
fsubrs
ja
lea
movsb
push
gs
jmp
movsb
ficoml
add
xchg
fsts
imul
out
arpl
outsb
fistpll
xor
cwtl
xor
sub
lods
scas
daa
js
inc
pop
cmpsl
jl
push
mov
mov
aam
mov
mov
and
xchg
mov
inc
imul
pushf
xor
mov
ja
rcr
pop
push
mov
adc
stos
addr16
lcall
adc
add
jae
mov
aam
dec
jle
outsl
and
lahf
xchg
stos
xchg
pop
scas
ret
push
repnz
mov
and
outsb
movsl
mov
int3
iret
pop
pop
xor
jecxz
mov
mov
je
push
mov
cld
jmp
shl
clc
pop
sbb
andl
hlt
push
pusha
push
pop
mov
xchg
test
mov
lock
test
mov
xor
mov
adc
push
inc
jmp
mov
xchg
adc
lcall
adc
repnz
rol
std
dec
inc
fs
push
jne
mov
js
push
js
dec
stos
jnp
cld
mov
jp
fcmovbe
sahf
cmpl
fistl
int
fwait
pop
xchg
and
sbb
mov
outsl
pop
ret
subb
inc
fcoms
mov
ret
xchg
pop
jecxz
rclb
scas
sub
fisttps
jmp
jmp
mov
mov
jecxz
mov
add
sbb
idivb
pop
inc
push
pop
xor
add
sub
push
pop
or
jbe
inc
lret
jno
push
adc
mov
sbb
cmpsl
add
mov
enter
or
pop
mov
cmp
sbb
cmp
loopne
xchg
jg
dec
mov
pop
mov
dec
sub
cwtl
sti
dec
cmc
xchg
sub
out
outsb
adc
jb
sti
jb
mov
jge
leave
cmp
shll
outsl
mov
cli
dec
xor
push
js
mov
lods
cmpsb
add
das
jp
sbb
shl
push
inc
ffree
sub
bound
frstor
test
adc
mov
push
cmp
fwait
or
fucomp
insb
add
xor
mov
cmp
aaa
fnstcw
out
xor
mov
fs
addr16
sahf
nop/reserved
fwait
adc
adc
out
lods
push
pop
nop
orl
into
xor
xor
aad
xor
enter
sbb
pop
imul
repnz
loope
lcall
sub
inc
insb
jle
xor
repz
and
cltd
cmc
add
fwait
js
or
je
nopl
mov
jl
leave
mov
scas
xchg
je
test
mov
mov
adc
push
adc
dec
fwait
pop
jmp
nop
inc
ret
enter
mov
mov
add
shl
pop
sbb
bound
in
aaa
cs
pop
ljmp
dec
add
mov
or
xor
pop
push
push
outsb
fldenv
fs
and
mov
out
shll
mov
inc
add
hlt
sahf
outsb
push
pop
jl
push
fldenv
scas
test
inc
mov
popf
movsb
vmovaps
cwtl
ficoml
cwtl
sub
mov
xlat
or
aas
push
pop
imul
adc
pop
or
mov
add
mov
loop
ds
imul
cmp
nop
xor
xchg
add
test
jle
adc
or
push
out
jns
push
add
iret
sbb
mov
push
jmp
out
add
into
gs
nop
xchg
sub
mov
mov
dec
lods
inc
sbb
insb
sub
add
jle
out
dec
loope
jnp
or
imulb
and
mov
gs
testl
scas
pop
nop
jb
shlb
leave
add
push
push
xchg
push
rol
dec
adc
loopne
jo
push
aaa
hlt
out
xchg
push
jbe
lcall
xor
loope
jb
bound
sbb
lock
cmp
pop
jae
paddusw
rorb
int3
sti
sub
shrb
or
or
jnp
mov
dec
fsubl
jno
cwtl
cmp
mov
outsl
inc
and
adc
cli
mov
cmc
je
daa
cmp
cmpsl
ljmp
repnz
es
cmp
orb
jge
lret
xor
test
fcomps
aas
adc
jno
push
and
sbb
movl
xlat
ja
dec
dec
or
cmp
dec
je
call
and
ljmp
jle
jmp
test
hlt
pusha
and
mov
imul
insb
mov
popa
mov
push
int3
rol
filds
push
in
sub
fisubs
imul
mov
add
in
mov
repz
fnstsw
push
cwtl
iret
mov
fbstp
jb
sti
jne
dec
insb
mov
dec
divb
out
lods
sbb
mov
jbe
jne
imul
push
cmp
xlat
adc
sub
ds
jno
or
sti
popf
sub
les
cld
imul
andb
out
scas
dec
int
sub
enter
out
jmp
stos
jne
sbb
cmovle
pop
pushf
out
rorb
or
and
mov
cld
xor
int3
pop
ret
aas
into
mov
es
popa
test
pop
xor
inc
sbb
addr16
jno
lahf
mov
out
adc
push
sbb
jle
mov
push
inc
lds
inc
cltd
fstpt
sub
test
ja
push
adc
sub
pop
outsl
stc
jp
test
pusha
pop
xchg
cwtl
test
repnz
mov
xor
push
xor
lcall
pop
cmpb
fstp
stos
cltd
test
inc
pop
in
mov
dec
lret
fadd
ss
testl
and
repz
mov
sbb
je
sub
loope
sub
jge
jle
mov
pop
pop
xchg
lods
xor
sbb
dec
dec
idiv
fdivrs
dec
out
and
inc
ret
adc
arpl
push
into
or
mov
stc
and
fbstp
test
inc
out
cwtl
adc
popa
in
in
xchg
sti
ss
notl
sub
mov
pop
outsl
sub
xchg
movsl
decl
jo
insb
sub
jne
add
in
movsb
sbb
iret
pop
add
mov
fstpl
xor
mov
in
mov
ljmp
insb
cmp
jae
sti
out
xor
push
pop
jl
into
mov
in
je
stos
xchg
push
xchg
add
cmc
xor
fs
jl
jo
push
xchg
add
rorb
js
xor
mov
or
push
fdivrl
or
popa
mov
loope
sub
jbe
dec
repnz
in
mov
inc
jle
mov
les
movsl
push
push
mov
mov
cwtl
mov
xor
popf
imul
pushl
cmpsl
shrb
loopew
adc
mov
jno
addr16
test
jne
or
cmp
es
imul
shrb
loop
push
sbb
sbb
mov
cmp
imul
sbbl
loopne
cmp
push
in
test
insb
in
jbe
call
cmp
outsl
mov
pop
dec
cli
pusha
sbb
das
cmp
cmpsl
leave
push
loope
ficoms
mov
jle
lods
cmp
fucom
mov
sbb
lcall
push
popf
sbb
push
addr16
jge
xor
scas
ja,pn
fucomp
scas
push
cmpsl
es
repz
pop
and
mov
or
dec
repnz
loopne
pop
and
js
sti
mov
xchg
les
jmp
mov
sub
or
loopne
incl
mov
fisttpll
lods
outsl
jae
add
in
jnp
cli
jae
sub
test
push
ret
fbstp
cmpsl
outsl
sahf
and
dec
aad
popa
pop
out
out
cld
cmp
in
hlt
test
adc
mov
lcall
mov
adc
scas
cli
mov
mov
dec
cmpsb
inc
fiaddl
lods
dec
out
into
mov
mov
iret
jle
lods
inc
xchg
mov
adc
jne
pop
test
bound
jno
jnp
dec
repnz
nop
pop
lahf
adc
les
pop
movsl
xchg
add
sub
jp
add
add
das
data16
cmp
inc
mov
movsl
clc
and
bound
fsubr
and
adc
push
decb
shl
and
sub
push
dec
popa
fisttpl
mov
cmc
sub
lods
test
mov
or
push
cltd
sahf
mov
frstor
add
cld
lret
pop
fiaddl
test
jno
push
into
or
pop
clc
push
pop
pop
jge
int
in
pop
mov
push
xor
dec
xlat
lock
cmp
into
inc
fld
mov
stos
jg
scas
pop
inc
push
cmpsl
ds
clc
mov
dec
and
jne
cltd
dec
mov
aaa
xchg
les
popa
mov
cmp
test
cs
lea
push
bnd
jb
sbb
mov
das
sbb
mov
jno
outsb
rclb
xchg
shrb
nop
shl
shll
fcoms
xchg
je
jb
call
push
dec
mov
mov
cmp
mov
xlat
outsb
cmc
cmp
loop
imulb
ds
xor
in
push
mov
jge
lahf
fdivr
popf
pop
inc
popa
addb
jmp
sti
pusha
pop
xchg
sub
mov
xchg
test
jns
rcl
jo
mov
das
aaa
and
popa
push
push
lcall
cmp
stos
pop
or
push
int
mov
adc
inc
pusha
shlb
lods
inc
sub
mov
or
outsb
shl
ss
cmpsb
ds
rorl
inc
lcall
sbb
push
sbb
mov
cwtl
daa
cs
jg
stc
add
stc
sbbb
das
mov
cwtl
jb
pop
into
xor
fdivrp
push
call
int3
jecxz
sarl
cmp
les
sub
adc
orl
xchg
sub
fcomps
push
jge
add
mov
mov
cwtl
xchg
js
xchg
xor
imul
aam
shlb
jle
add
mov
ja
outsb
sbb
aad
cmpsb
mov
pushf
dec
rep
js
mov
pop
xchg
cmp
push
rol
dec
jg
mov
pop
xchg
js
rol
repz
movsb
aam
frstor
push
cmc
sub
inc
push
or
into
xchg
lea
cmpb
mov
or
mov
xor
jle
dec
mov
and
push
call
lret
rol
pop
add
lock
xlat
cmpsb
clc
jo
cmp
mov
and
xchg
adc
push
xor
inc
lds
mov
push
jmp
mov
fwait
shrb
int3
add
cmp
mov
jne
int
mov
push
pushf
push
imul
rol
jecxz
dec
lcall
pop
ljmp
sub
mov
or
mov
dec
mov
pop
fisttpl
mov
pop
or
cmp
aam
mov
cmp
testl
dec
dec
scas
jae
outsl
dec
cmp
cmp
subb
int
cli
les
lret
sarl
push
lods
jge
or
push
in
hlt
imul
mov
sbb
adcb
dec
and
inc
jae
inc
mov
stc
xchg
xor
loope
loop
add
ja
int
jmp
psraw
and
add
imul
xor
jg
sub
dec
sahf
mulb
call
addr16
pop
jb
dec
gs
leave
cld
orl
inc
fcmovnb
sub
ja
dec
outsl
lock
jno
mov
repnz
xchg
mov
pop
in
fcom
mov
mov
in
je
mov
push
pop
call
jne
out
jecxz
pop
mov
insl
jle
dec
in
mov
aam
xor
cmp
add
jl
dec
leave
jecxz
add
std
cmp
stos
ret
xchg
mov
mov
push
and
mov
into
in
shrb
ret
movsl
in
testb
insb
push
fildl
cmpsl
imul
dec
add
cmc
sbb
pop
outsl
aad
mov
ljmp
push
repz
ja
push
ljmp
jle
add
jle
lahf
jne
xchg
sub
or
push
jb
rorl
stos
sbb
ficoml
mov
push
subl
iret
bound
or
in
jmp
adc
mov
adcb
push
and
jp
aad
dec
jno
mov
jno
mov
nop
mov
fiaddl
sub
add
cmc
xor
dec
inc
add
mov
movsl
cmp
cmp
lret
sbb
daa
xor
movsb
out
mov
pop
ffree
mov
jbe
rorb
xchg
rcl
ljmp
mov
scas
pop
and
mov
daa
dec
ret
or
stos
xchg
das
int3
into
fmul
lcall
add
xor
insl
jge
popf
xchg
dec
inc
cmpsl
imul
push
call
dec
pop
test
dec
das
mov
dec
fnstcw
xchg
data16
fisubl
sub
movsb
pop
or
nop
lds
cmp
dec
and
push
notb
pop
and
arpl
pop
bound
lret
cld
gs
mov
arpl
xchg
stc
mov
fmulp
sub
repz
test
sbbl
adc
insb
mov
pop
mov
xor
dec
adcb
dec
cmp
in
shlb
inc
mov
out
fnstenv
adc
push
sub
xor
push
in
xor
repz
pop
sub
dec
mov
stc
shl
xor
dec
pop
lock
out
mov
lods
sub
mov
add
mov
ss
adc
mov
and
xor
inc
pop
leave
out
int
shrl
dec
and
push
mov
push
xchg
in
scas
int3
mov
push
adc
or
sub
cmp
cmc
push
insb
pop
mov
add
outsl
lret
lret
rcl
mov
daa
iret
lret
add
mov
arpl
inc
push
inc
test
mov
jnp
js
int
push
mov
arpl
pop
sub
push
outsb
ret
push
out
mov
out
add
inc
inc
cwtl
xchg
pushf
clc
scas
iret
jmp
popa
jb
fldt
xchg
repnz
nop
xlat
jne
insl
mov
xchg
adc
jle
arpl
push
into
dec
or
dec
sub
sub
clc
in
inc
add
cmp
fidivs
lea
sub
cmpsl
ds
jmp
lds
popf
lods
lods
test
popf
push
sbb
iret
add
ljmp
jb
cwtl
mov
sbb
dec
ret
or
loopne
mov
fldl
shlb
ljmp
cltd
or
out
and
arpl
add
inc
push
mov
add
ds
mov
pop
sbb
mov
mov
div
or
std
mov
repz
stos
cmp
jno
add
add
mov
call
mov
adc
cld
and
dec
mov
arpl
lea
rorb
ret
jo
pop
sub
std
and
dec
push
sbb
push
cs
icebp
pop
add
inc
rcrb
aam
mov
pop
imul
pop
mov
out
and
sbb
leave
outsl
adc
out
lods
leave
cmp
lret
xchg
push
je
mov
pushf
outsb
enter
and
push
out
cld
or
sbb
hlt
push
pop
pusha
popa
mov
int3
jo
dec
stos
stos
inc
test
xlat
mov
pop
and
lahf
gs
jecxz
call
std
dec
push
scas
adc
mov
pop
push
in
add
push
hlt
mov
test
and
sub
mov
adc
dec
sbb
repz
jmp
add
pop
inc
loop
sub
lock
or
gs
jmp
sahf
pop
xchg
sub
insl
das
sub
lods
sub
scas
les
fdivrl
mov
decl
stos
cltd
test
lcall
jmp
int3
fsubrl
and
mov
and
pop
mov
jl
add
shll
fistl
xchg
ss
nop
add
pop
loopne
xchg
sub
and
cmpsb
inc
hlt
or
and
jo
rolb
and
adc
mov
xchg
xchg
shll
aam
out
pop
inc
sbb
jg
in
stos
jne
pop
mov
mov
cmpl
add
jecxz
mov
xchg
stos
ret
xor
shlb
shl
xchg
adc
jne,pn
cli
test
mov
adc
loopne
outsb
xor
and
push
add
in
xor
dec
and
dec
negb
mov
lahf
in
icebp
mov
jno
test
sbb
in
shrl
cmpsb
cmp
mov
out
mov
mov
xor
out
sti
and
cmp
cmp
andl
mov
xor
jge
pushf
rcrb
jns
xchg
mov
mull
rolb
adc
test
cmc
cltd
adc
lss
jge
adc
push
cmc
push
and
outsb
cwtl
mov
les
dec
fs
adc
xchg
and
int3
jle
cs
xchg
jno
jne
or
add
xchg
fimull
adc
or
sbb
call
and
lods
inc
mov
in
je
test
cs
mov
and
stos
mov
dec
mov
jecxz
notl
cmp
and
cmp
dec
popa
xchg
mov
sub
out
scas
je
xorl
push
pop
clc
ss
movsl
stc
adc
xor
out
orl
mov
sbbb
sub
jmp
sub
or
aad
ficompl
xor
pop
xlat
mov
sbb
ret
aam
mov
mov
lahf
push
subl
dec
inc
mov
mov
jg
cmp
or
repnz
jmp
out
adc
stos
jmp
incb
xor
and
enter
push
outsb
push
mov
inc
or
lahf
ljmp
inc
test
pop
pxor
jmp
mov
jg
mov
mov
mov
xor
pop
mov
jge
pop
lahf
mov
icebp
lods
insb
add
testl
loop
ret
push
sbb
repz
mov
xchg
popa
adc
add
pop
and
lea
and
sub
inc
inc
gs
daa
jnp
dec
not
mov
mov
popf
int3
out
and
test
xchg
cmp
inc
xor
push
fcompl
lret
ljmp
pop
jmp
cmp
inc
mov
test
lretw
xchg
mov
and
dec
fstl
cld
dec
out
ljmp
sahf
into
pop
inc
out
pop
pop
in
mov
inc
les
add
cmpsb
incb
out
lea
ret
or
pop
inc
pop
dec
cmp
ljmp
mov
mov
inc
imul
aad
cmpsb
pop
sbb
and
jo
dec
push
test
lods
imul
cltd
pop
ja
lea
xor
lock
lods
jo
ljmp
inc
push
sub
or
adc
inc
or
fildl
rcrb
lds
les
orb
es
int3
dec
pop
into
mov
mov
xchg
mov
xchg
and
pop
ja
pop
and
imul
sbb
stos
call
cmp
push
xor
subb
clc
xchg
mov
lea
dec
sti
pop
xchg
lock
fldl
fsubs
mov
inc
cmp
push
sub
rcl
lret
addr16
add
mov
lret
add
das
inc
sbb
push
sub
fnsetpm(287
imul
sub
pop
mov
and
jns
cmp
dec
jl
hlt
imul
mov
mov
in
in
mov
jg
leave
nop
mov
cwtl
mov
nop
repnz
push
add
adc
adc
or
and
shl
test
mov
ret
mov
cmpsl
mov
sahf
mov
mov
ret
fcomps
jl
or
mov
jo
fwait
shlb
sbb
out
xchg
cmp
inc
mov
add
mov
push
fdiv
mov
jno
push
lods
shr
out
aaa
or
test
mov
mov
fcoml
ficompl
jl
das
xlat
xor
sti
push
add
jle
mov
aam
repnz
xor
in
add
xor
clc
inc
add
lcall
inc
adc
mov
dec
xchg
insb
icebp
aad
jg
fwait
pop
lock
lret
dec
out
add
mov
and
mov
adc
es
cmpsl
cli
inc
inc
xor
mov
push
bound
push
xorl
ret
test
enter
mov
lds
repnz
sub
aam
xchg
shrl
jl,pn
loope
imul
aas
imul
push
mov
jns
jmp
inc
seta
mov
sub
cli
xchg
sti
sahf
add
mov
push
iret
mov
mov
mov
jmp
push
cli
mov
pop
outsl
ret
lock
inc
bound
call
cld
cmp
push
inc
xor
xlat
inc
fcom
sub
adc
sub
mov
loop
jb
out
cmp
cmpb
push
jns
push
mov
push
mov
sbb
sti
lds
cwtl
add
scas
das
cmpb
stos
imul
pop
scas
iret
das
jmp
fcomps
sub
test
jmp
add
cmp
js
hlt
xchg
pop
mov
lea
lock
lods
pop
fcom
inc
inc
push
push
mov
imul
ljmp
notl
das
pop
sti
cli
dec
dec
aaa
das
sbb
mov
and
clc
push
cwtl
das
mov
test
scas
dec
and
andb
insb
shll
push
out
ljmp
insb
dec
sub
dec
sbbb
popa
mov
jle
cmp
jns
and
into
mov
add
shrl
scas
mov
cmp
push
xorps
inc
dec
insl
adc
mov
sub
push
push
mov
sbb
xor
out
leave
es
inc
in
incb
shrl
addr16
mov
push
pop
rol
and
push
add
pop
adc
mov
mov
shl
loope
data16
and
cmp
mov
out
lcall
xor
push
mov
mov
add
pushf
shll
imul
fwait
push
insl
jnp
aam
pop
pop
jl
or
ss
sub
jae
out
jge
sbb
mov
pop
mov
popa
ret
mov
mov
jmp
or
push
daa
scas
das
push
adcb
nop
stc
sbb
sub
data16
testb
lahf
adc
shl
xchg
call
das
hlt
call
scas
xchg
inc
push
popf
js
adcl
insb
test
int
iret
xor
push
jecxz
shll
aas
clc
sub
stos
or
je
push
cmp
pop
test
xor
inc
mov
pop
shrl
sahf
xchg
ror
pop
or
adcb
and
hlt
scas
inc
adc
mov
sbb
cmpl
xorb
shll
mov
ret
push
nop
sub
repz
mov
and
push
js
orl
pusha
jle
leave
outsl
out
adc
inc
test
leave
pusha
lods
movsl
mov
sub
add
dec
out
mov
in
sub
mov
inc
push
jmp
xor
mov
lods
sbb
cltd
mov
fsubr
sbb
popa
into
xchg
xor
pop
jo
mov
lods
inc
nop
mov
dec
adc
hlt
clc
jle
inc
cwtl
insl
jnp
xchg
loope
add
pop
xchg
mov
xchg
fnstenv
xlat
mov
int
cld
xchg
mov
cmp
inc
push
jge
cmp
cmp
lret
sbb
mov
cmp
shlb
test
sahf
adc
cmpsl
cs
lods
add
add
sub
mov
push
sti
adc
xchg
repz
pusha
lahf
not
mov
push
imul
imul
and
pop
out
popa
dec
xor
or
adc
js
lods
stos
cld
pop
in
xchg
cmp
cmc
mov
stos
ds
push
insb
xchg
scas
fwait
repnz
inc
leave
popf
hlt
jp
pop
mov
stc
and
push
and
xchg
xchg
mov
sub
xor
cmp
aas
jp
cmp
add
mov
sub
and
fdivrs
frstor
pop
mov
adc
popa
or
mov
mov
mov
dec
pusha
adc
es
lock
sahf
xor
sbb
scas
call
push
pop
in
std
push
mov
in
xor
repnz
outsb
xchg
mov
cli
iret
ljmp
push
fnsave
ja
xchg
sub
pop
fisubrs
push
mov
xchg
shlb
dec
in
notb
xchg
adc
cwtl
fwait
mov
imul
mov
adcb
dec
fisubrs
sbb
rcrl
int3
dec
loop
inc
or
xchg
sub
inc
or
sub
lcall
dec
icebp
iret
fcmovnbe
aad
in
call
cmp
mov
and
rorl
add
xchg
int
les
fdivl
dec
mov
mov
jne
jnp
cmpb
sahf
inc
sarb
mov
adc
mov
shlb
xchg
cmp
dec
jmp
jecxz
insl
in
jl
cmp
mov
xchg
mov
scas
mov
in
jb
leave
xlat
inc
fwait
mov
or
mov
inc
push
lahf
add
mov
push
cmp
and
adc
scas
test
mov
insl
xor
lds
push
sub
or
or
mov
mov
lds
jae
cwtl
sub
or
imull
imul
mov
jb
mov
cmp
lcall
clc
ljmp
jmp
sub
and
pop
push
xchg
sub
in
ja
lret
xor
sbb
mov
push
cmp
mov
pop
repz
es
fnstsw
xchg
out
je
sub
inc
adc
fbld
fs
add
inc
add
dec
into
adc
or
push
lock
das
fsubrl
adc
mov
pop
nop
popf
pop
lret
jg
std
sub
and
inc
lods
xchg
jns
stos
inc
fcoml
enter
scas
inc
xchg
loop
insl
fwait
mov
pusha
testl
jle
sbb
pushf
out
jmp
hlt
xchg
mov
movsb
jnp
mov
mov
testb
leave
mov
or
cmp
xor
or
lods
mov
sub
into
xor
mov
hlt
push
ret
nop
and
dec
cld
xlat
icebp
das
dec
lcall
fnstenv
mov
jno
out
jnp
sahf
orl
aas
push
jo
jnp
and
push
call
pop
cmp
lret
cmp
cmp
insb
or
pop
push
push
pushf
jb
add
inc
push
adc
cltd
xor
pop
jg
mov
mov
pop
pop
inc
xor
jl
sti
xchg
push
inc
inc
sub
in
test
mov
xchg
pop
jmp
addr16
in
push
adc
and
mov
fdiv
or
sub
pop
repz
mov
jne
cmp
loope
out
clc
inc
aam
mov
xchg
into
push
push
and
push
js
pop
stos
repnz
out
sahf
xor
loop
mov
jb
add
dec
xor
xchg
push
push
aaa
or
cltd
adc
fst
xchg
cmp
mov
add
or
xchg
mov
fs
hlt
xlat
lock
fsubrl
mov
mov
mov
rcr
push
push
popf
ss
fwait
sti
or
ss
andb
fildll
lret
movsb
cmp
jne
stos
jle
sbb
pushf
or
loopne
fwait
mov
add
shlb
pop
jmp
scas
mov
aaa
mov
es
mov
and
cmp
rolb
pop
dec
mov
cmpsl
push
cs
mov
divl
aad
mov
jbe
mov
ficoms
and
std
enter
fidivrs
xchg
cltd
scas
test
lret
call
inc
bound
cwtl
data16
dec
jecxz
mov
dec
cmp
imul
pusha
sarl
pop
filds
aad
or
cltd
std
sub
xchg
adc
inc
mov
and
add
xor
jb
test
fbstp
shr
test
xor
imul
sub
mov
fbstp
adc
sarb
fcomip
jne
mov
aam
adc
rcrl
dec
ja
in
in
mov
push
adc
in
mov
mov
dec
jne
in
outsl
jns
sub
or
push
sub
in
push
mov
int
dec
mov
test
mov
add
test
cmp
or
push
dec
and
pop
xchg
dec
inc
aas
jecxz
sub
xchg
shlb
sti
ljmp
lret
mull
int
movsl
popf
mov
insb
xor
lahf
add
popf
push
mov
fldpi
inc
insb
ss
aam
cwtl
addr16
es
mov
add
lahf
push
mov
out
test
xor
pop
inc
inc
fdivrs
push
inc
notl
mov
push
inc
pop
mov
sti
adc
lcall
push
ss
cmp
ljmp
or
popf
pop
sub
int3
lahf
mov
jle
sbbb
aam
adc
inc
push
add
dec
sub
or
jle
mov
sbb
pop
inc
lods
jnp
xor
sub
add
fstps
xchg
fwait
adc
or
sbb
fwait
pop
scas
repnz
jmp
mov
xchg
add
repnz
and
mov
es
xor
mov
push
or
dec
mov
test
mov
sub
jae
mov
cs
sti
cmc
dec
dec
push
or
adc
out
cmpsl
lods
addr16
mov
sbb
dec
cli
nop
push
arpl
in
test
mov
or
cld
fiadds
fwait
ss
jle
and
cmp
sbb
imul
push
cmp
mov
xchg
divb
jns
test
push
pop
fidivs
add
in
add
jne
dec
mov
push
dec
stc
jmp
lcall
or
into
mov
pop
mov
loope
inc
or
in
clc
rcl
cmp
cmp
iret
shl
cmp
mov
push
cmp
outsl
dec
dec
ret
mov
les
out
es
aaa
dec
xchg
mov
xor
adc
leave
out
mov
sbb
add
cmpsl
adc
fsubp
jg
lds
lret
in
fldcw
addr16
sti
lret
out
add
outsl
aam
or
inc
sbb
push
xor
add
push
cwtl
outsl
addr16
je
fwait
lods
mov
movsb
repnz
mov
xor
push
in
loope
dec
xor
rorl
cmpsb
mov
xchg
stos
mov
adc
jbe
cld
push
addr16
ja
int3
je
loopne
sub
out
mov
das
adc
ret
mov
jae
sahf
and
sbb
pop
lahf
mull
test
scas
mov
xor
adc
xor
imul
ja
and
push
movsb
js
aad
mov
mov
ffree
mov
lret
inc
scas
clc
push
xchg
mov
pop
and
int3
hlt
fsubr
pop
or
into
gs
jg
push
rorb
clc
daa
out
daa
aaa
into
pop
pop
popf
stos
cmp
imul
sbb
sarb
repnz
cmc
scas
xor
dec
popf
loop
xchg
aad
push
cmpsb
xchg
aaa
push
les
in
js
push
test
jne
scas
icebp
pop
sbb
lret
lret
lret
sarl
pop
mov
add
das
jp
imull
jp
sbb
push
sub
mov
es
xchg
inc
movsb
sub
lret
add
inc
rorl
pushf
mov
popa
mov
mov
iret
ds
push
jb
fidivl
and
cmp
cmp
dec
in
enter
daa
insb
sub
jo
mov
jl
push
rcll
dec
adc
jo
shlb
sbb
test
jne
jns
dec
loope
lcall
mov
xchg
and
sub
xchg
mov
dec
loop
jns
add
out
sbb
lods
dec
sbb
jg
cs
test
or
mov
add
cwtl
sub
outsb
xor
movsb
jno
fsubrl
pop
mov
pop
jo
out
or
stc
neg
sarl
sarb
movsb
retw
jl
mov
repz
lret
imul
loopne
fcomi
xchg
out
jns
mov
sarl
cltd
adc
mov
callw
sbb
fisttpl
ss
call
mov
enter
lcall
inc
or
inc
pop
pop
mov
test
sub
lret
xchg
pop
xchg
cmp
popf
pop
adc
add
lea
fwait
sti
in
push
popf
lods
cmp
sub
mov
push
sbb
insl
jge
mov
inc
mov
lods
mov
imul
cmp
movsl
in
test
mov
pop
jmp
or
mov
movsb
sub
adc
jg
push
out
cmpsl
mov
out
sub
mov
pop
call
out
push
outsl
dec
pop
xchg
xor
bound
aas
pop
les
cmpsl
mov
add
call
repz
cmp
imul
add
pop
std
shrl
cmova
cmp
pop
push
pop
icebp
adc
cmc
push
in
xor
jnp
mov
scas
out
movsl
pop
rorb
lahf
cmpl
movsl
ret
movsl
mov
xlat
imul
cmp
dec
fisubs
stc
adc
aam
sbb
xchg
mov
sbb
inc
fimull
popa
sbb
test
fnstcw
pop
add
lcall
sbb
push
xchg
andb
add
mov
push
nopl
repnz
xor
jg
jne
jb
fs
popf
jbe
sbb
jp
repz
xlat
lods
push
sbbl
int
shll
jp
stc
push
mov
mov
inc
psubsb
push
mov
imul
fdivs
loop
or
inc
hlt
sub
arpl
imul
sub
in
lret
cmp
fisubrl
sbb
xor
push
iret
enter
icebp
mov
add
xor
imul
push
fdivl
cmp
mov
jp
add
or
sbb
jge
and
fadd
mov
imul
fisttpl
push
out
lods
inc
and
cli
pop
jmp
enter
add
adc
fistl
test
cld
pop
mov
das
pop
out
pop
push
sahf
mov
in
jns
sbb
or
int3
fadd
xchg
and
insb
push
stc
push
xor
mov
jg
push
dec
pop
dec
add
gs
add
mov
clc
fwait
mov
imul
add
pop
pop
mov
push
test
mov
adc
or
and
dec
movsl
dec
mov
push
sarb
mov
add
jbe
repz
out
dec
sub
mov
xchg
test
dec
mov
das
dec
insb
jno
lret
in
fistpl
xor
jnp
cltd
stos
or
jbe
jbe
gs
inc
stos
jae
fsubrl
xor
aam
or
scas
pop
inc
stos
mov
lret
gs
adc
xchg
fldt
sahf
jo
mov
rolb
jle
and
ret
std
lret
adc
adc
stos
icebp
jno
aam
icebp
jo
dec
jo
jg
call
sub
inc
sti
or
mov
imul
xor
inc
ret
xor
sbb
xchg
pop
outsl
stos
scas
sub
or
les
jge
push
test
inc
ret
cmc
dec
subl
jecxz
rcll
clc
dec
aaa
imul
push
push
lea
mov
jmp
dec
mov
js
and
loop
stos
mov
dec
dec
push
clc
jle
movsl
jno
in
out
xchg
sarl
add
shll
repz
cltd
sbb
shlb
mov
out
or
flds
lret
mov
xlat
rcll
mov
stc
stos
fcoml
xor
mov
sbb
sbbl
mov
pop
xchg
hlt
push
idivb
fnsave
popaw
ds
adc
jne
out
int
xor
sub
mov
rsm
ljmp
or
fisttpll
sub
sub
cmpsb
movsb
rorb
rcrl
cli
sub
and
loope
lds
mov
imul
aas
ja
and
or
inc
sbb
push
ljmp
add
add
clc
and
pusha
add
inc
cltd
cmp
stos
jg
popa
outsb
std
jne
sbb
addl
or
pop
ds
or
jns
sub
hlt
dec
std
cmp
jg
arpl
ret
mov
mov
adc
cwtl
pop
ss
inc
and
cmp
sbb
stc
push
stos
inc
sbbb
jbe
in
scas
lahf
jne
cmp
cmp
gs
add
jae
sahf
cmp
dec
or
push
mov
or
cmp
add
fnstenv
push
mov
inc
pop
adc
jns
mov
stos
mov
enter
daa
icebp
inc
pop
loope
fistl
mov
incb
mov
insl
rep
das
rolb
rol
mul
jne
es
xchg
test
orl
aas
stos
hlt
rcrl
int3
mov
inc
or
add
ss
jg
xchg
pop
mov
into
sti
xchg
cmp
or
es
xor
popf
divl
dec
lret
inc
and
dec
mov
jle
bound
in
xchg
push
out
insb
sbb
xchg
sub
add
pop
xchg
arpl
loope
dec
push
in
xor
rcll
test
sbb
je
out
xchg
add
add
popa
or
and
cmp
fists
mov
sti
sbb
push
lcall
jmp
fdivrs
lahf
jp
mov
mov
mov
or
adc
dec
lret
push
mov
pop
loop
push
adc
sarb
scas
push
daa
and
test
sbb
push
inc
imul
mov
fnstcw
sbb
aam
sbb
pushf
sub
mov
lahf
neg
mov
xor
imul
popa
in
inc
and
popa
xor
lahf
mov
sti
into
mov
or
lret
fs
lods
jmp
xchg
shl
int
add
sarl
dec
mov
adc
int3
jmp
outsb
popa
jo
stos
mov
dec
inc
inc
dec
outsl
adc
pop
mov
jbe
fimuls
lcall
movd
scas
lea
rclb
leave
pop
lcall
sub
xor
cmp
pop
cmp
mov
test
rcrl
mov
outsl
aam
inc
or
nop
xchg
or
mov
pavgw
mov
icebp
jb
fstps
mov
rcr
mov
ret
daa
mov
xor
ss
mov
les
inc
sti
cmc
popf
mov
cld
sbb
cld
push
sbb
sbb
ret
sbb
jnp
mov
sub
and
stc
push
repnz
sbb
daa
fiadds
ret
sbb
pop
sbb
jmp
ja
pushf
lret
ds
arpl
lret
pop
jno
movsl
push
sub
nop
loop
adc
pop
shld
lods
adc
sbb
sbb
andl
adc
adc
lods
and
xchg
sbb
dec
stc
mov
rcl
inc
outsl
enter
push
mov
cmp
cmp
aaa
xor
in
add
jnp
into
insb
xor
mov
mov
pop
les
sub
jns
inc
insl
mov
clc
add
xor
cltd
sahf
out
sarl
cltd
das
mov
imul
bnd
repz
inc
lea
test
addr16
mov
fbstp
seta
ficompl
mov
xchg
test
loop
or
dec
mov
sub
in
jg
mov
rcl
test
cmp
repnz
ret
fistps
inc
sbb
add
lret
outsw
stc
fstl
insl
scas
mov
add
jp
rolb
aam
jg
sti
xchg
jge
clc
and
pop
sbb
xchg
cmpsl
cmp
push
ja
loopne
xlat
lds
pop
jne
data16
xchg
dec
xchg
add
jge
mov
test
xchg
out
jl
leave
jae
fdivs
xor
xchg
in
and
push
aaa
xchg
sub
cwtl
das
cmpsb
xchg
sbb
dec
loope
lcall
push
jb
xchg
mov
fisubrl
dec
jb
into
push
movsl
pushl
and
pusha
pop
xor
movsl
cmp
lock
pusha
mov
push
sbb
push
jns
pop
repz
cmp
arpl
rclb
aaa
std
sub
xor
daa
sub
mov
orb
sub
adc
adc
pop
xchg
sahf
mov
loop
loope
aam
pop
outsb
pop
icebp
adc
mov
test
fidivs
push
adc
inc
mov
push
sbb
mov
jp
shrl
fwait
outsl
add
cmp
clc
mov
test
or
or
call
int3
rcll
xor
xor
adc
pop
dec
add
xchg
adc
pop
push
mov
sbb
inc
xchg
mov
push
sub
cmc
push
add
ja
and
jns
popa
jnp
cmpsl
xchg
mov
add
xchg
xor
jnp
imul
mov
or
icebp
dec
call
and
call
std
out
mov
stc
and
cld
ljmp
lea
hlt
jle
rsqrtps
mov
stos
jg
clc
scas
ret
jnp
adc
xchg
ljmp
mov
pop
sbb
pop
ja
loop
jb
dec
movsb
icebp
xor
sub
bound
call
sbb
adc
stos
in
pushf
pop
mov
aas
aas
cli
lcall
out
cmp
mov
into
jl
fcompl
fistpll
fidivrs
ds
movsl
imul
inc
test
mov
and
dec
dec
inc
bound
inc
divl
imul
mov
jp
mov
or
rclb
fcoms
dec
push
cmp
dec
or
fists
add
push
loope
loopne
jno
pusha
mov
push
mov
aad
pop
or
or
lods
in
loope
bt
add
cmp
pop
xchg
xchg
rcrl
sub
loope
fisubl
dec
fdivs
jge
mov
jb
and
and
mov
js
repnz
iret
ret
inc
sbb
pop
aam
mov
sarb
add
js
leave
inc
cwtl
daa
lods
rcrb
mov
add
ja
popf
les
add
scas
xchg
into
gs
std
or
or
mov
fimull
or
dec
mov
and
fs
fsubs
incb
sub
jg
mov
add
cli
xchg
lock
into
pop
outsl
mov
jmp
xchg
cmp
mov
cld
shll
push
push
jge
arpl
stos
and
fcompl
pop
icebp
mov
dec
and
js
or
lea
lret
test
mov
cli
in
fistl
bound
imul
or
mov
add
mov
pop
out
mov
imul
cli
imul
addr16
sbb
lds
sub
jbe
jp
mov
cld
jbe
add
adc
inc
dec
push
mov
jo
push
or
std
inc
jle
out
popa
sti
pop
aas
xor
sbb
cwtl
shrb
mov
test
adc
pop
cs
pop
mov
and
dec
push
mov
icebp
ljmp
or
lret
sub
pop
rcl
subb
and
mov
ret
loopne
pushf
test
pushf
inc
nop
sbb
push
xor
mov
xchg
mov
lods
es
mov
hlt
sti
xor
aaa
repnz
loopne
fnstenv
add
popf
xchg
lock
and
mov
or
cmp
insl
adc
popf
pop
lret
jnp
adcb
shll
cmp
mov
mov
repnz
push
in
out
lods
xchg
adc
in
pushf
test
dec
mov
sti
and
cmp
inc
lods
dec
sub
in
xor
nop
sbb
rorl
sbb
lahf
test
hlt
sub
jbe
adc
loopne
bound
add
rorl
popf
stos
cmovp
lods
aad
ds
pop
decb
subl
and
add
andb
add
mov
adc
aaa
movsl
xor
popf
enter
inc
lret
push
jbe
or
push
pop
testb
stc
mov
push
enter
and
movsl
lds
dec
pop
xor
sbb
mov
dec
xchg
das
jle
add
xchg
jmp
sbb
dec
xchg
cmc
mov
sub
pushf
shrb
dec
mov
jno
add
xchg
popf
and
sbb
push
movsl
xor
push
jne
fs
insb
adc
jle
sbb
push
lahf
cmp
adc
mov
insl
outsl
lret
addb
xor
push
testb
int
frstor
cs
push
cmc
add
jbe
bound
and
xchg
mov
cmp
push
insl
xchg
stc
call
js
subb
cmp
mov
sub
xor
filds
and
pop
fldcw
add
cmp
sbb
mov
fsubrl
fwait
cmpsl
pushf
rcl
xor
movsb
cmp
push
out
xor
in
shl
xchg
cld
lret
shl
hlt
pop
and
or
cmp
xchg
into
jb
cmpsb
xchg
fistpl
mov
adc
mov
scas
push
shrb
icebp
out
pop
jne
nop
movsb
cli
xor
xchg
sub
mov
in
add
adc
out
xor
in
loopne
mov
movsb
loopne
sahf
xor
sbb
mov
mov
mov
mov
sarb
pop
hlt
sbb
movl
pop
sub
dec
outsb
scas
fcomp
jmp
jnp
hlt
int3
jb
adc
loope
cltd
call
fsubrs
and
iret
clc
push
in
jmp
add
fcmovne
ljmp
sbb
in
std
enter
call
in
lods
xchg
decl
insl
in
imul
xchg
mov
icebp
in
stos
jl
adc
iret
fistl
xchg
xlat
xchg
pop
adc
add
daa
push
mov
sub
je
stc
jg
jecxz
clc
push
jb
loope
sub
mov
cmp
sti
in
scas
inc
repnz
mov
scas
fdiv
nop
ret
lods
inc
sub
dec
aad
xchg
or
mov
hlt
arpl
aad
mov
inc
clc
data16
jb
push
sub
mov
mov
and
jge
jns
xchg
ja
int3
shl
sbb
push
repnz
mov
mov
add
dec
xor
in
orl
xchg
xchg
test
cmpsl
jae
insl
scas
enter
iret
test
mov
sub
popf
push
xchg
pop
mov
inc
jmp
cli
adc
inc
or
pop
sahf
mov
into
and
notb
cmp
and
montmul
cmpsb
rcll
scas
add
scas
mov
pop
push
jmp
and
jo
sub
sbb
test
mov
jbe
hlt
std
movsb
imul
push
jl
push
or
or
push
fsubrs
mov
aam
test
and
mov
mov
int
aad
xchg
mov
push
xor
pop
mov
insl
mov
pop
scas
loop
push
icebp
data16
jae
in
xchg
test
xchg
mov
je
mov
aas
xchg
lret
add
dec
xor
outsb
add
mov
xchg
pushf
imul
jl
and
ret
push
les
inc
push
sbb
push
in
fnstenv
add
jp
fwait
sbb
cmpsb
adc
enter
addr16
stos
xchg
dec
jl
dec
cmp
arpl
xchg
inc
sahf
and
lds
inc
fcomps
pop
int
fbld
mov
mov
mov
fbld
test
test
and
mov
jnp
lret
rorl
lds
fs
and
divl
mov
shll
mov
rolb
xor
js
dec
out
js
lds
bound
xchg
xor
sub
cmp
inc
out
mov
cmp
leave
fildll
shlb
xor
out
les
movsb
push
out
aaa
lods
jb
lods
insl
cld
add
push
das
sbbl
nop
jmp
ret
jae
popa
pop
mov
push
xor
aam
mov
test
ds
frstor
dec
pop
xor
mov
cmp
stos
jge
or
jecxz
jb
loopne
sti
scas
ret
sub
mov
stc
mov
gs
jb
orb
push
xor
outsb
aaa
sbb
mov
pop
mov
enter
jno
xchg
xchg
stos
inc
add
mov
sbb
pop
jle
repnz
les
aad
or
test
pop
jmp
fidivrs
data16
call
test
xchg
push
gs
inc
mov
dec
sti
in
mov
ret
lds
ljmp
call
js
nop
mov
dec
dec
loope
push
pushf
and
or
lea
aad
cwtl
push
adc
pop
push
divl
dec
or
push
insl
imul
dec
mov
lret
gs
mov
mov
mov
ret
les
ss
aam
push
add
push
pop
hlt
stos
aam
aam
call
xchg
sarb
jmp
cmp
inc
inc
out
mov
lock
lea
mov
xlat
in
or
lods
popa
adc
cli
add
loop
mov
nop
xchg
or
push
mov
inc
jecxz
inc
and
inc
icebp
jle
and
lods
ret
fists
xchg
addr16
icebp
fucomp
aas
push
and
inc
and
sub
gs
inc
mov
popa
fstpt
arpl
ljmp
pop
dec
push
push
nop
jmp
int3
icebp
push
test
test
jne
clc
enter
cmpsb
push
fiaddl
mov
lret
cmc
inc
jmp
out
call
mov
push
in
ljmp
rcl
sbb
jnp
sub
popl
jecxz
int
jne
es
sbb
sbb
sbb
pop
imul
jae
pusha
xchg
mov
or
mov
or
or
jecxz
cwtl
loop
mov
ret
xor
push
push
adcl
rcrl
pop
mov
push
sub
roll
divw
add
mov
adc
add
jmp
inc
test
xchg
add
jecxz
and
xchg
jge
stos
pusha
pop
popa
hlt
add
es
cmp
fisubrs
roll
pop
add
xchg
pusha
pop
mov
pop
cmp
nop
mov
push
iret
data16
stos
cmp
push
out
out
ljmp
push
lcall
jno
sarb
js
test
cltd
popf
orb
xchg
xchg
pop
scas
xchg
mov
jle
mov
cmpsl
bound
inc
cmp
shlb
dec
push
js
xchg
adc
lret
fidivrl
popf
js
adc
and
daa
orb
fisttps
inc
fadds
sub
dec
into
xchg
mov
xor
enter
xchg
ret
fisubl
lods
inc
daa
test
mov
dec
stos
jg
sbb
and
mov
pxor
in
pushf
mov
mov
pop
fdiv
adc
xor
or
mov
pop
imul
out
add
mov
lods
frndint
pop
or
jnp
mov
stos
inc
or
dec
adc
ss
and
adc
jae
mov
push
push
mov
icebp
jne
fbld
mull
fbld
mov
shll
sbb
jbe
xchg
adc
mov
jae
arpl
and
pop
loopne
pop
xchg
pushf
push
pop
sub
or
pop
lahf
mov
cwtl
das
add
scas
mov
roll
adcl
inc
cmc
mov
mov
xor
adc
cli
mov
rcll
in
jle
mov
mov
sub
shrl
push
xchg
push
mov
addr16
jle
inc
mov
mov
shrb
rorb
repz
pop
jno
adc
push
add
test
jo
jmp
cmp
sahf
xor
and
out
pusha
sahf
push
cld
or
push
and
gs
xchg
aad
jmp
lret
fiadds
mov
push
mov
sahf
imul
popa
add
mov
xchg
les
dec
fsub
ljmp
jns
mov
jo
ja
addb
xor
fdiv
mov
jle
mov
cmp
ljmp
mov
push
jb
mov
popa
or
ss
jecxz
dec
push
lock
jns
stc
xor
add
cld
push
orb
or
adc
lea
stos
popa
fnstenv
aaa
cmp
data16
mov
push
pop
xor
js
fldl
lcall
lret
nop
lea
sub
lahf
scas
mov
jne
add
shlb
lods
xchg
sti
mov
loop
mov
aam
fiaddl
test
sbb
sub
mov
in
pop
push
lahf
inc
sahf
mov
mov
adc
mov
jle
fstl
das
sti
push
pop
loopne
adc
dec
fcomp
andl
je
push
shll
decb
cmpsl
imul
jg
cmpxchg
xchg
and
sub
rcr
xchg
mov
cld
dec
fstl
add
push
and
sub
adc
scas
mov
mov
inc
pop
mov
and
mov
std
jge
push
mov
testl
mov
xchg
sub
or
movsb
out
ljmp
jns
in
pop
xchg
pop
dec
imul
cs
adc
rcll
lahf
push
push
jecxz
pop
sub
test
dec
xor
pop
and
shlb
inc
inc
repz
in
sub
push
cwtl
inc
test
gs
push
scas
js
in
arpl
and
inc
test
lret
cld
lret
sahf
mov
aam
cs
inc
in
mov
test
xchg
or
sbb
rcll
aaa
enter
sub
cmp
mov
lea
imul
test
lea
lods
sub
mov
aam
repnz
stos
inc
inc
push
das
jle
int
ffreep
jne
cmp
shll
push
pop
jo
cmp
jno
test
subb
xchg
mov
dec
mov
loop
imul
pop
mov
popa
mov
pop
inc
jg
lods
mov
loop
pop
into
jb
repz
push
xchg
mov
sbb
gs
mov
xor
int
jle
add
jne
mov
mov
lods
lock
push
cld
aas
pushf
hlt
adc
xor
mov
lods
push
sarl
push
push
push
mov
xchg
and
adc
sub
pop
push
aad
dec
push
push
fnstenv
inc
daa
aad
xchg
popa
test
dec
and
adc
scas
and
xor
dec
addr16
or
dec
hlt
enter
adc
ds
cmp
cmp
inc
idivl
adc
gs
lods
cs
inc
ret
fs
repz
dec
adc
dec
pop
das
inc
mov
push
call
out
ljmp
or
sub
daa
lods
mov
adc
or
out
jbe
in
cmpsb
out
jmp
mov
adc
xchg
pushf
xor
pop
or
adc
jg
cwtl
mov
lods
lret
adcb
nop
mov
int3
shrb
jl
inc
loop
adc
movsb
out
daa
push
fnstsw
data16
mov
inc
lods
popa
xchg
sbb
jne
cmp
out
insl
adc
sti
jb
lret
and
jae
ret
movsb
or
cmp
lahf
stos
sti
and
pop
aad
jne
cmp
stos
inc
sub
cld
sbbb
push
insl
ljmp
sub
mov
popf
das
cmp
pop
jb
nop
sbb
scas
adc
sbb
in
inc
cld
ret
add
pop
mov
pop
in
es
and
add
pop
sub
sub
setle
lds
lcall
es
in
les
xorl
roll
pop
sbb
pop
stos
popf
xor
test
add
cmc
lods
inc
daa
roll
adc
or
mov
es
jns
scas
ret
cmp
xor
lods
cmp
xchg
fcomip
jns
cmp
insb
mov
sub
jns
or
mov
mov
xor
jne
in
push
leave
repnz
or
fsubrs
jg
cmp
push
inc
imul
out
int
push
insl
sub
out
mov
xor
jmp
xor
cwtl
fnstcw
jl
subb
jge
notb
cmc
mov
addr16
pushf
popf
mov
sub
loop
push
testb
xchg
jmp
xor
movb
xchg
push
sub
daa
std
ret
jnp
pop
idiv
ficompl
xchg
lea
add
outsb
testl
sbb
xor
cwtl
add
ds
xor
fists
out
jnp
out
lods
push
ljmp
add
sub
loopne
xchg
adc
pop
mov
add
aaa
clc
sbbl
or
test
lock
stos
ss
sti
pop
div
jbe
test
dec
xor
push
in
inc
jns
or
and
jge
ds
sub
rolb
add
lahf
cmpsl
data16
jp
icebp
outsb
test
push
cmp
addl
xchg
xor
int3
outsl
push
aas
cmpsl
inc
pusha
repz
xor
adc
push
in
pop
popl
in
dec
or
clc
shr
xor
ds
fcomps
arpl
data16
in
lds
mov
pop
insb
add
mov
or
pop
xor
or
loop
sti
aaa
pop
mov
out
cmpsl
ds
fistps
sbb
push
movsb
xchg
sub
xor
xchg
mov
sub
inc
and
xor
jmp
push
ljmp
ljmp
sbb
lea
mov
imul
loop
fwait
add
mov
in
lahf
imul
call
in
sbb
xchg
inc
sub
lds
aam
addr16
push
mov
lret
popa
pop
cmp
in
fs
adc
mov
in
icebp
fidivrs
adc
lret
push
adc
lcall
push
push
in
jg
aam
mov
sub
or
xchg
inc
scas
inc
and
mov
cmp
loop
sbb
ffree
jl
mov
cltd
add
fdiv
xchg
dec
lods
stc
add
pmuludq
or
loop
adc
pop
add
add
das
addr16
fbstp
je
aad
push
out
fcmovbe
and
sahf
lret
adcb
cmp
in
jnp
push
cwtl
loop
jb
enter
cwtl
das
clc
filds
xor
cmpsb
xchg
sub
jge
or
das
lea
out
ret
jp
shll
adc
mov
fnstsw
sub
add
xchg
mov
ret
sbb
add
dec
or
popl
dec
in
outsb
push
jno
mov
mov
inc
sarl
xchg
pop
fldt
jb
push
movsb
jo
push
dec
lea
sub
add
dec
sub
mov
xor
jne
loopne
ret
mov
pop
pop
push
in
adc
popl
jno
xor
fisubs
add
xchg
sbb
jmp
sbbb
push
adc
xorb
shlb
mov
push
leave
es
mov
popa
xor
cmp
pop
das
movsl
cmpsl
andl
and
xor
test
lcall
fucomp
movsl
mov
push
inc
add
cmp
out
gs
sarl
sbb
mov
jns
stc
pop
scas
pop
scas
iret
ljmp
addr16
insb
cltd
jbe
cmp
jp
dec
and
cmp
sbb
add
mov
mov
pop
push
aam
mov
mov
lret
push
adc
mov
out
mov
sub
lahf
or
push
lods
sub
add
popa
sti
les
xorl
sti
ret
in
cltd
out
btc
in
insb
or
fimuls
mov
ficomps
xor
je
hlt
lcall
leave
aas
inc
jb
in
andl
int
and
mov
roll
pop
mov
mov
xor
xor
xor
mov
js
or
dec
inc
mov
lcall
pop
mov
mov
lahf
adc
jge
jle
and
dec
aam
frstor
mov
test
push
sbb
aaa
add
jecxz
negl
xor
mov
jecxz
leave
nop
repnz
data16
adc
dec
xchg
add
ret
pop
testl
dec
mov
stos
inc
push
mov
into
in
adc
test
gs
or
adc
enter
insb
xchg
mov
fimuls
pop
fildl
aaa
sbb
inc
cmpsl
add
mov
sub
xor
shrl
inc
or
daa
fldl
cmovne
fwait
cmpsl
mov
pusha
ss
mov
leave
jecxz
loop
xchg
push
or
cmpsl
push
scas
mov
orl
jb
jnp
ret
and
jmp
sbb
add
inc
and
adc
jno
add
les
out
mov
cli
cmp
jp
push
and
scas
cli
mov
adc
adc
test
mov
aad
out
imul
scas
daa
leave
xchg
mov
int
dec
shlb
or
mov
jne
sahf
es
mov
pop
call
inc
and
clc
pop
push
sub
or
cwtl
push
ds
cmpl
add
shrb
xor
call
or
or
sub
outsl
push
sarl
in
sub
push
pop
mov
fdivs
jns
and
dec
fistpl
inc
inc
jno
iret
mov
pushf
shrl
xchg
sub
out
or
lea
nop
cmp
sub
jo
dec
outsb
mov
dec
jmp
fimuls
dec
jmp
mov
insb
jg
add
aam
imul
xor
push
add
sarl
insb
imul
fbstp
sbb
sub
out
ret
call
inc
xor
es
das
pop
fists
adc
push
push
mov
popa
mov
in
xor
xor
loope
cld
fsub
and
std
mov
lock
loop
xchg
push
dec
cmp
out
es
jge
addr16
pop
mov
dec
jbe
inc
nop
xor
ljmp
rolb
int
enter
xor
cld
lret
popf
mov
repnz
adc
data16
pop
and
dec
cmc
cmp
jb
push
sub
xor
bswap
das
mov
dec
int
xor
cltd
jb
cli
mov
in
clc
ficompl
clc
test
dec
test
push
jecxz
test
out
inc
pushf
movsb
xchg
jmp
or
cmp
xor
cld
mov
fiadds
mov
hlt
mov
jle
mov
ret
and
loope
adc
push
ljmp
dec
xchg
add
sub
repnz
adc
popf
dec
push
idivb
sbb
add
jecxz
stos
pop
test
fistl
push
pop
xor
adc
cmp
mov
mov
cmp
bound
popa
addb
ja
mov
in
mov
rcrb
test
jbe
pextrw
das
divb
mov
push
imul
movsb
push
jmp
testb
jge
inc
es
out
adc
jge
enter
adc
into
cmpsl
shlb
fdivrs
mov
sub
xor
mov
pusha
pmuludq
mov
sbb
inc
ret
popa
loopne
push
pop
test
xchg
push
sti
rolb
adc
fcmove
fs
int3
mov
sahf
insb
inc
cmp
xchg
imul
loop
arpl
clc
lea
lahf
mov
lahf
mov
xchg
push
js
imul
adc
jp
pop
lcall
push
es
xchg
in
pushf
xor
xor
mov
lahf
outsl
add
mov
jb
ljmp
test
ds
xor
test
cmpsb
mov
pop
jb,pt
call
and
stc
fistl
xor
es
stc
cmp
dec
dec
jl
jb
fldcw
pop
mov
out
pop
stos
inc
dec
inc
shrb
mov
inc
mov
dec
int
pop
cmp
or
sbb
cwtl
pop
lret
push
mov
out
sti
cmc
sbb
mov
jns
stos
and
jmp
subl
mov
adc
add
dec
sar
and
mov
sub
dec
fists
lcall
cli
std
mov
mov
repz
notl
movsb
nop
xchg
imul
in
sub
mov
test
test
xlat
out
repnz
mov
add
mov
xchg
les
cmp
pop
sub
das
pop
inc
cwtl
insb
icebp
jge
mov
fwait
pop
push
into
in
mov
aaa
sub
sbb
outsl
mov
fisubl
adc
and
mov
divl
dec
fimuls
shrb
cmp
push
aas
add
pop
and
mov
iret
imul
icebp
inc
repnz
int3
sarl
fstpl
lods
shll
adc
js
dec
notb
push
sbb
inc
mov
or
push
es
imul
lret
addr16
popf
into
mov
mov
pop
xor
mov
pop
mov
pop
and
divb
and
and
iret
mov
mov
stos
adc
mov
mov
adc
or
cltd
and
sbb
test
mov
jnp
lahf
loope
and
test
mov
aad
mov
rcrb
stos
add
aam
and
pop
lcall
xor
loop
es
mov
rorb
xchg
xor
jl
mov
xchg
jecxz
stos
das
imul
dec
cmpsb
jae
test
mov
mov
fsubrs
mov
negb
inc
fisubs
add
xchg
and
xchg
xchg
repz
sarb
push
stos
adc
movb
xchg
and
pusha
rol
ret
in
jmp
mov
aas
push
or
cmpsl
jns
subl
dec
xchg
aaa
pop
xchg
xchg
aas
adc
inc
dec
mov
or
addr16
pop
insl
mov
bound
mov
stc
in
das
ret
hlt
pop
mov
cmp
mov
add
sahf
std
mov
sbb
arpl
imul
add
in
outsl
xchg
mov
jg
sbb
pop
sahf
cmp
loop
lahf
lock
rorl
cltd
cld
cmp
adc
inc
mov
fbstp
es
mov
cmp
mov
sbb
cwtl
mov
push
or
into
aas
mov
rorl
jecxz
sub
add
out
xor
mov
sbb
mov
inc
or
pop
ds
and
dec
mov
mov
repnz
mov
adc
lret
cmp
mov
inc
push
popl
popf
outsb
xchg
add
mov
mov
xchg
xor
mov
sbb
mov
les
mov
cmpsl
push
inc
dec
test
and
stc
mov
lods
ljmp
inc
sub
xchg
or
shrl
cmp
push
cwtl
lods
inc
inc
sbb
pushf
lods
inc
jle
sub
sub
sbb
imul
aaa
mov
or
xlat
mov
mov
jle
call
mov
sbbb
lods
lret
and
fnstsw
mov
test
jns
adc
push
fs
jge
shrb
pop
xchg
or
inc
push
leave
icebp
sbb
outsb
out
mov
mov
push
dec
or
cltd
xor
nop
popf
les
clc
aad
sub
loopne
push
lret
js
jnp
int3
cltd
xor
stos
xor
dec
xchg
outsb
push
xor
mov
xchg
movsl
jne
xchg
xor
loope
lret
push
lcall
pushl
ss
mov
ljmp
xchg
cmp
test
mov
test
addl
lret
cmp
adc
imul
push
fsubr
dec
test
lret
rcll
test
cmp
outsb
cmp
xor
push
movsb
jo
arpl
repnz
aas
xchg
out
jecxz
jge
hlt
or
mov
jne
add
fisttpll
sahf
add
icebp
mov
cltd
sbbb
sub
adc
mov
in
xchg
daa
cmp
push
xchg
inc
out
mov
mov
fstl
cmp
xor
sar
sbb
dec
adc
lahf
ljmp
jecxz
lcall
dec
das
ret
mov
in
rcll
push
cmp
pop
fdiv
test
stos
push
shl
mov
jae
leave
rcrb
xchg
pushf
xchg
mov
mov
sub
out
and
push
movsb
push
repnz
shrb
insl
fisubrl
xor
cld
mov
and
jmp
ret
pusha
jp
pop
test
lret
testb
or
push
cli
addb
pop
pushf
jge
lock
mov
cmp
fldcw
sbbl
ljmp
inc
pop
in
jl
in
rcrb
push
inc
sbb
xchg
cmpb
pop
test
cmpb
mov
mov
xchg
sahf
loopne
mov
inc
test
stc
xchg
and
dec
sti
dec
dec
sub
sub
clc
mov
incl
stc
or
dec
mov
divb
movsb
orl
jns
loop
rorb
cmp
ja
xchg
orl
sub
pop
mov
cmp
cmpsb
jns
cs
push
je
shll
dec
pop
xor
xchg
imul
mov
pop
add
mov
xor
fs
lahf
test
push
ds
xor
stos
adc
dec
jne
fildl
addr16
adc
lods
mov
adc
mov
mov
mov
cmp
test
cmp
jge
sbb
xchg
inc
inc
mov
mull
mov
inc
dec
fucomip
les
insb
mov
std
repz
mov
ret
inc
mov
jae
inc
ds
add
sbb
pop
or
push
icebp
mov
xor
xchg
popf
into
cs
insb
or
jge
or
xchg
mov
mov
dec
inc
daa
inc
jae
test
cmp
push
adc
pop
lea
ja
xchg
xor
push
lret
xor
js
inc
xchg
or
dec
xchg
add
lcall
stos
inc
and
aam
mov
daa
out
out
arpl
movsb
cwtl
or
xor
add
scas
jbe
popa
xchg
dec
decl
lods
xchg
imulb
xchg
test
adc
lret
jbe
fcmovnb
inc
into
add
push
jnp
nop
push
rolw
cmp
iret
mov
rcr
repnz
jno
cld
push
sahf
mov
fidivrs
adc
pop
sbb
jecxz
sbb
and
lea
push
test
inc
fdivrs
and
popa
pop
pop
nop
sub
cmc
xor
jo
lods
add
push
lret
cmp
inc
sbb
pop
pop
mov
dec
inc
fs
in
mov
mov
cmpsl
lret
mov
and
cwtl
and
cmp
and
leave
pop
std
shl
push
lea
pushf
leave
xlat
sub
dec
arpl
cmp
repz
mov
shll
mov
or
fisubrl
mov
jecxz
fidivrl
ret
inc
rolb
mov
xchg
add
pop
insl
mov
or
mov
mov
xchg
sub
inc
scas
scas
jle
xor
popa
inc
lcall
mov
jg
sub
lea
lea
xchg
ss
xor
mov
iret
popf
inc
jmp
pop
mov
fiaddl
bound
scas
mov
jo
or
movaps
sub
and
sub
insl
test
rolb
mov
push
popf
outsl
pop
cltd
xor
xor
mov
mov
repnz
mov
fldl
push
mov
sbb
shl
lea
mov
and
pop
js
in
push
aas
inc
ljmp
or
push
ljmp
push
cmp
xorb
add
insl
cmp
fsub
mov
aas
mov
jae
fildll
mov
jecxz
xchg
sbb
and
inc
mov
mov
dec
add
das
mov
into
popf
imul
adcb
dec
out
inc
push
repnz
xchg
adc
mov
lock
sub
mov
mov
test
jbe
adc
jl
js
mov
cld
fcompl
mov
sub
cltd
mov
pusha
xchg
pop
aaa
cltd
mov
jl
xlat
lods
prefetch
xchg
add
inc
jbe
mov
jb
and
sbb
add
data16
mov
shr
sub
popf
xor
stos
repnz
mov
adc
andb
imul
std
mov
pop
xor
lea
mov
push
mov
adc
mov
in
xor
mov
shr
nop
push
shlb
shlb
popf
aaa
mov
pop
hlt
or
mov
pop
or
lret
es
sbb
hlt
imul
mov
int3
jp
lret
push
enter
das
mov
movsb
xor
xor
add
repz
outsl
ljmp
mov
and
xchg
sbb
dec
dec
pop
cli
jo
imul
cli
xchg
cmp
out
add
push
sahf
push
ds
popa
and
into
cli
fbstp
test
lcall
or
fsubr
test
sti
insb
imul
xchg
sub
add
or
cltd
xchg
ds
movsb
pusha
ds
shlb
shrb
and
fwait
jmp
inc
ja
pop
scas
inc
into
std
jmp
and
enter
imul
inc
push
xor
mov
xchg
push
mov
inc
fs
or
shlb
sti
and
loop
scas
push
jp
aad
shr
inc
popf
hlt
js
mov
inc
cltd
jnp
dec
insl
int3
ficomps
sbbb
shll
test
lcall
cs
or
mov
mov
mov
shll
jmp
sub
sarl
push
mov
jmp
repnz
add
add
mov
loopne
jg
adc
jmp
fcoms
mov
repz
pop
mov
sbb
pusha
gs
fidivl
loopne
cmpl
in
incl
jno
push
test
inc
mov
mov
sbb
das
add
and
imul
insl
in
ret
fildl
dec
cmp
idivl
inc
cld
and
clc
push
sbb
mov
scas
mov
test
xchg
sub
imul
addr16
jmp
adc
sub
jle
test
sub
mov
mov
aad
push
or
mov
jb
or
leave
sahf
or
push
dec
sub
fcmovbe
pop
mov
fs
fiadds
cmp
incl
sbb
mov
sub
cmp
lods
mov
mov
int
pop
mov
cmp
sahf
and
mov
xor
lret
iret
es
dec
fsubr
loopne
push
ftst
sub
pop
push
push
movsl
test
mov
and
sbb
rcrb
sub
mov
push
lods
push
cmp
outsl
sti
test
enter
test
and
push
sub
clc
loopne
enter
dec
mov
push
dec
add
imul
lds
iret
pop
lret
fnstcw
ret
ja
mov
cmp
xor
ja
into
call
lds
and
adc
lea
xchg
jp
mov
cli
dec
int3
fcomps
mov
cmp
cmc
icebp
mov
scas
or
lea
lahf
shll
cwtl
mov
aam
xor
hlt
push
iret
and
in
ss
stos
daa
aam
jbe
dec
xor
cmpsl
sti
mov
fnstenv
adc
cwtl
inc
push
jmp
dec
jp
andb
loope
mov
icebp
cmp
mov
dec
xchg
jge
stc
scas
cmp
fwait
add
push
mov
popf
sub
mov
sbb
mov
push
mov
mov
mov
jae
mov
push
mov
sub
sub
pop
out
test
repz
push
call
or
stos
mov
mov
add
jge
pop
xchg
sub
fwait
xchg
cmc
out
aaa
testb
aad
xchg
adc
push
add
sub
sbb
fwait
hlt
fstpt
pop
pusha
jae
mov
loop
cmp
dec
loop
xchg
pushf
ret
jecxz
mov
cmp
es
sbb
ret
dec
stos
inc
jnp
addr16
inc
adc
fsts
das
mov
jnp
xor
imul
sti
mov
insl
xchg
seta
mov
arpl
lcall
dec
out
in
scas
fimuls
data16
xchg
lods
scas
bound
mov
lret
imul
sahf
push
mov
out
cld
sub
rcrl
push
push
adc
js
mov
cmp
inc
mov
inc
fidivl
sub
das
mov
sti
dec
cmp
das
pop
sar
and
fcmovbe
ret
sbb
and
mov
mov
xorb
andl
fdivl
xor
xor
and
add
lock
aam
xchg
sbb
ss
sub
or
push
out
sbb
sbbl
imul
inc
pop
mov
mov
cltd
xor
enter
movb
out
int3
cli
mov
pop
and
pop
pop
cli
enter
pop
adc
fadds
test
in
mov
rolb
lcall
bound
lods
rclb
aas
cwtl
mov
loop
mov
mov
push
sbbb
movsl
cmp
mov
sbb
inc
pop
push
jne
xor
inc
rorb
jecxz
fistpll
ds
mov
dec
pop
subl
in
cltd
add
push
adc
add
sbbb
dec
or
mov
rorl
cli
fnstenv
dec
shl
adc
test
das
ficompl
mov
test
fdivl
and
inc
mov
loope
into
movsl
loopne
pop
out
fdivl
cmp
test
pop
add
cmpsl
jp
popa
and
inc
mov
jae
add
ficompl
test
cs
lret
rcrl
fnstcw
jge
xor
pop
kxorw
ret
xor
pop
jmp
xor
or
push
sahf
lcall
mov
sub
xchg
jb
dec
jnp
pushf
ljmp
sub
dec
pop
hlt
jg
stos
inc
adc
jnp
stos
jb
sbb
ftst
jg
push
add
push
clc
aaa
arpl
sbb
add
or
imul
js
sub
loopne
and
fcmovnu
and
dec
daa
mov
aam
pop
xor
push
inc
adc
jns
fnsave
pop
or
push
ss
mov
aas
or
shlb
outsb
adc
adc
outsl
mov
lock
push
or
mov
out
push
xchg
lcall
or
dec
sbb
shr
sub
sbbl
inc
mov
xchg
popa
mov
fdiv
jbe
popa
std
movsb
cltd
xchg
sub
add
loopne
in
add
ss
lods
mov
add
loope
loope
dec
mov
jg
push
mov
outsl
out
xor
les
adc
fisubl
fwait
outsl
outsb
pusha
sub
jo
pop
jg
lods
inc
cmp
pop
sahf
jp
out
inc
xchg
pusha
pushf
adc
add
shrl
or
lret
fwait
stc
or
shrl
in
pop
xchg
sub
fsubrl
rolb
mov
imul
iret
fidivl
loop
mov
xor
cwtl
pop
sar
xchg
vpcmpgtb
sarl
call
pop
push
and
cwtl
sarb
repnz
das
lahf
sbb
add
inc
or
rolb
inc
mov
ss
test
mov
shlb
call
stc
and
jp
stos
or
sahf
test
mov
mov
jb
jmp
mov
addl
int
push
outsb
mov
mov
lret
lods
lods
sbb
sbb
inc
xchg
push
xor
aaa
pop
stos
in
and
add
add
sti
add
cs
pop
pusha
fidivs
jnp
mov
aaa
jle
dec
pop
push
inc
dec
sbb
xchg
pop
sub
imul
in
jl
xlat
mov
mov
and
dec
stos
push
sti
scas
mov
popf
xchg
pop
jle
and
and
or
push
push
mov
xchg
ja
cld
cmp
xlat
sbb
lea
xchg
cmp
mov
mov
sbbb
jecxz
clc
je
loopne
in
mov
scas
or
std
adc
pop
js
ret
test
push
push
jl
roll
push
es
sbb
xchg
mulb
jge
cwtl
ljmp
xorl
mov
stos
lock
lods
cmp
xchg
add
push
push
call
adc
adc
or
add
xlat
mov
mov
xchg
lods
clc
add
aam
pop
mov
js
mov
loop
add
subb
sub
lock
xchg
cmp
pop
jg
xor
mov
add
test
cmpsb
jmp
lahf
sbb
daa
jge
mov
jo
xchg
pusha
ds
fmul
cmc
sub
add
mov
cmp
mov
movsb
xchg
inc
imul
sarb
push
les
into
xchg
push
aas
std
dec
dec
adc
lock
pop
add
aaa
jle
imul
adc
fisubrl
jne
mov
dec
mov
fsubl
test
jb
push
dec
data16
mov
add
sbb
push
cmc
sbb
inc
in
dec
jl
mov
push
les
fs
pop
or
cs
cmp
das
les
cmp
jo
fwait
push
popa
roll
xor
dec
loopne
out
sub
and
xchg
and
pusha
out
fstpt
ret
repz
xchg
push
lcall
lahf
inc
gs
arpl
cmpsb
hlt
sub
aas
fsts
test
and
inc
add
xor
xor
push
negb
sbb
jb
imul
pop
lcall
xchg
ljmp
inc
ss
jne
xchg
or
pop
mov
lea
jns
fwait
or
enter
call
out
subl
fidivl
out
loop
ds
sbb
fcomp
mov
mov
sbb
inc
mov
push
popa
sub
dec
cmp
in
jg
inc
test
std
fdivr
dec
jecxz
std
test
jnp
je
mov
into
mov
int3
popf
push
aas
iret
lds
cmpsb
cmp
xor
sbb
and
ljmp
fldenv
mov
adc
cli
jb
stos
xchg
add
mov
je,pt
mov
pop
mov
xchg
cmpl
shll
mov
call
gs
inc
push
popf
xor
dec
cmp
cmp
lods
inc
aam
rcrl
dec
in
sbb
aaa
push
clc
adc
dec
mov
mov
cmp
mov
sub
xlat
lods
clc
dec
lahf
cmc
out
xor
sbb
dec
pop
cwtl
cmp
push
sbb
jge
ss
pop
xchg
aas
pop
out
inc
jne
sub
pop
jno
mov
sahf
test
xchg
daa
dec
daa
and
or
outsl
xlat
fisubs
xor
add
lds
rcrl
adc
push
mov
jno
mov
lods
aas
add
add
sub
leave
dec
sbb
push
test
push
dec
sub
mov
stos
push
lock
pop
fwait
sub
lock
cli
or
js
sbb
ret
mov
js
mov
jmp
imul
dec
iret
rcll
imul
shll
lock
movl
flds
insb
mulb
dec
mov
lahf
insl
not
mull
push
sbb
pop
daa
jg
mov
mov
jb
imul
xchg
adc
pushf
das
xchg
movsl
dec
cmp
icebp
mov
movsb
daa
push
pop
call
add
mov
rorb
push
clc
pop
cmp
loope
aad
in
scas
sarl
je
int3
arpl
dec
push
in
cmovne
xorl
jge
std
dec
jp
hlt
push
xchg
sbb
sbb
jne
cmc
push
pop
add
dec
icebp
fldenv
into
lods
add
dec
xor
lea
jns
sbb
jge
stos
mov
sarb
icebp
stos
jle
push
jmp
add
sub
lods
sti
mov
decl
movsl
mov
iret
fdivp
int3
daa
mov
sub
mov
cmc
pop
mov
push
rcrb
pop
mov
int3
xchg
scas
lea
xchg
inc
dec
scas
fcompl
push
clc
loop
sbb
push
lock
fdivrs
push
pushf
loope
add
add
sbb
inc
pop
mov
mov
add
and
inc
loopne
or
jmp
cld
rcl
xchg
decb
and
pop
pop
lret
add
je
in
mov
je
pop
jl
add
das
pop
in
adc
add
mov
inc
mov
mov
mov
push
fdivrs
sbb
xor
mov
jle
sbb
bound
jecxz
icebp
lahf
sub
adcb
mov
cld
pop
sahf
das
add
pusha
movsl
stos
and
or
das
loop
pushf
xchg
inc
andb
sub
hlt
adc
repnz
jne
outsb
lahf
aas
sub
scas
xchg
fsub
imul
sub
xchg
push
and
aad
je
outsl
jg
outsb
cli
jl
mov
jns
cld
subl
dec
or
mov
dec
scas
clc
fmull
pop
std
loopne
sbb
jae
inc
inc
les
inc
test
nop
stos
mov
stos
inc
dec
xlat
mulb
push
push
jae
add
sub
lds
adc
and
fimull
inc
stc
loopne
mov
stos
add
in
mov
rcr
fwait
pop
stos
lret
in
cli
divl
leave
sub
nop
outsl
in
ss
pand
ror
data16
cmp
xchg
dec
push
push
and
add
mov
fdiv
ret
cs
loopne
ljmp
inc
inc
xchg
inc
fcmovnb
popa
lret
test
or
repz
mov
mov
sbb
sbb
dec
dec
push
cmp
aam
aad
mov
aad
mov
int3
mov
xor
insb
inc
int
fs
orb
dec
lret
das
hlt
stc
mov
into
inc
imulb
adc
xor
lret
mov
push
and
adc
dec
adcb
repz
jne
aaa
jo
scas
inc
or
js
or
das
addr16
pusha
dec
inc
xchg
jl
cli
xchg
arpl
pop
or
push
cmpsl
scas
mov
jns
jns
mulb
test
shl
mov
in
push
sub
add
fwait
imul
outsl
xlat
push
dec
test
jno
flds
cwtl
mov
cmp
push
enter
es
mov
mulb
cltd
outsl
xor
loopne
arpl
add
sbb
aam
out
mov
push
push
test
hlt
test
mov
jle
xor
sahf
pop
cmp
xor
outsb
cli
aas
cmpsl
cld
fcomps
fidivl
jae
stos
lock
push
pop
out
add
mov
jo
inc
push
and
outsl
xchg
rolb
sbb
or
push
in
lock
mov
nop
mov
pop
mov
add
xchg
pushf
xor
adc
test
mov
das
mov
cld
icebp
or
push
cmp
jae
push
ret
rclb
mov
adc
fisubrs
cmc
pop
cmp
push
add
lods
loope
add
rolb
mov
jmp
jmp
or
int
lods
cwtl
das
ficomps
ret
sbb
shl
cmp
push
pop
mov
cmc
and
pop
stos
mov
push
pop
mov
cmc
or
dec
outsb
or
sbb
inc
out
xchg
push
cmc
dec
mov
push
adc
mov
neg
je
mov
movsb
and
mov
adc
les
cmp
inc
scas
inc
orl
fnstsw
out
jnp
out
rcrb
mov
add
adc
sbb
fidivrl
out
xor
std
cwtl
add
testl
push
test
out
dec
leave
cwtl
cmpsb
mov
mov
loope
ljmp
jecxz
adcb
sbb
sub
push
out
push
lods
rorl
push
dec
sub
imul
and
and
cli
xlat
test
rcrl
cmp
pop
data16
xorl
pop
loopne
fwait
push
ds
in
leave
xchg
pusha
shll
cmp
rcrb
repnz
mov
push
icebp
lock
inc
fildll
mov
dec
sub
push
xchg
jecxz
cmp
or
push
xor
ret
mov
nop
daa
scas
filds
adc
pop
sub
or
out
push
inc
test
ljmp
sbb
xchg
fcompp
push
loope
nop
jae
cmp
notb
andl
movsb
mov
lret
cld
je
add
cmpxchg
push
imul
aas
inc
lret
pop
sar
xchg
sarl
add
jbe
dec
dec
stc
dec
repz
enter
inc
decl
xchg
bound
jl
scas
xchg
mov
pop
add
pop
cmp
ss
cwtl
das
les
dec
out
inc
inc
xchg
std
xchg
jmp
iret
imul
out
push
popf
push
sbb
and
mov
stos
enter
mov
inc
cwtl
xchg
ret
int3
mov
and
aad
sbb
xorl
stos
rorl
jge
sahf
ret
loop
dec
sub
aad
jecxz
rcrl
mov
stos
sbb
dec
mov
clc
aas
lock
ds
xchg
stos
inc
sub
in
rcl
enter
pop
mov
fsub
mov
outsb
cmp
out
xor
and
jns
mov
popf
in
pop
fstpl
add
sbb
xor
pop
idivb
or
lea
test
dec
pusha
inc
lock
fisubs
jne
imul
mov
sbb
jbe
rcll
cmp
mov
cmp
lss
inc
gs
mov
jg
call
cs
xor
movsl
or
mov
les
outsl
jle
push
xchg
cs
dec
mov
ret
jge
mov
insl
mov
bound
dec
and
addl
or
mov
cs
jb
sahf
xchg
js
call
mov
fsts
into
push
sbb
jbe
aam
outsb
sbb
mov
jmp
scas
out
jae
and
cltd
das
push
jle
scas
add
les
jmp
xchg
pop
shll
mov
and
loope
cmpsl
pop
and
loop
dec
adc
js
hlt
notb
daa
pop
rcrl
icebp
sbb
mov
out
sbb
mov
fwait
sbb
cmc
shl
jne
scas
stc
inc
imul
stos
inc
sbb
pop
addr16
push
call
sbb
add
and
iret
outsb
push
insl
nop
sbb
lret
mov
pop
popf
fisubs
popa
loop
nop
adc
or
movsb
je
arpl
xchg
ret
pop
dec
fiaddl
jnp
mov
in
inc
fs
jbe
sbb
pushf
xchg
sub
in
popa
jg
movsb
scas
inc
in
jg
lds
rol
xchg
push
scas
mov
mov
dec
jg
loopne
pop
mov
dec
les
ss
cmp
cwtl
cmpsl
jns
es
mov
and
mov
cmp
jmp
faddl
xor
popf
or
scas
jno
xchg
mov
pushf
bound
repz
pop
loopne
sbb
adc
or
mov
aas
sbb
bound
fsubrp
push
push
repz
sub
push
stc
ljmp
loop
cmp
gs
shr
xchg
mov
mov
dec
jge
imul
mov
cmp
out
mov
adc
jecxz
sbb
jae
sti
shlb
or
adc
shll
xor
adc
add
and
lcall
shr
push
aas
lock
mov
xor
notl
xor
dec
lock
rcrl
cli
pop
scas
sub
dec
in
mull
cwtl
imul
ds
out
data16
dec
adc
cmp
cmpl
adc
call
insb
mov
fwait
push
scas
push
lock
mov
fimull
or
je
inc
cmpsb
adc
ret
xchg
std
out
movsl
dec
lahf
fucomp
sub
bound
sbb
in
jne
roll
lahf
sbb
inc
out
sbb
inc
fildll
mov
jne
lea
repz
scas
andl
popf
js
cmp
push
push
push
jb
or
cmpsb
sub
pop
jnp
ret
ficoml
lods
hlt
jns
xchg
popa
or
xor
insl
pop
jnp
push
fnstenv
test
out
push
push
outsl
or
sub
sbb
pop
jo
std
lret
sbb
push
sti
pop
fsubrl
push
cmp
mov
adc
shl
or
mov
push
pop
mov
fisubrs
xchg
in
test
pop
out
cld
jp
xchg
push
xchg
cmp
mov
dec
int
sbb
lcall
xlat
cmc
jg
into
gs
add
test
stos
inc
sub
inc
testb
mov
inc
mov
orl
sbb
cmp
scas
insb
inc
or
cs
jmp
dec
cmp
pop
out
and
fists
inc
or
add
mov
enter
loope
jae
xchg
scas
scas
push
xor
mov
icebp
repnz
lcall
and
xor
repz
inc
movl
in
dec
fsubrp
pop
ljmp
jecxz
mov
mov
test
mov
movsl
pop
gs
dec
shl
sbb
mov
popf
repz
or
or
ja
fsubrl
push
flds
sti
mov
cmp
sbb
andb
ds
ljmp
and
es
cmpsl
out
inc
mov
aaa
xchg
mov
xchg
in
mov
aad
inc
rcrl
test
and
hlt
mov
incb
and
fnstenv
mov
testl
pop
sub
mov
mov
cmpsb
xor
add
pusha
test
mov
sti
mov
jmp
xor
push
cmpsb
icebp
push
pop
adc
fbstp
jns
cmp
pop
add
mov
test
mov
jne
cmpsl
sbb
test
push
cmp
sbb
ds
ficoml
repnz
jge
popl
add
pop
out
adc
xor
xchg
das
ret
mov
cmp
mov
scas
pop
and
push
mov
js
daa
xchg
add
lds
sbb
movsl
icebp
sbb
fdiv
popf
sub
and
cmpsb
or
dec
xorb
loop
sub
push
aad
mov
and
cmp
ljmp
adc
ss
dec
mov
xchg
sbb
adc
mov
out
jb
push
js
mov
push
lods
repz
mov
enter
in
mov
data16
in
dec
fadds
dec
cmp
fildll
adc
xchg
add
sbb
mov
dec
pop
adc
icebp
mov
lret
inc
xchg
cmp
dec
ret
cld
dec
xchg
sub
out
test
int
sub
sti
popf
andl
jle
out
push
sbb
mov
fcompl
sub
fwait
push
cmc
outsl
cmp
gs
mov
push
int
movsb
es
lock
mov
jg
rcr
lret
cmp
jo
out
mov
fdivrs
out
stc
inc
data16
aad
pop
lcall
xchg
cmpsl
sbb
idiv
inc
jmp
test
adc
in
lea
icebp
mov
sub
inc
jge
pop
cmp
cltd
test
or
push
repnz
popl
lock
ficompl
xorb
stos
test
loopne
add
js
lret
pop
cmp
cmpsb
mov
dec
mov
and
xchg
sbb
cli
fprem
xchg
cmpsb
mov
push
dec
cld
repnz
je
mov
dec
xchg
mov
fistl
jo
sub
fistps
pop
or
fildll
cmp
jo
inc
xchg
sub
or
cmp
clc
test
cmc
rcrl
sub
mov
or
out
and
inc
sbb
push
and
rcrb
mov
stos
mov
adc
adc
in
repnz
and
push
add
addb
ss
sbb
and
loopne
sbb
adcb
xchg
icebp
clc
dec
sbb
ja
jns
inc
mov
subl
push
in
fdivs
daa
repnz
mov
jnp
push
push
in
sti
leave
jbe
xor
cmp
addr16
dec
popa
enter
and
and
push
cmp
fnstsw
ljmp
test
mov
in
xorl
in
daa
out
clc
add
andl
or
cmpsl
pushf
scas
lock
mov
pop
push
or
mov
inc
outsb
jns
sub
cmc
aas
inc
enter
jmp
out
sbb
xor
add
pusha
in
inc
mov
xlat
outsb
out
pop
cltd
adc
mul
mov
loopne
push
out
sub
push
cld
mov
imul
jne
shll
dec
imul
int
sahf
cli
sub
outsb
add
cwtl
das
cmp
cmp
adc
dec
jecxz
xor
push
mov
outsb
cmpl
insl
cmp
sahf
mov
mov
xor
popa
push
cmp
pushf
push
mov
mov
loopne
es
push
dec
loop
je
sub
imul
jl
cs
loop
or
sub
cmp
test
jns
aad
add
cmp
pushf
in
sub
mov
pop
jp
insl
mov
push
nop
stos
sbb
pop
leave
out
mov
ret
setle
aas
and
pusha
stc
popf
jmp
xchg
mov
xor
outsl
adc
push
mov
xor
lahf
movsb
xor
stos
jmp
cmp
and
ret
lret
mov
je
in
dec
lea
mov
dec
stos
adc
scas
stc
cmp
shll
mov
add
inc
push
fldt
dec
xlat
popa
fistl
jne
pop
imul
pop
testb
push
out
movsl
and
jecxz
pop
je
and
or
rcrl
ds
mov
add
aas
ret
dec
pop
stos
xchg
js
mov
pop
jl
pop
xchg
mov
repnz
arpl
jns
pusha
mov
push
aam
fucomp
loopne
xlat
mov
sbb
std
add
sbb
clc
andl
nop
mov
mov
jp
push
add
pusha
dec
pop
jmp
or
pop
sub
call
mov
jae
xor
inc
add
iret
stos
loope
adc
mov
ret
pop
jge
or
sbb
sbb
mov
push
cwtl
stos
dec
jle
mov
xchg
inc
mov
incl
sub
and
outsl
push
adc
cld
mov
jbe
mov
std
xchg
jns
std
xchg
sub
fisubl
cli
cs
movsl
sub
sub
or
pop
dec
nopl
jle
lahf
pop
pop
cmp
loopne
jecxz
lret
cmp
xor
gs
xor
cmpsl
xor
sub
mov
jle
es
in
mov
xor
sub
fsubl
sahf
jge
push
out
leave
adc
test
and
xchg
adc
sub
xor
lahf
xchg
mov
adcb
cmp
insl
mov
sbb
ds
mov
pop
out
leave
inc
leave
xor
cmpsb
adcl
add
testb
adc
mov
xor
or
in
push
nop
add
fs
sti
adc
sub
fdivrl
xchg
jae
xchg
xchg
and
inc
xchg
mov
fldlg2
test
int
mov
mov
jp
sbb
es
sbb
push
and
loop
pop
sub
mov
xor
xchg
stos
int3
inc
fnsave
dec
repnz
sub
add
adc
scas
sbb
cwtl
jae
xor
ja
xlat
jns
adc
adc
mov
push
aam
mov
syscall
mov
fsub
xor
add
in
int3
out
adc
or
push
jecxz
xor
mov
push
mov
xchg
rcll
inc
jnp
xorb
or
mov
pop
loope
sub
push
cmp
xchg
xchg
or
cld
or
pop
mov
xor
aam
mov
lret
iret
add
push
mov
add
xor
dec
cmp
sub
inc
testb
enter
rol
fcomi
xchg
lea
and
mov
push
mov
mov
cmpsb
sbb
adc
repz
imul
sub
jl
in
repz
dec
or
cmpsb
bound
mov
je
jae
jb
pop
lods
nop
push
xchg
jae
js
fdivrs
adc
movsl
scas
xchg
dec
pop
icebp
mov
cmp
clc
hlt
add
pop
xchg
fbstp
arpl
popf
mov
test
out
lods
jmp
cmp
fldl
pop
out
orb
outsl
push
loop
inc
pusha
mov
push
jno
mov
add
aam
xor
mov
fisttps
test
repnz
cli
mov
mov
fnstenv
inc
js
or
xlat
push
push
or
outsb
movsl
fisubs
mov
stos
imul
sub
cmc
pop
int3
cmp
shrb
pop
enter
cmp
sub
mov
rol
fists
mov
adc
outsl
pop
icebp
mov
mov
loop
add
adc
lcall
fwait
lock
flds
addr16
xchg
xchg
adc
ss
stos
dec
stos
cltd
repz
insl
lret
pop
lods
sub
subl
adc
call
cmp
sub
dec
mov
add
xchg
jl
pop
imul
xor
inc
sub
mov
mov
adc
jle
mov
sahf
adc
ret
sbb
iret
aas
pushf
sub
lock
add
in
mov
and
push
adc
jb
lcall
add
nop
push
test
inc
add
iret
hlt
in
ret
int
inc
stos
dec
nop
push
inc
stos
inc
jns
scas
inc
inc
inc
cmpsb
lock
mov
mov
add
repz
mov
imulb
add
sub
insl
add
pop
sbb
test
push
test
jae
gs
jo
orl
adc
sbbb
ret
outsb
push
movsl
add
mov
push
jb
cli
mov
ret
inc
adc
xchg
fdivl
sbb
xchg
sub
mov
pop
jo
add
ds
mov
lea
cmp
and
sub
jo
sbb
repz
daa
lods
sub
mov
dec
or
pop
dec
adc
movsl
into
dec
loop
jnp
movsb
mov
insb
inc
push
popf
je
xchg
pop
sbb
scas
pusha
lret
mov
jnp
mov
push
js
mov
xchg
adc
mov
fldcw
mov
cmpsb
cmp
insb
pop
test
push
es
jne
sti
mov
repz
pop
xchg
stos
filds
push
adc
jle
fs
inc
imul
lock
jnp
push
repz
nop
jns
cld
inc
add
cmp
mov
xchg
mov
inc
ss
pop
xchg
ficomps
out
test
movzbl
scas
inc
push
adc
int
xor
sbb
jo
pop
jg
iret
sbb
cmpsb
iret
arpl
xchg
lock
cmp
shll
add
imul
ss
adc
sub
and
inc
pop
adc
or
add
mov
imul
std
nop
js
jnp
dec
or
ja
pop
sahf
adc
pop
mov
adc
fs
clc
mov
jno
aad
pop
pop
jno
shrl
shr
push
adc
xor
inc
loopne
fucomp
jmp
in
jmp
pop
pop
in
outsb
fdivs
xorb
imul
imul
flds
adc
push
xchg
add
loope
push
adc
pushf
out
inc
out
mov
pop
lods
mov
adc
mov
sbb
mov
fdivrl
loop
clc
push
fldenv
xchg
sti
clc
push
mov
dec
das
cmp
ja
xorl
jne
in
into
movsl
sbbl
push
cmpsb
cmp
lds
push
fcmove
mov
jno
xchg
xor
or
adc
sbb
add
pop
push
xchg
xorl
enter
ljmp
es
cmp
lahf
in
jmp
fcoml
int
xchg
sar
push
je
rcl
fimuls
jmp
cmc
jmp
fistpl
xor
popf
jae
jno
push
xchg
and
cmpsb
out
movl
sahf
mov
sarb
mov
sub
pop
dec
lods
enter
adc
mov
jb
jmp
jg
and
fld
mov
outsb
sub
mov
cmp
push
fucomp
aaa
cmp
push
mov
cmpl
or
lahf
stos
adc
jne
daa
add
stc
wrmsr
jnp
into
mov
insl
orl
in
pop
fldl
sbb
sbb
xchg
xor
ds
xchg
pop
mov
outsb
gs
ret
mov
loope
jecxz
mov
mov
pop
lods
inc
mov
rol
fsubs
cmp
adc
or
cmp
popf
inc
dec
inc
jmp
and
lcall
cmp
lret
incl
cltd
and
faddl
inc
pop
daa
push
aam
roll
fistl
mov
jge
mov
shl
add
jge
adc
sbb
pop
aas
shrl
std
mov
cmp
lahf
adc
pop
push
js
xor
pop
pop
repz
push
dec
mov
stc
rcrb
cmp
fcomps
call
inc
sti
pop
iret
arpl
sbb
sbb
cli
xor
xor
cwtl
gs
xchg
xlat
add
pop
repnz
mov
push
fadds
adc
call
or
movsl
jmp
testl
inc
adc
pop
gs
mov
xor
movb
mov
mov
xor
add
enter
pop
imul
cmp
mov
xor
ret
xor
mov
mulb
push
cmpl
sub
dec
hlt
xchg
aas
mov
sub
sbb
sub
sbb
mov
jmp
or
in
out
adc
sbb
ja
ljmp
test
sbb
xor
xlat
ss
add
xchg
xor
dec
push
adc
sub
xor
cld
adc
dec
pop
cld
and
xor
fwait
stc
mov
fnstenv
insl
ljmp
das
in
lret
negl
xor
jo
sbb
pop
pop
ss
icebp
or
lods
jmp
push
xor
xchg
xor
push
add
lahf
js
test
lahf
pusha
jg
les
xchg
or
mov
dec
inc
mov
fldl2t
cmp
aas
jbe
xorl
adc
fsubrs
inc
sahf
test
ja
call
push
lcall
shll
lods
testl
ja
testb
scas
mov
and
outsb
lret
test
sbb
repz
adc
cmp
pop
push
cltd
arpl
sti
nop
fidivrs
fdivrs
cmpsl
mov
scas
jno
sub
xchg
pop
push
test
in
int3
mov
loope
or
cmp
or
mov
or
push
pop
push
add
or
adc
mov
mov
mov
push
data16
jg
push
push
sub
pop
repz
mov
insb
mov
jb
stos
pop
push
outsl
loop
neg
xor
int
xlat
mov
scas
scas
sti
mov
sub
data16
leave
mov
mov
push
push
ja
cmp
mov
inc
aad
adc
adc
cmp
sar
cmp
pop
jbe
aas
pop
int3
addl
scas
push
daa
mov
insb
scas
inc
fneni(8087
test
bound
fcomp
or
push
or
or
addr16
xchg
ror
pop
fnstenv
arpl
inc
adc
jp
mov
adc
popf
add
dec
movsl
or
js
aad
bnd
mov
push
pminsw
cmp
mov
lcall
fwait
int3
pop
loop
test
cmp
inc
popa
mov
and
mov
inc
fsubrl
xlat
push
stos
sub
sbb
pop
in
fs
jb
mov
mov
mov
shll
jle
addr16
cs
out
scas
dec
stos
es
pop
pop
pusha
pushf
jnp
or
mov
xor
insb
stos
pop
cmp
inc
inc
repz
pop
icebp
push
bound
test
aas
ja
jno
xor
in
nop
daa
les
dec
in
in
push
pop
pop
popa
clc
mov
mov
push
mov
mov
fdivl
and
arpl
popa
clc
cmp
mov
jecxz
popa
clc
std
cmp
mov
mov
popa
clc
insb
mov
lds
mov
subps
rcl
adc
pop
dec
mov
in
mov
cmp
pop
mov
add
lret
jbe
ret
xor
dec
leave
jge
cmp
out
enter
in
add
call
or
imul
mov
roll
test
movl
push
stos
jns
sbb
in
scas
adc
mov
test
mov
fsubrp
pop
aad
fnstenv
sub
movsl
popf
fistps
leave
aaa
sub
cmp
hlt
dec
fnstenv
pop
cs
xor
pop
xchg
push
mov
pop
in
sbb
data16
jnp
jbe
jb
pop
mov
std
js
sbb
jno
movsl
adc
and
dec
cmc
push
insb
inc
rcll
leave
mov
loope
mov
or
or
sti
test
cwtl
test
xor
push
arpl
xor
mov
inc
sub
movsb
mov
popf
ret
lods
sarb
dec
insl
lds
sbb
add
push
in
pop
sub
add
dec
jp
ss
inc
addr16
push
push
popf
test
sbb
jp
mov
mov
insl
scas
fists
stos
nop
push
xor
ja
xor
loopne
ljmp
loop
xor
mov
lret
notl
scas
lds
pop
push
das
jno
xor
in
xlat
enter
adc
sub
outsl
or
sub
fbstp
jae
mov
dec
nop
and
sbb
pop
sub
std
adc
aad
jne
mov
nop
faddl
mov
rorb
das
cli
xchg
scas
cmp
movsb
pop
mov
mov
mov
inc
push
xchg
iret
sub
fbstp
mov
into
jge
jmp
pop
or
xor
fcmovne
mov
iret
data16
fxch
mov
in
outsb
iret
pop
push
jb
fnstsw
out
dec
xchg
and
xchg
in
shlb
jecxz
mov
jmp
lret
push
jo
mov
jo
jmp
cmp
push
adc
sbb
shl
push
cmp
daa
shr
push
clc
inc
pop
xor
jo
cmpsb
push
mov
gs
cmp
imul
inc
push
ret
in
ds
pop
adc
xlat
das
roll
xchg
mov
sbbb
or
add
pop
int
es
clc
sahf
inc
stc
daa
and
jg
ja
jae
enter
imull
js
cmp
add
js
adc
fnstcw
mov
enter
mov
stc
jb
ret
sub
jno
aaa
bound
dec
cli
and
mov
lds
ja
cmp
daa
imul
cli
lcall
xor
fistps
mov
in
push
and
inc
fwait
pop
loop
pop
adc
je
lods
pop
cmp
mov
ret
cli
sti
pop
sbb
pop
scas
ret
lret
and
mov
sub
addr16
std
or
js
addl
add
in
push
dec
push
les
jne
sub
sbb
les
dec
lds
mov
test
xor
insb
das
mov
les
aad
push
or
mov
dec
fldt
lret
pop
shlb
call
add
xor
push
insb
xor
mov
das
mov
or
push
mov
jno
xchg
push
mov
xor
xor
ss
pop
inc
dec
fbstp
lea
push
andl
cltd
push
montmul
cmpsb
test
lods
add
or
int
or
xor
cmpl
adc
das
out
jb
lea
fs
popa
inc
or
xor
lret
cmc
xchg
stc
inc
cmc
and
rcrl
inc
fwait
xchg
out
lods
lret
lret
scas
add
xor
out
je
popa
pop
add
rcr
push
mov
mov
pop
jecxz
mov
cmpl
or
lea
test
dec
cli
xchg
cmc
sbb
fisttpll
cli
mov
stos
pop
and
movsb
or
lcall
cmp
rorl
add
hlt
push
sbb
clc
pusha
jg
es
jo
dec
mov
mov
jb
xchg
add
mov
sbbb
jmp
adcb
jmp
adc
popf
sub
stos
in
and
jmp
bound
jns
lods
cmpsl
rorl
mov
decb
and
jmp
xor
xchg
cmpsb
mov
scas
mov
mov
sti
push
insl
es
rcrb
push
shl
pop
call
in
mov
cmpl
outsb
jno
lret
lret
mov
cmp
mov
sbb
mov
sub
mov
jp
cmp
push
adc
adcb
push
dec
pop
mov
cmpsb
fwait
inc
out
lret
lahf
ds
pop
push
sbb
jne
mov
imul
push
fdivl
call
mov
push
arpl
rcl
repnz
ja
dec
xchg
cwtl
daa
mov
jl
fdivr
daa
popa
pop
lock
dec
outsb
mov
mov
sbb
sub
mov
cmp
ret
sub
jnp
mov
add
inc
in
aas
xor
adc
pusha
das
cmp
or
mov
sub
pop
pop
and
xor
push
add
rclb
xor
std
insl
adc
imul
subl
xchg
mov
mov
enter
out
inc
sub
cmp
mov
push
jmp
incl
movsb
cmp
mov
addr16
dec
testb
jae
push
push
sub
mov
cmp
and
xor
movl
adc
mov
pop
dec
int
and
pusha
repnz
cmp
enter
ss
pop
out
cmpsl
add
sbb
push
insl
imul
add
or
or
push
inc
or
cmp
xor
push
cmpsb
pop
pop
sub
mov
push
xchg
mov
sub
loope
js
mov
sbb
inc
push
clc
sbbb
imul
loopne
insb
popf
add
sti
mov
loop
into
adc
adc
shlb
shll
xchg
psraw
fwait
test
incl
decl
pop
lods
ljmp
call
sbb
xor
int3
out
imull
push
pop
adc
sti
sub
andl
outsb
loope
scas
push
jbe
sub
push
sub
mov
dec
or
test
sub
pop
pop
push
jecxz
mov
cld
outsb
shll
loopne
iret
shll
xchg
sbb
pusha
insb
add
and
inc
fisttps
and
outsb
outsl
repz
pop
icebp
xchg
fnstcw
in
fsubrs
imul
lcall
add
inc
mov
xor
or
lds
add
or
cltd
xchg
dec
lcall
pop
sub
adc
or
cld
mov
dec
iret
mov
lea
dec
cwtl
mov
int
push
lods
pop
mov
mov
stc
cs
cltd
dec
jno
mov
jns
arpl
adc
outsb
add
movsb
popa
mov
xchg
fdivs
mov
mov
mov
dec
shrl
jle
add
cmp
ljmp
inc
adc
cmp
mov
inc
push
lahf
adc
les
pop
jb
stc
arpl
sub
pushf
arpl
xchg
imul
inc
call
jp
adc
adcl
jp
mov
and
cmpsl
ror
sub
dec
xchg
or
push
dec
hlt
dec
sbb
inc
mov
dec
repnz
mov
inc
pop
orb
js
lock
decl
sbb
jg
and
add
mov
mov
mov
imulb
pop
add
les
dec
das
je
aas
outsb
std
and
sbb
outsb
add
jecxz
mov
into
imulb
sub
dec
and
push
xor
faddl
hlt
mov
std
test
test
filds
dec
or
sbb
xlat
outsb
cmp
sbb
icebp
shl
mov
repz
fcomp
loope
dec
add
xor
push
pop
roll
jno
jg
jg
ljmp
into
lea
aaa
out
push
mov
pop
shlb
in
les
in
push
inc
std
cmp
jb
stos
push
mov
mov
pop
subl
scas
es
insb
cmpsb
leave
jns
outsb
arpl
add
or
push
stos
insb
push
fidivrl
cli
inc
ss
push
sbb
xor
hlt
dec
cmc
jne
fs
push
cmp
push
add
rorl
fadds
push
inc
cmpsl
lds
in
rcrl
cmpsl
push
push
jmp
inc
dec
inc
div
and
cli
lds
testb
xchg
scas
ret
and
add
insb
sarb
insb
pushf
mov
cmpsb
inc
sub
in
mov
push
dec
aas
or
lea
jl
out
or
adc
dec
xor
inc
or
mov
scas
jecxz
call
dec
imulb
scas
outsb
sbb
cwtl
rcrb
mov
int
pop
pop
imul
push
mov
xor
ss
jmp
or
jnp
sbbb
inc
xchg
aad
xchg
cmp
push
pop
in
cmc
mov
pop
clc
scas
mov
add
popf
das
sub
scas
push
mov
ret
in
or
lret
es
nop
out
test
cltd
sti
push
add
clc
xchg
add
sub
jl
mov
pop
or
repnz
fbstp
xor
add
insl
lcall
sub
mov
pop
or
outsl
rol
ret
out
cltd
and
loopne
test
jae
xchg
xor
lds
and
push
cs
push
xlat
je
dec
insl
pop
popl
mov
into
and
fsubl
idivb
cwtl
pop
push
jne
in
loop
mov
int3
iret
fcmovne
jmp
mov
sbb
rcl
imul
adc
jecxz
mov
sbb
push
pop
repnz
nop
repz
vshufps
push
mov
mov
mov
inc
push
mov
addr16
stc
pushf
sbb
cmp
test
adc
mov
stos
ja
xchg
es
aad
push
sub
sub
pop
xor
ja
push
lds
add
popa
pop
sub
or
pop
out
std
xchg
imul
or
je
sub
mov
inc
pop
jnp
mov
hlt
adc
inc
add
inc
les
or
xchg
fcoml
adc
popf
push
imul
mov
hlt
shr
xlat
push
sbb
cltd
mov
cmp
jl
and
iret
sub
mov
jae
sub
lods
pop
leave
or
sti
jo
jecxz
and
jge
sub
xor
xchg
ja
jmp
mov
push
jl
xor
out
mulb
into
adc
rcrb
jmp
pop
sub
cmp
pop
cwtl
push
arpl
mov
shlb
add
or
repnz
fmull
frstor
pop
enter
shll
pop
lcall
fcomi
out
test
notrack
out
push
ret
out
mov
call
push
jg
jmp
cli
adc
dec
fdivrl
ror
lock
add
pop
dec
aaa
fcoms
pop
ljmp
cli
xchg
stos
test
inc
pusha
test
rol
inc
ss
in
inc
jae
bound
loop
popa
pusha
sbbl
ficoms
mov
cltd
out
mov
testl
xchg
cltd
popa
das
test
add
mov
lods
inc
jb
xor
movsb
das
xor
dec
pop
insb
push
cltd
push
mov
xor
add
lret
dec
or
dec
in
mov
mov
fldz
xchg
mov
xlat
movsb
ret
or
cmpsl
pop
cmpsb
repnz
jmp
mov
cmc
mov
sbb
or
adc
daa
cltd
adc
int
inc
lss
and
xlat
cmpsb
mov
sub
mov
scas
out
pusha
aas
test
xchg
pop
in
ror
in
ret
js
test
ret
sbbb
lahf
adc
nop
testl
push
fcoms
cld
fidivrl
imul
lds
xchg
jbe
movsl
mov
mov
pop
loopne
jle
mov
mov
or
xchg
push
xor
leave
mov
mov
sarb
dec
js
rol
out
test
mov
sub
or
jp
jb
test
fimull
adc
sub
fldenv
data16
gs
sbb
rol
out
into
insb
cmp
shrl
cwtl
loope
xchg
shlb
sbb
ss
mov
mov
cmp
adc
test
fs
sub
aam
push
push
ljmp
outsb
sub
in
call
fsts
mov
or
and
imul
out
add
jge
addb
sbb
repz
mov
jns
push
dec
jne
cmc
into
and
push
stos
lahf
jg
inc
mov
sub
add
pop
mov
push
popf
jae
ja
arpl
xchg
dec
popf
call
jmp
add
outsl
and
push
dec
rol
imul
push
enter
xor
pop
adcl
and
xchg
jae
divl
mov
insb
iret
jmp
or
das
or
je
dec
xchg
and
dec
fiadds
dec
cmp
in
cmp
test
jnp
gs
rcrl
mov
adc
inc
add
rorl
call
and
scas
add
mov
daa
cmp
or
out
cmc
dec
sub
and
mov
inc
mov
lret
mov
test
add
sbb
push
mov
test
cltd
adc
rcll
lods
sbb
mov
and
dec
sbb
mov
and
xor
push
outsb
mov
out
push
popa
xorl
and
mov
add
cmc
mov
adc
xchg
mov
ss
fwait
sub
cmp
cli
daa
cwtl
sti
fwait
xchg
mov
fisubs
xchg
add
add
jns,pn
mulb
xchg
adc
or
mov
inc
inc
mov
icebp
jg
imul
xlat
ljmp
movsb
fnstcw
xchg
mov
fcoms
or
ret
jnp
jle
daa
adc
dec
pop
dec
idivb
add
mov
push
pop
push
movsb
fcomps
add
cmp
mov
lea
cmpsb
adc
out
and
mov
call
jno
pop
push
arpl
ljmp
pushl
push
cmpsb
mov
sub
loope
adc
inc
xchg
cmc
inc
ljmp
stos
xor
addps
addr16
push
jge
lcall
add
insb
jo
mov
repz
sbb
movsl
cmp
outsl
and
gs
mov
lds
or
mov
jae
mov
push
fbld
mov
mov
lods
adc
subl
aas
push
adc
pop
sbb
push
xchg
out
xchg
sbb
imul
adc
insb
jle
xor
cmp
mov
jae
dec
negb
mov
int
in
push
jo
je
xchg
inc
in
test
lea
jge
gs
xchg
mov
xchg
mov
vrcpss
fcmove
fs
mov
xor
mov
add
add
inc
test
arpl
enter
lods
in
inc
ds
adc
fwait
xor
push
inc
mov
sarb
aad
ret
push
pop
cmpsb
add
jmp
icebp
pop
sub
jbe
enter
dec
and
jae
ret
dec
or
js
daa
mov
loopne
add
leave
testl
push
jo
push
lea
pushf
mov
jecxz
sbb
lahf
sub
fwait
ror
xchg
clc
or
sub
pop
and
jo
negl
cmp
push
mov
push
jecxz
cmp
mov
xor
lods
lahf
filds
enter
inc
data16
sbb
inc
mov
cmc
pop
addr16
push
jb
xor
sub
push
mov
sbb
jne
pop
cmp
out
mov
pop
aaa
xchg
push
bound
cmp
sarb
xchg
enter
test
iret
sub
aam
lret
pop
in
movsb
aas
in
loopne
dec
cmp
in
jnp
xchg
out
dec
jecxz
orl
add
cmp
cmp
aam
insb
ret
cmp
xlat
repz
iret
imul
fucomip
test
mov
icebp
jb
lahf
mov
scas
into
xchg
pushf
lret
sbb
inc
jae
jp
jno
adc
sub
inc
lods
mov
push
inc
xchg
repz
test
repz
test
adcb
dec
fists
mov
arpl
fisubl
xor
mov
leave
and
loopne
and
insb
pop
cmpsl
mov
xor
add
les
push
cmpb
mov
lret
push
adc
adc
add
lcall
in
mov
pop
cmp
fcmovbe
xlat
loope
dec
cld
push
cwtl
test
scas
or
mov
cmpl
scas
and
inc
stos
insl
mov
sub
adc
jo
clc
xchg
jecxz
in
push
rcr
push
inc
je
test
imul
pusha
lock
gs
or
fisttpll
test
jge
mov
jo
and
inc
jne
sbb
fsub
leave
xor
fsubrs
add
cmp
lret
pop
mov
fdivs
cld
jecxz
and
sub
outsl
and
nop
pop
orl
adc
xor
pop
iret
out
sbb
fs
int
or
and
pop
xchg
inc
jecxz
sub
outsb
sahf
andb
push
lret
xchg
sub
test
adc
repz
cli
leave
push
lods
xchg
mov
fdivl
stc
pop
data16
add
push
in
mov
movsl
fmull
adc
lea
dec
repnz
or
mov
xchg
push
xor
cmpsl
adc
dec
aaa
rclb
daa
add
sbb
test
push
pushf
testb
stos
stos
cmp
lods
add
mov
out
mov
inc
insl
insb
add
and
xor
mov
mov
std
cwtl
out
push
xor
daa
xor
arpl
xchg
adc
js
and
or
push
imul
jbe
mov
and
pop
hlt
mov
scas
xchg
sbb
inc
pop
lock
fsubl
mov
lret
fistl
clc
push
or
pop
pop
out
andb
les
fstl
int
pop
mov
mov
push
adc
jae
xchg
mov
js
push
cld
jns
pop
xchg
or
vphaddwd
cmp
dec
sub
in
cmp
lods
push
dec
or
aad
xor
xchg
loope
int3
repz
sbb
push
cmc
pop
outsl
adc
movsl
mov
adc
call
xlat
mov
dec
and
cmp
cmp
sub
rorl
pop
mov
loope
pop
sbb
ret
jg
stos
pop
mov
mov
pop
cli
and
scas
jbe
xchg
mov
cmp
adc
jns
jnp
cmpsl
adc
mov
cmp
arpl
pcmpgtd
mov
jle
bnd
jl
pushf
cmpsl
xor
fstl
lock
in
and
and
pop
xchg
xor
jp
inc
fwait
ret
xchg
movsb
inc
repnz
mov
pop
loopne
lcall
jae
sbb
dec
cmp
xlat
cmp
and
jb
inc
mov
push
add
xchg
loopne
fwait
cld
int3
and
inc
push
daa
decb
incl
ret
inc
adc
dec
and
mov
repz
or
int3
inc
lcall
inc
cmp
testb
in
rol
cmp
dec
loop
shl
mov
lods
je
push
push
xchg
mov
xchg
data16
jb
mov
mov
mov
jmp
das
mov
adc
adc
lret
xlat
in
jecxz
dec
add
pusha
nop
xchg
jmp
mov
and
jmp
loope
jo
out
jo
push
ret
adc
stos
xchg
sahf
pop
clc
imul
pusha
jp
popa
jge
js
jne
and
mov
bound
pushf
in
jle
jno
pushf
xlat
mov
pop
inc
out
mov
cmpsb
cmpsl
xchg
rol
pop
lret
mov
sbb
loopne
fildl
sub
fdivrs
jp
push
shrl
pop
push
call
int3
inc
xchg
mov
or
rclb
mov
es
rcl
jns
outsl
in
and
cmp
inc
mov
jmp
lods
push
dec
shrb
shll
push
dec
imul
mov
out
mov
mov
mov
jns
adc
mov
add
push
or
out
cltd
ret
hlt
mov
mov
adc
add
jle
push
sub
or
adc
call
adc
fxch
lea
jnp
cld
test
test
adc
mov
sbb
mov
loop
dec
clc
pop
popa
stos
fisttpll
ds
xchg
cmc
orb
bound
out
imul
push
negb
push
ljmp
pop
add
cmp
pop
cmc
icebp
aam
mov
lahf
push
mov
mov
xchg
cltd
lea
aam
in
std
inc
arpl
adc
inc
leave
outsl
add
pop
scas
adc
mov
jge
inc
jmp
out
xor
in
hlt
mov
or
dec
adc
ss
lock
mov
adc
bound
pop
jmp
test
add
call
mov
dec
sbb
adc
pop
rorb
mov
xorb
and
mov
test
lods
int
imul
adcb
pop
mov
add
dec
push
mov
shlb
inc
fnsave
rcrl
fs
comiss
jg
jno
arpl
cmp
test
in
push
cltd
xor
sbb
subb
jbe
sub
mov
mov
arpl
lcall
and
add
jne
jl
shrl
inc
fidivrs
pop
mov
pusha
inc
fcoms
ds
jae
aaa
mov
inc
ljmp
pop
or
push
gs
push
out
dec
in
ja
inc
mov
inc
ss
adc
inc
pop
push
inc
xchg
sub
xor
je
sub
fwait
insl
aaa
into
mov
and
rorl
push
dec
movsb
cmp
adcb
fcoml
test
jne
loope
xor
push
mov
xor
call
test
sbb
and
cld
jbe
xchg
sub
sbb
scas
and
daa
pop
mov
ss
fnstenv
cmpsl
pop
lock
clc
popl
fwait
xor
cmpsl
mov
xor
pop
ja
ljmp
leave
xchg
call
and
sti
xchg
cwtl
js
jbe
mov
mov
jbe
sub
leave
scas
inc
incl
scas
inc
cmp
aam
pop
int3
arpl
scas
dec
fnstsw
xor
insb
fs
stc
pop
test
mov
xlat
mov
stc
add
xchg
xor
adc
scas
subl
push
jecxz
adc
ss
enter
lock
mov
mov
sub
insb
add
cmp
jbe
push
lods
inc
inc
mov
xchg
shlb
xchg
in
jle
cmpsb
int3
arpl
and
subl
dec
and
add
push
jmp
loope
inc
pop
jns
lahf
stos
and
pop
push
push
lods
stos
mov
fdivl
push
mov
cmp
cli
xchg
push
pop
aad
mov
scas
cmpsl
lods
repz
enter
inc
int
jb
add
pushf
xor
sbb
mov
dec
loopne
fsubrs
rorb
or
sbb
aam
xlat
push
in
add
pop
or
scas
enter
push
push
and
aaa
dec
popf
aas
iret
dec
in
push
xchg
and
push
cli
push
scas
inc
xchg
or
iret
lret
cli
push
mov
xchg
sub
cs
lret
cli
push
stos
inc
xchg
push
pop
lahf
and
repz
lea
adc
or
aam
cld
xchg
xchg
negl
and
xor
in
pop
hlt
je
dec
in
xchg
mov
les
dec
mov
cmpsl
adc
cmp
popa
add
cmpsl
xor
push
dec
in
fdivs
push
movsl
dec
jecxz
das
mov
add
xchg
je
dec
mov
jnp
pop
hlt
mov
jae
pop
mov
jb
js
mov
inc
in
xlat
outsb
movsb
aaa
add
lods
mov
sbb
jg
loopne
adc
scas
mov
cmp
jle
int3
scas
xor
scas
inc
scas
mov
leave
pusha
mov
movsb
cmp
leave
pusha
xchg
les
mov
outsb
scas
inc
lahf
int3
jp
add
cmp
inc
insb
pop
mov
ja
test
pop
dec
jecxz
jno
mov
js
add
adc
pop
inc
jns
push
push
jnp
sub
cmpb
mov
pop
repz
leave
pusha
popf
sbb
fidivrl
outsl
pop
repnz
add
xor
popa
sbb
fmull
xor
leave
jmp
push
push
popf
cmpl
sbb
dec
pushf
or
out
xchg
jmp
dec
loopne
or
inc
fadds
cltd
or
sub
jnp
cmpsl
ds
lods
sbb
insb
and
xchg
push
mov
out
imull
xlat
outsb
pop
xor
jp
mov
xchg
popa
ds
imulb
int
jmp
cmp
pop
jno
inc
fisubrs
sub
rol
ret
pop
cmc
inc
xchg
jb,pn
insl
add
movsb
and
ret
mov
fisubl
test
loop
xchg
xorl
mov
mov
daa
mov
jo
shrl
mov
daa
mov
ja
mov
dec
fldl
fdivs
ret
pop
jg
inc
mov
sub
dec
and
lods
and
in
xor
fs
push
stos
or
sub
pop
jmp
lea
and
xor
mov
fs
loope
push
adc
mov
es
sahf
fwait
xor
fists
dec
jae
les
mov
cmp
cs
inc
fdivl
lea
call
dec
inc
insl
add
jo
cmpsb
xchg
iret
retw
jl
call
out
dec
aas
sbb
sahf
nop
mov
stc
adc
adc
mov
fs
bound
mov
and
xchg
sub
mov
mov
gs
xor
popl
pop
mov
addr16
xchg
cmp
dec
mov
arpl
pop
xchg
xor
sahf
push
mov
pop
out
xchg
sub
insb
nop
jl
lds
sub
insl
xchg
mov
mov
pop
loop
xchg
inc
pop
jne
mov
fcompl
xchg
popl
and
pusha
test
jecxz
adc
jne
xchg
sub
stos
or
adc
sub
sub
daa
inc
icebp
aas
and
lret
cld
adc
jl
ljmp
add
xchg
push
loope
push
adc
sbb
aas
and
popa
push
call
sbbb
pop
xor
xor
out
mov
cmp
inc
rclb
out
xchg
push
popf
sarl
scas
loop
mov
cld
xor
mov
shll
aad
sbb
leave
mov
cmp
dec
jbe
add
cmp
hlt
ret
aaa
into
hlt
adc
fs
push
dec
gs
add
inc
push
cltd
mov
fs
push
xchg
pusha
push
movsl
xchg
mov
cmp
jecxz
lea
add
jno
pop
shrl
pop
scas
lds
lods
or
fiadds
and
ss
sub
mov
or
sub
icebp
or
dec
push
xor
sbbb
fcmovu
icebp
cli
adc
cli
xor
inc
cltd
mov
dec
loop
jle
inc
pop
leave
lahf
jg
shr
mov
add
inc
or
jbe
or
inc
leave
fnstenv
repz
pop
lock
cmp
jns
jg
bound
lret
faddp
pop
or
mov
dec
sub
rcrl
into
mov
jno
jnp
or
enter
popf
repnz
dec
cld
and
xchg
or
mov
or
mov
icebp
or
inc
fsubl
sti
repz
push
pop
add
pop
subps
pop
pusha
cmpb
test
cmp
xchg
sub
jo
sbb
rolb
out
clc
mov
repz
maskmovq
idivl
mov
sti
sub
shlb
iret
cmp
inc
enter
lret
shll
lret
ss
mov
out
or
adc
flds
jmp
scas
sbb
icebp
xor
adc
cmp
jecxz
rorl
push
mulb
push
sbb
and
push
mov
push
push
fisubs
push
xchg
xchg
push
lock
test
inc
enter
mov
jns
push
mov
cwtl
sub
dec
aad
adc
test
mov
arpl
adc
int
add
icebp
sub
push
jg
add
aam
mov
push
fsubr
and
xor
fnstenv
push
mov
push
sub
lcall
lock
outsl
into
mov
lds
mov
hlt
das
ja
pop
int3
fwait
aas
loop
cmc
xor
mov
add
in
stc
popa
cmpsb
leave
push
ljmp
jge
ror
sub
sti
mov
shll
sbb
cltd
fs
inc
adc
mov
inc
sbb
xor
test
sbb
xor
dec
out
push
cli
push
push
mov
movb
adc
popa
inc
xor
inc
je
pushf
mov
sbb
jl
int
jecxz
les
cli
sub
sub
push
push
scas
dec
repz
and
cmpsb
cmp
mov
sub
xchg
mov
and
push
or
in
sbb
cmp
aad
lds
lret
xor
in
imul
insl
mov
cmpsb
mov
shll
fimuls
mov
mov
mov
lock
sarl
jmp
fs
add
mov
in
loop
push
mov
xchg
add
insl
stos
adc
xor
ljmp
and
jp
lock
cmpsl
mov
fidivs
cltd
push
sub
cmp
insb
pop
mov
cmp
imul
scas
bound
push
lret
and
mov
mov
pop
iret
cmpsl
aad
mov
add
jg
fistl
push
leave
in
addb
subb
mov
idiv
jne
sahf
arpl
cmp
push
jno
popa
add
sub
les
loope
test
pop
or
cmpsb
pop
add
mov
sbb
lret
inc
push
xchg
aas
dec
sub
xor
jge
stos
xor
push
repz
push
pop
lock
ds
push
out
dec
xchg
popf
mov
push
add
pop
int3
push
incb
ljmp
adc
sub
mov
js
sub
cmp
mov
push
shlb
arpl
call
gs
and
inc
cmpsb
mov
fisubs
movsl
mov
xor
rcrb
adc
jg
or
pop
sub
sbb
test
arpl
sub
dec
lds
daa
ljmp
xor
gs
and
and
jmp
mov
adc
push
hlt
ja
sub
xlat
inc
loopne
push
fldt
call
mov
fisttpll
psubusw
ret
daa
pushf
divl
mov
lea
xlat
ss
imul
ret
dec
xlat
sbb
sbb
je
push
pop
rcrl
adc
inc
mov
imul
into
dec
sub
push
leave
xchg
xchg
fs
stc
jnp
int
mov
sbb
xchg
or
cmc
stos
jecxz
call
mov
aas
add
cli
icebp
lds
fcoms
rolb
cmpsl
pop
adc
mov
cmp
fimuls
sub
popf
mov
push
jo
fsts
sar
lret
shlb
ljmp
ffree
iret
fnstenv
call
scas
bound
negb
xchg
insb
mov
pushf
lret
insl
add
mov
into
ds
lea
or
dec
mov
mov
movsl
repnz
shl
cmpsb
pop
mov
mov
ds
inc
jb
rorl
sub
push
std
dec
or
cmp
pop
add
icebp
decb
xchg
lods
pop
stc
aad
pop
ljmp
mov
jnp
cmp
outsb
mov
dec
outsb
pop
mov
dec
mov
outsl
jbe
clc
cmpsl
cmp
nop
mov
push
insb
mov
out
xor
pop
rcll
mov
out
in
pop
int
in
and
hlt
sub
inc
filds
jecxz
add
mov
pushf
sbb
xchg
nop
cwtl
cmp
test
cmpsb
cmp
dec
shlb
or
lret
and
mov
hlt
inc
enter
mov
in
pop
lret
push
mov
jge
jnp
inc
cmp
inc
fsubrs
adc
lds
jne
int3
cmpsb
jl
fildll
mov
push
xor
outsl
movsl
dec
ret
or
adc
xchg
lea
rclb
or
test
pop
sahf
cmp
lea
pusha
adc
pop
sahf
xchg
push
or
mov
call
push
mov
aas
and
dec
pop
inc
negl
sbb
push
cmp
fcompl
adc
ljmp
push
or
cmp
int3
and
add
stos
xchg
jnp
mov
lret
addl
push
rdmsr
enter
sub
or
sub
mov
int3
inc
gs
dec
mov
bound
fwait
arpl
mov
and
cwtl
int
push
pusha
pop
idiv
aas
fldl
mov
std
or
jbe
xchg
scas
mov
fisubl
in
in
adc
pavgb
sbb
cli
decb
test
adc
mov
les
std
test
mov
jg
dec
les
lea
in
popf
xchg
pop
jb
add
xor
mov
pop
cmp
insl
jge
jle
rcrb
dec
shl
test
inc
sbb
push
mov
hlt
cwtl
xchg
fdivrs
cmpb
jmp
fldenv
add
xchg
jge
addb
add
mov
lret
int
test
loope
or
mov
jmp
xchg
leave
add
adc
adc
mov
jmp
popf
cltd
xor
jb
lds
and
lret
jns
stos
test
ss
test
insb
test
jne
dec
bound
cmovl
cmp
dec
rorl
comiss
lahf
push
dec
jno
and
orb
pop
loop
sbb
or
lock
stos
sbb
into
sbb
test
sti
dec
loopne
into
cltd
adc
jl
stc
add
lahf
je
ja
mov
mov
xchg
sarb
adc
mov
xchg
xchg
clc
jl
lock
lods
push
or
and
fsincos
adc
cli
lods
loopne
call
lods
mov
add
ljmp
gs
rorb
aam
loope
and
sbb
adc
jns
sbb
fwait
inc
mov
iret
push
data16
data16
xor
and
mov
imull
mov
push
stos
adc
pop
stc
les
pusha
orb
pusha
jne
pop
cli
nop
xchg
int
data16
imul
sub
push
sti
inc
ret
fistps
ss
cmpl
sub
cltd
outsb
add
test
push
cmc
dec
scas
rcll
mov
inc
and
orl
jmp
ds
jo
or
adcb
pop
mov
daa
movsb
ret
fsubr
cmp
xor
repnz
push
in
fdivr
xor
mov
pop
inc
and
xor
pop
lret
inc
orb
aas
mov
xchg
jp
xchg
clc
xor
dec
pushf
xchg
dec
data16
cmp
add
jge
sub
push
in
dec
sub
mov
inc
aas
lods
repz
jnp
jo
out
movsb
cmp
xor
imulb
dec
add
popf
inc
repnz
mov
inc
mov
aas
arpl
nopl
xor
addb
adc
rol
loope
mov
mov
xor
or
scas
js
ds
call
fldenv
mov
xchg
jle
andb
mov
cmp
aaa
clc
sbb
lcall
push
out
xchg
push
and
cmp
xor
pusha
jbe
or
adc
mov
or
dec
cwtl
mov
into
or
test
decb
pusha
cli
sti
mov
sbb
mov
lock
cmc
push
nop
and
adc
les
xchg
cmp
sub
and
cmp
mov
hlt
and
ja
ret
mov
rorb
push
lret
rcrb
insl
movsl
ljmp
pop
add
popf
daa
lret
cmp
push
xrelease
jecxz
lret
xor
cmc
icebp
and
fiaddl
les
mov
lea
or
mov
aad
inc
stc
jmp
data16
cmp
dec
dec
dec
hlt
dec
insb
pop
xor
xchg
lea
add
sbb
xor
in
ja
and
and
test
stc
outsl
in
dec
mov
pop
jmp
or
mov
in
leave
enter
adc
xor
lret
xor
in
imul
mov
mov
xlat
mov
notb
clc
aam
lahf
pop
shld
out
shrl
dec
leave
xlat
dec
in
dec
push
int3
jo
xchg
sub
and
add
out
outsb
cs
cmp
cmc
daa
jle
mov
mov
jp
push
in
imul
outsl
push
push
mov
ficompl
out
cmpl
inc
mov
sti
xchg
bound
mov
mov
push
insl
mov
and
daa
pop
mov
jge
lock
push
movsl
popa
aaa
xlat
repnz
jp
push
push
mov
inc
and
xchg
jg
nop
mov
pop
outsb
xchg
mov
ret
sub
popa
popf
jecxz
or
pushf
arpl
in
xchg
fcompl
es
cmpb
shlb
sub
test
stos
pop
sub
push
call
pop
inc
sub
fs
in
dec
aaa
pop
in
mov
mov
std
jecxz
mov
dec
dec
aam
lock
dec
lret
and
lcall
add
fcoms
dec
repnz
fiaddl
cs
cltd
mov
lods
pop
mov
in
xchg
lock
jb
lret
or
std
pop
jmp
dec
movsl
pop
rep
add
cmp
sub
addl
adc
fsubl
out
out
mov
and
scas
push
mov
push
ret
cwtl
xor
sbb
daa
inc
ljmp
xlat
outsb
mov
ret
jecxz
lret
leave
push
ljmp
and
mov
jne
imul
movsb
jge
insl
lahf
xchg
mov
jg
out
mov
push
lcall
xchg
pop
xchg
mov
adc
push
outsb
mov
jecxz
shll
stos
and
hlt
mov
call
out
lea
or
sub
cld
xor
pusha
jae
shlb
aas
mov
cmc
ljmp
shll
ficomps
adc
rol
cmc
and
mov
jmp
mov
mov
les
inc
nop
ljmp
xchg
dec
in
pop
lahf
test
lods
test
stc
outsb
cwtl
jmp
jle
cwtl
sarb
lock
in
push
pushf
cwtl
mov
popf
add
addl
or
push
mov
sbb
mov
nop
mov
sub
sbb
jo
inc
fwait
xchg
and
cmpsb
jbe
cmpb
push
shrb
dec
xchg
xchg
xor
ljmp
adc
xor
push
pop
ja
mov
sbb
shll
test
daa
jbe
repnz
je
aam
imul
into
push
adc
push
sub
pop
mov
ljmp
dec
cmc
mov
push
sarl
mov
pushf
clc
and
and
call
push
imul
pop
imul
insb
jne
push
or
mov
push
jl
nop
pop
mov
xchg
add
shll
clc
aas
in
jl
cwtl
cmp
adc
out
mov
sahf
pminsw
sbb
sub
adc
push
movsl
fdivl
fdecstp
sarb
stos
dec
out
ljmp
cmc
mov
mov
test
les
fistl
mov
adc
popf
mov
adc
aas
dec
lcall
ss
dec
data16
dec
cmp
pop
insb
js
inc
stos
ss
stos
leave
out
je
lret
sarl
mull
es
cmp
hlt
fmuls
cwtl
lret
bound
test
jo
gs
test
pop
jl
mov
jl
jle
stc
sahf
insb
mov
mov
iret
push
nop
push
test
fcomip
xchg
xor
push
sbb
pushf
xchg
adc
xor
in
pop
and
adc
divb
testb
mov
pop
outsl
jae
sub
je
push
adc
mov
call
jae
mov
dec
testl
mov
test
lcall
push
je
dec
cmpsb
and
repnz
arpl
int3
lret
xlat
movb
enter
divb
or
rcrl
sbb
mov
adc
cwtl
inc
sbb
cmp
xchg
mov
rorl
sub
adc
push
in
push
sbb
fwait
popa
xor
xchg
push
je
jae
xchg
mov
jle
mov
mov
jp
dec
or
mov
dec
sarb
jbe
xor
jne
cmpsb
loope,pt
je
sub
jne
outsb
test
jne
insl
mov
lahf
lcall
cs
pop
std
nop
fwait
xchg
sbb
jnp
or
iret
push
jbe
xchg
jnp
push
cmpsl
cmp
sbb
cmc
dec
out
mov
ret
psrlq
scas
fcomp
jb
cmp
jmp
inc
mov
adc
stos
dec
xchg
cmp
ja
mov
cmp
popa
lods
fwait
push
iret
inc
pop
jmp
lods
inc
jo
and
mov
out
subb
mov
sti
or
sub
lds
xlat
fldt
push
mov
dec
inc
mov
out
xchg
sub
cmp
pushf
or
mov
aas
icebp
je
out
push
inc
or
cmp
test
pushf
test
jle
das
es
js
dec
fistps
mov
bound
push
and
int
gs
cmp
push
push
xlat
push
bound
addr16
pop
mov
xor
lock
xlat
outsb
imul
sti
sub
adc
rcrl
iret
lahf
insl
mov
loop
pop
int
add
xchg
cltd
daa
das
icebp
jne
ja
jl
or
movsl
push
in
cltd
mov
mov
subb
xchg
lret
loop
loopne
scas
jp
icebp
in
addr16
mov
fcoml
divb
mov
mov
fisubrl
repnz
or
test
in
xor
out
inc
mov
cmp
cmc
mov
mov
into
xchg
xchg
faddl
inc
xlat
cmp
test
cwtl
sbb
sbb
scas
jae
jo
test
mov
jbe
outsb
movsl
pop
xor
mov
lahf
sarb
in
loopne
xor
sub
add
fistpl
cli
xchg
xchg
cld
addl
je
jmp
xor
sbb
and
subl
cmp
or
cs
adc
loope
dec
addr16
aas
inc
repz
push
lds
shrb
mov
push
mov
scas
popa
cmp
push
clc
xchg
lds
lods
hlt
out
js
cmpsl
jne
and
popa
jno
pop
int3
popa
xchg
fists
mov
xchg
cmpl
xchg
mov
iret
jb
cs
jne
fsubl
add
ret
cmp
imul
dec
inc
fmull
sbb
fidivrl
push
jge
xchg
xor
jmp
lods
cltd
xor
test
orb
into
dec
loop
arpl
pop
outsl
mov
gs
jbe
push
xor
mov
in
jmp
or
push
and
sbbb
push
cmp
mov
jae
fldenv
sub
mov
lea
and
loop
dec
fiadds
test
lods
pop
addr16
ret
cmp
leave
add
dec
sahf
shll
test
std
mov
imul
mov
pop
mov
adc
iret
cltd
add
cmp
pop
repz
sub
fisubrl
mov
stos
fidivs
bound
push
push
orl
push
xor
lcall
int
mov
sbb
dec
sub
insl
mov
xchg
mov
leave
incb
inc
mov
add
daa
aam
xchg
cmp
pop
lods
jg
into
or
cmp
int
rorb
leave
aas
cli
xlat
mov
mov
test
scas
or
test
add
xor
mov
subl
jp
scas
scas
pop
div
out
cmc
push
adc
clc
xchg
fdivrl
push
pop
mov
pop
arpl
jp
bound
stos
jns
add
fwait
stos
cmp
out
xchg
and
and
shrb
mov
clc
pop
pop
rorb
cmpb
jecxz
or
jno
mov
hlt
inc
mov
fadds
or
popf
int3
movhlps
add
incb
sbb
mov
dec
mov
mov
scas
sub
in
outsb
mov
push
push
leave
daa
sub
divb
inc
int
xor
fildll
add
push
mov
add
push
outsl
lcall
jp
fs
imul
jne
mov
ret
lcall
shlb
push
aad
push
out
into
push
iret
decb
les
inc
test
push
aam
int
aaa
pop
add
fnstsw
and
mov
mov
pop
into
mov
repnz
in
xlat
or
adc
cmp
sbb
into
push
adc
lods
pusha
xchg
xor
test
outsl
scas
loope
test
aam
lret
loop
rorl
cmp
imul
jo
or
sbb
sti
imulb
in
xor
push
mov
sbb
fs
xor
pop
and
or
ds
call
icebp
je
xor
in
xor
xchg
mov
sti
push
lds
push
les
dec
iret
pushf
lret
lods
jo
mov
xchg
mov
xor
mov
add
ljmp
fdivs
cli
test
imul
push
mov
adc
mov
jl
pushl
stc
sub
fldl
inc
mov
push
mov
gs
inc
xchg
sub
sbb
pop
mov
lock
xor
mov
cmp
jmp
stc
sub
sbb
sub
dec
mov
mov
fimull
ficompl
cmp
or
jne
mov
inc
enter
pop
sbb
lods
xor
cmpsb
mov
push
sbbl
addr16
fldl
push
mov
into
es
or
mov
leave
pop
aaa
out
das
je
or
jecxz
into
fs
mov
mov
insb
test
lahf
test
sti
jle
into
fsts
outsb
iret
mov
mov
insb
icebp
scas
xchg
mov
adc
lods
jge
mov
fisttpl
addb
pop
pop
mov
out
test
mov
and
insl
add
inc
ja
fs
jp
sub
pop
add
or
sbb
shll
dec
out
daa
mov
dec
in
scas
fs
test
cmpsb
fld
xchg
jp
cld
loope
lret
les
and
add
dec
lahf
scas
xlat
imul
mov
insl
add
mov
adc
mov
shl
repz
aad
incl
fisubl
fucomp
and
leave
mov
in
inc
fdivs
in
out
sti
xorb
mov
dec
aad
push
xchg
aas
stos
inc
mov
lea
adc
adc
inc
fmul
nop
xchg
jle
ficompl
adc
adcl
loopne
mov
mov
ficoms
shrl
aad
mov
sbb
mov
adc
xor
xchg
xchg
loop
scas
dec
dec
fistpll
inc
loopne
push
adc
in
sti
sbb
mov
mov
mov
out
loope
ss
mov
adc
ds
inc
fnstenv
pop
push
testl
add
cmp
std
pushf
xor
pop
ret
pop
mov
push
subb
outsl
aad
call
sub
mov
dec
adc
jnp
cmp
aad
xor
int
pop
lock
out
push
out
dec
ja
jnp
outsb
add
into
xchg
mov
out
mov
and
stos
inc
sbb
push
push
dec
out
mov
mov
fildll
sarl
test
mov
out
or
cmp
xor
adc
call
test
lret
sti
sarb
icebp
sbb
xlat
dec
adc
test
and
movsb
mov
xorb
or
cmp
mov
push
cld
xlat
outsb
lods
lea
test
testb
inc
or
cmp
xchg
loop
enter
in
jg
mov
xlat
outsb
cmp
aad
mov
lret
lods
repz
push
call
test
cmpsb
pop
fdiv
das
push
sub
in
fs
lea
test
fnstcw
fbld
adc
leave
and
scas
ds
dec
cmpsl
jl,pt
pop
mov
loopne
mov
bound
rclb
mov
mov
fistpl
cmp
and
jno
mov
sbb
or
mov
lret
insb
fs
rcll
mov
stos
mov
cmovg
cwtl
dec
movsb
and
std
int3
mov
lahf
jbe
lods
lods
push
mov
mov
adc
jb
jg
xor
sub
xchg
jns
mov
imulb
sub
xchg
or
push
inc
mov
insl
sarb
mov
mov
mov
xchg
xchg
xchg
ljmp
jg
out
push
sub
push
aaa
or
xchg
jb
add
inc
mov
push
dec
jg
rolb
in
in
js
adc
add
into
xchg
jo
das
sti
repz
sbb
dec
cmp
mov
mov
push
cmp
or
push
cmp
sti
fcomps
mov
fwait
sbb
cli
or
fsubl
sub
and
sub
repnz
push
and
mov
pop
imul
sbb
jb
cmc
orb
or
movsl
pop
leave
fiaddl
xor
mov
jne
out
jnp
sbb
push
jmp
fnsave
repnz
test
xchg
fists
lock
add
insl
ds
rorb
fstl
jae
sbb
cmp
sbb
cltd
movsb
movb
cli
inc
mov
les
mulb
jg
test
loop
jns
lret
jnp
jge
js
dec
xor
movsb
cld
je
mov
add
or
jmp
sub
fldcw
cmp
add
fadds
add
xchg
jg
sbb
dec
or
pop
out
or
pop
je
idivl
and
mov
xchg
insb
and
rcll
mov
or
mov
jp
movhlps
jnp
inc
int
out
addr16
icebp
dec
sub
lds
add
add
inc
test
aaa
es
addr16
and
jge
int3
sbb
mov
pop
adc
fwait
rorl
rcr
and
dec
xor
daa
les
movups
jg
dec
call
sbb
shrb
jp
jae
xchg
aaa
into
enter
daa
ljmp
sub
mov
cmp
push
jns
lret
push
xchg
cs
jl
inc
pushf
xor
sahf
xchg
adc
ds
mov
mov
insb
enter
mov
mov
sbbb
push
insl
add
xchg
sub
sub
aam
sub
dec
filds
and
rorl
outsl
cmpsl
out
push
in
filds
cmp
sti
jo
sub
mov
add
mov
push
xor
xchg
mov
std
std
xchg
out
data16
add
cmp
mov
rorl
cmpsb
add
inc
adc
clc
sbb
cli
bswap
ja
xchg
inc
xor
lea
sub
loope
jb
mov
mov
mov
xchg
adc
dec
lea
pushf
scas
sub
mov
add
fs
lods
sub
cs
jnp
mov
push
dec
lea
inc
scas
sub
cmp
push
and
call
fidivl
cmp
lret
popa
mov
jg
cmp
mov
outsb
fisubrl
mov
jmp
mov
dec
push
ret
sahf
dec
adc
in
mov
xorl
ljmp
enter
aaa
or
mov
stos
addr16
push
mov
scas
insb
ficompl
inc
inc
stos
test
and
xor
out
mov
fst
jle
cld
sbb
adc
sub
popa
ret
adc
imul
fbstp
mov
jmp
inc
inc
or
or
repnz
adc
nop
in
sbb
inc
sbb
jmp
int3
inc
repz
and
cmp
xor
lods
inc
stos
das
dec
mov
sarb
pop
jb
push
dec
addl
shll
push
push
sbb
adc
scas
dec
pcmpeqb
orb
lret
loopne
sbb
orl
icebp
mov
mov
mov
mov
ret
arpl
mov
add
cmpsb
pop
jnp
xchg
aaa
add
ds
push
mov
sbb
push
push
mov
sahf
inc
mov
aam
in
mov
xchg
cmp
or
rorl
inc
jp
lds
sbb
stos
sbb
xor
xchg
push
subb
std
cmp
jp
in
push
sub
test
aad
cli
xor
xchg
pop
ret
mov
test
jae
aad
lods
pushw
mov
mov
addr16
xchg
pop
mov
das
scas
add
jne
pop
jns
pop
stos
dec
lret
lahf
xchg
mov
dec
lea
mov
daa
push
int
shl
pusha
pop
in
test
sbb
stos
sub
rorl
mov
push
push
push
jno
push
pusha
rclb
push
mov
sbb
and
mov
cs
mov
stc
push
push
arpl
cltd
cwtl
mov
lahf
leave
ret
sbb
sbb
sbb
push
and
fnsave
or
push
insb
cmp
dec
inc
pushf
cmp
push
dec
sbb
jne
cld
pop
jae
mov
push
lcall
sbb
sar
sbb
loop
jge
jb
lcall
sbb
popf
cmp
dec
dec
sbb
jno
std
pop
je
cltd
cmp
jo
fwait
movsl
or
push
mov
fwait
ds
adc
mov
xlat
fidivrs
jmp
cwtl
cmp
mov
mov
xchg
inc
dec
mov
subb
ljmp
xor
sub
jo
xchg
inc
les
das
mov
mulb
rcrb
pop
fsubl
sti
pop
mov
cmpsb
pop
cld
xor
cmpsl
sbb
xlat
andl
cmp
orb
jb
adc
fs
push
mov
push
nop
aaa
lret
mov
mov
repnz
iret
cmpsb
das
lea
js
aad
fwait
xchg
ss
cld
and
scas
daa
dec
ds
or
adcb
push
add
fcoms
adc
lret
mov
sarl
add
xchg
push
roll
mov
inc
cs
xchg
sahf
xor
daa
ret
mov
dec
cmp
push
sahf
push
push
ljmp
jb
xor
es
cmp
cmpsb
xor
stc
js
push
stc
addr16
mov
xchg
movsb
sahf
mov
mov
in
or
mov
jl
mov
jge
pop
jg
hlt
inc
xchg
sub
xor
mov
stos
add
xor
in
push
push
pop
cld
in
push
xchg
mov
inc
ficompl
xor
ss
imul
cld
insb
ljmp
int
inc
jecxz
push
js
xor
scas
in
test
mov
or
xor
sub
and
pop
mov
orl
dec
mov
addr16
js
js
lods
adc
inc
push
sub
negl
cmp
adc
icebp
sub
mov
pop
fidivrl
mov
or
pop
jb
cltd
aas
stos
fs
cmp
mov
aam
shr
jne
cmpsb
add
fcomp
mov
hlt
pop
mull
pmullw
and
lea
mov
aas
or
push
jb
lods
movsb
popa
lea
mov
cmp
test
push
sahf
pop
cs
int
loop
jg
ss
call
pop
add
and
lea
xchg
bound
cwtl
inc
popl
xor
jecxz
fadds
mov
lea
movsl
cmp
loop
sub
xor
fcomps
add
or
mov
sub
pop
sbb
sub
sarl
cwtl
jns
add
inc
adc
xor
cli
scas
xor
mov
lock
adc
sbb
adcl
sbb
dec
icebp
pop
inc
insb
outsb
repnz
or
aaa
fisttpl
jecxz
aad
sbb
in
popa
jmp
repnz
mov
jbe
cwtl
cmpsl
sub
stos
fildl
aas
lahf
outsb
adc
pop
jp
pushf
imul
lcall
in
jno
mov
adc
ret
sahf
adc
jmp
dec
movsl
xor
cs
adc
out
outsb
sbb
sti
cld
inc
jne
stc
out
push
cld
in
incl
call
dec
or
mov
inc
xchg
lret
lcall
shl
push
cwtl
or
pop
in
ret
sarb
clc
jae
imul
push
call
lret
push
inc
cmp
movsb
cli
call
push
ljmp
imul
test
pop
add
popl
insb
in
dec
mov
das
jle
and
cld
pop
popa
add
adc
int
or
out
pop
lods
sub
inc
inc
pusha
repz
pop
cld
les
fldcw
mov
dec
das
dec
pop
xchg
adc
cli
pop
add
enter
out
jle
lret
mov
bound
shl
xor
push
nop
adc
shl
pusha
movb
es
test
insb
add
xor
sub
push
xchg
bound
pop
insl
jmp
dec
dec
fdivrl
xchg
rcrl
add
sbb
pop
mov
xchg
lock
sbb
out
mov
test
mov
inc
or
scas
mov
cli
adc
xchg
cmp
scas
inc
xchg
aaa
lods
mov
mov
sub
clc
test
outsl
icebp
push
fwait
lret
adcb
jne
mov
cmp
and
clc
pop
inc
mov
mov
dec
mov
jo
inc
push
cld
xchg
cmp
add
mov
popf
inc
push
mov
mov
mov
outsb
or
xchg
cmp
push
xchg
sub
jno
and
lock
icebp
cmp
jle
das
scas
jbe
jmp
rol
sti
dec
or
sbb
fistpll
ja
shlb
aaa
pop
mov
push
test
icebp
fnstenv
cmp
call
cli
adc
mov
stos
push
clc
fwait
aas
faddl
sbb
adc
or
jg
mov
mov
inc
loope
fs
notb
xchg
xor
jno
and
hlt
pop
lods
cmp
test
arpl
lahf
jp
cmp
lret
mov
in
xor
test
push
insb
icebp
xchg
inc
push
mov
rorb
ljmp
adc
ja
adc
lcall
outsb
xor
or
sahf
addr16
mov
xor
fnstcw
cwtl
add
add
mov
add
test
jl
mov
gs
dec
or
pop
xchg
dec
or
xchg
adc
mov
das
or
mov
jns
push
jmp
mov
mov
sbb
pop
mov
lahf
jbe
jge
ret
loop
popf
cmp
push
jne
jle
mov
bound
inc
rorl
cwtl
mov
lods
out
add
push
push
mov
ljmp
in
cmpsl
cs
movsl
jno
lret
bound
ret
jne
enter
push
push
pusha
or
xchg
pop
adc
push
mov
mov
loop
xor
leave
scas
sub
xchg
lock
mov
sbb
test
and
inc
sbb
fdivrs
xchg
inc
fs
xchg
je
fnstenv
outsl
jnp
in
pop
cmp
fwait
ret
test
rcl
adc
pop
sti
xchg
hlt
sub
addl
fidivrl
inc
test
bound
movsl
outsl
enter
data16
cmp
add
push
shlb
inc
push
nop
push
pop
mov
rcrb
add
ds
and
pop
push
mov
and
push
mov
icebp
jns
jb
jecxz
jbe
imul
std
cmpsb
fstpt
jmp
pop
cmp
adcb
pop
pop
leave
sub
push
xorl
inc
or
in
in
adc
cmpsl
incl
enter
stc
adc
sarb
test
fs
mov
repz
jo
mov
mov
fwait
cmpsb
sbb
mov
lahf
aaa
push
mov
loop
mov
sub
pop
dec
adc
push
dec
adc
lret
ljmp
gs
mov
psrlq
stos
orb
mov
popf
push
jns
jl
xchg
cmp
push
out
or
xchg
jg
mov
push
inc
jmp
jno
add
cld
bound
mov
shll
mov
sbb
lock
stos
insb
in
mov
mov
jmp
lods
and
cmp
out
sbb
push
dec
loope
lret
xchg
sub
xor
test
inc
mov
call
orl
mov
stos
sub
xchg
cld
push
popf
mov
push
mov
mov
cld
push
ja
dec
or
and
insb
xchg
ds
push
ror
sbb
loop
jne
and
cwtl
mov
sub
loope
dec
sub
jmp
mov
stos
fdivp
add
adc
dec
cmp
xchg
mov
cmpsl
xor
mov
cld
xchg
jmp
out
sarl
xor
fsubl
rolb
jmp
roll
je
mov
mov
jl
loope
ds
lea
xlat
cmp
xor
movsl
test
add
mov
push
pop
cli
sub
jns
add
cs
sub
call
or
pop
clc
stos
push
adcb
daa
mov
push
pop
inc
fisttpll
ja
rcrb
dec
adc
nopl
aas
adc
psrlq
inc
popa
jmp
jno
sarl
arpl
insb
loop
xor
dec
in
sbbb
jno
iret
dec
cltd
inc
lods
sbb
add
pop
dec
or
xor
push
aad
xor
addr16
jecxz
pushf
and
dec
xor
repz
mov
in
outsb
stos
test
mov
stos
das
mov
lahf
mov
cltd
cmp
add
pop
push
dec
or
shlb
popf
mov
mov
jbe
pusha
xchg
mov
jge
cld
pop
clc
dec
or
enter
nop
lcall
js
fnstcw
lea
and
cmp
jl
dec
call
jbe
xor
push
shrb
into
mov
inc
ja
mov
lahf
popa
or
mov
dec
add
mov
lods
fs
repz
pop
loope
sbb
xlat
sub
lahf
and
scas
das
call
repnz
ljmp
mov
int3
cmc
movsb
xor
adc
pop
jle
out
test
jo
js
cmp
popa
dec
mov
and
inc
daa
pop
add
xchg
cmc
pop
in
in
fwait
aas
in
xchg
cmp
mul
push
pop
into
xchg
mov
outsb
hlt
lods
cmpsb
mov
xchg
mov
dec
and
daa
test
push
test
pop
movb
sub
jmp
mov
sbb
nop
jne
mov
inc
sub
mov
xchg
iret
mov
push
push
int
ljmp
in
es
decl
jo
divl
mov
sbb
mov
scas
cwtl
inc
lods
test
mov
jns
outsb
hlt
int3
imul
and
cld
popa
inc
adc
mov
mov
xchg
cmc
sub
mov
out
push
stos
add
call
int
or
cwtl
jno,pt
mov
pop
je
push
mov
adc
inc
fildl
imul
or
faddl
cltd
pop
ss
xlat
int3
mov
shll
mov
push
clc
jns
pop
mov
test
adc
fsubrl
insl
lock
mov
imul
arpl
cmpsb
pop
add
adc
inc
pop
add
inc
dec
adc
movsl
pop
call
adc
jecxz
sub
mov
add
inc
andnps
lock
cmpsb
pusha
repz
mov
jbe
iret
mov
mov
test
xorb
xchg
cmp
mov
roll
pop
decl
dec
adc
pushf
movsl
sub
sarl
xor
sub
lock
ds
or
shlb
push
fidivrs
sar
add
push
sarb
mov
pop
sbb
iret
jb
dec
dec
push
pop
sti
cltd
xchg
mov
rolb
xchg
inc
out
movsb
insl
out
hlt
pop
std
pop
sub
push
movl
roll
aaa
mov
pop
or
push
mov
aas
outsb
or
fisubrs
push
stc
lahf
jns
push
dec
dec
adc
data16
adc
jmp
ja
mov
xchg
lock
fs
adc
jb
rcrb
into
or
sub
ljmp
and
jg
push
lret
int3
sub
adc
inc
call
into
xchg
dec
inc
or
pop
lret
in
ja
jno
loope
cltd
inc
mov
stos
cmp
aam
mov
nop
cmp
test
mov
adc
fstpl
or
inc
pop
mov
pop
xchg
cs
mov
insl
fiaddl
out
test
ds
fstp
mov
call
icebp
fdivrl
or
dec
push
add
out
xor
xchg
mov
sti
mov
mov
mov
and
mov
out
inc
sbb
add
dec
dec
adc
cld
add
jo
shlb
or
add
push
pusha
push
mov
jno
adc
xchg
addr16
dec
lret
sete
pop
xor
add
xchg
inc
std
fisttps
leave
scas
loop
cli
push
mov
shr
nop
les
xor
sub
mov
cmp
fldcw
mov
lock
inc
inc
dec
adc
cwtl
jmp
jmp
pop
addb
push
cmpsb
sub
jg
or
loopne
jge
mov
cmp
xor
adc
sub
push
push
inc
paddsw
out
outsb
clc
mov
mov
shlb
and
sbb
inc
ret
jnp
imul
inc
xor
sbb
cmpsb
adc
inc
lahf
inc
push
mov
loop
push
gs
sbb
mov
ret
push
stc
mov
mov
cwtl
movsl
xor
sub
cmp
pushf
test
pop
add
push
cmpsb
daa
repz
in
out
mov
fdecstp
xchg
inc
push
add
push
shll
rorl
jnp
stc
into
sub
cltd
test
repz
cmp
outsl
lock
fs
adc
add
flds
xor
orb
pop
add
lods
orb
inc
or
push
fwait
adc
orl
pop
mov
mov
mov
fwait
cmp
mov
jl
mov
add
pop
aad
dec
and
xchg
inc
test
mov
fisttpll
and
mov
push
fbstp
push
cli
xchg
xchg
or
test
mov
cmp
and
cmp
movsb
pop
jecxz
mov
jno
cwtl
inc
shlb
push
pop
add
movsb
test
popf
sbb
cwtl
cmp
test
popf
inc
pop
clc
pop
mov
xchg
inc
loopne
or
xor
mov
push
fistpll
mov
mov
fstpt
imul
clc
jge
push
and
add
gs
mov
mov
mov
mov
orb
out
outsb
add
jbe
ja
pusha
out
mov
test
arpl
add
fnsave
in
mov
imul
lods
mov
or
add
mov
push
movsb
xor
jmp
xlat
jg
scas
inc
stc
fdivs
lret
int
pop
sub
mov
mov
mov
hlt
pop
loopne
mov
jg
mov
outsl
inc
or
mov
repz
sarb
insl
js
stos
sar
arpl
mov
int3
xchg
mov
mov
loope
scas
out
scas
and
xchg
mov
stc
popa
movsl
or
sarl
jg
mov
lea
and
out
mov
clc
bound
das
mov
inc
cmp
test
or
test
pop
lret
pop
mov
mov
insl
lock
cmpsb
pop
in
xchg
mov
jmp
cmpb
loope
xchg
cmp
cmp
notl
lahf
inc
dec
lock
repnz
enter
fiadds
xor
jns
cmp
push
rolb
push
stc
inc
xchg
jo
cmc
xchg
cmp
xchg
inc
ljmpw
or
outsb
out
pop
pop
jl
dec
mov
popf
inc
or
ficompl
jle
push
add
dec
mov
mul
xchg
scas
sub
cli
orb
cmp
jno
or
subl
lret
int
pop
decb
pop
je
movsb
xor
push
int3
iret
add
xor
sub
push
popf
sub
inc
fadd
mov
fisttpll
cmpsb
xor
cwtl
repz
fidivrs
push
xor
mov
adc
inc
inc
or
ret
insl
out
jne
push
aad
dec
push
and
dec
fimuls
xchg
mov
jl
dec
inc
and
adcb
into
imul
sbb
dec
jecxz
cmp
jnp
adc
mov
sub
std
add
sub
push
lds
stos
fs
int
iret
mov
cmpsb
jmp
shll
cmp
fldl
and
jle
xor
movb
sbb
sarl
inc
add
inc
jg
pop
adc
repz
stos
lds
cmc
mov
jg
in
jle
ficompl
push
xchg
adc
adc
or
out
lahf
aas
xor
push
cld
or
mov
push
xchg
mov
ret
inc
add
inc
stos
dec
push
and
pop
mov
mov
popa
in
je
cwtl
inc
aad
pop
mov
mov
stos
lea
push
lahf
aas
and
push
sti
push
xor
fldl
xchg
inc
ret
mov
int
cmpsl
xchg
pop
mov
add
loope
ficompl
in
pop
add
mov
outsb
das
ret
ja
fcomps
ljmp
adc
in
dec
lods
sub
popa
xlat
xchg
aas
sbb
cmovno
ror
pop
out
jmp
xchg
inc
sub
xor
pusha
pop
jmp
ss
fdiv
pop
test
leave
pusha
and
out
mov
leave
fwait
cmpsb
stos
das
addr16
mov
inc
jbe
cmpsb
mov
mov
cwtl
fwait
push
negl
leave
add
inc
add
sub
cmp
ret
push
jg
xchg
cmp
imul
clc
cmpsb
xor
lock
mov
inc
neg
jle
cltd
jmp
test
mov
daa
mov
mov
mov
sub
lods
daa
divl
mov
in
aaa
mov
push
jl
mov
dec
loopne
adc
xchg
or
sub
inc
or
fisttpl
xchg
pop
mov
ret
pop
rcl
jnp
dec
es
leave
stos
jmp
and
scas
xchg
negb
dec
rcll
cltd
mov
xchg
stos
adc
inc
lret
mov
jne
aas
popf
scas
insl
xor
addr16
mov
jge
das
mov
cmp
or
mov
repnz
das
mov
loope
jle
les
in
faddl
sub
or
cmp
inc
jbe
out
xchg
inc
or
arpl
cmp
outsb
or
jmp
pop
test
mov
psrlq
mov
cmpsl
sub
mov
pusha
ss
jno
and
mov
mov
nop
cmp
mov
imul
dec
adc
loope
pop
inc
add
cs
xor
dec
scas
adc
arpl
aaa
lds
incb
repnz
xorl
int
test
add
push
and
mov
movsl
mov
mov
pusha
push
lea
jge
pop
cli
test
addr16
jnp
push
lds
fwait
leave
mov
fucom
jb
scas
mov
jge
mov
jns
push
data16
mov
adc
mov
mov
sbb
adc
repz
pop
add
mov
add
mov
lds
in
push
cmpsb
push
add
in
or
xchg
clc
std
pusha
and
mov
cmp
decl
aad
inc
fs
mov
ficomps
repz
mov
stos
mov
outsl
cmp
mov
mov
cmpsb
mov
cmp
aad
push
add
cmp
lahf
dec
icebp
data16
test
push
jne
stos
lea
js
inc
das
jmp
lods
inc
arpl
lret
bound
imul
inc
mov
loopne
push
lock
push
add
jecxz
int3
call
negb
mov
push
adcb
inc
sub
es
xor
mov
test
faddl
mov
out
outsl
and
arpl
loope
movsb
sub
mov
mov
mov
jecxz
popa
mov
jp
adcb
int
aam
pop
fbstp
stc
fidivrs
pop
outsb
call
ss
jecxz
jno
movsl
cmp
repnz
jle
or
in
outsl
adc
enter
ret
cmp
adc
test
adc
lods
dec
cmp
sub
aam
cmp
mov
lods
stos
ss
iret
inc
or
test
hlt
pop
stos
lret
xchg
lret
mov
fistpll
fmuls
fwait
loopne
in
into
gs
out
ss
sbb
sarl
inc
insb
in
push
out
daa
jns
ljmp
stos
xchg
mov
xchg
test
mov
ficomps
lds
mov
xchg
inc
arpl
mov
data16
in
pushf
xor
pop
jl
mov
stc
fcmovnu
or
fldt
mov
cmpsb
pop
aaa
sahf
sub
push
stc
push
popa
filds
call
in
outsl
mov
stos
mov
cli
fiadds
lret
dec
out
cmp
mov
ja
fsubrs
sub
jmp
sub
fdivrs
cmp
lock
movsb
insl
call
mov
mov
push
add
pop
outsb
call
mov
outsl
push
add
push
lahf
inc
pop
dec
pop
pushl
dec
adc
clc
add
xchg
pop
fdivrl
cmp
pop
ja,pt
test
ljmp
ret
sahf
inc
or
jge
dec
pop
jmp
add
dec
adc
and
push
stos
mov
jg
int3
mov
scas
sub
push
add
jl
ss
mov
and
sbb
pop
lret
movsb
in
jne
sbb
mov
inc
lods
loopne
ds
lds
mov
nop
cmp
inc
mov
mov
jae
std
popa
and
cs
xor
leave
mov
xchg
inc
dec
jbe
jno
xchg
dec
pop
mov
inc
pcmpgtd
ret
xchg
add
xor
imul
pop
std
flds
push
rcr
mov
in
addr16
mov
and
and
jb
aas
stos
sub
aaa
push
in
adc
pop
xchg
loope
js
mov
cmpsb
test
jne
mov
sbb
sti
cmpsb
adc
insb
jb
cs
jp
div
adc
xchg
ss
xor
movsb
xchg
or
pop
adcl
adc
in
jnp
xor
add
insb
add
mov
or
cs
insb
xchg
cmp
and
lods
sub
stos
daa
or
fidivrs
ja
jecxz
orl
repnz
lahf
pushf
data16
xor
jg
xchg
sub
ja
lret
mov
dec
or
lods
addr16
mov
js
ret
fs
ljmp
pop
push
mov
push
mov
mov
push
add
add
dec
pusha
mov
add
imul
add
in
inc
mov
xchg
repz
js
int
fnstsw
adc
cmpsb
lahf
sbb
lahf
adc
fdivrs
dec
inc
adc
mov
inc
jmp
or
int
inc
aad
push
mov
xchg
jnp
fs
stc
imul
sbb
shrb
mov
jns
or
sub
xlat
cmp
sub
aam
pop
xchg
inc
xor
aam
pop
sub
jmp
inc
jl
in
pushf
mov
sbb
lods
mov
roll
ret
andb
add
pop
dec
or
iret
and
push
inc
push
add
aad
fdivp
lcall
add
jnp
or
dec
pop
cld
loop
mov
jecxz
jno
mov
pop
mov
mov
cmpsl
in
test
stc
nop
out
in
jae
clc
pop
mov
pusha
scas
mov
out
jno
iret
jb
mov
fs
call
das
xchg
lret
xchg
nop
aas
adc
push
jnp
cmpsl
insb
outsb
inc
or
jno
and
rorl
popa
repz
mov
add
jnp
lcall
jge
div
out
add
mov
negl
into
xor
jg
and
jg
adc
dec
xor
and
mov
sub
pop
mov
ljmp
push
std
pop
mov
in
adc
aaa
out
mov
test
in
int3
fidivrs
cltd
mov
mov
lds
dec
add
rcr
mov
xchg
inc
mov
mov
aad
in
mov
test
mov
jmp
call
jle
into
repz
dec
lds
xchg
fsubr
outsl
in
roll
jmp
test
jo
cmp
mov
daa
daa
pusha
bnd
imulb
out
jl
jmp
sti
popa
clc
sub
mov
aad
pusha
xchg
cmp
adc
cmpsl
mov
cmp
mov
fwait
mov
jmp
mov
imul
push
vminss
imul
psllw
pop
sbb
je
jns
mov
pop
rcrb
outsl
outsb
imul
cs
sub
jl
cmp
out
lock
adc
push
lret
xchg
add
inc
adc
pop
in
imul
mov
and
adc
aad
popa
dec
add
leave
and
inc
adc
lods
sbb
fidivrs
mov
in
mov
rcll
out
movsb
jecxz
fiadds
fucom
js
movsb
inc
fst
xor
mov
cmpsb
pop
mov
imul
int3
jmp
jne
iret
jmpw
fdivrl
cmp
rcl
mov
in
jo
pushf
rorb
push
ret
stos
xor
lret
sbb
mov
mov
data16
cwtl
test
lcall
int
lods
jno
push
in
mov
or
data16
fwait
push
aaa
cmpsb
mov
mov
and
movsl
xor
xchg
mov
jg
push
mov
popf
subb
push
shrb
repz
pop
fabs
popf
inc
test
mov
orb
jmp
sbb
mov
ljmp
pop
fidivs
push
mov
mov
and
jb
xchg
insb
out
inc
jo
cwtl
sbb
sbbl
mov
lea
add
aam
pusha
out
jbe
mov
pop
push
pop
fwait
in
aam
pop
mov
fnstsw
xor
subb
or
sub
cmp
and
xchg
cs
jecxz
xlat
leave
adc
stc
stc
pop
test
adc
mov
bswap
push
add
adcl
or
sub
push
xor
repz
pop
std
loopne
out
mov
rolb
cwtl
js
fcmovb
push
add
loope
adc
sbb
aam
pop
lods
sub
test
fucomp
pop
hlt
pusha
mov
mov
fnsave
pop
jnp
das
mov
loopne
xor
push
mov
negb
add
inc
xchg
mov
push
sbb
cmp
jbe
daa
mov
xchg
mov
std
push
lcall
add
add
mov
lea
mov
mov
ret
aad
fdivrl
add
das
shl
out
inc
frstor
jmp
hlt
and
and
pop
cmp
outsl
addr16
inc
push
xchg
jne
es
ret
push
pusha
pop
mov
xchg
pop
roll
push
decl
mov
push
dec
cltd
inc
mov
mov
testl
sub
lret
inc
or
inc
or
es
adc
xor
in
push
insl
testb
insl
imulb
aas
xchg
dec
adc
xchg
cmp
movsl
adc
lea
xchg
cmp
push
mov
lret
cmpb
push
mov
clc
ja
cwtl
inc
pop
bound
movsb
xor
dec
adc
inc
fadds
loop
mov
push
push
jg
test
adc
inc
pop
add
aas
shlb
enter
sbbl
sbb
stc
out
rorl
adc
fstl
enter
push
icebp
pop
or
movsl
sub
sub
inc
or
cmp
test
in
lea
clc
scas
xor
jno
or
in
pop
pushf
inc
mov
mov
test
hlt
arpl
arpl
mov
sub
or
mov
mov
loopne
pop
adc
loopne
add
xchg
xchg
mov
fstps
or
cmp
pop
cli
mov
out
scas
dec
fdivl
shlb
add
xchg
sub
sbb
test
lret
cld
cwtl
push
jmp
sbb
jb
sbb
or
daa
outsl
ret
sub
hlt
nop
scas
inc
ret
loope
jecxz
arpl
ss
mov
lahf
mov
mov
xchg
sub
loope
out
stc
mov
add
add
mov
and
xor
fnsave
push
test
lret
fidivl
push
js
sbbb
nop
push
mov
pop
scas
mov
les
imul
lock
push
push
movsl
and
ret
jb
scas
inc
inc
xchg
dec
loope
int
xchg
in
call
mov
sub
xchg
cmp
sub
fxsave
fbstp
loopne
bound
gs
xor
sbbl
sbb
pop
cmpsb
mov
rcrl
mov
out
lods
dec
fnsave
jbe
lcall
xchg
sub
repnz
cmpsb
inc
aaa
into
jne
shrl
xchg
push
in
sbb
xchg
or
outsb
push
movsl
lahf
cmp
ret
icebp
mov
loop
loope
adc
add
mov
or
cmp
pop
les
sub
pop
mov
jns
jge
cli
scas
add
sbbl
mov
lahf
ss
stos
cmp
push
cmpsl
cld
pop
repnz
dec
jns
sbbb
dec
mov
sbb
es
repz
shrl
adc
in
inc
lcall
cwtl
in
push
mov
sub
inc
aas
xchg
dec
loop
pusha
into
gs
jecxz
add
xchg
push
mov
rorb
inc
das
loope
popa
gs
das
cmp
mov
sbbl
sbb
cmp
sub
rcrb
mov
lock
dec
fnsave
ja
lcall
xchg
sub
and
cmpsb
inc
aaa
into
jae
shrb
xchg
push
in
lds
icebp
mov
or
outsb
lahf
cmp
icebp
mov
jecxz
adc
add
mov
or
cmp
pop
lds
inc
fcompl
jecxz
in
arpl
lods
add
sbbl
mov
mov
aad
jae
push
movsl
sti
pop
repz
fdivl
dec
jp
jg
sti
xchg
dec
mov
sbb
and
inc
aam
js
push
in
inc
cltd
repnz
fs
xchg
in
adc
ljmp
dec
cmp
pop
iret
xchg
loop
add
in
test
xor
or
mov
rorl
dec
loop,pn
pusha
cld
data16
sub
dec
test
adc
mov
mov
cmp
push
cmc
rclb
pop
icebp
stos
dec
fidivs
lret
js
std
fwait
cld
xchg
int
xchg
cs
out
sbb
movsb
inc
cmp
jno
shrl
xchg
push
in
ret
sbb
mov
je
push
insb
adc
imul
dec
in
packsswb
xchg
xor
andl
and
orl
mov
test
cmp
sub
daa
inc
fstpl
in
loop
fs
stos
add
lcall
and
push
cmpsl
aas
fdivs
push
mov
vpcmpeqb
dec
jnp
jge
cld
xchg
dec
sahf
cltd
xor
imul
pushf
icebp
mov
and
aad
jbe
push
out
inc
xchg
repz
bound
xchg
ljmp
call
or
in
pop
shlb
loopne
add
mov
test
xor
movsb
xor
cmpsl
ds
fld
pop
or
jecxz
pop
cli
addr16
sub
test
rcrb
mov
mov
cmp
pop
and
inc
fbstp
leave
jns
sti
cltd
std
xchg
lret
sbb
das
dec
in
sbb
mov
ret
aam
cmc
nop
push
out
rcll
mov
jne
adc
adc
addr16
mov
mov
fcmovne
or
add
mov
and
orl
inc
cmp
sub
add
pop
lea
in
loopne
gs
test
add
xor
sbbl
push
and
dec
movsl
inc
xlat
outsl
rclb
pop
cmc
sub
fidivs
dec
jl
jnp
std
xchg
dec
pushf
lcall
out
mov
shr
inc
insl
je
pop
out
aas
xchg
hlt
mov
pusha
jbe
xchg
call
xchg
sub
cmp
imul
dec
cmp
push
adc
mov
arpl
push
movsl
xor
ret
test
pop
or
in
pop
clc
push
cltd
scas
dec
xchg
add
ds
icebp
ret
jne
repz
inc
loopne
jbe
jp
stc
xchg
xchg
leave
sbb
mov
outsb
mov
mov
rcl
repz
mov
loopne
or
cltd
xor
jmp
mov
mov
fnop
or
add
sub
test
mov
in
or
mov
stos
inc
aaa
shrl
roll
enter
dec
fists
jge
jne
std
cmpsb
incl
xor
test
cli
push
and
dec
mov
rcrl
pop
cmc
es
hlt
inc
jl
jns
xchg
inc
lcall
cltd
in
mov
shr
inc
insl
jb
pop
lock
hlt
mov
pop
ja
xchg
out
test
in
xor
imul
dec
in
pop
shrb
fsubrl
lods
lock
das
mov
popa
add
cmpsb
xor
sub
pop
pop
movsl
dec
loop
sub
jnp
imull
sub
lods
dec
xchg
jl
and
iret
and
push
lock
pop
and
hlt
movsb
inc
loope
jne
jnp
notl
lcall
insb
mov
shrb
insl
icebp
lea
mov
fbstp
adc
stos
xchg
xor
enter
dec
mov
push
out
fcom
push
sub
xchg
mov
loop
or
inc
xor
push
leave
pusha
mov
dec
loopne
stos
out
fdivl
movsl
std
add
sbb
dec
and
dec
mov
ret
repz
mulb
loopne
repz
jge
ja
call
lret
mov
jmp
push
sbb
xlat
outsb
jo
pop
icebp
cmp
pop
js
nop
in
stos
adc
ss
addr16
dec
out
pop
shrl
fisubrl
or
icebp
mov
sub
xor
sub
pop
push
movsb
dec
loop
daa
in
pop
imulb
sub
lcall
and
into
pop
inc
xlat
push
out
ret
pop
and
cmc
mov
les
xchg
call
dec
call
mov
shrb
xlat
outsb
lock
mov
fidivs
adc
stos
xchg
xor
leave
call
or
cmp
shrl
pop
outsl
push
mov
out
xchg
and
jge
movsb
scas
add
add
popa
mov
dec
loopne
test
addr16
movsb
cld
push
popf
sub
dec
and
jg
movsb
cmp
inc
insb
ret
repnz
mull
shl
repnz
jle
jbe
call
leave
sbb
ljmp
ljmp
icebp
cmp
testb
jecxz
stos
adc
xchg
sub
data16
dec
xchg
mov
fldcw
or
mov
pop
decb
cmpsb
das
subb
adc
dec
loop
es
pop
cmc
imul
stos
dec
xchg
jp
and
int
inc
fmuls
ret
pop
and
mulb
ret
jge
cmc
xchg
call
dec
out
mov
push
push
pushf
cmp
shrb
fsubrs
mov
mov
fnsave
pcmpgtb
sub
mov
lret
mov
mov
push
jmp
or
pop
lea
out
xchg
mov
lods
add
ret
lret
bound
cmpsl
jmp
jmp
lds
mov
dec
sahf
inc
fcmove
imul
popf
lock
clc
and
jg
je
add
fs
mov
call
cmp
call
or
cmp
jns
loope
lods
adc
xor
add
call
xchg
outsl
push
or
lea
cld
adc
mov
lds
leave
pusha
add
out
push
repz
and
inc
mov
js
and
lret
sbb
les
outsl
pusha
mull
sarl
xchg
add
inc
in
mov
push
cmp
addr16
pop
icebp
mov
fidivrl
or
push
lods
xchg
sub
xor
in
mov
mov
push
ljmp
jno
mov
lock
fidivrs
movsl
stos
ljmp
ret
std
push
lret
bound
jmp
add
les
mov
dec
pushf
inc
fcmove
push
pop
pushf
out
popa
clc
pop
mov
jg
jb
add
lds
mov
out
push
sbb
fnstenv
or
mov
mov
fists
das
loopne
xor
bound
mov
xor
aad
xchg
outsl
push
pop
test
mov
sub
test
jl
inc
scas
dec
das
jle
leave
pusha
add
out
push
repnz
jbe
pushf
cmpsl
inc
mov
ja
and
lret
lds
pusha
negl
mov
add
inc
jecxz
mov
mov
xor
fnstenv
xchg
mov
fnstcw
or
lods
xchg
sub
cs
mov
lret
jecxz
mov
mov
push
ljmp
jno
mov
fdivrl
cmpsb
test
lret
sub
bound
mov
push
mov
ret
mov
cmc
dec
and
ds
lcall
fwait
in
popa
clc
sbb
jg,pt
jo
add
ret
bound
mov
in
push
push
mov
aad
aaa
fnstenv
pop
pop
hlt
cmp
jnp
mov
adc
xor
das
xor
pusha
add
call
test
outsl
push
add
lea
cli
adc
lods
dec
xor
jge
leave
pusha
lcall
call
add
je
popf
movsl
inc
mov
jne
and
notl
inc
fimull
pop
sbb
clc
pushf
cmp
jnp
mov
add
inc
loope
mov
fs
aad
mov
jno
test
or
nop
cmp
jp
or
scas
pop
mov
int3
loope
mov
scas
add
rcl
imul
jb
xchg
repnz
nop
daa
fidivl
cmpsl
cmpsl
sti
scas
inc
sub
dec
int3
arpl
mov
imul
hlt
or
repz
es
inc
cwtl
inc
fcmovne
addr16
pop
cltd
ljmp
in
cmp
pop
outsb
push
add
shll
xchg
loop
push
adc
aas
in
fidivl
add
clc
mov
fistl
lods
or
lcall
mov
jmp
adc
pop
add
hlt
mov
and
adc
stos
dec
xor
jnp
lret
pushf
dec
in
pop
jmp
add
jae
sahf
movsb
inc
mov
jae
and
aas
pop
inc
fisttpl
pop
sbb
stc
fwait
cmp
jnp
mov
add
inc
fbld
mov
arpl
aad
mov
jb
sbbl
cli
xchg
cmp
jp
pop
pop
sbb
pop
scas
ss
jnp
dec
lods
add
xor
aam
add
xchg
repnz
xchg
sub
je
cmpsl
movsl
cli
scas
inc
sub
cs
int
jg
dec
in
mov
imul
repz
icebp
inc
daa
mov
inc
xchg
inc
fmul
gs
pop
xchg
jmp
in
jmp
sbbl
cmp
pop
and
adc
add
xor
stc
nop
mov
ficoml
scas
or
xor
dec
jg,pn
ljmp
jno
add
es
notb
test
stos
dec
xor
jns
lret
std
lcall
push
in
insb
add
jb
lahf
mov
les
mov
les
inc
faddl
pop
pop
imul
push
sbbl
mov
frstor
mov
bound
aad
mov
jae
sbbl
sarl
add
es
das
pop
scas
aaa
into
fistpll
dec
stos
add
xor
aam
push
je
test
repz
xchg
sub
jb
test
clc
mov
sub
das
testb
jge
dec
in
sahf
in
adc
insb
add
mov
sub
inc
xchg
inc
ffree
arpl
pop
xchg
out
sti
sbb
sbbb
or
cmp
mov
adc
fdivl
add
xor
jge
test
sbb
fldcw
ss
cli
mov
jmp
dec
xlat
outsb
jg
jb
add
nop
daa
push
hlt
adc
test
xor
ja
int3
arpl
cwtl
dec
out
sbb
orb
add
jo
mov
outsl
ret
pause
test
fldl
pop
adc
ss
push
mov
lcall
and
xchg
sub
fnsave
pop
hlt
mov
cld
xchg
cmp
jnp
add
mov
and
xor
cmp
fnsave
dec
test
lret
aad
std
push
je
sbbb
mov
xchg
sub
jno
test
sub
xor
cmc
dec
into
gs
dec
out
pushf
in
or
insl
add
out
or
out
inc
sub
inc
xchg
inc
ffree
enter
fs
push
mov
jge
aaa
sbbb
or
aaa
mov
fnstsw
fcomp
xor
jae
add
xor
jle
test
sbb
fsubrs
ss
stc
mov
jmp
dec
fsubrs
int
or
lahf
testb
repnz
and
cmpsb
inc
xor
jne
int
stc
xchg
push
out
sbb
orl
sbb
mov
insl
shrb
icebp
mov
fiadds
enter
gs
xchg
xor
jge
mov
sbb
xchg
mov
fldenv
mov
nop
sub
pop
mov
jne
jge
cmc
scas
add
xchg
ss
jl
add
mov
and
rcr
jne
dec
cmpsl
cld
push
out
sub
dec
jne
sbbb
shrl
stos
mov
ret
repz
iret
data16
push
out
lcall
cwtl
in
or
in
aas
sub
jo
stos
inc
aas
xchg
inc
faddp
pusha
leave
pusha
xchg
jecxz
cld
adc
out
out
sbbl
pop
push
popf
cmp
and
mov
mov
fnsave
pusha
imull
cmp
mov
jle
adc
mov
movsb
pushf
xor
daa
aaa
into
pop
idivl
in
stos
dec
fsubrs
int3
jae
popf
testb
lock
and
inc
movsl
inc
xor
jae
into
gs
xchg
push
out
sbb
test
outsb
add
sahf
cmp
lock
filds
enter
data16
xchg
xor
jge
mov
sbb
test
mov
mov
mov
vphadduwq
fbstp
jnp
cmc
lods
add
xchg
xor
push
sbb
xchg
fwait
xor
cmp
fnstenv
push
movsl
cli
pop
out
sub
xlat
outsb
stc
dec
jbe
jle
testb
insl
adc
sahf
repnz
and
xor
icebp
inc
shlb
adc
inc
cwtl
out
test
outsl
push
xchg
jmp
mov
ljmp
inc
cmp
pop
lret
loope
std
adc
test
gs
mov
mov
or
fidivs
cld
popa
clc
sub
dec
jg
adc
mov
mov
cmp
push
cmc
mov
in
test
lret
cld
fwait
testl
pop
jno
dec
mov
iret
data16
out
test
outsl
push
push
imul
aaa
lea
mov
stos
inc
mov
pusha
punpckldq
xchg
xor
jle
mov
sbb
addl
cmp
and
lea
inc
fcomps
loopne
loopne
pop
imulb
lret
jge
std
push
sbb
xor
cmp
xlat
jno
push
mov
testl
mov
xchg
sub
imul
and
shrl
adc
inc
xchg
out
xchg
bound
xchg
jmp
mov
insb
or
loopne
pop
lret
bound
mov
and
test
ret
mov
fstl
or
pop
adcl
cmp
pop
jb
and
mov
xor
cwtl
scas
mov
into
inc
push
cmp
mov
sahf
frstor
test
hlt
lahf
sbb
jmp
mov
adc
cld
mov
arpl
pop
xor
cmp
mov
inc
fiaddl
sbb
pop
rcr
sub
adc
mov
mov
mov
lret
inc
imul
add
xor
mov
insb
xchg
push
fldl
xchg
xchg
ljmp
jne
bound
dec
movsb
loope
in
pop
fs
lret
xchg
xchg
adc
and
clc
ret
mov
adc
adc
xor
jno
dec
scas
stc
je
jbe
push
xchg
subl
jnp
lret
test
inc
lds
dec
push
test
dec
jl
fwait
pop
jle
push
cmp
fisubrl
imulb
nop
push
sub
fisttpll
sbb
andb
mov
mov
dec
inc
mov
mov
in
enter
cmp
mov
jg
jns
inc
cmpsb
push
cs
mov
mov
xchg
std
push
cmp
sahf
jp
sub
or
std
add
movsl
cmpsb
sbb
add
mov
add
xchg
pop
call
xor
or
cmp
out
mov
int3
push
roll
sbb
fldt
adc
adc
push
xor
scas
int3
lock
fwait
cmpsb
pop
and
bt
lods
call
mov
add
je
addr16
call
and
or
iret
lret
adc
inc
test
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
push
push
pop
insb
adcl
adc
fs
pop
mov
inc
or
out
xor
push
stc
movsb
sbb
scas
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
jecxz
test
inc
cmpl
ljmp
aam
adc
sbb
add
push
iret
aad
pop
in
add
loopne,pt
ss
