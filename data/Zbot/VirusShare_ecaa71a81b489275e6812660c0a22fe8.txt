push
mov
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
lea
mov
mov
mov
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
mov
push
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
push
call
add
movl
jmp
mov
add
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
mov
push
mov
push
call
add
sar
cmp
jne
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
mov
push
mov
push
call
add
and
add
mov
mov
mov
add
mov
mov
jmp
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
mov
mov
add
mov
pop
ret
push
mov
push
movl
movl
movl
movl
movl
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
movl
movl
movl
movl
mov
cmp
jae
movl
mov
jmp
jmp
movl
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
cmpl
jne
mov
mov
mov
push
mov
push
mov
push
call
add
mov
push
call
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
cmpl
je
mov
mov
mov
push
mov
push
push
call
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
movl
mov
mov
add
mov
mov
sub
shr
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
ret
mov
pop
ret
int3
int3
int3
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
mov
movb
mov
movb
mov
movb
movl
push
push
lea
push
call
add
mov
mov
push
push
call
lea
push
call
push
push
call
push
push
call
mov
mov
movzbl
cmp
je
mov
movzbl
cmp
je
mov
movzbl
cmp
je
mov
movzbl
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
mov
movb
mov
mov
lea
push
mov
push
push
call
test
je
call
lea
push
mov
push
mov
push
call
test
je
call
lea
push
push
push
call
test
jne
call
movl
movl
movl
movl
movl
movl
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
pusha
movl
movl
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
mov
mov
mov
push
call
add
mov
mov
add
mov
push
mov
push
mov
push
call
add
mov
sub
push
mov
push
mov
push
call
add
mov
add
mov
mov
mov
mov
popa
mov
mov
mov
mov
push
mov
mov
mov
mov
push
mov
sub
mov
pop
add
mov
mov
mov
movl
mov
mov
mov
add
mov
ret
xor
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
push
call
add
movzwl
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
movl
movl
movl
mov
mov
lea
mov
movl
mov
add
mov
movl
movl
movl
mov
mov
mov
mov
movl
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
mov
mov
call
pop
ret
int3
push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
jmp
mov
add
mov
mov
cmp
jge
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
and
inc
add
add
xor
sub
inc
add
inc
add
add
add
xor
sbb
inc
add
add
xor
pusha
xor
xor
inc
add
inc
add
xor
hlt
xor
aam
inc
add
xor
int3
xor
in
inc
add
xor
add
inc
add
xor
loopne
inc
add
xor
enter
clc
xor
call
xor
xor
inc
add
inc
add
inc
add
xor
adc
inc
add
xor
cld
xor
add
inc
add
xor
and
inc
add
xor
movsb
xor
dec
xor
jl
inc
add
xor
test
inc
add
xor
cmp
inc
add
xor
nop
xor
xchg
xor
or
inc
add
xor
adc
inc
add
inc
add
xor
push
xor
and
inc
add
xor
or
inc
add
add
add
inc
add
inc
add
inc
add
add
add
add
xor
and
adc
push
push
test
scas
inc
add
mull
add
push
cmp
outsl
push
dec
ss
pop
ss
push
xorl
push
cwtl
and
ss
add
cmpsb
push
lea
cmp
cmp
test
sti
pop
mov
cmp
pop
jbe
and
lea
cmp
cmp
aam
jne
repnz
mov
push
dec
cmp
push
insb
cmp
push
jnp
sub
mov
push
lahf
cmp
push
mov
push
push
jmp
cmp
jmp
push
cmp
push
push
mov
cmp
sbb
cmp
stos
push
pop
ds
push
sub
cwtl
push
xor
jae,pt
push
ja,pt
pop
ds
push
jg
add
push
ret
push
idivb
les
aas
jecxz
inc
aas
cld
push
pop
aas
push
push
imul
push
push
cltd
aas
inc
push
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
add
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
add
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
add
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
add
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
add
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
add
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
add
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
add
add
scas
add
scas
add
scas
add
scas
add
jmp
pop
jno
add
add
add
add
pusha
outsb
add
insb
outsb
add
jp
add
mov
add
add
mov
outsb
add
in
outsb
add
push
outsl
add
sbb
add
add
inc
outsl
add
pop
outsl
add
push
outsl
add
xchg
outsl
add
movsb
outsl
add
inc
outsb
add
into
outsl
add
fisubrl
add
outsl
add
hlt
outsl
add
add
add
jo
add
jo
add
add
push
jo
add
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
outsb
add
add
add
xor
add
inc
jno
add
jno
add
add
es
add
add
add
add
xorb
mov
add
jno
add
jno
add
jno
add
jno
add
jb
add
add
push
jb
add
add
cmp
add
add
dec
jb
add
add
add
add
jo
add
jle
add
mov
add
add
cmpsb
jb
add
jb
add
jb
add
add
add
add
add
add
add
popa
add
imul
add
add
push
push
push
push
push
inc
push
inc
pop
inc
insb
popa
jae
gs
dec
outsb
je
jb
popa
arpl
add
xor
xor
xor
popa
sub
sub
sub
sub
xor
xor
xor
xor
jge
add
addr16
jo
outsb
dec
gs
add
xor
add
adc
fdivp
mov
lods
cmp
iret
pop
mov
mov
sbb
mov
and
ja
loope
je
inc
pop
cmp
in
pop
jmp
xor
sub
test
je
mov
repnz
mov
and
int3
push
jae
stos
popf
mov
fsubrs
out
pop
and
ljmp
push
xlat
xor
insl
ret
pushf
in
sub
push
add
vunpcklpd
in
stos
or
or
cmc
xchg
and
pop
mov
clc
and
mov
adc
fisttps
das
fbld
push
mov
ds
add
pushf
test
fistpl
js
push
fbld
movsb
rcl
dec
xchg
popf
jne
pop
in
xor
jl
adc
aaa
push
ds
sub
sub
cld
in
nop
and
subb
push
dec
dec
stc
mov
push
cmp
jp
jmp
inc
lock
movsb
push
bound
xor
repnz
push
xor
icebp
pop
icebp
outsb
jl
inc
pop
lods
bound
mov
jnp
pop
jle
fbstp
jno
mov
dec
daa
pop
jbe
lcall
in
jo
aam
adc
push
mov
push
xchg
sub
jne
sub
stc
push
bnd
sub
sub
mov
or
xor
jnp
fcoml
inc
int
daa
adc
out
js
ds
xchg
cwtl
mov
mov
mov
mov
push
not
out
in
je
jmp
sbb
lret
fdivrl
mov
out
out
inc
enter
xchg
dec
inc
mov
mov
dec
add
int3
adc
mov
test
mov
adc
or
enter
mov
add
xor
xor
add
add
scas
push
inc
add
add
or
roll
jb
mov
or
jae
bound
adc
add
jnp
popa
fs
bound
adc
add
jo
je
push
add
push
das
popa
outsb
dec
or
scas
add
insb
adc
inc
imul
je
or
je
scas
add
call
push
push
outsl
clc
sbb
or
je
sbb
scas
add
call
or
lret
outsb
roll
gs
scas
add
mov
inc
add
push
add
push
add
inc
add
inc
add
push
add
je
jge
arpl
or
pop
sbb
add
popa
arpl
bound
sbb
add
add
inc
or
outsb
dec
add
xor
or
add
or
jbe
sbb
add
add
or
add
add
jbe
fstpl
cs
add
lret
arpl
adc
add
add
mov
add
scas
add
addb
mov
add
popa
add
jp
insb
push
add
je
mov
add
ja
popa
jo
add
add
inc
or
outsb
push
add
xor
add
push
add
dec
gs
sbb
add
lret
pop
add
jle
add
jle
add
jle
add
jle
add
jle
add
scas
jle
add
jle
add
mov
scas
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
addr16
add
addr16
add
scas
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
add
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
add
add
clc
scas
push
jmp
lods
addr16
mov
add
lods
pop
add
add
add
test
jmp
push
imul
jmp
lods
daa
add
pushf
addr16
mov
add
lods
push
addr16
lods
push
add
dec
imul
mov
data16
xchg
data16
xchg
add
jbe
add
data16
xchg
add
add
mov
add
cs
inc
data16
push
data16
push
data16
inc
data16
inc
data16
push
data16
push
inc
add
xchg
dec
add
add
data16
push
data16
push
data16
push
data16
push
data16
add
add
add
out
add
push
data16
scas
addb
scas
addb
scas
adcb
scas
jmp
jle
add
jle
add
jle
add
sbb
add
jle
add
scas
jle
incl
add
scas
jle
add
pop
add
mov
xor
scas
jle
add
jle
add
jle
add
ds
out
addr16
jb
add
bound
addr16
sub
lods
addr16
add
addr16
jmp
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
lods
addr16
lods
addr16
lods
addr16
add
add
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
add
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
add
push
push
add
add
inc
push
add
add
push
push
add
add
inc
push
add
push
push
add
push
add
push
add
push
add
push
add
push
add
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
jle
add
jle
add
jle
add
mov
xlat
add
scas
int3
xlat
add
add
add
add
call
rolb
scas
movsb
rolb
scas
mov
add
addr16
shrl
imul
addr16
lods
addr16
shrl
cmpsl
shrl
xor
shrb
imul
addr16
roll
lods
addr16
lods
addr16
shrl
and
lods
addr16
lods
addr16
out
addr16
lods
addr16
out
addr16
call
lods
addr16
out
addr16
in
add
add
push
add
adc
wbinvd
push
add
lods
add
addr16
lods
add
out
add
xlat
addr16
xchg
lds
add
add
add
addr16
add
push
add
xchg
loope
addr16
jbe
add
data16
add
add
add
add
ss
add
sub
add
add
lods
add
adc
add
lods
mov
add
scas
add
nop
mov
add
mov
add
scas
add
fsubrs
add
cmp
add
aam
add
hlt
mov
add
mov
add
sahf
add
jb
add
mov
add
and
add
cs
add
lret
add
fwait
add
add
add
outsb
sahf
add
scas
lcall
scas
jl
add
push
lret
pop
lret
add
push
lret
add
sub
add
lret
es
cs
test
add
jb
add
ror
scas
fcmove
add
scas
push
int
scas
push
int
scas
mov
add
je
add
stos
rolb
scas
addr16
lods
addr16
lods
addr16
aad
addr16
lods
addr16
lods
addr16
aad
addr16
addr16
lods
addr16
lods
aad
addr16
lods
addr16
lods
addr16
addr16
lods
addr16
shrl
lods
shrl
addr16
addr16
out
loopew
lods
addr16
lods
loopew
lods
addr16
fsubrs
sub
fsubrs
popa
fsubrs
add
add
add
push
add
pop
fs
clc
arpl
fildl
add
frstor
xchg
frstor
popa
frstor
push
frstor
jnp
std
arpl
imul
arpl
or
arpl
sbb
frstor
adc
arpl
frstor
jecxz
imul
jle
add
imul
mov
adc
pop
imul
pop
imul
pop
imul
jle
add
imul
lret
add
add
testb
add
popl
add
add
adc
add
sbbb
add
push
imul
or
add
xor
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
mov
add
add
nop
push
subb
add
add
orb
add
scas
data16
scas
mov
add
mov
int
scas
xor
add
mov
int3
add
out
int3
add
nop
add
scas
mov
add
push
jecxz
scas
nop
add
scas
fmul
add
into
enter
enter
leave
add
leave
add
scas
push
leave
add
mov
add
addr16
lods
addr16
lods
addr16
enter
enter
enter
enter
enter
add
addr16
lods
addr16
lods
addr16
loope
addr16
loope
addr16
lods
addr16
loopne
addr16
loopne
addr16
loopne
scas
loopne
addr16
lods
addr16
loopne
lods
addr16
loopne
addr16
loopne
addr16
add
out
out
addr16
out
addr16
fsubrs
add
lods
addr16
push
add
push
add
lods
orb
pop
stos
xorb
push
add
lods
addr16
addr16
addr16
lods
addr16
addr16
orb
stos
lret
sbb
addr16
addr16
addr16
addr16
cmpb
addr16
lods
add
add
rolb
add
mov
add
test
add
jle
add
orb
add
mov
add
add
mov
add
mov
add
xor
add
add
xor
add
push
add
dec
xchg
add
xchg
add
xchg
add
add
bound
add
fimuls
add
add
data16
ret
repz
imul
data16
sbb
int3
mov
je
dec
in
add
jg
push
add
mov
inc
pop
div
xor
jecxz
jmp
lahf
xchg
stc
jle
jmp
push
ljmp
and
rol
add
cs
add
pop
hlt
mov
divb
or
jl
mov
xor
push
stc
lcall
popa
mov
dec
mov
mov
add
addr16
add
dec
pop
insl
jge
fwait
stc
cwtl
rcrl
testl
sbb
ss
mov
jne
add
mov
das
adc
shrl
fadds
mov
sub
jnp
and
sub
push
push
movsl
clc
xor
popa
sub
js
jne
psubq
jno
inc
les
or
pop
dec
add
sub
mov
push
mov
add
add
adc
xor
xlat
cmp
sti
xchg
adc
inc
out
and
adc
jl
cld
mov
popa
mov
stos
jmp
dec
push
fcompl
xchg
stos
jmp
insl
push
dec
rclb
adc
push
jge
or
mov
push
jecxz
inc
cmp
adc
cmp
adc
adc
rcrb
add
gs
add
sti
cmp
lea
pushl
cmpsl
inc
xor
insl
jns
rclb
xor
and
addl
lock
int
and
cwtl
rcll
out
add
sbb
push
pop
add
adc
adc
std
mov
test
push
rclb
xor
add
xchg
int
and
adc
sar
adc
xchg
cmp
xchg
int
sahf
jmp
cmpsl
rcrb
pop
add
mov
mov
mov
mov
sahf
lock
mov
fildll
hlt
jmp
addr16
or
fcompl
loope
pop
dec
enter
sahf
and
outsl
std
sub
int
mov
nop
add
scas
pop
push
sbb
iret
sahf
icebp
add
xor
data16
jmp
and
push
call
add
shr
cmp
and
insb
iret
scas
push
adc
bound
or
jle
test
cmpsl
sahf
lret
mov
popf
push
and
fistpl
mov
cmpsl
sahf
lods
aaa
dec
gs
xchg
fidivl
jge
inc
mov
aaa
dec
pop
daa
jp
xchg
push
pop
push
inc
popf
scas
cmpsl
sahf
lods
aaa
dec
outsb
stos
mov
push
popa
push
scas
shr
dec
flds
ret
add
das
add
sarl
cli
jne
outsl
cwtl
out
mov
dec
pop
xchg
les
aad
jmp
lods
add
imul
add
lods
arpl
test
lods
bound
stc
lods
outsl
add
lods
add
stos
inc
add
lods
arpl
stc
lods
push
add
lods
push
add
lods
inc
add
sub
loope
lods
push
add
out
pop
je
add
lods
inc
add
add
sub
add
arpl
add
xor
mov
add
aam
add
mov
inc
add
add
add
mov
add
outsl
push
add
outsl
adc
subb
movsb
outsb
pop
add
outsl
xor
xchg
insb
rolb
outsb
or
xchg
add
push
insb
mov
add
addb
outsl
inc
add
loopne
data16
push
add
pop
add
sbb
push
insb
nop
add
outsl
js
scas
nop
or
scas
nop
or
scas
lahf
or
scas
nop
or
nop
or
scas
nop
or
scas
nop
or
scas
nop
or
scas
mov
or
or
xchg
or
add
nop
or
or
nop
or
scas
lahf
or
scas
nop
or
nop
or
scas
nop
or
nop
or
scas
mov
or
or
nop
or
jl
jmp
or
addr16
or
addr16
or
addr16
jmp
or
jmp
or
jmp
or
or
addr16
or
push
jmp
or
push
jmp
or
addr16
or
addr16
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
movsb
or
add
mov
add
movsb
insl
add
movsb
in
add
mov
add
mov
add
mov
add
movsb
adc
jmp
mov
add
mov
add
movsb
icebp
call
mov
add
mov
add
movsb
add
jmp
mov
add
movsb
popa
add
movsb
loope
jmp
jmp
push
popa
or
inc
insb
pop
add
insb
push
add
imul
insb
jle
push
insb
add
imul
aam
sbb
push
insb
outsb
add
imul
push
add
imul
imul
push
add
imul
arpl
add
addl
outsb
pop
add
arpl
add
xchg
fs
outsb
or
xchg
add
and
push
mov
add
addl
scas
orb
nop
push
push
scas
orb
scas
orb
scas
orb
jno
cmp
orb
scas
orb
scas
popl
scas
orb
scas
orb
scas
orb
scas
orb
scas
orb
scas
orb
scas
orb
add
orb
scas
orb
scas
nop
or
scas
jno
sub
orb
scas
orb
scas
popl
scas
orb
scas
orb
scas
addr16
or
addr16
or
flds
addr16
or
addr16
add
addr16
or
addr16
add
cwtl
addr16
or
addr16
or
addr16
or
addr16
or
cli
add
addr16
or
fadds
addr16
jmp
movsl
int
jmp
mov
add
mov
add
movsl
lea
fldcw
mov
add
mov
add
movsl
fldl
std
lods
sub
jmp
mov
add
stos
popf
add
lods
pop
add
mov
add
mov
add
stos
mov
add
mov
add
mov
add
stos
jge
fldcw
sbb
jmp
stos
addr16
lods
cmp
jmp
mov
add
stos
movsl
add
push
imul
add
push
pusha
daa
add
scas
add
pop
add
xchg
push
pusha
inc
add
out
add
or
push
pusha
pop
add
pusha
pop
add
arpl
add
pusha
jg
push
pusha
aas
add
arpl
add
push
outsl
add
pop
das
add
bound
add
pop
popl
pop
dec
add
incb
cmpsb
push
push
add
sbbb
xchg
popw
add
orb
scas
orb
nop
add
scas
orb
scas
orb
scas
orb
orb
scas
orb
scas
orb
scas
orb
nop
add
scas
orb
scas
orb
scas
orb
insl
add
scas
orb
scas
orb
scas
orb
scas
popl
adc
orb
scas
orb
add
orb
scas
orb
scas
orb
scas
nop
add
orb
scas
orb
scas
fwait
or
scas
addr16
add
addr16
or
addr16
add
addr16
or
addr16
or
addr16
or
flds
mov
jmp
or
addr16
add
pop
addr16
or
data16
shlb
push
addr16
or
addr16
or
addr16
or
addr16
jmp
movsb
les
cli
scas
inc
add
mov
call
movsl
stos
add
scas
pop
add
mov
add
movsb
inc
add
movsl
lret
mov
add
add
add
movsl
mov
fldcw
or
add
movsl
fiaddl
std
or
add
mov
call
mov
push
add
mov
call
mov
pop
add
mov
add
movsb
sbb
add
xchg
add
pop
push
add
arpl
add
pop
jbe
add
arpl
add
pop
data16
add
lods
add
push
add
xchg
inc
pop
inc
add
in
add
jno
add
pop
pop
add
pop
push
add
arpl
add
pop
jle
push
pop
add
arpl
add
sbb
pop
outsb
add
pop
cs
bound
add
pop
mov
scas
jle
dec
add
pusha
jmp
orb
scas
xchg
or
scas
orb
scas
orb
scas
orb
nop
decb
scas
orb
scas
orb
scas
orb
orb
scas
orb
scas
orb
scas
orb
nop
incb
scas
orb
scas
orb
jno
cmp
orb
scas
orb
add
orb
scas
orb
scas
orb
scas
addr16
or
push
jmp
cld
lods
addr16
or
push
jmp
or
addr16
mov
jmp
or
addr16
or
addr16
or
frndint
add
addr16
or
std
cld
pop
addr16
or
addr16
mov
addr16
movsb
cmp
jmp
mov
add
movsb
faddl
jmp
mov
add
mov
sbb
jmp
mov
add
orl
movsb
clc
call
mov
add
arpl
jmp
jmp
mov
add
mov
add
movsb
call
add
mov
add
and
jmp
movsb
push
add
mov
add
mov
add
hlt
icebp
call
jmp
add
add
adc
jo
add
jo
add
imul
jo
add
jo
add
popa
add
add
xchg
add
imul
test
add
jo
add
into
add
jo
add
add
scas
add
push
add
xchg
inc
jo
add
imul
push
popa
or
push
jo
add
jo
add
imul
push
jo
add
jle
fisubrs
jle
outsb
scas
jle
add
jle
push
scas
jle
mov
cmp
scas
nop
or
scas
xchg
or
scas
lea
adc
outsl
or
stos
imul
scas
jnp
add
nop
or
scas
mov
add
pushf
or
outsb
or
scas
or
cmpsl
push
subl
xchg
or
scas
xchg
or
add
add
scas
popa
cld
push
dec
addr16
push
scas
pop
flds
mov
loope
scas
data16
jle
int
scas
aaa
sti
push
stos
add
scas
pop
incl
outsb
sub
scas
flds
mov
loopew
mov
loopne
test
repnz
add
testl
scas
addr16
add
scas
addr16
add
addr16
add
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
add
add
pop
push
add
cmpsl
pop
push
repz
pop
add
lods
pop
add
lods
addr16
lods
addr16
lods
addr16
lods
add
pop
add
pop
add
adc
add
adc
add
add
add
fisubl
lret
add
add
lret
add
fsubs
enter
leave
add
leave
add
add
add
lahf
add
lahf
add
mov
mov
jge
add
jge
add
push
add
andb
add
inc
add
push
add
push
add
inc
add
inc
add
scas
jle
add
jle
add
jle
add
jle
add
jle
add
scas
jle
add
jle
add
jge
add
jle
add
les
or
adc
or
movsb
add
scas
cmp
or
pop
add
scas
aam
or
test
or
aam
or
addr16
add
cmpsl
stos
add
addr16
add
addr16
add
addr16
add
addr16
add
sbb
cmpsl
addr16
add
addr16
add
sbb
cmpsl
addr16
add
jcxz
mov
arpl
xor
cmpsl
addr16
mov
ret
add
roll
cmpsl
addr16
add
repz
add
addr16
cmpsl
and
mov
add
lods
outsl
add
outsl
add
mov
add
lods
outsl
add
outsl
add
mov
add
lods
outsl
add
outsl
add
outsl
add
lods
outsl
add
lods
outsl
add
outsl
add
stos
outsl
add
lods
outsl
add
outsl
add
stos
outsl
add
lods
outsl
add
outsl
add
stos
outsl
add
lods
outsl
add
lods
outsl
add
lods
outsl
add
outsl
add
lods
outsl
add
outsl
add
or
add
imul
add
imul
add
imul
add
or
xlat
push
or
addr16
or
imull
add
push
or
mov
or
daa
insb
or
add
push
or
xchg
imul
inc
imul
or
fildll
add
imul
outsl
push
or
pop
push
or
scas
push
add
scas
xlat
add
scas
pop
add
scas
xchg
scas
push
add
scas
xlat
add
scas
pop
add
scas
xchg
scas
push
add
scas
lret
add
scas
adc
or
xor
or
scas
stos
add
scas
mov
or
arpl
or
addl
sti
add
scas
arpl
or
addl
sti
add
scas
dec
add
scas
ret
add
scas
fwait
add
scas
adc
or
mov
aam
mov
dec
add
insb
add
addr16
mov
hlt
add
cmpsl
movsb
add
addr16
add
addr16
add
addr16
addr16
add
sbb
cmpsb
addr16
mov
jp
mov
cmp
cmp
cmpsb
addr16
loopw
cmpsb
loopw
cmpsb
addr16
mov
jb
mov
add
mov
add
lods
jo
xor
mov
add
lods
jo
add
jo
xchg
mov
add
lods
jo
ret
add
mov
add
lods
jo
repnz
jo
repnz
jo
bound
jo
xchg
lods
jo
xchg
lods
jo
ret
add
lods
jo
adc
jo
subb
xor
jo
mov
add
outsb
add
lods
outsb
add
sbb
add
or
leave
imul
leave
or
cltd
or
mov
add
or
cmp
add
or
imul
add
or
sbb
add
or
imul
sbb
add
or
sub
sbb
add
mov
push
add
or
cmp
add
or
jns
or
dec
imul
cmp
add
inc
add
scas
flds
scas
roll
or
cltd
add
scas
xchg
add
or
stc
add
scas
icebp
add
scas
sub
or
jns
or
pop
add
add
leave
add
scas
roll
scas
icebp
add
scas
sub
or
jns
or
jmp
add
scas
cltd
add
scas
xchg
add
add
addr16
add
addr16
add
flds
test
sbb
sbb
test
flds
mov
loope
test
mov
adc
roll
mov
roll
test
xchg
add
addr16
addr16
add
addr16
test
test
mov
fldl
test
xchg
add
addr16
add
addr16
sub
mov
stos
add
add
stos
outsl
add
stos
outsl
add
lods
fs
lods
fs
add
add
lods
fs
lods
fs
lods
fs
lods
fs
lods
fs
lods
fs
lods
fs
lods
fs
lods
fs
lods
fs
lods
fs
lods
fs
lods
fs
lods
fs
lods
fs
lods
fs
lods
fs
lods
fs
lods
fs
lods
fs
lods
fs
lods
add
mov
int
add
add
push
add
pop
add
pop
jle
pop
or
pop
or
bound
or
or
or
or
or
pusha
or
dec
pusha
or
or
push
or
push
or
push
or
push
or
push
or
push
or
or
or
push
or
ja
or
scas
inc
adc
mov
adc
mov
cmp
or
test
inc
adc
mov
push
adc
test
inc
adc
mov
push
adc
test
inc
adc
mov
push
adc
test
inc
adc
add
push
adc
test
adc
mov
cmp
adc
test
adc
mov
cmp
notb
test
out
adc
insb
ficoms
mov
notb
test
out
adc
push
adc
js
adc
mov
je
sbb
jno
sbb
jb
sbb
mov
jg
sbb
jg
sbb
jg
sbb
and
xchg
adc
movb
push
mov
add
mov
repz
movsl
jge
sbb
xchg
jge
ror
jge
rol
jge
add
jle
repnz
jle
repnz
jle
loop
jle
ror
jle
rol
jle
add
std
mov
sbb
test
sbb
mov
jnp
fstl
jnp
int
jnp
add
mov
sbb
test
sbb
mov
jnp
fstl
jnp
int
jnp
add
jl
cld
mov
sbb
in
mov
jns
sbb
add
sbb
mov
sbb
sbb
sbb
sarl
sbb
cmpl
jae
sbb
add
insl
or
mov
or
push
or
cmpl
adc
adc
inc
jbe
adc
adc
push
jae
adc
adc
je
adc
jno
adc
jno
adc
scas
pop
pop
adc
push
pop
adc
cmp
adc
ret
adc
ret
push
mov
pop
adc
push
mov
xor
pop
sarb
pop
mov
data16
mov
sbb
cmpsl
push
sbb
cmpsl
push
sbb
xchg
inc
sbb
xchg
inc
sbb
sbb
sbb
mov
sbb
sbb
cmpsb
push
sbb
xchg
inc
sbb
xchg
inc
sbb
aaa
sbb
aaa
sbb
mov
add
mov
add
movsl
jge
sbb
jge
sbb
jge
sbb
jge
sbb
jl
sbb
repnz
loop
les
sbb
jb
sbb
call
add
scas
addr16
add
addr16
add
addr16
add
addr16
scas
filds
scas
flds
scas
addr16
scas
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
add
add
lods
add
add
add
add
mov
add
add
add
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
add
stos
add
mov
add
lods
add
imul
imul
push
imul
add
push
add
push
outsb
add
push
insb
add
push
bound
add
add
jns
add
jno
add
dec
call
pop
call
test
add
imul
ja
mov
out
sbb
or
sbb
arpl
in
arpl
repnz
jns
add
loopne
xor
xchg
mov
xchg
mov
scas
inc
out
mov
rcrb
mov
lret
scas
add
gs
mov
movsl
jns
fstl
mov
insb
mov
fdivrs
gs
daa
sub
dec
mov
or
and
in
in
adc
repz
adcb
add
rolb
sti
orb
call
pushf
mov
hlt
int3
mov
mov
addr16
aam
pusha
stos
or
mov
pop
add
add
mov
push
add
xlat
and
adc
xchg
mov
xor
packuswb
icebp
mov
sub
outsb
aaa
pop
test
inc
push
scas
sbbb
es
dec
sbb
out
test
jecxz
lock
jp
jo
ds
jo
push
lahf
cmp
fxch
aaa
inc
dec
int3
mov
mov
scas
bound
les
shll
loope
mov
jg
inc
les
jle
lret
xchg
call
cmpl
adc
test
pop
push
mov
dec
pusha
xorb
sbb
adc
adc
push
adc
movb
xor
xor
xor
inc
addr16
and
adc
cmp
fwait
or
dec
mov
das
cmp
xchg
aas
cmp
add
outsb
xor
jecxz
lods
shll
gs
add
add
add
or
push
cmp
add
divb
mov
sti
shrb
shrb
mov
mov
loopne
ficomps
push
fldcw
in
iret
mov
ret
xlat
leave
pop
mov
push
imul
mov
mov
sbb
mov
add
cmp
ljmp
loope
stos
mov
or
dec
lret
cld
arpl
sub
push
push
enter
mov
push
movsl
out
cwtl
pop
stos
add
xor
mov
mov
lds
xchg
sub
clc
xchg
and
lock
sbb
loope
in
shlb
cmc
cmp
mov
mov
cmpsl
mov
cwtl
sbb
jns
xchg
rorl
ret
insb
mov
clc
addr16
pop
inc
ss
dec
cmp
mov
add
nop
and
push
lahf
mov
sbb
cltd
or
mov
sub
sar
inc
xchg
xchg
shlb
test
jecxz
xchg
adc
mov
mov
ljmp
test
sti
es
or
adc
in
cld
mov
mov
and
fistps
bound
add
repz
mov
cmp
push
or
mov
pushf
fimuls
data16
stc
addr16
aad
psrad
sbb
movsl
adc
xchg
in
ret
sahf
or
or
xor
sbb
dec
xor
xor
xor
xor
or
testb
pop
outsl
xchg
test
xchg
jns
pop
jmp
aad
lea
lds
mov
jb
push
add
or
mov
mov
add
fadds
cmp
pop
pusha
ror
mov
sbb
adc
fldenv
push
xlat
aaa
add
cmc
mov
inc
outsl
adc
xor
sbb
mov
push
xor
mov
adc
mov
out
lcall
clc
data16
mov
push
sub
in
ret
scas
pop
aam
add
add
scas
jg
sbb
add
aam
mov
ja
mov
lea
push
mov
addr16
jns
add
stos
out
inc
or
hlt
dec
push
inc
mov
cld
xor
cli
out
dec
outsb
pop
cwtl
sub
adc
gs
jl
xor
xchg
int3
scas
leave
push
popf
mov
lea
lret
aam
subl
push
xor
mov
ss
push
std
pop
inc
dec
mov
out
xor
add
repnz
sbb
fisttpl
dec
add
or
xchg
jl
int
mov
add
push
push
cli
stos
xchg
xchg
jmp
mov
xchg
pop
jle
dec
dec
test
mov
cli
jb
jnp
jb
mov
sub
push
mov
arpl
je
subl
std
and
add
pop
jae
je
push
mov
sub
lock
lcall
cli
je
sub
pop
lea
xchg
hlt
or
sub
aad
or
lods
sbb
xor
rorb
and
ja
jg
mov
pop
std
fildl
mov
clc
push
sbb
cmp
dec
in
jp
dec
cmc
add
bound
add
mov
loop
pop
outsb
jno
push
scas
inc
adc
pop
xchg
cmp
insb
std
gs
dec
lret
cmp
dec
in
xchg
add
mov
ja
cmpsl
xor
pop
and
and
aas
mov
jecxz
lahf
inc
aam
xchg
fdivl
shrb
mov
fdivrs
das
cltd
mov
dec
pop
or
xchg
xlat
push
dec
push
lret
scas
lock
das
mov
out
mov
std
leave
rcll
lret
jmp
stc
mov
pop
mov
inc
xchg
mov
int
lods
mov
mov
out
sarb
pop
hlt
add
add
fcom
stos
add
jecxz
push
pop
pop
cmp
xor
inc
ja
cli
xlat
sbb
sub
dec
ret
xchg
pop
inc
jge
sahf
add
fwait
ja
ja
insb
push
addr16
inc
ret
xor
subb
mov
add
setp
sub
fstl
push
add
dec
mov
and
add
mov
jbe
shlb
stc
nop
subl
loop
sub
fbstp
or
push
mov
divb
dec
pop
jb
or
mov
sub
dec
mov
fs
push
insb
into
xchg
sub
sbbl
dec
add
inc
push
mov
aas
iret
gs
jg
jne
cltd
xlat
jecxz
mov
add
jecxz
cmp
imul
pusha
xor
jp
xchg
pop
popf
or
dec
aam
rcll
sub
jp
sbb
inc
lret
out
push
dec
shlb
xor
loopne
popf
mov
repz
test
sbb
cmp
stos
and
addr16
push
push
add
xor
subl
int
mov
fcoml
lods
imul
dec
cld
pop
mov
sahf
cltd
jns
icebp
test
dec
and
jnp
jbe
bound
rclb
pop
push
xor
pop
cmp
gs
call
lret
push
cmp
or
lods
lahf
and
insl
lea
adc
xchg
cmpsl
xchg
add
cmpl
and
repnz
shr
scas
xor
std
out
jo
out
ljmp
mov
orb
call
lret
push
sbb
insl
fidivl
std
je
sbb
cmp
ljmp
inc
mov
pop
mov
dec
sarb
mov
add
scas
cmp
lods
fadds
sub
mov
ror
mov
adc
adc
in
xchg
stos
out
fwait
push
mov
outsb
mov
fidivrs
jb
inc
jae
mov
mov
dec
add
gs
clc
cltd
pusha
andb
popa
sub
add
adc
inc
pop
xor
mov
call
aas
cmp
std
dec
jmp
or
mov
pop
sbb
adc
jg
fdivs
jle
xchg
data16
and
jg
test
out
sbb
and
jmp
jl
mov
rcrl
insl
xchg
pushf
xor
mov
push
xor
shlb
test
and
and
pusha
xchg
es
leave
and
sub
hlt
sbb
sub
testb
scas
mov
js
subl
stos
fdivp
sub
cmp
das
test
dec
mov
jae
jns
jb
dec
jbe
movsl
cwtl
jbe
and
and
sbb
mov
mov
jg
aas
or
addr16
iret
jl
cmp
inc
js
movb
add
jnp
and
insl
mov
stc
outsb
inc
jmp
jbe
les
imul
mov
jmp
gs
fs
and
pop
loopne
mov
xlat
dec
pop
lds
dec
mov
mov
dec
add
mov
cwtl
cli
enter
mov
push
lock
ljmp
int3
outsb
sbb
mov
mov
icebp
pop
sub
jne
inc
shll
jl
pop
cmp
adc
sub
gs
push
and
push
jg
movsb
pop
arpl
sub
sti
je
outsl
icebp
sbb
call
mov
mov
jae
push
adc
pop
dec
pop
dec
in
dec
sarl
push
pop
mov
push
dec
movsl
rorb
jnp
dec
arpl
inc
dec
mov
dec
cmp
inc
es
inc
push
pop
sbb
add
cmp
stos
mov
pop
imul
lcall
iret
out
cmp
push
icebp
ss
mov
mov
gs
xchg
and
pushf
cmpsl
clc
cmp
pop
pop
push
out
ss
add
repz
or
mov
jb
hlt
fidivrs
test
mov
cltd
push
aas
arpl
push
add
sbb
rol
fmull
lods
add
mov
ret
mov
sbb
xor
fcmovb
dec
sub
push
rclb
lret
pop
out
out
leave
das
test
enter
leave
pop
mov
in
repz
iret
cld
sbb
add
in
scas
xchg
rorl
nop
test
sub
sub
xchg
std
scas
fs
xor
and
add
mov
sahf
rcrb
pushf
ja
cli
popf
mov
mov
adc
shlb
fwait
sti
adc
lcall
dec
mov
add
mov
ror
mov
or
add
arpl
mov
pop
lcall
mov
faddl
in
push
test
sbb
aad
lock
add
push
inc
push
add
notl
jmp
jns
sub
inc
push
outsl
sbb
mov
icebp
adc
dec
jne
in
dec
mov
testl
cmpsb
jl
lret
lea
inc
movsl
or
cmp
mov
sbb
int
dec
jb
sbb
repz
repnz
hlt
fdivrl
adc
push
add
push
imul
sbb
call
sbb
mov
mov
int
fidivl
aam
push
jmp
fistl
xor
mov
call
add
sbb
mov
inc
repz
push
fldl
adc
dec
pop
call
mov
adc
sub
or
rorl
sahf
mov
repnz
aas
dec
jl
xchg
dec
sub
sub
mov
mov
cld
jns
and
pop
jl
orb
stos
in
adc
das
in
in
dec
xchg
mov
sahf
test
inc
cmp
xor
jl
into
scas
add
ja
and
dec
mov
push
in
dec
inc
rorl
lock
add
loope
pushf
scas
jg
mov
cmpsl
aad
in
cmp
add
sahf
xor
fstpt
xchg
lahf
testb
mov
add
repz
dec
test
jnp
fwait
into
inc
cmpsl
and
mov
xor
mov
jbe
inc
iret
lret
outsb
jg
lret
push
adc
mov
out
fwait
test
dec
mov
jge
adc
lret
scas
ja
and
or
jae
cs
inc
mov
inc
push
add
xor
xor
jmp
add
dec
lods
mov
push
fildl
cs
mov
rcl
adc
outsb
sbb
cwtl
es
je
sub
loope
ds
cmp
sbb
or
mov
xchg
shl
adc
rclb
imul
daa
or
icebp
dec
negb
stc
in
cmpsl
inc
mov
fs
test
sub
out
std
jp
jae
dec
xor
into
lcall
xor
and
xlat
mov
push
icebp
inc
sub
sti
or
xchg
test
dec
pop
mov
xchg
jns
jmp
adc
dec
xor
mov
sub
cmp
or
mov
cmpb
and
inc
xor
imul
cli
daa
mov
bound
push
aam
pop
mov
mov
xor
fimull
in
cmc
rcrb
mov
xor
push
mov
sub
cmpsb
push
rcl
mulb
mov
stc
fcomps
test
in
jae
dec
dec
leave
adc
addr16
out
add
pop
cmp
outsb
ret
bnd
jmp
push
cld
iret
xchg
pop
sbb
or
and
lcall
inc
repnz
mov
mov
int
pop
loop
mov
add
setnp
setb
lods
sub
xor
cmp
push
movsl
xorb
fadds
std
and
lret
mov
out
das
adc
std
sbb
inc
add
in
into
lret
dec
inc
fsubrl
clc
fs
push
das
stc
bound
es
jmp
sub
inc
or
dec
mov
insl
sbb
test
icebp
pushf
cs
push
xchg
je
call
sub
hlt
loopne
jle
xor
sahf
add
xor
je
add
cmp
out
fstl
push
sbbb
and
pop
ljmp
icebp
push
out
shll
lods
lret
mov
out
push
mov
cmp
sbb
mov
pop
arpl
push
test
sahf
push
roll
lcall
xor
in
sub
add
andl
mov
je
pop
clc
xchg
dec
stos
or
in
call
fnstsw
int3
cmp
xor
xchg
je
inc
jae
xchg
push
imul
arpl
mov
jge
ss
fadds
scas
addr16
into
adcl
icebp
in
jae,pn
sbb
cmp
jg
adc
daa
sbb
idivl
addr16
mov
popa
aas
push
push
pop
js
fistps
mov
jns
push
xchg
in
push
sarl
cmp
dec
gs
fiadds
add
dec
jmp
add
push
push
ljmp
xlat
mov
arpl
push
in
std
mov
dec
dec
lods
ret
movsb
jb
pop
mov
xchg
sub
xchg
cmpsb
in
add
shll
scas
sbb
cmpsb
ljmp
imul
insb
cmp
stc
inc
movsb
repz
icebp
pop
jne
stc
or
sub
repnz
lods
inc
out
cmp
sti
pusha
push
mull
les
xchg
xchg
xchg
cltd
pop
mov
sahf
inc
push
fnstenv
add
orl
sbb
cmp
push
bnd
cld
pop
mov
cmpsl
pushf
test
scas
mov
pop
aam
push
add
jecxz
or
and
or
inc
cmp
cmp
sbb
cs
fistl
popa
dec
ret
and
imull
add
add
movsl
xor
or
out
pop
or
add
push
fldcw
push
jmp
test
or
mov
jl
adc
push
popa
pop
addr16
push
imul
pop
xor
xor
and
dec
mov
les
sub
mov
inc
and
test
lods
call
mov
add
push
arpl
cltd
pop
jae
push
outsb
std
jbe
mov
jmp
leave
sub
testb
pop
pop
and
sarb
aaa
xchg
mov
cld
aas
push
ret
push
stos
out
push
shrl
fildl
aam
sub
arpl
cli
jmp
fcoml
cmp
scas
in
add
mov
mov
pop
adc
insb
test
leave
mov
test
mov
or
xor
int3
scas
shll
data16
add
xlat
lods
xor
push
mov
lret
lock
jg
imul
jo
jl
fsts
pop
xchg
int3
loopne
adc
loope
stc
loope
inc
dec
add
loop
add
mov
jle
in
rol
clc
icebp
push
pop
mov
lock
push
addr16
xchg
push
xchg
ss
dec
pop
sub
imul
not
addr16
imul
mov
adc
mov
pop
push
sbbl
mov
mov
jp
ja
dec
pop
inc
add
gs
mov
add
xchg
cmp
insl
lahf
pop
xchg
cmp
cmpsl
and
into
xor
jp
scas
ret
ret
and
mov
mov
mov
or
push
fiaddl
jo
jmp
inc
add
mov
sub
cmp
or
mov
adc
mov
mov
dec
mov
rolb
add
loop
sub
adcl
push
ljmp
ja
cmp
sbb
add
cmp
add
jecxz
jbe
sbb
loope
inc
rorb
sbb
daa
jo
mov
dec
scas
xchg
pop
jge
daa
add
lock
sub
xchg
enter
and
jo
iret
and
test
or
mov
lds
pop
dec
lcall
clc
lods
sbb
aas
test
dec
xor
loopne
push
sbb
add
mov
fs
test
jg
mov
adc
out
call
lret
adcb
frstor
cld
scas
cmp
jmp
push
js
sti
add
addb
lcall
mov
add
push
insb
aad
mov
loop
cwtl
out
lock
jae
inc
mov
imul
fs
iret
mov
pop
push
lcall
ror
or
push
popa
inc
adc
and
in
jecxz
add
xchg
pop
or
inc
stc
fildl
out
sbb
lcall
insb
sbb
mov
push
sahf
sti
fbld
mov
cmp
ja
pop
lret
loopne
push
aam
out
stc
andb
mov
shll
stos
lret
jmp
dec
int3
sub
push
std
imul
or
or
cmp
insl
xchg
mov
pop
mov
push
push
jno
dec
xor
dec
or
shll
mov
mov
xchg
cmp
fiadds
std
push
out
mov
xchg
jns
xchg
pushf
dec
sub
mov
fwait
lock
pop
and
sub
jno
clc
mov
lcall
in
sub
mov
inc
jns
xor
adcb
cmpsb
add
bound
movsb
push
in
dec
pop
jnp
bound
cmpb
jns
and
mov
push
pop
add
lea
and
xchg
dec
test
inc
xor
incb
popf
out
testb
or
out
into
dec
pop
add
mov
ja
call
jle
dec
inc
fisubrl
xchg
dec
sbb
push
call
clc
cmp
sub
mov
cmp
imul
mul
jo
call
lds
ret
mov
jmp
mov
leave
or
mov
xor
mov
sbb
bnd
sbb
mov
js
mov
dec
or
decb
loopne
sub
mov
mov
inc
mov
int
icebp
pop
mov
push
inc
xchg
insl
test
test
mov
xchg
xchg
cmpsb
cmpb
inc
outsl
or
mov
addl
cmpsb
mov
fidivrs
pop
adc
dec
mov
dec
push
lcall
pushf
add
sbb
out
mov
xor
bound
imul
push
adc
repz
imul
mov
test
adc
imul
out
sub
dec
jns
gs
dec
lods
jbe,pt
outsl
daa
mov
xor
mov
fwait
aam
and
repz
mov
movsb
scas
dec
mov
add
imul
jne
pushf
std
xor
pop
imul
pop
mov
test
out
and
faddl
inc
mov
pop
adc
and
rcrb
inc
andl
mov
stc
add
imul
test
mov
andb
fwait
arpl
mov
es
pop
add
lret
imul
std
or
inc
stos
fbstp
push
imul
call
popa
loop
lds
adc
or
scas
sbbb
or
aas
mov
clc
jle
mov
mov
mov
xor
mov
out
jbe
daa
push
cmp
es
add
inc
cmp
xchg
xor
orps
icebp
loop
lret
shl
out
xchg
clc
int3
mov
xchg
outsb
push
ja
decl
data16
push
daa
pop
es
push
sbb
mov
xor
push
and
js
mov
sysexit
ljmp
pop
dec
mov
stos
push
scas
cmp
rclb
hlt
pop
add
pop
jbe
shll
arpl
xor
and
jmp
outsb
xchg
aaa
ljmp
pop
out
and
sub
in
cltd
mov
test
add
push
mov
adc
loope
push
clc
fs
xchg
push
int3
xchg
sub
cmp
jecxz
enter
ja
add
dec
sbb
lods
lods
add
fwait
sahf
mov
mov
fs
xchg
call
cmpsb
push
ja
xchg
imul
pop
out
das
and
mov
jb
dec
scas
pop
inc
loopne
mov
xchg
mov
out
cmp
out
or
xor
pop
frstor
mov
lods
ret
mov
scas
jg
mov
sbb
mov
lds
pop
in
imul
jne
xor
cs
daa
adc
mov
repnz
xor
xchg
sub
or
jnp
sbb
jne
jbe
imul
sbb
lea
sub
inc
pop
ljmp
push
adcl
push
xchg
adc
and
pop
jge
lahf
ds
mov
clc
test
in
mov
pop
lret
loopne
mov
cs
cmc
and
inc
xchg
xlat
lret
or
inc
mov
push
sub
adc
pop
mov
jo
sbb
mov
bound
inc
and
sbb
dec
out
fldl
hlt
xor
add
jp
dec
and
cld
das
pop
outsl
lret
and
fwait
inc
movsl
das
out
cld
xchg
lods
pop
scas
sub
mov
and
sbb
test
xchg
or
stos
dec
repz
sbb
addr16
mov
cmp
mov
push
mov
loop
mulb
call
nop
into
adc
inc
inc
divl
cmp
mov
pop
loopne,pn
insl
add
sbb
fs
out
cmc
jnp
fnstenv
sub
imul
xor
jae
add
sub
and
sub
hlt
popa
jle
loope
jg
xchg
insl
ret
mov
insb
jge
mov
jp
rol
js
insb
sahf
fsts
test
int
jns
mov
dec
scas
jne
gs
jg
mov
push
adc
fsubrl
mov
inc
cmp
pushl
or
dec
aaa
fdiv
xchg
out
adc
lahf
and
nop
and
ror
dec
add
add
or
negl
add
mov
pop
and
pop
sahf
jo
pop
loopne
bound
lahf
dec
push
sub
inc
in
aas
notb
push
imul
xchg
push
mov
dec
push
cmc
out
pop
cmp
adc
jnp
dec
sti
adc
mov
mov
lods
jge
stos
cmpsb
ret
pop
sbbb
add
test
sbb
xchg
pop
fisubrl
pop
pushf
xlat
cmpb
sti
jne
jnp
jnp
push
sbb
das
and
pop
add
mov
enter
inc
orb
jp
aam
mov
xchg
ficomps
cmp
addr16
mov
jae
cmp
jb
cwtl
inc
pusha
push
jmp
imul
mov
into
in
or
insl
fisubrs
push
fs
lds
pop
jbe
adc
or
loopne
or
into
orb
jl
hlt
ja
inc
mov
and
pop
inc
ficoms
das
dec
mov
pop
inc
mov
push
les
mov
stos
mov
pushf
jl
cltd
shlb
jle
jg
repz
pop
pusha
inc
or
lcall
pop
push
adcl
lret
in
or
pop
sahf
push
testb
cwtl
pushf
xor
ret
mov
dec
pop
fidivl
xchg
xor
inc
imul
gs
mov
scas
out
mov
ret
sti
jg
fcoml
lods
sub
repz
mov
loopne
add
push
add
mov
fnsave
jbe
incb
push
push
adc
pop
mov
sahf
adc
mov
jno
outsl
ror
or
jnp
outsl
sarl
repnz
ret
mov
test
iret
cmp
call
in
decb
adc
std
inc
data16
xor
enter
addr16
mov
xor
aaa
xchg
fucomp
or
imul
and
xchg
dec
test
push
jbe
int
fdivs
pop
das
clc
push
cltd
lahf
jae
and
aad
mov
int3
add
es
idivb
les
jl
outsl
cmpb
dec
push
lcall
mov
jmp
test
stc
ja
testb
xlat
pop
or
rcrb
and
std
stc
loope
dec
dec
push
imul
or
inc
jecxz
movsb
jg
xchg
rcl
lods
daa
rcrl
enter
das
or
dec
nop
imul
adc
and
enter
adc
lods
popf
repnz
sbb
pop
xchg
stos
jle
ficoml
divl
inc
dec
aaa
mov
sub
or
int
out
mov
and
jg
fstps
hlt
add
mull
ficomps
add
in
pop
out
push
in
test
div
rcr
jl
mov
daa
popf
fisttps
jge
xchg
add
pop
scas
mov
xor
inc
out
lret
push
add
cmpsb
mov
stc
xlat
pop
push
jb
cmp
lret
dec
xchg
dec
xor
inc
mov
ljmp
push
jecxz
clc
mov
pop
and
xor
int
xlat
scas
xchg
pop
scas
lret
mov
ret
adc
shll
jge
dec
mov
aad
pop
and
inc
or
jmp
lea
xchg
push
pop
sbb
xor
and
or
scas
add
cmpsb
inc
jecxz
loopne
add
outsb
cmp
sub
cltd
jbe
in
and
adc
xchg
sub
imull
cwtl
fsts
dec
lret
lods
xchg
jl
add
shll
xchg
pop
stos
dec
sub
push
lahf
xchg
and
and
add
rcll
sub
mov
int3
or
pop
inc
mov
inc
fnstsw
xor
fucom
push
xor
popf
stos
addr16
rclb
popf
add
dec
push
hlt
or
icebp
orl
jle
xor
inc
mov
scas
inc
rcl
sahf
lods
imul
stc
scas
ja
dec
or
and
addr16
sbb
scas
aam
jbe
and
sbb
je
mov
jl
lcall
xchg
mov
xor
jl
add
enter
iret
pop
bound
jg
and
mov
jg
icebp
xor
adcb
pop
add
cld
gs
xchg
adc
or
push
ret
clc
mov
inc
push
sub
clc
jne
sbbb
lret
mov
clc
js
cwtl
push
sub
mov
and
into
lahf
sub
pop
xor
gs
outsl
mov
lcall
addl
jge
or
mov
cmp
ret
stos
jle
in
lret
xor
outsb
sbb
adc
ret
mov
dec
jg
xor
in
dec
jnp
fisubrl
dec
lods
add
test
or
cmpsb
add
test
fidivl
jp
shlb
add
icebp
adc
imul
add
punpckhwd
add
push
adc
scas
adc
pop
scas
sbb
pop
scas
and
sub
inc
add
scas
popa
add
scas
addl
jecxz
add
add
add
scas
add
scas
add
scas
add
scas
lsl
scas
lsl
scas
adc
adc
xor
adc
xor
adc
cmp
adc
scas
adc
adc
scas
push
add
scas
dec
add
scas
incl
add
add
pop
scas
pop
add
cmpsb
addr16
sub
addr16
add
callw
push
call
adc
push
call
add
flds
mov
fildl
popf
addr16
add
pushf
addr16
add
testl
mov
rolb
mov
roll
movsl
add
movsb
addr16
add
sub
outsl
addr16
lcall
cmp
cltd
popa
cmp
xchg
gs
xchg
popa
sbb
mov
andb
xchg
xchg
jne
fistpll
add
mov
enter
inc
or
lods
addr16
add
add
lods
addr16
sub
test
out
call
cs
std
scas
insb
inc
movsb
outsl
jmp
insb
scas
addr16
pushf
out
imul
cmp
lods
pop
xor
pop
mov
and
sub
jg
mov
add
jbe
pop
push
add
outsl
jo
sbb
add
push
pop
add
add
data16
add
sti
add
mov
aas
add
sarb
add
or
lret
add
movsl
xchg
fisubl
fidivl
adc
sub
pop
jecxz
lcall
fldt
lea
jb
aaa
sub
pop
fistpll
imul
jne
fldl
mov
jg
mov
add
in
mov
jae
dec
popf
arpl
sbb
insb
xchg
mov
rorb
daa
lea
jmp
cld
cltd
jg
adc
cli
inc
lods
push
insl
ret
mov
jecxz
insb
leave
add
sbb
jo
inc
jae
arpl
sahf
ja
mov
stos
jecxz
inc
arpl
cmp
and
dec
sbb
inc
mov
pop
sahf
dec
ret
or
cmp
add
je
ss
lods
nop
jns
add
addr16
cmp
dec
dec
cmp
dec
push
cmp
testb
push
movl
cmpsb
ss
daa
movsb
add
jecxz
lea
dec
xchg
cmp
dec
in
cmp
dec
aad
mov
int
fwait
iret
xor
lahf
adc
mov
repz
call
pop
lahf
lcall
cmp
pop
push
jne
inc
push
sub
cmp
and
scas
pop
and
and
push
sarb
xchg
pop
mov
sub
cmp
in
cmp
mov
insl
fstpt
push
inc
clc
lcall
xchg
in
and
cmc
jl
mov
sub
cmp
cmp
xchg
pop
cmp
add
cmp
mov
dec
cmp
cmp
lret
enter
ss
int
and
mov
rcrl
jne
lret
cmp
mov
cmp
movsl
or
add
sbb
rcrb
je
mov
xchg
mov
pop
hlt
pushf
sub
dec
insb
cmp
dec
jl
mov
cmp
dec
pushf
cmp
cmp
cmp
jge
adc
push
adc
add
rorl
in
das
fsubrs
xor
cmp
cli
push
cmp
or
cmp
jp
adc
jle
in
sti
lcall
in
push
pop
jnp
clc
inc
movsb
cmp
scas
pop
aaa
in
mov
cli
xor
xchg
dec
xor
lock
mov
pop
clc
mov
mov
or
xor
sbb
pop
xor
mov
cmp
stc
cwtl
adc
dec
in
fbstp
insl
pop
jns
sub
xchg
stc
out
mov
jg
xor
fistps
xor
fistpll
push
shrb
push
adc
xorb
add
push
xchg
les
xchg
xor
push
insl
xor
push
push
xor
push
dec
xor
push
xor
popa
pop
push
xor
add
jmp
out
shll
jb
scas
ret
rcrl
xor
arpl
mov
ss
popf
nop
adc
cmp
inc
sbb
xchg
hlt
or
push
mov
ss
push
push
ss
push
in
mov
adc
sub
test
dec
adc
pop
xorl
push
mov
push
sub
dec
js
xor
jns
xor
insl
and
sbb
subl
add
out
jge
mov
sub
add
jnp
adc
push
sahf
mov
rorb
je
jl
outsl
adc
xor
or
orb
bound
xor
orb
shl
les
and
lea
jge
pop
dec
sub
pop
repnz
lods
xor
add
xor
add
push
in
lock
rcrl
out
test
pop
daa
sti
bound
inc
add
dec
insb
ss
ss
dec
mov
bound
ss
lahf
fidivl
adc
inc
outsb
jmp
mov
imul
fdivp
fistl
cmp
pop
cmp
adc
cmp
mov
aad
mov
mov
mov
pop
cli
outsl
dec
ja
sbb
xchg
sbb
hlt
sub
out
sub
xlat
ljmp
movb
pop
sbb
scas
aas
and
mov
xchg
jecxz
push
xchg
mov
add
es
je
xchg
aaa
aas
add
sbb
xchg
pop
enter
mov
pop
lds
int3
in
push
add
inc
add
outsb
cmpsl
lock
cmc
sub
mov
mov
cmp
xchg
call
or
ljmp
leave
popf
bound
xchg
push
push
sahf
out
mov
hlt
push
mov
sbb
and
sbb
hlt
mov
lcall
fcmovne
mov
lds
fimull
stc
lahf
add
push
add
and
inc
mov
test
add
cmp
jno
bound
adc
fdivrl
jb
pop
mov
jecxz
into
jnp
sbb
imul
sub
aas
into
xchg
xor
mov
aam
jecxz
mov
mov
and
xchg
out
mov
pop
es
xchg
xchg
cld
mov
rorl
clc
mov
loop
jnp
clc
adc
xor
xchg
mov
pop
sbb
adc
sbb
mov
addb
add
mov
insb
mov
inc
outsl
cwtl
pop
mov
outsb
adc
push
jge
pop
sbb
xchg
push
enter
cmp
cmp
mov
inc
add
xchg
lock
sbb
xchg
pop
in
cmc
dec
sbb
mov
add
ret
ljmp
mov
inc
das
clc
xorl
mov
mov
jecxz
xor
push
icebp
out
fldl
xor
adc
add
adc
add
adc
add
push
add
scas
push
add
scas
push
and
int3
push
rorb
add
aam
push
cs
xor
add
sub
scas
push
add
scas
push
loop
int3
ljmp
aam
jle
jno
jp
jne
xchg
jns
push
add
scas
jecxz
mov
fldt
mov
insl
mov
repz
cmp
jne
addr16
addr16
addr16
add
addr16
add
scas
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
jmp
lods
addr16
add
add
push
add
xchg
jle
add
jbe
add
outsb
adc
jmp
add
pop
add
call
add
dec
adc
incl
add
ds
jmp
scas
imul
push
les
call
push
outsb
or
inc
jb
push
aam
inc
add
test
out
xchg
add
out
add
fiadds
test
call
adc
faddl
jb
add
cmp
lcall
mov
decl
mov
cmp
add
data16
data16
data16
data16
xchg
data16
xchg
data16
xchg
add
data16
xchg
data16
xchg
add
data16
push
data16
inc
data16
add
add
push
data16
push
data16
inc
data16
inc
data16
push
data16
push
data16
push
data16
scas
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
push
add
scas
push
add
scas
push
add
add
lar
scas
lar
scas
lar
scas
lar
scas
lar
scas
lar
scas
lar
scas
lar
scas
lar
scas
lar
scas
lar
scas
lar
scas
addr16
add
callw
callw
callw
callw
callw
callw
callw
addr16
add
scas
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
add
add
lods
addr16
lods
addr16
lods
addr16
lods
add
mov
add
mov
add
aas
add
xchg
aas
add
mov
add
xchg
add
add
xchg
aas
add
aas
add
lods
outsb
add
mov
add
lods
data16
scas
arpl
add
mov
aas
add
imul
adc
add
adc
jb
aas
add
or
add
imul
cmp
add
aas
add
and
dec
adc
add
adc
add
pop
add
adc
add
add
adc
add
push
add
adc
add
or
xchg
adc
add
pop
add
ds
add
aas
add
push
add
aas
add
jmp
or
xchg
add
scas
repnz
scas
mov
aas
scas
fldl
or
testb
scas
xor
aas
scas
sbb
or
jb
pop
scas
je
aas
scas
les
pop
scas
mov
aas
scas
incl
or
add
ds
or
lds
or
pop
add
scas
scas
jmp
or
addr16
jmp
add
addr16
js
add
loopew
call
addr16
add
addr16
add
addr16
add
addr16
call
mov
cwtl
addr16
mov
addr16
out
mov
pushf
addr16
out
and
lds
out
lds
mov
arpl
mov
push
out
addr16
add
add
add
push
cmp
pop
lods
pop
add
push
cmp
mov
push
cmp
cmpsb
lods
push
add
lods
push
add
cmp
cmpsb
add
cmp
mov
cmp
ds
outsb
add
stos
jno
into
cmp
in
lods
cmp
xchg
into
cmp
xchg
stos
gs
into
cmp
and
cmp
movsl
stos
add
lods
arpl
and
pop
add
inc
addr16
jbe
aas
add
arpl
add
aas
add
or
add
add
push
add
add
outsb
add
add
cmp
aas
add
or
add
add
or
add
or
adc
aas
add
or
push
or
add
pop
add
or
add
or
add
or
add
data16
out
aas
add
scas
gs
scas
cwtl
loope
scas
sub
sbb
and
aas
scas
in
pop
scas
add
aas
scas
sahf
add
scas
or
aas
scas
and
cmp
scas
jg
add
scas
sub
das
scas
pushf
loop
scas
addl
scas
loopne
scas
pop
add
scas
int3
loopne
scas
stos
add
scas
in
loopne
scas
adc
push
scas
fsub
aas
scas
mov
add
aas
scas
push
add
scas
out
aas
scas
add
scas
mov
aas
scas
addr16
addr16
sub
pop
add
addr16
add
addr16
sub
out
add
addr16
mov
lea
mov
xchg
sub
jl
mov
imul
addr16
add
roll
mov
test
flds
add
addr16
stos
loopew
outsl
addr16
add
addr16
subb
add
addr16
lods
mov
add
add
cmpsl
add
lods
dec
add
sub
add
sub
add
sub
add
lods
outsb
add
add
add
sub
add
mov
add
sub
add
sub
add
sub
add
popa
add
lods
inc
add
sub
add
add
out
aas
add
fistpll
add
out
aas
add
push
out
aas
add
add
aas
add
out
aas
add
fistpll
add
fistpll
add
push
add
fistpll
add
push
add
aas
add
imul
adc
aas
add
das
add
aas
add
imul
fistpll
add
loopne
add
sbb
inc
scas
daa
add
dec
mov
scas
mov
pop
scas
mov
xchg
add
adc
inc
scas
cmp
or
aaa
add
jo
inc
scas
xchg
add
js
inc
scas
and
mov
pusha
add
scas
xor
push
scas
insb
mov
cmpsl
add
cld
xchg
stc
add
scas
or
inc
scas
push
add
scas
clc
test
jl
xor
xchg
add
add
test
mov
and
mov
mov
test
popa
xchg
addr16
add
addr16
xchg
addr16
add
addr16
movsl
add
addr16
add
xor
push
add
sbb
mov
mov
inc
xchg
addr16
add
add
mov
test
pusha
add
addr16
test
outsl
addr16
mov
jmp
add
fldl
scas
add
add
add
xor
add
xor
add
lods
bound
sbb
cmpsl
add
lods
popa
add
xor
add
xor
add
xor
add
cmpsl
add
lods
pop
add
cmpsl
add
add
add
xor
add
lods
pusha
add
sub
add
stos
arpl
jmp
stos
push
add
xor
add
imul
mov
aas
add
imul
mov
imul
jle
aas
add
jecxz
add
adc
stos
jecxz
add
insb
adc
push
in
add
in
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
sbb
or
aas
add
imul
jecxz
add
imul
or
add
aas
add
jo
inc
scas
fwait
add
scas
mov
scas
sub
scas
add
inc
add
and
inc
scas
fildl
adc
scas
add
pop
mov
inc
add
scas
adc
sbb
scas
les
and
add
pop
lea
push
add
scas
xor
or
cmp
cmp
das
add
scas
addr16
add
addr16
add
mov
imul
addr16
addr16
addr16
add
addr16
mov
lea
stos
addr16
xchg
addr16
add
roll
and
addr16
out
loopnew
mov
sbb
movsb
roll
xlat
add
popl
mov
imul
add
mov
mov
add
lods
arpl
and
lods
pop
add
mov
add
lods
push
add
lods
pop
add
sub
add
sub
add
sub
add
sub
add
lods
push
add
sub
add
cmpsl
add
pop
sub
add
cmpsl
add
lods
pop
add
cmpsl
add
add
cmpsl
add
fbld
outsb
jmp
add
push
add
push
add
push
add
arpl
add
push
add
lret
scas
leave
push
adc
sbb
push
ss
push
dec
cmp
push
aam
push
mov
mov
add
pop
sub
lahf
mov
and
pop
cmpsl
dec
fcoml
push
pop
gs
jmp
add
pop
or
fisubrl
mov
push
mov
scas
leave
insl
movsb
mov
jmp
out
push
lods
js
notb
xor
hlt
leave
sbb
pop
pop
mov
sub
loope
roll
pop
mov
movsl
pushf
mov
xchg
divb
cmp
jne
xor
sbb
call
xor
add
jle
rcrb
andl
xchg
insl
mov
jae
inc
cmp
pushf
inc
adc
jmp
or
and
mov
cmp
add
dec
adc
jle
pop
add
mov
xchg
jp
or
nop
push
mov
sbb
pusha
xor
add
imul
daa
lret
mov
pop
cmc
ja
nop
push
adc
addr16
scas
imul
scas
addr16
add
mov
scas
les
scas
addr16
add
addr16
add
scas
addr16
add
imul
scas
add
add
lods
addr16
lods
add
mov
add
addr16
lods
add
stos
add
mov
add
lods
addr16
scas
addr16
lods
addr16
scas
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
mov
push
mov
add
into
data16
test
add
test
add
test
in
decb
cmpsb
add
pop
in
decb
cmpsb
add
inc
inc
add
sbb
stc
jmp
stc
inc
add
inc
add
jge
inc
add
inc
add
insl
arpl
sbb
pushl
add
insl
arpl
cli
repnz
push
icebp
inc
add
inc
add
sub
inc
add
sbb
push
add
sub
inc
add
add
inc
add
inc
add
add
inc
add
add
in
inc
add
add
cmp
jmp
add
or
inc
scas
or
inc
scas
push
add
div
lcall
pop
cmc
inc
scas
push
hlt
decl
pop
cmc
inc
scas
adc
cmc
inc
scas
fs
call
scas
repz
fcomps
hlt
inc
scas
add
dec
push
hlt
inc
scas
adc
inc
scas
and
inc
scas
pop
and
inc
scas
push
and
inc
scas
sbb
add
addr16
hlt
out
addr16
pop
ljmp
dec
ljmp
cmp
dec
hlt
out
shll
scas
addr16
add
shlb
insl
shll
scas
addr16
add
ret
addr16
add
adc
add
add
scas
addb
addr16
es
addr16
add
push
es
addb
fldenv
scas
addr16
add
fsubs
scas
addr16
add
addr16
add
add
add
movsl
add
scas
movsl
add
add
movsl
add
cmp
cmpsl
add
cmp
cmpsl
add
sbb
cmpsl
add
sbb
cmpsl
add
std
call
add
cld
cmpsb
add
frstor
dec
frstor
dec
mov
call
add
shll
push
scas
movsl
add
shll
inc
scas
movsl
add
add
inc
add
frstor
add
inc
add
in
addr16
add
inc
add
cmp
inc
add
sub
inc
add
sbb
inc
add
sub
inc
add
jge
inc
add
add
insl
addr16
add
add
pop
addr16
add
add
insl
addr16
add
call
add
sub
inc
add
add
inc
add
sub
mov
add
out
add
sub
inc
scas
andb
scas
cmp
inc
scas
andl
inc
scas
and
add
and
add
push
and
scas
stc
incb
add
incb
test
add
pop
and
scas
sub
inc
scas
or
add
scas
stc
and
scas
sub
inc
scas
sub
add
fwait
and
scas
jmp
and
scas
stc
std
inc
scas
jge
add
or
scas
addr16
out
or
scas
addr16
out
or
scas
addr16
out
or
scas
addr16
out
addr16
scas
addr16
out
addr16
and
addr16
and
addr16
and
scas
addr16
addr16
and
andb
addr16
outsb
addr16
and
andb
addr16
outsb
addr16
and
addr16
and
addr16
and
add
push
add
mov
daa
add
mov
daa
add
lahf
add
daa
add
lahf
add
push
add
mov
xchg
pop
daa
add
mov
orb
mov
cmp
add
sub
add
sbb
add
cld
add
cld
add
in
or
add
in
lret
frstor
add
dec
mov
mov
add
mov
add
push
jle
add
jecxz
add
jle
add
jecxz
add
adc
fucom
inc
add
jecxz
add
jge
add
jge
add
jge
add
jge
add
jge
add
inc
add
jecxz
add
add
inc
add
jecxz
add
adc
add
dec
adc
scas
jmp
adc
scas
stc
cli
inc
scas
dec
adc
scas
in
inc
scas
pusha
add
pop
add
ds
cmp
sti
inc
scas
fs
arpl
add
inc
add
inc
add
call
sti
inc
add
and
add
xor
sti
inc
scas
test
scas
addr16
cli
outsb
addr16
scas
addr16
addr16
outsb
addr16
and
out
addr16
and
out
addr16
and
out
addr16
and
out
addr16
and
out
lea
xchg
cli
out
mov
add
addr16
hlt
cmp
dec
hlt
out
addr16
sub
dec
hlt
outsb
addr16
and
outsb
addr16
and
outsb
addr16
and
outsb
add
push
add
daa
add
daa
add
mov
add
cmpsb
daa
add
data16
daa
add
data16
xchg
add
shll
push
jbe
add
xchg
data16
daa
add
push
daa
add
daa
add
data16
shll
andb
add
loope
or
add
loopne
or
add
insb
jp
add
inc
add
fiadds
adc
inc
add
mov
add
xor
inc
add
mov
add
mov
add
filds
push
mov
add
filds
inc
mov
add
filds
adc
filds
mov
add
jnp
add
jnp
add
mov
add
mov
add
inc
add
and
and
clc
inc
scas
test
inc
scas
sbb
add
or
add
sbb
add
add
testb
cmc
call
pop
and
scas
sub
inc
scas
add
add
add
add
pushf
and
scas
stc
testb
and
scas
jmp
and
scas
stc
testb
jge
add
addr16
and
xor
scas
addr16
imull
and
scas
addr16
imull
adc
scas
addr16
imull
lds
scas
addr16
imulb
mov
scas
addr16
cmpsl
and
addr16
and
mov
scas
addr16
imul
mov
scas
addr16
imul
mov
scas
addr16
imul
mov
add
addr16
and
addr16
and
addr16
and
add
push
add
into
push
add
into
push
add
into
push
add
mov
inc
loope
add
lea
xchg
ret
les
daa
add
lea
xchg
mov
data16
cltd
pushf
mov
cwtl
int
add
daa
add
data16
daa
add
data16
daa
add
data16
lea
addb
add
add
cmp
mov
add
mov
add
inc
add
rolb
lods
mov
add
inc
add
xchg
add
inc
add
lret
add
xchg
add
xchg
add
fsin
jmp
add
push
add
ja
add
xchg
add
push
add
inc
push
add
scas
into
add
scas
fistps
add
mov
add
scas
mov
add
add
iret
add
scas
rolb
add
rolb
add
rolb
add
rolb
add
rolb
add
into
add
scas
iret
add
scas
into
add
scas
iret
add
scas
into
add
scas
int3
push
add
ret
push
add
int3
push
add
ret
push
add
int3
push
add
ret
push
add
addr16
pop
mov
in
add
arpl
pop
stos
arpl
pop
mov
in
stos
arpl
pop
mov
in
stos
arpl
pop
mov
in
stos
arpl
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
scas
addr16
adc
addr16
adc
addr16
push
add
and
add
push
sbbb
xchg
mov
add
add
mov
and
add
and
add
and
add
and
add
rcr
incb
hlt
mov
and
add
popf
add
add
xchg
push
add
xchg
std
jbe
add
in
jbe
add
lcall
ret
ljmp
sar
cmp
jne
add
jbe
add
inc
add
ret
insl
jbe
add
iret
ret
jge
inc
add
ret
insl
jbe
add
js
add
ret
sub
sar
cmp
jne
add
je
add
ja
add
and
in
scas
xor
in
scas
and
out
scas
cmc
cmovb
in
inc
scas
imul
add
cmc
cmovb
sub
inc
scas
test
adc
cmpsb
in
scas
and
in
scas
xor
in
scas
and
loop
scas
cmc
push
inc
scas
push
inc
scas
jnp
jmp
outsb
adc
inc
scas
addr16
adc
addr16
paddsw
loope
addr16
paddsw
loope
addr16
verw
addr16
paddsw
loop
addr16
paddsw
loop
xlat
orl
and
xchg
call
scas
addr16
adc
ficoms
scas
addr16
addr16
scas
addr16
addr16
addr16
addr16
scas
addr16
addr16
scas
addr16
push
insl
addr16
push
in
addr16
mov
addr16
add
sub
out
add
sub
sub
sub
sub
sub
sub
sub
stos
fwait
add
add
mov
add
add
mov
add
sub
mov
mov
add
sub
mov
add
add
add
mov
js
add
js
add
js
add
bound
mov
add
in
bound
js
add
bound
mov
add
in
bound
add
arpl
bnd
add
jp
add
jp
add
inc
jp
add
inc
add
jp
add
inc
add
jp
add
inc
add
add
insl
bound
insl
js
add
lcall
scas
mov
add
jl
add
sub
or
scas
pop
adc
scas
sub
scas
pop
adc
scas
cmp
scas
pusha
loop
scas
sub
scas
mov
stc
or
mov
adc
mov
adc
movsb
adc
scas
pop
adc
in
add
out
call
test
inc
scas
call
or
scas
addr16
imull
addr16
adc
in
addr16
adc
in
addr16
adc
in
addr16
adc
add
addr16
mov
addr16
in
addr16
adc
addr16
in
addr16
adc
addr16
test
xor
in
addr16
in
addr16
in
addr16
in
addr16
in
addr16
in
addr16
jae
bound
adc
shll
mov
and
bound
mov
and
add
xchg
bound
xchg
pushf
and
add
popa
add
and
add
movsl
and
incb
and
add
adc
xorb
add
adc
xorb
add
and
add
mov
add
pop
int3
jge
inc
add
ljmp
inc
add
pusha
inc
add
lret
sub
lret
cmp
lret
sub
lret
fstpl
add
je
add
pop
inc
add
je
add
pop
inc
add
je
add
pop
inc
add
pop
inc
add
pop
inc
add
jnp
add
cmp
je
add
je
add
inc
add
and
adc
scas
xor
sar
mov
or
in
add
pop
adc
scas
in
inc
scas
dec
adc
scas
cmc
pop
inc
scas
cmp
add
jmp
or
push
out
inc
and
out
incl
mov
or
sbb
jmp
fucomp
call
loop
add
jecxz
add
loopne
add
addr16
adc
addr16
in
iret
inc
or
push
out
ror
push
or
inc
adc
addr16
adc
in
test
scas
addb
addr16
adc
add
xchg
scas
addb
addr16
adc
in
addr16
loop
iret
inc
pop
in
addr16
push
iret
push
pop
in
addr16
inc
iret
inc
pop
in
addr16
addr16
loop
iret
addl
adc
xchg
pop
insl
add
iret
incb
or
sub
push
fmulp
jle
mov
add
into
push
mov
add
add
sub
mov
mov
add
mov
add
sub
ja
into
incb
jg
push
mov
add
mov
add
mov
add
mov
add
fwait
add
add
mov
add
ret
enter
gs
add
fcos
add
sub
or
add
gs
add
gs
add
gs
add
inc
add
jns
adc
jns
adc
lret
sbb
jns
adc
jns
adc
bound
es
in
bound
aaa
lret
frstor
add
in
bound
add
cmp
mov
lcall
ljmp
or
add
scas
insb
adc
scas
and
inc
scas
lea
add
xchg
loop
scas
sub
add
js
add
test
add
adc
add
add
add
hlt
loopne
scas
jmp
loopne
add
fsubp
pxor
add
scas
fnstsw
pxor
add
scas
loopne
pxor
add
scas
addr16
loope
addr16
loope
int3
addl
addr16
loope
lret
addl
addr16
test
inc
add
addr16
mov
addr16
mov
addr16
mov
in
lds
scas
addb
addr16
scas
addr16
add
addr16
adc
in
addr16
adc
in
addr16
adc
in
addr16
scas
mov
in
add
add
and
add
and
add
mov
and
add
lcall
mov
add
add
and
add
and
add
and
add
ret
add
add
mov
and
add
lods
add
and
add
lods
add
push
arpl
add
add
inc
arpl
add
add
adc
arpl
add
add
add
add
adc
add
adc
add
add
add
add
aam
add
lret
add
arpl
add
arpl
add
popa
add
aam
add
bound
add
pop
and
xchg
add
xchg
add
test
test
xchg
fs
add
add
push
add
push
add
scas
and
cwtl
inc
add
dec
lcall
ds
inc
scas
lock
scas
sbb
add
dec
add
scas
dec
mov
dec
add
scas
cmp
scas
push
xchg
inc
scas
sub
xchg
inc
scas
mov
scas
js
inc
scas
mov
scas
pop
xchg
inc
scas
call
mov
jmp
mov
out
add
scas
or
add
arpl
scas
decb
push
add
addr16
add
addr16
scas
addr16
outsl
cmpsl
add
addr16
add
sub
scas
xor
sub
scas
addr16
add
sub
scas
sub
sub
cltd
add
sub
scas
jcxz
in
cmp
pop
dec
xchg
and
aas
xchg
dec
xchg
pop
add
xor
pop
out
adc
mov
xor
sub
loope
wrmsr
jl
cwtl
dec
push
mov
xor
sbb
jl
lods
add
xchg
push
test
mov
push
fwait
add
mov
dec
sub
xor
cli
das
push
jg
mov
sbb
mov
xor
adc
clc
mov
dec
xor
push
aas
xor
add
out
xor
xchg
push
popf
push
test
xor
push
or
push
test
xor
add
dec
in
ss
push
push
add
decl
pop
push
add
push
add
push
add
imul
adc
pop
push
ret
or
or
pop
adc
loop
push
pop
fidivs
sbb
push
push
pop
test
and
into
and
out
mov
sub
mov
xor
scas
push
jmp
les
cmp
or
cmpsl
or
fwait
imul
rcrb
jno
pop
mov
fcoms
jns
xchg
iret
pop
loopne
mov
gs
xchg
ret
nop
sahf
mov
pushf
lcall
test
addl
inc
jnp
xor
jg
xor
xchg
xchg
cmp
xchg
xchg
cmp
mov
and
arpl
or
pop
stos
push
sbbb
addr16
jb
pop
clc
xchg
jbe
cld
nop
push
add
inc
insl
test
inc
imul
push
jge
mov
jns
mov
mov
mov
dec
enter
int3
sbbb
sarb
aam
xor
mov
dec
cs
call
push
test
jo
mov
stc
adc
mov
pusha
in
push
mov
mov
out
mov
roll
das
sbb
jge
adc
test
sub
arpl
dec
addr16
dec
push
imul
cmp
push
cmp
pop
sub
jb
inc
and
push
dec
sbb
add
push
mov
sbb
mov
sti
and
push
inc
jg
xor
andb
xchg
in
mov
icebp
mov
xchg
jne
ficoml
insl
ss
add
mov
cmpsl
out
and
stos
loop
scas
scas
cmp
mov
push
mov
mov
dec
daa
mov
or
inc
jg
iret
push
sbb
rcrl
pop
xlat
xor
fildl
adc
es
jecxz
xchg
out
arpl
jmp
pop
out
out
jbe
bnd
div
pop
xchg
cli
sti
jb
incl
sar
incl
data16
add
add
add
add
scas
rolb
add
rolb
add
cmp
add
into
add
scas
into
add
scas
into
add
scas
into
add
add
into
add
lods
into
add
scas
into
add
scas
into
add
scas
into
add
scas
into
add
scas
into
add
scas
into
add
scas
into
add
scas
cmp
ljmp
into
add
scas
into
add
scas
into
add
scas
into
add
scas
into
add
scas
into
add
scas
into
add
scas
nop
sub
mov
jmp
add
addr16
add
scas
addr16
sub
push
jmp
add
addr16
sub
mov
pusha
shrb
scas
addr16
add
addr16
sub
shlb
shrb
inc
jmp
add
addr16
add
scas
ret
jmp
lods
addr16
call
lods
addr16
lods
addr16
lods
addr16
lods
add
jmp
lods
addr16
lods
addr16
addr16
lods
addr16
lods
addr16
lods
add
addr16
lods
addr16
stos
push
add
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
add
add
sub
jg
lods
out
add
pop
sbb
mov
sbb
test
add
lods
addb
jno
sbb
jo
adc
adc
hlt
pop
adc
aam
adc
les
adc
pop
adc
jo
sbb
adc
je
adc
xchg
pop
adc
test
adc
add
xchg
add
add
push
push
add
inc
push
add
add
push
push
add
add
inc
push
add
add
push
push
add
push
add
push
add
push
add
push
add
rolb
add
rolb
add
rolb
add
rolb
add
rolb
add
into
add
scas
into
add
scas
into
add
add
into
add
scas
into
add
scas
into
add
scas
sub
inc
scas
sub
scas
xor
scas
stos
addr16
scas
insl
mov
jb
push
imul
scas
jb
mov
jno
mov
mov
scas
jge
shrl
mov
lahf
xchg
stos
mov
inc
mov
outsb
dec
mov
mov
dec
mov
add
lods
ret
scas
lahf
inc
aaa
movsl
lcall
mov
scas
cmpsb
lahf
pop
cmp
lahf
cld
cs
mov
or
cmp
fwait
out
jmp
mov
fsubrl
adc
roll
xchg
int
or
add
aaa
sbb
inc
inc
addr16
dec
push
fnstsw
inc
popa
int3
add
sbb
gs
mov
loope
ljmp
daa
add
movsl
daa
add
add
daa
add
lods
add
add
fisubs
add
add
lcall
xor
daa
add
mov
daa
add
mov
add
jbe
inc
cmp
es
add
fidivs
add
mov
push
push
push
add
inc
add
push
xchg
dec
dec
dec
mov
push
dec
and
aas
inc
or
add
data16
adc
add
adc
add
push
xchg
push
inc
xchg
add
hlt
dec
push
fsubrs
add
mov
push
inc
sahf
arpl
add
mov
push
test
dec
dec
xchg
stos
incl
mov
inc
insb
pop
int
jbe
mov
inc
insb
test
push
arpl
add
scas
or
push
jo
add
scas
fucomi
push
jb
mov
ja
add
scas
add
push
data16
pop
or
add
scas
repz
add
les
ret
push
in
push
add
scas
jle
push
call
sub
movsl
jae
adc
outsb
xlat
ja
sarb
int3
addr16
add
xor
pushf
mov
stos
sbb
cli
test
xchg
inc
into
cmpsl
xchg
add
xor
addr16
dec
ret
addr16
aaa
aam
push
dec
xchg
cmpsb
mov
xor
add
push
lea
push
push
push
add
push
dec
add
push
lcall
add
daa
add
mov
add
daa
add
daa
add
lods
addr16
lods
addr16
add
add
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
test
xor
lods
add
outsl
lods
fldt
stos
into
and
addr16
mov
adc
lods
add
hlt
cmpsb
cmp
or
jge
cld
mov
xchg
cld
fmuls
add
flds
add
dec
lret
dec
int
addr16
shll
jae
sub
mov
movsb
adc
stc
pop
push
mov
cmp
xchg
shll
test
popa
imul
ffree
cmp
test
dec
add
push
xchg
dec
push
push
add
sbb
cwtl
pop
push
mov
lock
sbb
add
or
pop
ror
push
add
or
sub
add
scas
inc
ss
adc
add
scas
pushl
shrb
inc
pop
incl
cld
sbb
add
cmp
loop
xor
in
add
scas
addr16
push
xchg
sar
mov
daa
sbb
frstor
das
scas
in
stos
cld
mov
aaa
inc
xchg
daa
xor
add
test
sub
mov
in
xchg
push
mov
inc
add
push
mov
ljmp
push
out
ret
add
addr16
mov
shl
loop
lcall
or
scas
addr16
jge
addr16
jge
and
mov
movb
popf
xor
stc
leave
dec
add
addr16
cmpsl
cmp
and
lods
gs
sbb
addr16
mov
push
adc
adc
jmp
enter
xchg
add
add
lods
add
xor
cmpsl
pop
add
pushf
test
add
and
jmp
outsl
push
dec
aas
and
imul
dec
sbb
push
mov
ret
insl
mov
dec
add
pop
fstps
adc
jge
outsl
xor
xchg
xchg
dec
call
test
inc
add
adc
mov
sahf
mov
add
insl
push
or
arpl
mov
outsl
faddl
adc
cmp
das
lahf
and
xchg
fwait
loopne
mov
mov
push
push
sbb
sbb
add
iret
jge
rolb
push
or
cmpsb
jno
push
add
cmpsb
add
inc
iret
outsb
jnp
jecxz
popw
or
push
lahf
ljmp
pop
pop
or
imul
leave
ret
pushl
stos
aad
add
leave
in
shr
cmc
ds
add
scas
xor
ljmp
pop
add
add
scas
ret
frstor
popf
pop
mov
fidivrl
test
xlat
push
scas
sbb
xchg
sub
mov
xor
jo
mov
loop
mov
and
xchg
cmpsb
push
cmp
fcoms
out
xchg
imul
jle
repnz
mov
scas
cmp
dec
xchg
leave
pushl
scas
addr16
xorb
pop
test
iret
cmp
aad
imul
jns
sbb
call
fisttpll
mov
ljmp
add
add
fwait
mov
cmp
mov
mov
add
xchg
aad
imul
loop
jne
add
and
xchg
pop
sti
loopne
jbe
or
dec
xor
loope
mov
popf
and
pop
xor
pop
adc
mov
dec
and
lods
add
iret
into
cwtl
les
lds
fcmovnb
test
cmpsl
lds
push
xchg
test
mov
out
sti
xchg
sarb
loop
lods
add
ret
cmpsb
loope
adc
insl
aas
lods
loope
ds
adc
in
pop
add
add
cmc
push
push
mov
jbe
repnz
pop
jnp
add
or
jbe
xchg
pop
jbe
aam
jb
ss
pop
es
dec
push
add
pop
addps
jmp
ds
sahf
out
add
fisubrl
add
push
imul
aaa
add
dec
cmp
push
imul
cwtl
sub
mov
test
les
fsubrl
into
fidivl
sub
add
rolb
scas
or
cld
xor
mov
cmp
add
sbb
xchg
inc
xor
mov
sbb
jnp
insl
repz
cmp
sbb
les
add
scas
xchg
push
hlt
dec
movsl
es
dec
shll
scas
leave
or
scas
cs
add
rolb
scas
ljmp
scas
out
xor
fldln2
clc
add
scas
sbb
ss
sti
add
addr16
pop
sub
jne
loope
jnp
insb
mov
aam
add
addr16
jns
fucomp
add
and
add
ljmp
div
jns
add
addr16
pushf
pop
call
cld
pushf
sbb
shll
out
mov
jmp
inc
jb
movsl
imul
add
xchg
mov
cmp
or
pop
ret
insb
sbb
sbb
sbb
push
xor
push
mov
push
adc
xor
inc
mov
or
lds
cmp
sub
and
rcll
addr16
iret
jae
lahf
cmp
jae
pop
cmp
shrb
pop
fisubrl
push
fwait
jbe
or
xor
sbb
add
add
arpl
push
das
test
or
pop
push
dec
xor
outsb
push
dec
adc
inc
imul
dec
xchg
clc
pop
test
hlt
add
add
cli
insb
ja
add
les
addr16
call
ljmp
fisubrl
sbb
xor
mov
add
dec
add
sbb
cmp
jge
idivb
push
xchg
add
popf
mov
outsl
mov
ret
add
fists
or
xchg
mov
jne
popf
mov
inc
mov
mov
or
push
int
cmc
add
scas
push
mov
aaa
cmp
scas
push
sbb
inc
sub
add
pop
lcall
addr16
add
rolb
scas
lock
mov
add
scas
rolb
scas
cwtl
in
or
xor
xor
push
sarl
mov
and
mov
data16
jbe
or
mov
jp
xchg
in
sbb
addr16
dec
cld
cli
mov
adc
std
add
cmp
pop
imul
sub
lods
xchg
gs
fistpl
push
scas
add
pop
pop
or
jns
imul
dec
dec
repz
dec
dec
push
insl
sub
pop
rcrb
sbb
adc
leave
call
aaa
je
mov
jb
mov
scas
addr16
push
pop
add
jle
scas
add
lock
cmc
and
lret
sbb
inc
sbb
lods
addr16
stos
and
jmp
arpl
in
out
test
jecxz
pop
add
lock
adc
jns
fisubl
ss
int
subps
call
dec
xor
mov
ret
insl
push
pop
mov
pop
or
insb
adc
dec
stos
add
inc
lods
cmp
in
and
xor
stc
push
ds
pop
or
inc
sbb
add
aad
jp
lds
loope
push
jo
cmp
sahf
sub
xchg
inc
jl
nop
jle
xchg
push
outsl
loop
push
xor
orl
stc
test
ds
stos
cld
xor
movsl
mov
sub
mov
stos
mov
out
int3
in
pop
adc
push
rcll
sbb
mov
js
rol
xchg
es
dec
jae
call
scas
mov
loope
lret
es
mov
jmp
and
inc
mov
icebp
adc
pop
cmpsl
punpckhwd
pop
mov
xchg
add
scas
stos
push
add
xchg
cwtl
std
sbb
jnp
pop
adc
xchg
sbb
scas
js
pop
cmpb
jl
leave
and
jb
pusha
sbb
adc
adcb
adcl
mov
lods
mov
cld
jbe
and
push
imul
push
popf
sbb
lods
inc
insl
jmp
subl
cmpsb
jge
cld
test
rcrb
add
add
cmp
scas
adcl
sbb
xchg
mov
fcmovnb
xchg
add
jno
in
cmpsl
xchg
int
jl
out
rolb
out
mov
sub
fcmovnu
push
in
pop
rolb
scas
addr16
stos
repnz
movsb
sti
cmc
xor
sti
movsl
test
ret
fildl
lea
lds
ljmp
mov
rolb
movsb
rorb
in
popf
ljmp
rorl
xchg
push
addr16
movsb
movsl
stos
add
mov
inc
nop
ret
test
shlb
mov
repnz
lret
push
loopne
xchg
cmp
lods
movsl
xchg
idivl
add
mov
cli
jmp
addb
daa
jb
push
aaa
push
push
dec
inc
mov
ds
idiv
push
pop
mov
inc
push
test
js
jg
inc
dec
mov
into
push
dec
int3
enter
leave
jns
movsb
test
jno
hlt
data16
clc
and
stos
cld
je
mov
jl
int
outsb
leave
rclb
add
add
divb
add
outsl
jae
repnz
add
fcoms
scas
mov
stc
arpl
add
inc
push
add
lret
xchg
sbb
pop
lock
dec
jmp
push
ret
aas
mov
pushl
pop
stos
inc
jae
add
scas
jg
push
adcl
es
std
call
push
aad
in
sbb
rcrl
std
fisubs
pop
out
sarb
dec
outsl
loope
pop
lods
mov
bound
cmpsb
add
scas
out
xchg
inc
cmp
jbe
pop
ja
ljmp
sub
call
dec
cmp
fisttpl
cmp
popa
jo
stc
push
fs
mov
rep
xchg
scas
addr16
inc
outsb
mov
and
addr16
jb
and
inc
cs
scas
addr16
jb
sub
lock
pop
dec
sbb
jne,pn
fcoml
add
mov
sarb
enter
or
jno
pop
pop
and
lods
push
cs
add
jle
in
jns
iret
mov
push
adc
shlb
das
iret
lcall
pop
jb
sti
inc
jne
sbb
scas
imul
imul
fcompl
mov
lret
mov
mov
pop
mov
pushl
dec
cmp
cmp
inc
loop
test
adc
pop
jmp
xchg
cld
push
movsl
mov
loope
jb
imul
add
jle
into
loope
clc
repnz
mov
mov
clc
add
adc
xchg
in
xchg
sahf
pop
mov
int
test
lds
leave
sub
add
fdivrs
lods
sub
sub
add
jl
cmpsl
mov
je
stc
push
add
cmpsb
fimuls
lcall
inc
arpl
add
mov
sbb
mov
sbb
add
or
test
jbe
inc
or
add
sub
jle
inc
into
push
fdivrs
pop
cwtl
pop
out
icebp
movsb
jbe
call
ret
push
lods
inc
in
jmp
xlat
popa
stos
add
xchg
cltd
mov
pop
add
cmp
mov
adc
out
push
add
cmp
pusha
icebp
sub
fildl
iret
xlat
pop
pop
clc
loope
adc
adc
pusha
cmp
mov
jb
sub
jp
je
cmp
add
addr16
pop
outsl
mov
or
lcall
stc
sub
leave
or
push
jmp
lods
jno
fidivl
sbb
popf
popf
cmp
test
cmp
test
sub
scas
addr16
pop
ds
add
sbb
add
iret
call
xor
leave
fwait
bound
add
jo
fisubrs
sbb
ficompl
sbb
lods
add
loop
shlb
fisubs
xchg
insl
pop
inc
jmp
add
add
lret
mov
mov
lods
addr16
scas
jno
mov
bound
push
jnp
jmp
int
mov
ljmp
scas
ljmp
mov
lods
addr16
hlt
jne
notb
call
sbb
add
arpl
add
dec
out
fs
out
add
add
rclb
sbb
adc
xchg
repnz
pushf
arpl
add
sbb
mov
push
xorl
pushl
es
dec
rcr
add
fsts
daa
ret
int3
push
push
cmpsb
sahf
js
cltd
mov
xor
mov
add
adc
nop
adc
or
scas
scas
into
sbb
jl
aaa
xchg
mov
add
lods
test
pop
in
add
scas
mov
sbb
data16
pop
insb
mov
js
inc
xchg
add
scas
push
inc
test
adc
mov
stc
sbb
add
scas
ret
in
mov
xlat
fnsetpm(287
mov
xlat
cld
xlat
ret
scas
addr16
cmpsl
cmp
jb
les
sub
push
lods
call
subl
ret
add
shrb
or
daa
push
mov
mov
xlat
push
mov
int
rcll
cmpsl
push
call
xchg
sub
push
nop
add
out
je
ss
jo
xor
imul
jle
lret
jle
sbb
mov
or
cwtl
or
scas
addr16
addb
push
or
and
lods
add
enter
leave
mov
inc
sbb
mov
push
fdivrs
addr16
jmp
or
mov
popl
pop
lret
mov
pushf
cltd
adc
fwait
jecxz
lods
iret
out
xchg
jecxz
jb
out
scas
fwait
mov
lods
addr16
lods
jl
out
test
insb
add
mov
str
imul
xor
ret
and
jecxz
and
jmp
mov
scas
mov
pop
sarb
pop
test
rcl
cmp
into
int3
xorb
subb
rclb
movsl
mov
adc
sub
clc
xchg
flds
cld
xchg
cwtl
cmc
clc
xchg
rorl
sti
lret
loopne
leave
test
enter
mov
push
add
subl
inc
scas
js
dec
loopne
inc
inc
mov
mov
jnp
es
jge
add
dec
es
ja
xor
mov
xor
sub
shlb
jl
cmp
mov
or
dec
pop
in
addb
scas
add
lea
xor
test
xor
cmc
push
pushf
mov
pop
jecxz
jle
nop
xchg
cmp
in
lcall
scas
mov
add
pop
mov
mov
fimull
stos
loope,pn
xchg
inc
ret
cmp
jge
dec
divb
push
jbe
dec
faddl
pushf
xor
call
andl
mov
and
push
mov
xor
pop
pop
sub
addr16
cmp
cmpsb
jg
cmp
add
ljmp
mov
call
inc
shrl
dec
test
adc
xchg
mov
jnp
dec
xor
aas
push
jmp
insb
adc
ret
dec
add
icebp
lods
addr16
lods
popa
add
cmpsl
or
movsb
jae
in
bound
rorb
xor
lods
addr16
lods
add
enter
call
fcoms
jle
iret
push
lahf
rorl
fisttps
cmp
adc
mov
call
mov
movsb
lods
adc
mov
or
mov
fsubl
icebp
dec
movsl
cmc
addb
out
push
fucom
pushf
add
pushf
add
imul
jo
mov
push
fdivrs
ljmp
mov
loopne
cmpsl
test
in
and
test
mov
rol
mov
das
jmp
xchg
scas
pop
lret
push
xchg
incb
fwait
add
scas
pusha
fst
imul
rcll
iret
lret
add
sbb
enter
xlat
testb
hlt
fsub
in
lods
jecxz
div
enter
add
jne
dec
scas
int3
enter
ret
or
xlat
jmp
add
scas
xor
repnz
ljmp
in
mov
stos
xchg
adc
inc
div
dec
pslld
dec
scas
testb
insb
in
add
mov
icebp
cmpsb
pop
clc
xor
inc
loope
jmp
pushf
push
jmp
push
pop
rolb
mov
notb
mov
and
out
mov
cmp
addr16
push
data16
pop
addr16
dec
push
loopne
dec
xor
push
sbb
jae
add
addr16
and
incl
call
jnp
mov
imul
bound
fsubrl
shrl
data16
mov
cli
lret
mov
repz
out
cmp
ret
inc
and
filds
in
push
push
xlat
leave
inc
cmp
rcrl
add
pop
adc
adc
outsb
add
dec
push
cmp
push
std
push
lods
add
out
cmpsb
paddq
arpl
test
dec
shlb
add
jns
cmp
pop
sub
add
sbb
dec
dec
sub
imul
push
js
xor
adc
add
insb
add
mov
stc
pop
mov
ffreep
xor
popf
ret
rorl
fildl
into
lret
cmc
add
cmc
aas
shl
cli
inc
insb
add
cmc
cmp
sub
dec
das
aas
inc
xor
dec
cmp
sahf
dec
cmp
inc
fbstp
mov
fwait
cmpb
xchg
decl
fidivs
mov
or
jmp
mov
adc
mov
pop
popa
test
adc
add
scas
popf
and
mov
add
scas
in
test
cmc
mov
push
jmp
add
and
pop
pop
data16
sbb
mov
and
test
test
push
inc
scas
scas
pop
add
scas
addr16
add
push
fldl
leave
lds
add
add
sub
les
scas
scas
inc
imulb
test
add
inc
out
xchg
outsb
mov
add
inc
out
dec
jae
sbb
scas
movsl
xor
test
outsb
addr16
outsb
addr16
xor
test
outsb
addr16
outsb
cmpsl
xor
or
adc
or
add
add
add
sbb
adc
lret
or
addr16
lods
addr16
pop
dec
add
dec
add
mov
test
dec
add
nop
sub
out
hlt
sub
js
add
in
add
jecxz
add
dec
add
add
ds
add
mov
add
daa
add
daa
add
dec
daa
add
fiadds
add
daa
add
sub
add
inc
add
sarl
lods
mov
aas
add
add
aad
add
sarb
add
sarl
sbb
je
inc
push
arpl
sub
add
add
popa
fs
popa
jb
pop
jns
inc
imul
add
ja
je
push
imul
add
arpl
arpl
xchg
arpl
jb
dec
add
jo
outsl
scas
jno
outsl
scas
pop
add
scas
push
push
scas
addr16
scas
bound
scas
lods
add
pop
add
scas
lret
scas
roll
scas
rolb
jb
mov
add
mov
add
fldl
outsb
add
lock
faddl
imul
adc
je
and
scas
dec
add
scas
dec
add
scas
aaa
add
scas
and
scas
and
scas
and
cmp
addr16
add
outsb
call
shr
ffree
loopne
in
pop
mov
addr16
mov
scas
add
add
add
push
movsl
add
push
xchg
add
push
mov
add
addr16
test
add
addr16
add
addr16
add
inc
add
and
aam
and
add
addr16
add
addr16
add
push
add
lods
addr16
lods
addr16
lods
addr16
lods
push
daa
add
daa
add
lds
add
daa
add
xchg
daa
add
enter
add
je
push
adc
or
and
movl
test
out
inc
mov
out
sbb
push
int
inc
and
shrb
pop
inc
jo
pop
aas
jl
popa
dec
mov
gs
xchg
ljmp
add
insl
push
data16
add
xchg
and
xchg
sbb
dec
dec
stos
and
push
push
mov
sbb
mov
fs
imul
adc
jne
inc
std
js
jbe
xor
jb
ss
pop
cmp
das
push
add
popa
inc
add
inc
add
inc
add
xchg
add
into
mov
inc
add
mov
dec
inc
add
mov
inc
add
xchg
adc
inc
adc
inc
scas
pop
sbb
jge,pn
scas
imul
scas
cmc
push
inc
scas
prefetchnta
xchg
add
jp
add
int3
and
inc
scas
sti
es
scas
adc
aas
scas
out
aas
scas
cwtl
stos
aas
scas
cwtl
sbb
pop
inc
scas
pop
push
inc
scas
out
inc
scas
loopne
aas
scas
loopne
inc
scas
cs
inc
scas
lcall
scas
pop
sarl
scas
xchg
aas
scas
addr16
xor
imul
addr16
lods
enter
shlb
mov
addr16
addr16
das
insl
addr16
insl
addr16
insl
addr16
addr16
insl
addr16
jl
xor
enter
test
in
addr16
and
into
jne
add
ja
pop
mov
cld
adc
and
addr16
das
in
addr16
in
addr16
in
addr16
in
addr16
das
in
addr16
dec
in
addr16
lods
addr16
lods
add
subb
cmp
or
dec
stos
pop
add
mov
add
stos
adc
inc
mov
add
stos
or
jmp
lods
or
adc
add
mov
add
lods
addr16
lods
add
sbb
sub
xchg
inc
add
cli
sub
add
sbb
jmp
lods
or
mov
adc
add
mov
popa
add
push
add
push
add
subl
add
imul
imul
imul
imul
imul
dec
add
imul
imul
xor
fisubrl
add
imul
add
imul
imul
add
adc
or
push
inc
add
imul
add
imul
scas
mov
add
incb
add
lret
scas
xchg
jp
scas
sti
js
scas
std
das
inc
scas
add
das
inc
scas
sti
js
scas
sbb
jns
scas
dec
jp
scas
aam
inc
scas
js
scas
mov
add
and
jg
scas
cld
jle
scas
cmpl
add
jge
add
hlt
xchg
inc
scas
jl
inc
scas
sarb
scas
jnp
inc
scas
loope
gs
addr16
add
lea
shlb
add
addr16
add
addb
test
nop
addr16
add
addr16
add
addr16
add
subl
inc
test
outsb
addr16
mov
add
pop
test
outsb
addr16
add
push
int3
add
push
pop
add
push
jmp
data16
add
loopne
outsb
repz
or
add
adc
add
pop
sub
call
lods
cmc
incl
lods
add
jmp
sbb
sub
add
add
or
add
or
inc
repnz
dec
ljmp
or
add
cmp
cmc
and
std
add
add
rol
addr16
mov
add
pop
aaa
add
jle
add
push
add
adc
adc
add
or
jo
data16
dec
test
and
cmp
or
sbb
or
adc
add
add
insb
add
pop
divl
pushf
pop
das
ja
imulb
insb
jae
arpl
pop
add
outsb
divl
int3
pop
das
ja
imulb
movsl
push
insl
das
add
or
ds
lock
sahf
inc
add
mov
add
scas
repnz
scas
fdiv
inc
scas
lret
add
sbb
scas
dec
push
lcall
add
scas
iret
gs
fisubrs
jecxz
pop
addr16
gs
add
scas
int
outsb
xorl
pop
cmp
dec
pop
outsl
jl
testl
pop
xor
dec
sub
scas
popa
data16
push
pop
push
cmp
jbe
dec
jae
je
pop
jbe
inc
jno
add
scas
mov
inc
scas
inc
jne
add
xor
pop
fistpl
or
je
or
lret
add
or
xchg
addr16
add
addr16
je
cmc
sbbl
lea
stos
jne
push
jge
jb
ja
popf
adc
xchg
adc
xchg
adc
scas
addr16
pop
data16
push
cmc
inc
pop
add
aas
jo
adc
gs
sbb
push
addr16
dec
addr16
add
add
addr16
add
lock
or
jmp
cli
and
jp
or
ljmp
fadds
add
dec
and
div
outsb
or
add
add
push
and
jp
jno
mov
int3
dec
and
jmp
mov
add
stos
dec
add
cli
decl
stos
add
mov
add
sbb
sbb
add
and
lods
add
ss
push
jbe
add
imul
imul
into
arpl
mov
and
add
arpl
add
push
add
sub
outsl
sbb
outsl
xor
gs
add
push
add
je
das
push
gs
nop
sbb
jb
add
imul
outsb
fs
inc
js
imul
inc
outsl
pop
gs
nop
sbb
je
mov
inc
jns
dec
outsb
dec
jl
add
incl
inc
scas
or
inc
scas
js
add
scas
cmp
test
data16
mov
pop
sbb
nop
or
cmp
mov
mov
push
cmp
daa
test
or
push
add
mov
pop
pop
dec
xor
dec
xor
adc
daa
inc
scas
inc
cli
or
rcrb
aad
shlb
orb
mov
push
dec
xchg
add
arpl
js
addl
push
imul
mov
out
call
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
hlt
insl
addr16
jmp
add
add
push
nop
cmpb
adc
aad
mov
inc
jmp
mov
add
outsl
push
leave
dec
adc
mov
je
pop
pop
xchg
andl
rol
jae
out
addr16
rcrl
cs
jecxz
test
mov
mov
mov
and
pop
push
push
jb
pop
imull
mov
cmc
pop
imul
dec
in
mov
call
dec
xchg
out
fisubs
push
inc
add
insb
add
jmp
add
sahf
inc
add
mov
add
popf
inc
add
mov
xchg
jmp
dec
xchg
and
sub
and
add
inc
jmp
add
and
mov
push
inc
ss
adc
and
mov
xchg
ljmp
inc
dec
mov
jmp
xor
xor
movl
inc
jnp
cmp
cmc
mov
or
push
adc
sub
jne
mov
jmp
add
out
add
jle
scas
mov
mov
mov
in
loop
repnz
xchg
lea
sahf
insb
add
cmc
iret
out
into
add
and
mov
mov
push
cli
add
jns
test
popl
add
push
push
add
addr16
imul
jmp
adc
jmp
ret
pop
jns
fnstenv
xor
adc
sahf
imull
ja
ficompl
jb
rcll
add
and
mov
jo
inc
mov
ljmp
in
mov
jmp
inc
jmp
push
es
mov
inc
jmp
adc
arpl
push
cltd
mov
jp
add
add
add
call
mov
and
xor
push
mov
inc
cmc
and
in
mov
xor
add
jo
adc
jne
hlt
cmp
addr16
jb
in
in
cmc
sti
add
sbb
addr16
cld
movsb
pop
inc
jmp
add
movsl
mov
out
sub
mov
add
cmc
popf
out
push
in
and
add
sub
inc
or
push
add
sub
js
imul
out
xor
adc
dec
inc
mov
mov
orl
push
into
push
es
add
sub
inc
cmp
pop
aas
mov
je
loope
call
add
cmpsb
out
push
bound
fcmovnu
xor
push
mov
push
iret
sahf
jns
add
dec
or
pop
or
hlt
add
push
mov
xchg
jnp
mov
pop
lahf
and
scas
stc
int
add
dec
ret
push
and
mov
test
adc
orb
add
cmp
enter
push
add
cltd
test
dec
add
dec
inc
lods
cmp
lret
jo
fiadds
inc
sti
cmp
push
in
hlt
sti
dec
inc
lock
add
pop
test
scas
mov
add
insl
daa
stos
push
add
fcoml
mov
divl
push
mov
roll
addr16
scas
addr16
out
out
jmp
test
jmpw
sub
add
movsl
out
scas
call
scas
add
data16
jmp
or
scas
loop
sub
push
jp
scas
loopne
in
pop
ss
xchg
imul
ljmp
inc
sub
shr
lods
mov
sbb
jmp
lods
ljmp
lods
add
pop
dec
and
mov
pop
aam
insb
test
data16
push
push
mov
adc
mov
fimuls
mov
add
xchg
jg
std
and
and
inc
mov
call
lods
lea
por
das
je
cld
xchg
xchg
lds
jmp
lods
jg
jnp
lea
nop
lahf
incl
jmp
mov
sub
push
loop
and
data16
mov
ljmp
xchg
pusha
xor
xor
andb
add
mov
loopne
and
push
add
ds
adcl
pop
push
orl
dec
es
pop
aaa
and
aad
out
in
insb
add
data16
add
and
js,pn
add
imul
jno
dec
les
jle
inc
xchg
nop
xor
int
adcl
inc
and
pop
add
push
es
and
cmp
mov
add
je
adc
xchg
xor
push
jl
jg
aas
addb
jg
dec
and
xchg
mov
adc
rorb
jns
je
sahf
fsts
outsb
inc
add
je
cmpsl
cmp
add
pushf
push
jge
mov
xchg
pop
ja
test
sub
imul
sub
in
scas
addr16
imul
divb
jb
int3
pop
in
scas
or
int3
dec
call
add
inc
ljmp
sub
out
jmp
adc
aaa
and
addr16
add
test
das
pop
sbb
and
and
mov
aaa
sti
inc
scas
fdivrl
mov
das
add
addr16
sub
or
xor
add
lods
cs
out
add
jmp
lods
sti
xor
imul
add
push
add
jns
sbbl
add
int3
add
fstl
adc
imulb
lea
mov
test
mov
or
hlt
lods
rclb
and
mov
add
call
jg
push
xlat
imul
jmp
sub
andl
int3
call
add
stos
jbe
jl
mov
dec
push
sbb
ljmp
cmovo
mov
pop
or
or
xchg
adc
push
leave
data16
es
sbb
in
and
shl
add
imul
push
push
lea
ljmp
stos
mov
out
push
notb
add
add
cmp
scas
add
mov
mov
scas
fdivrs
lods
cmpb
adc
subl
xor
mov
scas
xlat
in
scas
addb
scas
or
aas
out
fmuls
jg
ds
add
and
push
jle
jnp
xchg
clc
mov
shr
icebp
jle
inc
add
incb
pushf
rcrb
shlb
mov
mov
and
jmp
add
in
jg
insl
call
and
das
call
stc
jo
call
add
or
xor
movsb
inc
incl
sub
cmp
jecxz
cmp
jmp
add
loope
add
jmp
inc
scas
sub
pop
adc
and
sub
mov
cmp
ret
aaa
sti
inc
scas
jg
aad
insb
popa
pop
mov
cmp
push
mov
pop
sbb
hlt
lcall
loop
add
lods
and
out
call
imulb
scas
data16
aaa
push
cmp
out
addr16
aad
scas
aaa
jle
addr16
insl
imul
pop
test
out
addr16
mov
pop
call
push
pop
inc
jmp
shlb
test
stos
sub
or
outsl
addr16
rcrb
jmp
mov
mov
push
lods
sbb
adc
add
add
sub
add
jmp
add
addr16
mov
nop
push
and
inc
je
push
pop
je
pop
fucomi
dec
fadds
jmp
fadds
jmp
fdivr
inc
insb
pushl
loopne
incl
pop
call
mov
jo
call
data16
or
roll
data16
ds
bound
rcpps
inc
out
push
scas
jle
mov
pop
je
inc
xchg
xchg
xor
inc
cld
out
xor
sub
pop
jne
inc
sub
dec
sub
sub
cltd
jge
or
mov
ljmp
fidivl
cmp
test
cmp
fiadds
add
sahf
imul
addb
mov
cmc
inc
and
test
add
sbbb
aam
cmp
fisubrl
addr16
and
add
std
ljmp
dec
jae
imul
repz
xchg
mov
addr16
add
insb
mov
orl
movsb
sbb
bound
arpl
mov
cmp
pushl
jecxz
push
scas
addr16
dec
add
gs
gs
fdivrl
addr16
lret
mov
imul
addr16
scas
addr16
das
adc
lcall
mov
jmp
add
lods
jecxz
divb
add
jmp
stos
sbb
and
add
pop
test
lods
add
add
or
fldenv
scas
push
lahf
add
add
add
lods
fcoml
repnz
fisttps
leave
test
push
cmp
lods
jecxz
out
sub
jmp
sbb
adc
push
aaa
test
lods
data16
push
jmp
movzwl
pop
push
push
pop
and
pop
sub
call
dec
and
dec
movsb
or
add
adc
jl
mov
testl
adc
je
ja
inc
inc
add
mov
enter
jno
std
mov
shrl
sbb
stos
orl
stos
push
enter
sbb
rol
je
das
inc
and
jns
mov
fnstcw
add
or
movsl
sub
and
add
xor
sub
and
jp
mov
dec
shll
inc
lret
pop
mov
and
inc
lret
sub
inc
sarl
jnp
lret
push
jge
shrl
sbb
sub
sbb
add
push
andl
add
sti
je
mov
insb
in
mov
je
test
push
test
and
test
sbb
mov
lret
sbb
pop
xchg
pop
iret
or
mov
fiaddl
lret
jb
jge
cwtl
ljmp
xchg
push
add
ljmp
sub
mov
test
pop
scas
into
test
into
mov
pop
aas
rcll
popl
mov
out
loop
out
mov
mov
sbb
push
sub
popf
xor
cmpsl
insb
aaa
rorl
std
cltd
sbb
clc
es
mov
fldenv
mov
mulb
add
lds
sub
addr16
cmp
push
bound
sbb
push
mov
and
and
jnp
adc
scas
je
lret
add
mov
out
call
push
push
call
cmpsl
lock
and
mov
sub
jmp
inc
push
iret
add
push
test
sbb
mov
roll
call
and
dec
scas
and
push
mov
dec
dec
bound
call
add
pop
jb
inc
inc
push
in
call
imul
sahf
test
inc
subb
fists
test
mov
insl
mov
fstpl
jmp
mov
push
fnstenv
and
sbb
xor
icebp
mov
fldenv
sub
push
add
pusha
add
jp
cmpl
clc
popl
and
add
mov
cmp
lret
and
xchg
sarb
jno
push
sbb
push
cmp
push
add
adc
cwtl
xchg
add
scas
push
sub
xor
lds
and
xor
cmp
int
or
data16
or
mov
push
lods
xchg
xor
cmpsl
sub
mov
out
out
dec
cmp
jp
xchg
pop
mov
mov
fistpll
push
xchg
add
scas
addr16
in
mov
addr16
fidivrs
out
loope,pn
add
inc
call
repnz
ret
mov
mov
scas
addr16
xor
push
xor
add
scas
in
add
pop
push
gs
jmp
xor
jmp
xor
addr16
cmc
push
bound
hlt
xchg
jmp
in
shlb
dec
out
lods
test
pusha
lret
mov
int
cwtl
in
sub
nop
addr16
cld
les
jmp
mov
test
jo
outsl
xchg
cmpsl
dec
add
add
sbb
xor
sub
js
cmp
pop
loopne
jne
jb
jbe
jecxz
dec
int
sub
push
fwait
call
andb
fildl
popf
cwtl
adc
scas
push
decl
loope
jmp
jecxz
dec
mov
jb
push
mov
add
xor
dec
sub
add
adc
pop
pop
jae
ret
nop
mov
inc
cmp
push
jns
lock
or
je
in
mov
inc
xchg
imul
pop
mov
ficompl
fists
test
jg
scas
push
add
repnz
add
sub
xchg
inc
push
and
mov
test
mov
ss
test
scas
push
mov
jp
add
adc
mov
dec
js
xchg
lods
push
add
and
cld
shl
push
xchg
add
push
dec
das
lea
stc
insb
faddl
push
add
outsl
add
lret
mov
jg
scas
cmp
pop
cmp
push
sbbb
out
repz
nop
sub
fldt
out
xor
fsub
add
and
aad
jp
arpl
sub
push
lods
mov
inc
sbb
xchg
lret
cmc
insb
addr16
icebp
test
cmpsl
add
daa
jl
sub
filds
call
rolb
jl
jno
xor
pop
ljmp
call
jp
call
jbe
add
mov
pop
add
push
jmp
mov
outsb
imul
call
xchg
lock
sbb
push
loope
pop
ja
aaa
push
cld
jmp
in
pop
or
scas
xchg
aaa
mov
ret
push
jp
mov
push
outsl
jmp
push
add
icebp
jmp
jo
sbbl
adcl
add
int3
call
jecxz
cmp
push
arpl
std
std
push
stos
test
popa
push
call
fbld
cmp
pushf
addr16
aad
sbb
arpl
push
incl
mov
das
inc
std
add
inc
xchg
outsb
add
mov
xchg
and
test
cmp
jle
add
jmp
inc
push
xor
clc
sub
push
or
xchg
mov
and
es
loop
sub
jbe
push
add
mov
out
imul
push
add
shll
push
adc
mov
les
sub
add
scas
aad
out
pop
add
xor
popa
jne
rcr
add
scas
neg
xor
push
add
jns
ja
sarl
and
cmp
call
and
sbb
ret
fwait
insb
les
in
cmp
cld
sarb
fldlg2
adc
aam
mov
repnz
cmp
jae
jle
lods
daa
add
and
lods
push
add
insb
mov
push
mov
adc
and
dec
jb
out
insb
subl
insb
addl
xor
mov
scas
mov
je
sub
push
inc
add
fucomi
fadds
mov
je
xchg
out
lret
sar
pusha
add
cmp
jmp
jb
adcl
add
lods
and
push
xor
jmp
in
int
pop
bound
jmp
imul
in
in
in
out
xor
cmp
test
add
arpl
jmp
pusha
loop
out
cmp
jmp
lods
push
add
mov
cmp
jge
add
and
in
adc
addl
add
sbb
ret
xor
in
inc
and
pop
repz
ljmp
push
sbb
decb
fisubl
ljmp
pop
repz
scas
sub
mov
loop
or
or
push
or
push
fs
pop
mov
push
decl
inc
push
lcall
adc
inc
push
jecxz
or
and
lea
and
jne
jge
cmp
scas
inc
cmp
bound
dec
jmp
aad
sub
std
push
push
shlb
adc
test
mov
lret
dec
inc
add
add
sbb
xchg
loop
add
loope
add
ret
shll
push
sub
fistl
pushf
jge
shl
add
add
pop
subl
sbbb
push
push
jns
sub
inc
add
xchg
imulb
mov
leave
stos
mov
jl
adc
addr16
fldt
xor
cmc
scas
addr16
mov
daa
out
enter
add
sub
scas
loop
add
gs
sbb
aas
lds
lods
addr16
aaa
mov
filds
add
ret
push
scas
ljmp
sub
pop
orl
push
mov
out
lock
punpcklbw
mov
dec
lret
adcl
xchg
push
inc
cmp
add
sub
fimull
outsl
mov
mov
adc
add
movsb
loop
jmp
stc
fidivrs
xchg
xchg
jae
ficompl
mov
xchg
lea
jmp
jmp
sbb
loopne
jmp
lods
call
and
and
push
sub
sub
jne
xor
and
aas
lahf
adc
cmpb
jge
and
daa
push
push
leave
outsl
lock
imul
jb
out
std
je
dec
call
push
sub
mov
dec
sbb
filds
jne
add
push
test
rcrb
mov
jne
or
data16
cwtl
mov
adcl
roll
aas
es
int
and
mov
fidivrs
dec
lahf
scas
and
scas
push
and
mov
aas
add
das
push
out
sub
add
scas
enter
xchg
push
sub
mov
lock
cmp
lea
mov
ss
and
add
mov
mull
dec
mov
cmp
mov
rep
sbb
sti
cmp
lds
call
in
mov
xor
imull
clc
jg
push
xor
call
clc
xor
mov
add
adc
mov
sub
adc
add
bound
loopne
call
mov
jb
mov
arpl
enter
scas
adcl
push
call
scas
lods
loopne
jmp
int3
sub
loopne
loopne
mov
xor
ficomps
cwtl
fiadds
mov
lods
jmp
fstp
ficoms
fldl
add
sbb
pop
cmp
xor
sub
in
jmp
daa
add
jl
inc
add
adcl
mov
pop
std
jne
loopne
push
lahf
cmc
jp
aad
subl
add
sub
lock
mov
jo
fidivrs
es
mov
out
mov
divb
add
sahf
and
mov
push
jne
add
xor
sbb
roll
add
repz
push
push
pop
mov
jl
stos
push
jg
and
jge
pop
jmp
loopne
xor
mov
sbb
les
add
in
and
sub
and
adcb
imul
xor
ljmp
inc
loop
fldenv
jmp
cmpsl
and
pushl
and
mov
jecxz
call
scas
jmp
push
mov
and
mov
lea
and
add
mov
in
add
jge
arpl
call
xor
fidivrs
and
fldl
xchg
xor
xor
add
and
fnsave
and
fstpl
cmp
fidivrs
pop
ret
inc
and
out
push
cmp
mov
lea
jl
mov
scas
inc
lea
subb
or
xor
out
or
xor
add
cmpl
scas
loop
loopne
fcompl
loopne
aas
ret
addr16
frstor
imul
int3
add
xor
mov
lret
or
mov
addr16
loop
mov
fbstp
subl
pushf
loop
sti
enter
scas
inc
popa
mov
push
addr16
inc
lret
les
addr16
hlt
dec
jp
jmp
cld
dec
jb
orl
bound
int
mov
pop
add
mov
mov
inc
xor
or
cwtl
pop
faddl
arpl
movl
in
mov
mov
mov
fimuls
jb
addl
xchg
les
dec
xor
arpl
pop
mov
mov
and
sbb
test
fadds
xor
int
mov
cmp
add
in
mov
dec
mov
ljmp
cs
incb
push
int
je
loopne
add
mov
ja
adc
imul
movb
or
xlat
pop
mov
fisttpl
mov
push
out
mov
inc
push
push
inc
pop
ljmp
pop
scas
pop
adc
call
aas
add
mov
bound
mov
das
or
jb
cmp
or
add
in
mov
scas
mov
shll
iret
andl
dec
cmp
scas
add
lods
sarl
cmp
stos
call
cmp
lods
rcrb
add
jo
add
sub
cmpsl
mov
sub
call
pop
add
mov
outsb
out
loopne
fisubrs
fnstsw
loopne
mov
add
movsb
lret
sti
xor
dec
clc
jmp
aas
xor
ss
pop
mov
jb
lret
outsl
add
loopne
fistpll
insb
aas
lret
adcl
mov
aas
aaa
mov
dec
insb
ret
cmp
movsl
mov
fisttpl
stos
xor
jmp
imul
cmp
xorl
arpl
stc
cmpsb
and
scas
addr16
lods
fdivl
mov
jo
subl
arpl
test
dec
jae
sarl
movsl
aas
inc
fildll
jbe
cltd
sub
imulb
sar
pop
pop
jge
ljmp
add
dec
cmpb
cmpsl
cmpl
push
icebp
mov
push
call
mov
sbb
je
pop
mov
xchg
xchg
and
dec
or
incl
movb
or
add
cmp
pop
pushl
push
je
dec
mov
and
xchg
rcrb
mov
and
int
dec
je
leave
pop
and
push
mov
sbb
mov
fdivrs
scas
mov
sbb
dec
or
jg,pt
lahf
xchg
scas
jg,pt
jbe
ljmp
data16
ljmp
ss
scas
jge,pt
mov
jge,pt
xchg
inc
push
add
pop
cmp
imul
call
jge
sti
mov
mov
add
pushf
cmp
aas
add
jno
cmp
jmp
pop
lds
fcomps
sub
jmp
push
inc
add
jb
mov
bound
cmpsl
cmp
jl
dec
gs
lea
cwtl
pop
inc
add
cs
add
addr16
jge
inc
aad
mov
mov
aad
imul
mov
gs
stos
mov
addr16
push
xor
adc
add
mov
out
addr16
pop
lock
xchg
lock
call
add
lods
mov
enter
lods
jp
fs
mov
out
pop
int
lock
je
fdiv
pop
bound
xchg
push
repz
mov
insl
xchg
add
lods
cwtl
push
inc
lods
hlt
dec
add
stos
subl
jmp
orl
outsl
or
jmp
pop
mov
mov
add
sub
daa
hlt
add
push
push
lea
addb
imul
xor
cmpsl
xchg
imul
add
imul
movlps
mov
push
push
call
jnp
xchg
inc
mov
test
dec
in
aas
add
aaa
pop
bound
test
add
add
cltd
mov
dec
fimull
call
lods
and
subl
test
leave
sub
push
sub
add
scas
sbb
lea
push
pop
es
es
cmp
outsl
daa
add
dec
add
pop
fiadds
repz
call
sub
cmp
shr
subl
and
add
push
add
sub
add
pop
negl
xchg
call
add
lcall
out
inc
and
out
or
je
xchg
scas
addr16
push
mov
std
sub
call
out
inc
out
cs
fldcw
out
fwait
movsl
cmp
add
out
dec
mov
mov
scas
addr16
push
shrb
aam
adc
push
testl
push
mov
add
out
pop
out
push
sbb
mov
push
xor
pop
outsl
addr16
lret
ja
push
outsb
add
jnp
fnsave
out
mov
jmp
add
push
adc
in
cmp
push
mov
stc
dec
fists
enter
lods
cwtl
push
insb
call
scas
and
xor
sub
out
clc
jo
mov
inc
mov
xlat
xchg
xchg
imul
cmp
lret
mov
and
stos
add
fwait
mov
test
rolb
call
jg
and
ja
mov
inc
addb
xchg
out
jg
ret
push
imul
aas
out
and
and
push
and
dec
and
frstor
jmp
mov
pop
cmp
mov
push
push
jno
and
fnstsw
cmp
and
and
ljmp
ljmp
lds
jae
add
or
fdivrp
or
out
mov
adc
hlt
dec
add
scas
dec
jg
xchg
scas
add
sbb
dec
xor
ret
pop
scas
int
aaa
mov
dec
add
mov
sti
sub
mov
jb
jne
loopne
or
lcall
iret
mov
add
loop
lcall
sbb
das
jb
imul
addr16
aas
scas
pop
pop
inc
scas
cltd
jle
lret
push
daa
add
ret
ret
dec
xor
jg
out
and
or
fistpll
gs
sub
add
fnstcw
fwait
addl
xchg
idivb
gs
inc
fs
xchg
in
push
jle
imul
aaa
das
andb
scas
jp
ds
jne
stc
in
addr16
push
mov
daa
add
sub
cmp
rorl
cmpsb
ret
dec
ljmp
jmp
call
cvtdq2ps
fsts
mov
jb
fcomi
int
push
verw
jae
mov
in
jl
xchg
lock
in
push
out
stos
and
and
lods
fsubs
mov
lods
jp
jo
push
xchg
orb
ljmp
leave
outsl
subl
orl
push
adc
test
push
mov
call
lea
xchg
inc
push
push
add
roll
and
jle
mov
cmp
or
and
jne
jnp
loop
ja
imul
sub
lods
std
rcll
or
sbb
and
mov
inc
cmp
push
je
inc
or
or
rcrb
dec
xor
jo
or
scas
dec
add
repz
and
loopne
test
je
mov
cmp
and
loopne
adc
jnp
lret
ds
xlat
stc
scas
scas
dec
jnp
shll
or
mov
push
add
dec
push
mov
movsl
adc
and
adc
scas
inc
scas
leave
mov
adc
pop
mov
cmpsb
incb
xor
dec
call
mov
push
jnp
mov
add
stc
addr16
cmp
fsubl
ljmp
jns
dec
test
loope
in
xchg
inc
cmp
movsl
mov
lock
cltd
ret
cld
aaa
lods
xlat
js
dec
inc
stos
adc
mov
jg
add
lcall
call
js
ret
fistpll
out
jb
repnz
mov
icebp
clc
dec
jg
scas
addr16
inc
mov
mov
flds
iret
add
cmp
xlat
push
cmp
das
push
jg
push
mov
inc
sbb
mov
push
pop
pushl
pushf
in
sbb
lods
mov
bound
or
cmp
add
xor
lods
mov
mov
lret
inc
ja
inc
ljmp
std
mov
testb
dec
cli
jae
inc
sub
push
push
cmp
insb
jp
push
bound
out
add
dec
jl
add
mov
scas
leave
in
call
xchg
add
test
ret
push
mov
push
test
mov
xlat
fsin
call
xchg
add
add
subb
in
fistl
push
xlat
dec
loopne
sub
mov
and
test
add
inc
mov
shr
add
gs
sbb
push
push
jnp
adc
pop
jne
fmull
jmp
test
daa
push
mov
lock
push
inc
jne
dec
xor
repnz
xor
das
push
add
mov
sbb
shll
add
rcl
cmc
xchg
inc
xchg
push
jmp
lods
adc
mov
push
xor
out
into
add
xor
or
xor
cmp
cmp
xor
test
add
gs
or
out
add
fisttpl
cmpsb
in
fwait
out
in
mov
add
mov
fs
ret
inc
lcall
ret
push
xchg
xchg
dec
inc
dec
add
mov
cmpsb
aad
jle
dec
xorl
add
mov
mov
fildll
sub
mov
fcmovne
aaa
add
xor
std
mov
stos
scas
subl
ret
call
jb
add
lcall
leave
pop
mov
xor
mov
cmpl
addr16
ss
in
xchg
add
pusha
call
xor
mov
add
jge
lods
test
mov
loop
jo
outsl
call
insl
in
mov
add
subb
cltd
add
xlat
push
push
ret
xor
in
in
data16
out
xlat
add
jns
or
imul
inc
and
hlt
add
lods
or
cmovl
cmpsl
cwtl
hlt
mov
cwtl
in
call
lds
mov
insl
and
or
loope
and
sub
dec
repnz
je
mov
add
insb
cmp
pop
aas
xchg
in
js
scas
inc
add
scas
icebp
xor
inc
sarl
scas
inc
add
outsb
cld
rcl
xor
add
jg
mov
icebp
addb
add
sbb
dec
sarl
push
ja
fcmovu
push
mov
rol
and
or
add
mov
dec
sbb
aam
add
sub
or
mov
fsubr
jbe
lods
push
cmp
andb
sbb
and
jecxz
popf
daa
sub
xor
imul
stos
aas
mov
jo
fwait
loopne
repz
mov
pop
push
jae
cs
imul
dec
ja
aam
scas
addr16
mov
xor
cmpsl
test
xor
add
call
push
shll
pop
loopne
or
daa
lock
imul
repz
add
dec
pop
inc
jmp
jno
mov
fwait
xchg
ret
popf
mov
mov
add
das
lret
das
lret
ljmp
int
fiadds
and
xchg
insb
pop
push
insb
mov
push
ficomps
dec
call
ret
shlb
adc
add
pop
mov
mov
rcl
daa
and
inc
pop
push
add
in
notl
dec
add
jg
sbb
iret
add
inc
imul
pop
aad
mov
pop
mov
loope
test
data16
pop
adc
mov
ljmp
cmpl
je
loopne
or
shll
data16
mov
rcll
pop
cmpsb
add
pop
filds
fistps
add
int
and
test
lock
mov
in
mov
filds
orb
push
add
call
scas
add
setnp
lds
or
fldl
lea
stos
mov
jns
add
and
fldl
test
or
mov
or
out
popf
push
sub
stos
mov
stos
xor
sbb
dec
mov
push
hlt
scas
xlat
mov
stos
movl
insb
mov
or
in
adc
and
or
out
cmp
jb
lds
jg
cmp
addr16
sub
fwait
cmp
add
scas
fisubrs
or
arpl
mov
sub
jns
pop
sbbl
inc
enter
pop
fdivrl
sbb
fdivrl
stos
cmp
add
frstor
gs
jb
rcrl
xlat
enter
out
insb
scas
sbb
ficomps
lret
or
insb
out
test
ss
push
sahf
mov
ljmp
lcall
mov
in
mov
sbbb
inc
in
xor
aad
xchg
xor
je
xor
scas
fsubs
lahf
lcall
lods
in
in
lods
mov
bound
mov
outsb
imul
inc
movsl
add
in
mov
outsb
imul
daa
movsl
add
lods
inc
add
mov
or
lcall
add
stos
popa
add
rcrl
jne
xor
add
call
insl
cld
mov
push
jle
push
imul
push
or
push
pop
push
adcl
ret
mov
jmp
stos
jmp
ret
pop
dec
call
xor
push
push
daa
je
mov
movlps
popf
scas
enter
adc
sbbb
pop
mov
push
jmp
ljmp
push
sbb
xor
ucomiss
fdivrs
enter
outsl
lcall
push
dec
das
mov
leave
lcall
shl
stc
insb
leave
cmpsb
mov
lods
mov
out
sub
inc
and
xor
xor
push
arpl
faddl
sub
add
out
ljmp
bound
dec
cmp
push
ss
add
cmp
fldcw
mov
dec
xor
cld
sub
adc
adc
mov
pop
rolb
xchg
outsb
push
repnz
loop
add
imul
repz
ret
pushf
push
lods
mov
xor
addl
push
inc
loopne
ss
cmp
call
in
xchg
mov
rclb
xor
dec
mov
add
out
inc
scas
sub
mov
loopne
addb
mov
xor
sub
sub
sbb
in
jae
fwait
sub
or
mov
sub
jmp
frstor
cmp
xchg
jp
pop
loopne
push
adc
pop
add
movsb
push
xor
loopne
aad
imul
ss
imul
and
int
dec
add
lods
sub
sarl
jmp
and
imul
ljmp
pusha
mov
pop
test
push
pop
test
xor
add
jo
add
xor
das
mov
mov
lea
dec
lea
cli
test
inc
stos
xor
inc
mov
das
test
add
aaa
inc
ljmp
add
mov
add
loopne
test
test
xlat
data16
pop
and
push
pop
and
jno
mov
dec
es
mov
cmp
aaa
je
adc
movsl
shll
sub
adc
xchg
cmpsb
add
jmp
lods
fstl
std
bound
push
cmp
loopne
decl
mov
arpl
pop
in
pusha
sbb
lock
inc
xchg
adc
rdmsr
lcall
cmpsl
jo
push
or
outsl
inc
mov
jmp
aas
jg
xchg
push
xchg
pop
add
inc
fs
adc
add
aas
pop
lahf
sbb
into
xchg
aam
push
daa
lock
das
mov
out
and
ret
inc
aam
aam
insb
pop
pusha
adc
outsl
push
les
and
sbb
call
loopne
fs
add
jnp
xor
mov
sbb
adc
xor
pusha
adc
push
daa
pop
xor
and
roll
inc
roll
pop
sub
in
lds
cmp
jb
rcll
bound
fucom
fs
mov
enter
insb
es
pop
in
xorl
js
xchg
or
jecxz
jne
push
shlb
stos
addr16
jb
shll
add
xor
jae
mov
jmp
sti
in
cmp
pusha
sbb
je
sub
xchg
mov
outsb
aas
ret
test
subl
ljmp
icebp
leave
insb
and
mov
or
enter
bndldx
popa
mov
xor
cs
std
repnz
push
movlps
push
push
mov
femms
jmp
test
pop
cld
sbb
xchg
nopl
mov
adc
push
stos
add
lds
inc
mov
dec
push
dec
push
adc
imul
or
sbb
add
pop
pop
and
leave
mov
out
push
insl
add
scas
pop
inc
pop
pop
sarl
push
xchg
lds
insl
adc
push
xor
xor
xor
je
sbb
adc
mov
rolb
mov
xchg
jae
add
out
and
add
push
nop
test
inc
sub
popa
xor
scas
push
inc
scas
xorb
jns
testl
xchg
lea
js
add
dec
repnz
scas
test
add
fwait
cmova
cmp
mov
and
inc
scas
mov
cmpsl
add
jno
add
mov
and
scas
mov
ficoml
fmull
jl
dec
sarl
rcrl
scas
xchg
jmp
inc
scas
lock
dec
call
mov
addr16
rorl
cmp
stos
lret
rcl
imul
repnz
jmp
add
addr16
mov
insb
sbb
outsl
cld
stos
lods
je
jmp
jmp
fnstcw
mov
addr16
repnz
xchg
repnz
test
or
jmp
addr16
out
pop
mov
sub
jne
pushf
mov
add
and
push
xchg
add
and
int
add
test
add
dec
and
icebp
jecxz
add
call
sbb
push
mov
add
call
add
jp
mov
adc
jp
add
xchg
dec
jb
add
xchg
jg
mov
or
mov
inc
lcall
movlps
int
and
popf
frstpm(287
aas
pusha
hlt
decb
xor
mov
aam
mov
dec
scas
xor
ljmp
mov
add
and
call
pop
xchg
and
jnp
and
aas
scas
ret
inc
and
add
mov
xchg
rorl
jl
decb
fisttpl
sub
test
push
cltd
jl
lar
jmp
arpl
push
and
ss
and
lods
std
insb
adc
incl
mov
pop
clc
incb
in
clc
and
dec
fs
push
popl
addr16
sbb
fstpt
mov
mov
outsl
roll
mov
aaa
xor
mov
inc
aaa
stc
in
hlt
mov
lds
idivl
and
mov
and
and
fmull
xchg
sarb
addr16
clc
fwait
stc
xor
fstpt
call
add
insb
add
addr16
jb
ret
lock
mull
inc
les
jmp
fisubl
dec
and
inc
jmp
xor
imul
lea
imul
shlb
and
in
addr16
movsb
add
in
addr16
sub
push
jb
or
addr16
cltd
inc
jmp
mov
xchg
and
jmp
lods
lds
nop
xchg
std
incl
js
inc
push
pushf
fwait
mov
add
inc
push
popf
fwait
nop
push
add
shll
mov
out
adc
add
mov
std
inc
mov
std
adc
inc
xchg
mov
xchg
mov
mov
decl
mov
jmp
imul
push
stc
inc
and
push
je
pushf
into
call
scas
mov
pop
in
or
push
cmpl
mov
cmp
or
incb
and
mov
test
sbb
arpl
mov
push
call
add
push
std
sti
cltd
xchg
orb
xor
cmp
out
hlt
int
sti
adc
jne
mov
ds
decl
or
fimuls
in
add
jmp
cmp
scas
xchg
out
fwait
imul
ljmp
icebp
xchg
scas
adc
ja
adc
loopne
add
xchg
loope
aad
cld
cld
xchg
hlt
hlt
inc
and
bts
popa
add
sub
jmp
xor
call
hlt
nop
push
daa
fwait
sub
call
sbb
dec
pop
add
out
jo
sbb
pop
xor
test
lock
xchg
pop
gs
call
cltd
and
xchg
test
and
insb
mov
std
cmpsb
xor
shr
inc
call
daa
add
push
jle
push
out
mov
add
inc
inc
sbb
aaa
add
insl
test
add
mov
jb
add
pop
lods
xchg
subl
call
mov
addr16
jecxz
and
jp
mov
inc
push
les
push
push
dec
and
lahf
dec
inc
push
add
mulb
mov
and
mov
sbb
pop
and
sbbl
mov
jno
cli
dec
dec
mov
out
add
addr16
fiaddl
dec
cli
or
call
aas
dec
and
or
popa
xor
arpl
push
sbb
cmp
add
fbstp
push
jo
and
iret
jmp
dec
pop
popf
fstpl
es
dec
mov
out
aas
scas
xchg
sub
cmp
cmc
mov
xor
add
cmp
add
je
adcb
pushl
inc
loopne
inc
sbb
mov
xor
xchg
or
aad
int
xor
cltd
aaa
add
gs
jmp
jne
push
cld
lar
stos
test
push
scas
addr16
cld
inc
mov
test
inc
mov
sub
xor
mov
push
inc
xchg
sbb
mov
jo
xchg
out
andb
xor
aam
pop
lods
cmp
test
and
mov
insl
xor
mov
dec
pop
xchg
jb
mov
es
pop
addr16
add
xchg
in
xchg
pop
iret
add
push
ss
push
adc
lods
add
shll
bound
add
jge
pop
xor
mov
nop
scas
mov
shll
jmp
jo
inc
sbb
lock
cmp
clc
inc
sbb
inc
cmp
inc
cmp
adc
jmp
mov
inc
sbb
push
movsl
and
fmull
movsb
and
cmpsb
addr16
sub
push
call
add
and
movsb
xor
std
mov
dec
arpl
sbb
xor
mov
mov
lea
dec
push
jl
push
push
lea
add
add
and
push
das
and
jnp
and
or
add
jecxz
add
xor
int
popf
adc
ljmp
xchg
lret
and
scas
xchg
and
sub
push
and
and
push
fsubr
mov
xchg
add
int
sub
lds
push
clc
out
mov
push
pop
sbb
scas
mov
and
mov
and
outsl
push
jg
lret
mov
adc
jae
pop
lea
sbb
jae
inc
xor
pusha
pop
push
rcll
jl
cmp
adc
and
rcrb
and
scas
add
imul
push
or
jmp
popf
xchg
push
jmp
and
insl
jnp
and
call
call
cmc
mov
jnp
loopne
jae
stc
mov
pop
adc
cli
jge
push
jae
xor
roll
out
push
dec
add
adc
and
mov
push
leavew
adc
add
andl
test
add
data16
enter
test
mov
cmp
jmp
push
mov
ret
and
adc
or
jmp
aaa
push
mov
adc
bound
sarb
inc
movl
loopne
xchg
iret
mov
std
xchg
pop
or
jle
push
adc
decb
movsb
add
and
add
push
flds
sbb
and
or
sub
out
or
call
sub
and
testl
ret
sub
insb
sbb
push
call
lds
push
insb
xchg
mov
dec
incl
lret
ja
push
xchg
ret
mov
andl
scas
and
xor
push
lea
xlat
pop
std
add
jle
add
add
add
insb
scas
loope
add
outsl
add
mov
or
sbb
cld
xchg
loopne
mov
xor
call
jl
xchg
or
imul
mov
mov
inc
call
cmpb
jae
add
mov
cmp
fs
add
or
imul
daa
xchg
loopne
ficomps
sub
out
fldt
dec
sbb
mov
cmpsl
call
int3
scas
insb
inc
sbb
dec
nop
inc
popf
add
mov
ret
xchg
push
out
xor
movsb
pop
mov
fidivs
fldt
jmp
jp
bound
lods
gs
adc
mov
shlb
add
popl
add
callw
adc
bound
std
adc
push
rclb
fnop
jmp
sahf
and
movsb
jmp
xchg
push
jmp
mov
mov
cmp
adc
jmp
pop
loopne
lds
pop
lds
jmp
mov
sarb
popa
mov
add
pop
push
mov
iret
jae
jecxz
imul
or
adc
ljmp
add
mov
mov
mov
mov
aas
pop
mov
mov
jecxz
mov
and
xchg
or
pop
outsb
mov
out
cmp
mov
jl
in
mov
push
push
fnsave
addb
jecxz
and
out
jne
lea
mov
fs
add
scas
pop
movb
xchg
and
addb
or
rclb
jp
and
test
and
jae
add
and
jbe
or
mov
or
mov
push
add
mov
adc
push
add
add
insb
mov
incl
mov
cltd
inc
out
xor
add
and
flds
scas
subl
mov
and
push
xor
rorb
inc
sub
in
lods
jecxz
fnsave
sub
pop
sub
xlat
mov
mov
mov
addr16
testl
lret
sysenter
sub
inc
sbb
scas
out
repnz
aam
add
mov
mov
mov
and
lahf
or
lret
aaa
and
aas
fwait
mov
xor
xchg
ret
ret
sub
add
loop
inc
std
sub
jmp
add
mov
cmp
and
jmp
ret
jne
in
mov
lret
addl
xor
jns
adc
lahf
mov
and
xchg
add
addr16
sub
add
xchg
mov
xorb
mov
shll
dec
adc
dec
adc
pusha
dec
sbb
xor
pop
add
and
mov
incl
mov
jnp
into
push
imul
inc
add
imul
xor
int3
and
push
inc
cmp
int3
push
push
xor
and
sbb
insb
cmp
lcall
push
icebp
mov
pop
mov
xor
add
sbb
inc
add
test
add
mov
and
push
ja
mov
ja
add
push
ja
rcrl
ja
lret
push
imul
and
or
mov
and
aam
sbb
pop
or
add
inc
call
outsl
inc
incb
add
push
into
cmp
sub
filds
xor
fdiv
ljmp
sub
push
xor
lret
xorl
or
xchg
movb
and
sub
fisubrl
out
xor
out
sub
mov
out
mov
adc
sub
pusha
mov
jg
xchg
fdivl
mov
adc
xor
push
push
fucomip
mov
and
mov
test
lcall
sub
hlt
mov
imull
mov
je
sti
repz
js
sub
sub
add
scas
xchg
add
das
mov
lods
xchg
xor
jnp
jae
aaa
mov
inc
cltd
inc
or
jmp
int3
or
int3
or
sbb
push
inc
sbb
sub
fs
mov
or
mov
or
jl
add
stos
mov
adc
mov
jb
add
jl
or
call
jle
mov
sbb
addr16
dec
jbe
lahf
add
lea
test
jne
jne
xchg
je
mov
xor
cmp
adc
add
lahf
mov
mov
notb
push
jmp
call
pop
inc
jno
push
jge
jne
ret
popf
notl
xchg
je
or
or
mov
lods
mov
ret
push
mov
xchg
je
test
je
or
push
jmp
pushl
push
jae
out
cmpsb
mov
jo
rol
ret
fmuls
sub
xor
cmp
jl
pop
mov
incl
test
adc
je
adc
prefetcht1
pop
and
addb
dec
shrl
mov
and
sti
jns
mov
add
mov
push
cmc
xor
jg
xchg
cli
aam
mov
push
out
adc
and
addr16
add
lods
add
fistps
outsb
jno
jb
ss
add
ss
or
xor
mov
mov
lods
ret
adc
lret
pop
je
ret
adc
jnp
andl
out
push
push
or
insb
addr16
jnp
jb
out
xor
mov
adc
scas
addr16
mov
jno
pop
cmpsb
idivb
maxsd
push
bound
js
lret
add
out
je
ja
out
insb
lds
test
add
cmp
pop
add
sbbl
xchg
nop
inc
call
insb
in
jp
jb
jle
call
pushf
repnz
add
lahf
jp
fstps
out
inc
or
xlat
dec
push
add
and
xchg
addr16
pop
pushf
cmp
scas
push
je
dec
jnp
scas
jne
cmpsb
loope
mov
arpl
dec
call
loope
mov
cmp
rclb
jno
jbe
jno
jbe
jno
xchg
out
loopne
inc
jbe
dec
push
inc
and
push
sbb
rcl
and
aaa
pop
and
mov
cmp
mov
mov
mov
mov
mov
je
xchg
jb
jge
mov
out
sub
add
addb
push
pushl
orl
test
mov
lock
je
sar
pop
scas
push
add
arpl
and
jns
test
sub
push
xor
and
add
jo
cmc
addb
psubw
xor
stc
test
and
outsl
sub
add
push
pop
lods
lahf
adc
test
add
pushf
adc
xor
stc
out
mov
jmp
pop
je
push
add
scas
push
int3
mov
and
int
test
sarl
push
sub
jno
mov
les
sub
cld
out
das
enter
cld
stc
out
in
jmp
jmp
jo
int3
pop
fs
in
daa
clc
shl
or
pop
bound
push
jp
pop
xchg
scas
call
mov
scas
out
pushf
or
push
jl
mov
movsl
or
sbb
pop
xor
test
dec
sti
pop
jl
out
add
lods
add
les
test
lods
mov
xchg
test
lods
addr16
pop
fmull
call
inc
movb
lods
out
dec
cmc
aam
pop
call
lods
mov
mov
repz
add
lods
addr16
fs
fs
daa
push
lcall
insl
add
imul
push
push
insb
out
inc
and
test
cmp
and
mov
xor
dec
mov
insb
add
gs
xchg
pop
push
cmp
adc
imul
mov
das
rcrb
mov
jmp
call
push
push
cs
adc
inc
and
adc
and
add
popa
xor
data16
push
mov
cmp
imulb
sub
jne
sbb
aaa
addb
adc
push
or
and
mov
lret
call
call
jne
xor
pop
roll
dec
and
push
pop
push
mov
test
out
pop
add
xor
and
jle
shrb
cli
inc
ja
rclb
fidivrl
pop
and
test
or
add
pop
pushf
je
add
jge
lret
lea
push
xor
jl
mov
lds
cmc
push
iret
stc
in
sbb
jnp
jmp
addr16
rolb
push
and
push
and
arpl
out
mov
push
adc
pop
mov
psubb
add
js
add
sti
pop
out
repz
out
sti
pop
idiv
repz
idiv
fistpl
out
rcrl
out
fistpl
idiv
rcrl
negl
imul
lcall
xchg
pop
jmp
and
scas
seto
pushl
xor
jae
and
add
add
std
mov
lods
addr16
add
stos
and
popa
mov
jmp
bound
dec
adc
jecxz
sbb
lods
addr16
mov
adc
scas
std
std
mov
std
jmp
sub
std
data16
mov
movsb
jmp
add
pop
call
mov
add
xlat
jp
xchg
xlat
jp
mov
jp
mov
mov
jp
add
jno
cmp
mov
scas
mov
in
call
mov
xor
add
mov
xchg
decl
jno
iret
repnz
bndldx
add
xchg
addb
sbb
push
xchg
into
jp
and
cmp
and
add
push
xchg
int
and
lds
jno
push
inc
and
sbb
call
add
push
scas
out
inc
jnp
les
push
adc
inc
mov
cvtps2pi
and
and
jns
loopne
jnp
xchg
ss
pop
xor
mov
sub
imul
jae
ret
and
mov
sub
mov
and
lea
repz
mov
and
push
cmp
mov
and
call
push
push
add
scas
push
jns
fists
add
ret
dec
fcom
data16
addr16
and
cld
push
andb
add
addr16
cmp
and
jbe
add
add
xor
lods
fs
pop
outsl
jb
add
rorb
add
addr16
test
out
xchg
adc
scas
jns
inc
and
out
and
idivl
popf
cmc
out
clc
insb
inc
cld
push
mov
faddl
shll
cmp
out
addr16
movsb
out
xor
push
cwtl
add
cwtl
stos
subl
imul
fimull
cmpsb
and
add
jbe
xchg
xchg
jbe
cmp
push
jbe
cmp
add
je
call
sti
mov
in
lock
addr16
adc
std
stos
push
mov
inc
sbb
inc
sbb
or
int
stos
lods
cli
jo
jge
push
push
lret
stc
ret
cli
je
mov
or
adc
es
dec
incl
pop
sbb
out
inc
add
or
sbb
testb
pop
sti
ljmp
or
adc
je
push
push
push
mov
jno
ljmp
je
addr16
jo
mov
add
out
std
je
repz
or
and
dec
and
adc
mov
inc
dec
sbb
out
inc
add
adc
push
movsl
stc
incl
or
jmp
mov
push
push
in
lar
sub
xor
fcmovbe
add
clc
push
loope
scas
push
divl
push
and
cmp
add
mov
add
jne
push
xor
aad
xor
or
call
push
arpl
fcomps
sarb
incb
mov
mov
xor
movb
dec
dec
shrl
fcoms
dec
scas
pop
inc
scas
data16
repz
jb
clc
xchg
dec
out
dec
clc
shrb
mov
cwtl
movb
addr16
fdivrs
outsl
push
shll
lret
idivb
and
ljmp
xchg
fdivrs
scas
in
cmp
xor
repz
js
pop
enter
jge
and
or
daa
cmpl
in
jo
incl
fs
idiv
pop
push
sbb
subb
sbb
pop
push
addr16
add
xor
pusha
gs
subl
cs
xor
jmp
inc
sahf
std
sbb
scas
add
push
aad
cmovae
pop
cmpsb
push
into
filds
xor
mov
idiv
je
add
push
sbb
fisubrs
jle
add
xchg
adc
push
add
scas
rcr
and
add
xchg
push
in
call
inc
push
inc
out
mov
inc
dec
mov
ljmp
mov
mov
shlb
orb
cmp
cmovp
add
xor
dec
mov
loop
cltd
xchg
rorb
mov
xchg
xor
out
add
out
push
scas
nop
inc
jg
mov
pop
mov
push
sub
pop
aad
push
pop
mov
add
inc
push
mov
addl
pop
sub
sbb
jns
add
and
imul
fimuls
std
lock
insb
pop
xlat
aas
mov
fmuls
pop
rolb
ss
call
mov
xchg
mov
daa
cld
addr16
repz
mov
sbb
adc
cmpsl
push
sub
pop
jns
scas
nop
adc
out
xor
cmp
jmp
pop
inc
hlt
rcrl
lcall
scas
loop
imul
xor
lods
xchg
mov
arpl
hlt
push
jmp
imul
mov
repz
enter
pop
std
jmp
out
adc
add
lret
mov
imul
call
stos
xor
add
pop
popf
mov
dec
cli
inc
jmp
pusha
cmp
stos
add
or
imull
hlt
movsb
push
inc
jmp
aaa
sub
arpl
icebp
std
jb
jecxz
add
jmp
fidivs
je
call
lods
incb
popa
push
repnz
mov
pusha
icebp
std
gs
test
fbstp
call
out
addr16
das
decl
cli
inc
mov
add
cmp
add
jmp
std
call
and
cmp
add
cmp
incl
xchg
jmp
mov
dec
enter
mov
call
jmp
mov
outsb
jecxz
add
jmp
std
incl
out
or
and
mov
sahf
sbb
add
jmp
std
call
call
inc
mov
scas
sub
mov
mov
gs
int
scas
incb
jmp
xchg
lret
loope
aas
scas
adc
scas
incb
jmp
jnp
dec
adc
cmpsb
and
mov
stos
or
cmc
in
cmp
scas
cmpsb
or
scas
incb
jmp
mov
push
inc
push
cmp
scas
push
pop
scas
incb
jmp
xchg
lret
and
addr16
call
jl
xchg
scas
fdivl
mov
xchg
rol
lcall
scas
imul
or
sub
mov
outsb
mov
movsb
out
shl
mov
shrb
mov
jecxz
call
mov
movsb
ljmp
scas
fcompl
mov
inc
jge
mov
sarb
push
lock
and
add
add
leave
insb
push
je
jb
fadds
jmp
mov
roll
jmp
scas
xor
cmp
das
popf
jns
add
sahf
lcall
out
clc
fldt
data16
out
std
jmp
push
bound
filds
jmp
loope
das
add
jecxz
mov
aas
fmull
bound
std
xchg
sbb
push
push
push
filds
jmp
or
cmp
inc
cli
inc
inc
int3
mov
test
add
shll
ret
fidivs
mov
or
mov
add
xchg
rolb
callw
imul
mov
jnp
call
mov
sub
pop
adc
add
sti
fucompp
push
pop
mov
mov
gs
push
pop
subl
push
cmp
push
mov
loopne
imull
in
add
lret
sti
xor
imul
out
xchg
pop
lea
mov
add
mov
mov
lods
lods
pop
xor
pop
test
sub
or
mov
arpl
sbb
push
mov
push
mov
clc
repnz
mov
jp
jae
jns
pop
push
repnz
test
cmp
jns
push
adc
mov
mov
and
addr16
int3
dec
fimull
lret
divl
movsb
ret
testl
pop
xchg
insb
rorb
imul
mov
or
sbb
imul
out
mov
mov
mov
inc
movl
lods
cmp
xor
addr16
int3
cmp
inc
fs
mov
cmp
popa
roll
xchg
mov
dec
adc
mov
cmp
jae
mov
add
lods
cmp
pop
mov
add
xorl
cwtl
dec
xor
popa
js
leave
xor
mov
and
and
mov
adc
in
push
push
push
sarl
mov
ret
xchg
or
dec
jmp
inc
ljmp
repz
jb
add
addb
ljmp
das
stos
or
and
lea
sub
adc
sub
fsubrp
add
adc
add
push
xor
dec
jle
pusha
clc
mov
loopne
jmp
into
mov
cltd
mov
inc
fstl
jb
mov
dec
sarb
rcl
andw
data16
ret
cmp
or
test
add
lods
add
mov
jmp
incl
data16
mov
jg
mov
filds
dec
fldl
xchg
int
add
dec
ds
ret
add
lods
jg
hlt
add
mov
mov
xor
scas
or
inc
out
xor
pop
mov
lods
mov
push
mov
mov
pop
add
jge
add
push
pop
jne
mov
jle
mov
and
pop
sbb
leave
pop
sub
push
pop
jmp
jecxz
add
mov
test
mov
add
imul
gs
xor
or
jl
fcoms
adc
aaa
movsb
or
adc
fmull
mov
pop
arpl
scas
addr16
arpl
pop
sub
push
cwtl
add
gs
out
inc
push
scas
xor
mov
jo
ficomps
pop
subl
pop
mov
call
out
dec
imul
out
cld
pop
push
pushf
push
push
jbe
jo
in
dec
add
sbb
and
imull
add
aam
xor
lods
loop
mulb
pop
xor
push
filds
das
in
cltd
stos
add
mov
in
out
popf
nop
mov
pop
movsb
lods
xor
in
fistps
fiadds
call
mov
ja
fs
cmpsl
aaa
call
push
jp
mov
add
mov
lock
and
push
add
shl
and
add
inc
jge
add
sub
test
ret
inc
imul
sbb
add
imul
mov
push
decl
fisttps
inc
push
fs
andl
icebp
adc
imul
or
and
inc
add
cmpb
aaa
jmp
sbb
inc
mov
and
adc
or
jno
pop
scas
and
xchg
jno
and
in
add
xchg
sub
add
neg
mov
ret
in
adc
sarb
xchg
loope
mov
xchg
mov
iret
cmp
inc
aas
add
sub
mov
sub
add
bsf
mov
je
inc
outsl
test
rolb
pop
mov
sub
sti
push
out
mov
and
cmp
cmp
add
pusha
sbb
sub
mov
mov
in
aaa
lahf
daa
out
clc
gs
ja
mov
push
mov
dec
pusha
shrb
int3
lahf
mov
add
stos
add
hlt
lret
iret
scas
addr16
jnp
jmp
js
in
daa
fldenv
in
or
scas
addr16
sub
dec
add
repz
mov
push
jmp
inc
mov
jecxz
dec
jmp
add
aaa
sub
lds
sbb
sti
mov
lods
call
std
out
xor
call
adc
pop
enter
lods
repnz
fs
xor
lods
ljmp
lods
repnz
fs
jmp
xor
jmp
mov
icebp
stc
push
in
insl
out
data16
das
das
and
mov
test
mov
add
xchg
lea
bound
add
push
sub
psrld
jge
inc
addr16
lods
push
orb
addr16
lea
sub
push
jnp
add
imul
imul
and
pop
pop
and
ds
xor
data16
fldl2e
lds
mov
xchg
and
ljmp
scas
je
wrmsr
bound
add
rolb
mov
scas
rolb
icebp
into
xchg
add
add
movsb
push
push
js
jbe
mov
dec
cmp
push
aad
push
sub
and
adc
je
add
call
rcrb
add
add
hlt
push
adc
imul
mov
dec
adc
mov
es
dec
int
cwtl
addr16
movsb
hlt
imul
imul
xchg
sub
push
scas
ljmp
mov
add
lods
addr16
or
in
add
mov
cmpsl
sti
sub
loopne
shlb
cltd
add
or
scas
int3
jns
mov
pop
and
loopne
daa
mov
in
xor
xor
lret
jnp
loopne
jnp
mov
stos
addb
in
mov
add
xlat
mov
mov
mov
mov
in
mov
mov
loopne
stos
pop
in
in
push
fdivrs
mov
mov
addr16
aas
sbb
neg
das
sbb
jmp
roll
ljmp
sbb
adcl
jo
orl
adc
pop
out
sub
add
lods
in
leave
add
in
out
cmc
jmp
mov
xor
sub
add
or
shl
popl
arpl
je
mov
pop
jl
or
loopne
shlb
js
pop
fisttps
push
xchg
jno
push
fnsave
orb
add
insl
icebp
pminub
add
repnz
aad
incl
ret
push
jl
push
aas
inc
cld
add
inc
xchg
xor
mov
fwait
mov
test
add
jge
in
xchg
addb
hlt
sbb
mov
pop
add
iret
add
xor
cmc
out
sbb
add
sahf
clc
mov
insl
in
inc
xchg
or
mov
rdpmc
add
test
iret
add
sub
jno
mov
mov
sahf
push
movl
rcl
mov
add
xlat
lds
jae
or
and
add
mov
movsb
test
mov
jae
add
jge
test
insb
shrb
arpl
push
mov
and
push
movl
cmp
mov
mov
fwait
hlt
lds
fsub
add
ja
pop
out
mov
add
test
leave
add
addr16
sub
xor
mov
jo
jecxz
cmp
add
xchg
inc
push
mov
insl
mov
jmp
mov
add
and
push
arpl
push
add
mov
fidivrs
mov
jge
lods
insb
test
pop
insb
test
jmp
add
mov
hlt
cmp
add
mov
dec
out
movsb
mov
adc
std
insb
or
and
add
xor
imul
rolb
mov
dec
mov
out
adc
add
fsubs
mov
and
mov
pusha
dec
or
sbb
mov
call
test
rclb
or
rolb
xchg
sub
push
lea
push
call
and
push
add
lods
or
inc
fisttps
xchg
xchg
pop
in
inc
adc
add
sbb
scas
iret
add
pop
insl
inc
decb
add
xor
push
adc
inc
aam
add
add
jno
jns
push
clc
lcall
push
xor
sbb
jns
ret
lahf
jne
mov
iret
add
scas
or
repz
jp
stos
inc
mov
jo
dec
adc
rolb
pop
insb
xchg
ja
inc
mov
mov
push
add
pop
mov
addr16
inc
lods
addr16
sti
adc
out
mov
mov
icebp
mov
jb
mov
addr16
cld
lock
add
lcall
cmp
into
sahf
ss
jbe
add
and
mov
ljmp
cmp
out
test
and
add
jmp
mov
cmpsl
jecxz
cld
xchg
mov
adc
fadds
clc
movsb
fcoms
and
push
ljmp
mov
shrl
mov
shrb
adc
xor
aad
push
push
jb
in
std
push
out
out
xorl
or
mov
js
inc
stc
adc
fs
push
or
data16
hlt
mov
jmp
cmpsl
iret
or
sbb
sub
add
push
xor
stos
ljmp
cmp
sarb
addr16
scas
stc
push
mov
push
jno
push
mov
orb
xchg
in
arpl
jmp
adc
or
lea
xchg
dec
lea
push
adc
loopne
sbb
loope
push
push
ret
mov
fimull
imul
or
mov
cmp
sti
ret
call
psubb
cwtl
imull
rorb
sub
mov
sarl
sub
in
scas
pop
fiaddl
fwait
iret
stos
adc
sbb
push
push
or
ret
mov
or
imul
aas
imul
rcl
jno
sar
clc
inc
dec
or
ffree
mov
hlt
mov
mov
addb
pop
iret
add
rorb
insb
push
inc
scas
imul
push
pushf
pop
inc
in
addr16
push
add
jns
add
imul
loope
stos
sbb
or
insb
pop
mov
pushf
insl
bound
test
adc
sub
or
scas
in
push
daa
out
test
lods
call
inc
lods
addr16
cmp
cmp
addl
out
addr16
sub
push
or
mov
out
add
push
adc
addr16
loope,pt
add
xor
add
lods
aaa
push
es
mov
orl
cmp
pop
xchg
flds
sbb
filds
fiadds
in
add
or
xchg
mov
aam
sub
and
and
add
mov
fs
cmp
insb
out
and
pop
sub
jl
std
cld
xor
inc
jmp
aas
sub
mov
mov
pop
mov
aad
lret
call
shlb
je
lds
adc
mov
mov
in
sub
jmp
jns
push
push
inc
and
mov
test
mov
std
incl
mov
mov
pop
adc
sub
lods
and
push
add
push
cmpl
inc
lea
rolb
scas
ret
sar
outsb
mov
gs
js
mov
ljmp
mov
mov
or
push
mov
loopne
mov
rcrb
or
outsl
mov
shll
mov
in
and
dec
adc
mov
add
inc
scas
rorb
insb
call
and
movsb
out
dec
addb
aas
roll
pop
xor
and
mov
mov
rolb
scas
cmp
cmpsl
mov
xchg
cmpsl
sub
push
add
rcr
and
ficomps
call
or
cmp
adc
scas
stos
jmp
sbb
xorb
fucomi
addr16
insb
mov
xchg
mov
pop
adc
pushf
loopne
out
nop
movsb
or
ss
in
out
mov
jb
mov
inc
cmp
mov
aad
cmp
add
jl
call
pop
out
add
enter
mov
pop
jb
xor
in
in
aad
cmp
push
adc
mov
dec
roll
pop
push
shll
test
shl
mov
jmp
mov
das
ret
push
sub
lods
jmp
fiadds
xchg
jmp
inc
test
lods
loop
add
add
and
ss
sahf
adc
test
rcll
cmpl
jns
scas
data16
sbb
popf
adc
inc
stos
lret
mov
xor
int
add
test
dec
jmp
and
mov
and
mov
mov
add
mov
add
sub
push
push
mov
and
loope
mov
mov
orl
cmc
or
outsl
pushl
mov
mov
inc
xchg
test
jb
xchg
mov
stos
jmp
xchg
mov
xchg
shr
add
movsl
repnz
lcall
je
roll
stc
and
subb
push
add
cmpl
shrb
btr
pushl
ret
loope
ljmp
addb
pop
out
shrb
mov
or
pop
mov
addr16
jp
add
insb
xor
push
mov
ljmp
scas
ljmp
test
xor
aad
add
mov
popf
jo
mov
cmp
cmpsl
scas
mov
bound
ljmp
jb
xor
daa
sub
lret
sbb
xorl
js
imul
jge
pushf
daa
or
bound
sub
aam
mov
int
lods
scas
cmp
lcall
add
pop
test
add
push
bound
data16
stos
test
pop
pop
mov
pop
cld
test
inc
jmp
outsb
pop
push
push
scas
fiaddl
or
mov
jecxz
xor
scas
push
adc
ss
adc
int
xchg
jecxz
cmc
rorb
mov
mov
call
call
into
adc
daa
add
add
xor
inc
xchg
je
dec
and
mov
ss
imul
ret
dec
mov
leave
aam
add
shl
lock
std
adc
mov
arpl
push
filds
scas
mov
or
adc
test
jl
pop
add
loope
and
fsts
add
adc
out
add
imul
sarl
shrb
sbb
push
js
imull
lods
mov
out
mov
sub
or
pop
ss
add
jge
push
adc
shrb
fimuls
cmp
mov
lret
or
xor
loopne
xchg
add
imul
dec
in
add
push
stos
paddq
or
pop
push
jb
sub
rorb
test
inc
pandn
add
pop
popf
shlb
gs
rorb
call
mov
fidivs
sub
mov
lret
sbb
es
xchg
add
cmpsl
add
sub
fldt
out
push
pop
sbb
cli
xor
mov
bound
sub
jmp
add
aaa
add
nop
or
insl
ss
pop
cs
mov
sub
addr16
out
and
push
push
xor
and
fidivrs
mov
xchg
xchg
sub
lods
jecxz
xchg
or
test
push
mov
or
movsl
mov
push
inc
push
test
in
mov
das
mov
inc
or
shll
leave
les
add
mov
add
push
pop
adc
or
int
add
sbb
ja
adc
xor
loop
or
lret
std
cmc
or
adc
jl
jo
jbe
dec
inc
adc
add
dec
jp
add
mov
mov
mov
lret
and
loope
call
test
push
fs
lds
call
fisubl
jbe
test
inc
cld
scas
mov
dec
sub
xor
scas
sar
mov
sub
sub
dec
cmpsl
insb
mov
xor
or
pushf
lock
pop
incb
mov
aas
mov
sbb
mov
fstl
adc
dec
adc
loope
xor
out
rolb
jl
jnp
mov
jo
das
dec
xchg
lods
adc
mov
test
lret
enter
add
out
in
mov
add
repnz
dec
mov
inc
and
in
fildl
jmp
inc
lods
addr16
hlt
pop
push
test
dec
mov
mov
call
cmc
adc
roll
ljmp
add
shr
hlt
push
out
call
add
lret
fstpl
out
stc
outsl
bound
loop
add
movb
cmpsl
repnz
fnstsw
call
gs
cmp
bound
call
insl
insb
cmp
lods
rolb
mov
mov
jne
ss
add
or
call
bound
outsb
call
ficoms
pop
sub
iret
push
xchg
lods
mov
xchg
adc
and
test
sbb
jg
in
pop
add
dec
add
aam
add
adc
mov
adc
xchg
xchg
add
push
inc
ret
pop
add
pavgb
je
into
incl
xor
sub
ret
push
pop
ret
sub
call
popa
add
push
push
mov
insl
push
sbbl
or
mov
add
xchg
mov
int
mov
int
mov
iret
adc
jge
adc
sub
mov
xchg
add
add
ss
add
add
cs
dec
push
movsl
and
into
add
lret
inc
add
sub
incl
and
sbb
xorl
test
loope
scas
into
cmpl
into
add
sub
out
jmp
imul
adc
cmp
setge
scas
dec
inc
jae
xor
mov
test
mov
in
mov
cld
sbb
out
sub
mov
cltd
pop
hlt
sub
xchg
iret
scas
fwait
scas
addr16
push
out
mov
movsl
sbb
add
hlt
ret
lret
scas
addr16
sub
pop
add
addr16
xchg
push
pop
shl
imul
gs
ss
in
sub
adc
mov
mov
les
addl
scas
addr16
in
mov
inc
in
mov
shl
inc
jmp
lods
into
push
ficomps
out
loope
cmp
jb
lea
sub
imul
and
sub
out
inc
lds
inc
int
pop
mov
pop
xchg
add
rol
adc
sub
cmp
cmp
push
es
imul
aad
aas
inc
jmp
lods
out
stos
jmp
jmp
pop
cmc
sti
inc
xchg
cmp
data16
addl
pop
popf
inc
in
adc
imul
push
testb
movl
inc
adc
mov
dec
mov
shrb
add
mov
push
mov
clc
orl
or
pop
jmp
inc
adc
inc
popa
sub
das
pop
xor
aam
jge
mov
sub
shrl
stc
mov
lods
jbe
js
std
push
mov
xor
push
gs
mov
in
iret
push
add
jbe
push
lds
push
jb
mov
push
push
sub
push
cmp
pop
sub
lcall
xchg
jg
push
and
cmp
mov
mov
movsb
and
je
mov
faddp
test
push
mov
cmpsl
xchg
ljmp
out
leave
sbb
lods
out
cltd
cmp
in
xorl
xchg
repnz
sbb
nop
cmp
out
ss
rcll
add
shl
mov
lcall
push
ss
ljmp
and
push
mov
mov
int3
outsl
jo
mov
cmp
mov
inc
add
addr16
shll
xchg
add
sub
lods
rcrb
sub
inc
add
mov
addb
out
and
push
add
lods
push
mov
pop
lret
cmp
fstpt
inc
add
mov
fsubs
xchg
shll
call
insb
insb
xor
and
or
jb
xchg
and
mov
and
adcb
call
mov
cmp
lods
mov
xor
mov
outsb
into
xor
js
push
rcll
push
inc
rcrl
push
inc
rcrb
push
addr16
push
push
push
ljmp
cmp
add
mov
mov
add
int
sub
mov
xchg
cmp
stc
out
ljmp
test
jge
pop
pop
xchg
daa
cmp
push
imul
xor
xchg
mov
repnz
push
addr16
imul
stos
loope
cwtl
aaa
shlb
addr16
scas
into
jp
xchg
incb
mov
xor
inc
repz
lahf
sub
lret
push
roll
mov
ds
scas
xor
xor
jl
mov
inc
je
inc
lret
mov
adc
rol
and
jne
dec
ja
or
add
ljmp
addr16
cld
and
pop
call
mov
jl
sbb
pop
push
lea
aam
xor
jp
imul
int3
xchg
sarl
imul
jp
xor
and
daa
jns
pop
iret
or
sbb
in
xor
push
mov
add
int
loope
and
stc
frstor
jo
scas
addr16
add
daa
lock
push
push
popw
xchg
jns
add
push
es
ljmp
sub
addr16
fists
mov
into
call
js
push
fadd
stc
sarl
jno
jle
out
scas
addr16
pushf
add
jmp
fnstcw
aaa
and
in
inc
xlat
cmp
mov
fwait
add
jg
imulb
dec
cmp
push
subl
pop
mov
mov
sbb
inc
or
add
xchg
outsb
leave
daa
add
pop
iret
add
mov
cmp
and
pusha
push
adc
mov
mov
cs
add
xchg
inc
and
ds
and
xor
jb
dec
mov
cltd
sbb
adc
ljmp
decb
xor
add
jl
inc
loopne
jecxz
call
test
imul
mov
shlb
fwait
mov
sub
xor
add
imul
mov
sbb
pop
pop
push
les
aaa
ret
pop
sbb
and
push
cmp
add
add
repz
into
add
fs
add
and
sub
and
add
jge
pop
scas
into
add
mov
mov
nop
inc
adc
mov
push
lahf
neg
addr16
movsb
ljmp
push
pop
and
in
comiss
cltd
lods
out
sub
scas
inc
adc
xor
lods
lods
ljmp
push
daa
out
xor
test
cmp
lods
mov
in
add
pushf
daa
out
xor
rclb
dec
mov
pop
inc
fldt
push
add
mov
imulb
push
incl
add
in
jmp
iret
cmc
cs
addr16
sub
subl
and
and
jb
mov
cli
outsl
pop
fldenv
sub
fidivs
mov
dec
or
mov
mov
add
fisubrl
out
add
jmp
push
pusha
loope
or
add
mov
mov
insl
add
adc
add
add
imul
push
jge
and
nop
pushf
repz
mov
inc
leave
add
mov
jno
mov
sub
in
push
sbb
imul
jmp
fwait
mov
in
jnp
jmp
sti
in
pop
push
pop
out
sub
add
stos
push
add
mov
mov
cmp
add
pop
pop
push
and
sub
test
xchg
test
mov
xrelease
aas
scas
dec
sbb
ljmp
int
inc
scas
mov
repz
jae
scas
into
push
adc
lcall
outsl
lds
mov
mov
mov
enter
push
add
jmp
imul
cmp
cmp
shll
cmp
divl
bound
sub
hlt
sbb
in
bound
lods
pop
fs
mov
jmp
lret
nop
add
pop
xchg
cmp
push
loope
jmp
fdivs
out
mov
xor
add
roll
push
jb
nop
popf
adc
in
fisttpl
and
sub
stc
add
fldcw
jmp
mov
fs
adc
push
push
jle
cmp
push
call
sub
lods
sub
mov
lods
addr16
cmp
bound
jmp
lods
shlb
jns
or
jmp
aaa
loopne
call
lahf
add
mov
jmp
and
call
inc
lret
lods
addr16
sbbl
je
add
cli
add
or
je
int
lea
push
push
call
pop
movsb
mov
loopne
call
mov
jno
xchg
loope
pushl
push
in
and
test
sub
fldcw
inc
call
pop
fiadds
inc
push
inc
in
dec
xchg
jmp
lods
pushf
xchg
add
add
std
call
enter
add
mov
jecxz
inc
sub
push
push
xor
add
cmp
and
mov
enter
shl
in
stos
add
xor
or
enter
mov
add
pop
sti
pop
clc
xor
add
cmp
adc
pop
add
mov
mov
mov
out
mov
popa
xor
add
mov
add
addr16
cmp
out
cmp
mov
pop
xlat
cmc
mov
sahf
jae
xor
jmp
cwtl
addr16
icebp
in
jmp
cmp
mov
pop
add
andb
outsb
out
mov
pop
insb
dec
pushf
sbb
add
adc
aam
sub
pop
fcomip
mov
pop
jb
xor
pusha
shlb
adc
mov
out
pop
aas
jmp
add
jbe
call
mov
cli
call
xor
pop
dec
push
pop
mov
and
push
cmp
jp
ss
mov
add
out
je
and
fiadds
lods
inc
lcall
mov
inc
stos
faddl
pop
jmp
cmp
sbb
fwait
and
add
jecxz
cmc
and
dec
jmp
lods
mov
lods
jle
add
arpl
cli
insl
mov
jnp
ljmp
outsl
sub
cmpsb
or
add
push
push
lea
xor
adc
pop
inc
sarl
lea
inc
push
call
popf
and
addr16
add
insl
in
or
mov
push
push
rcr
and
mulb
pop
test
push
dec
out
and
mov
call
inc
lock
push
mov
lds
add
mov
xchg
xchg
mov
nop
out
mov
lods
cmp
mov
add
and
jle
sti
sbb
ljmp
cmpsl
mov
push
add
jns
dec
mov
xchg
popl
and
sub
sub
jmp
test
inc
test
dec
jmp
pop
clc
iret
jg
sbbb
jge
cmp
push
jmp
jg
dec
mov
mov
cs
sub
mov
add
add
or
hlt
mov
mov
add
testl
scas
fbld
xchg
mov
daa
sub
loope
pop
add
lods
adc
mov
pop
fcmovb
add
jecxz
push
pushf
cmp
lock
bound
xor
xchg
lods
xor
iret
add
add
add
lods
adc
das
xchg
jg
jmp
insb
cmp
jb
xchg
lods
stos
jae
sub
nop
lock
pop
stos
std
adcl
into
adc
roll
loopne
jae
add
push
jmp
aaa
add
call
push
fidivrs
push
pop
fimuls
push
mov
cmpsl
sbb
jg
stos
std
imul
add
stc
test
fsubrs
sbbl
and
mov
add
cmp
lods
push
push
popa
mov
push
call
or
str
data16
hlt
pop
leave
les
mov
bound
add
xchg
lods
add
lahf
and
push
cltd
add
mov
push
push
mul
sti
call
arpl
xlat
addb
scas
mov
jle
scas
jg
and
lea
mov
inc
pop
add
inc
mov
add
inc
test
scas
mov
cmpsl
sbb
mov
mov
mov
insb
aas
pop
cmp
mov
cmp
scas
mov
inc
jg
pop
add
lds
lods
je
adc
push
in
inc
inc
or
mov
jecxz
add
addr16
enter
imulb
add
scas
aad
mov
and
scas
addr16
pusha
movsb
jno
mov
sbb
cmp
in
andl
add
loope
mov
rcrl
mov
jbe
xchg
add
lods
movb
mov
stos
insl
cmp
loope
mov
loopne
addr16
outsb
inc
stc
movsl
jmp
aam
add
cmpsl
imul
sub
jecxz
loop
jmp
inc
movsl
adcb
test
je
sub
xor
pop
jne
and
sub
push
or
ds
and
jne
sub
inc
mov
cmpsl
std
popf
add
es
lret
addb
sbb
add
inc
cmp
cmpsl
std
push
cmpsl
adc
xor
es
or
js
sub
je
in
inc
push
mov
in
mov
ret
stos
std
decl
out
mov
cli
cmc
test
incb
outsl
jns
incl
loop
leave
pop
stos
std
lock
stos
std
or
xchg
test
std
xchg
std
xchg
xchg
test
std
push
xchg
std
ret
std
fcoml
std
cmc
inc
test
std
adc
std
xor
std
subb
fs
je
jge
mov
inc
rcrb
jg
pop
jns
sarl
dec
shll
sbb
add
int
arpl
dec
scas
adc
jae
adc
add
ss
mov
xchg
fldt
cmp
je
sbb
pop
xor
iret
and
adc
xor
xor
xchg
or
xchg
push
std
pop
aaa
aad
xor
sbb
mov
mov
jl
mov
rcll
or
mov
dec
sbb
in
test
sti
out
sbb
mov
fcmovnbe
in
fnstsw
dec
jecxz
jb
jo
int3
dec
fs
lods
and
mov
lock
je
ret
lret
arpl
scas
addr16
cmp
jp
sbb
push
repnz
cmpsl
add
je
add
sub
in
xor
clc
add
jnp
add
mov
jmp
add
inc
jne
jmp
add
imul
out
mov
call
add
push
adc
and
in
icebp
out
ljmp
addl
add
pop
and
fadd
out
in
lods
andb
and
add
inc
sbb
repnz
cli
cmp
mov
add
out
push
int
out
inc
sbb
stos
xor
xor
jecxz
add
pop
push
or
lods
push
mov
lcall
xor
add
adc
mov
cli
and
ljmp
outsb
lods
aad
pop
mov
add
sub
add
jle
call
jge
int3
mov
data16
push
movsb
push
test
test
je
push
repnz
in
push
fldl
jl
test
mov
inc
jae
adc
sbb
mov
mov
sti
jg
pop
call
jg
xor
mov
or
push
icebp
incl
add
rcr
lods
dec
call
mov
enter
popl
xchg
fcoms
jmp
xor
inc
mov
push
popf
and
jp
shrl
jae
sahf
add
xor
jp
mov
mov
mov
insb
sub
dec
sti
cld
sub
out
scas
in
out
addr16
xchg
mov
sti
addb
sbb
jg
dec
pop
jg
dec
and
mov
mov
loope
push
add
cltd
in
sub
jl
dec
cli
mov
in
cmpsb
sbb
xor
imul
jnp
mov
adc
nopl
sub
push
xor
add
bound
adc
jae
insl
jns
push
pop
out
dec
fisubrs
jge
pop
inc
adc
das
orb
lods
in
push
or
cmovl
into
cltd
sub
or
mov
or
and
dec
mov
scas
mov
subl
inc
xor
sahf
sub
fildll
mov
add
dec
mov
push
mov
shll
push
lret
call
sbb
or
test
notb
lcall
push
push
inc
and
push
dec
and
call
push
add
dec
jno
lea
sub
lea
mov
rolb
rcrb
mov
js
pop
leave
mov
add
test
clc
sub
popf
xchg
test
ret
popf
sub
ljmp
mov
mov
sbb
push
jns
lock
add
or
xchg
mov
test
xchg
push
cld
jmp
shlb
xor
pushl
sbb
push
popa
sar
inc
clc
push
movsl
and
lret
into
mov
add
adc
bound
jl
adc
lea
ja
jle
cmpsb
nop
add
imul
push
pop
roll
mov
sub
dec
mov
imul
or
call
or
jne
scas
icebp
cmp
mov
data16
out
sub
out
add
jecxz
or
popf
cmp
sub
fldl
and
pop
out
jo
arpl
insb
inc
fistpll
lods
mov
repnz
cmpsb
test
inc
out
jg
popf
xchg
pop
and
mov
out
das
mov
dec
fsubrl
rcl
popf
jbe
jne
std
xlat
xchg
decl
imul
les
repnz
imul
jmp
push
insl
and
pushf
std
jb
dec
ret
push
popf
or
jmp
inc
dec
cmp
mov
cmpsl
popf
std
dec
imul
ja
pop
nop
adc
aad
push
int
sbb
out
xor
in
test
inc
gs
add
outsl
fcomp
std
and
cmp
jno
adc
push
decl
lds
add
aam
cmpb
sarb
out
inc
inc
clc
les
punpckhbw
test
decl
call
fcomip
cld
incl
inc
add
sahf
jbe
loope
sarb
idivl
scas
nop
mov
xchg
test
and
add
aaa
mov
scas
nop
cmpb
add
jmp
cwtl
add
imul
add
out
xchg
add
sub
or
stos
fcoms
rclb
out
add
mov
in
test
mov
scas
nop
add
out
nop
jge
add
add
jno
fldl
jmp
cmpsb
add
sahf
in
hlt
sub
xchg
add
out
stc
mov
cltd
jno
mov
nop
psubb
adc
jns
inc
push
imull
out
mov
js
fnsave
movsl
in
scas
mov
mov
jge
push
cltd
sti
inc
in
idivl
call
xchg
pop
sub
arpl
cltd
test
xor
mov
and
or
pop
add
xchg
push
stos
add
add
xor
call
movsl
addb
cltd
andb
andl
add
in
add
inc
sub
call
xor
decl
mov
rcl
mov
add
roll
and
loop
loopne
stc
adc
stc
pop
xchg
pusha
daa
mov
out
fcomps
and
or
or
arpl
push
frstor
data16
adc
stos
or
movsl
mov
sub
cmp
mov
jo
enter
or
xchg
in
and
test
xchg
push
add
add
or
bound
inc
push
mov
jge
mov
dec
jno
shlb
std
or
push
idiv
stc
push
pop
and
cwtl
adc
das
stos
cmp
scas
mov
cs
movsbw
outsb
add
dec
test
mov
stc
lea
cmp
push
jmp
sbb
icebp
jg
data16
adc
std
das
sub
jo
dec
adc
push
xor
add
xchg
rorl
push
adc
leave
stc
lret
test
data16
and
add
addr16
mov
dec
cmp
xchg
movb
xchg
icebp
ja
out
push
arpl
cld
sbb
leave
jno
out
ljmp
fdivl
lods
sub
std
mov
addr16
mov
fs
leavew
icebp
data16
push
xchg
push
add
xchg
loope
jge
lods
sbb
shl
jmp
mov
add
jmp
std
pop
xchg
addr16
movsl
imul
push
push
mov
arpl
lods
lea
fwait
stos
add
xchg
bound
fiadds
das
mov
xchg
xorb
out
sub
dec
adc
inc
inc
dec
adc
inc
pusha
dec
out
add
adc
jmp
mov
pop
shrl
jle
das
icebp
jge
inc
fsubrl
dec
daa
jmp
lods
inc
xlat
mov
aas
das
icebp
jge
adc
dec
xchg
xchg
pop
dec
add
and
xorl
enter
adc
push
enter
test
or
add
test
inc
add
subb
jmp
or
mov
fs
or
add
sbb
decl
sub
jno
enter
fists
call
outsb
add
jnp
test
add
scas
add
add
adc
xorb
pop
icebp
ret
add
mov
scas
add
add
addb
cmpsb
addb
imul
or
add
lcall
cmp
imul
add
add
inc
sbb
ljmp
jg
push
das
xor
inc
push
fwait
aaa
lods
add
mov
mov
cmpsl
addr16
das
mov
add
sub
ljmp
fnsave
out
add
addr16
insb
bound
addr16
jno
cmc
call
pop
cmp
add
xor
push
jmp
xor
pop
sbb
lds
jmp
pop
out
inc
mov
movsl
inc
shrl
add
xchg
jmp
pop
cld
pop
addr16
fstpl
cld
loopne
lcall
imul
push
notb
adcb
andl
add
fs
jmp
xor
add
divl
out
stc
xchg
std
imul
std
mov
sub
add
test
sub
add
adc
cmpsl
insl
nop
push
idiv
and
jb
jg
jp
xchg
mov
mov
push
das
push
cli
pop
test
inc
mov
test
cmp
add
sbbb
and
leave
orb
or
mull
mov
movb
out
movsb
mov
push
outsb
jmp
or
add
test
add
pop
test
and
sbb
repnz
mov
iret
test
add
mov
jp
orb
dec
pop
push
test
pop
outsl
imul
leave
add
lods
xchg
add
or
std
das
pop
and
dec
add
dec
mov
mov
add
pushf
in
mov
mov
andb
std
jmp
or
std
add
sti
push
test
mov
inc
scas
jmpw
aad
adc
pop
addl
idiv
icebp
inc
add
mov
sti
popf
cld
test
ret
test
inc
mov
cmp
pusha
test
int
bound
and
sbb
and
lods
adc
ss
push
out
sub
mov
adc
mov
xchg
mov
add
stos
dec
sub
imul
ljmp
in
outsb
test
sub
icebp
rorb
fs
lea
clc
das
xchg
icebp
or
xor
clc
mov
inc
xchg
frstor
addr16
test
gs
test
addr16
push
add
das
jg
es
mov
xchg
jmp
xor
enter
out
jmp
addr16
cmpsl
stos
out
push
mov
rcr
inc
add
xlat
imul
imul
sub
je
aas
test
mov
lods
add
add
adc
add
sbb
jg
popa
or
jno
ret
inc
jne
xchg
xorl
insb
punpckhdq
cmp
fnsave
and
push
out
testb
sbb
mov
ficoms
xchg
adc
cltd
and
jmp
gs
add
jns
push
sti
jl
and
xchg
adc
pop
jg
jmp
incb
in
lret
incb
fstl
push
mov
cmovns
ljmp
mov
inc
es
add
sub
inc
and
add
or
mov
inc
lods
xchg
mov
and
jmp
cmpsb
adc
add
push
std
mov
mov
inc
scas
test
testb
mov
push
lret
mov
orl
add
push
sub
std
lock
in
add
adc
repz
mov
push
out
jle
xchg
xchg
cmc
and
in
mov
inc
roll
and
mov
andb
shll
stc
iret
pop
arpl
pop
mov
jmp
xchg
ss
das
mov
outsb
out
lods
add
addr16
rclb
out
jle
adc
mov
cmp
out
sub
push
or
pop
ljmp
out
je
sbb
or
rcr
call
sahf
ret
fmull
addb
inc
adc
add
test
stc
fcompl
scas
lods
push
jmp
out
in
add
lods
fimuls
mov
out
jp
cs
fistps
shrl
sub
cltd
jmp
mulb
incb
xchg
scas
or
out
and
sub
mov
push
movb
cmp
adc
std
xor
ffreep
rsqrtps
hlt
lcall
or
adc
and
sbb
pop
xchg
cmpsb
xchg
iret
test
mov
and
mov
inc
popa
or
cmpb
inc
movnti
cltd
or
loope
and
fs
add
mov
rcrb
or
xchg
lret
fimuls
es
scas
sub
mov
adc
dec
test
fdiv
rcl
orl
rol
testl
or
jnp
add
mov
add
scas
jge
rol
mov
add
cs
jmp
ds
das
dec
or
out
enter
inc
lods
addr16
and
stc
movsl
xchg
mov
pop
jle
or
imul
ja
das
pop
add
fs
xchg
test
xchg
arpl
imul
cmpsb
jno
xchg
inc
jg
icebp
cs
fiadds
scas
addr16
and
iret
pop
js
repnz
add
out
xchg
stos
ljmp
push
call
icebp
and
mov
daa
test
dec
mov
xor
je
out
lcall
daa
cmc
loope
pop
pop
mov
jmp
les
in
mov
addl
lods
call
xrelease
jns
jbe
sub
leave
sub
jl
iret
in
inc
or
pop
cmp
push
cmpsl
mov
sbb
cwtl
orb
scas
mov
or
jae
cmpsl
lods
cmp
add
xchg
or
scas
inc
add
mov
or
stos
sub
cmp
adc
inc
nop
and
pop
mov
inc
add
mov
xchg
add
or
rcrb
pop
fidivrl
mov
or
pop
cmpl
dec
test
push
push
mov
test
lods
push
add
inc
or
lcall
or
sub
sbb
adcb
andb
std
xor
stc
adcb
js
das
mov
out
popf
out
std
icebp
push
add
xchg
hlt
std
enter
xor
sbb
lods
push
sub
stc
mov
lea
rcrl
xchg
aam
jb
and
jp
xor
sub
add
add
inc
mov
sbb
clc
xor
jl
mov
insb
xchg
push
cmp
pushf
pop
push
or
dec
jp
xchg
addr16
sub
stos
lods
add
nop
jns
sbb
fs
xor
orl
icebp
sub
sub
andb
in
mov
mov
sbb
out
cmpsb
sbb
pop
jns
pop
scas
roll
sub
sbb
es
daa
xor
jnp
pop
popa
ds
insl
daa
xor
adc
andb
pop
push
lret
inc
out
cmpsl
js
in
das
jle
cld
sub
out
pop
scas
nop
add
push
test
arpl
pop
push
mov
push
repz
mov
cmpsl
ret
dec
xchg
cmc
mov
mov
insb
xchg
cmc
add
mov
mov
mov
daa
mov
out
inc
xchg
jle
jbe
cmp
repnz
and
mov
sub
xchg
push
out
inc
fmulp
in
or
push
sbb
call
bound
ljmp
push
movlps
inc
mov
dec
adc
add
inc
add
jecxz
ljmp
jmp
idiv
stc
incl
bnd
pop
jle
adc
bound
adc
jg
jmp
add
mov
or
dec
and
test
mov
mov
mov
imul
sti
mov
xchg
sub
fcoms
sub
xor
add
sub
push
add
xchg
jbe
add
jbe
add
inc
add
ja
add
xchg
xchg
ja
add
jae
add
mov
mov
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
inc
add
inc
add
adc
inc
add
inc
add
add
addr16
inc
scas
cmp
inc
scas
and
inc
scas
adc
repz
scas
lock
inc
scas
shl
inc
scas
movsl
faddl
jmp
inc
scas
testl
ljmp
fadds
flds
clc
inc
scas
icebp
stc
inc
scas
sub
clc
inc
add
outsl
fiaddl
or
inc
scas
mov
inc
scas
cwtl
clc
inc
scas
repz
scas
push
fldl
inc
cmc
inc
scas
and
inc
scas
std
jmp
in
addr16
in
addr16
addr16
out
addr16
fsubrp
addr16
imul
addr16
out
in
addr16
lahf
mov
test
popf
jb
mov
mov
mov
jns
xchg
scas
pop
jl
push
sbb
into
push
stos
add
lods
add
subl
mov
rorl
pop
imulb
xchg
daa
mov
imull
in
mov
fisubrl
stos
jecxz
data16
push
jbe
addb
inc
testl
or
xorl
add
sbb
cs
push
add
push
xchg
and
push
xor
xor
leave
mov
in
sub
adc
mov
add
mov
into
icebp
in
add
lock
jnp
jp
das
leave
xchg
push
in
je
jmp
jle
inc
test
jle
call
jg
scas
js
pusha
sub
or
ret
mov
add
mov
les
dec
je
insl
or
xchg
daa
dec
ret
add
add
mov
inc
nop
push
add
sar
gs
jbe
add
jp
aam
pop
xchg
add
out
int
xchg
gs
lods
jl
mov
pop
mov
mov
and
jne
data16
add
addr16
shrl
ds
or
out
mov
adc
addr16
stos
cmp
out
addr16
clc
lahf
cmpsl
cmpsl
fidivl
add
pusha
lods
ss
inc
loope
mov
push
fldz
hlt
or
daa
out
addr16
mov
jmp
jp
lret
testb
and
jp
pop
add
addr16
mov
pop
and
jecxz
jo
out
mov
sbb
scas
addr16
aas
es
and
scas
jp
arpl
fscale
mov
cmc
shrb
inc
jmp
dec
repz
ljmp
out
repz
dec
xchg
mov
das
mov
add
lods
lock
ja
add
imul
add
lods
adc
cld
adc
mov
cmp
lret
push
dec
jb
packsswb
nop
mov
mov
fsubs
dec
stc
stc
xorb
add
or
xor
inc
movb
call
push
popf
lock
sbb
add
data16
pop
rolb
stc
mov
aam
pop
rolb
sbb
xchg
fs
mov
aam
add
popf
jecxz
push
gs
and
mov
dec
mov
jge
cmpsb
add
inc
sub
stc
leave
jle
adc
add
pop
roll
mov
add
mov
xchg
mov
mov
ljmp
inc
mov
dec
out
fwait
loope
out
mov
scas
mov
dec
sub
push
inc
fwait
mov
orl
outsb
shr
hlt
xchg
popl
mov
add
push
pop
mov
out
aaa
mov
or
adc
jb
and
xlat
jmp
gs
add
imul
inc
addr16
scas
or
out
add
push
mov
dec
aam
push
roll
ljmp
pop
sub
loopne
imul
mov
add
loop
rcl
loopne
or
loop
aad
and
out
jmp
lods
call
add
cltd
loop
fildll
data16
xor
pop
roll
and
rorl
je
sub
cld
out
pop
cmpsl
cmp
jae
xchg
stos
jg
jbe
mov
jg
movsb
lods
subl
sub
fs
lret
es
iret
and
fdivr
call
ret
addr16
add
call
sbb
stc
add
jecxz
or
lods
addr16
scas
ret
scas
roll
ja
add
push
push
dec
das
mov
push
arpl
and
xchg
pop
xlat
push
dec
es
icebp
jl
adc
jge
add
sub
je
and
rorb
jge
std
decl
test
push
mov
dec
push
shrl
adc
push
sub
mov
cs
adc
sub
std
incl
dec
and
push
ret
and
loope
pop
imul
fwait
shll
std
fadds
lds
ret
and
and
cs
and
and
jae
adc
test
inc
xchg
mov
nop
inc
add
bound
repz
call
sub
nop
inc
lret
cmpsb
xor
aad
les
dec
popl
xor
repz
and
and
std
lcall
jae
stc
shr
int
push
and
or
jae
mov
data16
addr16
and
or
mov
addr16
aam
ss
and
add
sbb
sbb
xor
stos
stc
add
arpl
scas
addr16
in
je
test
bound
jno
call
inc
scas
loopne
add
out
addr16
popf
fbstp
or
push
icebp
mov
imul
xchg
das
bound
push
pop
cmpsl
add
loopne
bswap
fisubs
pusha
insl
popa
bound
jo
sub
and
adc
and
or
loope
and
shll
sub
add
mov
mov
fstpl
std
mov
mov
or
stos
mov
and
scas
lods
push
mov
call
and
test
push
call
test
mov
sahf
jb
testl
les
daa
test
push
lods
test
mov
add
inc
gs
mov
testb
shrl
push
data16
inc
xchg
adc
hlt
and
or
jno
scas
dec
mov
jmp
and
sub
add
sbb
xchg
imul
jmp
imul
arpl
faddl
ds
lods
add
xchg
fldl
and
push
shrb
je
cmp
adc
loopne
sbb
xchg
imul
push
jge
scas
push
gs
scas
xchg
or
scas
jle
or
addb
rcr
adc
mov
mov
mov
xchg
jmp
xchg
fcoml
daa
lea
dec
pop
inc
or
rclb
test
jmp
cwtl
add
cmp
xchg
sub
ret
aas
scas
pop
inc
and
or
jae
shl
jl
add
jg
add
cmpb
pop
fwait
or
out
addr16
aas
ljmp
xor
add
addr16
xor
incl
fs
addr16
shll
es
les
sub
pushf
cmc
add
addr16
ljmp
inc
xchg
push
jg
pop
daa
out
jae
add
cmc
js
pop
das
mov
or
addr16
sbb
add
add
sbb
cmp
ret
ret
add
and
adc
addr16
xor
getsec
in
dec
pop
cmp
mov
add
or
jmp
loope
pop
mov
test
add
cmp
leave
aaa
and
leave
mov
outsb
faddl
inc
jmp
fs
pop
mov
and
mov
inc
push
in
fwait
pop
and
movsl
movsl
inc
add
fwait
fs
and
insb
cmp
imul
icebp
arpl
add
in
and
arpl
add
cld
ljmp
cld
ljmp
cld
decl
jle
adc
add
call
add
xchg
out
cwtl
push
push
push
mov
push
fs
and
add
imul
add
imul
add
in
cli
je
jmp
mov
jb
cmp
scas
dec
push
mov
jmp
add
outsb
or
mov
scas
xchg
xor
add
adc
inc
add
aas
dec
sbb
mov
add
push
mov
cmp
push
mov
sbb
add
inc
mov
enter
add
call
lea
mov
jmp
sub
sti
addr16
daa
sub
sbb
insb
xchg
mov
sub
cmp
jb
subl
daa
sbb
loope
jo
mov
inc
and
or
outsl
dec
add
loopne
pop
xlat
call
sbb
scas
bound
roll
les
bound
aas
pusha
push
xchg
aas
ljmp
addr16
clc
pop
add
add
mov
addr16
jmp
mov
lret
push
fs
stos
add
loopne
inc
sub
aas
add
addr16
repz
test
add
and
fldl
das
addb
lods
jg
mov
cmp
fisubs
cmpsl
out
call
loope
jae
mov
dec
fimuls
cmp
xchg
cli
add
lods
nop
das
push
pop
addb
push
mov
push
bound
andl
sbb
mov
cld
pop
xor
pop
mov
inc
add
mov
test
jecxz
mov
add
jmp
and
add
jb
mov
inc
mov
incb
test
push
jp
inc
dec
add
push
mov
xchg
adc
xor
add
push
jmp
jle
fldenv
add
fiadds
xor
inc
and
sbb
mov
dec
ss
filds
pop
daa
and
cltd
xchg
sti
add
dec
jle
inc
imul
inc
xor
add
push
pop
xchg
bound
push
repz
xlat
dec
shll
xchg
jmp
subl
jmp
and
mov
in
pop
ljmp
pop
addb
scas
push
mov
scas
jle
lock
dec
cmp
mov
std
push
add
stos
and
movsb
aam
sub
xor
add
adc
push
add
xor
dec
add
mov
mov
push
call
xlat
call
jle
jg
mov
sub
cmp
ss
icebp
add
je
mov
push
or
loop
pop
std
xchg
pop
rcr
inc
mov
sti
inc
mov
in
out
sub
roll
xor
or
add
cld
out
ret
mov
cltd
dec
repnz
pop
mov
mov
subb
jl
inc
rcr
insb
out
ss
jmp
and
sbb
repz
nop
loopne
add
jle
outsb
stos
mov
pop
xor
dec
pop
stos
xlat
lock
jo
push
pop
rcll
bound
add
pop
jnp
cmc
in
subl
sub
test
stos
add
pop
adc
stos
ljmp
mov
mov
dec
daa
adc
add
subl
jno
inc
std
faddl
pusha
ja
jmp
mov
out
dec
call
std
jp
sti
insb
mov
or
das
rol
add
cmp
loope
lret
test
lea
mov
xchg
push
call
add
lahf
lock
outsb
aas
or
xchg
in
lock
mov
push
jecxz
call
mov
inc
pop
shll
mov
les
sbb
fsubrs
aaa
std
ss
cmp
rorb
pop
aaa
aaa
lret
arpl
dec
push
mov
in
js
in
lahf
dec
add
jl
lods
push
add
inc
and
add
jnp
lods
sub
movsb
sub
fwait
sub
ss
sub
mov
inc
subl
ss
dec
ss
dec
es
sub
shrb
ljmp
jne
sub
add
add
add
inc
je
scas
sub
and
mov
or
dec
jle
lret
loop
add
dec
fnstenv
mov
imul
and
ret
sub
ret
lea
scas
call
jl
and
addr16
xor
ret
sub
stos
dec
add
sub
call
sub
repz
fucomip
and
stos
repnz
ret
out
and
iret
repnz
out
and
xchg
repnz
ret
out
and
mov
dec
dec
out
cmpsb
dec
xchg
xchg
ljmp
test
addr16
pop
sub
cmp
iret
repz
addr16
test
add
push
jb
sub
add
mov
jmp
lahf
mov
push
adcl
lods
out
imull
and
mov
mov
movsb
mov
push
cmp
push
jb
mov
ds
out
sub
jnp
cmpsb
ja
adc
mov
jnp
pop
out
adc
nop
mov
mov
lds
incl
inc
mov
jmp
aaa
sub
sub
push
add
fimuls
push
mov
push
push
leave
fwait
adc
inc
mov
jo
mov
js
mov
jno
add
push
sti
inc
inc
mov
inc
mov
orb
xchg
filds
fwait
xchg
dec
xchg
or
dec
out
and
push
movb
jp
addb
xor
mov
mov
aad
enter
and
scas
test
fs
push
jle
lret
dec
fs
add
jae
lock
sbb
mov
add
nop
pop
and
cmp
and
xor
das
push
mov
ret
out
sub
loop
jmp
outsl
mov
pop
mov
jb
out
add
and
sub
sub
lods
mov
push
sub
stc
add
mov
je
scas
dec
js
xor
push
pop
jl
daa
inc
aaa
gs
add
out
mov
loopne
cmpsl
out
jbe
jno
lret
stos
pop
inc
mov
mov
add
sbb
xor
fcmovne
pop
and
fbstp
cmp
xchg
outsb
push
lret
mov
stos
add
arpl
sub
pushl
inc
mov
push
and
gs
xor
cmp
lret
repnz
mov
pusha
je
xchg
mov
out
add
mov
lods
call
pop
loop
inc
mov
out
loop
icebp
in
dec
in
fsubp
rcr
adc
loope,pt
mov
outsb
icebp
mov
jb
js
add
scas
test
data16
out
jmp
mov
xchg
daa
jae
dec
cwtl
add
inc
jmp
mov
shrl
add
imul
imul
add
addr16
cmp
stos
add
fs
fucomi
addr16
stos
add
ficompl
push
pmaddwd
stos
addr16
push
sub
hlt
push
lahf
add
push
add
push
stos
add
cwtl
xchg
fwait
cmp
and
adc
imul
nop
inc
xchg
mov
push
and
nop
mov
xor
enter
cmp
push
dec
test
sbb
jle
mov
mov
cmpsl
sub
push
test
push
mov
pop
mov
ds
xchg
push
fcmovnb
call
push
xchg
jne
bound
adc
push
jmp
insb
xor
add
lods
cli
std
and
cld
pop
lock
mov
daa
out
leave
add
pop
add
push
sbb
and
xchg
icebp
adc
jge
scas
push
add
je
add
jl
jnp
out
and
int
ds
inc
jle
sbb
aaa
add
pop
lret
cmp
push
mov
add
sti
addb
push
sbb
das
fmul
and
pop
out
jnp
out
add
outsl
jbe
subl
sub
hlt
loopne
jb
sub
out
pop
push
or
mov
sub
shrl
mov
push
fimuls
cmp
fisttps
cmp
adc
test
ret
xor
ds
das
add
test
subb
cs
aaa
xor
and
xchg
push
ljmp
out
sbbl
mov
aam
add
adc
call
cmp
pop
subb
or
lods
out
pop
jg
push
fstpl
std
add
adc
push
out
inc
in
stos
and
bound
sub
fldl
jo
out
xlat
jb
adcl
ljmp
add
and
ja
shrl
xor
add
call
mov
jb
add
cli
je
fmulp
call
int
call
mov
ds
rcrb
or
popf
sbb
hlt
mov
xor
mov
push
mov
or
jge
and
adc
xor
add
mov
cmp
pop
jno
add
mov
jb
cmp
dec
mov
and
or
callw
add
pop
or
push
js
xchg
mov
pop
enter
adc
dec
es
add
xchg
ret
xchg
ja
dec
or
lcall
mov
sbb
cld
add
mov
sub
xor
clc
ret
outsl
rolb
scas
adc
std
pop
pop
les
jns
or
es
enter
cmp
stc
pushl
lds
les
lock
cs
sti
sbbb
xchg
cld
gs
ret
or
cmp
push
mov
jnp
ret
and
pushf
xchg
stc
inc
scas
int
js
pop
sti
pop
lret
dec
push
and
lret
sub
out
jg
push
add
add
pop
imull
filds
scas
dec
lock
bound
arpl
add
mov
sbb
idivb
push
add
enter
xor
sahf
iret
out
ljmp
ljmp
xchg
movsl
jb
stos
push
std
fbstp
je
std
in
mov
push
mov
sbb
jae
aad
mov
jmp
sub
or
lods
pop
ss
or
aas
in
pop
subl
push
add
xorl
jmp
add
sub
lds
and
cmpxchg
and
xchg
pop
pop
lret
sub
sub
stos
add
mov
adc
mov
in
aad
sbb
mov
fiadds
add
xchg
loopne
bswap
roll
inc
adc
inc
jp
popf
push
imul
adc
jne
out
sbb
sub
test
pop
cld
ja
or
sti
jne
add
js
cmpsl
sub
cmp
adc
and
arpl
and
jns
pop
sub
adc
and
push
inc
scas
stos
add
and
lods
inc
jae
mov
jg
dec
add
mov
inc
add
scas
jmp
or
add
inc
add
cmpsl
aas
add
scas
flds
ss
cli
add
test
scas
idivb
add
add
andb
jp
hlt
repz
cmpsl
out
scas
push
xchg
out
loop
sarl
shrl
ss
fs
xchg
push
jmp
scas
addr16
mov
out
call
sti
mov
call
add
mov
xchg
rolb
call
mov
push
jbe
jp
aam
mov
sub
add
pop
pop
loopne
push
insb
sarb
inc
mov
mov
mov
jp
lods
fistpl
out
js
sti
insb
addr16
andb
mov
int
add
dec
std
out
and
xorl
loopne
stc
mov
add
mov
arpl
sarb
addr16
mov
arpl
imul
add
imul
hlt
mov
jae
push
mov
outsb
pop
mov
inc
jmp
out
jbe
mov
inc
addl
jle
idiv
cltd
pop
fsubrs
scas
mov
inc
add
push
je
adc
pop
sbb
mov
mov
dec
les
xlat
jne
xchg
adc
test
out
mov
loopne
je
decl
push
addr16
mov
sub
push
push
call
int
xor
cmp
test
jge
add
add
add
les
xchg
ret
int3
shll
in
popf
add
scas
js
add
adc
add
xorl
add
sbb
fwait
mov
xchg
and
lods
jne
sub
inc
scas
inc
ss
add
movsb
add
js
scas
inc
add
scas
inc
mov
mov
out
mov
out
fiaddl
insb
dec
mov
pushf
out
stc
inc
scas
in
cmpsl
push
push
jb
xlat
xchg
outsl
add
mov
outsl
addr16
into
cmp
add
sub
push
push
out
bound
sub
xchg
cmpsl
push
add
fcoml
cmp
push
es
cltd
pop
cmp
dec
push
jb
mov
rdtsc
mov
pop
scas
mov
cld
imul
push
adc
loop
stos
add
mov
mov
bound
addl
out
jae
xor
je
daa
stos
add
mov
subb
out
jmp
add
fmulp
adc
idiv
div
mov
in
out
adc
gs
xor
arpl
gs
popa
out
mov
neg
movsl
push
push
xchg
push
bound
mov
and
jecxz
push
lds
pop
out
out
mov
add
pop
call
mov
or
mov
adc
pop
fmuls
mov
xor
roll
sbb
outsl
push
mov
and
jp
rcrb
mov
mov
fiadds
jbe
hlt
jp
or
mov
inc
stos
jae
dec
jg
or
dec
push
sub
xor
lds
sbb
ret
push
fld
add
dec
ret
sahf
dec
add
das
add
jmp
stos
adc
pop
add
ret
daa
cmp
das
addb
insb
fnstcw
pop
xor
sub
push
cmc
add
jns
imul
ret
shll
add
add
std
add
mov
jmp
add
fadds
mov
lret
pop
and
inc
pop
pop
jmp
sub
add
cmp
xchg
mov
mov
scas
jecxz
xor
addr16
insb
xor
cmpsb
fsubrl
maskmovq
idivl
add
popf
fiaddl
scas
loop
cmc
fimull
or
enter
ret
mov
scas
inc
fstl
jae
adc
add
cwtl
sbb
imul
mov
pushf
or
xor
mov
dec
sub
and
leave
adc
pop
jmp
xorb
fbld
inc
push
addr16
sbb
pop
punpcklbw
or
jl
ljmp
fdivrp
cli
in
xchg
rol
fldt
stos
add
add
xorb
arpl
cmpsl
push
test
and
aaa
xchg
js
stos
fisubs
mov
aas
test
add
mov
pop
add
adc
push
pop
cld
mov
push
inc
inc
cltd
xor
inc
pop
inc
push
arpl
mov
insl
or
add
inc
push
add
arpl
mov
adc
add
push
enter
or
push
cmp
test
int3
cmovno
inc
add
pop
dec
pop
aas
pop
aad
push
mov
addr16
jmp
adc
xchg
out
or
and
push
scas
cmp
push
shrl
out
scas
inc
add
sbb
add
fadds
adc
mov
inc
mov
out
out
rolb
and
loopne
and
addl
cmpl
push
es
adc
ljmp
scas
inc
add
push
adc
jecxz
add
jl
js
test
add
mov
push
out
xor
inc
mov
add
out
mov
pop
movsl
mov
jge
push
fadds
scas
pop
jbe
jle
jb
js
test
xor
add
and
add
and
push
fs
in
out
out
popa
mov
cmpsb
lock
out
ss
add
fdivrl
push
adc
mov
mov
data16
add
lock
add
addr16
fdivrl
roll
fdivrp
test
add
add
lods
mov
push
push
inc
lods
dec
std
jmp
lods
addr16
fs
clc
call
das
and
sahf
ret
cmp
jmp
scas
add
xor
fucomi
lods
addr16
idivl
data16
addr16
sahf
movsb
popa
add
sub
out
add
add
lods
mov
xor
test
ret
mov
scas
addr16
jne
std
push
lods
addr16
add
arpl
call
std
psubsb
add
push
int
or
lret
inc
add
push
mov
subl
lock
pop
add
lods
push
mov
mov
adc
mov
popf
add
arpl
add
jl
jecxz
adc
lret
arpl
push
out
adc
add
fadd
add
arpl
jne
add
scas
push
add
scas
loopne
test
add
fistpll
orb
int
push
push
add
inc
scas
inc
mov
stos
dec
add
faddl
add
jg
push
std
cli
lret
sarl
mov
incb
push
add
ss
insb
mov
add
scas
sbb
mov
out
add
scas
loopne
test
push
add
pop
addr16
pop
cmpsl
add
sub
xorb
out
scas
hlt
gs
add
jo
add
outsl
fists
insb
call
jg
stc
out
scas
xchg
sbb
call
cmp
jmp
stos
lods
cmp
addr16
xchg
lock
ss
pushf
add
insl
out
xchg
outsl
fs
addr16
pop
hlt
insl
add
addr16
ljmp
enter
rolb
jle
sub
out
lods
addr16
insb
jmp
sub
mov
std
jmp
addl
cltd
faddl
insb
imul
mov
ljmp
call
aam
inc
jb
push
call
inc
inc
std
push
frstor
push
jb
lods
add
aas
incb
sbb
add
add
jno
inc
std
push
mov
rorl
je
aam
icebp
mov
outsb
idiv
decl
sub
add
ret
in
xorl
add
pusha
ret
in
lea
dec
or
ss
push
add
xchg
push
push
and
outsb
dec
mov
add
push
lea
sub
add
shl
push
cwtl
push
push
lea
xchg
mov
push
je
add
out
mov
push
xor
adc
push
push
fdivrs
rorl
outsl
dec
mov
dec
inc
jmp
or
sbb
mov
push
adc
cmp
add
imul
mov
xor
xchg
addl
add
push
lcall
push
std
std
bound
inc
mov
and
lret
jbe
scas
push
add
cli
push
pushl
adc
dec
fdiv
push
push
test
push
adc
and
adc
pop
inc
add
adc
xor
mov
aam
xor
cmpsl
inc
mov
out
mov
addr16
add
mov
jno
out
cs
jae
dec
jmp
dec
insl
jae
push
loope
aaa
shll
out
sti
mov
fwait
icebp
push
add
dec
ficompl
pop
adc
in
xchg
scas
pop
pop
pop
daa
add
daa
sbb
lods
mov
out
jnp
imul
mov
cmpsl
addr16
jb
call
cltd
mov
inc
inc
jmp
mov
std
mov
lock
or
std
aas
cmp
xlat
ja
movsb
mov
mov
fs
mov
jae
das
ret
add
mov
xchg
lock
out
into
add
cmc
sbb
jle
inc
call
inc
cmpsb
sub
fs
add
add
loope
int
add
and
and
pop
fwait
xchg
dec
imul
push
gs
jle
jl
mov
add
ds
std
decl
and
outsl
fidivrl
xchg
xchg
dec
mov
cltd
xchg
add
mov
out
cli
pop
inc
je
jl
pop
or
sub
test
add
or
add
inc
fs
push
add
insl
aas
mov
jmp
iret
add
push
in
ret
scas
xchg
add
scas
dec
out
inc
dec
std
incl
and
in
out
cmp
cmp
cmp
ljmp
jae
add
dec
sahf
push
inc
push
sahf
add
dec
jmp
scas
push
sub
ljmp
insl
mov
sbb
add
push
cmp
adc
push
jle
xor
xor
and
loopne
xor
cli
sbbl
add
jo
stc
pushl
push
pushf
subl
xchg
jb
arpl
add
jne
stc
insb
xchg
mov
daa
add
sub
add
jo
sahf
lods
jp
push
cmpsb
fsubr
in
jnp
arpl
push
jb
add
scas
add
cmpsl
popl
add
test
jle
dec
movsl
cmpb
ret
add
xchg
insb
test
arpl
add
data16
ljmp
iret
hlt
dec
push
call
jb
dec
push
and
pop
sub
xchg
ret
ljmp
jbe
jbe
fwait
lahf
jp
in
push
jb
rorb
jg
adc
cmpsl
add
cmp
cltd
call
fs
and
sbb
je
inc
pop
hlt
sti
in
addr16
testb
out
orl
imul
lods
out
fidivs
add
dec
dec
aaa
lret
add
jle
incb
stc
mov
pop
lea
enter
or
push
loope
loop
imul
cld
cltd
push
inc
push
adc
aam
add
jecxz
jno
cmp
lea
orl
xchg
roll
mov
je
shrl
add
movsb
pop
leave
les
push
add
aam
push
mov
ja
subl
aas
or
mov
cwtl
xchg
or
negb
lds
jmp
cltd
add
jns
push
pusha
push
call
sub
js
xlat
std
cwtl
fwait
into
dec
add
cmpsb
cltd
pop
and
hlt
andb
pop
adc
mov
call
xor
dec
add
sarl
mov
push
pop
in
das
mov
das
test
in
cmp
mulb
sub
jae
imul
sub
cmp
pop
sbb
add
imul
scas
add
out
push
es
fucomi
sbb
dec
out
add
scas
insb
adc
push
cmpsb
pop
cmp
sti
enter
scas
jecxz
das
fwait
cmp
xor
push
test
cmp
stos
xchg
cmp
mov
sub
jnp
jae
xchg
add
cmp
sub
mov
stc
xlat
xchg
and
or
and
and
inc
adc
std
xor
movd
xor
movd
or
dec
cmp
stos
xchg
and
adc
cmp
int
lock
je
ret
lock
add
adc
mov
dec
mov
add
inc
sti
cs
cwtl
std
pushf
xchg
inc
xchg
call
mov
cmp
aam
xchg
shr
xor
es
push
mov
add
push
cwtl
push
push
jns
decl
lea
ja
call
data16
cmp
in
in
mov
inc
adc
push
gs
fisubl
add
les
repz
sbb
add
xchg
mov
push
lea
add
xchg
xchg
sti
adc
or
and
scas
mov
inc
add
jae
lret
inc
call
lods
mov
ljmp
dec
add
xor
test
inc
fwait
pop
add
push
add
cmp
cmp
jg
std
mov
lret
les
ret
mov
add
movsb
or
or
inc
dec
sub
and
add
cmp
mov
inc
les
mov
cs
hlt
add
daa
cmpsl
fsub
add
aam
popf
cmp
ss
lahf
ss
cmp
fildll
cmp
mov
ljmp
and
mov
clc
sbb
add
sub
es
decl
add
push
cli
inc
cs
add
xchg
insb
movhps
scas
in
es
mov
lods
dec
mov
pushf
jmp
inc
scas
loop
movsb
add
sub
sub
andb
mov
imul
bound
jo
loopne
xchg
out
nop
sub
pop
add
lods
cwtl
mov
movsb
pop
inc
jmp
ja
int3
insb
add
push
bound
fs
add
mov
add
dec
mov
adc
stos
idiv
cmp
jmp
mov
std
cmp
daa
jae
cmp
xor
out
add
adc
pop
pop
add
xchg
sahf
cmp
add
xchg
add
xchg
fcmovnbe
clc
incl
pop
jp
push
adc
rcll
xchg
imul
and
je
lods
sub
and
lods
clc
std
dec
or
or
in
idiv
sub
push
addl
fcmovbe
push
outsl
decl
xor
or
or
pop
std
mov
jl
ficompl
xchg
add
xor
adc
mov
sbb
pop
or
scas
fmuls
std
lcall
pop
mov
ss
mov
mov
outsl
ds
xor
cmpsl
cmpsb
pushf
mov
mov
mov
aam
fxch
dec
or
mov
or
cld
popf
xor
or
ret
xchg
inc
add
es
lret
mov
movsb
fistpll
bound
cmp
stc
pop
mov
pop
mov
pop
es
stos
push
out
fwait
aas
ljmp
xor
inc
scas
loopne
rorb
xchg
inc
ret
xlat
ss
fisttps
mov
add
loop
scas
addr16
lahf
mov
in
cmpsb
sbb
mov
cmpsl
lods
clc
addr16
mov
repz
push
jmp
popf
add
std
call
adc
inc
icebp
arpl
sbb
pop
push
jo
jnp
jmp
jge
xchg
xor
ljmp
repnz
push
pusha
aam
push
jmp
jae
inc
out
lods
addr16
call
mov
add
pop
pushaw
sub
inc
icebp
xor
push
out
mov
stos
push
out
addr16
add
cmp
inc
into
jg
addr16
aas
add
ja
add
jne
adc
dec
mov
das
push
xchg
gs
push
outsb
mov
inc
xchg
jge
aaa
push
gs
add
sbb
add
cmp
push
jge
ss
gs
push
shrl
aas
add
dec
add
mov
xchg
lea
push
pop
add
or
scas
jo
out
and
or
cmp
inc
or
add
sar
pop
mov
daa
andb
clc
mov
xor
rcrb
out
adc
out
ds
mov
mov
xchg
and
xchg
sub
jle
push
test
loop
pushf
je
pop
test
cmp
test
sub
adc
jp
daa
sub
mov
adc
push
arpl
add
sbb
dec
out
add
fwait
ret
fistpll
mov
add
ss
outsl
cmp
insb
pop
bound
sub
mov
daa
movsl
fildll
leave
addr16
out
cmc
outsl
test
ficoms
out
lahf
cs
or
and
subb
movl
push
push
sub
cmp
test
test
in
pop
add
cmp
sub
loopne
icebp
xor
jmp
subl
mov
stos
adc
call
xor
sti
push
adc
loopne
jb
arpl
inc
sub
je
and
sub
or
lahf
loopne
push
ja
xchg
add
loop
or
xor
xchg
out
mov
sbb
adc
arpl
or
dec
rorb
iret
cli
call
js
dec
ss
push
std
cmp
add
dec
xchg
in
shlb
fistpll
add
outsb
lock
adc
clc
test
push
or
add
cmp
inc
clc
jmp
sub
int
addb
pop
push
imul
lea
adc
add
pop
jg
scas
jle,pn
mov
jnp
xor
jg
mov
test
or
xchg
mov
dec
je
jbe
or
mov
add
mov
arpl
cwtl
jae
mov
aaa
add
mov
std
lcall
movsl
jg
cmp
jmp
aam
mov
aam
adc
xchg
test
sar
out
push
add
inc
inc
test
test
sbb
add
insb
mov
sub
xchg
pop
lret
fisubrl
adc
mov
repz
add
out
sahf
add
addr16
lods
add
mov
xchg
xchg
loop
adc
mov
jbe
lret
xchg
pushf
out
inc
scas
loop
adc
inc
push
xchg
mov
inc
xlat
inc
scas
fsubl
xchg
lods
xchg
or
add
out
mov
and
int3
sbb
add
sub
sub
das
add
mov
sub
out
aas
fists
sub
sub
into
ljmp
aam
ret
call
push
ds
mov
cmp
sbb
adcl
sbb
je
fimuls
andl
std
aad
xchg
aad
dec
mov
cmp
ds
dec
or
and
call
add
mov
adc
outsl
add
mov
mov
scas
out
lret
out
je
jnp
add
push
mov
int
push
push
add
mov
je
push
push
and
lea
aad
gs
jl
xchg
cs
insl
add
fistpll
orl
mov
mov
mov
mov
push
test
mov
xchg
es
rorl
imul
pop
int
or
jl
cmp
sar
int
pop
incb
jg
scas
ljmp
add
inc
outsb
xchg
hlt
or
push
sbb
fdivl
outsb
test
jle
and
sub
aas
add
and
out
test
icebp
add
or
incb
jl
or
fwait
xchg
inc
scas
mov
add
xchg
insl
lods
add
icebp
test
xchg
inc
scas
mov
xor
cmp
enter
mov
pusha
jb,pt
sub
je
cvtdq2ps
push
rclb
fsubp
xorb
xchg
lret
pop
mov
jg
fldl
je
daa
test
out
add
jae
daa
test
out
ss
add
rcl
loop
xchg
outsb
fiaddl
pop
bound
add
pop
add
insb
addr16
sbb
jge
scas
fsubl
mov
push
insl
pop
lds
sub
jp
inc
lds
bnd
push
adc
out
cld
stos
lods
pop
mov
add
cmp
add
add
adc
jl
adc
insb
fwait
or
daa
dec
adc
stos
lock
xor
std
mov
jmp
addr16
cld
fdivrs
jmp
scas
stos
add
mov
js
jmp
scas
stos
add
sbb
imul
cmp
inc
jmp
adc
je
ja
or
add
outsl
xchg
or
inc
push
jmp
cmovo
mov
add
add
dec
clc
xchg
and
stos
add
loopne
xchg
repnz
jle
xor
or
nop
clc
cli
call
fcomi
negb
adc
sub
push
mov
movsb
in
dec
jg
push
add
mov
sti
add
imul
add
int3
lret
hlt
sbb
add
or
cld
jnp
and
in
xor
jnp
mov
cmp
outsb
std
xor
pushf
sub
push
nop
cmpsl
scas
sgdtl
mov
sbb
mov
enter
inc
mov
pushf
adc
dec
call
add
lock
call
add
xor
inc
lods
xchg
xor
or
test
scas
push
add
es
pop
add
cltd
and
pop
scas
out
add
inc
lret
jg
sub
andl
imul
add
lret
out
lock
cmpsb
add
mov
mull
mov
sbb
rorb
ss
or
sub
sub
ret
call
mov
and
lock
loop
pusha
test
mov
cmp
jl
dec
iret
pushf
sbb
out
inc
lds
fcom
test
mov
dec
and
push
ss
sarl
sub
dec
add
and
pushw
pop
pushaw
out
add
xor
push
xchg
xchg
jnp
push
mov
inc
mov
shll
into
lret
in
fmull
sub
xchg
test
ret
push
mov
je
ret
mov
jmp
inc
icebp
cmpsl
add
add
xchg
stos
pop
add
stos
and
std
bound
push
cmpsb
test
cmp
push
call
xchg
pop
test
jp
test
hlt
imul
sub
push
jne
in
add
jp
xor
test
test
jp
or
fldt
clc
ja
or
ds
jae
test
loopne
pop
stos
add
add
pop
add
mov
sti
inc
scas
movhps
popa
pop
sbb
imul
std
ret
aas
scas
out
add
repz
pop
lcall
pop
andb
bound
add
adc
inc
scas
mov
aas
scas
lods
add
jmp
xor
ret
aas
scas
sarb
cmc
in
push
xchg
ret
cmp
xchg
xchg
insb
scas
push
js
iret
ss
insb
scas
push
xor
add
xchg
mov
add
pusha
cmc
insb
push
add
cmp
in
sub
mov
jg
fldenv
js
ljmp
scas
mov
out
fwait
mov
pop
repnz
cmp
and
cmpsl
addr16
ret
fimuls
aam
mov
addr16
add
cmpsl
add
mov
pop
iret
enter
and
xor
addr16
pop
sbb
add
jle
jle
mov
pop
add
lcall
bound
rcl
ljmp
sub
imul
add
cmp
and
insl
mov
add
lods
call
inc
in
sub
fldl
pop
repnz
loope
int3
push
mov
insb
mov
dec
repnz
lock
icebp
xor
arpl
and
andl
pop
mov
inc
jmp
icebp
arpl
add
repnz
aam
add
popa
test
push
sub
pusha
sbb
push
add
and
push
clc
add
jae
cmc
sub
leave
mov
inc
sbb
or
and
adc
jne
cmovl
add
jno
in
fs
incl
adc
stos
add
inc
push
mov
jecxz
xlat
divb
inc
push
mov
push
push
push
jmp
fistpl
sahf
inc
add
push
jnp
or
add
sgdtl
pusha
fucomp
das
add
inc
ljmp
adc
add
cmp
arpl
push
dec
xchg
aas
push
mov
jne
shll
cltd
inc
or
add
mov
mov
je
sub
mov
push
push
xchg
fwait
std
jo
das
mov
arpl
push
push
mov
std
pop
xchg
pop
and
cmp
in
and
cmp
adc
outsl
push
xor
push
push
add
in
js
sbb
out
pop
jnp
setae
mov
test
fwait
call
mov
mov
xor
xchg
int
mov
mov
nop
xlat
rolb
scas
out
fucom
jecxz
hlt
xlat
sahf
cmpsl
out
cld
out
pushl
out
fmull
sbbb
lcall
mov
xchg
sahf
sbb
jmp
add
fdiv
add
addr16
fsubrl
sub
dec
std
jmp
pushf
outsl
std
fsubrl
jbe
jmp
sub
pushl
out
js
aam
pop
adc
jne
loope
out
int
jnp
fcmovu
and
pusha
out
adc
adc
shll
std
mov
lret
dec
and
mov
in
std
mov
cs
add
sub
and
andl
jb
inc
dec
sti
adc
popf
into
sbb
inc
dec
je
in
push
mov
js
mov
pop
adc
inc
add
arpl
dec
aad
cmp
add
jae
sti
adc
jle
mov
popf
leave
call
cmp
cli
ljmp
aam
cwtl
outsl
arpl
push
xchg
pop
sub
push
push
ljmp
adc
mov
and
sbb
push
pop
fiadds
scas
add
sub
mov
test
lock
adc
andb
sarb
imul
xor
icebp
add
lcall
scas
mov
je
add
fcoml
popa
pop
sidtl
stos
mov
shrb
mov
mov
jg
xchg
lock
adc
out
add
lods
sar
imul
adc
add
in
mov
add
adc
repz
in
iret
ud1
sbb
das
sub
xor
jmp
xchg
sbb
jle
xchg
and
dec
arpl
or
xchg
in
js
imul
es
jbe
pop
je
mov
sbb
inc
movsl
enter
mov
add
mov
out
addr16
lock
test
insb
out
daa
das
daa
add
lods
push
shrb
sbb
out
cmc
mov
or
jmp
xor
inc
mov
lods
mov
shlb
add
mov
lea
stos
in
xor
stos
sbb
aaa
push
xchg
or
and
std
push
cmpsl
add
jle
cmpsb
add
mov
mov
mov
xor
stos
mulb
ljmp
lods
mov
add
add
dec
mov
push
push
fstl
in
cmpsl
insb
add
cli
dec
or
movb
lock
xchg
je
shr
adc
leave
arpl
imul
push
adc
fsub
int
cmp
stos
pop
pop
add
add
xor
lods
add
mov
cmpl
das
rol
in
mov
aas
adc
push
dec
sbb
and
add
jmp
or
rep
adc
mov
and
xor
sar
fisttps
je
cmp
inc
add
or
inc
lret
adc
cli
jnp
add
ss
or
scas
cmp
call
push
addb
adc
mov
incl
add
mov
mov
inc
inc
push
and
sub
lcall
and
lock
iret
mov
mov
lahf
inc
sub
xor
add
jp
dec
filds
fildl
push
add
inc
fldl
outsb
out
mov
xchg
mov
jl
sub
jle
push
gs
or
push
scas
div
ljmp
pop
mov
inc
mov
out
jle
sbb
rcl
adc
mov
loopne
mov
repz
push
or
addr16
int
outsb
cld
outsb
add
sub
adc
pop
scas
fiadds
jmp
mov
xorl
lods
add
dec
push
call
nop
dec
je
and
and
call
inc
pop
pusha
loopne
pop
jo
dec
push
call
cmpsl
call
mov
inc
sub
inc
and
out
xor
out
adc
inc
popf
or
jmp
ret
add
inc
addl
cmp
push
sub
inc
mull
enter
push
sub
loopne
add
popf
jl
es
mov
dec
adc
push
add
das
rolb
inc
and
bound
and
fiadds
pop
and
sub
add
inc
and
fiadds
add
jbe
ret
lods
lods
or
ljmp
mov
mov
test
or
mov
or
xor
and
xchg
les
push
clc
les
xor
test
scas
add
scas
xchg
xchg
add
and
add
loopne
test
mov
add
mov
cmp
sub
scas
add
sub
or
push
lods
add
or
loope
add
bound
mov
mov
icebp
das
clc
adc
jg
sbb
data16
mov
das
add
scas
bound
call
xor
xchg
aad
faddl
loopne
adc
mov
push
mov
scas
adc
mov
add
fadd
fistps
adc
imul
sub
inc
popa
arpl
cwtl
addr16
out
fwait
loop
leave
adc
jl
ljmp
rolb
gs
mov
push
in
flds
insl
add
data16
cmp
call
daa
stos
or
shl
je
gs
and
sbb
xor
inc
adc
or
mov
xor
mov
mov
daa
or
scas
lods
rcr
icebp
cmpsl
pop
cmp
sbb
jbe
movsb
cmp
xchg
in
pop
inc
and
pop
inc
sbb
testl
and
pop
daa
and
aad
aaa
dec
mov
mov
aam
add
nop
mov
fmull
mov
push
and
cmp
sub
decl
xchg
adc
sub
pop
outsl
call
push
and
bound
add
lds
ljmp
or
sub
cmp
or
lahf
pop
and
add
cmp
and
jge
mov
inc
sub
xchg
and
xchg
mov
fadds
mov
xchg
and
cmp
add
cmc
ret
push
push
jl
or
scas
mov
or
lahf
or
add
cmp
pusha
add
or
mov
mov
incl
add
sbb
out
xchg
in
and
cmp
pop
mov
aad
sbb
mov
mov
insl
fwait
xor
outsb
nop
scas
addr16
out
pop
imul
mov
or
movsb
in
int
loop
xor
cmpsb
jns
addr16
jg
push
jb
scas
addr16
pop
arpl
nop
or
inc
xlat
test
idivb
out
lea
add
mov
mov
lcall
clc
mov
inc
sti
mov
pop
push
stos
aad
add
push
fisttps
push
sbb
pop
insb
push
mov
xchg
add
pusha
pop
dec
and
pop
dec
sbb
cmp
jo
dec
sub
pop
dec
inc
or
mov
sub
jmp
shr
xor
lcall
insl
push
cmp
jns
fsubrl
and
sub
cmp
cmc
ds
jmp
or
or
cmp
xchg
jmp
pop
adc
loop
test
or
jmp
jb
sub
rcr
add
aas
inc
mov
and
pop
dec
jns
arpl
decl
add
cmp
sti
or
inc
sub
push
push
xor
pop
imul
loopne
pop
enter
incl
lods
pop
leave
xlat
fmull
data16
mov
sub
iret
daa
and
bound
inc
push
movsb
fisttpll
dec
lahf
out
push
cmpsl
inc
mov
or
push
std
fildl
push
jle
and
sub
add
xchg
add
lea
scas
add
add
or
sbb
int
or
es
add
xchg
adc
adc
mov
ljmp
cmp
sub
int
fwait
test
jle
cld
xchg
mov
cld
mov
add
std
ss
pop
int3
push
add
lea
add
xor
call
scas
addr16
adc
arpl
addr16
pushf
arpl
cmp
out
movsb
out
xor
out
scas
fisubs
adc
pop
jmp
je
pop
pandn
add
movsb
fisttpl
xchg
mov
add
in
or
sub
ret
or
push
addr16
mov
in
sarl
out
scas
scas
ljmp
leave
push
jne
repz
out
fdivrp
lods
mov
or
int
or
jmp
fwait
shll
lods
lods
add
pop
call
jbe
push
repz
mov
dec
mov
aad
or
pop
daa
je
cltd
imul
out
lcall
cmc
add
or
mov
jae
daa
sub
adc
and
inc
fldenv
add
push
test
mov
add
arpl
lret
add
or
sbb
inc
add
test
or
fisubs
orb
addb
aas
dec
add
arpl
scas
arpl
mov
pop
add
arpl
xchg
aas
adc
mov
aaa
inc
out
add
jp
and
insb
add
sub
and
add
inc
call
xor
cmp
jns
jge
push
imul
scas
pushf
jno
test
cmc
and
dec
inc
jno
cmp
cld
cmp
aaa
jb
jo
sub
xor
mov
xchg
and
scas
adc
mov
lar
cmpsl
stc
cmp
nop
lock
jl
mov
insl
rclb
jle
xchg
sbb
xorb
enter
clc
or
pop
andb
aad
test
add
scas
adc
and
push
pop
add
mov
add
lods
jmp
cmp
jbe
push
addr16
sarb
pop
xor
xchg
jb
addr16
int3
push
insb
inc
mov
addr16
nop
cmp
ret
sub
or
lods
call
add
addr16
mov
bound
daa
addr16
add
scas
cmp
dec
push
lret
add
push
push
push
dec
sub
jmp
scas
mov
and
push
test
or
scas
mov
and
addr16
data16
sub
and
stos
sub
add
add
es
call
sbb
jmp
lods
xchg
ret
call
and
jmp
lods
add
adc
clc
add
addl
incb
js
test
sub
pop
stos
pop
test
push
push
cmpl
mov
cli
xor
call
pop
cld
mov
xor
incl
ja
and
imul
call
xor
ljmp
cmp
icebp
out
mov
or
or
into
add
add
in
js
fiaddl
push
mov
adc
mov
xor
jmp
movsl
sub
adc
jmp
add
sgdtl
and
sbb
cmp
stc
xchg
adc
or
stc
lret
mov
lods
push
test
hlt
call
xor
test
scas
adc
addl
add
and
pop
xchg
add
addl
add
jbe
clc
adc
addr16
daa
ljmp
add
xchg
jo
daa
ljmp
add
jmp
iret
addl
out
loopne
fs
shll
arpl
out
sbb
add
addr16
outsb
sti
dec
fwait
add
addr16
mov
jb
ss
and
push
mov
jno
mov
addr16
xchg
dec
sarl
popl
add
addr16
sbb
inc
add
outsb
loop
scas
adc
rclb
mov
add
xlat
mov
inc
cmp
add
jmp
xlat
mov
std
cmp
lods
add
jge
enter
cld
dec
xor
or
jmp
xor
or
in
out
or
push
popf
ja
dec
or
lcall
jb
jb
mov
scas
rcr
out
add
dec
out
addl
and
push
stc
mov
add
jb
incl
mov
add
ret
add
xor
call
into
cmc
leave
xchg
add
inc
fs
loopne
sti
inc
add
mov
inc
add
addr16
dec
fs
je
popf
lret
cld
mov
or
inc
mov
dec
adc
cmpsb
orb
test
and
xchg
and
add
sti
sgdtl
test
and
sbb
test
pop
sbb
test
sbb
test
sbb
test
sbb
clc
and
mov
adc
mov
adc
roll
inc
loop
add
push
xchg
lea
scas
mov
adc
inc
inc
ss
jb
mov
sub
repnz
push
bound
scas
aas
fisubs
in
loop
icebp
inc
imul
push
push
lods
lock
out
out
ss
push
add
push
fs
scas
adc
lods
je
jle
out
insl
scas
addr16
jo
sub
xchg
cs
mov
popf
negl
push
or
outsl
addr16
xlat
int3
inc
push
mov
stos
mov
jl
inc
add
bound
dec
cmp
dec
sbb
das
inc
push
call
aas
cld
cld
jb
dec
adc
std
push
bound
cmp
inc
push
call
cmp
cld
xchg
ficompl
test
lea
fisubrs
push
pop
call
push
std
push
pusha
movl
out
mov
adc
jne
iret
fwait
call
xchg
lods
mov
push
push
aas
inc
pop
add
imul
add
push
inc
mov
add
push
inc
jge
nop
pop
add
mov
xor
cmp
sbb
push
dec
add
clc
jl
push
push
push
mov
jle
aad
adc
insb
push
jl
pop
push
push
shlb
aad
cwtl
xchg
add
push
mov
adc
frstor
add
cwtl
push
add
mov
or
cmp
sbb
add
scas
pop
mov
sbb
outsl
imul
inc
pop
or
add
shlb
push
add
ljmp
test
adc
add
pop
mov
and
sgdtl
inc
scas
outsb
test
push
in
dec
xor
aam
mulb
es
incl
xor
out
xor
out
rorb
sahf
pop
xchg
and
jle
pop
out
add
push
xor
cmpsl
add
out
push
movsl
sub
test
lock
xchg
sub
cmpsl
fiadds
mov
out
sub
jg
cli
gs
incl
addr16
jb
addr16
and
out
jmp
test
notb
out
dec
cmc
add
mov
fs
test
lods
cmp
mov
test
out
inc
call
xor
sbb
inc
xabort
xchg
hlt
sti
std
cmpsb
or
pop
or
lods
addr16
adc
cld
jb
lea
mov
lret
push
stos
in
fisttpll
jae
jmp
add
ds
test
repnz
add
fwait
mov
sub
push
fmuls
xchg
adc
add
jg
cmp
push
or
adc
or
mov
repnz
sbbl
or
outsl
out
decl
pop
push
or
dec
pop
js
jno
mov
jge
js
lret
int
xor
xor
xor
into
pop
shlb
jno
in
scas
mov
cmp
sbb
jmp
es
les
jo
repz
push
add
and
pop
adc
mov
mov
push
xor
out
data16
aas
mov
mov
sbb
inc
pop
push
shlb
add
or
outsl
cli
dec
or
mov
add
fisubs
loopne
xchg
sti
push
sbb
push
xor
push
pop
in
mov
pop
icebp
addr16
outsl
insb
fcomps
test
cmpsb
out
mov
push
popa
sbb
imul
inc
out
ror
ret
stc
mul
adc
cmpsb
movl
add
cmpsl
xchg
adc
stos
movl
shll
pop
add
loop
lock
orl
scas
add
pop
xor
add
addr16
xorl
mull
scas
addr16
xorl
addl
xor
outsb
int
jl
lods
test
add
jp
xchg
addr16
insb
cmpsl
aaa
cmpsb
add
inc
xchg
add
ja
mulb
pusha
mov
mov
out
mov
cld
ret
jno
mov
cmp
test
mov
jmp
dec
hlt
cmp
mov
pop
mov
shrb
jb
adc
add
das
pop
or
stos
fiadds
sbb
xchg
fists
add
sbb
xchg
sub
add
stc
in
loopne
sti
cmp
add
sti
call
iret
push
mov
aas
testb
adc
xor
insb
adc
push
jmp
sub
clc
fcoml
mov
dec
pop
sbb
jmp
or
dec
jg
rcrl
cmp
pop
icebp
cmp
mov
add
or
add
push
data16
minps
scas
xor
scas
imul
arpl
adc
mov
pop
std
inc
shrl
popf
pusha
cmp
mov
adcl
add
test
stc
inc
jne
std
test
mov
push
adc
and
scas
mov
je
add
or
mov
incb
out
sub
std
loop
and
scas
or
xchg
ret
mov
movl
cltd
addr16
ret
add
repz
push
sub
int3
add
addr16
inc
jbe
ret
push
orl
arpl
gs
filds
scas
cmpsb
repnz
lcall
pop
cs
push
add
and
pop
repnz
and
jmp
pop
loop
mov
push
sub
cmc
shl
std
mov
inc
out
mov
repnz
or
addr16
mov
hlt
cmp
int3
addr16
xor
clc
xchg
shrl
pop
leave
lods
addr16
jle
addr16
lods
or
outsl
jmp
arpl
out
sbb
push
pop
or
ds
or
jmp
lods
addr16
jmp
lods
fs
test
cld
mov
mov
addr16
data16
cld
and
jge
push
out
cld
into
mov
out
or
gs
imul
xchg
sti
cmp
mov
add
add
xchg
das
rclb
fldenv
jle
push
gs
int3
xchg
sti
mov
decb
adc
inc
ja
pop
enter
lds
cli
dec
mov
data16
sbb
xchg
loopne
mov
js
pop
scas
xchg
sbb
je
mov
and
mov
gs
inc
cmp
and
xor
push
cmp
or
scas
incb
cmp
push
enter
test
scas
incb
or
outsl
jle
and
popa
or
dec
sub
rol
add
inc
loopne
xchg
and
test
and
or
or
jb
leave
mov
add
cmc
or
xchg
pop
outsl
decb
mov
js
fs
mov
loopne
and
loopne
and
add
xor
pop
push
ret
out
out
jmp
aas
cld
insl
pop
sub
idivb
pop
out
es
or
movsb
add
pushf
or
adc
pop
pop
dec
outsb
sbb
imul
out
arpl
out
adc
add
out
jno
mov
inc
add
pop
add
push
mov
cmp
shll
cld
das
daa
or
jmp
adc
inc
call
sub
arpl
xchg
mov
xor
jmp
mov
mov
ljmp
mov
mov
xchg
sub
or
xchg
pop
xchg
out
or
movsl
mov
in
mov
in
jl
loope
int3
mov
dec
sub
dec
and
aas
jmp
sbb
jl
cmovs
mov
movsl
popf
test
or
add
mov
add
loopne
and
loop
and
loop
and
outsb
shlb
cli
inc
push
xchg
out
xchg
xor
sub
es
and
dec
lret
dec
pop
insb
adc
jo
push
imul
mov
xor
xor
sbb
out
pop
add
add
or
rorb
lds
lahf
mov
sbb
rcll
enter
jmp
mov
jl
bound
jo
jge
or
add
out
out
adc
mov
sub
ret
mov
add
inc
mov
sbb
movsl
pop
mov
adc
aam
ret
cmp
or
and
mov
mov
popaw
ljmp
pop
fs
movsl
addr16
scas
lods
fcoms
pop
xchg
mov
pop
popf
shrl
jb
cs
cmpsl
les
movsb
add
mov
add
sub
fisttps
jg
cmpsl
test
inc
mov
outsl
outsl
loope
and
test
inc
cmc
ljmp
pop
xlat
movsb
inc
pmaxub
cmpsl
mov
decb
out
cmpsl
add
loopne
inc
mov
inc
or
lret
fcomps
scas
in
ljmp
cmp
test
sbb
cld
out
pop
inc
mov
outsl
hlt
addl
loop
add
and
add
js
test
mov
add
adc
xchg
push
pop
mov
popl
test
xchg
enter
pop
lds
addr16
jl
idivl
jo
dec
dec
add
xor
inc
or
dec
stos
and
fildl
cli
dec
mov
rsqrtps
out
leave
out
and
arpl
test
or
inc
aaa
lret
mov
pop
mov
add
add
push
xchg
push
loopne
and
dec
inc
and
sbb
inc
xchg
dec
lret
fisttps
add
jge
and
incb
adcl
les
orb
and
add
ret
sbb
jg
push
mov
mov
jne
std
add
mov
sar
cld
add
mov
mov
push
mov
sub
add
data16
nop
xor
pop
push
scas
incb
add
add
xchg
out
testl
pushl
incb
je
mov
jbe
sbb
fisubs
add
jb
push
adc
xchg
pop
add
call
call
push
repnz
inc
outsl
fisubs
xlat
mov
out
in
add
addr16
lea
inc
fidivrs
dec
out
ss
and
lock
lret
mov
mov
xor
iret
push
sub
sub
fimuls
out
ss
outsl
enter
cmp
scas
addr16
jbe
test
scas
addr16
lods
sbb
and
mov
aas
and
arpl
bound
mov
lods
mov
cmpl
pop
mov
sbb
lods
lock
out
jmp
mov
mov
mov
pop
sbb
cld
sbb
cmp
dec
jb
iret
repnz
in
fs
je
cmpsb
push
mov
lods
mov
xchg
adc
inc
add
inc
push
jg
push
mov
mov
xorb
stos
test
jae
jl
call
in
mov
mov
imul
cmp
or
sar
xor
mov
sub
je
or
and
jg
xchg
bound
jno
adc
lcall
aaa
sti
imul
sub
mov
cmp
stos
hlt
or
add
call
pushl
jb
inc
loop
leave
xor
adc
add
push
inc
loop
mov
xor
out
dec
shlb
pushf
sarl
pop
inc
xchg
and
jecxz
inc
inc
and
mov
mov
iret
xchg
jb
inc
xchg
xchg
adc
out
dec
cmp
addb
rclb
adc
out
inc
lds
xchg
negb
test
cmpsl
lock
cld
pusha
rorb
in
mov
scas
and
je
jae
inc
daa
add
xor
sub
mov
outsl
jmp
daa
out
sub
in
add
in
cltd
insb
lods
pop
sub
call
jp
mov
jp
mov
jp
mov
add
mov
popf
adc
cmp
idivl
cmp
in
xor
and
cmpsl
es
mov
or
cli
or
push
add
sub
je
ljmp
je
in
movsb
lock
jmp
cmp
test
lods
mov
xlat
xchg
inc
jo
xchg
jb
lret
adc
je
xchg
nop
in
push
xchg
stc
in
out
mov
push
and
mov
or
sub
jmp
sub
je
ljmp
add
and
add
xchg
pop
add
arpl
add
bound
xchg
mov
adc
pop
out
addr16
xor
fmuls
push
push
push
xchg
cmpsb
test
push
push
cltd
cli
and
add
pop
imul
inc
xor
mov
data16
popf
call
test
add
add
xchg
inc
cmp
mov
jae
inc
mov
jg
imul
mov
aam
les
cmpl
inc
jmp
jp
pusha
or
idiv
dec
std
and
sub
into
add
xlat
jmp
les
not
and
cmpb
add
or
loopne
scas
into
ja
lret
ret
jae
clc
cmp
or
fwait
leave
jns
orl
jmp
shll
and
mov
out
scas
pushf
loopne,pt
in
add
sahf
sub
iret
pop
in
mov
mov
daa
out
out
es
repz
arpl
sbb
loopne
or
push
jo
sti
popf
addr16
xor
cmpsl
jp
mov
mov
loopne
daa
imul
ss
call
xchg
xchg
inc
call
daa
jnp
out
pusha
in
and
lret
sub
cmc
xchg
out
es
insb
fdivrp
jmp
pop
mov
mov
jmp
stc
jmp
sub
stos
add
jmp
xlat
aaa
das
cltd
shrb
and
loopne
arpl
mov
xor
xchg
lock
insb
fdivrp
jmp
je
mov
mov
mov
stos
push
loop
or
and
repz
add
mov
call
mov
loopne
push
and
lds
jmp
sub
out
rolb
or
ds
xor
xchg
pop
pop
and
push
xor
push
test
push
jne
inc
mov
cmp
test
xchg
cmp
pop
inc
and
loope
inc
push
and
or
clc
inc
add
push
and
lea
ret
mov
in
add
out
sbb
cld
push
jo
pop
pop
push
push
test
xchg
loope
inc
ljmp
mov
or
inc
ss
adc
or
sbb
in
sbb
xor
add
sub
dec
adcl
arpl
sti
popl
outsl
or
mov
into
jns
xchg
fidivrl
ret
leave
sub
inc
push
pop
scas
mov
scas
mov
mov
xor
pop
stc
add
into
add
pushf
into
add
sarl
sbb
or
adc
xor
cmpsl
or
out
jg
js
add
mov
jg
js
add
sub
out
out
es
mov
adc
iret
dec
lods
addr16
ljmp
add
mov
bound
daa
jo
add
mov
test
insb
push
aas
fdivrl
bound
test
jno
pop
stos
in
arpl
adc
imul
push
and
fs
mov
push
pusha
ficomps
adc
lods
out
inc
xchg
out
out
stos
addr16
push
dec
jno
sub
or
jmp
jo
outsl
xchg
mov
add
dec
dec
or
mov
adc
push
not
add
jmp
cmp
xchg
sti
lods
cmp
addr16
test
adc
lods
lock
lds
fwait
xchg
icebp
mov
add
jae
xchg
inc
jnp
cmp
rorb
cmp
mov
sub
sti
fldlg2
incb
push
sub
and
fnstsw
mov
adc
inc
and
cmpsb
test
aaa
ret
in
xchg
xor
test
aaa
rorb
loopne
inc
data16
pop
mov
and
pavgb
sbbl
js
lds
or
cwtl
fimuls
add
outsl
addl
mov
cld
jge
and
adc
rcl
or
jno
pop
test
rolb
xor
inc
xchg
mov
shlb
iret
or
roll
stc
int3
roll
rolb
sub
hlt
jge
cmpl
into
repz
add
and
and
push
shlb
gs
jle
test
pop
iret
xadd
push
shlb
lds
or
scas
mov
imul
dec
data16
inc
mov
dec
addr16
sub
in
stos
pop
mov
jae
inc
imul
pusha
rorb
add
push
out
bound
fsubl
add
cltd
clc
add
daa
pusha
mov
icebp
mov
addr16
outsl
daa
pusha
mov
mov
fidivrl
sbbb
xor
cmc
lea
arpl
call
int
or
jmp
in
loopne
add
cltd
shlb
loopne
add
inc
call
cmpsl
cmp
dec
lock
repz
add
sub
xor
insl
sub
test
jmp
stc
lods
mov
xchg
pusha
mov
add
push
rcl
adc
and
push
cmpsl
jnp
dec
xor
out
sub
add
loop
sub
add
ljmp
add
in
and
aad
jle
xchg
xor
stos
test
aaa
shlb
ret
aaa
pop
add
jns
je
push
punpckhbw
inc
fisubrl
or
dec
mov
inc
and
stos
test
aaa
ret
xchg
xchg
aad
and
jp
jnp
sub
andl
data16
jg
or
pop
and
in
testl
movsl
rolb
roll
jp
rorb
add
add
scas
inc
ret
mov
mov
rorb
cltd
sub
rolb
out
adc
mov
adc
test
daa
mov
inc
cmp
xor
sti
inc
ret
pop
adc
inc
ret
inc
in
push
fsubs
lahf
mov
and
cmp
and
push
jbe
or
push
fcmovu
and
mov
gs
es
lret
aad
ret
xor
divl
jle
shll
call
inc
inc
mov
add
mov
js
xor
add
lcall
mov
addr16
xchg
daa
call
out
nop
mov
sub
fs
cs
imul
jecxz
les
adc
mov
sub
and
jmp
out
nop
dec
out
int3
jno
out
rorb
es
jle
ret
enter
pop
adc
lds
std
jbe
fimuls
or
inc
and
inc
jno
lahf
sbb
jae
repz
mov
sarb
mov
out
repz
jno
xchg
add
xor
sar
push
pusha
je
sub
or
mov
fs
cld
out
sub
mov
mov
cld
bound
and
jge
aaa
pop
ljmp
xadd
clc
aas
bound
push
int3
or
inc
add
push
bound
aam
int
movl
out
mov
sar
cltd
bound
je
in
and
pop
cmp
inc
or
mov
cmpsl
aad
hlt
xchg
sti
decl
push
jg
pop
xchg
sti
imul
add
fsubrs
or
dec
cmp
test
cmp
cmp
add
loope
cmp
rolb
test
aam
adc
inc
out
mov
std
clc
push
int
iret
and
push
orl
pop
add
sub
or
cmp
rolb
cmp
mov
sbb
cwtl
sarb
int3
xchg
lds
std
subb
add
push
jb
aad
and
lds
pushf
fldl2e
add
shll
call
push
rcrl
or
and
or
sub
or
popf
imul
mov
rcl
xchg
aas
ljmp
out
sarb
lds
add
popa
insb
addr16
sbb
out
push
sub
add
mov
sar
repz
rorb
mov
inc
sbb
mov
rolb
data16
or
out
nop
sar
repnz
stos
sbb
jb
xchg
imul
lods
ja
fs
and
jl
aad
sti
outsb
ret
mov
aas
insl
or
sbb
mov
xor
fwait
rolb
add
xor
out
out
adc
push
dec
add
sub
mov
insb
into
cld
add
xchg
or
dec
data16
test
nop/reserved
inc
ja
pop
enter
jge
lahf
jo
aad
incl
mov
dec
xchg
push
imul
push
jl
add
imul
sahf
mov
mov
mov
incl
faddp
lcall
enter
push
cmp
pop
add
push
mov
scas
std
call
mov
push
stos
xlat
in
jae
sti
test
mov
xchg
and
nop
out
cmp
dec
dec
std
add
push
jo
fcompl
rolb
sbb
pop
sarb
mov
scas
test
faddl
inc
std
jg
test
aaa
add
out
in
fisttpll
mov
rorl
push
inc
fbstp
movsb
in
mov
std
inc
fwait
mov
add
fdivrs
add
mov
add
scas
addr16
add
mov
fimuls
fistps
clc
out
das
mov
iret
std
dec
bound
shrl
call
rorb
aad
adc
fcoms
out
add
sahf
mov
scas
jo
sub
add
adc
xlat
and
out
out
cmp
je
out
or
xlat
add
out
imul
push
cmp
push
mov
and
call
mov
test
xchg
lods
add
mov
xor
stos
les
jo
or
or
mov
xchg
rcr
stc
xor
mov
mov
mov
hlt
push
inc
jmp
dec
jo
out
and
sub
scas
ja
add
jae
pop
aas
add
jg
or
cld
jmp
nop
sbbl
inc
sbb
pop
sbb
add
jns
mov
pop
int
jmp
mov
fcmovb
incl
pop
add
addr16
mov
mov
call
out
jge
jno
outsl
sbb
adc
add
jbe
xchg
arpl
add
cmp
arpl
ret
add
test
int
and
add
add
add
mov
insb
cld
decl
bound
push
cld
decl
xchg
sti
ljmp
mov
into
cld
add
inc
rorb
mov
sub
imul
test
rolb
xor
loopne
scas
rolb
fcoms
pushl
mov
sti
inc
add
add
dec
push
fisttpll
rolb
jmp
sbb
insb
loopne
xor
sub
test
add
movsb
fmull
clc
mov
pinsrw
outsl
mov
call
sbb
jb
pop
lret
push
push
lret
xlat
test
test
xchg
add
add
sub
lret
xor
movzbl
add
popa
leave
out
jmp
jmp
fcompl
xor
es
loopne
and
jmp
lods
mov
mov
mov
mov
out
movsl
mov
push
inc
push
sbb
lods
addr16
fisttps
inc
pusha
sbb
lea
add
adc
cs
pop
jmp
or
jmp
mov
push
push
pop
test
mov
mov
add
xor
popf
mov
call
ja
cld
jmp
lods
addr16
xchg
mov
mov
cmpsl
or
scas
leave
cld
cmpsb
pop
sub
lds
and
pop
movntq
add
add
xchg
adc
adc
or
fs
pop
add
cli
fisubs
cmp
cmp
arpl
negl
sti
addl
std
push
dec
push
call
cmp
or
adc
or
xchg
pop
insb
add
mov
faddl
inc
sbb
mov
outsl
aas
test
or
out
and
add
add
mov
std
call
inc
sar
scas
and
pop
scas
rolb
mov
xor
cmp
add
call
rolb
call
sub
das
std
shlb
and
mov
add
gs
and
sti
mov
mov
movsl
inc
icebp
mov
jmp
adc
aaa
lds
mov
sbb
jmp
scas
test
and
cmp
mov
jl
roll
inc
out
cmp
xchg
xor
and
pop
mov
jno
shll
call
mov
cli
add
fld
out
cld
lds
add
mov
xor
mov
ja
shll
call
out
out
xchg
das
xor
adc
xor
stos
out
xor
jb
add
add
jbe
je
addr16
pop
jne
pop
mov
add
inc
sbb
pusha
push
and
cmp
ret
daa
mov
addr16
adcb
int
jle
lds
add
add
std
or
xchg
inc
fiadds
push
mov
out
xor
jmp
jg
cld
jmp
movsb
daa
push
mov
lods
add
ret
push
scas
push
out
loopne
pop
call
push
and
call
pop
push
pusha
cli
xlat
stc
jbe
shlb
add
ja
mov
push
push
dec
and
rorb
out
mov
adc
cmp
jbe
fnstcw
and
leave
in
out
push
xchg
std
inc
test
dec
mov
js
and
data16
sbb
mov
call
cmp
xchg
pushl
addr16
mov
xchg
std
incl
xchg
add
sbb
sub
and
call
inc
adc
jns
lret
shr
shrl
mov
roll
add
xchg
mov
std
clc
shll
and
hlt
inc
mov
adc
pop
test
lods
add
xchg
adc
add
mov
js
or
add
xor
sub
add
mov
pop
scas
rolb
std
inc
lods
int3
jo
sub
add
ret
outsl
cmp
pushf
mov
or
cmp
out
inc
jne
mov
int3
pop
testb
and
ljmp
mov
outsb
andb
nop
jb
pop
mov
out
sub
test
arpl
dec
ja
mov
call
cs
mov
cmp
rcrb
out
xchg
cld
lret
shl
cmp
xchg
pop
sar
xor
stc
out
dec
repnz
cld
jmp
sub
xchg
cmp
push
or
or
mov
add
dec
cmp
rol
mov
subl
out
push
add
out
inc
std
cld
xor
jmp
xor
jmp
ret
into
and
inc
bound
sub
mov
shrb
call
mov
into
inc
sub
inc
xchg
or
xchg
out
cmovno
imul
icebp
xchg
sti
and
or
push
out
or
call
or
xchg
lea
xlat
out
or
pop
add
add
cli
add
arpl
neg
arpl
jmp
lods
mov
cmovne
add
xchg
jmp
or
imul
sub
push
sub
mov
push
add
sarb
iret
int
lds
mov
add
xor
add
mov
jecxz
mov
rolb
jmp
popf
sub
popf
mov
add
inc
add
scas
jmp
stc
subl
call
sub
xor
shll
les
add
xchg
sub
rorb
ror
add
pop
jge
jecxz
add
add
addr16
jae
add
shll
mov
xlat
sbb
mov
mov
cli
sub
jmp
scas
repnz
push
xor
test
pop
shlb
repz
sub
jb
je
out
es
sub
xor
rcrl
call
filds
xchg
sub
es
sub
pop
sub
iret
cmp
shlb
ljmp
out
add
jno
xchg
add
inc
lds
add
mov
jmp
addr16
shr
mov
cmp
orb
bound
ss
sub
and
std
sub
pop
add
and
call
stos
mov
cld
jmp
and
push
xchg
repz
popa
mov
cld
jmp
iret
and
inc
push
sti
mov
cmp
je
jmp
sti
jne
cmp
inc
addl
std
push
mov
mov
cmpb
jno
add
hlt
and
mov
inc
or
movsb
and
mov
mov
cmp
inc
pop
mov
cmp
jge
or
sbb
je
push
inc
xor
inc
mov
cld
dec
je
cmp
iret
add
es
test
scas
into
repz
mov
iret
add
and
fldl
rolb
inc
add
shrl
daa
mov
add
add
inc
sar
jne
pop
scas
rolb
add
and
add
cmp
add
lcall
subb
and
adc
jae
ljmp
call
jl
pop
scas
rolb
or
lret
enter
testb
call
inc
jo
sbb
add
mov
out
xor
ret
xlat
fisubrs
sarl
and
scas
xchg
jno
push
pusha
sbb
out
sbb
lock
sub
push
in
xor
cmp
out
addr16
sub
sbb
insb
mov
addr16
es
and
mov
addr16
add
out
dec
xchg
cmc
outsb
mov
orl
sub
popf
fcomps
mov
lods
mov
cld
jmp
pop
jns
sbb
cmp
mov
cld
jmp
stos
add
out
mov
addl
mov
call
add
in
sub
jne
sbb
mov
stos
mov
cld
jmp
push
hlt
cmp
popa
aaa
and
add
cmp
std
call
xorl
aas
call
or
test
sti
incl
outsl
cld
call
pop
push
add
mov
mov
push
movsb
dec
incl
lcall
mov
fs
mov
scas
std
call
mov
push
hlt
cmp
popa
dec
and
pop
add
dec
stos
sti
mov
scas
std
incl
addr16
push
pop
add
fs
mov
call
jl
scas
into
add
cmp
scas
into
add
sbb
pop
iret
add
mov
xor
add
jo
shlb
shrl
push
js
fstpl
rolb
and
rorl
push
jp
mov
xchg
mov
fdivrp
sti
xor
add
sbb
adc
or
call
stos
std
sub
sti
ret
mov
adc
call
jbe
add
push
mov
mov
mov
call
lock
sub
cwtl
xor
mov
mov
jmp
add
or
and
jmp
mov
loopne
xor
in
out
mov
and
sti
or
xor
scas
xchg
loopne
mov
call
add
mov
inc
mov
jmp
stos
add
cmp
cld
fs
orl
mov
xor
and
and
faddp
push
mov
and
out
ljmp
cmp
inc
jmp
stos
addr16
mul
jns
mov
xor
add
and
fdivl
std
incl
cli
xchg
out
fcmove
lcall
mov
lcall
pop
inc
and
data16
cmp
inc
add
fwait
add
push
in
inc
xchg
mov
std
push
and
pop
rclb
int3
xor
inc
or
push
and
or
add
loope
arpl
mov
inc
mov
das
add
inc
loope
and
in
and
loope
xchg
push
push
test
int3
mov
mov
cmp
jne
mov
bound
mov
sub
and
inc
fildll
addb
ss
imul
test
push
out
xor
std
xor
in
out
sbb
xchg
or
test
sub
out
rorb
scas
inc
lods
and
inc
lds
getsec
into
ljmp
loopne
mov
popa
pop
add
and
in
scas
rolb
ss
cmp
pushf
adc
xor
pusha
mov
call
mov
daa
out
add
lret
mov
add
mov
call
add
lahf
test
adc
add
mov
dec
and
out
outsb
sub
sub
out
scas
je
pop
mov
addr16
sub
mov
pop
cmpb
sub
out
scas
fisubs
add
mov
out
mov
jge
mov
std
cmp
mul
push
in
fisubl
add
add
fisttpll
sub
push
cmp
filds
out
push
int
leave
pop
sahf
xchg
mov
and
enter
lods
jo
out
sub
icebp
jbe
mov
xor
test
jbe
cld
push
xor
and
mov
jmp
jmp
nop
icebp
call
xor
adc
add
pushf
lods
cld
add
mov
inc
and
fimuls
adc
adcb
mov
enter
adc
adc
jle
std
inc
push
push
out
in
call
out
int3
push
sti
cmp
stc
cmp
add
cli
cmp
add
in
cmp
add
cmp
add
inc
in
cmp
add
repz
add
mov
scas
jns
ds
lret
scas
divb
ds
ror
ds
or
ds
pop
mov
ds
mov
mov
ds
xchg
mov
ds
push
mov
ds
add
add
adc
ds
ljmp
scas
js
ds
out
movsb
ds
movsb
ds
or
movsb
ds
addr16
cmpsl
mov
popa
cmpsl
test
addr16
cltd
addr16
lcall
shlb
jns
dec
lret
jno
or
addr16
fldenv
test
movsb
test
addr16
add
addr16
mov
outsb
mov
addr16
xchg
mov
addr16
addr16
pushf
andl
xchg
jno
inc
pushf
jmp
addr16
mov
addr16
sahf
shll
add
push
in
subb
movsb
data16
test
dec
mov
pop
adc
pop
and
cmc
pop
push
adc
loop
dec
sbb
cmp
iret
add
mov
or
xchg
or
or
sub
sbb
dec
and
pop
dec
xor
jge
xor
js
js
xlat
std
jae
shl
cmp
icebp
pop
dec
and
imul
outsl
and
je
nop
adc
outsb
add
push
or
add
or
add
or
add
add
and
or
add
pop
ds
pop
add
add
add
pop
ds
or
add
or
add
or
add
cli
cmp
add
sti
cmp
add
sti
cmp
add
add
add
sarl
add
ds
cli
cmp
add
es
cmp
ds
testb
fwait
mov
scas
testl
scas
jmp
nop
ds
cmp
ds
enter
imul
scas
push
nop
ds
adcb
scas
mov
incb
mov
add
scas
inc
lds
mov
orl
pop
subl
mov
add
rcr
lods
cs
mov
je
stos
fisttps
add
mov
adcl
jmp
pop
mov
cmp
or
or
out
roll
sbb
or
jecxz
or
inc
call
loopne
push
pop
fs
mov
addr16
js
inc
adc
scas
pop
pop
mov
bound
pop
pop
sbb
jecxz
jae
sysret
cli
and
shrl
int3
and
pop
or
insb
inc
mov
push
pop
add
xchg
xchg
daa
xchg
xchg
jl
or
test
inc
add
cld
jmp
mov
call
push
xchg
xlat
ss
loope
mov
or
dec
loope
ljmp
mov
or
subl
data16
rcrl
inc
sbb
jnp
xor
test
or
into
popa
mov
add
fildl
add
add
inc
test
fiadds
add
test
fiadds
and
mov
add
call
das
dec
mov
mov
xchg
add
xchg
and
test
faddl
scas
mov
ljmp
sbb
add
scas
xor
stc
and
andb
add
xor
inc
call
xor
add
push
or
push
mov
inc
call
sub
xchg
outsb
data16
and
ss
dec
mov
inc
out
pop
inc
mov
pop
add
scas
mov
add
pop
sarl
outsl
addr16
out
sub
ret
xchg
xor
lret
addr16
sti
orb
rol
out
scas
lock
pop
scas
addr16
test
loop
addr16
scas
sbb
jo
out
jecxz
xchg
sub
in
scas
pop
xor
sub
imul
mov
repnz
daa
sub
sub
inc
sub
add
out
movsl
pop
mov
xor
or
out
scas
add
stos
ljmp
shrl
shl
jae
jmp
inc
les
cmp
lods
push
add
mov
jmp
jg
cld
mov
mov
xchg
xchg
dec
aaa
add
lcall
insb
add
jecxz
or
lods
nop
add
inc
popl
xchg
scas
mov
mov
and
xor
jle
cltd
out
rcll
inc
add
push
push
inc
mov
test
call
xlat
imul
je
inc
xchg
in
filds
aas
out
and
imul
add
xchg
decl
xor
add
in
into
add
or
xlat
repz
dec
popa
jl
lret
repz
push
insl
xchg
xchg
dec
add
arpl
call
test
std
add
adcl
les
fdivr
add
pusha
and
popl
add
arpl
push
xor
xchg
test
and
popl
add
mov
add
pop
nop
and
sbb
and
xchg
push
aas
mov
mov
add
adc
arpl
push
jns
xchg
es
scas
adc
rcrl
add
mov
jg
sbb
stc
test
stos
pusha
iret
xchg
add
sub
pusha
lock
call
cwtl
call
xor
fisubl
out
pop
nop
jnp
pop
fbld
out
arpl
jp
dec
sub
sbb
imull
cltd
cmpsl
ljmp
fldl
inc
mov
sbb
sub
loopne
sub
repz
ret
mov
dec
push
lret
iret
mov
mov
add
mov
add
inc
sbb
pop
inc
adc
xor
dec
call
in
push
lret
loop
sbb
shrb
mov
mov
cld
jp
lock
lds
imul
out
xchg
add
adc
and
mov
push
bound
mov
repnz
mov
inc
add
pushf
lock
adc
inc
and
aaa
cmpsl
jb
negb
and
imul
lods
test
ret
aaa
clc
jns
xchg
pushf
scas
and
jg
pop
cli
or
mov
scas
divb
sbb
xchg
and
insb
add
dec
pop
or
add
fs
pop
fldenv
inc
jp
aaa
testl
cmp
mov
je
clc
push
or
add
jp
call
scas
mov
mov
mov
or
scas
enter
sahf
sbb
pop
jae
add
sbb
scas
add
add
add
add
ffreep
addb
jge
and
loopne
sti
stos
push
add
lcall
call
pop
and
mov
add
lock
adc
jae
xor
push
add
mov
adc
cmpsb
in
cmp
jno
call
xchg
mov
mov
pop
mov
pop
fs
or
mov
test
jmp
mov
push
or
adc
orl
sub
test
and
xchg
ljmp
insb
push
jb
int3
daa
xor
add
inc
movsl
or
addr16
fstps
lret
add
add
mov
int
adc
sub
sbb
and
call
mov
arpl
sub
cmp
and
or
and
daa
clc
test
out
icebp
scas
jno
mov
insb
cmpl
aas
inc
lods
jmp
pop
cmp
incl
jmp
lods
jo
push
shll
out
add
xchg
mov
mulb
add
jmp
push
mov
clc
cmp
xchg
adc
cmpsl
and
ret
and
inc
xchg
xchg
repnz
lods
outsl
sti
lcall
push
incb
push
push
std
gs
pushl
jno
cmp
out
adc
js
add
add
loop
push
sub
jle
out
rcpps
add
jl
mov
mov
aaa
out
mov
push
pop
and
push
xchg
and
cli
add
scas
orl
jae
add
je
cltd
adc
dec
lea
mov
mov
mov
call
sub
xorb
fcompl
xor
mov
mov
jmp
and
jns
jne
sbb
cmp
nop
jb
adc
ljmp
mov
scas
mov
scas
mov
mov
lea
scas
mov
mov
mov
testb
sbb
std
dec
adc
inc
xchg
mov
aaa
and
in
bound
fninit
fnsave
or
add
fwait
add
sbb
lahf
scas
adc
jbe
enterw
out
scas
lock
jl
popw
or
push
mov
adc
sub
mov
jge
inc
inc
add
dec
adc
mov
loop
mov
test
out
and
clc
out
test
sub
call
cmp
adc
mov
push
imul
lods
push
pushf
or
shrl
and
inc
sub
jo
inc
sub
addr16
hlt
in
inc
jmp
lods
add
lock
lock
or
aas
call
jo
jne
cld
fdivl
jmp
mov
or
movsb
adc
mov
and
es
addr16
add
lds
xchg
push
std
incl
arpl
add
data16
std
fidivrl
mov
xchg
add
xchg
sub
jns
int
out
int
and
push
data16
xchg
xchg
ljmp
mov
data16
mov
sbb
std
fs
mov
in
cmp
gs
scas
arpl
scas
in
in
or
and
pop
add
jge
push
es
loopne
xchg
jno
scas
adc
jge
test
jb
scas
mov
xchg
mov
mov
call
in
cld
mov
add
mov
test
xchg
mov
add
pop
lea
pop
mov
jae
adc
mov
clc
sub
cmp
mov
outsl
mov
dec
add
jp
sti
ffreep
imul
fimull
imul
or
adc
fsubrs
arpl
decl
test
shlb
xlat
out
scas
out
fs
add
jb
icebp
mov
mov
fwait
jmp
adc
add
ja
mov
jae
sbb
lret
shll
xchg
bound
andl
push
addr16
daa
mov
sub
addr16
add
add
push
push
test
out
xchg
push
xchg
test
call
scas
add
dec
adc
ljmp
jnp
jmp
jg
add
mov
and
scas
add
dec
adc
lods
addr16
jne
jnp
jmp
aas
push
and
scas
add
fs
lods
add
dec
adc
lods
mov
lock
lods
cmp
in
out
arpl
xlat
aaa
dec
or
aad
add
leave
out
cmc
add
push
incl
jmp
push
fcmovne
out
in
push
aaa
cmp
adc
imul
xchg
enter
add
fistpll
push
in
sub
add
pop
jbe
adc
int
and
mov
sarb
repz
test
movd
lea
xchg
aas
add
push
add
cs
dec
mov
or
xchg
insb
add
adc
scas
inc
add
shlb
and
cmp
xchg
xor
mov
cli
inc
scas
scas
je
mov
jle
mov
push
push
jo
mov
scas
inc
inc
and
addb
push
pop
sbb
lahf
mov
adc
add
lds
je
sahf
add
outsl
jle
je
mov
adc
push
repz
addr16
mov
scas
xchg
pushf
shl
cmp
mov
pop
pop
add
xor
in
xor
in
scas
call
add
test
add
es
das
add
addr16
add
fildl
sub
lods
addr16
in
dec
fiadds
pop
xchg
out
pop
sbb
stc
mov
fiadds
es
addr16
ss
das
lods
addr16
fisubs
dec
mov
sub
insb
subl
into
pop
push
or
test
inc
dec
cmpl
aaa
imul
cmp
cld
mov
ljmp
sbb
xchg
mov
mov
mov
mov
jnp
cmp
jmp
mov
out
mov
call
std
fisubrl
pop
sbbb
mov
push
add
test
fimull
add
addr16
mov
inc
add
push
cmp
add
xchg
rorl
and
data16
popa
lea
ffree
pop
mov
jge
mov
add
add
add
fidivs
call
ret
sti
cld
lcall
sbb
inc
call
test
wbinvd
lcall
or
mov
jmp
push
jne
add
inc
popf
call
add
cli
dec
adc
xchg
xchg
sti
je
movsb
or
stc
add
addl
adc
call
xor
pop
pop
in
mov
push
and
push
push
and
add
insb
sub
aas
addb
bound
std
inc
mov
jb
rcl
mov
or
jge
lock
adc
jnp
call
sub
js
xor
data16
or
rcrl
aas
jg
mov
pop
pop
add
add
fisttps
std
in
jle
push
loope
mov
jmp
loope
add
sub
adc
test
xchg
out
pop
pop
push
add
pusha
imul
dec
or
pop
dec
adc
shlb
sub
xor
mov
idivb
loopne
sbb
bound
pop
fs
sbb
rclb
xchg
sbb
push
fstl
dec
mov
in
dec
pop
xchg
sbb
mov
dec
pop
push
cld
xor
add
add
lods
aaa
std
popf
mov
xlat
mov
dec
xor
dec
and
and
call
enter
daa
and
or
xchg
cmp
jnp
std
push
xchg
sbb
xchg
inc
jmp
and
daa
or
fldenv
adc
int
add
jmp
pop
push
sbb
sbb
mov
out
or
nop
inc
je
push
rcrl
inc
xor
in
push
and
icebp
cmp
inc
inc
xor
into
aaa
sti
je
push
sti
je
push
push
sahf
out
cwtl
stc
jmp
push
add
fldl
mov
pop
pop
popf
sub
ret
push
mov
ss
mov
lcall
push
jne
inc
jae
jne
xchg
jno
sub
jo
adc
fwait
decl
jmp
sti
jne
test
jb
mov
stc
cld
push
dec
mov
cmp
ret
aam
ret
rorl
xor
clc
std
insb
adcb
push
add
xor
shr
test
addb
out
sub
mov
sub
sbbb
cld
inc
fs
cmp
inc
fs
cmp
add
or
ret
sbb
xlat
jne
std
sti
lcall
sti
or
add
add
bound
sub
popa
repz
mov
cli
inc
jecxz
outsl
xor
cli
mov
mov
pop
lret
mov
outsl
rcll
add
repnz
cli
sti
jecxz
outsl
lods
jg
mov
mov
pop
in
imul
jl
jb
lahf
mov
add
jg
xchg
mov
sub
add
loopne
and
loopne
and
inc
add
cmp
cmc
nop
inc
std
inc
push
push
test
add
sub
and
and
cmp
and
fisttps
std
mov
inc
std
popf
enter
xor
lahf
aas
call
insb
repz
push
push
lea
pop
cmp
jne
inc
mov
rorl
add
out
push
rolb
pop
jb
sub
icebp
ja
adc
addb
cli
ss
sub
or
push
adc
add
xchg
push
jne
dec
dec
or
pop
push
outsb
jle
add
mov
call
lea
imul
loop
and
std
inc
push
out
popf
fildl
push
in
adc
cmpsb
cmp
add
add
inc
cltd
push
xor
and
sbb
call
inc
cmpsb
sbb
je
and
je
sbb
cmc
imul
mov
sti
leave
or
push
lea
test
ret
jae
push
push
and
add
in
scas
orb
les
sub
cmp
xor
push
jl
pop
cmc
ds
and
andl
shll
ljmp
shrb
or
mov
or
jecxz
add
pushf
movsl
jg
test
ret
add
ficomps
scas
addb
dec
jg
mov
push
add
jb
cmc
movsb
addr16
popa
out
ficoms
add
fdivl
pop
or
add
fsubrl
in
or
hlt
inc
add
in
pop
in
mov
mov
inc
jmp
and
add
push
cmc
scas
pop
insb
addb
out
sub
jnp
lock
and
sbb
inc
mov
push
scas
fcoml
rorl
add
and
and
or
sbb
jge
inc
jo
out
je
jl
cld
jle
dec
mov
call
stos
addr16
xor
and
sti
fmull
mov
pop
lods
subl
add
lods
faddl
jmp
add
inc
jmp
das
movsb
or
push
push
xor
or
cli
popa
mov
aaa
xor
xor
and
loopne
and
arpl
xor
sbb
xchg
add
call
dec
push
pushf
push
pop
lret
call
sub
out
inc
and
sbb
adc
aad
or
push
call
dec
dec
add
dec
add
dec
addr16
pop
addr16
vmread
add
push
lock
test
xchg
pop
pop
and
push
les
mov
or
xlat
aad
add
push
jo
ret
xchg
out
xchg
lods
sub
ret
or
mov
adc
es
sub
clc
pop
adc
cli
vmovlpd
inc
add
add
sub
sbb
cmp
jmp
mov
mov
or
and
add
nop
add
scas
stc
ja
push
or
lahf
and
xlat
popw
adc
test
pop
dec
inc
sbb
fists
sub
sub
lods
push
repz
xchg
fiaddl
call
lods
pop
add
adc
or
cld
lret
std
ficomps
xor
pop
xor
ret
add
add
ljmp
scas
lock
mov
add
test
mov
out
loop
stos
daa
orl
ret
mov
faddl
addr16
adc
xchg
daa
fstpt
mov
add
lret
xor
pop
pop
decl
test
bound
ljmp
lods
out
inc
or
inc
aam
call
push
test
cli
cmpb
cwtl
sbb
and
sub
xchg
lods
addr16
cmp
sbb
jle
out
call
lods
addr16
mov
cmp
jo
add
add
mov
mulb
lds
pop
lods
add
dec
cmp
push
jo
dec
inc
push
add
out
inc
add
dec
xor
sbb
pop
xor
ja
lcall
fstps
inc
add
and
movb
and
xchg
rorb
and
or
jo
sbb
add
add
ja
mov
add
cs
addr16
jmp
std
push
roll
xor
out
cmc
push
add
or
sbb
pop
stos
data16
dec
je
scas
nop
add
imul
lock
and
xor
fnstenv
mov
sbb
in
add
rorb
or
add
sti
insb
push
mov
mov
mov
lods
and
sub
sub
add
mov
cmp
lods
and
add
sar
or
mov
xchg
insb
jns
mov
mov
insb
dec
xchg
adc
out
jo
lret
inc
paddd
dec
fwait
jl
dec
xchg
push
sub
inc
scas
or
adc
dec
xor
cmp
add
dec
sub
insb
dec
aas
add
add
add
push
cwtl
jb
sbb
hlt
dec
xlat
fldt
call
das
es
sbb
in
in
dec
aad
jo
cltd
adc
jno
xchg
arpl
cltd
movsl
out
addr16
mov
xor
add
lock
jmp
addr16
jmp
or
std
movsl
push
push
lahf
pop
out
incb
rorb
lods
call
lahf
call
mov
ret
cmp
push
xor
insb
xor
and
test
sbb
fs
imul
inc
mov
xchg
addl
aad
inc
sbb
scas
out
push
cmp
jae
sbb
imul
push
call
push
inc
add
insl
push
rolb
and
xchg
adc
and
mov
sbb
adc
jge
cmp
leave
out
add
arpl
rcr
xchg
add
arpl
lret
arpl
call
adc
and
xor
mov
lds
push
outsl
std
lcall
int
add
imul
add
jmp
xor
scas
imul
mov
nop
jg
scas
adc
stc
mov
add
fadds
loopne
jg
scas
nop
jge
scas
popf
call
push
mov
enter
xchg
and
jp
add
jl
pop
add
pusha
jge
xchg
add
cld
cwtl
cmpsl
jl
add
out
or
or
and
nop
fcomps
add
imul
or
orb
cli
xor
push
jge
inc
fstpt
arpl
popf
addr16
pop
outsb
arpl
mov
and
js
outsl
ljmp
push
ficoms
scas
dec
mov
cmp
lea
aaa
add
outsl
aas
mov
jns
jge
shrl
ss
jle
call
in
xchg
jge
aad
enter
je
outsl
sub
icebp
test
sbb
faddl
sar
jae
mov
xor
push
jl
sub
xor
lods
cwtl
push
sub
outsb
jl
lods
push
call
ret
out
inc
int
jge
add
stc
or
lea
inc
adc
xor
jae
mov
cld
call
xor
cmp
sub
mov
iret
pop
mov
insl
xor
sbb
scas
push
int3
xchg
bound
pop
call
sets
and
lret
add
inc
enter
pop
add
mov
add
and
jnp
incl
sti
pop
adc
pop
inc
and
inc
sub
addr16
cmp
decl
loope
add
push
add
xchg
fiadds
jmp
sti
mov
push
cli
call
popa
push
adc
arpl
nopl
lret
call
add
inc
add
xor
add
pushf
adc
out
nop
jnp
mov
mov
scas
nop
add
push
out
cld
jl
stos
das
mov
adc
aas
mov
dec
push
dec
popf
rolb
sub
jge
cli
push
call
add
dec
push
std
mov
roll
je
ficomps
psubusb
nop
add
cmp
repz
add
scas
nop
jns
pop
fnstenv
scas
add
pusha
add
cld
out
sub
sbb
push
addr16
and
adc
in
push
lret
gs
fistpll
fistpl
out
out
arpl
call
fwait
stc
lret
add
pop
xchg
scas
add
jecxz
imull
out
in
js
inc
idivl
pop
mov
js
insb
les
pop
outsl
push
cmc
aas
xchg
push
div
sub
out
scas
jno
cld
scas
repz
jns
inc
add
into
cltd
jns
call
add
push
mov
ficoms
std
cmp
mov
icebp
stos
repz
cwtl
inc
cmp
aam
mov
add
jmp
mov
subl
fs
jne
sbb
mov
lods
addr16
bound
push
adc
das
mov
pushf
out
jmp
sbb
imul
fwait
popa
jp
subl
mov
je
and
xchg
jle
cld
incl
decl
ret
mov
jnp
rol
mov
push
push
fldcw
adc
xchg
shrb
dec
and
xchg
scas
jg
inc
jae
ret
push
adcl
add
add
nopl
xchg
orl
incl
mov
sti
adc
pop
cmpsb
pop
pop
cmp
jge
js,pt
call
add
push
or
and
pop
inc
or
inc
and
es
adc
out
xchg
incl
scas
cmpb
mov
dec
mov
add
outsl
ljmp
popa
lcall
idivl
aaa
mov
into
hlt
cld
jnp
jecxz
shll
adc
inc
add
inc
outsb
sub
jge
fsubs
xor
hlt
xchg
xlat
or
pop
insl
and
gs
test
rolb
out
sti
adc
cmp
addr16
jmp
ljmp
inc
insl
imul
xorl
sbb
out
add
lret
call
dec
mov
pop
jg
cmp
xor
insb
dec
cmpsl
pop
add
inc
push
jmp
jno
arpl
mov
loop
inc
test
dec
xor
loop
or
lods
loop
lock
stos
loop
or
or
add
sahf
lcall
addr16
pop
jbe
push
je
jae
push
stos
sbb
push
in
scas
cld
insb
insb
fs
sub
adc
test
lods
shl
sbb
push
pop
adcb
push
out
dec
push
push
sub
in
mov
fsubl
jns
cmpsl
jg
mov
fcom
add
cmp
stc
sbbb
cmpsl
mov
add
cwtl
or
xchg
mov
push
imull
push
sarl
inc
push
adc
sbb
mov
cmp
sti
adc
or
push
test
cmp
enter
sar
call
xor
adc
fnstcw
add
std
mov
arpl
inc
push
loope
and
in
and
cmp
incl
insb
xchg
loope
and
subl
das
fldt
sbb
dec
sbb
je
pop
jno
scas
call
lahf
inc
nop
jle
push
rcrb
mov
pop
inc
push
es
out
xchg
test
pushf
adc
out
orb
scas
adcb
xor
push
cmpb
add
or
mov
imul
push
add
leave
pop
add
fldcw
loopne
jb
or
add
inc
and
mov
shll
xchg
mov
addr16
out
adc
lds
mov
out
fldt
test
xor
sbb
outsb
xor
out
push
pop
push
add
es
daa
pusha
out
lock
je
pop
arpl
aad
mov
out
out
lods
dec
lret
push
out
loope
fs
mov
push
in
sub
pop
cmpsl
clc
andb
mov
pop
cmpsl
add
mov
add
jb
and
add
dec
adc
iret
mov
jmp
mov
add
ja
adc
lret
xchg
call
lods
loopne
in
xor
and
push
xor
pusha
call
dec
xor
lock
stos
lock
add
pop
mov
rcrb
in
and
add
lock
sbb
dec
and
dec
sbb
js
adc
push
and
jmp
mov
dec
out
xchg
movsb
jno
test
nop
add
gs
jmp
inc
add
fs
inc
leave
pushf
add
add
aam
addl
sub
and
out
xchg
outsb
fsubrs
and
jg
imul
lods
movsb
jo
mov
jno
je
sbb
dec
iret
and
xorb
add
out
iret
and
nop
xor
inc
fs
popf
push
mov
std
add
add
pop
jg
pop
jle
arpl
inc
push
push
clc
mov
inc
mov
inc
mov
testl
jl
cmc
incl
lahf
mov
out
jmp
xchg
lcall
pop
xchg
mov
out
lea
add
aas
add
dec
pxor
out
insl
jns
push
xor
dec
xchg
cwtl
test
and
divl
pop
stos
lret
adc
js
scas
loop
xchg
or
test
add
repnz
or
test
cmpsl
add
js
aad
es
xchg
push
push
scas
loopne
pop
es
and
testl
stos
outsb
repz
mov
add
inc
scas
outsb
xor
fisubrl
mov
hlt
clc
mov
mov
lret
roll
cmp
test
jbe
pop
ret
pop
add
pop
aam
jmp
xor
jmp
out
and
call
popa
add
fiadds
test
lods
loopne
cmpsl
icebp
adc
jmp
movsb
outsb
jo
cmp
cld
bound
ret
mov
add
imul
adc
orl
add
addr16
lcall
xchg
loopne
addl
cltd
fidivs
cltd
nop
adc
push
sub
push
cld
push
inc
add
sbb
lock
sub
push
imul
xchg
xor
add
pop
pop
lahf
mov
xchg
xchg
pop
xchg
jo
push
xchg
sti
je
ss
lea
jge
ljmp
cli
call
adcl
add
inc
jnp
loope
push
jno
push
adc
push
sbb
and
push
rorl
dec
and
stc
out
filds
add
jl
mov
add
add
orl
cmp
push
outsl
jle
std
lcall
lds
ss
jle
orl
fdivs
add
lahf
jge
inc
cld
sub
fstps
addb
sti
fs
mov
jl
jae
pushf
call
add
adc
es
fcomp
inc
fildl
stos
imul
mov
push
push
add
in
pop
out
xchg
inc
testl
dec
lret
inc
xchg
dec
pop
out
pop
iret
addr16
cs
lret
hlt
lods
jle
repz
repz
shlb
je
pop
std
out
cmp
lret
cs
test
xlat
mov
repz
xchg
repz
xor
xchg
add
addr16
sbb
imul
mulb
aad
repnz
sahf
sbb
bound
shrb
mov
dec
std
cmc
cwtl
cmp
filds
outsb
jg
sub
jg
sub
jg
sub
jg
sub
mov
push
ret
sbb
and
out
mulb
call
lcall
jmp
mov
movsl
jmp
enter
sbb
jmp
iret
inc
push
rcr
cld
add
in
add
test
fwait
ja
pop
jb
xor
cmp
pshufw
pop
je
insl
sbb
faddl
repnz
aam
xor
jbe
stos
inc
and
sti
adc
xchg
movsb
jo
fsubrl
mov
call
popa
inc
stc
mov
fimuls
notb
mov
fldl
cmp
dec
arpl
mov
out
sbb
add
add
das
and
sbb
xor
push
jo
mov
rclb
xchg
xchg
shll
cmpsb
shll
cmpsb
sub
mov
mov
aaa
ret
sub
incb
mov
cli
push
je
sbb
add
or
ja
enter
pop
jmp
mov
icebp
call
lock
add
imul
push
jmp
push
push
sub
jmp
mov
pusha
imul
mov
scas
push
mov
lret
flds
sub
mov
outsl
and
add
andl
aaa
inc
lods
fisttpll
out
les
pop
scas
mov
out
xorl
cli
das
pusha
loopne
ljmp
lret
outsb
inc
mov
addr16
xchg
mov
cmp
out
in
xchg
cmp
cmp
pop
arpl
divb
jmp
jmp
scas
cwtl
leave
shr
ja
pop
jb
mov
push
test
call
and
adc
jo
ljmp
mov
cltd
daa
inc
xchg
lahf
sub
in
mov
xchg
in
shlb
je
in
adc
imul
add
mov
shr
popa
push
decl
push
std
callw
insb
add
jne
pop
ret
xchg
mov
fld
pop
std
lea
in
or
outsl
fmull
pop
test
test
in
and
adcl
fcmovnu
adc
out
sub
push
mov
push
cld
incl
scas
push
and
push
sbb
jo
add
add
cmc
sub
add
iret
out
dec
add
adcl
arpl
or
or
jg
mov
adc
or
push
xchg
out
dec
pop
jle
cmp
fldcw
or
sub
scas
leave
or
lcall
jmp
xor
add
ljmp
add
test
dec
pop
push
or
pop
mov
jl
and
cmp
pop
cmp
and
call
fisubrl
loope
push
push
lds
jg
add
xchg
mov
inc
scas
dec
xchg
add
inc
leave
stos
daa
insb
inc
scas
shll
outsb
mov
mov
jp
add
pop
imul
jbe
add
repz
enter
enter
addr16
add
imul
mov
out
push
sbb
jl
jg
add
lods
push
sbb
fs
stc
jbe
lahf
mov
add
adc
add
add
popa
cld
sti
add
stos
sub
imul
aam
and
cwtl
ljmp
stos
xchg
or
shlb
jmp
and
gs
enter
repz
jl
decl
test
mov
mov
xchg
call
adcl
and
cmp
imul
pusha
push
xchg
xchg
sbb
add
sbb
add
xchg
enter
xchg
jecxz
dec
mov
inc
je
mov
std
adc
mov
nop
std
add
push
incl
adc
fimuls
add
xor
call
inc
adc
ds
scas
or
lcall
add
xchg
call
mov
ljmp
xor
scas
int
or
pop
or
fadds
rorl
and
pop
ret
dec
sti
xor
mov
sub
add
and
adc
cmpb
jge
js
fstl
fldl
mov
incb
add
jns
xor
inc
or
dec
add
mov
mov
xorb
mov
xor
in
push
mov
popa
ljmp
out
stos
inc
sub
xchg
add
fs
aas
lret
fstpt
lods
aam
in
aaa
mov
cmp
clc
int
mov
pusha
mov
fsubs
mov
mov
ret
jecxz
xor
cs
ret
movaps
dec
add
in
in
xor
lahf
push
mov
cmp
jo
repz
jmp
in
push
sbb
add
add
inc
cmpsb
or
cmp
jmp
stos
out
jmp
ds
testl
jno
inc
cmp
xchg
imul
leave
call
and
xor
jb
outsl
call
insb
jae
inc
out
inc
mov
loop
sub
mov
cwtl
or
inc
in
adc
test
mov
mov
jg
and
lcall
jmp
mov
inc
test
jg
sbb
inc
test
fidivrs
out
pop
mov
mov
inc
jg
jecxz
popa
xor
cmp
mov
std
mov
ds
inc
frstor
std
call
cmp
mov
das
std
xor
push
add
mov
sub
rcrl
mov
xor
jne
jae
jge,pn
lret
outsb
jns
add
push
fadds
dec
add
dec
add
fildl
add
and
add
jge
sub
mov
js
lret
push
fdivs
add
subl
scas
scas
dec
add
repz
jg
dec
leave
cld
push
push
cli
test
dec
add
fnstsw
jg
scas
addr16
insl
bound
pop
ljmp
adc
add
lock
cld
or
sub
fisttpl
inc
xchg
cltd
mov
imul
xchg
pop
pop
shll
mov
dec
add
mov
cs
out
movsb
int
scas
dec
iret
lret
sub
pop
jne
aaa
and
add
jmp
movsb
add
cmp
call
pop
pop
cld
scas
lret
mov
sub
call
inc
inc
mov
mov
iret
jae
ficompl
fs
imul
xchg
xlat
push
adcl
bound
xor
mov
les
xorl
mov
add
out
jge
xchg
mov
add
cld
hlt
mov
jmp
jo
inc
add
xchg
push
push
xchg
push
pushl
adc
test
mov
sbb
xchg
sub
mov
push
mov
add
cltd
pop
or
arpl
push
jge
and
lea
and
mov
incl
cltd
fst
test
add
adc
data16
and
pushl
call
std
jmp
pop
push
pushl
adc
sbbb
and
cld
push
scas
cltd
ja
push
dec
ja
inc
push
xadd
les
jae
push
xor
jle,pt
jge
and
adc
jg
add
dec
sbb
movl
adc
movb
sub
jnp
pop
rcrb
pushl
or
xchg
jns
xchg
mov
dec
add
sub
in
call
xor
clc
subb
hlt
mov
and
lock
rcrb
stc
dec
add
gs
fadds
pop
fsubrs
inc
xchg
adcl
add
imul
mov
jp
xor
and
and
xlat
push
add
mov
inc
scas
in
mov
pop
fwait
in
xor
stc
ret
call
cmp
and
movsl
imul
je
mov
jnp
clc
popa
fildll
rcll
and
loope
and
pushf
aas
adc
mov
inc
lds
call
gs
fimull
enter
xchg
and
aam
push
cld
push
leave
pop
add
ja
pop
sub
push
push
std
mov
sbb
dec
in
orb
lods
jmp
mov
out
es
lea
nop
arpl
popf
xchg
filds
pop
sub
test
and
lcall
add
arpl
or
mov
icebp
fnsave
or
mov
cmpsb
mov
jle
insl
or
jb
mov
push
or
push
add
sar
std
dec
in
or
fnstsw
pop
mov
imul
cmp
cmp
bound
dec
mov
add
scas
aas
add
stos
ds
push
add
inc
and
cmp
les
call
inc
and
mov
and
leave
lods
imul
add
outsl
xchg
out
imul
dec
out
dec
add
jle
sub
add
scas
stc
sbb
adc
dec
pop
outsb
push
std
andl
lock
in
outsl
idivb
cmpsl
ds
push
shrl
mov
jg
add
xor
or
jg,pt
sbb
cwtl
sub
movb
mov
icebp
movsb
nop
out
pop
cmp
outsb
push
fsubrl
xor
outsb
mov
jmp
pop
dec
push
outsb
les
daa
add
push
ret
addr16
rcrb
test
stos
inc
fwait
jmp
inc
scas
ljmp
out
jmp
out
mov
xchg
addr16
add
filds
lcall
add
fcoms
adc
jmp
add
imul
mov
aad
cmp
or
gs
adc
push
inc
lret
hlt
mov
jne
out
inc
lods
test
cs
gs
cmp
gs
cmp
adc
aam
add
lods
fiadds
mov
pop
js
jmp
adc
cld
add
imul
jg
xor
ja
sarb
mov
data16
adc
add
adc
xchg
xchg
xchg
xor
loop
pop
xchg
xchg
decb
std
lcall
cmp
or
std
push
pushf
imul
fiaddl
imul
jo
adc
imul
add
test
lock
mov
dec
mov
add
lcall
test
cmp
inc
mov
mov
jg
add
pushf
call
xor
dec
pop
out
ds
add
add
scas
mov
or
add
or
mov
scas
jno
incb
loop
mov
jmp
inc
add
cmp
fprem
and
dec
push
and
adcb
nop
scas
cmp
or
xor
insb
ret
pusha
stos
iret
pop
xor
cmp
push
sarb
adc
addr16
inc
xchg
lret
cld
push
stos
pop
aaa
mov
mov
int3
or
movsl
dec
and
xlat
loopne
push
mov
push
nop
daa
addb
test
fstpl
rcr
fs
push
push
ret
jnp
jmpw
ljmp
out
sahf
sbb
nop
outsl
push
scas
loop
int3
adc
jp
adc
mov
pop
mov
callw
add
sub
test
and
mov
lods
add
push
cld
aam
jne
jmp
add
rcrl
mov
arpl
cld
xor
decb
push
lahf
push
push
mov
ljmp
xor
sti
in
addr16
and
add
jmp
sub
sarb
arpl
mov
mov
dec
mov
sub
inc
jmp
lods
pop
add
jns
leave
stos
jns
in
add
adc
xchg
imul
imul
sub
repz
call
mov
add
clc
incl
and
inc
xchg
in
lods
sti
incl
xchg
adc
jne
adc
mov
test
jmp
mov
frstor
in
adc
mov
cmpsb
fmulp
call
int
testl
push
into
mov
call
inc
mov
pop
sub
incb
les
dec
add
and
adc
add
fcoms
inc
scas
leave
lret
out
movsb
mov
sub
add
sub
decl
jnp
inc
scas
jne
int3
mov
lret
scas
dec
arpl
add
subl
ret
add
add
mov
mov
add
inc
scas
ret
mov
ljmp
imul
and
xchg
inc
scas
adc
outsl
addr16
xchg
lods
lock
jmp
jle
dec
pop
jg
aam
mov
scas
or
mov
addr16
popf
cwtl
mov
aas
jb
mov
lods
mov
cmpsl
add
add
loop
das
lret
fists
jmpw
jge
add
gs
sbb
jmp
inc
scas
adc
fistpl
testl
lods
faddp
addl
daa
push
scas
aas
pop
je
dec
call
insl
jmp
xchg
sub
sub
pop
mov
cmp
sub
in
push
push
addb
add
loopne
je
xchg
lods
addr16
pop
testl
loop
lods
addr16
fbld
scas
add
xor
mov
add
and
add
xchg
ret
cmpsl
inc
jne
loop
and
mov
add
push
adc
push
jbe
cmc
je
adc
hlt
in
add
repz
push
inc
jb
inc
push
testb
and
mov
jecxz
clc
pop
add
add
or
pop
mov
sahf
push
add
xchg
jg
or
jl
mov
mov
inc
iret
hlt
inc
scas
inc
jge
dec
jge
call
add
push
loop
incb
add
js
push
sub
mov
cmp
dec
push
lock
movq
mov
cs
mov
stc
int3
rcrb
and
inc
push
push
pop
lds
imul
push
dec
push
adc
das
inc
add
js
lods
jmp
add
out
rorl
jmpw
xor
add
ljmp
addr16
sub
fisubrl
push
test
adc
jbe
add
jnp
adc
addr16
mov
test
add
adc
push
jae
addr16
lods
fbld
arpl
xchg
jge
pop
push
cmpsl
add
pop
sub
loopne
adc
sub
and
sub
mov
bound
push
inc
jmp
out
jmp
sti
mov
or
add
cld
hlt
jl
inc
jmp
rcl
cli
sub
push
cld
xchg
das
or
cmp
cld
mov
daa
mov
leave
xchg
sar
sub
stos
fmulp
push
lret
push
cld
pop
das
or
add
test
rclw
shrl
jne
xchg
popf
sti
aam
pop
inc
jmp
pop
lock
int
movsb
pop
lods
in
or
xchg
cli
inc
push
cld
push
dec
test
shl
sub
pop
imul
and
fwait
xchg
push
mov
add
and
push
cld
incl
push
cld
push
adc
stos
add
mov
imul
push
mov
push
push
dec
cmp
mov
push
push
movsl
adc
sti
inc
mov
lcall
pop
clc
xchg
push
push
pop
iret
pop
cld
xchg
ljmp
push
jnp
add
dec
mov
sub
ljmp
test
ljmp
mov
subb
and
xor
loope
push
add
sbb
test
daa
push
icebp
add
scas
call
addl
sub
call
push
add
lret
dec
add
ss
pop
xlat
mov
std
mov
loopne
incl
int3
mov
push
dec
add
push
push
mov
int
sub
out
pop
loope
out
insb
fstpl
dec
xchg
push
cmp
pushf
add
in
ljmp
mov
inc
stos
and
push
jns
out
pop
mov
dec
pop
jne
add
lock
xor
add
lods
int
xor
dec
ljmp
dec
lods
xor
ret
xchg
cltd
sbb
mov
inc
jg
add
das
test
leave
stos
outsl
push
subl
call
insb
lock
mov
mov
test
adc
and
and
jg
pop
push
inc
jge
fwait
pop
mov
xchg
sub
sti
xchg
jb
in
mov
add
mov
add
bound
or
pop
in
cmc
insb
addr16
mov
jo
add
add
or
sub
nop
mov
jne
cwtl
pop
ret
inc
out
stos
inc
add
xchg
jle
test
cld
push
inc
stc
mov
mov
push
add
inc
add
cmp
push
les
add
mov
es
add
xor
test
sub
sbb
xchg
sub
cld
call
push
es
dec
pop
xchg
pop
add
nop
push
pop
out
push
mov
push
add
nop
add
jge
cmpsb
dec
inc
jo
add
push
cwtl
ret
push
add
pop
loopne
aad
stc
pushf
push
notl
subl
mov
dec
orl
xor
popf
cwtl
jo
add
xchg
add
std
ljmp
fdivr
call
popa
jno
scas
push
add
lods
out
iret
adc
addr16
insb
mov
xchg
and
push
fiadds
in
add
adc
in
out
stos
std
fstpt
insb
repnz
ja
mov
add
mov
or
sub
in
call
in
mov
push
and
or
add
repnz
jnp
inc
outsl
mov
cmp
mov
adc
movl
data16
add
popa
push
mov
das
lods
and
sbb
sarb
dec
inc
popa
lods
addr16
das
lods
and
and
mov
lods
jbe
mov
xchg
addr16
push
aas
adc
in
sub
sahf
subl
mov
add
fldz
xor
push
lds
sub
add
xchg
pop
sbb
mov
lods
push
movsl
add
cmpsb
add
leave
out
movsb
popa
cmpsb
add
inc
push
mov
cmovp
inc
les
loopne
imul
or
sti
pop
xchg
ss
sar
call
pop
push
inc
xchg
test
jnp
inc
inc
rol
insb
jl
add
pop
imul
incl
ficomps
push
lret
aad
test
fidivrl
call
mov
scas
cmpsl
lock
xor
pushf
adc
xor
fs
insb
push
push
push
pop
cwtl
or
rclb
test
adc
push
sbb
std
fisubrl
scas
jne
mov
xor
lock
daa
sbb
aas
stos
push
cltd
add
cmp
and
xchg
jg
push
add
lcall
scas
adc
clc
orb
inc
add
sub
xor
enter
addr16
das
xchg
push
push
addr16
add
daa
add
xlat
insl
cmpsb
add
jecxz
xor
cmpsl
add
stos
imul
mov
jmp
jle
push
inc
sub
popf
mov
dec
jmp
js
mov
out
pushf
lods
addr16
test
add
xchg
cmp
cmp
iret
cmp
adc
addr16
pushf
mov
stos
popf
cmp
sbb
mov
mov
test
arpl
push
add
rolb
lods
lea
cld
jbe
iret
mov
cmp
add
sub
cmpsb
or
mov
push
mov
ss
lods
sti
aam
push
inc
jmp
inc
cmp
cmp
aad
cmpsl
add
adc
xlat
imull
jbe
push
pop
sub
in
addr16
aas
mov
cltd
xchg
add
call
andb
adc
in
dec
push
std
call
push
push
mov
mov
in
pop
push
std
test
ja
push
push
sldt
cmpsl
add
bound
xchg
mov
push
inc
jnp
sahf
xchg
aas
add
aas
and
xlat
adc
xor
and
lahf
cltd
adc
xor
inc
mov
push
push
adc
or
mov
lret
xchg
push
scas
mov
test
mov
out
jnp
mov
push
push
ljmp
je
out
fsubrs
out
mov
sub
rorl
fs
push
ja
push
and
test
cmpsl
fsubs
addl
jecxz
add
xor
jl
jg
inc
add
cld
fistpl
aaa
add
adc
pop
les
and
lds
and
addr16
xchg
push
jo
mov
dec
es
jnp
sbb
and
adcl
push
mov
repnz
add
jl
std
jp
xor
loop
jmp
fadds
sarl
ljmp
cmp
stos
jecxz
add
xchg
pop
push
lret
fwait
xor
xlat
add
movsb
add
mov
movsl
jmp
inc
scas
in
sbb
lods
addr16
fucomi
addr16
pop
xor
sti
hlt
test
inc
jmp
das
xor
xor
and
add
or
stc
ja
and
lods
add
add
pop
clc
jne
push
in
and
scas
add
cld
lcallw
arpl
jmp
and
push
sarl
mov
sub
subl
push
movsb
sti
in
ljmp
out
and
sbb
xor
push
call
lcall
or
push
or
scas
or
add
subb
paddb
mov
and
popl
inc
stos
testb
inc
ljmp
add
and
xchg
arpl
push
sti
add
shlb
sbb
push
imul
shll
std
adc
add
call
jnp
scas
inc
add
es
pushf
sahf
inc
movsl
xor
inc
xor
add
int
xlat
mov
add
add
jnp
dec
mov
inc
scas
adc
movsl
das
mov
and
std
mov
sub
jb
fadds
inc
mov
xchg
ljmp
push
insb
adc
popf
sub
xor
mov
xor
test
inc
scas
inc
jae
shll
add
psrad
scas
aas
and
dec
mov
mov
sub
ss
adc
movsl
fwait
outsl
rcrb
mov
xor
insl
sarl
jmp
add
roll
addr16
fldl
out
gs
jns
xor
in
sahf
daa
sbb
cmp
pop
nop
mov
ljmp
xor
sub
mov
add
icebp
sub
insb
testl
hlt
stos
lods
xor
sub
fisttps
adc
loopne
sbb
ljmp
hlt
fs
inc
jmp
mov
xchg
data16
pop
sbb
insb
addr16
xlat
pop
add
push
push
sub
mov
push
xor
int
xor
outsb
mov
push
repz
test
xchg
fdiv
inc
xchg
add
iret
out
scas
hlt
add
test
ficomps
test
in
aaa
jge
xor
ret
inc
scas
cwtl
icebp
decl
mov
adcb
std
adc
jnp
cld
push
adc
cmp
cmpsl
add
add
ret
cmp
pop
xchg
push
adc
jne
push
mov
ljmp
sbbb
scas
test
lods
mov
gs
cld
or
std
lcall
pop
sti
cmp
push
mov
add
xor
pxor
call
dec
inc
mov
push
pop
pushf
cld
cmp
les
dec
xchg
cmc
mov
cwtl
inc
scas
ds
test
mov
add
jle
lahf
add
sub
call
push
xorb
dec
jle
push
push
mov
mov
out
ret
and
jecxz
lods
addr16
cld
lock
stos
mov
insl
cltd
cld
pop
int3
mov
add
sti
int
scas
addr16
add
sbb
test
inc
inc
sti
int
scas
addr16
sub
shr
scas
addr16
dec
lods
addr16
add
sub
cmp
repnz
pushfw
js
loop
sbb
add
ret
push
cs
cvtps2pi
add
sahf
and
add
pop
call
loop
push
push
lods
and
xchg
mov
addr16
and
andl
cli
call
or
mov
jl
mov
adc
cmp
js
ljmp
mov
jmp
push
mov
jmp
mov
fidivrl
xor
in
fiadds
outsl
inc
lds
inc
lds
push
cmp
les
sub
mov
dec
push
pop
je
inc
stos
aaa
dec
lea
and
adc
stc
mov
out
cld
pushf
pop
push
fs
push
call
mov
fstl
lea
jo
bound
ja
adc
pop
push
and
mov
sbb
and
mov
mov
jl
push
fs
push
out
jecxz
incl
add
dec
mov
xlat
jae
sub
sub
xlat
push
mov
adc
mov
add
jae
rcrl
scas
add
stos
inc
add
cwtl
inc
std
subb
and
not
jae
adc
sub
inc
xlat
push
xchg
sub
and
jecxz
xor
popf
jae
sbb
mov
and
repz
inc
add
sbb
cld
sbb
test
mov
lret
xor
and
xor
sbb
addr16
cmpsl
add
ret
adc
loop
in
add
sub
mov
outsb
inc
lret
mov
or
imul
test
fsubl
int3
mov
movsl
out
addr16
test
push
mov
pushf
popf
cmp
inc
scas
ljmp
js
cmp
sbb
jae
jp
jmp
xchg
jle
or
cmp
aad
add
popf
xchg
dec
jb
loope
xchg
ss
sbbl
xchg
jecxz
jmp
lea
fisubrs
testb
lods
out
pop
xor
imull
subps
inc
incb
popf
sti
aam
push
inc
jmp
mov
addr16
mov
add
test
es
cltd
daa
mov
add
test
je
ss
hlt
cmp
sub
sbb
lcall
ljmp
shlb
outsb
sub
clc
inc
inc
push
push
dec
cmpsl
hlt
push
cmp
jmp
fmuls
inc
out
jmp
fistpll
hlt
jae
lea
jecxz
pop
arpl
test
pop
and
add
cld
adc
add
test
cmp
shrl
jo
xor
push
movnti
mov
shl
push
or
add
jno
pop
pop
and
mov
inc
roll
push
xor
roll
cmp
mov
mov
xor
leave
dec
and
je
jae
mov
adcl
into
mov
test
movsb
inc
add
and
xchg
xlat
insb
in
mov
fsubrp
mov
mov
clc
sub
dec
pop
xor
mov
dec
jno
xchg
decb
cltd
decb
rclb
jg
add
sub
out
addr16
loopne
insb
mov
scas
fiaddl
jmp
in
fwait
xchg
roll
addr16
out
cwtl
addr16
test
add
sub
mov
ret
xor
mov
add
add
nop
add
dec
outsb
xchg
mov
xor
pop
xchg
aam
loopne
fistpll
or
cmp
jo
add
andl
adc
shr
xchg
sti
hlt
and
jmp
jmp
adc
outsl
sbbl
scas
adc
jmp
jecxz
cli
sbb
aas
pop
adc
lar
lods
push
aad
sub
xor
push
push
and
sbbl
mov
add
outsl
add
test
adc
mov
add
adc
sti
inc
stos
add
adcl
lar
inc
gs
test
push
or
cmc
sar
mov
push
and
gs
inc
pop
in
cli
incl
js
decl
int
inc
frstor
add
mov
inc
cli
sbb
inc
into
fs
mov
cmp
data16
push
lea
dec
push
icebp
aaa
call
les
std
add
movsl
dec
call
int
dec
mov
roll
imul
sti
sti
dec
and
lret
std
sub
add
jg
in
repz
jle
sub
stos
les
movb
sbb
jnp
mov
xor
lods
out
sarb
mov
jae
int3
mov
aad
out
scas
mov
adc
dec
mov
test
ret
str
lods
add
icebp
jecxz
xorl
test
faddl
cs
insb
hlt
xor
xchg
add
call
xchg
mov
mov
outsb
xchg
sub
scas
fimull
add
mov
out
cld
jnp
add
sub
jle
pushf
aad
insb
dec
fnstcw
scas
lock
adc
adc
sub
push
fdivrs
nop
test
add
je
ja
jmp
adc
addr16
jg
fwait
in
xchg
add
push
xor
lods
xchg
xor
outsb
add
cld
fs
jp
jmp
loope
jg
test
cmp
mov
aas
xchg
mov
add
ds
outsl
dec
adc
mov
pshufw
add
popa
push
xchg
xchg
xlat
jns
lcall
or
es
jmp
cmp
lods
or
in
addr16
add
lods
addl
push
ss
cmpb
cmp
ja
push
insb
outsl
ds
or
imul
fistl
imul
jb
movsl
les
cli
call
outsb
mov
add
imul
test
je
sbb
jl
mov
mov
adc
add
add
dec
mov
imul
scas
push
cs
fcmovu
add
push
cmp
repnz
xchg
ljmp
add
scas
push
ret
data16
scas
push
cmpl
jmp
and
sarb
mov
cld
cmpb
cmp
add
orb
sbb
scas
push
jge
xor
sbb
xor
call
and
cltd
mov
cld
push
adc
aaa
cmp
lock
push
paddusw
cmp
dec
jnp
movsb
inc
pop
inc
cmpsb
addr16
inc
lret
dec
mov
fidivl
jmp
xchg
pushf
aam
in
cltd
fwait
arpl
test
les
dec
in
add
call
inc
pushf
daa
pop
ret
aam
scas
in
cmpsb
xor
cs
outsl
jmp
stos
lahf
sbb
lret
lahf
pushf
ljmp
outsb
pop
xchg
jnp
mov
mov
stos
in
mov
sub
iret
pop
push
scas
push
add
and
and
mov
pop
cwtl
shrl
lcall
push
xchg
xchg
and
add
jae
inc
lock
in
lahf
jne
mov
push
jb
out
add
lods
mov
add
loop
cmpl
xor
test
out
jne
stos
add
xchg
sbb
and
cmp
fcmovnb
aaa
jnp
inc
in
jl
mov
lods
mov
add
push
pop
add
dec
mov
mov
cmp
dec
stos
andnps
sub
sti
cmpb
pushl
stc
add
mov
jg
push
jmp
mov
mov
movsb
aas
and
out
mov
add
cli
in
add
xchg
call
test
jns
test
adc
sbbl
push
push
test
pop
scas
popa
xor
lcall
or
into
adc
scas
push
add
cmpb
jl
add
repz
push
xlat
pop
ljmp
jb
call
cmp
and
scas
push
add
repz
add
inc
add
ret
mov
scas
or
inc
xchg
xor
mov
es
call
data16
ljmp
jb
lock
pop
or
addr16
sub
mov
sub
and
loope
mov
loop
cmp
add
repnz
push
lea
repnz
out
pop
pop
jg
mov
add
xor
filds
lret
std
sub
call
sub
test
shrb
movl
push
sbb
pop
mov
lret
mov
sti
add
mov
pusha
jo
sub
inc
movsb
cmp
bound
pop
cmpsb
mov
test
and
faddl
sti
cld
and
jmp
or
push
in
push
push
cld
out
add
push
rorb
jmp
addr16
sub
jb
push
je
dec
movsb
jmp
or
sub
outsl
inc
sub
pop
dec
aam
lods
lea
add
add
imul
out
fcomps
je
repnz
and
data16
add
outsl
add
test
js
sahf
xchg
arpl
add
push
push
add
lock
and
add
int
pop
aam
imul
xchg
mov
push
std
push
push
popf
mov
incl
ja
push
sahf
outsl
and
xor
mov
arpl
test
ja
adc
sti
mov
sbb
scas
int
xlat
test
xor
xchg
and
cmp
push
jl
cmp
push
adc
inc
loopne
pop
pop
xchg
mov
lret
outsl
adc
push
add
out
fxrstor
jns
shrl
pop
mov
bound
push
cwtl
ret
test
add
mov
push
inc
mov
adc
mov
add
jnp,pt
shll
popf
add
adc
shll
mov
std
and
mov
stos
ss
jno
lock
data16
pusha
xchg
aad
pop
sbb
xchg
pushf
cmpsl
jmp
cmp
scas
cmp
and
popa
add
add
add
ud2
popf
jo
pop
cmp
push
psllw
iret
pushf
dec
sbb
ret
jecxz
les
and
scas
addr16
cld
sub
std
push
and
ljmp
cmpsl
add
mov
sbb
insl
xchg
cld
jmp
lods
addr16
out
cmpsb
and
sub
cld
jmp
iret
push
pop
js
cmp
sbbl
insb
insb
xchg
pop
push
sbb
nop
lods
add
rolb
sbb
cmpsl
and
mov
jbe
jmp
xchg
cmpl
or
arpl
mov
cltd
outsb
cmpsb
and
lods
sbb
mov
cmpsb
and
fsubr
inc
sti
add
inc
bound
jnp
imul
mov
aas
and
push
ret
push
add
cmp
inc
stos
pop
push
lea
lcall
les
sahf
aas
and
jg
push
xor
hlt
adc
arpl
and
add
xchg
imul
adc
add
push
movb
or
or
push
add
inc
mov
push
scas
addl
fidivrs
shrl
xor
imul
add
lret
add
push
sub
jg
mov
jns
mov
ja
and
call
sbb
jno
xor
and
mov
ret
test
fwait
add
add
jnp
push
es
loopne
xchg
xor
incl
adc
movsl
cs
subl
rolb
and
mov
inc
scas
push
jl
mov
jle
add
inc
bnd
push
jmp
negb
xchg
xor
int
scas
addr16
add
daa
jmp
xchg
add
or
cmp
addr16
bsr
scas
sbb
in
test
and
pop
sub
jnp
dec
shrl
push
add
push
cmc
stos
mov
addr16
scas
addr16
loopne
jns
jns
push
add
lods
lea
xchg
call
jb
leave
mov
mov
pop
cltd
cmpl
ds
push
out
add
sbb
cld
jmp
lods
adcl
adc
add
xchg
and
adc
and
lcall
loope
push
add
jl
je
repz
out
aas
add
lods
lahf
dec
add
pop
dec
psrlq
mov
push
lea
push
andps
test
sbb
push
outsl
or
inc
ds
inc
push
jmp
mov
jecxz
and
loopne
lldt
sti
inc
add
mov
jg
cli
push
add
and
mov
add
out
inc
and
add
mov
aas
sbb
call
lods
or
outsb
insb
add
or
and
add
add
aas
aad
jecxz
and
mov
jmp
adc
add
sub
je
mov
enter
xor
and
add
nop
inc
lret
lret
pop
mov
and
xchg
lret
and
ds
out
push
pop
mov
aaa
mov
sar
and
pop
mov
and
movzbl
ret
cmp
lds
sbb
mov
mov
pushf
inc
jg
add
fnstsw
in
mov
or
mov
push
add
int3
cwtl
lcall
push
adc
jae
fwait
int
sub
xchg
pop
pop
data16
pop
xchg
dec
mov
mov
jo
lods
add
aam
mov
je
mov
jmp
out
mov
inc
jmp
rclb
enter
jae
fwait
divl
dec
leave
insb
mov
out
or
jmp
add
dec
add
fs
outsb
cwtl
add
in
xor
push
ret
stos
scas
push
je
inc
push
push
or
add
xor
jne
and
cld
fldt
mov
xchg
les
inc
adc
out
lods
bound
inc
dec
dec
xor
in
cmpsl
and
jmp
test
add
sahf
jmp
in
lods
addr16
cmp
inc
xchg
jmp
lods
mov
mov
and
fidivrl
pop
push
adc
and
outsl
and
out
mov
es
test
data16
ret
ljmp
sbbl
enter
jg
adc
ss
dec
dec
data16
add
push
add
in
incl
fnstsw
and
clc
inc
and
cmpl
gs
dec
pop
and
popa
inc
std
add
data16
sub
lret
xlat
scas
test
jl
mov
xchg
loopne
iret
mull
scas
jp
lret
into
xchg
push
sar
pop
out
mov
cld
sub
add
add
pop
jg
add
dec
out
fcoml
dec
subl
scas
decl
mov
add
decl
mov
add
decl
xchg
lret
and
lret
and
lret
and
mov
decb
fldt
pop
iret
int3
outsl
pop
xchg
int3
pminsw
scas
inc
js,pt
outsb
inc
cld
outsl
mov
add
jg
jle
adc
pop
out
addr16
mov
insb
xchg
mov
ljmp
dec
roll
push
push
call
xchg
fs
sub
lods
daa
xorl
jge
rdpmc
xlat
fstpt
sbb
pop
insb
xor
jmp
xlat
arpl
jmp
mov
lods
bound
dec
push
imul
cmp
hlt
mov
push
and
insl
bound
stc
cltd
push
rcrl
je
and
and
scas
add
hlt
cmc
in
push
jg
mov
mov
jnp
lods
pop
test
insb
test
out
mov
xor
cmp
dec
lcall
push
xchg
cmp
adc
add
pop
add
rorb
push
test
call
aas
and
loop
and
pop
shrb
add
fnstsw
and
cmp
adc
or
inc
add
out
add
push
push
add
aas
mov
test
imul
js
sti
or
loopne
add
push
mov
mov
xor
add
es
and
fs
incb
out
pushl
push
jl
scas
decl
out
inc
mov
mov
jne
call
mov
andl
lods
decl
xor
adc
incb
mov
rorb
mov
scas
xchg
add
inc
add
ret
sbb
xor
adc
jmp
rorb
clc
loopne
and
mov
lahf
pop
jae
daa
movsb
insl
shl
cmpsb
in
mov
push
adc
jge
cltd
stos
insb
add
cmpsb
sub
rorl
pop
jb
pxor
aas
mov
adc
mov
or
jno
mov
jmp
pop
xchg
or
pop
outsl
or
push
mov
call
xor
scas
addr16
adc
add
cmp
add
and
and
repz
lea
scas
mov
and
add
out
in
arpl
xor
jb
inc
sub
test
jns
ljmp
das
test
lods
mov
gs
call
aam
inc
jmp
aas
test
call
xor
or
jmp
mov
call
bound
push
add
inc
cmp
jp
data16
pop
push
push
cs
outsl
pusha
inc
rcll
mov
inc
pop
cmp
adc
movaps
pop
push
mov
xchg
dec
xor
sub
xchg
loop
cs
xor
adc
int
and
mov
pminub
and
data16
mov
and
test
pop
test
push
data16
scas
mov
mov
rcrb
cld
scas
add
or
add
and
adc
inc
add
xlat
subb
adc
dec
rorl
add
fdivrl
mov
je
data16
aad
mov
mov
sbb
add
or
rorb
mov
aas
icebp
push
fstl
mov
jb
adc
sar
push
rcl
movsb
int
jo
movsl
pop
outsl
in
jbe
and
ret
loopne
and
add
addr16
aam
daa
cmp
in
fmull
xlat
mov
shll
out
addr16
daa
jnp
pop
ss
int
mov
pop
pop
inc
push
popw
lea
in
add
addr16
jmp
jecxz
add
or
mov
inc
or
scas
addr16
mov
add
stos
add
lods
int
or
jmp
in
pop
test
mov
mov
jns
call
aad
xchg
and
and
inc
jp
call
inc
or
decl
test
fbld
xchg
or
cld
jb
or
scas
call
lods
cmp
lods
incb
movsb
push
jne
push
ja
sbb
outsl
push
pop
mov
call
das
add
lods
jecxz
sbb
mov
and
into
jl
test
sub
negl
xor
mov
mov
and
ljmp
jl
je
sbb
sub
xchg
call
mov
inc
and
outsb
xchg
aad
xchg
std
dec
push
orb
push
inc
jb
data16
jo
mov
stos
dec
mov
mov
clc
aad
cli
je
scas
or
rolb
cmp
sub
call
shrl
cmp
add
cmp
in
pop
mov
mov
xlat
lods
cmp
fmuls
cli
pop
cld
or
mov
inc
and
pop
lea
push
std
sbb
xor
jnp
xchg
cld
mov
jnp
add
idivb
xchg
sub
push
jle
pop
sbb
js
mov
pop
lods
cmp
jle
icebp
and
call
es
andl
mov
or
jl
xor
mov
lar
xor
pop
stc
sti
add
sub
cwtl
jmp
sub
ljmp
arpl
jg
call
ror
add
jmp
and
sbb
mov
pop
out
insb
inc
cld
pop
cmp
xor
in
or
sbb
cmpsl
add
out
inc
push
ret
test
loop
cmpsb
out
inc
lods
ss
test
jmpw
cmc
xchg
add
inc
adc
addb
fs
inc
jmp
divb
shrb
test
sbb
fcomps
sbb
data16
jmp
scas
fcmovnb
inc
mov
add
xor
inc
sub
outsl
inc
and
mov
ret
je
jbe
flds
jno
jl
pusha
add
inc
and
and
push
rcrl
and
out
loop
add
mov
pop
add
pop
or
lods
mov
mov
jle
and
lea
or
add
mov
mov
add
ljmp
push
cmp
xchg
out
mov
xchg
testb
push
lea
dec
sub
jo
aas
jae
jbe
and
out
xchg
aas
jae
dec
jg
dec
adc
add
cmp
inc
jp
mov
dec
jle
ret
and
jbe
roll
jno
fwait
sbb
pushl
push
repz
aas
and
pop
inc
and
and
xor
xchg
mov
testb
and
sbb
or
out
adc
add
enter
imul
sbb
jmp
sub
add
push
jmp
jp
dec
icebp
das
add
repnz
rcll
jno
out
addr16
dec
adc
jl
dec
sbb
addr16
shrb
scas
daa
mov
pop
loopne
dec
outsb
ror
mov
jl
cmc
and
add
jmp
jno
inc
es
jmp
add
pop
mov
call
sub
lods
add
clc
stos
sub
sub
out
dec
add
add
jmp
cld
aas
out
adc
mov
sub
clc
insb
lea
xchg
add
jb
inc
and
or
dec
cltd
je
jb
or
aam
xchg
xchg
out
xchg
push
aam
push
sub
pop
jb
inc
sbb
orl
xchg
gs
test
cld
push
add
clc
or
adc
std
lcall
fldl2t
mov
cmpb
pop
add
mov
xchg
addl
je
push
mov
call
push
dec
mov
sldt
addr16
addb
push
push
popf
xchg
jecxz
fisttpl
mov
inc
sbb
rcrb
push
push
mov
jne
movsb
aas
and
das
jmp
into
scas
js
add
ljmp
scas
adc
or
mov
cmp
cwtl
mov
insb
push
xor
into
dec
fsubl
dec
push
sub
dec
add
push
push
cld
inc
insl
jb
pop
ljmp
and
pushl
shl
push
fnstcw
mov
or
dec
lds
fiaddl
xchg
add
out
adc
sub
addr16
and
testl
shrl
repnz
lock
sti
movq
cmpl
std
adc
orb
je
sub
push
test
push
jae
imul
outsl
inc
imull
test
scas
xchg
pop
fmul
out
push
add
inc
imul
sahf
xlat
call
jb
mov
add
sub
das
lds
shll
push
push
adc
inc
mov
outsl
inc
ja
and
jmp
sti
sub
cld
cld
mov
sub
xchg
or
add
pop
test
aaa
and
sti
sti
cltd
push
pop
mov
in
cld
mov
mov
ljmp
mov
call
jg
out
jg
dec
shll
jo
insb
push
outsl
sub
mov
call
add
sub
sbb
lods
addr16
mov
insb
push
fs
or
lcall
add
pop
or
clc
push
sarl
test
pushf
jle
in
mov
test
loope
mov
xor
inc
mov
push
sbb
cmpl
je
mov
mov
jecxz
jno
xchg
jle
pop
add
push
push
lea
pushf
std
call
pushf
push
mov
push
sub
add
inc
jne
int
xchg
arpl
lock
imul
sbb
add
jb
jge
mov
sbb
push
cmpl
adc
addl
jmp
push
pusha
cmpl
mov
dec
insb
cld
ret
inc
scas
test
or
shr
push
and
cld
add
add
fwait
mov
testl
lea
sub
push
inc
arpl
add
mov
or
jmp
jl
loope
lret
add
inc
cs
push
stc
jmp
loope
arpl
add
dec
data16
fs
add
sub
inc
sub
jp
jecxz
lock
addr16
fwait
push
std
adc
addr16
std
cmp
sbb
popl
xor
inc
movsb
addr16
inc
in
clc
loop
sub
lock
call
add
out
fsubrl
stos
dec
addr16
in
icebp
mov
popl
add
lock
je
hlt
push
insb
es
call
add
add
les
inc
std
mov
out
ret
es
sub
mov
sbb
je
lahf
out
mov
clc
push
scas
lret
std
pushf
cmpsl
add
and
rcll
fldcw
cmpsb
jno
mov
jge
xchg
das
inc
add
inc
pop
cld
xchg
data16
xchg
dec
nop
mov
add
xchg
dec
mov
cld
adc
xchg
movsb
outsb
sub
testl
jne
adc
jne
subb
push
sbb
push
fs
mov
leave
fadds
mov
adc
imul
xchg
push
push
mov
pop
push
xor
std
je
dec
mov
add
cmp
and
mov
adc
sub
test
pop
dec
mov
push
add
scas
enter
sbb
call
xor
jnp
jnp
jae
rcll
rclb
aam
and
lret
cld
pushf
pop
or
sar
out
jae
mov
add
inc
and
xchg
std
mov
sbb
scas
add
add
add
lock
ret
pop
out
idiv
fisttpl
ljmp
jns
movd
wbinvd
jg
incb
stos
mov
flds
sub
dec
and
imul
pop
jp
pop
sub
cmc
dec
fs
jmp
add
cmc
sub
and
mov
icebp
out
add
scas
and
adc
or
adc
data16
addr16
int
loop
fcoms
loope
clc
and
test
shlb
je
mov
pop
ret
push
xor
mov
sbb
hlt
xor
cld
mov
fildll
daa
add
imul
push
push
mulb
add
dec
mov
xchg
std
sbb
lods
out
jmp
cmc
fists
jb
fisttps
push
xchg
shr
lods
cmp
scas
out
popl
jmp
sub
xor
movsb
sti
push
mov
or
or
pop
sti
jb
dec
or
jo
adc
and
or
and
and
adc
jmp
add
xor
adc
iret
mov
mov
mov
in
add
cli
inc
sbb
cli
ljmp
pop
push
sbb
xor
arpl
lock
pushf
sbbb
xor
addr16
dec
icebp
cld
jne
loope
cmp
decl
fs
mov
inc
hlt
outsb
aam
xchg
sub
rorl
dec
and
ljmp
mov
cmp
add
rolb
jg
or
in
clc
test
cmpsb
test
mov
outsb
mov
xor
push
and
pop
add
gs
jne
in
aas
pop
in
add
push
pop
add
loopne
iret
xor
fsubs
and
and
rorl
add
int3
and
and
mov
jno
jo
cwtl
sbb
fistpll
decl
fimuls
push
add
fisttps
in
les
xchg
push
test
gs
test
addr16
xlat
test
stos
pop
and
shl
pushf
lods
pop
shrb
repnz
imul
or
mov
xor
sbb
stos
in
insb
dec
in
mov
mov
bnd
es
xchg
xchg
addr16
insb
adc
ljmp
cld
add
mov
xlat
mov
add
mov
xchg
pop
inc
and
pop
stos
cmpsl
addr16
cmp
hlt
xor
or
loopne
xchg
lahf
sub
fldl
jb
jmp
lods
fidivrs
mov
or
flds
inc
sbb
bound
cld
aaa
push
xrelease
ss
je
sbb
adc
repnz
push
and
xchg
out
xchg
xlat
xchg
xor
es
call
inc
aaa
in
add
pop
and
je
scas
call
je
fstl
add
add
push
rcpps
mov
mov
call
adc
jmp
fmull
cmp
unpckhps
push
fs
rorl
or
inc
push
outsl
adc
dec
mov
xchg
mov
inc
outsb
aad
lock
add
xor
sub
xchg
cld
mov
les
add
lret
andl
push
jb
stos
sbb
mov
add
ret
aas
scas
mov
and
cmpb
orl
add
adc
scas
add
pop
es
testl
pusha
addr16
pop
and
repz
add
xor
xor
add
mov
and
cmp
scas
jns
adc
add
decl
ret
and
test
addb
jmp
ret
aad
add
les
xchg
mov
add
and
add
push
outsb
fnclex
scas
imul
jp
daa
out
insb
pop
popf
rcrl
mov
addr16
das
daa
cmp
mov
xchg
or
lock
lock
insl
inc
pop
xchg
mov
cmpsl
out
in
data16
mov
call
fstpl
add
mov
add
sub
je
pop
xchg
lea
jge
sti
into
pop
dec
sub
lods
lea
iret
dec
mov
dec
call
insb
hlt
js
ss
jmp
add
add
lods
faddp
pusha
ret
bound
xor
sub
mov
sub
call
lods
xchg
push
shl
jle
ss
fcompp
fisubs
lods
fdivp
insb
pop
js
push
addr16
les
test
cli
add
pop
inc
or
push
or
out
je
test
push
mov
iret
stos
pop
jmp
ffree
call
fstpl
add
push
scas
pop
ret
fsub
andl
mov
mov
xchg
or
ret
push
int3
cmp
add
mov
pop
shl
loopne
sbb
iret
xchg
push
cmc
imul
inc
std
cmpb
lret
add
imul
xchg
pop
cld
xchg
mov
mov
scas
mov
sbb
jo
stos
adc
push
mov
add
sub
rorb
loopne
orl
out
pushl
jbe
adc
mov
xor
sub
dec
xor
test
push
scas
add
addr16
cmp
adc
jmp
inc
cmp
ljmp
popf
pop
ret
test
sub
lods
out
add
daa
push
add
aaa
mov
add
sbb
gs
addr16
mov
es
cmp
pop
addr16
iret
xchg
in
xor
mov
mov
mov
jecxz
iret
lods
out
add
gs
inc
sub
aaa
mov
jns
data16
mov
fucomip
push
pop
dec
mov
fdivp
subl
and
in
jmp
das
adc
callw
adc
fs
cmp
cmpsb
cld
cmp
sub
mov
stos
in
xor
popf
sbb
inc
mov
sti
jmp
lea
mov
xchg
cmp
sub
in
jne
xorb
clc
push
pop
xor
test
scas
fiadds
push
pop
jmp
xchg
cld
adc
inc
fwait
cld
test
pusha
add
fstpt
dec
mov
jmp
push
rcrb
ret
fucom
push
inc
mov
mov
add
arpl
incl
out
jne
xchg
push
hlt
test
sbbb
outsl
xor
pop
clc
test
pop
sub
divl
sti
dec
xchg
jle
xor
stos
mov
jne
mov
push
and
and
test
sbb
mov
dec
addr16
pushl
out
enter
lret
sub
push
jle
insl
add
add
out
add
or
jmp
dec
pusha
pop
insb
sbb
mov
sarb
or
or
sar
jb
jge
addr16
add
pop
mov
dec
add
sarl
out
notb
sub
rorl
das
aam
or
inc
mov
add
std
xor
addr16
add
inc
pop
ror
data16
lods
out
fisubrs
icebp
movsl
pop
mov
scas
mov
mov
scas
jecxz
and
jmp
add
pop
loop
iret
xor
test
mov
add
scas
jmp
sub
jmp
mov
add
mov
out
cmpb
and
imul
jmp
jecxz
insl
insb
pop
adc
pop
push
lods
lods
out
in
jno
jmp
adc
adc
stc
insl
dec
je
loop
insb
inc
out
cli
push
arpl
push
xchg
add
add
inc
pop
add
lods
cmp
inc
xchg
ljmp
jmp
movsl
add
jo
insb
loop
cmpsb
mov
je
sub
in
fsub
adc
mov
sti
add
incb
dec
mov
add
cmp
out
imul
mov
insb
mov
sbb
add
gs
and
gs
add
stos
decl
lret
inc
into
bound
add
stos
pop
mov
inc
jae
inc
adc
stos
or
mov
mov
jge
popa
mov
rorl
scas
push
push
mov
rcrb
or
scas
rcll
shr
push
scas
out
iret
incl
cli
repz
scas
cmpl
mov
xor
cmpb
into
rorl
and
lock
cld
or
mov
pop
test
jnp
push
add
and
mov
cwtl
arpl
std
mov
push
inc
jb
push
into
rcrb
cmp
cld
ret
aas
scas
dec
out
scas
fidivrs
pop
icebp
push
or
loope
outsb
push
das
in
mov
pop
in
mov
loop
pop
add
jge
not
addr16
data16
pop
loope
popf
out
cmc
ret
call
inc
es
aam
pusha
cmp
push
push
hlt
cmpsl
pushf
daa
jmp
adc
stos
dec
leave
jle
cwtl
jl
loop
sti
sub
xor
divb
sub
xchg
add
pop
movsl
push
fnsave
or
ja
push
add
xor
ret
mov
cmp
rcrb
inc
push
int3
pop
add
fdivs
mov
clc
sbb
cltd
pop
push
mov
and
in
loope
gs
pop
xor
add
loopne
jmp
cmp
mov
pop
jecxz
xorl
xor
lods
loopne
add
add
add
or
into
clc
enter
gs
add
loope
rorl
xor
add
mov
inc
je
out
adc
inc
cld
add
push
mov
pop
dec
loop
inc
je
jbe
ret
in
rclb
cld
aam
ret
leave
stc
cli
inc
push
mov
outsl
add
in
shrb
shrl
rcll
dec
push
sbb
xor
push
sub
std
jne
arpl
cld
mov
repz
imul
imul
add
adc
into
push
xlat
movsb
push
rcrb
add
loop
pop
dec
flds
out
icebp
dec
cld
jg
add
mov
pop
clc
mull
flds
dec
jb
cmp
add
fidivl
adc
push
xlat
mov
mov
add
sbb
sar
cld
ds
adc
mov
mov
sub
sbb
dec
push
out
int3
dec
cld
sub
fdivs
cmpsl
dec
imul
inc
fmull
ljmp
fs
hlt
fcom
out
adc
std
lods
add
loop
cld
insb
cmpsb
cmp
mov
in
xlat
lods
pop
jmp
divl
test
clc
test
pop
pop
popa
fdiv
and
addr16
daa
scas
inc
inc
vcvtsi2ssl
hlt
jae
add
and
addr16
adc
outsl
mov
add
daa
xchg
repz
and
clc
xor
cmp
stos
fistl
sub
jne
divl
cmp
or
je
aas
fcmovnbe
fucomi
cmp
call
xor
xchg
adc
push
out
int
cmpsl
jo
sti
insl
insb
pop
dec
mov
stos
call
gs
pop
inc
jb
mov
cmp
xor
xor
data16
add
stc
stos
sub
mov
add
test
sbb
ja
outsl
and
xor
xlat
pop
adc
arpl
fwait
addr16
jge
cld
adc
int
mov
push
cs
adc
std
adc
add
pop
pop
inc
fdivr
push
popf
aas
jp
lcall
lea
imul
mov
cli
decl
addl
ret
cld
decl
aad
mov
jmp
roll
xchg
imul
insl
jle
inc
add
scas
mov
xor
mov
mov
pusha
push
cmp
push
xchg
dec
cld
cmp
jae
into
jp
data16
add
mov
pop
inc
mov
imul
cmovne
test
js
lret
shl
xchg
out
dec
xor
push
xlat
fldenv
sub
pop
std
mov
lret
mov
rcrb
js
add
pop
lret
fildl
adc
jns
inc
cmpsl
xlat
call
jmp
jge
cmp
mov
iret
add
dec
fcomi
xor
in
imul
and
dec
mov
out
addl
arpl
cld
mov
mov
imul
inc
cmp
add
imul
repnz
rorl
in
pop
adc
fildl
ljmp
inc
jmp
rep
xchg
idivl
cli
andb
mov
sti
fdivl
jbe
jmp
aas
lcall
insb
fisubrl
test
push
add
mov
je
sbb
je
add
jno
ja
mov
icebp
lods
xchg
into
sub
push
out
jne
pop
out
jge
ficomps
jmp
pop
add
pop
enter
fidivrs
or
clc
jge
call
adc
imul
stos
push
incl
leave
mov
jne,pn
add
mov
dec
sbb
and
adc
xor
mov
notb
out
fcoms
mov
test
pop
pop
or
mov
outsb
fsubrs
mov
cwtl
cmovo
cs
ret
call
les
mov
es
mov
repz
insl
push
inc
jb
sbb
jb
imul
cld
mov
xchg
or
push
cld
jecxz
clc
cld
fmulp
inc
adc
mov
sbbb
push
flds
and
jno
jnp
mov
add
lock
into
idiv
sbb
mov
movsb
push
or
add
push
lahf
inc
aas
jge
addr16
xchg
xlat
dec
or
adc
test
add
push
test
cmp
movsl
jp
fdivs
pop
cmp
mov
in
sub
lret
std
mov
ja
dec
repz
test
inc
test
lret
outsl
ret
jl
add
cmpsl
mov
inc
xor
mov
add
pop
int
sbb
adc
inc
popf
sbb
ret
add
sti
fiadds
cmp
mov
push
mov
cli
mov
shll
aaa
insb
push
insb
pop
mov
loopne
push
pop
jle
sub
repnz
shrb
in
movsl
sub
je
out
xchg
jmp
or
imul
cmp
test
fsubrl
mov
rclb
and
jne
decb
xor
mov
fisttpl
adc
push
mov
ljmp
sti
incl
dec
inc
or
adc
stos
add
outsl
add
xlat
cmp
xchg
add
mov
adc
push
imul
jne
out
jmp
ja
inc
jb
xor
in
or
or
test
addl
outsl
pop
xchg
mov
add
xchg
call
inc
add
scas
mov
aas
jo
pop
mov
lock
std
ret
inc
scas
dec
inc
imul
dec
aas
jae
cmc
ds
mov
inc
pop
push
xchg
scas
adc
xor
mov
aam
or
mov
call
scas
mov
cmp
nop
mov
xchg
scas
mov
mov
sbb
out
pop
inc
pop
scas
addr16
adc
invd
fidivrs
daa
xchg
insl
sbb
inc
jnp
add
scas
into
inc
test
cmp
data16
jp
pop
pop
cmp
sub
fnstcw
xor
pop
lods
add
fstl
inc
sub
xchg
adc
cmp
jmp
call
in
jo
or
push
jne
add
lahf
rcll
ror
lea
ffree
inc
inc
jecxz
push
daa
add
aaa
push
scas
test
call
xor
sub
sti
adc
cmp
mov
in
rclb
cmp
aas
xor
mov
push
mov
push
cli
insb
push
jns
out
arpl
popa
jo
stc
xor
nop
test
cmpsl
daa
add
pop
repz
adc
push
inc
jmp
jbe
fsts
imul
stc
js
adc
popa
inc
add
sbb
call
andb
adc
imul
adc
inc
push
jp
inc
add
scas
cld
adc
mov
dec
push
jecxz
call
es
push
aam
movsl
sti
mov
cld
jmp
xor
mov
jns
add
xchg
push
push
sti
test
and
mov
add
in
mov
mov
repz
loop
inc
scas
imul
scas
mov
call
sub
lcall
push
xor
sbb
push
bound
enter
cmp
mov
push
pop
data16
scas
xchg
cld
cld
inc
inc
jae
push
dec
out
addb
cmp
cld
lcall
pop
push
sti
xorb
dec
decb
dec
out
jno
cld
sub
jecxz
scas
and
or
repnz
popf
jne
dec
mov
sub
fsubrs
or
jmp
fistpll
dec
add
sbbl
and
cltd
sbbb
adc
adc
mov
sub
cmp
mov
jmp
sbb
je
add
test
frstor
mov
das
popa
fldlg2
jae
and
add
outsb
xor
rcll
adc
addr16
popf
xchg
xlat
ret
js
in
movsl
and
jmp
stc
xlat
sti
out
pcmpeqw
sub
mov
jo
add
mov
fldt
stos
cmp
fcompl
jns
jmp
add
ret
sub
jle
jmp
mov
jns
fucomp
into
test
inc
popl
mov
jns
sti
add
into
xor
xchg
push
leave
sub
fucomip
cwtl
loop
mov
push
fucomip
jb
pop
cmp
lods
cmp
add
adc
xchg
scas
push
cmpsb
sti
add
jo
push
jne
cld
test
push
or
push
imul
add
cmp
lds
pop
mov
add
mov
ds
add
imul
pushl
push
decl
push
adc
in
je
add
push
push
dec
loope
inc
xlat
mov
pop
adc
rclb
mov
dec
imul
mov
fucomip
jne
lods
js
mov
add
lods
out
adc
mov
ret
ljmp
mov
cld
sub
mov
das
les
jmp
add
add
mov
ds
jno
adc
mov
jmp
mov
iret
push
xchg
mov
add
scas
jne
imul
mov
sub
fisttpl
jg
scas
call
into
xchg
loopne
fdivrl
inc
jae
rep
incl
xchg
adc
mov
addr16
cmc
push
shl
mov
xlat
fnsave
loopne
mov
int3
pop
sub
imul
inc
stc
xchg
loop
push
das
data16
inc
jmp
movq
aas
movsb
inc
jo
sbb
scas
lods
cltd
test
mov
sbb
mov
call
outsb
ret
cmpsb
pushl
loopne
adc
cmpsb
dec
or
adc
and
inc
jmp
lret
ja
mov
mov
movsb
add
sti
mov
pop
inc
jmp
and
and
and
and
xchg
cli
insb
lret
xchg
mov
arpl
aam
jbe
jmp
lods
add
bound
sub
cmp
xor
out
xchg
or
mov
dec
rcr
cmp
and
xor
and
jbe
and
fsubp
aas
and
mov
push
push
mov
and
pop
sbb
inc
data16
add
push
sti
incl
jecxz
add
xor
cmc
int
pop
and
or
adc
mov
xchg
addb
push
fmul
inc
addr16
add
dec
xor
inc
repnz
push
xchg
inc
sti
incl
int
and
pop
jg
xlat
add
gs
mov
or
sbb
inc
lret
and
rorl
adc
insl
stos
sub
iret
push
loop
leave
orb
subl
in
mov
adc
sub
ljmp
mov
inc
jge
mov
test
loop
ret
bound
and
push
xor
xor
add
shll
and
xor
push
shlb
inc
inc
jbe
cmp
jbe
cmp
mov
test
mov
addl
sbb
add
int3
aaa
mov
sbb
imul
pop
pushf
daa
jmp
cmp
mov
mov
out
fistpll
push
add
hlt
fbstp
lret
jnp
adc
jbe
add
gs
mov
lds
enter
sub
sbb
ljmp
scas
add
or
loopne
cmp
add
mov
push
call
add
cwtl
sub
dec
push
lahf
stos
adc
lods
icebp
inc
lds
call
add
mov
jge
push
jb
mov
xchg
lock
jmp
mov
lock
pop
pusha
out
mov
fldenv
adc
scas
rorl
add
add
and
cmp
pop
push
xor
cwtl
outsl
cmp
cwtl
sub
enter
add
push
add
lock
and
mov
cld
inc
icebp
scas
pop
adc
sbbl
insb
sti
incl
push
pop
inc
lahf
rorl
mov
mov
cmpsb
pop
xor
cld
je
xchg
mov
sub
int3
or
pop
pop
inc
mov
cmp
adc
add
xchg
pop
pop
shrb
add
pop
adc
sub
jmp
lock
jnp
scas
sar
mov
or
pusha
cmpsb
add
insb
add
or
in
inc
call
out
clc
stos
call
mov
insl
push
shll
mov
mov
mov
add
sti
mov
daa
add
mov
sub
sarb
orb
sbb
push
pop
call
out
push
xorl
repz
xchg
mov
subl
arpl
mov
je
dec
dec
out
jecxz
add
fidivrl
dec
jo
add
stos
or
lods
loope
mov
addr16
scas
out
mov
mov
insb
enter
jle
mov
into
xchg
inc
int
outsl
jmp
jg
mov
fnstenv
mov
push
jnp
adc
mov
mov
push
sti
jmp
bound
sbb
jne
gs
cmp
mov
add
je
sub
lea
mov
in
xor
jmp
stos
test
pusha
push
jg
mov
pop
jae
or
inc
stc
lds
in
enter
mov
movsb
sahf
test
ds
data16
sub
je
mov
es
stos
push
and
add
fiaddl
inc
decl
add
aas
and
ds
and
inc
leave
rcrb
shl
xor
push
push
repnz
mov
xor
mov
and
jmp
aas
or
inc
add
pop
aam
jl
aad
unpcklps
std
flds
jle
sub
or
jmp
or
ret
sti
mov
lret
scas
data16
inc
inc
jno
insl
test
pushl
movsb
lods
cld
mov
dec
jne
movsb
rol
mov
rcl
in
int
int3
fmuls
adc
in
fwait
nop
add
repz
lock
ss
inc
ret
loopne,pn
add
mov
jno
add
sub
sti
push
pop
add
xchg
hlt
fsubs
add
adc
jecxz
psubb
gs
nop
iret
jl
xor
push
add
push
gs
mov
xor
jge
xor
jecxz
test
inc
mov
scas
add
jl
mov
cli
scas
roll
insb
sbb
stos
stc
cmpsb
repz
jl
call
mov
scas
es
outsl
ror
and
out
and
roll
imul
scas
jmpw
cmp
sti
xor
mov
addr16
mov
in
pop
callw
repnz
inc
mov
pop
pushf
daa
jmp
or
addr16
adc
cmp
jp
mov
jl
imul
ja
or
push
and
das
addl
ret
mov
leave
cmpsb
or
imul
in
bound
nop
dec
sbb
add
fs
jecxz
jne
push
mov
dec
add
adc
jno
xchg
push
add
out
addr16
aam
out
roll
ret
sti
dec
lds
test
lock
icebp
jl
jne
add
mov
mov
add
in
test
pop
idiv
xor
mov
inc
dec
fcmovb
inc
je
add
add
testb
push
mov
xchg
jecxz
push
cld
jmp
cltd
call
push
idivb
inc
or
lea
jb
aas
inc
or
decl
out
mov
lcall
mov
cmp
or
bound
into
sbb
add
xor
test
dec
mov
mov
shl
shl
dec
lds
inc
mov
call
pop
daa
jnp
lods
popf
cs
push
pop
add
hlt
imul
cmp
addb
or
and
xor
mov
xor
call
add
iret
js
aam
js
xlat
je
mov
test
js
xor
and
scas
cli
out
inc
sbb
and
cli
add
outsl
sub
mov
addr16
sub
imul
or
sub
outsl
add
dec
xor
js
rolb
adc
jne
cmp
popf
imul
ret
mov
enter
shlb
int3
adc
imul
mov
add
push
cmp
cmpsb
std
movb
xor
mov
mov
hlt
mov
outsl
mov
out
mov
mov
jle
push
outsb
mov
arpl
sti
cs
movsb
out
lds
or
fs
fwait
pusha
out
push
stc
jle
repnz
or
xchg
mov
xchg
lods
sbb
rolb
xor
lods
das
dec
xor
lods
jmp
jmp
adc
mov
jo
mov
cmp
xchg
or
sti
jbe
cld
je
cmp
adc
outsl
mov
ret
lock
add
add
mov
or
mov
push
cmp
or
dec
out
inc
adc
dec
shll
add
fiadds
inc
add
jp
inc
add
aam
stos
add
push
mov
mov
cmp
arpl
lock
push
push
mov
cmpsb
sti
test
push
mov
mov
jmp
ss
pop
mov
inc
loop
push
mov
inc
or
loopne
sti
ljmp
sti
xchg
data16
dec
cwtl
repnz
scas
fldcw
adc
mov
arpl
shlb
shrb
sub
sub
jae
jmp
jg
iret
ja
daa
mov
incl
nop
add
je
inc
pop
in
lret
call
jl
mov
mov
add
les
adc
mov
jae
push
add
cmpl
add
in
push
jge
add
jl
adc
test
mov
sub
arpl
inc
xchg
ds
xchg
xor
jl
outsl
into
inc
fsubrl
scas
mov
in
push
mov
in
sbb
jmp
cmpl
xchg
aam
pop
loop
sub
adc
insb
inc
popf
arpl
push
movsb
push
daa
jge
mov
es
sub
ret
lock
sub
xchg
in
jecxz
jle
clc
pop
pop
outsb
test
test
into
mov
jmp
shll
adc
or
sbb
ja
or
pop
out
in
cwtl
cmc
sub
mov
adc
jg
mov
or
pop
frstors
iret
add
mov
jns
lods
xor
push
add
mov
sti
cmp
daa
add
mov
cmp
xor
fldenv
jne
adc
or
cmp
cmp
mov
mov
dec
mov
ljmp
push
xchg
push
das
inc
hlt
shl
cmp
cld
test
xor
add
ss
ljmp
jecxz
inc
cld
mov
pop
leave
push
mov
mov
movl
or
lock
push
xor
push
push
push
mov
mov
cmp
scas
add
add
sarb
scas
add
xor
mov
adc
sarb
mov
pop
add
sarb
int
ds
les
lret
ljmp
js
sub
pushl
cmp
inc
fidivl
test
cld
subl
or
and
ljmp
add
mov
inc
in
jl
icebp
mov
sbb
cltd
jle
cmp
cs
mov
add
xor
mov
test
std
add
daa
mov
mov
pop
mov
loopne
mov
fs
std
bound
imul
jae
ret
push
pop
imul
inc
ljmp
sub
jne
scas
lods
jns
sbb
aam
mov
cwtl
aad
and
adc
addr16
fidivrl
sub
mov
and
sbb
call
insb
imul
jo
stos
inc
in
stos
addr16
cld
mov
lock
sti
sbb
adc
mov
push
jb
out
in
xor
jmp
and
push
xchg
stos
inc
or
call
repz
rolb
sub
clc
bound
xchg
add
pop
mov
cmpsl
fiadds
and
or
mov
add
mov
pop
push
add
in
adc
xchg
repz
dec
sub
rcll
out
mov
inc
test
andl
sti
push
pusha
out
imul
hlt
jle
stc
test
inc
pusha
data16
dec
andb
add
pop
mov
in
add
lahf
pop
mov
popf
pop
mov
add
popf
or
push
or
dec
xchg
or
or
rorl
clc
mov
mov
pop
inc
or
sar
and
call
push
js
add
scas
rorb
jns
push
rclb
ret
mov
sarl
arpl
nop
rolb
fs
out
sub
cld
and
ltr
daa
gs
jle
or
push
ljmp
pushl
ljmp
mov
and
xor
sub
or
roll
scas
addr16
fnstsw
cmp
mov
sub
mov
sbb
negl
imul
sub
jne
shlb
inc
test
jmp
test
and
cmc
add
mov
mov
pop
dec
incb
insb
testl
sbb
and
adc
mov
mov
bound
test
call
add
addr16
inc
lods
dec
mov
pop
sbb
jo
inc
sub
es
push
test
lods
add
mov
int
mov
jmp
lods
fmull
enter
mov
sbb
scas
add
clc
push
test
add
out
add
lods
movsl
or
xor
mov
add
outsb
cwtl
pop
into
add
mov
cld
add
mov
add
push
fsubs
ljmp
enter
andl
pop
call
subl
lea
push
cld
decl
pop
adc
cmpsl
cmp
into
and
ljmp
inc
stos
stos
dec
mov
xlat
xchg
scas
add
ud0
sbb
xchg
std
pushl
movsl
cmp
sbb
shlb
orl
dec
inc
call
sub
out
mov
mov
or
push
jg
les
xchg
repz
insb
lods
mov
mov
xchg
incb
into
xor
nop
xor
jl
xchg
mov
add
xchg
fadds
subb
sbb
mov
or
outsb
cmp
add
jg
mov
inc
pop
add
dec
dec
cmp
cld
loop
and
cmp
mov
sbb
call
std
mov
xor
mov
scas
aam
test
adc
mov
cmc
dec
call
mov
insb
dec
pop
gs
add
mov
or
lods
jmp
mov
sbb
xchg
mov
add
mov
cmp
fisubl
out
mov
insb
iret
mov
add
call
and
jmp
and
inc
xlat
inc
jmp
test
jl
clc
hlt
xchg
xchg
in
lods
mov
scas
sti
jmp
lods
mov
mov
sqrtps
adc
fisubrs
sub
shrl
nop
je
sub
sti
loope
push
adc
stos
add
lds
add
outsl
mov
add
adc
lods
call
inc
add
and
mov
add
and
test
and
sbb
mov
mov
jecxz
stos
push
cld
test
push
xor
xor
or
and
add
mov
adc
das
arpl
add
fistl
jmp
inc
pop
adc
out
je
fmull
mov
or
pop
mov
or
mov
decb
jecxz
scas
mov
push
test
sar
aaa
int
xor
jb
sub
ret
mov
subb
andb
ss
jecxz
inc
cmpl
jle
push
dec
fisttpl
inc
xchg
rorb
cmp
cmp
xchg
loopne
loopne
ffree
add
push
das
pop
sar
test
xchg
or
ljmp
mov
mov
loope
cld
and
xor
dec
xor
mov
addr16
adc
stos
jmp
add
addr16
sub
cmpsl
popf
jecxz
repnz
addr16
das
mov
xor
in
add
test
lcall
loopne
add
sbb
lods
fstpl
loopne
ficomps
mov
mov
push
loopne
jle
pop
insl
jae
test
add
mov
sub
adc
stos
bound
outsl
test
add
cmp
cmp
out
test
xchg
add
inc
orl
data16
andl
gs
add
les
out
mov
jno
insb
out
test
and
push
roll
cmp
jmp
jae
adc
popa
and
loope
sbb
out
test
sbb
push
add
cwtl
sti
jae
fldl
xchg
cld
push
stos
fstl
add
dec
and
fsubl
cmpsb
fdivrl
and
in
and
data16
ret
incl
jp
subb
inc
push
jnp
dec
popa
jle
mov
cld
test
fadds
mov
stc
cld
push
push
xchg
mov
mov
mov
imul
inc
daa
mov
mov
bound
add
scas
inc
jge
scas
mov
mov
incl
cltd
add
scas
sbb
subb
or
inc
xlat
push
pop
jnp
call
xlat
decb
jle
stos
ficoml
jae
ljmp
xor
fistpl
popf
jmp
mov
pushf
adcb
cmpsb
or
mov
add
cmp
inc
xlat
mov
pop
je
inc
repz
addr16
adc
sarb
push
sbb
jns
add
in
or
inc
std
imul
fisubrl
data16
ljmp
add
pop
sbb
add
add
out
icebp
add
inc
pop
jge
mov
jmp
jmp
out
mov
scas
addr16
adc
push
test
dec
aas
call
sub
jmp
add
ja
ror
ret
pop
call
test
call
mulb
xor
jmp
inc
dec
punpcklwd
adc
repnz
mov
call
jmp
jmp
ja
jno
out
lock
lods
test
stos
jmp
jmp
js
popf
or
mov
pop
movsb
outsl
fstps
aad
in
neg
lcall
jae
and
leave
inc
sti
add
xor
cmp
push
jp
push
add
dec
arpl
fwait
xchg
sti
lcall
xchg
jmp
xchg
push
je
std
scas
pop
sbb
sub
push
mov
int3
call
cltd
inc
push
add
std
adc
int3
cmpsl
pop
adc
fistps
adc
addl
add
jmp
jnp
scas
nop
cwtl
push
sub
cld
lcall
jo
int
or
nop
jne
add
mov
sbb
push
out
mov
push
repz
rolb
nop
pushl
xor
pop
cwtl
mov
push
je
mov
insb
repnz
je
std
insl
or
andl
xorb
out
scas
add
and
mov
adc
xchg
sbb
adc
xor
scas
fiaddl
ret
mov
mov
xor
scas
aaa
mov
add
inc
xor
das
stos
in
inc
icebp
cmp
mov
cmp
int3
sbbl
sub
xchg
insl
add
mov
call
add
scas
insb
bound
movsl
out
mov
push
test
sub
jmp
mov
mov
mov
mov
test
cmp
inc
or
cli
push
leave
lock
and
jb
test
es
sub
add
cmpsl
xor
fadd
je
jmp
in
adc
adc
add
sbb
insb
push
lcall
das
cmp
out
mov
lods
xchg
jg
xor
outsl
in
adc
push
insl
add
mov
lret
adc
mov
scas
imul
push
pop
add
pusha
sar
call
out
cmp
add
int
mov
add
movsb
sti
ljmp
push
inc
sbb
jno
cltd
xchg
mov
adc
ret
add
sbb
adcb
push
out
icebp
out
mov
into
out
and
call
pop
pop
insl
rcll
dec
fs
scas
add
add
scas
and
push
jns
insl
push
scas
mov
push
xor
jbe
xor
or
pop
lret
xchg
add
jle
lcall
stos
pop
xchg
int3
xchg
push
ss
cmpsl
inc
lea
pop
cltd
pusha
ljmp
or
test
call
addb
or
ss
lahf
pusha
xchg
jl
rorl
cltd
pop
cmp
out
inc
xchg
scas
dec
cmp
cltd
cwtl
in
sub
sahf
xor
lods
aaa
jno
shrb
pop
shll
add
mov
push
ficompl
test
rcrl
test
jmp
mov
dec
aas
call
mov
sahf
jmp
call
sbbl
jo
call
add
scas
addr16
sub
add
incb
lods
add
out
add
lods
out
jne
add
testb
lods
pushf
shlb
cmp
outsb
push
lahf
xchg
add
call
arpl
jmp
insl
push
sbb
xor
out
out
inc
jmp
lods
addr16
bound
out
add
add
inc
cld
mov
xor
jmp
xor
add
lods
out
or
xor
daa
push
push
imul
inc
neg
mov
adc
push
test
imul
mov
push
add
and
test
add
or
xchg
mov
aam
add
cli
call
fdivr
xlat
dec
and
push
add
imul
pop
inc
fsts
mov
cli
mov
jnp
mov
adcb
add
lcall
decl
inc
jb
test
mov
xchg
mov
mov
lea
incl
push
add
dec
nop
add
mov
mov
push
and
ret
call
push
fsts
test
rcl
incl
jnp
movl
cmc
add
incl
decl
incb
or
insl
inc
fmull
lods
aaa
push
lock
jns
add
ljmp
inc
lock
jnp
cmp
lea
and
jmp
cmc
fsubs
mov
pop
lcall
insb
inc
fldcw
scas
out
and
mov
cltd
push
cmp
in
push
repnz
in
imul
lcall
insl
arpl
add
lcall
add
outsb
sbb
add
lods
lock
add
mov
and
xor
cmp
pop
insb
je
lods
repnz
jmp
push
pushf
cmpsl
jne
aad
lcall
adc
mov
pop
shr
ja
cltd
sti
jb
ss
lods
fadds
push
rolb
cs
fistpl
lods
outsb
sbbb
out
lods
call
insb
cs
add
lods
aaa
sti
aam
ja
jmp
jae
aas
mov
leave
pop
ss
add
jge
mov
xor
decl
push
sti
incl
ja
mov
fcomps
adc
sbb
jne
adc
bound
loop
outsl
xchg
mov
pop
jge
les
gs
adc
in
lea
imul
add
pop
cld
je
je
fistl
cmp
aas
cmpsl
pop
cmp
outsl
es
fistps
sbb
jnp
incb
mov
jmp
jge
dec
in
or
aam
dec
sarl
pop
mov
push
mov
pop
add
add
xor
sbb
adc
push
pop
shr
cmpsb
xor
inc
adc
jle
scas
push
and
stos
mov
add
pop
es
pop
mov
stos
xor
push
sar
testb
fmuls
aas
jae
test
or
pop
xor
cld
mov
popf
cmp
in
test
ficoms
clc
sbb
xchg
adc
aaa
sub
jl
xchg
adc
sbb
mov
push
xor
and
jno
incb
cmp
xor
ret
stos
jmp
test
int3
aaa
outsb
sub
cmpsl
sarb
sub
scas
das
test
cmc
sbb
fldl2t
add
test
std
jle
ror
rcll
shll
movsb
call
sub
out
and
lods
fidivs
adc
mov
bound
push
pop
data16
pushf
adc
negb
bound
push
iret
addr16
sub
dec
sarl
add
and
lods
lods
inc
int
xchg
cli
hlt
in
fs
jmp
out
dec
push
adc
xchg
movsl
or
jb
mov
test
iret
cmp
add
cmp
pop
sbb
fisttpl
add
adc
call
push
aad
adc
fisttpl
add
aas
and
adc
dec
pop
jecxz
imul
add
imul
mov
add
stos
add
xchg
sti
push
xchg
cmp
subb
add
subb
xchg
imul
scas
push
add
lret
xlat
pusha
mov
scas
or
js
or
addr16
xor
xchg
push
push
and
in
dec
pop
jle
test
and
scas
jle
lret
es
or
subb
add
and
or
add
or
pop
loope
pop
jg
mov
test
lea
and
pop
in
fmull
incl
fmull
js
fwait
add
arpl
push
xor
in
rclb
addr16
out
imul
pop
xor
xchg
sub
out
scas
aaa
neg
sub
adc
adc
add
bound
scas
addr16
add
fidivrs
add
out
xor
icebp
push
inc
add
adc
lods
jmp
daa
fldt
adc
sub
pop
test
in
mov
cmp
inc
lret
xor
adc
stc
jmp
nop
jae
fstpl
xchg
add
fdivrs
jmp
and
add
lods
xor
inc
jmp
scas
push
into
sbb
add
cmpsl
cwtl
xchg
push
and
sub
mov
lods
addr16
add
shr
jg
mov
pushf
popa
inc
jmp
and
pusha
call
pop
jg
xchg
mov
xchg
mov
cmp
fs
jecxz
inc
loopne
dec
adc
ljmp
mov
jge
or
gs
add
aas
pop
push
das
mov
jge
stos
gs
cmp
imul
mov
shrb
scas
fstpt
add
lret
mov
call
xchg
loopne
pusha
push
add
fists
jne
dec
push
add
xor
inc
aam
add
push
add
add
sbb
clc
fsubs
adc
push
xor
test
out
ljmp
pop
push
push
xor
sti
adc
sub
sub
std
addr16
jle
inc
shll
mov
ss
scas
rorl
mov
jg
scas
jle
out
cmpsb
pushl
daa
push
out
jle
movsb
mov
add
jle
mov
add
test
pop
jg
scas
jle
mov
addr16
scas
addr16
xchg
scas
addr16
fstp
mov
imul
jmp
movsb
scas
addr16
xor
add
sub
jo
cmp
add
in
xchg
scas
addr16
ret
fbstp
push
add
xor
jae
and
ja
stc
push
add
nop
and
scas
addr16
jle
push
rorl
faddl
lods
enter
sub
add
aas
and
lds
js
movsl
rclb
jo
inc
sub
mov
pusha
addb
add
or
dec
push
mov
sti
mov
add
push
push
fwait
add
das
test
incl
cmp
and
xor
and
xchg
dec
bnd
shl
lods
add
jg
jns
xchg
data16
addr16
adc
popa
inc
jmp
in
test
xchg
add
push
out
xchg
loope
add
imul
test
push
mov
jnp
add
push
rolb
pop
or
or
fxam
shlb
mov
mov
cmp
imul
xor
incl
call
cmp
je
pop
scas
mov
add
pop
stos
push
std
lahf
call
lret
add
call
jmp
loopne
subl
xchg
pushf
scas
jle
or
xor
ljmp
jle
ss
jmp
test
repnz
xchg
pop
out
clc
pop
call
dec
xchg
mov
mov
or
ljmp
mov
or
lahf
mov
mov
adc
xchg
cmp
shll
or
jge
ss
jle
xchg
jle
sbb
sti
add
jp
shrb
jmp
add
loopew
fucomip
lea
push
addr16
les
cmpsl
loop
and
add
inc
outsb
daa
jmpw
data16
jmp
xor
addr16
push
xor
imul
xor
or
push
sub
mov
jo
jb
gs
arpl
add
addr16
add
test
ret
mov
add
add
decl
insl
mov
cmp
jmp
and
or
and
scas
add
inc
cld
jmp
ljmp
jne
loop
fldcw
test
fiaddl
fisubs
test
xchg
dec
cs
test
out
add
lods
add
fs
inc
cld
jmp
xor
jne
fsubp
movl
sbb
add
fsub
and
inc
data16
inc
or
mov
inc
popw
xchg
out
jp
nop
je
cli
fcmovb
call
jge
call
jmp
inc
loope
and
arpl
add
loop
and
arpl
add
divl
not
adc
stc
std
fiaddl
cmp
dec
and
jge
clc
xchg
cmpl
sub
and
outsb
stc
shll
cmp
jo
sub
and
jg
incl
push
or
add
jg
jg
sarb
bound
mov
lret
cmp
sbb
jle
dec
clc
dec
mov
cmp
aas
cmp
repz
movsl
add
jg
inc
outsb
and
scas
add
inc
and
jbe
inc
scas
cmpsb
push
sahf
scas
jle
pop
ljmp
dec
add
jg
or
xchg
pop
outsb
sub
push
mov
test
notl
xchg
add
lahf
push
rclb
push
mov
loop
jo
jg
movsb
and
les
cwtl
sub
in
idivl
fs
andl
pop
mov
add
fsubrl
idivl
movsl
in
pop
cmpb
cmpsb
push
add
mov
push
adc
dec
pop
inc
jmp
scas
adc
jmp
into
add
push
aaa
xor
push
leave
adcl
in
xlat
cld
movsb
out
add
mov
lret
in
mov
bound
push
shlb
sahf
jl
push
rcl
jno
jmp
enter
xor
outsl
xchg
xchg
pop
add
jne
jns,pn
mov
lods
lods
push
push
fisubrs
xbegin
add
jmp
inc
xchg
add
testl
mov
push
cmp
adc
lock
subl
dec
xor
inc
jne
mov
mov
inc
inc
es
stos
pop
inc
mov
dec
or
rorb
mov
push
mov
jne
prefetch
or
inc
mov
rol
shrb
dec
push
dec
sub
add
jbe
add
pop
mov
push
xchg
test
out
adc
ljmp
pop
add
fstpt
ljmp
mov
hlt
outsb
add
fisttpll
outsb
xor
shll
mov
out
sub
daa
push
cli
hlt
mov
adc
mov
xor
sbb
stos
adc
cmp
sub
aas
add
xchg
add
pop
lahf
imul
lret
sbb
dec
loop
stos
cli
cli
jge
dec
mulb
outsl
sti
in
das
out
cli
in
add
imul
xchg
js
dec
xchg
js
dec
mov
push
pop
sub
sub
and
stos
in
outsl
sti
into
pop
sub
or
repnz
mov
add
outsb
aas
stos
out
call
daa
shl
popf
daa
mov
addr16
adc
pop
adc
arpl
inc
mov
mov
and
push
mov
bound
dec
adc
and
push
sti
xor
fs
scas
jge
push
call
icebp
stos
fnsave
push
call
cmpsl
push
pop
adc
add
in
je
xchg
push
or
test
inc
or
jbe
adc
sub
out
add
push
inc
call
lods
cmp
data16
mov
mov
dec
pop
or
incb
inc
sub
inc
add
push
add
sbb
xchg
dec
push
or
jb
mov
cmp
push
int
and
sahf
decl
dec
pop
push
jnp
dec
stc
push
mov
cmp
jecxz
inc
mov
ds
outsl
pop
mov
stos
jae
sub
imul
into
add
cli
sub
cli
add
jp
sbb
fbstp
xchg
pminsw
scas
nop
jg
mov
ljmp
cmc
inc
adc
add
fisubrl
ja
in
add
ret
mov
in
sti
add
inc
adc
push
mov
adc
jnp
jg
packssdw
mov
cmp
push
mov
and
dec
push
in
cmp
imul
in
jp
dec
jns
jb
mov
lcall
xchg
in
inc
fistl
adcl
xor
call
jl
repnz
pop
and
push
pop
cmpb
push
and
ret
stos
add
xchg
ret
test
or
or
loopne
sub
sbbb
inc
scas
aas
cmp
loop
cld
adc
negb
cmpl
jp
je
aaa
mov
jb
pop
and
int3
repnz
scas
repnz
repz
popl
jnp
and
jb
mov
mov
fisubl
add
jl
jne
push
jo
movsb
aam
inc
call
adc
sub
rol
stos
inc
fstps
and
add
push
sarl
scas
cmp
in
cmp
sbb
arpl
push
cmp
rclb
nop
push
je
mov
icebp
addb
fmuls
sti
movsl
cmp
and
sbb
add
or
push
cld
add
decl
lea
push
mov
add
xchg
das
cld
stos
fldcw
add
dec
mov
lcall
mov
xor
or
bound
or
push
push
imul
sti
call
movsb
jne
je
jecxz
dec
jmp
or
cmp
or
nop
adc
add
inc
push
push
ds
negl
jo
negl
sub
xor
or
or
sbb
push
xchg
outsl
add
shl
clc
add
jne
mov
js
mov
cmp
and
int
dec
jmp
mov
inc
push
or
mov
mov
xchg
adc
and
or
jg
pop
je
movsl
sbb
mov
pop
pop
adc
dec
add
decb
incl
ljmp
mov
out
js
mov
push
in
sub
addr16
out
sti
inc
fistpl
inc
in
pop
ljmp
pop
ljmp
scas
loop
ja
lock
stc
sub
jmp
pop
mov
scas
call
call
jg
aas
lret
outsl
add
scas
jmp
and
repz
sti
push
or
add
mov
ficoms
test
jg
lock
mov
daa
add
fildl
jmp
mov
xor
fildl
jmp
add
pop
sub
icebp
adc
sti
push
frstor
and
mov
add
popl
jne
add
pop
in
push
jle
aad
sub
xchg
cmc
punpckldq
sub
sti
aaa
scas
repz
test
test
lods
addr16
and
je
je
lods
sldt
push
add
push
sbb
xlat
es
xchg
push
adc
push
add
sahf
jne
push
divl
xor
cmp
dec
stos
imul
fdivrp
pop
and
cld
fwait
and
data16
scas
loop
add
out
jne
stc
inc
and
lret
enter
pop
cmp
cmp
add
push
frndint
lds
loop
addb
mov
push
sahf
pop
add
test
scas
pop
adc
add
testl
lret
pop
pop
lea
scas
adc
decl
adc
adc
std
out
mov
sti
lock
cmpsl
mov
cmp
rcr
jp
and
sbb
xlat
dec
out
shl
pop
pop
aad
in
dec
clc
incl
not
addl
cwtl
ds
xchg
fwait
jl
xor
cld
push
xor
xlat
xchg
sbb
call
ret
dec
push
insb
jbe
jge
call
inc
in
xor
lret
jle
jp
call
std
push
shll
ret
es
stos
dec
pusha
scas
daa
sti
add
outsb
repnz
push
jmp
pop
mov
popf
add
stos
adc
inc
push
daa
dec
adc
pop
in
jnp
in
popa
mov
outsl
addr16
mov
jle
scas
in
mov
add
sub
fisttpl
fsubrp
add
mov
inc
jmp
xchg
jmp
cld
adc
jp
das
jl
test
add
mov
push
mov
xchg
jno
call
add
push
cli
shll
push
xchg
push
pop
call
sarb
dec
test
fsubs
push
je
iret
push
insb
outsb
imul
arpl
sub
add
sub
cld
add
imul
add
outsl
mov
hlt
pop
or
out
mov
mov
int
inc
imul
bound
jmp
cmp
pop
cwtl
and
ret
out
add
pop
clc
aaa
push
cmp
or
adc
shlb
inc
imul
cld
xchg
push
add
push
rolb
or
xlat
mov
or
add
mov
push
ret
loopne
out
push
scas
ss
test
inc
add
add
imull
test
add
ret
inc
scas
add
or
jnp
adc
andb
pop
out
inc
add
fwait
pop
push
out
xorb
add
sub
insb
xorb
sbb
cmp
insb
xorb
xor
sub
insb
xorb
dec
inc
add
fwait
aas
sti
insb
subb
shrb
scas
jne
mov
rorb
inc
scas
cmpsb
dec
xor
add
stos
xor
jecxz
stos
jne
mov
push
fs
jle
jbe
in
sbb
sub
fs
dec
mov
test
lds
ss
adc
adc
add
jmp
cmpsb
add
scas
loop
mov
ss
shld
add
bound
xchg
ljmp
sub
aas
jmp
lods
in
dec
or
in
clc
mov
push
sub
jmp
lods
in
dec
leave
push
mov
push
xchg
dec
jo
popa
dec
xor
nop
mov
out
sub
mov
out
jmp
int3
jg
pop
or
xchg
jo
gs
add
dec
mov
test
jle
call
mov
jmp
lods
jle
jmp
hlt
arpl
mov
and
add
or
leave
add
lds
fcoml
stos
or
leave
inc
and
imul
push
add
add
ds
pushl
loop
test
push
test
push
add
inc
add
inc
test
aad
add
mov
add
push
loop
and
aad
add
addr16
mov
pop
fadds
add
aam
add
callw
test
mov
add
add
sar
out
cmc
pop
js
sar
loopne
inc
add
test
lea
dec
xchg
inc
scas
movsl
aaa
xchg
repnz
mov
sub
xor
xchg
adc
andb
mov
add
dec
idivb
add
cmp
popa
stos
mov
adc
repz
scas
fcmove
adc
in
sbb
add
outsl
andb
mov
sbb
add
fisubrs
wrmsr
cltd
outsb
int3
es
jo
mov
std
mov
pop
outsb
dec
lret
push
es
rolb
and
bound
rorl
sbb
mov
add
cli
or
mov
pop
jmp
dec
xchg
and
jmp
je
and
jmp
rolb
cmpsl
and
jmp
sub
and
ds
xchg
dec
ds
pop
dec
ds
iret
insb
mov
lahf
pop
xor
in
addr16
fs
push
aas
pusha
pop
sub
in
addr16
stos
mov
test
add
insl
aas
jmp
in
addr16
mov
lods
call
aas
jmp
insb
addr16
test
jmp
mov
in
adc
pop
and
test
int
or
call
jne
aam
jecxz
mov
and
cmp
sub
ljmp
adc
test
syscall
call
push
stos
test
cltd
idivl
je
adcl
shlb
imul
adc
xor
incl
or
loop
call
ret
sub
arpl
mov
and
outsl
inc
adc
test
scas
mov
gs
sbb
cli
ret
aas
scas
sti
mov
sahf
sub
aas
scas
or
push
add
addb
cwtl
add
je
stc
or
xchg
pop
or
popf
repz
sahf
inc
add
outsl
jge
mov
add
add
insb
cmp
popf
inc
add
aas
pop
add
loop
fnstcw
scas
cmc
repnz
mov
addr16
sarl
loop
daa
mov
sub
add
sub
mov
addr16
or
test
sub
stos
addr16
cmp
push
test
sub
loope
out
pop
mov
es
inc
mov
daa
or
fs
fdivr
inc
icebp
arpl
add
addr16
mov
inc
stc
ss
les
fsubrl
xor
outsl
xorl
add
addb
loop
je
adc
xor
inc
sbb
fstps
sti
cld
or
das
movsb
or
stos
arpl
xor
adc
xchg
lods
or
sbbb
sbb
repnz
pop
inc
or
les
jmp
test
rolb
in
ljmp
pop
stos
scas
xchg
iret
arpl
and
cs
pop
lea
add
xor
pop
insb
lock
test
jecxz
cmp
in
mov
or
bound
inc
add
add
push
insb
jno
xchg
mov
add
xlat
mov
icebp
mov
jg
xchg
addr16
aas
imul
mov
call
add
xchg
jne
add
xchg
pop
test
add
pop
dec
inc
push
lds
je
shll
lods
push
cld
arpl
les
or
fwait
jne
pushf
add
or
aaa
mov
cmpl
jmp
movsl
andb
add
outsb
mov
jnp
add
out
cmc
inc
add
lea
or
shr
push
jns
inc
mov
rolb
add
mov
out
sub
std
or
xchg
mov
inc
stos
jl
add
inc
test
adcb
out
mov
or
aas
cld
outsl
movsl
and
inc
scas
addr16
mov
sub
cmp
jle
movsl
mov
or
jle
in
lods
pop
xor
test
call
ss
add
push
cmp
mov
mov
icebp
dec
cmpsl
add
dec
cmpsl
add
dec
cmpsl
add
dec
cmpsl
add
dec
cmpsl
add
dec
cmpsl
add
dec
cmpsl
add
dec
cmpsl
add
dec
cmpsl
add
dec
daa
add
dec
daa
add
dec
daa
add
dec
daa
add
dec
daa
add
arpl
call
aam
inc
jmp
add
add
pop
inc
jmp
sub
jle
addr16
lods
movsl
add
jmp
mov
addr16
xor
push
sub
insb
addr16
sub
repz
out
and
out
pop
push
jge
jg
test
or
fchs
in
push
pop
xchg
adc
movsb
fiaddl
mov
insb
jne
add
movsb
inc
add
fwait
mov
outsb
mov
shlb
add
in
add
pusha
mov
xor
mov
jnp
out
enter
orl
inc
adc
and
mov
inc
push
pop
lahf
movsl
sbb
inc
fucomp
push
xor
and
push
cmp
cltd
je
scas
push
cld
incl
mov
roll
push
xchg
bound
or
ds
jecxz
cmp
mov
push
pop
add
xor
adc
cmc
cli
fiaddl
pop
push
call
dec
sub
fld
call
xor
xchg
pop
lahf
incl
scas
clc
fs
adc
xchg
adc
shlb
int
or
lds
adc
xchg
add
sbb
mov
xchg
ljmp
aas
scas
incb
repnz
sbb
mov
jge
test
inc
data16
cli
add
push
xchg
xchg
mov
adc
loope
add
cli
jb
aad
jl
shlb
xor
and
push
add
mov
mov
movsb
xor
pop
lds
push
xorl
aad
sub
jp
mov
shlb
stc
add
push
xor
repz
test
sub
sub
popf
repnz
icebp
mov
shl
jmp
jecxz
aad
sbb
aam
gs
xchg
mov
leave
sub
movsl
add
fcoml
sti
push
ja
cmp
add
sti
stos
or
pusha
jo
arpl
and
pop
fsubl
add
and
adc
cli
xchg
and
add
lahf
sti
cmc
mov
ja
aad
ja
in
add
sub
pusha
jo
sti
jecxz
and
fcmovnu
and
les
flds
scas
sti
add
test
call
add
or
call
divl
cmp
inc
inc
incl
inc
jnp
add
call
test
push
add
push
push
idiv
mov
xchg
or
pop
or
hlt
push
out
xchg
andl
mov
inc
mov
inc
in
add
inc
pop
test
popf
imul
negl
or
push
mov
and
dec
xchg
decl
pop
pop
loope
inc
incb
cmp
sti
sub
push
out
push
das
sti
lcall
scas
scas
lret
into
or
loop
ljmp
clc
sub
jne
into
sti
mov
push
ljmp
and
call
sub
pop
cld
push
mov
jle
ss
lcall
scas
cmp
xor
push
movsl
add
outsb
shll
pop
jge
sub
add
arpl
leave
lods
aaa
jae
scas
dec
out
pop
lock
cmpsb
jmp
pop
cmpsb
hlt
sbb
out
mov
inc
add
lcall
daa
adc
mov
scas
pop
call
faddl
test
hlt
xchg
sub
test
rcr
movsl
jmp
add
mov
das
adc
cld
je
and
aam
pop
in
pop
lea
mov
pop
mov
lods
xor
push
call
add
stos
aam
loopne
mov
fisubrl
add
daa
pusha
mov
cmp
insl
insl
test
lods
add
mov
or
data16
xchg
mov
sbb
call
add
jne
int3
insb
in
insb
test
imul
call
add
call
orl
clc
xor
xchg
adcl
jge
test
mov
loope
rclb
das
inc
int3
xchg
fistpll
lock
mov
enter
imul
dec
int3
subl
inc
mov
scas
shrl
cmp
jmp
jecxz
sahf
leave
xor
add
mov
inc
call
mov
icebp
dec
jbe
sti
mov
mov
ja
iret
movb
add
or
add
scas
fnstcw
add
xor
stos
aaa
in
cli
jle
push
pushl
add
mov
push
jecxz
xchg
aaa
jmp
xchg
ss
xchg
aaa
jmp
xchg
ss
xchg
imul
add
push
mov
xchg
imul
aaa
imul
daa
cwtl
movsl
or
sbb
repz
pop
and
or
xor
neg
addr16
std
in
movsl
adc
pop
aam
fwait
cmpsl
jmp
ret
and
outsb
aas
xor
in
ret
push
repnz
inc
pop
data16
cmp
rorl
ret
outsl
sub
pop
ljmp
xor
call
sub
push
lods
scas
push
mov
add
cmp
jmp
lods
addr16
pop
aas
jmp
lods
add
aam
addl
lcall
mov
popf
add
xchg
lods
loop
out
fadds
jmp
icebp
out
adc
mov
pop
mov
sub
lods
out
pop
adcl
xor
xchg
subl
mov
inc
lea
in
jne
inc
push
add
push
test
sub
push
add
add
call
add
in
pop
add
xchg
or
mov
mov
filds
rsm
xor
fwait
add
ror
mov
mov
faddl
mov
xlat
mov
faddl
in
inc
dec
lahf
stos
sub
scas
dec
lea
add
div
div
add
add
lret
add
lds
sub
clc
mov
mov
stos
iret
add
sub
jmp
psubq
push
sub
lret
cmp
cmp
scas
push
add
fdivrl
mov
pop
repz
mov
call
sub
push
pop
xor
psubq
push
sub
ret
cmp
cmc
and
cmp
mov
out
aam
jg
xchg
mov
out
divl
mov
mov
jp
add
sbb
scas
in
push
xchg
out
jmp
aam
jmp
cmp
sbb
push
jb
push
aad
in
push
and
sub
xchg
outsb
fs
rcl
addr16
movsb
mov
mov
ljmp
clc
xor
leave
andb
call
push
es
movsb
in
xor
add
imul
jmp
out
jp
jle
xchg
scas
loop
inc
jecxz
xchg
lods
cmpsb
aaa
div
lret
jmp
push
add
mov
lds
sub
or
xchg
sbb
fdivl
xchg
sub
call
add
std
pop
sti
cmpsb
sbb
mov
imul
mov
jns
lods
rcll
pop
scas
loopne
add
cmp
mov
cmp
cwtl
pop
insl
out
mov
pop
mov
cmp
jnp
or
lea
add
addl
mov
add
dec
call
add
inc
js
add
js
pop
cmp
mov
addl
add
cwtl
and
imul
pop
dec
repz
arpl
scas
fisubs
scas
fwait
jns
xchg
push
das
sti
sbb
add
cmp
scas
dec
dec
or
jl
and
add
add
pop
inc
xchg
dec
sub
aas
scas
int
or
push
and
int
insb
in
push
call
test
xchg
dec
pushl
sti
lret
icebp
pop
addr16
sub
sti
xor
mov
ljmp
roll
call
mov
add
xor
mov
loopne
cld
scas
sahf
cmpsl
jmp
adc
mov
ret
aam
adc
int
aaa
jb
insb
inc
jecxz
dec
iret
cld
stos
jmp
fsubrs
cld
test
out
fsub
adc
int
std
pop
inc
call
movsl
lret
jnp
cmpsl
mov
shl
iret
pop
mov
test
dec
mov
sub
insl
mov
insl
mov
mov
add
jmp
bound
mov
xor
jmp
pop
add
jb
mov
call
mov
shlb
dec
int
filds
add
inc
int
mov
iret
mov
fnsave
and
add
add
adc
repz
call
scas
in
or
add
push
sti
cwtl
and
es
loop
lods
test
insl
jae
and
mov
std
and
adc
imul
mov
sub
dec
stos
jg
clc
outsb
sahf
filds
push
divl
inc
and
fwait
dec
ljmp
mov
sub
lock
movsb
and
fwait
and
lods
and
clc
push
sti
push
pop
or
filds
mov
je
jmp
into
out
dec
cmp
add
add
dec
jns
add
popa
decb
adc
outsl
cmp
push
sbb
out
add
sub
cli
fcompp
mov
push
dec
mov
repnz
and
out
jno
xchg
mov
inc
mov
mov
lea
lods
or
mov
fildl
scas
incl
imul
add
lcall
jb
mov
jp
mov
mov
cmpsl
adc
push
outsl
add
add
adc
rolb
scas
fisttpl
xchg
sub
test
jecxz
xor
lods
in
push
lds
xor
popf
sub
lods
addr16
add
fstps
xor
imul
in
mov
add
cs
mov
sub
sub
stos
bound
add
push
aaa
sarl
xor
scas
xorb
jg
das
xchg
jae
dec
pop
mov
std
inc
scas
pop
call
inc
mov
sbb
sub
adc
mov
add
call
mov
bound
mov
addr16
inc
call
movb
out
call
add
fisubrs
icebp
out
mov
jmp
and
dec
jmp
xor
jmp
pop
mov
pop
add
jmp
imulb
push
inc
int
jmp
fidivs
cmc
call
add
add
dec
sub
add
test
bound
mov
imul
and
call
adc
push
inc
loop
and
add
addl
sbb
divb
roll
je
lds
addb
bound
insb
fs
pushl
aas
daa
call
add
imul
pop
cwtl
and
dec
cwtl
and
dec
jns
adc
orl
out
leave
jmp
sbb
pop
xchg
rsm
add
lds
call
xor
cmpsl
lea
ds
jg
sub
add
in
mov
add
in
dec
xchg
lock
aam
jmp
adc
mov
xor
call
add
mov
jle
lret
cmp
jle
sub
add
jb
xor
sub
jmp
fdivrl
jl
cmp
outsb
into
xchg
mov
scas
adc
scas
addr16
push
lret
mov
scas
cmp
lods
scas
test
imul
add
loop
mov
pop
fs
ror
sub
mov
addr16
pop
push
mov
sbb
je
add
and
jae
lods
cmpsb
push
sub
int
xor
call
jge
push
or
push
add
pop
out
inc
mov
mov
roll
jb
aas
pushf
insb
lods
xchg
repnz
lock
push
ret
out
sar
jmp
dec
popf
xchg
xor
into
cmp
xchg
pusha
jg
mov
call
cs
sub
jno
outsb
int
out
icebp
subl
in
clc
aas
jmp
mov
push
cmp
push
bound
sbb
lods
bound
and
cli
stos
jnp
stc
xchg
or
and
test
arpl
add
ficomps
ret
insb
stos
inc
popa
cmp
pop
jg
xchg
imul
fistpl
pop
test
inc
pop
add
insl
and
ljmp
gs
mov
jae
call
add
xchg
lock
divl
inc
and
sub
adc
lret
push
mov
adc
xchg
inc
sti
push
scas
lods
add
jmp
inc
dec
arpl
call
mov
stos
inc
add
push
mov
add
or
and
mov
pop
and
test
mov
out
or
loop
stos
jg
cmpb
push
push
clc
or
pushf
incl
scas
sarl
scas
push
jnp
scas
notrack
ret
inc
fadd
ds
sti
ret
inc
scas
sub
pop
jg
cld
mov
add
addr16
into
in
sub
xlat
rolb
loopne
adc
mov
add
cmp
mov
jne
shrb
sbb
and
ja
mov
lea
inc
ds
add
popf
or
das
shl
sub
iret
in
xor
fsubrl
mov
out
mov
push
insb
pop
inc
dec
fbld
add
popf
popf
stos
cli
out
call
push
xor
sarb
mov
stos
pushf
addr16
bound
lret
in
loope
mov
jle
pop
das
xchg
and
jp
popf
call
mov
or
inc
lods
test
fadds
xor
lods
loop
xor
inc
aam
jb
dec
jne
fimuls
add
cli
push
and
aas
jl
lods
xchg
je
stos
addr16
aas
sub
push
mov
cmp
add
xor
enter
xchg
arpl
test
add
jecxz
test
sbb
bound
add
cmp
je
jne
inc
add
loop
or
movsl
or
sahf
mov
ret
dec
mov
fimull
mov
cmp
imul
dec
lea
dec
cli
push
push
push
push
lea
cmp
add
push
push
mov
decl
scas
inc
sub
xlat
pushf
mov
ret
lds
mov
dec
or
push
cmpsl
jne
sub
sti
out
mov
call
rorb
scas
test
sub
mov
push
adc
push
xor
jg
cltd
mov
sbb
pop
add
adc
cmp
add
pop
verw
xchg
mov
mov
sti
ret
and
jmp
jb
adc
data16
lods
addr16
ret
sbb
dec
aas
in
xor
in
sub
jb
add
mov
jo
mov
and
scas
xchg
add
jmp
inc
jmp
mov
pusha
call
inc
add
push
adcl
loope
add
cs
cmpsl
jmp
shll
mov
xor
jne
repnz
int
pop
cmpb
add
cmc
in
xchg
fnsave
mov
rcr
insb
addr16
push
in
cltd
xchg
mov
add
xor
js
addb
inc
das
xchg
sub
inc
jo
stos
orb
inc
push
push
ss
jmp
sbb
jmp
lods
addr16
xchg
push
add
push
aaa
adc
lods
in
inc
lds
add
jg
incl
mov
add
jle
push
push
mov
jae
inc
mov
out
inc
and
lock
mov
push
cli
mov
dec
inc
cmpsl
xchg
xchg
imul
imul
add
adc
sbb
imul
add
in
inc
jo
fs
icebp
in
inc
adc
pushf
idiv
rcll
mov
add
inc
or
insl
addl
add
pop
and
fildl
xchg
jl
jp
mov
push
pushl
clc
daa
mov
dec
clc
bnd
jle
mov
mov
lock
or
andps
mov
out
mov
jl
dec
test
ljmp
mov
add
sti
add
mov
outsl
addr16
imul
sub
dec
sub
rolb
scas
addr16
sub
stc
lock
fbstp
jmp
or
jno
xchg
push
fisttpl
es
add
scas
inc
sbb
push
mov
xor
sub
jg
cmpsl
jmp
mov
xor
sub
je
mov
mov
mov
in
insb
mov
out
add
les
jle
mov
in
and
subb
jmp
int
dec
adc
addr16
lds
xor
sub
cmp
ljmp
imul
mov
je
sbb
rcrl
mov
out
cmp
testl
shrb
jmp
cmp
sub
inc
ret
out
mov
aas
jmp
adc
jp
lods
ljmp
sbb
loop
sub
and
sar
xor
dec
and
fidivs
inc
data16
push
mov
cmp
inc
pop
clc
testb
push
ret
adc
scas
and
mov
aas
add
xor
cmp
test
lcall
push
lods
imul
sahf
idiv
cmp
scas
and
dec
pop
adcl
dec
or
callw
sbb
jmp
pushf
and
add
test
xorl
decl
dec
incl
cmpsl
stc
divb
xchg
push
push
imul
shrb
dec
mov
cmp
jecxz
scas
dec
jmp
stc
xor
lea
fcoml
lret
andl
lcall
inc
and
jle
inc
mov
dec
call
sub
pop
test
push
xchg
mov
scas
mov
jmp
add
scas
fsubrl
ds
mov
or
rcrl
cmpsl
xchg
and
xchg
arpl
pop
sbb
xchg
leave
mov
push
outsb
ds
je
fiadds
out
dec
push
ja
inc
bnd
int
xchg
mov
out
push
test
rorl
addr16
inc
sub
sbb
jmp
ljmp
inc
cld
adc
mov
test
mov
add
aaa
sub
cmp
jmp
lods
leave
cmp
sub
jmp
stos
add
test
add
and
add
test
inc
out
call
push
inc
xchg
daa
cmp
pop
xchg
add
jge
mov
cwtl
or
in
xchg
and
call
add
je
inc
movsl
add
roll
loop
dec
and
loop
loop
push
test
cmpb
icebp
or
jl
xchg
jbe
xchg
mov
push
add
mov
add
lods
add
shl
add
and
int
orb
data16
enter
adc
je
add
outsl
shl
lods
mov
icebp
push
movsl
or
scas
aad
sub
mov
mov
jbe
cmpsl
leave
ret
push
push
xchg
adc
xchg
dec
lods
xor
scas
adc
cmp
jmp
and
add
xchg
or
cmp
repz
insb
hlt
push
xchg
mov
or
cmp
jle
inc
pushl
push
das
add
lods
cmp
inc
cmpb
xor
xchg
dec
lods
xor
notb
dec
popf
mov
sub
xchg
push
mov
sub
cmpsb
in
orb
and
add
xor
fisubs
xor
sub
ss
push
movsb
clc
addr16
push
ret
pop
test
push
cli
xchg
outsb
mov
int
push
push
push
fsts
out
addr16
xchg
xchg
out
mov
js
ljmp
scas
addr16
add
daa
cmp
add
mov
or
add
inc
je
add
inc
jmp
jg
cmp
cltd
cmp
and
lret
rcll
adc
insb
imul
test
sahf
lahf
adc
mov
inc
jmp
mov
dec
in
xor
ja
lods
sahf
push
push
sahf
mov
test
push
loop
jb
outsb
arpl
adc
cli
out
inc
push
pop
clc
insb
scas
add
fcmovbe
push
mov
nop
or
sbb
adc
xchg
notl
in
sub
xchg
dec
sbb
mov
addl
ret
out
dec
push
scas
xor
mov
adc
test
inc
dec
jp
inc
pop
add
jo
aad
sub
push
add
testw
adc
sbb
add
fs
jecxz
fildll
push
popf
scas
and
scas
cmp
int
or
jl
pop
movsb
sti
add
and
inc
and
ret
les
push
mov
ljmp
loopne
scas
int
and
push
dec
xchg
inc
push
push
xor
sti
decb
mov
roll
call
and
cmc
icebp
into
cli
ficoml
ss
daa
push
xlat
jl
fwait
dec
sub
sub
ficoml
mov
mov
cmp
dec
test
stos
addr16
inc
xor
xor
out
dec
cmpb
xor
insl
jl
xor
xchg
cmpsl
jo
xchg
pop
sub
add
mov
jl
adc
jp
cmpsl
jp
adc
repz
in
and
lret
push
stos
in
mov
cmp
cmp
test
jmp
clc
xor
call
clc
sub
call
inc
nop
and
add
daa
in
jmp
or
add
pop
add
add
call
imul
add
inc
call
iret
dec
add
xor
jg
mov
jg
in
and
cmp
js
das
pop
or
add
gs
mov
jge
mov
and
add
sub
out
inc
lds
mov
add
mov
rcrl
push
imul
stos
inc
add
mov
and
inc
aas
and
jg,pt
push
imul
ret
lcall
jge,pt
adc
divl
push
scas
push
pop
jge
ret
sub
pop
add
mov
adcb
pop
jp
jnp
subb
mov
mov
or
xor
add
stos
pop
cli
je
jno
cmp
xchg
dec
cmp
inc
je
jno
sbb
add
add
das
test
sti
mov
xor
add
jns
lret
xor
shrl
stos
incl
imul
incl
in
mov
add
add
inc
mov
test
pop
movsl
sti
mov
inc
js
add
mov
push
xor
loopne
push
into
add
scas
ret
cmp
xchg
xor
xor
mov
inc
and
aaa
insb
cld
add
xor
dec
inc
repz
jae
das
mov
loopne
mov
hlt
and
loopne
jl
jbe
clc
xor
loopne
fmul
imul
insl
fsubp
jp
imul
sub
faddl
mov
sarl
pop
jo
mov
xor
ja
arpl
push
jb
lret
pop
and
outsl
mov
bnd
arpl
lods
in
cwtl
mov
cwtl
add
xor
js
lods
jmp
xchg
jae
add
and
in
push
movsl
push
xchg
lods
int
andl
fadds
add
sti
out
daa
or
addr16
add
mov
dec
popa
jmp
xchg
and
stc
and
call
mov
xchg
xchg
ret
test
mov
imul
test
mov
xchg
mov
fnstenv
stos
add
fistpl
push
inc
push
adc
incl
xor
jmp
dec
das
push
cltd
xor
adc
addr16
jae
cmpsl
jnp
push
and
cmp
idivb
outsb
divl
roll
popf
dec
incl
add
push
ljmp
rclb
add
mov
test
cli
xor
test
pop
push
sub
ret
push
mov
jmp
lock
movb
or
fsubl
or
call
add
daa
je
scas
lds
clc
lods
cli
add
or
lea
or
je
lock
adc
inc
add
daa
inc
or
or
lret
int3
je
iret
popf
jb
push
lea
mov
mov
dec
add
ret
push
in
sub
hlt
mov
xor
add
push
or
mov
rcr
rolb
mov
mov
inc
mov
cmp
xor
mov
cwtl
fs
rcrl
aam
cwtl
iret
add
in
sub
pusha
dec
xchg
pop
inc
sbbl
gs
scas
addr16
cmp
call
xchg
aas
dec
add
outsb
dec
mov
outsb
das
lret
push
imul
pop
lods
sub
lea
fnsave
xchg
loope
clc
fs
mov
mov
jge
or
and
lods
mov
andb
stos
add
xchg
jmp
jno
pop
ljmp
xchg
daa
ljmp
mov
mov
jbe
sti
aam
pop
inc
jmp
mov
adc
mov
and
dec
add
lods
adc
ja
push
mov
xchg
sti
aam
pop
inc
jmp
jo
mov
stos
ljmp
aad
sti
mov
xchg
xchg
pop
push
sub
adc
ret
das
orb
stos
and
jge
push
add
je
push
cs
cmc
incl
jecxz
test
pop
test
xchg
imul
bound
and
pop
mov
xor
jl
adc
sti
nop
inc
inc
add
rclb
add
lea
sbb
lea
jecxz
pushf
fs
lcall
or
push
dec
testb
imul
adc
jb
xlat
inc
and
jp
shll
mov
call
push
jecxz
xchg
lcall
test
ss
lods
clc
arpl
lcall
pop
lret
lea
xchg
out
lods
cmpsl
mov
jmp
das
cs
and
pop
jmp
mov
pushl
jecxz
scas
inc
decl
inc
cmp
and
out
pop
jmp
jecxz
scas
inc
ljmp
jmp
inc
mov
orb
add
cld
testl
scas
cmp
sbb
scas
mov
pushf
cmp
pop
sub
push
sbb
cld
loopne
lods
dec
out
popa
popf
sub
aad
lock
jmp
pushf
mov
call
mov
faddp
jmp
add
dec
or
and
les
add
add
addr16
cmp
xor
xor
fldl
in
mov
jmp
jmp
cmp
sti
sbb
insb
add
or
hlt
mov
inc
jno
imul
push
lcall
outsl
pushf
push
bound
xor
adc
pop
cltd
xchg
ds
popf
lods
xchg
xor
jne
jmp
mov
pop
cwtl
xchg
loopne
outsl
divl
sub
inc
popa
mov
cmp
add
mov
push
add
jecxz
adc
ficoms
and
adc
dec
and
ret
cmpsb
je
xchg
fnstsw
ret
push
mov
jne
push
add
aam
fcmovne
insl
or
jb
add
inc
addb
popf
push
inc
call
cltd
into
test
and
lcall
xchg
dec
jmp
push
or
push
jno
add
and
mov
scas
inc
std
call
je
add
inc
ret
leave
ljmp
dec
loopne
add
psubq
sbb
call
sub
adc
aas
lds
scas
add
scas
inc
jmp
icebp
add
lcall
aas
ret
xchg
xor
add
call
sub
push
xchg
mov
rorb
add
outsb
lret
out
add
scas
in
sbb
mul
cmp
jne
lods
fstl
adc
mov
inc
or
xor
or
out
cmc
or
mov
jle
stos
shll
test
out
test
lock
mov
ds
jmp
test
xchg
cmp
loope
fstp
pushf
fbld
insb
cltd
add
sbb
sbb
add
mov
jp
adc
fdivrs
jnp
mov
je
jecxz
xchg
mov
jmp
xor
jg
mov
push
bound
push
jne
cmp
xchg
ds
lods
addr16
xchg
bound
aas
popa
call
sub
mov
jae
dec
movsb
add
and
insl
lods
addr16
lods
add
loopne
cmc
jl
jne
and
call
add
inc
jp
sbb
testl
sar
mov
arpl
clc
int
cmp
or
jl
in
add
fistl
jmp
ljmp
add
sub
or
imul
rcl
or
imul
shl
incl
pop
mov
out
call
mov
add
jae
inc
push
test
scas
add
push
and
push
lea
cmpsb
pslld
xchg
out
les
adc
aas
xchg
jle
scas
or
pop
inc
xchg
xlat
adc
ljmp
clc
cwtl
add
adc
ljmp
je
inc
setb
fs
xchg
sbb
xchg
insl
or
inc
jle
xchg
inc
pushl
mov
mov
addr16
call
out
sub
add
in
insb
add
scas
scas
ret
data16
stc
movsb
aas
mov
mov
add
addr16
mov
cs
repnz
ja
and
addr16
push
mov
data16
scas
fisttps
je
pop
cltd
and
fiaddl
scas
addr16
aaa
push
ljmp
addr16
dec
mov
loop
push
daa
push
add
add
xchg
out
inc
icebp
scas
sub
xchg
add
icebp
sub
push
jl
and
mov
and
mov
jo
sbb
sti
es
xchg
jecxz
rorb
out
out
add
rcrl
or
mov
push
jb
movsl
in
aad
mov
inc
cmp
fs
ja
outsb
call
shlb
inc
and
add
xchg
cli
push
aaa
pop
test
dec
repnz
pop
cli
mov
pop
je
aad
adc
insb
push
outsl
dec
out
js
decl
push
leave
ret
and
jo
or
add
int3
or
ss
stc
mov
add
sub
mov
ret
cld
pop
mov
xor
repnz
jmp
or
sahf
test
add
movsb
in
decb
addb
adc
dec
lea
mov
adc
dec
dec
fwait
into
sub
rorb
cli
xor
movsb
scas
adc
xchg
xchg
inc
or
xchg
xchg
xchg
or
inc
add
scas
test
je
and
incl
scas
mov
int
daa
adc
lcall
jp
pop
xchg
shr
bound
or
ljmp
ja
scas
adc
je
jg
dec
emms
cli
xchg
test
lods
out
hlt
sub
adc
and
pop
es
or
inc
push
add
imull
daa
pushf
in
data16
aaa
add
jnp
fwait
add
or
mov
dec
aad
sub
loope
in
stos
pushf
sbb
rcll
dec
push
test
add
aas
lods
cmp
in
mov
ljmp
cld
test
incl
push
sbb
shrb
lods
add
fs
leave
pusha
sbb
lods
addr16
je
dec
push
insb
sub
psubw
ds
add
and
add
lods
mov
and
das
imul
or
out
aad
jmp
orl
iret
pop
sbb
jg
loopne
push
aas
sub
push
sahf
push
int3
call
add
gs
clc
jae
add
mov
imull
pop
outsb
incb
jmp
lods
movsb
inc
add
lock
jmp
cmp
rclb
add
push
push
push
pop
lds
in
xchg
add
jge
dec
mov
mov
in
incl
out
mov
inc
xor
xor
and
mov
push
push
popa
jo
mov
dec
push
sbb
in
testb
adc
or
scas
add
scas
mov
pusha
add
inc
test
out
or
dec
push
mov
int3
testb
call
fmuls
inc
loopne
lret
xchg
sti
sub
clc
gs
mov
aad
jb
js
jp
scas
adc
mov
ljmp
insl
cmp
inc
fbld
dec
iret
cmp
icebp
rcr
add
addb
xor
addr16
in
sub
jecxz
pop
popf
mov
sbb
loop
addl
rcrl
fs
sbb
cmp
xor
xor
scas
outsb
cmp
adc
mov
out
pop
inc
addr16
adc
push
and
popf
repnz
out
in
in
mov
mov
jmp
jns
repz
push
xchg
repnz
cmp
gs
xchg
mov
push
aaa
stos
mov
out
jmp
mull
jmp
test
popf
lods
push
mov
push
push
jmp
gs
cmpsb
sbb
push
xor
mov
and
and
aaa
adc
jmp
xor
jp
ja
and
addr16
lea
adc
aaa
add
je
push
xchg
push
call
mov
or
sarb
jle
xchg
sub
xchg
out
xchg
xchg
add
stos
cwtl
add
xor
jns
test
jae
addl
jmp
and
lahf
ret
call
mov
and
or
jmp
jle
jmp
lea
imul
leave
aas
mov
sbb
call
lcall
test
scas
mov
xchg
mov
push
testb
loopne
xor
fwait
lods
cmpsl
ret
outsl
jne
adcb
jecxz
cld
sbb
sti
add
shl
enter
xor
lret
notl
ficompl
sub
imul
adc
mov
mov
imul
js
daa
push
jbe
hlt
cmp
add
scas
mov
or
ja
cmpb
pushl
push
jmp
mov
fs
jge
add
add
sbb
xor
sub
outsb
inc
call
sub
test
ljmp
outsb
daa
roll
mov
inc
leave
fwait
push
and
sub
loope
xor
push
call
outsl
scas
addr16
jle
call
cli
fs
out
aas
addr16
bswap
inc
add
add
test
int
cwtl
frstor
xchg
addr16
jecxz
jne
jecxz
mov
addr16
in
mov
lods
addr16
sbb
rolb
add
lods
aam
jmp
add
out
xor
sti
hlt
jne
inc
int
lcall
fs
xchg
jmp
stos
addr16
lods
test
cld
pusha
outsl
inc
jmp
insb
mov
addr16
cltd
daa
jne
mov
jmp
bound
incl
gs
jo
addb
mov
sti
out
shl
ds
push
and
add
and
fwait
add
cmp
add
aad
shlb
subl
fldl
roll
pushf
push
add
lahf
xchg
add
lea
dec
push
sti
lcall
mov
pop
test
pop
out
dec
push
testb
pop
test
scas
mov
add
scas
push
jl
dec
push
jmp
add
loope
add
push
inc
mov
pop
and
xorb
std
mov
mov
xchg
scas
add
cli
add
pop
lret
adc
xorl
xrelease
dec
loopne
xchg
ficoml
mov
mov
icebp
jmp
sar
add
mov
scas
mov
iret
imul
inc
rcll
xchg
ss
js
scas
data16
inc
in
add
cld
call
int3
and
pushf
out
loope
outsb
ret
outsb
aas
rorl
jmp
xchg
stos
xchg
repz
ficoml
call
outsl
scas
addr16
call
loopne
loopne
pushf
push
adc
xchg
imul
add
push
mov
mov
pushl
inc
sub
jmp
lods
lea
add
jnp
add
lret
push
xchg
addr16
lods
in
jns
mov
inc
or
mov
add
ficomps
mov
sub
icebp
xor
scas
mov
add
fimuls
jo
loopne
call
stos
addr16
lods
add
idiv
call
stos
addr16
insl
pushf
or
xlat
addr16
jmp
mov
xchg
xchg
dec
mov
icebp
sahf
pop
sti
call
jecxz
and
push
pop
jge
out
aas
imul
add
movb
pop
pop
push
sar
nop
inc
lock
jle
imul
xchg
push
add
sahf
imul
enter
scas
imul
addb
inc
push
dec
mov
not
xchg
add
inc
imul
add
mov
scas
incb
jne
cltd
xor
enter
test
add
icebp
push
bound
aas
call
call
xor
jge
bound
sarl
xor
ljmp
stos
add
lahf
sub
in
mov
add
mov
adc
stc
adc
adc
xchg
insb
jg
inc
push
pop
cmp
adc
addr16
mov
sub
inc
push
scas
addr16
nop
jne
push
jg
adc
mov
mov
loopne
mov
mov
mov
jmp
or
movsl
add
stos
xchg
mov
in
insl
scas
mov
outsb
aam
ds
cmp
inc
shlb
cmp
mov
mov
loop
scas
inc
jmp
lds
inc
mov
pop
scas
fisubs
stos
push
sbb
sti
stos
mov
add
push
mov
inc
arpl
jne
cmp
mov
or
sti
es
insb
call
mov
aam
jmp
test
insb
incb
sti
arpl
jmp
call
mov
mov
add
das
in
jmp
fsub
sub
xchg
arpl
outsl
pop
push
add
and
addr16
add
add
mov
push
xor
data16
mov
gs
test
add
pop
add
sbb
lea
pop
call
jmp
pop
sbb
cmp
sti
cwtl
adc
jmp
or
movsb
pop
test
add
xor
and
xor
and
ljmp
repz
sbb
sbbl
and
mov
adc
dec
adcl
outsl
or
xchg
ss
cmp
popfw
mov
and
or
andb
into
mov
sbb
mov
addl
scas
in
push
sub
and
push
push
fucomip
push
fsts
adc
jle
sbb
add
dec
xchg
dec
shll
pop
lret
adc
or
mov
xchg
dec
push
setp
scas
addr16
pop
add
push
sub
lahf
dec
in
movd
jmp
add
mov
andl
or
mov
leave
add
and
jbe
mov
les
scas
addr16
pop
xor
call
mov
loopne
sub
lcall
jmp
cld
out
jo
dec
xor
inc
add
xchg
stos
adc
dec
adc
loop
push
insb
jecxz
push
bound
push
out
aam
in
frstor
mov
push
pop
aaa
sti
ds
daa
je
aad
jae
xor
xchg
push
jns
cld
mov
sbb
data16
or
xchg
sub
fwait
and
add
out
dec
in
shlb
fwait
and
xor
push
add
sti
add
adc
popa
lods
push
pop
mov
cmpsl
or
cmp
rcr
mov
xor
insb
jb
call
mov
jl
add
fistl
testb
mov
push
imul
lea
add
xor
and
add
sbb
loop
push
je
and
adc
scas
addl
xor
sub
add
pushl
mov
cmp
call
mov
pushf
lea
in
mov
sub
add
das
add
push
adc
cltd
dec
push
sub
pop
jmp
mov
sub
pop
in
jne
lock
dec
xchg
add
scas
cs
aas
add
jp
imul
jnp
inc
addr16
mov
rcrl
pop
jge
in
call
jg
addr16
xchg
jno
xor
ror
pop
lods
loopne
and
mov
lds
sub
pusha
call
mov
pop
aad
movsb
or
pop
push
mov
or
sub
inc
leave
mov
jns
scas
addr16
rorb
sbb
mov
add
pop
xchg
sub
int3
and
addr16
add
pushf
and
lahf
gs
mov
jg
fldcw
call
adc
or
sbb
xor
aad
jnp
adc
cmp
or
les
mov
add
xchg
push
jmp
bound
pop
pusha
inc
inc
push
xchg
scas
loopne
jae
add
fildl
clc
ficoml
ljmp
mov
push
call
ja
inc
and
xor
ret
call
or
adc
inc
push
lcall
inc
push
push
lods
pop
lea
dec
call
lret
test
arpl
add
pop
pop
dec
pop
or
add
loop
and
xor
dec
lea
je
xchg
decl
xor
adc
lock
repnz
sub
sbb
hlt
add
xlat
mov
mov
xchg
jmp
sti
sub
add
imul
inc
and
imul
xor
pop
xchg
aas
je
test
and
std
pop
lea
repz
dec
cli
jae
add
inc
and
ds
sti
cmp
jne
xchg
push
out
test
adc
loop
lahf
xchg
jecxz
iret
xchg
call
mov
lods
mov
pop
mov
sbb
scas
in
pop
jae
add
scas
in
pop
jae
ljmp
lahf
sarl
outsl
jl
sbbl
jmp
adc
xchg
push
push
test
xor
outsb
int3
mov
pop
rorb
xchg
pop
in
sbb
inc
mov
jmp
imul
call
sbb
mov
cmp
imul
loope
test
addb
cld
stos
add
dec
inc
fiaddl
inc
push
je
dec
sub
jmp
cwtl
cmp
sub
lods
addr16
cld
push
incl
cmp
out
dec
add
faddl
jmp
in
clc
mov
addr16
das
lods
lea
je
dec
sub
ja
hlt
inc
lds
push
insb
clc
dec
sub
ja
pop
add
ds
mov
out
je
inc
icebp
push
and
sbb
inc
data16
pop
lods
call
mov
or
call
divl
out
test
inc
adc
lret
jae
jl
mov
jne
adc
imul
bound
testl
das
pop
adc
xchg
call
lea
daa
pop
and
cli
out
int3
call
popf
jnp
imulb
pushf
std
add
data16
lock
int3
clc
push
jnp
jnp
test
ja
and
xchg
and
enter
pop
sahf
scas
push
mov
addr16
dec
push
incl
xchg
scas
add
and
and
mov
and
es
pusha
scas
push
aam
add
test
leave
xchg
arpl
jo
clc
shll
jns
xchg
push
iret
out
stos
ljmp
sub
xor
stos
outsl
lods
add
insl
push
jo
shl
stos
jnp
xchg
pop
test
mov
add
jae
jl
addr16
lds
out
cmpsl
jmp
cmpsb
icebp
jl
add
outsl
rcrl
dec
pusha
lods
mov
jae
imul
rcrl
mov
pop
fisttpl
mov
sub
fdiv
and
hlt
jmp
iret
packuswb
es
data16
pop
cwtl
push
dec
adc
push
test
mulb
ret
jge
inc
pop
add
push
push
fs
push
call
insl
jae
add
stos
or
mov
imul
push
rcll
cmp
cmp
xchg
or
sti
aam
jno
jmp
js
mov
xor
lods
sbb
das
lods
sub
stos
mov
addl
in
iret
jo
outsb
sbb
pop
mov
pusha
push
mov
mov
in
je
adcb
inc
or
bnd
cmpsb
je
sbb
push
push
sub
notb
dec
xor
test
mov
call
xor
pop
pop
int
or
cwtl
xor
pop
add
cmp
pop
or
std
mov
movsb
dec
pop
scas
push
incl
add
pusha
jge
xor
cld
ret
xchg
inc
scas
mov
je
jne
push
and
incl
call
iret
push
pusha
test
jo
pushl
sahf
jmp
push
jecxz
scas
shrb
and
add
jp
xchg
xchg
ret
inc
jno
mov
aas
jne
shlb
imull
mov
pop
and
jp
jae
iret
cli
jmp
jge
add
push
xor
pop
pop
jo
ds
jl
xchg
jp
mov
ljmp
add
xchg
jp
jp
outsl
ds
shll
cmp
outsb
pop
pop
in
cmpsl
sti
jns
xor
in
mov
mov
out
outsl
movsb
cmp
add
adc
outsl
addr16
sahf
cmpsl
jmp
add
clc
arpl
mov
inc
ret
xor
mov
cld
cmc
jno
pop
fcomps
es
and
aaa
fcomps
push
jle
dec
adc
test
in
fsubl
out
shrl
mov
lahf
xchg
xchg
or
add
outsb
inc
jmp
outsb
push
add
stc
in
add
add
push
inc
fwait
and
xor
mov
jae
and
sub
orb
jns
mov
sub
cwtl
test
pop
das
lds
inc
adc
push
dec
cmpl
cmp
notb
addb
popf
jp
push
push
cmp
test
mov
insl
ret
inc
inc
sub
negb
sub
idiv
cltd
sbb
xor
mov
cmp
lea
gs
push
mov
push
xor
sbb
test
xchg
and
pusha
cld
test
bound
pop
rcll
pop
add
rcll
add
jns
orl
xor
out
insb
push
fistps
addr16
ud0
lds
js
xchg
add
xchg
add
pop
cmp
cli
mov
mov
aam
push
push
mov
scas
sub
ret
imul
aaa
pop
sbb
imul
adc
rolb
push
xor
adcl
insl
pop
loop
neg
lock
setne
cld
pop
jae
cmc
sbb
push
jb
insb
popf
cld
sti
idivl
jae
aam
jb
js
sti
arpl
mov
add
pop
leave
popa
jmp
xchg
jl
adcb
inc
divb
add
scas
lock
sti
enter
add
ljmp
les
adc
fwait
cmp
outsb
add
das
or
lcall
dec
add
add
jmp
iret
dec
call
outsl
inc
jo
aam
jo
insb
sti
test
rcrb
or
push
and
add
add
lods
jbe
sbb
imul
mov
test
and
dec
or
jmp
mov
decb
inc
adc
and
adc
mov
call
lea
inc
push
aad
into
xor
adc
or
inc
pop
test
add
or
add
lret
js
test
data16
iret
bound
lods
cmpsl
push
notw
mov
or
push
xchg
or
sbb
xchg
or
leave
cmc
jmp
inc
and
push
mov
push
push
xor
push
dec
lea
call
inc
and
out
je
adc
mov
cli
and
sbb
and
or
add
clc
stc
je
jne
adc
mov
push
mov
push
push
mov
or
ret
pop
pop
xor
ret
sub
sti
sub
sbb
push
out
push
enter
test
mov
cmp
ret
jns
je
lea
or
ret
popa
sub
add
cld
ds
scas
ljmp
scas
xlat
dec
add
fldenv
push
mov
cwtl
jbe
inc
xchg
add
xchg
fldt
jecxz
clc
sub
jmp
ja
inc
or
shl
scas
out
clc
insb
inc
movsb
jecxz
add
push
jmp
add
clc
rcrl
push
inc
pop
push
scas
addr16
out
int3
push
insb
mov
andl
inc
test
add
aad
push
xchg
push
pop
and
in
sbb
push
inc
mov
dec
add
cld
mov
cltd
idiv
pop
pusha
dec
pusha
shl
push
cli
fiadds
fsubl
cmp
in
or
shl
mov
gs
ds
pop
dec
sub
incl
lods
stos
test
pop
jg
daa
in
lds
call
mov
fmull
sti
incb
lahf
adc
jmp
and
push
push
add
sti
mov
outsl
dec
and
xor
jae
or
push
pop
sub
and
stos
push
mov
jmp
xchg
push
push
ror
add
pop
cld
inc
add
adc
addb
mov
cs
iret
sub
push
push
sbb
lcall
inc
push
jmp
test
scas
adc
mov
sbb
lock
lcall
lret
sub
inc
push
jg
xorb
bound
mov
adc
sub
das
adc
ret
inc
jns
repz
xchg
sbb
and
mov
mov
dec
dec
ljmp
jmp
jl
imull
pop
movsl
and
incb
mov
cmp
sub
cmp
lea
fildll
and
adc
sub
mov
jnp
jns
jecxz
pop
cli
hlt
dec
jl
cmpsb
mov
loop
sahf
cmp
fwait
pop
pop
cs
std
add
hlt
jae
fcompl
jmp
pop
adc
add
stos
adc
adc
addr16
je
std
icebp
jg
imul
stos
test
add
loop
mov
popf
mov
fwait
pop
sub
daa
sbb
shlb
loop
data16
aaa
cmp
scas
addr16
rcrb
add
es
cwtl
ljmp
mov
repz
hlt
enter
imul
cmpsl
xor
lock
mov
fiadds
loop
dec
inc
lock
mov
adc
dec
mov
pop
lods
in
mov
in
fstpl
push
pop
ds
push
enter
pushl
lods
addr16
stos
adc
xor
insl
mov
pop
add
jb
cltd
stos
jb
add
insb
lea
mov
mov
mov
notl
insb
bound
in
notw
pop
xchg
test
sbb
ljmp
add
add
orw
enter
add
pop
out
cmp
fwait
pop
xchg
imul
adc
repz
sub
cmc
xor
add
jnp
or
xchg
mov
add
dec
clc
lret
mov
add
int
or
and
pop
scas
fstps
outsl
pop
aad
xor
js
sbb
push
and
data16
inc
add
test
sbb
lock
xchg
pop
mov
test
aaa
pop
sti
jg
mov
das
add
add
jne
scas
mov
add
push
lahf
pusha
mov
and
jmp
pushf
ja
mov
adc
cli
js
inc
je
test
idivl
xchg
jl
pusha
mov
dec
mov
mov
sti
dec
push
stc
hlt
js
pop
iret
xor
into
sbb
lds
icebp
jns
adc
addr16
add
arpl
add
call
subl
in
hlt
mov
inc
cmp
insb
xchg
out
adc
xchg
mov
pop
pop
xor
les
lock
jecxz
lock
dec
aas
add
fidivl
fs
dec
push
les
pusha
add
jmp
inc
lods
or
jmp
shlb
cltd
leave
stos
sub
lods
lea
sti
call
fwait
enter
loop
add
test
xor
add
loopne
xlat
xchg
sub
js
add
dec
int
xchg
push
insb
xor
jmp
addr16
mov
in
jno
xchg
data16
and
dec
das
mov
loopne
and
mov
add
fcmovnbe
and
push
imul
and
mov
mov
iretw
fbld
or
imul
xchg
aas
or
push
imul
fimuls
inc
push
fmuls
add
loopne
push
loopne
js
mov
dec
mov
dec
push
dec
fbld
mov
and
mov
pop
inc
enter
rorl
and
filds
mov
cli
dec
mov
sti
fisubs
cld
test
call
scas
cmpl
cmp
add
cli
or
and
add
pushl
jl
clc
lods
add
dec
xor
mov
outsl
add
pop
insl
mov
jo
inc
add
mov
stc
insb
add
lock
call
adc
call
orb
call
sub
mov
add
call
jae
and
add
incl
cmpl
in
cmp
jmp
sbb
sub
cwtl
push
pop
jge
test
in
test
mov
js
and
mov
add
inc
inc
popa
add
addr16
insb
scas
addr16
pop
cmp
jl
sub
add
fmull
mov
jmp
add
sub
jbe
jecxz
xlat
mov
sub
aaa
in
repz
addr16
or
addr16
icebp
shlb
bound
fiaddl
jmp
mov
icebp
shll
lock
addr16
xor
ljmp
ficoml
jmp
lods
call
fwait
jp
mov
idiv
call
enter
lods
xchg
lea
out
std
call
mov
jmp
mov
add
lods
xchg
lea
cmp
jmp
lods
addr16
add
add
das
and
add
cmpsl
jbe
add
and
lea
call
add
lds
jne
mov
adc
das
jle
add
andl
add
into
jmp
dec
fwait
mov
fs
sbbl
push
mov
jmp
add
add
xchg
jg
mov
cmc
decl
add
xchg
lea
outsb
pop
lret
fiaddl
and
incl
scas
add
ljmp
add
pop
and
adc
in
jge
call
add
icebp
lock
out
pushl
ror
and
push
cmp
call
xor
lret
dec
pop
das
out
push
shl
pop
test
add
ljmp
cld
dec
pop
push
mov
call
jnp
jnp
scas
cli
ret
aas
add
jne
in
mov
addr16
cmp
out
pushfw
sub
sub
addr16
enter
popf
scas
addr16
imul
and
add
popf
push
pop
xor
cmpsl
add
adc
scas
addr16
test
fnsave
or
or
fcmovnu
pop
adc
nop
adc
jmp
jmp
xor
pop
fs
push
subb
add
sub
comiss
shr
cmpsl
dec
xchg
add
pop
je
pop
add
xchg
pusha
lea
lods
xchg
mov
ljmp
dec
add
test
jmp
rorb
call
pop
xchg
xchg
ja
mov
mov
je
sbbl
lods
call
push
mov
mov
add
rcll
mov
cmc
cmp
inc
movsb
jbe
xor
push
cmpl
pop
mov
pop
rorl
mov
add
sub
add
shrb
jne
jge
sub
inc
sub
push
add
add
lea
sahf
jecxz
dec
ret
inc
add
sbb
sub
inc
clc
subl
sbb
mulb
repnz
mov
lcall
sarb
sti
add
push
inc
or
aaa
add
scas
pop
enter
shlb
shlb
push
fsubl
pop
out
test
fildl
lret
clc
ljmp
loopne
out
pusha
push
sti
and
and
adc
inc
xor
adc
seta
sub
lds
je
dec
add
add
addr16
add
inc
lret
and
ret
sub
in
outsl
pusha
add
ss
mov
jo
sub
in
insb
imul
in
sub
repz
in
pop
mov
in
push
push
out
scas
repnz
pop
cmpsl
lods
call
pop
aam
stos
mov
icebp
ret
mov
insb
jmp
pusha
push
jmp
adc
dec
out
mov
addr16
and
fsubp
jg
jmpw
xor
repz
pop
xchg
add
popa
loopne
test
lods
lea
call
pop
out
mov
lea
mov
pushf
dec
xchg
inc
bnd
add
mov
call
pushf
int3
jg
loope
subl
jmp
jmp
nop
ja
faddl
inc
loope
gs
jo
mov
adc
ret
mov
push
ja
mov
cmp
xchg
sub
sub
arpl
iret
ret
add
mov
test
push
adc
mov
inc
test
cli
fcomi
je
fildl
outsb
outsb
jb
sub
xchg
push
add
scas
mov
loop
cmp
lea
adc
push
pop
push
push
out
mov
je
shll
sar
arpl
test
shlb
jp
adc
movl
iret
scas
inc
sub
addr16
xor
xor
push
cmp
loope
adc
repnz
scas
pop
add
jp
jb
mov
clc
cs
cmpl
lahf
scas
sbb
mov
mov
roll
shlb
sti
and
pop
aam
rorl
pop
push
pop
or
sub
add
inc
shll
mov
and
add
addr16
push
es
jmp
sub
int
sub
out
mov
and
jle
mov
jle
into
jge
shl
fs
out
add
outsb
scas
mov
mov
pop
loop
xchg
gs
scas
addr16
jne
addr16
add
in
and
pop
ljmp
push
fs
faddl
dec
loope
add
pop
outsb
inc
inc
mov
subl
addr16
and
je
jg
adc
fdivl
loopne
jmp
dec
jae
sbb
outsb
aaa
test
insl
push
addr16
xor
data16
out
cli
gs
test
add
push
je
pop
dec
data16
in
iret
pop
xchg
subl
addr16
lea
sarl
out
push
dec
or
adc
cli
sub
and
scas
imul
stc
pusha
test
push
add
adc
dec
bnd
call
mov
lea
fs
jne
ret
or
idiv
dec
callw
arpl
mov
mov
ret
in
fiaddl
add
test
push
pop
std
inc
pop
ret
push
mov
push
mov
mov
sar
scas
int
push
jge
dec
push
jg
inc
jne
pop
sarl
ror
cmp
mov
aad
rorl
mov
push
test
fcompl
xchg
pop
push
xorl
jne
cmp
mov
inc
enter
cmp
popf
jbe
and
pop
sbb
sar
pop
add
push
xchg
cld
sti
dec
pusha
jg
aam
gs
mov
enter
mov
sar
loopew
scas
addr16
inc
push
xor
cmp
int
mov
mov
sbb
add
sahf
xchg
scas
addr16
rolb
pop
ljmp
cmc
cmc
push
jge
subb
aam
mov
aad
stc
pop
push
fcoml
xor
test
mov
mov
mov
mov
fidivl
dec
fld
add
cmp
xchg
dec
cli
imul
je
add
repz
xchg
jae
cli
into
sub
jae
iret
pop
sub
addr16
pop
movsl
sbb
mov
xchg
lret
orb
loop
xchg
jb
dec
pop
inc
sub
add
in
mov
ficomps
call
sub
cld
inc
push
dec
shl
ljmp
repnz
add
loop
popf
mov
loopne
add
in
je
sbb
fstpl
testl
xor
push
aas
aaa
jmp
lea
pushf
nop
call
pop
shlb
dec
daa
sub
xchg
adc
push
dec
xchg
call
xor
cmp
mov
dec
fisubl
push
pop
bound
pop
bound
inc
push
push
push
inc
pop
push
and
js
call
scas
xor
in
rcr
sub
ljmp
xchg
test
push
incb
or
decl
and
pop
pop
jg
mov
inc
jne
fidivrs
out
dec
pop
or
popf
and
and
pop
adc
inc
sar
sub
repnz
push
shlb
jbe
push
call
rolb
inc
mov
push
xor
pop
inc
icebp
sub
pop
add
add
icebp
inc
je
addr16
jle
out
cmovnp
in
xor
sahf
je
cli
gs
add
test
in
add
pop
jmp
mov
push
adc
mov
jg
rcrb
sbb
mov
in
jns
xchg
lock
jbe
add
cmpsl
add
jp,pn
out
pop
xor
out
and
mov
jl
pop
outsb
inc
shlb
cmp
cmp
add
cmp
int3
imul
repz
mov
out
jmp
mulb
dec
add
xchg
add
inc
jmp
mov
fidivs
inc
aaa
sti
push
divb
cli
insb
flds
das
jbe
shll
or
stos
pop
enter
mov
arpl
and
mov
out
xchg
pop
bound
lock
sub
cli
loopne
sub
mov
add
pop
inc
add
dec
mov
and
add
imul
push
cmp
push
xorb
mov
shlb
stc
lds
enter
pop
cmp
adc
lds
push
je
add
movb
addb
cli
lea
std
push
dec
leave
sahf
adc
arpl
push
sub
out
arpl
add
jb
pop
mov
add
test
mov
stc
cmp
mov
inc
jg
and
add
xchg
ljmp
movsl
push
and
add
jns,pn
lock
or
jmp
jl
jecxz
mov
stc
fucomp
jmp
add
jle
fnsave
jmp
dec
sub
xlat
mov
fnstsw
add
xchg
std
dec
sbb
lock
roll
mov
enter
pop
dec
test
aam
push
jl
inc
adc
enter
sub
mov
pop
outsb
dec
xor
pop
ror
jnp
sbb
test
shrl
xlat
or
je
insl
pop
cmp
js
and
add
scas
addr16
aaa
inc
nop
xor
jmp
iret
cwtl
loop
js
popf
cmp
aas
push
mov
jl
out
loopne
data16
stos
pop
call
cmpsb
data16
inc
stos
cmp
pop
dec
pop
fistpl
fucomip
jle
fisttps
out
push
sbb
or
xor
movsl
nop
ja
jmp
sarb
lods
test
add
or
and
in
pop
jg
push
sahf
inc
int
push
add
jg
ds
mov
mov
adc
push
mov
sbb
or
aaa
lods
std
imul
or
and
inc
sub
dec
ds
add
cmpsb
or
lret
push
mov
lret
orb
add
add
pop
pop
aad
dec
mov
add
adc
or
mov
shlb
dec
mov
or
jbe
fsubl
cmp
movsb
add
cmp
std
push
adc
xor
fcmovnbe
cmp
popf
popf
jl
lods
cmp
mov
mov
ss
fidivl
or
addr16
add
incb
mov
data16
ss
fucomi
test
fcomi
push
jge
inc
adc
sub
jl
pop
push
xorl
pop
test
cmc
mov
jo
jle
fmul
add
cmp
out
dec
mov
jae
aas
ds
pusha
sar
test
adc
inc
test
add
or
ret
stos
pop
or
add
addr16
sub
jle
shll
xlat
jnp
or
test
sbb
stos
jp
mov
cmp
dec
mov
out
lock
test
addr16
sti
mov
xchg
fwait
sbb
add
and
sub
sub
add
cmpsl
je
xor
int
sub
or
inc
xor
and
imul
push
outsb
maxps
lcall
outsb
into
cli
das
add
insl
dec
sub
pop
stos
mov
movsb
out
in
cli
push
into
out
jecxz
dec
mov
call
jae
sbb
in
fidivrs
add
pop
jg
lods
addr16
mov
imul
xchg
nop
jne
das
jno
outsb
idivl
xor
bound
in
shll
rorl
rcl
xor
jne
cmp
out
or
cmp
insb
pusha
push
callw
jae
pushf
popa
push
pand
add
fs
push
popf
cli
incl
je
push
xorb
push
adc
cmp
jbe
testl
das
call
dec
and
jecxz
orl
or
mov
lahf
fs
std
cmc
lcall
mov
pop
out
sub
scas
inc
stos
and
inc
pop
xchg
mov
inc
add
movsl
and
mov
pop
pop
xchg
push
and
hlt
enter
sub
inc
lret
and
pop
ljmp
ficoml
mov
add
mov
or
jge
cli
scas
sar
stos
std
sti
cld
sbb
inc
jae
scas
rorb
cmpsb
mov
das
jp
je
dec
inc
out
pop
or
push
std
cmp
cmpsb
push
add
ds
or
push
jmp
sti
and
sub
jecxz
test
into
mov
cld
fs
mov
or
pushf
mov
xchg
xchg
mov
sub
scas
loop
call
in
loopne
mov
lcall
loope
test
fsubs
or
mov
ljmp
out
loop
mov
xor
scas
loopne
mov
mov
jp
inc
cwtl
add
mov
xchg
inc
jbe
mov
test
out
and
xor
jg
movsb
push
push
aas
loopne
and
out
int
xor
mov
jle
adc
and
and
cmp
int
imul
add
imul
add
xor
fsts
data16
mov
push
je
push
xchg
ret
dec
aaa
lods
push
jns
out
xchg
inc
add
jne
lds
fnstcw
push
pop
jnp
inc
imul
ja
call
jnp
movsb
pop
test
mov
mov
pop
ss
stos
pusha
cmp
adc
sub
test
xor
push
pop
push
mov
and
imul
push
pop
or
add
mov
rcrb
mov
adc
xchg
jne
add
xchg
jmp
add
mov
roll
add
loope
xlat
ret
int
in
pop
ret
dec
outsl
mov
add
aam
mov
mov
and
sub
cmp
push
je
inc
inc
movsl
repz
les
es
push
cmp
inc
mov
adc
out
add
mov
xchg
cmpsb
pop
hlt
mov
lea
mov
cmp
xlat
int3
ja
mov
or
in
movsb
add
data16
inc
in
xchg
fadd
mov
data16
cmpsb
cmp
and
xchg
sahf
lea
fisttpll
adc
out
pop
insl
jo
addr16
or
mov
mov
dec
mov
mov
jecxz
cmp
repz
or
scas
addr16
incb
insl
push
faddl
scas
inc
fs
add
inc
add
adc
adc
shll
bound
faddl
xlat
daa
jae
icebp
lods
add
inc
mov
jmp
and
cmc
das
mov
loope
push
inc
sub
das
sub
fisubrl
bound
push
inc
jb
test
xor
jae
fs
call
cli
ljmp
je
adc
sub
scas
mov
push
xchg
mov
add
push
unpcklps
mov
add
mov
call
jne
jecxz
xor
test
ret
pop
test
ret
enter
xor
aas
test
stc
add
inc
movsb
loope
add
movsb
cli
cmpb
jne
cmc
sbb
adc
fsts
sub
stc
or
das
pop
jl
sbb
mov
jns
dec
dec
lret
sbb
fisubrl
inc
inc
pop
icebp
jl
add
push
fsubs
mov
mov
jns
lock
mov
and
sub
push
stc
hlt
push
add
ss
mov
shlb
mov
dec
subb
das
out
xchg
cmp
xchg
pop
push
add
sub
mov
sbb
dec
and
loopne
js
mov
lahf
inc
cmp
cmp
roll
cld
push
jmp
pxor
aas
mov
pop
xchg
rolb
faddp
fcmovne
test
test
add
mov
adc
pop
test
lcall
stos
fwait
mov
data16
xor
cmp
lcall
sub
mov
arpl
xchg
leave
hlt
iret
adc
lock
lea
xor
pop
add
adc
sbb
xor
hlt
add
pop
xchg
add
add
icebp
iret
add
and
cli
mov
in
cli
mov
mov
test
jmp
pop
cli
jmp
or
add
pop
and
in
push
mov
push
ret
ss
cmp
cmp
pop
out
out
fld
cli
jb
in
icebp
xor
les
jb
insl
xchg
lock
and
add
insb
call
push
psubq
pop
clc
adc
imul
or
jmp
dec
lcall
or
repnz
test
cli
and
push
mov
xlat
call
cmp
push
mov
lret
sub
hlt
outsb
add
adc
adc
imul
add
mov
add
mov
icebp
cltd
xchg
ds
adc
push
in
inc
and
mov
and
into
jg
mov
inc
or
div
jns
movsb
flds
es
and
insb
cmp
and
es
sti
jo
add
sarl
fmull
mov
mov
mov
scas
cmp
and
aas
mov
lcall
mov
popf
out
enter
adc
jp
scas
into
incb
jnp
int
sub
iret
add
mov
jmpw
xor
call
adc
or
add
hlt
cld
xor
mov
sub
lcall
xchg
test
mov
les
mov
sub
xor
fidivl
mov
aam
sub
sbb
pop
ror
outsl
push
mov
sub
aad
outsb
test
pushf
mov
jne
sub
or
add
jp
fldcw
mov
dec
mov
outsb
test
fdivrl
sub
imul
inc
sub
or
daa
push
sti
ss
inc
add
pushf
mov
push
icebp
stos
outsb
test
jge
cli
stos
ja
push
lds
out
push
pop
icebp
lods
in
push
mov
inc
in
add
cli
add
aas
sarl
or
rorb
ljmp
dec
test
inc
fstl
sbb
jle
pop
into
incb
mov
pop
jmp
push
out
and
lahf
dec
incl
insb
pop
and
call
push
and
notb
jmp
inc
ds
mov
addl
cli
enter
leave
and
pop
ja
decl
sub
imul
stc
or
mov
push
pop
cs
lock
add
into
rcll
xor
ja
mov
or
shll
scas
into
out
dec
mov
test
repz
scas
sub
cwtl
push
test
and
push
add
push
subl
iret
call
leave
scas
into
add
push
inc
je
pop
inc
add
shrb
inc
or
sub
lret
loop
out
scas
popf
adc
out
loop
out
cmp
cmc
cmp
mov
scas
addr16
mov
test
jle
jae
xchg
out
in
sub
xlat
clc
inc
xor
ljmp
add
add
mov
add
mov
outsb
add
pop
cmp
scas
addr16
xor
test
enter
pop
cmp
das
add
mov
jae
mov
ret
mov
push
sub
in
enter
adc
iret
iret
inc
nop
ret
pop
xchg
mov
sub
out
mov
mov
call
mov
xchg
adc
scas
mov
cmp
jns
jmp
mov
xchg
mov
cmp
lods
out
add
add
jp
and
inc
arpl
add
scas
jne
add
lods
add
push
jmp
xchg
call
cmp
xchg
dec
mov
mov
push
mov
cmp
and
and
or
and
sbb
inc
stos
imul
mov
push
pop
adc
imul
add
lea
dec
cmp
pop
test
ljmp
loop
xor
jnp
shll
movsb
test
sbb
jle
mov
gs
f2xm1
add
xor
adc
lcall
es
aam
jns
mov
into
dec
sub
pop
cmp
cmp
sub
xchg
incl
nop
dec
shlb
es
and
xor
and
mov
cltd
and
adc
xchg
addr16
js
iret
aas
cmpsl
xor
mov
xchg
icebp
sub
and
or
pop
aad
sub
adc
or
scas
jecxz
mov
iret
into
mov
pusha
scas
or
mov
mov
mov
jmp
sbb
jmpw
insl
cmp
fstps
call
iret
int3
pop
push
push
adcl
sub
add
jo
loopne
mov
inc
lds
je
insb
mov
add
xchg
subl
callw
dec
add
ret
scas
xor
imul
inc
jmp
stos
lds
jmp
call
sub
mov
loop
sub
cmpsl
jae
pop
loope
scas
movsb
mov
mov
mulb
scas
or
mov
lock
pop
inc
push
xchg
cmc
xor
add
test
mov
aam
add
cmp
mov
pop
in
push
or
das
xor
pop
enter
and
shlb
adc
mov
scas
pop
pop
push
xchg
xor
xchg
std
or
xchg
call
out
scas
into
jae
movsb
fsubs
lcall
or
dec
loop
jns
jl
xchg
cli
fwait
into
gs
shll
mov
incl
fwait
push
jge
imul
or
pushf
stos
jmp
jg
or
mov
enter
outsl
into
pushf
add
lret
mov
add
test
or
into
jns
and
sbb
stc
outsb
xor
mov
jmp
adc
decb
fwait
pusha
mov
mov
inc
ret
insl
mov
ret
cmp
call
rclb
mov
sub
mov
pop
fbld
sub
fdivrs
xor
ret
adc
shll
mov
daa
aad
jnp
mov
ret
shlb
mov
add
out
cmc
add
mov
xor
out
add
mov
add
mov
call
mov
jae
stc
hlt
xor
inc
jmp
imul
sti
xchg
add
movl
add
or
push
and
adc
aam
pop
inc
jmp
push
jns
roll
sti
into
je
test
push
imul
ljmp
call
into
mov
inc
enter
aaa
mov
add
idiv
adc
add
mov
js
rorb
lea
xchg
or
movsb
dec
push
mov
push
rolb
mov
add
push
jmp
sub
sub
dec
inc
and
inc
and
lcall
jb
repnz
push
cmp
mov
jne
in
pop
mov
out
add
imul
add
imul
and
mov
adc
add
sub
mov
adc
dec
inc
call
xor
pop
cli
inc
lret
and
mov
and
scas
sbb
add
cs
cmp
lcall
ljmp
lcall
cmp
lahf
scas
mov
loopne
sbb
cli
enter
add
fwait
sarl
jmp
jns
mov
mov
cmc
adc
xorl
add
sbb
shrl
aam
pop
sarl
sub
shrl
movsl
inc
test
mov
jp
js
aam
pop
andl
xor
stc
jg
adc
sub
inc
js
ret
add
cmp
out
push
scas
addr16
shrb
clc
mov
push
cmpsb
movsb
jnp
sahf
xchg
loop
jno
popf
call
lret
sbb
in
add
lods
out
fs
cli
pop
in
sbbl
jmp
inc
mov
jmp
mov
mov
lea
add
inc
jmp
jmp
dec
lcall
dec
out
mov
inc
jmp
lret
mov
add
jno
adc
sbb
je
dec
test
adc
xchg
popl
mov
cmp
stc
push
push
mov
testb
xlat
add
add
divw
push
sub
mov
adc
data16
push
iret
or
push
or
test
or
negl
adc
cmp
adc
pop
and
cwtl
jmp
stos
iret
jo
sbb
shlb
dec
mov
scas
dec
ljmp
scas
or
ljmp
call
popl
lods
sub
scas
rolb
add
cmp
and
dec
xchg
inc
lret
lcall
adcb
sarl
add
mov
xchg
and
adc
jae
aas
mov
mov
push
adc
je
inc
xchg
and
or
negb
sarb
mov
adc
xlat
scas
mov
loope
mov
rorl
fildll
xor
and
out
cmp
aad
mov
cmp
lods
outsl
lahf
in
fidivs
and
aaa
int
lahf
fsubrl
mov
cmpsl
jmp
add
jno
movl
and
add
pusha
insb
xor
addr16
test
add
imul
loope
sti
cmpl
addl
jmp
add
lods
lods
jno
iret
cmp
ds
pop
in
cmc
in
scas
jge
mov
dec
inc
ss
mov
mov
jb
stos
mov
sbb
pop
mov
mov
shl
mov
mov
ret
outsl
adc
jg
aaa
and
mov
inc
stc
xor
ds
in
loopne
adc
arpl
shll
xchg
arpl
sti
hlt
les
add
mov
popf
movsl
mov
inc
cmpsb
cli
push
sti
jle
inc
push
ljmp
dec
shlb
pushf
scas
sub
outsb
adc
cli
dec
xor
loop
call
sbb
test
arpl
add
addb
push
adc
and
add
out
add
add
mov
add
lds
add
push
pop
scas
shrb
add
and
adc
add
pop
xchg
mov
lods
inc
add
or
std
lock
enter
sbb
sar
pop
mov
aas
cmp
xchg
add
mov
shrl
jge
iret
xchg
and
scas
mov
dec
jns
inc
inc
add
mov
leave
out
jge
mov
or
shll
sub
push
nop
dec
mull
mov
xor
jb
pop
ret
mov
and
shlb
sbb
gs
sbb
push
bound
iret
sbb
jns
lods
loopne
in
xor
loop
push
pop
push
add
or
sub
loopne
sub
nop
jo
call
jmp
xor
aam
xor
mov
mov
sbbl
in
cld
outsl
push
mov
add
adc
aad
dec
int
fistpll
add
pop
int
out
out
fwait
addr16
sub
call
scas
cmpsb
mov
lret
lods
mov
or
stos
jmp
or
stos
xchg
adc
mov
jae
filds
jg
mov
xchg
and
ss
cli
add
mov
push
xor
test
pop
adc
shrl
shr
mov
ret
adc
shl
js
xchg
mov
dec
cmpsb
loope
je
cmpsl
xor
xlat
xor
ret
mov
fildl
scas
ficoml
mov
fiaddl
sub
add
adc
aas
adc
outsl
and
mov
test
push
cmp
push
push
std
lahf
add
push
sbb
adc
ret
sarl
sub
in
lds
out
cmc
add
sub
adc
fsubrl
xchg
test
les
out
ss
jnp
sti
xlat
jl
add
jg
mov
popa
xor
fadds
scas
sarb
inc
jle
scas
mov
ljmp
and
sub
add
aas
scas
insb
inc
mov
in
mov
jmp
scas
mov
fimull
movsb
fbld
out
fildll
lods
fbstp
fsubr
mov
mov
loop
out
mov
out
jg
fidivl
arpl
jo
enter
inc
mov
test
fucom
test
push
sub
int
xchg
cli
inc
mov
add
or
scas
addr16
sbb
loope
mov
stos
mov
lahf
jmp
cmp
sub
xchg
cld
call
aaa
loope
int
test
or
scas
pop
repz
lcall
adc
xor
out
sbbl
out
jae
lahf
mov
jmp
xlat
fidivrl
lock
push
mov
outsb
insb
out
arpl
jmp
lcall
push
lahf
rolb
fiaddl
push
and
jp
add
mov
imul
push
insb
ret
cmp
or
es
les
sub
or
sub
cmp
repnz
and
xchg
ret
add
hlt
inc
and
stos
xchg
xor
insb
mov
aad
xor
hlt
scas
add
in
or
mov
enter
mov
addb
sar
push
inc
cwtl
jbe
scas
push
add
ja
repz
adc
xlat
sbb
test
aas
scas
sbb
lods
scas
adc
and
cmp
fistpl
decl
movsb
stc
cmp
ret
mov
outsl
nop
mov
mov
int3
fiaddl
sub
add
push
pop
add
push
xchg
loope
push
add
mov
xor
add
jae
hlt
xchg
push
fstpt
pop
hlt
aas
sub
cmpsl
fldcw
xor
xor
add
push
inc
mov
mov
mov
pop
sbb
sbb
sub
movsl
inc
push
sub
cmp
add
jge
shl
cmpsb
sub
push
mov
in
sub
xor
jae
xlat
cld
xchg
adc
fstpl
std
mov
flds
xor
add
jg
out
aaa
test
psubsw
lock
nop
lea
mov
adc
andl
sbb
push
jb
mov
repnz
push
in
leave
push
inc
push
add
daa
test
push
jb
and
in
test
add
or
push
decb
push
adc
in
inc
mov
test
test
out
add
push
sub
add
call
inc
cld
aad
add
ret
push
cmc
adc
adc
js
or
repnz
xor
jne
jle
addr16
stc
hlt
arpl
pop
add
call
divl
leave
xchg
push
adc
jnp
push
fnstsw
add
lahf
movl
addr16
pusha
mov
and
loopne
imul
add
cwtl
pop
shlb
cli
and
loop
out
nop
or
add
rcrb
scas
nop
lods
pop
mov
ljmp
xor
adc
shrb
push
cwtl
ffreep
jl
call
idiv
andb
pushf
sar
xchg
pop
cltd
pop
xor
ret
gs
add
scas
mov
sbb
out
jno
mov
test
cwtl
call
nop
decb
cmp
add
sub
jl
arpl
loopne
sub
pop
cmp
mov
jnp
movsb
aas
outsb
cmp
filds
mov
push
jo
xor
add
mov
dec
adc
xchg
add
push
jmp
clc
and
nop
stos
in
fsubrs
add
jns
hlt
jp
divl
jae
pushf
mov
out
add
aas
stos
push
or
sbb
call
out
into
mov
scas
daa
lods
addr16
lea
fucomip
lods
addr16
add
cli
jle
xchg
xchg
sub
call
cli
rorl
pop
push
sahf
pushf
gs
aaa
pusha
add
jae
ss
mov
test
pop
insl
xchg
sub
mov
jmp
inc
fs
mov
dec
jnp
mov
lea
aam
adc
xchg
cmp
mov
rorb
dec
sahf
incl
xchg
mov
cmp
pop
jbe
sbb
mull
push
add
xchg
arpl
pop
fisttpl
inc
xchg
mov
add
call
lret
sub
int
test
test
jge
sti
mov
dec
sti
ret
push
in
loopne
push
ljmp
push
sti
test
dec
add
nop
push
add
sysexit
mov
testb
nop
jne
ss
test
xchg
sbbb
xchg
cwtl
call
test
sti
mov
pop
leave
iret
sub
xchg
aas
sub
adc
fadds
idivl
scas
adc
es
cli
push
cmp
cmp
inc
sub
or
pop
or
mov
or
mov
adc
xchg
das
add
cmp
lcall
sti
lock
mov
jp
mov
out
scas
icebp
rcrb
aaa
cmp
cmp
sub
mov
mov
add
rcrl
adc
ret
or
sbb
test
add
cmc
cmp
inc
mov
mov
lock
rorb
pop
sub
push
mov
cmp
clc
loopne
inc
test
pop
jl
sub
iret
xchg
repnz
movsb
lret
out
popa
cmp
or
stos
push
xorb
mov
mov
out
and
jp
jns
bound
push
dec
test
inc
push
sbb
daa
xor
addl
call
add
inc
daa
or
cmp
sub
fwait
dec
dec
pop
sti
dec
xchg
mov
cwtl
ret
ret
xchg
int
push
roll
dec
fisubl
dec
es
dec
fs
adc
cmp
mov
xchg
xor
mov
xor
push
ret
and
lcall
dec
in
cld
inc
dec
xor
loopne
add
leave
shrb
push
and
rclb
push
ret
mov
xchg
xor
mov
scas
mov
movsl
pusha
pop
lods
adc
in
pop
js
fwait
adc
xchg
mov
sub
push
fucomi
mov
and
bndstx
mov
push
push
test
xchg
loopne
lret
fmuls
mov
pop
add
loopne
lcall
or
dec
loopne
add
js
add
dec
lcall
mov
jns
ss
fimull
xor
nop
sbb
addr16
add
addr16
add
lcall
add
inc
fldl
jae
fstps
xchg
sahf
sub
sarl
scas
stc
cltd
adc
cmp
push
scas
addr16
jne
addr16
and
or
scas
addr16
push
std
jmpw
jb
inc
and
sub
in
aaa
shrl
test
xchg
pop
xchg
inc
dec
pop
add
jmp
loopne
aaa
add
cmp
sbb
in
add
push
insb
rolb
lods
addr16
mov
and
push
jb
fsubr
cwtl
subl
in
es
cli
xchg
loopne
lea
mov
adc
xor
test
adc
cmp
and
cmp
sti
in
cwtl
stc
lahf
mov
and
add
pushf
cli
push
lods
sub
ds
xlat
cmp
xor
repz
push
loope
test
push
sbb
inc
pop
add
inc
call
clc
das
push
lcall
pop
bound
call
fwait
and
mov
pop
fidivrs
jns
add
dec
mov
push
mov
xchg
jnp
push
shrl
pop
jbe
inc
push
fcomps
sbb
add
xchg
outsl
pop
imul
push
out
push
or
jg
xor
push
test
push
lea
mov
mov
sbb
call
and
push
mov
cmp
insb
cmp
pop
aam
cmp
and
mov
add
jnp
xor
jle
scas
idiv
clc
lea
scas
cmp
lahf
cwtl
jl
ds
sbbl
mov
push
es
clc
dec
and
dec
cmp
out
adc
and
lret
jle
mov
inc
lret
outsb
mov
daa
sub
and
xlat
call
add
addr16
flds
push
jnp
add
in
and
scas
addr16
add
addr16
js
lahf
call
xor
mov
out
scas
addr16
add
imul
scas
cmp
addr16
daa
scas
addr16
add
cmpsl
flds
or
mov
outsl
add
mov
and
std
add
mov
call
mov
icebp
imul
lods
addr16
insb
in
pusha
mov
add
xor
jmp
add
das
sub
aam
jbe
jmp
xor
cli
xchg
out
add
lods
addr16
std
lahf
popa
pusha
fcoms
gs
fiadds
cli
inc
mov
addl
fmuls
pushl
mov
xchg
push
push
movb
jnp
pop
push
add
inc
push
add
mov
cli
fisubs
cmpsl
add
shlb
xchg
adc
mov
cmp
jmp
mov
mov
mov
fwait
cmp
pop
sub
or
pop
pop
inc
daa
hlt
add
addr16
leave
in
mov
icebp
add
xor
imulb
into
je
orl
add
gs
add
ficoml
add
mov
xor
inc
xor
sub
cmc
jb
mov
cs
sbb
jae
aas
and
sub
ss
sbb
jae
aas
and
aas
push
xchg
jge
jg
jle
lds
cld
jle
jg
ret
js
lock
in
std
push
mov
mov
fisttpl
pop
call
in
cmovo
add
test
adc
insb
imul
int
pop
pop
add
or
or
add
add
fidivs
bound
push
add
mov
pop
jge
in
jge
iret
add
aas
add
in
sub
push
add
cltd
cmpsl
std
cmp
sbb
inc
mov
aam
repz
lods
ljmp
jmp
adc
icebp
lods
jp
fiaddl
in
xchg
test
fcompl
test
rcl
add
aas
sbb
push
pop
cmc
xor
dec
in
pop
push
bound
push
icebp
loope
adc
cwtl
daa
add
iret
adc
inc
rcrb
aaa
push
ret
mov
jae
enter
xchg
daa
add
inc
lds
push
incl
aaa
pop
jecxz
dec
pop
or
jg
addl
jnp
leave
sbb
incl
inc
sbb
and
or
pop
sub
or
call
add
push
addl
push
or
stc
mov
add
jecxz
sbb
fs
pushl
pusha
sub
mov
loopne
call
pop
add
xchg
cmp
xor
sbb
xchg
pushl
orb
jl
cmpb
mov
add
cmp
mov
lds
xor
mov
cmpsl
push
push
push
xor
insb
and
pop
adc
scas
mov
aas
add
je
xchg
mov
or
inc
scas
sbb
cs
pop
add
or
decb
cmp
adc
into
push
pop
sub
add
out
scas
addr16
push
repnz
call
sub
and
sbb
sub
enter
lea
mov
inc
scas
cmpsb
and
loopne
add
and
ja
sub
jmp
pop
lea
mov
ret
outsl
inc
scas
loop
popa
clc
test
int
scas
xor
rcll
inc
push
or
loop
pop
imul
aam
mov
ja
out
sbb
bound
popa
jb
mov
cmp
lods
jp
mov
cmc
repnz
fs
and
and
bound
push
mov
add
pop
cli
add
pop
jmp
lods
addr16
adc
in
or
loope
fcoms
bound
and
stos
adc
push
inc
sbb
mov
addr16
movsl
or
or
cmp
push
add
loop
jmp
popa
cmp
lea
jnp
adc
pop
sbb
inc
daa
clc
dec
xor
loop
push
mov
cmp
inc
and
inc
fs
push
std
cmp
add
test
add
addl
arpl
add
cmp
mov
fdivrl
adc
mov
dec
je
adc
arpl
jne
mov
add
divl
fldl
sub
bound
add
xchg
cmpl
outsl
cmc
pop
pop
push
inc
das
cmpsl
jle
mov
xlat
imul
out
testl
add
gs
mov
dec
mov
sub
add
mov
xor
ret
inc
scas
std
and
pop
jge
aas
scas
rcll
and
or
outsl
testb
test
insl
test
push
and
les
xchg
fwait
cli
cmp
inc
and
addr16
jmp
inc
jmp
shrl
sti
cmpl
xor
fnstsw
push
xor
pusha
jg
outsl
pusha
pop
mov
dec
mov
loopne
daa
lahf
fimuls
mov
cmp
cmp
push
enter
add
loopne
and
fisubs
lahf
push
mov
icebp
inc
outsb
pop
mov
xchg
aas
pusha
js
outsl
jo
xchg
ja
jns
adc
xchg
repnz
lods
fsubrl
jnp
jnp
fistpll
idivb
lahf
jae
movsl
or
loop
adc
stc
push
dec
loop
lds
dec
test
icebp
mov
out
lret
inc
mov
mov
sbb
bound
inc
xor
cmp
ficoml
pop
mov
dec
int
jg
cmp
and
push
mov
pushf
arpl
jl
mov
mov
imul
or
mov
pop
push
push
adcl
inc
push
andl
xor
pop
sti
push
inc
or
inc
mov
and
and
test
test
or
scas
arpl
and
cmpsb
ds
daa
nop
inc
xchg
jno
xorl
addl
leave
aas
idiv
inc
sar
shrl
cli
add
adc
xchg
aas
add
popf
pushl
push
mov
jg
ljmp
mov
dec
xchg
cld
jne
lods
rcrl
lods
adc
push
xchg
lea
scas
jno
add
leave
mov
enter
stos
int3
mov
ret
cli
ljmp
cmpsb
imull
stc
or
push
xor
push
xchg
insl
adc
add
add
imul
xchg
sbb
adc
sub
clc
fildll
in
cmp
in
outsl
xchg
leave
mov
pop
jle
ss
int
outsb
pop
out
scas
addr16
ja
xchg
jl
fldl
inc
cmc
xor
std
lahf
int
fstpl
lock
pop
mov
mov
add
xchg
fsubrs
jmp
inc
hlt
loope
sub
mov
add
dec
in
mov
sbb
mov
dec
or
fcomi
cli
cmpsb
push
sahf
push
test
mov
dec
or
mov
inc
andl
jno
ret
out
loopne
aas
jmp
sbb
inc
cltd
scas
addr16
and
addr16
add
add
leave
arpl
jmp
scas
addr16
bound
addr16
jp
addr16
scas
xchg
pop
mov
subl
push
or
ljmp
mov
lock
push
adc
in
add
add
int
add
shll
dec
mov
add
add
pop
lea
nop
test
inc
mov
loop
je
mov
xor
cltd
mov
test
lods
data16
or
leave
ret
push
mov
icebp
inc
or
xor
aas
add
or
cmp
xchg
incl
adc
scas
inc
std
scas
scas
cmpsl
or
scas
mov
adc
and
test
mov
jmp
xor
cmc
or
dec
sbb
or
sbb
xor
add
scas
or
mov
testb
or
or
call
cmp
mov
jbe
mov
test
mov
incl
dec
add
scas
or
jns
loope
sti
and
std
inc
scas
out
pop
sub
pusha
pop
ds
out
mov
in
dec
fldpi
jle
mov
sub
fnstcw
push
adc
jmp
inc
fisttpl
arpl
mov
out
sbb
and
lock
sahf
pop
pop
insl
jnp
sub
andl
pop
push
and
pop
insb
jmp
mov
into
ds
jae
inc
mov
pop
cmpb
ficoms
sub
cmp
out
jmp
out
pop
sti
into
jl
jp
mov
or
pop
add
aad
bound
popa
adc
jmp
insb
cmpb
faddp
psubsw
out
xchg
jmp
test
lock
insl
inc
ret
out
nop
repnz
jmp
add
or
insb
sub
lret
sub
jl
lods
movsb
push
inc
in
dec
and
pusha
pop
pop
mov
adc
sbb
push
or
add
push
out
xor
push
popa
ljmp
mov
inc
sbb
cli
call
add
xor
pop
gs
mov
popf
push
add
out
inc
push
pushl
dec
add
call
lea
dec
mov
dec
adc
outsb
fs
push
gs
lea
pushf
xchg
std
xchg
jne
dec
out
std
mov
mov
aas
scas
rol
push
pop
jecxz
fsubs
and
add
test
shll
out
sbb
and
or
jae
sti
push
add
add
cmpsb
sbb
dec
jge
inc
jp
add
add
ja
fwait
popa
icebp
shrl
push
sti
fwait
stos
sbb
nop
sub
sub
add
inc
add
lock
stc
add
scas
push
or
xchg
mov
mov
push
enter
mov
addr16
gs
addr16
xor
push
mov
lock
repnz
test
inc
sub
sub
pop
aaa
adc
add
sub
adc
sbb
jne
in
sub
mov
addr16
mov
sbb
jns
repnz
mov
pop
pop
adc
out
movb
aam
das
cld
or
scas
repnz
daa
mov
push
dec
add
add
test
xchg
sbb
lods
sub
jl
or
adc
inc
adc
cmp
pop
aas
hlt
out
xor
data16
fcoml
push
hlt
ja
mov
mov
subb
jae
jg
lods
out
loope
add
out
ss
call
test
out
add
jecxz
in
aad
in
add
imul
add
cmp
inc
pcmpeqb
mov
jecxz
sahf
les
add
call
mov
imul
call
sbb
push
pop
lret
xor
adc
add
jb
mov
out
mov
ljmp
sub
add
add
add
xchg
loop
sub
rol
imul
leave
mov
incl
mov
ljmp
ljmp
popa
mov
call
in
mov
or
ljmp
stc
lcall
or
test
adc
add
mov
mov
sub
mov
mov
cmpb
out
mov
scas
jne
pushf
scas
mov
xchg
mov
xchg
stos
dec
jg
fs
subl
repnz
mov
mov
stos
push
call
sub
ja
and
sub
addr16
outsb
hlt
sub
push
sub
add
fcoml
call
inc
mov
data16
ljmp
add
movsb
daa
jg
jo
sarl
jo
lret
cmp
jge
addr16
in
ret
neg
inc
scas
in
sub
lret
sbb
jg
inc
in
inc
or
add
mov
shll
nop
test
aas
xchg
pop
addl
lret
pmulhw
scas
add
inc
sub
add
add
xor
test
lods
addr16
add
add
notb
mul
out
push
jl
fcoms
cli
je
outsl
call
bound
add
fcoms
dec
lcall
jg
shrl
stos
das
xchg
je
shll
je
inc
xor
int3
add
jmp
push
pop
add
negb
pop
arpl
andl
mov
sbb
lea
in
clc
call
sbb
call
ljmp
dec
lahf
dec
push
xor
sbb
pop
sahf
fistl
clc
divb
rcll
push
mov
lock
das
cmp
jecxz
leave
mov
mov
or
dec
popa
pop
pushf
adc
and
adc
lea
test
inc
add
add
push
test
jmp
jae
add
push
scas
scas
out
sti
or
lds
scas
sbb
mov
mov
scas
jmp
out
stos
mov
lret
psrlq
stos
mov
mov
insl
ljmp
pop
xlat
jp
imul
add
cs
fcoml
mov
xor
push
fistpll
push
dec
jo
lret
mov
loope
pusha
cmp
dec
into
jae
or
int
jbe
jo
repnz
arpl
push
pop
dec
call
xor
gs
les
addb
xor
add
loopne
dec
jmp
scas
ljmp
add
push
add
insb
jg
jns
jmp
mov
pusha
call
decl
xor
outsl
mov
pop
sub
push
in
add
sbb
jne
call
scas
cmp
iret
lods
push
jb
push
shll
in
leave
stos
xor
bound
mul
subl
dec
add
repz
in
or
pop
jb
sub
ja
jp
mov
cli
jmp
dec
or
xlat
jno
sub
in
repnz
add
call
lods
jg
outsb
lods
addr16
push
add
idivb
es
ds
test
add
add
or
out
add
lea
les
out
cmc
mov
addr16
lcall
xor
add
pop
dec
jmp
lea
or
sub
mov
repz
or
or
pop
jbe
xchg
push
push
add
fdivrs
add
test
lsl
mov
scas
fisttpl
add
fmull
add
outsl
xor
retw
push
jecxz
orl
out
jle
out
xor
push
es
mov
aas
scas
int
dec
cmp
add
repz
lds
out
stc
in
cs
pop
push
xor
inc
pop
je
roll
shll
sub
out
sar
ljmp
scas
mov
xchg
jne
ss
and
sub
jae
add
lods
outsb
out
sti
add
es
ficoms
cmp
jg
std
push
je
jo
push
data16
sbb
and
jbe
dec
in
pop
push
add
repz
divl
sbb
jbe
dec
rcr
daa
sbb
sub
fmull
pop
sbb
mov
or
pop
push
mov
je
adcb
in
mov
and
out
adc
dec
xor
mov
mull
cmc
lock
sbb
out
sbb
adc
push
or
bnd
jo
mov
and
stc
sbb
lret
sub
mov
test
ss
pop
ljmp
sbb
jno
or
add
test
pop
jb
mov
lods
out
std
sbb
or
add
popa
ljmp
pop
adc
clc
out
cs
lods
bnd
lods
pop
test
out
add
cmp
bound
addl
jle
cmp
std
fwait
xor
push
add
add
pop
mov
add
inc
or
jne
add
lea
xchg
incb
add
dec
mov
adc
mov
pop
lea
addl
push
addw
mov
call
or
jge
imul
and
sti
xchg
loop
lret
mov
into
and
add
scas
testl
stc
sbb
push
jo
cli
or
push
test
leave
push
adc
call
mov
outsl
aas
or
std
or
push
add
scas
push
mov
sub
push
sub
push
add
xchg
cmc
dec
out
dec
cmp
push
and
ljmp
fwait
mov
rcrb
mov
sti
out
mov
pop
or
in
mov
imul
test
jmp
adc
mov
mul
pushf
mov
push
mov
out
push
jo
sbb
adc
inc
loopne
mov
icebp
push
xor
jmp
lea
fsubl
or
cmpsl
loope
add
addr16
adc
xchg
loopne
call
or
stc
in
pop
pop
add
push
repnz
xor
mov
addr16
lods
out
insb
jne
sbb
arpl
out
cld
loopne
jmp
out
push
ret
daa
mov
test
inc
in
inc
insl
test
xor
imull
shrl
adc
call
sub
testl
jb
lahf
and
hlt
cli
pop
xor
adc
loop
add
push
imul
add
cmc
adc
mov
in
adc
push
incl
arpl
pushf
jecxz
add
pop
sub
add
cli
call
add
push
push
inc
mov
push
call
jae
add
mov
and
jbe
adc
sarb
sub
jo
adc
arpl
xor
add
rcrl
mov
inc
clc
scas
add
sub
fs
ret
push
pop
push
add
xor
out
sub
gs
test
mov
lods
add
adc
bound
outsl
in
std
xor
and
sub
scas
xchg
mov
mov
ljmp
mov
das
dec
push
xchg
orl
or
scas
jle
call
sub
repnz
lea
mov
mov
mov
or
add
ss
or
pop
insl
out
mov
fisubl
daa
xchg
jg
fbstp
das
in
scas
fisubl
xchg
insb
insb
ret
mov
sub
in
pop
call
or
cmpsw
or
mov
shrl
or
sahf
cmp
xor
add
data16
outsb
dec
mov
lahf
pop
add
insb
fadds
inc
out
test
cli
jmp
lods
add
inc
adc
dec
test
lods
addr16
jmp
call
xorl
shlb
jmp
lods
addr16
mov
fucom
mov
and
cli
jmp
imul
out
bound
rcrb
add
pop
test
lods
add
sahf
xchg
ds
gs
int
push
bound
test
push
dec
add
push
addr16
add
push
lea
inc
sbb
mov
iret
outsb
pushf
enter
ds
out
call
loop
add
test
cli
sbb
jmp
inc
and
or
es
add
and
sub
orl
jle
cmp
je
stc
adc
add
addl
dec
stc
jne
rol
add
mov
scas
add
dec
and
cmc
mov
pop
xchg
jmp
and
sub
ds
sbb
mov
test
xlat
out
jno
ret
test
test
mov
cli
and
testb
add
xchg
fwait
xchg
std
cmpb
cmp
add
rol
pusha
jg
push
and
and
mov
clc
pushf
jle
popa
xor
cmp
mov
pushl
jg
xor
cmpsl
or
jnp
ss
xor
push
fcomp
sbb
add
jmp
scas
dec
mov
clc
lods
jg
mov
out
daa
jmp
dec
ret
ficomps
add
scas
das
add
sbb
jmp
daa
jmp
or
scas
pop
cmp
mov
dec
push
jg
sbb
pop
xchg
ret
call
inc
inc
jg
adc
and
test
lods
add
jg
mov
daa
imul
jo
hlt
jmp
addr16
sbb
add
xor
lahf
jae
cmpsb
mov
iret
xor
xor
out
xchg
loopne
jge
lret
faddl
adc
imul
lods
out
jmp
stos
fwait
out
fs
aas
push
jo
inc
sbb
icebp
xor
pop
mov
insl
jns
into
mov
orl
add
sub
add
shlb
jb
loop
in
cmp
jge
lea
leave
xor
loope
mov
leave
pop
jo
inc
pop
enter
pop
shl
xchg
in
cmp
jmp
add
lahf
pop
je
jmp
add
pop
push
ret
lds
fs
hlt
cli
push
scas
cltd
mov
enter
mov
scas
jg
mov
leave
into
jle
cmp
test
out
rcr
adcb
lods
andl
stc
lock
sub
sbb
imul
mov
sub
decb
add
aaa
ljmp
jae
rol
add
leave
fdivs
mov
lret
push
add
lret
or
jmp
cmpsl
hlt
mov
pop
idivb
andb
pop
sbb
dec
orl
cwtl
mov
cmp
lock
ljmp
out
add
xlat
cmp
jns
cmp
cli
lock
pop
out
push
cmp
addr16
clc
push
lcall
ret
or
out
cmc
data16
lds
cmp
out
repnz
pop
mov
add
and
cmp
sub
pop
mov
pop
sub
lret
out
xor
cmpb
in
addr16
add
mov
test
jb
aaa
arpl
lods
fidivrl
fsubl
inc
jmp
aas
push
jmp
stos
pushf
clc
sti
add
test
cmp
scas
sub
cmpsl
pop
outsb
imulb
mov
pop
cmp
in
daa
inc
sub
lret
call
sti
in
dec
jne
lods
addr16
popf
fldenv
loopne
mov
movsl
mov
cmp
cli
jne
jmp
jp
push
xorb
je
mov
je
mov
dec
outsb
or
ret
xchg
mov
jp
add
je
cmc
es
push
mov
push
cmp
jge
inc
call
xor
and
mov
push
push
cwtl
dec
incl
fstpt
inc
xchg
dec
push
loope
mov
push
xorw
jne
insl
fwait
push
pop
scas
lea
add
adc
lock
jmp
addb
push
incb
scas
dec
inc
fcomp
ret
xchg
cmp
dec
xorl
flds
daa
adc
cmp
insb
push
mov
orb
push
jnp
es
or
add
inc
mov
mov
insl
cmpsl
test
add
movsb
jmp
xchg
mov
sbb
imul
mov
mov
and
cmp
iret
rcrl
push
jb
sub
out
scas
negl
scas
negl
mov
inc
xchg
fwait
jge
scas
pusha
dec
xor
mov
mov
inc
scas
in
jmp
lods
ret
pop
xchg
xorl
add
pop
hlt
mov
cmpsl
aas
add
mov
daa
xchg
aam
jle
mov
test
addr16
mov
xor
enter
out
iret
add
mov
pop
adc
fwait
mov
adc
pop
mov
orl
add
add
dec
add
lods
and
jmp
mov
add
addr16
cmp
sbb
mov
and
cmp
call
add
mov
imull
sub
mov
ja
jmp
inc
pusha
cli
jmp
js
test
pop
cltd
or
repnz
xorl
lds
test
mov
mov
fs
imul
xchg
adc
fmul
mov
out
jne
faddl
dec
fsubrl
inc
fs
cmp
pop
xor
inc
insl
ljmp
mov
xor
sti
mov
outsl
xchg
mov
mov
std
add
imul
jecxz
mov
ret
add
xor
pop
scas
jns
jb
leave
aas
cmp
push
int3
scas
push
push
or
sti
ret
aas
scas
rol
or
fdivr
mov
sbb
push
xor
pop
inc
aad
jge
add
out
push
inc
lret
dec
stc
aas
scas
leave
inc
add
add
mov
push
sub
and
xchg
mov
lret
je
rorb
shlb
xchg
ja
xor
out
push
pop
xchg
aad
sub
ds
je
mov
add
es
lahf
movsl
iretw
xchg
loope
sub
lock
inc
mov
adc
pop
cmpsl
add
js
add
sub
clc
cmp
add
iret
das
iret
add
ja
add
sub
addr16
add
mov
inc
scas
out
faddl
test
xchg
inc
scas
out
aam
hlt
test
jl
xchg
jp
scas
lock
jae
lods
nop
arpl
insb
iret
add
mov
push
dec
mov
pop
lods
in
fs
loope
insb
mov
adc
sbbl
add
add
fwait
sbb
xchg
cltd
in
test
add
ljmp
inc
popa
jb
xor
inc
fsubl
in
repz
fsubrs
push
cmpsl
rorb
jb
ja
mov
outsl
call
pusha
ret
add
ffreep
call
dec
sub
mov
pop
leave
cld
jmp
cmp
add
add
pop
arpl
adc
or
push
or
test
ficomps
mov
add
inc
js
pop
aas
sub
add
xchg
adc
sub
add
pop
mov
push
addr16
push
data16
test
call
arpl
je
ds
scas
icebp
int3
call
add
flds
sbbb
add
arpl
lahf
dec
xchg
inc
andl
int
mov
adc
xchg
inc
add
icebp
pusha
jns
mov
xor
daa
addr16
ss
incl
mov
cmp
adc
pop
sbb
aad
adc
xor
cld
mov
xchg
data16
addr16
shll
cmc
imul
lret
pop
fadds
in
and
ret
mov
push
stos
and
stos
push
cmc
iret
test
out
lock
jle
cmpsl
inc
inc
scas
loop
push
or
push
jmp
mov
sub
jecxz
ja
test
and
imul
push
stos
fcmovnu
test
xor
rclb
inc
jge
and
loope
aaa
and
test
add
ja
sub
pop
arpl
jmp
pop
test
jmp
das
push
je
dec
popf
andl
insb
pop
in
cli
cld
cmp
jmp
jmp
pop
jne
add
movsl
and
mov
aad
out
push
cwtl
xor
pop
pushf
pop
lods
loopne
fsts
inc
mov
sbbl
arpl
lods
adc
or
decb
idiv
pop
fsubl
lea
iret
out
xchg
add
push
fcomi
test
test
mov
mov
jns
sub
cmpl
fdiv
je
fisubrs
outsl
add
dec
push
adc
xorl
lea
mov
out
jne
adcb
arpl
inc
xchg
shrb
leave
lods
add
cmc
inc
xchg
mov
ret
aad
es
fldl
dec
mov
ja
mov
ja
xor
adc
cmp
inc
dec
push
addr16
lcall
cmp
adc
dec
or
pop
jnp
lods
inc
incb
cwtl
aad
lods
inc
incb
out
clc
gs
jne
jae
inc
add
mov
rolb
mov
js
out
sub
sbb
pop
ret
xlat
cmp
dec
mov
dec
push
nop
ljmp
inc
pop
sbb
inc
or
mov
sub
xor
out
bnd
pop
lods
aaa
mov
adc
xor
fldl
and
mov
insb
mov
xorb
fistps
mov
xor
jmp
lret
repz
stos
ret
sbb
xor
add
mov
or
mov
jp
loope
jge
mov
fdivrl
xor
xor
pop
inc
lret
xchg
mov
add
ja
cmp
movsb
lret
jmp
es
pop
push
add
lds
je
mov
and
sub
add
cmp
pop
add
jge
test
jl
je
rorb
lds
test
add
push
jb
mov
or
mov
mov
out
addr16
add
add
pop
xchg
mov
jb
inc
in
inc
add
jl
je
mov
dec
lds
add
bound
data16
cmp
inc
push
shll
stos
out
or
sub
jbe
scas
call
test
add
push
inc
cmpsb
add
lea
push
jne
cs
mov
ret
mov
dec
sti
push
push
sub
lret
outsb
rorb
xchg
mov
call
imul
es
push
daa
das
adc
addr16
sbb
and
xor
out
sbb
sti
mov
ret
les
jmp
popf
addb
dec
and
movl
test
and
testb
jnp
jnp
jns
pop
push
idiv
lock
and
loop
loopne
add
lock
adc
inc
and
mov
inc
xchg
insb
jne
mov
sub
adc
in
xor
aas
nop
std
std
mov
std
outsl
shll
mov
loopne
fdivl
add
mov
xor
pop
pusha
das
mov
pop
ret
xor
ficomps
mov
roll
mov
insb
dec
shll
lods
ficomps
ret
sub
adc
pop
jg
loopne
in
mov
les
mov
xor
pushf
xchg
and
outsl
shll
lret
out
loop
add
add
inc
jmp
mov
jp
aas
mov
add
into
adc
pop
mov
popf
adc
or
jae
pop
inc
rcl
in
icebp
shr
sub
push
ss
jno
stos
fimuls
cmp
cmpsl
cmpsl
push
sub
in
shr
idiv
call
jae
push
xchg
and
int
shlb
jmp
mov
fistpll
jmp
fidivs
lcall
pop
dec
sub
mov
lret
jne
and
and
add
jae
or
loope
test
add
js
adc
imul
pop
imul
jle
addb
scas
dec
push
jl
jg
push
fs
push
pop
or
fdivrl
je
loopne
and
mov
jmp
aaa
or
call
cmp
adc
scas
mov
inc
and
fyl2x
mov
add
gs
rcl
add
push
sti
sbb
shll
push
sti
mov
fnstenv
loop
adc
add
fs
out
lods
daa
push
js
push
sti
andl
pop
call
adc
push
add
add
cmp
xor
and
call
aas
push
inc
push
or
lea
addr16
in
in
andl
out
mov
sarl
rorl
in
fwait
add
fidivrs
aas
pop
add
outsl
mov
add
ret
mov
je
adc
addr16
shlb
loop
pop
ja
add
mov
lret
add
jns
add
es
dec
roll
addps
push
in
rcll
outsl
les
cmpb
jg
aam
rolb
int
push
adc
sahf
cmpsl
add
mov
mov
test
pop
inc
add
lods
pushf
push
xchg
fld
adc
jecxz
ret
lods
mov
lds
stc
hlt
and
inc
jmp
je
xor
out
addr16
jle
sub
lods
loop
push
shl
ljmp
mov
xor
jns
jmp
and
inc
aas
lods
jmp
push
in
movsb
je
mov
sbb
inc
add
add
mov
adc
mov
jmp
mov
push
mov
gs
decl
pop
or
inc
add
call
shl
sbb
push
loope
push
mov
shll
add
roll
xorb
add
addl
jae
or
mov
ret
mov
add
cmp
pushl
sub
inc
ds
sti
lcall
or
adc
push
add
add
xor
mov
pop
cmpsb
addr16
mov
pop
aam
enter
mov
pop
dec
or
inc
add
add
repnz
add
xchg
sub
out
dec
orl
mov
aad
cmp
jl
or
add
mov
das
aaa
test
ds
lds
ljmp
scas
dec
std
or
aas
sub
mov
pop
add
fbld
scas
insb
inc
jg
fs
out
mov
stos
pop
mov
mov
mov
jae
push
push
push
outsl
out
scas
fdivp
sub
ficomps
stos
xor
add
test
es
scas
mov
scas
jg
cmp
push
insl
dec
pop
fsubrp
push
adc
fisttps
scas
aas
mov
cmc
dec
add
aad
scas
sahf
dec
xchg
sahf
pop
call
bound
xchg
cmpsl
add
add
or
leave
call
push
dec
sub
push
or
scas
pop
xor
add
lret
bound
dec
mov
sub
pushf
test
dec
lds
add
dec
xchg
das
push
je
sub
cli
add
cli
jmp
clc
cwtl
mov
stc
add
push
or
push
pop
scas
inc
add
popf
je
mov
add
std
mov
movsl
mov
jne
fsts
sbb
inc
cld
xchg
xchg
fs
cmpb
mov
cmp
adc
addl
xor
and
add
mov
adc
mov
mov
scas
test
mov
imul
cwtl
and
dec
sbb
incl
fnstsw
cmp
incb
call
adc
adc
and
jg
mov
lret
push
add
mov
mov
mov
add
add
mov
or
add
std
je
shlb
or
je
xchg
ret
shlb
stos
or
in
pop
add
mov
call
xor
lods
add
push
decb
aaa
pushl
push
pop
test
sahf
jnp
in
add
sub
mov
fidivl
push
stos
nop
mov
ljmp
addr16
mov
out
pop
outsl
pop
add
pop
imul
add
in
andl
and
mov
stos
cmpsl
out
out
insb
lret
pop
push
mov
and
sub
iret
mov
ret
xchg
cmc
inc
scas
repnz
aas
mov
mov
mov
imul
mov
shll
jle
ficomps
xchg
jae
lods
cltd
in
pop
dec
jbe
cmp
test
iret
popa
push
aas
and
dec
add
test
and
and
xchg
sub
sub
and
cs
xchg
call
out
pop
mov
pop
sahf
push
es
in
dec
int
xchg
aad
ljmp
pop
mov
or
and
sbb
inc
add
addr16
jg
and
scas
pop
je
vucomiss
sti
mov
inc
aas
cld
add
push
add
xor
adc
aas
pop
push
push
adc
es
dec
push
inc
add
roll
xchg
cmp
std
adc
jp
add
push
cmp
add
or
and
sbb
push
lret
idivb
mov
into
jae
mov
insl
inc
mov
jns
addl
loopne
mov
shll
xchg
sub
xchg
fsub
mov
mov
pop
pusha
addl
sbb
mov
mull
dec
sti
cmp
addb
push
decb
and
adc
push
add
sub
inc
sub
call
andb
jnp
mov
fsubr
add
cmpsb
out
scas
addr16
add
scas
arpl
jbe
inc
shrb
enter
scas
lock
pop
inc
cmc
out
cmpsl
out
add
insl
rolb
adc
mov
adc
mov
addr16
add
and
push
loop
add
mov
xor
mov
add
mov
dec
adc
push
int3
or
dec
mov
lods
lods
ds
mov
mov
mov
ds
test
ss
fnstsw
call
push
aad
out
sub
jmpw
sub
jo
stc
cld
les
jmp
xchg
addr16
mov
outsl
inc
jmp
in
subl
imul
fldl
mov
cld
addr16
sub
test
add
arpl
jmp
or
adc
jne
add
ret
add
gs
cmc
xor
test
gs
add
xor
jmp
imul
xor
divb
out
je
cmpsl
orl
testb
xchg
out
sub
negb
sub
rol
mov
rol
out
idiv
sbb
inc
dec
push
scas
add
add
stc
pop
xor
dec
push
insb
fnstsw
add
test
xor
add
push
jle
cli
cmp
mov
loope
scas
jae
and
ret
inc
scas
int
or
dec
cmc
mov
cmpsl
dec
push
push
xorb
and
jl
es
xor
das
in
cmp
fnstcw
and
js
adc
and
add
add
icebp
stc
shlb
mov
in
mov
lret
pop
dec
lret
arpl
mov
fstl
add
ds
lahf
pushf
cmpsl
out
insb
insb
push
add
aad
repnz
test
xchg
pop
sub
mov
mov
add
lcall
es
or
ss
add
in
mov
out
sub
mov
add
xchg
pop
ror
in
add
lods
add
xor
push
jbe
mov
test
ds
call
adcl
in
inc
icebp
stos
sub
cld
in
aas
loope
push
mov
mov
jae
leave
adc
fs
loope
in
jno
mov
gs
in
add
or
fwait
out
or
jmp
jge
lret
out
je
mov
lock
lds
jno
mov
add
or
push
orl
push
or
ret
rcr
and
xchg
rcrb
inc
pop
cltd
or
inc
lock
iret
sahf
mov
call
mov
mov
rclb
add
mov
dec
push
jae
cld
call
jge
test
pop
jge
pop
loop
repnz
bound
jl
cmc
xor
add
adc
repnz
or
or
xchg
push
out
icebp
sub
cmp
insb
or
pop
les
add
dec
ja
add
mov
ret
out
leave
mov
cli
jl
dec
pop
in
mov
lock
and
add
inc
mov
mov
cli
push
sti
mov
lods
cli
and
xor
inc
lock
aam
push
xchg
out
fmuls
sub
insw
int3
enter
mov
clc
sbb
ds
lds
scas
in
dec
cmc
in
cmpsb
dec
dec
out
stos
out
xchg
mov
xor
mov
jns
cmp
imul
loopne
outsl
pop
mov
out
xchg
cli
xor
jns
xchg
add
out
in
jbe
push
dec
jne
pop
ret
loopne
js
shl
xchg
xor
out
shr
arpl
jge
sarb
les
inc
lods
jae
aas
mov
push
std
lods
pop
jne,pt
test
adc
cwtl
cmpsl
add
outsb
subl
mov
gs
sub
push
pop
ret
add
scas
cwtl
mov
xor
stc
ss
shrb
stos
test
adc
stc
push
add
rorb
mov
test
in
lods
loop
lds
dec
in
andl
std
sbb
clc
adc
incb
push
mov
pop
cmp
cmpsl
addr16
xor
incb
add
loopne
adc
mov
inc
and
xchg
xorl
xor
xchg
add
andl
xchg
loopne
or
mov
xchg
xor
add
fisttpll
cltd
or
rorb
scas
add
addl
gs
adc
inc
mov
add
add
pop
loopne
js
ljmp
jo
negb
loopne
and
cmpl
jle
sti
mov
int
or
push
sub
xor
loopne
ljmp
pop
and
cmc
jl
fnstcw
inc
jle
cli
push
lret
movsb
lds
add
jbe
leave
ja
clc
gs
dec
push
ss
cli
mov
int
or
fimull
xor
fsts
outsl
addr16
sarb
mov
add
stos
or
movsb
jmp
test
xor
jle
mov
mov
call
clc
bound
jle
mov
push
scas
sahf
sbb
jbe
mov
scas
addr16
outsl
clc
mov
cld
jo
mov
jl
mov
out
es
jmp
xor
inc
into
inc
aaa
and
lock
ret
jl
imul
adc
add
mov
out
enter
jg
out
xchg
outsl
inc
jl,pt
inc
in
pop
in
movsl
fadds
add
jne
or
sub
cmp
push
adc
test
fs
out
xlat
xchg
out
je
hlt
out
cmp
cmpsl
add
test
inc
call
xchg
inc
or
push
push
or
leave
aaa
popl
movsl
mov
inc
hlt
jl
inc
add
inc
dec
mov
ljmp
xchg
add
pop
cmp
outsb
sbb
inc
int
mov
dec
ljmp
push
addl
mov
and
push
decl
icebp
loope
xor
push
sbbl
add
mov
adc
imul
aas
add
aad
call
mov
and
push
sarb
ss
cwtl
cmc
adc
scas
rol
pop
inc
inc
pop
in
inc
push
pop
rorl
jnp
or
xchg
pop
inc
out
xchg
or
hlt
mov
mov
jae
test
lea
ja
xchg
jnp
sti
ret
inc
add
sub
mov
pushf
addb
cmpl
popf
xor
aad
jns
mov
mov
mov
mov
addr16
sbb
mov
adc
stos
int
cmp
push
int
ds
mov
jp
sub
cmc
scas
mov
bound
pop
sbbl
dec
xlat
mov
cmc
adc
andl
xor
fstl
insb
fs
test
movsl
jecxz
leave
jp
jnp
add
xchg
movsb
jns
mov
lahf
aaa
xchg
xor
loope
pop
sub
xor
and
add
cmp
fisubrs
cli
mulb
xor
je
dec
mov
gs
idivl
cli
push
add
das
aas
xor
jo
test
mov
dec
int
int3
adc
dec
fildll
ljmp
mov
pusha
js
ds
cmp
push
push
mov
push
add
fbld
sub
inc
push
out
or
and
sbb
or
pop
scas
icebp
mov
cmp
sahf
xor
pop
xor
mov
or
cmp
inc
mov
dec
jmp
or
sub
dec
outsl
and
nop
ljmp
pop
jmp
pop
pop
add
gs
add
adc
mov
sbb
pop
jns
scas
inc
sub
lods
jge
sti
cli
mov
mov
sbb
jmp
flds
jl
mov
cmp
adc
ror
iret
add
fcoml
xchg
push
bound
mov
in
sub
jg
ss
add
sub
add
or
mov
cli
jo
jae
push
aaa
repz
mov
and
mov
loop
out
mov
xor
imul
scas
fucomip
aam
mov
je
rcrl
nop
insb
mov
xor
adc
shlb
mov
cltd
inc
pop
in
jmp
imul
add
inc
imul
aad
aaa
cmp
mov
lds
inc
jo
and
rcrb
mov
movsl
das
fwait
xor
push
dec
neg
addr16
loopne
insb
or
das
jnp
xor
cmp
dec
icebp
xor
lock
dec
data16
sub
test
xor
clc
xor
lds
cli
insl
jae
or
add
cmp
pushf
or
adc
lods
cltd
stc
fsubl
inc
jmp
daa
xor
out
mov
pop
inc
jmp
sbb
dec
aad
das
ss
pmaddwd
call
mov
cli
scas
out
add
stc
mov
aas
xor
push
mov
mov
push
xor
orb
xchg
adc
or
or
je
add
jmp
pop
jle
or
and
inc
ljmp
push
stos
add
sbb
inc
push
and
ljmp
call
jo
adc
push
pop
push
imul
xor
push
cwtl
jbe
cmp
testb
add
repnz
arpl
add
scas
cs
inc
mov
cld
gs
dec
popl
dec
cltd
into
sub
dec
das
outsl
ret
leave
xchg
or
mov
mov
push
inc
je
shrl
std
add
dec
sub
xchg
or
push
inc
jg
mov
mov
xor
and
add
add
add
icebp
and
add
and
into
ss
mov
add
and
aas
push
insb
cmp
sub
gs
jb
addr16
cld
bound
mov
in
jbe
jb
xchg
pop
call
stos
or
push
sahf
sub
pushf
mov
ss
iret
mov
mov
fstps
and
mov
mov
xor
sbb
mov
or
mov
loope
or
scas
js
and
sahf
shl
sub
clc
mov
enter
cmp
add
mov
cmp
enter
icebp
shlb
sahf
inc
out
dec
xchg
repz
pop
push
push
std
call
mov
mov
in
addr16
mov
loopne
iret
add
push
out
loop
xor
popl
in
or
mov
addr16
sub
mov
shl
dec
lahf
and
insb
addr16
lahf
stos
popa
jge
loop
inc
mov
sub
add
clc
add
push
decb
leave
out
pop
jecxz
sub
cmp
fisttps
arpl
jne
lret
je
pushf
arpl
jne
jle
adc
push
data16
sub
add
cli
or
push
add
mov
inc
or
mov
add
data16
lea
add
push
bound
dec
incl
or
aam
fsubp
divb
call
scas
dec
jno
scas
lcall
add
xor
imulb
add
push
xlat
stos
loopne
scas
ds
jae
addr16
incl
sbb
inc
scas
mov
xchg
mov
mov
out
push
xchg
cli
pushf
jle
add
inc
add
mov
dec
inc
cmp
or
xchg
push
mov
sbb
mov
jg
adc
mov
test
mov
add
push
sarl
and
out
scas
addr16
mov
addr16
and
incl
insl
mov
addr16
push
in
data16
mov
pop
call
mov
sti
pop
add
pop
pop
and
scas
mov
push
mov
sbb
inc
cltd
push
fistl
cmpsb
dec
ljmp
out
add
addr16
mov
and
daa
mov
ja
out
mov
pop
and
mov
sti
cltd
daa
mov
or
sub
out
movsb
and
push
call
push
pop
outsb
mov
adc
in
stos
and
and
je
lret
insb
out
mov
adc
cmc
sub
and
lods
add
dec
sub
lods
addr16
add
mov
inc
push
xchg
push
jae
add
and
gs
call
ja
xor
lods
addr16
outsl
sub
add
sahf
icebp
and
icebp
rep
adc
push
push
rcll
subl
cmpsl
inc
jmp
sub
add
orl
mov
push
decl
adc
cmpsl
adc
lret
add
push
test
jbe
push
shll
lea
inc
sbb
xorl
dec
daa
jmp
data16
jne
dec
imul
inc
cmp
cmp
jne
jmp
in
inc
inc
scas
testb
push
stc
lcall
mov
pusha
xor
test
lods
mov
add
daa
sti
xor
lods
ret
xchg
adc
test
pop
stc
mov
fiadds
xchg
imul
sub
xchg
das
clc
adc
mov
pushl
les
xchg
cli
scas
push
cmpsl
std
popf
dec
xor
insb
loop
push
xor
ficoml
aad
es
cltd
mov
ret
into
std
jle
inc
mov
addr16
add
mov
repz
das
xchg
bnd
int
movsl
out
add
lcall
popf
adc
mov
fs
cmp
pop
hlt
sub
push
loopne
and
adc
and
adc
outsl
outsb
mov
adc
add
sysret
or
add
mov
scas
jmp
scas
addr16
cltd
daa
aas
sub
inc
loope
xor
lods
pushl
test
add
mov
push
es
dec
push
test
lods
addr16
fcoml
inc
jmp
mov
jo
call
mov
cld
lock
jmp
jo
add
loopne
subl
mov
dec
out
addr16
push
cli
stos
add
ljmp
lods
adc
add
lahf
mov
adc
jne
jmp
mov
inc
push
cmc
loopne
or
push
pushl
into
js
leave
cld
jge
and
jp
push
insl
inc
add
in
adc
bound
sbb
adc
adc
addr16
incl
call
add
arpl
idiv
add
pop
lcall
inc
push
shrb
push
xlat
ljmp
aad
cmc
call
jge
jb
sub
fstpt
stos
in
pop
stos
lods
gs
data16
mov
scas
xor
lock
xchg
adc
adc
add
inc
scas
mov
out
notb
mov
cli
lcall
add
or
add
cmp
or
push
bound
sub
lea
inc
xor
aaa
cmp
fidivrl
cmpsl
xchg
cli
scas
push
jnp
sub
inc
inc
jg
repnz
and
inc
shll
cwtl
stc
pop
xchg
mov
dec
and
sbb
in
dec
testl
jbe
add
add
ja
pop
shlb
out
les
mov
repz
mov
out
mov
ret
cmp
push
and
add
enter
in
mov
xchg
sub
jg
lods
insb
cmp
nopl
scas
addr16
xchg
adc
mov
add
dec
mov
push
into
ret
in
add
and
cmc
add
and
cmp
mov
ljmp
cli
gs
xchg
dec
bound
addr16
loopne
mov
das
cwtl
outsb
test
adc
inc
jmp
lods
mov
imul
add
sub
je
dec
movsb
and
lock
loopne
cs
shrb
out
rorl
adc
jmp
add
and
jmp
cmp
push
pushf
ret
enter
pop
sub
insl
pushf
in
xchg
outsl
add
jp
fsubrp
in
adc
add
pusha
call
lea
pop
es
jge
or
popf
icebp
data16
add
fwait
cmp
sbb
and
push
stc
testb
push
aaa
inc
xchg
jbe
call
clc
pushf
dec
dec
sbb
arpl
mov
clts
orl
sub
jo
push
scas
mov
mov
and
inc
mov
paddd
mov
sub
scas
adc
xchg
mov
and
pop
cs
and
loope
pop
nop
out
or
subl
lret
xor
jg
fs
mov
xchg
rorb
adc
lods
jae
add
add
mov
jl
adc
inc
or
dec
mov
fcmove
cli
cmp
call
sub
push
jmp
call
out
scas
cld
mov
fildl
leave
addr16
fsubrp
mov
lods
cmp
imul
movsl
loop
add
addr16
sbb
inc
out
jp
divps
addr16
inc
lea
ja
mov
mov
ljmp
insb
aaa
xchg
inc
pop
mov
movsl
lock
out
sub
rclb
jmp
faddl
call
xchg
or
mov
pop
push
add
mov
dec
fs
inc
sub
in
stc
data16
imul
push
sub
call
insl
inc
jmp
rorb
or
mov
lock
pop
add
arpl
lods
sbb
inc
adc
stc
imulb
fdivl
inc
xor
pop
and
cli
jb
inc
sbb
xchg
or
into
aaa
push
or
add
cmp
lcall
jne
mov
add
adc
je
or
testb
idiv
lcall
fldlg2
orb
cld
mov
in
or
cmp
fstps
jecxz
imul
push
mov
mov
je
push
dec
push
sbb
sub
pop
call
incl
loopne
add
sub
xchg
push
je
adcb
xchg
outsl
push
lea
lds
mov
or
mov
mov
xor
jo
jp
cmc
pop
xor
sti
sub
xchg
das
push
xchg
jp
xchg
sub
jae
sbb
jae
sbb
jae
sbb
lea
cmp
add
jle
jmp
xor
scas
adc
mov
inc
push
test
push
int3
loopne
std
cli
mov
xchg
movsl
test
add
cli
lcall
push
mov
call
icebp
les
add
cmp
sbb
cmp
rcl
imul
divb
sbb
sub
lock
addr16
xor
cmp
outsl
inc
scas
out
loop
jns
lods
out
js
mov
xlat
pop
in
in
daa
mov
fwait
push
pop
stos
jmp
jns
int3
insl
lods
fwait
jmp
add
outsl
out
jb
add
lods
loop
jne
enter
loope
rcll
add
sub
jmp
sti
insb
mov
les
add
add
push
orb
mov
test
sbb
pop
stos
ficomps
fdivl
call
pusha
mov
fs
xchg
add
lods
sub
test
movsb
jbe
jmp
xor
movsb
call
lods
test
dec
pop
cwtl
inc
sbb
aaa
cltd
shr
mov
jp
rcrl
arpl
subl
add
pop
mov
add
imul
in
cld
add
pop
cmc
adc
sbb
xchg
imul
mov
dec
and
cmp
shrb
or
xchg
shr
xchg
shrb
add
leave
jge
test
mov
add
das
call
add
add
ret
loop
scas
inc
popf
add
or
jo
mov
and
fs
scas
add
xchg
or
stos
push
xchg
cmp
nop
aad
dec
shll
mov
bound
mov
cmp
push
dec
call
or
and
xor
call
jge
sub
cmp
pop
sub
test
pusha
add
pop
mov
and
sub
dec
pop
addr16
lock
stos
fistps
fstl
in
bound
inc
jmp
mov
push
sub
jno
mov
xchg
pop
cmp
scas
adc
adc
lahf
aad
scas
push
in
scas
adc
lret
out
dec
js
xchg
cmpsl
daa
cmc
mov
jnp
mov
add
mov
add
js
test
push
adc
movsb
add
aaa
mov
or
lods
xchg
subl
ja
cmp
dec
jno
lods
xchg
and
test
fs
or
xor
data16
daa
lahf
lret
enter
jmp
add
das
aam
fsubl
test
aaa
sahf
insb
bound
adc
push
adc
pop
jmp
pop
movsb
adc
pop
mov
and
jnp
push
add
lret
fidivrs
or
add
test
adc
xchg
in
mov
xor
mov
addr16
pop
and
add
fwait
inc
and
out
and
imul
ret
push
mov
add
mov
pop
inc
sub
fisttpl
sbb
fisttpll
js
add
out
cmpps
push
nop
inc
and
lcall
ds
into
call
scas
test
mov
fs
mov
arpl
imul
xor
scas
add
xchg
cmc
mov
lods
dec
jne
xchg
sub
pop
stos
fwait
xor
ss
fsts
xor
fldenv
and
ja
mov
imul
add
jae
stos
ja
lret
jle
ljmp
test
and
xor
scas
add
popa
sub
flds
jecxz
sbb
sub
decl
sbb
add
fdivrs
xchg
cmp
test
addr16
scas
in
fbstp
leave
mov
lret
fistpll
out
insb
dec
repz
dec
pushl
ss
ret
in
icebp
cwtl
addr16
aaa
mov
aas
xchg
push
and
mov
out
or
pushf
adc
movsl
xchg
jecxz
cld
dec
jmp
sub
sarb
xchg
adc
mov
fmull
in
add
mul
jle
icebp
in
ds
lret
pop
enter
in
dec
add
mov
or
jb
inc
and
inc
sbb
out
sbb
jmp
es
jo
inc
and
inc
sbb
pop
pop
jle
sub
cli
imul
call
insl
lods
xchg
sub
jmp
cli
je
inc
sub
dec
imul
das
jo
jecxz
icebp
add
xor
test
sub
je
mov
dec
xor
jmp
je
pop
push
pop
jne
add
addb
push
push
int3
jae
inc
out
pop
ja
stos
fildl
call
mov
push
add
stos
fildl
call
mov
xor
ja
stos
fildl
jmp
mov
cmp
vmwrite
rcrb
imul
call
push
shrb
mov
into
or
leave
mov
movsb
insl
dec
test
sub
sti
jmp
bnd
sbb
pushf
int3
ss
imul
adc
lock
mov
cmp
sbb
out
int3
add
icebp
decl
mov
pop
sub
mov
dec
xchg
out
mov
cli
add
pop
in
xorl
ss
sub
xchg
mov
repnz
or
jae
fs
add
fs
addr16
je
add
xchg
sbb
testl
lahf
loopne
sub
mov
outsl
int3
outsl
fildl
mov
mov
xchg
fidivrs
jbe
mov
sub
aas
adc
cmpsb
mov
mov
xlat
mov
xlat
mov
mov
inc
movsb
push
xchg
daa
shl
cmp
mov
xchg
sub
add
sti
xor
xor
add
mov
stos
mov
imul
pusha
push
in
pop
sbbl
xor
add
adc
and
cwtl
push
rcrb
xchg
push
out
sbb
dec
adc
fiaddl
pusha
icebp
push
call
mov
push
lds
inc
jmp
jae
mov
and
fnsave
stc
cld
fcompl
jmp
aam
and
mov
ds
jne
out
icebp
in
outsl
cmc
je
je
inc
jo
int3
adc
cmpsb
dec
incl
or
or
test
dec
dec
sarb
and
push
clc
jb
fiadds
xchg
scas
stc
js
orl
push
aas
add
punpcklbw
out
stc
pop
xor
adc
adc
adc
and
add
je
add
xor
inc
add
push
add
xchg
rolb
in
movsl
dec
or
imul
dec
fnstsw
xor
icebp
add
leave
jnp
xchg
jge
and
add
sbb
and
or
outsl
add
adc
fwait
pop
adc
sbb
adc
add
xor
decb
in
cld
std
push
xor
xchg
sbb
or
push
cmp
add
mov
add
test
or
lock
jp
jnp
xchg
addr16
outsl
jecxz
mull
mov
call
nop
jp
jl
jne
adc
addr16
xlat
mov
shlb
pop
push
mov
test
push
mov
jl
and
addl
lret
jae
cltd
pop
scas
addr16
aaa
push
jg
imul
mov
daa
jecxz
test
out
dec
gs
rcrb
xor
pop
stos
add
je
btc
out
jo
jg
stos
xchg
sub
das
leave
jae
out
arpl
rorb
cli
jmp
mov
out
add
lods
fistps
dec
movsl
mov
cli
jmp
das
jecxz
jmp
push
pusha
ret
pop
inc
jmp
mov
loopne
arpl
push
add
mov
add
stos
cmp
shlb
mov
cmp
inc
mov
nop
enter
cmpsb
add
mov
dec
jns
cwtl
pop
xor
inc
xchg
enter
add
push
enter
inc
jns
inc
pop
or
dec
les
inc
push
gs
popa
add
inc
enter
sub
lret
adc
mov
add
and
add
add
stc
xor
jecxz
mov
stc
jno
add
dec
mov
inc
add
stc
inc
add
inc
add
sub
or
dec
push
inc
scas
mov
or
adc
daa
cld
cltd
or
adc
adc
add
fisttpl
js
mov
scas
sub
das
data16
push
add
mov
or
adc
mov
testb
js
mov
mov
outsb
mov
cli
mov
xchg
inc
or
aaa
inc
icebp
stos
or
inc
scas
por
xchg
in
or
addr16
aad
xlat
adc
cwtl
jne
add
add
jl
and
or
addr16
mov
mov
jns
push
cmc
ret
js
xchg
pop
insb
iret
or
addr16
jmp
stos
out
inc
pop
xlat
adc
mov
jl
imul
js
daa
hlt
or
addr16
mov
addr16
mov
mov
add
imul
add
cmp
add
jb
jmp
lcall
lods
lods
data16
add
sti
out
jmp
and
stos
stos
add
sub
sbb
xor
sub
insb
add
add
sti
cmc
inc
jmp
insb
add
push
sbb
add
test
cwtl
xchg
or
lods
xchg
or
add
dec
jmp
mov
xor
clc
stc
xchg
xchg
rcrl
xchg
dec
inc
cld
stos
mov
jmp
mov
pop
sub
mov
cmpl
mov
push
dec
mov
mov
xchg
sbb
add
loop
sti
sub
or
adc
mov
mov
shlb
insb
cmp
iret
push
mov
out
mov
lcall
data16
cli
scas
mov
xor
sbb
pop
in
je
jns
cli
pop
or
cmpsl
push
jmp
test
sub
or
gs
insb
jb
mov
push
jae
xchg
xchg
rcll
xor
mov
jle
cli
sti
sbb
add
cmp
je
add
and
scas
inc
sti
xchg
lret
loopne
lret
jmp
in
or
scas
adc
push
fnstenv
and
paddd
js
push
xchg
mov
mov
add
addb
in
add
add
jle
jnp
add
lods
out
loopne
mov
push
cli
add
mov
lods
pop
lahf
imul
scas
in
stc
out
mov
xchg
xchg
hlt
dec
iret
imul
ljmp
jb
enter
push
shrl
aam
xor
add
push
loope
pop
add
or
in
lcall
pop
mov
stos
cld
and
daa
add
lock
jmp
mov
mov
mov
dec
jnp
xchg
stos
ljmp
cs
or
fs
jbe
subl
dec
xchg
lods
xchg
stc
aam
push
inc
jmp
jmp
std
push
xor
adc
xchg
cmpsl
add
insb
adc
adc
jnp
adc
mov
add
insb
in
andb
aas
pop
lcall
ljmp
and
and
push
add
loopne,pt
xchg
addb
or
cs
data16
sti
push
add
xchg
and
fs
mov
pop
mov
out
dec
clc
adc
adc
aad
pop
mov
push
mov
adc
adc
faddl
inc
js
cli
dec
popa
pop
clc
adc
imul
adc
add
inc
sbb
add
cmp
xchg
scas
push
pop
pop
and
stc
and
call
cmp
aam
push
incb
pop
cmpsb
dec
adc
mov
mov
xor
and
movsl
cli
rolb
pop
scas
push
mov
nop
push
push
and
and
fisubl
jo
into
pop
xor
adc
mov
leave
and
fwait
jo
or
xchg
out
jmp
or
sar
leave
push
lds
addr16
lods
xor
inc
mov
jg
inc
jle
inc
pop
pop
addr16
jno
fldenv
or
int3
jle
pop
mov
enter
jle
inc
adc
addr16
jl
xchg
sti
xor
insb
jp
daa
sbb
add
push
cmpsl
add
ret
je
xchg
inc
sbb
nop
pop
or
in
xor
mov
cs
cwtl
in
add
mov
jo
adc
jo
add
lods
mov
and
mov
add
cmp
adc
xchg
in
cmc
sub
addr16
push
sahf
jae
bound
dec
icebp
fs
sti
pop
jg
rcr
cmpsl
dec
rolb
stc
jmp
loopne
stc
mov
aas
jae
xchg
test
adc
aas
ljmp
js
or
hlt
xor
add
jae
das
mov
or
ja
ror
stc
into
cs
cmp
add
cmp
and
lea
call
testb
mov
or
push
adc
je
pop
incb
decl
sbb
lea
inc
adc
loopne
idiv
lds
out
fdivr
sub
add
in
mov
sbb
or
sar
loope
in
divb
inc
out
mov
xchg
dec
insb
mov
mov
popa
xchg
jae
jae
mov
mov
repz
push
enter
cmp
sti
and
js
out
pop
pushl
js
pop
xchg
scas
fdivr
pushf
shlb
jno
jb
jl
jecxz
mov
fidivrl
dec
and
jno
jno
std
pushl
jno
out
rcll
xchg
push
mov
adc
xchg
cld
ja
add
mov
sbb
mov
jne
xlat
dec
mov
dec
mov
outsb
push
shrl
nop
addr16
inc
xor
fcmovnb
add
stos
shll
sti
pop
or
je
or
add
out
or
sub
adc
cmp
cmc
out
push
pop
xchg
sbb
insl
xchg
daa
insl
jbe
mov
or
add
cli
and
addr16
cmp
mov
add
daa
xlat
sub
imul
xchg
add
lods
dec
aad
dec
and
and
aam
inc
jmp
mov
jmp
lea
xadd
jmp
pushf
ret
std
call
pop
pop
sub
jmp
outsl
mov
jmp
and
push
mov
test
cld
adcb
sub
pop
movsb
jp
or
push
push
jnp
jle
arpl
mov
mov
lods
add
int3
xchg
cli
add
jp
mov
cmp
rclb
test
xchg
rorb
je
lds
cmp
add
test
add
and
pop
mov
sub
ret
call
call
or
push
das
mov
add
pop
push
cmp
dec
dec
mov
xor
and
cmc
push
sahf
sti
idiv
xchg
out
je
add
outsl
sbb
les
sbb
push
out
push
lret
add
ficoml
addr16
mov
or
push
sbb
mov
xchg
subl
ja
mov
aad
cs
xor
mov
or
jo
out
or
push
add
cmpsb
addr16
push
call
push
jo
out
repnz
call
sub
or
int3
aas
add
gs
clc
in
addr16
adc
mov
movsb
push
mov
push
in
xchg
jo
out
push
out
jmp
sbb
push
roll
push
in
push
repz
lea
out
cmp
cmp
mov
pop
sub
div
imul
inc
movsb
in
push
or
xchg
and
addr16
add
xor
add
fistpl
xchg
mov
mov
mov
mov
jmp
pop
in
int
xchg
test
add
and
lods
addr16
xchg
repnz
jecxz
and
scas
add
jnp
insb
or
sbb
or
lods
out
hlt
test
inc
jmp
test
sub
test
jl
add
fsub
dec
or
push
icebp
mov
je
sbb
imul
incl
mov
add
jno
and
je
push
popa
lea
push
mov
mov
jb
and
inc
icebp
je
je
call
fsubl
push
pop
cmp
add
add
test
push
add
imul
mov
clc
pop
test
push
addl
cmpsl
std
incl
xchg
sarb
sub
xchg
mov
mov
hlt
lea
jmp
mov
or
jns
js
xchg
sar
ljmp
add
inc
push
or
test
insb
test
imul
cli
fimull
test
jecxz
cld
cmp
lock
mov
iret
std
jmp
push
shl
mov
mov
bound
push
and
js
mov
add
fnstsw
shr
int
scas
mov
push
inc
std
ljmp
data16
jae
aam
arpl
and
jae
and
pop
out
adc
fs
pop
push
je
add
rcl
sub
lret
or
fists
pop
xchg
out
data16
jl
repnz
pop
in
icebp
out
or
arpl
push
or
lcall
and
scas
addr16
xchg
out
scas
gs
scas
decl
xor
div
mov
pop
mov
mov
add
das
inc
lock
daa
inc
pop
inc
jnp
stc
dec
push
clc
je
cli
xchg
mov
mov
stc
fs
jo
or
mov
call
iret
xchg
call
insb
lahf
jae
mull
jecxz
out
fwait
test
jge
aas
loopne
cld
sub
or
shr
shlb
cmp
bound
xchg
jle
cli
sahf
cmpsl
sub
loopne
sub
cmpsb
fs
stc
add
push
leave
push
and
push
outsl
clc
lea
mov
xor
idiv
push
adcl
imul
sbb
adc
sbb
add
mov
in
or
or
incl
and
mov
in
jmp
in
add
lcall
push
ucomiss
push
xor
call
aas
dec
add
std
gs
mov
std
mov
push
push
push
lods
cli
mov
jge
or
addr16
in
iret
mov
pop
fldpi
or
adc
and
mov
add
incb
and
std
pop
cli
xorb
xorl
ss
mov
cmp
aas
scas
jge
or
gs
mov
scas
scas
pop
mov
pop
in
data16
adc
ss
jns
mov
adc
out
push
repz
adc
enter
add
dec
inc
add
jp
adc
arpl
xchg
pushf
call
jne
bound
adc
jne
out
sbb
sti
loop
mov
xchg
lcall
and
jne
out
imulb
fdivl
rolb
lret
clc
insb
pop
mov
dec
add
repz
cmp
stc
hlt
add
sub
sahf
mov
mov
out
nop
push
mov
xor
sub
adc
nop
cwtl
mov
pop
inc
jmp
add
addr16
ret
sbb
in
push
repnz
sub
incl
xchg
mov
daa
mov
sbbl
dec
cmp
cltd
test
ret
push
xchg
add
push
or
rcl
stc
incl
inc
and
sbbb
out
add
push
into
cs
idiv
cmp
dec
and
fcmovnb
mov
aas
sbb
mov
sbb
aad
cwtl
loope
gs
testb
mov
repz
jnp
pop
mov
xchg
xchg
xchg
xor
and
add
inc
push
push
add
arpl
jmp
jecxz
jle
addb
scas
lock
das
xor
sub
inc
fwait
pop
cld
xor
adc
sub
pop
call
inc
jae
fstp
and
jns
and
jns
and
out
imul
jge
xlat
xor
pop
cld
rolb
xor
add
movsl
xchg
sub
sub
cli
lods
xchg
add
and
pushaw
stc
mov
out
shlb
and
hlt
fmuls
clc
pop
cli
push
rolb
addr16
cmp
fwait
or
aaa
mov
cld
dec
mov
cmpsl
push
sub
sub
loopne
imul
lcall
pop
pusha
mov
add
cmp
int3
aaa
pusha
mov
add
bound
shr
out
xor
pop
bnd
insb
iret
mov
xchg
mov
inc
pop
mov
outsb
pop
sub
fwait
mov
lock
imul
out
sub
incl
lret
xabort
test
pop
inc
sub
add
add
xor
sub
and
pop
xor
add
lods
loop
insb
push
mov
jb
inc
and
imul
pop
inc
sub
daa
inc
xor
push
in
xchg
cmp
filds
dec
add
or
xchg
bound
sub
mov
popl
add
jge
icebp
or
mov
test
cli
mov
idivb
pop
shr
loopne
call
ret
mov
sub
mov
mov
faddp
mov
aas
adc
lret
mov
aas
sbb
dec
test
lcall
insl
das
sub
aaa
or
add
mov
sub
decl
je
adc
push
adc
out
fscale
rcr
jmp
jmp
cld
nop
add
lret
and
xchg
cld
jo
inc
pop
or
mov
pop
scas
jge
cmp
xor
push
xor
and
xchg
and
es
and
pop
adc
and
add
scas
push
lock
push
push
pop
jmp
ds
jmp
gs
std
mov
idivb
jmp
ret
sbb
xlat
gs
cli
rolb
and
shlb
iret
roll
lcall
inc
call
jns
sub
loop
or
pop
call
adc
sbb
enter
cmp
jns
mov
mov
pop
mov
arpl
pop
ret
repz
and
mov
leave
add
mov
pusha
push
aaa
fwait
ret
repnz
dec
pop
pop
xlat
arpl
mov
jg
push
insb
jnp
out
in
mov
inc
adc
fwait
add
xchg
in
sbb
cmp
call
fcmovb
iret
test
lods
xchg
test
jge
and
lock
pop
cmpsb
and
aad
pop
in
ret
inc
cmp
mov
pop
cmp
mov
rcll
mov
cmc
and
and
sbb
ret
lock
jl
hlt
call
jbe
pop
and
sub
add
test
pop
xchg
int
in
rcrl
xor
cmp
inc
testb
pop
adc
pop
stc
call
cltd
inc
or
movsb
loope
xchg
inc
testb
cmp
dec
sub
pop
jmp
jnp
stos
sub
push
test
push
mov
push
push
adc
push
stc
call
push
fdivr
dec
aas
xor
mov
orl
add
cmp
test
ljmp
and
aad
je
jecxz
inc
scas
aam
cli
add
push
cmp
xor
cmc
ss
xchg
xchg
cmpb
fcoms
push
pop
inc
dec
add
mov
sub
lret
std
cs
dec
pop
pop
test
add
outsl
stos
sub
and
pushf
xchg
scas
into
std
out
and
xchg
pop
mov
cmp
das
fnsave
jl
add
into
gs
gs
pop
cmpl
push
jns
mov
push
pop
jmp
add
in
push
xor
mov
sub
xor
mov
insb
xor
outsl
loopne
test
mov
iret
out
gs
dec
add
test
lods
std
lock
ja
pop
cmpl
jl
sub
add
pop
jmp
add
ljmp
or
out
and
xchg
push
xor
push
in
xlat
jmp
cmp
add
lods
iret
xchg
loope
inc
stc
cmp
push
bound
dec
lahf
pop
ljmp
lods
add
stc
es
addb
mov
add
stc
xlat
sbbl
jg
aaa
movsb
add
pusha
push
lret
icebp
lret
fcmovu
sub
das
in
dec
pop
pop
ljmp
imul
call
xor
stc
xchg
fildl
add
xchg
mov
call
cmp
mov
jmp
or
ja
mov
cmp
incl
loope
rcrl
lock
in
inc
adc
mov
decb
add
testb
out
inc
cld
faddl
lock
mov
cmp
jecxz
or
cmp
xor
add
cs
push
scas
mov
push
mov
pop
push
cli
and
jp
add
mov
pop
das
frstor
lret
add
mov
cld
out
push
inc
out
jg
cli
fcompl
inc
mov
xchg
ja
dec
fstps
mov
xor
lret
loopne
xchg
mov
dec
lret
sub
xlat
add
pop
and
and
xchg
mov
and
call
decb
add
icebp
fldl
dec
add
jmp
loopne
jle
inc
and
cmp
data16
test
sub
addr16
pop
faddl
mov
mov
out
int3
les
outsb
lds
in
adc
cmpsl
push
mov
loope
daa
mov
loopne
pop
add
rclb
cmpsl
mov
inc
adc
and
in
sub
sub
call
add
dec
cmp
fstl
test
lahf
add
add
pusha
in
xor
sti
lods
call
stc
sub
in
xor
stc
cmpsl
cmp
push
pushf
pop
sbb
test
repz
int3
lods
addr16
jmp
cmp
mov
mov
sub
mov
mov
cs
jb
in
jb
fimuls
mov
stos
cmpsb
dec
inc
mov
xor
cli
add
imul
fstpl
and
repz
cs
idiv
sub
add
push
add
jnp
idiv
dec
movsb
add
and
push
mov
xchg
mov
mov
add
jo
cmp
decl
sub
call
cmpsl
fildl
shll
cmp
mov
dec
adc
sub
call
cmpsl
fildl
shll
cmp
cmp
dec
adc
sub
call
out
scas
cmc
push
out
sub
cwtl
dec
mov
enter
out
cmc
push
out
gs
cltd
lds
ds
and
out
out
cmc
push
out
insl
jne
cmpsl
mov
ds
and
out
cs
push
outsb
movsl
jbe
dec
mov
dec
rclb
cmc
push
outsb
in
ds
dec
pop
jae
dec
test
pop
and
jne
pop
sub
dec
scas
and
push
sub
inc
scas
rorl
out
or
sub
subps
mov
jp
adc
sub
movsl
cld
lock
pop
pop
xchg
rcrb
xchg
cmp
sub
stc
andb
mov
cli
push
dec
xor
xor
lods
cltd
daa
pop
stos
out
xor
mov
mull
add
outsb
leave
jo
pop
cld
clc
fdivrl
scas
addr16
add
addr16
jp
aaa
add
ret
je
call
std
in
cmp
notl
call
stos
ljmp
repz
sub
sbb
inc
sub
aam
adc
fstpl
bound
xchg
insb
aaa
mov
lock
push
sbb
push
xor
jne
and
iret
adc
xchg
loop
ss
xchg
pop
xchg
inc
add
inc
loope
inc
call
mov
add
fdivp
push
pop
sub
push
adc
cmpsl
stc
mov
shll
adc
arpl
fisubrs
inc
stos
xor
mov
cmp
scas
sbb
test
sub
decl
stc
mov
sbb
negb
lea
lret
movsl
imul
movsl
push
push
loope
xor
sbb
sub
cmpsb
stc
test
mov
adc
adc
mov
xor
test
ret
xor
sub
std
push
and
lods
push
and
jp
dec
inc
add
leave
lods
addr16
push
cs
cmp
sarb
mov
sbb
lods
enter
jae
int3
inc
das
jae
dec
leave
and
jnp
add
lahf
dec
adc
mov
scas
push
enter
outsl
rcrb
popa
jge
inc
sub
dec
test
ret
xor
test
inc
pop
insl
ret
std
test
and
sti
addr16
pop
scas
pop
jmp
mov
fdiv
fldt
xor
fld
inc
into
shll
xchg
fs
sbb
mov
fs
jl
enterw
cmpsb
fcoms
and
sti
test
int
mov
fcom
lret
mov
xor
dec
sub
pop
punpckhwd
inc
mulb
add
int3
arpl
mov
nop
lgs
aas
loop
xor
sub
fists
negl
aad
pop
or
aas
loope
inc
sub
insb
in
pop
inc
pop
jl
push
fdivl
popa
jmp
mov
adc
shrb
das
sbb
jae
fsubr
xlat
sahf
int
and
scas
scas
addr16
outsb
arpl
out
add
add
rorb
in
or
jne
stc
mov
out
je
sbb
adc
add
xlat
mov
mov
dec
iret
add
pushl
or
or
insb
sub
iret
ja
incl
test
cmp
vfrczsd
and
jge
cmp
imul
push
imul
sahf
and
lea
mov
push
jmp
push
inc
push
aas
and
insl
add
push
adc
jns
add
push
std
ljmp
xchg
inc
push
xor
cmpl
rorb
js
loop
lcall
adc
sarb
add
insl
inc
xchg
inc
add
fimuls
call
sub
lret
test
push
adc
inc
sub
stos
test
xor
or
mov
call
jns
pop
lds
adcl
test
inc
sub
sub
sub
in
pop
xor
scas
iret
mov
arpl
mov
pop
sbb
out
jbe
mov
inc
fsubl
ltr
pop
out
scas
test
in
jl
ljmp
cmp
sub
cmp
adc
outsb
sbb
fsubl
add
sub
in
pusha
cwtl
mov
sbb
jp
out
cwtl
addr16
sub
mov
fnstenv
mov
add
les
mov
mov
jmp
xchg
in
lret
int
stc
ds
test
mulb
and
repz
and
ljmp
push
lock
sbb
pop
mov
mov
jmp
aaa
stc
aam
fs
jmp
movsl
movsb
sub
jmp
ja
call
call
xchg
cli
cmpsb
test
lahf
imul
test
xlat
ja
xchg
imul
cmp
incl
mov
xor
sub
jnp
call
mov
mov
popf
shrb
push
rcl
adc
addr16
pop
and
jp
jb
jp
pop
sbb
xor
mov
jae
mov
jae
call
mov
je
lea
push
and
nopl
fiadds
cmp
push
push
mov
loop
and
idiv
lret
fcomi
or
rcl
and
push
out
mov
inc
pop
jno
mov
cli
mov
js
lret
insb
pop
mov
lods
into
cmp
xchg
insb
and
inc
std
inc
cli
add
sub
test
mov
fdiv
js
add
hlt
mov
rclb
mov
call
aas
scas
int
xchg
inc
test
pop
popa
addr16
jp
mov
adc
fbld
and
mov
clc
push
sti
stc
push
loop
sti
mov
ljmp
sub
mov
sub
mov
jnp
out
shlb
movsb
fmuls
jmp
add
pop
js
mov
js
mov
jns
mov
ror
jecxz
fmull
fisttpl
fcompl
xchg
test
or
and
xchg
sbb
out
xchg
pop
mov
scas
addr16
add
mov
test
sbb
xchg
mov
ds
shlb
clc
inc
xchg
popf
adc
dec
faddl
jle
adc
in
and
sbb
int
in
cld
addr16
sub
and
stos
pop
cmp
je
mov
xor
jmp
jb
xchg
divb
cmpsl
xchg
int3
in
pop
mov
aaa
mov
mov
stc
cld
shlb
movsb
or
jg
or
incl
fs
mov
mov
or
mov
push
adc
xor
call
mov
jno
mov
fldl
add
stos
stc
xor
and
shll
cmp
mov
jb
sub
scas
faddp
push
scas
loop
mov
rolb
leave
pop
mov
mov
icebp
loope
dec
or
cld
lret
sbb
scas
inc
into
add
mov
cli
add
dec
cli
add
cmpl
std
jae
pop
movb
add
ljmp
stos
sbb
je
maxps
adc
mov
les
ss
push
pop
stc
orb
stc
dec
sub
xchg
fsubrs
fadds
add
mov
cmp
sbb
inc
cli
add
add
outsl
cmp
jae
int
pop
and
add
lret
gs
adc
arpl
mov
cld
pop
pop
adc
cmp
lods
loop
inc
lods
mov
movsl
pop
scas
xor
das
push
mov
pop
outsl
addr16
push
mov
inc
out
xor
pop
xor
call
das
mov
shll
add
out
jo
sub
insb
mov
add
daa
out
adc
cmc
or
lea
shll
inc
popa
loope
pushf
test
dec
adc
lods
dec
stc
fisubs
push
test
in
mov
sub
sub
fadds
jb
sar
scas
push
mov
arpl
or
imul
cmpsl
jo
test
in
jns
sub
repz
pop
jb
mov
in
xor
in
fwait
insb
sbb
pop
test
cld
bound
stc
pushf
xchg
mov
movsl
test
stc
aas
xor
add
divl
inc
mov
cmp
inc
sbb
addl
mov
loope
rclb
mov
movsl
pop
add
pop
mov
add
movsl
pop
add
push
pop
jge
mov
in
notb
fcom
call
or
insl
push
mov
arpl
inc
fists
lcall
or
loopne
je
iret
push
add
lret
dec
sbbl
ljmp
jae
and
scas
in
into
push
add
lods
test
mov
adc
mov
pop
cld
out
clc
push
pop
xchg
mov
fildl
repnz
hlt
sub
repnz
cmp
popa
push
mov
cmp
inc
ss
addb
paddq
mov
inc
inc
je
push
or
sub
mov
scas
add
mov
mov
lods
mov
sub
cwtl
daa
fldl
mov
jo
int3
ja
pop
xor
or
xchg
mov
or
adc
mov
callw
in
mov
out
sbb
push
jmp
add
mov
xchg
mov
pop
insb
push
nop
leave
out
stc
data16
pusha
iret
int3
outsl
inc
int3
jne
stc
jmp
in
jmp
inc
pop
adcl
add
push
xorl
add
and
stc
imulb
sbb
or
enter
fwait
mov
mov
add
data16
add
adc
xchg
sub
xchg
int
test
xor
and
mov
xor
mov
sarb
rcrl
and
std
cmp
jge
enter
xchg
enter
orl
shl
fs
test
flds
fidivrl
mov
or
adc
lea
dec
push
mov
rol
or
push
fdivr
sbb
add
inc
and
movsl
xor
stc
loope
decb
lea
not
negl
pop
mov
test
mov
and
or
xor
es
mov
adc
push
jo
add
adc
ljmp
fcoms
inc
add
mov
sbb
dec
mov
shrb
subl
popa
cmp
xchg
popa
pop
add
jnp
enter
mov
mov
lods
push
xor
add
fdiv
outsb
movsl
push
xor
clc
fnstcw
mov
das
aaa
cmc
jb
addr16
push
and
stos
out
flds
add
cmp
cmp
add
xor
sub
cmp
shl
mov
cmpsb
roll
roll
repnz
andl
inc
lods
addr16
sarl
rorb
sub
cmc
lds
xor
lcall
lds
shrl
inc
gs
jnp
add
push
push
cmc
cmpl
jae
push
dec
or
jl
inc
jmp
lods
mov
popa
nop
or
nop
jno
jmp
xor
les
lahf
out
sub
in
les
pusha
stc
mov
inc
xor
lahf
movsl
test
add
add
or
fucomip
mov
xor
stc
insl
jae
or
sar
sub
int
push
roll
cmp
scas
jmp
decl
push
pop
mov
call
out
add
push
cltd
dec
push
fnstsw
cmp
inc
mov
adc
testb
inc
push
add
jmp
cli
incl
adc
add
add
cli
lret
jp
stc
mov
mov
test
xor
mov
repz
hlt
cmp
push
mov
add
movsb
mov
dec
mov
inc
jle
int
xor
and
jmp
sbb
mov
and
dec
add
xor
dec
mov
adc
sarb
scas
fcoml
cli
insb
push
ss
mov
sub
gs
fidivl
adc
movsl
mov
ret
add
jb
sub
lods
sar
test
rcrl
idivl
push
xor
cmpb
jnp
scas
addr16
add
xchg
loope
mov
hlt
or
mov
add
movsb
dec
fbstp
stos
sti
ret
cmpb
cmp
call
mov
jae
xor
add
inc
or
push
jbe
cmp
inc
out
mov
add
gs
ss
pop
jbe,pt
filds
pop
out
fsubrs
pushf
addr16
std
sub
or
cmp
mov
into
movb
outsb
cmp
lods
adc
lock
lods
addr16
inc
jmp
jecxz
add
repnz
out
fdivrl
and
jb
out
push
out
addr16
inc
push
stc
aad
jno
ja
data16
test
xor
sbb
subl
outsl
jge
xor
mov
fstpt
call
cltd
xor
adc
add
cli
fidivrs
sub
lods
addr16
xor
add
rcrb
sbb
push
adc
inc
hlt
decb
inc
jmp
testb
call
jle
or
jbe
inc
adc
in
cli
decb
xchg
add
sub
add
popf
divb
cmp
cltd
lcall
cltd
inc
jmp
testb
mov
je
gs
sub
add
leave
arpl
add
jne
mulb
dec
jmp
adc
lods
mov
dec
xor
adc
push
jo
inc
pop
in
mov
call
icebp
sub
incb
xor
mov
xchg
cli
mov
je
push
xor
push
add
dec
fscale
push
iret
std
cmp
fmul
cs
dec
ss
inc
shrl
mov
std
ss
mov
and
cmp
or
cs
jns
ja
lods
sar
xchg
addr16
mov
fadds
loopne
mov
iret
adc
cmp
in
scas
repnz
aad
xor
lldt
sbb
in
aam
xor
adc
push
mov
jl
adc
out
scas
repnz
xchg
nop
sbb
mov
fwait
shr
add
sti
xor
fwait
push
xor
roll
mov
add
lods
sbb
out
shll
outsl
sub
pop
call
pop
push
mov
push
lods
ret
jle
and
lods
test
and
les
fbld
push
xchg
scas
sbb
cmc
mov
std
nop
pop
call
imul
push
mov
lods
add
mov
mov
fldt
add
push
push
mov
ret
or
stc
fsubrp
mov
add
mov
xor
inc
imul
cmp
popa
aas
push
dec
shll
push
push
out
add
mov
dec
lea
fisubrl
inc
jne
lahf
push
push
lahf
push
mov
les
lcall
adc
push
stc
mov
outsl
add
mov
stc
call
mov
push
lods
push
pop
or
cmp
call
aad
lcall
addr16
jbe
lea
scas
mov
add
sub
std
jae
mov
adc
push
loop
pop
adc
xchg
push
stos
pop
scas
sbb
cli
pop
sub
lcall
push
test
cmpsl
iret
std
push
int
dec
sub
add
scas
jb
jle
iret
push
xchg
int
or
repnz
or
add
scas
int3
jbe
sti
ret
scas
sarb
dec
loopne
cli
pop
jnp
and
iret
std
ljmp
js
ds
and
jg
add
addr16
cmp
out
pop
test
sarl
out
insb
test
sub
outsl
push
daa
add
and
xchg
xor
fiadds
scas
addr16
add
or
call
scas
mov
out
mov
jp
xor
out
addr16
scas
addr16
lods
xor
sbb
popf
push
sub
sub
or
in
mov
ja,pn
sbb
lods
add
or
pushf
dec
repnz
jmp
or
stos
lock
das
mull
jmp
or
mov
add
test
fs
ss
mov
dec
add
dec
scas
mov
loop
lds
and
stc
aam
imul
and
sar
in
inc
add
fs
xor
inc
add
add
inc
shlb
add
add
push
mov
mov
repnz
sbb
push
incb
mov
jne
mov
add
aaa
sbb
push
incb
push
add
cmp
call
push
and
pop
test
add
arpl
add
push
xor
xchg
dec
mov
jne
call
add
repz
mov
push
test
mull
aam
push
sub
add
out
imul
repnz
bound
cli
mov
xor
jns
scas
into
std
jle
in
pop
popf
fwait
dec
jno
and
lcall
scas
into
std
je
inc
mov
jns
sarl
push
loopne
lods
pop
ss
loopne
js
mov
out
addr16
sub
sbbb
adc
inc
jae
mov
in
xor
cmp
pop
sub
mov
fbstp
lcall
addr16
mov
movsb
push
outsb
cmp
inc
mov
add
imul
sbb
loop
sbb
repnz
add
mov
mov
imulb
cmp
stc
adc
clc
loope
mov
stc
aas
addr16
add
mov
callw
stc
jmp
pop
fisttps
mov
cmc
mov
xor
mov
shrl
int
sub
push
test
or
clc
insb
cmp
or
xchg
fmuls
je
pop
mov
xor
push
mov
add
add
fbstp
dec
cmc
insb
mov
test
addl
add
cld
add
pushf
mov
dec
push
sbb
inc
add
sub
add
cmpsl
sbb
or
adcb
test
call
inc
xchg
notb
and
inc
and
push
dec
and
adc
es
and
mov
cwtl
dec
push
dec
addb
push
mov
mov
fdivr
xchg
cmpsl
mov
sub
add
add
flds
push
mov
jbe
sbb
inc
jae
aam
je
cmp
cli
ret
dec
faddl
and
and
jae
adc
xchg
adc
xchg
adc
test
in
push
idiv
fcos
jg
pushf
daa
inc
jle
sti
mov
cmp
push
add
lock
outsl
mov
mov
add
shrb
lcall
mov
xlat
cmpsb
sub
es
pop
ret
push
cmp
shrl
sub
adc
sbb
cltd
inc
loopne
fists
fldlg2
test
ret
adc
insb
icebp
sbb
icebp
add
pop
sbb
movzwl
add
sub
cmpsb
iret
sub
cmp
pop
dec
iret
add
sbb
mov
out
imul
sbb
and
stos
in
rclb
adc
fstpt
ret
clc
sub
jnp
fadds
jmp
fldl
mov
push
dec
mov
xor
call
cmp
mov
mov
addr16
xchg
mov
stc
fcmovu
or
mov
int
mov
xchg
cli
adc
ret
call
push
sub
xchg
cmp
sbb
stc
add
bound
imul
xor
add
cs
and
sar
sarl
lea
mov
lock
add
mov
inc
add
lock
sbb
mov
add
popa
dec
adc
gs
pop
add
cmp
add
xlat
das
mov
call
scas
dec
inc
pop
imul
pop
enter
jno
mov
xchg
jecxz
mov
mov
lods
or
mov
repz
scas
inc
call
insb
mov
push
stc
push
inc
inc
jae
cmp
ljmp
jne
mov
fstps
adc
lods
mov
jmp
add
pop
divb
add
mov
pop
fisubrl
call
addr16
inc
cwtl
movsb
outsb
test
enter
dec
mov
xchg
ret
insl
loope
sbb
out
lods
addr16
nop
jg
mov
or
js
mov
add
mov
mov
jmp
pop
push
jecxz
daa
leave
xchg
sub
out
clc
inc
jmp
or
sbb
scas
ljmp
cmpsb
in
add
adc
inc
shrb
mov
xor
out
xchg
fwait
lret
out
in
add
sub
addr16
scas
cli
clc
test
sub
movb
in
outsb
mov
adcl
cld
mov
lret
lret
out
or
sub
addr16
mov
sbb
push
fildl
add
mov
push
and
add
and
mov
inc
sbb
test
inc
pop
pusha
lock
mov
in
jnp
fidivrl
mov
test
add
jl
dec
push
loope
icebp
adc
arpl
ret
inc
dec
add
mov
loopne
add
loopne
add
fiaddl
loopne
push
add
movsl
xchg
mov
pop
addl
movsl
cltd
mov
mov
inc
sub
ds
movsl
mov
mov
cmp
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
push
call
popa
es
out
jb
xchg
dec
lret
clc
cwtl
or
xchg
dec
pop
ljmp
divps
add
add
xchg
push
int3
scas
mov
adc
clc
mov
decl
push
pop
nop
scas
mov
les
aaa
cmpsb
mov
iret
sti
dec
es
scas
mov
or
ja
call
mov
jmp
inc
cmpsl
sti
scas
addr16
or
jo
scas
rcr
inc
daa
mov
fisubs
push
enter
scas
test
adc
mov
enter
shrb
push
cmp
cwtl
mov
clc
sub
out
xor
testl
sub
jl
loope
daa
loope
imul
mov
out
mov
mov
rep
bound
jge
stos
add
add
lods
stc
pop
call
test
aam
mov
cltd
loope
cmpsl
outsb
data16
pop
dec
pushf
sbb
idivl
add
addr16
stos
stc
jmp
and
and
out
sbb
lock
or
push
xchg
jmp
lods
jp
imul
jmp
sbb
testl
dec
lods
jb
das
mov
stc
cmp
mov
in
dec
testb
enter
mov
popa
add
idiv
imul
dec
push
mov
fistpll
and
pop
inc
fdivrs
sbb
jmp
xchg
lret
inc
xchg
call
sbb
unpcklps
idiv
dec
jmp
pop
add
push
adcl
add
repnz
hlt
dec
push
sti
mov
dec
mov
xchg
out
incl
loop
je
fimuls
es
out
sub
push
xor
sbb
cld
adc
mov
mov
movq
mov
pop
ds
cli
call
mov
adc
mov
pop
add
std
scas
xchg
cmp
lods
cs
pop
push
adc
lea
nop
lds
jecxz
imul
scas
mov
idivl
mov
addr16
mov
test
dec
lahf
daa
out
clc
xor
mov
push
jecxz
call
or
sub
stos
mov
add
imul
out
in
jg
cwtl
addr16
pop
push
je
les
dec
in
test
lock
cmpsl
cmp
fldenv
mov
leave
cmpsb
adc
loope
and
insl
sub
out
mov
in
cmpsl
mov
sub
stc
hlt
mov
add
sbb
push
add
fwait
push
test
das
out
movsl
in
jae
mov
sbb
in
cmpsb
xchg
inc
inc
push
xor
test
out
sahf
push
xchg
mov
stc
mov
fsubl
fs
jno
jl
add
mov
pop
into
and
inc
jmp
mov
hlt
fldt
mov
push
or
add
stc
add
hlt
jmp
lea
jle
push
xorb
sbb
push
push
rcrb
ss
pop
adc
add
nop
addl
sub
add
mov
sti
int
inc
push
and
xor
imulb
jae
cmp
jmp
call
add
push
in
push
add
loope
adc
negb
jno
icebp
jnp
or
repz
mov
fidivrl
and
shrb
pushf
std
push
out
mov
fldt
add
push
mov
jp
mov
loopne
cli
xor
mov
notb
jl
inc
inc
jle
cmpsl
stos
push
xor
fldenv
dec
aam
pop
or
popa
ss
or
sub
addb
stos
dec
enter
outsl
mov
stos
aad
and
sbb
and
push
loopne
mov
addr16
adc
and
mov
jcxz
add
insb
pop
mov
mov
jg
daa
out
or
sbb
aam
xlat
sahf
adc
mov
dec
repz
sbb
pushf
and
fsubs
inc
movsb
nop
aad
jl
sti
mov
movsb
cmp
jl
notl
out
stos
fistpll
inc
xchg
mov
mov
cmp
aam
xor
mov
mov
dec
jno
addr16
sub
adc
mov
and
fst
jb
cmp
xchg
sub
sahf
stc
push
jb
test
pop
ljmp
outsb
pop
imul
cwtl
popf
stc
jb
lahf
test
iret
scas
dec
shr
cmpsl
jae
or
sub
or
mov
outsb
sub
sti
in
mov
or
mov
test
out
xchg
sub
daa
and
add
xchg
sub
lock
rolb
test
test
insb
test
xchg
xchg
push
mov
aad
jl
xchg
rcl
arpl
shlb
adc
sub
jo
cmp
and
rorl
add
inc
push
out
or
cmpsl
sbb
and
aad
inc
repnz
dec
push
xchg
arpl
shl
add
push
cmp
aad
push
add
insb
inc
test
lods
push
stc
sarl
add
shr
pop
lahf
dec
add
outsl
jnp
cli
sti
mov
xchg
jmp
cmc
cli
jns
xchg
and
mov
adc
fs
ret
aas
scas
enter
add
adc
sbb
std
cli
jp
scas
push
push
mov
imul
or
jmp
popf
into
std
xchg
jecxz
mov
imul
xor
out
sub
mov
mov
jp
test
mov
pushl
inc
daa
out
sub
adcl
ud2
push
scas
addr16
sbb
adc
shrl
addb
notl
and
imul
ja
out
cmc
inc
mull
adc
xlat
adc
in
mov
fdivr
cmpsl
add
xchg
cmpsb
addr16
xor
or
mov
lods
fstpl
iret
sti
into
mov
jnp
jmp
popf
mov
cld
adc
xchg
add
mov
push
clc
xchg
test
lahf
sub
sti
popfw
xchg
lods
test
fadds
sar
inc
xor
add
lods
in
cmpl
stc
mov
lods
in
cmpl
stc
subl
jp
sbbl
pop
push
inc
out
std
cmpl
cmp
jno
movsl
adc
arpl
xchg
imul
inc
lock
inc
push
stc
dec
inc
xchg
icebp
adc
arpl
bound
inc
call
lods
arpl
inc
push
test
jne
xor
push
add
cld
inc
adc
adc
add
imul
scas
jno
jmp
sarl
jmp
add
push
pop
loope
xchg
or
jae
or
and
pop
mov
ja
std
jmp
adc
xchg
xchg
and
sbb
and
iret
xchg
sbb
call
push
cmp
pop
fbstp
arpl
adc
xchg
sub
jle
sub
std
mov
arpl
out
jb
cli
xor
jbe
shll
xchg
adc
jl
out
dec
cmp
add
jecxz
adc
lock
insb
inc
fstpt
inc
roll
scas
addr16
in
inc
out
sbbb
out
sub
ja
test
cmpsl
jmp
insl
call
call
sub
out
adc
add
out
faddl
jp
pop
xor
jg
inc
or
cs
mov
mov
scas
add
sub
out
mov
inc
subl
out
jmp
test
stc
aam
imul
lods
add
inc
adc
push
inc
test
xchg
cmp
mov
mov
into
mov
inc
adc
push
jg
pusha
insl
jnp
or
shrl
xor
dec
push
sub
js
mov
call
pop
cmp
push
add
xor
jecxz
or
call
insl
sub
sbb
jmp
adc
out
mov
and
gs
call
repnz
add
push
sbb
cmpsb
stc
mov
scas
aaa
jne
and
push
xlat
and
push
fidivs
add
xchg
stc
decl
imul
push
repnz
cmp
loop
jne
ds
out
mov
lods
lods
dec
and
call
popf
and
pop
scas
shrl
add
icebp
js
xor
add
mov
or
cmpsb
fabs
jae
add
cwtl
pop
es
ror
push
adc
xchg
push
pushf
das
adc
stc
adc
pop
cmpsl
xor
cli
mov
jne
pop
ret
add
stos
in
inc
ss
call
insl
jo
loope
repnz
mov
stos
pop
xor
aam
outsl
mov
inc
mov
hlt
add
shl
rcrb
sub
jbe
pop
cwtl
aam
mov
out
push
cmp
pop
ds
repz
mov
sub
jb
icebp
mov
lea
pusha
mov
icebp
fdivs
add
mov
lcall
out
faddl
in
inc
or
inc
jle
inc
sti
xchg
arpl
cmp
aaa
xor
jmp
sub
repz
lret
xchg
arpl
sbb
popf
adc
pop
add
insb
subl
pop
test
pmulhuw
mov
ljmp
push
xchg
insl
repnz
adc
in
adc
aaa
shr
outsb
loope
pop
or
arpl
in
xor
or
stc
test
add
dec
or
pop
dec
sbb
test
pusha
inc
dec
adc
push
dec
outsb
je
adc
bound
cs
jp
sub
fwait
push
in
sub
in
ficoms
jnp
mov
out
decl
imul
adc
add
sbb
fildl
lahf
sti
add
push
or
add
dec
sbb
addr16
inc
and
push
lcall
adc
sbb
and
fstps
test
sbb
aam
idiv
fldl
inc
jbe
cmp
fimull
std
out
add
cli
loop
jmp
test
insb
dec
xor
sbb
lods
cmp
out
mov
out
jl
pop
xor
scas
add
jae
inc
nop
and
sbb
dec
push
mov
cmp
incl
add
xor
xchg
jl
xchg
mov
cli
mov
mov
std
out
dec
cmpsb
pop
in
sbb
sub
dec
xchg
addr16
mov
lcall
cmp
mov
je
add
daa
add
sbb
xchg
pop
and
jg
pop
adc
lods
jmp
or
sbb
push
pop
in
sti
js
loope
insl
pop
pushf
or
hlt
xlat
mov
xor
add
call
mov
xchg
cmp
pop
mov
add
aaa
outsb
mov
pop
add
add
dec
or
and
mov
add
jecxz
int
and
scas
fwait
mov
inc
outsb
aas
dec
sub
addr16
sbb
mov
adc
mov
mov
aaa
dec
sbb
xorl
mov
cltd
mov
xchg
mov
fsubs
pop
add
xchg
loope
aad
stc
out
adc
ljmp
pop
xor
cmpsl
movsb
add
cmpl
divb
fcoms
mov
idiv
int3
jge,pt
cmp
scas
add
out
inc
add
fcoml
cld
mov
outsl
bound
jnp
sbb
es
mov
mov
and
xlat
or
cmp
test
lcall
and
call
inc
icebp
mov
mov
and
addb
ss
add
sub
mov
movsb
mov
mov
cmp
add
add
and
scas
scas
cmp
add
int
scas
cmpb
int3
fstps
pop
sbb
stc
add
js
aas
cmp
and
inc
add
sbb
and
lock
enter
lahf
inc
shlb
int3
insl
aas
scas
push
ja
xchg
push
push
add
cmp
lods
sub
out
int3
jne
add
in
clc
scas
addr16
in
dec
sti
js
repz
sub
jmp
push
cld
add
mov
cmpsl
mov
push
out
je
out
mov
fmull
hlt
scas
addr16
sub
call
add
cmp
push
aad
daa
clc
fcoml
fistps
jg
pop
mov
add
inc
sbb
mov
add
dec
and
xlat
enter
adc
or
add
lods
aaa
test
ja
stc
jb
in
sbb
inc
ljmp
mov
push
add
data16
xor
stc
fs
add
andl
or
jle
pop
lods
lea
mov
sub
bound
jmp
and
fidivrs
add
mov
add
ret
fcoms
mov
outsb
stos
int3
pushl
roll
jns
loopne
push
mov
adc
adc
into
ds
pushl
fiadds
test
and
popa
add
mov
imul
test
divb
push
out
add
test
sbb
push
movsl
or
pop
ss
mov
cld
adc
mov
idiv
pop
and
clc
cmp
adc
cmp
push
outsl
addr16
add
fs
push
fsubrl
arpl
fwait
jg
cli
dec
lods
call
in
pusha
or
andl
test
dec
and
mov
jp
sub
add
or
mov
js
xor
or
rorb
adc
mov
sub
addb
inc
or
imul
addr16
sub
adc
popf
decl
sbb
imul
mov
aaa
outsb
call
mov
test
loopne
lea
sub
push
cmp
dec
inc
xor
and
jecxz
loop
shll
loopne
xchg
cli
test
or
and
mov
mull
pop
fs
mov
pusha
scas
inc
fwait
mov
roll
fadds
pusha
sub
mov
jg
test
lods
sub
mov
pop
mov
mov
jge
mov
jnp,pn
cmp
xlat
call
lods
add
idivb
test
lods
test
lods
loop
jb
call
stc
scas
xlat
je
mov
lods
add
into
subl
adc
repz
or
data16
sbb
lods
enter
icebp
and
lcall
and
out
or
orl
dec
push
add
add
cmpsb
data16
loopne
movlps
push
pop
mov
add
inc
pop
add
mov
cmp
subl
and
pop
xchg
rclb
push
sbb
scas
pop
mov
mov
inc
add
fdivp
orl
aaa
add
nop
push
or
push
push
orl
sub
pop
push
rorb
jle
rcl
ret
push
out
ds
inc
lret
test
cwtl
icebp
push
dec
mov
test
add
outsl
xor
jge
mov
js
mov
std
jns
add
nop
mov
call
xchg
inc
lods
cmpb
jb
xor
adc
imul
outsb
jbe
in
ja
fst
daa
lahf
xor
or
add
xor
out
jo
leave
andl
adc
mov
ja
fsubrl
data16
in
les
outsb
int3
add
fstpl
cld
sub
and
std
xor
shll
mov
std
out
inc
jae
pop
out
addr16
sti
mov
add
sub
ficompl
ja
adc
ss
cld
fdivl
jmp
xchg
adc
lods
in
mov
mov
jne
daa
add
ss
cld
inc
jae
jmp
sub
jecxz
test
or
mov
jmp
fistpll
inc
add
sub
and
lods
add
inc
sub
inc
sub
mov
or
call
mov
adc
and
mov
aaa
push
lea
and
push
fs
push
jg
and
add
mov
call
adc
and
stc
call
and
xlat
arpl
mov
xor
adc
insl
test
cs
adc
and
adc
dec
push
lret
lock
and
sbb
lret
add
inc
sub
ret
jnp
adc
inc
out
clc
add
es
scas
mov
add
scas
rcll
sbb
loope
scas
nop
std
push
and
or
test
adc
inc
jl
imul
icebp
cli
lock
idiv
js
notb
lret
movsb
cmp
add
sbb
jmp
pop
jo
and
clc
test
dec
stc
mov
adc
push
loope
js
andl
add
add
adc
insl
add
pop
mov
test
dec
addr16
pop
push
jg
jo
repnz
xchg
sub
fiadds
test
jne
xchg
aas
lea
xchg
cmp
xchg
mov
push
xlat
sbb
stc
jmp
pop
inc
mov
scas
movsb
comiss
add
movsb
lds
mov
jmp
jge
fldl
push
jbe
dec
adc
addr16
cli
sbb
in
pusha
and
out
addr16
sbb
aam
in
test
stc
sbb
lcall
and
push
pop
rcl
insb
subl
insl
push
pop
test
add
dec
xchg
ret
ret
add
push
cli
repz
lods
add
callw
push
mov
stc
fdivl
ja
negl
sti
sbb
out
sbb
xor
into
fisttps
add
xor
inc
add
stos
je
lds
incl
or
call
test
cs
add
pop
pushf
test
pop
add
push
lea
dec
xor
dec
push
xor
add
push
sbb
adc
push
clc
jmp
clc
test
sbb
mov
or
call
jne
and
addl
ds
lods
insl
add
cmp
xor
addr16
add
cmp
adc
mov
add
orb
cli
aam
stc
mov
js
adc
jg
add
shrl
xor
clc
xor
pop
nop
out
xchg
nop
jge
scas
shl
clc
jnp
movq
adc
loope
in
xchg
std
push
xor
jle
scas
in
push
inc
nop
repnz
nop
jle
cmpsl
nop
imul
mov
scas
addr16
rcr
lret
addl
fs
pop
add
pop
dec
out
scas
addr16
inc
adc
mov
out
je
out
scas
cli
add
sbb
addl
mov
pop
jg
test
xchg
add
orb
pop
data16
cli
movsb
mov
jg
subl
pop
hlt
jl
add
sbbl
add
xchg
and
push
out
nop
verw
push
andl
or
hlt
mov
cmp
mov
push
cs
inc
orl
stos
mov
adcl
xchg
adc
lods
mov
jnp
jbe
push
push
add
push
stc
hlt
add
repz
lahf
jne
das
pushf
jge
cltd
push
imul
insb
mov
jl
push
adc
call
push
sbb
incl
je
sub
add
std
xchg
je
sti
jnp
incl
push
je
cld
imul
add
inc
push
out
shlb
jnp
stos
stc
stos
xor
push
adc
leave
push
mov
rolb
inc
push
data16
cmp
add
lret
or
pop
cmp
push
inc
pop
xchg
sbb
sbb
icebp
push
aad
notl
scas
or
sbbl
push
jge
fnsave
sub
push
je
out
rolb
jns
mov
out
adc
dec
cmpl
stc
mov
add
je
xchg
mov
adc
incb
pop
dec
xchg
pop
rcll
and
stos
nop
std
push
xor
push
push
and
orb
jecxz
nop
std
sub
insl
mov
push
out
xor
lret
push
jle
fildl
test
ljmp
lret
cmp
add
jle
fmull
ret
push
mov
jmp
repz
imul
push
cmp
jle
adc
ret
sti
pushf
data16
es
insb
mov
push
in
scas
pop
adc
pushf
lahf
cmc
inc
scas
in
ja
push
push
pop
add
add
out
add
push
add
lock
inc
jmp
inc
test
bound
add
call
mov
sti
cmp
ljmp
mov
mov
cmpl
or
cmp
mov
jecxz
mov
pop
enter
sub
sub
in
test
xor
cld
jbe
test
inc
sub
call
sbb
popl
xchg
lods
addr16
sbb
rol
mov
cmp
cmp
add
jle
addl
bound
push
bound
mov
or
mov
jne
fstpl
loopne
sbb
mov
je
push
add
adc
or
mov
mov
jno
add
fists
mov
mov
adc
push
lds
jb
jne
xlat
pushf
mov
rorb
jae
cmpsb
std
jg
mov
add
fsubs
nop
cs
sarb
jl
test
ljmp
outsl
sarl
dec
imul
add
jge
repnz
add
push
test
xor
mov
sbb
xor
pushf
inc
add
js
mov
mov
cltd
or
out
pop
insl
mov
pop
test
repz
cmp
cmp
ja
sub
insb
aam
addr16
pop
push
cmpsl
add
inc
sbb
faddl
or
jg
out
addr16
mov
jl
daa
out
xchg
mov
lods
pop
push
daa
add
pop
into
add
scas
or
and
in
ja
rcpps
scas
push
daa
add
cmpsl
repz
addr16
outsb
cwtl
cmp
test
out
push
and
inc
test
movsb
fnstenv
xor
insb
repz
mov
lods
addr16
push
and
xchg
aam
je
mov
dec
lds
addr16
jb
jg
add
shlb
fs
cmc
and
rolb
cltd
or
shll
leave
jmp
cmp
dec
mov
arpl
sbb
sub
inc
jge
push
daa
sbb
sbb
jl
loop
pop
mov
je
call
out
add
pop
test
shr
push
in
add
add
adc
inc
call
fnstsw
jns
add
add
jno
stos
add
jge
jnp
jle
push
clc
popf
add
jge
lret
pop
xor
mov
arpl
add
loope
in
fwait
dec
add
repz
scas
cmc
mov
mov
mov
in
add
je
repz
scas
mov
incl
inc
bound
or
ss
adc
sti
aas
and
xchg
mov
add
and
mov
scas
cmp
out
bnd
xor
pusha
jl
adc
cmpb
test
xchg
pusha
add
mov
xchg
xchg
jge
ljmp
scas
addr16
pop
sbb
daa
add
stos
jecxz
negb
outsl
outsb
ror
push
les
mov
js
and
stos
pop
stos
sbb
out
lock
jg
and
insb
ret
mov
mov
or
push
dec
push
fistps
cwtl
push
pop
mov
out
addr16
aad
pushw
out
pushf
out
sub
addr16
subl
or
in
mov
scas
das
add
jo
mov
imul
and
jnp
test
add
stc
data16
jmp
fs
out
add
jmp
aas
cmpsb
pop
in
leave
push
ret
cmp
aas
aas
inc
test
outsb
je
int3
ljmp
xchg
outsl
stc
ret
add
xor
outsl
sub
sub
enter
shrl
push
add
stc
mov
xchg
inc
add
xchg
repnz
sbb
ret
push
add
subl
cmp
hlt
jnp
ficoms
push
push
and
gs
push
imul
mov
jbe
lock
pop
inc
js
adc
add
jl
cmp
jmp
cmp
popw
jge
pop
pop
and
push
sbb
bound
jns
and
add
xor
adc
std
idiv
jns
testl
call
xchg
cmp
xor
or
cmp
sbb
stc
pop
dec
loope
clc
test
je
or
stc
pushf
ds
and
sbb
jo,pt
aaa
jbe
ret
inc
pop
push
inc
cld
lcall
fdivrs
fwait
xchg
js
lahf
mov
adc
cmp
call
jbe
dec
test
js
dec
push
addr16
in
outsb
inc
push
out
or
les
push
mov
js
pop
mov
addr16
push
outsb
push
lret
push
lret
cwtl
adcb
jl
loopne
add
adc
mov
jge
dec
add
mov
jl
rcrl
xchg
mov
out
xchg
fadds
fidivrs
xorb
aas
data16
jl
dec
incl
cli
sbb
sbb
decl
call
mov
cmp
jb
dec
sbb
jmp
shl
stc
into
jge
in
mov
cmp
jmp
pop
jns
adc
add
or
in
out
dec
or
jns
ja
mov
jo
lret
jo
pop
imul
ss
lret
push
sbb
in
addr16
or
test
xchg
outsl
jns
icebp
or
add
mov
std
je
add
adc
fstpt
jne
mov
add
movsb
stos
jecxz
stc
xor
add
add
ret
incl
cli
inc
and
adc
or
nop
cli
incl
mov
pop
dec
xchg
push
ret
dec
mov
jge
jmp
and
test
adc
fsubrp
clc
mov
addl
scas
cmp
fildl
jb
jnp
decb
jle
add
in
inc
outsl
cmp
add
mov
or
ljmp
xchg
push
mov
sub
outsb
fidivs
fisubrs
clc
xchg
in
outsl
jle
fadd
mov
std
push
and
xor
add
pop
sbb
add
lcall
sahf
mov
add
repz
or
adc
in
movsb
and
add
jns
sbb
mov
adc
addr16
loop
aaa
cmc
inc
scas
movl
add
sub
jo
pop
pop
sub
sub
inc
mov
push
push
ret
cmc
shlb
add
sub
test
sub
push
inc
scas
outsb
aam
stos
daa
out
out
repz
cmpsl
add
hlt
pop
test
pop
mov
mov
mov
inc
adc
lea
stc
cmp
adc
cmpsl
push
add
test
or
clc
cmp
jmp
inc
add
jmp
mov
mov
inc
push
inc
jmp
jo
xchg
dec
bound
or
cwtl
pop
inc
jmp
jo
subl
aas
push
push
mov
ljmp
add
push
fnstenv
inc
imul
xor
jp
push
mov
xor
add
out
fdivrs
out
fsubrs
daa
mov
in
aad
sub
sbb
adc
fcmovbe
test
adc
call
sbb
fs
cmp
lret
push
idiv
sbb
shlb
shr
push
or
dec
dec
in
adc
arpl
in
adc
push
pop
and
push
or
add
scas
mov
dec
add
mov
or
js
rorl
in
cld
xorl
sub
mov
shrl
or
mov
mov
cmp
adc
ret
adc
stc
mov
xchg
int
outsl
jle
shlb
mov
cmpl
pop
sub
adc
jb
add
adc
idivb
or
dec
jns
mov
fcmovb
push
dec
hlt
js
data16
imul
pop
sub
mov
arpl
ss
adc
test
sub
xchg
xor
adc
sub
push
imul
pop
insb
push
inc
adcb
pop
je
sub
cmc
ret
jbe
mov
cmp
sbb
sbb
jnp
xorb
pop
fiadds
xchg
out
add
ds
cmc
jl
test
aam
sti
push
rcl
in
jp
lods
in
dec
cwtl
sub
mov
negl
lods
rclb
push
cmp
ret
in
out
or
fsubs
icebp
mov
or
sbb
mov
lods
repz
jo
stc
sub
and
jnp
shrb
pop
data16
add
adc
sub
repnz
push
inc
cmp
and
mov
movsl
sti
mov
adcl
xor
adc
fistpl
jne
mov
sti
jns
inc
xchg
fcomps
xchg
xchg
fcomps
pop
test
push
sbb
add
jo
adc
dec
decl
xchg
xchg
fcomps
xchg
fcomps
xor
adcl
notl
xor
addb
push
cli
addr16
add
int
call
xor
shlb
lock
inc
cld
push
outsb
cmc
jmp
loope
je
ss
test
dec
or
ljmp
xchg
pop
fdivs
inc
xlat
jno
idiv
xchg
pop
jp
and
inc
and
xchg
int
dec
fwait
iret
xor
mov
fyl2xp1
lcall
je
add
push
add
rolb
scas
gs
mov
addl
mov
in
jns
icebp
stos
sahf
pop
inc
scas
jg
cmp
imul
addr16
push
push
xlat
cmc
mov
movsb
and
stos
call
jecxz
inc
scas
jcxz
in
popa
inc
rorl
sub
scas
bound
scas
lds
repz
fidivrl
xor
push
callw
mov
clc
xor
jmp
js
movsl
ret
cmc
mov
mov
adc
mov
dec
out
scas
shr
mov
jl
and
sarb
fisubl
jb
in
xchg
lahf
ljmp
mov
jne
xchg
stos
hlt
sbb
fldcw
sbb
sub
xchg
push
mov
pop
push
inc
xchg
stc
push
sub
test
shl
push
sbb
push
pusha
mov
pusha
shll
out
mov
gs
daa
mov
adc
repnz
roll
cmp
add
out
lcall
bound
mov
adc
dec
out
cmp
mov
outsb
sub
sbb
rsqrtps
and
mov
push
call
cmp
sub
jno
cmp
test
jl
test
mov
testl
add
inc
dec
jo
rorb
rol
hlt
jmp
stos
mov
add
mov
dec
ljmp
xorb
outsl
cmp
adc
notb
stc
lcall
in
cmc
sti
add
stc
jnp
add
scas
fdivs
test
mov
dec
xlat
cmpsb
push
cli
mov
mov
call
xor
sbb
inc
jns
in
dec
imul
lret
pop
cli
jo
sbb
imul
clc
iret
sbb
xchg
sbb
jge
addr16
add
fildl
sub
lock
fstpl
hlt
lods
xor
fcomp
add
pop
in
pop
ljmp
pop
mov
cmp
add
aad
rolb
mov
dec
pop
arpl
imul
imul
mov
mov
mov
mov
mov
xor
or
mov
imull
stos
pop
das
jno
scas
lock
lahf
dec
mov
data16
scas
fcmovne
dec
fisttpl
or
add
jg
icebp
mul
ficomps
push
inc
jmp
sbb
movb
push
and
loope
add
lock
stos
pop
aaa
movsb
in
in
out
addl
and
push
jb
outsl
cmpl
call
insl
in
orb
andl
hlt
sbb
jmp
fcmove
std
inc
and
pop
sbbl
mov
pushf
pop
jmp
gs
add
mov
or
leave
out
call
divl
iret
cli
push
jbe
out
push
cmp
iret
lea
call
jmp
cmp
daa
out
inc
push
cmp
cwtl
cmp
cmp
push
cmc
sti
inc
cmp
xchg
push
or
fistl
test
add
lret
imul
ret
ret
add
out
jmp
or
mov
call
or
imul
call
test
mov
mov
dec
addr16
dec
sub
jbe
jnp
bound
es
fsubr
test
inc
dec
or
shrb
stc
sahf
push
jns
in
push
or
aam
lock
std
incl
aam
add
dec
aam
stos
adc
xchg
int
or
addr16
rcl
test
sub
push
mov
in
sahf
xor
add
adc
push
xor
ljmp
test
push
push
and
fdivrl
movsb
out
xor
lret
out
sub
ret
pop
sub
bnd
addr16
sub
loop
sbb
add
shlb
jmp
add
in
add
scas
mov
rclw
and
stos
pusha
fcoml
mov
out
std
jmp
and
mov
sbb
mov
repz
sbbb
icebp
das
or
jg
gs
push
out
pop
scas
repnz
test
sub
or
mov
add
cltd
daa
inc
sti
mov
stc
xchg
nop
jg
cld
shrb
add
push
ja
jge
and
adc
clc
stos
lods
lods
push
out
jl
jge
xor
out
sahf
push
cli
mov
in
insl
std
pushf
add
les
sbb
and
inc
mov
pop
cli
sbb
xchg
std
mov
leave
frstor
stos
xchg
jmp
fdivs
mov
test
cmp
add
push
test
mov
push
out
in
outsl
inc
and
and
or
lea
ds
fnstcw
psrlq
add
push
push
aaa
sub
jmp
bound
push
fcomi
test
or
dec
cmp
add
sub
aam
out
test
test
add
cmp
sti
cmp
test
fxam
mov
imul
test
dec
std
ljmp
add
mov
ret
scas
jbe
subl
rcr
sub
mov
jmp
jge
push
add
incb
cmp
out
cmp
es
sbb
add
bound
cmp
inc
jae
cmp
sarb
add
ss
mov
aas
push
adc
testb
cmp
aad
mov
rolb
bound
xchg
cwtl
push
icebp
test
jecxz
inc
scas
addr16
adc
shr
jl
pop
notl
and
daa
mov
mov
inc
and
mov
cmpsl
out
lods
dec
outsb
addl
aad
jmp
jge
xlat
aaa
xor
jmp
push
jb
icebp
shlb
int3
sub
xor
sub
cmp
xor
add
xor
and
fs
rcrl
jnp
sub
mov
loope
jmp
cmc
arpl
push
push
popa
test
or
idivb
ret
fbld
outsl
std
sub
add
idivl
test
pusha
jo
pop
push
jne
sar
scas
roll
sbb
xchg
stos
and
insl
fadd
cmc
mov
add
inc
mov
mov
ds
rcrb
pop
stc
bound
adc
cmp
test
mov
dec
loope
into
sub
test
mov
mov
sub
insb
push
mov
lock
cltd
test
cs
jno
mov
add
fucomp
push
sbb
sub
call
int3
push
test
mov
fisttps
inc
callw
sub
jnp
clc
jne
sub
inc
mov
lcall
loopne
test
sub
and
scas
xchg
mov
in
pop
jp
xor
fnstcw
add
push
cli
mov
push
adc
cmpsl
lret
jae
mov
cmc
clc
jns
aam
fs
cmpb
clc
add
push
cmpsl
pop
mov
jae
lret
stc
push
mov
ret
or
in
imul
fld
int
xor
push
inc
fdivrl
arpl
add
mov
leave
stc
or
mov
test
sub
xchg
mov
int3
xor
sbb
xlat
rorb
int3
pop
hlt
xlat
add
add
pop
bound
push
dec
popf
sub
js
dec
cmpb
mov
add
in
inc
orb
out
repnz
xchg
adc
add
lret
testl
es
sub
out
scas
dec
popa
xchg
es
outsb
lods
xor
mov
jbe
popa
std
and
push
lcall
fstps
pop
mov
out
pop
stc
pop
xchg
stc
jle
and
andl
add
push
in
jge
add
add
addr16
push
test
stc
out
and
test
lods
mov
jge
jmp
call
pop
fbld
and
ja
jo
mov
shll
and
loop
mov
inc
xchg
add
add
test
jne
cwtl
dec
xor
lcall
inc
cltd
dec
call
xchg
or
aad
test
cmpsl
pop
push
push
and
test
cmpsb
or
and
push
cltd
push
adc
pop
test
xor
inc
loop
add
call
push
inc
jge
call
xchg
sub
lret
cmp
pop
leave
scas
test
aaa
lcall
jnp
adc
outsl
sub
sub
sbb
jge
idivl
inc
std
pushl
je
sbb
int
add
jno
lret
push
push
shll
subl
fdivrl
jmp
cmp
and
jg
aaa
sub
sbb
ret
inc
and
movl
xor
sbb
sub
sbb
push
ds
pushl
push
and
mov
sub
and
aas
outsl
push
notb
test
adc
shl
xchg
sti
ficoml
and
xchg
enter
enter
ret
inc
pusha
insb
jbe
push
jb
xchg
push
jge
cmpsb
push
test
ret
or
fucom
rcrb
sarl
aaa
lret
ja
cs
push
mov
jl
ficomps
xor
fidivrl
addr16
xor
aaa
mov
cwtl
test
test
lret
adc
daa
or
add
test
and
je
dec
inc
xchg
int
sbb
jecxz
jmp
fsubr
sub
addr16
and
popl
and
mov
iret
mov
pop
lcall
adc
jge
add
xor
bound
test
inc
out
stc
es
sbbl
jb
movsl
test
pushw
les
call
dec
sub
and
sub
mov
cwtl
cmpsb
add
dec
push
decl
sub
inc
test
inc
cmp
into
je
out
insb
and
cli
int
and
into
decl
sub
cmp
into
or
push
test
mov
int
push
jl
divl
dec
incl
jge
adc
divl
test
cmp
push
pop
push
push
inc
sub
fbstp
rol
or
shlb
lret
xor
out
sub
mov
jg
jns
orb
std
sub
stc
pusha
inc
xor
jg
jp
bound
je
xor
int
xchg
ret
je
and
lret
ret
aam
and
outsb
ja
mov
adc
je
pop
xor
filds
jp
sti
jle
je
js,pn
fstl
and
mov
mov
sub
add
out
stc
inc
jno
scas
mov
cmpsb
add
jb
les
jle
popa
imul
out
push
mov
fsubrs
sub
xor
ss
adc
mov
cmpsb
dec
pop
or
push
cmpsl
sbb
mov
insb
les
xchg
pop
ds
mov
jle
push
pop
stos
xchg
add
push
aam
xor
outsb
mov
stos
ja
scas
addr16
and
xchg
das
jae
sbb
lods
addr16
bound
stc
mov
jl
pop
ficomps
out
rorb
loope
mov
out
xchg
add
cmp
in
addr16
popf
push
rcl
test
mov
lods
stos
xor
ljmp
xchg
add
jecxz
push
mov
add
insb
adc
dec
mov
add
mov
adc
insb
jmp
aad
in
add
jbe
push
clc
xchg
and
arpl
add
call
mov
fbld
xchg
inc
imul
test
imul
sbb
mov
std
or
sub
incl
push
ret
iret
sbb
lcall
orl
arpl
inc
testl
and
add
subb
adc
sub
sarl
add
add
inc
out
jmp
inc
nop
inc
rcll
stc
cmp
push
xor
int
orb
repz
mov
and
dec
xor
std
push
and
or
imul
std
mov
test
mov
jbe
scas
inc
std
out
inc
mov
sbb
out
add
in
mov
mov
dec
outsl
inc
cmp
add
inc
push
cli
push
inc
insb
push
out
sub
fs
roll
inc
cmp
mov
and
push
aam
lock
dec
rol
pushf
add
inc
scas
mov
stos
hlt
mov
ret
mov
aas
out
mov
dec
pop
int
push
imul
adc
rol
push
lods
sub
jo
addr16
movsl
sbb
dec
out
jl
cmp
hlt
es
jnp
inc
scas
aas
adcb
outsb
mov
sub
xor
or
lods
jp
mov
in
or
sub
or
stc
jmp
push
jo
ret
mov
call
call
nop
loopne
int
loop
fwait
jl
dec
fnsave
daa
or
stc
jmp
pop
pop
mov
pop
mov
sbb
call
call
add
add
adcl
mov
stc
jmp
or
add
addr16
adc
and
add
cli
loop
cmp
mov
push
addr16
out
loop
mov
inc
or
add
mov
incl
push
push
and
add
mov
pop
or
incl
push
ret
idiv
pop
test
mov
data16
xchg
data16
pop
adc
adc
inc
jl
sbb
inc
add
add
lds
mov
mov
ret
fisttps
nop
inc
xchg
in
dec
push
pusha
xor
out
inc
dec
mov
fs
dec
push
adc
mov
xchg
inc
rorl
das
ret
mov
pop
faddl
inc
mov
inc
xor
and
add
adc
inc
xchg
addr16
push
push
push
out
test
jne
mov
jmp
sub
pop
out
mov
aas
inc
rolb
outsl
jg
sti
mov
xchg
subb
out
push
xor
xor
lret
pop
fistpll
jg
xor
sub
out
stos
mov
pop
push
rcrl
fimull
cmpsl
rcll
popl
push
add
adc
adc
xlat
je
adc
dec
daa
std
add
repz
adc
pop
dec
and
cmp
cld
pop
cmp
jae
xchg
loop
add
and
sbb
clc
adcl
mov
push
fnsave
sub
dec
test
or
mov
push
out
pop
pop
mov
stos
add
sub
stc
add
daa
jl
arpl
in
push
add
xorb
into
fimuls
or
std
sub
cmp
rcrb
ljmp
idiv
add
sbbl
or
test
notl
add
test
jae
add
add
jmp
ds
mov
mov
and
add
push
not
push
scas
test
add
decl
jnp
std
mov
test
add
pop
mov
movsl
addr16
mov
jl
bound
scas
push
mov
es
loopne
xchg
pop
mov
cmpb
jmp
mov
push
or
shrb
movmskps
jmp
mov
lods
xor
mov
cmp
test
jns
mov
push
lcall
push
repnz
and
test
mov
jle
mov
out
mov
dec
sub
inc
outsb
xor
pop
cmp
xor
fsub
add
inc
fs
rcll
pop
xchg
mov
add
inc
push
imul
rorl
aas
add
inc
dec
push
pop
mov
out
frstor
add
addr16
mov
add
scas
lretw
and
xchg
and
lods
call
daa
in
sub
call
pusha
test
xor
dec
jb
ljmp
add
je
sub
ss
and
loopne
inc
push
add
adc
cmpsl
add
inc
je
xor
and
inc
xor
ljmp
test
ljmp
pop
mov
lods
add
or
sub
sahf
add
push
testb
lret
add
jge
shll
jge
loope
mov
inc
pop
adc
add
insb
cmp
and
lock
and
cli
jae
pop
cli
jae
ret
add
adc
imul
or
ret
and
sub
sub
cli
testb
and
push
mov
xchg
ja
adc
xchg
xor
js
jae
scas
xor
xchg
push
pop
jno
push
jg
js
add
sbb
xchg
pop
les
mov
ljmp
gs
pop
mov
std
call
lret
mov
ljmp
cmp
scas
pusha
push
mov
je
call
stc
xor
flds
sub
std
jmp
mov
push
push
inc
mov
out
outsl
jb
test
inc
out
imul
mov
arpl
in
sbb
xchg
or
addr16
xlat
fs
in
sbb
test
sbb
icebp
subl
sub
xchg
flds
rcrl
lret
push
daa
add
and
out
fisubl
sbb
and
add
lods
add
push
sub
in
mov
filds
add
sbb
call
mov
dec
stc
pop
bound
test
and
and
push
jo
sub
inc
xchg
pusha
mov
push
ret
cli
int3
and
inc
or
xlat
jmp
sbb
pushf
and
pop
xchg
stc
js
push
jae
aaa
mov
mov
pop
dec
mov
mov
test
stos
cli
pop
and
dec
or
aad
dec
add
fs
add
shlb
or
adc
rcrl
cmpl
dec
lea
fs
lea
sbb
divl
or
ret
adc
adc
je
jae
adc
mov
mov
scas
lret
inc
hlt
push
dec
pop
lock
fdivr
incl
int3
popf
add
clc
testb
inc
or
andb
ret
das
or
pushf
inc
and
sbbl
mov
lret
aas
xor
pop
and
push
popf
sbb
imul
xor
mov
shlb
mov
push
repnz
ljmp
std
jg
mov
dec
stc
inc
fs
arpl
stc
mov
out
roll
and
data16
add
pushf
clc
clc
jo
outsb
aas
xchg
push
dec
popa
out
push
push
mulb
xchg
jle
ds
sti
sub
gs
mov
outsl
shl
call
out
cmpsl
addr16
add
adc
sub
mov
xor
ficompl
cmp
fidivl
stos
es
sub
scas
addr16
lods
add
cmp
cwtl
scas
addr16
xchg
cmp
mov
jecxz
scas
xchg
cmp
xchg
jno
cmp
lcall
ds
outsb
bnd
imul
mov
add
aas
or
push
mov
xchg
cmpsb
sbb
dec
cwtl
callw
cmpb
stc
cltd
addr16
cmc
add
clc
out
cltd
pop
adc
mov
mov
sarl
xor
lock
lds
mov
imul
mov
data16
and
adc
adc
shll
call
jecxz
nop
mov
loopne
inc
repnz
icebp
testl
lea
lret
pusha
cmc
call
cwtl
test
das
cmp
add
movsl
loopne
push
push
cli
incl
push
divb
and
rorb
pop
sub
xchg
repz
pop
arpl
add
scas
jmp
pop
movaps
push
imul
inc
in
dec
push
scas
xchg
jl
scas
push
xchg
flds
lea
scas
push
push
push
mov
add
mov
push
std
jg
insl
pop
cli
push
into
lods
stc
mov
push
mov
test
cmp
test
rolb
add
add
jnp
rcll
mov
mov
loope
clc
push
adcb
xchg
inc
mov
sub
test
add
adc
cmpl
jg
shll
push
add
ret
repz
push
fwait
mov
out
jmp
ret
and
scas
jp
xchg
pop
push
xchg
cmpsl
mov
sub
lret
mov
fs
cmp
jp
addl
jecxz
idivl
xchg
pop
push
shrl
sbb
shrl
mov
js
insb
ret
mov
je
scas
addr16
lret
mov
call
call
call
push
addr16
shrb
test
in
call
xchg
pop
mov
stos
push
mov
addl
lods
test
xchg
adc
stos
stc
aad
test
subl
out
out
test
xchg
sub
out
lods
test
xchg
fwait
and
add
out
jmp
je
and
ja
xor
scas
dec
mov
imul
scas
ja
or
mov
or
test
pop
mov
cmp
or
sbb
jmp
cmp
xor
or
push
fs
arpl
bound
pushl
or
mov
out
loope
je
pop
testl
mov
or
mov
inc
and
loopne
je
pop
stc
mov
mov
sbb
jg
dec
mov
and
loopne
and
xor
pop
ss
sub
loopne
mov
push
jns
lret
xor
je
inc
jp
fstl
xor
loopne
add
mov
xor
movsl
stc
and
fcoms
and
fnstcw
xor
fsts
fnstcw
add
jmp
in
xor
cmpsb
dec
mov
inc
and
lock
adc
hlt
test
or
jnp
in
cmpsl
shlb
and
sarb
loopne
xor
adc
imulb
scas
addr16
add
and
rol
ss
cmpsb
pop
out
adc
hlt
xchg
push
add
pop
xchg
add
scas
addr16
push
std
sahf
xor
mov
mov
insb
mov
jmp
add
addr16
push
lock
add
xor
js
aas
pusha
ja
addr16
into
xor
xor
cmp
cwtl
je
xlat
xchg
mov
add
pushl
xor
das
daa
or
stc
jmp
pop
cmpsb
push
into
pop
xchg
call
fldt
stc
scas
adc
call
dec
das
test
cwtl
test
push
movsl
or
mov
xor
jmp
push
cld
insb
loopne
test
loop
stc
mov
mov
ljmp
bound
mov
add
push
ljmp
pop
xor
js
push
push
xorl
xchg
rol
aaa
loope
jp
mov
jle
mov
hlt
inc
movsl
in
push
in
xchg
call
xchg
test
pop
jne
fs
push
push
call
inc
arpl
add
dec
lcall
or
mov
je
push
testl
outsb
dec
xor
shll
mov
scas
lret
xor
pop
add
clc
clc
pop
sti
jl
out
add
pushl
inc
mov
addl
mov
xor
mov
lock
mov
jbe
mov
cwtl
jo
subl
adc
fnstenv
push
jne
jo
cld
test
jbe
add
cltd
fldl2e
dec
lcall
inc
stos
mov
xor
mov
stc
pop
push
push
cli
adc
stos
divb
sets
xor
je
dec
ja
out
nop
ret
cmp
clc
jbe
dec
xor
xchg
dec
scas
push
and
jmp
mov
out
test
mov
cwtl
sub
cwtl
cmp
mov
js
mov
fwait
ds
sub
lods
out
insb
cmpsb
fmull
daa
xchg
dec
fucomi
sub
out
xchg
icebp
int3
add
stos
xor
enter
add
movsl
clc
dec
stc
popf
lock
test
add
add
xor
jmp
das
xor
xor
xchg
gs
adc
jg
push
jb
add
inc
cmp
out
sub
aam
scas
in
cmp
mov
scas
push
das
jns
lods
ljmp
push
lds
push
jmp
test
xor
jae
inc
lods
and
jg
test
and
sbb
test
inc
clc
je
pop
test
divl
adc
mov
call
pop
sti
loop
push
or
and
add
test
ret
dec
push
dec
std
sub
das
movsb
add
push
mov
jne
mov
jne
in
decl
ja
xchg
scas
jmp
addl
inc
adc
out
movsl
inc
inc
push
cmp
inc
jb
sub
rcll
insl
adc
or
scas
lds
add
jno
and
lret
inc
stc
jg
dec
sub
mov
sub
jge
out
in
xor
mov
lds
std
lds
out
inc
sub
cmp
cmp
movl
jmp
outsb
mov
mov
cmpsb
xor
aad
cmp
into
loop
test
push
push
in
ds
sbb
jo
out
out
stos
push
outsl
addr16
in
sbb
lahf
fs
adc
scas
add
fsubrl
xchg
xchg
mov
scas
ljmp
das
in
sbb
mov
mov
jp
sub
arpl
xchg
stos
mov
cltd
clc
arpl
xchg
cld
push
pop
inc
lret
push
insb
ret
jecxz
jo
dec
pusha
add
add
in
in
mov
sub
je
out
mov
jns
xor
arpl
mov
cmp
mov
push
bound
mull
add
inc
add
xor
ja
sub
add
xchg
cli
push
jmp
push
pop
dec
das
stc
push
sub
shlb
add
aad
cli
dec
pop
jl
add
and
bndldx
jge
pop
pop
jge
pop
pop
and
iret
or
pop
pop
jge
mov
test
push
incb
push
add
adc
test
idiv
popa
push
pushl
lods
xor
add
mov
add
jae
dec
bound
test
sbbl
arpl
jg
cmp
add
orb
mov
add
inc
dec
ss
ljmp
test
cmp
sub
adc
decl
jne
test
push
sub
add
push
jbe
inc
jge
scas
mov
ret
je
lods
mov
pop
idiv
jl
xor
fisttpl
pop
lret
adc
push
and
call
aad
push
ljmp
loope
subb
cs
jmp
mov
pusha
lods
dec
popf
lahf
sbb
ret
sub
add
jns
shrl
fs
arpl
ret
add
es
dec
sti
xchg
ljmp
sub
mov
lret
es
sbb
xchg
mov
cwtl
insb
int3
cmp
push
lock
mov
mov
mov
sub
xchg
in
test
cmpsb
bound
mov
aaa
sarb
hlt
push
jmp
arpl
jae
xor
out
mov
daa
js
add
or
mov
sub
lock
jno
add
and
movsl
in
inc
push
adcl
fiadds
pushf
aas
adc
cmp
in
daa
sbb
sbb
mov
jmp
jmp
jae
movb
jae
pop
push
pop
inc
ret
js
adc
leave
idiv
cltd
mov
dec
add
arpl
inc
xchg
pop
push
lea
outsl
call
jmp
and
ljmp
add
add
jmp
repz
test
jne
jne
jbe
jmp
test
std
sar
lret
inc
loopne
mov
test
je
jne
jne
jmp
test
cld
paddb
lret
push
ret
push
testl
mov
fnstsw
scas
cs
and
push
scas
cmp
inc
ds
jmp
call
cli
addb
lock
adc
add
in
sub
mov
dec
jge
scas
aas
std
ljmp
rcrb
nop
pushf
stc
test
inc
and
aas
mov
mov
out
or
pop
lret
cs
lret
sbb
and
jle
xor
shlb
cmp
test
adc
loopne
addr16
repnz
fwait
sbb
jo
scas
pop
cmpsl
scas
mov
sub
scas
out
iret
xchg
test
xchg
movsl
or
ljmp
xor
pusha
sbb
jno
xor
push
or
add
add
sub
mov
inc
mov
lcall
lock
ret
out
sub
add
cmpsb
cli
out
and
loope
ficoms
jp
popa
pop
repnz
or
xor
test
mov
stc
sbb
adc
mov
bound
roll
add
and
lods
out
fsubrl
and
lods
lcall
mov
clc
aam
out
pop
jmp
jne
add
sub
les
xchg
stc
sub
push
mov
mov
pop
jmp
fdivp
dec
and
out
inc
and
pop
divl
loope
sar
test
push
and
or
test
adc
rcll
incl
inc
mov
add
and
mov
incl
mov
rorl
pop
repz
and
pop
addl
divb
shl
xlat
test
cmpl
pop
in
mulb
add
or
push
push
inc
push
in
ret
or
xor
into
mov
bound
scas
pop
inc
idivl
int3
jae
add
stc
pop
sub
clc
mov
scas
xchg
rorb
or
inc
push
xor
xor
cwtl
sub
xor
rolb
or
or
jp
or
push
sub
mov
adc
or
jle
cld
js
push
add
sbb
test
and
test
sbb
in
mov
adc
mov
adc
xchg
mov
test
lock
add
cmp
out
add
xor
xor
decb
inc
lock
jnp
jae
add
adc
cmp
sbb
pusha
aaa
mov
ret
fistpll
scas
addr16
ds
and
xor
faddp
in
lcall
jg
int3
pop
inc
fmulp
lret
xor
sub
xor
mov
xor
mov
in
scas
lsl
scas
add
sbb
mov
xchg
adc
xchg
lret
lods
addr16
scas
rcrb
mov
pop
scas
je
stc
push
cmp
int3
lahf
xor
mov
in
xor
cmp
outsl
mov
call
jg
or
stos
xchg
adc
shl
mov
xor
lods
add
int3
cmp
sbb
pushf
jae
cli
pop
jmp
fldcw
xchg
jno
out
aad
jmp
stc
xor
mov
add
dec
add
pop
jno
add
cli
jbe
adc
test
or
inc
adc
dec
push
or
test
int3
int3
lcall
push
dec
ja
test
imul
rcrb
jle
jns
scas
add
addr16
lods
ja
orl
daa
add
call
jl
mov
sbb
xlat
cli
xchg
add
je
test
cli
push
pop
aam
add
out
cmp
test
xor
jno
xor
fimuls
lock
jns
arpl
mov
fiadds
xchg
iret
sub
or
popa
inc
mov
outsl
xchg
les
inc
and
xchg
cmp
incl
jge
push
mov
test
cmp
into
or
xor
loopne
xor
in
dec
js
jg
cmpsl
xchg
sub
dec
in
test
xor
push
pop
fistpll
cmpsl
fnstsw
outsl
jns
inc
fwait
push
std
ljmp
pop
pop
ss
imul
adc
jne
and
repz
mov
pop
fwait
mov
push
fs
pop
imul
jbe
mov
mov
add
sub
data16
push
xor
loope
sti
sbb
popf
fistpll
pop
lret
sub
imul
and
jg
mov
bound
popf
outsl
sub
xor
out
sub
bound
test
mov
xchg
jnp
inc
das
jo
dec
jb
mov
dec
mov
lods
in
insl
mov
add
std
sub
inc
jmp
sub
add
lods
fmuls
jo
in
call
popa
mov
icebp
or
mov
sub
fidivs
add
inc
addl
lock
push
push
dec
lcall
pop
add
sbb
push
sub
fwait
push
cld
mov
push
cld
mov
cs
dec
popf
aas
insb
cmp
pop
sbb
and
int
push
sbb
push
jge
xchg
imul
sub
inc
pop
pop
shll
nop
scas
add
xchg
incb
rcrl
bound
adc
out
cmp
cld
mov
push
aas
push
pop
aas
adc
adc
push
fwait
mov
adc
out
cmpl
test
push
add
adc
insb
xor
add
mov
scas
dec
sbb
arpl
jge
adc
jae
jne
test
push
jl
xlat
imul
mov
insb
pop
aas
mov
movsb
sbb
scas
fs
ret
mov
sbb
lock
xor
add
or
and
mov
xor
in
test
push
lock
sub
jae
nop
ss
add
addr16
xchg
out
jmp
fs
bndstx
add
out
or
push
stc
scas
in
mov
test
jg
mov
adc
push
sub
cli
in
push
lods
xchg
add
xchg
test
ljmp
add
sub
mov
add
xchg
in
in
out
xchg
jmp
addr16
out
mov
ret
ret
addr16
hlt
push
out
jg
in
call
stos
call
add
outsl
call
xchg
dec
push
mov
mov
push
rcrb
addl
dec
movl
data16
fwait
cmp
sbbl
out
js
testb
loope
add
data16
inc
ljmp
mov
mov
add
out
add
xor
shlb
and
aas
push
je
adc
leave
ds
adcl
leave
jmp
cmp
push
inc
mov
call
xor
and
es
xor
ss
mov
xor
xorb
adc
inc
xor
xchg
xor
std
pushl
jge
mov
add
cld
out
movsl
sub
out
and
dec
pop
clc
xchg
out
lea
std
test
js
sub
hlt
xchg
xchg
ds
mov
scas
cmp
pop
jl
sub
repnz
les
addr16
scas
in
pop
cld
movsl
outsb
cmp
scas
in
sub
imul
add
call
ss
incb
add
pop
data16
lahf
out
sub
pop
push
insl
mov
in
lock
test
ja
jl
gs
add
add
pop
mov
fs
pusha
outsb
cmp
rcll
scas
dec
and
xor
out
pop
mov
bound
fldenv
push
stc
ficoms
push
push
adcl
gs
movb
iret
call
push
mov
popf
daa
and
mov
and
lods
pop
and
cmp
add
rcrb
jmp
insl
fwait
cmp
stos
addr16
adc
stc
push
xchg
adc
push
mov
stc
jmp
clc
push
or
adc
or
adc
std
lcall
pop
add
xor
int3
loopne
push
cmp
fmuls
add
xchg
inc
inc
mov
adcb
ds
call
xchg
add
int
insb
and
aaa
test
adc
dec
int
inc
data16
insb
mov
test
popw
mov
outsl
adcl
roll
and
dec
call
test
pop
mov
jnp
add
insb
pop
subb
inc
insb
sub
outsl
mov
jno
jns
or
std
mov
xor
test
in
call
cld
sub
adc
push
dec
nop
daa
push
pusha
xchg
aaa
or
cmp
cld
jle
out
xchg
scas
cmpsb
add
sub
push
xor
or
divl
scas
test
mov
jle
ja
add
pusha
xorb
std
jmp
imul
inc
es
cs
loopne
and
fwait
pop
mov
movsl
jae
cs
add
push
and
mov
jge
subl
loopne
sub
lods
out
clc
add
stos
in
bound
outsb
cmp
pop
cmpsb
in
mov
sub
fsub
inc
lret
xor
pusha
incl
loopne
cmp
mov
popf
mov
jle
scas
addr16
push
ljmp
addr16
outsb
addl
dec
mov
add
lods
or
stos
in
inc
mov
or
aas
loop
sub
rcrl
insb
scas
in
mov
fxch
adc
lods
inc
stc
inc
ficoml
jb
adc
lods
in
mov
adc
popa
scas
jmp
jne
jmp
stos
repz
repz
lods
fiadds
jmp
mov
add
andb
add
jp
incl
fsts
orb
sarb
cmp
adcl
add
push
pop
push
push
pop
test
ds
or
xchg
ds
jle
icebp
lcall
lea
sbbl
cmc
ljmp
dec
push
xor
cmp
insb
mov
in
add
mov
push
data16
cwtl
mov
xor
and
popa
push
int
jl
mov
bound
std
test
jne
sub
in
xchg
xchg
mov
push
mov
or
and
inc
pop
insb
jle
mov
add
push
roll
xor
lods
les
add
loop
scas
ja
add
test
jl
das
jbe
mov
adc
and
in
jmp
adc
fsubl
mov
sti
and
mov
lret
mov
js
pop
mov
add
adc
inc
out
mov
out
rcr
clc
fwait
add
mov
call
addb
hlt
sub
in
add
cmp
add
fs
jns
scas
outsb
sub
imul
xor
mov
test
inc
lret
push
test
xchg
iret
jne
jbe
mov
ljmp
push
popf
dec
bound
andl
test
push
cltd
imul
jmp
andl
movsl
xor
jmp
jg
dec
std
shll
shlb
push
jno
jl
call
push
pop
xchg
dec
mov
in
xor
push
or
cs
adc
adc
push
jnp
add
cmpl
mov
push
push
sbb
incl
dec
ds
shl
arpl
push
mov
lcall
clc
push
test
fiadds
sub
lret
mov
rorb
mov
rol
mov
lret
or
or
ficoms
mov
repz
xchg
pop
mov
int
call
stc
popf
divb
add
es
xchg
inc
add
incl
sub
stos
add
jle
test
scas
enter
jmp
xor
xor
or
push
push
mov
call
adc
sbb
out
adc
mov
andb
std
pushl
sub
dec
xor
cld
or
rorb
sti
addl
push
mov
fisubrs
and
lock
push
das
in
pop
loop
cmp
mov
pop
dec
sub
sub
repnz
xor
lods
adc
cmpsb
rorl
test
imul
and
cmp
ljmpw
and
out
outsb
movsl
xchg
add
add
addb
dec
or
popf
syscall
jno
in
push
mov
sbb
cmpsl
or
aas
jecxz
push
ja
daa
dec
add
xchg
das
push
test
sub
stos
je
push
pop
cmpps
les
jp
lods
pop
test
add
jg
mov
in
icebp
das
loop
mov
ret
adc
add
dec
bound
out
adc
lods
in
dec
add
popa
call
jbe
jmp
stos
jmp
jne
add
notb
add
or
cmp
ret
or
mov
jle
mov
inc
pop
mov
push
rorb
mov
push
mov
add
addl
xor
addl
mov
decl
adc
data16
cltd
mov
add
cli
testl
mov
mov
adc
mov
addl
inc
add
data16
scas
add
stc
roll
popf
adc
sub
pushl
add
jmp
mov
mov
add
lcall
pushl
jl
xchg
scas
add
xchg
test
pop
out
add
cld
ljmp
xchg
jb
xchg
rcrl
outsb
cmc
add
xor
divb
out
and
out
cld
pushl
call
adc
rcr
push
push
jnp
xor
stc
xor
and
inc
add
lods
cmpsb
adcl
mov
xchg
ljmp
data16
dec
xchg
addr16
insb
test
mov
mov
imul
jge
pop
data16
mov
or
jbe
outsb
inc
jp
es
sti
sbb
push
repz
push
jmp
sub
sbb
add
in
out
scas
add
xchg
jg
scas
or
jmp
add
repz
jmp
jns
sub
out
addr16
das
mov
jmp
lods
andl
call
adc
stc
jmp
stos
mov
das
jmp
mov
call
scas
aaa
or
arpl
mov
xor
jg
or
and
or
scas
push
lds
add
mov
inc
ret
jne
je
pop
xchg
sub
fildl
mov
insb
inc
cmp
and
aas
lods
mov
sub
push
add
jb
pop
inc
sub
fwait
pop
pop
mov
insb
inc
cmp
add
aas
add
mov
add
lods
push
in
lods
std
add
imul
dec
or
mov
add
sub
in
jne
aad
lea
sbb
cmp
movsb
mov
jns
bound
roll
mov
xchg
push
std
pushl
xchg
mov
out
adc
incb
and
xchg
add
adc
pushl
adc
mov
andb
cld
jmp
xchg
adc
sub
fldl
mov
jno
std
ljmp
push
mov
test
test
test
mov
insl
ljmp
addr16
cmpsb
mov
call
addr16
sbb
scas
out
loop
js
xchg
scas
addr16
fsub
add
push
push
adc
loopne,pn
divps
add
jnp
flds
jns
push
icebp
and
sub
scas
pop
add
out
lock
push
imul
add
xor
and
lds
push
es
push
je
ficomps
push
push
push
lahf
sub
push
insb
add
sub
addr16
lods
js
bound
andl
add
shlb
nop
dec
add
mov
aas
ret
in
jmp
xor
movsl
mov
adc
or
xlat
outsb
xchg
sub
roll
jl
or
add
lods
jnp
add
push
test
add
insl
push
sarb
leave
push
sbb
pop
pop
add
test
adc
sbb
test
js
jo
push
push
addr16
negl
cmpsb
push
pop
add
mov
int3
mov
stc
insb
add
ds
jmp
je
push
movsb
push
add
test
out
lea
inc
pop
stc
call
data16
xchg
pushf
test
test
and
pushf
adc
adc
ljmp
adc
popa
scas
xchg
mov
test
sti
jnp
xchg
inc
adc
incl
xor
xchg
adc
push
push
aaa
and
or
scas
inc
jle
loope
jg
mov
xchg
or
dec
scas
and
insb
mov
std
test
test
sub
or
imul
jbe
jno
cld
test
fiaddl
lcall
or
mov
out
call
out
scas
addr16
mov
lret
mov
outsb
mov
jns
daa
mov
xchg
dec
add
int
add
in
add
in
arpl
add
andb
ret
ljmp
and
mov
pop
out
scas
jnp
mov
add
add
cmp
daa
push
add
sub
xchg
insb
ret
lods
dec
iret
mov
cmp
add
adc
pushf
call
jb
xorb
outsb
test
lods
addr16
pop
popf
mov
bound
mov
imull
push
bound
call
jb
sahf
pop
adc
imul
call
xor
lods
push
adc
loop
jp
add
xor
mov
add
out
outsb
sbb
xchg
pop
test
jae
add
add
xchg
sti
add
sarl
or
arpl
adc
adcl
push
or
add
loope
call
incb
test
stc
incl
pusha
mov
inc
inc
sbb
pop
mov
imul
iret
and
mov
pop
mov
push
imul
scas
fcomps
or
mov
add
adc
xchg
add
std
gs
sbb
gs
cwtl
sbb
inc
lahf
mov
shrl
jp
fwait
mov
pop
jno
or
test
cld
jns
cmpsl
inc
or
mov
iret
adc
or
dec
cmpsl
addl
std
ljmp
or
push
hlt
jns
mov
add
ljmp
adc
push
mov
test
sarl
fisttps
outsl
out
gs
outsb
leave
pushf
repnz
out
xlat
add
fwait
sti
jle
jecxz
add
lods
in
movsl
add
push
data16
addr16
add
push
pop
shlb
push
or
out
scas
lock
xor
in
outsb
leave
pushf
lock
imul
rorb
out
filds
mov
imul
shl
out
jmp
sub
xor
out
loope
sub
xor
out
in
stos
sub
mov
lods
loop
icebp
scas
fdivrs
loope
push
or
ficomps
scas
cwtl
loop
cltd
or
push
inc
mov
mov
adc
insl
fs
test
pop
aad
mov
out
movsb
add
pop
test
arpl
or
lods
mov
or
nop
pop
orl
adc
inc
push
or
incl
push
jnp
adc
nop
add
sar
call
push
xchg
push
push
testl
jge
mov
mov
add
adc
es
dec
lret
or
sti
or
push
in
adc
inc
addb
dec
or
bound
add
push
orl
inc
adc
add
add
mov
pop
adc
insb
add
sahf
test
pop
jle
mov
dec
je
std
xchg
inc
inc
iret
adc
ljmp
adc
incl
pushf
add
scas
test
mov
scas
or
incl
adc
pop
and
mov
scas
adc
mov
test
push
stc
sub
jge
insb
add
push
push
mov
add
std
jae
addr16
mov
fisubl
mov
inc
inc
arpl
inc
sub
test
lods
dec
lahf
jp
and
or
sub
outsb
push
out
loopne
jbe
aas
stos
mov
xor
mov
xor
mov
outsb
mov
fnop
out
add
out
sub
movsb
sub
in
mov
add
loopw
out
push
pop
mov
shll
popa
jb
xor
jb
pop
jge
addr16
xchg
mov
dec
jb
popa
std
cmpsl
mov
xor
cld
add
stos
xchg
jg
cmp
das
cmpsl
loop
pusha
add
xor
jb
pop
test
ret
loop
leave
imul
jmp
loop
loope
stc
clc
jmp
lods
movsl
and
pop
or
push
aaa
cmpsl
int3
mov
mov
pop
cmpsb
adc
in
jne
add
push
mov
sti
ror
sub
pushf
out
pop
inc
addl
and
cmp
and
add
add
fsubrs
add
fs
or
add
lea
add
mov
add
jg
adc
and
xor
adc
iret
push
add
mov
xor
cld
sti
roll
cltd
aas
imul
dec
cmp
sarl
test
ret
or
and
add
jns
sbb
or
sbb
and
loope
je
mov
mov
cmpsb
inc
add
pushl
add
test
cmpb
jmp
xor
jns
sbb
pusha
mov
dec
pop
inc
lret
call
add
imul
jp
mov
std
jmp
add
daa
gs
sub
outsb
sarb
pop
ret
mov
mov
scas
jnp
and
jle
aaa
push
inc
jmp
and
dec
sub
aad
add
add
loopne
xor
pop
int
es
adc
pop
out
shll
leave
movsb
loop
and
loopne
and
movsl
out
jnp
pop
jb
add
in
scas
shl
out
xor
out
xchg
loop
sub
loope
mov
ljmp
call
pusha
insl
inc
xorl
push
add
lods
jb
in
dec
jp
bound
jge
mov
je
lret
push
cmc
xor
rcrl
or
adc
sti
repnz
xor
inc
test
or
adc
sbbl
jmp
in
pop
xchg
pushf
lea
add
mov
sub
jl
inc
add
stc
clc
call
add
call
add
push
rolb
idiv
test
and
aad
cld
jmp
test
dec
cmp
orl
sahf
pop
jge
add
mov
lea
inc
xor
and
and
out
xchg
rcr
fmuls
frstor
jnp
adc
pop
inc
daa
adc
sub
pop
sahf
xor
dec
push
test
jmp
or
cmp
int3
clc
jle
ja
add
or
aas
inc
mov
mov
scas
sub
push
mov
stos
add
adc
fistl
shrb
test
and
test
add
daa
add
jg
imul
push
push
mulb
ret
jmp
push
and
cld
jb
call
jl
stos
aad
test
lea
scas
mov
inc
and
nop
push
mov
cmpsl
add
addl
pop
data16
mov
mov
test
out
outsl
bound
xchg
repnz
xchg
jg
imul
add
out
add
es
ljmp
aas
stos
and
lret
add
adc
movsb
out
lcall
lock
cltd
sub
add
mov
push
insl
mov
fisubs
shlb
push
addl
or
jne
fadd
inc
shlb
xchg
mov
add
push
stc
cs
pop
push
mov
adc
clc
lea
jmp
lods
jb
fstl
adcl
clc
jb
pop
subl
xchg
pop
jb
mov
jmp
out
jmp
lahf
jmp
or
pusha
ljmp
lahf
pop
mov
leave
xor
inc
cli
outsl
inc
or
or
mov
aaa
addl
inc
or
or
add
mov
aaa
addl
inc
or
pop
or
and
mov
in
addl
inc
or
pop
or
inc
pusha
pop
mov
dec
in
addl
inc
or
push
or
and
mov
in
addl
inc
or
pusha
or
adcb
leave
out
addl
inc
or
push
jecxz
add
inc
xor
call
stc
mov
rcrl
aad
loop
js
inc
mov
cmp
xchg
das
shlb
push
push
adc
pop
add
cld
jl
adc
or
mov
mov
shr
fs
js
xor
rorl
cld
shr
mov
mov
pop
stc
jmp
stc
cld
lret
imul
fimuls
inc
inc
and
std
ljmp
add
add
in
add
int3
das
fimull
jle
sti
or
mov
cmpsl
mov
push
inc
cmp
mov
mov
dec
arpl
jecxz
shll
xchg
xor
scas
movsb
shrd
add
loop
test
pushf
or
add
xchg
jns
outsb
movsb
repz
push
push
jo
pushf
loop
cld
icebp
ljmp
scas
data16
pop
ljmp
lods
loop
mov
cmc
add
xor
mov
jmp
mov
add
push
add
and
insb
cmc
icebp
out
xchg
inc
push
shl
add
xchg
out
dec
ds
out
push
pop
xorl
jecxz
call
and
adc
outsb
cmp
add
shl
dec
shrl
lods
add
pop
popf
mov
into
in
adc
lods
sbb
pusha
gs
jge
push
cmpw
inc
dec
and
sub
mov
ljmp
add
mov
inc
sub
sbb
mov
jmp
cmp
mov
inc
adcl
cli
dec
addr16
mov
test
fildl
or
mov
fiaddl
and
add
add
mov
cld
shlb
add
push
loope
pushf
inc
push
push
mov
scas
mov
sub
or
xchg
idiv
mov
incb
or
cmpl
rolb
fs
add
fsubp
mov
jae
dec
add
ja
roll
test
add
xchg
mov
call
add
xchg
jns
ljmp
push
mov
pop
insl
and
shr
jp
dec
add
in
out
inc
add
pop
test
sarl
addr16
pushf
add
fimuls
fwait
add
ljmp
addr16
jmp
stos
push
jecxz
sbb
fcmovnu
sbb
jae
mov
push
inc
and
mov
xor
mov
push
pop
mov
cs
scas
out
add
daa
aaa
in
add
arpl
movsb
loopne
and
ja
mov
ja
imul
lods
xchg
aas
loope
cmp
cmp
adc
jmp
add
lock
fisubrl
stos
test
mov
das
out
stos
add
push
sbb
sbb
sti
test
cmp
and
push
jb
dec
xor
pusha
pop
inc
xchg
add
stc
ss
scas
stc
es
pop
sub
cld
test
lahf
adc
das
jmp
dec
push
int
add
xor
jmp
loopne
sar
cmp
test
jae
test
push
mov
xchg
test
or
fistpll
xor
mov
sbb
inc
sahf
fiadds
testb
les
xchg
aaa
fstl
movlps
pushl
push
pop
les
mov
pusha
mov
dec
int3
arpl
push
int3
jnp
xchg
xor
in
dec
jl
sbb
scas
adc
lcall
ja
jne
pop
les
and
pop
popw
mov
xchg
dec
pop
pop
daa
fcomps
fadds
add
dec
in
lret
movsb
cld
gs
scas
pop
shlb
add
jns
jae
adc
pop
stc
hlt
add
adc
inc
fistpl
loope
jo
mov
out
cmp
xchg
divl
cs
mov
mov
inc
mov
mov
add
inc
outsb
inc
addb
pop
int
push
out
mov
add
mov
les
ret
clc
lods
es
addr16
out
daa
aaa
dec
daa
out
outsl
aas
in
add
mov
sarl
adc
jl
mov
cmpsl
pop
decb
mov
addr16
xor
add
xchg
in
cwtl
aad
jl
cmpsl
out
inc
aad
cmpsl
jb
and
addr16
jb
inc
mov
roll
jae
lahf
cwtl
sbb
int
cmp
xor
xchg
xchg
lret
mov
and
sub
imul
icebp
jno
pop
lahf
aaa
and
cltd
sbb
clc
out
lea
mov
inc
aad
cmpsl
inc
mov
cltd
cmpsl
pop
bound
mov
movsb
add
jp
sub
adcl
dec
xor
xchg
push
add
scas
push
xchg
dec
lret
or
inc
je
int
add
sbb
sub
sbb
dec
push
and
push
adcb
rcrb
push
ret
popf
test
xor
mov
sarb
add
imul
mov
and
mov
jae
in
add
fs
scas
into
cld
test
sarl
mov
into
cmpl
pop
test
cld
ljmp
cld
jb
push
faddl
scas
int
xchg
mov
fxch
add
add
scas
into
mov
dec
hlt
xchg
mov
dec
mov
dec
mov
xchg
mov
popa
pop
sarb
mov
push
xchg
adc
into
cld
ljmp
testb
out
in
call
in
sbb
xor
fimull
shrl
push
xchg
mov
out
xchg
js
and
mov
in
cmc
and
xchg
jns
fwait
push
sub
and
sub
or
ret
mov
rcr
mov
addr16
add
addr16
out
ja
out
outsb
jg
add
lret
mov
sbb
scas
out
cmp
outsl
mov
scas
push
pop
cmc
enter
mov
loop
jmp
test
loopne
push
jmp
jmp
jmp
in
and
loope
lods
mov
ficompl
addr16
sbb
cs
xchg
and
out
icebp
jo
test
daa
sbb
mulb
add
and
imul
mov
test
out
xor
ljmp
lods
dec
add
stos
ljmp
orl
dec
clc
pop
dec
or
in
fiaddl
adc
fldl
push
xor
jne
jmp
jge
outsb
lds
aam
fstl
add
add
cmp
adcl
adcl
push
mov
add
add
lcall
add
test
loopne
xchg
mov
sti
xlat
test
adc
in
push
adc
or
dec
scas
or
scas
into
dec
mov
add
xchg
or
pop
outsb
mov
inc
adc
ljmp
mov
add
cmpsl
dec
pop
pushl
dec
inc
lahf
into
ljmp
mov
decb
dec
inc
mov
add
into
cld
test
test
sbb
sti
std
sub
cld
in
dec
push
and
add
mov
clc
push
mov
fsubrl
out
mov
cmp
shl
jmp
and
cmpsl
cli
add
aas
jecxz
outsb
ja
add
cmp
xor
imul
lock
data16
xor
pop
shlb
imul
out
xor
cmp
add
push
gs
lahf
pop
lds
sub
push
push
sub
mov
movsl
out
jl
jmp
add
test
mov
mov
push
lods
out
icebp
inc
xor
jb
push
call
jbe
outsb
add
lods
addr16
adc
in
sub
outsl
data16
cmp
jno
roll
add
cmp
jo
jbe
inc
rcr
out
test
add
in
adc
test
add
pop
cli
fstps
jge
js
or
outsl
add
lods
sbb
aad
loope
lahf
rol
add
sub
xlat
test
adc
pop
aas
and
cmp
sahf
fucomip
inc
imul
mov
mov
inc
mov
pop
dec
sbb
loope
dec
imul
inc
mov
xor
cmp
jge
and
inc
imul
xor
add
imul
add
pop
test
push
cmp
add
jbe
pop
mov
sub
subb
cld
test
add
mov
sub
fdivs
and
and
ficompl
dec
outsl
dec
mov
ss
push
jb
test
jnp
cmpsl
push
jl
adc
jecxz
push
push
inc
sti
into
cld
test
lcall
js
in
ljmp
pop
mov
and
inc
test
mov
fisubs
dec
scas
into
jnp
aaa
push
pop
and
push
daa
jb
add
addr16
add
xor
test
xor
add
add
arpl
add
addr16
add
addr16
inc
add
xchg
icebp
add
loopw
mov
shrl
mov
test
and
xor
jp
mov
cmp
jae
shlb
pop
mov
out
stos
addr16
fs
push
add
daa
pop
mov
out
scas
push
out
jl
sarl
xchg
adc
stos
add
in
aad
ss
lock
cmp
ret
bound
mov
test
loop
shll
hlt
add
fdivrp
mov
push
ss
out
pop
or
lods
les
jb
jp
test
lahf
jmp
lods
addr16
jmp
lods
addr16
cmpsb
jl
or
lods
jo
jno
add
fdivrp
pop
or
lods
mov
insb
inc
xchg
out
imul
ret
es
add
inc
jge
stos
addl
mov
cmp
into
jnp
jge
dec
mov
sub
inc
dec
pop
icebp
adcl
cmp
jb
xor
adc
add
mov
pop
dec
clc
or
adc
mov
add
jle
cmp
add
pop
dec
clc
push
lock
or
gs
frstor
inc
scas
push
and
scas
into
cld
shlb
ret
int3
cld
lcall
cmp
cld
ljmp
mov
into
cld
or
int
dec
jmp
cmp
iret
mov
cmpsl
push
mov
lods
cmpsb
jle
lahf
jl
or
jns
xor
roll
sub
call
fnstenv
mov
das
std
xchg
fidivl
iret
mov
call
into
call
into
push
adc
addr16
sub
out
js
fistps
cwtl
out
cmpsl
adc
out
add
scas
adc
mov
xchg
lcall
add
fstps
push
xor
mov
add
in
and
insl
cmp
movsb
cmpsl
arpl
out
out
movsl
inc
outsb
test
mov
out
scas
addr16
xor
out
xor
out
jp
xchg
push
sub
add
addr16
add
push
add
lods
pusha
test
xlat
clc
xchg
lods
dec
add
lods
test
inc
loope
xchg
xor
ffreep
out
daa
xlat
clc
jmp
adc
addr16
pop
imul
jmp
clc
jp
cmpsl
sub
out
scas
lods
jge
jmp
lods
addr16
mov
es
lods
loop
jmp
add
fstpl
testl
cmc
and
lds
add
sbb
add
addb
lds
mov
orl
sbb
and
repz
add
push
add
push
out
add
push
out
push
out
jmp
sub
adc
imul
add
inc
xor
call
pop
xor
clc
inc
in
in
pop
lcall
push
test
clc
movb
jecxz
scas
inc
push
std
xchg
cli
pushl
aaa
jge
into
sbb
jl
cmp
adc
jge
mov
or
mov
incl
mov
cmp
inc
test
pop
ds
cmc
xchg
add
sub
sbb
cmp
add
repz
fnstsw
in
inc
sub
pop
mov
xchg
aas
add
inc
mov
scas
mov
cld
pushl
jns
test
in
add
rcrl
inc
xor
push
jge
xlat
std
inc
inc
sub
cmp
arpl
add
fldt
cmp
stos
pop
call
pop
out
xor
repz
mov
adc
iret
jl
iret
gs
mov
sub
adc
filds
scas
call
insb
fisttps
fidivrl
popa
out
mov
in
je
pop
cmp
and
in
pop
jo
mov
bound
sti
in
les
jno
push
mov
call
ljmp
stos
push
loopne
sub
add
repz
push
jns
push
sar
jmp
imull
or
sub
sbb
das
test
out
push
addr16
shrl
lods
test
dec
and
sub
push
aam
or
cld
jmp
lods
or
lods
rorb
xor
int3
add
movsl
jnp
sahf
push
dec
clc
test
incb
scas
pop
mov
cmpsl
inc
and
or
dec
jmp
cmovo
adc
adc
in
dec
sbb
in
or
inc
xor
mov
jmp
dec
movsb
and
data16
lea
popa
psubusw
dec
dec
mov
clc
xor
push
sarl
fs
push
out
add
push
sbb
push
aas
dec
inc
inc
lock
gs
lea
or
add
inc
mov
call
xor
inc
jge
addr16
push
inc
cmp
ljmp
mov
lcall
jne
lret
mov
aad
sub
add
scas
inc
mov
idivl
insl
pop
test
mov
in
inc
icebp
jle
addb
mov
test
icebp
xor
jge
mov
cld
jmp
rorl
loope
arpl
inc
test
call
xor
xor
iret
and
loop
sub
cltd
inc
sub
push
or
sub
cmpsb
ds
xor
sbb
add
iret
rol
cmpsb
aas
cld
cmpsl
sbb
xor
sbb
aas
cmpl
aas
add
xchg
fsubl
inc
pop
pop
loop
out
jecxz
add
xlat
push
adc
in
out
scas
addr16
hlt
data16
pop
out
mov
in
fs
popa
lcall
push
pop
std
rol
ret
push
roll
sti
shl
inc
adc
mov
test
fs
pusha
test
sub
testl
outsl
and
xchg
or
jmp
ljmp
sub
scas
xchg
lock
in
push
sar
fisttpll
pusha
mov
insl
and
bound
fbld
mov
add
or
push
stc
cmp
add
lock
push
rcl
sbb
arpl
hlt
push
jle
mov
sub
cmp
int
jae
in
cld
xchg
jns
pushf
xchg
push
movups
dec
cli
faddp
shl
fiadds
in
or
test
fisttpl
lcall
lds
addl
mov
lcall
mov
fnstsw
push
lahf
faddl
push
push
mov
dec
arpl
test
lods
sar
dec
adc
jae
pop
enter
popl
dec
into
addr16
cmp
jnp
outsl
cwtl
xchg
fwait
dec
arpl
or
stc
sub
pop
or
push
pop
add
sar
scas
lods
orb
xor
into
imul
mov
push
xchg
lock
mov
pushf
mov
int3
dec
call
addr16
and
mov
addr16
rep
jo
clc
loop
adc
mov
loopne
mov
sbb
fs
lahf
imul
fsubr
outsb
shl
movsb
out
scas
addr16
out
inc
mov
add
sbb
aad
push
addr16
imul
and
adc
cmp
inc
call
mov
add
gs
out
arpl
add
add
dec
jnp
stos
int3
clc
jmp
mov
cmp
pusha
hlt
pop
test
in
jb
stos
xchg
mov
in
in
fsub
pop
loope
and
sub
jmp
jl
test
mov
pop
cmp
pop
ret
test
sub
add
call
loop
pop
xor
iret
or
add
imul
ret
shrb
out
test
ss
add
imul
push
add
dec
les
dec
jge
mov
or
push
rorl
movsb
cmp
test
add
loop
add
les
lret
loopne
fwait
dec
inc
add
dec
stc
call
fwait
inc
mov
mov
or
pop
scas
leave
fbld
mov
rclb
test
pop
jge
inc
data16
add
mov
bound
idivl
mov
fcompl
fnstsw
sub
lods
incl
test
or
inc
mov
sub
jb
cmc
add
scas
cmp
sbbb
mov
test
jl
xchg
sbb
sti
add
mov
mov
ret
lods
xchg
cmp
add
insl
rorb
bswap
mov
adc
je
loop
xor
fildl
pusha
ljmp
mov
xor
sub
mov
sarb
movsb
int
scas
fsubrl
jne
bound
addr16
xchg
jl
mov
in
insl
dec
dec
mov
arpl
sub
push
jmp
scas
incl
mov
mov
enter
add
addr16
test
add
push
or
pop
shrl
rolb
lods
or
jae
and
je
jmp
sub
insb
adc
add
add
fnsave
mov
lods
pop
mov
jmp
cld
cs
pop
jo
mov
dec
sti
loop
dec
and
xabort
lods
mov
adc
inc
cmp
pop
add
mov
xor
add
call
pop
mov
add
cmpsb
mov
ret
popf
xor
mov
lea
mov
leave
jg
in
cmp
cli
cmp
stc
inc
leave
add
push
mov
addl
dec
mov
inc
inc
sub
add
stc
call
mov
mov
testb
or
jno
leave
ljmp
mov
sbbl
cld
jmp
inc
out
aaa
shll
ljmp
jecxz
or
scas
sar
cld
outsl
mov
clc
loope
fcoml
dec
sti
mov
adc
aam
mov
push
mov
add
inc
jecxz
and
std
out
push
mov
aas
lods
sar
or
mov
jl
mov
test
in
rcll
or
inc
mov
outsb
lods
push
jne
add
out
jp
insl
enter
or
sbb
mov
adc
pop
inc
test
lret
loop
sub
sbb
ljmp
lods
xchg
insl
cmpsb
std
mov
xor
repz
or
int
scas
lock
inc
shrb
jno
bound
addr16
lret
mov
les
pop
mov
jo
daa
add
nop
pop
in
scas
lock
or
cmpsl
sub
xor
mov
das
add
lods
ljmp
arpl
insb
or
inc
cld
jmp
lods
or
mov
int3
dec
imul
ljmp
test
lods
addr16
adc
inc
lret
inc
movsl
pop
lret
test
add
add
sbb
lods
addr16
fwait
or
sar
xor
loopne
lock
je
mov
xchg
or
test
add
cmp
incl
outsb
bsr
orl
inc
sub
add
sub
shll
enter
mov
xchg
orl
test
or
push
mov
and
jge
cmp
mov
test
decb
lods
xor
fcompl
hlt
inc
inc
dec
mov
sub
mov
jmp
out
inc
add
movsb
add
out
inc
repz
sub
orl
scas
mov
cld
shlb
daa
lock
jge
aas
rolb
test
iret
cld
jmp
and
or
out
adc
ljmp
sarb
cmpsl
rolb
test
sar
ljmp
fsubrl
cltd
and
mov
cld
or
int
dec
mov
lea
mov
jo
cwtl
gs
push
sub
xchg
add
mov
enter
adc
rorl
mov
dec
in
mov
decl
aam
cmp
sub
and
push
imul
jns
out
je
outsb
rcrb
out
mov
adcb
outsl
shl
and
ss
addr16
dec
sub
testb
in
lods
inc
shrb
and
enter
add
lods
inc
rcrb
ljmp
test
cmpsb
aas
add
jmp
jle
shr
addr16
das
ds
stos
jmp
jmp
mov
addr16
das
mov
jnp
stos
outsb
test
addr16
ret
pushf
loopne
leave
cmp
cmpl
scas
lahf
jl
adc
ret
je
add
sub
cs
push
aas
pushf
in
mov
add
daa
data16
mov
mov
idiv
stc
cltd
push
pop
dec
popa
push
ret
addl
inc
call
lret
jae
adc
push
adcl
repnz
cmp
imul
xchg
mov
xor
jnp
sbb
add
adc
stc
incl
inc
imul
sar
sar
leave
jae
mov
orl
inc
or
movsl
call
cld
jg
or
out
push
pop
mov
cmp
insl
orl
call
test
outsb
cmp
sub
fbld
cld
out
in
stc
xor
mov
add
xor
stc
add
jns
add
hlt
test
sbb
mov
iret
fists
add
iret
int
sub
cmc
pushl
or
fiadds
je
push
lods
imul
mov
xor
clc
test
fxch
pop
loopne
imulb
outsb
shll
sar
adc
lock
and
scas
push
and
add
call
stos
enter
add
lahf
fnstsw
cltd
gs
call
and
in
lods
test
out
scas
push
data16
push
jmp
add
xchg
mov
mov
or
and
idivb
xchg
jb
add
xchg
pop
inc
add
jecxz
cmp
outsl
add
fsubp
loop
jno
add
jg
add
jnp
stc
dec
jnp
fs
jnp
ljmp
add
push
jnp
in
dec
jnp
pop
adc
jg
jnp
cld
adc
adc
jnp
inc
pop
jnp
movsb
or
mov
jnp
xchg
jnp
or
add
push
jnp
outsl
xor
add
xor
add
jnp
adc
jnp
add
fnstsw
add
cmp
das
push
cmp
orl
add
push
cmp
ljmp
add
cmp
push
add
add
add
inc
add
bound
int3
inc
jnp
int3
lret
cmp
push
or
repnz
shrb
dec
push
shlb
xor
es
add
cmp
sub
js
orl
dec
sub
js
or
mov
add
or
scas
sub
stc
lock
cld
lret
repz
cmp
jmp
aas
int3
jecxz
inc
int3
sti
jnp
in
pop
inc
mov
data16
dec
xbegin
jge
dec
adc
add
leave
jb
mov
pop
add
iret
in
mov
and
adc
pusha
loopne
les
xor
jne
fdivrp
rclb
sub
xor
sub
scas
sar
out
and
push
out
mov
mov
xor
andb
and
ljmp
mov
test
mov
mov
sub
jnp
int3
sbb
into
outsl
out
scas
addr16
jnp
sbb
aas
jnp
cmp
pop
ss
fucomip
jle
in
mov
sub
scas
addr16
inc
and
push
in
stos
das
lret
jp
jecxz
mov
loopne
imulb
es
jl
mov
into
sub
outsl
add
out
and
stc
push
add
loop
std
movsb
add
mov
adc
test
or
stos
mov
in
test
fnsave
adc
jb
pusha
pop
test
pop
std
cltd
imul
pop
stos
push
adc
std
call
test
stos
out
stos
lret
sbb
lret
jl
scas
sub
xlat
mov
out
mov
lods
add
fidivs
idiv
add
ds
xchg
adc
sbb
nop
lock
mov
jle
idiv
test
add
sahf
ds
ret
dec
clc
pop
test
or
loopne
jne
cmp
je
outsb
jmp
xor
mov
ja
rdmsr
sub
or
cmpl
dec
incb
shll
call
aad
add
add
xor
ret
dec
clc
xchg
mov
or
xchg
jns
xor
adc
sub
jge
les
and
sub
neg
cli
mov
iret
out
data16
sub
add
inc
sbbb
out
testb
fwait
and
sub
add
inc
jmp
adc
data16
mov
or
out
shll
xor
add
into
cmp
test
enter
xor
mov
out
rolb
jo
out
mov
xor
es
pop
lcall
addr16
lods
addr16
scas
loop
iret
sub
mov
jmp
sbb
jecxz
xor
sti
mov
fwait
jle
jmp
loop
clc
pop
push
outsb
test
jp
popf
mov
scas
sub
cmpsb
mov
add
cmp
mov
rcr
mov
cmpsb
scas
mov
sub
xor
into
xor
sbb
sbb
orl
mov
xlat
jo
xchg
xchg
mov
clc
lcall
jmp
out
xchg
or
jmp
lds
psubsw
std
pusha
cmpsl
jae
loope
mov
lods
add
test
aad
add
mov
or
addr16
ret
bound
xor
ljmp
dec
xchg
test
xor
jmp
aad
add
adc
push
ja
ret
enter
cmp
jmp
dec
xor
iret
cld
call
repz
bound
lods
jno
mov
push
sub
clc
lcall
addr16
or
jmp
xchg
mov
mov
clc
push
cmp
clc
call
adc
push
add
addl
dec
push
sbb
pop
adcl
not
adc
add
add
arpl
test
in
mov
mov
inc
mov
or
int
std
stos
fwait
jg
enter
lret
test
sbb
inc
mov
mov
push
pop
aam
test
out
dec
andb
popa
sub
xor
adc
sub
inc
lret
push
add
lcall
jecxz
and
sbb
jae
rcrl
pop
pop
insb
push
jne
sub
fisttps
inc
cld
ficomps
outsb
test
jb
xor
sti
stos
sub
data16
add
cmp
jge
lret
pop
mov
mov
gs
mov
adc
lret
sub
fwait
inc
jle
aas
dec
imul
repz
outsb
dec
sub
jge
imul
xchg
sti
add
add
scas
addr16
xor
jl
scas
pop
xor
jmp
scas
cmp
sti
stos
mov
out
jae
jo
movsb
jmp
scas
pop
jne
mov
lods
jp
testb
call
ds
xor
jmp
xlat
sub
bound
test
xchg
ljmp
outsl
mov
sub
incl
add
inc
or
adc
inc
cmp
add
push
or
inc
xchg
test
mov
lock
shll
pop
ret
xor
in
mov
pop
mov
add
lods
addr16
xchg
mov
scas
orl
clc
push
mov
cmpsb
clc
incl
add
mov
xchg
dec
push
add
lock
push
xchg
not
aad
adc
test
dec
lea
mov
js
push
xchg
insl
adc
dec
add
orb
add
push
pushl
xor
jg
dec
pop
cltd
lds
xlat
dec
lock
xchg
sub
call
into
mov
jle
test
and
cmp
or
sub
dec
mov
dec
add
mov
test
fdivs
sub
cmc
add
js
dec
ds
mov
lock
push
inc
lds
adc
xor
stc
and
and
xchg
pop
jge
stc
clc
inc
cmp
xor
stc
xor
and
xchg
and
stc
add
inc
cmp
push
fldenv
mov
sub
mov
or
mov
sub
test
inc
cmpsb
in
and
arpl
fs
pop
dec
sub
jns
imul
mov
frstor
inc
scas
mov
xor
je
xchg
mov
push
xchg
sub
mov
pop
insb
sub
lods
sbb
out
loope
sub
mov
and
loop
out
pop
add
clc
out
sub
cld
cmp
addr16
daa
out
cli
int
inc
lods
insl
jne
sbb
fwait
lret
sbb
mov
push
jb
popa
push
jb
loop
out
cmpsb
punpckldq
in
out
sub
or
dec
xchg
lahf
loop
mov
push
test
jo
pop
test
mov
lods
es
loope
xor
mov
aad
in
test
popf
sti
div
sub
sbb
test
mov
and
or
and
add
mov
jnp
mov
rcrl
cld
mov
int3
int3
bound
int3
int3
inc
pop
int3
int3
stos
addl
push
mov
adc
add
fcmovu
pop
add
sahf
inc
mov
fisttpl
stc
clc
dec
push
push
push
mov
ljmp
test
repz
push
idiv
scas
inc
dec
add
jle
add
pop
in
aas
cltd
repz
or
std
cmp
pop
xchg
mov
dec
mov
cmp
lret
adc
cwtl
ds
add
add
test
mov
push
pop
outsl
mov
xchg
adc
add
add
mov
adc
test
lock
push
dec
adc
add
adcl
dec
aaa
rorb
stc
or
inc
add
adcl
mov
mov
cmc
mov
gs
stos
in
xchg
lret
in
and
and
cmp
fcomp
pop
cmpsb
fisubrs
aam
sbb
mov
cltd
into
jae
stos
mov
inc
sti
data16
jbe
sub
and
cltd
jle
pop
stos
mov
dec
inc
fisubrs
and
imul
sbb
xor
sub
scas
dec
pop
add
xor
xor
jmp
scas
mov
loop
jo
incb
push
mov
out
jne
sub
divb
icebp
dec
jb
mov
jl
test
mov
and
in
dec
cltd
scas
jl
test
mov
xchg
aas
and
xor
loop
mov
scas
jl
test
mov
and
insb
jmp
push
mov
pusha
jge
inc
data16
mov
out
rclb
call
adcl
jnp
test
fidivrs
test
add
rolb
jnp
jns
inc
cld
bswap
loopne
jmp
orl
adc
test
add
std
mov
cmp
mov
mov
fnsave
orw
je
loope
je
fimuls
cltd
sub
inc
mov
jg
ret
int3
sbb
sub
hlt
xor
jb
cld
sub
addb
pop
cmp
stos
test
xchg
movsl
inc
insl
add
mov
ret
push
aam
scas
pop
scas
dec
pop
sub
rclb
add
jnp
jl
into
jg
daa
xchg
xchg
and
loope
xchg
sbb
das
xor
add
or
into
sub
sub
push
inc
loop
rolb
xchg
mov
mov
dec
lret
into
add
xchg
fimuls
in
and
cli
jbe
dec
fsubs
imul
cmpsb
out
insl
mov
les
test
push
aaa
mov
mov
add
ljmp
outsl
sbb
mov
mov
lea
ljmp
or
repnz
xor
mov
subb
stos
add
jno
in
inc
sbb
cmp
mov
sahf
mov
subl
movsb
test
sub
lock
dec
sbb
push
call
add
inc
mov
popf
mov
subl
and
lods
sbb
jb
push
mov
xor
icebp
scas
xchg
and
in
add
test
jmp
mov
sbb
decl
addl
dec
in
hlt
ja
call
hlt
cli
mov
ret
jne
sti
mov
inc
push
test
shlb
incl
cmc
inc
clc
pop
sub
sar
push
adc
loopne
repz
jge
cmp
fisttps
in
mov
addl
inc
jp
cmp
pushl
jge
xchg
and
jnp
cmpsb
imul
mov
mov
or
mov
stc
add
xor
adc
and
int3
dec
jns
jg
scas
mov
je
adc
sub
sub
fdivr
pop
mov
jnp
jecxz
rcrl
fmul
test
scas
dec
xor
clc
dec
pop
popf
sub
shlb
mov
je
mov
insb
push
mov
repnz
aad
je
jnp
nop
mov
and
or
cltd
nop
cld
cmp
mov
insl
mov
stos
out
xor
xor
cs
inc
pop
inc
xorl
mov
inc
jmp
mov
mov
lea
mov
mov
mov
mov
mov
addr16
insb
outsl
ffreep
mov
pushf
inc
addr16
mov
cmp
mov
fcoms
cmc
inc
movsl
add
xor
adcb
test
inc
mov
add
call
sub
jmp
jo
shll
mov
inc
adc
aam
cmc
pop
shr
sbb
les
cs
or
cli
xchg
and
imul
ja
lret
sub
and
push
lcall
push
cmpsl
ss
test
imul
push
jecxz
jmp
add
jg
incl
jns
pop
fucom
dec
mov
out
add
insl
sub
cltd
inc
pushf
mov
mov
add
push
data16
or
add
iret
clc
imul
push
pop
in
bound
push
rclb
loop
add
dec
add
ljmp
lea
call
xchg
repnz
jns
xor
or
sbb
mov
es
movsb
xchg
xor
add
fiaddl
imul
int3
arpl
in
xor
or
repnz
iret
clc
es
xchg
pop
faddl
and
cld
cmp
add
adc
add
mov
clc
and
movsb
mov
jl
cltd
jns
pop
xchg
enter
bound
inc
jg
test
call
sub
stos
ljmp
scas
shrl
mov
dec
sbb
xor
cld
fs
jbe
mov
in
fwait
push
mov
push
outsb
inc
inc
leave
xchg
adc
jmp
ljmp
scas
orl
add
icebp
je
es
ljmp
scas
push
mov
pop
scas
add
outsb
inc
pop
sbb
ljmp
scas
and
mov
repnz
fisubrl
jnp
sub
jb
xor
jge
mov
add
cs
cmp
sub
in
xchg
mov
cmpsl
ljmp
add
sub
je
mov
out
mov
xchg
jl
cmpsl
ljmp
enter
inc
jns
mov
stos
addr16
or
mov
insb
out
dec
cmc
dec
test
ret
sub
es
cmpsl
jae
xor
dec
add
mov
sub
xchg
add
xchg
or
icebp
fwait
add
or
cmp
inc
callw
sbb
call
lds
test
cmc
std
andb
jecxz
mov
jp
and
sub
mov
imul
xchg
imul
ret
std
mov
dec
scas
sub
mov
mov
sbbl
add
add
stc
les
leave
cltd
push
mov
jmp
mov
nop
mov
std
pop
xor
push
and
aam
popa
mov
out
push
add
adc
stc
and
add
lods
or
add
mov
ljmp
in
jl
lea
es
add
add
fnstcw
pop
sbb
pop
in
dec
inc
int3
sti
cli
jnp
sub
clc
test
out
aam
in
mov
subb
jge
cmp
push
ficoml
loope
xchg
cmp
in
loop
mov
cld
rcll
cmp
add
loop
repnz
or
mov
push
cmpsl
mov
test
inc
add
lock
sub
ror
ds
add
pop
addl
scas
addr16
mov
jo
scas
addr16
jne
add
insb
in
ljmp
rcrb
test
call
data16
adc
and
out
xor
call
add
add
push
test
xor
mov
imulb
loop
call
stos
subl
in
gs
insb
repnz
sbb
test
add
cmpsl
call
test
ret
jmp
cmp
add
in
gs
push
xor
jge
add
cli
xor
in
adc
and
test
or
add
arpl
add
gs
push
std
sbb
imul
shrl
xor
fs
cld
mov
mov
je
shrb
push
lock
add
out
enter
add
jmp
stc
orl
cld
jmp
in
add
xchg
std
xor
add
les
xchg
adc
in
or
aaa
mov
nop
add
hlt
cli
mov
mov
mov
adcl
addr16
xchg
xchg
fsubrp
inc
fistl
lods
out
fs
xchg
test
scas
mov
aas
pop
ret
adc
pop
and
jae
jge
nop
je
addr16
xchg
orb
jl
pop
mov
pop
add
mov
in
rcll
loop
cwtl
sahf
mov
jle
addr16
mov
in
repnz
xlat
jnp
pop
cmpsl
enter
jns
ja
mov
mov
xor
scas
inc
addl
add
push
out
fcmovb
jnp
lea
adc
lea
pushl
in
inc
insl
inc
cmp
jb
xor
sbb
test
or
sbb
dec
or
or
nop
mov
lret
sub
aaa
orl
or
movsl
das
mov
add
xchg
call
jns
inc
jae
das
push
and
imul
sub
insb
andb
add
pop
lcall
jmp
sbb
je
sub
pop
jns
push
push
lods
imul
add
add
roll
or
add
testl
call
cmp
clc
or
clc
incl
imul
add
or
ljmp
xchg
imul
mov
int3
inc
pop
int3
int3
push
pop
int3
int3
mov
popf
stc
call
dec
push
fnstsw
or
add
adc
mov
dec
ja
cmp
add
xchg
lahf
add
xor
inc
icebp
xchg
sub
stc
clc
jns
or
xor
ja
fistl
jg
lret
inc
jp
xor
add
cltd
xchg
testb
xor
clc
mov
lock
fwait
test
stc
ffreep
mov
incl
add
xor
push
test
bound
stc
push
xor
ja
xchg
cltd
or
inc
adc
sub
cli
add
mov
jb
push
loop
sbb
jae
add
adcb
stos
loop
out
sbb
test
xchg
imul
xchg
sub
xor
sbb
xchg
push
sub
xchg
adc
and
cmp
xchg
xchg
icebp
jbe
xchg
xchg
jbe
pushf
loopne
xchg
gs
add
out
or
in
add
push
xchg
jmp
orl
fwait
stc
cmpsb
mov
decb
xor
mov
xchg
out
jbe
nop
mov
clc
data16
mov
pop
cmpsl
adc
in
jno
jae
xor
stc
cmpsl
fimuls
cwtl
inc
fdivp
daa
mov
out
mov
imul
xor
nop
clc
fs
lcall
test
cs
mov
jl
scas
out
push
lods
adc
add
cmp
lcall
push
adc
mov
clc
add
fwait
ja
add
adc
addl
sbb
push
lea
jae
in
jns
jnp
add
out
je
in
decl
imul
push
mov
idiv
cltd
adc
call
adc
idiv
or
cmpl
xchg
test
mov
jo
popa
stos
add
lahf
pop
stc
push
push
jne
mov
jnp
push
jl
jl
cli
jne
shl
add
js
mov
add
or
cli
adc
lods
xchg
jle
jl
lcall
call
sub
mov
mov
and
stc
enter
rorb
mov
cmp
stc
xor
fprem
mov
in
ja
fwait
cwtl
add
xchg
adc
inc
mov
cmpsb
nop
jae
popf
add
sub
or
add
mov
push
ds
add
adc
mov
xchg
jns
dec
mov
push
nop
jno
mov
imul
ljmp
pop
jg
imul
cmp
fwait
xor
and
push
sbb
cmpsb
gs
stos
in
nop
fwait
ljmp
add
xor
addr16
clc
out
pop
xor
cmp
dec
mov
jg
in
idiv
mov
in
add
add
stc
xchg
mov
testb
ljmp
xchg
cld
pop
inc
xchg
dec
jb
inc
stc
pop
stos
loop
pop
mov
clc
pusha
push
add
inc
mov
mov
inc
xchg
movsb
add
std
imul
add
nop
clc
add
xor
xchg
push
lea
arpl
jmp
testl
jno
jnp
dec
fistpll
dec
lock
push
mov
mov
push
lret
or
in
cltd
push
lea
in
or
jb
or
cmp
and
jno
test
jno
notl
imul
pop
aad
push
mov
push
sub
xor
sbb
les
xchg
pop
xchg
std
clc
pop
cld
ljmp
or
stc
push
popf
std
clc
es
pop
stc
push
into
mov
ss
fadds
add
xlat
add
ret
add
adc
push
in
push
aaa
xor
lock
pop
test
mov
leave
lret
jecxz
leave
lret
sti
jmp
jmp
dec
sub
push
sbb
mov
add
sbb
dec
fisubs
in
pop
xchg
mov
and
mov
add
nop
roll
loop
loop
cmc
loopne
pop
adc
mov
pop
sbb
mov
cltd
test
bound
lea
fwait
mov
in
stos
shl
lcall
cmpsl
loop
ja
fisubl
or
mov
add
xchg
jmp
xchg
pushl
sub
sbb
push
jae
mov
add
add
pop
sub
in
lods
fwait
lret
sbb
pusha
lahf
lret
lods
js
lret
cmp
jg
mov
xchg
push
sbb
iret
in
or
ja
aas
and
or
daa
pop
or
pop
add
daa
push
cmc
clc
jle
xor
jmp
lods
addr16
xchg
push
scas
nop
mov
xor
dec
call
inc
mov
add
mov
movsb
or
xor
bound
and
js
add
lea
inc
add
stc
push
imul
dec
add
dec
clc
iret
push
push
mov
adcl
lahf
add
add
lahf
push
pusha
mov
arpl
add
xor
adc
scas
std
movl
shlb
stc
pop
xor
pop
mov
stos
pop
jne
je
js
xor
jmp
in
or
pusha
or
shrl
addb
jns
out
xor
jge
jge
or
jb
mov
jg
in
mov
cld
in
mov
cld
test
or
ljmp
data16
xchg
mov
and
lahf
add
fisubs
fmuls
jge
enter
stos
addr16
lret
dec
fisubrs
test
out
call
fsubl
add
fsubrl
add
pop
je
mov
in
add
addr16
mov
addr16
xor
mov
jmp
add
filds
scas
addr16
mov
testl
or
push
mov
mov
call
roll
fucomi
lods
addr16
mov
pop
xchg
xor
lods
addr16
pusha
repz
lods
and
mov
pop
add
outsl
jae
cwtl
jb
ss
js
out
addr16
xor
mov
cmpl
mov
cmp
and
cmp
xchg
out
aaa
pusha
mov
call
jb
cmp
adc
in
inc
loope
inc
dec
loope
add
pop
sbb
incl
push
testb
call
mov
pop
test
int3
mov
int3
xorb
int3
sbb
in
or
dec
sahf
sbb
cmp
bound
push
xchg
xchg
std
mov
push
int3
shlb
in
sbb
jne
sbb
add
sbb
push
add
and
and
add
xchg
movb
add
push
and
add
scas
nop
jl
scas
xchg
cld
ljmp
nop
cld
pop
in
add
mov
mov
scas
nop
push
mov
mov
nop
mov
ljmp
cmp
lret
jae
enter
mov
jge
outsb
jo
push
mov
xchg
vmread
add
add
mov
or
mov
sbb
dec
add
imul
xchg
pop
mov
hlt
mov
in
cmp
mov
and
push
sub
jne
adc
cli
xlat
lock
xor
loope
insl
andl
pop
pop
push
mov
xchg
mov
jnp
mov
ja
push
add
push
adc
mov
jg
jbe
test
pop
aad
or
mov
je
mov
je
stos
enter
lea
lea
sub
mull
outsb
andl
pop
mov
xor
sub
xor
mov
test
add
jmp
stos
push
shlb
test
pusha
ret
imull
lret
pushf
and
or
insb
ljmp
and
and
dec
test
xor
cwtl
addr16
in
in
subl
cld
inc
jne
jmp
subl
mov
jg
mov
sbb
int3
dec
stos
int3
shl
in
add
imul
jmp
incl
adc
je
adc
mov
jnp
push
pop
out
jne
aas
stc
sti
jmp
and
inc
in
cmp
jne
repz
call
add
mov
push
cmpl
and
stos
addl
dec
cld
cltd
sbb
lret
jnp
lret
add
lret
imul
lret
arpl
jmp
add
jl
sbb
ljmp
js
out
test
inc
xorl
mov
nop
in
es
cld
ljmp
adc
jae
mov
ds
fisttps
lcall
clc
sbb
adc
sar
jl
jb
pop
insb
mov
dec
enter
test
add
test
lds
fldcw
in
jmp
push
inc
pop
jecxz
out
addr16
fisttps
test
or
mov
mov
addl
hlt
mov
hlt
mov
in
sub
in
mov
or
addr16
xchg
and
stos
inc
fs
scas
test
or
rep
add
jmp
and
push
xlat
test
sub
xlat
push
test
cmpsl
mov
mov
add
stc
roll
jo
lret
popf
ja
lret
mov
lods
lret
lods
lods
lret
fs
mov
push
insb
dec
add
sbb
xchg
das
rolb
mov
and
jmp
jmp
and
sub
xor
jl
lods
addr16
lods
add
dec
add
lcall
mov
jnp
call
xor
addr16
lods
pop
imul
aam
push
add
jp
pop
imul
lret
push
adc
int3
add
int3
lret
lock
add
imul
or
push
or
imul
in
mov
ja
add
rorl
mov
or
add
out
xchg
mov
jo
add
lret
or
ror
lahf
call
or
push
adc
push
mov
pop
add
scas
nop
ss
test
std
std
ds
test
nop
cld
test
mov
mov
ret
std
cld
mov
aad
xor
pushf
or
and
nop
cld
xor
scas
nop
jbe
and
cld
xchg
push
add
pop
je
jmp
add
es
xor
jne
test
jnp
pop
movsb
stc
call
mov
roll
jnp
daa
fdivr
ljmp
push
jnp
pop
push
jge
dec
xor
sbb
lods
xor
lods
sub
je
fwait
jle
jmp
jmp
sub
cmp
out
cmp
sub
pop
pop
icebp
pop
or
out
adc
xor
fistps
call
ss
cmp
cmpsl
mov
jle
cmpsb
test
stos
mov
jnp
jo
add
lock
call
jo
add
lock
sarb
add
add
lock
mov
jo
add
out
call
adc
adc
lods
loop
jno
bound
jmp
mov
sbb
lods
dec
repnz
and
pusha
fistpll
pop
inc
std
negb
addr16
rcll
call
fbld
jmp
sarb
jmp
xchg
sbb
jo
ja
bound
shlb
scas
mov
pop
test
jp
mov
std
add
pop
scas
xchg
les
xor
bound
popa
add
inc
cmp
add
loopne
iret
jl
cld
ljmp
aas
scas
psraw
mov
cwtl
push
mov
dec
mov
push
sti
aad
enter
fimull
add
inc
cld
jne
mov
jg
dec
xchg
xchg
addb
inc
add
fwait
lret
or
ja
test
inc
cmp
data16
dec
rolb
int
add
stc
pushf
and
data16
scas
or
xorl
add
cmp
lock
pushf
sti
incl
cltd
sub
lods
or
js
cmc
push
cld
sub
imul
sbb
jp
add
jae
add
jnp
movsb
nop
cld
mov
ljmp
pop
hlt
jl
mov
jne
stc
mov
add
std
xor
jae
test
add
fsubs
push
in
shll
jl
jp
testl
sbb
mov
adc
icebp
out
shll
push
xor
shlb
inc
in
adc
adc
jnp
in
mov
xor
and
aaa
jns
out
xor
mov
push
fs
loop
js
mov
insb
jae
mov
out
clc
js
jge
fsubr
mov
imul
call
push
std
sti
jb
outsl
xchg
mov
mov
out
xor
mov
adc
shrb
cld
add
insb
insb
hlt
adc
out
jae
sarb
data16
jmp
push
js
shlb
pusha
xor
add
out
rep
addr16
clc
fs
add
jmp
mov
mov
add
arpl
out
jecxz
lahf
bound
add
clc
imul
popa
cmp
jne
sub
dec
adcb
cmpsl
int3
shlb
in
rclb
push
std
jns
mov
imul
dec
xchg
idiv
mov
sbbl
cs
add
inc
imul
insl
decb
mov
or
clc
add
add
or
orl
mov
jnp
jge
sar
push
imul
mov
hlt
dec
ss
xchg
jne
sarl
repz
push
add
scas
pop
push
clc
mov
cmpb
cmp
scas
lea
incl
mov
je
cltd
cmp
lahf
cmp
les
sti
mov
xor
scas
andb
out
iret
fnsave
cld
popa
mov
stos
adc
fmuls
adc
xchg
adc
outsl
xchg
cmc
mov
testl
cld
xor
jle
mov
add
jne
add
sbb
xchg
fidivl
dec
loopne
lods
sahf
addr16
cmp
loope
mov
out
or
xlat
outsb
adc
adc
jge
mov
add
jne
fnsave
jle
jg
addr16
cmp
cli
sub
out
scas
fs
mov
add
and
mov
in
mov
mov
decl
push
add
lds
lods
xchg
pop
pop
int
popa
sub
jo
mov
cmp
adc
lods
ljmp
lods
addr16
fwait
ljmp
adc
test
mov
pop
test
push
add
stc
icebp
jmp
in
scas
stc
lret
sbb
sbb
stc
aam
mov
cmp
push
xchg
add
bound
les
sbb
add
xchg
add
mov
add
add
addl
in
lcall
cwtl
jne
lcall
push
icebp
mov
jg
mov
pop
add
popf
scas
jbe
mov
add
in
inc
or
xor
data16
mov
xchg
push
jb
js
add
add
mov
pop
adc
add
push
outsl
adcb
bound
mov
cmpb
addb
sbb
mov
xlat
test
jno
mov
jne
cmp
jmp
call
adc
cmc
movsb
mov
fsubr
pop
pop
pop
leave
push
add
or
xchg
arpl
loop
xchg
mov
ss
popa
pop
pop
jl
cmpsl
idivl
in
mov
call
jmp
test
push
fwait
outsb
insb
mov
addr16
jo
pop
adc
addr16
xchg
and
mov
or
jge
mov
add
pop
out
add
push
in
scas
or
lods
sahf
addr16
stc
fs
sub
jno
cmpsb
mov
outsb
in
mulb
dec
call
jl
pop
out
lret
cmp
outsb
test
addr16
jbe
xor
pop
jno
push
inc
or
sbb
inc
loope
and
mov
lods
test
mov
add
bound
push
fldl
pop
xchg
push
add
je
or
lods
adc
lods
ljmp
mov
jg
sbb
fstl
mov
add
jae
pusha
push
mov
pop
adc
bound
popa
jmp
gs
add
mov
lods
addr16
fwait
push
jmp
add
fucomp
mov
add
jnp
push
out
or
bound
lret
loop
xor
mov
xchg
jbe
push
add
out
dec
adc
jmp
push
push
mov
out
cmp
mov
popa
add
pop
xor
mov
jp
nop
andb
dec
or
add
pop
test
shl
call
mov
xchg
mov
mov
and
add
or
add
scas
add
ljmp
jnp
call
jl
mov
cvtdq2ps
pusha
icebp
mov
push
or
iret
frstor
cld
xchg
pop
pop
pop
stc
or
scas
stc
dec
adc
add
add
dec
adc
mov
lea
add
jbe
pushl
sar
clc
je
pextrw
cmp
cmp
clc
cmp
imul
adc
js
imul
scas
add
xor
adc
loop
cmpsl
sahf
addr16
mov
sahf
cli
xor
push
daa
loopne
mov
xor
movsb
loopne
lock
pop
jo
roll
jae
push
out
xor
fisttpl
scas
fucomip
hlt
sub
add
fwait
loope
popf
mov
pop
pop
clc
cmpsl
loopne
mov
add
push
scas
fxch
movsl
popa
cmp
push
cmp
mov
pusha
cmp
or
add
adc
lods
ljmp
add
into
pusha
ja
xorb
add
cld
call
nop
jl
out
dec
addr16
lods
cmpsb
inc
xchg
mov
add
shll
lods
add
add
lods
addr16
fsubrl
mov
subb
out
adc
int3
ficompl
push
or
int3
push
add
std
incb
mov
arpl
add
icebp
or
cs
mov
push
adc
addl
add
fisttpl
mov
mov
push
push
push
adc
icebp
mov
push
push
inc
or
cld
mov
push
adcl
and
ret
jnp
ret
mov
fidivs
in
mov
js
mov
cmp
outsb
jl
mov
xchg
cld
jmp
or
pusha
leave
xor
fidivl
bound
data16
testb
mov
pushf
adc
testb
mov
std
pop
mov
cmp
orl
test
idiv
loopne
ds
jno
movb
int
jl
repz
push
pop
xchg
xchg
push
shll
out
adc
rolb
scas
fisubrs
stc
jo
gs
fs
pmulhw
mov
sbb
mov
imul
scas
ficoms
imulb
push
or
rorl
pop
add
and
mov
out
call
cmp
gs
pop
mov
sub
pushl
shrl
mov
popa
andb
xchg
push
add
popf
outsb
ss
mov
add
lods
adc
lods
ljmp
loopne
push
test
shr
jmp
sbb
lcall
mov
pop
mov
xor
add
and
pop
stc
daa
pop
pusha
mov
sbb
jmp
mov
jecxz
push
loop
clc
pop
faddl
add
add
sub
add
pop
mov
int
add
fs
movsb
pop
scas
xchg
inc
inc
add
mov
add
fisubl
repnz
push
fs
inc
fildl
add
fcomps
inc
mov
xchg
stos
arpl
add
mov
mov
fildl
add
fistpll
jmp
cmpsb
int3
adc
xchg
sub
repz
xor
or
testb
daa
push
repnz
mov
xorb
push
hlt
and
test
scas
push
add
scas
pop
inc
add
mov
xlat
inc
hlt
xor
mov
push
push
int3
mov
xor
add
push
lcall
mov
jns
push
lea
pop
mov
rorl
pop
pop
pop
pop
jmp
mov
add
cmp
sub
xchg
cmp
lock
mov
bound
jge
add
jo
repz
enter
xchg
sbb
jo
cmp
add
sbb
mov
int
jae
jge
add
popa
mov
cmc
pop
aaa
pop
rolb
scas
jbe
dec
ss
pop
and
incl
and
mov
add
jmp
pop
jmp
gs
movsl
sbb
xor
pop
mov
dec
outsb
nop
push
mov
mov
sbb
movsl
or
ds
mov
mov
xor
adc
and
jmp
sbb
and
xor
je
popf
lock
ljmp
psubsw
ret
out
pop
mov
sahf
nop
sbb
in
addr16
add
dec
add
cmc
push
or
cli
xchg
mov
pop
xchg
lock
dec
into
decl
mov
push
sbbb
cmp
testb
add
jge
mov
sbb
std
fdivrs
pop
mov
cmp
pop
push
lret
fisttpll
dec
cmp
cli
push
clc
pushl
repz
mov
pop
jge
fsubl
push
mov
jo
nop
mov
lods
adc
aaa
ljmp
jg
cmp
xor
fadds
arpl
es
add
dec
add
lahf
dec
add
test
adc
test
sbb
cmpsb
clc
xchg
adc
jmp
push
adc
cmp
or
pop
inc
or
out
stos
inc
test
cmp
call
popa
cld
bound
inc
mov
inc
mov
clc
add
repnz
dec
or
and
add
and
add
call
ljmp
mov
add
jae
int
push
out
pop
sbb
sub
addr16
stos
jb
push
inc
bound
cmp
add
push
repz
out
bound
mov
push
pop
or
jb
into
ss
lock
jg
pop
pop
fadds
add
js
jmp
xor
adc
jae
mov
pop
outsl
scas
jno
js
jmp
divl
pop
pop
js
jmp
fisttpl
mov
in
dec
jecxz
call
clc
jb
arpl
adc
psubsw
pop
jb
adc
cmp
add
lods
mov
ja
jmp
xor
outsl
jge
mov
jg
js
sub
pop
xchg
sub
repnz
clc
pushl
clc
call
mov
cmp
push
stc
popfw
ss
clc
in
aas
or
mov
fsubs
js
scas
push
fs
cli
in
sbb
adc
scas
push
fs
mov
pop
or
add
push
push
lret
push
aad
push
xchg
mov
jge
jle
xchg
aas
stc
ljmp
test
dec
add
inc
bound
scas
ficomps
leave
fmuls
test
test
loopne
in
cmpl
lret
sti
repz
rolb
adc
sub
jo
lock
jg
scas
and
incb
pop
dec
push
jge
dec
inc
inc
outsl
int
add
jecxz
mull
test
pushl
outsb
cmpl
sub
decl
clc
sbb
scas
push
jg
fwait
dec
add
aas
das
xorl
sub
sub
xchg
addr16
adc
push
add
sub
enter
ret
jle
clc
addb
imul
add
in
push
cmp
xor
in
cmpsb
hlt
sub
and
jmp
repz
xchg
out
and
clc
add
mov
mov
aaa
jnp
jne
add
scas
cmc
mov
outsl
jno
mov
xor
mov
pop
fadds
scas
lock
mov
sbb
xor
outsl
mov
push
pop
clc
popa
inc
fs
aas
mov
pusha
inc
fidivs
xchg
out
mov
stos
out
xor
popf
out
xor
mov
xor
lods
out
xor
bound
psubsw
and
idivb
cmp
adcb
repz
and
sbb
push
add
in
loope
lods
or
cld
lret
scas
push
push
imul
mov
jmp
add
jg
inc
imul
int3
jp
int3
int3
fisubl
int3
int3
inc
fsubrp
push
inc
fmulp
mov
inc
xchg
jmp
imul
pop
sbbb
cmp
mov
mov
pop
adc
add
fldl
cmp
repnz
pop
adc
pop
jge
sbb
or
cmp
mov
push
xor
inc
dec
add
scas
leave
cmp
sti
inc
es
test
adc
clc
out
push
dec
adcl
test
mov
jmp
repz
mov
lret
jbe
mov
add
add
jbe
mov
add
test
jnp
dec
add
sub
dec
aam
scas
or
add
mov
and
jmp
push
add
lahf
push
jae
sahf
addr16
add
pop
aaa
shlb
inc
out
and
in
xchg
in
xor
scas
addr16
inc
add
out
jne
cmpps
mov
add
cmpb
leave
inc
mov
push
or
std
add
mov
add
mov
es
iret
out
mov
aaa
iret
dec
mov
jnp
adc
or
xor
je
add
dec
test
jecxz
icebp
ret
mov
or
imul
add
inc
in
hlt
cs
or
lods
addr16
lods
sub
cmp
aam
add
fildll
xor
imull
jae
jmp
lods
mov
mov
cmp
and
pop
clc
jmp
mov
call
clc
sbb
mov
clc
jmp
stos
addl
data16
add
fdivl
decl
xchg
or
xchg
ficoms
mov
rcrb
xchg
add
add
pop
add
inc
gs
sar
add
int3
je
pop
mov
lds
xchg
jmp
idivb
fimull
jge
or
mov
clc
jg
mov
push
adc
sub
je
add
cmp
jge
ret
add
sub
jp
mov
dec
clc
xchg
dec
andl
mov
enter
dec
jnp
cmovbe
out
jge
ret
dec
add
scas
aad
xchg
cs
call
mov
dec
cmpl
sub
sbb
lock
aad
push
mov
shlb
add
pop
add
xor
cmp
dec
jnp
and
jns
sub
aaa
clc
dec
xbegin
out
pop
jae
add
jmp
sub
insb
ret
mov
sbb
aaa
mov
movsl
jno
dec
loopne
fdivrs
add
mov
xchg
insb
loopne
fs
jmp
movb
movsl
and
xchg
inc
pop
int
sub
xor
in
add
push
test
adc
xchg
add
decb
clc
push
arpl
cmpsl
loopne
test
shrb
mov
pop
inc
xchg
or
lods
aas
mov
jmp
pop
xor
dec
push
stos
push
and
lods
pop
and
pop
push
inc
mov
imul
add
loope
jmp
pop
inc
clc
dec
out
sub
lods
test
insl
add
lcall
outsl
pushf
insb
add
jl
adc
dec
test
lods
addr16
cltd
lods
add
cmp
fmul
insb
addr16
push
loopne
rep
add
pusha
scas
jns
je
add
jne
andb
cmp
idivl
imull
fisttps
add
jl
mov
dec
pop
inc
xchg
jne
lock
jae
adc
insl
jnp
or
lahf
push
push
imul
ja
mov
xchg
in
filds
lret
popl
inc
iret
lahf
push
push
imul
dec
test
adc
push
jg
int3
cmp
int3
int3
add
mov
test
jmp
fadd
les
push
cmpsl
das
push
xor
lock
xor
int
fnstcw
or
je
sarl
or
mov
scas
ja,pt
mov
pushf
imul
pop
ja
fwait
leave
xor
aaa
inc
in
test
ljmp
push
cs
shll
test
dec
jg
cmp
jae
cltd
ds
add
cmpsb
icebp
lcall
hlt
es
inc
cmc
or
ret
stos
addr16
mov
sub
mov
int3
test
push
jmp
popa
test
jno
enter
mov
call
leave
xor
out
push
xchg
mov
fs
mov
xchg
fistps
in
mov
ja
es
push
fistps
repnz
push
test
scas
addr16
xor
leave
lock
jns
add
bound
insb
pusha
jp
add
mov
or
bound
pop
lcall
andl
pop
mov
fucomp
nop
jge
push
clc
call
mov
addr16
dec
and
push
inc
mov
js
jmp
inc
sahf
push
clc
push
push
subl
push
clc
jb
push
psubsw
pop
lock
psubsw
pop
ja
sbb
jmp
mov
or
popa
add
mov
adc
push
sarl
adc
xchg
or
cli
int3
xchg
je
sub
and
fists
add
mov
mov
inc
clc
pushl
pop
jmp
adc
aam
push
xchg
pop
aas
mov
incl
adc
int3
and
int3
int3
ret
int3
ret
int3
sub
jmp
and
into
jb
add
add
cmpsb
hlt
add
add
int
subl
fcoml
push
cmpsl
inc
add
pop
popw
cmc
clc
dec
jns
lret
push
add
jle
sbb
loopne
add
aad
out
adc
adc
push
add
sub
stc
jl
inc
mov
cld
daa
or
gs
mul
lods
lret
cmp
xor
js
mov
ret
aad
or
jle
adc
and
push
cld
out
and
clc
sub
repz
repz
add
sub
pop
jnp
push
ljmp
sarb
dec
add
jns
add
ror
js
imul
sarl
pop
xor
pop
lock
pop
mov
hlt
lock
rorb
cmpsl
add
out
push
out
mov
loop
cld
sub
cs
add
dec
js
mov
sub
jle
jbe
add
loopne
mov
lds
sbb
or
jns
jmp
mov
in
or
lods
mov
fs
insb
mov
cwtl
outsb
popf
call
insb
push
or
lods
mov
pop
dec
dec
clc
jmp
inc
cmp
mov
sub
jmp
imull
aas
jmp
push
push
pop
mov
mov
pop
psubsw
add
out
or
pop
testl
call
iret
dec
adc
jl
mov
cmp
mov
jo
data16
jne
add
imul
push
push
push
adc
jo
fsubs
fildll
rol
mov
inc
cmp
outsb
and
inc
fadd
call
adc
cld
loope
sub
cmp
bound
cs
pop
pop
std
pop
ret
lcall
jmp
in
or
add
push
xor
mov
clc
cmp
add
xor
cmp
add
inc
js,pn
clc
scas
ds
js
clc
scas
ds
cs
clc
scas
ds
push
lods
clc
scas
ds
out
push
adc
movsb
call
in
cmp
xor
adc
imul
mov
nopl
xchg
mov
scas
inc
jp
lods
push
dec
std
ja
mov
pop
out
mov
addr16
inc
mov
addr16
cmpl
sub
push
arpl
lds
and
scas
push
pop
mov
lds
jmp
add
mov
aam
sub
in
add
sub
jns
push
call
adc
jmp
mov
pop
mov
add
addr16
cmp
push
add
sahf
adc
add
mov
push
add
mov
push
add
sahf
adc
add
sahf
adc
add
mov
push
add
mov
push
add
sahf
adc
add
sahf
adc
add
mov
push
add
mov
mov
add
stos
push
test
ja
clc
cmpsb
and
and
push
loop
dec
pop
imul
xchg
add
push
jge
orps
stc
add
daa
dec
or
loope
jmp
daa
sbb
loop
add
jne
push
ja
xchg
inc
data16
xchg
sbbb
rclb
add
ja
push
pop
arpl
add
mov
arpl
add
ja
push
aad
out
add
mov
lret
add
mov
cld
pop
mov
enter
or
mov
cltd
out
add
push
scas
inc
add
lods
add
mov
push
add
lods
adc
mov
inc
add
lods
add
mov
push
add
lods
xchg
pop
mov
inc
add
lods
test
mov
push
add
lods
xchg
pop
mov
loope
add
lods
test
mov
push
add
lods
xchg
and
cmp
dec
or
lret
mov
add
inc
outsb
add
cmp
daa
mov
add
sub
into
mov
adc
outsb
das
cmp
push
push
xchg
add
inc
cli
pop
mov
and
pop
jmp
mov
adcb
pop
roll
or
jmp
les
lock
std
jne
rol
inc
aaa
add
xchg
fstpl
loopne
mov
mov
imul
dec
ljmp
dec
mov
test
lret
pop
push
add
movl
incl
inc
scas
xchg
add
adc
xor
add
pop
xor
cmp
sub
stos
mov
jmp
sub
xor
mov
push
in
daa
add
imul
lods
addr16
xor
sub
push
outsl
orl
imul
add
imul
dec
inc
add
lods
xchg
cld
pop
xchg
ja
jmp
fildl
ret
mov
jecxz
lods
add
inc
add
lods
in
or
arpl
sub
aaa
adc
cmp
add
cmp
arpl
clc
call
cmp
add
sub
adc
clc
call
add
int
mov
dec
jmp
add
push
in
xor
push
fcmovbe
movups
adc
lahf
sub
inc
push
loop
push
add
insl
xchg
test
stos
add
inc
pop
jge
adc
mov
or
jge
scas
ret
sub
jge
rorb
jl
cltd
cmpsl
jl
cld
test
inc
cltd
cmpsl
les
add
mov
mov
sub
sbb
and
add
xor
andl
pop
cs
incl
out
add
xlat
out
aas
scas
leave
mov
inc
xchg
out
scas
iret
sahf
clc
scas
dec
add
mov
xor
jg
iret
add
test
leave
aam
aad
stc
shrl
movsl
xlat
addr16
imul
ljmp
js
add
pop
test
cwtl
dec
nop
sub
int3
inc
ljmp
jl
add
xchg
insl
mov
adcb
inc
ljmp
xchg
test
scas
test
dec
mov
lods
loop
imul
addr16
frstor
add
lods
loop
out
shlb
movsl
pop
addr16
imul
add
and
clc
push
push
ret
ljmp
add
cmp
mov
add
test
in
addr16
insb
dec
or
inc
add
lods
xchg
xor
adc
xchg
xchg
xchg
xor
fisttpl
add
lods
xchg
xor
ret
ja
jmp
xor
outsb
jle
pushf
jge
jg
nop
out
jno
sbb
rcll
xchg
cld
jnp
mov
insl
lods
insl
add
test
das
int3
int3
dec
hlt
jmp
inc
imul
xchg
sub
dec
mov
mov
clc
pop
add
add
lret
hlt
jmp
or
xchg
pop
mov
jae
inc
xchg
push
rorb
lods
jae
nop
lcall
ret
outsl
or
imul
cwtl
data16
xchg
out
pop
test
int3
int3
add
xchg
push
push
xchg
or
pop
and
mov
cmp
scas
push
cmp
and
and
test
mov
inc
mov
es
fadds
lds
je
cmp
and
push
mov
xor
mov
insb
and
pushl
pop
loopne
xor
test
sub
add
add
sub
add
dec
add
ss
sbb
pushl
mov
xchg
test
addr16
mov
dec
in
mov
lret
clc
in
inc
mov
push
ljmp
addr16
cmc
jl
xor
in
and
ljmp
mov
xchg
mov
jb
roll
mov
mov
repnz
add
mov
mov
cmc
mov
jne
repnz
jge
xor
dec
add
ret
mov
clc
jmp
out
inc
roll
xchg
add
aas
test
imul
je
int3
mov
jmp
cmp
iret
pop
cmp
iret
mov
ljmp
push
mov
scas
in
int
out
lds
cld
jne
daa
mov
mov
mov
ds
xor
xchg
cmpsl
mov
jo
mov
push
aas
mov
add
sbb
pop
imul
dec
jnp
push
mov
jge
add
push
jge
and
jg
lock
rolb
pop
dec
xchg
mov
lcall
add
in
add
in
add
in
add
push
add
push
add
push
add
push
add
add
mov
add
push
add
imul
add
cmp
fldenv
add
push
add
leave
xor
incl
jmp
xchg
lods
cmp
lods
cld
sub
add
lea
scas
pop
lods
js
push
lods
clc
scas
insl
lods
clc
scas
lods
clc
lods
cmp
mov
test
mov
mov
mov
mov
mov
mov
les
out
cli
ja
lret
push
ja
mov
dec
dec
sub
testl
test
sub
stc
push
ja
mov
xchg
lock
xchg
jle
push
ljmp
int3
std
fldt
lods
add
jle
xchg
pusha
dec
shrl
inc
lret
imul
addr16
movsb
jo
fucom
cmp
add
inc
mov
jle
jb
jg
cs
sub
std
repz
jg
jl
aaa
rorl
loop
decl
lahf
imul
das
xchg
pop
jp
sub
add
cwtl
adcl
orl
ss
aad
mov
jae
test
or
dec
arpl
inc
xor
je
sbb
add
lods
jecxz
jmp
lods
outsl
xchg
jl
push
fwait
xor
cld
int3
xor
jmp
pop
xchg
xor
scas
fldl
cmp
jg
ror
pop
inc
loopne
xorl
lods
addr16
adc
call
add
or
jne
add
je
fmull
pop
cmpsl
lock
push
add
inc
fdivr
dec
cmpsl
lock
add
add
push
lods
dec
pop
faddl
ja
xor
data16
mov
loopne
fistpll
mov
rorl
in
sub
in
pop
es
pop
filds
stos
lahf
ja
adc
lock
add
data16
je
pop
jno
outsl
lahf
cld
incl
push
jle
ficoms
test
shlb
add
pop
jbe
pushf
adc
stos
and
jge
add
mov
mov
push
add
pop
mov
es
insl
mov
xchg
sbb
or
cmpl
dec
and
mov
and
sub
je
out
adc
shlb
subb
xor
arpl
pop
xor
add
mov
stos
adc
dec
repz
xor
push
add
mov
fwait
mov
sub
dec
mov
jne
scas
bound
pop
jb
lret
xor
out
scas
in
lahf
add
xchg
jmp
out
fs
clc
loopne
add
jmp
or
jne
xchg
dec
fisubrl
add
mov
in
inc
adcl
test
aas
xchg
pop
arpl
xor
jnp
data16
mov
and
in
pop
add
rcrl
push
in
outsb
jge
lods
add
addr16
jge
dec
lret
ret
test
bound
aas
clc
xchg
in
outsb
jge
scas
add
add
std
pop
dec
or
cmp
jb
addl
mov
aas
clc
jb
jecxz
lds
aaa
fisubl
cmpl
out
outsb
andb
addr16
push
mov
insl
vpsubb
flds
sbb
xabort
dec
clc
repz
cmp
rcll
inc
jle
sub
mov
jmp
mov
and
inc
shlb
insb
and
push
rorb
jle
sub
stc
mov
xor
xchg
sub
clc
mov
jmp
push
inc
and
aas
mov
decb
mov
jb
lock
jae
cli
roll
dec
jnp
outsb
xchg
mov
addps
and
pop
or
outsb
scas
lods
call
or
cmp
mov
popf
cmp
data16
imul
mov
mov
jns
dec
and
or
jnp
imul
or
mov
adc
add
std
imul
and
ret
test
or
pusha
add
scas
shll
out
dec
push
enter
and
data16
sub
scas
push
sti
jnp
imul
cmp
sbb
call
test
insl
mov
sahf
outsl
loope
loopne
fs
mov
cmp
fisubl
sub
test
sti
push
xchg
adc
jmp
add
addr16
mov
scas
cli
repz
sbb
fs
lret
aas
or
sub
push
lds
andb
sti
jmp
jg
addb
xor
arpl
xor
aaa
test
test
popa
std
xor
popf
jb
mov
lock
shlb
cmpsb
imull
insl
push
pop
mov
rcll
ljmp
xor
jmp
cmpsl
add
push
sbb
dec
xor
dec
add
notl
lods
add
pop
pop
sbb
pop
jbe
adc
dec
push
jae
ljmp
testl
jle
or
push
or
pmaddwd
or
dec
or
ss
xor
or
hlt
jl
push
iret
push
incl
jge
or
inc
icebp
fscale
ja
cmp
or
add
je
push
clc
je
adc
add
inc
jbe
adc
repz
dec
cmp
jne
sub
adc
jmp
mov
and
inc
shlb
insb
and
imul
scas
dec
aad
movsb
outsl
xor
test
mov
xor
fsubrs
test
push
test
lods
mov
xchg
xor
out
aam
in
and
aad
add
je
jl
je
rcrl
and
test
inc
jno
add
aad
cmpsl
xor
mov
inc
add
cmc
xor
add
jmp
add
scas
xchg
adc
sub
cmp
inc
push
add
scas
adc
sub
xchg
add
lahf
icebp
jl
push
jo
lret
out
mov
stos
add
mov
and
jnp
push
test
mov
gs
sub
bound
rclb
mov
push
pusha
dec
mov
mov
nop
in
dec
pop
call
hlt
sti
jmpw
adc
cmp
addr16
mov
cmp
cmpsl
mov
negl
outsl
add
ja
or
repnz
shr
mov
repnz
push
icebp
mov
repnz
sar
ja
adc
icebp
mov
call
hlt
push
jmp
test
lock
xor
add
lods
mov
mov
sub
fwait
push
repnz
and
jge
ljmp
add
shrl
ljmp
jo
add
xchg
fwait
movsl
mov
mov
and
or
push
je
popf
xor
add
rorb
xor
inc
dec
bound
sub
jne
lods
or
xchg
imul
lock
jae
fsubrp
out
add
stc
jle
push
shlb
inc
cld
add
jmp
rol
jge
bound
inc
add
jge
data16
adcb
adc
xor
inc
movsb
roll
imul
scas
push
mov
mov
scas
inc
jmp
jge
fistl
jnp
inc
xor
hlt
roll
xchg
push
rolb
test
mov
gs
movsb
add
test
sub
add
shrl
cmpsl
ret
sarl
mov
stos
cld
dec
dec
pop
sub
popf
pop
and
ds
ljmp
in
mov
and
pop
jns
mov
adc
pop
stos
daa
in
sbb
fwait
das
call
adc
daa
pop
sarl
xorb
imull
dec
aaa
add
cs
pop
imull
idivb
je
bound
cmpsl
fcoml
sbb
lret
ljmp
jbe
sbb
fwait
sub
mov
jmp
aam
add
inc
scas
jp
add
imul
dec
out
addr16
mov
clc
jmp
mov
add
loop
cmc
add
stos
aam
inc
adc
lods
mov
dec
pop
xor
and
mov
sub
loope
xchg
mov
push
movsl
mull
adc
mov
add
dec
ljmp
add
jo
jmp
addr16
push
sub
adc
cmpsl
aaa
in
out
movsl
add
adc
add
fnsave
mov
lahf
pop
vmwrite
enter
or
lahf
adc
call
cmp
jge
lock
dec
data16
fmull
sub
add
sub
inc
adc
lahf
adc
fisttpl
dec
sbb
jge
mov
fwait
in
rcll
dec
call
lea
idiv
xchg
not
push
scas
mov
add
scas
and
mov
stc
pop
inc
add
scas
int
test
mov
xchg
scas
outsl
movsb
sub
xchg
sub
pop
mov
lods
push
mov
movsl
or
jb
cld
ljmp
ds
clc
rolb
bound
cmp
aad
lret
inc
add
inc
add
cli
adc
mov
mov
or
leave
testl
or
clc
xorb
xchg
add
jb
addr16
xchg
xchg
mov
bound
dec
cmp
cwtl
mov
aas
arpl
mov
push
adc
sub
add
pop
cmp
movsb
fsubrl
ficomps
jle
xchg
test
pop
add
ret
mov
mov
fstpl
scas
push
incl
jle
pop
mov
mov
cs
xor
sbb
sub
jmp
xor
or
mov
add
and
mov
loope
pop
stos
loop
jno
aas
sub
add
add
pop
pop
jo
xlat
add
sub
clc
fs
adc
xor
shl
dec
push
inc
jno
pop
mov
cmpsb
fsubs
sub
jmp
stos
pop
mov
jnp
aas
and
push
stos
aad
mov
add
fsub
pop
inc
sbb
int3
xchg
fsubr
mov
xchg
pop
jge
rcrl
je
mov
push
inc
push
sub
je
dec
cmpsl
mov
mov
jge
or
dec
stos
jne
push
cmpsb
jb
rolb
sbb
int3
mov
sbb
int3
adc
jmp
dec
pop
jge
out
mov
lods
fcoml
dec
fwait
adc
dec
outsl
or
cmp
outsl
add
pop
leave
movl
xor
jne
adc
push
mov
cmp
and
add
dec
adc
push
in
pop
loope
ret
mov
add
ror
imul
lret
arpl
jge
and
mov
xor
cmp
add
roll
add
out
sgdtl
movsb
push
add
fst
rolb
lods
std
mov
arpl
roll
sub
fwait
lock
mov
xor
lock
mov
adc
lock
mov
es
mov
lea
inc
and
pushf
into
rep
scas
xor
add
sahf
daa
add
pop
lea
add
dec
pushf
mov
je
add
in
cmp
mov
pop
stos
in
pop
mov
push
xchg
and
cmc
popf
mov
jae
mov
add
cmpsl
add
or
out
and
dec
cltd
add
and
push
ja
jmp
adc
mov
cmpsb
or
scas
inc
and
cmpsb
dec
or
mov
lock
addr16
bound
jnp
out
das
pop
insl
cli
fldl2e
mull
jmp
popa
add
jge
sahf
adc
xchg
icebp
xor
sbb
out
lds
and
mov
jnp
dec
add
add
or
jb
mov
call
test
add
cmp
icebp
ja
out
mov
add
scas
or
mov
in
ret
or
sub
int
hlt
je
inc
icebp
jbe
cmc
dec
or
push
or
xor
fbstp
fstl
jle
pop
lock
inc
lock
inc
mov
jb
dec
scas
add
cmp
stc
int
jno
adc
mov
cmpl
mov
push
xor
test
scas
add
xchg
das
or
test
or
pop
sub
sub
and
cmp
adc
adc
add
adc
add
adc
add
repnz
lods
loope
repnz
jl
inc
cmp
in
das
mov
sub
call
adc
and
add
test
sar
adc
xlat
pushf
lcall
shll
inc
and
adc
mov
add
in
sbb
add
lock
pushf
and
addr16
ror
sbb
js
cs
xor
xor
mov
rorb
cwtl
inc
out
repz
add
add
movntq
out
gs
mov
mov
cmc
test
jb
ret
xchg
cs
out
pop
mov
shufps
mov
dec
aad
es
jb
ja
es
call
jb
jg
xchg
fstpl
dec
and
add
fidivs
scas
xor
jmp
adc
sbb
mov
cmp
add
push
sbb
or
outsl
insl
jge
mov
jl
sub
pop
push
andl
mov
push
insb
jge
mov
stos
add
cmpsb
ja
dec
test
sbb
push
adc
daa
or
xchg
cmp
das
mov
adc
jge
in
sub
mov
cmc
or
lea
adc
push
sbb
push
xor
xchg
out
jne
cmp
stc
ljmp
in
in
cmpsb
clc
clc
incl
adc
xor
jmp
out
add
adc
sub
mov
clc
push
adc
loopne
test
fistpll
jno
sbb
adc
sbb
and
xor
fcomip
test
es
jle
xor
dec
incl
test
mov
test
test
and
and
and
jnp
sub
hlt
test
xchg
cld
clc
xorb
xchg
xor
aad
mov
lcall
into
clc
xchg
sub
adc
nop
xchg
test
cmp
mov
sub
dec
sbb
mov
test
push
popf
popa
stos
sbb
stc
mov
imul
out
xlat
push
arpl
mov
pop
jg
sbb
add
mov
movsl
push
out
mov
or
xor
inc
xor
jnp
lds
ljmp
addr16
ss
movb
sub
in
ja
or
push
xchg
lea
addr16
andb
push
jl
xchg
push
clc
jmp
shrl
and
out
adc
xor
sub
addr16
movsb
cmp
fnstenv
jg
mov
and
sbb
and
lods
mov
fisubl
in
push
data16
in
fimuls
add
outsb
mov
cmpsl
inc
jo
sbb
mov
jge
mov
cmp
mov
and
mov
cmpsl
movsb
addr16
mov
sahf
out
cmp
imul
mov
push
adc
sbb
mov
xor
in
clc
lcall
pop
mov
push
inc
push
cmc
push
call
clc
sbb
jge
inc
dec
mov
cmp
adc
stc
jb
popa
jg
jne
add
and
pop
pop
add
popa
push
mov
unpcklps
fisubl
dec
jle
dec
mov
loop
add
scas
scas
aas
lock
push
iret
ret
ss
xchg
xchg
push
or
push
test
iret
push
and
idivl
sysexit
xor
fbstp
sub
xchg
jae
cmp
jno
std
dec
push
jne
mov
mov
add
and
hlt
out
add
add
scas
xchg
cmp
add
push
jmp
xor
arpl
arpl
add
fucomip
add
movsb
add
aam
ucomiss
push
jg
adc
sbb
fwait
xchg
sbb
xchg
dec
and
sub
repz
add
std
out
movsl
out
out
rclb
sbb
mov
ja
movsl
call
and
push
xor
add
dec
out
cli
pop
pop
rolb
mov
mov
inc
addr16
call
dec
dec
leave
mov
push
mov
push
mov
addl
jmp
lods
addr16
lahf
mov
sbb
subb
push
push
pop
clc
push
insl
push
sub
lds
add
mov
std
sub
sbb
outsl
push
jb
jae
bound
call
scas
stc
add
scas
in
add
add
or
cmc
into
push
sbb
jmp
addr16
sbb
and
pop
ljmp
push
popa
bound
xchg
adc
dec
call
or
pushf
inc
sbb
in
add
jae
popf
popa
mov
dec
pop
dec
mov
adc
push
hlt
jl
imul
test
jg
mov
pop
jmp
std
subb
js
xchg
dec
clc
and
xor
pop
mov
lret
je
xchg
std
jl
clc
syscall
and
or
stc
cmp
aaa
and
test
jnp
cmpsl
or
xchg
mov
dec
hlt
pop
fsubrs
test
rol
shlb
add
ret
repz
sub
aam
cmpb
and
repz
scas
push
add
mov
jae
mov
adc
addr16
hlt
in
addr16
test
sbb
push
mov
clc
mov
loop
cld
cli
mov
xchg
push
add
pop
xchg
jns
jnp
aas
daa
loope
add
outsb
push
push
pushf
bnd
imul
mov
jb
stos
loop
sti
repz
lods
ljmp
lods
cmp
pop
jb
enter
shll
push
loope
stos
pop
xor
cmc
pop
mov
and
push
add
cmp
push
icebp
js
add
xchg
adc
lds
mov
stos
sbb
push
jne
jmp
dec
or
push
xchg
fsubr
mov
sbb
mov
sbb
cmpsl
stos
sbb
daa
jne
jae
dec
lds
fnstcw
xchg
fsubr
test
sbb
not
insl
icebp
addr16
stos
sbb
jmp
lock
mov
inc
and
test
mov
add
roll
mov
fxch
or
popf
out
ljmp
and
cli
loope
daa
jle
cmp
jnp
cmp
dec
and
jne
cli
int
pop
in
int
fldl
ret
jge
mov
xor
call
mov
hlt
inc
imul
dec
push
lock
add
divl
pop
ss
cmp
sub
add
mov
or
or
mov
nop
cmp
in
outsl
and
sbb
arpl
fwait
xor
hlt
repnz
jbe
scas
loope
repnz
jbe
stos
loope
repnz
js
cmpsl
mov
jbe
psrad
xor
insb
cld
ljmp
inc
cld
pushf
stos
mov
add
or
insb
hlt
add
push
add
ret
scas
xchg
mov
lahf
sbb
loopne
cmpsl
movsb
adc
sbb
mov
movsb
test
cmc
mov
addr16
inc
scas
mov
out
inc
jbe
add
push
and
jge
dec
int
clc
pushf
sarl
stc
jl
dec
fst
repnz
loopne
sbb
sbb
stos
xchg
mov
jl
fisubs
xchg
mov
add
cmpsb
jl
fisubs
fbld
add
cmp
inc
cld
cmp
mov
add
lea
cmpsl
sbb
aas
or
add
pop
outsl
loope
pusha
cmp
cmpsb
dec
cmp
pop
jnp
add
out
dec
or
cwtl
dec
add
adc
fldcw
adc
shrb
adc
pusha
push
lds
push
jns
addr16
mov
push
add
dec
add
stos
pop
mov
mov
pop
pop
or
jns
mov
lcall
int3
fcmovu
lret
int3
or
lea
out
pop
dec
add
adc
inc
lret
orl
mov
bound
jle
or
ror
int3
cli
iret
lret
int3
pop
ror
int3
call
inc
or
sbb
sldt
jp
xor
xor
xor
test
jnp
mov
xchg
and
lods
ja
hlt
cmp
ss
rcrl
fldcw
pop
insb
in
addr16
push
inc
add
jge
cld
scas
inc
cld
out
and
clc
push
test
jae
test
test
xor
scas
jle
inc
ja
subl
test
out
and
jl
pushl
clc
adc
jecxz
jb
jp
xor
or
out
data16
outsl
sub
sub
sub
dec
xchg
psubq
rorb
aas
xchg
pop
bound
mov
mov
sbb
arpl
movsb
push
js
xor
jae
sub
out
jae
jae
add
cmp
ret
inc
pop
outsb
stos
jmp
add
ja
sbb
ja
mov
insb
pop
sub
movsb
jge
in
mov
pop
pop
clzero
and
cmp
xor
clc
jo
jbe
jmp
inc
mov
add
lods
addr16
mov
mov
sub
adc
aaa
movd
sub
divl
inc
xor
sbb
add
mov
sub
xor
nopl
inc
dec
add
lret
nop
push
xlat
es
jmp
lods
addr16
jb
inc
adc
inc
adc
adc
dec
fwait
dec
add
insl
call
lret
call
jle
dec
xchg
inc
lock
xchg
inc
imul
add
inc
pop
pop
sbb
aam
int3
rcl
lret
int3
push
cmp
push
std
mov
push
jl
push
and
fcomp
pop
and
jns
jl
insl
and
int
and
mov
pop
and
pop
jnp
fistl
jle
fcomps
xchg
jl
scas
in
call
inc
test
adc
or
dec
insl
test
adc
enter
std
dec
pushf
push
xchg
jno
cmp
lret
repz
jmp
nop
dec
mov
daa
enter
iret
int3
push
xchg
sar
jae
nop
cmp
cltd
cmp
xchg
cs
xor
data16
sub
cld
lret
arpl
inc
lret
add
cmp
incb
add
incb
add
or
dec
dec
shll
add
or
sarb
jmp
and
mov
xchg
addr16
add
add
jns
in
es
jmp
andb
cmpsb
shlb
add
xchg
addr16
mov
addr16
andl
in
adcb
mov
xchg
add
lods
add
clc
or
add
dec
add
lods
add
clc
movsb
jns
add
lods
add
adc
xor
push
dec
add
lods
add
adc
push
insb
xor
lods
add
clc
scas
sbb
mov
lods
add
clc
ja
dec
add
dec
add
lods
addr16
das
psubb
aam
add
lods
add
imul
xor
add
data16
dec
out
ljmp
mov
add
data16
sub
clc
call
add
push
je
add
add
dec
out
jmp
jne
add
mov
call
add
add
data16
jp
add
jb
hlt
incl
add
fisubrs
add
pop
mov
add
push
add
subb
add
incl
add
and
xor
adc
add
incl
add
into
pop
cld
or
add
incb
add
xor
loopne
adc
scas
push
inc
cld
sar
add
scas
incb
add
mov
add
incb
add
sbb
nop
sbb
scas
jbe
cld
cmp
add
push
cld
push
scas
addr16
dec
pop
or
add
andl
lea
or
add
addr16
jb
scas
adc
or
add
addr16
push
scas
addr16
dec
jecxz
ljmp
imul
addr16
dec
mov
addr16
push
add
pop
ljmp
adc
pop
sbb
scas
add
clc
jmp
lods
add
add
int
add
add
jmp
lods
add
clc
int
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
add
push
add
fisttpl
add
daa
dec
add
mov
mov
add
clc
imul
push
dec
add
orl
clc
and
add
clc
push
add
shr
add
mov
add
add
hlt
cmpsb
hlt
in
cmpsb
hlt
call
movsl
hlt
incl
movsl
hlt
js
hlt
jmp
movsb
hlt
mov
movsb
hlt
call
hlt
ljmp
cld
mov
movsb
hlt
jmp
mov
hlt
incl
hlt
call
imul
pushl
hlt
push
hlt
decb
hlt
lcall
xchg
call
xchg
jmp
xchg
ljmp
lea
js
popa
cld
jo
popa
cld
push
mov
add
scas
mov
add
add
push
push
cld
xor
cld
sub
push
cld
sbb
cld
adc
push
cld
or
push
cld
clc
push
cld
lock
push
cld
call
push
push
cld
fdivs
rcrb
enter
sarb
cld
mov
push
cld
test
push
cld
mov
addr16
push
xchg
add
push
mov
push
addl
add
in
jae
push
imul
arpl
push
pop
add
push
push
add
push
dec
add
push
inc
add
push
cmp
push
xor
push
sub
push
and
push
sbb
push
adc
pop
or
pop
add
pop
sti
add
pop
repz
pop
jmp
sbb
add
loop
roll
pop
lret
add
mov
mov
inc
pop
stos
add
xor
clc
in
add
div
add
shr
add
shl
add
mov
roll
clc
xchg
or
jno
add
pop
sti
add
test
add
in
clc
lods
in
clc
mov
add
mov
mov
clc
aad
add
std
jp
clc
sub
clc
das
imul
clc
add
clc
jno
add
dec
add
add
rorl
clc
push
jnp
clc
arpl
clc
in
add
repz
add
add
xchg
hlt
decl
cmp
hlt
pushl
xchg
hlt
lcall
xchg
hlt
push
xchg
hlt
call
xchg
hlt
dec
xchg
hlt
ljmp
xchg
hlt
call
hlt
pushl
cltd
hlt
call
cltd
hlt
jle
hlt
incl
cmp
hlt
pushl
mov
mov
lcall
mov
call
mov
decl
hlt
call
mov
ljmp
hlt
jmp
hlt
ljmp
mov
call
hlt
ljmp
roll
mov
inc
cld
test
push
cld
mov
sbb
dec
cld
mov
cld
addb
js
dec
cld
jo
dec
cld
push
dec
cld
add
dec
cld
push
scas
push
cld
dec
cmp
inc
push
push
cld
cmp
cld
xor
push
cld
sub
push
cld
and
push
cld
adc
push
cld
or
push
cld
add
push
cld
clc
mov
cld
lock
cld
call
sahf
push
cld
fmuls
jmp
popa
ret
add
mov
add
add
out
add
scas
out
add
addr16
jnp
sbb
push
imul
add
add
arpl
push
fs
add
fs
add
cmp
dec
xor
push
sub
inc
and
data16
add
adc
test
add
add
call
repz
in
arpl
pushl
jecxz
add
jns
clc
out
add
clc
std
pop
add
sbb
pop
add
lret
add
test
add
mull
sti
testl
loope
imul
lods
addr16
sar
imull
sar
divl
lods
add
mull
sti
testl
jbe
notl
gs
negl
jecxz
sti
div
push
sti
testl
in
lahf
hlt
call
mov
hlt
jmp
lahf
hlt
pushl
hlt
inc
push
add
sahf
hlt
pushl
popf
hlt
cld
popf
hlt
incl
popf
hlt
decl
hlt
lcall
hlt
jmp
lcall
hlt
lcall
hlt
inc
xchg
decl
hlt
inc
sahf
hlt
incl
sbb
add
sbb
adcb
add
pop
mov
call
push
addb
add
lock
das
cs
cld
loopne
pusha
cld
fcomps
pusha
cld
enter
rolb
add
xor
mov
add
das
mov
popa
cld
cwtl
sbb
add
das
add
das
add
add
add
incl
add
add
das
push
popa
cld
pop
jg
add
add
add
fwait
cld
ljmp
adc
das
incb
add
add
das
ret
pop
cld
and
add
scas
pop
imul
mov
cld
or
imul
cld
cmc
imul
cld
shrl
cld
lods
imul
cld
and
cld
mov
imul
scas
test
cld
sbb
ja
xchg
cld
sbb
cld
jmp
gs
das
gs
pcmpgtw
inc
gs
dec
gs
cld
insl
fs
cld
loope
dec
cld
std
gs
cld
mov
add
cmpl
lea
loopne
scas
add
mov
jp
aaa
pop
lods
insl
add
jne
pop
add
ja
push
add
stos
jb
rorb
add
lret
xchg
mov
andl
add
xchg
mov
xchg
jbe
mov
popa
cltd
push
sbbb
mov
nop
addb
mov
pop
cmpsl
imul
sub
popa
pop
dec
test
popa
add
repz
outsb
add
clc
decl
hlt
bound
add
adc
stos
hlt
jae
ljmp
add
add
inc
leave
icebp
imul
pop
je
add
xor
arpl
inc
gs
outsl
dec
mov
add
xor
imul
popa
ljmp
outsb
inc
inc
add
add
je
les
imul
popa
ljmp
push
scas
dec
fildll
xor
cmp
cmpsl
clc
data16
clc
data16
mov
dec
out
bound
fistpl
outsl
out
jbe
xor
inc
dec
cld
shrl
insl
ret
arpl
fildll
add
lods
loopne
adc
ficompl
xor
jbe
push
add
test
std
sub
add
sti
enter
out
pusha
shr
rcrb
fdivl
incb
cmp
lret
jmp
fmull
jmp
hlt
lea
inc
repz
addr16
pop
mov
clc
jge
add
leave
pusha
roll
jne
jecxz
je
xor
jae
add
mov
icebp
inc
test
or
clc
repz
jne
in
adcl
adc
fidivl
ljmp
imull
xchg
add
orb
repz
pop
mov
jb
inc
clc
imull
cmpsb
pop
pop
out
mov
test
stc
andl
negl
lods
scas
pop
dec
sti
mov
mov
stos
scas
add
cwtl
jo
fldl
adc
cltd
jae
testl
pop
jae
ja
jb
sahf
div
outsb
stos
test
imul
lods
push
mov
push
add
imul
cs
jae
call
inc
imul
push
aad
imul
adc
rorb
jo
enter
mov
bound
sbb
test
insw
cmpsl
adc
jae
lret
add
inc
fisubrl
idiv
int3
imul
dec
cld
bound
sbb
inc
imul
sbb
arpl
add
fadd
push
lret
fisubrl
aad
mov
lahf
clc
mov
jbe
xchg
fildll
fisubrs
add
cmp
insl
xchg
fists
xor
push
scas
xlat
add
pop
shll
push
fildll
imul
bound
inc
jecxz
push
repz
dec
add
lods
arpl
fadds
sbb
incl
les
mov
pop
or
mov
add
add
mov
lods
nop
movsl
mov
int
jmp
lock
pushf
jmp
negl
jmp
fcoms
mov
mov
lock
jnp
imull
jmp
loope
pop
lcall
imul
in
mov
in
mov
add
imul
loopne
cltd
mov
lods
xchg
xchg
add
scas
xorl
xchg
jo
jge
test
jle
fs
mov
dec
jg
test
imul
mov
add
scas
xorl
xchg
jo
add
repz
mov
imul
cwtl
addr16
fisttps
add
loopne
gs
out
mov
xchg
gs
repz
push
mov
push
sbb
pop
adc
imul
insl
push
sub
ljmp
std
push
jo
adc
add
aaa
adc
std
push
jb
adc
inc
adcb
insl
xchg
push
je
sbb
ljmp
inc
imul
push
outsl
lcall
insb
mov
pop
insl
mov
cmc
add
adc
packsswb
add
mov
je
mov
clc
jmp
dec
outsl
adcb
imul
rcl
icebp
pop
shlb
out
mov
insl
push
pop
out
or
sar
push
jmp
fcomps
add
lods
leave
iret
push
leave
je
pop
les
add
lods
dec
xlat
jae
xchg
out
insl
xchg
xor
dec
popf
cltd
frstor
sub
cld
inc
xchg
cmp
addr16
jecxz
insb
popa
fidivl
pop
lock
fcoms
testl
jecxz
insb
imul
out
mov
popf
add
adc
mov
fldl
mov
loop
jl
add
insb
mov
out
int
scas
loop
jnp
fcomp
xchg
nop
fxch
addl
addr16
add
jo
jecxz,pt
je
add
insb
sbb
jl
cmp
xchg
jne
xlat
mov
es
movsb
push
fsts
adc
jmp
loope
cltd
add
movsl
js
lods
mov
insb
scas
addl
inc
lret
test
jge
neg
jb
jae
pop
xchg
popa
xchg
jno
notl
jp
outsb
mov
dec
jmp
aas
andb
insb
dec
add
inc
pop
test
movsb
lods
mov
cmp
test
ret
scas
xchg
jb
incl
sbb
pushf
pop
or
cmpl
into
jae
add
mov
push
jne
or
jnp
je
jno
push
pop
imul
add
jo
inc
outsb
cmp
outsl
xor
arpl
sbb
aas
adc
bound
or
je
aaa
adc
imul
or
push
imul
jnp
insb
push
je
je
jne
idiv
jl
push
jb
scas
imul
pop
arpl
popa
lock
out
add
scas
inc
repnz
push
inc
repnz
pop
dec
add
call
push
and
notl
mov
sti
loop
add
jg
aam
insb
out
aam
push
mov
insb
lret
jno
out
inc
jo
push
shlb
rcr
bound
movsb
cld
mov
xor
insb
lcall
pop
mov
add
scas
inc
repnz
addr16
xorl
popa
xchg
jmp
sarb
add
orl
not
or
jg
aad
sub
mov
icebp
or
jb
fiadds
xchg
jmp
repz
lods
out
faddl
jbe
loop
jne
jmp
jae
jmp
in
movb
subb
jns
jmp
mov
sub
add
xor
in
xchg
add
add
add
cltd
imul
in
pop
add
ret
sarb
hlt
roll
arpl
lods
incb
stos
jp
popa
aad
pushf
jb
mov
idivl
cltd
imul
mov
test
jno
jb
inc
jle
mov
add
add
inc
jp
jle
sbbl
jle
pop
adc
sub
mov
std
xchg
push
push
jb
outsb
sbb
mov
cli
push
push
xchg
jae
ret
adc
test
push
push
iret
push
jmp
dec
gs
inc
gs
sti
imul
scas
add
je
add
push
gs
pop
clc
jmp
fs
adc
ss
pop
dec
insb
lds
xor
add
add
adc
jns
push
push
mov
pop
lea
push
scas
mov
fistps
in
or
jae
cmp
inc
dec
fistps
or
fdivr
sarb
inc
push
hlt
mov
mov
addr16
sub
dec
or
loopne
push
lods
fdivrp
or
inc
adc
lods
in
mov
dec
rcr
lock
mov
iret
push
cmp
cld
inc
mov
jecxz
arpl
push
sbb
test
jge
pop
fdivrs
xor
in
outsl
jmp
jmp
dec
test
in
xorl
fmuls
adc
dec
addr16
je
or
fmuls
mov
or
mov
out
fdivrl
out
js
ljmp
jmp
out
xchg
nop
out
int
xchg
int
jg
xlat
jne
loop
jle
icebp
cmp
xchg
add
clc
jg
mov
adc
not
cmpsl
lcall
or
div
cmpsl
lcall
sbb
jb
repz
pop
adc
testl
add
test
or
je
cmpsl
xchg
jl
sahf
lods
xchg
add
pop
test
dec
jg
xchg
add
imul
push
call
aas
outsb
mov
add
push
je
push
pusha
psubb
jae
aas
outsb
pop
gs
popa
add
gs
arpl
push
mov
push
inc
dec
mov
and
insb
arpl
add
clc
jo
movsb
push
clc
out
imul
sbb
add
push
jnp
imul
inc
cmp
imul
idiv
jb
xor
push
mov
rolb
lods
cld
out
cltd
out
push
scas
xchg
fbstp
sub
pop
cwtl
das
shlb
cmp
jae
rolb
add
test
imul
cld
es
fbstp
insb
insb
jmp
dec
in
insl
push
xchg
jecxz
dec
rolb
xor
adc
out
and
pusha
adc
add
scas
adc
pop
std
add
dec
or
cmp
scas
rorl
addr16
out
sub
add
movsw
ljmp
lods
out
pop
mov
lea
jmp
out
push
sub
sbbl
lea
jmp
adc
ds
jmp
sub
cmp
out
dec
adc
jae
sbb
push
or
dec
push
sti
mov
pop
jmp
out
das
or
push
das
iret
in
push
enter
mov
js
add
out
push
add
dec
dec
dec
jmp
push
xchg
xor
push
push
fs
add
inc
mov
insb
xchg
pop
dec
pop
jmp
pushl
pop
push
pop
sub
dec
fmull
inc
pmulhw
push
mov
addr16
fisttpll
xor
aam
insb
cmp
dec
pop
cmp
dec
dec
jmp
into
inc
inc
sbb
inc
insb
or
dec
jns
mov
add
test
push
fimull
loopne
stc
add
push
jns
add
lret
imul
outsl
push
push
push
pusha
dec
ss
imul
push
pusha
push
and
inc
sahf
sbb
lcall
pop
imul
shlb
addr16
outsl
pop
imul
outsl
lret
pushf
movb
imul
mov
jb
addr16
add
enter
lret
scas
mov
inc
arpl
jae
scas
mov
add
scas
or
int
cld
and
leavew
test
into
retw
pop
mov
mov
insl
scas
bound
mov
pushf
in
int
lahf
inc
jmp
pop
scas
xchg
xlat
jae
sub
jb
aaa
shlb
sub
pop
add
int3
jae
sahf
lods
pop
dec
jl
loopne
popf
xlat
jae
jae
jb
shlb
jae
pop
sbb
fildll
scas
stos
aad
pop
int
or
push
mov
add
stos
aad
push
mov
sti
pop
lods
ljmp
jl
mov
stos
aad
push
jne
lea
loop
dec
stos
call
fistpl
pusha
aam
es
fistps
cmp
push
push
push
add
data16
pop
push
xor
inc
pusha
xor
pop
dec
jmp
inc
push
or
rorb
or
pop
jo
pop
inc
jb
mov
rorb
push
pop
mov
mov
stos
sbbb
outsl
inc
insb
mov
add
gs
pop
pop
jo
gs
jo
pop
push
dec
mov
mov
cmp
sti
push
jb
ljmp
sub
push
popa
cmp
lods
repnz
leave
dec
insb
inc
rclb
repnz
insb
or
xor
filds
shll
add
loope
bound
mov
arpl
int
outsb
add
jae
outsl
rolb
jb
jle
imul
dec
jo
lret
and
push
fs
enter
fs
jae
aas
rolb
jb
cs
imul
fs
gs
push
inc
movsl
push
gs
adc
call
inc
outsl
mov
xchg
call
pop
sbb
loopne
scas
mov
shrl
fbld
mov
push
mov
imul
loopne
scas
push
out
add
sub
outsb
loopne
lret
rolb
dec
scas
add
jae
push
in
lret
push
in
rolb
adc
fnsave
add
push
pop
loopne
xchg
jg
loope
scas
cld
dec
add
sahf
jecxz
push
mov
jae
shll
movsl
call
jp
dec
dec
addr16
rorb
fbld
hlt
loope
pop
push
add
addr16
sbb
sbb
add
pop
aad
push
pop
shl
push
aaa
jmp
iret
fisubrl
int3
shl
sub
add
addr16
loop
dec
dec
xchg
fiadds
dec
mov
add
ss
loop
dec
movsb
loop
dec
xorl
pop
dec
dec
in
outsb
push
aas
loopne
pop
dec
fists
push
in
ss
sbb
pop
push
sbb
cmp
push
dec
jmp
mov
sub
dec
data16
test
push
mov
add
pop
dec
inc
enter
mov
sahf
lods
sbb
lcall
pop
xchg
dec
push
insl
mov
popa
lods
sub
push
push
pop
xchg
or
shrl
push
jo
cmc
aaa
add
push
outsb
dec
loopne
jb
or
pop
add
mov
mov
outsb
xchg
shll
add
push
popa
mov
mov
push
lds
clc
incl
jge
inc
je
movsl
push
enter
jle
push
popa
sarb
inc
adc
push
gs
adc
push
gs
or
sbb
cmc
mov
inc
cs
add
arpl
movsb
movsl
pop
jb
push
gs
mov
gs
mov
push
scas
and
insb
dec
das
int3
bound
add
jae
adc
push
scas
sahf
fnsave
fwait
loop
and
iret
cld
loopne
pop
adc
mov
dec
loopne
lods
inc
shrl
dec
out
jmp
arpl
push
mov
jecxz
mov
cmp
shr
mov
leave
jecxz
push
adc
cs
std
in
enter
in
fdivs
icebp
add
addr16
fs
sbb
mov
add
addr16
out
xor
out
sub
dec
and
mov
imul
inc
cmp
push
push
sbb
sbb
sub
push
push
add
sbb
out
jmp
or
add
mov
cmovne
add
push
rcl
fsubrl
aam
dec
mov
out
jmp
mov
ffreep
addl
pushf
inc
mov
fisubs
mov
test
mov
pushf
inc
cmp
ds
push
dec
push
pop
add
inc
stos
push
add
testl
inc
call
mov
add
inc
popa
sbb
xchg
data16
lcall
add
popa
aad
push
pop
jmp
dec
and
js
popa
aad
push
pop
lcall
jns
lods
add
pop
inc
popa
test
fdiv
add
ret
test
outsl
jns
mov
jae
arpl
imul
push
xchg
into
bound
popa
bound
les
insb
andb
add
into
xor
mov
push
je
lds
les
idiv
inc
fs
gs
mov
pop
bound
inc
inc
push
fs
gs
bound
je
add
or
imul
dec
bound
into
add
mov
inc
insb
stc
add
scas
add
jae
sub
data16
cld
std
scas
sub
push
lcall
scas
mov
jae
lcall
jl
adc
das
scas
popf
mov
lock
dec
sbb
push
rcl
bound
jae
insb
add
add
mov
shll
cmpsb
call
add
adc
arpl
adc
imul
scas
mov
jmp
inc
jle
xchg
test
orb
fildl
pop
cmp
out
pop
sub
fistl
sub
addr16
mov
sub
out
pop
inc
ds
aaa
fdivrs
cmp
push
dec
call
repz
cmc
out
pop
jmp
mov
sub
adc
inc
fcmovnu
in
pop
mov
add
mov
scas
mov
sub
out
dec
mov
lcall
add
lods
cmp
gs
arpl
lods
cmp
out
inc
addr16
sub
loop
add
dec
inc
mov
add
push
xchg
push
inc
into
push
add
push
test
sahf
sbbl
xchg
pop
sbb
sub
nop
pop
pop
sub
xchg
dec
arpl
ja
ds
imul
arpl
jmp
mov
scas
jl
mov
insb
les
insb
add
bound
imul
je
mov
jae
sbb
into
idiv
ljmp
outsb
xchg
mov
test
je
mov
push
add
mov
insb
add
push
je
lods
bound
mov
imul
imul
push
inc
fisubs
jae
mov
jae
xorb
jmp
adc
scas
lods
int
in
stos
int
cld
adc
insl
sarb
into
jbe
sbb
jae
loope
inc
mov
fdivr
sbb
scas
push
jg
push
cs
ljmp
mov
insl
andl
fbld
fdivrs
scas
cmp
int3
dec
inc
sub
jbe
sub
push
scas
xchg
fidivl
outsl
fisubl
jle
imul
rolb
scas
xchg
fidivl
iret
fldenv
outsl
loope
or
dec
jmp
dec
fcmovnu
int
lcall
leave
inc
mov
add
pop
xchg
shll
jl
jb
cwtl
rorb
rcll
rol
dec
test
sbbl
mov
push
sub
add
and
pop
push
sbb
push
dec
sbb
push
pop
inc
aad
sub
add
addr16
sbb
sbb
or
inc
sub
addr16
cld
dec
sti
push
aas
jae
xor
data16
inc
add
stos
sub
jns
les
insl
int3
bound
mov
insl
shl
xchg
cmc
pop
dec
mov
ss
cmp
inc
mov
xorl
call
add
roll
dec
ljmp
inc
push
shl
xor
inc
imul
fldenv
jb
fcom
idivl
sbb
pusha
aas
insl
add
sbb
dec
add
sub
idiv
cmp
inc
gs
arpl
mov
arpl
fs
mov
inc
dec
cmpsb
inc
dec
mov
dec
dec
inc
gs
add
mov
jb
mov
ljmp
addr16
gs
xor
bound
scas
shrb
add
fs
mov
push
gs
jo
mov
arpl
imul
data16
mov
jne
imul
aam
decl
shrb
mov
insb
fnstenv
popa
scas
xchg
pop
fldcw
int
leave
mov
loopne
int3
cmpsb
sar
sub
shlb
mov
sub
movb
xchg
push
mov
xchg
jmp
bound
aam
addl
cld
imul
loope
push
cwtl
and
inc
push
xchg
mov
inc
sub
fstl
ds
push
aas
cmp
sbb
add
and
mov
push
daa
push
adc
rcl
xor
into
leave
cmp
fs
xlat
int
into
push
mov
jmp
push
lods
rcrl
push
jle
pushf
pop
adc
sub
add
cmp
aad
push
test
pop
pop
jmp
push
dec
aas
loopne
inc
cmp
aam
inc
inc
outsb
inc
add
dec
jb
lods
aaa
std
cmp
sub
dec
pop
and
sub
jo
addr16
inc
fs
push
cmp
adc
jo
adc
jo
pop
fistpl
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
add
add
imul
add
imul
add
imul
add
imul
add
add
inc
imul
add
add
push
imul
add
add
push
imul
add
imul
add
mov
add
push
add
imul
add
insb
inc
add
ret
push
add
scas
lods
add
scas
mov
fidivrs
scas
mov
add
scas
mov
add
scas
mov
sub
inc
adc
add
mov
add
scas
mov
ljmp
lret
add
add
incb
add
ds
ljmp
add
scas
movb
scas
sahf
add
scas
dec
add
scas
mov
add
scas
addr16
add
addr16
add
addr16
add
sub
jmp
add
daa
jmp
jmp
aaa
mov
jmp
add
daa
jmp
add
daa
jmp
pop
mov
jmp
dec
imulb
push
jbe
leave
xor
adc
add
inc
inc
sbb
int
int3
mov
dec
inc
pop
and
test
ds
shrb
cmp
add
xchg
adc
scas
mov
scas
out
and
adc
fwait
inc
imulb
aas
inc
sbb
inc
xor
gs
push
sub
jmp
rcrb
inc
mov
andl
add
pop
jecxz
addr16
add
test
enter
rclb
incl
adc
out
jne
push
aas
dec
jle
jecxz
push
int
xor
sarl
loop
xchg
and
sbb
stos
mov
push
jmp
xor
mov
sub
pop
iret
int3
addr16
icebp
out
repz
sub
adc
mov
and
jne
add
rcrl
lret
sbb
int3
add
sbb
aas
aaa
lret
scas
sbb
pop
idivl
stc
xchg
mov
and
icebp
dec
out
mov
or
or
pop
jmp
push
and
lods
add
xor
sar
cli
imul
jecxz
mov
dec
mov
add
stos
mov
test
sbbb
leave
dec
inc
xchg
loopne
jecxz
or
xchg
mov
pop
cmpsb
xchg
fstpt
mov
cs
jge
loop
cmp
decl
mov
inc
jo
ret
jge
xor
cltd
pusha
std
test
scas
mov
fcomps
jmp
xchg
adc
pusha
adc
inc
test
mov
imul
add
inc
jg
test
dec
lret
pop
gs
andb
in
sub
jne
cmp
cli
mov
cltd
add
test
dec
sub
shll
stc
xor
inc
adc
cmp
popa
jbe
int3
repz
loopne
push
xchg
popa
dec
sbb
test
rorb
out
pop
push
cmp
mov
cs
dec
bound
inc
adc
or
lods
add
add
adc
add
add
add
bound
cmp
cli
add
add
cmp
dec
add
add
add
add
add
add
cmp
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
sbb
xor
add
cmp
cwtl
ret
add
fbstp
add
fnsave
add
aaa
add
scas
aas
add
xchg
aas
scas
stos
aas
scas
decb
aas
scas
into
add
scas
into
adc
scas
rolb
add
sti
jae
dec
sti
mov
fdivp
mov
rol
add
jp
dec
ljmp
lcall
xchg
repnz
sarl
mov
pop
bnd
push
repnz
mov
xor
stos
mov
addr16
bnd
repnz
jge
repnz
in
mov
int
les
les
aam
movsl
bnd
lods
bnd
repnz
je
gs
dec
repz
jl
repz
sub
repnz
jnp
repnz
jnp
repnz
in
mov
int
add
jg
cld
les
sti
aam
and
cld
in
add
cld
hlt
jg
sti
xor
dec
sti
inc
addb
push
xor
inc
scas
cmp
xor
cmp
mov
cmp
and
or
adc
lods
or
cmp
sti
dec
cmp
jmp
cmp
fidivrs
dec
add
push
cmp
les
cmp
mov
cmp
mov
cmp
stos
outsb
cmp
mov
mov
cmc
xchg
jle
sub
sbbl
cmp
fcmovb
mov
cli
rcrl
lcall
cmp
fstpt
ljmp
cmp
ret
or
cli
ret
stos
les
cmp
sbb
cmp
pop
ret
dec
cmp
ret
pop
cmp
ret
imul
ret
jnp
pop
les
cmp
stos
cmp
ret
lret
cmp
ret
ljmp
cmp
mov
sub
mov
dec
cmp
mov
clc
imul
out
mov
xor
stos
xchg
jp
mov
lret
cmpl
jnp
out
jmp
sbb
sti
jmp
out
or
lcall
sarb
out
dec
ret
pop
mov
jnp
push
out
mov
xor
stos
xchg
jp
mov
cmp
fstpt
stc
jmp
lcall
loope
out
ret
fmuls
lock
repnz
jecxz
addr16
testl
js
jmp
add
ja
repz
ja
repz
repz
ja
repz
ja
rep
ja
hlt
xor
dec
hlt
xor
test
inc
ja
hlt
inc
ja
hlt
hlt
jbe
hlt
aam
add
hlt
in
in
mov
int
mov
jbe
hlt
test
cmc
je
sub
inc
cmc
inc
jbe
cmc
and
gs
xor
dec
hlt
xor
add
addl
lods
jnp
xor
jnp
xor
pop
jae
aad
arpl
int
xchg
xor
xor
mov
and
int
push
xor
push
inc
xor
repz
jecxz
lea
adc
jne
add
sub
mov
shlb
adc
fnsave
aad
bound
int
xchg
xor
mov
and
dec
mov
inc
xor
adc
fwait
xor
mov
mov
xor
and
sti
xor
or
into
sbb
into
sub
into
cmp
into
dec
xor
into
pop
xor
into
imul
into
jnp
xchg
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
int3
or
loop
sub
xchg
into
dec
xor
scas
sub
imul
out
fimull
mov
adc
out
ret
mov
ret
fstpt
shl
sti
add
xchg
in
cltd
stos
in
xor
out
xor
in
loope
in
mov
adc
fldl2e
in
shll
mov
shll
mov
push
in
cltd
lret
mov
stos
in
xor
cmp
and
sti
push
je
sti
adc
dec
sti
and
gs
add
dec
sti
xor
test
push
je
sti
insb
jg
in
pop
jg
in
mov
in
pop
jg
in
lods
jle
in
mov
jle
in
jl
movsl
in
in
jle
in
fdivrl
in
int3
jle
in
pushf
jle
in
sub
insl
in
cmp
push
in
dec
jle
in
cmp
gs
in
jge
in
fdivrl
in
or
std
in
fdivrl
in
lods
sub
in
add
cmp
leave
pop
cmp
cltd
aaa
cmp
out
jne
xlat
cmp
pop
cmp
xchg
cmpsl
cmp
add
test
cmp
dec
push
cmp
inc
xchg
lds
cmp
dec
pop
cmp
sbb
cmp
adc
cmp
xlat
cmp
pop
cmp
add
idivl
insl
adc
cmp
fnstenv
xor
loop
adc
lret
repnz
adc
inc
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
mov
cmp
mov
sarl
mov
cmp
mov
cmp
mov
cmp
jb
and
add
leave
inc
cmp
repnz
enter
enter
lret
jb
mov
cmp
ret
cmp
scas
fs
mov
mov
adc
movsb
icebp
xor
je
push
jno
repnz
and
jae
sub
sbb
icebp
xchg
rcrl
icebp
mov
rorl
add
cli
icebp
jecxz
loop
repz
mov
adc
mov
icebp
inc
js
lock
jo
lock
mov
lock
lock
rcrb
lock
rorb
mov
js
lock
js
out
fdivrl
lock
cmp
repz
int
xchg
ja
hlt
add
and
hlt
hlt
ja
hlt
add
sub
hlt
xor
dec
hlt
adc
inc
hlt
inc
ja
hlt
and
and
cmc
hlt
jbe
cmc
les
hlt
les
cmc
xor
dec
cmc
adc
test
add
cmc
fs
cmc
hlt
jne
cmc
hlt
jne
cmc
add
sub
in
imul
jg
aad
xchg
aad
loope
das
sbb
loopne
das
icebp
les
push
cmp
aam
cmp
les
cmp
fwait
jnp
cltd
xchg
sti
cmp
xorl
dec
stos
add
mov
fstps
rcll
ss
dec
inc
ss
inc
aas
ss
pop
aaa
ss
push
out
ss
dec
out
jge
fbstp
jge
xlat
lea
adc
aaa
cltd
or
add
lds
ds
lret
ds
sarl
outsb
fstpt
mov
jecxz
scas
jmp
mov
repz
fstpt
incl
add
adc
inc
xor
mov
sti
xor
mov
sbb
mov
and
scas
mov
xor
dec
mov
push
xor
sahf
mov
arpl
sahf
mov
jae
ds
xorl
mov
repz
fidivrs
repz
repz
mov
cmp
mov
sahf
js
lret
sahf
jo
rcrl
push
icebp
add
icebp
or
icebp
push
jge
repnz
fstpl
repnz
repnz
fldl
repnz
frstor
icebp
adc
icebp
and
lock
icebp
inc
pushf
jp
dec
jl
icebp
push
jl
icebp
pop
jl
icebp
addr16
int
cwtl
js
lock
jns
lock
jns
lock
js
lock
js
lock
not
jnp
test
jnp
mull
jnp
idiv
jnp
testl
enter
fs
imul
jge
bnd
lods
repnz
stc
repnz
jl
repz
fwait
repz
jl
jmp
outsl
shr
iret
outsl
loope
stos
outsl
xor
cld
outsl
push
in
or
in
xchg
outsb
lcall
jae
inc
inc
out
xor
inc
jge
stos
pop
sub
xor
pop
add
popa
aaa
add
getsec
les
out
insb
aam
imul
dec
mov
int
add
xor
add
mov
das
imul
cmp
mov
inc
adc
xlat
fwait
scas
cmp
mov
xor
mov
imul
fdivl
add
pop
cmp
add
mov
mov
xor
mov
cmp
push
mov
push
ss
fdivl
mov
jl
push
mov
aaa
daa
ret
int3
mov
fnstcw
test
call
aas
movsbl
cmpsb
mov
idiv
adc
fistpll
lods
xor
and
xor
fnstsw
adc
jp
inc
xor
sub
jl
in
jmp
xor
and
pop
icebp
iret
jecxz
lock
sbb
call
lock
ret
ss
test
jo
dec
out
mov
aas
repnz
mov
dec
out
test
jmp
pushl
scas
push
in
test
loopne
into
fists
xor
mov
xchg
pop
mov
jmp
cmpsl
addr16
nop
insb
sbb
ljmp
or
in
pusha
insl
jns
test
leave
out
jae
call
sub
and
icebp
jae
out
jb
out
jb
out
jae
out
jb
call
call
scas
addr16
repz
ja
repnz
jbe
repnz
repnz
jbe
cmc
inc
jne
cmc
pushf
je
hlt
mov
push
lock
push
js
out
mov
out
mov
jmp
outsl
or
mov
daa
cmp
sarl
dec
dec
in
cmp
pop
push
cmp
push
aas
cmp
test
out
inc
sbb
inc
adc
cmp
jl
scas
add
inc
xor
lds
cs
dec
aaa
jmp
lods
addr16
fsubrl
xor
fstpl
xor
mov
xor
mov
jbe
fistps
push
cmp
xchg
pop
cmp
cmpsb
rcll
shll
sarl
rol
xchg
cmp
mov
xor
into
cmp
ds
idiv
push
imul
mov
add
in
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
or
sti
mov
cli
cmp
nop
idivl
inc
idiv
xchg
pop
idiv
xchg
imul
xor
ret
dec
lock
mov
dec
lock
mov
insl
lock
fwait
dec
lock
dec
lock
cmp
lock
lock
orl
movsb
jecxz
lock
fcmovne
lock
int
mov
ret
dec
lock
mov
dec
lock
insl
lock
fwait
dec
lock
mov
mov
out
add
out
orb
and
in
out
fisubl
out
jecxz
push
out
shll
out
repz
out
repz
out
jecxz
push
out
shll
out
shll
in
pop
jbe
in
mov
outsl
mov
in
imul
add
mov
jmp
in
jno
jmp
lcall
call
add
sub
in
sbb
int3
jo
call
mov
imul
insb
dec
out
push
out
imul
xchg
xor
jmp
stos
add
xor
pop
imul
bound
push
pop
xor
repnz
or
dec
ja
sub
stos
addr16
push
cwtl
sub
add
sub
pop
pop
sub
cmp
xchg
sub
ret
out
das
push
jecxz
cmp
aam
cmp
rorl
ret
cmp
stos
cmp
cli
xor
lahf
repnz
jb
or
push
loope
cmp
loop
sub
cmp
mov
adc
jg
jbe
out
cmp
or
ds
inc
jecxz,pt
jo
add
xchg
ds
enter
inc
xchg
idiv
push
add
mov
lahf
xor
push
xor
xchg
repz
push
xor
xchg
test
xchg
ret
xor
xchg
sbb
mov
nop
repz
add
push
cmp
cmp
mov
scas
out
aam
xchg
aam
jbe
fcomi
jbe
aad
in
aad
add
repz
aad
mov
int
or
xchg
push
les
aad
mov
aad
mov
aad
movsb
inc
aad
movsb
or
aad
xchg
push
loopne
mov
addb
xlat
mov
xlat
movsl
ljmp
push
fsts
loop
enter
rcrb
movsl
mov
loope
test
loope
mov
cwtl
addr16
add
addr16
rcrl
ja
shll
popf
shl
ja
shrl
arpl
cmp
jg
inc
js
rorl
mov
rcll
js
shrl
fcmovbe
inc
ja
rolb
ja
rolb
mov
aad
jbe
aad
je
aad
je
aam
je
aam
je
aam
jne
aam
inc
jne
aam
je
xlat
shlb
xlat
adc
jae
xlat
xor
pop
stc
lds
in
shrb
xor
out
repz
dec
das
aam
imul
xchg
das
pop
xchg
movsl
je
cmp
sarl
shrl
cmp
bound
cmp
push
aas
cmp
dec
xorl
jmp
stos
addr16
add
sub
pusha
push
xor
dec
jo
push
fidivs
jmp
lods
add
xor
mov
cmp
push
leave
xor
add
xchg
dec
xor
xor
xchg
aaa
cmpsl
nop
dec
cmp
or
test
xchg
cmp
shl
jb
aaa
cmp
aas
cmp
ret
ret
cmp
mov
ret
fcmovb
cmp
cmp
sarl
roll
mov
rcrl
loop
scas
cmp
shll
fcmovb
cmp
ror
scas
pop
fcmovu
mov
mov
movsb
pop
movsb
pop
xchg
mov
pop
xchg
pushf
xlat
jnp
pushf
xlat
pop
add
xlat
daa
jae
xlat
das
jmp
xlat
aaa
jecxz
xlat
aas
fcmovne
xlat
inc
rcrl
lret
pop
loopne
ret
pop
loopne
mov
mov
out
mov
out
mov
aam
call
xchg
jb
xchg
pop
jb
daa
ljmp
aaa
fcmovbe
aas
shlb
fidivs
movsl
fidivs
mov
pusha
movsl
fiadds
push
fs
fs
fs
pusha
movsl
ficoms
fbstp
fs
fs
and
adc
test
jmp
add
pop
in
rcrl
aad
pop
add
lret
aad
pop
pop
aad
pop
jp
out
pop
inc
fmul
pop
push
fisttpl
pusha
movsl
fistl
loopne
stos
pop
cmp
sbb
fiaddl
jmp
push
fsts
bound
mov
icebp
jmp
imul
jl
not
lods
add
xor
add
outsb
outsb
xor
decb
mov
sbb
pop
fnstenv
cs
fildl
das
test
data16
je
cmp
jne
cmp
cmp
pop
add
das
push
repnz
loope
roll
sahf
cmp
dec
xor
js
xor
addr16
xor
mov
push
adc
cmp
push
shl
push
or
ljmp
add
loope
mov
sarb
xor
test
sub
mov
mov
fwait
mov
out
xor
mov
ss
mov
xchg
add
mov
ss
mov
fidivrl
cwtl
les
cmp
les
xchg
les
faddp
mov
cmp
les
cmp
cmp
adc
jne
aad
in
aad
in
xor
dec
xlat
push
push
nop
les
xlat
lret
les
repnz
iret
or
sahf
iret
pop
mov
or
mov
xchg
xor
iret
mov
jnp
iret
out
jge
std
jmp
fsubs
loop
fdivs
fidivl
ret
fcom
lret
sbb
outsb
fiaddl
fiaddl
test
negl
mov
xor
repnz
and
popa
scas
fldcw
mov
xor
shll
or
enter
adc
xchg
aam
push
cli
aam
push
cmpsb
aam
push
lret
aam
push
push
aad
push
push
aad
push
and
jmp
das
aad
push
sbb
mov
ficomps
iret
pop
mov
xor
jnp
aam
lods
pop
out
into
fistps
into
cmp
pop
shlb
pop
push
shll
pop
add
pop
das
das
inc
add
das
adc
pop
xchg
jge
jl
int
das
cmp
in
cmp
cmp
in
cmp
aam
cmp
cld
cmp
add
add
xor
loopne
xor
pop
mov
cmp
in
mov
add
jnp
sub
jns
sub
rolb
es
mov
clc
test
cmp
jne
sbb
rol
cmp
ret
mov
insb
cmp
mov
push
mov
mov
cmp
imul
idiv
imul
cmp
in
mov
mov
xor
scas
or
scas
inc
xor
mov
xor
inc
mov
xor
mov
xor
mov
xor
out
pop
xor
out
jl
sbb
scas
dec
jge
out
xor
fdivs
cmp
xchg
mov
addb
fadds
jno
int
jmp
inc
into
outsl
fldenv
int
sar
int
enter
shrb
mov
ret
into
push
add
or
scas
cwtl
adc
into
lret
mov
loop
ja
out
js
and
mov
add
scas
cwtl
shrl
fistpll
fbstp
dec
mov
addr16
pop
pop
add
sbb
sarb
mov
roll
pop
dec
rcr
pop
loop
stos
push
stc
iret
adcb
out
push
inc
iret
rclb
cmp
add
ss
jmp
jne
pop
into
sub
into
lret
int3
push
int
push
jecxz
sbbb
or
faddl
pop
push
fadd
pop
aaa
fdivl
pusha
add
pusha
cmpsb
fidivl
pusha
fildl
fistl
xor
add
test
in
gs
cmp
int3
cmp
xchg
faddl
jbe
cmp
ja
cmp
inc
cmp
sbb
jo
lock
lds
inc
pop
int3
cmp
testl
xor
fcoms
sbb
push
xor
fmul
xor
add
out
stc
push
xor
push
loop
imul
pushf
popf
notl
fdivl
fidivrl
or
add
jb
add
lods
imul
mov
mov
vcvtps2dq
inc
shrl
push
shll
lahf
rcrb
rcl
push
mov
cmp
in
cmp
lods
xchg
cmp
lods
or
mov
cmp
mov
cmp
mov
idiv
push
push
add
scas
mov
xor
sub
xor
int3
mov
xor
mov
xor
into
iret
mov
jecxz
fdivrs
ficompl
fcmovbe
mov
lcall
cmpsb
pop
stos
les
xchg
dec
push
xchg
add
mov
pop
stos
je
sarb
jmp
sbb
repnz
rcrb
mov
sarb
mov
adc
call
enter
roll
dec
rorl
jge
int
jge
int
jge
out
mov
pop
push
mov
pop
push
cmp
test
mov
fldenv
or
mov
fdivrs
out
stos
push
sti
fmul
push
add
xchg
push
or
push
and
sti
push
adc
out
cmp
add
push
sbb
mov
push
jne
push
sbb
push
in
lret
mov
pop
and
int3
jge
jecxz
sub
pop
jae
or
pop
das
int3
enter
mov
add
cmc
jb
or
inc
cmp
in
cmp
jne
cmp
gs
cmp
jne
cmp
mov
stos
cmp
mov
cmp
mov
mov
xchg
cmp
insb
cmp
bound
loop
and
es
fnstsw
lahf
ljmp
jge
popa
cmp
repz
cmp
jecxz
cmp
sti
mov
xor
add
jno
in
test
cmpl
add
cltd
cmp
fisubrl
mov
mov
test
fdivrl
xchg
movsl
aas
cmp
cmc
mov
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
add
mov
jb
push
mov
adc
cmpsb
mov
push
fcomp
xorl
jnp
fsubs
sbbb
sahf
loope
into
in
into
sbb
push
rcl
dec
lds
les
aam
test
push
mov
shl
stos
jg
sbb
sbb
movsb
xchg
in
lds
mov
sar
cmp
ljmp
push
int3
into
fists
outsb
sarl
push
shrb
mov
fsubs
addr16
xlat
pop
pop
jae
inc
pop
xchg
xlat
sbb
pop
icebp
fcomps
imul
push
sub
lds
leave
fs
cwtl
leave
jbe
lahf
lret
popa
lret
int3
iret
cli
push
jmp
add
pop
jecxz
or
xlat
into
pop
jmp
aad
dec
sub
add
push
cmpsb
lret
mov
push
jb
dec
push
mov
mov
mov
xchg
gs
addr16
aam
push
fst
movsb
pop
sbb
mov
shll
xor
fiadds
xor
call
xor
idivl
mov
lods
sub
loope
sub
into
loop
cs
fcmovb
cs
andl
das
mov
add
das
negl
cmp
arpl
cmp
in
cmp
gs
cmp
gs
cmp
jbe
cmp
jcxz
add
dec
xor
lock
xor
jmp
cmpsb
imul
or
insl
xor
mov
mov
jp
adc
cmp
shll
mov
mov
push
aaa
idivb
lcall
cmpsb
cltd
cmp
xchg
out
pop
mov
cmc
imul
mov
imul
xor
mov
xor
xor
jge
lcall
in
mov
sub
mov
ret
js
push
shll
lcall
adc
pop
rcr
jns
rolb
sbbb
jle
pop
shr
fmuls
lret
pop
xlat
adc
test
inc
les
inc
xchg
mov
lds
mov
lds
movsb
xor
shll
dec
lret
sub
jb
stos
leave
cld
adcl
mov
jo
lret
addr16
xchg
jmp
add
push
mov
rcll
pop
add
cs
jge
inc
pop
sub
icebp
pop
push
aam
push
in
test
aad
push
jg
notl
fwait
push
icebp
cld
push
aas
mov
iret
rcrb
iret
icebp
pop
jns
xchg
pop
fcmovnbe
mov
pop
xchg
sarl
movsl
lret
add
dec
pop
int3
sub
int3
cmovg
lret
pusha
push
fmul
cwtl
dec
int
dec
add
push
cmp
cli
and
out
lds
dec
ljmp
sbb
call
divb
dec
in
aaa
sub
xchg
imul
pop
xchg
test
cld
mov
jmp
xor
loop
sub
sub
jg
sub
add
sub
insb
pusha
sti
sub
jnp
sbb
dec
pop
and
push
jae
cmp
fs
cmp
adc
js
out
cmp
jb
sub
lods
mov
imul
sahf
mov
aas
xor
idiv
push
add
add
add
mov
ret
xor
divl
add
mov
xor
mov
xor
xor
xchg
xor
mov
xor
mov
dec
xor
mov
mov
xor
xor
inc
rcrb
sub
fidivrs
rolb
addb
push
loop
shll
dec
rcll
fcmovbe
sar
ret
sbb
add
xchg
mov
in
in
cwtl
scas
lret
mov
xchg
inc
cld
xchg
lds
repnz
push
lds
out
leave
or
xchg
leave
adc
push
push
mov
lret
fxch
inc
stos
ja
hlt
mov
dec
mov
jle
lods
lds
pop
dec
aam
repz
cmp
sbb
cmp
mov
sub
popa
add
push
rcl
leave
push
adc
jae
or
mov
shrl
pop
push
roll
mov
mov
pop
arpl
add
rorl
pop
sbb
call
push
xor
fcoml
push
push
mov
int
test
lods
push
test
int3
add
push
and
int3
pop
push
add
je
cmp
data16
and
cmp
jbe
cmp
jo
xor
sub
add
dec
xor
pop
icebp
cltd
mov
repz
aaa
bnd
aaa
into
repz
ret
jmp
aaa
sbb
ljmp
jb
jle
out
aaa
fwait
ljmp
imul
insb
mov
adc
pusha
xor
jl
xor
jl
xor
mov
add
sysenter
push
popf
aas
xor
mov
xor
popf
cmp
movsl
popf
ljmp
sahf
mov
or
pop
cmp
mov
in
cmp
movsl
or
movsb
adc
repnz
dec
cmp
lahf
pusha
cmp
cli
movsb
cmpl
nop
cmp
movsb
test
adc
int3
cmp
movsb
out
jb
add
iret
movsl
adc
mov
cmp
pop
movsl
pop
cmp
scas
repnz
xchg
mov
dec
mov
shll
inc
in
xchg
mov
inc
pop
jns
inc
cmp
inc
dec
add
inc
inc
push
loope
inc
fnstenv
and
sbb
inc
add
mov
add
into
xor
lahf
test
pushf
call
das
loope
bound
pop
sbbl
and
cmp
jecxz
dec
cmp
cmp
push
jmp
cmp
push
cmp
and
cmp
push
push
sbb
dec
push
cmp
cmp
push
out
inc
dec
pop
jno,pt
xchg
fisttpll
scas
addr16
add
push
xor
dec
push
popf
xor
mov
push
cwtl
ss
aaa
insb
push
lods
aaa
sub
push
push
xchg
aaa
cli
push
push
aaa
repz
sbb
aam
ds
fwait
push
add
out
sub
sub
mov
jl
shll
cs
cmpsb
popf
jmp
in
xchg
xchg
jg
mov
sbb
cmp
cmpb
jmp
cmp
loopne
xor
outsl
adc
xor
outsl
movsb
xor
mov
nop
xor
loop
imul
insl
sbb
loope
outsb
adc
insw
divl
jle
out
mov
add
sub
aas
push
sub
popa
sub
add
arpl
add
aas
xor
push
nop
xor
push
in
inc
push
cmc
xor
push
xor
push
mov
mov
push
mov
xor
dec
jle
adcb
push
push
cld
xor
mov
insb
xor
pop
push
loopne
jno
or
mov
cmpsl
dec
mov
fmuls
aaa
push
push
push
aaa
scas
adc
scas
cmpb
call
out
cmp
xlat
mov
cmp
mov
mov
mov
xor
int
xchg
cmp
fwait
leave
aaa
dec
xchg
and
mov
inc
nop
add
inc
loop
int
adc
ja
xor
jo
push
incl
rolb
inc
mov
ret
push
mov
ss
mov
pushf
imul
addr16
add
addr16
mov
aaa
addr16
cmp
xchg
cmp
xor
cmp
xor
bound
hlt
xor
cmp
cmp
xor
loope
mov
xor
cmp
cmp
insl
ss
aas
ljmp
inc
push
inc
inc
mov
cmp
inc
mov
roll
cmp
inc
jmp
or
xor
nop
mov
outsb
add
xchg
add
xor
or
ss
mov
ss
jae
fdivrl
fdivl
inc
test
xchg
aaa
jmp
lods
add
cmp
mov
xor
addl
fcoml
data16
xor
fucomp
xor
xor
stos
xor
mov
xor
divl
push
aaa
sbb
in
sub
adc
inc
xor
aaa
aas
xor
ss
xor
mov
xor
xor
inc
lret
aas
sbb
or
xlat
test
aaa
std
cmp
aaa
jns
dec
cmp
jne
push
inc
xchg
add
nop
inc
movsb
cmp
inc
sarb
inc
mov
cmp
ljmp
stos
inc
sub
sbb
cmp
inc
ss
inc
push
cmp
inc
bound
scas
imul
shlb
outsb
cmp
xchg
arpl
jb
ja
hlt
test
sub
jnp
aaa
dec
jae
aaa
push
jmp
aaa
imul
ss
ficoml
in
rorb
jmp
mov
divb
shrl
and
add
mov
sub
jle
sub
jle
sub
mov
and
aam
lods
sub
xor
cmp
out
mov
xor
cmp
xor
push
xor
arpl
out
cmp
cmpb
cmp
cmp
push
jno,pt
dec
ds
inc
and
cmp
std
inc
mov
in
inc
pop
cmp
addr16
scas
shll
aaa
lret
xor
cmp
or
pop
aaa
mov
xchg
das
push
lods
das
mov
lods
xor
cmp
push
cmp
inc
push
cmp
inc
add
sarb
cmp
xlat
xor
leave
lods
add
jecxz
pop
pushf
mov
sub
test
mov
add
mov
add
jl
sub
hlt
in
cmp
loopne
xor
xlat
fbstp
jmp
sub
jmp
mov
add
xchg
sub
sahf
repnz
mov
aaa
jmp
lods
add
jl
xor
jl
xor
fidivl
push
xor
ss
xor
ss
jo
mov
xorb
mov
pop
ss
xor
mov
xor
ss
and
add
cmp
add
xchg
in
add
add
xor
xor
inc
je
test
cmp
inc
jg
incl
cmp
aas
add
icebp
cmp
cmp
add
aas
mov
scas
cmpsb
cmp
jmp
xchg
cmp
fcomps
add
or
call
mov
das
mov
mov
mov
ljmp
shlb
subl
jnp
daa
xor
pop
xor
in
xor
dec
aam
xor
shlb
les
xor
mov
xor
add
xor
movsb
scas
das
es
movsb
das
ds
aam
fs
jge,pn
test
std
inc
xchg
cmp
scas
cmp
inc
lds
mov
cli
cmp
inc
sbb
jp
push
mov
loopew
scas
addr16
xor
ss
les
sbb
fstpt
leave
xor
cmp
sub
xchg
aas
push
cmp
aas
jnp
lahf
inc
in
aaa
add
cmp
cmp
addr16
scas
and
jb
or
xchg
cmp
inc
cmp
das
xor
jb
jmp
sub
mov
sub
add
pushf
fdivs
sahf
enter
shlb
fdivs
fistpll
pop
sub
outsb
lcall
das
jbe
jmp
inc
add
cmp
je
cmp
cmpl
in
cmp
jecxz
cmp
fistl
or
inc
cmp
lret
xor
test
mov
add
cltd
stos
repz
jecxz
add
cmp
xchg
lods
cmp
inc
int3
cmp
add
push
jp
add
add
add
cmp
das
cli
cmp
xor
cmp
jb
pusha
xor
cmp
mov
cmp
xor
nop
xor
cwtl
xor
cmp
xor
aaa
mov
cmp
mov
xor
shlb
stos
fdivs
mov
loopne
stos
ss
xor
mov
add
scas
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
scas
mov
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
scas
addr16
add
addr16
add
addr16
jmp
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
add
add
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
add
xchg
add
data16
xchg
add
data16
push
data16
inc
data16
inc
data16
push
data16
push
data16
inc
data16
add
add
push
data16
push
data16
push
data16
push
data16
push
data16
push
data16
push
data16
push
data16
add
add
add
add
add
add
add
add
xchg
add
scas
mov
add
mov
add
mov
add
mov
add
scas
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
addr16
jmp
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
jmp
add
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
add
add
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
add
push
push
add
add
inc
push
add
push
push
add
add
inc
push
add
add
push
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
imul
add
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
jle
add
jle
add
jle
add
scas
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
addr16
add
addr16
add
scas
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
add
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
add
add
lods
addr16
lods
addr16
lods
add
push
add
push
add
push
add
data16
data16
data16
data16
data16
data16
data16
data16
xchg
data16
xchg
data16
xchg
add
data16
xchg
data16
xchg
add
data16
add
add
inc
data16
inc
data16
push
data16
push
data16
inc
data16
inc
data16
push
data16
push
data16
push
data16
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
jle
add
scas
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
addr16
add
addr16
add
addr16
add
scas
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
lods
addr16
lods
addr16
lods
addr16
add
add
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
add
add
inc
imul
push
imul
push
imul
push
imul
push
imul
push
imul
push
imul
push
imul
push
imul
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
xchg
add
push
add
add
inc
push
add
add
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
add
jle
add
jle
add
jle
add
jle
add
jle
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
scas
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
jmp
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
add
add
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
add
xchg
add
add
push
add
add
add
inc
add
push
add
push
add
inc
add
inc
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
data16
data16
data16
data16
data16
data16
data16
data16
xchg
data16
xchg
data16
xchg
add
xchg
add
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
scas
addb
add
addb
scas
addb
scas
addb
scas
jle
add
jle
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
scas
addr16
add
addr16
add
addr16
add
addr16
add
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
add
add
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
add
xchg
imul
xchg
imul
xchg
add
imul
xchg
imul
xchg
add
xchg
add
add
push
imul
inc
imul
inc
imul
push
imul
push
imul
inc
imul
inc
imul
push
imul
push
imul
push
imul
push
imul
push
imul
push
imul
push
imul
push
imul
push
add
push
add
push
add
push
add
push
add
push
add
push
add
add
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
add
push
add
scas
push
add
scas
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
jmp
add
addr16
add
addr16
add
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
add
add
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
add
add
add
add
add
add
add
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
push
add
inc
add
inc
add
push
add
push
add
inc
add
inc
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
add
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
addr16
jmp
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
jmp
add
addr16
jmp
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
add
add
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
add
push
add
push
add
push
add
push
add
push
add
push
add
arpl
add
arpl
add
arpl
add
arpl
add
arpl
add
arpl
add
arpl
add
arpl
add
xchg
imul
xchg
add
imul
xchg
imul
xchg
add
imul
push
imul
inc
imul
inc
imul
push
imul
push
imul
inc
imul
inc
imul
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
add
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
addr16
add
addr16
add
scas
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
add
add
lods
addr16
lods
addr16
lods
addr16
lods
add
inc
push
add
push
push
add
inc
push
add
push
push
add
push
push
add
push
push
add
push
push
add
add
add
add
add
add
add
add
add
xchg
add
xchg
add
xchg
add
add
xchg
add
xchg
add
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
add
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
addr16
add
addr16
add
addr16
add
scas
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
lods
addr16
lods
addr16
lods
addr16
add
add
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
lods
addr16
add
add
xchg
add
xchg
add
xchg
xchg
push
add
push
add
inc
add
inc
add
push
add
push
add
inc
add
inc
add
push
add
push
add
lods
push
xchg
les
add
sahf
popa
aas
fcomp
lods
xchg
push
mov
jmp
dec
ljmp
mov
ds
mov
pop
inc
gs
int
xor
in
jno
scas
xor
adc
or
outsl
scas
test
out
std
fs
subb
adc
sbb
sub
xchg
sub
insb
xlat
aad
cs
jp
add
pop
imul
stos
lock
push
gs
mov
mov
jecxz
fbstp
pusha
aaa
lods
bound
nop
sbbl
mov
push
jne
ror
jae
out
mov
mov
pop
ja
xchg
test
mov
hlt
push
outsb
lea
adc
sbb
cmp
mov
test
xchg
movl
cmpsl
cmp
divb
xchg
adc
and
or
loop
xchg
xchg
sub
leave
sahf
ja
bound
mov
sub
push
push
dec
mov
or
xchg
inc
mov
dec
mov
shll
dec
push
jg
loope
jbe
aad
je
pop
sbb
mov
notb
push
pop
add
dec
jl
xor
lea
mov
pop
cmp
dec
add
test
mov
arpl
push
sbb
shll
jbe
adc
testb
sti
mov
lcall
aaa
sahf
in
cwtl
xlat
andl
loop
jle
movsb
mov
ss
cmp
inc
add
add
andb
xor
push
lods
xchg
adc
fsub
sub
int3
ret
mov
pop
mov
mov
push
xor
adc
xchg
out
aas
sub
out
jnp
cwtl
notl
xor
roll
fs
jp
jecxz
xor
or
and
push
ret
pop
loopne
push
add
loopne
xor
mov
fidivrs
xor
and
cmp
hlt
fildl
jmp
mov
mov
fsubp
sbbl
cmp
and
loopne
fiaddl
push
stos
loopne
in
lods
fmull
cmpsl
loopne
clc
xor
clc
mov
mov
inc
cmpsl
loopne
call
jle
add
mov
dec
lock
clc
mov
add
loopne
cld
call
addr16
cmpsb
fimuls
add
xlat
fiadds
lahf
sbb
fimuls
add
loopne
faddl
push
mov
xor
ljmp
add
add
outsl
fcompl
mov
pop
mov
bound
in
xor
in
ljmp
cmp
dec
aas
out
add
movsb
lock
xchg
rorb
and
int3
repz
int3
jmp
int3
jp
jecxz
sbb
add
jb
mov
mov
sub
push
testl
adc
add
call
das
jae
mov
push
mov
inc
add
jmp
mov
sub
add
roll
mov
or
fdivrl
and
jge
lods
cmpsl
add
mov
lods
das
jmp
mov
mov
cmp
add
mov
jb
int3
sti
and
int3
repz
int3
jmp
int3
pop
fsub
mov
mov
mov
or
in
and
int3
repz
int3
jmp
int3
pop
fsub
mov
arpl
repnz
push
inc
sbb
inc
scas
mov
int3
jnp
int3
jae
int3
imul
int3
fcmovu
jecxz
pop
pop
push
aad
push
mov
fidivrs
xlat
aas
add
fdivrl
fistpll
mov
les
mov
add
xor
or
add
ret
int3
pop
fsub
push
lock
add
cmpsb
fdivrl
sub
add
ret
mov
cmp
mov
fs
cld
mov
pop
add
pop
scas
adc
sub
imul
ljmp
ret
int3
jnp
int3
jae
int3
imul
cli
loop
mov
lret
loop
mov
stos
pop
xor
ret
int3
sti
sbb
int3
repz
int3
jmp
int3
jp
jecxz
sbb
inc
mov
ja
scas
pop
jl
scas
add
mov
ljmp
fnclex
cmp
sub
or
mov
inc
or
scas
loopne
cld
and
hlt
cmp
push
jae
xor
hlt
mov
push
pop
mov
test
cli
add
cltd
mov
loop
lock
or
cs
testl
inc
loop
or
add
cmpsl
loop
clc
xor
adc
push
mov
loop
or
js
dec
pop
loopne
or
mov
loop
or
jmp
mov
stos
ret
int3
jp
jecxz
fildl
cmp
and
fmull
add
fimuls
mov
ljmp
lret
lock
mov
push
loopne
ljmp
test
add
aad
push
xor
loopne
loop
add
mov
cmp
mov
cmpl
rcrl
mov
mov
push
mov
loope
or
cmp
pop
and
loopne
push
add
fidivrs
xor
loopne
bound
adc
mov
repnz
add
scas
mov
call
pop
mov
inc
cmpl
sar
repnz
add
scas
mov
call
mov
loopne
orl
adc
ficoml
add
mov
dec
sub
testl
mov
mov
xor
or
and
hlt
push
xlat
repz
jmp
out
or
mov
mov
fstl
mov
add
fidivrs
and
in
outsb
mov
aas
mov
dec
add
loopne
loopne
pop
idiv
sbb
pop
insb
sbb
int3
fcmovu
jecxz
pop
pusha
push
inc
daa
daa
inc
add
dec
add
fidivrs
fistpll
ss
xor
les
popf
adc
mov
push
and
or
mov
mov
lods
ret
int3
jmp
int3
pop
fsubp
mov
jmp
ja
inc
scas
loopne
add
mov
lods
ret
int3
jmp
int3
pop
fsubp
sbbl
add
and
xor
ds
add
pop
loopne
hlt
and
in
mov
pop
mov
fimuls
mov
mov
xor
insb
inc
sub
clc
add
arpl
rolb
daa
ficoms
in
or
fidivrs
and
add
ja
mov
fidivrs
movsl
sbb
aam
mov
fstl
mov
lea
rolb
jmp
jl
mov
push
es
int3
jnp
int3
jae
int3
imul
cli
fsub
mov
pop
cmp
aam
mov
pop
jmp
test
inc
mov
sbb
int3
imul
cli
fsub
sbbl
inc
inc
push
cmp
mov
mov
fs
cmp
mov
mov
pop
mov
jae
push
pand
or
xchg
fidivrs
xchg
aas
scas
faddl
nop
mov
hlt
call
in
or
mov
add
scas
addr16
push
dec
dec
lock
mov
mov
dec
mov
mov
mov
cmpl
mov
add
push
add
fidivrs
xor
loopne
clc
mov
cmp
push
jae
add
call
je
faddl
into
adc
fwait
mov
adc
loopne
pop
mov
dec
iret
xchg
shl
pop
mov
inc
xchg
mov
inc
xlat
fildl
lahf
or
and
call
inc
mov
inc
testl
ss
jmp
repz
in
dec
cld
jo
add
mov
or
out
addr16
stos
add
mov
decl
mov
cmpl
inc
scas
insl
or
push
incl
xchg
cmp
scas
mov
add
scas
mov
cltd
mov
repnz
xor
inc
dec
lock
daa
inc
scas
push
or
xor
cltd
push
mov
lock
add
int3
das
repz
roll
scas
ja
add
hlt
push
add
or
das
repz
lock
fsubs
fmuls
mov
cmp
xor
loopne
ficoms
push
mov
cwtl
call
sub
mov
ljmp
addl
fsubrs
mov
lret
icebp
dec
loopne
sbb
inc
scas
xchg
inc
xor
xor
repnz
jg
add
pop
int3
das
jmp
push
mov
push
push
call
sub
add
repnz
mov
lods
xchg
sub
scas
call
add
ficoml
add
jae
xor
addr16
mov
cltd
call
xor
mov
add
insl
cli
incl
jmp
push
mov
xchg
call
sub
mov
lock
nop
stos
add
stos
loopne
mov
push
or
enter
xchg
decl
push
daa
inc
scas
push
sub
lahf
stos
add
out
sar
mov
scas
cltd
notl
dec
mov
add
mov
int3
jmp
int3
jp
jecxz
jb
mov
mov
int3
pop
lock
sbbl
das
imul
out
cmp
pusha
movsl
pop
pop
in
xor
int3
pop
lock
pop
jl
aas
scas
or
das
repz
call
sub
or
dec
cmpsl
cwtl
push
and
or
repz
cli
inc
mov
cli
es
int3
cli
out
jecxz
pop
mov
add
add
lock
in
add
inc
add
scas
addr16
add
jne
das
imul
out
mull
xchg
inc
testl
mov
daa
inc
scas
add
add
cmp
inc
scas
push
xor
enter
sbb
add
scas
add
sub
in
das
jmp
add
int
mov
push
in
jmp
mov
ss
mov
out
cmp
lods
movsl
xor
push
mov
lock
shrb
add
pop
shrb
addr16
shrb
inc
scas
int3
cld
aas
scas
iret
push
add
mov
xchg
cmp
pop
dec
cmp
inc
add
push
cld
das
repz
stos
ja
add
inc
scas
push
or
repz
call
sub
cld
mov
aaa
mov
xchg
call
xorl
lock
push
push
lock
repz
call
add
add
jb
mov
in
dec
cld
aam
lock
in
cmp
pop
in
inc
fcompl
cmpsb
sti
lock
add
add
das
imul
fistl
or
jae
add
xchg
mov
lods
mov
push
xchg
fdivr
jmp
lcall
xchg
out
dec
in
stos
hlt
add
and
loopne
jb
das
add
mov
dec
xchg
ljmp
or
clc
subl
push
aaa
in
cmp
in
lock
in
add
enter
bound
mov
lods
lcall
lods
stos
clc
mov
es
adc
lods
lcall
imul
mov
pop
jmp
in
and
fsubs
daa
inc
add
pop
daa
inc
scas
jp
mov
dec
push
clc
jo
mov
decb
sti
pop
aas
jge
fisubl
rclb
dec
cmp
sub
cld
xorb
inc
scas
insb
or
daa
inc
scas
lock
dec
mov
or
mov
pop
sub
shlb
add
add
add
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
add
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
add
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
add
add
scas
add
scas
add
scas
add
add
add
add
add
divb
add
xor
add
add
add
add
add
add
lods
xor
add
insb
add
push
xor
add
insl
add
shlb
add
xor
add
add
add
add
push
outsb
add
pusha
outsb
add
insb
outsb
add
jp
add
mov
add
add
mov
outsb
add
in
outsb
add
push
outsl
add
sbb
add
add
inc
outsl
add
pop
outsl
add
push
outsl
add
xchg
outsl
add
movsb
outsl
add
inc
outsb
add
into
outsl
add
fisubrl
add
outsl
add
hlt
outsl
add
add
add
jo
add
jo
add
add
push
jo
add
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
outsb
add
add
add
xor
add
inc
jno
add
jno
add
add
es
add
add
add
add
xorb
mov
add
jno
add
jno
add
jno
add
jno
add
jb
add
add
push
jb
add
add
cmp
add
add
dec
jb
add
add
add
add
jo
add
jle
add
mov
add
add
cmpsb
jb
add
jb
add
jb
add
add
add
push
gs
fs
imul
imul
insb
insb
outsl
arpl
add
inc
add
outsl
jae
dec
popa
outsb
fs
add
inc
outsl
jo
inc
imul
jb
popa
je
inc
imul
jb
popa
je
push
jb
arpl
jae
add
mov
popa
je
push
push
add
ret
add
gs
inc
imul
js
je
jb
arpl
jae
or
inc
js
popa
outsb
fs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
insb
gs
imul
jae
popa
je
push
imul
imul
outsl
dec
outsl
arpl
inc
imul
inc
add
jb
popa
je
gs
popa
addr16
add
test
inc
jne
jb
outsb
je
jb
arpl
jae
stos
add
je
jne
jb
outsb
je
jb
arpl
jae
add
inc
jne
jb
outsb
je
push
dec
add
out
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
je
outsl
fs
gs
imul
add
testb
gs
outsl
fs
gs
popa
outsb
fs
gs
add
and
inc
gs
jb
arpl
jae
gs
jo
add
inc
gs
jns
je
insl
push
imul
insb
gs
imul
gs
imul
je
add
jo
insb
insb
outsl
arpl
mov
jo
jb
add
stc
add
popa
insb
inc
insb
insb
outsl
arpl
add
add
popa
insb
inc
jb
add
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
movb
gs
jne
jb
outsb
je
imul
jns
add
rolb
push
gs
jb
outsl
jb
outsl
fs
filds
push
gs
imul
gs
add
add
je
popa
jae
inc
jb
outsl
jb
add
push
outsb
push
gs
js
gs
imul
gs
and
insb
gs
sub
insl
imul
outsl
arpl
jae
add
add
outsb
push
gs
js
gs
imul
gs
add
jb
insl
jo
add
lods
add
jae
jb
insl
jo
push
add
jb
jo
push
add
mov
insb
jae
jb
jo
outsb
push
add
jb
outsb
push
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
rolb
dec
outsl
popa
fs
jne
jae
jb
add
push
imul
popa
jae
inc
js
add
aad
dec
outsl
popa
fs
jne
jae
jb
add
add
fs
arpl
inc
add
gs
jns
inc
outsl
insb
outsl
jb
push
push
inc
push
xor
cs
insb
add
pop
add
addr16
jo
outsb
dec
gs
add
push
inc
push
dec
xor
cs
insb
add
jl
insl
gs
jae
je
add
add
arpl
inc
imul
pop
pop
jo
pop
arpl
insl
outsl
fs
aas
add
jo
pop
insw
outsl
fs
push
add
jae
je
popa
jo
pop
je
jo
add
push
add
jae
je
jae
jb
popa
je
gs
add
pop
add
ja
gs
popa
imul
add
pop
ja
outsb
imul
add
fs
jae
pop
imul
add
pop
gs
je
jp
pop
arpl
imul
outsl
outsb
je
outsl
insb
data16
add
arpl
je
push
gs
add
movsb
add
js
je
movb
data16
insb
add
add
outsb
imul
add
je
ja
lret
ja
jae
ja
add
add
outsw
jo
outsb
add
add
data16
insb
jo
je
add
add
jo
imul
add
imul
insb
outsl
jae
add
cmp
data16
outsl
outsl
jb
dec
add
jo
imul
add
jo
imul
add
jae
arpl
add
add
jae
je
add
insl
jae
arpl
cs
insb
add
or
add
add
pusha
add
addb
add
js
add
lock
addb
add
cmp
add
nop
add
orb
add
test
add
enter
adc
add
lock
sbbb
add
or
add
add
add
cmc
add
add
add
addb
or
add
add
addb
add
push
add
addb
add
push
add
add
add
add
add
add
add
add
add
orb
add
loopne
add
clc
add
orb
add
adc
add
sub
add
inc
add
orb
add
add
add
rolb
xorb
addb
add
add
add
add
add
add
add
add
add
add
addb
or
add
add
call
add
add
add
orb
add
sbb
orb
add
xor
orb
add
dec
add
orb
add
pusha
add
orb
add
add
nop
add
orb
add
test
add
add
add
rolb
add
add
add
or
add
orb
add
lock
addb
add
or
add
or
add
and
add
cmp
add
add
add
push
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
sbb
add
add
add
sbb
add
add
add
sbb
add
push
add
sbb
add
push
add
sbb
add
push
add
sbb
add
push
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
sbb
add
push
add
sbb
add
push
add
sbb
add
push
add
sbb
add
pop
add
sbb
add
pop
add
sbb
add
pop
add
sbb
add
pop
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
cltd
add
test
add
nop
stos
add
sub
add
mov
add
add
add
add
and
add
mov
add
jo
add
test
add
sbb
add
test
add
rcl
add
add
add
add
add
add
test
add
mov
add
add
add
add
push
add
xor
add
add
adc
add
add
add
sahf
add
or
add
add
lcall
add
add
add
movsb
add
stos
add
add
add
add
cmpsb
add
addb
add
sbb
add
add
add
add
add
mov
push
add
nop
and
add
mov
add
add
sub
add
add
add
add
add
add
xor
add
add
xor
add
jo
add
sbb
add
mov
add
adc
add
add
adc
add
add
add
add
add
xchg
add
xchg
add
add
add
push
add
dec
add
dec
add
or
push
add
push
add
inc
add
inc
add
add
cmp
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
and
and
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
and
and
and
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
and
and
and
cmp
arpl
imul
and
and
and
and
and
and
gs
gs
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
ds
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
and
and
and
cmp
jae
arpl
imul
and
and
and
and
je
jne
je
outsb
outsw
ds
and
and
popa
jae
gs
bound
add
add
add
add
adc
add
add
add
add
add
inc
add
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addb
mov
mov
mov
mov
mov
mov
mov
mov
mov
adcl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
adc
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
adc
adc
mov
mov
mov
add
or
mov
mov
mov
mov
add
mov
mov
adc
adc
mov
mov
mov
add
or
mov
mov
add
add
mov
mov
add
mov
adcl
sbb
addb
add
mov
add
add
mov
add
add
addb
add
mov
add
add
or
mov
add
mov
adcl
sbb
add
or
add
add
add
add
add
add
add
mov
add
add
add
mov
adcl
sbb
addb
add
mov
add
add
mov
add
add
addb
add
mov
add
add
or
mov
add
mov
adcl
sbb
mov
mov
add
or
mov
mov
add
add
mov
mov
add
mov
mov
adc
adc
mov
mov
mov
add
or
mov
mov
mov
mov
add
mov
mov
adc
adc
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
or
mov
mov
mov
mov
mov
mov
adcl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
add
sbb
adc
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
add
sbb
and
add
xor
add
add
add
add
and
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
and
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lret
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
sub
pushl
push
add
ja
data16
popa
add
add
add
add
add
add
add
push
add
add
or
pop
add
add
add
add
outsl
add
insb
add
arpl
imul
add
je
add
je
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
or
adc
sub
or
leave
add
outsl
add
insb
add
arpl
imul
add
je
add
je
add
xor
sub
xor
add
add
add
add
add
add
add
dec
add
add
add
popa
add
add
add
jo
insb
add
jns
add
add
add
add
add
add
add
push
add
ja
data16
popa
add
add
add
add
add
add
add
push
add
add
lea
pop
add
add
add
add
outsl
add
insb
add
arpl
imul
add
je
add
je
add
adc
cmp
add
add
add
add
add
add
add
add
push
add
add
lea
adc
pop
add
add
add
outsl
add
insb
add
arpl
imul
add
je
add
je
add
xor
sub
xor
add
add
sbb
add
add
add
add
add
add
jae
arpl
je
insb
add
pop
add
add
arpl
imul
add
jb
xor
xor
or
add
add
add
add
add
add
add
add
incl
add
add
add
push
add
add
sub
xor
and
str
add
incl
add
add
add
push
add
add
dec
add
add
add
add
add
incl
add
add
add
push
add
add
insb
add
add
add
add
add
incl
add
add
add
push
add
add
mov
xor
and
lldt
add
incl
add
add
add
add
push
add
add
add
add
add
dec
add
add
add
add
or
dec
add
and
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
or
ljmp
add
add
add
add
push
add
add
movsb
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
incl
add
add
add
push
add
add
or
sbb
lods
add
add
incl
add
add
add
add
add
add
add
add
add
incl
add
add
add
push
add
add
or
add
add
jae
arpl
je
insb
add
pop
add
jb
outsl
add
jb
add
jae
xor
xor
add
add
add
add
inc
add
add
add
add
incl
add
add
add
add
add
add
add
addb
add
adc
add
add
out
fiaddl
add
add
and
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
or
xchg
add
ljmp
add
add
add
add
push
add
add
pop
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
xchg
add
jmp
incl
add
add
add
push
add
add
pop
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
dec
add
add
add
incl
add
add
add
push
add
add
pop
add
cmp
or
testb
incl
add
add
add
add
add
xor
add
add
add
add
add
add
push
add
add
dec
add
xchg
add
add
add
incl
add
add
add
push
add
add
pop
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
incl
add
add
add
push
add
add
pop
add
aam
dec
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
sbb
sbb
incl
add
add
add
push
add
add
sub
jbe
stos
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
push
add
add
push
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
incl
add
add
add
push
add
add
lea
popf
add
push
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
addb
addb
add
add
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
adc
adc
add
adc
adc
adc
pop
adc
adc
adc
xor
adc
ja
jno
adc
adc
or
jno
adc
add
adc
jnp
add
jno
adc
mov
ja
mov
or
jno
adc
mov
adc
cmp
add
jno
adc
adc
adc
adc
pop
jno
jno
adc
mov
adc
adc
adc
aaa
pop
adc
adc
adc
adc
adc
adc
jg
adc
aas
orb
sbb
jno
pop
adc
sbbb
popl
pop
adc
add
ja
add
adc
add
pop
popl
sbb
adc
sbb
pop
js
aas
jno
mov
add
add
add
add
add
add
add
add
incl
xor
add
xor
add
cmp
lret
outsl
outsl
add
cmp
imul
imul
jns
jo
add
aas
add
addb
jbe
add
jb
add
xchg
add
mov
fmuls
outsl
add
xchg
xchg
add
push
push
add
xor
add
cltd
cltd
add
gs
dec
dec
add
mov
jmp
xchg
add
dec
add
addl
popf
outsb
outsb
add
cmpsb
cmpsb
add
dec
add
addb
out
lods
lods
add
gs
test
add
jge
add
mov
add
insl
insl
add
xchg
xchg
add
push
push
add
addr16
cltd
cltd
add
cwtl
cwtl
add
fwait
fwait
add
xchg
xchg
add
mov
add
push
add
push
add
mov
js
xchg
jno
add
xchg
xchg
add
jl
add
mov
jle
xchg
jb
add
push
push
add
mov
add
int3
int3
add
stos
stos
add
dec
add
test
add
dec
add
mov
add
bound
pushf
addb
jo
pop
add
inc
add
jo
add
fs
mov
inc
add
jae
add
js
add
outsb
add
les
push
dec
dec
add
inc
add
insl
insl
add
cmp
add
push
add
inc
add
iret
iret
add
add
scas
scas
add
pop
add
insb
add
imul
aad
add
add
dec
add
fstp
add
dec
add
push
imul
jnp
add
outsl
add
pusha
add
add
jno
hlt
call
out
inc
inc
inc
add
out
out
add
int
add
add
add
stc
stc
add
add
add
add
std
std
add
cmc
cmc
add
out
out
add
jmp
add
jecxz
add
fstp
add
add
rcl
add
rcl
add
int3
int3
add
lret
leave
leave
leave
add
mov
add
ret
ret
add
mov
mov
add
mov
add
mov
add
lods
lods
add
test
add
movsl
movsl
add
lahf
lahf
add
fwait
add
xchg
xchg
add
xchg
xchg
add
lea
add
xchg
add
addb
jge
jge
jnp
jnp
js
js
jbe
jbe
jne
jne
jb
jb
jno
jno
outsb
outsb
outsb
add
add
push
imul
add
data16
add
bound
pusha
pusha
pusha
add
pop
add
add
pop
add
pop
add
push
add
add
push
add
push
add
dec
add
dec
add
dec
add
dec
add
dec
add
inc
add
inc
add
inc
add
inc
add
aas
aas
add
cmp
add
cmp
add
aaa
aaa
add
xor
add
fwait
fwait
fwait
cs
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
cs
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
cs
cs
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
cs
cs
fwait
fwait
fwait
fwait
fwait
cs
cs
fwait
fistpll
fwait
fwait
cs
cs
mov
cmpsl
mov
fistps
fwait
fists
mov
fstps
fwait
gs
imul
test
fistps
or
call
filds
mov
fwait
fwait
fwait
fwait
fwait
or
test
iret
add
mov
fwait
fwait
or
in
add
add
or
out
in
filds
leave
fwait
fwait
fwait
fwait
fwait
or
jne
out
fcmovnu
fistps
fwait
fwait
fwait
add
fistpl
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
lcall
fwait
fwait
inc
fwait
fwait
and
out
xchg
lock
cs
fwait
pop
shlb
fwait
sbbb
fwait
add
flds
pinsrw
pop
fwait
fwait
cmpb
fwait
sarb
lret
lcall
add
add
add
add
add
add
add
test
sahf
iret
addr16
add
add
int3
int3
push
idivl
popl
add
add
xchg
xchg
lcall
fs
ret
loopne
mov
leave
fs
lods
lods
ror
fs
ret
ret
scas
shll
dec
dec
dec
pusha
mov
insb
ljmp
pushl
jo
cli
ret
ret
scas
loopne
xchg
sar
iret
iret
adc
test
filds
add
add
inc
push
mov
mov
ljmp
ret
mov
add
add
add
ret
xchg
xchg
jns
jb
jb
lret
lret
aam
ja
push
push
push
fistpll
jns
stos
stos
stos
inc
mov
ljmp
mov
mov
loop
lcall
cwtl
cwtl
lahf
xor
push
push
ljmp
callw
inc
call
inc
lcall
int3
int3
ljmp
pushf
decl
dec
pusha
add
add
leave
mov
add
mov
addb
add
fs
aaa
iret
push
push
push
call
inc
incl
js
lcall
pop
pushl
mov
mov
mov
add
add
add
add
add
add
add
add
jbe
inc
scas
xchg
jns
incl
inc
pushl
jo
mov
ja
mov
push
push
push
inc
mov
incl
add
incl
add
add
add
incl
add
incl
add
add
add
add
mov
cmp
addl
lcall
jb
call
push
incl
add
incl
add
ljmp
incl
add
incl
add
add
div
decl
dec
decl
dec
inc
mov
incl
add
incl
add
call
add
add
add
xor
push
cmpsl
xchg
xchg
dec
leave
leave
cmp
cmp
dec
dec
dec
ljmp
imul
push
push
ljmp
imul
add
incl
add
jmp
arpl
test
fs
inc
xor
fistpll
cmp
incl
inc
call
push
lcall
jmp
pusha
ljmp
ljmp
das
das
and
add
incl
add
add
add
add
xor
xorb
decl
call
push
out
cmp
add
add
das
das
adc
xor
inc
xor
xor
das
das
adc
add
add
pop
add
decl
add
incl
add
shlb
shlb
add
pop
add
add
add
pop
or
add
sbb
sbbb
shl
aas
adc
sub
add
and
add
inc
add
add
add
add
addb
add
add
addb
addb
add
add
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
adc
adc
adc
adc
adc
adc
adc
xchg
adc
pop
jno
adc
adc
adc
adc
or
jno
pop
jno
adc
adc
adc
adc
xor
pushl
jno
adc
adc
adc
adc
add
jg
notl
adc
adc
adc
adc
adc
xor
push
adc
adc
adc
adc
adc
add
orb
adc
jno
adc
adc
mov
push
adc
adc
ja
adc
adc
mov
pushl
ja
adc
adc
add
mov
jno
adc
adc
adc
xor
pushl
adc
adc
aas
mov
mov
pushl
adc
adc
aas
mov
pop
ja
pushl
adc
adc
aas
mov
mov
pushl
adc
adc
aas
mov
pop
xchg
pushl
ja
ja
aas
sti
cmp
sti
sti
pop
testl
adc
adc
aas
incl
testl
adc
adc
sti
aas
incl
ja
pushl
adc
adc
adc
pop
pushl
adc
adc
adc
xor
pushl
adc
adc
adc
adc
mov
pushl
ja
adc
adc
adc
mov
orb
pop
ja
adc
adc
cmp
adc
adc
adc
adc
adc
mov
push
adc
adc
adc
adc
adc
adc
mov
push
adc
adc
adc
adc
adc
adc
mov
pushl
jno
adc
adc
adc
adc
adc
or
jno
pop
jno
adc
adc
adc
adc
adc
pop
jno
adc
adc
adc
adc
xor
adc
adc
pop
adc
adc
adc
adc
adc
adc
adc
adc
adc
cld
jg
clc
aas
lahf
push
push
jg
loopne
inc
ud0
orb
incl
paddw
add
jecxz
add
pop
rolb
incl
add
incl
add
incl
add
incl
add
add
add
incl
add
incl
add
incl
add
cld
add
pop
incb
pavgw
add
std
incl
ud0
loopne
mov
clc
aas
lahf
cld
jg
ljmp
add
add
add
add
add
add
or
incl
xor
add
xor
add
cmp
lret
outsl
outsl
add
cmp
imul
imul
jns
jo
add
aas
add
addb
jbe
add
jb
add
xchg
add
mov
fmuls
outsl
add
xchg
xchg
add
push
push
add
xor
add
cltd
cltd
add
gs
dec
dec
add
mov
jmp
xchg
add
dec
add
addl
popf
outsb
outsb
add
cmpsb
cmpsb
add
dec
add
addb
out
lods
lods
add
gs
test
add
jge
add
mov
add
insl
insl
add
xchg
xchg
add
push
push
add
addr16
cltd
cltd
add
cwtl
cwtl
add
fwait
fwait
add
xchg
xchg
add
mov
add
push
add
push
add
mov
js
xchg
jno
add
xchg
xchg
add
jl
add
mov
jle
xchg
jb
add
push
push
add
mov
add
int3
int3
add
stos
stos
add
dec
add
test
add
dec
add
mov
add
bound
pushf
addb
jo
pop
add
inc
add
jo
add
fs
mov
inc
add
jae
add
js
add
outsb
add
les
push
dec
dec
add
inc
add
insl
insl
add
cmp
add
push
add
inc
add
iret
iret
add
add
scas
scas
add
pop
add
insb
add
imul
aad
add
add
dec
add
fstp
add
dec
add
push
imul
jnp
add
outsl
add
pusha
add
add
jno
hlt
call
out
inc
inc
inc
add
out
out
add
int
add
add
add
stc
stc
add
add
add
add
std
std
add
cmc
cmc
add
out
out
add
jmp
add
jecxz
add
fstp
add
add
rcl
add
rcl
add
int3
int3
add
lret
leave
leave
leave
add
mov
add
ret
ret
add
mov
mov
add
mov
add
mov
add
lods
lods
add
test
add
movsl
movsl
add
lahf
lahf
add
fwait
add
xchg
xchg
add
xchg
xchg
add
lea
add
xchg
add
addb
jge
jge
jnp
jnp
js
js
jbe
jbe
jne
jne
jb
jb
jno
jno
outsb
outsb
outsb
add
add
push
imul
add
data16
add
bound
pusha
pusha
pusha
add
pop
add
add
pop
add
pop
add
push
add
add
push
add
push
add
dec
add
dec
add
dec
add
dec
add
dec
add
inc
add
inc
add
inc
add
inc
add
aas
aas
add
cmp
add
cmp
add
aaa
aaa
add
xor
add
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
lret
lret
lret
lret
lret
lret
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
cs
lret
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
cs
ret
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
lret
lret
lret
lret
fwait
fwait
cs
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
cs
lret
fwait
pop
and
lret
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
out
loope
fstps
lret
fwait
pop
and
lret
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fldl2t
fadd
mov
enter
rcrl
fwait
cmp
ret
fwait
fwait
fwait
fwait
fwait
fwait
fwait
ftst
mov
movsl
movsl
movsl
movsl
movsl
mov
in
fistpl
fwait
es
lret
fwait
fwait
fwait
fwait
fwait
fwait
fwait
mov
mov
cmpsl
movsl
movsl
int
ficomps
fwait
and
lret
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
call
test
stos
mov
scas
movsl
movsl
shr
fwait
fwait
cs
fwait
cs
lret
fwait
fwait
fwait
fwait
fwait
fwait
fwait
out
ror
lds
movsl
cmpsl
mov
movsl
movsl
shr
fstps
daa
lret
fwait
fwait
fwait
fwait
fwait
fwait
fwait
out
rcl
sarl
movsl
movsl
mov
movsl
stos
out
fwait
fwait
cs
fwait
daa
lret
fwait
fwait
fwait
fwait
fwait
fwait
fwait
out
int3
shl
and
imul
mov
movsl
mov
fstps
lret
fwait
fwait
fwait
fwait
fwait
fwait
fwait
in
fnstcw
xor
sub
cmpsl
mov
fwait
cs
fwait
daa
lret
fwait
fwait
fwait
fwait
fwait
fwait
mov
fucompp
dec
push
push
inc
xor
sub
scas
mov
jmp
daa
lret
fwait
fwait
fwait
fwait
insb
add
nop
fucomi
xchg
mov
movsl
movsl
cmpsl
mov
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
insb
adc
jmp
rorl
cmpsb
movsl
mov
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
pop
pop
gs
loop
sarl
out
scas
cmpsl
mov
movsl
in
fstps
fwait
fwait
fwait
or
pop
out
out
mov
aam
jbe
mov
mov
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
or
je
icebp
in
in
les
sarb
mov
movsl
in
fstps
fwait
fwait
fwait
or
xchg
xchg
shl
call
mov
ret
mov
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
or
add
loope
mov
leave
ret
mov
in
fstps
fwait
fwait
fwait
or
mov
jmp
int3
lret
shr
int
ret
lret
ficomps
fwait
fwait
fwait
fwait
fwait
adc
in
lock
jmp
jmp
int
mov
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
sbb
lock
out
xlat
ror
xlat
fstpl
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
adc
icebp
lock
call
fstp
aad
jmp
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
jmp
out
jmp
out
fstp
loope
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
add
jmp
fstps
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fstps
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
incb
incb
jmp
sbb
incl
incl
xor
cld
add
clc
add
clc
add
inc
lock
daa
lock
daa
lock
daa
lock
daa
loopne
add
addb
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
add
incl
pop
push
jg
sub
add
and
add
inc
add
add
add
add
add
or
add
adc
add
add
add
add
add
or
add
daa
add
add
add
dec
add
add
add
add
add
add
add
add
add
aad
popf
dec
movb
mov
add
add
add
add
pop
add
add
add
add
add
add
add
add
jmp
mov
nop
out
mov
mov
repnz
addr16
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
into
movsl
movsl
ja
leave
leave
jecxz
mov
push
stos
add
add
add
add
add
add
or
add
add
add
add
add
pop
add
add
add
add
lcall
popf
xor
sbbl
add
data16
add
add
inc
xlat
lods
lods
test
mov
jne
sbb
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
pop
sahf
jle
fwait
in
mov
out
mov
cmpsb
inc
jp
enter
mov
add
outsb
add
add
outsl
outsl
pop
cli
ret
ret
icebp
lret
ja
fcompl
or
add
add
sub
add
add
add
sbb
add
inc
or
or
sbb
sbb
pop
pop
pop
rcll
adc
mov
add
add
mov
enter
ljmp
or
add
push
pop
cli
ret
ret
icebp
lret
fldl
add
jbe
add
pop
add
add
add
add
add
add
add
sbb
sub
sub
arpl
decl
cmpsb
cmpsb
lcall
cmp
push
push
jmp
es
add
clc
ret
lret
ficomps
or
add
jae
push
cmc
mov
pop
mov
add
je
add
inc
add
add
add
add
add
add
and
and
scas
scas
scas
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
jmp
push
push
jmp
and
loope
add
mov
clc
ret
lret
fiadds
add
jo
add
pop
fsubrs
lahf
lcall
lea
add
add
add
add
add
add
add
and
push
push
ljmp
mov
movsl
movsl
movsl
call
cltd
cltd
jmp
mov
dec
leave
leave
dec
int3
int3
dec
int3
int3
pushl
jbe
sub
sub
add
dec
dec
mov
ret
cmpsl
pop
pop
mov
add
jo
add
inc
test
mov
jne
add
add
add
inc
add
add
add
add
sbb
cmp
xchg
decl
test
inc
mov
int3
int3
int3
inc
rol
scas
scas
scas
lcall
mov
dec
int3
int3
dec
int3
int3
call
and
in
add
sahf
mov
xchg
in
cmpsb
cmpsb
lcall
lea
add
fs
mov
lcall
popl
add
arpl
add
and
add
add
add
add
outsl
outsl
outsl
pushl
jb
xchg
movsb
pushl
mov
dec
int3
int3
dec
int3
int3
dec
leave
leave
ljmp
lods
dec
int3
int3
dec
int3
int3
ljmp
lcall
push
push
faddl
add
mov
mov
jnp
add
add
add
inc
clc
mov
mov
add
jo
add
add
add
sbb
sbb
cmp
cmp
imul
jo
jo
lcall
mov
xchg
xchg
xchg
ljmp
lret
lret
dec
int3
int3
dec
int3
int3
dec
int3
int3
ljmp
lods
dec
int3
int3
inc
ret
inc
inc
inc
decl
or
mov
pop
pop
xchg
in
cmpsb
cmpsb
decl
and
add
add
stos
stos
jae
xchg
xchg
lcall
push
push
js
add
dec
add
add
add
add
sub
sub
dec
dec
lcall
pop
pushl
ja
push
push
dec
inc
inc
jl
pop
incl
inc
inc
ljmp
imul
int3
int3
int3
dec
int3
int3
dec
int3
int3
ljmp
mov
int3
int3
int3
jmp
and
in
add
hlt
ret
ret
jmp
add
add
ds
mov
ljmp
aaa
xchg
add
add
add
push
add
add
add
add
sub
sub
pop
pop
pop
jmp
pusha
decl
inc
ljmp
addb
roll
incl
inc
inc
ret
int3
int3
int3
dec
int3
int3
dec
leave
leave
lcall
leave
leave
dec
int3
int3
incl
inc
incl
xchg
xchg
mov
test
add
add
mov
add
cmp
add
adc
add
add
add
push
add
add
adc
or
es
dec
dec
lcall
pop
incl
inc
incl
jbe
lcall
jp
ljmp
addb
pop
pop
pop
dec
lret
lret
dec
int3
int3
dec
int3
int3
mov
mov
dec
int3
int3
decl
sbb
shrb
xchg
out
cltd
incl
add
sub
add
adc
enter
addb
add
add
add
add
add
add
dec
sub
mov
push
cmp
incl
inc
lcall
pop
cmp
cmp
imul
data16
pushw
imul
popf
jns
pushl
push
push
call
lret
lret
dec
int3
int3
dec
enter
lcall
mov
es
scas
addl
add
add
add
add
sub
jae
dec
decl
pop
pop
ds
push
incl
inc
pushl
ja
jge
jge
jge
jge
ja
ja
push
push
jo
imul
lcall
mov
lret
int3
int3
int3
lcall
int3
int3
int3
cmp
cmp
add
add
add
or
cmp
mov
mov
cmp
cmp
dec
dec
dec
incl
inc
decl
fwait
fwait
lcall
incl
insb
insb
pushl
push
lahf
jp
decl
inc
pushl
mov
enter
lods
mov
int3
int3
lcall
pop
incl
add
popl
add
das
pop
sub
dec
inc
xchg
xchg
dec
popf
popf
ljmp
ss
dec
ds
test
jmp
xchg
xchg
incl
push
jae
push
inc
inc
jmp
mov
mov
movsl
movsl
ljmp
int3
int3
lcall
pop
incl
add
mov
add
add
add
pop
das
das
inc
mov
fidivl
fcmovb
ret
xor
cmp
cmp
decl
ret
ret
inc
rol
mov
mov
mov
mov
jns
insl
incl
notrack
mov
mov
popf
popf
popf
pushl
int3
int3
lcall
pop
incl
add
xchg
add
sub
add
add
xor
xchg
jmp
xlat
push
in
clc
lock
jno
xor
xor
inc
inc
inc
incl
inc
dec
iret
iret
dec
into
into
mov
mov
mov
jne
jne
push
dec
dec
decl
xchg
xchg
jmp
xchg
xchg
ljmp
enter
inc
inc
cli
add
add
add
xor
icebp
repz
in
cli
cli
cli
inc
rol
xor
xor
cmp
cmp
aas
aas
aas
call
push
mov
mov
jmp
xchg
incl
inc
jmp
data16
jle
jle
mov
xchg
incl
stos
stos
ljmp
sub
call
add
add
add
add
mov
call
in
fstp
pop
pop
pop
pushl
xor
ds
aas
aas
aas
incl
inc
js
js
jnp
jnp
imul
inc
inc
inc
call
push
jmp
pushl
jbe
jle
jle
mov
jl
mov
addb
add
add
add
add
arpl
xor
outsb
aas
aas
lock
ret
into
into
into
dec
leave
leave
jmp
cmp
xor
ds
ds
inc
incl
inc
call
jmp
pusha
jmp
jmpw
pushl
jbe
outsl
outsl
outsl
incl
xchg
xchg
incl
inc
decl
push
push
ja
add
sbb
add
add
add
add
bound
push
ljmp
mov
ljmp
jno
pushl
xor
pushl
ds
inc
decl
dec
call
push
call
push
lcall
jmp
pusha
jmp
jmpw
ljmp
push
jle
jle
gs
add
xor
add
pop
bound
xor
xor
loope
push
push
pushl
dec
jmp
repz
das
das
mov
xor
xor
cmp
cmp
inc
inc
inc
decl
dec
call
push
call
push
lcall
pop
lcall
pop
lcall
pop
jmp
jmp
ljmp
cs
or
inc
add
add
add
add
add
add
xor
cs
add
add
add
add
xor
xor
xor
lock
xor
cmp
cmp
aas
aas
aas
incl
decl
dec
decl
dec
lcall
pop
jmp
pusha
call
push
ljmp
das
das
loope
or
add
add
add
add
add
xor
adc
xor
mov
cmp
cmp
inc
inc
inc
incl
decl
dec
incl
inc
cmp
cmp
sub
sub
adc
adc
add
add
add
add
xor
xor
xor
xor
xor
xchg
das
das
mov
das
das
mov
sub
pop
sbb
sbb
add
add
incb
incb
incb
jg
cld
add
cld
add
inc
add
incl
add
incb
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
add
addb
aas
addb
aas
addb
aas
rolb
jg
add
jg
add
inc
add
push
pop
ljmp
add
add
add
add
add
add
or
incl
xor
add
xor
add
cmp
lret
outsl
outsl
add
cmp
imul
imul
jns
jo
add
aas
add
addb
jbe
add
jb
add
xchg
add
mov
fmuls
outsl
add
xchg
xchg
add
push
push
add
xor
add
cltd
cltd
add
gs
dec
dec
add
mov
jmp
xchg
add
dec
add
addl
popf
outsb
outsb
add
cmpsb
cmpsb
add
dec
add
addb
out
lods
lods
add
gs
test
add
jge
add
mov
add
insl
insl
add
xchg
xchg
add
push
push
add
addr16
cltd
cltd
add
cwtl
cwtl
add
fwait
fwait
add
xchg
xchg
add
mov
add
push
add
push
add
mov
js
xchg
jno
add
xchg
xchg
add
jl
add
mov
jle
xchg
jb
add
push
push
add
mov
add
int3
int3
add
stos
stos
add
dec
add
test
add
dec
add
mov
add
bound
pushf
addb
jo
pop
add
inc
add
jo
add
fs
mov
inc
add
jae
add
js
add
outsb
add
les
push
dec
dec
add
inc
add
insl
insl
add
cmp
add
push
add
inc
add
iret
iret
add
add
scas
scas
add
pop
add
insb
add
imul
aad
add
add
dec
add
fstp
add
dec
add
push
imul
jnp
add
outsl
add
pusha
add
add
jno
hlt
call
out
inc
inc
inc
add
out
out
add
int
add
add
add
stc
stc
add
add
add
add
std
std
add
cmc
cmc
add
out
out
add
jmp
add
jecxz
add
fstp
add
add
rcl
add
rcl
add
int3
int3
add
lret
leave
leave
leave
add
mov
add
ret
ret
add
mov
mov
add
mov
add
mov
add
lods
lods
add
test
add
movsl
movsl
add
lahf
lahf
add
fwait
add
xchg
xchg
add
xchg
xchg
add
lea
add
xchg
add
addb
jge
jge
jnp
jnp
js
js
jbe
jbe
jne
jne
jb
jb
jno
jno
outsb
outsb
outsb
add
add
push
imul
add
data16
add
bound
pusha
pusha
pusha
add
pop
add
add
pop
add
pop
add
push
add
add
push
add
push
add
dec
add
dec
add
dec
add
dec
add
dec
add
inc
add
inc
add
inc
add
inc
add
aas
aas
add
cmp
add
cmp
add
aaa
aaa
add
xor
add
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
lret
lret
lret
lret
lret
lret
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
cmp
push
and
cmp
lret
lret
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
cs
sbb
int3
lret
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
cs
and
lret
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
cs
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
lret
lret
lret
lret
lret
fwait
fwait
fwait
fwait
fwait
cs
rcrl
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
xor
xor
cs
fwait
fwait
fwait
cs
rcrl
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
cs
lret
fwait
fwait
fwait
cs
iret
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
xlat
rcr
fstp
ror
fwait
fwait
fwait
fwait
fwait
cs
iret
fwait
fwait
fwait
cs
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
xlat
jmp
icebp
icebp
out
call
fwait
cs
rcrb
push
lret
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
in
out
scas
movsl
movsl
movsl
movsl
scas
rcr
in
fstpl
sbb
fwait
fwait
fwait
cs
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fsubr
ret
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
mov
lock
fwait
fwait
cs
lret
fwait
fwait
fwait
sbb
leave
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
mov
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
icebp
jmp
fwait
fwait
sbb
lret
fwait
fwait
fwait
or
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
in
mov
mov
test
mov
jmp
fwait
fwait
cs
fwait
cs
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
icebp
mov
lods
movsl
movsl
test
cmpsl
movsl
movsl
movsl
mov
jmp
fwait
fwait
cs
fwait
fwait
fwait
cs
aad
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
ror
mov
movsl
movsl
movsl
movsl
test
movsl
movsl
mov
out
fwait
fwait
cs
lret
fwait
fwait
cs
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
out
lret
int3
rol
mov
stos
movsl
movsl
movsl
movsl
movsl
scas
mov
lock
fwait
fwait
fwait
cs
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
lret
in
fmul
sarl
stos
movsl
movsl
movsl
movsl
movsl
stos
mov
fucomp
rcrb
fwait
fwait
adc
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
call
shl
fmul
mov
movsl
movsl
movsl
movsl
movsl
scas
mov
icebp
loop
fwait
cs
lret
fwait
fwait
cs
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
out
fcomp
ror
lret
out
dec
sub
stos
movsl
movsl
movsl
movsl
movsl
mov
movsl
movsl
movsl
shr
int
cs
fwait
fwait
fwait
dec
adc
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
lret
jmp
fcmovnbe
shr
push
sub
sub
daa
and
movsl
movsl
movsl
movsl
mov
lock
fwait
fwait
pop
adc
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
lret
out
fcmovnbe
in
cmp
cmp
xor
sub
pop
fisubrs
lods
mov
call
lret
fwait
fwait
pop
push
lret
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
lret
mov
in
dec
dec
dec
dec
dec
inc
inc
cmp
outsb
int3
stos
movsl
movsl
movsl
movsl
mov
out
into
fwait
cs
ss
fwait
fwait
fwait
fwait
fwait
fwait
fwait
das
add
nop
js
test
inc
xor
in
mov
movsl
movsl
movsl
mov
movsl
movsl
scas
icebp
xlat
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
add
aas
jne
in
out
xchg
jae
inc
xor
leave
lods
stos
movsl
movsl
test
out
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
pop
and
jl
out
out
into
lret
leave
leave
int3
rcl
xchg
inc
in
lods
stos
movsl
movsl
mov
in
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
sbb
out
jmp
leave
lret
rcl
test
mov
lods
stos
movsl
mov
call
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
sbb
pop
pop
dec
push
out
jmp
jmp
mov
aam
imul
mov
lods
stos
mov
movsl
movsl
enter
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
add
inc
inc
inc
inc
icebp
in
out
out
mov
mov
mov
mov
mov
mov
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
add
inc
push
pop
fs
jmp
scas
scas
mov
mov
pop
jbe
mov
mov
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
add
insl
je
lock
out
into
test
mov
popa
icebp
ret
mov
mov
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
add
xchg
jmp
mov
leave
iret
sub
sarl
stos
int
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
add
cltd
add
in
jmp
test
iret
xchg
fmulp
mov
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
adc
sahf
mov
lock
out
jecxz
scas
mov
ror
fucomip
ror
enter
int3
mov
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
add
mov
jmp
mov
fcmovnbe
iret
int
mov
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
or
mov
icebp
icebp
out
ljmp
out
in
fstp
aad
int
rol
mov
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
or
mov
shl
icebp
out
ljmp
fstp
aad
rcl
out
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
or
stos
scas
mov
mov
icebp
icebp
out
ljmp
fstp
xlat
iret
enter
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
or
jle
cwtl
jo
push
icebp
out
ljmp
fstp
fcmovbe
iret
int
jmp
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
add
add
or
in
jmp
aad
out
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fdivp
lock
out
jmp
out
in
in
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fsubrp
lock
in
ljmp
loopne
out
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fsubrp
lock
in
jmp
in
fstps
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
incl
add
incl
add
incl
add
incb
incl
add
incb
incl
add
incb
aas
incl
add
push
pop
incl
add
cld
ud0
add
cld
pop
pop
incl
add
clc
pop
cmp
add
inc
sar
add
incl
lock
add
cld
add
jo
add
push
add
jg
add
loopne
push
sbb
add
inc
add
push
pop
add
incl
add
incl
add
incl
add
arpl
add
incl
add
arpl
add
xor
add
xor
add
adc
add
cld
add
add
movl
add
movl
add
movl
add
incl
add
add
add
incl
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
add
decb
add
incl
add
cld
add
incl
add
incb
add
incl
add
incl
add
push
aas
incl
add
incl
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
jge
add
addb
add
add
push
add
push
add
add
add
sbb
add
or
add
add
add
add
rol
repnz
out
lods
lods
jmp
cltd
cltd
dec
jg
out
push
push
shrl
xor
xchg
add
add
add
cmp
add
sbb
add
push
test
push
hlt
ret
ret
xchg
ret
test
dec
int3
dec
int3
out
lods
lods
call
test
sub
mov
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
lock
test
push
clc
mov
dec
int3
stc
mov
test
addb
add
add
add
add
add
sbb
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
or
mov
leave
mov
int3
int3
out
lods
lods
mov
sbb
scas
add
add
add
add
add
add
jae
cmp
and
mov
add
jp
add
jp
add
jo
add
pop
add
add
add
add
add
add
hlt
ret
ret
inc
std
lret
cld
mov
shlb
mulb
xor
add
add
add
add
add
add
add
add
add
add
add
add
repz
mov
out
lods
lods
jmp
xchg
xchg
mov
aas
aas
mov
push
push
xchg
add
add
add
aaa
add
add
int3
mov
leave
ret
fisttps
rolb
add
add
add
add
add
add
add
add
adc
add
and
add
add
add
add
add
add
dec
push
sahf
jle
addr16
lahf
lahf
jnp
mov
lret
mov
mov
sahf
dec
dec
int
or
xchg
add
add
add
push
add
add
add
add
cli
enter
int3
int3
fisttps
roll
add
add
adc
add
add
add
add
add
adc
add
sub
add
push
add
add
or
cwtl
adc
adc
or
or
add
add
add
add
add
xor
lods
lods
jb
lret
cmc
mov
ja
pop
das
das
lods
add
add
add
sub
add
pop
cli
enter
int3
int3
call
jns
cmp
mov
add
addb
add
add
add
add
add
add
add
add
add
sbb
lods
sub
sub
xor
xor
cmp
pop
pop
lcall
pop
cmp
xor
jmp
es
add
xchg
add
pop
add
add
out
mov
jmp
xchg
xchg
call
add
mov
add
add
add
add
add
sti
leave
leave
mov
mov
leave
push
notl
or
add
add
add
add
add
pop
add
add
sbb
sbb
inc
inc
inc
call
mov
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
mov
xchg
xchg
lcall
pop
pushl
xor
sti
push
push
push
faddl
add
jge
add
inc
scas
mov
in
cmpsb
cmpsb
lcall
add
nop
add
add
add
ret
adc
repnz
ljmp
add
add
add
add
add
add
add
daa
daa
daa
mov
mov
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
jmp
pop
pop
ljmp
cs
add
push
pop
dec
dec
sub
leave
leave
shr
cmpsb
cmpsb
lcall
add
popl
add
push
add
add
lock
dec
int3
jmp
xchg
xchg
jmp
xor
add
add
add
add
add
add
add
add
sub
sub
dec
dec
dec
lcall
mov
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
decl
xor
call
pop
pop
roll
add
xchg
add
add
dec
dec
sub
lret
lret
lock
xchg
ljmp
mov
add
addb
add
add
add
stc
mov
inc
data16
adc
or
add
add
add
add
daa
daa
daa
xchg
cmp
cmp
pushf
pushf
pushf
ljmp
mov
jmp
xchg
incl
xchg
decl
fwait
fwait
pushl
int3
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
ljmp
cmp
pop
roll
add
xchg
add
add
mov
int3
int3
call
ja
cmc
sub
add
add
and
dec
lret
lock
inc
inc
int
add
test
add
xor
add
add
add
add
sbb
xor
xor
addl
call
jns
decl
movsl
movsl
mov
int3
int3
dec
int3
int3
inc
mov
test
call
stos
stos
dec
leave
leave
dec
int3
int3
dec
int3
int3
dec
int3
int3
ljmp
cmp
pop
roll
add
popl
add
inc
out
mov
pushl
add
mov
add
dec
add
add
cli
enter
int3
int3
dec
push
testl
add
push
add
add
add
add
das
das
das
iret
pop
pop
pop
call
jle
pushl
jb
xchg
xchg
xchg
ljmp
mov
mov
ret
ret
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
inc
cmpsb
cmpsb
cmpsb
lcall
mov
dec
int3
int3
dec
int3
int3
ljmp
xor
decl
add
jge
add
xor
enter
xchg
xchg
decl
daa
cmpsl
add
add
add
and
std
lret
out
cltd
jmp
xor
add
add
add
and
push
push
push
ss
aaa
aaa
jnp
jnp
ja
ja
insb
insb
insb
decl
lahf
lahf
jmp
scas
scas
pushl
mov
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
mov
cltd
cltd
mov
int3
int3
dec
int3
int3
dec
int3
int3
decl
cs
cwtl
cwtl
push
cld
mov
mov
pusha
faddl
add
xchg
add
inc
add
add
test
mov
jecxz
add
mov
add
cmp
add
pop
add
add
sub
dec
dec
pushl
jno
arpl
incl
xchg
xchg
call
lahf
lahf
jmp
scas
scas
pushl
mov
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
mov
pushf
pushf
mov
int3
int3
dec
int3
int3
dec
int3
int3
lcall
pop
lcall
push
push
faddl
add
mov
add
ds
fisttps
mov
add
add
test
int3
faddl
adc
add
add
add
adc
add
pop
xor
xor
pop
pop
pop
jmp
ljmp
imul
addb
xchg
xchg
xchg
jge
jge
push
push
push
push
push
jmp
jle
jle
lods
lods
lods
inc
ret
ret
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
mov
pushf
pushf
inc
ret
int3
int3
int3
dec
int3
int3
mov
xor
decl
or
mov
add
shll
cmc
mov
dec
movl
add
sub
add
add
mov
jmp
xor
add
add
add
sbb
and
and
ss
arpl
pop
pop
pop
pushl
jno
jbe
jbe
jnp
jnp
dec
dec
dec
incl
cmp
lcall
fs
push
pushl
xor
js
js
ret
ret
ret
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
ljmp
mov
int3
dec
int3
int3
dec
int3
int3
ljmp
jmp
and
in
add
mov
add
xor
outsl
outsl
in
add
add
add
or
ret
ret
xchg
mov
dec
xlat
add
add
sub
sub
ds
pop
lcall
jmp
ljmp
outsb
aas
aas
aas
ljmp
push
mov
test
inc
test
mov
inc
inc
decl
dec
mov
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
lcall
mov
dec
int3
int3
dec
int3
int3
mov
xor
sti
add
add
push
ljmp
aas
and
lcall
add
test
int3
inc
insl
insl
lock
add
add
add
add
add
add
add
add
add
sub
sub
push
push
push
lcall
pop
jmp
decw
dec
decl
inc
ljmp
jge
ljmp
jge
pushl
addl
mov
dec
dec
call
push
inc
ret
ret
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
mov
fwait
fwait
dec
int3
int3
dec
int3
int3
dec
int3
int3
lcall
pop
lcall
sbb
into
add
add
mov
lods
pushl
cmp
add
add
add
add
dec
int3
flds
add
add
add
add
add
add
add
add
add
add
add
add
es
inc
decl
lcall
pop
lcall
pop
pushl
ss
js
lcall
js
popf
js
jmp
jp
ljmp
addb
dec
inc
inc
js
js
ret
ret
ret
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
lcall
mov
int3
dec
int3
int3
call
es
insl
pop
stc
mov
push
lahf
add
add
add
add
add
add
std
lret
in
popf
jecxz
and
xor
add
or
add
add
add
add
add
adc
adc
pop
dec
daa
daa
shll
xor
dec
xor
incl
inc
decl
lcall
call
push
incl
ds
jnp
insl
pushl
imul
imul
imul
imul
outsl
outsl
call
jns
jmp
addb
cmp
cmp
mov
mov
ret
ret
ret
dec
int3
int3
dec
int3
int3
dec
int3
int3
pushl
movsl
movsl
dec
int3
int3
dec
int3
int3
mov
xor
incl
add
lcall
lds
add
add
add
add
add
add
test
add
add
add
add
add
aas
and
arpl
xor
imul
push
call
dec
incl
inc
decl
dec
lcall
pop
incl
inc
decl
dec
jmp
jmpw
jmpw
jmpw
jmpw
jmpw
ljmpw
addr16
jg
outsb
lcall
jp
ljmp
dec
dec
jle
jle
mov
ret
ret
dec
int3
int3
dec
int3
int3
inc
xchg
xchg
xchg
dec
enter
int3
int3
dec
int3
int3
incl
inc
call
adc
mov
add
add
sub
push
and
jo
dec
incl
jp
jmp
cmp
dec
dec
call
incl
inc
call
push
pushl
jne
jnp
jnp
jle
jle
jle
jle
js
js
jno
jno
push
data16
lcall
jp
decl
dec
dec
pushl
mov
dec
int3
int3
dec
int3
int3
lcall
mov
int3
dec
int3
int3
jmp
arpl
sbb
sbb
add
add
add
pop
sub
cmp
xchg
jp
lcall
test
jo
pop
cmp
cmp
inc
inc
inc
call
push
incl
inc
lcall
pop
incl
xchg
decl
addl
jnp
jnp
imul
data16
insb
lcall
jnp
xor
xor
scas
scas
scas
pushl
mov
dec
int3
int3
jmp
lods
lods
dec
int3
int3
dec
int3
int3
incl
pop
pop
aam
add
popa
add
add
bound
xor
sbbl
scas
mov
mov
jl
pushl
aaa
aaa
aas
aas
aas
decl
dec
incl
inc
lcall
pop
call
xchg
xchg
lcall
lcall
xchg
xchg
incl
jge
ljmp
imul
test
jmp
inc
inc
decl
scas
scas
pushl
mov
ljmp
test
dec
int3
int3
dec
int3
int3
incl
pop
pop
aam
add
bound
add
sbb
add
add
xor
mov
xchg
xchg
dec
cwtl
cwtl
dec
cltd
cltd
inc
xchg
xchg
pushl
xor
cmp
cmp
dec
dec
dec
incl
inc
incl
inc
lcall
lods
lods
ljmp
lods
lods
ljmp
pushf
pushf
call
addb
data16
push
lcall
incl
mov
scas
pushl
mov
lcall
int3
int3
dec
int3
int3
incl
and
flds
add
popa
add
add
xor
pushl
fwait
fwait
call
mov
stos
fidivl
dec
cmp
cmp
inc
inc
inc
decl
dec
pushl
xor
lcall
mov
mov
mov
scas
ljmp
cltd
cltd
decl
jle
ljmp
imul
addr16
decl
inc
jge
jge
lahf
lahf
lahf
jmp
scas
scas
pushl
scas
call
int3
int3
dec
int3
int3
incl
pop
pop
roll
add
pop
add
add
xor
mov
mov
fidivrs
jmp
iret
iret
incl
xor
cmp
cmp
inc
inc
inc
cmp
cmp
jne
jne
dec
lret
mov
mov
jmp
xchg
jle
jle
jno
jno
data16
xor
decl
xchg
xchg
lcall
mov
scas
lcall
xchg
xchg
inc
ret
ret
dec
int3
int3
incl
pop
pop
rolb
add
pop
add
add
xor
pushl
into
into
ljmp
push
call
int
xor
xor
xor
inc
inc
incl
inc
cmp
cmp
mov
mov
fstp
rcl
sar
ljmp
cmpsl
cmpsl
call
jle
pushl
jb
data16
cmp
xchg
call
lahf
lahf
jmp
xchg
xchg
lcall
mov
pushl
jbe
and
and
add
add
add
or
arpl
xor
mov
out
push
out
out
cld
stc
stc
lcall
pop
pushl
xor
cmp
cmp
inc
inc
inc
cmp
cmp
dec
dec
dec
inc
mov
lret
inc
ljmp
cmpsb
cmpsb
call
jle
pushl
jb
data16
call
push
incl
xchg
call
lahf
lahf
incl
pushf
pushl
mov
call
adc
stos
add
add
add
add
add
add
xor
dec
std
std
std
push
cmc
cmc
out
out
out
jmp
xor
pushl
xor
aas
aas
aas
incl
inc
pushl
aaa
aaa
decl
dec
mov
mov
ljmp
pushf
pushf
call
jle
ljmp
outsb
call
push
pushl
ss
outsb
pushl
jbe
addb
call
xchg
xchg
pushl
ja
sahf
sahf
sahf
ljmp
lods
lods
pushl
xor
incl
push
push
addl
add
add
add
add
xor
xor
inc
scas
scas
out
out
out
jmp
jmp
ljmp
fstp
push
push
push
pushl
xor
pushl
ss
inc
incl
inc
cmp
cmp
inc
inc
inc
jg
jg
lahf
lahf
lahf
call
xchg
decl
dec
pushl
ss
jmp
pushl
jb
jbe
jbe
addb
incl
jnp
lcall
mov
cmp
sub
out
add
add
add
adc
add
add
mov
fcos
fstp
call
call
rcl
jmp
xor
pushl
xor
cmp
cmp
inc
inc
inc
incl
inc
aas
aas
aas
pushl
cmp
decl
incl
inc
cmp
cmp
cmp
pop
pop
jmp
jmp
jmpw
pushl
jb
jbe
jbe
addb
incl
xchg
xchg
lcall
dec
dec
lcall
push
push
mov
add
add
arpl
xor
xor
lock
jo
call
rcl
dec
lret
lret
inc
ret
mov
insb
insb
pushl
xor
pushl
xor
cmp
cmp
inc
inc
inc
incl
inc
incl
inc
incl
inc
incl
inc
decl
dec
call
push
lcall
pop
lcall
jmp
pusha
jmp
jmp
jmpw
pushl
jb
outsl
outsl
outsl
ljmp
insl
incl
xchg
xchg
jl
jl
xor
xor
or
or
add
sbb
add
add
add
add
bound
xor
mov
mov
mov
mov
lods
lods
lods
ljmp
inc
pushl
xor
pushl
xor
cmp
cmp
inc
inc
inc
incl
inc
incl
inc
decl
dec
decl
dec
call
push
call
lcall
pop
lcall
jmp
pusha
jmp
jmp
jmpw
jmpw
pushl
jae
addb
decl
dec
jmp
and
mov
add
add
xor
bound
xor
js
push
call
cmpsl
cmpsl
lcall
jae
jo
dec
cmp
xor
pushl
xor
pushl
aaa
aaa
incl
inc
incl
inc
incl
inc
decl
dec
decl
dec
call
push
call
lcall
pop
lcall
jmp
pusha
jmp
pusha
lcall
pop
jmp
pushl
jb
jbe
jbe
pop
pop
pop
ljmp
cs
add
add
bound
xor
xor
ret
xor
xor
jmp
xor
xor
repz
cs
sub
xor
xor
xor
xor
xor
xor
ss
cmp
inc
inc
incl
inc
decl
dec
decl
dec
call
push
call
lcall
pop
call
push
lcall
pop
jmp
pusha
jmp
jmpw
lcall
pop
pushl
xor
notl
pop
pop
imul
add
add
add
add
xor
pusha
xor
inc
pop
cs
add
add
add
add
add
add
xor
xor
xor
xor
xor
xor
xor
aaa
aaa
cmp
cmp
aas
aas
aas
incl
inc
decl
dec
decl
dec
decl
dec
decl
dec
call
lcall
pop
jmp
pusha
jmp
decl
dec
pushl
xor
negl
sbb
add
add
add
add
xor
xor
xor
lock
cmp
cmp
inc
inc
incl
incl
inc
decl
call
push
call
lcall
pop
call
push
cmp
cmp
das
das
das
loopne
sbb
add
xor
xor
xor
xor
xor
cmp
cmp
inc
inc
incl
inc
incl
inc
incl
inc
pushl
aaa
aaa
pushl
xor
hlt
sub
sub
add
add
xor
xor
xor
xchg
xor
lds
xor
xor
xor
xor
xor
sub
sub
pusha
add
add
incl
add
incl
add
cld
add
incl
add
cld
add
incl
add
cld
add
incl
add
cld
add
incl
add
cld
add
incl
add
clc
add
incl
add
clc
add
incl
add
incl
add
cld
add
add
add
push
add
add
add
jmp
add
add
add
inc
add
add
add
incl
add
incl
add
add
add
incl
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
rolb
add
inc
add
addb
add
inc
add
addb
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
or
add
incl
add
incb
add
add
incl
add
incl
add
jmp
pop
incl
add
incl
add
add
add
add
adc
add
add
sub
add
add
adc
add
add
or
push
add
adc
add
add
add
add
add
and
add
add
add
call
add
and
add
add
add
add
and
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
xchg
ja
jo
add
jo
add
jo
pop
add
aas
clc
pushl
cmpb
pushl
add
jo
mov
jg
jnp
pushl
aas
mov
pushl
add
jg
add
add
pushl
add
add
add
addb
js
add
mov
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
sub
add
and
add
inc
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
ja
ja
ja
jo
add
add
pushl
add
add
pushl
add
add
pushl
add
add
jg
pushl
add
add
jg
pushl
add
add
ja
pushl
add
add
ja
pushl
add
add
js
pushl
add
pop
xorb
jg
ja
pushl
add
ja
mov
jg
ja
clc
pushl
add
add
jnp
jg
xchg
pushl
add
xor
xchg
jo
add
cmp
add
incl
pushl
add
xor
xchg
pushl
add
add
incl
cmp
mov
add
lock
jg
pushl
add
aas
incl
incl
pushl
add
cmp
xchg
jo
add
add
pop
jg
xchg
pushl
add
add
mov
clc
pushl
add
add
jg
pushl
add
add
js
pushl
add
add
decl
jo
add
add
clc
pushl
add
add
incl
add
decl
add
decl
add
decl
add
incl
add
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
cld
add
paddb
add
cld
add
aas
cld
add
jg
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
or
ja
ja
ja
ja
ja
ja
ja
ja
add
add
add
push
add
add
add
or
push
add
add
add
or
push
add
add
add
or
push
add
add
add
or
push
add
add
add
or
push
ja
push
add
add
add
or
pushl
jg
push
add
add
add
or
push
add
push
add
add
add
or
incl
pop
xchg
decl
push
add
add
add
or
push
xor
ja
mov
push
add
add
add
or
incl
xor
clc
ja
push
add
add
add
or
lock
push
add
add
add
or
add
pop
incl
push
add
add
add
or
xor
pop
incl
clc
push
add
add
add
js
aaa
mov
ja
decl
push
add
add
add
cmp
xchg
clc
ja
mov
push
add
add
add
add
clc
ja
push
add
add
xor
cmp
jo
xchg
clc
ja
push
add
add
divl
add
clc
ja
push
add
add
sti
jae
jnp
jo
cmp
ja
push
add
add
divl
xchg
push
add
add
sti
repz
sti
sti
lock
mov
push
add
add
pushl
popl
push
add
add
push
decl
lock
push
add
add
pushl
or
push
add
add
aaa
ja
decl
lock
clc
ja
push
add
add
add
cmp
clc
jg
push
add
add
add
add
sti
lock
clc
jg
mov
push
add
add
add
or
mov
xchg
decl
push
add
add
add
or
jnp
pop
incl
clc
push
add
add
add
or
aaa
mov
push
add
add
add
or
repz
incl
push
add
add
add
or
pushl
jo
clc
jg
push
add
add
add
or
push
jo
js
decl
push
add
add
add
or
pushl
pop
decl
push
add
add
add
or
push
add
clc
add
or
clc
js
add
add
add
clc
push
addb
add
add
or
clc
js
add
add
add
or
clc
push
addb
add
add
add
clc
js
add
add
add
add
clc
testl
or
clc
js
or
clc
addb
add
add
add
add
clc
add
or
mov
mov
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incb
add
add
add
cld
add
add
pop
add
clc
add
add
pop
add
lock
add
pop
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
lock
add
pop
add
clc
add
add
pop
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
adc
add
add
add
sub
add
or
and
add
add
add
call
add
xor
add
add
push
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
or
ja
ja
ja
ja
add
add
add
push
add
add
add
or
push
add
add
add
or
push
pop
jo
add
add
incl
push
pshufw
or
or
push
xor
add
or
incl
pop
js
testl
cltd
or
push
cmp
jo
add
nop
or
incl
mov
clc
push
pshufw
incl
cmp
jg
push
pshufw
lock
testl
add
push
mov
lock
testl
add
push
mov
mov
clc
push
pshufw
add
or
repz
lock
testl
add
pushl
mov
testl
nop
or
cmp
jg
push
pshufw
cltd
cltd
or
push
mov
pshufw
or
cmp
jg
testl
add
push
orb
add
add
incl
push
pshufw
add
or
clc
add
pshufw
add
or
clc
incl
add
or
clc
clc
ud0
add
add
clc
addb
add
clc
jg
add
or
mov
add
add
add
decl
add
add
incl
add
add
mov
mov
incl
add
incl
add
incl
add
sti
addb
stc
addb
rolb
add
add
jg
add
mov
addb
incl
add
stc
addb
rolb
add
add
jg
add
mov
addb
incl
add
incl
add
push
add
push
add
push
add
sub
add
adc
add
and
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
ja
ja
ja
add
pushl
cwtl
push
add
jo
cwtl
incl
xor
jo
or
lock
jo
or
add
or
mov
jg
jnp
jo
cwtl
repz
mov
jo
or
xor
jg
repz
add
jo
or
incl
or
decl
decl
mov
add
add
add
ss
dec
add
add
pusha
add
add
loopne
jb
addb
add
and
pusha
add
mov
add
loopne
je
loopne
add
loopne
and
add
add
add
and
add
add
add
call
add
adc
add
add
sub
add
or
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
or
add
or
add
add
add
add
add
add
add
loopne
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
mov
add
add
xor
cmp
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
and
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
jo
jae
jo
add
add
add
add
xor
xor
sub
add
xor
add
add
add
add
je
add
outsb
add
insb
add
popa
add
add
add
outsl
add
outsb
add
add
arpl
add
js
add
add
add
sub
add
add
insb
add
outsl
add
jns
jb
imul
je
add
test
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
jae
outsb
add
add
arpl
xor
xor
add
js
add
add
add
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
imul
outsl
add
outsl
add
je
scas
add
add
imul
outsl
add
jae
scas
add
add
add
push
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
sbb
add
add
add
xor
xor
xor
xor
xor
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
or
push
add
jne
outsb
add
add
arpl
or
pop
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
dec
add
add
inc
add
add
dec
add
sub
and
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
cmp
add
add
add
add
cmp
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
cmp
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
ss
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
ds
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
ds
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
cmp
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
inc
add
add
and
xor
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
xor
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
outsl
add
add
add
popa
add
add
add
add
add
jae
and
jae
je
jb
imul
xor
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
sub
and
sub
add
popa
add
and
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
push
add
je
dec
add
outsb
add
or
dec
add
outsb
add
jb
dec
add
outsb
add
push
add
popa
add
add
add
pop
add
add
add
add
add
add
add
add
and
add
add
cs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
inc
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
or
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
dec
add
add
inc
add
add
dec
add
add
adc
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
