jmp
push
or
adc
testb
cltd
jg
push
push
and
inc
mov
sub
fisubs
jg
sbb
push
std
dec
and
sahf
call
je
scas
pop
arpl
sub
cmpsl
lcall
test
push
psubsw
rcrb
imul
ret
aad
add
mov
or
call
push
stc
add
mov
div
sti
xchg
data16
fdivp
js
es
pop
decl
mov
push
or
add
inc
les
lret
je
mov
in
or
incl
pop
sub
inc
xchg
js
sbb
enter
lret
icebp
cmpb
inc
mov
jecxz
incl
xchg
outsb
mov
imulb
jl
pop
xchg
pop
int
out
lock
mov
and
pushl
sbb
mov
mov
loopne
and
xchg
inc
aas
sub
mov
jmp
jno
push
jge
mov
push
lahf
xor
xlat
sahf
xchg
or
dec
pop
loope
popl
or
repz
jecxz
add
pop
mov
stos
jae
pop
cltd
adc
push
clc
pusha
pop
add
cltd
mov
push
and
int3
push
xchg
lods
jno
out
xor
adc
pushl
cmpsb
or
mov
adc
cld
into
push
jo
cwtl
cmpsl
dec
jg
es
idiv
call
or
jo
sbb
loope
xchg
add
clc
sbbb
inc
add
mov
adc
jbe
cmp
pop
sbb
or
js
mov
mov
incl
jae
std
fs
loop
push
push
mov
sub
aad
and
adc
or
daa
mov
adcl
or
xchg
push
shrl
lcall
out
aam
ljmp
aaa
cmp
mov
addr16
xor
and
popf
mov
push
repnz
mov
dec
xor
movsb
inc
jmp
xchg
fldl
jecxz
out
mov
ljmp
call
lcall
out
inc
mov
ds
das
mov
andb
mov
clc
movsb
in
cmpsl
push
cmpsl
imul
add
repz
scas
cs
rclb
dec
loopne
xchg
clc
cmp
mov
inc
sahf
cmp
ja
inc
iret
arpl
xchg
and
adc
mov
push
sbb
fistps
das
pop
das
loope
push
rorb
dec
add
hlt
cltd
push
mov
out
mov
jg
ljmp
sahf
sbb
or
xlat
fcoml
enter
mov
cmp
stos
mov
out
lods
scas
daa
jp
push
add
imul
pop
or
or
dec
lcall
out
stc
roll
add
or
adc
ss
mov
int
inc
cmp
sti
mov
mov
popf
jae
mov
adc
outsb
bound
cmc
cmp
out
jg
in
inc
loop
adc
push
mov
mov
stos
out
push
jo
jo
and
inc
cltd
push
cmp
imul
dec
inc
in
push
push
adc
lret
bound
je
mov
and
and
pop
sbb
clc
jl
rol
test
jb
lret
int
fwait
lcall
mov
jmp
dec
and
mov
adc
xor
in
or
ja
mov
jg
addb
aaa
pushf
iret
dec
jecxz
dec
mov
pop
adc
mov
sbb
call
fwait
push
mov
sbb
movsl
aas
rclb
cmp
enter
mov
inc
cmp
adc
ds
lods
pop
mov
rorb
jge
inc
fimull
out
sub
jl
push
jnp
push
out
addr16
xchg
es
pop
das
aas
xchg
jecxz
xchg
push
insl
mov
fstps
and
cmp
ret
incl
or
dec
lahf
in
add
push
pop
lret
jae
xchg
push
jb
fwait
push
pop
gs
ds
daa
pop
out
nop
fsubrl
aad
xor
notl
xor
xor
jg
loop
sbb
into
cwtl
mov
or
je
add
ss
dec
add
jg
or
ds
xchg
push
inc
cmp
aas
jp
scas
std
add
lods
mov
sub
ljmp
lods
xor
bound
sti
mov
cmpsl
add
push
aam
imul
andb
xchg
xchg
xchg
rcr
fcmovb
insl
add
sub
xor
jle
shrb
jmp
dec
lahf
or
sub
out
fsubrl
add
and
xor
inc
aas
movsb
daa
cs
xchg
and
js
andb
int
loopne
call
push
repz
fdivs
push
sbb
loope
outsl
daa
or
inc
xlat
shrb
imul
ljmp
pop
mov
pop
push
pop
jg
sbb
xchg
sti
rorl
dec
and
or
mov
call
incl
into
sahf
dec
pop
idivb
push
insl
aad
loop
dec
out
mov
loopne
incl
or
sti
roll
mov
sbb
lds
int
and
call
push
pop
lods
test
inc
xchg
int3
xor
mov
dec
inc
and
xchg
jo
jl
lds
inc
cltd
add
jb
jbe
out
push
xlat
push
mov
sbb
mov
mov
test
push
or
fdivl
cmp
repz
cmpl
cmp
movsb
out
xchg
ljmp
mov
push
mov
add
dec
fcomps
lods
out
jg
lcall
stos
xchg
inc
pop
cwtl
sub
loope
cmp
fidivl
arpl
fs
sub
decl
lock
out
data16
clc
sbb
and
in
std
ja
dec
hlt
xor
inc
jmp
push
jnp
js
push
sub
cmp
adc
pop
push
loopne
int3
add
test
aad
inc
add
ds
sub
mov
cmc
testl
fidivl
nop
decl
mov
pop
scas
pusha
into
jmp
adc
stos
das
xchg
clc
jg
loop
sti
jb
push
iret
jmp
sti
xchg
pop
inc
or
dec
lea
repnz
pop
imul
jmp
dec
dec
xor
sbbl
adc
add
add
incl
les
sahf
stos
inc
ja
and
cli
scas
mov
jg
bound
mov
cmc
enter
fildll
seto
ror
add
add
shrb
pushl
fmull
leave
jmp
rcrl
xchg
dec
bound
mov
mov
inc
mov
call
hlt
sbb
xlat
sahf
lahf
xchg
sbb
ds
psrld
sbb
cmp
or
add
mov
jnp
mov
push
mov
dec
dec
mov
nop
out
xlat
insl
ljmp
decl
fstpt
and
jmp
xchg
pop
shll
pop
imul
mov
into
inc
adc
mov
dec
mov
xchg
movsb
je
test
imul
mov
hlt
inc
bound
push
ljmp
mov
lock
mov
push
mov
push
mov
xor
in
mov
bound
loopne
in
dec
in
cltd
dec
xchg
sbb
sub
lret
imul
decl
ljmp
sbb
movsb
jle
movsb
or
lods
push
and
popf
or
jg
incl
cli
dec
xor
cmp
sbb
mov
or
imul
enter
vshufps
adc
push
cmc
pop
mov
sbbl
jns
jmp
dec
sbb
pop
xorl
mov
test
idivl
ss
test
lret
cmc
jae
js
lcall
aam
gs
mov
adc
xchg
inc
push
andl
mov
jle
call
jno
mulb
add
jge
or
test
mov
inc
rcr
jns
and
sbbl
cmp
std
scas
ljmp
or
sbb
adc
xchg
ljmp
mov
sbb
lret
out
jecxz
xchg
xor
xchg
inc
movsl
leavew
dec
xor
std
jmp
insl
sbb
das
ss
outsb
sbb
js
sti
jl
pop
outsb
mov
stos
test
sub
shl
sarl
sub
push
lock
inc
and
inc
add
rcrb
inc
sbb
jmp
jb
and
push
push
xchg
lds
mov
loop
cli
mov
cmp
xchg
push
dec
addr16
sarb
mov
lret
sbb
filds
jbe
call
lcall
add
outsb
sbb
pmullw
xchg
sub
mov
sub
mov
dec
loopne
dec
mov
aad
push
add
xor
sub
sbb
fucomip
jmp
inc
add
fldt
ret
mov
mov
push
or
mov
call
clc
sub
mov
test
pop
lcall
int
mov
mov
pop
mov
dec
dec
fcmovnu
out
cmp
push
add
push
xor
fnstenv
mov
xor
dec
in
dec
dec
mov
imul
jmp
inc
cmp
mov
dec
ror
sti
mov
bnd
dec
adc
jle
inc
dec
or
out
je
addr16
ss
scas
lds
adcb
fcmovu
fildll
xor
shlb
cmc
ret
inc
mov
pop
cmp
fstpl
jne
adc
popa
pusha
mov
inc
loopne
ret
push
push
stos
sbb
js
mov
add
mov
pop
lock
andb
jmp
mov
jmp
popa
gs
cmp
adc
mov
out
mov
xchg
and
add
scas
pop
mov
inc
add
mov
fldcw
or
add
mov
mov
push
sub
add
and
pop
shrb
leave
cmp
sub
jo
jne
mov
xchg
and
ret
jmp
sub
xor
adc
add
and
and
add
sub
sub
and
adc
xchg
adc
insb
insl
fdivr
pushl
pop
push
pop
scas
fcomps
scas
outsb
xchg
pop
or
pop
cmp
xchg
lcall
mov
or
xor
jmp
mov
pop
mov
fildl
arpl
es
in
inc
cwtl
or
cs
push
cmp
out
jmp
mov
and
pop
jg
adc
out
test
jecxz
or
add
rorl
cltd
push
out
add
xchg
subb
mov
loop
adc
shl
je
pusha
jmp
mov
mov
rcll
xchg
sub
rcr
incl
shlb
inc
or
fcompl
fidivrl
xchg
sub
call
les
xchg
fstpl
mov
inc
xor
sub
xchg
test
mov
cmpsb
jmp
pop
js
or
pushf
out
js
js
xor
mov
inc
fdivs
push
dec
jae
clc
popa
loope
addr16
push
pop
add
or
pop
and
inc
or
leave
inc
and
mov
fisttps
cmp
fucomp
sti
fidivs
or
or
adc
or
std
or
stc
xor
cmpsb
int
or
xor
and
scas
divl
jbe
cltd
dec
xor
testl
imul
push
mov
pop
mov
scas
loopne
clc
pop
and
jb
imul
dec
mov
cmp
xorl
pop
flds
imul
xor
daa
mov
push
call
incl
add
push
ret
mull
jle
sub
fwait
roll
subl
in
popf
shlb
sbb
lods
mov
fld
aas
mov
add
nop
inc
add
add
subl
push
xor
inc
cmp
xchg
add
inc
add
sbbl
push
stos
incl
jmp
xor
xorl
inc
inc
and
add
or
xchg
addl
decl
add
add
test
inc
add
sub
mov
add
adc
sub
mov
test
push
add
mov
decl
negb
dec
pusha
xchg
cmp
stos
jmp
jbe
js
lcall
orl
xchg
lret
cmp
and
sub
imul
incl
int
sub
addl
pop
xor
sub
jo
insl
pop
ja
pop
and
jl
ljmp
rcrl
xchg
mov
aaa
aaa
loop
or
jge
test
jge
jb
nop
in
mov
fcoml
je
jnp
mov
movsb
inc
xchg
pop
es
mov
push
ds
xchg
jmp
mov
mov
inc
adc
pcmpgtw
jbe
mov
je
ljmp
jp
mov
cs
or
fucom
loop
in
mov
sahf
pop
outsb
xchg
mov
push
bound
push
les
mov
in
push
xchg
lea
add
ljmp
ja
stos
and
xor
cmp
cmp
rcll
cmp
lods
pop
adc
mov
sub
xor
jecxz
fildl
mov
loop
repz
movsl
addr16
sub
sahf
ss
mov
and
popf
ljmp
inc
mov
mov
cs
and
ljmp
lods
pop
es
lock
inc
push
push
mov
cwtl
push
cltd
mov
mov
incl
add
insl
mov
xor
in
fisttpl
sahf
sub
mov
stos
sbb
fnstcw
mov
in
xor
or
sqrtps
mov
jne
and
dec
aaa
leave
sub
fists
stos
mov
inc
fld
addr16
push
dec
pushf
cmp
jo
inc
shr
sub
decl
xor
fnstenv
call
inc
push
dec
jl
or
mov
imul
pop
movsl
insl
loop
lods
jg
movsb
popf
add
test
sbb
cmc
rolb
jg
sub
mov
adc
nop
repz
test
pushl
cmp
jo
cmp
xor
fldl
sub
mov
lcall
mov
test
dec
sar
lock
and
ljmp
xorb
add
lahf
cwtl
push
and
je
add
mov
shll
stos
xchg
jne
pushl
ret
jecxz
outsl
sti
push
cmp
aas
sbbl
pop
insb
pop
inc
cmpsb
fildll
push
pop
xor
pop
push
add
or
inc
add
or
call
adc
and
test
pop
adc
inc
and
or
add
mov
pop
or
and
test
pusha
xor
fcomps
jmp
and
lcall
ss
out
ss
inc
xor
jb
mov
mov
imul
push
add
nop
mov
mov
mov
jae
cmc
sti
dec
lahf
mov
push
lods
push
lret
cli
jbe
push
xor
test
test
aaa
or
jmp
push
or
jne
fs
cmp
mov
cmpsb
pop
popa
repz
add
cmc
scas
inc
in
push
inc
ds
mov
gs
mov
pop
gs
data16
sar
jg
inc
leave
adc
outsb
xchg
mov
idivb
push
inc
clc
lea
fistps
popa
lret
add
lea
outsb
mov
pop
jno
cmpsb
xchg
mov
mov
xchg
movl
into
inc
ljmp
add
mov
dec
push
cmpsb
data16
sub
popf
jo
lock
dec
testb
sbb
add
into
insb
add
jge
mov
pusha
insl
push
mov
sti
mov
loope
push
mov
test
mov
cs
repz
insb
and
lods
jecxz
or
insb
lcall
pop
out
push
cld
sarl
pop
push
sahf
lahf
lea
pop
mov
mov
sbb
ja
scas
push
imul
bound
sti
incl
mov
pop
dec
or
push
lret
cmp
into
call
add
pop
imul
pop
jbe
stos
pop
jo
movsb
jbe
mov
dec
negl
int3
lds
mov
mov
dec
inc
pop
sbb
jmp
leave
sti
mov
outsb
push
push
loope
pop
aaa
or
pop
popa
dec
movsb
sti
imul
clc
out
push
into
jno
test
pop
push
push
loopne
fldt
sti
popa
mov
mov
test
incl
mov
popa
pop
movsl
pop
inc
inc
movsb
push
push
jl
arpl
mov
mov
rcl
pop
daa
dec
mov
dec
inc
push
stc
out
dec
dec
test
dec
inc
sti
fists
dec
pop
pop
push
jbe
jae
jne
add
mov
cwtl
out
sbb
dec
popa
dec
mov
inc
mov
jmp
inc
pop
mov
aas
ss
xor
js
pop
out
pop
out
xor
push
ja
sti
cwtl
mov
push
sahf
outsl
ds
mov
mov
lcall
push
cld
fdivrp
xor
add
mov
xchg
sbb
fbstp
fildl
add
scas
stc
leave
pop
add
mov
mov
push
xorl
insb
out
daa
add
jl
sti
or
pop
push
or
decl
out
inc
repnz
sti
push
ss
lock
lea
xchg
loopne
add
ss
push
leave
out
jmp
std
fisttps
out
jecxz
fadds
callw
rcrl
xor
dec
add
rclb
sbb
insl
out
cmp
xor
fiadds
and
push
push
into
and
xor
lcall
insb
imul
test
mov
pop
dec
ds
push
insl
sub
fiaddl
mov
ret
inc
imul
xor
or
mov
iret
dec
in
jno
inc
jae
inc
jle
add
push
dec
cmp
dec
stc
inc
jg
aaa
insl
push
ret
dec
mov
pop
xor
mov
iret
mov
jns
sahf
pop
push
in
xchg
pop
aaa
sahf
and
xor
xor
call
roll
dec
rclb
push
inc
loop
clc
xchg
mov
inc
cmc
pop
ljmp
lahf
adc
scas
or
jo
inc
jle
cmp
jmp
inc
hlt
lds
mov
out
mov
ror
mov
aam
and
out
movsb
addl
mov
mov
jno
push
lret
ja
mov
dec
out
arpl
int3
push
add
leave
mov
sub
inc
pop
pop
push
mov
or
out
pop
rorl
pop
aad
and
sub
jmp
fucomip
ss
xor
add
enter
sti
jbe
jle
arpl
sysenter
repz
add
mov
push
ljmp
mov
jne
add
inc
or
jnp
cmc
ret
or
mov
addb
lea
or
hlt
sub
xchg
ss
ss
jg
ja
es
test
fs
in
pop
ds
out
mov
mov
dec
aam
mov
dec
out
je
les
fwait
sub
leave
aam
test
lea
pusha
clc
in
jae
outsl
push
les
sti
xchg
inc
xor
inc
dec
call
or
pop
imul
aas
ss
cli
cmp
aas
xor
mov
fimull
push
push
aam
xor
shl
mov
cs
notb
int3
outsl
idiv
incl
es
sarl
jbe
bnd
and
mov
inc
and
outsb
mov
inc
mov
mov
push
sbb
arpl
data16
or
mov
mov
cld
lods
dec
cs
in
mov
pop
into
sub
inc
shrl
pop
push
cmp
js
aas
inc
lahf
mov
sarl
push
push
mov
jo
call
or
push
mov
jae
mov
test
pop
push
inc
cmp
icebp
inc
push
xor
push
xor
add
std
push
mov
ret
imul
cs
cmc
pop
test
inc
jo,pn
xchg
mov
ljmp
push
push
adc
pop
rclb
cmp
adc
fnstcw
cmp
incl
inc
pop
jge
or
or
jbe
inc
dec
jbe
inc
imul
jne
call
jne
imul
dec
xor
push
push
imul
inc
push
jne
adc
xor
jg
decl
dec
inc
dec
outsl
jno
inc
push
insb
inc
push
inc
push
data16
je
jg
push
inc
addb
imul
push
dec
ja
pop
pop
push
xor
decl
sub
push
xor
aaa
inc
push
push
jp
insl
push
outsl
jae
bound
outsb
imul
std
ljmp
aaa
dec
inc
fs
dec
push
push
push
push
addr16
push
push
imul
jp
jns
std
mov
push
inc
xor
push
aaa
inc
jae
jbe
je
dec
jp
ret
addr16
call
inc
jne
xor
inc
inc
dec
cmp
inc
inc
xor
dec
je
dec
gs
je
dec
dec
xor
call
pop
jae
dec
inc
popa
pop
xor
pushf
push
push
sbb
bound
jns
outsb
sbb
imul
inc
inc
ss
push
pop
dec
dec
ja
dec
jb
jb
inc
xor
int
ljmp
outsb
push
outsb
jns
ficoml
xor
xchg
loope
jg
pop
dec
inc
inc
pop
dec
pop
dec
xor
pop
je
jp
inc
push
ss
jns
popa
xor
es
mov
push
inc
dec
xor
push
or
cmp
cmp
mov
jp
imul
dec
jno
push
push
and
arpl
xor
jns
inc
jns
jne
push
push
xchg
data16
je
jae
push
push
adc
jns
dec
js
outsb
data16
push
xor
das
adc
ret
push
gs
inc
inc
push
jo
add
adc
push
xchg
mov
fildll
add
fwait
add
js
xchg
cmpsb
imul
dec
lcall
pop
jno
fcom
lret
add
movsb
jns
int
int3
xlat
loopne
or
jbe
mov
cmp
or
adc
nop
int
jns
sbb
add
lcall
or
test
mov
fwait
xor
in
ss
pop
fistpll
incl
inc
cmp
and
ja
inc
sub
outsb
sbb
jbe
push
mov
adc
and
sbb
adc
fcomi
or
sbb
sbb
jbe
dec
insb
iret
lahf
xor
inc
mov
lods
aad
fwait
in
imul
mov
jle
xor
loop
fcomi
dec
sti
loopne
inc
xor
ret
xchg
dec
dec
mov
jnp
fldt
jbe,pt
pop
subl
cmpsb
pushl
cmp
xchg
push
xchg
adc
lcall
push
std
out
jg
ljmp
jp
daa
out
dec
test
dec
push
popf
inc
test
pop
jnp,pt
fbstp
pop
js
rolb
pop
sti
jbe
adc
cs
adc
sbb
mov
sub
rcrl
add
aas
lds
inc
fisttpll
inc
push
sbb
adc
cmpsl
dec
jo
xor
xor
cs
pop
sub
loope
jbe
pop
xchg
loop
xlat
inc
fiadds
enter
xbegin
ret
div
pop
jbe
pop
test
outsl
mov
insl
fildll
cmp
outsl
and
pushf
popa
or
adc
es
jb
push
pop
xor
addl
sub
aas
leave
mov
sub
flds
push
mov
xchg
jo
fwait
int
mov
sarl
add
mov
fldcw
nop
mov
pop
jmp
pushl
jns
test
xor
test
jbe
je
insb
pop
sub
sti
fiaddl
das
jge
insb
cld
mov
ds
jmp
call
ss
divl
out
into
loope
jbe
push
jae
loop
pop
mov
icebp
dec
push
scas
ds
mov
mul
jne
lds
in
imul
lock
or
or
pop
imul
gs
xor
cs
pushl
pop
inc
sbb
gs
jb
je
arpl
push
arpl
outsl
lods
jge
mov
popa
jbe
add
pop
jb
jg
in
pop
dec
outsb
and
imul
jne
mov
outsl
and
gs
outsl
arpl
or
mov
xor
push
xchg
mov
inc
outsl
jne
pop
push
jne
jns
push
outsw
jb
popa
outsb
neg
int3
fisubs
xor
push
adc
sbb
mov
jb
cmp
popa
fs
fs
xlat
or
out
push
mov
fs
push
lods
fldenv
adc
dec
add
pop
push
imul
dec
jne
mov
or
sub
sub
sub
mov
je
mov
pop
arpl
sbb
mov
dec
imul
inc
push
fidivs
and
popa
divb
popf
adc
and
cmp
fs
pop
ret
imulb
jae
dec
outsl
fs
gs
push
or
fsubr
shll
imul
mov
sub
es
inc
push
push
xchg
mov
insl
mov
pusha
icebp
imul
sbb
bound
jae
push
or
mov
xor
jnp
push
idiv
push
push
outsb
push
fnstcw
cmp
xor
out
dec
mov
ss
push
outsl
xchg
and
dec
data16
loopne
std
add
insb
xorb
cmp
or
xor
imul
fisubrl
pop
push
adc
mov
push
bound
inc
shl
aam
pop
and
jb
sub
shrb
push
gs
pop
jb
jae
outsb
sbbl
jae
fdivl
addr16
outsl
mov
dec
gs
push
inc
clc
icebp
pusha
jnp
popa
jo
jae
jg
scas
mov
jecxz
dec
movsb
outsb
mov
and
adc
add
popa
jne
data16
mov
jg
jns
sbb
pop
lret
insb
mulb
and
and
stos
push
lret
push
or
or
inc
out
pusha
jno
mov
push
mov
pop
inc
push
sub
lcall
inc
shr
dec
bound
repz
or
cmpsb
sub
sbb
scas
mov
xor
xlat
jbe
jne
fldl2e
out
mov
repz
stos
roll
adc
sub
fstps
mov
rclb
xchg
test
fisttpll
repz
add
outsl
sti
lods
push
insb
cwtl
loopne
inc
inc
insb
push
sbb
mov
jne
adc
ja
roll
jo
jae
shrb
inc
rcrb
imull
shrb
daa
push
notl
mov
sbb
ret
fstpl
adc
out
pop
or
inc
xor
xchg
das
xor
loop
les
inc
jo
loop
mov
pop
adc
mov
nop
mov
add
jecxz
push
add
lock
imul
es
push
pusha
out
ss
xor
pushf
add
shlb
push
in
ret
data16
xor
ja
in
jmp
imul
fistpl
rcrb
movsl
sub
jecxz
int3
neg
icebp
pusha
jno
pop
push
ret
or
jo
xorl
xchg
sbb
fdivrs
ret
gs
js
jo
addr16
dec
lock
jecxz
pushf
movsl
movsl
fildll
inc
inc
cmpsl
fldt
fcoms
xchg
adc
daa
mov
and
dec
xorl
ja
and
shl
push
or
jne
cltd
dec
push
in
out
mov
dec
arpl
xor
xchg
sbb
enter
fldl
inc
lret
xlat
lods
and
inc
mov
fimuls
inc
mov
adc
push
and
adcb
adc
mov
add
adc
adc
nop
inc
or
push
mov
push
inc
subl
inc
add
fs
add
nop
sbb
or
xor
mov
adc
shlb
or
or
add
add
adc
nop
inc
add
add
add
nop
push
add
add
add
or
sub
sub
test
pop
add
xorl
and
sbb
push
subl
inc
add
adc
adc
nop
inc
add
add
add
and
add
fs
add
nop
push
add
test
mov
nop
inc
push
adc
mov
sub
add
inc
push
and
test
incl
adc
sub
test
pop
add
add
adc
enter
nop
inc
add
add
mov
add
or
adc
sub
mov
add
adc
adc
nop
inc
add
add
subl
inc
add
add
inc
leave
orb
add
scas
test
test
or
mov
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
mov
add
adc
stos
push
or
adc
testb
cltd
jg
push
push
and
inc
mov
sub
fisubs
jg
sbb
std
dec
and
sahf
call
push
je
scas
pop
arpl
sub
cmpsl
lcall
test
icebp
psubsw
rcrb
imul
lcall
xchg
mov
mov
mov
push
or
adc
push
stc
add
mov
incl
xchg
data16
fdivp
js
es
pop
dec
and
push
or
add
fildl
inc
in
lret
je
mov
in
or
sub
inc
xchg
js
sbb
enter
fsubrl
push
icebp
cmpb
inc
mov
jecxz
lock
xchg
outsb
mov
imulb
jl
lcall
pop
int
out
lock
mov
and
xor
sbb
mov
xor
shl
cs
xchg
inc
aas
sub
mov
jno
push
jge
mov
ljmp
mov
mov
adc
xchg
or
lret
inc
popl
or
repz
jecxz
incl
scas
xor
adc
jae
pop
cltd
adc
pusha
pop
add
cltd
mov
push
jmp
out
int3
push
xchg
lods
jno
out
xor
adc
cmpsb
or
mov
adc
cld
into
push
jo
cwtl
cmpsl
dec
jg
es
xchg
and
mov
gs
ljmp
fistpl
test
sbbb
roll
mov
adc
jbe
cmp
pop
sbb
or
js
mov
mov
add
std
fs
loop
push
push
mov
ljmp
sub
aad
and
adc
or
daa
mov
adcl
or
lcall
xchg
push
shrl
lcall
out
aam
sahf
aaa
cmp
mov
decl
sub
xor
and
popf
mov
push
repnz
mov
loopne
pop
cmp
cmp
inc
jecxz
out
mov
ljmp
call
jg
out
inc
mov
ds
pushl
jbe
jle
andb
mov
clc
movsb
in
cmpsl
push
cmpsl
imul
add
push
je
scas
cs
rclb
dec
loopne
xchg
clc
cmp
mov
inc
sahf
cmp
ja
inc
in
dec
arpl
xchg
and
adc
mov
push
sbb
das
pop
das
loope
push
rorb
pop
std
decl
lret
add
cltd
push
mov
out
mov
and
dec
sahf
sbb
or
xlat
fcoml
enter
mov
cmp
test
daa
jp
call
shrb
xchg
adc
pop
or
or
dec
pop
pusha
out
stc
roll
add
incl
or
adc
ss
mov
int
inc
cmp
mov
mov
popf
jae
mov
pushl
mov
adc
outsb
bound
cmc
cmp
out
mov
inc
loop
adc
call
lock
and
xchg
stos
out
push
jo
jo
and
fisubrl
cmp
scas
push
jg
decl
in
push
push
adc
lret
bound
je
mov
aad
in
pop
sbb
inc
xchg
clc
jl
rol
test
jb
lret
int
fwait
popf
movsb
aaa
dec
sub
xor
lds
jmp
decl
sbb
cmc
pop
cli
mov
adc
xor
in
or
mov
jg
addb
aaa
jg
lcall
mov
pop
adc
mov
sbb
daa
leave
iret
repnz
fwait
push
mov
sbb
pushl
movsl
aas
rclb
cmp
enter
mov
inc
cmp
lods
pop
mov
sar
decl
jge
inc
fimull
out
sub
jl
push
jnp
out
addr16
xchg
es
pop
ljmp
aas
xchg
jecxz
xchg
push
insl
mov
fstps
and
cmp
ret
or
dec
lahf
in
add
lcall
xor
lret
jae
xchg
push
pop
gs
ds
daa
aaa
cld
lcall
fsubrl
aad
xor
notl
xor
xor
loop
sbb
ljmp
mov
add
ss
dec
add
ds
xchg
pushl
push
inc
cmp
aas
jp
scas
std
add
lods
mov
sub
lods
xor
bound
sti
mov
jmp
movsb
mov
aam
imul
andb
fcmovu
shrl
sub
das
cli
aaa
std
xor
jle
shrb
int3
dec
popa
dec
lahf
decl
sub
out
fsubrl
add
and
movsb
daa
cs
xchg
and
out
cld
fwait
js
andb
int
loopne
call
push
repz
mov
fidivrl
loope,pt
ljmp
or
inc
xlat
shrb
imul
cs
mov
pop
push
pop
jg
sbb
call
rorl
dec
and
or
mov
call
into
sahf
dec
pop
idivb
pop
cmc
pushl
push
insl
aad
loop
dec
out
mov
loopne
add
or
sti
roll
decl
cli
sbb
lds
int
and
push
pop
lods
test
inc
xchg
call
xor
mov
dec
inc
and
xchg
jo
jl
lds
mov
jbe
out
ljmp
ljmp
xlat
push
mov
sbb
mov
std
or
test
push
or
lcall
mov
cmp
repz
cmpl
cmp
movsb
out
xchg
lods
aam
repz
mov
push
pushl
sbb
fimull
dec
fcomps
lods
out
sbb
stos
xchg
inc
pop
cwtl
sub
call
loope
cmp
fidivl
arpl
fs
sub
or
data16
clc
sbb
and
mov
gs
hlt
xor
push
jnp
js
push
sub
cmp
lcall
adc
pop
push
loopne
int3
add
test
add
ds
sub
jp
xchg
test
cmc
testl
fidivl
nop
dec
std
mov
pop
scas
pusha
into
jmp
pushl
adc
stos
das
xchg
clc
jg
loop
sti
jb
push
iret
addr16
sti
xchg
pop
inc
or
pushl
dec
lea
repnz
pop
imul
icebp
dec
std
cmp
dec
xor
sbbl
xor
ret
adc
add
add
xchg
push
sbb
das
pushl
lcall
and
cli
scas
mov
bound
mov
cmc
enter
incl
pop
fildll
seto
ror
add
add
shrb
fmull
leave
jmp
rcrl
xchg
dec
bound
mov
mov
inc
mov
sbb
xlat
lcall
sahf
lahf
xchg
sbb
ds
psrld
sbb
inc
orl
add
mov
jnp
mov
pushl
push
mov
dec
dec
mov
nop
out
xlat
insl
ljmp
jle
and
jmp
xchg
pop
call
mov
mov
outsl
xchg
cmp
mov
into
inc
adc
je
mov
xchg
movsb
je
ljmp
push
mov
hlt
inc
bound
push
das
mov
lock
mov
push
mov
call
ret
xor
in
mov
bound
dec
in
cltd
dec
xchg
sbb
sub
fs
pop
mov
imul
out
push
pop
fstpl
cmp
mov
sbb
jae
popf
or
jg
inc
cmpsl
cli
dec
xor
cmp
pushl
push
push
pop
or
imul
enter
lret
add
cmc
pop
call
xchg
aam
cmpl
gs
clc
pop
push
pop
xorl
decl
mov
test
idivl
ss
test
lret
cmc
jae
js
aam
gs
mov
adc
mov
repnz
sbb
xor
jle
pop
jno
mulb
add
jge
or
incl
mov
fnstsw
and
cmpl
std
scas
ljmp
or
std
jo
xor
popf
cmp
sbb
loopne
sbb
lret
ljmp
and
movsl
leavew
dec
xor
inc
insl
sbb
das
ss
outsb
sbb
call
sti
jl
pop
outsb
mov
stos
test
sarl
sub
call
les
inc
and
inc
inc
push
sub
jb
and
pop
sbb
jmp
out
lcall
sti
popa
pop
enter
or
int3
in
arpl
sbb
aam
out
sub
and
ljmp
nop
adcl
adc
adc
mov
push
das
ret
xchg
mov
inc
daa
pop
stos
popf
fabs
and
js
pop
lret
mov
dec
shll
dec
movsb
int3
push
mov
dec
sbb
fistps
ljmp
adc
inc
loop
mov
xchg
inc
es
scas
jnp
jmp
jmp
and
out
xor
mov
cli
mov
rorb
loope
mov
inc
dec
sbb
sub
div
divl
ljmp
and
roll
mov
or
sub
pop
dec
mov
sbb
pushl
iret
xor
int
jnp
dec
repnz
icebp
out
pusha
aaa
mov
decl
push
stc
pop
inc
js
push
pop
inc
push
lret
add
imulb
nop
sbb
jmp
xor
cmp
insl
xchg
pop
pop
sub
push
daa
xchg
leave
mov
dec
mov
mov
clc
sub
add
cmp
or
rolb
xchg
lock
jle
sti
lods
or
and
lcall
push
ljmp
fists
shlb
push
fcomp
jl
push
inc
aad
ljmp
mov
andl
push
mov
mov
rcrb
into
push
decl
sub
adc
lods
add
arpl
orb
adc
ljmp
rorb
movsb
imul
movsb
pushl
stc
add
mov
stos
xchg
sahf
shr
imul
sbb
pop
rorb
push
dec
les
iret
xor
popa
leave
mov
lret
pop
sti
movsb
fldlg2
cmp
sub
pop
push
pushl
fldpi
ss
fstps
into
insl
xor
loope,pt
ljmp
loope
scas
lea
mov
decl
enter
jl
pop
mov
or
imul
mov
or
or
mov
lret
dec
subl
imul
mov
fnstcw
lcall
sub
popa
cmp
movsb
xor
test
push
adc
shrb
sub
gs
jmp
jle
cli
add
popa
xor
sahf
cmpsl
pop
sub
call
test
sahf
xchg
pushf
cmp
cmc
sub
in
outsb
mov
repnz
movsl
movsl
or
decl
sub
xor
dec
jae
cld
cs
push
cmpsl
push
mov
daa
push
popa
lods
clc
or
mov
mov
push
aas
xor
ljmp
daa
les
cmp
jg
loopne
ljmp
xchg
push
jl
push
jmp
leave
je
mov
jmp
daa
mov
pushl
xchg
ret
mov
adc
and
fistps
or
out
movsl
sub
add
sub
decl
loopne
sbb
aas
jecxz
out
movsb
mov
mov
into
jbe
pusha
test
decl
sub
or
test
inc
mov
arpl
rcrb
shlb
pop
mov
call
imul
pop
xor
jb
divb
inc
add
call
decl
outsb
pop
mov
push
sbb
and
shl
aad
adc
es
mov
mov
fcoml
xchg
dec
out
xor
mov
sub
ljmp
ja
push
jle
hlt
add
js
movsl
jmp
pop
xor
std
fildl
jno
xor
inc
mov
js
lock
xor
loope
ljmp
or
dec
cmp
lsl
dec
mov
js
inc
mov
cmp
leave
sub
fs
frstor
mov
adc
mov
lret
inc
add
mov
jmp
mov
je
fsubr
into
icebp
fidivs
xor
xor
and
js
mov
in
cld
aas
and
fimull
pop
fstp
add
lds
inc
pop
je
or
pop
pop
cli
pop
jbe
out
cli
mull
sbb
test
inc
xor
decl
sub
xchg
jp
std
add
cli
pop
inc
xor
fdivl
cmpsl
bound
ljmp
xor
mov
inc
adc
cmp
aad
into
sbb
sub
aas
ss
jae
sbb
ret
mov
dec
out
and
lahf
loop
clc
lock
push
jmp
shll
xor
call
lcall
lds
adc
dec
jg
stc
divb
popa
add
add
hlt
out
bound
enter
insb
adc
lcall
adc
es
cmc
jne
jae
popf
in
out
call
jne
dec
test
pop
adcl
lcall
in
pop
je
jb
loope
es
out
push
cmp
sub
adc
call
push
shll
mov
mov
cmc
shrb
outsl
mov
mov
hlt
int3
pop
imul
xchg
or
sub
out
xchg
shr
xor
mov
scas
std
adc
mov
push
ljmp
or
sti
push
pop
jl
test
and
cmpsb
mov
lcall
arpl
sti
jno
lret
cmp
mov
gs
dec
ljmp
sarb
xchg
js
jae
pusha
aas
test
rol
mov
decl
mov
xchg
lcall
mov
adc
sub
imul
pop
mov
call
pop
dec
movl
push
das
inc
push
mov
mov
daa
xor
movsb
movsb
movsl
or
jae
sbb
hlt
pop
mov
repz
push
push
cmp
ss
pop
sub
jle
and
xor
sbbl
push
and
mov
push
mov
cmp
and
push
mov
imul
mov
jne
out
imul
xchg
leave
mov
aas
cmp
pop
fdivrl
gs
roll
call
ja
icebp
bound
fsubrl
addb
enter
fdivrs
das
pop
push
hlt
push
adc
adcb
inc
enter
movsb
sarl
and
popf
ja
add
xchg
xchg
pop
ret
or
scas
incl
sub
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
leave
and
inc
mov
mov
inc
add
dec
aas
stos
sub
mov
add
add
xor
dec
decl
add
in
xor
inc
mov
add
mov
test
pop
add
add
add
imulb
or
xorl
jb
adc
addb
std
in
testb
add
jo
incb
pop
rolb
sbb
jg
fstpt
add
adcl
mov
roll
adcl
aas
sar
in
mov
mov
js
adcb
xchg
sbb
je
in
mov
push
jge
lcall
inc
sub
xor
sub
pusha
shll
je
rorb
rclb
cld
inc
cmp
rolb
rorb
lds
mov
insb
nop
arpl
jmp
pop
shrb
or
data16
or
or
add
sbb
and
adc
add
or
es
xchg
pop
out
movsl
pusha
sub
jae
pusha
jns
cmpsb
imul
or
in
pusha
cmp
add
xor
imul
add
pop
jl
leave
dec
imul
insl
add
dec
mov
sub
push
and
cmc
pusha
test
fstpl
lds
pusha
or
popa
push
pop
fs
cmp
mov
roll
lahf
mov
push
std
gs
jne
subb
mov
mov
movsb
xchg
mov
es
iret
fstpt
sbb
push
pminub
pop
cmp
jo
gs
push
pop
push
ja
imul
add
add
push
push
xlat
sahf
cmpl
xchg
add
sbb
in
imul
push
adc
dec
rcrl
flds
mov
lahf
idivl
inc
jns
or
push
push
add
loopne
aad
imul
sbb
sahf
jno
add
aas
das
sub
pop
pop
mov
push
pusha
pop
push
int
mov
jl
ja
push
pusha
fucomip
imull
ds
addr16
mov
seta
mull
out
jmp
ss
add
iret
int
lock
push
cltd
mov
test
jle
adc
popa
sbb
loop
out
push
pop
jg
scas
mov
sbb
sbb
mov
testl
pop
adc
daa
sbb
dec
arpl
imul
and
ss
repz
rcll
bound
out
pop
pop
mov
adc
and
aas
or
aad
inc
mulb
mov
add
negb
mov
jg
mov
popa
add
inc
pop
popa
add
sahf
inc
mov
add
hlt
jo
test
sub
jo
ficomps
fdivrs
push
pop
sbb
ja
mov
dec
push
lahf
cwtl
or
fs
xchg
loopne
jae
lret
xor
xor
inc
pusha
pop
pop
add
fbstp
push
jne
daa
sbbl
adc
jmp
jecxz
popa
loopne
push
sbb
jbe
divl
jne
out
jo
or
add
push
fcmovbe
mov
push
scas
add
sbb
outsb
pop
sti
addr16
push
jo
jecxz
out
add
or
cmpsb
jns
ficoms
bound
pop
xchg
repnz
jo
outsl
jp
or
mov
dec
inc
add
adc
push
fstps
jl
outsb
add
push
cmp
mov
xchg
stos
mov
sub
sbb
icebp
jl
add
sbb
fisubs
xor
int
in
xor
idivl
ret
jo
mov
mov
adc
imul
stos
rcrl
sbbb
and
lock
sub
sub
jnp
pop
sarl
stos
or
dec
and
nop
dec
sbb
mov
loope
jbe
add
mov
jmp
cmp
dec
mov
sub
or
jo
fstpl
pop
sbb
add
dec
add
add
ds
add
lods
jg
and
add
jl
mov
xorb
lock
xor
sub
in
push
repnz
mov
stos
sbb
sahf
cmpsb
pusha
or
popa
pop
push
ret
vminpd
cmp
sub
sub
jo
or
outsl
jo
jno
or
pop
daa
xchg
pop
pop
inc
add
add
xor
leave
enter
decl
mov
cwtl
ds
push
test
pop
xor
incl
cld
scas
vmovsd
jbe
cld
pop
pop
loop
pop
cmp
inc
inc
ljmp
pushf
dec
pop
ja
das
mov
testl
cmp
xor
in
fiaddl
push
sbb
lcall
repnz
add
aaa
insb
dec
inc
xchg
lahf
add
push
jle
mov
outsb
fadds
cmp
jmp
or
aam
cmp
dec
inc
jno
int3
or
jne
aaa
cld
cmp
daa
fldl
jo
pop
call
add
push
enter
scas
mov
inc
jns
push
add
dec
sub
mov
jbe
xchg
imul
gs
lea
jo
jae
fbstp
and
imul
pop
loopne
aaa
arpl
nop
outsb
or
or
adc
jb
xlat
or
and
popf
add
jmp
add
incb
mov
add
jg
add
clc
test
mov
scas
push
adc
mov
testb
xlat
orb
pusha
push
push
sarb
clc
js
jo
add
shll
lcall
push
jp
push
pop
mov
add
push
notl
fnsave
sub
sbb
or
add
in
add
adc
loopne
mov
inc
adc
mov
ja
lds
sub
filds
std
add
mov
cmp
jp
into
xor
jecxz
push
cld
lret
pop
mov
sub
add
jbe
inc
or
xor
test
decl
shr
or
push
pop
lock
pusha
lock
xchg
push
icebp
add
adc
mov
or
fimull
cmpsb
pop
dec
sbb
nop
add
in
js
insb
js
cmp
pop
adc
push
push
sub
push
dec
lock
imul
jecxz
sub
rcrl
push
and
test
fstpl
roll
xor
add
push
sbbb
rcr
sbbb
dec
cmp
lock
lods
imul
mov
cmpsb
xor
xchg
stos
push
adc
lock
mov
pop
and
jb
les
or
cmpsb
imul
pop
rcrl
pop
sbb
xchg
dec
jo
sbb
lods
imul
cmpsl
dec
shrl
mov
mov
dec
fs
xor
xor
push
add
mov
cmp
int3
sbb
aad
shlw
dec
lods
push
stos
xchg
pop
imul
or
pop
xor
pushf
dec
arpl
jle
sahf
cmpsb
imul
inc
cmpsb
insl
lods
mov
mov
dec
xchg
lahf
push
repnz
push
adc
lock
jno
push
xor
ret
icebp
or
shll
pusha
mov
or
ss
mov
pop
push
sbb
pusha
jns
cmp
fwait
cmpsb
fildl
rclb
imul
int
lcall
sbb
adc
loopne
add
mov
push
lret
gs
pop
shll
sbb
subb
cmp
and
stc
ficoml
cmp
add
pop
add
or
dec
push
cli
lea
add
push
ss
pop
jae
js
outsl
mov
sbb
iret
in
adc
mull
push
loop
xorl
out
pop
mov
jo
fnsave
inc
jnp
fnstenv
or
pop
imul
je
mov
push
negb
push
cs
clc
pop
ja
xchg
hlt
aaa
mov
push
addr16
daa
scas
mov
xchg
push
out
push
adc
sbbb
push
sahf
push
mov
jg
aas
fidivrs
jnp
notl
or
push
das
push
or
cmp
dec
incb
dec
push
popf
out
or
jo
push
shll
ss
or
pusha
and
jns
cmpb
loope
push
pop
sbb
ja
xchg
add
cmp
repz
jae
jle
sub
iret
mov
add
cmp
repz
ja
sub
mov
push
fs
push
pop
test
jmp
repz
jmp
cltd
and
dec
xchg
push
jl
fstps
pop
insb
sub
or
repz
repz
stc
add
iret
repz
mov
or
repz
and
iret
repz
in
pop
sbb
repz
xchg
inc
jp
aad
jns
out
jle
sub
sahf
out
cmc
add
jns
xor
int
jns
out
lods
push
xchg
jns
out
in
or
mov
repz
popf
arpl
jle
fldl
jmp
jns
outsb
cs
dec
sahf
dec
std
push
adc
pushl
ret
popa
sahf
out
sahf
and
out
jns
pop
sbb
sahf
cmp
imul
sahf
or
mov
add
jne
lret
sahf
out
dec
gs
out
jns
jmp
sbb
dec
jge
fldt
sub
mov
dec
sti
out
mov
ret
jae
cmp
cmpsl
or
pop
cmp
out
jns
xchg
out
xchg
jnp
xlat
je
sarl
scas
or
repnz
decb
push
pop
jns
iret
jae
aaa
iret
addr16
daa
in
call
xchg
inc
out
repz
sahf
out
pop
lahf
jg
aas
mov
add
mov
pop
inc
add
add
sub
push
out
add
add
jno
mov
ds
push
add
add
cmp
and
add
jmp
jle
xchg
cmpsb
repnz
sbb
pop
push
dec
movsl
test
add
dec
push
imul
push
out
mov
adc
jo
cltd
push
ljmp
xor
repnz
ljmp
xor
ja
popa
push
out
inc
push
shl
les
jo
push
lret
jmp
pop
xchg
fs
int
fisttpl
pop
mov
aad
ja
rclb
inc
jl
jle
sub
ljmp
mov
sbb
mov
mov
test
in
insl
scas
mov
hlt
cmp
insb
adc
test
fs
std
adc
mov
insb
push
arpl
jg
or
cmp
inc
pusha
aad
jno
mov
mov
decl
test
movsl
add
cwtl
mov
sub
mov
lods
sbb
fdivs
mov
out
cli
incl
or
shrl
lcall
jmp
hlt
pushl
xchg
mov
mov
testl
or
ljmp
out
dec
push
rol
data16
inc
fdivl
jno
add
rcrb
jbe
pop
loopne
pushl
push
pop
in
lahf
int3
aam
call
lret
pushf
test
decl
xchg
out
push
loope
or
insl
or
fs
pop
arpl
or
imul
das
sar
gs
adc
add
ds
cwtl
test
pmaddwd
cmp
mov
scas
jmp
mov
cld
and
ficoml
lcall
jmp
push
mov
jb
mov
mov
xchg
fdivrs
jmp
jmp
outsb
xor
mov
das
mov
add
sbb
or
ljmp
ret
jno
push
push
inc
add
out
adc
mov
fidivl
outsl
and
aam
mov
icebp
stc
ficomps
leave
fldcw
fstpl
xlat
call
or
mov
mov
insb
mov
in
dec
mov
lcall
mov
movb
push
ja
popf
ljmp
add
push
fdivl
or
jnp
fs
shrl
push
pop
push
hlt
iret
push
in
jg
aas
and
scas
add
dec
sahf
pop
jge
xchg
sub
add
add
push
ljmp
push
divl
orb
imul
aam
pop
sub
mov
dec
jmp
fistpll
mov
mov
pop
mov
shll
lods
repnz
decl
addr16
cmpsb
and
mov
mov
mov
and
sbb
scas
or
ss
jp
incl
out
pusha
fildll
mov
xchg
popa
lret
in
mov
outsl
and
or
ja
int3
cld
inc
or
shlb
add
xlat
or
pushl
pop
call
ret
shlb
loop
ficomps
ret
fptan
arpl
arpl
push
cmc
xchg
insl
add
or
addr16
jb
jl
jge
mov
fistps
mov
jnp
sbb
xchg
repnz
fdivrl
fisttpl
sub
sar
incl
pop
mov
push
xor
mov
negb
ja
outsl
mov
sbb
pop
or
pop
cmc
decl
xor
or
sub
clc
sub
imul
call
inc
insb
push
xchg
or
stos
addl
add
sahf
cmpsl
decl
push
pusha
shlb
ja
ds
shrl
cltd
or
inc
fdivs
lods
scas
mov
std
cmp
inc
push
pushl
mov
iret
xchg
mov
pop
mov
jg
sarb
push
ficoms
fldenv
sarl
mov
dec
popa
std
sbb
imul
ljmp
outsl
sub
mov
or
in
add
sub
sbb
pop
xor
cmp
sub
hlt
ja
jns
pop
push
cmp
decl
mov
enter
shll
out
cli
xor
hlt
jecxz
dec
mov
mov
mov
incl
xchg
and
push
sub
js
inc
out
popa
stos
xlat
scas
cs
loopne
jmp
mov
sub
addl
test
ljmp
ss
jecxz
insb
jmp
aas
inc
aam
pop
int
and
xchg
sbb
lcall
cmpsl
sahf
ja
mov
sbb
repz
lcall
pop
adc
jg
incl
xlat
int3
imul
jo
fdivl
cmp
pop
sub
rorl
pop
or
pushl
std
pushl
inc
fisttps
pop
mov
iret
gs
sub
mov
dec
mov
lahf
pop
inc
lea
out
mov
add
jae
dec
call
inc
pushl
inc
sub
pop
cli
dec
jns
mov
sub
mov
fcomip
lea
mov
lds
and
xchg
or
xchg
lea
testb
dec
pop
mov
xlat
inc
je
cli
outsb
xor
pop
mov
mov
push
cwtl
adc
fsubrp
test
loope
insb
lret
cli
cmc
mov
out
imul
sbb
cmp
incl
push
out
adc
and
inc
and
inc
out
std
fimull
lret
push
fwait
cmp
dec
pop
scas
xchg
add
int3
cmpsl
xor
loope
lods
adc
pushl
adc
adcl
xchg
mov
xchg
leave
adc
inc
jle
xchg
ja
loop
jns
ljmp
dec
dec
and
mov
or
or
lea
fisubs
into
out
jle
add
out
jmp
inc
ret
adcl
int3
add
pop
xchg
lcall
cmpsl
test
cwtl
cmp
cmp
test
mov
ja
scas
adc
insb
hlt
inc
xor
fldcw
push
ret
adc
push
std
and
jo,pt
sarl
fdivrs
out
mov
mov
movsl
jnp
sbb
pushl
mov
ja
fldcw
dec
sub
or
sub
add
in
add
mov
outsl
bound
xchg
jmp
hlt
out
les
ret
xchg
fdecstp
push
mov
ljmp
xchg
fidivs
pushf
aad
test
push
lret
jo
nop
sbb
call
sub
push
fisubs
pop
lds
push
call
dec
sbb
mov
pop
ret
cwtl
xchg
test
fldenv
lahf
fdivrp
test
call
addb
mov
rorl
mov
incl
and
sub
adc
sub
mov
pop
dec
loope
dec
or
imul
inc
jp
decl
xlat
cli
lret
lock
shlb
mov
stc
jb
xlat
loopne
adc
mov
jo
popf
pushl
mov
add
insb
cmp
cmp
adc
sub
test
jns
pushl
dec
loopne
cmp
cmpsl
push
mov
xchg
adc
in
xor
data16
lcall
xlat
daa
push
add
dec
loope
test
sub
int3
in
mov
add
outsb
call
push
adc
jle
push
ret
xchg
xchg
dec
insb
shlb
mov
pop
adc
push
pop
or
xchg
rorb
aam
aas
adc
adc
mov
movsb
fsubrs
mov
pop
shr
popf
in
fsubr
out
inc
jmp
mov
or
xorl
lret
imul
ja
pop
dec
sar
ljmp
fmull
pop
jle
enter
mov
dec
testl
adc
sar
outsl
jne
and
dec
push
add
mov
mov
jg
ret
dec
jl
add
push
dec
add
jo
rorl
sub
push
or
stc
sbb
decl
lods
xchg
fmuls
cmc
sub
pop
or
leave
in
adc
cld
jmp
push
or
sbb
sbb
mov
sbb
repnz
pop
jmp
mov
outsb
dec
jae
jmp
cmp
fdivl
adc
mov
pop
pop
inc
dec
cmp
sub
cmp
call
or
ret
out
inc
aas
hlt
test
cmp
push
add
nop
jge
aaa
leave
cli
inc
fidivl
jnp
push
xor
xor
add
xor
imul
ljmp
daa
ss
sub
and
out
ljmp
sub
add
jmp
fidivrs
sub
sbb
cmp
mov
gs
lcall
push
mov
jo
out
jno
pop
push
jae
xor
jb
and
push
pushl
icebp
pop
je
fwait
aad
xchg
mov
mov
jg
or
jl
je
jns
push
inc
cmc
mov
cmp
lret
dec
cs
insl
and
cmp
nop
fbld
xchg
xchg
push
push
xor
cmp
imul
adc
sub
add
inc
jmp
gs
fs
add
data16
loopne
xlat
sbb
ljmp
mov
outsb
xchg
dec
add
dec
xor
sbb
insl
mov
dec
pop
fstpl
lds
xchg
push
lock
inc
or
inc
ds
inc
mov
pop
cmovo
out
incl
mov
push
cwtl
add
push
sarl
jae
clc
push
inc
stos
cmp
adc
call
jle
push
pop
cmp
pop
and
pop
jns
pop
dec
xchg
cld
sti
sub
outsl
lcall
das
lods
pop
jg
xor
loopne
iret
mov
movsl
jae
mov
fsin
out
addr16
in
or
es
lock
movsb
sahf
mov
in
sbb
das
call
jne
stos
jmp
pop
imul
cmp
sar
popa
insb
xchg
push
push
push
call
adc
decl
mov
scas
pop
clc
mov
add
addb
lock
push
incl
imul
pop
sub
cmc
add
decl
lahf
pop
js
test
mov
fcmovb
jecxz
fildl
jno
je
mov
sub
dec
aaa
fsubl
or
xlat
adc
dec
fsubr
aam
mov
ljmp
ror
into
mov
shll
pop
pushf
les
pushl
push
push
ret
xchg
ret
pop
adc
push
adc
push
scas
dec
lret
pusha
lds
enter
decl
adc
leave
mov
inc
int3
mov
rol
iret
sarb
xchg
mov
insl
incl
call
out
jmp
xchg
push
push
fs
and
pop
mov
sahf
imul
cli
popf
fldt
cwtl
in
add
mov
xor
dec
xor
dec
mov
mov
adc
inc
mov
add
dec
and
mov
pushl
lcall
mov
subb
faddl
pushf
cmpsb
push
test
sbb
xchg
jb
xchg
lcall
loop
push
add
stos
push
outsb
movsb
stos
cmpl
mov
sub
ljmp
out
icebp
cmpsl
fidivs
cmpsb
mov
movsb
mov
sub
mov
cmp
bound
les
inc
cmpsl
inc
mov
int
mov
fcmovne
mov
mov
fcomip
btr
mov
mov
notb
into
pushf
xchg
mov
cli
mov
mov
pop
pop
mov
add
pop
loopne
je
stos
adc
int
fidivs
and
jmp
adc
mov
jne
or
loopne
outsl
incb
dec
and
push
int3
ja
idiv
jmp
test
push
sbb
xor
cli
mov
lods
inc
aaa
sarb
cmpsl
mov
or
fldcw
int
jg
xchg
ljmp
aas
popa
rcrb
xchg
call
jae
decl
inc
jp
shrl
sbb
cmp
das
add
das
push
pop
in
xchg
sbb
xchg
in
xchg
frstor
sub
ja
adc
ljmp
pop
push
repnz
inc
xchg
mov
sub
cmp
and
push
sahf
loop
outsl
dec
jg
outsb
pop
subb
push
aad
shlb
lahf
xor
cmp
xchg
lahf
fsubrl
daa
out
std
mov
insl
hlt
adc
call
adc
cmpsl
aas
test
dec
nop
sbb
mov
test
lods
push
pop
jg
jnp
jmp
push
sub
pop
sbb
cmpsb
mov
adc
rcrl
cmpb
das
lret
jnp
cli
jg
dec
ja
prefetchw
or
jae
movl
or
ljmp
cld
adcl
push
mov
mov
mov
out
mov
pop
mov
in
fistpl
adc
cmp
shrb
or
pusha
cld
mull
cmp
cmp
aas
das
xchg
adc
sub
pop
clc
or
dec
push
inc
iret
icebp
cmpsb
adc
xchg
pushl
cs
cwtl
pop
fwait
push
std
jo
in
inc
dec
lock
das
dec
leave
iret
cmp
stos
out
arpl
aas
imul
incl
movl
jns
aaa
pop
in
push
loope
mov
cwtl
call
scas
jmp
inc
addb
ds
mov
xlat
loopne
xor
mov
in
jmp
jle
inc
sub
in
call
inc
xchg
sbb
xor
jge
mov
sahf
in
sub
decl
push
nop
mov
xor
jl
cmpsl
sbb
pop
test
cmp
ds
add
mov
cmc
scas
or
and
imul
sub
mov
hlt
js
clc
call
scas
dec
sarb
std
rcrb
inc
push
pop
xchg
testl
and
scas
cli
pop
lret
dec
lahf
jle
out
shll
adc
ficomps
mov
ret
jmp
jmp
add
and
jo
arpl
sahf
and
sahf
push
mov
mov
mov
or
adc
add
into
movsl
out
xchg
cmc
pushl
xor
adc
mov
jbe
sbb
out
jbe
jp
add
jae
movsb
push
mov
cmp
inc
stc
out
dec
jbe
mov
into
jb
inc
fcoml
inc
clc
fs
jns
stc
lret
push
xchg
inc
and
lcall
stc
mov
mov
lock
imul
ss
test
cltd
xchg
jg
xchg
cs
add
call
push
loope
xor
ss
push
dec
mov
mov
addl
pop
add
dec
addr16
icebp
fiadds
subb
mov
into
mov
xor
jg
mov
mov
sub
lret
sbb
xlat
cmc
mov
sbb
adc
jle
test
sub
adc
ja
mov
jle
incl
jg
test
and
mov
mov
data16
fisubrs
mov
sar
call
out
mov
dec
or
sbb
pop
outsb
sti
cmp
fucomi
pop
xchg
addr16
std
ljmp
test
or
imul
push
push
add
pushl
xchg
adc
popa
sub
or
clc
insl
les
push
arpl
mov
xchg
sti
mov
push
push
mov
sub
mov
sbb
dec
jg
and
or
jno
jnp
inc
fsubp
fcmovbe
jge
fucom
jmp
aam
push
jl
test
in
insb
cwtl
push
lcall
stc
jp
gs
in
jmp
pop
dec
pushf
push
insb
flds
or
enter
pushl
pusha
inc
in
addr16
ret
add
shll
test
pop
or
cli
mov
mov
stc
inc
int
insb
jecxz
fistps
or
pop
xor
fiadds
cmp
xlat
push
addb
push
fidivs
and
mov
movsl
add
jmp
or
mov
or
and
outsl
jl
cmpsl
push
sbb
cmp
shlb
mov
mov
mov
pusha
mov
aam
xchg
leave
mov
lock
xor
or
sbb
insl
cmp
xchg
sbb
add
jmp
insb
popa
bound
xor
or
push
xchg
in
in
movsl
jnp
or
rorl
les
mov
movb
jmp
ljmp
sbb
dec
jae
jl
int3
dec
pushl
cld
gs
popa
pop
lds
mov
xor
mov
movsl
inc
ret
xlat
pop
sar
inc
insl
sub
hlt
sti
mov
outsb
frndint
push
mov
pusha
mov
jae
add
pusha
or
or
jno
fadds
inc
stos
inc
or
adc
push
ljmp
outsl
test
xor
lahf
mov
fxch
cwtl
dec
rcrb
fbstp
pop
rorb
cmp
mov
andl
mov
loop
mov
inc
cmp
ja
sti
call
sbb
or
imul
insl
push
test
test
push
iret
or
popf
cmc
add
daa
addb
mov
setae
mov
movsb
push
ret
bound
jg
jg
addr16
out
ss
xor
add
sbb
shrl
loopne
fidivrl
cwtl
lcall
dec
int3
push
mov
stc
call
mov
aad
mov
pushl
push
fadd
les
mov
push
shlb
mov
dec
daa
or
pop
loopne
or
loopne
dec
idivb
out
ret
cmp
jle
fistpll
out
mov
mov
inc
sbbw
fisubrl
mov
xor
xchg
inc
or
fldl
push
mov
cmp
or
call
mov
xchg
mov
xlat
jmp
rcr
sahf
mov
ret
arpl
es
decl
insl
xchg
or
push
test
lea
addr16
add
push
dec
sbbb
incl
sbb
insl
rorb
or
hlt
fcmovnu
and
rcl
push
aam
inc
call
fiaddl
int
mov
ja
out
inc
ja
or
add
push
lcall
add
pop
jo
sahf
incl
bound
shr
insb
iret
inc
pop
or
js
or
pushl
add
popa
das
pusha
push
divl
outsb
ja
push
shrl
es
pop
fdivr
mov
fdivrs
lock
mov
sahf
lds
mov
jmp
xor
ljmp
mov
add
stos
ficoms
addr16
cmp
mov
mov
outsl
sub
or
mov
rolb
out
jmp
sbb
inc
int
bound
fwait
insb
lds
ja
inc
test
inc
xchg
aaa
ljmp
ret
add
hlt
fxch
push
mov
or
scas
jle
popa
subl
mov
lods
fldenv
adc
out
inc
xchg
shrl
out
jecxz
mov
cli
addl
sbb
sbb
cli
fistl
lret
lcall
insb
sbb
inc
aas
fbstp
pop
push
lcall
jae
adc
and
ja
push
call
shl
cmp
andl
jmp
pop
scas
stos
mov
imul
mov
imul
sub
hlt
pop
or
sub
inc
repz
mov
jo
jno
imul
sub
negl
pushl
ret
sbb
jne
pop
mov
sti
icebp
test
jns
mov
cmp
lock
call
sbb
fisubrs
cmp
jns
add
cmp
sbb
ljmp
mov
jb
mov
addl
ret
lds
cmc
xchg
cmpsl
in
lea
jmp
xlat
xor
cli
bound
inc
mov
insb
adc
outsb
xchg
push
xchg
jmp
xlat
cwtl
push
cmp
test
rorb
cli
lret
xchg
lea
pop
xchg
jns
sbb
cmpsb
dec
test
jmp
adc
jo
ret
fwait
lcall
test
or
jmp
xchg
scas
mov
int3
cmpsl
int3
and
mov
loope
dec
aas
shr
pusha
adc
jmp
mov
dec
and
das
push
adc
sub
aas
jns
leave
and
mov
or
je
adc
xor
lods
dec
lea
lahf
jle
xor
jmp
repz
std
ret
rclb
cmp
gs
pop
mov
push
cmpsl
gs
incl
test
leave
out
scas
lret
mov
hlt
insb
push
xchg
fnstcw
int
ret
or
lcall
inc
adc
insb
jo
daa
ja
subb
inc
jno
out
pop
add
test
inc
mov
xchg
pop
mov
cwtl
movsl
insb
ljmp
pop
fcomps
sub
fldl
icebp
lcall
xor
scas
bound
and
lds
cmp
adc
cmpsl
xchg
mov
fsts
jmp
arpl
fisubrs
sub
subb
sub
dec
sub
ljmp
inc
sub
cltd
fidivs
loope
lds
mov
gs
fisttps
in
test
xchg
addr16
lahf
mov
mov
sub
int3
cmp
call
jg
imul
or
push
test
jg
sbb
mov
pop
adc
xor
xor
cld
pushl
imul
test
ss
pop
mov
xor
xlat
dec
sub
int3
mov
pop
xlat
pushl
push
xchg
adc
lea
or
jo
jnp
inc
mov
and
in
insb
pop
into
adc
inc
xlat
push
push
test
push
test
shlb
lds
addr16
pop
dec
push
cmpsl
lcall
sbb
add
pop
sub
cltd
xor
fdivs
cli
jle
test
sub
xchg
popf
int3
sbb
rorb
mov
xchg
stc
mov
repz
mov
mov
outsb
mov
das
lds
ss
negl
push
aas
sub
jmp
dec
movsl
pop
xchg
sbb
mov
daa
or
rorb
bound
out
and
lcall
xlat
mov
cld
dec
cmpl
xchg
mov
shlb
xchg
lret
adc
clc
mov
std
ja
and
mov
jle
hlt
adc
aaa
or
jbe
or
jg
push
jne
int3
xor
jb
inc
push
cld
test
outsb
std
inc
mov
fdivr
lret
ret
lea
dec
push
test
adc
lock
repnz
test
repz
out
loope
sbb
jmp
xchg
push
cmc
sahf
sub
cmp
loop
leave
inc
loopne
ja
loope
sbb
add
in
popa
fwait
out
ffreep
out
mov
in
xor
cwtl
inc
es
jmp
ljmp
and
mov
in
dec
inc
loopne
sub
leave
xchg
decl
rolb
xchg
ret
gs
pop
pop
pop
enter
lret
std
lcall
sbb
test
xchg
aad
int
imul
adc
fstp
imul
incl
mov
cmpsl
fcom
fldcw
dec
dec
frstor
cltd
and
cld
fisubs
adc
aam
ficomps
cld
pusha
inc
xlat
or
jno
call
mov
ret
shl
enter
mov
rorb
pop
scas
fdivl
cltd
mov
decl
pop
icebp
jb
aad
inc
orl
or
or
and
scas
incl
add
lret
lret
mov
xchg
out
es
jmp
xchg
ja
pop
xchg
xor
xchg
repz
pushf
insl
add
sahf
sub
lcall
jecxz
add
scas
cli
mov
mov
lret
and
pop
dec
mov
jg
mov
arpl
mov
or
mov
mov
mov
frstor
mov
inc
dec
idivb
jmp
mov
addps
dec
out
mov
icebp
push
addr16
mov
call
or
stos
mov
scas
mov
cmp
movsb
and
cmpsb
in
xchg
jb
mov
sub
add
lods
das
insl
push
xor
jno
sbb
mov
out
sbb
movsl
fstps
cmp
pop
sbb
xor
jp
add
call
call
in
movlps
hlt
popa
pop
das
ficoml
in
mov
adc
mov
mov
cmp
rcl
movl
push
push
test
add
jp
push
sahf
call
les
pop
scas
jne
add
test
adc
or
or
outsl
and
cli
or
int
js
pusha
daa
mov
mov
and
jecxz
and
mov
and
and
and
dec
in
imul
ljmp
test
xchg
sub
movsb
add
mov
jo
sub
mov
adc
pushf
xchg
daa
cmp
sub
inc
dec
cmp
xchg
cmp
roll
mov
xor
scas
test
pop
lahf
aaa
leave
jnp
or
icebp
xor
xor
sar
lcall
xor
mov
inc
outsl
insl
cld
ja
sub
insb
jmp
ds
push
and
mov
repnz
mov
lods
iret
arpl
adc
addr16
and
ja
incl
xor
jge
jb
xor
pop
add
loope
jo
mov
pushl
popf
in
je
neg
add
dec
xorb
mov
jl
mov
push
mov
out
cld
roll
jnp
int3
push
jp
cmpsb
arpl
js
sbb
jns
jb
add
shlb
pushl
mov
into
push
movsb
outsb
stc
add
js
push
sub
dec
add
lods
adc
and
icebp
push
sbbl
add
push
jbe
aas
inc
add
sub
pop
cmp
add
jl
stos
pop
mov
les
dec
push
sbb
add
cmpsl
mov
add
fisttpl
ud0
pushl
punpckldq
gs
add
push
add
testb
xchg
pushf
xor
inc
fdivp
push
decl
addl
pop
pop
fiaddl
xor
cmp
addr16
incl
mov
mov
out
add
xchg
push
enter
add
imul
dec
xlat
cmp
orb
mov
nop
mov
xchg
add
mov
fldl
pop
fbstp
cmpsl
arpl
push
add
movsl
xor
add
lahf
adc
inc
jno
and
enter
lods
add
into
outsl
add
pushl
jg
rclb
sbb
sti
js
rcrb
pop
jae
inc
add
sub
pop
cld
and
xor
pop
add
cmp
fildl
rolb
push
cmp
in
pop
enter
loop
in
es
shll
cmp
mov
xor
sub
add
pop
ja
add
push
mov
push
mov
add
sahf
push
dec
add
cmc
or
pushl
bound
cld
rcrb
lret
dec
jb
mov
add
sbb
fsubrs
jg
add
inc
pushl
lcall
std
inc
and
hlt
xchg
push
dec
call
cmp
add
sbb
pushl
add
jbe
push
lret
add
pop
loope
ret
pusha
test
mov
jg
sbb
mov
or
fistpll
cs
xchg
jle
loopne
test
das
push
cmp
dec
imul
incl
xor
cpuid
mov
add
sub
mov
outsl
cwtl
cmc
add
call
jle
scas
clc
ljmp
icebp
mov
inc
sub
mov
jecxz
mov
sbb
inc
xlat
jg
aam
js
insb
outsb
pop
hlt
add
testl
outsb
das
aas
mov
mov
orb
push
repz
pop
mov
pop
icebp
iret
mov
add
xchg
fucomip
mov
fwait
pop
adc
jo
add
dec
das
fidivs
sbb
xorb
inc
out
xchg
aas
mov
cld
ds
pop
xchg
pop
aaa
lret
mov
mov
incl
call
mov
jmp
sti
addb
ds
ljmp
sar
inc
and
scas
int3
pop
mov
add
pop
mov
stos
in
pop
add
jg
add
sbb
add
xchg
add
xor
out
mov
sahf
aam
push
stc
jg
pushl
pop
lds
cmp
xor
add
xchg
or
cmpsb
ljmp
insl
add
loope
cli
cld
sbb
call
cmc
dec
dec
add
and
jne
adc
ljmp
mov
sbb
dec
aas
dec
scas
add
inc
movsw
add
xchg
pop
sbb
sub
cmp
mov
and
repnz
xlat
jle
add
mov
add
lock
mov
add
inc
fldcw
mov
loop
ljmp
add
stc
popa
gs
add
mov
mov
push
mov
ss
dec
lcall
decl
xchg
lock
loope
add
fxch
aad
mov
adc
movsl
jbe
add
data16
lcall
iret
scas
xor
test
icebp
and
sbb
incl
lods
cmp
add
icebp
mov
and
fwait
clc
inc
call
incl
das
jns
mov
lods
es
adc
xchg
add
jmp
add
lock
bound
imul
daa
ss
xchg
pop
lcall
push
add
push
mov
cld
add
jno
lret
loope
ja
call
ljmp
into
out
mov
add
aas
out
inc
addl
movsb
pop
notb
add
lcall
push
push
ds
add
ds
inc
add
mov
stos
xorl
jg
cmp
add
pop
add
add
mov
adc
in
incl
orl
ret
jle
cmp
jmp
incb
add
mov
push
outsb
add
push
cmpsl
rcr
ret
outsl
fisubrs
decl
lock
mov
xor
inc
or
cs
add
ds
add
pop
sub
ret
scas
addr16
cmpsb
add
mov
pop
mov
jp
cltd
mov
push
in
or
icebp
fndisi(8087
jg
and
std
loopne
or
cld
or
or
add
popa
or
idiv
loop
aaa
and
push
cmc
add
rorb
gs
outsl
gs
decl
loopne
popa
test
loopne
push
or
pop
shll
mov
or
or
mov
add
push
jp
adc
add
popa
pop
repz
push
adc
stos
jae
xor
sbb
dec
repz
repz
addl
jge
cmp
fstpl
sbb
rep
lods
sub
xor
lea
fisubl
jecxz
aad
adc
cmpsb
jns
movsl
and
lcall
lcall
cltd
sbb
jns
cmpsb
jns
test
jns
cmpsb
mov
icebp
jno
lcall
xchg
adc
jns
cmpsb
jns
mov
jns
cmpsb
addl
cmpsb
jns
ficomps
push
out
jns
cmpsb
jns
scas
cs
dec
cmpsb
jns
cmpsb
mov
divb
lcall
xchg
push
out
lcall
inc
cmpsb
jns
cmpsb
xchg
cli
jp
lcall
lcall
push
mov
mov
dec
sbb
sahf
cmpsb
imul
dec
imul
mov
add
ret
push
xorb
mov
js
in
add
jo
ja
mov
sub
push
int3
add
jge
mov
push
hlt
add
jnp
mov
push
aam
push
sbb
xchg
add
adc
push
in
sbb
movsb
add
and
push
les
add
out
sbb
clc
add
add
idivl
sbb
cwtl
add
push
call
test
sub
push
out
mov
dec
sbb
mov
mov
jo
push
mov
xor
push
shl
out
jnp
add
add
add
pusha
sbb
mov
rolb
sbb
addb
jno
inc
add
repz
mov
sbb
divl
xchg
out
repz
xrelease
jmp
lret
mov
mov
and
add
mov
pop
pushf
push
sbb
rolb
out
subl
in
lcall
jmp
out
out
mul
cli
mov
stos
jg
inc
imul
in
clc
call
sti
mov
outsl
mov
into
add
pop
inc
pop
pop
testl
insl
mov
add
or
or
or
aaa
add
or
add
aas
add
add
add
ltr
add
jg
jmp
in
adc
adc
push
mov
call
out
add
int3
jle
sti
in
or
sbb
jecxz
add
loop
add
daa
repnz
add
jge
mov
mov
icebp
sbb
test
adc
adc
int3
in
fwait
add
adc
add
in
clc
negb
or
adc
cmc
adc
add
std
adc
std
push
out
mov
sbb
jg
mov
cmpb
mov
mov
mov
out
jmp
xor
lea
aad
cmp
mov
pop
outsb
pop
cmp
pop
inc
pop
xchg
pop
cwtl
icebp
push
clc
mov
pop
xor
push
mov
jno
xor
aas
icebp
add
xor
lret
clc
out
aam
sbbb
lea
idivb
mov
xor
or
adc
jmp
lcall
add
lcall
push
inc
out
outsb
push
xor
inc
inc
mov
dec
imulb
or
or
rclb
lock
xchg
adc
push
pop
insb
add
lret
add
and
nop
xchg
add
pushf
je
std
xor
pop
loopne
or
out
mov
out
mov
xorb
mov
adc
jnp
lock
xor
add
jo
out
and
test
xor
divb
lock
sbb
fidivs
mov
sarl
sub
add
add
incb
push
decb
add
adc
sbb
and
xor
inc
add
pusha
icebp
adc
aas
lods
jmp
ss
sbb
in
sbb
sbb
pop
cwtl
push
sub
sbb
imul
xor
out
out
insb
dec
fwait
pop
imul
push
popf
cmp
ds
add
cld
push
cmove
push
sarl
jb
je
xchg
bound
les
fdivl
pushf
and
and
insl
stc
aad
inc
jl
add
fisubl
push
jae
mov
nop
fldz
jbe
cli
add
mov
cmpsl
popf
int
scas
sub
push
outsl
and
out
decb
xchg
outsb
push
pushf
divb
xor
xor
dec
push
push
jo
inc
jle
add
add
mov
add
xchg
es
push
inc
jmp
scas
rcll
xchg
inc
inc
dec
mov
dec
dec
mov
dec
push
scas
cmp
mov
mov
pop
popa
bound
imul
lcall
jno
mov
mov
jp
xor
xor
xor
sub
xchg
andl
jb
je
jbe
js
jp
and
push
push
ds
mov
inc
sarb
scas
push
stos
push
aas
pop
pop
movsl
pop
pop
pop
mov
arpl
cltd
addr16
insb
ss
imul
mov
xchg
cld
jo
mov
mov
sahf
imul
dec
imull
decb
jle
fcomps
jle
inc
std
jnp
xchg
in
jg
push
mov
or
cmp
std
jns
jge,pt
inc
push
imulb
sub
push
xchg
or
add
or
in
adc
push
mov
iret
std
jg
pop
add
pop
add
add
add
cmp
add
push
add
ljmp
push
add
add
push
add
push
add
dec
add
add
add
pop
cmc
mov
add
add
add
popa
add
pop
add
mov
inc
add
fldl
lcall
mov
shr
mov
cmp
push
add
call
add
add
imul
sbb
add
add
add
push
add
sub
loopne
dec
daa
add
add
and
jo
and
bound
pop
adc
out
mov
sbb
pop
add
add
add
jb
cmp
add
mov
or
push
mov
jno
add
add
add
insb
push
fsubrl
add
xor
mov
add
dec
add
jp
lret
xor
pop
add
add
daa
add
and
mov
or
insb
push
xor
add
add
mov
add
add
add
add
cmp
pop
add
add
mov
adc
add
add
dec
add
add
add
fldcw
add
add
add
dec
insb
mov
dec
add
cmp
cs
add
aaa
insb
pop
rolb
repnz
add
xor
mov
incb
jb
add
add
fcom
and
pop
add
add
adc
sub
add
or
xchg
fbstp
jae
imul
and
pushl
add
xor
xor
lods
pop
add
xor
repnz
mov
xor
mov
xor
cmpsl
xor
xor
jecxz
push
add
xor
out
push
add
pushl
dec
add
xor
mov
xor
xor
test
dec
add
xor
stos
xor
lods
pushl
inc
add
xor
mov
inc
add
xor
xor
mov
inc
add
xor
mov
pushl
aas
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
pushl
aaa
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
pushl
das
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
pushl
daa
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
incl
inc
add
pop
push
ds
and
cmp
and
cmp
and
cmp
es
cmp
sub
ss
sub
xor
sub
xor
sub
xor
cs
xor
xor
cs
xor
sub
xor
sub
xor
sub
ss
sub
cmp
es
cmp
pop
add
incl
sbb
add
inc
push
sbb
inc
push
sbb
dec
push
push
add
dec
push
adc
add
dec
push
adc
dec
push
adc
push
push
push
add
push
push
or
push
sbb
sub
lods
pop
mov
pop
push
inc
pop
push
push
pop
push
bound
mov
push
adcb
push
push
mov
push
push
mov
push
ret
add
insb
add
push
and
add
sbb
add
loop
add
adc
sub
mov
pop
add
or
or
or
add
add
or
bound
popa
inc
lds
orb
aas
push
repnz
add
and
mov
lret
add
adc
test
lret
push
inc
and
ljmp
test
lcall
push
mov
push
sbb
pop
ljmp
jp
mov
lcall
xor
inc
lret
lret
jo
ljmp
xchg
or
lcall
cmp
test
push
lret
push
and
sbb
add
adc
sbb
add
push
rcrb
push
pop
fiaddl
popa
ret
xchg
mov
adc
add
sub
insb
fcom
add
loop
adc
add
add
sbb
mov
ljmp
or
or
xor
push
inc
or
xchg
add
xchg
add
call
add
add
xchg
ret
push
mov
jg
add
mov
add
mov
pop
pop
mov
pop
pop
mov
pop
pop
stos
add
jg
stos
mov
stos
add
add
test
push
pop
adc
jmp
pop
lods
push
pop
scas
mov
scas
mov
call
pop
lret
pop
nop
add
int3
add
int
pop
lret
xlat
scas
lcall
pop
mov
inc
pop
into
add
pop
xchg
add
xchg
cmp
jmp
pop
xchg
add
pop
xchg
add
pop
xchg
push
xchg
jp
cwtl
std
ljmp
xor
pop
fwait
add
pop
pushf
add
pop
popf
add
pop
sahf
add
pop
lahf
pop
cmc
mov
cmp
mov
ljmp
inc
pop
movsl
lcall
daa
pop
test
es
test
add
pop
mov
sbb
pop
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
cld
out
ficompl
mov
adc
pop
mov
rolb
cmp
mov
add
pop
mov
add
pop
roll
ret
incl
ret
add
ret
pop
les
or
lds
or
movb
pop
movl
jg
leave
add
mov
pop
or
pop
or
and
and
pop
or
and
call
mov
and
cmpsb
and
and
popf
and
sahf
and
mov
and
decl
lods
and
and
pusha
and
and
sub
aas
or
or
and
pushl
or
or
xor
aam
xor
shlb
xor
popa
and
or
and
incl
and
or
and
or
and
or
and
or
and
mulb
or
xchg
std
in
orb
xchg
and
push
and
or
mov
and
sbb
or
sbb
or
and
sbb
jg
call
or
and
or
and
adc
and
adc
cmp
adc
mov
lcall
mov
or
or
and
std
pop
jl
xor
or
or
and
add
pop
imul
or
pop
or
pop
push
pushl
bound
push
mov
adc
push
or
and
and
or
and
and
and
push
or
or
dec
or
dec
or
dec
or
dec
or
pop
and
pop
and
and
and
sub
inc
or
add
sub
cmp
pop
and
or
or
cmp
pop
and
or
xor
shll
or
and
das
or
and
or
and
or
and
lock
or
and
or
and
push
daa
and
lods
and
and
mov
and
iret
dec
xchg
or
or
or
pushl
push
es
and
or
and
adc
cmpsb
es
adc
arpl
adc
adc
gs
rcll
faddl
and
daa
or
pop
daa
in
push
mov
insl
or
inc
sbb
inc
les
adc
add
or
and
or
and
mov
mov
cmp
pop
or
add
jle
or
clc
pop
mov
or
and
mov
nop
and
or
xor
lcall
and
or
and
or
sub
or
sub
out
push
adcl
sub
mov
mov
pop
or
add
sbb
or
add
sbb
call
add
sbb
add
push
or
add
adc
fildl
adc
fldl
adc
add
push
or
add
or
jecxz
or
cmc
inc
cmp
insb
or
add
out
pop
or
ljmp
ret
push
js
ljmp
or
mov
pop
or
pop
rorb
pop
aaa
in
clc
dec
jo
push
or
push
push
sub
push
or
or
push
mov
push
push
add
push
or
adc
dec
or
call
push
dec
or
adc
dec
or
push
push
dec
or
sbb
inc
or
lcall
push
inc
or
sbb
inc
or
push
push
inc
or
and
ds
cld
pop
push
hlt
and
cmp
inc
cmp
cmp
call
aaa
or
sub
xor
or
sub
xor
cs
decl
xor
xor
cs
xor
sub
xor
sub
xor
jle
adc
aaa
push
daa
or
push
lock
and
ljmp
mov
inc
push
push
or
inc
push
sbb
inc
push
sbb
inc
push
lcall
or
inc
push
pop
or
dec
push
adc
or
dec
push
adc
mov
prefetchwt1
or
mov
push
push
or
cmp
lods
or
push
aam
pop
push
push
push
sub
lock
xor
xor
pop
mov
add
jp
sub
xor
aaa
xor
mov
fstpt
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
inc
xor
inc
xor
inc
xor
pop
mov
roll
inc
xor
dec
xor
xor
dec
xor
xor
xor
xorb
dec
xor
xor
push
xor
xor
push
popa
ret
xchg
push
xor
push
xor
insb
fdivs
pop
xor
xor
xor
add
sbb
xor
pusha
push
ret
xchg
mov
xor
insb
fdivs
arpl
loop
adc
test
push
add
and
lds
push
scas
adc
adc
mov
xorb
mov
lds
ret
shlb
pop
loop
adc
xor
mov
fcoms
mov
xor
arpl
mov
rclb
rcll
call
adc
adc
js
dec
sbb
xor
adcl
call
lea
adc
add
adc
adc
cs
fbstp
adc
inc
adc
inc
adc
pop
and
insb
ss
add
mov
mov
mov
and
and
and
and
push
jle
dec
repz
push
div
repz
repz
in
in
in
jns
out
add
add
sahf
out
lods
fldcw
stos
xlat
stos
fisubrs
jns
fcompl
cmp
popf
aam
rclb
push
rclb
cmp
in
jb
repnz
jns
out
cs
push
mov
out
sahf
out
push
imul
push
xlat
sahf
xchg
jns
fsubl
fisubs
in
frstor
push
shlb
cmp
repz
push
xchg
iret
repz
push
xchg
push
xchg
push
xchg
sahf
cmpsl
stc
cmp
nop
add
dec
test
repz
sahf
aad
add
popf
stos
dec
add
add
outsl
insl
repz
add
fwait
stos
dec
push
lcall
dec
dec
repz
push
cwtl
add
sbb
adc
and
fcompl
sbb
lcall
mov
mov
cmp
xchg
lcall
test
jns
xorb
xor
xor
jle
cmpsb
jns
das
jge
jl
jnp
lcall
sub
lods
js
push
addb
stos
sbb
cld
sbb
sbb
pop
push
cs
addb
mov
mov
sbb
decl
and
push
mov
fbld
and
and
and
xchg
xor
sub
sub
daa
std
ljmp
sbb
arpl
xchg
imul
outsl
divb
jae
jne
ja
xchg
orb
pop
lahf
cwtl
vmread
mov
jmp
mov
pop
add
incl
jmp
push
pop
test
les
repnz
pushl
mov
jge
shll
add
or
push
aad
xor
jecxz
add
jnp
out
or
repz
aam
hlt
adc
adc
sbb
sbb
pop
xlat
sub
out
sar
sub
shr
pop
cmp
ret
cmp
adc
pop
cli
pop
jnp
pop
jg
sub
xchg
addb
or
outsl
mov
xchg
imul
fwait
arpl
add
jmp
jmp
push
lods
scas
scas
dec
mov
mov
dec
mov
mov
mov
mov
mov
ret
cmp
mov
leave
add
lret
xor
into
iret
das
clc
cld
decl
aad
xlat
daa
mov
fstp
fistps
loope
loop
sbb
out
pop
ljmp
pop
into
ljmp
icebp
xor
or
div
pop
stc
sar
add
stos
mov
out
lcall
pop
add
jg
pop
mov
pop
roll
loopne
push
cmpsl
pop
pop
inc
add
fiadds
and
pop
ds
dec
incl
daa
popa
mov
mov
adc
mov
add
add
sbb
pushf
ja
or
add
jg
or
fwait
repnz
lods
add
pusha
and
pusha
add
pop
sti
popa
pop
push
popa
fsubs
loop
lock
add
shll
jl
jg
andb
sub
lods
add
pop
add
add
or
or
sub
adc
push
std
mov
add
scas
iret
lock
add
add
xchg
mov
push
sbb
add
out
mov
pop
lock
or
add
pop
sub
jo
sti
or
cmp
sahf
add
xchg
divl
iret
jne
cli
lock
and
pop
sub
incl
mov
inc
repnz
or
push
inc
push
sar
idiv
pop
xchg
test
fisttps
add
push
hlt
push
dec
popa
inc
vpackssdw
fcomip
aaa
lcall
xchg
js
mov
inc
mov
repz
sbb
fstpt
repz
dec
push
dec
loopne
sahf
test
dec
add
filds
daa
push
pop
cs
out
dec
hlt
pop
sbb
xchg
les
shrb
or
adc
push
mov
notb
jae
xchg
cmp
movsb
adc
mov
inc
cmp
xor
out
pop
cmp
push
dec
adc
outsb
add
lret
cs
testb
shlb
ret
cmp
mov
push
cmp
cmp
adc
cld
je
cmpl
add
pusha
dec
test
ja
push
cs
pushf
ss
adc
jbe
pop
cmp
cmp
cmp
sub
cmp
idivb
sarl
iret
in
mov
cmp
idivb
push
cli
jno
stos
shll
push
movsb
inc
push
cmp
les
xor
in
cld
fcomip
pop
adc
or
xchg
sbb
in
scas
jno
mov
adc
dec
mov
je,pt
cmpl
adc
xchg
arpl
loope
das
rclb
fimull
enter
cli
test
jg
mov
lds
or
aas
adc
jecxz
and
aas
xor
call
in
ret
aas
inc
adc
and
loop
xchg
mov
inc
add
in
outsl
mov
jo
jnp
xor
mov
aas
les
aas
aam
and
in
adc
incl
xchg
add
mov
fcomps
shrb
mov
fwait
jns
ret
push
incl
stos
xor
xor
sarb
mov
imul
je
xlat
or
push
jg
lock
push
jnp
fisubl
repz
sti
xor
jmp
sbb
std
in
mov
jl
sub
lret
xor
mov
inc
adc
in
pop
cld
jle
aas
lret
cmc
xlat
scas
xchg
pop
loope
stc
testb
inc
cmp
mov
sub
fcoml
sbb
in
xor
xor
cmpsb
dec
adc
push
lea
or
inc
or
mov
rolb
loope
dec
insb
mov
aad
mov
insb
xor
sarl
mov
imul
adc
lods
xor
pusha
das
add
fstpt
divb
rcll
in
sti
stc
mov
mov
sbb
push
push
jne
sub
clc
cmp
mov
xor
pop
dec
pushl
cld
in
fucomip
mov
lods
pop
popa
lds
popa
lea
add
and
outsl
jg
cmc
xor
xor
inc
sbb
in
xor
xor
adc
xor
xor
xor
dec
add
dec
add
out
sbb
push
cmp
xchg
mov
inc
or
xorb
cmp
pop
cmp
cmp
cmp
jle
stos
movsb
push
test
pop
shrl
sbbb
lcall
shll
mov
cmp
ret
pop
cmc
mov
lcall
enter
xor
stc
push
rcl
aaa
cmp
sti
loope
ret
test
inc
cli
mov
ret
pop
mov
hlt
mov
mov
cmp
cmp
cmp
idivb
adc
sarl
shr
sbb
insl
call
jg
jo
clc
jo
sarb
xor
add
ja
clc
xchg
lock
jle
leave
cmp
cmpsl
outsb
jno,pt
movsb
adc
fdivrs
and
mov
jg
push
add
mov
mov
orb
repz
and
loope
jg
push
jbe
xor
xor
xchg
xor
incl
int
loop
sub
test
aad
cmp
or
mov
in
rol
dec
pop
cmp
jg
pop
lock
and
jno
mov
in
mov
rcll
jp
jle
sub
clc
pop
js
dec
or
xorl
jno
dec
xor
xor
mov
pushf
jg
fcomip
push
pusha
imul
mov
dec
pop
cmp
addb
jl
xchg
xor
mov
xlat
add
xchg
cmpb
and
pop
in
xlat
sub
cmp
and
imul
in
sub
xchg
adc
cld
ret
loop
mov
add
cmp
repnz
fldcw
jo
add
out
daa
inc
push
frstor
push
test
in
call
mov
dec
mov
iret
aas
jb
cmp
idivb
out
cmp
stos
cli
or
call
les
pusha
inc
out
out
mov
adc
into
mov
push
std
push
pusha
add
movsl
mov
jmp
outsl
jge
xor
js
pop
movsb
xor
loopne
int
sub
add
in
sub
mov
add
add
ret
add
jle
mov
icebp
push
inc
pop
mov
sub
sub
out
fwait
mov
mov
movsb
addb
ja
fdivs
pusha
jg
stos
lcall
add
les
inc
pop
and
xchg
dec
fadds
mov
xor
push
int3
pop
in
andb
push
arpl
xchg
and
inc
scas
cmc
xchg
imulb
clc
fwait
in
push
dec
inc
addr16
lret
pushf
xchg
stc
inc
or
mov
call
cld
inc
addl
mov
inc
xor
dec
daa
add
cmp
inc
and
movb
adc
decl
pop
xchg
add
ljmp
lods
sahf
scas
lcall
pop
cmp
pop
loopne
add
out
pop
mov
and
push
in
data16
or
jg
std
int
adc
add
dec
in
movsl
out
rolb
aad
hlt
ss
mov
add
stc
mov
push
roll
add
outsl
mov
stos
sub
gs
ljmp
add
fcomip
jae
push
dec
loopne
adc
lock
add
call
and
fbstp
xchg
inc
jle
cmp
sbb
adc
aas
xchg
incb
out
jp
loopne
cmp
inc
adc
mov
cld
add
jb
or
add
jo
lock
dec
aam
jo
sub
add
add
add
add
add
add
cld
add
add
mov
add
fbld
cmp
incb
rep
std
imulb
das
xor
dec
imul
jb
adc
jo
lret
ret
add
sbb
add
or
mov
test
stos
xor
mov
fwait
xor
xor
das
je
cs
push
in
and
xchg
subb
adc
jbe
lds
xchg
or
xlat
adc
cmpsb
call
add
adc
push
aam
stos
es
test
scas
and
popa
repz
push
xchg
add
add
andb
mov
mov
inc
and
cmpsb
push
and
jle
add
aad
inc
sbb
icebp
cmpsb
adc
push
push
movsl
add
push
push
push
add
pop
lds
arpl
iret
add
push
or
testb
in
adc
mov
push
sub
cmpsl
or
jmp
adc
shrb
adcb
mov
in
rorl
test
fistpl
pusha
dec
movsl
mov
enter
rolb
lock
jp
push
add
lcall
push
push
pushw
sbb
dec
jae
int
pop
push
inc
push
push
imul
test
push
push
addb
sbbb
or
mov
orl
xchg
and
int
scas
xacquire
xchg
punpckhbw
jnp
cmpsl
rorb
les
or
add
push
add
subb
das
fidivrl
push
cs
scas
test
lahf
push
pop
scas
inc
out
shr
jg
add
pop
adc
add
cmc
subb
movsb
aad
push
bound
rorb
adc
xchg
xchg
nop
sahf
sbb
andb
out
jae
test
scas
imul
jg
out
fwait
fistpl
xchg
or
push
rorb
rolb
rolb
add
shlb
or
add
incl
test
or
js
adc
rorb
out
mov
mov
adc
insl
aaa
ss
out
xlat
fldl
push
push
adcl
fildl
sbb
insb
inc
add
pushf
rclb
jg
imul
pop
shlb
inc
insb
fsubrl
rclb
dec
mov
scas
insl
repz
xor
clc
shlb
nop
adc
shll
rcrb
scas
dec
xor
mov
ljmp
imul
dec
mov
cmpsl
and
cmpl
fwait
mov
iret
mov
or
enter
lock
ss
sti
ja
pop
mov
shrb
stos
jnp
das
cmp
outsl
sbb
sarb
out
jns
xchg
ja,pn
std
std
mov
xchg
shlb
mov
punpckhbw
aam
dec
or
or
or
sbbb
mov
sahf
and
sarl
mov
or
push
dec
add
mov
sbb
mov
pusha
xor
sbb
std
testb
rolb
add
mov
push
lret
sbb
rorb
loopne
jecxz
mov
push
push
jmp
loopne
aas
fcoml
jg
aad
push
adc
cltd
add
lcall
dec
sub
cmc
loopne
aaa
adc
cmp
push
dec
loopne
sar
jl
pop
push
xor
add
push
shrb
aad
insb
push
fwait
dec
test
cmpsl
lahf
mov
rolb
stos
es
sbb
sarl
mov
ret
in
pop
sti
imulb
loopne
mov
jle
movsb
adc
add
test
adc
pop
push
icebp
and
mov
loopne
adc
fcomi
insl
loop
inc
or
loopne
dec
jp
inc
lods
fnstenv
mov
outsl
xor
mov
sbb
add
jg
shlw
fadds
imul
xor
shl
inc
xlat
aad
jecxz
call
sub
adc
in
fs
punpcklbw
loopne
cmp
add
pop
negb
pop
fisubrl
sbb
iret
pop
shrl
jae
mov
into
imul
fimull
xchg
sbb
or
div
mull
dec
call
sbb
loopne
out
jbe
pop
in
aaa
in
fldcw
add
and
add
or
and
mov
and
add
adc
sub
xor
dec
add
cmp
xor
adc
es
clc
icebp
stos
loope
ss
out
jge
dec
adc
aam
decb
ficomps
fadd
adc
xor
loopne
pop
mov
shl
clc
sbb
sbb
sub
xor
jle
sbb
loopne
cld
mov
enter
orl
stos
movsb
out
movsb
and
cmpsb
jge
add
stos
jle
pop
pop
jnp
sbb
jbe
or
mov
loopne
pop
jp
loopne
das
fidivrl
dec
loope
push
dec
sti
idiv
or
jnp
inc
loopne
push
mov
repz
mov
mov
js
loopne
jmp
mov
insb
pop
xchg
insb
pop
jns
stc
adc
sub
jle,pn
push
add
pop
push
insl
mov
loopne
xchg
es
sbb
js
push
add
add
hlt
mov
push
shl
or
pop
mov
loopne
into
push
out
push
ficomps
adc
push
jae
xchg
sbb
or
icebp
cld
loopne
mov
dec
sub
mov
add
sbb
addb
add
das
mov
lock
ja
push
or
inc
cmp
jbe
ds
add
shll
jae
fstpt
add
jno
es
lcall
ret
mov
pop
ja
jo
push
sbb
lock
test
fcomip
sti
in
js
add
sub
adc
test
add
cmp
nop
inc
bound
pusha
mov
jmp
mov
pop
loopne
filds
push
mov
inc
mov
add
repnz
call
fidivs
or
call
shl
jmp
cmc
inc
and
leave
xchg
add
daa
sub
inc
xchg
das
xor
incl
push
ljmp
push
test
mov
mov
in
pop
scas
pop
dec
cld
or
mov
xchg
pop
sub
leave
adc
loopne
mov
lods
bound
dec
mov
lahf
jle
popa
iret
call
fisttps
rcl
push
inc
shrb
sub
testb
decl
pop
pop
addb
outsl
leave
stos
movsb
pop
mov
mov
sarb
imull
sti
xchg
cmp
sbb
mov
ljmp
push
imul
lods
add
popa
lahf
aam
xchg
mov
shrb
jge
addl
inc
imul
mov
cmp
add
gs
std
sti
push
mov
xchg
or
gs
pushl
xchg
inc
ja
add
xchg
jno
adc
adc
mov
jbe
sbb
mov
mov
xchg
lods
xor
or
or
mov
fistl
jno
sbb
add
mov
sbb
clc
mov
std
fists
fwait
fs
mov
mov
popa
outsb
mov
ljmp
jb
jb
add
add
and
gs
push
in
cmp
gs
inc
jb
lcall
xor
push
add
push
dec
xchg
outsw
jle
popa
je
imulb
int3
push
ss
arpl
mov
push
lods
jo
call
pop
push
xchg
ss
fwait
push
je
lea
je
push
fmuls
or
std
ljmp
inc
lcall
popa
outsb
fwait
insb
test
rcl
push
sahf
push
jg
add
fisubs
pushl
inc
in
outsl
jp
icebp
ret
js
in
and
mov
lds
das
ja
mov
bound
pushf
outsl
insl
das
xor
js
addr16
mov
clc
lcall
inc
jbe
pop
push
adc
xor
cmp
adc
cs
loopne
mov
adcl
mov
sbb
loopne
sbb
jno
mov
ret
pop
sarb
add
push
push
fs
lea
je
mov
lds
cmp
xor
sub
insl
and
fldl
mov
gs
icebp
lcall
andb
stos
cmpsb
mov
clc
or
pop
cmpsl
mov
dec
mov
call
in
call
cmpsl
sbb
les
sbb
inc
aaa
out
cli
inc
in
xor
call
div
call
add
rorb
loopne
mov
test
clc
call
mov
inc
push
inc
add
push
dec
add
gs
lcall
sub
and
int
jb
xor
push
add
ror
cmp
adc
inc
mov
stos
push
mov
cmpsb
or
mov
loopne
mov
mov
mov
lods
mov
arpl
add
decb
add
sbb
sub
ljmp
xor
and
daa
out
add
inc
sub
int3
inc
mov
clc
add
std
fists
cld
push
push
enter
repnz
fnstsw
into
rolb
dec
xor
add
incl
sub
shll
fdivrl
rcr
loope
adc
enter
decb
daa
and
aas
cmp
sub
fdivr
outsl
aaa
push
dec
inc
push
or
inc
test
pusha
imul
popa
jle
mov
orb
pop
pop
js
jnp
imul
imul
dec
in
inc
push
cmpsl
inc
inc
inc
sub
lods
jb
pushl
aam
ret
into
and
je
ffreep
icebp
or
dec
pop
mov
dec
adc
hlt
incb
decl
pop
cld
jo
ret
aas
ror
cltd
and
add
mov
mov
aad
add
fnstcw
and
lds
cmp
cmp
cmp
icebp
add
lcall
xor
or
xor
xor
sahf
xor
fdivs
adc
sarl
jo
scas
mov
ds
clc
cmpb
add
sub
in
outsb
adc
bound
sbb
mov
sub
lret
decb
xor
mov
xor
aas
dec
cmp
sub
inc
cld
inc
divb
or
mov
pop
or
pop
inc
pop
in
push
cmp
ljmp
push
dec
add
pusha
aaa
sahf
bound
and
les
insl
sub
cld
push
add
push
hlt
inc
push
mov
clc
mov
and
mov
pop
mov
insb
dec
push
cmpsl
inc
inc
push
adc
icebp
sbb
push
testb
out
adc
push
mov
jl
xor
lret
cltd
ss
fcompl
pop
sbb
adc
push
push
loop
adc
in
adc
inc
or
ljmp
add
and
mov
int3
mov
xor
cmp
pushl
cld
cmpsb
daa
mov
fcmovbe
pop
xchg
ret
fcmovu
pop
adc
sti
pop
mov
mov
cwtl
and
das
pusha
add
outsl
sub
je
add
jo
jg
sub
aad
jbe
add
jp
jo
dec
les
sbb
jecxz
jle
repz
cmp
cld
adc
add
sbb
sbb
push
negl
sbb
or
cmp
mov
scas
adc
xor
in
cmpsl
jmp
in
in
lock
fistpll
dec
rcrb
in
out
hlt
std
icebp
adc
in
and
pushl
jmp
cs
ret
aad
into
ret
faddp
xorb
iret
add
hlt
fsts
shll
pop
cltd
push
incl
sahf
arpl
mov
data16
xor
dec
sbb
fsubr
xlat
and
jmp
sar
adc
mov
je
jb
inc
test
or
mov
cmp
and
xor
sub
push
pop
or
cmp
out
ljmp
mov
cli
push
pop
or
in
repz
testl
adc
std
int
push
test
jo
enter
iret
pop
icebp
fistl
mov
ret
dec
int3
add
aaa
loop
fiaddl
sub
ljmp
add
out
clc
sub
scas
loope
jmp
jecxz
repnz
outsl
xchg
cmp
test
cli
mov
sahf
or
out
and
out
in
add
das
movsb
inc
nop
push
push
inc
mov
push
add
sub
inc
imul
push
test
ljmp
icebp
add
fdivs
int3
sbb
aaa
inc
aas
jo
add
int3
jecxz
and
sar
mulb
shrb
add
vmovaps
xlat
fnstcw
mov
ss
add
es
pusha
cmp
das
sub
fdivr
aas
incb
sub
cmp
cmp
es
out
fldl
jg
icebp
sub
xchg
push
lods
xchg
lods
add
cmpsl
lock
or
ljmp
cli
ds
or
or
cltd
mov
jne
addb
lcall
push
push
add
repnz
hlt
lock
cmc
cmc
cmp
pop
icebp
mov
xor
fwait
pushf
arpl
xchg
mov
add
call
leave
lret
fmul
cmp
mov
dec
lahf
mov
xchg
push
imul
xchg
push
pop
dec
mov
push
test
or
incl
xchg
mov
pop
mov
cmpsl
add
push
out
jnp
mov
subb
jo
fwait
lahf
outsl
subl
fstps
mov
popa
gs
jno
jne
insb
es
in
std
push
out
call
rcl
inc
shll
fcmovbe
leave
insl
sbbl
out
add
jmp
push
idiv
mov
loopne
fnclex
in
ljmp
scas
mov
lods
scas
lock
mov
ret
nop
pushf
packssdw
ljmp
es
jmp
push
repz
std
and
lock
insb
push
rcl
jle
push
out
cmp
scas
insl
pop
out
fidivrs
jns
jp
mov
push
out
lcall
pushl
imul
ljmp
dec
pop
pop
test
jg
push
fnstcw
and
gs
insb
sbbl
in
mov
int
incl
hlt
cmc
hlt
or
lock
mov
jl
ja
sub
dec
cli
call
fcmovb
cmp
mov
into
fcmovne
xor
enter
sub
xor
sub
je
sub
add
jg
sub
xchg
out
add
in
in
aas
jns
xchg
andb
repnz
mov
shll
int
xor
cs
cmp
mov
stos
inc
push
inc
lods
bound
andl
jle
je
xchg
sti
or
jbe
outsb
xchg
sub
push
scas
dec
dec
dec
mov
mov
aas
clc
std
or
jecxz
cld
adc
add
sbb
adc
inc
push
inc
inc
mov
scas
mov
pop
and
ret
xlat
fcom
jmp
popa
imul
jnp
test
push
out
jle
dec
mov
push
push
mov
pop
dec
mov
inc
xchg
cli
pushl
sub
ss
aam
sub
shll
adc
xlat
and
aaa
inc
dec
or
pop
ret
or
stos
lods
movsl
bound
aas
adc
fcomp
sub
fistl
inc
mov
lahf
inc
jle
ret
sbb
sub
xor
not
pslld
push
cmpsl
dec
pop
repnz
jmp
cmp
mov
cli
loopne
push
loopne
mov
lcall
push
test
jae
add
lahf
mov
dec
lods
mov
std
sbb
lods
test
mov
repnz
sti
cmc
add
adc
call
xchg
jle
dec
pop
filds
mov
cmpsl
cli
mov
mov
push
out
stos
pop
cmpsb
test
icebp
ljmp
icebp
icebp
adc
clc
out
inc
ds
pop
inc
pop
mov
add
inc
mov
jmp
cwtl
inc
rcrb
and
push
jmp
jg
cmp
and
ds
pop
pop
inc
mov
inc
idiv
outsl
jg
dec
inc
push
stos
inc
push
inc
lods
dec
gs
inc
jp
lea
push
jae
jge
insl
or
mov
out
pop
dec
push
push
dec
pop
pop
lret
xchg
scas
test
pop
stos
movsb
iret
mov
call
cld
pop
cmpsl
cmpsl
mov
mov
int3
fadd
xor
roll
subb
xchg
jnp
mov
sub
xlat
lret
mov
or
or
sbb
cmc
mov
dec
pop
dec
mov
inc
dec
mov
sub
ret
sub
sub
fists
shlb
dec
add
and
int3
fimull
arpl
xchg
fwait
lods
dec
push
imul
je
sub
decb
pop
mov
sub
daa
and
push
sti
fstpl
push
ficompl
imul
xor
sbb
jge
es
rolb
aaa
jae
push
mov
out
adc
outsb
notl
arpl
fs
adc
sub
jo
cs
ljmp
xchg
jbe
adc
push
stos
mov
lret
push
mov
sbb
enter
mov
and
lcall
repnz
xchg
cmc
adc
inc
dec
cmpl
dec
push
jns
out
jle
jno
gs
pusha
das
lods
add
and
fwait
xor
xor
fnstcw
das
js
sub
sbb
rcll
push
pop
icebp
pop
jbe
mov
pushl
push
push
jns
mov
and
sub
cmp
mov
lcall
and
iret
cmp
mov
add
sbb
test
dec
sbb
decl
shl
or
loopne
adc
cmpsl
mov
push
jmp
in
sbb
jmp
call
xor
sub
loopne
sub
pop
add
sbb
std
repz
in
lcall
es
icebp
fimuls
sbb
sub
push
or
icebp
adc
pushl
jg
push
aas
mov
pop
ja
fwait
inc
cwtl
pop
pop
push
movsb
inc
inc
pop
mov
push
lret
sbb
jne
movaps
ljmp
push
push
or
pop
das
adc
push
mov
jns
xchg
jns
jg
pop
jle
pushf
jg
ja
stc
jge
js
pop
lahf
outsw
lea
dec
data16
sti
cmp
jg
lds
fildl
xor
sbb
aad
and
cmp
and
cltd
jnp
xchg
arpl
mov
mov
pusha
addr16
pushf
je
add
jg
idiv
jo
scas
insb
mov
xor
outsb
mov
or
xlat
call
loop
sbbb
jbe
into
leave
and
and
rolb
cmp
int
cmp
fbstp
and
ljmp
fisubs
arpl
push
sub
mov
or
and
adc
in
add
add
clc
stc
add
xchg
and
cmp
std
das
sub
ljmp
out
lret
ret
ss
adc
cld
adc
adc
adc
cmp
xor
push
clc
fbld
cli
pop
sbb
sti
add
fdivrs
jg
scas
dec
dec
sbb
push
push
inc
lods
inc
inc
adc
push
inc
cmpsl
inc
push
add
xlat
lcall
mov
fs
jb
popa
mov
and
loopne
insl
mov
mov
inc
mov
mov
dec
scas
mov
push
mov
add
test
jmp
add
ja
pop
pop
mov
add
decl
push
pop
dec
stc
bound
dec
mov
push
or
mov
cli
or
mov
enter
pushf
test
lods
and
inc
call
nop
data16
fistps
shrd
sysret
in
cs
int3
and
and
add
sub
sbb
cmp
add
cmp
pop
sub
sbb
das
sub
push
xor
incl
jmp
xor
sbb
ljmp
push
jmp
adc
sbb
or
jle
cs
jp
into
jl
mov
inc
push
scas
inc
push
inc
mov
dec
mov
inc
insb
js
inc
push
inc
stos
pop
call
decl
inc
dec
push
xchg
jno
jae
push
jbe
subl
ja
jp
mov
shl
popl
stc
sti
or
pop
orb
jg
insb
mov
push
push
lea
loopne
ljmp
insl
xorl
mov
jge
inc
dec
dec
mov
arpl
mov
add
mov
jg
add
outsb
jle
mov
push
inc
push
imul
jbe
xor
pop
clc
ljmp
dec
pop
lea
inc
mov
xchg
test
incl
bound
filds
jno
xlat
nop
outsl
xchg
cwtl
int3
movsl
jmp
inc
call
mov
mov
push
mov
mov
loopne
call
shrl
rcl
jp
enter
orl
cli
mov
popa
ja
rolb
sub
outsl
push
in
and
arpl
mov
mov
push
sarb
xor
push
dec
mov
or
dec
add
ljmp
jns
ret
and
xor
shrl
xor
shll
sub
aas
insl
bound
adc
jp
add
push
and
hlt
sbb
sbb
jmp
or
jmp
sbb
in
xor
add
loopne
mov
int3
decl
in
cli
inc
mov
cld
sbb
hlt
jecxz
mov
ljmp
out
sub
xchg
lds
rol
shrb
nop
or
add
leave
int
clc
inc
or
int3
test
inc
mov
mov
add
mov
call
jecxz
ret
lret
cmpsb
mov
mov
jmp
test
decl
nop
pop
mov
mov
popf
mov
lret
aad
jg
mov
push
sbb
push
lcall
jne
arpl
fwait
js
and
inc
fisubs
push
dec
loop
lcall
dec
dec
pop
hlt
push
dec
dec
test
dec
or
inc
fnstenv
jle
mov
push
dec
data16
dec
cmp
fucomp
sbb
jmp
or
incl
les
pushf
insl
sub
shrl
cmp
ja
cmp
int
insl
into
or
call
les
add
lret
dec
stc
sbb
cs
push
test
pop
push
inc
mov
arpl
je
jb
incl
xorb
popf
inc
test
mov
mov
mov
and
mov
or
sbb
add
adc
pop
fnstenv
add
ret
dec
in
jecxz
and
div
daa
cld
fsubs
repnz
cli
aam
aas
fcmovnb
fldcw
pop
pop
pop
jmp
jl
iret
jb
mov
daa
fidivrs
and
xor
pop
pushl
sub
sarb
and
mov
dec
add
out
nop
pop
adc
push
fimull
add
pop
clc
pop
iret
aam
enter
iret
iret
out
add
add
add
or
jp
mov
pop
mov
movsb
or
mov
pop
or
incl
mov
sahf
inc
mov
mov
mov
mov
pop
pop
stc
mov
aaa
in
sbb
sbb
adc
sbb
jp
rcrl
push
jp
push
and
std
sbb
mov
repnz
cmp
adc
jecxz
adc
pushl
scas
push
jbe
inc
sbb
pop
push
pop
stos
push
pop
add
mov
push
scas
and
add
sub
sub
loope
sbb
in
adc
les
incl
add
push
push
or
nop
mov
inc
inc
repnz
ljmp
in
gs
int
rcr
shll
lds
rol
jne
fcmovne
sub
jg
cmp
mov
push
clc
out
push
mov
loop
test
decl
jo
adc
add
pop
cld
inc
sbb
sti
pop
pop
pop
pop
adc
cld
cli
sbb
notb
adc
sbb
push
cmp
cmp
cmp
dec
dec
dec
sahf
add
inc
dec
inc
mov
inc
sbb
out
inc
push
mov
push
pop
stos
push
pop
push
mov
add
aam
es
xchg
sbb
ret
mov
xchg
les
push
cmp
enter
iret
pop
aaa
mov
vmovaps
pop
test
stos
xchg
scas
aas
xor
aam
push
cmp
jg
test
dec
mov
repnz
cmpsb
mov
sbb
mov
fnsave
loope
mov
outsl
mov
add
shlb
jo
push
push
push
mov
push
pop
pop
inc
daa
fdivl
aaa
add
rcl
jns
lcall
mov
outsl
xchg
cmp
sub
lret
into
notb
or
mull
and
aad
adc
popa
mov
gs
add
mov
imul
leave
xchg
and
jmp
or
inc
in
sbb
push
mov
daa
int
into
cmpsl
mov
sbb
out
dec
stos
lods
push
loope
mov
movhps
dec
push
push
in
xchg
sbb
out
fists
jmp
stos
pop
push
int
sub
shlb
jb
jl
xor
or
aaa
fcomip
jp
jg
pusha
sub
fidivs
ja
in
ss
push
inc
sub
adc
or
aas
pop
push
out
sbb
cmp
xor
outsb
push
hlt
div
or
call
clc
outsl
cli
sbb
lock
sbb
mov
or
icebp
ljmp
mov
lret
cmp
lret
lret
ss
cltd
and
icebp
filds
ret
inc
add
and
cmp
mov
add
lods
push
test
pop
cmp
popf
mov
dec
gs
pushf
add
mov
push
rolb
jns
xchg
push
insb
insl
lcall
lahf
mov
mov
fiaddl
scas
incb
add
xor
or
lret
outsb
mov
insl
push
push
outsb
aad
fldl
je
adc
dec
outsb
lods
inc
inc
add
xor
push
shl
fisubrs
xadd
dec
push
add
incl
popa
bound
gs
fwait
add
mov
gs
je
push
adc
gs
jnp
imul
push
pop
inc
lcall
rcll
push
xchg
add
jo
or
arpl
rcl
scas
pop
mov
cltd
jbe
push
outsb
xchg
cmp
pop
jnp
call
xchg
push
push
das
call
xchg
testl
push
mov
call
imul
test
sahf
sbb
popa
xchg
mov
test
or
lea
add
fidivrl
lds
aaa
xor
je
cmp
arpl
cmp
mov
mov
in
sbb
ret
adc
out
inc
outsl
inc
and
pop
add
out
push
xor
into
push
push
sbb
std
test
das
sub
arpl
je
dec
data16
addr16
add
jle
cmp
lods
cs
clc
add
in
push
cmp
mov
lcall
scas
fistpl
insl
insb
insl
sub
cmpsb
sbb
outsb
adc
cmp
inc
xchg
push
mov
outsb
add
mov
mov
nop
add
pop
gs
inc
add
lock
mov
inc
in
pop
popa
inc
jnp
nop
mov
pop
scas
stos
std
loope
test
or
fwait
inc
inc
add
popa
and
jnp
pop
mov
xchg
inc
nop
subb
push
subb
orb
jg
lock
aaa
jae
adc
xorb
leave
add
addb
inc
mov
pop
call
xchg
add
dec
pop
dec
sub
daa
add
movl
lods
movsl
and
mov
subl
mov
bound
push
inc
push
mov
inc
adc
push
mov
incl
incl
and
lock
push
inc
mov
cmp
inc
push
inc
orl
add
stos
dec
push
mov
adcb
push
movsb
dec
dec
mov
sarl
push
scas
inc
sbb
dec
addl
call
sbbl
or
roll
or
roll
push
xchg
add
sbb
enter
mov
adc
mov
inc
add
adc
dec
cmpsb
pushf
jne
scas
sub
sbb
js
sub
gs
arpl
adc
pop
je
shlb
pushf
mov
mov
mov
mov
arpl
jmp
ret
jbe
jo
jb
fs
pushf
push
hlt
jg
stos
or
shlb
cmp
rclb
mov
sub
xchg
adc
stos
sub
aad
adc
sub
cmpb
ret
add
popa
jb
or
add
nop
ja
ret
xor
fwait
adc
gs
imul
insl
mov
dec
push
or
mov
gs
xchg
popa
xor
lock
rcll
fs
subb
lods
imul
or
popa
jbe
in
gs
jle
lcall
popa
xchg
shrb
pop
sbb
inc
arpl
pop
mov
aaa
or
scas
or
popf
les
shlb
shlb
xor
mov
add
mov
push
outsl
mov
inc
and
add
rcll
ret
or
aam
push
jbe
inc
ret
cmp
aam
inc
outsb
pop
xchg
insl
xor
jo
mov
outsl
pushf
imul
mov
int
js
inc
fdivl
shlb
sub
ss
arpl
add
std
jbe
insl
insb
and
data16
imul
and
push
sahf
popf
pusha
pop
mov
ljmp
nop
and
imulb
mov
es
fs
das
mov
sbb
call
shl
test
pop
fucom
add
hlt
cmc
dec
mov
pushf
loopne
inc
sbbb
rcll
fwait
mov
push
pop
stos
mov
push
lods
mov
std
notl
adc
inc
cld
add
into
and
mov
jnp
inc
je
aam
mov
lock
in
pushl
test
mov
movsbl
sti
push
or
ret
push
stc
inc
cmp
jne
std
data16
addl
sbb
leave
test
push
mov
add
ds
or
push
cmpb
mov
rolb
add
mov
movsb
test
test
jne
notb
or
cs
jg
testb
xor
std
movsb
rcrb
ret
xchg
jg
or
in
cmp
je
cmp
test
fisttpl
pushl
adc
mov
inc
inc
fmuls
or
pusha
pop
subl
mov
stos
mov
jl
pop
test
jne
xor
jmp
push
test
add
sub
adc
push
stos
mov
aam
cmp
jmp
and
jg
das
jne
subb
decl
inc
sbb
mov
sbb
ljmp
lea
add
sti
ljmp
adc
mov
sbb
idiv
xor
cld
jno
sarb
adc
pop
jne
inc
mov
xor
lcall
or
lea
or
push
pop
sbb
outsb
cli
aaa
dec
mov
cmp
das
mov
in
hlt
mov
in
or
je
ror
add
je
mov
mov
cmp
add
movb
mov
mov
pop
pop
rcrl
adc
sub
push
fdivl
push
int3
call
aas
je
mov
pop
movb
and
outsb
fcmovnu
pushl
inc
test
jne
add
shlb
cmp
mov
or
je
or
and
and
je
cmpb
je
push
inc
lock
enter
lock
sbb
test
testb
ljmp
es
in
jo
nop
adc
pop
mov
push
push
in
or
incl
sbb
add
add
loopne
ljmp
aam
mov
rcr
lock
pop
pop
ss
test
cmp
ds
cld
outsb
out
inc
push
ss
test
loop
pop
mov
ds
pop
cld
cmp
mov
and
add
or
and
andb
add
pusha
and
mov
pusha
or
dec
addl
adc
leave
clc
push
add
scas
xor
mov
mov
jbe
clc
cmp
leave
inc
xadd
clc
test
mov
cmp
ds
mov
aas
push
jmp
xor
stc
cmp
mov
lods
mov
mov
lcall
jecxz
stos
pop
xor
sub
jg
sbb
inc
pop
add
mov
push
das
mov
loopne,pn
xchg
jo
test
ja
push
push
inc
mov
cmp
add
mov
inc
cmpsb
mov
xor
pop
cmp
mov
mov
push
call
loop
jg
or
incb
add
xchg
pusha
or
mov
mov
mov
divl
xor
outsb
cli
mov
into
mov
out
call
or
mov
les
jb
adc
pop
sbb
mov
fwait
jl
dec
cmp
jne
addb
call
cmp
sub
fisttps
mov
or
movl
cmpsb
mov
enter
push
jbe
in
das
mov
xor
repnz
add
jl
add
and
push
es
mov
sbb
inc
pop
mov
lock
fdiv
clc
fisttps
pop
pop
add
movl
cmp
sbb
adc
dec
dec
cmp
mov
add
dec
fistl
mov
stc
and
dec
iret
sub
addr16
jae
and
mov
stc
shll
addb
jae
add
std
aaa
orb
add
pop
mov
jecxz
ljmp
add
ljmp
add
setle
lret
sbbb
xchg
xor
jo
dec
sbbb
ret
xor
add
pop
mov
icebp
add
jmp
ja
fisubrl
or
inc
mov
jb
dec
or
lcall
add
mov
imul
mov
jnp
lock
sbb
adc
mov
mov
les
push
je
add
mov
js
div
lcall
jg
bound
sub
in
inc
mov
jmp
jl
gs
mov
mov
and
push
fimuls
add
xchg
push
jbe
sti
mov
sbb
cmp
push
jb
clc
or
and
xor
cli
push
fdivl
out
add
adc
cmpl
call
je
xor
jge
add
jo
jo
adc
mov
adc
jp
or
inc
das
js
mov
addb
fidivs
push
add
dec
sarl
mov
inc
je
lock
xor
mov
mov
lock
jmp
pop
mov
fdivs
jne
mov
stc
fbstp
adc
mov
jg
xor
mov
decl
xorb
add
lock
jl
add
dec
lock
incl
je
mov
std
jne
mov
mov
loopne
insl
add
add
inc
or
adc
ret
es
mov
lea
lea
mov
cmp
jbe
ja
cmp
jl
cmp
jg
add
and
sub
rorb
mov
push
sbb
adc
dec
scas
and
pop
cmc
adc
jg
xor
sbb
mov
cmp
jae
add
jge
call
jo
mov
cmp
jbe
push
xor
or
mov
and
cmp
into
mov
mov
sub
scas
in
add
pushf
call
aas
push
mov
fimuls
mov
testl
out
adc
lret
inc
pushl
jmp
mov
push
jo
mov
wrmsr
cs
daa
rol
add
jae
mov
shlb
mov
test
lcall
lea
or
ljmp
xor
jnp
push
xor
xor
insb
add
adc
cltd
jle
fwait
or
xor
lret
inc
sub
je
in
stos
cld
mov
jp
pop
xchg
or
les
repnz
adc
pop
int3
inc
imul
jae
test
subl
push
into
add
pop
jo
sti
pop
fmull
sbb
test
cld
jge
in
lcall
imull
cli
inc
xrelease
mov
or
xor
or
or
mov
push
icebp
jno
mov
test
or
cwtl
add
ljmp
test
jle
lock
lock
call
aas
je
scas
xlat
cmpb
or
imul
lcall
and
or
scas
add
fwait
xchg
mov
cmpsb
xor
pop
jns
pusha
xor
or
sbb
test
add
ret
mov
inc
call
lcall
pushl
jge
pop
sti
adc
mov
orl
push
xchg
push
mov
jmp
sti
fcom
mov
xchg
pop
and
jg
inc
and
movsb
in
mov
add
push
push
data16
add
pop
push
icebp
mov
push
in
cmp
shll
lock
test
lock
add
je
push
mov
fadds
push
mov
pop
fldl
sahf
je
push
out
call
incl
push
pop
mov
add
push
mov
test
je
add
jbe
adc
movsb
sub
cmpsb
jne
pop
outsl
das
rorb
mov
call
inc
mov
cld
les
hlt
add
or
push
mov
jl
or
or
into
jmp
clc
dec
push
adc
push
push
jl
adc
mov
mov
push
es
rclb
mov
stos
ss
call
lock
cmp
or
jp
dec
add
sbb
insb
and
adc
cmp
in
xor
in
es
clc
push
push
adc
xor
add
lcall
idiv
jae
push
pop
mov
lock
pop
mov
sti
ljmp
jmp
xor
leave
and
xor
mov
adc
cld
push
xor
lods
adc
stos
dec
testb
xor
cld
leave
cmp
sub
push
dec
jo
pop
into
mov
xor
push
jo
and
inc
or
jbe
sahf
and
push
and
inc
mov
jo
sub
orb
adc
inc
or
scas
cli
scas
fiaddl
sbb
or
push
iret
lock
mov
outsl
scas
xor
adc
add
call
cld
mov
cmpsb
push
jbe
repz
push
jo
push
pop
and
inc
repnz
gs
cld
nop
sbb
rclb
test
pop
cmp
mov
or
lock
sbb
xor
push
mov
hlt
add
decl
imul
dec
mov
xor
pusha
inc
repz
add
jg
or
add
sub
mov
push
pop
push
repnz
and
mov
sbb
cld
push
lock
sbb
or
ret
mov
clc
fistpll
mov
out
loopne
xor
hlt
push
call
sub
mov
aam
inc
inc
andl
push
mov
inc
scas
pushl
add
decl
in
add
jb
loopne
push
push
pushl
dec
push
mov
and
mov
fdivs
add
or
jns
aaa
fdivr
filds
or
pushl
xchg
add
je
jmp
mov
fsubrl
ja
cmc
shrb
cmp
cmc
sub
add
sbb
pop
cmp
daa
lea
insb
mov
jg
cwtl
adc
sbb
loopne
test
testb
sbb
dec
aad
jbe
lret
push
orb
lret
jno
jp
fsubr
xorl
mov
pop
or
adc
jecxz
rcr
es
jb
jno
lea
adc
inc
xchg
jbe
mov
mov
mov
jbe
jae
andl
scas
xor
adc
jp
adc
test
andl
jmp
xor
fcmovnu
mov
call
xor
notb
jne
ret
sub
mov
test
pop
cwtl
call
mov
adc
push
push
add
xor
add
rorl
xor
testb
and
pop
fidivrs
and
daa
inc
or
dec
mov
pushl
lds
pusha
xor
loopne
inc
daa
sub
pop
adc
xor
inc
xor
push
mov
pop
jne
add
jnp
inc
cmp
fadds
or
fisttpl
je
push
push
scas
clc
stos
mov
test
xor
lea
insb
repz
xor
daa
ds
inc
xor
and
pop
cmpl
lret
jmp
or
lods
pop
sarb
addl
add
sbb
lods
push
pop
xchg
inc
sub
jne
adc
pushw
cmpb
dec
cmpsb
mov
and
mov
mov
cmp
jmp
mov
inc
clc
fists
rolb
ljmp
jnp
add
jmp
dec
mov
je
add
mov
mov
fsub
mov
je
xor
add
inc
out
popa
mov
lcall
cs
incl
inc
sbb
add
jecxz
movsb
repz
xchg
jnp
outsl
sbb
out
lcall
push
pop
and
movsb
jb
loop
and
jmp
test
and
add
imul
cmpsl
mov
mov
in
inc
lock
sub
add
pop
sbb
sti
add
push
mov
std
sbb
dec
lahf
jns
inc
and
adc
mov
mov
mov
xchg
or
add
das
fs
roll
orl
mov
cs
and
mov
jno
das
push
shrl
mov
inc
movsl
insb
daa
fs
mov
in
inc
cmp
jbe
sub
sub
mov
jecxz
sti
lcall
test
jmp
or
cmpsl
rorb
hlt
dec
sub
stos
dec
lods
rorb
jmp
xchg
andb
sub
test
ds
xorl
cmp
push
fs
jo
pusha
and
inc
test
fstpt
inc
ret
pop
and
jbe
and
add
or
mov
testl
enter
rorb
jmp
shrb
jl
adc
sti
je
test
stc
inc
fisttps
push
jbe
adc
ret
jne
mov
cmp
or
loopne
out
add
adc
xor
pop
mov
pop
decl
xchg
pushf
cmp
jne
mov
outsl
clc
fwait
icebp
scas
push
push
loope
lea
mov
cli
decl
jle
aas
push
xor
pop
mov
fdiv
cmp
insb
int3
rorb
fistpl
stos
cmp
out
outsb
stos
stos
jb
or
scas
ret
push
xchg
add
add
add
pop
shlb
add
add
les
outsl
cmp
adc
add
lea
push
repnz
cmp
jmp
out
subb
rolb
pop
cmp
shlb
fnstenv
int3
add
lods
pop
adc
int
incl
fistpl
xor
inc
xchg
fs
adc
shl
inc
dec
or
or
ret
add
or
out
insb
inc
ljmp
inc
mov
testl
push
mov
push
insb
add
mov
fcompl
aaa
insb
add
or
jne
movsb
jg
mov
mov
add
je
jmp
mov
repz
sub
and
std
and
rorb
orb
das
call
pusha
adc
enter
jp
into
cmp
xor
out
movsb
and
xchg
adc
mov
scas
lea
mul
testb
jo
or
pcmpgtb
arpl
add
jmp
bound
lock
mov
pop
pop
scas
pop
cs
cwtl
cmp
mov
push
daa
in
push
idiv
fbld
inc
cld
in
pop
add
mov
jb
or
and
mov
cmpsl
lea
leave
je
jp
jne
fsub
ficompl
pushf
jl
rclb
mov
mov
xchg
adc
mov
push
insl
shlb
and
push
clc
mov
lods
lea
lods
ss
pop
mov
mov
inc
or
dec
mov
xchg
dec
xchg
scas
or
ret
mov
sub
shrl
add
lea
popa
cmp
subb
scas
std
incl
call
lea
pusha
adc
add
inc
add
mov
push
stos
pusha
or
jmp
or
lods
mov
call
xchg
push
subl
ss
push
decb
idivb
stos
push
lea
pop
cmp
adc
lea
jmp
mov
je
or
push
mov
dec
inc
dec
sub
adc
push
or
add
loopne
mov
cli
lcall
shrb
je
cmovs
add
aaa
je
push
int3
idiv
outsl
push
jne
and
addl
je
jl
add
cli
push
out
clc
incl
cld
rolb
push
pusha
add
pop
das
cmpw
ja
add
xor
fs
add
jmp
lea
and
testb
xchg
dec
clc
push
leave
jmp
jb
pop
sti
and
add
ljmp
xor
add
movl
or
mov
loope
sbbb
or
je
sub
cmp
scas
pop
icebp
push
xchg
pusha
push
add
inc
ljmp
decl
mov
js
cld
push
adc
outsl
cld
loopne
mov
push
or
nop
loope
and
and
jle
add
and
out
push
inc
add
sti
inc
sub
jo
cmp
mov
lea
inc
shl
cltd
fildl
mov
or
data16
pop
pop
xor
cltd
mov
inc
mov
les
adc
cmp
mov
add
or
mov
ret
pusha
arpl
mov
cld
lods
push
adcb
hlt
call
je
loop
ljmp
adc
or
pop
pusha
pop
mov
pusha
or
mov
mov
push
je
jne
movsl
movsl
cwtl
pop
lock
aas
loopne
add
cltd
cmpl
jb
mov
add
sbb
adc
jne
cld
push
mov
pushf
xor
jecxz
loopne
loope
je
popa
sbb
aam
inc
das
loope
js
clc
mov
sahf
add
pop
imul
or
leave
cmp
add
mov
add
and
call
sub
outsb
dec
add
mov
clc
jbe
xchg
std
jmp
loopne
call
pusha
call
jp
enter
orl
ss
jns
sti
pop
xchg
movb
imul
std
addb
fdivr
mov
or
pop
push
add
in
add
loopne
push
cmpsl
dec
int
push
jge
clc
pop
rolb
loope
cli
push
pop
loope
add
pop
pop
pushf
lea
or
lods
mov
mov
push
decl
add
inc
or
andl
cmp
cmp
inc
mov
insb
cli
pop
mov
add
pushl
and
mov
test
leave
dec
add
cmp
and
mov
add
aaa
push
je
adc
pop
icebp
sbb
mov
or
icebp
inc
decb
outsb
jo
push
or
loop
jecxz
push
pop
mov
jae
mov
pop
sarl
jle
test
stc
dec
cld
decb
jnp
push
mov
lea
or
sahf
jbe
call
ret
pop
loopne
cmp
pop
mov
mov
add
or
add
inc
cld
mov
pop
jg
mull
loope
adc
shl
lock
movzwl
mov
push
xchg
jge
sbb
fmul
adc
je
fsubrs
mov
push
push
imul
and
pop
in
add
push
push
insl
ds
push
clc
jp
mov
loopne
mov
lock
jl
les
xor
sarl
add
xor
lock
jl
xchg
adc
adc
inc
and
add
popf
ljmp
nop
pushf
mov
aaa
mov
mov
call
mov
test
je
xchg
dec
push
mov
jno
outsb
adc
jecxz
sbb
pop
lret
add
dec
or
jp
dec
xor
outsb
mov
inc
inc
inc
call
push
cmpsl
mov
jb
add
add
or
aaa
insb
or
divb
ds
jbe
mov
mov
sbb
mov
call
push
push
pop
cwtl
xchg
mov
xchg
xor
ljmp
movsl
adc
je
in
call
push
lret
mov
in
loop
sbb
jo
out
add
pushf
ljmp
adc
in
add
dec
lock
xchg
add
pop
call
hlt
add
movsbl
pop
add
test
sbb
cli
fst
addl
jne
mov
cld
add
mov
sub
in
pop
inc
xchg
sahf
repz
call
mov
push
mov
pop
cmp
or
lock
mov
jle
jb
sbb
mov
push
inc
cmp
mov
aaa
jle
clc
jo
mov
dec
jl
inc
add
mov
sar
imul
xor
jbe
jbe
jge
lods
jmp
inc
add
or
sti
adc
clc
add
adc
xor
je
mov
js
or
pop
ja
pop
lock
sub
inc
xor
repnz
test
cli
ljmp
mov
out
and
or
insl
cmp
lock
punpckhdq
inc
imul
cmp
lods
jae
scas
in
call
jno
sbb
jg
cld
or
rep
or
inc
or
or
inc
lock
pop
mov
call
xor
call
mov
or
subl
mov
inc
ss
jl
cmp
cs
imul
ret
stos
mov
adc
aad
scas
sub
or
shrb
fcomps
xchg
cmp
or
jmp
xchg
ret
fiadds
ret
jmp
push
call
lcall
add
inc
and
cmp
mov
cmp
shlb
push
and
pusha
add
mov
add
mov
xorl
xor
mov
and
cs
add
pop
cmp
push
mov
pop
aam
mov
mov
add
mov
sub
mov
or
clc
mov
mov
add
pop
xor
push
sub
push
cs
push
andb
cli
mov
sbb
lods
adc
mov
push
out
xor
mov
lock
jne
mov
mov
xchg
add
pop
inc
inc
lock
and
je
and
loope
adc
shll
inc
mov
jecxz
stos
decl
pop
add
inc
push
jb
push
push
push
jp
jg
pop
cmpsl
ds
clc
stos
jle
inc
stos
jo
lret
lret
or
adc
call
pop
test
test
mov
inc
sahf
jne
pop
xchg
pop
mov
pop
or
ja
sbb
repz
inc
push
push
cmovs
xor
jl
add
dec
clc
out
or
jbe
cld
jmp
jbe
mov
mov
and
sub
add
jne
es
and
mov
push
call
adc
adc
sbb
mov
dec
add
je
add
pop
xor
lock
cmp
jg
add
jo
stc
aam
adc
mulb
cld
pop
push
or
test
addb
dec
stos
push
cmpsb
xor
cmp
and
xor
out
xchg
jmp
add
push
testb
call
lods
and
cld
sub
ljmp
mov
lret
adc
pop
pop
jo
mov
ret
decb
lret
jne
add
scas
push
pop
js
jbe
shlb
xor
fsin
inc
ret
hlt
add
mov
add
inc
fbld
inc
sbb
push
in
mov
jb
jmp
push
mov
rcrl
out
repnz
lcall
pop
inc
mov
stos
xor
icebp
push
adc
lea
push
test
xor
fisubs
xlat
dec
adcl
sbb
adc
xor
mov
adc
cmp
inc
insl
add
fnsave
push
je
adc
push
scas
inc
loope
push
insb
pop
sbb
cmp
decl
pop
mov
les
sbb
sub
push
cmp
add
xor
test
je
inc
mov
jb
aaa
cld
test
icebp
aam
bound
pusha
dec
icebp
jnp
mov
or
sub
std
dec
push
subb
es
push
scas
cli
xor
std
ljmp
aas
adc
out
add
cmp
add
ret
mov
push
jne
mov
push
test
sti
or
idivb
hlt
add
xor
mov
cmp
pushf
pushf
push
ljmp
pop
pushf
jle
mov
cmp
push
lock
inc
lock
je
test
add
or
adc
js
add
adc
inc
push
ret
pop
cmp
add
or
or
sti
fucomi
adc
inc
cmc
or
pop
notl
jo
addl
adc
std
or
inc
adc
and
leave
pushf
repz
add
sub
jno
xchg
cli
repnz
push
fbstp
pusha
push
or
jno
ljmp
mov
cli
add
jo
loop
jg
xor
jne
in
xor
sahf
add
mov
repz
cmp
add
in
addl
fucomi
ret
jo
push
jle
sub
dec
push
cld
call
sub
or
push
imul
scas
test
add
lea
roll
mov
or
mov
sbb
lcall
je
mov
xchg
enter
xchg
jle
icebp
ja
test
jb
add
add
add
or
fdivrs
orb
dec
inc
sarl
fwait
je
je
push
movb
scas
ret
mov
rclb
mov
fisttpl
data16
mov
iret
in
repnz
scas
cli
idivb
cmp
sbb
and
adc
cltd
add
data16
loopne
adc
bound
pushl
dec
loopne
mov
push
mov
ss
sbb
rolb
enter
inc
pusha
adc
or
push
or
dec
das
dec
call
push
jle
inc
xor
cmp
mov
rclb
lock
xor
test
sub
xor
and
jp
adc
mov
pushw
sti
incl
andb
push
sbbb
or
call
pusha
push
fcomp
fidivrl
call
sub
xor
addl
xor
push
in
xor
inc
enter
jb
inc
shrl
pop
xchg
dec
push
push
adcb
fwait
loopne
mov
mov
pop
int
sub
cmpl
outsb
lea
lea
std
call
dec
shrb
push
mov
adcb
mov
pop
push
pop
dec
addl
inc
push
push
incl
and
cmp
je
cmp
inc
add
sbbb
pop
add
xlat
mov
jbe
mov
add
pop
push
inc
stos
and
xchg
insl
or
cld
scas
add
add
cmpsb
orb
subb
shll
jle
inc
ss
push
sbb
cmp
dec
pushf
mov
push
jl
je
idiv
fistpl
push
inc
inc
sarb
aam
lea
lea
jp
js
rorb
cld
fcmovne
or
dec
dec
xchg
pop
cmp
add
xadd
or
push
test
and
inc
sub
and
add
cmc
sub
cli
divb
loopne
and
ret
jb
mov
add
lock
inc
jmp
and
add
jg
hlt
pop
pop
mov
jmp
inc
add
add
add
inc
data16
dec
xchg
add
repz
mov
push
cmpsb
or
mov
push
mov
and
push
jae
jo
pop
test
and
out
add
je
enter
pop
and
push
cmp
jae
mov
cmp
push
les
shrb
add
mov
mov
push
test
loope
mov
push
cld
lret
orb
sub
push
shrl
test
push
adc
add
push
add
push
testb
cmp
xlat
add
inc
push
outsb
mov
faddl
pop
sar
call
mov
adc
ret
inc
mov
ret
push
lret
decl
jmp
rcrb
clc
jl
fimuls
lock
lea
js
xor
mov
push
or
or
pop
add
dec
jns
adc
dec
jl
incb
insl
or
call
or
mov
cmp
sbb
paddb
lds
or
pop
mov
lahf
hlt
insl
add
jmp
xchg
adcl
lods
mov
add
add
pusha
dec
je
andl
cmp
test
dec
jbe
inc
out
mov
test
loopne
cld
mull
or
inc
addb
fldt
decb
add
mov
ds
add
sbb
lea
orb
lock
fnsave
sub
fcompl
cld
cmp
xor
shrd
or
or
sbb
cli
inc
cmp
ljmp
sub
pop
jne
int3
leave
mov
mov
add
and
cld
mov
vpaddd
cli
jb
push
jne
add
loopne
and
pop
fsub
push
adc
inc
repnz
sub
nop
scas
je
cmp
add
xor
push
or
pop
shr
cli
cli
inc
dec
ret
jl
push
and
clc
jbe
pusha
jo
in
xchg
jo
mov
inc
adc
and
mov
or
jmp
jmp
pop
lock
js
call
push
popa
and
clc
add
or
jno
sbb
mov
sbb
lock
mov
testl
cmp
inc
inc
jb
addl
or
push
xchg
cld
outsl
test
ret
in
add
mov
add
add
repnz
ret
cmp
aam
shll
add
jb
movzwl
out
sub
lea
xor
mov
add
sti
out
jo
cltd
cmp
jne
mov
hlt
add
add
movsb
add
and
inc
mul
add
add
subl
loopne
cmp
xchg
in
dec
rcll
sti
call
cmp
fstpt
int3
shrb
inc
adc
inc
mov
call
push
fcoms
dec
sub
stos
add
add
hlt
and
clc
lret
and
outsb
aam
push
sahf
or
ret
incl
pushl
push
and
fstpt
inc
pop
cmp
fiaddl
xor
lock
add
xchg
or
xchg
sbbb
lock
or
adc
pop
ss
push
fiaddl
or
push
pusha
add
mov
add
mov
inc
lock
pusha
pop
mov
pusha
pushf
ds
mov
lock
pop
pop
jl
clc
and
and
push
pop
cltd
jecxz
cli
stos
push
add
mov
and
pop
mov
jnp
aaa
jnp
sub
pushl
je
outsb
lret
jnp
repnz
std
inc
ret
add
xchg
and
incl
dec
inc
or
add
inc
pusha
adc
inc
les
or
xchg
and
call
lret
icebp
mov
sbb
cld
rol
sub
mov
pusha
xchg
je
cmp
xorb
jg
pusha
mov
add
pushf
pusha
pop
adc
push
shrl
xor
aas
inc
jmp
and
adc
xor
xor
mov
mov
mov
aam
jne
aam
pusha
mov
addb
and
bound
out
adc
push
ljmp
dec
or
add
sub
repz
push
or
sbb
les
jp
dec
sbb
lock
adcl
inc
call
push
jmp
sub
xor
or
ja
add
pusha
roll
movsb
pusha
sub
and
jmp
sbb
xchg
pop
inc
movsb
jne
pusha
das
push
lcall
xchg
outsb
jg
adc
push
xchg
mov
pusha
je
xchg
shrb
or
mov
dec
clc
add
adc
jne
js
jo
push
push
lock
jmp
sub
add
lock
adc
inc
push
xor
adc
notb
push
inc
xchg
pusha
enter
repz
add
fidivl
loopne
stos
les
and
test
xchg
push
shlb
xchg
xor
loop
rcrl
add
jl
nop
bnd
jle
mov
lahf
shl
fcomps
aas
pop
lea
mov
xchg
jmp
add
mov
imul
cmc
cmp
jmp
cltd
cmp
in
xchg
fs
es
or
subb
std
mov
ret
jo
push
sbb
and
test
addb
dec
adc
sbb
call
lea
sbb
mov
sbb
test
pushl
push
orl
add
loope
fldt
je
and
jp
and
add
xor
dec
push
clc
outsl
test
mulb
scas
push
add
pop
xor
mov
orb
or
jno
add
dec
outsl
push
ja
add
pop
inc
fdivrl
or
push
cld
lcall
xor
pop
jns
adc
mov
push
jb,pt
mov
ja
mov
pushf
imulb
mov
xor
and
add
jo
or
call
fidivs
sbb
call
jo
dec
jb
adc
cmp
scas
mov
push
outsb
jmp
or
out
jo
repz
pop
jno
test
popf
sar
jo
or
call
jmp
mov
and
sbb
test
repnz
add
decl
mov
mov
inc
mov
jns
mov
pop
rcl
outsl
jo
add
add
or
or
repz
pop
mov
addb
add
push
pop
cmpsl
dec
ds
mov
call
incl
jae
je
clc
jbe
daa
icebp
and
add
jmp
or
add
push
jo
adc
ss
inc
decl
xor
fnsave
and
je
dec
pop
cmc
hlt
mov
mov
xchg
pop
jno
pop
into
cmp
add
mov
inc
cltd
mov
push
aaa
inc
xor
xchg
ljmp
jmp
mov
sbb
cmc
ljmp
inc
into
jb
je
sub
incb
xchg
add
into
mov
jae
cmpb
cmp
adc
cmp
jne
mov
xor
lock
jo
pop
cmp
add
jle
testb
push
loopne
xchg
and
rclb
dec
pop
push
xchg
call
adc
int3
fildl
cmp
add
mov
cld
mov
and
dec
loopne
adc
aam
lea
mov
andl
jle
jb
fimuls
out
inc
and
idivb
jbe
adc
sbb
ja
xor
inc
movb
jnp
icebp
xor
mov
dec
hlt
mov
sbb
lds
jne
call
fs
int
mov
aaa
insb
fbstp
je
je
mov
jne
mov
adc
mov
jle
or
jg
jne
or
lea
cmpb
jg
mulb
lea
push
sbb
jmp
mov
add
sbb
adc
fsub
outsl
push
outsb
cwtl
mov
jmp
inc
add
mov
jp
je
or
cmp
cmpsb
or
or
cmp
mov
outsl
idivb
inc
mov
jo
inc
add
push
jmp
inc
mov
add
sub
lcall
les
add
inc
mov
rorl
test
aam
pop
mov
and
mov
mov
inc
push
adc
cmpb
jbe
je
adcb
xchg
or
ja
icebp
mov
pop
or
mov
mov
or
je
cmp
xor
das
xor
push
push
xor
push
call
mov
cmp
adc
mov
sbb
xor
ljmp
pushl
pop
call
xchg
dec
pop
add
mov
jo
ret
lock
adcl
fbld
inc
jmp
pop
push
add
lea
scas
push
pushf
push
lock
jo
mov
xchg
bound
push
push
aaa
mov
mov
insb
jb
call
sub
call
adc
fdivrs
add
je
add
ret
dec
cwtl
jle
mov
faddl
mov
or
jne
movsb
xor
clc
mov
pop
sbb
cs
inc
jl
loop
jo
cmp
and
mov
push
inc
ret
push
cld
adc
icebp
inc
or
mov
lock
fdivp
push
mov
pop
imul
in
cmp
adc
inc
movsb
add
add
xorl
xchg
clc
call
test
cld
je
xor
jbe
cs
std
adc
or
pop
scas
outsb
popw
adc
xchg
subb
fsubl
clc
jo
push
mov
jne
xchg
sbb
add
add
inc
inc
divl
inc
adc
and
sub
incl
pop
xor
add
add
jno
add
inc
xchg
push
decl
lock
xorl
adc
push
jno
nop
ss
add
adc
lock
addb
adc
push
push
adc
push
push
or
push
sub
xchg
add
push
push
lods
lock
jg
je
inc
xor
jbe
mov
and
in
push
pop
cmpsb
lock
mov
push
mov
push
add
add
add
adc
add
js
fwait
lret
or
or
lock
scas
icebp
ljmp
andb
mov
aaa
add
xor
jg
and
cli
mov
clc
adc
add
add
je
call
cli
inc
rcrb
mov
sub
sbb
fsubrs
shll
loop
or
mov
fsubrs
dec
cmp
xor
or
pop
pusha
and
ljmp
mov
inc
mov
repz
inc
xor
push
add
xor
jg
shr
push
ss
neg
adc
and
ret
mov
sar
mov
jno
test
mov
mov
cmp
jle
mov
jo
rolb
lret
inc
call
adc
push
push
outsl
clc
sbb
cltd
mov
dec
or
mov
push
cmpsb
lock
push
data16
add
rclb
and
movzwl
adc
mov
and
dec
mov
mov
inc
add
fcoms
lds
mov
and
repz
nop
push
push
pop
data16
adc
sti
ret
ja
add
push
pop
and
mov
or
jg
lea
call
and
inc
sbb
pushl
icebp
add
mov
loopne
sbb
mov
mov
std
ljmp
sbb
icebp
subb
lock
rorb
cmpsl
pushl
aas
pop
clc
lods
test
xchg
jge
movb
mov
push
stos
aad
and
call
lock
aam
pop
inc
jle
pop
sub
jne
dec
mov
rclb
les
loope
cmpsb
xor
inc
pusha
pop
inc
sar
movsb
movsb
dec
add
jg
movaps
shlb
clc
bound
add
call
cli
inc
aaa
or
pop
push
mov
popa
xor
cmp
xor
test
pop
xchg
dec
test
add
mov
out
mov
sbb
and
sub
cmc
xor
aaa
shll
push
scas
mov
or
mov
jbe
add
add
ret
sub
add
push
movsl
pop
push
and
sub
fidivs
jmp
cmp
cmpl
je
stos
xchg
cmp
fstpt
mov
jmp
push
std
inc
clc
scas
mov
mov
push
jb
and
or
mov
icebp
or
testl
jle
testb
jg
rorb
out
push
fisttpl
push
adc
jb
inc
push
icebp
or
add
mov
xchg
std
or
outsb
cmp
push
mov
mov
jne
push
test
dec
js
pop
mov
pop
push
inc
stos
mov
idiv
insl
hlt
test
jl
add
decb
jne
push
xchg
jg
inc
xchg
fwait
mov
dec
mov
sub
je
adcl
jne
push
jmp
lods
andb
adc
or
xor
je
je
mov
mov
push
lea
pop
mov
push
xchg
adc
mov
push
or
loopne
pop
cwtl
mov
mov
xor
mov
sub
lea
sub
push
test
mov
fmuls
jne
dec
clc
dec
dec
mov
sub
mov
out
jecxz
add
mov
mov
push
cmpl
aad
lcall
fmul
repz
notb
dec
add
loopne
jg
lock
add
mov
call
jmp
mov
jmp
jbe
loopne
cmpsb
out
mulb
push
ja
sahf
cwtl
jp
jne
jle
cmc
popl
jg
add
sub
cs
xor
pcmpeqw
shrb
cltd
cmp
je
neg
sbb
and
jb
dec
clc
cmp
test
xor
push
mov
je
ret
pop
ret
push
push
pop
cwtl
add
addr16
loop
xor
xor
push
mov
outsb
jmp
int3
xchg
mov
out
call
hlt
sbb
push
daa
fwait
in
call
mov
or
adc
inc
and
pop
inc
ss
clc
jl
dec
clc
ljmp
jge
movb
mov
shrl
push
or
jg
rcl
add
clc
pop
jne
movl
sahf
adc
inc
xor
pop
mov
push
sbb
cmpb
push
cmovns
out
scas
mov
lock
push
xor
int
out
lock
call
daa
icebp
aas
adc
data16
dec
jmp
xor
out
add
mov
push
jle
rorb
or
push
adc
mov
push
push
or
fdivr
adc
xchg
adc
xor
mov
or
inc
dec
jo
lock
call
xchg
mov
push
mov
ljmp
fcoml
cs
push
mov
inc
mov
adc
push
push
jmp
or
jbe
call
push
pop
add
jle
mov
adc
adc
addr16
inc
shl
pop
xchg
addb
lea
dec
jb
push
xchg
push
push
inc
insl
sti
or
push
test
cmpl
aaa
lcall
and
subw
out
inc
add
pop
mov
jl
sbb
dec
ret
lea
dec
loopne
dec
sbb
xor
or
push
call
sub
clc
add
fsubl
fsubl
aad
fidivrl
test
fs
jne
or
or
inc
xorl
in
cwtl
cmp
pop
jbe
add
sub
clc
out
es
xchg
mov
sahf
mov
xor
je
jbe
call
mov
add
ret
jbe
hlt
addl
mov
clc
repz
cmp
lahf
rolb
test
or
fidivrs
cmp
mov
lret
rcll
test
mov
xorb
dec
je
jo
lock
add
push
xor
out
pop
jl
add
jne
faddp
inc
or
mov
test
xor
adc
jmp
idivb
jmp
mov
je
sub
push
clc
mov
fimuls
or
adc
cltd
hlt
or
or
inc
push
and
lock
lods
mov
push
jl
or
fiaddl
gs
or
ret
push
adc
push
mov
or
lcall
shrl
inc
sti
jg
sub
jle
inc
hlt
cld
lock
addl
ss
aam
mov
push
fsubrp
rolb
xchg
mulb
adc
adc
pop
mov
lock
inc
bound
int
jmp
call
adc
pop
pop
call
ret
pop
xor
and
push
lock
jmp
repnz
rorl
es
or
jg
dec
pop
sbb
push
mov
sub
xchg
and
sarb
or
fbstp
loopne
in
call
push
ret
or
lcall
add
pop
mov
and
test
cmpsb
or
lods
testb
ds
push
outsb
add
std
pop
jb
dec
jo
fimuls
inc
int3
push
add
callw
jnp
test
ficomps
mov
mov
jl
cld
push
repz
add
cs
icebp
lods
or
es
add
and
mov
scas
fiadds
sbb
test
sbb
clc
mov
adc
jb
out
imull
jne
cmp
stc
pop
jmp
fbld
in
aas
jge
sub
dec
xchg
call
add
jl
mov
call
call
cmp
fs
lea
jge
push
sbb
dec
push
call
xchg
mov
mov
rolb
mov
call
or
je
add
push
jb
orl
mov
cmp
lea
lret
lea
cld
ja
outsb
subb
add
add
push
or
mov
sub
das
push
lea
xchg
mov
idivb
add
jg
lret
cmpsb
and
or
cmp
mov
mov
pop
out
fidivs
or
dec
sarb
aaa
sahf
jmp
or
sbb
out
jbe
daa
rcrb
xor
subl
dec
movzwl
add
lea
jbe
push
sbb
jp
sahf
dec
out
fcoms
jge
mov
adc
cmp
ja
testb
jne
sub
push
jae
adc
lea
inc
jb
rcr
aaa
pushf
mov
xor
dec
sti
punpckhdq
mov
lret
push
aam
loopne
cmp
mov
sub
cld
ja
int
cmpsb
and
scas
rorb
jne
mov
jne
je
jb
mov
loopne
fbstp
or
mov
sbb
cmp
jg
sub
mov
ret
mov
imul
add
mov
push
sbb
cltd
ss
mov
sarb
cmp
inc
fcoms
call
mov
push
std
adc
mov
loop
mov
enter
sti
sbb
pop
sub
decl
mov
jmp
clc
pop
mov
mov
scas
sbb
insb
inc
ret
call
data16
rcrb
int3
call
cs
mull
subb
push
xlat
add
pop
push
std
cmp
test
dec
addl
adc
aas
push
stos
inc
jb
lock
sbb
aam
pop
lea
adc
cmp
data16
mov
mov
jle
pusha
divb
lea
cmp
cmpb
inc
test
out
icebp
adc
and
xorl
inc
scas
pop
out
mov
enter
jmp
lods
push
or
mov
ja
jge
sub
je
call
adc
lock
ficoms
aas
jne
jmp
xchg
add
leave
js
and
pop
scas
out
sub
mov
push
push
imulb
or
call
clc
mov
add
xor
cmp
jge
mov
pop
daa
cmp
ss
push
addb
inc
add
adc
mov
xchg
push
or
in
push
mov
add
add
or
push
push
ss
mov
icebp
push
je
inc
or
addb
jne
mov
in
push
or
sbbl
push
add
mov
sbb
test
lods
fbstp
sbb
xor
push
push
mov
pop
mov
pop
clc
add
inc
cmp
hlt
int
pusha
pop
mov
inc
pop
les
mov
pushl
jb
inc
jle
cmp
es
lock
cmp
lock
cwtl
or
fs
lds
and
dec
adc
call
and
loope
xchg
cmp
xlat
test
loope
push
call
cmpsb
hlt
push
pop
push
cmp
and
hlt
mov
popa
inc
push
insb
in
push
test
mov
sub
jl
lock
or
sahf
fwait
add
rclb
and
pop
xor
aaa
icebp
or
in
jle
push
in
aas
inc
inc
add
fisubrs
jnp
add
adc
ficomps
lock
adc
lock
sbb
xchg
cmp
aaa
dec
emms
xor
mov
adc
mov
call
sub
or
jae
xor
test
fs
mov
sub
sub
or
in
jae
push
xchg
out
inc
data16
mov
adc
cmpsb
scas
lea
pop
out
adc
pop
inc
jle
in
cmpsb
sub
mov
pop
hlt
push
fstpt
or
or
and
jmp
fiadds
pop
add
jo
cmovne
insb
sbb
mov
jmp
push
fdivrs
or
lea
into
testb
ss
loop
mov
rcrl
es
push
jb
push
xor
jle
add
adc
call
out
or
jmp
outsl
js
clc
cmp
push
cmp
je
cmp
je
cmp
je
fdivr
pushl
outsb
lock
jmp
mov
jmp
mov
jmp
mov
inc
out
hlt
or
mov
aaa
mov
xor
in
clc
mov
movsbl
call
sub
dec
cmp
mov
pop
push
aad
mov
dec
test
add
sti
std
jne
into
pop
repz
jg
jnp
jns
cmpsb
ljmp
mov
mov
pop
je
or
idiv
mov
aam
pop
je
xorl
and
scas
sar
push
lea
shlb
sbb
fimuls
ret
mov
add
jp
jle
sti
daa
or
fucomip
clc
out
mov
int3
leave
mov
cmp
cs
cs
outsb
movsl
jmp
inc
iret
daa
xchg
aam
clc
lea
jb
in
mov
outsl
sub
ret
pop
xor
inc
call
dec
movsb
sbb
ds
push
inc
xchg
shrl
imul
pop
orl
scas
fmul
fisubs
aas
sahf
jbe
xchg
push
int3
test
adc
notl
mov
addl
inc
pop
cmp
push
dec
and
loopne
testb
es
mov
or
rorl
das
mov
push
add
sbb
xchg
cmp
xor
rolb
loopne
push
call
fwait
es
xchg
scas
add
ljmp
call
pop
add
or
xchg
loope
mov
sbb
cs
popa
pop
pusha
jnp
lret
mov
cmp
popa
mov
addb
push
add
jp
sub
hlt
lret
fdivp
cmc
in
adc
rcl
pop
pop
cltd
mov
jmp
or
xorb
dec
adc
loop
or
dec
pusha
jmp
sbb
outsb
jbe
aad
add
lea
es
movb
lcall
aam
add
std
and
jb,pt
adc
add
xor
or
lods
adc
fimuls
lcall
adc
adcl
scas
dec
sub
pop
cmc
or
movsl
cld
pop
mov
inc
mov
adc
aaa
jo
or
jne
pop
push
ljmp
or
loopne
sbb
push
mov
cmp
and
xchg
and
adc
dec
adc
inc
cmp
inc
mov
dec
or
sub
sbb
pop
jno
pop
lods
clc
pop
test
inc
je
inc
fdiv
scas
stos
pop
stos
es
jp
push
sbb
sub
mov
jp
jne
push
cld
insl
pop
cmp
push
lea
adc
call
out
inc
cli
jg
test
mov
test
add
inc
call
loope
or
push
out
push
or
fs
mov
addl
mov
clc
push
inc
icebp
jg
inc
or
sub
or
out
xor
stos
cmp
or
out
lock
fsubp
or
fwait
scas
or
call
push
sub
into
into
push
call
add
sub
adc
into
jne
out
xor
cmp
call
inc
add
jbe
add
pop
mov
call
sub
dec
push
imul
sbb
jb
fimuls
or
lea
pop
add
xor
mov
int3
test
cmpb
decb
addb
sbb
imul
mov
cmp
aaa
call
cmc
notb
sbb
cli
xor
add
test
or
cld
mov
fcmovbe
popaw
mov
jae
jo,pn
subl
xor
dec
xchg
shll
sub
inc
orl
add
rorb
xchg
xor
or
test
test
jl
add
jb
inc
mov
push
fcmove
sub
lea
arpl
xchg
cmp
jne
xorb
subl
fiaddl
shl
add
jae
xor
outsb
add
rcrl
sbb
ds
jbe
sahf
daa
jmp
loop,pn
xor
mov
pop
lcall
clc
pop
push
push
dec
sbb
cmp
out
lea
push
decl
les
push
jmp
pop
inc
or
repnz
adc
push
push
je
pop
mov
bnd
je
cmp
lea
sbb
cmp
ja
data16
adc
js
jne
sub
inc
cmp
xchg
jmp
push
mov
sub
adc
hlt
inc
add
stc
lcall
clc
gs
jb
test
jne
jge
cli
sub
sub
sbb
hlt
scas
in
xchg
adc
test
inc
lock
fldt
xchg
outsl
mov
cld
dec
or
add
test
fsubl
xchg
and
stc
jne
outsb
sub
add
lock
js
stos
cmp
mov
ja
add
add
cld
sbb
xchg
inc
mov
pop
adc
test
jle
cmp
bound
outsl
pusha
add
sti
outsl
ljmp
xchg
push
push
mov
je
subb
mov
add
mov
ja,pn
int
into
hlt
push
ss
push
pop
pusha
aaa
add
add
jmp
mov
mov
mov
add
mov
sub
test
cmp
call
cmpsb
cmp
stos
add
and
mov
in
icebp
sbb
cmp
call
mov
adc
cld
add
push
mov
cmp
or
or
rorb
ja
repz
push
push
ss
xor
loopne
sub
inc
sbb
xchg
jecxz
mov
cld
jge
xor
je
pushl
je
or
notl
xor
iret
out
mov
push
shl
xchg
adc
inc
out
push
hlt
push
data16
and
pop
stos
jmp
dec
mov
addl
data16
das
add
stc
adc
cld
cmpsb
dec
sahf
push
add
or
adc
xchg
std
sbb
add
mov
mull
sbb
sbbl
push
fisttps
mov
jbe
fcomps
clc
out
mov
outsb
cli
cmp
push
add
mov
inc
push
push
in
decl
cwtl
cs
push
mov
pop
jp
stos
fisttps
je
incl
inc
je
push
test
xor
add
outsb
ljmp
call
add
add
add
push
loop
sahf
scas
call
js
cs
inc
enter
sub
push
sub
add
cs
push
xchg
cmp
mov
mov
add
nop
push
pop
sub
daa
hlt
pop
out
aaa
adc
jle
push
push
push
cmp
and
xlat
adc
add
loope
pop
incb
out
adc
icebp
ljmp
adc
jmp
mov
repnz
cmp
test
js
repnz
and
icebp
les
cmp
icebp
mov
das
divb
daa
push
lcall
push
scas
call
loop
les
pusha
mov
inc
pop
sub
add
add
jae
cmp
sbb
adc
out
out
orb
add
je
in
pop
mull
lcall
movsb
jbe
pop
inc
das
data16
ljmp
cvttps2pi
xor
iret
lahf
decb
xor
push
mov
mov
jne
push
or
adc
add
or
fistpl
es
ret
test
add
push
or
clc
rcrl
mov
ret
cmpsb
clc
ficoml
push
je
imul
loopne
mul
add
sub
pop
into
dec
jne
mov
ficoml
pop
add
add
iret
mov
mov
jo
data16
xchg
ficoms
mov
data16
js
add
pop
add
jg
outsl
imulb
mov
push
or
push
push
stos
andb
data16
push
xor
orb
mov
inc
pop
and
xchg
xchg
repz
inc
push
push
dec
xor
fidivl
test
add
push
jb
pop
mov
mov
mov
cmpb
decl
fsubl
pop
incl
test
xor
subb
inc
and
cmp
xchg
add
adc
xchg
pop
in
fiaddl
cs
pop
test
add
adc
scas
jno
dec
mov
add
push
jb
dec
cmpsl
call
adc
mov
cmp
mov
push
mov
mov
sarb
mov
shrb
jg
and
das
add
call
jo
inc
rolb
enter
mov
out
aaa
xor
push
push
call
es
mov
sbb
mov
or
les
add
xchg
jo
jns
jp
addb
sub
sbb
out
pop
js
mov
push
mov
scas
mov
push
push
push
loope
lock
sub
or
orb
mov
push
pop
sbb
push
jbe
scas
jbe
jg
push
std
outsb
sub
push
xor
pop
add
mov
call
xor
jmp
sub
pop
scas
push
sahf
es
call
jbe
mov
je
into
sub
pop
xchg
mov
add
addl
fucomip
pop
stos
add
xor
daa
shl
call
call
aaa
jmp
xor
cmp
sub
movsb
jg
mov
pushl
cmp
mov
lret
mov
jns
xchg
mov
jl
mulb
pop
sub
xor
call
mov
push
push
cmpsb
aam
shlb
lock
pushl
cmp
and
push
xlat
outsl
nop
mov
je
push
test
sub
in
sbbb
sub
mov
adc
mov
mov
lds
cmpsb
mov
lods
xchg
push
mov
leave
xor
outsl
mov
dec
push
or
lret
dec
mov
add
repnz
into
pop
jae
mov
inc
test
jne
pop
aam
loopne
inc
ret
push
xchg
jo
pop
jb
cli
or
adc
je
cmpsb
or
xorl
cli
cmp
or
push
or
push
mov
add
and
xorw
jmp
movsb
sti
fildl
call
scas
pop
mov
mov
dec
call
jo
mov
dec
add
shlb
adc
cwtl
js
push
pop
call
fdivs
cmp
cmp
adc
adc
push
jb
loopne
adc
fmuls
inc
inc
jb
adc
xor
jb
loopne
aad
popf
inc
push
call
mov
movsb
mov
and
cmp
lods
lods
cld
ficomps
or
xchg
adc
lea
ds
mov
rcrb
leave
ss
shlb
movsb
fisubs
sbb
mov
subb
dec
mov
jecxz
xchg
test
addr16
idivb
subl
mov
sbb
adc
outsl
sar
cmpl
sbb
out
cmpsb
xchg
jnp
mov
testl
je
mov
pop
push
lea
js
xchg
cmp
shlb
ds
mov
addr16
in
mov
jl
jle
fiadds
push
push
lea
loopne
ret
add
lret
mov
ret
cs
cmp
or
shl
add
cmpsb
push
pop
aam
xchg
jecxz
lret
push
stos
shlb
lods
cmp
adc
push
call
call
dec
lea
and
stc
inc
aam
mov
xor
xor
int3
sti
scas
or
rorb
in
jg
jp
dec
and
inc
mov
faddl
xchg
push
push
call
stos
lock
or
pop
clc
out
fisttps
add
push
fmull
lahf
faddp
clc
push
jb
jle
sbb
inc
add
inc
call
sub
fucomip
push
mov
jecxz
pop
into
lock
cli
mov
jne
cmp
mov
testb
mov
lahf
mov
xor
sbb
sub
mov
into
or
call
jge
jne
add
je
dec
dec
insb
mov
xor
push
outsb
in
sbb
fisubrs
scas
out
pop
mov
insl
clc
xchg
hlt
jmp
test
xlat
bound
aam
es
daa
xor
je
mov
or
rclb
adc
cli
imul
sbb
inc
push
cmp
lock
orb
clc
loop
movhps
adcl
mulb
dec
push
add
push
fidivs
mov
imul
pcmpgtd
mov
jle
dec
clc
fadd
push
test
lock
jge
dec
inc
sbb
xor
add
sub
pushf
xchg
adc
mov
sbb
inc
repz
outsl
cs
fimuls
inc
notl
jmp
jmp
dec
mov
push
ficoml
mov
lahf
repnz
mulb
xor
mov
pop
pop
push
adc
inc
imul
xor
sub
xchg
push
inc
xlat
push
and
push
loopne
pushf
sti
cmp
insb
lock
rorb
hlt
adc
punpcklwd
inc
mov
andl
sub
push
shrb
rol
xchg
fdivs
add
push
push
sahf
out
add
xor
cmpsl
push
cwtl
ss
inc
insl
mov
mov
cmp
je,pn
outsb
add
mov
orb
flds
adc
inc
setae
mov
cltd
subb
push
es
mov
addr16
or
dec
dec
cli
add
fimull
add
movl
fidivrs
je
orb
das
shll
pop
xor
cmp
sub
push
arpl
mov
push
cltd
mov
and
pop
mov
mov
std
movzwl
jl
test
and
adc
hlt
fsubp
js
cmp
mov
adc
stos
call
ret
push
jb
and
lock
adc
sbb
adc
mov
cmp
pop
jo
push
add
je
test
scas
inc
sbbb
js
mov
jmp
mov
mov
push
jb
fs
shrl
push
push
mov
add
inc
push
add
outsl
clc
jno
jp
adc
inc
jl
push
jbe
inc
inc
pop
sarl
insb
lea
sbb
lar
popf
out
sub
adc
dec
js
lds
mov
loop
jle,pt
push
cltd
sbb
or
cmp
mov
sbb
rolb
jmp
lcall
push
mov
aas
mov
sar
jbe
hlt
test
int3
stos
mov
fistpl
outsb
push
shl
lret
adcb
xor
imul
in
and
scas
inc
push
mov
xor
dec
xchg
add
imul
daa
sbb
jp
outsl
lahf
aaa
call
pop
sub
test
lret
mov
or
cmp
outsb
jb
jmp
jbe
std
sub
inc
mov
mov
jmp
outsb
dec
repz
es
movl
add
jae
or
adc
jae
pslld
push
push
xchg
adc
pop
cmp
cmp
daa
ds
test
test
hlt
in
iret
add
adc
call
fcmovnb
repz
push
jle
jl
cs
push
retw
lea
imulb
hlt
call
mov
inc
push
mov
std
pusha
add
mov
push
or
push
mov
add
cmp
je
push
call
and
adc
push
dec
dec
lods
call
adc
mov
push
iret
or
xchg
and
cwtl
pop
ds
pop
lret
mov
imul
aam
cmp
mov
xor
jmp
push
pop
test
dec
inc
dec
push
ret
call
pop
and
jbe
inc
jo
mov
mov
adc
lds
mov
xchg
mov
pop
ja
inc
sub
dec
das
ja
aas
jb
call
call
or
mov
ret
lods
hlt
inc
pop
out
mov
orb
and
cmp
and
lea
xor
xor
push
stos
lret
adc
pop
push
push
fmuls
jg
sub
adc
xor
sub
mov
enter
mov
int3
neg
fidivs
jne
es
mov
je
push
xor
add
sbb
jmp
push
call
or
push
test
mov
jne
jbe
dec
hlt
lret
jmp
jne
mov
cmp
int3
mov
pop
cmpsb
ljmp
imul
shll
fs
popa
jge
pop
decb
scas
shr
sub
dec
xchg
in
das
pop
outsl
testl
xlat
subb
in
mov
dec
leave
lock
filds
loop
jg
jne
pushl
mov
mov
lock
and
push
shll
jecxz
imull
loop
hlt
imulb
push
pop
xchg
loopne
inc
into
pop
sbb
das
dec
stos
into
mov
out
push
mov
fs
mov
pop
pop
imul
cmpb
dec
xchg
mov
shrb
into
cwtl
and
xchg
test
mov
pop
aam
mov
call
sub
jmp
xchg
push
and
stos
movsl
out
xchg
cmpsb
sti
push
ret
dec
xorl
inc
mov
loopne
insb
hlt
dec
pop
dec
inc
movsl
mov
mov
rolb
rcr
pop
dec
andb
adc
and
iret
jle
and
mov
pop
jle
out
dec
pushl
enter
shll
cld
mov
pop
daa
mov
in
popa
outsl
test
clc
push
push
into
xchg
pop
xchg
mov
sbb
movsb
cld
lock
repz
mov
ret
sbb
pop
test
sub
subb
mov
or
lds
inc
call
dec
push
adc
call
xor
pop
out
aas
push
pop
and
push
ljmp
jg
or
sbb
pusha
xor
loope
inc
jbe
nop
es
scas
fidivs
fldt
jmp
ss
mov
mov
jmp
or
fdivrs
shll
cmpsb
shll
or
shrb
clc
lcall
pop
push
movsb
ficomps
inc
mov
fisubl
lods
cmp
adc
out
stos
cs
popa
aam
dec
xchg
lods
fsubs
clc
outsb
mov
inc
repz
cs
sub
adc
push
dec
or
push
scas
pop
push
mov
pop
mov
aam
es
jnp
inc
sub
enter
inc
or
les
mov
sbb
pop
sub
rcrl
push
cs
mov
xchg
addr16
jo
pop
rcr
insb
cmp
or
mov
int3
clc
or
cs
shlb
pusha
push
jmp
jo
jnp
rcr
lahf
xchg
mov
pop
jnp
cli
mov
pop
add
testb
fsubl
scas
mov
insb
xchg
dec
push
data16
icebp
push
inc
dec
cmpsl
fsubs
jle
push
shlb
inc
dec
push
pop
cwtl
add
mov
push
neg
insb
stc
xor
push
inc
in
sub
jne
mov
rol
aad
cmpsb
pop
hlt
adc
jge
xlat
fidivrl
dec
inc
pop
insl
inc
notl
ss
inc
je
push
cmpsb
scas
lea
inc
or
das
mov
lock
or
push
pusha
push
jbe
adc
inc
adc
std
jmp
push
xchg
loopne
mov
push
pushf
push
adc
jo
mov
sbb
aaa
loopne
pop
mov
cmp
rorl
push
add
lcall
mov
jbe
call
mov
call
push
xchg
xor
incl
mov
mov
or
ljmp
pop
mov
xchg
add
pop
lock
hlt
popf
into
xchg
pop
pushl
pop
repz
in
dec
xor
test
cmp
filds
movsb
test
jo
call
push
hlt
pop
insb
xchg
or
lea
outsl
test
mov
dec
mov
mov
and
testb
test
xchg
push
loop
inc
subl
sub
lret
pop
mov
push
imul
hlt
add
call
sub
int3
fldt
jne
mov
dec
dec
clc
fimuls
push
mov
adc
mov
and
dec
insb
iret
lret
pop
dec
int3
push
xor
dec
cld
mov
out
push
pop
cmp
out
push
call
popa
and
lds
or
mov
mov
jbe
das
cld
jns,pt
outsb
rolb
fstl
mov
call
into
and
push
mov
es
pop
mov
lods
add
cmp
push
mov
orl
ret
je
mov
imulb
ret
fistpll
lcall
movsl
mov
sub
mul
and
mov
cs
prefetch
xor
or
push
xchg
test
std
inc
push
ret
test
inc
mov
ret
mov
addl
mov
xor
pop
imul
mov
or
sahf
mov
iret
add
sbb
mov
repnz
les
or
xchg
lret
push
cmpsb
fisubrl
push
aas
pop
test
cmp
push
or
sbb
test
stc
mov
jg
pop
mov
dec
jle
loopne
jl
mov
dec
or
iret
mov
orl
ljmp
adc
push
decb
dec
dec
decb
stc
mov
lock
push
mov
add
push
rolb
xor
dec
sub
or
ja
inc
pushl
pop
mov
mov
cmp
lods
in
mov
incb
or
ljmp
inc
and
sub
jne
mov
sbb
out
cmp
add
and
jne
inc
dec
jne
pop
mov
es
lret
jp
and
push
mov
cli
mov
xor
inc
mov
pop
pop
add
jbe
fdivrp
shlb
data16
jmp
loopne
dec
jne
fdivr
ja
inc
push
je
shr
mov
decl
xchg
sbbl
mov
loope,pt
rcll
or
jne
cmp
add
cmpb
dec
cmc
mov
loopne
cli
and
rorl
ds
xchg
outsl
jmp
mov
addb
mov
mov
push
mov
add
out
mov
mov
repz
cmp
leave
cltd
mov
pushl
push
push
add
push
jl
or
out
mov
mov
push
inc
sbb
hlt
add
add
addr16
cmpsb
scas
sub
mov
cmp
ja
inc
mov
iret
scas
add
int3
sarb
fisttps
jne
loop
incl
or
ret
add
incb
inc
sub
ja
out
incb
das
int
test
mov
mov
ret
lock
sar
and
cmp
jb
sbb
pop
inc
add
mov
inc
addl
cmp
inc
mov
push
push
shl
aas
call
jg
adc
cld
mov
push
push
cmc
dec
sti
rcrb
ret
je
push
mov
std
ds
mov
mov
mov
ss
test
mov
jl
jb
and
push
push
cmpsb
pop
pop
outsl
sbb
add
add
jb
add
stos
mov
xchg
dec
out
xor
mov
mov
ret
jmp
push
fildl
adc
and
test
inc
cli
das
push
xchg
and
xor
mov
negb
test
fsubs
jl
inc
sahf
lea
push
xchg
mov
movsb
mov
cs
test
ja
fidivrl
adc
in
push
call
or
inc
mov
cli
hlt
pop
adc
push
sbb
add
decl
out
cmp
mov
add
cmp
jne
movsl
or
fbstp
divl
push
adc
dec
cmpsb
push
add
mov
cli
xor
ret
je
inc
movsb
push
adcl
jo
push
mov
call
pop
push
adc
push
mov
pop
xchg
outsb
pusha
mov
cmpsb
add
fs
lods
mov
es
cmp
flds
mov
adc
ljmp
iret
mov
pop
mov
loop
push
mov
xor
add
iret
pop
dec
push
cmp
cmp
scas
or
jbe
call
dec
fstpt
test
push
add
je
push
sbb
cld
xor
pop
push
call
push
push
pop
push
xor
inc
std
icebp
loopne,pt
push
repnz
add
sbb
inc
imul
testb
adc
repnz
push
call
adc
add
pop
xor
lock
mov
cmp
ret
mov
jle
in
jo
outsb
test
inc
lret
movsb
sub
and
mov
mov
or
clc
faddl
into
call
cmc
add
inc
rorb
mov
sbb
push
hlt
cmp
es
ret
shll
lods
jbe
call
test
das
xchg
jo
xchg
add
lret
add
in
les
mov
pop
dec
or
jp
inc
dec
scas
mov
add
or
mov
add
outsb
into
mov
sarl
scas
call
sbb
dec
or
jl
cmp
rolb
std
inc
push
xor
jmp
cmp
sarb
sbbl
adc
nop
or
push
xor
jbe
insb
add
fisttps
loop
mov
lret
inc
ret
inc
inc
jl
mov
jo
pop
pop
addb
add
mov
add
insb
adc
mov
fdiv
aaa
jl
add
inc
dec
mov
pushf
add
and
addr16
mov
adc
or
and
mov
and
fmul
add
test
int3
add
inc
mov
or
cmp
xchg
subl
mov
push
sbb
xor
xchg
std
out
mov
jl
jl
mov
lea
call
lret
cmp
add
sub
and
addl
roll
inc
cmp
inc
jnp
push
in
mov
cmp
adc
pop
pop
andl
and
test
je
add
call
ds
ljmp
or
sub
xor
adc
ret
lcall
fcmove
jecxz
cli
rorb
dec
adc
cmp
pop
or
orb
mov
stos
fiaddl
test
cmp
outsl
sbb
mov
cmp
cmp
ljmp
rorb
cld
cmp
rol
jne
inc
mov
ljmp
les
mov
sbb
xchg
rclb
test
sti
adc
cli
push
adc
push
add
call
mov
push
xlat
call
clc
ljmp
xchg
scas
push
test
ret
sbb
cmp
jbe
pop
xchg
xor
sub
aaa
add
testb
sbb
fwait
cs
add
or
clc
in
rolb
push
jbe
test
inc
mov
fistl
mov
push
gs
pop
shrb
mov
stos
sbb
mov
enter
push
push
stos
movsb
cmpsb
adc
shlb
add
es
mov
sub
rorb
mov
jbe
inc
in
aam
std
das
rorb
into
call
add
ret
add
sbb
mov
push
xor
mov
jbe
adc
mov
xchg
popa
inc
int
dec
fsub
out
or
stos
adc
jne
push
xchg
xor
xor
das
xor
or
inc
psubsb
dec
add
test
adc
add
testb
dec
cs
pop
sub
rorb
subb
jo
and
adc
jne
mov
and
rcrb
or
je
outsb
push
idivb
jmp
xor
outsl
rorb
xchg
ljmpw
mov
sbb
shlb
sbbb
jmp
out
mov
and
cmp
test
movsb
mov
sarl
jl
les
xor
call
lods
mov
adc
iret
repnz
and
xchg
sub
lods
add
je
lret
push
rol
mov
es
jmp
add
div
test
or
mov
mov
jne
sbb
cmp
sub
jge
pusha
inc
pop
pusha
pop
adc
scas
and
mov
push
in
add
cmp
mov
loop
std
dec
jne
adc
and
xrelease
push
data16
jo
cmpsb
inc
inc
jbe
stc
popa
jb
cmpl
cli
stc
jp
mov
xor
or
pop
or
ret
pusha
push
add
aam
push
lea
movsb
mov
outsb
mov
les
jle
je
fildl
rorb
pop
ss
pop
mov
and
cmp
dec
loopne
jb,pn
or
dec
jecxz
ret
mov
jne
lds
inc
cmp
cltd
sub
cmp
pop
add
test
fcomps
add
adc
push
adc
pop
add
jle
out
adc
add
add
cmp
xchg
stc
pop
pusha
push
inc
jmp
or
clc
stc
push
dec
xchg
xlat
stos
jg
or
cld
shr
loopne
cmp
pop
lods
push
mov
add
mov
pop
mov
cmp
je
loopne
aam
or
sub
or
ljmp
cli
lret
cmp
mov
lea
sub
jge
test
in
sub
cli
cmp
cmp
aaa
jmp
and
movb
ja
and
inc
push
mov
decb
cmc
push
pop
add
add
add
and
and
sbb
jbe
pop
mov
inc
push
cltd
cmp
sti
cli
mov
mov
into
jb
adc
mov
loopne
or
orps
ret
cmpsb
mov
mov
bsf
push
data16
mov
add
add
cmp
add
inc
call
push
mov
push
jb
cmp
call
ljmp
mov
mov
call
mov
xor
or
xor
out
adc
addl
callw
popa
lea
pusha
popa
push
clc
and
cmpsb
or
cmpb
ja
nop
mov
scas
stos
lods
add
cwtl
sbb
mov
push
movb
notl
pop
call
out
in
xorb
popa
pcmpeqw
pusha
sub
xchg
push
jb
popf
in
pusha
adc
pop
popa
cmpsl
in
decb
call
test
sub
dec
js
hlt
jbe
or
insl
pusha
mov
stos
cmpsb
push
and
loopne
push
and
cmp
push
loope
push
adc
sub
call
push
sub
bound
les
shl
dec
ljmp
add
decb
jbe
invd
dec
push
jmp
or
or
incb
and
adc
sub
sub
fbstp
fisubrs
mov
lock
sub
data16
adc
shrl
mov
outsl
in
call
add
aad
adcl
loopne
cmp
ret
ljmp
xchg
jg
sub
ret
jnp
jne
jmp
test
jle
push
or
or
call
sti
out
cmp
jne
add
xor
loopne
cld
bound
sbb
adc
pop
enter
insb
fistl
into
dec
lock
or
pushf
loop
pop
and
sbb
out
mov
in
movsb
pusha
push
push
mov
dec
mov
or
xor
add
in
loopne
fsubrs
decl
jbe
add
adc
testb
je
push
out
pusha
jg
jl
jecxz
jmp
dec
and
push
pop
sub
push
sbbl
add
or
out
or
iret
shl
loop
out
pusha
outsb
xor
jmp
adc
or
fcos
jne
jb
fnsave
movsl
add
or
dec
fistpl
cmp
push
lock
adcb
mov
adc
inc
xor
push
std
push
std
add
xor
addb
in
mov
add
mov
mov
ja
jl
pusha
push
and
es
mov
testl
jo
lcall
or
adc
mov
aam
sbb
ret
jb
xor
test
lret
stos
xchg
ficompl
aas
xchg
int3
test
scas
sbb
adc
or
sub
add
add
inc
pusha
js
jo
icebp
jo
cmpsl
hlt
inc
mov
test
pop
call
cmp
and
adc
sbb
test
xor
call
call
jbe
pop
add
jno
gs
loopne
add
jno
adcl
ljmp
icebp
inc
add
cs
mov
or
jb
clc
mov
shlb
sub
mov
or
xor
mov
inc
push
jo
call
lret
ud0
jp
mov
xor
int
push
lea
push
fiaddl
scas
and
in
push
xlat
and
lock
jp
add
xchg
pop
push
push
and
pop
xor
or
mov
pusha
jb
test
xor
sub
cld
sbb
inc
mov
hlt
ja
xchg
call
aaa
add
lods
call
xchg
cs
adc
inc
inc
sbb
mov
or
test
cld
aaa
push
pop
pusha
xor
inc
call
ss
icebp
fildll
inc
cmp
mov
cmp
jmp
xchg
sub
cld
mov
call
mov
je
testl
ss
inc
inc
mov
adc
or
xor
push
xor
xor
mov
and
cld
dec
sbb
cmpsl
mov
xor
push
pusha
repz
mov
sub
mov
jb
mov
pop
add
bound
adc
loopne,pn
pop
dec
out
add
sub
inc
shrb
sbb
loopne
dec
or
add
pop
mov
cmpsb
xor
mov
mov
push
jmp
dec
inc
lock
lock
cmp
repz
sub
or
setnp
xor
sbb
test
mov
pop
sbbl
adc
jo
or
or
jae
fbld
sub
push
add
push
outsl
mov
dec
and
lods
popa
adc
scas
shrb
pop
xor
cwtl
xor
and
gs
mov
decl
push
loopne
mov
pop
mov
inc
cmp
xor
mov
imul
cmp
scas
or
sbb
cmp
add
scas
addb
push
inc
xchg
add
cmpsl
xor
pop
mov
mov
xor
mov
lea
jg
sbb
push
jle
push
sbbl
add
jmp
mov
push
mov
insb
add
push
imul
fs
jb
adc
fcomip
xchg
and
mov
cwtl
jp
xor
cwtl
sbb
in
lock
aas
cs
push
test
dec
repnz
sbb
push
icebp
in
outsl
shlb
adc
sub
jo
jmp
in
jo
add
add
cld
dec
loopne
js
add
add
push
roll
cld
push
xor
push
push
repz
or
ljmp
add
xchg
outsl
cmpsb
pop
pop
push
fists
xchg
insl
inc
mov
stos
sbb
add
mov
jmp
addl
mov
ret
jg
test
cs
inc
test
and
push
cld
add
sahf
or
leave
incl
adc
pop
fsubrl
mov
jmp
mov
clc
mulb
aaa
xchg
clc
xchg
mov
add
cmpsb
push
pop
ljmp
mov
push
fiaddl
push
push
lock
cld
mov
stos
or
testb
lods
loop
push
les
mov
into
add
cmp
lahf
mov
test
add
push
shll
and
pushl
sbbb
xor
add
mov
jp
sbb
pop
hlt
movsl
ja
jnp
orb
xchg
cmpsb
lcall
loopne
lsl
adc
pop
adc
outsb
mov
mov
addb
push
shll
push
sub
stos
dec
lea
lods
and
int
and
mov
and
push
lds
jno
nop
js
push
pop
ss
outsb
into
data16
ret
loopne
cld
add
adc
mov
cmp
push
inc
enter
mov
and
pop
inc
pusha
mov
push
push
pusha
clc
incl
add
adc
or
mov
les
add
call
ffreep
adcb
lock
xor
xor
fimuls
cmpsl
call
testl
lcall
mov
sahf
in
push
adc
sbb
incb
pop
dec
fadds
dec
testb
adc
xchg
sar
subb
add
outsl
xor
or
adc
xchg
stos
mov
mov
cmc
add
leave
adc
les
jmp
and
mov
neg
icebp
xchg
ss
int3
push
inc
fdivl
fwait
call
scas
in
js
imulb
adc
cld
subb
push
add
adc
and
jmp
jo
call
insl
mov
and
sbb
adc
mov
stos
and
xorb
je
jmp
or
dec
ss
pop
outsb
lock
push
mov
sub
mov
and
xorl
loope
js
jmp
mov
push
pop
pop
mov
je
fs
mov
imul
fidivs
repz
mov
mov
adc
and
lcall
sbb
push
or
add
rclb
push
and
aam
adc
sbb
push
lock
push
stos
addb
push
test
jo
add
push
pop
pop
data16
dec
push
fcmovbe
movb
mov
adc
inc
push
nop
in
dec
stos
xchg
mov
dec
or
test
xor
mov
cmp
push
push
cld
mov
mov
pop
sub
pop
in
sub
or
fdiv
fbld
mov
push
pop
repnz
out
popl
push
cmp
shl
add
or
lea
pop
scas
dec
mov
fmuls
cwtl
or
and
push
push
mov
shrb
and
mov
mov
cmp
int3
add
je
and
lock
subb
add
clc
ss
jne
xchg
das
and
aas
jmp
call
aam
cmp
inc
test
push
lock
into
pop
sbb
cmp
pop
add
lock
lea
mov
out
adc
aam
pop
call
imul
pop
je
sub
and
lret
lock
cld
mov
loope
imul
jne
mov
inc
sbb
dec
mov
out
and
sarl
sbb
add
fisubrl
cmp
clc
in
std
add
adc
adc
add
push
and
lcall
lret
mov
movsb
jecxz
and
pop
ret
incl
inc
jle
ljmp
inc
pop
outsb
addb
imul
fwait
sbb
clc
add
mov
in
push
cmpsb
add
inc
pop
push
movsl
push
inc
js
stos
inc
sub
inc
cld
orps
add
je
call
ret
inc
fsubrs
loopne
xchg
ss
xchg
mov
in
add
xor
and
test
push
cmp
mov
and
xorl
or
xlat
imul
xor
sbb
mov
push
andl
out
aam
scas
add
push
push
push
adc
adc
lcall
and
fucomi
cmp
bound
mov
movsb
subb
mov
add
call
loope
xor
mov
add
xchg
xchg
inc
pop
lods
or
cld
fsubr
add
dec
js
add
jge
push
fcoml
cmpsl
mov
decl
sub
and
xchg
ret
repnz
pop
adc
movsl
inc
and
adc
call
adc
dec
fs
and
lds
bound
sub
push
idivl
cmp
add
xchg
cs
hlt
cmpsb
mov
push
mov
gs
test
or
inc
adc
and
adc
xchg
add
clc
movsb
ds
dec
ret
or
add
jg
loope
out
fildl
xor
pop
insl
mov
js
pop
and
sahf
inc
clc
push
adc
rolb
call
sub
mov
inc
cli
and
sub
das
xchg
les
cs
call
sti
es
cmp
leave
loopne
not
inc
jmp
jb
mov
xor
xchg
cltd
mov
loopne
jle
push
pop
repnz
add
pusha
add
inc
xor
and
add
jo
jbe
mov
add
addb
add
loop
mov
or
sarb
notl
aas
rcr
cmpsl
icebp
mov
xor
add
pop
cmpsl
mov
or
insl
inc
arpl
xchg
add
jp
nop
shlb
rcl
out
pop
std
jbe
sar
adc
cmp
movsb
test
lods
mov
addb
shll
jp
lcall
add
adcb
sub
data16
clc
add
ficoml
lods
outsb
cld
push
pop
outsb
clc
mov
rcll
cld
jl
mov
cld
jbe
inc
lock
xchg
fisubs
add
dec
rclb
push
add
rorb
dec
subb
or
pusha
or
jo
mov
std
out
add
ss
pop
sbb
mov
je
adc
das
jo
int3
mov
adc
pop
fs
sub
lahf
call
clc
or
dec
lock
mov
push
sub
push
mov
mov
jg
ret
lea
pusha
or
int3
sub
dec
inc
stos
pusha
aas
popa
sbb
pusha
daa
loopne
clc
bound
faddp
pusha
adc
add
pop
push
mov
scas
sub
and
jl
decb
pop
das
call
jo
cmpsb
nop
lret
loopne
int
push
jbe
call
jge
loop
into
mov
pusha
add
loopne
cmpb
int3
clc
pusha
and
push
fs
add
inc
rorb
add
mov
cld
idiv
mov
loopne
loopne
popa
jno
loopne
cmpl
sti
jbe
bound
xchg
adc
sub
xchg
call
popa
inc
test
loope
aaa
push
pusha
cltd
or
and
or
ds
mov
push
insb
enter
mov
call
mov
lock
sbb
xchg
loopne
xor
and
adc
jbe
cmp
dec
mov
aaa
sbb
mov
into
lcall
push
sub
xor
jne
je
or
pop
mov
pop
icebp
pusha
test
loopne
cmpsb
push
addl
inc
cli
mov
lret
dec
or
add
push
adc
test
push
add
aaa
test
add
clc
mov
and
int
pusha
pop
adc
or
fiadds
add
stos
andb
sbb
pop
push
imul
outsb
inc
sbb
inc
add
inc
test
push
sub
inc
and
mov
aam
dec
in
xchg
lret
or
add
das
js
push
adcb
sbb
jb
inc
idiv
xchg
lret
pop
or
and
orb
clc
push
mov
addr16
inc
pusha
popf
loopne
in
pop
push
loopne
jnp
push
add
loop
adc
les
push
adc
lock
push
shl
push
push
in
loopne
test
loope
jbe
inc
push
mov
cmp
ja
stos
lods
jne
mov
mov
cwtl
in
mov
sahf
je
mov
mov
jne
xor
popa
cmp
add
data16
loope
add
loopne
push
test
fcomip
dec
popa
cltd
stc
rorb
mov
test
cld
pusha
lahf
lea
lods
loopne
mov
popa
add
in
loopne
test
loope
rsqrtps
mov
push
adc
adc
lret
mov
mov
push
push
movsb
lock
loop
lret
call
pop
or
add
xchg
push
jb
je
js
add
cli
ss
cmp
push
mov
int
sub
loopne
pusha
and
addl
dec
push
jno
push
dec
mul
sub
add
call
mov
add
fidivl
xchg
mov
and
inc
in
inc
sar
mov
jo
xor
scas
shll
dec
hlt
call
sarb
lcall
pop
aam
call
or
xchg
inc
sbb
add
cmp
popf
shrb
loopne
push
jne
clc
je
xor
cld
es
mov
clc
mov
jo
or
mov
lock
xor
push
pop
pop
stc
push
pop
push
lret
adc
xchg
jb
out
add
adc
add
lret
test
push
call
or
mov
repnz
call
adc
sbb
pop
aam
sbb
jo
add
icebp
out
pop
dec
xor
test
jo
mov
xlat
jo
stos
fdivr
outsl
mov
inc
mov
push
add
jg
scas
adc
inc
jns
add
cltd
sub
sub
or
jge
add
call
cmp
xchg
test
dec
mov
testb
pop
ljmp
jb
adc
add
adc
test
imul
ffreep
or
mov
dec
aad
outsb
imul
jg
data16
cmp
jl
shlb
mov
dec
jg
lock
pop
or
sub
push
add
xor
lock
sub
inc
add
mov
repnz
mov
adc
push
pop
add
movsl
sub
int3
add
xor
push
adc
mov
hlt
push
push
inc
add
outsl
aam
outsb
cld
push
dec
xor
stos
lock
aas
rorb
fildl
mov
adc
mov
xchg
jle
es
pop
jo
sbb
das
lcall
adc
xchg
and
jnp
loopne
mov
and
lret
xor
aas
cld
push
dec
add
dec
les
pop
pushl
jne
xchg
test
and
dec
jo
stos
ljmp
test
cltd
ja
pop
and
add
sbb
decb
rorl
das
push
sbb
and
fwait
lock
add
lock
jne
push
dec
sub
ret
xor
in
pop
fdivrl
lock
adc
sbb
add
push
sub
add
xor
and
lds
pop
test
inc
adc
mov
jns
adc
xor
jp
nop
pop
adc
push
inc
pop
aam
add
mov
xor
addb
call
pop
xor
dec
lock
mov
mov
push
jg
mov
push
push
cwtl
outsb
cmp
or
pop
dec
cmp
lock
je
test
adc
push
jno
and
push
js
je
xor
jmp
mov
pusha
sbb
push
cs
pusha
movsl
xor
adc
stos
imul
mov
and
mov
subl
shrl
clc
jl
and
in
inc
adc
xor
push
and
and
ljmp
push
loopne
call
lock
fcmovnbe
and
roll
lock
cmp
fldt
loope
adc
jo
xor
call
and
mov
mov
sub
sub
popa
jne
pop
mov
and
mov
test
cmp
xchg
xorl
dec
cmpl
or
std
mov
cmp
add
jo
push
mov
pop
inc
call
hlt
outsb
and
mov
outsl
sbb
fisubs
scas
stos
jg
int
mov
mov
call
je
cmp
jbe
push
jb
add
push
jb
mov
adc
mov
rolb
lock
pop
cld
jne
push
jge
outsl
fildll
xorb
adc
inc
pop
and
or
inc
in
sbb
in
sbb
or
orb
adc
mov
adcb
out
and
lods
push
mov
inc
inc
scas
push
lret
adc
out
cli
mov
add
jo
jbe
in
ss
xchg
lret
mov
push
cli
mov
jmp
or
call
or
xor
push
insb
push
mov
rcl
jle
pop
jge
dec
hlt
pop
outsb
lea
pop
pushl
sbb
sub
out
scas
push
negb
jl
pusha
test
jle
xor
movb
mov
xchg
mov
sbb
inc
or
cmovns
xor
les
out
movsb
mov
mov
sbb
push
push
jb
iret
andl
mov
jno
out
push
in
xor
lret
inc
xor
lds
adc
or
loope
sbb
push
imul
or
cmp
add
push
adc
and
std
popa
ss
xor
cmp
mov
sti
push
xchg
lcall
nop
mov
xchg
loope
push
push
xlat
fistpll
jo
push
je
fcoml
sbb
inc
adc
mov
repnz
scas
mov
xchg
or
jo
add
ds
in
xchg
je
aaa
bound
cmp
je
clc
add
sub
pop
movsl
lock
jle
fcmovnu
and
sbb
pop
and
jne
and
jge
sbb
leave
dec
in
dec
mov
mov
sub
adc
mov
jg
clc
inc
xor
incb
cmpb
xor
out
push
lcall
jo
test
mov
add
cmpsb
jp
stc
aaa
add
mov
loopne
idiv
hlt
push
push
test
xor
test
nop
je
sbb
push
arpl
mov
lock
lock
push
jb
xor
andb
dec
pop
mov
ljmp
pop
add
imul
jns
cmc
pushl
pop
dec
call
clc
rcrb
xchg
loope
inc
dec
sbb
push
ljmp
divl
cmp
orb
aam
xor
mov
mov
jb
in
sub
push
sub
fucomip
xchg
push
je
pop
idiv
adc
enter
insb
mov
sub
xor
jmp
test
divb
call
mov
mov
lock
add
or
lea
xchg
loop
lock
ss
cmp
cmpsb
or
cwtl
inc
xchg
pop
jg
fadds
mov
cmpsb
fwait
mov
icebp
xorb
xchg
lods
test
fwait
dec
ljmp
clc
inc
cmpsb
push
sti
into
cli
rorb
sbb
push
mov
je
xchg
adc
jne
pop
sbb
cmp
mov
out
in
ja
pop
pop
ret
inc
mov
filds
sub
loopne
shlb
push
xor
nop
add
ret
xchg
xor
sbb
rcr
and
aam
outsl
jle
pop
sbb
inc
in
flds
outsb
dec
and
fiadds
je
fcompl
sub
lcall
or
sub
adc
sub
leave
cmc
and
sbb
lret
inc
ret
inc
push
pop
inc
jmpw
mov
fs
mov
ret
test
add
jle
xchg
mov
add
push
imul
pop
pop
jne
fdivs
push
popl
lret
lea
add
loopne
pop
lods
incb
fsts
push
pop
lods
mov
movsb
add
dec
clc
and
sub
lea
test
cli
adcb
mov
pop
add
icebp
pusha
inc
sahf
cli
adc
or
cmp
pop
adc
lret
or
push
testb
jmp
call
add
jecxz
jo
mov
popf
xorb
sub
push
adcb
mov
testl
subl
add
adc
ret
mov
push
mov
mov
cwtl
repnz
mov
ss
xchg
rolb
dec
clc
dec
mov
mov
aam
aas
outsb
test
pushf
addb
jmp
test
es
add
adc
fimuls
sbb
mov
add
push
test
scas
mov
ret
xor
dec
iret
add
add
xchg
add
rclb
ret
pop
aas
loope
out
sub
or
jnp
and
add
inc
pop
vmovhps
hlt
rcrb
jb
add
into
pop
inc
lea
rclb
pop
mov
je
push
cmp
push
enter
roll
ret
push
cmp
mov
xchg
mov
sti
outsl
push
adc
push
jmp
xchg
pop
sar
in
inc
shlb
sbb
xor
mov
mov
pop
mov
das
inc
lds
dec
lods
cs
cmp
jnp
aam
adc
and
adc
daa
and
les
dec
ja
stos
cwtl
rclb
ret
rcll
rclb
enter
lds
pushf
sbb
mov
add
sub
jp
je
filds
sub
dec
push
inc
shlb
cmp
jnp
movsl
stos
and
lds
loopne
push
sbb
add
mov
outsb
xor
lret
push
mov
jo
or
pop
or
dec
add
sbbl
pop
cs
add
mov
cli
and
and
call
pop
adc
mov
sub
testb
mov
fsubrl
and
push
xchg
or
popa
adc
add
cmp
mov
mov
jne
mov
test
rolb
adc
call
add
cmp
daa
mov
jae
adc
jg
jo
loopne
xchg
clc
ret
jmp
mov
sti
pusha
int3
adc
xchg
pop
jecxz
bound
push
ficoml
pop
je
xchg
mov
add
xchg
loope
sahf
jp
push
loopne
js
lock
pusha
str
mov
push
and
int3
div
loope
add
dec
add
mov
dec
or
jne
dec
dec
test
jg
or
aad
or
jecxz
fs
cmp
fstl
add
shlb
orb
adc
sbb
add
es
xchg
cmp
add
mov
or
add
pop
loopne
test
cmpsb
aas
dec
and
loope
dec
push
add
and
and
notb
stc
outsl
pushl
cmp
cmp
fldenv
loop
push
loopne
adc
loope
std
mov
and
add
and
add
mov
adc
xor
adc
pop
test
test
push
mov
outsb
pop
add
cmp
adc
fildll
xchg
mov
xchg
cmp
dec
and
jg
pop
jl
scas
adc
nop
outsl
pusha
loopne
test
pusha
pop
mov
in
add
push
fisttpl
clc
push
add
adc
and
pop
popa
jbe
pop
add
addr16
or
inc
repz
mov
gs
loopne
xchg
xchg
loopne
pusha
xadd
sub
cmp
adc
popa
sahf
inc
insb
jmp
andl
lea
mov
sub
push
loop
xor
add
outsb
popa
xor
mov
sub
inc
fisttps
add
int3
jmp
jl
mov
ret
mov
lcall
insb
sti
and
push
mov
lods
adc
fimuls
push
jne
je
push
jmp
ja
sub
test
cmp
in
ljmp
mov
push
or
or
outsl
and
mov
add
add
jmp
inc
idivb
cmp
xor
je
fisubrs
push
xor
sbbl
cmp
inc
in
mov
sbb
arpl
add
or
mov
orl
sbb
frstor
mov
sub
pusha
pop
xchg
jo
shlb
fildl
pop
jecxz
sub
or
cmp
test
push
fwait
incl
xchg
jp
xor
call
pop
out
or
loopne
mov
pushl
dec
movl
jbe
call
cmp
or
call
inc
adc
inc
nop
loopne
mov
mov
call
pop
or
arpl
pusha
ss
loopne
loop
jl
or
and
popa
nop
and
and
fisttpl
push
add
cwtl
scas
negb
cli
pop
insb
loopne
pop
mov
add
mov
dec
push
insl
cli
stos
out
xchg
jb
sarb
and
add
lds
aaa
inc
inc
pop
mov
jecxz
adc
add
fcoml
push
xor
mov
loope
push
loopne
mov
sub
movsl
jne
filds
loopne
and
or
mov
adc
loopne
pop
iret
inc
incl
shrl
mov
jb
mov
pop
hlt
dec
add
xor
call
in
fcomps
cli
data16
out
inc
mov
aam
add
pop
push
jnp
inc
mov
inc
test
outsb
xor
rcrl
cmp
add
add
shlb
pop
dec
mov
shl
mov
push
and
jmp
xor
das
jmp
jp
inc
ss
sub
adc
mov
data16
call
pop
icebp
dec
pop
mov
sti
fisubs
jo
jb
sti
aaa
sti
mov
jno
ret
and
xor
mov
roll
scas
fidivl
icebp
add
test
cmp
shlb
fdivrl
push
dec
addr16
int
xor
shlb
add
and
decl
jp
out
jo
jne
and
mov
mov
xchg
xchg
lock
call
mov
mov
fwait
hlt
and
jg
mov
xchg
jo
jg
or
jae
push
lock
loopne
push
aam
jae
fdivr
jo
mov
push
add
sbb
add
pop
xor
mov
loop
add
mov
and
icebp
push
xchg
pusha
fiadds
or
mov
pop
or
adc
dec
daa
outsb
push
pushl
pop
mulb
sti
cmp
add
mov
testb
or
insb
pushaw
test
and
push
insb
loopne
sar
add
jb
pop
push
push
mov
inc
mov
lock
jg
lock
lea
add
or
jg
or
mov
jge
or
ljmp
sub
bound
mov
orb
xorb
inc
mov
xor
pop
dec
jge
push
xchg
jmp
adc
inc
popa
mov
adc
push
call
jmp
xor
mov
push
jae
testb
lret
or
or
push
adc
xor
popa
int3
int
push
sbb
shrl
jle
mov
mov
dec
enter
addb
jo
push
mov
jo
jmp
pushl
dec
push
xchg
lret
lock
adc
push
das
js
jbe
jmp
fcomp
pop
into
jmp
stos
pop
mov
ljmp
adc
mov
push
xor
sub
mov
sar
addl
mov
lock
ljmp
xchg
add
inc
les
mov
mov
clc
ucomiss
mov
bound
add
mov
mov
xor
sub
add
nop
add
or
lea
dec
or
push
ret
jb
adc
loopne
xchg
push
mov
xor
mov
mov
push
cld
js
mov
add
mov
rorb
xor
jecxz
mov
hlt
and
inc
lcall
shlb
mov
add
cmp
push
mov
test
mov
cli
jo
loopne
inc
fadds
push
add
jb
mov
movsl
adc
data16
movl
insb
jb
aam
pop
ljmp
lock
lea
xor
pop
cmpsl
mov
rcll
lds
mov
inc
jb
ret
divb
nop
adc
aaa
inc
es
cld
dec
pop
xchg
jo
push
decl
test
ja
push
inc
icebp
pop
jbe
call
xor
aas
fcoms
xor
roll
iret
mov
or
mov
out
add
pop
jne
fsubp
jnp
mov
push
pop
in
and
pushf
cmp
mov
fsubrs
add
dec
mov
mov
out
push
add
pop
dec
mov
fisubs
mov
adc
inc
sbb
dec
imul
jns
aaa
lret
decl
mov
sbb
xorl
push
inc
pop
xchg
jo
shll
cmpsl
add
into
scas
and
add
pop
cmc
in
je
or
mov
call
les
push
adc
mov
jb
xchg
repnz
mov
jb
mov
mov
lcallw
and
mov
ficoms
out
xor
addr16
jecxz
mov
cmp
xor
sub
inc
and
aas
nop
call
mov
stos
xor
mov
or
or
lret
call
push
jle
push
jmp
sbb
push
rorl
filds
mov
enter
cmp
enter
mov
ljmp
lds
stos
jo
call
mov
lock
fsubp
push
decl
iret
push
add
fistpl
push
fwait
inc
push
pop
jp
pop
xor
xlat
ljmp
pop
fimuls
call
and
dec
inc
jo
mov
mov
jo
dec
mov
push
pop
push
pop
loopne
pushl
xorl
add
xor
inc
and
lea
cmpsl
mov
decl
out
jnp
andl
push
mov
fldcw
xchg
int
mov
sbb
fs
mov
cmp
fsubl
outsb
xchg
pop
mov
or
jns
imul
add
xlat
jo
jecxz
xor
lock
das
aam
clc
mov
dec
and
scas
pushl
mov
sub
xor
adc
mov
push
push
andb
call
mov
loopne
mov
xor
sbb
pop
sub
rolb
xor
jl
cmp
filds
aam
cli
cmc
stos
jl
notl
loope
jbe
jmp
adc
push
sbbl
cmc
call
ljmp
jo
loop
lock
adc
testl
stc
scas
loopne
push
lahf
or
loopne
sub
sar
pop
sbb
js
sti
cmp
xor
ss
int
out
bound
cs
adc
lea
dec
cld
mov
or
aas
addb
andl
xor
add
inc
cmp
adc
pop
filds
jg
push
mov
mov
insb
mov
lods
je
ret
xor
xor
out
mov
jnp
pop
insb
movl
mov
sbb
mov
cmc
ljmp
call
xchg
pop
mov
mov
add
push
sbb
nop
test
sub
ljmp
iret
add
and
or
je
retw
outsl
mov
add
incl
or
or
sub
and
punpckhdq
movl
jp
dec
jp
int3
mov
out
insl
lds
filds
call
scas
pop
je
pop
jno
inc
ret
lea
in
inc
std
jne
std
fwait
clc
enter
test
add
leave
push
inc
rorb
or
loopne
adc
es
mov
sahf
in
sbb
add
and
add
je
fs
and
cli
ljmp
xchg
add
push
test
push
rorb
push
hlt
and
xchg
cmp
rclb
push
push
ficomps
jbe
mov
and
lret
subb
mov
das
call
and
popa
pop
pop
popl
dec
les
stos
push
or
or
jmp
lods
mov
cmp
push
add
cmpsl
xchg
add
pusha
sub
mov
add
jb
and
pop
jl
pop
decl
gs
dec
sbb
test
inc
mov
inc
call
jmp
aaa
mov
xchg
cmp
call
pop
insb
rclb
rorl
or
test
xchg
call
incl
dec
push
sbb
or
das
outsb
cmp
sbb
outsb
push
and
or
lods
jmp
push
leave
mov
lock
push
cli
push
clc
inc
dec
lds
inc
jp
lcall
sti
shlb
xor
mov
test
test
inc
inc
xchg
jge
pop
adc
ljmp
cmp
test
jge
push
jb
adc
sbb
in
adc
jbe
adc
jae
mov
cmp
xchg
push
jbe
adc
sub
pop
xor
push
movsb
pop
pusha
mov
jb
push
jle
mov
adc
and
cmpsl
call
pop
rolb
shl
add
mov
mov
add
jl
xor
xchg
cwtl
adc
mov
mov
aam
mov
rcr
mov
enter
push
rolb
cs
fcomps
add
addr16
sub
int3
out
fs
xchg
sbb
adc
sahf
int3
std
inc
pop
test
mov
xchg
xchg
sub
or
push
notb
sub
push
lea
and
adcl
fisubs
sbb
clc
push
mov
shl
adc
mov
das
js
mov
ja
pop
inc
mov
mov
mov
mov
xchg
push
and
int
in
fildl
or
or
mov
adc
out
jg
repz
mov
test
inc
xlat
push
ds
idivb
in
mov
mov
mov
cmpsb
or
xorb
repz
mov
in
or
inc
roll
lcall
popf
or
mov
lcall
jg
insb
push
in
inc
mov
mov
pop
sarl
mov
push
cmp
or
mov
fiadds
les
push
stc
pop
xor
push
adc
aad
or
inc
inc
out
ffreep
pop
push
or
mov
mov
mov
leave
jge
mov
mov
fsubrl
fiadds
push
pop
mov
xor
cmp
in
dec
push
int
mov
mov
lret
jecxz
out
fwait
jb
inc
aas
bound
mov
inc
xchg
outsl
fwait
push
rorl
push
jg
negb
daa
mov
cli
mov
inc
cld
mov
pusha
sub
inc
dec
fldt
pop
insb
fdivrp
ret
rolb
mov
xor
cld
mov
or
mov
xchg
idivl
loopne
or
jmp
int
fmuls
dec
or
mov
mov
popf
pop
sbb
popa
mov
loopne
loopne
out
cmp
bound
adc
mov
mov
push
inc
vpavgb
mov
call
and
cmp
dec
fildl
shll
jle
fbstp
es
push
dec
sub
push
sub
mull
call
or
pop
mov
mov
mov
loopne
xor
add
fwait
jg
bound
adc
pop
fwait
int
inc
add
loop
ds
dec
shrb
mov
inc
inc
xor
and
jb
lcall
lcall
incl
js
add
push
loop
inc
pop
mov
add
incl
loop
dec
mov
sub
dec
mov
inc
bound
add
fildll
scas
mov
mov
add
mov
clc
or
push
inc
and
cmpsl
mov
pop
mov
pop
jg
push
sbb
jle
lahf
mov
ss
fs
jge
repz
inc
jle
or
mov
mov
mov
icebp
mov
arpl
mov
or
fdivp
xorb
mov
icebp
mov
adc
sbb
jecxz
cltd
sbbl
push
std
sar
jl
jnp
mov
lea
jbe
sbb
jnp
das
addr16
xor
daa
jb
inc
lea
data16
inc
and
dec
or
outsb
or
xor
test
iret
js
sbb
inc
jl
sub
sbb
decb
xchg
inc
js
js
insb
jl
in
cli
mov
lock
add
jo
mov
jmp
rolb
mov
mov
push
scas
push
push
sub
and
jae
add
and
sub
ljmp
jnp
push
mov
ja
clc
mov
push
push
inc
enter
jo
lea
lret
lcall
idiv
imul
stos
loope
xchg
xchg
mov
push
lods
nop
and
xor
lret
ljmp
adc
pop
lds
jle
je
push
mov
aam
outsl
cmp
add
lock
lock
adc
push
into
jo
mov
mov
push
sbb
insl
mov
insb
and
xor
lcall
es
mov
or
add
push
test
mov
dec
je
mov
xchg
xchg
clc
mov
pop
add
pop
add
mov
add
xor
lock
xor
jne
pop
sti
incl
add
add
call
sbbl
lock
jnp
or
cmp
or
sbb
add
and
inc
pushf
mov
and
xor
inc
cld
icebp
or
in
sub
xor
fistl
fiadds
jge
jb
jmp
push
inc
inc
lock
test
sub
jle
add
je
add
inc
cld
cmp
jbe,pt
cli
jg
mov
sub
mov
lea
inc
hlt
pop
js
xchg
das
ljmp
pusha
xor
push
arpl
add
gs
lds
adc
cmpsl
jo
aam
fs
lock
std
xchg
test
and
push
scas
call
cmp
inc
repz
xor
adc
sub
incl
outsl
pop
adc
push
fsubl
mov
movsb
decb
call
push
call
sbb
jle
sbb
test
push
push
inc
std
ficomps
leave
jne
cmp
cli
add
js
shrl
and
push
notl
stos
fdiv
mov
xchg
pushf
lock
dec
incl
jge
dec
xor
cli
lods
mov
adc
push
push
jmp
xchg
xor
pop
mov
test
lock
push
push
mov
push
jl
jo
xchg
lods
lods
or
or
xor
xor
push
xor
rolb
inc
cld
add
and
pop
xor
jge
push
lea
out
sub
cli
mov
and
sub
inc
add
rclb
add
mov
jne
dec
cmpl
push
xor
lret
xor
outsb
pop
hlt
or
imul
lock
or
lods
scas
pop
xchg
or
push
mov
cmp
lods
dec
pop
cmpsl
push
fbstp
jmp
mov
sbb
jo
in
xor
sahf
inc
jmp
call
or
or
mov
jmp
lock
out
inc
ret
mov
fwait
jg
adc
test
jne
mov
shl
mov
jl
or
lret
cmpsb
mov
jg
rclb
pop
les
lret
cltd
mov
ljmp
repnz
out
jne
rep
ret
push
xchg
or
pusha
icebp
or
lock
add
adc
sarb
lret
push
rcrb
fisubrs
aam
jge
loopne
adc
sbb
push
data16
inc
add
aaa
xchg
add
clc
sub
cltd
xor
aas
call
mov
clc
inc
push
jp
dec
loop
cmp
movzwl
std
cmp
mov
jl
jb
js
adc
in
decl
lock
addl
mov
pop
push
pop
add
je
rcr
mov
jbe
data16
je
int3
fdivr
dec
jne
mov
jmp
xchg
stc
sub
adc
dec
loope
cmp
imul
enter
push
rolb
test
mov
push
xor
mov
dec
add
aaa
test
pop
loope
rolb
fiadds
or
ja
cmpsl
mov
pop
add
mov
test
ds
imulb
incl
fstpt
adc
mov
push
xor
push
push
add
mov
push
add
pop
rolb
or
mov
mov
das
jmp
push
cli
sub
inc
leave
add
divb
jbe
aam
xor
mov
das
mov
es
and
push
push
test
add
mov
mov
outsb
test
add
ret
xor
inc
lret
lods
xchg
lock
push
jg
stc
sub
add
inc
push
xor
adc
cs
pusha
pop
inc
adc
cmc
pushf
leave
jb
sarb
addb
jge
jnp
mov
sub
je
mull
add
or
adc
test
test
in
push
mov
mov
add
add
jmp
scas
insb
sub
rol
cli
jle
test
add
or
xor
fbld
cmpb
inc
xor
push
inc
sbb
mov
lock
push
adc
add
cmp
add
test
sub
sbb
adc
mov
add
xchg
hlt
pop
push
xor
cmp
mov
push
loop
out
add
loope
loope
stos
and
scas
push
mov
or
rcrl
lock
inc
and
mov
xorb
add
and
insb
sub
adc
lock
mov
pusha
test
xor
sbb
decl
loopne
loopne
shll
addl
cs
xchg
and
push
mov
cli
mov
mov
shl
or
addb
and
test
cmp
cmp
inc
inc
or
cmp
cwtl
pushf
sub
js
mov
mov
dec
add
add
inc
pop
adc
jb
sub
mov
inc
add
mov
xor
and
sarl
pusha
outsb
scas
dec
inc
pop
rcrl
or
jo
shrl
bound
xchg
lock
jl
fidivl
inc
mov
push
mov
cmc
orb
stos
mov
xor
xchg
inc
and
jg
mov
add
and
lea
push
add
cltd
pop
frstor
addl
es
xor
je
sub
outsl
mov
cs
xchg
add
adc
ljmp
and
cld
clc
jmp
and
sub
or
jle
add
std
dec
push
inc
enter
repz
clc
pop
jnp
sbb
mov
sbb
cld
or
push
jge
jmp
stos
orl
insb
adc
jmp
outsl
sbb
jge
pusha
push
or
ret
addb
lahf
add
dec
pop
jo
push
or
lock
insl
jnp
aam
xlat
and
add
jno
pop
int3
lock
pop
mov
fidivrl
pop
dec
add
ret
fildll
lock
into
dec
and
mov
jp
mov
and
sbb
jb
and
xor
inc
in
pop
cld
sbb
jbe
je
sub
add
jl
add
orb
adc
pop
pop
and
cmp
sub
or
jbe
push
or
repz
out
mov
lcall
push
subl
daa
inc
dec
add
movsl
push
sarl
pop
hlt
add
add
and
sbb
sub
and
pop
xchg
mov
shrb
push
in
mov
mov
test
dec
cmpb
add
lcall
outsb
es
xchg
adcb
adcl
shll
testb
je
or
es
cmpl
push
add
test
daa
enter
push
xorl
xlat
lods
sbb
test
xchg
lret
add
sbb
pop
es
xor
fwait
jmp
rorb
pop
jg
test
add
andl
pop
addb
cmc
inc
cmp
cli
push
add
loopne
mov
push
add
fmuls
pusha
adc
sub
mov
jno
mov
push
add
adcb
xchg
lret
cs
jmp
jl
je
mov
dec
and
decw
lea
incl
arpl
sub
sub
mov
inc
and
inc
shlb
sub
adc
fs
inc
sbb
pop
fidivrl
ret
scas
xchg
cmc
sub
inc
clc
or
shrl
and
popa
mov
lock
jbe
add
mov
dec
pop
jae
lock
loope,pt
adc
mov
out
pop
test
push
scas
pop
shll
icebp
or
filds
jl
jmp
lcall
pop
jecxz
orb
stos
xchg
xchg
ljmp
jg
mov
push
les
jl
nop
movl
out
push
push
scas
rclb
loop
mov
rorb
push
out
sub
les
xchg
shrl
cmpsb
mov
push
cmpsl
cmp
hlt
call
jg
leave
ret
inc
jmp
inc
xchg
shlb
call
call
and
mov
imul
dec
adc
rcrb
xchg
mov
and
int
and
adc
out
push
or
jmp
jnp
push
sbb
inc
loope
loopne
and
imulb
stos
inc
jne
out
lock
test
scas
test
pop
ret
cli
addl
sbb
or
push
xchg
into
dec
cld
js
mov
icebp
leave
movsl
andb
mov
push
rorb
mov
jnp
sbb
mov
xor
shrb
sti
bound
out
jns
add
sbb
adc
outsb
jmp
dec
inc
push
scas
das
mov
repz
push
sbb
out
push
xor
xorb
stc
pop
inc
lret
loopne
inc
jl
loopne
cmp
test
push
push
add
xor
test
insl
adc
xchg
adc
pusha
pop
loopne
fsts
cld
ja
bound
add
pusha
push
in
add
adc
xor
mov
and
ljmp
incb
mov
push
pop
js
lcall
inc
cmpl
lcall
insb
pop
lock
cld
mov
fs
jmp
sub
inc
cld
lea
popa
rorb
sub
ss
and
jl
pop
or
sub
aaa
je
std
push
or
andb
xchg
dec
add
ds
cli
sbb
loop
shrb
jle
xchg
xchg
cltd
std
or
sbb
mov
test
es
lock
and
xchg
cmp
loopne
pop
or
pop
jae
fsubrl
xor
clc
sti
loopne
ja
and
mov
movl
pusha
jge
jbe
lock
loopne
jecxz
push
dec
sbb
sub
xchg
sbb
and
mov
jne,pt
and
xchg
add
mov
stos
mov
xor
into
out
xchg
cltd
or
or
lock
outsl
loopne
jb
add
adc
sub
sbb
fildll
sbbb
insl
stos
mov
pop
add
loope
or
add
js
subb
pop
sbb
sub
cmp
add
push
jp
and
add
pusha
int
pop
repnz
clc
inc
or
mov
sbb
xlat
ss
dec
mov
call
mov
mov
lret
repz
loope
inc
add
mov
add
xor
ds
cmpsb
fildl
push
loop
jb
add
mov
push
and
fs
or
xor
test
jmp
adc
adc
push
aas
hlt
rcrl
and
jmp
dec
push
pusha
or
sub
enter
sarl
aaa
dec
mov
and
loope
dec
jecxz
add
addl
mov
sbb
enter
lock
cmpsb
ss
sbb
sbb
pop
std
dec
jnp
or
adc
dec
pop
movsb
add
mov
and
pusha
xchg
dec
add
or
incl
lahf
aaa
lea
and
jno
dec
cmp
adc
test
loope
or
pusha
xchg
repnz
ss
pop
cwtl
mov
je
adc
adc
or
adc
loope
cmp
mov
add
out
jg
rol
incl
pusha
fimuls
pusha
cmp
adc
mov
xor
cli
cwtl
cmovnp
xor
jbe
jno
jle
test
fiaddl
ja
outsb
add
fmuls
jg
insb
sub
push
add
outsb
jo
mov
divb
mov
mov
mov
outsb
lock
test
gs
jl
incb
mov
jo
call
push
sub
inc
sbb
inc
push
mov
and
add
fdiv
pop
hlt
cmp
add
loope
add
jmp
jle
jb
les
mov
sbb
xor
std
je
mov
or
cmp
mov
pop
xchg
invd
test
out
jne
sbb
sbb
xchg
fisubrs
lock
pop
xor
movsl
mov
mov
call
pop
outsl
dec
jo
test
push
adc
dec
inc
jecxz
enter
icebp
mov
xor
xor
enter
cmp
mov
jo
divb
mov
rcr
jle
loopne
js
add
sahf
jo
into
push
and
mov
cmpb
daa
jmp
mov
fidivs
push
mov
xchg
bnd
mov
xchg
xor
outsb
xchg
neg
rolb
ljmp
into
mov
outsl
adc
xchg
jne
mov
dec
sarl
add
inc
add
jno
and
pusha
ror
xchg
addl
adc
xor
jle
sti
negb
sbb
dec
mov
xor
loopne
mov
xor
bound
fcoms
cli
jg
dec
fidivrl
rcll
xor
or
sub
and
fldt
pop
xor
js
push
mov
sarb
sub
in
xor
int
mov
lds
js
or
aam
or
les
cmpb
pusha
clc
mov
jmp
xor
and
subb
jno
and
mov
jne
loope
add
dec
mov
mov
loopne
jmp
arpl
push
dec
push
mov
mov
pop
xorl
cmp
outsl
pop
ss
rclb
jne
push
mov
pop
adc
adc
adc
leave
adc
mov
xchg
lea
mov
mov
ds
mov
push
mov
push
jl
sbb
mov
divl
xor
clc
mov
mov
mov
lock
rcll
xor
push
xor
dec
add
sub
add
pop
push
mov
inc
lock
mov
xor
sete
adc
adc
mov
push
cmp
sub
or
xchg
mov
xchg
cmp
sbb
adc
cmp
ret
ljmp
scas
cmp
sbb
fwait
pusha
repnz
hlt
jg
sub
or
lock
inc
pop
lock
or
cmp
lock
cmpb
mov
mov
in
icebp
or
push
hlt
mov
mov
or
xchg
hlt
pop
jmp
fdivp
es
mov
dec
xor
or
or
in
adc
and
mov
mov
test
push
jmp
push
cltd
in
pop
idivl
mov
add
add
into
data16
mov
cli
filds
mov
sti
or
mov
add
jl
jo
out
sbb
add
adc
mov
sbb
add
leave
sarb
mov
add
fidivs
or
jbe
andb
pusha
into
jmp
adc
cli
xchg
in
ret
and
cli
jo
mov
inc
pusha
fdiv
cltd
mov
mov
ja
and
adc
aas
and
inc
mov
jmp
lds
sbb
add
jbe
cmp
ja
sub
mul
fwait
add
pmulhuw
mov
mov
xor
xor
pop
cmp
mov
ret
adc
and
test
outsl
jo
cmp
jnp
sbb
inc
mov
or
lret
add
lock
xor
adc
aam
ficompl
cwtl
ret
add
lods
stc
dec
and
mov
cmp
in
div
xor
sub
add
xor
or
shl
sub
ret
xor
call
jg
or
lcall
loop
ret
xor
pop
addb
jne
add
mov
enter
mov
cmp
mov
mov
sahf
lock
cmp
pop
lock
push
mov
dec
cmp
andl
cmc
jb
sti
mov
mov
jo
int3
test
or
push
xchg
add
add
fbstp
xor
dec
xor
mov
icebp
fwait
lock
adc
push
js
mov
orl
push
add
cs
xor
sub
mov
roll
pop
mov
or
fidivl
add
mov
mov
into
into
pop
mov
sti
jg
aaa
push
nop
stos
shll
jo
adc
nop
add
nop
mov
dec
cmp
jne
mov
sbb
push
hlt
jl
movl
or
mov
mov
add
sbbb
sbb
jg
xor
jo
xor
mov
add
sub
inc
or
pop
sarb
jl
out
movsb
stos
hlt
incl
push
mov
inc
test
popa
add
or
sbb
je
mov
je
sbb
ret
cmp
adc
lods
stos
or
inc
mov
mov
out
xor
and
xchg
inc
movsl
test
mov
lret
outsl
outsl
lea
pop
cwtl
addr16
adc
test
jbe
push
stos
in
inc
lea
jl
and
lock
jl
inc
jb
ret
lock
jo
int3
or
ja
das
in
dec
xor
add
mov
add
test
jo
xor
lock
pop
sub
rolb
aas
adc
add
mov
jmp
push
inc
je
test
mov
inc
mov
lret
dec
cli
xorl
outsb
adcl
xor
enter
adc
inc
inc
cli
add
shl
jo
rcll
and
inc
test
jge
mov
stos
inc
jmp
repnz
dec
adc
xor
out
fmuls
inc
inc
les
test
mov
jge
cmp
movb
jo
inc
and
fwait
and
mov
jmp
ret
lea
cmp
pusha
lock
adc
icebp
add
sahf
adc
lock
lcall
add
xor
cld
outsb
adc
stos
jbe
sub
jb
add
bound
je,pt
pop
data16
pop
movsb
xor
jb
mov
popa
sahf
pushf
add
test
mov
pusha
outsl
fcomps
add
into
mov
in
jmp
sub
sub
pop
mov
pop
cmp
xor
add
dec
xchg
sbb
xor
lea
push
sbb
add
xor
mov
lds
incl
pop
add
push
mov
popa
and
dec
or
mov
pop
pop
hlt
stos
lods
xor
cmp
dec
xor
adc
push
insb
sbb
loope
test
insb
sub
push
mov
cmp
pop
mov
sub
push
adc
mov
xchg
rolb
test
in
pop
xorl
mov
loopne,pn
lcall
cmpb
and
cltd
jp
jg
jne
add
sbb
jecxz
sbb
decl
mov
fmuls
mov
xorb
rolb
shrb
cli
mov
push
mov
jg
push
std
les
jle
sbb
adc
jne
push
and
xor
xor
mov
jle
shr
add
push
push
cmp
decl
hlt
andl
stc
movsl
add
andl
fdivr
inc
clc
mov
andl
adc
adc
sub
adc
call
inc
movsl
mov
js
add
inc
mov
js
add
jl
jmp
loop
sub
inc
adc
icebp
push
jbe
rol
dec
pop
dec
orl
jp
in
stos
fidivs
adc
pop
lock
pop
inc
fildl
subb
je
push
rcll
jbe
fs
jo
push
pop
insl
or
dec
negb
lock
testl
sub
lahf
test
in
mov
dec
or
lods
xor
test
shrb
mov
or
cmp
or
inc
lea
push
jmp
fisubl
inc
jmp
add
or
or
rorb
xchg
fmuls
hlt
ret
add
push
ret
pop
movsb
incb
int3
add
xor
arpl
pop
add
mov
mov
mov
stc
shrb
xor
shrl
lds
les
lss
mov
fimull
cmpsb
add
mov
mov
add
add
movsl
mov
add
rcrb
add
adc
jecxz
sub
movsb
shl
in
rcrb
cltd
dec
fs
fiadds
add
call
pop
inc
add
add
add
or
ret
adc
test
or
inc
fidivrs
icebp
cmp
adc
or
mov
cld
aad
rol
jo
test
pop
cli
pushf
lretw
mov
data16
sub
jl
outsl
xor
cmp
adc
in
orps
je
add
jbe
jl
sub
mov
inc
mov
dec
mov
sub
adc
pusha
pop
lock
adc
mov
notb
es
mov
jo
dec
and
mov
lret
lcall
pop
inc
and
cmp
add
pop
mov
push
scas
add
jmp
push
xchg
es
test
andb
stc
jl
pop
jno
inc
mov
inc
or
fdivrp
cmc
jmp
rorb
push
repz
and
xor
mov
sub
loopne
imul
imul
das
call
imul
add
imul
mov
jb
enter
popa
dec
loopne
loopne
or
mov
cmpl
push
enter
popa
insl
push
jecxz
adc
add
loopne
test
add
jmp
cmpb
jns
cld
adc
ljmp
clc
adc
arpl
and
pusha
pop
inc
jmp
jecxz
jmp
xchg
jecxz
in
popa
loopne
dec
cmp
loop
dec
add
push
std
das
cmpsb
popa
mov
lea
pop
mov
jl
loopne
loopne
and
faddl
sbb
push
rorb
test
fnstcw
dec
pusha
add
mov
mov
add
or
push
push
add
jmp
dec
ret
mov
rorl
test
mov
insb
inc
cmc
fcmovbe
jl
cs
lock
xlat
fcomp
inc
mov
pusha
nop
mov
push
cld
stos
fsubr
loope
push
repz
push
fimull
cmp
xor
inc
or
or
adc
out
mov
mov
dec
adc
adc
decb
mov
fidivs
insb
add
rol
cld
push
adc
fimull
xchg
jmp
inc
pusha
clc
or
or
loop
pop
add
add
incl
jl
or
mov
add
adc
push
decl
cli
test
jp
repz
sbb
pusha
loopne
bound
xchg
jle
or
mov
sarl
xlat
pusha
mov
or
or
inc
or
call
stos
ret
pushf
pop
inc
jle
in
inc
fistpl
and
and
or
or
xchg
loopne
jle
mov
mov
xor
jle
lods
pop
icebp
jg
push
and
or
loopne
add
mov
sbbb
push
orb
test
pop
sti
pop
cld
aaa
or
aad
loopne
pusha
jmp
add
adc
pusha
or
mov
jbe
or
push
pushf
insb
or
or
push
rclb
mov
dec
or
or
xor
pusha
push
pusha
aas
loope
cmp
or
push
or
dec
cmpb
repz
mov
add
push
sbb
add
inc
push
push
mov
testb
insb
push
fnsave
push
ja
shl
sbb
fiaddl
fidivl
ljmp
add
sahf
cld
jg
stos
mov
jb
jg
jl
popa
aaa
jg
or
cmp
aad
addb
push
mov
loope
fdiv
jg
and
mov
lock
jle
add
xor
push
jmp
cmp
jae
call
jmp
mov
jb
add
repz
or
mov
mov
adc
lock
jmp
jle
fldenv
xor
in
sub
xchg
subb
mov
dec
vmread
es
xor
add
or
clc
jg
clc
jge
mov
cmp
add
sbb
mov
idiv
sub
jbe
mov
lea
aad
dec
jne
add
sbb
call
ja
mov
cmp
or
push
je
add
add
es
lock
mov
sub
add
je
insb
mov
sub
fs
int3
mov
aas
jnp
jnp
imul
in
xor
or
sub
adc
push
sbb
es
push
xor
xchg
push
call
jb
sarl
fmuls
clc
das
cli
jae
jo
jo
or
cmp
cmp
and
add
xchg
mov
jecxz
ljmp
mov
je
jne
outsb
jo
xorl
pusha
xor
xor
xor
sbbl
push
cmp
inc
in
jl
outsl
push
loope
jo
xor
jl
xor
jo
fbld
or
or
pop
lock
jle
mov
lock
mov
push
test
hlt
es
jo
mov
andl
cmp
push
mov
or
jns
fisttps
xchg
or
add
mov
or
mov
in
outsl
orb
ds
xor
mov
xor
xchg
xor
or
pop
popa
or
push
xorl
adc
xor
je
push
sbb
or
adcb
shlb
jne
pop
inc
mov
push
xor
fisubs
loop
jle
sub
sbb
dec
inc
or
mov
jge
lods
add
fcomi
idiv
adc
sub
xor
lock
adc
xor
jo
mov
int3
test
xor
push
ljmp
and
xor
in
stos
fbld
repnz
cmp
fildll
std
inc
push
mov
mov
popa
jbe
out
ljmp
lods
fnsave
sahf
pop
sub
push
adc
bound
mov
or
popf
add
or
adc
xor
hlt
movb
xor
xchg
lock
add
shrb
or
ljmp
decl
lock
cmp
jl
movl
dec
jl
and
add
mov
das
and
pushl
xchg
das
test
inc
adc
xlat
sub
cmp
loope
lea
lock
xchg
inc
pop
cld
cmpsl
adc
ds
test
fs
cmpsl
jg
cmp
movsb
cmc
sub
lock
pop
mov
call
rorl
mov
ret
mov
pop
loopne
cwtl
pop
sub
icebp
jne
and
and
aam
dec
clc
scas
jmp
push
push
adc
scas
push
hlt
xchg
call
loopne
inc
jp
or
das
adc
add
adc
decl
test
es
push
jo
xchg
jmp
test
push
push
das
clc
xor
mov
subb
lea
fstl
sbb
mov
pop
push
mov
cmpb
aaa
adc
pop
push
add
cmp
shr
xchg
mov
inc
mov
jmp
dec
adc
pushl
xor
rclb
aam
idiv
pushl
inc
jo
mov
add
mov
test
inc
jge
sar
or
jns
jl
or
add
mov
cwtl
and
call
test
lcall
xlat
jno
jno
jb
add
call
ss
hlt
jg
in
push
xor
lcall
pinsrw
ret
fcomip
sbb
nop
mov
lock
xor
cmp
xor
add
or
cli
or
shl
imul
add
jmp
pop
push
xchg
xchg
jns
cmp
jno
cld
jbe
and
lods
bound
incl
imulb
pop
lock
and
mov
add
scas
fcomip
sbb
jmp
pop
jo
sbb
or
ljmp
mov
cmc
and
incl
add
sbb
dec
mov
push
sbb
and
call
repz
sub
sbb
icebp
add
loope
fdivp
stos
mov
mov
adc
pop
mov
negb
loopne
mov
ret
sbb
sbb
icebp
push
out
inc
addr16
add
outsl
fiadds
test
outsl
lcall
jmp
scas
pusha
add
mov
mov
les
ljmp
test
push
lock
scas
lock
mov
xchg
lock
adc
ljmp
push
movsb
popf
mov
test
fwait
icebp
mov
add
gs
add
push
add
je
cmp
add
cld
xor
aam
lret
in
add
call
insb
inc
sub
or
cmp
call
add
loope
js
add
push
mov
stos
mov
inc
jbe
or
and
lock
adc
or
jbe
adc
dec
adc
ficompl
ljmp
mov
add
clc
jbe
mov
cmp
mov
mov
pushf
xchg
rcrb
jo
cld
pop
and
xchg
push
addb
addb
cltd
jno
dec
rcrb
mov
orl
outsb
inc
jmp
jne
cmp
jne
dec
pop
je
lock
mov
divl
fdivrl
mov
dec
mov
pop
jno
mov
and
je
add
fadd
jmp
push
lock
add
test
mov
add
push
inc
jl
ret
cmp
fdivp
jmp
and
jmp
dec
add
push
add
cmp
push
or
icebp
dec
jecxz
idivb
cmpl
lcall
adc
add
cmp
orb
emms
sarl
push
add
jmp
mov
jo
adc
dec
test
and
push
adc
mov
cmpl
aam
jbe
fsubr
subb
mov
in
adc
in
cmp
in
xor
or
stos
push
mov
ret
mov
add
test
dec
rorl
rclb
inc
test
fcmovnu
rcrb
rolb
ret
sbb
cld
subb
rorb
ret
sub
rorb
das
dec
xchg
rolb
mov
and
shll
bound
shrb
push
loope
jecxz
push
adc
enter
es
or
mov
and
and
pop
jb
incb
shlb
xchg
out
push
out
mov
fdivrp
cmp
dec
out
aaa
and
fadd
push
mov
ret
add
jae
loope
scas
clc
rorl
lds
or
fs
out
sbb
stos
adc
pop
sub
sub
inc
mov
aaa
xchg
jmp
repnz
movsb
add
je
cmp
mov
mov
adc
addb
push
and
mov
shl
add
pop
shlb
and
fimull
and
dec
mov
or
push
cwtl
sbb
xlat
std
jmp
or
dec
adc
or
jmp
add
rcrl
rcr
aaa
jge
dec
shlb
std
in
mov
arpl
sub
add
jp
xor
insl
cld
adc
inc
pop
jl
cmp
jl
inc
fwait
add
add
jb
mov
sub
mov
inc
pop
push
pop
xor
inc
mov
xor
addl
movsl
decl
adc
adc
outsl
data16
outsl
lock
sub
rorb
mov
jmp
mov
jl
leave
push
out
in
fwait
clc
cmp
sbb
mov
push
inc
and
pusha
andb
enter
jecxz
std
bound
clc
ret
in
aas
add
dec
jnp
add
and
xor
add
mov
shr
dec
adc
cld
mov
mov
loopne
inc
sub
dec
push
xorb
flds
bound
add
adc
push
enter
cmp
test
mov
call
adc
mov
add
adc
inc
pusha
test
out
mov
hlt
sub
mov
jbe
mov
js
push
pusha
adc
insl
lcall
lock
sbb
push
mov
movsb
dec
rclb
dec
es
lahf
nop
xchg
cmpsb
dec
pusha
adc
sub
add
pusha
aad
jecxz
loopne
inc
adcl
cmpsb
jnp
pusha
sbb
loopne
xchg
cli
jmp
or
xchg
sbb
mov
mov
mov
mov
adc
loopne
adc
xor
push
adc
in
xchg
push
cmp
popa
add
fwait
loopne
popa
sbb
lods
pop
push
push
pushf
push
xchg
js
add
pop
jbe
cli
inc
push
fsubs
loopne
or
cmp
loop
scas
jmp
mov
clc
cmp
jge
xchg
add
add
lcall
or
dec
jp
loopne
jp
push
fsubs
mov
mov
sbb
aam
shr
and
cmp
loopne
fs
pusha
pop
popa
cmp
xor
loopne
dec
clc
negb
loopne
cmpsb
loopne
xchg
add
insl
popa
pop
lret
push
popa
sub
jmp
mov
mov
mov
and
in
and
loopne
mov
inc
dec
push
in
xchg
jecxz
adc
pop
xor
xor
sbbb
in
mov
cmpsb
fs
jmp
sbb
push
push
lcall
loope
jecxz
lahf
loop
add
adc
loop
or
sbb
cmp
and
or
or
push
sahf
or
imul
adc
lock
pop
add
mov
sbb
or
pop
lock
sub
mov
mov
pusha
lock
pusha
push
and
fistps
stc
lock
fisttpl
insb
xchg
jmp
cs
jns
clc
sub
adc
sbb
jp
test
mov
or
fucomip
sub
inc
pusha
fiadds
lods
add
push
add
loopne
subb
jmp
add
cmp
pop
push
add
test
lods
pop
and
loopne
int3
jno
cmp
ret
jmp
push
stos
jbe
pusha
out
add
enter
fistpll
lret
adc
mov
pop
or
or
test
mov
sbbb
inc
xor
lock
and
idiv
or
cmp
push
inc
push
orb
mov
adc
mulb
fdivs
jmp
inc
inc
testb
sub
inc
pop
or
decl
push
aas
pop
lock
xor
sub
test
jge
jmp
or
mov
movsb
push
and
mov
xchg
pop
and
rolb
mov
push
aaa
or
mov
mov
push
outsl
add
push
push
dec
adc
pop
mov
aad
add
out
add
lods
cmp
xor
push
mov
cltd
outsl
or
adc
add
sub
mov
subb
add
lcall
push
popa
push
push
fcmove
xor
push
outsb
add
lret
push
add
xor
roll
add
cld
in
popf
dec
stos
shl
cs
inc
pop
loop
cltd
fwait
divb
addb
lock
ja
divb
xor
cwtl
xor
int
push
data16
xlat
js
shlb
and
dec
push
cmp
sbb
lahf
inc
add
adc
dec
jb
xor
push
jmp
xor
ljmp
mov
and
sub
jp
and
or
dec
inc
dec
test
outsl
stos
push
clc
or
or
add
dec
mov
imul
adc
adc
push
call
xchg
ret
sbb
sbb
push
pop
and
insl
outsl
filds
add
and
and
shlb
xlat
add
sub
sub
sub
and
dec
jl
xor
jl
incl
sti
xor
xor
xor
out
ss
cmp
les
cmp
loop
cmp
mov
inc
dec
nop
addl
mov
ds
clc
fwait
mov
lock
sbb
nop
cwtl
inc
push
cwtl
sbb
shll
addb
inc
jp
out
push
nop
inc
pop
cs
jne
jle
adc
or
in
fwait
push
sti
cmc
add
inc
test
inc
cmp
mov
stos
mov
mov
jbe
roll
push
mov
or
cmp
inc
push
mov
cmp
push
and
jo
mov
lods
std
out
mov
cmp
inc
push
or
hlt
decl
lock
cmp
dec
shrb
mov
loopne
loop
dec
mov
les
rcrb
mov
testl
loop
pop
xchg
std
jmp
adc
add
mov
xor
sbb
dec
sbb
mov
mov
push
mov
cmp
andb
push
push
cmpsl
jg
hlt
fisttps
out
mov
dec
and
mov
dec
ljmp
and
add
cli
dec
xchg
sub
xor
orb
cli
mov
jle
push
les
mov
clc
dec
inc
addl
push
mov
mov
popf
mov
xor
in
jle
lods
pop
inc
sub
add
loop
sbb
add
xor
loopne
outsb
dec
adc
lret
sbb
js
stos
jbe
and
pushf
rcrb
mov
loopne
test
add
sbb
or
lods
jg
insb
push
enter
add
cld
shll
les
stos
mov
repz
test
add
mov
lods
lods
add
or
jo
je
or
pop
or
adc
mov
aam
ljmp
cmp
mov
aaa
or
pop
jp
mov
ret
push
adc
mov
mov
mov
ret
dec
or
jno
pusha
add
inc
or
clc
int
cmp
jecxz
add
js
test
cli
inc
push
pop
mov
sete
xchg
test
push
pushf
loop
aaa
adc
sub
add
call
clc
jbe
push
xor
and
mov
stos
mov
jge
jbe
mov
cmp
call
push
je
push
jmp
incl
scas
mov
jmp
lock
rorl
mov
pop
add
mov
add
jne
mov
cli
mov
je,pt
xchg
push
pop
cmp
push
inc
lods
scas
lods
iret
or
insl
inc
aad
inc
pushl
fcoms
fcmovnb
call
pop
fs
xor
adc
mov
insl
mov
sarb
je,pn
scas
push
cld
stc
imull
inc
cmp
add
mov
dec
push
mov
push
mov
push
adc
stc
mov
add
or
and
mov
ja
dec
xor
je
idivb
or
mov
jmp
mov
fcomip
sbbb
add
mov
cltd
push
cmpsb
add
stc
jo
adc
add
and
mov
je
sbb
test
sti
enter
jns
imul
iret
ds
clc
imulb
inc
ljmp
sub
add
pop
mov
adc
fdivr
adc
xchg
sbb
or
mov
es
or
orl
les
test
and
incl
add
sbb
add
pop
mov
shll
mov
shll
jb
mov
jge
push
xor
roll
inc
loopne
add
decl
shrl
repnz
into
cmp
jae
testb
cld
add
mulb
inc
stos
daa
lock
or
and
mov
sub
orl
decb
je
or
and
or
and
inc
push
xor
xorl
pushf
cmp
and
cs
out
adc
dec
test
pop
adc
andl
icebp
adc
clc
popf
and
jbe
je
jo
rolb
stc
mov
iret
mov
jmp
test
lea
jbe
das
inc
scas
shll
push
or
add
sbbb
bound
mul
xor
pushl
lea
and
cmpsb
and
scas
push
dec
cld
jo
xor
adc
sbb
mov
adc
clc
mov
mov
lds
jl
xor
push
add
add
inc
imul
push
mov
sbbb
push
or
inc
mov
testb
incb
popf
jl
add
xor
ds
lock
mov
jno
sub
stos
negb
and
push
jo
cmp
les
fwait
add
mov
lods
push
adc
mov
jno
and
jo
sub
jge
bound
cld
dec
iret
xor
scas
xchg
jmp
push
mov
aam
add
daa
les
jne
lock
cmp
ja
xchg
cmp
add
or
push
imul
mov
lret
adc
inc
cmp
stos
push
cld
inc
or
cmp
lock
cmp
mov
push
fnstsw
adcb
inc
add
dec
or
lcall
or
movsb
lcall
cmp
add
or
mov
dec
test
mov
aam
jge
push
in
jne
mov
mov
push
cvtps2pd
add
mov
cmp
loopne
push
pop
fiaddl
mov
sub
les
int3
jbe
inc
les
push
mov
subl
addb
inc
mov
mov
sbb
out
adc
add
dec
or
push
sbb
jb
jmp
dec
add
add
and
addb
out
mov
insb
ret
cld
push
add
add
lea
icebp
xchg
adcb
mov
mov
or
adcb
int
adc
xchg
xor
xchg
push
movsb
je
and
dec
mov
sahf
in
sbb
jnp
pushf
cmp
shrb
adc
mov
aas
ss
fisubs
dec
add
sub
jbe
jmp
in
cmp
add
incl
cmpsl
push
scas
subl
pop
movb
jge
test
adc
jle
add
mov
std
mov
sar
mov
inc
sub
sub
fsubs
ja
jne
insb
clc
mov
add
mov
orl
ljmp
mov
adcb
insb
bound
sub
pop
cmp
clc
sbb
mov
incb
add
add
lods
cltd
scas
push
and
pop
je
inc
xorb
incl
and
cmp
adc
inc
sti
inc
sbbb
ds
fcoml
cmp
jmp
andb
outsl
add
sbb
cmp
jge
test
fsubs
adc
add
push
ljmp
dec
andb
ror
xor
inc
in
add
call
mov
add
push
sbb
mov
add
mov
dec
push
add
lods
push
data16
mov
cmp
cmc
or
add
andl
dec
clc
shlb
and
sbb
cwtl
inc
sbb
in
movb
push
outsb
inc
test
imul
ja
jb
shrb
lock
adc
add
jmp
cs
in
into
add
push
lock
enter
push
nop
sub
sbb
stos
xchg
sub
mov
cmp
cmpsl
push
jbe
andb
push
stos
add
push
adc
mov
roll
dec
xchg
add
lea
fimull
cld
inc
imul
shrl
scas
aaa
add
cld
jmp
sti
adc
xchg
sarb
test
inc
pop
pop
cmp
hlt
or
jp
and
mov
jmp
sbb
xchg
and
mov
pop
inc
outsb
sahf
mov
dec
or
sbb
ficomps
add
inc
clc
pop
mov
rcrl
mov
jmp
orl
addb
inc
int3
push
push
add
push
adc
addb
dec
inc
sbb
xor
ljmp
or
jecxz
sub
aaa
mov
jmp
movl
loop
add
repz
add
or
cli
testb
pop
add
sbb
ret
push
std
sub
sti
inc
cmp
ret
nop
cmpsl
push
shlb
rolb
add
xchg
mov
out
add
pop
push
lods
push
dec
nop
rcl
outsb
add
add
cmp
sub
mov
clc
xchg
outsb
add
inc
add
fdivrl
xchg
sub
clc
divl
and
pop
mov
jp
pusha
add
push
xchg
and
or
xchg
incl
add
cmc
or
add
xchg
call
loopne
mov
pop
dec
xor
and
pop
lock
sti
pop
ljmp
std
incl
cld
movl
cli
mov
adc
push
adc
or
push
test
add
out
cli
push
lcall
or
loopne
sub
pop
or
xchg
add
add
outsb
insb
and
add
adc
lret
xchg
fisubrl
push
aam
add
outsl
jl
xor
bound
or
mov
cld
fs
xor
cmp
je
adc
das
adc
sub
add
lods
ret
out
add
and
iret
repnz
loop
xor
pop
sbb
mov
mov
mov
fstps
pushl
mov
call
nop
loopne
xor
mov
mov
and
insb
and
pusha
and
sub
ret
bound
or
mov
xor
das
test
push
call
or
mov
loope
push
push
call
je
or
add
fisttpl
add
mov
mov
push
cld
jb
in
mov
arpl
mov
mov
lcall
push
cmp
xor
push
mov
inc
push
cmp
add
fdivp
mov
sub
jbe
loop
dec
add
imul
push
pusha
add
addr16
arpl
push
or
xchg
or
mov
and
loopne
or
push
arpl
sbb
adc
adcb
push
pop
repnz
push
ffree
mov
adc
daa
dec
inc
je
and
pop
or
addb
mov
cmpb
call
mov
test
orl
ret
adc
sbb
insb
ljmp
sbb
loopne
and
lock
nop
add
pop
aam
adc
sub
mov
cmpl
loopne
jae
enter
add
add
ret
add
mov
aaa
sub
andb
incb
shll
add
sbb
adc
loopne
popa
outsl
inc
ret
mov
iret
add
test
cmp
xor
xchg
cmpsl
call
roll
jmp
add
or
testb
clc
xorb
cmp
add
mov
cli
inc
pusha
rcll
mov
je
mov
ret
mov
cmp
dec
add
lds
cs
xchg
in
movsb
sbb
cld
add
cmp
ret
dec
inc
jbe
incb
jbe
sub
daa
xchg
cs
es
xchg
push
add
fs
push
push
mov
lcall
mov
pusha
push
cmpb
xchg
xchg
loopne
stos
jbe
out
adc
xor
je
mov
adc
push
pop
inc
daa
xchg
mov
mov
lock
or
jo
add
out
loop
adc
inc
aam
add
popf
loope
pop
add
adc
cwtl
int3
aam
and
jb
or
sub
in
add
scas
push
or
ljmp
sbb
pop
or
fimull
add
js
add
in
divb
nop
or
pop
sqrtps
push
sbb
pop
lock
leave
mov
mov
es
dec
cwtl
in
enter
bound
add
mov
or
js
and
leave
or
inc
rclb
jo
mov
or
or
or
mov
add
je
or
pop
into
lea
adc
je
fs
lahf
es
mov
inc
andl
push
lock
in
pop
dec
shl
sti
daa
test
lock
call
or
add
lock
incl
cli
push
je
lock
push
notb
cli
cs
test
push
stos
pusha
mov
add
bound
inc
mov
inc
cmp
push
lea
push
sub
fwait
shrb
cld
hlt
sbb
adc
push
mov
ljmp
loopne
je
mov
and
add
mov
call
js,pt
add
xchg
mov
jg
add
jb
sbbb
and
pop
pop
add
cld
pushl
jno
adc
je
or
and
inc
and
jmp
fsubl
sbb
push
inc
imul
pop
lock
push
mov
decb
jne
adc
icebp
movsb
mov
clc
sbb
dec
call
mov
mov
mov
lods
and
xor
add
adc
push
lods
shlb
adc
mov
sti
outsb
mov
test
cli
jno
push
inc
inc
inc
push
pop
mov
call
dec
mov
push
aaa
xor
xchg
andb
icebp
sub
or
lea
clc
out
into
push
sbb
arpl
test
and
clc
mov
mov
fcomip
fisttps
push
add
jo
addl
pop
inc
dec
jmp
or
adc
call
mov
push
dec
or
jp
sahf
icebp
mov
mov
inc
call
push
mov
icebp
pusha
call
idiv
aaa
pop
js
lock
add
dec
jo
cmp
call
lea
out
mov
addb
cmp
inc
fs
call
jl
in
jo
mov
test
mov
lock
je
push
xor
sub
or
adc
pop
pop
xor
cltd
mov
clc
scas
and
out
sub
ret
punpckhdq
jo
in
mov
add
jmp
decl
mov
jp
pop
clc
and
jo
call
mov
cld
mov
mov
mov
push
xchg
mov
call
addr16
call
mov
xchg
stos
jl
es
push
jbe
jno
jo
inc
push
dec
sbb
hlt
add
mov
and
push
jo
mov
andb
sbb
rolb
mov
iret
adc
or
add
xor
hlt
mov
leave
outsb
inc
mov
xor
bound
jae
push
out
add
out
sub
inc
imul
push
icebp
push
dec
mov
dec
cmp
pop
xchg
test
lock
test
push
dec
pop
sbb
xor
mov
xor
je
ret
push
inc
mov
or
jp
imul
movsl
fisttpl
lods
cmp
cwtl
fdivrp
xor
sbb
in
es
int3
dec
jmp
std
push
push
and
mov
or
movsb
test
xchg
ja
mov
xchg
add
adc
inc
repz
fs
mov
lods
xor
clc
mov
push
add
std
pop
add
or
adc
cld
incb
ljmp
movsb
mov
add
repnz
add
and
es
pop
scas
idiv
adc
lds
push
lock
aad
or
insb
sub
xor
imul
mov
add
mov
outsl
xor
and
fcmovnu
mov
push
aaa
jo
xor
movsb
icebp
push
lock
and
push
xor
adc
sub
in
sub
daa
add
loope
sbb
mov
inc
inc
fwait
mov
or
in
adc
mov
jo
or
stc
mov
call
and
push
push
or
sbb
dec
push
les
dec
js
test
pop
hlt
andl
add
jbe
popf
or
call
sub
repnz
jne
lods
jae
push
jmp
push
pusha
test
or
aam
call
mov
mov
mov
push
mov
hlt
push
sub
das
and
adcl
inc
jo
jg
sarb
dec
jb
push
jbe
pop
mov
icebp
add
add
push
es
jo
mov
jle
scas
push
mov
dec
jo
jne
mov
add
adc
insl
jne
cs
mov
call
inc
or
mov
mov
shlb
fwait
or
and
aaa
std
push
pop
dec
and
mov
jo
mov
mov
mov
jne
inc
testl
dec
push
jo
sub
xor
ret
icebp
mov
or
cmpsb
push
enter
mov
mov
add
xor
loop
or
add
mov
jne
addl
call
inc
sti
mov
fs
pop
jo
jge
mov
dec
call
sbb
adc
push
inc
int3
add
test
lock
sbb
lcall
inc
jo
sbb
xchg
jo
sub
mov
add
adc
adc
pop
xor
mov
fdivp
incl
push
pop
lds
jo
mov
or
cmp
int3
inc
test
fisttps
push
mov
call
sbb
jg
shr
cwtl
pop
leave
add
icebp
cmp
das
adc
in
jmp
jle
jp
mov
adc
push
sbb
test
jmp
mov
mov
cmp
je
data16
cmp
loopne
mov
imul
mov
dec
call
aam
xor
mov
or
mov
xchg
push
sub
fimuls
mov
test
add
lock
cmp
das
or
mov
xchg
lock
cld
movb
cmp
sar
adcl
sub
push
jae
mov
add
call
xchg
ud0
pop
addb
add
add
xchg
inc
xor
mov
call
fsubl
jne
enter
shlb
jb
ds
orb
mov
addb
subb
mov
cs
mov
xchg
cmp
mov
jo
and
test
pop
mov
mov
adc
or
and
xchg
push
and
add
jno
incl
add
scas
ja
call
mov
push
push
js
ret
push
cld
adc
cmp
mov
call
push
jecxz
lods
push
dec
push
xchg
test
call
js
aam
dec
inc
dec
cli
adc
lret
fdivr
add
xchg
in
inc
push
xchg
call
fimull
movb
hlt
aaa
pminsw
lds
cmpsl
inc
test
dec
mov
add
lods
insb
je
jle
cmp
jbe
jl
loopne
dec
cld
pop
ss
dec
sbbb
push
loope
cmpsb
gs
cld
mov
call
sbbb
mov
insl
push
add
fbstp
mov
xor
push
data16
adc
xor
adc
aaa
lods
or
sub
add
test
push
push
call
pop
jbe
mov
sti
jmp
push
mov
rolb
push
mov
subps
mov
les
pop
push
and
sub
xchg
adc
or
sbb
sti
imull
lock
pop
outsl
push
add
sbbb
loope
mov
testb
cmp
test
or
call
loopne
imull
orb
mov
adcl
mov
adc
add
mov
addb
cli
call
ret
jp
jg
insl
bnd
fldl
and
adc
inc
xchg
sarb
shl
or
popa
stos
push
or
xor
adc
push
add
adc
test
mov
cli
cld
xor
dec
cld
pop
adc
insl
in
adc
rclb
xor
ds
fildll
or
xchg
pop
sarl
mov
call
inc
adc
cmp
add
mov
adc
cmp
and
loope
rolb
add
out
add
jo
push
sub
call
jp
dec
js
hlt
xor
lahf
jmp
shl
cmp
aam
sbb
adc
lods
mov
mov
push
or
pop
lret
dec
cmp
ret
add
push
or
subb
enter
call
push
testb
push
in
fs
fisttpl
dec
repz
and
jb
mov
nop
mov
leave
call
js
arpl
loopne
les
xchg
and
test
inc
call
lret
and
or
push
sub
sbb
mov
clc
and
stos
lea
add
xor
clc
shl
ret
fidivl
or
push
movb
add
or
shll
push
pop
cwtl
mov
push
loope
add
orl
frstor
movsb
sbb
or
mov
jb
test
rorb
adcb
jnp
fstpt
add
subl
push
data16
test
xor
sbb
add
pop
pop
xchg
add
inc
je
cmp
rol
xchg
xchg
loopne
jge
jge
cmp
or
loopne
mov
ret
movsb
adc
cmp
sbb
mov
js
sbb
or
jbe
inc
rcr
rolb
ds
aaa
fcmovnb
push
int
mulb
cli
bound
je
xchg
mov
orl
ljmp
add
stos
sub
pop
sub
subb
out
loopne
scas
repnz
jg
or
arpl
push
add
push
std
pop
lock
cmp
add
cmp
push
outsb
xor
add
test
xchg
or
adc
fwait
outsb
pop
push
mov
sub
jmp
xor
cmp
and
mov
dec
push
dec
call
ret
addr16
push
pusha
or
decl
add
jecxz
fbld
add
sbb
jnp
adc
mov
push
sub
orb
inc
push
mov
push
addb
push
filds
mov
clc
cs
adc
andl
jge
stos
dec
das
inc
mov
or
mov
outsb
ja
push
sub
mov
sbb
push
cwtl
add
fcomps
push
lods
shlb
pop
cmc
in
sub
pop
add
scas
loopne
add
cmp
or
add
push
gs
push
ljmp
pusha
arpl
push
add
lock
adc
cmpl
in
sti
jg
or
jecxz
pusha
or
je
push
lcall
jle
sub
adc
adc
jg
mov
xchg
add
jg
pusha
pop
call
jmp
pop
in
pusha
das
test
add
mov
jne
mov
pop
jae
sub
loopne
xchg
and
inc
nop
xchg
imul
or
orl
adc
fucomi
bound
jne
inc
cwtl
dec
push
pop
pusha
mov
or
cmp
xchg
add
outsl
and
mov
incl
cmc
arpl
push
push
test
les
mov
jle
inc
inc
mov
pop
test
xor
add
mov
push
mov
adc
or
add
clc
mov
sub
push
cmp
sub
xor
call
shlb
pop
je
pusha
and
sbb
roll
int3
pop
xor
pop
orb
mov
push
sub
lds
test
ss
inc
jbe
jmp
call
in
adc
bound
pop
rcrb
add
and
insb
sbb
adc
xor
push
clc
les
add
add
addb
incb
inc
cmp
mov
jmp
cltd
je
adcl
xchg
jl
pop
je
dec
ss
add
lds
jmp
addl
out
pusha
lds
add
inc
pop
jne
pop
mov
stos
imul
mov
push
jb
shlb
pop
idivb
and
fcomi
rcrb
add
arpl
sar
mov
cli
xchg
pusha
mov
mov
nop
icebp
add
or
and
add
nop
adc
xorb
dec
mov
adc
add
insb
pusha
mov
pop
fsubrs
xchg
adc
aaa
or
jge
adc
jb
cmp
pusha
jnp
clc
cmp
sbb
icebp
mov
xor
push
cli
add
enter
adc
dec
mov
xorb
ret
lahf
mov
outsb
call
mov
push
sbb
hlt
xor
or
inc
mov
add
imul
jle
lock
mov
or
xor
inc
mov
adc
std
jb
nop
mov
lock
mov
ret
mov
in
adc
or
mov
fistl
mov
lcall
orb
repnz
mov
push
pop
sahf
xor
mov
insb
jb
jns
fbstp
je
push
lock
xor
inc
xchg
or
test
jl
add
mov
das
add
add
mov
mov
mov
cmp
add
adc
mov
cld
mov
inc
movsl
add
pop
leave
jae
sar
imul
add
dec
or
lock
bound
pop
shll
mov
je
jp
ljmp
dec
inc
mov
inc
loope
xor
hlt
adc
ret
rcrb
ret
sti
call
outsb
loopne
out
add
dec
hlt
add
test
ud0
lock
add
add
push
adc
adc
fwait
mov
scas
adc
lock
je
ljmp
push
call
ds
stc
add
mov
push
cmpl
cmp
out
ljmp
add
and
push
or
or
sbb
pop
hlt
mov
add
mov
or
testb
adc
jb
mov
imul
push
push
shrb
inc
js
sub
sahf
inc
sti
je
ret
jo
jo
cli
mov
add
pop
add
loop
or
mov
mov
adc
mov
inc
mov
cmpl
inc
repz
mov
jb
loopne
and
sub
jge
icebp
or
shr
or
clc
push
lods
mov
repnz
test
movsb
inc
fwait
or
js
push
add
call
sti
mov
and
jae
cmpsb
pop
clc
adc
ja
mov
mov
inc
imulb
xor
sbb
pop
lock
sub
add
mov
add
dec
sbb
sahf
cmpsb
push
sbb
xor
shll
test
mov
ror
adc
lock
pop
clc
pop
or
mov
jne
jmp
fdivrp
movsb
mov
mov
sbb
mov
pop
std
das
adc
or
clc
mov
fisttps
js
neg
mov
stos
pop
adc
stos
fcomp
jecxz
sti
jle
icebp
fsubrs
mov
fxch
outsb
ja
push
mov
adc
sbb
jbe
fs
pop
lock
pop
cs
mov
dec
push
mov
and
lods
pop
push
iret
mov
add
pop
outsb
sub
mov
scas
mov
mov
sbb
or
dec
add
aam
xor
mov
sbb
stos
aaa
sub
sub
pop
pop
sub
push
add
ja
call
pop
ss
cld
incl
push
xor
jbe
mov
nop
xchg
add
jo
mov
jo
test
adc
sbb
ja
inc
daa
push
pop
std
mov
stos
cwtl
clc
add
fbld
add
mov
xchg
add
adc
add
mov
je
test
je
ljmp
rolb
add
cli
add
shl
stos
xorl
dec
and
push
mov
mulb
bound
filds
repnz
adc
mov
adc
inc
push
data16
xchg
add
les
mov
add
idiv
add
or
aaa
xor
je
add
or
popa
mov
sbb
inc
add
outsb
outsl
adcb
lods
mov
nop
mov
mov
in
mov
outsl
xor
cli
cmpl
xor
add
add
mov
mov
and
and
cld
fldenv
idiv
mov
add
sbb
fdivrl
sub
aam
mov
jge
push
adc
push
mov
adc
pushl
aam
jp
roll
out
mov
jp
test
push
sbb
xlat
jae
mov
aaa
cmpl
sbb
add
jle
fstpt
push
pusha
push
add
mov
or
sub
mov
add
fnsave
lds
call
cmp
in
cmp
add
adc
xor
add
ss
pushf
mov
shr
add
add
xchg
push
mov
pop
add
aaa
lcall
lcall
inc
ret
bnd
scas
jo
fbstp
add
mov
lods
cmc
cmp
loop
add
movsb
push
push
sub
loopne
inc
int3
nop
mov
lret
je
into
push
mov
loopne
sar
mov
mov
sbb
jne
pusha
ret
fcmovu
inc
mov
add
neg
cmc
mov
and
jne
icebp
rcrl
xorb
ljmp
mov
jae
and
mov
int3
aam
jl
cmpsb
int3
ss
ljmp
mov
sbb
or
push
push
add
call
es
xor
stc
jl
push
mov
cmp
call
sub
js
adc
pop
cld
mull
into
daa
hlt
nop
sbb
add
add
mov
add
xor
jo
push
mov
fwait
cwtl
mov
xchg
out
sub
dec
pop
and
xchg
test
jns
clc
and
push
std
or
or
lock
pop
call
and
xor
mov
fsub
xchg
mov
pusha
loopne
jmp
icebp
and
or
dec
insb
pop
pop
sub
push
xor
pop
shrb
test
and
push
and
subl
lcall
mov
mov
cli
sbb
pop
hlt
add
xor
mov
mov
mov
sahf
mov
jecxz
cmp
sub
push
fmull
and
sbb
push
cmp
jne
push
out
adc
call
and
rolb
sub
fisubs
es
das
test
cs
cmpsb
data16
push
stos
xchg
or
js
lock
lock
lea
scas
push
push
and
pop
mov
sub
addb
jg
sub
jle
hlt
mov
out
bound
orb
jne
into
lock
aam
popa
cmpsb
xchg
xor
loop
sbb
and
lock
ret
int3
test
sub
mov
jecxz
lock
ret
mov
out
pop
adcb
lods
arpl
mov
pop
sbb
nop
imul
xor
push
lea
aas
fwait
cmpb
loopne
test
jmp
test
mov
lock
mov
js
or
mov
jmp
repnz
dec
jno
or
inc
lcall
dec
js
out
lea
push
call
add
sub
es
orb
addl
sub
sub
movb
outsl
sbb
jmp
aaa
cmpb
mov
cli
mov
sub
add
aaa
lods
cmp
jmp
push
insl
add
sbb
push
and
mov
jp
pop
inc
xorl
mov
je
dec
push
and
add
or
pop
stos
add
adc
lea
or
pop
rorb
mov
jg
cmp
fadds
ret
shll
sub
or
fwait
add
cltd
cmpl
mov
jne
adc
loopne
test
call
movsb
test
or
scas
shll
inc
jmp
push
lods
pop
mov
movsb
inc
test
or
call
or
dec
jg
or
xchg
sbb
pop
push
call
sub
je
add
cmp
daa
in
shlb
or
lock
jg
or
pop
inc
add
or
rcrb
mov
or
and
call
push
add
sahf
ret
and
push
fs
sub
leave
jp
roll
rcll
lock
rclb
int3
jl
sbb
cmpsb
shrb
cmp
packssdw
lods
lods
push
xchg
adc
add
pop
loopne
loopne
mov
inc
push
cmp
clc
add
add
lret
inc
push
pop
inc
pop
dec
ljmp
pop
mov
dec
push
ss
dec
cmp
mov
push
je
je
int3
rorb
add
loope
cli
add
movzwl
sbb
dec
inc
sbb
add
call
shlb
les
cmp
push
lock
or
add
mov
cmp
scas
mov
decb
pop
shlb
ja
and
add
or
inc
mov
je
mov
mov
aaa
mov
shrb
xchg
inc
dec
mov
or
dec
pushf
fdivrs
loopne
inc
and
push
adc
clc
pusha
pcmpeqb
adc
loope
lcall
popa
enter
pop
es
and
mov
cld
mov
or
pop
cltd
mov
and
lea
or
rcrl
or
or
testb
lock
stos
inc
or
add
pop
insl
and
sub
ja
mov
test
and
pop
jecxz
loop
adc
mov
jmp
jb
enter
or
jbe
popa
add
test
loopne
loopne
mov
loopne
xor
outsb
inc
pusha
xchg
adc
lret
and
or
mov
je
sbb
cmp
data16
ljmp
lcall
aas
scas
cwtl
pushl
popa
and
pop
jo
ljmp
incb
inc
mull
ljmp
pop
xlat
mov
cmp
jmp
loop
inc
loopne
mov
xchg
cld
push
rcrb
push
in
pop
jne
push
idiv
jmp
push
pop
mov
or
in
xor
mov
sti
sbb
mov
sub
inc
aas
lret
xchg
xchg
fsts
aam
call
mov
dec
add
jp
jb
testl
and
cmp
mov
fadd
push
sbb
faddp
mov
sbb
pop
dec
mov
insl
clc
mov
mulb
clc
jmp
add
mov
push
sub
sub
mov
sub
cs
test
add
sbb
lcall
clc
outsl
sub
lods
pusha
jnp
inc
sub
sbb
mov
aaa
or
call
loopne
movsb
or
popf
mov
pushl
xor
jae
mov
and
mov
mov
pusha
push
push
and
mov
popa
inc
cwtl
clc
cmp
push
or
mov
sbb
lea
addl
aad
cmp
shlb
je
in
incl
mov
insb
das
add
rol
jp
loopne
loope
fldt
sbb
mov
sbb
jmp
add
inc
pusha
add
sbb
push
sbb
push
xchg
cmpsb
stos
sub
cs
bound
xorl
loop
lock
popa
xchg
pop
mov
jecxz
mov
or
or
gs
pop
call
je
mov
or
test
cmp
or
cld
push
lock
mov
incl
pusha
mov
loopne
lock
pop
popa
add
push
mov
pusha
jl
test
js
sbb
pop
jne
inc
popa
jmp
lret
sub
add
push
sbb
daa
std
or
subb
and
aaa
test
cmp
mov
xor
xor
loope
loopne
xchg
xchg
movsl
incl
loope
pop
jg
xor
imul
mov
movsl
adc
cwtl
add
sub
add
outsl
sahf
loope
arpl
aad
inc
pusha
mov
and
and
out
add
or
mov
dec
mov
js
push
lock
loope
fstpt
pop
loope
pusha
adc
push
sti
push
enter
pusha
ljmp
cmc
sbb
ljmp
loope
inc
add
inc
nop
loop
jecxz
xor
lea
mov
jno
mov
pop
dec
cli
or
jno
scas
call
mov
cli
xchg
popa
cmp
pop
cli
xor
int3
ja
and
cli
int3
mov
or
jmp
shlb
or
and
cmp
adc
outsl
or
cmp
sbbb
or
or
sub
dec
mov
data16
sub
lock
pop
mov
lock
addb
pushl
and
cmc
push
mov
movsb
in
mov
mov
mov
dec
add
adc
fwait
je
jo
add
add
movsb
data16
jp
stos
loopne
ret
add
ljmp
jecxz
pop
call
stos
and
xor
stos
sbb
jg
pop
mov
mov
and
adc
mov
dec
fucomi
lret
xor
in
subl
push
lock
aas
push
call
adc
lea
out
shlb
mov
subb
cmp
jne
negl
add
ret
into
add
pop
mov
in
mov
or
sti
data16
jo
add
sub
hlt
push
pop
clc
pop
fucomp
test
sbb
int3
or
push
mov
push
aam
push
orb
add
jg
or
icebp
adc
fdivl
shlb
push
loop
sbb
jle
lock
mov
pop
push
pusha
and
mov
mov
pop
cs
jne
mov
xor
jmp
push
xor
jne
jo
lea
push
push
xorb
push
pop
lret
and
push
jb
std
mov
dec
inc
enter
dec
jl
and
or
lock
add
lcall
mov
add
fstpt
xor
arpl
sbb
push
jb
jg,pt
pop
inc
inc
jbe
lea
out
add
inc
loopne
add
call
outsl
in
adc
push
push
dec
mov
pop
and
mov
cmp
push
mov
add
or
fistps
and
push
call
mov
pop
dec
jmp
inc
lods
fsubl
pop
jl
push
mov
or
dec
leave
or
addb
scas
sub
stos
sarb
mov
incb
xor
loopne
and
push
imulb
add
jne
enter
orb
mov
lods
jo
jbe
outsl
mov
hlt
ss
ret
add
add
xchg
or
add
push
test
test
fdivl
or
std
fbld
bound
sub
jno
nop
mov
call
inc
add
movsb
xor
je
mov
cmp
dec
lcall
decb
sbb
cli
jmp
push
sbb
sbb
and
dec
push
pushf
push
pop
add
cmp
mov
jle
jo
mov
icebp
mov
add
push
fcoms
repnz
adc
subl
stc
test
jge
rcr
ljmp
clc
scas
mov
mov
push
add
jle
push
adc
mov
mov
adcl
rorb
xor
sahf
cmp
inc
adc
adc
jo
push
hlt
das
ss
mov
paddq
jae
out
and
push
and
aas
subb
pusha
jo
push
inc
adc
push
mov
fists
sbb
xor
jo
data16
mov
xchg
cmc
int
lcall
mov
and
push
aam
mov
push
je
or
test
call
jecxz
mov
xchg
push
push
mov
call
pop
ljmp
pop
lock
lods
loope
bound
repz
push
xor
cwtl
mov
push
adc
ljmp
xor
xchg
out
or
sub
outsb
jbe
addl
or
ds
sub
push
imul
jb
cmp
xchg
inc
inc
ret
ljmp
ja
je
call
js
xchg
mov
rclb
lret
test
push
andl
adc
jmp
lock
xor
movsb
mov
in
subb
xor
cmpsb
andb
pop
fmul
xchg
lock
loop
ja
sti
add
or
test
pusha
sbb
sbb
inc
mov
repz
adc
lea
test
sbb
sti
add
incl
mov
pop
adc
inc
shrb
hlt
pop
mov
jb
mov
in
mov
fwait
in
mov
das
pop
push
icebp
xchg
and
clc
add
rclb
fnstenv
adc
mov
sbb
xchg
in
aas
push
pop
test
call
sbb
mov
testl
stos
mov
inc
ret
jge
call
inc
pop
sub
subb
and
negl
fiaddl
mov
mov
add
mov
scas
push
mov
std
mov
push
jo
and
xor
push
mov
popa
mov
push
xor
andb
pusha
pop
xor
shrb
fmul
mov
test
aas
popa
or
and
cwtl
out
and
mov
inc
adc
cmp
lret
add
sbb
int3
movsl
push
push
pop
lock
inc
fistl
ficomps
jmp
je
hlt
jg
inc
mov
lock
pop
jmp
lock
stc
jo
scas
and
add
pusha
pushf
addb
pop
je
add
inc
xor
jne
pop
icebp
inc
ds
jo
lea
fdivrs
and
cmp
mov
sahf
mov
stos
mov
adc
int
xor
mov
mov
ljmp
mov
cld
push
pop
loopne
rol
or
mov
cmp
mov
jae
lods
fisttps
call
js
sti
movzbl
cmp
data16
cmp
cltd
xor
or
data16
cli
rclb
data16
dec
fwait
add
hlt
les
adc
pop
pop
jno
cmp
or
or
mov
mov
test
xor
pusha
pop
push
outsb
or
mov
les
jp
inc
orl
rol
jb
imul
mov
jb
in
scas
mov
jmp
push
mov
and
loope
mov
mov
notrack
pop
mov
cmp
cmp
cmp
jmp
xor
ret
outsl
mov
xchg
leave
pop
mov
jbe
xchg
jnp
mov
jg
pop
jl
imul
add
lahf
mov
not
and
mov
add
loop
icebp
or
mov
mov
hlt
icebp
sub
adc
pop
testl
fdivp
sub
mov
cmp
sbbb
mov
iret
add
inc
mov
loopne
pop
sbb
cmp
imul
js
mov
mov
push
cmp
fcmovbe
sub
and
pusha
pminub
out
cmp
jbe
jmp
pop
jne
add
add
add
xor
sbb
inc
lcall
add
test
mov
stc
int
ret
mov
sti
push
and
ss
adc
hlt
jbe
add
push
jae
lock
out
int3
mov
mov
xor
bound
add
push
test
test
push
push
add
push
fdivr
jo
mov
push
outsl
push
sbb
pop
mov
or
add
jne
adc
inc
fistpll
fucomi
push
les
loope
mov
inc
pop
adc
jne
mov
lods
stc
mov
mov
les
mov
lock
jb
out
sub
pop
mov
pop
push
rolb
add
push
orb
call
or
aad
push
mov
rolb
inc
out
mov
pop
sub
daa
mov
les
dec
test
push
xorl
rolb
shl
inc
test
xor
mov
push
adc
or
sbb
adc
loop
insl
orl
rol
jae
inc
nop
or
push
sub
or
jg
fsubr
les
mov
fcmovbe
and
inc
call
inc
loop
ret
add
pop
dec
mov
call
imul
cmp
imul
fwait
xor
cmp
dec
lea
adcb
and
mov
push
fdivr
rclb
rorb
enter
xor
cmp
jnp
testb
sub
mov
sbb
sub
xorl
fists
jb
mov
inc
nop
fistpll
mov
xchg
push
sub
or
xlat
je
loop
ret
shrb
fadd
sub
mov
js
call
mov
shlb
sbbb
pushf
push
ret
xor
or
faddl
cs
adc
loop
jmp
add
sbb
ret
fwait
inc
jb
or
shlb
push
adc
ret
jle
sti
mov
push
fld
pop
push
adc
fstpt
dec
les
adc
mov
inc
xchg
push
cli
add
cmp
jb
mov
cwtl
and
mulb
add
inc
aam
jne
jo
in
cmpsb
adc
mov
cmp
cmp
rorb
lock
call
sub
shll
add
xor
je
rorb
je
mov
add
xor
sub
popa
ret
xchg
inc
mov
and
xor
sub
pusha
jmp
out
int3
lds
jbe
mov
push
cld
or
xlat
cmp
ss
jmp
or
inc
inc
xchg
loopne
cld
repnz
mov
rcll
les
jg
and
push
incl
inc
testl
hlt
pop
xor
lods
mov
mov
mov
sub
push
dec
push
jbe
or
and
jbe
fildll
xor
fisttpl
pop
ret
jecxz
xchg
dec
jecxz
xor
or
xchg
je
das
push
push
in
adc
inc
xchg
mov
dec
inc
es
jbe
ret
add
cld
mov
stc
push
call
jo
fmuls
bound
xchg
xor
xor
mov
adc
imul
xlat
adc
iret
fs
xor
push
sub
dec
mov
shlb
clc
je
jp
push
lods
call
add
add
sub
xchg
leave
inc
sbb
popa
add
ljmpw
and
or
call
inc
cmp
xchg
rorb
call
or
adc
call
outsl
testb
mov
mov
jl
outsb
jne
mov
or
or
pop
mov
add
push
popa
pop
pop
lret
push
shll
ret
fs
lcall
push
loop
adc
adc
jns
lret
pusha
fs
addl
xor
mov
pop
sub
or
push
or
mul
dec
pop
loopne
add
ret
xor
or
mov
fs
fidivl
mov
test
inc
inc
dec
bound
jbe
pop
sbb
mov
xor
sbb
jne
repz
cld
fisttps
lock
xchg
mov
sub
fneni(8087
inc
jo
stos
push
push
add
mov
mov
sub
lds
dec
and
jl
je
mov
add
arpl
sbb
or
xor
dec
loope
adc
and
pop
add
aam
jo
inc
and
dec
add
mov
mov
pop
jp
add
mov
mov
sbb
cli
std
aaa
inc
fbld
push
pushl
loopne
std
je
xchg
or
cwtl
mov
cwtl
popa
adc
mov
cmc
mov
clc
loopne
mov
cmp
stc
mov
inc
add
inc
inc
add
and
or
popa
cmp
push
std
divb
push
or
jmp
or
in
aad
decl
cwtl
pusha
adc
sub
or
pop
inc
rclb
adc
loopne
mov
add
fdiv
fistl
je
cmp
insb
fs
or
inc
hlt
push
imul
mov
pusha
sbb
jmp
call
pop
pop
and
clc
push
xchg
adc
adcl
pop
clc
jmp
xor
adc
mov
sbb
jecxz
sbb
adc
decl
outsl
lods
lret
cmpsl
mov
and
mov
aaa
insl
add
popa
cmp
bound
push
inc
loope
pop
test
push
push
loopne
cmp
popa
jp
jbe
call
data16
xor
cmp
push
sahf
pop
call
xchg
cmp
mov
jbe
hlt
loopne
test
add
fimuls
cmp
es
aas
sbb
pop
jge
jbe
pop
inc
imull
ret
popa
pop
addb
les
pusha
pop
add
sarl
dec
mov
ret
xchg
enter
popa
sbbl
les
mov
loopne
shll
add
loop
push
sbbl
fisttpll
jo
push
push
orb
pop
out
divb
je
xor
mov
fdivs
pushf
xchg
inc
cwtl
mov
test
sub
shll
mov
je
pushf
add
dec
loopne
sbb
mov
mov
adc
xor
dec
sbb
jge
stos
mov
mov
add
mov
js
icebp
ja
pop
inc
aam
idiv
and
je
mov
mov
add
dec
lock
mov
jo
mov
shr
nop
ljmp
mov
adc
mov
testb
ljmp
push
add
pusha
addb
inc
inc
push
enter
mov
xchg
or
cmp
mov
jb
mov
add
and
ret
jmp
push
addb
xor
adc
mov
and
loopne
mov
dec
dec
neg
cmp
add
dec
add
call
sbb
and
pop
add
mov
int3
decl
mov
add
lock
mov
enter
jo
push
test
out
mov
or
in
call
mov
cmpsb
insl
movsb
inc
lcall
cli
xchg
subb
sbb
fsubl
fcomi
and
mov
clc
pop
loope
imul
inc
test
mov
or
cli
sbb
rorb
add
lea
lods
sbb
bound
or
jge
sbb
xor
push
into
or
fsubr
mov
hlt
jg
xchg
or
jne
mov
mov
shll
mov
aaa
sbb
mov
push
or
mov
push
sbb
out
mov
jg
mov
xor
adc
insl
push
push
and
sbb
mov
lods
xor
mov
pushf
mov
push
loop
push
mov
je
ror
loopne
call
outsb
pop
jo
xchg
dec
push
leave
clc
or
mov
push
inc
and
pop
inc
cli
pop
cmp
dec
adc
xchg
or
outsb
test
ss
je
je
cmp
call
cmpsl
sbb
loop
js
shlb
sar
add
or
add
mov
jo
lcall
ret
call
push
les
scas
pop
and
push
int
or
lea
lea
mov
loop
mov
add
jg
fs
add
test
jae
cld
sbb
xor
jo
inc
ss
scas
ljmp
outsb
mov
jb
add
adc
pop
imul
mov
or
imul
nop
cld
pop
pop
sbb
add
adc
testb
mov
cs
xor
aaa
hlt
inc
ror
mov
and
lcall
sbb
sbb
es
and
mov
shlb
inc
push
je
adc
sub
adc
clc
cmp
movsl
dec
add
shrb
inc
xor
mov
lcall
cs
outsl
repz
jbe
les
sbb
inc
call
lock
adc
testl
cmp
add
jb
cmp
mov
test
mov
adc
sub
cld
scas
notb
sbb
fstpl
sarb
add
je
pop
shrb
inc
loop
sbb
dec
insb
lock
mov
push
icebp
or
fs
push
mov
mov
sub
inc
inc
pop
push
cmovne
or
fidivs
lret
repnz
dec
jb
hlt
mov
or
and
xor
push
clc
add
adc
inc
or
adc
insb
add
lock
sub
cli
fwait
mov
js
xchg
add
mov
push
xchg
dec
cmp
andl
xor
shr
loope
mov
jbe
test
and
mov
cmp
sub
adc
xlat
pop
cld
int3
lds
adc
fdivrp
inc
mov
mov
mov
push
inc
add
jmp
add
lea
mov
xor
mov
mov
mov
adc
dec
xchg
xchg
mov
push
les
inc
inc
jecxz
sbb
push
jo
lock
hlt
jmp
jne
push
xor
adc
enter
jmp
mov
xlat
aam
jb
mov
push
jnp
jo
pop
fnstenv
mov
add
jge
cmpsl
or
or
xor
adc
fisubs
jno
fsubs
push
in
or
dec
in
adc
and
push
mov
xor
shll
test
inc
test
clc
pusha
aaa
jo
add
jg
xor
sub
jg
sub
adc
xchg
jo
cmpl
adc
mov
inc
adc
mov
je
and
clc
adc
and
xchg
std
addl
sbb
inc
add
inc
jne
gs
lock
lock
insl
ss
adc
jle
inc
nop
inc
dec
adc
icebp
call
mov
pop
jg
jmp
sbb
dec
call
mov
pop
andl
push
clc
pushl
ss
or
and
lock
mov
dec
mov
sub
jbe
mov
iret
cmpb
mov
aam
pop
sahf
inc
out
cmp
repnz
fisttpl
cmp
pop
fildl
repz
shrl
mov
xchg
and
add
sbbb
push
je
cmp
pop
mov
xor
xor
xchg
icebp
sub
push
cmp
xor
sub
call
insl
pushf
cld
pusha
or
push
inc
mov
mov
jecxz
into
shlb
les
cmp
mov
push
lock
mov
test
jge
fdivs
inc
idivl
pop
in
mov
push
dec
movsb
test
xor
sbb
loopne
fwait
call
inc
testb
sub
into
xor
mov
ja
ror
mov
jo
xor
mov
xor
push
xor
ljmp
xchg
mov
lret
xchg
icebp
sub
lods
push
or
add
cld
repz
sbb
mov
adc
nop
add
push
jno
mov
sub
add
std
mov
nop
mov
mov
push
mov
adc
add
adc
or
jle
mov
add
adc
cmp
fildl
fs
mov
cli
mov
mov
sar
add
mov
ss
push
push
test
sub
mov
lret
jne
push
jp
xor
add
clc
cmp
sbb
mov
xor
test
inc
fst
fstpl
inc
repz
sbb
push
aas
cmpsb
lock
add
in
lea
subb
add
mov
cmc
loop
psrld
mov
push
test
test
andb
xor
in
mov
lea
adcb
adc
mov
push
adc
push
or
addb
jge
mov
add
addb
jne
test
sti
jne
mov
add
mov
add
icebp
ds
shll
lea
jle
jle
ja
pushw
add
push
mov
dec
mov
outsl
push
or
mov
add
cmp
mov
loop
outsl
pop
push
mov
mov
sub
jge
jg
jmp
or
das
leave
inc
add
movb
mov
xchg
mov
mov
test
push
les
test
xchg
in
fs
jmp
push
and
pop
sahf
xor
adc
mov
inc
dec
sbbl
clc
orl
xor
dec
or
xchg
or
jl
pop
adc
sbb
add
mov
fucomip
insl
fisubs
push
mov
push
add
in
call
aas
mov
pop
add
test
test
add
orl
jmp
xor
std
je
and
jno
sub
movb
jl
dec
or
push
mov
jns
pop
dec
xor
shlb
and
cwtl
test
inc
push
cmp
leave
lea
iret
popa
pop
fisttpll
nop
sbbb
pushf
jl
xor
xor
sub
andb
or
decb
pusha
cwtl
inc
push
add
subl
cmp
aam
in
clc
pop
das
add
xchg
xchg
inc
add
pop
push
push
sbb
subb
push
orb
rolb
mov
xchg
inc
push
or
ret
push
movsb
rolb
fcompl
sbb
sub
pop
aaa
sub
mov
inc
push
stos
xchg
push
sbb
test
or
push
push
lret
push
xchg
or
adc
sub
xor
mov
clc
call
inc
xor
xchg
dec
xchg
sbb
mov
push
rcrl
test
ffreep
in
or
mov
dec
and
jbe
push
mov
pop
mov
mov
pop
push
rorb
pushl
mov
sbb
ret
inc
js
je
and
shlb
sysenter
cli
fildl
rorb
sub
inc
or
dec
adc
ljmp
mov
mov
or
je
push
mov
push
mov
rclb
jmp
add
lret
rcll
and
adc
movsl
aas
sbb
xchg
xor
dec
or
je
cmc
aaa
pop
lock
or
js
shrb
add
call
sub
push
cmp
jb
jno
or
xor
pop
jmp
or
outsb
adc
add
or
leave
rcll
cmp
clc
mov
jne
je
push
push
xor
xchg
mov
fistpll
ss
sbb
push
rolb
call
mov
pop
pop
fimull
filds
pop
gs
add
stos
xor
leave
ret
faddp
xchg
je
inc
filds
mov
mov
mov
and
test
and
sbbb
fs
pop
loopne
rcrb
inc
xor
clc
pop
loop
cld
and
mov
call
jne
shlb
lret
mov
adc
inc
jg
adc
sub
jmp
mov
add
mov
popf
bound
jl
cmp
cmp
push
jecxz
and
inc
sar
insl
adc
ret
pusha
or
dec
pusha
pop
pusha
call
mov
pusha
and
filds
push
sbb
pop
imul
or
push
popa
sbb
cmp
or
mov
or
fbld
xor
push
adc
pop
mov
fs
jl
popa
shrl
scas
enter
pusha
inc
cmp
testb
or
cld
jne
ljmp
loopne
xorb
inc
dec
or
loopne
add
xor
and
add
jo
fucomi
or
je
arpl
or
sbb
lock
pop
ljmp
loop
jg
lock
adc
sub
ss
clc
je
push
or
adc
push
pusha
sbb
push
out
push
bound
fs
cmp
ds
push
xor
fiaddl
mov
push
jb
call
inc
and
pusha
arpl
mov
add
pusha
hlt
fs
call
fnstsw
ljmp
jb
sarb
movl
xchg
xor
or
push
dec
lahf
add
loop
nop
mov
call
pusha
jae
lea
loopne
pop
dec
mul
daa
popa
inc
mov
inc
adc
pop
add
loop
call
dec
fcompl
mov
adc
pop
push
push
mov
push
push
add
inc
add
mov
into
in
sub
fbld
push
push
shrb
inc
xchg
arpl
cmc
and
loope,pn
adc
enter
jnp
call
jle
adc
test
xchg
add
mov
cmp
dec
data16
sbb
add
ss
and
outsl
loopne
popa
loopne
hlt
cld
pop
in
xor
push
imul
add
shrb
add
adc
pop
adc
xor
cwtl
mov
loopne
loope
pop
mov
loopne
pop
cmc
fisttpl
pusha
loop
mul
orl
push
jmp
push
loop
mov
addb
andb
mov
adc
ficoms
je
mov
or
adc
int3
test
mov
jb
decl
clc
mov
push
mov
icebp
pop
adc
push
add
cmpb
clc
pop
cmpb
mov
mov
movl
outsl
in
add
mov
pop
xorl
pusha
pop
cmp
add
add
push
je
cmp
fwait
int3
xorb
add
inc
ret
xchg
loope
push
push
jle
in
cmp
add
sub
daa
xor
loopne
push
pop
inc
cli
popa
mov
push
mov
push
pop
mov
cmpl
fstpl
pop
xchg
in
out
call
out
inc
push
loopne
clc
loopne
call
lea
jmp
ret
mov
mull
add
adc
sub
and
je
or
inc
loop
adc
imul
jo
mov
fimull
pop
add
stos
pushf
mov
mov
xor
das
lods
push
adc
cmp
xor
pop
cs
mov
rolb
xlat
or
push
int3
scas
xor
and
add
or
dec
jne
sub
xor
lret
dec
pop
inc
sub
rol
xchg
push
ret
jo
insb
add
push
in
daa
and
xchg
cmpb
movsl
movsb
mov
or
mov
cmp
inc
daa
loopne
call
jbe
push
jl
int
clc
inc
add
mov
sbb
add
jbe
hlt
mov
jle
insb
add
dec
xor
call
xchg
mov
mov
mov
pop
lea
bound
push
pop
ficomps
cld
pop
aas
or
inc
inc
inc
popf
jo
mov
sub
push
push
jo
fistl
repnz
jns
popa
jl
inc
fdiv
sub
adc
xchg
mov
add
jbe
dec
je
lea
hlt
mov
icebp
adc
test
es
mov
xchg
inc
jmp
jo
lock
fiadds
or
mov
out
jb
xchg
or
or
add
jle
orb
test
mov
push
adc
lock
add
pop
push
sub
pop
icebp
sbb
pop
ds
jae
pusha
mov
xchg
sbbb
pop
xor
cld
adc
xor
jo
and
adc
inc
lcall
fs
shlb
mov
add
pop
push
add
dec
or
scas
loopne,pn
cmpsb
add
dec
or
incl
inc
sbb
mov
xlat
call
bound
and
roll
cmc
and
mov
push
pop
jb
add
jmp
leave
jae
repnz
and
push
and
ret
jg
inc
fwait
pop
mov
jl
push
sbb
in
pop
mov
mov
js
cmpl
pop
adc
and
cmp
adc
popa
and
dec
mov
adc
loopne
jle
shlb
fadds
inc
inc
mov
incl
mov
es
push
lds
sahf
add
outsb
js
add
ja
jb
je
outsb
frstor
decl
xor
dec
sbb
test
xor
sub
shl
mov
add
jecxz
test
fs
stos
inc
stos
lock
ss
mov
cmpsb
fisubl
jno
and
mov
xor
jne
and
fs
loopne
push
mov
pop
mulb
ljmp
mov
decl
js
call
inc
and
adc
dec
lock
outsl
and
aam
push
test
sbb
fists
shll
pop
pushl
adc
mov
aam
cmp
inc
call
rorl
xor
sahf
and
and
push
cli
cmp
lcall
mov
xor
xor
xor
test
lods
pop
test
add
and
sub
int
or
inc
test
inc
filds
inc
mov
mov
add
xor
sti
mov
arpl
mov
test
add
add
mov
fnsave
adc
sbb
vpsubd
nop
adc
fcom
lock
inc
sub
sub
push
test
repnz
lods
push
adc
lock
ljmp
sub
jae
lock
mov
push
jo
jp
mov
jns
ss
stos
adc
addr16
ds
inc
xorl
call
lock
fdiv
cltd
pop
and
push
adc
adc
call
push
rcrb
addb
mov
xor
add
pushl
in
das
adc
xor
adc
or
adc
addl
cmp
cs
loop,pt
xor
cmp
inc
dec
ret
es
cmp
rolb
add
dec
push
call
push
pop
or
stos
mov
pop
lods
jno
or
inc
jle
les
sub
mov
pop
mov
roll
test
loope
filds
jle
or
data16
jp
dec
call
es
add
xchg
adc
or
sbb
lods
imul
sbb
sbb
pop
add
mov
shll
push
movsl
or
das
jbe
pop
hlt
ljmp
pop
je
rep
lock
fildll
shlb
sub
xchg
jle
jno
pop
call
mov
mov
pop
add
repz
sub
push
sbb
push
inc
loopne
push
jo
xor
sar
lahf
push
push
push
push
mov
fs
mov
xor
pop
call
cmpsb
xchg
shlb
inc
inc
sub
orb
dec
cmp
pop
les
and
push
pop
les
pop
adc
xchg
push
xor
adc
divb
add
adc
push
incl
push
pop
pop
jns
adc
andl
sub
lcall
sub
add
sub
mov
push
shll
sub
rorb
pop
outsb
jo
in
sub
pop
cmp
fstl
mov
jo
outsb
jo
push
pop
and
mov
adc
in
xor
jae
addl
sub
add
adc
pop
sub
jno
adc
movsb
aam
lock
ljmp
inc
add
push
jno
xchg
loopne
or
lea
enter
ret
inc
testl
xchg
clc
arpl
add
xor
adc
fs
jb
sub
ret
test
mov
jb
dec
fbstp
mov
push
mov
rorl
add
dec
jl
ds
call
mov
sbb
mov
sbb
lahf
or
jb
inc
inc
or
inc
sbb
orb
push
mov
sbb
xor
jle
mov
cmpsb
and
lea
jp
hlt
add
push
jl
xchg
ret
shlb
out
sbb
nop
sahf
je
jo
pop
mov
rcrb
add
jne
lea
pop
movb
jno
mulb
add
xor
and
and
sarl
mov
sbb
push
lock
fcmovne
mov
ds
nop
inc
jmp
push
hlt
mov
stos
loopne
dec
xlat
outsb
cwtl
push
or
pop
cmp
test
lahf
mov
testb
call
inc
jmp
into
cmpb
pusha
add
pop
popa
lea
movsb
inc
inc
rorl
add
dec
js
lea
dec
fnsave
jmp
fwait
adc
pusha
mov
adc
xor
enter
aas
pop
or
xchg
rorb
sub
dec
decl
pop
cli
mov
sbb
jmp
lods
add
std
addb
dec
sub
mov
add
sub
and
cmpb
incl
cld
fsubr
sarl
add
sub
sbb
mov
js
loopne
ret
iret
test
jb
add
jecxz
mov
ljmp
adcb
or
push
sub
xor
add
popf
and
or
stos
int
xchg
adc
clc
dec
dec
mov
xor
push
xchg
data16
jne
dec
or
dec
mov
cmpsb
inc
push
sbb
shrl
pushf
or
adc
xchg
cmp
and
inc
push
call
pusha
negb
pop
jp
mov
adc
mov
in
add
daa
lods
pop
repnz
mov
rcl
aam
clc
xchg
jg
adc
mov
push
int3
into
pop
stos
adc
add
sbb
push
test
mov
or
fcoms
push
aaa
add
nop
mov
dec
jle
add
mov
add
add
bound
jne
lea
sub
xorb
cmp
popf
xchg
test
pusha
scas
mov
je
rclb
add
push
cli
rorb
or
scas
adc
outsl
add
incb
inc
mov
mov
or
sub
or
add
mov
rorb
inc
xlat
xchg
pop
push
xchg
mov
sbb
push
mov
add
jb
cmp
jmp
or
add
lds
sbbb
xor
cld
mov
in
sarl
icebp
movb
outsl
jp
inc
rcll
stos
jne
cmp
xchg
or
sub
cmp
data16
pop
or
test
add
dec
fadd
pop
fmuls
adc
pop
dec
push
test
fwait
mov
inc
ja
adc
sub
fdivs
call
insl
and
sarb
add
cmp
push
rclb
add
arpl
aam
inc
ret
mov
and
dec
mov
dec
sub
movsb
jne
mov
sbb
pop
ror
mov
or
inc
mov
pop
es
cmp
decl
roll
jmp
iret
xor
nop
dec
outsl
adc
push
adc
ja
mov
push
inc
es
add
sti
add
das
push
shlb
jl
fildl
fldt
or
pop
cmc
mov
mov
scas
push
nop
push
mov
shlb
loope
gs
xor
add
adc
push
and
jp
add
or
or
pop
icebp
popf
xchg
testl
push
pop
jle
fs
jne
pop
push
stos
and
add
dec
mov
ss
pop
mov
add
sahf
and
popa
pop
sub
ss
hlt
cmp
pop
jle
mov
push
jle
aam
sub
incl
push
pop
jb
jmp
call
pop
loopne
pop
dec
pop
push
xchg
cmpb
sbb
arpl
mov
push
push
add
test
ficomps
xchg
loopne
push
push
sbbb
adc
cmp
andb
loopne
push
push
adc
dec
shlb
push
jmp
hlt
out
fistps
clc
jp
outsl
cmc
loopne
andl
adc
jmp
pusha
inc
pop
call
sbb
dec
mov
sub
or
fldt
mov
loopne
or
out
pusha
aaa
pop
imul
pop
lock
jbe
push
dec
in
push
cld
or
pop
gs
add
cmpb
loopne
xor
call
dec
jge
scas
pop
fsub
bound
mov
sbb
xor
add
inc
mov
out
ja
loope
cmp
inc
pop
push
adcb
mov
dec
imul
or
scas
push
mov
data16
push
cmp
lahf
sbb
stc
push
call
pusha
pop
adc
in
pusha
mov
jmp
sub
pop
and
rolb
repz
push
testb
pop
mov
adc
popa
bound
add
insl
push
inc
dec
clc
pusha
insl
bound
loop
push
jl
push
or
fistpl
ret
mov
jmp
and
loopne
push
inc
pusha
push
xor
cmp
jmp
mov
jle
xor
add
fdivs
cli
adc
mov
pop
xor
in
add
dec
push
push
push
mov
stos
hlt
sub
sub
xor
mov
imul
pusha
add
jno
scas
dec
roll
push
mov
mov
decb
lods
cmp
xor
insl
mov
and
ret
and
inc
add
int3
and
sub
sbb
daa
cmp
cltd
sbb
dec
mov
cmp
jmp
push
push
in
and
in
scas
negl
repz
leave
or
inc
aaa
popa
and
bound
loope
mov
aaa
jmp
pushf
sbb
inc
cli
and
pusha
pop
notb
and
dec
cmc
adc
test
adc
aam
bound
pop
je
and
cmp
das
rolb
xor
push
and
sbb
leave
inc
rclb
sub
popl
xor
int
xor
xchg
clc
adc
pop
fidivrs
ljmp
mov
cmp
dec
mov
mov
push
or
andl
cmpb
pop
dec
or
ljmp
and
cmpsl
push
xor
cmpsl
mov
cmp
inc
addl
subb
lcall
mov
call
add
pop
ljmp
mov
xor
lea
push
scas
andb
mov
mov
adc
std
sub
xor
and
jne
test
aam
outsb
sub
loopne
xchg
mov
out
jo
sbb
cli
pop
je
pop
adc
inc
jg
jnp
cmc
lea
add
push
jg
push
lea
push
push
jno
mov
or
jl
icebp
inc
fnsave
loope
sbb
lock
pshufw
or
out
ret
and
or
xor
js
adc
mov
adc
mov
jmp
push
mov
rcll
or
push
sub
xor
into
xor
pop
lock
popa
in
sbb
and
stos
jo
pop
mov
scas
inc
aaa
test
xor
lock
xor
sbb
cmp
shr
cmp
add
xor
xchg
mov
and
lcall
mov
cmp
adc
push
out
cmpl
mov
loop
lock
rcrb
or
aaa
scas
mov
addl
xor
jecxz
mov
inc
bnd
xor
dec
mov
jne
mov
adc
jb
lock
shlb
sub
fucomi
pop
xor
sub
xor
or
cmp
xor
pusha
mov
mov
test
lods
aaa
imul
insb
ret
add
add
jbe
decl
inc
iret
ss
pushl
and
addr16
lock
cmp
inc
and
push
xor
mov
out
cmp
fstl
jbe
ja
jmp
mov
push
push
icebp
jle
inc
sub
icebp
push
mov
fs
popa
push
and
jae
jl
ljmp
ljmp
cmpb
push
xlat
push
jo
sub
ja
add
or
xor
dec
sub
repnz
jmp
lock
call
je
and
aad
decl
lock
pop
and
jge
repnz
inc
dec
add
sub
push
test
xor
add
mov
stos
adc
mov
sub
call
daa
sbb
test
addb
sub
icebp
and
pop
sbb
insb
mov
or
outsl
and
xor
fs
dec
jbe
mov
add
outsl
hlt
add
les
scas
cli
scas
add
test
push
icebp
test
cltd
fstpt
add
ljmp
adc
sub
cmp
mov
shr
mov
lds
cmp
mov
lds
mov
jo
aam
fistps
enter
movsb
inc
pop
loope
mov
jmp
adc
insl
fildll
int
add
sbb
and
dec
or
push
test
fistps
mov
adc
xor
add
in
sub
jo
data16
xor
push
sbb
mov
sbb
dec
sub
in
add
add
add
mov
push
into
jns
push
or
sbb
jle
push
add
dec
and
mov
add
mov
add
jb
inc
sbb
test
cli
sbb
jmp
push
test
mov
adc
decl
dec
jg
add
jno
mov
call
mov
shll
mov
sbb
adc
dec
xor
aad
loopne
nop
in
leave
add
sub
inc
fs
inc
cmpsb
inc
push
inc
ljmp
push
clc
adc
cli
push
xchg
xchg
jo
incb
cwtl
clc
push
mov
push
dec
clc
push
xor
movsb
bound
push
ds
div
sub
mov
xor
repz
fsubrl
sub
sbb
daa
lea
xor
dec
or
sti
jecxz
push
push
adc
add
ljmp
test
notb
pop
cmc
mov
push
pop
add
icebp
mov
enter
add
sbb
push
int3
pop
pusha
test
testl
cld
lea
push
call
div
mov
orb
push
lock
sub
mov
repnz
inc
nop
or
divb
xchg
je
or
cmp
addr16
jg
cli
cwtl
cmp
mov
inc
cmp
lock
pop
cli
je
inc
jmp
adc
push
mov
mov
mov
rclb
jo
jmp
dec
call
sbb
mov
and
xorb
push
adc
decb
xorl
and
inc
inc
mov
test
stos
ljmp
push
fs
push
ljmp
push
lea
call
sbb
add
mov
add
mov
ss
cli
inc
outsb
icebp
xchg
or
addb
test
add
repz
addb
xchg
push
call
sbb
push
jno
mov
or
mulb
popa
xor
sbb
in
lock
or
sbb
into
shlb
movsb
outsl
cli
pusha
add
push
scas
cmp
or
add
or
push
or
add
stc
add
mov
sub
mov
and
cs
lcall
mov
mov
fmul
mov
or
fdivs
inc
or
sbb
xor
ret
test
add
pop
mov
and
jmp
xchg
adc
sahf
pop
rcll
bound
sbb
xchg
aam
dec
mov
push
adc
adc
icebp
mov
mov
sbb
sub
xorb
ljmp
sub
or
jnp
andb
lcall
test
movsb
xchg
jb
push
lcall
sbb
inc
ret
inc
mov
cmp
jmp
int3
sbb
je
push
mov
jg
mov
enter
jge
jbe
add
and
xor
mov
ret
fildll
rclb
mov
std
rolb
pop
mov
enter
lock
test
inc
jg
mov
vmwrite
add
cli
jnp
inc
test
add
adcb
add
dec
add
pop
cmp
mov
adcl
and
sbb
adc
mov
mov
cld
sbb
or
sbbb
cmp
data16
stos
cltd
movb
cmpsl
pusha
or
xorb
and
pop
sbb
loope
mov
adc
pop
sbb
xor
push
or
insb
jp
dec
push
sbb
inc
cld
mov
sbb
scas
push
clc
inc
andb
add
mull
mov
xchg
ret
pop
outsb
cli
add
xchg
sbbb
ret
xor
ret
jl
in
dec
cmp
push
add
and
out
rorl
and
sub
adc
sarl
adc
xor
adc
addl
sarb
test
icebp
xor
sbb
mov
sahf
push
test
dec
jg
shlb
lods
lods
mov
mov
add
inc
sbb
mov
pcmpgtd
cmp
cmp
es
divb
mov
xor
push
mov
rorb
add
sub
les
inc
rclb
clc
ljmp
insl
leave
incb
push
jns
insl
movb
jg
mov
inc
adc
add
inc
roll
inc
mov
sub
cld
stos
and
jge
push
push
pop
or
or
cmp
int3
or
daa
ljmp
in
mov
mov
mov
jmp
cli
incl
ret
xchg
ret
mov
push
or
jno
add
ficompl
cli
nop
or
xchg
mov
cmp
adc
scas
push
cli
clc
inc
ret
call
sub
shlb
std
mov
ret
cmp
dec
xlat
es
aam
inc
repz
fs
pop
lock
push
pop
adc
in
sbb
xor
out
cmp
dec
mov
in
push
ror
adc
in
add
movsb
push
jl
rolb
lret
or
test
push
or
xor
mov
addl
ret
push
sbb
testl
mov
or
ljmp
stc
mov
aam
cmp
push
push
pop
xchg
and
pop
mov
cli
fwait
mov
push
dec
in
jbe
rclb
pop
sub
imul
call
mov
arpl
mov
bound
popa
sub
js
fadd
outsl
mov
dec
call
insl
movsb
sbb
inc
pop
aaa
test
fiadds
jmp
aas
popa
mov
cld
cmp
je
push
aad
jl
test
movsb
fnstsw
push
add
loopne
pusha
push
es
and
inc
pop
and
repnz
jmp
dec
outsl
jecxz
jb
into
arpl
push
je
pusha
sub
pusha
out
or
cld
les
push
push
push
clc
push
xchg
or
push
inc
loopne
je
cs
sub
call
and
cld
ret
clc
cld
out
and
mov
daa
push
pusha
sub
icebp
fbld
ljmp
push
loop
inc
and
gs
xlat
scas
nop
popa
add
sbb
xchg
into
cmp
mov
jecxz
and
mov
mov
or
sbb
dec
mov
subb
xor
xchg
inc
sub
push
lock
dec
dec
mov
call
movsb
inc
out
mov
add
data16
mov
into
into
xor
inc
inc
mov
ljmp
lea
dec
enter
hlt
inc
sbb
and
fisttpll
pop
fidivs
or
pop
mov
js
aaa
xor
xchg
sbb
loopne
pop
lds
repnz
or
lods
jp
push
jb
hlt
icebp
pop
add
cmp
inc
cmp
mov
pop
fidivl
push
pop
push
stos
or
xchg
mov
leave
pop
pop
dec
popa
imul
sbb
sbb
std
adc
arpl
fidivrl
mov
cmp
cmpsl
test
push
dec
lock
sub
xor
in
cli
pop
xor
adc
loop
stos
push
adc
or
test
xor
mov
loopne
cmp
or
push
loopne
cmp
cmp
loope
mov
push
sub
jno
cltd
pushl
fucompp
leave
pusha
insl
loopne
and
pusha
les
call
clc
loopne
sbb
sti
sub
out
pusha
add
add
bound
stc
cli
jo
or
fistl
mov
mov
cmpb
jno
or
push
adc
add
pop
inc
in
add
and
mov
jo
mov
data16
jmp
cltd
cmp
lock
push
jg
mov
mov
add
adc
pop
jne
loop
data16
mov
ret
decl
and
mov
stos
adc
sbb
mov
sarl
inc
push
pop
pusha
jle
or
or
dec
adc
add
cmp
mov
lods
cmpsl
dec
cmpsb
push
mov
test
sub
out
sub
pushl
add
inc
dec
push
xchg
adcl
push
xchg
loopne
add
call
add
loopne
into
jl
js
cmp
repnz
stos
jecxz
addl
call
jl
fneni(8087
pop
adc
mov
shr
arpl
orb
clc
or
add
shll
add
inc
ds
push
pop
or
inc
push
and
cli
cmpsb
shrl
mov
aam
fadd
mov
mov
mov
mov
mov
add
add
pop
in
cmp
dec
mov
xor
or
mov
cmp
mov
call
sub
xor
lods
inc
cmp
cwtl
lcall
ret
aaa
add
mov
sub
lock
cmp
andl
mov
lar
push
jne
push
mov
mov
jo
and
and
test
and
inc
lods
xchg
mov
data16
das
mov
in
int
je
pop
mov
inc
mov
scas
xchg
bound
add
fmull
add
push
mov
adc
sbb
call
jecxz
mov
mov
mov
mov
xor
mov
subl
add
call
test
add
incb
outsb
loopne
jmp
and
es
ret
and
bound
test
mov
sub
cltd
orb
xchg
or
mov
inc
push
push
int
incl
jl
jbe
jl
push
jl
loop
xor
xlat
in
xor
ljmp
jmp
cmp
loope
mov
xor
les
lahf
lret
jne
push
stos
or
push
enter
sub
adc
dec
pop
add
rol
add
pop
jge
shlb
push
add
inc
pop
pusha
mov
push
sbb
loopne
pop
jmp
ljmp
xchg
fs
inc
jo
xor
mov
pop
shrb
lret
dec
sub
in
test
jp
cmp
inc
outsl
lock
pop
jo
mov
add
aad
sbb
sbb
mov
xor
mov
mov
insb
pop
in
and
inc
ret
mov
push
or
xchg
jo
lea
aaa
mov
call
adc
sbb
inc
sub
mov
lods
jo
adc
or
jl
mov
decb
xor
sbbb
adc
add
addb
push
orb
je
push
aad
ffree
xchg
dec
and
test
add
es
add
add
lret
scas
inc
lcall
mov
lods
in
faddl
outsl
call
sbb
pusha
adc
mov
add
je
cmp
push
ret
sbb
in
repz
incb
jmp
push
or
jo
imul
and
jb
mov
popa
and
cld
push
test
ficoml
out
lcall
mov
push
cmp
fwait
loopne
clc
adc
call
call
xor
test
je
call
outsb
jl
ret
test
mov
push
lock
shrb
xchg
mov
xchg
call
sbb
mov
push
xor
mov
clc
push
add
aad
push
sbbb
add
mov
cmp
mov
orl
mov
mov
fistps
mov
and
decb
and
add
mov
push
imul
adc
rcll
lods
lock
jne
inc
add
mov
je
add
decl
mov
inc
ret
es
cmpsl
lock
lcall
in
dec
mov
inc
jae
ljmp
mov
pop
aas
cmc
mov
adc
mov
pop
data16
mov
sub
inc
add
pop
addl
lods
sbb
push
ss
dec
mov
sub
mov
pop
sub
sbb
subb
push
xchg
test
sub
inc
mov
xor
add
add
fwait
inc
inc
les
rolb
inc
mov
sub
inc
movsb
push
jae
dec
dec
scas
call
xor
add
push
aam
cmp
call
pusha
fs
mov
and
nop
loope
loope
jne
lock
outsl
nop
icebp
fucomip
jae
sarb
inc
xor
outsl
or
add
cli
lock
mov
adc
popf
lock
loop
mov
fwait
mov
lock
pushl
jl
lock
inc
mov
sbb
shlb
jno
pop
sub
add
nop
xchg
scas
fcomps
push
lock
pushf
shrb
mov
pushf
fidivl
sub
mov
push
sbb
je
mov
jb
ljmp
mov
sbb
sub
mov
movb
test
loopne
xchg
fs
mov
cmp
filds
mov
add
mov
sbb
jg
adcb
jmp
push
and
jecxz
jp
fadds
mov
scas
pop
popf
scas
mov
inc
pop
ret
les
cmp
push
ja
sub
enter
or
mov
cmp
cli
out
mov
inc
sub
mov
cmpsb
cltd
idiv
xchg
rorb
aaa
jl
pusha
and
add
sbb
push
sub
push
jecxz
push
jecxz
aaa
jmp
cmp
jb
jl
and
dec
mov
clc
add
sub
imul
mov
popa
adc
cli
sbb
xor
push
pop
bound
mov
dec
pop
scas
pop
jecxz
pusha
push
lock
fs
mov
sbb
add
xchg
mov
add
cmp
and
push
call
addr16
mov
xor
jg
cmp
adc
loopne
sub
cld
pushl
fs
out
stos
jg
je
jmp
lret
lock
push
lock
loope
into
add
scas
lock
or
pop
mov
or
incl
mov
lock
jmp
pop
pop
decl
push
sahf
sbbb
xchg
incl
push
bound
shrl
test
lock
aaa
cmp
test
add
aad
out
insb
lock
ljmp
stos
and
adc
nop
add
sbb
outsb
mov
and
popl
adc
or
dec
mov
jl
ret
cld
iret
push
mov
xor
fistpl
imul
and
fadd
mov
in
xchg
fwait
pushf
jne,pn
xor
mov
fdivl
jb
shlb
dec
pop
jne
add
sub
sub
call
add
es
jbe
jge
or
xorl
push
or
aam
pop
pop
jg
call
addl
and
add
mov
adc
out
and
mov
lea
cmp
jae
in
add
and
bnd
cmp
jne
mov
shrb
jp
lea
inc
mov
clc
add
shlb
jle
lret
jne
shrb
pop
mov
pop
push
push
clc
mov
xchg
xor
cmp
cmpsb
push
jb
cmpsb
movsb
sbb
cwtl
out
mov
ljmp
mov
pop
push
andb
and
out
out
dec
pop
loope
cmp
push
push
add
mov
inc
dec
pusha
sub
stos
js
xor
vmwrite
adc
aam
and
xor
sbb
cmp
dec
cmpsl
testb
jecxz
cmp
add
stos
andb
fmulp
pushf
fwait
or
and
push
sbb
or
sbbl
cmp
add
addb
stos
dec
pop
std
mov
or
mov
adc
outsb
sub
je
mov
aam
push
aad
push
je
inc
pusha
movsl
mov
jo
std
test
lcall
or
sbbb
inc
add
orb
jge
mov
rclb
xchg
xor
push
adc
out
rolb
mov
dec
les
ret
loopne
andl
loop
mov
enter
dec
jns
push
repz
js
push
loope
cwtl
cltd
mov
pop
ljmp
ret
adc
les
sbbl
ret
xor
or
inc
mov
sbb
lcall
pop
imulb
jmp
mov
cmp
xchg
and
iret
addb
pop
cmp
sbbb
adc
dec
xchg
add
je
and
dec
fsubs
adc
lcall
push
adcl
push
cmp
out
push
add
sahf
arpl
mov
bswap
adc
inc
clc
inc
ret
sub
fcoms
pop
xor
add
cs
sahf
ss
add
sbb
add
xor
cs
and
mov
mov
shlb
or
or
mov
loopne
loopne
and
cmpsb
rolb
add
mov
cmp
sbb
sub
cmp
inc
sub
jnp
mov
cmp
lahf
js
dec
sbb
mov
das
pop
mul
add
or
mov
ret
rcll
lea
inc
dec
adc
inc
push
lock
rcr
or
xor
lret
jge
mov
adc
clc
rcrb
or
pop
cld
push
mov
adc
pop
dec
call
cmpsb
xchg
sbb
js
or
adc
sub
int3
and
adc
mov
negb
shlb
testb
test
add
xchg
fmuls
push
pushf
mov
addl
cmp
push
add
lret
fstpt
mov
cmp
or
mov
adc
test
shrb
adc
jg
pushf
jne
pop
push
sarb
jo
cmp
or
popa
inc
jl
pop
or
or
jne
mov
mov
dec
mov
push
in
add
clc
adc
adcb
or
xor
jb
and
ja
jmp
add
mov
push
pop
lock
aas
jno
jo
cli
adc
nop
and
pusha
mov
add
leave
mov
clc
outsb
lods
add
orb
pusha
dec
test
outsl
push
xorl
push
mov
xor
mov
mov
push
xchg
outsb
adc
and
lret
add
inc
pusha
inc
loopne
jne
adc
out
mov
push
inc
int
cli
dec
cs
inc
in
jmp
cli
pusha
jge
inc
stc
test
pusha
je
inc
loopne
loop
cld
mov
aam
mov
sub
push
or
and
sub
jge
adc
jb
test
xchg
dec
ljmp
loopne
and
and
in
mov
pop
int
loopne
sub
dec
mov
or
add
and
mov
pop
loope
add
add
cli
add
sub
and
or
insb
cmp
push
test
and
ds
pusha
adc
push
test
adcl
int3
and
pop
push
enter
pusha
sbb
xor
add
nop
inc
push
push
or
add
das
ret
cmp
pusha
adc
pusha
push
in
loope
adc
push
pusha
in
jg
add
and
or
inc
dec
popa
inc
enter
mov
test
push
das
mov
fwait
jp
adc
ret
and
or
mov
clc
repz
add
xchg
jno
or
jo
pusha
dec
adc
ret
pop
mov
cmp
shrb
sbb
push
or
decb
pop
and
ljmp
call
mov
cmp
lods
sahf
pusha
pop
loopne
sbb
adc
test
mov
mov
shlb
mov
sbb
mov
lods
clc
mov
in
outsl
aas
push
mov
arpl
sub
loope
aad
push
repz
push
jne
pop
adc
dec
ljmp
inc
push
je
lcall
sbb
push
add
sbb
repz
bound
add
lods
or
mov
mov
mov
loopne
lock
sub
and
sbb
adc
xor
loopne
adc
or
xor
jbe
leave
pusha
sub
popf
loop
je
jmp
in
inc
je
bound
inc
in
pusha
outsl
sub
decb
ds
lcall
loopne
push
imul
test
pusha
cmp
loopne
add
inc
cli
repnz
loope
cmp
push
push
fisttpl
and
movsl
dec
ret
loop
push
clc
adc
or
push
je
dec
and
pop
dec
insb
fadds
sub
pusha
inc
decb
xor
loopne
adc
loope
js
lret
sub
xchg
sbb
das
loopne
insb
xchg
sbb
push
popa
push
lock
push
mov
popa
test
push
call
aam
xchg
xorl
add
insb
or
push
adc
sbb
mov
mov
shlb
in
pop
add
push
call
loopne
and
in
jle
pop
inc
pop
aaa
add
cmp
jnp
and
adc
inc
stos
loopne
mov
test
inc
add
loopne
inc
ret
ja
jb
insb
sub
push
inc
push
jmp
inc
out
inc
sub
pop
out
xor
movsb
xor
andb
pop
fcom
inc
jl
push
push
xchg
lock
jo
outsb
clc
inc
in
mov
cmp
enter
orl
jno
jp
push
inc
or
movsl
stos
or
adc
sub
mov
call
jnp
cmp
jo
xor
outsb
enter
lods
xchg
pop
cld
std
in
xor
dec
add
xor
adc
cmp
loop
scas
cmpsb
je
inc
sbb
xchg
or
lock
sub
add
lods
mov
shr
lcall
or
je
icebp
lock
add
or
or
adc
push
scas
cltd
mov
xor
int3
mov
lea
mov
cmp
xor
fsubl
pop
or
dec
jmp
pop
arpl
insb
xor
adc
imull
jb
jmp
xor
lock
clc
add
inc
ror
lods
push
dec
sub
add
gs
orl
or
pop
mov
push
in
or
lcall
inc
mov
sub
add
jl
mov
adc
sub
cmp
inc
in
sbb
xor
mov
push
call
mov
or
mov
rorb
int
fiadds
pushf
js
in
scas
cld
hlt
xchg
adc
add
mov
out
push
sti
out
es
and
push
je
xchg
or
jle
subb
orb
stos
add
add
add
pop
mov
push
mov
push
adc
and
sti
test
mov
repnz
jno
or
andl
ss
push
inc
pop
jle
sbb
call
adcl
shrl
push
bound
or
xor
inc
cld
movb
lea
dec
adc
aaa
add
mov
scas
test
xlat
mov
xchg
adc
js
mov
fsubp
xor
sbb
add
adc
movzbl
mov
test
or
ret
pop
adc
call
add
mov
inc
stos
mov
inc
adc
sub
push
or
add
push
jno
and
cmp
cmc
scas
xchg
sahf
call
add
scas
movl
ret
add
aam
dec
loope
inc
adc
inc
lea
in
ret
and
add
add
and
icebp
jo
cld
lea
mov
mov
inc
sti
sbb
push
xchg
or
inc
subb
dec
cmp
mov
jo
jmp
mov
xor
inc
decl
xlat
les
jno
test
arpl
and
mov
lret
push
lret
sbb
add
add
lcall
clc
outsl
stos
inc
jbe
jo
add
mov
loopne
out
call
mov
rorb
add
inc
xchg
out
adc
mov
and
rolb
and
orps
xchg
adc
add
mov
jb
inc
dec
jne
fcoml
call
jo
sbb
mov
subl
add
cmp
inc
inc
lock
mov
lock
mov
add
daa
mov
cmp
jb
mov
jp
icebp
jmp
ja
ds
lea
push
jns
push
mov
mov
and
mov
inc
clc
call
jo
mov
or
icebp
and
jb
inc
or
ss
lock
cli
ja
xchg
jl
aam
adc
aas
jne
stos
dec
pop
inc
jge
adc
jmp
jle
add
lock
insl
add
push
adc
mov
sub
mulb
je
cwtl
and
test
fcoms
push
sub
dec
jge
cmpsb
dec
or
or
test
mov
xchg
fisubrs
gs
bound
push
pop
addb
adc
push
or
lock
jb
test
call
add
dec
lods
push
sbb
repz
call
cwtl
fdivs
pop
fcoms
and
andl
fs
out
adc
cmp
jge
sub
jmp
jne
xor
add
inc
adc
or
notl
call
mov
addb
pop
add
lock
push
subb
mov
call
stos
inc
push
lret
je
pop
mov
push
fcomps
xor
pop
je
inc
pop
fstpt
push
mov
inc
sti
mov
jl
jmp
dec
loop
int3
add
jne
inc
hlt
lcall
mov
pusha
mov
int3
pop
push
mov
add
adc
pushf
dec
jo
add
cmpsl
cmp
jne
xchg
push
js
mov
jae
and
add
inc
dec
push
fcmovb
mov
push
shlb
call
jne
mov
xor
and
in
fdivl
inc
push
loope
pop
incb
jae
vmwrite
sub
aam
ss
add
scas
and
enter
stos
inc
divl
popa
sti
sub
jae
inc
xor
inc
rcr
fimull
popl
cmpsb
adc
lods
adc
pop
jp
sub
jo
adc
mov
inc
push
xorb
loop
push
pop
jne
lea
add
push
mov
jne
lea
dec
inc
test
pop
jl
jp
pop
insl
mov
mov
je
push
adc
loopne
inc
iret
pop
out
jb
inc
add
movb
add
add
orb
mov
sub
mov
push
loop
jmp
push
adcl
je
sti
mov
dec
inc
add
sti
sarl
adc
aaa
mov
cs
fidivrl
dec
scas
pop
jle
cmp
push
daa
clc
mov
mov
fdiv
icebp
push
xor
xor
fisubrs
mov
jle
jge
add
sbbb
and
pop
adcb
shlb
cmp
mov
call
jg
pusha
inc
sub
pop
imul
adc
push
repnz
jmp
lcallw
test
hlt
mov
xchg
or
jo
and
subb
je
add
sbb
sbb
dec
scas
xlat
jp
cmp
push
mov
shrl
inc
fcomi
cli
test
flds
out
std
push
bound
aaa
jbe
jb
add
movsl
cmp
lcall
xchg
pop
lock
sub
sbb
icebp
xor
sbb
mov
loope
idiv
iret
dec
mov
sbb
cmp
clc
lock
call
adc
aas
and
notb
push
and
xchg
adc
or
and
inc
rcrb
and
add
test
adc
cmp
dec
mov
mov
jb
jmp
test
mov
negl
lahf
sub
sbbl
mov
push
lret
test
add
cmp
je
call
xchg
dec
decl
adc
call
pop
dec
test
adc
and
push
jbe
test
pushl
lods
mov
add
jp
sbb
jbe
mov
cmp
jmp
push
mov
fidivrl
cs
mov
leave
mov
insl
and
inc
aaa
add
pushf
data16
pop
add
stc
loopne
push
xchg
mov
pop
lahf
call
push
insl
out
xchg
mov
ljmp
pop
enter
mov
xlat
and
push
mov
xor
mov
addr16
testl
ss
fists
push
push
xor
je
fs
pop
pop
cmpsb
int3
and
or
and
push
pop
push
clc
lea
mov
push
push
loope
call
in
and
sbbb
stos
push
push
mov
add
popa
xchg
test
into
inc
sbb
add
std
mov
inc
cmp
jb
mov
mov
mov
push
mov
cli
push
pop
add
fbstp
lea
pop
test
rcl
pop
call
xor
pop
pop
mov
decb
adc
movsb
clc
push
push
lea
add
decb
mov
pop
mov
mov
fwait
lret
push
mov
lret
insb
shl
and
and
add
mov
jle
push
mov
cmp
iret
sahf
adc
sbb
pusha
cmpsb
cmp
pusha
mov
xor
or
and
adc
in
and
mov
sub
mov
jl
add
hlt
mov
aam
bnd
fmuls
dec
sub
mov
jnp
orl
and
sub
jmp
jmp
cli
mov
lock
ja
adc
push
xor
call
insl
sub
dec
pop
jl
jl
inc
mov
pop
mov
icebp
inc
mov
jae
mov
mov
call
pop
add
hlt
push
movsb
add
movsl
add
adc
divl
fmuls
pusha
subb
dec
call
and
push
fs
pop
xchg
add
jns
push
inc
xlat
test
jge
xor
jo
xor
and
xchg
jp
cmpl
jno
leave
sbb
xchg
pusha
push
cld
push
or
ds
fisubrl
cmp
xor
js
push
mov
loope
int
push
fadd
push
outsb
sbb
mov
das
sbb
les
mov
std
dec
insl
ret
test
frstor
cmpl
mov
aas
xchg
mov
cmp
je
mov
data16
and
jb
xchg
lds
cmp
jge
jb
ja
aas
add
ljmp
inc
mov
data16
fiaddl
outsl
xchg
or
js
mov
imul
cld
push
cmpb
movsb
or
push
mov
daa
dec
test
idivb
loopne
pop
out
push
inc
pop
adc
sti
adc
mov
out
mov
sbb
out
outsl
je
jl
add
andb
pop
xor
lods
xorb
js
mov
sti
adc
ss
call
in
shrb
sti
add
and
lcall
loope
or
jge
test
xor
dec
lods
dec
ds
and
push
dec
inc
loope
mov
ja
inc
enter
cmp
nop
mov
sete
idivb
add
hlt
jb
shr
dec
mov
push
ret
popa
test
nop
pop
pop
jmp
loopne
testb
xlat
fisubrs
adc
jle
int3
shl
stos
mov
hlt
push
ljmp
mov
adc
mov
decl
push
into
shlb
xchg
jle
jecxz
out
call
jnp
add
test
or
pushf
fmuls
mov
jl
icebp
mov
lea
je
xchg
cmp
dec
test
jge
xor
mov
mov
cmp
lods
out
subl
inc
jo
dec
flds
ja
call
push
jbe
jge
xor
xchg
xchg
xchg
loop
and
jmp
mov
rolb
f2xm1
sbb
packssdw
xor
and
rorl
lock
jle
mov
dec
or
add
xchg
hlt
cmp
idivb
jmp
sbb
cmp
lock
paddusw
pop
and
mov
push
div
push
mov
movsl
adcb
sbb
adc
mov
ret
mov
xchg
movb
pushf
cmp
add
jbe
pop
xchg
jbe
cmp
pop
sbbl
and
sub
push
push
enter
out
xlat
fsubr
push
movsb
add
inc
push
xor
mov
dec
filds
cmpsb
cwtl
iret
scas
push
or
fcoms
cmp
dec
jbe
or
jl
ret
mov
stos
add
sub
sub
or
pop
popf
repz
sti
lea
mov
jmp
mov
call
sub
cmp
sbb
push
inc
mov
and
xor
pusha
in
jbe
inc
push
sahf
into
popl
jmp
movsb
lock
pop
push
jle
mov
push
xor
call
sbb
xchg
cmp
mov
pop
enter
or
adc
pop
and
adc
out
loop
or
xchg
add
xchg
adc
sti
jb
jmp
adc
sti
pop
cmpsl
test
sahf
inc
out
stos
sti
jmp
ss
sarb
cs
or
mov
add
mov
push
es
aad
ljmp
mov
ja
cs
add
push
rcr
xor
jae
mov
subl
jmp
inc
mov
mov
addr16
or
cwtl
adc
cld
cli
push
inc
adc
cmpsl
roll
and
out
sti
lahf
add
call
arpl
mov
add
ds
mov
lea
pop
test
and
add
add
xchg
lahf
ffree
pusha
add
push
adc
push
jne
stc
push
mov
mov
push
push
test
xchg
ficompl
movsl
negb
decl
sahf
push
nop
cmp
inc
push
xchg
sbb
jnp
push
cmpl
pop
and
addl
push
push
adc
insl
cmp
in
cmpsb
xchg
push
mov
testl
out
push
push
cmp
push
arpl
mov
aaa
sbb
loop
cmp
push
mov
testb
mov
jl
push
ds
test
in
or
loope
jne,pn
pop
incl
decb
mov
mov
push
add
lds
loope
cs
pop
add
push
sbb
pop
movsb
ret
sub
pop
int3
or
inc
sub
pushf
nop
cmp
mov
xor
mov
mov
xchg
pop
push
mov
xor
push
push
mov
mov
pop
and
enter
dec
call
xor
or
sbb
push
out
sub
cmp
push
cmpsl
inc
xchg
je
jmp
mov
push
xchg
add
stos
and
cmp
push
ret
jbe
jne
inc
test
pop
leave
int3
je
jg
add
mov
or
or
mov
andl
xor
xchg
push
pusha
loop
add
push
mov
inc
mov
loopne
inc
push
push
mov
or
mov
jne
cmpsl
test
decl
scas
aaa
add
xchg
push
and
rolb
or
push
es
fildl
repnz
lret
sbb
mov
sarb
lock
testb
adc
lock
or
test
sbb
stos
fiaddl
and
pop
and
pop
xchg
sbb
mov
sbb
fildl
jb
sbb
add
adc
outsl
pop
xor
jmp
adc
daa
jb
jmp
cmp
mov
or
push
jne
mov
fmuls
sub
cmp
sub
mov
rcrb
dec
or
xchg
xchg
pop
mov
xor
adc
movsb
push
call
in
daa
xchg
push
adc
jno
mov
mulb
dec
or
fdivl
dec
out
xor
les
mov
mov
dec
aad
test
dec
sbb
cmp
inc
loopne
add
inc
mov
call
mov
pop
clc
mov
cmp
pop
adc
cli
or
mov
adcb
repnz
ja
sti
mov
lock
dec
call
lock
push
je
in
inc
cmpb
addl
pop
andl
pop
xor
xchg
mov
call
mov
insb
sbb
test
in
ss
flds
jne
cs
sub
jge
cmp
orl
push
push
jg
mov
dec
loopne
jge
jb
outsb
cld
lea
je
adc
push
popa
inc
shlb
mov
cmpb
jne
mov
test
mov
mov
inc
mov
repnz
enter
lods
rclb
sbb
lea
cmc
lret
ja
aaa
pop
popa
mov
and
mov
inc
fnstcw
sahf
sub
add
push
dec
jno
xchg
cs
pop
jmp
push
push
add
mov
push
mov
sbb
mov
mov
out
mov
decb
hlt
and
jl
mov
roll
cmp
mov
negb
faddl
out
outsb
add
or
cmp
xchg
jecxz
mov
outsb
cmp
fs
pop
dec
push
movsl
mov
push
lock
cli
push
add
cld
cli
jo
xchg
mov
inc
std
pushfw
cs
and
sti
loop
mov
es
adc
scas
xor
lea
push
xor
or
fldt
hlt
dec
and
cld
leave
and
adc
add
mov
jp
pop
and
push
call
test
shl
test
push
lea
lock
mov
push
cmp
inc
movb
jne
jbe
fcomps
enter
sub
add
push
jne
cwtl
test
push
add
scas
push
test
push
or
ljmp
sub
sub
cmp
lret
push
inc
aaa
decl
js
fcmovu
mov
add
out
mov
pop
cmp
jbe
mov
pop
clc
push
pop
addb
jbe
mov
add
lar
mov
inc
ss
mov
add
or
je
bound
mov
jle
lds
outsl
fbstp
clc
mov
int3
ja
inc
adc
or
add
adc
mov
loopne
jl
out
jne
push
push
call
lods
add
xchg
enter
push
ds
hlt
mov
sbb
idivb
xor
pop
and
mov
into
aam
xchg
mov
out
cld
repz
push
ljmp
out
jbe
push
jnp
xor
cmp
pop
pop
int3
mov
dec
pop
pop
fldcw
stos
loopne
in
rcll
mov
sub
out
push
pop
mov
call
pop
or
loopne
daa
dec
or
push
cld
ficoms
jle
mov
lsl
mov
add
cmp
dec
repnz
cwtl
mov
mov
je
cmp
psadbw
jne
je
xorb
xchg
mov
and
data16
sbb
jne
les
dec
hlt
push
push
hlt
outsb
pop
movsl
add
or
add
pushf
adc
in
adc
xor
cli
mov
and
jl
lcall
sub
mov
push
hlt
sub
push
stos
pop
mov
stos
sbb
and
add
xor
push
fcomps
xor
mov
cmp
inc
ljmp
push
add
aas
mov
sbb
cld
lea
aam
repz
mov
std
push
xor
or
aaa
jne
ss
data16
add
or
adc
xchg
pop
scas
jge
scas
push
xchg
nop
inc
in
mov
dec
clc
mov
fmuls
push
jmp
sbbb
and
cltd
xor
jl
dec
and
mov
inc
and
jl
gs
pusha
mov
xchg
add
aaa
mov
jl
mov
outsb
nop
test
cld
test
gs
stos
mov
gs
pop
pop
mov
test
push
push
jecxz
cmc
and
test
inc
push
or
test
xor
cli
call
sub
xor
mov
data16
ss
inc
xor
es
lcall
shrb
mov
xchg
add
aad
out
mov
dec
cmpsb
lcall
imul
mov
in
push
push
lock
outsl
dec
inc
bnd
sub
pop
push
push
pop
dec
mov
roll
sub
push
mov
push
mov
lret
mov
pop
xor
int3
insb
jle
inc
cmp
adc
cld
adc
push
cltd
in
mov
stos
dec
sbb
xchg
shrb
dec
data16
adc
pop
repnz
mov
add
aam
push
hlt
dec
ljmp
int
fdivrs
jbe
xchg
test
imull
flds
push
scas
cwtl
push
mov
xchg
movsl
xchg
ljmp
or
inc
test
add
add
call
shlb
xor
cld
mov
jl
inc
je
mov
or
mov
cmp
fdivrp
fmull
mov
rclb
add
into
nop
push
bound
or
sbbb
cwtl
or
movsb
mov
sub
add
addb
mov
loop
inc
shlb
push
int3
call
stc
cli
out
add
adc
cmp
packssdw
sbb
dec
mov
mov
xor
gs
lock
push
in
jg
dec
pop
sbbb
loope
jbe
loope
inc
shl
or
clc
cs
xchg
loope
pop
or
testb
nop
jb
jge
push
je
in
outsl
inc
jge
cmp
mov
add
push
lret
insb
push
jge
cmp
mov
repnz
pop
xchg
cmp
cmp
xchg
repnz
sub
mov
jle
es
pop
mov
mov
stos
mov
cld
shl
inc
add
lcall
pop
popa
inc
push
lcall
aam
mov
adc
call
adc
rcrl
cmp
lock
int
inc
es
jne
push
add
inc
xlat
cli
mov
mov
mov
push
movsb
push
sti
call
push
inc
call
imul
mov
mov
or
inc
les
jl
push
cmp
pop
ljmp
es
in
andb
jl
inc
pusha
push
mov
test
pop
aam
fdivl
add
pop
das
pop
bound
or
cmpsb
xor
mov
mov
add
js
or
push
shlb
dec
fs
mulb
sub
and
adc
push
push
lcall
cmp
mov
or
cs
xor
pop
mov
decl
and
daa
inc
add
mov
inc
fsubr
xor
pop
call
dec
push
mov
repnz
xchg
ljmp
loopne
lock
fstpt
inc
adc
in
test
aas
mov
orl
push
xchg
repnz
popa
mov
negb
roll
adc
inc
add
enter
cmp
sarb
push
clc
mov
jmp
adc
push
enter
les
je
sub
add
mov
ljmp
add
aam
ds
dec
push
add
push
mov
push
add
mov
cmpl
mov
add
pusha
loope
rcrl
outsl
push
add
xchg
ds
push
std
mov
push
cld
dec
data16
fmul
das
and
das
clc
and
cmp
pop
mov
lds
mov
repz
cli
pop
and
repz
nop
cs
call
imul
int3
dec
pop
and
rcrb
je
loope
xchg
addl
pop
mov
jne
xor
cmp
rcl
push
or
mov
repnz
inc
add
or
iret
mov
cmp
jb
je
jle
mov
add
fstpt
into
jg
add
bnd
mov
mov
inc
fwait
lods
jmp
xlat
cmp
adc
mov
ja
or
insb
ss
lret
sti
jne
push
sti
bound
or
or
fwait
mov
ljmp
jbe
or
add
data16
dec
cli
push
add
je
cmp
jg
mov
es
mov
data16
repz
or
inc
dec
cld
shrb
adc
cltd
mov
cltd
add
rcrb
cmp
xor
mov
js
jne
enter
xchg
pusha
pop
popa
cwtl
jecxz
mov
inc
jbe
mov
in
hlt
push
stos
enter
add
lock
adc
push
lock
data16
cld
movsb
aam
negl
test
or
mov
movsl
jbe
data16
rorb
push
mov
icebp
mov
mov
mov
push
mov
pop
push
xor
push
pusha
sti
jne
lea
scas
fdivs
mov
mov
pop
add
push
movb
xor
out
jg
add
sbb
aad
mov
jne
fiaddl
outsb
mov
ljmp
rorb
sub
shlb
cmpsb
lds
inc
ficomps
out
add
cmp
jbe
jmp
and
aaa
mov
push
ds
cmp
mov
cld
icebp
mov
jne
mov
cltd
cmp
jne
pop
jle
faddp
cmp
xor
into
jmp
frstor
ss
js
mov
inc
mov
roll
cmp
jae
push
sbb
add
mov
fildl
stc
mov
add
shr
or
das
inc
xchg
rcr
in
push
loop
jg
ljmp
inc
add
or
inc
add
mov
in
insl
pusha
push
pop
decb
push
add
mov
or
mov
and
insb
fcompl
ret
mov
cmp
pop
xchg
in
ds
jbe
add
lock
xchg
in
push
mov
push
notl
xchg
mov
dec
or
pop
push
mov
adc
add
mov
mov
je
dec
push
push
out
es
sub
mov
push
add
push
mov
pop
xchg
cli
push
sub
inc
and
sub
push
cltd
and
cmc
test
jbe
pop
jl
testb
sub
push
call
jge
cld
dec
mov
sbb
jb
push
push
gs
adc
push
mov
pop
int3
jmp
pop
or
add
and
aaa
mov
cmp
add
or
rcrb
adc
ret
pop
push
rclb
sbb
pop
imul
cmp
dec
mov
mov
js
clc
bound
jle
inc
pop
sbb
popf
xor
add
dec
adc
shr
add
into
mov
mov
hlt
mov
and
cmpl
hlt
push
or
cmpsl
lahf
dec
es
push
push
inc
out
jo
ret
xor
push
insb
inc
mov
xchg
push
xor
xchg
in
adc
adcl
sub
sub
scas
push
push
loop
cmp
push
sub
push
call
gs
push
push
mov
or
mov
sub
mov
adc
inc
inc
mov
sbbl
cmpsl
shrb
or
add
xor
call
fisttps
in
push
inc
faddp
inc
and
jg
or
sbb
movsb
push
inc
and
adc
push
jl
adc
movl
movsl
dec
loopne
pop
mov
sbb
and
sbb
xor
mov
ds
lcall
aam
push
aam
jae
jns
pop
call
jmp
push
lods
sbb
scas
call
rcl
pop
incb
inc
or
add
xchg
cmc
cmp
add
pop
scas
or
jp
adc
push
or
add
mov
cmp
fwait
cmp
or
mov
clc
ds
push
pop
stos
xchg
or
outsb
mov
cmpsl
jno
add
inc
in
aas
xchg
es
jl
push
sbb
test
movsb
repz
call
or
push
inc
push
aaa
clc
dec
aam
or
into
rcl
push
jmp
xor
shl
hlt
lret
idivl
inc
add
inc
add
cmc
sbb
enter
adc
dec
leave
add
sub
jl
and
int
sbb
test
in
fcmovb
aaa
dec
mov
lods
loope
adc
pop
or
ja
popw
sbb
adc
xlat
loopne
out
inc
pushl
pop
scas
lea
scas
mov
inc
insl
mov
int
mov
mov
data16
mov
shlb
bound
mov
call
push
dec
pushl
dec
pusha
lcall
inc
pop
adc
into
scas
leave
lea
je
cmp
jle
xor
inc
push
in
mov
xchg
fmulp
out
adc
or
je
mov
pop
and
ror
loopne
push
or
imull
decl
sbb
jne
and
shlb
sub
push
add
dec
lock
mov
adcl
ds
insb
push
mov
pop
fildll
inc
testl
sbb
add
push
or
or
mov
mov
das
pop
inc
ja
pop
cs
mov
test
jne
sub
pop
shll
dec
inc
mov
vmovdqa
jge
mov
shl
movsb
les
ds
push
or
lods
sar
sbb
cmc
wrmsr
hlt
and
notl
jnp
rcrl
xorb
fisttps
inc
and
sub
lcall
int3
outsb
inc
mov
stos
add
push
pop
in
outsl
sbb
movsb
or
or
fimuls
push
or
pushf
call
adc
test
jo
fisubs
cs
and
inc
mov
loopne
sahf
push
or
cwtl
pop
inc
and
incb
clc
add
lds
fcoms
dec
flds
xlat
push
xchg
cmp
add
mov
test
adc
dec
sbb
add
pop
ljmp
xchg
popa
dec
and
lock
flds
call
sbb
mov
nop
add
inc
std
adc
test
push
mov
add
and
in
add
mov
push
data16
adc
cmp
out
push
jp
xchg
pop
imul
pop
lea
bound
mov
adc
push
jle
jbe
lds
rcrb
call
ret
xchg
subl
cmp
add
mov
add
xor
xchg
clc
mov
add
inc
push
sbb
out
push
iret
rclb
call
jns
mov
loop
or
add
fwait
xchg
and
test
push
pop
or
jb
pop
xor
lea
sub
bound
mov
xchg
xor
fsubl
dec
dec
mov
sub
jnp
push
cmp
fldl
scas
sar
pop
push
es
insb
fadds
jle
add
push
mov
jecxz
and
std
addb
sub
sahf
inc
jo
or
insl
cmp
ja
xchg
add
lods
dec
mov
and
inc
xchg
js
mov
inc
and
jne
pusha
addl
fiaddl
rol
adc
scas
in
ret
push
loop
sub
in
pop
adc
les
or
mov
mov
sbb
adc
fcom
ja
orb
stos
stos
or
push
pop
les
or
dec
adc
mov
xchg
push
xchg
aaa
push
pop
dec
repnz
faddl
add
movsl
and
ret
mov
or
pop
aad
pop
ds
add
imul
es
adc
movsb
lock
insb
push
jne
dec
sub
je
add
daa
mov
rolb
mov
loop
push
mov
je
int3
leave
cmp
xchg
shll
jmp
xor
insb
pop
mov
mov
sarb
and
in
sbb
mov
jbe
add
loop
adc
clc
int
sbb
leave
je
enter
rorl
adc
pop
nop
dec
adc
in
mov
pusha
add
hlt
and
or
mov
aam
and
cmp
aaa
je
fwait
mov
imul
sbbl
orl
aaa
rol
lock
or
cmc
push
xorl
stos
push
mov
add
mov
push
stos
lea
mov
aam
inc
lock
repz
fs
xchg
push
add
movsl
je
pop
out
add
add
imull
dec
fs
pop
lret
fisttpl
push
mov
push
push
hlt
dec
push
jge
es
add
dec
mov
add
lcall
rorb
shrl
xchg
push
xor
es
fsubr
lock
fsubrs
mov
scas
adc
mov
jmp
jb
sub
xchg
rcrb
pop
pop
mov
roll
sub
cmpb
mov
adc
mov
mov
cmp
ror
aam
adc
mov
dec
jne
sub
mov
inc
cmpl
adc
jnp
aad
ret
mov
push
insb
imul
dec
xchg
or
dec
outsl
mov
sub
or
or
push
sbb
shr
xor
xlat
fcoml
sbb
or
and
ret
test
mov
cmp
and
lods
mov
rol
mov
in
arpl
add
je
inc
out
std
outsl
jg
mov
test
mov
pop
shl
jb
pusha
inc
lret
popa
cld
pop
mov
push
loop
pop
adc
jbe
or
andl
jo
push
or
sub
mov
int
loop
aaa
mov
and
shl
subb
jo
xchg
sbb
bound
and
hlt
std
or
push
xor
mov
cmpsb
cmp
mov
pop
xor
mov
lods
insb
dec
or
dec
add
lea
inc
dec
in
add
jg
lods
fsubs
or
or
or
repnz
insb
bound
jo
dec
mov
or
jo
xchg
jne
jnp
cli
or
add
call
or
jp
clc
ljmp
mov
movsl
loope
arpl
add
jmp
jecxz
jecxz
or
in
and
jb
inc
mov
push
adc
push
jnp
loope
or
jle
fbstp
decb
cmp
add
jne
pop
addb
jmp
adc
or
inc
mov
jg
jge
pushf
loopne
add
mov
mov
inc
test
dec
pusha
adc
cwtl
cli
stos
and
push
mov
fwait
je
push
xor
jmp
inc
jle
add
pop
xchg
cli
ljmp
xchg
cmpb
cmc
loopne
jmp
je
add
dec
pusha
stos
jmp
ds
xor
mov
js
push
rclb
mov
ja
add
mov
dec
int3
sarb
icebp
push
sub
jmp
cmp
add
scas
add
push
xor
jl,pt
push
outsl
add
jg
mov
imul
add
sub
test
and
jge
pop
add
add
jl
loopne
notb
fbld
divb
aas
popa
inc
mov
cmp
pop
ret
push
pop
add
pop
push
loop
loopne
andl
jmp
mov
push
popa
sub
out
jg
mov
add
loopne
jbe
add
add
or
and
sbbb
pop
jg
lret
adc
pushf
jne
push
mov
or
dec
shlb
push
imul
mov
lret
sbb
loope
push
sub
push
gs
pop
test
mov
add
add
push
add
push
jmp
add
adc
mov
jg
cmc
call
adc
push
pop
mov
lea
loopne
ds
add
and
sbb
add
push
mov
add
cmp
adc
mov
sbb
sub
mov
mov
ss
mov
jbe
add
xchg
add
mov
test
loopne
pusha
xor
incl
pusha
xchg
mov
push
cli
loope
dec
or
outsl
xchg
jle
and
sub
mov
push
cs
mov
add
push
popa
pop
push
add
xchg
aam
xchg
pop
xor
incl
loop
jl
add
push
or
adc
mov
stc
in
xor
or
out
adc
add
mov
adc
loopne
sub
mov
jmp
ret
xchg
clc
repz
decl
sbb
add
enter
adc
sbb
scas
push
jecxz
in
cmp
mov
adc
pusha
cld
pop
add
mov
jmp
aaa
aaa
out
arpl
sub
mov
xor
mov
sbb
adcl
jb
pop
or
adc
scas
mov
jo
and
addb
hlt
sbb
insl
jg
mov
outsl
fwait
push
push
lock
sarl
and
adc
sub
add
jo
je
ret
aaa
cmp
sub
push
jmp
xchg
adc
adc
cmp
cmp
mov
pushf
and
xor
push
push
sub
add
dec
adcb
dec
dec
xor
subl
push
call
adcb
adc
sbb
sub
pop
xor
and
fisubs
cs
clc
and
insb
sbbb
add
test
sbb
jmp
fists
and
push
mov
clc
xchg
add
xorb
shr
outsb
add
lods
decl
or
add
shl
adc
push
inc
add
mov
adc
ret
mov
mov
test
ss
test
int
mov
sub
cmpsl
bound
and
add
push
adc
cs
sti
xor
leave
xor
add
and
ja
push
mov
aaa
adc
call
push
lock
jle
call
popa
push
or
add
mov
sarb
or
jo
inc
jno
dec
cmp
pop
lea
mov
jo
sbb
mov
movsb
inc
adc
pop
push
pop
js
leave
cmp
ss
inc
aam
popa
dec
adc
jo
xlat
xchg
xchg
sub
adc
mov
adc
jo
ds
popa
mov
jg
adc
or
add
or
add
jmp
add
inc
negl
add
pop
add
push
sub
leave
adcb
sub
xlat
xor
rolb
pushl
adc
push
pop
mov
pusha
pop
call
pop
ljmp
push
mov
scas
and
mov
xorb
mov
xlat
and
repnz
testl
jne
add
adc
int3
ljmp
scas
mov
cltd
push
push
call
jmp
nop
mov
or
add
aaa
sub
sbb
pusha
dec
idivl
fwait
xor
jp
out
call
adc
outsb
inc
adc
popa
inc
loopne
cmp
lods
add
xchg
xor
add
js
ja
or
div
pop
mulb
or
push
sbb
push
inc
lock
xor
inc
mov
mov
nop
pop
sub
or
push
hlt
add
add
popa
inc
rolb
roll
push
mov
sti
daa
adc
leave
jecxz
add
pop
inc
rorl
ret
bound
xor
sub
push
and
fnstenv
adc
and
shrb
clc
pushf
addl
pushl
adc
inc
adc
call
test
dec
adc
clc
xor
adc
inc
lock
adcb
adc
cmpb
aaa
dec
insb
add
es
add
xchg
adc
scas
mov
push
jo
xor
jnp
mov
cmp
inc
cld
fstpt
movsl
xor
adc
fdivl
loope
mov
lret
sbb
and
jo
decl
xor
jp
jo
mov
shl
pop
push
pop
xor
mov
cmp
mov
lock
fisubl
aad
icebp
scas
stos
pop
inc
add
int3
lret
je
push
loopne
fwait
shll
sub
mov
lret
jo
lret
stos
adc
cmp
loopne
cmp
cmp
fbstp
mov
out
fcoml
ljmp
pop
nop
inc
sahf
cmp
xorb
outsl
xor
sbb
icebp
mov
jno
push
jg
ljmp
test
jo,pt
push
and
call
sahf
xchg
cmpsb
scas
lea
lcall
adc
jnp
cwtl
xchg
dec
add
inc
leave
insb
mov
or
leave
xor
add
mov
xlat
or
icebp
aaa
sub
lock
les
movsl
xchg
test
jbe
inc
or
filds
push
pop
jp
add
push
insl
adc
push
lcall
and
or
adc
idiv
push
sbb
adc
jno
sub
jne
add
push
lret
push
xor
mov
ljmp
or
add
pop
or
mov
dec
ljmp
xchg
xchg
push
xchg
jo
xor
push
ljmp
dec
cs
add
or
lea
aam
fisubl
jbe
hlt
cmp
mov
push
mov
dec
jne
or
mov
mov
nop
jp
jge
xchg
sar
inc
mov
add
dec
push
ret
inc
adc
inc
andb
call
in
fmuls
add
cli
stos
in
dec
andb
lock
mov
fildll
jno
xor
and
or
fcomip
xchg
push
or
xchg
std
mov
push
test
and
add
imul
mov
cmp
xchg
clc
lock
push
adc
mov
sbb
dec
jbe
add
lea
repnz
cmc
lock
add
push
push
sub
hlt
bswap
or
adc
fcoml
fsts
je
push
jbe
or
scas
add
mov
cmpl
sub
je
mov
test
pushl
add
aam
and
cmp
and
mov
clc
add
pop
enter
les
mov
fcoms
pop
add
rorl
jb
iret
xchg
or
loop,pn
fdivs
rclb
pop
cmp
pop
xchg
adc
xor
fcoml
jle
sbb
jo
cs
mov
dec
push
add
or
or
sbb
test
adc
dec
mov
mov
and
test
sbb
add
mov
aam
adc
and
clc
push
aas
fs
cli
jg
add
pop
adc
add
call
dec
push
pop
jo
mov
and
shl
bound
insb
xor
dec
hlt
scas
lods
test
out
xor
pop
mov
add
and
mov
jle
inc
adc
mov
sbb
arpl
or
dec
neg
movl
mov
bound
repz
adc
jmp
push
lock
xorb
sub
adc
xor
call
cmpsb
mov
sbb
inc
fsubrs
test
pop
mov
xor
orb
xorl
add
daa
jl
xor
add
jle
enter
push
xor
shrl
push
test
sti
or
icebp
cmp
jl
inc
inc
shrb
adc
mov
int3
mov
mov
adc
cmp
shrl
push
repz
cmpl
test
xchg
sub
sbb
imul
mov
idiv
std
add
mov
call
lea
cmp
push
adc
pop
inc
jl
sub
and
and
jle
dec
cwtl
and
xchg
push
dec
cmp
push
jb
pushw
inc
dec
inc
push
loop
jbe
add
mov
xor
dec
pop
cmp
notl
ror
and
add
test
aaa
dec
mov
mov
push
test
sbbb
inc
int3
and
add
add
and
adcb
shlb
pop
aam
inc
orb
push
sti
add
sbb
enter
shll
add
sub
out
mov
add
insb
adc
jl
mov
loop
xor
pop
lods
mov
test
ficoml
insl
push
mov
or
ret
push
and
cmp
pop
jecxz
cmp
xor
mov
shll
lret
mov
movsb
testl
nop
and
orb
call
fsts
push
mov
push
pusha
sbb
mov
cli
add
add
icebp
cmp
in
add
add
rorb
add
or
xchg
xor
inc
inc
mov
add
lock
call
movl
mov
out
aam
out
sbb
add
pop
fwait
push
push
adc
mov
fs
sbb
sub
ja
mov
inc
push
aaa
rorb
add
dec
mov
pop
mov
add
lea
add
jo
outsl
inc
push
mov
lcall
pop
mov
or
cmp
popa
jg
adc
dec
adc
mov
push
cmp
lcall
cwtl
push
mov
mull
std
rclb
add
push
enter
jmp
pusha
sti
es
ja
and
push
jb
xor
jnp
mov
and
mov
push
stos
or
adc
mov
js
xor
movsb
and
mov
cld
xor
push
pop
dec
mov
das
inc
sub
rorb
pop
fcmovnb
add
and
xor
rclb
add
hlt
test
lea
mov
movl
lock
sbb
arpl
push
lret
repnz
push
ret
sbb
push
das
nop
fldcw
ss
andb
in
rol
cmp
roll
dec
xor
test
mov
cmpsb
fimull
decl
xchg
movsb
cmp
sbb
sub
orb
test
adc
mov
sar
dec
push
pop
pop
pusha
push
xchg
add
dec
repz
sub
sbb
push
fcoms
lods
jnp
insb
pusha
xor
fs
adc
jmp
mov
cld
fldenv
inc
dec
jo
andb
and
and
adc
mov
mov
sbb
andl
nop
inc
sbb
rorb
xchg
xor
adc
test
xor
add
in
or
test
sbb
clc
incl
sub
shlb
jb
pop
jbe
adc
cmpsb
testb
stc
push
or
add
out
push
mull
mov
sbb
mov
mov
lea
and
pusha
orl
push
lcall
jbe
adc
call
pusha
jp
daa
pop
outsb
inc
decl
sbb
loope
mov
mov
push
sbb
addb
xor
test
es
subb
and
pop
rclb
cmp
out
pop
mov
push
and
xor
xchg
xor
adc
add
push
and
ss
jge
hlt
xor
call
pusha
test
push
xchg
out
add
pop
test
jp
out
sub
outsl
push
sbb
push
call
jne
sbb
mov
lock
je
fidivs
push
add
popa
mov
jge
or
mov
rolb
push
sub
pop
aad
jl
push
stos
and
pusha
jg
outsl
bound
or
push
pusha
cmp
cs
sbb
push
pusha
mov
jmp
dec
ss
push
or
pop
outsb
jmp
dec
sahf
lods
sub
mov
stos
nop
or
sbb
sbb
mov
add
mov
std
cmp
hlt
rcll
fldt
push
sarb
shrb
mov
mov
sbb
out
dec
mov
or
jmp
dec
ss
push
ds
fbld
dec
or
loope
push
and
pusha
mov
outsl
scas
lods
pop
imul
mov
cld
push
dec
loope
mul
mov
insb
sub
push
test
add
pop
push
and
cmp
into
or
sbb
pop
fdiv
add
cmp
test
ficomps
les
and
xor
mov
xchg
mov
lods
loopne
mov
jmp
out
xchg
inc
adc
ds
xor
inc
adc
push
add
stc
pop
call
shlb
push
cmp
mov
inc
loop
roll
jp
inc
aam
incb
cmp
neg
add
shlb
pop
push
loope
lods
add
push
fcoms
into
call
mov
mov
in
arpl
pop
push
jl
cmp
jg
icebp
adcb
xchg
sbb
loopne
adc
ret
bound
in
jne
mov
lcall
adc
add
add
xorl
and
aaa
mov
jae
add
sarl
cmpl
call
sub
rorb
mov
nop
cmp
mov
push
add
fadd
neg
lods
sbb
add
jle
aas
jo
lret
push
add
orb
lock
mov
add
inc
fmuls
ss
inc
aas
adc
call
or
add
imul
pop
mov
clc
mov
shrb
sbb
push
addb
scas
es
cmp
jno
into
in
lock
or
outsb
outsb
add
dec
shl
dec
inc
xchg
fiadds
mov
or
mov
in
cwtl
cmpsl
clc
ret
das
cli
loope
jne
cmpl
push
xor
push
psubsb
mov
ret
sarb
or
lea
lcall
and
adc
movsb
add
adc
movsb
cmp
cmp
fidivrs
cmp
ss
add
inc
es
jle
lea
xchg
jp
incb
adc
mov
xchg
jge
movsb
add
ss
push
jle
adc
add
loope
scas
les
push
push
pop
mov
cmp
lods
pusha
add
outsl
push
mov
shlb
mov
xor
inc
push
jl
cld
cmp
sub
pushl
repz
mov
xor
adc
ljmp
dec
call
in
imul
shlb
out
mov
lods
enter
dec
scas
and
call
mov
jne
inc
mov
pushf
in
in
add
or
cmp
ss
mov
adc
mov
or
lods
ss
cmpsb
mov
add
mov
mov
addb
mov
xor
movsb
pop
xchg
cs
xchg
sub
adc
jb
pop
push
add
or
push
ljmp
mov
cmp
push
cmp
push
call
or
xor
xorb
push
add
sbb
je
fs
sbb
pusha
inc
add
or
dec
or
mov
push
jb
inc
jmp
jo
inc
or
xor
sub
lea
pop
mov
push
add
pop
jo
pushl
xor
adcb
call
aaa
xor
add
or
aas
idivb
xor
pushl
and
push
lods
inc
int
scas
inc
sub
xchg
lock
push
outsb
push
out
daa
jo
call
imul
cmp
decb
test
push
loopne
mov
jmp
dec
add
lcall
or
or
mov
call
adc
inc
mov
icebp
adc
push
cli
mov
mov
push
cld
mov
imul
cmp
cmp
cmp
xor
jne
aaa
mov
cmp
adc
shl
adc
add
fs
add
incl
jne
je
adc
jne
mov
and
test
add
fcoml
cld
jo
popa
jl
pusha
mov
push
jne
cmp
jne
push
rorb
cmp
and
add
js
mov
jl
xor
cmp
add
fadds
fucom
xorl
pop
je
test
fisubrs
jne
push
mov
dec
sub
sub
fidivrs
inc
lock
mov
push
xor
dec
dec
shlb
in
push
xor
lea
jo
lea
or
mov
mov
jmp
add
dec
roll
add
aam
popa
mov
mov
test
jo
orb
js
cld
rcr
test
xor
add
data16
jo
hlt
dec
or
lock
adc
std
incl
add
mov
push
push
jo
mov
xchg
pop
and
and
hlt
cs
pushf
nop
push
push
xor
mov
push
cmpsb
das
mov
fsubs
pop
mov
je
lock
mov
mov
lock
cli
jg
xor
icebp
les
add
sbb
add
faddl
sahf
addr16
push
sub
pop
pop
jne
and
lcall
test
cmp
test
ja
out
ret
push
lret
dec
fldl
push
lods
shl
dec
in
ret
inc
jno
loop
fbld
mov
sar
outsb
inc
call
push
mov
adc
add
aas
std
mov
push
pop
in
push
lock
sub
jmp
icebp
push
mov
ljmp
loope
call
jo
repnz
ret
sub
push
test
or
adc
adc
cld
mov
mov
pop
mov
test
sbb
lea
jg
mov
adc
push
sub
andb
movsb
pop
movsb
push
inc
shl
xor
xchg
sbb
call
add
xchg
or
cld
fwait
stos
mov
orb
clc
jb
scas
call
and
adc
das
adc
xor
push
add
shrb
enter
mov
mull
pop
stos
xor
cmp
xor
adc
movsl
jne
cli
inc
mov
adc
clc
cld
sti
enter
and
push
mov
mov
icebp
sub
push
add
roll
dec
int
mov
jb
mov
jmp
aaa
cmc
xor
sub
mov
enterw
ljmp
test
add
mov
or
call
test
add
push
pop
pop
call
fstpl
or
jb
xchg
pusha
inc
push
roll
in
push
test
mov
pop
lock
adc
in
mov
mov
sub
jo
xor
or
add
insb
icebp
aam
sbbb
jne
addl
sbb
stc
or
pop
mov
cmpb
cmp
pop
dec
adc
push
inc
jbe
jmp
cmp
xor
mov
jl
add
jle
fisttpl
mov
and
push
sbb
push
or
int
fcoms
and
adc
push
sbbl
nop
adc
ret
add
mov
inc
adc
add
xchg
and
add
pop
adc
jle
bnd
cmp
jmp
and
lock
jmp
xor
aas
addl
ficompl
push
adc
push
daa
mov
and
adc
aaa
pop
fbstp
add
cs
mov
bndstx
call
add
mov
sbb
jbe
jge
aam
jle
bnd
aad
incl
mov
mov
cmp
push
jle
or
or
outsl
push
cmc
cmp
and
mov
jne
jbe
inc
test
add
call
outsb
add
add
dec
mov
add
mov
pusha
sbb
push
add
or
add
cmp
test
inc
mov
mov
in
and
decl
in
add
adc
cld
cmpb
mov
push
mov
test
add
mov
push
add
dec
and
out
jp
fdivl
inc
sbb
mov
sbb
add
daa
fs
dec
pop
push
push
ljmp
test
sbb
je
pop
sahf
loopne
cmp
ss
cmp
cs
je
ljmp
loopne
mov
mov
je
call
loopne
sti
jle
jb
add
outsl
sbbb
add
add
ret
je
mov
adc
sbb
inc
push
daa
add
add
lods
sbb
adc
pop
add
clc
filds
and
mov
jmp
add
repz
ljmp
add
mov
je
adc
je,pn
call
leave
adc
jbe
mov
stos
andb
xchg
fisubl
jp
cmp
rolb
loope
mov
mov
outsl
pop
mov
dec
push
dec
test
pop
lock
inc
adc
sbb
lret
insl
std
cs
add
in
push
push
arpl
ja
xchg
add
pop
orb
test
test
jmp
add
add
or
testl
sbb
jo
push
ljmp
mov
pushf
das
and
and
add
push
add
add
mov
mov
push
and
sbb
mov
mov
jle
in
ret
push
and
or
sub
mov
xchg
mov
inc
jp
sub
adc
add
mov
mov
add
push
cmp
inc
idivb
lods
call
fstps
and
cmp
inc
repz
add
or
mov
data16
in
lods
mov
mov
adc
loopne
roll
into
fimuls
mov
cli
out
mov
int
push
inc
or
mov
stos
xchg
stos
or
inc
imul
dec
lods
push
push
cmpsb
ljmp
mov
roll
adc
sub
aad
cmpb
adc
or
xlat
clc
hlt
jmp
je
imul
dec
fdivrp
cmc
mov
mov
imul
lret
jle
movsl
lcall
ret
mov
and
push
mov
test
shlb
cld
add
es
jle
shlb
push
ret
jg
push
inc
push
adc
add
fdivrl
pop
jge
push
inc
cmp
sbb
sub
dec
push
push
pop
je
pop
rorb
add
inc
or
sbb
mov
sub
iret
cmp
xchg
jmp
imul
inc
loope
mov
and
or
dec
lea
fsub
push
je
ljmp
pushl
cld
ds
fmuls
dec
or
pop
add
cmp
int3
add
jno
pop
sbb
ret
cmp
mov
test
dec
out
sarl
test
movsl
jle
mov
pop
jb
fcom
ljmp
ror
rcr
push
test
adc
test
sarb
lods
mov
in
aaa
decb
dec
imulb
stos
js
adc
pop
aaa
mov
mov
xchg
mov
add
and
or
pop
push
and
push
push
pop
repz
movb
push
clc
add
imul
mov
jbe
and
add
addb
adc
ds
add
jbe
mov
adc
outsb
shlb
adc
sub
mov
ja
pop
loop
dec
insb
aaa
ret
inc
mov
sub
mov
jecxz
pop
xchg
jl
aam
mov
inc
jne
loope
decl
cmpsl
push
sub
xchg
pusha
pop
fidivrs
andl
imul
loope
adc
sbb
fdivr
mov
loopne
incb
test
adc
lea
mov
rolb
sbb
xchg
pusha
ja
aas
mov
imul
les
jbe
jbe
fwait
test
lea
sbb
lea
fiadds
push
add
ja
cli
mov
bound
pop
push
add
call
adc
fildl
xchg
adc
add
cmpsl
cmp
sbb
fwait
cmp
loopne
dec
add
and
jo
cmp
imul
mov
int3
push
push
loop
lods
mov
mov
add
sahf
xor
xchg
or
call
pop
cmpsb
decl
jmp
lock
loopne
inc
and
mov
or
sbb
and
pop
sbb
addb
add
pusha
push
mov
punpckhbw
adc
loopne
test
fiaddl
loopne
pop
test
sub
cmp
adc
and
faddp
xor
adc
jbe
sub
enter
lock
in
lea
push
test
in
mov
popf
add
pop
stos
and
cmp
and
loop
jb
or
out
adc
cld
pusha
sbb
loopne
loopne
repnz
outsl
or
lock
dec
inc
lds
add
adc
rcrb
pop
es
inc
cli
test
push
cld
pusha
xchg
movsb
mov
sbb
jecxz
mov
push
shrb
add
inc
in
xchg
test
sub
push
insl
jecxz
adc
push
push
jb
pushf
sahf
pop
add
test
push
and
pusha
push
adc
scas
mov
mov
ss
sub
loopne
popa
mov
or
mov
mov
push
dec
sbb
mov
mov
jb
jge
pop
sti
mov
cmp
aam
adc
or
ds
or
insb
and
mov
pusha
xor
push
and
lcall
push
cld
push
sbb
lret
jbe
sbb
mov
bound
inc
push
sbb
jle
ds
mov
pusha
or
mov
dec
movb
fistps
pop
and
sub
lock
clc
add
aaa
mov
adcb
or
fnstsw
xchg
inc
xchg
cmp
jge
mov
cwtl
loopne
mov
mov
pusha
cmp
cli
scas
call
mov
and
cmp
inc
and
je
pusha
and
aaa
push
imul
aas
or
clc
push
es
sub
popa
gs
mov
jl
sbb
or
xchg
add
push
push
lock
lcall
loope
loopne
or
fbld
jle
mov
mov
inc
pop
hlt
lcall
pop
in
icebp
add
inc
adcb
lods
jp
lret
call
scas
sbb
subb
daa
push
pop
call
mov
pushl
or
fiaddl
jb
lock
add
add
adc
idiv
pop
push
xchg
xor
add
fs
push
add
mov
add
xchg
add
sbb
fiaddl
adc
push
inc
dec
add
add
sub
mov
adc
mov
jg
cli
xchg
inc
push
call
sub
imul
adc
cmpsl
call
xorl
loopne
pop
pop
popa
jo
dec
sub
jnp
add
push
fs
mov
mov
and
push
movsb
xchg
xchg
pop
outsb
std
lock
lcall
jo
nop
sarb
mov
addl
jnp
std
sbb
mov
xor
add
add
mov
cmp
add
mov
lock
xor
daa
lcall
xor
lock
or
push
push
jo
push
xor
stos
mov
add
push
fldenv
notb
or
mov
jo
and
jp
mov
pop
mov
pop
dec
sub
xor
aaa
lods
pop
push
lock
wrmsr
add
int3
pop
sbb
and
call
push
xchg
inc
shlb
push
xchg
add
pop
sbb
hlt
jb
lods
add
in
pop
test
inc
pop
or
add
je
adc
push
push
jp
clc
movl
dec
jle
lock
sahf
cmpsb
mov
lret
sti
mov
and
movsb
mov
clc
sub
and
lods
mov
rorl
rcrb
testb
inc
fnsave
sbb
pop
dec
mov
push
rclb
mov
and
mov
icebp
or
or
je
jo
add
pop
xchg
es
add
push
outsl
ds
into
push
dec
mov
mov
add
das
xor
das
lods
je
mov
cmp
jg
add
dec
or
mov
push
call
inc
adc
add
push
sti
orb
mov
and
xor
push
ljmp
jae
insb
outsb
addb
popa
mov
cli
dec
fs
xor
xchg
or
adc
adc
int3
add
push
jne
outsl
js
aas
rolb
movb
jmp
ret
inc
cmp
loope
popa
mov
xor
lods
fists
movsb
mov
mov
push
jne
mov
or
cmc
and
mov
pop
sub
jg
mov
add
test
inc
jecxz
jae
cmp
aam
adc
mov
aaa
adc
jbe
rcl
lcall
loop
ljmp
pop
and
ljmp
jno
jbe
jb
jl
movsb
push
mov
sub
jne
xor
inc
test
push
enter
push
clc
dec
cli
pop
push
call
mov
sbb
or
cmpsb
es
mov
or
adc
lea
pop
test
test
aaa
lock
sahf
lcall
or
cwtl
in
jno
cld
xchg
mov
xor
add
fcompl
push
dec
in
and
add
das
mov
js
repnz
lock
sub
or
push
jo
adc
mov
andb
sub
data16
jp
les
fisubrl
add
push
orb
push
test
sti
push
adc
cli
adc
xor
jne
push
loopne
and
dec
icebp
test
incb
fs
pop
push
pop
inc
mov
dec
mov
addl
gs
loopne
test
pop
add
es
mov
cwtl
orl
lcall
jmp
sub
inc
pusha
add
pop
jge
lock
pop
addb
mov
enter
jg
lock
movsb
pop
or
push
call
lret
pop
jo
ret
lock
repz
cmpxchg
push
push
adc
cmp
xor
cli
and
cli
jae
and
and
adc
gs
xchg
mov
add
xor
les
add
push
clc
js
inc
lods
in
mov
js
cmp
out
dec
cmovge
inc
xchg
and
das
fidivrl
and
out
fnstenv
loopne
mov
cmp
push
addb
repnz
loopne
xor
lock
adc
cmpb
loopne
fwait
sub
inc
je
out
mov
xchg
testb
jo
call
leave
call
outsb
or
and
es
mov
add
xchg
hlt
int3
xor
je
and
inc
add
pop
xchg
out
push
sarb
or
mov
or
pop
clc
jg
out
mov
sbb
or
xchg
add
and
or
add
mov
in
mov
and
mov
mov
jb
inc
and
std
incl
or
add
and
lea
or
loopne
cmp
pop
add
loopne
in
pop
jmp
sub
sbb
ljmp
and
mov
mov
or
mov
ja
ficompl
outsb
mov
aas
subb
mov
dec
push
lahf
xor
xchg
xor
roll
std
mov
mov
jo
push
cld
stos
pushl
sub
scas
add
es
xor
pop
adc
adc
call
cmp
inc
mov
push
hlt
lock
enter
fs
jmp
push
mov
add
jmp
test
stos
je
jbe
add
lds
fsubr
ljmp
add
sbb
mov
mov
rolb
cmp
add
ret
add
pushf
sbb
mov
mov
xor
and
hlt
push
je
lcall
or
xor
mov
push
mov
xchg
fucomip
jl
decl
in
add
pop
je
mov
add
mov
lret
dec
sti
push
jl
jo
mov
or
push
addl
add
or
sub
add
add
fists
add
je
inc
or
mov
call
test
stc
jo
xlat
mov
pushf
and
roll
inc
aaa
add
pop
mov
dec
icebp
loope
xor
pop
repz
stos
mov
pop
jg
or
xchg
test
repz
test
cmpl
or
cmp
pop
and
inc
sub
jnp
mov
pop
or
or
stos
and
fistl
mov
jbe
lcall
sub
mov
mov
xchg
and
push
cmpsl
add
js
inc
cld
cmpsb
sbb
cs
mov
iret
push
scas
push
gs
ret
sbb
xchg
xor
add
and
add
xor
test
inc
dec
jge
push
or
jo
xchg
and
lea
push
sti
adc
ds
mov
push
lea
or
mov
cmp
pop
add
and
or
and
xor
dec
jo
xor
inc
xor
sub
jl
xrelease
jmp
stos
pushw
jmp
out
cmp
xor
int3
xor
scas
xor
jbe
push
lods
pop
movsb
xchg
inc
outsb
imul
adc
or
enter
mov
push
sub
add
xor
mov
mov
sahf
push
sub
push
mov
mov
sbb
sti
mov
test
cli
test
add
aaa
fisubs
cmp
or
pop
push
sbb
ss
push
jb
popa
test
fistpl
push
cld
sahf
aad
sahf
js
insl
and
sti
dec
incl
cmc
incl
push
int3
mov
andl
pop
pop
into
je
movl
pop
cli
and
dec
fistpll
xchg
and
dec
sbb
mov
push
pop
xor
icebp
add
dec
es
out
lods
mov
test
ss
mov
xchg
mov
mov
into
in
pop
inc
adc
invd
cwtl
stos
push
pop
xor
call
cltd
test
test
push
pop
popa
sbb
call
pop
aaa
shlb
jl
clc
ret
insb
ja
lock
pop
and
and
insb
cs
adc
rolb
loope
subb
jmp
repnz
pop
push
aad
cs
mov
inc
ja
icebp
mov
insl
shrb
and
out
push
aaa
fldcw
ljmp
pop
std
pop
jne
cmp
sbb
xchg
or
pop
rclb
or
adc
popf
subb
adc
jecxz
jb
mov
and
idiv
ja
ljmp
pop
and
inc
outsl
pop
add
and
push
push
or
push
mov
rorb
pop
push
dec
and
mov
mov
push
pop
add
stos
inc
call
scas
push
xchg
ljmp
loopne
pop
mov
cli
fwait
jae
bound
mov
enter
cld
bound
add
ret
ret
sub
jp
lods
sub
xchg
adc
addb
or
mov
mov
jne
rclb
dec
leave
or
sub
mov
clc
lea
sbb
mov
add
fwait
add
add
scas
inc
or
xchg
call
ja
mov
clc
ret
test
mov
adc
sbb
pop
push
xchg
sub
push
add
or
xchg
call
fistps
add
call
xor
inc
or
push
cmpsl
sub
mov
jle
test
add
ret
sub
stos
mov
mov
xchg
addr16
movsb
mov
xchg
into
je
cmp
lock
inc
or
or
jbe
or
call
push
or
cwtl
testb
ret
inc
jne
ret
or
push
shlb
inc
adc
pop
andb
adc
inc
inc
and
sahf
repz
testb
into
rolb
lods
or
mov
mov
sbb
push
pop
mov
mov
loope
sbb
stos
add
ret
cmp
in
adcl
adcb
loope
or
and
add
les
imul
add
call
pusha
sbb
mov
inc
clc
mov
cmpsb
outsl
fs
mov
push
loopne
inc
aam
mov
and
movl
hlt
jbe
clc
in
xchg
add
call
add
and
sub
lcall
clc
mov
loop
call
addl
and
pop
cmp
fdiv
lds
and
in
lcall
or
rorb
cld
dec
push
and
loopne
adc
add
mov
push
icebp
jle
loope
inc
rcr
sub
or
and
test
jnp
popa
pop
mov
cmp
jbe
inc
jg
mov
mov
enter
dec
or
mov
dec
je
clc
fiaddl
mov
inc
push
jo
add
add
and
sub
incb
outsb
inc
sub
add
mov
add
addb
inc
test
outsb
pop
mov
inc
pushf
out
and
jmp
jo
shl
in
call
adc
out
bound
xchg
adc
jg
aad
pusha
int
jmp
cmp
sub
lock
addb
mov
mov
gs
popa
adc
insl
call
adc
add
mov
push
mov
es
adcb
push
ret
jo
jmp
mov
je
mov
and
inc
pusha
movsb
pop
mov
xchg
test
xchg
nop
fs
jge
call
add
nop
psubsb
in
pusha
pop
insb
add
xor
clc
call
or
add
inc
lock
decl
push
push
push
fidivrl
push
les
inc
pusha
arpl
and
insb
test
mov
push
jo
test
mov
inc
sbb
sbb
or
aam
arpl
test
cld
fcmovnbe
inc
inc
in
and
fs
cld
lds
sbbb
shlb
ss
mov
jne
xchg
int3
nop
xchg
das
push
and
cmpb
jmp
int
adc
jmp
dec
jno
fisubl
cmpsl
inc
fs
loopne
ljmp
ja
push
lock
pop
lahf
decl
int3
ret
rorl
or
pop
adc
loopne
push
sub
xchg
push
subl
incl
sbb
fmuls
push
stc
sub
orl
push
push
mov
arpl
lock
fs
fimuls
inc
add
das
push
or
cmp
in
jbe
imulb
popa
ret
sub
pop
sub
cmp
movsl
test
arpl
pushl
sbb
loopne
push
xor
test
loope
int3
cmp
adc
lret
es
adcb
and
sbb
add
adc
pushf
hlt
repz
sti
mov
xchg
jno
mov
inc
call
push
roll
mov
adc
lret
lcall
push
add
mov
cmp
lock
jo
aad
and
push
je
xorl
popf
rol
jmp
jae
pop
sbb
int3
pop
bound
lods
mov
mov
jne
call
sub
cmp
add
icebp
adc
pop
push
jae
mov
sub
mov
jb
jo
xchg
pop
mov
mov
mov
fdivrl
adc
jg
mov
dec
sbb
mov
add
xlat
mov
inc
cmp
add
mov
adc
out
and
sub
lcall
or
lock
xlat
popl
jo
jns
jge
add
das
push
fldt
call
jo
outsl
stos
or
add
xchg
sub
sbb
sbb
or
rcrl
jo
sbb
sar
cmp
inc
mov
xor
call
je
and
push
sub
xor
loope
push
xor
lret
andb
inc
push
or
push
or
or
mov
or
iret
mov
xor
call
sbb
insb
sahf
rolb
adc
ss
jo
js
out
mov
sub
jle
mov
push
insb
pop
push
sub
inc
divl
mov
mov
je
push
adc
lea
leave
inc
xchg
into
push
push
pop
insl
fstpt
dec
inc
sub
lods
adc
xorl
push
loop
movsb
add
add
mov
sbb
xchg
pusha
or
ljmp
xchg
loopne
cmp
mov
fcomps
add
mov
jno
inc
cld
ja
adc
mov
push
jo
adc
add
sbb
ficomps
add
or
mov
jmp
mov
and
sub
adc
jl
sub
adc
outsb
movsb
inc
test
jmp
adc
clc
add
idivb
adc
adc
pop
lock
icebp
xor
cmp
sbb
cld
xor
xor
ja
jb
or
je
scas
add
adc
inc
add
or
mov
and
dec
or
sbb
sub
and
jne
jbe
pandn
fwait
push
stos
adc
cmp
jbe
pop
mov
mov
jmp
pop
dec
mov
lock
js
add
cmp
add
inc
std
cmp
or
adc
add
xchg
push
je
in
mov
idivl
xchg
xchg
ficoms
orb
jmp
mov
xor
aas
jo
jge
add
add
std
inc
pop
cs
call
xor
je
imul
outsl
test
clc
jno
cmpl
cmp
xchg
lret
mov
inc
jae
inc
mov
add
flds
push
icebp
sub
jl
clc
inc
xor
hlt
mov
mov
pop
lock
push
add
add
mov
fbld
adc
push
aad
mov
test
cmp
leave
das
js
xor
push
mov
sub
push
push
mov
sbb
test
or
add
or
aas
into
inc
add
xor
and
repz
loope
lea
inc
ljmp
sub
call
mov
dec
mov
nop
js
mov
call
mov
and
mov
jo
cmpsb
push
or
in
xor
repz
test
out
adc
add
xor
mov
or
inc
add
add
mov
mov
mov
jecxz
pop
mov
xchg
clc
hlt
ret
mov
rol
or
fdivrs
ds
xor
mov
jo
mov
rorb
pop
sub
lock
jl
push
push
in
sarb
push
inc
loopne
aaa
std
repnz
jbe
mov
add
push
mov
and
push
sbb
fwait
and
mov
fildl
add
adc
sub
push
idiv
and
rcll
cmpl
scas
lea
adc
or
lea
outsl
lcall
dec
mov
jg
add
dec
xchg
mov
push
sbb
adc
aam
jle
push
push
push
popa
test
jb
dec
push
xor
adc
mov
push
sub
add
pop
cld
add
mov
pop
and
mov
clc
pop
mov
je
shll
inc
adc
xor
lcall
or
into
xchg
aaa
xor
jo
add
into
push
rorb
ss
xchg
test
lock
and
mov
mov
and
mov
jle
movsb
jle
mov
es
cmp
in
movsl
icebp
movsl
test
in
adc
mov
test
addl
push
sbbl
test
adc
adc
add
cmc
add
je
jle
add
jno
jmp
push
adc
aam
or
and
jb
lods
mov
jbe
pop
xchg
fsubrp
loope
cmp
outsl
mov
mov
jo
cs
ficoms
adc
pop
and
add
push
rcl
call
aas
xchg
pop
inc
test
icebp
sub
cmp
or
into
jno
notb
xor
insl
scas
xor
ret
and
and
cmp
mov
cli
pop
add
loope
loopne
mov
jo
jecxz
add
dec
adc
faddl
dec
inc
dec
pop
and
add
imul
mov
scas
cmp
inc
icebp
and
pusha
push
sub
jno
push
push
inc
xchg
cmpsl
lea
mov
sbb
sub
je
jne
insl
adc
cmp
add
outsl
mov
mov
or
adcb
xor
js
mov
push
mov
jb
mov
adc
mov
mov
outsb
xchg
and
push
in
ljmp
lock
and
and
xor
mov
cli
hlt
fnsave
repz
sar
mov
xchg
and
mov
fdivr
add
pop
push
std
jmp
and
push
cltd
cmpl
int3
lods
fucomi
icebp
or
mov
and
inc
pop
push
sub
jb
push
jae
xor
cli
adc
pop
and
xor
cmp
outsb
mov
lods
pop
sub
sbb
rsqrtps
mov
xor
clc
jo
ret
pop
lcall
ficoml
icebp
add
cli
push
pop
lcall
mov
add
add
sbb
mov
mov
push
call
cmpsb
aam
imul
inc
mov
add
adc
add
jle
fmull
scas
fwait
mov
call
sbb
mov
cmp
push
or
add
scas
add
ja
add
add
imul
mov
xchg
mov
scas
lds
pusha
mov
clc
cmp
mov
mov
mov
mov
sub
push
jne
push
add
les
hlt
cmp
add
mov
sub
jmp
inc
cmpb
push
push
pop
loop
sbb
adc
mov
or
pop
jbe
imul
into
adc
daa
xor
dec
mov
popf
xor
sbbb
or
pop
lds
adc
arpl
bound
test
ds
cltd
sahf
mov
mov
shlb
addb
fld
xchg
sbb
and
add
dec
mov
dec
xor
in
pop
dec
sbbb
cwtl
cmp
xor
or
fadds
ja
call
or
insl
xchg
jnp
je
in
call
sbb
add
std
add
add
push
aaa
sbb
orb
test
inc
mov
std
je
cmpb
cli
aas
js
adc
ficoml
or
inc
sub
and
les
andb
add
push
or
imul
inc
lea
xchg
outsl
adc
bnd
leave
add
std
pushl
popf
or
add
fcoms
dec
insl
mov
jb
mov
push
sbb
push
jns
lods
sub
xor
andb
or
sarb
jns
pop
cld
mov
push
xchg
rol
jmp
push
mov
outsb
mov
and
in
push
enter
call
pop
insb
add
loopne
shrl
ret
or
clc
sti
rclb
mov
mov
cld
mov
sahf
push
mov
loopne
sbb
dec
cli
int3
mov
es
rorl
je
adc
leave
dec
cwtl
and
clc
ss
jmp
push
or
or
pop
outsl
push
test
adc
fsubr
lahf
mov
add
add
popa
push
push
adc
shlb
loopne
mov
mov
incl
push
push
int
sbb
pop
add
push
test
and
pop
roll
subb
rcl
es
or
pop
rcll
pop
ret
adc
and
mov
push
xor
xchg
hlt
jne
enter
add
sub
scas
adc
pop
sub
loop
je
pop
and
out
and
clc
inc
inc
call
push
xchg
inc
test
pop
aad
adc
mov
leave
stos
test
jnp
add
orb
repnz
incl
pop
hlt
jp
adc
pusha
sbb
mov
out
xor
and
pop
bound
cmp
dec
push
loop
jmp
xor
pusha
add
insb
jb
jp
jne
push
jne
orl
pusha
push
inc
lahf
or
dec
orb
stos
pop
test
int
loopne
inc
add
ja
cmp
xor
or
in
push
shr
or
jne
cwtl
or
inc
and
inc
pop
lcall
fs
call
lea
push
sti
mov
call
jmp
nop
add
test
sub
push
mov
pop
pop
pusha
insl
add
sub
ja
adcl
and
insl
movsb
nop
repnz
loopne
mov
mov
std
iret
loopne
add
jl
aaa
or
pop
mov
mov
adc
out
mov
stos
adc
movsl
sub
pop
add
jmpw
loopne
mov
sub
outsb
hlt
add
push
adc
push
ljmp
nop
popa
pusha
pop
fiadds
mov
inc
call
inc
cmp
mov
jmp
jbe
clc
adc
mov
or
or
pusha
cmp
adc
mov
mov
dec
rolb
in
jg
cli
cs
and
and
mov
inc
sbb
cmp
movsb
add
pusha
cmp
mov
inc
into
int
or
cmp
insb
cmpsb
std
lods
push
add
pop
push
add
js
cmpsl
rorb
ljmp
insl
adc
push
mov
xor
jp
inc
mov
aam
xor
mov
loop
pusha
mov
and
cmp
test
or
aas
inc
loope
rcrl
inc
add
and
or
xor
sub
mov
push
insb
in
pop
add
fiadds
cmp
add
push
pusha
cmp
or
jne
in
jg
push
andl
pusha
or
adcb
adc
loop
imul
dec
add
prefetcht2
sub
aas
and
ljmp
sbb
jmp
pusha
adc
mov
adc
lahf
xor
or
scas
cli
sbb
inc
pop
inc
js
loope
mov
and
out
or
dec
or
mov
mull
add
das
repz
and
push
mov
loopne
ret
cwtl
lea
push
pusha
sbb
xlat
cmpsb
sbb
enter
sbbl
ret
inc
jp
xlat
and
leave
fidivl
cmp
inc
push
jl
push
je
mov
push
mov
inc
pusha
cmpl
andl
lock
das
sub
pusha
adcb
mov
test
and
cli
mov
cmp
sub
and
push
icebp
jle
and
xchg
loope
jae
scas
pusha
add
arpl
sahf
nop
lds
pop
inc
ret
inc
cmp
scas
insb
adc
test
lock
sub
push
pusha
push
inc
adc
call
push
pop
or
adc
cmpsl
popa
pop
push
mov
sbb
sarb
xlat
aaa
add
ficoml
cmp
outsl
stc
addb
scas
aam
dec
jmp
inc
pusha
sub
dec
mov
push
fldl
dec
or
mov
mov
andl
dec
rorl
xor
mov
inc
ret
mov
call
push
and
cld
jne
mov
into
inc
call
push
xor
or
aaa
lea
mov
xchg
test
mov
fs
mov
outsb
add
les
adc
and
jmp
lock
sbb
or
lret
fdiv
mov
adc
mov
dec
movsb
decb
call
push
or
fidivs
cmp
mov
adc
add
pop
inc
add
stos
push
jmp
call
int3
pop
cmp
push
push
jo
int
add
jo
jno
popa
inc
data16
pop
jge
je
sub
xorb
add
sahf
push
sbb
scas
pop
sbb
cmp
inc
hlt
std
jo
test
aam
test
jb
push
jb
xor
mov
fistps
shr
js
aaa
xor
lock
movsl
jo
cmpb
push
push
add
add
add
enter
cld
pop
xor
xor
jg
insl
movsb
enter
clc
mov
lock
hlt
lock
cmp
cld
test
icebp
lcall
add
cli
or
and
subb
inc
rcrb
insl
mov
les
int3
jbe
jb
inc
in
push
jo
popf
rclb
imul
lods
add
dec
mov
lret
sbb
mov
jo
mov
test
es
push
loop
lock
push
mov
cwtl
adc
test
and
in
add
clc
fwait
xorb
hlt
pop
cmc
test
mov
and
and
clc
push
jecxz
call
jo
shlb
je
fst
lods
inc
add
hlt
pop
andb
loop
and
stos
insb
movsl
je
cmp
add
lock
adc
in
sub
dec
sbb
out
xor
jmp
mov
sarb
jo
push
or
call
adc
add
jae
daa
pushl
imul
lock
pop
arpl
adc
or
sbb
jecxz
dec
leave
pop
fimuls
adc
mov
and
jno
and
cld
aad
sbb
inc
cmp
add
xorb
repnz
adc
sub
lahf
pop
insb
mov
mov
and
cmp
mov
pop
rcll
out
push
jo
adc
xlat
add
mov
mov
lcall
and
jmp
hlt
call
loop
aaa
cmp
mov
clc
xchg
lock
fdivs
cld
push
push
sbb
jmp
inc
repz
addb
cwtl
jge
xor
fcoms
scas
inc
xor
andb
ljmp
pop
into
add
pushf
lods
adc
lock
lods
xor
data16
push
adc
pop
imul
scas
inc
int
push
sub
stos
and
pushf
mov
test
out
add
push
pop
xchg
mov
xor
jb
enter
call
push
call
insb
pop
int
jp
scas
sub
in
xor
cmpsl
addl
fisttps
insb
lock
cmp
dec
push
lea
dec
or
subl
ret
push
inc
outsl
xchg
hlt
fcoms
enter
xor
movsl
adc
inc
lods
push
call
or
icebp
inc
sub
sbb
pop
test
lock
pop
adc
add
andb
mov
jne
push
les
jl
scas
inc
bound
add
xor
xor
push
popa
adc
mov
data16
adc
out
mov
dec
add
ljmp
xchg
les
stos
xor
mov
add
push
mov
lods
jo
push
mov
lea
mov
mov
test
push
dec
icebp
mov
add
stos
inc
ja
adc
and
xchg
lcall
jo
add
test
sti
dec
aaa
xor
mov
std
add
sarl
or
adc
sbb
pop
inc
mov
jl
push
enter
lods
push
ja
or
mov
stos
pop
push
push
add
dec
add
mov
inc
lret
xor
ja
push
pop
and
or
scas
mov
add
xor
nop
push
add
je
or
mov
cmp
mov
call
push
out
mov
jne
ret
add
or
mov
jg
add
mov
sbb
outsl
xchg
mov
xchg
mov
clc
lock
call
inc
dec
xor
or
cmp
adc
std
adc
inc
call
and
sbb
inc
xchg
fidivs
xor
ficompl
push
push
xor
mov
add
roll
clc
lret
loopne
push
and
dec
mov
out
sbb
bound
and
and
add
insb
fcmovb
jmp
inc
addb
jmp
inc
adc
xchg
nop
fists
pop
jp
mov
xorl
movb
pushf
dec
sub
add
lock
push
or
pop
jno
call
lock
data16
push
std
add
loop
sarb
pop
fwait
push
push
pop
add
lret
mov
jo
add
sbb
pushf
push
jp
leave
sbb
in
cli
inc
jmp
and
add
jo
mov
xchg
shrl
sar
idivb
mov
mov
in
push
mov
bound
jg
loopne
mov
push
call
xor
decl
out
mov
or
sbb
clc
push
xchg
xor
cmp
or
xor
int
mov
cmp
mov
inc
jmp
xchg
ljmp
adc
lock
push
push
call
xchg
sbb
mov
pop
push
fistpll
call
jb
xor
clc
leave
pop
call
xabort
jmp
add
movsl
mov
xor
test
push
pusha
xchg
loop
inc
jl
lock
lock
fistpl
aas
xor
add
xor
sbbb
jne,pt
or
and
jno
cwtl
icebp
dec
test
inc
icebp
sbb
mov
add
push
inc
xor
add
pop
xor
call
dec
sbb
insl
xor
pop
pop
lods
lock
or
adc
addb
sbbl
adc
inc
pop
test
mov
mov
inc
ss
jno
mov
and
in
loop
mov
clc
stos
shlb
or
and
add
fadds
addr16
adc
hlt
mov
ds
mov
out
xor
push
sar
movsl
push
fiadds
add
add
jbe
push
call
push
push
jbe
test
add
and
jns
out
jle
inc
xchg
cli
and
sbbb
add
rclb
lea
mov
jb
je
mov
outsl
adc
test
inc
xchg
sub
jl
add
out
or
lods
notb
rol
sub
and
mov
or
xor
or
inc
movsb
xchg
sub
adc
inc
stos
adc
add
sub
add
push
sbb
pop
add
mov
scas
lret
xor
xor
jmp
mov
mov
sbb
push
ficoms
mov
push
mov
xor
addb
enter
enter
xor
adc
or
push
inc
mov
sbbb
in
addl
pushf
mov
decl
mov
hlt
jmp
add
ljmp
test
lcall
pusha
adc
shlb
push
push
insb
es
add
and
inc
push
mov
addb
mov
add
insl
dec
sub
cmc
insb
mov
cs
dec
adcb
jp
sbb
cmpsl
or
xchg
cli
insl
dec
pop
jg
and
mov
xlat
fwait
fs
xchg
mov
sub
out
jl
xchg
dec
nop
es
xor
xchg
pop
inc
push
rorl
cmpsb
add
cwtl
push
loopne
fidivs
cmp
mov
xchg
xor
mov
clc
sar
lret
and
inc
out
shll
push
sbb
ret
hlt
out
into
das
add
xor
jmp
lock
mov
push
push
or
add
rolb
and
stc
es
cmpsb
dec
mov
insl
test
rcrl
and
xchg
push
ss
jmp
call
push
dec
testb
inc
sbb
lock
pop
imul
clc
mov
push
mov
inc
je
loop
std
pop
clc
sub
jecxz
jnp
sub
pop
add
dec
and
jns
sbb
adc
pop
add
push
push
fadds
scas
lods
mov
mov
pop
loop
adc
imulb
cmp
jl
pop
add
sti
shlb
xchg
dec
insl
or
sahf
fwait
or
out
enter
add
dec
rorb
call
daa
push
call
inc
push
add
ds
add
cli
mov
xchg
ss
inc
xor
mov
fs
pop
rorl
add
inc
add
lock
cmpsb
icebp
dec
mov
shll
vmovdqu
fbld
movnti
shrb
loope
aam
in
xchg
add
or
stos
lods
loopne
push
ss
xchg
or
or
add
ja
mov
ret
rclb
dec
or
or
loop
rcll
push
loop
xchg
xchg
push
or
cltd
dec
mov
mov
adc
push
ljmp
cmp
inc
push
sub
lahf
add
rolb
xchg
dec
xor
inc
inc
mov
movsb
lock
scas
loope
add
pusha
popa
mov
xor
addr16
mov
jo
xchg
loop
or
movsl
xchg
in
lods
inc
add
daa
sbb
fsub
add
inc
mov
int3
loopne
bnd
push
cmp
pushf
lods
and
aad
add
or
dec
fwait
lret
inc
call
aas
add
int3
jg
loopne
sbb
mov
jb
push
popa
jle
lcall
bound
mov
call
in
xor
push
dec
test
shlb
adc
inc
adc
inc
sti
push
ljmp
mov
jl
mov
rcll
adc
mov
test
add
or
jnp
add
pop
adc
or
add
and
jb
and
or
sub
mul
xor
mov
push
xor
rcrl
movsb
and
xor
or
int3
mov
push
cmp
or
loope
mov
stos
jo
imul
std
push
mov
icebp
es
mov
cmpsl
or
dec
test
adc
iret
jle
shll
mov
jne
mov
sub
inc
pop
jp
mov
shll
pop
xchg
enter
fisubrl
dec
loopne
aaa
movsb
ss
push
xorb
dec
test
pusha
or
sbb
notl
dec
scas
and
popa
inc
inc
daa
lods
push
adc
cmp
sbb
sbb
jo
sub
loopne
sbb
xor
pusha
cmpsb
loope
add
xor
mov
addl
pusha
mov
pusha
add
adc
mov
je
pusha
pop
push
mov
sub
push
test
pop
inc
mov
stc
popa
inc
mov
push
inc
jne
adc
stc
popa
mov
adc
loopne
xor
dec
inc
mov
xchg
test
xchg
mov
or
movl
loopne
test
adc
inc
inc
ret
sub
stos
imul
adc
stos
mov
inc
es
cld
sub
or
fs
out
stos
movhps
popa
lock
jo
loopne
add
clc
scas
cli
or
pop
arpl
adc
push
bound
popa
dec
push
push
loope
push
cltd
pop
pop
cli
and
and
xor
fisttps
idiv
or
scas
and
arpl
push
hlt
add
repnz
jnp
xchg
into
add
arpl
cs
bound
jmp
loopne
jne
cld
add
pop
frstor
adc
or
adc
sbb
dec
loopne
dec
out
xchg
add
add
out
aaa
lret
mov
mov
or
inc
enter
ja
imul
test
lods
loopne
mov
sub
sahf
add
push
pop
cs
jle
xorb
in
push
pop
ds
bound
dec
and
sbb
hlt
jno
or
jmp
loopne
push
and
je
xchg
mov
hlt
add
or
add
sub
mov
and
push
loopne
cmp
jmp
mov
jbe
inc
xor
cmp
out
fs
push
popa
fcos
leave
clc
ss
xchg
cmp
inc
hlt
aaa
or
jo
sub
cmpl
lret
sub
ljmp
ljmp
jbe
unpckhps
jmp
xor
xchg
jg
push
adc
test
pop
jo
aam
sbb
pop
lock
mov
pop
outsl
sbb
adcb
lock
repz
orl
mov
xor
pop
add
psubsb
xchg
xchg
sbbb
add
add
add
lcall
pushf
inc
cltd
loopne
sbb
xor
test
lock
fadds
decl
je
mov
sub
xor
and
inc
pushf
push
xor
sbb
in
sbb
aaa
or
push
addb
dec
add
xor
ret
sub
fildll
pop
xor
push
bound
adc
incl
inc
leave
ret
push
test
mov
xor
add
or
and
das
jg
mov
adc
mov
add
lock
clc
and
sub
and
aaa
dec
or
sub
cmp
jbe
cltd
cli
lock
push
mov
in
inc
sarb
add
xchg
icebp
sbb
push
inc
call
push
adc
push
fs
mov
mov
ret
mov
push
xchg
inc
bound
sub
jno
push
or
in
shlb
jge
or
sbb
cltd
fidivrs
lods
xchg
add
sbb
arpl
addl
add
aas
add
mov
push
pop
loop
mov
xor
jno
lock
in
push
xchg
mov
jo
test
xor
scas
xor
or
sbb
aas
cmp
sbb
add
sbb
call
sbb
xor
out
mov
je
jmp
call
xor
xchg
or
test
adc
push
mov
hlt
and
cmp
jg
pop
je
xchg
lods
adc
and
mov
sub
xor
pop
jo
xor
or
mov
lock
push
inc
call
mov
lcall
mov
xorb
cli
pop
fisubl
adc
add
movups
jmp
xor
inc
rcrb
stos
in
mov
sbb
push
xor
inc
dec
inc
outsl
add
ljmp
cld
add
lock
test
adc
dec
and
shlb
scas
adc
dec
mov
pop
add
add
xor
lods
mov
das
add
std
push
scas
testl
adcl
sahf
je
adc
cmpsl
incl
xor
into
xor
inc
aaa
add
add
mov
je
sub
enter
push
notb
lock
je
clc
push
adc
lods
call
mov
mov
add
lock
cmp
adcb
mul
jae
inc
xor
lock
je
dec
daa
cmp
mov
mov
clc
lds
icebp
dec
mov
adc
xor
pop
add
inc
cmpsl
or
jno
subb
mov
test
push
sbb
ficoml
xor
jp
mov
fs
inc
icebp
repnz
mov
mov
pop
or
xchg
inc
sbb
ret
dec
adc
mov
sub
jno
inc
or
mov
inc
mov
popa
xor
cmp
cwtl
std
mov
jb
mov
xchg
add
xor
xorb
add
jbe
adc
lds
mov
mov
mov
cmp
je
ret
mov
sub
xchg
stc
pusha
sbb
and
or
mov
xchg
mov
push
decb
cmp
inc
mov
and
imul
call
test
xor
inc
mov
fadd
scas
and
inc
adc
mov
sbb
push
insl
sar
push
cli
sbb
sub
decb
add
call
pop
in
add
stos
dec
cwtl
or
pop
pop
or
jg
mov
pop
or
es
sbb
cmp
jmp
mov
push
js
jle
decl
push
inc
mov
or
sbb
mov
jge
adc
inc
call
push
xchg
dec
jecxz
cmp
adc
xor
xor
je
adc
xchg
scas
or
out
push
mov
sbb
jo
data16
sbb
cmp
out
xchg
ljmp
ret
arpl
int
sub
aam
jo
inc
xchg
es
sbb
subb
lock
push
dec
pop
sarb
ret
dec
add
adc
sarl
pop
cmp
and
sbb
aam
rorl
push
xor
push
pop
or
add
jo
ds
mov
jmp
ds
push
ss
sahf
adc
adc
data16
outsl
xchg
mov
jo
add
mov
pushf
inc
icebp
push
clc
xor
pop
mov
cmp
aam
xor
jno
lods
mov
mov
into
aam
ljmp
jl
sub
jl
sbb
jo
sbb
test
divl
mov
push
xor
adc
cwtl
adc
sbb
push
mov
xchg
push
jbe
cwtl
pop
xchg
adc
xor
adc
jle
jge
mov
ljmp
mov
push
pop
jno
sbb
pop
or
call
icebp
aaa
adc
cmp
and
shlb
or
es
leave
aad
ret
and
push
rcrl
jb
je
addl
incl
mov
rorb
and
rdtsc
or
pop
jo
aaa
mov
ljmp
xor
or
lock
or
subb
or
and
pop
sub
out
and
add
loopne
mov
pusha
mov
xor
mov
or
lock
mov
sbb
aam
pop
jo
push
xchg
cltd
stos
pop
mov
cmp
and
push
lret
jl
rolb
rolb
add
mov
je
lea
lock
cmp
cmp
sbb
jno
je
ret
je
test
lods
fs
or
push
add
testb
cld
pusha
inc
pusha
rorb
push
jmp
jl
ret
or
outsb
outsl
adcb
or
and
and
movsl
mov
add
add
xchg
lret
xchg
movsb
dec
data16
add
push
push
outsl
enter
stc
sbb
sti
mov
js
movsl
add
pop
test
add
add
into
mov
sub
adc
dec
cmp
inc
roll
xchg
pop
sub
adc
dec
lcall
push
jmp
and
cmp
je
idivl
and
jl
inc
and
ja
xchg
mov
mov
loope
ret
rcrb
out
jle
and
push
dec
adc
dec
dec
inc
ficomps
cmp
cmp
fbstp
fs
lcall
addb
sbb
pop
add
bound
xor
incb
incl
add
dec
or
adcb
mov
pop
jmp
cwtl
adc
sbb
pop
mov
cltd
stos
ficompl
ret
or
es
in
add
inc
test
out
and
icebp
mov
xor
hlt
clc
inc
adc
xchg
je
mov
mov
ljmp
add
pop
ljmp
arpl
dec
sub
xchg
mov
js
dec
push
push
call
push
mov
add
jo
das
mov
add
cmp
mov
push
inc
mov
mov
sbb
xchg
sbb
mov
jp
inc
xchg
mov
or
pop
add
fs
daa
push
dec
add
mov
pushf
mov
jle
mov
fdivrp
je
in
jmp
push
idivb
push
add
in
lea
push
adc
ffreep
push
inc
adc
mov
add
push
pop
and
not
and
add
mov
pop
mov
rcrb
mov
shlb
nop
sbb
add
xchg
cs
sub
fs
dec
push
mov
mov
test
mov
shl
xor
pop
ja
xchg
lock
cmp
inc
add
test
cs
pop
sarb
cs
je
nop
inc
lock
clc
sahf
add
mov
mov
fisttpl
outsb
cmp
mov
or
push
adc
popaw
test
scas
mov
call
mov
sarb
mov
hlt
hlt
fimull
cmp
adc
add
sub
mov
icebp
or
or
cmp
lds
rcll
pop
jg
lcall
shlb
in
add
and
push
cmp
sub
and
ret
xor
sarb
pop
inc
loope
mov
cld
rcrl
xchg
in
cmpb
jne
cmp
aaa
add
fdivs
jmp
loop
sub
pop
sbb
inc
mov
rorb
mov
inc
sarl
xchg
rcl
mulb
adc
cs
or
mov
shlb
jl
rcrl
scas
pop
sub
ret
lods
mov
push
add
pop
rcrb
add
xchg
loop
push
add
roll
push
dec
push
test
jmp
aaa
lock
rclb
push
push
sti
fcmovnbe
inc
cs
call
adc
sbb
jo
cli
xchg
push
pusha
push
mov
xor
into
inc
sub
movsb
mov
outsl
push
lret
and
in
push
adcl
enter
inc
lahf
mov
add
and
jbe
addl
sbb
loope
repnz
adcl
push
push
pop
dec
jp
aam
xlat
loopne
mov
sub
fdivrl
mov
add
sbb
inc
push
andl
cli
jbe
das
ljmp
fiaddl
testb
add
testl
inc
das
push
sbb
mov
es
pusha
xchg
xchg
and
dec
fs
fildll
mov
jecxz
mov
add
pop
mov
sub
inc
les
enter
stc
fisubl
mov
repnz
cmpsb
or
fisubrs
and
and
adc
fs
mov
popaw
or
cmp
loopne
lahf
and
xchg
fs
mov
pop
cmp
add
fisubrs
push
add
adc
and
dec
xchg
jle
pop
add
cwtl
cli
ret
dec
mov
adc
lods
jp
lcall
jne
dec
push
adc
xlat
pusha
adc
pusha
movsb
jmp
in
inc
pop
test
and
sbb
orl
push
xor
push
loop
push
pusha
and
popa
push
xchg
pop
ret
or
mov
mov
ljmp
mov
pushl
xor
adc
loopne
adc
inc
mov
mov
inc
pusha
je
mov
subb
and
adc
jne
adc
sbb
mov
or
lcall
ret
mov
adc
mov
inc
pop
pop
int
cld
mov
and
jo
xor
lahf
xchg
adc
or
popa
nop
out
and
inc
cmp
or
loopne
insl
push
mov
add
xchg
jl
leave
and
adc
ljmp
add
in
dec
loope
rclb
push
xor
xchg
pop
jg
dec
loope
int3
and
adc
shlb
mov
xchg
dec
loopne
jle
adc
test
or
mov
lock
pusha
aaa
sar
xor
movsb
loop
popa
int3
pop
pop
pop
call
add
loopne
inc
std
fbstp
lea
test
ljmp
test
or
jle
adc
mov
mov
lea
in
mov
pop
push
in
add
mov
flds
loop
mov
imul
mov
pusha
push
pusha
in
pusha
push
sub
mov
dec
adc
mov
inc
mulb
inc
mov
add
movsb
adcb
sbbl
adc
test
lods
cmpsb
fcmove
mov
add
and
insl
ss
test
outsb
add
ja
adc
inc
aas
lock
xor
test
rol
es
loopne
adc
jg
pop
sarl
lods
sub
add
out
xchg
push
dec
add
ror
cmpsb
add
pop
stos
test
pushf
sbb
jne
icebp
add
cwtl
pop
jae
mov
sub
dec
cli
fistl
sti
push
lock
sub
nop
les
inc
daa
add
jbe
lock
nop
or
lods
xor
lret
call
add
push
jbe
sbb
mov
mov
or
shlb
xchg
lock
jmp
es
mov
xorb
lods
std
ljmp
push
xor
not
call
mov
dec
xchg
mov
pop
dec
lock
nop
enter
in
add
clc
sbb
push
loopne
aaa
ret
call
or
jecxz
sbb
add
sbb
jnp
lock
fwait
push
hlt
cltd
mov
cltd
rorl
orb
mov
ret
ror
mov
je
add
xor
push
popf
sarb
imul
aad
jg
mov
lea
pop
pop
mov
mov
inc
cmp
cmpsl
mov
popf
jo
inc
mov
es
shl
insl
addb
loope
and
xor
mov
adcb
aam
xchg
in
imul
push
push
push
mov
clc
fistpll
push
xor
mov
sbb
jnp
cmp
jbe
pusha
jo
push
popa
std
das
call
xor
adc
scas
js
shll
mov
stos
lock
test
dec
xor
add
mov
out
or
push
jp
clc
mov
jnp
jle
clc
call
mov
xor
pop
andl
enter
mov
adc
add
push
adc
js
adc
cmp
sbb
repz
push
sti
adc
lock
inc
adc
mov
ja
add
jo
mov
or
or
out
push
hlt
add
aas
mov
push
or
imul
bound
mov
sub
hlt
pop
roll
sub
push
xor
pop
adc
insl
sti
xor
or
lahf
xor
cmc
add
push
orb
xor
test
mov
cmp
sub
adc
inc
dec
mov
nop
hlt
lock
addl
mov
mov
dec
or
mov
mov
jg
fbstp
add
xor
lret
lock
sti
jmp
and
mov
pop
add
mov
cmp
mov
cmpb
mov
mov
jno
jo
lcall
inc
adc
lret
add
jno
fimuls
mov
js
outsl
std
insb
ljmp
mov
mov
xchg
and
jno
or
mov
add
sub
cs
mov
jmp
test
test
fimull
adc
out
or
aad
ficoml
mov
mov
mov
inc
fadd
jno
adc
cli
mov
mov
mov
ljmp
cli
inc
mov
fwait
mov
xchg
add
sbb
fdivs
xchg
xor
outsl
test
mov
mov
push
cmp
mov
call
rorb
lods
push
jb
add
mov
pop
into
and
push
inc
push
jo
call
jo
or
mov
pop
add
mov
sub
ret
cli
jmp
cmp
add
push
sub
imul
adc
sub
push
aaa
test
xorl
sub
rcrl
inc
push
xchg
mov
leave
shrb
push
fistl
adc
push
scas
mov
sbb
add
pusha
sub
add
clc
in
repz
cmc
xchg
jo
and
and
cwtl
mov
or
mov
scas
je
pop
or
xor
pop
dec
test
add
jbe
repz
add
cmp
or
mov
mov
cli
lods
call
add
lcall
lock
and
xor
loop
push
fmuls
mov
jo
loop
stos
rolb
stos
adc
faddl
js
pop
mov
or
adc
xchg
mov
inc
je
add
mov
sarl
push
push
jo
add
xchg
fidivl
bound
xor
add
test
jl
repnz
pop
mov
push
pop
cmp
xor
add
add
clc
pop
rclb
push
lods
jo
adc
int3
mov
jmp
adc
insl
je
sbbb
pop
jl
inc
adc
push
decb
push
adc
movb
lock
xchg
mov
out
ror
xor
xor
bound
fiaddl
mov
sbb
shrb
je
insb
jo
pop
mov
xor
mov
and
and
incl
fs
loopne
xor
xchg
jo
inc
mov
jo
cld
add
add
and
in
push
xchg
sbb
pop
nop
inc
mov
or
decl
ret
adc
push
or
xchg
mov
lock
nop
fists
push
sub
jmp
sbb
das
adc
imul
cs
inc
lret
dec
clc
jnp,pn
add
mov
mov
add
call
xor
notl
xchg
jmp
or
lea
aaa
call
cld
std
mov
jne
out
scas
sub
push
push
cld
xor
xor
pop
add
daa
jmp
negb
fisttps
sub
mov
decb
push
ds
mov
jmp
add
push
inc
mov
xor
lods
or
and
pop
sub
or
xchg
out
and
pop
mov
jne
jo
je
shl
jg
call
mov
cli
adcl
pop
pop
lock
xor
mov
xor
out
xchg
incl
cmp
pop
xor
dec
jno
lock
jmp
pop
outsl
xor
add
decb
in
outsl
fdivs
mov
test
mov
or
pushf
lock
sti
call
fs
pop
or
sbb
mov
sbb
sbb
or
adc
decb
add
jo
sub
es
pop
push
or
sbb
sub
adc
in
sub
push
or
or
or
lret
dec
mov
insb
aam
add
call
fwait
pop
dec
bound
and
testb
scas
add
or
mov
hlt
push
nop
dec
fmull
dec
and
cli
pop
or
push
testb
mov
and
sbb
adcb
out
xor
lock
pop
jno
jmp
or
jp
cmp
insb
add
add
js
andb
pop
pop
idiv
sti
loopne
neg
sti
and
hlt
adc
xlat
hlt
adc
add
lds
imul
es
sahf
push
push
addb
addb
xchg
and
shl
incb
jg
push
adc
push
sbb
dec
test
sub
bound
dec
sub
loopne
add
add
shr
mov
bound
out
push
lcall
subb
ss
inc
push
mov
mov
adc
push
adc
les
add
pushl
fcomp
push
inc
cmp
mov
mov
push
xor
mov
or
aas
sub
cmp
sar
aaa
adc
and
jo
and
je
call
mov
and
call
cli
mov
sbb
push
call
pop
dec
inc
fmull
mov
decl
adc
sarl
add
pop
or
fdivr
add
pop
fiaddl
in
or
dec
fs
ljmp
dec
cmp
popl
fmul
adc
push
cmpsb
es
add
or
pop
orb
xor
out
ret
ja
sub
es
jne
or
je
std
add
or
jb
iret
and
push
and
insb
add
adc
inc
xchg
jg
pop
fwait
inc
or
addl
mov
icebp
lcall
sarb
jl
xor
sub
inc
sub
adc
adc
ljmp
rol
sub
mov
sub
add
add
add
mov
ret
push
pop
sbb
dec
push
leave
mov
sub
push
jbe
push
orb
mov
jbe
jo
test
pusha
rolb
inc
or
adc
nop
je
or
lahf
xchg
hlt
pop
les
jle
ret
dec
push
or
jmp
dec
shrb
lods
fildl
mov
pop
mov
jp
sbb
cld
push
push
jl
push
mov
xorl
and
add
add
clc
dec
lret
add
mov
movsb
clc
scas
push
rorb
outsl
push
xchg
adc
cmp
dec
fistps
mov
inc
stos
add
xor
jne
push
pop
mov
adc
jp
scas
clc
add
push
xchg
mov
cmp
inc
inc
cmp
xor
je
jo
test
bound
aam
or
add
jecxz
ss
xchg
sub
add
xor
hlt
aam
in
inc
js
xor
adc
mov
push
pusha
xor
push
pop
jbe
lock
inc
push
loopne
pusha
pop
mov
popa
pop
lock
add
inc
rclb
or
add
adc
and
adc
bound
push
std
das
and
xor
push
int3
shlb
jo
mov
cwtl
hlt
mov
sub
push
cmp
in
scas
push
add
loop
pushf
inc
pusha
fistl
cmp
add
push
push
mov
mov
inc
ret
xchg
jo
add
push
mov
add
ss
lods
outsb
or
lods
out
loop
mov
xchg
mov
mul
jg
xchg
sub
xchg
dec
ret
add
add
or
ds
loopne
jmp
sbb
inc
ljmp
add
or
mov
jns
mov
cmc
incl
js
cmp
lea
adc
andb
cli
and
add
pusha
or
gs
andl
dec
pusha
cmp
les
dec
pop
loope
ret
cs
or
ja
jmp
pusha
lods
jg
push
imul
aas
xchg
shrb
dec
dec
mov
test
loopne
mov
mov
negb
and
pusha
sbb
notb
shlb
inc
xchg
sarl
cmc
loop
jne
outsb
lea
gs
mov
xchg
loope
and
push
jne,pn
movzwl
insl
ljmp
stc
shll
adcl
add
cmp
ret
lods
out
test
jg
mov
nop
gs
sub
or
mov
and
addr16
xor
incb
clc
pusha
lea
bound
push
test
adcb
lock
cmp
inc
inc
pop
add
inc
and
out
mov
or
bound
add
and
jb
repnz
adc
lock
or
pop
mov
loope
es
push
push
add
nop
cli
or
xor
cli
add
and
pop
inc
add
mov
pusha
and
xor
sub
adc
and
clc
call
cmp
es
add
mov
scas
loopne
mov
adc
clc
sbb
inc
call
jne
sub
add
add
in
js
cmpsl
xchg
and
adc
data16
mov
and
popa
xchg
ljmp
data16
lock
cs
cmp
outsb
pop
insb
adc
push
push
add
arpl
cld
add
loope
ss
push
inc
fisubrl
fisttpl
stos
xor
insb
inc
adc
test
pop
div
or
add
repnz
test
icebp
addr16
das
mov
push
sbb
cltd
xor
xchg
fdivl
pop
inc
loope
sbb
inc
stos
add
pop
test
or
and
out
pcmpgtd
and
insl
xchg
add
dec
incb
dec
add
xchg
je
push
inc
push
or
mov
or
push
mov
inc
jo
and
out
add
lock
pop
aam
xchg
or
sub
mov
inc
cmp
add
xchg
call
jne
in
in
test
mov
mov
jo
and
negb
out
and
fwait
add
cli
orb
adc
aaa
push
mov
or
outsl
jg
jo
aad
add
add
jo
insb
mov
lock
test
add
inc
repnz
inc
jl
mov
jb
pop
cmpsb
jecxz
push
adc
inc
mov
or
lock
adcb
es
es
es
jmp
push
push
fisttpl
sbb
jo,pn
cli
sbbb
test
dec
push
push
aad
mov
out
sub
inc
and
std
adc
mov
and
mov
mov
je
xor
jae
or
adc
sahf
scas
es
fistps
inc
lock
cld
shll
test
bound
mov
xor
jl
pop
cmc
mov
mov
jge
sti
je
cmp
mov
adc
and
jae
or
inc
lock
rcr
xor
adc
xor
ljmp
inc
xor
je
adc
sub
out
das
xor
mov
mov
push
rclb
jo,pt
jo
xor
adcb
test
xlat
rcr
mov
mov
mov
stos
cmpsb
call
inc
xchg
repz
call
push
push
add
push
je
adc
jecxz
adc
adc
xorb
pusha
aam
jo
xor
mov
dec
and
or
cli
dec
sub
pop
jl
or
inc
xor
fistps
sub
adc
xlat
call
clc
mov
push
cli
cld
das
mov
inc
ljmp
jo
mov
and
subb
andb
inc
rclb
lret
or
fs
fistps
call
pushl
jmp
adc
pop
call
sbbl
pop
pop
and
dec
mov
pop
sbb
cld
add
iret
jge
fisubrl
movsb
fisubrl
or
cmpsb
jae
and
and
push
lods
fildll
jecxz
mov
movb
pop
jmp
sbb
adc
xor
leave
cmc
test
into
nop
test
loope
adc
ja
lret
push
mov
xacquire
inc
jo
lock
ja
lea
loop
add
jb
sub
cs
or
cmpb
adc
ds
ja
je
or
mov
out
mov
les
mov
mov
and
jae
mov
lea
incl
mov
inc
mov
add
cld
inc
popf
adc
fdivr
cmp
pushf
jmp
xlat
push
push
push
fiaddl
mov
add
retw
mov
sbb
jb
add
cmp
push
add
fildl
add
ds
and
add
subb
cmp
xchg
add
inc
add
lds
mov
scas
fiaddl
xchg
pop
call
push
pop
xchg
add
xor
and
dec
add
and
mov
ss
inc
test
and
fstpt
test
je
and
enter
jecxz
lock
push
pusha
lock
lock
in
add
pop
call
mov
cmp
xor
pop
adc
lock
mov
adc
xor
push
and
jg
push
push
mov
cmp
je
fwait
shrb
mov
add
jb
sub
push
or
xchg
ds
in
xor
sbbl
inc
inc
je
idivl
dec
clc
enter
jmp
adc
mov
push
mov
mov
inc
scas
mov
outsl
ja
pop
cmp
and
mov
add
sub
mov
fistl
mov
adc
add
adc
lods
loopne
mov
xchg
mov
cmp
ljmp
push
hlt
int3
inc
loope
mov
clc
je
inc
inc
push
ja
xchg
das
es
shlb
lock
and
data16
das
cmpb
cmp
cmp
mov
pusha
fwait
inc
mov
aam
jne
add
jne
cmp
cmp
push
xor
nop
hlt
push
add
push
inc
mov
xchg
test
or
lock
jg
cli
inc
aaa
dec
adc
jne
incb
mov
lock
inc
adc
adc
int3
xlat
or
fadds
xor
in
cli
add
or
decl
or
lock
jo
sub
pushl
sbb
call
jno
jp
sbb
mov
mov
repnz
push
push
xchg
pop
add
jo
les
cld
push
adc
dec
mov
inc
call
xor
inc
pop
xor
rolb
push
or
loopne
mov
xchg
inc
xor
lahf
push
adc
mov
cmp
mov
lods
adc
cmp
je
adcb
lock
mov
sbb
push
icebp
sbb
aam
mov
add
orb
jo
adc
mov
mov
enter
inc
adc
int3
dec
call
xchg
xor
cmpxchg
fbld
test
enter
push
push
xor
repnz
and
push
jo
mov
xor
imul
loope
or
add
xor
in
mov
adc
fs
ja
push
test
sbb
aam
movsl
es
mov
push
sahf
shlb
mov
je
daa
sub
sti
repnz
imul
lret
mov
jno
xchg
xor
mov
adc
and
mov
test
rcrl
and
add
push
js
dec
call
aad
dec
bound
lods
xchg
inc
add
dec
xor
test
ds
das
pushf
sti
jne
and
mov
and
into
mov
pop
fadds
dec
inc
or
inc
xor
test
add
dec
xchg
ret
push
add
and
sub
outsl
test
mov
lock
or
aaa
or
mov
or
dec
in
mov
outsl
pop
and
repz
pop
or
add
xchg
mov
decb
or
pop
dec
pop
add
adc
xchg
push
pop
jo,pn
mov
push
sti
inc
inc
mov
aaa
mov
cmp
imul
or
popa
into
cmp
mov
inc
rorb
movlps
mov
add
or
cmp
aam
dec
in
push
mov
test
ds
rorb
add
pop
mov
in
add
repnz
outsl
sbb
jbe
insb
adc
shlb
sub
mov
jl
cmp
inc
outsb
mov
mov
fsubrp
mov
in
popa
sbb
xor
ljmp
testl
jmp
or
imul
es
pushf
loop
mov
loop
and
call
xchg
and
sbb
lret
add
lcall
adc
pop
cmp
push
in
fdivp
addb
xor
js
cmp
add
mov
xchg
xchg
mov
and
xor
push
les
jne
fmuls
cli
out
lea
movsl
jo
or
cltd
mov
clc
dec
inc
sahf
cmp
adc
xchg
cmpsb
mov
xchg
dec
pop
push
movsl
push
mov
mov
sbb
adc
ret
jo
ja
enter
call
addl
popa
sti
call
mov
jmp
test
cmp
sub
outsb
sbb
mov
lods
pusha
pop
clc
and
enter
mov
sub
pop
or
addb
xor
xchg
mov
adc
sbb
xor
imull
in
aaa
push
jecxz
sarb
xchg
add
pop
enter
shrb
mov
xor
mov
in
mov
sarb
sbb
pushf
push
into
xor
sub
mov
inc
test
jb
add
pushf
int
enter
push
loop
mov
or
pusha
fadds
addr16
test
mov
add
call
mov
or
test
push
rorb
adc
pushl
test
inc
das
jne
xchg
movsb
bound
mov
outsb
cmp
in
roll
fs
inc
push
adc
and
xor
outsl
dec
push
fimuls
adc
or
and
cmc
xchg
cmp
decl
sarb
ret
test
xor
test
cmpsb
mov
add
enter
ss
aad
sbb
push
in
and
push
dec
xchg
shlb
pop
jb
pop
inc
rorb
mov
add
xor
inc
insl
scas
xchg
ret
aam
cmp
or
cld
jne
mov
pop
sub
adc
add
aad
fwait
int3
repnz
repnz
shlb
andl
shrl
xor
sub
pop
aam
xchg
push
xor
test
jg
add
mov
add
sub
ss
cmp
pop
fcoms
test
or
jbe
rclb
xchg
dec
test
rcrb
mov
out
inc
push
idiv
lea
in
mov
rcrb
into
xor
js
and
test
xor
mov
dec
push
inc
jge
push
cmpsb
lods
sti
loopne
shl
jne
ljmp
movzwl
or
push
fistpl
or
add
adc
push
push
mov
add
dec
jl
or
jb
loopne,pn
adc
push
data16
inc
in
popa
outsb
jp
adc
add
cmp
jmp
jns
cwtl
adc
adc
push
repnz
mov
or
mov
inc
mov
cld
sub
mov
loopne
or
fcomip
hlt
arpl
cmp
addb
mov
sbb
js
cmpsl
pusha
sub
inc
loope
or
cmp
push
xorl
inc
push
inc
push
inc
out
and
into
in
push
inc
loopne
and
xchg
sar
push
bound
dec
push
popa
push
adc
push
nop
add
or
add
add
add
popa
jo
adcb
sbb
cs
idivl
adc
add
push
jbe
mov
ljmp
mov
in
inc
adc
push
and
mov
add
add
or
shll
je
cmp
loop
push
in
out
inc
mov
xchg
mov
jne
inc
mov
incl
and
push
pusha
or
pop
mov
decl
dec
inc
cmc
dec
insb
add
bound
incl
mov
shl
sub
popa
cltd
pop
or
inc
inc
sub
and
hlt
popf
or
pop
sub
push
popf
add
mov
add
push
cli
add
jo
cmp
or
hlt
loopne
lea
add
pusha
inc
das
call
insl
fldt
sbb
push
xor
lods
mov
mov
call
add
mulb
mov
scas
mov
add
in
add
mov
fiaddl
pop
incb
enter
inc
les
rcrl
pusha
stos
roll
xchg
and
add
mov
xchg
mov
insb
push
pop
mov
int3
inc
jmp
push
pop
xchg
popa
enter
adc
movsb
mov
mov
fildll
jb
call
or
mov
cltd
sub
in
je
pusha
pop
add
jecxz
bound
push
leave
add
movsb
bound
lock
ljmp
add
add
mov
cld
add
cmpsb
xrelease
mov
mov
popa
ficoms
ljmp
xor
pusha
and
sub
fimull
subl
cmp
jle
lock
push
jl
adc
and
push
sub
mov
sbb
call
dec
mov
data16
test
adc
mov
pusha
std
pop
lods
lret
xchg
push
push
pop
add
pusha
and
push
sub
jge
mov
add
stos
add
loope
cmp
out
je
mov
sti
gs
adc
adc
sbb
add
stc
xor
sub
sub
subl
fs
sub
xchg
lret
xor
or
addr16
js
jl
stc
xor
push
es
xor
xchg
inc
add
add
adc
sti
mov
je
loopne
push
adc
pop
and
xchg
cmp
add
or
sbb
dec
hlt
add
jne
ds
popf
add
xor
icebp
std
cld
mov
jmp
stos
add
stc
or
mov
outsl
adc
andb
inc
jl
pop
test
push
add
and
add
mov
outsl
lcall
jmp
or
push
jmp
aam
in
inc
add
ds
idiv
push
inc
repz
pop
sub
scas
add
or
cs
dec
je
mov
and
lret
pusha
jbe
push
addb
mov
and
dec
lea
nop
sbb
jne
jno
or
xorl
add
or
add
jo
adc
cmp
ja
or
xchg
lods
data16
icebp
lods
adc
dec
xor
mov
push
or
lds
add
jl
xchg
sti
cmp
jbe
imul
inc
lret
or
ds
or
inc
stos
popa
cmp
xor
pushf
mov
idiv
in
incl
icebp
pop
and
inc
imul
cltd
lock
ja
mov
push
or
mov
cmpxchg
mov
rdtsc
adc
push
adc
inc
jmp
lea
rcrb
xor
ret
mov
mov
xchg
shlb
mov
xchg
movsb
mov
push
jge
loopne
push
ret
mov
into
sub
or
add
data16
subb
add
jmp
or
or
jbe
fistpll
inc
lock
icebp
cmpl
bnd
or
jmp
cmp
push
inc
sub
or
loopne
and
adc
add
icebp
or
or
cmc
mov
mov
mov
pushl
sarl
mov
lock
incb
sbb
pop
sub
and
sub
jmp
je
test
mov
sbb
int3
adc
mov
push
test
push
loope
fbld
lea
add
xchg
cmc
jmp
stos
adc
mov
incb
jmp
inc
lock
jge
inc
add
mov
and
mov
adc
dec
je
pop
dec
clc
inc
mov
xor
mov
outsl
shl
fs
test
push
xor
mov
push
dec
xor
clc
jmp
fisttps
mov
psubsw
mov
push
and
pop
mov
jl
add
mov
setb
pop
shlb
popa
mov
lds
cmp
push
mov
sbb
add
sub
and
jecxz
sar
pushl
pop
pop
ret
add
add
jne
cmpl
adc
sti
lods
jg
lock
adc
or
jo
cmp
addb
xor
lods
enter
sbb
clc
cmpsb
ljmp
data16
scas
es
mov
adc
push
or
sbb
sbb
pusha
jno
lret
mov
push
inc
add
add
jmp
fs
pop
icebp
fldl
sub
add
mov
loop
in
jmp
push
fwait
lock
mov
xor
mov
adc
push
add
incb
ret
add
fdivl
push
jne
faddl
repz
cmp
and
pusha
pop
cld
mov
stos
push
adc
repnz
adc
mov
add
jb
fisubrl
clc
add
xor
cmp
in
pop
fmull
push
jmp
je
lock
shrb
test
mov
clc
cld
adc
insl
add
add
adcb
mov
pop
dec
mov
and
dec
mov
popf
jo
and
or
fs
xchg
mov
adc
stos
add
cmp
adc
sub
and
jg
and
popa
insb
out
arpl
push
mov
mov
mov
and
jne
ret
or
ret
popa
jl
adc
mov
inc
inc
cmp
cmp
je
pop
xor
add
xor
in
ja
mov
xchg
or
in
rcl
inc
add
xor
or
icebp
jb
das
and
sti
xor
les
rcrl
test
hlt
jno
sahf
add
sahf
cmp
cs
psraw
and
jp
rolb
shl
add
je
fsubrs
je
cmp
mov
test
and
jo
jmp
or
jno
pop
or
and
jo
lock
js
mov
loopne
aam
push
mov
add
push
push
pop
out
and
mov
or
dec
pop
je
in
pop
insl
jb
or
repnz
cmpsl
ret
std
fwait
int
jmp
pop
sbb
pop
aas
adc
pop
ror
xor
and
test
adc
test
imul
add
sbb
add
mov
sbb
mov
mov
jno
pop
jb
add
inc
nop
inc
pop
jae
cmpsb
lock
imul
pop
cli
das
clc
jg
mov
xchg
jne
jno
or
dec
adc
mov
mov
and
ljmp
inc
sbb
or
jo
jno
dec
call
sbb
aam
and
inc
and
mov
test
cs
stc
add
jo
push
bound
push
sub
mov
mov
or
and
icebp
pushl
cmc
icebp
sbb
icebp
adc
add
xchg
inc
ret
add
add
and
and
decb
push
test
stc
mov
fidivs
mov
call
sub
jo
sub
mov
mov
xchg
or
mov
pop
ret
cltd
or
mov
mov
fistpl
mov
mov
hlt
add
icebp
divb
repnz
lock
adc
or
inc
pop
mov
pushl
pop
or
mov
gs
or
mov
adc
adc
add
icebp
sub
hlt
add
or
inc
mov
push
push
add
inc
testb
sbb
sbb
arpl
or
add
movsb
subl
dec
pop
push
jo
test
je
dec
mov
mov
orl
push
or
add
jmp
sti
or
push
shll
xchg
sub
in
mov
sbb
popa
rol
xor
mov
add
mov
stos
pop
dec
pop
or
stos
push
jp
xchg
fs
fdivrl
push
call
fcmovnbe
jg
add
loopne
xchg
daa
sub
mov
jg
imul
and
jl
and
addb
jge
mov
je
and
jmp
pop
pop
cmpb
mov
or
fwait
push
add
insl
lods
std
fwait
mov
or
jp
mov
add
cmpsl
adc
adc
ja
jb
rcrb
loopne
incb
fisttps
ja
mov
lds
test
cld
outsl
jp
adcl
xchg
add
andl
ret
fstl
shl
and
je
xchg
andb
std
outsb
adc
int
pop
jb
and
push
fistpl
lock
cmc
add
add
or
inc
cmp
inc
cmc
addl
test
and
jmp
sub
subb
pop
push
test
and
les
rcll
insb
outsl
in
adc
test
popf
or
ret
add
push
mov
std
ffreep
push
rolb
cmp
push
ret
dec
repz
mov
cwtl
ret
mov
andl
pop
rolb
add
pop
je
into
in
jmp
stos
mov
jp
call
loopne
shr
sub
push
cld
adc
jmp
mov
test
nop
fs
inc
xchg
imull
rcll
adc
xor
xchg
adc
mov
dec
adc
inc
cmp
enter
mov
sub
and
push
cmp
add
and
ret
jg
outsb
xor
idiv
sbb
lds
add
jmp
test
movsb
test
mov
pop
imul
fists
dec
and
test
and
shlb
push
shrb
cld
mov
mov
les
loopne
adc
xlat
lds
fildl
aaa
loop
roll
or
enter
roll
enter
jg
add
mov
rorl
push
retw
sub
sub
clc
in
add
push
dec
je
add
mov
sbb
repz
ljmp
movsb
imul
xor
test
arpl
add
jne
rolb
or
mov
rcr
mov
aaa
or
pushl
addb
push
cwtl
xor
imul
das
repz
ret
push
rcll
rcrb
arpl
push
pop
lea
or
xchg
addb
fildll
or
and
jb
sub
sbb
cs
lock
shl
loop
sbb
ljmp
cmp
roll
cmp
lods
aam
sbb
into
jbe
fcmovne
scas
ljmp
ret
mov
dec
sub
insl
sub
sub
roll
and
mov
pushf
xchg
adcl
pusha
addl
or
out
add
scas
push
sbb
sbb
add
daa
cmc
sbb
add
add
lcall
pusha
push
movsbl
jl
call
test
je
out
test
cmp
pusha
xchg
andb
or
and
sbb
or
aas
rolb
mov
out
les
andl
std
pusha
or
xchg
std
incl
sub
idiv
jecxz
adc
psubsw
push
je
subl
inc
or
jl
adc
mov
movsb
and
popa
inc
jmp
mov
fdivl
fnsave
pop
adc
and
fadd
aad
aam
aaa
xchg
xor
sti
bound
cmp
orl
or
or
lods
fcom
andl
add
mov
or
cli
or
insb
leave
sub
nop
bound
mov
cmpb
or
push
in
cmpb
pop
or
pusha
and
xor
push
inc
or
push
and
mov
push
pusha
mov
pop
inc
loopne
out
jmp
in
or
jmp
dec
rolb
pop
jmp
pop
add
inc
or
inc
push
mov
loopne
xlat
popa
jo
mov
sbb
pop
xor
outsl
xor
in
push
xchg
clc
push
xor
and
ljmp
outsl
decl
jmp
popa
jns
sub
loopne
adc
and
add
add
stos
cmp
add
pushf
push
jecxz
test
out
out
and
inc
and
xchg
push
add
fidivs
dec
mov
mov
out
mov
pushf
test
push
jp
outsl
jg
mov
leave
mov
pop
or
inc
idivb
mov
shl
call
jge
nop
push
dec
pusha
cli
shlb
add
add
popa
or
sbb
xchg
nop
in
cmp
jg
jl
xchg
adc
cmp
jae
loop
jmp
or
mov
xor
mov
pop
pusha
pop
scas
sbb
push
ficoms
gs
outsb
shrb
or
pop
ljmp
jg
xchg
es
or
sbb
pusha
js
fcompl
cli
or
loopne
stos
mov
jmp
or
sbb
jmp
pcmpgtd
in
mov
data16
dec
jno
jmp
push
mov
movsl
arpl
loopne
adc
push
shl
addr16
mov
adc
mov
out
lock
in
jg
pop
cld
cmp
push
pop
call
icebp
lcall
nop
fisubs
and
cs
outsl
nop
push
mov
xor
adc
pop
adc
test
dec
cmp
sbb
cmp
push
sub
adc
lock
das
add
add
fnsave
add
insl
in
mov
mov
jle
clc
xor
add
out
xor
xor
xor
cltd
cmp
lock
sahf
test
jl
mov
in
into
sub
sub
pushl
adc
and
fucomip
jge
inc
fisttpl
lcall
lock
mov
mov
mov
pop
mull
roll
in
jmp
and
jp
mov
pop
push
loopne
in
add
dec
cmp
cmp
arpl
clc
push
xor
mov
inc
mov
stc
lret
and
push
sub
in
lock
xor
or
push
les
push
orb
jno
xor
pop
jmp
mov
adc
sub
clc
out
xor
sub
test
cmp
xor
orb
and
mov
sbb
out
sub
and
cmp
and
pop
pop
lock
insb
adc
push
vpshuflw
pusha
cld
lcall
insb
pop
add
xor
call
insl
popa
icebp
add
jp
shlb
or
mov
mov
add
jo
dec
inc
and
jg
mov
mov
cld
xor
test
enter
stos
movsb
add
jl
or
mov
dec
sub
pushw
jl
xchg
fwait
aaa
dec
jo
inc
sub
in
adc
shrb
scas
fdivrl
sbb
js
test
mov
sahf
adc
jbe
jge
mov
add
xor
xorb
cmc
inc
or
xor
jns
dec
jno
xchg
or
cmp
add
sbb
mov
mov
insl
or
insb
push
cld
inc
ds
imul
inc
sbbb
les
cmpsb
insl
outsl
incb
add
add
add
push
divb
imul
testb
adc
xchg
add
repz
daa
inc
movsl
icebp
mov
ds
les
daa
test
xor
sti
mov
fadds
je
mov
inc
out
pop
jmp
int3
shrb
imul
push
lea
add
inc
push
mov
adc
push
sti
mov
push
add
inc
mov
xchg
lret
cwtl
movl
xchg
pushf
mov
xchg
mov
pop
dec
or
push
stc
push
jo
push
rolb
xor
je
xor
pop
in
pop
sub
movb
xor
call
fsubs
push
xchg
scas
add
outsb
or
adc
hlt
adc
lods
xchg
xor
pop
inc
inc
sarl
or
xchg
and
jg
push
test
mov
mov
or
xor
cmc
call
xlat
adc
jne
and
mov
cs
mov
cmpb
popa
cmp
cli
mov
inc
mov
jmp
aaa
push
jmp
popa
dec
xor
shll
jle
clc
push
lock
jge
sub
and
pop
inc
data16
dec
shr
push
rclb
xor
call
push
dec
test
adc
or
adc
or
cmp
dec
test
fdivrp
push
jecxz
sbb
push
push
push
ss
dec
cmp
mov
sbb
aaa
mov
mov
mov
xor
dec
cmp
xchg
adc
sub
inc
gs
mov
test
adc
push
je
or
mov
test
add
xchg
addb
test
xorl
fstpt
or
imul
test
jp
pop
pop
adc
lock
cmp
dec
jmp
xor
pop
punpcklbw
xchg
cmp
inc
add
cmp
jmp
xchg
testb
repz
add
imul
movsb
add
inc
sbb
mov
xchg
pusha
dec
push
mov
fs
push
je
inc
testb
shl
imul
sub
adc
inc
adc
mov
cmp
pushl
or
call
inc
imul
cmp
mov
jge
pop
dec
lock
adc
int3
mov
outsl
mov
mov
aam
mov
mov
outsb
inc
fwait
lea
scas
pop
xor
icebp
add
call
or
add
jbe
and
mov
inc
aad
lods
rclb
xchg
adc
or
sub
orb
adc
pop
dec
add
adcb
jmp
or
sbb
push
xchg
push
mov
idivb
jg
sti
add
sbb
pop
xor
jb
test
sbb
xor
cli
lea
cmpsl
call
push
fcomps
cwtl
sahf
pusha
mov
xchg
rclb
mov
sub
call
or
inc
jo
xor
mov
xchg
loopne
sub
mov
call
dec
push
lcall
or
xor
adc
mov
loop
hlt
mov
push
je
jl
imul
and
mov
push
je
lock
rcrb
outsl
pop
or
pop
pushl
and
push
cltd
and
shlb
nop
xchg
add
pop
call
test
cmp
call
lea
mov
or
xchg
push
adc
mov
mov
dec
push
adc
push
inc
cld
xorl
mov
dec
js
out
mov
ror
or
ljmp
mov
or
jo
and
adc
repz
cmc
sbb
mov
adc
or
lcall
xor
data16
clc
daa
or
es
je
test
clc
fs
mov
fidivs
daa
push
test
sbbb
orl
or
jb
fidivrl
in
inc
cmpsb
sbb
pop
pop
ret
mov
add
mov
int3
add
lea
cmp
shrl
push
sub
call
push
mov
jg
mov
mov
add
push
jb
inc
adc
lods
cmp
inc
xchg
adc
jo
jecxz
in
add
xor
or
add
movb
sub
cli
inc
cmp
jne
sbb
xchg
xchg
mov
data16
cmp
bound
call
inc
adc
lcall
cmp
sub
int
xchg
mov
ret
pop
call
ljmp
xchg
add
adc
add
daa
loopne
loopne
or
and
clc
mov
inc
orl
or
jmp
dec
imul
fwait
leave
pop
mov
mov
sbb
dec
call
pop
xor
notl
jle
mov
les
mov
sbb
jp
pop
testl
mov
mov
stos
adc
cs
cwtl
sbb
pop
xchg
push
mov
sti
out
int
test
pop
lods
pop
inc
jmp
lea
stc
scas
call
sahf
and
cld
mov
add
std
call
insb
xor
pop
test
lea
mov
xchg
loop
int3
dec
shlb
dec
call
mov
cmp
inc
aam
cli
lds
or
ja
negl
pop
add
push
inc
mov
xchg
push
sbb
add
add
int
jmp
mov
mov
push
fcoms
xchg
adc
in
push
shl
rolb
add
dec
jmp
js
fs
pop
cmp
add
and
pusha
pop
adc
jno
fcmovne
es
inc
cs
inc
and
and
and
call
or
adc
dec
mov
add
addb
adc
js
push
push
sbb
xor
test
fisttps
push
idivl
in
jb
int3
divb
nop
fimuls
dec
cmp
sub
aad
rol
andb
ss
call
fiadds
bound
and
inc
shrl
shrb
mov
test
xor
mov
test
pop
sbbl
add
outsl
add
andb
addr16
orl
orb
inc
sbb
inc
mov
dec
mov
lock
sbbl
jb
inc
or
call
les
or
bound
xor
push
push
pop
mov
push
mov
fistps
mov
push
or
add
xchg
sbb
push
cmc
xor
in
call
daa
pusha
in
mov
es
cwtl
divb
add
sbbl
sbb
fisttpl
dec
xor
jle
sbb
jmp
mov
adc
mov
sub
cmp
aam
add
add
jl
add
xchg
mov
clc
inc
jmp
adc
or
adc
insb
out
mov
xchg
add
ss
cmpsb
ss
add
jl
mov
add
xchg
aas
jns
adc
lds
mov
mov
jns
or
aam
jp
sub
jmp
inc
lea
cwtl
sbb
cltd
fdivrs
add
mov
rclb
adc
loopne
loopne
or
fsub
lret
leave
adc
mov
ds
leave
inc
test
cmc
rol
cmp
mov
std
ret
sahf
fidivs
loopne
jb
adc
je
mov
dec
and
push
push
push
jecxz
or
push
rol
rcrb
stos
mov
cwtl
mov
ja
shlb
mov
adc
shrb
ret
sarb
xchg
shlb
lret
lock
roll
shlb
add
xchg
push
inc
loopne
sub
setg
cmp
aaa
cmc
add
int3
push
inc
sub
fldcw
jbe
xor
jecxz
xchg
ficompl
loop
pop
sub
lea
lods
ljmp
pop
xchg
pop
push
push
popa
dec
jne
test
push
mov
fsubrs
mov
mov
push
aas
daa
pop
pusha
pop
orb
addr16
add
adc
ret
mov
or
fs
dec
in
scas
jmp
movsb
push
cwtl
cli
adc
jle
push
add
mov
push
or
adc
jmp
orl
add
add
add
add
sub
popa
fsubs
xor
add
jg
adc
int
add
jg
xchg
mov
adc
fstpt
inc
xor
jl
pusha
test
call
and
test
sar
loope
add
clc
add
jb
jmp
and
add
jo
fs
push
add
add
inc
inc
add
in
les
pop
adc
adc
loop
pushl
push
mov
inc
cmp
fdivl
hlt
mov
push
hlt
std
rolb
lea
push
add
mov
je
add
mov
sbb
push
cmp
cmpb
outsl
mov
jge
jecxz
sub
into
or
or
test
add
sub
pop
xor
fs
ret
fsubp
or
push
stos
pop
dec
pop
jne
mov
adc
js
bound
pop
add
loopne
pusha
jmp
call
cs
add
loopne
and
add
int
mov
or
pusha
ss
aas
add
mov
mov
sub
xchg
ss
fsubrs
push
adc
add
or
push
outsl
sbb
ret
and
aam
data16
push
mov
push
xlat
add
mov
loopne
fimuls
inc
add
test
cmpsb
cwtl
add
inc
andb
xchg
sbb
xchg
shl
adc
fldl
mov
dec
jbe
dec
lods
ret
ret
lcall
cmc
jne
push
fimuls
fs
and
push
push
lock
mov
inc
add
add
ret
inc
clc
add
clc
fwait
and
pop
mov
sti
ss
dec
or
aaa
je
scas
insb
mov
loope
in
out
xlat
xchg
mov
stos
add
insl
inc
mov
xor
jbe
rcrl
adc
sub
mov
jmp
jbe
dec
xchg
cli
andl
lea
aam
pop
ja
inc
sti
pop
xchg
cmp
and
sbb
dec
pop
sbbb
sti
xor
add
fadds
mov
adc
add
sub
es
scas
fisttpl
inc
pop
dec
sbb
jge
xchg
pop
cmp
push
or
add
ret
add
sahf
inc
fildll
jno
popa
and
test
cmpl
sti
sbb
mov
cmp
dec
inc
ret
pop
jb
out
pop
dec
jmp
add
ret
fiaddl
cld
add
cmp
sahf
dec
lock
and
popf
inc
xor
loop
or
add
xchg
adc
ja
loopne
testb
mov
adc
and
repz
aam
sti
lds
call
adc
adc
cli
pop
fwait
cli
xor
movsl
cmp
push
pusha
mov
lea
das
push
loopne
repz
push
lea
add
adc
inc
xchg
pop
jp
or
adc
sti
add
insb
aam
or
std
sbb
mov
lock
mov
in
inc
add
mov
xor
inc
pusha
lcall
add
icebp
add
sti
add
in
nop
fwait
push
push
add
xor
sbb
add
mov
pop
dec
clc
sbb
ret
and
jne
test
sbb
dec
ret
dec
jo
cmpb
decl
mov
call
jo
adc
cli
pop
jo
andl
cmp
add
das
pop
imul
add
push
sub
mov
mov
mov
or
fcoms
mov
rol
aas
mov
dec
test
fdivrl
push
push
sub
dec
ret
clc
jbe
jge
xor
xor
in
nop
xor
int
ja
xchg
lock
incl
adc
pop
mov
or
out
jbe
les
add
enter
inc
dec
sti
xchg
add
or
mov
mov
pop
adc
add
mov
mov
jbe
mov
push
sub
cld
je
xchg
ret
lock
jp
dec
mov
mov
pop
xchg
adc
out
jb
jle
inc
push
mov
dec
movsl
call
gs
sub
mov
testl
subl
or
adc
inc
adc
xchg
mov
and
and
mov
repz
cmovnp
jbe
inc
push
sbb
xchg
push
or
cmpsb
call
lret
push
jae
dec
xor
jo
shll
ja
jo
or
pmaddwd
pop
jae
mov
mov
push
dec
push
and
in
mov
enter
adc
xorb
dec
dec
add
inc
ljmp
sbb
mov
inc
imul
or
push
xor
push
pop
pop
xchg
pop
cmp
or
mov
testl
fwait
jle
cmpsl
push
int3
or
incl
add
cwtl
add
pop
lock
dec
icebp
jle
inc
mov
adc
test
test
or
push
loope
xor
lods
fwait
pop
pushf
cld
push
scas
hlt
pusha
leave
mov
faddl
cs
and
adc
jbe
js
xchg
jmp
push
pop
int3
rolb
lock
pop
dec
adc
push
mov
sub
inc
mov
bound
test
loope
mov
push
cld
and
inc
jmp
pop
pop
js
lcall
jecxz
push
push
lock
nop
pop
or
mov
mov
inc
jo
adc
inc
sbbb
mov
mov
ljmp
add
adc
cmc
jg
jo
push
pop
add
pusha
insb
ljmp
shr
dec
cmp
mov
lock
mov
cmp
xchg
pushf
ds
adc
lock
hlt
stos
inc
fcoml
orl
sarl
pop
cli
and
mov
dec
jg
je
call
or
or
or
mov
jne
push
push
icebp
or
xor
rol
mov
inc
sbb
pushf
xor
or
enter
xor
jo
jmpw
mov
push
jb
jbe
insl
sbb
push
sub
pop
icebp
nop
testl
mov
adc
je
push
push
jne
mov
cmp
gs
sbb
rol
loopne
adc
xor
or
rcrl
ret
or
mov
xor
ret
into
and
jg
scas
sbb
add
pop
adc
add
inc
add
mov
and
mov
inc
rcrb
sbb
and
and
cs
lock
popa
fldl
pushl
lock
pusha
clc
jo
mov
fcomip
jl
adc
lods
push
xor
lock
jo
pop
pop
test
iret
out
fisubrl
popf
sti
and
jmp
jmp
mov
mulb
adc
filds
in
add
add
sbb
xor
adc
ss
lea
insb
pop
stos
cld
jno
sub
test
xor
int
movd
sub
sub
ja
popa
fwait
je
xor
adc
xor
pop
add
fcoms
jg
add
cld
xor
add
sysexit
lcall
add
int3
push
and
mov
sub
mov
movsl
les
jle
mov
jmp
push
pop
add
adc
push
inc
fsubrs
cmp
lock
xor
sbb
outsl
cli
sub
pop
add
xor
out
pop
std
pop
xor
fwait
dec
and
sbb
pop
inc
in
push
aas
mov
push
repz
cmpsb
fsubr
repz
add
cmp
popa
dec
inc
xchg
adcb
mov
inc
ja
xor
dec
adc
fs
xor
dec
arpl
hlt
icebp
je
test
loopne
and
int3
hlt
mov
inc
inc
xchg
jo
faddl
sub
out
pop
mov
inc
mov
mov
loop
dec
ss
jne
rolb
pop
or
dec
ret
add
gs
std
cmove
or
sub
mov
pop
inc
rorl
dec
jle,pt
jo
dec
mov
adc
popf
mov
xor
mov
in
pop
mov
add
or
push
leave
mov
je
xor
inc
out
das
fcoms
adc
incb
cld
mov
mov
pop
mov
xor
add
mov
and
mov
add
add
repnz
dec
shrb
inc
enter
dec
cld
fists
xor
add
xor
jno
cli
xor
icebp
mov
inc
xor
inc
push
xchg
xchg
int
jo
push
pop
movl
aas
xor
mov
xor
and
inc
jbe
adc
adc
std
mov
je
call
sub
cmp
mov
sbb
rorb
mov
dec
mov
xchg
inc
jge
or
mov
loopne
push
inc
pusha
push
lret
add
adc
mov
std
push
push
cmp
inc
cli
sahf
out
rolb
out
je
pop
push
inc
test
xor
fdivrs
inc
in
mov
test
jle
xor
push
std
inc
sbb
sbb
and
mov
scas
and
adc
add
adc
pop
es
cmpsl
add
addb
add
lds
push
adc
push
and
cs
je
push
add
or
dec
dec
adc
orb
push
cli
dec
pop
mov
dec
push
mov
inc
sub
sub
inc
jecxz
ss
ret
fidivl
call
push
sub
test
inc
dec
sbb
test
in
and
nopl
and
push
or
ror
mov
xchg
push
adc
jae
subl
mov
sbb
adc
fisttps
mov
out
and
les
mov
fcomps
push
push
push
repz
rcll
add
outsl
jo
mov
inc
int3
testb
mov
lea
add
xchg
fbld
lods
outsb
push
add
and
push
mov
lock
lea
leave
xchg
mov
bound
jl
test
and
xor
add
jge
lock
jecxz
adc
repnz
lret
sbb
sbb
sbb
scas
jo
cmp
rclb
and
xorl
rclb
adc
jo
jmp
cld
rolb
sub
sbb
call
mov
ret
shlb
xchg
mov
ljmp
push
dec
add
xchg
xchg
ret
movsb
les
scas
movb
pop
fld
and
insb
out
cli
xchg
xorb
mov
mov
cmp
inc
and
push
push
test
scas
jo
and
adc
xor
adc
mov
jo
je
pop
or
sbb
mov
and
test
push
add
sbb
popa
retw
or
adc
sub
into
add
ret
mov
lods
fdivl
nop
jo
sbb
pop
mov
dec
jae
dec
dec
into
cmp
aad
mov
mov
fildl
pushf
inc
imul
jl
loope
ljmp
adc
inc
orb
aaa
je
push
data16
sub
add
shll
sbb
int3
ret
adc
andl
test
pop
xor
loopne
aam
inc
out
jne
push
xchg
and
add
inc
testb
xor
or
sub
shlb
mov
cli
aam
push
or
adc
rolb
aad
adc
adc
ret
push
dec
sub
sub
mov
or
inc
rcll
inc
mov
addr16
rclb
dec
test
inc
cmp
jne
push
pop
add
pop
call
repz
or
push
enter
inc
push
iret
sahf
hlt
adc
stos
mov
aaa
cs
jle
sbb
and
add
sub
int3
add
xor
insl
inc
xchg
or
add
jo
push
lea
loopne
aas
sbb
hlt
clc
lds
incl
loope
push
push
pop
jl
jp
mov
fistpll
xchg
loopne
or
mov
pusha
imul
mulb
add
sub
cwtl
or
add
mov
xorb
loopne
or
and
push
inc
fisubl
pop
fcomps
xchg
mov
inc
inc
xor
addr16
add
ds
push
sbb
ss
sti
push
or
or
and
add
push
andl
adc
shlb
sub
xchg
push
mov
or
pop
fs
insb
aam
cmp
dec
aad
xchg
push
adc
stos
pop
inc
jb
dec
mov
shlb
xor
mov
pop
jle
xchg
adc
or
fldl
push
add
test
inc
add
xor
call
jo
sbbb
or
or
in
jl
call
and
mov
xor
jo
fists
inc
push
bound
jbe
shrb
pusha
es
insb
pusha
int3
adcb
aam
popa
xor
inc
push
xor
lea
test
xchg
pop
inc
scas
push
pusha
inc
test
dec
xor
sbb
frstor
add
clc
add
xchg
add
dec
dec
std
adc
nop
roll
or
or
loopne
fidivl
in
adc
loopne
popf
jo
addl
mov
cmp
or
out
loope
pop
mov
adc
aad
pusha
pop
call
push
add
pop
mov
test
pusha
inc
fistps
cli
adc
inc
loopne
mov
dec
cmpl
aaa
hlt
xor
add
outsl
ret
in
push
loopne
hlt
loopne
dec
add
call
shll
clc
xor
mov
add
dec
dec
sbbb
mov
sbbb
mov
and
loope
xchg
mov
jmp
loope
movl
test
or
fadds
addb
add
mov
jb
xchg
cmp
lods
or
dec
adc
cld
ror
je
add
inc
push
push
pushw
add
push
mov
aam
lea
or
dec
lods
and
or
mov
aas
call
fstpt
lea
das
push
xor
clc
xor
push
xchg
sub
inc
clc
mov
sbb
outsl
mov
sti
jno
loope
cmp
loopne
shll
push
adc
push
mov
dec
rcrl
cmc
pop
idiv
jb
sbb
inc
ja
xor
add
push
orb
cwtl
lods
js
push
xor
or
sahf
rol
lock
mov
adc
sar
mov
add
mov
lret
cld
into
add
or
orb
pop
jne
jg
add
lods
loope
add
lcall
bound
pop
stos
inc
adc
or
test
mov
data16
mov
dec
add
aad
xor
cmp
jp
push
mov
mov
mov
xchg
inc
adc
adc
icebp
cmp
push
dec
ret
clc
iret
ljmp
loope
das
mov
and
pop
mov
aas
lock
mov
lahf
inc
mov
or
imul
sarb
add
lods
cmp
push
push
dec
repnz
jbe
adc
add
mov
nop
mov
mov
cmp
mov
and
decl
adc
div
scas
adc
mov
dec
popf
mov
xor
mov
add
pop
fadd
insb
dec
mov
xchg
jb
rclb
xor
mov
lock
jae
adc
outsl
mov
in
xchg
sub
movsl
jle
adc
inc
sbb
and
pop
cmp
popf
test
push
or
xor
push
add
cli
call
add
sbb
push
stos
lods
hlt
divb
loope
into
pop
pop
in
sub
aas
mov
cwtl
test
mov
or
scas
lea
pop
div
pop
jecxz
pop
add
mov
add
xor
jg
cmp
aam
dec
inc
adc
sti
mov
dec
add
jl
cs
popa
xchg
imul
inc
std
cs
leave
ret
push
jmp
adc
lea
scas
adc
int3
inc
cltd
sub
adc
jo
inc
push
shlb
mov
push
push
sarb
push
adc
pop
inc
mov
pop
cmc
mov
xor
cmp
add
call
mov
lock
shlb
or
mov
sub
jmp
test
call
pop
add
add
add
std
inc
les
jl
call
cmp
iret
mov
outsb
or
add
inc
jbe,pt
add
dec
mov
dec
jle
orb
loopne
out
mov
jmp
cmpb
jo
lock
pusha
or
sahf
scas
add
fistpll
rcr
mov
jle
mov
add
nop
add
xchg
mov
add
jp
gs
xor
jo
pop
lods
loope
mov
cmp
shlb
pop
jbe
jl
movsb
xor
jl
in
jno
adc
push
add
mov
and
je
cmc
bound
sahf
mov
jl
jge
sbbb
sbb
add
jge
or
jmp
jo
test
dec
add
inc
sbb
dec
loop
mov
add
int
add
add
int3
sbb
push
xchg
adc
xor
jno
dec
xchg
xlat
es
push
xor
shl
jmp
fdivs
pop
insb
repnz
add
js
testb
or
mov
or
test
outsl
ss
hlt
movq
mov
clc
push
cli
fdivs
add
jbe
add
inc
or
dec
add
xchg
lock
push
cmp
mov
mov
inc
push
sbb
cmp
add
jbe
clc
sbb
adc
or
mov
cmp
loopne
cld
lcall
cld
lock
scas
jno
mov
jno
cmp
or
pop
repz
jl
add
inc
mov
fdiv
and
push
jo
stos
in
je
test
shr
ja
clc
mov
jbe
lock
add
clc
ljmp
cmp
orl
dec
leave
cmp
push
push
or
jo
jo
push
add
push
test
or
pop
sub
frstor
push
icebp
dec
pop
and
mov
pop
movsb
cmovne
and
pop
jno
inc
jmp
mov
inc
xor
mov
sub
rcll
cmp
adcb
aad
pop
mov
sub
inc
push
jb
jne
call
pop
jo
or
insb
call
lods
mov
ss
or
shrl
mov
mov
inc
push
rcll
mov
testb
xor
inc
xlat
ja
repnz
sub
xor
cwtl
fcomip
lock
xchg
push
je
xchg
cmp
jecxz
inc
sbb
xor
nop
stos
push
and
cli
and
or
rcl
pop
mov
repz
hlt
push
jo
scas
add
jo
or
add
cmp
idivb
mov
lock
and
fwait
add
xorb
dec
clc
outsl
aaa
sub
push
aaa
and
stos
das
test
aas
sbb
lock
add
popf
shl
cld
mov
sbb
dec
inc
fistl
push
scas
inc
divl
ret
mov
dec
inc
xor
movb
jl
adc
jnp
jge
fwait
mov
pop
mov
sbb
add
sbb
mov
cld
mov
cmp
push
sarl
add
lea
add
cmp
lock
scas
fdiv
xlat
adc
add
call
jb
push
lock
sub
push
push
adc
add
xor
sbb
ja
pop
test
cwtl
push
ljmp
mov
in
cmp
addb
xor
test
scas
nop
shl
sub
push
out
xor
test
sub
push
push
sub
inc
mov
push
jne
fnsave
inc
lds
negl
or
out
daa
mov
jne
cld
sbb
xor
push
cmp
jae
push
sub
or
icebp
inc
push
push
shl
fnsave
mov
cs
sub
inc
pop
jne
cmp
fwait
mov
push
mov
or
jb
sbb
lock
lock
pop
jmp
sarb
adc
test
in
and
xor
add
sub
or
pop
add
or
inc
jo
je
push
mov
orl
jl
lock
push
xor
cmpsl
add
jnp
pop
adc
call
xchg
shll
mov
pop
test
xor
lret
pusha
adc
ja
outsb
repz
arpl
and
push
add
pop
add
fwait
lahf
adc
sti
cvtps2pd
sbb
lahf
call
sbbb
leave
inc
jo
sub
decl
jbe
xor
ret
lock
sbb
jge
xor
arpl
decl
xchg
sub
sahf
cmc
add
or
scas
inc
xchg
dec
xor
and
xor
inc
scas
mov
aaa
sub
pop
pop
orb
fidivrs
add
push
xor
adc
and
aam
jp
mov
insb
test
sbb
ds
test
pop
scas
or
adc
dec
sbb
scas
fwait
data16
sbbb
cmpsl
or
sub
ret
or
add
in
enter
outsl
aam
add
lock
add
clc
pushl
cli
push
adc
repnz
inc
fistl
leave
and
dec
pop
loopne
jb
shll
mov
mov
pop
ret
add
push
push
push
mov
hlt
scas
push
ret
dec
or
aad
sbb
insl
mov
add
cmp
adc
rcrb
fdivrp
cmpsb
and
cltd
mov
pop
insb
adc
add
dec
fadds
push
sub
sbb
outsl
adc
outsb
mov
add
rclb
adc
pop
clc
sbbb
ret
fidivrl
fcomp
or
dec
mov
sbb
mov
jmp
test
test
orl
lea
sbb
ficomps
neg
pusha
es
mov
push
leave
and
mov
sbb
add
cmp
clc
or
xchg
push
mov
add
add
sarl
mov
adcb
andl
cld
pop
push
test
addb
pop
call
test
rol
xor
push
mov
shlb
and
in
lea
fildl
call
mov
test
inc
jbe
dec
xor
leave
xor
or
cmp
push
andl
and
test
ret
cli
mov
fdivs
sarb
je
int3
shlb
shrb
mov
mov
xor
ss
jle
push
ficoms
shlb
push
sub
jne
push
adc
jg
pop
bound
in
or
mov
jle
rorb
inc
clc
insl
inc
aam
jmp
lahf
andb
nop
or
dec
idiv
jo
or
rclb
hlt
in
call
jl
push
cmp
adc
jnp
out
xor
xor
dec
push
orl
std
inc
jmp
push
jbe
add
adc
aaa
and
dec
cmp
test
sub
push
ret
sub
xchg
stos
enter
test
int3
add
jg
call
insb
inc
call
xchg
push
fidivl
add
inc
adc
jb
sbb
imull
in
push
pop
les
rol
push
or
add
xchg
xchg
sarb
push
adc
es
pop
add
testb
push
pop
or
enter
dec
loop
sbb
movb
cld
adc
pop
pop
adc
icebp
addl
sbb
push
or
inc
push
jo
das
mov
mov
mov
ficoms
push
sahf
sub
in
sbb
andb
jl
add
insb
dec
addb
jo,pt
fisubs
mov
dec
mov
push
xchg
dec
and
fs
adcb
push
test
movsl
inc
clc
rcl
adc
hlt
add
push
mov
aaa
ficomps
add
add
cmp
adc
adc
push
ret
pushf
lds
mov
je
and
iret
mov
ljmp
or
cwtl
pop
mov
testb
mov
movsl
inc
xlat
mov
lds
mov
push
adc
sbb
xchg
or
std
add
popa
push
mov
or
and
jo
or
or
pop
lcall
push
or
incl
cld
pusha
imul
pusha
xor
xchg
lcall
ret
adc
pop
call
rclb
sbb
mov
jecxz
sbb
dec
data16
sub
pusha
pop
loope
aad
rcr
sub
adc
movsb
scas
cmpsb
movsb
inc
adc
in
popa
es
decl
mov
cmpsl
pusha
cmp
inc
test
decl
cld
pusha
sbb
pushl
pusha
adc
loope
sbb
inc
and
xchg
inc
add
out
cwtl
loop
mov
outsl
clc
add
add
jecxz
movsb
dec
insl
or
push
push
loope
mov
cmp
add
movsb
cld
loopne
call
and
mov
adc
lock
cmp
inc
push
pop
dec
push
ljmp
ret
pop
sti
loopne
popa
pop
xchg
or
pusha
and
add
ja
dec
ja
cli
push
cltd
cmp
mov
xor
es
or
add
push
ret
adc
call
pop
mov
repnz
mov
aaa
movsb
test
adc
pop
arpl
std
or
push
dec
pusha
push
add
lock
pop
jge
lock
dec
pop
dec
lods
push
cmpb
cmp
or
pop
pop
bound
xorl
decl
je
pavgb
mov
or
ret
mov
loop
js
pusha
mov
call
add
sub
push
adc
xor
ret
and
push
out
pusha
xor
add
fsubp
ja
ret
adc
mov
mov
xchg
xor
mov
sbb
adc
aas
or
or
gs
sbb
sbb
jne
mov
push
push
stos
mov
call
ret
bound
dec
lret
adc
inc
cmp
push
jne
add
pusha
and
jmp
cmpsb
pop
and
mov
dec
pop
xchg
cmp
cmp
and
or
xlat
js
xchg
add
clc
sub
clc
insb
add
push
or
push
and
mov
or
mov
pop
in
or
jne
push
inc
add
call
xor
add
rcrl
jae
mov
arpl
mov
idiv
cmp
pop
adc
pop
add
subb
pop
pusha
push
call
faddl
adc
cwtl
pop
dec
rorb
add
cli
mov
or
pop
pop
xchg
pusha
mov
clc
mov
nop
xchg
or
add
sub
push
loope
sti
in
add
leave
fisubrl
xor
push
sarb
push
dec
js
jp
fwait
inc
push
ds
cmpsb
add
xchg
mov
adc
or
faddl
push
jb
testb
mov
fcomi
sub
adc
fldl
mov
rclb
adc
push
punpckhwd
addl
jle
jl
pop
pusha
xchg
or
bnd
subb
push
scas
xor
insl
jge
or
pop
mov
pop
mov
clc
mov
or
or
push
push
nop
jbe
add
adc
aaa
test
or
cwtl
in
icebp
add
xor
jg
jg
add
xchg
cmpsb
gs
xchg
out
push
push
push
jg
pop
out
dec
inc
jae
xor
aaa
ret
lock
lock
cmpsb
insb
ss
jg
loope
jbe
sub
jg
xchg
cmp
ljmp
mov
sbb
insl
push
mov
das
push
jle
push
mov
testl
xor
mov
daa
xor
mov
xor
push
stos
int3
push
jmp
mov
sar
and
adc
mov
sub
inc
and
inc
int3
jno
add
decl
mov
aaa
jae
fbstp
sti
dec
inc
dec
repnz
xor
mov
adc
pop
sbb
sarb
or
adc
jmp
add
sbb
jmp
lea
lahf
mov
test
aaa
or
adc
pop
xor
xchg
mov
add
ljmp
sbb
and
and
jae
inc
sbb
bound
mov
cmpb
mov
cmp
adc
std
nop
rolb
cmp
adc
push
jno
scas
xor
and
fcomp
aad
mov
test
fidivrl
mov
decl
or
psrld
jno
push
jno
push
lock
mov
add
mov
and
loop
sbb
lds
leave
lods
stos
mov
xor
mov
and
cmp
movsb
lock
incl
sub
lock
hlt
xor
push
testb
pop
and
cmpsb
pop
inc
xor
lock
test
loopne
cmp
out
add
fmuls
inc
sbb
pop
mov
vmovhps
shrb
lea
mov
pusha
js
xor
mov
int3
hlt
mov
xor
int
mov
inc
xor
lea
mov
cld
add
push
bnd
jo
add
or
adc
repz
outsb
add
imul
jp
and
hlt
add
neg
dec
push
sarb
or
insb
cmp
lock
add
int3
shl
repz
nop
pop
idiv
std
or
fsubl
mov
mov
adc
or
dec
or
and
dec
scas
xorb
pusha
je
push
xor
dec
adc
push
les
inc
pop
mov
xlat
xchg
addb
inc
enter
push
dec
inc
ficoml
pop
lock
out
add
add
add
xchg
mov
inc
jno
jmp
add
sub
and
jno
cli
add
lods
sub
push
leave
out
pop
mov
int3
iret
xor
pop
inc
pop
cmp
aam
inc
inc
cmpsl
leave
inc
add
and
xor
clc
mov
or
pop
mov
add
orb
loope
stc
sub
add
jmp
push
jg
jecxz
dec
addb
sub
imulb
inc
out
xor
dec
xor
je
add
loop
jo
enter
pusha
pusha
xchg
add
hlt
xchg
leave
push
push
lock
mov
ret
in
lea
mov
loope
stc
rorb
or
lea
adc
add
sub
scas
je
out
adc
je
add
cmp
add
inc
rcrb
mov
add
mov
xchg
jg
xor
mov
inc
je
ret
inc
xor
inc
mov
pop
inc
push
add
push
jb
pop
or
fdiv
sbb
cmc
sub
cmp
add
jno
mov
push
fwait
test
stos
ja
popf
add
call
ja
inc
cmp
dec
sub
icebp
and
lret
jle
mov
test
cmp
mov
scas
lret
and
xor
and
cmpb
ss
je
hlt
das
adc
mov
sub
push
add
mov
ror
jle
jl
iret
jb
cmp
dec
repz
fldt
rcr
jb
adc
xor
rol
mov
mov
jbe
dec
jmp
ret
aad
xchg
mov
mov
ljmp
pusha
ss
mov
add
ja
xchg
mov
mov
movsl
add
pause
push
mov
cld
mov
cmp
sub
clc
pop
pop
scas
clc
jl
scas
jb
or
mov
adc
arpl
insl
inc
mov
sub
lea
pop
clc
orb
mov
xor
or
lock
ret
xor
lock
sub
sbb
dec
push
cs
jg
lea
pop
call
ljmp
or
jb
push
ss
push
ljmp
sbbl
pop
pop
test
cmc
inc
mov
cmp
sub
subb
mov
jo
sub
inc
shr
cld
pop
mov
and
jne
shlb
mov
fdivr
orl
xor
inc
sub
push
js
dec
int
cld
push
mov
aaa
jmp
mov
mov
add
jmp
mov
call
adc
xor
mov
mov
sar
lds
xchg
sbb
lahf
mov
mov
add
push
or
jp
mov
jb
sbb
mov
push
fs
scas
sub
pop
cmpsb
icebp
or
lock
lods
call
test
and
cmp
test
inc
out
cs
add
inc
lcall
dec
push
ljmp
cmp
jmp
pop
mov
rclb
jp
jae
addb
outsb
push
add
in
xor
mov
cmp
pop
and
push
sbb
or
and
xor
loop
pop
and
sub
gs
pop
in
sbb
fsubp
xchg
mov
adc
push
pusha
sbb
aas
and
xor
jmp
pop
push
xor
pop
adc
divb
int3
push
jle
sbb
add
adc
jb
lock
hlt
push
add
shll
lock
fcoms
in
and
lock
push
xor
cwtl
call
outsb
mov
adc
clc
jae
bound
adc
xor
lcall
ret
push
sbb
jmp
dec
sbb
push
js
push
and
cmp
icebp
adc
adc
and
lock
insl
je
movsb
and
icebp
inc
lahf
xchg
in
cmp
je
rorl
loop
in
jl
das
je
stc
pop
les
jl
lock
rolb
adc
hlt
mov
jmp
mov
xor
jmp
enter
aad
test
push
rclb
mov
dec
mov
and
lods
sub
adc
out
fcomp
shlb
enter
xchg
inc
dec
mov
lret
mov
out
pop
mov
in
ss
or
sti
jne
mov
sbb
mov
adc
mov
pop
dec
sbb
in
xchg
push
add
adc
adc
shl
push
je
loope
inc
arpl
and
subb
orb
xor
fs
out
stos
adc
cld
or
arpl
aaa
xchg
add
mov
and
pop
push
mov
push
ret
scas
mov
lcall
nop
jp
mov
mov
inc
push
testb
lcall
hlt
fcmovnb
sub
add
shlb
jmp
sub
popa
loope
test
pop
lea
sbb
mov
test
cmpl
mov
ljmp
lods
pop
adc
addb
pop
pop
inc
andb
pop
adc
jecxz
jge
les
mov
mov
hlt
adc
jl
iret
mov
js
movsb
xorb
push
cmp
inc
lods
addb
test
mov
out
mov
rorl
orb
xchg
sub
adc
pop
fs
or
push
dec
xchg
ss
mov
xchg
lds
sbb
insl
xchg
cmp
cmp
add
in
imul
mov
pop
jo
mov
jae
aas
enter
adc
rolb
cmp
ds
add
ja
push
and
jle
sbb
pushl
in
xor
fcompl
push
stos
push
mov
xchg
cmc
push
cmpb
push
mov
je,pt
shlb
inc
bound
rolb
insb
shrb
xchg
dec
lods
push
dec
negl
decl
dec
pop
jne
shrb
out
and
sub
lock
sub
mov
out
xchg
mov
or
sub
pop
add
cmpb
jp
sbb
das
mov
pop
test
cwtl
lds
add
pop
shrb
fcompl
jp
daa
roll
aam
loopne
mov
or
pop
adc
push
mov
lea
cltd
mov
enter
dec
jae
rolb
inc
inc
rolb
popl
push
ret
mov
xor
out
jp
rclb
insl
fwait
loopne
add
cld
rcrb
jp
adc
scas
mov
or
jbe
adc
int
sbb
stos
leave
ret
bound
mov
cmp
icebp
int3
int3
xor
push
les
or
sbbb
lret
mov
xor
pop
add
shlb
shr
push
inc
sbbb
ja
dec
mov
pop
sub
mov
adcl
mov
jbe
cmpb
mov
or
mov
dec
pushl
adc
fcoml
lea
and
jl
adc
sbb
mov
jo
lods
shlb
cmc
add
push
inc
call
js
mov
add
cmp
pop
hlt
es
sub
xor
iret
nop
jne
push
push
aad
nop
decb
cmp
fistpll
mov
xchg
sub
ljmp
or
pop
loope
ljmp
addl
mov
jne
test
sbb
movsl
int
add
add
mov
call
pusha
and
loope
rcrb
pop
bound
add
jbe
mov
inc
data16
jne
sbb
addb
push
xor
lods
dec
inc
pop
call
loopne
adc
loopne
in
mov
leave
jo
hlt
dec
mov
incb
repnz
pushf
ret
loop
lea
fwait
popa
fistl
add
ret
ret
mov
cmp
sub
push
push
sub
call
shl
adcl
adc
sahf
pusha
adc
fcmovnbe
call
mov
push
je
and
sbb
jecxz
jp
mov
ja
rcrb
fwait
andl
adc
add
popa
add
loope
inc
jmp
mov
shll
cmpsb
jbe
cld
pop
pushf
and
pusha
mov
jae
loopne
mov
loopne
ss
test
mov
ss
pop
adc
mov
fistpll
scas
add
aaa
aam
sub
lret
jle
mov
add
jg
cwtl
cmp
push
push
lret
add
add
dec
xorb
ljmp
hlt
push
adc
mov
adc
lock
ja
push
dec
sbb
repz
lcall
pusha
or
jae
call
add
pcmpeqb
in
push
cld
cmp
mov
dec
dec
out
push
out
faddp
dec
ret
mov
stos
mov
lret
aam
sub
icebp
jbe
jae
sbb
out
cmp
hlt
mov
js
pop
mov
or
lock
jae
cld
fistpl
inc
mov
mov
jmp
and
mov
pushf
jb
adc
lea
fdivp
rclb
mov
or
frstor
mov
ds
cmc
dec
inc
inc
sahf
hlt
std
sbb
push
js
xchg
sub
inc
jl
adc
push
inc
push
cmp
dec
in
clc
push
scas
or
loopne
outsb
pop
mov
xor
call
push
push
push
xchg
inc
shll
inc
fisttps
out
test
mov
fs
pusha
push
or
jp
pop
testl
mov
cmp
xor
add
je
bnd
scas
lock
adc
dec
or
movsb
mov
push
mov
add
js
repnz
sbb
mov
andb
stos
add
rcrb
mov
clc
sbb
add
loopne
mov
loopne
leave
and
dec
cmp
enter
aad
lret
loop
jo
push
jo
test
in
daa
lcall
jle
mov
pop
bound
fisttpl
add
add
ret
push
pusha
sbb
out
push
popa
dec
jno
add
decl
bound
and
sbb
push
dec
ret
and
inc
sbb
inc
shll
cmp
ljmp
mov
mov
and
loopne
out
xchg
xor
mov
push
xchg
jmp
and
add
add
inc
lods
test
or
add
mov
adc
push
and
pusha
sub
loopne
repnz
dec
js
pop
or
cmp
xor
lahf
ficompl
xchg
sar
sahf
cmp
sbbb
or
or
sub
pusha
add
push
or
mov
test
push
or
iret
xor
roll
add
pop
fisubs
add
jp
jo
sbb
xorb
movsb
or
sbb
addb
adc
pop
adc
xchg
push
test
sbbb
lret
add
cld
xchg
lea
pusha
adc
xchg
andb
jg
je
add
jbe
daa
cli
decb
push
push
call
aas
or
mov
inc
or
push
push
cmp
insl
cmp
cmpl
mov
and
jno
pop
fildl
add
dec
add
mov
dec
rclb
popa
xchg
sbb
and
adc
jl
mov
pop
repz
push
push
mov
xchg
add
daa
mov
sub
mov
es
ss
mov
and
or
pop
sbb
adc
inc
push
dec
and
or
adc
add
pop
or
xlat
test
pop
inc
push
push
jo
jo
mov
jo
scas
push
add
push
es
fadds
sub
pop
add
nop
sbb
xlat
mov
xor
sub
cli
or
and
notb
adc
les
xor
dec
data16
call
add
and
add
inc
pop
data16
mov
add
adc
or
and
es
adc
mov
test
icebp
or
loopne
test
and
ljmp
lcall
add
push
insl
adc
or
pusha
ret
add
jo
cmp
outsb
mov
add
jp
faddl
andb
jb
push
inc
sub
inc
mov
pop
ljmp
shlb
cmp
test
and
in
adc
pushl
repz
imull
push
mov
mov
xchg
mov
sbb
push
inc
cmp
add
jmp
inc
mov
mov
rcll
roll
fcmovnbe
adc
jne
hlt
notl
test
and
fwait
scas
add
jmp
sub
out
jb,pn
push
cmp
ja
jb
cmp
mov
jbe
dec
sub
add
mov
aam
add
ja
or
push
mov
fidivl
lret
mov
ret
cmpsl
mov
out
int3
lods
push
mov
fsubrs
adc
jo
xor
add
movsb
dec
or
cli
cmp
mov
push
push
push
cmpsl
and
pop
movsb
ret
rol
test
xor
inc
dec
push
shll
xchg
add
lahf
and
ret
mov
test
jp
cmp
stos
add
jo
cmp
enter
in
and
xorl
inc
dec
cmp
aaa
sub
jmp
jmp
fs
push
mov
lea
cltd
inc
mov
sbb
inc
int3
sub
sub
stc
jb
je
and
es
jb
cltd
ret
add
cmp
jb
mov
movsl
add
mov
mov
adc
pop
jo
cmp
inc
add
lcall
push
popa
adc
das
cmp
jnp
cmp
push
outsl
inc
pop
cmpsb
pop
mov
sub
push
lea
pop
or
and
aam
adc
and
xor
mov
pop
dec
scas
inc
xor
sub
call
and
aaa
mov
mov
hlt
enter
or
or
incb
pop
or
cwtl
mul
je
xorl
or
mov
sub
sarl
cmpsl
movsb
fnstsw
sbb
pop
jbe
add
add
adc
loopne
add
add
and
push
shlb
clc
jo
xor
inc
mov
outsl
pop
jo
mov
mov
sbb
fwait
mov
add
mov
push
cmp
movsb
insl
test
and
pop
sub
push
sbb
pop
xorb
mov
push
xor
sbb
test
rcrb
loop
mov
push
lock
stc
jbe
divb
pop
into
mov
push
inc
dec
mov
inc
sbb
mov
xchg
add
fisubrl
dec
loopne
jle
je
sub
add
xor
pop
push
add
xchg
int3
mov
mov
nop
or
ret
mov
jno
mov
push
mov
xchg
call
repnz
pop
push
mov
in
cwtl
je
sub
jno
adc
lcall
or
add
xor
loopne
lock
or
subb
adc
bound
insl
mov
and
scas
sub
out
push
or
xor
push
or
test
pop
dec
add
mov
les
add
sub
cmp
xorb
lods
xchg
mov
out
aam
xor
push
adc
add
cmp
pop
mov
incb
sbb
adc
pop
cmp
mov
test
in
jb
lock
adc
mov
mov
sub
ret
aam
cs
fbld
je
andb
stos
es
iret
push
add
pop
and
inc
mov
inc
rcrl
push
dec
dec
iret
xor
and
add
xchg
pop
xchg
jle
push
cwtl
lcall
out
out
sub
aaa
enter
mov
mov
sub
pop
hlt
stos
mov
mov
lea
push
ss
xchg
inc
ret
inc
movl
mov
in
lretw
je
dec
dec
addb
add
imul
and
mov
inc
xchg
jmp
aad
ret
mov
data16
push
jmp
add
int
call
inc
cmp
dec
rcr
sarb
inc
mov
inc
add
pop
addl
mov
sti
jg
cld
push
push
xor
push
inc
cmp
call
inc
ss
loopne
popa
test
jl
enter
sbb
insl
dec
cmp
dec
push
mov
shll
mov
mov
xor
and
jbe
inc
dec
adcl
mov
add
inc
jo,pn
mov
push
xor
dec
cld
in
popf
adc
out
addr16
insb
orb
into
testb
add
or
filds
push
add
stc
xor
pop
mov
xchg
ret
lea
or
ret
aam
add
call
insb
icebp
sbb
pop
fwait
clc
cmp
enter
stc
fbstp
mov
das
sbb
mov
mov
jo
int3
ficoms
adc
mov
test
push
or
lea
cmp
add
ja
pop
subl
push
mov
je
aaa
insb
mov
hlt
pusha
push
xor
mov
cmp
xor
sub
dec
mov
repnz
mov
sub
mov
leave
js
push
cmp
rol
add
rclb
push
push
cmp
cmp
mov
inc
inc
adc
cld
addb
jns
cmp
jae
lcall
bound
sub
sub
dec
mov
xchg
cli
es
push
pop
push
pop
fildl
pushl
ret
dec
insb
add
mov
or
dec
mov
out
test
and
pop
scas
mov
and
inc
jo
sub
clc
mov
xchg
cld
rcll
loope
xchg
jb
add
inc
shrl
push
xchg
sub
lods
add
mov
add
mov
sarb
lret
fisttpl
shl
dec
add
or
mov
and
lods
les
xchg
scas
int3
adc
cmp
testl
lahf
daa
dec
idivl
cli
lahf
mov
adcb
and
push
cmp
jl
push
add
or
repz
movsb
mov
sub
pop
andl
inc
ret
addb
mov
je
or
cmp
mov
adc
mov
in
lea
add
cmp
dec
js
test
lods
inc
sahf
add
jb
insb
and
mov
bound
pushf
add
inc
pop
and
outsl
int3
add
insb
in
dec
imul
sub
cmpl
scas
and
fcoml
dec
loope
or
lahf
cmpl
loop
data16
xor
jo
push
inc
xorb
je
movsb
add
jg
es
cs
cwtl
rolb
xchg
roll
add
into
push
push
push
pusha
movsb
mov
sti
dec
xchg
adc
test
or
add
inc
cmp
pause
leave
mov
adcl
sbb
ds
call
cld
fwait
push
adcb
ret
xchg
rclb
inc
leave
sub
mov
sub
inc
into
rcl
adc
push
add
je
xchg
aad
clc
push
ja
jl
pop
lods
add
sub
enter
cmp
mov
push
iret
lock
std
shl
and
insb
xor
and
mov
and
loopne
inc
ret
pop
mov
sti
pop
sbb
add
xor
push
ficompl
and
pusha
mov
mov
icebp
mov
jmp
push
mov
fwait
push
pop
push
pop
mov
add
and
mov
rclb
dec
jmp
rcrl
mov
std
mov
adc
incl
dec
mov
pop
dec
inc
adc
inc
data16
sbb
shrb
xchg
lret
or
movb
inc
sub
lret
repnz
or
and
iret
std
addb
add
pop
aad
js
add
ds
jbe
cli
lret
cmpsb
lahf
stc
rorl
push
push
inc
call
inc
out
mov
leave
xor
aad
mov
je
int3
cmpsl
cmp
int3
inc
pop
add
sahf
adcb
push
int3
loop
dec
mov
mov
pushf
jl
push
loopne
sbb
jl
les
pop
pusha
push
lea
inc
mov
cwtl
ret
out
pop
and
addl
jo
add
cli
loopne
out
or
push
cs
sbb
loopne
test
cmp
orb
push
insb
sub
push
clc
mov
pop
pusha
test
mov
pop
insb
dec
out
add
sub
pusha
cmp
repnz
scas
mov
inc
push
sub
pusha
pop
and
repz
xor
add
dec
data16
push
fdivr
mov
pop
and
mulb
std
pusha
sub
js
test
mov
std
or
push
jae,pn
add
xchg
clc
pop
ja
das
sub
ja,pn
mov
cmp
sbb
pusha
cmp
cmp
mov
push
leave
add
mov
adc
mov
lret
push
adc
add
add
js
mov
jmp
loopne
subb
cmp
cltd
popa
pop
loopne
cltd
dec
fs
mov
add
sub
lahf
movsb
rolb
or
mov
or
ljmp
popa
dec
pusha
popa
data16
sub
cwtl
mov
pusha
bound
lahf
loop
movsb
adc
mov
lock
add
sub
add
ficoms
pop
push
mov
push
xchg
subb
leave
and
inc
inc
inc
cmpsb
cmpsb
add
sub
adc
js
and
xchg
xchg
rolb
loop
inc
js
jo
xchg
add
rolb
enter
lods
push
mov
jbe
rorl
mov
mov
cmp
mov
fmull
subb
pop
xor
rolb
std
and
inc
xchg
add
lret
cmc
mov
aam
movsl
out
inc
or
stos
ret
testb
pop
lds
pusha
and
jne
loopne
and
jg
shl
movsl
int3
push
inc
lahf
loopne
mov
ja
in
popf
test
pop
test
loopne
xchg
add
add
adc
scas
cmp
mov
loopne
loop
inc
mov
loopne
mov
adc
mov
mov
jg
dec
insl
pusha
cmp
or
pop
outsb
inc
inc
idiv
orb
inc
sbb
ja
fidivs
push
je
loope
loope
ja
add
add
std
xchg
bound
cltd
mov
pushf
xchg
popa
insl
jb
loop
xchg
js
outsl
pushl
jecxz
jne
pusha
aad
push
pusha
and
rcll
inc
mov
addr16
cmc
cmc
das
add
add
loopne
mov
cmp
jmp
add
pop
xchg
fsubrs
mov
add
add
sub
loope
test
xor
bound
pop
popa
lcall
popa
adc
lahf
push
mov
push
cmpsb
add
cmpsb
cmp
xchg
adc
xchg
loopne
ficoms
imul
shll
xor
ja
outsb
mov
out
inc
adc
cmc
call
cmp
shll
sbb
xchg
out
mov
pop
mov
icebp
mov
add
jbe
and
mov
test
out
jbe
int3
mov
fildll
sub
sub
xor
push
mov
and
dec
enter
sub
and
inc
cld
pushl
cmpb
ret
xor
les
add
and
incl
or
and
loop,pt
jno
push
cli
xchg
or
xchg
xor
mov
push
xor
hlt
push
xchg
into
push
faddp
add
inc
sub
xor
jl
insb
pop
ret
jb
sbb
jl
jle
sub
add
add
popf
inc
xchg
scas
movsb
xor
sbb
and
jle
lea
xlat
rorb
popa
pusha
mov
push
cmp
shrl
out
mov
lods
ds
push
lds
mov
add
or
cmp
jl
push
add
add
jnp
xor
into
xor
xor
push
mov
add
movlps
or
dec
std
push
jmp
or
mov
pop
or
mov
pop
das
rcrb
call
pop
sbb
cmp
cmp
and
pop
cmp
push
dec
shrb
sbb
and
mov
mov
pop
add
repz
mov
add
decb
ljmp
adc
pop
out
xchg
ret
fs
xor
push
inc
call
sbb
das
adc
movsl
mov
jle,pt
push
push
ret
cli
mov
xchg
inc
dec
and
pusha
inc
into
push
jo
rcll
test
and
sub
mov
pop
cli
xor
adc
jl
xor
outsl
mov
jne
aam
je
and
mov
add
sub
rcrb
std
inc
ret
lret
fdiv
pop
and
mov
mov
cmp
data16
xchg
jne
enter
ret
and
sbb
imulb
cs
test
push
test
add
adc
aaa
push
nop
push
call
incb
add
rcrl
iret
xor
xor
pop
mov
aam
popa
sub
add
mov
lret
or
jg
add
loopne
sub
push
lods
or
je
or
aam
sarl
lods
xorb
xor
sub
ret
out
js
call
xor
push
shl
sub
int
ret
mov
cmp
fidivl
fnstenv
pop
cs
or
enter
xor
mov
in
iret
push
dec
cli
jnp
adc
push
aas
jo
adc
mov
fucomip
lock
shlb
in
rolb
lcall
lods
aas
hlt
jne
movl
es
and
adc
outsb
add
mov
pop
cmp
in
lock
jbe
mov
push
je
cmp
test
bound
inc
loopne
fsubr
incl
dec
pop
push
invd
xchg
adc
test
or
or
pop
repz
push
cld
adc
and
or
mov
mov
push
mov
sub
inc
xor
mov
add
in
outsb
mov
push
or
mov
cmpl
push
es
pop
pop
pop
sbb
add
push
inc
sbb
pop
orl
adc
or
lock
shrb
stos
add
adc
xor
test
jbe
clc
mov
add
xor
mov
cmp
iret
mov
add
mov
inc
xchg
lock
sbb
mov
push
or
and
pop
xchg
stos
ret
fcompl
lock
jecxz
mov
jo
movb
mov
cmpsb
das
xor
push
add
lock
and
jmp
mov
and
jl
inc
cmpl
or
mov
fcos
pop
inc
sub
mov
mov
jmp
xorb
rcrl
mov
and
add
mov
mov
loopne
aaa
jl
xor
add
mov
vandnps
jmp
pop
dec
addb
insl
insl
push
push
cmp
xor
jae
dec
adc
pop
or
dec
push
xor
xor
shll
or
out
add
dec
pop
push
push
pop
bound
mov
test
lock
add
inc
sbb
cs
push
jo
pusha
inc
sbb
mov
in
testl
push
lcall
rcll
pop
push
xor
jecxz
mov
call
and
push
int3
fistl
out
pop
lods
jmp
dec
or
inc
fcoms
fisttpll
and
in
mov
gs
mov
pop
idiv
mov
incb
jb
and
push
add
sub
ja
clc
xor
shl
dec
adc
subb
ljmp
rcrl
mov
push
adc
out
rorb
scas
imul
sbb
pop
add
and
pop
adc
xor
out
inc
adc
jb
sub
jnp
loope
push
scas
mov
sbb
insb
fwait
mov
or
rcll
je
jle
mov
test
ja
mov
or
pop
mov
aaa
sbb
clc
dec
lock
jno
aam
clc
test
pop
rclb
sahf
mov
add
repnz
mov
add
cmp
adc
adc
inc
pushf
lock
xor
jle
mov
jg
cmpb
mov
mov
popf
add
xchg
hlt
sbb
xor
int3
push
adc
es
fsubs
gs
xor
sbb
or
call
shll
pop
insl
call
jno
jae
adc
clc
bound
mov
dec
adc
push
jecxz
xchg
lock
and
es
pop
dec
ficoms
dec
in
adc
or
aam
in
xor
push
aam
inc
xchg
in
sbb
xor
add
xor
stos
add
sbb
sub
rclb
notl
add
cs
jg
shrb
mov
jg
shll
xchg
test
int3
jg
add
pop
push
stc
jo
icebp
adc
xchg
xchg
push
jo
and
xchg
call
pop
push
dec
clc
sbb
and
or
and
jecxz
aam
adc
sarb
cmp
gs
lock
incl
xor
cmp
push
idivl
mov
lock
jb
inc
xor
or
aam
push
ljmp
cmp
in
xchg
rorb
orl
sahf
mov
cmc
or
lock
inc
rcll
mov
mov
and
dec
pop
xor
add
xorb
xor
fdivl
or
mov
cmp
inc
add
addl
add
inc
jo
dec
add
mov
fs
dec
dec
lret
shll
dec
dec
pusha
or
jl
loopne
push
nop
mov
or
inc
pop
or
pop
nop
shlb
add
inc
mov
xchg
test
add
add
mov
pop
adc
data16
js
push
or
ret
pusha
mov
xchg
inc
sbb
fwait
xor
add
or
push
std
sub
sub
mov
or
add
daa
fisubs
add
hlt
push
cmp
scas
sti
jle
push
push
add
filds
jmp
or
xor
xor
sub
mov
add
inc
xchg
dec
inc
rorb
mov
push
adc
mov
push
lret
xor
mov
xorb
and
push
mov
mov
pop
and
test
mov
cmp
dec
jg
pop
pop
dec
xchg
and
je
mov
loopne,pt
rorb
sti
adc
call
inc
cld
lret
or
sub
xchg
leave
hlt
cld
ret
cmpb
out
in
add
adcb
subb
or
sbb
call
addb
dec
icebp
and
mov
subl
cli
or
clc
add
aaa
pushf
add
enter
xor
mov
orl
mov
jmp
sub
pop
mov
andb
lcall
push
or
mov
add
lret
jo
lret
cs
ret
sub
mov
mov
shlb
mov
and
les
sub
cmp
cld
jmp
jle
adc
rorb
push
adc
fisttps
pop
rol
or
jl
add
das
rol
sub
jmp
add
shrb
add
adc
xchg
jo
clc
je
incl
sbb
adc
or
sbb
add
shll
rorl
enter
xlat
mov
push
or
and
add
cli
ret
ja
stos
jne
cwtl
repz
mov
rclb
mov
push
add
inc
fidivl
es
push
shlb
out
jp
dec
rorb
sub
les
ret
pop
and
mov
hlt
sub
jg
call
call
or
inc
clc
add
cmp
rolb
jmp
popa
add
jae
ror
sub
iret
orl
push
jl
add
rcll
sar
loop
ret
xor
test
push
and
inc
push
push
jl
ja
jecxz
push
push
cmpl
dec
mov
sar
invd
js
stc
rcrb
add
stc
rcrl
loopne
pop
inc
xchg
shlb
mov
or
dec
mov
incb
cmpsb
add
push
jne
push
and
xlat
rorb
inc
and
cld
cmpsb
add
and
inc
rolb
push
sub
pop
push
dec
inc
mov
fildll
inc
push
rcrl
jb
mov
loop
bound
or
or
ficoml
dec
fisubl
es
mov
mov
incl
sti
int
cmpsb
out
xchg
add
mov
jle
dec
adc
jo
xchg
lock
push
in
aaa
adc
or
call
adc
push
cwtl
shrb
bound
mov
fmuls
rcl
sub
add
in
das
clc
add
pusha
inc
mov
cld
inc
pusha
adc
loopne
sbb
xchg
push
add
dec
mov
mov
dec
mov
and
je
adcl
leave
mov
and
cmp
mov
arpl
or
loope
push
fdivs
cwtl
fwait
in
pusha
pop
mov
mov
or
sbb
pusha
inc
pop
icebp
pushl
mov
loopne
adcl
out
jae
in
cmp
xor
sbb
cld
cmp
pop
add
fs
cmp
or
xchg
shr
sub
in
outsl
adc
push
or
and
push
pusha
mov
testb
push
adc
or
andl
jg
lock
shl
sub
or
or
mov
shlb
add
cwtl
cmp
pushf
xchg
pop
insb
sbb
mov
fildll
or
mov
inc
outsb
push
mov
sub
or
pusha
mov
push
jmp
cltd
cmp
rorb
xor
dec
jb
add
out
sbb
popa
or
movsl
call
rcl
dec
shll
inc
add
or
mov
ljmp
inc
pusha
pop
adc
jecxz
pushf
clc
jmp
scas
cld
inc
push
and
or
sub
mov
fidivrl
or
mov
dec
or
mov
add
push
cmpsb
or
push
push
enter
clc
or
pusha
cmp
into
pusha
inc
xchg
and
pop
dec
add
loop
add
hlt
and
pop
mov
mov
sbb
jne
jecxz
jne
push
sub
sbb
adc
sbb
sbb
je
mov
xlat
adc
add
push
mov
push
test
test
loopne
push
and
and
mov
rcrb
das
loopne
les
xchg
inc
popl
mov
or
fwait
std
scas
decb
push
push
out
pop
pusha
loopne
pusha
push
sar
sbb
dec
push
push
pop
fildl
imul
inc
hlt
popa
mov
and
fwait
loope
addb
add
sbb
push
inc
lea
jge
ljmp
adc
ret
or
popa
and
adc
fbstp
mov
mov
pop
dec
daa
inc
and
mov
inc
push
xchg
inc
and
out
adc
fldl
or
push
push
pushf
orb
fistpll
lods
add
in
loopne
pusha
loop
jmp
out
movl
loope
aaa
insb
dec
cmp
mov
inc
mov
jecxz
sub
icebp
inc
add
add
sub
or
cmpsl
lea
push
mov
add
test
add
subb
leave
inc
ret
mov
ja
push
rol
inc
test
sub
cs
xor
add
dec
sbb
jp
sub
cld
dec
in
mov
mov
jbe
mov
mov
roll
xor
inc
add
ja
dec
sbb
add
lock
jbe
pop
sti
cmp
inc
ljmp
repz
jo
lods
cld
inc
push
fucomip
test
inc
cmp
aaa
jne
xchg
xor
inc
pop
mov
ret
insb
ficomps
or
inc
icebp
add
call
jb
and
mov
sub
cmp
jne
add
pushl
jbe
push
out
jg
mov
mov
inc
cmp
sbb
add
lock
cmp
adc
mov
xor
ficoms
stos
shlb
push
xchg
setne
in
hlt
mov
addb
mov
dec
enter
fildll
adc
mov
mov
inc
inc
add
pop
mov
mov
cmp
ficomps
or
sbb
inc
inc
sub
push
cld
lcall
jmp
mov
lock
mov
xchg
lock
push
mov
mov
je
add
enter
push
xchg
cli
sbb
repz
roll
sti
push
mov
sti
cld
push
push
lcall
sbb
mov
push
pop
add
sbb
jo
push
repz
filds
lcall
sbb
add
cmc
sbb
cld
sbb
inc
mov
outsb
mov
std
add
dec
dec
mov
jbe
mov
mov
jo
jbe
xor
pop
jbe
shrl
sub
dec
sbb
xor
sub
mov
jb
or
dec
add
decl
inc
cmp
cld
dec
sub
xor
icebp
push
sti
or
cwtl
add
adc
pop
dec
xor
stos
adc
call
adc
and
cmp
push
daa
and
add
cmp
fdivrl
test
adc
mov
sub
cmp
xlat
push
inc
dec
aam
push
jo
std
ret
mov
enter
sub
inc
xor
or
mov
adc
aam
pop
add
mov
push
and
mov
cs
call
loope
aad
lock
xor
dec
push
xor
lock
lcall
lock
xchg
mov
repnz
add
xor
jg
lods
mov
icebp
and
mov
xchg
push
mov
lock
xor
clc
or
add
mov
mov
and
movsb
sbb
outsb
sbb
test
adc
push
push
sub
inc
adc
adcb
jbe
nop
adc
sbb
jno
pop
mov
add
iret
icebp
aas
mov
add
cmp
and
mov
lret
addb
mov
test
les
nop
push
xchg
and
cld
sarl
cmp
inc
out
or
pop
movl
mov
clc
xchg
mov
xor
mov
sbb
dec
call
push
clc
stos
je
pop
ljmp
mov
add
add
cmp
insl
jl
pop
mov
inc
adc
or
cmp
add
dec
call
mov
cld
mov
pusha
mov
clc
iret
cmpsb
in
mov
orb
int
or
sub
mov
pushf
ret
sbb
std
push
or
push
out
fmuls
mov
add
jg
add
mov
sarb
in
cs
add
push
sbb
inc
and
pop
test
dec
jo
jmp
push
scas
adc
add
add
hlt
push
push
sti
sbb
dec
mov
pop
cwtl
incb
mov
adc
push
jp
sub
mov
hlt
pop
test
push
sub
push
call
adc
fdivs
repz
aam
cmpb
or
jbe
out
and
mov
xor
jmp
rorb
clc
push
adc
adc
dec
test
or
or
sub
cmc
das
adc
jp
inc
ret
or
sbb
pop
loopne
add
dec
insl
loope
jbe
add
or
push
sub
loope
xor
movsl
pop
mov
scas
push
adc
pushl
mov
xchg
push
or
push
rcll
jmp
sub
ljmp
insb
push
mov
arpl
fsubrp
dec
imul
add
xchg
rcr
push
out
and
adc
enter
jle
aaa
insl
shl
inc
xor
adc
nop
xor
fwait
int
fincstp
mov
clc
mov
in
push
inc
or
adc
cli
loop
rcll
ret
mov
push
xchg
ret
or
lock
jo
inc
andl
sbb
xor
push
out
cmpsb
mov
add
push
add
inc
jecxz
daa
inc
and
jo
and
and
out
mov
clc
add
mov
adc
rcrb
out
add
movsl
mov
inc
imul
and
jbe
mov
push
inc
jecxz
icebp
dec
jb
adcl
jl
adc
js
add
mov
roll
ror
cli
pop
adc
ds
scas
add
jbe
lea
pop
pop
pop
lds
adc
sti
adc
mov
dec
sbb
aaa
inc
mov
jg
jne
or
clc
xor
ds
cmp
cmp
aam
mov
or
add
sti
ja
add
mov
mov
inc
scas
test
jecxz
adc
sub
movsb
loopne
and
les
or
add
bound
push
mov
pop
std
add
cld
add
push
push
cli
add
outsl
dec
rcrl
clc
div
add
test
hlt
repz
push
lock
push
repnz
lock
adc
inc
and
sub
loopew
addr16
or
pop
orb
shr
imul
cmp
dec
loopne
je
test
test
bound
add
xchg
jle
add
addr16
cld
cmpsb
inc
out
mov
add
pop
add
enter
loope
cmpb
jo
cmp
mov
pop
lret
lret
jp
ds
or
popl
das
pop
insb
fisttps
fcmovb
orl
divb
adc
rorb
push
or
add
loop
jbe
fbstp
xchg
enter
enter
jl
in
xchg
test
xor
gs
add
mov
mov
jecxz
push
ret
or
ss
enter
popf
enter
fs
mov
adc
clc
rolb
mov
stos
or
ret
mov
sti
and
add
or
push
rcrb
add
sbb
sub
jo
pop
mov
mov
push
sub
cmp
push
dec
cmpsb
in
push
mov
ficoml
inc
lcall
adc
ljmp
ret
cvtpi2ps
rcr
fucomi
add
ret
test
pusha
add
push
or
mov
xlat
adc
and
mov
imull
loop
shlb
pop
lock
lods
pop
cs
ret
ss
add
rol
ss
ret
sbb
rorl
and
push
add
int3
inc
cld
push
inc
adc
out
fdivs
sbb
data16
jg
or
imull
dec
fiadds
mov
jne
sbb
jb
ds
push
add
push
outsb
pop
rcll
and
cmp
loope
call
cmpb
jmp
sbb
nop
push
and
sti
cmp
popa
cmp
in
adc
movsb
nop
lock
push
xor
add
rorl
jge
jo
loopne
cld
jne
rcrb
loopne
xor
aad
scas
adc
push
shl
fwait
pop
sbb
cs
call
stos
push
push
push
jl
and
cmp
popf
orb
lcall
pop
mov
mov
loop
out
clc
dec
add
jecxz
or
mov
push
addb
xchg
ret
mov
je
sahf
xchg
and
mov
mov
sbb
je
push
data16
jmp
insb
jns
adc
cmp
fdivs
sti
movsb
inc
subb
call
dec
xor
je
js
aam
push
movsl
pop
push
xor
lret
movsb
mov
mov
and
cmp
loopne
repz
adc
jmp
and
mov
lret
cmp
mov
loopne
mov
mov
pusha
add
dec
es
xor
fisttpll
cmp
adc
jo
xorl
icebp
mov
mov
movsb
cmc
inc
add
xor
cmp
es
xor
adc
mov
sti
xor
pop
cmpl
xor
jmp
ret
xchg
push
jl
add
insb
loopne
test
or
add
mov
es
jge
add
and
cli
jg
mov
mov
cmpb
or
sbb
push
cmp
insb
sti
or
and
mov
dec
ret
jp
jmp
jmp
sbb
popa
or
bound
or
jle
and
pop
sbb
inc
mov
fdivrs
add
push
mov
jg
daa
daa
out
pop
cmc
popa
jae
leave
xorb
mov
push
fldt
sbb
sub
outsl
je
insl
xchg
fld
ljmp
popa
add
lcall
sbb
lea
insl
and
and
xchg
je
jb
adc
data16
adc
inc
xor
cmp
lock
rolb
xchg
loopne
jb
xchg
loopne
mov
loope
int3
loop
push
hlt
mulb
iret
js
jne
lea
and
lods
dec
add
xor
add
cltd
mov
sbb
mov
jl
movsb
push
in
loopne
in
add
add
lcall
xchg
mov
subb
mov
mov
and
ret
int3
loope
es
bound
adc
cs
mov
cs
mov
aam
cmpsb
arpl
loopne
inc
leave
hlt
lret
pop
loopne
push
sub
inc
ja
cltd
les
andb
fidivl
adc
push
sbb
jb
fwait
or
pop
bound
pop
inc
fsubl
xchg
push
cmpsl
and
add
inc
mov
dec
mov
push
xorb
push
pushaw
and
pop
or
mov
xor
push
stc
pop
adc
xorl
adc
mov
insl
insb
adc
loopne
leave
pop
and
cmp
addl
icebp
dec
rcrb
lock
or
mov
mov
jecxz
or
push
mov
movsl
mov
push
aaa
adcb
add
add
sbb
sbb
or
xor
loopne
mov
sbb
sbb
lret
adc
lcall
cmp
adc
jbe
mov
imul
adc
das
sbb
inc
ret
or
sete
or
add
xchg
add
add
mov
movsb
add
nop
cmp
push
adc
mov
mov
inc
cmp
and
push
in
cmpsl
dec
mov
push
mov
mov
dec
insb
add
addb
iret
jle
mov
mov
jle
adc
add
inc
je
in
int
adc
dec
cmp
lods
and
inc
adc
adc
or
sbb
jo
add
imul
decb
xchg
pushf
lods
and
leave
je
mov
shrb
xlat
add
push
and
sub
lea
mov
jg
icebp
pop
fiadds
add
add
mov
and
pop
pop
xchg
mov
sbb
add
xorl
fadds
ljmp
mov
add
rolb
dec
add
mov
lret
lock
add
mov
xor
mov
jp
add
out
push
je
dec
lods
shlb
pop
and
dec
cld
inc
shrl
push
sti
mov
shl
test
nop
std
jl
add
mov
sub
mov
aam
js
je
scas
test
scas
mov
push
stc
add
pop
add
push
in
in
outsl
mov
jne
sbbb
adcl
dec
jo
xchg
xchg
dec
cld
cmovnp
add
cs
sbbl
and
mov
and
sarb
sbb
add
pop
call
dec
pop
jb
add
pop
icebp
mov
mov
add
inc
fs
stc
push
fisttpl
ja
ss
push
mov
lock
and
add
adc
push
pop
dec
outsl
xchg
in
cmp
insb
add
inc
jp
sub
adc
call
sbb
add
jae
adc
mull
js
adc
stos
jne
add
adc
cmp
cmc
jg
push
inc
mov
mov
cltd
les
shlb
jo
dec
add
inc
das
xchg
lock
call
adc
cmp
xor
push
mov
xchg
and
jmp
inc
mov
push
add
cli
jg
mov
ret
adc
loopne
lds
mov
mov
pop
or
jg
ret
push
mov
xor
lock
icebp
rorb
or
sbb
js
push
adc
jge
mov
push
mov
push
mov
and
xor
push
adc
push
and
stos
shl
std
decl
dec
les
clc
movsl
xor
hlt
mov
sbbl
or
es
jo
sub
and
adc
or
or
mov
inc
xor
jbe
jecxz
incl
incl
push
dec
adc
scas
orb
sbb
outsl
stos
out
mov
repnz
pop
jmp
lret
out
or
dec
add
dec
les
adc
stos
sti
sub
imul
movsb
nop
icebp
add
iret
sub
int3
mov
mov
outsb
add
adc
scas
add
es
loopne
pop
stos
mov
and
out
mov
push
aam
test
xor
push
lods
jle
xchg
lods
mov
push
icebp
sbb
add
subb
scas
mov
notb
mov
shll
fs
or
out
call
sbb
dec
je
adc
or
ja
outsb
outsl
mov
or
in
adc
pop
xor
cld
push
jne
incl
lea
mov
or
cld
ss
imul
ljmp
mov
mov
inc
mov
cltd
or
ret
aam
rorb
inc
jo
inc
pushw
sub
sub
jno
sbbb
inc
xchg
jg
jnp
int3
inc
add
add
add
sbb
sub
push
out
sbb
xor
xor
ja
push
xor
cmpl
jle
or
in
pop
jg
add
mov
adc
xor
out
add
mov
add
push
pop
jmp
and
je
sbb
decl
mov
mov
xor
sbb
lock
adc
shll
or
fcoms
stos
xchg
sbbb
add
in
out
imull
in
ljmp
or
adc
add
sbb
addl
xor
push
mov
je
jno
adc
rclb
mov
cli
dec
adc
andl
sbb
jb
pop
lcall
hlt
or
and
jo
jg
pop
inc
push
addl
add
mov
push
adc
or
add
mov
mov
mov
adc
and
testb
pop
ret
jnp
add
lret
into
repz
stos
jle
or
and
sub
ja
jl
roll
out
mov
add
push
ss
sub
sbb
andl
pop
cld
xor
xor
sahf
sbb
xor
cmp
jg
sub
push
rcrl
and
in
or
and
and
jae
or
mov
pop
in
xor
mov
xor
sarl
lock
mov
jb
xor
cmp
pop
rorb
and
fldl
mov
mov
fmuls
arpl
push
or
add
mov
into
cmp
cmc
idivb
jp
jl
fwait
jl
add
add
mov
add
dec
in
icebp
xchg
add
loope
scas
cli
or
add
ret
or
divb
jmp
adc
add
mov
cmp
mov
adc
mov
jmp
or
inc
jmp
cmp
jne
lret
mov
mov
mov
add
push
mov
cmpl
dec
bound
mov
in
add
inc
pop
clc
fsubs
sbb
and
push
sub
or
mov
adc
dec
push
loopne
add
add
push
or
cli
imul
js
adc
clc
sub
jle
mov
push
xchg
dec
mov
pop
test
loopne
or
xchg
subl
orl
cmpb
mov
mov
sbb
or
sar
clc
push
or
or
push
cltd
mov
sahf
mov
inc
xor
xchg
in
outsl
cs
jg
push
xchg
inc
shlb
jle
fidivs
bound
cmp
xchg
mov
das
cs
mov
movsl
call
mov
push
pusha
mov
fwait
push
adc
pop
outsb
push
jl
movb
roll
xor
lcall
lret
cmovns
shlb
xchg
adc
pop
pop
xchg
adc
pop
lods
ljmp
adc
adc
mov
and
and
std
cmp
adc
pop
call
add
push
data16
or
inc
pop
mov
ror
xchg
push
or
xor
ret
arpl
add
cmp
pusha
jno
mov
push
add
and
xchg
imul
call
cmp
mov
imul
clc
rclb
push
lds
call
cmp
test
add
test
pop
pop
lock
mov
movsb
rclb
mov
ljmp
xor
inc
repnz
adc
add
pop
rclb
mov
clc
or
lahf
cmpsb
cld
sub
jle
add
jle
lock
mov
fistpl
enter
lods
jmp
rcr
inc
ret
mov
inc
stos
push
add
adc
inc
out
repz
inc
rcrl
and
add
xorb
out
lods
popa
fldl
push
imul
inc
out
pop
lock
xchg
mov
add
arpl
fiaddl
lret
jle
pop
xchg
pop
mov
push
lock
sub
movsb
loope
pop
clc
pop
sbb
adc
add
lcall
loop
or
pusha
add
jmp
fisubrl
mov
andl
inc
sbb
mov
cmpb
nop
popa
or
sbb
aaa
outsb
inc
loopne
cld
mov
les
ljmp
dec
lock
xlat
mov
out
loopne
aam
adcl
data16
add
adc
cmp
icebp
ljmp
push
ja
sbb
mov
xchg
pusha
xchg
and
dec
mov
popa
and
loope
lret
mov
cmp
jmp
loope
adc
into
sbb
adc
lret
mov
roll
or
mov
adc
push
dec
repz
in
out
rcrb
and
mov
mov
arpl
mov
loope
xorb
sub
fdivl
cmp
jbe
loope
inc
in
js
cmp
mov
and
xchg
cwtl
bound
adcb
mov
js
and
daa
xchg
out
outsb
hlt
and
popa
cmp
out
and
jle
jecxz
add
negb
jbe
pop
decl
pop
or
push
inc
pusha
adc
dec
test
and
mov
jmp
add
bound
add
into
mov
mov
xlat
popa
adc
push
adc
pop
lds
and
push
add
xchg
pop
les
ljmp
call
push
cmpsb
arpl
adc
iret
jecxz
adc
cmp
popa
sbb
fs
add
or
sub
bound
push
jno
adc
pop
into
xorl
nop
clc
dec
call
mov
es
dec
mov
cmp
pusha
cmp
mov
popa
sub
lock
loopne
mov
loope
lea
sbb
rcll
into
jb
or
loop
add
loop
mov
loopne
xlat
push
pusha
adcl
mov
outsl
mov
cmpsb
mov
pusha
in
pop
cltd
xor
loop
add
inc
or
mov
dec
je
pusha
pop
and
jg
stos
adc
lea
pusha
data16
ret
sub
shlb
or
inc
inc
cmp
jmp
roll
adc
ljmp
adc
jne
cltd
addl
aad
mov
test
adc
enter
add
inc
ret
movsb
mov
add
cmp
push
inc
jp
cli
in
push
daa
pushf
dec
jl
adc
in
frstor
cwtl
push
dec
out
hlt
scas
addb
add
call
pop
arpl
loope
je
bound
push
addl
jle
in
or
and
adc
jg
add
in
adc
test
adcl
xor
xor
int3
xor
sbb
xchg
xchg
adc
cmp
jo
mov
xor
mov
mov
adc
mov
mov
ljmp
add
xorb
mov
jb
mov
pop
test
lock
dec
or
or
mov
js
inc
mov
add
sar
loopne
shll
std
push
shll
imull
lock
sbb
je
xor
lock
dec
cmp
or
push
mov
jbe
inc
test
mov
pop
pop
jne
clc
or
or
push
outsb
ret
lock
leave
add
sub
lret
inc
les
loopne
cld
icebp
mov
push
inc
into
push
dec
inc
rcll
jle
xor
or
test
fisttpl
add
push
push
add
movsl
push
sbb
and
xchg
fimull
call
or
add
mov
pop
ds
lock
pop
lock
adc
notl
test
pusha
loopne
push
or
out
leave
mov
xor
cmp
sbb
mov
inc
xchg
add
xor
sarb
or
cmp
dec
jns
adc
imul
pusha
jnp
ret
xchg
movb
out
enter
jbe
mov
add
or
filds
jo
std
jge
loopne
jge
mov
mov
push
sub
xor
push
sub
xchg
jnp
pop
adc
pop
pushl
xor
or
hlt
fbld
jl
sub
jl
mov
add
dec
rclb
fmull
and
add
daa
jp
adc
call
and
mov
add
repnz
cmp
and
or
mov
add
jo
sahf
pusha
addb
xor
mov
push
push
call
push
pop
push
in
inc
es
incl
add
adc
je
subb
jno
add
push
lock
push
and
std
mov
shlb
adc
lock
pushf
adc
pop
cmp
mov
jno
mov
push
xlat
sbb
stos
incb
fs
clc
and
ret
push
icebp
mov
push
js
or
lahf
add
icebp
pusha
xor
inc
mov
shrl
and
lock
adc
adc
decl
dec
aaa
nop
lret
or
imul
sbb
jg
or
jb
cmp
jecxz
sbb
mov
sbb
sbbb
inc
clc
mov
cmp
fwait
dec
xchg
lock
pop
dec
out
mov
sub
lea
jno
adcb
mov
mov
adc
enter
inc
lds
mov
add
mov
cmp
mov
sarl
xor
mov
imul
push
pop
push
nop
mov
jg
cmp
cmp
add
or
filds
or
jl
addl
jge
jb
dec
inc
adc
mov
lock
mov
add
pop
js
pop
add
adc
add
jb
clc
inc
insb
xchg
add
push
js
xchg
push
ljmp
pop
add
lock
sub
mov
repnz
mov
out
and
jae
hlt
push
sbb
mov
cmp
xor
mov
push
cld
outsb
dec
xor
sbbb
negb
inc
mov
mov
andl
cli
mov
out
mov
push
or
insb
mov
mov
ljmp
or
js
lock
push
clc
adc
jnp
jno
jle
ds
subb
inc
xor
sbb
lea
sbbb
and
mov
cmp
cmp
mov
movsb
xor
xor
mov
sbbl
js
cmc
shr
jl
xor
jmp
mov
mov
jmp
jb
dec
add
mov
pop
push
ja
inc
adc
push
or
mov
cmp
orl
dec
jo
addl
add
inc
push
pop
add
dec
xor
cmp
scas
mov
sub
icebp
jge
lea
adc
shll
ss
pop
mov
or
call
adc
xor
incl
or
xchg
inc
mov
sbb
ja
add
ret
inc
enter
shl
ja
repz
leave
xor
mov
jmp
mov
je
daa
jno
jb
xor
data16
sub
jno
inc
push
inc
scas
inc
push
call
pop
pusha
les
mov
push
lock
ljmp
aas
cmc
push
mov
adc
mov
cmp
jg
and
subb
mov
mov
ja
or
test
shlb
addr16
cmp
sbb
xchg
mov
mov
cwtl
dec
hlt
fidivl
xchg
sbb
fprem
and
xor
cmp
clc
rcl
ljmp
add
rcr
pop
and
popf
xor
cld
push
jnp
mov
xchg
mov
cmp
ds
xchg
add
sbb
stos
lock
xor
movsb
loopne
add
dec
and
add
mov
push
pop
add
inc
xchg
add
idivb
xchg
pop
add
add
insl
dec
jecxz
xor
pop
cmc
int
push
sbb
addr16
and
push
push
push
arpl
add
inc
inc
add
cmpsl
mov
pop
rorb
push
or
mov
fwait
push
add
out
mov
push
add
lcall
aam
test
jmp
test
cmp
js
test
cmp
dec
dec
push
inc
mov
dec
inc
inc
add
std
or
mov
xor
push
sub
dec
and
push
sub
sbb
sbbb
stos
push
sbb
insb
push
sub
or
add
mov
sbb
sbb
outsl
mov
adc
push
sub
icebp
mov
rorl
add
mov
xchg
rcl
sbb
movsb
cld
push
pusha
sub
les
adc
sbb
dec
test
hlt
dec
mov
clc
or
adc
or
xchg
push
cmp
daa
out
mov
adcb
add
xorl
push
bound
mov
mov
addl
into
addl
jg
xchg
rolb
and
adc
lret
mov
mov
dec
mov
inc
cwtl
jmp
jmp
cli
insb
into
add
ljmp
jmp
stos
inc
pop
pop
pop
cmpsl
add
xchg
repnz
lret
cmpb
jo
push
fs
and
mov
clc
sbb
xchg
mov
aad
shr
movsb
jne
mov
int
loop
mov
in
xchg
or
jnp
push
inc
mov
rcll
adc
add
add
pop
shlb
out
out
mov
test
and
aas
ret
decl
xorl
rcrl
dec
sub
fildl
cld
lods
push
ret
sbb
cmp
ja
or
outsl
mov
or
fdivr
add
subl
test
test
sub
div
cmp
push
sub
pop
mov
inc
shrb
cwtl
aad
or
lds
in
inc
adc
es
call
les
ret
imul
push
pop
dec
sub
jl
mov
pop
pop
or
inc
mov
mov
movb
lea
push
cld
cmpsl
sub
repz
mov
fcoml
add
add
cmp
or
push
roll
jmp
sbb
inc
clc
pop
test
push
inc
jne
lds
mov
ret
inc
add
jmp
sub
pop
int3
pop
or
jg
sbb
pop
out
sbb
xor
fld
xchg
cmp
shrl
rorb
lret
cwtl
jb
jne
js
mov
mov
clc
xchg
repz
mov
xor
jbe,pt
sub
mov
sub
jo
mov
ja
mov
in
cmp
jbe
add
push
inc
aad
enter
fldt
push
rcr
and
pop
or
inc
push
rolb
or
dec
rorl
adc
test
and
aas
or
mov
dec
imul
cmp
and
and
xchg
adc
std
in
cmpsb
loop
out
fcomps
nop
inc
rol
addl
ja
ja
xchg
ds
cli
repz
jl
mov
loope
and
scas
pand
movd
xor
fsubrl
andl
in
test
out
ss
mov
out
stos
pop
fistl
hlt
ljmp
hlt
xchg
sarb
rol
or
and
lods
mov
nop
pop
push
sub
ror
push
cli
shl
enter
sub
fsubr
xor
add
rolb
and
in
in
mov
xorb
ljmp
lock
mov
divb
and
hlt
jg
mov
hlt
dec
int3
and
sub
rcrb
call
add
mov
in
mov
int
sub
rcr
push
test
pop
je,pt
repnz
sub
loop
addb
cs
push
and
ss
cmp
bound
and
sub
pop
or
jne
andl
mov
loopne
push
sbb
std
add
rol
mov
push
popa
es
inc
and
adc
orb
and
sbb
je
int3
bound
pop
adc
adc
or
fwait
test
call
popa
xor
inc
ret
and
pop
icebp
arpl
popa
inc
cmp
adc
sub
loop
pop
dec
inc
cmp
jbe
in
dec
sub
push
repz
mov
inc
loopne
sub
add
gs
cs
add
mov
push
or
lret
bound
and
push
and
lock
mov
sub
adc
les
jb
dec
sarb
and
loope
sbb
in
pushw
sub
jb
hlt
out
orb
add
loopne
pop
out
test
ss
dec
out
sbb
adc
push
cmp
mov
mov
xor
adc
lea
sbb
mov
insb
js
js
mov
push
lret
aad
lods
shlb
cmp
sub
mov
repz
scas
adc
adc
adc
add
pusha
sbb
sbb
in
jne
xor
add
mov
adc
js
rcl
je
add
fidivs
aam
int3
hlt
push
pop
sbb
adc
stos
or
mov
sbb
pusha
ds
fbstp
and
pop
ja
ret
pusha
mov
jmp
push
push
cli
repnz
mull
xchg
lods
mov
mov
pop
inc
xchg
pop
or
icebp
jl
adc
add
cmovs
shll
cwtl
jo
add
adc
mov
jbe
test
lods
insl
mov
add
mov
sbb
or
jp
pop
decl
mov
je
ds
lea
inc
cltd
incl
test
or
dec
xor
sub
lods
inc
xchg
fcompl
outsb
pop
loop
test
and
loop
jge
inc
cld
je
sub
ret
jmp
pop
aam
sbb
adc
inc
pusha
sbb
in
mov
decb
sti
movl
push
dec
push
mov
jbe
data16
subb
andb
mov
cmp
mov
xchg
mov
or
das
mov
adc
add
sub
push
js
inc
in
or
dec
enter
popa
daa
loopne
adc
add
sbb
pop
xor
bound
pusha
mov
push
mov
jns
mov
or
je
and
mov
add
pop
test
pusha
add
or
test
jb
or
or
stos
in
jecxz
test
sub
cmp
sbb
lods
jmp
or
add
fwait
dec
pop
xor
inc
data16
jb
push
mov
aam
xor
sbb
inc
pop
fs
aam
mov
mov
aaa
jmp
or
faddl
test
mov
ja
stos
test
adc
cmpb
loopne
loopne
xchg
add
add
cmp
in
pusha
xor
xorb
push
adc
fdivrs
adc
add
and
push
js
ljmp
push
je
mov
clc
adc
pop
lea
jge
cmp
cwtl
dec
xor
cld
inc
outsl
jg
add
jmp
push
add
xchg
push
icebp
add
sbb
repz
mov
push
stos
fiadds
sbb
roll
adc
loope
push
mov
enter
push
enter
dec
out
lret
sbb
lcall
jbe
ja
adc
inc
add
push
push
adc
xlat
sub
pop
cld
lahf
jo
jbe
adc
lret
je
int3
jmp
adc
shrl
xchg
lea
xor
lods
adc
incl
sub
push
push
mov
pop
lods
dec
loop
inc
call
xchg
ret
decl
adc
dec
cmp
mov
add
out
stos
xchg
or
add
shrb
std
mov
add
int
mov
jo
fadd
push
push
jle
jnp
xor
cmp
pop
or
or
dec
sarl
stos
cld
cmp
jge
insb
cmc
or
sarb
adc
push
xchg
mov
sub
and
inc
sbb
lock
or
ffree
das
add
jl
or
out
test
xor
jae
rclb
sub
pop
push
or
data16
hlt
add
xor
jb
mov
loope
mov
add
xlat
mov
mov
or
ret
lea
or
mov
push
add
jae
rclb
pop
adc
push
mov
push
idiv
mov
test
ss
xor
stc
ret
lret
jbe
lods
dec
xchg
push
jbe
inc
pop
rclb
and
ds
lock
mov
into
push
sbb
orps
nop
int3
es
push
push
ret
inc
daa
into
adc
pop
or
jo
inc
clc
ja
test
ljmp
decl
call
or
les
test
je
nop
lock
hlt
or
mov
adc
sbb
fdivs
nop
adc
into
movsb
push
call
ljmp
ss
mov
int3
call
aaa
ret
mov
ret
nop
icebp
add
sbb
sbb
adc
test
pusha
inc
and
call
pop
mov
mov
mov
add
add
jmp
ljmp
lods
leave
sub
push
or
xchg
cld
shll
or
push
xor
mov
push
add
pop
adc
add
inc
dec
bound
or
aas
sub
inc
hlt
mov
cmp
dec
and
jle
push
shll
test
inc
xor
sub
arpl
inc
test
add
icebp
xor
mov
and
ret
pop
lock
xor
pop
loop
push
hlt
jg
pop
xor
shll
clc
add
jno
push
daa
mov
add
fadds
rorl
int3
js
and
add
in
insl
fistl
push
es
sarl
scas
push
dec
and
jns
sbb
push
xor
adc
sub
dec
dec
xchg
xlat
sbb
mov
dec
lock
mov
sahf
lock
fistps
fwait
adc
call
hlt
add
jmp
in
in
mov
add
sahf
ss
lods
imul
push
push
push
add
pushf
sbb
test
cmp
mov
push
mov
mov
push
adc
rcr
outsb
xor
mov
out
mov
mov
clc
and
insl
cs
sub
mov
imul
add
fadds
in
pop
fistpl
rolb
sbb
imul
mov
sub
lock
stos
mov
or
data16
xor
mov
or
test
inc
pop
adc
cli
or
or
push
std
or
add
or
rolb
test
xor
sub
pusha
jo
sub
sbb
adc
dec
shrl
add
add
sti
setae
lock
push
lock
aam
lahf
shrl
scas
ret
sbb
sub
mov
int3
add
das
sarb
sub
push
icebp
mov
mov
sub
emms
stos
movsb
push
xchg
cwtl
sbb
mov
test
jno
pop
inc
out
add
nop
loope
loope
dec
into
dec
inc
push
icebp
mov
jo
out
xor
dec
xor
stc
orb
sub
add
mov
or
cld
push
ljmp
xchg
pop
jl
pusha
inc
inc
push
dec
cmp
loopne
pop
add
or
add
out
adc
mov
push
xor
std
push
std
add
shlb
test
mov
andb
push
xchg
push
insl
pop
dec
in
pop
adc
adc
shr
xchg
push
fistps
std
ret
aad
sub
daa
adc
mov
sbb
push
sbb
or
sub
xor
xor
xchg
hlt
or
in
mov
pop
pop
jne
add
enter
jae
outsl
stos
jae
sbb
mov
jbe
sub
mov
xchg
scas
pop
les
stos
clc
inc
lods
cmc
mov
lds
roll
mov
mov
xor
xchg
lock
or
cmpsb
pop
rorl
inc
mov
stos
cmp
pop
sub
sbb
ss
fistpl
or
or
add
adc
xchg
hlt
fnsave
push
in
add
in
sub
mov
popf
cmpsb
cs
jl
ds
sbb
imul
repz
add
add
mov
inc
jne
dec
lods
test
movsb
push
mov
pop
push
push
add
pushf
push
testb
mov
fldenv
dec
loop
fisubs
fiaddl
add
xlat
xor
cmp
pop
add
push
dec
sbb
jl
mov
add
inc
cmp
addb
xor
dec
jnp
xor
sub
and
imul
lcall
or
shll
loopne
fdivs
shll
ror
enter
dec
rol
mov
cmpsb
imul
mov
mov
pushf
sub
cld
jns
scas
xchg
sbb
add
jo
add
push
add
adc
mov
adcb
or
add
cwtl
orb
pop
lods
mov
inc
mov
adc
pop
rcr
push
je
and
sbb
sbb
adc
insb
dec
imul
add
mov
cld
or
aas
shll
add
in
scas
sub
dec
dec
lods
std
or
mov
sub
and
cwtl
shll
fistpl
sub
pop
lods
adc
cmp
or
push
pushf
sbbb
inc
shlb
pop
add
fldt
je
jbe
push
insb
add
add
imul
dec
adc
xor
fldcw
xor
push
or
cmp
xor
adc
jnp
jge
sub
cwtl
pusha
roll
or
int
es
sbb
fcom
rorb
sti
ror
imul
push
mov
xor
mov
test
addb
push
mov
add
sbb
loopne
loopne
lea
rol
sbb
sbb
addb
mov
push
xor
loop
sbb
pushf
or
sub
lods
mov
loopne
and
sbb
mov
add
sbb
push
bound
or
call
sbb
add
imul
shr
in
ss
add
fnstenv
xor
imul
sbb
push
adc
mov
sti
and
push
loopne
popf
xchg
imul
xchg
add
mov
test
imul
ret
dec
sarl
sbb
cmp
mov
rcl
mov
mov
dec
sarl
jb
push
imul
sbb
add
dec
imul
jae
xor
add
sub
dec
and
push
add
sahf
push
dec
push
fidivs
pusha
cs
add
out
imul
out
lcall
test
ds
pop
call
cmp
inc
add
adc
push
ljmp
adc
sbb
inc
sbb
cmp
mulb
lea
lea
push
shll
cmpsl
and
xor
sahf
cmpsb
stc
cmp
add
xor
outsb
push
dec
sarl
push
push
dec
test
cmp
pop
imul
xor
ss
shll
and
add
xor
push
adc
fs
and
add
add
cli
cs
js
cmpps
sbb
loop
es
sub
pop
repz
xchg
add
mov
mov
scas
sbb
xor
sahf
lcall
mov
jo
push
mov
dec
movsl
mov
inc
movsl
lock
pop
add
and
pop
loopne
cmpsl
movsb
push
cmpsl
loopne
add
movsb
push
cmpsl
movsb
push
adc
pop
mov
mov
add
mov
sarl
sbb
mov
adc
mov
adc
sbb
mov
push
adc
inc
sbb
inc
inc
stos
dec
sbb
lahf
add
loopne
jb
and
push
test
js
xchg
or
add
mov
cmc
int
add
sbb
loope
int
or
fcmove
sbb
lds
mov
mov
movsl
pop
push
mov
nop
movb
je
insb
sbb
call
xor
data16
inc
pushf
sub
mov
pop
je
and
add
jl
mov
adc
mov
xor
pop
movsl
pop
add
test
fsubs
sbb
mov
cli
outsl
stos
lods
ds
pushl
shl
push
fildl
lds
sbb
jo
das
or
or
sbb
lcall
or
inc
les
lods
ret
jl
fistl
fldt
ret
mov
cmp
aaa
ljmp
ret
jl
push
sub
andl
jl
rorb
add
and
jbe
adc
pushl
cmc
add
pusha
stos
mov
mov
ret
mov
cs
adc
push
std
or
mov
add
cld
and
pop
incl
mov
inc
jecxz
call
fdivrl
push
mov
sbb
nop
add
jne
call
fldcw
pop
ret
pop
add
add
sbb
pop
xor
jg
and
and
add
pop
push
cld
ret
cmp
icebp
xchg
or
add
fcmovu
cs
mov
add
cmp
xorb
stos
cmpsb
add
lods
mov
inc
mov
xor
rolb
aas
sub
or
mov
mov
loope
fbstp
and
pop
cmp
and
pop
sub
cld
in
lcall
and
add
and
add
push
and
call
xchg
jo
adc
adc
mov
xchg
mov
xor
add
mov
adc
add
or
fs
mov
cmpsb
or
jle
pushf
pop
incb
loopne
push
or
test
mov
mov
out
je
xor
stc
adc
cs
adc
adc
push
push
cmp
or
xor
cltd
xor
xchg
xor
mov
add
adc
mov
stos
call
repnz
call
or
mov
add
jno
lods
sbb
adc
je
ljmp
push
loop
clc
pop
or
stc
add
and
dec
sbb
and
xchg
lods
mov
push
test
xorl
cmpb
loop
icebp
or
jo
jl
push
cli
mov
jno
cmp
pop
push
out
pop
pusha
cmpb
cltd
mov
lock
cmpb
inc
mov
and
jo
icebp
out
and
jnp
jo
mov
orl
imul
add
fisubl
jno
call
test
ljmp
or
mul
add
dec
icebp
addb
and
mov
mov
out
sbb
decb
add
scas
add
in
xchg
push
divl
call
mov
test
add
out
push
sbb
xchg
or
pop
push
xchg
cmpsb
pop
xor
es
sahf
xchg
loopne
xchg
orb
mov
xor
or
add
add
addb
push
in
outsl
mov
arpl
cmp
hlt
in
ret
push
aaa
out
call
cli
sbb
add
pop
lock
xchg
inc
in
or
add
mov
insb
fimull
push
add
dec
icebp
movsb
xchg
sub
in
in
push
and
in
add
push
add
shrd
orb
push
inc
enter
jl
addb
sbbb
jo
pop
cli
sbbl
xor
andb
or
jne
sub
test
add
icebp
bound
cmpsb
adc
push
pushf
test
cli
xorb
add
call
cmc
push
inc
adcb
xor
jg
in
add
push
lret
adcl
or
sti
or
or
in
cmpsb
add
call
out
aad
jg
js
dec
orb
fs
jle
std
push
addb
les
sti
sub
bound
sub
clc
jle
outsb
ja
add
pop
mov
push
xchg
les
rcll
mov
rcrb
or
dec
xchg
cmpsb
test
rorb
pop
cmp
clc
pop
or
shlb
dec
je
call
add
push
jne
pushl
pop
cli
rcll
pop
add
shlb
sbb
xchg
cmp
ret
cmpsb
imul
jp
stos
rorl
aad
push
or
ret
lods
xor
push
mov
or
out
mov
sbb
pop
fwait
shrb
or
mov
test
mov
cmp
std
mov
in
xchg
mov
fs
push
call
ret
mov
push
push
push
les
sarl
call
inc
jecxz
test
sbb
sbb
fldl
sub
fcoml
rcrl
pop
shll
addr16
or
jle
loopne
push
push
clc
roll
or
call
inc
pop
test
aam
pop
lock
outsb
sub
sub
rol
fistps
and
pop
loope
ret
and
push
ljmp
and
loopne
inc
sti
jg
popa
and
adc
adc
test
pop
mov
paddw
mov
call
sbb
pop
adc
jmp
sbb
or
bound
loopne
add
and
add
add
push
jne
pop
pop
and
mov
loope
or
jne
call
clc
jg
call
adc
adc
cmc
pusha
inc
push
flds
pop
jg
push
xor
rorb
jecxz
jne
scas
pop
in
ljmp
lock
clc
mov
jne
pop
mov
push
loope
adc
stos
movsb
lcall
lods
test
pusha
dec
popa
sub
pusha
sub
or
push
nop
inc
roll
lods
popa
push
cwtl
dec
sub
push
fwait
movsb
sbb
adc
pusha
and
pop
mov
ret
orl
imul
ret
cmp
cld
ljmp
jge
or
loopne
xor
shl
mov
and
pop
pop
div
push
test
pop
je
rcrl
adc
add
pop
mov
add
xchg
scas
xor
aad
mov
movsb
inc
cmp
je
push
lock
adc
cmp
je
cmp
std
imul
mov
xchg
cs
mov
rorb
sub
pushl
addr16
loopne
pusha
mov
je
ret
test
adc
je
ret
cmpsb
je
xchg
cs
stos
je
adc
je
int
fwait
and
sbb
mov
adc
outsb
outsl
insl
je
ret
outsb
je
outsl
je
ret
fiadds
adc
outsb
and
sbb
addl
adc
lock
mov
loopne
dec
push
push
lea
jnp
decl
ret
mov
and
pusha
pop
add
sub
clc
cmp
test
cmp
and
and
mov
hlt
loopne
jb
test
cmp
fs
aam
mov
add
jb
test
lods
loope
ds
jbe
mov
mov
iret
rorb
pusha
pop
jmp
mov
xor
xor
bound
push
imul
or
cmp
push
repnz
adc
arpl
or
mov
scas
cld
mov
sbb
mov
cmp
xchg
add
inc
inc
insb
outsl
scas
push
ret
loopne
cmp
pop
pusha
inc
mov
xor
ret
inc
popa
cmp
popa
add
push
call
pusha
adc
fucom
sub
ja
roll
dec
sbb
fdivrs
inc
mov
call
outsb
jb
loopne
sarb
shr
roll
jne
in
fistl
push
or
push
pusha
pop
ret
and
cmp
mov
add
adc
sbb
repnz
inc
incl
jo
sbbb
fisttpl
repnz
jg
in
sub
jo
stc
je
pop
addb
in
call
xor
fisubrl
loop
push
adc
stc
test
push
push
push
or
push
mov
mov
cli
xor
and
ret
xchg
cmp
inc
icebp
mov
jnp
lcall
test
xor
xor
and
sub
ret
hlt
out
cli
xor
ljmp
icebp
pusha
out
mov
and
fisttps
add
add
adc
jo
inc
cmp
adc
jbe
mov
lods
sahf
loope
jle
mov
lret
jl
imul
cmc
outsl
test
inc
mov
mov
mov
mov
es
pop
push
icebp
or
and
stc
call
clc
aaa
or
pop
sbb
xor
xor
push
and
pop
inc
cmp
repz
mov
adc
xor
clc
pop
and
lock
sub
jge
adc
das
mov
xor
push
inc
call
scas
or
cmp
int3
pusha
int3
int3
lret
dec
jp
mov
addr16
in
jg
or
adc
pop
dec
aaa
add
pop
sbb
xor
fistpl
sub
pusha
je
cmc
int
cld
xchg
sub
adc
cmp
jecxz
arpl
fisubrl
daa
adc
or
push
jg
daa
sbb
inc
or
add
add
or
push
push
arpl
dec
ja
fs
push
je
adc
push
xor
adc
addr16
stos
js
mov
mov
lcall
xor
mov
or
add
addl
popa
add
xchg
and
or
sub
dec
gs
sbb
sbb
hlt
add
push
jl
leave
cs
imul
sbb
add
addr16
mov
mov
insb
mov
pop
lock
inc
or
push
or
ja
push
std
jo
xor
jne
adc
mov
mov
outsb
xchg
adc
imul
in
add
cmp
sub
icebp
add
push
negl
mov
jmp
push
lock
xchg
aas
stos
insl
aaa
cmp
cmp
and
lcall
movb
flds
mov
inc
inc
cmp
jo
mov
jo
icebp
xchg
mov
std
push
lock
dec
mov
xchg
sbb
jae
das
dec
cmp
jnp
ja
shll
lret
fucomip
and
lock
xchg
sbb
mov
out
xor
jae
xchg
mov
test
sbb
popf
stc
repnz
or
adc
sbb
sbb
cmpsb
xchg
scas
push
fmull
mov
lret
out
xor
sahf
xor
iret
fnsave
outsl
out
jnp
movsl
dec
xchg
push
jno
mov
inc
repz
and
push
cs
sbb
push
nop
icebp
sbb
scas
adc
xor
clc
ret
mov
mov
lock
and
adc
pop
cld
stc
cli
rorl
dec
xor
std
mov
mov
lock
sbb
leave
popa
sbb
loope
clc
push
stc
cmp
lcall
pop
push
ret
inc
push
imul
jno
mov
mov
mov
mov
lods
js
in
adc
pop
sbb
jbe
test
mov
std
icebp
sbbl
sbb
popa
jo
push
jns
orl
fstpl
jl
xchg
popa
stos
fnstsw
fisubs
pop
jo
sub
pop
and
fstpl
jno
test
nop
fstl
adc
and
mov
and
xor
test
stos
daa
pop
ss
xor
add
icebp
push
add
inc
mov
or
push
shll
pop
shrb
outsl
sbb
int
or
add
cld
mov
pop
push
sub
mov
dec
mov
lods
adc
mov
add
dec
cltd
mov
aaa
add
push
aaa
sbb
add
sub
dec
sti
lods
loopne
pop
dec
jnp
pop
add
idivl
or
outsb
add
sahf
lret
sahf
dec
jno
mov
lods
imul
push
add
js
adcb
mov
dec
mov
sub
mov
shll
cmc
jb
outsl
incl
or
addb
push
push
cli
addb
add
or
sub
adc
adc
out
orb
xor
xor
incb
add
dec
cmp
lods
sub
imul
sbb
insl
shll
and
xchg
push
fildl
or
adc
mov
pop
add
jae
push
or
dec
stos
mov
ja
inc
mov
insl
xchg
popa
add
mov
test
mov
mov
push
xchg
gs
cltd
inc
imul
lcall
popa
push
ds
inc
xchg
insb
dec
inc
adc
inc
dec
add
push
xchg
dec
pop
cld
push
sarb
imul
adc
sub
dec
bound
add
mov
call
sarb
push
les
or
pop
push
scas
call
xchg
arpl
lcall
mov
insb
push
dec
or
sub
push
dec
add
inc
jb
sbb
add
gs
sub
shll
push
push
dec
lock
rcrl
ljmp
sub
dec
arpl
outsl
xchg
mov
outsb
pop
popa
jbe
xor
rorb
aaa
lret
inc
mov
rcll
sub
into
add
pop
test
jg
mov
adc
rcrb
or
cltd
mov
sbb
arpl
adc
icebp
or
fisttps
add
add
fs
mov
outsl
daa
or
xchg
je
inc
xchg
mov
movb
nop
push
imul
push
mov
inc
sbb
sti
mov
ss
adc
adc
or
ret
not
push
cmp
dec
sbb
out
aaa
inc
adc
loop
bound
hlt
mov
insb
add
imul
xor
push
cmp
inc
clc
mov
bound
or
add
test
or
pop
stos
push
addl
push
and
outsl
push
lea
je
je
and
jp
aad
ret
rcrb
push
and
out
dec
pushl
mov
jle
test
inc
insb
mov
das
cmpsb
popa
inc
or
inc
mov
gs
std
shll
lret
icebp
lds
bound
nop
push
adc
push
or
cmp
bound
dec
xchg
pop
out
js
push
mov
and
mov
cmp
inc
jne
clc
inc
mov
mov
adc
ret
mov
dec
shrb
jb
loop
fildll
add
adc
je
lea
mov
gs
dec
pop
rorl
gs
mov
or
push
lods
inc
add
arpl
mov
jle
xchg
jae
mov
loopne
shll
pop
mov
and
int
and
jbe
outsw
lea
nop
add
or
add
inc
dec
fcomps
push
add
pusha
or
mov
push
sbb
mov
pop
data16
pop
lock
mov
add
cwtl
pusha
adc
add
les
push
xchg
xchg
pusha
es
xchg
sti
aaa
les
imul
push
imul
lock
add
adc
jb
mov
pusha
sub
and
pop
loopne
nop
insl
jo
sbb
sub
popa
pop
dec
nop
mov
jne
inc
mov
add
in
adc
outsb
adc
data16
push
adc
jne
arpl
dec
push
add
gs
pop
add
jb
sbb
mov
push
pusha
inc
dec
lods
mov
loope
in
test
cmp
sub
lock
gs
mov
mov
dec
popf
xchg
push
data16
popa
dec
std
ja
mov
sbb
das
inc
xchg
add
enter
or
loop
mov
jb
jg
cmp
sbb
loopne
sahf
xor
xor
gs
outsb
jns
inc
loop
cmpsb
mov
es
bound
negb
push
gs
inc
push
or
and
sbb
jo
mov
inc
shll
add
xchg
xor
dec
test
inc
inc
insb
xchg
sbb
jne
decl
sbb
mov
mov
in
dec
lcall
and
or
add
add
mov
push
xchg
int
arpl
pop
mov
enter
push
or
aaa
mov
cmpb
jns
and
xchg
outsl
push
loope
stos
imul
cld
cwtl
popa
aaa
push
add
dec
add
adc
and
or
fiadds
or
insl
sbb
loope
inc
loop
test
test
sub
push
dec
mov
test
outsb
fidivl
push
jae
push
push
xor
pusha
and
outsb
inc
mov
mov
decl
mov
popa
xor
pop
jne
lea
jecxz
dec
loopne
into
mov
sbb
inc
xchg
xor
jb
loopne
pusha
scas
insb
mov
jecxz
add
push
add
adc
lcall
test
bound
js
jb
add
popa
sbb
sub
xor
loop
inc
mov
xchg
and
in
adc
adc
inc
pusha
mov
and
mov
subb
mov
mov
xor
and
add
dec
adc
jne
dec
inc
outsb
ljmpw
and
cwtl
pop
mov
push
insb
lock
cmp
add
pusha
push
out
mov
xor
adcb
jbe
jmp
mov
addb
jo
xor
clc
pop
fucomip
imul
inc
xchg
jb
jae
cmp
mov
xor
dec
adc
sub
in
cmp
mov
test
jo
xor
cbtw
mov
sbb
mov
pusha
test
dec
xchg
mov
pop
inc
or
es
push
dec
mov
mov
xor
les
xor
imul
dec
xor
test
fcomip
nop
insb
jne
cmpsb
dec
popa
insl
lcall
outsb
pop
add
dec
push
adc
imul
or
cld
jg
stos
cmp
inc
js
adc
repnz
jno
cmp
or
mov
insb
decl
xorb
pop
mov
repnz
jg
push
inc
xor
push
repnz
push
cmc
push
rclb
jp
mov
push
mov
pushl
mov
inc
cld
jo
sbb
mov
add
push
xor
jae
sahf
xor
jle
and
loopne
add
mov
jae
orb
testb
icebp
or
push
or
xchg
lock
in
cmp
mov
shlb
adc
adcb
mov
jno
mov
mov
xor
nop
int3
lds
imul
mov
cmp
mov
call
push
dec
mov
shll
es
pusha
and
add
enter
or
outsl
stos
outsb
imul
mov
inc
xchg
push
bound
lea
mov
pop
push
gs
push
xor
popf
and
test
add
adc
insb
xor
pop
xchg
pusha
mov
inc
and
push
mov
aad
hlt
mov
pop
mov
cmpsb
ja
jp
dec
add
aam
imul
insb
popa
add
mov
cs
scas
xchg
mov
mov
push
add
movsb
jno
cwtl
mov
push
cld
push
and
outsl
jae
arpl
add
fwait
outsl
push
ja
xor
ret
insb
xor
add
and
push
xor
icebp
sub
loopne
es
jnp
xor
add
push
jo
cli
xor
cwtl
or
add
cld
mov
add
mov
xor
test
add
pop
pop
add
push
push
dec
loopne
mov
data16
dec
inc
dec
mov
fwait
jno
jg
lcall
jo
fcomip
or
inc
mov
push
nop
lock
or
gs
jg
cmpsb
scas
insb
inc
jae
inc
mov
mov
mov
and
divb
sahf
add
and
add
gs
popa
aam
pop
mov
lock
or
nop
push
jb
jl
adc
and
divl
mov
xchg
push
fs
push
xor
incl
pop
xchg
push
popa
imul
mov
dec
outsb
jne
inc
add
inc
je
cwtl
imul
or
sbb
adc
push
addr16
test
addb
call
inc
add
pop
lock
sbb
or
jnp
inc
sbb
or
and
push
jo
xor
push
es
xlat
xchg
pusha
inc
cmpsb
jbe
sbb
test
ds
adc
sbb
dec
jae
stos
push
xchg
pushl
xor
je
repnz
mov
fs
inc
xor
mov
mov
addb
mov
inc
repnz
lock
push
outsl
adc
enter
out
mov
jo
jae
lods
or
shrb
sub
inc
insb
dec
jb
xor
and
mov
jge
sarb
sub
xchg
add
loop
jp
repz
dec
ret
imul
bound
xchg
fs
xor
sbb
icebp
pop
jne
add
mov
push
xchg
pusha
outsl
mov
cli
xchg
imul
add
lock
sub
push
sub
insl
push
outsl
cmp
add
jno
dec
loopne
or
test
sbb
xor
push
ret
add
mov
cmp
push
xor
jp
test
stos
ja
pushl
je
push
add
cwtl
push
cli
imul
je
inc
jo
mov
push
mov
popa
sub
adc
insl
movsb
xchg
or
add
xor
lock
jo
mov
lret
sub
jae
pop
lock
xor
push
jo
jle
jbe
or
pop
jno
jae
xor
sti
mov
jmp
inc
xlat
inc
rorb
popa
jae
adc
scas
mov
push
xchg
icebp
or
add
fs
mov
ljmp
jb
lds
fiaddl
xor
hlt
aaa
mov
pushf
mov
mov
sbb
push
jo
mov
test
into
and
inc
ljmp
outsb
mov
in
and
or
mov
jo
jo
pusha
outsl
mov
aaa
add
test
adc
sbb
imul
nop
jne
add
pop
sub
cwtl
add
jo
test
inc
xchg
add
mov
lock
mov
jns
adc
data16
jb
jae
dec
dec
xor
push
fsubrs
mov
inc
xor
push
rcr
jle
add
lcall
cmp
js
xor
fs
dec
add
mov
ret
add
jg
or
add
push
mov
cmpsb
outsl
pop
mov
pop
cld
in
fldenv
jns
mov
add
adc
xchg
dec
push
pushf
add
push
gs
imul
jno
inc
mov
add
rcll
add
xor
or
icebp
fbstp
ret
addl
and
add
incl
stos
rolb
cwtl
subb
stos
icebp
addr16
push
add
push
jb
push
loopne
push
popa
adc
sub
jno
xor
fyl2x
stos
aaa
test
stos
push
inc
push
int3
mov
fs
insb
mov
addl
lcall
cld
jae
sbb
dec
push
mov
jbe
sub
cld
cmpb
inc
popa
orl
adc
inc
addl
sub
gs
sahf
addl
bound
imul
adcl
nop
mov
add
mov
jecxz
fs
xchg
adc
lea
cwtl
je
mov
movsl
xchg
push
les
scas
cltd
push
mov
or
add
ds
xchg
les
push
or
stos
adc
pop
xorb
dec
push
lcall
push
jns
arpl
jo
inc
out
arpl
mov
loop
roll
sahf
insl
dec
fs
inc
lea
cmp
inc
insl
ret
jle
mov
jb
cmpsb
pop
cwtl
lods
inc
mov
jb
xchg
jae
pushl
cltd
test
xchg
iret
add
inc
dec
ret
into
sbb
mov
rcrl
shll
ret
add
clc
push
mov
mov
popa
sub
shlb
add
stos
sarb
ret
add
jo
jb
mov
fimull
dec
push
xchg
ss
out
push
fsubl
aam
ret
or
sub
push
fidivrl
dec
testb
push
push
outsb
shll
cmp
orb
cmpsb
fwait
rolb
push
ss
popa
mov
sbb
int3
inc
pushf
loopne
lea
xorb
push
jle
rorb
pushl
insb
enter
add
ret
xchg
rorb
fiaddl
outsb
movb
ret
and
adc
int3
dec
add
push
xchg
les
ret
jnp
je
sarl
jne
inc
push
and
push
cld
add
sbb
push
loope
lds
xchg
push
pop
cmpsl
rorb
je
pusha
outsl
jl
loopne
mov
pusha
insb
in
inc
jae
mov
pusha
xor
add
imul
subb
jg
push
sahf
push
add
or
or
fwait
inc
sub
add
cmp
inc
push
dec
in
jg
lea
push
jb
push
outsb
loopne
popa
jo
movsb
pusha
pop
and
loope
push
mov
fsubs
xorb
and
pop
ja
and
mov
mov
addb
outsb
jae
or
ja
inc
loopne
cwtl
inc
cli
xor
mov
push
lock
mov
dec
cwtl
xchg
or
loope
pusha
adc
xchg
les
inc
in
mov
les
ljmp
add
fisubs
or
mov
adc
pop
jl
mov
mov
popa
xchg
push
imul
push
pop
mov
mov
call
xchg
pusha
add
dec
jae
push
dec
pusha
push
push
bound
mov
mov
mov
push
fmuls
popa
inc
add
push
xorb
or
loopne
push
push
fiaddl
inc
xchg
mov
adc
sbb
inc
inc
inc
inc
pusha
inc
mov
mov
push
lods
imul
movsb
adc
lea
push
adc
jne
pusha
shrl
push
ss
loopne
test
adc
fcoms
jbe
arpl
in
push
mov
mov
movsl
push
mov
fcoms
imul
gs
jmp
xchg
adc
mov
push
push
add
mov
in
js
mov
sbb
xor
mov
sbb
adc
jnp
push
jle
ljmp
and
loopne
push
sar
cmp
arpl
inc
bound
pusha
or
std
or
mov
clc
je
outsb
arpl
popa
rclb
movsb
jb
mov
fidivs
outsl
addr16
loope
mov
mov
mov
add
or
addr16
push
call
or
in
loopne
gs
outsb
jo
mov
push
push
sub
adc
pop
add
and
loop
sbb
or
in
xor
pop
xchg
dec
and
cwtl
jbe
enter
or
add
inc
loopne
popa
adc
nop
clc
pusha
mov
fimuls
fs
xchg
bound
push
fadds
mov
add
fs
mov
data16
inc
insb
adc
mov
pusha
ss
inc
and
sbb
loop
mov
into
cs
push
test
inc
adc
push
add
sub
lock
xchg
dec
lea
popa
mov
sub
push
in
inc
dec
mov
inc
dec
inc
sub
lret
in
mov
cmp
fwait
loopne
sbb
sbb
addr16
push
fs
add
lock
dec
add
push
inc
pop
mov
pop
xor
push
push
mov
adc
mov
adc
pusha
fistl
popa
add
sub
arpl
or
add
dec
in
shrb
cmc
scas
push
inc
jae
ss
dec
jbe
insb
fsubrs
ficomps
mov
repnz
jo
xor
int
sbb
loope
jl
xor
insb
mov
fldt
or
sub
adc
outsl
je
sbb
das
rcrb
cmpsl
and
les
xchg
add
adc
cli
out
and
imul
and
lea
cmpsb
push
ljmp
jns
mov
subb
jb
shrb
sarl
jp
inc
sub
add
jo
mov
add
push
js
mov
push
ret
add
insb
push
xor
cltd
xor
je
xor
scas
int3
popa
pusha
movl
xchg
jle
roll
push
out
andb
push
cmpsb
push
push
hlt
mov
add
pop
mov
jo
jle
pop
outsl
pop
mov
pusha
jne
xchg
pop
outsl
push
mov
add
rol
cmpl
push
subb
jae
and
lods
pushl
xor
inc
hlt
push
jno
mov
je
mov
lcall
lock
pushl
inc
dec
lods
push
lods
xor
fidivrl
push
xchg
mov
mov
lret
in
xchg
push
in
xchg
subl
je
inc
add
pop
xor
clc
add
insb
xor
jbe
lock
out
xchg
sbb
mov
add
insb
lock
or
add
arpl
aaa
or
inc
jbe
xchg
sub
pushl
fiadds
mov
push
sub
jo
cmc
adc
mov
icebp
push
cwtl
dec
lods
jbe
dec
mov
adc
mov
mov
decl
cmc
or
sti
and
loop
pushf
push
xchg
push
mov
mov
js
push
push
lcall
push
push
xchg
or
in
je
imul
pop
jbe
lcall
add
adc
outsl
xchg
imul
mov
dec
inc
stos
repnz
dec
dec
mov
inc
push
push
xor
mov
jo
icebp
jp
pop
add
repnz
inc
scas
xchg
sub
jp
jo
std
xor
push
xor
test
fbstp
and
inc
scas
dec
mov
push
add
mov
cmp
insl
repnz
xchg
mov
insl
push
mov
data16
xorl
insl
lock
mov
push
icebp
sbb
or
ja
outsl
imul
pop
mov
sahf
add
dec
jmp
pop
jne
xchg
je
popa
lock
mov
arpl
push
adc
push
cmp
xchg
jae
arpl
je
xor
movb
and
xchg
adc
cli
add
mov
popf
jne
inc
mov
xor
out
push
je
jnp
or
push
add
movsl
inc
mov
int
adc
lret
mov
push
lds
mov
test
out
pop
add
lods
js
xor
push
pushf
gs
add
or
mov
push
dec
pop
jo
js
in
mov
sbb
add
mov
add
add
aas
add
insb
dec
sbb
adc
aas
jo
out
mov
and
sbb
test
dec
push
push
mov
jo
sub
sbb
add
or
and
lea
mov
divl
xorb
add
mov
sub
push
mov
ret
cs
fcomi
adc
mov
ljmp
sbb
in
xor
mov
sbb
lock
inc
fcomip
lcall
popf
add
das
pop
std
and
dec
out
fstpt
xor
xchg
mov
scas
inc
inc
push
mov
add
popl
popa
cld
jle
mov
aad
xor
dec
pop
xchg
inc
nop
loopne
add
inc
inc
xchg
test
inc
test
xorb
in
testl
neg
mov
push
mov
jmp
stos
push
inc
pop
out
jecxz
repnz
jnp
fcomip
outsl
mov
inc
xlat
adc
stos
pop
scas
mov
cmp
cli
inc
adc
add
repz
loope
out
dec
test
int3
xchg
icebp
scas
mov
repnz
or
hlt
push
std
mov
push
cmpsl
inc
in
insb
cmp
xchg
mov
push
inc
mov
shlb
push
rcrl
mov
pop
add
lock
and
adc
aaa
popa
cs
pushl
pop
jbe
add
addr16
xchg
clc
repz
fldl
xchg
fisttps
call
les
int3
int
xor
mov
cld
mov
orb
pop
jo
sub
cmp
mov
in
out
clc
ja
outsb
in
xor
cmp
sub
out
pop
pop
dec
shl
xor
or
push
std
mov
mov
cmpsl
out
aas
mov
add
mov
int3
cmp
aad
xchg
jb
nop
out
cmp
cld
xchg
addb
rorb
mov
mov
in
fwait
inc
cld
leave
aas
insl
les
adc
adc
lcall
addr16
push
lock
xchg
aas
dec
mov
divb
sahf
mov
sahf
push
pop
roll
pop
aas
sub
das
add
stc
mov
cwtl
mov
add
ljmp
in
fs
das
ffree
call
add
ja
xchg
cmpl
arpl
jl
mov
cmp
add
add
std
xlat
cmp
mov
add
add
jecxz
cmpsb
add
cmp
jne
clc
call
cs
jno
rolb
xor
mov
pop
in
pop
xchg
imulb
mov
adc
fadd
aaa
mov
adc
dec
in
leave
mov
add
imul
ret
call
add
pop
test
cmp
scas
cmpl
bound
scas
stc
xchg
jge
jne
fistpll
ficomps
and
add
out
aaa
rorb
cwtl
outsb
mov
add
scas
inc
push
pop
orl
and
orl
or
sub
incb
test
fiaddl
mov
into
mov
push
ret
add
lret
push
push
roll
sti
mov
or
lret
mov
testl
add
add
ss
cmp
lods
insl
mov
push
add
lea
stos
sbb
aaa
inc
dec
adc
or
hlt
out
cmp
inc
add
xchg
add
filds
cmp
push
cltd
lahf
lret
add
int3
add
mov
mov
dec
imul
push
lret
or
sbb
pop
lret
adc
int3
mov
dec
fists
pushf
adc
add
imul
sti
dec
imul
add
insb
xchg
lret
xor
icebp
jge
imul
movsl
in
add
data16
add
adc
jl
das
sub
imul
pusha
xchg
jmp
push
push
mov
insb
fisubl
popa
dec
js
sub
pushl
lods
cmp
sarb
addr16
jmp
push
dec
sub
adc
aaa
jb
xchg
cs
es
rorb
or
fbld
lret
outsl
divb
cmp
push
aaa
mov
aas
adc
aaa
daa
aaa
in
paddb
idivl
and
mov
adc
hlt
inc
imulb
cmp
cmp
out
cmp
mov
cmp
cmp
ja
sarb
cmp
sahf
in
ljmp
movsl
ja
xor
xor
xor
xor
adc
jg
and
xor
xor
xor
jae
loope
adc
les
xor
aam
cmp
push
std
mov
cmp
adc
cmp
ret
add
cmp
cmp
push
adc
mov
cmp
call
pop
xchg
add
lcall
cmp
cmp
cmp
mov
inc
cmp
cmp
adc
cmp
loopne
adc
and
mov
add
mov
adc
sbb
ret
cmp
push
mov
jg
cmp
cmp
xchg
arpl
sub
sub
cld
insl
and
add
jecxz,pt
and
insb
ret
sarl
ds
ds
ds
and
mov
sbb
arpl
push
mov
inc
les
xor
and
mov
adc
add
add
repz
adc
mov
fwait
mov
mov
mov
aas
aas
cmpl
aas
jae
adc
movsb
aas
push
aas
aas
inc
ss
pop
sbb
aas
mov
insb
ret
mov
loopne
outsl
nop
movsl
push
push
pop
xor
fildl
divb
sub
lret
adc
mov
fcoms
pop
xor
adc
int
sbb
pushf
xor
lods
xor
loope
fistpll
sub
xor
xor
mov
adc
xor
add
int
jle
sbb
cmp
mov
xor
xor
es
jl
jnp
mov
xor
sbb
test
sbb
outsl
inc
ss
fdivl
sbb
cld
xor
xor
and
or
mov
into
sub
insb
loop
fisttps
xor
pop
xor
sbb
jl
sbb
pushf
xor
mov
mov
repz
int3
xor
fdivl
sbb
in
xor
cld
adc
mov
sbb
enter
sbb
mov
jg
int
adc
xor
xor
xor
pop
xor
int3
xor
sbb
mov
dec
insb
adc
xor
mov
xor
sti
push
repz
xor
xor
xor
xor
xor
xor
xor
ss
fs
daa
or
jo
xorb
xor
aas
insb
aas
inc
jno
xor
mov
shlb
bound
push
lcall
mov
ljmp
ss
lcall
ss
cmp
cmp
cmp
mov
add
fwait
xor
mov
and
add
adc
mov
xor
outsb
mov
cmp
stc
cmp
mov
cmp
cmp
in
sbb
popa
add
add
ds
ret
cltd
pop
mov
jl
aas
inc
sbb
adc
xor
nop
xor
mov
or
xor
xor
ja
push
inc
xor
xor
xor
mov
insb
loop
ss
ss
aaa
add
mov
nop
es
xchg
cmp
and
pop
xchg
push
lock
cmp
sbb
cmp
cmp
inc
imulb
fs
cmp
cmp
xorl
dec
cld
rcrb
push
repnz
cmp
clc
adc
shll
repnz
leave
sahf
aaa
push
aaa
lret
mov
cmp
cmp
cmp
sub
cmp
inc
inc
cmp
cmp
cmp
sti
aaa
inc
ret
push
out
cmp
cmp
rclb
incb
push
cmp
cmp
adc
fdivrs
and
jl
cmp
cmp
adc
fsubrs
push
mov
jb
jp
cmp
cmp
xchg
cmp
sbb
xor
cwtl
cmp
cmp
xchg
pop
jo
cs
mov
push
inc
scas
and
inc
aas
repnz
lock
xchg
push
push
cwtl
xor
lods
ds
sar
mov
xor
xor
data16
sub
jmp
cmp
cmp
cmp
cmp
popw
cmp
cmp
cmp
hlt
enter
nop
inc
mov
aam
or
mov
ljmp
call
xor
xor
xor
xor
xor
xor
xor
xor
hlt
xor
test
mov
adc
xor
xor
push
push
add
into
xor
xor
incl
dec
xor
adc
rolb
sub
popa
in
cmp
push
cmp
popa
lock
cli
cmp
dec
push
cmp
stos
fisttps
mov
pop
cmp
xchg
adc
cmp
incl
cmp
cmp
cmp
adc
cmp
adc
aaa
ds
jo
push
jmp
mov
sarl
aas
jp
fwait
aas
sub
adc
or
inc
pushl
cld
mov
stos
xor
aaa
jle
cmp
stos
xor
imul
add
dec
xor
xor
xor
cli
xor
xor
xor
or
divb
push
lahf
xor
xor
xor
adc
xor
add
ss
mov
scas
in
mov
ss
aaa
adc
jge
lea
fs
or
cmp
push
cs
cmp
in
mov
adc
cmp
cmp
test
js
dec
ret
xchg
cmp
push
mov
cmp
or
xor
in
clc
push
sub
sbb
ds
ds
int
test
into
adc
aas
lds
inc
aas
mov
aas
int
add
push
aas
sub
and
lods
mov
lods
aad
jg
add
fdivl
xor
xchg
ret
cld
inc
pushl
ss
ss
and
or
pop
cmp
cmp
ret
fbld
cmp
cmp
cmp
outsb
jge
mov
ret
jo
dec
mov
inc
jp
push
mov
adc
icebp
outsl
mov
xor
daa
inc
xor
jbe
addr16
clc
add
xor
arpl
mov
lcall
add
cmp
cltd
cmp
push
cld
insl
cmp
cmp
stos
popa
mov
adc
mov
pop
cmp
sub
sub
add
nop
ds
add
jmp
pop
adc
filds
pop
pop
icebp
ja
scas
jo
lret
xor
xor
roll
dec
xchg
xor
xor
lret
jecxz
mov
or
gs
ss
adc
shll
cwtl
sbb
mov
cmp
lds
lret
cmp
cmp
cltd
cli
jmp
lods
cmp
ds
and
mov
xor
add
xchg
aaa
and
out
sub
fidivrs
add
jl
test
stos
popa
push
cmp
adc
das
clc
bnd
xor
out
insb
cmp
stos
cmp
cmp
test
mov
mov
jg
test
repnz
xor
clc
cmp
pushl
inc
sahf
cmp
add
daa
jle
lcall
in
cmp
xor
jo
mov
jg
mov
xor
xor
jne
xor
mov
mov
push
hlt
mov
mov
jbe
mov
int3
lds
xor
xor
xor
adc
xor
mov
cld
mov
pshufw
cld
xor
fiaddl
js
xor
in
and
xlat
adc
cmp
mov
xor
push
ljmp
divb
lahf
xor
insb
xor
jl
cmpb
add
ja
mov
push
add
pop
movsb
xor
mov
sub
xor
ss
add
ss
adc
outsb
scas
ss
cmpsl
ss
lahf
ss
ss
out
out
ss
test
ja
mov
xchg
ss
ljmp
movsb
ss
lods
orb
ss
ss
aaa
ss
ss
ss
nop
jo
add
pop
fdivl
pop
fsubp
mov
cmc
sbb
ds
ds
aas
mov
push
pop
outsb
pop
aas
cld
ljmp
ljmp
inc
xor
xor
out
jb
out
test
or
xor
sbb
ss
add
pop
stos
xor
cwtl
cmpsb
jg
call
jb
bound
jo
mov
mov
ret
xor
fistpll
xor
xor
xor
inc
xor
add
stc
nop
imul
sbb
fbstp
sub
iret
adc
popf
xor
lea
test
outsl
mov
and
xor
xor
scas
sub
out
adc
repnz
xor
scas
mov
jo
sti
incl
insl
cmpsb
xor
hlt
add
out
push
pop
loopne
sub
mov
ljmp
mov
insl
xor
or
dec
or
push
and
xor
out
xor
xor
mov
dec
sbb
push
xor
aad
ljmp
inc
ss
push
cmpsb
push
cmp
ljmp
cmp
dec
shlb
sub
aaa
push
aaa
movsl
add
jb
les
jg
xchg
test
insl
adc
aaa
xor
divl
add
loope
xor
negb
or
cmpl
cmp
mov
cmp
adc
ljmp
cmp
or
loop
cmp
cmp
cli
in
outsl
into
inc
cmp
cmp
cmp
adc
cmp
cmp
cmp
cs
shrb
cmp
xchg
pushf
jbe
mov
adc
cmp
cmp
add
inc
lods
mov
push
or
pop
popa
bound
lret
add
scas
push
push
sub
push
adc
cmpsb
xor
xor
movq
es
xorl
xlat
xor
xor
xor
sarb
pop
add
pusha
jbe
into
mov
inc
incl
icebp
xor
xor
xchg
int
jne
test
xchg
xor
hlt
out
ret
cld
out
xor
xor
xor
xor
fidivl
clc
add
inc
xor
sub
mov
push
xor
xor
movsb
xor
xor
xor
fdivs
xor
xor
int3
xor
pop
out
ret
lcall
ss
out
ss
sahf
sub
fldt
ss
ss
into
add
aaa
in
aaa
pop
aaa
jecxz
clc
mov
sub
iret
aaa
xor
insb
dec
cmc
pushl
mov
push
aaa
cmpsl
aaa
pop
aaa
popf
aaa
addr16
xchg
aaa
jno
mov
jnp
jg
test
jne
lcall
fistps
aaa
cltd
aaa
popa
aaa
mov
aaa
mov
inc
aaa
shll
aaa
lret
push
pushl
das
aaa
aad
and
aaa
jmp
aaa
pop
aaa
std
add
pop
cmp
cmp
cmp
outsl
ret
sbb
fistpll
and
push
cmp
sarl
cmp
fcomip
das
inc
mov
cmp
cmp
test
jg
jnp
mov
jno
lcall
cmp
pop
cmp
cmp
mov
cmp
ljmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
out
cmp
cmp
cmp
cmp
cmp
cmp
push
cld
inc
cmp
mov
cmp
xchg
cmp
xchg
jg
outsl
cmp
cmp
xor
cmp
ljmp
cmp
add
cmp
leave
cs
cmc
divl
test
xchg
jno
cs
mov
xchg
shlb
scas
cli
pop
sub
stos
xor
ljmp
jb
push
cmp
incl
xchg
cmp
cmp
jl
loopne
mov
cmp
cmp
cmp
cmp
cmp
push
fstpt
icebp
cmp
sahf
cmp
adc
push
ds
ds
cvtdq2ps
aas
imul
call
push
adc
roll
scas
aas
outsb
sub
sbb
jecxz
in
inc
xor
ja
mov
xor
xor
add
xor
xchg
and
stos
into
dec
mov
push
xor
xor
adcb
jbe
inc
jp
jg
aad
test
xor
jbe
aaa
mov
push
jl
call
cmp
cmp
leave
cmp
cmp
clc
and
lods
inc
outsb
cs
cmp
cmp
lret
ds
mov
jg
jbe
arpl
test
mov
dec
shll
inc
xchg
aas
dec
aas
out
mov
aas
repz
xor
fs
scas
mov
xchg
xor
xchg
xor
je
cmpsl
xor
enter
pop
push
cld
jg
push
xor
cmp
shll
loope
and
rolb
jno
pop
jge
xchg
cli
xor
xor
jge
xchg
mov
jl
fnsave
mov
mov
dec
ss
ss
ss
mov
jb
cmc
push
pop
sbb
in
push
cmp
fimuls
cmp
cmp
leave
cmp
jg
xchg
decl
jb
lahf
cmp
scas
sarb
mov
cmp
cmp
cmp
cmp
cmp
cmp
adc
aas
cmp
xlat
cmp
push
scas
sbb
ds
ds
lods
aas
cwtl
xor
iret
into
mov
ljmp
icebp
xlat
xor
xor
inc
xor
xor
xor
je
xchg
ljmp
xor
mov
ja
daa
xor
testl
cmp
jecxz
std
insl
cmp
dec
cmp
mov
xlat
aad
sub
mov
cmp
lods
cli
sub
popf
js
pop
ds
loop
sub
cmpsl
cmp
sbb
imul
or
mov
pop
xor
xor
loop
decl
xor
xchg
dec
mov
jg
pcmpgtd
adc
fbstp
sub
dec
ss
ss
clc
sbb
rolb
scas
aaa
cmp
jg
mov
mov
stos
cmp
adc
pushf
cmp
cmp
cmp
cmp
cmp
cmpsl
ds
cmpsl
jns
sub
xor
shrb
pop
mov
xchg
psubb
inc
xchg
jp
pop
mov
add
enter
hlt
incl
mov
xor
xor
xor
xor
xor
xor
fdivs
jb
repnz
add
outsl
xor
call
mov
clc
lcall
inc
aaa
test
cmp
cmp
cmp
ljmp
cmp
mov
shl
jg
cmp
or
dec
adc
push
daa
loopne
lcall
cld
je
ds
push
sbb
xor
xor
jg
lods
xor
mov
dec
cld
xor
xor
xor
xor
mov
sti
ss
ss
shlw
or
jbe
cmp
jo
ss
cmp
cmp
cmp
cmp
idivb
and
mov
jmp
mov
adc
jmp
sbb
out
mov
push
adc
repnz
pop
xor
scas
xor
sub
mov
or
push
lcall
xor
subl
adc
xor
sbb
test
add
lock
lods
fwait
aaa
push
aaa
mov
repnz
aas
adc
cmp
push
repnz
mov
fs
clc
sbb
test
out
pop
sub
mov
arpl
cmp
cmp
cmp
cmp
inc
sbb
xchg
stos
call
cmp
cmp
cmp
push
lea
or
inc
cmp
sahf
jne,pt
ljmp
jo
xor
rclb
push
xor
xchg
xor
ja
stc
fidivs
xlat
xor
scas
push
xor
xor
outsb
aaa
stos
aaa
inc
pop
aas
std
aaa
sbb
sarb
inc
pop
jo
jns
test
inc
adc
pop
cmp
shr
loop
inc
jle
ret
cmp
cmp
add
xchg
cmp
cmp
jg
mov
idivb
cmp
cmp
mov
cmp
test
jle
cmp
cwtl
cmp
mov
push
shlb
and
mov
mov
pop
pop
xchg
xor
xor
jg
das
lcall
inc
xor
xor
xor
xor
pop
xor
pop
faddl
cs
xor
cmpsb
push
and
mov
xchg
xor
xor
in
xor
push
mov
rol
out
cmp
fcomip
or
in
and
enter
scas
cmp
clc
cmp
inc
incl
sbb
jg
cld
cmp
cmp
cld
ret
mov
aaa
xor
xor
xor
hlt
fisttps
pop
xor
xor
xchg
xor
shlb
or
incb
pushl
popf
xor
mov
mov
xor
xor
lock
jmp
xor
xor
dec
or
xor
inc
adc
dec
ret
aaa
xchg
adc
aaa
clc
aaa
push
and
daa
lcall
loop
cmp
cmp
clc
cmp
cli
mov
cmp
shl
jge
in
ds
ds
aaa
inc
addr16
xor
xor
xor
xor
push
int
dec
xchg
push
inc
fistpll
out
ret
fcomps
popa
xor
xor
xor
xor
push
adc
mov
lock
clc
scas
cmp
cmp
cmp
jbe
xchg
cmp
sarb
sub
cs
loopne
push
push
cltd
cmp
leave
sarb
cmp
call
mov
cmp
push
loope
xchg
cmp
inc
cmp
mov
or
ds
add
aas
cmp
mov
outsb
test
mov
push
add
push
cs
mov
or
inc
ljmp
push
ficomps
xor
xor
addr16
xchg
xor
mov
das
test
xor
mov
xor
pop
insl
push
xor
push
lds
or
adc
dec
mov
lea
xor
cmp
jmp
jle
repnz
push
ss
ss
imul
pop
aaa
decl
out
xchg
aaa
mov
cmc
aaa
jmp
cmp
pop
cmp
cmp
or
lock
cmp
mov
cmp
mov
cmp
push
lret
cmp
ds
fsubrl
mov
pusha
inc
lret
sbb
outsb
jns
je
movsl
xor
push
jmp
xor
lods
in
xor
xor
xor
bound
sbb
cld
insl
push
dec
pop
lods
decl
xor
lret
xor
sahf
sub
adc
hlt
xor
xor
xor
data16
mov
or
xor
xor
jge
pop
hlt
shll
cmpsb
pop
xor
push
cmp
sub
xor
pop
sub
test
cld
or
shlb
clc
xor
ret
jecxz
insb
jge
mov
loop
add
cld
push
lcall
push
ret
mov
cmp
std
jg
pusha
mov
cmp
cmp
cmp
cmp
lock
mov
cmp
cmp
cmp
adc
incl
shrb
cmpb
cmp
lds
xor
cmp
jl
adcb
lret
orb
cmp
pop
jg
movsb
push
cmp
sub
outsl
adc
adc
xor
xchg
jle,pt
inc
push
push
ds
aas
ss
cmpsb
aas
data16
push
aas
sarb
aas
divb
push
lods
lahf
repz
enter
jge
jg
or
sbb
xor
xor
xor
lcall
mov
xor
push
out
xor
jae
cwtl
xor
xor
xorb
xor
jmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
xor
out
jb
aaa
mov
xchg
clc
stos
scas
into
or
cmp
mov
lcall
lods
sbb
cmp
cmp
in
rolb
stos
cmc
cmp
call
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
scas
cmp
int
bound
test
lds
sbb
ds
rclb
sbb
das
xchg
push
xor
rcr
add
aas
ds
mov
aas
test
and
dec
push
loop
xorb
outsl
push
sahf
xor
aad
pop
xor
dec
mov
mov
and
and
jbe
inc
xor
aaa
push
cmp
shrl
jmp
cmp
cmp
loop
sbb
shrl
ds
aas
test
nop
xchg
sub
outsb
cld
aam
pop
xor
jbe
xor
outsb
mov
xor
fnstenv
in
xor
bound
inc
cwtl
xor
sub
and
and
and
sbb
out
out
xor
jne
add
xor
setp
lcall
out
aam
call
les
inc
decb
push
adc
pop
xor
outsl
mov
push
ja
jg
xchg
sub
xchg
adc
cmpsl
lret
mov
cli
and
ss
aaa
cmpsb
push
loop
adc
push
test
mov
ret
or
cmp
cmp
sbb
cmp
xchg
je
icebp
mov
mov
mov
xchg
xor
andb
je
outsl
bound
xor
into
jg
pop
bound
xor
xor
xor
xchg
mov
cltd
lcall
daa
outsb
shlb
push
inc
aaa
loop
pop
ds
xor
adc
pop
adc
ss
push
jp
aaa
jl
outsb
adc
mov
scas
cmp
sbb
ja
sbb
cmp
sarb
push
cmp
mov
lcall
scas
push
mov
fs
cmp
fidivrs
sbb
pushl
push
add
cmp
cmp
cmp
cmp
or
cmp
jb
outsl
cmp
pop
lea
cmp
movsl
cmp
incl
sbb
icebp
filds
js
push
loopne,pt
or
and
lret
ja
jb
dec
aas
ja
mov
ret
test
fdivs
sbb
clc
jmp
loopne
xor
js
jg
ret
xor
xor
pop
aad
jmp
xor
mov
add
pop
scas
jno
std
out
sbb
xor
add
and
xchg
aaa
xlat
aaa
out
cmp
cmp
sbb
mov
and
cmp
cmp
cmp
ja
stos
int3
mov
or
pop
push
loop
pop
enter
sbb
fwait
out
sbb
icebp
mov
lahf
icebp
add
mov
stos
cmpsb
rcrb
or
add
xor
xor
sub
sub
imul
push
jl
xor
xor
ficoms
push
pop
add
xor
dec
cmp
enter
cmp
cmp
in
pusha
mov
movl
test
cmpsb
sti
outsl
fcomps
lods
ds
aaa
aas
popf
call
xchg
cli
pop
sahf
mov
ss
xor
xor
test
xor
imul
xor
enter
jo
aad
and
adc
vpsubb
shll
xor
inc
cmp
mov
ss
sub
out
xchg
mov
es
mov
add
jmp
inc
aas
in
push
test
notrack
jle
stos
push
insb
clc
divl
inc
xor
ret
xor
cmp
rcrb
dec
pushf
fcoms
mov
inc
fs
pusha
aad
push
or
cmp
jbe
cmp
mov
bound
cmp
adc
adc
test
cmp
cmp
xor
repz
dec
cmp
cmp
fcomps
insb
cmp
sbb
stos
add
xor
sbb
inc
movlhps
aas
sub
iret
mov
sbb
pop
adc
inc
add
mov
test
mov
xor
aas
xor
inc
call
cli
xor
sub
adc
xor
loop
or
js
ds
push
inc
sub
adc
fisubs
cmpsb
movsb
scas
das
add
in
arpl
add
andb
mov
mov
cmp
cmp
mov
lret
mov
stos
cld
stos
mov
in
aaa
jp
xor
jle
jp
mov
pop
jle
xor
divb
jmp
mov
aaa
sub
mov
dec
push
add
push
outsb
mov
dec
add
dec
and
mov
adc
aaa
orb
jo
inc
subb
pushf
add
xor
std
xor
xor
xor
xchg
lahf
pop
std
jg
decl
xchg
xor
je
xchg
push
nop
xor
add
es
lcall
mov
shlb
loop
adc
xor
hlt
or
fsubrs
loopne
adc
hlt
call
xor
ljmp
mov
add
and
push
adc
inc
mov
repz
inc
lods
push
stos
jle
notb
ds
ret
xor
inc
mov
mov
mov
push
mov
xchg
sbb
push
jge
mov
inc
ss
ss
std
aad
jae
inc
aaa
cmp
mov
pop
adc
cwtl
xchg
cmpb
add
inc
xchg
cmpsb
mov
out
mov
or
jg
jg
add
adc
mov
and
add
xchg
push
clc
imul
sarb
push
add
test
insb
aaa
mov
mov
xchg
jp
and
or
insb
leave
jne
mov
sbb
lods
sub
and
mov
js
mov
imul
jge
sub
sbb
icebp
decl
or
jg
sbb
popa
jle
or
pusha
cld
sbb
cmp
ljmp
push
sbb
addb
repnz
or
data16
xor
es
movsb
mov
gs
arpl
cmpl
pop
inc
sbb
test
add
adc
outsl
add
mov
pandn
pop
inc
movsb
ret
adc
or
adc
sbb
mov
cli
pop
jno
sub
inc
dec
or
inc
mov
sub
cld
jmp
xchg
loope
mov
add
int3
inc
mov
xchg
lods
arpl
pop
mov
mov
jnp
mov
inc
aas
xchg
test
in
ficoms
cltd
sar
int
cmpsb
sub
daa
lcall
pop
je
bound
rclb
and
sub
shll
adc
das
clc
in
cmpsb
test
popf
lcall
sbb
ret
ja
mov
sti
sbb
testb
push
mov
gs
dec
add
lret
and
clc
jns
lods
les
les
popf
ret
fadds
shlb
jno
adc
mov
push
out
lock
mov
jp
jne
std
jmp
lret
loopne
xchg
lock
and
pop
sub
int3
ret
pop
inc
pop
bound
movsl
and
imulb
dec
mov
and
jb
js
outsl
mov
adc
fnsave
xchg
cmc
les
rclb
insb
aas
shr
mov
insb
cmc
and
mov
xchg
and
cld
cmp
mov
jne
into
out
push
repnz
vmwrite
jg
cmc
sub
out
fmuls
push
repnz
cli
rcrl
cs
xchg
mov
test
cld
xchg
insb
sub
xlat
aam
jg
mov
pop
inc
pop
add
fisttps
mov
jg
fistpl
test
mov
inc
inc
bound
adc
jno
adc
sub
movsb
xchg
pusha
test
mov
jl
mov
fs
insb
jmp
dec
imul
popa
insb
in
sub
add
xor
dec
sub
jb
jb
lcall
imul
inc
imul
add
popa
nop
push
scas
mov
pop
mov
and
testb
inc
push
inc
je
mov
adc
and
add
fs
aam
jne
arpl
shlb
aad
gs
imul
rcrl
gs
fs
xor
inc
js
pop
lcall
subb
test
xchg
aad
sub
bound
pop
outsb
lahf
std
divb
push
inc
mov
arpl
pop
inc
push
popa
bound
sbbl
push
je
insl
int3
loopne
add
cmc
jl
insb
les
int
xchg
xor
out
jo
loopne
push
popa
ja
and
popa
push
mov
mov
cmc
pop
fs
xchg
in
adc
add
repz
ja
pushf
leave
mov
jnp
add
dec
push
xor
pop
test
xchg
add
inc
push
or
imul
dec
mov
mov
test
or
adc
adcl
mov
push
add
movsb
test
shr
jo
mov
pop
stos
lds
test
mov
cmpsl
fstps
test
and
sub
xor
mov
adc
and
subb
adc
adc
sbb
movsl
or
and
inc
mov
xchg
or
mov
mov
and
cwtl
adc
cs
adc
add
mov
or
adc
or
or
push
inc
mov
and
inc
and
push
movsb
jno
sub
sub
sub
xor
lea
add
or
rcll
adc
shll
inc
push
imul
jb
cmp
xor
jo
jmp
rorl
lods
add
dec
dec
inc
rcrl
shll
mov
push
stc
mov
xor
mov
mov
push
xor
or
sub
pusha
xchg
add
add
cwtl
nop
addb
test
mov
dec
add
jae
outsb
push
and
push
stos
insb
insb
xor
add
sub
adc
adc
gs
mov
orl
adc
xor
mov
movsb
call
addl
jge
and
inc
inc
sub
add
inc
xchg
add
push
mov
and
test
add
sbbb
mov
pop
mov
xor
xor
push
inc
and
and
push
cmc
lea
add
mov
nop
mov
add
sub
sub
test
inc
xor
jmp
test
and
and
ja
adc
sub
mov
or
mov
jne
adc
nop
andl
shrb
push
mov
adc
add
sub
sbb
je
adc
or
and
test
jnp
or
xchg
aas
push
rorl
adc
adc
loop
push
cmp
adcl
inc
mov
mov
sbb
test
mov
cmp
inc
dec
add
inc
or
add
xor
adcl
mov
aaa
lea
or
sub
adc
mov
add
adc
and
and
mov
out
add
adc
adc
adc
adc
test
loopne
inc
shrl
jae
or
and
in
and
pop
rclb
mov
cmc
mov
push
inc
or
test
inc
or
and
mov
dec
adc
adc
test
fldcw
sub
add
pop
push
sbb
xchg
jae
ret
test
inc
mov
addr16
push
inc
or
sub
subl
xchg
adc
stos
dec
cmpl
add
mov
jnp
push
mov
or
mov
or
out
aad
lods
and
pop
adcl
adc
int
and
add
sub
sub
nop
rcll
mov
push
roll
bound
nop
sub
jmp
addl
adc
stos
adc
push
inc
mov
subl
sub
jno
dec
mov
add
adc
sub
pop
shrb
and
test
sbb
icebp
jno
pop
pop
add
mov
push
mov
add
xchg
or
cmp
mov
push
inc
lods
push
test
mov
insl
sbb
aaa
xor
bound
rcrl
add
test
add
mov
cmp
movsl
adc
sbb
aaa
push
rolb
adc
fildll
xchg
add
mov
add
bound
push
popa
mov
push
inc
push
rorb
lcall
pop
dec
mov
sarb
add
inc
jae
add
and
push
mov
movsb
test
jg
stos
sbbb
or
add
inc
adc
mov
les
sbb
or
add
xor
fs
push
inc
stos
cmpsb
inc
inc
mov
mov
add
add
add
cltd
jne
push
dec
test
mov
dec
arpl
or
add
mov
xor
sbbb
inc
test
inc
and
cmp
addr16
dec
add
dec
add
xchg
test
sub
cmpsb
inc
inc
and
inc
inc
pusha
sub
xor
sbb
add
add
pusha
inc
sub
add
mov
push
sbb
cmp
adc
ret
add
push
and
or
inc
or
or
rolb
pop
les
adc
and
mov
mov
push
dec
push
xor
xchg
and
in
add
add
loopne
popl
das
inc
clc
mov
sbb
daa
cmp
jns
mov
inc
inc
pop
and
sti
fistpl
rolb
add
vmread
mov
add
jo
adc
inc
jl
or
add
add
iret
add
add
mov
add
and
rolb
mov
in
aam
lcall
loope
push
xchg
jle
inc
outsb
mov
sti
fmull
xor
cli
dec
rolb
orb
pop
leave
leave
rcrb
shrb
add
das
push
pop
out
jb
pop
es
push
fwait
lea
mov
xchg
mov
mov
add
add
jle
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
and
add
loopne
add
add
add
add
add
add
or
add
add
js
add
mov
add
add
add
addb
add
add
addb
add
inc
add
addb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
inc
add
add
add
add
add
add
add
add
add
add
mov
push
inc
add
add
add
add
add
add
add
add
add
add
loopne
add
in
push
inc
add
add
add
add
add
add
add
add
add
add
or
add
rcrb
add
add
add
add
add
add
add
add
add
add
xor
add
mov
inc
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
test
add
pusha
inc
add
add
add
add
add
add
add
add
add
add
rolb
add
inc
imul
in
add
add
add
add
add
arpl
add
clc
add
addb
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
jb
add
test
xchg
aaa
mov
pop
pop
xchg
jp
and
or
xchg
leave
jne
xchg
sbb
lods
jle
fs
mov
js
mov
cmp
outsb
nopl
icebp
cwtl
pop
stos
sahf
scas
jg
sbb
or
rcrb
sub
pop
pop
sub
or
out
lcall
or
cltd
sub
xor
mov
mov
add
add
push
xlat
inc
ljmp
js
into
adc
outsl
fidivs
sbb
xor
mov
jne
fildl
pop
sbb
mov
cli
pop
orb
daa
xor
mov
insw
loope
mov
dec
leave
dec
icebp
jnp
inc
int3
dec
add
dec
pop
fisubs
aam
inc
and
xchg
jnp
in
and
cltd
or
sub
daa
mov
push
add
adc
cs
jl
adc
test
popf
add
sbb
rclb
sti
sbb
xchg
or
out
dec
lock
dec
add
push
push
and
cmc
mov
aas
xor
mov
cmp
aaa
jno
adc
add
clc
sarb
jno
push
jp
cmp
adc
lret
neg
and
int3
ret
pop
mov
loop
movsl
sbbb
cmp
lods
mov
jne
loop
xchg
push
lcall
outsl
inc
jmp
cmc
mulb
xor
jno
cmc
les
aas
rclb
dec
add
in
je
paddb
push
push
gs
adc
repnz
inc
vmwrite
push
sti
std
pusha
out
fdivs
jmp
stc
repnz
cli
cs
sbb
in
test
add
js
fs
aam
xlat
aam
mov
pop
inc
push
add
ffreep
repnz
jmp
and
aas
or
cmpsl
mov
cmpsl
sbbl
lods
arpl
pop
cmp
gs
bound
mov
ds
mov
das
rcrl
jge
and
jbe
adc
arpl
fimull
repz
sub
cli
enter
icebp
add
lahf
ljmp
xor
sub
jbe
hlt
dec
add
mov
inc
sti
in
sub
xor
in
hlt
xchg
sti
rol
adc
jb
mov
dec
xchg
in
mov
cs
mov
dec
xchg
aas
mov
cmp
rcl
iret
xchg
inc
cmp
loop
shlb
or
pop
nop
inc
adc
aad
in
mov
lds
pop
imul
popa
stos
insb
add
push
pop
loopne
insl
mov
add
test
xchg
aaa
mov
pop
pop
xchg
jp
and
or
xchg
leave
jne
xchg
sbb
lods
jle
fs
mov
js
mov
cmp
outsb
nopl
icebp
cwtl
pop
stos
sahf
scas
jg
sbb
or
rcrb
sub
pop
pop
sub
or
out
lcall
or
cltd
sub
xor
mov
mov
add
add
push
xlat
inc
ljmp
js
into
adc
outsl
fidivs
sbb
xor
mov
jne
fildl
pop
sbb
mov
cli
pop
orb
daa
xor
mov
insw
loope
mov
dec
leave
dec
icebp
jnp
inc
int3
dec
add
dec
pop
fisubs
aam
inc
and
xchg
jnp
in
and
cltd
or
sub
daa
mov
push
add
adc
cs
jl
adc
test
popf
add
sbb
rclb
sti
sbb
xchg
or
out
dec
lock
dec
add
push
push
and
cmc
mov
aas
xor
mov
cmp
aaa
jno
adc
add
clc
sarb
jno
push
jp
cmp
adc
lret
neg
and
int3
ret
pop
mov
loop
movsl
sbbb
cmp
lods
mov
jne
loop
xchg
push
lcall
outsl
inc
jmp
cmc
mulb
xor
jno
cmc
les
aas
rclb
dec
add
in
je
paddb
push
push
gs
adc
repnz
inc
vmwrite
push
sti
std
pusha
out
fdivs
jmp
stc
repnz
cli
cs
sbb
in
test
add
js
fs
aam
xlat
aam
mov
pop
inc
push
add
ffreep
repnz
jmp
and
aas
or
cmpsl
mov
cmpsl
sbbl
lods
arpl
pop
cmp
gs
bound
mov
ds
mov
das
rcrl
jge
and
jbe
adc
arpl
fimull
repz
sub
cli
enter
icebp
add
lahf
ljmp
xor
sub
jbe
hlt
dec
add
mov
inc
sti
in
sub
xor
in
hlt
xchg
sti
rol
adc
jb
mov
dec
xchg
in
mov
cs
mov
dec
xchg
aas
mov
cmp
rcl
iret
xchg
inc
cmp
loop
shlb
or
pop
nop
inc
adc
aad
in
mov
lds
pop
imul
popa
stos
insb
add
push
pop
loopne
insl
mov
add
test
xchg
aaa
mov
pop
pop
xchg
jp
and
or
xchg
leave
jne
xchg
sbb
lods
jle
fs
mov
js
mov
cmp
outsb
nopl
icebp
cwtl
pop
stos
sahf
scas
jg
sbb
or
rcrb
sub
pop
pop
sub
or
out
lcall
or
cltd
sub
xor
mov
mov
add
add
push
xlat
inc
ljmp
js
into
adc
outsl
fidivs
sbb
xor
mov
jne
fildl
pop
sbb
mov
cli
pop
orb
daa
xor
mov
insw
loope
mov
dec
leave
dec
icebp
jnp
inc
int3
dec
add
dec
pop
fisubs
aam
inc
and
xchg
jnp
in
and
cltd
or
sub
daa
mov
push
add
adc
cs
jl
adc
test
popf
add
sbb
rclb
sti
sbb
xchg
or
out
dec
lock
dec
add
push
push
and
cmc
mov
aas
xor
mov
cmp
aaa
jno
adc
add
clc
sarb
jno
push
jp
cmp
adc
lret
neg
and
int3
ret
pop
mov
loop
movsl
sbbb
cmp
lods
mov
jne
loop
xchg
push
lcall
outsl
inc
jmp
cmc
mulb
xor
jno
cmc
les
aas
rclb
dec
add
in
je
paddb
push
push
gs
adc
repnz
inc
vmwrite
push
sti
std
pusha
out
fdivs
jmp
stc
repnz
cli
cs
sbb
in
test
add
js
fs
aam
xlat
aam
mov
pop
inc
push
add
ffreep
repnz
jmp
and
aas
or
cmpsl
mov
cmpsl
sbbl
lods
arpl
pop
cmp
gs
bound
mov
ds
mov
das
rcrl
jge
and
jbe
adc
arpl
fimull
repz
sub
cli
enter
icebp
add
lahf
ljmp
xor
sub
jbe
hlt
dec
add
mov
inc
sti
in
sub
xor
in
hlt
xchg
sti
rol
adc
jb
mov
dec
xchg
in
mov
cs
mov
dec
xchg
aas
mov
cmp
rcl
iret
xchg
inc
cmp
loop
shlb
or
pop
nop
inc
adc
aad
in
mov
lds
pop
imul
popa
stos
insb
add
push
pop
loopne
insl
mov
add
test
xchg
aaa
mov
pop
pop
xchg
jp
and
or
xchg
leave
jne
xchg
sbb
lods
jle
fs
mov
js
mov
cmp
outsb
nopl
icebp
cwtl
pop
stos
sahf
scas
jg
sbb
or
rcrb
sub
pop
pop
sub
or
out
lcall
or
cltd
sub
xor
mov
mov
add
add
push
xlat
inc
ljmp
js
into
adc
outsl
fidivs
sbb
xor
mov
jne
fildl
pop
sbb
mov
cli
pop
orb
daa
xor
mov
insw
loope
mov
dec
leave
dec
icebp
jnp
inc
int3
dec
add
dec
pop
fisubs
aam
inc
and
xchg
jnp
in
and
cltd
or
sub
daa
mov
push
add
adc
cs
jl
adc
test
popf
add
sbb
rclb
sti
sbb
xchg
or
out
dec
lock
dec
add
push
push
and
cmc
mov
aas
xor
mov
cmp
aaa
jno
adc
add
clc
sarb
jno
push
jp
cmp
adc
lret
neg
and
int3
ret
pop
mov
loop
movsl
sbbb
cmp
lods
mov
jne
loop
xchg
push
lcall
outsl
inc
jmp
cmc
mulb
xor
jno
cmc
les
aas
rclb
dec
add
in
je
paddb
push
push
gs
adc
repnz
inc
vmwrite
push
sti
std
pusha
out
fdivs
jmp
stc
repnz
cli
cs
sbb
in
test
add
js
fs
aam
xlat
aam
mov
pop
inc
push
add
ffreep
repnz
jmp
and
aas
or
cmpsl
mov
cmpsl
sbbl
lods
arpl
pop
cmp
gs
bound
mov
ds
mov
das
rcrl
jge
and
jbe
adc
arpl
fimull
repz
sub
cli
enter
icebp
add
lahf
ljmp
xor
sub
jbe
hlt
dec
add
mov
inc
sti
in
sub
xor
in
hlt
xchg
sti
rol
adc
jb
mov
dec
xchg
in
mov
cs
mov
dec
xchg
aas
mov
cmp
rcl
iret
xchg
inc
cmp
loop
shlb
or
pop
nop
inc
adc
aad
in
mov
lds
pop
imul
popa
stos
insb
add
push
pop
loopne
insl
mov
add
test
xchg
aaa
mov
pop
pop
xchg
jp
and
or
xchg
leave
jne
xchg
sbb
lods
jle
fs
mov
js
mov
cmp
outsb
nopl
icebp
cwtl
pop
stos
sahf
scas
jg
sbb
or
rcrb
sub
pop
pop
sub
or
out
lcall
or
cltd
sub
xor
mov
mov
add
add
push
xlat
inc
ljmp
js
into
adc
outsl
fidivs
sbb
xor
mov
jne
fildl
pop
sbb
mov
cli
pop
orb
daa
xor
mov
insw
loope
mov
dec
leave
dec
icebp
jnp
inc
int3
dec
add
dec
pop
fisubs
aam
inc
and
xchg
jnp
in
and
cltd
or
sub
daa
mov
push
add
adc
cs
jl
adc
test
popf
add
sbb
rclb
sti
sbb
xchg
or
out
dec
lock
dec
add
push
push
and
cmc
mov
aas
xor
mov
cmp
aaa
jno
adc
add
clc
sarb
jno
push
jp
cmp
adc
lret
neg
and
int3
ret
pop
mov
loop
movsl
sbbb
cmp
lods
mov
jne
loop
xchg
push
lcall
outsl
inc
jmp
cmc
mulb
xor
jno
cmc
les
aas
rclb
dec
add
in
je
paddb
push
push
gs
adc
repnz
inc
vmwrite
push
sti
std
pusha
out
fdivs
jmp
stc
repnz
cli
cs
sbb
in
test
add
js
fs
aam
xlat
aam
mov
pop
inc
push
add
ffreep
repnz
jmp
and
aas
or
cmpsl
mov
cmpsl
sbbl
lods
arpl
pop
cmp
gs
bound
mov
ds
mov
das
rcrl
jge
and
jbe
adc
arpl
fimull
repz
sub
cli
enter
icebp
add
lahf
ljmp
xor
sub
jbe
hlt
dec
add
mov
inc
sti
in
sub
xor
in
hlt
xchg
sti
rol
adc
jb
mov
dec
xchg
in
mov
cs
mov
dec
xchg
aas
mov
cmp
rcl
iret
xchg
inc
cmp
loop
shlb
or
pop
nop
inc
adc
aad
in
mov
lds
pop
imul
popa
stos
insb
add
push
pop
loopne
insl
mov
add
test
xchg
aaa
mov
pop
pop
xchg
jp
and
or
xchg
leave
jne
xchg
sbb
lods
jle
fs
mov
js
mov
cmp
outsb
nopl
icebp
cwtl
pop
stos
sahf
scas
jg
sbb
or
rcrb
sub
pop
pop
sub
or
out
lcall
or
cltd
sub
xor
mov
mov
add
add
push
xlat
inc
ljmp
js
into
adc
outsl
fidivs
sbb
xor
mov
jne
fildl
pop
sbb
mov
cli
pop
orb
daa
xor
mov
insw
loope
mov
dec
leave
dec
icebp
jnp
inc
int3
dec
add
dec
pop
fisubs
aam
inc
and
xchg
jnp
in
and
cltd
or
sub
daa
mov
push
add
adc
cs
jl
adc
test
popf
add
sbb
rclb
sti
sbb
xchg
or
out
dec
lock
dec
add
push
push
and
cmc
mov
aas
xor
mov
cmp
aaa
jno
adc
add
clc
sarb
jno
push
jp
cmp
adc
lret
neg
and
int3
ret
pop
mov
loop
movsl
sbbb
cmp
lods
mov
jne
loop
xchg
push
lcall
outsl
inc
jmp
cmc
mulb
xor
jno
cmc
les
aas
rclb
dec
add
in
je
paddb
push
push
gs
adc
repnz
inc
vmwrite
push
sti
std
pusha
out
fdivs
jmp
stc
repnz
cli
cs
sbb
in
test
add
js
fs
aam
xlat
aam
mov
pop
inc
push
add
ffreep
repnz
jmp
and
aas
or
cmpsl
mov
cmpsl
sbbl
lods
arpl
pop
cmp
gs
bound
mov
ds
mov
das
rcrl
jge
and
jbe
adc
arpl
fimull
repz
sub
cli
enter
icebp
add
lahf
ljmp
xor
sub
jbe
hlt
dec
add
mov
inc
sti
in
sub
xor
in
hlt
xchg
sti
rol
adc
jb
mov
dec
xchg
in
mov
cs
mov
dec
xchg
aas
mov
cmp
rcl
iret
xchg
inc
cmp
loop
shlb
or
pop
nop
inc
adc
aad
in
mov
lds
pop
imul
popa
stos
insb
add
push
pop
loopne
insl
mov
add
test
xchg
aaa
mov
pop
pop
xchg
jp
and
or
xchg
leave
jne
xchg
sbb
lods
jle
fs
mov
js
mov
cmp
outsb
nopl
icebp
cwtl
pop
stos
sahf
scas
jg
sbb
or
rcrb
sub
pop
pop
sub
or
out
lcall
or
cltd
sub
xor
mov
mov
add
add
push
xlat
inc
ljmp
js
into
adc
outsl
fidivs
sbb
xor
mov
jne
fildl
pop
sbb
mov
cli
pop
orb
daa
xor
mov
insw
loope
mov
dec
leave
dec
icebp
jnp
inc
int3
dec
add
dec
pop
fisubs
aam
inc
and
xchg
jnp
in
and
cltd
or
sub
daa
mov
push
add
adc
cs
jl
adc
test
popf
add
sbb
rclb
sti
sbb
xchg
or
out
dec
lock
dec
add
push
push
and
cmc
mov
aas
xor
mov
cmp
aaa
jno
adc
add
clc
sarb
jno
push
jp
cmp
adc
lret
neg
and
int3
ret
pop
mov
loop
movsl
sbbb
cmp
lods
mov
jne
loop
xchg
push
lcall
outsl
inc
jmp
cmc
mulb
xor
jno
cmc
les
aas
rclb
dec
add
in
je
paddb
push
push
gs
adc
repnz
inc
vmwrite
push
sti
std
pusha
out
fdivs
jmp
stc
repnz
cli
cs
sbb
in
test
add
js
fs
aam
xlat
aam
mov
pop
inc
push
add
ffreep
repnz
jmp
and
aas
or
cmpsl
mov
cmpsl
sbbl
lods
arpl
pop
cmp
gs
bound
mov
ds
mov
das
rcrl
jge
and
jbe
adc
arpl
fimull
repz
sub
cli
enter
icebp
add
lahf
ljmp
xor
sub
jbe
hlt
dec
add
mov
inc
sti
in
sub
xor
in
hlt
xchg
sti
rol
adc
jb
mov
dec
xchg
in
mov
cs
mov
dec
xchg
aas
mov
cmp
rcl
iret
xchg
inc
cmp
loop
shlb
or
pop
nop
inc
adc
aad
in
mov
lds
pop
imul
popa
stos
insb
add
push
pop
loopne
insl
mov
add
test
xchg
aaa
mov
pop
pop
xchg
jp
and
or
xchg
leave
jne
xchg
sbb
lods
jle
fs
mov
js
mov
cmp
outsb
nopl
icebp
cwtl
pop
stos
sahf
scas
jg
sbb
or
rcrb
sub
pop
pop
sub
or
out
lcall
or
cltd
sub
xor
mov
mov
add
add
push
xlat
inc
ljmp
js
into
adc
outsl
fidivs
sbb
xor
mov
jne
fildl
pop
sbb
mov
cli
pop
orb
daa
xor
mov
insw
loope
mov
dec
leave
dec
icebp
jnp
inc
int3
dec
add
dec
pop
fisubs
aam
inc
and
xchg
jnp
in
and
cltd
or
sub
daa
mov
push
add
adc
cs
jl
adc
test
popf
add
sbb
rclb
sti
sbb
xchg
or
out
dec
lock
dec
add
push
push
and
cmc
mov
aas
xor
mov
cmp
aaa
jno
adc
add
clc
sarb
jno
push
jp
cmp
adc
lret
neg
and
int3
ret
pop
mov
loop
movsl
sbbb
cmp
lods
mov
jne
loop
xchg
push
lcall
outsl
inc
jmp
cmc
mulb
xor
jno
cmc
les
aas
rclb
dec
add
in
je
paddb
push
push
gs
adc
repnz
inc
vmwrite
push
sti
std
pusha
out
fdivs
jmp
stc
repnz
cli
cs
sbb
in
test
add
js
fs
aam
xlat
aam
mov
pop
inc
push
add
ffreep
repnz
jmp
and
aas
or
cmpsl
mov
cmpsl
sbbl
lods
arpl
pop
cmp
gs
bound
mov
ds
mov
das
rcrl
jge
and
jbe
adc
arpl
fimull
repz
sub
cli
enter
icebp
add
lahf
ljmp
xor
sub
jbe
hlt
dec
add
mov
inc
sti
in
sub
xor
in
hlt
xchg
sti
rol
adc
jb
mov
dec
xchg
in
mov
cs
mov
dec
xchg
aas
mov
cmp
rcl
iret
xchg
inc
cmp
loop
shlb
or
pop
nop
inc
adc
aad
in
mov
lds
pop
imul
popa
stos
insb
add
push
pop
loopne
insl
mov
add
test
xchg
aaa
mov
pop
pop
xchg
jp
and
or
xchg
leave
jne
xchg
sbb
lods
jle
fs
mov
js
mov
cmp
outsb
nopl
icebp
cwtl
pop
stos
sahf
scas
jg
sbb
or
rcrb
sub
pop
pop
sub
or
out
lcall
or
cltd
sub
xor
mov
mov
add
add
push
xlat
inc
ljmp
js
into
adc
outsl
fidivs
sbb
xor
mov
jne
fildl
pop
sbb
mov
cli
pop
orb
daa
xor
mov
insw
loope
mov
dec
leave
dec
icebp
jnp
inc
int3
dec
add
dec
pop
fisubs
aam
inc
and
xchg
jnp
in
and
cltd
or
sub
daa
mov
push
add
adc
cs
jl
adc
test
popf
add
sbb
rclb
sti
sbb
xchg
or
out
dec
lock
dec
add
push
push
and
cmc
mov
aas
xor
mov
cmp
aaa
jno
adc
add
clc
sarb
jno
push
jp
cmp
adc
lret
neg
and
int3
ret
pop
mov
loop
movsl
sbbb
cmp
lods
mov
jne
loop
xchg
push
lcall
outsl
inc
jmp
cmc
mulb
xor
jno
cmc
les
aas
rclb
dec
add
in
je
paddb
push
push
gs
adc
repnz
inc
vmwrite
push
sti
std
pusha
out
fdivs
jmp
stc
repnz
cli
cs
sbb
in
test
add
js
fs
aam
xlat
aam
mov
pop
inc
push
add
ffreep
repnz
jmp
and
aas
or
cmpsl
mov
cmpsl
sbbl
lods
arpl
pop
cmp
gs
bound
mov
ds
mov
das
rcrl
jge
and
jbe
adc
arpl
fimull
repz
sub
cli
enter
icebp
add
lahf
ljmp
xor
sub
jbe
hlt
dec
add
mov
inc
sti
in
sub
xor
in
hlt
xchg
sti
rol
adc
jb
mov
dec
xchg
in
mov
cs
mov
dec
xchg
aas
mov
cmp
rcl
iret
xchg
inc
cmp
loop
shlb
or
pop
nop
inc
adc
aad
in
mov
lds
pop
imul
popa
stos
insb
add
push
pop
loopne
insl
mov
add
inc
add
insb
inc
add
insb
inc
add
inc
add
insb
inc
add
insb
inc
add
add
add
insb
inc
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
outsb
jae
popa
jb
cs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
addr16
jb
push
inc
popa
jb
push
xor
imul
