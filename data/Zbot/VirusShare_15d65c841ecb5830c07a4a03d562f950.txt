stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
xor
mov
mov
pusha
call
add
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
push
push
call
add
pop
mov
pop
ret
add
add
mov
sub
push
push
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
ret
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
iret
inc
and
push
pop
sub
mov
mov
shl
xor
sub
mov
mov
movl
mov
sub
je
sub
lea
mov
sub
je
mov
sub
jne
push
pop
je
popf
push
pushl
decl
ret
arpl
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
pushl
push
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
add
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
add
lea
sub
sub
mov
pop
mov
mov
lea
mov
push
mov
xorl
pop
sub
or
mov
test
je
add
mov
push
push
push
pop
push
pop
stos
shr
stos
shr
stos
shr
stos
pop
pop
subl
neg
clc
sbb
pushl
lea
lea
pop
repz
jmp
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
pushl
push
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
pushl
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
push
push
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
sub
add
fisubs
add
je
add
test
add
or
add
ljmp
add
and
add
and
add
and
add
and
add
add
out
and
add
add
sbb
add
pop
and
add
add
lret
add
add
add
and
add
and
add
and
add
add
dec
and
add
and
add
and
add
and
add
and
add
add
add
add
xor
add
and
add
add
add
add
outsb
and
add
add
add
and
add
and
add
and
add
add
adc
add
add
mov
add
add
add
add
add
nop
and
add
add
add
add
jle
add
movsb
and
add
add
fisubs
add
je
add
test
add
or
add
ljmp
add
and
add
and
add
and
add
and
add
add
out
and
add
add
sbb
add
pop
and
add
add
lret
add
add
add
and
add
and
add
and
add
add
dec
and
add
and
add
and
add
and
add
and
add
add
add
add
xor
add
and
add
add
add
add
outsb
and
add
add
add
inc
gs
je
imul
inc
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
je
jne
jb
outsb
je
jb
arpl
jae
push
add
outsl
jae
dec
popa
outsb
fs
gs
add
outsb
fs
insb
outsl
jae
add
add
imul
jb
je
arpl
add
rolb
insb
outsl
bound
dec
outsl
arpl
add
push
jb
jbe
je
push
jb
imul
inc
add
add
popa
jo
jb
add
call
inc
imul
bound
gs
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
je
push
gs
popa
jae
inc
jb
outsl
jb
add
popa
je
inc
imul
jns
add
pop
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
dec
add
popa
insb
inc
insb
popa
addr16
add
inc
jne
jb
outsb
je
push
add
and
gs
outsl
insl
insl
inc
jb
popa
imul
movsl
add
je
gs
imul
add
gs
outsl
jbe
inc
imul
jns
add
call
inc
imul
bound
gs
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
push
dec
inc
dec
xor
cs
insb
add
pop
or
jae
dec
gs
popa
addr16
add
movl
outsl
insl
gs
mov
inc
imul
dec
gs
popa
addr16
add
xchg
inc
gs
imul
js
push
add
das
push
inc
insb
outsl
jae
inc
gs
je
jo
add
push
gs
outsl
arpl
add
xchg
push
push
gs
jae
addr16
add
jae
push
gs
jne
jae
jb
outsl
jae
add
ja
jo
imul
pop
dec
outsl
popa
fs
jne
jae
jb
add
pop
dec
jae
imul
jnp
inc
gs
imul
outsb
addr16
add
mov
dec
jae
imul
jae
popa
addr16
add
push
push
inc
push
xor
cs
insb
add
add
inc
fs
jae
inc
jns
popa
insl
gs
add
add
je
gs
imul
addr16
gs
jns
popa
insl
add
pop
add
je
popa
insl
gs
jns
jns
gs
add
dec
push
push
push
dec
inc
dec
cs
insb
add
dec
jae
popa
je
push
push
inc
add
push
dec
push
push
dec
cs
insb
add
add
sti
add
dec
mov
or
pop
jge
es
mov
movsb
cltd
rolb
idivl
xlat
psubusb
mov
pop
cmp
add
jno
aas
mov
fisubrl
pusha
adc
xchg
mov
test
lahf
out
lahf
fdivs
push
mov
aaa
jmp
leave
lods
push
push
shrl
sub
add
xor
rorl
data16
hlt
pushf
mov
sub
jge
xor
movl
xchg
fcomi
ja
adc
jmp
dec
sub
xchg
push
sub
push
clc
movsb
xor
dec
mov
cmp
mov
loop
cmc
mov
lock
data16
popa
push
pop
pushf
push
pop
xor
daa
mov
inc
cmpsl
aas
push
jle
and
iret
and
or
mov
lock
ret
mov
add
popf
insb
mov
and
not
jecxz
iret
add
inc
pop
or
xlat
movsl
pop
push
xor
mov
jecxz
or
pop
mov
ss
loopne
xor
es
clc
ja
or
test
push
int
lods
subl
or
pop
inc
add
js
roll
lcall
mov
jnp
popa
das
aas
rorl
jo
popf
jne
mov
fsubr
arpl
ss
mov
sti
pusha
dec
movsb
cli
test
lods
sbb
nop
dec
adc
dec
bound
jbe
ljmp
mov
or
rorl
movsb
loopne
dec
out
or
cli
inc
dec
pop
dec
push
std
lds
stos
add
pop
push
das
add
test
cmp
das
lods
cmp
sub
add
add
add
add
add
xor
add
add
add
jo
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
or
add
adc
add
or
add
and
add
or
add
add
add
add
add
add
add
add
push
popa
add
test
add
clc
xchg
add
add
add
add
add
or
add
mov
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
xchg
xchg
xchg
add
scas
lods
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
stos
lods
lods
mov
mov
cltd
pop
xchg
xchg
xchg
or
jg
jp
jl
lods
lods
lods
add
cmpsl
push
mov
mov
mov
les
int3
into
int3
rcl
in
rcl
shl
rcl
shl
into
into
int
mov
leave
out
mov
in
mov
mov
lods
lods
lods
lea
fwait
lcall
add
add
add
push
add
add
add
add
add
add
add
add
mov
sahf
add
mov
mov
lret
lret
leave
not
rcl
cld
fcom
fdivr
fcom
fdivr
fdivr
aam
rcl
iret
dec
int
aam
rcl
iret
inc
ret
mov
mov
scas
iret
mov
mov
and
add
push
add
add
add
add
add
add
add
add
lods
lods
lods
add
scas
lods
sbb
mov
jnp
mov
sar
mov
leave
leave
lret
dec
iret
sar
aad
xlat
fcomp
fdivr
aam
aam
int3
int
dec
into
int
aad
dec
int3
int3
inc
mov
mov
ljmp
test
ljmp
pop
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
push
pop
add
dec
add
push
add
push
or
inc
or
sbb
push
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
leave
enter
int3
call
rcl
call
fcomp
fcomp
call
aam
dec
into
int3
dec
leave
lret
int3
int3
inc
rol
mov
mov
jmp
mov
cltd
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
imul
bound
pop
fs
aas
inc
push
sbb
movntps
aaa
ss
cmp
cmp
and
and
pop
pop
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
rol
leave
enter
sar
aad
aam
aam
aad
rcl
sar
leave
enter
inc
ret
mov
mov
ljmp
mov
pushf
xchg
xchg
xchg
lcall
test
pop
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
arpl
push
push
push
add
jno
jle
jle
jge
jge
jno
jo
popa
bound
push
dec
dec
xchg
cmp
mov
jo
jo
bound
pusha
inc
inc
inc
xor
add
add
add
add
movsb
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
enter
leave
dec
leave
lret
dec
leave
leave
inc
mov
mov
scas
lods
scas
jmp
cltd
call
xchg
xchg
xchg
xchg
cltd
lcall
cmp
prefetch
add
add
add
add
add
add
add
add
add
add
add
add
outsl
outsl
outsb
add
pop
or
pusha
nop
mov
incb
jnp
idivb
jnp
outsl
jo
out
addr16
push
ret
jge
jns
jp
fs
inc
cmp
pop
sbb
adc
adc
stos
stos
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
cmpsb
cmpsl
lcall
xchg
xchg
incl
addl
xchg
xchg
xchg
mov
mov
xchg
mov
jp
js
cs
add
add
add
add
add
add
add
add
add
add
mov
push
push
addb
in
mov
mov
addl
mov
xchg
jg
jb
jb
jne
jae
jle
jg
addb
addr16
cmp
ss
cmp
mov
test
icebp
lods
stos
stos
sti
stos
lods
lods
stos
lods
stos
stos
test
std
movsb
mov
fwait
xchg
xchg
xchg
decl
jle
jns
jp
jp
jns
mov
cwtl
movsb
mov
scas
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
sbb
add
add
add
add
add
add
add
add
push
pop
adc
movsb
cmpsl
out
scas
mov
xchg
nop
xchg
incl
xchg
std
xchg
xchg
xchg
std
xchg
cwtl
cwtl
stc
xchg
xchg
xchg
in
mov
or
addb
mov
pop
push
or
inc
inc
dec
imul
test
xchg
leave
fwait
fwait
cltd
fistps
fwait
lcall
mov
decl
mov
cltd
fwait
cltd
jmp
scas
scas
mov
mov
mov
mov
mov
std
mov
mov
mov
jp
or
add
add
pop
pop
adc
cmpsl
scas
call
cltd
xchg
cwtl
incl
test
decb
xchg
xchg
popf
sahf
sahf
std
movsl
movsl
movsl
stc
mov
xchg
xchg
in
xchg
xchg
in
xchg
jne
prefetchw
add
inc
or
or
daa
daa
push
dec
dec
dec
data16
jno
mov
xchg
rclb
xchg
xchg
std
nop
decb
xchg
lcall
cmpsl
test
stos
cmpsl
lods
pushl
movsl
scas
mov
xchg
stos
std
roll
mov
mov
ljmp
mov
add
pop
adc
scas
mov
ret
mov
lcall
mov
decl
nop
nop
call
xchg
xchg
popf
sahf
popf
movsb
movsb
mov
movsl
movsb
movsl
notl
jnp
movsl
push
push
push
outsl
dec
dec
dec
popaw
popa
popa
jne
jb
mov
lahf
addl
int
xchg
xchg
in
xchg
xchg
testl
mov
jmp
mov
mov
pop
nop
mov
xor
ja
mov
movsl
mov
mov
mov
mov
movsl
mov
add
pop
pop
adc
mov
lcall
mov
call
xchg
xchg
call
xchg
cltd
lcall
sahf
sahf
mov
std
mov
lcall
nop
nop
xchg
les
fwait
in
xchg
xchg
out
lea
nop
stc
xchg
test
std
xchg
jb
cltd
imul
ljmp
jns
mov
jae
mov
outsl
ljmp
adc
lods
or
lods
or
pushl
mov
mov
pushf
mov
movsl
mov
add
mov
add
pop
adc
mov
ljmp
lahf
call
xchg
xchg
lcall
sahf
popf
jmp
sahf
sahf
lcall
xchg
xchg
call
xchg
xchg
call
cltd
cld
xchg
cwtl
popf
stc
sahf
cltd
sahf
stc
sahf
xchg
pushf
cld
popf
mov
xchg
push
xchg
push
jg
cwtl
dec
jp
cltd
cmp
cltd
sub
pushf
push
push
jmp
ljmp
adc
lods
adc
scas
adc
mov
imul
mov
insl
mov
fwait
lods
mov
scas
lods
scas
movsb
mov
movsb
add
add
add
add
mov
pop
pop
adc
mov
jmp
xchg
xchg
lcall
sahf
mov
jmp
mov
cwtl
decl
mov
decl
jbe
lcall
xchg
dec
jp
xchg
jo,pt
nop
cs
decl
pop
call
push
pop
call
add
lahf
add
ljmp
pushl
sbb
jo
mov
and
mov
and
sarl
inc
xchg
scas
mov
scas
lods
mov
mov
movsl
movsb
add
pop
pop
adc
lods
mov
shlb
sahf
pushf
popf
jmp
cmpsb
cmpsl
jmp
test
test
pushf
pushf
pushf
decl
pop
js
mov
decl
sub
mov
pusha
incl
or
incl
add
xchg
push
decl
add
xchg
add
lcall
jmp
push
outsl
pushl
sub
mov
sub
inc
sub
sub
dec
cs
enter
lods
mov
mov
lret
movsb
dec
mov
movsb
movsl
add
push
push
adc
test
ljmp
lahf
jmp
test
ljmp
lods
lods
pushl
lods
scas
jmp
mov
xchg
push
incl
or
addb
incl
push
incl
add
xchg
add
xchg
add
cltd
add
sahf
add
add
scas
adc
mov
aaa
cmp
aaa
test
enter
lret
dec
cmp
call
cmp
call
cmp
call
dec
xchg
dec
mov
std
mov
mov
movsl
mov
mov
add
dec
dec
adc
test
mov
mov
lahf
cltd
popf
ljmp
lods
scas
pushl
mov
pushl
mov
ljmp
js
decl
or
mov
pop
decl
or
xchg
push
incl
add
mov
push
call
add
popf
add
add
test
pop
ljmp
jno
ret
dec
inc
mov
int3
inc
call
inc
call
dec
call
dec
xchg
call
dec
xchg
fisttpl
fisttpl
fsts
call
xchg
std
mov
mov
movsb
movsb
movsl
arpl
mov
add
add
add
lcall
adc
jnp
mov
test
lahf
ljmp
mov
pushl
mov
pushl
mov
mov
movsb
mov
decl
sbb
call
push
pop
decl
or
lea
push
call
add
sahf
add
add
test
pusha
ljmp
add
js
into
dec
call
push
cwtl
fcoms
fistl
fstl
ficomps
jmp
pop
pushf
jmp
pop
lahf
jmp
pop
mov
fadds
ret
mov
mov
jne
lahf
sahf
or
cwtl
xchg
xchg
add
inc
adc
ja
sahf
lcall
sahf
fwait
sahf
ljmp
mov
pushl
mov
mov
pushl
xchg
movsb
call
and
and
call
and
sbb
nop
or
xchg
add
add
fwait
add
mov
add
lods
add
mov
fs
mov
xor
call
pop
lcall
mov
jmp
data16
jecxz
cmpsb
jmp
cmpsl
call
push
stos
faddl
ret
mov
cmpsb
cmpsl
mov
lahf
sahf
add
inc
inc
adc
jp
xchg
lcall
pushf
sahf
ljmp
mov
pushl
mov
mov
mov
mov
jle
xchg
sub
cltd
outsb
lcall
sub
xchg
push
call
add
fwait
add
mov
add
stos
add
mov
pushl
adc
rolb
fldt
jmp
outsb
lods
jmp
jo
call
jb
jmp
scas
jmp
mov
out
jne
in
jbe
out
jae
jmp
mov
mov
cmpsb
cmpsl
lcall
mov
add
add
add
jg
cmp
adc
insl
js
mov
lcall
mov
mov
mov
mov
mov
mov
mov
cmpsl
lods
lcall
outsb
lcall
cmp
xor
cltd
sbb
pop
call
add
add
stos
add
mov
arpl
mov
fs
mov
sbb
ficoml
jmp
js
jmp
jle
in
xorb
lock
push
test
call
mov
inc
mov
test
daa
mov
mov
add
arpl
add
aaa
cmp
pop
pop
push
jne
jge
out
test
xchg
xchg
xchg
pushl
mov
mov
mov
ret
inc
mov
jmp
cmp
movsb
inc
jge
mov
cmp
lcall
lcall
add
stos
add
scas
add
mov
fs
mov
add
iret
daa
cmp
mov
in
mov
push
mov
push
xchg
sar
xchg
sar
xchg
push
nop
clc
xchg
clc
out
mov
inc
ret
lods
stos
test
xor
sahf
add
add
add
inc
aas
add
xor
push
inc
dec
inc
jb
pop
dec
in
push
call
mov
mov
mov
mov
inc
ret
ret
mov
jle
lcall
dec
cmp
dec
cmp
xor
popa
lcall
add
add
stos
add
mov
mov
add
enter
xor
out
xchg
vlddqu
push
fwait
push
pushf
enter
leave
clc
popf
lret
lahf
int
cld
lahf
int
cld
lcall
fbstp
enter
mov
sahf
lahf
mov
add
add
add
xor
or
cmp
outsb
dec
dec
dec
jecxz
pop
call
mov
mov
mov
sar
inc
mov
mov
mov
ljmp
push
xchg
mov
pop
pop
lcall
add
add
mov
mov
add
movl
je
fiadds
out
mov
push
cmpsb
int3
push
movsl
into
push
cmpsb
into
cli
test
into
cld
test
sar
std
stos
iret
test
push
popf
mov
dec
lret
mov
mov
mov
xchg
xchg
add
cltd
cltd
add
add
add
xor
add
sub
or
inc
bound
push
xlat
je
jb
mov
rol
ret
mov
ret
ret
inc
mov
enter
ret
rol
mov
cmpsl
jmp
mov
scas
dec
test
sahf
sbb
pop
jmp
add
mov
fs
mov
add
int3
add
add
adc
out
pop
cmpsl
push
sahf
lret
sti
lods
aam
cli
scas
cli
scas
sar
cld
mov
cld
mov
std
mov
cld
mov
mov
mov
mov
push
cmpsb
jmp
mov
call
lret
mov
mov
sahf
mov
xchg
or
add
add
xor
add
push
add
dec
dec
outsb
outsb
jo
cwtl
fwait
cwtl
rol
fcom
jmp
fdiv
iret
rcl
std
int3
int3
int3
dec
lret
lret
dec
leave
leave
inc
leave
leave
mov
scas
jmp
push
mov
lods
jg,pt
lahf
or
pop
ljmp
add
add
lds
imul
xlat
add
fiadds
jae
jmp
jae
cld
scas
sar
cld
mov
mov
cld
mov
std
mov
fdivr
std
rcr
std
mov
lret
call
lret
int3
mov
lahf
sahf
jo
xchg
xchg
or
add
add
xor
add
add
or
movb
loop
out
call
test
in
leave
fsub
fsub
fcmovu
xlat
cli
aam
std
int
sar
mov
imul
jmp
add
mov
mov
add
leave
add
add
fldl
jbe
in
js
out
xor
sti
mov
loope
std
ret
std
inc
inc
fdivrp
dec
loopne
dec
fdivrp
std
fdivrp
std
leave
dec
cli
mov
leave
call
lret
into
mov
mov
xchg
adc
add
add
incl
incb
std
incl
hlt
cmc
testb
in
jmp
jmp
out
sub
in
in
dec
ljmp
xchg
out
out
jecxz
out
fsubr
ret
stc
stos
outsl
xchg
cmpsl
cmp
mov
add
test
popa
pushl
add
les
imul
add
loopne
ja
ljmp
cld
mov
jecxz
std
lret
in
dec
in
dec
in
std
int
dec
jecxz
std
int3
loopne
dec
jecxz
dec
loop
shl
shl
sti
ret
out
mov
inc
ret
cmpsb
cmpsl
cmpsl
mov
cwtl
xchg
add
add
add
std
std
add
std
std
add
clc
testl
repnz
icebp
push
out
lock
pop
out
lock
cmp
out
out
pop
fsubp
loope
mov
xchg
sti
mov
pop
pop
jmp
add
mov
data16
mov
add
add
fildl
jne
jecxz
jnp
jmp
jl
negl
cli
mov
cld
iret
in
shl
call
call
std
shl
aad
call
call
fucomi
fucompp
fucomi
shl
push
ret
aad
in
fcos
lret
repz
stos
fwait
xchg
xchg
xchg
and
xchg
xchg
add
cld
add
cld
stc
add
cld
clc
add
div
or
aam
xor
mov
xchg
negb
add
cmpsl
add
lods
add
mov
add
leave
add
add
fildl
ja
out
jns
in
sbb
stc
jne
sti
std
fld1
std
fucomi
fldpi
std
fucomi
std
fucomi
fsubr
std
fucomip
fucomip
fucomip
cld
shl
push
ret
call
ror
clc
lods
lods
lods
lods
xchg
xchg
xchg
jo,pn
outsl
add
add
add
loopne
add
mov
xchg
lods
jnp
repnz
and
sahf
add
cmpsl
add
mov
mov
add
int3
add
add
filds
jae
call
sub
cld
aam
fsubrp
std
fucomp
fucomi
fucomi
fsub
in
aam
cld
iret
loopne
sti
iret
loopne
test
cmc
ret
xlat
in
mov
fcos
xlat
xlat
xlat
sti
mov
mov
lcall
add
add
add
xlat
add
enter
mov
sahf
jmp
sub
lahf
add
test
add
mov
add
iret
add
xlat
add
loop
js
ljmp
sti
cwtl
sti
lret
cli
int3
loope
sti
clc
mov
aam
repz
sar
repnz
int
call
mov
sar
call
shl
ljmp
in
mov
mov
xchg
add
add
add
lret
add
rol
mov
movsl
loopne
xor
pop
ljmp
add
mov
add
into
or
rorl
jbe
jns
loop
cmp
call
mov
ljmp
std
loope
cld
loopne
ret
mov
neg
mov
leave
ljmp
rcr
loopne
shl
aad
out
loopne
in
in
test
out
out
popf
call
lret
lods
lods
lods
adc
cmpsl
cmpsl
cmpsl
add
ret
rolb
ret
ret
ret
mov
stos
aam
dec
jg
sahf
sbb
cmpsl
push
push
scas
es
mov
jns
mov
inc
xchg
ret
push
stc
lret
gs
mov
out
mov
mov
leave
lret
int3
rcl
lret
mov
iret
shlb
aam
jg
fcmovu
jb
loopne
gs
jecxz
out
out
call
cmc
cmc
sub
div
and
icebp
icebp
sbb
or
mov
into
add
add
add
mov
rolb
mov
test
lcall
jbe
ljmp
mov
sarb
stos
mov
les
ret
ret
mov
leave
int
ror
into
addr16
iret
iret
push
rcl
rorl
xlat
aad
aam
aad
aam
xlat
daa
xlat
fstp
sbb
adc
in
push
loope
in
out
ljmp
cld
cmc
add
std
add
incb
std
add
mov
mov
mov
stos
scas
xchg
mov
mov
mov
mov
ret
mov
ret
enter
int3
leave
daa
lret
ror
and
aam
sbb
aam
adc
aam
aam
push
rcr
add
add
loopne
add
in
add
in
ljmp
std
add
mov
add
ret
lds
rol
sub
mov
mov
push
ret
or
leave
movl
int3
leave
add
roll
rcl
aam
rcl
aam
aam
aam
xlat
aad
add
fsub
add
aam
add
loopne
add
add
out
add
icebp
repnz
std
std
add
std
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
ret
ret
ret
ret
mov
mov
ja
test
cmpsl
and
add
add
add
add
add
add
add
add
mov
push
sarb
aam
ror
jmp
aam
cmc
rcl
sar
ror
iret
cli
lret
int
stc
int3
lret
lret
hlt
mov
mov
iret
lods
lods
lods
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
addb
add
push
push
add
add
add
add
add
add
add
add
add
mov
mov
mov
enter
into
xlat
xlat
call
xlat
dec
iret
sar
int
into
dec
lret
mov
mov
cld
stos
stos
lods
icebp
cltd
cltd
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
je
jae
jne
gs
dec
dec
inc
cmp
sub
sub
ss
sub
inc
adc
sub
add
add
mov
mov
mov
mov
mov
mov
dec
int3
lret
rcl
call
rcl
dec
lret
vshufpd
mov
mov
test
test
xchg
xchg
cwtl
jmp
jno
xchg
adc
add
xor
add
add
add
add
cmpl
test
jp
push
push
pop
pop
pop
movsb
push
push
push
stos
imul
push
pop
pop
cmp
aaa
cmp
jo
jno
scas
scas
scas
pop
mov
mov
mov
mov
mov
rol
inc
mov
mov
jmp
pushf
lcall
xchg
xchg
fwait
fwait
lcall
dec
dec
dec
movups
xor
add
and
add
adc
add
pop
fwait
fwait
lcall
xchg
cwtl
fcoml
addb
jge
jl
jns
js
jns
jns
jp
jns
jae
jb
push
push
push
cmp
jne
popf
popf
popf
mov
scas
scas
rep
scas
scas
sti
scas
scas
scas
std
test
sahf
sahf
call
test
call
mov
scas
jmp
lods
scas
leave
movsb
cmpsb
cmpsb
cltd
jb
je
adc
adc
add
add
add
add
insl
outsl
outsl
pop
xchg
mov
loop
lcall
mov
nop
sti
xchg
xchg
xchg
lock
nop
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsl
outsb
outsb
orl
lcall
mov
call
sahf
ljmp
test
mov
mov
mov
xlat
cmpsb
mov
addl
add
add
pusha
popa
pusha
or
lods
mov
cmpsl
sahf
mov
decl
nop
mov
xchg
xchg
xchg
std
lahf
popf
sahf
sti
mov
cltd
lcall
push
push
jo
pop
pop
outsl
imul
jle
subl
nop
xchg
lock
mov
lcall
popf
pushl
jo
mov
push
mov
mov
mov
out
scas
stos
insl
test
add
add
add
add
popa
or
mov
in
mov
xchg
call
cwtl
lcall
cwtl
cltd
fwait
fwait
fwait
pushf
lahf
sahf
cli
xchg
xchg
cltd
jmp
xchg
mov
xchg
orb
xchg
push
cld
xchg
pop
cmp
dec
jnp
movsl
inc
jns
scas
aaa
js
mov
jae
mov
outsl
pushl
sbb
mov
mov
scas
scas
jle
mov
add
add
add
popa
pusha
pusha
or
mov
in
movsb
test
lcall
mov
mov
decl
addl
cld
xchg
pusha
test
xchg
dec
jns
cmp
nop
sub
xchg
sbb
punpcklwd
sahf
or
push
pushl
sbb
mov
and
pop
xchg
mov
scas
lods
xchg
sahf
lahf
popf
adc
add
add
pop
pusha
popa
or
lods
mov
test
mov
cmpsb
ljmp
test
cltd
decl
cmp
mov
decl
adc
xchg
push
decl
add
xchg
add
fwait
add
cmpsb
or
jae
mov
das
jle
lds
jge
xor
lret
dec
pop
xchg
inc
test
divl
cmpsl
test
pop
pusha
pop
or
cmpsb
test
test
cmpsb
ljmp
scas
scas
pushl
mov
jmp
inc
jno
mov
pop
decl
or
test
decl
add
xchg
add
mov
add
mov
outsb
inc
ss
inc
mov
into
inc
call
inc
call
inc
xchg
fmuls
call
bound
stc
mov
mov
movsb
movsl
mov
add
add
add
pop
or
popf
mov
ljmp
mov
pushl
mov
stos
lcall
sbb
popa
decl
or
decl
add
lahf
add
cmpsl
add
lods
add
and
iret
dec
xchg
call
pop
fwait
fistpl
fistps
jmp
pop
mov
fildll
int3
test
cld
mov
mov
cmpsb
stos
movsl
xor
add
add
dec
pop
jge
jnp
pushf
xchg
cwtl
jecxz
mov
scas
pushl
mov
mov
jmp
sub
insb
call
cvtdq2ps
xchg
add
popf
add
cmpsb
add
scas
add
mov
xor
jmp
insb
test
out
stos
call
jo
in
jno
jmp
test
std
mov
test
inc
addl
dec
pop
outsb
insl
imul
xchg
cltd
lcall
mov
mov
sar
mov
jmp
je
lahf
cmp
pushf
sub
xchg
or
lcall
ljmp
add
ret
call
inc
xchg
jmp
jns
ljmp
push
xchg
push
mov
fldt
mov
push
cltd
fwait
fwait
add
sub
sub
push
push
dec
pop
pushw
mov
mov
mov
sarb
mov
xchg
jmp
sub
fwait
or
mov
add
mov
fs
mov
adc
jmp
pop
mov
push
xchg
cwtl
push
cwtl
stc
fwait
lret
pushf
lret
cwtl
jmp
lods
inc
mov
stos
popa
lahf
mov
add
xor
xor
pop
pop
pop
push
fisttpl
mov
mov
rol
inc
pushl
push
xchg
lods
dec
cmp
and
add
ljmp
add
mov
add
and
push
mov
into
clc
test
sti
stos
sar
cld
lods
sar
std
lods
sar
sti
cmpsb
int
out
leave
dec
rol
test
popf
sahf
or
add
add
dec
dec
dec
aaa
jb
jb
stos
stos
stos
ror
int3
into
out
int
cmc
lret
sti
enter
enter
mov
mov
lods
inc
cmp
adc
add
mov
arpl
ret
dec
add
fildl
xchg
push
xchg
cld
mov
cld
mov
fdivr
cld
mov
mov
sar
jmp
leave
dec
ret
scas
scas
lods
mov
add
add
add
add
pop
or
rcl
dec
loopne
loope
loopne
loope
fcmovnu
fadd
fcmovnu
fcmovnu
aad
xlat
out
mov
gs
test
push
pop
pushl
add
enter
aad
jb
in
jl
repnz
mov
cld
ret
loop
std
std
loope
std
fdivrp
std
lret
dec
loopne
sti
out
mov
leave
divb
pushf
sahf
sbb
add
add
incl
incb
jmp
out
sbb
jmp
xor
loopne
loop
lds
mov
mov
add
mov
fs
add
iret
add
faddl
je
ljmp
sti
std
iret
out
shl
call
in
std
shl
call
cld
aam
push
fcos
fcmove
sar
mov
mov
add
std
add
incb
cld
std
pop
aam
push
mov
pop
xchg
popf
or
ljmp
add
lds
imul
filds
jne
out
pop
mov
cli
mov
cld
shl
std
fsubr
fucompp
cld
xlat
call
std
fld1
fsub
cld
aam
push
xlat
jmp
rcl
sti
mov
lahf
popf
das
add
add
into
into
into
or
arpl
stos
add
mov
add
add
loop
jns
out
xor
cli
lret
loopne
clc
lret
test
repnz
aad
icebp
ret
out
ret
in
sar
out
aam
ljmp
ljmp
stos
das
incb
aam
aad
mov
je
push
data16
mov
imul
sbb
lret
and
xlat
sub
sti
fists
clc
loop
mov
out
jecxz
lret
jmp
fnstsw
int3
leave
loopne
iret
mov
in
ficompl
in
out
jns
rcl
dec
mov
add
add
mov
inc
mov
movsb
les
pop
xchg
mov
fidivrl
jle
rol
lods
mov
mov
ret
ror
rol
lret
insl
aam
into
pop
aam
rorl
fcomp
cmp
loopne
das
jecxz
frstor
in
icebp
adc
in
jmp
fiaddl
std
std
add
add
add
std
incl
mov
mov
outsb
scas
mov
lods
mov
push
mov
mov
xor
leave
leave
and
rcl
pop
sarl
or
or
int3
into
add
incl
incb
fwait
cltd
cltd
add
mov
or
into
int
add
std
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
lcall
daa
rol
mov
xchg
mov
mov
rol
mov
mov
insb
lods
stos
stos
xor
je
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
enter
sar
aam
std
rcl
sar
iret
into
int
stc
mov
test
jg
push
pop
sbb
add
add
add
add
add
add
add
add
jae
jb
push
dec
dec
das
cs
inc
and
add
add
mov
mov
cmpl
ret
dec
into
into
call
rcl
dec
iret
int
mov
mov
scas
scas
lcall
mov
push
add
add
add
add
jae
jae
xchg
adc
outsb
jo
popa
bound
addr16
outsl
insl
insl
jb
pusha
bound
pop
pusha
pop
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
xchg
lcall
cltd
cltd
lds
jno
daa
daa
daa
das
add
add
add
add
jae
jae
pushf
xchg
lcall
xchg
clc
xchg
or
addb
push
dec
inc
mov
pushf
into
movsb
mov
mov
decb
mov
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorb
movsl
cmpsl
cmpsl
test
mov
xchg
xchg
xchg
cld
pushf
popf
sahf
cmc
cltd
lcall
push
push
push
imul
jle
lea
xchg
notl
mov
pushl
imul
call
stos
stos
lods
add
add
add
scas
test
xchg
xchg
xchg
lcall
fwait
cltd
lcall
lcall
xchg
mov
loope
jne
out
xchg
arpl
std
pushf
inc
ja
cmpsl
cmp
sub
jo
mov
insl
pushl
sahf
scas
lock
mov
imul
int
add
add
test
pop
scas
movsb
stos
test
popf
popf
sahf
jmp
movsl
call
imul
nop
inc
jb
mov
imul
xchg
adc
xchg
or
mov
sbb
pushl
and
jp
les
inc
lcall
stos
stos
stos
or
add
add
pushf
lahf
test
cmpsl
cmpsl
test
scas
scas
scas
pushl
xchg
decl
or
mov
push
decl
add
mov
adc
ret
dec
ds
iret
inc
mov
inc
call
push
xchg
dec
cwtl
mov
mov
mov
movsb
movsl
movsb
push
add
add
push
xchg
xchg
test
lahf
movsb
cld
scas
scas
lods
pushl
mov
ljmp
outsl
call
push
pusha
call
add
mov
add
mov
push
xchg
fistpl
loope
mov
jmp
movsw
call
lcall
cmpsl
cmpsb
cmpsl
pop
add
add
popa
bound
mov
pushf
cld
mov
scas
mov
mov
mov
pushf
dec
jge
popf
xor
lcall
lcall
add
mov
xor
jmp
ja
jmp
mov
out
jle
out
jge
fstps
mov
and
add
add
dec
adc
addr16
mov
mov
mov
mov
rol
mov
bound
lcall
add
ljmp
add
ret
or
dec
xchg
in
mov
push
xchg
cwtl
push
xchg
jmp
cmpsb
inc
mov
movsb
sub
inc
aas
inc
adc
push
xchg
mov
cld
rol
inc
sarb
test
sbb
movsl
add
mov
fs
add
adc
ljmp
clc
lods
iret
cli
lods
sar
cld
scas
sar
std
scas
sar
jmp
leave
inc
mov
movsl
ds
incb
xor
jo
inc
scas
mov
mov
mov
aad
rcl
out
lret
cli
mov
mov
jmp
add
les
imul
call
pop
std
mov
std
ret
inc
fdivr
std
ret
fcos
out
mov
ret
in
test
jg
add
add
stos
stos
lods
add
jmp
or
jmp
out
outsb
fcmovu
fisubl
movsl
outsl
ljmp
add
lret
faddl
cld
mov
dec
in
call
in
std
shl
call
in
aam
push
fdivr
aam
into
in
scas
lods
scas
popa
jg
jg
std
std
add
std
std
push
int3
lret
shrl
sahf
sbb
lods
add
mov
add
loope
js
cmc
push
cmpsb
dec
loopne
aad
std
aad
cld
aam
std
shl
sti
shl
push
leave
fsin
fcmovne
shl
mov
mov
xchg
xchg
xchg
pop
mov
mov
cld
lods
add
mov
push
je
fstpl
cmp
insl
lods
cld
out
mov
shl
jmp
ror
jmp
lret
aam
jmp
fcmovu
scas
push
fwait
lcall
sarb
xchg
dec
and
shll
ja
mov
fdivrs
lret
adc
int
fmul
rcrb
rcl
dec
in
fistpll
out
out
out
in
out
sbb
rol
add
mov
cmp
mov
lods
push
mov
mov
lds
sbb
fstp
bswap
int3
int
aam
aad
std
add
std
incb
stos
std
incb
sarb
add
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
std
adc
xchg
sub
arpl
dec
mov
rcl
repz
rclb
icebp
mov
fidivs
push
cld
xchg
scas
mov
sbb
and
iret
push
pop
push
xchg
jae
cmc
movsb
mov
pop
in
jl
testl
lds
mov
jp
mov
add
inc
push
pop
mov
gs
xchg
mov
xor
call
or
cmp
adc
outsl
push
mov
lea
in
mov
push
add
jno
lret
xchg
icebp
mov
test
xsha256
cmpsb
push
std
push
popf
cmp
mov
mov
fsubrl
push
hlt
pusha
mull
inc
jle
js
movsl
cmp
cltd
pushf
xor
ret
pop
or
mov
js
inc
fsubrs
jge
xchg
scas
xchg
testb
out
stos
sbb
cmp
push
cmp
leave
push
pop
lock
mov
mov
bndstx
and
add
pop
test
ds
and
outsl
and
push
nop
inc
fcmove
jae
out
mov
sbb
dec
lods
jg
fists
mov
es
fldcw
mov
test
jmp
adc
aas
pushf
xor
push
lods
js
mov
lret
into
gs
xchg
out
push
out
mov
outsb
add
cmp
pop
mov
nop
pop
mov
push
mov
lahf
fnstsw
mov
int3
std
push
push
lds
stc
nop
shlb
dec
jecxz
adc
iret
inc
subb
fs
in
xchg
aad
pop
pop
mov
or
sub
sub
les
pop
mov
pop
dec
loope
mov
es
push
inc
xor
push
push
jmp
inc
movsb
cmp
jb
xchg
ret
notl
ja
dec
scas
insl
pusha
mov
ja
andl
push
clc
lahf
xchg
sub
sbb
mov
and
sti
xchg
mov
les
in
xor
mov
or
sub
jae
pop
sub
mov
dec
ffreep
or
mov
jecxz
std
adc
aaa
mov
add
mov
xor
xchg
sub
jbe
mov
mov
adc
in
inc
add
arpl
fsubr
orl
sub
lahf
pop
sti
jmp
sub
dec
or
add
stc
push
repz
fsubl
arpl
jbe
sahf
xor
leave
sbb
ss
cmp
stc
nop
hlt
nop
adc
stc
nop
adc
ss
scas
addr16
xor
or
ficoml
or
sub
mov
inc
in
es
into
gs
lods
inc
add
in
orl
mov
stos
ljmp
mov
std
push
inc
fldl
mov
inc
ret
stc
hlt
dec
mov
sbb
mov
ss
push
out
inc
cli
xchg
jae
fdivl
xchg
sbb
xchg
out
int
mov
scas
out
push
jmp
or
into
cmp
push
in
mov
nop
daa
shrd
fbstp
scas
inc
bound
xchg
sub
or
mov
mov
test
ljmp
sub
lahf
pop
cli
in
subl
mov
jle
inc
lahf
sub
push
icebp
inc
frstor
jae
sbb
lahf
ss
xchg
sbbb
sbb
aaa
sbb
jae
cmp
xchg
repnz
jae
adc
mov
loope
xchg
adc
into
xchg
xor
scas
push
mov
cmp
pop
inc
fimull
xchg
xor
sarl
mov
sub
rol
jns
pop
add
pop
xchg
insl
add
ret
hlt
mov
pop
jecxz
mov
push
jmp
xchg
shrl
ret
repz
repz
nop
sarl
xchg
das
js
pop
popl
lcall
jne
popf
cs
in
pop
mov
jbe
lds
int
push
pop
icebp
pop
mov
xchg
fbstp
and
push
call
scas
rcr
je
iret
in
std
sub
xor
int
push
jns
xor
iret
dec
in
ret
jecxz
cmc
sbb
push
inc
insb
push
lods
cltd
gs
xchg
mov
sbbb
adc
lret
rcrl
ja
cwtl
popa
fbstp
mov
std
xchg
in
ds
outsb
inc
mov
jne
cmc
mov
test
mov
and
stos
pop
push
daa
mov
add
je
dec
pop
push
in
mov
adc
lret
and
lods
inc
mov
jne
or
jo
dec
pop
shrl
cwtl
rcrl
mov
dec
dec
xor
test
sbb
or
jge
and
fisubl
es
dec
sub
jge
jns
rep
scas
inc
xchg
cs
dec
iret
data16
xchg
sub
lods
sub
scas
inc
push
mov
pop
scas
popa
cmp
push
rcrl
push
out
hlt
cmp
popf
xor
mov
cltd
xor
cmp
add
lds
clc
inc
mov
je
pop
mov
fwait
xor
dec
movsl
cmp
sbb
dec
stos
dec
in
fsubrl
push
inc
fiadds
and
adc
add
add
add
and
xchg
sub
sbb
sub
sti
test
sub
cmpsb
scas
rep
cmp
jns
mov
sub
out
cld
mov
fsubrl
jg
push
scas
or
mov
mov
leave
pusha
add
notb
mov
fs
outsb
jno
lahf
push
es
popl
cwtl
mov
outsb
dec
out
sbb
jl
fucomp
jg
push
out
xchg
xchg
sti
xchg
leave
jecxz
data16
jbe
add
xor
hlt
mov
pop
stc
nop
mov
push
cmp
iret
sbb
xchg
or
jne
sbb
mov
add
scas
push
call
xchg
icebp
pop
and
xor
into
in
jne
and
je
out
pop
sahf
sbb
adc
inc
and
mov
enter
push
ljmp
jp
xor
or
pushf
xor
push
aam
addb
push
xor
cld
sub
xor
xchg
mov
ss
dec
or
inc
fwait
aaa
into
shlb
add
icebp
push
in
es
xchg
sub
push
inc
xchg
scas
mov
fdiv
xchg
out
bound
mov
cltd
in
repnz
mov
loop
add
lahf
outsl
cmp
mov
loop
pop
fistpll
fsubrs
mov
push
jecxz
insl
and
mov
xor
in
popa
clc
and
popf
jnp
jecxz
cs
xchg
fdiv
shrl
inc
insl
jb
xor
sub
repz
icebp
jns
and
or
imul
jnp
aad
and
pop
cs
adc
es
sub
testl
dec
das
jl
fdivl
cmpsb
inc
xchg
sahf
xor
test
daa
mov
cmp
enter
lea
iret
adcl
out
pop
call
adcl
rcrb
scas
lea
cltd
jnp
add
gs
out
mov
and
sbb
jns
aaa
into
mov
fistpll
rorb
fsubrs
xor
dec
js
mov
fidivl
shrl
rolb
or
push
fidivs
ja
stos
movsb
jbe
rol
dec
mul
cmpsb
mov
dec
xor
lahf
gs
or
ret
xchg
lods
hlt
fnstenv
dec
dec
sub
xchg
xchg
cs
fisubrl
lds
bswap
gs
pop
testl
fcmovbe
les
std
inc
sub
jno
dec
stos
inc
addl
lock
or
adc
sub
mov
jge
ds
sahf
fsubr
iret
lret
sub
std
lock
and
fsubr
push
inc
push
and
mov
les
push
push
adc
testl
les
inc
ficoml
add
cmc
mov
data16
lea
scas
inc
loopne
inc
fmuls
push
xor
aaa
das
pop
negb
gs
sub
push
in
pop
out
aam
and
push
pop
push
xchg
stos
rorb
mov
cmpsl
sbb
dec
push
jns
nop
lods
iret
mov
je
push
push
lret
sti
leave
stc
nop
sti
sbb
jle
xor
lock
les
sbb
repnz
inc
lock
sub
cli
jl
insl
testl
xor
jle
or
mov
sti
push
sbb
mov
or
test
or
xchg
inc
mov
gs
movsl
jbe
mov
jbe
shrb
mov
stc
js
mov
dec
bound
add
repz
or
ds
and
jmp
xor
and
add
pop
xor
xchg
jne
leave
repz
mov
negb
mov
sbb
xchg
mov
gs
lahf
test
push
and
xchg
ret
int
cmpsl
mov
std
repnz
cltd
aam
js
xor
dec
cmp
fsubr
cmc
jbe
and
shll
lds
cld
push
mov
or
test
imul
scas
add
pushf
insb
dec
pop
mov
in
cmp
loop
xor
mov
jae
movsl
in
fstl
jg
dec
lahf
adc
push
mov
into
adcl
xchg
or
inc
je
sti
jle
lock
xor
jle
call
lahf
insl
adc
xor
imul
arpl
insl
inc
adc
loop
mov
mov
push
xchg
loope
ficoms
lea
in
sbb
rcl
push
mov
jbe
push
addr16
iret
sub
fisttpl
mov
mov
cmpsb
sbb
sub
int
cmp
popa
dec
sti
sar
jns
pop
movsl
int
push
jmp
push
inc
stos
and
stos
xor
xchg
dec
icebp
movsl
loope
mov
jbe
push
jne
loopne
lcall
sbb
or
nop
ds
sbb
mov
pop
push
test
pop
lods
cmpsl
push
mov
mov
or
cmp
stos
call
cmp
icebp
inc
sbb
jae
fnstcw
add
jb
push
popf
and
push
cmpsb
std
outsl
push
jne
lods
xchg
add
lcall
pop
jecxz
mov
adc
movsb
pop
popf
xor
push
arpl
xor
mov
xchg
rcrl
add
fidivrs
incl
mov
xchg
lcall
aas
cmp
scas
push
adc
jge
jmp
xor
repnz
adcl
cmp
in
data16
idiv
jb
pop
enter
and
xchg
fisubrl
cs
fwait
and
xor
push
dec
cmc
push
scas
loopne
mov
cmpsb
gs
or
xor
jno
ss
in
xlat
cli
data16
dec
jns
addb
mov
sbb
pop
xor
inc
fldcw
mov
sti
leave
int
add
adc
xor
adc
mov
rol
mov
call
jo
mov
push
out
or
xchg
add
push
mov
or
enter
inc
jmp
movsb
cmp
push
scas
or
mov
jo
sbbb
and
in
lods
inc
and
insl
add
dec
fidivs
ret
in
cld
xchg
ret
or
sbb
lods
cmp
iret
dec
xchg
push
in
xchg
rolb
jno
je
mov
and
sub
xor
and
push
call
out
mov
sbb
or
test
mov
mov
push
out
sar
lret
bound
sbb
inc
sub
adc
data16
push
std
pop
sahf
jnp,pt
sbb
fisubl
lret
mov
xor
popa
clc
stos
pop
shrl
ret
jg
cmp
pop
mov
outsb
lcall
mov
dec
loope
push
call
call
testl
imul
pop
lea
and
jp
pop
hlt
les
add
fdivrp
xchg
and
mov
sahf
dec
sbb
jae
test
roll
xchg
pop
mov
pop
out
pop
xlat
aad
mov
jbe
cwtl
loopne
mov
lahf
les
mov
aad
sub
jb
dec
dec
loop
jge
nop
xchg
ja
add
xchg
fiadds
ss
mull
jmp
arpl
or
nop
daa
aas
add
xchg
jns
mov
xor
sar
addl
or
gs
mov
lods
lea
int3
mov
stc
cmc
in
outsb
pop
pop
inc
fcomps
add
js
pop
divb
and
enter
std
loope
xor
push
dec
in
adc
add
fsubrs
fisttpll
lea
aad
stos
cld
xlat
outsb
in
push
xor
cmpsb
or
cltd
mov
int
mov
dec
outsl
push
mov
ret
cmp
dec
loope
fldcw
call
add
jle
dec
add
popf
inc
bound
mov
mov
leave
sub
in
inc
dec
loop
cmpsl
jnp
clc
xchg
imul
in
mov
inc
push
mov
cmp
cmp
pop
mov
int3
loop
pop
push
and
inc
pop
xor
lahf
outsb
push
mov
mov
cmp
in
jle
push
push
pop
repnz
das
pushf
xor
jb
adc
xchg
sarl
pop
test
shrl
inc
and
jne
add
pop
cmpsl
pop
mov
inc
push
jmp
jmp
aam
fiadds
repnz
push
mov
adc
idivl
das
xchg
int
jae
mov
ljmp
jge
lahf
sbb
mov
adc
jp
xor
mov
repz
fisttpll
and
jnp
fimull
add
cltd
xor
fidivl
ds
jbe
jl
js
pop
popf
addb
je
shlb
xchg
adc
hlt
xor
lds
pop
or
repnz
sub
jle
jns
pop
cwtl
dec
loopne
jbe
cs
out
push
mov
call
adc
jnp
push
movsb
cmp
add
add
stos
push
sub
ja
jge
leave
fsubrl
mov
stc
enter
and
adcb
dec
cmp
js
sahf
xor
or
jbe
pop
ror
popa
mov
shr
jg
mov
mov
fcoml
cmpsl
sbb
adc
push
inc
xlat
add
cmc
mov
push
sub
jl
cltd
inc
mov
xor
pop
cmpsb
cmp
daa
mov
pop
loope
pop
add
jecxz
fwait
sub
mov
mov
pop
mov
lret
pop
ds
cmp
jb
pop
repz
fdivrs
leave
outsb
js
ret
das
adc
testb
add
ja
movb
mov
xchg
mov
fs
add
sbb
add
cs
aas
xchg
nop
daa
gs
pop
out
mov
jbe
adc
arpl
xchg
mov
mov
ret
scas
sub
or
add
out
test
popa
clc
sub
mov
push
shrl
sbb
dec
fildll
lods
inc
xor
pop
lret
pop
test
outsb
mov
scas
jle
mov
and
aam
mov
stc
mov
repnz
fsubrs
out
and
cmpsl
aaa
pop
mov
mov
lods
inc
mov
fxch
bound
push
data16
nop
or
mov
mov
fsubs
fldcw
ret
dec
ss
push
insb
insb
add
jl
xchg
sbbl
mov
cmp
cmp
pop
daa
xchg
pop
repnz
inc
out
jns
das
outsl
repz
dec
mov
popf
sbb
mov
mov
aas
test
enter
dec
in
ss
inc
or
add
mov
int3
and
pop
xlat
inc
xlat
add
outsb
push
sub
popa
jg
mov
jl
sti
cmp
mov
adc
xor
cmp
push
lret
ret
ftst
xlat
outsb
add
imul
sub
mov
mov
dec
jnp
stos
bound
lds
dec
out
dec
out
adc
imul
lds
call
jno
sbb
add
icebp
sub
enter
stc
loope
loope
adc
incl
lds
xchg
mov
aam
cwtl
sti
fdivl
mov
xchg
in
sbb
aaa
add
jnp
adc
in
lods
xor
inc
push
cltd
xor
push
in
push
mov
dec
ds
add
data16
cwtl
adc
xorb
rcrb
es
dec
ds
fildl
push
out
xlat
push
stc
xchg
icebp
test
mov
mov
xor
inc
aas
mov
jbe
fcmovu
jno
in
test
daa
clc
jo
or
int3
lcall
sti
xor
repz
push
in
insl
sbb
cmp
jno
scas
cmp
es
scas
inc
xchg
int3
arpl
sahf
in
cmp
ljmp
sbb
dec
outsl
ss
popa
push
out
xchg
pmulhuw
push
stos
ret
jge
inc
push
loopne
xchg
test
arpl
fsubr
xor
pop
or
mov
daa
mov
cmp
inc
fcoml
popa
push
cli
inc
push
xchg
scas
cmp
mov
ret
pop
sbb
cmp
push
pop
lret
cmp
test
cmpsb
or
js
shl
lock
sub
dec
fildll
les
xchg
mov
test
jo
test
cltd
mov
cmp
fdivs
pop
sub
into
gs
fbstp
sahf
clc
pop
push
std
xchg
lcall
mov
lock
icebp
cmp
or
fs
andb
out
pop
stos
sbbb
jb
or
jnp
aaa
mov
fisubrl
dec
clc
fmul
arpl
adc
mov
movsb
adc
arpl
mov
ljmp
sbb
mov
test
mov
jae
inc
fsubl
iret
arpl
add
lret
bound
xchg
aam
lahf
ss
sbb
pop
jbe
mov
dec
arpl
or
es
fidivrl
sbbl
je
and
mov
mov
add
or
jo
sub
in
inc
nop
mov
fisubrl
adc
add
mov
fistl
test
fisubrs
pop
repz
sti
xchg
cs
addr16
xor
dec
adc
adc
mov
xchg
push
mov
test
cmp
cmp
jmp
push
in
fsubrl
xor
sbb
xchg
sub
ds
imulb
test
mov
mov
xor
add
jle
xor
testl
shrb
pop
pop
pop
and
mov
ds
or
mov
sti
cmp
lret
add
mov
dec
scas
sub
mov
push
iret
dec
jmp
jcxz
add
ds
cmp
pop
arpl
gs
lea
rcll
int3
xchg
mov
fistpl
mov
xchg
sbb
dec
les
dec
inc
test
cmp
sarb
sub
jnp
scas
movsb
or
xchg
popa
or
dec
aas
pop
and
or
aad
mov
pop
mov
inc
gs
addl
dec
mov
pusha
or
mov
sub
jbe
dec
imul
loopne
mov
jle
mov
inc
xor
aad
push
sub
adc
shlb
sbb
icebp
fisubs
aad
sti
testl
aaa
insb
mov
paddq
xchg
fcmovne
jmp
push
bound
xchg
mov
or
fs
pushf
je
arpl
push
mov
aad
sbb
test
mov
jl
dec
out
dec
push
mov
dec
inc
idivb
test
xorl
dec
stos
push
cs
inc
push
inc
xchg
sti
mov
sahf
aad
cmp
hlt
cmpsb
dec
xor
push
sub
loop
in
dec
test
and
fdivrl
out
outsl
push
mov
adc
lret
cmp
xchg
movsl
js
dec
jl
add
push
mov
mov
push
cmc
sahf
mov
stos
stc
fwait
xor
ficoml
mov
sub
test
sbb
addr16
jmp
bound
sub
stos
mov
repz
jl
out
or
nop
mov
push
xor
xor
ret
pusha
jecxz
out
not
int3
movb
rclb
xchg
pusha
mov
and
cmp
adc
add
cmp
lock
pushf
add
test
divb
push
sarb
shrl
inc
mov
ljmp
mov
repz
aaa
out
jg
mov
ret
pop
xchg
add
jnp
mov
stos
or
push
xor
mov
ja
mov
mov
shl
loop
lcall
xor
xchg
in
lods
mov
and
je
adc
test
insl
enter
pop
jle
negb
aam
dec
mov
and
xchg
mov
jp
mov
clc
xor
sbb
stos
mov
stc
ljmp
aad
ss
and
jns
jns
test
imull
clc
sub
xor
aaa
cli
pop
bound
popf
sbb
adc
bound
ljmp
outsb
test
sub
mov
pop
stc
jmp
cmp
idiv
adc
js
test
aaa
call
jmp
fld
out
mov
add
mov
cmc
sbb
aad
mov
xor
pop
jecxz
adc
mov
sarb
mov
mov
mov
pop
ss
in
jge
movsb
fdivrl
mov
adc
xor
into
cmpsl
aad
movsl
jns
cmp
shlb
push
mov
cwtl
push
stos
mov
push
inc
xchg
out
ljmp
sti
stc
cmp
loop
aam
cs
mov
in
out
mov
pop
xor
mov
jmp
sub
cmp
inc
add
ljmp
mull
xchg
jno
sbb
addr16
imul
cs
xchg
iret
imul
mov
or
out
fidivl
imul
ljmp
outsb
xchg
push
fs
les
fisubrl
stos
std
jl
push
dec
imul
xchg
pop
mov
dec
iret
or
fs
movsl
lret
sub
int3
scas
or
cmp
lea
data16
jbe
cmp
jnp
cmp
cwtl
fsts
mov
sub
sti
push
mov
out
pop
out
arpl
shll
dec
sub
mov
cmpsb
mov
leave
xor
sarb
aas
bound
aas
imul
cmpsb
data16
and
lds
push
mov
mov
push
mov
imul
cmpsb
or
ss
cmp
pop
jno
loopne
jns
dec
dec
push
push
and
mov
cmp
sub
adc
mov
shlb
sbb
xchg
std
inc
xor
dec
or
jecxz
and
jge
stos
test
mov
jmp
and
ret
or
sbb
mov
sub
xchg
or
ftst
xor
mov
lahf
cmp
xchg
les
push
ljmp
fmull
scas
dec
icebp
xchg
adc
mov
into
add
push
loop
jns
in
add
in
dec
aad
xor
loope
in
sarb
or
in
xchg
and
add
mov
jnp
push
lret
push
mov
xchg
push
sub
xor
push
or
divb
xchg
decl
jg
sub
gs
xor
lret
and
adc
je
push
aad
insb
lods
jo
mov
mov
test
mov
xchg
inc
mov
jl
cmp
and
cmp
mov
sub
cwtl
mov
sub
enter
mov
sub
pop
cld
bound
pop
sbb
fwait
adc
shll
inc
sbb
push
jnp
lds
out
je
ret
sbb
lcall
int3
andb
cmp
test
push
add
add
cmc
cs
dec
inc
fwait
sbb
mov
mov
sbb
xor
mov
sub
test
push
fs
and
pop
jno
insb
test
test
adc
aad
into
jns
adc
inc
jmp
test
and
inc
cmpsb
push
mov
pop
push
arpl
mov
mov
hlt
stos
pop
push
inc
add
shl
adc
jbe
mov
or
mov
add
mov
shrb
mov
xchg
jne
dec
jg
push
and
rorl
sub
data16
fsubs
mov
jne
outsb
mov
movaps
add
jbe
pop
or
mov
aaa
pop
cmpsb
sub
lods
jns
inc
xor
rol
mov
ret
sbb
mov
dec
pop
std
pop
jle
loope
push
imul
test
and
mov
pop
mov
cmp
dec
mov
jle
dec
and
dec
or
repz
andl
dec
sahf
aas
out
fstpt
inc
inc
movsl
jle
sub
jecxz
ret
fmuls
mov
jg
xor
inc
push
push
mov
push
ds
pop
cmp
inc
dec
mov
fbstp
sub
jnp
iret
add
sub
je
mov
andb
inc
push
lock
dec
fisubrs
pop
adc
repnz
daa
ret
dec
rsm
and
cmp
fidivl
lret
inc
call
out
mov
mov
shlb
pop
fwait
and
rcrl
sbb
es
push
mov
sub
bound
out
aaa
cmpsb
shr
jae
xchg
and
pop
sbb
mulb
add
out
jno
out
test
insl
call
adc
and
icebp
inc
pop
dec
push
rorb
in
cmp
push
jmp
sarb
sbb
mov
fisubl
fnsave
push
xor
mov
add
jg
adc
test
and
cmp
jne
les
fisubs
aam
xor
adc
jp
adc
call
fidivrs
insb
xchg
test
sbb
movsb
mov
sub
push
pop
rolb
mov
and
xorb
mov
mov
movsb
jae
into
stos
push
pop
push
sbb
sbb
jnp
pushl
mov
in
pop
into
fsubrs
pop
int
stos
push
rorl
pop
popa
cltd
stos
lahf
adc
out
xchg
dec
loop
and
jmp
mov
fcoms
enter
jp
dec
mov
fisttps
daa
add
out
cmp
hlt
push
mov
inc
dec
lahf
jbe
fbstp
push
pop
lock
or
pusha
xchg
insl
mov
push
or
test
sti
inc
sbb
out
test
jmp
pop
jae
rol
out
push
xor
cmp
sub
outsl
lret
inc
lock
xor
lret
mov
push
sahf
pop
lods
pop
jns
push
push
jb
dec
pop
insl
es
dec
inc
or
testl
les
cmp
loope
dec
cmp
mov
loop
mov
dec
stc
test
outsb
fwait
std
scas
sub
popf
rcl
jp,pn
lods
pop
push
xchg
jbe
mov
aaa
sub
sub
insb
jg
sahf
mov
in
cmpsl
jecxz,pt
jmp
push
aaa
das
fiadds
or
jne
add
adc
pop
sbb
sbb
push
jnp
push
ja
sub
test
mov
int3
test
cltd
in
nop
fdivp
or
mov
mov
add
pop
or
mov
lret
pusha
frstor
inc
lods
cmp
pop
imul
lcall
je
pop
dec
and
mov
adc
lods
xchg
sub
clc
cmp
sub
test
repz
sbb
lods
aam
add
or
sti
lods
aad
pop
fucom
sub
rcr
mov
mov
cmp
sbb
into
out
aad
rcrl
movsl
clc
cld
nop
mov
clc
outsb
and
mov
xchg
rcrb
mov
je
cs
cmpsb
mov
cld
stos
dec
in
add
mov
sbb
dec
es
aad
xchg
jmp
imul
lods
fstl
xchg
xchg
rcrb
lods
fwait
sub
stos
popf
jb
out
xor
inc
xchg
sbb
inc
adcb
rcrb
push
xchg
jns
pop
mov
push
sbb
mov
mov
cmp
mov
rorl
ja
cmp
mov
pop
adcb
mov
xchg
nop
cmp
pop
cmp
jns
ret
aam
push
mov
mov
xchg
add
add
sbb
clc
jae
or
jecxz
negb
inc
and
and
rcll
mov
ss
mov
lock
xchg
shlb
or
int
jb
dec
ss
mov
cmp
lods
aam
add
xor
pop
jns
inc
push
push
xchg
mov
ss
lods
in
lret
test
shr
xor
rol
mov
mov
lahf
mov
jl
xor
cmp
mov
mov
lcall
fstl
mov
arpl
pop
fwait
dec
xor
in
hlt
in
inc
gs
rcrl
lds
xchg
push
jl
xchg
fucompp
lcall
add
or
and
dec
and
fistl
loope
js
sbbl
cltd
rcrb
pop
xor
fadds
inc
pop
cmp
dec
imul
or
cwtl
push
mov
mov
sbb
subl
pop
fbstp
sbb
call
mov
xor
mov
mov
mov
sub
xlat
mov
loopne
push
flds
inc
xchg
dec
test
xchg
or
adc
push
icebp
inc
das
jnp
int3
pop
ljmp
popl
aad
lods
popf
push
fdivrp
inc
decb
inc
or
jae
sub
fs
xor
outsb
js
xor
push
lcall
or
scas
lock
mov
scas
push
push
das
pusha
push
andb
xchg
cmpl
ja
sub
das
sbb
sbbb
and
in
xchg
insb
cmpsb
mov
pop
add
xor
test
lahf
stos
inc
rcll
sub
push
xchg
int
mov
jne
cmp
ds
ljmp
push
lahf
push
out
icebp
inc
jbe
mov
pusha
ljmp
pop
movsb
adc
jbe
mov
movsb
pop
mov
push
fsubrl
ss
mov
dec
leave
movsl
int3
leave
shll
mov
jns
ret
daa
loop
cmp
imul
fcmovnu
clc
int3
jp
outsb
push
sub
stos
xor
lods
mov
xor
add
jg
cmpsb
push
mov
push
std
mov
mov
xchg
dec
faddl
in
pusha
aad
call
pop
shlb
shr
les
jmp
and
jnp
cmp
popf
lods
push
jle
add
stos
pop
jmp
cwtl
mov
sbb
adc
cmp
xchg
pop
popa
and
sbb
push
addr16
enter
ret
lcall
fstpt
inc
add
lds
mov
lock
cmpsb
adc
xchg
cmp
pop
aad
inc
in
xchg
jnp
call
inc
loope
cmp
aad
lahf
ret
insb
jnp
sahf
mov
ret
xor
push
jne
cmp
dec
or
or
adc
imul
jbe
pop
rcll
sub
outsl
dec
mov
mov
mov
outsl
and
mov
push
lahf
int
push
add
cmc
inc
jbe
stc
xchg
sub
cmpsl
mov
dec
int3
jg
jno
adc
jnp
lcall
mov
and
jl
sbb
jae
test
inc
sbb
mov
idivb
jo
fiaddl
add
push
xlat
orb
lods
in
in
mov
xchg
pop
adc
mov
sahf
fistl
test
xor
sbb
and
and
int
cmp
cmp
scas
sbbl
add
addr16
mov
mov
xor
mov
in
inc
not
lahf
and
outsl
push
xchg
inc
es
cmpsl
mov
imul
xor
int3
das
jns
sbb
lods
mov
arpl
or
sub
js
push
mov
or
out
pop
cli
inc
add
or
push
cwtl
mov
scas
push
pop
popl
push
jmp
mov
jl
rcll
vandpd
lds
mov
mov
adc
mov
and
sti
sbb
movsl
loopne
cmpsl
sbb
sub
jl
sahf
dec
adc
dec
icebp
roll
adc
sti
cmp
pushf
mov
push
test
and
inc
sub
vxorpd
jmp
imul
pop
insl
cwtl
repnz
mov
adc
ds
arpl
dec
nop
fldl
popa
popf
loope
xor
imul
cmp
aaa
fnstenv
call
addr16
jmp
or
cmp
jge
and
push
sub
pop
push
nop
inc
stos
pop
xor
dec
xchg
mov
adc
sub
mov
and
cmpsb
sahf
inc
movsb
xchg
jnp
mov
ret
mov
push
pop
cmp
test
xchg
xchg
or
mov
adc
lcall
or
out
jp
pop
and
sub
mov
mov
fdivl
sti
xlat
sub
data16
and
xor
movsb
sbb
out
iret
cwtl
adc
pop
mov
mov
mov
sub
xor
mov
test
adc
testl
add
addr16
xchg
sub
pop
mov
nop
shll
and
pop
sahf
pop
fadds
les
inc
je
fs
rclb
neg
call
int3
fwait
insl
or
xchg
push
imul
outsb
test
daa
pop
imull
jbe
inc
loopne
loop
mov
mov
xlat
paddq
xchg
test
xor
in
lahf
sub
jb
push
xchg
xchg
cmp
lcall
mov
fstpt
mov
cmp
inc
dec
pop
popa
xorl
aas
mov
das
jl
dec
push
push
mov
out
jp
jnp
push
inc
and
movsb
bound
sbb
sub
jae
nop
shrb
js
lret
sbb
in
ret
sbb
jne
lods
pop
xchg
loope
wbinvd
dec
mov
outsl
mov
frstor
mov
fstpt
inc
dec
movzwl
in
dec
adc
mov
or
mov
shlb
sub
mov
lods
mov
inc
movsl
into
dec
inc
jle
pop
sbb
push
sbb
jp
insl
mov
cmc
cwtl
test
mov
lret
out
fstpt
jmp
add
std
pop
outsl
and
jnp
mov
adc
xor
ret
add
push
add
mov
pop
mov
aam
stc
insb
adcl
fs
mov
cmp
cmp
sahf
jb
push
hlt
mov
xor
in
test
inc
cmp
shr
fstpl
dec
sbb
fistpl
sub
add
repnz
test
xchg
mov
orb
pop
fbld
add
mov
or
jnp
rep
lret
out
and
mov
pusha
call
repz
jbe
dec
mov
cmp
fnstsw
xor
add
and
pop
jo
cld
dec
cmp
push
push
push
mov
adc
sbb
loop
out
add
divl
es
xchg
rcrb
add
jge
and
adcl
fstpt
push
mov
or
push
or
enter
push
scas
cmp
cmp
movsl
inc
dec
sub
lcall
push
loop
add
ror
fldcw
in
testb
jecxz
dec
cmp
fisttps
repz
dec
xor
mov
movsb
adc
push
jno
cvttps2pi
xorl
sub
arpl
mov
jge
xor
aad
sub
mov
xchg
push
movsl
lcall
stc
je
orb
fs
xor
movsb
cmc
jnp
push
jae
movsl
mov
jo
or
mov
sub
mov
clc
movsl
jmp
mov
ret
xchg
pop
ss
icebp
pop
pushf
dec
movsl
test
adc
or
adcb
stc
push
and
mov
or
std
insl
les
or
dec
jne
ret
and
mov
push
shr
iret
hlt
xchg
add
hlt
test
je
sbbb
xchg
insb
mov
dec
imul
ret
aam
pushf
xchg
scas
adc
sahf
aaa
cmp
push
shll
or
lock
int3
adc
pop
lcall
sbb
push
mov
xlat
and
sub
stos
jecxz
scas
sbb
addr16
je
clc
mov
pop
lret
addl
jns
jno
jae
shll
jne
mov
cld
sahf
jecxz
subl
ja
add
fistps
fsubrs
mov
xchg
sbb
or
dec
stos
lock
sub
nop
sub
xor
sbb
xor
call
xchg
adc
in
dec
dec
jp
xchg
mov
mov
cltd
imul
adc
stos
dec
or
mov
sub
test
jle
es
mov
xor
fidivrl
cmp
push
imul
cltd
mov
scas
outsl
mov
cltd
sbb
stc
cmp
sub
add
mov
add
in
dec
insb
dec
and
outsb
insb
fldenv
pop
das
adc
dec
jo
pop
and
lret
mov
pop
fs
push
sbb
dec
cmp
jae
ljmp
jle
inc
push
push
aas
test
insb
rol
mov
aas
rep
inc
pop
adc
rolb
add
mov
scas
popf
push
or
int
or
gs
pop
cltd
mov
cmp
sub
xor
push
inc
pop
nop
clc
jnp
in
jne
jb
mov
mov
in
test
jmp
sar
and
fwait
jne
fwait
fwait
mov
js
jns
stos
fsubrs
ljmp
test
lods
notl
and
xor
push
pop
aaa
xchg
xchg
hlt
rolb
insl
add
call
daa
jecxz
inc
dec
and
jge
xor
fs
cmc
test
jmp
mov
sub
cmp
sub
sub
or
cmc
mov
pushf
negl
cmc
out
call
mov
cmp
test
out
daa
add
xor
lods
ret
mov
stos
add
iret
push
sbb
imul
pop
popa
lret
jns
cmpl
pop
adc
sub
loope
or
test
pusha
ljmp
push
cmpb
outsl
xchg
dec
and
xchg
pop
add
mov
leave
setbe
fsubs
cld
jecxz
out
outsl
inc
inc
test
xchg
scas
or
mov
repz
adc
jae
fldln2
mov
dec
addr16
jmp
push
mov
mov
fdivrl
push
loop
filds
mov
fs
pop
test
xor
lea
frstor
mov
inc
popa
cli
cld
icebp
or
lahf
push
div
sub
sarl
sub
repnz
pop
jnp
sbb
es
lret
push
add
mov
cs
xlat
lahf
xchg
xor
sub
cmp
mov
imul
icebp
test
and
jecxz
imulb
mov
xorl
arpl
xor
flds
enter
subb
daa
cmpsb
mov
es
ja
mov
test
inc
push
inc
cmp
xor
shll
cli
lock
dec
push
lock
adc
shrd
insl
aas
test
dec
pop
inc
push
cmpb
dec
add
mov
xchg
xorb
push
imul
stos
loop
push
and
rcrl
xlat
in
dec
jbe
ljmp
punpckhbw
xchg
adc
mov
loope
icebp
ds
lcall
and
pop
mov
cmp
and
push
adc
fbld
fwait
imul
ficoml
xor
fwait
jo
adcl
adc
xchg
insb
lods
adc
in
push
pop
jle
cmp
sti
cmc
in
push
arpl
cmp
ja
hlt
push
lock
adc
adc
xchg
xchg
cmp
subl
out
mov
and
dec
cmp
mov
fcoml
mov
pop
arpl
jle
mov
lods
ror
cmp
adc
and
or
jle
repz
fdivrl
adcb
jmp
in
int3
cs
into
adc
push
push
xor
cmpsb
stos
cmpsl
push
mov
and
dec
cli
fs
mov
jbe
cmpsb
jno
add
sarl
mov
push
div
subb
scas
mov
inc
cwtl
lea
inc
dec
je
xor
mov
mov
into
dec
icebp
lret
lock
mov
add
or
orb
pop
fisubrl
mov
push
fucomi
call
or
sbb
mov
ja
push
lods
or
popf
mov
jno
call
mov
cmp
shll
mov
inc
mov
fptan
fisubl
mov
dec
inc
js
sbb
cs
cmpsl
jnp
imul
sahf
repz
fnstenv
out
shll
test
and
inc
lcall
xchg
push
loope
shlb
sub
sarl
mov
mov
jle
nop
aam
cwtl
clc
leave
ss
mov
jle
cmp
inc
shl
inc
push
jmp
cltd
jmp
vpsllq
push
mov
test
bound
push
aam
sti
adc
icebp
pusha
insb
add
and
lods
mov
inc
cmp
push
push
lods
adc
scas
sub
iretw
pop
inc
lahf
xor
add
pop
pusha
clc
clc
fs
jge
lds
inc
and
mov
jp
or
add
pop
faddl
fadds
push
mov
sub
lea
stos
icebp
cltd
sbb
mov
or
cltd
loopne
mov
rcr
test
shlb
mov
insl
inc
dec
jle
inc
cmpsl
push
push
sub
and
mov
inc
es
rcr
sub
jne
sub
jmp
dec
xchg
fsubr
mov
hlt
lcall
cld
mov
punpckhdq
imul
lods
sub
adc
leave
fdivl
pop
ds
scas
roll
pop
push
bound
inc
insb
into
lret
jecxz
shrb
and
jbe
and
cwtl
jb
call
inc
into
scas
add
lcall
test
push
mov
xor
push
fistps
hlt
daa
movd
in
test
jp
mov
addr16
imul
xlat
out
movsl
arpl
xchg
or
sbb
icebp
dec
and
xchg
in
adc
sbb
xlat
dec
push
jecxz
fsubrl
mov
lret
cmpsb
out
cmpb
in
jno
sbb
lcall
ss
scas
nop
in
call
jecxz
loop
xor
mov
lcall
mov
or
movsl
inc
mov
inc
js
cmp
and
jno
add
call
fildl
div
jle
addb
xchg
xorl
and
syscall
add
imul
ss
dec
iret
sbb
divl
mov
xchg
insl
stos
hlt
sbb
pop
dec
andl
mov
popa
ljmp
jo
and
fdivrs
add
jb
sub
cmp
sti
popa
cltd
xchg
and
mov
cmpsb
lahf
int
add
jle
jmp
out
xchg
xchg
scas
mov
inc
adcb
lock
jl
mov
cmp
js
cwtl
fs
inc
jb
cli
xchg
push
outsl
aam
in
jp
shll
sbb
test
xor
decl
filds
cmp
cmp
test
mov
out
or
outsb
stc
out
sbb
inc
jg
add
push
out
sarl
loopne
clc
bound
inc
sub
out
sbb
iret
pop
push
adc
sub
mov
lods
cmp
cli
mov
std
movsb
insb
xchg
xchg
or
add
psubw
dec
mov
inc
add
or
test
lahf
bound
js
mov
xchg
push
jp
inc
js
push
push
and
jne
out
jmp
pop
mov
pusha
jb
and
cmp
mov
cmpl
jmp
xchg
mov
mov
pop
or
dec
lahf
push
cmp
xchg
jecxz
mov
adc
aad
or
xchg
out
push
fdivrl
mov
pop
sub
xor
pop
pushf
dec
push
or
insl
fcomps
cmp
leave
out
sbb
adc
pop
out
sub
xor
mov
push
out
mov
pop
dec
ds
add
stos
loopne
adc
pop
inc
xor
and
inc
pusha
lea
add
hlt
aam
mov
cmpsb
lea
add
data16
jno
stos
push
mov
imul
sub
pop
das
enter
stos
in
mov
adc
es
popf
pushf
dec
jl
aaa
mov
sar
aaa
sub
lods
mov
adc
lahf
dec
clc
cs
mov
push
dec
ret
js
enter
cmc
push
sbb
inc
and
push
cmpsb
pop
clc
xchg
dec
fsubr
jecxz
jmp
icebp
pop
push
out
push
jb
or
call
insl
push
xchg
pop
or
je
insb
daa
cmp
mov
and
adc
in
pop
mov
inc
lock
xor
inc
lds
sti
aas
movsl
jle
aad
lods
inc
imulb
popa
loope
lret
bound
jmp
or
pop
sahf
xchg
pop
sahf
and
es
sub
clc
jge
pop
notb
lahf
sbbl
push
mov
das
mov
fbstp
js
xor
insb
fs
add
mov
mov
ret
ret
pop
lock
dec
loopne
es
pusha
mov
jns
mov
frstor
dec
xchg
xor
pop
bound
jbe
pop
lock
xchg
or
mov
pop
lods
daa
mov
lods
incl
xor
push
out
call
sti
andb
or
test
aad
xchg
sub
mov
stc
dec
mov
bound
ja
insl
repnz
rorl
repnz
pop
scas
jb
xor
inc
xchg
sub
les
jecxz
in
jmp
mov
jb
imul
nop
daa
mov
addr16
int3
arpl
out
xchg
sub
mov
or
lahf
pop
stos
sub
fsubrl
es
jnp,pn
fldt
pusha
idiv
mov
js
push
hlt
mov
and
into
hlt
mov
cltd
cmpsb
cmp
inc
in
scas
sbb
ds
mov
test
mov
ss
aam
in
push
js
lea
loopne
pop
scas
cli
xchg
fdivrs
test
and
mov
incb
adc
adc
enter
xchg
jmp
dec
loop
xor
popa
outsb
psubb
mov
addl
jp
pop
add
cmp
xchg
add
es
fstps
es
mov
ficoml
add
cmp
pop
add
cmp
or
leave
cli
xchg
repz
pop
scas
loopne
pop
mov
add
push
cwtl
pop
or
jecxz
rclb
test
add
sarb
pop
mov
mov
test
cmp
fcomip
mov
test
push
enter
cli
xchg
xchg
cmpsb
cmp
xor
jnp
cmp
pop
inc
fiaddl
test
push
shl
enter
push
ljmp
mov
aas
fcomps
enter
jnp
pop
inc
in
jg
sbb
ficompl
add
and
pop
addb
jp
lea
fwait
loop
xchg
es
and
shlb
xchg
jnp
cmp
lret
pushf
jmp
in
dec
in
call
xor
jo
addr16
insb
xchg
imul
mov
lock
fldenv
mov
popa
and
add
rcrl
xchg
sub
push
adc
repz
jae
pop
lods
outsb
std
xchg
cwtl
into
movsb
cmp
mov
cmpsb
cmp
cmp
pop
xchg
sub
test
pop
repz
es
dec
sbb
fcomps
sub
and
jbe
push
inc
adc
jge
inc
fisubrs
or
xchg
mov
push
out
aad
lcall
mov
mov
fxam
jl
xor
jmp
pop
pop
and
test
pop
movsb
leave
inc
xlat
icebp
push
jmp
adc
dec
and
pop
insb
testl
loop
xchg
cs
xchg
and
adc
cmpsl
push
cmp
add
pop
mov
mov
jb
sti
lods
cmpsl
test
loopne
aaa
into
clc
add
cmp
lea
gs
sub
faddp
or
sub
sbb
dec
fbstp
mov
sahf
xchg
dec
loop
sarb
adc
ss
ljmp
mov
sub
jmp
xchg
adc
lahf
ss
xor
adc
xchg
pop
pop
mov
fldcw
mov
aaa
and
pop
push
mov
outsl
cmpsb
mov
hlt
in
scas
inc
add
cmp
aaa
and
lahf
pop
push
pushf
xor
mov
xor
decb
jo
dec
push
pop
icebp
lea
xchg
lods
popf
xor
mov
pop
in
clc
stos
inc
and
sbb
jnp
jg
sbbl
jecxz
xor
add
cmp
mov
imul
mov
inc
xlat
dec
loope
add
xor
pop
mov
test
scas
movsl
dec
iret
pop
hlt
idiv
pop
scas
sub
inc
fiaddl
call
xor
mov
dec
fists
ss
into
jo
stc
mov
popf
xor
jmp
ds
mov
xor
sub
mov
xor
fsubr
test
adc
aaa
xchg
jo
xchg
sub
mov
inc
ficoms
push
jmp
jno
popf
xor
xchg
pop
xchg
sti
xchg
fwait
and
jns
adc
test
xchg
and
mov
inc
fstl
aam
and
shrl
xchg
xchg
sub
je
dec
movsl
call
mov
dec
ja
cwtl
das
inc
cwtl
hlt
mov
shrb
repnz
in
adc
inc
xchg
sub
lret
popa
push
jmp
in
or
out
inc
fisubrl
insl
add
nop
inc
xlat
leave
bound
cltd
ljmp
lock
test
jbe
mov
inc
xchg
cmpsb
cmp
xchg
in
dec
adc
aam
push
mov
jg
push
sbb
or
and
and
stos
inc
jge
jns
fs
lcall
xchg
sub
cs
dec
enter
mov
cld
mov
enter
clc
xor
fwait
push
pop
mov
mov
ds
rcll
adc
xor
mov
cmpl
push
idivb
pushl
daa
push
andl
dec
movsl
inc
ja
mov
fistpl
loop
sub
add
mov
aaa
xor
insb
xchg
inc
in
andl
sbb
sbb
cmp
sub
mov
test
pushf
sub
and
push
je
dec
stos
jge
fwait
movsb
int
cli
lret
sbb
notb
das
mov
pushf
addr16
movsl
out
mov
fsubr
add
aam
add
outsl
popa
push
xchg
push
insb
stc
nop
mov
jle
jecxz
sahf
daa
xor
pop
scas
aaa
xchg
test
icebp
xchg
aad
iret
push
sub
and
and
fbld
dec
push
cmc
je
out
ja
pushf
andl
adc
cmp
test
pop
cmpsl
mov
fisubrl
aam
cli
or
pop
adc
sub
outsb
inc
imul
mov
leave
outsl
push
add
mov
cs
jecxz
xorl
mov
in
jmp
in
aas
pop
outsl
or
inc
push
mov
lret
mov
mov
sbb
jb
and
mov
push
je
test
mov
rcr
or
mov
add
aas
mov
jp
outsb
lods
inc
movsb
mov
loop
testl
adc
xchg
test
sub
add
loop
fisubrs
inc
movsl
push
lea
jns
shll
xchg
int3
sbb
movsl
dec
push
push
das
leave
jge
fstps
sbbl
mov
ret
add
jno
xor
sbb
arpl
lret
scas
add
pushl
cmp
fisubrs
mov
mov
jge
sub
jne
mov
decl
cmp
push
mov
dec
adc
push
mov
dec
cmc
test
adc
cli
inc
adc
push
mov
xchg
aam
lods
push
mov
fxch
jne
push
daa
leave
jb
call
or
lcall
shr
sub
mov
dec
icebp
push
mov
or
and
pop
gs
mov
and
adc
les
sub
push
fs
data16
pop
popf
scas
rolb
mov
xlat
or
dec
pop
cmp
xchg
ja
enter
sub
cmpsb
pop
sbb
jmp
test
testl
aaa
aam
pop
jecxz
push
sub
mov
push
aad
jnp
xor
std
addl
rcrb
xchg
sub
cmp
fisubrs
mov
cld
mov
mov
loopne
sbb
jno
andb
push
movsl
cmc
xchg
into
inc
fxch
pusha
or
ficomps
mov
sbb
adc
rcrl
mov
popa
ret
and
mov
out
addr16
cmpsb
pop
mov
cmp
and
pop
mov
les
lods
sbbl
insb
and
xor
mov
testb
push
fsubs
adc
popf
xor
dec
cli
xchg
jle
les
lahf
and
rcrb
mov
sub
and
js
jne
scas
inc
xor
push
dec
in
jmp
imul
cmp
insl
stc
mov
sub
cmpsl
ds
inc
pop
lods
lds
int3
arpl
jecxz
and
add
dec
xor
mov
dec
daa
mov
mov
inc
fld
rcrb
or
push
out
sbb
adcb
cmp
mov
les
mov
mov
adc
jecxz
jae
mov
sbb
adc
cld
lea
stos
inc
aas
out
pop
repz
jo
push
push
jb
call
cs
fld
pop
cld
lea
mov
sbb
sub
adc
ss
repz
lcall
cmpsl
mov
xchg
hlt
mov
and
inc
mov
xchg
xorb
add
lea
fstps
scas
inc
dec
cld
test
push
mov
rcr
test
or
xchg
iret
mov
adc
fbstp
cli
inc
ficomps
ja
adcb
sbb
sbb
hlt
sub
adc
xchg
sub
pop
mulb
mov
xchg
xorl
loopne
popf
xor
add
lea
xor
dec
add
adc
ss
or
das
lods
fmul
inc
out
jmp
pop
ret
das
add
arpl
loope
jnp
shll
fwait
xor
pushf
jmp
push
cmpb
out
jo
fdiv
push
adc
ret
hlt
cld
adc
cmc
mov
push
iret
cmp
cmp
xchg
lcall
clc
in
cmpsb
xor
mov
lahf
lret
out
js
jb
mov
in
mov
fiadds
sub
jp
inc
xlat
pop
fwait
jle
or
mov
in
test
dec
into
jmp
jge
jp
cmp
int3
pop
sbb
fisttps
cmp
fs
jmp
jge
xchg
in
add
add
and
lahf
adc
and
shrl
xchg
mov
fstps
xchg
int3
sub
das
pop
in
fbstp
jae
in
movsb
inc
fidivl
lds
scas
iret
sbb
andb
inc
xlat
fwait
inc
sub
je
mov
popa
leave
setp
inc
ljmp
xchg
cmp
pop
outsb
mov
cmp
mov
mov
insb
push
and
divb
mov
aad
push
cwtl
ficoml
enter
adc
dec
xchg
rol
xchg
push
lods
and
jp
sub
bts
ficompl
loopne
imul
aas
call
sub
loopne
cld
push
xorl
mov
pop
repz
mov
dec
cli
loope
adc
mov
inc
push
imul
add
stc
xlat
inc
mov
ret
push
aad
out
fdivrl
push
pop
fidivs
popf
je
dec
sbb
lret
int
fwait
push
xorb
push
icebp
rcll
aaa
orb
jns
enter
loope
mov
bound
shl
mov
sbb
mov
out
inc
loop
cltd
je
adc
push
xchg
cld
jle
add
mov
insb
pop
sbb
sarb
cmpl
arpl
scas
mov
jne
cmpsl
pop
xchg
test
xchg
out
lcall
dec
pop
popf
shll
mov
popf
xchg
mov
mov
xor
dec
sub
pop
cltd
loopne
cmp
mov
mul
adc
pop
test
clc
cmp
mov
pushf
dec
mov
psrad
adc
jns
mov
hlt
outsb
mov
test
pop
cld
shlb
jno
das
bound
divl
stos
inc
push
lahf
testl
sub
call
out
dec
clc
cmp
out
ret
sahf
mov
mov
pop
scas
push
inc
fildl
mov
mov
push
out
filds
paddb
out
daa
loopne
pop
out
lea
jb
push
movsl
in
dec
xlat
int
cmpsl
std
push
loope
mov
testb
mov
fsubrs
inc
xor
xor
pop
lock
inc
pop
lock
insb
mov
int3
pop
lock
dec
pushf
xor
pop
insl
dec
push
mov
inc
arpl
xchg
jae
jo
rcl
repz
or
lret
or
lods
xchg
dec
jno
cmp
inc
mov
xor
push
in
dec
xor
mov
aad
lret
lds
or
push
jb
inc
sbb
aad
mov
repnz
das
sub
lahf
add
or
pop
xor
nop
adc
inc
xchg
lock
mov
adc
add
fnsave
in
ss
icebp
mov
mov
push
arpl
xor
cmp
push
push
push
aad
sbbl
or
dec
cmp
cmp
adc
add
jae
mov
adc
cmp
xor
adc
fidivrl
xchg
insb
dec
push
inc
mov
pop
xchg
jmp
leave
bound
inc
fisubrl
fsubrl
iret
fdivs
pop
jae
jle
push
sub
hlt
xorb
mov
dec
loope
insb
movntq
mov
pop
push
test
mov
lods
movsb
int3
fbstp
into
mov
add
push
in
pop
xor
test
ret
cmc
pop
pop
repnz
sbb
inc
fdivr
gs
xchg
lcall
scas
out
shlb
out
insb
add
sbb
data16
arpl
dec
mov
mov
mov
mov
xchg
sub
mov
lret
cmp
adc
pop
pop
sahf
dec
push
jb
xchg
adc
xlat
out
or
dec
aas
in
or
xchg
jl
xchg
scas
repz
ror
arpl
or
push
jnp
xor
test
sub
aad
fidivs
mov
jb
sub
repnz
inc
adc
movl
and
pop
aaa
imul
aas
repnz
jecxz
sbb
xchg
sub
pop
lods
inc
push
out
leave
sbb
insb
fs
cmpsl
cmp
jecxz
scas
jmp
mov
dec
gs
jno
lea
mov
aad
mov
or
jae
xor
xor
xor
mov
rcl
insb
add
cwtl
das
pop
jb,pn
popa
fwait
int3
arpl
adc
es
mov
or
in
push
testb
in
aam
ffreep
xchg
sub
push
mov
xchg
pop
xor
dec
ret
fidivl
addr16
cwtl
test
push
sbb
repz
push
push
scas
inc
sub
inc
popf
loopne
adc
adc
or
in
cmpl
jnp
sub
pop
icebp
mov
lea
cmpl
lea
and
xchg
clc
repz
jl
lea
mov
stos
and
aaa
repz
pop
and
jae
test
popa
clc
mov
push
popf
jmp
add
jecxz
imul
test
loop
or
sbb
test
cwtl
and
or
pop
push
in
pop
daa
mov
cli
dec
stc
nop
lock
nop
jecxz
add
aaa
call
incl
cmp
xlat
outsb
in
js
jns
cli
imul
stc
adc
jmp
std
lods
inc
out
imul
ljmp
add
dec
and
cmp
inc
fdiv
pop
shrl
sbb
jp
jnp
sbb
test
xchg
outsl
adc
repnz
mov
pop
dec
push
pop
testb
stc
lcall
pushf
out
pushf
xor
adc
aad
inc
fistpl
mov
jp
lret
mov
rcrb
mov
and
and
pusha
notl
aam
jne
pop
add
mov
pop
repz
mov
outsl
insb
sti
inc
fldt
jo
ljmp
aad
gs
test
push
and
pop
inc
mov
arpl
inc
fcoml
pop
sub
stc
jne
rclb
add
sbb
in
cmp
and
add
iret
push
rcrl
test
sbb
adc
fs
sub
pop
mov
pop
shll
cli
sbb
test
fwait
push
andb
jmp
inc
fisttpl
and
stos
inc
nop
addb
mov
out
mov
pop
pop
sti
xchg
mov
mov
iret
into
lds
test
sub
pop
ret
daa
mov
mov
lret
std
sub
mov
inc
js
or
jns
xchg
outsl
add
mov
pusha
pop
lds
push
popf
push
cmpsb
cli
fadds
add
and
cmp
rorl
cmp
test
jns
jecxz
and
notb
sbb
pop
or
push
mov
out
les
cmp
cli
jp
xlat
outsb
sbb
pusha
sub
push
lock
sub
jle
imul
lret
out
cmp
dec
loop
cmp
pop
lods
ds
xorl
lods
pop
lcall
push
in
ret
adc
ds
bound
cmp
cmp
mov
push
mov
adc
inc
lods
inc
jb
dec
out
pushf
dec
loop
xlat
pop
enter
sbb
cmpsb
jle
mov
fs
fwait
insl
mov
shlb
arpl
lret
bound
xor
es
dec
adcb
jmp
jle
lods
xor
loop
scas
jnp
and
ja
xchg
in
mov
pop
fdivs
aaa
sub
or
jge
lret
rolb
add
xor
jno
fmuls
push
loop
lret
popf
xor
and
adcl
cld
das
orb
mov
movsl
pusha
notl
pop
mov
add
fimull
mov
jae
lods
inc
pop
adcl
je
sbb
iret
and
ficoml
lds
cwtl
das
mov
stc
xchg
leave
stc
mov
mov
mov
cli
mov
mov
jecxz
in
pop
icebp
inc
push
test
xchg
mov
out
mov
pop
loop
mov
fimuls
cli
ds
add
mov
xchg
xlat
mov
inc
fdivl
pusha
test
pop
jmp
cmp
mov
scas
dec
sbb
ja
mov
mov
rclb
rcrb
testb
inc
sub
pop
lock
pushf
mov
push
jmp
or
insl
pop
mov
xchg
lea
mov
fnsave
test
sub
or
mov
pop
scas
lods
sub
mov
add
xor
lods
inc
push
push
imul
test
leave
jmp
cmp
inc
les
outsl
sub
pushf
popf
fidivl
mov
clc
xchg
es
add
inc
push
mov
pop
mov
lea
mov
in
sbb
rcrl
or
loopne
adcl
xchg
jecxz
inc
adc
aaa
into
imul
cmpl
mov
and
sub
je
inc
fnsave
aam
sti
add
dec
sbbb
xor
cmp
xchg
ret
push
sbb
xchg
cs
pop
fsubrs
cmp
imul
adc
vmread
lret
testl
movsl
dec
push
ds
mov
scas
adc
mov
push
jno
std
mov
leave
add
adc
ds
in
add
mov
leave
xlat
outsb
sti
adc
faddl
lds
mov
pop
lcall
mul
sub
loopne,pt
pop
rcrl
mov
aam
test
pushf
sar
push
das
repnz
js
inc
fimuls
lret
dec
in
in
mov
push
mov
pop
mov
das
mov
mov
mov
dec
out
pop
lds
call
pop
adc
push
cmpsl
and
pop
xchg
iret
sbb
sbb
scas
inc
pop
pop
add
fildll
ret
cmc
add
adc
ret
push
add
pop
mov
push
jecxz
inc
faddl
or
idivb
pop
adc
enter
rorb
std
xchg
jl
push
ljmp
hlt
mov
js
loop
xchg
sub
loope
inc
shr
xor
pop
adc
lea
shll
mov
mov
pop
scas
loope
clc
or
or
pop
pop
scas
mov
sub
sub
mov
lods
fwait
adc
and
xchg
lahf
movups
jmp
add
xor
movsb
pop
pop
xor
mov
mov
movsb
aam
xlat
lcall
xor
mov
mov
or
dec
aam
es
xor
or
mov
sub
mov
xchg
sub
movl
inc
mov
into
mov
rcll
jl
loop
aaa
adc
pop
xchg
aaa
into
outsl
mov
shlb
pop
call
add
sub
ds
jns
cs
aas
sbb
hlt
fistpll
rcrb
enter
out
aad
pop
imulb
ret
clc
cmc
call
nop
daa
dec
jmp
mov
addr16
mov
loopne
rclb
aaa
into
test
pop
out
aas
mov
lahf
sub
xchg
movsb
mov
jle
fidivl
and
hlt
pop
mov
mov
jge
jns
push
out
mov
pop
cli
out
xor
adcb
nop
add
fdivs
jmp
repnz
and
cmp
leave
dec
inc
fidivrs
jmp
sbb
adc
adc
push
test
fwait
push
filds
adc
push
cmp
outsb
insb
push
jo
mov
rolb
sahf
add
xlat
popa
sub
rcll
aaa
into
test
aaa
into
add
xor
movsl
cmp
aad
lret
lds
fs
cmc
xor
in
pop
mov
adc
cmp
push
shrl
rol
fidivs
test
sbb
jge
clc
pop
xor
dec
adc
mov
fwait
sub
mov
leave
pop
icebp
cli
mov
inc
sti
pop
bnd
cltd
xor
int3
ds
lret
push
ljmp
and
les
push
jmp
xor
and
jge
push
jmp
cwtl
fs
mov
aam
imul
push
popa
clc
aas
daa
es
js
dec
jecxz
xchg
pop
hlt
mov
and
add
loope
sub
lock
push
mov
lret
loop
loop
or
dec
es
nop
ds
loope
mov
and
push
sub
ret
pop
movsl
inc
pop
hlt
jbe
arpl
jbe
cli
xchg
shlb
xchg
data16
popf
xor
ja
xor
cmp
ja
ds
lahf
fdivl
lcall
sub
outsl
push
inc
inc
sbb
js
or
xor
sbb
xor
fsubrs
nop
pushf
xor
int3
imul
jmp
rcrb
mov
fdivl
cs
mov
movsb
cmp
push
jmp
mov
push
pop
dec
xor
in
imul
sti
xchg
or
nop
daa
lods
and
int
cmp
scas
std
int
out
enter
and
xchg
adc
adc
or
mov
and
push
cmpsb
push
out
sbb
sub
adcb
mov
repnz
inc
fstp
sbb
ret
dec
out
enter
lret
bound
mov
push
popf
sub
or
dec
pop
mov
dec
arpl
sahf
or
pop
dec
pop
lods
and
pushf
xchg
sbbl
dec
stos
lods
inc
fnstsw
xchg
insb
cmc
dec
loop
lahf
mov
addl
mov
frstor
sub
daa
pop
call
andl
jle
xchg
testb
daa
cmpsl
inc
fcoml
push
lods
inc
andb
mov
stos
stos
inc
sbb
jbe,pn
mov
shrl
rol
sub
iret
add
ja
lret
bound
ja
pop
push
imul
mov
mov
lods
inc
or
xchg
dec
loop
cmpl
scas
imull
call
jmp
rcr
adc
inc
inc
psllw
mov
leave
in
test
sbb
mov
inc
fdivl
int
insl
sub
sahf
sbb
nop
mov
mov
int3
add
add
sbb
lea
mov
leave
mov
xchg
sub
jo
shll
adcl
subl
lahf
loope
int3
arpl
scas
imul
add
push
mov
inc
push
lods
inc
mov
push
xchg
mov
dec
in
cld
in
xchg
cs
mov
cmp
and
or
aam
dec
out
xchg
in
fisubl
cmp
imul
sbbl
sub
fsubrl
push
loope
dec
loope
in
in
jg
test
fimull
mov
push
mov
lret
das
pop
mov
rorl
cmpsb
ret
daa
inc
fcomps
clc
in
out
movsl
out
jne
int
sbb
sbb
mov
daa
mov
mov
sarb
mov
push
in
and
icebp
mov
daa
mov
sub
lret
scas
xor
loopne
clc
jge
xlat
cs
xor
repz
test
repz
ret
add
out
xchg
sub
ja
sbb
test
leave
out
mov
mov
mov
mov
mov
into
gs
xlat
outsb
cmp
imul
lahf
lcall
mov
movsl
mov
incb
stos
add
xor
xchg
cs
dec
xor
jle
adc
lret
ja
loope
inc
adc
movsb
cmp
sbbl
dec
fnsave
out
mov
push
movsl
fisttps
outsl
inc
cmp
push
and
mov
aad
clc
or
and
push
mov
add
mov
lds
imul
inc
fstl
pop
scas
ss
js
dec
fnstenv
movb
cmp
and
lods
outsb
lds
adc
loope
enter
add
fbld
mov
mov
mov
xchg
sbb
jg
adc
xchg
and
sub
outsw
mov
pop
cmpb
or
sub
shl
imul
aas
mov
out
stos
test
iret
inc
or
jg
mov
mov
mov
jg
std
xchg
mov
sbb
pop
sarl
das
filds
ds
inc
dec
ds
jno
pop
jmp
adc
ds
or
lock
adc
les
xor
adc
inc
push
mov
test
mov
mov
cli
xor
movl
add
add
out
test
push
pop
jns
clc
icebp
leave
imul
iret
xchg
divb
das
pop
sub
sbb
sub
testb
pop
fstpt
jo
clc
mov
xchg
mov
cwtl
scas
int3
mov
lahf
mov
popf
stc
jle
ljmp
ret
stc
repnz
sub
push
and
xor
inc
pop
fmuls
dec
inc
add
pop
pop
add
cld
push
outsb
jp
lea
loop
push
jae
jnp
dec
push
enter
cmp
pop
xor
push
or
xchg
ret
adc
dec
mov
push
lcall
in
mov
mov
mov
cwtl
sbb
int3
mov
push
mov
mov
inc
add
xor
flds
insl
xchg
or
test
jl
loop
icebp
jmp
cmc
aam
scas
jge
push
and
popa
insl
xchg
popf
les
pop
dec
pop
jp
push
xor
cmc
push
shrl
lds
ljmp
sbb
push
stos
mov
push
jmp
and
mov
dec
sbb
cmp
ss
sbb
push
pop
out
mov
mov
or
mov
xchg
sub
lods
fnsave
mov
addl
shlb
push
outsl
push
test
mov
and
dec
mov
inc
sub
leave
popa
in
cli
xchg
and
jmp
scas
je
pop
sahf
mov
and
jmp
incl
xor
jb
div
stos
inc
and
xchg
sub
leave
pusha
jne
mov
sahf
xchg
out
enter
icebp
jmp
out
xchg
and
or
cs
clc
lcall
adc
pop
jne
stos
je
xchg
adc
ficoml
xor
inc
sti
scas
inc
sub
dec
int
loop
lahf
mull
jns
es
adc
js
int3
lods
inc
call
int3
arpl
sbb
jae
test
adc
fistl
xor
inc
cld
scas
inc
arpl
xchg
dec
int3
movl
fidivs
adc
push
ljmp
jno
js
mov
stos
test
adc
sti
pushf
mov
and
sarl
test
out
rol
pop
clc
icebp
testb
inc
adc
je
add
mov
push
out
adc
inc
cmp
imul
or
jl
pop
ret
inc
icebp
adc
or
mov
adc
and
or
and
cld
test
shll
push
xor
ss
mov
test
shll
stc
fildl
jb
sub
push
push
pop
insb
add
mov
and
mov
inc
xor
push
pop
mov
loop
bound
add
cs
push
mov
push
and
pop
mov
pop
icebp
stos
hlt
pop
hlt
and
inc
jnp
js
xchg
cs
cltd
cltd
xor
jae
dec
movsl
in
mov
push
shrl
aas
aad
jno
repnz
mov
insl
adc
push
shrb
icebp
aaa
das
push
mov
mov
inc
stos
mov
mov
lods
outsl
lds
cmc
popf
fdivl
data16
mov
and
nop
sbb
outsl
int
addr16
cmpsl
ret
int
js
sbb
clc
sbb
or
fwait
mov
dec
stos
sub
inc
cmc
popf
jae
icebp
lret
adcb
mov
loope
inc
into
jnp,pn
movsb
xchg
cmp
and
inc
fldl
inc
mov
aad
jno
fst
and
jp
mov
sbb
call
aas
jge
cmp
scas
sub
add
in
cmc
inc
cld
mov
pop
mov
sbb
pop
sbb
dec
jge
cli
lods
insb
popa
negl
sarb
and
xor
push
mov
rcr
divl
popl
repnz
adc
cwtl
adc
ljmp
in
aas
add
xor
jae
scas
push
insl
add
mov
nop
sub
icebp
test
es
dec
mov
enter
aam
add
lea
or
test
sub
jo
xor
add
mov
pop
in
sub
dec
in
dec
fcomip
mov
or
cmpl
push
mov
dec
jae
jae
mov
rolb
movsb
shr
pop
mov
outsb
aaa
pushl
sbb
loop
fnsave
dec
add
lcall
out
and
mov
shrb
int
sub
adc
insl
cmp
insb
in
je
pop
mov
xchg
les
in
adc
push
pop
xchg
add
int3
xor
jmp
stos
dec
mov
mov
sbb
repz
roll
mov
enter
addr16
and
in
jg
cmp
dec
mov
scas
push
pushf
push
pop
cmc
mov
enter
adc
xchg
out
outsb
or
push
mov
pop
int
xchg
mov
aas
add
test
popf
add
adc
arpl
add
push
loopne
ret
inc
fidivrs
push
lock
xchg
push
sub
or
leave
sbb
insl
jmp
adc
rorl
daa
or
lock
inc
or
jp
call
sbb
xlat
push
out
or
stos
inc
inc
stos
jle
fmuls
sbb
ds
jno
jmp
jecxz
cmp
push
repnz
jae
xchg
inc
jge
mov
ret
movsb
add
xor
notb
int3
in
jae
repnz
xchg
adc
out
clc
arpl
xchg
add
dec
cmovge
jnp
insb
pop
movsl
sub
arpl
or
push
xor
xlat
pop
in
sbb
pop
sub
data16
fsub
push
pushfw
psrlw
jge
lods
pop
fisttpll
loope
roll
adc
mov
sbb
ret
pop
pop
rcll
cld
pusha
push
dec
mov
push
cmp
xchg
cmp
js
xchg
jae
test
lcall
mov
addr16
sub
cmpsb
mov
insb
daa
push
cmp
inc
mov
lock
dec
fcoml
sbb
clc
and
adc
xor
mov
mov
dec
or
dec
pop
push
ficoms
std
ja
repz
ret
jge
in
insl
mov
mov
test
xchg
lea
repnz
hlt
pop
ljmp
inc
inc
inc
andl
ror
adc
lds
repnz
inc
jp
aam
mov
adc
insl
das
cmp
mov
clc
and
jae
adc
pop
inc
fisubl
mov
fwait
mov
test
cmp
sti
pusha
cmpsb
lret
cmp
imul
daa
mov
push
mov
xorb
les
push
aaa
inc
movsb
xchg
jecxz
sub
cs
xor
loop
dec
inc
lret
ljmp
dec
in
nop
jle
push
imull
fs
out
lea
ss
addb
arpl
cmp
jmp
xor
rcll
stos
xor
sub
incl
aam
aam
cmpsl
jno
fistpll
cs
pop
sti
xchg
stos
cmp
cmpsl
sub
sub
xchg
imul
mov
js
int3
sbb
arpl
aam
jns
lea
mov
orl
lods
mov
pop
pop
rorl
jne
dec
push
movsb
xor
xchg
mov
mulb
and
cmp
loope
in
enter
cltd
pop
mov
fsub
inc
mov
arpl
sub
jg
xor
inc
ss
and
out
cmp
lea
mov
cltd
sahf
jp
test
jmp
cltd
dec
adc
mov
mov
lret
inc
adc
stos
adc
xor
loopne
jbe
es
lods
mov
pop
cli
movb
cmp
bound
js
insl
lret
fidivl
lods
mov
jg
or
outsb
and
and
mov
fs
aaa
scas
loope
repz
loop
lods
dec
fwait
mov
xchg
das
stos
mov
cmpsb
adc
scas
sbb
test
xchg
pop
cmp
int
nop
add
lret
adc
sub
and
gs
test
adc
nop
ja
in
sub
jb
dec
sbb
call
pop
ja
sub
mov
insl
test
lret
cmp
sub
sub
xchg
test
sbb
add
jg
jb
add
dec
scas
xlat
sub
jns
mov
dec
adc
lcall
fcomps
push
idivl
pop
dec
mov
test
xchg
mov
mov
push
sti
push
jns
cmpsl
mov
jb
mov
pop
int
fiadds
orl
je
pop
repnz
push
cld
xchg
mov
inc
mov
call
pop
cltd
jecxz
xchg
add
lea
or
outsb
pop
or
adc
xor
dec
test
cmp
pop
std
insl
je
cltd
mov
or
mov
cmp
xchg
mov
iret
inc
lds
outsl
and
mov
popa
jns
sub
sub
fcompl
xor
mov
mov
mov
mov
mov
sbb
mov
insb
rcll
and
dec
push
push
xchg
or
test
test
xchg
sbb
pusha
push
testb
mov
inc
aam
pushw
enter
hlt
fsubl
inc
add
popf
gs
fsts
outsl
dec
out
jecxz
lahf
pop
cmp
sub
shlb
cmc
mov
inc
iret
sbb
ja
add
sbbl
int3
and
pop
xchg
xor
movzbl
cltd
xor
mov
cltd
pop
sahf
or
pop
hlt
insb
pop
das
cltd
pop
dec
inc
fdivrs
jnp
addl
and
cli
mov
cli
ja
mov
inc
and
sbb
jge
test
adc
imul
add
rorl
mov
sub
adc
insb
add
loope
xor
clc
outsb
push
daa
pop
lods
xchg
jae
pop
xchg
lds
popf
mov
test
push
jo
repnz
mov
popa
and
add
mov
mov
mov
push
mov
mov
push
dec
in
jmp
mov
cmp
mov
sub
cmpsl
jl,pt
jl
adc
lds
lcall
arpl
addr16
loope
je
or
jle
arpl
pop
xchg
ja
fs
ljmp
and
rclb
cmc
sbb
loope
lock
xchg
sbb
add
cltd
mov
insl
jns
mov
and
cmp
pop
dec
rcrl
shlb
inc
xor
insb
mov
push
out
adc
pop
inc
fildll
adc
jbe
xor
ljmp
mov
fmul
pop
or
rorl
mov
out
loope
add
scas
add
xor
and
mov
inc
xlat
push
test
pop
cmc
movsl
cld
shrl
jl
stc
dec
out
xchg
mov
mov
ret
xlat
outsb
repz
dec
loopne
adc
lea
addr16
addr16
cwtl
ljmp
test
jne
pop
js
lret
mov
push
push
inc
jp
stos
jmp
cmpsb
inc
push
mov
sti
call
cmp
mov
push
roll
pop
jns
in
mov
xor
cli
ficomps
xor
pop
mov
adc
push
aas
sub
jl
and
inc
dec
cmp
insb
sub
in
rcrb
pop
pop
cmp
lcall
adc
inc
dec
and
push
pushl
into
xor
icebp
mov
push
push
in
subl
pop
movsb
jae
jle
les
rorl
add
inc
jge
imul
shlb
push
test
jmp
and
movsl
cmp
inc
or
dec
xchg
daa
mov
mov
les
xchg
cmc
cmp
imul
mov
mov
aam
fistps
repnz
xor
adc
test
jb
pusha
cwtl
das
xchg
fdivr
nop
or
scas
pop
pop
aad
sub
fbstp
cmp
pop
out
mov
out
test
lods
jbe
fistps
mov
jb
push
push
push
aad
cmp
ficoml
dec
sub
js
cmp
pop
jae
push
inc
aad
xorb
bound
outsl
push
xor
and
push
mov
pop
cmc
sbb
je
cmp
shrb
push
jmp
cs
push
fbstp
shl
aas
adc
cmpsb
cmp
call
mov
rcrb
popa
clc
mov
inc
inc
fidivrs
jp
xor
es
inc
ljmp
push
leave
loop
idivb
aaa
lret
mov
gs
push
sbbl
cmp
mov
das
and
adc
aaa
mov
and
pop
sbbl
mov
mov
pop
pop
add
outsb
ss
jo
fwait
xor
pop
xor
pop
xchg
in
and
push
call
cmp
test
js
pop
cmpsl
insl
inc
fistpl
pop
xchg
pop
jno
std
xchg
pop
xchg
ds
add
and
inc
xchg
fiadds
or
cmp
sub
jl
jle
adc
dec
push
clc
jb
shrb
adc
movsl
cmp
ljmp
mov
jl
sbb
loope
scas
push
sbb
jb
stc
nop
rcll
sbb
push
pop
jmp
jns
call
mov
push
lods
mov
testb
rcrb
push
shr
xchg
repnz
sub
jae
fxch
sbb
jmp
or
prefetch
add
mov
or
mov
pop
mov
mov
jl
outsb
fcom
push
or
dec
jmp
pop
fucomp
movsl
cmp
jmp
push
or
stos
jne
jmp
jne
pop
mov
sarl
int
stos
jp
cmp
lret
sub
mov
pusha
iret
icebp
xchg
sub
icebp
ret
mov
mov
cmp
xchg
xchg
sub
dec
pop
js
shlb
adc
ss
hlt
mov
push
mov
inc
iret
pop
pcmpgtb
scas
out
ja
push
imul
sbb
popf
sbb
sub
ss
cmp
loope
pop
sbb
xor
push
adc
shrl
pop
imul
push
insl
and
mov
mov
xchg
lret
mov
xor
xchg
xchg
cmp
mov
dec
ret
insb
sbb
pop
sub
pop
jle
add
mov
pop
add
fsubrs
es
cwtl
mov
icebp
mov
jbe
shll
dec
jbe
jnp
push
out
adc
insb
dec
jno
ljmp
cmp
cmc
mov
xor
push
mov
mov
testb
cmp
push
sub
mov
montmul
or
cmp
mov
mov
cmc
scas
inc
out
mov
sbb
xchg
mov
push
fidivl
sub
dec
jecxz
mov
mov
jle
rclb
cmpsl
push
addr16
pop
mov
insl
loop
imul
mov
jge
jno
push
mov
das
jns
clc
and
dec
inc
lea
call
add
dec
mov
mov
pop
pushf
in
lret
jge
stos
outsb
popa
outsl
push
xchg
popl
add
mov
xchg
sub
mov
push
inc
xor
jb
pop
inc
xlat
dec
xchg
nop
mov
jge
pop
pusha
pop
mov
jge
and
sub
lret
pusha
divl
and
xchg
loopne
icebp
out
jno
mov
mov
push
fidivs
pop
sub
add
sub
dec
jle
stos
outsl
out
xor
xchg
pop
hlt
add
push
in
stc
and
jp
xchg
jo
jmp
jp
sub
test
cmp
dec
pop
hlt
mov
dec
loope
jo
pop
bound
jmp
push
mov
push
test
subb
int
cmp
xchg
lods
jmp
and
or
ror
mov
loope
xor
hlt
pop
lock
xchg
lods
push
adc
sbbb
mov
pushf
or
mov
loop,pn
scas
sub
les
cmc
arpl
mov
push
imul
stc
sub
lcall
movsl
cmp
scas
push
lods
pop
mov
xlat
outsb
xor
push
movsl
inc
insb
fbstp
gs
push
cmp
mov
push
lret
bound
mov
std
mov
xchg
lds
fs
imul
xchg
mov
push
and
imul
xor
lock
push
push
jmp
xlat
jle
or
mov
push
out
mov
mov
sbbl
xchg
outsl
mov
leave
and
mov
dec
inc
cmp
xor
pop
mov
push
shrl
lods
int
xlat
push
pop
xchg
jnp
xchg
insl
daa
cmc
mov
mov
ljmp
inc
fsubr
mov
adc
dec
ss
addr16
xchg
pop
cli
xchg
dec
es
xchg
push
insl
push
in
pop
in
xor
cmpsb
aas
fistl
mov
fs
movsl
mov
pop
cs
loop
cmp
insl
stos
in
shrl
int3
test
div
filds
rolb
imul
jl
mov
jbe
fnsave
out
test
leave
testl
fdivrl
sbb
inc
sub
ljmp
jbe
sub
icebp
mov
mov
mov
stos
repz
sbb
sbb
scas
pop
lock
mov
jg
cmp
lods
push
push
adc
xor
dec
pop
icebp
mov
jnp
pop
insl
movsl
xchg
hlt
mov
mov
mov
push
out
inc
pop
bnd
mov
and
pop
icebp
pop
inc
pop
aaa
jmp
sti
sbb
scas
sbb
pop
push
ret
sub
jge
nop
push
in
add
js
adc
adc
aam
mov
daa
imul
mov
dec
ljmp
pop
shrb
and
repnz
lahf
leave
adc
test
test
pop
adc
test
lret
mov
fnstsw
ror
mov
pop
scas
loopne
lea
add
jbe
push
xchg
les
pop
popf
xor
es
cwtl
xor
imul
dec
in
hlt
push
out
pop
in
test
fidivs
jb
test
mov
test
cmp
cmp
es
add
jp
lret
cld
fildl
cwtl
or
lret
mov
sbb
popa
clc
rorb
mov
loopne
push
lds
mov
ret
mov
iret
jno
fbstp
xchg
push
in
or
cs
mov
shll
mov
ficoms
loop
test
add
cwtl
xor
addr16
fcoms
movq
and
adc
pop
mov
xor
jne
jl
rcll
std
xchg
aad
dec
loop
idivb
rorl
out
aad
jp
mov
xchg
sub
lods
xchg
sti
repnz
int
popa
clc
cltd
out
sahf
xor
jmp
into
gs
or
mov
mov
pop
mulb
inc
and
sub
pop
push
dec
in
jge
mov
jns
add
xor
stc
repnz
rolb
lods
and
jno
add
pop
stos
and
imul
mov
lea
xlat
outsb
mov
dec
lock
xchg
notl
in
or
or
sbb
mov
insb
mov
pop
enter
ljmp
inc
xor
iret
sbb
xchg
inc
fwait
and
test
mov
fsubrl
out
push
or
push
xchg
sbb
dec
inc
fs
js
pop
idivb
cltd
das
sub
cmp
pop
cmp
push
mov
sbb
ds
clc
mov
pop
sahf
fbld
cmp
xor
push
stos
push
pop
or
aas
xchg
leave
in
mov
mull
jo
repz
xchg
inc
fiaddl
scas
pop
push
aad
idivl
mov
jle
mov
sarb
orb
xor
push
popf
lock
xchg
add
cmpsb
adc
add
push
or
push
or
jns
pop
loope
mov
jno
mov
ljmp
lret
pop
int3
mov
inc
or
out
jg
sbb
sub
xor
dec
add
cld
add
mov
call
mov
sub
cmp
push
scas
iret
cmc
push
mov
mov
mov
pop
mov
pushf
mov
out
add
jp
mov
cmp
dec
or
sahf
dec
sbb
push
sbb
cmpsl
pusha
out
inc
jmp
mov
xchg
cmp
test
adc
daa
mov
inc
cmpsl
loope
cmp
ljmp
leave
test
sub
dec
fildl
or
add
mov
mov
int3
cmp
imul
ret
and
xchg
sub
ror
repz
push
fwait
popf
xor
pop
jb
dec
jecxz
outsl
aam
repz
popf
xor
jns
push
inc
insb
fdivl
pop
add
imul
and
jge
insb
scas
shlb
and
jns
pusha
idiv
lcall
jmp
xchg
ds
and
jle
outsb
add
cs
mov
dec
popa
clc
dec
repnz
in
and
ficompl
sub
fwait
xor
mov
mov
shrb
xor
ret
pop
sub
cltd
xor
dec
loope
jge
mov
jg
stos
inc
push
mov
mov
mov
mov
mov
enter
adc
scas
inc
into
and
mov
fldcw
or
sub
cmp
mov
outsl
sub
lea
sub
popf
jnp
shrl
pushf
jns
ficomps
push
ljmp
insb
xor
std
xchg
cmp
dec
test
add
fmuls
xor
mov
fcoml
loop
xlat
outsb
mov
loopne
popa
shll
mov
xchg
cmp
out
imul
rcrl
lcall
mov
fidivs
sbbw
dec
jecxz
dec
test
ds
xchg
sub
xchg
mov
insl
add
sti
dec
jo
movsb
push
push
xchg
daa
cwtl
js
and
insl
add
int
xlat
mov
fidivrs
and
scas
inc
cltd
and
push
sti
jne
lea
xchg
xchg
cwtl
cmp
leave
mov
mov
jae
add
aad
clc
into
gs
sub
sti
sahf
mov
adc
dec
xchg
and
mov
or
daa
cmpsl
gs
pop
mov
inc
fnstsw
loopne
cld
sarb
jmp
das
stc
xchg
iret
inc
push
lds
fsubrs
scas
in
test
bnd
sbb
mov
jmp
cmp
insl
add
inc
pusha
notl
xchg
adc
add
dec
in
add
pop
push
xor
cltd
cmpsb
mov
mov
ja
inc
xlat
xchg
jns
add
out
cmp
fbld
sub
cmp
push
mov
scas
fnstenv
cwtl
jb
or
pop
hlt
add
imul
pushf
push
or
fistps
dec
cmpsb
pcmpgtb
inc
rcll
push
aas
in
push
fnstcw
adc
nop
ret
xchg
cld
ficompl
mov
add
test
pop
adc
cmp
cltd
lahf
fwait
lret
bound
jo
out
imul
in
inc
arpl
xor
mov
pop
sahf
add
cld
xchg
sub
rcrl
lds
insl
add
mov
lret
fnstenv
fs
fnstenv
dec
xor
add
add
outsl
jb
adc
pop
sbb
mov
notb
daa
jnp
dec
cmp
enter
sub
ret
mov
ret
sbb
aam
ljmp
pop
cltd
dec
popa
mov
loopne
jg
or
cwtl
das
out
roll
adc
pusha
inc
mulb
mov
cmp
fs
leave
pop
iret
push
ljmp
dec
cmp
fidivrs
outsb
add
pop
jae
xchg
insb
add
fwait
push
movsl
sub
testb
push
sbbb
jg
movsl
cmp
mov
jb
out
xor
aas
or
cmp
out
pop
insb
add
or
insb
subl
sub
push
jae
imul
xchg
mov
xchg
sbb
stos
inc
cmp
outsl
xchg
adc
ss
xchg
jns
pop
stos
mov
addl
idivb
addb
dec
shlb
inc
mov
scas
inc
sub
rclb
int
push
sub
xor
fwait
les
push
mov
lret
xchg
jnp
in
sbb
lock
cmpsb
loope
mov
in
xor
nop
or
and
push
or
cs
pusha
xchg
aaa
into
cs
es
sub
push
inc
mov
lret
les
arpl
xor
mov
in
push
and
test
arpl
dec
ret
pop
das
and
jbe
jmp
mov
mov
push
call
in
adc
mov
aas
ret
gs
xlat
pusha
pop
icebp
ss
or
imul
outsl
mov
lcall
adcb
add
push
mov
outsl
mov
insl
or
cs
xchg
jns
pop
idivb
fbld
mov
cmp
jle
or
xchg
outsl
ret
mov
test
bound
jmp
pop
cld
xchg
push
mov
mov
jae
add
pusha
mull
push
movsl
bound
testl
push
jmp
repz
loopne
lahf
add
nop
jne
cmp
push
xchg
pop
scas
add
mov
mov
dec
jle
xchg
outsl
iret
call
dec
and
insl
cmp
pop
out
leave
enter
jb
std
popa
inc
aam
xor
stos
inc
mov
mov
cmpsb
inc
lcall
into
dec
out
jno
push
lods
sub
cld
xchg
cmc
jae
push
movsl
test
pminub
ret
pop
sub
add
dec
mov
sbb
fwait
stos
inc
int
cli
xchg
sub
mov
push
aas
adcb
mov
popf
cltd
hlt
fimull
sbb
dec
in
rorl
ljmp
stos
adc
jae
sub
das
xchg
and
ret
out
loope
fisttpll
pop
hlt
shrb
dec
jecxz
jo
sub
ret
mov
hlt
mov
pop
and
cwtl
das
data16
jbe
loop
pop
rcr
inc
fcmovne
xchg
sub
popa
inc
addr16
repnz
mov
pushf
xor
mov
and
bound
or
sbb
fistps
orl
test
sbb
mov
rcrl
loop
shl
mov
es
int3
mov
push
jmp
stos
daa
pop
lock
ret
mov
jo
pop
xor
adc
aad
jb
es
jne
sti
int3
arpl
call
mov
cld
xchg
push
mov
cld
sbbl
adc
add
and
outsb
add
jb
xchg
sub
xchg
sub
fadd
pop
sarb
inc
fisubrs
xchg
or
pushf
mov
push
in
mov
bound
adc
popa
inc
pop
cld
xchg
dec
sti
fsubrs
repz
hlt
in
jb
push
pop
jae
push
add
enter
ss
or
call
cs
loope
jmp
xchg
das
or
inc
cld
insl
add
daa
loope
cwtl
mov
push
mov
ret
jno
aaa
push
push
in
cmp
pushf
sti
dec
mov
loope
xor
shrb
inc
and
stos
jae
lret
sbb
pop
outsb
add
aaa
in
popw
pop
mov
nop
pop
and
push
jnp
fisubs
cmp
test
adc
xor
adc
dec
xchg
jmp
xchg
jb
jg
push
mov
cmpsl
jnp
sbb
test
dec
test
pop
mov
add
pop
into
cmpsl
loopne
daa
lods
loope
fisttps
fimuls
mov
mov
jp
xchg
xchg
ds
call
into
mov
push
mov
and
mov
mov
jb
inc
pop
push
jmp
popa
adc
cmp
je
clc
dec
sub
add
xor
std
xchg
ret
lods
ss
int
ljmp
or
iret
sbb
push
mov
and
pop
negb
or
mov
xchg
sbb
lods
sbb
push
scas
jmp
mov
das
int
mov
cmp
in
vsqrtss
clc
mov
inc
lock
jns
das
mov
fisubs
test
shrl
cltd
push
insb
aaa
je
mov
jae
xchg
mov
dec
pop
ja
cmp
outsb
mov
jg
aaa
ds
js
mov
push
cmp
sub
aas
addr16
fidivrl
and
xor
ds
jp
adc
cmp
and
xchg
addb
cmp
sbb
add
xchg
jnp
dec
into
inc
insl
xchg
pop
jg
shll
cs
pusha
pop
loope
aaa
movsl
xchg
out
pusha
push
mov
mov
lret
mov
faddl
mov
ficomps
xchg
sbb
push
pop
aam
aaa
push
dec
pop
repz
daa
pushf
xor
mov
mov
fistpl
test
sbb
loop
je
push
rcrl
xchg
loopne
mov
xchg
adc
xchg
adc
sbb
sbb
cmp
xchg
pop
shrb
fsts
bound
icebp
push
push
les
push
and
inc
mov
out
dec
mov
xchg
cmovge
xchg
mov
dec
out
setl
mov
jg
push
inc
rorl
addb
sbb
repnz
gs
inc
and
push
dec
stc
nop
pop
jae
out
movsb
jl
lcall
jl
int3
aam
add
jecxz
mov
icebp
cmc
andl
daa
dec
test
sbbl
out
inc
jecxz
pop
adc
cmpsb
je
sahf
xor
outsb
fnsave
dec
les
or
inc
loop
pusha
jmp
aam
sarl
xchg
xor
adc
push
andl
jp
shlb
jg
mov
xor
cltd
ja
mov
pop
mov
push
xchg
nop
stos
loopne
call
mov
or
shl
push
and
orl
lret
xor
and
movsl
fsubrs
sbb
negl
rclb
mov
sbb
sub
lds
mov
mov
fnsave
enter
sti
cmp
sub
cmp
cmpb
adc
pop
push
lcall
dec
js
push
ds
outsl
jb
call
jg
test
je
dec
out
mov
dec
push
das
movb
sbb
shlb
pop
jle
dec
stos
inc
ficomps
out
lds
jg
jo
es
push
imul
pop
in
push
pop
out
push
xor
frstor
jbe
push
mov
arpl
sub
out
scas
inc
xor
adc
sti
pop
cmp
cmp
cmp
out
cld
xchg
mov
lcall
fistpl
jp
popa
jno
adc
mov
sub
lret
insl
mov
aam
fnsave
out
in
xor
cmp
or
mov
jns
pop
xchg
dec
add
shll
outsb
sbb
mov
mov
insl
hlt
push
sbb
jnp
pop
les
xchg
ss
icebp
addr16
cmp
mov
push
xchg
sbb
xchg
mov
push
lret
mov
xchg
cmp
jle
sbbl
imul
cld
cwtl
and
mov
rcrb
mov
mov
popf
xchg
push
mov
push
stc
outsb
add
imul
bnd
test
mov
mov
dec
lea
mov
mov
xchg
test
push
mov
adc
jno
sub
cwtl
inc
sbb
cmp
into
iret
xchg
std
in
aas
jno
scas
bound
in
cmp
mov
push
cli
fcoms
push
sbb
sub
lock
hlt
scas
jno
pusha
mov
out
in
cld
mov
fiadds
jnp
push
xchg
int3
and
dec
inc
dec
jmp
into
data16
cmp
mov
add
out
in
dec
and
mov
int
jl
xchg
xor
fbld
jbe
int3
jne
into
xchg
pop
repnz
in
nopl
mov
push
fnstsw
mov
adc
ret
int
shl
mov
or
push
pop
in
aas
sbb
xor
add
push
out
push
or
fndisi(8087
pop
gs
pushf
loope
cld
xchg
sbb
shlb
pop
movsl
loopne
aaa
dec
in
sub
add
adc
shll
sbb
lahf
dec
pop
mov
push
out
rolb
pop
add
push
mov
jl
jp
add
mov
dec
cmc
add
nop
insl
icebp
clc
and
mov
pop
out
lret
imul
js
ja
add
mov
mov
aas
std
push
cwtl
jmp
repnz
mov
sbb
cmc
pop
xor
adc
xchg
cmc
loopne
rcll
ret
shr
sti
je
cmpsl
ds
xchg
hlt
adc
bound
inc
sbb
es
test
dec
push
inc
icebp
aam
sbb
or
jecxz,pn
push
clc
cmp
clc
test
pop
mov
xchg
push
rolb
stc
jl
ds
and
cmp
xor
int
ljmp
jo
das
je
shlb
mov
lcall
lods
lcall
in
int3
scas
int
push
bound
pop
mov
inc
pop
pop
fimuls
popf
add
pop
shl
add
orb
xchg
adcb
dec
xchg
pop
dec
fucom
mov
xor
mov
fcoms
jo
jns
push
inc
push
mov
or
imul
repnz
add
jno
fs
inc
push
stos
sbbb
movsb
mov
cmpb
pop
pop
cld
cltd
mov
fucomi
pushf
xor
std
out
in
jb
cmp
cltd
stc
neg
jns
aas
push
add
add
jmp
adc
popa
xlat
outsb
xchg
notl
std
xlat
hlt
fs
mov
or
clc
push
pop
popa
fimuls
or
data16
out
inc
xchg
pusha
xchg
sub
lahf
push
scas
add
mov
mov
jb
ljmp
dec
adc
arpl
mov
jnp
pop
lcall
lods
hlt
out
or
lds
cmp
shrl
decl
dec
xor
imul
jno
aam
lea
insb
imul
push
in
jmp
push
or
pop
enter
dec
mov
adc
xor
jge
jbe
mov
xchg
cli
shll
xor
xchg
ret
xchg
fcmovb
mov
dec
or
cmpsb
test
cmpsl
jg
out
xchg
xchg
or
data16
mov
repz
jns
into
push
ja
dec
hlt
mov
in
mov
xchg
jae
or
je
out
addr16
push
int
push
incl
ja
lods
push
push
mov
ret
imul
inc
mov
inc
cmp
out
cmp
das
jo
pop
into
mov
or
mov
ret
outsl
xchg
mov
loop
mov
daa
shl
ffreep
mov
xchg
in
xor
sub
mov
or
das
cmc
cltd
or
repnz
fdiv
mov
mov
nop
mov
negb
loopne
cmp
sbb
or
and
dec
add
ret
or
mov
dec
pop
mov
mov
jl
add
push
mov
cwtl
pop
repz
cmp
fidivl
fsubs
gs
dec
pop
pop
adc
cs
mov
inc
mov
data16
call
xor
mov
sbb
es
mov
loopne
push
xchg
arpl
fsubrp
stos
into
incb
enter
pop
and
rcrb
rorl
and
outsl
rclb
pop
dec
add
jb
sub
xchg
or
dec
call
cmc
repnz
push
in
rcll
std
jnp
ds
pushf
test
or
cmp
or
cmpl
scas
movsb
and
sbb
inc
int3
ss
aad
xchg
or
lock
lret
xor
sbb
pop
repz
inc
xlat
popa
stc
jp
popa
lret
test
dec
pop
xor
mov
or
data16
mov
mov
xchg
mov
pop
jecxz
inc
and
into
sbb
add
test
gs
mov
inc
std
xchg
or
jbe
movsb
pusha
pop
lods
inc
pop
cmpl
int3
add
out
movsl
and
std
lds
stos
call
lcall
fmull
leave
cs
pop
cwtl
js
or
sub
add
mov
mul
outsl
xchg
pop
xchg
out
nopl
ret
shll
sbb
mov
repz
lret
iret
shl
push
repnz
mov
imul
pop
test
loopne
jle
rcrl
mov
sub
jbe
in
mov
xor
cmp
lods
jg
dec
mov
inc
test
xchg
ljmp
test
push
stc
test
scas
lcall
stos
inc
cltd
cmp
sub
cmp
loop
adc
push
into
cmp
pop
movsb
sub
je
ret
es
add
xor
xchg
xchg
lea
inc
loope
cmpsb
jb
jmp
jbe
aad
mov
sbb
adc
pusha
das
stos
push
dec
popa
xchg
cmp
push
cmc
pop
xchg
cs
push
pushf
xchg
cmpsb
pminub
ljmp
adc
pop
jbe
jg
ja
xchg
bound
add
push
xor
pop
repnz
push
mov
roll
test
clc
adc
fwait
push
leave
push
mov
or
jnp
test
movsb
adc
lret
popf
jo
hlt
mov
mov
movl
daa
cld
pop
nop
movsl
and
fs
roll
jbe
cmp
dec
dec
sbb
aas
sub
ds
into
xor
imul
hlt
daa
lret
push
fmulp
dec
loopne
fadds
mov
js
ret
aam
cwtl
inc
cmp
xchg
mov
outsb
xchg
insl
insb
mov
popf
adc
lea
xor
jecxz
pop
xor
inc
insb
add
inc
xchg
add
and
stos
xchg
sbb
int
xchg
ret
filds
mov
cmp
ss
jns
stc
and
mov
cmp
mov
popf
mov
mov
fsubrs
test
cmp
xor
sbb
imul
adc
mov
mov
or
mov
jbe
fildll
popf
jne
xchg
cmpsl
mov
insl
int3
jbe
lds
dec
es
inc
inc
or
test
aad
xchg
cmp
push
lea
dec
or
and
les
push
test
inc
mov
in
xchg
jo
pop
cmp
adc
adc
jo
push
add
pusha
pop
lock
and
mov
sub
xchg
mov
ret
imul
mov
repnz
mov
push
jmp
push
xchg
jg
jmp
add
mov
cmpsl
jnp
ret
cld
cltd
add
loope
jge
push
mov
int
mov
insl
sbbl
fdivl
mov
aad
ljmp
push
cmc
addb
push
jmp
mov
test
mov
xchg
push
and
ljmp
mov
sbb
mov
insl
add
addl
xor
mov
jno
pop
pop
inc
es
loop
sub
rcr
fcmovnbe
push
push
jmp
push
push
cmp
sbb
ljmp
outsl
movsb
jmp
xchg
int
xor
push
mov
mov
cmp
addr16
xor
cmc
pop
lret
add
mov
cld
daa
jmp
mov
push
mov
and
sub
mov
les
hlt
push
mov
subl
adc
rcrl
fcomi
gs
mov
fldt
lds
sarb
mov
in
lahf
lock
mov
or
or
test
pop
adc
or
aaa
into
mov
jno
sub
aas
lods
inc
inc
lahf
push
lods
sbbl
mov
fcmovnu
jbe
nop
mov
push
into
loopne
jbe
mov
jo
ljmp
fstl
sub
inc
je
xchg
pop
outsl
popa
movsl
dec
push
xor
inc
arpl
xchg
sub
fidivs
pop
stos
mov
mov
add
kmovw
jl
add
mov
scas
add
shll
jmp
jae
icebp
mov
cmp
out
cmp
jno
mov
clc
xchg
push
repnz
or
inc
icebp
jae
and
fisubs
cld
or
lds
jbe
fadds
or
pop
cld
cmp
insl
adc
js
stc
jnp
cwtl
dec
icebp
mov
ja
loop,pn
sarl
ficomps
lret
and
ret
xchg
out
and
mov
arpl
sbb
xchg
loopne
sbb
gs
pop
fidivrl
mov
das
es
xchg
or
bound
sbb
xor
inc
cmp
movsb
xchg
jbe
pusha
xchg
stos
sbb
xchg
inc
xchg
cmp
nop
xchg
fadds
sub
mov
bound
pop
xchg
cli
push
ja
cmp
mov
dec
jp
cmp
insb
inc
add
mov
push
pop
inc
ds
icebp
outsl
data16
inc
lods
popf
outsb
add
sbb
shl
mov
or
or
rclb
in
lods
push
add
dec
cs
pop
push
inc
cmp
lock
or
push
repz
loope
or
pop
add
xchg
cmp
push
and
call
ret
pop
dec
out
sbbl
pop
cwtl
lock
rcrl
movsb
shll
sbb
inc
je
and
cmp
dec
sbb
mov
popf
push
xor
sub
push
stos
pop
inc
lock
cmp
sub
movsb
cwtl
xchg
je
pop
out
addr16
testl
mov
jo
test
sbb
dec
mov
or
push
mov
mov
fmuls
addl
popa
mov
loope
jnp
sbb
xor
and
xor
sbb
pop
das
sbb
gs
daa
jne
mov
ja
and
dec
dec
push
xlat
movsl
in
gs
in
xchg
mov
daa
pop
dec
push
int
sti
jl
outsb
and
mov
fs
test
pop
mov
fnstenv
aam
call
test
loopne
add
int3
mov
mov
push
dec
call
xor
repnz
jecxz
rcll
imul
testl
mov
pop
xchg
fsubl
fs
dec
xor
fmuls
pop
pusha
sbb
cmp
out
inc
incl
push
imul
mov
inc
fldl
push
mov
inc
fiaddl
outsl
and
ror
add
cmpsl
out
pop
pop
cmp
sbb
mov
mov
frstor
iret
lret
xor
es
sar
and
add
jmp
idivb
sar
es
mov
adc
shl
fmulp
mov
jg
jmp
jge
mov
cmp
popf
push
insl
int3
cs
addr16
jns
adc
leave
mov
out
je
in
jae
inc
fadds
cmp
mov
pop
xor
xchg
fcmovnbe
cmpsb
ret
push
lods
rol
pop
aas
mov
dec
cmp
xor
dec
lea
scas
adc
movsl
mov
rcrb
inc
mov
mov
popa
cmp
cltd
add
xchg
sub
push
es
nop
out
sub
outsb
and
movsb
or
xchg
dec
pop
xchg
xor
jecxz
fidivl
aas
dec
call
cmp
mov
incb
adc
lahf
xchg
lret
mov
jecxz
mov
xchg
mov
and
shll
fbld
dec
pop
or
cmp
push
stos
icebp
push
pop
loope
movb
and
lret
or
testb
lods
mov
xchg
sbb
test
test
jg
pop
or
and
stc
dec
jecxz
mov
push
aam
outsb
lcall
inc
sbbb
aam
frstor
ljmp
shrl
call
mov
mov
pop
adc
call
lea
test
jnp
rcrb
std
sbb
push
int
inc
push
mov
ficomps
pop
pop
sarb
and
jns
ret
shlb
push
insb
mov
or
cmc
outsl
fwait
mov
sbbb
jne
pop
inc
mov
inc
push
lcall
data16
cmp
lret
sbb
jne
ljmp
andl
sub
add
imul
dec
or
dec
lea
stos
pop
xchg
mov
out
addr16
mov
clc
fldcw
mov
inc
add
or
push
clc
mov
hlt
cmpsl
nopl
fbstp
mov
testb
mov
movsl
pushf
jle
lahf
dec
sbb
es
push
lea
mov
mov
pusha
lea
and
mov
cmp
outsb
sub
movsl
inc
lret
xchg
ljmp
mov
adcb
push
aam
inc
mov
es
mov
xchg
jle
adc
int
dec
inc
xor
fistpl
cmp
lds
dec
adc
mov
cmp
ss
pop
imul
xor
jp
imulb
mov
mov
mov
lcall
inc
movl
inc
sbb
xchg
dec
arpl
mov
notl
loop
cmp
subl
or
mov
loopw
jae
add
test
jmp
mov
cmp
inc
imul
lock
cmp
popl
mov
push
nop
jno
ret
push
cmpsl
jecxz
es
lods
inc
push
mov
bound
fsubr
orb
ss
das
pop
sahf
pusha
adc
in
inc
andl
fcmove
test
popa
clc
sbb
repz
es
test
cmpsl
ds
cmp
pop
out
fdivr
add
xor
push
into
fldl
jecxz
scas
adc
bound
jnp
subl
or
pushf
push
xor
add
lret
aaa
filds
popa
push
sub
mov
leave
test
outsb
mov
shll
imul
sbb
inc
cs
aaa
mov
adc
push
or
push
call
push
sbb
scas
nop
sub
cmc
mov
mov
insb
daa
data16
mov
push
or
pop
das
mov
add
adc
jecxz
pop
mov
jge
cmp
icebp
sbb
push
sar
sahf
xor
pop
lods
mov
mov
and
push
pop
scas
mov
in
les
cmp
fdivl
add
xchg
xchg
mov
mov
inc
lret
pushf
and
fstpt
cmp
lea
mov
shll
in
cmpsl
push
push
insl
xor
or
sahf
aas
xor
stos
ss
sti
pop
shll
imul
repz
jb
test
fidivl
cmp
inc
inc
xchg
lods
ja
cmpsl
dec
xchg
int3
cltd
push
cmp
clc
rorl
push
notl
aaa
sub
out
loop
aad
adc
pop
icebp
insl
jge
push
ss
xor
loopne
pusha
iret
pop
fs
dec
andb
xor
iret
jecxz
test
sub
pop
jno
jno
inc
fnstsw
or
and
adc
mov
inc
jns
push
xor
sub
sbbl
pushf
pop
repz
cwtl
ret
bound
out
jmp
mov
imul
mov
test
dec
jecxz
inc
cmp
xor
loop
xorl
mov
pop
insl
cmp
pop
call
add
and
into
and
cs
sbb
dec
mov
mov
xchg
nop
pop
cld
mov
pop
lcall
dec
push
enter
int
mov
sub
cmp
aam
dec
aad
cmp
lahf
add
or
fldl2t
push
and
fistl
cld
dec
mov
addr16
fildll
shlb
xchg
rcrb
shlb
dec
pop
push
sub
pop
mov
mov
and
xor
insb
loopne
inc
jecxz
sub
and
adc
test
hlt
cmp
popa
fmull
out
mov
in
fistl
lret
cld
je
test
leave
in
jl
push
pop
sahf
aaa
lret
ficomps
xor
adc
push
push
push
cmc
pop
lock
or
dec
mov
jo
notb
int
fadds
aam
loopne
les
xor
add
mov
mov
xor
test
add
dec
rclb
mov
in
cs
mov
stc
pop
jle
xchg
mov
jnp
lock
dec
in
xor
inc
in
push
ret
aam
and
push
sarl
adc
jg,pt
dec
lods
imul
push
fsubl
lcall
pop
sbb
or
xchg
cmpsl
inc
push
inc
and
test
inc
jecxz
cmpsl
arpl
icebp
insb
mov
sbb
push
mov
cmc
and
fists
push
ljmp
jno
js
lods
push
adc
enter
xchg
out
mov
jbe
test
lods
test
xchg
sbb
js
aaa
mov
out
mov
popf
and
mov
movups
mov
js
int3
mov
aaa
lock
es
fdivs
ret
call
mov
or
test
lss
xchg
pop
les
jae
pushf
dec
mov
std
lds
and
sbb
xchg
lods
xor
shr
scas
inc
push
dec
jns
stc
mov
inc
imul
jae
add
inc
pusha
out
xchg
dec
aad
jmp
adc
cmpsb
mov
inc
inc
add
inc
or
sub
ret
fdivl
adc
ret
hlt
mov
into
repnz
xor
pop
jecxz
int3
or
icebp
cmp
inc
inc
adc
inc
shll
in
shl
lods
sub
sbb
mov
xchg
cmp
xorb
dec
movsb
negb
mov
and
pop
aas
or
das
pop
hlt
pop
inc
mov
push
add
or
xchg
js
in
push
test
testl
ss
adc
inc
js
cltd
and
fldenv
fldl
dec
fwait
mov
mov
insl
or
push
mov
pushf
mov
push
dec
in
ficoml
sub
enter
int3
xor
and
rcll
fiadds
jecxz
adc
lods
mov
or
addr16
xchg
in
xor
sbb
or
sub
subl
sbb
xorb
push
idivb
push
cmp
mov
idivl
sarl
pop
inc
xor
mov
xchg
mov
test
mov
and
fsubr
pop
sub
incb
call
imul
fidivrs
push
jne
inc
dec
push
leave
cmp
ja
push
pop
jo
mov
sarl
jb
xchg
sub
lahf
cld
dec
push
cmp
or
xchg
into
sbb
shlb
xchg
dec
mov
jecxz
int
lcall
and
mov
push
inc
jae
jne
jp
and
xchg
jmp
jnp
and
shll
lods
inc
dec
push
insl
and
add
mov
repz
lods
cmp
les
sub
dec
pop
imul
insb
add
sbb
test
inc
js
les
sub
test
out
fstpl
push
adc
inc
pusha
and
jne
fistpl
stos
push
and
inc
sbb
repnz
out
xchg
inc
add
xchg
outsl
xchg
daa
sub
scas
icebp
cmpl
loop
xchg
xor
test
stc
xor
repnz
in
xor
or
ret
pop
mov
dec
pop
inc
mov
pop
cmc
andb
mov
cwtl
adc
add
inc
push
fdivs
bound
dec
jmp
push
sbb
das
xchg
jp
mov
xlat
sub
xor
lea
arpl
sub
ljmp
xor
std
pusha
mov
call
and
movsb
mov
inc
inc
mov
push
sub
js
ds
rcrl
mov
mov
dec
in
or
xor
sub
xchg
sbbb
jns
lods
pop
data16
je
scas
jns
arpl
arpl
cmp
call
sbb
in
aaa
pop
or
cmp
lcall
or
dec
in
xchg
flds
fsubrl
ficoms
mov
mov
int
jmp
jecxz
aas
jle
bound
sub
leave
push
shl
lods
aad
mov
jg
mov
mov
mov
pop
ds
addps
mov
and
dec
gs
pop
in
cmp
icebp
mov
imul
sbb
sub
add
shrl
pop
or
aad
movsl
inc
xor
stos
repz
push
leave
stos
adc
or
jl
les
xchg
sub
stc
push
fldl
mov
or
pusha
or
jge
loope
adc
adc
iret
fcoml
push
pop
cmpb
pushf
adcl
push
sub
in
mov
push
fcomp
int
mov
jge
imul
cltd
in
cmp
repnz
fidivrs
adc
xor
lahf
aas
xchg
mov
andl
push
push
or
imul
jge
xchg
mov
pop
adc
into
pop
outsb
jno
xchg
jmp
xorb
push
aad
loop
jbe
clc
cmpsl
sub
fsubl
cli
pop
loope
pushf
pusha
ds
pop
pop
fwait
outsl
adc
cmpsl
cwtl
xor
stos
inc
pop
xlat
push
mov
test
test
fisubs
dec
neg
jmp
mov
lock
inc
and
ficoms
dec
pop
movsl
xor
lock
mov
mov
sbb
ds
cmp
aad
mov
mov
jns
sbb
aas
lret
scas
popa
fcoml
fsub
pop
lret
jecxz
adc
mov
repnz
or
sub
mov
inc
fstpl
xchg
sbb
adc
ljmp
imul
xor
test
adc
lret
test
fisttps
jecxz
mov
pop
add
stos
adc
and
jecxz
xchg
push
sahf
cmc
add
sbb
ja
or
aas
insb
jbe
mov
mov
lcall
xchg
and
mov
jb
sbb
mov
sbb
imul
and
mov
cmp
pop
fsts
xor
jb
cmpsb
pop
cld
cmpsl
ret
cmp
repz
lcall
and
in
lock
adc
fimuls
lahf
movups
and
mov
ret
mov
shll
sbb
popa
sub
negl
mov
mov
rorl
adc
ljmp
push
pop
push
adc
imul
mov
xchg
sub
dec
mov
dec
movsl
push
push
cltd
aam
jmp
pusha
rorl
mov
outsb
push
and
clc
jl
outsl
push
jne
nop
mov
xor
jp
add
xor
dec
dec
loop
stos
push
inc
sub
rcrl
repnz
and
cmp
inc
xlat
dec
pop
in
aaa
mul
lret
add
xor
cmpsl
mov
push
out
xchg
lahf
mov
das
mov
pusha
fidivrl
aad
push
aam
lret
insb
fsubr
jns
sbb
jp
sbb
pop
sahf
outsb
popf
mov
xor
es
push
dec
scas
shrb
sbb
imul
outsl
inc
sub
or
mov
cwtl
inc
mov
jo
lcall
sub
pop
pop
cmpsl
mov
outsl
negl
fdivrl
mov
push
nop
enter
cmp
fldt
enter
pop
sub
jae
mov
cmp
idivl
sub
aad
pop
pop
movsl
add
movsb
sbb
fnstsw
mov
jns
data16
lret
mov
sub
mov
add
xor
sub
jnp
sub
dec
dec
fistps
ds
loope
add
mov
iret
push
insb
leave
inc
mov
fists
cmpsb
sbb
fs
pop
mov
loope
std
and
loop
mov
cli
inc
push
cld
add
dec
cmp
sub
inc
dec
or
push
push
pop
nop
mov
outsb
mov
repz
rclb
icebp
lea
pop
jno
cmpsl
inc
lods
fmuls
stc
gs
data16
lods
ret
arpl
jb
neg
cmpsl
mov
push
call
cmp
in
cmp
out
xor
inc
add
js
xchg
pop
into
lret
inc
fnop
sbbl
mov
dec
rclb
mov
shl
add
xchg
sub
jns
pushf
insl
cltd
mov
inc
jb
xor
jnp
fsubrl
push
or
incl
mov
sahf
rcr
xchg
arpl
xchg
les
je
call
dec
andl
out
pop
fdivs
sbb
inc
mov
popa
clc
pop
xchg
int
enter
notl
repnz
mov
lock
and
cmp
mov
jp
inc
cmp
sub
xlat
aas
lds
cmp
rclb
shr
push
addr16
fadds
hlt
sub
dec
in
es
repz
or
cwtl
jo
or
sub
rcrw
adc
outsb
imul
repnz
cmp
mov
pop
sbb
dec
jle
fcoms
mov
jle
das
shlb
idivl
cmp
xchg
cmpb
cmpsb
cmp
mov
xchg
jns
inc
ret
stos
cmp
fsub
adc
sub
mov
cmc
pusha
cmp
imulb
addb
mov
imul
ret
xor
push
adc
xchg
ja
shl
xchg
dec
jecxz
xchg
ja
xchg
je
xchg
push
into
repz
sbbb
lds
lcall
pop
stos
push
mov
test
mov
fbld
jmp
mov
xor
outsl
loop
lahf
mov
jns
movsb
cltd
cmp
insl
sub
das
sar
sub
pop
cmpsb
into
stos
test
dec
push
shll
shr
sub
jo
roll
imul
inc
dec
jae
xor
clc
call
xor
adcb
aaa
insb
in
xchg
arpl
and
or
in
dec
loopne
cmpsl
add
xor
call
adc
add
cmp
daa
cltd
icebp
add
loopne
pop
sub
adc
jbe
lods
jae
sarl
dec
jae
ret
scas
ret
sbb
daa
cmp
test
dec
rcll
inc
in
out
or
rsqrtps
cmp
mov
push
mov
mov
cwtl
imul
repnz
cmpsb
cld
pop
repz
leave
sbb
and
adcb
popl
aaa
rcll
sbb
pop
push
cld
pushf
test
inc
and
jne
lcall
xchg
fdivs
jb
mov
push
or
addl
or
stos
and
addb
push
stc
nop
cmp
fdivrl
sbb
pop
pop
add
sbb
int
xor
mov
icebp
scas
test
inc
aam
mov
dec
sub
imul
push
adc
sub
xchg
aad
mov
sub
fdivl
mov
jp
mov
add
dec
add
loopne
xchg
shr
and
push
jp
dec
ja
cmc
mov
mov
xor
jp
imul
call
pop
adc
shll
xchg
shlb
jl
jp
add
int3
repnz
xchg
push
push
push
into
imul
jg
imul
sbb
lret
outsb
jbe
test
or
enter
pop
in
movsb
mov
dec
or
es
dec
add
test
mov
insb
jmp
xchg
cmp
inc
stos
and
pop
rol
fwait
es
cmp
xor
leave
or
fcomi
popa
cld
shrb
andb
cmp
xchg
ja
in
rcrl
in
jp
out
push
imul
dec
push
in
lahf
out
jge
mov
imul
mov
xor
popf
stos
mov
cmc
inc
shll
pop
aad
loop
cltd
in
fstp
and
mov
les
sbb
loopne
fsubrs
cmpxchg
aas
xchg
lahf
cmpb
xor
aad
xchg
jl
stos
fistps
adc
adc
add
xor
pop
add
in
mov
ret
push
out
add
mov
call
pop
inc
lret
repz
js
mov
mov
pop
idivb
negl
pop
scas
insl
add
jl
adc
jmp
rolb
scas
cs
fdivl
mov
adcl
inc
lcall
cltd
cmpsl
xchg
icebp
mov
movsl
push
xor
loope
adc
xchg
in
push
inc
cltd
jp
push
sbb
inc
movsb
cmp
add
clc
push
mov
movsl
mulb
jo
sbb
sub
push
or
clc
cmp
cmp
mov
jge
dec
pop
inc
inc
lcall
pop
cmp
sbbl
clc
inc
call
pop
das
mov
movl
add
sbb
dec
stos
sub
sub
cmp
imul
or
test
stc
jno
sti
das
add
shrl
or
or
fcomps
adc
decb
mov
add
sbb
adc
inc
test
jmp
sbb
add
bound
and
push
stos
adc
ret
adc
arpl
out
scas
arpl
and
in
push
out
mov
cli
push
mov
pop
and
xchg
xor
das
mov
sub
cli
inc
sub
inc
fdivl
sarl
add
cmp
push
and
arpl
inc
xchg
cmpsl
decb
mov
or
add
lret
cld
mov
push
or
pop
stos
es
jmp
push
loope
push
sahf
int3
lods
mov
arpl
loope
add
inc
cs
lcall
pop
inc
dec
add
push
test
xor
ret
xor
repz
pop
dec
xchg
cltd
dec
inc
cwtl
mov
cwtl
add
xor
imul
aad
aas
jecxz
fstl
xor
jo
push
mov
clc
sbb
pushf
shrl
add
mov
test
repz
mov
inc
lods
push
aam
sarb
sbb
xchg
rorl
scas
mov
loope
or
loop
iret
mov
cmpsl
scas
mov
jle
inc
sub
mov
ja
pop
xlat
outsl
mov
std
xchg
jb
out
sbb
cmp
out
cld
imul
rorl
jp
sbb
push
imul
call
dec
jne
inc
arpl
aad
jmp
push
mov
inc
mov
fbstp
stos
cmp
mov
mov
cwtl
shld
mov
and
cmp
je
dec
outsl
repnz
lret
sti
mov
xor
push
test
and
push
insb
push
lret
mov
xor
insb
xchg
push
sarl
mov
pop
pop
out
bound
jno
cmpsl
ret
mov
iret
fdiv
mov
cmc
mov
ljmp
clc
and
push
pop
sahf
inc
xor
xchg
cmp
leave
insb
mov
lods
imul
xor
mov
fcoml
dec
push
jg
xor
daa
sub
popf
xor
dec
ds
fwait
icebp
inc
test
mov
lods
xchg
add
repnz
outsl
push
mov
popf
repnz
adc
jg
mov
push
and
push
pop
xor
jge
inc
mov
fucom
xchg
xchg
adcl
in
or
xchg
sbb
outsl
push
movsb
cmp
xor
clc
mov
inc
dec
mov
or
xchg
cmp
adc
add
mov
std
pop
jns
xlat
and
sub
jg
ljmp
loopne
xchg
leave
cmp
or
xchg
push
sub
andb
popa
push
adc
mov
test
stos
sub
jae
ljmp
insb
int
mov
outsl
inc
fimuls
pop
jnp
test
push
iret
daa
arpl
out
jge
push
lods
pushf
mov
xor
imul
adc
das
lcall
mov
ss
xchg
call
jno
sbb
push
push
pop
cltd
daa
test
or
lock
leave
jle
cli
mov
pushf
xor
or
ficoms
fs
pop
mov
xchg
sub
dec
cmpsb
int3
int
push
sub
or
xchg
or
xchg
push
xlat
repz
cld
inc
xor
mov
and
inc
imul
pop
xor
fsubrl
fnstenv
mov
out
mov
jl
push
aam
dec
sbb
out
inc
ficomps
testl
rcll
add
cmc
sbb
cmpsb
in
pop
jne
fdivl
cmpsb
fcoms
inc
js
movsl
imul
mov
sbb
xchg
lods
jns
shrl
hlt
xchg
sahf
jno
popf
sub
lahf
and
jnp
in
jno
jecxz
cmp
idivl
dec
sub
adc
and
fwait
insl
test
ja
push
rcrb
leave
xchg
dec
icebp
dec
stos
loopne
fdivs
rcrl
xchg
sub
int3
mov
xchg
cld
scas
inc
xor
out
and
data16
push
cmp
push
and
stc
xorl
in
cmc
cmp
adc
insl
sub
jae
dec
insl
bnd
xchg
pop
pushf
dec
pop
mov
test
xchg
mov
sbb
lods
out
loopne
test
sub
cli
movsb
or
push
mov
add
pop
or
mov
sbb
stos
and
sub
loopne
jnp
or
dec
gs
cmp
mov
xchg
and
sbb
push
shr
fistl
stos
rcll
hlt
int3
in
ss
repnz
aam
jbe
sub
pop
rol
out
leave
xor
imul
add
sbb
sub
or
addb
mov
scas
mov
adc
add
push
rorb
outsl
loop
loop
fadd
cmc
xor
jo
jnp
dec
dec
sbbl
incl
and
insl
xor
dec
add
loopne
pop
lahf
mov
ret
fnstsw
push
jno
mov
fldt
lds
dec
and
xchg
mov
inc
jmp
add
lret
cmp
xchg
bound
mov
cmpsb
dec
jge
rorl
into
repz
dec
dec
cmp
lcall
mov
adc
mov
dec
mov
jae
cmp
fcomps
sub
mov
and
cmc
mov
inc
push
mov
fwait
lods
mov
fnstsw
cmp
cmp
sahf
in
stc
cltd
mov
fs
movsb
fsubr
roll
mov
cmp
stos
ffree
leave
or
pop
cmpsb
outsb
sbb
lret
imul
dec
in
mov
leave
inc
jg
scas
inc
xor
cltd
mov
jg
add
movsl
sbb
sahf
fbstp
pop
es
movsl
fisubrs
xor
in
or
jns
push
cs
push
xchg
orb
sbb
jb
rclb
inc
into
jg
pop
les
adc
rclb
out
jp
clc
inc
femms
stos
jle
sub
outsb
mov
leave
popf
push
mov
das
div
sub
xor
jle
sbb
rorb
gs
jg
and
cmp
lret
push
mov
push
iret
je
fdivs
jno
stc
test
sub
xchg
or
sub
imul
in
pop
sub
pop
testb
or
lods
mov
shrl
xchg
push
jno
popa
icebp
aas
jnp
lods
inc
clc
rcrb
mov
jbe
sbbb
sub
jg
dec
pop
sbb
jp
jns
push
mov
lcall
cmp
ficoms
adc
adcb
sbb
mov
xchg
sbb
cli
pop
ret
xor
xchg
out
cmp
clc
ret
movsb
cmp
test
jge
mov
jbe
add
fldenv
mov
inc
and
xor
jge
and
insb
xor
adc
mov
xor
pop
aam
push
sbb
inc
ret
sahf
rclb
xlat
adc
mov
and
and
inc
or
adcb
pop
sub
scas
mov
das
inc
dec
shrl
pop
xchg
out
dec
inc
neg
push
jno
push
mov
or
lret
addr16
in
aaa
or
iret
xchg
jmp
cmp
jne
add
add
in
mov
or
gs
push
out
fsts
in
test
in
inc
cs
test
adc
test
rcrb
sbb
jmp
lock
add
jecxz
fisubrs
xor
push
cmp
push
push
jp
testl
dec
call
dec
jecxz
pop
in
lcall
ja
cmp
and
jo
cli
mov
jns
xchg
and
frstpm(287
call
stc
sub
inc
xor
jp
in
cmpl
or
or
add
daa
and
mov
inc
dec
dec
jl
jno
lret
cltd
lds
mov
cmc
xchg
push
ja
or
or
xchg
push
testb
push
sahf
jno
ja
sub
pop
mov
jmp
ljmp
ss
sub
jecxz
popf
jmp
lds
bound
inc
xlat
jge
sarb
mov
int3
test
lods
pop
outsb
pop
and
sub
in
sub
inc
inc
aam
in
jne
adc
orl
gs
insl
xchg
xor
movsl
xchg
loopne
inc
adc
ficomps
jno
out
sub
daa
and
dec
lret
mov
adc
mov
inc
jnp
jecxz
add
shl
xor
inc
scas
cmp
dec
and
outsb
sbb
jg
pop
mov
hlt
adc
ljmp
or
or
sub
inc
sub
fcmove
aam
pop
inc
sbb
jb
lea
xchg
jns
xor
pop
es
xor
scas
aas
mov
jge
push
ror
pop
mov
xor
int
xchg
inc
in
sbb
dec
mov
jb
rcll
jbe
adcl
incb
daa
aad
test
popf
bound
cmp
dec
popa
and
test
gs
stos
xchg
faddl
testb
jp
xchg
and
inc
push
mov
fwait
jmp
idivb
sub
mov
call
xchg
loopnew
movsb
push
add
or
sbb
inc
push
rcll
mov
fs
shll
imul
push
adc
je
sub
pop
push
jg
dec
xchg
dec
outsb
mov
mov
cmp
mov
es
dec
push
cmpsb
push
in
test
dec
add
mov
les
push
mov
stc
inc
clc
cli
int
scas
divb
add
pop
ss
popa
cmpsl
loopne
adc
inc
lods
inc
ja
sbb
inc
test
jecxz
push
cli
insb
shrb
movsl
pop
xor
adc
lods
fcmovb
loope
into
inc
push
gs
xorl
add
call
outsl
pop
sub
dec
push
mov
or
in
out
mov
lds
je
and
ret
xchg
pop
mov
fmuls
adc
mov
dec
or
mov
sbb
and
imul
inc
ret
jne
ret
stos
dec
mov
xor
push
inc
ds
jbe
dec
pop
dec
and
jge
pushf
fs
mov
movsl
aas
data16
cwtl
pop
cmp
mov
lock
jmp
inc
cmpsl
dec
xor
fbstp
xchg
inc
dec
dec
repnz
rcl
xchg
mov
jle
rdtsc
dec
loope
xor
test
lahf
dec
ljmp
lret
dec
outsl
stc
js
jg
iret
cwtl
mov
rcl
mov
adc
ljmp
addr16
cmp
aam
xchg
xchg
mov
stc
outsl
nop
xor
fidivrl
sub
data16
fildll
mov
lahf
les
add
jl
fidivrl
ja
push
inc
inc
pusha
test
sub
pop
sub
cmpxchg
and
pop
out
cld
pushfw
mov
iret
aas
out
xor
lcall
sbb
subl
jl
add
add
sarb
loopne
xor
lods
addl
hlt
or
dec
loop
cs
sub
mov
out
test
loop
add
dec
insb
jae
pop
xor
sbb
subl
mov
dec
mov
imul
popf
xchg
sub
push
mov
add
jno
adc
imul
ja
jl
lret
dec
sbb
out
add
orl
pop
xchg
insb
inc
mov
lcall
push
into
gs
jecxz
adc
and
cmpl
cmp
test
arpl
lods
pushf
sub
hlt
arpl
js
xchg
test
pop
pop
adc
push
fdivp
xchg
popa
outsb
adc
xor
outsl
das
cld
adc
inc
xchg
xchg
stos
push
out
sbb
bswap
sbb
in
in
es
push
dec
lock
sti
xchg
ja
ljmp
mov
jbe
cs
jne
sub
mov
xchg
sub
jne
sahf
shlb
int
enter
popa
or
call
loop
jae
xchg
mov
rcr
out
add
ja
push
loope
jl
jmp
sbb
push
out
mov
xchg
pop
pop
xor
loop
fadds
add
sub
ret
aam
pop
nop
daa
clc
sbb
ficoml
mov
inc
stc
adc
stos
xor
fiaddl
pop
mov
push
jmp
sarl
enter
push
ljmp
pop
in
aaa
xor
enter
mov
sub
inc
add
push
fs
cmp
mov
xlat
repnz
aad
sbb
mov
and
pop
xor
lods
gs
daa
sbb
iret
adc
cmp
pop
jle
incl
das
sub
loopne
or
or
daa
sahf
mov
fnstsw
cmp
jns
ja
pusha
mov
call
outsb
sub
dec
or
daa
int
mov
dec
sbb
cld
push
imull
jl
std
out
imul
fwait
pop
div
lock
xchg
pop
call
incb
xchg
jo
inc
push
loopne
inc
add
mov
rcrb
in
test
or
shrl
mov
xchg
leave
outsb
add
std
mov
or
push
out
rcll
xlat
loop
aam
fisttpl
cmp
lret
lods
jl
sub
ja
xlat
and
cmpsl
aam
jecxz
jb
cs
pop
scas
mov
xor
adc
pop
mov
fwait
imul
xlat
addr16
mov
jne
icebp
cmpsb
xchg
inc
ret
sub
sbb
ficoms
clc
iret
loop
cld
xor
outsl
test
ret
out
adc
sbbb
jo
ret
pop
dec
cmc
pusha
jmp
mov
lods
mov
inc
pop
lret
jb
rcl
aaa
scas
push
inc
loopne
push
test
xor
das
sub
and
fcompl
or
xchg
sbb
sub
sbb
aas
sbb
xchg
ret
jae
lods
jns
mov
mov
jge
mov
mov
dec
mov
push
mov
xorb
test
lret
sti
and
mov
mov
int3
xchg
cmp
push
pop
lods
mov
lcall
fs
int
xor
dec
mov
jge
xor
notl
mov
xor
and
cli
or
and
je
cli
fidivs
adc
inc
ljmp
push
mov
or
clc
cmp
cmpsl
ds
fstl
sub
xchg
test
dec
xchg
lds
aaa
dec
fistl
aas
fnstsw
cltd
mov
ljmp
jb
pop
adc
scas
push
es
xor
inc
xchg
sub
mov
inc
add
scas
inc
and
pop
movsb
cmp
cmp
push
lcall
jmp
push
sbb
and
fsubs
dec
pop
xor
sbb
jae
push
pushf
pop
mov
rorb
dec
sti
fldcw
stos
test
sar
and
inc
and
imul
push
jg
jle
push
mov
test
or
mov
sub
out
dec
leave
push
jmp
jecxz
mov
pop
sub
and
pop
jge
xor
out
jge
shrb
fwait
lea
pop
and
clc
lahf
and
mov
rolb
ret
lcall
lahf
idivl
add
int
imul
popa
dec
roll
pop
adc
ljmp
xor
pushf
fstpl
push
xor
mov
xor
add
lods
cmc
pop
aas
push
mov
jno
addr16
or
mov
je
jae
pop
scas
lods
sti
xchg
fwait
xor
add
adc
mov
leave
add
aas
loop
mov
je
xchg
in
lods
inc
mov
imul
xor
push
addr16
mov
jbe
in
rolb
in
sub
cli
lret
push
ljmp
xor
sti
stos
pop
and
inc
push
cmp
call
cld
push
gs
sbb
int3
dec
push
inc
pop
fwait
jp
sahf
xor
sbb
pop
repnz
leave
dec
in
jae
ljmp
sbb
sub
mov
pop
mov
cmp
int3
sahf
cmp
repnz
mov
sub
inc
pop
rorl
shlb
sub
jg
adc
add
bound
pop
fldt
out
adc
incb
mov
xchg
add
lods
mov
jecxz
scas
inc
add
or
scas
inc
push
mov
mov
xchg
pop
xor
shl
mov
popa
stos
or
sub
inc
sti
es
mov
inc
add
ja
pop
sub
test
or
cwtl
sub
out
test
nop
sub
mov
lea
pop
sahf
push
mov
lcall
arpl
mov
sbb
pop
out
push
inc
rcr
repnz
xchg
xor
cmpsb
dec
dec
mov
cmp
mov
push
xchg
pop
fdivp
mov
cmp
iret
ss
or
jl
adc
sar
adc
push
inc
mov
ljmp
mov
pop
xor
scas
out
dec
push
daa
pop
lahf
xor
mov
mov
sub
insl
sub
xchg
ret
adc
stc
out
sub
mov
sub
ret
repz
outsl
daa
mov
dec
dec
push
push
add
test
dec
add
fimull
mov
mov
dec
push
test
repnz
xchg
jp
lcall
cmp
xor
cmp
fildll
lods
sbb
sti
fwait
xor
xchg
ja
mov
mov
dec
cmpsl
mov
and
jbe
add
arpl
jnp
std
cmp
cmp
push
sahf
mov
xchg
dec
dec
fsubl
hlt
outsl
sbb
insl
sbb
icebp
xchg
cmp
in
jl
das
mov
push
mov
pop
adc
xor
jnp
and
dec
push
rcrb
sub
cmp
xchg
sub
add
fistpll
adc
movsl
mov
mov
push
pop
dec
loopne
and
stc
add
push
pop
xchg
aam
in
mov
pop
call
lcall
sub
push
lds
sub
cmp
mov
mov
dec
mov
or
sahf
jge
adc
xor
mov
sbb
xchg
sbb
cs
jecxz
sub
dec
lret
inc
adc
xor
jecxz
adc
ja
cli
test
leave
pusha
and
scas
out
aam
or
mov
ret
xor
sbb
aam
movzbl
outsb
call
xor
inc
mov
or
ret
int
xor
in
aaa
adc
mov
xor
scas
je
cmp
cli
and
sbb
inc
inc
add
ret
and
or
sub
cmp
dec
imul
stos
fwait
jge
mov
cmc
xor
rcrb
iret
in
adc
loope
and
add
stos
sub
and
xchg
out
add
mov
mov
aam
pop
push
dec
push
adc
push
push
pop
cltd
fsubl
cmp
xchg
out
add
jns
add
mov
fdivl
out
mov
outsb
jecxz
mov
scas
inc
jb
ljmp
gs
adc
out
push
lock
pop
sub
shl
repz
push
out
inc
jmp
adc
dec
sbb
pop
cmp
das
jnp
push
testb
fadds
mov
fidivs
jo
push
sbb
cmpsl
addr16
cmp
mulb
ud1
cmc
xorb
bound
mov
inc
loope
imul
jb
stos
ror
test
xchg
stos
mov
push
mov
test
and
scas
or
dec
inc
lahf
xlat
xor
jo
mov
notb
in
jo
add
cltd
mov
fldenv
fsubr
lcall
sbb
enter
rclb
or
pop
cmpsl
adc
scas
mov
mov
ficompl
push
pop
aam
mov
xor
cli
repz
in
jge
push
cld
hlt
mov
mov
aam
inc
testl
mov
rcll
imul
jae
mov
mov
xchg
hlt
mov
fwait
test
sbbl
xor
and
fdivl
fisttpl
adc
imull
jg
bound
push
out
ljmp
pop
push
inc
dec
js
inc
outsb
mov
sti
cwtl
fbstp
inc
sbb
outsl
jne
popf
ucomiss
leave
ss
fisubl
in
lcall
rcl
lea
icebp
xlat
repz
xor
cmp
add
dec
sub
test
cwtl
xchg
repz
push
out
push
jb
mov
ljmp
es
xor
imul
inc
cwtl
inc
adc
lock
jle
in
sub
jg
pusha
lahf
jns
mov
mov
inc
add
outsl
test
xchg
outsl
or
pop
leave
mov
inc
cmp
out
test
imul
pushf
stos
inc
push
call
popl
pop
mov
subb
pop
xor
dec
ret
popf
jo
repz
stos
testl
cli
movsl
mov
dec
mov
sub
lret
xchg
jns
jmp
scas
inc
into
push
sub
mov
mov
dec
ja
in
orl
mov
push
sub
repz
pop
inc
sbb
stos
dec
lret
inc
cmp
inc
insl
jge
js
lods
mov
push
das
adc
mov
jp
loope
clc
fcoms
xor
sbb
jecxz
add
add
xchg
jnp
push
mov
mov
mov
dec
and
stc
or
sahf
dec
cmp
sub
out
dec
pop
xchg
paddusb
xchg
pop
std
insl
xor
lds
mov
ret
jle
pop
add
out
in
cld
in
xchg
xchg
adc
mov
out
fnsetpm(287
jnp
adc
push
or
stc
push
pop
inc
adc
shr
sub
pusha
rcrb
aam
push
subl
sarl
iret
and
leave
nop
cli
inc
push
push
ja
and
fcmovnb
pop
insb
pushf
test
dec
loope
mov
out
call
shl
outsl
push
xor
test
mov
push
xor
push
jecxz
or
xchg
push
and
cmp
fs
and
mov
push
add
mov
xchg
jle
mov
xchg
pop
adc
mov
xchg
ljmp
and
adc
rcll
sbb
lahf
pop
sbb
neg
out
sbb
cmp
push
in
test
jl
fisttps
sub
hlt
addr16
or
cmp
test
ja
adc
ds
lahf
dec
fwait
and
rcll
int
lock
cmp
and
mov
ja
testl
adc
cmpsb
xchg
fidivs
test
test
push
mov
mov
or
int
addr16
or
rcll
mov
push
lcall
sub
ds
or
xlat
imull
and
rcrl
stc
inc
in
xchg
movsl
in
pop
repz
outsl
dec
adc
loope
call
nop
jo
lock
mov
xor
imul
mov
test
addr16
mov
les
js
xlat
cs
xchg
test
xchg
xor
cvtpi2ps
xchg
ret
or
lea
movsb
jg
add
push
in
mov
insl
sub
xchg
xor
scas
jb
push
add
test
cwtl
mov
test
repnz
mov
xorl
xchg
bound
mov
jo
in
shlb
xchg
cmp
sub
dec
cmp
test
lock
dec
mov
adc
test
and
sbb
fucomp
hlt
sbbl
pop
out
idivb
dec
sub
movsb
lret
fcmovbe
push
cld
push
hlt
or
cs
lret
push
xor
outsl
arpl
inc
mov
adc
adc
lods
pop
pop
mov
xchg
loop
mov
and
ret
xchg
xchg
dec
loopne
scas
add
mov
fisttpl
ss
dec
xchg
jg
orb
fisubs
mov
sbb
aad
scas
scas
push
pop
pop
jbe
jl
rorb
or
scas
mov
stos
imul
int3
clc
test
or
add
xchg
sbb
fldcw
into
pusha
push
decb
or
push
fstpl
rcr
jne
fildl
arpl
jl
add
sub
or
jg
adc
sbb
or
cmp
fisttps
iret
and
and
aad
or
sbb
lahf
and
js
mov
loope
jb
in
xchg
adc
mov
popa
xor
sub
filds
push
mov
mov
js
or
xchg
jmp
mov
and
mov
xlat
sbb
mov
inc
cs
or
test
into
rcr
or
xchg
sbb
shlb
roll
pop
hlt
dec
addr16
cltd
dec
incb
loop
push
arpl
mov
mov
gs
cmpsl
sbb
dec
out
push
jne
mov
xorl
inc
push
popa
stc
push
test
xchg
mov
dec
out
jecxz
push
in
insl
stos
cmc
push
rolb
fisubrs
cmc
loope
out
lock
fstl
fbstp
test
pop
fwait
stc
pushf
cltd
rcrl
shlb
mov
loopne
fsubr
xchg
mov
xlat
mov
fidivs
inc
rcrl
mov
mov
std
mov
test
or
mov
mov
shrb
jo
xor
testb
int
test
inc
pop
out
enter
rcrb
rolb
sahf
pop
cs
stos
fiaddl
fwait
pop
cmp
dec
loopne
cmp
inc
scas
adc
lods
sbb
and
ljmp
dec
pop
stos
addr16
and
push
xor
addr16
les
add
add
dec
in
les
fstps
add
sub
sub
ror
push
pop
xchg
mov
mov
ret
fcmove
aaa
push
out
dec
jp
mov
xchg
sub
mov
cs
iret
pop
sbb
loop
mov
addr16
sbb
fs
add
ret
int
xchg
cmp
popf
divb
mov
add
inc
sbb
bound
imul
loop
fistpll
lea
fyl2x
inc
push
pusha
into
mov
hlt
and
jns
shlb
mov
sub
or
dec
movsb
sub
cmp
sub
clc
cmp
mov
mov
hlt
mov
daa
mov
pop
sub
or
lock
stos
lea
jb
andl
jo
mov
mov
dec
cmpsl
dec
decb
outsb
jl
das
adc
loopne
cmp
repnz
es
pop
dec
dec
aad
push
fisubrl
xchg
insl
cmp
pop
or
add
sub
pop
or
cmpsb
add
mov
xchg
xor
push
pop
xor
sti
mov
in
insb
xchg
pop
dec
movsl
and
lahf
testl
lds
rolb
sub
xor
inc
repz
rorb
xor
insl
sbb
fcmovnu
es
dec
repz
js
mov
lea
mov
xchg
int
rcll
sub
and
inc
arpl
aaa
mov
sti
cmpl
stos
in
adc
mov
outsb
and
push
or
lcall
lods
clc
into
or
pop
lock
jl
inc
lods
push
fcoml
mov
xlat
add
test
cmp
xlat
sbb
ret
jle
jns
dec
mov
sahf
cld
dec
mov
pushf
pop
fsubrs
pop
daa
out
outsl
inc
call
test
mov
add
or
push
dec
je
inc
sbb
ds
pop
jno
outsb
std
and
stos
mov
shlb
xor
daa
pop
out
das
dec
dec
cmp
adc
movsb
mov
sbb
adc
imul
pop
addb
aam
adc
mov
clc
mov
or
mov
add
test
stos
lahf
loop
icebp
sbb
cmpsl
cmp
hlt
push
repnz
test
inc
or
jl
inc
cwtl
icebp
dec
insl
hlt
imul
shlb
dec
fnstenv
jecxz
fiaddl
sahf
js
inc
fnsave
inc
and
add
fisubs
and
or
xchg
cmpsl
jae
inc
jb
mov
pop
cmp
decb
pop
rclb
shlb
out
fs
cli
xchg
adc
mov
cmpsb
outsl
or
decl
insl
fstpt
loope
pop
insl
stc
cmp
test
imul
adc
das
sub
lods
lds
dec
in
xor
lahf
shrb
jge
push
shll
xchg
sbb
adc
hlt
xchg
pop
cltd
in
test
add
pop
xor
add
daa
push
jmp
mov
outsl
mov
jge
out
cmp
xchg
cli
mov
sarb
or
dec
aad
aas
fwait
xchg
sub
push
scas
mov
sub
mov
cltd
and
lahf
andb
xor
je
xor
mov
push
mov
lret
dec
test
stos
pop
push
cmpsb
nop
or
sub
and
test
jns
leave
jb
push
push
jo
cmp
xchg
enter
jmp
lods
adc
repnz
out
into
pop
in
add
cmpsb
and
rol
jnp
stc
icebp
mov
out
lcall
pop
pop
xchg
mov
in
test
or
idivb
out
mov
subb
pop
aam
xor
sub
xchg
pop
imul
mov
cmpsl
loopne
lea
enter
pop
adc
mov
xor
rcll
scas
add
cmpsl
xor
push
jl
cs
jmp
push
js
insl
mov
in
lahf
push
jnp
imul
push
movsl
mov
scas
cmp
hlt
xchg
lods
scas
sub
mov
dec
movsb
das
pop
lret
nop
push
sub
rcr
mov
mov
cmpsl
cld
aad
lods
ret
pop
idivl
in
xchg
mov
dec
gs
les
std
jb
adc
sub
mov
sbb
outsl
repz
cmp
icebp
sub
push
cmp
jge
or
testb
or
leave
push
ss
xchg
out
andb
pop
neg
jb
aas
bound
sbb
flds
or
sub
sub
jbe
sub
imul
mov
jle
outsb
add
int
ficomps
ljmp
loopne
sbbb
sub
cmp
or
hlt
sbb
pop
hlt
cmpsb
jmp
push
loop
data16
add
inc
xor
scas
pop
push
push
mov
jle
iret
sub
jno
out
or
mov
loope
push
lods
fildl
lea
push
inc
leave
xchg
mov
leave
mov
mov
lret
jmp
cs
shrb
les
loope
das
inc
shrb
pop
cs
aas
loop
aad
loope
and
sub
lods
jmp
cmp
cltd
jo
pop
pop
jmp
movsl
add
mov
pop
push
je
imull
inc
xor
js
jge
sub
push
jbe
roll
fsts
fldcw
pushf
addr16
sahf
jne
adc
sub
fadds
lret
or
lcall
adc
movsb
cmp
mov
xor
add
les
das
fs
cli
aaa
into
and
push
hlt
xchg
mov
clc
and
pop
lods
inc
push
adc
fdivs
arpl
adc
push
mov
lea
pop
jb
ljmp
fdivp
xor
lods
out
sbb
jmp
in
xor
mov
scas
cmp
dec
mov
push
lahf
fidivrs
dec
gs
cmp
adc
imul
mov
cmpsb
arpl
mov
cmpsl
dec
loopne
sub
add
jnp
adc
push
outsl
xor
mov
js
xchg
xchg
jnp
insl
mov
imul
in
mov
push
rcl
loopne
and
fnsave
ret
ljmp
sbb
repz
sbb
lods
pop
dec
jns
aaa
outsl
repnz
fimull
iret
sbbl
fstp
pop
inc
xchg
push
fisubrs
bnd
mov
ja
xlat
testb
add
push
cmp
addr16
in
sbb
adc
mov
fdivrl
add
movsl
push
xlat
mov
cltd
xor
pop
mov
add
dec
repnz
into
gs
mov
adcl
add
ret
mov
mov
push
fsubl
cmc
ja
xlat
push
mov
cmp
ret
mov
push
jmp
cmp
icebp
or
xchg
sarl
push
dec
fwait
cmp
daa
test
add
sbb
sub
cmc
dec
dec
xchg
testl
mov
inc
subb
sub
push
sbb
mov
aas
lods
mov
sub
loope
frstor
jp
lret
lods
packsswb
jno
mov
andl
ret
push
les
mov
mov
int3
arpl
icebp
push
outsl
aad
lea
mov
push
mov
cmp
push
call
gs
leave
sub
dec
sub
ret
leave
xchg
jp
push
mov
dec
pop
mov
jns
xlat
dec
cmp
or
xchg
dec
add
jmp
mov
jne
push
call
inc
sbb
mov
mov
inc
push
out
leave
mov
das
js
rorl
in
xchg
pop
jg
nop
insl
sbb
xchg
lret
cld
sub
iret
fwait
dec
xorb
mov
into
ret
es
insl
lret
outsl
sbb
mul
lahf
mov
stc
shrb
add
imul
push
insb
push
push
mov
mov
es
loope
ret
jne
jns
push
out
hlt
mov
jge
cmp
loope
adc
and
mov
call
xor
push
pop
jmp
stos
xor
aaa
std
je
sbb
sub
cmp
inc
lcall
jnp
pushf
xchg
insb
insl
xor
or
inc
fdivrl
mov
aad
addr16
insl
pop
mov
adc
xchg
sbb
shlb
mov
xchg
jbe
pushf
sub
pop
jne
cs
or
or
adc
inc
into
sbb
insb
add
repz
or
sub
cmp
pushf
jmp
inc
fcmovnb
adc
pop
mov
aam
and
jno
xchg
mov
pusha
out
add
adc
dec
mov
sbbl
sbb
pop
icebp
lods
aas
fmull
mov
or
dec
jmp
test
push
and
mov
mov
sbb
sbb
sarb
scas
cmp
mov
ja
cmpsb
push
leave
and
fst
leave
jo
sti
das
inc
repnz
adc
rclb
push
push
xor
add
sub
jp
lods
fiadds
add
push
aaa
scas
stos
and
sub
xchg
xor
outsl
lock
adc
or
js
add
add
cmc
lret
data16
jns
icebp
stos
or
js
imul
mov
std
popa
fsub
xchg
cmp
movsl
sub
loope
xchg
add
sti
test
mov
rcll
scas
push
incl
push
pop
loopne
jecxz
add
cmp
pop
sub
mov
xadd
cwtl
sbb
fwait
clc
cmp
ljmp
cs
ss
popf
sbb
rcrl
sbb
cltd
rorb
ja
ss
clc
xchg
lods
inc
add
nop
int3
cs
int3
loope
cli
xchg
shlb
dec
mov
cmpl
pop
fisubl
loope
popa
cltd
lods
into
stos
push
stos
pop
pop
push
jno
sub
jp
lods
into
mov
cmp
lods
aam
mov
test
out
xabort
mov
add
sbb
mov
out
out
ja
popf
add
inc
sub
pop
rolb
out
mov
pop
les
jb,pt
aam
mov
and
lds
jl
and
lcall
in
loop,pt
mov
lea
pop
jb
sub
jmp
loopne
xor
jb
enter
dec
in
pop
out
ftst
aad
sbb
repz
testb
add
cmc
xchg
lock
push
sbb
push
push
popf
cmp
inc
int
push
jb
rclb
leave
jecxz
push
imul
add
pop
fisubl
jnp
clc
cmpsl
jmp
sahf
or
vmovsldup
out
jg
xlat
fiadds
mov
pusha
adc
cmp
out
sahf
mov
enter
jg
jecxz
imul
out
rorb
out
or
xor
jns
setbe
fwait
or
mov
test
inc
movsb
out
xchg
or
clc
pop
or
sbb
push
ds
lcall
shlb
mov
into
mov
xor
xchg
mov
rcl
in
shrd
jl
insl
mov
fimuls
mov
or
mov
mov
jbe
add
ret
xchg
lahf
dec
fldl2e
jle
daa
inc
inc
mov
sub
xchg
or
jg
push
xor
dec
sub
nop
imul
test
push
push
mov
loope
dec
sbb
jnp
xchg
inc
xorl
mov
jmp
shlb
ljmp
dec
cmp
sub
insl
sbb
lahf
in
test
test
inc
push
mov
mov
pop
fwait
mov
cmpb
scas
sahf
and
jmp
pop
repnz
mov
xlat
stos
lahf
jns
or
test
mov
dec
xlat
push
push
xchg
in
out
sbb
cmp
sbb
repz
jecxz
mov
sub
sub
or
cmpsb
pop
addr16
and
mov
rorl
cmpsb
sub
in
test
xor
sahf
mov
sbb
mov
popf
scas
xlat
jae
dec
mov
and
sub
mov
or
pop
pop
cmpsl
adc
add
xchg
cli
outsb
or
mov
enter
stos
mov
fdivrs
insl
arpl
pop
rcrl
inc
add
jecxz
cltd
pop
xlat
out
jo
mov
push
mov
es
inc
data16
insl
xor
stos
adc
pop
push
int3
fsub
push
push
xchg
sbb
push
orb
pop
push
sbb
mov
lods
jg
pop
and
dec
pop
pop
pop
cmp
add
movsl
loop
enter
faddp
clc
mov
rcll
popl
dec
es
sub
add
lock
out
mov
ja
pusha
lahf
push
loop
mov
mov
test
popf
lahf
dec
pop
rol
pop
dec
push
pop
popf
xor
mov
sbb
push
call
xchg
inc
aas
lahf
lcall
add
mov
ret
and
sbb
or
add
sub
fwait
setp
pop
dec
data16
mov
xor
add
and
mov
popf
mov
xchg
mov
test
scas
xor
pop
dec
cwtl
add
xchg
dec
mov
push
fsubr
fcmovne
pop
clc
add
sub
loopne
cltd
adc
fidivl
je
fdivl
jae
std
xchg
insl
test
mov
addr16
jne
lods
mov
fbld
cmpsb
mov
mov
inc
bound
mov
xor
lods
inc
arpl
and
mov
rcr
loopne
push
pushl
adc
push
ret
mov
or
push
add
sbb
mov
sti
push
std
scas
mov
fcmovbe
stc
fisubrl
cmpsb
mov
xlat
jns
and
movsl
std
cmp
das
cmp
lahf
mov
movsl
mov
out
insb
in
adc
dec
xor
mov
sub
sub
and
sub
dec
xchg
addr16
pop
dec
cmpsb
xchg
pop
lret
fildll
lods
das
jbe
push
xor
jns
dec
aad
test
std
sbb
mov
int
insl
cli
pop
bnd
stc
or
xchg
cmp
data16
inc
gs
adc
pop
sub
adc
cmp
push
add
inc
aas
leave
shl
xor
loopne
pop
inc
adc
add
sub
dec
aad
jge
popa
and
cmp
es
icebp
sub
ror
lahf
or
jg
out
add
or
add
sahf
jo
or
mov
adc
jmp
mov
test
hlt
pop
inc
nop
ret
cmp
insl
stc
bound
leave
scas
sbb
fld
push
movsl
int
pop
jl
mov
adc
and
inc
sub
lods
or
mov
mov
cltd
jmp
rol
add
ja
inc
mov
xor
pop
xor
mov
cmp
cmpsb
clc
mov
adc
lret
sub
rorb
mov
in
incb
jmp
xchg
cmp
lret
out
lds
pmaxsw
xor
adc
sti
inc
push
jae
sbb
and
adc
scas
jne
adc
xor
in
mov
jns
adc
int
cli
xlat
shlb
adc
repnz
jp
add
dec
jnp
jae
ds
inc
jo
mov
pop
loop
xor
xor
test
adc
ja
and
call
xor
jo
pop
mov
out
das
mov
ficompl
aaa
lret
enter
adc
lret
xor
mov
adc
in
xchg
pop
scas
mov
push
lcall
mov
push
mov
rcl
xlat
fcmovne
pop
and
scas
les
jge
jg
inc
mov
fisubl
mov
clc
xor
inc
or
iret
adc
and
cmpsl
jle
push
push
mov
sub
add
jb
jbe
fsubs
xor
arpl
test
fldenv
int3
inc
ror
push
imul
jmp
ret
mov
pop
mov
and
mov
aaa
in
jmp
imul
inc
loopne
push
repz
inc
std
pushf
jae
in
cli
push
mov
jecxz
and
mov
std
inc
fisubrs
push
sub
sti
cmc
sub
sbbb
mov
or
mov
push
xchg
pop
shr
inc
repz
gs
sbb
incl
nop
pop
push
xchg
roll
jb
insb
in
shrb
retw
xchg
sbb
mov
jle
sarb
sub
jecxz
faddl
push
int3
pushf
daa
jecxz
or
fidivrl
out
jo
fcoml
fs
dec
pop
popf
pop
dec
jle
daa
rcrb
aam
mov
in
push
mov
icebp
jb
mov
mov
adc
clc
mov
mov
dec
loope
mov
add
subl
stos
jae
mov
and
imull
inc
xlat
or
sub
xchg
jg
jne
mov
or
roll
sub
or
out
add
xchg
lock
mov
test
in
mov
add
insb
jnp
push
mov
cmp
ds
repz
ret
in
mov
dec
add
iret
popa
rcl
sub
add
repz
mov
and
xlat
mov
mov
outsl
out
decb
sub
movsl
loopne
shr
roll
loope
xor
inc
and
test
dec
push
add
pop
cmp
loope
inc
push
mov
jb
pop
insb
or
scas
sbb
dec
inc
ljmp
or
adc
jo
cwtl
pop
repnz
cld
inc
xor
jp
fcompl
arpl
pop
js
arpl
pop
shrl
in
cwtl
ret
jmp
or
xchg
jb
iret
nop
dec
push
inc
jge
xor
cmpsb
cmp
add
mov
cli
push
shlb
iret
mov
in
push
cmc
int3
ret
cmpsb
pop
push
jl
xchg
rcrb
pop
cmp
inc
sbb
xor
cs
sbb
movsb
pop
sub
loop
adc
jge
sbb
fnstenv
xchg
andl
scas
je
fldt
ds
imul
rcrl
sbb
mov
mov
sbb
push
in
aaa
dec
leave
je
or
cmc
cmp
jne
cmc
cmp
jb
mov
dec
jae
add
mov
jno
std
aam
mov
loopne
pop
subps
jbe
and
cmp
jle
je
fcoml
push
jl
and
stos
cmpl
pop
cwtl
das
dec
push
imul
scas
mov
mov
fnsave
lcall
cltd
je
leave
movsb
add
add
and
call
movsl
mov
iret
jle
aad
std
pushf
mov
mov
xor
jbe
or
dec
dec
mov
ficoml
adcl
mov
inc
and
and
mov
in
mov
jmp
mov
mov
adc
push
sub
mov
push
fsubl
mov
lret
lret
ret
sbb
pop
icebp
inc
rorl
out
mov
hlt
push
cmp
mov
inc
adc
popa
and
dec
aas
jns
int
insl
mov
inc
cbtw
jl
mov
fnsave
xchg
pop
hlt
push
mov
pusha
repnz
xchg
dec
and
imul
jns
insl
add
ror
xor
mov
lret
in
and
mov
incb
dec
pop
movsb
repnz
in
jbe
mov
inc
cmpsl
fiadds
ret
ss
ja
adc
shlb
mov
xchg
cmp
jae
cmp
jp
dec
leave
pop
dec
jle
and
add
lods
mov
into
enter
or
mov
sbb
stos
sub
and
and
sbb
lahf
test
jnp
jno
pusha
movsl
mov
repz
xor
mov
inc
dec
cmp
scas
add
cmp
dec
loope
ds
jle
icebp
inc
pusha
int
xchg
arpl
inc
sbb
jb
mov
or
mov
add
xchg
push
mov
cltd
shl
leave
pop
xchg
add
push
inc
xchg
test
cmpb
pop
cmpsb
into
lods
push
loop
jo
and
push
dec
popa
sbb
jno
iret
mov
into
xchg
add
shlb
adc
std
test
xor
xchg
in
das
add
loop
dec
aaa
dec
dec
dec
pop
popa
rorb
and
jl
sub
jle
pop
add
movsb
fwait
mov
int
inc
pop
mov
fstps
cs
mov
popa
pop
pop
and
daa
push
cltd
cld
int
mov
jge
aad
adc
call
jmp
inc
movsl
in
ror
outsl
adc
and
jno
jecxz
imul
cmp
cmpsl
sbb
movsb
fldt
aaa
adc
mov
push
add
mov
mov
fwait
popa
inc
insb
xchg
dec
push
in
mov
pushf
xorb
add
mov
fstpt
dec
loope
out
mov
add
ds
adc
fistpll
push
lock
cli
ja
mov
test
mov
push
jb
xor
push
sub
adc
mov
mov
mov
or
sub
test
mov
aam
ret
sub
int
mov
jge
mov
pop
mov
sbb
popa
push
jecxz
or
pop
and
out
mov
scas
je
push
adcl
mov
add
sub
fbstp
ror
sub
xchg
inc
imulb
jo
mov
inc
cmpsl
das
jg
sub
cli
testl
and
push
xchg
cli
mov
add
iret
mov
cmp
sbbl
das
sub
mov
insb
outsl
jnp
dec
inc
loop
or
aas
and
jo
or
fcompl
shlb
aas
scas
inc
dec
inc
pop
inc
inc
movsl
stc
pushf
iretw
int3
pop
aas
mov
out
pop
push
call
pop
xorl
in
cmpb
sbb
out
mov
xor
adc
dec
fistps
xor
std
gs
sbb
fdivrs
pop
frstor
fwait
test
xor
push
and
jecxz
and
int
lea
and
xchg
lcall
jge
sub
dec
repz
inc
sbb
sub
loope
add
aas
push
out
jo
sub
pop
jmp
sar
sbb
test
mov
in
scas
das
push
cmpl
movsb
gs
nop
dec
push
test
in
mov
dec
ljmp
inc
popa
loop
call
push
mov
sbbb
inc
pop
push
jae
aas
aam
dec
jl
dec
cmp
outsb
stos
adc
push
das
pop
mov
ja
pop
pop
fisttpll
insl
jne
lahf
pop
and
fmull
or
out
in
andl
lret
mov
push
fwait
mov
inc
lock
jo
xchg
arpl
pop
push
lods
mov
movsb
jo
sbbb
lahf
das
ret
xor
cld
dec
loop
mov
xchg
jo
imul
not
mov
sahf
nop
xchg
push
xor
mov
adc
popf
jns
dec
pop
fwait
fcom
pusha
or
out
and
popf
cmc
rcrb
aad
xchg
sub
call
leave
add
xor
mov
mov
xor
add
lahf
subb
pushf
xlat
sub
pop
sbb
push
add
das
movsb
jo
popa
push
cmc
push
push
mov
xor
cmpb
out
outsl
jecxz
insl
add
sbb
inc
mov
addb
xchg
mov
les
andb
inc
imul
shlb
mov
out
test
inc
imul
daa
int3
insb
fbld
mov
in
aas
mov
push
ds
mov
jecxz
or
push
rol
push
repnz
and
lcall
ljmp
cmp
cmpsb
jb
and
fxtract
pusha
lret
mov
dec
stc
gs
push
dec
adc
mov
cltd
xor
inc
fsubr
dec
mov
inc
xchg
pop
xor
sbb
sbb
dec
cmp
push
mov
dec
fidivrs
int3
out
cmc
pushf
xchg
in
mov
xor
mov
mov
adc
js
mov
mov
adcl
add
lahf
enter
sarb
jo
push
stc
xchg
push
cmc
mov
popa
adc
psadbw
adc
movl
mov
xchg
and
mov
and
cld
push
adc
ja
and
xchg
outsb
sub
stos
fcoms
inc
clc
mov
dec
push
push
mov
std
cltd
pop
cwtl
mov
sub
popl
gs
loop
dec
clc
xchg
jne
loope
cmp
jns
data16
xchg
repnz
in
fsubrl
sub
sub
jmp
inc
xchg
in
inc
sarl
push
add
pusha
push
fwait
add
jmp
cmp
mov
arpl
or
outsl
popa
cmp
push
and
inc
dec
das
and
push
in
push
aaa
stc
pop
fstl
rcr
add
push
sub
cmp
aam
push
mov
push
sbb
rorl
gs
negb
js
dec
jne
jp
fidivl
int
add
lods
iret
nop
and
ljmp
push
bound
jno
enter
incl
cltd
cli
mov
shlb
lds
fwait
sub
adc
lcall
jg
xor
mov
bt
popf
dec
sbb
movsl
clc
jnp
loopne
add
cmp
pushf
test
mov
adc
cmp
add
aas
movsb
sbb
cltd
lock
lret
or
rolb
daa
mov
mov
dec
lods
pop
sarb
repnz
out
xor
inc
xchg
sub
ja
movsl
pop
addr16
xor
push
pushl
movsl
adcl
add
xchg
mov
sbb
sub
aad
pusha
sti
cs
inc
stos
cmp
sbb
mull
xor
adc
ret
dec
stc
test
outsl
scas
ffree
fdivl
dec
rep
push
add
loop
call
or
je
lahf
test
dec
lret
dec
repnz
jmp
aad
xor
lock
jg
in
testl
shll
inc
mov
sbb
xor
xor
xchg
jb
mov
lret
sbb
sub
xor
push
add
outsl
repz
lds
repz
orb
fsubl
push
int3
inc
icebp
jp
sti
lea
rol
loopne
rcll
pop
mov
cld
push
int3
mov
sub
call
popf
pop
stos
or
sahf
inc
and
fidivrl
sahf
clc
fiaddl
in
lret
je
inc
xor
in
pushf
push
jno
icebp
dec
inc
inc
jg
pop
inc
pop
sti
inc
sbb
push
push
add
mov
dec
incl
std
pop
cli
push
lea
mov
sahf
inc
sahf
jb
lock
mov
negl
dec
dec
mov
sub
add
ss
dec
and
popf
std
push
dec
pop
fsubrs
jnp
cmp
in
imul
ds
je
mov
xor
cmpsb
push
xchg
push
lea
roll
mov
stc
xchg
pop
sub
shr
iret
pop
movsb
lret
cmp
jecxz
mov
add
jae
cmp
sbb
rcrb
pop
pop
cmpsb
mov
sbb
xor
ret
decl
xchg
xchg
ss
sbb
aas
or
mov
jge
cmp
sbb
sarl
adc
xlat
or
inc
push
stos
adc
mov
enter
in
jbe
mov
std
mov
stc
dec
out
and
data16
sub
add
into
enter
xor
dec
add
push
xchg
xor
hlt
jae
pushf
xor
decl
mov
aas
push
adc
and
rcrb
jp
outsl
pusha
inc
push
repnz
sub
ss
inc
mov
inc
arpl
fcmovbe
cld
es
testb
je
pushf
mov
xchg
arpl
cmp
pop
mov
push
test
push
in
sbb
lret
popa
mov
mov
aaa
ljmp
dec
xchg
cld
xchg
leave
notl
mov
sahf
stos
nop
mov
and
gs
pushf
js
xchg
cmp
bound
jno
and
lret
lret
sub
mov
movsb
insl
adc
dec
mov
imul
insl
sahf
dec
je
add
inc
es
rcll
add
enter
mov
loop
jo
loope
and
mov
or
jno
dec
repnz
cltd
popa
clc
lret
mov
sub
fcomps
outsb
sub
inc
aaa
cld
mov
mov
or
sub
shlb
sti
inc
jg
loope
pusha
test
add
mov
mov
fs
mov
pop
sbb
orb
cmp
mov
dec
pop
loop
out
clc
aas
lock
push
xchg
cmp
out
rorb
fiaddl
sub
imul
jg
bound
push
xor
mov
mov
dec
in
jg
inc
mov
xchg
sub
ja
xlat
call
cld
add
nop
cmp
and
dec
dec
mov
adcl
das
jno
out
adc
push
push
mov
and
dec
add
mull
xchg
sub
rolb
aad
lret
shll
mov
cli
out
fistl
pop
inc
jecxz
jp
in
pop
dec
push
sbb
cwtl
dec
push
call
popf
xor
jmp
xchg
testl
call
adc
xor
jno
mov
push
xchg
rcrb
aam
cld
xchg
shl
and
sub
ffree
leave
jle
aad
xor
dec
iret
mov
mov
push
jno
xchg
lahf
mov
dec
cltd
or
add
imul
add
lret
sub
sub
and
popa
stos
sub
sub
repz
jns
loopne
pop
or
pop
cmpsl
jp
outsl
mov
fisttps
jg
push
iret
mov
hlt
aad
data16
cmp
incl
or
adc
test
stc
ss
fisubs
mov
repz
add
mov
fdivl
xchg
movsb
std
push
inc
mov
popf
in
inc
bound
into
adc
dec
and
sbb
jg
or
push
cmpb
es
pop
and
movsb
hlt
daa
dec
mov
adc
adc
shll
lods
cwtl
jl
leave
into
add
sbb
cmp
sbb
ja
xor
and
adc
mov
xor
adc
fs
or
or
mov
pop
sbb
add
das
push
call
in
fldt
or
sub
xor
loopne
loopne
mov
scas
add
xchg
xor
jne
stc
ficompl
xlat
push
lods
or
fldl
adc
fnstsw
rorb
xchg
imul
clc
fwait
or
cmpsl
pop
fwait
cmpsl
mov
testl
or
mov
pop
mov
push
fcomip
or
pop
fbld
aam
push
mov
cmpsb
dec
sbb
sub
jg
jbe
inc
sub
mov
fimull
das
dec
scas
dec
dec
add
jge
testl
cmc
mov
mov
mov
sti
push
pop
mov
sub
ror
jno
lods
inc
scas
xchg
adc
dec
cmp
fdivl
pop
pop
ljmp
jb
xchg
sbb
leave
addr16
xchg
mull
sbb
popf
imul
mov
je
popf
xor
pusha
cmp
imul
push
push
fisttpll
ss
and
pop
bound
jl
mov
xchg
fbld
jg
add
out
addr16
pop
cli
xor
ljmp
fucom
mov
repnz
mov
mov
ret
outsl
sbb
and
or
and
mov
xchg
nop
cwtl
push
icebp
mov
sbb
mov
or
jne
xor
out
cmp
repz
mov
sub
mov
jnp
cmp
lret
xlat
sbb
fwait
pop
gs
add
cmp
fisubl
repz
inc
sahf
and
adc
inc
dec
test
mov
mov
fdivrs
ja
cmp
or
mov
mov
inc
mov
cmp
imul
gs
ja
rclb
jne
lret
xchg
xchg
icebp
sub
movsl
xlat
jns
jne,pn
push
subl
fbld
mov
ret
jae
out
xchg
or
fisttpll
mov
pop
sub
and
add
clc
xchg
hlt
pop
lcall
push
sbb
lcall
and
inc
int3
shlb
xchg
lds
int3
mov
push
sbb
push
or
inc
movsl
dec
movsl
pop
imul
jge
cmpsl
cld
push
pop
pop
xchg
addr16
hlt
xlat
popa
mov
push
mov
mov
add
push
mov
push
lods
add
ret
shlb
dec
and
les
jb
std
loope
into
sbbl
or
scas
jns
inc
stos
push
and
and
scas
inc
pop
add
lcall
aas
push
lea
cmpsb
cwtl
mov
loope
les
sahf
adc
hlt
mov
and
testb
mov
xor
push
xor
and
inc
lods
inc
add
pusha
ss
sbb
and
nop
lret
clc
stos
inc
fdivr
arpl
loop
enter
dec
cmp
cmp
mov
ret
rcrl
cmc
or
adc
or
sbb
lcall
fisubrs
adc
mov
je
les
mov
and
pop
mov
add
mov
cmp
aam
aad
imul
scas
push
mov
ja
mov
jnp
jle
mov
inc
addb
mov
aam
lcall
sahf
ret
jmp
lds
not
jne
cmc
dec
mov
adc
and
mov
xor
cmc
jmp
into
mov
outsb
push
repz
int
pop
pop
xor
jg
push
loope
xchg
jg
push
inc
orb
and
xor
adc
jmp
fsubs
jno
and
add
daa
sbbl
dec
add
mov
pop
aam
cmp
mov
sbb
shl
mov
mov
mov
xor
mov
rolb
or
daa
out
mov
xchg
repz
mov
std
fisubl
orb
repnz
cs
xchg
fistps
icebp
adc
mov
gs
ret
mov
add
cld
lea
mov
sbb
sbb
movsb
sbb
push
xchg
enter
cmpsl
stc
add
pop
pop
fidivs
insb
mov
and
cmpsl
cmp
arpl
popf
rcll
test
xor
gs
xor
inc
bound
adcb
mov
cwtl
repz
iret
insb
sub
add
lods
pop
cmp
inc
push
shl
dec
or
ss
xorb
iret
and
inc
fstpt
jmp
addr16
mov
or
push
mov
scas
ds
cmc
pop
imul
mov
jmp
insl
or
mov
test
fcompl
cli
and
std
pop
pop
dec
jmp
jmp
mov
cwtl
mov
push
pop
shlb
mov
push
fnstcw
in
sbb
xchg
cmp
dec
outsb
mov
add
adc
mov
mov
mov
mov
out
shll
loope
add
inc
rorl
fs
jecxz
xor
and
jl
loope
or
sub
icebp
sbb
xchg
xchg
in
fwait
or
lock
push
lds
dec
cmp
aad
mov
scas
fisttpll
add
cmp
stos
lods
sbb
cmp
jp
loope
sub
push
movsl
mov
adc
jp
leave
rcrl
xlat
clc
sbb
xor
aam
fildl
or
inc
push
outsl
mov
sbb
mov
jnp
mov
pusha
mov
clc
or
lret
cwtl
cli
daa
add
mov
js
jb
pushf
add
mov
arpl
fcompl
loop
test
cltd
shlb
nop
dec
mov
push
and
and
lods
jno
addr16
ss
and
mov
ss
fwait
push
faddl
icebp
movsl
mov
sbb
lea
xor
mov
icebp
jns
mov
mull
mov
pop
test
push
and
pop
popa
and
xchg
sub
adc
jle
mov
mov
ja
pop
outsb
push
cltd
in
mov
push
mov
testl
ret
mov
scas
aas
lock
popa
lods
jg
mov
repz
sub
xchg
push
or
mov
push
cltd
and
ja
mov
jns
jmp
mov
lock
popf
dec
out
inc
mov
sbb
roll
push
jge
iret
shlb
imul
shrb
ds
pop
insl
mov
adc
test
mov
mov
andl
mov
inc
sub
pop
xchg
dec
sbb
sub
dec
negb
icebp
jno
and
jbe
dec
jl
daa
lcall
lea
inc
push
and
fildl
xchg
cmpsb
mov
jmp
jle
clc
xchg
rcr
pusha
or
jb
sbb
mov
mov
in
stos
push
xor
sbb
fsubl
incl
cmpl
fsubl
pop
repnz
sub
add
add
pop
mov
and
sti
rcrl
dec
jecxz
popa
in
fisubl
inc
imul
mov
push
or
fidivl
mov
stc
je
sbb
jmp
xchg
test
or
fbld
xor
push
pop
ljmp
aaa
adc
jno
adc
mov
jle
hlt
fldt
mov
mov
cmpsb
xchg
imul
add
clc
xchg
xor
imul
mov
fistpll
sub
adc
dec
push
dec
test
sub
or
mov
jg
ficoms
push
mov
int
mov
add
jns
jle
call
mov
dec
leave
pop
mov
push
mulb
cs
cmpsl
inc
cmp
xchg
aaa
into
ret
mov
pop
and
shrb
dec
and
or
inc
iret
inc
fs
jb
xor
mov
adcb
mov
aas
shll
lcall
inc
ficoms
mov
sub
add
cs
mov
lret
push
jo
xchg
push
xchg
mov
aad
fildl
and
or
mov
pop
adc
xchg
push
sub
and
push
sbb
bound
shll
or
jl
lods
std
movsb
mov
inc
clc
xor
sub
jno
shrl
xchg
sbb
sbb
inc
rorb
mov
sub
imul
or
adc
out
inc
fidivrl
in
jns
popa
popa
testl
jle
and
in
test
inc
xor
cli
pop
xchg
sub
xor
mov
sbb
push
bound
sbb
insb
dec
jno
int3
adc
lret
sahf
out
xor
and
mov
sbb
add
inc
repz
and
sub
sub
gs
dec
repnz
jno
repnz
loop
mov
jp
outsb
jmp
stos
fs
insb
rol
inc
sub
aaa
outsb
or
lret
or
sti
mov
xor
shll
outsb
jl
push
add
iret
mov
add
xchg
push
push
les
sbb
xchg
mov
ds
jmp
cmpsb
inc
jb
xchg
mov
pop
repnz
fwait
push
mov
push
int
insb
cmp
pop
loop
test
fidivrl
icebp
dec
push
lret
ret
add
lret
jp
or
mov
mov
shlb
sahf
daa
movsb
dec
jecxz
test
push
push
mov
cmpsl
cwtl
mov
fdivs
mov
roll
in
popa
sbb
pop
outsb
dec
mov
pop
ja
test
jns
dec
and
cs
inc
pusha
push
dec
out
cli
mov
inc
push
cli
data16
enter
or
inc
xchg
lcall
test
sbb
jg
push
mov
pop
pop
es
subl
in
dec
push
fisubl
leave
fdiv
push
or
insl
shlb
push
popa
sbb
jae
inc
test
mov
push
mov
mov
icebp
mov
lods
mov
cltd
pusha
ss
test
or
lock
out
push
ljmp
call
jmp
je
xchg
xor
and
pop
mov
push
push
imul
subl
jge
lock
out
sbb
or
scas
pop
jns
pushl
mov
pop
testl
enter
scas
loop
push
in
movsl
dec
ja
rolb
mov
repz
lock
xchg
nop
sbb
jo
loope
sbb
push
inc
push
pusha
sub
icebp
cltd
or
jl
push
push
sbb
pop
cmp
jo
in
xchg
and
insb
sbb
fwait
rcll
and
inc
xchg
push
loopne
sti
fwait
rolb
or
xchg
mov
jnp
dec
jno
add
add
cmc
mull
mov
into
or
pop
pushf
dec
pop
imul
pop
fiadds
aaa
stos
test
cld
pop
dec
cmp
loope
lret
out
or
ss
dec
push
pop
call
or
cmp
add
jnp
loope
jns
xorl
mov
pop
rclb
imul
cmp
pop
pop
add
mov
paddb
sub
testb
jo
ret
pop
cmp
andb
popa
mov
and
jmp
pop
mov
or
dec
divb
cmpsl
into
cltd
inc
sbb
sub
mov
xchg
clc
push
sarl
inc
stos
push
leave
and
and
out
xchg
pop
adc
loopne
fs
lods
lea
sub
incb
in
sub
popf
scas
fildl
xlat
lret
inc
test
fyl2xp1
scas
sahf
and
or
ljmp
pop
out
out
xchg
and
jae
mov
data16
and
and
cmp
fcoms
imul
sub
jno
cmp
and
push
es
loope
imul
sbb
and
fdivl
or
je
pop
adc
sbb
lahf
out
out
int3
orl
outsl
ja
nop
in
test
add
xchg
notl
lahf
stos
mov
mov
mov
push
sub
les
adc
jp
or
js
push
loope
or
push
out
cmp
fsub
or
mov
inc
jno
rclb
jg
dec
jmp
mov
jg
stc
pop
movsl
add
fdivrp
jns
shrb
arpl
inc
cmpl
outsb
mov
icebp
adc
outsb
push
dec
imul
xchg
int
xor
jge
imul
add
xchg
xor
sub
add
lds
mov
mov
mov
cmp
mov
repz
xor
mov
push
mov
fsubr
push
push
std
inc
loop
xchg
sub
add
cs
pop
xchg
mov
jg
testb
mov
es
and
jns
ds
pop
xchg
jnp
cmp
aaa
mov
sub
jl
pop
xor
sahf
mov
xor
mov
push
xor
mov
fisubs
pop
mov
int
test
push
les
jp
or
pop
mov
ss
test
push
or
push
adc
xchg
cli
hlt
andnps
and
nop
dec
lcall
inc
leave
cli
inc
inc
sbb
sbb
pop
pop
adc
ret
pop
mulb
lahf
sbb
mov
cld
fwait
bound
test
mov
jp
mov
mov
pop
test
fdivrl
stc
mov
inc
orb
pop
aaa
into
mov
and
leave
cmp
mov
xchg
xor
mov
cmp
push
repnz
repz
xorb
test
sub
fsubrs
jne
mul
sbb
hlt
fstpt
cmp
stos
fcoms
popa
iret
adc
or
call
xchg
insb
xlat
push
rol
xor
iret
fldenv
cmp
push
inc
es
psubusw
dec
lods
or
mov
cmpsl
shrl
dec
or
aas
dec
sub
call
adc
js
adc
add
push
lcall
lods
loopne
sbbl
lret
arpl
and
mov
pop
imul
xchg
xchg
leave
int
cmp
and
mov
jle
repz
in
lret
cmc
adc
neg
jmp
push
je
jbe
aaa
xchg
repnz
paddd
mov
imul
sub
pushw
gs
popf
xor
sbb
fdivrs
mov
cli
lret
adc
dec
sti
pop
jmp
out
rcl
cmp
cmpsb
mov
xor
cld
shrb
insl
aas
icebp
mov
arpl
sbb
fistl
into
daa
cmpl
fwait
mov
sbb
sub
pusha
push
lcall
aaa
ficompl
fadd
movsl
outsl
pop
inc
dec
pop
in
ret
cmp
add
imul
leave
sbb
jmp
mov
xchg
pop
pop
xchg
fwait
dec
mov
jge,pn
cltd
jae
mov
xor
sub
stos
mov
push
jno
adc
mov
stos
andl
sbb
pop
dec
adc
mov
js
imul
xchg
and
fldenv
mov
insl
mov
mov
pop
jmp
xchg
stc
js
in
mov
lea
test
test
aam
sahf
xor
clc
outsl
xlat
pop
xchg
fidivs
push
dec
pop
aaa
jmp
popa
jmp
jp
mov
and
mov
je
ljmp
inc
out
dec
sbb
mov
push
test
and
cmpsl
jo,pt
subl
out
pop
mov
add
pop
pop
push
int3
das
hlt
push
push
dec
sub
and
adc
or
aam
sbb
int3
pop
xor
leave
push
xor
xorb
or
inc
pop
add
dec
lcall
nop
xchg
mov
in
dec
push
scas
fdiv
movsb
and
adc
add
mov
mov
add
xchg
dec
jge
imul
inc
loop
sbb
out
bound
shrb
scas
inc
addr16
fnstenv
pop
xchg
popf
fnstenv
mov
cmpsl
mov
cs
jg
out
or
loopne
push
fdivl
imul
cs
mov
sub
xsha256
cmpsb
push
lcall
in
aaa
push
loope
cmpsl
pop
mov
shr
aas
sub
lret
xor
jb
xchg
loop
dec
hlt
xorb
clc
adc
dec
fildl
subl
inc
stc
jg
mov
clc
ljmp
test
mov
and
jmp
push
fistl
cmc
ss
and
mov
push
cmpsb
mov
xor
lahf
aaa
pusha
data16
cwtl
adc
or
add
adc
adc
sbb
cmp
lahf
cmp
test
lret
or
scas
mov
fwait
jbe
shlb
mov
fldcw
mov
pop
scas
in
mov
mov
mov
rcrl
xor
dec
and
orb
pop
sub
jnp
insb
and
sbb
pop
iret
pop
add
cmp
xchg
cmp
test
cmp
int3
das
cmp
push
mov
in
ja
inc
mov
pop
push
lods
push
ss
xchg
imul
test
pop
icebp
cmp
dec
mov
xchg
cmp
sub
push
movsb
lcall
lret
mov
nop
dec
sub
notb
add
and
ljmp
sbb
mov
pop
adc
pop
add
jnp
add
inc
adc
adc
pop
push
mov
pop
fimuls
jecxz
mov
mov
mov
dec
push
popa
add
and
addr16
iret
ljmp
or
repz
and
mov
mov
sub
xor
inc
pop
dec
mov
jg
in
lahf
xor
testl
cmp
int
and
call
pop
inc
cmp
in
jnp
sub
push
adc
xchg
pop
xor
mov
les
adc
imul
dec
sub
mov
push
mov
and
sub
cli
jnp
push
mov
mov
push
rorb
lret
cmp
int3
ds
xor
push
cmp
dec
popa
sbb
stc
or
sub
fstps
jnp
inc
mov
test
sbb
ret
leave
std
xchg
sub
jmp
adc
dec
sub
jbe
adc
or
sarl
stos
dec
stc
test
pushf
xor
xchg
jmp
push
stc
dec
or
mov
add
xchg
mov
ret
insl
in
std
pushf
mov
sti
movlps
imul
mov
arpl
dec
sahf
adc
push
subl
mov
movsl
in
mov
push
inc
popf
adc
call
cmpsl
fxch
dec
push
fs
fbstp
mov
push
jbe
pop
dec
mov
shl
mov
inc
repz
adc
add
mov
ja
int
jmp
push
xor
sub
xor
or
inc
out
push
push
inc
clc
sub
repnz
das
push
aas
xchg
add
and
enter
lock
repz
dec
sub
xor
cmp
mov
mov
lret
movl
push
sub
sbb
inc
cli
test
gs
sub
and
sbb
jo
daa
and
jb
mov
jns
ds
cli
sarl
sbb
repz
filds
jb
mov
cli
mov
jns
dec
lahf
test
and
jae
ret
and
xchg
inc
mov
jmp
xchg
sub
dec
sbbb
sub
test
push
push
jae,pn
xchg
lods
insl
dec
les
mov
mov
cld
movsl
pop
xor
mov
pop
jg
fdiv
andl
add
push
sub
or
mov
sbb
sub
aas
popa
sar
repnz
in
push
cmc
cmp
adc
sub
push
sbb
movsl
pop
shlb
dec
fcompl
sbb
mov
fsubl
xor
jp
sub
dec
mov
jns
push
adc
xor
outsl
adc
add
sti
rcl
dec
sahf
stos
mov
gs
test
out
cmovle
xor
movsb
popl
ja
mov
inc
cmpsl
and
fwait
insb
outsl
sbb
push
mov
shlb
loope
add
and
loop
pop
rcr
push
test
xor
loopne
fimuls
jg
sbb
mov
cmp
outsb
jbe
sbb
and
fisubl
addl
xchg
push
lock
jae
movsb
divl
mov
pop
test
and
shll
jg
cmp
dec
xor
and
mov
pop
and
fwait
dec
jne
insb
xchg
fs
lahf
out
pushf
sbb
sbb
stos
xor
jmp
dec
bound
and
or
lock
out
cmpsl
push
xor
mov
out
xor
mov
ret
popf
mov
mov
jae
pop
fisubrs
mov
pushl
inc
jmp
cmp
adc
nop
or
rcrb
xchg
mov
mov
mov
xor
mov
inc
movsl
inc
fcoml
pop
jo
cmp
mov
and
out
pop
mov
test
lret
call
mov
sahf
pop
push
pop
xor
and
inc
fldenv
ss
aad
sub
cltd
gs
mov
mov
jnp
fcomi
jp
inc
popa
adc
out
divl
sahf
push
movsl
mov
xchg
sarb
push
out
cmp
xchg
add
mov
iret
bnd
stos
das
or
repz
rcrb
pop
xchg
sbb
pop
mov
xchg
jmp
out
pop
ret
dec
xchg
cltd
test
or
or
jp
jge
sti
dec
jns
loope
push
mov
cmp
inc
lahf
adc
fcoml
mov
lods
and
xor
rcrl
inc
pause
ja
fwait
stos
cmp
xchg
insl
shl
jmp
aaa
mov
int
outsb
ja
popa
inc
pop
pop
mov
xchg
add
iret
jp
pop
lahf
in
cmpsb
mov
sub
enter
jnp
or
lds
mov
xor
test
mov
mov
mov
lea
or
push
or
enter
ret
in
daa
jp
ljmp
jmp
stos
mov
xor
add
enter
dec
sbb
and
cmp
fwait
inc
lret
inc
aaa
cmp
ss
stc
mov
imull
push
je
outsl
cmpsb
in
sub
lods
jo
scas
mov
add
inc
loope
pop
in
mov
outsl
cmpsl
pop
jb
pop
mov
inc
mov
jl
nop
mov
lahf
daa
pop
imul
in
xchg
repnz
out
ja
gs
sub
mov
jge
cmpsl
lods
lea
xchg
ljmp
jne
fdivl
mov
push
or
xchg
cs
xor
xchg
inc
sub
dec
mov
clc
fwait
mov
pop
fs
in
xor
mov
mov
xor
cli
pop
sub
add
pop
mov
pop
mov
frstor
daa
inc
dec
push
adc
aad
pop
lock
stos
jbe
or
scas
enter
pop
mov
mov
stc
mov
cld
push
fiadds
and
test
loope
int3
mov
jae
xchg
xor
sbb
mov
inc
out
fldt
or
inc
notl
arpl
or
add
adc
iret
push
xor
fcmovu
inc
js
dec
push
mov
xchg
pop
cmpsb
and
add
inc
adcb
mov
mov
jmp
xchg
mov
fists
adc
jg
imul
and
incb
add
lea
mov
jg
inc
imul
pushw
test
mov
pop
cs
jbe
push
sub
dec
xchg
jg
fdivrl
fmuls
pop
imul
test
scas
sarb
add
test
xorl
or
movsl
sbb
data16
stos
jno
pop
jecxz
adc
fimull
subb
ret
clc
inc
mov
inc
push
data16
test
arpl
inc
int3
xor
mov
cmp
repnz
stc
inc
in
rcl
addl
cmp
pusha
rcll
and
sub
jo
jnp
aaa
and
xor
pop
xchg
ljmp
lock
in
std
aad
xchg
add
mov
and
pushf
scas
and
fnstcw
push
jb
xor
movsb
sti
or
lock
push
popa
je
add
je
pop
push
sti
sbb
mov
xor
pop
adcl
inc
insb
sti
cmp
xchg
adc
jno
or
sbb
enter
jecxz
dec
mov
iret
clc
cmpsl
hlt
or
ret
and
or
cli
incb
stos
jns
push
sub
popf
mov
jge
in
mov
std
leave
outsb
inc
ficoms
ret
shll
mov
filds
or
mov
xchg
pop
fadds
xchg
enter
sbbl
add
mov
inc
pop
mov
cmp
lds
jecxz
or
sub
daa
cmp
push
aad
jno
int3
cmp
or
push
stc
test
pop
dec
stc
mov
or
fimuls
sub
sub
imul
into
gs
insb
pop
add
xchg
or
fnstcw
fnstenv
adc
dec
lcall
ja
and
call
shll
jno
sbb
stc
xchg
enter
mov
and
add
rcrl
ret
cltd
dec
adc
inc
add
into
fsubrl
sbb
mov
adc
stos
in
ret
dec
loope
rorl
cltd
push
add
bound
mov
ljmp
fidivrs
jnp
push
inc
and
nop
nop
sbb
or
mov
arpl
int
lock
icebp
popf
icebp
sub
test
sbb
mov
js
ficoms
lahf
xor
leave
mov
jbe
in
out
mov
sbb
jge
cmp
push
icebp
pop
cmpsl
mov
dec
mov
nop
mov
dec
jl
push
mov
inc
movsl
cmp
pop
mull
lock
test
popa
ror
jno
mov
push
leave
mov
or
cmp
negl
push
enter
fcmovne
jno
add
fs
lds
jne
loope
ficoml
jp
dec
decl
rcr
sub
push
pop
outsl
dec
sbb
jbe
ss
imul
test
cmp
xor
mull
inc
leave
push
dec
je
sub
or
mov
and
jg
cltd
mov
imul
cmpsl
clc
xchg
es
sbbl
cmp
push
shr
push
jmp
addr16
push
dec
mov
out
mov
and
xchg
rcrl
xchg
pop
inc
sbb
andb
test
dec
sbb
sbb
jmp
jae
ds
mov
push
outsl
xor
pusha
bound
mov
mulb
loop
loope
je
iret
mov
loope
jge
bound
xchg
add
sar
stos
xchg
lahf
pop
int
adc
mov
push
iret
lea
es
addb
lods
mov
mov
or
leave
shlb
pop
sub
orb
movsl
test
or
insb
add
test
incb
enter
daa
cmp
or
adc
xorb
inc
add
push
jmp
out
mov
addl
lahf
xchg
test
cmp
mov
rcr
xor
add
decb
aas
out
xchg
mov
dec
shl
jl
popf
out
push
aas
add
mov
lcall
leave
mov
adc
or
popa
faddp
sbb
pop
sub
aad
xor
jo
loop
rcrl
shrb
mov
xchg
mull
pop
sub
popl
sbbb
dec
movsl
xor
jl
inc
punpcklbw
xchg
repz
mov
mull
adc
inc
inc
jmp
out
cmp
and
shr
movsb
rol
iret
fcoml
sbb
in
xor
outsl
repz
pop
movsl
push
enter
fcom
mov
outsl
pop
push
pusha
xorb
aad
xchg
xor
cmp
jecxz
mov
mov
jbe
inc
push
push
pop
push
push
push
xor
mov
lahf
mov
push
insl
mov
add
loope
test
scas
lock
icebp
ds
stc
adc
mov
push
test
mov
and
insl
stos
mov
jl
jnp
mov
xor
out
pop
inc
sti
cwtl
das
sub
pop
mov
andl
outsb
loopne
dec
lods
hlt
loopne
mov
into
or
mov
or
pop
lea
repnz
adc
cltd
flds
xor
loop
or
mov
xchg
arpl
popf
mov
mov
jecxz
ss
xchg
mov
push
leave
mov
and
lock
sarb
pusha
stos
insb
shlb
lret
cs
out
sti
jno
ss
test
pop
cmp
mov
sbbb
dec
out
rcrl
pop
cmpsb
loope
cmp
jge
mov
inc
subb
mov
add
xor
ja
lods
pop
clc
cmpsl
push
lret
sub
negb
and
cmp
sbb
push
lods
clc
ja
push
sub
adc
lahf
push
fldt
aad
lods
rclb
inc
movsl
insb
insb
xchg
cmp
jge
divl
sar
push
sub
into
mov
arpl
xchg
pop
fadds
sahf
lds
cmpsb
inc
dec
loop
pop
dec
aad
add
jo
mov
lock
pop
aam
das
insb
icebp
or
out
scas
jae
add
cli
mov
roll
lock
in
aas
push
adc
popa
cmpl
movsb
hlt
ja
xchg
jl
cmpsl
out
ds
mov
test
and
lea
cmp
jl
and
mov
scas
push
cli
sbb
jb
pop
mov
or
rclb
insb
xchg
test
rorb
or
push
sub
gs
push
xchg
inc
inc
popf
andl
sub
jo
rclb
lods
clc
push
lock
cmp
imul
pop
push
push
adc
mov
jle
mov
shrl
fninit
ljmp
les
or
jbe
lcall
push
adcb
jnp
cs
outsb
sbb
imul
jne
xchg
push
into
enter
outsb
jns
mov
adc
mov
out
mov
sub
cs
adc
lods
xor
sub
js
ret
subb
xchg
js
xchg
mov
push
and
mov
int
pusha
jecxz
add
mov
dec
out
sub
test
xchg
out
fwait
shll
and
std
xchg
shlb
inc
xchg
xchg
add
icebp
mov
lods
fcmovb
and
and
dec
repnz
test
js
mov
cmp
pop
push
xchg
outsl
test
mov
xor
icebp
xor
and
mov
xor
gs
fs
xchg
popa
idivl
loopne
shrl
popl
fxch
repnz
je
lods
push
test
jge
das
leave
jae
jno
xor
rorl
mov
fwait
pop
inc
fmuls
sahf
adc
loop
cwtl
xchg
lea
pop
repz
jg
pusha
into
fidivl
stos
sahf
std
pop
mov
xorl
cmp
xor
in
sti
xchg
add
xchg
mov
divl
cli
mov
iret
ror
cld
cld
cmp
xor
pop
sub
dec
stos
stc
pop
repz
cmpsl
and
jmp
stos
lea
int
add
lret
mov
or
rol
adc
icebp
cmp
out
xchg
sub
les
jns
adc
std
pop
fstpt
and
xchg
sub
stos
mov
sub
jno
jbe
mov
int
inc
mov
aam
or
shrb
xor
mov
mov
add
stc
test
pop
mov
jmp
les
gs
loopne
out
shr
mov
mov
hlt
mov
daa
xor
test
mov
mov
fisubrl
mov
daa
fs
cltd
mov
add
or
xchg
aad
mov
ja
mov
push
orb
sbb
mov
cmc
xor
mov
pop
sahf
lods
mov
je
aas
push
sub
pop
add
das
adc
xchg
and
jl
mov
dec
sti
xor
inc
fidivs
nop
adc
dec
pop
fidivl
movsl
icebp
push
insl
push
lods
mov
imul
pop
xor
rcl
sub
mov
mov
mov
dec
mov
cmc
mov
int3
lret
mov
fadds
adc
add
lcall
push
test
jbe
lret
or
mov
loope
aaa
push
xor
daa
jns
add
push
push
pop
roll
fistps
add
arpl
fwait
popf
xchg
xor
xchg
mov
push
repz
cmp
jp
in
cmpps
or
inc
or
pop
xor
test
leave
fsts
sub
jle
into
mov
dec
jecxz
cmp
mov
or
cmc
xor
xchg
push
jl
cmp
test
mov
mov
xchg
pop
push
cli
roll
cld
sub
cmp
cmpsb
popl
ss
sub
inc
xchg
jb
xor
xor
sub
filds
ja
imul
jns
bswap
mov
xor
xchg
xchg
rcrb
push
fsub
sahf
sub
pop
mov
mov
rcrl
pusha
inc
test
sti
stc
fstl
push
repnz
orb
sahf
test
adcb
jmp
mov
jno
sbb
rcr
ljmp
pop
sbb
add
sbb
sbb
mov
mov
sub
mov
js
mov
inc
fwait
pop
xchg
cmpsl
test
mov
push
loop
cmpsb
lods
pop
cmpb
insl
mov
jge
mov
inc
popf
shrl
and
add
sti
popl
xchg
xchg
jmp
popa
or
cmp
pop
imul
lods
xchg
adc
testb
outsb
mov
push
mov
outsl
int3
inc
lods
std
mov
pop
lret
orb
sbb
enter
stos
mov
shrb
repz
mov
bndldx
punpckhwd
push
loope
pop
mov
xchg
test
mov
out
sti
push
in
mov
mov
sub
bound
rcll
shlb
pop
push
out
js
cmp
sarl
sub
ja
push
cs
in
and
push
outsl
lods
pusha
sub
push
pop
nop
addr16
xchg
lods
in
jae
push
mov
jp
lods
or
xchg
xchg
mov
sbb
mov
rcrl
push
jmp
jno
mulb
cmp
or
sahf
add
mov
shlb
lea
das
jg
cltd
subb
sub
loop
and
push
push
mov
gs
push
test
mov
push
lcall
jns
sti
add
je
cwtl
mov
push
jge
push
jbe
pop
mov
cmpl
pop
sub
jns
dec
aas
arpl
jae
std
ds
mov
or
pop
xor
and
inc
aam
jg
mov
int
hlt
je
sahf
mov
ljmp
mov
in
es
jle
mov
popf
stc
or
dec
fdivr
fsubs
sbb
adc
and
inc
push
push
mov
sarb
and
add
rol
lds
mov
in
divb
pop
sub
jg
into
inc
mov
clc
pop
iret
mov
pop
adc
dec
dec
push
outsl
pusha
jmp
xchg
lods
add
das
into
jle
hlt
mov
pop
push
out
xchg
sub
sbb
cmp
xchg
in
lahf
xchg
rcl
or
sbb
enter
pop
enter
mov
pop
test
lahf
out
cld
and
shrl
mov
subb
scas
add
shr
dec
in
out
cmpsb
idivl
outsb
sub
mov
orb
mov
and
xor
loop
stos
add
mov
xchg
ljmp
data16
mov
inc
imul
orl
or
stc
push
cmp
lods
subb
jecxz
mov
out
adc
cltd
xor
test
out
mov
insb
xor
sbb
movsb
sub
adc
sub
ja
fldl
sbb
push
sbb
data16
stos
xlat
sub
jg
loopne
ds
and
pop
fcomp
mov
sbb
test
aas
cmp
mov
or
or
loop
sub
rcll
movsb
push
push
jg
sti
sub
in
clc
jnp
mov
xlat
jg
scas
cmp
sbb
in
stos
mov
mov
sbb
cmp
int3
lret
xor
ds
pop
pop
outsb
jge
xabort
add
push
add
add
xchg
notl
les
rcl
shlb
jle
xchg
sbb
jno
movsl
out
pop
add
in
lret
pop
pop
sahf
cmp
call
punpckhdq
xorb
je
adc
xchg
bound
mov
mov
cmpsb
cs
test
jl
loopne
xchg
sbb
and
cs
add
ret
and
pop
and
mov
fsts
test
dec
or
cmpsl
loopne
sarl
shrl
aad
int
bound
adc
outsb
push
out
mov
lret
push
ljmp
lock
sahf
nop
xor
inc
fnstsw
mov
pusha
jae
fldcw
rolb
jae
push
add
dec
sahf
cmpb
sbb
pop
rorl
push
cmp
scas
cmpsb
stc
mov
and
repnz
in
loope
lea
xchg
mov
mov
lds
lods
daa
push
xchg
adc
sub
cmpsb
pop
dec
mov
fwait
cmp
adc
xchg
sub
aad
and
repz
sub
std
out
outsl
sahf
into
jge
cld
mov
cwtl
movsb
lcall
add
inc
sbb
xchg
sub
add
out
cmpsb
pushf
shrl
pop
inc
int3
mov
inc
xchg
xor
arpl
cwtl
div
jnp
jmp
ret
inc
add
jae
addr16
in
and
fcmovb
mov
div
pop
int3
add
push
sub
xlat
or
ror
fsubl
fistl
jnp
jo
insb
int3
pop
adc
cmp
jp
ret
pop
adc
les
inc
andl
insl
lods
or
fcomip
hlt
xchg
mov
mov
pop
and
loope
cmp
shr
or
mov
ss
das
idiv
cmp
inc
test
xchg
inc
dec
add
cmp
sbb
or
mov
imul
loopne
lahf
ds
sub
hlt
insl
and
insb
push
nop
add
xor
push
lea
inc
scas
das
out
ja
mov
mov
dec
cmp
xchg
cmp
ret
dec
inc
sti
add
jmp
jmp
or
pusha
adc
mov
mov
add
loop
ret
add
adc
fstps
mov
pop
cmc
mov
jo
es
xchg
rol
lahf
in
push
nop
daa
aas
push
sub
stc
testb
lret
nop
fcoml
xlat
outsb
aam
ja
xchg
mov
cmp
ret
pop
pop
mov
inc
imul
ds
lcall
pop
inc
rep
xchg
sbb
dec
int
lcall
inc
xor
xchg
push
aas
or
out
iret
mov
aad
or
std
xor
movsl
jmp
sbbl
mov
lahf
test
test
test
adc
out
dec
xor
aaa
push
inc
lock
incb
sub
and
mov
cmp
xor
jbe
mov
idiv
rcrl
cmp
test
mov
mov
stc
bound
sub
xchg
lods
inc
xlat
aad
insb
inc
inc
negb
fistpll
mov
lds
lea
fisttpl
add
lcall
dec
jae
aas
imul
sub
inc
test
out
aas
test
xchg
mov
xor
mov
mov
and
outsl
mov
shll
add
aas
cmpl
nop
clc
std
sahf
out
test
shrl
mov
or
sub
mov
mov
data16
dec
lods
hlt
cmp
inc
mov
xchg
sarb
adc
jae
ja
movsb
loopne
and
xor
xchg
sbb
cmc
daa
and
xlat
adc
push
pop
mov
fldenv
mov
or
mov
pusha
test
leave
dec
scas
sbb
inc
jle
pop
sbbl
mov
sbb
int
xchg
incl
cmp
rol
add
test
pop
fsubs
addr16
mov
lcall
in
mov
inc
xor
pop
xor
pop
ljmp
test
shll
idivb
ror
cmp
aad
jbe
sbb
mov
out
cltd
cmp
out
daa
jmp
pop
mov
enter
push
mov
jecxz
adc
pop
cmp
cmpsl
xlat
fcom
in
mov
mov
rorb
adc
xor
push
push
lods
push
loope
fwait
adc
mov
mov
sub
mov
rcrb
out
pop
je
xchg
cmpsb
cmpl
add
xchg
in
sub
dec
addr16
call
test
inc
mov
cwtl
add
or
add
sbb
mov
jne
ret
sub
shlb
vunpckhpd
add
mov
stos
mov
fidivl
jnp
add
jo
sub
pop
adc
cmc
add
shl
outsb
cli
inc
mov
push
inc
das
xchg
popf
scas
nop
fucomp
imulb
jbe
sub
gs
fs
pop
adc
repz
or
js
and
fbstp
ja
ret
mov
mov
mov
imul
aam
or
int3
mov
loop
das
fistpll
add
sbb
in
mov
xchg
push
push
jmp
addr16
or
shrl
rcl
out
add
fnstenv
aas
and
or
push
pop
xchg
sub
mov
mov
fstl
push
mov
inc
push
sbb
push
sbb
fprem
dec
cwtl
xor
pop
popa
cld
rcll
pop
in
fisubrs
fcompl
adc
push
cmp
out
popf
inc
mov
icebp
mov
das
insl
mov
mov
andl
clc
jb
pop
lret
inc
inc
xlat
aaa
enter
pop
in
xor
les
jmp
mov
lea
ss
js
or
mov
ja
in
sub
imul
sbb
lret
insb
js
adc
out
xor
pop
xor
dec
sub
scas
in
sbb
xchg
fdivs
stc
ljmp
xchg
es
enter
jg
out
lea
out
dec
mov
cmpsl
cmp
adc
data16
or
sbb
add
add
or
mov
push
sbb
loopne
xchg
jg
sbb
xor
adc
sti
jae
andl
and
cmp
jae
daa
or
adc
jnp
adc
cmpsb
sbb
int
lret
cmp
cmp
push
pop
mov
sbb
cmc
push
push
iret
add
lret
addr16
test
mov
leave
inc
scas
cmp
and
xchg
pop
xor
cs
inc
sub
jge
push
icebp
dec
insb
add
sbb
xor
pop
mov
inc
rorl
and
sbb
and
sarb
call
jl
push
sub
aam
enter
dec
fcomps
sub
sahf
clc
ljmp
push
loop
mov
inc
jo,pt
aaa
and
dec
stos
cld
repz
jo
sahf
and
rclb
nop
pop
push
imul
dec
orb
test
mov
jp
das
movb
test
lret
pop
mov
pop
xlat
fstl
outsb
hlt
inc
push
or
mov
mov
adc
mov
les
push
mov
lock
push
sahf
clc
jae
test
xchg
fbld
adcl
loope
xchg
popf
hlt
xlat
push
popw
push
inc
add
mov
add
cs
enter
cmp
cli
sbb
pop
mov
mov
nop
in
pop
sti
add
and
adc
int
adc
lock
rorb
push
mov
xchg
jecxz
stos
mov
jmp
or
xor
or
sbb
cmp
stos
lds
int
mov
add
in
inc
scas
ss
or
inc
pusha
xlat
repz
add
push
mov
jp
xchg
mov
jo
movsb
push
jbe
lea
pushf
sub
push
leave
inc
jo
sbb
mov
cld
mov
loope
xchg
mov
lcall
sub
je
and
or
ds
or
jmp
xorl
maxps
jne
push
jno
pop
lea
inc
mov
sub
xchg
popa
jo
hlt
orl
xlat
lea
mov
cmp
imul
cwtl
cmpsb
daa
test
test
and
outsb
mov
xor
xor
ds
push
cltd
xchg
mov
add
cmp
xchg
lcall
data16
ret
stos
mov
mov
or
int3
cld
pusha
mov
inc
and
mov
mov
add
lcall
cwtl
mov
aam
jns
arpl
rclb
sbb
jle
mov
sbb
test
cltd
std
inc
or
movsl
and
xsha1
cmpsb
iret
push
test
add
pop
shlb
pop
push
push
push
xlat
jmp
ss
subb
mov
clc
adc
jg
loopne
in
sub
aam
pop
out
negl
scas
shld
notl
hlt
push
jb
jb
nop
and
xchg
int3
xchg
ret
xchg
jae
fnsave
pop
cltd
pop
sahf
nop
mov
in
dec
dec
xchg
mov
pusha
sarl
jl
in
dec
dec
mov
in
fistps
mov
sbb
icebp
inc
roll
bound
cmc
adc
je
imul
lods
jne
faddp
cwtl
test
idivl
ror
pop
cli
fs
fbstp
imul
xchg
and
cs
cmp
rcr
xor
mov
xchg
xchg
sbb
testb
mov
decl
cmc
out
mov
add
arpl
dec
add
xorb
and
fwait
mov
sbb
cmp
andb
cli
jno
pop
cmp
fdivs
cwtl
or
add
lods
jno
lds
add
ss
data16
add
mov
and
nop
cli
pushf
in
ret
rcrl
outsl
shl
lcall
mov
push
or
xchg
xchg
or
insb
es
aam
mov
add
push
mov
ja
lds
pop
inc
test
test
inc
out
ficomps
cmp
imul
xchg
mov
hlt
inc
mov
push
mov
or
pop
jecxz
aam
aas
push
in
lret
in
mov
mov
ret
lds
add
sbb
fs
std
fs
les
xchg
mov
cmp
push
lods
mov
push
pop
jg
divb
cs
xlat
xor
xchg
pop
pusha
jl
hlt
mov
fdivrl
cltd
subb
jne
ss
jo
push
cmpsl
ret
xchg
inc
pusha
std
mov
sub
mov
inc
sahf
sbb
mov
sub
fidivrs
loop
fstpt
paddsb
inc
pop
mov
lret
aas
mov
sbb
jmp
xchg
dec
pavgw
push
in
cld
pextrw
add
mov
hlt
jmp
addl
jge
mov
fwait
xchg
or
out
and
jbe
cwtl
adc
dec
jmp
pusha
xchg
mov
icebp
and
bound
jle
cmp
dec
jl
aas
jg
int3
cmp
xorb
popa
jnp
cli
mov
sbb
add
int3
mov
inc
imul
cmpb
imull
xchg
mov
mov
loop
cmpsb
cmp
lods
mov
add
pop
sub
sub
lret
sbb
add
out
test
jnp
mov
ficompl
inc
push
jmp
xor
dec
lock
adc
pop
and
inc
cmpsb
lods
rolb
pop
ret
jp
sbb
movsl
icebp
or
mov
leave
fists
push
lods
sub
fcompl
xor
inc
insb
xor
sub
push
mov
xor
inc
xor
jae
inc
push
out
xor
lcall
jp
and
cs
clc
loope
pop
cmpsb
cmpb
mov
mov
stc
adcb
push
stc
xor
sti
popa
sbb
inc
inc
inc
js
mov
clc
dec
arpl
dec
data16
fisubl
push
fbstp
mov
ja
cld
xchg
xchg
test
xor
in
jb
sti
add
jle
mov
popf
or
ret
pop
test
dec
push
pop
xor
jae
stos
cltd
repnz
data16
mov
inc
xchg
cmp
adc
and
inc
push
int3
xchg
adc
xchg
jg
pop
es
mov
and
movsb
sbb
and
mov
pmulhw
outsl
mov
xlat
mov
stos
cmp
mov
ret
push
enter
xchg
js
push
mov
cli
xchg
stos
arpl
sub
sti
mov
test
cs
rorl
nop
dec
xchg
xchg
cmp
in
lahf
inc
lret
and
jmp
mov
cmpsb
lods
xlat
xor
rclb
arpl
pusha
push
fldcw
aad
fs
divb
and
das
push
push
sbb
jb
mov
js
jb
xchg
push
cmp
cmpl
sub
pop
enter
add
jno
ret
mov
xchg
test
xor
aaa
push
lret
dec
rorl
add
out
outsl
insl
je
xlat
add
testl
arpl
cltd
xor
xor
aad
out
aas
jecxz
or
fs
daa
xor
aaa
mov
dec
pop
add
pushf
repz
scas
inc
shrb
insb
int3
sub
dec
dec
pop
dec
aad
mov
jb
and
lods
pop
adcb
or
aaa
xchg
sub
into
fnstsw
incl
fwait
push
cmpsb
rclb
or
sub
and
add
out
or
sti
pop
xchg
dec
jne
outsb
jmp
fstpl
andb
lods
insl
mov
cltd
imul
test
xor
xor
or
lds
sbb
sbb
lea
clc
pop
dec
push
out
jmp
popa
xchg
pop
outsb
jl
stos
int3
pop
sub
sti
xchg
jns
iret
jle
add
mov
push
addb
jg
adc
fisttpl
sbb
pop
cld
rclb
mov
icebp
push
push
cmp
and
cld
xor
pop
add
pop
mov
or
cmpl
or
cld
repz
in
xchg
test
in
or
push
dec
jg
mov
add
repnz
push
push
adc
xchg
std
jae
xchg
cmp
push
push
jne
adc
xchg
frstor
or
mov
and
xor
jmp
sbb
push
pop
xchg
sbb
xor
ljmp
jno
out
clc
orb
or
add
xchg
dec
ds
push
std
scas
cmpsl
outsb
hlt
loop
inc
test
cmp
mov
jno
sbb
enter
xchg
ss
pop
test
int3
arpl
into
lret
repz
aas
test
in
mov
mov
out
cmp
test
nop
lret
movsl
mov
jg
cmp
sub
push
hlt
or
cs
lea
push
jecxz
jge
fists
adcb
loop
cmpsb
xor
jnp
adc
arpl
mov
add
mov
push
xchg
arpl
mov
fs
xchg
loopne
in
cmp
cmc
mov
lret
adc
fldl
push
lock
jecxz
sub
pop
jecxz
popf
shrl
lret
stos
outsb
sub
mov
inc
movsb
bound
push
sbb
jno
pop
xor
lret
push
lcall
sub
mov
mov
pop
clc
jle
mov
mov
add
cli
or
lock
inc
push
enter
iret
push
adc
jle
xchg
out
roll
in
cmp
jo
pop
cmp
cmp
cwtl
int3
lds
ljmp
movsl
push
mov
lods
push
jne
jae
mov
cli
jne
jle
fildl
mull
dec
rol
sbb
xor
lods
and
ficomps
aad
jge
inc
cmp
in
inc
inc
loop
jge
fs
loopne
hlt
out
lcall
gs
filds
mov
addr16
mov
jno
push
or
jbe,pt
sub
testl
xlat
loopne
shrb
lahf
inc
pop
insb
jb
ret
sbb
enter
mov
ficoml
mov
insb
adc
fnsave
lods
push
ficompl
pushf
ljmp
dec
push
std
dec
leave
sbbl
adc
inc
inc
sbb
adc
xor
inc
sti
mov
push
jb
int
cmpsl
out
or
cmp
out
or
jle
xchg
enter
pop
pop
stos
xor
pop
cmpsl
sbb
mov
xchg
and
or
inc
fsubl
add
rorb
dec
stc
inc
cmpsl
push
nop
ret
das
push
jo
inc
sarb
inc
mov
push
rclb
jmp
in
sub
mov
decl
daa
xchg
insl
inc
sbbb
xor
in
mov
jo
loop
pop
adc
mov
fdecstp
dec
in
cs
adc
jno
push
test
sbb
rcrl
and
dec
rorl
mov
lahf
into
fadds
fucom
pop
dec
rcll
lcall
dec
je
or
jnp
xchg
sub
push
mov
mov
mov
jae
push
imul
popf
aaa
test
icebp
fiaddl
adc
cs
stos
jle
adc
mov
pop
imul
sub
sub
jl
cmp
pop
mov
push
lods
push
rolb
and
push
add
lds
call
dec
push
sti
stos
inc
test
int
jns
fidivs
xlat
mov
pop
test
mov
mov
in
inc
xchg
lods
stc
or
inc
aad
scas
or
movsb
cmp
push
nop
std
pop
push
aaa
mov
mov
and
jno
mov
and
out
xor
idivb
pushf
cli
sti
ds
pop
clc
push
or
ja
inc
out
pop
dec
jb
lret
mov
and
mov
pushf
or
xchg
pusha
repz
inc
push
sub
ret
dec
xchg
dec
dec
cmp
add
jno
xchg
mov
xchg
mov
jne
mov
fadds
movsl
dec
sub
lods
xor
push
or
ret
dec
xchg
scas
lds
jnp
dec
lahf
testb
mov
lret
in
jmp
xchg
orl
pand
sub
mov
inc
stc
dec
xchg
pop
rol
adc
mov
and
sub
mov
imul
jmp
addr16
clc
pop
dec
push
xor
in
cs
pop
add
call
dec
stos
pop
inc
or
cld
cmp
jne
inc
sub
fbstp
jle
pmuludq
push
sub
xchg
imul
stos
adc
adc
add
pop
jne
nop
in
int
mov
sub
dec
mov
ret
adc
pop
or
icebp
popa
jo
mov
or
sbb
xor
xor
sub
mov
dec
and
mov
cmp
ja
shlb
mov
mov
cmp
ss
dec
test
movsl
bound
pop
fidivrs
cmp
push
xor
std
popf
add
add
ficompl
or
lret
dec
popa
clc
jg
data16
fcoms
cmc
mov
push
push
fiaddl
pmulhuw
lock
hlt
pop
or
scas
sbb
stc
xor
jp,pt
das
ficoms
pop
mov
or
enter
dec
mov
mov
mov
xchg
cmpsl
ds
push
lds
cmp
out
aas
sbb
jnp
hlt
mov
dec
xchg
xor
inc
lods
jb
pushf
and
mov
stc
mov
cli
out
out
mov
pop
sbbb
inc
jecxz
fsubs
mov
je
xchg
cmpsb
daa
rcrl
xor
or
cvttps2pi
or
fnstsw
sahf
or
or
js
fbld
outsb
jecxz
leave
sbb
mov
xchg
sub
mov
arpl
in
cmp
cld
imul
aaa
sbb
push
jmp
ret
inc
jo
inc
divb
int
int3
in
jns
push
mov
mov
test
std
in
clc
hlt
xchg
mov
cmpsb
fucomp
out
outsl
jnp
in
mov
in
ss
loop
sbbb
lea
leave
cmp
loope
adc
adc
cmp
adc
cwtl
aaa
ud1
mov
lods
stc
sbb
in
enter
adc
push
or
popl
or
mov
pop
fcos
jb
clc
push
rcl
ja
insb
gs
pop
inc
or
lcall
std
mov
scas
cmp
pop
pushf
lea
fldl2e
mov
test
fiaddl
dec
out
jge
fucomip
fwait
inc
xlat
mov
or
pop
push
ljmp
sub
push
aaa
jae
and
popl
repnz
lcall
push
pop
add
daa
les
adc
int3
mov
xorl
cmp
ss
and
ficomps
or
shrb
lea
cmp
loope
fidivrs
es
xlat
shr
test
fs
repnz
pop
fwait
jbe
int
xor
inc
loope
andb
sub
out
jno
sar
inc
mov
cmp
cltd
xchg
shrl
xor
enter
xchg
jle
sub
inc
test
sti
mov
inc
clc
cs
jo
inc
cld
fadd
popf
scas
inc
iret
in
push
inc
sub
cltd
int3
adc
pop
mov
js
stos
dec
mov
in
push
aam
arpl
sbb
push
fcmovu
ds
rolb
sub
mov
mov
pop
js
sbbb
fisttps
pop
dec
int
clc
std
loop
addr16
out
pushf
xchg
ss
popf
je
sub
rorl
fdivrs
or
nop
mov
int
mov
adc
shlb
shll
xor
loope
inc
jnp
popa
std
cmp
bnd
mov
and
jge
push
sbb
cmp
lds
jge
cmp
add
rorb
push
sbbl
nop
clc
fwait
jl
enter
jle
push
mov
sbb
pop
iret
scas
lds
imul
fnsave
fsubrl
sbb
mov
mov
xchg
cmp
lcall
pusha
cmp
ljmp
xor
xchg
repz
mov
pusha
jp
sub
push
sub
and
leave
pop
stos
jne
jo
mov
sub
outsl
aam
jle
nop
jno
jp
add
xchg
mov
fadd
out
sqrtss
fldenv
fs
inc
mov
sbbl
inc
mov
inc
push
js
xlat
xor
jp
fistps
orl
movsb
ljmp
jo
sub
pop
dec
pop
enter
stos
loope
sub
xor
in
divl
adc
xor
jne
icebp
and
outsl
cmp
loope
outsb
shlb
jecxz
rol
ds
lahf
push
ficoms
push
mov
std
int3
adc
mov
add
arpl
fstps
mov
aam
adc
je
and
jb
stc
iret
call
push
pop
pop
cli
jne
scas
popf
jl
push
dec
lret
or
xchg
in
xorl
scas
stos
dec
fs
je
sub
mov
stos
xor
hlt
repz
and
mov
pop
es
sbb
clc
pop
cmp
jnp
lods
icebp
dec
cmp
enter
pop
repnz
rcll
sbb
jle
aad
xchg
jmp
scas
add
sbb
jbe
mov
fldcw
in
jno
cmp
mov
ja
out
push
xor
cltd
and
adc
dec
mov
js
mov
xchg
or
in
rcll
cmp
outsl
subl
xchg
xchg
push
out
sbb
roll
jg
mov
out
cmp
fldenv
dec
xchg
jne
arpl
mov
inc
jecxz
xchg
adc
nop
xchg
adc
roll
aas
pop
sbb
mov
popf
mov
inc
popf
pop
mov
mov
mov
pop
mov
into
daa
xlat
imul
cwtl
inc
push
cmpsb
lods
push
inc
movsl
insl
inc
std
dec
dec
inc
and
cmp
das
addr16
mov
adc
shrl
aad
mov
clc
sbb
mov
popa
adc
int
mov
jge
sbb
cs
mov
popa
and
cmpsl
rcll
cmp
ja
cmp
sbb
and
mov
xlat
dec
clc
loop
push
sub
xchg
jo
cmpsb
mov
push
pop
decl
cmp
jle
aas
into
enter
test
dec
std
mov
jp
fdivl
std
icebp
xchg
ret
das
xor
popa
movsb
outsl
add
cli
pop
xchg
dec
mov
xor
in
mov
xor
imulb
cmpsl
rcll
jbe
push
push
push
adc
jmp
arpl
imul
jno
lret
andb
cmovo
mov
sbb
mov
int3
dec
jecxz
bound
lret
xchg
sub
std
pop
andl
dec
pop
fsubs
bnd
daa
push
stos
mov
subb
out
mov
or
test
rorl
mov
xchg
icebp
add
adc
mov
ret
call
movl
fsubp
jbe
jb
and
pop
pop
mov
test
mov
mov
data16
insb
pop
adc
icebp
fimull
sbb
lds
mov
xchg
mov
dec
pop
and
nop
mov
sub
xchg
subb
js
int3
fdiv
adc
mov
mov
mov
mov
mov
or
cmpsb
xchg
fsubrl
sub
mov
call
fldenv
xor
pop
fdivrl
cltd
lcall
clc
aam
cmp
add
mov
cmovb
mov
stc
or
jne
out
out
xchg
in
out
or
out
pusha
mov
mov
xlat
ds
ret
or
fs
xor
cmp
xchg
sbbb
jbe
jge
mov
aad
dec
call
cli
inc
cmp
das
inc
or
mov
inc
push
das
sbb
popf
xchg
rcrb
stos
fisttpll
cmp
ds
and
insl
mov
stc
insl
loopne
btc
dec
notl
cld
insb
sub
cmp
mov
mov
sbb
repnz
daa
ds
fdivrl
iret
in
clc
or
scas
xchg
xchg
dec
inc
push
lahf
icebp
mov
cmc
mov
xor
mov
mov
ret
hlt
and
cmpsl
dec
adc
pop
dec
dec
arpl
imul
sub
xlat
bound
push
inc
fdivrl
sbb
jg
sub
push
mov
out
cltd
sub
lret
add
or
xchg
adc
sbb
rolb
xor
pop
xor
testb
push
sarl
setne
jno
repnz
sub
xchg
clc
jb
jl
or
adc
adc
inc
lock
jnp
jecxz
es
xchg
jmp
mov
outsl
xor
jbe
in
mov
add
jae
loopne
cwtl
ss
insl
sub
mov
int3
jbe
sbb
insb
pop
mov
push
and
mov
jae
fdivrl
or
hlt
or
or
std
lods
movsb
aas
inc
mov
fwait
cmpsl
push
mov
incl
push
adc
jmp
jge
mov
mov
mov
cmp
push
in
into
es
adc
xor
shrl
popf
cld
jnp
sub
mov
pop
lods
xor
es
pop
sub
mulb
lods
or
sbb
mov
in
es
movsl
pop
mov
inc
jecxz
push
pop
dec
nop
fdiv
leave
rcrb
lea
imul
push
and
inc
hlt
adc
pop
fmull
clc
imul
xchg
stos
shlb
push
jnp
xor
push
inc
fs
neg
inc
negb
jno
sub
sbb
and
pop
pop
xor
imul
fidivl
fnstenv
push
cmpl
push
scas
inc
cmpl
jp
mov
cmp
sub
loope
into
fs
push
aas
nop
clc
cmp
jne
or
hlt
mov
cld
aas
test
push
xor
enter
test
push
xchg
cmp
dec
and
mov
cld
in
xchg
mov
pop
out
daa
jmp
aaa
inc
lds
loope
leave
int
aam
cmp
mov
mov
out
inc
adc
mov
add
dec
ficomps
push
jno
add
lock
rorb
repnz
in
clc
jp
pop
pop
cmp
xor
cwtl
sub
and
mov
pop
jmp
cmp
and
mov
test
sub
fucomi
dec
std
mov
lret
jne
and
and
cmp
fdivrp
adc
cli
clc
or
adc
add
push
repnz
ucomiss
cwtl
lock
shlb
inc
adc
shrb
es
in
sahf
jae
xchg
insb
out
xor
out
lds
sarl
in
add
sbb
int3
js
and
sub
into
fimuls
inc
out
xchg
and
ret
hlt
xchg
or
in
fcompl
add
loopne
mov
imul
jns
pop
insb
or
icebp
mov
sub
sub
addr16
aaa
lret
xor
pop
inc
fnstcw
push
pusha
testl
cmp
mov
addb
mov
adc
mov
xor
cmc
std
sub
cld
rcl
pushf
sub
xchg
cmc
adc
cmp
push
outsb
adc
jns
cmp
cltd
hlt
cmp
in
mov
sar
mov
and
sub
movsl
std
lds
xor
mov
inc
adc
lcall
jns
clc
aam
push
xor
sub
fstpt
jg
adc
loop
sahf
xor
stc
bound
or
xchg
push
inc
adc
cmp
pop
lar
mov
mov
xchg
mov
sahf
pop
xor
pop
pop
cltd
into
mov
dec
jecxz
mov
xchg
add
test
xor
mov
sbb
add
js
xor
aaa
lret
cmp
pop
rorb
mov
or
dec
aad
inc
pop
lahf
mov
lcall
cmp
fwait
cmpsb
orl
xchg
lds
and
adc
fmulp
mov
ret
call
xchg
xorb
jge
lahf
gs
dec
adc
xor
push
cmp
pop
cmp
sub
mov
mov
je
mov
pop
mov
sub
jno
shrl
subb
sbb
shr
insl
rclb
add
mov
bound
iret
jge
stc
outsb
cld
hlt
ja
iret
add
cmp
sahf
xorl
push
inc
leave
fldl
adc
sarl
mov
int3
int3
pop
mov
ficoml
shll
or
loop
out
cltd
das
mov
icebp
aaa
cmp
push
aas
dec
mov
test
inc
mov
jmp
dec
mov
push
mov
mov
ds
hlt
cmpsl
cmp
add
subb
movsl
push
mov
insb
popf
cwtl
jo
or
jnp
mov
imul
mov
test
lods
repz
loop
xor
pop
out
ret
push
xchg
jp
push
testl
lock
jae
sub
fistps
push
sbb
stos
adc
dec
mov
popf
and
jge
jno
and
jmp
jnp
add
fstps
or
std
jo
pushf
pop
insl
xchg
setge
test
clc
mov
push
scas
adc
flds
cmp
xchg
testb
jns
mov
xchg
xchg
inc
xlat
pop
test
cmp
in
mov
pop
repnz
aam
xor
shlb
stos
mov
jne
mov
mov
sbb
cwtl
scas
sbb
out
lcall
xorl
divl
add
je
ja
popa
lods
push
inc
popa
mov
loop
aaa
inc
enter
test
xor
pusha
ret
cmpsb
nop
sti
dec
loopne
mov
lret
iret
mov
scas
inc
repz
clc
stos
ds
adc
fbstp
xorl
mov
push
push
rcrb
xchg
fsubr
and
add
pop
xor
movsb
xchg
adc
or
data16
shrl
mov
inc
fsubrl
sti
sub
sub
pop
testl
pop
add
mov
mov
fwait
ret
mov
dec
es
and
inc
and
stos
inc
loope
iret
or
xor
inc
pop
int3
cmp
xorl
scas
aad
xor
and
enter
stc
mov
mov
jp
inc
in
adc
imul
push
fsubr
sbb
or
inc
jp
fistpl
fwait
rclb
scas
pop
mov
cli
sbb
fnstcw
add
pop
nop
sbb
ja
adcb
pop
imul
lods
xchg
jge
jmp
dec
mov
adc
push
sub
push
inc
jp
loopne
ja
cld
adc
mov
dec
pop
test
mov
inc
mov
icebp
mov
inc
sbb
lds
dec
loop
and
leave
pop
in
adc
jno
lods
inc
js
and
stc
popf
or
mov
insb
push
ja
aam
mov
fbstp
int3
mov
dec
and
pop
hlt
inc
add
dec
push
xlat
aas
add
repz
popa
mov
push
push
orl
add
cmp
jnp
xor
lcall
cmp
sbb
cmp
test
xor
and
pop
hlt
adc
adc
or
imul
testb
leave
insl
lea
add
sbbb
or
mov
add
xchg
fwait
xchg
and
jae
inc
pop
and
jg
xor
loop
add
fmuls
sbb
mov
call
mov
ficoms
test
add
push
jae
xlat
mov
add
xchg
adc
xchg
inc
inc
dec
stos
push
ljmp
jno
fs
shll
xor
inc
pop
cwtl
jmp
js
test
push
or
cmpsb
push
out
mov
iret
pop
pusha
mov
or
data16
rcl
jmp
dec
popl
insb
aad
add
movsl
xchg
xlat
or
sub
add
pusha
inc
mov
mov
call
mov
outsl
push
lods
mov
xchg
xchg
fucomip
icebp
mov
push
mov
xlat
stc
popf
adc
sub
xor
pusha
shrb
ss
xor
cmp
push
fistl
or
ret
add
inc
adc
and
sbb
pusha
xchg
out
adc
adc
jo
inc
and
es
add
lods
inc
insb
loop
or
int
pushf
jno
ljmp
and
xchg
adc
sub
xlat
cmp
jecxz
mov
and
hlt
ret
mov
and
imul
mov
enter
mov
lahf
nop
sub
sahf
mov
je
ljmp
push
out
mov
aas
push
sub
jmp
push
dec
dec
xor
dec
ds
rcrb
add
scas
sub
cmpsb
stos
pop
daa
test
fbstp
movsl
inc
inc
mov
xor
push
jge
inc
cli
xchg
ja
inc
aas
pop
pop
mov
shlb
gs
dec
shrb
fildll
sarl
aaa
pop
push
rcrb
data16
filds
cli
pop
psubsb
aas
popa
andb
pusha
pop
and
int3
fwait
add
not
shrb
les
loopne
push
fwait
loop
cmp
push
test
shl
jmp
rclb
repz
dec
rorl
cld
jne
mov
and
mov
and
mov
or
push
or
cmpsl
xchg
pop
fsts
or
cld
in
lods
call
aad
mulb
cmp
gs
shr
mov
fiaddl
addl
xchg
dec
ffreep
rcrl
mov
xchg
call
jbe
mov
jmp
pop
hlt
xor
aad
dec
adc
popl
test
subl
cs
mov
ret
jle
and
stc
fsubs
int3
push
cli
adcb
mov
popf
outsl
mov
and
mov
adc
test
pushf
cmp
xlat
adc
cmp
adc
xchg
in
aam
xchg
subb
cmp
movsl
pop
lea
push
inc
inc
lock
ret
xchg
pop
xchg
mov
and
dec
scas
ret
loope
and
xchg
sub
adc
roll
cmp
popa
xor
jnp
or
notb
inc
adc
repnz
cld
jp
shll
mov
mov
pop
sbb
pop
push
jbe
int3
testb
je
clc
enter
pop
pop
popf
mov
pop
and
xchg
adc
mov
movsl
scas
xor
in
in
pop
jge
pop
pop
and
ds
sbb
daa
jns
arpl
fsubl
faddl
cmpsb
xorl
sub
mov
jo
inc
cmp
negl
gs
or
lods
ja
mov
fcmove
rorl
out
inc
mov
lret
mov
jne
imul
pop
adc
or
jg
out
xor
jae
adc
fucomip
int3
in
xchg
mov
or
xchg
cmpsb
out
cmc
lds
push
movsb
jecxz
aaa
adc
adc
lds
dec
ljmp
sbb
pop
scas
mov
and
je
movsb
sbb
xlat
aaa
mov
xchg
cmpsl
mov
aas
adc
cmp
adc
lahf
ljmp
mov
dec
loop
pop
xchg
sbb
mov
dec
pushf
clc
sbbl
mov
testl
push
ret
hlt
jbe
loopne
mov
cmp
loop
inc
fcomp
xchg
sbb
mov
in
mov
xor
cwtl
mov
push
jp
mov
imul
cld
xchg
push
xchg
jo
mov
jo
in
ret
xchg
fidivs
or
mov
push
pop
inc
je
stc
das
imul
inc
push
inc
pushf
hlt
mov
clc
cmpsb
mov
jg
test
mov
add
sub
pop
pop
dec
mov
mov
cmp
test
xor
in
or
div
jae
pop
mov
xor
pop
xchg
jne
lds
adc
jl
aad
fstps
in
dec
pop
cmp
pop
cmp
ret
add
fs
xchg
nop
mov
push
ror
sbb
xor
cmp
lret
out
es
lahf
fmull
icebp
sbb
scas
sbb
sahf
cmc
push
inc
mov
ljmp
dec
and
sahf
add
addl
cmp
dec
es
xchg
xor
adc
lret
fiaddl
fnsave
xor
icebp
je
mov
lods
sub
and
das
xchg
add
mov
inc
xor
fadds
pop
icebp
loopne
xor
ret
adc
rcl
insb
jg
lcall
movsl
lds
mov
pushf
or
rol
mov
adc
and
pop
loope
les
jns
icebp
cmp
dec
lret
jae
and
sti
pop
aad
lods
mov
cmp
cmp
mov
dec
aad
pushw
adc
xchg
fs
mov
cwtl
stos
push
jo
fsubrs
ret
inc
and
out
sbb
adc
sbb
xchg
pushl
dec
mov
hlt
mov
adc
imul
out
mov
add
jbe
add
out
popf
lods
mov
es
pop
mov
lods
stc
in
rcrl
shrl
cli
mov
popf
mov
fdivs
mov
xchg
out
aas
jmp
add
mov
push
push
fisubrl
sub
out
jo
xchg
sub
in
sbb
add
ja
add
cmpsb
mov
pop
push
push
inc
mov
lods
inc
dec
mov
push
in
and
lea
pop
inc
push
mov
push
cld
push
je
and
outsl
aas
sbb
or
clc
sub
stos
jo
dec
pop
addr16
or
xchg
jle
jecxz
adcb
andl
mov
xchg
xor
or
add
push
cmp
lds
int
mov
pop
mov
movsl
mov
aam
pop
repnz
dec
pop
iret
jle
lcall
push
jmp
mov
shlb
ret
push
aas
sub
jno
rol
sbb
mov
mov
cmp
add
clc
adc
shlb
cmc
pop
hlt
aas
cwtl
xchg
jge
sarb
lahf
xor
shrl
fisubs
mov
into
add
cmp
int
push
movsl
cli
decl
mov
xor
adc
jns
mov
xchg
stos
add
pop
xor
data16
lea
adc
sub
out
adcb
pop
push
cmp
xchg
daa
adcl
in
addb
and
fisttpl
jno
jno
adc
pop
sbb
popf
les
test
push
xchg
lret
pop
xor
pop
add
jg
fld1
jl
sbb
cld
mov
xchg
add
dec
fcomip
shrb
sub
in
cli
inc
fwait
nop
into
lods
inc
mov
jmp
pusha
xor
cmp
jmp
or
loope
imul
inc
jmp
sarb
loop
insb
or
xchg
movsb
movsb
dec
out
fdivrs
into
sub
fidivrl
xchg
push
imul
not
mov
and
xchg
push
mov
jb
into
xchg
sub
or
mov
enter
mov
lods
dec
mov
aaa
insl
lods
inc
adc
scas
xchg
dec
or
out
cmp
mov
ds
scas
mov
dec
subb
mov
icebp
push
inc
into
adc
cmp
jnp
dec
sub
adc
sub
clc
jbe
mov
or
xchg
dec
and
jo
and
aaa
mov
loop
outsl
mov
orb
or
scas
iret
xor
insb
sbb
addb
xchg
loope
movsb
ss
adc
sbb
pushf
push
mov
dec
enter
pusha
ret
data16
push
add
cwtl
and
lock
rorb
scas
in
add
arpl
jo
cli
sub
outsl
int
xchg
adc
icebp
cmp
fsubrs
insl
popa
cmc
pop
ret
pop
mov
mov
mov
out
fadds
adc
mov
xchg
xor
cmc
fsts
add
mov
lret
sbbb
loop
lret
mov
mov
mov
jcxz
aas
lcall
sbb
arpl
and
jge
and
pop
scas
or
repz
out
mov
and
dec
mov
add
xchg
test
decb
pop
xor
shrb
scas
and
fsubrp
out
shlb
enter
adc
ret
in
hlt
pop
pop
pop
nop
lcall
aas
xor
bound
in
aaa
aas
jnp
sti
jbe
insl
push
pop
cmp
das
rcr
imul
shlb
ss
dec
stos
and
lock
test
xchg
lea
mov
jl
jmp
sbb
sarl
test
lods
loope
mov
call
aas
popf
adc
loopne
push
push
mov
fisubs
cltd
subb
mov
test
test
mov
add
mov
sbbb
rolb
addr16
sbb
pop
jge
pop
or
sub
call
dec
xlat
pop
notl
ja
or
mov
loopne
or
out
test
sub
lret
in
stos
gs
and
incl
mov
out
outsl
aas
adc
gs
inc
push
sbb
push
inc
xor
sbbb
ficompl
cwtl
mov
xchg
add
push
pop
in
inc
jb
inc
cmpl
scas
js
cmp
jg
mov
aad
or
loope
cmp
cs
insb
sahf
xor
outsb
jo
ja
push
jle
out
int
negl
mov
insb
add
je
mov
lcall
in
cltd
push
and
adc
xchg
data16
daa
mov
xchg
mov
adc
dec
lcall
dec
sub
jle
xor
leave
cld
mov
leave
xlat
loop
mov
lods
sub
adc
shll
pop
cmp
pop
pop
dec
mov
cmp
or
cmc
inc
push
loop
pop
xor
cmp
inc
fbld
fists
or
adc
mov
fs
mov
shll
pop
sti
inc
jae
stos
cli
pop
lods
dec
cli
push
xor
lods
cld
je
xor
sbb
push
mov
fbstp
pop
add
jo
xor
sbb
xor
push
ljmp
jno
jae
imul
mov
js
and
xchg
push
mov
and
mov
and
popf
mov
iret
pusha
cld
mov
jae
pop
loope
shrl
xor
pop
mov
add
push
sbb
loop
arpl
cltd
cmp
mov
inc
jmp
repnz
xchg
xor
add
mov
pop
cmp
mov
sbb
push
push
dec
sti
or
and
adc
jb
push
sub
and
jns,pt
push
stos
popa
sti
fwait
iret
jbe
mov
mov
pushf
test
mov
jp
push
push
sub
jle
and
scas
add
dec
arpl
and
push
cmp
outsl
divb
call
xlat
ljmp
lods
cwtl
das
rcl
out
inc
inc
repz
jg,pt
dec
sub
rorb
js
xchg
adc
cmp
aam
adc
pop
inc
push
lcall
mov
inc
jae
dec
out
enter
cld
push
fstps
jp
fiadds
rcll
inc
dec
fnsave
or
cmp
outsb
mov
and
mov
test
push
ljmp
or
mov
adc
sbb
add
shlb
das
mov
xchg
jge
shlb
inc
add
or
movsb
lret
cmp
movsl
test
daa
ljmp
dec
lock
cmpsb
jo
jno
out
lods
add
fnsave
addr16
roll
repnz
loope
loop
lods
ltr
lds
nop
push
mul
sub
dec
pop
lock
outsl
push
sbb
ja
sub
aaa
dec
pop
addr16
xor
out
sarb
adc
insl
int
pop
fldenv
gs
aam
insb
enter
outsl
inc
or
inc
add
ss
inc
jmp
xor
fisttpll
shl
sub
sahf
and
ret
addr16
cltd
test
cltd
je
mov
cmp
inc
or
jae
stc
cmp
test
loope
sub
iret
gs
xchg
pop
xchg
dec
xchg
jb
test
aaa
mov
sbb
or
loop
cmp
push
ret
push
fsubr
inc
in
ret
lea
arpl
mov
jns
mov
pop
cmp
pop
lahf
nop
sbb
test
insl
in
in
or
cli
add
sahf
fsubrl
jle
xlat
xchg
ret
xor
andl
fistps
xorb
pop
rorb
or
test
pop
je
mov
inc
push
sub
outsb
aad
mov
outsb
loop
and
push
xlat
insb
enter
fwait
test
dec
sbb
adc
jp
mov
or
lret
jbe
adc
faddl
xor
stos
adc
inc
push
pop
pusha
jp
inc
ds
aam
adc
jl
pop
xchg
sbb
lock
insl
xor
pop
bound
jnp
into
push
mov
clc
sbb
out
inc
scas
imul
or
shlb
lods
call
enter
xchg
fcomps
and
sbb
jp
mov
cmpsb
imul
icebp
mov
dec
mov
fildll
mov
dec
jp
add
test
mov
enter
test
jae
lods
movsb
test
in
stos
xchg
shlb
or
push
fsubl
aas
jp
push
fisubrl
loope
aaa
sti
cmp
push
xchg
push
fstl
add
xchg
xor
lea
insl
sbb
and
int3
jge
push
jmp
push
mov
into
mov
arpl
out
rol
sub
push
jl
dec
push
aad
imul
inc
cmpsb
pop
jg
insl
inc
popf
outsl
std
pop
mov
and
out
fisubl
aam
adc
add
jmp
orl
add
in
mov
push
cwtl
repnz
ja
push
push
mov
add
and
aam
rcrl
jecxz
pop
mov
nop
add
bound
xor
sarl
stos
dec
fwait
dec
popf
int3
push
in
loop
dec
pop
faddl
je
pop
push
sbb
cmp
shlb
sub
push
or
in
xor
jb
push
cmp
jmp
fsubr
xor
jl
xor
pop
negb
lods
push
stc
jge
sub
into
fwait
addl
adc
mov
dec
mov
imul
mov
arpl
inc
in
cmp
inc
iret
add
jmp
lret
jb
inc
dec
mov
jp
rorb
int3
adc
jl
jl
rcrl
movl
push
sbb
jae
mov
mov
or
mov
mov
mov
mov
inc
stos
decl
std
inc
dec
jecxz
gs
aam
popf
push
or
mov
fisttpl
mov
lcall
inc
fidivs
fbld
cmpsl
sub
cwtl
flds
cs
adc
jns
cli
sti
sar
xchg
sbb
and
and
or
icebp
xchg
cmp
in
and
mov
es
jge
js
adc
into
nop
int
lods
mov
gs
jb
mov
std
push
add
push
in
insb
test
dec
and
rcr
xchg
shll
insl
jnp
into
movsl
cld
sub
and
stos
mov
imul
push
in
sub
out
jno
or
orl
cmp
insb
mov
sbb
mov
mov
filds
jns
stos
cmp
shrl
aam
xor
inc
xchg
fadd
jp
adc
add
jb
pop
xchg
aaa
sbb
into
negl
mov
xor
cmpsb
push
inc
dec
xor
fdivs
pop
ficomps
stc
dec
inc
jno
test
out
cmpsl
xchg
xchg
inc
sahf
mov
cmp
mov
add
or
scas
cmp
mov
cmc
cmpsb
dec
orl
sub
shlb
adcb
xchg
mov
fdivl
push
jns
jge
cmpsl
cmc
dec
mov
jg
lret
mov
jecxz
pop
dec
daa
adc
push
sub
pop
insl
sbb
adc
mov
daa
mov
sub
sub
je
or
mov
test
les
loope
pop
mov
xor
gs
jbe
sahf
pop
loop
pop
jg
jg
lods
shll
ret
pop
je
lcall
push
out
sahf
inc
loope
cmp
stos
xchg
mov
rcr
or
sbb
ss
fwait
mov
push
cmpsl
jmp
or
dec
popa
insb
int
js
nop
pop
call
int
jns
fsubl
rorl
push
repnz
dec
cltd
or
mov
lods
ja
sahf
fnsave
push
test
or
and
jl
fcompl
in
pushf
scas
fsubrs
mov
sub
add
fnsave
mov
jp
xor
imul
jmp
in
movb
leave
lcall
or
jg
mov
pop
and
xchg
cli
push
dec
insl
cmpsl
outsl
jnp
cmpsl
aam
in
sbb
cmpsl
xor
je
es
stc
xchg
and
addr16
cmp
les
out
stc
addr16
xchg
fs
push
mov
loopne
xchg
xor
inc
out
aad
ds
call
dec
jg
sbb
jnp
fbstp
sbb
ret
in
sbb
cld
or
test
pop
sahf
lods
aad
aam
cmpsb
pop
jmp
sub
cmp
dec
std
repz
aad
test
dec
fisttpll
arpl
inc
jb
int3
ficomps
xchg
pop
push
xchg
stos
xchg
clc
sub
imulb
mov
loopne
insl
adc
cmpsl
ret
or
push
sbb
aam
aaa
into
mov
rcrl
mov
jbe
daa
mov
int
inc
loope
push
das
faddl
ljmp
add
in
sbb
sub
mov
outsl
test
mov
sbb
into
loopne
ds
xlat
dec
and
mov
ds
js
cmp
dec
sub
cmp
xor
imul
sbbb
andl
mov
pusha
aaa
in
sbb
xchg
inc
xchg
test
pop
fisubrl
stc
adc
icebp
insb
add
inc
stc
je
iret
mov
xchg
subl
arpl
fisubl
dec
popa
rcr
lea
mov
jecxz
insl
shl
shll
ss
lods
inc
pop
cmpsl
test
pusha
test
addr16
nop
mov
mov
ret
imul
ret
decl
aas
add
scas
stos
mov
xor
stos
inc
or
jns
push
add
push
push
mov
stos
fiaddl
dec
push
push
mov
ficompl
mov
jnp
or
add
ds
icebp
add
push
out
and
scas
adc
inc
in
in
mov
jnp
fcomp
popa
or
es
xchg
mov
mov
aad
pop
daa
jb
push
and
push
aas
iret
cltd
pusha
add
sbb
inc
out
xchg
sub
push
out
fwait
jbe
jne
sub
push
flds
cmpsb
orl
ret
add
sbb
aam
mov
dec
jle
mov
xor
cmp
jbe
inc
outsw
repz
addr16
ret
pop
decl
jle
fcomip
pop
mov
ja
jb
xchg
cmp
add
or
rorl
shll
iret
sahf
sbb
in
mov
adc
sub
cmc
imul
adc
and
push
pop
imul
lea
in
add
pop
push
xlat
imul
xchg
adc
popf
aas
mov
adc
test
jecxz
cmc
pop
xchg
mov
les
cmp
aaa
push
or
inc
and
mov
ds
jmp
pop
pop
out
jns
xchg
roll
stos
aas
sub
dec
fdivl
sbb
scas
pop
dec
push
cmp
push
outsl
sbb
push
aaa
inc
test
jae
and
inc
jge
pop
cmpsl
mov
sahf
cmpsl
push
pop
mov
mov
mov
mov
scas
add
call
mov
stos
insl
in
ja
imulb
int
cmpsb
mov
out
aam
mov
lods
ljmp
inc
push
ja
sbb
xchg
icebp
in
pop
dec
dec
xlat
jg
imul
cmp
fwait
iret
push
movsb
testw
xchg
ja
or
cmp
push
jbe
ret
jp
mov
sbb
jne
testb
adc
xchg
xor
xchg
dec
cmpsb
mov
rorl
in
push
stos
sub
leave
xor
cltd
inc
notb
mov
jl
xchg
cmp
insb
loop
inc
push
sbb
out
dec
pusha
idivl
adc
push
rorl
pusha
dec
idiv
xchg
sub
out
push
dec
sbb
mov
fwait
test
jp
cmc
adc
int
int3
cmpsl
push
or
into
and
test
and
mov
mov
xor
fisttpl
push
push
in
out
jns
cmp
pop
pop
pusha
or
les
adc
add
mov
inc
imul
idiv
and
ds
test
mov
and
adc
pop
cwtl
xor
jns
push
arpl
inc
inc
ss
jae
xchg
sbb
jmp
dec
push
je,pt
nop
gs
shll
test
inc
push
xchg
sbb
ds
movsl
pusha
sbb
les
sub
stos
sub
or
xor
mov
arpl
mov
dec
and
arpl
out
push
sti
push
pop
scas
sub
loope
lret
shlb
or
mov
mov
test
into
and
enter
ret
sub
jb
xchg
in
push
xor
fimull
test
mov
inc
fisttpl
adc
lret
aad
push
imul
nop
rolb
dec
shlb
add
loopne
and
xchg
jb
sub
test
pop
jg
jge
xor
inc
es
pushf
and
cltd
scas
inc
or
push
in
inc
lock
adc
aaa
outsb
cmp
jae
jmp
cld
icebp
mov
mov
jg
fs
int
or
stos
jge
addl
mov
xchg
out
fdivrp
mov
daa
clc
adc
jnp
fidivl
xor
push
movsb
or
aas
jno
mov
fnstenv
push
push
xor
sub
mov
mov
adc
ljmp
insl
wrmsr
out
aaa
into
loopne
xchg
and
dec
stos
cmpsb
add
mov
nop
or
xchg
pop
sbb
sub
lods
ljmp
xchg
in
test
or
je
mov
lods
mov
dec
ds
out
stos
dec
lea
iret
inc
stos
fnstcw
es
cmp
xor
mov
fldt
mov
mov
stos
xchg
out
mov
push
les
jecxz
loope
inc
add
push
mov
push
fnstenv
mov
ljmp
xor
pusha
push
cmc
aam
addr16
add
mov
popa
aam
pop
xlat
mov
ss
pop
lds
pop
inc
cld
sub
xchg
and
or
mov
and
testb
stc
lock
push
jmp
orb
or
jae
jbe
jbe
rcl
jl
jmp
adc
cmpsl
bound
or
fcmovnu
test
out
and
mov
mov
das
sbb
sub
cmp
xlat
outsb
out
jl
les
dec
or
sbb
jge
jl
sbb
loope
xchg
hlt
daa
lcall
adc
push
scas
or
fsubs
add
icebp
dec
in
xor
push
lahf
jns
inc
adc
popf
push
clc
inc
popf
ret
dec
xor
in
fadd
jp
lret
sti
or
pusha
pop
loopne
mov
xor
shr
pop
daa
addb
jg
adc
lock
mov
adc
jbe
inc
aas
shr
dec
fstps
jb
push
out
mov
or
outsb
cmp
ds
call
sbb
repz
cmp
not
and
mov
jp
into
add
jg
in
jne
sbb
xchg
xor
into
lock
push
and
jb
mov
ret
inc
mov
mov
scas
jge
xor
xchg
dec
push
jo
cmp
push
cmp
xchg
pushf
mov
inc
call
mov
mov
in
pop
outsb
mov
or
push
shlb
jmp
inc
push
pop
ja
sub
jne
icebp
adc
mov
or
push
daa
out
xchg
call
movsl
dec
dec
and
push
or
push
rcll
pop
popa
mov
lcall
sub
fisubs
int
adc
pop
test
lods
inc
or
stos
inc
int3
dec
int
mov
cbtw
sub
je
xor
scas
hlt
push
int3
pop
adc
int3
dec
test
fcomip
insl
int
xchg
xor
data16
or
add
pop
and
add
push
out
enter
push
imul
xorb
and
nop
js
inc
cmp
jmp
aaa
xchg
cmp
call
dec
scas
jbe
mov
or
jb
out
jae
xchg
push
fstpl
inc
push
push
add
leave
xor
fdivs
out
test
and
and
sbb
popf
mov
inc
add
mov
addr16
andl
adc
scas
and
sbb
ja
sub
adc
fsub
inc
xchg
addb
repz
cmpsl
jl
insb
sbbl
and
push
add
xorb
leave
xchg
lahf
xor
test
add
mov
xor
cmp
and
xchg
mov
scas
cmp
xlat
inc
cwtl
add
mov
dec
dec
xchg
mov
mov
ds
jle
or
mov
fidivl
and
xchg
popa
cmp
jge
push
lahf
mov
pop
loop
sub
mov
rcr
pop
xchg
insb
sbb
jge
pop
sbb
xchg
adc
pop
or
mov
dec
pop
mov
sarb
aaa
or
pusha
or
add
add
jmp
orb
mov
imul
sbb
pop
jp
sbb
jo
mov
xchg
cmp
dec
mov
cmpsl
dec
jne
mov
scas
les
mov
loope
cmp
mov
push
fs
cmpsb
cmp
xor
shll
xor
sub
mov
adc
test
fidivs
sahf
movsl
jne
pusha
fistps
mov
mov
dec
dec
fidivs
scas
dec
mov
inc
or
lahf
mov
xor
pavgb
imul
push
mov
pop
mov
or
mov
xor
clc
daa
ja
mov
sbb
jmp
dec
cmpsb
push
adc
fdivl
bound
shlb
xchg
lahf
push
aam
mov
add
mov
les
cmp
mov
xchg
sub
mov
in
movsl
jne
sub
jae
movsl
xchg
sbb
jg
push
lahf
xor
loopne
ss
call
cltd
xor
mov
ss
dec
add
cmp
mov
mov
repnz
movsl
mov
repz
jg
cmp
shll
in
sbb
sarb
pusha
ja
fimuls
mov
dec
nop
enter
sbb
jmp
cmp
iret
popf
mov
popa
mov
xchg
fistl
fiaddl
xchg
hlt
adc
ja
mov
nop
popa
xor
sbb
stos
ds
sarl
popa
inc
out
pop
repnz
and
orl
sbb
xchg
cs
push
pop
ficoml
insl
scas
jne
arpl
sub
or
pop
sbb
jecxz
xchg
adc
adc
imul
outsb
test
inc
outsl
idivl
lret
stc
je
fidivrl
scas
cmpl
jno
and
pop
sbb
dec
push
inc
addr16
das
mov
mov
push
and
mov
and
adc
repnz
ret
hlt
cld
popa
cs
and
loope
mov
je
fdivs
mov
cmp
ret
inc
scas
pop
int
mov
push
popf
leave
das
iret
jae
call
jnp
inc
sahf
orb
pop
outsb
mov
lds
sbb
aad
xchg
stos
nop
leave
fwait
dec
in
bound
pop
xchg
fnstsw
pusha
cmp
add
mov
mov
cmc
leave
push
insl
push
lahf
movsl
cmp
mov
ret
rcrl
mov
js
icebp
mov
lea
test
mov
fwait
xor
mov
leave
int3
arpl
gs
dec
repnz
lret
inc
mov
or
mov
loopne
pop
ret
js
lds
sbb
loop
pop
cwtl
lods
jg
addb
sbb
inc
inc
sub
ret
inc
push
lods
ja
or
adcl
sbb
dec
mov
sti
push
ds
ja
adc
fbld
mov
sbb
pop
xor
or
add
pusha
jae
scas
pop
add
fldlg2
int3
test
gs
inc
fadds
cmp
mov
cmpsb
pop
mov
mov
ret
shrb
int3
iret
ss
mov
inc
pusha
xlat
stos
rcl
adc
into
divb
sbb
fisubrl
out
lea
les
or
xchg
in
pop
pop
add
mov
or
cmp
xor
jmp
adc
ret
hlt
xchg
leave
fxch
mov
xlat
vsubsd
or
clc
dec
arpl
or
cmp
enter
ffree
fiadds
cmpsb
data16
xlat
mov
mov
push
jno
repz
jbe
or
std
lods
stos
push
add
mov
add
jnp
lods
into
scas
fcomi
sbb
add
push
repnz
jae
cmp
sbb
or
jbe
cmp
inc
add
inc
dec
or
cld
das
imul
xlat
push
sbb
mov
dec
and
icebp
and
nop
jl
mov
jnp
insl
lods
stos
scas
scas
inc
cltd
jo
jmp
call
ja
and
cs
ljmp
imul
lea
insl
add
lea
sub
push
outsl
mov
shll
sbb
in
cmc
or
shlb
sub
push
scas
lea
shrb
cltd
arpl
ret
divl
mov
or
sahf
push
lret
pop
loopne
push
ljmp
jno
jne
pop
mov
mov
push
js
mov
gs
mov
iret
mov
add
xor
dec
lock
mov
sahf
stc
jae
adc
sub
and
std
push
mov
mov
mov
mov
and
mov
jns
sub
mov
add
sub
jle
xchg
loop
test
xor
sub
push
pop
cmp
repz
jecxz
repz
mov
mov
inc
or
stos
lods
adcb
adc
inc
in
sub
and
out
int3
push
sti
pop
incb
and
repz
cmpl
pushf
jge
testl
sub
add
mov
or
push
pop
lds
mov
cld
sbb
nop
jnp
mov
fwait
outsb
dec
out
rcrl
inc
fmuls
test
jle
mov
test
and
sub
mov
outsb
test
rolb
sbb
fwait
test
sbb
notb
repnz
push
fcmovnbe
test
mov
sbb
mov
ds
jo
andl
sub
aam
outsl
cwtl
sub
inc
push
sub
out
jo
out
nop
inc
cli
adc
fs
movsb
popf
jns
ja
cli
mov
inc
and
jp
push
pop
or
test
cwtl
jne
out
xorl
out
dec
adc
cmp
xor
mov
xchg
dec
shrb
rcll
push
add
or
dec
lcall
sub
pop
mov
int
aad
es
add
pop
scas
orl
stos
loopne
and
addr16
fstps
inc
test
test
push
mov
push
mov
sbb
lods
sbb
mov
ret
decl
lcall
fists
jmp
pop
dec
pop
mov
out
mov
cmp
xor
cmp
clc
jg
sahf
inc
jns
mov
dec
sbb
fnsave
add
pop
pop
pop
ja
sahf
xchg
xor
cmp
icebp
sahf
fstpl
xchg
pop
dec
mov
or
mov
pop
push
std
je
cmp
dec
repz
jo
arpl
pop
into
in
popf
fs
movsl
stos
inc
xlat
and
sub
cwtl
dec
mov
ljmp
mov
mull
and
ficompl
sub
fsubs
sbb
fwait
dec
mov
push
lds
jmp
loop
rol
lock
rolb
add
stos
lods
outsl
and
ss
lret
pushf
mov
sahf
call
aas
mov
lods
mov
insb
sbb
cmp
xor
mov
lods
push
repnz
clc
xor
out
jns
sti
filds
std
lahf
mov
es
sub
xchg
ss
in
repnz
xchg
adc
shl
xchg
mov
push
popf
jbe
pop
inc
dec
inc
and
jbe
dec
rcr
pushf
push
or
sbb
mov
popf
lcall
dec
pop
cmc
aas
hlt
add
and
outsb
mov
mov
ljmp
in
popa
sarb
and
mov
das
mov
push
aas
mov
sbb
or
pusha
mov
ljmp
out
sbb
ss
dec
iret
out
pop
jb
pop
js
movsl
sarl
stos
loope
xor
inc
loope
push
mov
pop
lcall
test
dec
dec
sti
pusha
je
mov
jecxz
out
push
sbb
rclb
mov
loope
mov
push
fists
aas
adc
pop
mov
push
in
sub
mov
cmp
jecxz
movsb
aam
mov
jecxz,pt
icebp
mov
add
pop
sbb
mov
mov
pop
das
sub
out
test
pop
scas
out
js
out
adc
push
popf
inc
and
rol
js
push
lods
faddl
xor
pop
repnz
mov
test
sub
mov
mov
jne
push
or
test
and
dec
sub
jnp
insl
sbb
sarb
fbld
std
and
sbb
push
es
jg
mov
lea
movsb
mov
dec
out
pop
xchg
sti
inc
jp
fnstenv
popa
aam
mov
push
test
jo
push
inc
popf
fdivrl
int3
icebp
mov
out
xchg
xor
pop
inc
cld
push
test
fisubrl
cmpsl
rorl
add
sarb
pop
call
sbb
cmpsl
lret
shr
fistl
mov
je
push
pop
cmp
daa
stc
xchg
mov
jg
lods
jo
pop
xor
push
stc
call
repnz
int
pop
sub
or
mov
filds
xlat
stc
add
jbe
std
pop
mov
mov
test
push
pop
sti
add
int3
sbb
jne
pop
mov
pop
mov
xchg
sub
mov
push
jno
add
leave
bound
outsb
fcmovne
ret
push
xchg
pop
xor
loope
rcrb
cmp
stos
aad
mov
adc
push
imul
inc
add
jle
xchg
into
xchg
dec
xchg
mov
aas
push
test
outsl
rol
push
sbb
hlt
inc
mov
and
enter
lods
repz
out
ret
popa
mov
sarl
outsb
inc
fidivs
call
in
cmpsl
sti
jno
pop
inc
int
pop
idivb
shl
rcl
xor
or
pusha
mov
imul
dec
and
and
mov
xor
jle
fimuls
jg
jg
push
fwait
mov
rol
xor
xchg
adc
ret
mov
in
xchg
mov
out
call
inc
or
das
test
dec
and
fildl
inc
add
sbb
pop
mov
rclb
xchg
cmp
push
out
cld
xor
call
add
pop
mov
cmp
ret
inc
notb
push
ljmp
cmp
mov
loop
sub
mov
out
cli
jno
xor
cmpsb
jo
cmc
cmpsb
add
fnstenv
lret
lods
sti
mov
add
stos
push
adc
cmc
popf
mov
lcall
hlt
inc
stc
add
push
sbb
or
cli
add
mov
inc
dec
push
inc
insl
pop
mov
dec
jbe
lods
fdivs
lcall
lea
push
or
push
xor
fadds
xchg
std
xchg
add
add
loopne
and
jmp
jne
in
push
sahf
push
mov
mov
outsb
fwait
mov
mov
xchg
and
lcall
adc
insl
imul
xchg
test
fpatan
mov
iret
shrl
fs
pushf
stc
or
into
aas
outsb
adc
into
enter
push
mov
aad
insb
popf
add
hlt
push
mov
mov
loop
repz
gs
flds
xchg
jle
sub
add
repz
inc
sahf
jne
mov
shlb
sbb
or
insl
ljmp
sbb
fld
test
jecxz
or
sub
stos
xchg
pop
loopne
inc
pop
add
xchg
sub
jbe
lea
movsl
icebp
cmp
adc
test
dec
jb
in
push
mov
mov
push
daa
and
fisubl
scas
scas
inc
and
adc
sbb
push
sbbl
mov
mov
dec
mov
fsubl
mov
xchg
shl
xlat
add
dec
adc
pop
sbb
ss
push
imul
lea
add
movsb
mov
frstor
sub
mov
lret
mov
leave
cld
adc
ds
push
cmp
dec
std
and
inc
cli
test
mov
jae
and
sbbl
cmp
out
or
push
mov
test
sbb
cmp
cld
pop
dec
fisttpll
add
jns
push
test
lds
in
xlat
and
cltd
mov
js
jo
lcall
lea
mov
outsb
aam
mov
or
jle
out
pop
mov
or
cwtl
sub
pop
mov
shll
sub
lock
sti
insl
sahf
enter
xor
inc
push
bswap
jp
push
outsl
adc
mov
movsl
xor
push
jne
pop
dec
jl
popa
clc
lea
cli
outsb
sarb
aam
call
in
scas
jg
mov
dec
mov
mov
pop
insb
into
imul
pushf
jb,pt
outsb
adc
xchg
sub
rolb
popa
mov
inc
in
push
xor
pop
insb
inc
add
int
push
clc
sbb
call
or
xchg
xor
and
xor
add
cmp
adc
cwtl
push
mov
and
shrb
sbb
push
call
push
lret
sti
das
inc
neg
xchg
or
jo
jns
cmp
enter
dec
mov
or
adc
xlat
xor
daa
out
rolb
xorb
xchg
xor
ja
add
inc
stos
inc
and
gs
call
in
ja
mov
pop
mov
push
loope
test
mov
nop
push
aaa
pop
xchg
loop
dec
mov
add
dec
test
adc
mov
sbb
cmp
inc
psrld
and
sarl
adc
push
mov
outsb
or
mov
call
dec
push
sub
push
data16
xchg
pop
dec
xchg
lds
xor
fstl
cltd
enter
roll
imul
jg
xchg
cmp
pop
scas
mov
inc
ret
or
out
or
cmpsl
adc
imul
cmp
enter
jnp
xor
stos
out
lock
or
adc
dec
dec
sbb
lock
shlb
scas
mov
nop
xchg
mov
imul
pop
mov
fldt
lods
clc
inc
gs
xchg
gs
fldl2e
inc
inc
xchg
lods
add
xchg
jnp
pop
mov
ja
je
idiv
in
popa
jge
xchg
or
xor
rcl
stos
add
aad
add
xor
arpl
xchg
add
cli
inc
cld
push
mov
outsb
inc
negl
insl
sar
jbe
sub
dec
fucomip
clc
and
sub
jns
dec
or
sti
sti
lds
sub
repz
add
sbb
xchg
push
xchg
mov
cmp
pop
mov
cmp
ds
and
inc
iret
dec
pop
push
jae
push
addl
lret
push
fdivrl
or
mov
cmp
pop
xchg
pop
dec
test
jnp
bound
sub
cwtl
push
lret
lock
pop
mov
mov
rcrl
push
or
xchg
bound
stos
ficoml
int
shll
lods
outsb
inc
in
inc
fcomi
sub
cmp
lahf
stc
sar
dec
movsb
sub
fnstcw
je
imul
inc
xchg
push
rorb
aad
pop
stos
daa
mov
outsl
cmp
push
out
mov
rol
dec
lahf
xor
xor
mov
pop
dec
xchg
aam
shrb
mov
jp
mov
shll
mov
inc
mov
mov
mov
cltd
mov
nop
and
and
int
adc
jp
pop
inc
inc
mov
adc
bound
shlb
or
inc
pop
jbe
fbld
cmp
fidivl
pop
and
popf
call
or
sbb
cwtl
imul
aas
gs
jle
xchg
add
insl
xor
or
call
cmp
jg
int
mov
push
mov
sub
xchg
mov
add
cli
cmp
sarb
lds
jbe
loopne
or
out
in
addb
in
push
clc
adc
sub
iret
push
jg
imul
outsb
mov
mov
pop
adc
aas
jno
dec
mov
jbe
mov
jle
movsb
mov
stos
rorb
fdivrp
jo
ret
test
and
mov
mov
mul
mov
js
pushf
cs
inc
sub
aad
xor
cld
adc
iret
jns
push
stos
push
loop
lret
xor
cli
repz
fdivl
fwait
mov
pop
icebp
cld
push
mov
push
ss
fcoms
test
sahf
xor
sbb
mov
mov
jge
push
scas
test
xor
pop
aad
inc
xor
mov
gs
cmp
push
sti
mov
rsqrtps
xorl
ss
stos
rcpps
leave
dec
popf
insl
add
add
in
inc
cltd
jge
rcll
pop
cmpl
pop
ja
add
inc
pop
jns
ficoms
xor
in
rorb
imul
xlat
lods
jg
lock
inc
mov
mov
add
pop
xor
dec
xchg
sub
fidivrl
repz
pop
sub
sub
inc
push
mov
ret
pop
ds
movb
and
cmp
in
test
stos
popf
jg
mov
and
scas
mov
cmp
cwtl
rorb
aam
push
sbb
cmp
mov
xor
add
sub
ss
test
jge
cmp
mov
lds
mov
fidivs
lahf
call
fnstsw
mov
jmp
pop
adc
xchg
mov
jge
sbb
mov
cmp
jecxz
mov
dec
pop
jno
dec
jge,pt
sar
jp
dec
adcb
add
popf
cmp
lcall
sbb
scas
inc
sub
mov
in
lret
call
fidivl
push
out
xchg
repnz
add
repz
sbb
or
jecxz
pop
sahf
pop
xchg
mov
jl
push
je
popf
jns
out
mov
or
pop
push
sub
mov
negb
push
outsb
jl
add
sub
adc
imul
daa
ret
cltd
iret
dec
scas
or
mov
adc
subl
mov
call
jb
mov
lock
jno
jns
mov
cs
push
int
sarl
push
aaa
or
fucomp
aas
sbb
jl
repz
and
add
fnsave
shlb
pop
mov
lods
jb
mov
cmp
cmp
lea
lret
std
push
jb
sbb
andb
shr
mov
add
cmp
mov
inc
pop
lcall
lea
cmp
push
mov
sbb
cmp
inc
stos
mov
nop
pushf
mov
push
jmp
jne
mov
repz
outsb
lods
or
ja
aad
mov
shrb
mov
sbb
jg
fisubl
adc
lcall
mov
std
lret
sub
fisubrs
sbbl
mov
daa
sub
call
pop
adc
cmp
imul
xchg
mov
aaa
pushf
test
aas
data16
stos
lods
jo
push
push
ds
add
imul
clc
mov
aam
jp
jo
in
test
jp
push
add
sbb
clc
xchg
jge
add
stos
iret
data16
scas
repnz
in
mull
arpl
xchg
jg
ret
xchg
add
xor
pop
loope
inc
jge
pop
mov
shrd
or
push
sahf
xchg
ljmp
jns
push
jmp
push
pop
jmp
filds
mov
mov
lods
cwtl
mov
push
lahf
xor
push
iret
adc
xchg
and
xchg
aaa
and
popa
inc
test
incl
mov
mov
mov
mov
xchg
jle
jmp
mov
jge
cmp
daa
pop
dec
dec
cmp
dec
fisubl
jp
test
stc
nop
push
jle
in
pop
je
popa
xor
cli
daa
movsb
call
mov
xor
or
pop
or
lret
jno
pusha
cmc
adc
jp
bound
mov
inc
push
loop
push
test
nop
mov
aad
nop
lds
les
or
pop
scas
clc
loop
cld
shl
inc
ficompl
daa
add
mov
roll
dec
cltd
js
lds
sbb
mov
xchg
test
outsb
mov
fs
insl
push
pop
enter
sub
andb
add
dec
repz
mov
dec
jecxz
aam
lahf
movsb
jp
xor
inc
es
dec
sub
adc
aaa
mov
ret
sub
pop
sbb
push
fnstenv
and
sti
sahf
xchg
mov
mov
push
pop
out
pop
add
dec
xchg
add
idiv
test
int3
hlt
xor
mov
xor
scas
cmp
pop
ss
aaa
sbb
xchg
push
notl
testb
orl
scas
mov
movl
add
ds
outsl
adc
repnz
sbb
jl
fbstp
mov
int
push
push
or
jns
adc
fadds
and
jge
cmp
stos
mov
jecxz
push
imul
add
jns
ss
add
and
in
sub
outsb
xlat
mov
jmp
loopne
movsb
sar
loop
movzwl
addb
fs
daa
or
cli
xchg
mov
in
sahf
fsubr
push
sub
mov
mov
pusha
ds
stos
push
pusha
and
cltd
xsha256
sbb
sub
lahf
lret
push
inc
pushw
mov
leave
test
out
pop
sub
rcll
inc
or
xchg
cmp
dec
pushf
xchg
dec
subl
aas
adc
imulb
daa
inc
cltd
and
xchg
or
lock
out
sub
sbb
mov
cmp
pop
or
cltd
jmp
xchg
mov
jle
xchg
rclb
mov
xor
loopne
cmpsb
std
orl
lods
stos
cmpps
shll
inc
rorb
lods
pop
loope
je
and
arpl
mov
inc
sbb
data16
pop
in
fildl
jle
stc
mov
xchg
inc
cmpsl
mov
or
pop
adc
std
mov
or
cmp
subl
adc
int
inc
int3
arpl
shrb
jl
mov
es
xchg
mov
push
cmc
or
movsb
sub
jnp
decl
pop
mov
leave
fsts
shl
inc
cli
mov
cmp
dec
es
jg
std
sub
mov
addr16
rorb
ds
xchg
inc
roll
add
ret
pushl
push
test
dec
ret
inc
jnp
inc
fimull
cs
clc
pop
fwait
dec
fwait
inc
sub
shl
mov
mov
shlb
inc
add
jle
cmc
inc
xchg
xchg
fcmove
imul
inc
xlat
mov
dec
pop
cmc
jns
lahf
push
call
jge
pop
xchg
stc
in
shlb
jge
dec
push
jo
xlat
sub
sbb
push
sahf
sub
ss
cmp
lcall
lods
or
pop
cmc
pop
xchg
xrelease
dec
lock
outsl
and
xor
stc
movsb
or
movsl
fs
adcb
lds
out
pushf
inc
xlat
hlt
inc
xchg
dec
cmp
fmull
nop
jmp
mov
pop
or
adc
and
lock
mov
scas
bound
popa
mov
mov
push
xchg
mov
sub
mov
pop
xor
push
js
outsl
lds
pushf
push
adc
imul
ss
pop
movsb
lds
pusha
xchg
es
xchg
sub
dec
push
xlat
loope
mov
push
pop
adc
sub
push
push
inc
fldl
mov
cmp
pop
pop
je
ret
inc
lods
jecxz
xor
fsub
jns
mov
movb
or
ljmp
mov
cwtl
cmp
scas
into
pusha
sub
add
mov
jg
sarb
subb
push
mov
test
movsb
insb
sub
mov
pop
jno
sti
push
and
loop
inc
push
pop
in
stos
stos
aas
aad
jae
lea
jg
movsl
in
sbb
jge
mov
push
mov
adc
js
das
rcl
mov
cmp
pop
faddl
dec
fnstsw
or
sbb
cmp
aad
sub
push
icebp
lods
hlt
je
cmp
arpl
jecxz
jbe
ja
popl
jmp
and
aad
js
mov
mov
jl
int
daa
jp
stc
outsl
int
test
adc
loopne
ja
fisttpll
jb,pn
repz
and
ds
out
ljmp
adc
lds
inc
fcomi
push
inc
ficoms
in
pop
jno
pop
popa
mov
mov
pushf
adc
iret
lret
xchg
nop
mov
pop
xchg
jns
ds
call
cmp
sahf
mov
shrb
xchg
pop
dec
add
sub
jmp
cli
dec
or
or
xchg
int
dec
popa
popa
aas
test
loopne
and
divl
cmc
insl
pop
lret
imulb
pop
movsb
inc
mov
pop
stos
mov
fdivl
stos
das
mov
ja
std
add
outsb
clc
and
ret
jecxz
adc
inc
mov
das
fisubl
loope
fstpt
jl
lret
aam
scas
sahf
jns
jae
and
std
in
pusha
jmp
sti
adc
sbb
dec
bound
mov
cmc
mov
jne
mov
pop
mov
aaa
sti
std
push
xor
or
cld
cmp
xchg
sub
xchg
test
ficompl
xchg
pusha
repnz
cmp
mov
and
mov
add
jp
jecxz
repz
jp
mov
cmp
lods
pop
ss
cmp
inc
test
inc
fs
daa
jl,pt
sahf
xor
leave
inc
loope
adc
and
out
addl
nop
mov
push
dec
ljmp
call
outsl
push
shl
add
inc
cmp
in
xor
lcall
scas
push
sarb
fnsave
repnz
movsb
pop
cli
aam
iret
cmp
in
mov
mov
aaa
fwait
mov
jnp
out
pop
negl
rcll
testb
pop
xor
out
add
cmpsb
sub
xchg
scas
inc
push
insl
jae
fdivr
mov
push
fmulp
mulb
mov
addr16
lods
shl
pushf
xlat
add
ss
push
dec
movsl
fcmove
dec
fsubrp
jb
xchg
cmp
loop
je
fwait
and
js
push
lahf
pop
adc
cmpsl
inc
mov
jns
inc
pop
cld
push
cmp
cmpsb
sub
adc
push
inc
outsl
idivb
add
cli
push
test
pop
mov
aaa
mov
fnsave
inc
xor
fnsave
decl
pop
jbe
sub
aam
cmp
push
push
xchg
clc
or
sub
and
mov
cmpsl
inc
inc
pop
xor
pop
cmp
jo
push
test
fidivl
push
inc
xlat
pop
cmp
pop
jle
push
daa
fucomp
pop
xchg
jns
dec
or
or
mov
lods
jnp
pop
and
ss
sub
dec
xor
lret
and
out
dec
ret
lret
gs
pop
int3
mov
push
jecxz
push
add
imul
inc
mov
xor
inc
mov
std
or
dec
or
ret
inc
cmpl
adc
scas
mov
push
insl
int
jmp
iret
sbb
mulb
fcoms
inc
mov
adc
or
loope
arpl
insb
inc
push
fcompp
or
lret
loop
sub
mov
cmpl
jno
ljmp
insb
shlb
or
leave
je
cmp
das
pop
inc
loope
cmp
xchg
cmp
cmp
das
pushl
scas
push
push
cwtl
testl
cmp
icebp
int
loope
pop
adc
add
cmp
test
adc
pop
cmpsl
out
out
dec
jno
mov
clc
sbb
pop
icebp
or
stc
pop
sahf
jnp
add
mov
add
frstor
add
cmp
bound
mov
int
out
mov
cltd
movsl
cmpsb
xchg
xor
cmc
aaa
sbb
scas
xchg
sbb
xorb
mov
movsb
ja
in
fcmove
and
xchg
shll
or
imul
mov
mov
movsb
or
push
daa
ret
rcrl
dec
or
sbb
popa
rcl
rorb
dec
pop
ja
pop
xchg
mov
inc
mov
inc
sbb
dec
xor
enter
les
and
das
rolb
add
aam
sbb
shlb
out
cs
repz
repnz
scas
cmc
lcall
insl
jl
and
or
and
bound
lcall
cmp
pushf
js
xchg
mov
push
daa
lea
movsb
mov
pop
insb
das
fsubl
xor
cs
push
or
dec
dec
fsubrs
push
fwait
mov
adcl
xchg
mov
cmp
fcomip
xor
ds
ficompl
inc
and
push
in
jp
inc
xor
xchg
bound
fucomi
adc
outsb
cmp
je
cmpsb
adc
pop
sahf
btsl
loope
or
inc
jge
shlb
imul
mov
pop
icebp
push
adc
xchg
mov
lock
out
ret
mov
test
and
aam
pop
icebp
loope
clc
xchg
lea
dec
test
stos
mov
daa
lcall
adc
enter
jbe
mov
shlb
jp
sub
pop
lret
xor
sbb
scas
adc
lret
fdivs
mov
shr
mov
ss
ljmp
add
jp
icebp
movsl
jmp
dec
push
adc
sub
and
adc
aam
leave
fisttpl
pop
movsb
xor
loop
lret
jp
shlb
push
clc
cwtl
fldenv
out
mov
jg
and
addr16
dec
insl
inc
imul
cld
sub
and
inc
cmp
pop
in
mov
lods
pop
movsl
fidivs
scas
and
ljmp
push
mov
jl
pop
and
mov
addr16
stos
mov
inc
movsl
jg
mov
enter
cmp
xchg
mov
push
mov
push
stos
andl
adcb
or
loopne
sub
and
or
rorl
inc
insb
pop
inc
adc
imul
add
clc
xchg
xchg
loope
sub
cmc
mov
adc
cwtl
push
fistl
ret
sub
push
in
adc
adc
sahf
xchg
ss
jmp
xor
rcrb
mov
repnz
jmp
cmp
mov
add
ret
nop
cmpsl
and
stos
adc
push
inc
aad
mov
cmpsb
dec
inc
cli
adc
pop
sub
pop
ret
loop
or
mull
in
or
lret
mov
sbb
decb
lock
push
mov
cmpsl
pushf
repz
into
sahf
mov
stos
lret
jmp
ss
stos
fidivrl
sub
arpl
cmpsl
push
pop
push
aad
cmpsb
ds
imull
mov
sbb
mov
mov
push
mov
mov
ljmp
nop
sub
pop
out
pop
jo
shrl
shr
mov
lahf
cli
insb
test
fwait
aas
jbe
cmc
adc
enter
pusha
jecxz
mov
jl
dec
loop
in
jg
add
imul
push
xor
xchg
stos
or
sbb
idivb
push
pop
add
add
or
mov
or
lods
addr16
test
fisttpll
inc
loopne
fs
cmp
pop
mov
stos
fs
dec
imul
cmp
mov
outsl
rcl
push
sbb
inc
outsl
mov
mov
xchg
push
jbe
sbb
mov
mov
call
dec
xor
loope
inc
shrl
xor
filds
xchg
mov
sbb
jnp
mov
ficoml
aad
ds
pop
push
inc
imul
and
stos
xchg
arpl
sbb
cld
out
xor
sub
mov
push
push
pushf
xchg
or
mov
adc
shrb
enter
dec
pop
inc
add
nop
inc
dec
and
fs
jmp
int
inc
jmp
std
sbb
insb
inc
ljmp
stos
mov
mov
hlt
push
add
and
ficomps
jmp
lcall
mov
sti
mov
iret
fucomp
ljmp
jno
fdivp
push
outsb
stos
pop
push
call
dec
shrl
add
lea
pusha
or
inc
mov
testb
in
nop
test
lret
cld
mov
jmp
test
test
push
mov
pop
dec
dec
lahf
pop
ret
jle
pop
push
push
dec
sbb
data16
adc
pop
push
movsb
movb
pop
test
in
add
repz
test
aaa
mov
push
jb
rclb
sub
dec
cs
mov
push
jns
mov
mov
mov
out
or
lret
inc
jecxz
push
sbb
mov
jge
popf
xlat
cli
sbb
ss
mov
fidivrs
adc
int3
daa
sbb
and
cmp
xor
jnp
cmp
in
push
loop
pop
mov
mov
add
mov
xor
ljmp
rep
in
push
mov
dec
testl
sbbl
xor
aam
je
xor
or
aad
rcll
ja
pop
into
or
mov
aad
or
cltd
loopne
out
iret
pop
stos
sbb
mov
and
test
mov
sbb
inc
mov
jge
xchg
add
dec
push
loopne
xchg
jae
fdivrl
scas
rcll
test
and
inc
icebp
pop
fwait
jmp
hlt
inc
and
cltd
test
sar
fimuls
or
popa
jge
in
xor
cmp
fwait
push
aam
mov
or
adc
sbb
cs
mov
cmpb
xor
movsb
jmp
mov
pop
js
push
pop
jo
int3
and
xchg
das
orb
into
pop
lret
negb
push
lret
into
mov
in
mov
sbb
outsl
pop
jge
add
xor
push
into
sbb
sahf
push
pusha
sbb
inc
dec
cmpl
push
jb
mov
and
repnz
ds
pop
shrb
popa
inc
pop
adcl
test
push
rcrl
fcomip
out
ret
or
jg
push
mov
mov
ret
xor
add
inc
sub
sub
sub
pop
add
sub
mov
xchg
mov
icebp
mov
cmp
imul
cmpsb
mov
imul
pop
push
jno
mov
loope
mov
adc
aad
push
mov
cmpsb
imul
lods
ljmp
stc
ss
sbb
loopne
and
mov
mov
lret
ja
mov
jbe
loop
push
and
out
cltd
inc
data16
jmp
nop
dec
cmc
jmp
test
or
in
jo
or
xor
inc
sti
inc
xlat
rcrl
in
outsb
call
das
or
xchg
sub
ret
loope
lcall
leave
js
dec
sbbl
xor
inc
popa
aaa
or
outsb
xchg
push
and
jb
sbb
jp
xor
dec
cmp
dec
out
subb
inc
mov
js
and
popa
adc
gs
xchg
repnz
jge
hlt
dec
add
mov
test
jbe
fidivl
jae
xchg
sub
cwtl
inc
mov
leave
xchg
mov
rcll
jmp
fnstcw
pop
jecxz
lret
insb
leave
fdivs
sub
int
addr16
mov
aad
jmp
xchg
movsb
xor
adc
push
rcll
repnz
cmp
xchg
fsts
jl
das
shll
insl
lods
add
push
mov
gs
call
insb
es
jne
icebp
mov
xchg
cmp
negb
xor
outsl
ja
subb
dec
dec
sarl
mov
cmp
and
js
in
add
repnz
arpl
dec
add
stos
dec
adc
push
in
stos
aaa
xchg
push
jo
pusha
pop
mov
fildl
test
sti
rep
outsl
adc
sbb
xchg
cmpsb
out
jecxz
sbb
sub
mov
arpl
test
adc
stc
stos
mov
out
imul
lds
jl
sub
pop
das
pop
dec
jge
mov
loop
jno
aas
mov
es
jae
push
jg
mov
mov
lahf
insb
shl
xor
sbb
inc
jecxz
out
and
xchg
push
les
xchg
dec
jno
insl
xor
xchg
rcl
sub
int
sub
sub
and
inc
mov
xor
cmc
insl
adc
ret
insl
fdivrl
or
pop
cmpsl
add
adc
jo
xor
push
add
or
mov
or
xorl
data16
or
mov
cli
test
out
mov
jge,pn
shlb
fstps
jmp
lcall
sbb
sarl
or
jne
cmp
call
mov
inc
cmp
out
jp
mov
push
sub
pop
out
jo
loope
in
sub
add
loopne
mov
imul
mov
cli
shll
adc
movsb
mov
sbb
mov
fstl
dec
pop
test
call
repz
icebp
lds
sub
push
aas
xchg
mov
in
sub
mov
sub
push
fs
or
ja
into
mov
push
xchg
lcall
stc
adc
mov
xchg
push
mov
sub
sub
mov
and
mov
add
push
out
add
es
loopne
cmp
fnstenv
jmp
inc
push
push
pop
xor
js
pop
inc
xor
dec
or
push
out
roll
sarl
aaa
mov
loope
repz
cwtl
inc
jno
push
movsl
dec
inc
int
mov
pop
push
pop
mov
lock
sub
les
insb
subb
int
inc
fcmovnbe
sbb
ficoms
push
sbb
ret
mov
or
xchg
sub
push
adc
lea
inc
cmpsb
push
jl
sbb
sahf
adc
aaa
adc
mov
mov
mov
or
xchg
or
loope
dec
adc
ja
mov
or
mov
decb
xchg
lods
sbb
ret
sbb
fsubrs
sbb
stc
insl
sahf
ljmp
and
jl
jecxz
iret
jg
test
xor
push
add
dec
cmp
mov
int3
jmp
dec
imul
imul
sub
jl
xchg
mov
sysenter
xchg
xchg
negl
xor
push
mov
outsl
inc
hlt
and
into
ss
test
and
xchg
arpl
lds
inc
xor
push
out
cmp
gs
je
dec
cmpsb
inc
testl
adc
inc
imul
dec
mov
add
mov
std
xchg
sub
push
push
sbb
jl
fldl
dec
mov
push
lret
or
fidivrl
jb
in
std
shll
push
repnz
sbb
sbb
ss
mov
stos
sub
sbb
dec
xchg
mov
add
or
jae
mov
cli
shl
xchg
loop
rcrl
sahf
insl
xchg
popw
pop
mov
sarb
mov
lea
xchg
popa
int3
cmp
cld
lret
cmc
cwtl
pushf
or
mov
inc
mov
adc
push
pop
stc
insb
outsl
js
adc
je
mov
iret
fisubrl
cli
lock
mov
pop
sbbl
push
movl
mulb
stos
sbb
shrl
add
lock
lds
inc
dec
cmp
cmpl
dec
xchg
pop
repnz
mov
outsl
and
addr16
xchg
xor
imul
std
loopne
frstor
pop
shrl
xor
mov
cld
xchg
dec
outsb
and
mov
loope
jnp
insl
popa
xor
int3
js
xchg
sub
xor
testl
sbb
imul
int
stos
push
out
insb
iret
pop
in
dec
adc
push
inc
into
jmp
rcr
movsl
ficomps
push
stos
test
cmp
clc
dec
lds
aad
push
add
mov
add
negb
mov
add
jno
cld
push
jle
sub
adc
ret
es
add
sti
fldenv
push
es
cwtl
cmpsl
sbb
pusha
dec
pop
mov
call
in
push
sbb
cmp
shll
xor
mov
add
fcompl
jae
dec
lret
and
cltd
nop
inc
mov
inc
pop
dec
cmpsb
xor
or
push
jae
in
inc
xchg
test
in
jle
out
cli
repz
test
hlt
lahf
sbbl
mov
dec
mov
adc
add
pop
cmp
inc
jo
in
ret
dec
aam
or
sbb
pop
out
xchg
fisubrl
ror
rcl
aad
and
mov
aam
pusha
jg
pop
movsb
jmp
dec
mov
aas
jnp
adc
pushf
xchg
icebp
repz
loopne
sahf
pop
and
cmpsb
sub
inc
pop
mov
pop
jae
into
xchg
mov
or
mov
push
adc
xchg
sub
mov
jl
test
xchg
mov
ljmp
cli
test
push
pushf
pop
sub
aas
mov
xor
add
add
push
inc
xchg
cwtl
jae
mov
jo
imul
add
sub
and
je
adc
xor
xor
jo
repz
add
fwait
jno
popa
dec
xor
inc
rcll
inc
dec
js
pop
fbld
push
stos
or
xchg
sbb
xchg
cmpl
inc
push
cmpsb
pusha
out
xchg
cltd
subl
shlb
dec
arpl
inc
pop
imul
mov
sbb
pop
pcmpeqd
mov
dec
js
cli
mov
adc
shlb
xchg
add
les
mov
mov
lds
shl
addr16
xor
movb
jge
fwait
xor
cmp
push
cmp
lods
inc
inc
pop
fidivrl
cmc
lret
ret
sub
xor
adc
leave
cwtl
lahf
cli
xor
out
cwtl
xor
in
lods
in
mov
cs
or
mov
mov
ja
and
cld
lret
jnp
push
stos
loope
or
xor
bound
mov
je
jmp
ret
dec
test
push
call
sub
mov
fldlg2
cli
loope
xor
rcl
frstor
adc
xor
cmp
dec
pop
mov
cs
rcrb
push
nop
add
loopne
mov
jp
aam
inc
push
repz
cmp
mov
shlb
add
pop
cltd
push
ss
les
je
data16
in
pop
pop
fnsave
aam
add
in
cmp
push
push
lcall
cwtl
mov
and
in
dec
leave
cli
pushf
fs
arpl
scas
ljmp
hlt
sbb
cmp
mov
hlt
inc
mov
xchg
int
sahf
xor
sub
in
push
popf
lea
add
jbe
decl
insb
dec
xchg
sub
mov
jno
pop
shlb
stos
mov
xor
xor
fbstp
push
repz
pushf
lock
incb
in
inc
push
mov
push
jl
fwait
and
not
add
mov
or
jns
xchg
pop
jns
js
dec
stos
jmp
pop
dec
sub
inc
push
in
cmp
sub
adc
jmp
or
push
mov
cmp
ror
pop
sub
scas
aas
add
xchg
adc
push
inc
imul
ja
lcall
in
sbb
jbe
movsb
cmp
fs
test
xor
out
mov
fwait
out
lret
xor
push
in
aas
mov
sbb
fwait
sbb
xor
fs
inc
test
add
mov
adc
insl
mov
fisubl
aas
test
pop
insb
cmp
nop
call
pop
out
sub
movsl
jae
inc
pop
mov
shll
pop
inc
cmp
dec
mov
addr16
and
sahf
pop
push
mov
lods
pop
push
imulb
les
adc
stos
out
stos
faddl
inc
ja
sub
push
pop
rcll
mov
lods
test
ljmp
mov
out
add
scas
shll
stc
test
xlat
cmp
xchg
leave
cld
sub
or
push
cmp
pop
sub
das
hlt
cmp
pop
cmc
sub
push
pop
push
and
mov
rcrb
push
jb
cli
fists
std
jb
mov
xchg
inc
stc
cli
fbld
out
pop
mov
inc
sahf
and
pushf
sub
mov
or
cmp
lahf
in
push
jl
pushl
dec
pop
fcomip
mov
xor
les
push
sbb
push
xor
xor
icebp
pop
push
adc
mov
test
lcall
xchg
jbe
mov
cmc
mov
aam
add
mov
das
and
shll
dec
mov
pushf
repz
addr16
pop
bound
ds
cmp
mov
leave
jecxz
or
mov
mov
jne
adc
lods
pop
add
out
xchg
dec
aad
pop
adc
fnstenv
mov
outsb
rcl
jge
mov
out
jl
inc
ja
pop
push
out
insb
jnp
dec
fmull
sahf
scas
mov
scas
call
enter
add
push
inc
stc
jno
and
inc
lds
fstpt
hlt
loop
add
pop
push
xchg
loop
lret
scas
mul
or
cmpsb
sbb
icebp
shlb
aad
int3
mov
pop
dec
or
cmp
push
das
addr16
mov
cmp
mov
gs
fcomi
sbb
xor
mov
inc
cltd
mov
push
xor
cld
push
popa
xchg
int3
data16
sbb
push
fadds
adc
lret
stc
ror
pop
mov
insl
lret
sbb
jne
push
mov
mov
add
orb
repnz
sbbb
dec
mov
gs
push
jg
mov
or
push
insl
mov
pop
mov
cs
xchg
xchg
in
lods
lds
push
dec
cmp
jne
xchg
push
mov
jl
pop
and
movsb
mov
jge
xor
popf
js
mov
mov
aad
and
adc
mov
daa
dec
adc
cld
sbb
fnstenv
je
adcb
and
subb
imull
mov
mov
out
or
or
push
dec
fs
subl
sub
inc
fucomp
lret
in
push
inc
out
mov
fldt
xorl
jnp,pt
pop
mov
pushf
lds
xchg
jnp
add
sar
cmp
aas
jle
bound
inc
fistpl
jnp
inc
xlat
cmpsl
sti
sub
mov
das
xlat
outsb
das
addl
int
jno
std
or
sub
gs
imul
dec
popa
mov
sub
insb
push
mov
pop
out
adc
in
inc
cmp
ljmp
out
dec
sbb
cmc
sbb
sub
stos
inc
mov
les
push
rcl
mov
pop
pop
sub
xor
adc
adc
fmuls
into
xor
dec
pop
inc
lret
inc
adc
rorl
sbb
mov
push
outsl
outsb
xchg
and
repz
add
testb
cltd
xchg
xchg
mov
push
push
gs
or
cmc
push
or
mov
xchg
inc
xlat
jmp
imul
pop
ret
fists
pushl
xchg
adc
aad
or
mov
lcall
and
pushf
jne
jbe
push
lods
test
pop
xlat
fs
out
xchg
stos
in
cmc
cmp
divb
cmp
js
mov
mov
lcall
divb
fdivp
ja
lea
retw
inc
jbe
test
xorw
sti
mov
adc
cmpsl
adc
xor
fdiv
xchg
dec
fdivrl
cmp
ds
push
push
mov
f2xm1
in
sbb
push
jns
mov
addr16
loope
xor
xchg
mov
push
cmp
add
fcomip
ret
add
fcoms
jbe
push
pop
dec
dec
jmp
test
xchg
mov
sbb
jb
out
sbb
jbe
hlt
xchg
sbb
test
and
movsb
xor
mov
mov
lahf
ss
mov
testb
pop
lret
shll
inc
pop
rol
test
out
ret
in
and
and
addr16
inc
ret
push
lods
cld
jns
push
cltd
mov
je
push
and
pop
inc
int3
xor
test
imul
xchg
subl
pop
insl
jge
in
xor
cmpsb
cmpsl
xor
push
loop
test
testl
bnd
inc
push
in
xorl
cmp
sbb
out
sti
mov
pop
mov
mov
lock
push
andl
out
lock
ds
mov
inc
test
ja
arpl
mov
push
popa
sub
cmp
rclb
gs
cld
push
sub
lret
int
orl
push
sub
test
rcll
jae
cmp
fsubrl
call
in
lock
jmp
sbb
out
lock
enter
mov
and
lock
dec
mov
data16
mov
push
popf
loopne
mov
in
dec
pop
mov
mov
add
mov
sarb
ss
mov
fildll
inc
bound
mov
loop
inc
out
notb
jno
or
outsl
sbb
daa
jle
daa
inc
aad
lret
mov
out
imul
testl
movsl
cmp
test
loopne
shll
mov
push
cmp
lret
imul
push
testb
jae
add
jae
fnstsw
xchg
and
sti
add
xchg
xor
shl
mov
fcomip
xor
nop
or
mov
xchg
pop
enter
add
jge
xor
rcrl
in
xchg
jnp
add
cltd
movsl
jl
popa
call
xchg
xchg
cmp
add
jne
in
sub
aad
lret
mov
xchg
subl
pop
popf
xor
dec
pop
xor
call
ret
cmc
lds
push
sub
mov
daa
lods
lds
repz
mov
mov
loope,pt
push
pop
jno
xchg
inc
sbb
push
dec
popa
mov
push
xchg
clc
hlt
pop
xor
and
pop
out
inc
fildll
or
lea
mov
cmp
in
xor
push
out
test
inc
movups
dec
jecxz
sbb
inc
stos
jne
push
arpl
pop
gs
fsub
xor
mov
xrelease
mov
icebp
sbb
ret
fldl2t
insl
aad
mov
mov
daa
lcall
adc
jae
js
ret
jge
mov
fidivl
push
mov
sbb
sbb
mov
sub
or
sbb
push
test
iret
dec
loopne
and
aad
mov
jmp
sub
sahf
bound
cltd
mov
and
pushf
das
fmul
adc
xor
filds
and
insb
mov
mov
in
pop
insb
in
jmp
sbb
out
sub
pop
mov
scas
push
mov
mov
add
rcll
call
or
inc
ljmp
js
nop
mov
dec
ret
aad
jmp
call
daa
push
hlt
frstor
xor
popl
movsb
cmp
push
push
pop
ds
cmp
repnz
jle
shll
adc
sub
dec
sub
and
push
out
rolb
jl
xchg
mov
adc
in
or
enter
push
sbb
or
and
mov
ret
inc
imul
inc
xchg
inc
sbb
les
sbb
pop
xor
cmp
pop
pop
pop
cld
insb
stos
cmp
aam
mov
pop
rcl
into
cmc
pop
loope
nop
fs
push
ret
pop
cmp
fwait
pop
popf
ljmp
lret
rolb
push
push
sub
lds
inc
cli
enter
pop
ret
les
cmp
outsl
std
mov
sub
mov
out
push
mov
push
scas
jle
lcall
mov
gs
lods
jb
rcrl
dec
hlt
test
dec
sub
mov
cmp
mov
shll
out
xchg
sbb
fsubl
lcall
sub
out
mov
sarb
mov
mov
fst
repz
int3
orl
test
es
bndstx
lea
ret
hlt
es
loope
xchg
sub
loope
mov
dec
aas
adc
jno
rolb
jae
cmp
jno
adc
mov
out
inc
loopne
add
repnz
sbb
inc
fidivrs
xchg
das
addr16
fbstp
out
in
stc
mov
mov
shrb
mov
nop
push
mov
mov
enter
cmp
jnp
leave
mov
mov
or
mov
movsb
out
insl
dec
xchg
ljmp
sbb
jmp
mov
fstl
sahf
dec
xchg
adc
outsl
repz
ss
xor
dec
movsl
mov
pop
sub
pop
lock
cwtl
add
xchg
rcll
adc
mov
nop
stos
add
mov
xchg
out
jmp
scas
pop
add
notb
in
push
inc
cmc
cltd
rclb
mov
cmp
in
jp
dec
and
inc
mov
rol
cwtl
mov
ficompl
mov
sub
out
bound
lcall
sti
mov
pushf
push
cli
int
and
push
xchg
out
jle
sub
push
jnp
lods
nop
ss
push
icebp
cltd
scas
addl
sub
mov
mov
les
test
lods
in
mov
or
or
setb
mov
shll
imul
pop
push
or
cmp
mov
dec
hlt
pop
repz
add
cmp
mov
jp
test
negl
ja
jb
arpl
scas
lea
into
add
xchg
and
mov
insl
loopne
popf
lea
push
dec
pop
dec
fldcw
jg
dec
out
mov
call
out
outsb
test
jo
or
fs
nop
push
or
movsl
lods
jbe
sbb
testb
push
repz
jo
sub
mov
loope
add
cmp
int
dec
mov
outsb
in
push
mov
arpl
dec
sub
stc
subl
mov
xor
xor
out
out
nop
out
push
pop
dec
push
es
sbb
stos
add
dec
sbb
into
insl
xor
and
adc
push
mov
xchg
pop
insl
enter
scas
or
or
add
sbb
add
jns
pop
loope
push
push
ret
cs
jne
aam
xor
movsb
ret
sub
jns
jg
std
jp
pop
and
fistl
xchg
sbb
cmpsb
mov
imul
push
dec
aaa
pop
fbld
xor
inc
daa
lcall
or
push
loope
ds
sti
add
jbe
and
sarb
jmp
jo
push
js
push
mov
mov
outsl
and
rcll
and
stos
and
inc
repz
int3
comiss
fcoms
sub
mov
push
xchg
cmovnp
cmp
adc
in
and
test
fcoms
push
subl
adc
aaa
xchg
jge
mov
pop
xor
jg
loop
ljmp
cs
test
add
pop
mov
mov
pop
icebp
aaa
shrl
icebp
inc
aam
repz
cmp
xchg
sub
cmp
and
jb
lods
ret
mov
popa
aas
in
xchg
jp
xor
dec
into
mov
lods
jbe
and
sub
imul
dec
push
xchg
add
or
sbb
orl
push
jp
mov
inc
cltd
or
fwait
xor
ja
push
test
scas
mov
orb
cld
js
stos
mov
dec
inc
pop
xchg
imul
cmp
popa
fwait
cmp
inc
cmc
addl
dec
sahf
inc
push
mov
pop
inc
mov
in
and
cmp
adc
lods
add
add
cmpxchg
xchg
sub
out
ret
insb
into
mov
jnp
mov
pop
sub
fidivl
or
movsl
scas
movsb
mov
sub
xchg
fs
enter
xchg
in
sbb
jns
cwtl
mov
cmpsl
push
jne
in
pop
push
sub
add
cmc
xor
js
je
fsubrl
test
aas
idiv
insl
into
sbb
mov
out
hlt
sahf
insl
loopne
mov
stos
das
scas
pop
mov
adc
and
cmp
lock
stos
push
push
push
loop
sub
mov
lods
cmpsl
fbld
fimull
jae
push
jecxz
xchg
iret
or
mov
ja
aad
push
dec
mov
push
jl
and
outsl
mov
mov
lret
lahf
insb
xchg
call
push
subl
add
pushf
jg
cmp
test
and
fmul
sti
xchg
add
mov
out
dec
loop
or
jb
cmp
jge
cmp
add
cs
cwtl
cmc
dec
xlat
jmp
sbb
dec
popf
adc
inc
pop
jbe
addr16
in
fdivr
cmp
in
arpl
push
jl
cmp
mov
push
sbb
rcll
test
push
cmp
push
jge
mov
push
sub
xlat
sub
dec
ds
xchg
xchg
test
lret
xchg
dec
adc
adcb
sbb
fnstenv
lods
inc
jle
sbb
sbb
cmp
sahf
cmc
mov
pop
aam
xchg
cmp
cmp
xlat
into
mov
and
les
data16
push
xor
push
and
xor
jle
inc
mov
pop
push
mov
cmp
sbb
push
or
jle
mov
icebp
es
xor
aaa
lret
or
lret
aaa
pop
dec
pop
xor
push
xor
inc
adcl
mov
lcall
test
inc
mov
jns
adc
ds
push
and
mov
lods
iret
loope
repnz
cs
scas
xchg
inc
aas
cmp
popa
int3
xchg
xchg
xlat
shrl
push
lods
es
sarb
aad
adc
sbb
sahf
fldcw
xchg
push
and
in
dec
cmpsl
fidivrl
gs
push
lret
xchg
loopne
pop
mov
fsub
out
pop
rorb
imul
sahf
add
xchg
ficomps
shll
xchg
hlt
xchg
arpl
dec
nop
je
mov
packsswb
cltd
js
jnp
shrd
mov
mov
push
mov
jo
scas
test
bound
jge
jb
or
inc
mov
jb
mov
iret
or
xor
xchg
mov
clc
loop
lods
cmc
dec
and
jae
fisubl
push
ljmp
inc
inc
std
lds
ret
shlb
in
pop
mov
std
sbb
or
or
iret
scas
inc
add
ret
stc
xchg
mov
incl
outsl
push
cmp
adc
inc
aam
mov
popf
push
xchg
sarb
arpl
in
dec
repz
mov
dec
inc
int
pop
mov
shll
js
add
cltd
lods
xchg
or
test
aad
cs
popa
adc
inc
pusha
xor
test
jae
xchg
pop
and
and
push
mov
mov
sti
mov
ds
add
add
mov
jecxz
ds
gs
jbe
cmp
push
outsl
mov
pop
test
mov
inc
lds
and
pop
and
out
cmp
movsl
dec
adc
jns
jle
push
adc
loopne
mov
and
std
or
mov
add
xor
cmp
jecxz
push
push
ret
pusha
dec
movsb
jecxz
gs
mov
outsb
aas
imul
out
popa
jne
xor
clc
dec
in
jb
fmul
jmp
or
in
pop
lcall
loopne
or
mov
jns
adc
mov
ja
push
daa
adc
ficompl
add
shlb
jecxz,pt
jmp
into
stc
cmp
test
mov
lahf
test
pop
test
mov
es
cmp
push
cmc
pop
jmp
or
loope
xchg
icebp
iret
aas
fwait
inc
cltd
inc
gs
es
in
and
scas
icebp
leave
rcl
repz
daa
es
cli
ds
daa
popf
dec
add
or
fimuls
inc
add
mov
in
into
js
push
xor
and
sub
lods
ljmp
pop
sahf
sub
je
xchg
and
xlat
cwtl
mov
xor
sbb
loope
cmp
out
in
push
pop
or
pop
push
out
jnp
sbb
cmp
cwtl
jae
pop
adc
mov
jae
or
or
int
cmpsl
cmp
insl
enter
add
jnp
mov
or
dec
imul
push
sbb
mov
test
xchg
mov
sub
fwait
int3
pop
dec
mov
ret
sub
sbb
mov
mov
mov
xor
mov
lcall
cltd
inc
iret
inc
ds
adc
jmp
xor
dec
pop
and
push
or
jmp
out
push
xchg
in
mov
xor
add
mov
repz
xchg
dec
clc
add
fsubrp
push
sub
cmp
hlt
cmpsb
sbb
xchg
xchg
dec
add
dec
push
lods
fnsave
xor
mov
int3
sub
out
cli
jge
sub
sbb
test
or
or
xchg
mov
jp
xchg
test
mov
xchg
lods
and
mov
mov
sbb
mov
or
aam
mov
cltd
xor
push
lods
mov
popf
mov
mov
lods
mov
mov
cmp
adc
outsb
push
std
lods
push
imul
es
in
test
data16
mov
sbb
cld
cwtl
lock
repz
cmp
mov
shrl
dec
dec
and
dec
sti
sbb
push
inc
cwtl
adcl
and
mov
or
push
scas
push
or
insl
jge
sub
in
cmp
xor
popl
ja
mov
xlat
mov
and
rcl
int3
arpl
out
push
call
inc
sbb
ljmp
in
cmp
xchg
cltd
xor
scas
mov
sbb
mov
xchg
mov
push
mov
xchg
mov
sbb
cmp
insl
pop
test
sarl
mov
add
push
adc
shlb
fldenv
jne
mov
pop
int3
jo
repz
aam
adc
sahf
andb
shlb
mov
sarb
sub
out
gs
fnstenv
inc
ret
push
mov
fdivs
xor
push
outsl
repz
stos
in
cmp
jns
sbb
or
jp
dec
nop
xchg
sub
sahf
sub
jp
fcmovnb
insb
call
lds
call
daa
subb
mov
adcl
xchg
dec
jno
dec
adc
insb
out
jb
int
lcall
loop
xchg
mov
adc
jbe
push
sbb
mov
shll
mov
rcrl
jo
je
sbb
pop
pop
adc
pop
xchg
nop
mov
loopne
repz
int
jmp
dec
fsub
movsb
addr16
add
lret
or
push
mov
clc
push
xchg
or
xchg
aaa
mov
xor
push
inc
nop
rol
mov
mov
sub
xchg
sub
aas
lea
mov
pop
sub
xchg
in
cwtl
mov
loope
push
cmpsl
cwtl
pop
sub
mov
cld
roll
sub
sbb
call
shl
xor
push
popa
xchg
jge
mov
fidivrs
or
pop
loop
jge
out
outsb
inc
imul
pop
or
sub
dec
push
and
adc
cmpsl
jl
scas
inc
mov
xor
jbe
mul
xchg
data16
add
sbb
test
jbe
mov
popf
xchg
test
arpl
push
sub
sbb
fistps
rcrb
cmp
mov
cmp
xor
and
inc
jp
xchg
fsubr
fstpt
scas
mov
inc
fistl
in
stos
jp
mov
nop
mov
mov
stos
aaa
xchg
push
sub
ds
and
pop
fadd
aas
adc
and
rcll
cmp
aad
aad
je
aam
sub
shlb
jo
pop
sarb
clc
xchg
fsubrs
sbb
in
orb
mov
das
je
add
lret
in
and
iret
cmpsl
sub
xchg
ja
negl
pop
cmp
repz
lock
dec
lahf
xor
mov
lea
imul
push
cli
daa
adc
out
adc
inc
jns
xchg
mov
aas
loop
out
xor
lret
pushf
xor
sub
filds
push
ljmp
jb
lds
mov
xchg
into
dec
or
push
repnz
pop
pushf
lods
jmp
data16
xor
sbb
fnstsw
ja
mov
rcll
stos
pop
jle
dec
lret
pop
cmp
mov
dec
loopne
cmpsb
sti
rol
add
sbb
lods
clc
aaa
pop
fisubl
mov
adc
mulb
repnz
xchg
or
jae
xchg
jmp
jno
sbb
xchg
or
lcall
int3
mov
scas
clc
lret
mov
xchg
dec
or
notl
lods
or
movsb
dec
stos
out
sbb
jg
imul
or
add
cld
bswap
imul
push
xor
into
pop
jbe
repnz
mov
pop
divb
loop
push
mov
mov
lret
testb
xchg
add
jl
sub
pusha
sbb
dec
das
hlt
adc
mov
fstpt
or
ficoml
dec
pop
icebp
xor
pushf
scas
cmp
ret
cmp
push
cmp
loop
sub
pop
outsl
mull
jp
pop
add
mov
pop
cmovg
cmp
lods
test
and
sub
addb
sub
dec
ljmp
mov
add
pop
into
jnp
or
outsb
mov
mov
dec
fistpll
or
out
fldl2e
ret
pop
orb
test
dec
lret
inc
sub
cmp
fdivrs
xchg
test
or
push
fwait
outsb
dec
loop
jle
ljmp
jno
lahf
mov
call
loopne
out
mov
ret
outsb
in
enter
jne
subl
add
shrl
fidivrl
push
xor
lds
pop
cmpsb
dec
xchg
pusha
or
lret
shl
std
jnp
in
xorb
xor
xor
mov
es
add
movl
add
push
pop
xlat
mov
cmp
aam
xor
push
push
popf
add
pop
int
jmp
jb
pop
cmp
popf
adc
inc
in
mov
adc
push
or
iret
inc
xchg
sbb
mov
nop
out
dec
mov
sub
pop
cmp
rcl
insb
lds
jbe
es
or
test
cmpsb
xor
rorl
jp
xor
mov
jmp
jno
lds
mov
pop
mov
sbb
cmc
sbb
ja
xchg
mov
outsb
movsb
dec
nop
scas
aaa
loopne
mov
xor
jle
daa
test
push
lods
loope
mov
jbe
push
cmpl
cld
mov
jmp
pusha
xchg
movsb
idivl
test
les
xor
iret
xor
mov
sahf
cli
pop
push
faddl
cltd
jo
pushf
xor
dec
xor
scas
aad
mov
or
je
lds
aad
adc
inc
adc
mov
sub
mov
ds
popf
dec
mov
cmp
mov
arpl
movsl
test
outsb
and
push
pop
sbb
inc
mov
cltd
montmul
cmpsb
sbbb
or
adc
aaa
jmp
inc
sbb
pop
enter
sbb
inc
xor
sub
add
pop
mull
jl
lret
sbb
insb
sbb
push
lahf
jecxz
cmpl
sbbl
mov
sbb
mov
and
scas
xor
ficomps
and
mov
loop
mov
stos
aad
mov
ret
mov
sub
leave
fisubs
sti
mov
addr16
rcl
adc
xorl
mov
andl
dec
jns
orl
js
cld
pop
sbb
movups
scas
cltd
arpl
addl
lcall
push
push
push
add
jne
adc
inc
lock
inc
outsb
test
sbb
pop
dec
add
push
inc
loop
orl
dec
aam
shrl
inc
aam
incl
loope,pt
jne
xchg
dec
aam
cmpsl
inc
in
inc
fcoml
out
or
pop
push
mov
repz
jo
xchg
jle
testl
jg
or
sti
adc
loop
movsl
ss
js
lds
jle
push
pusha
xor
cwtl
and
lahf
cmp
pop
call
faddl
cmpsb
addr16
mov
push
sahf
and
mov
jbe
or
lahf
add
les
sbb
clc
inc
fdivrs
or
enter
jg
stc
cs
pusha
sbb
push
adc
sub
jg
xchg
fisttps
lret
adc
cld
in
int3
and
fs
fs
stos
xlat
cmp
jnp
pop
jp
jg
clc
sbb
cmp
repnz
pop
fimull
pop
stc
popf
or
pushf
popf
ret
xor
js
pop
out
mov
push
jbe
test
cmpsl
ds
or
pop
popf
lock
pop
xor
cmpsb
lret
popa
repnz
inc
inc
mov
dec
clc
bound
repnz
stos
and
xor
hlt
cwtl
scas
fisttpll
pop
iret
aad
fdivs
aaa
lret
sbb
pop
xchg
scas
mov
mov
add
fs
xchg
push
pusha
xor
sahf
add
inc
jg
push
sti
subb
push
sub
mov
jmp
pop
jno
xor
scas
push
inc
enter
dec
xchg
and
sbb
stos
inc
cltd
and
pop
pop
sub
lahf
inc
mov
jno
addr16
push
mov
inc
add
sub
nop
popa
xor
cmp
cmp
repnz
mov
daa
inc
pop
repnz
movsb
das
rorl
daa
mov
mov
inc
loopne
cs
mov
cmpsb
aam
pop
cmpl
sub
lock
std
dec
test
outsl
and
or
sbb
in
nop
test
add
pop
jecxz
shrb
jg
cmpsb
mov
imul
std
je
dec
icebp
and
fiaddl
enter
mov
jge
stos
cmova
or
dec
test
cld
rcrl
mov
push
and
loopne
or
pop
jl
cs
jle
repz
jb
sub
sbb
jo
ss
mov
bound
push
xchg
sbb
mov
xor
scas
add
aad
call
pop
cmc
push
loop
or
xorl
ss
movsb
pop
scas
rolb
lcall
je
test
icebp
jg
int3
cmpsb
fdivr
jns
jp
cmp
test
and
jmp
mov
jnp
sub
cmp
ljmp
stc
or
shrb
dec
adc
xchg
xor
xlat
pop
mov
insl
ljmp
cmc
inc
add
xor
stos
mov
pop
std
xchg
lods
adc
pop
iret
int
mov
enter
xchg
enter
dec
sti
int3
and
sbb
push
and
stc
adc
inc
jo
xchg
push
xor
mov
adc
push
in
nop
mov
push
pop
fldcw
hlt
lods
inc
into
push
or
leave
ljmp
rcll
push
ljmp
jno
pop
cmp
scas
mov
gs
scas
jne
add
scas
xor
jg
push
in
xlat
add
movsl
lods
inc
pusha
lods
js
mov
mov
test
mov
loopne
sbb
push
mov
push
sub
adc
fwait
mov
jle
add
add
comiss
jp
xor
cwtl
in
in
mov
std
pop
sbb
jle
out
fld
jns
mov
sahf
icebp
popa
jno
imul
xor
imul
cltd
adc
add
sbb
jge
imul
icebp
inc
sub
je
js
fsubl
in
cmp
xlat
pop
jecxz
inc
push
jne
leave
sbb
and
call
xor
insb
ret
lea
fsub
jnp
scas
inc
mov
cmpsl
std
imul
aad
loop
movsl
shrl
cld
jmp
cmc
movsb
scas
xor
mov
ret
test
mov
xchg
fdiv
lahf
lret
fidivrl
push
fcmovu
dec
adc
jmp
add
pop
jecxz
rcrl
cmp
mov
movsl
test
sahf
pop
fbld
movups
push
xlat
pcmpgtb
xchg
xor
imul
or
xor
es
jmp
cmp
inc
jno
hlt
fs
push
mov
rcl
in
cs
push
adc
int3
pop
sub
mov
lods
aad
xchg
or
testl
test
mov
scas
xchg
pushf
cmc
aaa
add
imul
call
negb
sbb
fistpll
pop
inc
int3
jge
jecxz
add
dec
jecxz
mov
push
sbb
fwait
push
add
mov
cmc
hlt
loopne
insb
push
negl
out
fs
dec
push
dec
movsb
dec
shll
subb
cmp
push
in
jno
rcr
es
jnp
sub
cmp
push
shlb
test
mov
idivl
pop
adc
push
or
pop
out
and
pop
dec
gs
dec
subb
sbbb
stos
data16
push
lods
aaa
sti
push
mov
fidivrl
out
add
in
hlt
fiaddl
enter
mov
in
jg
sbb
and
and
sub
push
jns
xchg
lods
addr16
pop
add
push
mov
push
pop
xchg
mov
xor
xchg
mov
pusha
cmpsb
jmp
and
lods
in
cmp
std
into
push
and
std
mov
or
fnsave
or
pop
lret
subb
mov
in
sub
push
jae
jge
addr16
cmpsb
jae
xlat
fcompl
dec
jae
int3
mov
pop
dec
loop
std
xor
push
idivb
fisubl
in
or
push
std
xor
add
cld
mov
pop
mov
pop
pop
hlt
inc
adc
popa
sub
popf
pop
imul
jp
inc
lods
xor
addl
lret
push
faddl
xor
inc
fsts
xor
js
outsb
sbb
mov
push
in
push
scas
out
mov
sbb
mov
pop
dec
adc
mov
es
out
push
sahf
shr
push
xlat
insb
and
pusha
fldl
sub
and
push
sbb
es
sbbl
xchg
xlat
mov
leave
enter
out
jbe
xchg
out
in
xor
pop
and
rol
repnz
lea
pop
cmpsb
mov
ds
and
sbb
dec
adc
or
gs
pop
loopne
push
xchg
mov
mov
cmc
je
in
cli
mov
ja
mov
fdivp
xchg
ret
fbstp
lahf
out
jns
sub
fstl
jle
aad
mov
mov
enter
lret
sbb
cmpsl
ds
cli
push
lcall
push
iret
xchg
sub
sarb
lret
das
jo
imul
fdivrl
faddl
or
ficoms
xor
mov
mov
dec
mov
dec
mov
xchg
push
ficomps
mov
push
addr16
adc
xchg
ret
loop
out
div
cmpsb
shrl
add
test
mov
xchg
sub
push
mov
add
lock
mov
pop
pusha
lret
jmp
leave
outsl
jg
mov
popa
inc
sub
outsb
sahf
lock
jg
cmp
push
push
out
xor
mov
out
shll
lods
sbb
fnstenv
call
test
int3
lock
xchg
adc
lcall
pop
lret
outsb
inc
and
mov
dec
jns
cmp
mov
andb
scas
bound
pop
add
repz
imull
add
cmc
fdivl
push
inc
inc
into
ljmp
or
repz
fwait
and
add
cmc
mov
or
mov
daa
jmp
push
xor
jb
inc
loopne
sbb
lods
loop
pop
and
xchg
out
sub
mov
and
fidivrs
sbb
int3
bound
cltd
in
cmp
leave
dec
mov
push
and
data16
pusha
pop
es
test
jb
cmp
push
je
cmpsb
popf
cmp
push
ret
in
sbb
jo
dec
xchg
jbe
andb
dec
xchg
sub
pop
push
sbb
inc
mov
mov
in
sbb
pop
add
lods
dec
mov
in
dec
mov
repz
scas
inc
cmp
fs
mov
cli
lret
mov
jo
adc
ja
jno
les
outsl
xor
in
jno
inc
clc
mov
push
fisubs
jne
cltd
scas
jno
xor
jl
repnz
loope
in
shrb
mov
daa
lcall
or
pop
stos
lea
fisubrl
xchg
lods
sub
in
movsb
outsb
dec
push
mov
inc
jmp
jecxz
pushf
andb
hlt
ljmp
cli
stos
and
inc
iret
scas
stc
sbb
sub
and
dec
add
scas
stos
fs
shl
push
pop
fwait
dec
cmp
out
stos
sbb
jnp
mov
add
cwtl
xor
inc
cli
dec
decb
arpl
dec
aad
sti
and
mov
or
bound
pop
sarl
sub
xor
inc
in
sbb
movsl
xchg
scas
sti
enter
pop
push
out
ds
xchg
pop
in
or
movsb
cmp
jg
mov
mov
cmc
adc
bound
pop
xchg
cmp
clc
lahf
jecxz
icebp
sbb
addr16
test
lret
out
dec
xchg
xor
aam
dec
stos
pusha
or
sub
xorl
loop
sub
jns
lds
orl
pusha
in
stc
dec
lea
mov
int
jle
adc
hlt
jl
jge
cld
xchg
rorb
out
call
stos
in
dec
popa
or
mov
or
negl
call
test
sarl
arpl
xor
jns
mov
mov
and
mov
push
xchg
sub
fbstp
ss
mov
mov
iret
xor
jmp
insb
divl
xchg
sub
ds
out
or
dec
into
pop
sahf
and
ret
lret
or
pop
psubusb
ss
sahf
stc
sarb
lea
mov
fstl
xchg
dec
sbb
cltd
iret
xor
dec
loopne
adc
mov
test
lods
and
pop
hlt
mov
cmp
cmc
mov
scas
mov
pop
xor
or
mov
mov
int3
in
cmp
ret
iret
xchg
jecxz
iret
mov
in
stos
mov
lret
jo
gs
dec
adc
ljmp
adc
addr16
pop
pop
mov
leave
xchg
aaa
je
insb
add
mov
lea
nop
movsb
jecxz
mov
je
in
lret
or
fbld
out
pop
sahf
das
test
and
mov
mov
ss
mov
push
push
xor
inc
lods
shl
cmp
imul
push
pop
inc
cmp
js
push
fistps
xstore-rng
cmpsl
xchg
push
fxch
imul
loopne
das
sub
pop
inc
dec
pop
lds
jo
repz
call
add
dec
adcb
fdiv
jnp
cmc
aas
sub
test
sbb
add
fisubrs
mov
push
pusha
sbb
xchg
jne
cwtl
pop
in
jne
push
jno
xchg
lret
loopne
mov
xchg
aam
fildll
push
sub
iret
adc
jmp
adc
jo
sbb
addb
push
jmp
push
push
mov
jnp
ret
sbb
sub
test
sbb
cmp
sbb
xor
jle
xchg
sbb
push
out
push
lods
js
sub
stc
xor
push
xchg
and
ss
xchg
in
sbb
das
push
outsl
iret
mov
notb
jb
jnp
fwait
sbb
xor
mov
fimuls
sub
rcrb
dec
test
cs
subl
test
les
sbb
and
cmp
mov
movsl
add
dec
subb
test
mov
mov
outsb
jge
push
xor
lcall
jae
sub
or
add
and
fldl
mov
inc
and
push
cmp
push
std
mov
xchg
std
xchg
sub
mov
arpl
mov
mov
sub
scas
popf
pop
push
movsl
jp
adc
movsl
inc
or
shrb
pop
jle
nop
mov
mov
pop
rclb
jg
hlt
sarl
cmp
jecxz
in
fstl
mov
adc
aam
add
sbb
sbb
and
pushf
sbb
cmpsl
push
test
mov
jno
inc
xchg
cmpsl
ds
and
es
dec
dec
pop
xchg
mov
jno
or
les
mov
mov
ffreep
inc
xchg
jne
mov
jmp
iret
int
pop
adc
fisubrl
mov
adc
or
xchg
mov
scas
sbb
push
arpl
push
lds
shl
int3
lret
xchg
jl
xor
cli
dec
pushf
jg
testl
and
sub
in
mov
add
test
mov
mov
test
aas
or
dec
daa
arpl
xor
nop
xor
cmp
mov
mov
mov
sti
and
jno
daa
add
cmp
xchg
sub
rcrb
inc
neg
mov
popa
add
sbb
dec
mov
aas
imul
fcomi
dec
jle
in
xchg
adc
sub
jo
or
daa
lcall
inc
enter
or
sti
jae
mov
pop
jb
mov
add
cmp
repz
hlt
mov
xor
scas
jno
movsb
das
notl
mov
ja
dec
popa
jne
enter
das
jecxz
fld
int3
sbb
dec
mov
xchg
mov
or
inc
push
loop
rcrl
xor
shlb
push
jae
sbb
pop
das
adc
push
cltd
pop
cs
ja
pop
out
ss
iret
daa
mov
jb
xchg
mov
clc
enter
xchg
movsb
cmp
push
dec
popa
adc
stos
test
insl
sub
shl
std
add
xor
dec
adc
cmp
and
or
divb
dec
cmpsb
ret
pop
orb
mov
dec
stos
xchg
mov
jnp
xor
lret
bound
adc
adcb
test
loope
sbb
mov
lods
dec
int
xchg
sub
push
cli
gs
xor
jl
sub
jns
xor
jle
lea
and
xor
or
push
jb
jns
jge
sbb
mov
jns
add
ficompl
xor
dec
popa
inc
fisubs
sub
or
push
outsl
lret
push
ljmp
fimuls
mov
in
cwtl
pop
insl
add
outsl
inc
mov
fimull
mov
insl
in
nop
cmp
dec
repnz
aam
scas
insl
lds
loop
popl
lock
fstpt
popf
or
inc
fs
ds
faddl
sti
mov
lods
cmp
sbb
call
mov
sub
loope
popf
fldl2t
mov
bound
sub
enter
in
jb
mov
dec
adc
call
sbb
cmp
jecxz
arpl
jnp
sbb
ljmp
mov
add
out
faddp
jmp
inc
pop
lcall
adc
loop
orb
insb
mov
cs
repnz
mov
xchg
cmpsl
cmp
sbb
fwait
dec
pop
jge
bound
les
xchg
push
das
mov
dec
or
cmp
pop
xchg
sub
jbe
int
inc
scas
out
sbb
lahf
divl
icebp
sub
cmp
into
cmp
xchg
mov
mov
lea
add
mov
js
loopne
dec
cltd
les
push
out
sti
out
mov
add
add
fldl
ret
push
sub
stc
mov
pop
dec
jnp
push
incl
and
or
es
lods
data16
fmuls
scas
pop
adc
push
mov
push
jp
xchg
dec
mov
mov
dec
jl
push
push
insb
test
jle
test
jae
int3
xchg
mov
int3
jg
sti
xor
sub
cmpsb
lcall
in
popa
icebp
sbb
imul
sbb
lds
gs
fists
inc
mov
sbb
xor
push
lcall
and
sub
mov
js
rclb
mov
sbb
or
cmp
pop
dec
cli
mov
sbbl
out
cmpsl
push
cmpb
xchg
pop
icebp
push
cmp
ret
mov
push
push
pop
int3
sub
js
lea
xchg
push
jbe
dec
add
aad
fnstsw
dec
adc
jl
sub
inc
scas
shrl
push
cmp
scas
add
popf
loop
sbbb
stos
and
sub
mov
ljmp
jno
lcall
xor
dec
jl
sahf
icebp
std
inc
fldcw
xchg
jge
dec
out
xor
cmp
mov
dec
jnp
popf
stc
xor
jae
mov
sahf
sbb
loope
loopne
enter
jp
iret
fnsave
xor
pop
push
lret
movsl
es
add
push
push
fistps
scas
fidivl
sbb
mov
sbb
jle
ss
shrl
lret
jo
dec
mov
lock
mov
jae
cli
adc
cmp
jecxz
test
sub
iret
cli
out
popa
lock
and
mov
sbb
jmp
lret
jne
les
cmc
test
pop
sbb
pop
hlt
daa
sub
sti
and
lods
cli
jne
cmp
xor
lock
ret
and
jno
dec
mov
mov
or
mov
daa
xchg
or
sbb
mov
adc
int3
inc
mov
push
aas
xchg
xchg
sub
jge
add
jg
inc
jmp
xor
xor
fs
jmp
popa
jno
xchg
loopne
cmc
clc
xlat
repz
sub
into
popf
enter
sti
lret
sub
add
arpl
inc
shll
ss
adc
xchg
int
mov
pusha
imul
and
jne
adc
hlt
mov
mov
pop
jae
dec
mov
pop
and
fdiv
xor
mov
xchg
push
ss
xlat
sub
push
fnsave
adc
xchg
jo
push
fwait
aas
out
lods
fucomi
xorl
sub
enter
xchg
mov
decb
nop
xor
decl
push
lods
enter
aaa
add
arpl
jp
out
mov
int
int3
mov
mov
pop
jbe
mov
fisttps
push
push
lock
push
inc
js
sbbb
mov
jecxz
dec
cwtl
push
mov
mov
adc
jge
sub
lea
or
pop
gs
scas
add
mov
lods
scas
repnz
fmulp
shlb
cmpsb
stos
sub
popf
outsl
js
mov
xchg
in
imul
mov
js
dec
int3
add
mov
je
lret
imul
pop
xor
lock
mov
xchg
ret
xlat
xor
test
mov
pop
into
aam
inc
add
decb
ret
ja
lea
cwtl
fbld
inc
ss
jo,pt
in
add
iret
leave
xor
sarl
push
inc
sub
cwtl
mov
sub
pushf
xor
dec
dec
and
stc
dec
outsl
mov
das
sarl
imul
es
mov
lds
mov
and
mov
bound
ja
inc
inc
bound
std
inc
jecxz
xor
mov
dec
lcall
lahf
in
std
enter
bound
fistps
jo
pushf
test
xchg
sub
imulb
cmp
mov
int3
aaa
adcl
xchg
out
repnz
nop
add
push
mulb
add
add
aad
gs
fists
insb
scas
mov
pop
flds
pop
movsb
out
xor
subl
sub
test
or
and
inc
imul
das
mov
shlb
aaa
popa
jmp
sub
fwait
xchg
dec
dec
cs
jp
dec
in
mov
test
adc
outsb
andl
push
cwtl
inc
out
jl
subb
sub
push
sub
ret
test
popf
in
shlb
fucomip
push
mov
push
mov
mov
aas
stc
je
push
dec
xchg
in
loop
lret
lcall
ja
imul
add
cmp
sbb
mov
sarl
sub
test
jge
lahf
mov
mov
je
scas
daa
fildl
push
push
pop
pop
outsl
sbb
gs
pop
lcall
mov
push
loop
mov
loopne
stos
pop
movb
imul
mov
ja
jp
xchg
inc
in
sbb
xor
or
inc
jmp
hlt
xor
xchg
movsb
dec
das
jg
popa
outsb
lahf
lods
imul
adc
dec
repnz
andb
add
mov
fidivrl
out
adc
loope
sbb
int3
mov
ja
aas
xchg
std
nop
xor
jne
and
push
dec
mov
sub
jl
sbb
rorl
jne
nop
lods
push
cmp
inc
std
jo
sbb
shr
dec
fadds
push
int3
scas
mov
ss
cmp
in
repnz
cmc
sbb
push
pop
pop
nop
sti
adc
pop
ret
in
call
data16
cmp
pop
shrl
inc
pushw
mov
add
sub
cmp
lds
xor
xorb
mov
jecxz
jg
mov
imul
pop
jmp
xchg
bound
sub
pop
adc
add
scas
mov
sbb
mov
adc
hlt
repz
les
xor
or
fimull
jnp
cld
sti
jle
pusha
ja
push
cli
aam
sub
push
call
mov
xor
popf
lea
cwtl
xchg
ljmp
mov
subl
or
mov
xchg
xor
add
mov
cmp
outsl
jg
int3
insb
pop
and
mov
roll
inc
leave
and
pushf
hlt
inc
in
add
addr16
cli
xchg
pop
pop
aas
subb
gs
cli
xchg
fbld
mov
faddl
inc
cli
mov
fucom
mov
cmp
or
ljmp
jg
cmc
mov
add
data16
jge
test
lret
stos
into
and
fwait
jg
push
in
jb
mov
clc
mov
jae
sbb
mov
push
adc
xor
xchg
dec
cmpsb
loopne
out
pop
mov
inc
stos
ret
ja
leave
adc
je
in
shlb
add
test
lock
add
adc
rol
or
jae
arpl
cwtl
pop
sbb
or
sarl
sub
xchg
sbb
arpl
lds
outsl
cmp
jmp
inc
inc
mov
stc
lock
clc
fstl
pop
ss
out
xchg
outsb
inc
leave
sub
dec
mov
cwtl
aad
fpatan
dec
xor
lcall
cltd
sub
jge
xchg
stos
inc
fnstsw
nop
and
xchg
pop
push
pop
repz
rcrb
mov
push
out
and
es
pop
lock
mov
ret
out
mov
fmull
iretw
adcb
xor
push
lods
insl
xor
int
adc
add
pop
xchg
lock
xor
loop
ret
jle
nop
cwtl
mov
enter
test
lea
mov
insb
or
loop
into
adc
pop
and
pushf
or
sbb
adc
aaa
dec
shrb
ret
adc
ret
pop
jns
pop
stc
adc
sub
addr16
popa
shufps
inc
in
sarb
mov
iret
mov
mov
sbb
inc
cli
dec
or
inc
add
cmp
lock
iret
mov
bound
lahf
or
fcmovnbe
repz
push
xchg
insb
cmp
ror
fcomip
and
push
push
ss
mov
adc
sbb
lods
fdivs
fimull
lahf
or
jmp
stc
mov
or
xor
sub
and
pop
inc
inc
jbe
imul
scas
scas
sub
shrl
arpl
sbb
adc
dec
xchg
lods
push
mov
cmp
sarb
mov
mov
mov
leave
insb
adc
xchg
add
cmpsb
stos
cltd
sti
xchg
or
popa
xor
adc
lods
jge
rclb
push
cmpsb
jo
and
dec
pop
pop
and
cwtl
mov
neg
adcl
push
dec
mov
inc
je
inc
mov
pop
out
sub
outsl
repnz
sti
xchg
pop
les
adc
lcall
into
stc
lcall
shrb
and
fistpll
outsl
stc
inc
mov
mov
iret
into
jns
or
mov
scas
pop
aad
lock
or
in
dec
pop
dec
shlb
push
in
pop
sahf
adc
movsb
jae
xlat
pusha
test
dec
mov
ja
cmp
inc
pop
lock
aas
fisttps
sbb
jmp
sub
mov
mov
mov
popa
inc
pop
xchg
mov
ds
sub
cmp
pop
xchg
mov
sub
std
pusha
pop
or
mov
pop
mov
out
mov
aas
or
cmc
and
inc
pusha
cld
and
outsl
stc
mov
sub
fcmovb
mov
jb
sbb
sbb
push
jp
pop
mov
add
repnz
and
test
loope
add
insb
fildll
imul
push
add
mov
out
test
sbb
push
out
dec
sbb
sbb
xchg
lods
mov
cltd
mov
out
sub
scas
das
into
cwtl
aad
dec
loopne
mov
addr16
inc
mov
shll
movsl
les
adc
mov
out
lods
xor
aas
jge
scas
call
mov
push
pusha
pop
nop
movsl
sbb
add
mov
push
ret
sbb
popa
test
pop
jle
sub
or
orl
icebp
dec
dec
sub
jle
sbb
cs
pop
in
mov
pmaxsw
leave
arpl
xchg
dec
sub
sti
pop
jb
dec
mov
lret
ds
jno
pop
mov
mov
fistps
xlat
je
gs
and
add
sub
and
add
jno
dec
pop
inc
xchg
push
in
dec
jns
inc
mov
dec
adc
cmc
adc
lret
push
lcall
fadds
push
shrb
or
pop
cmp
lods
aad
test
jo
xlat
xchg
jmp
das
push
jmp
adc
jp
mov
mov
jmp
xchg
mov
test
push
xchg
sar
push
and
out
push
insb
jle
lcall
mov
ds
outsl
or
je
mov
subl
shrb
jmp
mov
adc
xorl
cmp
xor
out
lods
pop
dec
cmp
movsl
or
sub
dec
fmull
insl
loope
add
outsb
inc
xchg
fwait
xor
push
mov
lods
icebp
in
mov
inc
xchg
push
jbe
or
mov
and
and
pop
lcall
cwtl
and
inc
aaa
xchg
xchg
adc
sbb
lods
push
test
inc
mov
iret
sti
scas
mov
sbb
fisttps
jg
pop
xor
and
aam
in
into
fs
mov
retw
cmp
push
icebp
ss
lods
sub
mov
xchg
ret
fistpl
inc
xorw
dec
adc
aam
adc
fistpl
xor
xor
jmp
dec
cmpsl
mov
sbb
jecxz
sti
add
mov
mov
cmc
mov
xor
mov
inc
pop
ljmp
adc
movsb
mov
mov
adc
shlb
sbb
inc
sbbb
mov
icebp
xchg
lock
movsb
clc
jp
sub
inc
fmuls
adc
ret
sbb
mov
std
or
stos
jg
jns
lret
mov
loope
push
leave
flds
mov
fidivs
xor
loop
cmp
mov
jns
jne
add
jl
or
xchg
dec
push
cmpsl
pusha
sti
add
out
sbb
dec
test
xchg
stos
fs
xor
xchg
pushw
lret
xor
inc
arpl
addr16
dec
adc
cmpsl
dec
xor
mov
imul
repnz
jmp
popf
xor
sbb
pop
ljmp
cwtl
pop
ret
movsb
add
inc
pop
cmc
je
dec
and
lods
adc
cmp
into
and
dec
test
cmp
jg
mov
scas
mov
adc
bound
xor
xor
cmp
pop
repnz
lods
daa
inc
sub
jns
or
std
fwait
push
jge
out
mov
mov
insl
cld
sarb
lods
mov
fidivs
sub
cld
inc
lds
and
push
faddl
mov
outsl
stc
sbb
or
loop
rcl
iret
in
test
pop
out
cltd
popa
mov
jb
sub
pop
ja
mov
inc
mov
cltd
push
cltd
xchg
hlt
mov
das
xor
ret
pushl
insl
ret
mov
lcall
jmp
adc
les
mulb
and
inc
pushf
mov
pop
inc
cmpsl
mov
cmp
dec
nop
addr16
push
jo
mov
aaa
xchg
cld
outsl
dec
loop
insl
adc
xor
enter
sub
push
test
inc
clc
adc
sbb
xor
sub
dec
loope
sahf
xchg
es
xor
outsb
mov
adc
cmpsl
inc
ja
xchg
xchg
and
add
ret
enter
andb
or
es
jbe
jbe
and
or
sub
not
inc
test
jg
addl
jl
lret
lods
insl
shrl
test
jne
in
test
nop
cmp
sti
cmp
sbb
jb
daa
mov
lcall
sbb
in
pusha
mov
sti
push
pop
aad
ret
test
and
pop
mov
sbbl
nop
and
sbb
outsl
in
jl
sbb
arpl
outsl
push
lock
sub
aad
out
sbb
adc
cli
xchg
add
loope
fptan
sbb
push
aas
sub
sbb
xor
clc
adcl
mov
sub
scas
cmpsb
scas
std
add
add
mov
fsts
loopne
mov
xor
or
popa
fisubrl
mov
std
je
jmp
sub
pop
js
dec
pop
mov
mov
imul
or
inc
push
aad
mov
mov
xchg
sti
fwait
lcall
daa
lahf
mov
ljmp
jb
adc
jmp
iret
cmp
pushf
clc
jne
cmp
xchg
pop
xchg
scas
aad
mov
ss
xchg
mov
mov
test
mov
int
mov
ret
js
addr16
aad
inc
add
xor
lods
push
xor
pusha
scas
std
andl
sub
push
insl
xchg
out
mov
sarl
mov
ret
dec
xchg
mov
fucom
mov
mov
into
sti
xlat
ljmp
mov
lea
xchg
push
xchg
fdivrs
rorb
mov
jp
jecxz
cltd
pusha
repz
pusha
push
loopne
sti
xchg
push
inc
fnsave
cmp
enter
and
mov
lret
incl
enter
add
and
in
add
out
xchg
insl
loopne
movsb
push
add
xor
and
loope
das
xor
pop
js
inc
and
leave
test
out
xchg
mov
pop
mov
and
jge
xor
lret
mov
pop
lods
stc
int
int
jle
mov
jmp
jbe
test
mov
mov
or
daa
mov
push
into
outsl
jns
call
sar
les
movsb
mov
movsl
lds
daa
stos
xchg
adc
fwait
addr16
shl
mov
jl
add
jno
mov
rolb
or
jae
out
add
push
cli
mov
jae
imul
stos
mov
lds
bound
cmp
lods
div
xchg
lock
pop
repnz
popa
popf
sub
aad
daa
add
xor
xlat
and
jns
js
je
std
add
jle
mov
cwtl
push
jnp
jb
xchg
jae
mov
out
js
pop
push
call
and
ficoms
jno
jnp
lock
clc
test
lret
mov
pushf
xchg
into
xchg
ficoml
orl
xor
sti
subb
fwait
pop
jl
aad
inc
adc
sbb
js
out
jl
sub
fldcw
or
out
xor
or
loopne
ret
in
fs
push
dec
stc
mov
sbb
jns
mov
rol
pusha
add
int
out
pop
push
sarl
aas
movsb
adcb
pop
popa
cli
addr16
sahf
scas
mov
sub
mov
filds
rcrb
mov
movsb
addr16
pop
imul
pop
jne
orb
fwait
in
mov
sub
sarb
xor
repz
test
aas
aad
adc
movsl
mov
rolb
mov
fnsave
dec
add
dec
outsl
and
jb
fwait
cmp
clc
jmp
jae
jge
lret
in
cli
adc
loope
xchg
adc
cltd
std
pop
xchg
inc
pop
iret
clc
add
add
test
negl
ret
andl
push
not
daa
mov
adc
adc
scas
jle
cmpsb
das
loopne
adc
mov
insl
outsb
andb
je
sub
dec
xchg
repnz
sub
loop
int3
push
movsl
add
add
sub
scas
movsl
repz
push
xor
xchg
inc
imul
and
dec
loop
inc
jbe
cmp
push
xor
fwait
repnz
pop
sbb
xchg
xor
cmp
or
scas
cmp
add
sahf
sbb
shlb
sbb
mov
push
dec
add
fs
xchg
xor
or
cmp
cmc
scas
inc
add
into
ficoms
push
loope
or
sub
adc
push
mov
std
lcall
mov
sbb
and
repz
pop
jnp
lea
and
filds
xor
sbb
add
pop
jmp
pop
cltd
mov
pop
sub
aas
andb
add
push
in
push
inc
mov
xor
mov
push
mov
dec
sbb
pop
jbe
out
fwait
adc
xchg
add
js
fldpi
mov
mov
fdivs
sahf
pop
jnp
lcall
cltd
sbb
inc
push
sub
inc
sbb
scas
out
or
dec
xchg
test
xchg
fwait
adc
xor
jg
pushf
and
or
inc
push
mov
movsb
lds
cmp
cli
dec
out
push
add
dec
fsts
shl
int
adc
and
adc
dec
movb
aad
outsb
xorl
push
out
or
push
cmp
adc
jp
stos
jnp
lea
inc
cmc
scas
cwtl
jae
shr
mov
fisubs
sbb
sahf
xor
xchg
pushf
cli
or
into
jbe
mov
pop
pusha
ret
sbb
pop
popa
xchg
outsb
push
pop
add
lea
dec
jb
inc
inc
sub
je
mov
mov
push
shll
sahf
testb
and
sub
les
repz
xchg
dec
incl
aam
inc
xlat
sbb
outsl
mov
jecxz
mov
xor
or
jns
pop
mov
test
aad
lods
lea
jmp
psrlw
mov
add
ljmp
mov
or
pusha
imul
ja
push
push
pushf
pop
pop
xor
cmpsb
std
inc
add
inc
ljmp
xor
ja
cwtl
cmp
sbb
fstps
ret
adc
add
inc
adc
pop
aaa
aad
sbb
daa
or
adc
xor
sarb
and
inc
std
fmul
in
cld
sti
clc
adc
sti
push
adc
mov
and
scas
shr
mov
movb
pop
mov
nop
pop
lods
in
out
subl
loope
add
dec
cli
popa
fwait
mov
imul
outsl
mov
test
jle
push
push
rclb
sahf
jb
xchg
lods
les
or
pop
and
xchg
in
int
out
or
mov
jne
jecxz
mov
sti
adc
imul
push
cmp
outsl
daa
xchg
pop
pushf
jae
lods
mov
inc
js
lods
pop
iret
pop
push
or
xchg
push
xlat
jmp
mov
adc
or
ljmp
es
aaa
out
xchg
sbb
push
in
dec
mov
xchg
sub
sahf
fldcw
lret
stos
int3
jb
jmp
mov
mov
dec
jae
xchg
mov
aad
imul
test
out
sub
popf
push
popf
les
lret
roll
sub
mov
sahf
inc
mov
ds
pop
mov
push
js
ljmp
insb
scas
jns
clc
dec
mov
mov
mov
push
sub
out
movsb
shrb
enter
sahf
mov
sbb
aaa
leave
pop
inc
call
out
lcall
stc
stc
lret
jmp
scas
roll
test
xchg
stos
insl
out
aad
jns
lea
lock
xchg
xlat
xor
mov
bound
mov
mov
popa
adc
dec
xor
ret
cmc
mov
and
mov
or
mov
add
mov
mov
add
mov
imul
movsl
sbb
sub
sub
mov
mov
sbb
jo
jo
mov
push
mov
lods
pop
in
ss
nop
adc
js
inc
imul
scas
cmp
cmc
jb
inc
mov
pop
inc
sbb
jp
outsb
in
insb
jle
pop
mov
aam
or
les
sti
sahf
call
ljmp
xchg
jle
jl
cmp
mov
call
or
ja
or
cmp
or
ja
push
mov
mov
shll
cmp
xlat
stc
pop
sbb
in
sbb
or
jmp
repnz
dec
xchg
jl
fdivrs
mov
mov
popa
rcl
xor
adcb
cs
in
xchg
jb
mov
imul
cld
ja
mov
xchg
jne
pop
scas
in
fildll
xchg
jl
mov
movsb
loope
mov
pop
movsb
adc
dec
outsl
push
push
jle
inc
ja
andl
sti
aad
int3
lret
jne
test
addr16
outsl
ret
int
push
fldlg2
mov
dec
mov
add
pop
popf
inc
jmp
repnz
push
sarb
push
lods
sub
gs
push
jp
sbb
mov
cmp
rol
fnstcw
aam
out
push
popa
repnz
pop
stos
mov
sub
clc
sahf
add
dec
push
mov
mov
das
and
xor
cmp
mov
xor
ss
mov
js
jo
mov
ret
push
mov
ja
sbb
mov
push
jg
add
mov
sbb
adc
ljmp
adc
cmc
iret
pop
push
jl
or
mov
fildl
or
ds
pop
popa
pop
lret
scas
inc
xchg
push
push
aad
push
jmp
lea
iret
cltd
lret
mov
jmp
icebp
mov
lea
fstl
mov
imul
inc
push
add
ret
ss
in
mov
push
push
ret
jb
ss
push
out
rcll
je
das
lret
inc
dec
xchg
daa
push
mov
loop
int
std
das
sub
mov
push
imul
sbb
sub
mov
shll
in
dec
ficoms
data16
pop
lret
sub
sbbb
lods
or
and
dec
icebp
fsubr
daa
test
push
repnz
ret
sbb
xchg
adc
repz
sub
xchg
push
decl
xchg
addr16
or
mov
push
loope
jo
mov
sub
fistl
xor
push
popa
lcall
shr
push
in
add
rolb
imul
mov
out
mov
mov
sbb
out
xor
dec
mov
dec
in
hlt
hlt
popa
xor
mov
clc
popa
adcl
pop
fisubrs
dec
loop
fdivrs
mov
test
or
bound
ja
shlb
dec
les
push
pop
int
jo
mov
xor
jae
or
movsb
mov
push
sub
incb
mov
into
pop
mov
leave
js
lret
cmpsl
icebp
sbb
mov
jno
cmp
jbe
leave
fdivrl
xchg
dec
int3
bound
dec
jmp
dec
sub
iret
adc
mov
in
stos
jmp
sub
mov
repz
out
cmp
add
leave
xor
and
mov
outsb
jb
and
nop
loopne
ss
pop
jb
shrb
xchg
xchg
into
lods
sub
int
adc
aas
push
xor
shlb
inc
pop
push
sub
mov
mov
add
test
shl
add
ret
adc
xlat
push
jmp
mov
xorl
push
jl
leave
mov
dec
mov
js
mov
or
pop
int3
stos
jg
popa
lcall
sub
into
pop
lahf
out
xchg
xor
mov
testb
leave
and
mov
mov
bnd
xor
bound
sbbl
dec
add
pop
cmp
mov
jl
mov
xorb
adc
xchg
xor
in
push
fiaddl
or
xor
jp
jbe
ds
sbb
nop
insb
mov
pop
dec
mov
and
cmp
pop
jle
dec
test
shrl
arpl
mov
roll
jo
into
imul
out
addl
stos
jb
int
popf
pop
test
push
into
or
jne
es
ss
inc
gs
mov
mov
pop
inc
ficoml
cmp
scas
sub
mov
scas
mov
push
mov
sbb
pop
ja
iret
test
cli
out
scas
ret
andl
mov
lds
das
cmp
sub
dec
add
add
push
jle
stos
xor
fidivrs
mov
and
xlat
or
mov
inc
lcall
add
daa
sbbl
in
adc
mov
loope
mov
inc
fiaddl
push
pop
sub
inc
dec
mov
lods
push
and
sub
lahf
inc
loope
dec
add
mov
add
adc
push
pop
pop
icebp
dec
pop
imul
outsb
js
pop
inc
adc
jle
jle
push
cmp
loope
jne
dec
lods
inc
sub
movsb
sub
mov
cli
mov
push
or
rcrb
dec
dec
mov
dec
inc
xor
ljmp
sahf
test
mov
into
out
sub
in
xor
inc
dec
rclb
add
jmp
jmp
and
data16
cmpsl
fsqrt
ret
in
repnz
lods
inc
push
cli
add
mov
test
push
xchg
decb
mov
stc
int3
xor
les
cmp
sub
pop
out
lahf
sub
mov
rorl
leave
ss
shrb
or
pop
sub
push
out
arpl
int
stos
jp
mov
fstpl
notb
pusha
ss
stc
in
inc
sbb
push
fistps
sub
sub
fistpll
outsl
xchg
pop
icebp
dec
nop
cmp
mov
xor
or
push
jg
xchg
push
jl
lret
xor
xchg
clc
cwtl
dec
stc
aas
mov
push
pop
adc
in
andl
or
mov
fildl
and
sub
adc
in
sbb
fstps
xchg
mov
stc
push
mov
aaa
movsb
mov
xchg
push
dec
loopne
mov
inc
sub
inc
pop
popf
dec
xor
jle
push
jmp
dec
dec
mov
and
pop
mov
push
jmp
es
fstl
inc
sbb
push
negb
sarl
sbb
fs
test
cwtl
inc
cwtl
adc
xor
cmc
pop
mov
inc
pop
sahf
jbe
mov
pop
push
sahf
inc
aam
andl
pop
sub
cmp
clc
xchg
sbb
fcmove
lret
xor
dec
aad
subl
ss
out
adc
lretw
jmp
sub
fldcw
adc
cmp
inc
pusha
daa
aad
dec
mull
test
mov
mov
negl
insb
sti
adc
and
pop
test
cmp
sub
push
insl
jge
pop
mov
dec
into
mov
imul
sbb
aam
cwtl
add
pusha
fcmovne
scas
push
mov
mov
sbb
stos
icebp
enter
mov
jmp
fmul
pop
dec
loopne
or
xchg
adc
ret
xchg
dec
mov
fcomi
aad
xchg
push
push
outsl
orl
shll
push
or
push
or
fistpll
test
gs
into
dec
push
negl
add
and
mov
les
lock
and
jg
aas
cwtl
mov
dec
xchg
sub
push
jmp
or
ret
and
mov
in
adc
xchg
das
popf
lods
es
sti
mov
fiadds
scas
stos
daa
adc
xor
cwtl
mov
push
jo
loope
mov
mov
sbb
sub
dec
pop
add
dec
mov
mov
and
js
push
xor
jno
pop
lods
jg
or
outsl
lods
popa
divl
mov
arpl
cmpb
push
sbb
or
mov
addl
xchg
mov
mov
push
or
push
push
push
ljmp
jno
hlt
and
push
adc
cmp
shlb
movsb
pop
hlt
or
mov
scas
rclb
adc
xlat
mov
insl
std
setg
incl
pushf
js
lret
xchg
or
shrb
cmp
je
push
mov
and
pop
dec
and
jne
arpl
pusha
arpl
add
ja
ja
cltd
iret
inc
lret
or
pop
lods
cld
pushf
inc
ss
sub
jb
mov
adc
mov
jo
shll
repz
pop
jle
mov
mov
sbb
push
sbb
mov
mov
cmc
xor
cmpsb
mov
mov
aam
lret
xor
data16
iret
jp
repnz
in
test
xchg
cmp
xor
sbb
mov
stos
imul
lgdtl
fildl
cwtl
push
out
pusha
je
outsl
out
adc
add
sbb
dec
dec
icebp
jle
dec
xor
cmp
aad
mov
jmp
imul
pusha
or
lods
fsubr
adc
push
jle
movsb
lret
movsl
rol
push
test
das
stc
or
std
or
inc
mov
test
test
xchg
xchg
arpl
js
icebp
xchg
xor
iret
shlb
cli
gs
adc
cmp
dec
loope
xchg
aas
mov
xchg
cli
daa
adc
mov
mov
or
mov
pop
cmpsb
repnz
fdivrs
mov
ja
cmpsl
mov
jecxz
icebp
insb
hlt
sub
movb
fwait
std
test
in
push
and
rcl
inc
pop
add
xchg
and
loopne
aas
aad
sbb
stos
shlb
mov
lods
mov
out
add
xchg
dec
lahf
mov
jmp
ret
sub
mov
in
add
inc
out
dec
popf
xlat
push
paddusb
push
xlat
xchg
popf
adc
mov
fsubr
mov
pop
add
out
add
push
xor
xor
notb
push
inc
daa
add
or
scas
pop
dec
sub
les
sbb
cs
cmp
lds
sahf
or
pop
jecxz
jle
lods
scas
pop
sub
outsl
scas
aad
hlt
push
into
enter
or
inc
inc
repz
gs
enter
dec
pop
mov
mov
push
adc
xlat
push
jge
jno
ss
sbb
dec
fsubl
je
inc
js
flds
adc
adc
rorb
push
cmp
sub
pop
aad
and
dec
fiaddl
or
mov
pop
adc
cmp
pop
mov
or
adc
mov
xchg
cltd
inc
ret
xor
sub
in
dec
sub
fdivrl
pop
lcall
sbb
cmp
out
or
fidivrs
inc
xchg
into
movsl
inc
cmpsl
dec
iret
iret
push
pop
pop
push
add
mov
xor
bound
add
fbstp
push
adc
xchg
lods
sbb
sbb
daa
cmp
popaw
lock
dec
mov
filds
push
mov
mov
push
mov
lods
sti
mov
mov
xchg
ror
mov
les
cmc
mov
insb
jge
movsl
xchg
ja
push
sub
ss
pop
insb
sub
mov
popf
cli
mov
xchg
push
inc
jnp
jecxz
fucomp
inc
sub
out
xor
mov
push
enter
cmp
cwtl
stos
sahf
inc
pusha
les
lods
mov
and
dec
stc
jg
test
dec
pop
out
jle
jo
jp
jbe
rcll
je
and
sub
shll
int3
mov
test
std
push
pop
insl
fistps
aam
sbb
cwtl
mov
clc
subb
dec
jecxz
xlat
aad
or
jecxz
xchg
jp
mov
shlb
adc
xchg
mov
imul
push
scas
cmpsl
inc
mov
dec
push
in
int
cmp
and
mov
jecxz
cs
jae
sbb
mov
aad
outsl
adc
loope
jmp
in
xor
sub
dec
aaa
inc
xchg
mov
fwait
or
cltd
and
ret
lcall
push
adcb
cld
bound
lea
xchg
sub
push
push
push
and
vcvttss2si
clc
cmp
pop
xchg
pop
push
fmul
jg
mov
shr
in
icebp
jnp
scas
sbbl
lret
inc
out
dec
push
fwait
xchg
jno
dec
in
xchg
add
mov
imul
stos
inc
push
jl
push
mov
movsb
xor
sbb
pop
adc
pop
daa
add
push
mov
cmpsl
inc
sbb
pop
icebp
push
xchg
xchg
mov
sub
xchg
jmp
sub
cwtl
jecxz
icebp
adcl
push
xchg
test
pcmpeqb
lods
lock
push
or
sub
aad
xchg
aad
lods
cmpsl
lret
popa
dec
cmp
sub
mov
sbb
call
push
pop
sahf
add
ljmp
je
jmp
call
pushl
cmpsb
mov
lcall
fistpll
notb
mov
sbb
xchg
ret
sbb
rol
xchg
adc
ljmp
mov
imul
xor
cmpsb
stc
and
push
sbb
or
push
sub
push
stos
push
arpl
adc
push
lock
jg
in
mull
mov
adc
aas
fildll
mov
and
inc
push
pushf
test
push
call
leave
push
inc
pop
mov
and
sbb
sbb
decb
fwait
lret
not
cmc
ret
mov
and
fnsave
int
imul
in
jg
call
int3
pushf
stc
scas
std
mov
dec
and
loope
inc
push
int
jecxz
pop
imul
sbb
mov
dec
fbstp
loop
mov
xchg
xchg
dec
stos
int3
add
cmp
push
sub
iret
fwait
je
inc
cmp
repnz
dec
fsubs
jp
jnp
stc
rorb
cmpsb
adc
push
aas
sub
jle
xchg
cltd
daa
or
adc
test
aas
push
cmpsb
addr16
or
fmuls
daa
or
xchg
aam
or
dec
or
ljmp
pushf
cmp
ss
hlt
cmpsl
daa
lahf
and
push
das
mov
push
lods
mov
or
mov
out
cmpsl
ret
inc
pop
ljmp
push
sub
stos
mov
inc
inc
jmp
jbe
icebp
mov
arpl
or
adc
repz
dec
pop
mov
pop
iret
jecxz
sbb
ds
xchg
cs
jecxz
dec
dec
out
add
adc
push
jmp
test
fwait
test
hlt
cli
dec
mov
mov
sub
dec
mov
or
dec
out
fnstenv
mov
cli
inc
adc
jl
nop
dec
adc
jge
sbb
ljmp
inc
pop
sub
or
mov
jg
xor
in
add
dec
mov
push
dec
in
cs
shll
fimull
ficomps
sarb
out
loop
xchg
dec
shrl
mov
jge
pop
int
jge
shll
mov
jnp
xor
inc
fiaddl
bound
inc
test
icebp
jge
pushf
mov
pop
cmc
mov
push
sub
jg
rorb
repnz
cmp
xchg
add
notb
cmp
cmp
rorl
mov
fmull
cmp
in
or
lcall
and
int3
insl
mov
sub
cwtl
scas
cltd
sbb
pop
rcl
aaa
std
xchg
cmpsl
sbb
fldenv
xchg
jge
adc
data16
lahf
xchg
pop
shll
push
mov
pop
dec
sbb
lcall
iret
rolb
shrb
les
xchg
stos
and
in
inc
cmp
lret
fldcw
mov
je
fistpl
cmc
popf
jb
jae
sbb
push
imul
inc
fdivl
jle
stos
mov
dec
sub
cmp
inc
add
mov
jmp
popf
push
jp
mov
sbb
add
das
mov
mov
sbb
sbb
test
mov
lret
ds
repnz
cmc
mov
adc
rcrl
cli
push
inc
stc
popa
subl
dec
pushw
stos
nop
fdivl
aaa
scas
mov
test
xchg
sbb
bnd
jmp
imul
mov
test
sahf
cmp
mov
mov
xchg
jecxz
ds
push
call
cmp
pop
jno
popf
pushf
sub
pop
movsb
dec
dec
and
imul
mov
test
int
fstpl
pop
inc
jecxz
mov
bound
jmp
or
push
lods
pop
and
push
jbe
jo
xor
xchg
lods
stos
inc
fbstp
lods
jle
xchg
add
mov
adc
fistl
lods
pop
mov
mov
mov
push
movsb
cs
push
outsb
shll
test
jae
or
mov
outsb
push
cs
add
cmc
int3
ret
jo
imul
leave
xorb
out
adc
out
xchg
aaa
cmc
and
gs
ja
add
mov
push
es
push
pop
out
mov
add
pop
out
ss
adc
sbb
mov
movsb
lods
xor
lods
scas
ret
scas
cmpsl
xchg
enter
mov
add
ss
mov
adc
jecxz
icebp
xor
xchg
adc
add
cmc
jb
mov
mov
xchg
mov
pop
iret
mov
or
push
lcall
outsl
shl
pusha
ss
mov
imul
inc
ret
pop
push
mov
pop
es
push
movsl
xchg
inc
enter
shr
push
rcrl
dec
pusha
and
inc
cmpsl
les
mov
push
sub
inc
inc
mov
rorb
xchg
add
es
in
dec
movsb
cwtl
gs
outsb
push
repnz
mov
and
mov
mov
lret
push
inc
stc
stos
fdivl
mov
push
dec
mov
imul
push
cmc
mov
cmp
pop
push
outsb
pop
dec
decl
pop
cmp
arpl
insl
out
jb,pt
push
jb
xor
mov
ret
out
dec
in
sti
dec
sarb
or
xor
out
inc
sbb
out
push
inc
cmp
fwait
cmpsl
or
cmc
scas
dec
subb
sarl
notl
test
adc
pop
jae
pusha
fildl
dec
dec
add
mov
cmp
mov
fdivp
cld
sar
jb
adc
fs
test
ds
out
in
mov
adc
push
xchg
or
aas
arpl
jo
shlb
shll
outsb
add
cmp
mov
dec
out
push
inc
addr16
mov
xchg
adc
cmpsb
jo
test
xorb
inc
nop
jne
fdivl
push
nop
decb
pushf
enter
lret
es
test
jecxz
and
ljmp
push
jecxz
lds
dec
imul
inc
add
add
push
insl
scas
jae
push
sar
pop
lret
orb
mov
inc
sbb
mov
js
pushf
out
push
lcall
add
xchg
add
movsl
int3
popf
mov
shll
xor
xchg
mov
shrl
mov
mov
out
jns
shlb
ret
push
int3
fdivrs
mov
and
and
xchg
rorb
int
push
jne
add
inc
aas
xor
add
ss
jl
fxch
inc
out
cmp
pop
and
mov
test
stc
jg
sbb
jns
pop
add
lds
jp
cmp
nop
dec
jle
xchg
sbb
add
push
jl
xorl
mov
cmp
das
movsl
xchg
pop
xchg
mov
icebp
sbb
lea
popa
pop
mov
int3
pcmpgtd
adc
mov
lock
add
ror
dec
inc
jg
call
xchg
aad
pop
dec
aas
fwait
xor
lods
xorb
fbld
sti
aaa
sub
sub
je
pop
push
loop
addl
cld
scas
pop
inc
sub
out
xor
aad
xor
jbe
or
mov
stos
lock
mov
pusha
sbb
sahf
sbb
lock
cs
pop
push
scas
cli
inc
rcll
push
in
push
inc
push
cmp
lret
rorl
iret
aad
je
lds
aaa
pop
push
mov
adc
cmp
mov
ret
jg
daa
inc
xchg
sti
fisttps
sti
and
cmp
push
out
mov
test
mov
push
lods
mov
ds
cmp
pop
mov
popf
or
push
and
pop
in
push
pop
push
cmpsl
shll
and
xor
bound
cmp
stos
mov
mov
push
loope
inc
fst
mov
in
mov
xchg
mov
xor
insl
addr16
jne
mov
test
mov
xor
push
jmp
adc
inc
and
xchg
arpl
fsubs
lea
mov
mov
adc
inc
aam
fmull
shrb
mov
or
in
cmp
pop
insb
and
xchg
push
fcomip
xchg
decl
mov
sahf
xor
cmp
pop
mov
bndldx
push
int
addr16
mov
loopne
lahf
mov
in
pop
repnz
inc
iret
pop
cmpsl
sbb
mov
loope
xorb
mov
or
aas
xor
jb
imul
cmp
test
push
in
inc
test
popf
bound
mov
fwait
lods
mov
dec
cmp
push
push
stos
inc
add
mov
sub
cmp
mov
lahf
mov
push
xchg
sub
adc
mov
and
scas
ss
ret
xchg
stos
and
std
mov
scas
sbb
xchg
and
in
or
fdivrs
int
xchg
sub
add
and
xchg
push
addr16
sub
into
jb
xchg
xor
push
jp
xor
add
xchg
or
inc
cli
mov
sbb
mov
retw
fists
xor
jne
inc
add
jle
call
stos
sti
out
inc
fstl
fldcw
ljmp
test
lods
mov
dec
repnz
jp
out
negb
pop
adc
lret
adc
hlt
ret
ret
or
std
insl
loopne
or
cmp
dec
add
xlat
xchg
xchg
mov
add
out
cld
dec
clc
mov
pop
and
xchg
test
lea
cltd
test
inc
adc
push
lods
add
test
pop
out
stos
shr
mov
cwtl
jae
aam
addr16
fisubrs
push
mov
lods
xchg
mov
imul
cltd
and
sbb
insl
adc
stos
and
ret
dec
xchg
jecxz
and
jecxz
xorb
in
or
dec
pop
imul
mov
subb
xlat
cmp
dec
dec
movsb
mov
sub
jbe
or
ret
aam
iret
rol
bound
jmp
test
sarl
xchg
push
mov
cmp
jp
add
in
pushf
ss
cmp
mov
inc
das
add
cmpsl
push
xor
mov
adc
jns
adcb
es
pop
adc
int
in
mov
sbb
js
loop
fs
push
outsl
lret
loope
jmp
in
outsl
test
mov
and
push
mov
fcoms
repz
mov
jmp
cld
lcall
sarl
mov
sbb
scas
mov
inc
cmp
outsl
mov
aas
je
inc
mov
mov
lcall
gs
xor
sbb
xchg
inc
orb
jno
lods
mov
test
fxtract
pop
cmp
add
shlb
dec
jecxz
test
ja
pushf
mov
fwait
sub
cli
and
lret
push
lcall
popa
sub
out
push
test
mov
push
jge
test
add
and
pop
outsb
incb
sub
xor
rcrl
in
sub
shrb
sbb
ds
scas
test
into
mov
ret
adc
int3
scas
test
pop
in
insb
add
push
adc
ror
loope
push
pop
mov
lock
lcall
roll
xor
sub
adc
sub
inc
stc
mov
dec
jne
push
xor
push
mov
xchg
add
jne
loopne
pop
jno
int3
rolb
mov
in
call
cld
ret
jb
or
jns
cmpb
daa
pop
dec
sbb
push
leave
outsl
jecxz
test
pop
popa
mov
lahf
ss
fbld
push
inc
fisttpl
lods
bound
pop
outsb
aas
push
mov
inc
cli
lea
add
clc
xor
mov
push
cmpsl
out
or
shrl
jge
test
dec
into
sub
frstor
rorl
adc
inc
push
push
insb
or
lret
outsl
gs
dec
lds
icebp
mov
loopne
xchg
xchg
lods
stos
sti
jmp
mov
fsin
not
imul
jl
mov
inc
adc
jb
loop
jmp
xchg
popa
dec
mov
in
sub
xchg
lcall
imul
insb
add
lret
cmp
mov
popa
push
test
xchg
and
xchg
imul
cmc
lea
cmpb
lock
jmp
xor
mov
cmpsb
inc
sbb
xchg
pop
or
sbb
xor
mov
mov
add
stos
leave
int3
xorb
mov
xchg
dec
stc
fidivrl
in
popf
lea
xchg
mov
jge
in
cmpsl
fdivp
fmuls
xchg
sub
mov
dec
in
mov
loope
icebp
lret
jae
add
outsb
das
mov
shrl
into
gs
mov
or
arpl
aam
adc
mov
shlb
les
push
lret
dec
loop
sbbb
pop
mov
add
clc
mov
mov
push
das
pop
push
sti
or
lahf
and
inc
xor
push
mov
lea
pop
repnz
dec
or
mov
cmpsb
pop
dec
or
add
xchg
cmpsl
mov
mov
ret
add
bound
and
xchg
pop
cmp
and
jo
jg
push
es
mov
insl
test
inc
jmp
js
and
push
mov
pop
fldt
out
inc
pop
sbb
mov
clc
lret
movsl
cmp
inc
gs
push
test
movsl
cmpb
jg
testb
mov
nop
rcrb
int
mov
xchg
in
movb
cmp
mov
xor
or
inc
lds
xchg
lret
lahf
sub
add
cmp
jle
ret
dec
pop
xor
mov
inc
push
adc
jno
movsl
lret
sti
add
mov
or
insl
dec
cmpsb
sahf
lods
test
add
push
xor
and
icebp
xchg
sub
mov
cmpsb
mov
lret
leave
add
mov
stos
mov
push
lahf
loope
xor
inc
inc
test
fs
mov
loop
or
sbb
mov
or
inc
aam
mov
mov
cs
sbb
add
pop
dec
repnz
adc
xchg
pop
hlt
push
fildll
sahf
push
jno
ret
movlps
ja
js
call
mov
mov
mov
mov
xchg
sarl
and
loop
pop
rcrl
mov
mov
mov
repz
push
or
xlat
sti
lods
sahf
pop
and
dec
and
mov
xchg
jmp
aam
subl
mov
pop
lret
mov
jne
ret
or
mov
jmp
lret
mov
adc
xor
cs
je
inc
pop
in
addr16
scas
aad
inc
jns
dec
jg
jge
repnz
add
dec
mov
dec
or
fldl
pop
push
fcompl
xchg
aad
or
jo
sbb
mov
and
ljmp
pop
adc
sub
test
out
repnz
nop
daa
cmp
jecxz
cmp
fisubs
sarw
fcompl
out
and
jne
mov
mov
fwait
imul
or
push
mov
cli
aam
shrb
shlb
push
repnz
fistps
mov
sub
pop
stos
pop
ds
repnz
in
aad
sub
mov
xor
mov
data16
fsts
mov
jb
push
adc
add
dec
sarl
pop
mov
rcll
pop
fiaddl
sub
jecxz
scas
adc
cmpl
inc
pop
aad
ss
fs
subl
push
mov
or
sub
inc
xor
insb
pop
out
sbb
xor
imul
adc
je
xchg
into
mov
and
out
push
jb
mov
scas
std
xchg
xchg
jg
xchg
test
pop
iret
jbe
add
jo
mov
dec
sbb
xchg
daa
cmp
jp
dec
addl
insl
notb
imul
fcoms
lret
push
insb
mov
mov
lcall
mov
push
fistps
and
movsl
cmp
xchg
xor
adc
and
fistl
mov
xchg
adc
ret
mov
xor
stos
shr
cmp
cmc
neg
inc
cmp
rorb
shrb
mov
add
js
sahf
outsb
pushf
in
xchg
outsb
add
out
push
mov
imul
lock
pop
mov
lret
or
dec
add
mov
add
in
push
nop
push
clc
movsl
andb
sub
hlt
test
mov
stos
in
clc
mov
mov
dec
xchg
loop
movsb
lret
mov
or
xchg
divl
cmp
adc
and
dec
sub
xor
jae
hlt
mov
mov
adc
int3
aas
nop
pop
stos
data16
adc
mov
std
xchg
push
mov
out
jl
imull
lea
lret
cmpsl
clc
in
loope
inc
lock
stos
rolb
inc
ror
fnstcw
jmp
sbb
icebp
neg
sbb
push
ja
out
leave
xor
jo
mov
sbb
or
sbb
inc
outsl
popa
xor
pop
xchg
push
or
in
fadd
test
pop
dec
lcall
add
leave
xchg
popf
ficoms
inc
mov
push
jmp
cld
int
cmpsl
mov
int3
dec
leave
mov
les
sbb
in
pop
in
mov
mov
push
imul
loop
dec
fwait
mov
xchg
loopne
sub
mov
in
outsb
push
jne
insl
testb
enter
es
incl
and
pop
push
in
std
adc
cmpsl
imul
push
push
ret
mov
sub
cmp
into
push
xchg
dec
rcrb
xor
imul
clc
or
aam
orb
mov
cs
cli
fwait
mov
cwtl
adc
insl
mov
cwtl
dec
xor
jno
jp,pt
bound
xor
add
addl
gs
pop
xchg
add
addr16
pop
pop
mov
xchg
movl
jno
dec
movsb
lea
xor
mov
mov
and
adc
pop
mov
push
sti
sub
sbb
and
in
test
pop
repz
lret
cld
loop
mov
lret
cmp
sub
mov
mov
adc
xchg
cmp
jecxz
aam
mov
mov
lret
sbb
adc
cmp
add
sahf
out
jge
sbb
insb
sbb
inc
mov
pop
cmc
sbb
and
subb
ss
or
aad
orb
cmpsl
sbb
mov
or
lahf
sub
and
repnz
repnz
sub
mov
inc
scas
push
lods
out
sahf
cmpl
fmuls
sti
pop
popf
insb
inc
xorb
dec
pop
test
std
lods
ret
sbb
sti
jns
nop
mov
dec
mov
repz
les
cmp
inc
enter
xchg
pop
fnsave
mov
fists
out
sbb
mov
mov
lea
and
std
adc
leave
into
jnp
daa
lods
lahf
dec
fwait
dec
push
or
fs
enter
imul
mov
rclb
push
fcmovu
ret
aam
gs
arpl
out
mov
xor
mov
mov
xor
jbe
mov
sbb
popa
fsubrl
rclb
or
push
call
lds
and
lahf
pop
mov
nop
xchg
aas
into
sahf
mov
push
in
call
imul
xchg
sub
jb
out
add
scas
adc
push
scas
cmpsl
push
or
sbb
insb
scas
mov
dec
loope
pusha
daa
mov
mov
xchg
int
je
sti
es
adc
mov
push
rolb
cmpsb
push
add
sbb
les
addb
lea
daa
mov
inc
jp
cmc
js
cmpsb
aas
push
call
add
mov
int3
mov
icebp
into
lds
pcmpgtw
cmpsb
les
jno
mov
inc
cwtl
inc
int3
cwtl
loopne
sub
pop
sar
in
and
cmp
pop
add
xchg
pop
inc
loop
xorl
stos
jmp
jae
add
gs
inc
mov
dec
adc
test
aaa
xchg
mov
pop
mov
pop
push
add
ljmp
inc
out
addb
leave
and
xor
dec
fdivrs
js
lock
gs
mov
jbe
lods
scas
lea
cmp
test
cmp
dec
jnp
pop
lods
imul
and
mov
xchg
add
outsl
inc
ret
mov
repnz
ss
int
jne
out
and
mov
loope
dec
xor
jnp
jo
push
das
fwait
cwtl
je
mov
adc
in
and
add
mov
subl
xchg
mov
jge
mov
cmp
pop
xor
sub
and
or
push
xchg
cmp
dec
inc
mov
jle
aaa
sub
xchg
and
jmp
je
dec
or
lods
stos
loopne
mov
mov
mov
dec
adc
xchg
xchg
fbstp
xchg
pop
jl
mov
adc
ss
push
xchg
cmpsb
out
xchg
mov
push
cmp
outsl
orl
mov
add
subb
iret
xor
xchg
jbe
xchg
cs
jle
dec
popf
push
mov
mov
int3
testl
jno
imul
gs
xchg
cmp
add
push
out
push
dec
test
push
fldt
or
stos
lods
inc
popf
jp
mov
add
test
movsb
cmp
arpl
add
hlt
push
sub
daa
pop
inc
push
popf
inc
std
add
dec
pop
jmp
movsl
call
inc
ret
cmc
pop
arpl
sub
lcall
pop
mov
or
add
push
bound
mov
jl
xor
dec
popf
cli
cmp
insl
mov
outsb
inc
fisttpl
sub
push
fnsave
xchg
sub
cwtl
enter
mov
mov
lret
cld
mov
shll
out
pop
subl
mov
fs
and
push
out
cmp
sbbb
add
xor
pop
jb
inc
std
xchg
fs
sub
in
jmp
vmovd
push
out
aas
cwtl
testb
mov
insb
xchg
mov
hlt
ds
ss
enter
aam
dec
pop
mov
int
cmc
mov
jmp
ljmp
std
ret
fsubrs
push
shlb
add
dec
dec
xchg
loopne,pn
adc
add
aas
mov
ret
shl
and
cld
xchg
loop
lock
aaa
sahf
call
es
jmp
test
or
movsb
loopne
pop
call
push
repnz
jo
jecxz
icebp
inc
cli
inc
in
das
popa
mov
inc
fwait
aas
out
lret
mov
add
mov
pop
sti
cwtl
mov
imul
jl
idivl
mov
pop
add
dec
mov
sub
cmpb
repz
enter
jmpw
das
inc
cmp
fwait
pop
scas
ja
push
jge
and
test
mov
gs
add
jnp
sbb
mov
out
mov
dec
ret
rclb
dec
sub
push
popf
outsl
push
iret
push
sahf
lea
movsl
adcb
push
movsb
in
fwait
cli
sbb
xchg
addr16
sbb
dec
mov
xor
fscale
cmpxchg
or
xlat
test
push
cltd
cmp
mov
daa
jae
cmp
das
dec
mov
jo
pusha
sub
xor
arpl
mov
add
xorb
sbb
inc
pop
movsl
test
cld
xchg
lea
sbb
cmp
push
sarl
dec
rcrl
dec
mov
pop
fdivrl
push
out
ds
outsl
sub
gs
ss
xchg
mov
addr16
aas
addr16
fistps
ret
add
push
leave
es
mov
push
fwait
mov
xchg
call
xchg
cmp
dec
and
jl
inc
bound
loop
mov
add
hlt
repz
dec
rorl
and
aas
test
jns
sbbb
xor
cmp
adc
inc
sub
jno
push
cmovs
shll
out
insb
lret
mov
movsb
mov
je
pop
and
mov
mov
cmp
xor
adc
mov
sub
mov
add
lods
sbb
and
idivb
inc
push
add
xor
xor
dec
in
jl
jg
mov
mov
jne
and
pop
and
pop
cmp
cli
adc
daa
outsb
div
dec
sarl
je
sbb
pop
repnz
cmp
rcrb
fcoms
gs
bound
fxam
mov
mov
push
or
out
push
aam
or
push
mov
les
sub
clc
repz
not
scas
dec
mov
pop
cmp
or
loopne
pop
filds
lods
and
xor
xchg
pusha
adc
sbb
xchg
aam
popf
in
add
inc
and
pop
xchg
lahf
push
or
idivb
aad
std
insb
popf
dec
cmc
pop
jge
add
cwtl
sub
sti
inc
and
push
jns
sub
jne
cltd
xor
jg
shll
jge
sbb
and
jae
adc
push
adc
pop
sahf
data16
lret
call
repz
or
add
lock
push
fcomps
cld
hlt
push
mov
movsl
hlt
or
mov
push
ficomps
mov
sahf
imulb
incb
test
pop
test
push
out
pop
loopne
jle
sbb
js
sarl
nop
push
addb
cld
mov
mov
arpl
flds
or
aam
dec
rcr
out
cs
jae
shrl
xchg
rolb
mov
mov
out
clc
adc
enter
dec
sub
mov
scas
lods
pusha
add
add
das
xor
mov
add
jb
lret
aas
icebp
test
and
fisubrl
inc
mov
stc
les
cmpsb
in
mov
test
lahf
xor
data16
mov
ret
jg
jns
adc
inc
mov
pushf
scas
dec
push
fwait
push
jl
into
stos
mov
aas
lret
add
les
mov
jo
mov
pop
fildl
popl
int
add
sub
xor
sbb
cmp
add
fistl
push
dec
shrb
int
adc
inc
lret
mov
lds
add
jno
mov
cmpl
in
stos
jmp
mov
cmp
xlat
fwait
cli
test
pop
jne
sbbl
imul
lods
mov
outsl
push
mov
xlat
cmp
leave
mov
fisttpll
xchg
and
push
leave
push
shll
pop
xchg
xor
or
mov
adcb
insl
aad
adc
in
call
mov
push
push
push
repnz
pop
pop
sti
lods
sub
and
cld
cltd
adc
jae
adc
cli
xor
test
push
jns
pop
stos
lock
dec
call
icebp
push
cld
lock
aad
ja
enter
cld
insb
lock
cmpsl
jno
xchg
rol
fstl
int
fistpl
xchg
xor
add
in
push
popf
hlt
jmp
dec
fcomps
xor
lods
nop
int
and
pop
out
dec
xor
leave
push
sub
mov
ss
lret
int3
dec
jae
imul
inc
cltd
bound
sahf
or
push
data16
cmp
ror
adc
push
jge
inc
xchg
cs
cwtl
jmp
stos
mov
inc
and
pop
test
add
push
leave
movsl
inc
fstps
mov
nop
loopne
fwait
push
cwtl
shl
stc
icebp
pop
mov
xor
sbb
push
adc
push
loope
pop
lret
pushf
or
xchg
call
and
sub
and
das
and
aaa
mov
cmp
popl
sub
mov
iret
cli
cmpsb
int
fcomps
cli
imul
lret
mov
pop
adc
pusha
mov
xor
out
sarb
mov
xchg
xor
cs
mov
cmp
mov
les
cmpsb
ja
sbb
int3
mov
imulb
cmp
adcl
dec
push
cld
shrl
insb
jge
jp
push
lahf
or
test
scas
fs
jbe
adc
push
mov
lods
subl
adc
mov
test
push
mull
mov
and
and
push
cmp
mov
cwtl
insl
stc
adc
mov
cld
cmp
ljmp
pop
mov
adc
jecxz
testb
dec
lret
or
dec
popa
scas
pop
pop
pop
dec
popa
sarb
mov
int3
jmp
pop
add
cmp
out
xor
jae
xchg
lods
mov
pop
cmpps
shlb
fstpl
and
xorb
or
aad
push
lret
mov
scas
jns
sub
pop
lock
scas
ss
lds
cs
xchg
scas
into
rcll
fiadds
ss
test
repnz
jbe
xor
outsl
fdivs
sti
dec
movsb
pop
xchg
imul
inc
mov
iret
adc
jno
pushf
pop
add
mov
mov
lods
sbb
gs
int
stos
ret
loope
jecxz
cwtl
dec
mov
jb
js
cmp
ret
inc
ljmp
mov
mov
jnp
sub
xchg
or
xchg
push
mov
pop
mov
stos
rol
and
test
or
loope
pop
adc
adc
or
and
mov
adc
mov
in
xor
insl
mov
je
and
mov
pop
cmpsl
fsubl
repnz
cwtl
out
jl
push
cmp
cltd
outsb
fdivrs
adcb
shrl
fbstp
fldl
es
sbb
xchg
adc
lea
dec
cltd
xchg
jg
lock
lcall
mov
int3
test
dec
or
loope
inc
icebp
dec
and
jb
push
add
mov
mov
adc
adc
or
or
sarl
inc
div
rorl
mov
outsb
mov
imul
xchg
and
loopne
xchg
lahf
test
rcll
pop
idiv
scas
ficoms
add
inc
add
push
in
xchg
mov
ret
inc
mov
mov
call
lea
addr16
daa
lea
push
lcall
hlt
addr16
in
subl
xor
fsubrp
test
ljmp
xor
into
andl
cmp
les
mov
sahf
imul
fsubs
xchg
mov
cmp
orb
cmp
cmc
cs
outsl
push
insl
ret
test
jb
in
loopne
push
push
cli
xchg
xchg
sbb
je
aaa
gs
test
xor
mov
test
inc
push
sbb
push
stc
cmp
push
jge
xor
es
iret
pop
push
cmp
aaa
cmp
adc
sub
xchg
inc
cmpsb
in
vmovmskpd
push
sbb
jns
cmpsl
dec
xor
fsubs
lods
push
sub
mov
mov
pop
data16
dec
hlt
js
aas
xor
mov
mov
dec
loop
push
sahf
cmp
push
mov
sbb
inc
fsubl
ljmp
jb
xor
js
dec
cmp
pusha
add
jne
in
pop
decb
pop
mov
mov
jne
pop
sbb
jo
jp
jnp
mov
fucom
arpl
lock
stos
scas
int3
cld
imul
test
sar
adc
push
test
popa
pop
aad
jae
leave
in
aaa
jb
inc
add
test
aad
mov
sbb
int3
push
mov
cmpb
scas
mov
mov
rol
in
testb
in
add
enter
add
dec
lahf
mov
mov
mov
pop
sbb
jle
loop
pop
cmc
push
add
adc
arpl
mov
jb
imul
or
xchg
gs
dec
arpl
or
cld
or
add
sbb
xchg
out
fcmovb
lods
inc
pminub
mov
pop
and
mov
sarl
in
push
mov
js
int3
sbbl
push
scas
stc
or
pushf
sti
adc
aam
xor
data16
xchg
addr16
stc
leave
or
jne
mov
out
dec
push
or
lret
out
inc
sbb
sbb
stc
jle
jno
pop
xchg
inc
mov
sbb
xor
fimull
cmp
xchg
sti
mov
push
xorb
xchg
imul
shrb
and
sahf
out
mov
inc
ljmp
mov
fisubrs
pop
inc
fbld
test
mov
int3
lret
lcall
dec
or
loop
xchg
sub
push
cmpsl
and
push
or
jg
and
cmp
xchg
mov
inc
stc
nop
je
sbb
das
and
sub
in
jge
mov
loopne
cs
sub
fisttpl
jmp
daa
mov
int3
scas
shll
in
jge
gs
xchg
or
jge
sub
movsl
jp
pop
xchg
mov
mov
push
lods
sbb
or
xlat
inc
stos
mov
xor
sub
repz
in
scas
dec
cmp
nop
mulb
out
sub
movsb
xchg
add
sub
sub
xor
jbe
pop
cmp
icebp
sahf
dec
or
cmpsb
outsb
sub
das
scas
scas
push
lds
pop
loop
or
ss
shr
mov
jmp
inc
jno
pop
push
sub
call
xor
insb
push
mov
bnd
dec
mov
push
adc
mov
add
dec
xor
int3
adcl
and
jl
mov
lds
ss
mov
cltd
pop
rorb
ret
jb
push
rol
das
sbb
xchg
rorb
push
lods
add
scas
xor
lahf
iret
inc
fisttpll
stc
pop
sbb
pop
or
add
cmp
dec
movsb
aas
aas
jae
mov
push
stos
inc
pop
mov
xchg
enter
inc
mov
dec
in
iret
dec
and
or
pusha
pop
mov
push
in
out
sbb
arpl
lcall
mov
mov
xlat
lods
cmp
jg
aad
mov
jns
lods
inc
and
jge
xchg
pop
fisubrs
gs
jle
mov
int3
lahf
testl
lods
pop
pop
out
sbb
jbe
insb
jae
mov
stos
adc
jecxz
das
mov
arpl
aam
lret
bound
and
add
arpl
je
push
mov
mov
outsb
jle
sub
nop
dec
jo
fprem1
rorb
add
or
mov
rolb
shld
lock
jne
ret
movsl
aam
daa
xchg
adc
push
scas
pop
dec
cmp
mov
ret
sbb
js
fwait
sub
adc
jnp
mov
ss
popa
and
adc
mov
shll
dec
pop
xchg
push
push
jmp
xchg
add
cmpsb
in
clc
xor
mov
adc
fistpll
sbb
ret
cmc
ret
test
and
in
fwait
jge
pop
stos
fcomps
add
sbb
fbstp
mov
jno
add
push
xor
rcl
sbb
mov
dec
and
outsb
jle
push
mov
in
call
in
lods
scas
pop
movsl
mov
sub
jle
adc
add
outsb
and
cli
movsb
lods
dec
sub
jl
inc
dec
shrl
test
xchg
loop
movsl
adc
stos
and
and
and
sbb
inc
lcall
cmp
push
cmp
cmp
outsb
cmc
les
sub
scas
mov
dec
lret
rol
jl
insl
in
push
out
push
xchg
pop
or
popa
pop
mov
orl
das
inc
inc
sub
push
xchg
popa
cmpsl
aad
mov
pop
aam
mov
inc
fidivl
inc
mov
fs
mov
and
cmp
inc
jl
imulb
mov
sub
daa
repz
jg
das
hlt
addr16
shll
add
jg
pushf
jmp
cwtl
pop
testl
sub
xor
insl
gs
dec
add
mov
fbstp
inc
insl
mov
pop
fs
add
pop
scas
cmp
xor
ss
mov
cmp
pop
mov
ljmp
jp
jp
inc
cmpsb
adcb
mov
call
mov
pushf
nop
xchg
sti
mov
push
lds
ficoms
scas
sub
sarb
sbb
scas
push
pop
fucomip
or
push
call
jg
call
dec
inc
rcr
jg
leave
pusha
and
adc
lods
lahf
jne
fmull
ret
cmpsb
std
lea
add
test
dec
ss
pop
int
jbe
xchg
scas
xchg
cmc
xchg
or
push
lods
mov
xlat
sub
ja
hlt
mov
mov
into
lcall
mov
mov
add
mov
leave
xchg
sub
xchg
fbstp
sbb
jne
mov
sahf
or
adc
mov
sub
sbb
mov
pop
ret
fisttps
inc
xlat
mov
fsubrl
fsubl
push
pop
push
push
in
mov
fdivl
outsb
addl
mov
xchg
inc
inc
fbstp
adc
out
leave
jge
xchg
scas
mov
sbb
pop
mov
das
push
mov
nop
mov
mov
pop
testb
hlt
pop
adc
leave
leave
test
dec
stos
push
pushf
mov
sbb
add
shll
and
jp
jmp
lods
inc
mov
push
lcall
stos
call
scas
jbe
xor
xchg
fstps
incb
into
sahf
repnz
in
fidivrs
orl
xor
mov
dec
pop
fidivl
mov
push
pop
enter
mov
lahf
mov
shlb
mov
sub
ret
pop
call
inc
loope
jb
shl
daa
add
xor
mov
adc
mov
ret
push
mov
lds
pop
pop
add
cmp
mov
add
adc
jl
mov
push
dec
jecxz
pop
adc
pop
sbb
dec
bnd
jb
dec
and
xchg
jg
jne
jmp
sarb
cltd
int3
arpl
push
jmp
adc
mov
loop
dec
lcall
adc
mov
mov
xor
dec
jmp
int
cld
lcall
shrb
mov
add
mov
out
xchg
pusha
mulb
out
jno
adc
sub
or
inc
mov
dec
scas
outsb
inc
repz
mov
sbb
adc
leave
and
adc
test
movl
dec
lret
fsubrs
sbb
sbb
aas
jo
in
inc
movsl
stos
out
aam
dec
dec
xor
outsl
call
mov
push
push
fmull
jl
cmp
sar
insb
add
sti
mov
pop
hlt
mov
xchg
inc
dec
push
adc
mov
jae
outsl
cwtl
lcall
in
pop
xchg
pop
and
mov
pop
lret
or
xor
addr16
or
mov
add
or
orb
push
mov
adc
shrb
leave
jp
push
adc
or
loop
add
push
xchg
inc
es
stc
and
out
movsl
dec
pop
xchg
mov
xor
xchg
stos
lds
bnd
add
pop
cwtl
sub
adcl
imul
push
fwait
repz
xchg
leave
into
dec
es
dec
fdivrs
jmp
mov
xchg
mov
shl
pop
leave
addr16
movsl
mov
xlat
sahf
repz
iret
shrb
push
add
fsubs
rcr
lea
mov
xchg
sub
or
jo
movaps
ss
push
inc
and
sub
and
ja
nop
xchg
pop
push
jg
mov
leave
jmp
clc
outsb
xor
jmp
ja
add
mov
filds
push
hlt
adc
imul
xor
pushf
arpl
jle
sub
cs
in
movsl
xchg
rcll
fnstcw
xor
imul
icebp
in
dec
fnstsw
insb
or
cmp
sub
mov
dec
out
insl
mov
lahf
out
xchg
xor
rcl
mov
mov
xchg
loope
add
aam
cmp
mov
adc
imul
in
jg
decb
test
ds
movsb
mov
xor
out
add
jp
lods
subl
jae
cmp
iret
pop
add
push
ljmp
mov
sahf
xor
ret
adc
xchg
sub
dec
mov
lock
aad
movb
pop
mov
mov
dec
or
mov
sub
jnp
cmp
fiadds
push
pop
and
imul
push
mov
jg
mov
xchg
rcrb
add
outsb
outsb
das
addr16
and
pop
repz
mov
push
mov
imul
jbe
ss
sbb
jge
jge
jl
call
mov
ljmp
push
add
scas
jl
int3
lods
iret
jl
add
rorb
pop
lcall
fwait
mov
mov
adc
dec
movsl
icebp
in
in
push
enter
leave
data16
mov
cmp
sbbl
xlat
push
loop
add
fdiv
sub
sub
inc
in
scas
xor
loope
call
imul
popf
add
jnp
daa
sub
jp
jp
fidivl
xlat
outsb
adc
cltd
jne
lret
jo
dec
sbb
cmp
cmp
je
movsl
mov
out
icebp
rcr
mov
or
xchg
add
sbb
mov
int3
lret
fdivl
jecxz
mov
jge
daa
repz
outsl
sbbl
add
mov
ljmp
jae
mov
pop
cmp
mov
mov
xor
jge
das
sbb
ror
mov
xor
xor
mov
dec
loope
insb
rol
fs
ds
scas
aaa
sbb
in
xchg
jl
lahf
nop
sbb
add
mov
out
and
sbb
stc
and
mov
loope
adc
inc
sbb
dec
sbb
xchg
out
or
adc
imul
jmp
pop
cmp
mov
dec
dec
scas
adc
loope
out
adc
and
pop
xor
dec
loope
pop
cmpsb
sub
mov
test
mov
inc
or
lea
call
sti
nop
hlt
sbbl
repnz
out
test
movsbl
clc
mov
aam
addr16
xchg
cmp
loop
pop
mov
mov
inc
rolb
add
mov
in
mov
cwtl
or
stc
adc
cltd
push
and
push
cwtl
xchg
in
nop
or
cltd
cmp
pop
sti
es
pop
and
jl
lods
ss
push
mov
dec
xor
mov
mov
jae
push
add
fnop
stos
hlt
nop
dec
loop
pop
mov
pavgw
dec
cmp
inc
pop
sub
fistl
push
xchg
or
lods
lock
adc
aaa
sbb
pop
stos
loopne
add
int
cmp
fnsave
popl
loop
cmp
mov
cmp
in
cmp
ds
pop
pop
stc
test
idivl
jnp
sti
xlat
sbb
xor
lods
or
push
xor
pop
leave
lds
jns
pusha
out
xrelease
sbb
sub
cs
cmp
stos
xor
dec
xlat
cmpsb
sbb
ficoml
sbb
adc
popa
clc
fisubrs
jo
jg
imul
pop
popf
cmp
insl
lahf
dec
aas
inc
fs
rorl
jns
popf
sub
inc
sarb
jb
jmp
leave
pop
mov
inc
xchg
sbb
in
repnz
loop
push
mov
sbb
shr
push
leave
dec
ljmp
lods
lock
outsl
and
lea
out
mov
xchg
mov
and
cwtl
push
int3
fdiv
fdiv
adc
ret
mov
xor
and
fstpl
lea
movsb
jg
or
dec
push
test
pushf
mov
xchg
pop
xor
add
cmp
sahf
rclb
xchg
adc
mov
mov
out
push
mov
jno
add
movsl
cmpsl
sbb
push
adc
dec
mov
bound
dec
arpl
lcall
sbb
push
mov
test
pop
pop
icebp
jp
mov
and
jns
inc
inc
stc
andb
daa
js
or
mov
add
loopne
xor
loop
pop
mov
mov
xchg
pop
cmp
mov
cltd
out
filds
mov
loope
scas
adc
lahf
imul
das
popf
push
sbb
and
add
loop
jns
test
mov
int
and
ret
pop
pop
insb
jl
mov
mov
jne
sbb
inc
add
cli
mov
cli
or
fisttpl
xor
xchg
scas
add
pop
mov
cmp
mov
inc
mov
insl
inc
jnp
xor
loop
mov
dec
jmp
mov
xor
cli
jne
pop
aas
cs
or
fidivrs
push
jecxz
movsb
pop
mov
dec
add
add
push
jb
xchg
mov
push
roll
and
pop
sub
jnp
ret
out
int3
jae
mov
loopne
flds
clc
cmp
arpl
insl
data16
lcall
je
push
dec
mov
adc
adc
dec
or
xchg
addr16
xor
cld
pop
pop
stc
xlat
in
mov
cmpl
jg
scas
ljmp
xchg
mov
jle
out
jg
dec
mov
ret
dec
pop
repnz
lcall
cltd
or
jecxz
inc
insb
popa
test
roll
jp
lcall
inc
pop
xor
jnp
clc
cli
push
je,pt
outsb
leave
lods
adc
adc
sub
or
pusha
mov
dec
out
inc
pop
inc
push
jb
add
jo
imul
fsubrs
fmulp
mov
push
sub
push
sarb
pop
hlt
outsl
mov
outsl
sub
jl
mov
loop
mov
aaa
into
in
push
lock
movsb
or
push
dec
test
pop
sti
repz
mov
and
sub
dec
inc
cld
icebp
aam
scas
add
int
orl
cmpsl
lret
jae
stos
push
mov
mov
cmp
xchg
fcomps
pop
mov
push
dec
std
arpl
mov
ret
dec
pusha
movsl
adc
mov
pop
lret
mov
xchg
out
pushf
aam
cmp
sub
adc
inc
test
inc
sub
aam
cmc
insb
push
or
sbbl
inc
lahf
push
std
addr16
cwtl
sbb
cmpsl
or
sub
out
and
pusha
shl
and
mov
push
ljmp
jno
mov
jb
es
or
dec
cmp
jmp
mov
pop
in
sub
push
sub
add
xor
cmp
fnstcw
pop
pop
shll
ret
inc
sahf
xor
test
mov
or
mov
ss
adc
hlt
bound
and
lock
ja
popl
mov
sub
xchg
adc
in
xor
add
mov
icebp
xchg
inc
dec
out
mov
pop
loopne
xchg
imul
pop
in
das
dec
add
add
push
xchg
scas
jne
dec
mov
rol
and
popa
xor
or
jne
stos
sub
repz
sbb
jecxz
or
popa
outsb
arpl
cmp
xorl
and
mov
lea
ret
inc
or
pop
sub
push
stos
xlat
mov
mov
add
ja
add
out
pop
add
mov
ljmp
jno
xor
sti
jo
and
xchg
xor
xchg
lds
pop
cmpsb
cld
and
mov
adc
adc
push
shr
addb
jns
or
xchg
test
push
pop
rcrb
aam
and
inc
or
pop
repnz
jp
cmp
push
cmpsb
jns
push
addr16
in
lea
or
jb
push
mov
ja
scas
mov
mov
mov
mov
xor
in
fidivrs
lahf
and
mov
pusha
mov
cmpsb
arpl
adc
mov
pop
sub
rcrb
lds
pop
repnz
test
sub
lahf
pop
inc
xchg
push
mov
insl
loop
outsb
enter
cld
mov
sub
mov
xchg
mov
jl
inc
xor
bound
shlb
sub
lods
xchg
add
pusha
mov
push
les
shlb
iret
or
loop
sub
push
cmp
push
jmp
push
cmc
jmp
pop
add
pushl
pop
and
cmc
add
je
or
loopne
aaa
jmp
lds
lret
and
into
stos
js
call
lret
popa
push
addr16
lret
mov
cmp
mov
push
jbe
out
bswap
mov
aas
adc
out
inc
push
xchg
pop
jne
enter
adc
mov
pop
xor
ret
stos
inc
cmc
aaa
inc
pushf
gs
jb
sub
pop
pop
or
int
push
jne
cli
dec
or
clc
mov
imul
mov
sub
scas
sub
push
xor
cltd
insb
mov
mov
das
add
push
jmp
cmp
loopne
push
out
hlt
hlt
add
aaa
ss
push
xor
sub
incb
imul
jno
jne
in
shl
or
xor
adc
insb
add
cli
iret
addb
shlb
fcomps
bound
in
sti
in
insb
or
cmp
cmp
sub
popf
clc
nop
jp
fistpl
enter
jp
inc
fstps
pop
insb
out
add
xchg
mov
fs
push
inc
pop
movsb
repnz
jg
inc
data16
jno
adc
xlat
outsl
inc
iret
fnsave
pop
pop
fldenv
mov
mov
adc
jp
bound
push
test
mov
adc
rcll
push
testl
test
push
jno
mov
cs
addr16
cmc
fcoms
add
subl
je
mov
cmp
xchg
xchg
or
and
test
cmp
stos
sti
xchg
pop
stos
fwait
nop
dec
add
mov
xor
lea
ds
outsl
jae
mov
sbb
pop
inc
lcall
fwait
sbb
pop
xlat
mov
xchg
fnstenv
cmpsb
das
inc
mov
xchg
pop
mov
ljmp
test
movq
xchg
jo
jae
pop
faddl
pusha
unpckhps
loope
adcb
or
call
lcall
shlb
jp
icebp
xchg
fbstp
inc
pusha
cmp
fdivl
test
int
ja
mov
bound
jge
hlt
js
ret
pop
movsl
cwtl
pusha
or
xchg
addr16
push
or
movsb
cmp
pop
jbe
xchg
out
inc
add
insb
daa
sarb
arpl
cmp
push
repz
jmp
jmp
out
sbb
inc
in
mov
cwtl
popf
ret
sarb
mov
xlat
jb
sub
faddl
xchg
inc
pop
leave
mov
cmc
ret
sub
jecxz
cmp
mov
cmp
cmp
xchg
ret
or
dec
xchg
test
add
adc
adcb
inc
fistps
gs
sete
dec
std
push
orl
mov
jle
scas
ret
pushf
sahf
js
fwait
scas
repnz
adc
enter
and
cmpsl
iret
fists
xorl
dec
out
xchg
test
repnz
test
jns
adc
out
pop
sbb
cmp
test
fs
imul
fidivrs
test
fistps
mov
in
sub
fists
sti
test
sbb
into
ficoms
fsubs
pop
xchg
lds
fnstenv
push
inc
add
into
jg
roll
aam
subl
sbb
jecxz
and
stc
mov
inc
mov
mov
or
push
clc
and
mov
jecxz
mov
lret
nop
data16
push
sbb
sahf
jo
subps
sbb
pop
mov
mov
rcrl
sub
mov
adc
fdivrs
pop
jg
dec
jle
mov
outsl
sbb
pop
cmpsb
leave
inc
mov
loop
push
gs
jge
jae
shll
std
xchg
outsb
adc
xor
mov
aad
popa
aad
ja
out
pop
mov
insb
and
inc
rep
xor
push
repnz
xor
cwtl
popa
xor
scas
dec
inc
xchg
mov
imul
dec
clc
bound
imul
pop
lret
cli
and
out
inc
mov
mov
jle
sub
cli
cmpl
adc
push
mov
daa
jne
xchg
cmc
dec
mov
add
rorl
and
shll
aam
xor
cmc
shr
addl
in
cltd
and
je
sarb
xchg
fs
loope
out
icebp
inc
loope
lea
jbe
ror
pop
les
fists
cmpsb
in
mov
push
or
mov
sub
rep
je
mov
lock
gs
into
cmpsl
mov
pop
jne
push
push
icebp
xchg
jns
mov
push
push
cwtl
push
mov
into
mov
lods
add
jb
pop
mov
xchg
fdiv
or
pop
das
add
push
or
data16
lock
daa
and
call
jb
xor
sub
xchg
sub
cmp
xchg
sbb
call
adc
repnz
cmp
dec
outsb
adc
xor
push
mov
pop
mov
ret
movsb
inc
dec
dec
sbb
call
xor
jo
mov
dec
mov
adcb
test
shll
out
pushf
popa
push
jbe
mov
mov
jae
sbb
mov
mov
cmc
aaa
pop
adc
cwtl
push
cmp
add
rcrl
iret
jno
stos
outsb
gs
push
lock
outsb
rol
mov
movsl
shl
jo
and
cmpsl
sub
sbb
mov
add
sbb
jb
mulb
std
xchg
pop
lret
add
xor
mov
pop
imulb
mov
mov
mov
xor
repnz
scas
push
imul
iret
or
fwait
xor
int3
mov
fimull
or
sbbl
dec
pop
push
push
lret
mov
or
mov
adc
sub
mov
pushf
jns
and
sub
arpl
dec
mov
cmp
cmp
popf
xchg
inc
cltd
sub
xor
cld
pusha
out
jno
inc
rclb
lcall
jbe
inc
loopne
and
scas
in
jle
lods
xor
xchg
inc
jecxz
pop
addr16
dec
aas
add
das
jb
ds
iret
les
icebp
dec
add
cld
push
cwtl
fbld
into
pop
mov
mov
mov
jl
loope
lret
sub
mov
test
jg
lock
or
or
xchg
or
movsl
xlat
shlb
jbe
insb
daa
xor
push
mov
inc
in
inc
cmp
gs
rorl
push
nop
sub
cld
pusha
ret
mulb
arpl
jge
aam
dec
or
jp
bound
xchg
outsb
sub
jns
fs
pop
and
and
mov
out
sti
int
ss
mov
cmp
js
dec
test
mov
cltd
cmp
push
sbb
dec
fldln2
test
pop
add
lret
test
push
mov
jno
pop
mov
int3
mov
stc
hlt
in
andl
and
les
call
into
mov
cmpsb
in
in
mov
jb
mov
cmp
mov
push
scas
lock
nop
sub
inc
mov
push
push
jns
pop
lods
cs
out
or
adc
clc
sahf
push
or
sbb
inc
cmp
out
ret
sub
mov
inc
or
push
push
inc
push
mov
jle
xchg
push
mov
lods
pop
xchg
out
add
ficoml
int3
in
je
inc
push
shr
mov
push
call
jg
jnp
pop
jae
inc
fildl
xchg
push
loopne
ret
or
pop
sbb
sub
das
ja
mov
inc
inc
mov
dec
movsbl
or
mov
inc
sahf
fisubrs
jns
sub
jae
sbb
imul
mov
arpl
rcrb
xorb
lock
or
mov
arpl
ljmp
sahf
sub
pop
jbe
inc
and
rclb
push
out
add
cmp
push
mov
pushf
inc
fimull
sbb
pop
cmpsb
je
je
in
xchg
shld
add
sbb
and
cmc
popf
sub
cmpsl
fcmove
lcall
in
push
mov
stc
cmp
pop
xor
xchg
outsb
les
pop
insl
mov
jecxz
loop
rcl
pusha
push
sub
ret
sbb
sub
ja
jb
dec
dec
xchg
add
in
pop
sarl
sub
in
lret
mov
ljmp
add
pusha
mov
fdivl
push
test
and
mov
or
cmp
mov
arpl
andl
rorb
and
cmp
push
jmp
jno
jo
sub
cli
add
mov
jmp
mov
sbb
push
jb
adc
js
fdiv
cmp
push
or
xchg
pusha
test
outsl
ds
xchg
icebp
or
and
or
push
pop
xchg
pop
rclb
jae
jbe
adcl
mov
fbstp
jns
inc
xchg
gs
incl
sbbl
test
mov
jo
scas
mov
dec
nop
inc
shrb
mov
repz
hlt
cmp
inc
jbe
sub
xor
ljmp
pop
xchg
mov
jbe
sar
inc
xchg
sub
fildl
push
jecxz
and
pop
xor
test
pop
out
or
inc
sahf
popf
pop
cmc
cmp
inc
push
arpl
shrl
push
insb
popa
clc
popf
inc
shrl
out
aas
and
mov
pop
inc
lea
not
imul
inc
push
test
repnz
ret
jnp
adc
add
dec
dec
and
insb
add
sub
negl
in
xor
xchg
sub
xor
jb
dec
iret
fisttpl
daa
jecxz
xchg
lret
iret
loop
jnp
aaa
lods
adc
imul
dec
mov
pop
aam
mov
sub
mov
ret
in
std
cwtl
jae
cmp
lods
out
inc
aam
popf
stc
push
pop
pop
pop
pop
iret
lea
bound
mov
or
cmp
mov
je
xchg
sbb
dec
and
dec
ror
mov
dec
add
mov
lahf
ffreep
pop
sub
dec
popf
jno
cmp
jmp
xor
into
popa
sbb
jno
pushf
push
lds
jle
jnp
dec
mov
addb
mov
adc
sahf
mov
pop
push
insl
fsubr
jp
loop
cli
jg
dec
mov
add
mov
inc
ffree
popa
mov
je
mov
out
or
aaa
pusha
and
mov
adc
arpl
mov
iret
pop
jb
mov
inc
push
int3
mov
vmovupd
int
xchg
push
in
aaa
adc
lcall
sub
jno
sub
lods
jbe
daa
nop
test
test
lcall
mov
loopne
xor
cmpsb
mov
fmuls
cmp
outsl
clc
xor
pop
pop
jmp
xlat
popl
jo
jmp
es
jg
and
or
inc
xlat
dec
jp
xor
outsl
pop
movsl
mov
push
xchg
jp
das
mov
mov
out
inc
mov
jae
add
mov
push
in
movsb
hlt
mov
xor
je
sbb
lcall
add
xchg
test
pop
frstor
inc
rorl
mov
sti
adc
lds
popf
jno
ljmp
inc
and
xchg
jp
fmul
movsb
jecxz
icebp
arpl
push
insb
out
xchg
jp
bound
jmp
or
push
lods
das
xor
mov
lea
sbb
adc
pop
jne
std
xchg
jno
pusha
fistl
mov
mov
sub
ret
mov
jl
and
fwait
pop
xchg
sti
out
mov
mov
iret
dec
push
pop
sub
imul
fstpt
inc
vsubpd
inc
clc
movsb
divb
mov
insb
mov
xchg
sbb
pop
push
leave
arpl
pop
scas
push
sub
stos
inc
sbb
jae
js
imul
push
or
dec
jb
lahf
or
pushf
ds
pop
mov
mov
iret
fstpl
adc
mov
sbb
xchg
inc
push
push
dec
and
xchg
aaa
in
mov
lds
or
xor
xchg
mov
push
jno
fdivl
pushl
cmp
mov
jne
int
sub
movsl
mov
jnp
add
shlb
lret
in
fwait
mov
cwtl
and
inc
pop
scas
pop
adc
pop
pop
inc
add
cmpsl
out
inc
cmp
xchg
cs
pop
mulb
mov
movsl
xchg
mov
pop
in
cmp
adc
les
test
dec
add
mov
inc
imul
lret
inc
ret
loope
sub
inc
arpl
cmp
add
mov
aam
and
dec
stos
push
call
lea
rcrl
es
jnp
mov
mov
leave
arpl
ds
int
imul
add
and
iret
mov
xchg
pop
sbb
loopne
dec
mov
pop
rclb
adc
scas
sbb
and
jne
es
out
or
lods
inc
sub
inc
ffreep
lret
sbb
dec
leave
jmp
fs
push
movsb
cmp
pop
dec
dec
nop
call
xchg
sub
test
mov
fcoml
sbb
clc
mov
popf
pusha
jecxz
lcall
and
pop
push
outsb
aad
xor
jmp
or
jns
lods
sub
das
dec
or
mov
imul
mov
scas
inc
mov
loope
mov
dec
jmp
sbb
scas
sbb
or
lret
fbld
jne
sbb
fistpl
ds
icebp
enter
stos
roll
jo
stos
bound
sbb
imull
mov
add
jl
ds
mov
jle
dec
scas
push
fidivrs
cli
xchg
cmp
je
pop
sbb
jno
cmp
faddl
xor
jne
xchg
mov
repnz
or
fwait
icebp
inc
icebp
xlat
jp
or
int
orl
adc
pop
or
jns
pushf
shll
scas
divl
outsl
pop
dec
lcall
cli
std
pop
sbb
pop
jge
nop
daa
mov
pop
int
es
les
jge
push
out
adc
push
popf
sbb
cs
popa
clc
mov
adc
in
cmp
in
and
sub
js
xchg
push
dec
add
cmpb
fwait
push
mov
fildll
push
sbb
rcr
ja
or
sub
test
cmc
int3
jmp
lret
mov
xor
mov
stos
xchg
xchg
inc
js
clc
arpl
cwtl
push
adc
lock
dec
fs
xlat
sbb
sub
icebp
cld
adc
insl
jecxz
lahf
push
insl
add
dec
sbb
test
lret
xorb
mov
sahf
jb
xlat
sarl
xchg
ljmp
aaa
ret
mov
int3
hlt
aas
fnstcw
movsl
inc
jge
adc
movsl
xchg
inc
dec
popf
push
pop
push
mov
fcmovnu
jno
subl
cmp
pop
pop
pop
and
test
pusha
jl
es
pop
test
into
hlt
hlt
pusha
sti
es
push
sbbl
adc
loop
mov
xor
jmp
sub
js
mov
dec
insl
cltd
insl
mov
hlt
mov
sbb
cmp
das
cli
repnz
adc
fbstp
xor
jb
int3
inc
push
int3
cmp
push
mov
and
and
push
out
stos
dec
and
adc
frndint
sbb
and
fcompl
jo
cmpsl
mov
cmp
jecxz
outsl
daa
leave
push
cmp
xor
or
int
sbb
and
add
test
pop
inc
cmpsl
dec
pop
pop
add
mov
lock
mov
sub
ja
dec
or
cmpsb
subb
aad
loope
es
or
mov
xchg
add
cs
aad
xchg
pop
mov
cmpsl
cmp
adc
sbb
mov
jmp
pop
filds
loopne
push
adc
fnstcw
bound
pusha
cmpsb
loope
lcall
inc
faddl
mov
jge
fcomps
into
data16
mov
enter
cmp
sub
inc
aad
fidivrl
push
push
into
cmpl
gs
lock
lods
loope
mov
mov
mov
and
pusha
das
repnz
sbb
jno
xchg
ds
sbb
pop
cmp
fiaddl
sub
mov
cmp
es
sub
stos
xchg
loopne
sbb
jae
test
xlat
shlb
aas
inc
stos
mov
mov
out
push
mov
test
mov
mov
sbb
call
inc
aaa
into
or
das
push
jne
or
mov
mov
pop
or
or
or
data16
or
pop
xlat
pop
mov
mov
cmp
jmp
mov
fs
pop
out
ss
and
jae
outsb
jb
jnp
adcb
addr16
and
int3
fbstp
or
aam
jae
lret
scas
aaa
fwait
push
roll
mov
pusha
imul
pop
fs
and
mov
inc
cmp
add
ja
into
sbb
shll
lahf
data16
pop
popf
out
and
sbb
and
cmp
lea
dec
xchg
xorl
inc
mov
ret
lahf
test
add
push
das
hlt
scas
inc
daa
xchg
mov
lret
push
fsts
jmp
xchg
and
lods
cltd
push
std
icebp
adc
jns
mov
sub
jecxz
ja
testl
jl
cmp
jb
xchg
adc
push
mov
nop
in
pop
jg
push
sbb
sahf
pusha
cmp
xchg
jecxz
ret
push
aas
push
push
dec
dec
sub
cmp
lea
data16
sbbb
imul
mov
decb
push
mov
pop
sbb
test
cmp
xchg
rclb
int3
lret
pop
add
cmp
popa
sbb
xchg
inc
sarl
inc
repnz
fsts
or
inc
mov
rolb
icebp
push
cmp
adc
popa
xor
test
xor
push
jne,pt
jo
mov
xor
loope
lea
lret
into
pop
and
out
dec
pop
mov
jb
jae
pop
xor
int
repz
sub
in
or
mov
sub
pop
ret
pop
ss
sbb
pop
loopne
dec
aas
and
inc
out
outsb
cmpsl
out
lahf
xlat
insl
pushf
fsub
jmp
mov
repnz
sbb
shrl
ds
mov
loopne
mov
cltd
ror
repz
inc
pop
fcomps
pop
sub
sbb
nop
pop
repz
jb
or
shrl
test
inc
enter
data16
xor
xor
xchg
mov
lahf
dec
add
fnstsw
es
out
sbb
out
xor
out
lahf
xor
dec
add
cmc
aad
mov
mov
les
outsb
sub
xchg
pop
hlt
ret
in
jns
popf
imul
mov
enter
clc
mov
dec
mov
fists
add
cmp
jns
mov
adcl
cs
mov
lock
ret
data16
hlt
cmpl
testl
cli
or
ret
pop
dec
and
mov
mov
or
fisubl
subl
sahf
sbb
pop
mov
ja
ret
popf
ss
jl
mov
sub
insl
cmp
mov
nop
sub
out
ja
call
dec
and
jg
ret
movsl
loop
mov
rclb
lock
scas
sub
mov
pop
insb
sub
mov
mov
xor
fdivrl
mov
sub
dec
rolb
lcall
es
push
jne
int3
subb
push
shlb
dec
jnp
jle
insl
ror
sub
push
mov
sbb
movsl
pop
int
dec
dec
xor
xor
addr16
pop
shlb
push
pusha
push
sub
inc
and
out
xor
cltd
inc
inc
neg
in
aaa
push
jmp
xchg
mov
fiadds
cmp
decl
clc
add
or
repz
sub
in
lea
in
fnsave
cltd
std
cli
push
and
clc
ljmp
add
mov
or
lahf
and
in
icebp
das
add
fxsave
xchg
sbb
loop
push
pushf
push
and
lods
jg
testb
inc
movsb
outsl
aam
movsb
subl
mov
aaa
push
test
repz
pop
push
jl
cltd
push
or
xor
mov
dec
jnp
jp
mov
repnz
loope
mov
movsl
adcb
or
or
sub
jle
xor
jp
sub
adc
jmp
and
dec
aam
and
movl
push
or
push
xor
adc
xlat
adc
cwtl
popf
push
shl
dec
push
adc
adc
mov
jne
aaa
push
jle
inc
mov
out
xchg
daa
ljmp
dec
sbb
sti
cmp
jnp
mov
pop
push
lods
jl
fidivs
push
xor
sub
mov
fs
push
jmp
hlt
jmp
adc
jb
cli
add
dec
mov
fbstp
lcall
jle
pop
sahf
xor
imul
mov
jmp
sub
and
mov
xor
pop
fucomip
inc
clc
in
cmpsl
sub
out
add
movsl
mov
stos
or
call
pop
push
pop
int3
mov
enter
inc
add
add
sti
push
pusha
mov
aad
sub
inc
jmp
mov
and
in
daa
test
rclb
or
push
xchg
inc
pushf
shlb
and
or
jg
icebp
sub
push
ret
pop
mov
sub
bound
jg
or
pop
ljmp
pusha
sbb
inc
mov
and
pop
call
cmpsl
jl
jb
xor
add
outsl
dec
mov
stos
pop
fs
push
pop
inc
sahf
andl
dec
loopne
int3
sbb
js
ficomps
mov
in
pop
fistps
loop
xor
inc
jle
dec
mov
lahf
leave
out
sbb
pop
push
mov
stos
jbe
mov
xor
sarb
adc
icebp
orl
sti
add
imul
pop
inc
movsb
inc
inc
stos
sub
push
test
jecxz
jne
ljmp
scas
aaa
leave
sbb
jge
push
nop
fsubs
outsb
in
call
testb
pop
sbb
mov
mov
dec
adc
popf
mov
loopne
fisubrl
sub
addr16
into
adc
push
daa
cld
movsl
imul
cmp
clc
fwait
in
lock
les
fadds
movsb
jge
lcall
inc
push
gs
inc
fldl
and
inc
popf
sbb
and
push
sub
pop
jl
in
js
in
out
lds
loope
lds
icebp
xchg
movsl
jle
in
jle
mov
add
mov
cwtl
addb
mov
push
jg,pn
ds
sbb
cmp
dec
add
rorl
daa
stos
dec
cld
mov
int
inc
push
fs
int3
daa
sbb
mov
xor
jmp
shlb
cli
in
and
xchg
out
sahf
repz
scas
xor
xor
jne
testl
ret
rcl
sub
test
arpl
in
fs
mov
inc
mov
jg
aas
out
sbb
inc
iret
dec
jbe
cmp
outsl
insl
or
sub
iret
repz
mov
lock
ds
mov
add
adc
ss
push
imul
outsl
sub
lea
pop
adc
out
adc
fldt
push
sub
into
lcallw
mov
jge
sub
and
mov
xor
cmp
js
imull
pop
add
nop
aad
mov
mov
inc
fstpt
sbb
insl
mov
jl
insl
test
dec
aas
std
xchg
mov
rcrl
mov
add
inc
sub
xlat
push
add
stos
jle
push
mov
jns
pop
lea
add
push
push
ja
scas
fcoms
ss
inc
xlat
cmc
mov
push
jmp
mov
push
jo
jb
or
cmp
iret
insb
sbb
lcall
out
or
out
sti
imul
pop
test
je
jno
inc
das
mov
inc
insl
push
int3
push
jne
shrb
add
js
lock
mov
sub
xor
outsb
jnp
into
ficoms
shl
mov
mov
mov
push
pop
mov
dec
cmpsl
or
enter
popa
jmp
insl
loopne
iret
sbbl
add
je
sbb
push
js
call
sub
inc
loop
ljmp
and
aaa
xor
mov
xor
es
push
push
es
jbe
cli
fidivl
out
xor
sti
xchg
jg
pop
pop
repnz
or
xor
int3
sub
inc
into
adc
mov
flds
int3
cmp
stc
adc
aad
sbb
mov
pop
ljmp
pushl
andps
fdivs
jb
sub
sbb
jg
jnp
mov
ja
dec
mov
mov
lods
sti
orl
jecxz
pop
cli
xchg
rcrl
jecxz
push
cs
pusha
and
icebp
push
sub
inc
sub
sarb
sbb
pop
in
push
fimull
ret
inc
je
pushf
dec
iret
pop
and
nop
adc
inc
fmul
cmpb
mov
or
push
movsl
es
bound
inc
push
push
sti
js
xchg
cmp
cmp
scas
sub
mov
inc
sti
mov
or
adcl
pop
std
ficoms
test
pop
xor
lret
jo
add
sub
sub
jecxz
sbbl
mov
out
imul
pop
arpl
pop
and
aam
pushw
pop
mov
push
lods
outsb
sarl
jne
loopne
enter
out
insb
inc
sar
rolb
push
mov
aaa
sub
mov
jle
psubusw
inc
das
test
push
in
dec
push
cmp
adc
jle
in
jecxz
or
add
xlat
jl
int3
test
icebp
push
out
movsl
jl
or
lret
xchg
mov
and
mov
adc
std
mov
mov
loopne
sub
es
push
cld
xchg
and
loopne
clc
xchg
mov
shrb
push
xlat
mov
mov
repz
cwtl
xchg
cmp
xchg
arpl
mov
cmc
dec
cmc
mov
cs
add
or
jle
aas
dec
fnstsw
xor
frstor
imul
fsubl
sub
xor
push
mov
mov
mov
jns
add
out
test
test
or
mov
scas
inc
scas
mov
mov
jne
sub
xor
pop
push
shl
dec
add
jp
jl
insb
fwait
push
sbb
xchg
cmp
out
mov
fs
sub
dec
cltd
data16
out
push
mov
scas
fs
xchg
mov
sub
mov
or
fbld
sub
add
push
add
jns
jne
lret
jp
and
dec
mov
movsl
xchg
mov
sub
cwtl
arpl
icebp
sub
in
les
pop
sbb
iret
scas
int
and
push
je
es
sbb
dec
mov
shr
or
lcall
pushf
cli
xchg
fcomps
insb
xor
fnsave
xor
jae
cld
xchg
cmp
sbb
dec
mov
inc
adc
mov
cmp
outsb
jl
pop
or
jle
lods
dec
imul
xchg
sarl
xchg
sbb
mov
pushf
pop
xchg
sub
mov
and
lahf
push
int
loopne
cmp
and
stc
sbb
sub
inc
cli
xor
popa
sbb
pop
dec
pop
mov
jge
out
or
cld
mov
outsb
jle
add
pop
mov
popa
icebp
jle
push
ljmp
jno
mov
insl
pushf
jns
jmp
ljmp
call
scas
stc
jle
inc
lock
push
jne
cmp
mov
fists
outsb
push
adc
frstor
jnp
mov
das
xor
negl
out
inc
lret
pop
ret
push
add
out
adc
dec
ja
clc
push
pushf
jns
int
mov
and
aas
add
pushf
add
sub
clc
push
mov
adc
setle
outsl
or
imulb
js
in
fisttpl
xor
cmpsl
jnp
or
sub
push
in
and
inc
imul
gs
pop
outsl
ret
iret
nop
daa
add
test
sahf
xor
shll
pop
inc
xor
cmp
movsl
in
mov
fisttpl
jle
mov
sub
add
pop
sbb
or
and
push
or
pop
lds
psllw
popf
imulb
cmp
ret
sbb
mov
sbb
adc
cld
pop
aam
add
or
movsl
and
mov
insl
cmp
adc
mov
scas
sbb
mov
nop
cli
std
mov
aaa
mov
xlat
adc
fsubrs
scas
xabort
ret
rcll
add
mov
stos
enter
je
test
mov
xor
jge
inc
out
adcl
js
test
cmp
dec
add
cmp
pop
scas
add
push
jp
and
push
pop
cmc
mov
jl
adc
mov
je
aad
lods
lods
or
sbb
dec
inc
push
je
jmp
jae
scas
stos
jge
fmul
adc
sbb
stos
or
fnstenv
mov
insl
cmp
clc
iret
mov
lods
outsl
inc
xor
add
inc
mov
sar
pushf
push
sbb
dec
imul
scas
mov
test
push
insb
stc
lods
in
shlb
cwtl
addb
xchg
cs
sub
hlt
pop
in
add
cmp
sar
sahf
lahf
sti
dec
adc
sbbb
add
outsb
popa
inc
aam
jb
adc
xlat
aas
addr16
cmc
js
out
mov
push
pop
andb
jnp
addr16
das
cmc
mov
js
add
daa
bound
arpl
inc
aas
xlat
push
repnz
fcomps
add
test
data16
out
add
xchg
mov
sbb
xor
daa
mov
in
imul
pop
push
rep
mov
stos
push
es
lret
inc
or
out
in
jmp
mov
cmp
sub
sbb
cmp
bound
fimuls
rcrl
ds
and
aaa
sub
jmp
xchg
pop
push
or
xor
lret
int
cmpb
sub
sub
sahf
sbb
ja
mov
imul
addl
mov
pop
sbb
xchg
ret
cmp
cmpb
aam
sti
add
stos
push
jae
jbe
outsl
dec
sbb
shrl
jle
insb
mov
movsl
les
xchg
mov
add
xor
dec
push
cmpsl
cmc
pop
add
xor
movl
dec
or
mov
or
jle
lret
dec
cli
xchg
jge
cmp
or
and
push
arpl
lret
adc
or
arpl
xor
and
lds
lea
cmc
cld
div
push
nop
and
repnz
pop
and
repz
cmc
inc
sub
add
jp
enter
mov
dec
mov
dec
pop
rol
pop
in
ja
mulb
icebp
rclb
ss
mov
pop
xor
dec
ret
adc
popa
femms
mov
dec
out
ljmp
lock
cli
addr16
cmp
cld
or
imul
sub
cli
repnz
sub
xchg
insb
xchg
jno
in
ss
dec
push
push
call
xchg
mov
lods
xor
out
jne
popf
sbb
ret
add
outsl
sbbl
incb
ds
icebp
out
add
cmc
aad
xor
sub
hlt
cmp
std
jl
push
call
pop
push
mov
fstpt
adc
cmp
or
addb
iret
dec
add
hlt
clc
xor
movsl
icebp
cmpl
jge
xor
repnz
mov
shl
jnp
push
sub
add
xchg
cmp
and
test
aam
push
inc
test
xchg
add
iret
fdivs
out
xorl
mov
outsb
jge
mov
push
jp
dec
in
push
insb
enter
lds
mov
inc
dec
dec
sahf
jl
enter
cmp
out
jo
mov
push
dec
pop
fnsave
jns
arpl
sti
jp
stc
aam
sub
add
outsl
dec
mov
jl
mov
push
push
cmpsl
aas
push
jne
cmpsb
mov
pop
scas
and
dec
in
enter
scas
pop
cmp
les
push
mov
rcr
cld
push
shrl
js
imul
push
cmp
movsl
pop
sub
xchg
aad
les
dec
mov
jp
push
and
jns
outsb
jmp
imul
pop
jno
or
inc
jnp
leave
clc
sahf
andb
sbb
push
sbb
or
jne
lahf
mov
aam
gs
jae
rclb
mov
push
jmp
xor
xchg
imul
jne
cwtl
pop
cmp
movsb
mov
pop
jecxz
jge
data16
pop
push
mov
jnp
mov
lock
jmp
mov
jbe
scas
test
loopne
add
and
gs
std
mov
into
cmp
int
add
fstl
inc
rcrl
clc
iret
pop
repnz
cld
add
dec
popf
bound
jmp
and
pushf
push
stos
lock
enter
jg
inc
or
adc
mov
je
xor
mov
pop
xchg
sub
adc
pop
and
nop
insl
dec
pop
lahf
mov
or
adc
inc
sub
fdivrl
jle
int
pusha
mov
pop
mov
mov
in
inc
or
xor
and
std
adc
adc
js
mov
stc
test
mov
mov
mov
stos
mov
loop
in
dec
das
adcb
imul
xor
rcr
fadds
mov
sbbl
add
cmpsb
lea
xor
inc
mov
push
inc
sub
cwtl
in
fnsave
mov
jae
sti
mov
dec
pop
lock
outsl
push
cmc
pop
add
cmp
dec
loopne
popf
jecxz
popl
inc
ret
mov
or
sbb
jle
jge
imul
and
cmp
sbb
or
dec
mov
je
mov
mov
xlat
xchg
int3
in
jle
mov
mov
push
and
out
fnstcw
stc
cli
es
xor
inc
stos
repnz
gs
inc
js
mov
loopne
cmp
inc
jns
adcl
xchg
sub
fwait
icebp
ret
jecxz
jb
and
mov
pop
mov
adc
nop
pop
pop
in
leave
ss
in
sbb
scas
add
out
lcall
adc
les
inc
loopne
bound
xchg
sti
in
pop
jmp
push
out
popf
jmp
cmp
imul
fidivs
push
pop
dec
fwait
add
mov
push
mulb
das
mov
repz
lds
xchg
ret
sarb
push
sti
sub
fistpl
ljmp
sub
lock
cmp
shl
pop
les
hlt
xor
out
cwtl
fnstsw
jle
push
outsb
xor
sbb
pop
out
sub
jp
push
nop
in
mov
xor
pop
adc
lea
sub
lds
loope
mov
inc
pminsw
mov
aas
rol
sub
and
add
lods
fldenv
insl
xchg
lock
sbb
or
in
add
xorb
inc
or
int
cwtl
sbb
repz
cwtl
sbb
and
lea
mov
sub
or
pop
xor
push
into
fstp
dec
movsl
stc
mov
and
lret
inc
pop
std
xchg
mov
andb
cmp
leave
in
lret
bound
adc
mov
nop
push
out
call
mov
outsl
daa
cli
insb
adc
imul
pop
bnd
push
push
adc
push
nop
rorb
fsubs
mov
pushf
in
in
xor
lds
cmp
sbb
mov
popf
and
cmp
sub
xchg
lds
sub
repz
addr16
pop
push
cs
int3
mov
pop
xchg
cmp
enter
pop
subl
and
movsl
cmp
into
xchg
mov
sbbb
push
xor
or
lds
out
out
cmp
call
fiaddl
mov
ja
and
mov
sub
rolb
jo
xchg
dec
in
xchg
mov
outsb
or
lods
pop
cmpsb
or
adc
inc
movsl
or
mov
sbb
cmp
inc
les
sub
out
pop
int3
out
fcomps
sub
test
sbb
fst
test
fidivrl
push
ret
aam
popa
add
jg
loope
sub
lds
mov
mov
out
fcomps
mov
or
xchg
xor
cmpsb
mov
fs
xchg
mov
xchg
iret
aas
mov
out
lret
xchg
sub
or
ret
sbb
fmuls
jg
data16
pushf
pop
lcall
pop
outsb
rcl
cwtl
lds
mov
or
int
push
inc
das
or
test
jge
iret
mov
mov
orl
pop
pop
xchg
lret
je
xor
and
pop
mov
push
mov
mov
cltd
flds
adc
mov
pusha
int
daa
bnd
pop
mov
adc
adc
xchg
pop
cmp
mov
out
test
or
outsb
adc
sahf
jns
inc
jmp
add
mov
push
sub
jae
xchg
sbb
shr
int
lds
or
mov
dec
loopne
cmp
dec
mov
pop
sub
ficoms
aas
loopne
jmp
xchg
inc
inc
loopne
cmp
cmp
fildl
testb
fstpl
imul
or
jl
test
ret
loop
sub
xor
leave
mov
fwait
out
mov
inc
fcoml
sbb
imul
sub
ds
out
ret
push
mov
gs
sbbb
xchg
nop
add
xchg
pop
std
cltd
cmp
adc
or
push
icebp
jecxz
bound
outsl
mov
in
cwtl
and
add
mov
in
insb
sti
xchg
pop
pop
bound
popf
mov
leave
pusha
and
add
arpl
out
arpl
cwtl
pop
sub
lods
xchg
add
sbb
in
aas
ficomps
add
lds
call
pop
pop
aad
cmc
andl
pop
sahf
fnstenv
out
pop
test
scas
insl
add
das
jmp
pop
pusha
repz
inc
xchg
mov
idivl
in
out
mov
and
add
nopl
and
std
cs
jnp
ljmp
jns
xlat
adc
bswap
mov
or
lock
outsl
data16
xor
in
add
dec
mov
inc
inc
popf
xchg
popl
sub
pop
lret
cmp
fisubrl
out
mov
push
or
xchg
bts
xchg
sub
push
subb
int
pop
fisubs
jp
popa
mov
lods
jle
lods
inc
adc
mov
lock
push
push
cmp
imul
jae
add
orb
and
mov
bound
and
jl
jae
out
mov
inc
les
ret
leave
mov
fwait
xor
std
adc
cmp
aaa
xchg
cmpsb
pop
not
add
push
push
stc
jge
cmp
mov
insl
xchg
aas
dec
daa
cli
mov
int3
pop
ret
jle
insl
and
popa
adc
out
push
cmp
cmpsb
sbb
xlat
pop
sbb
pop
cs
fidivs
or
sub
cmpsb
pop
sbb
add
stc
xor
mov
jnp
xlat
mov
mov
ja
sub
sti
lret
pop
add
mov
inc
mov
inc
adc
inc
mov
scas
adc
cmpsb
push
les
xchg
cmpsl
mov
cmpl
leave
inc
mov
ljmp
mov
pop
sub
imul
faddl
es
dec
mov
popf
test
mov
sbbb
loope
aam
jae
movsb
push
xor
jnp
insl
mov
push
push
les
cs
ret
or
outsl
sbb
in
jae
popl
int
jge
push
mov
add
lds
enter
jg
or
sub
cli
stos
jmp
lods
iret
icebp
pop
sbb
jb
lds
inc
dec
inc
lock
enter
push
sub
fimull
mov
xchg
les
adc
xchg
inc
dec
jecxz
jns
ja
xlat
addb
rorl
ja
inc
imul
xchg
hlt
adcb
inc
mov
and
jns
add
sub
gs
mov
sbb
out
test
mov
sub
xor
lret
ljmp
xchg
xor
add
push
cmp
test
jns
addb
shll
push
fisttps
xchg
pushf
subb
push
sub
pop
das
mov
cmp
ds
mov
mov
mov
test
xchg
fsubrs
xor
jecxz
mul
mov
ret
js
mov
iret
jecxz
add
popf
mov
seta
out
jg
and
das
mov
inc
cmpsl
jp
mov
out
inc
or
xor
inc
pop
adc
dec
add
stos
inc
jo
ret
es
cmp
addr16
stos
pop
mov
sbb
test
lds
inc
xchg
vmovntps
mov
adc
and
mov
shrb
push
xchg
nop
jmp
out
iret
pop
imul
pop
sub
jl
fisttps
xor
dec
gs
stos
xor
mov
test
or
test
adc
sbb
sarb
enter
cltd
xor
gs
enter
mov
movsb
outsl
cmp
dec
dec
arpl
loop
sub
loop
call
add
in
or
cmp
cltd
pop
mov
mul
lcall
fdivs
pop
inc
int
ds
call
mov
xchg
dec
push
mov
popa
sub
inc
testb
xchg
out
jmp
fildll
test
dec
movsl
shrb
pop
push
dec
loope
pop
mov
rorb
jbe
sub
in
jbe
lcall
pop
jge
nop
rcrl
or
stos
pop
neg
mov
popa
mov
pop
stc
add
popf
jnp
fdivr
push
add
out
shll
push
push
aam
pop
stc
add
lods
sub
cltd
ja
shlb
cmp
cmp
repnz
cmp
jbe
cs
push
cmp
inc
icebp
pusha
and
sbb
call
fcompl
int
add
jnp
sub
ljmp
nop
and
jnp
sti
cli
fcomi
push
dec
mov
mov
ja
cmp
pop
xor
inc
gs
jle
jecxz
pop
cltd
arpl
add
mov
sahf
out
push
sub
cmp
test
ret
xchg
fnstcw
iret
cmp
pusha
outsb
jbe
shrb
pop
out
movaps
aam
pop
pop
call
je
and
cld
outsl
cwtl
int3
cmc
pop
push
int3
xor
jg
fwait
popf
mov
insb
stos
leave
aas
add
repz
sarl
shrl
call
xor
or
pop
mov
mov
ja
adc
pop
popa
repnz
mov
loope
mov
imul
lahf
mov
mov
rclb
mov
rcl
aaa
loop
push
mov
clc
nop
sbb
addb
mov
cld
pop
push
arpl
mov
movsl
inc
popa
add
das
pop
jns
outsb
mov
sbb
addb
xchg
inc
sahf
push
into
adc
mov
mov
xor
xchg
aam
or
ret
cmp
imul
testb
push
enter
push
xor
popa
cmpsb
add
xor
sub
push
push
push
xchg
lods
jmp
mov
sbb
cmp
sbb
ror
jo
push
mov
pop
addb
sbb
nop
xchg
mov
in
cmp
leave
mov
pop
lock
sahf
imul
fdivrl
cwtl
loop
add
add
subl
mov
cli
sbb
jns
xchg
and
stos
repnz
aas
jne
lds
dec
loopne
outsb
aaa
stc
fwait
shl
push
sbb
pushf
bound
sub
fwait
xor
or
lods
lea
imul
jp
mov
lret
mov
shrb
cmpsl
jp
sub
in
push
jbe
ss
jl
and
pop
mov
add
dec
xchg
pushf
movsl
push
dec
add
les
jmp
call
adc
dec
lahf
inc
mov
xchg
pop
lds
pushf
incb
lods
mov
or
fsubrs
hlt
imul
xchg
clc
addl
enter
jae
ds
inc
adc
xchg
cs
lea
ja
test
pop
mov
pop
std
cmpsb
xor
push
in
cmp
mov
nop
fs
and
push
mov
inc
fidivl
mov
adc
shl
pop
push
les
shrl
mov
inc
dec
inc
xchg
jae
mov
ret
je
jecxz
cmp
mov
dec
add
jne
jl
cmp
pop
jno
fbld
sahf
in
xchg
mov
or
dec
add
pop
sub
adc
imul
in
lea
adc
push
push
jle
std
xchg
mov
adc
test
scas
mov
xor
jns
ja
xlat
repz
jmp
sahf
incl
pop
pusha
mov
into
aas
jns
jns
add
cmpsl
xlat
scas
inc
or
arpl
push
in
int3
ss
mov
ret
lock
cmp
push
xor
pop
mov
mov
jl
out
sbb
cmp
cmp
cmp
fiadds
adc
sbb
mov
ds
cld
fbstp
mov
fstpl
xchg
scas
stos
xchg
adc
inc
sbb
sbb
aam
out
mov
pop
inc
dec
add
ja
cwtl
dec
inc
push
ja
clc
test
in
pushf
cmp
je
push
jno
jl
xor
jl
sbb
ds
dec
push
shrl
mov
sub
xchg
insb
inc
dec
and
roll
jle
cmp
mov
out
xchg
aam
testb
and
cs
pop
cmp
xor
mov
and
push
insl
dec
pop
cmpsl
pop
cltd
cmp
jo
in
sub
dec
sbb
push
test
popf
xor
sub
fldt
into
bound
jge
cmp
clc
sbb
in
shl
mov
imul
cltd
jl
lret
pop
pop
outsb
cmp
cmp
mov
call
xor
mov
cld
lret
push
jo
cli
mov
in
pop
dec
out
mov
and
mov
jns
pop
in
dec
leave
pusha
inc
mov
jo
cmpsb
jecxz
xchg
dec
mov
call
lahf
jnp
frstor
andb
sub
fwait
shll
out
add
in
test
mov
sbb
add
pop
popf
ret
pop
cmp
loopne
xlat
pop
loopne
push
mov
cmpsb
push
out
popa
cmp
cmp
xorb
fs
dec
or
call
in
fnsave
mov
ljmp
jecxz
pushf
ljmp
scas
fisubl
sub
inc
xlat
repz
adc
inc
mov
lock
repz
nopl
add
idivl
rcrb
leave
fcmovnu
inc
pop
cmp
movl
pop
das
lcall
sub
or
cmp
popf
cltd
push
and
dec
and
test
xchg
daa
out
out
adcb
sub
sub
add
inc
jmp
mov
mov
add
loope
jns
pusha
scas
inc
push
callw
mov
out
jns
jp
loopne
jb
or
aad
ljmp
sti
mov
inc
imul
xchg
mov
mov
push
lods
push
pop
inc
inc
xor
jnp
mov
mov
or
add
jge
mov
adc
js
sbb
inc
test
outsb
fwait
xchg
push
inc
scas
sarl
xchg
nop
mov
fisubrl
push
mov
fisttpl
dec
pop
cmc
clc
das
and
cmp
es
xchg
testb
xchg
xor
int3
or
imul
xor
xchg
mov
mov
insb
rclb
and
pop
sub
sub
xor
xchg
pop
xor
dec
out
cmc
aaa
and
sbb
mov
inc
fnsave
out
dec
jns
stos
outsb
out
rcl
push
cmp
jmp
out
into
jb
lret
mov
ficoml
repnz
es
adc
cmp
push
xlat
push
popf
pop
jb
outsl
lea
lahf
rcll
cmpsl
fdivrs
jae
je
cmp
jp
jmp
or
cmp
sub
dec
mov
xor
jg
jecxz
pop
ret
popf
arpl
xchg
outsl
add
cmp
pop
aam
fyl2x
popf
mov
sub
pop
add
dec
test
aam
scas
cwtl
scas
dec
mov
pusha
jecxz
enter
sub
lret
cmp
testl
andb
jo
lret
mov
shrl
andb
test
pop
cmp
clc
xchg
mov
adc
sahf
push
movsb
decl
cld
and
pusha
pusha
mov
fstpt
incl
clc
lea
xor
add
stc
lret
and
rorl
sbbl
lcall
push
inc
in
push
std
pop
cmpsl
addb
repz
fiadds
and
cwtl
xor
out
jmp
xchg
add
pusha
test
cld
stos
xchg
dec
out
loope
dec
and
or
cmc
inc
mov
inc
xlat
mov
loopne
xchg
lea
sbb
fisubrl
repnz
cltd
adc
ss
repnz
adc
fwait
pop
repz
sub
mov
dec
fstl
xchg
dec
fistpl
mov
fnstsw
ficompl
xor
popa
clc
inc
repnz
push
leave
jg
aad
rcll
movsl
lret
xchg
xlat
outsb
sub
shrl
mov
dec
dec
and
popa
and
sub
mov
call
stc
mov
sti
stos
push
pusha
xor
xchg
cmp
jg,pn
lret
jmp
pop
loopne
jno
aam
sbb
jmp
cmp
outsl
and
neg
nop
lcall
divb
repz
je
push
aaa
into
aas
jbe
sub
push
jne
mov
rcrb
sbbl
and
rcrb
xchg
outsb
inc
imul
loop
add
or
and
scas
call
or
pop
aad
mov
shrb
icebp
jl
sub
stos
mov
out
dec
scas
inc
push
rcrl
push
xor
or
cld
xchg
mov
jecxz
sbb
das
sub
jecxz
out
mov
imul
call
fs
xchg
mov
aas
jns
inc
and
stc
nop
cltd
pop
call
scas
movsl
in
xchg
stos
fdivs
in
int3
sbb
mov
cmp
mov
jno
and
aas
imul
sbb
mov
mov
loop
sub
dec
and
inc
iret
mov
sub
push
inc
cmp
dec
rorl
leave
inc
push
movsl
icebp
inc
enter
and
or
shrl
sbbb
aad
insb
sub
mov
xor
sti
pop
addr16
mov
pop
sub
stos
jp
mov
jb
negl
push
out
leave
popf
mov
pop
mov
sbb
push
dec
sbb
mov
jp
rorb
clc
jb
out
fdivrp
push
adc
ret
xchg
sbb
push
push
call
inc
loopne
add
lods
or
mov
ja
aaa
test
test
fsubrl
int
lret
adc
dec
mov
rcl
mov
add
mov
add
dec
outsl
push
xor
jmp
jae
mov
jg
mov
lcall
cmpsb
push
lds
ret
sub
jae
jne
idivb
or
repz
inc
aas
roll
in
popa
int3
jg
or
inc
pop
repnz
and
jns
dec
rclb
pop
icebp
dec
xchg
fiadds
mov
cwtl
outsb
test
test
cmpsb
cmp
std
insl
or
xlat
mov
adc
lret
fistpll
jp
mov
js
jae
jb
adc
or
popa
and
pop
dec
int
cmp
rcll
or
sub
inc
roll
call
cmc
dec
mov
dec
insl
mov
hlt
mov
and
dec
jbe
jb
dec
mov
stc
xchg
lea
dec
loope
pop
adc
icebp
movsb
ret
lahf
ss
or
jnp
es
adc
xchg
pusha
mov
jmp
stos
cltd
sbb
mov
or
sub
lods
repnz
rcl
ret
sbb
lock
in
pushf
mov
ja
mov
roll
pop
add
mov
mov
imul
dec
xor
push
sbbb
add
inc
out
mov
fmuls
js
mov
sub
push
xchg
jbe
stc
adc
push
in
add
jg
repz
mov
jno
jne
xor
xchg
and
mov
inc
add
stos
fucom
jbe
in
and
dec
movsb
aam
outsl
repnz
mov
sub
ja
pop
sub
xchg
push
push
xchg
or
test
out
lea
dec
push
xor
sbbb
xor
mov
test
into
mov
fists
fisubrl
sub
lods
fimuls
lcall
push
mov
dec
sahf
inc
repnz
sbb
in
adc
jecxz
aas
dec
sbb
jnp
lods
mov
mov
movsb
sub
arpl
and
mov
inc
inc
mov
nop
dec
mov
sbb
outsb
cltd
xor
jne
dec
stos
int
pop
cmpxchg
pop
test
push
imulb
cmp
les
dec
and
dec
xchg
jmp
dec
adc
xor
mov
int3
sarl
loopne
add
test
xchg
jbe
stc
or
jmp
and
inc
xlat
fisttpll
pop
cmp
add
nop
mov
shl
sbb
adc
or
push
dec
cmp
jae
fstpt
mov
jae
add
jge
add
xor
out
bsf
fwait
or
sub
pop
xor
adc
dec
jl
ret
lods
lock
repnz
sbb
add
dec
xchg
adc
loopne
lret
mov
fstl
xor
daa
push
pop
repnz
jp
cwtl
jl
dec
in
fstpt
jmp
mov
mov
lds
fxch
add
jmp
ja
mov
mov
out
mov
mov
push
add
ds
mov
inc
fstps
orb
and
and
lea
or
or
cmp
push
sub
pop
cli
dec
add
jno
dec
jmp
flds
push
lret
hlt
mov
sbb
xor
mov
push
push
in
addb
daa
push
out
out
lret
xor
pop
add
enter
or
inc
xchg
and
cmp
ror
inc
adc
cmpsb
in
pop
dec
jl
xchg
mov
ret
sbb
ss
shll
imul
lret
sub
mov
inc
mov
ret
js
xchg
mov
xchg
xchg
push
xlat
inc
or
sbb
fidivrl
iret
gs
es
mov
mov
lahf
movl
es
int
xchg
inc
mov
div
lret
xor
bound
or
push
dec
jae
pushf
movsb
insb
cmp
adc
mov
andb
or
ss
mov
imul
in
out
fdivrs
cli
or
xchg
sub
cmp
std
iret
rcl
stc
ret
mov
lcall
add
std
lods
ja
lods
sub
dec
int3
fsubr
jge
lea
mov
and
mov
in
xchg
sbb
mov
loopne
mov
cmpsl
leave
xor
lea
sahf
test
cmc
mov
lea
sahf
rcrl
in
pop
mov
fbld
sub
imul
lock
call
jecxz
ss
nop
insb
ret
sbb
dec
push
cmp
fimull
ds
js
das
fcomps
jge
test
adc
lods
mov
sub
inc
inc
inc
ja
bound
or
mov
mov
pop
push
in
test
jae
test
shll
add
push
ljmp
stos
mov
mov
mov
imul
imul
mov
int3
sub
sbb
leave
into
gs
sub
add
dec
test
mov
ret
and
xlat
inc
rclb
add
pusha
cmp
mov
jnp
lahf
xchg
mov
scas
mov
ja
shr
out
lcall
inc
pop
mov
adcb
fdivl
mov
mov
cli
or
push
push
xor
inc
inc
js
and
leave
stc
cli
jp
cmp
push
push
add
sbb
pop
mov
or
test
pop
and
add
xchg
pusha
sub
add
ss
loope
mov
jne
push
insb
test
xor
pusha
pop
shrb
negl
fwait
jmp
and
cmp
xor
addb
mov
push
std
fdivl
jns
test
icebp
jge
scas
mov
lahf
add
jg
call
push
shlb
out
dec
mov
pop
xor
or
cs
xchg
jbe
dec
mov
push
mov
addr16
out
rclb
xor
out
lock
ret
sbb
cmpsb
imul
aam
sub
test
or
outsl
or
mov
and
inc
inc
icebp
in
popl
inc
fsubl
loopne
mov
and
add
incb
xor
and
out
jmp
mov
jmp
in
les
pop
fs
inc
popf
or
cmpsl
and
add
dec
stos
mul
scas
dec
pop
xchg
js
enter
xchg
or
inc
dec
add
je
cld
xor
pop
cmpsl
xchg
push
ficomps
stos
pop
mov
sbb
jge
insb
insb
stos
inc
pop
mov
dec
push
enter
fs
cmp
and
movsb
dec
ret
shr
pop
shr
mov
push
cwtl
add
mov
cs
xchg
test
ja
in
xlat
adc
gs
add
xor
xchg
and
mov
ret
add
in
fsubl
outsl
mov
nop
mov
aad
cmc
adc
and
mov
jle
fcoml
mov
mov
addr16
cltd
xor
sub
addb
movsl
movsl
add
mov
mov
call
or
daa
jbe
sbb
stc
or
sub
xchg
pop
cmp
sbb
or
out
daa
mov
push
jno
rclb
push
in
jp
dec
xor
mul
insb
adc
mov
addr16
inc
sar
aas
ret
mov
push
xchg
xchg
or
mov
mov
push
mov
shl
sub
rcl
adc
sub
popa
jnp
or
inc
ds
mov
addr16
pop
jg
out
testl
pop
fimuls
push
cmp
lods
gs
rclb
popf
movsb
cmp
mov
pop
ret
roll
jno
jg
mov
nop
mov
mov
icebp
pop
sub
push
scas
clc
xchg
xchg
cmpsl
test
mov
hlt
cs
and
clc
mov
ret
repz
xchg
test
jb
je
dec
jecxz
test
xor
cmp
rcl
sar
push
testb
add
movsl
inc
mov
je
inc
call
iret
xor
xor
bound
push
or
aam
push
inc
call
mov
mov
push
xor
popf
clc
cmp
push
dec
and
pop
leave
sub
or
xor
adc
cmp
mov
in
outsb
outsl
push
pusha
mov
dec
add
in
mov
lcall
dec
pop
into
enter
add
fbld
jge
shlb
sti
movsl
aas
cmp
mov
and
cmpsl
cmp
icebp
ret
clc
sbb
jmp
rcrl
adc
sub
mov
rorl
enter
pop
out
jne
inc
shll
sub
repnz
fnstsw
inc
fcmovb
stc
pop
negl
lret
jle
rorl
fwait
add
mov
mov
push
cmp
push
pusha
imul
ret
cs
es
xlat
dec
stc
or
jnp
xor
sahf
jg
mov
out
adc
inc
sarl
xor
int
icebp
ja
out
test
je
aaa
cvtps2pd
addr16
xor
lcall
mov
push
dec
orl
outsb
sbb
xor
mov
and
xor
inc
enter
cwtl
pusha
lret
sbb
xchg
rolb
mov
testb
lcall
jp
aad
repnz
jnp
xchg
lds
mov
mov
lcall
cld
mov
xor
add
pop
xchg
jp
lods
outsb
pop
jae
mov
scas
and
loope
mov
repz
lea
loope
ja
out
and
xchg
sub
lds
jle
push
pop
pop
aas
lea
lea
scas
pop
fiadds
cmpsb
cmp
pop
loopne
dec
mov
hlt
stos
in
dec
jne
add
inc
mov
orl
pushf
xor
test
neg
mov
push
mov
std
js
pop
loop
test
add
adc
dec
je
mov
addr16
sub
mov
pop
pause
cmp
sbb
flds
push
in
arpl
ret
jb
cmp
mov
out
dec
pop
or
mov
aas
inc
and
or
in
jp
and
out
mov
xchg
and
insb
lods
int3
adc
mov
ror
repz
in
adc
ljmp
popl
lret
in
adc
lods
sub
inc
lret
lret
jp
mov
push
insl
xor
mov
fs
sbb
into
and
mov
and
scas
jno
bnd
test
push
mov
rol
mov
mov
jnp
mov
sbb
test
je
sub
xchg
mov
fimull
mov
in
push
sub
push
mov
adc
jne
mov
cmp
daa
pushf
xor
mov
stc
sbb
adc
outsb
sbbb
aad
cmp
fs
dec
outsb
add
xor
push
in
inc
pop
hlt
pop
fs
mov
xchg
imul
js
xchg
or
das
sbb
mov
pop
andb
push
fwait
push
inc
popf
xor
push
mov
dec
stos
xor
shl
xchg
xchg
and
pusha
fcmovnbe
rolb
insb
fisttpl
fwait
sub
mov
cmc
dec
stos
jno
das
rcrb
imul
ret
or
mov
loopne
cmpsb
adc
mov
cmp
sbb
and
sub
mov
adcl
adc
ja
pop
adcb
insl
mov
outsb
shlb
jp
shlb
rcrl
xorl
mov
imull
lea
jp
popl
es
mov
pushf
dec
xor
fs
dec
movsb
scas
push
jns
jl
ja
into
icebp
or
repnz
js
insl
in
mov
mov
dec
ret
inc
ljmp
subl
jb
imul
or
movsl
out
daa
add
mov
enter
rclb
xchg
dec
lods
std
or
fstpl
in
addl
jmp
add
cmpsl
pop
jnp
xchg
mov
sub
call
jb
mov
dec
pop
pushf
mov
cmp
jmp
jmp
xor
adc
cli
in
dec
loop
fdivr
xchg
call
cmp
insb
scas
push
movsl
xchg
and
sub
dec
adc
adcb
adc
icebp
cltd
push
lret
dec
pop
jb
je
push
fwait
xchg
xchg
jl
sub
mov
in
add
stc
lret
inc
add
adc
pop
push
fmuls
jb
jmp
pop
test
or
or
mov
jnp
fiadds
outsl
movb
dec
dec
sub
jns
popa
ds
clc
sbb
popf
pop
mov
cwtl
enter
mov
js
jl
popf
stos
pop
push
stc
dec
or
insb
test
out
mov
xchg
lods
or
sti
insb
outsb
add
inc
lock
loop
jns
push
adc
and
push
or
outsb
stos
in
push
loop
mov
mov
test
faddl
push
fidivs
add
jns
cmp
ret
fisubrl
cmp
jecxz
movsl
mov
sti
dec
in
pop
int
add
mov
clc
cmc
push
popa
dec
push
adc
dec
add
xchg
rclb
rcrl
in
pushf
push
fcmove
cmp
mov
sbb
aad
dec
adc
cltd
enter
pop
std
je
sub
push
cli
sub
mov
rolb
hlt
js
cmpsb
push
movsl
pop
pop
add
into
insl
andb
in
call
cmc
outsb
sub
or
out
int
sub
loopne
or
cmp
call
addr16
sbb
jno
inc
xchg
mov
cmp
nop
mov
in
adc
jb
mov
ja
test
push
sbb
shrb
mov
ret
mov
push
and
dec
mov
add
push
insl
sub
sbb
pop
hlt
hlt
and
sub
shlb
repz
xor
bound
push
subb
jecxz
mov
inc
pop
bnd
add
mov
inc
sub
mov
mov
fidivrs
mov
fisubs
cld
xorl
gs
imul
loope
adc
mov
sbb
jbe
xchg
push
inc
jl
iret
out
xchg
lret
lds
mov
popf
fnsave
test
jbe
aam
push
cwtl
pop
testb
sub
cmc
inc
mov
jmp
orl
outsb
rorl
and
add
jecxz
mov
iret
add
jl
push
clc
pop
pushf
mov
test
lcall
jp
mov
dec
xchg
inc
aaa
mov
fs
out
mov
popf
cmp
mov
add
pop
ss
or
lahf
mov
and
mov
mov
hlt
pop
je
loopne
fsts
cmp
ja
test
icebp
mov
fdivrs
aaa
xor
jno
mov
test
mov
xchg
jge
lods
sbb
xchg
pop
push
lret
mov
xchg
mov
cmpsl
rcrl
jne
add
clc
iret
push
cwtl
ljmp
or
ss
hlt
enter
rcrb
push
jl
or
mov
icebp
add
out
icebp
nop
mov
mov
inc
int3
andb
pop
jmp
mov
inc
mov
push
xchg
push
cmp
jl
jns
scas
xor
push
in
and
lahf
nop
mov
int
scas
xchg
neg
insb
adc
dec
jecxz
arpl
mov
jecxz
adc
jge
gs
adc
push
jmp
adc
cmp
xrelease
and
andl
fs
jecxz
jmp
stc
sbb
xorl
iret
ss
push
sbbb
ret
and
ret
xor
sub
psllw
cld
adc
lods
lret
push
in
fcoml
sub
adc
icebp
jl
cld
push
in
xchg
mov
out
sbb
popf
or
sub
jnp
pushf
jl
cmpsl
sub
cmp
xlat
jb
sarl
xchg
cltd
mov
pop
and
dec
out
stos
pusha
xor
xchg
loop
test
jb
dec
mov
mov
out
imul
mov
imul
adc
subb
lods
pop
adc
rcl
lcall
loop
dec
cmp
dec
mov
sahf
cmc
sbb
nop
imul
lods
mov
sub
sahf
imul
dec
loope
repnz
xor
dec
inc
test
pushf
sub
xchg
dec
hlt
fsubrp
and
and
cmp
imul
mov
push
or
cmpl
in
lock
xor
jmp
aad
sahf
mov
sub
aad
icebp
mov
int3
nop
push
fs
or
jge
popf
mov
test
lahf
add
xchg
cltd
pop
fpatan
in
insl
sbb
out
shrb
sbb
add
mov
ljmp
sbb
loope
mov
cmp
aaa
dec
cmp
sbb
inc
push
rorl
push
pop
out
mov
xchg
push
shl
xor
mov
pop
int
xchg
data16
adc
jb
loopne
int
stc
aaa
push
jns
xchg
stc
mov
or
popa
pop
cli
inc
dec
inc
jp
inc
imul
push
xchg
xor
cmpsb
sti
adc
add
in
jp
out
push
outsl
mov
test
sbb
xchg
std
dec
pushf
jae
pop
cmpsl
ss
rcrb
sub
pop
fisubs
les
add
xchg
add
bound
test
mov
imul
or
xchg
adc
enter
or
popf
sub
jo
and
outsl
inc
jne
aas
out
dec
mov
divb
lahf
out
daa
mov
data16
stc
mov
sub
sbb
adcb
stos
insb
mov
faddl
subl
sti
push
insl
movsb
in
add
mov
pop
or
cmp
sub
push
xchg
aaa
mov
sbb
es
clc
pop
imul
lds
enter
outsb
mov
ss
inc
xchg
cmp
aad
lods
repz
fisttpll
movsl
lods
push
mov
xlat
mov
mov
xchg
jp
rorb
into
mov
ss
xchg
sahf
insl
jmp
add
cmc
sbb
stos
xchg
xchg
xchg
clc
mov
pop
insb
push
sbb
and
dec
dec
lds
add
sbbl
jecxz
leave
push
dec
imul
pop
xor
and
shl
adc
xlat
mov
or
mov
inc
stos
sbb
bound
push
in
mov
ja
cmc
call
scas
jno,pt
test
xlat
addb
cld
ds
sarb
mov
out
xchg
shl
cmp
clc
bound
mov
orb
adc
push
dec
xor
and
and
repz
shrl
shl
cmp
add
sbb
dec
inc
cmp
movb
inc
arpl
scas
scas
mov
and
mov
xlat
xchg
cmpl
mov
das
mov
pop
repz
dec
andb
jnp
push
pop
jmp
push
cwtl
jb
bound
xchg
mov
mov
bound
fld
loop
int
mov
in
jns
mov
mov
jmp
jg
sbb
faddp
repnz
dec
lods
or
mov
mov
shlb
imul
xor
rcrl
lds
mov
fwait
subl
or
fcoms
jg,pt
mov
push
je
lock
aas
add
popa
mov
mov
cmpsl
xchg
in
jne
roll
xchg
push
mov
out
xchg
pop
xchg
sbb
into
push
cld
xor
movsb
movsl
andl
movsl
out
rcrl
xchg
mov
pop
mov
stos
jne
daa
popl
adc
mov
and
stos
cld
xor
int
mov
enter
adc
scas
inc
out
cs
or
mov
push
lret
inc
mov
imul
xchg
pop
in
dec
neg
jbe
repz
dec
cmpsl
test
or
stc
popf
xor
pop
xorl
push
test
lret
mov
fsts
jo
in
rorb
sbb
std
inc
addr16
xchg
andl
lcall
jl
mov
mov
mov
out
pop
je
mov
sub
loopne
popf
ja
addb
std
sbb
das
not
cmp
lret
gs
fiaddl
outsl
xchg
mov
xchg
jno
xchg
clc
setp
ret
in
jg
test
xor
xchg
push
lcall
in
ret
ja
and
pop
and
mov
negb
daa
cmpsb
jg
jg
dec
scas
xchg
jp
test
pop
mov
shrb
sub
fldenv
sub
test
sbb
jnp
xchg
std
adc
out
sti
shl
fld
sbb
negl
addr16
repz
adc
sti
scas
addl
adc
into
lret
push
pop
mov
fsubl
lahf
data16
sbb
push
sahf
lods
jb
add
loope
seta
test
pop
or
mov
pusha
in
aam
mov
and
iret
cmp
popa
sbbl
cmp
idivb
insb
add
ret
jle
scas
add
test
popa
test
and
fstl
loop
adc
jno
ret
xor
cmp
or
rol
js
icebp
in
insl
je
mov
jo
mov
insl
ret
sbb
popa
adcl
mov
mov
insb
movsb
mov
bnd
sti
fwait
push
cmp
mov
add
adc
mov
and
hlt
mov
sub
daa
loopne
iret
xor
hlt
dec
and
sbb
mov
lret
xchg
das
xchg
add
shlb
fs
mov
sub
std
jmp
push
int3
pop
xchg
sub
push
fstpt
cmp
lea
mov
lahf
mov
add
ret
leave
popf
push
out
mov
cmp
jb
jns
pop
pop
gs
nop
jae
lods
repnz
pop
insb
sbb
adc
es
rcl
and
cld
mov
cmp
mov
shlb
nop
pop
adc
sub
data16
outsb
pop
push
add
fsubrs
imul
xor
xchg
push
inc
add
js
nop
jg,pt
into
cmp
inc
inc
in
in
pop
pop
adc
pop
dec
test
mov
repnz
adcl
adc
lods
or
fsubrp
cwtl
pop
out
pushf
xor
adcl
xor
push
divl
fs
sub
ljmp
pushf
stc
xor
xor
lea
dec
xor
jo
xchg
addr16
adc
mov
aam
dec
aam
jnp
inc
pop
xchg
je
adc
push
and
xor
mov
sbb
les
jle
fiadds
sbb
xchg
dec
add
jb
leave
mov
std
sub
push
pop
push
iret
fldt
xor
xchg
pop
and
mov
pop
addr16
shr
jne
lahf
or
add
stos
mov
xchg
adc
lea
cmp
test
sub
jg
leave
and
push
test
cmp
xlat
mov
or
push
movsb
cmovp
fwait
inc
jae
insl
push
arpl
mov
or
add
cli
or
cmp
sub
xchg
sub
or
lret
xor
jnp
dec
dec
cmpsb
mov
out
rol
xchg
int
in
into
cwtl
sbb
jo
jl
sar
xchg
fsub
orb
mov
cmp
mov
test
xchg
and
cmpsl
fiadds
aaa
aaa
add
ror
mov
fwait
dec
loope
mov
mov
xchg
aaa
hlt
outsl
dec
cmp
insl
jnp
lds
sbb
or
sub
sbb
in
into
in
and
mov
pop
xor
enter
inc
test
out
jl
jno
xor
mov
std
and
mov
into
push
in
popf
sub
cmpsl
insb
jle
add
lods
out
sti
out
in
das
and
ret
fldcw
pop
hlt
ret
insl
sbb
loopne
pushf
cli
xchg
aaa
in
ret
inc
nop
pop
cmpl
pop
and
vpsubd
adc
loope
sarb
clc
adc
daa
inc
frstor
inc
test
cmp
aas
ds
fistpll
sti
ljmp
sarb
dec
imul
push
int
leave
sub
jo
mov
jmp
jno
stos
mov
pop
inc
pop
popf
mov
jb
outsb
add
sbb
mov
jge
mov
or
jle
push
adc
call
inc
xchg
lock
dec
mov
xchg
sahf
fdivs
cmpsl
mov
adc
sbbl
sbb
jecxz
inc
pushf
data16
pop
ss
pop
cmp
stos
push
mov
ljmp
xor
lock
jb
in
das
cli
fisttpll
xchg
mov
or
xchg
push
out
sti
xchg
out
sti
sub
test
xchg
shrl
fiadds
xchg
xchg
pop
push
mov
ds
ljmp
mov
mov
mov
lret
mov
dec
lods
xor
pop
imul
mov
push
fildl
lret
or
mov
arpl
cmpsl
ret
dec
stc
jno
sbb
adc
inc
nop
add
lcall
jne
daa
in
sbb
orl
movlps
cli
fwait
leave
test
bound
jmp
xchg
add
nop
push
sbb
jo,pt
mov
testb
cmp
das
imul
pop
mov
pop
xlat
sarl
pop
xchg
adc
xchg
leave
fcmovnb
sub
daa
or
sub
mov
sub
loope
lret
mov
cs
std
stc
xchg
in
pop
outsb
add
fucomi
mov
sarl
pop
mov
ja
lock
lock
cli
pushf
shlb
jns
dec
push
call
int
test
jmp
jo
push
or
sub
push
in
lods
das
out
push
add
xorb
sub
imul
data16
je
inc
popa
fstl
or
and
nop
rorb
add
and
and
or
cmp
outsb
and
shll
xchg
lret
in
mov
xor
adc
cmp
adc
icebp
sbb
mov
cltd
std
rcrb
xor
cmp
ret
pop
aaa
push
cmp
fsubrs
shlb
nop
in
sbb
mov
incl
or
pop
lahf
mov
push
aas
js
and
mov
fstpt
dec
mov
push
adc
rolb
mov
mov
sbb
pop
and
sbb
xor
xor
xor
xchg
lcall
int
test
es
bound
push
xlat
adc
insb
leave
movsl
xor
dec
insb
ljmp
and
xor
xor
sub
lds
roll
sub
inc
pop
stos
repz
arpl
cmpsb
sbb
mov
pop
pop
or
lea
iret
les
movb
insl
push
dec
cmp
scas
arpl
jnp
mov
xchg
xor
xchg
sub
leave
repnz
jo
loope
push
mov
cmp
cld
add
jno
mov
pop
pop
jne
mov
adc
xor
pop
push
mov
mov
outsl
and
mov
xor
push
and
pushf
mov
xchg
inc
test
mov
pop
mov
aaa
cmp
push
push
ss
push
mov
xchg
lock
sbb
inc
mov
jl
loope
stos
sbb
inc
shrl
int
and
mov
repz
pop
gs
rol
or
sahf
jecxz
dec
push
leave
mov
and
cli
add
aas
ss
push
nop
pop
xchg
rclb
repnz
inc
testl
fstpt
out
xor
cmp
es
cmp
cli
dec
sbb
and
xchg
sbb
dec
add
out
add
mov
jns
inc
mov
clc
ds
loopne
dec
insb
mov
fbld
push
jl
into
cmpsl
push
sbb
push
aad
cmc
hlt
or
and
inc
push
and
jge
int
stos
incb
cmp
dec
outsl
mov
aam
cmp
push
ja
jnp
cmc
rcrl
add
lret
push
mov
add
mov
pop
inc
pop
mov
in
orl
mov
xchg
cs
sub
icebp
test
or
cmpsb
imul
xchg
sbb
hlt
sbb
cld
mov
xchg
andl
pusha
divl
add
cmp
add
cmpsb
lahf
out
fildl
sarl
or
subl
aaa
inc
daa
jmp
cld
subb
sub
sub
daa
outsb
stc
or
in
enter
in
imul
add
sbb
movsb
jp
out
adc
mov
outsl
or
mov
jo
pop
add
xchg
adc
fwait
scas
lcall
dec
dec
mov
jno
jmp
int
jnp
ret
lods
nop
arpl
fwait
sub
dec
bswap
xchg
mov
loope
adc
mov
cmp
mov
out
inc
punpckhdq
enter
mov
lods
add
mov
and
mov
mov
cmp
pushf
pop
or
mov
mov
cmpsb
xor
pop
mov
das
mov
loopne
pop
lods
cmp
sub
pop
xor
lea
pop
fidivl
lcall
lret
sahf
jo
jnp
sub
lret
roll
stos
mov
mov
sbbb
out
test
push
cmp
or
in
mov
inc
ret
or
xor
stc
or
dec
pusha
sahf
repz
adc
insl
xchg
clc
adc
daa
add
mov
cmp
xlat
mov
jae
push
mov
into
mov
enter
repnz
icebp
adc
sbb
into
mov
fcoml
leave
xchg
clc
pop
call
int
in
int3
out
push
stos
add
or
sub
repz
adc
sti
arpl
adc
mov
xor
ss
lds
mov
ljmp
mov
inc
push
iret
mov
int
sbb
xor
pop
test
sahf
fldl2e
mov
sarb
mov
out
cmp
jno
cmpsl
or
dec
push
loopne
dec
sbb
shrb
cmovbe
pop
mov
mov
inc
jno
add
fbld
es
dec
push
movsl
les
fld
in
sbbb
and
lahf
cmp
and
pop
es
sub
das
pmaddwd
or
xchg
jb
jno
mov
clc
and
clc
in
ljmp
lock
and
sahf
push
jae
std
xor
push
js
sub
mov
xchg
push
xor
sub
mov
add
hlt
stc
into
sbb
loop
lock
xor
movsl
jmp
cwtl
mov
mov
aaa
dec
aaa
pop
aam
in
xchg
cmc
stos
repz
mov
and
dec
cmpsl
aas
test
repz
mov
imul
add
push
popf
arpl
sub
imul
xor
jmp
inc
std
enter
cltd
lret
jne
inc
cmp
stos
mov
dec
sbb
dec
sahf
stos
xor
scas
aaa
test
jmp
lret
fldenv
mov
dec
movsb
cmp
fnsave
pop
pop
mov
fs
dec
repnz
sub
repnz
dec
test
ja
push
pop
loope
mov
int
inc
flds
stos
shrb
push
loop
mov
adc
mov
sub
cld
mov
sti
cli
jl
and
sbb
sbb
aam
inc
push
xchg
mov
movsl
jne
sbb
mov
jl
xor
outsl
jnp
sub
cmpsb
pop
cmp
cmpsb
and
ret
ret
jle
stos
pop
in
lcall
ja
jo
pop
aad
cmp
stos
cmp
stc
lock
mov
mov
shld
push
lea
adc
pop
loope
cmpsb
inc
cmp
movsl
cld
inc
fdivp
jnp
aad
adc
test
js
push
sbb
mov
push
ja
adc
int3
lods
mov
icebp
mov
pop
out
cmpsb
aam
add
jbe
adc
push
xchg
sarb
fnstenv
sbb
repz
sbb
mov
fwait
push
jg
mov
sbb
adc
inc
out
mov
in
sub
stc
imul
ret
jp
pop
outsb
dec
pop
xlat
jmp
mov
aaa
xchg
xchg
dec
inc
aaa
mov
sub
push
push
mov
cltd
ret
in
scas
cwtl
xor
mov
fists
loope
xor
cld
fucomi
xor
jp
cld
xor
inc
stc
arpl
insb
cmpsb
les
ficoml
lret
mov
jno
push
inc
int3
xor
fbld
int3
cmpb
pop
xchg
mov
mov
rorb
icebp
aad
pop
and
loope
jnp
lahf
fildll
sbb
int
popf
push
movsl
push
add
and
in
pushf
in
cmpsb
jmp
imul
aam
mov
daa
not
ret
movsl
dec
fisttps
xchg
sub
lret
in
push
in
aaa
or
inc
lcall
and
cmp
int
or
cmp
fmul
jns
push
stos
and
mov
add
xor
in
mov
sarb
cmpb
inc
xor
stos
xor
in
sub
outsl
add
aas
dec
pop
xchg
pop
inc
out
popf
mov
xchg
cmp
xor
ror
push
sarb
cs
push
mov
inc
xchg
pop
je
dec
mov
dec
shl
data16
lods
dec
test
xchg
iret
push
cmp
in
mov
mov
fwait
popa
pop
mov
or
cmpsb
aaa
fucomi
fsubr
and
mov
rclb
divl
pop
mov
in
pop
cwtl
das
mov
fnsave
sub
jge
sub
cld
stos
adc
insb
sbb
repz
pop
lods
mov
mov
push
add
insl
test
in
mov
xchg
inc
inc
es
mov
inc
cltd
call
popf
mov
adc
xor
cmp
push
insl
push
and
notl
jg
mov
adc
stc
push
lea
aam
mov
ja
or
cld
sahf
arpl
jae
outsl
mov
cwtl
loopne
mov
int3
xchg
lods
out
addl
pusha
sbb
xorl
xchg
orl
sbb
shr
nop
insl
add
adcl
sbb
or
in
addr16
adcl
cmp
adc
and
rcrb
in
aad
aas
loope
jb
push
pusha
sbb
dec
ss
fwait
in
sub
fiadds
pop
dec
adc
inc
stos
lahf
icebp
jo
push
in
cmpsl
or
adc
fs
or
xor
call
cmp
push
js
inc
xlat
negl
pop
out
out
and
mov
dec
mov
jg
cwtl
stos
das
pop
repz
pop
outsb
jl
aaa
mov
repz
stos
mov
dec
xor
dec
mov
aad
add
sbb
enter
mov
in
mov
nop
mov
jb
ljmp
sbbl
xchg
mov
pusha
aad
imul
data16
imul
add
mov
add
ljmp
test
iret
inc
lret
out
cmpsb
pushf
and
in
sarl
jecxz
out
imul
fs
xchg
inc
or
mov
add
add
add
mov
jg
dec
push
cs
add
ret
scas
and
mov
add
mov
mov
sub
jbe
popf
push
push
xor
repnz
lds
clc
sub
sbb
jmp
push
dec
mov
jge
push
imul
cmp
dec
mov
mov
filds
xor
or
pop
xchg
xor
pop
push
push
dec
add
or
insl
andb
je
sbb
mov
outsb
fwait
stc
xchg
movsb
jg
iret
and
pop
jae
add
mov
xchg
js
inc
xor
inc
and
popf
mov
inc
insb
jmp
lea
faddl
in
add
movsl
and
inc
push
mov
loop
mov
adc
sub
dec
pop
sti
repnz
cmp
cwtl
das
sbb
cli
pushf
xchg
jge
into
cmp
ljmp
adc
dec
mull
mov
clc
mov
cmp
mov
int3
les
out
sbb
push
cmp
cmp
push
dec
lock
mov
dec
sbb
inc
mov
shr
inc
and
sbb
cmp
test
lds
ds
in
push
inc
outsl
mov
jl
mov
jb
inc
aam
in
cmp
sub
roll
ljmp
adc
fs
icebp
xchg
negl
fsts
pusha
xorb
jecxz
cli
cmp
stc
xor
mov
sti
aaa
and
xchg
xchg
dec
lock
add
jl
or
push
xchg
dec
lods
jo
push
pop
mov
sub
mov
mov
int3
add
add
sti
jle
insl
add
lahf
cmc
in
xor
sub
dec
mov
or
ret
adc
ds
pop
rcll
sbb
pop
pusha
mov
cmpps
sub
dec
frstor
push
aam
and
mov
pop
call
repz
cmpps
js
lods
andb
jb
adc
adc
push
data16
xor
jp
rorl
nop
ret
adc
in
push
dec
jecxz
pop
lea
and
xchg
pop
jae
pop
lock
adc
dec
inc
push
js
pop
orb
sbb
pop
lret
mov
jmp
mov
mov
cmc
sete
cmp
xlat
fistps
dec
push
sbbl
or
ret
push
rcrl
push
dec
xlat
mov
pop
aad
jge
mov
xchg
push
rorl
ja
and
icebp
cmp
daa
inc
aas
mov
lahf
ss
test
vmovaps
aam
cwtl
mov
addb
xchg
sahf
adc
in
fcomp
mov
add
shlb
insl
insl
add
jp
ret
xchg
mov
aas
mov
pushf
data16
sub
mov
in
int
ljmp
xor
aam
or
and
enter
jge
push
push
mov
sbb
popf
pop
fmul
enter
push
std
or
sti
dec
pop
xor
pop
repnz
daa
cmp
in
adc
mov
xor
imul
sbb
fisttps
outsl
push
cltd
mov
adc
into
jecxz
push
cltd
loop
xchg
fldt
dec
out
or
insl
stc
sbb
push
add
push
fidivrl
xchg
fdivrp
fldenv
cmp
cmp
pop
or
mov
rcl
jo
addb
inc
push
dec
cmp
pop
jns
and
adc
in
andl
aas
loop
or
and
loope
fnstcw
and
push
cmc
cwtl
mov
andl
push
and
lea
outsb
jl
sbb
and
sbb
out
nop
inc
iret
inc
data16
int
push
and
cmp
mov
pusha
ret
jg
mov
sbb
pop
int
lds
pop
out
into
fcompl
inc
add
fidivl
mov
mov
lret
lea
push
movsb
push
lret
mov
sub
jl
xor
cmc
sar
rorb
add
pop
test
cmpl
push
mov
test
adc
cmp
imul
push
mov
dec
movsb
jecxz
sbb
fucomp
xor
mov
push
in
lods
mov
push
pop
mov
cmp
ret
sarl
das
scas
push
cmpl
inc
push
mov
iret
out
xor
jp
add
roll
movsl
sub
xchg
cld
xchg
cltd
loopne
out
test
adc
pop
jno
mov
xor
fadds
cmp
out
popa
or
es
pop
orb
popf
push
ljmp
outsl
loop
mov
jp
rcrl
dec
hlt
xchg
xchg
popf
mov
iret
push
jmp
int3
mov
mov
add
dec
mov
adc
cmp
dec
push
roll
test
mov
pop
cmp
push
mov
in
add
or
lds
mov
mov
or
sbb
push
cmp
jmp
jecxz
jmp
ret
add
mov
mov
push
test
dec
jbe
mov
cli
jne
pop
cmp
int3
hlt
jle
es
xchg
jb
andl
lods
int3
lods
int
dec
fistpl
mov
popf
dec
mov
push
adc
cmpsl
mov
movsl
cmp
xchg
fdivp
dec
cmc
ret
pop
repz
cmp
sub
jb
cld
lret
dec
and
push
je
or
xchg
mov
ficomps
mov
jae
cmp
bound
shll
scas
xorb
sub
mov
sbb
mov
mov
aaa
out
ret
outsl
cwtl
sahf
cmc
dec
pushf
pop
mov
bound
and
sbb
inc
gs
push
xlat
xchg
xchg
lret
add
jmp
sub
in
push
int
data16
ljmp
push
pop
push
add
icebp
shrb
ds
imul
dec
mov
lock
push
hlt
push
loopne
pop
push
mov
lods
and
pop
mov
jg
lock
and
pop
inc
pop
decb
fisttps
pop
adc
pop
adc
loop
ja
jnp
mov
in
f2xm1
aaa
or
shll
js
insl
xchg
pop
xchg
in
cmpb
push
movsb
mov
xchg
addl
filds
jmp
daa
add
in
cmp
push
dec
mov
lahf
out
lock
dec
xor
inc
xor
inc
sub
and
in
int
cmc
xchg
xlat
mov
nop
pop
divb
jns
inc
fistpl
int3
popl
es
bnd
insb
and
fdivrl
mov
jp
cmc
js
sbb
push
js
mov
inc
dec
push
and
nop
fsubr
clc
imul
adc
pop
stos
adcl
lods
lock
out
xchg
xor
add
outsl
mov
or
mov
sbb
mov
aas
mov
cmpsb
mov
xor
jb
xchg
imul
add
dec
mov
push
fcmovb
fnstcw
lods
not
leave
add
repnz
xchg
stos
es
aam
mov
cmp
or
mov
cmp
fs
cmp
out
pop
cmp
enter
cmpsb
into
stc
dec
push
movsb
push
fbld
jle
mov
inc
mov
lea
dec
pop
mov
cmpsb
xchg
xchg
pop
xor
movsb
mov
das
xchg
xchg
popa
lds
movsb
add
mov
pusha
out
sbb
roll
daa
inc
xor
divb
adc
pop
xlat
mov
cmp
fdivl
xchg
mov
dec
sub
movsl
lock
push
xchg
adc
adc
flds
jp
xchg
stc
push
addl
and
fldcw
push
les
jo
in
jnp
sub
mov
stos
shlb
sub
jb
xbegin
adcb
andb
jbe
cmp
mov
cmp
icebp
inc
movsl
push
loop
fstps
lret
test
mov
sahf
outsl
jb
push
andl
sahf
repnz
xchg
in
pusha
lret
or
orb
in
pop
stos
xor
push
mov
in
mov
sub
into
pop
jecxz
add
jle
jnp
cmpsb
cmpsl
ret
jmp
repz
xor
xchg
xchg
cmp
adc
in
pop
js
mov
test
popa
adc
and
fwait
xor
mov
cmpsl
mov
lahf
dec
mov
mov
fsubr
lcall
stc
shlb
pop
mov
lods
notl
daa
mov
sub
push
pusha
sub
inc
test
fbstp
dec
adc
pop
and
popa
int3
sub
leave
outsb
clc
out
insl
pop
hlt
popf
nop
add
movsl
mov
jno
clc
popf
adc
shrl
lods
stos
cwtl
jne
shl
pop
lods
in
lcall
pop
xor
or
in
sub
popf
outsb
cmpps
popa
out
jge
js
int3
arpl
push
jmp
movsb
in
pop
mov
push
cmpsl
sbb
int
xchg
mov
rol
jno
fisubrs
iret
push
add
inc
mov
out
cmpsl
pop
outsb
pop
adc
jg
cmp
cmpb
ficomps
xor
xor
adc
mov
jno
pop
sub
call
pop
xor
or
mov
add
add
mov
xchg
inc
and
data16
xchg
cwtl
push
pcmpeqb
popa
movsl
mov
cld
clc
push
or
rcl
sub
call
xchg
pop
cwtl
adc
xchg
iret
adc
mov
das
scas
fstpl
scas
jge
movsb
and
scas
scas
jp
mov
jns
call
shlb
fnsave
inc
xor
xchg
xchg
dec
iret
lret
jmp
cmpsl
repz
jns
fistpll
jae
loope
sbb
repnz
xor
jp
sub
jg
inc
dec
pop
sub
mov
testl
dec
adc
inc
stos
ja
xlat
in
jbe
push
call
fs
movb
lea
mov
aam
mov
inc
stc
into
xchg
loope
mov
fwait
jmp
es
jo
jg
cmp
sub
out
sub
pop
pop
sbb
adc
xchg
xor
jb,pn
testl
out
add
and
mov
mov
sbb
lahf
sti
mov
xchg
push
jnp
push
sub
lahf
add
inc
or
leave
loope
or
movsb
add
push
repz
in
addl
std
sahf
stc
mov
lds
mov
and
insb
shlb
test
stos
ret
dec
mov
xchg
popf
xor
movsl
in
mov
inc
vunpckhps
sahf
add
and
adc
push
loope
push
sbb
mov
dec
call
jnp
dec
stc
push
lods
movsl
inc
pop
mov
add
ja
jecxz
adc
pop
inc
std
push
jne
xchg
mov
pusha
rclb
inc
jbe
bound
adcb
in
lea
in
inc
add
test
js
pop
fldenv
cmp
push
push
jmp
and
xchg
js
pop
cwtl
cli
push
push
mov
imull
sbb
adc
rolb
and
inc
pop
xchg
xor
cmp
mov
cli
popf
pop
push
lock
aaa
inc
leave
stc
popa
and
popa
dec
fstpt
lea
outsl
pop
cmp
shll
adc
mov
jbe
xchg
cmp
popf
or
aam
xchg
shl
pop
insb
xchg
sub
xchg
add
daa
in
push
jmp
xlat
mov
pop
cli
jp
repnz
leave
fstl
cmp
push
inc
and
push
pushf
test
jne
test
mov
fistpll
out
cmpsb
mov
mov
testb
jg
mov
or
cmp
xchg
sub
mov
inc
jle
call
jbe
outsl
xchg
mov
data16
and
scas
inc
pop
push
in
stos
jmp
pushf
jle
adc
fwait
sub
or
cs
or
sbb
adc
int3
sub
imul
in
stos
xorb
outsb
test
lahf
out
xchg
jmp
cld
jnp
movsl
ret
into
arpl
imull
mov
jmp
mov
cmp
inc
movsb
icebp
hlt
mov
dec
subb
aam
mov
cmpsb
jne
pop
scas
in
shlb
lret
lods
mov
push
xor
and
hlt
xor
add
xor
or
ret
ja
stos
inc
pop
cwtl
loop
and
xchg
jp
mov
xchg
sbb
ds
mov
and
mov
pop
inc
ss
and
mov
xchg
lcall
push
imul
ds
fdivs
push
jmp
pop
inc
les
shlb
int
dec
mov
and
add
cld
sarl
data16
insl
sbb
mov
movsb
mov
icebp
cmpsl
jp
call
in
adc
push
mov
leave
mov
sub
xor
mov
loopne
es
jns
jae
mov
mov
fcoms
xor
cmp
hlt
xorl
lea
mov
inc
aaa
lret
les
jbe
loop
mov
jo
mov
addb
pop
lods
xor
bound
and
pop
repnz
fsubrl
mov
and
movsl
lea
or
jo
sub
iret
dec
push
adc
mov
mov
adc
jbe
dec
cmp
je
and
lock
imul
xchg
inc
pop
mov
shrb
mov
dec
jmp
ss
push
mov
adcb
int3
push
add
lock
xlat
out
orb
add
and
push
adc
xchg
scas
in
add
xchg
mov
jmp
or
jmp
into
scas
inc
hlt
lret
and
dec
mov
call
xor
dec
test
loopne
leave
xchg
nop
jo
jae
repnz
call
push
pushf
dec
pop
into
jb
lods
daa
or
leave
mov
adc
xor
push
lods
push
jns
or
js
and
ja
out
dec
ret
mov
andb
loopne
push
leave
sbb
mov
js
jno
outsl
scas
xchg
repz
sti
lods
ret
xchg
xor
xor
mov
and
xor
dec
inc
pop
ja
adc
test
lock
add
push
mov
pop
negl
aad
sbb
xor
das
scas
push
fsubr
test
sub
mov
adc
shrb
into
fidivrs
lahf
ficomps
inc
cmp
or
or
pop
mov
test
cmp
cmp
sub
mov
dec
jge
xchg
pop
mov
dec
jl
cs
movsl
addb
mov
int
je
popf
out
subl
das
rcll
jecxz
push
and
in
pop
out
sti
mov
les
adc
dec
mov
repnz
fists
lods
pop
imul
xchg
pop
movsb
repz
inc
out
jp
or
push
and
adc
mov
popl
sbb
push
out
xor
enter
mov
stos
push
or
mov
ret
xlat
cs
daa
lcall
push
in
test
jae
es
leave
outsl
cld
test
cltd
sti
sub
aaa
pop
pushf
cmp
rcrb
popf
sub
inc
add
jno
xor
jbe
and
push
pop
jae
aad
jnp
repz
xchg
movlps
cwtl
or
notb
mov
jb
push
scas
sbb
push
loope
cmp
repz
enter
add
mov
push
jns
fcoml
in
or
cli
add
push
or
jns
and
repz
std
mov
mov
add
pop
das
sti
hlt
and
mov
fidivs
fisubl
mov
in
inc
lock
or
je
xchg
jle
lods
mov
stc
add
test
enter
inc
jb
jl
insb
aas
jb
int
inc
sbb
push
loope
movsb
outsl
aaa
stos
mov
out
jle
mov
add
gs
pop
and
outsl
add
rclb
push
push
jo
sbb
sbbb
mov
fldenv
dec
fidivrl
and
aam
and
movsb
movsb
inc
mov
push
sub
orl
mov
sbb
test
pop
xchg
jmp
aas
outsb
imul
xchg
pusha
insb
jl
push
pushf
pop
out
adc
adc
xor
test
inc
lret
outsb
cld
aaa
add
sahf
adc
dec
popa
jno
leave
enter
push
pop
push
aaa
mov
xor
mov
jge
loope
add
inc
out
jne
arpl
add
mul
out
jecxz
inc
movsl
repnz
mov
sti
inc
mov
data16
xchg
jbe
rcll
stc
add
mov
xor
or
ja
push
mov
sahf
test
lds
jp
jl
sbb
fmuls
mov
adc
mov
inc
dec
sub
cmp
pop
clc
sub
sbb
cmp
push
iret
push
aam
xchg
or
mov
outsb
mov
jo
add
xor
xchg
arpl
scas
int
jno
stos
outsl
sub
lcall
sbb
mov
xchg
pop
xorl
adc
jae
mov
repnz
push
inc
into
filds
dec
dec
pop
jb
dec
cmp
pop
sbb
decb
jge
sub
xchg
and
std
in
mov
jmp
add
aaa
jbe
stos
adcb
xchg
push
pop
fmuls
testb
dec
dec
arpl
test
outsb
push
cs
cmp
icebp
xor
push
adc
cli
ret
xchg
inc
jecxz
mov
push
sub
add
pop
sbb
hlt
out
movsl
enter
cmp
testb
leave
mov
cli
lea
sub
push
xchg
xchg
xor
pop
sbb
popa
insb
rcrb
mov
cli
out
orb
jno
cmpsl
push
adc
push
mov
inc
xor
shrl
inc
or
fdivr
or
and
inc
loopne
into
mov
bswap
iret
imul
jg
cmp
sbb
pop
jo
les
inc
cmpsb
mov
mov
cltd
ret
and
mov
mov
jg
xchg
mov
loop
mov
pop
das
movb
pusha
adc
mov
inc
mov
int
mov
lods
sbb
sbb
dec
sbb
jge
jnp
sub
mov
insl
aam
jmp
out
scas
sbbb
aaa
jg
dec
les
test
mov
adc
pop
call
dec
stos
imul
push
bound
jae
sysret
out
mov
repz
push
loope
ret
xchg
ss
stos
rolb
hlt
rclb
call
js
js
je
test
popf
jle
xlat
test
rol
jb
jmp
mov
iret
mov
iret
push
jo
pop
pop
cmpsb
push
scas
pop
mov
es
pop
pop
push
sub
jns
sbb
adc
push
bswap
jl
pop
pop
fcmovu
movl
decb
test
mov
or
movsb
mov
push
mov
mov
or
ret
loope
cs
push
es
arpl
rcrb
test
divb
ljmp
jbe
push
xor
jno
inc
jno
ret
mov
mov
sub
adc
dec
cmp
inc
pop
push
ds
inc
sbb
push
dec
sahf
mov
fstpt
scas
inc
pop
loopew
cltd
sub
pop
nop
out
cmpsb
gs
mov
inc
adc
aaa
mov
cmpb
dec
mov
pop
jge
inc
xor
in
cltd
je
adc
jl
cmp
adc
cmp
cwtl
addr16
xor
fld
imul
adc
repnz
ss
sub
push
mov
mov
imul
mov
enter
push
movsb
dec
cltd
mov
hlt
xor
adc
push
leave
testb
test
pop
mov
jae
sti
bound
mov
insl
mov
add
mov
rclb
inc
es
dec
add
insb
cmp
pop
xchg
jge
movsl
pop
shll
je
lret
sub
add
xchg
jecxz
sub
popa
mov
xchg
flds
pop
call
push
repnz
daa
aaa
sbb
je
inc
in
aaa
inc
dec
jecxz
inc
jl
adcl
dec
ficoms
insb
or
sub
mov
ja
dec
loopne
xchg
push
push
mov
push
out
push
leave
arpl
addr16
inc
pop
jne
cwtl
rolb
sarb
pop
adc
pushf
sub
sub
mov
or
nop
inc
sub
daa
push
mov
push
sub
jmp
jp
mov
enter
mov
cmp
loope
jle
pop
mov
inc
pop
add
cmp
test
cwtl
sub
lcall
mov
push
or
jns
jae
adc
mov
paddq
shl
outsl
ret
insl
sub
mov
sahf
ljmp
mov
out
les
daa
mov
sbb
ja
rcll
ljmp
xchg
inc
sbb
in
iret
pop
subl
movsl
lds
mov
mov
inc
lock
cmp
xchg
flds
xchg
cs
into
pusha
push
adc
jbe
scas
push
cs
std
nop
push
inc
mov
jnp
popf
dec
xchg
ss
inc
and
dec
mov
cmp
sahf
cmp
inc
ret
dec
cmpsb
call
cld
ja
icebp
popf
das
les
push
or
xor
and
arpl
mov
cmp
insb
and
inc
push
mov
xlat
sub
sub
xchg
icebp
addb
movsl
stos
imul
jl
rolb
fs
popf
cmp
aaa
mov
fwait
mov
shll
out
jge
jns
mov
cmpsl
sahf
xor
xor
in
subb
fistps
sub
cmc
adc
jnp
fs
movsl
outsb
fildl
ss
add
push
dec
out
push
flds
rep
mov
xchg
sub
cmp
adc
aas
loope
sbb
sub
jge
mov
mov
cmp
imul
xchg
aas
aad
sahf
rcll
stos
hlt
or
push
cmp
push
jo
repz
addr16
sbb
add
fwait
ds
cmp
insb
jae
inc
stos
xor
iret
mov
add
test
insb
inc
jl
out
jne
xchg
lret
lret
xchg
sbb
or
aam
mov
mov
adc
push
and
pushf
cli
cmp
pop
xchg
sub
cmpsl
mov
ret
pop
jne
in
test
sbb
int3
dec
call
int3
jne
fiaddl
out
lcall
sbb
stos
dec
pop
popa
enter
scas
mov
add
mov
dec
scas
and
aaa
xlat
mov
xchg
push
insl
dec
loopne
mov
ljmp
into
pusha
add
ljmp
adc
jns
push
jb
mov
stos
lds
cmpsb
mov
jge
ret
jb
inc
push
adc
sub
daa
jns
rcrl
loopne
repnz
stos
out
imul
divb
sbb
aam
ja
mov
je
xchg
adcb
mov
adc
out
sbb
or
enter
insl
cltd
jo
sub
push
idiv
jae
cmp
cmpsl
bound
fbld
enter
push
ds
add
je
mull
sbb
inc
mov
imul
je
dec
mov
ljmp
mov
popa
in
das
out
jle
dec
imul
test
call
mov
cli
inc
and
mov
imul
daa
cmp
movsb
insl
test
int
std
xchg
mov
fadd
dec
out
mov
imul
stc
mov
pop
scas
add
dec
pop
add
aaa
into
movsl
iret
jno
mov
cld
push
or
ljmp
adc
xchg
push
mov
mov
rorb
xchg
mov
outsl
cltd
push
ret
push
nop
idivl
push
cmp
inc
cmc
pop
mov
mov
and
mov
mov
xor
push
add
jle
cltd
inc
sbb
sbbl
fstl
out
pop
inc
sbb
fmulp
ret
addr16
jmp
jae
ret
lea
jb
or
cwtl
scas
pop
call
arpl
jae
jnp
push
pop
repnz
test
fsubrp
arpl
ja
inc
lds
push
sbb
xor
fisubl
popa
stos
test
lret
dec
xor
xchg
and
lds
push
dec
mov
ljmp
xor
insl
inc
fstps
push
and
xor
hlt
mov
inc
push
in
jae
xchg
sbb
sbb
sub
aad
pop
clc
dec
xor
jp
scas
xchg
mov
sbb
push
imul
pop
lahf
adc
mov
xor
scas
sti
shlb
jnp
mov
fdivp
lret
test
xchg
and
mov
fidivrl
into
mov
inc
test
andb
outsl
movsb
lahf
stos
rorl
cmp
and
xchg
dec
inc
fidivrs
pushf
lods
dec
pop
fnsave
add
jbe
push
mov
sahf
shll
and
mov
ljmp
ret
test
and
xor
sarl
fnstcw
loopne
jns
pop
ss
push
out
inc
lods
iret
push
out
pop
out
test
and
gs
and
inc
fsubl
push
out
imul
mov
aas
and
in
xor
in
jmp
lret
ret
es
xchg
xchg
and
cli
shlb
fnstcw
push
dec
lcall
icebp
adc
and
lods
xchg
push
inc
clc
nop
popa
sbb
dec
pop
push
stos
ret
cld
aam
insl
adc
repz
pop
cmp
jl
pop
cmp
sbb
push
cmp
cmpsl
jbe
xor
enter
loope
cmc
jl
or
adc
add
fbstp
data16
pop
jo
in
std
pop
sahf
ret
mov
in
and
xchg
add
sub
hlt
hlt
fwait
adc
and
je
fbld
test
cmpsb
mov
push
sub
rcll
dec
loope
xor
add
push
jae
jne
ss
lret
lock
fwait
cld
pusha
sahf
mov
leave
ret
mov
adcl
mov
cmp
jmp
shll
mov
push
xchg
and
out
cwtl
mov
push
mov
cmpsl
jae
in
popa
sub
or
imul
jmp
mov
stos
inc
fcmovb
sahf
mov
push
loop
xchg
mov
iret
mov
jnp
or
das
push
xor
fs
sbb
xchg
out
push
sub
jns
int3
inc
push
cli
pop
push
in
lret
addr16
insb
cmp
ljmp
mov
outsb
push
loop
jecxz
addr16
jno
and
pop
jb
inc
inc
push
xor
or
loop
fs
shlb
inc
jmp
xchg
loope
arpl
aas
sbb
jl
sbb
stos
mov
js
jnp
or
jecxz
dec
pop
jae
inc
mov
lahf
inc
push
in
add
sub
dec
mov
add
mov
lea
jle
jl
or
std
push
fwait
iret
sbb
push
sti
jmp
mov
xlat
and
mov
fwait
mov
sti
fwait
cmp
xchg
mov
fcompl
pop
sub
pushf
jbe
mov
das
xchg
or
cmpsl
test
inc
outsb
adc
shlb
call
aas
lret
mov
xlat
repz
test
push
leave
stos
add
data16
sub
xchg
scas
xchg
or
mov
xlat
es
ss
std
cli
ret
fs
pop
add
test
je
pop
add
pop
mov
fsubrl
fyl2x
push
mov
push
pop
xorb
mov
mov
pop
mov
js
dec
call
or
sub
pop
pop
sti
jbe
lds
jecxz
in
nop
jo
mov
in
push
call
lea
mov
pusha
jp
or
ds
lret
pop
pop
fsts
jo
adc
fnstenv
ss
jp
lods
inc
and
xchg
push
sbb
inc
jae
jge
aas
xchg
outsb
xchg
lret
mov
adc
mov
bound
fdivl
sbb
push
pop
and
mov
xchg
in
or
inc
cli
sub
sbb
jle
xlat
mov
aaa
das
mov
js
test
scas
into
in
dec
dec
push
pop
cmc
push
popf
ja
jp
jl
sub
cld
outsl
insl
cld
and
cltd
xchg
mov
jb
cs
popa
les
jle
or
stos
mov
lea
sahf
stc
adcl
push
movsl
mov
xlat
sub
sub
mov
lcall
sub
mov
add
mov
scas
cmp
loopne
mov
ret
sahf
xor
xor
cmpsb
arpl
or
mov
cmpsl
repnz
and
jbe
nop
pop
sub
insb
add
cli
popf
stc
ss
mov
or
jl
in
cltd
add
fldl
je
stos
mov
or
fdivrl
inc
int3
cmp
leave
jbe
icebp
mov
fwait
cld
imul
push
push
das
mov
dec
hlt
mov
cmpsb
mov
bound
push
pop
call
xchg
scas
or
xlat
mov
sub
cmp
sahf
sub
negl
xchg
and
popa
rorl
clc
imul
popf
adc
add
movsl
xlat
and
cmp
mov
mov
out
sbb
outsb
clc
xchg
stos
int3
push
inc
aad
push
cwtl
ret
in
out
orb
push
mov
leave
pop
or
inc
fildl
mov
bound
aam
lods
jle
sti
mov
mov
dec
mov
call
fcmovnbe
pop
mov
out
call
dec
mov
dec
push
movsb
insb
pop
xor
and
andb
and
stc
jp
out
push
stos
inc
pop
fcoms
jge
kmovb
loopne
cmp
cmp
ds
popl
repnz
insb
lcall
dec
jbe
ss
sbb
int
lret
push
xchg
sbb
inc
loopne
pop
or
mov
setp
repnz
inc
sbb
lret
push
mov
or
push
and
inc
or
sti
test
sub
dec
stos
mulb
add
push
push
or
into
cmp
pop
into
ljmp
adc
test
push
xor
mov
and
push
or
mov
mov
pusha
stos
ds
adc
and
jecxz
roll
adc
add
ljmp
push
in
dec
cmp
cmpsl
add
cmp
push
in
iret
sub
lcall
jl
les
lret
dec
jne
pop
je
adcl
jmp
in
mov
inc
push
or
sub
ja
enter
insb
decb
mov
xchg
jae
mov
cs
pop
lock
xlat
out
inc
adc
mov
fdivp
std
fadds
fdivrl
push
mov
aam
add
ret
mov
cmp
xor
pop
mov
mov
add
mov
lock
add
dec
dec
and
aas
jecxz
dec
lds
out
lahf
mov
inc
enter
add
mov
inc
push
lret
fs
pop
and
ljmp
jecxz
mov
adc
adc
arpl
mov
sbb
into
popa
adc
insb
in
or
pop
jl
and
ja
cmpb
and
and
push
aaa
loope
lods
or
in
add
cmp
gs
pop
int3
imul
xchg
xor
call
adc
ret
or
dec
es
js
mov
adc
mov
jns
inc
jg
addb
loopne
and
add
cmp
push
and
out
loop
test
jge
adc
xlat
lea
push
xchg
test
das
jno
addr16
lods
xchg
lahf
and
stos
xchg
xchg
and
fsubrp
xor
shr
push
icebp
pop
ss
and
sbb
ret
mov
add
sub
mov
sbb
xchg
jmp
outsl
and
mov
dec
and
adcb
adc
lret
sahf
mov
iret
xor
add
or
sbb
mov
inc
pop
jmp
frstor
icebp
mov
inc
and
rclb
mov
add
sub
pop
cmp
push
int3
and
mov
ds
xor
mov
lods
das
aas
test
test
mov
into
cs
pushf
insb
and
in
mov
out
cmpsl
pop
and
je
cmp
inc
xlat
inc
jno
jo
fsub
cmp
int
dec
cmp
sbbl
call
push
imul
push
cmp
mov
cmp
stos
dec
icebp
mov
xchg
mov
rcr
add
cmp
mov
mov
cmc
mov
cmp
fnstenv
dec
bound
add
mov
push
lcall
inc
push
out
mov
sub
mov
fistps
sti
mov
mov
add
inc
fidivs
adc
jbe
mov
call
add
push
and
mov
pusha
scas
add
faddl
notb
cmp
scas
mov
or
mov
cmp
jo
lods
stc
stc
push
pop
mov
mov
adc
push
ja
or
xchg
dec
lret
incl
xor
mov
out
push
inc
fadds
push
testl
mov
shll
es
ljmp
call
xor
test
scas
jmp
ljmp
jno
sbb
jns
jnp
cli
lock
add
mov
and
mov
xor
les
pusha
and
or
dec
stos
out
xchg
jo
mov
sbb
add
scas
pusha
movsl
and
lods
xor
inc
arpl
sbb
mov
jge
and
pop
leave
iret
lds
lock
push
lret
bound
ljmp
mov
dec
jmp
stos
sbb
jns
add
or
arpl
mov
rep
jle
jecxz
enter
mov
or
pop
xor
pop
ljmp
push
test
jg
xchg
pop
into
adc
ret
testb
pop
jae
jbe
jo
scas
outsb
push
sti
dec
push
pop
cli
sbb
or
call
sbb
pop
loopne
inc
shl
xchg
sub
pop
lds
dec
or
popa
or
test
enter
dec
xor
test
xor
dec
dec
cmpsl
movsl
mov
insb
icebp
mov
in
test
int3
adc
fs
jle
sbb
pop
mov
and
and
movsl
dec
daa
mov
inc
nop
scas
repz
hlt
lea
adc
pop
orl
hlt
and
loope
outsb
pop
inc
subl
and
sub
js
fidivl
push
sbb
mov
les
pop
sbb
mov
mov
mov
mov
inc
sarb
push
lret
data16
dec
push
sbb
xchg
mov
pop
push
cs
sub
aas
and
mov
imul
mov
jle
in
xor
mov
adcb
or
movsl
fs
filds
bound
adc
mov
mov
scas
ret
lock
pop
xchg
jl
arpl
pop
jb
and
add
adcl
mov
sbb
insl
int
xchg
fwait
xor
cwtl
sti
nop
xchg
mov
mull
cltd
fcompl
pop
cmp
fidivl
xchg
mov
in
push
push
jl
test
sarl
mov
mov
jecxz
test
dec
arpl
xor
cs
hlt
inc
mov
mov
push
cmpsl
add
decl
xchg
lods
mov
pop
movsl
push
insl
fsubr
out
xchg
push
mov
xchg
xor
sarl
pop
cli
loop
and
ds
testb
mov
and
in
fcmovnu
dec
and
mov
pop
shll
jbe
or
out
mov
add
and
test
push
jmp
mov
dec
xlat
cmp
hlt
sub
les
mov
cmp
mov
jmp
sarl
mov
scas
push
jp
cmp
xchg
add
xor
and
xchg
sbb
jge
aad
pop
xchg
shll
in
cmc
jb
sub
mov
sub
cmpsl
pop
dec
and
push
add
push
daa
int3
gs
mov
imul
sti
fwait
ljmp
subb
inc
or
xchg
sbb
flds
or
imul
fcoms
and
push
mov
mov
cmp
imul
push
inc
mov
shlb
cmc
pusha
jbe
xchg
pop
rcr
jae
cmpsl
movsb
imul
mov
cli
inc
into
add
popa
push
mov
fiadds
jbe
inc
fiadds
and
arpl
mov
add
fadds
leave
jno
mov
adc
fmull
loope
lods
ljmp
ljmp
stc
inc
push
adc
pop
pusha
mov
aad
gs
ljmp
xchg
pop
fsubp
gs
inc
inc
loop
ja
insb
pop
sbb
loopne
add
mov
pop
jno
or
mov
aam
dec
lods
pop
out
outsb
icebp
mov
movsl
xor
rcll
aaa
pop
mov
add
mov
and
lcall
jmp
mov
ss
bound
ficoms
cld
pushf
cmp
mov
sbb
ds
inc
popa
clc
jne
lds
xchg
sbb
lcall
dec
andl
sub
ja
hlt
mov
xchg
adc
cmp
frstor
addr16
pop
in
stos
shl
cltd
scas
scas
jl
popa
push
dec
jecxz
test
in
mov
push
pusha
cmc
jl,pt
fnstenv
pop
mov
or
mov
push
ret
lods
aam
sub
repz
sub
in
sbb
addr16
arpl
adc
pop
or
scas
out
stos
loope
fcoml
xor
outsb
js
mov
inc
jmp
and
pop
repnz
inc
leave
pop
cltd
jnp
sbb
jp
imull
jle
lea
testl
adc
cmc
push
out
int3
lret
xor
rorl
mov
xor
mov
jne
clc
sahf
inc
bound
dec
inc
sbb
aas
adc
push
inc
sub
sbb
aas
fcoms
in
flds
loope
clc
pusha
push
sub
jno
stos
xchg
les
dec
jecxz
xorb
jns
ljmp
cmp
outsl
push
popa
clc
popf
or
adc
or
jns
sbb
mov
aad
inc
adc
jbe
decb
je
push
mov
outsb
gs
hlt
cmp
inc
aaa
jno
sahf
cmp
insb
scas
lret
iret
jl
aas
adc
xchg
mov
rorb
sbb
pop
aam
mov
cli
insl
xor
push
dec
mov
mov
or
push
push
mov
fwait
lods
xchg
fcompl
in
push
push
push
add
in
fs
mov
or
xor
mov
push
mov
pop
cmp
mov
loop
mov
sahf
shr
icebp
mov
int
mov
in
jl
pop
cmp
data16
mov
mov
inc
fdivs
cmc
mov
cwtl
pop
aaa
cltd
cmpsb
push
fnsave
push
fsubrs
push
std
jge
cwtl
testb
inc
jecxz
dec
movsl
jmp
xlat
push
mov
out
js
ror
lods
test
mov
int
aaa
or
in
sub
clc
sti
inc
lock
arpl
leave
pop
addr16
and
dec
pop
inc
js
mov
test
pop
xor
faddp
loope
fwait
in
std
adc
or
mov
ds
fs
bound
adc
or
xor
mov
inc
pop
nop
push
fidivl
cltd
xor
and
lret
xor
jbe
xor
push
jb
jnp
andb
or
or
pushf
shrl
testb
div
leave
mov
pop
mov
leave
jmp
hlt
pop
fnstcw
jl
inc
pop
mov
jg
xlat
lea
mov
pop
and
in
xor
xchg
dec
jmp
xchg
push
dec
cmp
popf
push
js
cmp
push
mov
into
mov
or
cmp
jae
sbb
adc
aam
outsb
mov
stos
mov
xor
lret
daa
mov
scas
xor
mov
and
cwtl
clc
mov
pop
dec
xchg
mov
fisttpll
nop
lds
and
movsb
scas
mov
bound
jbe
push
pop
leave
int
jo
je
xchg
mov
mov
jnp
sub
cmpps
jns
cmpsb
lret
clc
push
pop
aaa
push
mov
insl
sti
pushf
imul
inc
fcomp
sub
xor
aaa
sarl
push
subps
dec
data16
enter
lret
dec
push
fmuls
and
mov
cltd
and
sbb
xlat
sbb
sbbl
mov
dec
jecxz
mov
rclb
dec
push
fs
lock
mov
int
cmp
jno
jmp
into
ljmp
jmp
mov
ret
fdivrs
dec
pop
pop
cs
int3
add
dec
push
mov
sbb
imul
or
xchg
out
popa
cmc
mov
hlt
mov
pop
ds
arpl
pop
stos
inc
jl
ds
xorl
mov
addr16
nopl
fld
inc
and
in
sbb
dec
xchg
sbb
clc
mov
call
jmp
sbb
push
repz
mov
and
jp
add
loopne
cmp
mov
or
fidivl
nop
out
clc
loopne
dec
add
dec
loope
push
aas
loop
adc
xor
push
addr16
xchg
sti
xchg
ret
sub
out
push
xlat
fldenv
dec
sbb
sub
jae
xor
fisubs
inc
adc
or
sub
js
js
or
mov
loopne
pop
dec
repz
add
jecxz
push
lahf
jno
lret
mov
jp
xor
mov
aam
mov
outsl
jl
jp
jle
imul
mov
pop
jp
push
outsb
insb
jg
ficomps
jno
jp
xchg
mov
sbb
and
push
lret
xchg
mov
adc
in
test
loop
iret
das
test
sbb
push
jb
cmpsl
or
inc
int
testb
mov
fsubrs
push
cvtps2pi
test
sahf
push
push
dec
mov
push
scas
or
iret
adc
mul
andl
or
xorb
sub
dec
inc
mov
sub
and
inc
mov
andb
mov
mov
sbb
jmp
or
clc
pop
sahf
sub
adc
push
cmp
out
push
sub
sarb
inc
add
stc
popf
mov
xlat
cs
mov
lret
xor
imul
push
inc
mov
xchg
dec
dec
pop
imul
cltd
jbe
imul
cmc
push
or
add
sbb
out
xchg
inc
and
and
cmp
iret
pushfw
in
cli
and
pop
in
push
nop
xchg
out
popf
mov
and
dec
lcall
mov
push
movsl
lock
or
mov
stc
cmp
fiaddl
xchg
movsl
mov
xorps
push
pop
outsl
add
hlt
adc
mov
or
lcall
ret
mov
mov
adc
js
pop
mov
push
and
jne
sbb
xchg
sub
push
sub
lcall
cmp
cwtl
les
xor
xor
pop
mov
out
mov
inc
or
add
rcrb
mov
add
outsl
xor
inc
mov
pop
or
inc
or
daa
push
xchg
mov
xchg
jbe
ss
stos
cmc
mov
xor
or
inc
mov
mov
inc
mov
jp
fsubrs
cmp
pop
mov
adc
int3
inc
loope
push
or
stc
cmc
jle
xchg
sub
inc
aam
aaa
out
imulb
fidivs
ret
sbb
cmpsl
pop
shrb
or
or
test
sub
gs
inc
pop
add
xlat
xchg
jp
cmp
pop
adc
clc
leave
rorb
or
pushf
lods
aas
mov
push
iret
arpl
into
mov
mov
and
xor
add
jne
push
lods
cmp
pop
scas
cmp
stos
aas
ret
shl
dec
sbb
cmc
pushf
xchg
sbb
lahf
je
daa
js
adc
cs
jp
jno
in
mov
xchg
xchg
ja
lods
jl
sbb
dec
jns
arpl
es
bound
lcall
jb
add
jae
call
mov
stos
sti
jns
setne
add
sbb
push
sbb
jns
leave
andb
mov
push
leave
sbb
push
test
lock
nop
add
cmc
adc
arpl
cmp
adc
clc
leave
out
je
arpl
xlat
test
dec
sub
aad
jmp
js
loop
test
mov
mov
add
or
daa
test
jo
testb
lods
or
xchg
int
pop
loope
mov
add
shrb
shlb
pop
adc
xor
adc
in
inc
xchg
xor
adc
adc
mov
fimull
arpl
push
daa
mov
sbb
imul
sti
cmp
mov
in
rol
sub
jmp
add
js
cmp
faddl
cmpsb
push
mov
mov
pop
addl
add
insb
inc
flds
xchg
jnp
in
aad
incb
popf
add
int3
xchg
add
pushf
jp
add
inc
push
fs
push
movsb
lock
pop
jbe
scas
push
jo
imul
rcrb
inc
jmp
cmc
pop
lahf
jp
aam
filds
cmp
es
mov
push
jge
add
rcl
cmp
cmp
mov
sbb
popa
je
xchg
mov
idiv
jb
cmc
dec
or
flds
pop
dec
into
mov
cltd
mov
and
adc
data16
sub
push
pop
mov
mov
icebp
xchg
mov
jnp
ret
mov
pop
jmp
int3
add
repnz
dec
pusha
hlt
jno
mov
pop
sbb
mov
mov
dec
mov
in
cs
push
dec
xor
daa
push
cmp
dec
sub
iret
xchg
mov
jmp
aad
add
lret
jmp
lds
cmc
or
fs
xchg
add
push
mov
sbb
fs
push
dec
int3
ja
mov
xchg
and
jo
dec
push
out
inc
and
call
add
pop
les
andl
push
jmp
out
adc
cmp
push
xchg
pop
test
jne
lods
out
out
adc
icebp
pop
fildl
and
mov
xchg
sub
sarl
pop
je
sti
xchg
insl
xchg
movsb
cmp
outsl
jo
pop
fisubrl
fmuls
mov
jmpw
sub
es
fisubs
cmp
jmp
stos
imul
loop
mov
adc
iret
xor
mov
dec
cld
aas
adc
shlb
psubq
je
sbb
sti
inc
fwait
adc
and
orl
fisubrs
cmp
push
dec
push
inc
mov
pop
mov
dec
es
int
icebp
adc
pop
nop
in
sbb
fbld
sbb
outsb
jg
mov
fmuls
iret
cmpb
lods
out
pop
into
je
stc
sbb
fbstp
mov
sbb
dec
sub
cli
cmpsb
imul
lds
mov
imul
sbb
lock
sub
dec
loop
push
sub
das
pop
xor
test
test
test
out
add
fdivrs
dec
insl
rcl
repnz
hlt
icebp
repnz
hlt
popa
iret
xor
jnp
mov
jno
lds
js
mov
add
pop
imul
mov
xchg
xchg
loop
sbb
xor
inc
mov
cmp
xor
inc
add
xor
mov
push
jmp
sbb
sbb
adc
inc
cld
dec
test
inc
ret
cmpsb
mov
je
fsubrs
cmp
dec
fs
test
xchg
adc
bound
stos
mov
push
push
leave
movsb
sub
xlat
push
add
es
push
mov
or
int
shrl
mov
fstpt
addl
pusha
sub
add
stos
clc
cmc
pop
pop
outsb
les
xlat
pop
xchg
popa
jmp
pop
pop
das
mov
add
pop
lock
lea
mov
push
std
cltd
adc
inc
iret
ret
ss
jne
jl
sub
cld
mov
jno
sub
xor
inc
jnp
inc
and
xor
pop
fidivrs
push
stc
jnp
in
mov
test
push
mov
cs
adc
xlat
inc
rorl
pushf
imul
ljmp
add
jo
sbb
xlat
jge
leave
pop
insb
adc
cmp
aam
shl
push
mov
cmp
jo
icebp
mov
fcoms
mov
aam
mov
push
test
mov
lods
iret
scas
loop
sub
lret
in
enter
out
lcall
xor
pushf
cld
cmc
mov
lret
stos
dec
inc
loope
movl
sbb
adc
or
push
push
jle
push
dec
push
or
shlb
pop
sbb
gs
inc
scas
notl
jo
lock
je
mov
loopne
je
add
pop
call
dec
cmp
into
cmp
shr
pop
enter
xchg
dec
loope
sbb
ret
mov
rcrb
cwtl
fistl
or
cltd
inc
iret
or
inc
arpl
cltd
aam
cwtl
das
cmc
mov
sub
bound
aad
xchg
push
dec
js
out
shr
les
inc
mov
lret
cltd
mov
fsubl
jbe
mov
sbb
push
sbb
in
lcall
sbb
sti
repz
arpl
rcll
ljmp
sahf
xor
ja
cmpsl
test
xchg
subl
pop
jno
dec
pop
iret
push
aam
adc
xlat
push
les
mov
lods
aam
inc
inc
dec
adc
inc
out
shl
loopne
das
mov
sub
xchg
dec
mov
sti
mov
jno
dec
sub
fsubrs
dec
sub
mov
testb
pop
cmp
fcmovu
ror
cmpsb
or
fsubrs
ljmp
cmc
sar
imul
movsl
movsb
fdivrl
adc
lahf
push
scas
les
push
jp
lock
fwait
popf
out
sub
int
push
outsl
lahf
shll
out
mov
adc
addl
mov
mov
and
mov
mov
ficompl
cld
push
je
fs
test
movsb
das
or
popa
add
adc
lock
cwtl
cmc
stos
imul
out
test
or
xchg
mull
and
mov
mov
mov
cltd
int
pop
mov
cmpsb
mov
or
or
sub
push
or
xor
repz
add
push
loope
xor
or
pusha
push
mov
flds
mov
dec
inc
sbb
fwait
mov
iret
adc
ss
or
test
adc
popa
lea
out
pop
xchg
out
cmp
ds
mov
push
push
cmpsl
mov
or
mov
hlt
or
pop
push
xor
fwait
add
xchg
int
mov
push
push
scas
xchg
add
push
adc
or
test
or
movsl
cmp
leave
lret
outsb
dec
push
push
mov
xchg
insl
dec
testb
push
mov
and
lock
mov
loopne
cmovnp
imul
test
xchg
inc
inc
sbb
notb
call
add
inc
jns
mov
jo
cmpl
cmpsl
sbb
mov
cmp
testl
push
aad
adc
or
sub
sub
jp
subb
pop
lock
mov
mov
mov
dec
mov
push
rcrl
cmp
mov
clc
insb
fmuls
sub
jae
push
aaa
lcall
add
scas
lock
push
pop
int
idivl
push
out
jecxz
fnstcw
inc
dec
inc
aam
jns
dec
out
das
subb
hlt
cmp
pusha
add
test
lahf
push
mov
adc
lret
jb
jbe
fwait
movsl
mov
add
push
pusha
jo
push
mov
dec
sub
jb
sub
inc
addl
fsts
adc
inc
fwait
stos
adc
vpminub
mov
push
xchg
sub
push
divb
insl
lret
cmp
mov
pop
or
addl
pop
repnz
cmp
xchg
adc
lock
fdivl
in
jp
and
lret
mov
inc
mov
aaa
popa
out
push
mov
push
in
addr16
inc
aaa
pop
out
jne
push
mov
xor
adc
ja
xorb
in
sbb
aam
icebp
jns
cmpsb
stc
ret
xlat
push
dec
push
dec
add
enter
sarb
push
rol
pop
add
sbb
push
or
ja
adc
xchg
push
pusha
call
cmp
in
std
lods
les
pop
sub
adcl
fisubl
sub
icebp
sub
inc
stos
data16
test
adc
test
das
fcmovnu
data16
push
je
xlat
or
xor
daa
mov
cmpsl
cld
or
jbe
aas
fsubs
push
adc
jle
xchg
and
pop
cmp
rorb
xorb
imul
outsl
and
mov
sahf
loop
jecxz
mov
pop
inc
sbb
cmp
mov
mov
cli
xor
icebp
cmpsl
aaa
mov
bound
adc
dec
or
mov
lret
push
xchg
iret
inc
fs
add
and
sbb
test
mov
scas
sub
out
cmp
pushf
pusha
out
mov
xchg
cltd
aas
xchg
jns
mov
adc
aad
ds
jmp
mov
mov
mov
jb
int
mov
push
insl
jns
xchg
xor
mov
scas
ficomps
add
cwtl
leave
cmc
stos
xchg
rolb
cmc
xor
mov
push
bound
movw
lock
mov
repnz
std
xchg
jo
mov
mov
sbb
pop
addr16
add
sbb
aad
sbb
fldcw
lods
mov
mov
stc
push
adc
inc
pop
insb
push
int3
fdivrl
xor
mov
or
pop
sbb
test
pop
adc
fwait
cmp
stos
mov
xrelease
jp
push
push
sub
pushf
push
dec
xor
pop
mov
xchg
xor
test
cmp
lahf
in
stos
push
test
mov
mov
shlb
popa
dec
in
cmpltps
je
inc
popa
xor
cmp
inc
testb
cmp
scas
cmc
cli
pop
insb
sti
scas
xlat
add
jp
aaa
hlt
mov
cwtl
add
es
mov
jecxz
xor
and
mov
add
aaa
xor
mov
jle
xchg
mov
mov
cli
rcll
addb
mov
mov
cmp
sub
xchg
lahf
jmp
ljmp
orb
nop
jae
testb
incb
or
cli
xor
sub
fdivrs
mov
add
mov
loop
in
test
les
pop
imul
ficoml
dec
mov
cmc
test
xchg
lahf
or
dec
outsb
popf
jno
cmpsb
call
adc
mov
out
xchg
mov
lahf
bound
in
xchg
pop
sbb
jmp
das
sbb
cmp
aas
in
cmpl
push
dec
pop
stc
pop
dec
pop
mov
movsb
bound
pop
cli
inc
dec
sti
xlat
mov
pop
sarl
adc
add
inc
movsbl
mov
cltd
fwait
lds
inc
lock
fmuls
decb
mov
sbb
jg
bnd
mov
jg
xchg
pop
call
mov
jmp
shrb
jb
mov
les
insb
mov
sbb
cmpsl
lods
enter
xchg
jle
jge
or
gs
mov
inc
jmp
xchg
sarl
sbb
xchg
aas
pop
std
mov
std
pushf
js
repnz
or
ljmp
xchg
popa
clc
add
out
popf
ds
aaa
push
cmpsl
aaa
mov
xchg
pop
inc
jmp
imulb
push
pop
jmp
jge
mov
sbb
outsb
lock
pushf
jb
inc
outsl
cwtl
and
mov
scas
hlt
ficoml
or
push
testl
lret
in
cli
xchg
push
icebp
loopne
xor
rol
sti
jne
shlb
pop
sbb
fsubr
imul
daa
test
enter
push
pushf
xchg
dec
out
icebp
and
loopne
frstor
inc
pop
xor
xchg
out
jb
or
push
mov
sbb
popf
dec
dec
call
fcmovnbe
shll
psubb
mov
push
mov
jge
jbe
insb
icebp
or
addr16
out
cmp
in
fstps
xchg
xchg
jmp
pusha
and
xchg
aam
or
test
adcl
or
repnz
stos
in
std
xor
lret
xrelease
and
mov
adc
adc
jp
arpl
dec
stos
push
add
loopne
repnz
jge
lret
movsb
xchg
push
sbb
mov
add
cwtl
push
ret
lods
pop
call
mov
sbbl
cmp
imul
aad
pop
mov
imull
xchg
cmpsl
sbb
sbb
add
pop
stos
and
and
gs
cmc
test
inc
jl
lret
jno
mov
pop
out
inc
bound
cmp
loop
mov
lea
mov
shll
pop
icebp
inc
test
sbb
data16
lret
sub
and
jns
je
mov
cmp
add
cmpsb
imul
cli
divb
adc
es
fwait
mov
dec
lods
in
mov
sub
in
sti
xchg
fidivl
jae
outsl
iret
push
nop
les
fidivs
mov
gs
flds
mov
loopne
mov
mov
jge
mov
mov
mov
pop
sbb
icebp
jmp
sub
stc
or
jmp
stos
xchg
inc
cmpsb
inc
aaa
xchg
adc
gs
xchg
or
ja
nop
sbb
jno
xchg
xchg
and
fisubl
and
adcl
out
decb
rcll
jnp
adc
adc
cli
mov
jl
movsb
add
jle
jle
jmp
stos
cmp
fistps
rol
loop
sub
mov
lahf
xor
inc
repnz
push
movsl
in
xlat
push
in
pop
fnstcw
data16
mov
push
es
inc
mov
test
and
jno
jge
test
fcoms
outsb
dec
jb
pushf
test
ljmp
push
or
mov
loop
pushf
pop
movsl
shll
mov
mov
les
pop
fnstsw
mov
sub
dec
add
scas
rorb
add
add
mov
shlb
inc
dec
icebp
push
or
rolb
jno
or
jno
and
jns
jne
or
push
jb
out
outsl
lahf
xorb
dec
xor
in
movsl
ret
cli
jle
jnp
sub
scas
jae
adc
fs
lcall
stc
and
ja,pt
stos
ss
push
mov
pusha
mov
push
in
int3
dec
lods
out
jae
cld
icebp
int
stos
dec
push
mov
mov
ja
jo
pop
ret
sub
shrl
push
sbb
push
into
das
stos
sbb
sub
inc
cli
shlb
dec
in
scas
repnz
mov
and
xlat
jg
jg
pusha
push
mov
in
push
sahf
xchg
inc
sbb
ja
cmp
sbb
pop
pop
push
mov
xchg
cmpsb
je
filds
jno
jb
push
push
adc
test
pop
fisubrl
out
dec
pushf
scas
sub
add
les
into
adc
add
in
cmpsl
xchg
sub
sub
push
jo
hlt
outsl
add
cld
stos
test
pop
push
iret
pop
jecxz
fldenv
jb
lock
adc
sbb
aad
lods
insb
mov
mov
and
inc
xchg
inc
push
enter
xlat
jmp
out
xor
jo
shr
orl
and
jne
stc
sahf
xor
iret
shl
sub
sbbb
clc
call
mov
inc
mov
add
sub
stos
je
sub
cmc
mov
mov
or
adc
enter
or
and
cld
sub
jg
adc
adc
mov
jmp
addr16
pop
icebp
mov
cmp
leave
jno
jl
test
fdivrs
pushf
lea
sahf
pop
icebp
cmpsl
orb
cmp
je
cmp
adc
sbb
cmp
nop
jbe
clc
push
adcl
mov
xchg
adc
or
push
gs
sti
cmpb
mov
pushf
jnp
call
lea
out
xor
inc
mov
pushf
dec
and
cmpl
pop
dec
fisubrs
lds
mov
push
rclb
add
stos
data16
imul
inc
pop
push
enter
xchg
mov
mov
add
popa
les
ret
das
add
inc
xchg
lods
mov
xchg
shrl
aam
or
push
das
pop
in
jo
fidivl
or
jnp
mov
cld
dec
pop
jg
xor
test
mov
xchg
and
loope
xor
divb
cwtl
xchg
dec
iret
pop
adc
mov
pop
fldenv
add
shrl
jmp
jae
jno
stos
es
sbb
or
mov
stc
pop
or
lcall
repz
xchg
in
mov
mov
sbb
fdivrl
sub
lock
orb
or
test
push
arpl
cmpsb
mov
jge
in
dec
fisubrs
add
imul
push
lods
or
mov
fld
movsl
sub
pop
push
stos
ret
sarl
inc
xchg
push
out
push
sbb
mov
dec
in
push
out
fstpl
movsl
dec
push
mov
xchg
cs
mov
xlat
xor
mov
addr16
push
xchg
mov
nop
icebp
mov
mov
jb
sbb
and
imul
out
cltd
jg
imull
xchg
stc
or
inc
mov
orl
aam
mov
push
hlt
arpl
jg
shll
or
test
pop
gs
sbb
nop
mov
jmp
daa
imul
aaa
out
add
xor
sti
inc
jae
dec
cmp
mov
and
scas
notl
mov
outsb
test
cltd
mov
lret
jp
fbld
pop
fcmovu
ficoml
xor
lock
or
fdivl
and
sbb
icebp
dec
dec
movsl
sbb
in
pop
fnsave
sbb
lods
sub
and
insb
jle
sub
pop
aaa
inc
mov
xor
lods
sbb
int
enter
pop
loopne
stos
enter
leave
xor
test
rcrb
jg
pushf
ljmp
adc
in
data16
add
xchg
js
or
push
or
push
cmp
xlat
movsl
jmp
decl
xchg
xor
push
scas
inc
sbb
or
pop
jns
outsb
ljmp
cmc
rolb
movsb
ja
rorl
add
inc
sub
mov
xchg
mov
inc
cmc
dec
hlt
shlb
ret
push
sub
sbb
mov
xlat
js
out
hlt
push
and
sbb
mov
or
cmpsl
into
pop
pusha
mov
movsl
cmp
push
ja
lret
adc
decl
and
pop
dec
jno
ret
lret
cld
mov
cltd
dec
add
mov
jae
les
test
xchg
sbb
push
in
push
mov
mov
xor
sbb
repz
pop
outsl
adc
movsl
sbb
fwait
mov
or
mov
cmp
mov
pop
add
cmc
push
inc
cmp
jle
or
mov
and
les
add
rclb
inc
loopne
jge
mov
mov
stos
push
testb
add
push
xor
arpl
aad
mov
xchg
stos
pop
jbe
leave
shlb
adc
mov
and
inc
shlb
jge
sub
xchg
mov
lods
aad
pop
adc
fisubrs
inc
dec
in
inc
xchg
js
shlb
add
out
xchg
pop
jae
test
shll
push
sbb
jl
jge
cmpsl
dec
and
and
hlt
push
or
insb
orb
jge
xchg
sub
cltd
jae
lcall
or
push
jge
in
pushf
add
and
and
stos
divl
push
movsl
and
mov
mov
cmp
sub
lods
inc
dec
in
cmp
test
es
scas
jnp
stos
cmpsb
shll
ret
mov
jge
xor
scas
sbb
popl
inc
js
cltd
out
bound
cmp
mov
stc
out
aad
xchg
sbb
int3
adc
ss
sub
xor
pusha
xchg
sbb
cmp
ss
scas
pop
push
jmp
xchg
jle
int3
mov
mov
push
movsl
push
outsl
or
xchg
push
cs
popl
mov
add
mov
ljmp
in
les
sub
mov
arpl
scas
pop
out
mov
out
pop
xor
push
stos
mov
mov
and
adc
jl
push
imul
and
leave
and
cs
lcall
xor
sbb
dec
push
aam
dec
mov
insb
xor
cmpsb
and
add
mov
adc
fsubs
jmp
sub
sbb
imulb
mov
jge
inc
mov
xor
sub
mov
push
dec
and
inc
lcall
and
lret
fstpl
mov
inc
add
mov
sbb
cmp
or
cmp
das
aad
out
xor
adc
lods
cmp
fs
fildl
adc
std
push
jge
and
jbe
and
pop
mov
loop
shrb
adcb
and
iret
jne
adc
push
xchg
cmp
jge
mov
or
xor
fildll
xor
and
mov
pop
jp
out
mov
sbb
jle
nop
adc
lcall
mov
scas
arpl
sbb
sbb
fbstp
inc
mov
mov
std
push
jno
sbb
dec
clc
adc
shr
incl
mov
xchg
inc
adc
jne
jp
imul
xor
mov
and
mov
cmp
stos
aam
xchg
dec
adc
add
movb
inc
push
loopne
dec
mov
lea
adc
inc
stos
lea
imul
mov
cld
adc
or
shl
sub
pop
lods
repnz
mov
xor
fsts
xchg
or
dec
aaa
stos
inc
or
add
int3
cmp
and
sub
dec
shlb
pop
mov
sbb
push
movsb
inc
xchg
inc
movsl
repnz
and
pusha
or
cs
push
pop
ljmp
test
addb
jmp
jg
cwtl
jno
push
das
popf
lds
incb
mov
add
sub
pop
fstpl
sub
and
inc
jge
push
pop
cmp
sbb
mov
imul
aad
ret
jg
lea
stc
rclb
or
push
hlt
or
loopne
xlat
sub
mov
push
sub
xor
sbb
push
aam
mov
cltd
inc
pop
hlt
leave
aas
xor
adc
push
sbb
insl
cltd
std
cmpsb
cmp
mov
sbb
ds
out
adc
test
mov
jne
test
mov
xchg
sub
shll
add
es
sub
inc
and
scas
inc
pop
out
dec
repnz
add
cmpsl
mov
mov
fstpt
push
xchg
add
and
xchg
xchg
add
mov
mov
aas
insl
mov
es
fdivl
mov
mov
in
jae
pop
pop
push
xchg
pop
xor
test
dec
fcom
mov
or
mov
fsubl
sti
and
jg
mov
jle
mov
add
push
daa
sbb
dec
inc
std
add
call
mov
mov
stos
dec
push
lds
push
fmull
and
or
out
jnp,pn
in
orl
mov
sub
mov
mov
add
or
pop
out
and
xor
inc
bound
imul
daa
push
iret
pop
cld
movsb
cltd
stos
testb
int
mov
sarl
mov
inc
cwtl
xor
and
fstp
dec
mov
jnp
lods
jmp
xchg
sub
scas
addb
xor
sbb
or
out
and
hlt
mov
fwait
mov
ret
mull
jg
insl
lods
mov
repz
in
mov
ljmp
sub
sub
adc
inc
dec
fcomip
jo
or
adc
sub
pop
or
call
aaa
sbb
sub
insl
mov
sti
xor
inc
and
dec
popa
jno
xchg
cmp
xor
sti
cmp
aas
sbb
mov
insl
clc
popf
test
into
xor
out
mov
out
call
jno
je
and
rcll
cmp
mov
xor
sahf
aad
inc
and
insl
add
mov
pop
sbb
cwtl
dec
or
mov
cld
adc
jmp
enter
push
push
clc
fwait
ja
push
sub
cli
xchg
mov
js
adc
inc
mov
stc
aad
pusha
adc
mov
into
adc
xor
loopne
adc
cs
push
pop
imul
mov
push
fldt
popa
xchg
mov
std
jg
xor
movsb
jp
test
mov
mov
pop
sub
push
out
cmp
push
sub
dec
pop
mov
cmp
ret
jle
fcoms
push
xchg
add
clc
xor
ret
lcall
dec
mov
pop
decb
jbe
ja
sbb
inc
jp
out
jae
or
pop
dec
out
popa
fdivrs
stos
xor
fdivl
jg
push
repz
or
push
testl
pop
xchg
or
lret
adc
pop
inc
add
pop
andl
pop
ret
xchg
popa
lret
inc
in
cmpl
out
jl
pop
out
push
in
test
inc
enter
xchg
divl
cs
imul
mov
cmpl
mov
xlat
filds
add
in
pop
pop
movsb
addr16
adc
xchg
dec
add
push
xor
insb
push
ret
mov
jno
or
xor
inc
adc
test
je
mov
mov
into
lock
lret
push
xchg
mov
cmpsl
iret
add
xor
lods
inc
leave
jp
xor
ss
or
add
pushf
add
movsl
mov
and
jg
stc
mov
sti
addr16
jmp
or
shr
outsl
add
adcl
mov
lods
mov
jp
jg
outsl
lret
or
dec
mov
imul
call
stos
jbe
les
pop
jne
loopne
pop
fistps
push
les
andl
icebp
dec
mulb
cld
call
pop
lahf
faddp
popf
lahf
mov
loop
lret
adc
orb
out
cltd
or
add
bound
sub
mov
mov
cli
adc
lods
or
loop
or
insb
mov
or
pop
jp
push
mov
adc
or
mov
int
jnp
aam
cli
daa
testl
jmp
adc
xor
jmp
in
iret
mov
inc
pusha
nop
add
rorb
pop
daa
inc
jp
ret
stos
arpl
std
gs
xor
xor
out
xor
push
jo
jg
aaa
shl
mov
fs
dec
push
mov
lea
xchg
out
loopne
nop
mov
add
cmp
sbb
insb
ljmp
outsl
mov
pushf
mov
or
cltd
mov
xchg
xor
pop
cmp
shrb
outsb
hlt
lods
iret
mov
aas
xor
fs
mov
scas
scas
xlat
mov
mov
cmp
jae
repnz
cmp
stos
lods
arpl
xchg
fdivrl
or
dec
jecxz
out
fmuls
leave
js
or
push
loop
pop
enter
push
inc
mov
mov
stos
inc
mov
out
inc
inc
sbb
inc
push
push
or
add
pushf
dec
fnsave
into
xor
cld
mov
dec
inc
scas
dec
add
push
push
fldcw
mov
loop
fadds
xchg
ds
shll
push
aam
or
cmc
or
ror
cmp
lret
fistps
int3
les
cmc
in
jecxz
dec
shl
mov
jge
loope
mov
pop
xchg
into
jne
shlb
mov
jg
mov
xor
push
jl
push
mov
dec
shrb
cs
inc
xchg
ret
ret
xlat
rolb
mov
xchg
scas
lods
in
cmp
ror
in
mov
test
mov
xor
shlb
mov
jge
inc
mov
dec
jno
dec
cmc
loop
xor
jmp
jnp
cmp
data16
dec
adc
push
call
mov
aad
cmp
push
lods
mov
pop
out
bound
js
leave
and
loop
inc
repz
dec
scas
xchg
call
ffreep
jne
icebp
push
shr
xchg
cltd
mov
lret
aad
loopne
repnz
js
pop
xor
push
out
inc
inc
jmp
rolb
test
je
lcall
push
sahf
popa
and
jl
cmpsl
in
lods
int
xchg
xlat
sbbb
lret
push
push
std
sarl
add
push
jno
jae
inc
fidivrl
pop
jmp
xchg
mov
jae
dec
add
cli
test
mov
push
pushf
or
lds
je
sti
add
lret
loope
outsb
ret
mov
jb
push
stc
iret
lret
xchg
loope
sbb
ds
pop
in
addr16
cltd
or
or
lods
add
and
xchg
insl
jp
andb
inc
cmc
pushf
cmp
mov
jbe
xor
outsl
ficoml
lods
or
lods
adc
sbb
jge
mov
mov
data16
mov
cltd
cmp
rcll
daa
push
mov
shl
sub
add
out
sub
lea
adc
jbe
push
mov
pop
adc
cs
mov
mov
sbb
je
inc
out
popa
jge
xchg
fmul
pop
es
inc
sub
jmp
mov
lcall
push
cmc
outsb
insl
add
lahf
sbbl
out
in
aam
bound
shlb
scas
push
mov
inc
dec
mov
jg
cmp
sbb
inc
int
jg
or
cltd
adcl
mov
inc
out
idivl
mov
cld
iret
outsb
int3
outsl
pop
gs
fistpl
dec
jns
orb
mov
lcall
add
pop
push
sub
orl
rcrb
leave
pop
cwtl
test
dec
xchg
pop
scas
sbb
loope
js
aad
pop
sub
sub
xchg
cmp
out
outsb
leave
push
ljmp
mov
pop
repz
cmpsb
xor
sahf
hlt
lods
das
add
pop
jnp
mov
imul
sbb
push
mov
out
xchg
jl
dec
mov
addr16
adc
ss
or
mov
ss
mov
inc
stc
ror
mov
sti
xchg
sub
push
xor
pop
adc
or
mov
addr16
xchg
dec
push
sahf
mull
dec
pushf
inc
cld
addl
mov
sub
cs
lock
in
jg
or
pop
inc
push
loope
mov
and
insl
mov
xorb
inc
adc
cmp
mov
add
and
rorb
jge
fcoml
mov
or
mov
jne
fnstenv
sbbl
dec
sub
push
xor
sbb
fidivrs
jno
dec
sar
jge
cmpsl
adc
mov
sbb
mov
and
and
roll
lds
sub
jno
add
push
paddd
and
loopne
inc
out
aas
mov
enter
mov
inc
and
pop
out
mov
pushf
or
jge
fstl
add
out
mov
std
sbb
mov
dec
or
test
imul
mov
push
and
dec
pop
vxorpd
dec
call
notb
test
xor
sub
clc
inc
sti
ret
dec
dec
test
ljmp
imul
stos
or
push
cwtl
sub
or
mov
test
push
mov
add
bound
inc
jnp
outsl
fisubrl
into
enter
jl
sub
in
pop
roll
je
lods
fidivs
jmp
xchg
loope
jge
add
fdivs
pop
push
arpl
mov
jb
andb
repz
lret
xor
test
cmc
adc
and
add
outsb
andb
mov
lock
sahf
pop
sbb
mov
shlb
or
pop
aam
rorb
out
add
and
out
jmp
inc
push
and
pop
add
mov
in
cs
ljmp
outsb
bound
pop
les
divb
inc
xor
loope
test
mov
mov
ja
outsb
fwait
jle
movsl
jl
adc
jle
bts
rcrb
gs
add
inc
inc
or
popa
cmp
xor
adc
clc
packsswb
aad
scas
test
jno
dec
mov
jge
cmp
repz
or
sub
push
pop
jns
lahf
andb
jo
out
mov
push
xorb
shlb
sahf
mov
mov
xchg
add
pop
jo
mov
hlt
sti
icebp
aam
xor
dec
frstor
hlt
arpl
mov
lds
repz
jmpw
mov
cmc
jbe
sarb
negb
pop
mov
lcall
inc
xor
jae
and
fsub
push
push
or
push
jmp
bound
jae
scas
inc
lds
andl
sub
ficompl
pop
cld
pop
mov
push
xchg
test
push
push
mov
outsl
jnp
aad
add
lods
xchg
adcl
push
std
push
inc
gs
mov
fstps
daa
lahf
inc
xchg
mov
scas
inc
shr
jmp
loope
mov
xchg
mov
add
add
das
mov
pop
xchg
xchg
cmp
outsb
movsb
sbb
xlat
cmpsb
movsb
out
adc
lea
div
adc
gs
xor
int
fucomi
xor
inc
inc
bound
ja
xor
push
ds
mov
or
ret
shll
sub
loopne
mov
push
push
ljmp
call
scas
lcall
rcl
leave
addr16
xlat
jge
mov
stc
test
addl
add
add
nop
cmc
jo
lds
movl
lcall
mov
or
sbb
or
pop
imul
or
outsl
mov
stc
mov
push
dec
pushf
cwtl
mov
outsl
daa
push
cli
push
and
dec
push
int3
movsl
icebp
sbb
push
push
ficomps
cmpsl
xchg
popa
movsb
lcall
dec
ja
xchg
mov
out
jp
xlat
outsb
xchg
push
push
sub
cmp
insl
callw
fdivrs
hlt
nop
cmp
mov
data16
cmp
mov
dec
dec
ja
ljmp
sub
insb
pop
push
dec
das
or
adc
xor
fs
mov
xchg
jp
fwait
es
ljmp
call
into
lds
js
minps
test
fstpt
pop
aam
into
or
mov
adc
enter
cmpsb
push
xchg
std
lods
outsl
jb
xchg
mov
sbb
push
fldcw
push
inc
mov
mov
outsb
or
mov
scas
and
aas
aaa
dec
stc
mov
enter
add
int3
lret
jb
mov
push
and
out
inc
and
lods
push
sbb
call
push
lret
fwait
aaa
dec
xchg
jl
int
into
gs
out
int
pop
out
inc
pop
in
xor
and
mov
pop
clc
dec
add
lcall
fwait
or
out
mov
push
xor
push
push
jge
or
push
ss
leave
iret
xor
std
data16
pop
inc
sahf
pushf
adcb
dec
adc
rcrb
arpl
decb
xor
mov
sub
push
sub
sbb
enter
mov
inc
fs
inc
shll
add
sbb
xchg
aaa
mov
mov
pop
sbb
xchg
xor
es
leave
int
sahf
sub
cmpsb
push
add
inc
dec
push
js
nop
cmp
jge
sub
or
xchg
ljmp
imul
aam
stos
jg
push
jmp
lahf
push
test
outsl
sub
xor
jns
mov
icebp
mov
daa
cmp
xchg
sti
xchg
lds
and
inc
daa
lcall
sub
test
pop
sub
push
sbb
dec
out
cmpsl
hlt
xlat
in
stc
movsb
iret
mov
mov
sti
xor
test
mov
xor
mov
adc
pop
lret
cld
jle
sbb
and
rcll
pusha
movsl
adc
and
arpl
cmpsl
push
aad
enter
xor
nop
mov
js
in
icebp
call
imul
pause
or
xlat
and
mov
lods
loop
enter
lock
and
and
add
sbb
sbb
and
xchg
jae
movsb
test
ja
scas
rcrb
icebp
pop
xchg
lret
ss
addr16
std
jg
sub
jns
lods
fiadds
cs
sub
popf
sub
cmc
xchg
jge
mov
mov
movsl
repnz
pusha
aam
fs
scas
jo
in
sbb
cmp
insb
or
mov
mov
mov
icebp
pop
inc
enter
sub
roll
mov
arpl
andl
xchg
and
iret
sti
movsb
loopne
pusha
sbb
mov
shlb
mov
push
mov
cmp
daa
jmp
push
jg
stc
and
sbb
jl
cmp
adc
std
mov
stos
movsb
sarb
mov
cmpsl
lock
hlt
mov
push
mov
push
push
fsubrl
jl
cmp
inc
cwtl
mov
das
cmpsb
xor
mov
add
es
sub
loopne
pop
out
repnz
and
inc
inc
shr
inc
inc
loope
inc
lcall
push
gs
std
push
fcomps
mov
sbb
and
scas
and
push
shlb
out
icebp
mov
add
cltd
inc
jecxz
outsl
mov
adc
xchg
inc
repnz
and
sbb
cmpsl
cmp
cwtl
rcrb
std
lret
clc
test
das
mov
jl
push
lea
sahf
into
out
jns
lods
stos
pusha
pop
cmove
xor
sbb
or
mov
sub
fsubs
jbe
or
in
out
xchg
adc
and
ficoms
jb
std
jns
mov
inc
push
dec
fdivrs
add
pop
xchg
sbb
fcoms
fwait
sub
out
hlt
ds
pop
xchg
push
mov
test
inc
mov
in
push
lock
or
repz
or
lea
add
mov
or
in
and
mov
adc
popl
push
cmpsb
daa
repnz
lahf
jae
sarb
in
outsb
jl
movsb
dec
iret
push
add
add
xor
mov
lods
andl
int
out
push
cmp
adcb
sub
pop
push
adc
dec
out
jecxz
xlat
into
sbbl
rcr
xchg
shrl
jno
add
and
xor
cmovae
mov
lods
inc
clc
mov
add
lret
ss
stos
xchg
dec
xchg
cltd
cmpsl
rcrb
mov
jge
push
jb
pop
idivb
and
nop
loope
xchg
int3
jecxz
adc
push
push
aam
ss
jae
shrl
jl
imul
jmp
jnp
sbb
xor
shll
aad
xchg
sub
pushf
or
dec
scas
call
xor
push
inc
rclb
jl
lock
or
mov
pushf
jno
stc
cmp
add
std
lcall
jmp
mov
and
dec
mov
mov
loopne
xchg
inc
fisubrl
mov
mov
popa
in
push
stos
inc
push
jno
or
pop
xchg
push
insl
sahf
test
adc
roll
xchg
sub
icebp
add
mov
or
pop
cmp
cmc
jle
and
xchg
cmp
cmpsb
mov
jb
int
sub
mov
jnp
loope
aad
inc
cmpsl
jne
mov
xchg
popa
xor
in
lcall
pop
sarb
out
mov
icebp
mov
xor
jmp
pop
add
mov
movsb
add
xor
mov
dec
mov
sub
mov
cld
ljmp
and
aam
jo
dec
pop
sub
jp
xor
cmp
adc
mov
sbb
stc
nop
ja
ja
addb
adc
pop
scas
negl
bound
call
movb
lret
cmp
sahf
stos
out
sbb
inc
lcall
pop
loope
mov
fxch
in
int3
out
js
mov
mov
orb
lock
icebp
fisttpl
mov
jl
inc
mov
stos
inc
daa
cmp
sbb
push
imul
cmp
scas
adc
xchg
ret
ret
outsb
pop
repz
test
mov
aad
ret
into
mov
mov
sub
mov
data16
push
inc
rclb
fnsave
xor
in
jmp
inc
and
stc
xchg
les
mov
in
add
add
mov
sbb
pop
dec
or
testb
mov
xor
push
mov
jmp
xchg
rorl
sub
push
sbb
movsb
addr16
stos
inc
imul
int
scas
mov
and
cwtl
sub
or
mov
in
iret
mov
mov
mov
in
mov
add
inc
nop
adc
sbb
lahf
fldl
fistpll
jmp
mov
stos
rcrl
sbb
idivb
or
out
ds
scas
dec
adc
call
sbb
cli
out
popa
fdivs
int3
daa
xor
mov
cmp
aam
leave
cmpsb
push
jne
pop
mov
xchg
rcll
mov
jo
mov
insb
lock
adc
int3
dec
data16
cwtl
andb
seta
cmp
and
mov
mov
adc
cmp
push
movsl
mov
fidivrs
repnz
fs
lods
bound
insb
fistpll
imulb
iret
and
dec
mov
sbb
mov
and
fisubrs
cld
xchg
repnz
lcall
in
insb
into
mov
xchg
sub
sbb
test
imul
xor
xor
push
sub
sub
jg
sar
mov
pop
nop
jae
incl
jne
inc
aas
ret
test
adc
pop
push
mov
xlat
bound
fs
inc
out
lods
mov
pusha
mov
xor
xchg
leave
and
loope
icebp
mov
add
in
mov
iret
and
cmp
cmp
stos
sub
xor
add
dec
rorb
mov
jecxz
inc
stos
cmp
imul
lods
sub
push
dec
cmp
lcall
xchg
insb
push
mov
or
push
jno
cli
mov
mov
subl
dec
stos
les
cmpsb
mov
pop
jmp
push
add
je
sbb
pop
lods
leave
push
push
js
addr16
sub
sbb
jg
daa
sbbb
mov
lods
mov
divl
mov
inc
lods
adcl
push
xor
cld
into
pop
dec
jge
inc
cmpsl
mov
lds
lods
adc
add
std
lods
add
filds
xchg
js
rcrl
adc
lods
les
in
clc
psrld
jmp
add
pop
aam
inc
in
dec
mov
sbb
outsl
mov
or
in
sarb
jge
mov
push
mov
loop
int
or
xor
iret
addl
out
push
mov
sub
mov
jns
mov
dec
addr16
in
add
ret
dec
out
loopne
xchg
mov
cmp
xorb
and
test
add
mov
leave
jecxz
sbb
adc
xlat
pop
xor
sbb
decb
insb
sub
fildll
outsl
inc
addr16
lods
push
mov
in
pmovmskb
inc
repnz
inc
loope
shrb
inc
add
sbb
rol
jl
or
sbb
test
cmp
insl
inc
stos
js
bound
fldt
in
arpl
cmp
push
push
adc
adc
sub
gs
es
stos
xor
pop
pop
xchg
jae
inc
test
lds
xchg
lcall
arpl
imul
add
sub
sub
out
cld
sub
or
dec
out
sbb
in
push
jno
rcrb
shlb
mov
lcall
jle
push
push
pop
jae
sbbl
repnz
push
mov
rorl
rol
cmp
sbbl
fwait
mov
xchg
cmpl
jb
sbb
aas
sahf
outsl
sub
leave
in
adc
sub
scas
inc
int3
mov
push
out
jmp
xchg
mov
ret
outsb
mov
fsubrp
and
jl
call
mov
or
add
stos
jmp
and
or
dec
push
testl
insl
adc
push
mov
adc
cmp
xorl
inc
loop
cld
movsl
push
stos
push
pop
push
int
fistl
sbb
les
adc
iret
sbb
cwtl
dec
jecxz
or
xor
int3
out
cmp
imul
out
mov
shl
jl
cltd
add
nop
cld
cltd
mov
lds
insl
test
repnz
sub
add
gs
mov
push
stos
cmp
lock
pop
push
scas
lret
add
mov
xchg
push
push
mul
push
inc
xchg
or
adc
imul
dec
imul
sbb
sbb
popa
int3
pop
fucomp
adc
loop
std
sarl
jge
add
sub
push
out
test
das
mov
hlt
notl
outsl
jns
and
push
js
lret
jae
mov
xor
or
scas
push
outsb
imul
add
add
sbb
cmp
sub
cltd
repz
push
adc
stc
pop
sub
dec
jo
pop
icebp
insb
inc
cmpsb
jnp
xor
idivb
xor
inc
nop
mov
testl
jmp
mov
mov
push
jg
les
lret
or
inc
pop
jg
dec
sub
mov
hlt
mov
pop
in
rcl
lock
lret
inc
sbbl
inc
call
mov
push
xlat
movb
aam
push
jns
inc
xchg
imul
sbb
adc
xchg
mov
dec
jo
sbbl
inc
mov
dec
push
dec
dec
loop
loope
shl
outsb
sub
dec
ret
call
clc
sbb
sub
js
sar
lea
dec
and
xchg
test
mov
inc
sbb
cltd
sbb
mov
xchg
jo
or
jl
add
cmpsb
gs
out
fsubrl
outsb
lahf
and
mov
mov
mov
roll
lds
in
out
xor
dec
or
mov
add
ljmp
sub
lret
lahf
adc
adc
aas
xor
inc
test
adc
std
ss
mov
inc
add
outsb
inc
addb
scas
fimull
cmp
mov
xchg
pop
adc
jo
xor
xlat
aaa
cwtl
xor
imul
sbb
xchg
jmp
mov
arpl
subl
loopne
mov
push
sub
rorl
rorb
outsl
xchg
cltd
popf
mov
std
inc
mov
dec
outsl
aaa
aad
rolb
sub
std
loop
cld
adc
ret
inc
pushf
push
out
clc
mov
add
inc
lds
sub
aaa
cmp
andl
cmc
lea
clc
fisttpll
xchg
inc
dec
movsl
pop
inc
xchg
adc
loop
ltr
jae
aam
sti
push
icebp
xor
loopne
cmp
je
sbb
out
jle
jo
arpl
out
in
sarb
insl
test
loop
fistpl
push
push
nop
fildl
fnstsw
mov
into
pop
sub
dec
cmpsb
daa
dec
in
imull
cs
lahf
ffreep
roll
lods
cmp
jmp
inc
ljmp
push
inc
sbb
mov
jg
and
fcompp
push
cwtl
scas
loopne
stos
jl
add
idivb
push
dec
and
pusha
add
lods
xchg
sbb
call
xor
mov
clc
insl
mov
sub
push
cmp
testb
xchg
push
jmp
xchg
fisubl
mov
psllq
add
adc
ss
mov
bound
rolb
pop
push
mov
movsb
jo
shlb
bound
lds
sbb
add
xchg
or
fwait
cmp
push
ficoml
adc
push
bound
cmp
repnz
xchg
incb
pop
cmp
paddsb
sbb
je
xchg
rcll
in
icebp
jb
inc
mov
iret
mov
shrb
ret
pop
fnsave
movd
sub
arpl
stos
ljmp
jbe
int
in
xchg
push
push
xchg
inc
jno
dec
test
lret
adcl
pop
icebp
out
test
ret
hlt
in
push
cmc
inc
xchg
fdivrl
aaa
push
inc
loopne
cltd
insb
inc
xor
sahf
ss
or
into
mov
out
adc
mov
inc
adcl
sub
push
xchg
andl
fstl
sbb
mov
jns
fsubl
jmp
xchg
sub
push
cmp
jne
das
lds
test
mov
in
stos
pop
dec
adc
ret
mov
push
movsb
jge
cli
cmp
shll
mov
rcrl
lret
pop
mov
adc
dec
mov
ret
shrb
pop
or
xor
mov
nop
icebp
pop
divb
icebp
and
sub
imull
pop
jmp
fnstsw
adcb
test
xor
jp
adcb
fdivp
sbb
test
decb
enter
sub
outsb
enter
pop
test
xchg
push
cmpsl
js
mov
add
repnz
adc
mov
push
mov
sub
dec
add
popa
jno
test
xchg
jp
cmp
jnp
iret
test
scas
jo
lock
or
sbb
test
xor
adc
mov
sub
sbbl
fistpl
push
pop
pop
push
inc
je
and
sub
sub
rdtsc
and
incb
imul
aad
flds
nop
inc
out
mov
es
imul
sbb
sbb
imul
push
in
jl
push
inc
sbb
sarl
int3
mov
sbb
cmp
out
movsb
adc
sbb
jae
outsl
sbb
inc
adc
clc
dec
mov
sbbl
rorb
pop
ret
jae
and
xlat
ret
loop
fisttpll
push
je
inc
lods
rcl
mov
outsb
js
shrb
pop
shrl
jle
mov
mov
filds
test
jns
mov
lahf
add
das
repz
push
push
out
loopne
pop
repz
push
dec
xchg
mov
pusha
cmpsb
std
in
cmpsb
loope
ret
mov
jge
insb
cs
stos
add
xchg
stos
dec
int
ds
jp
jmp
ret
xchg
leave
jp
jb
sbb
arpl
push
scas
dec
lods
js
fisubrs
cltd
xor
jp
cld
imul
ja
call
add
ret
pop
xchg
cltd
push
pop
movl
into
pop
dec
imull
push
jbe
pop
cmp
test
pusha
cli
jge
sub
test
xor
imul
ret
sbb
or
dec
mov
sbbb
rorl
mov
dec
cltd
shrb
rclb
add
test
andb
sar
push
test
loopne
lods
fsubr
test
mov
sub
lcall
xchg
push
jb
fcompl
add
addr16
fisttps
lea
addr16
js
movd
shlb
shl
xor
imul
xor
push
mov
outsl
add
sbb
inc
or
mov
lret
scas
inc
sti
adc
in
jns
fdivrs
mov
push
sbb
pop
clc
xchg
dec
add
mov
popa
testb
insl
jo
mov
push
sbb
mov
shlb
sbb
in
xchg
sahf
push
scas
cs
ffree
int3
mov
jp
outsb
sub
push
pop
cmp
fadd
arpl
dec
pop
xchg
out
leave
andl
lahf
cld
pop
xchg
test
sub
push
mov
mov
or
pop
je
repnz
jp
pop
aaa
ja
xchg
sub
rorl
or
mov
mov
jmp
ja
xchg
dec
notl
movsb
inc
and
mov
xor
inc
push
cmp
icebp
xchg
or
and
out
ss
mov
mov
pop
ljmp
cli
or
jp
outsl
nop
inc
ljmp
or
xor
pop
je
xlat
inc
jae
add
xor
pop
adc
daa
test
pop
in
enter
aaa
pop
sarb
inc
pop
cmp
out
mov
cltd
cmp
les
in
jns
mov
test
cmp
fidivl
outsl
jno
xor
stos
jle
movsl
das
int3
xchg
mov
jnp
cwtl
stos
test
pop
ja
into
jns
movb
stos
dec
xchg
in
in
lods
cmpsl
add
movsb
mov
movsb
call
mov
cmp
mov
movsb
dec
enter
push
dec
push
cmc
mov
imull
xor
xchg
mov
test
mov
cmp
aam
aam
in
mov
ret
ss
adc
cmp
jge
pop
jl
ljmp
jo
xor
sbb
ss
jo
pop
mov
dec
fmul
jae
adc
test
js
subb
fs
mov
dec
sahf
mov
or
lret
mov
mov
mov
sbb
jb
lcall
test
mov
sbb
rclb
jge
adc
pop
inc
jmp
out
pop
ja
loopne
add
inc
jp
sbb
faddl
add
cmp
push
rol
fistl
mov
inc
test
cmp
push
icebp
or
shlb
cmp
pop
mov
nop
add
xor
dec
xchg
mov
fnstcw
test
adc
jns
xor
out
adcl
cmp
aam
fdivl
pop
in
les
adc
aad
cmp
pop
stos
ss
pop
push
fisubrs
fdivrl
mov
jg
test
iret
hlt
mov
mov
mov
ss
dec
sub
xor
in
xchg
hlt
stos
cmp
dec
jno
mov
les
mov
mov
ds
orb
imul
fsubp
sbb
lods
cmp
or
stos
jne
std
adc
lods
push
mov
inc
ret
test
mov
sbb
and
mov
addl
jge
je
inc
loop
lods
shr
push
pop
scas
dec
pop
pop
cmp
push
or
dec
or
xorl
clc
cmp
add
mov
mov
mov
or
test
inc
ret
jle
or
xchg
xchg
dec
mov
repnz
sub
imul
clc
xchg
inc
jbe
cmp
push
xchg
imul
jp
mov
jae
xchg
shrl
aas
or
loopne
ja
scas
and
inc
pop
sub
pop
cmp
fisttps
es
mov
subl
cmp
jbe
pop
pop
adc
lods
mov
clc
push
and
fdivrl
xchg
xchg
into
shll
repz
shrl
sbb
add
sahf
mov
int3
or
addl
push
andb
mov
gs
fnsave
ljmp
adc
sbbl
or
fstl
mov
pushf
aam
fucomi
pop
shl
push
outsl
xor
add
outsl
pop
lahf
lods
stc
push
xorb
mov
mov
and
sub
sarl
add
mov
pop
lret
mov
test
insb
inc
jmp
shr
jmp
mov
pop
cld
mov
ffree
mov
jecxz
jne
pop
cmpsl
xchg
xchg
sbb
jne
rclb
push
fisttpll
addb
outsb
xor
pop
adc
mov
je
addl
push
leave
sbb
out
jno
jmp
roll
cli
test
cmp
sub
fidivl
dec
clc
jnp
movsb
das
sbbl
aam
jae
imull
js
leave
mov
lcall
inc
icebp
shr
sub
lret
pop
xor
push
sti
cli
mov
fstpt
std
daa
inc
pusha
outsl
adc
dec
lret
cmp
test
mov
xchg
inc
out
test
adcb
ret
pop
cwtl
gs
xlat
pop
xchg
lods
inc
add
mov
roll
nop
jb
add
testl
xchg
nop
insl
add
sahf
jg
push
push
mov
xchg
fnsave
fidivs
mov
xor
mov
jb
jbe
mov
imul
add
fbstp
lods
pop
pop
imul
or
push
mov
xchg
dec
in
add
clc
enter
mov
sbbl
mov
or
sub
xchg
add
mov
sub
mov
sbb
adc
divb
repz
jl
int3
outsl
push
ljmp
std
xchg
mov
sub
out
jns
icebp
insb
aaa
and
pop
es
mov
std
lods
inc
icebp
test
cmp
ss
adc
jle
nop
push
out
add
aaa
into
mov
xchg
sub
pop
push
adc
add
pusha
js
jb
push
mov
ss
stc
nop
mov
aad
test
fdivrs
xchg
mov
cmpb
cmpsb
lock
lds
outsb
ss
shlb
xchg
loope
aam
jge
push
test
lret
sub
mov
loop
pop
and
bound
outsb
sbb
mov
movsl
cld
adcb
scas
in
sub
cltd
inc
scas
jne
mov
roll
inc
xor
lahf
xor
repnz
xor
inc
fdiv
aad
xor
mov
int
inc
fildl
jmp
dec
xchg
loop
add
aad
dec
sbb
mull
mov
test
push
add
jmp
push
ljmp
sbb
mov
testb
outsb
jle
js
cmp
xchg
xlat
bound
loope
lock
or
fldpi
xchg
add
push
or
jbe
insb
pop
hlt
popf
pop
jp
lea
jl
adc
add
in
dec
ret
mov
or
aaa
repz
push
mov
jo
adc
data16
or
fadd
cmp
hlt
and
call
mov
xor
subb
test
and
jo
add
shr
cmp
xchg
pop
xchg
imul
cmp
cmp
ret
mov
testl
jmp
dec
mov
repnz
sbb
fbld
sub
mov
adc
hlt
repz
xor
sub
cltd
aas
je
scas
test
push
stc
jb
and
out
scas
push
negl
inc
xchg
addr16
adc
jno
mulb
jp
jnp
addr16
xor
pusha
ljmp
arpl
inc
out
popa
xor
mov
sub
xchg
pop
jp
mov
fstpl
jge
cld
or
decw
and
mov
mov
fprem1
jne
pop
in
cmp
cmpsl
les
insl
jge
inc
push
lret
aas
mov
dec
mov
push
leave
pop
movzwl
xor
mov
dec
adcl
pusha
push
sbb
dec
adc
inc
inc
movsb
mov
loopne
aaa
inc
add
cld
jb
in
lock
out
and
shrl
push
repz
mov
repnz
sbb
rcrl
aas
pop
or
fs
or
inc
mov
andb
jo
cltd
test
jae
inc
xchg
stos
lds
push
mov
mov
pushf
pop
sahf
jmp
and
jnp
pop
cmpsb
xchg
pushf
jnp
test
sub
cmp
xor
cmp
jg
sub
pop
push
ds
bound
adc
xchg
mov
jns
mov
add
and
add
jle
out
adc
pop
jno
int3
mov
ret
stos
test
adc
sti
and
loopne
add
shrb
insl
mov
adc
or
icebp
orb
shlb
sub
dec
adc
mov
pop
sar
or
jmp
fsubrl
icebp
xor
outsl
loop
in
and
jg
push
push
sbb
out
sbb
lcall
nop
mov
out
xchg
dec
xchg
lret
rcrl
fsubr
pop
repz
xor
xchg
inc
lahf
call
or
out
mov
mov
jmp
loope
jl
sbb
stos
fidivl
sbb
cmp
pop
jmp
xor
or
in
and
jno
dec
mov
inc
sub
mov
cmp
popa
adcl
icebp
mov
stos
inc
pop
add
push
loopne
push
sbbl
sbb
or
inc
fnstsw
dec
inc
jle
push
imul
or
push
cltd
jmp
pop
inc
dec
fbld
mov
iret
sub
rcll
gs
ja
mov
imul
fimull
sbbb
ja
out
lahf
pushw
cmc
mov
js
and
sbbl
addr16
add
push
repnz
mov
pop
xor
leave
fdivl
notb
jl
int3
pop
orb
pop
mov
cwtl
addl
shl
push
and
outsl
mov
rcr
jne
inc
stos
and
ret
sbbl
push
fsubrs
loopne
bound
push
std
inc
shrl
or
inc
scas
cmp
cmp
int3
aam
fcompl
ss
mov
jbe
es
mov
cmp
pusha
scas
ljmp
std
or
push
std
test
and
and
das
jl
jb
nop
into
xor
xor
push
mov
push
repz
aam
lret
xlat
lret
rol
imul
andb
dec
bound
sbb
aas
enter
push
pop
out
insb
rcrl
mov
sub
enter
int3
scas
jg
pop
sub
mov
or
mov
dec
movsb
or
popl
sahf
rolb
sbb
std
jo
push
mov
jp
out
icebp
movsl
push
lret
andb
repz
mov
outsb
inc
mov
shrl
std
movsb
outsl
cmpsb
sbb
shrb
sub
daa
dec
hlt
mov
lods
sub
das
mov
add
sbbl
fmuls
sahf
sti
sbb
and
inc
outsl
xchg
jge
js
sbb
fdivs
ret
imul
call
mov
pushf
repz
mov
stos
or
mov
cmc
or
adc
xor
mov
pop
add
sub
mov
scas
addr16
je
nop
das
adc
mov
push
adcl
test
pop
aad
lods
fcomi
ret
or
pop
movsb
sbb
jg
mov
psraw
jbe
adc
popf
push
insl
icebp
mov
push
add
xchg
lahf
xor
dec
and
adc
ret
xor
in
inc
test
adc
enter
pop
andl
adc
repnz
ja
nop
pop
call
xor
mov
test
movl
add
or
pop
cmc
aad
push
in
cmc
ss
fildll
jmp
cs
gs
pushf
das
and
inc
fsubr
test
mov
push
push
in
cmpl
or
mov
mov
pop
add
test
aaa
dec
xor
sub
mov
test
rorb
sbb
or
and
jb
and
pop
cmpsb
lea
out
out
cmpsb
bound
xor
clc
push
push
fwait
xchg
out
cli
cmpb
sub
pop
and
lahf
push
je
pop
sahf
xor
arpl
mov
loopne
test
mov
stos
ds
mov
pop
jb
aad
aam
push
notb
add
inc
fldt
xchg
and
stos
jmp
popa
sub
cmpsb
arpl
hlt
inc
or
jmp
movhlps
fsts
xchg
mov
mov
xchg
loopne
fnsave
xchg
xor
shr
les
sbb
test
sbb
or
roll
icebp
push
insb
xor
scas
push
fistps
add
andb
pusha
rcrl
sbb
adc
inc
sub
dec
aam
jecxz
push
lods
pop
or
xor
push
and
jp
push
inc
test
clc
ja
shlb
xor
fbld
push
inc
inc
inc
jnp
push
cmpl
sbb
outsl
loopne
ret
mov
jbe
das
outsl
add
imul
das
push
out
insb
adc
jg
cmp
les
lret
cld
and
push
push
jo
mov
cwtl
inc
adc
jbe
lret
rcll
repz
push
test
sbb
repnz
icebp
or
hlt
addr16
pop
cs
popa
repnz
mov
loopne
xor
stos
fdivrp
pop
sub
xorb
pop
mov
pop
push
lods
pop
mov
push
cmp
jnp
xchg
xlat
scas
sub
lds
mov
fdivl
inc
push
jge
lcall
lcall
cltd
and
lcall
pop
into
movsb
cmp
imulb
int
fnstenv
out
xor
jge
mov
mov
inc
jecxz
popa
test
xor
imul
add
sub
test
pop
test
ja
test
enter
mov
push
fucomp
mov
sbbb
lods
pushf
scas
rcl
sbb
jecxz
mov
ret
sbbb
sbb
bound
mov
jns
pop
sahf
enter
call
xor
jns
sbb
dec
adc
std
pop
popf
inc
enter
or
jecxz
jbe
movsl
jnp
shlb
cwtl
movl
mov
mov
cmp
push
jno
mov
iret
out
mov
sbb
sub
pop
mov
fistpll
xor
in
bswap
lret
add
out
loop
lea
push
jns
add
mov
and
test
adc
hlt
insl
sti
cmc
pop
pop
sti
stos
xorb
pop
xor
ret
je
pop
les
inc
sti
jb
nop
pop
repnz
pop
jl
int
stc
pop
repz
out
jp
sub
cwtl
pop
outsb
dec
sub
incb
je
cli
jp
adc
push
aas
popf
js
jle
mov
add
frstor
push
and
mov
sub
test
or
subb
popl
push
clc
lahf
mov
mov
lods
xor
or
sbb
push
mov
cmp
pop
mov
inc
lock
lds
cmp
orb
enter
push
les
inc
ret
pop
in
jecxz
jp
fnstenv
add
adc
bound
ficoms
in
mov
sar
mov
mov
test
pushf
sbb
xlat
or
cs
inc
xor
int3
and
int3
mov
ja
sub
pop
pushf
repz
inc
jg
test
les
mov
cli
xchg
sub
lahf
inc
cwtl
inc
dec
mov
mov
fs
imul
push
mov
lea
lock
fistl
push
dec
dec
xchg
addr16
push
out
push
lret
in
jo
lods
push
or
and
cmp
inc
pop
push
pop
test
and
jno
mov
xchg
sub
lcall
insb
jb
push
dec
popf
jecxz
das
inc
ds
sub
outsl
inc
loopne
in
loopne
idivb
cwtl
inc
or
mov
jmp
cmp
test
or
sbb
mov
pop
aad
lods
sub
jle
int
push
mov
sbb
push
and
jg
xchg
nop
les
out
cld
xor
sbb
cmp
cmp
cmp
pop
and
scas
push
add
or
pop
cmp
jns
rcrl
dec
jle
cmp
lahf
cmpsb
mov
ja
outsl
in
rcrb
addr16
jp
lock
dec
pop
mov
jnp
pop
jmp
mov
movsb
ja
cmp
shll
add
and
dec
xchg
cmp
dec
stos
and
movd
scas
inc
mov
dec
jo
fwait
push
cmp
roll
mov
adc
mov
fisubrs
mov
mov
mov
cmp
imul
das
aas
add
jle
adc
faddp
test
andb
enter
sub
addl
js
cmc
loop
pop
and
push
aad
sub
xchg
insl
pop
push
jnp
pop
into
or
jae
inc
lods
jo
jnp
into
jo
cwtl
xor
adc
or
or
rclb
loopne
xor
sub
sahf
jg
xchg
xchg
stc
jae
cli
shll
scas
mov
and
sti
outsb
add
ret
es
ss
fcomps
and
lods
inc
test
lret
pop
xchg
jmp
xor
int3
punpckhwd
add
sub
jns
add
ds
add
mov
mov
jb
rolb
xchg
movsl
xor
push
sub
push
jns
dec
fisubl
push
or
xlat
ficompl
dec
add
push
js
inc
icebp
ja
xor
mov
in
sbb
imul
pop
lods
push
mov
mov
sbb
pushf
xor
push
xor
cvtpi2ps
int3
sbb
add
inc
outsl
add
cmp
mov
sub
pushf
lea
jecxz
aad
lea
popf
lea
insl
jg
push
jmp
add
sub
insb
and
mov
inc
dec
sbbl
and
or
aas
xchg
sbb
jl
scas
es
out
js
inc
or
jge
imul
fiadds
les
xchg
std
mov
cmc
sbb
inc
jae
mov
jle
test
les
imul
sub
jns
mov
scas
mov
imul
add
gs
xor
loopne
adc
xchg
xor
pop
pusha
lock
cli
mov
stc
inc
leave
add
icebp
std
inc
sbb
mov
mov
mov
mov
pop
or
jbe
mov
and
add
sub
imul
cwtl
sub
stc
je
hlt
push
or
push
icebp
adc
stc
mov
ja
xor
out
xchg
add
es
mov
pop
icebp
insb
push
or
iret
sub
pop
addr16
adc
testb
or
cwtl
insb
jg
test
std
fldenv
cmc
mov
pop
xchg
pop
movlps
mov
xor
push
sahf
orb
jo
sub
mov
into
pop
rclb
cmp
jp
and
add
add
mov
push
jnp
cmp
adc
jbe
adc
or
insl
ret
scas
inc
pop
sbb
es
gs
push
jl
out
stos
xor
setns
and
sub
and
outsl
inc
lahf
pushf
mov
ja
loopne
lahf
jg
cli
xchg
addl
lcall
mov
arpl
iret
xchg
inc
fidivrl
fbld
rclb
lcall
jno
lock
inc
aas
push
js
push
mov
sub
imul
inc
sbb
leave
pop
int3
fstl
mov
cld
pop
mov
cltd
pusha
adcl
and
mov
jge
push
jmp
or
in
mov
mov
loop
jnp
jecxz
push
mov
inc
stos
xchg
out
rcrb
cmp
pop
js
aam
jg
and
mov
in
xor
push
fwait
bound
sbb
push
hlt
mov
adc
stos
call
sbb
mov
pop
mulb
and
cmp
push
ss
push
fsubp
test
dec
sub
ss
xor
pop
lds
pop
push
lods
xchg
ja
jb
mov
push
in
or
push
dec
int3
sub
gs
movsl
jg
sub
adc
or
or
xchg
das
call
and
jg
pushf
xchg
mov
cmpsl
nop
jo
add
mov
mov
or
jl
inc
cmp
or
pop
cld
loope
les
push
sub
mov
cmp
insb
out
popa
imul
lock
fsubrp
mov
push
sbb
cmp
lret
push
dec
in
mov
mov
aas
mov
fsubrs
push
cmpl
cli
notb
sub
xor
sub
rorb
and
mov
xor
fdivrs
stos
sbb
adc
sub
fldl
lock
jl
push
mov
cwtl
sbb
std
mov
adc
orb
xchg
push
loop
fcmovne
test
cmp
sbb
xlat
test
icebp
sbb
adc
push
je
sbb
test
pop
push
std
inc
es
jg
push
sub
mov
mov
shl
lods
rclb
mov
addl
or
in
add
or
iret
jae
mov
cltd
fwait
sahf
jnp
jp
and
jg
imul
clc
cmp
and
enter
arpl
dec
bswap
inc
push
xorl
mov
inc
fldcw
lahf
movsl
in
mov
jl
sub
ljmp
arpl
add
xor
mov
push
in
add
loopne
loopne
stc
test
mov
mov
pushf
in
int
out
jge
cltd
jo
add
sahf
and
lods
test
xor
sbb
jl
data16
hlt
pop
lea
push
or
loopne
sub
addr16
out
xchg
push
and
dec
inc
iret
sbb
inc
data16
cwtl
or
daa
jno
pop
push
loope
scas
mov
std
jnp
pause
mov
xchg
outsb
jb
jb
xchg
stos
mov
movsl
cmpl
lods
inc
mov
std
ret
les
sub
pop
add
xchg
push
cmp
popl
sub
cmp
pop
imul
xor
dec
dec
sub
outsb
clc
add
sbbl
and
sahf
push
ds
xor
aam
push
fistl
add
cltd
ss
sbb
int3
mov
imul
xchg
adc
adc
cmp
sbb
sub
and
popl
cmp
sbb
loop
aam
xchg
add
and
cwtl
cmp
sti
test
push
lods
mov
sbb
decb
sub
fdivrl
or
push
adc
shlb
mov
and
inc
sbb
ljmp
movhps
gs
fdivl
xchg
and
add
cltd
das
out
xchg
stos
sub
icebp
movsl
mov
je
mov
add
sub
test
lcall
pop
js
enter
sub
inc
dec
movsb
mov
pop
dec
scas
fdivr
jb
mov
xor
imul
jg
inc
mov
int
push
outsb
cltd
stos
lahf
aaa
negl
xor
out
xlat
lock
and
mov
sbb
dec
xchg
and
out
xchg
cmpl
or
inc
or
mov
jbe
mov
dec
adc
or
mov
fnsave
imul
xchg
xlat
clc
int3
mov
mov
push
outsb
sbb
sub
ret
mov
cwtl
jb
mul
dec
lahf
mov
adc
mov
or
sbb
out
add
filds
xchg
add
loopne
enter
cmpsl
hlt
mov
xchg
adc
mov
dec
push
mov
xlat
jge
dec
loope
mov
push
mov
push
xor
xor
sub
jmp
repz
xchg
adc
pop
inc
mov
addr16
rcrl
inc
cmpsl
sti
push
mov
fstp
je
lods
imul
cld
sub
sbb
fcompl
xor
lods
jns
clc
mov
ret
sbb
dec
sahf
or
out
mov
mov
insl
dec
lretw
sti
inc
repz
test
pop
outsb
mov
push
jecxz
or
mov
mov
sub
push
sbb
jne
shrb
add
ucomiss
outsl
out
in
xorl
add
push
or
push
filds
lea
mov
push
jns
lcall
xchg
sbb
int
add
inc
mov
jmp
sahf
mov
aam
mov
sahf
pop
pop
rorb
jae
and
stc
mov
outsl
xor
dec
and
arpl
fwait
mov
outsl
clc
xchg
movsl
jne
xlat
int3
xchg
mov
pop
jmp
pop
jg
pusha
xchg
xor
add
push
fildl
xor
jns
fistps
outsb
shrl
out
mov
fs
jle
jge
sub
sbb
mov
sbb
imul
jecxz
mov
sbb
popf
jns
cld
rcl
jmp
cwtl
cli
pusha
into
push
cmpsl
movsb
inc
sbb
mov
lods
or
fildl
mov
xor
mov
ss
dec
cwtl
loope
mov
cmp
fs
adc
mov
mov
and
push
fdivrl
push
cmc
enter
aas
ja
dec
cmpsl
cmpsl
dec
andb
subb
xchg
sub
sub
test
js
add
mov
fwait
inc
leave
adcb
flds
add
imul
insb
pushf
mov
test
testl
out
lret
aaa
mov
movsl
sub
push
ss
ror
popa
adc
xchg
inc
cltd
pop
dec
out
jle
and
jp
mov
inc
xchg
pusha
in
stos
addr16
pop
rorb
out
insl
add
jg
xchg
xchg
sub
mov
xchg
ret
stos
mov
shrb
lods
outsl
push
pop
pop
out
movsb
dec
sub
call
sbb
not
lea
push
jecxz
and
je
push
out
cmp
cli
repz
and
mov
ret
xchg
jnp
push
idivb
push
inc
push
mov
mov
movsl
cmpsl
ds
add
inc
add
ja
adc
jnp
loop
push
clc
fistpll
les
insb
imul
jne
pop
dec
xchg
cmp
push
insl
fistps
mov
shlb
mov
idivb
sbb
mov
xchg
lock
xchg
dec
jb
and
out
mov
filds
or
cltd
mov
test
loope
mov
dec
call
or
ljmp
idivb
roll
das
jo
or
popa
clc
pop
sbb
mov
movsl
adc
aad
sub
rorb
sbb
cmpsl
in
push
pushf
push
int
loope
adc
sti
inc
cltd
xor
push
mov
pop
mov
mov
xchg
xor
test
sbb
jl
adcb
mov
loop,pt
push
or
out
int
shrl
xchg
lcall
data16
lret
imul
or
cmp
mov
in
add
das
pop
sub
icebp
xchg
pop
js
mov
int
ret
clc
push
dec
xor
add
into
inc
insb
fldt
aad
mov
mov
enter
pop
ficoms
loop
add
add
inc
mov
lcall
call
sbb
sbb
int3
mov
out
pop
fsubr
jae
scas
sbb
rcrl
sti
mull
xorb
xchg
insl
fildl
cmp
leave
add
push
sub
xchg
shl
mov
cmp
nop
jbe
adc
push
scas
ds
mov
cltd
cmpsl
and
cmp
fbld
add
jmp
mov
inc
loop
xchg
fldpi
mov
xchg
add
jge
jns
pop
incb
subl
lds
add
icebp
pop
es
movsl
mov
mov
xor
jno
cld
mov
mov
xlat
sub
pop
lahf
inc
ficoml
outsb
push
jl
cmc
loopne
fucomp
add
sub
push
cmp
jecxz
test
cmc
dec
cmp
sub
xor
fistl
push
iret
imul
dec
pop
cmpsl
shlb
pop
jl
mov
xchg
cmp
loop
inc
in
adcl
mov
mov
mov
push
fwait
insb
push
int3
cld
xchg
mov
mov
lock
mov
repz
jo
jnp
mov
fistps
popa
aad
add
mov
jae
jle
or
adcl
cmc
ja
mov
test
xchg
imul
cmp
jl
pop
in
pop
lret
ffreep
ljmp
lret
mov
mov
rcrb
push
push
sbb
out
jmp
pop
adc
daa
mov
test
insl
clc
lret
pusha
in
sbb
fmuls
sbbl
and
pushf
les
add
jmp
jnp
dec
negb
lods
xchg
sbb
movsl
loop
addl
mov
fwait
pop
enter
sbb
mov
aad
imul
lcall
repz
push
fsubl
sti
cmpsb
lock
cmpsb
pop
jg
inc
inc
in
leave
adc
data16
int
repz
or
pop
jmp
inc
dec
mov
push
xchg
xchg
pusha
pop
pop
stos
mov
dec
sbb
iret
mov
xchg
hlt
lock
cs
bound
enter
jg
push
lret
iret
pop
lods
jnp
test
mov
out
loopne
iret
ss
mov
cmpsl
add
mov
inc
add
clc
xor
incl
mov
arpl
int
mov
andl
stos
mov
addr16
ds
jne
lahf
jae
in
push
fisttpl
mov
sarl
mov
int
fildl
mov
jle
push
sbb
lahf
xchg
je
lods
adc
leave
test
dec
std
add
mov
aam
popf
or
sar
mov
loopne
sub
pop
scas
js
gs
fmull
ss
std
adc
loope
dec
mov
adc
pushf
test
jne
mov
push
xchg
es
and
rcrl
dec
or
into
and
clc
pop
push
lea
out
lret
jne
inc
out
xchg
jb
shrl
cs
das
mull
fdivrl
push
loop
arpl
adc
sbb
sbb
loop
cld
ret
mov
jno
aam
int
out
shll
divb
jp
aas
js
out
or
add
call
cmp
fiadds
push
cmp
popa
mov
icebp
and
xchg
faddl
mov
and
jns
std
add
dec
pop
xchg
xor
negl
ror
scas
mov
in
aaa
push
or
sub
sahf
push
daa
push
nop
mov
pushf
stc
add
fcomi
inc
stos
lea
hlt
stos
mov
cmp
jae
dec
xchg
lods
fisubl
sti
into
xor
popf
push
in
test
mov
mov
mov
dec
dec
lea
push
insl
sbb
sahf
js
dec
mov
int
pop
repz
fisubl
pop
push
lock
scas
pop
mov
outsl
xchg
adc
loope
subb
popf
mov
or
mov
sub
out
mov
xchg
mov
cltd
sbb
pop
xor
cmp
pop
xor
lret
loopne
pushf
dec
inc
hlt
lea
jp
mov
nop
lds
mov
push
ljmp
mov
add
mov
jg
iret
xor
push
daa
into
sub
scas
push
lahf
and
dec
cmp
shl
rolb
mov
xor
dec
pop
add
and
adc
fcoms
mov
push
pop
ret
pop
gs
sbb
xchg
mov
leave
xor
sti
enter
xor
hlt
xchg
stc
scas
and
icebp
mov
push
xchg
ss
fldlg2
cltd
clc
sahf
cwtl
xor
ret
fwait
outsl
fnop
mov
in
std
mov
push
fs
lret
aad
push
mov
ret
push
dec
mov
cmp
mov
fnstcw
roll
xor
rcll
cs
mov
shlb
ret
fsubrp
adc
inc
arpl
lret
pushf
daa
outsl
push
int3
loope
cmp
dec
dec
rorl
cmp
xchg
mov
sub
and
leave
and
cmpsl
adc
pusha
clc
rcrb
insl
dec
and
popa
adc
stos
es
xchg
imul
fwait
sub
xchg
push
aam
push
cltd
shll
xor
cmp
lret
lahf
and
sahf
stc
popf
xchg
dec
xchg
cld
incb
psadbw
inc
push
jns
daa
mov
lock
imul
jno
cmp
shll
mov
ja
push
sbb
bound
in
push
mov
mov
cmp
pop
lret
push
add
orb
in
mov
pop
hlt
daa
pop
subl
stc
sub
sub
mov
mov
sub
cmp
enter
xchg
hlt
icebp
mov
lahf
cmc
mov
jmp
and
xor
xor
test
mov
call
jg
movsb
ja
xor
push
and
mov
sbb
mov
add
shl
filds
adc
and
hlt
pop
clc
nop
push
sub
fidivl
out
sbb
jecxz
arpl
jle
sbb
js
repz
sub
pop
xchg
test
ret
ja
and
into
cmpsl
mov
or
mov
or
add
shr
mov
daa
and
xchg
adc
mov
dec
xor
cmp
lahf
jnp
dec
hlt
das
lds
mov
mov
les
in
mov
dec
jp
lock
repz
xor
add
mov
mov
mov
xchg
imul
jo
scas
push
sub
addr16
jge
adc
mov
push
lods
adc
and
test
push
data16
dec
data16
mov
loopne
pop
push
insb
iret
pop
inc
mov
sub
sarl
test
ret
inc
cmp
jnp
push
and
adc
pop
xorl
pop
test
or
test
xor
enter
popa
cli
push
push
outsl
ja
mov
xor
cli
push
cmc
cld
fists
dec
ss
imul
inc
loopne
cmp
jg
aaa
or
rorb
pop
insb
out
aad
mov
shll
data16
mov
push
jae
dec
std
or
addr16
mov
xchg
stos
inc
insb
push
out
push
arpl
lret
inc
cmp
fdivp
out
scas
or
daa
repnz
add
xchg
and
sbb
mov
stos
lret
jl
test
out
out
stos
arpl
fdivrl
dec
int
sub
dec
rorb
inc
iret
push
lock
icebp
fs
loopne
stos
push
mov
mov
fimull
es
test
add
mov
stos
push
cmp
jmp
in
sahf
mov
push
push
hlt
pop
and
into
push
mov
rcl
add
jl
shr
out
call
outsl
mov
cld
stos
pop
adcl
push
gs
push
pushf
xor
repnz
or
fs
shll
pop
jmp
add
or
jo
in
or
jl
ds
mov
add
shll
mov
jmp
and
adc
inc
push
test
push
sarb
lea
in
addl
or
push
mov
sahf
jmp
inc
sarl
xchg
sub
and
fs
inc
mov
je
popa
std
lret
xchg
into
cmp
sarb
loope
pushf
movsb
cmp
popa
out
inc
in
ret
mov
xchg
xor
jge
add
mov
jb
sub
outsb
call
fwait
dec
push
fildll
iret
add
mov
sub
adc
jle
cmp
mov
mov
jge
fwait
pop
sub
idiv
decb
ret
mov
jl
inc
loope
xchg
test
popa
push
cs
or
push
sbb
out
loope
das
add
push
xlat
jmp
or
dec
loopne
mov
sbb
in
mov
sbb
mov
idiv
into
lret
sbb
les
mov
sub
test
imul
popa
lock
sub
out
insb
aad
pop
adc
push
cli
aas
jnp
lods
mov
loope
sbb
mov
adc
fmul
outsl
mov
mov
xchg
ret
inc
push
mov
fs
int3
push
ret
inc
inc
lods
inc
jno
push
mov
inc
sub
inc
int3
lahf
stc
xchg
ljmp
inc
cmp
sti
pop
mov
neg
jbe
sbb
mov
cmp
cmp
fistpll
and
cli
mov
les
jne
es
pop
loopne
pop
inc
add
push
xor
stc
xchg
mov
push
js
je
fidivrl
push
adc
filds
pop
ja
int3
insb
hlt
cmpsb
mov
movsl
adc
imul
fdivr
add
daa
fmuls
and
xchg
pusha
out
lret
es
push
sbb
xor
mov
cltd
lock
add
mov
jecxz
int3
xchg
mov
pop
imul
std
ficompl
stc
cli
test
lea
clc
repnz
leave
stc
sarb
js
lahf
push
sub
inc
or
fdivl
jg
fbld
jno
xor
icebp
push
mov
dec
inc
call
dec
fwait
dec
push
test
mov
bound
xchg
rolb
mov
mov
dec
call
test
test
adc
lods
scas
enter
pop
test
jg
popf
cmpsl
out
inc
jnp
out
js
sub
ror
lahf
pop
mov
pop
jo
push
mov
mov
mov
das
psllw
roll
inc
or
out
and
xchg
xor
gs
test
jne
pop
hlt
and
cwtl
pop
stc
mov
nop
test
in
les
add
out
testl
popf
out
push
cmc
xor
pusha
into
jmp
sub
jne
mov
js
sbb
cmp
pop
or
mov
mov
sub
enter
inc
sub
aas
cwtl
loope
test
repz
xor
int3
fcomip
pmaxsw
pop
lret
xchg
mov
fldcw
outsl
push
adc
or
mov
leave
jle
in
xchg
xchg
xchg
testb
mov
ds
sub
xchg
daa
mov
push
in
outsb
add
andl
stc
sub
je
mul
inc
inc
ljmp
scas
mov
adc
pusha
fndisi(8087
fwait
xor
inc
es
cld
add
xor
jecxz
inc
xor
inc
inc
out
gs
or
inc
cltd
mov
mov
push
icebp
jne
incb
into
adc
rcr
neg
sarb
nop
movsl
fistl
xor
jbe
adc
add
cmpl
push
inc
mov
out
mov
jnp
add
seta
add
movsl
adc
add
sbb
add
loop
xor
popa
fmull
push
fistps
movsl
lahf
ss
xor
sub
xchg
stos
jg
testl
inc
xchg
mov
and
inc
dec
fsts
mov
and
mov
add
lods
or
lret
mov
xor
aas
mov
sub
aam
cmp
stc
cmc
inc
sub
push
push
lods
mov
adc
and
mov
pop
inc
xlat
je
testl
add
insl
out
xchg
lds
outsb
xor
and
lcall
fsubl
pop
sbb
pop
icebp
push
pusha
mov
js
out
dec
scas
mov
test
inc
and
mov
bound
xor
mov
int3
dec
fsts
loopne
insl
popf
das
mov
push
mov
lahf
jmp
test
add
not
call
popa
negb
add
sub
cmp
bound
push
adcb
fimull
sbb
pop
dec
jle
xchg
add
test
lods
les
pop
pop
mov
inc
std
inc
push
pop
idivb
loopne
fistl
xchg
sub
in
fwait
jbe
jg
out
add
shrl
jg
les
adc
dec
iret
cld
shlb
icebp
popa
clc
xchg
shll
push
jg
jp
dec
gs
adc
xchg
xchg
test
sahf
jge
xor
je
fldcw
jmp
mov
add
pushf
mov
jmp
lods
mov
and
nop
pop
stos
cmpsl
xor
mov
cmp
scas
cld
lods
mov
ret
mov
dec
push
lock
mov
sti
jne
leave
mov
sti
adc
inc
xchg
and
out
rolb
movsb
add
mov
jmp
mov
mov
jo
mov
cmpsb
xchg
inc
fcmovb
shlb
pusha
in
outsb
jo
adcb
aas
addr16
xchg
dec
in
or
mov
ljmp
jbe
xlat
fisttps
xchg
sub
imul
add
in
outsb
and
les
lods
lret
loop
pop
sbbb
insb
sbb
sub
dec
movsl
lds
dec
leave
call
and
sbb
sub
aad
mov
test
ret
adc
rcrb
xor
jmp
mov
xor
cmp
mov
lock
ja
outsb
outsl
or
cmp
mov
and
pop
adc
bsr
add
outsl
mov
testb
xchg
xchg
fwait
adcb
dec
cwtl
scas
divl
or
mov
dec
jge
dec
push
sahf
shrb
ljmp
imul
mov
stos
mov
add
push
bound
sub
hlt
negl
cmp
lea
mov
dec
mov
je
repnz
add
jp
xor
rorl
repz
repnz
and
outsb
add
lret
pushf
inc
add
pop
xor
mov
push
inc
or
dec
ds
xor
data16
jecxz
js
js
cmp
add
ficoml
lahf
sub
jl
rorb
and
iret
mov
mov
push
xchg
add
push
jecxz
movsb
mov
jp
sub
into
lcall
clc
divl
cltd
xor
imul
xchg
test
adc
adc
push
cwtl
arpl
out
movsb
add
in
mov
xchg
cmp
xor
and
and
mov
mov
lahf
jbe
xchg
scas
movsl
jae
stc
movsb
inc
frstor
add
imul
pop
add
ss
lret
xlat
xor
sbb
xlat
outsb
fsubp
lret
add
std
sarb
sbb
pushf
std
and
call
push
jb
aam
stc
lret
pop
lock
ja
xlat
fs
cmp
push
xchg
lea
leave
lcall
xor
out
ret
addr16
add
push
jp
adcb
pop
sub
pop
jbe
hlt
cmp
es
jbe
add
popa
mov
mov
and
push
ss
mov
lods
outsb
xor
test
or
mov
loopne
stos
xlat
ja
mov
test
mov
mov
sub
int3
ljmp
ds
xchg
in
maxps
inc
push
push
mov
jae
inc
push
add
and
in
es
insb
mov
es
andl
push
xor
stos
push
fmul
arpl
inc
xor
hlt
ss
pop
jb
sbb
xchg
and
idivb
arpl
dec
and
test
cmp
push
jl
mov
fistps
jg
xchg
push
push
andb
push
jbe
mov
sbb
pop
mov
fadds
andl
sbb
jns
test
fs
push
add
inc
xorb
mov
adc
adcl
dec
or
rcrl
cmpsl
xor
xor
mov
out
fxch
and
and
and
push
cmp
pushl
xor
or
aas
out
jp
or
xchg
daa
mov
xor
xor
sahf
imul
outsl
mov
push
mov
scas
adc
lock
mov
jne
jecxz
mov
leave
jge
push
stc
sahf
hlt
or
sbb
mov
xor
in
icebp
xchg
and
jne
mov
mov
jns
jb
sub
insl
xor
jmp
mov
pop
mov
adc
es
pop
lods
icebp
clc
and
orb
mov
inc
push
push
push
add
xchg
jae
pop
mov
ret
xor
call
in
sbb
adc
lods
jl
imul
cmpsl
shl
pop
lods
xchg
xor
xchg
clc
daa
dec
popa
pop
pop
in
jno
je
cmp
outsb
addb
dec
and
sar
push
das
hlt
mov
mov
addr16
sbb
mov
stc
js
jno
nop
nop
cs
aad
pop
fstps
jecxz
leave
daa
or
sub
mov
aas
pop
je
out
mov
jbe
aam
pop
push
mov
add
adc
mov
leave
ror
cmp
notl
pop
out
mov
jl
and
fwait
sti
das
mov
mov
fstl
sub
lret
movsb
push
and
or
push
call
cmp
sub
xor
ret
add
inc
pop
jnp
jno
inc
pop
sbb
sub
xchg
insl
enter
mov
fistl
orb
popa
or
inc
inc
fsubl
outsb
pushf
test
push
xchg
aas
test
inc
mov
mov
or
xor
add
pop
jae
inc
push
aam
sbb
scas
mov
inc
lcall
orb
xchg
push
or
pop
pop
gs
hlt
lret
or
mov
popl
adcl
lret
ret
mov
lret
mov
inc
or
jno
or
dec
imul
push
jp
mov
add
daa
daa
jns
test
scas
xlat
lods
out
add
pop
sub
mov
pop
sub
adc
jno
cmp
cmp
cmp
pop
repnz
insl
mov
add
lcall
in
scas
cmp
sub
jp
call
cld
cmpsl
cmp
je
pop
dec
cmp
je
pusha
fisttps
lock
xor
xchg
test
dec
mov
dec
sub
pop
jg
loop
and
fs
mov
xchg
les
scas
adc
out
imul
mov
add
dec
out
outsb
loop
or
push
jno
inc
xchg
sub
es
jge
cmc
pop
and
push
jns
stc
imul
xchg
or
pop
or
sbb
into
enter
mov
or
inc
imul
iret
daa
xchg
inc
fdivs
in
mov
mov
and
mov
ljmp
mov
dec
fs
mov
insl
cmp
cmpsl
sti
nop
xchg
int3
jbe
mov
lods
lahf
mov
push
inc
pop
lods
cmp
mov
add
int3
and
adc
dec
cmpsb
in
mov
je
call
xorb
loope
xchg
push
iret
es
jle
subl
adc
je
outsl
and
mov
cld
inc
cmpsb
push
aas
insb
sbb
nopl
bound
pusha
adc
dec
movsl
push
mov
andl
mov
adc
pop
pop
add
sbb
pop
sub
xor
dec
dec
loop
imul
push
xchg
mov
outsl
and
aad
add
sbb
push
push
stos
sarb
or
insl
mov
xchg
faddp
subl
cmp
dec
push
dec
jb
leave
ftst
inc
mov
lods
push
faddl
mov
sahf
in
xor
int3
popa
fdivrl
jmp
jecxz
sbb
aad
mov
xchg
icebp
cs
sahf
clc
mov
jns
fidivrs
mov
fnstsw
add
int
mov
je
add
pop
dec
mov
cmpl
and
andl
loop
cli
mov
jmp
adc
sub
xor
repnz
sub
movd
cmpsl
out
aas
shr
jle
mov
sbbl
jo
mov
repnz
jo
repnz
inc
inc
mov
stos
jb
popa
outsl
in
daa
and
mov
sub
loopne
sub
mov
movsl
stos
inc
das
je
dec
adc
jmp
lods
xchg
xchg
jne
sub
shufps
jecxz
daa
fistps
orl
cmc
sub
lods
ss
jnp
inc
xchg
lods
in
fcoml
jbe
dec
sub
mov
or
cmpsl
lods
xchg
xchg
test
or
outsb
popf
xorl
cwtl
sarb
popa
pusha
cmc
xchg
inc
or
aas
and
mov
cs
jle
sahf
inc
or
dec
mov
push
jbe
gs
mov
popa
adc
jle
cmp
rcrb
lcall
data16
or
mov
and
cmpsb
mov
loop
movsb
add
addps
test
fwait
jg
fwait
push
in
dec
pop
sub
add
add
or
add
push
syscall
in
cmp
cmc
xor
mov
dec
push
in
ljmp
mov
nop
addr16
movsl
lahf
loop
ret
jae
fdivrs
rorb
sbb
xor
cmp
mov
aaa
ror
in
outsl
or
mov
xchg
adc
sbb
mov
aas
lcall
out
inc
inc
inc
lock
inc
push
imul
scas
push
jb
jb
aas
adc
mov
out
inc
ficoms
mov
cmc
loope
shll
push
out
mov
clc
mov
push
in
dec
dec
jb
inc
int3
mov
ds
mov
dec
test
js
out
loope
out
ret
cmp
or
sbb
pop
dec
outsl
not
ret
lret
mov
pushf
add
fisubs
mov
adc
aam
pushf
or
andb
in
into
and
scas
mov
jmp
or
push
cmp
iret
lods
insl
xor
lcall
adc
sbb
and
repnz
mov
insb
ljmp
push
notl
cs
fdiv
std
or
in
mov
pusha
cmp
testb
mov
pop
jns
test
inc
cs
in
mov
sub
sahf
test
mov
ret
jecxz
jo
lods
movsl
mov
pop
xchg
sub
lods
xor
std
hlt
fldz
xlat
outsb
and
cmp
cmc
cmp
push
cwtl
jae
mov
ret
fidivs
mov
arpl
popf
test
mov
jp
pop
xchg
jo
add
testl
lret
xor
lock
cwtl
mov
cmc
pop
int
and
push
test
addb
out
adc
lods
inc
push
and
push
lcall
push
aas
insb
shrl
inc
mov
lds
jns
daa
pop
cmp
lock
pusha
pop
stc
or
scas
notl
mulb
inc
out
int
pop
lahf
mul
sbb
in
push
outsl
les
mulb
push
lret
mov
add
pop
movsl
adc
iret
jle
ret
stos
fisubrl
sti
scas
push
cmpsb
push
or
push
inc
xor
popa
jnp
lret
inc
jbe
pusha
cmpb
mull
clc
outsl
adc
lds
mov
dec
insb
add
adc
xchg
mov
movsb
add
pop
ret
repnz
pop
test
fidivrl
cmc
xchg
repz
dec
pushf
cli
movsl
cld
outsl
iret
or
cmp
jbe
sbb
push
dec
mov
cltd
cmpsl
notl
and
in
dec
out
ljmp
in
push
jb
mov
add
in
mov
jle
cmp
jg
or
push
js
in
inc
sbb
pop
jg
js
inc
in
pop
push
mov
addr16
pop
or
jnp
outsb
or
xor
stos
sub
pop
popl
sub
xchg
test
sbb
mov
lcall
and
and
bound
cmp
add
sbb
and
or
jmp
dec
lock
call
int3
arpl
repnz
lods
and
xchg
adc
lcall
movsb
cld
add
inc
out
mov
test
int
lret
fmull
and
out
cmp
in
push
cmp
stc
adcl
pop
inc
ljmp
jge
and
jg
mov
cmpsb
or
inc
test
adc
shll
mov
push
dec
add
movsl
inc
aas
sahf
add
int3
insb
lret
fbstp
ljmp
insl
mov
add
xchg
enter
pop
je
ds
es
xlat
jmp
icebp
mov
adc
xchg
sub
imul
into
sub
push
fadds
pop
fldenv
dec
lcall
addr16
push
dec
fbstp
ljmp
mov
lahf
add
lea
xor
xchg
inc
loopne
jecxz
adc
cmp
sbb
push
adc
ss
mov
aad
pop
call
les
ficomps
sub
pop
cmp
bound
stos
xchg
adc
mov
sbb
fistps
aas
push
inc
sub
out
addr16
sbb
je
and
int
mov
mov
rolb
fcomps
rcrb
leave
push
or
inc
mov
jecxz
faddl
inc
in
lods
sbb
xor
stos
xchg
sub
dec
dec
cltd
inc
inc
mov
jle
push
mov
add
xor
fs
jmp
pop
stos
push
aas
or
xor
gs
daa
mov
fs
fwait
adcl
ja
pop
call
int3
adc
lret
xor
ficoms
lret
fistps
jnp
rolb
movsl
nop
ficomps
sub
shlb
adc
stos
jne
push
fadd
sbb
rol
pop
sbb
xlat
hlt
rorb
lea
leave
mov
or
cmp
pop
outsl
or
mov
jge
or
popl
mov
fnsave
mov
scas
stc
dec
lahf
add
push
xlat
jbe
mov
sti
sbb
repz
xchg
sbb
pop
negb
and
cwtl
cwtl
aas
mov
das
stos
xchg
and
dec
stos
xor
add
movsl
and
inc
fcomip
jae
cmp
mov
les
cmc
loop
dec
jbe
je
enter
and
shlb
fstpt
lret
pop
icebp
mov
movsb
imull
xchg
aad
jp
cmpsl
ds
lret
dec
dec
gs
mov
jno
jge
cltd
rorb
stc
xchg
fdivrl
dec
test
mov
pop
loopne
nop
cs
cmp
sub
data16
add
pop
jg
inc
int3
xchg
mov
ja
push
fcoml
push
dec
mull
repz
cld
clc
jae
xlat
imul
imul
inc
mov
add
sbb
and
rcrl
cmc
pop
imul
jbe
mov
leave
stos
leave
fldt
es
xor
jno
cwtl
mov
xor
mov
inc
stos
xchg
in
jne
and
xor
popa
rcr
imul
decl
xor
fdivp
inc
cmpsl
test
mov
push
push
jbe
cmp
cli
and
psubusb
dec
pop
push
popa
stc
push
call
scas
cmpb
dec
add
test
je
cmp
cltd
mov
pop
icebp
xchg
sub
rcll
daa
cwtl
push
loope
push
add
cwtl
addl
mov
inc
pop
sbb
aad
cmp
lahf
jb
insl
sbb
jp
subb
sub
adc
scas
shll
movsb
cmp
mov
jne
ret
mov
repz
dec
cs
jecxz
aam
jle
mov
stc
mov
fsts
adc
jne
shrb
cmp
add
fwait
xor
add
fists
push
test
popa
clc
xor
pop
fnstsw
sub
scas
scas
test
shlb
sbb
lret
inc
xlat
cmc
adc
cld
gs
inc
cmpsl
into
xor
mov
fcmovnu
test
insl
xchg
enter
xchg
js
mov
cltd
push
mov
xor
mov
cmp
roll
cmp
push
xchg
scas
cmp
and
test
movsb
sbb
pop
mov
movsl
jnp
mov
jmp
mov
jp
movsb
mov
cmp
inc
ret
adcl
loopne
xchg
cs
popa
jae
popa
cmp
insl
push
xchg
xor
inc
in
jns
xor
push
push
imulb
cmpsb
and
pusha
cld
inc
les
mov
icebp
dec
and
or
cmp
mov
adc
test
sbbb
cs
daa
sub
xor
jmp
pop
dec
int3
xor
adc
rclb
jecxz
xchg
jge
lcall
std
adc
mov
test
pusha
push
adc
adcb
push
xor
mov
xchg
gs
pop
lea
in
xchg
cli
movsb
ds
das
jo
inc
lds
sub
jecxz
mov
cmpsl
mov
lock
dec
push
daa
lea
lods
xor
popa
add
push
add
mov
pop
mov
lods
jg
add
xor
shl
ret
pusha
test
test
mov
xor
mov
imul
cmpsb
sub
fs
or
jne
mov
dec
iret
test
sbb
fldt
je
pop
daa
push
cwtl
das
test
jo
repnz
out
setnp
fbld
pushf
int3
gs
push
inc
mov
in
out
cmp
int
adc
push
popa
mov
bound
sbb
jp
sahf
push
or
sub
out
lret
loopne
mov
sbb
mov
iret
mov
xchg
adc
loop
dec
mov
call
gs
push
inc
mov
mov
adc
call
xor
xchg
inc
rcr
push
fldcw
test
sub
xchg
or
cmp
dec
movsl
insb
mov
xor
or
cmp
lahf
push
imul
jae
shlb
xor
stc
repz
test
cli
test
cmp
in
dec
adc
mov
sti
fildll
dec
mov
das
fdivrl
add
imul
mov
add
jl
aam
xor
jmp
sub
pushf
jecxz
xchg
inc
lcall
fldl
sti
scas
out
mov
hlt
int3
imul
mov
cs
pusha
push
mov
jb
mov
push
mov
dec
lret
adc
setnp
pop
xchg
adc
popf
ret
cmp
sub
cmp
push
pop
pop
dec
leave
std
outsb
sub
sub
push
xchg
lds
xchg
rol
enter
or
mov
and
mov
jle
sub
sti
mov
jg
jg
xor
and
inc
repz
jge
push
mov
push
insb
add
test
push
and
adc
dec
rolb
int
sub
dec
sbb
push
inc
pop
xor
inc
push
cmp
push
mov
aas
idivb
pop
andl
sbb
xor
cmpsl
pushf
xor
rolb
mov
lods
fistl
and
add
dec
scas
pop
and
xchg
hlt
inc
mov
mov
lock
mov
mov
imul
xchg
out
addr16
cmpsl
and
inc
and
mov
lock
flds
pusha
cmpsl
loop
pop
test
add
hlt
rcr
decl
push
jno
lds
out
les
pop
pop
lfs
ret
cmp
shlb
nop
or
aam
hlt
shlb
and
cmpsb
cmp
cmp
xorb
add
inc
xchg
pop
inc
rorl
sub
mov
movsl
repnz
dec
faddl
repnz
lret
mov
inc
popl
jb
rol
inc
push
mov
mov
call
loopne
pop
sub
shrl
dec
push
fcoml
je
or
fwait
add
jle
xchg
and
das
xor
add
popf
lods
adc
ljmp
xlat
or
inc
or
iret
add
cmp
mov
orl
push
jb
inc
pop
mov
sub
mov
js
or
xor
add
call
or
ss
inc
imul
sbb
add
int
and
inc
cmc
mov
sub
cli
inc
pusha
inc
mov
xchg
scas
mov
jb
lret
lret
mov
jns
xor
adc
les
fisttpll
cmp
or
add
dec
out
cld
xchg
cmc
mov
adc
mov
adc
jb
ret
cmpsl
into
sub
jle
adc
hlt
mov
es
jbe
je
movb
or
cld
pop
cmp
stc
in
mov
or
mov
sbb
rcr
or
or
imul
out
rcl
fnstsw
popa
add
daa
pop
and
clc
pushf
xchg
mov
xor
jp
fsubrp
out
std
inc
inc
mov
sahf
addb
or
fsub
xchg
fcomp
mov
adcl
xchg
lds
out
mov
mov
outsl
fwait
ljmp
adc
mov
adcl
xor
sub
cmp
lahf
vpunpckhbw
rcr
pop
pop
push
fmul
outsb
sbb
mov
mov
mov
and
dec
mov
jo
jecxz
xchg
push
or
jecxz
lock
test
loope
jge
inc
sub
addr16
inc
movsb
cs
lock
mov
mov
jmp
out
cmp
or
xor
sub
cmc
loop
es
lahf
in
cmp
inc
insb
mov
iret
add
dec
mov
pop
testb
out
sahf
ljmp
mov
sbb
or
cmpsl
out
popa
std
sbb
mov
inc
aam
xor
movsb
inc
sbb
data16
adc
sub
pushf
dec
popa
nop
and
mov
push
cli
sbb
popl
sahf
jl
sbb
jl
push
fisttpll
jae
shrb
repz
in
scas
fnstsw
imul
sarb
sbb
sbb
movsb
clc
jae
insb
jnp
out
mov
push
sahf
cmp
and
add
mov
je
inc
cltd
mov
or
out
cwtl
sub
push
inc
mov
mov
in
mov
jp
adc
fbstp
xchg
push
insl
pop
out
jno
mov
jne
cmp
dec
sbb
or
push
add
fimuls
fistl
stos
mov
jno
out
inc
cmp
ja
lods
filds
push
dec
push
and
popf
sub
sarb
or
sub
push
pop
adc
out
lods
push
jae
xor
mov
xor
inc
insb
cmpb
lock
cmp
dec
adc
loope
out
icebp
sub
insl
jne
lret
das
xor
hlt
addr16
add
outsl
or
push
jle
sub
movsl
xchg
jns
aaa
fldenv
xchg
ftst
daa
pop
mov
sbb
mov
pushf
cld
sbb
xor
jmp
cmpsb
adc
lock
jmp
fdivl
dec
ficomps
mov
in
fidivl
cmpsl
jp
pop
dec
aad
call
pop
dec
movsl
shll
jae
xor
adc
jle
push
sub
or
hlt
sbb
jg
scas
pop
daa
fwait
xor
int
icebp
repz
loop
lds
clc
int3
lds
js
in
sbb
sub
cmc
nop
dec
ja
and
pushf
and
pop
call
or
out
enter
push
ljmp
fsts
mov
pushf
jbe
xchg
arpl
sbbl
and
movsl
inc
mov
mov
mov
add
into
fistpl
dec
ret
adc
jno
outsl
ficoms
push
aam
mov
xor
sbb
push
test
add
nop
divl
push
cmpsb
nop
ret
aaa
jb
out
mov
cli
pushf
sarb
cmp
imul
nop
pop
add
or
pop
add
xor
ja
aad
dec
mov
sbb
ja
add
sti
pushf
rcrb
xor
clc
push
inc
cmc
pop
mov
push
std
cltd
jne
and
pusha
lcall
jno
xchg
sbb
sbbl
fisttpll
mov
mov
jle
lret
outsl
push
enter
fidivl
sbb
add
stos
fisubs
push
pop
outsb
jp
jno
out
loop
mov
sbb
dec
or
inc
icebp
jnp
loopne
xor
xchg
ja
inc
dec
movsl
inc
push
add
xor
and
or
notl
mov
aaa
pop
ret
push
jnp
fiaddl
xchg
xchg
ss
push
fdivp
rcrb
mov
add
mov
pop
ds
lock
ds
dec
lods
out
or
daa
dec
or
clc
mov
adc
lahf
fdivs
jg
in
fiadds
lret
xchg
hlt
adc
inc
mov
cld
mov
pop
xchg
dec
dec
mov
mov
fisttpll
je
stos
fucomi
je
lea
lret
pop
cmp
loopne
xor
rorb
adc
call
icebp
xor
sub
cld
repnz
call
clc
stos
jne
and
mov
xor
sub
add
into
sub
pop
je
sub
shlb
dec
pop
dec
mov
test
mov
mov
bound
add
and
cwtl
push
adc
lret
test
ret
fbstp
in
mov
cmp
mov
js
and
push
inc
or
push
pop
xor
mov
mul
mov
sbb
sbb
fdivs
and
lock
test
cs
inc
inc
xchg
xor
dec
add
xchg
repz
mov
inc
adc
and
pop
in
out
xchg
stos
repz
pop
aas
out
and
sbb
outsb
in
pop
mov
in
xor
aas
cmpsb
adc
cmpb
shl
orl
daa
dec
mov
push
ljmp
mov
pop
add
loope
mov
inc
hlt
jnp
subb
jb
adc
sbb
sbb
insl
xchg
iret
icebp
lcall
pop
or
test
mov
imul
sbbb
mov
inc
imul
jmp
xor
out
lahf
adc
dec
cltd
out
xchg
pop
out
fs
rcll
push
push
sub
aad
movsb
sti
sbb
call
or
sbb
mov
adc
pushf
sbb
push
pop
stos
into
jae
popa
frstor
pop
lret
dec
mov
mov
pop
arpl
adc
cs
sub
nop
jp
movsb
daa
adcb
mov
push
or
and
dec
sub
leave
and
pop
mov
push
mov
movsl
add
push
jge
and
dec
loope
add
sub
xor
jbe
pop
pop
lods
add
adc
nopl
xchg
sub
or
stc
mov
or
sbb
dec
sub
cmp
mov
testb
addr16
or
ja
popl
adc
outsl
addr16
inc
push
aaa
orb
std
fnsave
ds
jecxz
mov
out
in
xsaveopt
or
je
or
std
xchg
or
mov
lds
sahf
int
xor
fs
sub
jbe
sub
icebp
xchg
inc
dec
dec
loop
add
push
dec
adc
iret
adc
lcall
xor
insb
aam
adcb
aad
loopne
or
dec
dec
xor
popa
cmc
ret
fists
addr16
fadds
dec
loope
adc
and
xchg
nop
popf
pop
push
mov
lock
jg
jecxz
dec
push
scas
sbb
iret
nop
out
mov
xor
pavgb
movsl
gs
mov
addr16
push
fcmovnb
mov
xor
pop
testb
dec
cmp
mov
in
addr16
inc
lds
imul
mov
icebp
jo
jmp
fidivrs
imulb
lea
mov
int3
xorb
imul
inc
or
xchg
adc
lock
lahf
cmp
xchg
js
or
cs
sbb
and
rcll
pop
aaa
filds
test
in
std
mov
adcb
jl
popf
mov
mov
or
mov
xchg
dec
dec
pop
in
sub
mov
dec
adc
xorl
rcll
pop
sbb
movsb
addl
popf
mov
arpl
lock
and
in
inc
xchg
mov
mov
out
loope
aaa
flds
or
cmp
mov
outsb
repnz
mov
es
mov
mov
add
sub
jmp
xchg
sbb
loop
pslld
mov
lds
stc
inc
sub
das
adc
jle
lods
mov
mov
and
leave
push
and
push
add
or
pop
lea
clc
push
lds
mov
pop
push
pop
adc
std
arpl
and
sbb
lcall
inc
out
xor
and
pop
and
jae
cltd
mov
in
pop
add
or
lods
rorl
xlat
int
loop
lds
cmp
mov
fimull
test
lods
sub
inc
je
ja
lcall
icebp
sbb
hlt
fxch
cmp
js
push
out
out
cltd
ds
fcmove
pop
mov
push
add
test
or
rcrb
sub
jl
add
cmp
out
cmp
rclb
mov
fldt
adc
xlat
inc
jne
xor
push
std
cs
pushf
stos
and
jmp
fidivl
lret
scas
mov
or
lods
dec
and
push
imul
pushl
movsl
pop
faddl
xchg
pop
enter
and
xchg
repnz
mov
shrb
dec
jecxz
or
mov
push
adc
cmp
enter
shrl
jge
outsl
push
mov
sarl
mov
jmp
jl
push
dec
out
ss
imul
stc
lcall
fs
push
add
push
xor
jne
subl
xchg
mov
sbb
mov
sbbb
mov
outsl
sub
nop
xor
fnsave
scas
mov
adc
or
dec
pop
daa
lcall
push
mov
and
out
xchg
xchg
loope
sti
cmp
jl
out
loopne
frstor
imul
lods
dec
and
call
dec
pop
jl
adc
pop
mov
jb
shrb
repz
icebp
fidivs
or
jg
xor
das
cmp
pushf
push
loop
or
repnz
pushf
xchg
sbb
mov
or
scas
xchg
dec
nop
mov
push
aam
add
fdivrs
scas
data16
and
add
xor
xor
scas
push
mull
les
xor
dec
sbb
and
add
or
sub
dec
scas
sbb
add
outsl
sbbl
rolb
in
xor
sbbl
xchg
repnz
int3
lret
fsubs
int
fisubl
je
inc
test
hlt
mov
inc
int3
lret
arpl
dec
ljmp
mov
or
xchg
add
scas
test
or
lcall
adc
dec
arpl
into
ljmp
jg
mov
fdivp
dec
mov
mov
lret
lea
mov
jge
mov
aaa
cmpsl
out
stc
pop
jecxz
into
lds
dec
push
jne
test
aaa
pop
xor
inc
mov
add
testl
ret
jnp
shl
mov
sbb
sub
mov
add
into
push
inc
cltd
xor
jne
call
cmp
out
fs
pop
cmp
xchg
xorl
dec
mov
pop
dec
pop
push
mov
cmpsb
xor
testb
inc
push
lock
xor
jl
sub
jl
bound
cmpl
sbb
lods
xor
mov
mov
xchg
or
shll
iret
pop
pop
cmpsb
inc
inc
fnstenv
pushl
pop
or
add
mov
clc
mov
pop
fcomip
adc
xor
popa
add
push
adc
out
mov
cmp
mov
rcrb
mov
xorb
loopne
pop
mov
dec
xchg
mov
incb
loop
sarb
je
out
in
xchg
jne
push
cs
add
fs
stos
mov
cmpsl
mov
and
addr16
cmpsl
mov
xor
insb
ja
sbb
stc
add
and
sahf
lea
stos
xor
imul
mov
sub
movsl
jp
imull
int3
sub
fs
nop
not
or
pop
repz
xor
insl
stos
jbe
mov
jle
ret
shrl
sbb
pop
dec
inc
test
and
in
push
dec
add
aam
mov
cmp
and
out
fildll
pop
mov
jns
cltd
ret
jne
pop
push
sub
pop
mov
jp
and
sbb
call
push
cmp
dec
mov
xor
iret
fs
cmp
push
ljmp
mov
and
jmp
cmp
cmp
jl
rol
loopne
jno
pop
mov
cmp
movups
push
pop
mov
dec
push
ret
outsl
pandn
sbb
rolb
stc
and
jp
push
in
pop
mov
add
xchg
scas
mov
push
lret
bound
aaa
in
ljmp
cmp
mov
fisubl
lret
bound
arpl
ja
jno
aaa
sub
sub
jo
les
insl
push
nop
sub
mov
sub
xchg
inc
fisubrl
xchg
jo
clc
scas
rol
push
xor
mov
roll
loope
test
xor
xlat
adcl
adc
cmpsl
outsb
push
inc
push
push
addb
dec
xor
push
out
pop
sub
lcall
sbb
test
cmp
sti
mov
add
fldenv
dec
popa
push
dec
lock
and
inc
push
push
imul
pop
test
ljmp
mov
cld
inc
push
xlat
stc
adc
movsl
mov
fs
inc
lds
xor
ljmp
lret
jno
ljmp
mov
cwtl
lea
inc
inc
gs
addr16
lret
mov
loopne
sbb
inc
frstor
inc
xor
ret
xor
push
shrb
loopne
scas
mov
orb
mov
mov
push
push
lret
mov
clc
imul
int
repnz
dec
dec
lahf
adc
or
mov
mov
cmp
push
push
pop
xchg
das
cmp
or
mov
mov
inc
mov
jns
pop
stos
jo
xor
inc
cmc
push
je
pushf
repz
shrb
aad
mov
jge
sbb
xlat
sbb
sub
aam
sbb
shll
mov
mov
dec
sub
aam
add
push
adc
sahf
xor
xchg
mov
xchg
out
nop
pop
dec
inc
fcomip
or
cmpsl
sbb
lds
negb
hlt
into
xchg
orl
out
mov
or
mov
imul
jb
or
push
enter
push
sar
and
push
iret
stc
add
imul
aaa
cld
in
daa
fmuls
and
stos
adc
shlb
fcoms
cli
hlt
inc
ljmp
inc
fidivs
pop
loope
inc
test
fistl
sub
icebp
xchg
pop
and
sub
bound
mov
or
and
dec
add
xchg
pop
popf
or
outsl
sub
ja
and
imul
and
mov
push
dec
inc
aam
dec
pop
fisubrl
adc
mull
ficompl
and
xor
aas
inc
popa
movl
sbb
lea
sbb
and
sub
fstl
mov
test
or
lret
aad
pop
pop
xor
cli
out
iret
mov
repnz
aad
jno
cmpsl
sub
out
add
in
addb
clc
xchg
mov
push
fistl
test
push
les
sub
inc
jp
fcmovbe
loope
in
adc
test
jge
jns
lods
mov
cmp
mov
ds
fisttpll
aad
popa
inc
stos
dec
pop
sub
sub
cmp
and
ds
out
in
std
and
add
and
add
cmpsb
into
test
push
gs
stos
xor
je
adc
fs
decb
out
inc
sub
jp
or
rorb
dec
gs
pop
movsb
dec
pusha
jg
lahf
mov
dec
rclb
xchg
addl
push
jmp
and
or
cli
xchg
iret
xlat
pop
mov
movsl
movsl
sbb
fcompl
imul
push
add
ljmp
adc
cwtl
int
cltd
xor
mov
jo
clc
cmpsl
cltd
push
mov
xchg
mov
out
fnstcw
ja
int
xchg
loop
dec
pop
jbe
stos
out
sbb
fucomp
ret
inc
orb
xchg
cmp
xlat
mov
pop
adc
lods
je
push
xor
subl
in
push
lea
fdecstp
ss
push
je
jg
sub
data16
or
cld
xchg
sub
js
dec
sbb
jge
add
lahf
lds
inc
aas
xchg
jne
jp
dec
rcrl
adc
test
mulb
scas
mov
imul
stc
and
imul
add
cmp
movsl
and
mov
idivb
popf
pop
test
into
mov
jge
adc
out
lcall
add
pop
lret
and
push
pop
cwtl
inc
lret
mov
jmp
sub
adc
add
adc
pop
xor
insl
mov
fldpi
andb
arpl
cmp
push
add
inc
mov
pop
lret
nop
lds
lock
cltd
inc
inc
adc
cmp
gs
inc
ret
pop
adc
cmpsl
insb
add
dec
jns
js
inc
mov
addr16
cwtl
and
dec
xor
mov
lret
movsl
enter
mov
lods
nop
rep
jmp
jae
jmp
push
lock
jg
cmp
and
push
pop
add
aad
push
xor
or
out
cmpsl
sbb
mov
cmp
lods
out
fneni(8087
mov
push
imulb
ljmp
push
aaa
or
pop
outsl
and
popa
xchg
sahf
addl
sub
jno
ljmp
sbb
and
adc
xor
cmp
add
or
sbbb
cmp
add
mov
add
xchg
dec
fsts
sub
add
nop
inc
jmp
mov
lcall
aaa
cmp
ret
lods
sbb
mov
pop
insl
mov
scas
mov
lret
fistpll
gs
xor
fidivs
int3
inc
scas
jb
adc
mov
je
pop
sbb
lahf
mov
push
pushf
repnz
push
out
jo
jp
loop
jne
mov
sub
iret
popa
lds
rolb
ret
sbb
cmpsl
sbb
mov
mov
lahf
das
cmp
adc
add
adc
cmp
xchg
push
inc
loop
add
test
or
ds
inc
bound
hlt
mov
mov
imul
pop
call
hlt
in
sbb
xor
xor
or
jg
dec
sarb
mov
dec
sbb
xchg
dec
insb
ljmp
push
jbe
aas
cmpsb
jl
repz
sub
xor
lds
inc
sti
pop
orl
dec
mov
mov
push
mov
sbb
or
insl
jbe
lahf
cmp
ja
add
mov
fadds
test
pusha
call
cmp
push
into
jne
aas
shlb
test
cmc
dec
adc
notb
rorb
sub
pop
sub
push
insl
hlt
push
scas
jle
dec
movsb
lods
loope
test
add
repz
adc
xchg
xor
insl
aam
and
mov
mov
call
ficomps
xor
scas
xor
dec
jns
mov
arpl
jns
pop
push
xchg
cmp
add
fxch
sahf
pop
loop
xor
movsb
mov
pop
shlb
loope
repz
pusha
rclb
cwtl
ret
sbb
cmc
mov
shll
subl
loop
and
jg
int3
dec
or
push
cmp
jle
fbstp
sbb
jnp
stc
push
push
gs
add
mov
idivl
fwait
sbb
jbe
ret
lret
push
dec
ss
fcompl
hlt
loopew
arpl
es
stc
xchg
cmpsb
pop
fdivrl
sbb
xor
push
ljmp
push
inc
aad
cld
adc
pop
sbbl
cli
xchg
xor
imul
and
daa
push
insl
push
adc
js
sbb
loopne
inc
add
jecxz
and
xor
mov
adcb
lods
push
addl
arpl
inc
sbb
sub
filds
inc
adc
sub
idivb
bound
dec
jge
push
push
jl
mov
adc
jbe
push
stos
ret
dec
sbb
aam
mov
ss
lret
xchg
ja
push
sbb
pop
and
and
jne
push
xchg
adc
push
xchg
popf
pop
mov
rcll
repnz
sbb
mov
hlt
out
es
es
or
add
ds
fdivrl
stc
mov
jg
mov
mov
scas
push
out
push
test
mov
test
inc
cmp
stos
icebp
out
test
inc
loopne
mov
add
xchg
imulb
cmc
cmp
ficoml
out
sbb
adc
or
mov
aam
and
mov
movswl
pop
inc
rcrb
lds
add
mov
mov
jl
or
in
inc
fadds
test
xor
jge
fwait
pop
sahf
push
fwait
cltd
push
sub
xchg
lods
sarl
call
mov
mov
xlat
aas
test
loopne
aad
add
mov
pop
cli
inc
fcos
int3
pop
or
out
add
loopne
shrb
pop
fwait
inc
jl
push
pop
adc
xor
or
jae
insl
movsl
jns
dec
imul
push
lahf
cmp
inc
je
mov
fcmove
mov
xchg
xor
mov
ret
sbb
test
std
jae
cld
sbb
popl
sti
outsb
add
fcomps
pop
cld
test
aam
and
or
repz
es
popa
pop
push
jbe
and
jg
push
scas
test
xchg
decb
test
mov
int3
mov
out
inc
jecxz
addr16
stos
mov
sub
cmp
add
loope
sub
and
xor
xor
pop
in
into
in
addr16
in
mov
xchg
and
fcomps
or
sub
mov
je
stos
pop
adc
xchg
pusha
adc
loop
sahf
push
xor
pop
fcomi
ss
lods
pop
mov
aad
xchg
mov
lret
cmpsb
cmp
xor
filds
faddl
fcomps
cmovge
js
adc
lret
cmp
push
and
fdivl
fldcw
jp
inc
rcrb
add
outsl
xchg
dec
mov
ja
outsb
sbb
sbb
and
jmp
mov
mov
fists
adc
arpl
ljmp
xlat
shrb
lds
jge
shlb
push
mov
dec
in
push
arpl
fimuls
repnz
cmp
mov
push
pop
sti
sub
jecxz
xor
sub
mov
movsb
mov
mov
sbb
dec
loope
cmpsl
mov
cmp
sbb
push
xchg
xor
dec
ret
pop
jae
mov
ja
out
pushf
in
sti
movhps
test
push
pop
in
inc
xchg
sbb
in
cmp
xchg
dec
je
dec
in
insl
ret
shlb
insl
imul
sub
call
sub
sub
mov
xchg
xchg
mov
xchg
fnstcw
pop
cmp
add
mov
jno
pop
stos
cmp
push
cld
imul
mov
fsubrp
icebp
mov
push
add
inc
idiv
sahf
pop
repz
and
fdivr
push
fcomp
sbb
and
nop
std
std
fstpt
xor
mov
mov
dec
dec
dec
jp
mull
add
mov
xchg
icebp
in
inc
push
mov
mov
push
push
inc
xchg
or
mov
pop
insl
sub
shl
stos
sbb
push
inc
aad
out
frstor
test
push
movsl
xor
pop
mov
ror
pop
jo
cmp
xchg
loope
stc
lcall
addr16
cmp
push
jle
shl
fst
imul
jg
push
pop
aaa
lea
xchg
mov
les
or
push
sbb
enter
pop
pop
xchg
aaa
mov
scas
fsts
sub
lcall
xchg
lock
and
xor
xor
dec
adc
inc
call
fstl
cmp
in
fwait
mov
push
or
adc
xlat
test
xor
jb
add
cld
dec
int3
iret
inc
xchg
pop
movsb
inc
jno
mov
imul
test
inc
int3
mov
jecxz
inc
adc
xchg
hlt
in
pushf
and
sbb
aad
aas
push
arpl
lods
push
stc
stos
xorl
or
or
or
aad
mov
add
insl
jbe
int3
mov
aad
xor
jo
sub
sub
test
lods
stos
adc
push
je
mov
fidivs
mov
mov
push
mov
lds
mov
and
jbe
and
cmp
and
jnp
and
sub
sbb
outsl
add
mov
roll
cs
add
mov
mov
push
add
int3
bound
arpl
xchg
movb
mov
outsb
fwait
add
mov
xor
xchg
hlt
inc
dec
add
xchg
ja
pop
push
sub
ja
adc
pop
xor
dec
pop
mov
pop
iret
mov
sahf
xchg
sub
sti
mov
out
movb
lret
mov
shl
xor
mov
or
xchg
mov
jnp
xor
loop
sbb
ret
insl
mov
mov
aad
or
adc
pushf
pop
test
rclb
inc
mov
out
mov
mov
xchg
rcrb
xchg
in
jmp
and
sbb
ljmp
repz
addr16
inc
sbb
out
dec
call
mov
mov
inc
adc
jae
imul
push
add
addl
pop
jp
mov
sahf
shrl
ret
or
test
or
sti
aam
and
cmpsl
mov
shrl
vrsqrtss
les
mov
sub
mov
movsb
clc
imul
lret
ja
pop
push
jge
jnp
jne
pushf
pop
std
sarl
xor
mov
loopne
jb
mov
fimull
outsl
jns
pop
mov
push
imul
popf
inc
insb
ss
shl
xor
xchg
add
outsl
xlat
xor
daa
cltd
xor
mov
neg
adc
mov
arpl
mov
xor
lea
push
cmpsb
pusha
lock
sub
movsb
out
xchg
pop
xorl
pop
aaa
int3
into
mov
lret
push
movsl
cmp
out
add
adc
daa
jns
outsl
jns
adc
mov
mov
ja
popa
rcrl
popa
rep
jge
or
les
daa
cmp
decb
mov
jge
enter
push
or
test
jge
and
mov
pop
cld
mov
sub
mov
cmp
dec
push
out
lods
pusha
mov
jo
fistpll
loopne
lds
out
mov
adcb
push
pusha
mov
dec
das
test
pcmpeqd
pop
lea
jne
out
test
pop
jg,pn
ffreep
xor
jne
imul
pushf
in
xchg
pop
mov
mov
femms
and
sahf
mov
inc
inc
addr16
in
and
pop
fldt
jns
arpl
out
dec
push
mov
add
lods
adc
jns
test
jno
mov
mov
shrl
pushf
cltd
xor
lret
mov
cmp
sbb
mov
cmp
fiadds
xor
pop
shl
sbb
ret
add
push
popaw
test
jae
rclb
addr16
repz
xor
lahf
jns
test
xchg
jmp
inc
fildll
or
movsb
xor
push
cmp
dec
mov
or
out
mov
xchg
out
dec
imul
push
in
dec
aas
inc
push
js
and
pop
out
test
push
cmp
pop
and
inc
hlt
mov
in
jl
cmpb
lret
fnstcw
sbbl
sub
or
pop
xor
das
jmp
bswap
cmp
xchg
femms
mov
ret
xlat
adc
mov
int3
ds
and
push
push
hlt
popa
jge
mov
adc
jmp
mov
dec
icebp
imul
int
dec
adc
mov
push
shll
mov
sbb
test
pop
mov
clc
pop
out
arpl
xchg
mov
xchg
psrad
nop
mov
push
jle
into
and
mov
test
lods
in
mov
dec
jecxz
aad
add
rorl
inc
jge
lahf
scas
dec
addl
push
and
push
fdivl
out
int3
xor
adc
int3
xor
arpl
mov
addl
dec
fwait
xchg
sbb
outsb
sbb
adc
sbb
in
pusha
out
xor
aas
mov
or
inc
loope
xor
stos
xchg
stos
add
push
cld
insl
cmc
arpl
shlb
cmovns
cmp
aam
jnp
inc
fnstenv
sahf
mov
fs
mov
xchg
scas
mov
je
ljmp
mov
mov
xchg
adc
pop
aaa
loope
pop
mov
push
incb
cltd
das
leave
ja
prefetch
jp
sub
dec
fdecstp
das
adc
cmp
and
dec
mov
imul
xor
shll
stos
lea
pop
or
aas
pop
sbb
dec
add
mov
push
stos
xchg
ljmp
add
cmpl
jecxz
lret
push
repnz
insb
push
add
into
pop
dec
add
adcb
scas
fucomip
mov
jl
insb
arpl
imul
dec
inc
fcmovne
push
lea
sahf
and
dec
push
mov
mov
adc
push
sbbl
and
add
shrl
int3
mov
jp
pop
jo
xor
pushf
bound
and
fstps
pop
scas
fcmovnbe
add
mov
or
push
sub
dec
push
jl
call
lcall
test
mov
xor
rorl
into
orb
jecxz
je
cmc
stos
jns
shrb
xchg
xchg
test
test
into
enter
imull
icebp
dec
pop
push
dec
push
inc
test
pop
loope
loopne
ret
stos
cld
mov
movsb
lock
add
aas
dec
outsl
sahf
sub
std
mov
jo
and
push
mov
mov
xor
popa
inc
ss
xchg
add
aam
push
xchg
sbb
loope
jnp
ret
push
xchg
lods
jbe
popa
lods
xchg
fldl2t
sti
mov
lret
jae
mov
lahf
stos
xchg
stos
fistpll
sub
icebp
adc
cmc
cmp
in
movsb
pop
jle
xorl
sbb
addr16
and
clts
stos
in
sub
mov
mov
adcl
adc
jno
clc
push
xor
and
das
js
add
sbb
or
adc
and
pop
loope
mov
mov
jge
shlb
jnp
jp
cwtl
mov
mov
mov
das
addr16
leave
pop
sub
jbe
jo
insb
aas
jl
arpl
mov
mov
dec
out
pop
cmp
mov
cmp
jb
cs
sbb
inc
jl
mov
fisttpl
xchg
add
lods
xchg
add
cmp
sarb
mov
das
stc
ljmp
roll
mov
fldcw
mov
inc
dec
mov
pop
lret
xlat
test
sub
lods
popf
sub
not
stc
adc
cmp
jmp
or
inc
stos
mov
je
push
dec
push
cld
cmovo
cmc
push
pop
jno
lahf
std
inc
mov
pushf
jg,pt
fsubr
xchg
sub
movsl
sub
test
dec
pop
or
incb
jno
ds
push
xchg
push
cmp
lock
xor
push
fadds
inc
jle
mov
mov
jb
fcoml
imul
inc
clc
adc
push
xor
and
cli
jmp
out
push
test
pop
fdivl
imul
sbb
sbb
mov
add
mov
adc
cli
add
daa
fidivrl
out
fcompl
scas
jmp
jo
and
iret
fiadds
dec
pop
xor
shl
imul
ret
dec
cmp
arpl
call
cld
repz
subb
aaa
jbe
dec
adc
inc
mov
test
adc
mov
iret
fldt
lahf
cmp
inc
cmp
jecxz
xor
lock
mov
lods
jmp
cs
pop
jae
into
jmp
cmp
inc
out
loope
movsb
loop
lea
jmp
decl
mov
jmp
dec
roll
nop
fdivl
jnp
out
in
inc
scas
ja
xor
int
lret
insb
rol
ficompl
cwtl
mov
mov
je
std
int
cwtl
push
int
sbb
popf
mov
fs
enter
aam
xor
cmpsb
fs
or
adcl
outsl
fisubrl
mov
fiadds
in
xchg
lods
sub
out
mov
jle
lret
xor
outsb
inc
pop
ret
xor
xchg
aaa
add
xor
pop
fstpl
ljmp
aaa
dec
pop
out
ret
mov
sti
das
or
stc
push
add
push
sub
add
mov
in
out
inc
fs
jle
repz
sbb
inc
push
mov
sub
sub
rsm
pop
fs
dec
repnz
lods
push
sub
dec
jae
mov
nop
add
or
pushf
inc
psadbw
add
outsb
decl
jns
mov
cmp
xchg
jp
hlt
dec
sbbb
lods
repnz
imul
push
sbb
leave
test
push
lret
pop
test
in
pop
xor
push
jecxz
enter
bound
in
pop
mov
lahf
leave
dec
jae
jg
imul
push
mov
out
adc
mov
fwait
arpl
jmp
test
pop
cwtl
push
mov
popf
jns
aam
rolb
mov
mov
sbb
popa
and
and
inc
in
mov
loop,pn
call
dec
mov
mov
jns,pt
and
mov
clc
jge
out
lock
int
fidivrl
dec
or
adc
cmp
sub
adc
shl
rolb
and
dec
imul
aad
jl
fsubrs
sbb
jmp
mov
popf
call
push
inc
push
lea
mov
inc
mov
adc
fdivrl
jo
das
scas
mov
or
and
inc
xchg
dec
mov
sub
xchg
adc
ret
and
or
dec
aas
lret
jge
sti
insb
adc
fnstcw
xchg
jg
outsb
cmp
sbb
mov
insb
jle
xor
mov
xor
sarl
mov
push
ret
jne
xchg
mov
fdivs
imul
rcl
fwait
out
rolb
out
jae
rclb
jmp
ljmp
clc
dec
jmp
jo
adc
addr16
fwait
mov
push
mov
push
mov
sahf
fsubs
mov
add
ja
mov
les
xchg
rol
sar
cmp
dec
out
mov
cmp
or
xchg
pop
pop
xchg
mov
pop
les
or
out
test
jmp
ss
jno
push
js
ja
mov
aaa
out
fdivl
dec
cmp
mov
xor
out
mov
jnp
xlat
fistps
imul
and
push
adc
imul
adc
mov
aas
and
jae
sbb
jo
dec
cmc
ret
ljmp
cmp
or
mov
pop
adc
pop
jne
icebp
aam
dec
inc
and
push
xchg
jo
stos
std
inc
mov
push
dec
or
and
andb
rclb
push
xchg
outsb
mov
mov
cs
mov
iret
cmp
mov
notb
mov
sub
movsb
pop
push
loopne
or
mov
inc
mov
icebp
enter
add
pusha
fcomps
mov
add
mov
push
dec
loop
sub
pop
imul
les
sub
lods
mov
mov
lea
mov
or
push
sub
out
pop
pop
jns
sbb
push
xor
mov
lock
dec
lods
imul
inc
mov
xchg
ret
stos
in
dec
out
js
xor
cwtl
cwtl
std
lcall
xor
inc
std
jo
std
ss
enter
decl
in
sti
insb
inc
stos
fxch
arpl
dec
leave
pop
jno
loopne
sahf
fucomip
test
dec
lods
fucomp
xor
ret
mov
hlt
push
fs
cmpl
scas
or
xor
mov
loopne
ss
ret
into
xchg
jnp
sub
pushf
sbb
pop
xchg
ss
in
shll
mov
push
push
inc
cld
add
popa
mov
xchg
rcrl
call
call
test
loope
jo
lods
mov
enter
xchg
insb
andb
jo
lock
jnp
stc
movsl
push
ljmp
call
push
insl
mov
out
or
mov
add
ljmp
les
std
fs
push
xchg
jp
pushf
and
sti
jae
iret
mov
ficoml
sbb
add
and
pushf
push
inc
dec
dec
cmp
aad
sti
sbbl
add
les
rcrl
imul
mov
jae
jecxz
pop
xchg
orb
clc
les
pop
push
push
and
ret
mov
aas
scas
sahf
call
arpl
inc
insb
daa
xor
mov
mov
sti
sahf
cmp
sbb
icebp
movsb
adc
jnp
test
add
sub
inc
add
scas
pop
lods
inc
test
sub
pop
add
jns
jnp
push
and
dec
xchg
stos
test
mov
loop
aam
or
jge
aad
sub
xor
push
cwtl
imul
fs
dec
lcall
out
mov
adc
test
hlt
mov
sti
call
cld
xchg
ret
movsb
xchg
xor
stos
cmpsb
xchg
ss
cmp
cmc
call
push
bound
jl
movsl
btc
and
lret
loopne
xor
xchg
push
inc
in
mov
fnstenv
mov
fsubrl
stc
nop
outsl
jecxz
inc
or
cmp
sar
fadds
pushf
mov
fistpl
fsubrp
rol
adc
mov
dec
or
or
pushf
orb
fistl
push
adcb
push
and
push
subb
or
dec
rorl
mov
lahf
sbbl
mov
xchg
sub
push
lret
mov
cld
jno
sbb
xchg
mov
into
lahf
jno
push
and
adc
in
out
xlat
jmp
adc
dec
mov
xchg
fucomi
bound
jns
inc
cwtl
arpl
mov
lret
lods
jg
leave
jle
cli
mul
fcomps
movsl
iret
sbb
xorl
add
and
cwtl
out
shrl
mov
or
pop
les
sti
xchg
xchg
dec
rol
mov
push
out
rorl
add
insl
add
fwait
sbb
rorl
lret
test
xorb
or
int
js
jl
xor
lret
lret
nop
das
icebp
icebp
call
iret
push
fdivl
rcr
je
and
aad
sti
adc
sub
push
xor
popl
cmp
add
push
testb
xor
bound
pop
test
outsl
mov
loopne
xor
ret
call
roll
sub
xor
push
icebp
clc
idivl
adc
loop
mov
and
loop
fists
mov
std
sub
xor
hlt
lods
ret
push
dec
jb
icebp
pop
lock
dec
in
lds
ljmp
call
in
loope
iret
push
ss
imul
inc
pusha
adc
sbbb
movsl
je
mov
mov
cmp
test
jae
xor
cmp
int3
lret
dec
fs
cmp
imul
ljmp
leave
and
sbb
lods
icebp
adc
movsb
data16
and
push
lds
pusha
adc
aad
pop
add
lcall
mov
cwtl
mov
test
mov
cmpsb
test
xchg
frstor
mov
or
cmp
mov
push
cmp
dec
std
test
roll
lcall
dec
xor
andb
push
sub
xor
repnz
mov
in
fidivrs
insb
xor
jmp
push
sbb
dec
and
and
pushf
mov
scas
mov
adc
push
mov
pop
sub
arpl
mov
fwait
or
pop
shll
inc
inc
loop
into
mov
addr16
shr
sub
icebp
mov
push
in
mov
mov
add
mov
mov
and
scas
leave
mov
xor
inc
imul
sahf
cmp
in
cs
and
sbb
jmp
cwtl
jns
pop
sub
je
sti
sti
icebp
ds
mov
test
push
divb
xchg
sub
test
push
shrl
inc
pop
loop
pop
or
cs
mov
jbe
mov
mov
mov
pusha
push
mov
mov
sub
push
insb
dec
or
cltd
xor
push
sub
test
mov
fwait
std
ror
shll
add
sbbl
hlt
jle
mov
lock
in
fldt
jnp
or
mov
arpl
push
ret
sub
test
inc
mov
test
stc
sbbl
sbb
rcrb
push
adc
pop
sbb
in
stos
inc
push
push
popf
imul
cmp
lods
ljmp
pop
lock
dec
mov
in
push
dec
and
jge
mov
sub
mov
mov
pop
pop
cmp
aas
mov
push
push
aaa
leave
stc
lret
das
lds
xchg
adc
push
jecxz
push
call
js
out
mov
pop
je
insb
mov
les
sbb
mov
add
mov
inc
mov
lds
sbb
nopl
fwait
sbb
int3
jns
and
push
cld
rorb
clc
sahf
int
movsl
mov
rol
repz
pusha
sbb
insb
jle
hlt
bound
rcll
mov
into
rclb
xchg
cmpsl
mov
mov
out
add
outsl
cs
fidivrs
lahf
xor
push
pop
or
leave
aam
push
std
jo
xor
push
or
pop
xchg
std
dec
push
pop
std
and
pop
adc
mov
sti
les
shl
pop
mov
aad
dec
push
stc
jns
mov
or
stos
out
addr16
add
jmp
add
pop
das
gs
fwait
into
fwait
pop
cmp
jg
pop
mov
xor
orb
push
nop
cmp
jecxz
fs
cmp
clc
xorb
scas
push
out
or
and
rclb
imul
mov
dec
pop
loopne
push
js
xor
push
popa
add
inc
lret
add
dec
inc
add
scas
mov
adc
ror
shlb
jno
mov
inc
in
jbe
cli
cmpsb
mov
mov
popf
lock
mov
or
and
or
or
pop
inc
push
sbb
insl
sub
bound
xor
jbe
jle
push
xor
cmp
in
cmp
jl
inc
mov
inc
aam
add
loop
push
sahf
cmp
pushf
or
xor
stc
or
sbbl
sub
popa
ss
rclb
sbb
pop
inc
jb
push
mov
and
cwtl
cmp
jecxz
pop
mov
xchg
jbe
popf
mov
pop
xchg
push
loop
mov
mov
fsts
mov
sbb
sbb
daa
arpl
adc
and
and
aad
je
jno
aam
and
cli
movsl
dec
pop
add
mov
dec
push
mull
popl
xor
adc
inc
add
dec
rcr
out
adc
pop
push
mov
push
movsl
sbb
jmp
icebp
sbb
jmp
lea
mov
inc
stos
pop
cmpsl
lock
scas
out
mov
xchg
stos
sub
mov
sbb
aam
cmp
jns
add
jns
std
int
sub
nop
jb
sub
push
lret
lret
ljmp
dec
xor
jl
sbb
push
cld
push
rol
xchg
mov
out
xor
ret
shll
or
out
icebp
movsl
mov
insb
loope
and
hlt
faddp
aas
push
aas
jle
sbb
jne
fsubrl
push
scas
cwtl
decb
repnz
adc
fwait
stos
in
push
hlt
sarb
leave
mov
or
mov
kmovb
mov
jl
addr16
jecxz
sub
into
add
mov
mov
xor
cmp
sbb
out
mull
imul
cmp
push
loope
in
sarl
xor
jo
pop
push
xchg
daa
outsl
lahf
or
shlb
pop
xor
loopne
aaa
out
mov
jge
insb
es
adc
mov
cmp
sbb
lret
inc
fldenv
or
cmpsb
ljmp
adc
push
add
in
lods
lock
pop
fsubr
mov
mov
push
and
cmp
dec
sbb
movsl
cmp
popa
dec
int
pop
ret
loope
adc
mov
xchg
jl
mov
jmp
leave
cltd
and
sub
or
jp
xor
cs
or
mov
dec
push
inc
stc
xor
sub
int3
jecxz
push
cmp
sbb
dec
dec
pop
jb
jno
popf
or
in
sti
xchg
rorl
sub
insb
xchg
and
mov
bound
iret
inc
pop
scas
cmp
clc
bound
sbb
sub
xchg
hlt
nop
loopne
xchg
pop
jge
or
mov
std
nop
mov
insb
adc
sbb
clc
and
movsl
fmul
cmc
mov
inc
jg
cmpsb
popa
add
mov
mov
orl
add
mov
pushf
mov
mov
leave
fildl
in
testl
cmp
pop
jno
std
iretw
and
cmp
fsin
mov
mov
mov
in
jae
in
xchg
test
in
insl
daa
sub
xchg
in
or
fnsave
sub
repnz
sub
insl
push
jo
mov
adc
decl
int
xor
fstpl
out
push
lret
lods
popf
xor
das
mov
sbb
cld
cmc
mov
stc
in
dec
and
add
mov
xchg
pop
imul
pusha
mov
insl
jge
je
add
push
mov
pushf
inc
push
out
leave
das
cli
shrb
mov
xchg
jbe
push
push
mov
cmc
fsubs
shrl
add
sub
push
popl
popf
xchg
je
ds
mov
outsl
rol
pop
add
pop
mov
adc
pop
lock
shlb
mov
push
in
jne
faddp
or
hlt
mov
rcl
xchg
sub
dec
test
xchg
cs
mov
mov
mov
std
xchg
das
stos
cwtl
stos
jecxz
movsb
cmp
inc
ret
push
shr
add
pusha
negl
and
aas
push
cmp
sar
cmp
test
fwait
sahf
xchg
inc
push
es
and
xchg
pop
nop
imul
mull
and
stc
xor
sub
or
insb
cli
scas
or
xchg
fstp
in
int3
fcoml
fistpl
xorl
push
pop
inc
sbb
xlat
add
cmp
hlt
mov
adc
dec
rorb
dec
lret
lock
cmp
aad
in
mov
mov
in
roll
paddsw
sti
mov
ljmp
jg
xor
jge
out
jo
dec
jge
es
cld
xchg
and
and
fistpll
ja
les
aaa
daa
fcmovne
sub
out
mov
jnp
std
enter
addl
pop
lods
xchg
das
pop
lock
sub
mov
jbe
jb
loope
jbe
jle
fs
inc
test
pop
and
sbb
inc
pop
je
ja
cmp
lret
aas
mov
mov
pusha
in
xchg
aas
xchg
sub
aas
ret
scas
inc
jge
lea
pop
into
gs
and
adcl
xchg
jmp
or
jb
xchg
into
and
aaa
into
loop
nop
daa
mov
push
in
je
lods
testl
ret
stos
into
enter
jns
xchg
inc
cmpsl
jmp
or
ret
xchg
dec
mov
rcll
movsl
lods
loope
jle
push
sub
std
pop
mov
sbb
out
mov
ds
sbb
push
mov
or
hlt
dec
jns
stos
in
adcb
test
mov
fdivrs
push
sub
popa
out
mov
mov
push
push
das
xchg
shl
xchg
mov
loopne
mov
ret
cmpsb
das
call
xchg
cmp
in
stos
jne
or
mov
ljmp
jg
subl
in
mov
ret
sbb
mov
loope
jl
mov
add
cwtl
push
jae
sbbl
leave
insl
adc
shll
dec
push
sbb
sub
fistpll
lret
and
leave
int3
pusha
jl
arpl
cli
jns
cmp
and
xchg
pop
test
cwtl
inc
imul
out
inc
cli
dec
xor
or
ds
dec
push
pop
push
or
lods
xor
add
push
and
mov
out
leave
mov
dec
ret
mov
jne
pop
ljmp
out
pop
lods
mov
mov
shll
mov
push
pop
cmp
push
jno
es
push
sbb
stc
push
es
mov
popf
mov
cli
and
cltd
fadd
mov
xchg
pop
sub
loope
jmp
and
lret
out
aad
lahf
xor
inc
mov
add
inc
fstl
adc
sbb
cltd
inc
jae
adc
sahf
outsl
pushf
xor
les
loop
xchg
sbb
mov
das
rcr
push
mov
adc
inc
lret
ret
or
dec
pop
fldt
loopne
add
xor
pop
stos
xchg
sbb
mov
andb
loop
rorb
imul
pop
mov
pop
rol
icebp
or
mov
sbb
push
sub
mov
fcoms
inc
xchg
mov
and
push
mov
push
lods
mov
es
lahf
dec
jp
mov
ljmp
roll
pop
inc
iret
and
outsl
xor
stos
inc
mov
sbb
pusha
dec
push
add
jne
jle
and
insl
push
add
hlt
iret
adc
or
int
mov
data16
test
int3
cwtl
bound
push
sarl
pop
das
insl
push
jb
jl
pop
jns
mov
xor
rorl
int3
mov
scas
stos
and
int
lea
aad
mov
jbe
sbb
aaa
les
mov
dec
inc
outsb
call
mov
iret
lods
je
add
fidivrs
sahf
mov
adc
popa
dec
out
dec
sbb
sub
jo
das
cmp
mov
fdivl
mov
dec
lods
inc
xchg
mov
mov
cld
push
out
sbbl
jae
sub
mov
and
es
lret
hlt
or
int3
cmp
outsb
push
out
pop
dec
rcrb
aaa
pop
daa
es
mov
int3
or
stc
and
push
lods
add
lock
inc
or
xchg
push
xchg
addr16
movsl
inc
dec
lods
mov
or
push
cmp
bound
stos
push
outsl
addr16
imul
lahf
lods
rcr
add
loopne
lcall
mov
clc
pop
sbb
shlb
mov
icebp
mov
rcrl
jns
pop
adc
xchg
pop
jecxz
out
cltd
xchg
movsb
push
xor
add
out
ja
xor
outsb
sub
pop
insb
iret
inc
lods
add
call
clc
push
leave
out
jge
mov
test
sbb
and
or
xor
pop
aad
incl
in
push
mov
push
aam
push
insl
xchg
pop
jnp
subb
push
sub
mov
cwtl
adc
lcall
scas
insl
sub
mov
add
sarl
add
push
inc
dec
mov
sbb
pusha
aaa
dec
lret
xchg
pop
mov
loopne
fstl
cmpsl
out
inc
xor
mov
or
add
loope
sub
fwait
outsl
sub
int
loop
mov
jbe
ds
aad
push
sbb
dec
dec
cld
mov
inc
cmpsb
les
lds
push
xchg
adc
fwait
mov
ja
int
nop
call
sbb
or
sbb
das
xor
add
or
mov
fnsave
push
out
rolb
mov
das
jp
sahf
jge
test
or
ja
mov
pop
loopne
into
movsl
mov
sbb
and
cmp
clc
mov
jns
xor
xchg
das
or
mov
int
ja
pop
jmp
mov
outsb
es
cwtl
xchg
movsb
cmp
pop
inc
push
outsb
ret
dec
push
pop
repz
mov
xchg
pushf
add
pop
jns
lods
jecxz
add
fisubrs
jmp
stc
push
xchg
jle
inc
lahf
sbb
push
adc
adc
mov
add
cmp
mov
fwait
mov
in
and
inc
frstor
in
xchg
mov
jmp
cmc
mov
pop
nop
in
adc
jbe
mov
lret
mov
or
in
js
stos
ja
pop
int3
scas
mov
xchg
int
hlt
ljmp
cwtl
push
push
aam
or
mov
sbb
mov
jl
push
repz
mov
sbb
xchg
les
sub
mov
sbbb
imul
jecxz
test
mov
repnz
ja
fldcw
test
scas
mov
stc
jbe
sub
sub
dec
or
inc
aad
shll
lahf
jg
dec
mov
ror
push
gs
inc
es
push
dec
xorl
push
outsl
add
repnz
fidivrl
jp
idiv
cmp
sahf
add
out
or
pop
cli
xchg
add
pop
arpl
dec
scas
push
not
sbb
nop
sub
inc
into
push
jb
into
in
fcmovnu
je
andb
js
pop
stos
pushf
fwait
scas
mov
fstps
loopne
dec
cltd
repz
pop
and
cmp
shll
cwtl
outsl
dec
inc
mov
mov
fisubs
cli
fnstsw
subb
push
popf
xor
fsubs
mov
cltd
bound
inc
xchg
inc
cmp
pop
enter
loope
jmp
or
dec
insl
xor
xchg
pop
icebp
fidivrs
outsb
ror
scas
stc
scas
cmc
mov
pop
mov
jp
ret
fists
lock
pop
push
adc
add
or
sub
movsl
icebp
sbb
ret
inc
jge
xchg
add
or
movsl
dec
mov
test
xchg
cmp
dec
out
jne
jns
and
and
pop
xor
je
aad
in
andl
fsubl
adc
jb
dec
das
xchg
xchg
xchg
push
xchg
jo
shrl
add
scas
mov
push
cmc
ds
cs
movsb
popa
clc
stc
pop
sbb
xchg
mov
addr16
leave
rcl
in
imul
mov
rolb
imul
pushf
nop
out
sub
jge
pop
imul
jne
lret
pop
mov
and
mov
fldl
mov
sbb
stc
xchg
sub
xchg
and
shrb
leave
mov
lret
pop
lds
dec
xchg
mov
loope
and
push
fnstenv
push
cmp
xchg
cmp
outsl
xchg
js,pt
add
push
add
adc
into
imul
xor
jbe
push
pop
push
sbb
push
repz
aaa
imul
dec
in
gs
je
adc
jo
push
sbb
test
pop
test
inc
loope
icebp
mov
xor
fistpll
or
and
insb
cmp
and
cs
enterw
cld
jmp
fildll
mov
xchg
sub
fwait
jae
and
cwtl
je
int3
lret
pop
mov
xorb
icebp
ret
outsl
lahf
cs
or
movsb
cmp
sub
ret
jbe
cmp
inc
mov
cwtl
ljmp
rcrb
out
cld
cmp
leave
out
or
add
in
xor
in
data16
cwtl
dec
xchg
jbe
xor
out
in
xchg
test
adc
ret
xchg
push
xor
sahf
insl
pusha
xlat
imul
mov
ret
rcrb
adc
ds
stc
nop
clc
sub
adc
pop
xchg
in
push
in
xchg
lret
repz
pop
and
push
popf
jae
clc
sub
orl
inc
mov
sub
mov
leave
in
je
and
faddl
add
jl
mov
hlt
fcomp
inc
cltd
icebp
enter
and
testl
mov
loope
sbb
int3
mov
jecxz
pop
or
scas
push
sarl
sar
inc
fucomi
fidivl
push
and
aad
mov
and
lods
xchg
mov
push
icebp
pop
out
out
ljmp
push
pushf
and
or
in
add
popf
pop
ror
mov
inc
outsb
push
cs
xor
inc
gs
out
sbb
mov
js
sbb
cld
inc
and
sub
xchg
dec
mov
adcl
jmp
ret
adc
popl
jno
nop
mov
pop
dec
scas
add
sbbl
xorl
stos
and
nop
cld
ljmp
or
adc
stos
push
das
add
leave
mov
pop
and
xchg
push
xor
movsl
cwtl
fxch
add
sbb
vmovups
mov
fstps
dec
ror
sub
and
scas
push
or
xlat
outsb
pusha
test
mov
test
lds
or
in
mov
ret
nop
adc
push
jecxz
stos
pop
fcomi
fstl
add
rorb
mov
divb
sub
sbbb
lahf
adc
or
inc
fsubrs
in
dec
mov
or
cmp
addr16
pop
xor
mov
das
icebp
xor
enter
roll
cmp
mov
push
add
orl
fld
pop
xchg
fcomip
xchg
mov
in
call
jle
clc
je
xor
dec
xor
add
sbb
outsl
and
xor
shrb
aam
xor
lahf
mov
lea
sbb
stc
or
pop
mov
xchg
jge
shl
push
mov
mov
hlt
jno
daa
xor
jg
outsb
xchg
pop
jno
inc
fildl
aaa
repnz
movsl
add
and
mov
in
insb
mov
inc
mov
cli
dec
pop
sti
aaa
mov
scas
and
cltd
sub
mov
pop
frstor
sub
cli
xchg
jmp
xor
das
stos
dec
jno
jg
pop
insl
sbb
or
sarb
push
mov
ficompl
push
divl
cmpsb
aad
mov
imulb
mov
ret
mov
cmp
scas
out
sub
hlt
lea
push
cwtl
push
in
es
cltd
rolb
xor
es
dec
lret
lcall
sub
loopne
loopne,pt
sub
cmp
cmp
in
data16
icebp
incl
pop
loope
xor
nop
out
mov
xor
mov
sbb
enter
and
aas
xchg
xchg
xor
loop
movsb
pop
mov
cmp
notb
shll
test
dec
loop
adcl
movl
out
movsb
addr16
or
push
out
cmpsl
push
lods
xlat
insb
hlt
sub
lret
pushf
cld
stos
mov
mov
push
push
negb
xor
mov
cmc
aaa
mov
fwait
inc
test
push
lock
xchg
xor
mov
adc
ljmp
es
adc
shrl
mov
ret
hlt
xor
mov
xchg
mov
adcb
fistpl
or
lahf
cmp
enter
add
cmc
out
sub
scas
jmp
test
aaa
int
adc
pop
pop
repz
dec
aaa
push
jbe
jl
addr16
and
mov
dec
push
xor
rorl
pop
aas
jmp
enter
add
dec
nop
jnp
dec
pop
imul
mov
dec
pop
ret
fwait
rcrl
lea
je
daa
stos
cmovne
iret
mov
out
jbe
aam
or
jmp
fimuls
fcmove
pop
lods
test
jb
shrl
add
mov
inc
clc
fucomi
orb
add
imul
pop
xlat
adc
jp
sub
lret
mov
jno
pop
stos
movups
scas
js
aaa
lods
cs
inc
inc
ds
sub
mov
outsw
ret
lahf
lods
add
insb
sub
jns
js
leave
pop
out
pop
cmc
out
or
lcall
jmp
lahf
adc
ss
scas
mov
xchg
xchg
rcrb
inc
aas
lods
inc
push
shlb
xor
cmp
jecxz
mov
loope
test
ret
push
pop
outsb
ljmp
daa
ds
mov
push
or
mov
mov
and
or
or
cmp
pusha
ret
pop
mov
subl
inc
cmp
jnp
test
push
xchg
xchg
push
ficoms
cmpsb
scas
cli
mov
rolb
shrl
fidivl
insl
cmpsb
incl
cli
xor
jb
ret
sbbw
out
mov
in
outsb
mov
adc
pop
fistl
cwtl
stos
test
gs
dec
inc
ret
repnz
out
mov
dec
sub
insl
in
push
push
pop
mov
frstpm(287
jl
arpl
std
sbb
sbb
arpl
adc
xchg
arpl
arpl
sub
fisubrs
sti
sub
sahf
jmp
ss
aaa
xchg
ds
or
lret
mov
enter
xor
lcall
adc
cltd
add
mov
jp
jg
addr16
sbb
lds
jns
popa
jmp
sahf
out
repnz
dec
xor
push
cmp
ljmp
fidivl
push
orl
cmpsb
sub
inc
rcl
ffreep
out
mov
pop
pop
pushf
dec
dec
daa
sti
fcompl
stc
cmp
insb
sub
mov
jnp
xchg
dec
sbb
push
ds
and
addr16
jb
fdivs
ja
test
clc
xchg
sub
ja
xor
mov
ss
push
mov
sbb
cmp
cld
gs
jno
mov
mov
adc
adc
xor
fidivl
aad
adc
mov
jl
rcrb
movsl
sbb
or
mov
lahf
jmp
or
mov
aam
inc
fucomi
sbb
jp
and
ja
add
pop
xchg
mov
js
addr16
jb,pn
pusha
mov
repnz
jns
gs
or
push
xlat
ficoml
sahf
in
pop
mov
and
cmp
xlat
jl
cmp
daa
fnstenv
fldl
jo
xor
push
and
inc
lods
mov
or
dec
loopne
imul
sub
icebp
pop
jmp
inc
fcomip
or
movsl
cmp
xchg
repz
mull
les
sbbl
add
inc
nop
and
inc
pop
popa
js
pop
fmuls
or
in
xchg
mov
mov
je
outsb
xchg
test
push
xlat
test
or
or
xchg
xor
movsb
or
out
ret
aaa
adc
jno
pop
jnp
outsb
clc
nop
dec
flds
popa
test
stos
sti
repnz
in
dec
pop
lret
add
imul
lock
mov
and
js
push
stos
aas
lret
in
outsl
rcll
jl
scas
shll
add
out
xor
out
pop
repnz
jbe
pop
mov
outsb
in
mov
fsubp
mov
flds
cmpsl
mov
ficompl
adc
inc
popa
aas
cmc
cmpsb
in
pop
adc
mov
out
push
inc
xlat
insb
movsb
push
lcall
push
lods
lods
rcr
lock
dec
inc
cwtl
icebp
xor
fsub
jge
cmp
mov
mov
stos
cltd
out
addr16
pop
push
mov
in
les
add
jecxz
mov
mov
fs
popa
xchg
jbe
inc
bswap
xchg
mov
and
adc
add
icebp
addr16
jmp
mov
push
ds
mov
jle
repz
bound
es
ljmp
shll
sub
pushf
pop
xchg
pop
rcr
add
mov
ret
cmpsb
jle
call
dec
pop
pop
clc
mov
push
scas
sub
add
jl
mov
sbb
cwtl
inc
iret
data16
cld
cltd
mov
xor
and
mov
out
stos
mov
mov
test
stos
xor
fcoml
dec
out
std
dec
andb
sbb
leave
sub
xchg
pop
ljmp
push
pop
jl
leave
pushf
xor
push
test
and
dec
fwait
add
sbb
mov
loopne
mov
mov
xchg
scas
inc
lds
rorb
imul
adcl
daa
jnp
xchg
xlat
xor
mov
int3
cmp
mov
mov
int3
dec
dec
mov
push
lret
testb
loop
fwait
xor
add
cmp
sti
pop
aam
mov
sarb
dec
pushf
insb
push
jmp
fimull
in
imul
loopne
bound
out
mov
mov
pop
lret
push
and
sbb
pop
aaa
sub
stos
lods
nop
cs
test
mov
xchg
daa
out
mov
iret
mov
arpl
mov
push
mov
test
adc
push
lret
push
jp
aas
push
jo
int3
lret
mov
loop
stc
rcrl
sbb
or
in
xor
lea
fwait
stc
mov
inc
jne
ja
push
mov
lahf
or
int3
adc
rcrl
jmp
fs
movsb
mov
sbb
int3
ds
add
xchg
aam
stos
aam
lcall
test
dec
pusha
mov
imul
loopne
or
cmp
out
js
push
int
push
lret
mov
inc
mov
andb
fwait
movsl
mov
xlat
mov
push
stos
aas
jmp
in
pushf
cmp
mov
sub
das
outsb
ljmp
shl
shrb
sbb
jb
lods
icebp
or
test
test
clc
xor
sub
cltd
sbb
pop
sahf
xor
jge
out
aad
jb
xor
pushf
fnstenv
out
out
add
mov
lods
inc
dec
enter
jl
inc
and
orl
and
inc
mov
jbe
sbb
add
add
movsb
pop
cltd
testb
sarl
jns
sbb
mov
mov
loopne
push
push
mov
push
pop
repz
mov
xor
in
pop
fstps
mov
xchg
mov
nop
outsb
xchg
pop
mov
inc
icebp
mov
cmp
mov
les
mov
dec
popf
cmp
sub
push
aad
addr16
aaa
and
div
pushl
sahf
clc
cmpsb
jecxz
adcb
mov
mov
div
adc
test
in
push
sub
xorl
outsl
pop
lret
test
push
inc
loope
cmpsb
jo
ds
mov
xor
cmp
repnz
push
jge
ja
cmp
sbb
sbb
je
stos
cmpsb
arpl
lds
inc
xlat
cmp
push
jo
lahf
jecxz
dec
push
sbb
orb
dec
jns
sbb
cmp
mov
jl
bound
shr
orb
pushf
xchg
addr16
dec
testb
outsl
sbbl
cmp
fsubl
push
addr16
sbb
scas
int
or
insl
adc
mov
in
jnp
icebp
int
adc
les
hlt
pop
insb
adc
imul
cmp
insb
xchg
shll
idiv
outsb
stos
stos
or
icebp
test
adc
jmp
fidivrl
jne
fs
pop
xchg
dec
sbbl
and
mov
push
imul
push
test
andb
xchg
sub
cmp
fisubrl
dec
es
repz
inc
sbb
mov
or
lret
js
and
test
icebp
test
testl
sti
mov
leave
or
adc
add
cmpsl
daa
sub
sub
xor
mov
fcmovnu
je
jmp
sbb
jmp
movsb
sbb
clc
dec
pushl
dec
imul
mov
das
fcoml
popf
arpl
mov
adc
movsl
shl
mov
cs
mov
pop
mov
sub
ljmp
cs
sbb
jl
call
mov
mov
mov
xchg
mov
ret
jmp
orl
adc
clc
or
cwtl
inc
and
inc
sub
mov
imul
stc
les
movsb
fidivl
scas
mov
push
cs
shl
lea
add
add
mov
adc
mov
cmc
mov
or
pop
incb
cmp
sbb
xchg
jmp
cwtl
jbe
inc
out
xchg
push
scas
orb
xchg
and
movsb
inc
and
push
popa
mov
xchg
sbbb
sub
sbbl
jno
xor
inc
dec
cmp
dec
in
imul
lea
dec
in
push
xor
pop
xor
sti
pop
mov
aam
cwtl
insl
xor
sbb
mov
cwtl
ja
add
iret
int
cmc
xchg
add
out
jbe
cmpsb
stos
adc
lock
cmpsb
jp
inc
in
adc
dec
xor
loopne
imul
rorl
xchg
cmp
inc
icebp
outsb
aad
lea
pop
dec
iret
mov
pop
mov
sbb
insb
dec
mov
mov
orl
popa
sbbl
push
sub
xor
hlt
int
sbb
shrb
loop
gs
or
in
jb
mov
jle
insb
or
push
pop
addr16
cmp
shll
and
push
sets
cmpsb
sbb
pop
loopne
inc
and
in
stc
push
decl
mov
clc
stos
and
mov
pop
shll
jl
aad
jb
mov
insb
dec
lcall
lock
cmp
adc
mov
and
test
mov
inc
jle
lret
cs
aam
dec
push
insb
test
fldenv
fwait
es
std
sub
mov
push
scas
push
dec
test
mov
aad
dec
pop
dec
out
hlt
inc
mov
dec
mov
sub
push
icebp
daa
inc
pop
xor
mov
and
and
sub
push
shr
sbbl
lock
test
add
negl
sub
into
xchg
adc
pop
xchg
cs
or
mov
loop
push
mov
xchg
pop
je
pop
stos
cmp
mov
adc
pop
cmp
cltd
lods
shlb
lock
rol
jne
inc
mov
and
loop
cmp
in
or
hlt
add
test
xchg
adc
cmp
xchg
in
clflush
dec
out
and
and
and
bound
add
push
mov
in
sub
mov
arpl
mov
js
sub
aam
inc
push
shrb
mov
ret
cmp
cmpsb
or
and
mov
pusha
dec
dec
mov
jns
cmp
sbb
cmp
leave
out
rolb
out
test
push
ljmp
es
mov
out
lahf
xor
lret
xlat
out
ret
clc
adcl
inc
sbb
js
sbb
xchg
repz
sahf
ss
loop
cmp
pop
mov
lcall
add
ret
aam
lods
pop
pop
imul
mov
cwtl
sub
pop
insl
cmp
mov
fcomip
mov
pop
sbb
repnz
andl
in
dec
es
mov
push
in
xchg
push
or
out
out
jge
pop
jmp
movzwl
sbb
outsl
testl
imul
cmp
mov
punpckldq
jge
cmp
in
mov
popa
nop
or
mov
pusha
insl
mov
stos
shll
shrb
and
jo
mov
xchg
scas
cmp
out
es
pop
sbb
movsb
enter
stc
fs
int
push
mov
xor
or
push
and
fwait
les
sbb
ror
test
icebp
out
ja
sbb
stc
xorl
xorb
in
test
aas
add
leave
jnp
das
lds
xchg
enter
and
push
test
jp
add
sub
jecxz
call
cmpsl
aaa
hlt
dec
lock
fcomps
icebp
cmpsl
pop
sahf
cwtl
xchg
jp
sub
icebp
movsl
ror
jne
mov
in
pop
bound
jno
popa
mov
sbb
arpl
jbe
dec
mov
mov
add
mov
mul
mov
mov
push
cmp
pusha
mov
ret
xchg
inc
sbb
aad
sbb
cmp
and
dec
scas
dec
xchg
pop
outsl
mov
test
jp
push
ljmp
mov
cltd
pop
scas
rcl
jp
mov
xor
test
sbb
add
cmpsb
fldt
fwait
xchg
outsb
mov
sbb
xchg
dec
mov
xor
mov
rclb
adc
data16
outsl
mov
mov
inc
fcom
fstpt
cli
leave
in
sub
mov
dec
and
pop
shrb
xchg
mov
pop
mov
jge
push
cwtl
cmp
add
pop
jle
lea
in
push
lds
xor
pop
jmp
jg
xor
je
adc
stc
jno
test
scas
inc
fcomp
scas
hlt
stos
lods
add
dec
sbb
sub
imul
sub
scas
pushf
leave
mov
repnz
test
fstl
popf
dec
cmpsl
cli
or
or
dec
inc
jne
xchg
sbb
gs
add
jmp
nop
jg
gs
pop
or
into
mov
and
push
mov
xchg
cli
jns
arpl
stc
pop
imul
mov
xchg
ljmp
repz
inc
mov
mov
rolb
xor
fistpl
cmpsb
dec
jne
adc
fiaddl
xor
and
xor
rcrl
mov
sbb
test
jb
data16
push
pusha
or
lock
xor
mov
push
imul
sub
sbb
aad
sbb
into
mov
test
lret
dec
add
stos
lcall
sub
test
lret
cltd
inc
jge
dec
xchg
test
pop
mov
imul
test
pop
aam
shlb
mov
les
pop
pop
cs
loop
jns
gs
xchg
mov
jnp
jae
addr16
in
push
fwait
adc
sbb
lods
mov
cwtl
mov
mov
cmp
xlat
jle
add
mov
cmp
popf
jp
or
add
adc
out
push
jg
fcomps
fildll
mov
mov
push
enter
cmp
cmpsl
out
fldcw
or
inc
in
add
gs
lret
or
mov
or
lahf
jl
cmpsb
cmpb
mov
fnsave
or
jb
lds
loopne
dec
in
push
ljmp
sbb
add
and
js
aas
or
mov
in
sbb
xchg
pop
iret
cwtl
dec
pop
fistpl
loope
jb
sbb
stc
sbb
mov
dec
loop
push
xchg
call
stos
and
adcl
pop
ja
xchg
in
mov
mov
jp
or
xor
pop
cmc
les
fs
es
cld
push
std
in
xor
arpl
cmp
adc
popa
sbb
addr16
adc
aaa
xchg
ja
mov
inc
aad
adc
ljmp
hlt
and
jnp
jae
addr16
xchg
popa
jecxz
fcomps
pop
and
xchg
in
jne
js
imul
add
pop
pop
pop
dec
jb
lret
ljmp
jp
and
lods
mov
push
xchg
jne
pop
lahf
sbb
loope
mov
cmpsl
aas
xor
mov
pop
sub
cmp
fdivrs
and
cli
push
xor
dec
xchg
aas
les
in
lcall
adc
mov
dec
push
add
js
aam
xorb
or
loop
lret
push
jg
ret
repz
in
lods
push
outsb
mov
inc
cltd
fidivs
fisttpl
xor
mov
subl
cmpsl
test
sub
sahf
lods
jo
fistpll
pop
insl
xchg
ret
jle
fdivrs
xchg
fimull
into
leave
pop
sti
sbb
mov
mov
mov
xchg
cmp
cwtl
xchg
popa
jg
mov
push
repnz
clc
add
testl
dec
mov
mov
rorl
jp
les
movsl
pop
insl
aas
pop
adc
push
pop
addr16
icebp
shrl
dec
lods
sahf
mov
add
sub
xor
mov
cld
fistpl
aas
mov
fcmovb
mov
or
mov
push
jno
in
popf
push
xor
push
ret
push
or
mov
insb
out
adc
repz
cmp
imul
xor
stos
or
repnz
xor
dec
je
mov
loope
out
cltd
sahf
insl
or
je
imul
or
adc
rcl
sub
inc
jmp
or
dec
xchg
lods
jb
sbbl
test
pop
xor
insb
jle
xchg
cmp
dec
cmp
pop
das
fs
add
push
fnstenv
dec
je
out
clc
sbb
in
and
addr16
pop
xor
dec
jnp
xor
mov
adc
out
sub
out
jb
mov
mov
mov
push
ljmp
mov
pop
mov
leave
sub
pop
xchg
and
rorl
imul
push
gs
mov
fcomp
mov
adc
arpl
shrl
cmpl
jbe
fnstenv
xorb
or
sbb
out
mov
cld
scas
xchg
xchg
mov
pushf
sbb
shll
and
rorl
cmc
add
movsl
push
nop
sub
mov
or
pop
or
mov
push
add
ret
cmpsb
mov
int
add
hlt
dec
sub
imul
mov
ja
push
jmp
cmpsb
ljmp
cmc
mov
lea
mov
imul
loop
std
popf
nop
daa
iret
push
xchg
jmp
add
ljmp
es
jg
xchg
or
push
mov
insl
outsb
fimull
push
fistps
mov
xchg
xchg
sbb
mov
imul
test
mov
incb
jb
mov
ficompl
cmp
dec
stos
jne
out
popa
add
sub
fsubl
dec
ds
inc
sub
ja
mov
mov
jns
outsb
xchg
mov
inc
subl
test
fnstenv
aad
in
push
lcall
test
ja
fnsave
jg
mov
ror
cmpsl
ds
xchg
sub
push
push
inc
idivb
cltd
sbb
adc
or
popl
arpl
js
cmpsl
xlat
in
repnz
sbb
ret
mov
push
dec
loope
dec
cmp
icebp
sbb
ds
cwtl
daa
movsb
and
add
lcall
dec
imul
push
dec
jbe
mov
fldl
sarb
mov
insl
pop
mov
jecxz
test
sarb
sub
je
mov
into
inc
xor
out
in
test
dec
cmp
js
lahf
ror
int3
subb
out
fs
call
insl
inc
xchg
dec
cwtl
dec
popa
hlt
imul
xchg
pop
les
mov
and
mov
fwait
in
inc
adc
mov
jp
enter
fsubl
sbb
mov
cmp
add
dec
dec
xchg
adc
dec
ja
xchg
or
mov
sbb
shll
sarl
xor
mov
jp
jae
popf
xor
xchg
dec
pop
mov
jno
lcall
pop
mov
fstps
das
nop
cli
popf
jno
mov
leave
xorl
popf
cmp
pop
jo
lea
inc
stos
imul
scas
fdivp
rcrb
call
std
in
jnp
out
cmp
fsubrs
imulb
cmp
jl
add
mov
test
xor
cwtl
xor
lret
pop
in
mov
and
scas
mov
clc
dec
push
inc
fsts
sbbl
sbb
enter
xor
jmp
jmp
in
inc
orb
xchg
mov
test
into
test
in
stc
das
cmp
fimull
sub
jmp
icebp
or
push
add
cmp
loope
out
dec
add
into
sbb
loope
imul
inc
bound
aad
jno
mov
mov
repz
xlat
cmpsl
ds
movsb
add
aad
mov
call
cmpsb
push
outsl
repz
stos
mov
sub
jbe
or
fdivl
mov
xchg
xor
arpl
ja
lahf
cmp
cli
pop
dec
das
ss
leave
and
inc
ret
xlat
lock
xor
pop
lds
jge
cwtl
scas
movsb
sbb
and
or
popa
inc
cmpsl
xor
aaa
mov
mov
and
es
pop
stos
xor
fadds
xchg
mov
pop
and
jl
enter
addl
cmp
popa
clc
pop
dec
adc
adc
fcomip
pop
out
inc
fisubl
jle
cwtl
mov
loopne
xor
jne
push
or
inc
xor
test
adc
add
xlat
lcall
cmpsb
xor
inc
cmp
fs
add
or
int
or
adc
or
sbb
mov
sbb
and
loope
lods
inc
ds
mov
dec
mov
cmpsb
cmp
iret
add
in
decb
fs
leave
js
shll
cwtl
idivl
test
jg
imul
or
sub
mov
stos
inc
cmp
inc
fimuls
pop
shrb
jo
pop
mov
inc
in
or
or
xchg
sub
xchg
xor
jae
stos
mov
xchg
pop
aaa
or
cmp
loop
mov
push
subb
jns
and
xchg
loop
gs
sahf
iret
cltd
je
fcoml
inc
or
cld
pop
mov
push
nop
stos
paddusw
scas
rorb
xchg
mov
push
mov
repnz
and
cmp
pop
out
lods
xorl
fwait
in
inc
push
int3
sbb
stos
adc
pop
push
dec
in
daa
sti
pop
mov
sbbl
dec
mov
jg
sbb
dec
leave
cmp
or
lds
cmp
jge
dec
lahf
imul
xchg
shlb
loop
push
rolb
in
push
fistpl
cmpl
add
pop
mov
in
mov
loopne
fs
sti
popf
mov
mov
xchg
dec
xchg
sub
or
jns
ret
mov
mov
mov
lret
imul
fiaddl
jbe
or
mov
mov
inc
push
cs
fwait
imul
aam
ffree
push
pusha
or
into
int3
sub
out
ljmp
jmp
cli
xchg
dec
mov
sbbb
sub
jge
mov
mov
or
mov
adcb
add
sbb
outsl
test
inc
mov
nop
popa
sub
iret
call
mov
or
add
sub
add
daa
jne
add
gs
sub
xchg
sub
inc
int3
xor
jo
aaa
xchg
sub
xchg
jno
mov
xor
add
mov
sbb
ret
fdivl
jns
in
call
in
test
jo
fdivl
push
mov
inc
mov
inc
push
push
add
cmpsl
mov
stc
mov
mov
fwait
scas
cmp
ja
fldenv
inc
push
and
push
mov
xor
scas
sahf
jmp
push
ljmp
sahf
xor
mov
mov
movsb
mov
adc
pop
dec
mov
xchg
xchg
xchg
cli
packssdw
push
xchg
scas
push
mov
inc
jmp
sub
mov
mov
mov
adc
pop
xor
or
lret
or
aaa
xor
and
lret
jle,pn
mov
dec
in
or
subl
iret
adc
xchg
cmp
mov
inc
add
cmp
push
or
jmp
test
lds
sbb
dec
fwait
testl
cmp
clc
push
repz
mov
add
push
into
sbb
inc
faddl
sub
add
mov
fdivrs
sbb
iret
inc
cmp
jp
test
std
fsts
cmp
leave
inc
xlat
mov
icebp
sbb
aaa
ret
push
inc
loope
push
movsb
subb
fisubs
std
lret
lret
fdivrl
fiadds
add
xor
adc
fs
xor
and
cwtl
cli
inc
les
out
repnz
dec
push
xchg
daa
in
cmp
pop
push
push
xchg
mov
fcoms
pop
or
stos
xchg
das
rcll
mov
inc
mov
jl
jns
xchg
xchg
shlb
pop
push
push
push
mov
adc
call
pushf
xor
std
das
mov
jg
ror
jo
and
out
or
or
aam
outsb
inc
sub
sti
sbb
loope
lods
sub
loopne
mov
ret
rolb
int
lret
and
cmpsl
rol
pop
add
sbb
jae
adc
cmp
jbe
cld
iret
out
test
mov
movsb
addr16
fbstp
pop
xchg
add
aam
cmp
xchg
or
in
in
jne
and
dec
mov
and
dec
fsin
shlb
push
adc
or
dec
std
push
xchg
rcll
repnz
jnp
cltd
icebp
jno
sbb
pop
filds
push
adc
or
sbbl
sub
std
sbb
or
mov
jle
sub
fwait
sub
lret
idivb
mov
cmpsb
sub
push
mov
dec
mov
push
and
popa
jg
mov
jo
or
jnp
mov
xor
lcall
imul
mov
andb
fldt
mov
dec
pop
clc
rorl
fsubs
push
pop
into
jne,pn
jl
sti
sub
lea
jbe
fwait
vmovshdup
mov
sbb
icebp
jo
loop
lods
sub
xor
jle
fldenv
jns
cld
and
push
push
and
data16
xor
jns
adc
mov
xchg
add
add
es
or
xor
mov
push
lods
push
les
clc
jp
xor
cmc
cwtl
loop
mov
sbb
sbb
mov
add
sbb
sub
pop
ja
dec
xchg
in
mov
push
mov
aaa
int3
insl
mov
into
inc
push
test
lods
hlt
mov
jl
mov
xchg
aad
push
paddusw
or
mov
les
fstl
sub
sub
loopne
out
inc
fidivl
mov
add
sbb
jne
pop
cmpsl
ljmp
jg
inc
fsub
or
cli
mov
pusha
mov
mov
jb
inc
test
out
push
xor
mov
cli
in
pop
outsl
loopne
fists
mov
pop
sbbb
insb
pop
imul
mov
mov
pop
cmp
lea
test
sahf
std
xchg
sub
popf
sbb
sahf
mov
ja
sbb
fcomps
jmp
out
test
lret
jnp
ljmp
xor
bound
loope
imul
orl
mov
push
je
mov
andb
pop
mov
sub
jle
and
pop
dec
pop
cltd
cmc
insb
xchg
inc
dec
lahf
sub
test
inc
mov
jl
out
cmp
cwtl
jge
call
push
negb
sbb
unpckhps
ret
jmp
push
push
dec
add
push
jg
lcall
mov
sarb
fs
in
pop
imul
testl
insb
push
push
dec
adc
cmp
push
out
lahf
mov
sub
pusha
and
in
sub
fmul
push
jmp
aas
or
out
nop
es
push
ret
mov
push
add
lods
rcrl
sub
jo
xor
mul
fimull
insl
cld
inc
fsubrl
das
cld
dec
fsubrs
inc
adc
xor
jge
pusha
divl
mov
jge
jb
mov
jne
jg
shrl
rorl
sarb
jns
add
fidivrl
or
push
mov
mov
dec
mov
jl
pushf
xchg
sbb
fdiv
jmp
inc
push
push
bound
cmp
lcall
mov
or
fwait
out
xor
or
stc
ret
cltd
sub
mov
jae
orb
and
mov
pushf
push
outsb
outsl
dec
push
int
push
mov
jb
mov
cmp
cmpsl
or
addb
mov
dec
push
mov
push
and
or
ja
dec
rclb
aad
adc
repnz
ds
xchg
ss
out
jmp
push
sbb
jle
loope
sarl
add
or
shrb
inc
xor
sbb
cmpsb
enter
loop
jnp
add
xchg
dec
mov
in
pop
ret
inc
mov
and
mov
subl
xchg
jno
pop
in
or
and
mov
stos
adc
pop
fnstenv
addl
incl
fmuls
stos
pop
cmc
inc
pushf
adc
into
gs
js
inc
cltd
pop
shll
clc
push
push
imul
fnsave
fistpll
push
fnclex
inc
idivb
cmp
cmpb
or
sub
inc
insl
test
mov
and
xlat
test
mov
dec
pop
dec
mov
xchg
push
inc
jmp
mov
in
repnz
adc
icebp
mov
push
cmp
ja
cmp
loop
fdivl
mov
mov
cmp
push
xor
or
fildl
cld
hlt
push
jb
cwtl
lahf
xor
mov
dec
pop
mov
sub
adc
or
subl
mov
test
add
lret
ss
shll
push
jp
in
cmpsb
lods
pop
push
sbb
inc
lret
jp
xchg
adc
sub
inc
gs
scas
lahf
jne
into
xchg
clc
or
mov
xchg
xor
mov
ret
jne
jnp
mov
int
xchg
mov
fwait
test
arpl
cmpsb
pop
cmpsb
sbbb
lds
jge
loopne
sti
iret
dec
inc
mov
sbb
jle
outsb
insb
imul
xchg
shlb
pop
sbb
sub
adc
or
push
xor
xor
xor
xlat
subl
movsl
das
stc
mov
lds
rorl
ret
dec
jnp
sahf
jno
inc
arpl
divb
leave
dec
sub
jno
js
mov
scas
or
icebp
jae
xor
stos
xlat
xor
shrl
or
imulb
xor
mov
pop
imull
daa
scas
mov
or
inc
scas
cmp
mov
dec
mov
sbb
inc
fucomp
mov
rorl
jb
cmp
pop
cmp
and
mov
test
mov
mov
xchg
int3
movhlps
xor
mov
push
jb
test
and
loopne
je
pop
mov
push
pop
push
cld
pop
ret
ss
add
adc
inc
pusha
or
adc
repz
push
mov
cmp
xorl
mov
movsb
pop
mov
cmp
cs
cmc
fistl
shl
cld
jnp
cmpsl
int3
sub
notb
xor
faddl
lea
sub
mov
mov
clc
push
sub
sbb
fwait
fwait
xchg
inc
fsub
and
jle
lods
rorl
aas
add
or
mov
arpl
dec
dec
push
out
inc
sahf
adc
sti
mov
cltd
and
sbb
and
dec
adc
xchg
je
cwtl
pop
inc
sbb
sub
aaa
adc
mov
aad
lock
cmp
xor
aam
inc
popa
sbb
sub
mov
xchg
shl
test
aas
into
dec
gs
rcl
int
mov
addr16
dec
jmp
mov
or
sahf
outsl
jnp
mov
lds
push
icebp
pop
je
mov
mov
sahf
cmp
inc
icebp
mov
shl
enter
inc
fiadds
popa
fcoms
gs
xchg
xchg
xor
mov
jno
out
dec
dec
pop
addb
ja
cmp
mov
xor
stos
mov
int3
test
int
mov
loop
push
lcall
jne
mov
pushw
lock
mov
jbe
lods
add
push
aas
add
insl
and
xchg
sbb
hlt
cmpsl
lds
or
adc
outsb
pop
imul
cmp
cmp
pop
xchg
into
cltd
xor
jae
scas
dec
dec
aad
mov
sahf
incl
stos
cwtl
and
orl
fiadds
pusha
repz
dec
rol
jne
loop
adc
add
adc
sub
shlb
ret
adc
fstps
mov
mov
dec
lods
and
xchg
dec
xor
shll
stos
add
es
das
pop
mov
leave
sbb
mov
or
mov
xlat
ds
out
cltd
xor
in
inc
add
inc
inc
xchg
js
in
inc
lcall
jb
lret
ret
in
jmp
mov
jg
cmp
inc
jmp
jecxz
jl
shll
es
inc
fs
lcall
scas
sbb
mov
mov
sub
dec
add
jg
pop
cmpsl
in
addr16
shl
repz
xchg
dec
sbb
popf
pop
cmpsb
je
sbb
movsl
movl
and
jge
sub
subl
bound
loopne
xor
mov
pusha
fs
pushf
stc
jl
testl
xchg
cmp
repz
sub
mov
pop
xor
fsubrs
pop
popl
sbb
pop
push
xchg
push
mov
push
jo
inc
lock
popf
clc
adc
inc
fisubl
mov
shlb
rolb
sahf
ret
les
pop
sahf
hlt
jecxz
lahf
rorl
push
movsl
test
scas
negl
data16
mov
xor
aam
sub
cwtl
pushf
in
out
xchg
pop
fnsave
xor
push
or
jp
mov
cmpsb
out
inc
adc
push
mov
gs
mov
enter
mov
sbb
roll
inc
xchg
stos
movsb
call
cmp
fldl2t
adc
inc
sbb
sub
paddq
negb
outsb
jb
sbb
movsb
lds
into
mov
mov
add
faddl
ret
movsl
mov
push
shr
call
mov
dec
loop
or
shlb
pop
xor
mov
fistpl
dec
push
es
mov
jno
fildl
xchg
sub
mov
dec
mov
fcomi
into
mov
icebp
fcomip
dec
mov
lock
mov
lds
inc
sub
mov
fucomip
imull
jp
dec
mov
mov
push
jno
in
fs
xor
xor
pushf
loopne
and
adc
popa
sbb
sahf
or
adc
adc
add
mov
fiaddl
xor
aam
sub
mov
push
ret
insl
sub
dec
out
mov
lahf
push
xor
imul
and
cmp
daa
dec
inc
mov
dec
sahf
xor
sbb
in
ljmp
jp
gs
inc
sbb
inc
in
popl
ja
lods
adc
dec
xchg
iret
lcall
ffree
ret
mov
xchg
or
dec
out
adc
fnstenv
xor
cmp
mov
mov
mov
inc
sbb
xchg
mov
cli
pop
adc
cmpsb
or
je
push
or
sub
sub
je
sub
jge
enter
roll
cwtl
push
adc
mov
xchg
imul
fcmovnbe
lock
and
inc
sub
scas
push
movsb
testb
push
adc
xor
lret
mov
cli
sti
icebp
mov
cmp
cmp
out
mov
insl
push
lods
and
or
je
jp
adc
ss
outsl
inc
in
les
cwtl
testb
hlt
lea
inc
push
mov
std
shrl
das
mov
jle
punpcklbw
inc
xchg
loop
in
jle
fiadds
out
repz
xor
jmp
sbb
or
sbb
rep
fwait
sbb
mov
or
sbb
outsb
push
cltd
sub
xor
sbb
fs
cmp
aad
das
addr16
out
je
fwait
out
pop
insl
pop
out
add
lahf
push
fnsave
cmp
pop
pop
xor
push
into
cmpsb
mov
aad
sub
mov
into
js
ja
mov
pop
into
ljmp
rcl
xor
daa
push
out
pop
lock
in
sbb
ja
xlat
fwait
pushf
push
mov
insl
mov
rorb
xor
pop
mov
out
xchg
jbe
or
inc
or
jbe
cmp
imul
mov
jae
mov
add
stc
popa
push
mov
pop
adc
inc
push
jnp
pop
jmp
inc
push
or
cmp
sub
shll
sbb
and
ds
xor
cwtl
movsb
and
test
cwtl
mov
sub
sbb
pop
ret
xchg
push
loope
or
jl
sub
mov
push
lea
outsl
ds
leave
pusha
pop
pop
pop
dec
adc
jb
mov
cltd
iret
cbtw
push
xchg
inc
cltd
mov
data16
lret
mov
dec
lcall
add
lahf
xor
cli
pop
stc
outsb
nop
call
std
push
aad
jns
outsb
hlt
in
lock
cmp
mov
pop
mov
jo
stc
dec
push
mov
cmp
loopne
insl
pop
in
sub
push
outsb
mov
fisubl
outsl
lret
mov
jecxz
orl
mov
arpl
pop
sub
les
dec
out
jl
testl
adc
out
repz
mov
inc
dec
inc
aam
cmp
jmp
test
mov
fidivl
rolb
add
pop
out
jbe
dec
gs
jg
incb
push
sbb
test
aaa
mov
adc
sub
dec
fildl
dec
mov
inc
sbb
outsb
cmp
add
test
inc
xchg
cmpsl
ss
popf
jnp
fcmove
aaa
dec
negb
mov
xor
sub
imul
int
sub
push
jmp
jmp
jne
enter
mov
fucomip
jl
push
xchg
jge
mov
add
sub
lds
loopne
fsubp
push
in
push
movsb
ljmp
xchg
bound
cmc
mov
daa
lret
add
divb
inc
pusha
pop
into
sub
movl
aaa
push
sub
inc
lea
fwait
jge
cmp
lods
mov
gs
mov
out
xchg
cs
jnp
inc
and
jno
scas
loope
dec
insb
shl
mov
mov
cmp
adc
dec
push
mov
push
and
mov
mov
int3
jae
add
xchg
sbb
jle
imul
add
pushf
shr
jno
adc
dec
xchg
inc
stos
dec
lret
jae
sub
and
loop
into
pop
ss
outsb
push
dec
mov
out
test
sub
jp
in
fistl
mov
shlb
test
lret
add
jne
shlb
push
jmp
jmp
std
cmp
and
adc
test
pop
jge
addb
dec
pop
or
mov
adc
lods
scas
ljmp
or
add
aad
mov
xor
dec
ss
inc
popa
fcomps
xlat
sub
and
test
sti
push
iret
lods
outsl
mov
fistps
add
scas
and
ret
jg
rolb
fistps
js
rorl
mov
fdivr
arpl
jno
lds
stos
xchg
jle
iret
mov
mov
push
cmpb
sbb
pop
jo
or
ds
mov
cli
sub
dec
lds
xchg
mov
fcomi
mov
cmc
outsb
fbstp
push
xchg
push
orb
sub
mov
pushf
xlat
lds
scas
les
mov
xor
adc
xchg
jo
mov
popf
xor
lea
jecxz
fstpt
mov
in
inc
ficoml
mov
push
add
add
cltd
gs
fimuls
mov
mov
push
popf
xor
dec
dec
pop
lahf
popf
or
mov
xor
lds
pop
xor
das
and
ficoml
add
ret
dec
jnp
push
jmp
lret
add
ja
pop
push
jle
lods
les
dec
pop
icebp
pop
addr16
jns
dec
and
bnd
lods
testl
idivb
dec
mov
icebp
cli
push
cmpsl
testl
fisubrl
ret
jg
rcll
inc
or
inc
fidivs
sub
andb
jno
mov
sahf
sub
lret
cld
cmpsl
daa
mov
push
cmp
js
mov
cmovg
jb
call
out
lahf
sbb
stos
cli
std
std
mov
jno
aam
push
lods
mov
xor
adc
and
popa
shl
mov
inc
int3
add
sbb
orb
ljmp
cwtl
mov
lret
cwtl
std
push
sti
xchg
out
arpl
adc
jnp
jo
cltd
sti
jbe
lcall
jp
mov
and
mov
push
mov
mov
imul
shll
add
out
cld
and
rorl
cltd
and
or
mov
adc
lret
or
adc
adc
fcompl
mov
and
inc
xchg
test
xor
mov
test
mov
test
xchg
js
repz
movsb
inc
add
adc
xchg
inc
cltd
aam
xchg
xor
lret
xchg
and
inc
rolb
sbb
dec
inc
add
dec
xor
jle
and
stos
callw
xor
std
lahf
lret
mov
pop
in
add
add
lahf
repnz
xor
xchg
bound
call
pop
add
cmp
push
mul
notl
jmp
inc
sbb
and
push
insb
lcall
push
in
sbbl
sti
fmul
mov
int
cmp
mov
shl
nop
lret
xchg
cs
shll
test
cmp
icebp
je
cmpsb
jl
xchg
jmp
or
dec
rol
lods
mul
iret
dec
sbbl
out
sub
cwtl
push
rolb
sub
cmp
or
mov
in
stc
fwait
sub
mov
shll
rcrl
addl
dec
popa
shrl
xorl
cmp
mov
cmp
jb
out
xor
pop
jg
mov
jecxz
mov
push
xor
xor
mov
aaa
jmp
ss
neg
fiaddl
adc
lahf
scas
addr16
dec
cmpsb
xchg
cltd
mov
add
push
es
and
push
outsl
rorl
mov
mov
pop
push
xchg
sub
into
mov
jbe
dec
loop
cmp
jae
test
loop
inc
add
push
ds
decl
add
lret
je
nop
push
cmpsl
out
ficoml
mov
fs
or
adc
dec
in
inc
fcomps
jle
cmp
inc
das
pop
outsl
add
loop
les
dec
fmull
fdivrp
and
iret
adc
and
cmpsl
ret
scas
inc
push
or
rcll
std
push
out
sbb
xchg
rcrb
jne
jmp
pop
cmp
aaa
negb
sub
scas
jo
cmp
pop
xor
add
mov
xchg
loop
mov
movsb
jge
pop
sub
es
bound
aad
ss
repnz
in
xchg
pop
jmp
cmp
sbbl
mov
jge
lret
leave
call
push
into
push
int
push
fst
movsb
cmp
xchg
js
ret
popa
xchg
sub
les
in
sahf
enter
fidivrl
mov
mov
push
lret
insb
fcomp
or
call
push
imulb
int3
push
or
or
cmp
and
pop
or
repnz
pop
add
mov
mov
imul
mov
jno
jo
dec
sbb
lock
shll
cmp
in
push
xchg
in
iret
popf
test
js
lods
cli
xor
pop
inc
clc
loope
mov
out
and
nop
mov
nop
daa
scas
les
cli
into
cmp
and
add
dec
es
jg
sbb
add
test
push
dec
sub
outsl
adc
add
in
or
lods
loopne
sbb
movsl
ljmp
cmpsl
rcr
jo
sarl
test
push
and
cs
or
mov
cmpl
xor
mov
jo
inc
mov
mov
mov
jg
xchg
mov
lret
in
lds
and
add
push
jnp
cli
ret
pop
and
loope
popa
adc
xor
mov
pop
out
sti
ret
notb
or
jmp
or
cmpsl
or
pop
orb
mov
fisubs
push
loop
clc
fdivp
adc
dec
sbb
data16
jp
data16
xor
fistpll
dec
xchg
xchg
xlat
push
pop
cmp
sub
push
out
pop
inc
mov
in
mov
fadd
xchg
mov
mov
in
icebp
lds
stos
jg
xchg
gs
fldcw
mov
ja
adc
sub
ret
frstor
or
and
rolb
addr16
lock
mov
cltd
jo
in
call
sbb
pop
dec
cltd
xlat
mov
hlt
loop
dec
pop
call
push
and
dec
and
jns
test
pop
cmp
enter
jecxz
loop
sub
inc
data16
fistpll
push
and
sbb
sbb
loopne
cmp
mov
cmp
lods
inc
orb
jbe
lret
xchg
sub
mov
rorl
fisttps
imul
add
jns
mov
sbb
push
shr
mov
inc
ja
call
xor
iret
push
push
mov
outsb
cmc
adc
jle
dec
pop
fwait
push
dec
fsubrs
mov
je
jl
aas
testb
push
pop
nop
sbb
mov
movsb
inc
test
inc
pop
aad
push
pop
mov
shrb
ret
push
and
lcall
les
pop
sbb
sarb
sbb
cltd
out
pop
fbld
xor
xchg
and
pop
repnz
popa
ja
cmp
xor
dec
pop
idiv
mov
lds
std
scas
mov
dec
pushf
dec
loop
push
insl
data16
push
adc
lret
sbb
negl
es
add
xchg
xor
and
decl
mov
mov
insl
mov
add
mov
cmc
and
repnz
in
xor
adc
sbb
out
in
push
out
xchg
mov
xor
sahf
addr16
push
out
test
cli
scas
pop
insb
loopne
push
scas
or
pop
cmp
data16
cld
pusha
pop
gs
sub
jno
mov
dec
sarl
test
js
inc
inc
and
mov
add
filds
cmpsl
mov
js
xchg
data16
sub
xchg
scas
divb
test
movb
jne
neg
jae
pop
jb
adc
jg
jl
andb
xchg
insb
imul
mov
or
mov
out
or
inc
aam
aam
imul
jo
pop
adc
jl
jg
testl
imul
fsubr
orb
jbe
repz
push
je
and
arpl
out
mov
push
flds
jmp
or
xchg
mov
mov
push
mov
xchg
ficoml
jne
aaa
in
loope
lahf
and
iret
push
je
fildl
sbb
stc
fldcw
add
cmpsl
and
lahf
pusha
test
imul
or
cmpb
xor
xor
sub
and
test
loope
and
mov
stos
inc
mov
sbb
aas
mov
outsl
mov
out
sub
cmc
xor
cltd
add
imul
xchg
fcmovu
jno
mov
add
fnstenv
and
xchg
fisubrs
sbb
popl
gs
jl
in
adcl
out
inc
add
xor
xor
dec
in
nop
cmp
stos
stos
lret
inc
loopne
inc
stos
xchg
adc
sub
mov
push
cmc
fcomps
mov
imul
pop
loopne
sbb
adc
insb
adc
out
ret
dec
push
cmp
mov
jecxz
xor
aam
rcrl
dec
jg
jnp
outsl
lods
test
cmpsb
stos
pop
jne
loop
loopne
testl
subl
push
sbb
aas
insl
mov
fldenv
bound
ja
pop
test
inc
and
sub
rorb
push
mov
mov
sub
pop
out
inc
gs
pop
cltd
pusha
mov
push
out
nop
sbb
ds
aam
stos
mov
in
xchg
pop
repz
cmp
repz
ja
mov
add
stos
jg
sub
sbbb
push
in
testb
or
push
repnz
lret
montmul
cmpsb
test
mov
lods
mov
and
sbb
pop
push
mov
faddp
jb
or
ljmp
subl
and
xchg
push
sbb
sub
jb
mov
mov
xchg
lods
nop
dec
imul
adc
mov
out
mov
adc
ljmp
jl
xchg
mov
imul
fnsave
dec
test
fldl
test
adc
stc
inc
movsl
repz
in
cltd
fimuls
lods
sbb
jnp
insl
sub
loopne,pt
or
shll
and
push
js
out
xchg
out
imul
or
pushw
popf
xchg
in
dec
push
add
pushf
in
popf
stc
addb
sub
push
cmp
test
jae
jle
out
out
mov
ljmp
mov
pop
shll
ja
outsb
mov
ficomps
stos
or
lods
mov
fnsave
leave
cmp
mov
mov
cmc
inc
cmp
mov
push
clc
jg
xor
insl
inc
push
lea
cmp
lahf
lds
decb
jle
mov
push
inc
sti
xorb
sub
clc
imul
xchg
sbb
jle
fisubl
cmp
jp
ljmp
and
jne
dec
lcall
push
mov
ss
fimull
mov
sbb
xchg
mov
in
sub
sbb
jb
sub
mov
mov
mov
repz
pop
mov
mov
outsl
jle
rcrb
add
dec
loopne
xor
jp
icebp
addr16
sbb
adc
or
mov
test
aam
push
jae
sbb
jb
push
or
pop
mov
push
sub
cmp
mov
in
test
pushf
daa
enter
inc
outsb
jbe
test
or
push
inc
in
and
hlt
xchg
lcall
imul
mov
into
in
jl
mov
fdivl
fwait
xchg
decl
xchg
sub
inc
sbbl
shlb
push
mov
cmp
inc
push
repz
call
insl
lock
cmp
and
pop
xlat
lods
loop
dec
ffreep
dec
pushl
out
std
sbb
fsubrs
dec
pusha
imull
or
dec
dec
sub
shl
shll
out
sti
push
adc
xlat
cs
out
dec
lds
mov
mov
je
fsubs
sbb
in
jb
mov
sub
add
and
dec
cld
test
out
stos
mov
mov
adc
xor
inc
loopne,pn
dec
jb
test
jmp
inc
fmull
arpl
mov
xor
push
fcom
mov
int3
notb
xchg
aas
sbb
pop
xchg
xchg
ret
push
and
push
cmc
jp
mov
sbb
mov
sbb
xchg
mov
shl
and
or
lea
sarb
data16
jge
xchg
push
bound
cld
xchg
pop
popa
bound
imul
adc
ret
outsb
test
int
xor
imul
push
stc
test
cmpsl
lds
aam
out
pop
sahf
mov
xchg
in
nop
push
pop
push
jge
inc
ret
jl
in
imul
data16
push
and
sbb
add
jge
xchg
cwtl
data16
mov
sbb
add
ret
dec
and
icebp
clc
pop
call
lahf
xor
lods
push
mov
mov
bound
sbb
xchg
sbb
push
fidivl
sbb
test
into
sbb
add
and
push
jne
mov
dec
xor
xchg
aas
dec
dec
lahf
loope
push
and
leave
adc
enter
imull
repnz
sbbb
bound
xchg
cmp
ljmp
icebp
decl
loopne
stos
adc
aad
nop
and
sarl
xor
mov
sbb
sbb
arpl
cltd
pop
loope
imul
xlat
scas
js
inc
stos
rorb
outsl
mov
xchg
js
cmp
adc
pop
je
inc
and
mov
inc
jmp
jecxz
fnsave
movsl
xor
hlt
add
sbb
jecxz
jecxz
insl
xor
out
pushf
pop
fwait
or
mov
leave
jecxz
shll
icebp
or
sbb
mov
mulb
ss
mov
lea
repnz
pusha
mov
movsb
cmp
adc
enterw
jae
sub
cmovno
int3
outsl
call
testb
cmp
insb
xchg
fidivl
pop
lea
cmp
xchg
xor
jb
adc
sub
and
dec
jp
mov
push
or
sahf
inc
sub
movsb
out
insl
stc
ss
push
imul
mov
lret
mov
loop
fnop
int3
pusha
mov
outsb
jne
out
out
jg
pushf
xlat
out
push
jae
popf
stos
imul
push
dec
in
aam
fwait
jp
mov
out
je
mov
in
inc
cltd
mov
popf
mov
aam
cmp
movsl
dec
imul
iret
lret
out
ffreep
enter
cmp
sub
daa
shr
or
sub
ja
mov
pop
fstpt
andl
icebp
jge
aad
aad
js
add
jns
and
jge
icebp
test
and
subb
sbb
mov
and
pop
iret
in
int
stos
nop
mov
ror
xlat
sti
pop
mov
xchg
adc
mov
inc
sbb
sti
xchg
cmp
fimull
mov
in
xchg
jo
inc
xorb
outsl
push
outsb
lods
pop
repz
out
nopl
scas
bndldx
mov
ds
out
mov
pop
xchg
arpl
dec
out
xor
pop
aad
addr16
loopne
push
fwait
ljmp
ljmp
add
pop
xor
add
xchg
xchg
or
mov
pop
shrl
mov
stc
push
sub
mov
std
inc
imul
loopne
test
pushf
stos
add
prefetchw
pop
sar
mov
adc
loope
outsb
lret
inc
and
nop
repz
jbe
dec
scas
in
call
jmp
xchg
jmp
fwait
sti
xchg
popa
add
insl
cmp
shlb
fwait
cltd
pop
pop
pop
imul
call
adc
cmp
add
inc
fidivs
mov
push
pop
aad
dec
add
std
adc
mov
jp
lcall
xchg
inc
xor
add
ja
aam
xlat
pop
jbe
pop
lea
mov
scas
and
sbb
popf
sbbb
xchg
jmp
mov
lds
ss
adc
mov
push
or
or
enter
dec
cmc
cmp
call
dec
les
stc
ret
add
mov
out
aas
ret
aas
adc
std
or
das
ds
inc
inc
fidivl
push
scas
loopne
sub
mov
mov
inc
cmpsl
inc
out
out
jge
pop
adc
incb
fists
xchg
push
loope
mov
dec
jl
or
popf
dec
dec
jo
lods
xchg
sub
andps
pop
sarb
mov
push
xor
xlat
int3
jno
pop
and
push
lahf
out
xchg
ret
push
cmc
mov
or
es
stos
and
lock
jns
dec
mov
sub
mov
insb
hlt
and
insb
aad
dec
sbb
sub
sub
add
add
pop
inc
pop
sub
push
sbb
icebp
aad
and
cmpsl
and
icebp
in
filds
xchg
fsubrl
out
mov
or
outsl
pop
xchg
xor
mov
mov
ffree
popa
dec
insl
add
cmpsl
cli
xchg
jecxz
dec
out
mov
daa
mov
jmp
dec
mov
clc
jns
stc
sahf
test
iret
data16
lcall
adc
repnz
je
int3
movsl
inc
loopne
jp
sbb
sbb
sbb
les
and
jne
je
leave
jae
jl
cld
mov
sub
sub
out
xlat
jbe
jg
pop
mov
mov
bnd
fldenv
shr
ret
push
ja
inc
repz
xchg
in
adc
push
mov
jae
scas
xlat
into
ss
fdiv
sub
sar
pop
sub
leave
mov
and
dec
cmpsl
popf
out
dec
testb
jge
loope
push
fidivl
dec
sub
mov
sarb
cmpsb
cmp
sbb
pop
out
jge
lods
scas
pavgw
bound
xchg
jle
jp
clc
ja
sbb
movb
outsl
lahf
loop
inc
add
cmp
fnstsw
sub
int
iret
or
stc
and
scas
div
push
pop
and
push
jb
inc
and
pop
leave
add
hlt
xor
lods
out
cmp
ss
loopne
sti
sahf
out
sets
and
leave
jecxz
xchg
call
or
sbb
dec
jg
pop
mov
inc
mov
cmc
sahf
or
in
ficoms
in
xor
insb
add
ds
or
sub
jno
outsb
test
push
stos
mov
mov
jle
cmp
push
pushf
xor
in
adc
nop
and
push
mov
jno
xor
stos
lcall
jae
cmpsl
dec
adc
jmp
imul
dec
stos
push
scas
mov
cmovae
xchg
cmpl
cmp
insb
pop
in
jno
push
sub
insb
fcmovnu
enter
call
and
xchg
push
ljmp
ret
out
jecxz
xchg
adc
gs
dec
pop
insb
or
sub
rol
sbb
xor
or
inc
pusha
or
sub
sub
shrb
cmp
adc
pop
ds
das
or
call
jae
sbb
mov
mov
mov
dec
push
cmp
or
push
lods
test
fistps
adc
inc
ljmp
jno
jle
push
test
sbb
cld
xchg
jmp
adc
in
sub
nop
jno
mov
xchg
cmp
and
aaa
jno
ret
mov
sbb
test
les
jg
fldl2t
mov
andl
cltd
dec
push
inc
call
or
fldcw
call
cmp
add
sbb
push
out
xor
xor
pop
subb
test
push
int3
fidivrs
push
cmp
xchg
xor
dec
pop
aam
mov
sub
add
stos
mov
fstpl
cmp
push
adc
imul
in
add
data16
dec
adcl
adc
xor
mov
shr
aaa
lret
mov
orl
adc
fs
mov
xor
insl
jo
je
mov
jae
aad
jg
or
loope
nop
xor
inc
xor
out
rcl
add
fbstp
lahf
sbb
mov
add
add
inc
stos
mov
iret
and
std
xorl
jae
sahf
gs
push
add
daa
frstor
ret
xchg
stos
aas
sahf
loope
xchg
mov
and
fwait
insl
mov
les
das
add
scas
xchg
push
xchg
scas
shll
push
test
test
into
subb
adc
scas
mov
mov
movsb
mov
adc
call
daa
daa
out
movsl
add
xchg
clc
or
stos
cmp
pusha
fdiv
cwtl
movsb
or
xchg
mov
cli
nop
adc
inc
bound
repnz
data16
mov
popf
pop
ss
sti
pop
pop
nop
mov
stos
mov
dec
loopne
fwait
je
pop
inc
mov
icebp
jle
add
pop
or
fistpll
fdivl
std
idivl
jge
inc
ficomps
mov
fwait
das
rep
mov
or
insl
add
mov
fdivl
fwait
adc
add
ss
pop
sbb
out
test
cmp
and
push
insb
and
scas
nop
test
and
or
jne
dec
push
in
rolb
push
ljmp
cmpsl
clc
jg
cltd
mov
pop
outsl
daa
fcoms
fistl
dec
pop
cmp
nop
mov
pusha
xchg
push
push
xchg
loope
and
cmp
sbb
std
mov
pop
out
bound
stc
data16
cmpsb
sahf
sti
mov
in
fistps
push
xlat
and
adc
push
jbe
lcall
mov
dec
stos
xor
rcrl
loope
bound
sbb
popa
jp
mov
aam
mov
or
das
push
jno
mov
mov
in
inc
pop
push
clc
add
fbld
shl
xor
sahf
cmp
ss
adc
mov
sub
pmuludq
addr16
or
out
add
adc
xchg
lea
test
and
mov
pop
shl
jl
loope
je
inc
xchg
or
dec
enter
jns
loopne
jp
mov
mov
xor
xchg
dec
push
or
cmp
mov
mov
xchg
and
ja
daa
xor
pop
add
es
and
js
adc
pop
lods
inc
ljmp
arpl
or
data16
fisttpl
mov
test
pop
es
mov
mov
stos
jbe
negb
andl
pop
dec
bound
and
cld
push
out
and
inc
jne
js
jl
push
adc
js
je
push
bound
gs
mov
jbe
ljmp
testb
sub
jns
xchg
fbstp
outsb
sbb
pusha
jge
sbb
scas
dec
pop
inc
fimull
adc
pop
push
xchg
inc
xor
arpl
insb
or
gs
imul
xchg
scas
mov
cmp
adc
mov
cmpsl
fidivrl
fimull
pop
adc
popf
sub
addb
imul
fsubr
inc
addr16
mov
stos
cwtl
fs
inc
mov
int
jns
movsb
shlb
pop
loop
sub
jge
das
fsubl
es
push
in
mov
dec
jecxz
pop
je
mov
push
or
mov
pop
add
dec
mov
fsubrs
sar
nop
add
testb
ja
nop
test
testb
out
nop
sbb
testl
and
testl
mov
jge
mov
clc
xchg
xor
lock
mov
add
mov
jo
popf
call
lods
and
adc
pop
add
inc
movsl
and
cmpsl
stos
xchg
into
pop
movsl
js
sub
xlat
lea
fnsave
lods
jg
and
push
and
test
mov
ret
pusha
sarl
leave
cmp
push
lahf
outsl
mov
je
popf
and
dec
adc
jnp
scas
fs
jae
outsl
pushf
xor
pushf
decb
sub
test
lds
mov
or
sub
aam
out
push
popf
int3
notl
adc
inc
xor
ds
jle
adc
dec
mov
jno
mov
jno
stos
sub
insb
inc
pop
sbb
xlat
xchg
aam
xbegin
cmpsb
out
sbb
adc
mov
test
scas
mov
sbb
xor
push
gs
rcrb
ficoms
rolb
dec
insb
test
adc
inc
fcomi
stos
xchg
pop
and
jb
ss
out
fcomps
stc
jnp
push
sbb
cmp
sub
pop
mov
cmp
xor
imul
imul
adc
adc
and
sti
in
in
pusha
xchg
imull
dec
mov
movsb
insl
sub
imul
es
loope
andb
xor
adc
jbe
fs
jne
dec
loop
inc
gs
push
imul
sub
pop
scas
push
dec
push
adc
mov
cmp
mov
lock
icebp
or
ret
movsl
gs
dec
rcrb
mov
test
pop
xor
xor
aam
shl
push
scas
sub
and
das
mov
repz
and
cltd
scas
cli
inc
outsl
sbb
inc
inc
mov
daa
call
cmpsb
xor
out
push
dec
jno
mov
push
mov
mov
jno
sub
xchg
scas
add
arpl
lret
xchg
sub
aam
cmpsl
imull
push
js
int
or
xchg
jae
jmp
inc
adc
jne
cltd
stos
das
pop
mov
pop
mov
sbb
hlt
inc
inc
jmp
cltd
xchg
bextr
aas
scas
enter
in
mov
sbb
sahf
lea
or
xor
hlt
ja
movsl
sahf
mov
rol
imul
bnd
inc
dec
mov
jns
outsl
mov
lock
sar
lcall
mov
addr16
outsl
mov
mov
and
push
rcl
mov
mov
stos
adc
fcomps
xchg
xchg
sbb
fprem
sbb
pop
dec
mov
xor
push
cmp
jnp
sahf
inc
lcall
xchg
xchg
push
repnz
add
dec
aam
inc
rorb
jns
inc
bound
mov
sbb
fidivl
jg
pop
xchg
mov
cs
lds
imul
lods
and
int
js
loop
jecxz
divl
add
sar
cltd
or
push
xchg
xchg
mov
ja
lds
sbb
xor
add
enter
add
not
fmul
or
xlat
xchg
mov
data16
and
xchg
or
mov
aad
pop
daa
xchg
sub
mov
out
sti
imul
dec
adc
xchg
xchg
ds
push
mov
cltd
jl
inc
lret
in
xchg
fbstp
lcall
push
cld
push
popf
mov
mov
movsb
test
add
push
dec
and
cli
mov
add
fstl
das
push
jmp
push
pusha
cmp
xchg
rorl
inc
dec
cmpsl
or
leave
rcll
add
jns
mov
mov
cmpsl
invd
fidivrl
xlat
cltd
jbe
jmp
fmuls
rclb
add
and
jecxz
jecxz
movsb
popa
mov
lret
test
mov
ds
fnstenv
sahf
xchg
sbb
das
fwait
sub
data16
test
sub
ss
mov
push
leave
cmpsb
add
imul
stos
sub
fiaddl
dec
out
or
ret
fistpll
cmpsl
imul
mov
test
js
mov
cmpsb
into
adcl
dec
adc
repnz
pop
aaa
dec
cmp
xor
xlat
dec
popa
or
and
push
cmp
mov
mov
mov
pop
lods
cmp
inc
scas
test
adcb
imul
pop
andb
aas
sbbb
fbld
jl
sub
jecxz,pt
test
cmp
jmp
or
mov
stos
inc
fstpl
shll
in
add
rcll
divl
movb
pushf
xchg
iret
cmp
mov
in
sbb
stos
lock
aam
notb
sbb
jae
cwtl
pop
or
bound
int3
dec
push
adc
push
repnz
cltd
xlat
xchg
mov
dec
out
push
xlat
addb
xchg
push
mov
addr16
out
in
cli
inc
loopne
ja
jle
in
and
cmp
inc
enter
mov
pop
test
pop
or
cmp
cmpsb
stos
bnd
and
inc
sahf
ja
and
push
inc
mov
test
movsl
dec
sub
inc
popf
dec
fwait
lds
leave
fldenv
dec
cltd
dec
orl
cmc
repnz
pushf
insl
pop
add
ret
pop
ficompl
jno
pop
daa
ficompl
fmulp
xchg
jle
inc
mov
lods
inc
fstl
psubsb
lea
scas
push
repnz
inc
movsl
jb
aaa
test
jb
ds
sub
xchg
popf
cs
outsb
inc
xchg
mov
jecxz
mov
mov
push
loope
test
xchg
cmp
fwait
push
mov
push
cmpsb
mov
ret
jae
loope
inc
cmovns
inc
xchg
out
mov
xchg
stos
shrb
mov
addr16
lahf
ljmp
aaa
xlat
enter
jg
sub
mul
les
jb
mov
mov
aad
cmpsl
push
pop
pop
push
pop
pushf
jge
cmp
jge
aas
arpl
adc
inc
and
lcall
rolb
or
adc
adc
add
notl
in
xchg
pop
mov
dec
sbb
mov
adc
pop
pop
addr16
pop
popf
movsl
nop
test
ds
in
jns
sbb
pop
lret
or
mov
ja
pop
nop
mov
dec
lret
das
mov
ficomps
add
sbb
sbb
dec
nop
jl
nop
int3
stos
fsubl
bound
mov
das
jecxz
scas
cld
mov
dec
push
adc
dec
xchg
push
leave
jns
mov
into
rcrb
aam
imul
inc
fidivrl
loopne
dec
rolb
adc
xchg
andb
mov
jp
jmp
sbb
mov
fstps
rcrl
fsub
push
fbstp
cld
or
xor
lods
insl
pusha
fdivs
adc
xor
andl
mov
fbld
sbb
jns
pusha
push
push
jecxz
lret
push
inc
inc
pusha
shr
pop
and
pop
dec
out
cli
aaa
mov
jbe
mov
or
negl
fld
out
add
mov
jns
imul
mov
jno
shll
adc
out
pop
insl
cmp
mov
mov
mov
aad
call
mov
fucomip
push
xchg
shlb
int3
pushf
and
sbb
cmp
and
dec
jp
aam
xor
notl
dec
pop
xlat
insl
jmp
lahf
or
enter
cs
out
dec
hlt
mov
jmp
mov
adc
jae
adc
popf
das
xor
mov
mov
xchg
push
aaa
jecxz
mov
jne
iret
xchg
aas
lds
inc
xor
outsl
cmpsl
or
mov
das
repnz
push
mov
mov
push
xor
mov
fdivrl
loop,pt
in
and
adc
in
cld
sbb
inc
addr16
push
sahf
in
cmpsb
push
lea
jns
and
int3
test
scas
lcall
mov
out
aas
les
into
pop
mov
shl
inc
push
mov
and
mov
pop
mov
xchg
adc
and
mov
rcrb
cld
fwait
int
mov
jmp
mov
mov
repnz
or
adcb
je
and
mov
inc
outsl
adc
int
mov
lock
add
std
or
dec
sbb
fwait
daa
add
stos
mov
inc
sub
xchg
pushf
push
leave
out
sub
mov
sub
and
and
jbe
mov
jp
nop
cltd
int
push
fwait
in
imul
dec
nop
test
mov
adc
aaa
hlt
sbb
or
jge
mov
lret
dec
xor
sbb
in
add
pop
mov
jp,pt
pushf
sub
dec
jecxz
push
dec
dec
add
xchg
shrl
scas
out
not
icebp
jl
sahf
pop
in
inc
repz
das
out
add
xchg
hlt
push
ljmp
jmp
sbb
insl
xchg
daa
das
mov
push
inc
pop
push
or
adc
hlt
lahf
cmp
mov
push
or
dec
sub
jbe
jp
popf
jo
jnp
mov
popf
xor
push
or
or
sub
or
fnstcw
adc
push
cmp
mov
pop
aam
adc
or
and
add
jne
push
cmp
jae
pop
imul
add
icebp
sti
loop
rcl
inc
stos
out
test
in
push
pop
cwtl
rol
rorb
decb
sbb
mov
pop
add
cmpsb
lock
xchg
sub
sbb
mov
bound
insb
pop
xorl
imul
xchg
in
fwait
push
push
rol
jo
or
push
leave
int
lods
addr16
mov
cmpsb
mov
push
lret
mov
mov
sub
adc
in
das
pop
cwtl
mov
mov
sahf
repz
pusha
in
mov
xchg
loope
add
or
push
push
mov
test
jg
pusha
pop
aaa
xchg
js
sbbb
cmpsb
into
mulb
into
nop
mov
psubb
stos
mov
cmp
nop
mov
cltd
ja
or
fsubr
mov
or
or
fs
and
mov
push
adc
mov
xchg
jl
outsl
mov
js
push
mov
jns
pop
out
jnp
pop
repz
fdiv
push
adc
and
dec
cltd
sub
gs
pop
lahf
mov
lods
jp
xor
pop
das
cli
or
or
mov
ret
movswl
loopne
adc
cmp
in
arpl
jp
inc
jnp
mov
lods
testl
xchg
out
fstpt
lock
inc
test
cld
or
and
jns
sbb
sbb
xchg
add
repz
and
aas
pop
push
imul
pop
xor
gs
push
mov
clc
mov
stos
cmp
jp
push
adc
pop
push
lea
mov
push
pop
daa
outsl
xlat
lret
pop
lcall
dec
dec
and
dec
shll
mov
popf
pop
mov
sub
or
lcall
movsl
inc
dec
test
add
aam
pop
fildll
and
insl
cli
loope
add
sbb
add
arpl
mov
mov
xor
div
sahf
push
cmc
adc
or
add
inc
push
dec
movl
scas
addr16
adc
or
out
sbb
adc
add
dec
and
pop
pop
out
andl
mov
rol
jle
loopne
dec
scas
test
aaa
sbb
push
movsb
psllq
outsl
push
test
and
mov
push
or
movsl
dec
pop
loop
ljmp
mov
dec
aaa
mov
push
mov
lcall
mov
jbe
cmpsl
add
mov
cli
shl
hlt
mov
mov
add
dec
pop
lods
xor
add
xchg
pop
sub
fsubrl
arpl
push
lcall
push
adc
icebp
xchg
dec
dec
cmp
out
xchg
adc
movsb
inc
in
outsb
xchg
lock
push
and
fisttps
sbb
dec
lret
into
jb
xchg
pop
push
mov
mov
pushf
xor
push
ljmp
dec
dec
pop
and
sub
lret
fcomip
pop
pop
xor
push
mov
int
insl
or
je
inc
push
mov
lahf
in
insb
clc
sahf
inc
xor
repnz
fucomi
scas
push
or
fadds
mov
sti
dec
add
or
adc
rcrl
stos
push
jo
mov
rorb
bound
loop
stc
push
cmp
sub
out
cld
mov
cmpsl
and
outsl
and
adc
mov
xor
cmp
sub
lods
fnstsw
andb
scas
dec
dec
clc
dec
dec
mov
sub
pop
lahf
fwait
aad
inc
pop
cmp
ret
mov
dec
jp
lock
pop
enter
cli
ret
xor
insl
sbb
mov
xchg
sbb
cmp
rep
mov
adc
inc
mov
push
add
inc
ljmp
gs
ljmp
sbb
popf
data16
sbb
sti
mov
sub
cmc
dec
push
pop
ret
jge
cmpsl
inc
ret
aam
call
or
pop
dec
lcall
cmp
out
or
and
and
rol
cmc
ljmp
push
pop
mov
pushf
pop
or
ljmp
inc
adc
fcmovnu
adc
mov
or
xor
add
stc
jmp
mov
push
cmc
dec
fsub
inc
dec
xor
lds
inc
aad
or
sub
popa
xchg
aaa
fs
dec
dec
xchg
push
jae
iret
xor
sub
lock
jmp
push
ret
enter
fcmovne
icebp
add
mov
movsb
adcl
andl
add
arpl
adc
push
shlb
sub
idivb
and
mov
push
cmp
call
sbbb
mov
lahf
out
lahf
push
enter
mov
push
add
inc
inc
mov
fldl2e
clc
push
inc
inc
data16
cli
test
test
push
enter
pop
in
int
movsl
jp
mov
ret
pop
scas
mov
mov
sbb
movsb
xchg
xor
es
pop
push
fstpl
pop
push
cltd
decl
js
icebp
push
mov
in
mov
mov
in
enter
pop
jnp
sbbl
add
mov
pushf
xchg
add
ljmp
clc
dec
dec
cmp
adc
push
xor
test
lahf
cmpl
jmp
jae
rolb
or
mov
cld
fdivrl
outsl
popw
adc
sbb
aas
dec
fisubs
shl
sbb
cmpxchg
in
push
cmpl
mov
sbb
jnp
push
insl
add
into
jns
jbe
mov
addr16
pop
jmp
dec
inc
cmp
xor
push
cmp
ds
cmpb
sub
cmp
fs
repz
fisubrl
dec
outsb
push
pop
add
mov
xchg
in
fstl
ja
je
or
sbb
shll
mov
mov
ret
pusha
outsl
cmc
aas
cmp
jo
testb
sub
and
hlt
mov
xor
sbb
xchg
iret
int3
icebp
sbb
ds
cmc
mov
cs
sub
lods
inc
movsb
call
test
and
jb
lods
std
and
incl
mov
mov
fnstsw
in
lret
sub
xchg
lahf
pop
dec
xchg
mov
xchg
and
test
leave
xor
jmp
xchg
push
stc
popf
xchg
bound
xor
jmp
sti
bound
sbb
mov
inc
xchg
mov
mov
fidivl
mov
out
push
repz
jo
cmpsl
add
fs
xchg
push
xor
jp
imul
icebp
fs
push
xor
out
xchg
in
adc
data16
and
shl
xchg
call
sub
push
loopne
adcl
jl
push
js
and
dec
xlat
shrb
sbb
into
cmpsb
and
ror
pusha
decb
mov
ficomps
clc
pusha
jp
mov
or
xchg
rcrl
mov
sub
fsubl
push
mov
or
mov
scas
hlt
mov
mov
mov
add
popa
test
lret
out
or
test
jns
jae
jo
fisubrl
insl
cmp
arpl
stc
jb
jbe
pop
out
jge
roll
and
add
adc
sbb
sub
aaa
into
push
cltd
test
mov
ds
out
imul
sbb
call
push
jge
dec
mov
testb
pushf
xchg
nop
mov
adc
mov
loop
mov
mov
pop
or
sbb
sbb
das
lret
mov
sub
popa
jg
xchg
pop
aas
inc
mov
sti
xlat
xor
jecxz
jg
sahf
cmp
or
lea
dec
hlt
add
aas
or
lret
data16
jns
mov
stos
jmp
loopne
and
fstpl
pushf
mov
ljmp
fcmovne
outsl
and
inc
mov
inc
push
hlt
addr16
push
pop
mov
inc
insl
cmp
lcall
dec
add
dec
add
ficomps
js
fisubl
enter
pop
xor
jnp
clc
outsb
loope
inc
out
xor
pop
mov
dec
xchg
lret
jbe
mov
jo
push
xchg
rcrb
ja
jp
outsb
xchg
repz
rol
cmpsl
repz
sub
int
add
inc
add
mov
jne
add
loope
aas
xchg
arpl
insl
in
repz
mov
hlt
jo
out
and
ret
lds
dec
ja
sub
loope
inc
adc
dec
icebp
cmp
enter
cmp
dec
mov
loope
daa
xchg
adc
xchg
xlat
pop
lods
sub
stc
pop
repz
ds
ljmp
xchg
fldenv
aas
icebp
mov
dec
into
cmp
mov
pushw
xchg
dec
stc
test
int3
jnp
and
lcall
and
cmc
inc
xchg
sub
sbbl
adc
jns
lcall
hlt
je
adc
mov
push
inc
in
mov
lret
sbb
push
in
stc
pop
jl
jne
inc
push
lods
xor
shrl
mov
and
jno
cmp
shrl
pop
cmc
sub
cltd
pop
lea
leave
ret
loopne
cmc
stos
sub
sbb
clc
sbb
push
pop
adc
mov
inc
outsb
lods
rorb
push
dec
or
lds
out
and
sahf
push
dec
hlt
dec
pop
outsb
call
and
ficomps
sub
lods
mov
mov
jo
mov
pop
ljmp
stos
hlt
mov
shr
xchg
mov
lret
scas
inc
fdiv
popa
icebp
sub
sbb
repnz
sub
push
mov
jno
out
mov
inc
fistps
jo
pop
in
in
jnp
cmp
xchg
push
iret
out
imul
out
aam
inc
dec
iret
cmpsl
add
test
lret
stos
test
push
dec
loopne
cmpsb
jg
mov
repnz
mov
xorb
into
gs
mov
jo
and
or
adc
cs
mov
clc
int
jge
cmc
int3
jg
xor
out
inc
lret
test
fbstp
int3
lret
push
mov
xchg
xchg
inc
and
ds
dec
pop
xchg
pusha
lret
out
pop
pop
sub
jge
mov
imul
addr16
mov
adc
sbb
xchg
xor
jg
fwait
sub
in
loope
test
sbb
sub
jno
push
mov
dec
mov
lret
xlat
ret
inc
or
js
std
sbb
loopne
sarb
push
out
jecxz
jle
inc
les
loopne
test
mov
xchg
adc
pop
cld
or
stos
and
sbb
add
int3
jbe
mov
gs
push
and
mov
ja
push
stos
add
aaa
xchg
mov
cmpsl
dec
dec
adc
out
in
cmp
adc
ss
sub
test
and
xchg
push
xchg
shll
sub
dec
mov
lea
movd
test
and
push
pop
icebp
jae
xchg
outsb
xchg
and
aaa
inc
xor
loop
mov
lods
sub
scas
sbbl
add
addr16
ja
mov
jle
int3
lret
mov
pop
sahf
stc
iret
cmp
pop
lcall
sbb
add
push
adc
in
sbb
or
idivl
adc
or
cwtl
arpl
setne
dec
out
cmpsb
rol
lea
ret
xchg
add
imul
dec
pop
and
sbb
imul
dec
mov
sbb
lcall
cwtl
pop
mov
out
sbb
in
xchg
pusha
das
add
sub
fwait
cmp
movsl
and
jmp
aam
in
add
add
js
cmpsl
ds
cltd
mov
clc
mov
popf
pop
push
stos
sar
fsubrs
and
out
inc
jbe
out
into
in
aaa
testl
mov
jno
cmp
xchg
push
xor
inc
ljmp
call
cmpsb
sub
call
adc
pop
fstpl
adc
dec
movsb
in
hlt
xchg
rcrl
mov
call
pop
aam
add
jnp
mov
push
pop
sub
outsb
loope
sbb
add
out
pop
ret
jge
jge
loope
push
add
mov
jne
inc
sbb
add
mov
cmpsl
jle
popf
das
not
adc
or
mov
fists
test
sbb
mov
jg
jle
test
scas
mov
add
outsl
pop
adc
jl
sub
add
mov
add
shrb
movsb
and
clc
mov
jmp
shrl
scas
cli
xchg
loope
out
cmpsl
xchg
aas
cmc
mov
push
fnstenv
and
push
lods
push
or
pop
loope
mov
shrb
pop
sahf
jp
outsl
daa
imul
sbbl
mov
insb
add
push
data16
xchg
in
bound
sub
mov
push
call
cmp
stos
inc
and
xor
xor
cltd
push
in
or
jmp
ljmp
mov
inc
addr16
xor
add
fcompl
sbb
push
mov
cmp
pop
repnz
xor
enter
jmp
or
jmp
mov
jb
mov
inc
push
ljmp
jno
fistps
mov
cmpsl
pop
iret
shlb
ja
fimuls
int
add
repz
imul
sub
or
push
cltd
jge
mov
rclb
daa
push
xor
arpl
fidivl
test
bound
pop
mov
outsl
mov
mov
repnz
fwait
xor
push
lods
xor
inc
fdivr
push
xor
test
fs
dec
cltd
mov
lret
jp
sbb
int3
mov
in
and
push
repz
fildl
popf
or
stc
je
and
pop
lods
adcb
insl
jp
mov
rcrl
xlat
sub
into
gs
push
popf
add
es
push
lea
mov
js
sbb
lret
mov
aam
xor
test
sub
or
aad
xchg
pop
sti
xchg
rorb
inc
loope
mov
bound
xchg
xor
pop
arpl
pop
scas
loope
adc
cmp
sub
dec
adc
jg
jae
out
xor
rorl
xchg
sub
repz
jle
mov
and
into
gs
xor
and
lds
out
adc
xor
test
and
test
test
and
fidivs
inc
fdivl
pusha
int3
arpl
mov
sub
or
ret
pop
sbbl
js
mov
aam
cmc
call
cmp
loope
xor
into
gs
out
imul
or
cli
xchg
xor
jecxz
adc
pop
cmc
and
fsubrs
stc
sbbb
out
mov
sub
lods
inc
ds
inc
frstor
out
dec
push
cli
or
sub
xchg
sub
repnz
push
sti
cmp
sub
sub
ds
xchg
sub
out
sub
cmc
sbb
cmp
jmp
mov
dec
cmp
jmp
mov
and
mov
pop
xor
xor
push
ljmp
inc
add
inc
ss
inc
xchg
pop
sbbl
mov
pop
call
or
addl
push
lods
xchg
push
cmpsl
xchg
pop
aad
xchg
cs
push
out
and
jo
inc
and
rcll
xchg
sub
ljmp
jb
shrl
xchg
shrl
mov
push
out
cmpl
dec
insb
xchg
mov
push
push
lret
bound
loope
int
mov
negl
xor
sahf
sub
into
vpunpcklbw
pop
add
pusha
sahf
pop
iret
mov
dec
jmp
ds
outsw
pushf
gs
sarb
call
push
movsb
cmp
fadd
mov
stc
dec
xor
jg
pop
negb
icebp
mov
lret
int
cli
ss
data16
aaa
into
pop
mov
stos
call
ds
outsb
das
push
ljmp
sub
sti
and
sub
and
leave
fnsave
or
pop
int
addb
test
cltd
inc
cs
pop
roll
add
fnsave
pop
mov
sub
gs
add
add
jo
mov
add
cmpsl
fstl
xor
inc
dec
dec
loop
xlat
inc
fiadds
adc
inc
pop
daa
mov
pop
lcall
inc
pop
or
rorb
fwait
mov
xchg
push
pop
outsl
push
pop
fsubrs
cltd
pop
lock
das
and
pop
push
sbbl
notb
js
pop
push
mov
stos
call
jb
pop
push
mov
or
cmp
xchg
popa
clc
shrl
negl
mov
test
shrb
xchg
jg
adc
inc
pop
pop
mov
aam
mov
lahf
dec
loop
sbb
dec
pop
cmp
fdivrl
iret
adc
or
inc
sbb
adc
xchg
jnp
sub
adc
xor
and
mov
pop
out
cli
xchg
cmp
lahf
ss
in
sub
out
icebp
cmp
and
push
ljmp
es
sbb
add
and
and
and
push
in
dec
in
mov
into
repnz
lock
aas
adc
inc
mov
gs
pop
pop
repnz
cltd
xor
inc
mov
js
lods
pop
lods
inc
lea
lods
cwtl
test
addr16
jmp
jns
sub
jbe
inc
push
mov
sub
mov
jmp
cmc
out
daa
push
jae
cmp
push
jp
mov
mov
fsubrp
inc
ficompl
inc
push
mov
add
fists
mov
stos
jno
sub
mov
dec
loop
push
in
sbb
in
outsl
add
xor
cmp
and
sub
sub
pop
lock
inc
xor
ja
dec
in
lods
lcall
or
and
mov
call
aaa
enter
out
xchg
mov
dec
out
das
cmpsb
cmp
push
ret
repz
adc
dec
ljmp
or
aad
aaa
adc
repz
xchg
jns
or
iret
mov
shrl
cltd
shrl
adc
xchg
in
orl
or
movsb
dec
dec
inc
fidivrl
fnsave
fnsave
jbe
push
inc
arpl
jbe
cmp
sti
scas
mov
fisubs
das
push
dec
sub
popf
mov
sub
mull
fbstp
cmc
jge
and
cmp
mov
shrl
or
lods
aas
loope
mov
pop
in
lea
fnstenv
mov
shl
xchg
mov
shrl
aad
jl
pop
call
mov
icebp
mov
xor
jg
ss
shr
xor
mov
fwait
xchg
lret
pop
je
cmc
stc
and
imul
jno
lock
dec
pop
ret
jb
mov
jecxz
mov
ss
mov
and
push
addl
cltd
xor
jno
hlt
xor
and
inc
andl
cltd
aad
movl
and
push
push
push
add
inc
jbe
in
popa
popf
mov
enter
mov
jns
sbb
dec
push
add
sahf
pop
jne
mov
or
lock
add
fbstp
pop
je
mov
dec
in
adc
mov
xor
rcrl
cwtl
dec
in
mov
int
fldenv
add
pusha
and
hlt
mov
push
call
push
mov
fidivs
xor
xchg
cld
pop
pop
mov
sub
sarb
inc
inc
filds
inc
in
andl
sbb
js
stc
nop
fwait
xor
orb
mov
sbb
ds
mov
repz
or
lods
push
iret
or
call
jmp
repnz
into
aas
pop
enter
push
or
jno
xchg
lea
imul
in
movsl
cmp
enter
fmuls
loop
in
fcmovnb
test
fcomi
sarl
out
inc
fsubr
test
and
stos
cltd
adc
pop
in
xlat
mov
sti
cmp
sub
in
add
insb
xchg
or
push
fs
cmp
lret
addr16
sub
enter
flds
mov
outsb
fcoml
xchg
sub
jecxz
in
ret
mov
int
std
loopne
pop
hlt
pop
movsb
pop
adc
jg
cmpl
jo
mov
fcoml
rolb
imul
daa
xor
mov
testb
popf
mov
into
jb
aaa
into
sbb
push
inc
daa
mov
mov
icebp
push
in
and
adc
lcall
fcompl
sbb
aam
jle
or
inc
int
and
test
int3
inc
popf
jmp
cmpsb
jns
sbb
push
int3
and
mov
out
pop
xchg
sub
rep
xor
xor
stc
dec
in
jns
in
mov
pop
add
mov
pushl
stos
adc
call
jp
sbb
loope
stos
test
add
cld
and
mov
xlat
xchg
inc
lret
jp
out
xor
leave
or
push
loope
je
add
cmp
inc
mov
cmp
popa
pop
sarl
mov
xor
cmp
cmp
fisubrl
pop
adc
pop
movsl
scas
popa
or
jmp
sahf
xchg
jl
dec
or
sti
jge
inc
inc
mov
mov
mov
push
or
int
inc
test
test
sbbl
adc
inc
sti
mov
sbb
cltd
xchg
push
pop
jb
and
andb
std
xor
data16
inc
dec
out
dec
popa
add
ss
inc
xchg
ja
test
lods
pusha
sub
dec
popf
adcb
out
jp
out
repz
loop
rorl
or
ds
jp
daa
push
adc
sub
sti
enter
dec
mov
in
fwait
popa
test
jmp
mov
cmp
jle
rorb
daa
sbb
scas
push
add
pop
clc
and
lret
cld
xor
icebp
cmc
push
lds
push
or
and
cmc
daa
out
or
sub
loop
dec
loopne
sub
je
mov
mulb
cmp
pop
ret
jle
das
dec
mov
cmc
xor
push
aam
pop
out
outsl
jo
in
push
daa
out
pop
push
sub
push
icebp
sbb
arpl
sbb
mov
push
push
lods
mov
pop
jp
push
icebp
mov
hlt
pop
cld
int3
xor
cmpl
clc
and
cli
les
iret
inc
stos
sbb
lea
popa
mov
lods
fcoml
in
xchg
sub
iret
popa
test
cmp
jno
ret
jne
mov
add
lahf
je
loope
pop
jb
outsl
test
dec
lds
mov
nop
nop
js
and
add
xchg
test
rorl
or
arpl
or
rcrb
in
fwait
pop
popa
test
mov
jo
adc
pop
daa
arpl
inc
mov
inc
cmpsb
nop
movsl
push
or
ja
in
stos
inc
movsl
dec
ret
sti
push
mov
testb
js
outsb
jbe
adc
lea
fidivl
push
out
push
jb
in
dec
inc
shlb
pop
inc
or
inc
dec
in
push
bound
or
push
pusha
out
sbb
pop
push
dec
ja
xor
lods
inc
iret
push
adc
push
iret
xchg
je
push
cmp
outsb
int
xor
and
and
push
out
push
fdivl
jle
outsb
subl
xor
fimuls
scas
adc
cld
mov
sub
sbb
cmp
cmpsl
test
into
cltd
xchg
aad
out
add
dec
in
mov
incb
xor
or
xchg
pop
sbb
jle
roll
lods
rclb
adc
ficoms
ss
mov
inc
ret
cmp
pushf
mov
invlpg
pop
movb
sub
movsb
push
rclb
and
shll
xor
mov
out
xchg
scas
or
jae
jg
or
pop
cmpsl
ds
add
je
insl
xor
or
dec
sbb
rolb
xchg
xchg
call
lods
test
inc
xchg
mov
xchg
or
push
int
xchg
pop
stos
push
mov
imul
jo
dec
sub
pop
add
cmp
cmp
sbb
dec
mov
daa
imul
mov
xchg
aam
les
sarb
out
dec
les
cmp
insb
sub
push
test
ja
ja
mov
scas
inc
pop
les
xchg
sub
jnp
les
sub
scas
pop
cmp
rorb
dec
xchg
fcoml
inc
xchg
repnz
cmp
push
mov
add
aad
dec
cmp
pop
dec
daa
mov
dec
cltd
xchg
lea
pop
adc
pop
jns
add
jnp
sub
stc
inc
call
jnp
xchg
sub
add
sbb
divl
shrl
mov
repnz
pop
rcl
mov
pop
rcr
out
mov
add
lea
add
push
add
inc
aaa
es
cmpsl
test
cmp
jbe
outsl
dec
lcall
je
insl
cltd
insb
xchg
pushf
jg
dec
jno
push
sahf
mov
mov
inc
ss
int3
xchg
fs
xor
adc
push
inc
popa
push
shlb
xchg
mov
call
iret
jge
xlat
les
in
mov
jle
or
dec
scas
popf
lcall
jbe
adc
into
xchg
xchg
fldl2t
jnp
into
mov
pop
mov
stos
or
loope
cli
repnz
sbb
fcmovbe
pavgw
roll
int
stc
and
xor
shrb
addr16
int
mov
lret
popf
xor
mov
leave
adc
xchg
sub
mov
aam
or
movsl
test
icebp
jo
fnsave
push
cmp
lods
insl
cmpsb
jg
push
and
fdivrl
lahf
add
sbb
cltd
xor
movd
out
insb
and
imul
stc
fwait
outsb
into
push
dec
jmp
cmpsl
imul
mov
in
jle
pop
add
fisttpl
out
es
jne
shll
xchg
in
adc
sbb
cli
pop
in
test
mov
fidivrs
or
dec
cmp
sub
lock
cmp
in
pop
ret
iret
push
aam
sub
int
mov
or
lcall
push
int
lods
mov
jmp
jmp
leave
mov
mov
inc
repnz
mov
or
rcl
lea
fbld
fucom
mov
cmp
push
lea
pushf
mov
insb
iret
xchg
mov
das
push
sub
or
repnz
xchg
push
push
jmp
out
mov
inc
and
push
int3
in
xchg
sub
int
int3
and
mov
out
adc
add
cli
xchg
roll
add
sbb
aam
add
sbb
adc
or
test
lds
mov
ret
lahf
jb
daa
f2xm1
xchg
je
push
repz
cltd
aas
xor
mov
mov
rdseed
cwtl
xor
call
jmp
faddp
repz
sarl
repnz
test
fnsave
je
movsl
lret
aad
dec
sahf
mov
ljmp
cwtl
cld
out
lret
dec
stos
movsb
lret
inc
sti
cli
test
mov
push
inc
call
cltd
xchg
pop
ret
mov
faddp
push
fdivrl
movl
das
in
int
inc
fiadds
mov
fdivl
int3
xor
jge
and
xchg
stos
scas
and
add
outsb
mov
test
fisttpll
nop
addl
pop
and
jl
aaa
pushf
add
das
je
pop
inc
jle
bound
sahf
test
es
xchg
fistpll
or
cld
dec
and
mov
mov
outsl
mov
adc
insl
inc
xor
xor
rolb
pusha
fcompl
lret
or
sbbb
fbld
sbb
push
in
adc
dec
mov
mov
lock
cmp
in
test
mov
ljmp
loope
enter
push
add
imul
and
mov
fcoml
mov
pop
jmp
test
mov
xor
addr16
add
mov
sahf
xchg
sbb
xchg
int
sub
imul
daa
outsl
daa
lock
daa
call
daa
mov
or
dec
xchg
hlt
push
xchg
push
mov
pop
repz
pop
cmovnp
pop
xchg
push
xchg
xchg
insb
sub
cmp
xor
fldt
xchg
out
je
push
icebp
xor
fsub
ja
mov
mov
xchg
and
jae
push
mov
push
ljmp
dec
mov
push
push
ljmp
xor
or
and
dec
xor
decb
sbb
mov
xor
mov
popf
loopne
and
jae
jo
mov
inc
sarl
lds
shll
xor
vmread
ljmp
xor
addb
cs
push
pop
shlb
jno,pn
sub
pop
xor
jge
jge
stos
aas
pop
mov
test
orb
dec
jo
cmp
or
icebp
insb
dec
push
mov
cmp
je
aad
pop
xchg
inc
mov
imul
mov
inc
mov
and
in
and
jge
adc
fs
xor
jmp
sgdtl
loope
scas
mov
cld
and
rorb
icebp
mov
repnz
adc
cmp
and
jne
push
shrl
or
testl
jecxz
call
test
pop
or
dec
out
lahf
mov
or
cmp
iret
pop
insl
xchg
les
ljmp
inc
lret
cmpb
sub
sub
in
insl
or
cli
adcb
mov
xchg
pop
cmpsb
sbb
push
sbb
pushf
aas
int
cmpl
xor
sbb
ficomps
aaa
mov
cli
in
sub
int
not
cld
add
mov
sbb
loop
addr16
test
ljmp
subl
and
or
jbe
sbb
scas
insl
add
sbb
and
sbb
jg
cmp
cmp
add
xor
out
cmp
aad
aaa
mov
add
in
xlat
dec
jmp
and
ffree
stos
inc
enter
gs
popf
mov
lock
pop
out
lods
cs
pushaw
sbb
dec
mov
ret
pushf
or
adc
cmpsl
inc
xor
sbb
outsl
fildl
and
leave
cmpsl
dec
mov
jnp
insl
mov
outsb
or
test
jnp
jge
cmp
idivl
xlat
insl
add
pusha
jle
dec
push
into
push
data16
pop
mov
jle
jp
cmpsl
lahf
jg
sbb
insl
mov
nop
testb
pusha
negl
orl
mov
imul
test
cli
imul
jb
aam
jno
xor
pop
lahf
pop
mov
push
push
addl
enter
arpl
rorl
inc
sbb
dec
ljmp
out
or
aas
in
movsb
mov
push
add
push
shr
sub
sub
sbb
push
cmpsl
xchg
adc
roll
cwtl
pop
shrl
xchg
pop
call
push
fidivrs
loop
jno
or
cpuid
loopne
sub
icebp
dec
int3
jg
dec
dec
loopne
jbe
pop
lods
data16
mov
push
xchg
xchg
jle
pop
call
arpl
dec
lods
gs
lea
jnp
jae
popf
dec
adc
stos
push
out
mov
inc
data16
push
sbb
mov
fs
and
daa
in
mov
in
or
shll
inc
rolb
mul
aaa
shld
and
movsb
test
and
jmp
mov
fcoms
shlb
mov
jno
inc
into
adc
jns
xchg
cs
sbb
jo
xchg
sbb
and
mov
stos
imul
lds
xor
cmp
jecxz
xor
sbb
jne
mov
out
mov
pop
or
mov
arpl
cmp
jae
lea
cs
push
push
mov
es
pusha
mov
pop
xchg
and
push
inc
inc
add
popa
inc
mov
pop
xor
or
xchg
xchg
add
inc
mov
dec
rcll
mov
ljmp
fldenv
mov
testb
pop
adc
adc
std
push
sar
add
mov
jo
sub
and
fnstcw
addb
pusha
push
aam
lcall
pusha
add
cltd
xchg
iret
mov
rcl
xchg
cwtl
das
and
or
mov
out
cmp
and
xor
jle
adc
dec
mov
pop
je
push
inc
dec
pop
xchg
mov
pop
xchg
jae
pop
xchg
sub
sbb
xchg
push
pushf
sbb
mov
out
lods
pop
out
and
lds
mov
jnp
mov
adc
xchg
mov
dec
jmp
pop
leave
jno
dec
sti
xchg
push
fistps
shlb
push
leave
sub
lock
cmpl
sub
add
xchg
sub
and
xor
fidivrl
ds
fnsave
outsl
fstpt
xor
jl
insl
push
orb
dec
addr16
cwtl
cmp
mov
ljmp
movsl
insb
test
fistpl
rorb
mov
or
mov
ljmp
loopne
test
imul
dec
adc
pop
fs
sbbl
jl
ss
pop
out
add
gs
push
cmpsb
cs
fidivl
test
test
hlt
ret
pop
movb
mov
sti
test
inc
cmc
mov
arpl
out
call
in
das
fidivl
fildll
mov
jp
fiadds
js
int3
jg
int
movsb
pop
dec
out
sbb
icebp
inc
scas
xchg
push
cmpsb
repz
test
in
les
loope
jmp
stc
and
xchg
lea
adc
loopne
cmp
jbe
and
lods
jne
and
and
mov
push
shlb
inc
mov
cmc
cmpsb
push
xchg
add
xchg
jge
sub
mov
fistpll
aaa
shr
stc
sbb
push
scas
subb
cmp
pop
cmc
nop
cmpb
cld
in
jecxz
mov
ja
faddl
jle
rorl
mov
stc
xor
repz
ror
into
ds
lds
in
mov
inc
add
daa
mov
aad
sub
into
rorl
inc
jle
fs
int3
sub
lcallw
mov
cmc
insb
xchg
ret
mov
jmp
shrb
pop
nop
fldenv
cmc
or
mov
test
or
add
and
popf
xorb
push
test
jbe
lds
cs
inc
sarb
adc
dec
in
sub
push
icebp
das
push
mov
loop
aas
adc
xor
jmp
jb
push
aad
push
add
test
pusha
cmc
leave
cmp
cmp
jnp
movsb
jl
repnz
rorl
cwtl
jbe
test
cmp
loope
sti
fucomp
fcoml
mov
mov
mov
aam
popl
sub
filds
test
pop
scas
pop
dec
jnp
jg
inc
mov
test
push
cmp
xchg
xchg
ljmp
jl
push
sbb
subb
push
add
xor
jmp
or
and
out
testb
inc
inc
mov
mov
fwait
inc
jp
xor
dec
mov
addb
push
ja
push
mov
repz
je
cmpsb
add
mov
sarl
and
jno
inc
imul
xor
mov
xchg
xor
mov
cmp
xchg
mov
clc
hlt
lcall
or
sti
mov
std
xor
and
notl
inc
mov
jg
fdivp
cwtl
das
es
push
sahf
int3
inc
jmp
std
mov
or
leave
scas
daa
push
sti
xchg
iret
push
int
sbb
filds
push
inc
test
mov
outsl
ror
decl
add
mov
into
hlt
leave
cli
xchg
or
jg
mov
mov
rorl
loopne
xchg
dec
inc
lods
dec
mov
push
clc
das
je
jnp
mov
faddl
jmp
std
lea
ss
or
data16
cmpsb
imul
into
movsl
fnstsw
sbbl
iret
popf
gs
mov
orb
mov
pop
shll
push
xchg
mov
inc
stc
adc
pop
aas
sbb
and
add
push
xchg
addr16
cwtl
popa
mov
xor
fs
mov
mov
inc
cltd
pop
iret
push
push
add
inc
mov
lret
or
cmp
push
xor
rcll
xor
in
fistpl
jge
jb
sysenter
repnz
out
mov
push
add
add
out
fidivs
les
rorb
or
in
sbb
out
repz
xchg
xchg
js
std
int3
cmp
jbe
insl
dec
mov
mov
insb
xchg
push
into
push
aad
inc
pop
rcrb
enter
fmull
or
xchg
mov
aaa
or
mov
pop
pop
xchg
aad
jno
mov
data16
gs
test
push
sbb
imul
mov
push
popf
xor
addl
dec
mov
cmp
jle
popa
lods
jg
sub
xor
scas
xchg
push
mov
or
jae
std
sub
aaa
daa
jmp
out
adc
mov
add
jnp
lods
pusha
xchg
ss
xchg
jl
out
es
es
lock
push
jecxz
popa
mov
pop
xchg
lea
imull
ret
xor
mov
and
and
jae
hlt
dec
cwtl
inc
fmull
inc
or
mov
pop
pop
and
test
mov
dec
repz
mov
or
mov
xchg
and
sbb
xchg
stos
cmpsl
fldl
sti
dec
mov
lods
inc
inc
in
rol
xchg
xchg
arpl
push
cli
aam
dec
mov
fsubs
jl
fisttpl
daa
mov
fistps
iret
cmp
add
or
xor
fbstp
and
dec
jmp
mov
lds
sub
xchg
lret
outsl
jb
imul
push
add
lods
lods
pop
aaa
repz
sbb
lret
fdiv
xor
xchg
repnz
and
lods
movsl
lret
call
cmp
jns
cmp
leave
pusha
mov
or
loop
sub
cmp
xchg
bound
jl
lods
push
xor
jb
or
pop
jae
pop
jecxz,pt
jo
or
mov
push
jmp
push
filds
imul
jmp
repz
scas
scas
jno
int
xchg
inc
fwait
xchg
mov
sbb
movsl
dec
out
sbb
dec
mov
push
divb
ja
pop
jo
and
clc
jg
das
pop
sbb
stc
pushf
pop
testl
clc
jmp
mov
cmpsb
jne
adc
les
add
hlt
adc
lret
xor
mov
jmp
xor
out
arpl
and
jbe
lods
pop
lods
and
dec
int
test
shll
cmpl
cltd
add
clc
sbb
and
fwait
test
push
aaa
les
loope
sub
negl
data16
mov
clc
pop
fmull
sub
add
or
xor
xchg
jge
in
adc
push
enter
inc
mov
sbb
rcrb
and
imul
popf
pusha
mov
mov
pushf
jo
lea
js
xchg
cwtl
subl
pop
aas
jns
lahf
pop
pop
xchg
xchg
addr16
jb
jl
jns
mov
out
pop
mov
idivl
fistps
popl
adc
push
out
lret
inc
jp
jne
sbb
ds
sub
out
and
add
popw
xchg
and
push
inc
fcomps
mov
mov
push
sub
jl
inc
fisubs
fwait
xor
andl
xor
sbb
xchg
outsb
mov
fprem1
mov
jl
push
scas
sub
stos
pop
iret
fnsave
loope
xor
add
cmpsl
pop
mov
addl
hlt
jnp
mov
inc
int
sar
aas
cwtl
pop
dec
fists
mov
std
jecxz
push
movsl
jg
sbbb
mov
lahf
mov
sbb
sub
rorl
das
adc
mov
andb
lahf
shrb
in
xchg
and
inc
push
popf
js
adcb
xchg
sub
sti
mov
sub
dec
andb
xchg
mov
into
gs
mov
sub
push
cs
out
inc
cmc
call
fs
push
fnsave
stos
inc
rclb
leave
and
es
push
dec
cmpsl
cmpl
cmp
mov
mov
icebp
leave
push
sbb
iret
and
out
xchg
mov
in
ret
mov
hlt
aad
pop
dec
pop
enter
dec
nop
push
fcmovb
add
dec
add
popf
cmc
push
inc
jecxz
lds
sub
dec
pop
push
in
aas
in
jo
faddl
sahf
iret
fldt
and
xchg
mov
ljmp
mov
lods
mov
stc
pop
sub
loop
cmp
or
mov
or
mov
mov
ljmp
scas
dec
mov
cs
or
mov
test
lret
adcb
jmp
popf
int3
hlt
mov
push
mov
bound
cmpsl
fiaddl
inc
jmp
inc
cmpsl
mov
je
in
jo
outsb
mov
movsb
adc
sbb
sbb
push
mov
pusha
mov
movsl
xchg
mov
xchg
lea
ja
lret
push
or
add
xchg
pushf
aam
cmp
push
addb
sti
call
das
add
lea
int
in
addr16
enter
and
jb
pushf
cmp
call
sbb
mov
add
gs
movsl
mov
iret
pop
xchg
mov
jo
xchg
rcll
mov
jge
mov
push
call
out
hlt
xor
aad
inc
adc
cmp
negl
ds
cltd
mov
or
mov
mov
mov
pop
jmp
push
push
pop
xor
xchg
test
sbb
out
dec
inc
test
ss
cmp
aas
and
cmp
sti
push
std
dec
mov
pop
jns
xlat
jmp
dec
add
add
pushf
sbb
sbb
and
in
push
xor
xchg
dec
pop
jbe
xchg
sub
xchg
movsl
mov
icebp
es
fiaddl
mov
fmulp
clc
clc
rcll
imul
inc
jge
loope
mov
into
jbe
dec
mov
or
loopne
adc
mov
stos
es
pop
xchg
inc
xor
mov
fstpl
andl
ljmp
sub
sub
movsb
shlb
sbb
dec
ds
xchg
pop
mov
xor
lahf
mov
cmp
cltd
xor
mulb
mov
sub
lea
rol
pop
ret
pusha
fbstp
fs
push
repz
call
mov
sub
popf
test
lods
outsl
push
push
mov
out
and
pop
lock
mov
ss
push
sub
inc
in
call
fdivrs
push
push
jnp
insb
or
pop
jle
stos
inc
andb
mov
pop
adc
jle
add
xchg
pop
xlat
outsb
xchg
push
cmp
jg
push
lods
andl
int
xchg
or
mov
popf
dec
loop
pop
cmp
nop
ljmp
xor
pop
mov
test
add
in
adc
testb
push
dec
in
push
daa
inc
sbb
mov
cmp
mov
xchg
dec
imulb
incb
cmc
cli
pop
lret
pusha
and
lret
xchg
mov
pushf
ljmp
daa
insb
mov
mov
leave
fsubs
inc
dec
daa
mov
mov
enter
push
sbb
mov
inc
sub
add
push
or
aad
xlat
jle
dec
enter
popa
call
mov
mov
mov
test
es
pushf
mov
xchg
enter
adc
cmp
cmp
ljmp
adc
inc
sbb
pop
lcall
xchg
mov
pop
dec
sarb
mov
test
insl
repz
negb
mov
rcl
jnp
pop
dec
adc
cmp
xlat
jl
mov
sbb
out
lahf
inc
les
pop
add
dec
adc
cmpsb
cmp
dec
cmp
jnp
fwait
call
fwait
push
insl
sbb
ret
pop
adcl
adc
iret
xchg
das
xchg
mov
mov
or
jo
mov
jmp
fwait
aas
fcompl
lods
add
inc
pop
mov
scas
sub
sbb
xchg
cmp
aam
or
push
cli
cmp
jne
xor
mov
ficomps
adc
add
sti
mov
scas
negb
pop
sbb
adc
je
and
push
xor
aas
mov
sahf
push
sub
test
xchg
test
roll
dec
mov
rorb
lahf
inc
cmpsb
rclb
loopne
mov
dec
pushf
mov
das
mov
xlat
pop
add
mov
mov
sarl
sbb
and
mov
mov
aam
test
ficomps
shll
movsl
pushf
inc
stos
cmpsl
mov
mov
insb
pop
push
xchg
gs
stos
cltd
inc
sbb
or
iret
inc
xor
sbb
mov
or
aam
mov
push
push
mov
mov
mov
stos
jg
jg
and
lahf
dec
aad
mov
mov
mov
dec
movsl
xor
adc
jae
push
push
insb
inc
bndldx
mov
adc
scas
ja,pn
in
imul
cs
je
repnz
leave
mov
or
mov
cmp
and
scas
je
jno
cmp
or
dec
or
and
jmp
mov
movsl
sub
bound
leave
mov
lds
adc
imul
jno
cmpsb
push
or
mov
or
leave
mov
push
aam
sub
push
cmc
rolb
mov
ret
xchg
shll
movsb
push
lret
jbe
rorb
push
sbb
insl
call
outsb
aaa
sbb
or
stos
sub
ret
in
sbb
cmc
ja
imul
ds
dec
out
sub
or
push
daa
mov
and
xchg
sub
adc
jp
add
ret
jne
and
rcll
push
push
add
dec
cmpsb
xor
scas
pop
stc
mov
out
cmp
and
jmp
out
jns
xor
cmpsl
pop
int3
mov
mov
pop
stc
orl
cld
fimuls
jnp
fidivrl
data16
imul
roll
xchg
pop
and
push
dec
call
pop
lea
je
fdivrl
xor
ja
fmul
mov
mov
jg
or
leave
push
loop
and
cmp
xor
dec
or
xor
xchg
push
and
pop
call
mov
push
mov
stos
inc
or
xor
lahf
pop
or
adc
xor
fstpl
push
push
jnp
dec
popl
add
sbb
pop
pop
sti
mov
jmp
idiv
pop
int
fstpt
adc
dec
or
ja
xchg
inc
scas
daa
jae
mov
and
dec
mov
lods
popl
mov
xor
xchg
inc
sbb
inc
scas
daa
stc
jb
xor
call
mov
shlb
mov
ret
sbb
jbe
in
inc
mov
jbe
mov
imul
fdivl
negb
dec
push
jl
add
push
insl
test
mov
sbb
in
pop
dec
lea
out
jbe
jecxz
push
adcl
adc
fidivrl
push
iret
movsl
sub
xchg
int3
in
mov
push
push
notl
inc
pop
flds
fildl
jo
jl
ja
push
das
push
jmp
fcoms
xor
fwait
mov
push
std
clc
fs
sti
test
mov
je
fsubs
mov
jb
push
jns
push
sti
cs
icebp
pop
repz
jne
pop
mov
xchg
cmp
push
std
cld
popa
push
cld
scas
lock
or
pop
jne
inc
cmpsl
into
xchg
sub
inc
ja
insl
ss
std
jmp
out
adc
inc
dec
adc
aas
pop
add
xchg
nop
cmp
mov
jbe
push
divb
or
stos
pusha
jno
pop
mov
psrld
inc
mov
mov
data16
call
pushf
aas
cs
fnstcw
orb
mov
dec
xor
jg
es
pop
insb
sub
mov
and
adc
or
gs
mov
jno
sbbb
movsl
daa
test
das
sub
sbb
push
cmp
cltd
inc
popf
dec
rorl
insl
adc
divl
pop
mov
pop
pop
or
dec
inc
sbb
inc
mov
xchg
cmp
jmp
repz
insb
and
ss
cmp
sbbl
inc
ds
repz
add
scas
jmp
ds
mov
push
mov
xchg
inc
or
lea
cmp
and
ret
out
push
fnstsw
neg
jns
pop
pop
cli
adc
add
mov
dec
or
stos
leave
mov
rcr
pop
pop
lcall
inc
push
add
mov
or
lods
icebp
movsb
ss
mov
in
insl
faddl
inc
push
or
and
iret
mov
cmpsl
mov
sub
scas
lods
in
outsb
cmpsb
mov
ja
fnsave
pop
pop
push
xchg
lods
mov
rcll
pop
rorb
push
jge
pop
cmpsb
pop
cli
push
xchg
rorb
lods
sub
xchg
int
push
ja
and
sarl
xor
movsl
add
sub
push
aam
push
icebp
xor
fnstcw
fs
and
jb
or
add
aam
mov
shrl
ss
push
sub
imul
sub
or
pop
push
idivl
scas
xchg
cmp
call
mov
fmuls
and
pusha
imul
jbe
orl
sub
cmp
mov
xchg
lods
cmpsb
adc
outsl
dec
mov
jp
mov
cld
pop
clc
cmp
mov
jecxz
loope
inc
repz
add
insb
add
pop
xchg
stos
jl
pusha
lret
sti
loope
clc
adc
jb
jb
popa
out
and
or
push
ror
pop
mov
and
jmp
push
inc
adc
in
mov
or
loopne
lock
dec
inc
adc
lcall
movsb
inc
pop
aas
mov
cmpsb
cmp
popf
jbe
cmp
into
mov
movsb
push
push
lret
mov
call
mov
xor
xchg
sti
scas
xor
mov
sbb
out
std
out
orb
push
cld
data16
aam
jbe
cmp
mov
inc
or
fistpll
mov
test
mov
addl
xchg
inc
pop
mov
call
sub
mov
jp
push
out
outsl
das
cmp
cmc
push
callw
movsb
sub
outsl
pop
add
add
int
jae
pop
repnz
insb
repnz
inc
fmull
movsb
in
gs
jmp
and
mov
inc
push
xchg
movsl
ss
dec
test
mov
jl
cmp
adc
push
push
jg
loope
jnp
mov
push
fdivrs
inc
adc
mov
lcall
ja
orb
mov
jnp
into
xchg
inc
mov
movsb
xchg
inc
dec
cltd
mov
xchg
xchg
or
test
mov
in
shrl
ret
xor
imul
arpl
cwtl
shll
add
and
test
add
arpl
dec
adc
xchg
pop
push
aad
jne
test
outsb
loope
pop
jmp
pop
push
sub
cmpb
sbb
fsubs
test
adc
xchg
and
mulb
scas
add
aas
iret
xchg
daa
sahf
cmp
inc
adc
xchg
in
sbb
add
popa
inc
jns
sbb
pop
testl
mov
jnp
loope
mov
icebp
arpl
scas
add
ret
adc
mov
push
mov
stos
mov
daa
mov
mov
das
sbb
sbb
xchg
gs
movsl
add
push
jmp
scas
sub
add
mov
push
cmp
call
arpl
pop
std
je
cmp
or
lcall
ds
dec
and
inc
xchg
pop
sahf
cmp
lods
cs
fstpt
repz
rorb
push
push
mov
movsl
lahf
cmp
movsb
xor
pop
mov
mov
inc
insb
inc
xlat
popf
negl
into
enter
cmp
mov
lods
scas
xor
push
xchg
inc
push
aam
dec
mov
and
mov
push
idiv
popl
imul
fs
jecxz
pushf
imul
adc
subb
repz
outsl
adc
add
gs
pop
add
jae
dec
loope
and
test
mov
stos
int
xor
out
push
add
ja
mov
test
pop
imul
adc
repz
notb
pop
pop
out
lea
xor
into
int3
xchg
mov
mov
clc
data16
aas
sahf
pop
addr16
in
cmpl
repz
pop
call
cmc
data16
mov
pop
cmp
adc
mov
sub
movsl
sub
mov
jmp
or
pusha
sub
dec
iret
sub
loope
std
pop
inc
cld
mov
cltd
hlt
pop
dec
out
rcll
out
imul
jne
xor
and
imul
je
pop
cmp
xchg
pop
xchg
pusha
ja
pop
std
fsubrl
pusha
xchg
add
adc
jae
fildll
test
pop
pushf
cmp
int3
inc
adc
ret
ds
out
and
cmp
and
nop
cmpsb
ret
fdivrs
mov
pop
icebp
inc
sbb
add
mov
scas
lds
add
dec
push
inc
pop
sbb
imul
loopne
fildl
rcrb
sub
lods
xchg
cmp
arpl
push
insb
dec
push
lahf
inc
add
mov
mov
data16
mov
mov
movsb
mov
js
inc
movd
lcall
les
adc
push
add
lret
mov
std
pop
cmp
inc
std
and
or
jmp
outsl
in
clc
sub
sub
xor
cli
ficoml
loop
aas
andb
mov
nop
inc
mov
movsb
push
add
outsb
into
mov
and
inc
setg
add
lcall
popa
sbb
fstpt
dec
nop
inc
sbb
jmp
inc
test
stos
xchg
sub
out
jo
call
js
dec
out
jne
push
enter
aam
daa
in
stc
pop
xor
push
adc
mov
mov
out
or
push
stc
sub
push
arpl
cltd
sub
rorb
in
std
push
fdivrs
and
jecxz
cmpl
or
pop
and
jle
loopne
movsl
jns
nop
cmp
clc
popa
pop
lcall
popf
shlb
push
cld
aam
inc
or
mov
popa
sbb
movsl
daa
push
aas
mov
lret
fidivl
jl
sbb
dec
ds
xchg
fistpll
adc
scas
fwait
push
movsb
sub
stos
dec
or
scas
xchg
sub
xor
fnstcw
sub
cmp
mov
lock
push
les
addb
inc
push
cltd
inc
rcll
cmp
fstpt
nop
cmp
fisubs
mov
mov
les
cli
je
into
inc
adcl
xchg
ret
mov
mov
fisttpll
push
cmp
movsl
jmp
jmp
ret
xlat
mov
xor
mov
dec
or
push
or
std
data16
mov
adc
int
ja
mov
mov
stos
mov
jb
mov
ljmp
shlb
hlt
and
or
fs
xchg
and
sub
lods
cltd
jmp
sbb
fistpll
mov
push
call
add
outsb
lahf
add
pop
leave
enter
adc
lahf
gs
push
pop
jge
clc
filds
cld
xor
sub
sub
pop
sbbl
jae
adc
mov
and
jecxz
pop
aaa
stc
popa
push
negb
sarl
bound
lods
xor
xor
sahf
pop
dec
jmp
push
jb
orl
mov
in
sub
cmp
xchg
sbb
add
mov
mov
pop
incb
fiaddl
sarl
xor
cmp
push
clc
es
cld
sub
or
xor
mov
in
xchg
mov
data16
sbb
and
push
xchg
insl
hlt
mov
mov
push
xlat
clc
mov
push
hlt
pop
pop
outsb
sbb
xchg
dec
filds
mov
stos
adc
cwtl
xchg
icebp
pop
ror
mov
mov
mov
adc
dec
movsb
xor
xor
xor
outsb
add
adc
xchg
xchg
cmp
xor
das
lods
hlt
mov
imul
and
mov
aam
mov
push
cli
sbb
jns
or
clc
negl
mov
mov
mov
divb
or
push
pop
mov
test
pop
push
pusha
stc
pop
cmp
es
mov
movsb
xor
idivl
orb
mov
shr
lcall
push
jmp
repnz
inc
xchg
mov
add
dec
adc
cmpsb
push
mov
sub
sub
inc
pop
push
pop
xchg
fnstsw
pop
sti
and
stos
sub
fstpt
mov
dec
aam
out
xchg
adc
aaa
pop
repz
sub
je
or
cmp
or
add
out
sub
pop
outsl
pop
out
mov
mov
adc
dec
rorl
movl
popa
mov
ret
xchg
aam
dec
fcomp
push
add
les
pusha
xchg
inc
mov
test
dec
dec
iret
adc
pop
xchg
xor
xor
sbb
mov
jp
push
into
mov
jg
cltd
cld
pop
jle
pop
cmp
cwtl
das
xchg
and
push
push
inc
mov
ja
stos
xor
push
push
mov
cmp
test
jne
pop
int3
and
jmp
xor
loop
xor
push
repz
bound
xor
mov
ljmpw
or
add
mov
inc
dec
loopne
add
mov
sahf
sbb
add
jmp
rclb
jo
inc
arpl
pop
cld
adc
in
adc
mov
and
rolb
insb
push
sti
push
fsubrp
jb
pop
rorb
mov
cli
or
pop
push
iret
daa
and
movl
push
cmpsl
daa
adc
cs
cmp
inc
lods
sub
gs
scas
sub
movsb
push
push
mov
mov
adc
test
enter
and
xchg
jno
pushf
mov
movsl
loope
xlat
loope
jmp
sub
xchg
pop
xor
movsl
sub
loop,pt
sbb
filds
push
push
mov
out
into
mov
pop
lret
fiaddl
fldcw
inc
test
or
fs
inc
adc
fistps
sarb
mov
test
xlat
roll
sbb
lods
inc
jnp
ss
pushf
mov
mov
dec
adc
xchg
cmp
sub
add
jecxz
mov
gs
movsl
sub
and
sub
std
sub
mov
mov
test
sahf
sbb
or
inc
push
add
and
arpl
mov
mov
stos
xchg
shlb
fs
jle
cld
mov
xchg
out
cmc
pop
mov
or
add
fiaddl
or
mov
jo
add
cld
mov
popf
inc
movsb
xchg
cmp
or
mov
pop
xor
mov
cmp
cmpsl
dec
adc
fcoml
movsb
cs
ror
adc
or
fsubrs
int
jp
std
gs
stos
orb
mov
cmpsl
push
scas
dec
adc
ficomps
ret
mov
stos
je
sbb
sarl
es
and
sti
data16
or
sti
add
or
xchg
pop
mov
jne
fwait
lret
stc
aas
mov
adc
filds
iret
push
ret
cmpsb
sbb
pop
outsb
mov
jmp
jge
out
push
imul
mov
sbbl
cli
loopew
in
jb
ljmp
cmp
mov
mov
test
fistpll
inc
or
jb
dec
or
push
or
adc
push
outsl
roll
and
push
lret
pop
dec
les
dec
orb
xchg
mov
xor
pop
add
ret
adc
pop
std
shrb
std
pop
sbb
rcll
xor
mov
dec
fistpll
xchg
sbb
imul
dec
sbb
jne
mov
mov
hlt
jbe
das
or
imul
xchg
lret
icebp
shrb
mov
jecxz
das
jecxz
jns
and
jno
pop
ss
inc
movsb
xchg
push
mov
push
mov
and
sahf
addb
aas
or
mov
sbb
fnstenv
cmp
sub
xchg
pop
jae
cmp
das
adc
xchg
sub
jne
out
mov
loopne
ret
repz
lret
into
in
lods
icebp
push
mov
out
sub
mov
and
pusha
loopne
rcrl
test
or
in
jno
pusha
iret
nop
mov
xor
cmc
clc
gs
ret
adc
pop
mov
mov
push
xor
inc
push
fs
popa
dec
je
xor
popf
fildl
push
pop
dec
adc
sub
xchg
jg
rorb
jno
hlt
cmp
adc
cmp
mov
push
rcrl
or
pop
jle
xlat
ljmp
ja
fldl
lret
xchg
imul
int
xchg
pusha
ret
xchg
xor
sti
pop
fisubrs
fisttpll
xlat
das
scas
xchg
mov
mov
mov
pop
addr16
xchg
pop
xorb
andl
fldpi
cmc
inc
adc
xchg
inc
inc
xchg
mov
mov
fistpll
imul
jns
mov
out
mov
cmp
sub
in
aas
pop
dec
sub
or
pusha
jb
into
scas
xor
cmc
dec
xchg
cmp
out
cmp
xor
push
push
stc
rolb
adc
sbb
add
daa
push
pop
mov
dec
mov
sbb
xor
gs
cmp
sub
cmp
iret
mov
sub
sarb
cmp
lods
clc
mulb
mov
mov
pop
cltd
xchg
aas
mov
mov
sbb
jne
enter
xor
je
repnz
or
orl
stos
iret
xchg
and
mov
xor
insb
sbb
dec
lcall
rorb
sbb
cs
in
xor
fidivl
pop
js
mov
std
data16
out
je
and
dec
cli
lods
and
inc
mov
xchg
out
cwtl
inc
or
test
sbb
push
add
daa
xor
fstpt
and
lahf
adc
dec
adc
fldl
shl
pusha
push
pop
jle
insb
inc
add
xor
add
je
loopne
sub
or
lds
sbb
jb
movsb
mov
inc
daa
stos
fadd
aaa
lcall
es
js
add
xor
adc
fisubs
add
and
mov
int
mov
pusha
enter
dec
and
insb
negl
mov
jnp
fnstsw
jg
adc
mov
jnp
repnz
cmp
sub
mov
mov
into
mov
test
fs
jnp
daa
mov
popa
mov
add
cwtl
cmp
pusha
je
repnz
pop
adc
outsb
out
dec
dec
loop
xchg
lahf
ss
add
sbb
cmp
and
lods
call
dec
pop
out
data16
lea
xchg
push
aad
push
mov
stos
mov
inc
and
stos
mov
flds
bound
fisttpl
sbb
xchg
cltd
popa
in
rol
jle
roll
xchg
mov
mov
sub
cmpsl
cmc
pop
xchg
and
mov
fldcw
add
sub
pop
gs
fldl
lcall
add
ss
mov
in
mov
js
mov
mov
mov
hlt
shl
lret
push
adc
addr16
xchg
xchg
adc
mov
es
push
xchg
mov
nop
adc
xor
pop
cmp
subb
sbb
movsb
daa
lahf
daa
outsl
icebp
lods
lret
negb
mov
test
xchg
xchg
sbb
xorl
xchg
stos
addr16
sarl
outsl
jmp
out
sbb
pop
mov
xchg
jnp,pn
cmp
xor
fs
cmp
push
add
pop
fwait
xor
push
push
inc
xor
xchg
xor
es
cld
pop
adcb
xor
int
out
mov
mov
or
rorb
sbb
dec
int
sub
aas
loop
in
movsl
pop
add
sti
orb
scas
loop
sbb
or
fiaddl
fisttpll
enter
orl
lea
or
pop
mov
mov
xchg
inc
icebp
push
xchg
inc
jmp
movsl
ss
ret
xor
xchg
aas
and
rclb
loop
xchg
test
lea
int3
mov
mov
sbb
les
aam
shrl
test
inc
sti
test
ss
mov
jno
int
in
mov
mov
xchg
adc
adc
out
inc
js
push
cli
jmp
jo
roll
cmpsb
jne
in
cmp
int
lret
lahf
mov
jbe
fs
pop
add
pop
cld
addr16
and
ss
inc
sets
xor
mov
dec
sub
mov
xor
mov
stos
lret
test
mov
addr16
filds
mov
mov
sahf
push
and
sub
scas
jmp
mov
pop
cld
pusha
xchg
and
in
mov
std
icebp
sti
arpl
jmp
push
sbb
js
addl
mov
movsb
xchg
inc
sub
xchg
xchg
xor
sbb
or
imul
xor
mov
adc
inc
or
mov
xchg
push
out
jo
lods
jae
inc
daa
dec
adc
cltd
cmpsb
daa
jl
callw
popa
lock
and
and
sbb
imul
sub
cld
jns
mov
call
adc
call
negl
in
aam
cmp
cmp
call
testb
push
adc
inc
in
push
lret
hlt
adc
push
stc
rolb
lret
or
jbe
cmp
enter
mov
jle
push
movsl
jl
add
les
movsl
adc
add
or
out
xchg
push
into
lea
jl
bound
mov
jns
test
roll
in
rcrl
fwait
and
mov
stos
mov
lods
into
xchg
or
ret
mov
inc
adc
orl
iret
jns
ds
imul
sbb
das
xor
aaa
add
movsb
cs
cmp
mov
scas
sub
mov
int3
movsl
leave
jae
ss
xchg
inc
and
es
inc
sub
movsl
pop
fistpll
rcrb
cmc
xor
aad
ljmp
fwait
xor
int
enter
lahf
insb
out
dec
mov
bnd
cli
pop
sub
inc
adc
xor
inc
out
ficompl
mov
pop
mov
into
aam
lods
sub
xor
sarb
pop
push
out
fists
in
je
and
and
or
lret
xor
je
jb
xchg
add
flds
fimull
repnz
sbb
inc
and
pop
xlat
jg
test
lret
mov
or
mov
cmpsb
jp
sub
inc
push
ljmp
ret
and
loope
fidivrl
lock
mov
mov
xchg
inc
push
enter
push
fnsave
dec
jae
add
lahf
cmp
pop
iret
mov
adc
push
mov
pop
scas
mov
je
test
mov
test
xchg
dec
jae
jle
xchg
lret
leave
add
ret
stc
jmp
stos
shr
jae
jle
lds
xchg
xchg
sbb
dec
shr
sbbb
call
std
pop
add
fwait
in
jne
sub
jl
lret
mov
out
filds
sub
inc
mov
adc
sbb
mov
mov
in
jbe
cmpsb
lret
dec
and
sti
inc
pop
icebp
pop
xchg
sarb
test
pop
and
mov
mov
mov
jmp
bound
stos
jo
cmpsl
daa
inc
addr16
xchg
inc
xchg
iret
mov
pushf
sbb
mov
loopne
mov
pop
test
xchg
es
out
aas
out
adc
lds
mov
mov
push
add
dec
cmpsl
sub
js
ss
rorl
fsubr
or
cmc
and
cmp
sbbb
pop
pop
xlat
into
nop
jmp
adc
mov
movsl
insl
jmp
or
stos
pop
insl
jp
addb
mov
dec
sub
adc
dec
dec
xchg
inc
loope
aad
ret
arpl
mov
xor
lret
mov
xchg
jle,pt
mov
insl
icebp
pop
add
push
mov
xlat
xchg
es
aad
fiadds
rcr
movsl
sub
mov
or
test
dec
adc
sti
sbb
cwtl
stos
jnp
rolb
icebp
xchg
sub
clc
aaa
into
sub
xchg
cmpsb
cmp
je
dec
adc
xor
dec
mov
jmp
mov
rcll
pop
notl
mov
mov
sbb
xchg
test
push
dec
or
rcr
jge
arpl
es
test
adc
stos
cs
and
cmp
mov
or
fyl2xp1
test
loope
imul
subl
add
xor
ficompl
mov
or
popf
cmpsl
gs
sub
xchg
cmp
cmp
stos
xor
mov
push
sarb
push
dec
outsl
mov
lahf
mov
inc
push
std
xor
cmc
out
daa
lret
sti
les
loope
faddl
data16
xchg
inc
jb
fs
popf
mov
inc
xor
not
sub
sbb
lret
dec
cmp
and
xchg
es
push
jecxz
fcompl
lret
push
cld
jne
popf
inc
lds
outsl
and
sbb
dec
cmp
lcall
pop
pop
jnp
xchg
mov
pop
cld
push
push
ljmp
lds
shll
cmp
jb
data16
lds
rcrb
mov
and
sub
icebp
lods
mov
clc
mov
adc
pop
adcl
fiaddl
inc
popa
clc
jb
push
cli
cwtl
addr16
rcrl
rorb
addr16
stos
int
mov
mov
aam
std
push
add
mov
xchg
inc
adc
loopne
pop
dec
addr16
xor
xchg
sbb
dec
xlat
test
in
aam
adc
jns
jle
jae
cmp
flds
mov
outsb
lahf
push
inc
adc
out
push
insb
xchg
inc
push
inc
fnsave
mov
xlat
push
sub
movsb
adc
add
nop
in
imul
aas
fidivs
lods
loope
cmp
imul
and
xchg
sub
pop
insl
add
sbb
addr16
pop
mulb
or
add
pop
insb
add
mov
xor
out
xchg
cmp
inc
pushf
mov
addr16
cmpsl
xchg
inc
hlt
ret
lds
lret
adc
je
addr16
js
paddq
cmp
vmovdqa
inc
or
cmp
xchg
push
mov
subb
add
mov
fs
movsl
xchg
lcall
rclb
inc
or
mov
mov
and
ss
mov
dec
push
sub
roll
ljmp
fsubs
loopne
inc
orb
mov
or
push
clc
adc
aad
xchg
stc
addl
clc
fadds
in
fwait
inc
push
xchg
jnp
mov
iret
nop
fwait
movsl
jg
into
inc
or
adc
pop
enter
cmp
inc
rolb
xor
adc
loop
or
repz
out
and
orb
gs
hlt
sbb
dec
add
negl
daa
cmp
enter
xor
ljmp
and
inc
push
shlb
cli
imull
mov
jg
mov
ljmp
fldl
test
jns
fcoms
mov
jnp
push
cmc
loope
daa
mov
mov
jp
inc
fwait
sbb
stc
test
cmp
push
cmpsl
adcb
aas
pop
lock
sahf
xor
les
push
jg
xchg
sub
mov
mov
push
clc
es
push
js
out
xchg
lcall
arpl
push
jmp
mov
jo
jo
dec
loopne
xchg
mov
pop
in
inc
pop
jl
sbb
cmp
popa
push
mov
jg
and
pop
push
filds
popf
adc
jbe
xor
leave
std
xchg
sti
addl
sbb
mov
aad
testl
daa
jle
pop
rcrl
jp
xor
mov
sub
and
jo
mov
testl
negl
xchg
mov
movsl
jecxz
push
jmp
xor
push
dec
loop
jg
add
bound
push
sub
dec
movsl
cmp
or
cmpl
pop
or
es
es
jns
inc
fdivl
lcall
test
cmp
sbb
ds
lock
stc
lahf
sub
mov
sub
mov
mov
imul
shrl
inc
pop
scas
ja
out
xchg
cltd
xor
movsb
jmp
ljmp
jno
outsl
dec
loopne
xchg
es
sub
pop
in
inc
push
jnp
sbb
aaa
lret
bound
mov
cmpb
pop
sahf
pcmpeqw
jbe
xor
xchg
cli
addb
sbb
dec
aam
clc
add
es
pop
rcrb
jns
xor
adc
inc
int3
mov
sub
pop
fidivl
mov
clc
movsb
or
imul
pop
xor
movsl
loop
push
ljmp
jno
in
push
dec
loop
push
nop
daa
inc
cmpsl
imul
xchg
cli
xchg
sub
int3
arpl
dec
movsl
cmp
or
cmpb
ret
pop
rcrb
mov
and
inc
call
xor
fs
sub
rcrb
pop
lock
clc
mov
push
ret
push
jge
xchg
sub
lahf
fdivl
ss
push
mov
push
jbe
out
xchg
cwtl
ss
xor
jmp
subl
mov
jb
outsb
aad
loopne
nop
nop
daa
ret
pop
jecxz
inc
adc
ss
arpl
mov
cmpl
je
ja
cs
stc
addb
sbb
stc
add
rcrb
mov
sahf
xor
inc
lret
cld
fs
sub
dec
mov
dec
jmp
or
push
ret
pop
scas
hlt
pop
icebp
mov
mov
cmpsb
loope
push
jmp
add
lds
mov
dec
jecxz
or
sub
cmpsb
push
fcomps
inc
xchg
stc
mov
sub
cmpsb
cmp
cmp
or
and
sub
jbe
inc
cwtl
push
mov
push
fs
sub
sbbb
cmp
icebp
insl
mulb
xadd
push
jnp
xchg
sub
iret
xor
cli
xchg
and
sbb
push
xchg
ss
das
push
movsl
pusha
call
sub
mov
jb
insb
aam
loope
mov
call
scas
inc
adc
sbb
data16
movsb
cmp
xchg
cmpl
jae
js
sub
mov
clc
jle
fldt
shlb
add
popf
and
icebp
out
jne
xor
inc
enter
arpl
jb
mov
dec
call
or
imul
pop
scas
repnz
repnz
scas
adc
xchg
add
xor
dec
in
or
add
pop
scas
inc
clc
mov
sub
cmpsl
jge,pt
in
xorl
lds
or
and
add
sub
dec
fs
jg
cmp
sbb
cmp
insb
hlt
mov
adc
inc
mov
adc
mov
data16
cli
xchg
and
sbb
or
cs
pop
out
jmp
subl
loop
mov
add
scas
inc
adc
push
stos
xor
arpl
cmp
test
xorl
jae
jns
sub
mov
idivl
lods
sbb
mov
into
stc
ljmp
aam
and
repnz
jae
movsl
push
jp
inc
mov
das
xchg
sbb
jae
mov
dec
out
cli
xchg
sahf
pop
aad
cmp
repz
adc
xchg
ljmp
xor
dec
in
or
add
pop
mov
mov
mov
sub
cmpsl
jnp,pt
in
test
push
or
and
add
sub
pop
mov
dec
gs
jle
cmp
sbb
cmp
push
mov
adc
fists
je
xor
xchg
pop
xchg
push
inc
sbb
or
pop
in
in
push
jg
les
rorl
add
imul
adc
push
test
lret
cld
test
xorb
or
mov
les
xchg
cmc
jnp
fsubrl
arpl
push
sbbb
mov
mov
adc
lds
das
xchg
sbb
je
mov
dec
in
sti
xchg
popf
add
sbb
mov
cmp
inc
stos
adc
xchg
std
das
cs
or
dec
dec
in
or
add
pop
mov
hlt
mov
es
iret
data16
cmpsl
jns,pt
out
test
lds
or
xchg
jecxz
pop
test
rcr
add
sub
data16
jge
cmp
sbb
aaa
pop
repnz
mov
mov
fstl
jne
xor
xchg
push
test
push
aas
sbb
or
pop
in
in
adc
ss
push
mov
add
mov
pcmpeqw
gs
enter
sub
mov
les
or
mov
ret
repz
int3
fs
std
cmp
push
sbbl
mov
mov
adc
mov
das
pop
fidivs
mov
dec
loop
cld
xchg
pushf
add
insb
xor
push
repz
test
push
out
xchg
sti
das
sub
jne
out
dec
in
pop
xchg
sub
lahf
imul
pop
mov
mov
mov
and
shlb
inc
cmpsl
ja,pt
out
xchg
cwtl
lds
or
jp
cmpsl
sub
fdivrs
add
sub
addr16
jl
cmp
sbb
xor
mov
adc
fistl
jbe
cs
pusha
jmp
xchg
sbb
sbb
pop
xchg
cmp
ret
cmpsb
pop
jecxz
out
adc
sub
or
int
loop
mov
add
mov
or
cs
pushaw
cmpsb
cmp
mov
lds
or
lahf
es
push
rolb
icebp
js
fisubrs
lret
sti
fs
sbb
sbb
pop
repz
mov
adc
ret
hlt
pop
cltd
xor
scas
mov
loopne
std
xchg
lcall
mov
push
hlt
mov
cmpsl
adc
nop
stc
xor
sub
dec
in
add
insb
add
pop
mov
mov
mov
and
aas
jne
out
xchg
xchg
pop
leave
push
or
jnp
movsl
sub
cmp
dec
loopne
nop
and
jp
ds
pushf
test
xor
repz
mov
adc
ficompl
jbe
sub
std
xchg
sbb
sbb
push
cmp
shlb
cmpsl
pop
loope
out
adc
lds
int3
dec
jecxz
xchg
add
mov
or
and
cmpsl
idivl
test
rorb
mov
sahf
and
rclb
cltd
lock
fisubs
enter
arpl
xchg
sbb
out
mov
adc
rol
repnz
lcall
lods
mov
xchg
cwtl
add
outsb
xor
cmc
mov
cmpsb
adc
mov
xor
sub
dec
out
add
add
push
mov
mov
mov
and
test
xchg
xchg
pop
enter
sub
sub
aam
add
es
and
js
aas
adc
pop
hlt
fs
mov
adc
fstps
jbe
sub
dec
pop
out
xchg
sbb
sbb
add
adc
adc
stos
xor
arpl
dec
in
test
add
mov
or
and
les
test
rorb
mov
popf
and
rclb
lcall
and
mull
xlat
xchg
sbb
in
mov
adc
mov
fwait
xor
lods
mov
xchg
xchg
call
outsb
xor
cmc
mov
adc
divl
enter
or
jp
xchg
sub
fwait
insl
add
push
mov
xchg
mov
and
test
xchg
xchg
pop
dec
or
jl
mov
add
and
inc
addr16
ja
aas
adc
pop
hlt
arpl
mov
adc
fcomps
jbe
sub
xchg
sbb
insb
mov
sbb
add
cmp
mov
ficoms
vmread
test
lret
sti
adcl
dec
mov
or
and
ret
test
cmc
jl
test
iret
or
pushf
and
rclb
lcall
and
mulb
xlat
xchg
pop
test
dec
mov
cmc
in
mov
adc
mov
fwait
xor
stos
mov
xchg
xchg
xlat
outsb
xor
cmc
mov
movsb
adc
mov
xor
daa
scas
jbe
loopne
dec
out
add
add
push
mov
xchg
mov
pop
test
push
jb
out
xchg
dec
or
jl
mov
add
and
and
jbe
aas
adc
pop
hlt
jmp
cmp
rcrl
cltd
xor
xchg
fbstp
sub
xchg
pop
jle
insb
mov
sbb
add
adc
push
ja
test
jne
popa
leave
dec
in
adcb
dec
aad
dec
pop
outsl
mov
mov
ret
hlt
jnp
test
into
or
lcall
lcall
and
cmc
pop
inc
xlat
nop
push
test
mov
cmc
loop
mov
adc
mov
fwait
xor
test
xchg
xchg
cld
xlat
outsb
cs
mov
dec
cmc
mov
mov
pop
lock
xor
and
inc
dec
out
add
add
push
mov
test
mov
sbb
ds
xchg
pop
les
movsl
jle
in
pop
mov
add
and
push
push
xchg
xchg
pusha
ljmp
mov
ret
aad
xor
xchg
loopne
ret
sub
xchg
push
jl
insb
scas
aaa
sbb
push
mov
sarl
fcompl
or
jbe,pn
pusha
dec
in
adcl
push
insl
mov
lahf
daa
shlb
shrb
lods
adc
pop
inc
int
mov
cwtl
pop
sub
push
mov
dec
loopne
or
mov
hlt
pop
inc
xlat
mov
pop
cmc
loopne
movsb
cmp
mov
fwait
xor
cmpsl
mov
xchg
xchg
cli
xlat
outsb
sub
sbb
mov
cmp
cmp
pop
icebp
mov
xor
and
out
call
add
push
mov
test
mov
sbb
shrb
cmp
lock
xchg
pop
ret
dec
push
movsl
jge
in
push
lahf
sub
shlb
add
and
push
or
cs
hlt
pop
jmp
jnp
mov
ret
aam
xor
nop
loopne
ret
dec
pop
jecxz
xchg
adc
ss
addr16
repz
mov
sarl
fistpl
or
das
movsl
sub
dec
in
adcb
shll
and
mov
out
test
int3
or
std
gs
xchg
push
sub
dec
mov
dec
loopne
or
mov
repz
inc
xlat
lea
sbb
fbld
cmp
mov
fwait
xor
cmpsb
mov
xchg
xchg
stc
xlat
outsb
sub
mov
cmp
aaa
lahf
adc
mov
xor
and
dec
out
xchg
sub
enter
sub
and
movsl
shrb
cmp
inc
outsb
clc
lock
nop
pop
ret
movsl
jl
in
adc
add
and
push
or
xchg
pop
call
jnp
mov
ret
rcrl
ja
es
pop
loop
xchg
adc
aad
lods
xor
repz
xchg
sarl
fstps
or
movsb
sub
pop
lds
idivb
sub
shll
and
mov
out
test
lret
sti
fs
xchg
sbb
ret
add
call
or
mov
icebp
pop
inc
fmuls
pop
neg
movsb
cmp
mov
fwait
xor
mov
xchg
xchg
clc
xlat
outsb
sub
cmc
mov
cmp
ss
adc
mov
xor
and
dec
out
std
xchg
sub
push
mov
sub
and
movsb
shrb
cmp
xchg
pop
pop
rorl
jnp
in
adc
sub
into
xor
dec
loope
mov
mov
jb
aas
or
hlt
pop
out
cmp
jg
adc
rcrb
ja
and
xchg
adc
insb
stos
xor
mov
int3
repz
xchg
shll
fcomps
or
mov
les
cmc
jge
sub
shlb
and
test
test
leave
or
cli
arpl
jge
sbb
ret
add
out
dec
loopne
or
mov
lock
inc
fmuls
lods
pop
neg
movsb
cmp
mov
fwait
xor
movsb
mov
xchg
nop
not
outsb
sub
cmc
mov
shll
push
pop
icebp
xchg
xor
and
dec
out
cld
xchg
sub
dec
mov
and
shrb
cmp
xchg
mov
pop
rorb
jp
in
adc
lcall
and
jno
aas
or
pop
hlt
pop
out
cmp
jle
adc
rcrl
ja
and
dec
push
loopne
xchg
adc
insb
stos
xor
fs
repz
test
shll
xlat
pop
out
or
mov
ret
dec
in
jl
sub
iret
mov
add
and
mov
out
test
enter
out
xchg
sbb
ret
add
out
dec
loopne
pop
and
out
pop
inc
fmuls
stos
pop
neg
arpl
das
mov
pop
jmp
or
js
mov
call
sub
cmc
mov
cmp
xor
adc
xchg
xor
pop
test
pminub
out
sti
xchg
sub
lds
dec
and
and
mov
test
xchg
pop
mov
loopne
jl
fwait
sub
int3
xor
lcall
and
jo
aas
or
pop
hlt
pop
in
cmp
jge
adc
rcrb
ja
and
xchg
adc
insb
test
lret
cld
test
shll
pop
out
pop
jo
mov
ret
repz
sub
into
mov
add
and
mov
out
test
or
clc
popa
out
xchg
sbb
ret
add
in
dec
loopne
push
and
out
pop
inc
fmuls
stos
pop
neg
bound
cs
pop
call
or
js
mov
call
daa
mov
mov
dec
cmc
mov
cmp
xor
pop
mov
addl
pop
sbb
push
and
jp
adc
xbegin
pop
cmp
inc
pushf
je
pop
fwait
jne
or
aad
dec
addr16
mov
sub
fldt
and
cltd
out
test
movsl
daa
xchg
adc
repz
sbb
aaa
in
jne
mov
int3
call
out
fimuls
mov
je
jae
fstp
outsb
push
faddl
fistpll
dec
mov
jg
call
mov
sub
jmp
inc
sbb
adc
sub
sub
inc
es
xor
mov
mov
scas
ja
arpl
xor
lret
daa
lret
mov
insb
sub
mov
stc
add
imul
mov
add
call
xor
push
mov
fdivr
pop
adcb
loopne
push
aas
rcl
xor
sub
push
jbe
testb
in
ret
adc
hlt
lret
ret
pop
jl
jbe
mov
jecxz
cs
xchg
sub
ds
fmull
pushf
adc
in
pop
sbb
mov
inc
cmp
or
push
ds
mov
ret
test
mov
jnp
sti
sbb
cli
jb
jnp
push
lods
and
cwtl
enter
mov
pop
loopne
mov
add
cmpsl
or
ffree
ja
scas
out
and
cmp
idivb
sbb
ret
lods
jnp
sbb
sbb
je
dec
sarb
mov
cmp
xacquire
ret
das
fs
sahf
fsubrs
mov
inc
and
inc
pop
insb
add
fnstsw
shll
fs
dec
pop
sarl
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
dec
adc
addl
cmp
das
or
and
xchg
jp
fldcw
loope
push
orb
mov
loope
rcll
adc
aad
adc
outsl
xchg
rorb
insl
inc
insl
xchg
mov
inc
imul
cmp
sbb
or
cmpsb
mov
jnp
loopne
stos
xchg
jns
int3
cmpsl
pop
mov
psubb
push
cmp
or
cld
cmp
dec
ljmp
or
push
adc
addr16
sti
push
ss
andb
sbb
outsl
xor
aam
loopne
push
insb
xchg
push
test
xchg
insb
push
dec
or
loope
enter
jp
cmpb
jge
adc
cmp
mov
ljmp
je
or
mov
push
in
dec
sub
mov
sub
or
xor
lock
cli
inc
loope
pop
into
mov
add
push
sbb
dec
iret
mov
or
mov
stc
outsb
outsl
iret
xor
test
push
adc
add
mov
pop
pop
inc
inc
xor
stc
psadbw
lret
mov
divb
pusha
nop
lret
sub
jns
cmp
into
and
repz
clc
and
pop
mov
es
push
gs
sub
out
sahf
aaa
scas
pop
lds
dec
dec
add
lcall
jmp
dec
int3
pop
popa
push
outsb
push
mov
test
cmpsl
mov
test
scas
xor
pop
cmp
loope
xchg
test
cmc
lods
adc
add
xor
mov
mov
fbstp
mov
push
cmpsl
xor
and
pop
scas
enter
xchg
add
and
sub
insl
clc
add
ds
hlt
lcall
inc
pop
jp
imull
out
jl
adc
fstpt
jno
daa
push
out
leave
mov
sub
inc
into
cltd
mov
mov
shll
xlat
mov
stos
dec
in
dec
xchg
insl
push
aaa
add
lret
stc
xchg
int3
iret
mov
cwtl
dec
xchg
mov
xor
ret
mov
lret
hlt
or
aaa
out
mov
ss
lret
cmp
std
les
lret
ja
jmp
cltd
push
fldenv
out
adc
add
lds
lea
insl
sbb
std
jp
jmp
or
cmpsb
lock
stos
pop
lods
xchg
jo
notl
adc
stos
lea
jae
insb
shll
pop
incl
adc
in
out
mov
loopne
pop
and
push
icebp
xor
xor
aad
imulb
shrb
mov
ljmp
test
add
cmp
in
sbb
loop
push
mov
jmp
cmpsl
in
mov
call
nop
jno
mov
mov
dec
mov
dec
mov
mov
cmp
shll
aaa
orb
fbld
pop
les
inc
mov
mov
mov
sti
into
xor
std
icebp
jbe
xchg
cmp
je
cmp
fnstenv
adc
out
fidivs
test
cs
scas
mov
sub
mov
ljmp
daa
mov
cmp
daa
mov
push
cmpsl
xor
mov
movsl
cld
mov
ja
pop
mov
pop
mov
cli
out
cli
lock
mov
das
add
aam
das
pop
pusha
fcoms
sahf
bound
cmp
xchg
cli
and
fldl
dec
mov
cmp
mov
stos
xchg
dec
cmp
push
jo
jmp
cmp
pop
lods
lods
das
je
aad
rcrl
sub
daa
mov
xor
cmpsl
std
jl
add
mov
cmpb
mov
outsl
js
adc
test
pop
in
inc
ret
and
mov
sub
cmpsl
pop
icebp
int3
daa
lea
xor
cmp
inc
add
mov
mov
mov
jp
sub
xlat
cmpsl
xor
sahf
pop
mov
add
icebp
test
inc
push
js
adc
jo
jno
pop
or
iret
mov
push
mov
xlat
dec
scas
push
mov
lods
repz
inc
std
and
add
or
dec
sub
sbb
rorb
mov
pop
bound
cli
repz
xchg
add
cwtl
into
clc
jg
insb
sarb
sub
xor
dec
push
inc
mov
push
push
inc
repnz
pop
arpl
adc
psrld
xor
jns
mov
pop
insb
xchg
mov
out
shlb
jno
and
fdivl
lods
add
adc
iret
mov
jbe
mov
fst
in
lahf
daa
cmpsb
mov
pop
dec
fs
sub
mov
pusha
pop
and
sub
push
std
pop
xchg
sub
scas
lods
add
jno
gs
out
jne
arpl
xor
add
xchg
add
mov
mov
cmpsl
add
add
fs
mov
sti
lock
cmpsl
pop
fmulp
jns
test
testl
sub
inc
cld
insl
pop
movsl
bound
scas
xor
pop
mov
mov
push
mov
cli
int3
lods
mov
out
aam
lret
cli
jno
push
je
mov
xchg
fiadds
inc
or
mov
sub
sarl
pop
notb
pop
inc
sbb
lea
in
mov
sbb
xchg
mov
sub
inc
add
in
lahf
sbb
incl
cmp
enter
std
mov
lods
xchg
aad
les
inc
sti
pop
mov
mov
dec
push
or
mov
idivl
ret
lret
and
fnstcw
mov
out
out
rol
dec
es
sbb
dec
cmp
and
xor
xchg
mov
mov
push
fwait
inc
dec
popa
adc
out
sahf
push
inc
popa
addr16
ficomps
mov
pop
mov
jnp
negb
mov
mov
dec
cltd
jno
adc
mov
ljmp
int3
dec
call
movsb
sahf
pop
ljmp
jbe
push
mov
daa
fildll
xor
imul
stc
add
fcomp
cwtl
mov
push
std
and
into
cmpsl
lods
outsb
fnstcw
dec
int
cltd
xchg
xchg
addr16
pop
loope
xlat
sarb
jns
jge
popfw
outsb
ret
dec
add
dec
add
lahf
dec
add
mov
mov
lret
lods
add
lods
lret
stos
sub
push
test
aam
pop
test
bound
fadds
ljmp
jno
xor
out
popl
