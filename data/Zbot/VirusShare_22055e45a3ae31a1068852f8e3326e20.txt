push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
push
push
push
call
add
pop
mov
mov
mov
add
call
add
mov
sub
push
push
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
mov
mov
add
call
add
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
push
push
pushl
push
call
add
pop
mov
mov
mov
add
call
add
add
in
sub
push
push
push
call
add
pop
mov
mov
mov
add
call
add
xor
mov
pop
pop
pusha
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
mov
add
call
add
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
mov
mov
add
call
add
push
mov
sub
push
push
push
call
add
pop
mov
mov
mov
add
call
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
mov
add
call
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
mov
add
call
add
inc
sub
mov
sub
mov
mov
shl
xor
push
sub
push
mov
mov
mov
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
lea
jbe
popf
push
pushl
decl
jmp
add
fxtract
sbb
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
pop
call
add
lea
sub
sub
mov
pop
mov
mov
mov
mov
push
xorl
pop
sub
or
push
pop
mov
push
push
push
pop
push
pop
stos
pop
pop
subl
neg
clc
sbb
pushl
lea
lea
pop
repz
sub
test
jne
mov
pop
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
pushl
call
add
pop
mov
mov
mov
add
call
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
push
pushl
push
call
add
pop
mov
mov
mov
add
call
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
mov
add
call
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
mov
mov
add
call
add
add
in
sub
push
push
push
call
add
pop
mov
mov
mov
add
call
add
push
mov
sub
push
pushl
push
push
call
add
pop
mov
mov
mov
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
mov
mov
add
call
add
add
in
sub
push
pushl
pushl
call
add
pop
mov
mov
mov
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
mov
mov
add
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
push
call
add
pop
mov
mov
mov
add
call
push
mov
sub
push
push
push
push
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
push
push
call
add
pop
mov
mov
mov
add
call
add
push
mov
sub
push
push
push
call
add
pop
mov
mov
mov
add
call
add
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
mov
mov
add
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
push
pushl
push
call
add
pop
mov
mov
mov
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
pushl
push
pushl
call
add
pop
mov
mov
mov
add
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
mov
add
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
mov
mov
add
call
add
push
mov
sub
push
push
push
pushl
call
add
pop
mov
mov
mov
add
call
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
mov
mov
add
call
add
add
in
sub
push
pushl
push
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
push
push
push
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
mov
mov
add
call
add
add
in
sub
push
pushl
pushl
push
call
add
pop
mov
mov
mov
add
call
add
add
in
sub
push
push
push
pushl
call
add
pop
mov
mov
mov
add
call
push
mov
sub
push
push
push
call
add
pop
mov
mov
mov
add
call
add
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
mov
add
call
add
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
pushl
pushl
call
add
pop
mov
mov
mov
add
call
push
mov
sub
push
push
push
pushl
call
add
pop
mov
mov
mov
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
push
push
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
push
call
add
pop
mov
mov
mov
add
call
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
mov
mov
add
call
add
push
mov
sub
push
push
push
push
push
call
add
pop
mov
mov
mov
add
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
mov
mov
add
call
add
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
push
mov
sub
push
push
push
pushl
call
add
pop
mov
mov
mov
add
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
push
call
add
pop
mov
mov
mov
add
call
push
mov
sub
push
push
push
call
add
pop
mov
mov
mov
add
call
add
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
mov
add
call
add
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
mov
mov
add
call
add
add
nop
nop
nop
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
mov
mov
add
call
add
add
in
sub
push
pushl
pushl
push
push
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
mov
mov
add
call
add
add
in
sub
push
push
push
push
call
add
pop
mov
mov
mov
add
call
pop
and
add
add
mov
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
loopne
add
out
add
and
add
shlb
add
mov
and
add
add
add
add
add
inc
and
add
and
add
add
jb
add
and
add
and
add
and
add
and
add
and
add
add
add
add
xor
add
and
add
add
add
add
pop
and
add
add
add
and
add
add
add
add
push
add
add
add
add
and
add
add
mov
add
add
add
add
add
and
add
add
movsb
and
add
add
and
add
mov
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
loopne
add
out
add
and
add
shlb
add
mov
and
add
add
add
add
add
inc
and
add
and
add
add
jb
add
and
add
and
add
and
add
and
add
and
add
add
add
add
xor
add
and
add
add
add
add
pop
and
add
add
add
add
je
imul
bound
gs
add
dec
add
popa
insb
inc
insb
popa
addr16
add
add
je
imul
bound
gs
add
aad
inc
imul
add
push
gs
imul
test
inc
jb
popa
je
inc
jbe
outsb
je
add
ret
gs
jne
jb
outsb
je
jb
arpl
jae
repnz
imul
jb
je
arpl
add
addl
jb
popa
je
inc
imul
jns
add
enter
jae
gs
popa
insb
jne
add
add
gs
outsl
insl
insl
inc
jb
popa
imul
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
jne
jb
outsb
je
push
add
pop
add
je
outsl
arpl
gs
outsb
outsw
push
add
roll
dec
gs
jo
jb
add
push
push
je
imul
inc
add
pop
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
outsl
bound
dec
outsl
arpl
add
add
gs
outsl
jbe
inc
imul
jns
add
je
push
gs
popa
jae
inc
jb
outsl
jb
add
push
dec
inc
dec
xor
cs
insb
add
jae
push
gs
jne
jae
jb
outsl
jae
add
push
imul
js
push
add
int
dec
outsl
popa
fs
jne
jae
jb
add
dec
gs
popa
addr16
add
jnp
inc
gs
imul
outsb
addr16
add
jnp
push
gs
outsl
arpl
add
sbb
ja
jo
imul
pop
dec
jae
imul
jae
popa
addr16
add
jno
push
gs
jne
jae
jb
rolb
jae
imul
pop
or
jae
dec
gs
popa
addr16
add
cwtl
push
inc
gs
insb
addr16
jb
arpl
mov
inc
imul
dec
gs
popa
addr16
add
push
push
inc
push
xor
cs
insb
add
pop
add
dec
inc
outsl
outsb
outsb
arpl
add
inc
popa
outsb
arpl
add
add
dec
inc
imul
arpl
add
dec
inc
jb
outsl
jb
add
dec
push
inc
dec
xor
cs
insb
add
or
dec
jae
popa
je
push
push
inc
add
push
dec
push
push
dec
cs
insb
add
push
stos
and
or
fdivrl
cmpsl
mov
cmpsl
lods
jb
sub
cmp
xor
out
gs
popa
shll
sti
or
pusha
jg
pop
xchg
faddp
int3
xchg
imul
push
cwtl
mov
sub
cli
shll
int3
push
cmp
int
mov
mov
jne
inc
mov
sahf
loopne
lods
std
pop
xor
pop
mov
rol
adc
xchg
pop
add
cmpsl
add
insb
daa
pop
imul
add
rolb
jb
mov
fs
inc
cli
dec
push
out
sbb
jl
sub
in
fucomp
xor
out
cmp
loopne
mov
divb
jnp
enter
adc
daa
pop
rclb
push
xchg
lahf
arpl
inc
mov
sbb
loop
xor
mov
fwait
mov
inc
jmp
mov
add
pop
or
fidivrl
mov
and
mov
push
fisttpll
jb
push
xorl
shll
xchg
call
mov
add
push
mov
gs
add
ret
ja
out
mov
mov
ret
dec
xor
mov
sbb
cmp
push
rorb
movsl
jmp
jl
mov
pop
adc
sub
sbb
shlb
insl
je
leave
hlt
push
pop
add
enter
inc
sbb
pop
mov
push
sbb
jp
je
pushf
adc
dec
in
loope
mov
in
lods
shlb
sbb
lds
and
mov
xor
lcall
push
xchg
pusha
push
daa
dec
pop
fstpt
cmp
fbld
push
shrb
mov
mov
arpl
add
add
add
add
xor
add
add
add
pusha
add
adcb
add
pusha
add
addb
add
add
add
js
add
add
add
hlt
add
add
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
add
pusha
add
test
add
cwtl
xchg
add
ss
cwtl
mov
add
sub
add
xor
add
pusha
add
add
add
add
add
add
and
add
or
add
or
add
push
sub
sub
xchg
xchg
xchg
add
scas
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
stos
stos
mov
mov
lcall
jle
add
jnp
stos
stos
lods
add
test
push
mov
mov
mov
ret
leave
leave
lret
int
rcl
in
rcl
shl
iret
iret
shl
lret
lret
lret
hlt
lret
repz
out
mov
mov
mov
stos
lods
lea
fwait
lcall
add
add
add
push
add
add
add
add
add
add
add
add
mov
lahf
add
mov
jae
mov
out
lret
lret
not
rcl
cld
aad
aad
fcomp
fsin
xlat
fcom
aam
aam
iret
rcl
dec
int
rcl
aam
rcl
sar
ret
rol
mov
mov
scas
iret
mov
xchg
and
add
push
add
add
add
add
add
add
add
add
lods
scas
lods
add
lods
scas
sbb
mov
jnp
mov
sar
mov
lret
lret
int3
call
rcl
aad
aam
xlat
call
xlat
fdivr
aad
aam
into
iret
into
dec
into
into
call
rcl
dec
int3
int3
inc
ret
mov
mov
mov
cmpsl
movsl
cmpsl
ljmp
pop
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
push
pop
pop
add
inc
add
push
add
push
or
inc
or
sbb
add
add
add
add
or
or
add
add
mov
mov
add
mov
inc
mov
mov
mov
mov
ret
mov
call
rcl
call
xlat
fdivr
fcos
rcl
aad
int
int
int3
int3
lret
dec
int3
into
inc
sarb
ljmp
test
mov
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
popa
or
xor
push
pop
pop
pop
fs
ds
inc
sbb
sbb
or
or
sbb
sbb
aaa
cmp
and
add
push
pop
add
add
add
add
arpl
add
mov
pop
mov
mov
mov
mov
mov
ret
dec
leave
dec
ror
call
aad
call
aad
dec
rcl
dec
lret
mov
inc
ret
ret
mov
mov
scas
jmp
fwait
cltd
cltd
cltd
lcall
addl
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
arpl
push
push
push
add
outsb
xor
jnp
jg
jle
jo
jno
arpl
push
push
xchg
cmp
cmp
inc
inc
inc
mov
outsl
outsb
outsb
nop
bound
inc
inc
inc
xor
add
add
add
add
movsb
movsb
mov
inc
mov
mov
mov
mov
mov
mov
mov
ret
ret
inc
mov
dec
lret
enter
ret
mov
mov
pushl
movsb
movsl
lcall
xchg
xchg
xchg
xchg
xchg
cwtl
xchg
cwtl
cltd
cwtl
lcall
cmp
push
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
jo
add
pop
or
jp
xchg
mov
incb
jge
idivb
jnp
outsb
jo
out
addr16
fdivs
jae
jle
jle
jns
ja
arpl
fs
inc
inc
cmp
sbb
sbb
adc
or
lods
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
cmpsl
cmpsl
lcall
xchg
incl
addb
xchg
xchg
xchg
sahf
sahf
mov
ficomps
xchg
nop
jle
js
pop
cs
das
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
addb
in
mov
mov
addb
decb
mov
jge
jle
jno
jae
jae
jne
jle
jle
addb
xchg
gs
cmp
es
jge
cltd
lcall
test
lods
lods
sti
stos
stos
lods
stos
lods
stos
test
test
mov
fwait
cltd
xchg
xchg
xchg
decl
cmpb
jp
jge
jl
mov
xchg
cmpsb
movsb
cmpsb
mov
mov
mov
mov
mov
mov
mov
scas
scas
stos
test
adc
add
or
add
add
add
add
add
add
pop
pop
adc
mov
lods
call
addb
lea
xchg
std
cltd
cltd
cwtl
stc
xchg
xchg
xchg
in
mov
or
jg
int
mov
mov
push
pop
push
or
inc
aas
dec
imul
test
leave
fwait
fwait
pushf
fistps
cltd
cltd
stc
xchg
nop
std
mov
xchg
mov
mov
xchg
lcall
cmpsl
ljmp
mov
std
mov
mov
mov
std
mov
mov
movsb
movsb
movsb
addr16
jl
scas
cmpsl
cmpsb
add
pop
adc
stos
call
fwait
xchg
xchg
incl
test
decb
xchg
xchg
pushf
pushf
sahf
std
movsb
mov
mov
in
xchg
xchg
xchg
in
test
push
jne
adc
dec
add
inc
or
daa
es
dec
dec
dec
data16
jb
mov
xchg
rclb
xchg
xchg
std
mov
xchg
call
sahf
jmp
test
pushl
mov
xchg
std
rorb
mov
mov
ljmp
mov
add
pop
pop
adc
scas
jmp
sahf
cltd
cltd
decl
mov
decl
nop
xchg
xchg
xchg
xchg
pushf
popf
pushf
cmpsb
movsl
movsl
test
test
negl
jnp
movsl
push
push
push
outsl
dec
dec
dec
popaw
pusha
arpl
jb
mov
lahf
addl
xchg
in
nop
xchg
notl
mov
lcall
lea
mov
jle
mov
imul
inc
aaa
mov
sub
mov
push
mov
mov
out
lods
lods
stos
mov
mov
add
mov
pop
pop
adc
mov
ljmp
cltd
decl
nop
nop
call
xchg
call
cwtl
xchg
cltd
cwtl
cltd
lcall
mov
mov
lcall
xchg
les
lcall
lea
stc
xchg
xchg
std
xchg
jae
lcall
jmp
inc
ljmp
aaa
daa
pushl
sub
ljmp
or
mov
inc
mov
mov
stos
pushf
cmpsb
movsb
movsb
and
add
shlb
adc
mov
ljmp
pushf
call
xchg
xchg
lcall
pushf
pushf
lcall
pushf
sahf
lcall
xchg
cwtl
call
xchg
xchg
call
xchg
lcall
cltd
lcall
xchg
xchg
insb
insb
xchg
pop
pop
xchg
push
dec
cwtl
inc
cmp
lcall
mov
and
ljmp
and
adc
scas
and
pushl
daa
adc
mov
adc
mov
adc
mov
lahf
lcall
scas
scas
scas
movsb
movsb
movsl
sub
movsl
movsl
movsl
add
pop
pop
adc
mov
ljmp
fwait
call
sahf
pushf
jmp
movsb
movsb
jmp
mov
cltd
decl
mov
decl
js
cltd
jo
cltd
fs
xchg
push
dec
call
xor
decl
adc
xchg
adc
call
lcall
and
ljmp
das
sbb
mov
sbb
pushl
xor
mov
ss
rcll
ret
fwait
xchg
mov
lods
scas
mov
mov
movsl
movsb
add
pop
pop
adc
lods
lods
ljmp
cltd
lcall
mov
cmpsl
jmp
test
test
pushf
cltd
pushf
call
pop
pop
decl
inc
cmp
mov
sub
mov
decl
adc
incl
add
mov
add
lea
add
nop
or
call
or
jmp
sbb
pop
pushl
cmp
mov
aas
sub
ret
inc
sub
dec
inc
das
dec
inc
cs
push
inc
inc
xchg
mov
sarl
lret
cmpsb
dec
mov
mov
add
add
add
stos
movsl
movsl
add
adc
cmpsl
test
mov
lcall
test
stos
stos
ljmp
mov
scas
scas
mov
mov
outsl
jno
xchg
incl
or
xchg
push
incl
pop
add
addb
incl
add
mov
add
xchg
or
call
jmp
adc
ljmp
cmp
inc
inc
xor
inc
dec
cmp
lret
dec
cmp
into
push
cmp
iret
push
cmp
rclb
call
push
cmp
rcrl
int
mov
ret
mov
mov
movsl
cmpsb
movsl
push
mov
mov
add
add
add
mov
dec
dec
adc
movsb
mov
jmp
cmpsl
cmpsb
ljmp
mov
pushl
mov
pushl
stos
lcall
sub
decl
or
incl
or
incl
or
call
or
lcall
add
cmpsb
adc
ljmp
cs
les
dec
push
inc
dec
pop
inc
call
pop
inc
call
pop
inc
call
pop
dec
fsubs
fldenv
frstor
fisubl
call
xchg
xchg
mov
mov
movsl
cmpsb
cmpsb
arpl
mov
add
add
add
lcall
adc
jl
lahf
popf
jmp
lahf
sahf
pushf
ljmp
mov
pushl
mov
mov
mov
pushl
mov
decl
and
decl
sbb
adc
mov
or
mov
add
xchg
or
lcall
add
cmpsb
adc
ljmp
sbb
inc
cmp
dec
pop
dec
call
push
fsubs
fisubl
fldt
fisubrs
fildll
jmp
jo
jmp
insl
pop
jmp
jno
fcoms
mov
in
cmpsl
cmpsb
jne
lahf
lahf
or
xchg
xchg
xchg
add
inc
adc
je
lahf
cltd
lcall
fwait
pushf
ljmp
mov
pushl
mov
mov
mov
mov
test
dec
inc
call
sub
call
and
decl
or
call
add
mov
adc
ljmp
adc
mov
inc
xor
aad
push
fnsave
jmp
jbe
jmp
js
jmp
jp
jmp
jnp
jmp
jle
call
xchg
xchg
into
sarb
test
test
sahf
sahf
popf
adc
xchg
xchg
xchg
add
inc
inc
adc
jb
fwait
xchg
xchg
call
mov
lods
scas
pushl
mov
mov
mov
mov
ljmp
push
push
call
xor
call
sub
call
add
cltd
or
add
cmpsl
adc
ljmp
adc
mov
sub
call
push
inc
fdivrl
jmp
subl
out
jb
jmp
xchg
in
xchg
out
mov
out
mov
in
xchg
jecxz
mov
sarl
mov
lcall
lahf
add
jl
ds
insl
js
xchg
out
cltd
cwtl
lcall
mov
mov
mov
mov
inc
mov
mov
lcall
cmp
lcall
inc
cmp
mov
daa
push
call
or
add
cmpsb
adc
ljmp
adc
add
mov
xor
fisubl
jmp
xchg
call
popl
out
xchg
cmp
icebp
xchg
test
repnz
xchg
cmc
xchg
test
repnz
cmp
cltd
mov
aad
mov
ret
imulb
pushf
popf
daa
lahf
sahf
sahf
add
add
add
pusha
add
xor
mulps
jne
jg
out
test
xchg
xchg
xchg
pushl
mov
mov
inc
rol
rol
inc
ret
ret
pushl
jo
lcall
dec
inc
jmp
aas
lcall
adc
lcall
adc
ljmp
adc
pushl
push
add
ret
sbb
daa
jmp
jns
jmp
fwait
mov
out
fwait
push
sahf
mov
repnz
mov
hlt
lahf
nop
push
mov
xchg
stc
mov
out
popf
mov
fnstcw
clc
stos
scas
lods
mov
popf
sahf
xor
fwait
add
add
add
inc
inc
add
xor
jb
pop
dec
in
imul
nop
pushl
mov
mov
inc
ret
ret
mov
jmp
dec
inc
jmp
push
dec
jmp
sbb
lcall
jmp
adc
pushl
pop
add
ret
dec
and
jmp
mov
out
movsb
xchg
push
movsl
cltd
push
test
fwait
push
test
popf
clc
lods
sahf
sti
scas
lahf
std
mov
sti
lods
pushf
push
cmpsb
xchg
fistpll
mov
rcrb
popl
cltd
cltd
lcall
ss
or
ds
dec
dec
dec
jecxz
bound
xchg
nop
mov
mov
mov
mov
mov
inc
inc
enter
sarb
lahf
push
dec
ljmp
pop
push
jmp
adc
add
movsl
adc
ljmp
add
mov
sbb
dec
sbb
call
es
loope
inc
out
fwait
mov
repz
mov
clc
mov
stc
mov
sti
mov
cli
mov
test
std
mov
test
divb
mov
iret
lret
mov
mov
lahf
sahf
lahf
dec
xchg
xchg
xchg
add
lcall
xor
xor
or
bound
xlat
je
jb
mov
rol
ret
inc
rol
ret
ret
vpaddd
lret
mov
xchg
jmp
pop
push
pushl
sub
jmp
adc
pushl
pop
add
les
add
int
add
xlat
pop
add
loopne
adc
out
jno
push
lods
sahf
cli
mov
mov
sti
shlb
inc
mov
std
les
cld
lds
std
lds
jmp
les
mov
mov
sahf
sahf
sahf
pusha
xchg
xchg
xchg
or
add
add
push
add
dec
dec
outsl
jo
mov
aad
fldpi
aam
aad
rcl
sar
int
iret
dec
int3
int3
dec
lret
int3
lret
mov
mov
ljmp
inc
lcall
adc
ljmp
adc
add
sbb
dec
sbb
call
push
add
loope
add
ljmp
sti
mov
mov
std
enter
lret
mov
cld
into
mov
dec
mov
cld
into
mov
jmp
lds
mov
lahf
lahf
jo
xchg
xchg
or
add
add
xor
add
add
pop
or
enter
jecxz
pop
in
out
in
out
loop
in
fucom
fcmovu
fcomp
cli
aad
aad
int
sar
mov
outsb
push
ljmp
push
push
jmp
adc
mov
sbb
dec
sbb
add
fstpl
add
in
add
out
dec
das
clc
fwait
mov
cld
mov
std
into
ret
cld
iret
rol
std
rol
std
aad
xlat
xlat
fxch
std
fmul
cli
int3
mov
int
mov
mov
xchg
adc
add
add
incb
std
incl
cld
cld
cld
add
repz
in
lock
in
in
out
sub
jmp
dec
call
call
ljmp
fstp
jmp
mov
jb
test
and
jmp
adc
pushl
sbb
inc
sbb
dec
sbb
add
fbld
add
jmp
popa
inc
sti
mov
ror
sti
aam
cld
aam
call
int
std
fmul
fcmove
fcmove
std
fcmovne
std
fmulp
std
std
aad
out
lret
fst
sar
vpmaxsw
xchg
xchg
sbb
cltd
lcall
add
add
incl
incb
idiv
clc
add
hlt
hlt
add
icebp
repnz
in
repnz
pop
in
icebp
repnz
out
out
pop
loopne
loope
mov
jae
sahf
xor
lcall
adc
ljmp
add
mov
sbb
call
sbb
add
loop
add
in
xor
push
jne
sti
shll
std
cld
fcmovnbe
std
jmp
aam
std
loopne
std
loop
std
loop
in
cld
in
push
iret
sar
fcom
dec
lret
lret
test
fwait
xchg
xchg
xchg
and
xchg
cwtl
add
std
cld
add
std
std
add
cld
cli
add
cmc
cmc
or
aad
xor
mov
je
lcall
jmp
adc
mov
sbb
dec
sbb
call
push
add
add
out
add
lock
jbe
sti
rol
cld
loopne
cld
loopne
cld
loopne
jmp
fdivr
std
loop
in
in
std
out
std
out
cld
call
fdivrp
std
fst
push
iret
ret
jmp
fcmovbe
dec
rcl
clc
scas
lods
lods
lods
xchg
xchg
xchg
outsb
insl
outsl
add
add
add
fucom
add
mov
cmpl
lahf
or
add
mov
add
mov
sbb
dec
sbb
add
fbld
add
jmp
dec
sub
sti
mov
sar
std
loop
loop
cld
jecxz
cld
loop
loopne
cld
loope
std
std
sti
fmul
stc
fmul
stc
fmul
clc
rol
in
enter
sar
aad
aad
mov
mov
fwait
lcall
lcall
add
rcl
add
vunpckhps
mov
lcall
adc
pushl
pop
add
les
add
into
sbb
call
sbb
add
jmp
add
repz
xor
std
ror
cli
aad
cli
rol
cli
iret
ret
lret
mov
push
lret
lock
in
mov
jmp
lret
out
sar
iret
ret
rol
imul
cmc
fsubrp
mov
mov
xchg
add
add
add
lret
mov
rol
mov
xchg
loopne
inc
aaa
jmp
adc
pushl
add
ret
dec
and
call
es
fldt
sbb
out
inc
jmp
mov
scas
in
scas
std
loope
scas
cld
loopne
mov
fcmovnb
mov
fadd
mov
ljmp
leave
fsubp
aad
shl
call
in
test
out
in
popf
jmp
int3
lret
push
scas
lods
lods
adc
cmpsb
cmpsl
cmpsb
add
rol
mov
mov
sahf
aam
push
dec
pushf
daa
sbb
cmpsb
sub
mov
cs
mov
cmp
mov
fs
stc
lret
jae
test
xchg
mov
shrl
mov
aad
mov
lret
lret
enter
int
xlat
rcl
aad
fcmovnu
fnstenv
fstp
gs
jecxz
out
jmp
xor
cmc
clc
clc
and
lock
sbb
or
mov
int3
add
add
add
mov
roll
scas
les
jno
lock
xchg
fnsave
mov
test
cmpsl
lret
pushf
lret
mov
enter
int3
int
ror
iret
push
rcl
rorl
xlat
inc
aad
xlat
xor
fcmovu
daa
xlat
fcmovnu
sbb
fsubp
adc
loop
push
loop
out
out
ljmp
cli
sti
add
std
add
incb
std
std
std
add
mov
ret
mov
mov
mov
lods
xchg
mov
mov
mov
mov
ret
push
ret
lds
leave
xor
int3
iret
daa
int3
rcl
and
rcl
sbb
rcl
adc
aad
or
fcomp
push
aam
faddl
add
add
loop
add
call
flds
incb
mov
mov
add
rol
ret
vmovaps
ret
mov
mov
ret
mov
mov
leave
add
int3
int3
add
rcl
add
aad
add
aad
add
aam
fcom
xlat
add
loope
fildl
loope
fstp
loopne
in
out
icebp
out
icebp
add
incb
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
pop
dec
add
push
push
mov
mov
bound
fucomip
adcb
pop
icebp
jne
pop
sahf
arpl
and
sub
or
popa
clc
pop
nop
shrb
jl
lods
jecxz
xchg
aaa
push
movsl
push
mov
mov
fisttpl
or
fbstp
sub
xchg
dec
jg
sbb
mov
ret
repz
pop
lock
js
ja
data16
cwtl
lret
xchg
std
mov
sbb
dec
jo,pt
shlb
ret
repz
xchg
adc
cmovbe
xchg
sub
mov
dec
loop
or
imul
xchg
dec
xchg
xorb
roll
lds
hlt
ret
pop
es
dec
jecxz
inc
loope
jns
push
fstpl
mov
xor
sbb
cmp
jno
les
xchg
pop
lock
clc
loop
sub
ja
pop
dec
add
push
dec
in
mov
dec
adc
imul
addr16
xchg
mov
popf
xor
data16
xchg
inc
mov
in
in
inc
ficomps
sbb
push
das
gs
mov
roll
inc
sti
and
cmp
dec
ja
push
test
dec
fnsave
add
adc
adc
cwtl
das
and
fisttpl
mov
aam
enter
ds
es
sbb
aad
out
push
ljmp
jno
repz
adc
inc
lods
xor
fisubl
scas
inc
pop
sbb
dec
jp
arpl
ljmp
and
mov
inc
jb
mov
cwtl
push
lods
inc
mov
lret
fmull
sbbb
jnp
popl
sahf
jno
cltd
xor
xchg
and
dec
xor
push
inc
cmpb
test
cmpsb
xchg
leave
insl
cld
xchg
mov
dec
loop
insl
adc
pop
mov
adc
mov
or
adc
notl
mov
adc
add
lea
adc
scas
inc
and
ss
lret
cld
jecxz
jmp
push
or
data16
jmp
ret
hlt
fldcw
push
movsl
cmp
sub
and
ret
pop
fwait
jg
aas
mov
loope
out
rol
pop
add
add
push
bound
mov
js
cltd
test
lret
sti
push
pop
repnz
sbb
dec
pop
jns
mov
hlt
lahf
stos
xchg
cs
jnp
repnz
mov
xor
xor
shrl
addr16
mov
mov
sub
cmc
mov
sub
stos
xchg
fwait
dec
loop
mov
enter
add
push
push
out
inc
xchg
jb
outsb
add
lds
ret
pop
sbb
stos
inc
xor
loope
insb
push
enter
call
xlat
loopne
mov
stc
add
sub
cmp
fs
and
mov
inc
xlat
into
xlat
ja
or
pop
cmc
and
xchg
sub
inc
jl
je
mov
mov
lcall
jmp
out
xchg
insl
outsb
js
movsb
test
lret
sti
loop
test
dec
xor
outsl
push
in
roll
or
mov
pop
push
test
mov
loope
in
rol
pop
add
add
push
popa
push
mov
ja
cltd
test
cmp
in
and
sbb
dec
push
jns
mov
hlt
sahf
stos
xchg
fdivrl
mov
das
adc
push
mov
mov
or
jle
les
mov
mov
scas
dec
xor
jle
xchg
sub
shll
inc
cmpsl
dec
xchg
sub
sbbb
mov
out
test
jnp
sti
test
jae
jmp
jp
je
stos
mov
pop
repz
jp
imul
dec
inc
fdivrs
lea
jb
mull
jns
jecxz
lahf
das
int
jo
mov
jnp
imull
jno
imul
cmp
mov
xchg
jno
leave
sbb
sbb
ja
outsb
or
cmpl
pusha
xchg
sub
mov
or
dec
cmp
pop
stc
nop
nop
xlat
sub
add
sbb
push
ss
xor
in
test
mov
push
out
fbstp
xor
jmp
cmp
sub
pusha
and
xchg
push
mov
ret
repz
data16
pop
scas
push
mov
jmp
inc
jb
jmp
pop
mov
or
cli
jne
or
ljmp
aaa
into
jne
sbb
ror
lods
inc
sti
inc
testl
shlb
or
add
xor
sarl
sbbl
imul
out
dec
fwait
xor
xchg
sbb
fcoms
mov
xchg
jg
repz
stos
pop
mov
inc
xor
jne
adc
fsubrs
jge
jle
in
test
sbb
fisttpl
and
jns
jg
dec
loopne
stos
jno
fisttpl
or
mov
subb
sub
dec
sbbl
push
sahf
outsl
push
iret
push
jae
sbbl
mov
popf
xor
push
call
jl
jmp
leave
movsl
jnp
fcoms
mov
je
jg
lret
push
pop
sbb
js
jns
lret
stos
xchg
sub
pop
mov
mov
sbbb
pop
ret
pop
jmp
or
xchg
or
pop
mov
hlt
mov
sub
rolb
cmp
inc
add
fldt
mov
jbe
stos
or
ret
dec
lahf
ss
add
loopne
movsl
cmp
xor
into
arpl
js
mov
mov
add
movsb
imul
cwtl
mov
icebp
mov
inc
lods
inc
jne
icebp
mov
sbb
out
daa
xchg
push
and
mov
fucomp
adcb
fs
xor
sti
xor
sub
inc
xlat
psubsb
sbb
push
out
xor
push
dec
jno
das
leave
addr16
sti
loop
cli
adc
leave
pusha
sbb
push
test
xchg
sub
sub
test
mov
mov
cmpsl
sti
xchg
cmp
add
pop
sub
push
push
dec
and
rep
pushf
inc
pop
into
lds
imul
xlat
out
and
push
movsl
dec
inc
jne
je
push
popf
pop
lods
push
call
dec
add
xor
jmp
sbb
pop
or
push
cmp
add
sbb
lea
dec
out
mov
and
sbb
xchg
dec
cmp
movsl
imul
xchg
add
shrl
cmp
insb
aam
testb
mov
loop
add
jne
sbb
pop
lock
sbb
ja
cmp
sbb
mov
outsl
push
inc
xlat
xchg
push
out
cmp
aaa
jno
ss
xchg
mov
arpl
pop
mov
mov
and
leave
xchg
mov
cmp
and
leave
push
pusha
testl
pushf
mov
rorl
lahf
jnp
inc
xlat
jp
mov
mov
inc
or
jb
fidivs
xchg
sub
enter
shr
jo
sbb
add
daa
cmp
xchg
sub
loopne
mov
cmp
lcall
test
mov
fimull
cmp
frstor
xlat
cmpsb
test
mov
dec
fcomip
fcomps
or
push
outsb
dec
sub
or
icebp
or
mov
adc
aas
es
xlat
push
pop
ret
jae
jne
lods
mov
sar
loope
sub
push
popf
subb
popf
mov
cmpsl
ds
in
cs
sub
mov
dec
fcomip
in
and
std
xchg
aaa
inc
fdivp
jae
imul
stos
sbb
fucom
and
sbb
mov
xor
fcomip
insb
push
inc
fldl
test
jns
loopne
adcb
adcb
xor
sub
or
mov
nop
daa
iret
shl
jle
in
and
push
aas
hlt
mov
mov
cmpl
mov
cmp
imul
cmpsb
imul
jmp
inc
push
sbbl
adc
inc
imul
cwtl
addl
arpl
scas
lahf
and
and
sub
test
sub
jns
and
xlat
pop
out
jns
fbld
hlt
bound
add
cltd
scas
aad
jbe
enter
icebp
adcb
jns
jns
hlt
mov
jns
sti
loope
or
fs
loop
pop
mov
bnd
sbb
mov
pop
stos
je
fdivp
sbb
outsb
adc
cmpsb
sarl
outsb
std
mov
mov
movsl
lcall
push
adcl
push
adc
out
sub
inc
fsubrp
lcall
pop
sti
xlat
jmp
mov
sub
movsb
jl
lods
test
pop
jb
mov
fldenv
mov
movsl
dec
push
icebp
inc
fldcw
sbb
jmp
dec
aad
fld
push
sub
or
sub
mov
fdivs
fprem1
andl
in
or
xchg
call
mov
jmp
or
popa
dec
add
dec
or
xchg
push
sarb
cmp
dec
push
dec
pushf
and
out
movsb
cwtl
sbb
cmpsb
mov
xor
and
xor
mov
mov
mov
or
sbb
rorl
adc
mov
loopne
push
mov
mov
inc
repz
movsb
xchg
mov
ds
mov
lea
cmp
adc
sti
addl
dec
sub
popf
jnp
cmc
int3
test
mov
push
sbb
enter
fistpl
adc
mov
idivl
xchg
ljmp
sub
cmc
mov
jbe
jne,pn
cli
cs
add
std
sti
test
mov
mov
mov
push
test
mov
and
in
into
rcll
lcall
ret
imul
jb
mov
dec
in
mov
xor
mov
outsb
iret
cmpsl
mov
shrl
fisubs
call
push
inc
std
loop
push
int
sub
inc
cmp
xchg
fs
fmuls
ficoml
or
pop
inc
sbb
insb
iret
aad
sbb
repz
and
xchg
call
dec
pop
jmp
push
mov
dec
popf
add
clc
in
aaa
inc
sbb
mov
mov
mov
push
fldl
jp
daa
lods
sahf
add
inc
cmp
fwait
in
mov
inc
add
xchg
scas
pop
pop
movsl
dec
popf
roll
push
jecxz
data16
jbe
adc
in
repnz
aaa
lret
push
sahf
jbe
stc
jmp
push
adc
in
xchg
or
popa
sarb
or
jno
cld
int
enter
cli
push
jmp
sbb
and
mov
inc
call
mov
push
in
ret
pop
enter
mov
ret
jns
jecxz
test
mov
daa
jecxz
or
js
pop
xlat
cltd
in
jmp
add
in
mov
int
sbb
ficomps
xor
shll
into
rcl
sub
movsb
mov
sbb
out
xchg
insb
add
mov
add
pusha
out
jmp
lock
or
sbb
sub
xor
pop
lock
fiadds
scas
gs
shrb
sbb
mov
pop
add
mov
data16
fidivs
fldln2
test
cld
xchg
icebp
popf
push
mov
sbb
mov
aas
cmp
and
rcrb
mov
addr16
sti
jmp
xchg
cmpsb
call
mov
push
outsl
mov
insl
das
iret
insw
xchg
addr16
xchg
xchg
fbstp
sbb
sbb
aaa
into
dec
aas
daa
mov
jb
inc
fdivrl
pushf
jae
lret
cli
add
xchg
sub
sub
scas
inc
adc
test
jmp
xor
or
iret
mov
es
pavgb
daa
arpl
pop
mov
sbbl
mov
lahf
ss
mov
sti
fildll
imul
out
loop
testb
pop
and
scas
push
and
movsb
movl
std
mov
popa
clc
test
jg
fmul
mov
xor
out
stos
inc
lods
dec
mov
jae
push
fnstenv
or
xchg
or
testl
aas
lahf
and
lret
inc
fidivl
test
call
fistpll
outsl
push
jo
outsl
push
loope
lea
or
orb
mov
mov
in
imul
xchg
or
sbbb
mov
sbb
adc
sbbl
add
lahf
or
push
ljmp
jno
jle
fwait
mov
nop
mov
rcrl
pop
scas
repnz
data16
xchg
mov
jb
fmuls
nop
daa
and
sub
les
inc
mov
inc
ficomps
mov
testb
adc
mov
mov
leave
das
xchg
mov
out
mov
jae
mov
cli
xchg
in
cmp
orl
mov
add
out
inc
dec
push
jmp
scas
clc
jg
ret
enter
in
popf
xor
cmp
xlat
mov
gs
pop
cmc
testl
out
shll
xor
iret
test
cmpsb
push
aas
pop
cmp
sub
jl
add
cwtl
cmpsb
add
dec
fisubs
mov
adc
aas
xchg
cmp
pop
hlt
call
add
int
lcall
adc
dec
in
pop
xor
incb
popa
clc
test
cmc
mov
jg
lods
pushf
adc
jge
xor
xlat
xchg
mov
out
mov
insl
add
xor
jle
mov
das
lds
mov
mov
setno
test
pop
mov
add
repnz
movsl
adc
mov
das
je
cltd
xor
dec
in
lahf
cmpsl
ds
imul
and
pop
call
adc
push
fwait
mov
xchg
mov
mov
cld
jecxz
or
cmp
iret
and
cwtl
pop
call
pop
mov
mov
cmp
cmp
stc
pop
repnz
sbb
pop
dec
cmp
sarb
shrl
push
push
out
xchg
fs
xchg
mov
push
mov
sete
pop
in
sarl
dec
movsl
xchg
pop
icebp
inc
into
shlb
insb
js
mov
out
test
or
imul
pop
jge
sub
adc
fbstp
pop
data16
jbe
and
loop
ds
or
cmp
pop
rcrl
jp
insb
fbstp
sbb
nop
jl
std
xchg
fsts
pop
sahf
sbb
ss
clc
mov
fiaddl
scas
popa
clc
rclb
push
sbb
lods
inc
ret
xor
jmp
bound
mov
nop
ss
jno
pop
pop
scas
lcall
xchg
sbb
xchg
mov
arpl
fbstp
mov
push
ljmp
jno
mov
scas
inc
xchg
es
scas
int3
arpl
mov
lret
bound
mov
xchg
int3
sub
fimull
mov
cmp
push
mov
pop
out
mov
and
xlat
fsubrs
jbe
lret
mov
clc
es
shrl
push
push
lods
cli
xor
xchg
mov
movsb
mov
xlat
sub
icebp
mov
add
sbb
push
subb
sbb
lock
cmp
dec
ret
pop
icebp
mov
shrl
dec
and
sbb
imul
fadds
add
repz
loop
xor
add
or
push
test
dec
inc
scas
movsl
cmp
insl
aam
sub
les
dec
push
popf
lods
loop
leave
mov
mov
add
clc
dec
push
mov
adc
aad
cmp
out
insl
add
cvtdq2ps
jbe
mov
insb
mov
mov
das
dec
and
testb
lods
adc
lret
push
and
sbb
ss
out
aam
in
imul
ja
mov
mov
fsubrs
dec
imulb
pop
fs
insl
mov
out
pop
aad
xchg
fdivrl
add
aaa
cmc
push
mov
pop
and
inc
sahf
inc
xlat
loope
dec
jecxz
or
xor
pop
jge
inc
sbb
xor
mov
in
outsl
hlt
int3
arpl
aaa
ljmp
push
or
in
es
inc
fistl
stc
jle
stos
cmp
test
roll
popa
adc
pop
dec
push
mov
push
leave
jo
mov
dec
stc
nop
repz
mov
ds
fdivl
repz
das
push
ljmp
jno
in
loopne
pop
out
nop
daa
inc
adc
push
ja
mov
inc
mov
shrl
out
cli
xchg
adc
add
dec
mov
ss
outsb
aas
sbb
push
jmp
ss
hlt
push
inc
jb
jle
imul
xchg
nop
daa
mov
scas
inc
mov
mov
arpl
sub
jo
sub
xorl
or
testl
inc
fmull
inc
fstpt
pop
push
jmp
ficoml
pop
ret
repz
sub
out
xor
sub
push
imul
push
lret
out
test
cmp
jge
xor
mov
stos
subl
mov
dec
jae
pop
data16
scas
jb
in
leave
test
xor
jnp
mov
sub
mov
jbe
pop
in
pop
jmp
xchg
adc
add
mov
lret
add
dec
sub
outsl
fs
in
mov
adc
arpl
popf
xor
mov
mov
lods
inc
jae
nop
daa
sub
scas
inc
jbe
call
arpl
push
push
popf
ljmp
lods
cmpb
cwtl
stos
xor
gs
mov
sub
inc
fildl
sbb
outsb
stc
cmpsb
in
es
adcb
fildll
xor
data16
mov
enter
push
subl
pop
mov
js
push
stos
sbb
into
mov
xchg
imul
add
movq
scas
sub
sti
jb
inc
and
inc
mov
jne
lahf
xor
mov
fld
pop
adc
leave
pusha
mov
repz
scas
add
fistl
pop
xchg
or
xlat
sbb
inc
repz
and
dec
in
inc
or
jae
sub
push
xchg
cmp
aaa
push
out
popa
out
notl
subl
xor
or
sahf
xor
pop
fadd
pop
push
xorb
pop
mov
mov
hlt
arpl
cmp
and
rolb
or
push
aad
or
xor
xchg
rorb
xor
lods
inc
aam
mov
mov
sbbl
and
sub
ss
rcrb
fnstsw
inc
pop
mov
mov
mov
jns
shr
popl
dec
ret
fisttpl
sub
fcmovnbe
and
jnp
sbb
dec
stos
jle
stos
dec
sti
mov
loopne
and
into
pop
mov
sub
inc
pop
xchg
dec
sub
sbb
out
je
je
or
xor
jl
dec
cmp
mov
adc
stc
movsb
mov
and
popa
ret
outsl
scas
daa
leave
popf
into
pop
jge
adc
dec
lods
cli
imul
sbbb
subb
mov
loop
flds
lds
not
xchg
sbb
test
aam
cmp
xchg
xchg
andb
stos
cmp
sti
cmp
cmp
jecxz
jmp
cmc
movsl
lret
ret
cmpsb
fdivrs
fstps
cmp
jmp
nop
mov
dec
add
jg
js
sbb
cli
dec
mov
into
mov
xchg
aas
xchg
add
sahf
rcrb
cmp
and
data16
lds
push
sub
add
mov
pushf
cmp
insl
fsubl
insl
es
jns
pop
mov
adc
movsb
jge
xor
xlat
pop
mov
mov
leave
xor
mov
and
ficompl
cmp
movsl
pop
mov
stos
inc
cmp
pop
lahf
test
das
fisttps
jmp
idivl
pop
sbb
loop
call
fstpl
imull
cmp
sbb
sub
js
loope
loopne
jl
xchg
dec
imul
in
das
inc
lock
cmpsl
push
and
and
and
adc
sub
pop
mov
test
adc
aad
outsb
jnp
cltd
aad
pop
pop
pop
fistpll
nop
mov
add
pop
gs
in
int
daa
std
js
in
dec
lret
add
loopne
scas
dec
push
div
xor
aam
lret
and
test
cmp
sub
repnz
in
int
imul
add
jae
sbb
and
mov
cwtl
mov
cmp
aas
sub
test
jno
insb
icebp
lcall
pop
xchg
xchg
push
xor
lods
sbb
mov
and
mov
sti
mov
imull
lods
pop
xor
insb
lcall
jo
test
cmpb
sub
add
mov
in
pop
dec
shr
add
test
sbb
mov
fs
and
inc
push
in
orl
mov
dec
jne
aam
xchg
xor
lcall
push
std
test
fldt
outsb
and
in
imul
mov
push
imul
xchg
repz
cmp
andnps
mov
xchg
cmpsl
add
pop
outsb
lock
sarl
xchg
hlt
jns
stos
dec
adc
and
dec
pop
mov
cmpsl
call
out
dec
xor
lods
inc
mov
cli
mov
es
cltd
pop
mov
xlat
pushf
ljmp
sbb
cmpsb
js
negb
cmp
test
cmp
out
jge
sub
mov
jno
in
aad
push
cmp
jnp
mov
push
jno
es
addr16
int3
jbe
stc
add
jg
into
push
xor
je
cmp
cmpb
ja
test
bound
inc
mov
mov
push
outsb
cmp
push
pop
popl
fdivp
jg
ja
xchg
mov
fiaddl
pop
push
jns
icebp
rcll
test
adc
mov
push
shl
aas
push
sub
pushf
cmpsb
sar
mov
cwtl
out
and
push
mov
mov
outsl
xchg
sub
jae
out
stc
cmc
sbb
mov
adcl
inc
in
into
mov
daa
adc
jmp
lods
in
addl
xchg
mov
xchg
xor
jmp
add
lcall
jb
ret
imul
jno
xchg
and
and
aaa
mov
adc
dec
iret
cmp
nop
mov
in
xor
int
add
inc
aad
int
mov
fdiv
sub
sbbb
lret
mul
xor
jo
cmp
addr16
ja
mov
imul
sbb
fldenv
jo
mov
add
out
in
test
cmp
mov
jb
hlt
fidivrl
or
mov
adc
xor
std
sub
fcoms
ficomps
mov
int
shll
mov
add
inc
aas
mov
test
mov
repz
loopne
jecxz
mov
rcll
data16
repnz
add
sbb
mov
fdiv
mov
rol
push
adc
and
data16
jg
xchg
xchg
push
fisubs
mov
xchg
mov
and
imul
fcoml
scas
xchg
lahf
jo
out
idivb
std
push
add
lods
popf
push
cmp
mov
inc
mov
cmp
inc
ret
xchg
out
pop
push
mov
movsl
out
push
inc
sbb
scas
or
xchg
enter
xchg
rorl
les
push
mov
sub
dec
test
pop
fsubrs
and
xchg
insl
outsl
jle
mov
rorl
mov
lcall
cwtl
adc
std
imul
das
xchg
sub
push
popl
jne
fucomi
scas
leave
adc
mov
cmp
lds
cmp
cmp
push
sbb
mov
inc
jnp
pop
stos
pop
mov
test
mov
daa
mov
ljmp
sub
divb
fmull
push
fld
repnz
imul
gs
xchg
mov
repnz
iret
hlt
and
add
mov
jecxz
arpl
ss
pusha
dec
cmpsl
icebp
out
lods
outsb
xor
push
or
sahf
lret
and
sbb
dec
mov
and
pop
add
sub
add
pop
pop
lea
ret
mov
mov
insl
pop
xchg
and
fwait
mov
mov
ss
ja
rol
push
popa
enter
push
aas
pop
in
or
test
aaa
jo
cmp
dec
icebp
cmc
inc
rcr
mov
and
mov
mov
and
pop
insb
lcall
cwtl
mov
cli
inc
add
cmp
sub
fldpi
or
repnz
test
pop
sub
or
clc
lea
adc
shrl
xor
movsl
jle
lret
test
mov
out
mov
xchg
xchg
add
das
or
mov
pop
call
add
call
adc
mov
lds
cmp
in
jbe
in
test
add
inc
add
jp
push
decb
lds
dec
sbb
call
mov
or
ret
push
mov
dec
xchg
dec
lret
push
inc
hlt
sti
jle
or
jbe
mov
push
sbb
das
push
ficoms
add
xor
aaa
pusha
push
xlat
enter
xchg
psubw
insl
adc
pop
loop
mov
adc
cmp
jns
subb
jno
andb
mov
imul
mov
mov
lret
sub
add
movsl
sbb
loopne
outsb
repz
lods
lock
out
clc
mov
lds
push
or
jl
mov
adc
jecxz
sarl
arpl
lock
js
or
mov
mov
push
movsl
pop
push
push
into
jns
inc
arpl
loop
push
inc
popa
shlb
sub
jmp
lret
rorb
aas
flds
cmp
fwait
mov
dec
rorb
je
out
adc
adc
js
xchg
push
adc
push
shrl
out
mov
mov
and
adc
pop
daa
addl
outsl
pushf
push
sahf
mov
jecxz
cli
ficoms
loope
test
mov
sub
aaa
push
int3
cvtps2pi
xor
and
xor
scas
pop
aas
jle
inc
fistl
adc
jp
mov
das
loopne
jmp
xchg
arpl
shrb
mov
or
ljmp
jno
dec
sub
rcrb
xchg
in
fs
out
sbb
push
xchg
cmc
sbb
inc
xchg
add
inc
out
or
fistpl
xor
or
imul
pop
cltd
xor
out
and
mov
adc
jl
add
mov
movsb
mov
push
dec
mov
sbb
fwait
xchg
push
pusha
daa
pop
dec
jp
add
iret
xchg
adc
divl
jl
sahf
or
xor
jne
out
xchg
sub
mov
and
bound
rolb
arpl
mov
push
xchg
mov
jb
sub
rolb
stc
ja
aad
loop
hlt
cwtl
int
mov
mov
mov
sbb
aaa
out
cld
mov
fnstcw
imul
pop
sbb
ja
in
dec
rorl
aam
test
push
inc
xor
sbb
ja
dec
mov
mov
pminsw
jo
inc
mov
nop
inc
rcrb
lcall
mov
push
xor
push
push
jne
movsl
jnp
loopne
or
or
lahf
mov
mov
mov
dec
mov
pop
test
jo
add
into
out
lcall
cmc
cmpsl
ljmp
fbstp
sbb
sti
push
loope
lcall
inc
jae
push
mov
and
pop
push
stos
insb
testb
insb
mov
ljmp
mov
and
nop
stos
and
ss
push
pushf
mov
std
push
insl
push
jmp
fadd
inc
out
add
push
xchg
shll
ror
fmuls
or
fs
out
fists
add
or
push
imul
lods
les
movsb
sbb
out
cltd
jne
push
cmp
push
ja
inc
stos
mov
inc
pop
cmp
sbb
and
mov
mov
dec
int
test
push
adc
aas
pushf
loope
mov
dec
sbb
mov
lret
imull
mov
ret
scas
jl
frstor
sub
adc
stos
test
repz
push
bound
adc
add
jbe
shrl
cmp
xchg
test
sub
test
pop
sbb
in
xchg
imul
xchg
es
imul
je
push
add
enter
sbb
ret
cli
mov
mov
jb
jo
fs
ss
fidivrs
fists
pop
repz
scas
mov
sub
mov
mov
push
xor
ss
loope
jbe
mov
lret
fisubs
mov
pop
and
jae
pushf
iret
fldenv
mov
arpl
into
call
loopne
push
fcmovnbe
outsl
aas
push
hlt
and
out
lret
dec
pop
mov
loopne
sbb
jecxz
inc
xchg
aaa
lds
idiv
pop
sub
inc
xchg
lea
sarl
or
sbb
mov
pusha
jmp
fisubrs
enter
cs
cmp
cmp
std
out
sbb
repz
push
dec
mov
mov
cmp
and
mov
outsb
lahf
loopne
lods
mov
test
fistpll
mov
mov
daa
cmp
or
popf
xchg
leave
pop
adc
es
div
pop
pop
sbb
xchg
scas
stos
ljmp
testl
not
pop
pop
das
ljmp
push
in
ds
inc
sub
xor
imul
test
imul
shlb
pop
movb
sub
fcmovnu
ret
rorb
pop
adc
pop
in
jne
dec
jne
lea
ret
ja
sub
enter
pop
out
mov
ja
adc
mov
in
loop
es
into
xchg
lds
xlat
inc
cli
outsl
pop
push
pusha
or
xor
push
jno
xchg
xorl
sbb
ret
test
call
jg
icebp
jo
add
fiadds
or
fdivr
loop
cmpsl
not
gs
shll
hlt
fcomps
mov
add
sub
iret
xor
add
push
test
pop
es
aad
stos
inc
mov
pushf
lea
adc
in
outsl
adc
mov
imul
aaa
xchg
add
cmp
xchg
mov
cld
ljmp
rcll
adc
xchg
hlt
adc
sahf
rorl
cwtl
into
dec
xchg
std
adc
ljmp
xor
mov
enter
xor
cmc
and
and
testb
cmp
xchg
pop
sbb
cmpsl
xchg
ja
pop
dec
sbb
jae
add
rol
mov
testb
pusha
lods
movsl
shll
stos
sarb
fwait
dec
dec
out
repnz
mov
das
pop
xchg
out
fldl
cmp
adc
dec
jnp
test
dec
dec
stc
push
or
jb
or
fimuls
jo
cli
or
cmc
cmc
add
cmc
cld
lgs
arpl
adc
pop
sub
sub
mov
loopne
push
fidivrs
rcrb
xchg
pop
dec
enter
shll
movsl
xchg
std
adc
in
and
sbb
shl
jb
imul
pop
lods
out
dec
push
pop
pop
adc
das
mov
outsl
sub
cli
pop
pop
jnp
scas
inc
cmpsb
incb
cmpsl
sbb
js
xor
bnd
pop
sti
jge
pop
test
sub
popf
ret
movsb
push
mov
xchg
cmp
std
xchg
mov
shr
shrl
jecxz
xchg
sub
popa
pop
insb
mov
sub
addb
cld
jp
add
inc
insl
or
inc
imul
pushf
clc
fcoml
dec
pop
out
xchg
lret
or
loopne
and
pop
sbb
pusha
insb
push
and
hlt
and
rol
mov
mov
pop
pusha
xor
sub
daa
pop
shrl
adc
push
sub
aaa
pop
pop
inc
xchg
and
dec
cmp
stos
scas
dec
stos
outsl
outsl
ljmp
mov
or
bound
mov
das
hlt
mov
sti
int3
pushf
push
rolb
dec
fisubrl
cmpsl
mov
dec
aaa
outsl
xchg
push
or
lds
cmovae
aas
cmp
rcrb
out
repz
xor
fwait
or
in
test
sar
inc
xchg
out
mov
arpl
cs
repz
shlb
or
and
xor
xlat
push
test
leave
inc
lret
les
sub
xchg
gs
leave
aam
das
mov
addr16
mov
es
in
mov
or
pop
lahf
mov
sbb
and
push
pop
bound
sbb
xor
mov
cmp
sarl
dec
add
pop
cmpsb
std
lret
pop
sarb
jno
mov
push
or
push
mov
or
rorl
call
mov
push
add
push
mov
xor
lds
jo
and
adc
mov
xor
ret
jge
test
test
js
sahf
int
shll
xor
jbe
and
dec
and
mov
sub
pop
and
out
test
xor
sub
inc
ljmp
mov
inc
adc
insb
cmc
icebp
dec
std
adc
loope
jne
sub
dec
fisttpll
aas
mov
aam
stos
stos
jnp
scas
push
into
pop
mov
cmp
into
lret
insl
xchg
push
inc
pusha
mov
mov
je
xchg
sbb
outsb
push
jp
inc
fcomi
stos
and
inc
and
int
arpl
out
xchg
fwait
outsl
pop
jns
movaps
xchg
push
fbld
popa
mov
das
ds
pop
pop
adc
sub
es
push
fdivrs
or
add
scas
xchg
pop
push
pop
push
push
nop
mov
pushf
cmp
xor
xor
or
dec
or
xchg
mov
dec
std
fisttpl
lods
adc
dec
imul
cmpsl
xchg
pop
xor
xchg
xor
inc
out
aad
imul
push
and
pop
mov
sti
jo
or
imul
jmp
add
jl
xor
pop
dec
testl
inc
dec
insl
jno
mov
add
call
je
xorb
gs
jnp
mov
sub
sahf
sub
mov
es
inc
mov
xchg
sub
jge
fsubr
movsb
jae
div
scas
push
push
sub
or
stc
sub
xor
addb
sar
mov
push
es
xlat
lods
stc
cmpsl
pop
and
push
test
sbb
mov
adc
ror
outsl
push
and
aad
stc
or
movsl
sub
icebp
loopne
andl
adc
xor
xchg
fwait
ucomiss
push
cmp
jge
ljmp
dec
push
fxch
je
jne
pop
ficomps
mov
adc
rorb
outsl
dec
in
push
test
jecxz
pop
je
fstpt
popa
sub
dec
sahf
movsb
or
dec
adc
add
aad
jno
xchg
out
push
in
out
mov
xor
xchg
test
jle
mov
jl
and
sbb
ret
into
lea
cs
scas
cmp
xchg
add
lcall
in
lret
mov
ret
out
insb
mov
stos
xchg
lea
cmp
dec
jg
mov
cmp
mov
pop
arpl
jp
enter
jne
fcompl
add
std
xchg
cmp
popf
scas
aaa
xor
int
dec
leave
xchg
push
sub
into
cmp
push
lret
xchg
out
xchg
jl
popf
pop
sub
add
sbb
mov
andb
dec
inc
dec
movsb
mov
jecxz
dec
outsl
jge
mov
negl
dec
jno
cwtl
fwait
scas
fistpll
inc
fstps
adc
ret
movsl
scas
mov
in
movsb
cmp
adc
std
cmp
sbb
mov
pop
jbe
loop
lds
cmp
inc
fs
out
jmp
adc
enter
fsubrl
ss
sahf
and
push
mov
cmovl
mov
into
push
aaa
inc
int3
daa
les
or
movsb
pushf
mov
in
hlt
test
mov
loopne
add
stc
pop
pop
ljmp
mov
arpl
test
aam
mov
int
inc
idivl
and
imull
pop
pop
pushf
fisubs
popf
mov
cmp
div
mov
mov
rorb
ja
stc
aas
xor
out
cmp
mov
push
insb
inc
dec
add
lret
adc
in
cmp
jp
call
jecxz
xchg
es
and
aad
gs
rorl
fnstsw
enter
imul
addl
pmulhw
jl
cmp
mov
push
jl
push
mov
pop
jb
cwtl
aaa
pop
sbbl
sub
rclb
mov
mov
and
mov
inc
js
icebp
daa
xadd
sti
xor
push
inc
in
mov
rcr
jg
idivl
pop
push
call
inc
mov
fwait
aaa
jne
mov
dec
mov
int3
in
fistps
jmp
sbb
push
dec
add
popa
cltd
fmull
mov
push
aad
lahf
shlb
sahf
aad
inc
imul
cmpb
adc
aas
in
pop
mov
ja
rcl
out
push
and
in
sub
jg
adc
mov
xor
jg
gs
jns
mov
loop
push
mov
movsb
mov
push
dec
cwtl
add
cmp
add
mov
inc
dec
pop
repz
fsubrl
xlat
sbb
sbbb
lea
dec
mov
push
xchg
call
sbb
icebp
push
pushf
mov
push
or
pusha
rclb
rcll
xorb
cmpsb
push
inc
mov
das
dec
jp
xchg
in
and
mov
xchg
cld
sub
xor
dec
xchg
lahf
mov
test
or
add
mov
mov
aas
xchg
adc
adc
push
mov
bound
inc
jnp
cmp
mov
lret
pop
push
adc
xchg
or
stc
imul
push
mov
xor
pop
sti
addr16
add
mov
ljmp
sti
jb
mov
stc
lret
insb
repnz
test
dec
ret
aam
in
jp
movsl
mov
data16
mov
jl
fistpl
cltd
mov
ret
scas
mov
push
enter
mov
cmp
fnstenv
mov
mov
cwtl
cmp
or
xchg
sbb
lcall
inc
jnp
add
int3
dec
aam
sbb
sbb
cmpsl
cltd
and
in
xlat
inc
outsl
call
fs
mov
mov
imul
pop
cs
or
xchg
call
jb
xchg
je
test
mov
xchg
cltd
mov
sti
sahf
cmp
setnp
mov
loop
sub
and
jae
lret
aas
adc
inc
or
xchg
loopne
testl
ds
rol
push
addb
jg
dec
sub
mov
cmp
repnz
or
mov
mov
or
add
in
mov
push
sti
ffreep
sbb
iret
popa
int3
jne
ss
pop
dec
and
xchg
hlt
mov
inc
fidivrl
mov
das
dec
jp
lahf
sbb
or
xorb
sbb
jnp
dec
test
and
push
in
cmp
jge
sahf
pushf
cwtl
mov
mov
pop
cmp
xor
mov
fistps
jp
jle
int
imul
fistpll
push
int3
inc
xchg
out
adc
ljmp
push
mov
test
pusha
xlat
sbb
or
xor
dec
dec
adc
ret
mov
fists
dec
and
out
lods
nop
mov
sbb
sbb
pusha
cmp
les
aad
dec
shll
pop
mov
pop
outsb
add
out
or
mov
sbb
jo
or
add
adc
cmp
sarl
and
or
test
and
es
jae
or
stos
mov
mov
adcl
xor
neg
dec
loop
scas
add
push
inc
xchg
xor
push
gs
roll
add
push
sti
mov
pop
add
push
adc
xchg
adc
das
dec
mov
adc
stos
xor
shll
or
xor
js
add
jle
mov
sub
fldt
leave
xchg
hlt
jl
xor
add
mov
dec
sarb
lea
jne
mov
mov
sti
mov
outsb
adcb
das
lock
adc
jo
push
and
jge
mov
jle
or
test
sub
ja
flds
cmp
pop
out
xchg
mov
outsb
rol
push
mov
jmp
sti
xchg
insb
test
or
loopne
fistpll
dec
push
xchg
sbb
fbstp
mov
add
adc
dec
ljmp
stos
and
xchg
js
scas
cltd
dec
pop
test
ficoms
gs
pop
cltd
lock
pusha
mov
mov
jge
in
xor
ret
lcall
dec
lds
dec
int
jg
push
lahf
sar
stos
xor
jge
xor
mov
xchg
ret
iret
stos
gs
shl
or
notb
xchg
push
pop
nop
call
push
cwtl
arpl
push
adc
and
scas
push
and
out
mov
adc
je
data16
cmpsb
fbld
movsl
ljmp
fxch
rclb
dec
mov
mov
jl
fidivs
push
xchg
imul
or
sbb
sbb
push
xor
mov
aam
clc
or
call
ds
leave
or
add
mov
adc
andl
mov
repz
stc
bound
jb
inc
into
push
stos
xchg
loopne
push
outsl
mov
inc
xchg
mov
ficomps
mov
add
loop
popa
inc
push
orl
add
in
inc
lea
loope
dec
push
rclb
pusha
mov
cmpsb
xchg
sbb
push
xchg
cmp
pop
and
js
and
jo
les
add
jno
cmpsl
inc
mov
loope
scas
in
or
pop
sbb
inc
ret
in
sbb
sbb
pop
lahf
add
pop
jnp
xor
cmp
lds
scas
out
or
xor
scas
imul
mov
out
pop
shlb
cmpb
lcall
arpl
mov
popa
aas
lods
mov
ljmp
fldcw
add
adc
add
sarl
cmc
bound
sbb
and
mov
cmpsl
dec
lcall
iret
lret
shrb
outsb
inc
rcll
mov
jnp
in
inc
cmp
xor
div
test
cmp
rclb
lds
lods
push
adc
decb
mov
out
jae
fcom
cwtl
mov
sub
push
outsl
movsl
pop
xor
aaa
push
dec
aas
push
push
cltd
sti
push
jmp
sub
dec
xor
jae
outsl
or
cmp
cmpsl
lahf
lock
mov
jg
push
jb
ja
sbb
das
sbbl
sub
aam
ret
aas
sbb
bound
clc
mov
pop
bound
fwait
push
add
lahf
adc
subb
inc
adc
sbb
add
repz
and
mov
or
int3
repnz
jns
adc
mov
pop
enter
push
jo
or
data16
sub
call
pushf
sti
sti
stc
pop
cld
les
stc
sub
loope
popa
into
jnp
cltd
jl
scas
into
cli
xchg
in
lods
push
xor
jge
mov
stc
ret
sub
pop
nop
jb
adc
in
mov
nop
jecxz
ret
xorl
push
add
ret
push
imul
ljmp
cmpsb
mov
aam
addr16
and
das
scas
inc
mov
jnp
imul
rol
sahf
rol
push
outsl
cmp
xlat
or
mov
jl
jns
jmp
imul
jge
push
inc
fs
lds
push
fs
out
mov
fs
cmpsb
xor
sarl
fildl
fists
jmp
sti
cmp
nop
push
dec
sbb
call
or
sub
push
cli
inc
pop
in
add
sub
ljmp
xor
testb
jbe
xor
mov
jns
fucomi
dec
push
push
sbb
lock
cltd
xchg
mov
mov
int3
cltd
call
test
loope
inc
lock
xor
sarb
or
daa
ss
mov
xchg
lock
jmp
test
arpl
adcb
cmp
cwtl
cmpsl
or
jno
int3
dec
mov
das
scas
cmp
or
roll
push
outsb
into
mov
cwtl
es
pop
adc
fnstenv
cmp
rcl
xchg
ss
jge
cmc
or
mov
idivl
stos
jns
insb
popf
add
pop
idiv
out
enter
add
xchg
pop
and
fwait
dec
scas
push
adc
inc
out
loop
cmpb
and
sbb
clc
add
push
mov
data16
xchg
adc
lods
inc
mov
xor
xchg
or
jmp
nop
or
cmp
nop
daa
mov
inc
loope
sbb
mov
into
gs
cmp
ficoml
test
test
outsl
push
jg
lds
mov
rorl
fistpll
scas
inc
mov
enter
sbbl
fwait
loope
int
cmpsb
cmp
pop
cltd
les
das
adc
add
stos
and
xchg
pop
int3
push
in
std
jg
mov
push
jne
push
sarl
add
sub
mov
divl
adc
enter
imul
popf
sbb
mov
mov
shl
repz
adc
lahf
inc
mov
add
pushw
mov
pop
xchg
sub
mov
cmpsl
mov
pop
out
cmp
imul
add
js
scas
xchg
sub
push
sti
xchg
test
test
mov
xchg
inc
fldt
test
stc
jnp
add
iret
dec
and
and
mov
hlt
and
fidivl
inc
jnp
ja
clc
sbb
cltd
xor
cmp
mov
int3
sarl
jne
loop
ljmp
in
test
stc
push
mov
data16
pop
repz
push
call
lret
sub
sub
mov
ret
xchg
std
xchg
les
push
sub
inc
in
scas
inc
push
imul
gs
pusha
imul
xchg
scas
inc
int3
push
mov
test
pop
jge
test
outsb
add
filds
push
movsl
cmp
out
test
pop
xchg
test
ds
cmpsb
scas
inc
loopne
lds
push
in
negb
jp
pop
das
push
cmpsb
aaa
into
fbstp
or
int3
out
negb
xchg
cmpsb
movsb
cmp
jb
imull
int3
push
jmp
pop
inc
fadds
cmpsb
test
aam
add
cmp
sbb
test
mov
cmpsb
outsb
add
xchg
add
cmp
sbb
cmp
pop
lret
bound
test
sub
test
ret
pop
cmpsl
aam
loope
fwait
xor
sub
cmp
pop
icebp
mov
test
test
inc
repz
mov
repnz
add
out
ljmp
sbb
push
fwait
cmp
les
dec
jecxz
in
scas
push
mov
lods
push
mov
mov
movsl
cmp
aam
sbb
jnp
lret
movsb
das
iret
pop
lds
jne
and
test
lds
ja
and
sbb
jnp
and
add
jnp
and
insl
pop
sbb
cmpsb
and
jmp
movsl
and
pop
popf
xor
jl
mov
and
aaa
into
jnp
mov
shlb
jnp
lods
movsb
and
pop
lds
jnp
and
cmp
gs
and
outsb
out
jnp
mov
adc
ljmp
push
xchg
and
pop
mov
ss
jecxz
adc
insb
ljmp
xchg
and
mov
icebp
jp
pop
movsb
adc
dec
lds
in
pop
mov
mov
push
jecxz
adc
push
icebp
imul
xchg
adc
inc
out
imul
aaa
mov
cld
out
pop
or
adcb
out
dec
mov
in
xchg
std
in
es
jg
pop
hlt
cmp
xchg
and
sbb
xor
xchg
fisttpl
hlt
je
les
xchg
data16
iret
dec
ja
jae
fnsave
in
or
cmpsb
cmp
sbb
and
popa
loop
or
mov
fucomp
addl
jbe
shll
jbe
loope
hlt
sbb
push
in
popa
ficoms
or
sbb
push
fstl
data16
sub
push
int
jg
je
adc
iret
sbb
outsb
stos
pop
jnp
push
lret
xor
repz
rep
adc
decl
pop
repnz
outsl
fbstp
sbb
je
mov
lcall
rcrb
pop
ja
xchg
add
and
lahf
repz
sub
imul
dec
mov
ja
pop
hlt
inc
cwtl
testl
pop
mov
cmpsl
jnp,pt
mov
inc
pushf
push
out
bound
out
push
and
adc
xor
outsl
push
lds
sbb
mov
hlt
in
inc
dec
out
push
arpl
cmp
fdivl
out
and
push
out
add
cmp
jb
and
cmpsl
pop
movsl
sbb
push
jnp
jb
es
push
out
dec
pop
hlt
jb
pop
mulb
xchg
push
jmp
jp
fnsave
lahf
ss
cmp
out
test
mov
outsb
add
add
cmp
push
loop
jno
jbe
sahf
mov
ret
jne
notb
int3
arpl
in
and
xchg
inc
ljmp
cwtl
inc
xlat
rolb
push
xor
push
fnstenv
dec
pop
repz
add
and
mov
push
jle
shrl
lahf
adc
enter
aad
out
xchg
imul
xorb
lods
inc
outsl
push
push
mov
xor
xor
xor
mov
add
mov
lahf
ss
cld
xchg
das
xor
mov
mov
jbe
cmpsl
cmp
rcr
out
or
dec
fbld
cs
pop
inc
gs
js
testb
into
sbb
sbb
das
dec
cmp
stc
cltd
mov
jb
mov
add
dec
ss
scas
imul
out
rorl
add
jne,pn
pop
pop
notl
lods
mov
aad
hlt
notl
and
xorb
stos
lods
xchg
fld
gs
xor
xchg
xor
pop
mov
dec
mov
ror
pop
push
std
fldcw
fldt
push
out
js
jle
mov
cli
mov
repz
leave
das
pop
or
jg
pop
mov
xchg
push
lock
mov
fucomip
loope
and
or
cmp
push
nop
push
add
xchg
cmpsb
xchg
xor
push
adc
sub
inc
icebp
xchg
jl
je
repz
pop
test
push
cmpsl
inc
inc
loope
mov
xchg
push
cmp
nop
mov
dec
fiaddl
push
shlb
xor
pop
data16
lods
xchg
xor
adc
push
cld
pusha
and
dec
notb
adc
lods
cmp
push
fisubrs
push
fidivrs
cmpsl
sbb
cmp
push
stc
push
ficompl
bound
cmpsb
sub
filds
mov
mov
dec
into
mov
or
xchg
mov
ficoml
mov
scas
cmovo
inc
inc
out
std
jge
lcall
mov
imul
adc
sbb
inc
mov
and
cmp
xchg
mov
dec
and
pusha
ficomps
ficompl
rol
jb
enter
cmc
adcb
jns
jno
sahf
inc
in
xchg
mov
aad
or
push
in
xorb
test
in
and
sbb
sub
xchg
ja
xor
or
fsts
fistps
insl
dec
in
mov
fnsave
repnz
testl
push
inc
aam
mov
jmp
shld
cs
xchg
xor
inc
push
hlt
jge
shlb
jg
shll
xchg
mov
iret
and
adc
xor
bound
mov
jo
lret
fsubl
dec
ljmp
cmpsb
or
mov
sub
cmp
dec
inc
jmp
pusha
cmpsb
subl
adc
insb
xor
bnd
inc
add
push
mov
out
shll
jp
in
cs
hlt
cmp
mov
rorb
stos
dec
mov
ret
fstps
stos
jg
in
jbe
sbb
testb
int
add
cmp
mov
ss
aam
inc
add
loope
push
stc
lret
imul
mov
fnstcw
les
shlb
sti
dec
pop
fldl
dec
in
or
mov
clc
push
mov
loop,pt
jg
cmpsl
add
pop
xor
push
in
mov
mov
pushf
fisubrl
jno
sti
and
repz
cmp
jle
and
shlb
enter
pop
and
mov
in
cmp
cwtl
das
leave
pop
fs
mov
sahf
xor
loope
in
subl
fdivs
nop
jp
ret
jbe
jecxz
iret
adc
cmp
dec
addr16
pop
repnz
jns
jle
icebp
mov
mov
adc
and
inc
loope
js
dec
filds
es
in
in
sub
rep
aas
or
cld
xchg
test
nop
dec
jecxz
pop
adc
cmp
jl
ret
hlt
popl
lcall
and
popf
sub
pop
cmpsb
adc
into
or
cmp
dec
in
add
decl
pop
mov
adc
movsl
in
out
mov
mov
test
lret
mov
cli
xchg
lahf
test
jns
xchg
sub
inc
add
enter
jns
dec
je
insl
xchg
imul
fmul
xchg
sub
cli
adc
push
cmp
shlb
adcl
loopne
test
and
push
movsl
dec
inc
xchg
sub
imul
pop
fcomi
adc
sub
enter
lcall
adc
pushf
hlt
outsl
push
addr16
mov
nop
aas
rol
push
inc
mov
aam
push
lods
inc
xchg
fidivl
repnz
dec
ss
xor
repz
lret
es
or
xor
pop
sub
mov
pop
out
xchg
sbbl
leave
mov
adc
ljmp
je
adc
jno
out
gs
cmp
sub
popf
xchg
cmp
inc
jnp
test
sub
add
xor
mov
and
push
lods
inc
sahf
cltd
into
gs
sbb
jmp
je
lea
adc
lea
and
mov
push
jmp
dec
jo
mov
lret
movsl
sub
inc
push
xor
shll
shll
jae
push
movsl
inc
fimull
out
push
and
outsl
pop
jns
cmp
sbbb
stos
mov
mov
mov
ljmp
icebp
outsb
mov
pusha
xchg
scas
clc
sbb
mov
and
mov
jae
call
or
sub
and
push
pop
scas
inc
jne
adc
enter
add
xchg
sbb
push
jo
lock
ret
hlt
notl
sub
add
inc
dec
out
test
add
int
lock
fbstp
inc
sbb
xchg
xchg
sbb
mov
stc
call
or
cmp
lahf
imul
fnstcw
movsl
arpl
fucomp
mov
cmc
push
add
inc
cmp
jle
icebp
addb
mov
mov
jmp
dec
adc
mov
mov
or
ljmp
out
dec
movsb
xchg
repz
xor
cmp
dec
lods
mov
sub
add
mov
mov
jecxz
lret
push
or
lret
idivl
and
cmp
xor
hlt
lahf
sbb
dec
pop
sbb
leave
xchg
mov
notb
inc
outsb
xchg
fsubrl
and
int
dec
sbb
sub
jl
lcall
popa
adcl
and
pop
leave
add
adc
push
dec
imul
lods
scas
movb
xor
or
movl
mov
mull
cltd
in
or
xor
pop
jmp
mov
or
bound
jbe
dec
test
jmp
push
lahf
mov
push
cli
sub
sub
adc
js
xor
xor
inc
push
ljmp
jbe
cmp
cmpb
sub
fbstp
mov
xchg
lds
icebp
mov
leave
or
adc
imul
dec
mov
mov
aad
jns
inc
mov
xor
test
sub
mov
int
lds
repnz
shll
mov
add
enter
cmp
and
inc
fstl
jbe
lret
jp
js
or
sbb
repz
mov
in
lds
lock
mov
inc
fldl
daa
mov
mov
int3
pop
incb
add
imul
xchg
cli
cmpsb
cmp
rep
cmp
sbb
aad
and
mov
mov
sti
ds
cmp
shlb
sti
aad
mov
arpl
pop
cmpsb
cmp
mov
pushf
xor
mov
cmp
xor
xor
cmpsb
mov
jnp
pop
pushf
xor
sbbl
movsl
cmp
inc
and
ja
cltd
xor
ret
pop
shlb
cmpsb
cmp
sub
lcall
movsb
cmp
xchg
xchg
sub
call
mov
jnp
cmp
mov
and
pop
push
xchg
sub
and
cmpsb
cmp
cmpsb
cltd
mov
or
mov
add
and
pop
loopne
and
js
and
ret
repz
and
sbb
cmp
popa
and
fistpll
cmpsb
cmp
cmp
add
rcll
xchg
stc
test
inc
fnstenv
mov
mov
andl
sbb
fsub
jge
repz
and
ret
pop
orb
add
and
sub
lds
pop
negb
fldl
int
add
mov
in
mov
sbb
mov
loop
mov
ret
loopne
sbb
loope
xor
cmp
mov
addb
lock
stc
adc
add
mov
andl
lret
fcoml
or
jne
cmp
jns
subb
mov
popf
xor
loopne
mov
fidivrl
repnz
das
mov
mov
mov
add
mov
int3
loop
lcall
inc
dec
pop
xchg
add
mov
xor
pop
in
aaa
fwait
xor
stos
xlat
outsb
sbb
add
sub
mov
insl
add
inc
fsubl
dec
cmp
jns
cmp
pop
lods
stos
test
mulb
mov
xchg
inc
lds
mov
stc
int
rclb
add
pop
repz
mov
fdivrl
aam
jns
sbb
pop
mov
test
iret
mov
mov
xchg
les
mov
cli
push
sbb
pushf
test
shll
test
fisttpll
mov
js
mov
xchg
mov
ror
les
and
jmp
sbb
pusha
mov
es
pop
mov
pop
int3
arpl
es
bound
mov
cwtl
leave
pusha
or
dec
test
cmp
out
sub
pop
call
js
popa
jg
mov
int3
sbb
ds
les
lret
gs
mov
mov
cwtl
and
js
pop
cmp
cmpsb
xchg
mov
test
fistpll
loope
lods
idivl
sbb
fsubrs
cmp
mov
lahf
mov
or
test
mov
cmp
pop
and
iret
data16
aad
lret
incl
or
jns
sub
xchg
pop
jns
or
cwtl
das
test
and
hlt
pushf
mov
nop
pusha
push
dec
data16
inc
jp
add
hlt
lds
mov
call
jmp
ret
dec
fistps
mov
jbe
shlb
ret
adc
in
test
push
mov
jno
bound
xor
push
add
xor
lea
or
movsl
xlat
cmp
scas
ljmp
mov
and
push
lea
inc
xchg
movsl
pop
out
aad
insl
add
std
out
test
sbb
mov
jnp
mov
and
cltd
and
mov
inc
jge
sbb
sbb
test
lret
push
lods
mov
mov
cs
lret
cmpsb
scas
in
pop
pop
scas
xchg
sub
inc
pop
divb
push
movsl
xchg
pushf
clc
iret
rclb
sbb
and
fs
and
mov
mov
jmp
mov
bound
mov
mov
fcomps
mov
inc
adc
dec
push
xor
out
aam
lahf
jbe
stc
lods
inc
ljmp
sbb
jb
andb
mov
rcrl
sub
dec
adc
dec
xchg
xchg
jle
mov
mov
push
movsl
dec
sub
test
add
lock
ljmp
lea
xchg
loope
movsl
rol
sub
repnz
jg
sbb
dec
push
push
cs
call
cmp
xor
push
jmp
push
test
pop
mov
jo
pop
jnp
push
push
jg
inc
xchg
gs
push
imul
pushf
inc
mov
inc
call
add
xor
out
test
cmpsb
ret
ficoml
and
sbbl
jns
push
jmp
ret
pop
daa
in
inc
fstps
xor
add
ret
or
outsb
jl
and
aam
xor
pop
fs
xchg
sub
mov
shl
psrld
add
test
movsl
cmp
mov
mov
mov
in
or
and
fsubrs
andb
sbb
pop
insl
mov
gs
push
mov
lods
daa
addb
mov
aad
cltd
fsubl
cmpsb
int
inc
fsts
lret
bound
ret
mov
sbbb
mov
and
test
movsl
ffreep
pop
ror
gs
std
adc
adcl
push
mov
movsb
cmp
mov
mov
jl
flds
pop
sbbb
or
push
jg
and
sar
mov
daa
pushl
lds
inc
xchg
leave
pusha
enter
aad
outsb
add
mov
scas
inc
mov
mov
dec
loopne
xor
inc
cmpsl
cmp
test
inc
ficompl
test
inc
dec
loopne
lds
nop
inc
flds
cmp
test
add
mov
movsl
scas
inc
push
sub
inc
pop
push
inc
flds
dec
loopne
jne
inc
data16
in
testb
fwait
dec
fucompp
orb
test
sub
inc
xlat
in
jg
mov
sbb
inc
fiaddl
popa
jl
xchg
and
clc
push
fmuls
push
test
lret
cld
in
clc
sbb
hlt
mov
jo
outsl
mov
ret
cmc
mov
movsb
xor
push
adc
sub
lret
insb
add
mov
lea
rorb
jae
cmp
test
and
inc
leave
pop
jbe
stos
inc
in
in
into
add
pusha
cmp
stc
xchg
and
xchg
or
sti
daa
mov
and
fadds
test
fstpl
sbbl
push
lahf
xor
mov
mov
clc
xlat
outsb
sub
adc
jle
lds
adc
mov
cmove
jne
mov
bound
cmpsb
cmp
sbb
les
pop
test
cli
push
jg
fwait
scas
inc
in
xor
mov
xchg
test
inc
faddl
sbb
sahf
dec
cmp
aas
mov
pop
repz
add
mov
inc
pop
les
andl
mov
fwait
es
int3
arpl
push
mov
xchg
aam
test
sub
test
je
push
jmp
lahf
and
inc
cld
add
stc
dec
movsb
cmp
test
out
xchg
inc
fcmovb
out
mov
loope
in
sbb
fbstp
sbbl
adc
and
mov
sbb
or
and
pop
hlt
mov
jae
mov
mov
inc
ficompl
mov
movsb
je
jnp
cmpsl
fnstenv
rolb
mov
and
pop
fwait
push
mov
jbe
pop
test
xor
stos
ret
repz
lret
sbb
dec
or
arpl
lock
mov
pop
lock
sbb
jnp
arpl
push
sbbl
xchg
pop
repz
and
icebp
push
pop
hlt
inc
sbb
pop
dec
jbe
lock
lcall
out
dec
fs
aas
pop
fnstenv
ds
lock
jle
test
sbb
xchg
or
sti
push
pop
out
xchg
pop
cmc
subl
stc
and
pop
hlt
inc
push
and
hlt
scas
les
negl
out
fs
cmp
dec
loope
push
add
mov
dec
jecxz
incb
das
stos
pop
hlt
sbb
jnp
sub
fwait
xchg
mov
ret
stos
pop
cmc
sbb
pop
mov
pop
push
jmp
cmp
lock
orl
call
out
fucomi
jg
out
pop
icebp
fbld
jg
pop
push
push
in
nop
jb
scas
mov
lret
scas
inc
std
lret
mov
into
push
out
shlb
repnz
fwait
out
push
adc
cmp
mov
inc
fiaddl
mov
jnp
xorb
add
mov
stc
mov
dec
loope
sti
arpl
sub
xor
cld
inc
add
ja
push
lods
sbbb
add
sub
insb
dec
inc
jecxz
jne
cmpsl
ds
test
iret
pushf
cli
xchg
psubsb
mov
xor
les
inc
cmp
mov
mov
add
pop
dec
push
in
cmp
dec
inc
fnstsw
dec
adc
jp
dec
jg
inc
xor
bound
push
pop
les
cmp
cli
push
xchg
int3
jnp
fwait
lods
push
in
lock
mov
je
inc
faddl
adc
clc
imul
popf
or
jge
test
shrb
mov
inc
adc
pop
pushf
mov
daa
and
arpl
call
add
and
mov
pop
pop
cmpsb
inc
cltd
les
repz
and
push
mov
and
push
shrl
mov
aam
or
and
mov
fmuls
ret
mov
subl
pop
mulb
sbb
nop
and
inc
shrl
mov
aam
cmp
es
fcoms
jne
ljmp
fsubrp
mov
fdivrp
push
mov
push
testl
jge
mov
push
testl
outsl
ss
outsl
testb
arpl
push
jle
dec
mov
int3
adcb
dec
nop
daa
aas
and
out
mov
cld
xchg
iret
mov
and
out
inc
sub
fbstp
inc
js
xchg
xchg
sub
lods
inc
fucomp
pandn
add
xchg
sub
fidivs
fdivl
sub
fadds
das
mov
out
sahf
movsl
into
gs
mov
outsb
add
xor
lds
cmpsl
ds
stc
xlat
aas
inc
fldcw
scas
out
and
cmp
sbbl
ret
xlat
pop
scas
jmp
jns
pop
scas
inc
js
test
jnp
ljmp
call
pop
or
stc
push
push
and
lods
test
cmp
mulb
and
push
sbb
mov
mov
xchg
push
and
mov
push
jns
pop
stos
addr16
pop
ret
stc
hlt
push
mov
dec
outsb
mov
popa
addr16
xchg
gs
add
jmp
mov
aam
cmp
push
test
mov
shll
xor
loope
loope
inc
or
insl
cmp
addr16
jno
test
push
lods
fbstp
stos
inc
test
mov
sub
gs
lret
inc
push
or
nop
fwait
adc
int3
popa
clc
mov
scas
loope
and
xchg
dec
gs
stc
test
push
in
mov
fdiv
mov
gs
lock
sub
jne
xor
mov
gs
cmc
insl
or
and
push
add
jb
push
lods
scas
test
outsb
test
dec
in
adc
out
inc
xchg
data16
insl
lock
mov
push
jmp
add
mov
mov
movsb
loop
pop
cmpsb
popa
clc
xlat
push
dec
out
incl
popf
xor
cmp
inc
fst
repz
jmp
js
call
xchg
lea
inc
fcmovb
inc
sbb
orl
xchg
xchg
js
and
pop
ss
pop
push
andb
ljmp
or
jge
jge
mov
leave
pop
jb
fisubs
loopne
add
insl
add
sub
in
jae
mov
mov
pop
add
or
pop
shr
mov
push
sahf
mov
lret
std
jne
ret
inc
fildl
xchg
sub
inc
push
sub
daa
mov
mov
sbb
ret
push
add
out
mov
add
cmp
inc
fistpl
stos
fwait
xor
pusha
imul
sub
test
ja
les
lahf
and
stos
out
pop
sbb
arpl
arpl
arpl
add
mov
fsubrs
push
and
loop
xchg
sbbl
mov
dec
fistpll
fmull
and
mov
push
daa
or
mov
push
call
or
mov
mov
xorb
movsl
ret
cli
xchg
mov
dec
mov
sub
lods
subl
mov
loopne
mov
in
insb
add
adc
mov
icebp
mov
mov
jp
sub
hlt
mov
mov
mov
xorb
pop
cmc
dec
sub
xchg
in
hlt
mov
mov
call
mov
rcrb
mov
mov
jp
scas
pop
hlt
loopne
sbb
cmp
in
mov
lret
mov
into
fbstp
jmp
xor
or
mov
fnstenv
cmpsl
pop
out
fdivrs
out
xchg
dec
mov
jg
or
movb
pushf
sbb
adc
jne
mov
jo
addb
or
test
or
and
adc
cmpb
mov
fnsave
lds
adc
push
mov
repz
rclb
test
fsubs
xor
pop
repnz
jecxz
jne
or
lods
movsb
push
jmp
adc
sti
jae
insl
xor
in
jbe
shlb
fildl
mov
inc
adc
shll
loop
fistl
test
ret
mov
mov
mov
mov
test
sub
push
iret
out
bound
sbb
cwtl
or
adc
inc
aam
mov
sbb
dec
fcomi
add
and
popf
stos
add
xor
inc
aad
cmp
popa
pop
push
sub
rclb
mov
sub
movsb
and
shlb
mov
ret
xor
add
loop
xchg
cmpsl
sbb
jae
pop
jmp
inc
and
inc
sbb
push
jnp
mov
cmp
mov
xchg
test
xor
xchg
mov
repz
test
ljmp
mov
jg
ret
mov
pop
repz
jecxz
and
andb
cli
orb
sbb
aas
aaa
adc
inc
aas
cmp
test
mov
push
or
ret
outsb
xchg
nop
out
js
push
js
xor
ret
xchg
mov
or
rorl
addl
or
lods
int3
adc
out
aam
fildl
lret
adc
mov
test
test
inc
std
subb
into
fwait
arpl
jne
lock
mov
push
cld
adc
out
sahf
pop
jae
mov
cmp
in
movsb
fwait
cmp
jbe
mov
aas
rcrb
sub
mov
or
or
and
fld
and
cmpsb
mov
inc
jno
and
shr
rorl
push
hlt
fdivs
rcrb
cli
in
lahf
outsl
inc
mov
shlb
xor
test
xlat
jae
bound
mov
pop
inc
cli
lods
ret
iret
xchg
push
or
mov
jb
out
xlat
outsb
and
cmc
mov
scas
sub
xor
enter
out
cmp
imul
mov
add
xor
push
pop
hlt
mov
pop
repnz
test
jns
mov
xchg
sub
pop
std
mov
das
sub
imul
iret
icebp
lea
add
mov
push
mov
aad
leave
push
lock
and
push
out
inc
pop
icebp
jae
outsb
add
popf
je
sbb
mov
push
inc
sbb
jo
insl
ret
push
adc
sub
das
mov
dec
jecxz
dec
in
add
push
mov
sbb
xchg
pop
mov
or
inc
fdiv
sub
rcrb
inc
jge
fisubrs
jb
out
mov
bound
cs
dec
call
or
insb
cmp
sbb
cmc
mov
daa
cmp
xchg
push
in
cmpl
mov
fwait
or
push
push
in
xchg
js
cmpsl
add
fxch
call
sub
push
mov
dec
mov
rcrl
rcrb
icebp
jnp
and
cltd
xor
xchg
sub
leave
mov
insl
sbb
push
push
mov
icebp
test
xchg
sahf
sbb
enter
lahf
cmp
rorb
sub
adc
repnz
and
bound
addr16
add
dec
mov
test
dec
aam
or
mov
inc
cmp
pop
pusha
jne
cmp
lods
mov
out
ret
hlt
adc
inc
adc
in
test
mov
mov
jmp
sub
cmp
jecxz
pop
dec
fisttps
lods
data16
fnsave
test
xor
mov
pop
mov
jp
neg
jne
incl
cwtl
xor
xchg
jge
pop
mov
sahf
sbb
aam
cmp
and
pop
repnz
inc
push
in
je
jns
jp
je
fwait
xchg
cs
xchg
sub
out
mov
and
andb
loope
movl
adc
imul
pop
fnstsw
sub
test
int3
inc
jb
loop
sti
cmp
jnp
lods
push
xchg
mov
out
mov
mov
xor
push
imul
inc
push
loope
shlb
xchg
iret
inc
xor
inc
mov
push
leave
shll
mov
or
divl
gs
pop
mov
jae
adc
jae
and
lds
jle
cmpsl
xchg
and
fcomp
push
pusha
xchg
loope
lret
loop
sub
cli
test
stc
jmp
mov
mov
popa
add
nop
mov
mov
mov
in
in
ds
xor
je
cmp
xchg
nop
cmpsb
js
aam
mov
jmp
or
mov
jg
xchg
shrb
test
lock
cli
es
xchg
dec
inc
fstpt
dec
jecxz
lcall
inc
ljmp
popf
inc
and
inc
out
cwtl
test
inc
jmp
in
adcl
or
jae
pop
icebp
cmp
adc
add
xchg
ja
data16
mov
and
mov
mov
jb
pop
mov
gs
push
std
xchg
paddq
jo
sbb
fwait
mov
loop
call
sub
lea
and
and
dec
dec
mov
into
mov
lcall
mov
mov
std
fldt
add
inc
mov
mov
pop
std
negb
mov
jo
stos
inc
aam
jae
nop
cmp
in
or
jg
icebp
leave
stos
add
or
mov
jmp
cmpsl
sub
jb
mulb
lahf
les
mov
ret
icebp
and
addr16
fdivl
cmp
nop
flds
fs
mov
ficoml
out
mov
data16
cs
cmc
inc
dec
test
xor
dec
sbb
xor
aad
ss
pop
lcall
add
add
xchg
aad
test
data16
dec
js
mov
cmpsl
fisubrl
push
rol
jns
test
push
stos
adcb
cs
test
fwait
out
pushf
hlt
cmp
mov
sbbl
push
fnstcw
aad
mov
test
sub
loop
jnp
dec
xchg
mov
in
out
hlt
lock
dec
sbb
dec
jo
psubd
xchg
add
jnp
mov
mov
imul
mov
xchg
clc
jmp
lret
ret
inc
fldenv
inc
sbb
sahf
movsb
inc
subb
xchg
call
cli
add
sbb
daa
test
ljmp
scas
push
in
test
push
inc
test
mov
pop
adc
sub
jge
jmp
xchg
push
push
sub
test
cmp
pop
in
lock
push
push
xchg
jge
jns
dec
adc
mov
popa
lcall
mov
icebp
cmpsl
adc
pop
scas
mov
and
cmpsb
les
fwait
pop
and
mov
xor
jge
stos
xor
imul
loopne
inc
popa
push
add
in
mov
dec
add
jmp
push
jae
dec
pop
ficoml
ss
adc
lods
dec
push
ljmp
dec
sbb
dec
aaa
jnp
sbbb
loop
adcl
cmpsl
dec
mov
stc
mov
jns
loope
push
ja
insb
in
push
outsl
jg
fmull
cwtl
cmp
fcmovnu
xchg
jle
push
je
push
lcall
jl
cmc
imul
adc
and
pop
push
xchg
push
subl
psadbw
sub
imul
aaa
add
leave
or
xlat
test
push
lods
mov
test
into
ja
mov
push
icebp
iret
sub
in
adc
xchg
pop
in
lods
jnp,pn
lds
je
and
push
lea
or
mov
xchg
daa
mov
mov
popf
into
mov
push
sub
popf
jns
das
stos
xor
fistl
pop
clc
jmp
fidivs
cwtl
ss
sbb
inc
xlat
lahf
jecxz
lock
cmp
pop
add
gs
mov
mov
fcompl
dec
inc
inc
adc
mov
ja
jnp
mov
test
or
nop
mov
stos
aad
pop
xorl
cmpsb
cmp
dec
or
into
outsb
sub
pop
mov
add
enter
push
xorb
cmpsb
cmp
inc
add
imul
adc
mov
sbb
cs
fucomip
cmc
adc
add
sub
mov
bound
and
cmp
fsubrl
mov
repnz
sub
sbb
clc
push
push
add
je
mov
call
lcall
xor
test
xchg
fistpll
rol
imul
ret
dec
es
and
cs
push
or
jg
sbb
bound
je
in
aad
in
scas
or
pop
dec
mov
outsb
rcll
loop
adc
repnz
sbb
or
hlt
xor
icebp
inc
sahf
insb
out
ss
jo
add
mov
mov
xlat
fisttpl
jns
shl
inc
mov
aas
out
lcall
sub
out
push
and
pop
cli
cmp
pop
or
lods
sub
jp
mov
cltd
xor
scas
xor
mov
test
cwtl
movsb
lea
mov
aas
jns
add
cmc
push
imul
je
ss
cmpsl
xchg
daa
push
int
ret
lcall
xchg
sbb
scas
in
ljmp
jne
mov
mov
dec
pusha
mov
pop
pop
xchg
cmp
aad
outsb
in
inc
inc
xchg
ds
xchg
jbe
cmp
xor
enter
inc
sbb
rcr
popaw
std
cmp
pop
add
es
repz
mov
mov
xchg
xchg
test
jle
mov
sahf
cli
pusha
jle
test
jne
sbb
add
or
inc
ljmp
cmc
push
push
test
incl
in
and
xchg
mov
fsubrs
insl
mov
sub
out
popa
in
mov
cmp
pop
jnp
leave
mov
shlb
ret
cs
pop
pushf
and
dec
test
fldl
mov
lds
incl
push
xchg
pushf
inc
inc
test
mov
mov
lahf
cmpsb
iret
adc
xorl
popa
ret
jle
inc
fadd
or
adc
shll
xchg
mov
addl
cmc
ja
mov
fstpt
push
popf
inc
push
mov
imul
cltd
das
adc
mul
in
fdivrs
pop
pop
jno
push
adc
sbb
scas
sbb
push
popa
jno
aaa
xchg
stos
inc
or
sbb
dec
and
add
sub
pop
cmc
in
adc
mov
cmpl
cmp
hlt
mov
mov
mov
inc
dec
es
not
inc
outsl
imulb
arpl
mov
jns
sub
pop
lea
push
shrb
lea
xchg
gs
fdivl
xchg
xchg
jbe
cmp
or
pop
lock
ljmp
mov
push
push
outsb
mov
dec
insb
mov
js
shlb
jbe
and
fiadds
xchg
push
aas
mov
pop
rcrb
sbb
test
addl
xchg
jp
sbb
and
jmp
test
jle
stos
mov
es
inc
lret
lret
mov
inc
xor
inc
imul
mov
popf
ds
cld
xchg
lock
fs
rcll
mov
loop
sbb
cmp
xchg
xor
push
out
out
mov
or
or
cs
xchg
pusha
scas
mov
loope
sbb
xor
ss
push
out
xchg
test
jb
test
lret
nop
daa
std
dec
dec
loopne
push
scas
inc
push
lahf
addr16
shlb
mov
testl
sbb
sti
fwait
sub
jmp
cmp
fstpt
mov
push
mov
lcall
and
sub
cmp
hlt
mov
xor
sub
and
mov
std
sbb
xor
rol
fucomip
or
inc
inc
ret
lcall
in
stos
rolb
mov
mov
arpl
push
scas
inc
test
stc
inc
cmpsb
int
fsubs
pop
xchg
stc
jmp
sub
or
cmp
daa
mov
lock
fsubl
mov
nop
jecxz
arpl
jae
sbb
push
ss
out
sbb
mov
or
dec
nop
daa
and
nop
adc
pop
scas
gs
int3
arpl
xchg
cmpl
or
pop
out
es
mov
inc
shl
outsl
push
aas
ret
bound
pop
inc
ficoms
mov
cld
loop
pop
sahf
cmpsb
add
mov
fcmovnb
pop
int
mov
imul
add
push
jle
mov
add
es
fists
mov
pop
mulb
dec
pop
out
ds
cmc
mov
pop
add
push
fwait
shrl
jno
cmp
sub
pushf
cmc
cmp
mov
inc
test
lds
out
daa
sub
push
out
lods
into
scas
inc
repz
inc
mov
loopne
add
pop
shrb
repz
inc
in
fsubrs
push
xor
dec
xor
nop
daa
stc
sub
xchg
popf
popf
repnz
mov
jo
xchg
push
xor
xchg
arpl
les
xor
jne
in
data16
daa
mov
cli
ret
std
xchg
negb
inc
test
test
inc
mov
jle
push
jbe
inc
es
popf
push
clc
xchg
cs
jns
pop
imul
mov
mov
cld
nop
push
rcrl
in
and
pop
popa
inc
sub
inc
push
sahf
xor
adc
out
mov
ftst
jl
xor
adc
mov
inc
faddl
push
jle
lea
in
adcl
mov
or
pop
cmp
and
dec
movsb
scas
inc
aad
je
cld
lods
add
jp
adc
roll
cmpsb
cltd
xor
repnz
sub
mov
mov
mov
loopne
imul
adc
cmpsb
in
xlat
outsb
ja
lds
ljmp
out
and
push
sub
xchg
sahf
mov
mov
mov
or
icebp
push
xor
inc
xchg
push
lret
fs
insl
or
xchg
jbe
adc
insb
mov
adc
sbb
in
idivl
sbb
popf
xor
inc
fwait
xor
jg
inc
nop
popf
xor
push
dec
out
jnp
fildll
adc
ljmp
xchg
xchg
or
imul
inc
outsb
add
mov
push
push
out
insb
mov
mov
iret
data16
popf
xor
xchg
pop
repz
pop
sahf
and
fnstenv
mov
pop
scas
out
dec
xchg
sub
iret
pop
loopne
push
addr16
mov
push
arpl
xor
push
test
aad
lcall
mov
pop
ja
mov
pop
hlt
imulb
or
scas
outsb
gs
cltd
iret
mov
shll
push
loop
mov
pop
pop
icebp
ss
xchg
sub
push
or
mov
shlb
setnp
fisubrs
adc
mov
adcb
pop
call
sbb
imul
add
add
lcall
movsb
cmp
sub
aam
gs
adc
pop
cmc
mov
ret
xor
mov
sub
gs
push
adc
mov
fs
adc
xlat
outsb
out
mov
adc
addb
adc
lea
sub
push
mov
fiaddl
lret
xlat
cmc
mov
in
inc
fstp
cwtl
mov
dec
lock
mov
orb
movsb
mov
stc
nop
xchg
aas
xor
stc
nop
mov
fcompl
adc
lcall
add
jae
call
add
es
xlat
adc
lret
dec
xchg
aas
fwait
test
mov
push
inc
fldenv
dec
hlt
mov
movsb
cmp
adc
sahf
inc
sbb
insl
mov
and
push
int
shl
aas
add
mov
dec
loopne
rcrl
sbb
xor
pop
cwtl
not
outsb
jmp
or
jl
mov
imul
shlb
dec
fbld
ret
cwtl
das
mov
leave
pusha
call
test
mov
ficoml
fsubrl
inc
push
ljmp
xor
sbbb
mov
xor
dec
cmp
movsl
cmp
fdivs
add
xchg
lret
ret
sbb
mov
pop
cmc
out
es
inc
push
punpckhdq
cmp
cmp
adc
mov
stc
xor
inc
fdivl
pop
stos
inc
sbb
sub
sub
jne
loopne
xlat
outsb
adc
aad
je
int
rclb
stos
inc
stos
daa
data16
cwtl
inc
test
jbe
sub
push
cmpps
adc
das
jb
les
cli
xchg
pop
test
push
imull
inc
fisttpll
stos
stos
inc
sbb
loopne
jge
mov
scas
adc
stos
cmp
push
jmp
aam
fsubl
jecxz
add
iret
outsl
push
div
adcb
cltd
loope
iret
or
popa
xchg
cs
fwait
dec
jecxz
cmp
jl
sub
mov
dec
mov
xor
sbb
ret
fdivl
fs
notb
data16
ret
add
enter
add
cli
dec
push
lods
mov
mov
lea
jnp
scas
lds
sub
cmp
imul
in
inc
stos
mov
fisubs
pop
pop
outsl
mov
stos
push
testb
cmp
sbb
dec
mov
or
sub
std
xchg
movb
ret
mov
je
imul
pop
cwtl
pop
repnz
jbe
jo
loope
stos
xchg
leave
pusha
add
jg
in
xchg
adc
jge
mov
and
int3
cmp
push
dec
mov
inc
pop
lea
js
pop
jno
lds
xchg
push
cmpl
call
imul
adc
fs
mov
inc
ret
rclb
shrl
sub
xor
xchg
out
jns
add
mov
jp
cmpsl
loope,pt
pop
cmc
or
std
xchg
mov
dec
sbbl
rol
mov
sbb
les
or
repnz
mov
orb
lahf
xchg
sub
push
jnp
arpl
pop
lcall
xor
iret
push
adcb
sbb
bound
std
xchg
sbbl
out
flds
push
adc
mov
mov
iret
data16
gs
cmpsl
xchg
cmp
in
mov
ficoml
shrb
push
ljmp
jns
jle
outsl
push
add
mov
push
and
mov
sbb
add
ds
cmp
push
and
jg
jno
mov
adc
mov
aad
mov
and
sub
mov
scas
call
pop
sahf
roll
push
aam
jbe
cmc
fidivs
jmp
das
sbb
and
adc
and
ja
test
popa
fwait
jl
mov
mov
js
jbe
cmpsb
sub
in
aam
mov
es
lods
inc
inc
inc
jg
inc
mov
push
enterw
clc
addr16
and
insl
add
imul
xchg
sbbb
inc
mov
jecxz
aas
and
mov
pusha
movsb
or
sub
cli
push
jbe
pop
mov
mov
cmp
pop
divb
imul
cwtl
and
sbb
dec
in
cmp
cmpsb
fidivs
pop
repz
push
in
dec
sub
sahf
insb
inc
fstpt
mov
femms
pop
cmp
inc
das
icebp
mov
mov
adc
inc
xor
ljmp
mov
sbbl
pop
sahf
xor
cmp
pop
das
pop
fsubrs
mov
out
loope
add
xor
sbb
inc
sub
mov
jecxz
test
fwait
xchg
dec
jecxz
das
inc
fisubs
imul
sbbl
xor
mov
hlt
mov
fbstp
mov
push
push
push
adc
mov
inc
dec
int
arpl
and
jnp
mov
dec
push
test
ret
adc
shrb
lret
sti
dec
sbb
pop
sbb
test
jle
add
jmp
or
mov
nop
shlb
mov
xor
cmpsl
daa
aam
pop
enter
jp
pop
lods
sbb
mov
xchg
insb
adc
daa
mov
inc
dec
mov
hlt
mov
jl
insl
mov
cwtl
mov
cmc
jnp
and
les
js
mov
movsl
jle
cmpsl
loop
loope
pop
or
jg
xor
andb
jne
inc
repnz
jmp
int
out
xchg
cmp
pusha
xlat
xor
add
mov
mov
cmp
xchg
sbb
pop
dec
and
scas
pop
jnp
dec
repnz
inc
shll
cmpsb
lea
jo
test
scas
add
inc
lcall
lods
pop
fnstsw
test
rcrb
jns
sub
mov
or
in
mov
lea
lret
push
mov
add
xorl
rcrl
push
mov
data16
xchg
and
rcll
push
and
pop
divb
sbb
test
test
mov
xchg
push
dec
ret
cwtl
fdivl
fldenv
ljmp
or
sbb
aam
orb
push
std
popa
push
add
push
jns
jecxz
ja
loopne
lret
xsha256
cmpsb
sbb
negb
mov
lods
nop
push
jmp
int
mov
shlb
inc
fdivr
jo
shlb
inc
fadds
stos
sub
jns
gs
adc
sub
ja
and
adc
adc
inc
xor
xor
push
adc
mov
insb
add
mov
xchg
sub
insl
dec
leave
pusha
pop
mov
daa
pop
dec
xchg
sub
ljmp
pop
cmp
dec
dec
mov
cmp
movsl
xchg
mov
cmp
adc
test
insl
add
cld
cli
xchg
sarb
cmc
mov
flds
out
repnz
or
movsl
lcall
jmp
fsubrl
mov
das
xchg
inc
fincstp
push
int3
arpl
int3
cmpsl
jne
sub
xor
aad
enter
xor
ret
dec
mov
sub
add
icebp
mov
and
xor
mov
test
jg
push
mov
mov
pop
mov
pop
repnz
xor
negb
xlat
popa
pop
inc
fisttpll
lds
cltd
in
or
outsb
add
jp
and
les
inc
push
fsubrs
and
test
movsb
test
pop
sbb
adc
mov
or
aaa
into
inc
sub
pop
jp
push
icebp
cltd
das
out
xor
sbb
jo
and
jmp
outsl
out
xchg
out
xchg
sub
dec
outsb
inc
fdivrl
or
pop
mov
outsl
push
push
add
and
stos
xor
sbb
cmpsl
ds
iret
adc
fiadds
loop
pop
popa
mov
pop
jl
jo
ja
mov
fdiv
pop
out
aad
bnd
cmp
pusha
repnz
pop
sbb
daa
mov
loope
cmpsl
ds
arpl
daa
mov
mov
or
dec
mov
sahf
xor
addl
pop
movsb
test
ds
daa
mov
fwait
jo
gs
mov
xchg
out
adc
cmp
ret
inc
fisubrs
add
hlt
shll
and
xchg
gs
push
test
cmc
ret
mov
enter
lret
lret
mov
fisubs
lds
in
test
jl
je
clc
pop
push
mov
inc
jns
push
pop
es
pop
movsb
sub
imul
xchg
call
test
aad
xor
xchg
cmp
inc
leave
sbb
pop
cmc
test
repz
and
ljmp
mov
push
popa
mov
push
fidivs
out
cmpsl
mov
stos
stc
add
mov
aam
stc
inc
push
jg
inc
mov
fsubrs
nop
movsl
cmp
add
jno
int
push
pop
and
pop
cmpsl
hlt
adc
jle
mov
aaa
ja
lea
pop
sub
dec
jb
pop
cmp
imul
repnz
lea
sub
pop
cltd
lahf
push
cmp
fisubs
movsl
inc
and
aad
push
in
sub
cli
xchg
mov
adc
fdivrl
lock
lret
cli
xchg
mov
flds
sbb
sub
cltd
jp
add
adc
jne
pop
ss
mov
jo
scas
xchg
sub
xor
dec
jl
fbstp
sahf
lods
inc
xor
cmp
mov
gs
insl
adc
lods
inc
and
mov
push
mov
gs
xchg
sub
dec
mov
popa
mov
stos
inc
sbb
insl
mov
ret
cmpsb
cmp
pop
pop
out
mov
popf
xor
rcll
js
pop
loopne
test
lret
fxch
aam
sar
fbstp
hlt
mov
dec
mov
je
jbe
jns
rorl
cmp
shrl
fidivs
repnz
leave
pop
xchg
sub
insl
add
ja
aad
mov
inc
test
lds
dec
xor
push
insl
push
cmp
and
add
cltd
es
mov
mov
pusha
div
sub
push
test
int
sub
pusha
idiv
dec
jmp
push
sbb
mov
aaa
mov
out
outsb
das
push
lods
pusha
popl
sti
es
jbe
inc
inc
jo
out
xchg
mov
push
add
lds
dec
loope
imul
dec
movd
mov
xor
pop
je
pop
repz
adc
push
scas
push
in
or
fisttps
adc
popf
popf
mov
sbb
lock
adc
mov
mov
in
pusha
mov
test
js
fs
std
cltd
cmpsb
cmp
lods
dec
fidivl
into
pop
cmc
mov
loopne
movsl
lds
cmp
mov
fstps
mov
mov
imul
outsb
adc
aaa
xchg
sub
sbb
mov
mov
and
pop
lock
int
add
test
fdivs
mov
shlb
dec
in
imul
or
mov
fs
cmp
stos
loopne
jb
push
iret
inc
imul
es
test
lret
stc
subb
lods
lret
fsubp
push
mov
into
popf
xor
cltd
dec
fbld
mov
outsb
mov
mov
and
jno
mov
mov
jb
inc
les
xor
jno
xchg
cmp
sbb
cmpsb
cmp
fs
dec
stos
fs
cmc
mov
push
sbb
jg
and
insl
mov
mov
mov
push
add
sbb
mov
rcrb
xchg
mov
pop
repz
ret
mov
repnz
dec
or
lock
les
pop
int3
arpl
jge
dec
add
mov
hlt
mov
pop
adcb
mov
data16
nop
enter
inc
aaa
into
xor
dec
in
push
and
push
push
ljmp
pop
out
adc
aas
inc
xor
pop
cmp
pop
sahf
xor
std
dec
or
push
mov
cmp
and
out
xchg
sub
sbbb
jns
insl
dec
mov
les
sbb
test
lret
cld
pop
mov
xchg
dec
scas
loopne
loopne
and
lcall
and
add
insl
add
mov
mov
xchg
mov
fnstenv
int
cltd
pop
lock
clc
pushf
jae
fisubs
fistl
push
loope
xchg
pusha
testl
push
je
inc
in
stc
ffreep
inc
xlat
mov
push
out
jb
dec
fisubs
ret
dec
xchg
sub
outsl
ret
ljmp
out
lods
sub
fdivrs
adc
shll
jg
lret
test
flds
es
ret
pop
ljmp
cs
inc
pop
mov
fucomi
orl
cmp
bound
cmp
mov
add
jno
pusha
pusha
leave
push
xchg
test
cmc
test
pushf
xor
add
or
repz
in
mov
mov
or
jge
dec
mov
push
imul
mov
adc
adc
xlat
sub
call
or
out
push
and
dec
adc
imul
xor
cmp
inc
add
pop
lock
jno
mov
fsubr
movsb
lret
loopne
xor
flds
inc
mov
es
push
in
and
ds
jo
shlb
jno
fsubl
icebp
das
hlt
lds
repnz
or
cmp
ror
outsb
lcall
jbe
jo
stos
pop
push
add
bound
stos
inc
mov
fwait
jg
stc
test
push
xor
mov
inc
jns
and
in
push
insl
pop
aam
pop
sub
leave
push
push
pop
mov
ret
bound
fdivrs
xchg
or
add
out
std
mov
jmp
lods
shr
add
or
jno
pop
mov
sub
enter
scas
int
fsubrp
jmp
add
add
dec
mov
cs
lahf
ss
push
mov
dec
das
dec
sarl
pop
popa
cmp
and
xchg
jge
push
mov
imul
nop
xchg
mov
cmp
outsb
dec
imul
loopne
adc
mov
cltd
popf
or
fs
add
xchg
push
dec
pop
testb
in
push
fcomps
or
loopne
pop
cmp
mov
jmp
mov
mov
out
test
dec
jecxz
fiadds
scas
dec
loope
dec
das
hlt
pop
mov
int3
repz
sbb
cmp
scas
aam
push
fsubr
dec
mov
in
sbb
add
or
addl
sbb
in
pop
xchg
xchg
out
sbb
pop
stc
nop
sahf
cmp
add
cmp
cmovno
hlt
mov
arpl
pop
inc
and
or
mov
in
sub
jne
dec
jecxz
pop
int
ss
popf
fisubrl
adc
adc
pop
jmp
ret
scas
mov
sub
lds
pop
imul
pop
movsl
jl
inc
mov
lret
fsincos
in
test
sti
leave
pusha
mov
fcmovne
pusha
out
sbbl
pop
xchg
sub
xor
mov
daa
repz
push
mov
rcl
loope
pop
int
mov
sub
std
xchg
stc
sbb
mov
lahf
jo
scas
jl
sti
push
mov
xlat
sti
sbb
repnz
xlat
sti
xchg
ds
lds
jmp
ret
out
inc
fnstenv
out
out
mov
sbb
sti
bnd
sub
or
mov
mov
dec
stc
mov
in
and
mov
push
jmp
aam
pop
in
movsb
or
xchg
adc
inc
mov
adc
inc
sub
dec
mov
sbb
pop
fs
dec
xor
jge
aas
push
pop
add
jmp
pop
sahf
xor
jl
xor
ror
mov
inc
fsubr
push
js
dec
adc
lcall
inc
push
shl
call
jo
gs
mov
mov
lods
inc
lods
pop
icebp
fisubs
xchg
pop
fisttps
adc
pop
not
aad
movsl
push
add
jnp
popf
rorb
mov
mov
sub
test
addr16
jp
push
or
fbstp
xlat
inc
mov
movsb
pop
push
shrl
fmull
loope
rcrb
cmpl
aas
dec
and
xchg
push
mov
and
fldl
cmc
scas
loop
pop
out
scas
inc
iret
xchg
test
addr16
fxch
sbb
cmpsl
aad
stc
pop
test
sbb
scas
add
idivb
cmc
xor
lods
pop
lock
mov
test
mov
repz
and
scas
push
xor
xchg
pop
pop
std
and
push
jl
lcall
lahf
lock
adc
stos
int3
pop
icebp
roll
xor
lahf
dec
loopne
sti
adc
sub
inc
out
mov
negb
mov
nop
clc
push
mov
mov
pop
pop
dec
cmp
stc
fdivl
outsb
xor
outsl
bound
and
adc
mov
adc
pop
lds
pop
cltd
test
xor
xchg
inc
outsl
test
or
ljmp
lret
fsubs
jmp
fbld
adc
out
bound
push
xor
data16
inc
cwtl
rclb
movsl
pop
test
xlat
jo
or
lcall
sub
repz
ficoml
xor
push
cmp
arpl
scas
sbb
and
pop
push
in
adc
sub
pop
iret
xchg
adc
sbb
stos
imul
add
inc
xchg
popa
rol
negb
stos
scas
je
aam
jmp
outsb
aas
lahf
push
cmpsl
or
cmp
jno
sub
fsts
push
out
push
outsb
js
cmp
pop
push
addl
mov
jg
cmp
push
push
lret
iret
dec
in
in
dec
inc
dec
sbb
cmc
or
sbb
lret
bound
fcmove
jo
js
or
in
jle
dec
jmp
cmc
xchg
shll
test
mov
cmp
adc
subl
inc
inc
dec
loop
inc
outsb
sub
stc
out
mov
out
xchg
test
repz
ja
mov
inc
jo
jge
push
ja
subl
add
pop
sub
xchg
sub
pop
xor
insb
mul
sbb
xchg
mov
xchg
call
adcl
push
adc
leave
dec
imul
jp
notb
int3
pop
sbb
mov
adc
loop
ffreep
repz
xor
fs
ficoms
and
sbb
adc
sbb
mov
gs
inc
aas
lahf
cmpsb
in
es
mov
ret
fnsave
mov
push
inc
loope
insb
mov
sti
incb
ret
repz
in
xor
dec
sub
adc
lcall
push
mov
push
dec
fdivs
push
mov
fwait
clc
mov
in
mov
pop
cmpsl
cmp
repnz
cmpsb
enter
jns
out
es
insl
out
pusha
mull
pop
subb
ds
in
xchg
ret
orl
dec
jmp
or
add
push
xchg
sub
pop
mov
in
aam
stos
add
sub
sahf
jo
clc
xchg
cmp
inc
push
mov
cmpsl
movsb
pop
int
cs
pop
push
stos
xor
pushf
jns
xor
mov
inc
mov
xor
and
push
std
negl
enter
sub
movsl
fcomip
gs
pop
or
stos
push
les
or
push
xor
loop
adc
jnp
fiadds
lock
mov
pop
mov
adc
add
mov
int3
arpl
push
xlat
fwait
arpl
pop
xchg
stos
push
shrl
push
xchg
sbb
xchg
lahf
mov
movsb
outsb
push
mov
popf
sbb
or
push
pop
mov
or
out
xor
jnp
or
dec
jmp
pop
jae
xchg
aas
push
jmp
dec
hlt
adc
sbb
and
pop
or
push
pxor
in
jns
xchg
dec
lods
in
enterw
or
push
and
insb
mov
scas
ficomps
inc
fbld
inc
outsl
decl
or
lea
xor
das
mov
inc
loope
shlb
lahf
test
data16
xchg
mov
ds
mov
cmpl
pop
icebp
cmp
lret
repnz
nop
test
call
lds
lcall
mov
inc
pop
and
cmovo
xor
cmp
jl
ja
or
cmp
dec
cmpb
in
inc
ret
rcrb
jo
movsb
aad
add
adc
cwtl
das
jno
pop
mov
sub
cmp
push
mov
testb
dec
add
pushf
out
into
aam
mov
sbb
aad
addr16
cmp
mov
sub
cld
and
pushf
int3
mov
and
or
cmp
scas
lahf
ret
pusha
test
fidivs
loope
jbe
cwtl
push
pop
lea
jle
dec
push
arpl
test
aam
sahf
push
sahf
or
push
cltd
jg
inc
test
pop
lret
mov
add
loop
mov
nop
daa
sub
loope
fstpt
dec
jle
jmp
stos
sbb
jge
add
xchg
aad
xor
jp
icebp
adc
or
outsb
imul
sub
xor
dec
cmp
mov
add
popf
rep
mov
pop
iret
or
pop
hlt
xor
mov
push
pop
jbe
sbb
js
dec
jp
mov
xchg
stos
cmpsl
fwait
inc
jmp
sbb
adc
js
shlb
xchg
pop
xchg
or
adc
stos
inc
adc
movsl
jle
pusha
inc
ficoms
outsb
scas
xchg
or
push
xchg
push
cmpsl
adcb
mov
mov
fnstcw
sub
stos
scas
dec
loop
sbbl
or
arpl
shrb
sub
popf
and
xor
mov
add
sub
aas
mov
cwtl
and
add
push
lahf
mov
sti
and
adc
cmpsb
pop
shrl
movl
mov
icebp
mov
xchg
xorl
xchg
aad
sbb
dec
dec
cmp
popf
xor
cld
jnp
mov
out
jo
in
pop
clc
fcmovnb
jecxz
mov
pop
out
jbe
daa
les
cli
mov
push
jp
jl
into
cmp
adc
mov
jmp
ljmp
fprem
lock
add
dec
adc
fstpt
xchg
fiaddl
pop
ror
cmc
fildl
jmp
ret
sbb
lcall
jns
loop
imul
xor
sbb
out
pop
push
mov
loopne
xchg
stos
lea
leave
inc
xchg
cwtl
nop
cmp
enter
popl
int3
test
data16
pop
inc
mov
lret
mov
xorb
in
mov
mov
xadd
dec
ss
cmp
pop
push
dec
pop
xor
movsb
inc
mov
pushl
push
push
aad
and
fcoms
jge
pop
dec
jmp
pop
int
movsl
insl
test
mov
jge
loope
fcmovne
jmp
xchg
enter
mov
in
mov
add
loope
xor
jmp
test
mov
dec
xor
dec
jmp
std
mov
sub
add
imul
in
out
mov
jle
pop
ljmp
aaa
aas
pop
inc
jae
sarb
scas
pop
rol
pop
fdivrp
scas
push
rol
mov
jg
aad
xchg
mov
jg
cmc
fisubrs
addr16
in
enter
inc
pushf
fidivrs
fldenv
mov
jmp
ljmp
jb
popa
sbb
shrb
push
add
pop
push
call
add
sub
mov
and
add
ss
fsubs
dec
filds
dec
push
rolb
cmpsl
insl
mov
jp
daa
cmp
mov
xor
jae
adc
in
dec
stos
and
sub
jno
inc
fidivrl
insl
in
cltd
mov
nop
sbb
add
cwtl
sub
sete
test
or
popf
xor
pop
shl
push
in
fwait
push
inc
jno
cli
xchg
jnp
cmp
in
ret
pop
insl
or
dec
ja
dec
popf
sbb
repz
fldenv
jno
repz
leave
or
push
jo
xchg
mov
sbb
dec
hlt
mov
outsb
ffreep
je
fnstenv
jge
push
pop
int
jbe
fnstcw
gs
sahf
pushf
pusha
pop
mov
jae
cmp
sub
sbb
sub
cld
xchg
loop
dec
mov
sbb
icebp
jns
push
filds
je
mov
jno
mov
clc
es
or
jne
cmp
inc
sub
jl
lret
outsb
dec
enter
push
fwait
pop
xchg
dec
int
add
call
fwait
push
rcrb
dec
fisubrl
sbb
icebp
jo
dec
sub
jge
test
jle
cmpsl
push
mov
hlt
orl
cmp
xchg
xchg
mov
sub
xor
arpl
sub
pop
push
lret
dec
xchg
data16
push
cmp
dec
push
jbe
xchg
test
pop
leave
or
mov
test
xor
mov
add
pusha
xor
aas
aas
mov
jns
inc
xor
fdivrp
dec
lret
cld
int3
iret
ds
fmuls
fisttpl
fcmove
subb
xor
das
push
push
ja
les
sti
push
stc
pushf
sub
out
fs
test
mov
repnz
push
daa
mov
mov
pop
lret
inc
mov
sub
outsb
lret
sub
mov
lahf
push
fs
inc
push
lcall
adc
cmc
fbld
mov
or
sub
cmp
cs
fs
cmp
jo
les
sbb
adc
pop
in
sub
clc
in
clc
scas
mov
rcll
adc
push
pop
ret
gs
push
in
daa
addr16
pop
mov
lret
mov
fisttps
pop
inc
push
xchg
and
sub
lds
dec
cwtl
fsubrl
sahf
jae
sub
arpl
aad
jae
push
bound
cmp
mov
les
mov
jp
aas
mov
mov
inc
xor
xchg
data16
movsl
push
into
gs
repz
out
lcall
repz
insl
cld
aam
xchg
or
cld
loop
rclb
sbb
imul
sub
mov
rcrl
mov
pop
push
adc
pop
test
xchg
sub
scas
xchg
jl
mov
adc
add
xchg
insl
cmp
ffreep
inc
add
add
xor
mov
xchg
lahf
pop
pop
jae
in
pusha
imul
mov
aad
fcomi
dec
mov
in
jl
xor
mov
pop
lock
mov
test
mov
mov
adc
jmp
fcomps
popf
add
inc
mov
jbe
stos
insb
es
xchg
inc
sub
cmp
sbb
ficompl
and
pop
aas
data16
push
xchg
insb
movsl
or
sbbb
fcompl
lock
movsb
adcb
jns
ficomps
inc
movsl
dec
push
sahf
enter
popf
sbb
add
jl
jp
xchg
shll
cltd
mov
push
xchg
int3
movsb
xor
cmp
jg
mov
popa
sbb
and
push
push
pop
arpl
push
push
cmp
insb
and
scas
mov
mov
push
sti
or
push
pop
adcw
cltd
inc
movsb
in
leave
mov
cltd
leave
mov
and
in
les
ljmp
ret
pop
push
lcall
adc
add
jae
jp
xchg
shl
push
popa
pop
push
jmp
sarb
shrl
scas
sub
rolb
lret
ret
push
adc
fnsave
movl
lods
fwait
in
ljmp
loope
mov
xchg
lods
ficoml
outsl
lds
movsb
fbstp
icebp
xchg
mov
xchg
xchg
mov
sbb
insb
jbe
push
scas
lret
int
outsl
push
daa
jb
mov
sbb
ja
cmp
dec
inc
daa
mov
inc
push
fs
sub
inc
fst
xchg
popa
sub
imul
adc
gs
in
dec
xor
js
mov
divb
sarl
add
pop
xor
pop
dec
dec
push
or
leave
inc
pop
cmp
sub
sub
nop
sbb
pop
mov
aam
jns
push
mov
sub
cld
mov
mov
dec
std
iret
shlb
add
iret
scas
stos
xchg
fwait
cmp
pop
mov
and
repnz
stc
or
mov
loope
leave
push
ss
out
dec
mov
xchg
sub
sub
xchg
xor
cli
lahf
aaa
jmp
dec
mov
mov
xor
sti
mov
mov
xchg
arpl
int3
pop
xor
sub
test
sub
or
testb
dec
lea
test
loopne
xor
adc
adcb
nop
cltd
ret
insl
mov
dec
cmp
push
popf
jg
jg
js
add
scas
test
mov
mov
fistl
inc
mov
loop
mov
adc
iret
or
jbe
dec
repnz
cmp
insb
inc
ficompl
pop
inc
divl
xchg
jnp
sub
pop
dec
add
sbb
divb
decl
repnz
ret
cltd
or
mov
psllq
mov
popf
les
mov
stos
movsl
lahf
scas
push
dec
in
test
mov
ljmp
sbb
enter
push
adc
rcrl
sub
addr16
fdivrl
push
repnz
jl
int3
and
in
dec
aam
hlt
and
and
mov
pop
inc
pushf
cmp
add
jmp
lods
push
xchg
popf
mov
cmp
pop
or
pop
lods
cmp
std
dec
or
pfmin
js
push
sbb
psubq
dec
xlat
into
ret
pop
hlt
jle
push
or
adc
mov
lods
jp
rclb
hlt
loope
xchg
sub
in
movsb
mov
hlt
jno
mov
dec
loope
incb
lock
lret
cmp
in
sbb
es
outsl
mov
mov
js
testl
stc
adc
pop
add
dec
mov
adc
push
fnstsw
push
and
jbe
push
leave
sub
adc
pop
xchg
and
sub
cmc
jmp
pop
out
inc
frstor
jge
push
xor
mov
push
imul
jmp
mov
ret
cmp
rclb
cmp
mov
fidivl
leave
or
stc
cmp
xchg
inc
inc
loop
xor
mov
jo
test
jbe
inc
ficomps
fsubrl
scas
cmp
add
std
shrl
and
int3
arpl
pushf
xor
adc
stc
nop
cmp
pop
pop
testb
jge
loop
jl
or
xor
sub
xor
mov
dec
mov
fsubrs
rcl
insl
add
testb
push
adc
cmpb
stos
mov
je
push
cmp
imul
xor
or
int3
sub
push
xchg
push
inc
inc
fidivrs
xor
fucomp
dec
xor
fchs
dec
fsubrs
add
ja
push
imul
ss
add
jnp
pop
lods
xor
adc
pushf
or
aaa
pop
mulb
pop
mov
and
jle
cmp
jmp
push
jle
inc
es
xor
push
in
jle
dec
loop,pt
sub
outsb
test
mov
mov
ja
pop
pop
dec
subb
fldenv
mov
lcall
insl
dec
push
cltd
outsl
mov
lret
cltd
std
inc
mov
and
mov
pop
sbb
push
jge
sub
or
cld
sub
and
leave
or
fldt
adc
in
mov
jns
hlt
imul
popa
cli
int3
sbb
scas
stc
insb
mov
mov
cmpsl
dec
adc
and
mov
push
push
xor
pop
dec
jle
cmpsl
sub
inc
push
gs
stos
mov
sub
xlat
jbe
jp
hlt
push
or
test
lea
push
andb
andb
jo
sbb
add
mov
in
sahf
push
push
jmp
or
push
mov
ret
pop
and
adc
sbb
adc
insl
jno
out
and
mov
xor
mov
dec
cmp
leave
sub
inc
stos
icebp
orb
das
pop
sub
inc
call
gs
sub
pop
out
testb
push
sub
clc
pop
and
and
push
incb
mov
daa
mov
imul
into
aaa
imul
shl
movsl
xchg
sbb
negl
cmc
lods
mov
pop
out
adc
lock
push
repnz
jae
inc
stos
pushf
cwtl
or
mov
mov
push
clc
ss
repnz
ds
pop
ja
mov
jp
fs
sarl
dec
setge
fwait
rcll
mov
push
sub
std
pusha
or
dec
mov
add
sbb
jge
fsubrl
mov
sbb
fdivp
pop
mov
cmpsb
out
sbb
push
cmovs
jge
movsb
in
movsl
dec
mov
dec
dec
inc
pusha
jmp
into
sbb
dec
rcrl
divl
sbb
inc
movsb
cmp
ds
outsl
repz
scas
rcrb
cmc
imul
jmp
push
lods
aas
stc
sub
push
lea
lcall
jecxz
sbb
iret
das
sahf
add
cmpsl
ret
jmp
js
mov
popf
sbb
out
popa
add
gs
xchg
xchg
sub
cwtl
jnp
sub
stos
mov
pop
in
fnsave
cmp
cltd
jb
pop
mov
push
es
inc
pop
ss
or
adc
shl
out
lcall
pop
xchg
dec
lea
mov
and
push
xchg
push
test
roll
aad
and
mov
jp
inc
pusha
sub
push
push
fisubrs
ret
loope
sbb
add
xor
subl
xchg
inc
cmp
push
cs
xchg
inc
dec
les
outsb
decl
jge
push
rcl
mov
dec
xor
flds
push
int3
fimull
lret
cld
imul
adc
xchg
mov
test
fistl
push
js
or
xchg
incl
shlb
pop
ja
add
ljmp
add
test
mov
xchg
mov
inc
cmp
addr16
fcomip
mov
hlt
ret
into
cmpsw
sbb
outsb
popa
subb
mov
leave
adc
dec
cli
outsb
adc
pop
xchg
out
and
loop
cmp
movsb
mov
xor
mov
mov
scas
push
xchg
data16
out
popf
xchg
jmp
int
and
lods
not
stc
sub
stos
mov
idivb
shrl
dec
pop
repz
adc
lods
shlb
inc
pop
push
scas
inc
pop
mov
sti
sbbb
mov
idivl
shll
xorl
sahf
imul
shrl
inc
inc
xor
or
xor
fidivrs
xchg
add
inc
hlt
push
dec
push
mov
mov
dec
enter
dec
and
popl
add
lcall
push
jmp
ss
hlt
push
push
cld
xor
inc
mov
lahf
dec
loopne
aad
mov
push
cmpsb
sub
mov
mov
jae
aad
push
push
pop
notl
jg
or
mov
fildll
iret
lret
xchg
adc
dec
in
mov
movsb
lahf
insb
xor
push
test
xchg
jle
sbb
adc
movsb
jg
or
mov
loop
push
adc
lods
xchg
sbb
inc
aad
mov
bound
cmp
insl
mov
add
mov
add
and
in
inc
cmp
and
pop
adc
test
outsl
aam
adcl
int3
dec
lods
in
imul
dec
mov
push
loope
jns
and
jmp
lea
icebp
dec
inc
dec
outsb
stc
adc
rcrb
das
mov
mov
cwtl
mov
stos
inc
push
mov
dec
pop
lret
out
repnz
in
mov
lds
inc
clc
in
cld
pop
adc
mov
push
ret
jle
sahf
mov
std
mov
lret
jne
push
test
das
push
adc
inc
lock
mov
and
mov
or
nop
idiv
mov
sbb
mov
ds
mov
or
mov
jbe
stos
js
add
stos
mov
fisttpll
adc
imul
sarl
sbb
xchg
scas
jmp
or
lods
repnz
xchg
push
mov
sub
pop
das
insb
mov
pop
in
nop
push
inc
cmp
std
cmp
outsb
add
and
pop
mov
cmp
add
xor
je
ret
cmp
and
sahf
mov
sub
push
ljmp
je
xchg
daa
inc
popa
in
test
cmp
in
sub
pop
sahf
icebp
mov
in
jmp
fildl
pop
push
and
cmp
mov
jmp
xor
and
cltd
cmpsl
mov
mov
in
mov
shr
push
push
or
dec
xchg
sub
loop
sti
lods
inc
sub
mov
enter
inc
xor
fsubl
mov
icebp
add
insb
mov
bound
jnp
jns
jne
mov
outsb
or
add
loope
inc
packuswb
jnp
ljmp
inc
push
in
decl
stos
lahf
and
xchg
movsb
push
out
xor
ds
aaa
sarb
data16
in
mov
mov
mov
mov
cmp
dec
lds
lods
outsb
or
lahf
into
jnp
jae
nop
ss
sbb
outsl
ss
mov
cmp
push
outsb
leave
mov
fnsave
xlat
xchg
js
cli
lods
pop
lock
mov
pushf
mov
mov
xor
addl
cmp
and
pop
push
adc
cmp
push
rcll
cmp
je
inc
xor
fdivr
sub
fistl
lcall
aas
outsb
mov
cmp
inc
fimull
mov
sub
mov
loop
loopne
mov
and
jns
jae
mov
faddl
test
adc
mov
sbb
add
xchg
inc
das
or
outsl
test
insb
rep
push
jp
das
mov
jecxz
lods
mov
mov
push
ret
fstpt
fidivl
lcall
call
rorl
push
test
subl
or
push
sub
xchg
lds
hlt
div
imul
out
xor
mov
movsl
adc
inc
xlat
pop
outsb
fwait
jae
sub
pop
in
icebp
mov
jnp
addr16
jp
dec
push
cmp
cli
insb
daa
aam
xor
cmovo
sbbb
jne
jae
bound
scas
inc
or
sbb
int
clc
sarb
btr
or
dec
dec
into
xchg
cmp
pop
aaa
jnp
push
cmp
lods
popa
pop
loopne
xor
xchg
push
fcmovnb
xchg
loop
loope
out
push
in
call
out
jno
pop
clc
adcb
ljmp
lock
mov
add
jo
pop
xchg
add
adc
jae
mov
lods
lds
clc
imulb
popa
pushf
sbb
mov
imul
paddq
mov
and
xchg
lea
push
movsl
xchg
lcall
js
lcall
sbb
mov
in
cmp
testb
fsubr
and
fidivs
inc
hlt
loopne
sbb
andl
cld
xchg
jmp
push
out
aad
movl
scas
mov
mov
push
int3
xor
rolb
pop
int
sbb
push
outsb
hlt
jl
into
lods
push
mov
jmp
mov
out
aad
inc
push
insl
aas
aam
js
clc
in
sub
adc
xor
in
push
popa
stc
adc
xchg
inc
movsb
imul
mov
es
iret
data16
mov
mov
fcompl
inc
out
mov
inc
jmp
into
push
mov
leave
movsl
jno
imul
pop
add
ss
and
sbb
cmp
and
dec
mov
inc
push
out
out
dec
mov
mov
inc
ficompl
dec
add
testb
jno
xrelease
stc
and
aam
dec
mov
mov
aaa
popa
jg
sbb
aad
push
push
insb
sbb
std
xchg
push
mov
sbbl
pop
sahf
scas
xchg
jno
imul
ficoms
das
ret
repz
pop
js
loopne
push
jae
andb
addl
popf
or
es
or
aam
dec
xor
xor
outsb
add
xor
bound
sub
jno
or
test
test
xor
lds
lock
sbb
inc
mov
or
push
mov
leave
scas
sub
sbb
add
test
pusha
pop
jg
push
push
mov
mov
push
ljmp
push
add
adc
jb
ss
enter
or
aad
xchg
test
cmp
out
pushf
ja
inc
mov
pop
mov
jecxz
hlt
mov
xchg
push
sbb
jb
push
or
mov
push
pop
les
negb
jl
out
jmp
and
mov
inc
inc
jp
aas
daa
punpcklwd
lods
or
icebp
adc
js
inc
inc
cwtl
cmc
inc
bound
ret
pop
jge
mov
in
out
into
sarb
jb
stos
mov
mov
xchg
and
movsb
cmp
das
rol
mov
imul
xor
xor
fs
add
pop
cwtl
mov
pop
aaa
sbb
push
stos
and
ds
mov
sbb
call
dec
mov
push
push
icebp
and
ljmp
rcrl
ljmp
cmp
lret
dec
adc
mov
jno
fcmovnbe
push
cwtl
xchg
movsl
mov
cmp
adc
jnp
sub
xchg
inc
sbb
hlt
pop
push
mov
ret
fdivp
sub
jns
push
stos
mov
xlat
insb
insl
jmp
arpl
shr
adc
je
push
cmpsb
cmp
int3
or
xchg
es
cs
add
cld
repz
sub
mov
out
mov
fbstp
jp
mov
movsb
aaa
fsubrs
jl
dec
mov
in
inc
fldcw
iret
pusha
aad
in
pop
adc
aam
ds
pop
mov
loopne
and
fwait
xor
push
jecxz
mov
adc
add
push
xor
cmp
pop
xchg
sbb
push
popa
rclb
mov
out
push
popf
adc
call
leave
scas
sbb
lahf
insl
ficoms
adc
or
test
dec
add
ret
lret
jnp
and
dec
addb
xor
das
loop
push
mov
lock
sub
push
add
orb
push
int
mov
mov
clc
add
sub
je
sahf
sub
or
scas
xor
movsl
lock
fneni(8087
mov
pop
lahf
adc
shlb
dec
pop
mov
inc
mov
mov
pop
add
out
mov
mov
shll
cld
mov
mov
pushf
shlb
dec
mov
and
pop
scas
fwait
jb
and
roll
xor
ss
push
mov
das
sbb
popa
sar
inc
mov
xlat
addr16
lcall
repz
lahf
push
push
ret
jmp
cmpsl
dec
mov
xchg
push
stc
ss
das
xchg
fidivl
out
dec
pushf
add
lret
mov
mov
test
push
mov
imul
popf
xor
mov
or
xor
call
inc
bound
push
mov
loop
cmp
sub
fbstp
lods
bound
cltd
scas
and
push
and
cmpsb
js
loopne
xor
cmpsb
cmp
jne
sbb
lret
pop
cltd
sbb
mov
in
jb
inc
frstor
xchg
or
cmpsl
fs
daa
je
test
fbstp
ds
loopne
addr16
stos
loopne
pusha
loop
sub
or
aas
lds
out
dec
mov
push
iret
xchg
pop
inc
sbb
add
loope
sbb
cltd
jecxz
insb
mov
jp
ljmp
daa
ja
data16
push
add
mov
fists
sti
popa
push
xchg
fdivrl
cs
pop
or
or
outsl
push
sub
shlb
das
loop
or
push
push
pop
jge
xchg
xchg
push
mov
mov
pop
and
jns
dec
int3
lret
add
cltd
call
das
ret
decl
notb
mov
repz
dec
jo
fbld
inc
mov
mov
inc
bound
fstl
or
sbb
mov
sub
jbe
sub
adc
int3
adc
int3
mov
pusha
imul
adcb
mov
das
addr16
shl
dec
cmc
imul
or
mov
fsubl
test
jb
inc
inc
mov
sbb
push
test
lret
mov
sarl
enter
int3
arpl
movsb
iret
aaa
sbb
imul
sub
je
fdivl
ret
mov
fistl
loope
push
int
xor
lock
push
sub
pop
pushf
test
into
jp
add
cld
icebp
addb
popl
push
in
pop
or
subl
movsb
and
aad
sbb
pushf
cmpsb
imul
lret
mov
mov
call
ljmp
push
in
aad
lahf
push
inc
jg
fidivl
imul
mov
xor
jbe
int
pop
mov
out
cmc
aam
mov
loopne
pop
mov
sarb
add
pop
outsb
int
test
push
pop
sub
jnp
jp
or
std
inc
and
push
mov
mov
add
xor
arpl
inc
je
sbb
popa
dec
add
xlat
or
ja
pop
sub
or
and
inc
push
jmp
ljmp
movsl
sub
in
ds
insb
dec
out
pop
push
or
js
icebp
in
mov
add
inc
pop
xor
jns
mov
addr16
jnp
fbstp
leave
rolb
pop
lcall
and
stos
add
dec
mov
xor
jge
lret
clc
cld
sti
lods
arpl
xchg
int
sbb
add
mov
jmp
push
lcall
repz
pop
jno
pop
mov
cmp
xchg
aam
add
sti
rorl
sbbb
mov
cmp
or
lods
sti
ss
test
mov
cmpsb
inc
mov
aaa
in
ljmp
fmull
sbb
cmp
inc
insl
mov
cmp
dec
insb
jne
sub
andb
mov
add
inc
mov
add
cs
loopne
aad
and
hlt
clc
dec
jecxz
sahf
mov
lds
jmp
push
adc
and
std
loopne
push
sub
out
notl
sub
pop
shrl
shl
lret
push
shr
inc
cmpl
jae
lret
loopne
cmc
int
mov
outsl
jg
sbb
shll
into
les
lahf
addr16
popl
xor
arpl
stos
mov
fwait
rol
rorb
iret
mov
sub
sbb
lods
enter
mov
nop
cmp
pop
cmovb
sbbl
mov
loopne
ficomps
jge
arpl
insb
pop
bound
or
cmp
pop
repz
out
push
aad
and
and
pusha
xchg
mov
daa
mov
cmp
call
pop
fldcw
inc
mov
sub
sbb
decb
mov
std
add
inc
add
daa
mov
out
hlt
test
fldt
or
out
popf
leave
shrl
addr16
mov
xchg
adc
fdivrl
dec
mov
sbb
jl
call
in
jl
xchg
lcall
lock
adc
cs
cmc
cmp
mov
ret
and
xchg
mov
popa
cmp
lds
xchg
mov
sub
jl
cmp
pop
fiaddl
mov
es
out
dec
inc
inc
jo
in
std
push
and
je
mov
movhps
mov
fs
sub
andb
or
repz
pushf
aas
xchg
and
ret
repz
test
test
push
loop
pop
mov
mov
aam
mov
test
mov
xor
in
pop
push
pop
cmc
mov
les
insb
or
push
pop
mov
push
add
or
lods
inc
fisubrs
xor
mov
adc
mov
sbb
fbstp
sub
mov
push
jae
and
scas
jge
pop
pop
sub
aas
in
dec
dec
loop
add
jae
sbb
sub
pop
out
push
ds
mov
jno
dec
loop
and
add
int
mov
fsubrs
inc
lcall
aaa
sub
in
dec
sbb
lcall
push
mov
cmpsl
push
adc
push
or
les
sub
lods
pop
cmp
dec
pusha
ficomps
ja
ss
orl
and
arpl
adc
stos
lret
pop
std
pop
push
xor
sbb
nop
dec
aam
pop
and
mov
das
vfmaddps
nop
dec
loop
aaa
ljmp
mov
popf
mov
fs
jmp
add
xchg
jle
xlat
mov
pop
cmpsl
lods
pop
push
shr
mov
movsl
cmp
inc
jbe
push
mov
call
fcompl
add
arpl
in
adc
jle
mov
loope
add
inc
mov
cltd
lahf
stos
add
clc
jg
repnz
test
clc
jge
push
add
jmp
scas
repz
jp,pn
stos
dec
lea
cmpsl
xchg
cwtl
push
fucomip
mov
sti
and
jbe
pop
leave
sbbb
out
xor
mov
jg
and
dec
pop
data16
or
jl
xor
in
enter
xchg
dec
mov
cli
and
add
push
pop
cmpsb
and
mov
outsl
ljmp
mov
test
test
add
stos
xchg
stos
sub
in
xor
inc
popa
or
cld
push
outsb
add
cmp
fstps
addr16
pop
add
jecxz
sbb
pop
fstp
mov
and
popf
xchg
jae
xchg
jno
and
jo
sbb
scas
ret
jo
dec
lods
pop
aad
pxor
mov
push
dec
aad
rorl
hlt
fcomip
sub
gs
notl
and
decb
jmp
lea
mov
jmp
adc
loop
out
fildl
cwtl
mov
pop
sub
gs
subl
pop
cmp
sti
xchg
cmpsb
pop
and
dec
sbb
cmpb
inc
sahf
ljmp
pop
and
sub
sub
inc
jbe
jnp
xchg
cli
pop
or
pop
int3
jg
movsl
fisubl
push
jmp
mov
call
pop
cmp
out
sub
jne
daa
mov
cli
mov
mov
pop
ficoml
cli
xor
cmp
sub
imulb
lds
push
mov
fistpl
addl
in
fwait
rorl
add
jo
dec
push
les
or
inc
ja
jns
subb
xchg
dec
xchg
aad
mov
ljmp
mov
or
add
es
or
inc
jp
add
jl
cmpsl
xchg
into
adc
mov
jle
and
rorb
or
push
dec
push
mov
into
mov
xchg
xchg
push
inc
int
into
pop
ljmp
push
or
inc
inc
jo
test
fidivl
loop
out
ffreep
mov
or
aam
lahf
repz
push
aad
mov
mov
add
pushf
mov
add
dec
call
stos
mov
xor
popf
xor
push
addr16
adc
or
pop
addr16
xchg
in
xchg
sti
or
adc
pop
mov
sbb
mov
xchg
dec
lods
and
xchg
pop
jl
pop
xor
loop
dec
inc
int3
adc
call
xchg
or
daa
push
mov
ret
xchg
jns
pop
enter
in
sbb
leave
mov
xchg
mov
and
jle
fisubs
cmpsl
dec
xor
mov
inc
int3
fs
popf
out
out
jmp
int
nop
inc
out
inc
inc
add
inc
jbe
pop
xor
in
xchg
cltd
adc
adc
mov
and
nop
push
out
lahf
add
or
icebp
adc
sub
daa
lods
fs
jb
xor
jp
or
mov
test
fxch
inc
jns
mov
les
cmpsb
fimuls
sub
imul
cwtl
push
sub
sub
out
js
dec
add
and
and
dec
and
mov
xchg
mov
sbb
outsb
loope
loope
dec
pushf
adcb
xchg
sub
mov
sahf
xchg
ret
xchg
ss
lds
fs
mov
adc
mov
ljmp
gs
hlt
pushf
addr16
ljmp
jl
and
out
mov
dec
loopne
test
fisubrl
daa
cli
jp
andl
add
and
mov
push
and
out
adc
xor
sbbb
sti
push
iret
jns
and
sbb
fildll
scas
push
cld
sub
out
sahf
out
adcb
pminub
je
mov
and
aas
hlt
test
jb
jecxz
jge
pop
fldenv
inc
sbbl
push
sahf
dec
or
push
sub
push
dec
out
movsb
cmp
rorl
inc
fldl
sub
add
and
and
pop
add
mov
pop
and
xor
ss
inc
fdivrl
inc
pushf
mov
jmp
loope
decl
jp
rol
cmc
adc
xlat
stc
rcl
pop
movsl
in
jg
cmp
cld
sahf
not
cld
xchg
outsl
lods
dec
xor
xor
in
mov
lret
xor
jmp
inc
dec
inc
inc
xlat
sub
insl
sbb
mov
cli
inc
mov
addr16
xor
aad
mov
and
push
out
sbb
ds
pop
movsl
clc
and
cltd
sub
inc
inc
jno
and
stos
fs
fadds
jmp
sub
xchg
add
jae
aam
adc
xchg
adc
ljmp
fnstenv
addb
sbb
cwtl
jge
scas
pop
jge
add
movsb
shrb
aaa
outsl
mov
push
pop
aaa
jge
pop
jle
adc
xor
pop
inc
xlat
mov
pop
ljmp
into
pop
mov
xlat
clc
mov
inc
mov
test
mov
push
out
push
testl
outsb
popa
lods
xchg
aam
arpl
jnp
pop
sti
mov
dec
xchg
rcrl
adc
js
fistpll
mov
jb
aaa
mov
dec
jmp
js
popa
jg
daa
dec
into
fists
dec
cmp
into
les
inc
push
or
add
mov
cmp
shll
sub
popf
js
cld
cmpsb
add
mov
int
ret
cli
xor
mov
fidivrl
pop
push
leave
sub
or
cli
inc
sub
test
or
sar
fmuls
mov
add
outsb
xchg
mov
mov
sarb
enter
jns
mov
or
sbb
xchg
jnp
adc
add
mov
push
pushf
outsl
call
push
pushf
jne
mov
xchg
sub
pop
and
and
arpl
stc
jl
sub
pop
add
ja
shll
rcrl
mov
and
std
dec
mov
fbld
dec
lea
out
shlb
fwait
xchg
test
xchg
xor
sbb
out
xor
mov
add
outsl
js
test
fs
cmp
sahf
xor
mov
aaa
mov
cltd
int3
pop
push
clc
xchg
push
insl
push
lock
rorb
daa
mov
out
xchg
mov
inc
fwait
addb
mov
imul
imul
xor
arpl
pop
cwtl
inc
hlt
lock
aaa
loop
jno
mov
sub
fists
rcl
or
add
loope
pop
mov
mov
mov
mov
xor
out
data16
xchg
pop
inc
lea
icebp
cwtl
loope
and
jge
xor
push
int
loopne
jg
addb
jno
out
nop
repz
movsb
sub
push
in
xchg
mov
fcmovnbe
scas
pop
mov
dec
movsb
pusha
inc
cltd
lods
icebp
testl
add
jbe
pop
or
lret
mov
stos
mov
test
jae
mov
popf
sbb
cltd
push
xor
imul
jmp
xor
mov
test
xchg
push
mov
push
inc
lret
in
jmp
lods
jg
jo
in
push
pop
out
adc
lahf
and
sub
ret
dec
mulb
je
sub
cmpsl
inc
xor
push
in
or
cmp
or
pusha
dec
jp
lods
movsb
inc
fadds
add
and
rcrb
subl
lcall
jmp
aaa
dec
jmp
push
stos
jb
fdivl
xchg
int
or
fs
fstpt
pusha
add
in
stos
mov
adc
sbb
cmp
mov
adc
call
jecxz
mov
lcall
or
dec
inc
sub
mov
inc
dec
leave
pusha
jge
mov
mov
sbb
push
mov
xor
imul
js
push
jg
inc
lds
and
rcrl
jae
push
mov
testb
div
cmpsb
lock
mov
cmp
arpl
sahf
inc
add
jmp
pop
mov
fnsave
cmp
sub
aaa
in
push
and
lret
in
test
xor
xor
push
jmp
and
test
clc
insl
dec
movsl
std
js
add
fldcw
icebp
cwtl
xor
mov
inc
add
pop
jl
ret
fnstcw
dec
mov
xchg
mov
stos
sbb
cmp
ss
fdivs
rorb
cmpsb
push
fstpl
mov
ret
out
and
inc
scas
loopne
iret
mov
lds
jg
aam
xchg
jnp
add
aam
add
pop
fsubl
mov
stos
movsl
test
fwait
adc
add
mov
test
dec
or
cmp
inc
ljmp
inc
jmp
push
sbb
enter
pop
pop
inc
xchg
jbe
mov
cmp
jns
xlat
outsb
push
mov
out
pushf
scas
cmp
cli
xchg
jge
xor
cs
int
dec
or
sbb
inc
inc
orb
or
jae
sub
pop
cltd
and
stc
pop
push
pushf
outsl
je
loope
push
dec
shrb
adcb
sub
cmp
sbb
mov
jmp
fidivl
fs
fwait
add
jp
add
popf
xor
sub
pop
mov
xchg
mov
das
rorl
add
push
pushf
adc
mov
push
xchg
lret
adc
and
cmp
fcomps
mov
or
lea
hlt
mov
mov
das
jns
sarl
cmp
dec
push
mov
add
pushf
xchg
mov
jnp
mov
mov
int3
dec
sbb
sub
pop
jne
sub
aam
fsub
and
sub
push
popf
ret
push
push
test
and
and
jnp
loopne
out
push
outsb
out
sub
into
rol
jno
int3
pop
lds
ret
adc
cs
mov
dec
inc
decl
je,pt
sub
inc
cli
int
mov
ret
call
cmp
xchg
sub
sbb
loopne
gs
jns
aaa
xor
ljmp
jle
in
pop
lock
sbb
frstor
mov
scas
out
and
lock
mov
cs
aas
es
xchg
inc
sti
xor
jnp
sub
inc
push
inc
jae
jae
jo
push
movsl
mov
ret
sbb
ljmp
lea
movsb
out
mov
add
stc
into
jo
jmp
cmp
mov
shlb
xor
xor
xlat
daa
bound
mov
lret
shlb
scas
idivb
scas
mov
shll
mov
lret
or
addb
mov
leave
pusha
out
xchg
add
je
push
ret
xchg
jp
mov
aam
inc
fcmove
jne
cmp
push
pusha
pop
jo
sub
lret
add
scas
and
pop
or
pop
mov
mov
pop
and
inc
ds
jmp
xor
fbstp
dec
push
inc
xor
xchg
jmp
mov
imul
ljmp
push
sbb
jo
cmp
mov
fcmove
xchg
dec
push
addl
stos
xchg
add
adc
out
rolb
push
sbb
mov
mov
rcrb
mov
dec
mov
mov
add
mov
xor
mov
movsb
mov
ret
adcl
ja
xor
mov
xchg
or
iret
jne
lds
mov
test
xor
cmpsb
dec
movsb
and
jge
fsubr
push
sbb
inc
stc
mov
jae
cmpsl
and
pop
jb
or
dec
stos
data16
pop
hlt
or
vunpckhps
inc
lret
outsb
jge
jmp
sub
mov
lcall
push
outsb
outsb
daa
lcall
or
mov
fwait
fstpt
pushf
pop
dec
mov
xchg
mov
jb
imul
addr16
out
insl
add
dec
mov
ss
pop
ljmp
jmp
inc
popf
fsubrs
cmp
outsb
xchg
fimuls
arpl
shll
push
xor
scas
push
je
jmp
or
or
cmpsl
mov
sub
mov
mov
jp
mov
mov
cmp
icebp
hlt
add
mull
je
jb
mov
pop
dec
and
test
adc
xchg
mov
stos
insb
jae
mov
mov
mov
jle
push
push
cmpsl
mov
adc
dec
jmp
mov
jge
pushf
mov
pushf
shlb
movsl
push
movsl
inc
lcall
and
dec
sbb
rorl
jle
es
xor
ds
in
adc
add
leave
mov
push
xchg
out
pop
cmp
js
insl
in
mov
int
ficompl
xchg
enter
in
movsb
push
jne
lahf
inc
imulb
cmp
es
dec
pop
adc
in
inc
inc
sbb
add
pop
and
scas
cmp
xchg
mov
fnstcw
xchg
dec
rclb
inc
fisubs
lret
lock
dec
pop
dec
push
xchg
insb
inc
pop
imul
and
lahf
lock
ffreep
and
add
xor
ljmp
mov
inc
pushf
pop
in
jl
fildl
sbb
dec
push
xchg
rcrb
cmp
aam
fucomip
sbb
hlt
mov
dec
lock
or
pop
fimull
add
fildl
call
aam
in
sbb
dec
add
stos
push
lcall
push
loope
mov
cmp
cwtl
cmp
rcrl
dec
push
popa
add
iret
pop
xor
fnstenv
pop
sbb
xor
sub
add
imul
outsb
add
cmp
addr16
in
divl
pop
insl
xor
push
aas
push
out
or
sbbl
pop
das
xchg
rep
in
cmp
ficompl
push
repz
pop
pop
cltd
fidivs
and
fwait
ds
push
in
fiaddl
or
mov
jne
rol
xor
outsl
lcall
pop
lods
or
jb
xor
cli
sbb
pop
int3
and
mov
xor
in
shll
cmp
xchg
or
adc
inc
lret
push
pop
popa
addr16
stc
cmpl
lcall
popa
cmpl
push
push
andl
rcrb
cmp
lret
sbb
xchg
jnp
mov
pushf
cmp
divl
repnz
lods
cmp
add
je
daa
stos
rcr
icebp
adc
outsb
adc
mov
lahf
jns
and
in
shl
jg
sub
clc
inc
cli
mov
push
jne
aas
sub
dec
adc
sti
or
sbb
cmp
xor
mov
movsl
stos
ficompl
fbstp
enter
cmp
cmp
mov
inc
mov
outsb
loope
mov
inc
xlat
sub
inc
xor
negb
mov
mov
jecxz
dec
hlt
fisubl
popa
or
test
fcomps
scas
ret
sbb
call
popa
lods
popf
mov
jae
cli
inc
sbb
push
test
xor
fisttpl
inc
push
adc
push
xor
mov
loop
data16
roll
daa
inc
push
movb
dec
movsl
xor
das
imul
cmp
xchg
test
out
jo
xor
mov
mov
in
cmpsl
shll
push
lahf
mov
or
inc
lret
aad
int3
test
icebp
rep
repz
pop
xchg
mov
mov
jge
and
cld
push
inc
int3
mov
arpl
fcompl
ss
cs
fcmove
int3
cmp
icebp
inc
jo
inc
and
es
inc
inc
insl
sub
je
imul
pop
fidivl
scas
stos
xchg
add
sbb
sbb
cld
int3
lea
mov
test
cmpsb
cltd
sbb
icebp
test
xor
leave
push
ljmp
jno
roll
push
es
mov
aam
xchg
call
aaa
arpl
iret
mov
fwait
xor
inc
call
and
push
lods
inc
mov
push
xchg
mov
popa
fiaddl
add
pusha
out
hlt
out
cmpsl
cmp
xor
jbe
xor
lret
incb
xchg
mov
and
push
jne
pop
mov
jb
or
pop
cmp
sub
int3
jbe
xchg
fwait
xor
mov
cltd
push
jmp
cmp
movsl
xorl
or
test
loopne
popa
shl
out
ret
les
and
in
sbb
mov
cld
jge
inc
dec
jae
sbb
call
lret
mov
ja
mov
and
cmpl
icebp
mov
dec
insb
and
adc
jo
insb
jns
lods
push
lahf
lcall
into
add
mov
loopne
into
jno
mov
clc
and
mov
mov
jg
rcll
nop
mov
push
rcr
sub
gs
pop
shrb
jne
in
lea
jle
ja
js
xchg
add
pop
jecxz
push
xor
out
test
mov
and
sub
xor
jno
pop
mov
nop
aam
push
xchg
jnp
push
jbe
jne
cmc
ja
inc
push
jmp
ret
stos
ja
call
scas
into
inc
or
js
or
movsl
adc
push
jns
es
inc
xlat
ds
les
fldcw
inc
xlat
mov
bound
sub
cmpsl
repz
xchg
push
scas
fidivrl
adc
or
pop
jne
sbb
ret
mov
sub
or
or
push
hlt
push
pop
mov
icebp
jnp
outsb
mov
mov
mov
frstor
mov
sbb
mov
sub
inc
fnsave
jnp
cmpsl
or
pop
inc
loopne
cmp
adc
mov
push
dec
test
cmp
push
lods
push
push
dec
pop
cmp
jp
adc
negb
addr16
dec
scas
or
loop
pop
adc
inc
jl
bound
mov
cmpsl
jo
or
iret
cmpsl
sbb
lret
cmp
bound
sub
ja
int3
pop
dec
mov
inc
xchg
aad
cmp
das
sbb
pushf
cmp
xor
movsl
pop
pop
movsl
mov
and
mov
out
das
or
dec
lods
add
jae
adc
movsb
insl
jge
xor
aas
addr16
cmp
dec
stc
popf
call
enter
sub
test
sbb
jge
lret
pop
je
xor
and
sbb
jg
jecxz
dec
fs
xchg
pop
xor
or
movsb
jle
imul
imul
in
sbb
insl
sbb
pop
dec
sub
pushf
xchg
ljmp
iret
std
xchg
and
scas
inc
push
and
test
sbb
es
jne
sbb
add
jnp
pop
je
add
andb
and
mov
fisttpl
ds
xor
sub
jno
xor
sarb
sbb
lods
add
dec
ret
push
or
xchg
push
cwtl
dec
xor
mov
test
nop
stos
inc
adc
inc
cli
cld
inc
and
add
incl
cmp
fcoml
adcl
add
and
push
jno
iret
das
mov
das
push
xchg
sub
or
jle
and
cltd
cltd
sbb
adc
jno
ss
cmpb
pop
test
stos
mov
daa
test
rcll
sub
jmp
mov
jbe
inc
fdivs
cltd
fiaddl
mov
add
ret
jb
cmp
add
test
cmp
in
aaa
xchg
dec
jge
and
push
mov
lret
jne
sub
add
inc
mov
and
sub
ljmp
jne
mov
mov
shrl
cmp
aaa
xchg
loopne
mov
pop
repz
repnz
cmp
pop
sbbb
mov
cltd
xor
push
cmc
and
inc
jl
arpl
dec
dec
push
push
testl
nop
add
movsb
inc
fnstcw
sub
insb
cmp
test
pop
repz
int
pop
cmc
push
add
idivl
dec
loopne
dec
xor
rcrl
or
ret
xor
dec
mov
lods
aad
jmp
out
out
les
mov
jns
pop
movsl
mov
xchg
ret
scas
in
cmp
ja
popa
sbb
nop
cmpsl
shr
sub
push
arpl
cltd
push
cltd
pop
adc
add
and
shlb
jecxz
mov
or
jg
xchg
xor
jl
cmp
inc
or
jno
ret
lahf
cmpsb
test
scas
mov
mov
sub
aas
repnz
dec
pop
lret
jne
fbstp
in
outsl
repnz
jae
xchg
cld
negl
adc
inc
sbb
mov
or
push
push
xlat
adc
out
mov
and
pop
add
jns
jne
movsl
sbb
lds
mov
sbb
cs
add
leave
jae
xor
leave
movsl
jl
rcll
push
sub
ja
scas
xchg
jns
ret
sub
lret
insl
lahf
leave
pop
iret
outsb
adc
jle
das
mov
in
pop
mov
orb
jg
call
cmpsb
ss
xor
xor
push
adc
pop
or
cmp
add
faddl
xorb
xchg
ljmp
ficoms
mov
in
fsubs
ficoms
push
xorl
jmp
sar
aam
test
add
xor
cmpsl
into
pop
inc
fisttpl
dec
xchg
mov
pop
daa
scas
lods
inc
loopne
into
cmp
push
jb
sbb
addb
xchg
push
sub
mov
dec
in
hlt
cld
push
test
pop
mov
mov
fwait
pop
jecxz
push
jne
andb
and
xchg
das
push
mov
inc
push
pushf
cli
lea
loopne
fidivrl
rclb
mov
mov
add
add
add
mov
fisttpll
pop
mov
pop
cmp
mov
loopne
fabs
outsl
push
aam
add
pop
das
imul
out
mov
rcl
imul
scas
push
notb
inc
jg
add
pop
int3
les
sub
rorb
push
xor
mov
les
add
rcll
movsb
repnz
and
mov
mov
filds
adc
xchg
add
push
scas
daa
stc
cltd
jno
xchg
int3
mov
mov
outsb
jno
les
jmp
fs
arpl
and
sub
inc
mov
movsb
xor
insb
enter
mov
jge
mov
jl
into
pop
sub
push
jl
xor
mov
cmp
mov
push
iret
insb
ret
jmp
aaa
dec
cmp
inc
gs
sbb
cmp
mov
jmp
sbb
es
xlat
jp
ja
add
jmp
mov
int
outsb
jmp
bound
adc
sub
sub
add
popa
aas
push
pop
rcr
add
push
in
sub
inc
xchg
je,pn
jno
mov
aad
movsl
sub
pop
inc
jp
push
out
es
lret
dec
in
aad
push
cltd
inc
ljmp
pop
adc
and
cmp
push
xor
xor
call
cmp
inc
test
pop
xchg
loope
inc
fdivl
inc
hlt
dec
loopne
sub
stos
mov
aas
add
jno
pop
pop
insb
popa
xchg
shl
mov
or
nopl
jno
pop
jp
push
test
inc
mov
cwtl
lahf
negl
and
in
test
arpl
dec
dec
mov
loopne
lods
cli
lret
jl
cmpsl
imul
imul
int3
stos
loope
repnz
jnp
iret
das
rorl
fnstenv
push
push
and
sbb
jae
jmp
outsb
jp
mov
add
or
jle
and
xchg
fldcw
call
scas
fmul
dec
jecxz
cmp
push
sub
aas
fadd
mov
data16
out
stos
call
mov
jne
mov
pop
dec
shrl
xor
ss
pusha
sub
inc
das
cmpsl
aam
add
leave
les
inc
or
jecxz
pop
pop
pop
inc
push
sahf
movsl
sbb
leave
data16
xchg
mov
enter
test
jae
add
xchg
cwtl
mov
mov
ljmp
inc
push
lock
test
dec
add
sub
inc
dec
dec
jmp
add
aaa
enter
inc
cwtl
sub
mov
les
mov
sbb
aas
out
push
out
xchg
arpl
fldenv
add
in
xchg
xor
ret
adc
xlat
dec
inc
pop
xor
fs
dec
fidivs
fsubs
xchg
lcall
cmp
leave
sbb
push
pusha
cmp
lcall
inc
movsb
sub
pop
dec
enter
loop
movsb
cmp
dec
and
loopne
dec
mov
add
xchg
add
adc
sbbb
adc
dec
adc
pusha
xor
mov
cltd
mov
or
sbb
movsb
inc
lea
jns
insl
ret
hlt
mov
pop
mov
in
ret
cmp
cmp
inc
xchg
add
les
test
testl
sub
pop
sbb
add
dec
out
in
sub
and
mov
adc
xchg
and
sbb
add
and
ja
and
lahf
mov
inc
jg
js
push
sti
ss
mov
inc
mov
dec
lcall
loope
sti
inc
mov
int3
inc
pushf
js
repnz
dec
sbb
xchg
sub
ss
jle
cmp
xadd
mov
nop
in
and
mov
jne
push
mov
lods
cmp
out
dec
mov
mov
sub
icebp
xchg
pushf
scas
lahf
fwait
push
outsb
push
lock
dec
sub
xchg
pop
adc
nop
mov
lods
jns
pusha
xor
or
cmpsl
push
lods
fcompl
fidivs
cmp
xchg
ds
xchg
cmpsl
mov
icebp
int
aam
add
push
ja
arpl
stos
rcrl
lea
test
xchg
ficompl
stos
mov
xor
push
push
ljmp
inc
fstpt
mulb
test
dec
in
int3
dec
add
push
xchg
mov
jg
add
mov
mov
leave
or
sarb
loop
dec
lcall
fistps
push
pop
enter
sub
arpl
aas
xchg
mov
fcom
and
dec
shl
icebp
xchg
dec
cmpb
push
jmp
mov
mov
test
xor
lahf
and
test
mov
xor
pop
mov
ror
scas
nop
adc
mov
rorl
in
cmp
jne
mov
add
aam
lods
ret
shrl
int
out
arpl
xchg
jge
repnz
jbe
cmp
xlat
shll
imul
and
cmpsb
cmp
jbe
ds
push
mov
inc
jns
in
les
mov
pusha
adc
arpl
mov
sbb
enter
sbb
cmp
popa
xchg
stos
test
jns
imul
pushf
ret
sub
mov
xor
dec
data16
cmp
push
xchg
adcl
andl
lds
add
sbb
xor
jo
test
lret
xor
es
xchg
mov
mov
xor
insb
adc
rorb
mov
xor
loop
xlat
push
adc
testb
movsb
repz
cmp
pop
imul
dec
out
ljmp
cltd
stos
pop
cmpb
adc
xor
dec
mov
adc
mov
jb
jbe
aad
mov
pop
sub
dec
aam
jno
shlb
out
cli
loope
sub
pop
arpl
ds
outsl
adc
fs
pop
inc
inc
decl
call
cmp
imul
xchg
xchg
sub
mov
cmp
ret
call
mov
push
mov
fadds
or
daa
cmp
adc
adc
jne
mov
fucomp
ret
ja
lea
enter
cmp
lcall
cmpsb
push
addr16
cmp
imul
loop
mov
mov
adc
and
cmp
mov
sbb
sub
add
cwtl
xchg
mov
dec
es
orb
mov
insl
dec
loopne
dec
out
mov
fistpll
cmpsb
sar
mov
fsubrs
and
pushf
sarl
push
adc
pop
cwtl
sbb
inc
mov
cwtl
xchg
mov
lcall
pushf
cmp
ds
lods
pop
dec
mov
aam
pusha
jnp
dec
and
fiadds
and
push
rolb
mov
adc
jecxz
ret
xchg
pop
sahf
or
ds
mov
push
nop
jns
push
lock
popf
cmp
lcall
aad
cmpsb
dec
rcrb
cmp
cmp
xor
andb
testl
push
push
imul
jg
or
dec
pop
fldenv
dec
cli
rcl
gs
ret
rcrb
jo
and
test
mov
and
daa
ret
insb
inc
jnp
adc
inc
mov
inc
sti
cmp
dec
lcall
xchg
dec
xchg
ss
popf
adc
mov
jae
ret
pop
dec
or
outsb
or
dec
aam
pop
dec
mov
inc
mov
popa
negb
ret
shl
jecxz
adcl
dec
add
mov
fwait
sub
sbb
xor
add
ljmp
sbb
outsb
sbb
add
cmp
or
sbb
pop
jge
in
pop
sub
fidivrl
push
pop
scas
data16
sub
dec
xor
inc
flds
push
push
mov
out
fstps
and
fmul
bswap
aad
negb
xor
outsl
jns
cmp
mov
lea
mov
fisubrl
cmp
jns
sub
dec
mov
les
notb
std
dec
mov
notb
rolb
arpl
sti
pop
adc
mov
mov
fbstp
test
sub
and
sbb
push
andb
leave
repz
jns
out
cmpsl
ret
rcrl
jne
jmp
pop
cld
sub
outsl
stos
notl
int3
mov
lahf
sbb
movsl
shl
mov
scas
movsb
sbb
dec
daa
and
sub
jb
xor
lahf
ljmp
sbb
pushf
outsl
mov
rorb
push
cs
jns
ss
adcl
inc
sbb
sti
dec
inc
dec
fsts
nop
loope
enter
fwait
insl
decl
aaa
mov
movsb
ja
sahf
fs
mov
push
mov
jne
mul
dec
push
idiv
push
sub
mov
jecxz
sub
xchg
sarb
ja
xlat
fdivl
scas
andl
sub
fldcw
data16
aam
stos
hlt
jno
stc
ss
popf
pop
loope
adc
push
jmp
mov
enter
ret
inc
faddl
xchg
or
arpl
dec
and
jmp
adc
adc
test
pop
jne
stos
imull
int3
jle
std
leave
jge
push
rcl
imul
mov
xchg
jnp
loope
fwait
out
lcall
xor
sbb
jns
movsl
cmp
outsl
lock
in
data16
sti
ds
insb
push
xchg
aad
sbb
cmp
lods
dec
push
mov
loopne
aaa
or
movsb
cmpsl
jbe
and
xor
ja
sbb
xchg
std
dec
iret
sub
adc
adc
js
mov
jp
mov
mov
mov
adc
mov
lods
xchg
in
mov
lods
test
dec
or
lahf
adc
cmc
int3
dec
mov
loop
imul
mov
pusha
mov
lahf
inc
push
test
fsubrp
fwait
xor
xchg
fs
int
mov
sbb
jmp
add
leave
stos
mov
lods
stc
mov
loopne
inc
jl
repz
ljmp
cmp
cmp
mov
lods
push
and
pushf
and
ss
dec
sub
fstps
or
dec
cltd
and
movsb
mov
repnz
mov
int
outsb
insl
sub
inc
xchg
cmp
ret
jle
aad
sub
push
ljmp
cmpsb
nop
mov
cltd
nop
and
xchg
xchg
and
stos
fidivl
push
stc
adc
push
cmpb
aad
sarb
adc
fcompl
xor
es
push
cmc
aad
fwait
jge,pt
es
pop
mov
jl
in
add
mov
xor
out
mov
aas
sysenter
decb
push
lods
fs
aaa
fstps
cwtl
xor
or
push
int3
mov
xor
fnstsw
xchg
mov
mov
jns
mov
test
cs
mov
loop
pop
repz
adc
cld
cmp
add
popa
push
pushl
lds
sub
and
sub
mov
mov
lods
daa
inc
fcmovne
lret
jae
mov
jmp
push
push
sub
pop
fwait
mov
fbstp
mov
aaa
sti
jae
dec
cmp
ja
js
cmp
insb
add
rclb
lds
cmp
arpl
cltd
and
xlat
and
ss
cld
push
jge
test
in
add
xor
or
mov
lock
mov
pop
insl
mov
and
sub
cmp
andl
sbb
or
fisubrs
mov
xchg
and
dec
jo
imul
jle
jp
sbb
imul
js
xor
rcll
and
in
cmpsb
fwait
ds
or
sbb
push
jle
and
xchg
cmp
mov
sub
insb
cmp
mov
dec
mov
das
leave
shrb
mov
scas
sub
mov
sub
pop
add
fdivr
mov
sbb
fstpt
add
cmp
fmul
mov
pop
and
mov
arpl
jns
push
pushf
sbb
xchg
sahf
pop
imul
jnp
loope
cmp
dec
add
pop
sub
out
test
lea
inc
mov
dec
lret
and
jb
aas
call
lds
pop
push
push
add
or
cmp
mov
orb
pop
inc
dec
stos
aaa
jp
push
mov
xor
nop
sub
mov
mov
sahf
in
movsb
add
adc
subb
fs
jns
shll
movsb
ret
outsb
mov
jmp
shlb
or
stc
push
imul
pop
xchg
aam
sub
dec
dec
aaa
aaa
flds
and
loop
test
inc
push
in
mov
cwtl
jmp
lret
insb
jge
dec
push
mov
mov
inc
fwait
out
and
adc
call
pop
int
inc
arpl
mov
dec
lds
inc
idivb
cld
movsl
push
mov
scas
push
mov
mov
push
adc
cld
xchg
in
scas
cs
adc
jno
out
xchg
sbb
movsl
clc
scas
xchg
pop
hlt
mov
xchg
insl
sub
mov
dec
or
lea
subl
ret
pop
xorl
sbb
jbe
jmp
decb
pop
push
cmc
inc
sti
aad
and
xchg
std
test
test
icebp
inc
movsl
daa
lret
mov
add
push
xor
fdivs
ja
call
inc
or
mov
mov
jb
sbb
xchg
dec
xchg
mov
mov
sub
popl
ss
mov
incl
inc
inc
xlat
repnz
add
push
adc
leave
xchg
mov
fstpl
lock
mov
push
xlat
stos
ja
shll
loop
xor
rolb
cld
xchg
jnp
fmull
mov
test
xor
outsb
popa
push
lods
add
fsubrl
data16
jo
mov
sbb
int3
pop
jno
mov
out
mov
int3
sub
dec
push
outsb
addb
push
dec
mov
xchg
or
jo
hlt
push
jbe
incl
les
xchg
or
scas
data16
mov
pop
lahf
push
dec
loopne
fsubl
pop
sbb
add
or
pushf
cmp
je
in
loop
sbb
in
scas
sub
dec
sub
shlb
mov
inc
adc
orl
movsl
popf
icebp
jle
inc
pushw
xor
push
sub
cmp
pop
or
leave
cmp
push
imul
inc
sbb
mov
lea
mov
mov
lock
dec
xor
repz
mov
mov
aam
or
mov
mov
aad
mull
jbe
push
pop
mov
aam
jnp
jge
aam
mov
push
pop
loop
mov
add
insb
lret
lods
jb
or
adc
mov
adc
cmp
divb
jb
sbb
mulb
js
inc
jl
mov
dec
lcall
decl
mov
leave
loope
rcll
inc
mov
sub
inc
ficoml
insl
add
cmp
sbb
mov
fstl
loop
dec
jp
xchg
push
mov
mov
inc
add
fdivs
ljmp
jne
lahf
push
push
add
jae
and
cmp
negb
push
imul
dec
xor
hlt
dec
fisubrs
pop
adc
pop
adc
cmp
rclb
fisubs
push
jmp
inc
mov
pop
push
fucomp
hlt
adc
add
xchg
pushf
sbbb
sbb
mov
add
adc
pop
pop
fwait
mov
bnd
es
lret
push
enter
mov
repnz
dec
dec
add
inc
mov
test
cltd
xchg
int
xlat
xchg
cli
cltd
sub
xlat
icebp
xor
int
mov
jo
mov
loope
or
sub
or
leave
nop
lea
in
and
mov
insb
jmp
jle
push
ss
into
out
sbb
sub
fnsave
mov
repz
js
pushf
pusha
jge
adc
int3
mov
imul
mov
js
pop
and
hlt
popa
enter
push
stos
out
out
andb
ret
jbe
jp
adc
add
mov
cltd
js
loopne
ret
movsl
arpl
add
je
and
mov
mov
cmp
orl
int
jnp
and
int
inc
fcoml
stos
push
fstps
mov
xlat
roll
or
mov
dec
loope
push
cmp
leave
outsl
cwtl
cld
int3
hlt
push
sbb
push
mov
fs
aad
cmp
pushf
js
or
adc
out
mov
cmp
and
xchg
mov
inc
sbb
or
fildll
mov
inc
call
add
scas
pop
inc
out
lret
gs
dec
out
pop
mov
mov
test
cmp
in
sti
rcrl
fistps
xchg
mov
push
lods
cmp
aaa
and
aam
ja
and
cltd
and
cld
outsl
push
xor
xlat
icebp
mov
sbb
pop
enter
in
outsb
ss
cli
and
test
mov
fnsave
lret
mov
xor
mov
push
sub
leave
in
aas
jbe
inc
leave
or
fnstsw
cmpsl
dec
dec
fnstenv
call
and
pushf
cli
imul
ja
cld
mov
sbb
fidivrs
pop
mov
and
in
hlt
sbb
aad
mov
test
lock
cmp
outsl
aad
dec
or
es
dec
gs
add
inc
in
insb
incb
mov
call
push
xchg
testl
loop
fs
add
cmp
and
dec
fs
jecxz
shrl
add
dec
xor
lret
into
pop
test
adc
add
jecxz
daa
movsb
fidivs
sub
scas
cmpsb
aas
dec
rclb
rcr
mov
mov
and
pusha
fsubs
jne
cmp
iret
xor
xchg
inc
fiadds
ja
add
in
scas
dec
push
lock
adc
sub
outsb
add
cmp
ljmp
sub
push
or
sub
inc
pop
clc
loopne
add
roll
sub
mov
adc
dec
lret
jle
pop
sub
lock
inc
push
mov
cmp
inc
enter
inc
add
imul
aas
outsl
jecxz
jg
mov
adc
mov
sbb
inc
mov
rolb
mov
mov
mov
jb
and
cltd
xor
sbb
push
mov
jmp
cltd
roll
mov
and
push
test
pop
insl
sub
mov
aas
scas
xor
call
lcall
scas
inc
stc
mov
and
inc
mov
xlat
inc
push
mov
pop
sub
repnz
sarb
fcompl
push
outsl
aas
add
push
xchg
outsb
dec
clc
xchg
ja
out
cmc
push
sbb
adc
xor
jp
push
jns
pop
xor
imul
jo
xor
pcmpeqd
ficomps
or
stos
push
fsts
scas
mov
test
ja
jae
lahf
cld
rcrl
adcb
pop
mov
repnz
stc
cmp
push
out
push
fldcw
mov
in
sub
xlat
xchg
scas
clc
rcl
sub
sahf
cwtl
test
add
push
data16
jno
call
push
sbb
inc
mov
icebp
adc
loope
js
imul
lock
mov
or
lahf
inc
add
movhlps
mov
cld
lcall
xor
pop
push
dec
adc
es
adc
popa
clc
or
sti
fwait
int
ffree
dec
icebp
jbe
fnstenv
pushf
jmp
out
inc
inc
mov
popa
aas
push
lret
scas
and
bound
mov
popa
adc
sbb
cmp
mov
push
pop
lock
push
sahf
bound
pop
insl
out
daa
hlt
xor
sub
sub
xor
scas
cwtl
push
and
int3
shrb
pavgb
ljmp
push
sub
repnz
stos
mov
sbb
ja
pop
push
xor
mov
mov
xchg
xor
inc
adc
xchg
add
mov
into
enter
mov
dec
sub
negb
nop
or
and
sub
sbb
add
bswap
dec
dec
pushl
in
int
sbb
outsb
or
fdivr
sub
addl
push
insb
les
inc
in
jle
popf
sub
sbb
dec
and
xor
data16
mull
movb
adc
adc
xor
push
jb
xchg
pop
dec
ja
fcmovnbe
mov
addr16
or
cmp
push
pushf
mov
mov
inc
pop
subl
test
gs
ret
lret
jae
sub
sbb
orb
mov
pop
leave
mov
xor
dec
in
jmp
std
cltd
je
aam
out
scas
xlat
mov
pop
push
pop
and
into
aaa
lods
push
in
mov
push
je
xchg
xchg
test
sub
mov
mov
push
ret
out
test
mov
inc
xor
mov
clc
inc
jg
fcmovb
xor
pop
stc
in
lret
xchg
xchg
push
idivb
arpl
jecxz
jbe
lcall
mov
add
mov
repnz
pushf
mov
jns
mov
cltd
sbb
fwait
xor
js
dec
adc
mov
push
insl
sbb
shl
cmpsb
ficompl
jge
mov
mov
push
jle
daa
lods
and
mov
sub
fcomi
cmp
aad
mov
ret
lea
ja
jns
jns
stos
sbb
dec
sbb
mov
jns
sub
cs
mov
jp
xor
lods
xor
sti
test
or
push
inc
out
xor
xor
lret
movsl
icebp
into
int
mov
test
mov
cmp
dec
pop
sbb
mov
aam
jle
in
test
mov
push
cmpsl
in
ficoms
loop
sbb
sbb
std
mov
push
jp
or
or
jae
mov
or
out
es
dec
js
cwtl
inc
sub
xchg
xchg
pusha
or
cmpsl
iret
xrelease
jecxz
and
into
inc
gs
mov
clc
mov
jnp
jg
call
ss
add
push
sub
int
jle
lret
xor
sbb
mov
inc
or
pop
fidivrs
inc
push
xchg
push
and
push
jns
subl
andb
inc
sbb
icebp
jb
arpl
adc
inc
xchg
outsl
or
adcb
or
push
cmp
xlat
sahf
push
jb
mov
xor
jecxz
dec
pusha
lock
rcl
pop
cmc
adc
jl
pushf
or
cmp
mov
jne
cmp
mov
ret
cld
jle
jbe
mov
lret
jns
mov
das
xchg
mov
push
bound
mov
test
push
inc
and
dec
mov
popa
add
fs
add
and
adc
jbe
pusha
das
mov
push
loop
mov
cmp
int
fsubr
pop
insl
fsubs
pop
cli
test
pop
loop
and
pop
nop
cmpsb
lea
aad
rolb
shrl
jb
adc
xchg
dec
pop
xor
daa
mov
pop
out
jmp
adc
sbb
add
pop
imul
shl
sbb
fistpll
fcomps
stc
inc
mov
in
aas
imulb
adc
loop
mov
jmp
mov
dec
pusha
inc
sub
xchg
lods
cmpsl
ds
call
inc
pop
xchg
mov
mov
cmp
imul
jnp
add
popa
mov
imul
or
xchg
out
stc
loope
jmp
outsl
mov
shrb
xor
cmpsb
subb
cwtl
ljmp
pop
aad
std
out
test
aad
push
iret
inc
fs
xchg
icebp
or
mov
insb
push
pop
ss
mov
inc
push
popa
inc
pop
xchg
lret
sub
inc
cs
rolb
cmp
pop
pop
jecxz
cmp
ret
movsb
in
dec
rorb
dec
dec
mov
and
xlat
jp
mov
mov
frstor
mov
push
sub
xchg
ror
cmpsl
jl
mov
leave
pusha
int3
push
and
jle
mov
add
outsl
jg
and
pusha
lahf
ss
add
and
mov
push
mov
sti
xchg
and
mov
and
popf
popf
and
mov
sub
popf
push
push
xor
xor
icebp
inc
iret
or
sbb
mov
push
adc
aaa
fwait
es
xchg
iret
push
jne
mov
into
xchg
pusha
mov
push
pop
je
mov
mov
push
test
adc
inc
imul
mov
pop
mov
mov
jbe
adc
shll
rorl
jo
inc
jmp
xchg
lcall
sbbb
scas
jnp
inc
fsubrl
adc
jmp
xor
lock
negl
or
add
cmpsl
xchg
std
dec
cs
mov
cltd
pusha
jecxz
sub
sub
dec
imul
mov
push
sub
test
adc
cld
mov
inc
inc
ret
cmp
frndint
stos
jae
jecxz
inc
jae
xchg
mov
mov
xor
jne
addr16
lods
ss
inc
popa
push
sbb
in
outsb
lcall
rolb
shrl
push
mov
out
pop
or
inc
scas
icebp
push
push
adc
adc
test
xchg
js
or
test
mov
xchg
shrl
cmp
and
mov
ja
fisubs
lcall
jo
hlt
sub
or
cmp
add
inc
lahf
in
mov
xor
push
sbb
xchg
test
add
cmp
mov
xor
sbb
push
pop
cmc
inc
or
mov
sub
test
shl
mov
test
stos
jbe
int3
cmp
mov
ret
mov
jns
xchg
movsb
jecxz
bound
mov
xor
mov
mov
enter
cmc
ja
loopne
dec
rcrb
pop
xchg
push
mov
fcmovnb
dec
aaa
imul
ja
mov
fcomps
out
xchg
mov
sbb
mov
inc
sbb
dec
dec
lret
mov
nop
movsb
imul
enter
lock
mov
pop
add
inc
stc
and
mov
inc
fldt
jmp
test
sti
mov
test
xchg
inc
push
sahf
mov
call
cmpl
add
cmp
in
jns
jno
dec
fucomi
test
enter
gs
sbb
cmp
or
cs
imul
mov
mov
std
outsw
daa
push
cmp
cmc
fnstsw
cltd
outsl
jle
jns
push
push
xor
in
push
push
mov
push
leave
mov
outsb
push
ljmp
loope
pop
dec
shlb
shll
shr
mov
and
jmp
fwait
sti
divb
jno
adc
mov
jo
push
ds
lahf
repz
jo
cmp
out
adcl
cmp
insl
aam
call
loope
andl
jmp
repz
and
adc
mov
sbb
mov
stos
inc
add
jno
rcl
xlat
push
sbb
pushl
imul
add
popf
and
jae
stos
insl
lahf
pop
xchg
es
dec
jnp
inc
sub
popf
outsl
in
xor
es
sbb
repz
imul
add
jae
xchg
sub
mov
add
and
repz
clc
and
sub
ja
cld
pop
scas
addl
int3
roll
xor
push
ljmp
jno
ret
xchg
jecxz
mov
mov
sbb
mov
xor
xlat
dec
jae
push
shrl
mov
std
repz
cmp
daa
repz
mov
and
ja
pusha
mov
jbe
mov
xchg
xchg
and
in
inc
outsl
lea
sti
mov
xchg
sub
add
scas
ficomps
push
and
add
mov
lds
mov
cmpl
add
sti
pavgb
mov
xor
les
insb
mov
pop
repz
out
add
sahf
jp
xchg
lock
xchg
pop
enter
daa
inc
cmp
cmc
addr16
pop
pop
push
mov
mov
shll
int3
arpl
jge
std
lock
lcall
repz
xchg
adc
xchg
cltd
test
jb
int3
jecxz
cmpsl
adc
cltd
lock
lock
fidivrl
repnz
inc
sbbb
or
sbb
cmp
add
add
mov
out
mov
in
dec
jo
cs
call
and
mov
movsl
imul
in
shl
pop
jle
stos
and
mov
cld
shll
stos
lret
mov
test
loopne
arpl
mov
xor
and
out
movsl
and
adc
dec
cmp
jl
cmp
fstp
inc
dec
cmp
sub
lret
cld
or
and
fistpl
bnd
out
popa
adc
inc
push
pop
icebp
clc
sti
orb
pop
dec
mov
jno
pop
xchg
mov
leave
xchg
dec
push
jmp
sub
xor
mov
les
mov
addr16
cmpsl
daa
sbb
test
test
lea
aam
and
inc
popa
cli
jnp
into
mov
insb
sub
aad
lods
idivl
jge
xchg
xor
movb
xchg
adc
inc
sbb
xor
adc
enter
lcall
pop
xor
and
mov
xor
gs
js
mov
fistpll
mov
jge
jnp
scas
pushf
lret
into
pop
scas
mov
outsb
loope
cmc
bound
imul
cwtl
lea
loopne
andl
lea
dec
mov
xchg
ret
pop
mov
ljmp
mov
loopne
push
push
in
test
sub
divps
inc
addr16
or
xor
and
dec
mov
ret
sbb
jae
insb
cmp
cmc
push
out
lods
les
jns
mov
mov
cld
or
into
pusha
or
cs
faddl
fnsave
xor
rcl
icebp
cmp
lcall
sti
mov
push
pop
cltd
add
movsb
adc
aad
mov
jae
and
inc
ss
jae
jno
mov
clc
aas
dec
rcrb
add
dec
ja
sahf
adc
stc
mov
out
and
cmp
mov
inc
nop
inc
testl
jbe
addl
add
push
vpcmpeqd
dec
xchg
ret
dec
loope
dec
jmp
scas
sbb
xor
outsl
in
insb
into
xchg
jne
dec
das
jae
out
loope
aam
xchg
mov
div
insl
jl
test
popf
cltd
mov
and
aas
mov
outsb
pop
scas
lahf
arpl
jge
int
sbb
dec
int
gs
sub
xchg
lcall
movsb
sbb
push
loope
sub
pop
adc
mov
add
in
xor
fnstcw
mov
fcompl
mov
adc
lcall
sahf
pusha
sub
es
ret
pushf
ret
pop
out
push
sbb
icebp
sahf
pop
xchg
cs
test
xor
jge
push
sub
dec
cmp
mov
fwait
enter
mov
sbb
or
sub
ret
and
test
sarl
mov
stos
inc
adc
scas
cmp
mov
fs
push
add
jae
test
enter
sub
lret
je
push
push
fstenv
jbe
fildl
cld
inc
inc
and
mov
jnp
mov
sbb
xchg
inc
push
leave
xchg
lds
mov
pop
pop
jecxz
lret
mov
test
mov
xcrypt-ctr
cmpsl
cltd
pop
ret
mov
sub
scas
mov
das
lret
push
push
jno
loopne
aas
pop
push
push
or
mov
push
aaa
leave
shr
aas
xchg
inc
cltd
sub
jae
xor
into
lock
or
outsl
fcomps
sahf
movsl
xchg
mov
iret
movsb
xor
pop
ljmp
push
stos
test
xchg
mov
popl
xor
rcrl
xor
test
mov
mov
pop
pushf
sub
cmp
shlb
je
movsb
enter
mov
pop
out
xor
cmp
in
sub
push
rcll
hlt
xchg
and
testb
ja
add
rolb
inc
push
leave
clc
inc
xadd
scas
sbb
and
out
mov
push
fdivl
scas
leave
fistpl
mov
push
dec
rol
lret
dec
shll
push
fdivs
repz
jmp
js
cmc
cmp
xchg
adc
out
adc
fisttpl
pop
xchg
addr16
mov
repnz
xchg
lret
insl
mov
xor
fnstsw
leave
cmpsl
sar
add
sbb
in
or
pop
out
dec
mov
push
and
jne
or
xchg
xchg
xor
adc
sar
or
dec
nop
sbb
js
int
xor
mov
and
xchg
adc
dec
imul
xchg
sarb
test
mov
js
shlb
sub
xor
int3
in
sub
mov
nop
rclb
mov
mov
cs
fwait
add
repnz
adc
inc
mov
repz
bound
lea
sub
aaa
jmp
lahf
in
insb
sbb
push
sbbl
call
and
and
sub
lea
call
fbld
inc
adc
mov
repz
lds
es
jge
mov
es
testl
iret
shll
xor
lods
ja
test
and
xchg
sti
mov
es
inc
add
cld
xchg
jle
mov
in
scas
cwtl
dec
xchg
testl
jg
and
xchg
push
aas
push
ret
push
lea
pop
mov
add
or
xchg
es
pusha
idivl
lret
inc
xor
jno
out
ds
or
movsb
mov
or
jnp
or
jmp
and
movsb
cltd
xchg
cs
ret
into
add
mov
lret
pushf
sbb
aas
test
mov
pop
jecxz
les
int3
xchg
sub
mov
gs
clc
xor
sti
or
mov
movsb
add
out
mov
shlb
cld
mov
lods
orl
push
sahf
cwtl
in
dec
xchg
popa
enter
add
rclb
add
fdivl
and
dec
xor
popf
cmpsb
in
dec
loop
or
es
es
out
in
xchg
outsb
aaa
push
mov
push
dec
in
enter
hlt
lock
jl
mov
mov
cld
test
mov
fdivrl
das
adc
sub
xor
sub
push
sbb
leave
mov
and
adc
addr16
push
inc
add
inc
push
dec
dec
jb
fcom
xor
push
push
arpl
lcall
xchg
push
fstps
xorb
jno
inc
sbb
pop
test
xor
shrb
fsub
jp
adc
jl
ljmp
mulps
xlat
jp
outsl
in
jae
add
bound
push
dec
mov
sti
jg
and
in
mov
pop
jno
pop
sbb
mov
mov
aad
sbb
call
in
cmpsb
xchg
pop
addr16
lret
xlat
ret
mov
fimull
lock
shrb
into
xor
mov
sbb
rol
lods
cmp
mov
fwait
iret
gs
jecxz
icebp
dec
mov
xchg
xchg
xchg
or
imul
jl
loop
rorl
fistpl
scas
fnstsw
xor
jo
sti
cmp
loopne
and
jmp
out
int3
jg
mov
mov
sub
fsubrp
sbb
lcall
ljmp
and
shll
insb
sub
add
xor
leave
sub
test
dec
inc
sub
push
xchg
adc
dec
jbe
arpl
cs
mov
and
inc
test
adc
sub
xor
loopne
lret
push
lcall
adc
mov
sbb
pop
jmp
inc
jl
divb
jne
pop
clc
gs
pop
hlt
pop
push
mov
and
pop
mov
jecxz
mov
mov
push
add
andb
outsl
mov
push
stos
movsb
sbb
mov
pop
lods
cmp
mov
mov
inc
ja
sbb
lcall
dec
in
pop
pop
lahf
fisttpll
mov
orb
adc
mov
loop
xchg
mull
ret
arpl
add
fcoml
dec
in
add
pop
jle
outsl
push
xchg
pop
loopne
dec
dec
add
sbb
pop
jle
scas
adc
insl
and
mov
jge
adc
jae
inc
push
jle
or
sbbb
ret
mov
subb
mov
and
xor
adc
pop
test
ds
cltd
fwait
test
mov
insb
add
xlat
cmpl
sub
pop
pop
imul
loopne
mov
inc
addr16
pop
dec
or
inc
mov
fsubl
ror
or
push
add
adcl
inc
sbb
or
cmpsl
jmp
fucomip
cld
mov
mov
add
imul
xchg
adc
sbb
cmpsl
aaa
cmp
push
mov
jecxz
ret
repz
xchg
mov
cmp
rcl
test
fnstsw
push
xlat
inc
jl
jl
cmp
insb
dec
fbld
dec
lea
lret
cmp
jb
and
loope
fidivrs
call
or
and
lea
jb
sbb
stos
sbb
das
pop
nop
daa
jmp
or
daa
loope
je
jb
push
mov
xor
mov
sub
mov
mov
outsb
mov
in
je
ss
pushf
sarl
pop
pushf
lods
ja
mov
ja
adc
mov
ficompl
sahf
push
sub
cmp
xor
mov
dec
ljmp
rcll
and
push
out
test
cmp
xor
and
dec
cltd
xor
push
popf
xchg
data16
push
in
xchg
lods
fmul
jbe
mov
pop
cmpl
out
mov
fisttpll
std
adc
xor
and
or
pushf
cli
dec
or
into
mov
pusha
dec
mov
jg
push
popf
fistl
push
lock
inc
cwtl
das
jbe
cld
push
popf
data16
cmpsl
fcmovbe
icebp
rep
or
xlat
ja
pop
cmc
rclb
mov
loope
and
mov
inc
mov
cwtl
repz
out
in
jecxz
mov
sbb
stos
lret
pop
test
mov
sbb
imul
sub
movsb
fwait
xchg
inc
and
mov
push
jo
xchg
dec
mov
xchg
ret
pop
enter
mov
pop
out
sub
cld
mov
mov
or
fnstcw
testl
and
das
stos
inc
pusha
fmulp
xor
out
sahf
or
out
outsl
adc
ds
inc
das
jmp
pusha
and
pop
je
out
inc
xor
lds
inc
push
cmp
jmp
outsb
lds
lea
stc
xor
cmp
fs
imul
jge
ljmp
inc
jo
ret
leave
scas
mov
fucomip
fs
and
enter
jb
out
aas
andl
push
mul
daa
test
movsl
mov
add
out
push
jno
fwait
xchg
ljmp
in
jb
stos
int3
cmpsb
cwtl
mov
add
pop
adc
mov
inc
stc
outsl
inc
pop
jge
push
in
push
inc
or
cmp
sub
or
rcrb
xchg
sbb
into
mov
push
fstps
xlat
pop
daa
loopne
testb
push
leave
cld
dec
dec
shlb
pop
adc
jno
jecxz
mov
adc
nop
mov
aaa
dec
pop
pop
xor
pop
sahf
cmpsb
and
iret
inc
xlat
jo
mov
test
and
aas
loope
jae
icebp
add
push
sub
aam
fidivs
mov
int3
pushf
sub
cmp
daa
into
mov
ror
loopne
xor
mov
dec
push
dec
mov
mov
sub
adc
inc
xchg
and
ficompl
clc
cmp
or
cwtl
fcmove
dec
pop
push
movsl
mov
rcll
sti
jp
mov
dec
dec
out
cli
fsubrl
add
adcb
pop
xchg
adc
clc
in
sbb
ret
mov
iret
ficompl
mov
pop
mov
mov
jmp
mov
scas
push
push
lahf
les
dec
xchg
push
mov
rsqrtps
cmc
test
daa
ds
inc
sbb
pop
add
mov
xor
repz
repnz
sbbl
sub
push
inc
push
jo
mov
cmp
push
push
test
push
push
lds
mov
mov
dec
mov
out
lea
mov
inc
divl
jns
cmp
fistl
push
sbb
mov
scas
and
mov
pop
enter
inc
stc
push
mov
pop
ret
test
push
push
sbb
call
dec
dec
cwtl
jnp
out
push
cli
inc
or
stc
out
ja
call
or
jl
pop
stos
mov
push
subl
cli
pop
scas
outsl
adc
push
inc
fnstenv
mov
mov
inc
cmpsl
mov
out
rol
push
add
mov
dec
loop
sub
test
fdivr
imul
test
xor
sbb
inc
inc
push
pop
dec
mov
fidivl
das
cwtl
jno
sbb
out
in
shl
dec
gs
mov
nop
pop
sub
xor
cmp
fimull
inc
ljmp
stc
and
je
and
sarl
and
or
cmpsl
mov
stos
dec
nop
call
cmp
pop
xchg
stos
cmp
shrb
aaa
push
mov
mov
lods
inc
in
xor
or
int3
fiadds
repnz
test
test
outsb
loope
sbb
stos
xchg
sarb
sub
xor
jg
mov
or
jle
lahf
push
xor
in
pusha
faddl
mov
test
push
add
jp
jo
out
jle
inc
in
lea
jbe
mov
dec
ret
jae
push
sbb
out
xchg
cmc
mov
jl
inc
hlt
arpl
xor
idivb
mov
fwait
mov
dec
sub
pop
pop
insb
out
push
sahf
jae
mov
adc
jl
mov
jo
test
jp
enter
leave
gs
xchg
ljmp
pop
cld
dec
in
daa
ja
aam
cmp
repnz
loope
stos
les
push
pop
out
stc
jg
sbb
ret
bound
mov
or
divl
mov
adc
mov
pushf
dec
sub
pop
test
shlb
pushf
xchg
test
and
push
out
data16
xor
jle
ds
loop
xchg
pop
adc
mov
cltd
test
or
aad
sti
daa
xchg
adc
repz
or
cltd
das
mov
fidivl
repz
sub
push
jle
jb
jecxz
js
enter
mov
xchg
je
push
pop
mov
loope
adc
cmp
pop
jg
jle
dec
mov
dec
shrl
sbb
dec
outsb
inc
mov
jle
dec
sub
jecxz
cmp
insb
xchg
stc
and
das
scas
sbb
add
mov
mov
insl
xor
cmp
imul
cltd
xor
mov
fiaddl
sbb
mov
xor
pop
lcall
insb
mov
aas
dec
pop
out
leave
lahf
push
push
jo
rclb
xor
push
cltd
inc
push
test
divb
push
rorl
jg
repz
jno
mov
jmp
lds
and
bound
xchg
sub
cmpsl
insl
loopne
xchg
mov
pop
mov
shl
stos
cmpsb
sbb
or
jmp
jp
fbld
rol
jns
pop
jmp
pop
sahf
out
or
mov
jns
dec
daa
lods
mov
sbb
xchg
dec
bound
lret
fcoml
cld
dec
jo
jg
aam
shll
inc
add
cmpsl
push
sub
inc
cmp
sti
push
dec
cmp
mov
cmp
jle
pop
push
jmp
mov
out
push
mov
adc
incb
jg
sbb
cld
xchg
fs
sbb
scas
adc
rorb
or
bound
mov
push
pop
cmpsb
ja
imul
insl
int3
arpl
js
repz
mov
mov
mov
mov
adcl
push
fmuls
adc
nop
ja
jae
mov
or
loop
mov
pusha
xchg
sub
fwait
mov
dec
pop
cmpsl
cmp
inc
decb
inc
jb
rol
dec
push
ljmp
rcl
mov
jmp
repz
stc
inc
repnz
sub
call
mov
adcb
mull
xor
push
adc
pop
mov
dec
adc
int
pop
xchg
pop
cmc
xor
pop
mov
xchg
xchg
clc
xchg
data16
lock
addr16
aad
ja
push
mov
sbbb
daa
in
xchg
pop
mov
loopne
adc
std
lds
aad
pop
xchg
pop
pop
bound
insb
cld
ljmp
adc
data16
xor
sbb
jmp
xor
jns
mov
mov
rcr
pop
xchg
sub
fwait
mov
repnz
mov
cmp
inc
lahf
mov
pop
adc
pushf
xor
xor
fdivl
push
mov
je
xor
sti
lods
vpmacssdql
xor
loopne
adc
iret
sub
psrld
xor
inc
xlat
insb
scas
in
mov
add
mov
gs
pop
lret
out
scas
stos
ficomps
or
cli
pop
mov
and
movd
push
mov
pop
mov
ljmp
nop
add
loop
push
jbe
in
enter
cwtl
or
mov
icebp
push
jb
and
xchg
pop
jmp
sub
pusha
loopne
mov
pop
in
lcall
sbb
out
push
incl
in
push
icebp
cwtl
pusha
in
pusha
data16
lea
and
or
sbb
icebp
aaa
arpl
stos
fiaddl
xchg
cs
mov
out
mov
add
hlt
mov
and
loop
lods
pop
or
sub
pop
sub
pop
sub
jnp
shll
jnp
cmpsb
and
mov
jge
add
sti
jbe
push
sbb
adc
arpl
mov
dec
in
mov
cli
pop
andb
mov
pop
sbb
push
adc
mov
and
shl
jge
dec
pop
sahf
negb
jle
push
sti
inc
pop
es
lods
lods
inc
jnp
call
jp
xor
mov
pushf
mov
fmull
adc
int
jg
int
xchg
fcoms
push
push
sub
cmc
push
insb
arpl
push
stc
xchg
insl
lods
fiaddl
sbb
jp
mov
lock
mov
into
mov
jns
mov
test
and
add
std
stos
popl
scas
mov
lods
xchg
subb
sbb
or
das
pop
icebp
jbe
call
in
fidivl
pop
or
mov
orl
jle
orb
out
push
dec
fsts
mov
mov
sbb
mov
cmp
mov
lcall
lcall
push
scas
les
adc
ja
shll
add
jns
ja
push
adc
lret
andl
dec
pop
nop
adc
and
loop
nop
fdivs
cmp
pop
sbb
jo
mov
lea
decl
outsb
adc
mov
cmc
dec
mov
push
aam
or
nop
ljmp
inc
fstl
jo
mov
mov
and
push
pop
iret
jecxz
imul
in
xchg
jg
fbstp
jns
lret
push
lods
jg
test
push
shlb
xlat
cmpsb
std
mov
jle
dec
and
iret
mov
pushf
and
in
push
mov
mov
push
jmp
push
lds
jb
push
mov
outsl
cli
sub
aaa
mov
fisttpll
cmpsb
inc
cmp
jnp
jecxz
or
daa
add
fwait
int
mov
lcall
adc
inc
lods
icebp
add
movb
hlt
ss
pop
insl
pop
stc
nop
dec
mov
adc
or
in
mov
cwtd
xor
inc
add
jae
add
mov
add
fidivrs
adc
pop
sahf
test
mov
lods
adc
jb
mov
scas
mov
inc
addr16
cltd
pusha
in
mov
daa
jle
orl
sbb
xchg
add
mov
sbbl
sub
pop
mov
dec
dec
mov
sub
sub
jp
lahf
ja
cmpsl
mov
jge
push
insb
cmpsl
cmp
idivl
je
rcll
pop
fadds
jle
data16
pop
pop
mov
add
gs
je
mov
jae
leave
and
pop
adcl
faddl
or
in
fistps
rorb
pop
outsb
dec
das
or
sub
mov
jo
cmpsl
add
mov
adc
mov
jp
xor
in
dec
pop
or
cld
mov
pop
dec
sbb
leave
lret
push
mov
sahf
mov
adcb
cmp
inc
sub
in
sub
loopne
fucomp
pop
das
mov
pop
push
test
repnz
mov
adcl
arpl
int
pop
frstor
nop
push
inc
in
push
cmpsl
mov
push
outsl
lret
pop
jge
dec
and
and
enter
cmp
mov
imul
fistpll
and
js
mov
stos
andb
shrb
in
stos
xor
push
repnz
idivl
shll
int
in
andl
mov
popa
cwtl
pop
jmp
pop
jp
adc
out
jo
pushf
es
rcl
xchg
outsl
add
inc
imul
popf
insb
test
mov
clc
stos
imull
ss
mov
ret
xchg
mov
jo
dec
xchg
dec
inc
push
cmp
out
push
mov
adc
lods
mov
pop
enter
repnz
ficoms
pusha
rclb
aaa
stos
cmpsl
cmc
cwtl
fs
xor
iret
popl
mov
push
popa
orl
mov
push
sub
xchg
pushf
jecxz
iret
adc
sti
adc
add
sbb
jb
dec
loopne
repnz
std
nop
lret
or
xchg
mov
jbe
jg
stos
lods
shll
xor
fdivl
or
or
sub
jg
mov
leave
jo
inc
sbb
xchg
enter
cmpsl
jl
out
dec
pop
jmp
fwait
fs
inc
mov
sub
adc
pop
stos
xchg
pop
imul
lgs
jp
sub
sbb
popa
adcb
or
or
add
mov
adc
pop
sbbb
cmp
idivb
sbb
clc
cmp
jmp
jae
adc
repz
adc
pop
cmc
jecxz
push
xor
arpl
push
insb
or
adc
push
lret
jb
sub
lret
inc
test
lahf
cmc
adc
pop
push
mov
imul
dec
test
mov
fidivs
and
mov
iret
sbbl
out
sbb
cs
mov
aas
sbb
add
pop
test
cmp
xchg
push
inc
inc
adc
sub
scas
xchg
out
ret
int
inc
inc
fsubr
and
mov
hlt
pop
movsl
mov
lods
xor
xchg
fisubrl
ret
mov
mov
or
or
add
cmpsl
lods
add
or
test
mov
or
xchg
xor
cwtl
adc
and
movsl
ss
xchg
xchg
lcall
sbb
popf
sub
sub
xor
pop
jb
mov
push
shlb
lret
push
loope
mov
xchg
xor
add
xor
lret
pushf
das
push
out
mov
xchg
mov
xor
pushf
xlat
fsubs
out
or
les
ss
mov
icebp
movsl
dec
jecxz
repnz
cli
inc
sub
das
inc
push
xchg
push
out
or
aaa
cmc
inc
and
cmp
jl
ds
pop
mov
inc
sar
shl
push
mov
fildll
push
push
cmp
ret
ja
push
jle
clc
inc
movsb
xchg
stos
dec
mov
sbb
aas
mov
and
fdivs
mov
lret
sarb
or
in
push
pusha
imul
cmp
and
push
int
push
fdivs
test
cmp
pop
or
cmpsb
imul
adc
adc
inc
cmpsb
imul
call
das
test
fistl
inc
and
push
sbb
repz
push
push
sbb
roll
mov
adc
add
add
fucom
pop
pushf
mov
add
and
push
or
es
pop
stos
xchg
mov
shlb
and
ja
cmp
insb
jmp
mov
cmpsb
cli
fsubl
cld
scas
sub
adc
or
mov
outsl
push
jg
sub
bound
loope
push
xchg
dec
dec
int3
insb
loopne
aas
aam
icebp
lret
cmpsb
cmp
jmp
mov
ljmp
jns
fsubl
inc
out
les
mov
ret
shlb
mov
xor
roll
adc
ljmp
xchg
xor
xchg
js
in
xchg
lret
data16
mov
xor
or
jle
sub
xchg
xchg
add
fs
inc
xchg
mov
or
inc
cmp
das
inc
adc
push
aam
fldcw
mov
bound
cmpsl
jecxz
lods
and
or
jns
xor
mov
aam
repz
inc
adc
mov
mov
dec
adc
xchg
mov
fildll
pop
repz
mov
xorl
mov
pop
pop
or
push
jmp
cs
push
testl
push
test
imul
xor
jne
shl
cmpsl
mov
shrb
jbe
xchg
loope
xor
or
lahf
fldl
test
int3
xchg
ja
lcall
mov
inc
ss
mov
mov
jns
add
shll
cmpsb
push
pusha
shrb
stos
pop
dec
pushf
push
xor
dec
cmp
and
mov
clc
scas
ja
jne
cmpsl
out
push
and
and
dec
fiaddl
ror
sub
shlb
enter
fwait
loop
leave
movsl
mov
lock
inc
lods
add
xor
fildl
ror
out
std
dec
xor
mov
and
in
das
addr16
ja
cmovg
ja
jae
daa
sub
mov
cmp
xchg
insb
push
mov
sbb
mov
test
cmp
repnz
les
std
movsb
add
test
cltd
pop
jg
int
adc
sbb
ret
add
xor
stos
insb
int
dec
adc
cmp
int3
gs
loopne
dec
pop
in
lds
push
push
jb
cs
rolb
cs
stos
je
int3
lods
add
in
mov
sbb
pop
incl
and
cmc
mov
test
aad
std
mov
aaa
clc
loopne
popa
add
testl
mov
leave
jne
mov
gs
push
jle
xchg
loop
jmp
into
cld
cmp
fsubrs
jg
andb
fldl
mov
in
push
pop
add
inc
dec
ret
scas
mov
xor
outsl
cmp
arpl
adc
cmpl
fsubl
jg
movsl
dec
dec
cwtl
mov
data16
adc
leave
das
fs
cli
jae
push
mov
dec
push
ret
mov
cmp
mov
movsl
insl
testb
jmp
imul
orb
je
insb
push
insb
adc
je
insb
or
fmull
test
sbb
fimuls
adc
or
xchg
xor
dec
rcrl
test
loope
fstl
sbb
outsb
push
cmp
lds
cmp
lds
mov
sub
cld
cmp
sbbb
hlt
pop
orb
adc
xor
xor
leave
gs
jnp
xchg
dec
pusha
in
mov
push
les
lret
mov
mov
nop
jle
jns
lret
in
mov
in
test
fstps
mov
fpatan
sti
add
sub
inc
mov
fucom
rcrb
sub
xlat
mov
lret
int3
loopne
and
enter
mov
and
xor
jecxz
loopne
push
adc
rcl
cmc
andb
jecxz
dec
scas
lock
dec
xchg
jl
arpl
dec
ret
dec
jmp
gs
dec
int
sub
cmp
in
xor
fbstp
mov
ljmp
push
notl
push
in
adc
add
enter
es
mov
inc
test
fwait
loopne
mov
jl
mov
rol
or
outsb
test
mov
popa
mov
pop
into
lss
dec
je
push
js
jmp
jl
popf
push
out
mull
xchg
and
lods
lret
adc
clc
test
cmp
xchg
data16
mov
sub
clc
insl
enter
cmp
mov
fscale
push
rcrl
inc
std
fldt
test
pop
sub
mov
loopne
mov
ret
cmp
jle,pn
inc
mov
inc
call
jne
das
in
int
test
repz
xor
filds
cwtl
xor
xchg
ljmp
int
sbb
xor
jbe
notl
or
jb
and
fiaddl
push
fildl
push
mov
mov
nop
negl
in
add
nop
mov
mov
add
add
fwait
pop
imul
and
mov
sti
jno
sub
push
fdiv
cmp
add
ja
xchg
mov
adc
in
sub
jp
lods
dec
ficoml
mov
scas
sti
scas
stos
test
push
popf
fdivr
rcll
jae
fildll
popf
jp
push
pusha
andb
sahf
imul
mov
mov
jne
call
mov
inc
cmp
insl
push
int3
scas
ror
lods
cmpps
es
test
jo
adc
pop
ja
sub
mov
dec
stc
mov
jmp
adc
inc
inc
test
xchg
ja
dec
mov
inc
sub
sub
mov
cli
imul
push
in
dec
mov
sbb
sub
rorl
add
es
xor
mov
or
ret
xor
cmp
cmc
cmp
pop
xchg
sbb
test
mov
dec
rol
dec
mov
aaa
pusha
stos
and
jne
daa
lods
scas
push
jno
dec
lods
mov
les
les
cltd
xor
hlt
push
mov
repnz
add
lahf
and
or
jl
nop
sahf
test
dec
in
adc
cld
mov
lahf
and
inc
fistps
in
mov
adc
daa
ret
pop
icebp
dec
jmp
add
xor
fwait
xor
push
or
or
mov
rcrb
movsl
sbb
loopne
es
aaa
es
inc
sub
jge
inc
jne
mov
push
inc
mov
outsl
jo
insl
mov
lds
mov
aad
fdivp
in
hlt
lds
mov
js
add
ret
jle
and
daa
adc
cmp
pop
stc
adc
les
loop
jg
xchg
pop
mov
cltd
outsl
lock
jne
imul
icebp
ret
or
dec
jnp
push
aaa
lods
add
xchg
arpl
movl
adc
fimull
and
sahf
sbb
mov
mov
lods
rol
fistpll
add
or
loopne
mov
or
shrb
mov
fwait
cmpsl
fidivl
ljmp
jb
out
andb
sub
in
int3
mov
inc
fidivs
sub
push
jl
mov
xor
mov
sarl
imul
movzbl
push
ret
xchg
inc
mov
dec
mov
aaa
iret
loop
mov
sarl
sub
mov
addr16
int3
pop
insb
jle
test
mov
add
mov
cmp
sbb
pop
mov
pop
rorl
jnp
dec
mov
fimull
push
lea
popa
mov
aam
sarb
cmpsb
ffree
sub
mov
sub
inc
loop
add
jns
or
jg
or
cmp
mov
cmpsl
imul
leave
or
cli
push
push
andl
mov
ret
daa
fdivrl
xor
test
push
je
push
mov
test
loope
or
inc
and
push
mov
shll
bound
aaa
cmp
movsb
notb
lods
adc
or
nop
sbb
fisubrs
cmp
mov
adc
adc
sub
push
bound
sti
fbld
outsb
push
loope
lock
jle
fdivl
push
mov
test
adc
aaa
add
or
mov
mov
mov
daa
pop
sahf
orb
ss
cld
add
xchg
xlat
fmuls
pop
cld
and
mov
dec
in
inc
cmp
popl
push
add
lcall
push
xchg
out
xchg
xor
dec
shlb
jge
dec
cmp
jo
sbb
push
add
sub
adc
inc
mov
mov
adc
sub
or
cmp
push
pop
shlb
sub
push
pop
cli
xchg
test
adc
sbb
sub
add
repz
arpl
sbb
pop
mov
dec
pusha
inc
orb
cmc
dec
pop
dec
jl
sbb
out
fwait
aaa
out
popf
mulb
and
push
dec
jmp
mov
mov
push
inc
fnstenv
cwtl
lds
mov
push
cmp
pop
xlat
pusha
adc
fldenv
xor
xchg
mov
cmp
fdivp
out
push
mov
inc
xor
data16
gs
jmp
push
add
inc
rolb
cld
add
gs
rorb
or
aaa
or
xchg
sub
lret
roll
repnz
mov
cs
int3
xchg
popa
repnz
gs
testb
test
cmp
js
lret
scas
jp
push
repnz
out
test
inc
es
xchg
or
mov
mov
mov
mov
push
or
mov
scas
jns
xchg
xchg
dec
jae
cwtl
xchg
insb
jae
lahf
push
pop
testb
jae
bound
lods
xchg
and
cli
mov
aaa
xor
arpl
dec
jge
sahf
icebp
mov
pop
ja
repz
add
dec
pop
cmp
fwait
imul
int3
arpl
lahf
pop
add
jg
enter
daa
rep
test
in
pusha
test
out
add
outsb
or
sahf
lods
and
lret
iret
jne
ja
xor
pop
jno
int
cwtl
or
mov
pxor
pusha
addr16
jge
cld
pop
iret
sahf
ss
jmp
inc
imul
js
mov
ds
test
pop
jae
xchg
nop
lods
xchg
out
repnz
inc
repnz
cmp
out
ja
imul
cmp
xor
insl
lret
pop
xchg
cmc
push
arpl
add
pop
les
jmp
inc
fsubr
sbb
pop
jns
mov
cld
rol
sub
clc
gs
imul
insl
inc
lods
xor
mov
inc
sbb
lcall
dec
cmpsb
outsl
jae
pop
mov
bound
pop
mov
sub
in
je
rcrl
xor
ja
jmp
or
or
jns
or
cmp
cli
dec
jns
xchg
lods
jae
sbb
push
insb
gs
fidivrs
push
push
sub
test
pop
cmp
scas
shrl
test
inc
js
mov
add
in
sarb
fucom
push
and
xor
and
cmp
into
mov
mov
sahf
mov
dec
loopne
mov
call
add
aaa
std
insl
lret
fwait
add
push
lock
lret
int
sub
dec
ficoms
mov
fwait
shr
int3
cmp
popa
fnstenv
daa
stos
jmp
dec
sbb
scas
inc
adc
xchg
cs
xor
xor
cmpsl
dec
popf
fists
pushf
sub
sbb
pop
mov
stc
lods
icebp
add
loop,pt
xor
in
sbbb
and
lods
movnti
cli
jmp
loopne
stc
pop
fildl
loope
mov
adcb
loop
fcmovne
rcrl
mov
cmpsl
fists
push
shlb
mov
dec
add
pop
adc
or
push
sub
aas
cltd
lock
mov
aam
inc
test
sub
outsl
loop
addl
repnz
jne
xor
mov
ljmp
jno
fsubrs
and
mov
pusha
xor
ja
push
cmpsl
popf
lock
pop
xchg
sub
mov
add
dec
adc
or
jb
push
int3
arpl
into
push
das
cmp
inc
popf
imulb
and
or
fdivp
and
xchg
xor
pop
jns
test
lea
sub
pop
data16
mov
push
test
adc
movb
mov
sbb
addr16
jno
pop
mov
leave
fsqrt
jmp
fwait
sbb
or
pop
cmp
mov
imul
sbb
mov
and
pop
mov
xchg
cs
lahf
xor
out
int3
fisubrs
inc
pop
movl
js
out
ret
imul
sub
inc
popf
daa
std
or
jnp
add
jge
adc
orb
gs
fwait
push
mov
mov
stc
lods
das
or
mov
out
decb
sbb
test
test
aam
iret
stos
in
push
int
insl
sahf
aas
and
sti
cli
pushf
ficomps
push
cs
xor
jmp
push
and
sbb
ret
cwtl
jnp
test
cmp
push
ja
pop
daa
xchg
adc
xchg
sub
pop
or
imul
jno
push
repnz
andl
test
sbb
dec
push
mov
xchg
jb
mov
dec
or
out
pop
ds
out
xor
dec
arpl
jge
pop
aas
ret
add
test
inc
adc
add
hlt
lret
fs
sahf
pusha
mov
cmpsl
leave
and
sarl
test
test
movsb
shrl
lcall
ljmp
je
cmp
mov
aaa
ret
subl
lock
jnp
pusha
bnd
xor
mov
push
pop
cmp
pop
xchg
outsl
and
cwtl
stos
inc
mov
jbe
fmull
mov
icebp
out
inc
sbb
movsb
data16
or
push
rcrb
orl
mov
leave
pusha
push
dec
icebp
out
and
add
jo
insl
and
adc
call
out
xorb
mov
adc
dec
les
sarl
or
pop
jmp
adc
jns
out
cmp
push
rcr
jno
ja
stos
mov
xchg
outsb
les
add
mov
pusha
jno
push
mov
inc
out
add
adc
mov
pusha
shrl
stos
loope
or
lcall
ja
mov
daa
jmp
nop
test
je
jae
icebp
mov
push
mov
jbe
xor
jnp
push
rcr
int3
add
fwait
negb
popa
clc
fnstcw
xchg
xchg
xsha1
cmpsb
lea
lcall
mov
mov
or
xchg
adc
mov
pop
mov
adc
and
scas
inc
sbb
cmpsb
cmp
adc
daa
xchg
stos
and
inc
push
and
sub
lahf
or
rclb
or
mov
jo
mov
ret
sbb
dec
shrb
cmpsb
sahf
sub
dec
cmc
loop
xchg
dec
insl
mov
popa
jne
xchg
mov
cmp
xchg
pop
mov
sbb
cltd
dec
jge
xor
jbe
test
addb
test
adc
aaa
popa
outsb
push
jp
lcall
out
cltd
clc
cmpsl
cli
adc
lods
inc
rcrb
push
mov
jnp
pop
jns
and
lcall
stos
xchg
cmc
dec
push
sbb
mov
mov
push
shr
mov
rcll
xor
dec
fstpl
or
mov
cmp
into
add
adcl
leave
and
pop
out
xchg
adcb
dec
pop
int3
insl
in
aam
rdmsr
leave
inc
lods
jecxz
pop
out
push
out
jp
es
sbb
inc
sbb
sub
in
sbb
in
test
xchg
jp
js
push
repnz
dec
sbb
ds
sub
fidivrs
xchg
cmp
pop
pop
testb
cli
stc
jg
mov
cmp
jbe
push
cmp
loopne
movsb
adc
cmpsl
ds
unpcklps
cmpsb
lds
push
push
pand
pop
jecxz
and
cmp
and
in
scas
jne
fdivp
outsl
fldcw
lea
adc
cmp
lcall
nop
push
mov
scas
cmp
pop
dec
int3
scas
test
push
stos
jle
lods
add
push
mov
cmp
arpl
push
loopne
sbbb
sub
sub
and
push
jmp
lods
add
nop
and
scas
cmc
mov
mov
mov
mov
sbb
sti
sti
movsb
cmp
or
inc
lret
xchg
sub
ja
cmp
jge,pt
jo
mov
push
adc
lds
test
mov
dec
aas
push
adc
std
in
daa
mov
push
mov
js
mov
jl
sub
adc
or
lahf
stos
pop
ffreep
shrl
xor
fldl2t
daa
ds
test
mov
mov
cmc
xchg
xor
push
lahf
ss
stos
sub
xor
push
push
sbb
cli
mov
jno
xchg
add
mov
pusha
cmp
xchg
std
out
cli
fstps
movsl
insl
push
ss
daa
fcomps
les
inc
outsl
je
mov
rclb
pop
cmpsl
mov
mov
jb
js
outsb
inc
mov
jge
and
rcrl
cmp
cmp
jmp
rcrb
stos
aaa
mov
pop
in
sbbl
incl
int
inc
or
xchg
test
scas
mov
aaa
enter
mov
xchg
repz
cmpsl
cmpb
push
lods
or
sub
incl
bound
ljmp
inc
sbb
and
scas
test
adc
mov
js
subb
pushf
mov
inc
test
cmp
stos
xchg
cld
pop
iret
bound
mov
leave
dec
out
fidivs
jne
clc
mov
leave
mov
out
nop
xchg
push
out
dec
mov
push
subb
and
cmp
scas
jg
push
push
dec
shr
push
daa
sbb
sub
lea
arpl
adc
call
jp
loop
adc
cmp
cltd
add
dec
dec
xchg
pop
fwait
mov
shlb
cmpsb
xor
fldl
rorl
sbb
or
xor
sub
mov
test
cld
add
cmpsl
or
mov
mov
jle
inc
adc
sbb
imul
xchg
cmp
dec
shrl
ret
rcl
insl
push
fstpl
mov
bound
in
les
ljmp
inc
and
fdivs
sub
add
loope
imul
jg
mov
dec
sub
movl
ret
ja
mov
fisttps
sbb
setbe
mov
xor
js
outsl
add
fnsave
pushl
aam
jae
cwtl
repnz
and
xchg
call
test
hlt
xor
xor
dec
loop
inc
push
mov
push
stc
scas
fstps
pop
or
movsb
and
push
lds
sbb
pop
loopne
add
imul
in
fs
or
jnp
cmpsl
ds
scas
fucomp
or
and
pusha
sbb
cltd
insb
lret
popa
pop
jge
daa
mov
stos
insl
jmp
adcl
fimull
sbb
xor
cmp
xchg
andl
mov
shlb
mov
std
push
fisttpl
arpl
shll
and
jo
cld
adc
jo
lcall
jecxz
add
jg
sbb
or
mov
mov
xor
sbb
arpl
sbb
mov
test
movsl
cmpsl
mov
and
fistpl
lret
add
rcl
cmp
xor
push
aam
xor
rcll
jo
push
or
outsb
jno
out
inc
nop
inc
jb
add
fdiv
in
loopne
adc
push
xchg
incb
xchg
mov
push
pop
shrl
lods
pushf
push
dec
jae
in
fst
movsl
sub
lret
loope
mov
cmp
nop
push
mov
dec
cmc
addr16
addr16
pop
movsl
xchg
lods
leave
and
jl
repz
das
fnsave
ret
jb
pop
cltd
sbb
fimuls
shl
sub
popf
aad
repz
mov
ret
mov
xor
adc
loop
fsubl
lods
add
enter
or
jo
in
out
jl
cmp
sub
outsl
call
push
in
dec
jl
adc
out
cld
sub
xchg
mov
lcall
jp
xchg
xor
sub
sub
mov
arpl
sti
push
xchg
mov
and
bound
leave
dec
push
je
scas
and
in
adc
or
add
in
daa
insl
aad
ljmp
in
fwait
in
jnp
mov
addb
leave
xor
push
mov
jns
lea
or
push
cltd
test
sbb
add
mov
sti
inc
jp
push
ficoml
sbb
push
jl
or
xchg
hlt
jae
cmpsb
jp
fsubrs
cmpb
xchg
jnp
xchg
jp
mov
int3
arpl
mov
cs
stos
adc
test
xchg
jmp
mov
push
stos
xor
jmp
lock
cmp
adc
xlat
repz
aaa
or
inc
jmp
sbb
push
jno
ret
fdivl
xchg
mov
mov
lret
add
dec
mov
fistpll
sub
test
or
decb
pop
dec
sti
xchg
es
fistpll
imul
add
jle
push
movsb
subb
dec
jg
cmp
testl
outsl
fwait
dec
adc
inc
clc
repz
in
lods
jmp
jl
popf
xchg
dec
cltd
push
popf
cmc
sub
sbb
pop
push
leave
mov
mov
nop
das
imul
sbb
lcall
dec
add
xor
adc
fwait
xor
fldenv
cmp
jge
sub
sub
cld
push
push
negb
pop
cltd
shll
sub
sahf
xor
dec
int
filds
pop
mov
and
xor
add
cmpsl
leave
xchg
popf
sub
lret
loop
xor
xorb
stc
pop
dec
hlt
int3
fwait
shrb
cs
push
pop
lahf
and
push
xchg
jo
inc
fbld
ds
add
enterw
dec
mov
pusha
inc
xchg
pusha
push
xchg
push
dec
dec
adc
mov
aas
push
xchg
aas
and
adc
ds
lahf
orb
test
mov
inc
leave
or
pop
leave
add
pushaw
stos
cwtl
shll
test
mov
dec
add
sbb
movsl
lea
cmp
add
mov
in
lret
jne
cld
int
frndint
xchg
movsb
jns
sbb
adc
cld
clc
or
push
sbbl
insb
pusha
pop
stos
into
xor
stc
mov
mov
xchg
push
cltd
imul
aaa
mov
sbb
test
lret
bound
daa
nop
stos
pop
xchg
clc
and
jno
call
cli
pop
jp
stos
mov
sub
jns
lods
add
xchg
or
outsl
or
lods
ja
dec
mov
addr16
cltd
outsb
xlat
push
mov
notb
cmc
xchg
inc
in
cmpsb
les
add
xchg
sahf
scas
icebp
jmp
aaa
add
mov
sbb
cltd
into
ficompl
mov
adc
jge
push
fadds
xchg
sbb
and
fstl
outsl
push
loop
mov
add
mov
xchg
pushl
or
dec
xlat
sbb
imul
push
mov
test
adc
out
test
jno
mov
roll
andl
int3
into
push
xchg
add
and
mov
add
mov
mov
stos
mov
jnp
lret
xorl
dec
ds
mov
leave
dec
adc
xchg
fadds
fwait
sub
sub
add
sub
mov
sbb
cmp
loope
push
fwait
mov
lea
cmp
rcl
cmc
mov
aaa
xchg
rcl
cmp
jnp
movsl
xor
dec
incb
add
insb
xchg
in
int3
push
and
leave
and
cmp
sahf
pop
push
cwtl
aaa
ds
fwait
pusha
pop
mov
rcrb
rcrb
iret
shrd
test
push
sub
mov
in
jge
adc
mov
test
int
in
mov
mov
pop
dec
jle
jp
mov
dec
sbb
out
mov
pop
icebp
mov
fs
and
in
pusha
xchg
xchg
lods
inc
ret
mov
dec
aad
insl
pop
outsl
lahf
pop
fisttpl
or
stos
jno
rorb
pop
mov
xchg
fnstcw
pop
pop
out
nop
das
into
adcl
imul
fucomp
lcall
cmp
fmull
loopne
and
sub
pop
pushf
push
pop
dec
and
sub
mov
jb
scas
inc
iret
ja
negb
int3
fdivrs
mov
dec
das
push
push
adc
movsl
xor
js
mov
rolb
rcr
inc
testb
in
mov
movsb
push
cmp
cli
mov
bound
adc
fs
ds
iret
fcoms
aaa
mov
push
jmp
xchg
cld
fistps
push
lcall
setle
daa
cmpsb
pop
adcb
fmulp
int3
loop
pop
xchg
or
adc
pop
jg
jo
jbe
dec
push
pop
clc
mov
popf
adc
xor
add
adc
add
movsb
xor
push
popa
or
sbb
xor
nop
phsubsw
js
fsubp
aad
sbb
lret
popa
sbb
incl
cmp
push
ret
adcl
mov
mov
arpl
xchg
rcr
mov
xadd
std
dec
iret
outsb
lcall
jl
sbb
jae
inc
fs
ljmp
and
nop
mov
cli
mov
loope
pusha
lock
adcl
lcall
fmull
test
lea
sub
ds
xchg
test
jbe
pop
cmp
out
mov
pop
mov
out
lcall
pop
repz
mov
mov
push
dec
push
scas
mull
iret
add
cmc
movsl
mov
cmc
push
mov
push
adc
adc
mov
in
pop
push
mov
pop
inc
and
mov
push
jle
add
mov
jbe
leave
jmp
je
adc
data16
sbb
enter
xor
imul
mov
insb
jl
push
repz
fcmove
popa
mov
pop
mov
rclb
xchg
outsb
add
fs
sub
inc
cmp
mov
inc
daa
xlat
xor
mov
add
dec
dec
fists
popa
loope
movsb
adc
mov
sub
leave
arpl
ljmp
jbe
mov
mov
add
and
jo
push
outsb
mov
out
add
imulb
aam
dec
and
mov
jge
sbb
out
loope
mov
stos
popa
call
lret
mov
ja
call
or
mov
outsb
jge
mov
pop
popf
aad
iret
cmp
pushfw
call
jle
adc
mov
test
add
data16
fbld
and
rcrl
push
arpl
push
dec
arpl
sahf
ss
pushf
cmp
aaa
mov
adc
mov
les
and
repz
jno
pop
shlb
xor
arpl
aaa
xchg
loop
mov
push
cltd
test
xchg
lret
test
je
das
das
cmc
mov
ret
les
mov
pop
jae
inc
xchg
adcl
add
xchg
cwtl
jae
cmpb
pushf
cmp
sub
pop
lods
scas
sarl
mov
js
add
inc
out
ret
orl
pop
popa
ret
imul
push
sbb
sub
pop
ficomps
mov
sbb
pushf
push
cmp
cld
data16
mov
jge
inc
inc
iret
dec
and
mov
outsb
sub
idiv
adc
lea
sbb
jecxz
inc
mov
leave
xor
or
inc
add
je
push
fldt
fnsave
les
xor
sub
mov
mov
int3
ja
sbb
hlt
pop
lret
mov
adc
and
out
pushf
daa
adc
das
into
push
jb
cmp
push
push
jne
or
push
sub
mov
lcall
and
test
sbb
jmp
xor
inc
or
push
aam
adc
dec
sahf
jp
adc
jae
in
roll
clc
sbb
inc
sbbl
filds
sarb
ja
insb
jle
mov
mov
in
jmp
push
or
stos
push
addr16
sbb
adcb
das
push
jmp
out
sub
jge
cmpxchg
inc
mov
mov
cmpsl
imul
sbb
fs
loop
push
adc
sbb
jp
dec
sub
out
or
icebp
adc
mov
divb
jmp
cmpsb
fdiv
movl
mov
int
mov
out
push
cmpl
bound
pop
mov
xorb
adc
xlat
mov
dec
pop
pop
push
jmp
hlt
in
inc
mov
test
adc
push
ds
sti
pop
pusha
and
repz
adc
mov
adc
icebp
jge
fs
push
out
pop
mov
add
shll
mov
pop
or
cmp
fsubl
daa
or
inc
arpl
dec
cltd
loopne
addr16
adc
mov
lret
fs
or
mov
xor
xor
fstl
leave
fimull
ficoml
loop
adc
adc
dec
mov
add
xchg
fisubl
sub
mov
adc
pop
lret
push
jmp
mov
jae
push
test
sub
push
mov
push
xchg
adc
cmp
ss
jp
hlt
aad
les
xchg
mov
mov
xor
cmpsb
cmp
fwait
inc
or
dec
je
ficoml
es
sub
pop
cmc
fnstsw
jns
sarb
or
fmuls
xchg
jns
lock
adc
scas
mov
sub
aas
add
sbb
jmp
insb
jp
aam
pop
mov
call
cmp
pop
in
add
lds
mov
xlat
mov
or
xor
out
scas
adcl
push
add
addr16
aaa
jns
lock
sub
adc
jo
pop
add
cltd
xchg
lods
jge
pop
pusha
int3
add
or
cmpsl
pop
imul
loope
xor
or
xchg
jb
nop
pushf
sbb
into
int3
loopne
sub
mov
lret
ja
mov
jmp
mov
nop
rcrl
mov
shl
sbb
in
in
adc
lock
and
cli
std
nopl
mov
xchg
mov
or
sub
xor
iret
sub
insb
iret
mov
pop
jae
sbb
push
andb
inc
fsubs
jmp
xor
add
jl
jp
fsubp
inc
sub
jle
pop
addr16
or
pop
loop
mov
ds
dec
sbb
or
xchg
xchg
cltd
das
add
cmp
jle
loope
jg
shll
sbb
pop
aas
cmp
repnz
pop
fidivl
nop
mov
sbb
xchg
mov
incl
fucomip
test
push
jb
adc
inc
fisubs
push
mov
mov
jo
fadd
icebp
movsl
cmp
repz
mov
and
ret
lds
jle
in
outsl
in
sbb
xor
mov
pop
mov
mulb
iret
loop
jne
bound
push
mov
aad
in
adc
gs
sub
jbe
inc
fwait
cmp
lock
and
sbb
add
inc
loopne
scas
out
sub
andl
shrb
mov
aaa
mov
data16
adc
adc
pop
jae
mov
cli
cld
mov
and
jns
ja
xor
cmp
mov
mov
incb
stos
inc
pop
jle,pn
mov
sbb
ret
shll
or
roll
inc
mov
push
push
stc
outsb
iret
daa
pop
mov
nop
jne
mov
clc
inc
pushf
cs
cs
mov
negb
and
pop
enter
dec
das
pop
stos
mov
test
iret
test
xor
fmull
int
js
je
add
imul
sbb
push
lods
adc
scas
xor
sub
mov
xchg
in
shlb
cwtl
test
adc
js
pop
pop
cmp
inc
push
sub
adc
dec
imul
pop
call
xor
jbe
inc
fisubrl
mov
es
pop
pop
dec
dec
fidivrs
mov
mov
cs
xor
js
push
or
nop
push
add
sub
dec
cmc
mov
fsts
addl
repz
mov
pop
or
aaa
gs
push
mov
lahf
push
push
mov
stos
test
cwtl
lods
mov
loop
out
xchg
out
std
cmp
xchg
add
xchg
sub
jb
add
mov
lods
mov
jge
pop
scas
mov
ja
clc
mov
scas
or
mov
and
aaa
fs
ss
or
dec
into
inc
xchg
sub
push
xorb
adc
int
popf
sbb
shr
mov
sbbb
xlat
xchg
mov
add
sbb
jle
or
ja
arpl
jle
jmp
cld
pop
push
movsb
aaa
push
movsb
cmpsb
cmp
fistpl
roll
jg
or
cmpsb
insl
loopne
cld
pop
imulb
jge
xor
cltd
test
xor
push
sti
inc
dec
call
les
pusha
dec
cltd
pop
test
mul
add
pop
inc
data16
std
mov
icebp
jl
lods
push
mov
inc
mov
inc
cmp
or
rcrb
iret
lea
cltd
mov
pop
pop
cli
into
rcl
inc
or
dec
add
movsb
adc
sub
adc
lcall
jnp
cmc
push
xor
push
sub
js
add
sbb
int3
loope
loope
mov
sbb
jb
stos
push
out
mov
movsb
push
xlat
cmp
inc
repnz
cmp
aam
dec
filds
mov
mov
mov
push
inc
imul
pop
mov
in
cmpl
pop
xor
test
mov
and
mov
int3
and
push
sbbb
out
inc
inc
pop
loop
repnz
mov
ljmp
jne
xor
xor
outsl
sub
jb
in
inc
clc
aad
inc
outsl
out
cld
mov
insb
mov
push
fucom
lock
movsb
inc
lods
and
lcall
mov
je
sarl
mov
xchg
dec
lods
mov
insb
lock
sbb
add
dec
push
cmp
pop
and
adc
mov
push
mov
popf
rcrl
add
std
cmp
enter
or
inc
mov
iret
xor
push
out
ljmp
pushf
clc
aam
cld
mov
aad
addr16
cmp
sub
add
test
inc
xor
or
sub
out
into
mov
mov
dec
lcall
pop
out
mov
ret
cmpb
add
addr16
adc
or
xor
xchg
mov
loopne
pop
iret
sub
xchg
fistps
dec
mov
and
gs
aaa
xor
jns
fnsave
pop
mull
cmpb
std
mov
test
jae
fcompl
mov
jmp
clc
iret
mov
stos
sub
movsb
leave
pusha
pop
test
xchg
adc
pop
jmp
jle
loop
aas
dec
mov
dec
adc
push
rol
jg
inc
xlat
or
mov
imul
movb
int3
outsl
loopne
test
sbb
jae
and
mov
pop
cwtl
xchg
xor
xor
rorl
icebp
nop
xor
push
aam
lret
repnz
icebp
jle
test
fidivl
adc
into
imul
add
pusha
mov
adc
pop
sbb
sub
adc
insb
mov
int3
aad
jae
sbb
push
imul
xchg
dec
dec
pop
cmpl
ret
aam
lret
jne
or
fsubl
inc
xchg
fdiv
add
stos
in
cmp
loopne
fwait
or
sbb
jle
es
adc
dec
decl
jb
mov
and
loop
jp
int3
adc
jp
jg
push
fcmovbe
fstpl
out
repz
cwtl
dec
xchg
hlt
mov
insl
and
jo
sbb
mov
push
out
push
popf
or
push
cmp
dec
jne
insl
add
in
iret
rcrl
xchg
notb
push
clc
mov
sub
loopne
cmp
sbb
dec
push
mov
daa
jmp
repnz
out
daa
leave
and
adc
jbe
xchg
ret
aad
add
push
popf
mov
push
out
sub
ljmp
sub
aaa
push
dec
xlat
add
or
mov
lds
xchg
ds
xchg
test
cmp
popa
mov
jo
dec
xchg
nop
call
mov
jnp
fwait
ret
outsl
in
dec
out
add
jmp
xchg
lahf
cli
and
mov
out
pop
test
adc
jo
fwait
addr16
les
mov
lahf
jb
lock
or
fdivl
push
repnz
stc
ror
xchg
sub
xor
dec
icebp
js
xchg
fdivrs
lcall
adc
cltd
popf
add
push
xchg
jg
pop
jns
shrb
movsb
add
xor
mov
imul
xchg
pop
mov
cmp
xchg
ljmp
fnstenv
pop
mov
xorl
sarb
outsb
rcr
xchg
movsl
pop
jmp
shlb
inc
pop
push
test
pop
mov
inc
jle
mov
adc
xchg
push
js
mov
les
xchg
pop
popf
jae
pop
cwtl
orl
jl
out
gs
out
data16
mov
shl
cmpsl
ret
fwait
xchg
imul
dec
ret
daa
fistpll
add
push
pop
outsl
push
dec
sub
aam
stos
or
mov
fwait
es
pop
pop
xchg
scas
popf
cli
rorl
hlt
pop
in
gs
mov
mov
push
jnp
mov
jo
sub
xchg
xchg
adc
dec
dec
sub
jl
inc
mov
jecxz
in
jmp
push
mov
mov
fdivrs
repnz
insl
es
mov
cwtl
in
cmovb
fstpl
shrb
mov
or
sbbl
jg
mov
test
jle
bound
idivl
inc
mov
push
xor
lcall
adc
dec
ret
add
jae
sarb
frstor
insl
jnp
sub
jo
mov
sbbl
inc
fs
aad
mov
dec
jae
dec
lods
stc
js
daa
and
scas
mov
test
inc
shll
jle
xchg
daa
mov
sbb
mov
push
jae
in
pop
sbbl
dec
stos
and
push
lret
out
aaa
adc
daa
sub
sti
xor
cli
mov
mov
xchg
test
sbb
mov
data16
xchg
dec
adc
ret
inc
cmpsb
inc
mov
scas
add
ficompl
cmp
cmpsb
pop
sbbl
adc
mov
fs
out
jl
stos
inc
idivl
out
inc
dec
adc
decb
cltd
shr
mov
push
cmc
sbb
int3
andl
flds
mov
dec
inc
lret
stos
dec
cmp
add
pushf
cmp
and
sub
inc
add
sub
jae
test
andl
lds
filds
xchg
aaa
mov
pop
lcall
xor
xchg
jmp
mov
cltd
dec
movsl
pop
adc
jnp
mov
xchg
mov
sar
jae
rcrl
test
dec
mov
xchg
sbb
pusha
dec
aad
jg
push
xor
pop
sub
pushf
jp
scas
dec
sub
scas
cmpsb
cmc
mov
cwtl
mov
andl
xor
and
pop
pop
cmp
iret
incb
loope
pop
mov
pop
out
cmp
test
clc
xor
mov
or
lock
xor
sbb
adc
and
stos
imul
xchg
in
nop
or
cs
jno
cli
fmulp
and
or
movb
and
je
sub
xchg
fadds
mov
and
clc
inc
add
inc
fcomi
xchg
sar
cmp
sbb
push
leave
pop
movsb
lret
xchg
mov
mov
fdivrp
cltd
mov
ficoms
mov
push
les
adc
push
inc
out
sbb
add
inc
in
pop
mov
mov
in
push
call
adc
or
mov
jae
pushf
fs
mov
js
sahf
out
ficompl
pop
mov
iret
ficomps
test
mov
sub
cld
xchg
in
mov
cmpsb
pop
fdivp
jl
cmp
inc
inc
adc
mov
sbb
idivb
icebp
insb
mov
ret
cmp
outsl
ret
arpl
sti
pop
jbe
out
push
mov
cmp
add
test
xchg
mov
add
xorl
js
xchg
mov
loop
loope
insl
lcall
jle
aam
rclb
cpuid
lock
and
or
data16
ljmp
mov
mov
cmc
dec
inc
pop
lock
jo
add
das
dec
and
fdivl
pop
vmovntps
sbb
sbb
jb
movsb
xchg
and
loope
sub
arpl
shll
mov
mov
adc
daa
mov
fdivl
sub
mov
inc
or
and
dec
sbbb
pop
testb
fcomi
aad
dec
and
cmpsb
push
mov
sti
or
xor
mov
int
ds
outsl
mov
push
out
inc
inc
sbb
inc
stos
arpl
fimuls
in
push
cli
cmp
int
incw
sbb
pop
clc
push
xchg
pusha
jb
in
lods
push
idivb
sbb
cmp
outsl
inc
dec
lods
push
fcomip
test
les
sti
inc
out
jno
repz
pusha
cmp
sahf
xchg
ds
xorb
push
fildl
popf
int3
and
mov
or
sbb
and
arpl
xor
add
sti
inc
dec
call
dec
mov
or
sbb
cmp
mov
adc
cmp
xor
jnp
stos
es
push
mov
nop
fsubrl
insl
xchg
leave
divb
jb
sub
mov
lahf
sbb
in
xor
movsb
pop
inc
ret
cs
aas
jnp
jne
stos
lods
cmp
mov
dec
pop
out
jle
movntq
inc
dec
mov
fsubl
int3
cmp
xchg
loope
push
mov
aas
fwait
cmp
inc
jle
mov
pop
movsb
sbb
add
xor
popa
fsubl
and
sti
xchg
in
rol
jbe
cmpsl
mov
les
add
fldt
fsubrl
pusha
push
cmp
out
mov
pop
in
jle
mov
xchg
pop
mov
pop
pop
imul
cli
push
lods
ret
sbb
push
adc
sti
lret
sahf
push
or
jns
cltd
jl
mov
xchg
push
lret
add
sbb
xor
cmp
push
cld
fdivs
cmpsl
jg
test
sbb
mov
jne
inc
push
nop
sub
imul
or
pop
and
ss
and
popf
push
sbb
mov
xor
sbb
xchg
jnp
insl
loopne
paddsb
ret
cmp
repz
test
mov
sbb
and
fwait
push
or
lret
mov
push
sbb
int
es
fucomip
cmpsl
mov
jp
xchg
loopne
fwait
add
daa
sub
scas
dec
lock
aas
icebp
push
dec
rcr
ret
jns
arpl
mov
iret
mov
out
outsl
mov
rorl
mov
mov
jge
pop
or
pop
xor
mov
les
idivb
sub
cltd
sub
lret
dec
shll
stos
jmp
mov
fwait
mov
sahf
xchg
insb
enter
call
xchg
shll
je
and
jecxz
jmp
fiaddl
data16
mov
jns
cli
xchg
xor
ret
sbb
dec
idivl
xchg
insl
std
mov
xor
inc
push
adc
out
das
inc
iret
or
divb
fs
leave
in
test
ffreep
and
adc
push
imul
xor
mov
in
xchg
and
lcall
and
imul
xor
ja
test
cli
jge
std
test
ss
out
call
or
rol
pop
push
and
aaa
imul
mov
mov
test
mov
icebp
xchg
xor
ss
scas
jecxz
cld
and
shrb
dec
inc
pushf
icebp
pop
mov
pop
mov
imul
adc
sbb
jo
push
or
sbb
outsb
jp
movsl
sbb
push
pop
les
inc
dec
outsb
leave
test
insb
icebp
nop
pop
add
movsl
inc
scas
subl
push
push
lret
bound
mov
out
insb
dec
into
fdivrl
mov
aaa
bound
inc
mov
sbb
sub
ja
sbb
adc
pop
inc
lahf
xchg
stos
loopne
repz
jno
fcoms
xchg
arpl
pop
test
sbb
mov
fidivl
add
sub
mov
dec
mov
add
mov
cs
repz
mov
cmp
stc
dec
pop
jp
inc
imul
out
dec
and
rolb
add
ret
lcall
dec
fdivr
adc
jne
arpl
and
loope
xchg
je
icebp
xor
adc
push
out
xor
adc
jbe
loopne
loopne
inc
sbb
inc
fcoms
pop
cmc
push
jp
pop
adc
cmpsb
dec
mov
push
loop
and
aaa
mov
fsts
mov
loope
add
cmp
enter
pop
sbb
adc
mov
test
mov
push
mov
pop
popf
push
jl
movsl
xor
jb
fcmovb
shl
and
inc
data16
sub
sbb
ds
mov
in
test
add
xor
aas
insl
shlb
jge
push
mov
jae
in
mov
mov
inc
push
cwtl
or
les
rorl
je
add
or
jp
flds
and
push
or
stos
adc
icebp
mov
testb
hlt
adc
loope
arpl
pop
stos
repz
mov
mov
lods
mov
fbstp
lock
repz
stos
mov
mov
and
xchg
adc
aaa
outsl
sub
lahf
mov
cmp
scas
addb
roll
call
mov
xchg
cmp
mov
pop
call
pop
leave
add
cmp
pop
hlt
mov
jl
jnp
jmp
push
mov
mov
xor
inc
stc
add
mov
in
mov
mov
push
jmp
lods
sbb
call
fnstcw
jp
clc
jno
scas
lret
iret
lods
ret
sbb
pop
or
into
mov
push
int
call
sub
cmc
cmp
inc
outsl
or
arpl
jecxz
push
sahf
cmp
test
aas
push
fildl
push
cld
js
push
stos
fistl
es
xor
cmp
enter
sbbl
lret
shrl
into
mov
pop
pop
mov
adc
inc
rolb
pusha
jae
imul
jge
pop
fstpl
mul
in
and
xor
push
in
aaa
scas
dec
pop
push
pop
jae
fxch
sub
xor
pop
mov
cmp
push
jmp
pop
push
out
sub
jle
jp
mov
mov
xchg
test
out
call
sbbb
sbb
popa
test
arpl
pop
or
pop
shll
enter
arpl
mov
movsl
in
stc
lds
repnz
test
addl
aam
xchg
js
inc
xlat
out
or
jg
ljmp
sub
jmp
les
mov
movsl
mov
cmp
test
pop
dec
imul
movsb
jbe
cmp
jo
cmp
and
xchg
push
or
lcall
shr
jg
gs
ss
data16
imul
cmp
push
mov
adc
cmp
or
pop
or
cmovno
mov
inc
popa
push
ret
pop
aaa
dec
stc
or
xlat
mov
lods
movsb
aas
cmp
out
imul
mov
sbb
push
leave
lods
mov
xchg
cltd
dec
dec
mov
cmpsb
fs
sbb
jnp
movsl
push
mov
sub
and
stc
andl
popf
in
stc
nop
push
or
scas
lcall
pop
frstor
mov
mov
test
lods
add
sub
mov
dec
pop
lret
inc
js
mov
add
and
sbbb
xlat
and
dec
push
aaa
inc
mov
mov
mov
xchg
sub
dec
push
or
inc
sahf
lods
jnp
inc
fcmovnu
xchg
je
lret
imul
and
es
add
xor
jmp
movlps
cltd
fistps
shll
iret
sub
jp
lods
sub
inc
adc
or
push
push
sbb
rclb
adc
mov
mov
bound
sub
mov
or
add
inc
loopne
or
add
rorb
adcl
mov
sbbl
lret
idivb
and
sbb
mov
push
jg
insl
ljmp
ljmp
jno
sub
xor
push
cmp
inc
cli
jg
jnp
pop
adc
sbb
xchg
mov
pop
in
cmp
in
cmpsb
mov
mov
inc
sbbl
imul
shll
out
mov
xchg
mov
sub
negl
lods
cmp
mov
scas
lods
adc
in
add
inc
or
and
out
lods
add
cmp
or
xlat
testl
lahf
loope
daa
movl
cltd
xor
je
xor
inc
fincstp
dec
pop
mov
int3
fs
cmp
xchg
lods
and
push
dec
ljmp
aas
movsb
xlat
in
sub
mov
mov
iret
cmp
addr16
and
sub
nop
xchg
dec
out
mov
lret
xchg
adc
xor
ret
mov
dec
sahf
subb
lahf
fsubrs
inc
pop
daa
cltd
push
inc
jnp
dec
aaa
movsl
adcb
cmp
sub
jo
out
push
sbb
mov
jg
pop
addr16
repnz
pop
sbb
pop
adcl
js
sahf
imul
cmp
out
mov
out
popa
subl
dec
out
enter
popf
jmp
adcl
add
inc
pop
xchg
leave
or
imul
iret
adcb
pop
xchg
hlt
popf
dec
fmuls
push
jecxz
pop
bound
pop
mov
adc
shll
loopne
stc
sahf
stc
mov
or
iret
push
das
inc
cmp
mov
adc
mov
push
insl
test
iret
data16
jmp
xchg
adc
xor
adc
fwait
sbb
fistpl
add
push
ss
jl
js
das
mov
out
jbe
or
mov
rclb
stos
dec
lahf
mov
popf
subb
into
mov
xor
std
and
in
sub
repz
scas
pop
xor
jecxz
repnz
xor
lds
xlat
insl
cs
mov
stc
mov
mov
add
stos
add
in
out
adc
jns
out
mov
mov
icebp
and
push
sub
xchg
jmp
call
mov
jmp
and
out
xor
pop
cmpsl
or
pushf
mov
sbb
test
test
add
sub
pop
pop
jle
mov
jmp
cli
pop
cmp
mov
std
add
mov
pop
jnp
mov
insb
loopne
push
mov
mov
rcr
addl
into
dec
mulb
sub
rcll
jnp
dec
dec
lock
xor
mov
call
int
shlb
mov
dec
fmull
mov
push
jmp
pop
dec
icebp
pop
mov
pushf
jne
xchg
ja
lcall
mov
xchg
call
insb
cld
les
sbb
jo
mov
js
cmc
sub
ret
mov
outsb
daa
stc
mov
inc
sbb
jg
jae
mov
jge
fwait
cmpsl
imul
inc
lret
sbb
pop
les
sbb
pop
or
cmp
fdivr
sbb
mov
sub
popa
lea
mov
test
fisubl
jmp
aad
imul
or
jne
imul
xor
lods
mov
mov
adc
mov
and
scas
ljmp
pushf
scas
test
jmp
sbb
out
inc
lret
cmp
add
xchg
aam
xchg
jg
mov
out
in
out
leave
aam
enter
dec
mov
push
ret
lahf
fwait
cltd
mov
inc
pushf
sbb
sub
roll
pop
jp
pop
lods
rcll
fadds
fisubrs
add
movsb
sbb
mov
push
outsl
mov
movsl
ret
xor
push
or
add
lcall
pushf
popa
in
test
in
and
outsb
adc
sub
cs
bnd
cmp
movsl
jmp
test
outsl
jp
ja
ror
jecxz
and
in
loopne
adc
jl,pt
xchg
scas
lahf
cltd
stos
cli
ret
fisubs
std
cmpsl
stc
nop
fmuls
push
jmp
loope
rcll
jb
mov
rcl
pop
adc
xor
xor
fsts
test
adc
xchg
mov
imul
mov
push
or
cmc
int3
sti
mov
daa
test
rorb
ja
jbe
mov
leave
fwait
cmc
loop
dec
or
cmpsb
inc
push
ljmp
popa
cmp
repnz
xchg
in
into
sbbb
dec
push
out
pushf
fstpl
sub
pop
hlt
pop
mov
sub
hlt
mov
xchg
and
xchg
mov
testb
aam
mov
fidivl
dec
dec
icebp
or
es
cmp
lcall
mov
call
and
dec
data16
jbe
lcall
repz
mov
cwtl
mov
and
in
cmpsl
mov
jl
arpl
add
adc
andb
adc
and
jl
stc
rcrb
ret
pop
sbb
lds
fldenv
es
xor
lahf
out
aad
in
decb
mov
adc
in
adc
inc
lcall
push
rolb
mov
test
idivb
cmpsl
inc
fstp
cli
mov
sti
cmpsb
leave
popa
adc
xchg
mov
mov
push
js
or
dec
ss
and
cmp
xor
push
outsl
add
xor
inc
xchg
js
jne
aas
cwtl
and
adc
adc
decb
test
fldt
jno
scas
iret
cmp
and
mov
bound
sbb
mov
setle
fimuls
or
mov
cmpsb
enter
jnp
mov
clc
mov
xor
in
xchg
xchg
fiadds
in
je
ret
cwtl
mov
inc
repz
repnz
bound
aas
imul
ds
mov
lods
dec
mov
adc
add
push
mov
mov
mov
xchg
pop
mov
arpl
sbb
inc
push
push
aam
pop
dec
mov
orb
fistps
sub
iret
pushf
das
in
test
push
or
jbe
scas
jnp
xchg
es
xchg
lods
or
push
and
jle
popf
sub
call
out
leave
jo
pushf
pop
push
push
xor
rcrb
jns
dec
cmc
add
addr16
aaa
je
insl
cmpsl
imul
je
sbb
sbb
imul
jp
andb
dec
out
dec
mov
sub
xchg
lret
xor
fs
inc
mov
sbb
and
xchg
jne
enter
push
adc
mov
xor
mov
sbb
pop
xor
jb
andl
addr16
push
push
jne
pop
pushf
andb
jge
jl
push
jp
addr16
and
jns
mov
lods
dec
fnstcw
dec
imul
dec
in
jo
mov
inc
cmpsl
ja
ret
mov
cwtl
addl
and
cli
inc
repz
inc
jge
popa
adc
lods
xchg
or
add
rcll
jmp
mov
mov
ss
mov
scas
or
movsl
cmp
adc
cmp
sub
insb
pop
aad
mov
mov
imul
movsl
in
sub
enter
jno
push
mov
sbb
sbbl
lea
mov
and
frstor
xchg
fisttpl
push
mov
sub
push
xor
sub
dec
mov
loope
imul
test
lcall
push
repz
and
push
dec
inc
loop
dec
or
jl
imul
and
sub
dec
mov
pop
mov
decl
sub
lea
stos
xchg
xchg
test
mov
mov
or
shlb
dec
scas
fmul
test
sub
push
movsl
cmp
mov
fisubl
mov
ret
ljmp
fisttps
adc
cmp
adc
dec
mov
and
mov
call
dec
jns
and
jns
or
jmp
cmc
rolb
mov
fmuls
mov
or
mov
add
jl
loope
pop
mov
arpl
mov
lea
sub
pop
cmc
stc
mov
fcompl
jecxz
ja
inc
jbe
out
pop
and
aam
push
sarb
push
adc
mov
leave
insb
ds
mov
jns
pop
stos
aaa
ds
ds
scas
inc
jl
xorl
aam
cmpsl
imul
sti
pop
sub
dec
jg
add
pop
dec
mulb
test
mov
cwtl
xchg
sbb
push
movsb
mov
clc
pushf
aas
pop
movsb
jns
insb
and
push
fwait
leave
pop
and
repz
add
cwtl
pop
xor
or
mov
jae
inc
int
pop
fs
dec
movsl
xchg
push
sub
lret
mov
test
mov
mov
stos
ds
push
js
sbb
cli
sbb
aaa
stos
cmp
rcrb
pusha
pop
add
xchg
xor
ja
mov
dec
and
scas
inc
or
dec
mov
hlt
cmp
adc
fdivs
pop
aad
or
dec
adc
sub
pop
lcall
dec
fsubs
neg
mov
adc
and
jmp
mov
arpl
movsl
stc
ss
sub
lock
inc
or
inc
lret
xor
and
addr16
push
cmpsb
cmp
out
push
mov
and
xchg
xchg
insl
out
xchg
in
mov
mov
stos
push
or
cmp
xchg
dec
xchg
inc
mov
or
stos
jno
icebp
adc
popl
add
jb
pop
sarb
and
push
out
rcr
add
pusha
jnp
pushf
push
jne
int3
lret
leave
out
adc
into
popa
aam
in
pop
cmc
call
adc
push
or
aam
dec
push
jge
arpl
filds
pusha
jmp
test
jo
push
test
push
popa
sbb
popf
mov
mov
sarl
cwtl
insb
cmp
inc
push
jbe
mov
mov
or
sahf
out
xchg
xlat
mov
push
mov
mov
xor
daa
inc
fstpl
jno
add
mov
ss
mov
int
xbegin
testl
hlt
fstpt
scas
pusha
sbb
frstor
mov
loop
or
decb
jp
dec
inc
lock
fdivrl
in
int
pusha
xor
push
adc
loope
cltd
fidivl
sub
into
pop
ss
pop
mov
cmp
popf
xchg
aad
mov
or
inc
data16
fcompl
mov
mov
pop
out
adc
add
cmp
xor
jno
jae
jg
leave
addl
jle
lret
and
inc
das
pop
lds
mov
xor
cmpsl
aaa
ds
lret
jne
jae
insb
push
lret
push
addb
inc
push
negl
or
xor
sub
adc
sbb
sbb
loope
or
shr
xchg
inc
mov
add
icebp
scas
imul
fcmovu
jns
fmull
jo
cmp
aad
cld
pop
push
mov
sbb
xor
adc
xchg
push
outsl
outsb
ficompl
ss
pop
and
sbb
ds
xchg
jae
aad
adc
loope
sub
lret
es
pop
mov
arpl
ret
dec
mov
xor
sub
lahf
mov
int
sbb
lcall
sub
test
add
mov
fcompl
das
outsb
cmp
sub
andb
pop
mov
mov
mov
cltd
std
dec
ljmp
cli
jg
or
cmp
subb
dec
inc
lcall
sub
mov
sbb
testb
and
jge
in
shr
xchg
fdivrl
fistps
push
mov
nop
adcl
lea
cmpsl
inc
ret
dec
stos
inc
mov
js
and
and
push
push
int
xor
sub
inc
stos
loopne
rcr
scas
xchg
mov
jb
adc
sbb
test
mov
sub
jb
out
enter
mov
inc
pop
mov
fmuls
pop
fadds
addr16
add
inc
mov
cmpsb
sbb
dec
cwtl
push
aas
fsts
bound
jo
add
jno
push
mov
dec
dec
mov
ja
aaa
mov
clc
test
push
in
adc
jae
jecxz
loopne
dec
ss
sbb
dec
mov
xchg
jp
adc
or
and
in
jl
or
lods
cmpsl
dec
and
ret
scas
call
jcxz
fdivrl
fxch
sti
pop
mov
je
out
ljmp
loop
inc
adc
xchg
fisttps
pop
cmp
push
insb
push
pop
movsl
movsb
or
mov
test
fisttpll
mov
mov
push
hlt
mov
mov
inc
stos
or
bnd
mov
dec
test
notb
sub
out
mov
scas
mov
and
std
cmp
aas
adc
sub
rolb
cmp
pop
cwtl
lea
sub
sub
fwait
std
push
test
out
xchg
push
xor
xchg
inc
ficomps
lret
jmp
outsb
inc
repnz
add
add
mov
sbb
add
sbbl
mov
push
int
test
add
xchg
and
mov
xchg
fbld
stos
cmp
inc
data16
js
cmp
mov
jge
paddd
or
lea
mov
cli
jge
dec
inc
in
pop
cmovp
sbb
popf
scas
mov
pop
mov
cmc
into
cmc
jmp
adc
imul
test
lods
add
ds
or
shll
das
inc
jnp
ds
arpl
inc
aad
xor
enter
jecxz
stc
dec
or
lods
mov
lock
xor
adcl
out
stos
sub
dec
in
test
leave
push
sbb
jnp
adc
pop
lock
xor
inc
mov
pop
push
repz
and
std
or
lods
add
pushl
sbb
dec
scas
pop
push
shll
shll
imul
fcomp
repz
test
jns
jecxz
cmpsb
jl
pop
or
js
push
neg
fs
repz
aaa
sbb
mov
pop
ljmp
sub
scas
pop
xor
jae
shlb
dec
dec
mov
and
cs
ljmp
rcl
hlt
es
jmp
mov
push
add
popa
push
fsubrl
scas
sub
leave
daa
mov
loope
push
vandps
mov
sbb
pop
fdivl
notl
mov
push
xor
cld
cmpsb
xchg
mov
mov
icebp
daa
in
lds
addr16
popa
loopne
xor
sbb
inc
ret
cmpsl
and
xchg
jmp
sub
movsl
xchg
sub
lahf
mov
stos
jge
add
pop
sbb
or
pop
mov
jo
jmp
lea
movsl
pop
out
pop
int3
je
jns
jbe
pushf
mov
cmp
cs
xchg
dec
add
add
cmp
or
xchg
or
dec
out
add
mov
ret
mul
bound
mov
xchg
cmp
dec
loop
fistpl
add
mov
pop
sahf
jnp
jge
pop
xor
mov
iret
cld
pop
std
in
hlt
outsb
hlt
xchg
mov
mov
ja
or
sub
test
and
xchg
mov
pop
inc
stos
aas
mov
fistl
bswap
sbb
sbb
push
dec
or
xchg
or
leave
mov
adc
outsb
xchg
sub
stos
mov
test
xchg
das
fdivs
lret
bound
jp
sub
call
cmpsb
cmp
test
push
pop
popf
cmc
dec
mov
mov
dec
add
cmpsl
aad
xchg
mov
imull
dec
cmp
loope
xchg
xor
movsb
pop
daa
ljmp
pop
ud1
push
pop
sbb
sbb
addr16
mov
je
push
test
cmp
pop
adc
filds
jge
lret
xchg
cld
shr
testl
pop
dec
and
lods
cmpsl
or
insb
orl
mov
and
and
dec
loop
and
iret
stos
mov
jl
xchg
and
jmp
sbb
cmpsb
sub
out
js
and
push
xor
push
rcll
dec
cld
fwait
das
push
push
iret
imul
xchg
add
repnz
movsl
inc
cmc
xchg
xor
push
push
dec
lock
fidivs
mov
fucomip
xor
push
outsb
mov
pop
sub
orb
pop
and
jne
mov
insl
inc
add
mov
into
inc
xor
icebp
aad
imul
xor
pop
rolb
sbb
sbb
ret
adc
jecxz
mov
xchg
adc
xchg
dec
dec
add
jns
dec
sahf
adc
push
inc
jmp
icebp
lock
gs
test
jns
data16
lahf
or
inc
or
lea
pop
lock
and
cmp
test
cmpsl
cmp
jecxz
ljmp
adc
nopl
sub
jmp
and
rcll
mov
cmpsb
cmp
push
or
push
fwait
push
out
mov
add
imul
ljmp
call
sbb
fldl
adc
jle
pop
repnz
loope
dec
pop
cmpl
fists
push
xor
mov
add
fcoms
sbb
sub
in
jnp
sbb
out
and
int3
sub
jmp
push
ds
mov
sbb
fldenv
fmuls
add
pop
pushf
mov
movsl
cmp
sub
fisubs
ret
daa
jmp
std
pop
mov
lock
xchg
mov
dec
out
jmp
insl
in
mov
adc
inc
js
add
pop
xor
and
mov
jb
enter
xchg
cmp
sarb
mov
pop
scas
mov
inc
jne
push
fs
cmp
cmp
sbbl
pop
leave
aam
push
fisubrs
xor
popf
inc
push
xchg
out
jge
cmp
jo
repz
dec
and
mov
jb
jle
inc
xchg
out
xchg
push
int
cmc
mov
ficoml
iret
iret
bound
or
iret
xchg
sub
movsl
xor
xchg
imul
sbb
mov
addr16
add
and
adc
test
popf
data16
jge
pop
xchg
hlt
addr16
shl
pushf
loop
cltd
xlat
mov
cwtl
inc
mov
aaa
or
inc
cmpsl
lcall
fsubr
aam
cs
and
push
mov
pop
fisubrs
shlb
dec
push
test
sub
xor
dec
pop
sub
jg
ror
xchg
add
call
xchg
daa
xchg
push
dec
inc
jmp
sbb
lods
sahf
in
mov
sub
add
jbe
mov
int3
mov
cmpb
adc
push
inc
scas
lea
cs
rcll
int
movsl
lret
push
mov
xchg
mov
adc
xchg
push
fcmovne
or
ss
lea
scas
inc
mov
mov
xchg
mov
loope
daa
dec
test
add
and
movsb
jg
stos
addl
sbb
mov
cli
inc
test
fsubrp
out
inc
push
mov
pop
rorb
fstps
pop
and
adcl
outsb
xor
pop
test
or
pop
cmpsl
in
fmull
es
sub
pop
xor
imul
push
adc
sbb
in
cwtl
pop
fsubrl
aas
mov
mov
adcb
int3
xchg
adc
xlat
sahf
xor
mov
rcll
xchg
out
mov
xchg
pop
mov
push
mov
push
pop
inc
xchg
add
fbld
nop
xchg
in
ja
mov
scas
es
std
cmp
mov
sub
std
mov
repnz
or
xlat
aas
push
jnp
or
out
rclb
inc
outsb
sub
dec
stos
push
outsl
push
cmpsb
mov
fdivrs
shlb
clc
sub
pop
jl
arpl
stos
notb
pop
mov
dec
mov
mov
insl
add
imul
and
ds
or
gs
sti
cmp
lea
pop
out
and
imul
mov
popa
mov
ja
popa
or
push
jmp
cmp
jle
jg
push
inc
ret
sub
sbb
fisubs
add
xchg
push
lods
add
ljmp
mov
es
rolb
push
inc
repz
push
push
movsb
js
or
enter
or
ret
mov
cmp
int3
mov
mov
fsts
add
mov
ds
mov
pop
inc
ret
daa
adc
stc
fisubrl
in
jecxz
dec
insb
jmp
loopne
decl
imul
gs
pop
pop
pushf
add
inc
aas
lds
or
sbb
test
xor
arpl
sbb
outsb
into
pushf
sub
cmc
mov
inc
adc
jno
pop
lock
xchg
pop
movsb
sbb
movsb
push
inc
addr16
xor
mov
ret
or
cmc
aad
mov
xchg
call
xor
cmpsl
aaa
push
clc
adc
push
jne
adc
mov
adc
adc
mov
loop
inc
fcmovnu
add
inc
loop
iret
adc
movsb
adc
lret
cmpsl
pushf
inc
xor
pusha
mov
out
or
adc
and
mov
data16
mov
jmp
cli
adc
stos
imul
and
adc
push
adc
subl
mov
jle
gs
or
fldcw
repnz
add
and
or
ficomps
cmc
shr
addb
fwait
inc
jno
mov
jmp
test
mov
daa
leave
sub
mov
cmp
nop
mov
imul
mov
mulps
sub
ret
pop
lods
mov
ja
fwait
sub
mov
lahf
mov
dec
sahf
in
add
pusha
adc
std
pop
repz
mov
imul
mov
lcall
sahf
shlb
fstpt
push
in
in
jg
imull
pop
loop
jne
sti
test
lock
loope
sub
ja
add
out
xchg
cmp
js
insb
push
jg
imul
rorl
lds
xor
xor
std
adc
pop
ss
inc
icebp
mov
xchg
insl
sbb
ds
jmp
int
sub
mov
add
adc
inc
cmp
fadds
roll
out
add
push
ret
pusha
mov
pop
in
out
xor
test
loope
jns
lcall
cmp
stos
xchg
dec
test
sub
ja
mov
cld
mov
mov
les
subb
arpl
cli
xor
shr
push
lahf
sbb
shrl
xchg
sub
fcmove
sub
loope
xor
dec
push
lock
adc
add
xchg
insl
push
sub
insb
jbe
imul
dec
push
mov
shll
mov
sbb
fs
test
adc
movsl
inc
lock
mov
ljmp
pop
js
cli
fsts
lock
rcrb
or
imul
lcall
mulb
jns
xchg
stos
mov
add
mov
ret
sub
cmp
pop
movsb
mov
push
and
sub
cmp
mov
shrb
adc
and
movsl
cmpsl
xor
test
dec
aam
sbb
push
lcall
cld
xchg
add
into
mov
scas
cmp
jnp
sub
mov
jbe
ds
sub
mov
mov
aaa
stos
fcompl
push
push
jne
sbb
jnp
into
push
stos
jmp
add
add
jle
jmp
fsubp
jno
ljmp
popf
xor
shl
imul
mov
pop
movsl
inc
lods
ret
je
and
adc
ds
push
push
decl
mov
mov
shll
xchg
pusha
pop
je
int3
jae
mov
out
cltd
std
outsl
clc
loopne
xor
cmp
jb
and
adc
mov
inc
xor
mov
call
imul
iret
xchg
xor
xchg
push
push
cmp
sbb
repnz
sub
sub
add
lahf
xor
out
mov
mov
pop
in
add
fimuls
add
aad
push
loopne
test
and
pop
fnstcw
pop
sub
bound
push
sbb
fs
xchg
bound
mov
and
test
adc
or
inc
arpl
push
repz
push
add
or
push
test
cld
jle
cmpsb
test
movsl
mov
mul
dec
xor
daa
negb
in
cmpl
or
push
push
push
lods
sub
cmp
gs
cmp
in
xchg
sub
pop
outsb
mov
insb
sub
sbb
mov
lcall
lods
bound
mov
or
cmpl
sub
ja
jge
test
add
inc
xlat
test
int3
sahf
out
pop
cwtl
mov
cmpsb
call
xor
or
shll
cmp
mov
mov
and
fisubs
and
in
and
add
xchg
cltd
xchg
leave
mov
ss
fnstcw
mov
fwait
push
pushf
cli
ss
jbe
cmc
cmpsl
jns
xchg
xchg
mov
cwtl
jmp
mov
sbb
imul
cmp
sbb
xlat
inc
int
and
es
std
xchg
popf
dec
cmp
pushf
and
xchg
sbb
mov
fs
mov
pop
sahf
inc
scas
or
inc
xchg
or
pusha
fs
dec
mov
stos
adc
jbe
push
sbb
dec
loopne
shlb
cmc
push
aaa
into
subl
push
jo
jb
outsb
mov
arpl
jo
test
jl
outsb
lods
gs
dec
stos
aam
std
shr
mov
adc
addb
in
push
ss
inc
repnz
add
mov
mov
adc
or
repz
lret
std
mov
mov
mov
push
push
lods
rcl
aam
mov
popa
and
cwtl
dec
or
jae
xchg
popf
gs
dec
loop
jnp
push
add
add
cmc
adc
xchg
adc
ds
stos
aaa
test
or
ss
test
fmuls
cli
pop
imul
mov
stc
adc
jmp
pop
repz
dec
andl
fcomps
imul
xchg
sbb
in
jmp
cmp
ret
leave
stc
jecxz
adc
push
lret
xchg
or
shlb
add
mov
dec
outsb
add
push
push
inc
test
mov
pop
adc
pushl
mov
or
mov
and
ret
outsl
je
pop
cli
xor
cmp
stos
les
lret
rol
push
pushf
dec
mov
jmp
cmpsl
sahf
stos
fsubrs
mov
mov
ja
push
stos
mov
adc
cmp
movsb
push
dec
or
stos
call
cli
adc
outsb
add
mov
push
mov
sbb
ljmp
inc
jns
push
loope
pusha
pop
ljmp
cmpb
push
lods
loopne
mov
jo
mov
jp
sbb
mov
xor
sub
div
jl
xchg
scas
adc
outsb
arpl
jo
lret
hlt
pop
jg
push
push
shll
rclb
add
xchg
mov
les
jbe
in
stos
cs
sub
mov
imul
les
pop
lock
and
popl
arpl
cmpsb
push
ds
das
call
or
or
xchg
test
ret
je
dec
pop
idivb
xchg
inc
xor
out
or
or
nop
sub
cmpsb
cmp
mov
aaa
into
mov
dec
push
hlt
lahf
insl
xchg
mov
xchg
mov
fsubrs
repz
lahf
inc
iret
ljmp
adc
inc
dec
cmp
clc
rcrb
jecxz
push
mov
int
out
decb
test
into
test
scas
mov
addr16
add
test
or
das
and
or
inc
in
and
jae
or
add
lds
lods
inc
push
addr16
jae
jno
bound
cmp
mov
int3
dec
fistpll
sarb
jbe
push
mov
loopne
in
cmp
mov
push
push
movsl
test
pop
loope
adc
mov
sbb
mov
push
gs
repz
sbb
test
xor
push
cld
test
ret
mov
xchg
inc
pop
clc
cmp
inc
push
movsl
jns
out
jp
pop
mov
test
scas
mov
shr
jp
jnp
pop
push
push
icebp
xchg
sub
sbb
repz
pop
xchg
or
push
aas
pop
in
jle
aam
jmp
loope
loope
ss
mov
int
into
push
dec
pushf
or
cmp
jg
aas
mov
add
das
pop
dec
add
xlat
adc
lods
mov
lahf
repnz
shufps
sub
icebp
jle
adc
sub
incb
ja
cltd
mov
pop
cli
lds
jno
sbb
stos
inc
jbe
mov
pusha
lret
out
incb
jb
pop
int3
sub
fisubrs
psubq
inc
das
xor
lods
jle
in
inc
das
rcrb
push
xchg
mov
out
dec
adc
mov
cmp
js
lret
adc
mov
push
int
xchg
cmp
sarb
shl
leave
popa
inc
int
insl
scas
and
sub
test
bound
jle
movsl
or
push
test
das
mov
fdiv
js
ss
xor
lahf
aaa
leave
or
aam
jb
xchg
daa
adc
es
adc
cmp
jbe
cmp
jp
sti
loop
sbb
inc
dec
inc
rolb
xchg
or
xchg
cmpsb
xor
out
sti
scas
mov
lds
shrb
add
cmp
sbb
mov
iret
dec
pop
sbb
and
shl
lret
shl
adcb
hlt
sbbb
xor
hlt
inc
push
sub
push
sbb
and
subl
pushf
adc
es
sub
inc
inc
jecxz
adc
jns
test
orl
add
sbb
cmp
dec
cmp
iret
jle
cltd
repnz
ret
push
je
out
push
sbb
call
test
mov
mov
mov
add
mov
xchg
dec
pop
fcmovnu
cmp
lahf
in
jmp
movsl
pushl
addr16
pop
ljmp
out
repnz
dec
stos
inc
outsb
push
addr16
mov
dec
pop
into
and
mov
je
lods
stc
cli
pushf
stc
pop
out
cwtl
pop
pusha
lea
mov
lret
mov
push
xor
ljmp
adc
aaa
rolb
jge
xlat
xchg
inc
test
ficomps
pop
scas
imul
fisubrl
in
clc
cwtl
push
pop
pop
addr16
or
mov
movsb
inc
psrlq
pop
pop
inc
xlat
dec
insl
je
sahf
mov
outsl
mov
mov
mov
divb
dec
test
int3
rcrb
inc
mov
jnp
ret
cmpl
ss
imul
cltd
sbb
test
fs
out
add
hlt
std
adcb
push
enter
jmp
push
int3
lret
fwait
jbe
cmp
and
dec
in
inc
xchg
aaa
mulb
sub
dec
pop
ret
call
cmp
adc
jo
xor
mov
xor
add
dec
repnz
bound
dec
ljmp
inc
mov
add
pusha
add
push
sbb
std
aas
outsb
xor
push
call
in
cmp
push
stos
ljmp
jb
gs
loope
add
into
enter
repnz
xor
push
and
pop
jno
aam
push
js
movsb
push
aas
repz
push
popf
mov
loopne
cmc
es
addr16
and
xchg
inc
insl
sub
or
dec
nop
ret
data16
addr16
inc
in
insb
inc
adc
xor
mov
or
es
mov
push
dec
loopne
mov
fcoml
xchg
sub
jb
in
lcall
push
pusha
lock
into
loope
xlat
mov
cli
mov
int3
push
in
std
jg
movsb
nop
or
mov
pop
orb
cmp
adc
out
cmpsl
jl
add
jno
xchg
inc
hlt
testb
jnp
adc
jno
dec
mov
push
lods
push
mov
fstps
jno
cltd
sti
mov
xor
aaa
mov
popa
xor
mov
add
pop
enter
xchg
std
xchg
inc
push
and
push
adc
es
push
repz
push
leave
push
divl
loop
dec
loope
sbb
in
sbb
dec
shr
jl
xchg
xor
mov
aaa
outsb
mov
sbb
ficompl
inc
jmp
leave
xor
push
jo
push
in
push
cmp
sbb
leave
pusha
cmc
xchg
idivl
repz
mov
into
push
stos
js
add
lods
insl
aam
outsl
sbb
mov
dec
push
imul
dec
es
sbb
loope
rorl
imul
sub
xor
ljmp
repnz
dec
dec
cld
xchg
imul
repnz
cmp
sbb
scas
pop
mov
into
mov
add
xor
jmp
sub
xchg
push
hlt
mov
cmp
push
lcall
in
inc
sahf
stos
mov
fmull
mov
aas
loopne
xchg
in
adc
cmp
repnz
ja
and
call
roll
test
sbb
cwtl
shr
xor
je
inc
or
ljmp
nop
mov
inc
cwtl
or
roll
xchg
scas
nop
bound
loopne
sbb
add
mov
jne
xchg
mov
dec
addl
lea
testb
cmp
mov
inc
mov
adc
imul
xchg
or
push
fidivrl
and
out
les
push
mov
pop
mov
arpl
dec
add
pop
repz
mov
hlt
push
cmpsl
cs
les
xor
loopne
lods
inc
and
sbb
leave
scas
pop
mov
inc
push
icebp
or
sti
cltd
ret
lret
in
hlt
fldenv
and
mov
ret
cltd
mov
mov
push
out
repnz
adc
add
push
stos
outsb
add
imul
jg
fwait
jle
mov
pop
pop
sti
leave
test
xchg
fnsave
dec
dec
nop
test
jns
jne
inc
xor
cmp
icebp
mov
inc
lods
inc
inc
adc
mov
clc
jo
inc
fimull
xchg
mov
dec
jp
fmull
mov
je
push
or
in
es
mov
mov
clc
xchg
fst
sar
dec
cld
push
jl
inc
cli
fists
xchg
dec
sbb
imul
jns
adc
push
ss
loopne
fs
dec
cmpsb
mov
mov
dec
mov
sub
fldt
imull
jnp
xchg
or
cmp
in
cs
jne
notb
cmc
cld
add
add
daa
cmpl
and
xchg
dec
and
jns,pt
stos
imul
mov
cmp
dec
lahf
repnz
mov
xor
push
xchg
fbstp
les
xor
int
sub
and
ljmp
pop
out
pop
jl
std
pop
sub
inc
push
rcrl
lret
pop
cs
jp
push
shll
sbb
and
xlat
orb
fwait
xor
or
cmp
adc
push
cmp
inc
pushf
pop
aam
pop
add
push
sahf
cmp
pop
adc
lds
rcrl
xchg
adc
scas
pop
rol
pop
add
cltd
mov
in
cld
push
pop
les
ja
jge
data16
lahf
xor
nop
jae
mov
in
cmpsb
pushf
xor
test
inc
dec
mov
xchg
in
cmp
sarl
jno
push
jmp
xchg
jp
mov
dec
mov
dec
mov
popf
add
cmpsb
jne
mov
jp
cmp
pop
rcrb
sbb
cs
loope
mov
popa
lea
stos
mov
pop
cmp
in
cmp
sub
rcrl
add
stos
lock
ret
ss
rcrl
jecxz
pop
adc
gs
movsl
enter
out
ljmp
inc
aaa
sbbb
xchg
push
rolb
dec
out
movsl
cwtl
das
pop
sbb
int3
pop
xchg
outsb
int3
push
pop
inc
lea
cmp
mov
call
sub
lahf
mov
testb
inc
scas
imul
dec
sub
push
pop
mov
cmp
inc
add
dec
shll
mov
ret
push
lods
mov
cld
loopne
and
or
cmc
pop
sahf
es
adc
pop
outsl
and
lret
inc
sub
add
xor
pop
mov
imul
fmulp
mov
insl
pop
movsb
cmp
outsl
push
in
decb
fisubl
test
pop
dec
pop
cmp
cmpsb
aam
fiaddl
ja
iret
mov
dec
xor
mov
scas
lods
inc
sbb
mov
cltd
xor
lods
outsb
aam
out
mov
mov
scas
mov
push
fnstenv
mov
inc
loope
mov
mov
sub
into
mov
test
inc
xchg
sub
shrb
adc
mov
adc
test
dec
out
sbb
clc
js
pop
repnz
mov
andl
pop
jge
fdivr
enter
mov
push
aad
cmpb
cmp
mov
lret
add
insl
inc
and
ja
negb
mov
test
iret
jbe
adcb
dec
mov
aad
ds
inc
jo
test
or
cmp
imul
cmc
test
add
int
sahf
xor
test
and
ret
push
loopne
sbb
test
add
scas
pop
fidivl
movsb
pop
mov
scas
xchg
les
adc
adc
iret
inc
shr
test
push
push
insb
stc
arpl
dec
pusha
adc
xchg
push
mov
insb
jmp
xchg
adc
pop
push
or
jl
sub
push
fidivrs
repz
add
push
mov
imul
and
push
and
xchg
pxor
cmc
inc
push
mov
arpl
stc
pop
pushf
lcall
dec
loop
inc
pop
xor
mov
or
and
jno
xorb
call
xchg
push
aas
mov
test
scas
test
adc
fidivs
mov
testl
addb
int3
out
sbb
sub
scas
adc
stos
xchg
push
fiaddl
lock
in
add
jne
pop
and
jge
push
inc
lret
xchg
xchg
pop
icebp
ret
mov
jge
mov
add
imul
lea
mov
and
xchg
adc
lds
push
movsl
mov
mov
imul
inc
xor
mov
out
xchg
cmp
adc
pop
mov
jp
repnz
xor
pop
call
or
cmp
rol
push
or
add
int3
mov
pop
in
jne
ret
stos
inc
pandn
mov
xor
icebp
cmp
icebp
add
dec
jge
dec
loopne
mov
xchg
aaa
repnz
xor
enter
bound
push
test
repz
mov
lret
insb
add
mov
inc
fadd
adcl
push
xchg
jge
push
in
dec
xor
push
cli
push
lock
jno
fwait
xor
adc
mov
adc
fcmovnu
outsl
or
out
jecxz
cwtl
jne
jae
xor
out
cli
xchg
addl
lahf
push
pop
jne
std
cmpsb
int
arpl
std
subb
sahf
cmp
adcb
out
imul
cmp
xchg
fcomi
xor
mov
or
das
xor
cltd
inc
mov
addb
sbb
fimull
sarl
push
mov
xor
ss
pop
mov
incl
bound
jecxz
cmp
cmpsl
gs
je
sbb
les
aad
daa
fwait
push
test
stc
push
aam
and
jb
mov
data16
fldl
add
dec
testb
adcl
xlat
mov
mov
dec
lret
call
or
in
stos
add
fiadds
icebp
repnz
pop
sbb
addl
jp
pushf
cli
into
sbb
repnz
sub
aam
xchg
mov
cmp
call
inc
div
cmp
cld
lcall
jbe
ds
mov
ret
lahf
inc
push
add
lret
xor
pop
dec
arpl
mov
inc
iret
xor
sbb
cmc
into
scas
add
xchg
mov
push
sbb
test
test
and
imul
mov
je
cmpsb
xchg
movsl
sbb
repnz
mov
xlat
mov
inc
sbb
imul
test
sbb
mov
test
lock
and
dec
cmp
cmp
mov
std
lds
add
loope
sbbl
sbb
pop
xor
out
enter
sbb
xor
xor
shl
or
insb
in
lods
jno
cmpl
mov
dec
arpl
fdivs
iret
jae
mov
arpl
rorb
cmpsb
mov
xlat
into
call
dec
dec
inc
ret
insl
in
jb
mov
mov
push
add
sub
ror
inc
xchg
sbb
push
or
shll
inc
jge
sub
cmp
in
jecxz
movsl
pop
mov
xor
sub
lea
push
in
fsubrl
mov
push
enter
pop
icebp
pop
sub
js
setnp
loopne
movsl
dec
rorb
ret
pop
cmp
cld
pop
push
pop
mov
jge
jle
pop
pop
add
push
xchg
in
out
xchg
push
movsl
out
bound
mov
cmc
mov
movsb
cmc
push
ficomps
in
das
idivl
dec
push
mov
std
mov
imul
lock
fwait
jmp
bound
mov
adc
add
dec
bound
dec
mov
push
ja
cwtl
xor
dec
adc
loopne
xor
jge
cmp
mov
scas
shll
enter
out
or
dec
pop
pop
push
in
adc
lcall
jne
cmp
repnz
adcb
xorl
and
cld
das
cmp
mov
or
pop
lds
push
add
cmpsb
and
add
int3
test
pusha
pop
std
pop
mov
add
cmp
or
in
nop
ja
jl
jb
mov
or
push
lock
and
shlb
test
sbb
orb
nop
mov
lods
into
jb
cmp
clflush
push
movsb
and
mov
arpl
ja
pop
jmp
lret
movsl
test
and
jo
xor
aas
test
sar
aad
or
and
pop
test
aam
sub
js
rorb
int
or
mov
out
ret
cmp
xor
push
stos
cmp
cld
sbb
loop
es
iret
ss
mov
push
test
dec
fsubrp
ja
and
test
pop
jb
xchg
test
xchg
sub
in
out
stos
mov
pusha
pop
stc
pop
sbbl
sub
test
movsb
fldt
or
lcall
aad
push
repz
out
aaa
movsl
add
xchg
mov
fstpl
ret
or
bound
fstp
xchg
scas
mov
push
cld
lcall
sbb
mov
insl
cmp
popa
jl
shrb
xchg
mov
xor
fdivrl
inc
shrb
int3
out
add
push
cld
dec
fcomi
jl
jmp
roll
or
out
shrl
xchg
scas
test
sub
sub
les
fsubrp
lods
mov
pop
add
xchg
pop
dec
dec
pop
out
mov
imul
int
or
aaa
cmp
lret
scas
repz
pop
stos
iret
push
call
mov
shrb
mov
sarb
nop
enter
push
rclb
rsm
pop
repz
movsl
rcl
sub
loopne
imul
mov
add
fwait
es
out
jl
adc
sbb
mov
xor
icebp
cmp
push
fiadds
mov
lock
andl
or
mov
sbb
dec
cmp
testl
mov
and
lahf
cmpsb
mov
xchg
call
aaa
lea
insb
movsb
pop
test
vhsubpd
int3
les
movsl
mov
push
pushf
repz
xchg
cmp
xchg
mov
daa
inc
fs
outsb
cmpsl
loope
imul
lds
iret
sbb
scas
popf
test
mov
leavew
and
ret
arpl
js
or
pop
pop
mov
orl
lods
mov
mov
pop
mov
loop
clc
adc
mov
mov
dec
outsl
adc
xchg
popf
xor
pop
or
imul
loope
inc
pushf
sub
in
jle
inc
pushf
mov
mov
in
test
adc
dec
sub
push
adc
aad
sbb
mov
popa
idivl
in
mov
imul
loop
inc
rcrb
imul
xor
pop
repnz
sarb
cwtl
xchg
mov
mov
jecxz
mov
sub
mov
xor
mov
icebp
rcrl
fsubs
in
pusha
int3
lock
out
stc
adc
and
and
push
jne
or
sbb
fdivs
leave
lahf
fldt
push
cld
dec
pop
or
inc
mov
stos
xchg
insb
mov
inc
or
dec
mov
cli
jl
cmpsb
xor
push
cmp
inc
pop
pop
outsb
ljmp
lods
xlat
icebp
lahf
std
inc
flds
cmp
cmp
lret
popa
inc
test
call
stos
jns
push
or
adc
mov
sbb
out
push
sbb
lahf
and
xor
ret
lret
shl
lret
pop
lock
int
jo
dec
mov
lret
pop
or
je
push
int
dec
or
rcl
bound
rcl
into
mov
arpl
jno
cvtps2pd
aam
cld
xchg
jle
scas
and
sbb
bound
dec
jecxz
xor
add
adc
test
outsl
adc
sub
in
mov
cmpsl
dec
jge
bound
add
in
adc
mov
aam
sbb
jge
in
mov
sbb
or
test
push
mov
les
mov
int
adc
mov
pusha
adc
inc
pop
mov
shlb
inc
add
mov
jno
mov
xchg
pop
jge
stos
ljmp
mov
xchg
xor
cli
sbb
inc
fmull
fsubs
xchg
adc
jmp
jle
mov
sbb
or
vmovapd
fisubrl
cmpsb
mov
in
call
cmpsl
fistpl
in
dec
mov
stos
jle
cld
pop
inc
inc
int
jno
push
ds
aam
mov
push
loope
xchg
xlat
std
in
jge
int3
push
pop
sbb
fimull
adc
lock
movsb
sti
f2xm1
xor
xor
ss
adc
test
cltd
rol
rorb
xchg
pop
lods
mov
fsts
xor
xchg
mov
stc
xor
outsb
insb
inc
in
lea
add
pushf
adc
mov
movb
fimull
movsl
jne
lods
dec
icebp
inc
sub
xor
sti
rclb
orb
cmc
xor
bound
xchg
jo
pushf
jae
dec
xchg
mov
cmp
mov
inc
mov
pop
inc
ret
pop
mov
test
xor
mov
cld
cmp
imul
cmp
ret
lods
mov
push
adcb
aaa
test
cmp
sti
js
mov
sub
xlat
das
sbb
sub
dec
cmp
cmp
test
daa
push
mov
stos
cmp
fwait
sbb
cmp
mov
rcr
xchg
push
and
sbb
addb
add
cmpsb
andl
rclb
mov
rep
cmp
adc
xchg
cmc
sti
inc
lcall
shrb
sarl
lds
inc
pop
in
popa
mulb
mov
push
cmp
xor
jg
call
jns
sbb
pop
jno
mov
push
into
sbb
pop
cmp
repnz
hlt
jge
addr16
fwait
jnp
adc
sub
and
test
pop
pop
ret
sub
outsb
sbb
cmpsb
jne
ror
ja
shll
sbb
sbb
jle
imul
outsl
xchg
adc
arpl
push
ljmp
mov
ret
or
cmpsb
imul
or
mov
push
cmp
adc
adc
int
pop
lods
push
lods
pop
xchg
sti
xchg
std
adc
pop
xor
push
loope
fstl
sub
adc
outsl
rcrl
pop
idivb
cmpsb
mov
test
popa
or
popa
pop
sub
xchg
les
jge
jo
dec
sbb
xor
mov
push
ljmp
std
pop
test
adc
insl
fwait
mov
ljmp
jle
jne
adc
clc
inc
cmp
nop
cmpsl
sti
mov
shl
hlt
and
ss
or
lret
pop
cld
or
test
test
dec
dec
sarl
in
pop
insb
sbb
pusha
repnz
and
xor
sbb
push
mov
pop
lock
inc
jb
cmp
cmp
aad
adc
les
xchg
enter
cmp
jp
pop
repz
es
aad
decl
fsts
xchg
mov
dec
ljmp
jmp
jmp
xor
subl
std
sbb
fcmovnu
or
ds
data16
outsl
inc
in
pop
jmp
push
scas
jl
enter
cmp
lret
and
clc
mov
xchg
mov
iret
xchg
jno
loope
mov
ljmp
popf
aas
pushf
xor
xor
popf
imul
test
jb
pop
lock
cmp
and
push
movsl
add
test
addr16
cmp
push
pop
adc
pusha
xor
push
fwait
xor
sub
test
int3
lcall
xchg
std
dec
ljmp
mov
sub
and
lret
pop
js
insl
and
shr
cmp
jl
xor
cmpsl
pop
jno
iret
mov
sbbb
lock
sbb
sub
inc
iret
dec
jecxz
insb
xchg
inc
lods
pop
scas
mov
mov
dec
in
ret
rcl
xor
xlat
gs
xor
xchg
popf
lock
leave
jle
jo
nop
jle
cwtl
in
mov
or
pop
jbe
pop
loop
or
stos
push
fs
pop
and
inc
pop
or
mov
arpl
inc
fisubl
and
xor
mov
cmpl
mov
lcall
cmpsb
push
cmpsb
push
fs
or
push
jb
mov
mov
pop
adc
pusha
ljmp
insl
or
call
or
mov
xlat
adc
sbb
arpl
das
into
ret
repz
loope
cmp
mov
dec
inc
int
inc
push
jmp
dec
and
xor
pop
ffreep
and
push
push
pop
cli
rorl
or
jo
in
cmp
shll
push
mov
mov
insl
sbb
inc
call
push
lock
loop
js
inc
out
pop
enter
sub
in
daa
lock
jge
sub
dec
xor
lret
cli
cmp
inc
out
mov
testb
and
std
mov
or
mov
pop
fs
xchg
into
xor
cmpsl
rorl
test
cmp
and
loop
popa
enter
cli
push
movsb
mov
cld
bnd
or
mov
jae
hlt
seta
mov
cmp
xor
pop
cmp
mov
cmp
rol
adc
cmp
rol
loopne
sbb
xchg
pop
ja
mov
roll
jmp
mov
jns
pop
pop
cmpsl
jno
and
cmp
or
jne
sub
push
loopne
nop
mov
inc
inc
inc
jae
rcll
iret
inc
sti
sub
and
aam
inc
testl
sub
adc
clc
das
in
aas
xchg
imul
test
movsb
je
mov
aad
icebp
lea
sbb
pop
repz
arpl
mov
popa
push
inc
shlb
inc
add
clc
xor
xchg
or
ret
adc
inc
xor
int3
lret
or
ja
inc
clc
dec
test
arpl
sub
roll
iret
int
xorl
cmc
test
push
test
lds
pop
jmp
xchg
pop
dec
leave
pusha
imul
test
fwait
lock
mov
es
repnz
cld
lahf
add
mov
xchg
popa
mov
mov
inc
and
insb
aaa
into
popf
adc
push
mov
mov
adc
push
jo
xchg
or
iret
jns
mov
cmp
sbb
dec
int3
gs
push
push
repz
dec
and
rcl
mov
xchg
fdivrp
fcomps
mov
jg
rorb
or
and
lcall
je
filds
cmp
std
jo
das
int3
dec
fs
lods
mov
xlat
pusha
pop
outsb
fsubp
sbb
pop
add
mov
dec
popa
imul
jno
idivb
and
cmp
decl
push
xor
outsl
out
popf
int3
movsb
mov
fcmovne
je
pushf
sti
fwait
xchg
imul
sub
mov
in
mov
outsl
cmp
or
xchg
into
aam
les
mov
pop
scas
stos
inc
fsts
adc
mov
sub
lahf
imul
stos
rcrb
push
fcompl
outsl
push
jb
fwait
add
inc
loopne
push
fprem1
or
fstps
adc
fstpt
xor
arpl
stc
aas
cmp
mov
aas
ret
adc
popf
xchg
cli
jbe
mov
aam
xchg
and
outsl
inc
xchg
sbb
mov
mov
int
mov
dec
test
cmp
les
mov
faddl
mov
cmpsl
xor
rcl
vmovntdq
pop
or
lock
adc
push
aad
int3
jg
test
dec
cmp
lea
mov
mov
sbb
out
inc
jge
cmpsb
je
rorb
inc
fcmovnu
mov
cwtl
aaa
mulb
jmp
dec
add
and
mov
lret
cwtl
xchg
push
jl
xor
ja
pop
je
outsl
mov
aam
test
xchg
xchg
insb
dec
gs
sub
mov
xchg
dec
xchg
push
movsb
ret
test
pop
pop
mov
les
mov
xchg
aam
int3
mov
or
jb
push
mov
or
and
sbb
aad
loope
movsb
jg
sbb
push
jp
fisttps
movsl
lcall
push
stc
sarl
jnp
out
dec
adc
xchg
lods
repz
js
out
cwtl
clc
or
jb
push
xor
push
lods
inc
in
imul
sbb
mov
inc
call
pop
dec
loopne
std
popf
cmp
data16
ljmp
sbb
scas
fmull
out
out
aas
rcrb
gs
inc
mov
pop
or
jbe
xchg
sub
ja
adc
push
fs
loopne
int
adc
cltd
stos
test
in
sti
repz
jbe
fcoms
pop
and
jmp
jo
dec
mov
sub
out
insb
ja
mov
adc
arpl
push
dec
or
dec
or
js
push
and
adc
test
faddl
mov
xor
jo
movl
mov
dec
repz
pop
xlat
mov
nop
xchg
cmp
fdivs
out
bound
add
scas
adc
insl
orb
pop
jmp
or
ja
cmp
enter
mov
jge
aas
out
adcl
enter
insl
xor
jno
mov
sub
push
repz
jb
pop
stos
in
jnp
add
popf
add
ret
inc
xchg
xor
mov
push
sbb
lds
test
or
stos
nop
addr16
adc
std
push
mov
pushf
fdivl
test
jp
push
push
dec
jecxz
jne
or
clc
inc
jmp
inc
scas
repz
xlat
scas
sbb
scas
jae
mov
call
xchg
in
lret
add
fmulp
je
cmp
inc
xchg
and
push
adc
cltd
adc
mov
ds
or
and
ljmp
fdivrl
xor
sub
mov
xchg
jmp
pop
stc
insl
dec
pop
les
xor
in
pop
stc
push
push
jp
repz
int3
sub
das
adc
int
mov
incb
decl
xor
inc
rorl
xchg
dec
leave
pop
push
xor
aad
testb
leave
pusha
and
cmp
icebp
dec
rolb
rcrb
mov
data16
adc
ljmp
inc
fsts
fsincos
or
enter
aam
std
sti
pusha
aaa
jg
sbb
xchg
shlb
jb
mov
ror
andb
mov
jge
xchg
in
jmp
push
aas
or
or
push
mov
into
fnstcw
push
lret
das
ljmp
fistpl
sbb
ret
jnp
add
jno
and
cmp
jne
mov
loopne
lcall
sub
js
orl
pop
or
fs
jnp
mov
and
mov
or
jb
imul
lcall
dec
push
insl
ja
cs
int3
gs
das
movsb
neg
rclb
fstpt
pop
mov
adc
cmp
mov
and
or
adc
push
pop
push
sub
mov
xchg
jne
imul
rorl
icebp
mov
hlt
push
sub
sub
mov
push
pop
xchg
setg
mulb
ds
jg
inc
test
pop
sub
jmp
sub
xchg
add
into
faddp
imul
mov
adc
mov
enter
mov
scas
jle
mov
adc
cmp
and
mov
jg
push
out
loopne
push
adc
jmp
fs
jae
xchg
ja
inc
mov
jp
into
movsl
je
call
mov
repnz
xchg
imul
push
sub
xchg
pop
daa
bound
dec
lock
addr16
add
xlat
out
lds
cmpsb
sahf
xor
shlb
push
jl
lock
mov
cmc
or
fnstsw
sahf
lods
decb
scas
sub
cmp
insb
fisttpll
lret
push
fsts
addr16
inc
inc
gs
cmp
loop
in
add
sbb
and
add
or
pusha
mov
psrad
out
lcall
sahf
add
movsb
dec
es
test
rcrb
adc
inc
dec
leave
and
negb
mov
arpl
add
cmp
mov
js
or
das
js
add
jge
xor
fiadds
mov
jae
outsl
dec
sub
nop
out
mov
jnp
lds
jg
dec
out
test
jl
mov
lods
and
scas
or
les
jbe,pt
repnz
pop
mov
and
mov
adc
lock
xor
xor
test
jns
lret
leavew
or
jb
mov
nop
scas
mov
repz
sbbl
mov
rorl
and
ljmp
cmp
mov
add
and
lock
mov
mov
or
jp
js
test
sub
dec
stc
push
mov
xor
mov
dec
mov
ret
pop
ja
pop
dec
aaa
test
fbstp
cwtl
sbb
push
adc
push
lcall
push
outsl
lock
inc
lret
mov
fs
push
add
lods
push
jl,pt
add
cmp
hlt
inc
cmc
add
xchg
imull
jb
mov
inc
aas
mov
mov
cmp
dec
cmpb
out
mov
fstl
add
nop
push
push
mov
insl
xor
or
cmovns
jg
sahf
xlat
movsb
pop
int
pop
and
mov
push
jno
adc
loopne
inc
sbb
add
ror
lahf
hlt
push
jo
and
sub
fbstp
loop
mov
xlat
pop
pop
xchg
clc
pop
lahf
out
leave
arpl
out
fbld
movsb
lret
or
ja
daa
sbb
mov
ds
sbb
sub
out
xlat
cmp
push
push
inc
xchg
jmp
loope
das
in
mov
mov
adc
and
test
lock
int3
cmp
mov
mov
mov
fwait
ret
sbb
or
pop
xchg
sahf
shll
mov
dec
and
rcl
xchg
ret
cmp
je
outsl
sub
mov
cltd
scas
inc
inc
sbb
pop
lock
jb
push
fs
aaa
pop
nop
lcall
in
aas
outsb
mov
imul
daa
shll
pop
scas
xor
arpl
jp
pop
in
lea
cmp
test
adcl
jg
ss
pop
fsts
cli
lahf
mov
add
cmp
repz
call
or
sti
add
mov
bound
inc
pop
filds
mov
shrl
adc
lea
pop
push
dec
mov
jl
mov
mov
das
mov
aas
shll
out
sbb
jge
xchg
imulb
insl
or
dec
and
fildl
push
subl
mov
arpl
out
test
clc
or
rol
adc
mov
mov
jbe
pop
cmp
aam
orl
sub
jnp
cmp
fs
rol
pop
in
das
xchg
pop
popa
or
mov
push
dec
outsl
sbb
lahf
ja
orb
jnp
popf
mov
jge
stos
scas
xlat
add
lcall
imul
and
mov
out
xchg
fstl
cmp
xor
cmp
sarb
add
add
push
cmp
jmp
pop
mov
xchg
xchg
sub
pushf
sbb
mov
sbb
push
lahf
divl
dec
jp
nop
insb
scas
lods
js
mov
out
adc
add
imul
or
and
cs
mov
jl
in
add
mov
into
gs
fimuls
inc
mov
test
or
push
jae
std
lods
mov
adc
cltd
ss
clc
pop
movsb
mov
in
lock
pop
les
jbe
mov
lret
cmp
adc
gs
fwait
gs
andb
mov
push
sbb
mov
or
addr16
nop
cwtl
andl
mov
mov
dec
outsl
sbb
inc
mov
jb
test
xor
and
pushf
and
rol
jno
jae
ret
std
cmp
cmpsb
ja
mov
jne
adc
mov
or
or
mov
lahf
xchg
lcall
inc
fsubl
cltd
mov
mov
sti
push
movsb
test
std
push
fnsave
and
sahf
sbb
or
imul
pusha
xchg
add
push
adcb
cwtl
or
pop
push
mov
lods
mov
adcb
in
cmp
mov
les
pop
movsl
ficomps
pop
mov
mov
cmp
sub
ret
cmc
dec
and
iret
in
mov
les
inc
push
call
fcomps
stos
dec
das
out
int3
mov
adc
pusha
inc
and
je
mov
fcoml
aam
test
loopne
push
repz
aas
jb
daa
stc
xchg
xchg
jo
xor
repz
test
jl
fnsave
dec
mov
lock
cmp
push
int3
jmp
aas
shlb
cmpb
xchg
aaa
lret
rorb
dec
mov
leave
jo
fidivl
leave
sub
xchg
gs
xchg
clc
push
out
iret
cltd
push
mov
push
enter
dec
cmp
jle
in
sbb
xor
pop
mov
cmp
gs
stc
repnz
inc
and
inc
adc
mov
and
pop
fdivrl
push
sub
dec
in
sti
lock
cmp
ds
and
loop
xchg
out
mov
fcmovbe
add
pop
jl
mov
stos
call
sbb
sub
sub
lahf
mov
repz
mov
xchg
scas
pushl
call
or
add
int3
sbb
jo
iret
mov
add
into
xor
xchg
fisttpll
test
adc
lods
lahf
lods
ljmp
pushf
xor
ljmp
xlat
sub
inc
pop
out
xchg
pop
std
hlt
push
outsl
es
in
jge
pop
jbe
sahf
add
xchg
and
fdivrs
repz
lds
push
xor
cmpsl
mov
push
roll
push
cmpl
dec
cmc
mov
dec
jecxz
pop
inc
das
add
dec
add
jmp
push
add
xorb
fnstsw
sti
mov
jl
cwtl
add
movsl
inc
and
mov
fxch
pop
sti
aaa
ret
fldl
xchg
cmpsb
lods
dec
xor
push
cmpsl
push
fwait
mov
or
push
pop
push
clc
or
push
notl
dec
cmpsl
call
push
aad
lods
ljmp
xchg
negl
js
sbb
rcrb
cmp
dec
ret
sti
outsb
cmp
call
lret
push
pop
cmpsl
ds
jns
mov
lahf
out
add
scas
fnsave
or
push
mov
and
push
iret
jb
fsubrs
ljmp
push
outsl
xchg
cld
and
mov
cmpsl
pusha
ss
sub
inc
adc
sub
in
in
mov
inc
loop
pop
repz
pop
and
adc
outsb
cwtl
clc
dec
cmc
pop
xchg
fldt
push
sub
test
inc
mov
mov
adc
aaa
pushf
pop
jb
test
mov
mov
scas
lds
mov
or
dec
push
adc
mov
and
aad
cltd
stc
or
adcb
jle
or
subb
xchg
pop
xor
mov
into
call
jo
frstor
dec
pop
bnd
std
cmp
arpl
pop
push
xlat
lea
cltd
enter
xchg
pop
in
mull
rolb
roll
lds
push
cmp
mov
pop
sbb
mov
xchg
ret
jp
imul
add
mov
call
jg
mov
movsl
adc
jg
push
adc
lds
ret
mov
fs
call
cmpsl
stc
add
sbb
xor
xchg
jnp
ss
cmp
mov
in
push
out
nop
and
shrl
iret
sub
mov
stos
inc
jae,pt
lret
mov
push
mov
lds
sub
fs
sub
mov
push
idiv
xor
pop
popa
orl
data16
xor
push
sar
std
pop
jno
mov
mov
or
push
dec
cmp
jne
sub
lds
lea
push
xor
mov
mov
lcall
in
test
cmc
jle,pn
loop
adc
jmp
inc
fimuls
adc
sub
imul
cmp
push
mov
das
cmpsb
sub
ret
fdivs
adc
je
jb
jnp
pusha
insl
leave
icebp
adc
lret
sbb
and
pop
cltd
popf
sub
in
and
sti
lds
add
outsl
adc
int3
nop
mov
mov
lahf
adc
call
sti
xor
movsl
push
aas
sti
lcall
push
mov
outsb
sub
inc
les
or
fwait
gs
inc
push
xchg
add
mov
lret
repnz
imul
and
out
dec
xchg
mov
cmp
popa
sub
fs
adc
out
pop
insb
jbe
mov
pop
lret
shrl
hlt
lret
aam
out
inc
fistpl
fstl
cmp
cltd
push
adc
push
mov
pop
cmpsb
ror
clc
hlt
dec
daa
enter
adc
cs
cmp
inc
adc
aam
pop
stos
insb
add
adc
mov
imulb
lods
scas
clc
ret
and
xlat
cltd
dec
dec
mov
mov
pop
dec
test
jne
stos
sub
je
xor
adc
pop
push
inc
ljmp
push
lods
add
out
xchg
in
push
jno
aaa
cmpsb
in
ret
outsl
xlat
mov
xchg
pop
aad
fdivrl
jno
fmul
push
clc
clc
ljmp
cld
jb
decl
xchg
xchg
push
xchg
out
js
jmp
dec
dec
in
sahf
push
push
nop
cmp
add
repz
iret
fwait
test
loope
je
xchg
out
sbbb
shr
in
stc
mov
sub
hlt
addr16
sti
mov
iret
arpl
idivl
push
jecxz
push
cld
add
push
sub
enter
pushf
and
cmpsl
mov
xor
gs
int
fidivrl
jmp
pop
xor
iret
int3
hlt
popa
mov
rorb
bsf
movsb
leave
fs
xchg
xchg
rcl
in
pop
cmp
daa
sub
sub
add
adc
pop
lods
push
test
scas
push
inc
lret
and
or
xchg
cltd
add
out
dec
jb
push
cs
push
pushf
hlt
push
xor
xor
xor
loope
stos
mov
cmc
ret
lret
out
divl
call
inc
inc
arpl
dec
ja
cwtl
out
mov
dec
dec
pop
stos
pop
mov
mov
fidivs
out
inc
or
je
xor
add
xor
mov
xor
xor
push
in
mov
pusha
mov
movsl
fisttps
jb
lcall
aam
stos
stos
inc
fcoml
std
add
push
jmp
stos
clc
loope
inc
fildl
mov
in
and
xchg
sbb
pop
add
xor
movsb
fwait
pop
pop
inc
pop
cmp
add
jecxz
mov
jnp
cmp
push
xor
ja
aad
adc
nop
push
lcall
pop
loope
push
lods
iret
add
xor
push
lcall
mov
lds
into
cmpsb
push
shrl
mov
adc
call
cmp
sarb
loop
pop
push
lret
cltd
stos
outsl
fwait
adc
scas
mov
mov
in
stos
push
cmp
push
negl
stos
loop
push
sub
call
mov
dec
in
dec
test
das
popa
jge
cwtl
inc
loopne
push
notb
mov
pusha
pop
lock
lods
mov
and
ja
or
mov
jno
jns
mov
mov
or
mov
out
divl
pop
ret
mov
jne
sub
ja
in
pop
scas
push
call
cmp
cltd
sub
dec
insb
out
pop
cltd
inc
pusha
cmpsb
cmp
cmpsb
mov
aad
fdivrl
mov
pop
add
mov
addl
jmp
push
cmp
in
inc
push
jb
push
aad
je
das
pop
push
and
mov
outsb
ret
cltd
push
in
aas
mov
jae
shll
enter
jns
add
cmp
mov
dec
pusha
pop
or
add
ja
iret
test
shlb
pop
mov
std
dec
aad
dec
and
mov
xor
inc
pop
aas
lds
cmp
test
mov
lock
lret
sub
xchg
lock
push
std
aas
pop
add
pop
clc
add
jle
pop
arpl
jb
test
xchg
and
mov
cmpl
pop
cmc
and
rcr
fmuls
inc
nop
sub
cmp
xor
lcall
mov
xchg
push
sarl
xchg
stc
pop
daa
xchg
add
movsl
cmp
dec
add
mov
lret
adc
xchg
movsl
xor
mov
fbld
outsb
lods
cli
fiaddl
mov
cmp
das
mov
loop
adc
and
movsl
mov
adc
push
fistpll
xchg
cmp
mov
cltd
adc
add
out
mov
sbb
movsb
or
imul
inc
adcb
fldt
mov
mov
loopne
test
iret
pop
mov
out
test
mov
fs
cmc
add
fadds
test
cmp
in
inc
or
cmp
mov
out
icebp
movsb
inc
mov
ljmp
popf
sbb
jecxz
lods
imul
dec
scas
sahf
je
lret
dec
aad
mov
pop
xchg
jmp
cmc
int
xlat
je
mov
and
ss
bound
stos
mov
ds
push
fwait
cli
adc
pop
pushf
adc
sub
out
in
out
enter
adc
xchg
push
mov
fidivs
out
daa
out
lea
pop
scas
adc
in
fstps
add
mov
xorb
mov
push
adc
je
shl
and
dec
lret
insl
dec
jmp
roll
and
fiadds
adc
outsb
xchg
adc
pop
std
fmulp
sub
dec
jecxz
idivl
fisubrl
push
sub
cmpsb
aad
jl
add
repz
jmp
imul
sub
aam
lods
xor
pop
test
and
dec
cmp
sub
push
xchg
mov
sub
and
jnp
jae
int
jbe
jno
ljmp
call
cli
or
jno
xor
xchg
mov
mov
in
divl
or
pusha
lret
into
cld
xchg
add
xor
les
lahf
add
std
and
test
sbb
cmp
gs
lock
ss
insb
push
test
dec
mov
jge
inc
das
inc
fwait
and
mov
sub
addr16
dec
xchg
cmp
movsl
out
lret
jg
mov
or
jg
cmp
gs
repnz
lods
ficoml
push
in
dec
pop
pop
mov
mov
jmp
popa
aas
push
fisubrl
or
cmc
mov
bswap
inc
inc
jg
ja
push
jl
pop
sub
ret
xchg
nop
jmp
shr
sbb
sbbl
mov
in
jmp
adcl
lods
into
fucomi
lock
stos
iret
pusha
lods
inc
push
stc
and
mov
pop
insl
test
mov
aas
inc
int3
aaa
mov
add
daa
mov
mov
inc
hlt
and
add
and
jno
out
fwait
dec
es
jo
ljmp
pop
jp
pushf
in
sbb
ds
out
adc
or
cmpsl
pop
iret
add
fisttpll
pop
pushf
or
outsl
ret
incl
jae
mov
insl
clc
cmp
mov
push
sub
add
xor
adc
rcrl
mov
jl
call
cmp
sub
add
leave
xchg
sti
arpl
pop
stc
mov
jmp
or
and
mov
pop
push
mov
cmp
sbbb
xchg
and
pushf
adc
outsl
daa
fidivrl
xor
psubq
jg
jecxz
inc
dec
jmp
sub
ss
inc
test
push
cwtl
and
mov
ret
fbld
inc
shld
leave
cmpsb
inc
je
pop
lock
insb
xor
orb
jg
mov
push
inc
cmp
sub
push
les
cmpsl
scas
xchg
dec
add
push
je
xchg
pop
mov
clc
push
stos
fnstsw
mov
andb
clc
push
add
adc
mov
sub
jno
in
sub
popa
adc
jb
data16
lods
jb
adc
lds
testl
xor
icebp
jbe
out
jmp
mov
pop
or
das
cs
lahf
xchg
pop
loopne
cld
ret
hlt
addr16
clc
xchg
pop
xchg
insl
lods
cmpb
xchg
mov
xchg
das
add
js
or
fnsave
adcl
sbb
lods
pop
out
or
loop,pt
adcl
or
mov
lds
test
mov
fidivrs
jae
clc
scas
mov
mov
cli
pop
repnz
adcl
dec
add
pop
jle
jae
pushf
jmp
or
dec
loop
pusha
adc
mov
jmp
push
stos
insl
cmpl
adc
sub
cmp
xchg
lcall
gs
pop
pop
mov
test
xor
icebp
fmuls
mov
pop
fwait
mov
mov
or
cmp
std
add
xor
mov
xor
jno
mov
adcl
lret
adc
jmp
inc
xor
mov
add
into
daa
mov
pusha
add
xchg
insl
imul
cmp
jp
add
iret
mov
inc
jl
outsb
aam
sub
xor
jle
mov
mov
xor
mov
jecxz
adc
cmp
fisubl
pusha
and
mov
lea
pop
insb
and
add
outsb
cmp
sub
pop
repz
les
jg
push
sub
dec
stos
test
xor
dec
call
aaa
cli
das
push
inc
xchg
xlat
mov
fistl
sbb
lahf
xor
adc
clc
inc
pop
arpl
sbb
mov
adc
in
sbb
dec
in
leave
icebp
sub
shll
in
push
add
push
mov
pop
subl
insl
enter
imul
sub
push
inc
fs
xor
test
in
xorb
push
or
ja
mov
divb
testl
and
jge
lret
jnp
add
dec
fisttpll
jle
jmp
or
cli
mov
mov
fsubs
lods
shll
cmpsl
out
popf
jg
aas
and
and
call
mov
ss
dec
test
stos
or
test
dec
out
xchg
pop
xor
ja
stos
xchg
push
cmc
cmpsl
xor
mov
push
ja
mov
loopne
mov
mov
filds
pop
pop
nop
pusha
std
in
jl
xchg
cmpsb
or
bound
loope
es
movsb
ljmp
mov
xor
xor
pushf
jle
sub
xor
add
pop
fwait
mov
xchg
mov
or
gs
shll
aad
js
jne
push
cltd
std
mov
pop
ja
out
cli
dec
mov
jle
fnstsw
lahf
dec
ret
cld
and
sub
roll
xor
leave
inc
leave
lods
in
lods
leave
xlat
fidivs
mov
movsl
or
rcll
ljmp
stos
jp
scas
sarl
shrd
fstpl
jmp
call
in
cltd
xor
addr16
add
or
dec
pop
jp
inc
xchg
cmpsb
in
sbb
xor
outsb
pop
lret
and
fadds
mov
test
xor
sarl
cmp
xchg
jl
inc
xchg
xlat
lret
mov
sub
jbe
cli
jnp
and
test
jecxz
push
adc
jl
adc
xchg
loop
or
mov
repnz
xchg
scas
js
push
or
cwtl
fucomip
leave
ljmp
cmp
xlat
ljmp
mov
mov
rclb
fwait
add
jne
jb
xchg
fwait
dec
pop
int
xchg
lods
or
or
push
std
and
push
shr
ficoml
out
roll
xchg
or
mov
jne
stos
rolb
adc
insl
ss
cwtl
cltd
push
push
jne
push
sub
xchg
iret
add
mov
sarb
add
cmpsl
adc
insl
and
pop
jbe
lds
lock
gs
pusha
in
clc
xchg
mov
ljmp
cmp
clc
mov
das
or
insb
add
jne
and
out
xor
jno
in
pop
pop
sub
repz
adc
sub
sub
add
stos
es
push
decb
int3
mov
fsts
pop
daa
outsl
sub
insb
repz
adc
xchg
sub
xchg
jge
into
lock
stc
xor
std
cs
xchg
cs
sbb
push
lds
es
rcl
stc
jbe
push
shl
outsb
sub
shll
and
aas
push
lcall
outsl
testl
pop
movsb
cmp
mov
add
fdiv
pusha
ficoms
xchg
lret
push
mov
mov
lcall
imul
or
jbe
dec
cltd
jne
insl
xor
and
xor
pushf
dec
mov
pop
repnz
lar
sbb
xor
jne
push
pushf
or
sti
xchg
jmp
jp
and
dec
stos
sub
and
xchg
and
push
pushf
das
mov
add
loopne
cmp
mov
gs
iret
pop
enter
test
sub
outsb
push
xchg
dec
stos
push
sbb
sbb
pop
xor
stc
or
loop
pop
notb
sub
pop
andb
mov
hlt
mov
cs
and
mov
or
cltd
icebp
fwait
push
add
adc
mov
out
adc
pop
adc
les
cs
and
add
xorb
enter
cmp
dec
push
sbb
xorb
push
cld
dec
mov
adc
sti
xchg
adc
and
add
aaa
fdiv
push
mov
insl
jge
jg
pop
sahf
repz
xadd
inc
pop
mov
sub
mov
imul
aam
or
mov
loopne
rol
sub
pop
jmp
mov
hlt
mov
mov
adc
ljmp
mov
hlt
addr16
cmp
jno
out
mov
dec
jne
jbe
out
test
lea
sahf
jbe
out
pop
push
imul
lret
mov
add
push
sub
or
in
add
icebp
nopl
in
cmp
jbe
cwtl
notl
rcrb
jp
add
cmp
push
mov
xchg
iret
mov
xor
adc
or
mov
or
push
shl
push
cmc
adc
pop
pop
jae
push
inc
cmpsl
test
in
xchg
ds
sbb
pop
pop
out
dec
int
movsl
add
push
push
popa
fsubr
orl
mov
or
outsl
movhps
mov
add
cli
stc
jne
std
mov
sbb
mov
mov
out
push
dec
ljmp
jns
mov
pushf
lea
jge
lods
fsubrs
lahf
mov
lods
add
jae
mov
gs
push
mov
fmulp
dec
call
int3
das
jmp
sbb
loope
jl
xchg
aas
xchg
imul
sarl
jl
adc
adc
inc
lret
push
pop
scas
mov
sbb
not
out
adc
adc
mov
jl
xchg
inc
cmp
inc
sbb
aad
mov
sub
cmp
fs
jg
shrb
sub
xchg
dec
test
cli
or
movsl
jle
push
gs
mov
jg
lock
push
push
mov
cltd
sub
inc
add
dec
pop
je
cli
push
int
subb
cmp
adc
pop
in
imul
jmp
sub
push
std
adc
es
pop
xor
lret
cli
jne
add
pop
insl
rolb
xchg
jg
imul
mov
out
pop
cmp
ffreep
lds
jne
leave
ljmp
or
pop
movsl
dec
stos
and
mov
lret
loop
cmp
lods
rorb
fwait
cmpsl
cltd
fwait
mov
mov
fldenv
jbe
push
movsb
cmp
mov
add
dec
ljmp
mov
je
call
sub
outsb
loope
ret
fimull
lret
hlt
sti
mov
xchg
and
in
imul
pusha
lret
jae
inc
movb
inc
xor
jnp
test
pop
popf
xchg
into
and
flds
addl
sub
or
pushl
fwait
mov
rolb
outsb
lahf
xor
adc
ja
push
xchg
sub
sbb
lock
jbe
fstps
push
or
scas
imul
popf
shrb
cmp
fcmovbe
jmp
sti
add
push
cld
xor
fcomps
fisubrs
cmp
stos
sbb
in
in
or
pop
sub
test
xor
imul
push
test
sbb
cmp
mov
lahf
mov
push
scas
xchg
popa
or
push
repz
xor
adc
imul
pusha
mov
or
es
sub
shlb
or
out
mov
pop
pushl
sbb
fisubl
xchg
icebp
dec
push
stc
lods
jmp
pop
pushl
sbb
lea
cmp
call
sbb
cld
les
sbb
sub
mov
sub
in
xor
push
add
mov
and
nop
adc
jp
sub
jo
cwtl
stos
mov
pop
adc
loopne
enter
das
adc
lods
icebp
push
dec
fcomi
xchg
fnstenv
jmp
pop
mov
notl
and
icebp
sbb
mov
fnstsw
sahf
sub
int
sub
insl
push
sbb
dec
lock
pop
cs
test
mov
xor
std
inc
imul
inc
fdivs
xlat
sbb
cmc
imul
jb
jge
jle
pop
test
dec
loopne
fdivrs
jecxz
xor
pop
inc
dec
pop
inc
jno
in
andl
cmp
sbb
inc
in
pusha
das
xchg
lods
lods
cmp
push
inc
test
test
stos
movsl
shr
fisttpl
leave
inc
xchg
mov
mov
push
jecxz
mov
mov
xchg
pusha
push
xchg
push
in
pop
rorb
mov
jae
adc
add
into
sti
inc
adc
cwtl
test
xor
inc
mov
inc
daa
inc
clc
pop
mov
insb
std
mov
cmpsl
mov
mov
fdivrl
xor
int3
arpl
popa
sub
or
lods
leave
test
push
add
es
sub
add
sahf
xor
test
cli
adc
cld
test
and
inc
dec
inc
fnstsw
inc
stc
call
xchg
cld
xor
rcrb
into
fcoml
dec
or
xchg
pop
lods
adc
jb
sbbb
insl
jns
sbb
icebp
dec
mov
pop
iret
sbb
dec
xlat
fidivl
lds
sbb
jnp
mov
in
xchg
dec
mov
sbb
cmp
cmp
pop
in
test
lcall
movsl
orb
dec
aaa
std
mov
aad
cmp
mov
cltd
jns
out
mov
movsb
mov
popa
outsb
aas
xchg
push
cmp
ja
add
lret
push
xchg
push
insl
lcall
je
dec
push
aas
jecxz
push
add
leave
inc
pop
pop
mov
xor
inc
jecxz
mov
in
in
xor
loop
push
clc
or
inc
addr16
shll
jne
popa
push
rcrl
cltd
call
cmp
xor
sarl
jl
fwait
shll
xorl
sub
clc
sbb
insb
nop
xchg
jg
dec
cltd
shrl
inc
push
or
push
jne
cmpsb
iret
sbb
out
int
xchg
data16
add
cs
leave
sub
and
cld
push
dec
jl
pop
divb
xchg
cld
xchg
mov
dec
dec
mov
and
mov
test
xchg
call
xchg
push
popa
sub
scas
xor
inc
pop
aas
int
movsl
icebp
enter
and
sub
pop
ja
push
rcrl
loope
mov
inc
ja
fs
pushw
clc
psllq
jp
aaa
pop
push
jne
repz
idivb
clc
pop
cmc
sub
jne
mov
into
rcl
add
movsl
lods
mov
sbb
cwtl
dec
cmp
mov
fdivl
call
mov
add
in
stos
inc
loopne
movsl
inc
mov
mov
and
popf
inc
inc
pushf
orb
cmpsl
pusha
mov
packssdw
xchg
lock
push
imul
pop
lret
aaa
dec
xchg
dec
push
pop
cld
mov
lea
lcall
xor
cmpsl
fdivl
out
xchg
cmp
fnstenv
testb
stos
cmpsb
lods
mov
sub
fisttpll
dec
mov
and
inc
push
loope
jo
lods
mov
push
add
add
dec
and
mov
clc
inc
rcll
and
or
arpl
xor
add
inc
gs
rclb
pop
stos
xor
sbbb
outsl
rcrb
lcall
pop
int
sub
dec
pop
push
iret
fildll
add
lret
popa
into
or
scas
cltd
andb
lcall
pop
lods
lock
xor
in
sub
mov
sub
fcoms
scas
inc
mov
dec
and
testb
jo
in
and
mov
mov
lds
aad
xor
push
sbb
lds
mov
mov
push
incb
sahf
lods
push
test
or
pop
stos
insb
insb
stos
mov
sub
insb
data16
int
mov
outsb
inc
into
ret
xchg
or
push
sti
jp
ss
and
or
push
sub
daa
mov
stos
call
mov
imul
push
shlb
ss
out
test
aas
lret
out
aad
rolb
les
int3
pop
es
and
outsl
repz
sub
shlb
lods
dec
int3
add
xchg
xchg
sbb
ror
xor
push
inc
mov
notl
jecxz
add
jle
jae
jo
scas
lock
lods
xchg
pop
add
repz
ja
sbb
fcoml
test
test
into
sub
decl
mov
call
dec
data16
lea
in
cmp
lret
pop
jle
int
repz
cmpsl
add
mov
test
adcl
fistpll
stos
cld
add
mov
fwait
ss
stc
adc
adc
jns
lods
xchg
lcall
cmpsl
jge
repz
add
jle
inc
inc
mov
inc
lcall
je
aad
xlat
jmp
gs
repnz
mov
test
out
js
dec
add
add
adc
stc
jae
mov
xchg
pop
les
int
jecxz
fwait
xor
js
lds
cmp
mov
in
xchg
lahf
dec
adc
stc
rcrb
sub
notb
js
jnp
inc
lods
pop
xor
inc
je
sbb
fidivl
mov
mov
and
cmp
je
cs
mov
push
std
sub
add
mov
pop
xor
jno
daa
and
mov
jle
inc
pop
xor
jle
push
lret
xlat
ss
push
sub
sbb
ret
rcl
xor
mov
lds
or
dec
inc
cmpsb
adc
mov
dec
adc
push
push
jp
pop
mov
sbb
jae
ret
sbb
enter
test
xor
fucomp
jnp
ss
sti
mov
or
and
cld
push
inc
fld
sbb
pusha
or
iret
hlt
push
scas
xor
pop
sub
fidivl
mov
imul
mov
mov
fdivrp
sbb
mov
ljmp
mov
imul
inc
push
mov
pusha
into
jmp
mov
push
fdivrl
fisubs
mov
jp
push
mov
adc
nop
jnp
sbb
pop
enter
and
mov
lret
cwtl
call
lret
jae
xorb
adc
mov
and
push
outsb
iret
scas
xchg
pop
fdivl
scas
shrl
dec
loop
pop
or
lahf
cmpsl
out
lods
push
rclb
mov
inc
mov
sub
lods
xchg
adc
cmpsb
adc
jmp
push
inc
mov
inc
fiaddl
es
pop
movsb
jnp
cs
testl
dec
in
xor
mov
xchg
push
mov
lahf
imul
xchg
mov
or
pop
decb
pop
ds
add
out
dec
dec
out
xchg
in
mov
mov
fadds
sub
aad
dec
insb
in
sbb
mov
ja
lret
fsubrs
rcrb
mov
sub
add
loopne
mov
mov
test
or
cli
push
mov
adc
cli
bound
push
int
je
test
frstor
lods
repnz
repz
and
out
sub
movsb
pop
jl
mov
mov
ret
pop
insl
xchg
stos
mov
adc
inc
sahf
cmp
and
and
rcr
cmp
xlat
insl
mov
mov
sub
outsb
jg
pop
movsl
and
mov
out
pop
loop
push
dec
ljmp
push
scas
adc
mov
sub
sub
mov
xchg
movsb
mov
jl
jns
add
pop
test
mov
aas
cmp
add
push
xchg
pop
jo
sbb
xchg
push
mov
xchg
xchg
inc
fldcw
aad
sbb
mov
cs
iret
adc
and
cmp
stos
inc
jns
aas
notb
outsb
push
fucomi
and
cld
fnsave
xor
cwtl
test
xchg
clc
push
sbb
ficompl
xchg
adc
fdivrl
inc
or
fimuls
mov
call
cwtl
lods
xchg
data16
enter
pop
xor
aad
push
sbbl
leave
test
add
jl
cmp
add
add
push
and
push
imul
push
and
adc
cwtl
xor
mov
fmull
iret
les
adc
xchg
mov
mov
fbstp
mov
addr16
popf
test
sub
sbb
into
jne
xchg
idivl
pop
or
stos
dec
je
or
dec
in
cli
or
xorb
add
and
int3
fucom
mov
push
xchg
inc
xchg
sub
punpckldq
or
or
ret
loopne
mov
jns
jo
push
gs
xchg
and
je
mov
in
jno
into
mov
cld
add
scas
inc
xchg
pusha
stos
fstpl
leave
pop
rol
adc
cmpsl
loopne
pop
push
enter
xchg
mov
mov
mov
pop
into
mov
pop
and
xchg
pusha
jge
mov
iret
jge
out
mov
movsl
icebp
jne
sub
inc
xchg
enter
jle
aam
loop
dec
in
inc
mov
out
mov
fidivs
sbb
sub
movsb
jg
cltd
jo
push
push
and
pop
movb
insl
add
inc
pushf
pop
cltd
leave
push
shll
pop
cmpsl
and
inc
dec
push
or
loopne
xlat
aad
bound
out
daa
lahf
sub
sbb
mov
add
rorb
ja
jo
cwtl
jl
fisubrl
and
bound
frstor
mov
xchg
mov
cmp
mov
dec
cmp
in
pop
sub
cmp
fstps
jnp
pop
mov
inc
push
sub
sbb
or
xchg
or
sbb
sahf
dec
xchg
pop
dec
fistps
mov
pop
filds
mov
test
cmp
adc
out
scas
divl
es
out
sbb
int
test
push
repz
xor
lcall
incl
movsb
enter
sbb
cltd
shrl
test
addb
arpl
adc
cmp
in
jbe
test
lret
into
gs
xchg
lahf
xchg
push
sbb
jns
std
sbbb
lret
jg
leave
cmp
cmp
add
addr16
push
jo
dec
xchg
sub
dec
xor
daa
ljmp
sbb
xor
jle
lea
xor
cmp
dec
sbb
jecxz
repz
notb
and
push
pop
and
movsl
gs
shrl
cli
inc
push
jl
ljmp
jnp
adc
sbb
dec
inc
push
push
lea
idivb
negl
mov
mov
arpl
repz
cmp
mov
iret
xor
adcb
push
inc
push
inc
fxch
pop
mov
mov
add
mov
rorl
inc
mov
inc
sbb
pop
push
mov
setne
sub
xchg
mov
sbb
sahf
adc
sub
daa
mov
sub
add
jecxz
daa
add
mov
test
into
add
mov
cmpsl
outsl
cs
xchg
xor
adc
xchg
sahf
test
jle
fnstcw
pushf
jae
xchg
out
int
cmpsb
jo
das
stos
sbb
fmull
test
leave
hlt
mov
hlt
stos
inc
daa
mov
push
jno
stos
pusha
mov
xchg
mov
idivl
pop
jle
mov
jg
xorl
push
out
pop
pop
add
repz
test
push
fiaddl
popa
divl
cmp
stc
movsb
and
adc
pop
fdiv
mov
push
jp
inc
sub
jnp
js
gs
push
movsl
popl
xor
rcrl
aam
shlb
in
int
sbb
push
add
lock
jmp
jo
xor
push
lods
pop
aam
adc
bound
add
or
lods
jle
mov
inc
mov
cs
jo
mov
enter
and
loop
loope
jg
out
dec
dec
out
aaa
or
cltd
mov
in
movhps
xchg
into
psrlw
cld
repnz
repnz
add
xchg
mov
aad
daa
test
fsubrl
inc
push
stos
lods
or
ljmp
adc
push
pop
iret
mov
xchg
repnz
add
mov
push
xchg
outsl
cli
cmp
xchg
bsr
adc
mov
adc
lret
push
sub
sub
pusha
pop
pop
mov
xchg
pop
lret
xchg
fildl
das
stc
mov
pusha
js
rol
cmc
mov
sub
sbb
add
mov
je
xchg
and
sbb
adc
xor
bound
sbb
mov
mov
sub
cmpsl
lcall
dec
inc
fwait
xor
sub
pop
mov
dec
addb
lahf
xor
repz
and
and
inc
fnstenv
cmp
testl
jl
mov
push
adc
dec
loop
xchg
stc
test
test
xchg
xchg
cmp
xchg
add
dec
mov
push
and
jge
xor
in
xor
jns
sbb
and
sbb
pushf
stos
sbb
sbb
stos
sub
push
add
mov
fwait
inc
and
cltd
pop
popa
and
or
pop
sub
sbb
outsb
scas
or
cmc
mov
push
je
sub
addr16
ss
aas
out
mov
sub
mov
mov
push
inc
lret
pop
mov
jmp
movsl
push
rclb
mov
jl
cli
imul
mov
sbb
xlat
test
mov
out
xchg
fs
and
mov
mov
push
dec
loop
push
cmp
jmp
std
jp
mov
out
stc
fistpl
xchg
js
add
inc
lahf
add
into
int
out
imul
sbb
sbb
jbe
sub
popa
cmpsb
test
inc
inc
in
push
cs
lcall
ret
addr16
ljmp
insb
xlat
or
inc
and
sahf
dec
push
test
jnp
sbb
mov
imul
push
bound
inc
add
es
decl
cwtl
cltd
xor
adc
mov
jmp
dec
das
push
fimuls
aaa
pop
pop
sub
rcl
adc
sbbl
aaa
and
sub
sbb
mov
int3
lock
out
subb
sbb
cmp
pop
jo
cmp
dec
sub
dec
push
mov
push
fsubs
loope
pop
jge
jnp
imul
cmp
fwait
es
adc
cwtl
jo
int
std
fnstenv
icebp
and
push
jp
sbb
cld
psubd
mov
jg
popa
les
aam
sbb
pop
scas
jl
cmp
sbb
and
sbb
xchg
cli
in
cmp
pop
push
addb
lret
pop
fnsave
and
sub
push
fwait
xor
adc
and
loop
push
mov
fstpt
mov
iret
mov
fs
push
jmp
into
stos
xchg
sub
mov
xchg
es
stc
add
and
lea
xor
arpl
inc
xchg
lahf
push
mov
int
pop
cmp
stos
or
clc
and
insl
sub
push
xchg
into
int
sbb
fcomps
add
imul
and
inc
std
repnz
xor
inc
sahf
jo
into
leave
insb
sbb
push
movsl
out
insb
mov
in
fcmovb
xchg
ljmp
ficoms
in
popa
je
pop
pop
mov
lds
mov
add
fwait
scas
xor
imul
inc
lods
mov
or
mov
into
xor
push
std
jo
movsb
nop
push
and
jecxz
insl
je
sub
or
aam
push
xor
insl
sub
aad
mov
xlat
mov
fiaddl
mov
and
jne
out
lea
inc
mov
add
xchg
xchg
addr16
es
jle
out
dec
mov
scas
and
hlt
lret
jnp
adc
cli
dec
xor
sbb
add
or
sbbl
sbb
pop
outsl
mov
arpl
aad
scas
paddsw
enter
mov
pop
jns
dec
ficomps
enter
pusha
pop
add
das
push
mov
jl
xchg
inc
mul
dec
jl
imul
dec
test
xchg
mov
in
cmp
cmc
bt
mov
test
xchg
mov
xchg
movsl
ljmp
jg
or
sti
pop
push
dec
push
mov
xchg
pop
idivb
fldl2t
adc
jl
daa
push
sub
jne
push
fisttpl
pop
mov
cmp
daa
stc
cld
add
fdiv
mov
add
pushf
ja
adc
fidivl
ror
add
mov
jae
sbb
inc
mov
movsl
addr16
lcall
gs
lahf
aas
lea
mov
pusha
and
pop
jle
shlb
pop
sbb
rcll
gs
cmpsb
push
lcall
pop
add
pop
cmpsb
mov
pop
mov
sti
bswap
jb
adc
fnstsw
addr16
sub
sbb
jle
fstpt
jecxz
jb
and
add
xchg
stos
test
cmp
js
cmp
in
jp
pop
jbe
test
xchg
cmpsl
popa
mov
in
ss
mov
ljmp
push
mov
or
test
rol
popa
mov
test
je
cmp
or
jnp
sbb
mov
or
cs
mov
cmpsl
decl
popa
mov
jge
imul
jmp
push
push
push
test
aaa
into
adc
daa
or
aaa
xchg
pop
cwtl
add
mov
popf
xor
test
mov
lahf
sub
fwait
jmp
lret
idivl
adc
int
insb
clc
lahf
xor
scas
push
enter
push
inc
pushl
dec
div
or
adc
ds
inc
test
xchg
push
hlt
movsb
cmp
inc
mov
iret
ss
loop
push
andl
les
and
cmp
jnp
dec
lods
cmp
dec
fcmovu
das
es
fsubrs
aaa
push
icebp
sti
dec
test
and
inc
call
xor
ljmp
pop
jb
mov
repz
push
out
inc
mov
jmp
stc
inc
xchg
push
cwtl
sub
push
arpl
arpl
jl
in
dec
mov
leave
lret
pop
shl
inc
pop
arpl
aas
or
loopne
fs
pop
push
cli
dec
aaa
adc
bnd
dec
decb
std
mov
stos
out
or
jae
jecxz
and
insb
insl
rcrl
pop
or
aas
stos
shrb
push
mov
xchg
popa
xchg
mov
mov
cmp
xlat
js
test
addb
cmpsl
stc
nop
fdivs
test
jecxz
mov
shll
rclb
jl
jmp
sub
inc
push
popf
push
fadds
imull
xlat
cmp
rorb
adc
dec
test
push
cmp
mov
jmp
les
les
cmpb
scas
hlt
xchg
or
ret
lds
cli
mul
lahf
inc
repnz
xor
and
cmp
mov
pop
cltd
inc
stos
aam
pop
xchg
shlb
push
mov
add
and
inc
pop
out
adcb
xlat
fstpt
xor
movsb
outsl
fsubl
sub
push
rcll
sub
stc
inc
push
lods
outsl
mov
fs
outsb
nop
pop
mov
jp
loope
and
fs
data16
or
xchg
sub
jle
iret
add
shlb
sub
into
das
mov
ret
outsb
hlt
rclb
push
stc
xlat
inc
pop
hlt
push
in
mov
imul
into
mov
sbb
lods
jg
mov
pop
or
adc
push
scas
lods
jmp
push
lcall
add
adcb
pop
mov
popa
push
cmc
rorl
sbb
xlat
iret
dec
cmp
xchg
sub
sti
aaa
adc
sub
add
icebp
adc
jbe
hlt
lcall
mov
sbb
stc
hlt
xchg
cmp
adc
pushf
push
cltd
test
push
call
or
cmp
outsb
mov
imul
sbb
mov
pop
loopne
stos
stos
sarb
dec
add
fists
inc
sbb
adc
pop
je
adc
stos
roll
ljmp
sbb
rolb
aad
aad
sbb
pop
cmp
test
rcrl
xor
xchg
and
aas
divl
jg
lret
roll
lcall
push
stos
add
shrl
je
dec
cmpsb
mov
push
aam
fwait
test
lcall
mov
mov
outsb
jl
and
xchg
or
dec
cmp
loopne
push
scas
dec
das
mov
dec
in
add
inc
int3
xchg
rorl
pop
outsl
push
pop
lcall
push
cltd
aam
xchg
lret
or
sub
not
ret
inc
cmp
add
filds
mov
into
fdivr
add
mov
cmpsb
in
mov
in
fwait
sbbb
dec
inc
jnp
dec
sub
xor
inc
jmp
push
icebp
in
js
fstps
push
mov
ja
rep
shrb
ja
iret
and
std
es
inc
push
lahf
enter
xor
dec
hlt
in
pusha
xorb
sub
and
stc
je
rorb
mov
shl
aaa
int3
dec
cli
pop
sub
adc
dec
dec
int
les
cmp
dec
in
mov
movsl
lea
rcr
cmpl
gs
inc
loope
ja
out
xor
push
mov
das
inc
dec
out
push
inc
stos
sbb
xor
imul
pop
fs
pop
lock
pop
dec
and
lds
movsl
std
cltd
test
je
hlt
xlat
stc
xchg
inc
push
mov
fstpt
data16
push
and
aaa
incb
lea
test
inc
pop
dec
rcrl
int3
dec
push
hlt
in
cs
fwait
in
test
xchg
cs
mov
insb
test
mov
pop
into
xor
adc
xchg
std
push
js
pop
ljmp
inc
fwait
xlat
adc
push
jle
mov
movsb
rolb
aad
xchg
dec
pop
sbb
nop
xor
ja
aas
and
or
or
popf
shl
mov
sti
shll
pop
xchg
pop
xor
pushf
pop
cmp
push
je
imul
jg
jne
mov
rcrl
in
push
pop
imulb
in
jo
and
jns
adc
lcall
cli
mov
shl
mov
mov
sbb
and
aad
and
lcall
orl
sub
dec
mov
js
nop
mov
clc
test
shl
sbb
repnz
pusha
lret
clc
inc
jne
enter
mov
cltd
sbb
iret
adc
repnz
ds
aas
pop
rol
cmp
jp
mov
dec
loope
jge
push
imul
add
aas
xor
test
rcrb
lods
into
jne
and
outsb
xor
insb
mov
ljmp
jno
sbb
jns
dec
mov
test
push
in
data16
sbb
in
rorb
jp,pn
mov
std
pop
sbb
int3
imul
bnd
xor
jno
cwtl
mov
jge
xchg
pop
je
popf
ret
add
int3
push
cwtl
pop
sub
push
push
fildl
fcoml
clc
mov
xlat
bts
push
lods
popf
push
or
repz
add
sub
cmpsl
outsl
xor
hlt
daa
sub
sub
outsl
int3
mov
cmpb
adc
aad
xor
sbb
push
icebp
icebp
mov
push
add
ja
adc
repz
sub
pop
lcall
loope,pt
cmp
loop
stc
adc
mov
dec
mov
jae
xchg
test
push
xlat
fmulp
hlt
jmp
cmp
aas
pushf
daa
das
jmp
and
push
mov
mov
loop
insb
cld
xor
imul
popf
sub
mov
and
ja
cmp
cmpsb
lea
xor
push
into
insb
add
pop
xchg
push
inc
push
sbb
add
cmp
aaa
loop
data16
cld
ficoml
mov
lcall
mov
sub
fisttpl
ds
add
and
mov
les
into
xor
shrl
jecxz
dec
in
or
push
lea
dec
jg
pop
insl
into
jl
xchg
mov
mov
pop
into
pop
cmp
lods
mov
stc
fdivrl
mov
loope
jl
imul
subb
lret
iret
mov
enter
push
mov
mov
incl
stc
jnp
cmpsl
mov
xchg
loope
stos
mov
jb
sar
sbb
insb
adc
lret
sti
mov
imul
imul
lcall
jecxz
mov
and
sbb
mov
dec
fildll
inc
test
mov
in
xchg
xor
dec
icebp
jg
addr16
and
mulb
jnp
popf
dec
cmp
inc
add
cli
aam
dec
and
mov
les
mov
xchg
sub
and
mov
add
adc
add
call
inc
dec
mov
mov
je
xchg
add
cmp
clc
aas
sub
lcall
push
das
into
dec
and
xor
jg
inc
outsb
mov
xor
xor
sti
movhps
enter
adc
jmp
shll
sbb
scas
pop
sub
pop
ret
xlat
bound
out
cmc
imul
inc
or
cmpsl
xlat
insl
int
imul
lds
icebp
test
popf
lods
add
out
inc
mov
aaa
or
in
aaa
push
outsb
mov
mov
push
push
inc
insl
shl
addr16
sbb
push
cmp
add
pop
inc
mov
xor
jmp
xor
push
jne
icebp
sub
xchg
lock
jb
repnz
jne
mov
div
dec
mov
outsb
adc
out
mov
push
jne
ja
data16
pop
pushf
repz
pop
aas
adc
push
mov
addr16
add
imul
inc
fsubl
jne
cmp
or
mov
es
js
add
xor
in
shr
cmp
jl
pop
mov
and
or
mov
clc
ror
adc
sti
jle
adc
icebp
inc
add
je
out
popf
fnstsw
out
popf
adc
int
cmpl
xchg
mov
push
rol
test
loope
xlat
not
xchg
push
aam
shrl
jno
pop
sub
icebp
sbb
pop
mov
inc
xchg
mov
jmp
mov
and
mov
aad
lret
add
and
sbb
daa
mov
clc
xchg
mov
xor
sbb
dec
xor
nop
in
push
and
ret
test
insb
jne
xorl
sbb
mov
push
mov
inc
bound
xchg
enter
mov
insb
loop
repnz
add
les
inc
push
pop
mov
dec
sbb
addr16
push
lret
std
in
dec
and
xor
lcall
and
and
and
jmp
shll
pop
mov
sbb
stos
andl
sbb
mov
std
cmpsl
sub
mov
ret
mov
add
addr16
stc
lahf
repnz
sar
xchg
or
pop
cmp
aam
jns
jns
les
sbb
jo
pop
mov
imul
adc
mov
addr16
jmp
je
mov
inc
loop
mov
sti
cmpsl
cs
orl
ja
cwtl
push
push
mov
ds
stc
dec
scas
xlat
pop
out
cmp
cmp
sub
dec
push
in
jl
in
movsl
sbb
push
lret
cmp
push
hlt
mov
adc
dec
loop
mov
mov
xchg
push
push
lods
sbb
lret
mov
sbb
bound
jns
push
mov
jno
scas
lret
loop
push
fcomip
pop
mov
adc
stos
mov
jl
dec
es
jne
outsb
pop
cli
ret
hlt
pop
clc
gs
inc
cli
push
sbb
std
xor
inc
lock
iret
lahf
es
ret
mov
mov
clc
pop
cmp
jno
ret
mov
mov
and
rcrl
and
fnstcw
jb
dec
push
xchg
pop
insb
and
cmpsb
mov
test
or
loopne
xorl
dec
call
adc
mov
loopne
push
xchg
cmc
sbbb
xor
cmp
das
in
in
lahf
pop
repnz
or
push
cmpsl
filds
lret
pop
or
push
push
mov
adc
jg
into
enter
out
fisubl
das
jne
lea
fidivrs
notl
pop
dec
adc
jl
addr16
lret
das
fwait
sti
xchg
faddl
jecxz
sbb
js
ljmp
outsl
ficoml
stos
call
add
hlt
xchg
cs
pop
dec
mov
addr16
push
pminub
cs
rorb
rcr
xchg
mov
repnz
stc
or
mov
out
dec
lret
inc
mov
mov
push
push
ret
add
xor
sbb
nop
push
adc
shr
pop
out
fs
movb
imull
or
mov
cmpsb
lods
xlat
orl
fdivp
inc
jp
mov
popa
and
push
fistps
push
ficoms
sub
daa
icebp
push
and
sbb
ret
mov
push
sbb
lods
and
dec
inc
xchg
and
mov
rorb
or
sti
sub
stos
sbb
sub
in
inc
cwtl
jge
dec
mov
js
mov
pop
mov
mov
add
in
addl
aaa
sub
lds
out
test
xor
hlt
addr16
mov
jo
jp
int
loop
ds
lock
jno
pop
mov
push
mov
cmp
cld
testl
jle
mov
imul
and
movsl
ljmp
adc
and
fwait
push
mov
or
mov
mov
cmpsb
data16
jns
stos
es
sbb
pop
shrl
jg
pop
pop
dec
icebp
enter
daa
pop
mov
scas
jno
gs
mov
fmul
fistps
loopne
stos
and
add
aad
testb
cmpsb
sbb
sub
dec
mov
fisubs
jo
pop
xchg
jae
notl
test
dec
xor
mov
xor
je
lock
scas
or
inc
push
mov
mov
lea
pusha
in
aaa
dec
shlb
mov
xchg
mov
ficomps
xrelease
pop
mov
push
mov
data16
cmpsl
lret
adc
sub
stos
pop
pop
cmc
cmp
sub
cs
push
jmp
pushf
arpl
and
subb
jle
mov
icebp
cmp
jne
cmp
mov
fstl
iret
mov
push
aam
je
pop
adc
adc
xchg
out
out
xor
lea
jge
loopne
jmp
stos
ret
es
add
lds
fdiv
xchg
divl
push
and
setle
cltd
pop
repnz
and
inc
mov
push
andb
test
lock
lods
int
and
movsl
repnz
in
imul
adc
addr16
inc
inc
sahf
les
fs
lret
add
lods
insb
in
into
fidivrs
les
sub
enter
or
insl
cmp
loopne
sub
hlt
dec
lods
dec
mov
ret
sbb
and
sub
add
jo
nop
subl
rclb
loope
cmpsl
add
mov
mov
sarb
mov
mov
sbb
ficomps
fnstenv
xchg
xchg
and
out
lds
lea
and
rcll
mov
sbb
aad
out
dec
jbe
ss
push
or
push
lock
mov
out
dec
push
xor
mov
cmc
dec
adc
dec
test
pop
push
mov
and
in
inc
jmp
popf
les
imul
pusha
lock
adc
cmp
out
dec
jmp
push
push
ds
xor
divl
xor
bound
stc
test
dec
sbbb
movsl
and
add
and
and
mov
and
inc
sbb
mov
jnp
sub
dec
push
sbb
out
adc
leave
pop
cmp
dec
divl
cmp
push
movsl
lods
dec
sbbb
mov
and
mov
mov
imul
mov
andl
add
fdivl
insb
jge
sbb
jg
shrb
dec
pusha
sbb
dec
add
pop
in
lods
es
test
mov
pushf
mov
push
test
vhsubps
cs
jp
lods
lods
mov
dec
cmp
lret
gs
bound
ja
xlat
lods
mov
xlat
loop
lcall
mov
addr16
hlt
rorl
add
lds
sbb
pop
ret
adc
mov
repnz
push
push
lods
jae
jbe
mov
and
mov
xor
pop
hlt
fidivs
pop
sub
jl
out
dec
dec
jg
fwait
sti
xchg
mov
jne
sbb
cwtl
dec
dec
mov
pop
test
add
sub
fwait
stos
mov
cwtl
das
cmp
sub
inc
in
and
movsb
ss
jmp
in
aaa
gs
xor
mov
addb
cmp
mov
loope
inc
adc
jo
ljmp
or
cwtl
pause
pop
dec
adc
cmp
pop
jmp
icebp
iret
jmp
pop
pop
enter
and
jle
pop
mov
fnstenv
mov
push
and
divb
inc
bound
adc
arpl
adc
sbb
pop
cmc
cld
mov
xchg
xor
and
sub
faddl
mov
dec
adc
jb
mov
push
int3
cltd
pusha
test
test
pop
fisubrs
pop
ret
lods
movsl
mov
mov
call
jne
test
rclb
out
cmp
cli
and
into
push
rol
jno
add
and
sbb
test
shr
sub
sbb
pop
repnz
and
xchg
xor
adc
repnz
sub
aad
xchg
das
cmp
mov
add
mov
mov
jb
push
mov
dec
push
push
sbb
inc
cs
xorb
ljmp
jne
lods
pop
fiadds
out
push
out
dec
dec
pop
hlt
jns
ret
lock
cmpsl
xchg
cmp
std
push
cmp
ja
shll
adc
sub
add
das
mov
lcall
dec
or
call
xchg
push
outsl
push
dec
jle
jp
sub
es
dec
cmp
and
xchg
popa
inc
adc
mov
into
fldl
fstpt
and
inc
call
or
sbb
pop
cs
pop
pop
shlb
mov
arpl
lret
loop
andl
xchg
inc
std
shl
xchg
loopne
stos
sub
inc
movsbl
xor
or
inc
pushf
pop
ja
out
in
mov
cwtl
fisubrl
jne
shl
sub
cmp
dec
xorl
ficomps
out
popa
outsb
loope
cltd
insl
std
push
cwtl
jl
in
addl
xor
jle
fbld
andb
hlt
lcall
pop
or
mov
and
fmull
pop
xchg
sahf
push
iret
adc
lods
cwtl
sar
sub
movsl
sbb
add
xchg
mov
push
jecxz
test
mov
rcrb
aad
cmp
subb
aaa
cmp
cmp
add
xor
mov
lahf
inc
mov
fimuls
pop
test
mov
ja
jb
mov
std
clc
cli
xchg
cmp
sub
fisttpll
mov
xchg
xchg
push
adc
in
ficoms
fwait
imul
in
dec
loop
inc
xchg
lds
out
pop
dec
cmp
arpl
cmpsl
je
xchg
xor
arpl
pop
in
sahf
xor
pop
or
aas
outsl
sbb
jne
adc
inc
jge
and
push
push
push
and
outsl
shll
pusha
mov
fcoml
xchg
sub
sarl
dec
dec
leave
nop
test
jle
and
dec
lods
scas
jb
movsl
mov
sarb
mov
add
test
adc
js
fucomi
mov
cmpsl
sbb
aaa
popf
dec
mov
inc
fwait
xor
pop
outsb
xor
mov
out
sub
frstor
adc
andb
mov
dec
add
addr16
sbb
lret
and
xor
repnz
rcrb
icebp
or
fnstsw
adc
add
loopne
jmp
sbb
inc
clc
roll
mov
movsb
pop
xor
hlt
int3
arpl
sbb
dec
jmp
jle
stc
repnz
stc
je
pop
gs
call
nop
out
mov
jo
jno
insl
add
int3
pop
inc
scas
mov
je
loop
sbb
movsb
jecxz
divl
sub
ret
jnp
in
ret
sbb
out
jb
jne
fildl
out
mov
or
dec
add
push
cwtl
das
mov
aad
and
jae
mov
ficoms
add
pop
ss
jno,pt
add
mov
out
push
loope
xchg
xchg
add
sbb
sub
xchg
jo
mov
out
test
jo
lods
lods
and
shll
or
xor
sbb
mov
sti
loope
mov
setp
pop
movsl
das
push
sub
in
js
sub
faddl
sarl
js
jnp
jne
or
mov
dec
cld
out
mov
nop
out
xchg
outsl
add
into
xchg
mov
les
es
xchg
inc
sub
pop
mov
dec
out
dec
push
ss
in
cmpsl
jecxz
xchg
rorl
mov
mov
cmp
sbb
nop
shr
push
adc
int3
mov
push
or
fldt
gs
xchg
dec
jne
repz
jl
cs
std
push
dec
dec
lcall
paddw
inc
movsb
aad
cmp
rcrb
add
imul
push
push
inc
outsl
pop
pop
mov
nop
das
cwtl
dec
push
insl
sbb
mov
dec
das
imul
sti
sub
lods
sub
mov
push
out
add
cmp
dec
jge
and
mov
cli
repnz
jmp
int
data16
xor
icebp
rcll
push
sbbb
mul
test
fucom
mov
mov
xlat
cmp
add
pop
cmpsb
mov
pop
mov
outsb
testl
mov
inc
mov
fdivl
addr16
lret
or
mov
pop
adc
jns
out
xorb
nop
adc
pusha
inc
dec
inc
jecxz
jge
cmpsb
cmp
mov
imul
rcrl
test
iret
mov
mov
outsl
jmp
sbb
or
pop
cmp
dec
cmp
mov
sahf
dec
xchg
inc
jno
and
cmp
mov
ss
xchg
rorb
adc
shll
sarl
loopne
pop
iret
fimuls
lret
stc
pop
xchg
mov
xchg
adc
aam
xchg
cltd
in
call
and
and
pop
jp
cmp
ljmp
adc
imul
or
xchg
pop
jl
mov
sub
sbb
outsl
xor
mov
dec
add
jmp
fmul
mov
std
mov
out
push
sub
mov
aad
aas
mov
jge
in
mov
xor
push
cmp
cmp
xchg
adc
or
clc
fbld
cmp
movsl
push
arpl
inc
pop
leave
xorb
in
xchg
dec
fistpl
xchg
fisubrs
mov
jp
dec
lods
push
aaa
push
insb
test
movsb
repnz
mov
movsl
ret
movsb
mov
inc
nop
cmpsl
out
push
lret
push
aam
jbe
mov
pop
repz
iret
aad
add
sbb
xor
push
mov
sbb
sahf
add
xchg
outsl
loopne
push
fisttpl
xchg
cld
scas
ret
pop
mull
sub
out
push
push
pop
xor
or
ret
push
ds
jo
into
and
fdivp
xchg
mov
mul
add
in
stos
inc
sbb
pmaddwd
in
add
cli
ds
pop
loope
out
lds
add
mov
jg
pop
and
mov
xchg
add
push
adc
jmp
sbb
jbe
sub
sbb
push
xchg
stc
sbb
dec
xor
ljmp
int
mov
adc
popa
mov
xchg
add
negb
xor
call
sti
sar
repz
cmp
xor
andl
xor
flds
cmpl
movb
jne
repnz
add
xor
mov
bound
pop
fistl
xchg
dec
rol
idivb
divl
lods
inc
int
shll
scas
test
repnz
push
cmp
mov
adc
push
fldenv
or
dec
pop
jmp
or
rcll
or
mov
jae
xorl
sub
rcrb
or
ret
repz
adc
nop
imul
jp
cmp
mov
scas
inc
or
mov
cmp
js
xchg
adc
les
lret
rol
cmp
xor
inc
pop
inc
fwait
push
int
jo
je
or
mov
leave
xor
adc
push
lods
cmp
cmp
cltd
push
rorl
out
dec
dec
cmpsl
mov
mov
jecxz
fwait
push
ljmp
insl
rclb
into
xor
dec
add
dec
fdivl
xor
mov
aam
cmp
aaa
stc
mov
xchg
mov
scas
out
push
pushf
pop
les
xor
nop
es
loop
mov
inc
cli
int
movsb
mov
test
push
cmpsl
adc
lret
or
int3
fimull
add
repnz
and
or
cltd
aad
mov
sahf
cmp
cld
adc
outsl
jnp
pop
pop
sub
jle
icebp
scas
shlb
sub
pop
aaa
mov
ds
shll
xor
call
scas
xchg
arpl
insb
imul
sub
cmc
xor
sub
aaa
int3
mov
and
jp
pop
cld
mov
xchg
xor
jle
sar
nop
dec
and
sbb
shll
shrb
popf
xchg
loope
and
mov
leave
daa
mov
mov
and
orl
pop
ficomps
loope
sub
mov
push
int
aaa
out
js
insb
mov
pop
lahf
push
jp
push
mov
aam
ds
daa
enter
mov
lea
aas
adc
jl
inc
inc
movsb
andb
adc
xchg
jnp
into
mov
push
cmp
mov
mov
out
ret
rep
mov
add
push
shll
mov
shlb
push
and
leave
push
dec
fxch
jbe
or
and
scas
lea
push
cmp
sbb
jb
pop
movsb
sub
shrl
fimuls
dec
dec
fwait
or
xor
into
fs
adc
dec
pop
stos
jp
repnz
inc
jns
mov
sub
lods
insb
aad
and
ret
jne
pushf
sahf
movl
arpl
mov
addr16
outsb
jl
sbb
xor
cwtl
add
mov
aad
add
mov
imul
inc
in
pop
repnz
cmp
jecxz
mov
call
ds
repnz
adc
sub
add
mov
lcall
adc
cmp
mov
mov
ret
jle
vcvttss2si
loope
shrl
dec
fiaddl
lcall
sub
outsl
inc
sbb
mov
or
mov
jno
mov
mov
test
jge
int3
sub
dec
push
xchg
jmp
data16
dec
mov
std
nop
cmp
pop
sbb
imul
mov
add
loop
inc
sbb
add
or
pushf
jg
push
push
loope
cltd
loop
mov
jge
test
jo
arpl
sub
dec
test
bnd
lret
jbe
xchg
dec
int3
push
push
jmp
daa
jo
rcll
std
add
orb
test
inc
cmpsl
adc
push
icebp
sbb
jg
cmpsl
fwait
adc
xchg
add
test
sub
and
xchg
mov
xlat
jbe
fcmovbe
je
xchg
jmp
daa
test
aad
and
shl
movsb
or
sbb
push
out
mov
mov
test
sub
and
repnz
dec
cmp
pop
cmp
push
dec
pop
or
push
cmp
js
addr16
push
lret
sbb
mov
jnp
int
cmc
fwait
mov
ficompl
arpl
fs
mov
xor
lock
add
add
test
stc
shl
stc
pop
sahf
inc
sub
hlt
scas
pushf
scas
subb
add
mov
mov
dec
in
cld
push
or
dec
insb
fildll
movsl
mov
jg
fxch
or
push
pop
dec
loop
mov
cltd
std
xchg
adc
or
or
pusha
jno
and
cld
jp
mov
cwtl
popa
clc
lret
hlt
sub
jmp
mov
dec
add
in
stos
cmp
test
insl
test
cmc
mov
dec
inc
imul
lods
ja
adc
and
lds
ja
jecxz
jecxz
xchg
iret
adc
pop
std
dec
inc
sbb
mov
jnp
cmc
sahf
movsb
push
sub
push
cs
xor
xchg
int3
mov
andl
jp
push
jbe
ret
mov
mov
ljmp
dec
push
shlb
lcall
aaa
or
call
adc
mov
add
outsl
jge
mov
frstor
aaa
ss
add
mov
mov
movsl
sti
repnz
adc
jno
push
push
xchg
add
mov
jo
inc
push
add
push
popa
xorl
cmp
mov
push
add
jl
sbb
pop
jb
push
int
dec
xor
lcall
repnz
frstor
cmp
cmpb
enter
jg
dec
fisttps
enter
fwait
mov
out
mov
call
dec
adc
cmp
push
mov
stos
popf
outsb
nop
mov
or
aaa
lcall
int
ret
stos
push
out
hlt
aam
add
jg
imul
insb
sub
mov
jnp
lods
mov
iret
aas
into
int
mov
inc
icebp
lods
adc
mov
sbb
sub
lods
dec
sahf
icebp
sahf
add
into
jno
inc
sarl
dec
mov
in
push
mov
xor
mov
adc
xor
test
sbb
adc
mov
dec
add
sub
fwait
inc
xor
dec
adc
xor
pop
out
jecxz
mov
mov
movsl
lds
sub
lahf
adc
push
dec
cmpsl
out
call
dec
icebp
scas
mov
data16
jae
lock
stos
jge
sub
loopne
aaa
jmp
add
add
inc
arpl
lods
imul
aas
fwait
push
scas
psllw
lds
jns
or
jge
xchg
pop
and
inc
into
or
push
and
and
rcrl
add
mov
movsl
xor
jmp
cwtl
hlt
jle
insl
aam
xlat
inc
lea
inc
push
add
scas
sub
stos
xor
imul
mov
and
fcomip
push
xchg
push
jb
enter
or
leave
test
jnp
sbb
adc
mov
out
adc
mov
sub
mov
fstl
repz
out
lea
pop
sbb
push
add
jge
and
cmpps
sarl
shl
mov
ja
jge
stc
dec
test
out
cmpsl
pop
pop
ds
cmp
xor
repnz
aas
movsb
cmp
pop
daa
movl
jb
mov
jge
jle
outsl
push
mov
mov
aad
out
test
enter
outsl
int3
bound
out
cmc
mov
loope
in
inc
add
sbb
xor
sub
roll
cmc
or
push
mov
cmpsb
les
loopne
mov
fsubrs
jnp
pop
and
stc
das
jecxz
mov
xchg
mov
movsl
sbb
pop
mov
and
xchg
adc
call
mov
cmc
xchg
leave
insl
inc
loope
inc
in
or
sti
mov
mov
adc
inc
push
pop
je
adc
dec
sub
jbe
cmp
fcomi
cmpsb
test
addb
pop
int
push
hlt
loop
jecxz
lods
push
dec
cmpsl
lcall
jle
movb
es
push
es
xchg
mov
lcall
shr
mov
cs
outsl
push
or
rcr
mov
in
test
scas
inc
push
inc
clc
rcrl
fnstcw
xor
jl
adcl
dec
nop
scas
adc
insl
mov
addr16
dec
sub
xor
jecxz
mov
les
jnp
pushf
nop
mov
and
loop
sub
cmp
mov
test
popa
adcl
pop
hlt
inc
and
addr16
cmp
arpl
mov
lret
xlat
test
mov
shrb
rcrl
icebp
dec
fbstp
add
aaa
cmc
add
int
mov
mov
sub
lods
mov
scas
push
test
mov
push
pop
fisubs
fsubrs
aas
xchg
adc
cmpsl
xor
xchg
outsl
push
sahf
push
enter
lods
ljmp
xchg
mov
rcl
mov
jnp
scas
aam
bound
ror
mov
xchg
das
cmp
mov
arpl
shr
mov
sub
xor
mov
ss
add
jecxz
xor
sbb
dec
dec
dec
push
xlat
sub
inc
pop
dec
out
test
dec
in
pop
or
push
inc
cmc
fidivrl
sbb
mov
push
cmp
ljmp
test
or
sub
movsb
repnz
jno
stos
xchg
and
sbb
stos
cmp
outsb
testl
push
aam
das
iret
pop
aam
dec
xor
shr
fidivl
repz
fsts
or
cmp
movsb
je
inc
fldt
push
jb
sub
mov
xor
inc
jecxz
inc
add
jb
dec
loopne
xchg
xchg
mov
js
or
scas
adcb
stos
imul
mov
xor
jp
pop
lods
xlat
xchg
xor
out
xchg
movsb
cmp
mov
cmp
je
xchg
mov
adc
jl
scas
mulb
jle
pop
pushf
or
decb
jg
sbb
lahf
hlt
push
push
push
sbb
dec
nop
rorl
scas
inc
pushf
cmpl
push
testb
cmpsb
icebp
cmc
dec
mov
xor
and
test
outsb
sbb
pop
nop
pop
ds
outsb
dec
in
pop
repz
call
or
int3
jp
decb
cwtl
das
ficoml
push
mov
or
mov
pop
xchg
jp
mov
lock
cld
cmp
pop
dec
rol
lcall
xchg
int
mov
mov
sbbb
in
arpl
cltd
je
int
jnp
xor
int3
dec
mov
inc
sub
pop
pusha
add
mov
loopne
inc
cmpsl
rolb
popa
negb
mov
sub
push
jbe
sbb
xchg
sahf
sbb
insb
sbb
faddl
mov
insb
mov
mov
pop
jle
jb
jmp
cmpl
shl
push
mov
and
addl
xor
jnp
icebp
sub
jb
scas
xchg
mov
mul
sub
mov
fstpl
shr
add
inc
sbb
orl
ss
insb
leave
pop
inc
inc
lods
mov
or
and
adc
push
xchg
cmc
push
dec
in
pop
ja,pt
push
test
pop
adc
sbb
or
mov
popl
and
ds
mov
pop
pop
xchg
in
lcall
aam
das
sbb
cs
outsl
push
pop
mov
jge
add
inc
sub
test
xchg
loopne
dec
dec
cmpsb
mov
inc
test
dec
cmc
mov
lldt
cmp
sbbl
out
mov
adc
sbb
push
cmp
rcr
in
fwait
inc
jl
cmp
or
sti
cld
pop
adcl
sub
into
xor
or
rcrb
push
mov
and
inc
stc
lea
add
mov
xchg
pop
inc
sti
and
sbb
inc
popa
rorl
inc
fsubrl
push
push
fnstsw
mov
xchg
ds
xchg
or
dec
outsb
gs
cmp
test
loopne
cmp
jb
inc
sub
pop
addb
lods
lock
lcall
rorl
jne
mov
in
sahf
or
cmpsb
je
sti
mov
sbb
sub
cwtl
das
js
outsl
pop
adc
adc
jb
fadd
or
mov
xor
pop
xor
inc
adc
popf
repnz
iret
jne
int
fmull
in
mov
sub
std
ljmp
lock
sub
call
xor
and
pop
push
pop
out
cmpl
inc
fs
xchg
jmp
ret
cwtl
ja
jns
aas
stos
xchg
jmp
adc
inc
dec
scas
and
jg
fsubrl
jnp
lds
xchg
jge
lcall
cmp
popa
insl
testb
adcl
cs
ret
mov
mov
in
jmp
fstl
adc
mov
enter
xlat
das
scas
inc
and
std
inc
add
xchg
sub
sub
movsl
daa
sub
out
cmp
mov
mov
mov
cmpsl
loop
andl
jb
mov
jl
ds
pop
fiaddl
sbb
ret
and
in
sub
xor
pusha
cmp
shl
inc
nop
mov
sub
nop
loopne
push
popf
in
into
stc
andb
sub
jnp
sahf
out
xchg
jmp
std
pushf
hlt
into
hlt
or
jae
cmp
insb
out
push
add
pop
notl
shrl
out
sti
add
push
xchg
rclb
mov
das
adc
out
dec
call
adc
fsubrs
cmp
lcall
in
xchg
sub
push
js
and
push
jle
push
shlb
mov
mov
lret
fs
dec
loop
xor
out
sbb
mov
ret
out
cmpsl
xor
cmp
xor
outsl
sbb
fs
ss
dec
pop
xchg
mov
fwait
mov
pop
cmpsb
xchg
mov
gs
outsb
sbb
out
fs
shl
pusha
xchg
sub
popa
mov
int3
into
das
pop
jl
and
mov
sbb
js
jnp
mov
fs
clc
jle,pn
mov
daa
nop
jl,pn
add
mov
fs
mov
lahf
xor
gs
xchg
sub
pop
xchg
sub
dec
cli
cmp
sub
movsl
mov
add
push
shlb
popf
mov
dec
mov
loope
inc
adc
push
rcrl
inc
adc
into
jne
xor
rolb
sub
xchg
shr
ficomps
pop
cmpsb
mov
or
jbe
repz
cld
sub
jnp
add
dec
adc
fildll
fadds
dec
cld
leave
push
cwtl
cli
sbb
push
jmp
add
ljmp
cltd
or
pusha
cmp
jp
cmp
add
les
icebp
and
push
xor
xchg
data16
shrb
jno
or
adc
mov
mov
push
pop
les
mov
stc
cmp
mov
or
xor
sub
xchg
movb
pop
mov
test
scas
daa
or
scas
mov
bndstx
scas
int
pop
add
rcrl
fisubs
cmpsl
and
push
mov
sub
adc
jmp
lds
pop
cmp
insb
xchg
iret
mov
sub
xchg
sub
sahf
inc
in
xchg
fisubl
lret
test
mov
xor
inc
push
adc
and
mov
lcall
cmp
xor
ja
xchg
sub
pop
decb
mov
js
rcl
xchg
mov
jne
fucomip
jg
dec
cmp
mov
ret
outsb
jbe
xor
push
test
xchg
sbb
test
cmp
int
mov
or
test
mov
mov
shll
dec
cld
arpl
lods
jmp
movb
ficoml
xchg
push
jbe
mov
xor
mov
leave
mov
jmp
loope
xor
mov
push
sub
aam
mov
daa
jge
or
pusha
inc
sti
inc
scas
data16
lods
out
pop
ljmp
pop
inc
lret
iret
xchg
std
jp
lret
ret
cmp
gs
cmp
dec
mov
jmp
fildl
or
sti
popf
jno
dec
iret
arpl
sbb
cmp
ret
ss
inc
inc
sarl
jmp
fimull
in
push
lea
sbb
data16
push
jnp
pop
in
stos
test
fisttpll
sbb
push
xor
push
lret
cmpsl
pop
inc
push
out
xor
and
inc
xchg
xor
push
repz
push
in
sti
aas
sub
xchg
push
popf
adcl
test
xor
sbb
enter
imulb
int3
cmp
filds
loop
mov
jbe
loop
push
cwtl
adc
sar
pop
fwait
xor
mov
nop
in
hlt
lods
repz
pop
lahf
daa
pop
push
movsl
and
add
and
in
test
jbe
cld
xor
mov
mov
call
orb
jmp
sahf
sbb
add
ds
jns
xor
popa
outsb
sub
push
test
sub
push
fdiv
or
fsub
cmp
xor
popa
in
sbb
push
xor
lcall
pop
iret
add
push
inc
mov
xlat
sub
xchg
les
push
jle
push
xor
fcmovne
inc
xor
push
lret
shlb
push
mov
inc
mov
mov
xlat
mov
aad
push
outsl
fnstsw
clc
cmc
lods
stos
jle
je
scas
inc
das
push
jb
addr16
sbb
scas
cltd
stos
fisttpll
xchg
decl
aad
or
dec
int
mov
pusha
aas
out
andb
shlb
sarl
add
adc
stos
adc
ret
sub
mov
mov
fstpl
and
stos
push
notb
popf
or
lods
xchg
lock
add
roll
push
ret
je
cmp
fisttpl
pop
das
add
pushf
js
xor
jge
imul
data16
mov
pop
add
sub
and
iret
jp
aas
stc
mov
cmp
mov
dec
jb
mov
test
clc
pop
inc
or
xor
and
lahf
inc
pusha
andl
stos
jb,pt
out
inc
js
insl
in
mov
nop
add
inc
xor
loopne
inc
xchg
aad
jae
sub
mov
mov
pop
add
jbe
dec
and
repnz
fcomps
pop
outsl
mov
rcr
rorl
add
shl
cmc
outsb
fnstcw
adc
das
repnz
imul
mov
in
push
dec
repz
push
imul
sbb
rcrb
mov
popa
jg
xchg
in
add
pop
leave
mov
fisubrl
xchg
jbe
mov
bswap
mov
pushf
dec
cmp
dec
and
inc
pop
fsubrs
out
rcrl
into
or
mov
jno
inc
and
fildl
and
mov
lock
test
movsl
ficompl
or
xor
icebp
stos
mov
push
adc
xchg
loope
push
fsubl
into
xor
mov
push
xor
mov
cmc
call
loop
inc
pop
addr16
inc
sub
xchg
sahf
stos
arpl
repz
test
push
sbb
int3
mov
shll
fbstp
imul
fnstenv
ja
push
push
push
push
fcoml
jg
fwait
in
mov
cmpsl
xor
push
mov
ret
jae
popl
and
ret
xchg
cld
lock
lock
std
addl
test
data16
movsb
jp
shr
lds
jnp
pop
fsubs
add
and
xchg
gs
add
jl
popa
scas
and
or
out
out
rep
lods
das
jno
jnp
sbb
repnz
pop
mov
inc
rolb
lea
lods
fs
scas
push
fildll
fdivl
or
arpl
sub
test
daa
cmp
in
das
out
adc
jp
and
pushl
orl
add
nop
cmp
add
test
inc
mov
or
or
js
cld
outsb
push
xor
pusha
sti
lcall
mov
arpl
fmul
gs
xor
arpl
jae
adc
mov
cld
pusha
popf
cmc
adc
addl
mov
mov
hlt
jb
js
test
aad
in
mov
inc
add
xor
or
rorl
mov
push
out
test
pop
insb
into
cmp
inc
jge
add
xchg
mov
mov
push
jmp
push
mov
and
nop
push
aam
xor
shll
mov
iret
loop
push
xchg
mov
and
movsl
jmp
sub
sahf
jge
jp
sbbb
sbb
add
fdivrs
push
and
cmpsb
add
fldcw
loopne
popa
gs
push
lods
shll
and
cmpsb
fsubs
imul
inc
mov
sbb
mov
or
fcom
repz
dec
add
jl
xor
lea
inc
xchg
fsubs
sbb
add
daa
loopne
jg
pop
jnp
movsb
ja
pushf
mov
xor
jle
mov
aad
popa
pop
or
movsl
movsb
sub
js
mov
add
dec
daa
cmpb
xchg
mov
in
cmp
xchg
shlb
xor
lock
mov
mov
fdivs
lods
dec
aam
in
aam
push
mov
mov
mov
pop
dec
push
jno
and
mov
shl
psadbw
adc
add
cli
sub
aaa
jmp
adc
mov
test
mov
push
lret
ficoms
jmp
push
out
sti
xchg
xor
push
lret
std
pushf
dec
ret
or
sbb
fimuls
js
dec
loopne
lcall
add
inc
test
inc
jecxz
xor
inc
inc
shll
dec
movsb
imull
xchg
les
push
xor
mov
push
dec
mov
mov
jle
into
out
in
xor
loopne
idivl
in
je
push
pop
addr16
pop
push
ficoms
loope
popa
adc
arpl
mov
into
or
jmp
push
dec
xchg
popf
int
pop
rorb
sbb
iret
fstl
sbb
cmp
mov
add
and
or
out
daa
mov
xor
pop
ds
push
icebp
sbbl
outsl
loopne
pop
lods
inc
pop
call
stc
mov
mov
int
js
loop
ret
cmpb
test
popf
or
testb
stos
repz
daa
stos
and
push
sbb
stc
sbb
xor
pop
pop
ja
pop
cmpb
jne
out
stc
mov
cmpsl
inc
jmp
mov
jle
mov
push
or
dec
stc
std
pop
imul
and
pop
xchg
mov
out
aad
fcmove
js
pop
icebp
push
movsb
sub
pop
mov
or
data16
dec
adc
jge
mov
inc
pop
pop
lret
push
fldt
xchg
jg
fdivr
scas
jl
lock
jb
xchg
xor
ret
scas
pop
sbb
cs
push
xor
shlb
inc
std
fs
add
jo
sbb
xchg
jns
mov
add
mov
ljmp
sbb
outsb
cmpsb
jmp
or
and
popf
push
xchg
dec
push
dec
popf
or
sbb
sub
fnsave
dec
or
pop
int
cltd
adc
fs
cmpb
push
xchg
in
mov
repz
in
rcrl
xor
lock
jbe
out
jnp
xchg
dec
xchg
daa
lcall
sub
add
pusha
pop
cli
mov
jecxz
stos
xchg
or
lea
ret
andb
jno
dec
negb
movb
fdivl
mov
cmp
cld
outsl
jl
jecxz
xchg
pop
roll
lret
cmp
dec
push
mov
xor
sub
sarb
mov
js
jne
or
mov
push
pop
adc
pop
divb
fidivrs
lock
loop
add
jp
adc
pop
push
add
mov
sbb
outsl
pop
stos
sbb
mov
lock
dec
fildl
fisubl
mov
test
dec
pop
cli
mov
push
xlat
inc
xor
shrb
std
mov
cli
mov
dec
rcrl
xor
popw
fsts
inc
xchg
cmc
mov
sbb
push
mov
in
lods
inc
mov
andnps
inc
dec
out
imul
out
movb
and
and
in
mov
lock
push
iret
test
imul
or
jno
or
in
dec
loop
mov
test
stc
into
sub
mov
pop
sbb
add
inc
push
cltd
loopne
cmpsl
ret
add
and
cmpsb
mov
inc
sarl
push
pop
mov
stos
shll
lods
fidivl
ror
or
inc
movsb
stc
sbb
loop
ficomps
or
jl
jp
pop
out
cmp
jo
push
xor
int
pop
dec
mov
push
ljmp
inc
sti
lret
mov
decb
rorb
pop
insb
out
stos
js
jno
pop
out
imul
addr16
orl
fwait
push
sub
jne
mov
shrb
scas
xchg
inc
xchg
insl
outsb
or
cmp
xchg
imul
icebp
mov
rcrl
arpl
dec
xchg
push
je
addl
sub
sbb
jb
xor
jae
xchg
push
nop
shlb
add
sbb
lods
test
mov
pop
pop
stos
and
mov
add
js
sarb
push
loope
mov
push
add
xlat
outsb
sbb
cld
mov
sahf
cmc
jmp
mov
xchg
or
jecxz
leave
mov
out
hlt
in
inc
sarl
xlat
nop
shl
pop
ss
pop
push
push
in
cmp
mov
clc
sbb
fnstcw
enter
jp
mov
loopne
jp
cmp
add
dec
rep
xor
fpatan
aaa
and
bound
sti
jb
pop
jb
test
test
outsb
add
test
inc
sbb
dec
neg
test
mov
repz
mov
inc
sti
shlb
push
mov
cli
mov
in
mov
pop
adc
jmp
mov
imul
mov
pop
imul
enter
push
jno
or
lods
out
inc
stos
xchg
int3
sub
inc
ljmp
lcall
stos
out
mov
outsb
cmp
jmp
rcr
jmp
push
mov
mov
repnz
xor
dec
and
lea
out
sbb
dec
popf
pop
ret
add
mov
add
dec
dec
jb
pop
test
and
addr16
dec
pop
or
es
movsl
mov
sti
mov
out
xor
cmp
mov
or
inc
mov
and
lret
jae
cmpsl
xchg
mov
and
les
push
into
lea
mov
sahf
push
mov
loopne
jl
pushf
arpl
and
fidivrs
pop
fdivp
xchg
pop
jnp
call
dec
sti
sahf
sub
mov
add
and
xor
fldl
xor
jg
sub
imul
adc
mov
rcrb
clc
xor
in
ds
repnz
repz
xor
fwait
xor
jne
jp
das
movsl
add
es
xlat
mov
mov
lods
inc
jno
mov
push
loope
jecxz
and
daa
cmp
pop
je
push
mov
dec
pop
das
lds
mov
cmc
mov
inc
push
fcomp
cmp
std
std
into
das
jo
lcall
lcall
punpckhbw
push
sti
jge
popf
icebp
or
sub
jmp
ret
push
out
iret
addr16
inc
stos
inc
cmp
pop
ficompl
dec
adc
jp
mov
sbb
daa
cmp
xchg
stos
pop
pop
fcom
shlb
xchg
lahf
stc
mov
mov
mov
xchg
add
xor
test
jbe
mov
cmpsb
fbstp
dec
jge
inc
sub
outsb
out
xchg
testb
movsl
aam
jne
mov
xchg
lods
inc
jmp
jecxz
pop
in
out
test
jb
inc
out
adc
or
outsb
pop
xrelease
mov
les
adc
sbb
xor
out
xchg
ds
pop
adc
lods
in
xor
mov
mov
adc
or
ret
or
mov
xchg
mov
or
push
add
xchg
pop
movsb
arpl
aaa
inc
push
cmp
mov
insl
in
inc
ficompl
insl
pushf
cli
ret
bound
stos
cltd
leave
add
sti
mov
mov
jb
aam
mov
cmp
push
dec
mov
dec
mov
scas
or
mov
fstps
sbb
pushf
out
cmp
and
sbb
in
fbld
sarl
insb
pop
mov
mov
sub
lcall
sub
jge
push
adc
and
pop
xor
mov
push
in
cld
push
push
push
icebp
sbb
incl
mov
mov
add
and
xor
pop
xor
adc
pop
out
nop
sub
popw
mov
cmpsb
cmpsb
int
mov
decl
insl
jge
sub
push
sahf
cmp
out
int3
push
cmp
out
cmpb
addl
sarb
xchg
scas
stc
sbb
push
mov
iret
std
sub
iret
xchg
clc
push
inc
dec
or
je
lods
or
out
sbbl
dec
data16
mov
movups
xchg
sub
sbb
mov
adc
jbe
and
iret
xchg
decl
fistpll
clc
or
mov
mov
inc
xchg
popa
arpl
jecxz
mov
aam
adc
inc
pop
fists
adc
outsb
xor
xchg
aas
jle
or
adc
sbb
adc
jno
pushf
lret
pop
sbb
ficompl
ss
jl
adc
loope
jmp
cs
rorb
jle
int3
add
cmp
ret
mov
dec
arpl
test
int3
fsubl
aad
adc
xor
or
call
push
nop
sub
jnp
or
sti
mov
cmp
cltd
pushl
mov
add
lock
dec
ja
test
or
iret
mov
ss
add
add
dec
mov
xchg
rcl
stos
add
mov
aam
mov
add
dec
mov
shrb
cld
pop
mov
xor
mov
dec
in
inc
add
jge
pop
f2xm1
cmp
js
fs
imul
or
stc
cmp
sahf
xchg
pop
rorb
cmp
sahf
arpl
into
pusha
imul
pop
sarl
push
in
push
mov
mov
jae
out
or
adcb
ror
cmp
fidivrs
push
mov
fsub
jnp
add
lret
push
and
cmc
xchg
je
shll
mov
fcom
das
scas
push
dec
cmc
xor
cmp
jp
sarb
jno
sbb
in
adc
outsl
daa
inc
cmp
cmp
in
sub
sub
jp
jo
in
dec
in
cwtl
jnp
cltd
push
mov
cmpsb
inc
test
pop
les
dec
test
outsl
mov
mov
mov
lock
xchg
outsl
mov
leave
in
mov
fwait
sahf
and
ds
data16
and
in
mov
pusha
mov
inc
test
cld
pusha
mov
sbb
addl
jns
js
fistps
out
cmp
pop
push
jmp
mov
scas
lods
mov
fdivrl
lret
lret
cmc
cmc
dec
mov
aas
mov
mov
add
inc
xchg
and
insb
adc
or
jg
mov
test
and
cmpsb
mov
sbb
cmp
adc
aaa
cmp
sbb
jnp
adc
mov
stos
es
mov
cmp
push
aam
sub
insl
clc
sbb
jo
js
shlb
push
sbb
xor
test
push
sarb
jb
cmp
test
xor
cli
xchg
mov
mov
mov
pop
nop
and
push
aas
lret
bound
or
lahf
xor
xchg
mov
ret
xor
stc
mov
mov
jb
jae
js
cmpsb
mov
push
mov
es
into
xchg
xor
adc
mov
cmp
nop
fadds
stos
jecxz
bound
je
in
or
imul
cmpsb
test
aad
fs
out
mov
sub
adc
mov
inc
ds
gs
jns
inc
push
dec
jnp
fisubrs
xor
cmp
pop
repz
repnz
jge
sub
repz
js
mov
mov
add
into
test
mov
cwtl
inc
or
pop
movsb
ljmp
leave
pop
shr
jg
movsb
and
sbb
mov
mov
scas
fiadds
movups
int
negl
cwtl
popa
out
inc
mov
sbbl
cmpsb
loopne
pop
loope
push
dec
in
pop
data16
lret
jge
bound
jae
mov
fs
xor
add
cmp
dec
mov
mov
gs
mov
std
aas
pop
roll
push
fisubl
pop
subb
pop
xchg
cs
pop
popf
test
xchg
jge
mov
enter
cmc
test
pop
mov
lret
in
or
xor
sbb
bound
lods
jmp
js
and
mov
xchg
dec
jecxz
out
jle
imul
sbb
jae
mov
mov
rcrl
mov
imull
loop
cmp
out
rcr
fcmovne
inc
jl
aad
jge
sub
rol
repz
mov
xchg
push
mov
jns
push
fildl
sbb
gs
dec
inc
or
push
imul
fnstcw
dec
lcall
in
repnz
dec
mov
dec
sbb
dec
xchg
cmp
mov
dec
or
push
inc
inc
add
inc
fcom
pusha
jnp
mov
push
out
xor
leave
xchg
adc
dec
xor
inc
xor
sub
sbb
and
sti
lret
mov
inc
loop
imul
push
cmp
lock
ds
out
sbbl
out
mov
pop
or
mov
jg
pop
lock
imul
jno
mov
into
nop
xchg
andl
cld
push
addr16
sub
leave
movsl
lcall
push
pop
pop
cld
cmpsl
or
and
sarb
and
or
sbb
sub
push
aad
push
pop
aas
out
sbb
movsl
repnz
idiv
inc
lods
cmp
jbe
dec
cs
test
adc
lods
pop
gs
fcoms
jg
push
fsubl
push
rcrb
xor
jnp
ret
mov
add
adc
dec
mov
cmp
or
js
cld
or
scas
xor
shlb
testl
sub
xchg
adc
sub
pop
mov
jb
into
movsb
mov
push
out
ficoms
mov
repz
shll
xchg
movsl
ljmp
jle
lahf
cs
mov
xor
test
aaa
pop
movsl
cmpsb
lock
lret
xchg
push
pop
jb
insl
mov
push
ret
shll
add
aaa
dec
rorl
inc
out
mov
std
push
lret
fiadds
loopne
pop
dec
loop
sub
mov
imul
xchg
lcall
shlb
das
ljmp
xchg
mov
mov
adc
inc
jp
ja
pop
mov
push
clc
jge
fsubl
sbbl
int3
push
sub
xlat
push
daa
mov
lock
out
pop
lds
repnz
sbb
or
aam
push
orl
out
xchg
hlt
lods
cmp
mov
ss
pop
dec
ret
add
jne
arpl
shr
pop
inc
push
imul
sahf
jnp
dec
mov
nop
clc
lock
or
dec
enter
xchg
fs
adc
inc
mov
fildl
aam
or
movsl
dec
stos
lods
xor
insl
cmp
out
popf
loop
or
mov
jmp
lds
xchg
int
push
insb
dec
stos
outsb
dec
in
jns
ret
adc
mov
xchg
jp
inc
lea
stos
in
adc
nop
pop
mov
mov
mov
push
dec
xor
repnz
es
hlt
sbbl
icebp
mulb
xor
mov
or
inc
pop
xor
ds
jne
lahf
in
pop
cwtl
xlat
add
xorl
add
push
cld
idiv
test
loope
or
sahf
lods
mov
mov
cmp
pop
push
jmp
mov
pop
mov
jp
add
add
stos
outsl
in
call
sbb
popf
xor
mov
insb
test
dec
pop
mov
pop
fstl
add
mov
lods
jmp
jnp
sahf
out
mov
add
fs
mov
adc
ret
mov
test
dec
fwait
lock
mov
jnp
dec
hlt
stos
mov
inc
and
inc
loop
or
xchg
fsubrp
cmc
push
fwait
mov
pushf
repz
adc
lods
pop
lret
stc
dec
mov
loope
cltd
adc
ret
movsb
push
insb
popf
xor
and
stos
testl
stos
mov
data16
jg
xor
scas
loope
add
mov
push
movsl
inc
fidivl
cmpsb
js
add
int
frstor
cli
fisubrl
mov
out
lahf
orb
lods
das
in
push
xor
jl
into
add
sub
pop
scas
cwtl
stos
sub
arpl
mov
push
and
lods
pop
push
xchg
sbb
push
mov
xchg
inc
pusha
ljmp
adc
js
jae
add
fidivl
xor
xor
mov
test
jecxz
fmulp
aam
daa
cmc
adc
fcomi
stc
and
jl
filds
sti
mov
movsl
imul
es
rclb
andl
pop
mov
subb
sub
out
xlat
xchg
jle
clc
pop
adc
push
test
test
fisubs
push
dec
xchg
int
testb
cmp
and
sub
push
imul
mov
pop
std
int3
push
sbb
sbb
cmp
mov
jl
pop
xchg
inc
divl
push
shlb
xchg
arpl
in
lock
jns
stos
jecxz
pop
mov
jecxz
inc
add
or
cmpsl
sarb
fildl
cmp
call
testb
fs
and
pop
rcl
loop,pt
js
shr
lret
jae
pop
repnz
xchg
loopne
popf
mov
ja
mov
jmp
pushf
pushf
adc
dec
inc
mov
movsb
sti
mov
xchg
test
jno
lock
xchg
imul
leave
or
mov
dec
push
fwait
lds
xor
push
sbb
push
dec
fwait
sub
jl
fcompl
lret
cmp
push
jge
jmp
and
cltd
cwtl
sub
mov
fldl
cwtl
das
test
popf
mov
sbb
leave
stos
push
pop
stos
cmpsb
cmp
sbb
pop
lock
adc
loope
xrelease
push
mov
mov
xchg
mov
iret
mov
imul
hlt
loope
shll
dec
mov
or
insb
pop
popa
mov
inc
mov
xor
movsl
outsb
data16
push
push
mov
aad
jmp
dec
lds
push
enter
cld
inc
sub
sti
and
ss
outsb
aad
and
mov
inc
fbstp
xchg
mov
push
aad
or
push
xchg
and
push
mov
lret
and
sti
and
call
or
daa
and
sbb
lods
insl
rolb
dec
dec
test
mov
pop
jecxz
pop
sub
dec
movsb
dec
imull
cmpsb
xchg
and
sub
adc
cmpsl
jp
adc
pop
mov
mov
mov
push
adc
movsb
mov
jecxz
mov
aas
lahf
in
mov
cmp
iret
jle
cmp
jg
add
in
jbe
outsl
dec
mov
add
ret
insl
push
pop
adc
scas
and
lahf
lret
es
xchg
pop
or
loope
mov
push
mov
aaa
pop
dec
stos
mov
icebp
aam
pop
push
shl
enter
in
mov
addr16
adc
stos
or
fdivrl
into
pop
scas
pushf
dec
adc
mov
inc
jmp
imulb
xor
call
mov
mov
cmc
lds
xchg
xor
aaa
into
int3
or
push
xchg
xor
arpl
xchg
leave
cmp
xor
push
push
inc
mov
in
insl
xor
push
cwtl
lret
fisttps
inc
lods
and
flds
cmp
lahf
sbb
stos
xorl
into
loop
mov
movsl
cmp
cmp
push
push
iret
stc
add
aaa
pop
xor
fs
aad
shl
pop
add
dec
push
and
ffreep
popf
adc
cmp
fisttpl
nop
mov
add
xor
xor
cltd
mov
push
xchg
xchg
fstpl
repnz
inc
xor
js
in
xchg
cltd
out
sbb
fsubr
movsb
jnp
into
sarl
outsl
jns
xor
or
fisttps
adc
loopne
jmp
ja
jo
xchg
cwtl
jmp
pop
int
popa
mov
in
out
xor
iret
mov
push
push
outsl
stos
sub
stos
std
and
loopne
and
mov
cmpsb
ret
cs
mov
filds
inc
out
and
ja
xchg
inc
xor
cwtl
mov
mov
mov
lret
xor
mov
test
dec
call
jmp
f2xm1
outsl
in
sbbl
pushf
xor
or
sub
lds
push
aaa
mov
sub
das
mov
addb
mov
call
push
gs
xchg
or
outsb
clc
adc
cmc
cmpsb
mov
push
fcmovnu
push
cli
push
or
and
aam
clc
shr
mov
insb
rorb
mov
jp
iret
push
jbe
jl
daa
push
jb
pop
int3
fdivrs
ret
in
enter
fwait
and
pop
cmpsb
dec
fsts
or
xchg
mov
popf
ljmp
pop
mov
mov
imul
add
lret
and
push
xor
fbld
pop
shl
xlat
mov
js
and
ffreep
dec
inc
xchg
pop
mov
es
lods
mov
rclb
mov
push
mov
inc
test
sbb
pop
xchg
out
inc
fdivs
das
testb
in
in
insl
rcrl
aas
mov
dec
call
cmp
out
inc
popa
adcl
push
stos
sub
pop
mov
popa
mov
adcl
ljmp
jmp
fdivr
jne
xor
mul
pop
in
jne
inc
xor
aad
fldt
sbb
dec
push
sub
pusha
outsl
xchg
dec
jge
jae
cld
mov
xchg
mov
outsl
sbb
cwtl
and
stos
push
imul
scas
dec
pop
sbb
in
fnsave
pop
inc
cmp
xchg
mov
call
and
inc
inc
in
nop
stos
push
out
lock
pusha
mov
je
push
cld
adc
stos
repz
sahf
pusha
add
ror
push
insl
or
cmpsb
dec
in
cld
iretw
aam
pop
xor
mov
in
pop
cmc
push
mov
fdivp
mov
mov
mov
jle
add
das
mov
jae,pn
stos
addb
rol
or
mov
lret
out
add
es
inc
fs
lret
dec
subl
mov
dec
test
mov
popa
std
adc
mov
bnd
pop
dec
aad
mov
jl
subl
dec
dec
mov
mov
add
js
mov
xchg
mov
mov
mov
or
xlat
mov
in
or
dec
xlat
gs
invd
mov
jle
popa
or
cmp
das
enter
aaa
jno
mov
push
lea
aas
cmpsb
mov
les
pop
cwtl
adc
pop
jbe
and
incl
testl
jns
bound
adc
xlat
subl
sbb
add
sbb
cltd
dec
lret
cmp
and
add
loopne
xchg
inc
in
push
mov
leave
arpl
and
mov
mov
ljmp
faddl
and
xchg
into
add
das
mov
pop
jnp
mov
jecxz
sub
filds
in
pop
mov
fsts
adc
push
mov
sub
mov
pop
pmuludq
dec
nop
push
jecxz
fs
ret
nop
mov
fstl
xor
pusha
mov
insb
and
sahf
xor
pushf
sti
adcl
dec
jg
sub
dec
push
aaa
mov
inc
pop
push
mov
mov
scas
ret
mov
push
lea
movsb
out
jae
test
into
mov
cmp
cli
sub
popf
insb
lea
inc
jns
sbb
mov
into
cs
cmpsl
and
dec
pop
xor
cwtl
sub
cmpsb
mov
outsb
mov
cmpsb
inc
std
and
divl
xchg
push
repz
pop
jle
xchg
scas
int3
fwait
aad
ds
mov
adcb
in
adc
fcoml
pop
adc
pop
stos
or
push
mov
lods
mov
fs
aad
in
orl
or
fcoms
verw
mov
rclb
in
jp
mov
inc
cwtl
xor
jno
and
mov
lret
js
out
cmp
in
push
test
push
jae
fsubs
rcl
aad
repz
dec
ret
jle
lods
adc
popa
scas
outsl
daa
sub
pusha
inc
xor
push
or
pop
data16
insl
and
and
cld
xchg
psrlq
jmp
mov
in
sbb
rorl
pop
push
insb
add
loopne
dec
xchg
mov
adc
pop
daa
push
leave
in
pop
icebp
mov
adc
adc
jo
fs
nop
add
xchg
loop
inc
pop
in
decb
ret
adc
jecxz
test
scas
jmp
hlt
pop
add
js
leave
cwtl
lcall
push
xchg
int
or
js
cmp
pop
mov
dec
add
xchg
sbb
sub
fs
jne
push
pop
xchg
shll
dec
jns
lea
xor
popf
cmc
incl
fimuls
mov
test
test
mov
inc
out
cmpsl
and
shll
jnp
mov
dec
pop
in
aas
dec
inc
in
sub
repz
and
bound
aam
dec
xchg
pop
daa
sub
stos
out
jae
popf
mov
arpl
popf
inc
push
out
xor
dec
jne
xor
xor
scas
imul
lret
test
mov
pop
jmp
xchg
xchg
xor
das
popf
shll
sub
ficoms
add
jge
movsb
xlat
mov
out
outsl
pusha
fisttpl
mov
shlb
or
cmp
ss
in
push
imul
stos
in
les
test
lods
cld
push
jnp
jne
pop
lods
inc
mov
mov
cmpsb
dec
loopne
cmp
sbb
xlat
shlb
push
add
push
ljmp
jno
inc
mov
mov
push
fwait
ss
cmp
or
outsb
mov
lods
sarb
fists
lds
and
or
pushf
ljmp
mov
cmp
sub
xor
decb
dec
out
popa
fsts
pop
inc
mov
int3
ret
dec
mov
nop
bound
hlt
push
adc
push
je
mov
sub
rclb
ljmp
jb
lret
xchg
lods
ret
mov
shll
mov
add
fimuls
xor
push
dec
adc
pop
bound
dec
ds
ljmp
xchg
jge
loop
lods
mov
call
push
mov
pop
xor
jns
das
mov
mov
adc
mov
ret
out
mov
out
outsb
and
sbb
add
and
pop
in
shufps
cmp
mov
fcomip
stos
dec
rcll
dec
sub
xlat
cltd
loope
out
mov
mov
mov
les
and
sbb
insb
negl
sarl
call
aas
or
xor
les
lret
fmull
test
and
mov
pop
sub
rclb
cmp
ss
fimuls
adc
mov
es
outsl
shr
mov
sbb
scas
pop
repz
mov
imul
mov
enter
mov
inc
push
mov
dec
push
adc
cmp
xor
xchg
sub
shrl
inc
outsb
sarb
ret
imul
mov
test
int3
mov
xchg
and
out
andb
daa
stos
jmp
rcrl
xchg
loopne
data16
and
push
cs
sub
pop
leave
int
mov
je
and
add
push
add
shrb
inc
mov
sub
sbbb
sbb
dec
jnp,pt
daa
jnp
xorl
cmpsb
fdivrs
add
xor
cmp
xor
sbb
in
xchg
xor
pop
movsl
jecxz
pop
sub
jmp
les
jge
movsl
popa
fcoml
dec
add
or
push
imul
call
jl
inc
push
adc
mov
cltd
xor
jecxz
or
cltd
cmp
lret
sub
mov
scas
sbbl
add
jns
sub
dec
pop
imul
test
pop
inc
loope
or
xchg
add
push
xor
out
lea
add
inc
mov
add
aas
orl
bound
sahf
test
xorl
movsb
ss
and
push
and
je
lret
jmp
add
and
cmp
movsl
jle
ret
sarl
jmp
and
jge
ret
jne
sbb
loope
adc
sub
mov
icebp
jnp
jecxz
call
mov
loop
xchg
mov
jns
mov
jecxz
mov
enter
stc
insl
outsb
add
std
cmp
movsl
mov
imul
sub
push
mov
dec
clc
out
sarl
jae
dec
jp
stos
mov
repnz
out
xchg
jnp
loopne
xor
jmp
outsb
or
mov
xchg
jnp
dec
cmpsb
mov
loope
enter
sbb
xchg
lods
int3
out
fsubr
pop
or
push
xor
test
sub
and
mov
mov
fst
or
fisubl
sub
dec
push
sub
and
sahf
pop
push
mov
mov
or
mov
subl
fsts
push
push
pop
sbb
push
and
push
add
mov
push
mov
push
sbb
mov
xlat
sub
pop
cmc
sub
jl
jge
cmp
inc
inc
add
insb
cmp
mov
adcb
mov
mov
push
outsb
sbb
fimull
xor
sbb
cmp
cmp
mov
jecxz
test
sbb
pop
jo
repnz
imul
dec
jo
lcall
je
bound
xchg
sub
mov
and
pop
les
mov
pop
test
ss
push
mov
shrb
cmp
mov
mov
jae
cmp
stos
rol
daa
sub
mov
push
in
popf
xchg
ret
sub
les
data16
xchg
and
xlat
adc
inc
mov
leave
jmp
and
mov
cli
lcall
ds
ja
popf
shrl
mov
out
dec
sbb
pushf
shl
jo
mov
int
mov
xchg
hlt
fstpt
shlb
out
xchg
sbb
cltd
outsb
aad
fs
or
rcll
lds
fstpl
push
inc
ret
in
jp
or
sub
int3
setnp
mov
mov
aad
mov
or
pushf
dec
pop
dec
push
testl
fidivrl
jp
push
pop
cmpl
pop
push
dec
int3
add
pop
fwait
push
push
mov
cmpb
cli
push
ljmp
xor
icebp
sbb
lds
dec
stos
addr16
xor
ret
mov
add
lret
and
cmovbe
test
out
lea
xchg
and
enter
xor
jnp
push
push
pop
lock
cmpsl
insl
sbb
sub
movsb
fcoms
ja
push
mov
pop
outsb
inc
mov
cs
pop
sub
xchg
inc
clc
xchg
movsl
sbb
aaa
mov
lret
pop
int3
pop
hlt
rcrl
testb
xor
fbstp
and
push
pop
sub
shrd
xor
out
xchg
sub
or
and
insb
sbb
mov
cs
jbe
test
pop
mov
in
sub
cmp
ss
cmp
notb
psubb
mov
retw
pop
dec
adc
cltd
mov
pop
adc
cmp
mov
lret
push
xor
xor
jp
mov
sub
add
daa
lret
and
xor
inc
inc
repnz
rol
ss
mov
cli
fdivrs
cmpl
xchg
cld
loope
mov
cmp
xchg
movsl
jl
nop
out
jno
call
inc
inc
sbb
pop
push
ja
and
movsb
gs
mov
repnz
mov
mov
andl
add
popf
add
xchg
sub
pop
hlt
push
daa
adc
add
fcompl
mov
dec
std
gs
outsb
ljmp
ds
jb
lret
or
mov
pop
pop
hlt
inc
jle
mov
and
xchg
add
mov
loopne
je
xor
mov
adc
sti
cwtl
stos
and
and
jns
mov
loopne
jmp
and
mov
cld
lcall
in
test
push
pop
adc
test
add
jmp
aaa
mov
iret
mov
test
shrb
nop
xchg
inc
inc
loop
rclb
mov
mov
and
arpl
jg
movsb
js
mov
clc
xchg
aas
and
js
pop
cmc
imul
add
adc
jle
aaa
aam
mov
test
mov
shrl
testl
sbb
add
test
sub
sbb
jge
and
cmp
inc
fmuls
pop
icebp
adc
popa
dec
int
in
inc
mov
lret
push
mov
mov
fistpl
insl
decb
insl
clc
loop
ficoml
dec
pushl
sbb
inc
dec
mov
lock
adc
andl
inc
and
scas
insb
mov
sub
gs
xor
jno
pop
bound
jmp
mov
or
inc
outsl
icebp
or
scas
and
mov
xchg
push
pop
scas
jl
movsl
xor
in
pop
jne
les
das
inc
inc
jbe
outsb
test
int3
cmc
rclb
dec
lcall
shlb
jecxz
subps
mov
in
aaa
dec
cmp
pmaddwd
fistpll
fldt
aaa
dec
scas
mov
cmp
shrb
out
cmp
mov
and
push
mov
push
mov
xchg
addr16
fistpll
inc
movsl
pop
divl
mov
test
push
insl
or
iret
push
jae
inc
xchg
pop
inc
clc
ret
add
pop
jbe
fnstsw
jl
test
inc
fisubrl
cmp
aaa
rcrl
repz
iret
repnz
cs
mov
inc
sbb
push
inc
pop
stos
adcl
push
out
inc
xchg
cs
movsb
cltd
cld
jle
pushf
ds
mov
call
aam
sbb
or
jns
fnsave
add
jl
pop
cltd
test
jl
adc
xor
adc
and
or
int
jo
ljmp
loopne
jno
pop
xlat
cmpsb
in
mov
test
lret
sbb
pop
mov
in
xor
sarb
inc
pop
fbstp
push
movsl
fs
icebp
jno
inc
mov
into
mov
pop
cmp
pop
adc
adc
mov
lcall
imul
cmp
inc
pop
mov
aaa
cld
daa
pop
repnz
adc
mov
adc
adc
scas
cwtl
mov
scas
mov
mov
fwait
mov
mov
cmp
jge
icebp
stos
dec
sbbb
pop
int3
cmp
in
sbb
xor
add
mov
sti
mov
jle
sbb
cld
push
inc
xor
inc
sub
stc
out
and
push
jno
aas
mov
scas
pop
inc
sbb
jb
sub
mov
mov
and
aad
lods
cmp
sbb
cmp
and
xlat
test
dec
jmp
xchg
stos
push
or
push
xchg
imul
int
mov
outsl
addb
ja
fmull
pushf
push
push
jmp
xor
lods
cmp
fnstenv
imul
lock
xchg
scas
int
xchg
mov
sbb
out
mov
aaa
into
fdivl
push
in
inc
or
je
sbb
aas
cmp
pop
shlb
movsl
jge
jnp
mov
mov
jecxz
mov
mov
jg
xor
pop
bound
ret
pandn
cwtl
xor
cmp
jmp
xchg
xor
out
mov
ret
adcb
shr
and
push
in
mov
cmp
lcall
inc
out
cld
jnp
pop
js
jo
inc
xchg
mov
nop
adc
in
cmp
pop
or
cli
jo
int3
jae
xchg
xchg
arpl
adc
or
adc
dec
inc
and
jle
cwtl
enter
sbb
jge
cmp
inc
dec
je
push
push
fidivrs
punpcklwd
inc
inc
in
fwait
out
out
or
push
in
fs
imul
mov
xchg
lock
push
push
in
call
popf
and
imul
adcl
arpl
push
xchg
cmp
insb
stos
in
fwait
js
jp
mov
mov
jb
leave
pusha
inc
lea
push
idivb
testb
in
adc
sbb
mov
ret
loop
mov
les
pushf
ja
xchg
test
loop
js
clc
outsb
jne
sbb
push
repz
adc
dec
add
dec
ds
adc
out
loope
stos
adc
stos
lods
sub
repnz
mov
data16
mov
dec
out
sub
mov
ss
lahf
inc
and
cmp
push
sbbb
xchg
mov
mov
jo
or
aam
jb
popa
add
mov
mov
dec
dec
pop
inc
and
inc
mov
jl
or
stos
mov
push
inc
or
sahf
xchg
cmp
sar
test
adc
add
mov
xchg
icebp
test
mov
loopne
lcall
and
mov
movsl
lret
or
fisttps
lahf
adc
out
std
sub
rcl
adc
loope
das
cmp
jg
mov
lahf
push
fsubl
or
and
neg
sub
mov
cmc
mov
and
cmp
nop
test
out
mov
jge
pop
out
xchg
jbe
push
and
rclb
pushf
std
sbbb
testb
jne
cmp
cmp
subb
cmp
adc
cli
xchg
or
adc
subb
push
mov
inc
movsl
std
inc
data16
add
sub
loope
mov
rolb
in
jne
fistps
int3
mov
popl
jbe
stos
jle
xchg
mov
push
and
push
lods
in
shll
lods
enter
dec
call
push
or
jne
fs
das
jp
adc
imulb
iret
xor
andl
dec
mov
mov
sbb
push
out
test
or
lock
mov
cmp
mov
mov
add
call
in
jmp
jno
sbb
push
jecxz
dec
xchg
mov
cmp
dec
dec
fidivrl
mov
sub
cmp
lods
xchg
adc
sub
loope
xchg
xchg
push
push
out
xor
cmpsb
loope
outsb
add
jne
int
sbb
mov
mov
movsl
fwait
repnz
xchg
iret
jae
testb
and
testb
ds
cmp
jnp
xor
in
fstpt
adc
adc
ret
xorb
jle
dec
mov
xor
xchg
xor
pop
cmp
subb
adc
pop
in
lods
inc
fisttpl
dec
xchg
ss
fwait
jo
pop
cmp
mov
adc
repz
or
cmp
insb
cwtl
push
xor
ret
jl
xchg
or
xor
pop
pushf
sub
and
sub
sub
rorb
jp
xchg
inc
dec
and
loopne
push
mov
fsubrp
mov
cmpsl
xor
cmpsl
in
dec
repnz
test
dec
mov
add
insl
inc
sbb
stos
jbe
cs
ds
lcall
cwtl
jbe
jmp
fistps
jg
xchg
cmpsl
loop,pt
push
add
mov
int3
ret
xor
mov
jl
push
std
test
bswap
inc
mov
mov
jae
xchg
jno
lahf
mov
insl
mov
dec
stc
xor
xor
inc
pop
add
lock
cmp
clc
push
add
out
sbb
mov
mov
clc
mov
aam
mov
lgs
gs
or
xchg
outsl
in
pushf
mov
imul
out
jo
popa
icebp
or
lret
daa
loopne
call
icebp
mov
in
lret
idivb
repz
cmp
cwtl
pusha
xor
movsb
sti
mov
and
roll
in
lock
inc
and
fs
stc
in
mov
dec
outsl
xlat
repz
dec
pop
aas
pop
stos
setnp
mov
fcmovnb
xchg
clc
int
insl
sbb
out
fisttpll
lock
dec
dec
fldenv
sub
fiadds
jne
xor
xor
pop
decl
mov
mov
pop
stos
push
popf
or
aam
mov
in
scas
cs
xor
xchg
shrl
out
xchg
ficoms
push
jno
fstp
insb
lcall
jne
dec
push
mov
adc
gs
mov
test
int3
test
xor
sbb
aad
mov
popa
les
cmp
xor
in
pop
in
pop
loop
fisubs
xor
std
and
gs
sbb
inc
xchg
aaa
xchg
imul
push
jmp
jp
outsb
outsl
xor
test
inc
repnz
scas
and
mov
mov
xorb
decb
ret
jmp
push
or
mov
jae
fldcw
aad
mov
adc
inc
inc
inc
aaa
lcall
push
call
ror
outsl
add
sub
inc
mov
lods
inc
cmp
xchg
add
es
dec
sub
in
sub
imul
insb
ja
mov
es
pop
das
pop
repnz
ret
popf
sub
or
dec
cwtl
orl
ja
push
out
clc
mov
mov
push
xchg
adc
mov
dec
add
jge
clc
sahf
inc
ss
push
sub
pusha
dec
out
push
sahf
addr16
lods
adcl
out
test
fcoml
lahf
stos
and
and
aaa
pusha
iret
stos
dec
pop
push
insl
dec
cmpsb
sbb
les
adc
test
jno
and
syscall
or
cmpsl
cmp
or
lds
cs
jp
lcall
cmp
mov
add
int
sub
popa
addl
xor
aas
cltd
leave
mov
mov
hlt
mov
cmc
adc
cmp
ficoms
pop
cmpsl
push
ja
jecxz
aas
adc
fiaddl
xchg
xchg
jnp
xchg
test
mov
fistpll
xor
dec
sub
push
ljmp
call
and
xor
shl
cmp
lods
leave
hlt
adc
into
mov
dec
dec
xor
movsl
xor
scas
gs
fwait
std
mov
insb
leave
xchg
xchg
adc
inc
pop
add
popa
cmp
jbe
int3
test
lods
adc
jmp
in
loope
dec
negl
xlat
jle
push
clc
adc
test
sub
pop
icebp
rcll
xor
addr16
pop
cli
dec
in
shrb
add
insb
jge
cltd
sub
ret
js
iret
sub
je
push
ja
xchg
sbb
mov
and
xchg
adc
fldl
cmp
sbb
clc
adc
mov
fldt
mov
pop
leave
fists
push
sbb
sarl
cld
push
xchg
negb
idiv
inc
inc
arpl
xor
sub
mov
outsb
pop
mov
mov
cmp
fcomps
or
cld
jmp
daa
cld
add
scas
cld
or
in
aad
mov
adc
mov
inc
dec
mov
xchg
jg
repz
push
flds
scas
nop
stos
mov
dec
fistps
icebp
mov
aad
scas
lea
scas
or
adc
addr16
cmpsl
push
push
test
mov
arpl
ret
push
mov
sti
cmp
fisubrs
jmp
xor
cmpsl
fwait
cmpsl
rorb
aad
adc
pop
outsl
iret
lahf
loope
sar
jo
movzwl
and
cmp
lcall
stc
push
sub
les
mov
scas
addl
xor
mov
fisttps
mov
dec
fisubrs
sbb
out
lock
adc
or
ja
das
gs
xchg
subl
ret
hlt
jo
addl
dec
lret
push
and
ljmp
cmc
adc
mov
xchg
xor
push
push
ja
sbb
dec
test
add
jo
test
je
fwait
xor
xchg
push
test
mov
inc
mov
push
push
outsl
mov
lods
mov
mov
sbb
push
cmp
ret
shr
hlt
cmp
sbb
add
cmp
push
jg
ret
loope
loopne
inc
or
sub
les
adcb
insb
pop
sti
test
movsb
xchg
dec
pop
add
lods
sub
xchg
fldcw
sbb
xchg
imul
xlat
pop
orl
mov
iret
mov
xchg
aam
pop
fdivrp
xchg
sub
sbb
jae
xor
mov
stos
stos
cmp
les
fcompl
inc
sti
jo
insb
les
addb
jecxz
jecxz
sbb
or
xor
pop
data16
sti
test
jns
or
or
push
mov
inc
dec
sub
dec
xchg
xor
in
je
dec
add
lret
add
pusha
loop
mov
das
push
sbb
cli
dec
jae
scas
int3
mov
rclb
add
cmpsb
ds
adc
lret
mov
xchg
and
bound
push
fcmovnbe
lods
lods
push
icebp
bound
mov
sub
cwtl
loope
inc
lcall
hlt
loop
inc
lahf
pushf
ds
mov
test
mov
test
mov
roll
outsb
mov
popf
jno
sbb
bnd
mov
push
movsl
in
jp
jno
out
mov
lret
imulb
xchg
adc
dec
adc
iret
fisubl
xchg
mov
aad
aas
jle
repnz
outsb
lds
xchg
aad
add
test
aam
cli
push
icebp
mov
hlt
jmp
clc
scas
insb
or
mov
push
das
add
mov
and
sarb
les
popa
fcoml
mov
insl
je
scas
mov
jb
inc
andb
lods
imul
xchg
jne
shll
push
sub
cmpsl
into
jb
repz
shrb
adc
lea
shrl
jnp
imull
fs
les
testb
aaa
ljmp
iret
leave
jae
cmc
mov
sub
mov
mov
arpl
xchg
mov
lret
add
rcl
lahf
sub
sbb
jb
cmp
int
push
push
mov
fsubl
in
xor
add
xchg
jbe
lahf
aas
dec
rcl
in
inc
cmc
push
popl
popf
mov
pop
andl
inc
icebp
pushf
or
xchg
das
cmp
lcall
pop
adc
into
mov
movsb
out
mulb
dec
arpl
xchg
add
loop
sub
jns
inc
mov
scas
out
jb
lds
pop
xor
xchg
js
xor
stos
mov
dec
mov
stc
shrl
bound
adc
ds
shrl
inc
xor
test
das
inc
ficompl
stos
pop
sti
xchg
push
cltd
fadds
jp
lea
jp
pop
cmpsl
or
jmp
push
jo
pop
mov
loopne
mov
cs
cwtl
stc
lret
jmp
subl
loopne
xor
sbb
add
bound
stos
add
cmpsl
jo
push
jge
jp
inc
pop
jne
popa
or
loopne
scas
sar
cwtl
cmp
pop
jae
clc
cmpb
sbb
mov
dec
inc
ja
test
cltd
enter
xchg
add
xchg
test
fsubrl
or
mov
aaa
push
sub
jnp
sarl
or
out
les
cs
or
jle
insb
push
pop
mov
ja
es
push
dec
pop
inc
int
ret
push
mov
insb
sub
pop
xor
orl
outsb
add
inc
notl
push
xchg
fsubrs
sbb
mov
fcoml
out
push
jmp
iret
pop
sbb
in
lods
pop
imul
js
stc
loope
cmp
ffreep
stc
je
ja
or
mov
jge
das
pop
xor
add
fucomp
testl
hlt
sub
stc
out
mov
je
xchg
mov
jecxz
mov
or
push
pop
mov
cmpsl
lcall
mov
ret
dec
scas
inc
jg
jo
clc
insl
int3
pop
xor
jp
push
pusha
add
adc
outsl
push
push
sti
rcll
mov
std
icebp
gs
loopne
scas
and
jl
mov
aas
fwait
int3
lcall
push
imul
jmp
xor
jle
test
shrl
dec
aaa
mov
loope
mov
movsb
mov
xchg
orl
fnsave
cmp
dec
fwait
pop
mov
iret
mov
mov
sub
movl
test
test
sarb
insb
jbe
cmp
cmpsl
shlb
test
imul
cmc
hlt
push
sub
aas
test
jns
pusha
orl
or
push
and
ret
mov
dec
std
clc
popa
icebp
sbb
test
adc
or
das
bound
stos
pop
arpl
adc
push
cld
addb
mov
mull
sub
mov
pop
leave
sbb
sbb
xchg
sbb
outsb
mov
ljmp
push
pusha
jl
and
or
inc
aas
or
inc
test
bound
adc
sbb
movsb
scas
mov
ret
pop
aas
xlat
aad
mov
lahf
push
mov
pop
sub
ljmp
loope
push
mov
jmp
inc
cmp
daa
inc
jbe
std
ret
stc
add
pushf
negl
out
flds
sub
into
pop
shlb
jno
int3
arpl
dec
rorb
scas
ljmp
aas
or
xchg
sbb
inc
adc
mov
sub
fxch
xchg
cmpsl
dec
adc
or
aas
sub
or
imul
aas
dec
mov
stc
das
mov
cltd
sub
push
lods
pop
xchg
gs
dec
ja
push
mov
data16
and
push
xor
pslld
hlt
lret
xlat
push
mov
push
jb
cwtl
push
inc
add
loopne
sub
iret
jne
mov
repnz
push
aas
push
jb
mov
aas
mov
gs
mov
push
clc
xchg
push
test
push
aad
and
xor
push
push
out
adc
movsb
mov
mov
inc
and
divb
cmpsb
mov
sub
dec
push
jae
and
sbb
imul
push
push
xor
fdivrs
push
sti
test
inc
lock
sub
fnsave
and
aaa
pop
ds
stos
mov
fmull
push
jbe
jo
xor
xlat
outsb
cmpsb
mov
call
cmp
or
xchg
sub
repnz
sub
mov
ror
jmp
data16
xor
sar
inc
xchg
xor
fnstcw
stos
leave
into
add
jl
jg
mov
rcll
or
insb
adc
gs
jl
push
jecxz
ret
pushf
hlt
pop
xlat
jmp
arpl
xchg
dec
cmpsb
lcall
jge
xchg
insl
loope
cwtl
adc
fidivs
cmp
rcrb
les
lret
sub
int3
gs
outsl
xor
adc
mov
push
sbb
pop
idiv
sahf
mov
mov
xchg
xor
test
test
iret
mov
sbb
ret
shll
xor
xchg
push
mov
mov
icebp
mov
in
push
pop
jae
inc
jb
int
shlb
push
sub
xor
addb
pop
push
pop
jb
leave
scas
jg
addr16
cmp
or
push
imul
and
inc
pop
cmp
pop
es
imul
fisubrl
mov
push
pushf
sbb
sahf
pop
and
movsl
adc
sti
repz
outsb
add
pusha
cmp
aam
iret
stos
jmp
pop
les
add
mov
mov
push
hlt
mov
jg
lds
lret
mov
lods
inc
push
out
dec
in
add
outsl
cmp
pop
cs
cmp
inc
fdivr
loopne
dec
mulb
mov
push
xor
fsubl
dec
jecxz
out
dec
roll
jecxz
sbb
enter
std
mov
filds
nop
sbb
xchg
inc
pusha
stos
mov
sbb
push
sub
xor
pop
movl
ret
lock
cltd
jp
ret
pop
cmc
inc
inc
push
mov
mov
cmp
in
adc
call
aad
jno
std
dec
and
addr16
mov
add
or
sbb
push
ja
ret
fwait
ljmp
mov
and
sub
aas
pop
pop
hlt
xlat
lcall
sub
cld
xchg
pushf
cmpsl
xchg
pop
pop
sbb
push
andb
fdivs
ja
lock
push
cmpsb
jne
daa
cmpsl
enter
dec
out
out
jno
loopne
mov
mov
cmc
and
jbe
int
mov
arpl
sub
dec
out
xor
pop
in
mov
sub
push
call
jb
jo
das
scas
sti
pop
fidivrl
mov
lret
add
pop
ds
in
dec
pop
loope
mov
mov
add
out
loopne
aad
sub
movsb
test
mov
push
lret
jns
cmc
fdiv
lods
or
cmp
lea
aad
or
mov
shl
shll
iret
pop
mov
cmc
popa
jmp
mov
jns
jp
inc
dec
cmpsl
cmp
xchg
mov
ja
aas
xchg
jno
mov
and
jg
xchg
cmpsb
cmp
aaa
outsl
les
xchg
xchg
xchg
jns
roll
mov
data16
or
xchg
adc
mov
ljmp
jl
inc
dec
mov
test
and
mov
cmp
idivb
xlat
outsb
inc
mov
insb
jl
fcomps
cmp
aam
add
dec
imul
dec
and
xchg
imul
out
inc
ljmp
jnp
divl
pop
es
mov
jle
jecxz
xor
push
pushf
or
xor
out
or
mov
cwtl
xor
mov
dec
loop
icebp
dec
loopne
dec
pop
mov
out
mov
xor
lcall
xchg
pop
out
loop
adc
mov
test
iret
loop
mov
loope
inc
mov
inc
add
fucomp
outsl
inc
movsl
cmp
lock
lds
pop
push
imull
ret
repz
mov
xor
lahf
or
test
mov
add
cmp
mov
push
mov
cld
loopne
xchg
and
into
sub
and
test
inc
xor
sub
xor
xchg
pop
and
adc
push
dec
mov
loope
push
out
out
outsb
mov
test
mov
jnp
pop
cmpsl
insb
pop
jp
jle
xchg
mov
ret
loopne
into
fdiv
pusha
push
rol
sbb
adc
addl
xor
cmp
jbe
fcomps
lcall
push
ljmp
call
enter
icebp
stos
out
fcomps
int
or
shl
xchg
sub
mov
out
ja
mov
xlat
test
mov
inc
xchg
iret
lret
lock
mov
nop
daa
mov
inc
rcl
xor
cli
sub
aad
cmp
ret
cwtl
push
fwait
jb
and
cli
pushf
push
cmp
sub
cmp
lcall
bound
aas
xchg
xor
movsl
fdivr
xchg
ficomps
xlat
fidivs
sub
ret
push
and
into
pop
add
xorb
gs
lcall
push
iret
mov
push
lock
cmpsb
cmc
or
leave
adc
jle
pop
mov
mov
adc
jecxz
mov
aaa
or
imul
in
sub
mov
sbb
mov
dec
int
ret
lea
xor
ds
dec
and
rcr
add
nop
int
test
loop
les
aad
and
push
les
jnp
loope
dec
and
outsl
lea
call
ja
sbb
stos
jnp
inc
adc
movsl
aam
jecxz
aam
cmp
js
mov
fbstp
test
sub
jns
in
xor
mov
jp
pop
lods
bound
and
sbb
mov
mov
aas
xor
cmp
add
dec
mov
imul
lock
leave
arpl
jecxz
or
test
lods
fcompl
push
pop
scas
xchg
in
test
mov
fistpl
shrb
push
cmp
cmpsl
cmc
inc
and
xor
subl
cmp
ret
pop
out
add
mov
mov
adc
hlt
dec
add
cmp
adc
inc
xchg
mov
nop
mov
movsl
fwait
test
ret
pop
test
shll
push
xchg
test
imul
ret
pop
ret
push
or
fldcw
pcmpgtd
sbb
testb
pop
insb
sbb
cmp
lahf
pop
mov
push
lods
ret
inc
mov
iret
sbb
cld
jmp
lds
jle
xchg
loope
test
mov
ficoms
dec
sbb
dec
dec
push
cmp
push
je
mov
sbb
mov
addr16
sub
adc
les
mov
js
loope
and
and
inc
sahf
ss
scas
xor
insl
mov
popa
fcoms
mov
das
out
inc
lods
xchg
aaa
mov
nop
inc
xlat
outsb
jns
push
mov
inc
fdivrl
cli
add
dec
loop
repz
or
sti
cmp
sbbb
sub
out
mov
in
cmpl
cmp
nop
jmp
stc
in
mov
xchg
or
call
or
xchg
jge
test
sub
lret
repnz
mov
add
mov
or
inc
fisubs
fdivrs
mov
repz
je
mov
jg
or
or
push
fdivl
lret
lds
cli
inc
out
push
xor
mov
inc
fmull
push
xor
mov
lea
xchg
rcrl
rcl
xchg
jge
adc
pushf
repz
cmp
jmp
mov
je
stos
xor
and
xchg
ljmp
fidivl
movsl
cmp
sti
pop
or
call
mov
jp
lods
faddl
int3
subb
jb
mov
mov
rclb
sub
hlt
add
loopne
sub
pop
fildl
jne
loop
sbb
push
or
add
sahf
jne
mov
inc
lahf
lods
xchg
sbb
int
std
sub
lock
dec
push
jae
mov
jl
jg
adc
rorb
roll
test
out
sub
pop
dec
daa
adc
scas
inc
data16
adc
int
mov
sbb
outsb
loop
in
or
imul
fcmovne
jecxz
xor
xor
inc
ficoms
iret
mov
mov
adc
pop
xchg
cs
sub
dec
pop
mov
iret
lahf
in
jle
xchg
mov
and
jl
inc
aam
xchg
orl
call
cmp
dec
out
cmp
hlt
insb
and
mov
mov
jb
and
push
pusha
dec
js
jmp
or
jle
call
xchg
xchg
icebp
pop
add
and
or
mov
rcl
jp
stos
and
mov
hlt
cmc
es
sbb
imul
mov
repnz
dec
sub
out
inc
fdivp
jl
dec
jecxz
cltd
push
mov
daa
adc
iret
gs
push
inc
hlt
push
push
scas
cmp
jge
lods
pop
xor
arpl
mov
gs
das
lea
icebp
pop
xchg
dec
in
aas
xor
dec
xchg
mov
adc
cmp
jnp
mov
sbb
leave
scas
mov
lret
pop
andb
gs
jb
adc
sti
mov
pop
add
xor
adc
sub
stos
inc
in
sub
lret
dec
es
jae
xchg
insl
fstl
and
in
inc
mov
jns
imull
adc
pop
jle
cwtl
lds
mov
fdivr
in
les
fisubl
inc
adc
jns
xchg
arpl
mov
and
xlat
jns
pop
sub
fildll
cmp
out
jl
mov
jmp
or
push
dec
mov
jle
adc
fisttps
fcoms
fisttpl
sbb
jge
mov
dec
cmp
dec
movzwl
sbb
cmp
shrl
cmpl
jo
icebp
sbb
mov
xchg
cwtl
das
mov
inc
ret
and
das
rorl
cmc
push
lods
fistpll
inc
insb
dec
push
repnz
jns
iret
sbb
loopne
xchg
shll
pop
repnz
imul
sub
or
sti
ret
hlt
sbb
in
dec
in
ja
out
cmp
lods
outsl
jbe
sbb
mov
cmpsl
xor
sbb
negl
mov
sub
mov
fiaddl
lock
fwait
mov
and
mov
push
mov
testb
add
sbb
mov
shrl
cmp
sti
cmp
and
pop
jnp
ds
mov
xor
push
jle
out
mov
das
loopne
add
std
cltd
clc
pop
sub
jae
adc
sub
cld
stc
xchg
push
in
mov
mov
mov
ret
sbb
repnz
sub
mov
or
test
movsb
cmp
jo
sbbl
mov
jae
lock
and
pop
dec
xlat
iret
jb
lods
mov
fnstcw
or
mov
xchg
sub
jecxz
sub
cmp
out
mov
add
mov
movsb
and
popa
inc
dec
push
insl
or
jg
push
mov
jo
jge
fnstcw
aam
leave
int
mov
mov
pop
mov
divb
add
stos
stos
pop
out
int
std
sbb
mov
adc
ja
mov
fsts
xchg
xor
mov
sbb
adc
test
or
push
or
subl
add
imul
ret
arpl
sbb
dec
dec
xor
push
movsb
rorl
add
jge
push
xchg
hlt
pop
mov
inc
xchg
jbe
adc
mov
int3
xor
div
inc
add
es
push
jle
mov
jmp
movsl
cmp
xor
sub
repz
lods
and
jb
xchg
and
pop
and
insb
aad
cs
sub
xchg
sub
sub
mov
mov
popa
adc
or
dec
adc
ja
stos
test
sub
and
daa
cmp
mov
andb
imul
out
xchg
sub
fwait
jae
or
mov
push
fxch
pop
or
mov
lods
lds
aam
nop
addr16
or
xchg
or
lret
cmpsl
sub
xlat
pop
jbe
add
inc
loop
push
cmp
aaa
out
test
xor
fnsave
out
or
sti
pop
ret
imul
and
into
xor
or
push
xor
in
sub
dec
das
movb
dec
in
xor
call
loopne
sbb
mov
mov
cmp
rol
in
jle
das
cmp
loope
lods
sub
shr
cli
or
rol
mov
push
call
hlt
into
mov
lret
sbb
popa
outsb
shrb
pop
loope
pusha
jge
lret
lahf
daa
loope
add
lds
add
adc
cmp
sti
jecxz
xchg
outsb
repz
jg
shrl
mov
insb
jle
adc
leave
outsl
ror
mov
pop
out
je
sub
xchg
xchg
jbe
scas
cli
pushw
insl
mov
dec
iret
mov
mov
adc
cwtl
or
ljmp
call
inc
movsl
sahf
aaa
mov
mov
adcb
cli
pushl
mov
mov
iret
jecxz
pop
xor
movsb
mov
mov
and
sbb
mov
sbb
sub
jnp
mov
rcrl
jae
dec
in
mov
ret
fbstp
sbb
cld
aaa
or
mov
test
repz
ljmp
pop
repnz
jnp
adc
adc
inc
int
divb
je
push
cmp
dec
mov
xchg
in
movsl
push
mov
scas
enter
mov
clc
or
pop
and
subl
sbb
lret
cli
out
xchg
mov
pusha
add
dec
mov
out
insl
sbb
jmp
push
inc
push
into
sbb
pop
sbb
pop
mov
enter
push
shr
stos
out
arpl
xchg
jb
shrb
inc
fnsave
xchg
out
jmp
or
shrb
pusha
inc
fwait
movsb
shr
inc
outsb
and
push
loopne
sub
repz
sub
test
daa
mov
leave
iret
movl
jns
imul
fs
inc
or
jae
lock
nop
adc
push
push
add
push
shlb
hlt
mov
push
test
dec
and
and
imul
or
dec
dec
xor
ds
adc
daa
xor
lds
xchg
scas
xorl
or
dec
add
mov
int3
movb
popf
inc
sahf
enter
das
adc
jnp
and
adcb
push
lods
test
jnp
or
imul
jmp
in
jae
add
sbb
bound
scas
mov
add
lds
xor
divl
xchg
iret
ljmp
or
inc
ja
xchg
xchg
rol
push
test
sub
or
das
add
dec
nop
imul
lock
push
add
inc
inc
sbb
sub
enter
mov
push
pop
test
cmpsl
xor
ljmp
jno
sub
push
cmpsl
jo
dec
mov
rclb
mov
testb
sbb
call
pop
lods
push
enter
sahf
jae
inc
test
jbe
cli
xchg
pop
xchg
leave
push
int
pop
mov
out
sbbb
andl
sbb
xchg
cwtl
cmp
in
sub
outsl
inc
inc
std
xchg
outsb
inc
jl
gs
jbe
loopne
daa
push
adc
fistl
and
nop
jg
or
repz
bound
mov
pop
ja
push
add
jno
pop
jge
shlb
pop
ljmp
clc
cld
mov
adc
push
fs
test
mov
clc
mov
or
movups
pusha
scas
lock
rcrl
sub
push
test
imul
or
pmulhuw
xchg
push
insb
imul
push
icebp
dec
mov
xchg
shrl
loop
and
insb
loope
mov
inc
test
mov
ljmp
jb
imul
dec
movsb
dec
sub
pushf
flds
addl
cmp
outsl
inc
popf
jno
rcrb
mov
mov
pop
lahf
xor
in
lret
mov
cmovns
cwtl
mov
and
adc
movsb
sbbb
fs
add
xchg
and
xchg
xlat
imul
xchg
ss
xor
in
testb
movhps
insl
cltd
mov
mov
jne
in
sub
mov
xor
xlat
xor
push
stc
in
sbbl
dec
and
jae
insl
icebp
mov
xor
cmpsb
insb
mov
lds
dec
popa
fdivr
sbb
jo
popa
stos
call
mov
shll
dec
cmp
sahf
shrl
add
push
cmp
pop
xchg
mov
ret
int
lret
out
or
test
daa
sbb
or
mov
sti
mov
and
lret
and
xor
aam
daa
lcall
pop
adc
pop
into
fisubrl
xchg
outsl
mov
scas
inc
xor
sbb
dec
mov
and
cmp
push
push
mov
or
pop
or
nop
shll
lret
test
dec
push
std
mov
cmp
insl
mov
mov
rcll
fwait
imul
lahf
daa
les
push
stos
pop
aaa
xlat
outsb
dec
sbb
jg
aaa
mov
mov
ficomps
push
lea
cli
inc
push
and
push
ja
pop
fsts
in
sub
dec
add
bound
inc
negb
out
push
jl
fildll
push
pop
int3
mov
std
jge
cmp
add
mov
xchg
stc
sub
test
test
mov
jne
add
hlt
mov
inc
sbb
ret
mov
sahf
bound
test
popf
mov
push
loope
mov
xchg
mov
mov
xchg
jmp
je
mov
dec
mov
add
cli
xchg
and
xchg
adc
push
and
pop
mov
pop
cwtl
das
cmp
sub
and
dec
push
popf
sbb
es
cmp
mov
sbb
ds
dec
mov
jno
stos
stc
jno
or
pop
pop
lret
jnp
loop
jae
inc
int3
enter
scas
ret
outsb
add
mov
rcr
pop
cmp
cmc
arpl
mov
inc
add
xchg
sbb
xchg
ss
cmp
mov
shrd
popf
inc
xor
inc
test
mov
mov
mov
pop
cmc
inc
hlt
lret
mov
sarl
popf
sub
mov
je
and
test
fnstsw
rcrl
inc
scas
dec
fdivl
jmp
dec
mov
mov
pop
xor
stos
dec
stos
inc
xchg
arpl
jg
mov
stc
test
ficoml
add
xlat
lea
or
jle
out
imull
sub
jge
cs
mov
push
insl
es
sub
xchg
xchg
cmp
and
jg
mov
ret
sbb
or
cwtl
adc
addr16
lcall
cmp
cmp
push
sub
aad
outsl
dec
fdiv
mov
jecxz
add
dec
push
fdiv
push
fcomp
ljmp
adc
pop
cmpsl
test
adc
sub
movsb
cli
pop
sbb
inc
rolb
aad
lods
xorl
adc
mov
loopne
jle
cmp
push
ret
rcrl
sbbl
dec
sub
int
in
cwtl
popa
dec
jecxz
mov
pop
out
lock
or
gs
mov
inc
hlt
mov
leave
sbb
or
rcll
nop
sbb
push
mov
fisubs
sbbb
add
cmpsl
pop
js
add
fildl
ljmp
add
and
int3
or
lods
pop
mov
sbb
jnp
call
mov
dec
enter
shrb
sbb
cs
cmp
sbb
add
inc
bound
cmc
les
bound
cmp
roll
fcomps
cmc
adc
sub
test
stos
xor
das
mov
push
or
mov
mov
xchg
pop
popa
jl
push
jne
cmp
mov
sub
nop
outsb
ficomps
adc
push
push
test
psubw
pop
repz
and
cmpsb
mov
pop
ret
or
inc
adc
addr16
pop
jnp
adcl
mulb
fdivrl
cld
jg
test
ds
mov
clc
pop
jl
shl
mov
mov
pop
in
stos
or
cmp
out
xor
or
xor
insl
cmp
sub
fdivp
mov
pop
xor
add
mov
inc
aaa
test
xchg
cmp
jmp
aam
pop
lock
idivb
xor
aam
cld
sar
and
pop
jmp
inc
jg
jb
negb
lock
inc
adc
mov
add
inc
push
or
sub
mov
cli
test
sub
cmp
inc
popa
icebp
jne
iret
loope
daa
lea
xor
pop
mov
andb
fists
cmp
aaa
into
sbb
int3
leave
xchg
or
rolb
es
push
aas
cld
hlt
mov
pop
test
into
lods
adc
adc
mov
push
mov
pop
popf
xor
int
pop
repz
mov
fistps
jl
les
pushf
sub
fwait
jl
cltd
aas
ret
or
lea
aaa
testl
les
mov
test
push
push
movsb
cs
cmp
cli
sbbb
sub
sahf
dec
ret
pop
mov
xchg
fistps
jns
mov
sub
dec
add
push
insl
push
lret
fisttps
test
jg
fsubrs
push
int
cmp
subl
mov
cmp
ss
pop
pop
jne
xchg
inc
popf
in
lods
mov
push
jns
shl
movsl
cmp
loope
test
mov
jle
jne
iret
cmpsb
ja
mov
or
jge
add
test
and
je
in
xor
js
ljmp
jo
mov
sub
push
jb
in
lahf
mov
test
out
and
pop
test
jg
mov
push
push
add
inc
push
jmp
sbb
popf
mov
cmpsb
jmp
mov
push
pusha
ss
outsl
daa
dec
sbb
ja
imul
mov
xor
aas
jecxz
out
jne
inc
cmpsl
stc
nop
fsts
sbb
pop
xchg
mov
loope
sub
add
add
pop
dec
inc
lods
xor
in
jbe
insw
add
ds
das
dec
in
cmp
stc
sub
adc
add
xor
lahf
jg
xor
xor
outsl
xchg
cs
fwait
insl
test
sbb
or
inc
xchg
mov
adc
jne
jo
mov
call
in
and
pushf
test
fcompp
mov
sub
loopne
clc
mov
in
or
daa
pop
stos
jne
dec
pop
lock
add
xor
mov
fnstcw
mov
lock
and
dec
dec
lds
sub
pop
cmp
cmpl
inc
xchg
inc
jno
adc
mov
stc
aas
mov
es
add
rol
sub
dec
cmp
lods
mov
loopne
arpl
pop
sbbb
decb
jo
mov
xchg
jg
mov
lds
in
jecxz
jge
int
mov
nop
sbb
mov
repnz
mov
sbb
pop
data16
iret
pop
jbe
outsl
push
dec
or
subl
dec
iret
movsb
ja
cmc
rol
cmp
insb
js
imul
pop
push
jecxz
movsb
cmp
add
push
add
andl
push
or
lret
lcall
xchg
mov
mov
ss
movl
dec
dec
out
fs
ds
push
sub
call
mov
inc
fsincos
or
popa
je
pop
adc
mov
lret
mov
or
or
insl
lea
fdivr
inc
push
test
push
hlt
and
cmp
es
jge
out
mov
stos
rorb
lret
cmpsl
sub
dec
and
dec
cmc
mov
std
push
fstl
ja
cmp
imul
lret
sbb
and
into
or
cld
push
and
bound
mov
ljmp
mov
mov
pop
cmp
or
cs
sbb
jne
insl
add
xchg
aaa
pop
push
add
fs
sbb
mov
xchg
mov
push
dec
orb
push
adc
je
mov
sbb
sti
mov
outsb
cli
cltd
inc
sbb
aad
ret
xchg
add
std
xchg
sub
jb
out
fisubl
fs
push
dec
test
jnp
xor
add
ffreep
cmp
cld
jns
aas
and
mov
xor
hlt
lock
sbb
sub
and
push
jbe
adc
mov
pop
test
fldcw
cmp
and
sbb
movsl
xchg
test
test
jbe
adc
xchg
test
sbb
push
lods
push
push
pavgb
pop
sarl
ret
lods
adc
mov
xor
cmp
add
and
sar
xchg
mov
clc
push
mov
popf
and
in
mov
adc
mov
rorb
or
mov
fwait
iret
inc
aas
add
imul
hlt
dec
push
in
jl
jb
rcrb
mov
sub
mov
dec
push
cmp
xor
dec
lcall
nop
lret
in
out
fnstenv
outsb
jo
xchg
testl
rcll
imull
sbb
loopne
add
mov
and
ret
pusha
inc
stos
test
xchg
xor
lcall
mov
and
test
stos
lds
fnstcw
imul
adc
sbb
mov
adc
out
cwtl
pop
arpl
test
mov
rcrb
dec
mov
leavew
outsl
mov
push
mov
into
fcoml
inc
leave
push
sahf
out
push
fs
xchg
inc
push
adc
lret
push
xchg
sub
mov
sub
mov
push
jmp
sarl
out
dec
xchg
cmp
ss
sti
mov
rcll
push
dec
mov
add
push
adc
hlt
sub
fwait
push
or
mov
fidivs
cmp
insl
jns
mov
lock
pop
enter
jmp
out
fdivp
adc
pop
sub
insl
pop
fisttpll
lcall
and
nop
imul
mov
cmc
test
scas
pushf
dec
sbb
push
sti
popw
ljmp
dec
push
pop
out
cmpsl
mov
mov
cmp
test
mov
enter
sub
aad
pop
outsl
loope
mov
mov
stc
rolb
leave
mov
pop
and
prefetch
das
xchg
cwtl
out
xlat
dec
movsb
jo
out
mov
lret
and
mov
push
adcb
sbb
jno
scas
inc
hlt
aam
loop
mov
lea
push
mov
xchg
jbe
lock
dec
mov
test
push
xchg
icebp
jle
mov
insl
mov
push
pushf
daa
push
inc
daa
mov
mov
xor
sub
cmpsl
ds
shlb
fldl
sbb
test
xor
clc
daa
out
mov
pushf
sub
lret
and
enter
and
repz
das
mov
iret
xchg
inc
inc
dec
fnstenv
mov
cmpsb
sbb
shl
pop
jae
cmp
dec
adc
mov
jg
fnstenv
xchg
mov
out
push
mov
repz
addb
ds
inc
call
push
mov
aas
and
pop
xchg
jno
fisubrl
rorb
stos
cwtl
and
and
inc
fdivrs
add
ja
je
js
fstps
mov
sbb
sti
sbb
popa
dec
lea
sbb
jb
roll
test
or
xor
mov
xor
cmpsl
out
lods
pop
inc
jp
sub
in
xlat
mov
fidivl
inc
rcrl
stos
shll
xchg
cmpsl
aam
adc
xchg
jle
int
mov
pusha
push
sarl
mov
dec
inc
leave
sbbb
xchg
sub
lret
repz
inc
ds
dec
pop
pusha
into
fnstsw
imul
test
jmp
into
jno
mov
mov
inc
sahf
and
out
popa
xchg
and
adc
pop
mov
hlt
aaa
iret
or
sbb
ja
jnp
hlt
mov
in
test
ja
add
jl
pop
es
or
jnp
scas
adc
not
cld
jae
aam
jmp
mov
pusha
cld
je
bound
push
or
stc
mov
mov
das
mov
mov
push
test
test
pop
sub
sbbl
loopne
lods
sub
lret
pop
xchg
scas
aad
out
mov
addr16
fsubrp
test
hlt
cmc
adc
pop
fidivs
out
mov
mov
jno
cli
dec
add
nop
pop
addb
cmp
mov
mov
ret
enter
jmp
and
push
mov
push
mov
xchg
std
gs
out
andl
pop
js
add
aaa
mov
xor
lcall
adc
in
jno
imulb
sbb
orl
dec
dec
scas
inc
adc
and
popf
mov
inc
fisttpl
sbb
push
xchg
es
push
loope
stc
inc
stos
mov
ficoml
jmp
rcrb
stc
je
xchg
mov
nop
add
add
les
js
mov
inc
in
idivl
mov
aam
pop
movsb
cltd
adc
and
jmp
and
xchg
lret
clc
test
xor
int
cmp
dec
fdivs
repnz
sbb
setg
mov
pusha
inc
rcrl
mov
outsb
daa
mov
out
popl
pop
xchg
cld
jmp
sbb
jbe
add
mov
and
pop
scas
inc
adc
jbe
fdivrl
push
imul
mov
das
mov
dec
mov
xchg
push
sub
sbb
out
sbb
adc
cmp
fcoml
mov
sbb
xchg
loope
push
pop
add
into
mov
xlat
outsl
ret
loope
fsts
pusha
and
pop
mov
jns
sti
mov
inc
xlat
mov
out
xor
addb
arpl
fs
jle
into
push
xlat
add
cmpl
and
jns
cltd
pusha
sbb
aam
cmpsl
and
add
inc
hlt
lcall
dec
into
jp
jmp
jns
xchg
inc
xlat
lret
sub
lock
mov
sbb
bound
into
pop
jo
push
stos
ss
gs
repz
scas
inc
mull
fwait
sarl
push
jmp
sbb
jae
ret
push
bnd
aaa
stos
inc
xor
enter
jno
jo
lret
inc
and
lcall
je
push
pushf
pop
xchg
push
rorl
pusha
push
cli
xchg
insl
cmc
repz
xchg
push
adc
fisttpll
call
or
gs
pop
inc
dec
mov
imul
shll
adc
clc
enter
add
sub
mov
mov
fcoms
cmpb
cmp
lea
mov
out
aam
and
cmp
pop
push
pop
jmp
lds
and
test
pop
dec
pop
call
mov
and
das
jbe
shlb
jo
les
xor
inc
movsl
pop
fnstenv
jle
fisubs
dec
mov
inc
push
jb
mov
stos
fisubrl
xchg
fidivrs
add
and
inc
fistpl
push
stc
pop
jmp
pop
sub
cmp
sbb
lds
lahf
mov
lds
ss
into
addr16
mov
movsl
lret
data16
test
movsl
add
adcb
pop
in
jge
addl
sbb
popa
insl
loop
xor
jp
movsl
pop
insb
jecxz
mov
xorb
lds
fisttps
mov
and
sbb
and
sub
fs
ja
frstor
dec
fs
jl
pop
test
xchg
adc
cmp
mov
sbb
jge
aam
jae
or
push
jne
lret
push
mov
jg
adc
mov
cmp
and
je
inc
xchg
add
mov
push
aad
test
and
dec
imul
pop
mov
out
mov
in
mov
mov
test
gs
sbb
lret
arpl
mov
mov
daa
jnp
lods
mov
and
add
fstpt
in
cmp
sub
daa
cmp
pop
or
jl
push
or
fdivrl
or
adc
mov
mov
test
add
insb
fimuls
call
or
ds
push
cwtl
cmp
fcmovb
pop
or
vpaddusw
mov
jp
scas
add
clc
jno
jns
xor
and
push
out
test
lahf
data16
mov
mov
test
lock
mov
pop
fisubs
mov
push
or
cmc
mov
add
aaa
fnstcw
cmpsl
sub
cltd
cs
lret
std
imul
fs
ror
push
faddp
mov
daa
inc
fadds
test
lods
jp
rcrb
push
add
mov
stc
mov
loopne
pop
div
mov
frstor
sbb
mov
pop
clc
ret
lret
sub
loopne
sub
sarl
sub
aas
inc
daa
outsl
jmp
cli
aam
jno
cmp
pop
mov
stos
call
mov
sbb
adc
push
mov
dec
out
xor
pop
mov
aad
or
xchg
pop
jb
mov
mov
push
pusha
outsl
test
sti
repnz
test
clc
es
test
outsb
pusha
aaa
std
test
shll
mov
cwtl
mov
paddsb
add
addb
push
or
pop
mov
ret
xchg
std
loope
fidivl
mov
lret
jecxz
fnstcw
repz
popf
scas
xchg
xor
lahf
dec
jmp
push
stos
add
fxch
decb
or
bound
cmp
push
out
mov
test
jno
pop
mov
jno
mov
into
sbb
push
adc
js
sti
sub
lret
mov
cmp
pop
adc
or
ret
jg
dec
xor
cmpsb
xchg
inc
lds
fs
scas
mov
fldl2t
xchg
push
cmp
cmpsl
test
jne
leave
push
cli
jg
mov
and
push
ljmp
jno
stc
fildll
lds
sbb
ds
arpl
incb
test
adc
inc
xchg
mov
fiadds
cs
cmpsb
cmp
addr16
in
jne
sub
or
dec
xlat
and
cmp
xchg
sub
out
mov
adc
jecxz
cmc
clc
scas
mov
xor
pop
mov
stc
mov
xor
fimull
pop
andl
pop
sub
push
ds
xlat
repz
or
cmpsl
aam
push
mov
mov
icebp
mov
sub
mov
jle
fistpl
inc
add
sub
mov
jb
jle
testl
notl
les
cs
dec
add
push
outsl
insb
add
xchg
mov
lds
orb
hlt
xor
stos
mov
sub
xlat
mov
or
add
lods
lods
cmp
sbb
in
cltd
cmp
cs
mov
in
sub
fucom
negl
repnz
in
sbb
mov
jmp
xlat
aam
call
dec
or
nop
iret
mov
iret
mov
cli
fs
sub
pop
lock
sbb
mov
pusha
or
pusha
popf
jmp
pushf
scas
nop
int3
mov
movl
pop
push
fdivl
mov
xor
mov
js
dec
xlat
jns
mov
dec
and
mov
enter
sbb
jo
jl
test
jl
fnsave
push
pop
lods
sti
cmpsl
popf
mov
int3
add
aas
adc
and
fsubl
fwait
pop
mov
divb
jne
lahf
sbb
jns
stos
cmp
stos
inc
les
dec
scas
dec
mov
dec
sub
and
adc
dec
mov
xlat
out
in
cmp
pop
cmp
mov
shl
cmp
lods
xor
ja
xchg
mov
pop
mov
lret
push
ljmp
call
add
pop
movsb
sub
mov
mov
mov
and
call
adc
test
sbb
cli
inc
sahf
pop
in
jae
inc
into
loopne
push
sub
jno
clc
mov
pop
sbbl
pop
cmp
test
mov
mulb
movsl
stc
jb
xlat
insl
pop
mov
lea
lret
pop
push
jae
and
push
mov
inc
inc
cmpsl
loop
lahf
sub
adc
jb
push
aad
aas
sar
daa
mov
pop
pop
je
pop
das
mov
push
call
or
out
inc
sbb
int
in
pop
cwtl
out
or
mov
jo
ja
cmc
lret
mov
fsubp
push
adc
testb
lock
mov
jnp
enter
int
push
dec
push
push
arpl
push
lret
enter
pop
loope
push
mulb
fsubr
mov
add
cmp
fstpl
outsl
xchg
inc
cmpsb
jecxz
rclb
cmpl
sub
orb
xor
aam
movsb
inc
sbb
popa
add
data16
test
pusha
outsl
push
xchg
clc
mov
fwait
add
xchg
add
mov
push
push
adc
lcall
test
pop
or
mov
fcoml
int
add
push
xchg
cmp
dec
jbe
sbb
ret
dec
add
mov
movsb
mov
in
test
inc
dec
inc
out
loop
cld
mul
in
std
sbb
inc
cmpsb
lods
mov
xchg
mov
push
std
lret
out
mov
insb
and
leave
adc
jnp
xchg
das
imul
add
shll
cs
jg
cmp
mov
sbb
stos
and
fimull
test
negl
lock
mov
jg
shr
nop
mov
sbb
or
sub
fcoms
or
add
sti
aad
ljmp
insb
pminub
xchg
mov
or
jo
pop
test
xor
pop
ret
jmp
jmp
mov
out
imul
dec
jecxz
cmp
aas
mov
pop
mov
shlb
gs
shl
outsb
pop
ror
cltd
mov
into
leave
lret
jae
adc
cld
mov
xchg
pop
hlt
adcl
and
lret
push
xor
inc
push
jbe
push
das
in
cmp
add
pop
pushf
sub
je
imul
and
jge
aas
mov
xlat
out
inc
call
es
sub
dec
call
cmp
sbb
sbb
xchg
aaa
fwait
repnz
lahf
cltd
lcall
dec
inc
inc
xlat
mov
fcompl
or
xchg
mov
movsb
jl
ljmp
push
fstl
movsl
sti
pop
movsl
nop
fld
gs
sbb
sub
xlat
ds
lahf
lock
lods
sbb
aad
les
mov
pop
cmp
aas
xor
xor
pop
cli
aam
mov
mov
testl
adc
clc
gs
std
cwtl
pop
test
and
and
adc
pop
test
fistpll
fdivrl
sub
in
repnz
xchg
rcrb
adc
fwait
mov
push
cmp
decw
dec
and
iret
lahf
add
cmp
adc
daa
lret
loop
mov
enter
cld
push
test
push
ret
dec
popf
sbb
lds
pop
sbb
into
dec
jmp
test
cld
jb
stos
jp
stos
repz
int
unpckhps
mov
insl
sub
repz
imul
mov
aaa
push
stos
in
pop
adc
push
jmp
rcr
mov
cmp
mov
xor
and
push
in
or
in
cwtl
push
sub
insb
and
mov
mov
ja
jl
cwtl
xchg
repnz
cld
and
mov
mov
in
sub
cmp
mov
add
cld
pop
jne
jns
xchg
pop
lods
ficoml
lret
das
repnz
adc
dec
inc
in
fistl
xor
jae
mov
sbbb
andl
xchg
mulb
and
or
mov
fidivs
dec
pop
jo
jle
test
xor
mov
mov
add
clc
xor
xor
jge
in
xor
cmpsb
jo
mov
push
fs
out
mov
mov
outsb
sbb
movsl
adc
xchg
cmp
rcrl
in
xchg
mov
add
mulb
les
mov
out
pop
or
sub
cwtl
inc
aas
or
sti
movsb
xor
mov
mov
pop
push
xor
lea
and
xor
jg
sti
popf
pop
ss
add
mov
or
add
mov
sbb
xchg
sbb
rorb
or
out
inc
arpl
in
cmc
arpl
lods
sub
add
out
and
adc
insb
cmp
out
cmpsb
insw
adc
outsl
xor
sbb
mov
push
push
pop
inc
outsb
aaa
hlt
fwait
cmpsb
or
cwtl
mov
daa
cmp
xlat
xchg
dec
push
leave
xor
je
or
mov
cs
jbe
pop
or
mov
dec
fidivrl
lods
test
cltd
sub
pushf
lods
sbb
cmp
addb
popf
out
xor
pop
jmp
jo
rcll
dec
fcomps
adc
mov
xchg
jns
push
lds
test
imul
insl
sbb
insl
cld
xchg
cmp
adc
lcall
jecxz
pop
xlat
or
aas
out
mov
scas
dec
pop
imul
mov
ficomps
mov
sbb
outsl
movsb
push
or
jo
dec
shll
out
sbb
dec
nop
mov
pop
imul
jbe
insb
jecxz
push
lods
dec
insb
loopne
xchg
fcoms
enter
pushf
inc
popa
xor
leave
push
out
pop
fdivrs
or
stos
xchg
pop
fdivl
xor
xor
out
mov
push
pop
icebp
das
ret
loope
js
das
push
clc
mov
xor
dec
jbe
xor
xor
iret
inc
inc
add
push
inc
push
pop
pushf
and
dec
mov
daa
and
lods
sub
lret
mov
pushf
in
sub
pushf
arpl
inc
mov
push
movl
inc
or
adc
ss
fbld
or
adc
and
add
pusha
and
xchg
sbb
fisttpll
jmp
fwait
aam
fs
test
sbbb
xchg
out
gs
cli
push
in
dec
sbb
adc
cmp
add
fsubs
sti
xchg
mov
and
fidivs
mov
out
cmp
daa
inc
ret
pop
pop
in
das
lret
std
dec
add
addr16
sbb
aad
cli
ret
mov
pop
and
mov
cmp
cmpb
fisttpl
movsl
jns
cmp
sbb
jl
cs
mov
movsb
imul
paddusb
push
xor
mov
mov
add
push
outsl
lret
cmp
shlb
xchg
stos
es
cmpsb
clc
fadds
xchg
je
cltd
out
mov
les
pushf
push
int
dec
call
lahf
ss
shll
push
mov
xor
movl
mov
jne
popa
arpl
lods
inc
cmp
lcall
stos
out
sbb
int
call
xchg
add
cmpsl
sbb
mov
outsl
mov
out
inc
mov
notb
sub
in
test
sbb
or
dec
lock
mov
aas
dec
in
rol
push
into
xchg
das
inc
dec
das
mov
popa
jecxz
sbb
aaa
shrb
cmpl
pop
sbb
jnp
popa
clc
and
inc
jg
js
xchg
pop
push
movsb
cmp
mov
js
ret
jle
mov
mov
jne
push
movsl
in
mov
sub
aas
fcomip
imul
inc
cld
jnp
sub
inc
data16
push
xchg
mov
std
ss
push
lret
in
fldpi
fmulp
xchg
scas
inc
out
movsl
mov
lds
dec
jecxz
sti
test
sbb
mov
inc
cs
lcall
pop
add
lods
inc
insl
rorl
mov
sub
mov
hlt
lcall
das
push
sbb
pop
leave
jl
pop
mov
addl
lods
add
xchg
pop
or
adc
mov
adc
lods
roll
or
dec
cmp
ret
ds
pop
mov
dec
adc
jae
test
pop
sub
aad
cld
outsl
rorb
pop
mov
add
fisubrs
push
mov
aas
mov
or
out
cwtl
or
jns
fbld
fnstsw
psrad
mov
add
and
cmp
mov
mov
mov
sahf
loop
rol
out
clc
std
push
push
std
ret
add
lods
push
shll
mov
lret
add
dec
mov
xor
inc
fidivrl
push
mov
mov
ds
enter
cmpsb
or
in
in
pushf
cli
loope
lret
pop
mov
dec
ss
push
mov
inc
in
fwait
repnz
add
xchg
flds
jmp
lods
xchg
and
insl
ja
fisubl
or
lret
push
pop
cmpsb
adc
add
scas
jp
addr16
jmp
xor
mov
mov
sub
push
call
ret
gs
adc
mov
lods
ss
add
xor
cmpsl
inc
stos
mov
push
mov
inc
insl
fs
add
xor
popf
sub
rcrb
fcomps
adc
dec
inc
ja
mov
inc
or
cs
movsb
loope
pop
das
pop
testb
jb
add
adc
and
add
jge
pop
mov
popf
adc
push
outsb
pop
mov
repnz
xor
repnz
insl
mov
or
dec
ds
sub
pop
and
inc
enter
lods
shrl
outsb
fucomp
mov
leave
inc
in
pop
or
aam
mov
lock
jns
xor
cs
adc
push
and
rcrb
cmp
push
mov
lea
gs
mov
push
and
leave
loope
or
rclb
push
jecxz
mov
push
jecxz
test
rol
lret
mov
repnz
cmc
scas
fstp
inc
jns
js
fsubrs
sub
sbb
orb
sub
aam
pop
mov
in
leave
shrb
out
leave
js
dec
int
jae
fwait
das
inc
in
cmp
jo
push
sub
mov
mov
inc
iret
push
test
int3
outsl
mov
jecxz
imull
add
loope
aam
jg
cmp
loop
dec
add
jbe
mov
jle
or
xor
iret
rcr
outsl
sbb
and
test
outsb
aas
fwait
mov
xchg
adc
add
pop
cmpsl
lds
les
mov
ret
pop
das
jne
rcrb
xchg
hlt
scas
pop
jb
jecxz
sub
xor
xchg
mov
xchg
fsubl
imul
inc
inc
pop
ret
cmp
imul
pop
repz
into
mov
sbb
push
push
imul
insl
test
js
rclb
xchg
sub
test
and
or
ret
push
mov
iret
or
add
add
nop
adc
pop
mov
lret
xchg
jns
stc
lods
test
imul
mov
push
lret
mov
test
into
dec
lcall
dec
gs
inc
fidivrl
shrb
mov
popa
or
cmp
mov
jns
jne
inc
les
pop
sbb
imulb
push
imul
push
or
jp
pusha
sahf
push
inc
push
std
and
in
popa
fisubrs
sub
mov
push
mov
outsl
rolb
add
aaa
mov
jo
xor
mov
pop
fadd
dec
xchg
das
jo
mov
cmp
mov
aas
andb
fdivs
lock
add
cmp
mov
pop
xchg
jl
jmp
mov
sti
xchg
in
push
jbe
test
mov
adc
lret
jbe
jno
xlat
jb
imul
test
push
movsb
xlat
stos
in
pop
sbbl
push
rcl
popa
stc
out
aaa
mov
stos
mov
add
fdivr
out
ja
and
addr16
hlt
jmp
cmp
and
xorl
mov
mov
aad
inc
ss
sub
cmp
gs
xchg
lcall
push
test
test
lds
and
xor
xchg
xor
addb
cwtl
add
or
inc
lcall
rcrb
lahf
sub
xor
xchg
jno
xchg
cmc
push
push
or
adc
loopne
inc
jecxz
or
mov
mov
cmp
rcr
cwtl
sub
pop
xchg
lret
xchg
ret
test
daa
cmpl
inc
and
jne
pop
dec
nop
sbb
lret
and
pushf
stos
testl
cmpsb
mov
dec
dec
shll
mov
push
call
jb
cld
mov
lahf
outsb
jle
xor
in
out
fmuls
inc
icebp
xor
mov
mov
call
leave
je
pop
test
pop
pop
icebp
out
popl
mov
cmp
je
push
pushf
push
sti
int3
divb
jo
sbb
pusha
mov
sti
or
out
jb
sahf
pop
shrb
into
mov
test
rorb
xchg
pop
loop
mov
enter
mov
fstpt
lods
push
cmpsb
jne
daa
inc
sub
in
mov
fstl
fnsave
decl
cltd
xor
lret
sub
in
push
xchg
movsl
data16
jo
cwtl
sub
stc
sahf
fwait
and
push
cmp
jg
icebp
leave
je
add
sbb
pop
dec
adc
xchg
jmp
sti
inc
xchg
push
adc
adc
fwait
push
sbbl
shrl
push
xchg
dec
decl
dec
outsl
mov
orb
or
jnp
xchg
lfs
movsl
in
popa
lea
loopne
sub
je
icebp
es
cld
xchg
decb
aad
adc
jmp
push
xor
xchg
add
bound
or
xor
or
inc
xlat
push
movsl
cmp
cmp
arpl
xchg
imulb
xor
add
jl
stc
pop
dec
adc
and
dec
test
rclb
mov
dec
frstor
push
pusha
adc
imul
push
ljmp
jno
pop
test
xor
or
movsl
push
mov
mov
lds
jge
push
or
insl
dec
sub
insl
mov
psubw
js
pop
loop
shlb
mov
jbe
xor
mov
and
jg
pop
repz
push
xor
or
adc
xor
push
into
xor
mov
aas
int3
ret
test
shll
push
fidivrl
sbb
es
adc
cmp
pop
ret
mov
notl
xor
adc
sub
test
rorl
sbb
ds
lea
aad
adc
pop
add
dec
mov
cmp
out
jge
adc
and
fwait
inc
mov
ljmp
dec
aaa
push
leave
sub
dec
xor
and
push
sbbb
jge
int
xchg
pop
mov
xchg
sbb
int3
loop
push
outsb
in
or
je
mulb
loope
cmp
jecxz
mov
movsb
aam
rol
ret
in
lods
rcrb
aam
cmp
adc
loope
int
shl
aam
mov
test
fimull
test
or
and
cmp
fs
sbbl
sbb
sbb
push
mov
dec
and
cmp
pop
sbb
push
adc
jb
test
cmp
jo
negb
cmc
dec
mov
fidivs
fmul
jp
sub
repnz
mov
clc
jmp
scas
push
and
jecxz
inc
lcall
mov
or
mov
add
xor
cmpsb
mov
mov
jnp
sbb
push
loope
decb
xchg
out
pop
cmp
enter
dec
insl
ds
dec
fucomip
popa
jne
iret
add
push
push
inc
andl
addl
and
or
push
push
dec
fsubrs
adc
push
or
aaa
xchg
cs
xlat
add
stos
fisubl
mov
xlat
aam
xor
add
pop
scas
pop
nop
sbb
inc
lahf
fbld
push
rorb
in
jae
mov
push
inc
ret
cmpsb
cwtl
cs
sbb
xor
mov
cmp
and
adc
pop
cmp
pop
jecxz
es
mov
adc
and
mov
push
dec
lea
push
mov
push
mov
adc
xor
cmpsl
xor
dec
jl
aaa
iret
mov
and
popl
in
mov
and
sbb
gs
or
icebp
dec
sub
adc
adc
insl
pop
lods
mov
push
mov
cld
xchg
mov
sub
stc
movb
vmread
xor
xchg
push
scas
fcmovnu
pop
repnz
arpl
jns
lods
cwtl
stos
inc
push
fmull
popa
mov
inc
mov
adc
in
push
push
cmp
icebp
adc
enter
leave
jno
mov
in
add
or
je
sub
inc
test
icebp
aaa
push
out
movsb
pop
shrl
sub
fs
lea
lret
push
movsl
push
jmp
cmc
lret
addr16
jmp
iret
je
sarb
xor
scas
out
dec
sbb
adc
sbb
imul
sbb
cmpsl
mov
push
mov
nop
pop
lcall
call
in
in
orl
inc
aaa
cmpsb
jb
testl
inc
sbb
sub
stos
mov
xchg
mov
xlat
add
cmp
xchg
aas
mov
xchg
aaa
sbb
pop
mov
push
mov
mov
scas
out
push
jmp
movsl
xchg
aas
insl
ret
repz
xchg
subl
cmp
pop
test
xor
xchg
dec
push
lds
xlat
rcl
mov
pop
xor
ljmp
mov
stos
jecxz
loopne
inc
sbb
mov
mov
jbe
cmp
mov
mov
jb
test
in
xchg
adc
sub
in
cmc
add
pop
xchg
test
ja
lret
xor
xchg
fs
hlt
xchg
bnd
xchg
sbb
mov
mov
js
mov
jbe
jb
pop
cmp
iret
loope
jbe
fidivrs
add
ss
cmpsb
push
ljmp
cmpsl
mov
in
test
popf
repz
cmc
or
and
push
mov
and
or
sbb
pop
sar
pop
mov
xchg
jo
lahf
push
mov
out
jne
push
mov
repnz
int
push
fstps
negl
jmp
sbbb
push
xchg
xchg
sarb
dec
add
stos
sbb
adc
popf
add
cwtl
xor
sub
orl
mov
in
aad
adc
sub
pop
jns
add
xor
sbb
test
mov
notb
sbb
jnp
aam
pop
pop
jp
jb
inc
arpl
inc
sbb
mov
bound
pop
loop
ja
adc
sub
and
sbb
cld
pop
jg
or
push
push
xchg
pop
cli
add
inc
adc
push
push
mov
aaa
jmp
jecxz
rclb
push
loopne
sbb
inc
push
or
lds
das
loopne
pop
aad
popf
lock
aaa
pop
lods
popa
ja
inc
lret
fbld
jecxz
stos
test
setl
cmp
xchg
testb
sbb
dec
out
inc
pop
dec
lcall
push
out
add
inc
mov
or
jno
loop
mov
dec
mov
shl
xchg
sub
adcl
add
ret
imul
mov
fucomp
or
std
mov
xor
push
inc
sti
xchg
sbb
repz
sbb
jns
fmull
das
jp
lods
mov
cmp
fsubrs
in
push
cmpsl
xor
push
jmp
xchg
mov
xchg
pop
mov
stos
sbb
in
xchg
insb
shll
push
iret
addb
cli
xchg
mov
xchg
sub
test
mov
add
pop
outsl
mov
xor
sbb
mov
mov
xor
lahf
adc
je
cmp
pop
adc
out
das
sub
xchg
sub
bound
hlt
push
push
jecxz
mov
inc
cld
outsl
lds
imul
pop
pop
pop
aaa
aad
inc
mov
xchg
inc
fists
outsb
push
sahf
je
sub
scas
mov
scas
ret
push
xor
decb
repnz
pop
jle
mov
jl
mov
icebp
js
roll
push
orl
aas
addr16
adc
cmpsl
mov
xor
push
loopne
das
cmc
sbb
mov
mov
add
fwait
mov
sti
pop
cmp
movsb
dec
stos
jne
jnp
outsb
mov
clc
inc
jbe
mov
das
inc
movsl
xchg
mov
mov
dec
fcomps
adc
jge
in
mov
outsl
add
mov
mov
jbe
into
jae
jo
std
aas
cli
and
dec
dec
stos
ja
jnp
or
dec
inc
lods
call
mov
fildl
sub
movsl
cmp
jle
mov
into
std
cmp
shrl
push
jmp
cmc
stc
inc
in
sub
je
mov
xor
jo
adc
insl
add
mov
sbb
push
inc
mov
sbb
dec
dec
jno
ja
jl
cmp
int3
mov
enter
cmpsb
movsl
sub
insl
push
shl
rclb
mov
das
cmc
jp
in
adc
sbb
sti
dec
ja
add
mov
pop
ss
inc
scas
out
repnz
jb
dec
ljmp
mov
jns
ss
adc
jae
mov
popf
jg
in
mov
xor
std
aam
lock
jb
adc
rcll
pop
and
pop
sbb
and
mov
mov
aaa
addb
pop
sbb
mov
pop
cmp
orl
adc
cmc
insl
pusha
fidivs
lea
xor
addr16
xacquire
scas
inc
add
cmp
icebp
jae
push
sub
pop
sub
pop
lods
pop
nop
and
leave
es
outsb
rorl
or
fildll
sbb
sbb
ret
cmp
sbb
mov
lret
pop
add
inc
iret
mov
mov
push
int3
cmp
fmuls
jmp
int3
insl
out
add
mov
add
leave
adc
sub
push
jge
xchg
out
hlt
mov
icebp
sbb
fs
sbb
mov
sub
subl
insb
inc
sub
push
pop
stos
mov
lods
cmpsb
pusha
lcall
push
adcl
mov
inc
inc
or
jl
sub
imul
xor
push
icebp
in
xchg
cli
xchg
mov
adcl
mov
jmp
inc
push
add
mov
mov
hlt
jnp
mov
ret
mov
mov
jle
fsubrl
sbb
pop
cmpsl
aas
ljmp
mov
mov
das
lret
fnstenv
subl
inc
fsubrs
ljmp
sbbl
mov
pop
mov
in
push
xlat
orl
icebp
in
mov
xrelease
les
cli
orl
dec
mul
mov
add
int3
xor
jno
je
dec
jmp
cmpsb
dec
adc
pop
add
bound
inc
add
ss
push
ds
adc
fwait
cmp
adc
or
sub
addr16
cmpl
xchg
xchg
loop
inc
fwait
shlb
mov
clc
or
sbb
xor
std
repz
gs
sti
cmpsl
cmp
xor
cwtl
imul
adc
mov
sahf
pop
rcll
dec
pmaddwd
jmp
cmp
push
je
pop
dec
mul
imul
jne
mov
and
mov
xor
imul
aam
push
lret
mov
inc
leave
dec
adc
outsl
repz
jbe
lods
and
mov
pop
jae
and
mov
inc
sarb
push
data16
xchg
sub
ds
push
inc
cmpsb
sbb
push
lcall
push
cwtl
or
xchg
icebp
jge
out
add
mov
test
cmpsb
stos
xor
pop
hlt
jmp
sub
ret
dec
dec
in
call
inc
test
add
test
jp
sub
leave
mov
out
mov
test
jg
rorb
add
daa
pop
test
xchg
movsb
int3
lret
cmp
xor
test
xchg
fstpl
in
sub
insb
inc
inc
mov
mov
jmp
push
xlat
and
inc
push
outsb
cmpb
mov
sub
mov
push
mov
call
inc
mov
and
or
cmp
ficompl
ja
pushf
pop
insb
mov
mov
xchg
jecxz
cmpsb
stos
push
mov
sbb
not
shll
int3
es
push
movsl
push
sub
add
xor
fbld
in
pop
ljmp
in
es
std
push
or
xchg
adc
mov
inc
inc
daa
mov
fwait
jp
dec
push
scas
stos
xchg
out
leave
lret
mov
mov
aam
sub
push
fnsave
sub
mov
mov
cmpl
pop
lret
ret
rorb
sbb
inc
pop
sub
je
push
ss
stos
sti
cmp
shl
repnz
sbbb
pop
out
add
inc
inc
jbe
aad
xor
das
cmp
or
mov
sub
jg
sbb
cmpsb
xchg
or
sti
push
or
stc
cld
pop
cmp
ret
out
inc
in
cmp
test
xor
mov
adc
or
mov
jle
or
xor
jne
cwtl
push
ficomps
cmp
sti
cmc
out
push
sub
fidivl
sbb
cmc
jb
clc
xchg
xchg
add
aad
push
shl
or
mov
mov
pop
sahf
mov
mov
inc
fistl
stos
dec
jecxz
ficomps
std
fmull
pslld
or
cltd
xor
cmpsb
fucomi
fneni(8087
inc
in
jno
pop
pop
jmp
sub
pop
cs
mov
pop
sahf
jno
jnp
push
push
mov
cwtl
push
sub
mov
pop
jmp
mov
push
sbb
das
xchg
mov
hlt
lahf
jno
jl
mov
dec
inc
pusha
sub
mov
cli
bound
or
bnd
ds
aas
adc
pusha
pushf
scas
jo
out
sbb
adc
cmp
pop
adc
jg
hlt
push
popa
leave
dec
or
leave
je
in
adc
cli
sbbb
insl
xchg
repnz
in
fcmove
sub
in
sbb
mov
jg
cmp
mov
mov
les
ja
mov
add
call
fwait
mov
push
jnp
js
adc
ret
sbb
sub
imul
sbb
dec
outsl
mov
out
int3
push
aaa
xor
or
ja
arpl
push
sbb
xor
loope
inc
push
bnd
es
cwtl
lcall
and
mov
loope
dec
in
pop
sbb
imul
je
push
and
imul
filds
gs
cmp
in
xor
pop
pushf
xor
push
jbe
test
fcoms
mov
cld
pop
xor
lods
divl
icebp
cmc
and
rcll
pop
cmp
clc
or
daa
sub
xlat
and
arpl
scas
lock
andl
sbb
clc
fs
add
in
fcompl
mov
lea
inc
and
dec
add
movsb
sbb
add
jbe
les
lret
mov
cmp
cwtl
push
mov
lahf
ss
fwait
xor
rolb
jecxz
dec
mov
rol
subb
and
movsb
lret
cmc
adc
xchg
hlt
xor
rcrl
cmpl
add
cmpl
or
mov
shrb
scas
add
pop
repnz
bswap
enter
stc
in
mov
xor
iret
mov
lock
out
fisubrs
lea
jge
xlat
inc
sbb
sti
clc
popa
lods
mov
mov
cmpsb
pushf
lcall
test
cmc
in
rolb
mov
mov
inc
adc
subb
inc
and
pop
icebp
inc
stos
xchg
andb
ret
lret
fcompl
add
jne
xchg
add
mov
cmpsl
mov
std
hlt
mov
stos
subl
inc
mov
cld
ds
sbb
add
xor
jae
jg
jg
ljmp
push
std
cmp
jge
inc
xor
rcrl
fiaddl
jno
adc
xchg
xor
mov
test
and
lret
int3
cld
and
js
test
mov
aam
inc
mov
fadds
jge
pop
stc
sbb
mov
lret
imul
nopl
mov
cmpsl
cli
test
inc
pop
fmull
jae
dec
sbb
insb
inc
popf
sub
clc
rcrl
push
lods
stos
cmp
scas
hlt
lret
dec
in
or
leave
mulb
in
inc
jno
sahf
mov
pop
pushf
ja
dec
mov
sbb
icebp
mov
mov
push
jae
push
mov
mov
hlt
mov
or
js
xchg
in
addl
je
cli
and
mov
jmp
push
pop
das
nop
mov
lahf
shrl
sub
mov
jp
cmp
stc
nop
xor
sub
or
jle
sub
call
mov
jecxz
adc
mov
jae
push
in
mov
push
je
mov
aad
and
inc
gs
pop
repnz
in
roll
insl
cmpsb
pop
dec
mov
aas
jbe
adc
add
or
stos
cmp
test
dec
das
sahf
mov
and
inc
inc
jb
shlb
xor
jb
sarb
aam
je
out
fiadds
dec
jle
icebp
ss
js
mov
repz
scas
pop
push
ret
stc
push
les
scas
xor
in
or
mov
int3
xchg
andb
repz
jns
xchg
mov
imulb
adc
mov
jg
mov
cmp
dec
in
cmp
pop
push
loop
test
out
jb
cld
adc
push
test
and
out
inc
push
or
push
xchg
sbb
into
andb
inc
movsb
fildll
js
or
cmp
iret
lcall
and
lds
sub
ja
inc
pop
repz
xchg
jge
adc
mov
adc
mov
mov
fdiv
mov
cli
mov
in
sub
mov
movsl
clc
xchg
mov
repz
dec
jge
icebp
push
clc
xchg
xor
pop
cmc
dec
ss
fidivs
shlb
sarb
je
lret
xchg
push
cmc
xchg
mov
jb
mov
xchg
cli
in
aam
ret
iret
adc
jmp
dec
inc
scas
test
dec
shrl
dec
cmp
xchg
jl
sahf
push
data16
mov
jle
dec
lret
fstpl
loope
inc
cltd
scas
inc
and
xchg
cltd
test
cmp
leave
mov
movsl
cmp
ss
ds
sbb
xchg
jbe
les
stos
pushf
dec
adc
pop
cmp
jmp
jbe
clc
cmp
dec
rcrl
jl
test
dec
mov
pop
data16
dec
or
jp
mov
leave
sub
rcrl
es
xor
jp
lret
das
loop
les
mov
inc
adc
scas
fsubp
push
inc
pop
xor
arpl
nop
ja
divl
or
mov
adc
push
cmc
jno
mov
jbe
idivl
fnstcw
hlt
inc
sub
mov
sbb
ljmp
repnz
cmp
mov
movsb
pop
mov
xor
xor
cmp
lcall
bound
in
loope
lds
and
nop
inc
jmp
mov
cmp
mov
xor
imul
test
xor
leave
push
mov
mov
lahf
adc
jp
pop
pop
jb
mov
sbb
inc
push
cmp
imul
fdivs
dec
dec
mov
or
iret
popa
fucomip
adc
popa
dec
and
mov
xchg
xchg
scas
call
lds
fyl2x
sub
mov
xor
xchg
sub
sahf
sub
xchg
out
cwtl
stos
pop
sbb
das
cmp
push
movsb
jns
dec
sarl
mov
and
jle
flds
fisubs
js
paddb
fmul
ret
adc
mov
jg
jp
mov
enter
adc
sbb
mov
in
add
cmpsb
pop
xchg
pop
out
pop
xchg
cwtl
and
ret
xchg
push
stos
adc
lret
data16
cmpsb
sbb
adc
mov
xchg
pop
mov
push
ja
repz
mov
and
sbb
mov
xchg
lock
movsl
xor
add
adc
push
pop
jg
fwait
cld
xchg
adc
sub
mov
pop
in
jge
jge
movsb
scas
aaa
sbb
dec
mov
test
mov
loopne
push
in
imul
and
xchg
test
fwait
mov
out
cmpsl
push
mov
repz
inc
shl
inc
mov
fisubrl
or
jns
daa
xor
add
jp
dec
and
insb
xchg
mov
mov
stos
pop
mov
dec
lret
push
ror
bnd
cmp
mov
cmpsb
nop
aas
push
mov
cmp
lods
paddd
and
sti
xchg
movsb
lret
sbb
cmc
push
cmpsl
jge
sbb
jle
imul
xchg
loopne
xchg
sarl
mov
add
push
jecxz
xlat
adc
jns
sbb
adc
popa
subl
dec
jecxz
dec
adc
addb
mov
test
sbb
mov
mov
test
sbb
mov
push
jnp
xor
pop
pusha
adc
movsb
sub
popa
outsb
mov
nop
pop
scas
fistl
jo
iret
jecxz
pop
dec
pop
ret
shl
sarl
push
js
pop
lcall
dec
add
inc
pop
mov
push
enter
mov
or
xor
rcrl
adc
or
adc
add
test
xchg
xchg
out
or
xor
adc
cwtl
fsubrs
mov
push
test
sbb
adc
in
xchg
out
test
in
xor
daa
rcll
add
lahf
stc
test
loop
mov
idivb
jb
bnd
xchg
mov
in
mov
cmpsl
xchg
pop
add
mov
lea
inc
test
jbe
cmp
mov
sbb
xchg
das
les
jge
pop
sub
outsl
mov
lcall
mov
sbb
push
and
aaa
mov
jbe
adc
aam
dec
iret
shlb
push
jb
ficomps
testb
inc
and
mov
js
fdivr
xchg
ja
pop
call
or
jne
mov
popf
jge
clc
cmpsl
pop
pop
sbb
inc
test
loop
popa
mov
cmp
and
imul
dec
push
cltd
dec
sbb
add
imul
insl
sbb
stos
rcrl
and
rcl
push
add
loopne
lods
in
enter
inc
aaa
xchg
xlat
and
cwtl
add
jo
cld
mov
sbb
mov
stos
pop
inc
jae
fs
cwtl
arpl
cli
mov
and
cwtl
sbb
out
in
push
jb
xchg
jp
mov
bound
in
fdivs
adc
jp
outsl
lods
in
cwtl
xor
stos
jb
sub
adc
cmp
xlat
dec
xlat
aaa
mov
test
rclb
sbb
sbb
fwait
push
std
xchg
movsb
repnz
lds
mov
push
jle
add
es
sub
jnp
jbe
hlt
popa
idivl
fidivrl
push
mov
pushf
xor
jo
loope
out
push
lods
sub
mov
and
and
js
out
lret
cmp
imul
movswl
mov
imul
jbe
js
cmp
or
and
mov
xor
sbb
sbb
pop
dec
push
push
inc
out
jge
jo
mov
xchg
insl
jnp
push
push
push
pop
pop
mov
and
ja
int
loope
inc
rep
adc
rcl
sub
add
call
push
push
cmp
sub
in
push
sbb
ss
test
test
daa
lcall
or
xchg
std
cmp
mov
shll
rolb
fcmovbe
fsts
mov
sbb
dec
pop
mov
mov
sbb
scas
test
fistpll
lods
imul
sbb
or
cmp
mov
mov
mov
or
dec
xchg
cmp
cmp
mov
fidivrs
loope
xchg
pop
mov
cmpb
pop
dec
out
lahf
ds
add
mov
rorl
movsl
clc
mov
xchg
scas
push
shl
andb
leave
mov
push
sbb
cmc
imul
ja
xchg
inc
ror
mov
insl
adc
inc
cwtl
xor
pop
xor
mov
js
pop
insl
pop
repz
aam
xlat
mov
adc
sbb
pop
ds
ja
mov
mov
push
pop
push
jne
jae
pop
test
iret
jecxz
out
mov
arpl
pop
rcrb
loope
das
push
sahf
jp
nop
mov
sub
sahf
mov
inc
sbb
stos
lods
dec
hlt
or
xor
cmc
jge
or
lea
cltd
jg
push
icebp
cmp
loope
aaa
loopne
inc
cmp
into
fs
lea
xor
jmp
lret
loop
inc
mov
pushf
mov
xor
xchg
sbb
add
jle
inc
or
sbb
inc
sbb
je
push
lret
pop
sub
add
mov
xchg
jbe
xchg
xor
push
mov
popa
xor
hlt
gs
mov
jge
and
cmpsl
orl
xchg
stos
inc
mov
or
test
leave
pusha
pop
movsl
lea
jge
in
and
push
call
dec
mov
xchg
jmp
dec
pop
mov
popf
icebp
xchg
loopne
sbb
mov
cmpsl
fists
aam
add
insb
cmpsb
jp
mov
ret
outsb
sarb
lock
push
push
sti
jmp
cmp
add
xor
lret
inc
jb
test
sub
pop
cmpsb
shlb
pop
sbb
enter
mov
adc
fcoms
mov
imul
inc
in
jmp
pop
ja
push
sub
lcall
ljmp
xchg
jl
adcl
add
push
popf
adc
test
jecxz
adc
fcom
call
sbb
movsb
sbb
fnstenv
or
xchg
jb
lods
mov
jecxz
aaa
lcall
jecxz
push
sbb
fisubs
pop
adc
fldl
fcoms
or
mov
fnsave
jle
dec
pop
js
xlat
cltd
nop
sub
mov
rol
sbb
scas
rolb
or
nop
sub
inc
loope
in
sbb
sbb
sbb
imul
loop
mov
aaa
cmp
xor
fdivp
cmp
sti
or
sti
inc
shrl
push
sub
hlt
add
adc
hlt
adc
mov
shl
rcrb
out
jmp
bound
movsb
addr16
push
add
push
test
icebp
stos
add
mov
inc
test
je
aas
push
arpl
inc
flds
test
js
pop
jo
lcall
out
dec
cwtl
adc
es
pop
add
sub
scas
and
mov
cmp
inc
daa
push
shll
shl
xchg
cli
fstps
loopne,pn
sbb
mov
push
push
mov
xor
out
stos
mov
arpl
enter
sbb
mov
les
scas
mov
dec
jnp
inc
or
test
shrb
xchg
add
leave
orl
lods
mov
das
incl
pusha
cmp
fwait
sub
js
arpl
xchg
inc
je
repz
push
lods
andb
into
jbe
jo
mov
aam
sbb
xor
mov
mov
pop
adc
jecxz
loopne
aad
push
add
movsl
cmp
jno
add
scas
cmp
es
inc
push
and
popf
jge
hlt
addr16
mov
clc
nop
mov
cmp
pop
adc
lahf
add
add
xor
mov
ds
std
xor
jmp
or
mov
mov
lds
fcom
inc
push
or
test
cmp
ds
scas
dec
jecxz
arpl
cld
pop
fisubrs
shrb
out
xchg
outsb
xor
lea
into
outsb
and
dec
inc
mov
or
or
daa
push
cmp
loop
xchg
or
mov
add
movsl
cmp
pop
enter
ds
pop
aad
fldenv
cmp
movsl
imul
inc
out
mov
loop
arpl
mov
xorl
pusha
rorl
andl
in
ret
mov
jmp
test
jns
push
movsl
ds
inc
pop
mov
mov
cli
shlb
shl
movsb
call
cmp
loopne
fmull
or
inc
dec
add
ljmp
cmp
jno
sahf
les
imul
popa
cmpsb
repnz
stos
ds
shr
jp
jb
dec
mov
shlb
or
cltd
je
xor
mov
rcl
jbe
dec
push
mov
jo
dec
loopne
sub
mov
test
dec
rcrl
sti
jge
adc
out
lods
loope
mov
jno
fyl2x
mov
rcll
mov
sti
inc
and
out
and
pminub
xchg
xor
andb
aad
inc
add
mov
jmp
inc
repz
sarl
in
sarl
jecxz
repnz
jo
adc
xor
inc
arpl
fidivs
lea
mov
and
fwait
add
push
xor
dec
mov
adc
in
sub
mov
push
pusha
mov
mov
sub
xchg
fcompl
sbb
xor
cmp
mov
or
sub
sub
inc
pop
jle
lods
jnp
mov
hlt
fisubrs
rorl
xchg
fistps
inc
or
hlt
or
fnstenv
aas
outsl
test
shr
jo
std
jno
cltd
xchg
mov
push
and
fnstenv
jns
clc
out
sub
inc
add
xchg
jns
enter
push
sub
insl
pop
jne
ret
ljmp
aam
inc
xchg
cmp
cmp
pop
imul
mov
sub
sahf
aas
jbe
jo
push
ljmp
jo
mov
lret
in
pop
mov
inc
fstpt
lods
scas
xor
xchg
fisubs
cmp
adc
push
pop
outsb
add
add
mov
dec
ja
lods
test
push
rol
pop
lahf
push
leave
int
scas
mov
xor
mov
cmpsl
sti
in
iret
or
ret
aam
mov
lods
xchg
inc
gs
pop
and
inc
repnz
pop
sbb
or
jmp
mov
int3
adc
std
mov
arpl
pop
ret
pop
nop
lcall
and
fwait
add
es
jb
cltd
cld
lret
nop
jmp
cmp
or
mov
mov
pop
jnp
testl
movsl
cld
push
inc
pop
add
or
and
dec
push
test
andb
dec
or
mov
xchg
xchg
stos
mov
mov
ret
xor
mov
cmpsb
imul
pushf
lds
sub
ljmp
sbb
lret
bound
mov
jo
pop
daa
dec
pop
xchg
and
sub
dec
xchg
je
cwtl
test
and
fsubr
pop
hlt
mov
outsl
fstps
in
cli
fadd
pop
dec
cmc
mov
out
mov
addb
test
mov
sbb
and
imul
data16
push
push
das
out
add
add
xchg
test
inc
in
xchg
lahf
mov
or
stc
sub
fucom
pop
ret
mov
loopne
dec
aam
stc
mov
sbb
xchg
pushf
scas
clc
xchg
shlb
iret
sarb
lret
aam
pushf
push
in
in
fistl
scas
jo
push
mov
xor
sub
jge
or
lea
cwtl
inc
or
gs
xchg
inc
lret
loop
cmp
shl
out
cmp
ss
push
loopne
mov
insl
and
fnsave
xchg
sub
xor
inc
mov
push
jbe
cmpsl
rcrb
cmp
xor
out
cmc
dec
pop
xlat
pop
sbb
sbb
daa
into
push
jno
fwait
enter
sub
rclb
pusha
ds
test
xor
sar
push
lock
int3
xor
push
push
jmp
jne
and
gs
sarb
std
add
push
mov
mov
enter
das
xor
fwait
sub
jmp
cli
pop
insl
jge
lret
mov
or
mov
shl
mov
in
rorb
stc
aas
lea
add
jns
xchg
adc
inc
inc
out
sub
sbb
arpl
shlb
push
mov
fldl
or
xchg
test
pushf
jecxz
insb
stc
stc
pop
clc
push
leave
fsubl
mov
adc
dec
mov
fldenv
mov
out
jno
inc
cld
cmp
and
and
repz
sub
andl
inc
pop
cmp
movsl
jl
arpl
sti
xor
pop
aaa
stos
push
out
mov
cld
cmp
rolb
push
mov
dec
les
aaa
or
xchg
sub
sub
dec
mov
faddl
fidivl
inc
xchg
dec
cwtl
xchg
jg
cmpsl
push
sub
or
repz
arpl
cmp
fdiv
xorb
jle
and
cmp
jg
inc
movsl
cmp
pop
mov
xchg
xchg
out
lret
fst
sbb
andl
test
adc
adc
mov
hlt
shlb
push
call
outsb
lea
testb
popf
cli
aam
xor
orb
push
push
fimuls
das
gs
jbe
popf
mov
xor
xchg
and
pop
js
adc
stc
pop
decl
inc
cli
jnp
pop
xchg
mov
int3
int3
int
xor
push
xor
mov
les
out
adc
int3
outsb
adc
adc
sbb
jl
and
push
and
out
cmp
jbe
jb
cmp
in
lods
mov
rcll
cmc
in
js
mov
jnp
cmp
sbb
sub
fs
subb
jg
xchg
ljmp
fdivrl
jl
ret
decl
out
popf
ss
nop
and
dec
ret
leave
aas
mov
imul
shlb
shl
lret
jmp
inc
fildl
fcoml
xor
outsb
in
sbb
cmc
mov
pop
pop
ss
fisubrl
cmp
add
or
cmp
addb
fsubrs
add
sbb
lret
mov
call
dec
push
minps
outsl
and
and
xor
cmp
fisubl
pop
popa
xor
push
add
push
or
repz
int
out
imul
dec
iret
shll
sub
dec
sub
cmp
arpl
lds
addr16
push
xchg
ds
cltd
or
ret
das
repnz
leave
pop
or
pop
fistps
mov
data16
rclb
mov
mov
push
xor
outsl
incb
cltd
ja
orb
sbb
xor
outsl
pop
mov
cmpsb
sub
sahf
lcall
nop
inc
outsl
jnp
leave
adc
sarl
add
out
cld
stos
outsb
add
mov
cmp
push
test
lret
sbb
jle
leave
sahf
xor
adc
mov
sub
std
enter
mov
adc
mov
push
and
bound
sbb
leave
shl
imul
add
adc
jo
push
rol
shll
and
test
mov
adc
cmp
inc
jnp
xchg
mov
xchg
dec
inc
pushf
xchg
dec
cli
jmp
aas
icebp
xchg
mov
repnz
imulb
fwait
ljmp
lock
and
or
popa
ljmp
lret
loope
sbb
mov
fdiv
adc
dec
mov
ds
mov
mov
inc
scas
cmp
mov
aad
mov
push
test
xchg
mov
push
rorl
imul
cmpsb
call
leave
in
jno
int3
mov
testl
aas
sub
fisubl
mov
clc
test
imul
in
xchg
mov
ret
dec
ds
cli
hlt
pop
stos
push
push
and
loopne
test
mov
push
fidivl
filds
ret
testb
mov
ret
in
sbb
ja
dec
mov
cs
push
mov
dec
mov
mov
in
outsb
ror
pop
adc
jp
mov
shl
imul
push
jae
mov
ret
mov
cmpsl
leave
xchg
fs
ret
ljmp
mov
and
push
loopne
mov
ljmp
test
ret
pusha
xor
ss
push
je
out
pushf
inc
jmp
xor
and
cmp
add
insb
xor
js
lahf
push
cli
pushf
jne
mov
mov
pop
push
test
data16
dec
insb
dec
adc
sub
bound
and
mov
push
shl
push
dec
xor
cld
sub
sub
fsubs
mov
cli
pop
adc
jns
jne
imul
aam
pop
xchg
dec
out
mov
pop
adc
inc
add
jns
jmp
sti
push
or
int3
dec
dec
imul
xchg
repz
shlb
lcall
xchg
insl
loopne
or
mov
popf
adc
cmp
inc
rcrl
dec
in
add
insb
sub
pop
xlat
pop
xchg
dec
add
cltd
leave
push
outsl
pop
add
fnstsw
push
mov
or
addb
and
push
rorb
fnsave
test
mov
int3
outsb
mov
lock
lods
sbb
lsl
pop
mov
fsubr
mov
mov
imul
dec
dec
push
sbb
dec
in
movsl
stc
and
push
aam
aam
lods
sbb
xchg
push
test
pop
sub
fildll
add
cmp
jne
xchg
out
iret
loop
sbb
mov
adc
icebp
icebp
loop
and
rep
adc
add
push
pop
pop
or
pop
jo
push
inc
mov
in
dec
loopne
sbb
push
jl
push
add
mov
out
xchg
hlt
mov
dec
sbb
xor
dec
push
ljmp
jne
pusha
or
inc
cltd
xor
mov
sti
jmp
cmp
ja
clc
dec
icebp
mov
insb
xor
inc
or
lcall
mov
or
adc
cltd
imul
pop
sub
mov
cmp
push
jle
into
jae
add
bound
dec
sbb
mov
and
sarl
test
jne
mov
stos
push
mov
jno
inc
imul
mov
shll
adc
xchg
push
test
sbb
lret
inc
std
or
pop
imul
jae
lds
or
scas
pop
aad
fdivrs
repz
loope
pop
pushf
int3
lahf
or
add
mov
ret
mov
push
sahf
lret
pop
je
pop
shlb
data16
jp
jo
cli
lea
adc
pushf
inc
dec
lds
sbbb
popf
scas
sbb
sub
out
test
iret
in
sbbb
rcl
rcl
adc
stos
call
mov
xchg
mov
ret
clc
add
ja
mov
dec
cltd
or
clc
jl
add
sub
jnp
pop
rol
jp
sbb
pusha
mov
sub
jmp
sub
fwait
pop
and
xlat
jmp
fwait
mov
mov
aam
fldcw
sbb
dec
fwait
data16
push
or
push
mov
aad
out
xchg
pop
jbe
sub
add
and
mov
add
mov
sahf
push
aam
int
xchg
xor
inc
call
stos
in
add
mov
lea
cmc
sbb
int
cs
xchg
cmpsl
ds
jmp
lds
popw
rclb
in
aas
mov
adc
jle
repnz
mov
stc
ret
cmpsb
dec
out
shl
jo
pop
bound
pop
or
xor
test
xor
sarl
xor
or
mov
jb
and
fsubs
lea
stc
jns
push
mov
push
mov
push
sub
xor
leave
fs
pushf
xlat
imul
fcomip
inc
int
sbb
scas
mov
inc
test
fisubl
add
xchg
sbb
js
nop
stos
lods
clc
aas
mov
imul
addl
cmp
popf
cmp
imul
imul
cmp
adc
cmp
pop
lods
xchg
es
mov
nop
cltd
hlt
inc
or
ja
jg
mov
movsl
xor
pop
popf
cmp
push
inc
mov
jle
or
outsl
jns
sti
push
movsl
scas
mov
bound
or
cli
sarl
or
sub
mov
cmc
gs
xlat
cmp
movsl
sbb
push
xlat
cltd
test
orl
popf
push
adc
inc
mov
xor
aam
jl
cmp
gs
sbb
popf
adcl
push
inc
ljmp
pop
repnz
jge
mov
adc
cmc
xor
or
iret
xor
jecxz
mov
icebp
xchg
mov
mov
loop
lcall
int
xor
insl
xor
ret
lock
mov
imul
imul
mov
roll
filds
inc
icebp
and
jmp
cmpsl
mov
xchg
cmpsl
pop
aam
js
jle
add
adc
outsb
cmpsb
xor
test
stos
xor
js
add
pop
subl
xchg
mov
adc
inc
mov
test
imul
mov
jbe
dec
mov
ljmp
fucom
mov
mov
add
imul
jge
movsb
jbe
inc
xlat
dec
stos
sub
pop
jg
pusha
xchg
sarl
imul
imul
cmp
xchg
inc
cmp
rolb
addr16
ljmp
stos
mov
negl
call
jns
pop
ds
pop
cld
xchg
or
lea
sub
xchg
xor
out
jecxz
sub
outsb
cli
out
mov
shl
xor
pop
repnz
ja
inc
ficompl
dec
es
fsts
loop
inc
call
or
sbb
shlb
xchg
enter
mov
pop
xchg
push
popa
fcompl
cmp
lcall
mov
add
xor
imul
outsb
lds
xchg
test
nop
push
repnz
fimull
insl
inc
dec
pop
jnp
push
aas
sbbl
sub
inc
test
ret
mov
pushl
sbb
dec
xchg
cwtl
test
inc
mov
adc
imulb
fmull
cmpsl
jl
imul
pop
mov
push
out
add
jnp
xchg
lahf
mov
sub
out
add
lahf
sub
movsb
push
cwtl
dec
sahf
inc
je
inc
movsb
int
mov
insb
rorb
lods
mov
into
outsl
into
add
push
test
loop
jae
hlt
int3
lcall
dec
or
adc
insl
test
mov
or
das
or
add
mov
test
fdivr
xor
pop
popf
push
add
cli
fdivrs
repnz
notb
lahf
ret
in
test
push
or
mov
mov
pushf
jnp
push
pop
sbb
xchg
scas
imul
movsl
mov
jge
call
jnp
pop
fildl
inc
daa
stos
fidivl
int3
int3
sub
jnp
or
mov
or
sub
jecxz
cmp
sub
mov
je
in
pop
pop
push
ja
sbb
pop
popf
pop
sub
stos
mov
cmp
cmc
mov
mov
lods
inc
sub
push
stos
xor
out
popa
mov
lock
mov
xchg
je
push
sti
cmp
sub
shlb
pop
lock
pop
ja
add
ja
lret
inc
jne
inc
addr16
ror
and
jno
insl
inc
cli
jp
cli
push
mov
pop
pop
xlat
data16
mov
dec
pop
pop
jb
adc
push
fwait
sti
fsubl
stc
adc
xchg
shlb
or
mov
sub
or
sbb
dec
je
mov
lds
or
adc
pop
fsubrs
mov
push
pusha
inc
inc
pop
out
shl
int
and
rcll
mov
inc
cmp
push
insb
addr16
pop
or
dec
lcall
inc
add
lods
dec
mov
lret
pop
scas
mov
push
call
xchg
push
outsl
mov
mov
push
orb
notb
mov
mov
xor
lret
adcb
andl
lock
fdivl
or
fistl
xchg
ror
movsl
pop
cmc
aad
fdivrl
out
jl
pop
or
fdivl
or
int
push
push
xor
mov
cld
cmp
dec
add
pop
lods
inc
mov
mov
out
push
in
adc
sub
mov
testb
xor
cmpl
shr
jle
jecxz
push
das
in
inc
shrl
inc
out
stc
js
shrl
jge
jmp
in
push
repz
pusha
test
xchg
add
jbe
pop
mov
int3
es
fsubp
add
xor
lea
sbb
js
fucomip
popf
xor
mov
dec
lods
and
adc
inc
and
fidivs
xor
fbld
fst
mov
lret
sti
add
sbb
fs
xor
xchg
mov
mov
add
and
addr16
sbb
mov
sub
pop
in
lods
mov
mov
shr
pop
xor
andb
js
les
in
insb
rorl
daa
inc
aaa
ds
mov
sbb
mov
das
repnz
jl
cs
pop
lahf
add
out
in
push
ljmp
outsl
rcl
sbb
and
mov
dec
enter
cwtl
jmp
xor
arpl
fcomps
out
cmp
insl
add
mov
hlt
mov
sarb
mov
jnp
mov
in
ljmp
negl
hlt
or
mov
add
dec
shl
cmpsb
imul
mov
scas
jo
pop
test
jae
mov
inc
push
js
scas
mov
push
sub
mov
std
xchg
inc
mov
and
sbb
xchg
cmpsl
mov
sub
xor
fwait
dec
mov
inc
jb
mov
adcl
fs
bound
jge
adcl
pop
or
fwait
or
movsb
xchg
add
lahf
seto
leave
fs
jno
or
icebp
or
xor
jb
or
push
inc
push
lds
repz
push
ret
pop
adc
adc
clc
xchg
cltd
in
out
xchg
sar
insb
test
add
inc
fcomps
sti
cmpb
push
push
clc
sahf
mov
aad
std
es
push
inc
inc
test
outsl
lds
mov
cwtl
fs
cmc
jno
cmp
xor
imul
mov
int3
shrb
test
adc
push
popf
xor
repnz
push
daa
mov
movsl
xchg
js
xor
mov
jg
pusha
dec
jl
in
loopne
pop
outsb
mov
mov
xchg
movsl
inc
ljmp
pop
out
sbb
jae
pop
push
in
fsubrl
jnp
jmp
das
add
add
mov
jmp
out
sbbb
add
push
add
adc
jbe
xor
dec
pop
nop
mov
cmpsb
fistps
adcb
pop
sbb
mov
mov
jns
lret
testl
jb
arpl
leave
fxch
mov
sahf
out
mov
aaa
or
push
mov
pop
or
push
pop
xchg
ljmp
inc
sub
lret
mov
xor
out
test
mov
jo
ficomps
xchg
mov
fnsave
pop
stos
iret
add
xlat
sub
fdivrs
cmpsb
in
testl
jp
test
add
pop
ffree
lds
cmp
lea
add
test
ss
lret
rcrb
pop
push
fistpl
mov
addb
movb
inc
arpl
push
push
sar
adc
inc
fyl2x
test
push
stc
jb
das
ret
jl
inc
jo
cmp
rol
iret
mov
dec
mov
enter
sub
push
mov
xor
movsl
cmp
dec
in
ja
loope
sbb
mov
xchg
clc
sahf
popf
clc
out
mov
xchg
mov
pop
hlt
imul
out
loopne
cmp
mov
push
scas
jb
pop
mov
cli
and
stos
into
popa
fwait
lods
rcl
push
out
call
and
inc
cwtl
in
push
clc
fildl
bound
push
clc
add
mov
cmp
cmp
xchg
jns
lods
mov
cmp
cli
adc
inc
lret
pop
jb
hlt
mov
sbb
sub
adc
push
xchg
scas
push
adcb
les
cmp
pop
or
push
loop
cmp
popa
sub
icebp
lock
sbb
xchg
xchg
iret
pop
inc
mov
push
fwait
sti
sbb
xor
mov
pop
or
sub
jle
inc
inc
test
xchg
xchg
xor
out
mov
xlat
outsl
cmpsl
insl
mov
push
sub
scas
add
stc
in
push
pop
popf
add
mov
mov
mov
sarl
mov
movsb
mov
inc
adc
xor
push
mov
mov
imul
add
cmp
dec
adc
mov
into
test
ret
rcrl
test
in
sbbl
inc
cmc
shll
mov
mov
dec
mov
add
daa
outsl
and
mov
push
lock
adc
pushf
mov
mov
ret
mov
dec
push
push
sbbb
fdivs
mov
xchg
push
mov
xchg
lret
mov
cmp
xor
inc
fnstenv
in
or
pop
aaa
mov
fs
and
or
pop
jb
mov
inc
mov
pop
pop
cmpsl
dec
mov
jne
aam
dec
outsb
pop
sub
mov
or
add
imul
mov
push
popa
mov
mov
loopne
test
dec
pop
shll
mov
divb
pop
daa
sbb
lea
mov
shl
mov
jg
popa
aad
push
adc
mov
je
das
ret
jle
gs
jge
jb
lea
in
push
sbb
jo
add
repz
imul
loope
cmp
xlat
aad
lahf
jge
xlat
cmpsl
sub
sbb
inc
lret
int
arpl
hlt
mov
inc
inc
icebp
aam
mov
and
jbe
cmp
pop
jb
negb
mov
insl
and
fwait
xchg
insl
push
inc
and
iret
mov
or
ret
inc
xchg
sub
xchg
pop
fbstp
cmp
popf
sub
dec
mov
xlat
adc
dec
push
mov
stos
imul
inc
data16
adc
mov
pop
mov
push
sub
add
int
insb
sub
add
xor
sti
mov
enter
das
out
fdivrl
dec
arpl
inc
cmpsb
ja
sbb
add
imul
push
cmp
scas
xchg
or
mov
daa
pop
xor
inc
iret
sbb
mov
lret
jl
cmc
mov
out
sub
mov
or
fiaddl
xchg
sub
gs
push
xchg
push
push
jle
scas
xchg
mov
sub
mov
rol
aas
or
je
pop
mov
and
out
mov
ret
loop
mov
jge
test
fcomip
cmp
imul
aaa
and
int3
pop
dec
add
mov
push
in
jbe
mov
in
testl
arpl
sbb
pusha
inc
inc
aaa
cli
std
aaa
mov
add
mov
pop
fiaddl
lods
jmp
js
xchg
sbb
mov
mov
cmpsl
cmp
imul
jge
or
mov
mov
or
cltd
pop
add
sub
cltd
test
arpl
pusha
inc
or
es
jbe
cli
enter
sbb
xchg
int3
push
cmp
mov
push
in
pushw
outsl
loop
aas
cmpsb
in
dec
loopne
add
pop
fistps
xchg
aad
jb
jno
imul
push
in
pop
roll
int
jb
sub
scas
outsb
push
mov
jb
or
aaa
outsl
andb
jge
mov
xchg
mov
pop
cld
push
nop
insl
and
mov
out
jle
xchg
pop
push
and
popa
push
repz
pop
sub
in
pusha
ficompl
sub
adcl
lds
daa
ljmp
ds
push
mov
fsubl
or
push
scas
lea
xlat
pop
dec
cmp
sbb
outsb
sub
test
das
push
dec
mov
pop
pop
in
add
scas
mov
sub
mov
bound
pop
test
je
cmp
cmp
out
sub
dec
test
adc
push
out
movsb
jo
inc
xchg
jmp
add
cwtl
xor
xor
inc
test
xor
xchg
iret
fs
jb
dec
jle
fdivl
sub
jo
fidivrs
and
popa
or
push
ss
arpl
xlat
cwtl
xor
lret
popa
xchg
pop
ss
pop
xchg
adc
jge
mov
mov
je
jbe
movsb
push
add
sbbb
std
or
dec
add
lea
je
jae
adc
shlb
xchg
mov
ja
call
mov
xchg
lret
js
xchg
sub
test
jbe
mov
aad
dec
adc
dec
bound
xlat
fbstp
cmp
adc
mov
mov
cmp
xchg
rcrb
or
push
xchg
mov
sub
sub
repz
in
pop
stos
sarb
jno
faddl
movsb
mov
sbbb
pop
mov
fldl
rorl
scas
adc
inc
outsb
cmp
out
fcom
lock
pop
sub
das
mov
add
mov
sbb
mov
gs
out
sub
or
xchg
daa
stos
dec
push
and
movsl
add
and
inc
mov
lahf
dec
rcrl
sti
ss
out
adc
inc
hlt
mov
and
fisubrs
xchg
cmpsl
sbb
push
mov
leave
arpl
inc
imul
jnp
cmp
cmp
mov
int
cmp
fstps
sbb
xor
std
arpl
pop
outsl
out
xor
pop
xchg
pop
dec
movsb
pop
loopne
jge
lds
adc
fnsave
adc
mov
xlat
mov
subl
xchg
in
push
lods
aaa
push
sub
test
fimuls
stos
gs
hlt
pop
aaa
pop
dec
adc
shll
out
sahf
sahf
int
movsb
arpl
loope
cwtl
fistpl
shrb
mov
push
mov
sub
cmp
subb
pushf
mov
aad
add
cmp
outsb
les
outsb
add
test
popf
pop
sub
outsl
jge
cmp
cmp
ret
xchg
ja
sbb
sbb
bound
pushf
daa
cli
inc
mov
mov
jo
lcall
sbb
xor
mov
mov
sbb
xchg
adc
je
mov
or
push
lret
jb
icebp
mov
sbb
outsl
add
xor
pop
imul
and
add
mov
bound
jno
and
sti
pusha
imull
cmp
mov
es
lods
rolb
pop
jb
inc
fs
push
lds
jb
bound
addb
out
vpaddusw
mov
mov
mov
dec
push
cmp
jne
movsb
add
in
nop
jp
ljmp
ret
inc
push
outsl
cmp
pusha
test
in
pop
mul
xor
pop
mov
lret
sti
cmp
in
add
lods
mov
pop
lea
pop
jge
fsubrs
inc
arpl
and
daa
punpckhbw
and
stos
cmp
adc
test
movsl
mov
and
ret
das
sbb
je
inc
mov
jb
std
aas
clc
mov
push
mov
push
in
mov
fbstp
ret
testl
bound
adc
mov
lahf
andb
scas
imul
add
jmp
push
in
dec
xchg
pop
mov
push
mov
insb
das
inc
hlt
push
js
cmp
xchg
out
lcall
mov
das
lds
add
out
sub
lcall
mov
cmp
dec
repnz
sub
push
ds
push
mov
cld
xchg
bound
cmp
xchg
mov
pop
dec
mov
or
push
hlt
sbb
and
cs
cmpsl
cltd
push
jbe
loop
cs
aas
jnp
push
inc
loope
push
push
fs
dec
mov
add
sahf
xor
sub
out
inc
bound
and
adc
push
inc
xchg
add
xchg
or
xchg
push
sbb
stos
inc
mov
mov
mov
sti
jp
lea
aad
cmpsl
and
inc
pop
hlt
push
stc
jns
ja
mov
call
ror
mov
pop
jno
dec
jne
shrl
push
iret
mov
jae
and
lret
sbb
adc
test
aas
call
fsubrl
jno
adc
mov
cld
xor
adc
nop
pop
out
cltd
and
xchg
rcll
mov
or
add
jb
ret
push
mov
sbb
inc
fwait
lock
push
mov
fistps
fistpll
outsl
ret
int3
scas
jecxz
lret
dec
cmc
cwtl
jecxz
setb
mov
data16
sub
insl
les
movsb
push
arpl
dec
sbb
inc
sbb
xor
je
jl
dec
int3
testl
mov
in
orb
cmp
xchg
push
test
mov
andb
push
jb
pop
jne
out
jno
rclb
xchg
mov
stos
es
pop
lret
jne
xor
cmp
mov
xchg
cmp
sub
xchg
pop
xchg
mov
sub
subl
pop
lea
pop
add
loope
pop
out
test
rcrl
addb
push
jg
cmp
movsb
shll
mov
jmp
push
inc
xchg
cmp
lea
in
inc
testb
rcrl
negl
imul
xor
js
sub
cmpsl
lods
mov
test
sub
mov
test
pop
sbb
icebp
mov
mov
push
jl
cmp
lahf
fisttpll
pushf
sub
pop
xor
mov
push
push
xchg
or
movsl
std
loope
jbe
inc
sbb
xchg
add
hlt
inc
mov
mov
ljmp
and
fisubl
xlat
xchg
in
adcl
pop
test
ss
mov
push
push
int
movsb
mov
out
adc
push
add
cs
loope
pusha
test
into
sub
sarl
or
aaa
pop
pcmpgtb
pop
sbb
mull
inc
ret
stc
fwait
shlb
xor
gs
stos
test
jne
sbb
jne
or
jge
mov
loope
je
xor
mov
loop
movsl
testl
jns
and
rclb
and
xchg
lods
pop
cmp
push
mov
sbb
push
mov
iret
pop
int
leave
gs
add
sub
lds
sbb
jnp
fidivs
bound
jno
addr16
pop
xor
xchg
dec
cmp
mov
cmp
cmpsl
pusha
and
sbb
out
pop
sub
or
fidivl
stos
cwtl
das
in
or
aas
sbb
repz
imul
mov
call
mov
adc
das
ret
outsl
int
push
xor
lods
jmp
lds
xorl
jmp
out
push
jmp
mov
pop
cmp
aaa
dec
lea
pop
leave
xor
inc
inc
push
fdivl
push
push
test
pushf
mov
popf
mov
icebp
mov
jmp
lea
lea
fmull
minps
jno
cmp
les
mov
cmpsb
loop
lods
rcl
fwait
pop
mov
cltd
mov
lret
outsb
aas
push
xchg
adc
dec
shrl
add
pop
jno
jbe
mov
or
cwtl
test
pop
pusha
push
movb
or
mov
aaa
push
pop
and
or
loop
out
rclb
inc
adc
cmpsb
and
and
pop
notb
mov
add
and
xchg
fldl
xchg
jne
pop
aad
inc
test
in
ds
xor
in
or
stos
aas
adc
sarb
inc
shrd
fsubrs
sarb
fbstp
faddl
sti
fldl
lret
data16
shrb
jo
and
xor
cli
xor
cmp
xor
jne
les
push
pop
xor
orl
sbb
js,pt
xchg
xor
sbb
or
mov
mov
gs
call
leave
xchg
repnz
leave
sub
loop
push
orl
mov
call
cmp
cmp
icebp
enter
or
movsl
cmp
push
lahf
push
pop
hlt
inc
stos
fnsave
push
inc
add
sti
pop
roll
xor
dec
mov
or
cltd
xchg
and
scas
sbbb
cmp
or
or
pusha
clc
sbb
out
mov
addl
repz
sahf
and
cmpsb
or
rcrl
add
icebp
movsl
cmp
loope
adc
fstps
xchg
lods
aam
cs
add
add
sub
mov
sub
add
mov
mov
sbb
fcoms
ffreep
ds
push
shll
push
push
mov
popa
shl
rcll
imul
jecxz
inc
lock
in
lret
nop
push
incl
sti
xchg
or
xlat
mov
mov
iret
pushf
and
ljmp
enter
inc
mov
es
pop
pop
adc
js
sbb
ljmp
sti
jecxz
jge
mov
push
enter
mov
pushf
fbld
cld
xchg
xchg
enter
fsubs
push
mov
xchg
cwtl
mov
inc
mov
adc
bound
dec
out
cli
cs
xor
mov
pushf
mov
stos
ds
jns
imul
rcl
sbb
lock
mov
xor
mov
xchg
mov
lahf
rorb
jno
xor
hlt
scas
lahf
and
mov
jge
add
mov
mov
add
inc
sbb
jnp
or
xchg
sbb
add
aam
and
add
mov
shlb
imul
imul
lock
arpl
and
dec
mov
nop
sub
push
out
cld
pop
insb
addr16
jmp
adc
fdivs
out
add
jne
idivb
stos
lods
inc
sbb
push
sub
in
lret
push
mov
mov
inc
mov
add
bnd
adc
testb
aam
and
push
jle
dec
sub
imul
frstor
mov
pop
adc
cmp
jbe
dec
cmp
addr16
mov
std
addb
in
sbb
ret
shlb
xchg
or
movsb
nop
pop
sub
loope
sahf
adc
repnz
add
or
xchg
mov
fimull
das
sbb
jno
test
mov
rcrl
fnstsw
arpl
mov
je
xor
test
stc
ds
ret
sbb
negl
cmp
ss
mov
lret
iret
push
cmp
push
das
adc
shrb
xor
ljmp
rcrl
insb
jle
addr16
test
push
pushf
sbb
mov
popf
xchg
adc
or
test
cmp
fsubp
xchg
push
mov
sbbl
mov
mov
inc
outsl
jo
mov
pop
fnsave
int
or
mov
daa
stos
inc
fistpll
push
stos
addr16
hlt
push
das
cmp
xlat
addr16
xor
cmp
test
lahf
loope
test
cli
inc
mov
negb
std
leave
mov
insb
and
push
mov
mov
pop
adc
add
push
inc
mov
fs
sar
mov
fildl
pop
ret
fs
cmp
xchg
xorl
pop
mov
push
and
xchg
fdivr
fstpt
arpl
lret
aam
pop
mov
dec
xchg
and
push
xor
add
xchg
insl
xor
sub
shl
push
sub
movsb
aaa
repnz
pop
lea
jl
xchg
push
call
lods
push
pop
adc
adc
aad
xchg
mov
inc
pusha
mov
fdivl
mov
push
lret
sbb
jle
loope
xor
cmc
push
mov
mov
rorb
mov
mov
jmp
fisubrs
decb
mov
xor
and
inc
and
mov
push
xor
sbb
enter
int3
or
add
xor
pop
mov
mov
add
cmp
push
jmp
cli
std
jo
out
sbb
fnstcw
lea
cwtl
cs
lods
add
push
pop
jle
inc
negl
sub
and
pop
loope
lods
negl
in
decl
ja
lea
jge
bound
and
push
and
notb
bound
xchg
arpl
jae
sar
mov
les
sub
cltd
pop
lock
inc
cmpsl
in
add
push
leave
rcrl
push
add
mov
data16
cmp
adc
inc
iret
xchg
test
clc
jmp
movsb
ret
notl
cmpsb
xor
and
loope
es
pop
fadd
lret
out
pop
lahf
mull
movsb
or
add
mov
mov
and
sbb
add
das
or
xchg
add
call
pop
filds
sahf
sti
or
cmp
adc
in
sub
lcall
inc
popa
adc
push
pushf
lea
xchg
adc
loop
gs
mov
xchg
dec
or
sbbb
loope
cmp
and
imul
je
cmp
jno
jle
out
mov
jnp
das
idiv
sub
cmp
xor
cmpsl
jecxz
call
movsb
out
lea
mov
mov
stos
jno
fimull
mov
test
and
fadds
int
jae
dec
in
sub
sti
and
loope
pushf
cmp
mov
push
test
aaa
inc
sub
sahf
lcall
movsb
xchg
inc
repz
lock
scas
test
jb
es
and
sti
xchg
jne
stos
or
andb
jle
xchg
sahf
xor
mov
aas
dec
add
fs
js
jae
pop
cwtl
push
repz
mov
mov
pop
jbe
jo
xor
pusha
mov
jo
arpl
test
addr16
push
iret
insb
or
cmpsl
cmp
or
popa
lock
out
repnz
adc
ficoms
nop
in
fidivl
movsb
testl
push
das
cmp
fildl
cmpsb
cmp
or
adc
add
movsl
dec
cmpl
push
sbb
jle
js
test
outsb
mov
add
xchg
mov
lcall
int3
xchg
jne
shrb
bound
adc
int
jb
xor
pusha
push
add
or
add
xor
arpl
xchg
push
sarb
ja
roll
jp
xchg
js
enter
xchg
or
and
pop
cmp
insb
xor
fnstenv
mov
mov
pop
mov
mov
inc
sarb
cmp
pop
push
jge
dec
into
inc
insb
xchg
sub
xchg
aad
dec
gs
enter
shrb
mov
test
lock
stos
mov
mov
pop
stos
push
fnstsw
or
dec
sbb
xchg
dec
ljmp
push
in
cmp
decl
xor
std
jl
out
lret
xchg
sti
push
jns
jne
push
or
pop
push
sbb
mov
clc
push
test
std
dec
out
xor
sahf
cmp
inc
sub
or
xchg
cmp
scas
andb
xchg
mov
movsb
notl
push
sub
shl
fmuls
addb
push
adc
xchg
test
xchg
insb
fwait
mov
out
xchg
push
and
jae
xor
push
fimull
inc
stos
jbe
sub
lret
add
fidivl
aaa
mov
stc
mov
inc
cld
jmp
aas
jg
jo
mov
mov
and
ss
jbe
aad
mov
xor
es
push
pop
mov
ficoms
imul
nop
loop
pop
push
lcall
jb
dec
icebp
dec
loop
nop
xchg
sub
push
out
test
mov
add
movsl
daa
pushf
scas
and
fld
in
sbb
cmc
or
dec
fdiv
jae
mov
leave
icebp
inc
test
xchg
push
pop
popa
cmp
dec
mov
fpatan
xchg
das
lcall
inc
out
cmpsb
aad
int3
out
xlat
outsb
adc
mov
mov
int
adc
and
xor
xor
and
std
xchg
cmpsl
dec
or
lock
adc
cli
sarl
mov
xchg
sub
fcoms
repnz
mov
cwtl
test
mov
jne
inc
shll
adc
push
ljmp
push
mov
xchg
cld
rol
stc
and
js
jmp
or
dec
psrlq
insl
xchg
mov
les
or
xchg
pop
cmp
push
mov
insb
mov
iret
mov
fistl
mov
pop
andl
aaa
or
fldl
mov
xor
in
mov
pusha
xor
mov
shrl
and
mov
ret
cltd
outsl
outsb
mov
push
decl
dec
mov
popa
add
fidivs
jecxz
aad
jle
mov
add
fbstp
jle
inc
ds
mov
sbb
cmp
leave
mov
pop
and
mov
xchg
push
mov
adc
mov
mov
aad
dec
cmpsl
ret
pop
add
jo
jb
repz
out
out
and
daa
mov
jbe
inc
push
pop
nop
ljmp
lret
int3
rcrl
jns
jmp
lcall
scas
cmc
mov
xchg
adc
add
mov
out
mov
les
jle
arpl
aam
add
scas
jb
pop
mov
xchg
xor
call
loop
cld
sbb
pop
xor
mov
dec
dec
cmp
addr16
lret
cmc
stos
pop
sub
push
call
test
xor
subb
mov
enter
sbbl
testl
xor
jg
and
push
push
mov
inc
outsb
sub
push
movsl
mov
cwtl
xchg
popf
icebp
divl
jle
sbb
pop
dec
ja
shl
ja
jecxz
cli
mov
mov
push
mov
out
js
rcrl
repnz
rcrl
mov
sub
xor
out
mov
cltd
xchg
xor
xor
mov
test
bound
and
pop
iret
cmp
lods
jp
inc
inc
jmp
popa
mov
pusha
ljmp
testl
or
scas
jge
mov
test
out
iret
int
ret
ret
bnd
mov
cmp
sub
js
push
popl
shlb
push
xchg
push
in
ret
loope
shr
jge
cmp
mov
mov
repnz
lea
cmp
pop
ljmp
xlat
aaa
test
ret
aad
or
push
and
push
adc
cmpsb
xor
inc
xchg
negl
daa
ds
push
sbb
dec
lock
dec
mov
jmp
and
insb
jle
lret
jb
ret
push
mov
sahf
pop
jg
inc
mov
mov
popa
out
cmpb
test
es
lods
jmp
sahf
and
push
or
ret
jns
jp
les
jecxz
jecxz
mov
insl
jmp
or
jne
sbb
jae
shll
sti
aaa
and
pop
mov
jg
mov
addr16
push
mov
in
xlat
cwtl
das
mov
fcomps
sub
enter
xlat
cwtl
jl
push
lret
mov
push
loop
jge
mov
js
ja
mov
add
test
fwait
mov
xor
cmp
push
cld
push
cltd
push
ljmp
filds
rcr
jbe
xchg
imul
push
repz
mov
pop
mov
jns
add
sti
jp
sub
xchg
pop
xlat
scas
jp
sarl
popa
lods
aaa
xor
and
pop
pop
movsl
pop
inc
fstl
inc
mov
cld
or
pop
cmp
mov
idivb
sahf
pop
cmc
sbb
out
testb
sti
xchg
push
dec
into
cmp
inc
xchg
mov
push
daa
cmp
mov
pop
rorb
stc
xor
cwtl
mov
mov
xlat
mov
or
addr16
lret
lret
jecxz
inc
stc
dec
into
imul
dec
xor
cld
mov
fldenv
daa
mov
or
aas
mov
jno
xor
dec
shrb
sti
pushf
or
std
sbb
jle
or
push
dec
adcb
int3
cli
cmpps
jne
stos
add
shrl
addr16
cmp
aam
in
sbb
mul
pop
fxch
lahf
jae
mov
iret
dec
pop
add
imul
jmp
iret
sub
std
stc
jl
fs
fsubs
mov
in
test
idivb
push
cmp
mov
loopne
repz
jno
inc
jecxz
lahf
ss
inc
cli
dec
pop
mov
cld
xchg
shll
inc
cmp
sarl
mov
imull
jmp
icebp
mov
xchg
add
jo
call
cmp
stos
xchg
or
mov
aad
push
sti
add
add
xorl
sti
and
sub
repnz
cld
cli
adc
push
fwait
stos
mov
sbb
jge
push
pop
lds
xchg
jo
popa
aaa
jne
push
and
and
stos
inc
repz
inc
dec
push
dec
in
xor
ljmp
in
pop
cmp
sub
dec
push
inc
jmp
mov
mov
ds
popf
push
mov
xor
push
pop
loop
push
fstpl
ss
cmpxchg
das
dec
jge
and
jge
scas
scas
or
inc
aad
xorb
ja
mov
ja
mov
lcall
cwtl
sub
sbb
pop
in
mov
add
jg
cs
pop
lods
icebp
push
jg
inc
cmp
sti
jns
sbb
jns
pusha
xchg
cmp
mov
jbe
mov
pop
push
push
outsl
xor
mov
sbb
jns
jnp
jg
sbb
in
adc
in
fcompl
mov
mov
stos
inc
in
call
ja,pn
xchg
mov
inc
mov
imul
mov
dec
pop
sub
inc
dec
in
dec
sbb
fists
dec
or
mov
add
inc
hlt
adc
xchg
imul
out
fldcw
pop
cmc
lahf
inc
mov
pop
cmc
dec
fbstp
adc
mov
inc
vpunpcklqdq
test
xchg
sbb
pop
orl
gs
inc
notb
push
sbb
mov
bound
jmp
mov
and
int
nop
sbb
and
adc
pop
mov
jmp
sbb
lea
pusha
insb
mov
cmp
adc
out
enter
mov
out
loope
cwtl
jb
inc
bnd
dec
js
movsl
push
add
inc
mov
and
lcall
pop
push
push
movsl
push
and
and
mov
loop
ja
rolb
mov
mov
cwtl
jg
scas
xor
sbb
inc
leave
test
dec
fdivrs
cmc
fcomps
imul
cmpsl
cmc
add
xchg
mov
out
std
inc
xchg
outsb
test
sub
iret
fwait
jge
notl
repz
and
ljmp
je
int
das
cli
add
das
daa
pop
je
jns
sti
push
mov
outsl
lds
add
scas
jg
ljmp
mov
cmpsb
xchg
xchg
mov
movl
mov
push
sahf
lods
mov
dec
add
xchg
lds
cltd
aaa
xchg
cvtdq2ps
stc
nop
cmp
cmp
add
in
subb
shrl
clc
or
mov
xor
lea
xor
shrl
xchg
insb
ja
and
pop
cmp
repnz
test
sbb
cmp
dec
rolb
pop
xchg
popa
mov
sub
xor
cltd
gs
dec
add
stos
pop
and
ficoml
data16
les
sbb
push
sub
xchg
dec
add
jg
mov
adc
cld
or
je
sahf
das
into
sbbl
sarb
fwait
add
mov
out
mov
push
xchg
icebp
add
daa
xchg
and
push
lret
imul
int
std
pop
in
cmp
repz
dec
inc
cmp
pop
loop
push
xor
pop
sbb
adc
jbe
sub
aam
aas
push
inc
mov
xor
fdivl
leave
or
testl
fs
add
mov
dec
cltd
js
mov
pop
push
inc
push
into
out
leave
inc
lret
sbb
fmuls
orl
shll
pop
dec
xlat
lcall
mov
adc
ss
movsl
pop
cmp
xchg
in
clc
cltd
repnz
cli
push
inc
add
sbb
pop
push
cltd
mov
dec
jp
jns
push
inc
lret
cmpsl
xor
mov
and
clc
fs
jns
dec
stos
lds
mov
addr16
pop
insl
jge
sbb
mov
loop
and
sub
sub
outsb
jecxz
ljmp
pop
jae
lret
pop
outsl
or
xchg
addl
les
xor
or
lret
int3
sbb
add
arpl
xchg
push
enter
mov
call
sbb
add
cmp
divb
xor
inc
scas
nop
mov
bound
mov
xchg
outsb
sub
pop
aas
mov
ja
mov
in
aas
fisubs
ficoml
push
outsl
jbe
add
jo
shrb
out
sbb
in
pushf
dec
cmp
test
mull
int
lahf
cli
das
or
sbb
inc
inc
stos
xlat
pop
pop
into
adc
cs
sahf
sub
dec
add
movsb
xchg
jecxz
repnz
jnp
cs
or
adc
leave
and
jnp
dec
test
xor
pop
and
cs
lahf
fiadds
in
adc
pusha
cmp
xchg
pop
cmc
ret
inc
sbb
dec
jecxz
jl
subl
es
add
push
push
jecxz
mov
bound
cwtl
xor
fiadds
mov
mov
jp
loope
les
es
and
push
fstpt
sarb
mov
je
data16
xchg
test
add
add
dec
xor
sub
sarb
in
orb
push
xor
mov
call
int3
sbbb
jno
inc
pop
imul
mov
addr16
lock
ficomps
iret
pop
lods
mov
push
mov
push
test
and
notl
cltd
insl
std
in
and
in
mov
adc
testb
jne
adc
movsl
lds
inc
mov
dec
stos
xchg
cwtl
inc
scas
push
out
mov
sub
addr16
lock
movsb
outsb
push
filds
and
scas
arpl
cmc
jb
mov
shl
pop
adc
pop
push
andl
cmp
out
push
ficompl
mov
popa
add
mov
lahf
fdivp
insb
std
sbb
pop
or
adc
mov
bound
push
mov
inc
popf
and
aad
or
nop
push
dec
sub
das
movsb
in
lea
enter
js
dec
and
xchg
movsb
testl
push
icebp
jne
shll
xor
cmpsb
popf
mov
pop
and
sbb
xchg
inc
push
adc
mov
xchg
mov
sahf
test
or
mov
jb
mov
int3
push
in
jmp
push
out
pop
ljmp
cmc
cmpl
daa
clc
mov
mov
imul
les
jns
pop
inc
xchg
adc
xchg
xor
ret
in
xor
mov
lret
push
sub
mov
dec
imul
addr16
mov
repz
push
inc
pop
je
mul
test
and
pop
sub
cmp
inc
inc
add
pop
cmp
call
out
pushf
test
mov
xor
xor
loopne
lret
ffree
in
jg
call
pop
pop
push
jne
dec
or
subb
cltd
pushf
sbb
orb
push
inc
or
daa
jle
or
popf
popa
lods
jmp
lret
jno
stc
out
push
sbb
pop
ss
mov
ljmp
push
mov
lret
ljmp
cmp
sbb
sarl
pop
data16
sbb
fimull
insl
lret
bound
loopne
cld
push
and
jge
in
jl
mov
push
aas
add
arpl
movsl
mov
ret
je,pn
mov
int3
shr
orl
cmpsb
pop
xor
scas
fs
scas
test
inc
flds
mov
xor
pop
int
rolb
in
and
leave
jg
fmulp
sub
insl
jmp
or
leave
mov
push
and
mov
in
int
ds
bound
sub
test
movl
cmp
mov
sbb
js
dec
jmp
out
lcall
aam
enter
jns
imulb
inc
daa
outsl
out
mov
imul
xor
push
imul
rcr
loopne
in
add
push
loop
push
and
cld
inc
pop
jmp
push
in
pusha
div
mov
fs
repnz
xor
xchg
or
cld
inc
gs
insl
rorl
mov
clc
inc
pusha
xor
leave
cmc
lcall
addr16
adc
mov
cwtl
add
lock
pop
push
xorb
jne
sahf
ds
ret
ja,pt
repz
mov
stos
fcomps
fstp
or
leave
xchg
rcl
push
sbb
adc
xor
mov
mov
test
adc
pop
ret
jae
xor
pop
sti
or
jno
xchg
xchg
jle
lret
loop
lahf
sbb
inc
clc
cmpxchg
addb
lcall
mov
ret
std
inc
inc
push
out
cld
inc
out
or
arpl
jmp
inc
in
aaa
jae
lods
jg
xchg
mov
lret
fdivl
test
push
mov
shrb
sub
arpl
decl
ss
cmpsb
cmp
int3
arpl
mov
xchg
xor
mov
test
inc
rcrl
int
aam
arpl
xlat
fldenv
sub
movsl
andb
mov
jne
mov
mov
fistl
test
mov
leave
xor
or
shl
shlb
mov
adc
fistpl
pop
icebp
mov
in
push
lods
fnstenv
fwait
jmp
movlps
sbb
pop
jnp
sub
jbe
loopne
push
shrb
add
sbb
fsubr
ret
jmp
mov
and
xchg
and
movsb
push
lods
xchg
sbb
test
lods
jae
cmp
aaa
into
adc
inc
fistps
jns
fistpl
repz
jno
mov
scas
std
xchg
notl
jg
or
push
mov
add
test
mov
es
in
sti
insl
ficoml
sbb
dec
cltd
les
pop
sub
and
xchg
push
popa
pop
jno
jg
aaa
mov
iret
mov
jmp
lods
pop
test
sahf
mov
cmp
add
lahf
scas
test
addr16
ret
jg
add
outsl
mov
cmc
adcb
sub
jns
push
add
inc
call
or
xor
xor
iret
in
jmp
lret
fldz
out
or
adc
and
adc
adc
je
or
imul
pop
add
dec
ds
jl
insl
cmp
mov
fdivs
push
dec
ret
xorb
mov
mull
jle
es
ss
fs
js
pop
or
arpl
lds
xchg
xchg
cmp
jge
xor
xor
jl
xchg
pop
hlt
das
dec
xor
jnp
sub
push
jne
xor
inc
in
adc
out
cmp
mov
dec
outsl
mull
mov
js
fsubp
insb
out
lds
pop
es
jnp
push
scas
loop
scas
adc
xchg
mov
inc
sub
mov
outsb
add
xlat
jnp
mulb
sbb
cmpsb
movsl
cli
pop
ret
lods
jl
pop
scas
int
and
adc
pop
or
insl
sbb
and
ret
call
jge
lret
cmp
xchg
scas
imul
ret
mov
sub
iret
int3
loopne
adc
add
and
and
aam
jne
pusha
mov
sahf
imul
push
dec
and
add
xor
js
xchg
cs
push
in
rcl
mov
jle
lods
push
sar
test
movsb
icebp
or
sbb
js
rolb
inc
out
push
dec
insb
lea
cmp
lods
fdivr
dec
call
cmpb
inc
pop
push
rolb
int3
pop
push
sub
or
cli
test
push
test
xchg
pop
mov
or
fidivrl
arpl
fs
mov
ljmp
jle
adc
subl
sub
add
mov
jge
or
sbbl
repnz
int3
lods
jo
xchg
ja
push
mov
mov
adc
add
repnz
and
movsl
xchg
fidivrl
roll
nop
jp
ret
loopne
jns
xchg
stos
xor
fmull
aam
cmp
add
pop
jg
mov
icebp
cmp
mov
or
cs
pop
push
xorb
push
push
and
fdivrl
mov
repnz
xor
popa
mov
inc
lcall
push
push
inc
cmpsb
loopne
in
movsb
test
popa
inc
sub
add
xchg
das
sbb
jp
add
shlb
rcll
lret
fwait
jmp
test
dec
inc
dec
icebp
xchg
sub
xchg
pop
aad
pop
pop
insb
jl
sbb
jb
lcall
testl
add
push
dec
jmp
dec
add
jmp
jb
pop
jae
out
push
aaa
arpl
out
sub
xchg
xchg
sti
aas
xlat
xchg
stos
xchg
dec
jecxz
pop
sahf
sarb
arpl
mov
inc
and
test
sub
push
cwtl
mov
es
mov
mov
test
sub
lock
push
jg
mov
dec
jmp
out
mov
pop
repnz
fldl
aam
jg
test
or
aaa
out
test
inc
mov
sub
rcl
icebp
mov
cli
push
ja
xchg
fldt
mov
testb
and
sbb
fisubl
xchg
pop
stos
inc
lret
bound
fsts
ficoms
add
add
mov
js
inc
lods
sbb
dec
out
scas
inc
jl
pop
insl
inc
arpl
movsl
push
sbb
je
adc
add
cs
or
mov
xor
jns
push
std
or
mov
pop
jmp
cltd
xor
out
lcall
movsl
sahf
xor
idivb
dec
cmp
mov
in
push
xchg
sub
icebp
loope
dec
adc
iretw
mov
subb
lea
push
ret
and
push
fldenv
or
or
loop
lcall
rcl
out
inc
xor
repz
xchg
lods
mov
mov
sbb
js
mov
push
insl
daa
mov
sbb
jle
andl
dec
in
adc
in
or
lds
sbb
jno
push
lods
xchg
push
pop
jp
or
out
aaa
pop
dec
push
and
adcl
loop
sub
dec
es
xchg
lahf
test
popa
and
xor
imul
add
mov
test
outsl
xchg
xchg
out
push
pop
nop
sub
in
jl
xor
inc
lods
and
jge
mov
mov
push
sahf
out
add
loop
sbb
sub
in
nop
sub
scas
ret
mov
inc
cmpb
aam
fs
mov
xchg
ja
pop
cmp
gs
adcw
jp
xchg
xor
mov
ret
stos
push
jb
lods
int
push
adcl
ds
mov
jge
mov
jne
shrl
movsl
inc
les
stc
dec
pushf
movsl
sbb
jl
mov
or
mov
pop
shll
sahf
outsl
sbb
sahf
xor
fisttpl
scas
les
mov
hlt
cmpsl
pusha
sar
push
xchg
nop
shrb
js
push
lods
imul
adc
jnp
cmp
mov
out
xor
stc
lea
adc
sbb
bound
cmp
xchg
mov
aad
popa
ret
out
fdivl
mov
dec
psubusw
divb
ds
ficomps
data16
insl
pop
jae
sub
jo
add
cmpsl
hlt
movsl
clc
ja
cwtl
cs
adc
mov
fs
dec
int3
fadds
stos
dec
in
pmaxsw
call
loope
dec
pop
cmpsl
popf
mov
add
jmp
cmpsl
add
insb
cmp
stos
xor
subl
pop
sub
das
pusha
push
sbbb
cli
stos
add
push
rol
mov
pop
loop
dec
mov
mov
in
mov
sub
mov
mov
dec
iret
bound
xchg
je
cmp
fcmove
arpl
cmpsl
ljmp
mov
lret
pop
mov
test
adc
mov
pop
fadd
dec
add
cmp
andl
lret
dec
pop
lods
add
fidivrs
jns
sbb
pop
mov
cmp
sbb
sti
es
inc
sub
in
cmp
loop
in
scas
aas
lret
jge
sahf
mov
inc
sbb
mov
inc
or
mov
push
mov
fbld
popl
je
out
lods
cmc
aam
or
pop
push
out
or
test
imull
add
push
pop
outsb
jno
dec
push
add
mov
xor
xchg
inc
aaa
mov
push
in
aam
lea
cmc
je
sub
addr16
mov
push
adc
jns
std
nop
pop
mov
popa
push
pop
lods
loop
int3
fildll
lret
adc
inc
ljmp
test
mov
add
fbstp
hlt
adc
pop
ja
adc
ret
sahf
mov
shl
and
shll
testl
dec
subl
ret
mov
sbb
inc
dec
push
cmp
inc
popa
pop
lods
or
repnz
fnstcw
mov
fwait
mov
ror
ja
sbb
rorl
lds
dec
dec
movsb
clc
cmpsb
push
mov
rcll
mov
push
into
gs
sub
pop
mov
mov
xor
call
dec
add
hlt
rcrb
out
arpl
dec
aad
in
mov
out
mov
jg
push
jle
push
mov
cli
pop
push
popa
stos
jge
mov
dec
aad
or
dec
mov
cmp
imul
mov
inc
sub
push
dec
or
mov
cmpsb
rcrl
mov
enter
lcall
mov
mov
inc
lea
insl
adc
pop
jg
mov
cmc
stc
pop
dec
jbe
jmp
push
sub
mov
sbb
push
in
mov
push
pop
sub
pop
cmp
inc
cmp
insl
sub
mov
jns
xor
movsl
popf
fadds
xchg
dec
sarb
and
sarl
xchg
mov
xchg
sub
insb
dec
inc
cmp
mov
adcb
jp
adc
in
dec
and
xchg
sarl
popa
mov
cltd
xor
cmc
cli
cmp
dec
in
mov
fcmovne
dec
inc
jno
xor
xchg
scas
mov
loopne
cmpsb
push
ret
add
inc
mov
ret
cmpsb
mov
les
pop
loope
xchg
adcb
pushf
sub
jg
fnstenv
stos
pusha
imull
or
lea
cmp
xchg
mov
pop
adc
adc
inc
movsb
xchg
das
shl
adc
mov
dec
clc
repz
xor
push
mov
pop
push
notb
mov
rorb
cltd
in
and
sbb
mov
adc
out
mov
inc
insb
xor
enter
mov
push
pop
dec
loope
enter
mov
mov
cmp
cmpsb
cltd
aam
addb
mov
fwait
in
shrb
lcall
mov
cmpsb
inc
sbb
std
push
jb
and
inc
add
ja
xchg
and
dec
imul
imul
jbe
das
enter
mov
xchg
icebp
mov
clc
or
mov
cmpsb
aaa
dec
nop
sub
pop
ss
pop
cmp
dec
and
mov
leave
int3
cli
dec
icebp
mov
sbb
cwtl
sbb
jg
outsb
jbe
shlb
daa
xchg
sahf
mov
iret
mov
stc
fmuls
mov
cwtl
cld
insb
mov
pmuludq
or
sbb
rcrb
shll
imulb
test
ljmp
pusha
sub
les
stos
aaa
stos
getsec
cld
outsl
lea
mov
adc
add
pop
pop
cmp
mov
and
cmpsl
jle
push
rcrb
mov
dec
fldt
inc
sbb
stos
cmp
pusha
push
idivl
outsl
gs
xchg
xor
adc
mov
cmc
cmp
mov
pop
sub
cs
call
jmp
push
stos
das
jnp
cmp
dec
xlat
sub
scas
mov
xchg
add
movsl
sbb
pop
or
xchg
add
mov
mov
leave
fwait
push
mov
push
pop
test
mov
adc
in
enter
add
sbb
mov
out
popa
add
and
popa
adc
mov
xchg
dec
sub
lods
cmp
icebp
insb
icebp
fisttpl
or
adc
flds
dec
test
loop
insl
inc
push
jecxz
dec
mov
mov
out
xor
or
xor
ljmp
mov
jae
push
add
xlat
mov
sbbb
and
arpl
test
cmp
clc
gs
and
popa
fdivrl
cmpsl
inc
jecxz
jo
dec
dec
dec
lods
imul
mov
addr16
mov
xchg
jecxz
mov
jo
jae
mov
in
test
xchg
mov
repz
xorl
sbb
push
out
xorb
or
jns
or
fmuls
jno
dec
in
repz
mov
aas
or
mov
fimull
sbb
mov
lcall
hlt
movsl
leave
pusha
xlat
movsl
dec
stc
psubsb
popf
into
sbb
cmpsb
cli
mov
fdivrl
mov
arpl
notl
in
mov
xor
js
inc
mov
enter
pushf
scas
xchg
sbb
mov
cmpl
test
ss
xorl
lock
lret
cmc
add
in
jbe
inc
cld
xchg
jne
std
movb
mov
mov
mov
xor
mov
bsr
test
sbb
adc
or
repnz
ret
cmpsb
adc
movsl
mov
stos
sub
fcmovnb
les
ror
rolb
stos
sub
outsb
push
ret
inc
pop
icebp
std
out
pop
jmp
lcall
pop
or
push
and
sahf
loopne
pop
bound
pop
mov
mov
xchg
dec
fidivrs
fldl
xor
cmp
dec
sbb
adc
push
sbb
xchg
and
inc
popa
lods
inc
pop
insb
xchg
or
adc
push
jle
loopne
stos
lahf
sbb
int3
xchg
jmp
and
in
sbb
ret
iret
pop
adc
fs
gs
stos
xchg
rcr
insl
sub
lock
sbb
push
dec
sti
sub
repnz
aas
loop
cld
notl
cs
mov
fidivl
adc
pop
add
sbb
mov
dec
popa
add
data16
xchg
cld
cmpsb
sbb
jne,pt
mov
mov
mov
pop
ss
mov
xor
or
and
loopne
lahf
icebp
or
jmp
negb
push
xchg
push
mov
orb
cs
mov
idiv
push
clc
push
fsub
xchg
jo
repnz
cmp
neg
xchg
mov
or
or
jp
xchg
xor
add
cmpsl
xchg
test
dec
loop
lret
stos
sbb
lods
cmp
lahf
xchg
cltd
jl
mov
jge
mov
pushf
or
mov
jle
imul
lea
test
jmp
popf
out
sub
les
roll
adc
push
mov
dec
rcrl
ss
sbb
mov
adc
scas
and
push
test
cmc
je
pushf
mov
in
sbb
adc
mov
sbb
xchg
sub
push
cmp
adc
jne
mov
ljmp
mov
insb
inc
dec
loopne
xchg
pop
xor
repnz
xchg
push
leave
popf
xor
push
inc
sbb
xchg
mov
lcall
cmpsb
cmp
or
inc
arpl
cltd
mov
push
movsl
sbb
xchg
enter
mov
xchg
push
cli
stos
imul
mov
shll
pusha
ss
push
or
js
stos
cmp
and
inc
xor
sbb
stos
dec
loopne
adc
cmp
lret
and
rorb
inc
jbe
add
lds
js
or
sbb
ficomps
cld
lret
jne
jo
xor
loop
fsts
and
jo
loop
jmp
mov
push
cmpsb
sub
jp
push
pop
jecxz
repz
ret
jbe
and
rcr
cli
lret
sti
sbb
jno
lret
add
mov
out
mov
cltd
std
loopne
or
and
dec
in
push
mov
sbb
outsl
inc
stc
cld
jmp
ljmp
jno
xor
fs
lock
push
pop
dec
lcall
jmp
subb
aas
pop
mov
inc
ss
std
mov
add
loope
xor
data16
shll
cmp
xor
js
loop
je
add
adc
jo
aad
imul
and
mov
fucomi
lods
inc
and
aad
pop
lcall
je
xlat
inc
gs
dec
insl
push
out
sbb
inc
pop
out
jno
push
dec
cs
ja
dec
dec
outsb
enter
mov
aam
lods
add
mov
sbbl
std
ret
push
mov
jb
fadd
daa
push
or
test
out
xchg
sbb
mov
ret
in
mov
adc
push
adc
mov
or
adc
mov
ret
xchg
lods
or
aaa
je
pop
inc
scas
mov
cld
aad
push
xchg
imul
mov
adc
es
mov
data16
jne
sbb
mov
jle
or
xchg
lea
xor
cmpb
mov
inc
fcoms
aad
movsl
test
sub
scas
mov
jmp
insl
in
jmp
xchg
mov
je
mov
aaa
inc
and
out
dec
adc
jle
and
popa
div
mov
jg
mov
fistpl
inc
notl
dec
mov
outsb
xchg
cwtl
das
mov
sub
mov
aas
lret
sti
pusha
push
xchg
cwtl
push
pushf
leave
cmp
push
das
sub
insb
push
adc
aam
pop
pop
xor
test
daa
pop
jbe
lcall
jo
addr16
stc
cmp
fistps
flds
fcoml
leave
dec
add
gs
loope
inc
leave
jecxz
es
lret
fwait
inc
push
mov
lret
ja
jmp
dec
pop
icebp
ja
sub
lahf
scas
mov
hlt
mov
shll
bound
fcoms
xchg
in
fsubp
faddl
lret
cmp
mov
sbb
jbe
imul
push
mov
pop
cmc
shl
jl
adc
pop
push
addr16
cwtl
add
addr16
cmp
pop
shl
loop
bound
xchg
lods
adc
lods
int
nop
test
out
fidivl
aam
fimuls
xchg
cmpsl
out
cltd
insl
aam
xchg
add
cmpsb
cmc
pop
ret
outsb
xchg
dec
pusha
xchg
in
lock
cmp
cmp
adc
inc
and
push
loopne
fidivs
adc
mov
add
xor
rcrb
or
cwtl
mov
enter
enter
add
mov
xchg
xor
out
cmp
lcall
ljmp
loop
add
pop
scas
sti
scas
or
sub
pop
or
scas
push
jnp
ficomps
inc
or
jo
subl
xor
sbb
inc
in
in
xchg
in
or
jb
and
cltd
xchg
sub
pop
mov
mov
jb
mov
in
xor
mov
fucom
jnp
daa
sbb
cld
rol
add
mov
popf
pop
add
push
subl
dec
sbb
pop
out
xchg
xor
outsl
cmp
movsb
clc
loop
cmp
inc
pop
jb
nop
daa
je
pop
sahf
mov
decb
adc
xor
shlb
enter
lock
orl
cmp
cmp
rcll
jmp
lret
cmpsb
and
add
pop
mov
bound
add
pop
cmp
ds
stos
sbbb
aas
xchg
mov
mov
or
mov
out
mov
lods
aas
cmp
or
cmp
loop
dec
dec
inc
jg
xor
shrl
adc
filds
cmpsl
inc
outsl
add
pop
lock
xchg
dec
dec
ja
jp
aad
fstps
sub
xor
add
add
mov
stos
les
aam
sub
outsb
cmc
inc
adc
data16
cld
shl
les
push
std
cmp
mov
jae
push
pusha
xchg
sub
or
mov
and
pop
flds
andb
outsl
daa
leave
push
aas
xchg
iret
stos
negl
pop
sar
mov
push
jo
sbb
loopne
and
js
push
mov
sub
repz
popa
jle
inc
or
mov
insb
test
xchg
sub
cmpsb
lret
jbe
daa
outsl
pop
stos
fidivrs
xchg
dec
leave
ss
int3
out
inc
push
aaa
cld
bound
push
mov
out
sbb
jecxz
jp
xchg
das
cmp
ss
push
roll
sbb
or
jp
or
int3
jae
rcl
jl
cli
jle
push
or
sbb
jle
aaa
mov
jl
mov
shld
scas
pop
jg
push
push
je
out
sbb
enter
xlat
jb
test
add
dec
notb
cmp
lea
imul
xchg
xchg
pop
idivl
xchg
add
adc
loop
xor
bnd
js
outsb
adc
mov
jb
pushf
data16
xchg
jmp
inc
sbb
push
lret
mov
imul
ljmp
jmp
sbb
xchg
outsl
out
mov
sbb
stos
pushf
stos
jmp
xor
lock
pop
adc
int3
lret
sub
sbb
loopne
sahf
lret
dec
ja
insl
add
jp
cmpsb
xorl
and
mov
and
dec
cmp
int3
dec
mov
dec
mov
jge
jae
lcall
ds
popf
adc
hlt
inc
js
in
sub
add
insl
fs
ret
sti
into
add
dec
adc
mov
ja
and
lods
mov
data16
addr16
mov
dec
mov
cltd
mov
ret
jno
pop
cld
xchg
inc
sub
sub
dec
pop
cltd
iret
aad
je
mov
cmp
jl
cld
lods
jmp
std
cltd
sub
mov
cli
cltd
xor
inc
lods
mov
mov
ljmp
nop
ljmp
cmp
pop
push
scas
jno
jmp
lds
sbb
jg
ss
sbb
mov
mov
sbb
and
and
hlt
daa
inc
push
mov
inc
into
gs
xchg
push
les
sbb
dec
es
shlb
stos
sub
ret
mov
jmp
sub
pushf
jg
cmp
push
xor
out
jo
insl
xor
pop
lahf
cmpsl
test
mov
adc
mov
cmp
ss
cli
pmaxub
nop
push
adc
inc
lcall
in
outsl
mov
mov
shrl
or
or
or
sbb
jns
and
pop
jmp
xor
adcb
pop
xchg
adc
and
cmc
inc
mov
add
inc
xchg
sub
sub
enter
jns
subl
sbb
out
lret
sub
jbe
jo
push
in
loope
pop
cmp
lea
jne
icebp
movsl
push
jns
sbb
pop
xor
pusha
loopne
bound
dec
sbb
pop
sub
in
test
mov
xchg
pop
popa
aaa
pop
jne
cmp
outsl
mov
jge
lahf
sub
pop
jmp
jle
les
insl
das
add
dec
out
je
repnz
dec
pusha
std
add
add
mov
decl
mov
cmpsl
clc
xor
xchg
clc
pop
imul
pusha
mov
mov
movsl
jecxz
int3
mov
jmp
dec
sbb
dec
fldt
imul
iret
sbb
xchg
sahf
sub
pop
xchg
ss
dec
mov
pop
cmp
fimuls
int
in
pop
dec
andl
sbb
mov
cmp
popa
lcall
js
mov
shrl
sar
or
rcll
out
xor
pushf
sub
loope
pop
sbb
xor
adc
pop
cmp
mov
or
out
mov
dec
xlat
cmp
adc
pop
push
mov
inc
or
and
mov
push
mov
scas
sti
cmpsb
and
inc
push
mov
leave
mov
jg
dec
stos
nop
jns
jl
push
negb
mov
mov
mov
and
pop
data16
mov
adc
adc
add
fwait
lcall
jl
arpl
inc
push
stos
push
loop
lret
inc
push
jae
movsl
cld
and
pop
inc
dec
jl
loopne
icebp
outsl
aaa
into
lahf
sbb
push
dec
mov
stc
repnz
sbb
stc
lds
jo
xchg
pop
cmp
mov
inc
loopne
mov
mov
xchg
push
cs
sti
cmp
cmpsl
out
sbb
add
push
adc
and
xor
and
jle
jno
rol
add
fs
pusha
jae
ret
out
outsl
test
inc
shl
mov
pop
mov
pop
jle
pop
sub
or
add
into
lcall
cmp
or
xor
mov
divl
inc
gs
lods
and
ret
scas
fdivp
cwtl
xlat
mov
xor
ret
push
in
add
pop
mov
and
lahf
lods
sti
hlt
sub
loop
pop
out
mov
mov
pop
insb
or
pop
and
mov
popa
into
sbb
cmp
lods
cmp
pop
mov
pusha
mov
pop
ss
cmp
sbb
dec
aas
push
int
gs
lods
pop
push
adc
xchg
xor
xchg
popa
add
xchg
dec
push
mov
sar
or
hlt
mov
mov
pop
sahf
clc
shll
mov
ja
add
out
je
dec
or
jg
or
push
pop
pusha
arpl
sbbl
scas
inc
xchg
pop
mov
push
aad
dec
pop
aaa
fstpt
sbb
lds
cmpsb
loope
sub
int
push
push
sub
cs
test
data16
or
jo
in
mov
mov
mov
mov
sbb
lret
and
mov
icebp
je
in
mov
jnp
adc
aaa
lods
das
fcom
ret
lret
mov
mov
stos
std
loope
xor
cmpsb
mov
mov
mov
out
jle
shrb
mov
inc
fadds
lods
imul
shlb
cs
inc
xlat
mov
mov
cs
add
push
jbe
imul
mov
add
pop
xchg
jo
in
dec
jg
inc
xlat
fcmovnu
sahf
jns
lods
or
inc
xor
xor
pop
xchg
lods
sbb
mov
mov
cmp
mov
dec
lods
sub
jnp
pop
les
cmc
hlt
push
rorb
ret
jl
jecxz
shrb
out
repnz
xor
jecxz
cmp
push
mov
in
repnz
in
inc
cmpsl
out
pop
jae
inc
mov
test
lret
mov
shll
sub
mov
or
or
fwait
test
mov
and
cltd
std
push
mov
sbb
xor
sbb
xlat
lods
cmp
test
inc
nop
in
lcall
enter
hlt
add
dec
and
jnp
jno
pushf
cld
xchg
into
fucomp
jnp
lods
in
faddl
mov
adc
out
repz
add
pop
mov
pop
outsl
cmp
or
cmp
mov
sub
mov
out
ljmp
loope
fdivrl
or
int3
mov
xor
add
jbe
and
push
adc
in
popf
repz
or
inc
dec
dec
pop
inc
mov
adc
push
sbb
andl
and
mov
mov
test
pop
sbb
in
dec
cmp
mov
arpl
std
adc
insl
dec
cld
sarb
jle
pop
pop
add
and
pushf
test
out
and
xchg
scas
test
xor
and
aaa
and
mov
je
mov
xchg
scas
flds
cmp
mov
cmp
daa
bound
sbb
jne
lahf
sbb
cli
rcr
idiv
add
cld
cmpsb
vsubss
sbb
inc
icebp
dec
out
push
fwait
js
mov
hlt
dec
sti
add
dec
cmp
fadds
enter
xor
fnstcw
push
pop
cmp
dec
pop
icebp
repz
sbb
xchg
aaa
ja
cmpsl
ds
inc
arpl
leave
lds
push
inc
xchg
daa
xchg
jns
fidivrl
sub
sub
pop
insl
mov
jns
out
mov
push
lock
cmp
jle
fnsave
outsl
add
jmp
jne
xchg
pop
and
and
xor
pop
cmpsb
mov
lahf
imul
ret
les
dec
pop
jmp
xor
pop
push
outsb
mov
jo
leave
scas
iret
out
pop
jne
mov
pop
ftst
and
adc
shll
adc
aas
clc
mov
or
push
call
xor
mov
test
gs
mov
test
in
sar
jl
gs
mov
mov
pop
and
daa
gs
sbb
inc
rcrb
ja
out
call
cmp
dec
and
mov
ret
pop
movsl
dec
pop
jecxz
push
xor
call
in
aaa
and
movsl
mov
adc
jge
inc
inc
out
mov
repnz
jl
xchg
fs
cltd
rcrl
inc
mov
gs
cwtl
xchg
sbb
mov
xor
notb
or
cmpsb
mov
push
insl
repz
fs
xlat
in
xor
pop
sbb
push
pop
mov
out
lods
sbb
stos
movsb
cmp
in
shll
sub
in
mov
lds
movsb
das
stc
add
in
fldenv
jl
or
jp
sub
adc
movsb
jb
or
sbb
adc
pushf
or
loop
cltd
jle
sbb
jns
add
mov
clc
in
es
test
push
dec
shr
xorb
push
mov
sbb
add
stos
insl
jge
outsb
stc
jnp
mov
xor
adcl
test
pop
jecxz
lret
rcr
push
or
cld
test
adc
jb
ja
mov
lret
fists
push
add
push
ret
or
aad
dec
mov
call
or
in
cmp
mov
gs
add
push
inc
push
jb
test
adc
idivb
int3
repz
je
pusha
mov
shll
inc
add
inc
xchg
scas
scas
in
sub
mulb
adc
lods
inc
inc
xor
in
mov
arpl
shl
ret
lcall
bound
or
pusha
cmp
xchg
jb
pop
jno
out
nop
mov
jbe
mov
outsl
loop
hlt
cld
xchg
jg
or
loop
or
jnp
fsts
sbb
js
cwtl
mov
fisttpll
pop
je
push
movsb
rorb
xor
mov
or
repnz
pop
movsb
les
xchg
dec
jns
stc
xor
cltd
pop
cmp
mov
mov
and
mov
mov
pop
das
jae
push
mov
inc
push
mov
jmp
fadds
dec
ret
cmp
bnd
xor
fisttps
cli
sbb
test
xchg
imul
popf
sbb
pusha
xchg
jbe
fcmovnb
push
scas
mov
out
xchg
mov
mov
pop
mov
jne
in
rcll
out
cmpsb
or
cmp
pop
adc
stos
stos
inc
rep
leave
xor
cwtl
stos
pop
rcrb
add
cld
leave
test
sbb
and
or
and
out
mov
aam
enter
inc
fstpl
subl
inc
jl
jb
mov
xor
or
mov
movsl
testb
test
inc
push
nop
je
test
lds
addl
fwait
add
test
ret
mov
stos
mov
pusha
or
ror
adc
fnstenv
mov
mov
jg
dec
mov
jge
jg
loop
jb
or
xchg
popa
jnp
xchg
jbe
movl
inc
cwtl
jo
pop
mov
push
sar
nop
add
test
popf
sbb
adc
popa
xor
sbb
enter
mov
or
test
inc
int3
add
adc
movsb
das
mov
popa
movsl
fstl
subl
dec
adc
into
sbb
mov
pop
inc
jl
xchg
jecxz
mov
stos
out
mov
fwait
hlt
xor
sbb
cwtl
sbb
sbb
cmp
pop
test
scas
xchg
aaa
mov
bound
cmp
lret
aad
cwtl
ret
fld
mov
jle,pn
scas
mov
insb
fidivl
fs
mov
jl
sti
stos
call
sub
scas
clc
jle
movsb
sbb
sarb
xchg
sub
push
rorl
mov
sub
inc
and
xchg
push
dec
jmp
cmp
push
cltd
nop
cmpsb
in
jne
stc
repz
jns
call
popa
iret
addr16
clc
push
mov
xchg
sub
cmpsb
les
out
mov
jb
gs
enter
push
call
fistl
testl
jl
push
lock
movsb
outsl
fldl
shlb
add
inc
scas
lock
popa
cld
or
mov
out
lret
cmp
mov
inc
xor
scas
jne
nop
fwait
in
inc
sar
xchg
add
mov
dec
or
ret
mov
inc
jns
fcom
add
in
leave
and
popf
xor
jg
adc
push
mov
aam
or
push
bound
insb
movsb
mov
push
ljmp
adc
sti
repz
adcb
insb
fwait
leave
xchg
cli
pop
jb
jp
movsl
xchg
fnsave
mov
lahf
aad
fadds
or
mov
dec
inc
fidivrs
pop
mov
stc
fs
roll
ret
pop
mov
push
fadd
daa
mov
ja
clc
movsl
sub
adc
push
aam
or
inc
mov
push
inc
stos
dec
pop
xor
pop
in
sub
inc
mov
rolb
or
nop
icebp
or
repnz
fwait
stos
pop
pop
or
dec
jg
std
test
sbb
adc
insl
mov
or
xlat
and
xchg
mov
inc
sti
or
sbb
push
ja
movsb
mov
lods
push
outsb
iret
dec
rolb
mov
scas
jmp
js
aad
call
mov
sub
jecxz
aad
rol
jle
cltd
mov
sub
ds
pushf
shrb
jbe
cmp
cmp
sbb
or
push
aas
cmp
js
push
pop
xor
sub
mov
repz
push
inc
inc
push
repnz
cmpsl
adc
sub
xchg
pop
sti
or
jge
pushf
mov
hlt
push
dec
sbb
pusha
fsts
loop
movsb
test
mov
and
mov
xor
cmp
adc
cmc
or
imul
sbb
test
mov
test
into
leave
pop
pop
scas
out
aam
mulb
mov
sbb
enter
js
push
fnstsw
sbb
addr16
cmp
mov
cmpsl
sbb
inc
movsl
std
cltd
mov
push
negb
aaa
nop
sub
popa
bound
dec
loope
or
mov
mov
ret
out
aad
filds
out
jae
push
jmp
sub
mov
xlat
aam
out
add
pop
add
repz
stos
mov
nop
mov
sbb
cld
out
clc
and
aad
and
ret
pop
xor
mov
jle
mov
sbb
into
mov
jo
and
sub
jbe
push
xor
aas
loope
out
adc
call
repz
shlb
leave
push
cltd
mov
dec
gs
inc
cmp
pop
imul
adc
pop
movsl
inc
jmp
jp
jmp
push
adc
int
cmp
and
data16
push
dec
or
push
cmp
dec
stc
ljmp
stc
test
add
es
fidivs
push
ret
sbb
dec
movsb
mov
in
push
iret
les
mov
push
push
pushf
mov
xchg
xor
sub
and
inc
ficompl
scas
aaa
scas
or
jns
into
cmp
sbb
add
cmpsb
addr16
sbb
mov
mov
cwtl
and
mov
add
fsub
push
mov
mov
stos
inc
cmp
addr16
call
add
xchg
xor
inc
jo
or
lock
shll
stos
inc
popa
jmp
mov
leave
es
dec
cli
scas
ret
jo
sbb
mov
mov
mov
popa
scas
in
notb
mov
je
repz
cmp
notl
pop
pusha
jl
mov
fbld
add
stc
fdivrl
and
mov
shll
and
nop
dec
fildll
cmp
andb
dec
mov
sub
cwtl
xor
out
xor
or
mov
mov
out
nop
test
mov
aad
pop
cmp
loopne
push
sbb
mov
or
stc
dec
jl
xor
push
lahf
mov
push
fwait
sti
ficoml
cltd
sub
push
adc
test
cs
stc
or
sub
lahf
jnp
stos
dec
jl
fwait
jbe
stos
dec
jmp
jnp
ret
dec
inc
lds
and
fisttpl
hlt
mov
ret
sub
mov
orb
sub
sbb
into
jmpw
in
and
cmc
scas
sbbb
add
bound
cmp
frstor
and
aam
shlb
adc
test
sti
adc
in
decb
xchg
jp
adc
mov
stos
xchg
arpl
adc
pop
cmpb
fisubrl
jns
cmc
rdtsc
mov
sub
nop
popa
inc
dec
shlb
pop
jnp
rcrb
xor
mov
or
mov
fists
popf
or
and
sbb
test
mov
sub
and
pop
fdivrl
mov
fs
pusha
mov
adc
dec
mov
insb
imul
lods
dec
sbb
add
testb
cmp
clc
push
inc
fs
xchg
aaa
cli
imul
and
idivb
imul
loope
adc
inc
and
imul
daa
cmpl
negb
fs
sbb
sbb
pop
sub
cmp
jge
out
jecxz
lea
ret
xchg
pop
push
adc
jmp
push
insb
sbb
jbe
repnz
push
sbb
bound
jmp
pop
lcall
cwtl
stos
shlb
cmc
ror
jmp
mov
call
in
and
sub
adc
test
dec
pushf
lret
daa
jp
call
loope
dec
fldt
cmp
mov
sbb
ret
dec
popa
faddl
dec
loope
mov
push
jmp
and
imul
inc
and
notb
clc
test
out
pop
dec
iret
ljmp
pop
hlt
lea
dec
dec
pop
pavgb
xchg
cmp
stos
pop
imul
stc
xchg
cmp
xchg
popa
out
mov
dec
add
call
push
push
cmp
xchg
imul
lea
lcall
sbb
sbb
popa
ss
or
pop
nop
fidivrs
rolb
dec
ja
push
dec
mov
gs
push
add
outsb
in
js
jno
sub
ljmp
push
lods
jb
jbe
adc
imul
mov
jo
jmp
push
iret
jb
ja
out
rcll
push
movsb
add
es
nop
in
leave
add
scas
jp
sub
xor
sub
in
xchg
jnp
popf
jae
outsl
scas
fldpi
push
jnp
xor
sarl
push
jmp
das
push
jmp
or
jo
cmp
fisubrl
in
fcmovnb
das
or
jle
into
lea
mov
or
pop
lock
adc
arpl
jbe
nop
xor
in
add
js
shrb
test
push
into
outsb
xorb
mov
sub
and
loopne
xchg
pusha
and
lret
push
into
ljmp
adc
out
into
mov
icebp
jo
xchg
xor
pop
insl
jg
icebp
xchg
mov
test
mov
cwtl
or
stc
cwtl
das
sub
jns
js
leave
outsl
mov
lahf
cmpsb
cmpsl
outsb
mov
pop
fiaddl
push
shl
xlat
loopne
mov
mov
cs
sbb
sbbl
mov
cmpsl
push
jge
sub
inc
fiaddl
adc
jb
popa
add
adc
ror
mov
aaa
rcr
adc
sti
andb
and
jecxz
dec
mov
aas
inc
mov
gs
mov
outsl
jno,pn
jmp
add
je
pusha
ja
arpl
mov
std
push
not
xchg
movsb
push
fcomi
sub
pop
lods
sti
mov
daa
adc
test
mov
mov
adc
mov
dec
jno
outsb
and
mov
sahf
jle
sub
mov
mov
mov
pop
mov
cwtl
pop
aaa
add
push
leave
stc
nop
in
sub
push
push
adc
or
jnp
inc
imul
pop
test
mov
push
adcl
mov
cwtl
cs
scas
jmp
js
mov
or
out
aas
jmp
negb
clc
pushf
test
std
cmp
pop
das
addr16
sbb
mov
fmul
xlat
add
mov
jno
outsb
adc
add
cli
shlb
insb
push
cltd
cmp
inc
sub
xchg
mov
ja
repz
arpl
pop
xchg
pop
pushf
mov
xchg
sbb
hlt
cwtl
mov
and
inc
rcrl
or
or
inc
rcrl
in
push
out
fistpl
incl
imul
inc
xchg
nop
adc
sub
mulb
sbb
inc
pop
xchg
outsl
ja
loopne
rclb
push
xlat
test
jecxz
xchg
int
int3
lods
jnp
cld
popl
shlb
std
mov
rcrl
scas
out
test
inc
xchg
jmp
adc
mov
lock
sub
ficomps
push
and
or
dec
jo
mov
jmp
test
in
cmp
xchg
xor
sub
and
es
jne
cmp
xchg
mov
pop
mov
jnp
mov
push
aad
mov
in
int3
into
lods
out
cltd
mov
sti
dec
xchg
shrb
je
cmpsl
fdivrl
push
das
int3
and
jg
mov
sub
mov
mov
int3
lret
xor
les
andl
cmp
dec
jbe
das
adc
lcall
inc
in
add
fnstsw
mov
test
xchg
sub
inc
loopne
dec
popa
ja
inc
cmpsb
hlt
xchg
into
pop
dec
sub
fcomp
mov
xchg
fidivs
push
scas
sbbl
mov
push
hlt
inc
cmpsb
cmp
cwtl
pusha
stos
or
fisttps
xchg
out
xchg
pop
int
push
mov
inc
and
mov
inc
loopne
adc
sbb
inc
movsl
jp
fbstp
gs
mov
inc
add
mov
jmp
ljmp
mov
clc
jl
call
ret
out
fildll
cmpsb
mov
mov
int
js
xor
sarb
mov
mov
lahf
or
outsb
dec
stos
pop
mov
fists
sub
fs
dec
int
sbbl
inc
push
test
dec
hlt
ja
popa
movsl
js
mov
lock
ljmp
add
mov
jno
addr16
mov
ret
or
xchg
sbb
dec
pushf
cld
add
dec
xchg
xchg
andb
adc
or
inc
bound
mov
adc
into
mov
jbe
push
jge
cmp
add
in
data16
sub
dec
jle
loope
out
test
mov
neg
lret
mov
jnp
out
or
or
push
add
inc
mov
lret
loop
ror
in
xchg
test
dec
mov
pop
arpl
xor
jbe
sbb
in
add
and
stos
rorb
stos
pop
dec
hlt
pop
cmp
xor
cli
cmp
les
fwait
ret
iret
dec
sub
and
insb
pop
scas
enter
xchg
clc
fldcw
jne
adc
ds
fs
xchg
mov
xchg
adc
insb
inc
shrl
sti
or
test
pop
stos
mov
fnstenv
jg
inc
pop
bound
sub
test
into
pop
push
jecxz
jp
mov
push
dec
or
out
mov
arpl
jmp
shlb
imul
stos
mov
imul
rol
pop
sub
pop
call
imulb
xor
add
cwtl
lcall
gs
mov
xchg
xchg
fidivl
shlb
jg
mov
shll
pop
ds
ss
dec
pop
jnp
xor
rcl
jle
push
repz
cwtl
and
inc
push
mov
dec
xor
jo
cmp
rcr
xor
mov
int
shl
push
cwtl
test
xchg
loope
das
outsl
push
fmull
fdivp
sbb
pop
jg
insl
cltd
push
enter
cmp
mov
jmp
sbb
mov
and
dec
shll
jbe
adc
test
fidivl
andl
jmp
mov
subb
inc
lods
pushf
ljmp
sub
xchg
push
and
aam
lock
test
adcb
push
add
enter
stc
xchg
mov
mov
or
xchg
mov
lcall
inc
push
jmp
or
pop
sub
popa
pop
add
repnz
js
test
pop
rorl
push
rolb
sti
addr16
xlat
xchg
pop
jge
ljmp
xchg
loopne
dec
dec
xor
push
outsb
ljmp
mov
data16
mov
xchg
int3
fstpl
and
ja
pop
ljmp
jecxz
cmc
push
hlt
pop
xchg
pop
test
mov
mov
aad
jo
cmp
and
cvttps2pi
jp
inc
loope
movsb
int
mov
stos
aas
pop
fdiv
ss
std
mov
and
out
push
jmp
pop
inc
lock
test
xchg
lcall
jp
lock
out
jns
push
mov
xchg
sub
mov
int3
aaa
pop
gs
mov
cmpsl
fisubrs
stc
mov
mov
addr16
mov
and
pop
in
adc
call
in
test
je
and
sti
outsb
add
gs
mulb
movsl
clc
roll
adc
in
jb
adc
fstpt
pop
push
mov
jb
shll
mov
sar
fnsave
jl
push
movsb
dec
jl
icebp
imul
mov
subl
dec
dec
push
mov
pop
js
dec
fstpl
sub
orb
add
adc
int3
add
test
popa
mov
mov
nop
call
adc
aas
mov
xchg
aaa
mov
add
in
fwait
adc
push
jno
cmc
mov
imul
sbb
aaa
into
mov
ror
push
dec
fwait
subps
stc
fwait
cmpsl
data16
je
jl
mov
repnz
xchg
add
call
mov
call
mov
pushf
loopne
fdivrs
dec
addb
fldt
mov
dec
sbb
aas
bound
outsb
inc
add
aam
xor
mov
lock
lret
in
lods
ret
or
sbb
stos
push
xchg
add
scas
out
sti
xchg
aaa
fisubrs
shrl
test
push
pop
mov
pushf
dec
cltd
test
jmp
mov
mov
pop
xchg
outsl
add
cmp
call
loop
clc
pop
xchg
inc
mov
les
add
xlat
rcrl
dec
add
cld
lret
fistl
push
mov
repnz
aas
or
adc
xchg
outsb
fisubs
shrl
push
aad
jb
je
imul
xor
dec
dec
xor
aaa
popf
ret
fwait
insl
or
mov
push
push
push
fcomi
pop
adc
rcrb
mov
xor
out
mov
jmp
or
cmp
cmc
mov
fdivl
inc
mov
imul
and
int
dec
mov
in
lods
jnp
inc
cmpsb
cmp
adc
movsb
add
ret
sbb
xor
cli
sub
ret
sbb
xchg
bound
test
cmovae
push
push
pop
repnz
jbe
sub
fcmovne
cmp
into
push
mov
jp
add
mov
mov
aad
jnp
sbb
aad
xchg
stos
fldl2t
jge
jb
mov
test
inc
xlat
mov
pop
orl
dec
add
sub
in
mov
jo
inc
cmpsb
daa
xchg
add
ja
scas
adc
mov
mov
sub
bound
in
sub
dec
and
enter
dec
push
xor
cmpsl
or
aam
bound
jb
insb
mov
jo
jl
repnz
and
inc
or
es
test
inc
sub
addb
rolb
fs
jne
xchg
inc
mov
in
xchg
addb
js
test
call
repz
xchg
icebp
sub
add
cmp
sub
push
je
pop
xorb
ret
push
arpl
push
add
inc
pop
stos
cmp
adc
cmp
test
subps
je
mov
push
lret
jmp
out
or
lret
fistps
mov
fs
enter
push
cmpb
repz
fidivrs
pop
lock
popl
in
push
push
push
xchg
pushf
cmc
mov
mov
jmp
mov
aam
and
iret
lods
inc
pusha
loope
add
lret
fwait
rclb
gs
sbb
aaa
inc
fldcw
dec
and
lret
addr16
rcrb
jo
pop
mov
inc
icebp
and
mov
pop
xchg
add
adcb
dec
test
inc
push
cwtl
mov
mov
xchg
push
adc
or
repz
mov
clc
movsb
mov
ffreep
add
or
and
pop
adcb
into
sbb
testb
or
xor
test
push
and
into
mov
cmpl
psrlq
and
xchg
jmp
notb
and
xchg
add
cmpsb
icebp
mov
push
ret
punpcklbw
cmpsl
lods
jmp
jnp
popf
inc
mov
mov
stos
pop
icebp
aaa
nop
lods
push
inc
fs
jno
ror
test
mov
sbb
sub
fucomp
stos
push
pop
push
push
inc
cli
fistl
aas
icebp
adc
inc
loope
mov
mov
int
pop
mov
pop
ret
pop
push
fadds
xor
in
xchg
orb
sub
xor
shrl
ror
mov
push
jmp
jle
mov
inc
out
icebp
pop
pushf
xor
loop
inc
ret
int3
hlt
pop
aas
lret
bound
ds
pop
dec
rol
pop
jbe
xchg
xchg
cmp
imul
loope
cmp
aad
test
mov
push
adc
sbb
mov
cmc
shrb
scas
cmp
mov
jnp
popl
mov
adc
mov
rol
shrb
scas
cmpsl
aad
loopne
in
pop
sbb
inc
sbb
popf
pushf
adc
mov
or
insb
xor
mov
sub
fwait
sub
mov
xor
loopne
push
cmpsb
cmp
nop
push
leave
pusha
inc
lahf
dec
jecxz
int3
push
mov
add
jno
adc
fs
jle
and
inc
fcmovbe
out
push
movsl
ficomps
pop
dec
dec
sub
fbld
aad
pusha
pop
sahf
push
dec
es
ret
sbb
fbld
adc
and
mov
lds
mov
out
roll
nop
shrl
imul
sbb
loope
aam
push
sahf
xor
xor
loop
je
push
cli
xchg
inc
inc
mov
aaa
aam
and
in
movsb
xlat
pop
outsb
add
cmp
cmp
mov
pop
jl
push
sub
cwtl
cltd
fcmovnb
push
lret
addb
push
sub
popf
lret
test
imul
in
sub
fisttps
inc
out
mov
imul
inc
lret
mov
jo
and
std
inc
mov
or
ret
cmc
aam
jmp
inc
lcall
jecxz
mov
jae
mov
mov
dec
shlb
add
cld
inc
and
icebp
imull
and
fwait
xchg
fwait
ljmp
push
test
mov
aas
test
dec
fildl
jg
shlb
aam
xor
xor
add
jno
fnstenv
mov
mov
mov
popf
cmp
in
push
and
je
lcall
jmp
into
leave
into
subl
xchg
push
jecxz
add
cltd
loop
xlat
bound
hlt
out
lods
movsl
or
and
mov
std
and
insl
sbb
enter
lea
adc
jl
lret
sub
lods
inc
pop
int
jle
push
cs
pusha
test
into
add
mov
lret
loop
call
lahf
adc
daa
mov
jne
jb
adc
loopne
xor
xchg
sbb
sub
dec
jo
pop
mov
fistl
push
stos
out
mov
mov
adc
sarl
mov
jne
movsb
rcrb
xchg
xchg
in
test
aad
les
xor
loop
cmp
mov
xor
in
icebp
jae
xchg
sarb
cli
mov
outsb
jno
stc
popa
in
mov
push
stc
sbb
pop
jl
xchg
jmp
ds
sbb
mov
push
sub
aam
bswap
popa
jg
pusha
neg
mov
add
lea
mov
in
fnstenv
cmp
xchg
jge
cmp
dec
dec
adc
jg
dec
iret
out
xchg
ret
cmp
cmpsb
dec
lods
fnsave
xor
mov
or
xor
scas
mov
push
pop
inc
mov
sbb
leave
pop
iret
rcr
int3
out
jns
shlb
enter
rcr
mov
inc
mov
cli
sub
int3
bound
ds
int3
xchg
sbbb
sbb
lock
add
push
and
pop
aam
and
shl
cmp
and
mov
pop
ret
or
and
pushf
nop
mov
shrl
jmp
add
das
push
lea
fcoms
and
movsl
mov
or
pop
inc
jecxz
adc
adcb
fcoml
jne
jle
mov
adc
add
insl
jge
cmp
pop
sub
or
pop
lods
ret
lcall
lcall
fwait
shlb
mov
popf
int
adc
add
xchg
daa
mov
sub
xorb
lret
jb
out
inc
sbb
jl,pt
inc
int
movsb
inc
hlt
mov
scas
mov
or
adc
add
rcrl
mov
test
pop
and
out
xor
aaa
jae
jg
pop
lods
std
pop
fcoms
adc
popa
sbb
subb
xor
cmp
loope
mov
in
int
aad
stc
add
and
mov
cmp
xor
xor
mov
imul
cld
stos
outsb
ja
sbb
fwait
and
pop
test
int3
cmpsl
cld
rcrl
lret
test
sbbb
stos
adc
icebp
fwait
mov
cwtl
pusha
mov
jecxz
mov
cli
xorl
mov
dec
mov
lods
sub
xchg
pop
ret
inc
xor
xor
js
inc
mov
adc
inc
fidivs
pop
mov
imul
lods
jno
pusha
mov
enter
shlb
test
xor
lret
hlt
cld
clc
loop
sub
gs
xlat
lock
pop
cmpsb
jle
add
or
and
add
mov
jb
call
push
mov
pop
dec
loopne
enter
sub
filds
sarl
sub
rorl
bound
add
mov
clc
push
mov
mov
insb
jecxz
fwait
lcall
loop,pn
add
mov
xor
mov
stc
popa
xor
push
jge
sub
cmc
lret
test
out
addr16
popa
adcl
cmp
jne
adc
inc
pop
sbb
rorb
daa
scas
stc
cmp
fidivl
push
pop
rcl
xlat
mov
aaa
sbb
scas
inc
mov
adc
fistps
in
out
sbb
mov
and
into
sti
xchg
cli
ljmp
pop
xchg
push
scas
dec
jnp
mov
test
fsubrl
fcmove
cmc
je
shlb
xor
sub
rorb
out
jne
ret
cmp
hlt
sub
adc
adc
outsb
mov
or
in
jmp
in
ret
xchg
sub
shll
scas
inc
insl
xor
mov
rorb
stc
xchg
jb
add
push
xor
fwait
mov
imul
sub
pusha
dec
add
xlat
mov
or
mov
test
imul
pushf
call
pop
inc
test
lds
imul
ljmp
sti
or
ss
pop
cmp
cmc
sbb
push
loop
add
or
adc
shl
mov
iret
rolb
sbb
pop
xor
jg
or
push
push
sub
leave
xor
xchg
mov
xlat
jp
insl
and
int
or
leave
pushf
pop
sti
das
push
jae
loope
mov
xor
leave
gs
mulb
inc
xchg
mov
mov
and
ljmp
aaa
or
fsubrp
xchg
add
pop
shl
bnd
arpl
push
jo
xchg
sbb
xor
outsb
sbb
sub
push
cmpl
sbb
pop
lahf
or
mov
pop
insb
pop
in
sbb
xor
push
cmp
sbbl
sti
xchg
and
dec
dec
lods
xchg
dec
ffreep
repz
mov
pop
sub
cmp
cs
lods
mov
fsub
mov
jmp
loop
cmp
shlb
push
jl
sbb
rol
loope
pop
mov
stos
ret
jb
es
imul
mov
jnp
lods
movsb
icebp
fwait
loopne
xor
std
imul
sbb
andb
nop
push
stos
push
in
nop
lods
adc
sahf
mov
mov
arpl
inc
or
push
mov
push
or
mov
mov
lods
mov
jmp
cmpl
mov
ror
cmc
cmp
adc
xchg
dec
icebp
or
mov
or
fists
sub
pop
push
mov
arpl
xchg
inc
cmp
shlb
cli
clc
adc
jae
jo
stc
inc
lcall
sbb
std
adc
ss
incl
imul
gs
adc
mov
lods
lds
dec
or
jecxz
stos
std
xor
add
adc
fistpll
add
leave
jne
push
cmp
xor
outsl
push
adc
push
test
es
shrb
mov
div
push
pop
fstl
add
and
int
xor
rolb
or
sbb
xchg
mov
int
in
arpl
inc
int
fs
sbb
imul
mov
inc
dec
and
lea
fs
cmp
int
js
xchg
add
mov
inc
and
clc
std
jo
in
mov
ds
js
pop
lods
jle
mov
pop
jae
add
sahf
push
aaa
pop
cs
sbb
dec
add
stos
dec
nop
xchg
push
mov
lahf
sub
mov
sub
xor
mov
idivl
xchg
mov
into
mov
fst
push
iret
ret
out
jo
jnp
repnz
jge
addl
loope
add
mov
pop
clc
lods
js
mov
fwait
aas
fiaddl
cmp
lea
mov
sbb
cmp
jl
sbb
subb
shl
jne
mov
jecxz
ret
bound
pop
xchg
xchg
or
push
call
daa
cmp
mov
dec
pushf
ja
ljmp
adc
lea
mov
jbe
aas
lret
jnp
push
rsqrtps
or
xchg
sbb
cmpsb
xchg
cmp
mov
xor
push
xchg
dec
ds
jne
popa
clc
rcrb
mov
mov
mov
iret
mov
pop
inc
fadds
repz
loopne
xlat
in
cltd
and
push
mov
clc
mov
push
add
lods
sub
cmovbe
jecxz
jns
aad
jge
icebp
mov
cld
push
int3
pop
mov
pop
nop
pop
inc
xchg
fstpt
fadds
inc
jl
fmul
dec
frstor
out
fldcw
lcall
mov
lds
das
fwait
in
insl
int
xchg
in
inc
push
sub
je
popf
or
sub
test
test
or
sbb
out
stc
cmpsl
inc
mov
adc
inc
sti
scas
fsubl
out
mov
jle
xchg
push
cmpsb
jl
mov
cmpsb
cmp
sub
sub
pop
mov
shlb
repz
fbstp
jg
or
negl
mov
push
test
xchg
aas
sbb
or
mov
pop
pop
xchg
ljmp
pop
xor
xor
sub
lods
jae
fcomip
mov
movb
xchg
cld
cld
add
adc
enter
ljmp
cmp
popl
xlat
ss
aam
or
push
lods
imul
mov
or
add
jne
cltd
mov
or
inc
lea
lcall
popa
mov
push
mov
iret
das
dec
loop
cmpsl
test
adc
imul
pop
fnsave
pop
ljmp
rcrl
dec
int3
jns
and
aas
enter
push
test
setg
add
cmp
lds
popf
xor
xor
arpl
ret
mov
jl
add
sub
mov
mov
xchg
adc
movsb
dec
mov
mov
outsb
notl
inc
jl
adc
jecxz
jge
and
sbbb
sbb
ja
mov
adc
mov
pop
imul
outsb
fucom
xchg
stos
cmp
xor
or
lcall
into
sub
push
cwtl
jnp
fdivl
jne
pop
mov
aam
call
jg
mov
adc
iret
loope
pop
jecxz
inc
imull
cmpsb
cmp
loopne
sbbl
int
ja
pop
mov
movsb
mov
loopne
call
pop
jge
pop
lcall
mov
xlat
mov
jo
sub
xchg
or
sti
push
decl
mov
aam
int
cld
inc
cmp
cmp
jle
shrl
lahf
xor
loop
call
push
cmpsl
dec
clc
or
aas
fwait
add
aad
lock
fwait
add
out
cmpsl
sub
shll
push
push
out
aam
cmp
ja
icebp
test
dec
ret
pop
inc
fcmovnb
lock
cmc
pop
pusha
mov
jo
inc
cmp
call
sbb
mov
push
sub
cmpsb
dec
lret
jae
sbb
mov
jnp
push
ficomps
loop
rcrb
cmp
stc
decb
add
xchg
inc
shrb
out
add
pusha
ja
pop
mov
push
mov
mov
adc
add
mov
pushf
xchg
dec
int
test
dec
xor
mov
jb
push
lret
mov
mov
rol
mov
lret
data16
jbe
pop
ja
add
rorb
push
lods
rcr
test
fst
xchg
cmp
je
mov
movsb
adc
shr
add
imul
xchg
cmpsb
arpl
aas
xlat
ret
jge
jg
mov
test
or
es
lret
loopne
dec
pop
ja
outsl
xor
into
inc
insl
inc
mov
jl
fisubrl
out
push
cmp
pop
int
popf
and
nop
push
push
cmp
inc
mov
pop
lahf
cltd
data16
adc
out
fwait
xor
movsl
jo
xchg
sub
fstpt
xchg
xchg
ljmp
insb
js
cmp
xchg
out
and
xchg
xchg
scas
je
cli
jge
pushf
cmc
cmp
add
lcall
xlat
sbb
cmp
mov
adc
inc
jp
test
lahf
lds
jnp
out
xchg
lret
test
popa
or
mov
ja
xor
ret
inc
xchg
mov
ficoml
fisttps
add
inc
adc
out
std
jmp
out
or
das
ret
jecxz
std
data16
aas
int3
pop
push
and
mov
mov
jns
mov
add
test
pop
cmp
cmpsb
lcall
ret
mov
and
int3
xchg
pop
int
jae
push
push
xchg
dec
push
adc
jbe
out
xchg
int3
test
stos
xor
pop
mov
frstor
and
sbbl
xor
mov
add
dec
cli
call
mov
mov
pop
out
bound
out
xor
cmc
std
jmp
xchg
sbb
mov
dec
sbb
jmp
sbb
ss
adc
xorb
mov
int3
fists
addb
scas
mov
div
mov
ja
mov
push
cmp
inc
inc
push
lcall
or
cltd
xchg
mov
cmpsb
mov
push
movsl
lret
sti
ret
les
rcrl
mov
lret
outsb
hlt
push
movsl
and
loope
mov
sub
sahf
lods
cmp
jecxz
push
sub
mov
adc
sbb
add
icebp
xor
push
jne
bound
dec
aad
fdivrl
add
aaa
mov
fwait
pop
dec
dec
and
iret
mov
jbe
adc
shrl
pop
mov
movsl
jg
mov
stc
mov
sbb
das
xor
sub
call
aas
pop
mov
shrl
sahf
jo
mov
push
fisubl
push
bound
sbb
adc
into
sahf
xchg
jo
sahf
sub
in
das
loop
mov
hlt
int3
scas
clc
aam
test
mov
lahf
sar
sti
inc
sub
adc
aad
inc
sbb
mull
stos
sub
insb
je
lret
lods
lea
daa
cmc
mov
inc
test
jp
push
pop
pop
and
clc
xchg
xor
insl
push
mov
and
add
jae
mov
push
in
cmpsl
push
inc
ret
push
fbstp
mov
lcall
movsb
cmp
mov
test
out
popf
and
shlb
dec
jecxz
test
mov
sahf
xor
out
std
mov
sarb
mov
cmpsb
mov
or
xchg
pop
mov
cmpsb
add
lods
sub
mov
fnstsw
xchg
dec
or
mov
arpl
sbbb
xor
xchg
aad
pushf
xor
arpl
xchg
stos
pop
pop
mov
fisttpl
adc
cmp
aas
outsl
in
stos
jo
insl
adc
and
sbb
mov
inc
mov
jbe
pusha
js
or
adc
out
inc
cmp
popa
outsl
subb
js
adc
mov
sbb
sub
pop
leave
outsb
enter
mov
mov
stc
sahf
add
mov
sbb
xor
xor
cmp
add
adc
fs
incl
loopne
adc
add
gs
sbb
test
pop
xchg
add
insb
mov
ss
notb
xorb
jp
add
mov
or
aam
xchg
sub
mov
push
sti
or
adc
and
cmc
jp
sub
int
xlat
jmp
inc
inc
jno
je
and
pop
imul
aad
mov
mov
xlat
or
out
push
adc
mov
xchg
leave
movsb
inc
mov
mov
int
cmp
sbb
cmp
xchg
add
sti
jbe
int
mov
lds
inc
pop
test
cmp
xchg
inc
frstor
bound
xor
fdivr
int
xchg
repz
loop
inc
ret
mov
xor
fnstsw
xor
mov
loope
shrb
out
test
xchg
mov
sbb
and
jns
rorl
xorb
xor
pop
leave
xor
sbb
in
in
mov
clc
loop
sbb
in
shlb
cmp
xlat
mov
lret
bound
push
scas
inc
sbb
cmp
add
pop
jmp
pop
int3
arpl
notb
pop
sub
or
push
xlat
mov
lcall
aam
decl
stos
rcrb
mov
addr16
cwtl
cwtl
jae
inc
mov
aam
xorb
push
pop
mov
jle
jge
outsb
fildll
adc
sbbb
addr16
bound
mov
mov
pop
xchg
sub
icebp
mov
cmp
mov
push
jg
inc
out
subb
mov
cmp
push
xor
orl
and
repz
xchg
cmp
jbe
scas
loopne
cmpsl
out
out
je
shrb
inc
dec
mov
mov
jns
xor
repz
iret
decb
rcrb
out
sbb
or
cwtl
xor
push
jecxz
jbe
das
add
mov
int
in
and
cltd
mov
inc
dec
dec
in
ja
mov
rdmsr
sar
shlb
sbb
rol
das
inc
and
orb
adc
loope
and
call
hlt
add
push
xchg
inc
out
jno
pop
pop
iret
sub
mov
adc
ss
or
gs
push
push
push
les
dec
je
fdivrs
cmpsb
cmp
into
cmc
jl
sti
lcall
and
adc
jbe
adc
stos
xchg
fidivs
jle
sub
cmpsl
and
stos
inc
sub
mov
cs
insb
xchg
pop
xchg
or
in
adc
lahf
mov
xor
jae
popf
lock
mov
jo
xchg
nop
insl
mov
add
adc
shrl
or
and
push
fwait
es
xchg
unpcklps
pop
xor
pop
push
xor
fnstsw
xchg
pop
sbb
xor
pop
pop
addb
mov
dec
in
adc
adc
call
sbb
mov
push
xlat
icebp
or
data16
addl
loop
pop
inc
pop
ds
das
popw
sub
dec
sub
in
ret
jl
and
dec
push
decb
xchg
push
insb
jns
pop
mov
mov
fsubs
aas
and
add
pop
sbbl
mov
pop
das
cmp
sbb
dec
imul
inc
fwait
and
or
xor
push
subb
jae
cli
mov
int
call
cmp
shrb
lahf
cwtl
icebp
movsl
leave
cld
ss
inc
std
xchg
add
jle
repz
popa
xor
jns
cmpsl
mov
cmp
shrl
mov
aaa
pop
in
add
and
scas
push
lret
enter
cltd
rcrb
lret
pop
jae
xor
and
push
push
js
popl
push
scas
push
lds
leave
or
jl
sti
fwait
std
aaa
fsubrl
dec
inc
xor
lret
add
adc
pop
stos
add
adcl
icebp
jne
lds
push
push
jmp
xor
jmp
and
ljmp
cmp
xchg
movsl
jge
dec
negb
push
std
insl
aas
fwait
sti
push
rcll
mul
xor
sbb
in
push
paddq
mov
mov
sub
in
stos
xchg
and
es
arpl
sbb
cld
push
ja
jmp
in
jl
dec
mov
mov
notl
pushf
cvtpi2ps
cmc
jge
cld
push
and
ficompl
cmp
in
jle
enter
loopne
mov
jmp
sbb
out
fnstenv
fistpll
xor
je
xchg
jmp
and
inc
jmp
mov
cmp
hlt
mov
push
stos
and
out
ds
arpl
push
jo
fisubl
imul
push
clc
sub
cli
xchg
adc
rcl
fs
leave
nop
popa
loope
inc
mov
pop
mov
xor
and
xor
cld
andb
push
sub
inc
lret
stos
daa
fcoml
dec
adc
lock
sahf
loopne
aam
lods
or
aaa
push
mov
adc
mov
fsubrp
inc
decl
arpl
das
mov
push
mov
stos
ret
clc
mov
scas
lahf
dec
in
cmp
sbb
push
push
lcall
and
mov
rcrl
int
lcall
add
rorb
inc
mov
dec
iret
mov
cmc
js
out
inc
test
sbb
pop
stc
sbb
testb
sub
test
or
das
int3
nop
ficompl
das
mov
int
jae
cmp
repz
fsubrp
int3
sbb
shrb
inc
mov
int
push
call
data16
aam
ficompl
push
fildll
movsb
dec
inc
pop
jecxz
lods
sbb
test
out
std
fisttpll
sub
sti
inc
fidivl
or
sbb
push
ljmp
cmpsb
cmp
cmpsl
lret
mov
pushf
in
xchg
test
sbb
dec
pop
jne
push
out
xchg
fwait
xor
mov
push
fstl
out
dec
dec
fs
int3
jnp
xchg
mov
les
push
pop
xor
push
andb
fdivrp
cltd
int3
mov
mov
mov
or
les
pop
lret
push
nop
call
pop
and
cmc
mov
outsb
or
xchg
decb
jbe
mov
mov
push
xor
mov
int
rorb
dec
cmc
pop
mov
scas
lcall
mov
xchg
ficoms
out
xchg
or
lds
pop
mov
push
add
fildl
insl
jb
pop
push
fwait
shrl
fcompl
dec
pop
jbe
ss
cmp
es
decb
push
int
adc
loop
pop
and
aam
montmul
cmpsb
in
ss
adc
mov
sbb
ds
add
cmpsb
push
jae
jno
fadds
sbb
adc
outsb
jl
mov
ds
pop
push
xchg
jmp
lods
xchg
jge
test
pop
scas
pop
dec
add
cltd
cmpsl
dec
out
jle
jns
sub
or
cmpps
push
imul
mov
out
ss
rol
push
xor
les
cmp
popf
in
xor
pusha
fldl2e
xchg
or
push
mov
and
mov
je
fs
leave
and
leave
cmp
setne
mov
sar
sbbb
cwtl
or
pop
inc
xchg
jmp
into
gs
dec
loopne
rol
mov
jg
movsl
icebp
nop
adc
imul
xlat
jno
test
mov
lods
scas
adc
fsubrp
icebp
mov
fcomps
cld
test
int
mov
fcmovb
cs
push
add
lea
bound
jp
push
jge
shrb
inc
popa
xor
sti
std
push
hlt
jo
jle
or
icebp
rdmsr
out
cli
ljmp
dec
data16
inc
cli
pop
ja
push
cmpsl
xchg
inc
repnz
or
mov
sbb
push
xor
lock
imul
imul
addr16
out
and
adc
sbb
rorb
jg
sbb
aam
pop
add
out
ret
xchg
addr16
ds
xor
xor
xchg
push
mov
sbb
jns
aam
dec
pop
ds
mov
ret
in
add
sarl
sub
pop
xor
cmp
mov
jno
inc
xchg
in
jb
dec
cmp
outsl
lods
mov
push
out
push
stos
cmp
xor
push
pop
jb
fdiv
pop
sub
inc
cmpsb
dec
fidivrs
dec
mov
push
aam
add
outsl
xchg
pop
xlat
outsb
mov
jne
cmp
cs
xchg
out
loop
xchg
add
movsl
mov
jae
mov
jl
mov
imul
xorb
stos
sbb
jae
cs
pop
xor
rolb
repnz
adc
dec
add
in
jb
repnz
sbbl
xchg
loop
pop
or
cs
loop
inc
sbb
das
cmp
adc
int
hlt
mov
gs
shlb
pop
scas
jge
adc
rcrb
push
rcrl
add
dec
xor
sbb
jge
dec
mov
mov
mov
ret
dec
movsl
addr16
popa
jg
xchg
sti
push
lock
jmp
push
int
out
xchg
fidivs
ret
hlt
sub
ds
mov
clc
and
cltd
and
mov
xor
jno
push
pop
mov
xor
mov
fprem1
ss
push
cmp
push
loope
pop
xchg
fidivs
sub
mov
rcr
xchg
js
ja
leave
loopne
add
test
pop
xor
mov
hlt
adc
addr16
mov
test
idivl
movsl
stc
push
mov
mov
jmp
lds
dec
mov
ljmp
jne
mov
lock
clc
jnp
mov
cltd
mov
jb
sub
ljmp
jno
dec
push
xor
sbb
mov
push
pop
movsb
lock
lea
movsl
loop
xlat
xchg
xor
idiv
lock
das
mov
mov
rcrb
mov
cmp
xchg
shl
cmc
mov
ss
adc
pop
jb
movsl
sub
push
je
pop
jb
and
shrl
lret
fmul
sub
js
loop
ja
es
imul
xor
enter
and
pusha
shr
mov
rcr
out
dec
pusha
add
jb
andl
xchg
push
xchg
dec
in
jbe
mov
pop
arpl
nop
adc
add
cmp
das
sbb
and
inc
mov
jne
sbb
cld
jge
insb
jb
imul
dec
jmp
ret
xor
insb
call
mov
push
pop
loop
jecxz
outsb
icebp
subb
sbb
mov
mov
in
xchg
lock
push
enter
fisubrs
push
sti
out
sub
pushf
mov
dec
stc
jmp
mov
mov
fucomi
inc
mov
add
cmp
pop
adc
sahf
pop
loope
sub
in
cli
aam
mov
pop
mov
test
xchg
les
in
in
or
or
mov
pop
mov
jp
jecxz
push
das
es
stc
ret
iret
loop
sub
pop
jo
test
xchg
push
imul
leave
inc
pop
add
mov
ja
inc
int
in
inc
mov
test
add
add
xchg
xor
sub
fimull
nop
out
mov
daa
loopne
repnz
sub
in
int3
test
push
xor
test
ret
in
insl
push
call
fidivl
pop
adc
stos
js
fmull
mov
jne
cmp
icebp
mov
es
mov
pop
push
dec
cs
lds
mov
or
or
cwtl
repnz
es
pop
push
jmp
inc
jg
cld
and
sti
add
jno
xchg
sbb
sbb
sbb
mov
js
shrl
out
jge
and
arpl
shlb
int3
arpl
ss
mov
dec
insb
mov
cmp
into
mov
mov
sub
push
fs
pop
sbb
mov
sub
xchg
cmc
jae
xor
ficomps
test
jno
enter
imul
mov
dec
pop
mov
sbb
repnz
add
xor
rolb
push
lret
push
call
lock
or
cli
push
std
lret
cmpsl
inc
clc
and
ret
fxch
test
jbe
fsubrs
xchg
call
pop
leave
xor
int
push
sub
add
insb
jecxz
mov
cmp
pop
sub
jge
andb
or
inc
fadds
movsl
outsb
add
or
and
sbb
push
shll
xchg
js
in
clc
shlb
andb
rcr
fnsave
scas
dec
loopne
mov
leave
call
test
data16
movl
call
loope
in
repz
sub
fcoml
or
xor
xchg
mov
fimull
dec
push
daa
inc
inc
imul
push
std
sahf
ss
pop
xor
mov
into
adc
jnp
arpl
ret
mov
lds
and
cld
sub
push
xchg
add
xchg
dec
fsubrs
fidivl
mov
mov
mov
mov
fst
pusha
add
adc
push
and
lcall
fwait
ds
mov
leave
or
jns
add
mov
xlat
jmp
cld
fs
mov
xchg
mov
add
arpl
mov
inc
add
dec
cmpsb
jle
leave
pop
cs
out
ds
cmp
cmp
pusha
sub
cmp
jmp
cmp
cmp
xchg
mov
push
movsl
pop
pop
dec
mov
movsl
inc
mov
shll
imul
mov
fs
push
add
xchg
addb
std
cmpb
mov
cmp
xchg
imul
lock
push
xor
arpl
in
rol
cmc
out
xchg
aam
fldcw
in
movsb
cmp
mov
push
imul
mov
mov
push
xor
aad
imul
pusha
clc
imul
jg
mov
mov
sbb
jle
mov
scas
push
sub
inc
or
lret
outsb
cmpsb
shlb
jne
pop
jp
test
cld
pmaxsw
mov
jnp
test
repnz
adc
mov
cmp
es
ficoml
and
and
loope
cmp
mov
loop
mov
push
aad
cmp
fidivrs
jo
imul
sub
and
mov
dec
add
push
repnz
jne
jns
pop
sbb
jmp
in
xchg
in
ret
push
xchg
shlb
std
or
add
xor
and
out
cmp
rorb
testl
and
sub
jge
dec
sti
dec
popa
sub
data16
jecxz
out
sbb
cli
pop
andl
add
subl
int3
mov
out
mov
push
rorb
imul
and
aaa
repz
dec
mov
mov
mov
decl
cwtl
jo
dec
adc
int3
outsl
mov
pop
push
sbb
lcall
decl
xchg
cld
ret
outsb
jl
xor
or
cmc
mov
insb
repnz
push
divb
mov
sub
mov
mov
lods
test
mov
iret
adc
ret
lock
arpl
xchg
out
int3
sub
stc
fwait
testb
jmp
mov
ret
inc
out
cmc
lock
mov
add
aad
aaa
mov
xchg
cs
es
pop
or
cs
adc
xchg
out
imul
cwtl
cmp
stos
pushf
push
int3
and
mov
ja
test
ja
add
mov
adc
dec
dec
push
in
subl
insb
pop
sbb
idivb
loop
xchg
adc
js
sub
popa
lods
add
xchg
dec
mov
lds
ss
movsl
mov
add
enter
mov
aas
in
out
or
pop
cmc
cmp
jle
dec
stc
mov
repz
popa
hlt
push
jnp
adc
fisubs
cmpb
scas
rorb
in
inc
xchg
movsl
sub
sbb
cmp
scas
mov
lret
jns
mov
mov
sbb
xchg
in
sub
cltd
std
mov
pop
mov
mov
adcb
sub
and
jo
pop
jb
shll
sbb
pop
pop
dec
mov
incb
pusha
stos
push
and
add
ss
je
inc
xor
dec
xchg
jl
stos
and
xor
jne
rcrb
les
fs
imul
mov
in
clc
push
insl
xchg
mov
push
inc
flds
nop
pusha
test
int
xchg
outsl
xchg
sub
xor
ret
divb
add
and
popa
push
or
dec
push
js
mov
scas
add
clc
movsl
jmp
fmull
add
es
pop
add
cltd
test
adc
add
in
shlb
mov
test
sub
shr
lods
pop
scas
mov
insl
pop
stos
mov
jl
xor
movsl
sbb
push
jo
xlat
ja
insb
and
enter
ficomps
mov
jl
lret
sbb
cltd
pop
jl
in
jbe
xor
fistl
es
jo
ret
loopne
mov
aas
mov
test
aad
xor
or
imul
pop
push
shlb
decl
shlb
cli
jp
push
push
add
push
pop
push
sbbb
xor
push
add
lods
lods
movsb
or
lds
pusha
pop
insb
popf
jge
jl
mov
push
sarb
and
les
mov
imul
orb
in
xor
test
xchg
mov
gs
jb
pushf
push
pop
push
mov
cmp
pop
push
add
mov
shrb
mov
test
sbb
test
test
ja
or
inc
mov
outsb
bound
push
push
pop
lcall
cmp
fcoml
clc
pop
ss
roll
inc
dec
pop
out
sub
jmp
cmp
and
push
mov
sub
mov
movsl
mov
fildll
shrl
jg
pop
ja
clc
adc
es
xor
aad
jp
xlat
mov
cmp
sahf
inc
in
or
xchg
ret
or
aam
inc
pop
pop
cmpsb
cmp
dec
cmp
xor
in
jmp
push
push
lods
into
xlat
inc
pop
mov
sub
mov
sub
lods
cmp
out
cld
fsubrs
pusha
imul
ret
out
pop
cmova
inc
cmp
clc
loop
jl
fildl
hlt
jmp
mov
pop
popf
cmp
aad
dec
pop
popf
rol
jo
loopne
xchg
lock
cmp
add
cmp
and
fcoms
outsb
inc
shll
and
das
enter
cli
lret
in
je
sub
xor
movsb
jl
push
add
mov
call
inc
xor
dec
stos
ret
adc
xor
lock
mov
test
sub
popa
pop
aaa
xchg
push
xchg
dec
loopne
mov
in
addr16
jo
or
fbstp
xchg
mov
xor
cmp
nop
inc
fnsave
add
popa
rclb
mov
mov
cmp
xchg
jge
push
adc
pop
inc
jno
add
sub
popf
fcomps
or
fildll
insl
jo
cmp
mov
in
ffree
dec
push
xor
testb
adc
hlt
push
add
jb
xchg
aas
insl
xchg
es
rolb
pop
scas
fsubl
pushf
lahf
and
mov
stos
and
push
imul
cmp
gs
adcl
mov
adc
inc
ficoms
ljmp
and
inc
ljmp
add
jns
fisubrl
je
pop
sti
mov
push
add
push
push
dec
sub
js
aas
jae
lahf
test
mov
mov
scas
inc
fcoms
addl
mov
lcall
jo
andb
or
enter
data16
and
aad
lods
inc
popa
add
scas
or
addl
add
mov
push
push
shll
mov
mov
mov
les
mov
mov
push
aas
cs
or
cmp
cmp
push
out
popf
ss
popf
fnstsw
cld
add
ret
out
ja
xchg
shl
ja
mov
shll
js
imul
xchg
imul
dec
dec
adc
mov
neg
out
xchg
xchg
xor
nop
arpl
iret
into
enter
sub
ret
mov
pop
lods
jg
xchg
roll
cmpsl
pop
dec
in
jnp
xor
mov
sbb
sahf
scas
adc
sub
fsubrp
loop
mov
pop
mov
shl
ficompl
or
or
push
sub
pop
hlt
mov
push
and
or
adc
sbb
enter
pop
jns
sbb
imul
xchg
fdivl
pop
xchg
rolb
pop
cli
xchg
mov
leave
test
jmp
xchg
xchg
loopne
inc
mov
fstps
fidivs
ret
mov
sarl
shlb
cmpsb
ljmp
mov
push
data16
sub
icebp
mov
hlt
jl
sbb
inc
and
sti
and
sub
and
das
xor
jno
mov
lods
mov
mov
push
push
pusha
xchg
out
sub
pop
jge
xchg
and
inc
sbb
inc
je
ret
adc
repz
xor
das
cmpsl
fidivl
ret
jl
clc
pop
popf
push
pop
cmc
and
jb
outsl
in
inc
lret
push
stc
and
in
lcall
push
cs
fbstp
cmpsl
mov
fisubrs
push
loopne
mov
jge
mov
mov
aaa
pop
in
sub
lret
mov
pop
cmp
jbe
adc
pop
mov
and
and
inc
test
dec
test
mov
inc
shll
xchg
xor
popf
pop
cmp
sub
cmpsb
dec
inc
fdivp
jbe
mov
mov
push
mov
mov
or
stos
cmp
mov
test
dec
xchg
popf
aad
out
dec
mov
xchg
loop
add
sub
push
and
cwtl
data16
or
and
xchg
shl
pop
or
ja
xor
adc
push
pop
addr16
xor
test
lds
jae
xor
test
ss
dec
in
ljmp
loopne
push
insb
mov
rolb
in
pop
jae
fdivrl
dec
pop
add
mov
cmp
popa
jg
adc
sbb
sub
outsl
mov
add
cmpsl
call
jecxz
push
aam
rcrl
es
cli
call
jmp
dec
adc
stc
xor
hlt
mov
mov
fcmovne
fdivr
cs
jp
xor
mov
jnp
pop
mov
pop
sbb
adc
insl
sahf
xor
and
mov
sub
jo
xchg
push
mov
mov
out
push
xchg
rcll
int
in
fs
lock
imul
pop
repz
xchg
inc
adc
xchg
iret
popa
sbb
sub
mov
loop
outsl
jnp
call
adc
mov
in
xchg
pop
sbbb
mov
int3
in
popf
and
xor
pop
mov
hlt
xchg
gs
push
pop
cwtl
push
add
clc
jae
sbb
iret
outsb
inc
jle
shll
aad
dec
add
or
and
ret
inc
rcl
dec
andb
mov
mov
mov
xor
and
sarb
fldenv
or
push
aam
add
cmp
stos
es
add
inc
ss
add
enter
lret
insb
sub
mov
sbb
adc
rcrb
add
out
sub
inc
mov
ret
enter
add
cmp
cs
div
pop
xchg
push
sub
out
push
jg
lcall
cmp
mov
jmp
ljmp
bound
mov
or
jmp
loope
mov
fmuls
adcl
sbb
lcall
inc
in
inc
sbb
xlat
outsl
mov
daa
pop
sub
je
inc
shlb
or
xchg
push
mov
addr16
sti
push
mov
leave
pop
rcll
inc
loopne
sti
repz
xor
leave
test
fbstp
loope
adc
xor
scas
xchg
mov
mov
and
mov
in
lock
sarl
xor
movsl
add
mov
rorb
cli
pusha
int3
shlb
ljmp
enter
add
jae
fs
adc
adc
jl
cli
jne
push
aam
xchg
and
inc
xorb
push
cmp
and
iret
fdivl
dec
js
orl
es
fists
and
inc
mov
shrb
std
pop
sub
mov
lock
xor
sbbb
jae
cmp
inc
or
enter
inc
push
jmp
xor
mov
dec
xchg
les
cmp
enter
mov
inc
jl
scas
clc
mov
data16
cmpsb
jbe
das
mov
cmp
jo
jmp
mov
jge
mov
cwtl
adc
or
addr16
test
mov
mov
fcmovnb
sub
pop
out
adc
insl
ds
sbb
inc
shlb
xor
int
jg
cmp
jge
mov
cmp
jns
shr
push
mov
sarl
icebp
in
int
cmp
aad
in
push
dec
aaa
pop
loop
stc
lea
insl
add
shll
xor
sbb
sub
push
add
xchg
bound
cmpsb
test
ss
inc
in
xchg
jge
mov
in
ds
push
push
scas
push
jg
ja
mov
mov
xor
xor
cli
push
cmpsl
rcl
xchg
mov
shlb
mov
push
sub
rcl
sbb
fs
pusha
pop
xor
xorb
loope
mov
orb
cmp
test
ror
pop
fstps
filds
push
cld
fldcw
rorb
push
cld
aas
xor
test
or
outsb
hlt
sahf
movsl
adcb
outsl
ret
jecxz
movsb
adc
adc
imul
sbb
dec
push
subb
push
lcall
cs
jmp
mov
test
add
push
pop
adc
and
cmp
dec
jae
ja
dec
pop
lret
and
jno
adc
movl
xchg
cmp
jg
stos
in
out
lret
xchg
inc
and
in
stos
or
outsb
aam
faddl
lahf
and
punpcklwd
cmp
sub
or
xlat
icebp
cmp
cmp
ds
repnz
push
inc
in
loop
mov
in
out
pop
outsb
mov
outsl
jns
fnstsw
gs
mov
mov
push
mov
fcmovnb
mov
mov
sbb
dec
pop
fs
pop
mov
push
push
xchg
aas
ljmp
inc
scas
out
sbb
jno
or
adc
mov
xor
push
addr16
mov
xchg
jo
inc
ret
insb
dec
pop
stc
repnz
dec
xlat
pop
pushf
jl
aam
das
testl
enter
push
xor
call
add
aas
out
incl
ja
and
stos
ljmp
cwtl
fs
mov
cmp
jmp
insb
inc
pop
mov
xchg
outsb
rcll
ret
sub
in
sbb
mov
cld
mov
sbb
loop
cmp
jg
cmp
aas
loopne
into
loop
mov
shrl
rcrl
fsubs
test
xchg
hlt
addr16
fbstp
std
or
test
les
xor
xor
lcall
test
push
sbb
loop
cs
pop
outsl
dec
repz
dec
cmp
push
ret
add
mov
xchg
xor
lret
inc
test
lea
daa
push
cld
ljmp
lods
push
or
cmp
xchg
mov
or
adc
push
push
fcomps
mov
dec
negl
sub
jnp
xor
xchg
adc
jge
aas
jg
inc
mov
jnp
cmp
mov
xorl
imul
sarl
test
ret
cmp
push
xor
jno
or
jle
cmpsl
lds
js
imul
adc
gs
pop
sub
mov
xchg
sbb
iret
push
mov
cmpsb
sahf
out
sbb
dec
dec
mov
inc
test
sbb
fwait
xor
arpl
js
inc
push
mov
pusha
xor
int3
in
test
call
les
add
lahf
push
int
dec
sbb
add
cmp
cmp
popf
int3
out
fidivrl
gs
sbb
sbb
xchg
pushf
cli
test
cmc
aad
inc
mov
in
jl
lea
xchg
mov
push
jo
adcb
add
sti
jns
jo
add
enter
lcall
mov
subb
dec
mov
in
iret
out
add
notl
fs
das
jae
cltd
xor
std
mov
pop
push
push
test
les
std
adc
add
xlat
sub
popl
mov
icebp
and
jge
cmp
mov
in
jecxz
aas
js
pushf
fisttpll
repz
std
cmpsl
and
fsubrs
pop
inc
or
mulb
cmpsb
pusha
sbb
push
xor
fsubrs
ja
jns
mov
in
mov
imul
xchg
push
and
ret
mov
fildll
push
frstor
insl
jl
outsl
enter
jp
and
out
lahf
pusha
clc
fucom
mov
jb
xchg
mov
mov
xchg
loope
sahf
jb
push
pop
xor
popa
add
in
add
icebp
add
movb
mov
pop
je
cmp
and
les
repz
aad
icebp
cmpb
scas
mov
mov
mov
cmp
mov
aam
out
push
jae
push
movsl
out
mov
or
popf
popa
add
stos
mov
and
mov
adc
adc
out
lret
pop
mov
mov
mov
in
ss
mov
sub
ljmp
out
dec
flds
incb
int
adc
in
push
test
sbb
loop
xor
cmp
mov
pop
into
xor
fstpt
jle
cld
imul
inc
inc
cmp
push
fcomp
xchg
data16
lds
push
jo
test
enter
xor
sti
and
cmpb
leave
jp
jno
cmpsl
jns,pt
push
mov
adc
dec
dec
divl
jne
ficompl
jg
xchg
adc
ss
cltd
or
loop,pn
in
into
push
or
add
push
mov
adc
roll
and
int
std
pop
jecxz
loop
rclb
push
sbb
cltd
mov
out
lret
push
push
out
mov
xchg
enter
jb
cmp
sbb
jnp
imul
ficoms
inc
aad
push
enter
cli
mov
pop
cmpsb
jecxz
loop
out
mov
outsl
rclb
test
cmp
icebp
jle
mov
movsb
sarl
xor
popa
test
bound
pushf
jecxz
in
int
and
cmp
out
jnp
and
addr16
popa
int
outsl
jnp
push
push
xchg
sbb
roll
stos
loope
push
lret
int3
into
scas
mov
push
adc
xchg
push
add
adc
push
pop
and
dec
pusha
mov
and
enter
mov
mov
pushf
and
dec
cli
lret
sub
jmp
and
or
pusha
or
aad
jnp
hlt
add
aam
ja
adc
rclb
sbb
or
arpl
push
jge
jl
inc
out
hlt
cmp
pop
xchg
xchg
inc
std
push
stc
outsb
in
mov
inc
gs
int3
cmp
mov
lea
mov
jb
cld
popa
or
pop
pop
pop
aad
iret
pop
fistps
jecxz
mov
pop
push
cmpsl
ret
nop
mov
or
out
mov
clc
test
and
outsb
sbb
aaa
lds
out
dec
mov
jmp
push
imul
jo
jmp
test
jp
and
sti
movsb
call
popf
xor
xchg
add
int
faddl
push
imul
cmp
mov
aas
rorb
inc
arpl
jmp
xchg
sbb
dec
push
inc
mov
divb
cmpsb
lds
test
ret
lock
jg
es
clc
shl
mov
dec
loopne
lds
jecxz
pop
imul
cmp
inc
dec
psrad
pusha
imul
push
mov
mov
jbe
xor
rcrl
add
mov
fsubrl
cmp
stos
jg
mov
sarb
pop
int
push
in
lods
mov
movsb
rol
cwtl
inc
or
repz
mov
clc
xchg
xor
push
sbb
insl
fs
jns
jecxz
xchg
adc
insl
fidivl
adc
in
addb
shrb
mov
sbb
sbb
inc
sub
sub
pop
jno
sbb
jmp
aad
test
repz
xor
bound
ret
jle
jmp
mov
les
mov
loopne
rclb
das
jne
inc
fucomip
and
clc
add
fwait
mov
paddsb
push
add
das
add
or
subl
les
jb
pop
aam
cmp
das
mov
frstor
cmp
xlat
cmp
lock
scas
out
pushf
test
cmp
pushf
pop
je
inc
mov
or
outsl
xchg
add
cwtl
sbb
pushf
xor
fisubs
ret
scas
out
xor
pop
pop
xor
ljmp
pushf
lret
push
xchg
mov
in
inc
pop
das
int3
pop
mov
sarl
inc
idivl
jecxz
push
stos
in
mov
push
daa
cs
ror
stc
shlb
lods
xchg
out
iret
push
dec
cmp
pop
mov
cmp
sbb
testb
out
push
mov
pushf
push
and
and
ret
jae
das
mov
dec
add
mov
jl
leave
and
pop
mov
int
or
sub
int
aad
add
or
stc
sbb
xor
xor
pop
mov
and
adc
sahf
add
sub
dec
pop
mov
mov
notb
ret
pop
lock
fldcw
lods
movsl
loop
mov
montmul
cmpsb
sub
les
sarb
mov
push
test
mov
or
popa
sub
add
adc
je
aam
jno
add
cmp
mov
pop
mov
push
push
arpl
inc
fiaddl
cmp
stc
fdivrs
dec
decl
push
dec
pop
ret
setb
mov
sub
dec
mov
repnz
inc
lret
ret
stos
xchg
sahf
inc
jne
enter
xor
dec
in
aaa
repnz
dec
pop
sti
repz
pop
rcrb
adc
pusha
pop
add
sbb
jl
gs
xchg
imul
xor
add
xor
push
sub
and
mov
popl
sbb
jno
mov
jg
stc
xchg
lcall
ss
nop
jp
bound
inc
fwait
leave
and
push
cmp
jge
ja
mov
cmp
jge
xchg
xchg
in
in
xchg
and
lret
nop
push
adc
bound
mov
sub
sbbl
add
mov
add
jle
mov
cltd
dec
sbb
outsb
push
mov
jg
sti
push
jne
daa
ja
inc
popf
xor
fsubrl
cmpsl
push
pop
int
and
dec
dec
lcall
ja
out
mov
gs
push
push
stc
sbb
les
into
pop
mov
xchg
movsb
repnz
sbb
aaa
lds
in
dec
adcb
into
mov
cmp
inc
in
lock
dec
cmp
jnp
stos
sub
loopne
lods
aam
xchg
stos
mov
fistl
in
mov
mov
xchg
or
pop
mov
add
les
in
xor
mov
es
pop
movsl
mov
andb
xor
flds
loop
es
add
out
repnz
cmp
fwait
aas
nop
es
mov
aaa
je
cwtl
repz
jae
ficoms
iret
dec
mov
rcrl
pop
mov
ljmp
lret
mov
bound
andb
inc
imul
and
loop
and
sub
mov
mov
push
and
inc
inc
mov
in
or
leave
fldenv
and
jo
frstor
jne
mov
call
mov
mov
cmp
pop
fnstcw
sarb
hlt
dec
adc
push
in
cmpsb
fnstenv
sub
adc
out
popf
mov
fwait
pop
mov
or
ljmp
sub
int
jge
sub
jle,pt
cmp
mov
push
dec
jbe
xor
ss
lea
or
and
out
adc
mov
cltd
dec
pop
in
jmp
mov
jo
jecxz
mov
jne
test
or
dec
out
mov
dec
ret
hlt
mov
add
jnp
out
into
jno
add
jno
jne
mov
ja
add
icebp
pusha
fadd
xchg
mov
mov
jp
or
mov
jnp
dec
cmp
cmpsb
or
cmp
out
arpl
loope
push
lds
and
sti
ucomiss
pop
lods
mov
inc
les
xor
mov
xor
rolb
cld
cmp
mov
aas
adc
sbb
flds
sbb
dec
jecxz
lcall
jecxz
and
jp
rcr
xlat
and
and
mov
outsb
jmp
cld
inc
xchg
and
mov
add
jno
in
fisttps
aad
xor
clc
imul
fcoml
inc
jb
imul
out
repz
xchg
lret
ds
nop
daa
dec
cmc
stos
and
cmp
mov
and
xchg
mov
or
stos
cmp
iret
gs
sub
jmp
stos
cmp
loopne
fcmovu
outsl
dec
fdivs
mov
hlt
int
jae
hlt
push
mov
das
push
clc
xor
jo
stc
popa
inc
push
mov
jns
and
xchg
push
mov
fidivrs
mov
push
dec
dec
sub
dec
sbb
shll
sub
mov
mov
loopne
push
call
push
insb
outsl
out
inc
xor
cmp
pop
dec
cs
sub
out
and
int3
data16
lods
dec
adc
popf
jmp
divl
adc
dec
das
xchg
mov
lahf
cmc
popa
into
dec
jno
mov
push
push
cvttps2pi
aam
jno
pop
push
leave
inc
repnz
cmp
lahf
insb
sub
jno
sbb
or
mov
lret
in
imul
loope
xchg
rolb
addr16
repz
mov
and
adc
mov
in
loope
dec
cmp
cmpsl
ret
jp
fstpl
mov
in
test
mov
and
add
dec
ljmp
js
jl
pushf
mov
ficompl
xchg
fmuls
add
jmp
mov
ja
xor
scas
test
push
sahf
fisttps
cld
xchg
lds
pop
jae
sbb
and
mov
sub
adc
xor
mov
movsl
xor
test
cltd
add
cmpsl
mov
das
xchg
and
jp
lret
movsl
push
cmp
jl
or
or
fisubrs
xchg
jmp
push
pop
adc
push
add
mov
dec
enter
adc
xchg
lret
pop
dec
outsb
in
cmp
cmp
push
mov
adc
jae
and
pop
fs
add
xor
push
push
cltd
cmp
inc
stc
xchg
and
mov
outsb
arpl
jp
fs
mov
xlat
sahf
das
inc
xchg
test
lahf
jnp
or
xchg
add
jne
mov
dec
in
ds
or
mov
sbb
xor
jecxz
cmc
int3
fmuls
sub
addl
lret
arpl
fucomip
dec
or
dec
mov
push
ret
dec
out
xor
sbb
pop
push
jbe
scas
pop
xchg
stos
fnstenvs
cmp
mov
jg
mov
adc
mov
dec
lahf
mov
sbb
pop
imul
push
or
fdivl
inc
xor
dec
cmpb
pop
loop
loope
scas
and
movsl
mov
push
and
inc
mov
iret
ficoms
icebp
jecxz
add
jge
pop
rcr
and
xchg
xor
sbb
sub
jmp
scas
push
lods
inc
push
test
mov
insl
gs
sarb
jae
loopne
cmp
dec
xor
xor
insl
negl
sahf
scas
cmp
mov
out
jno
addr16
mov
lret
fwait
lret
psraw
shrb
sub
adcb
sbb
leave
and
fcompl
insb
lahf
sbbl
insb
xor
cmpsb
imul
dec
sbb
dec
pop
push
test
sbb
mov
scas
and
cltd
std
gs
sahf
cmp
adc
into
mov
add
sbb
inc
adc
popf
fs
loope
or
cmp
push
dec
adc
je
cmc
push
or
leave
adc
push
cltd
jnp
out
mov
dec
shll
cmp
ret
imul
xor
mov
in
xlat
sarl
dec
mov
inc
adc
push
jge
and
sti
sbb
pop
ss
fbstp
sub
mov
inc
int3
push
enter
test
mov
pushf
mov
push
out
xchg
jmp
test
and
popa
clc
loop
fidivs
imul
fmuls
sbbb
rorl
adc
leave
cmp
inc
gs
repnz
and
xchg
jo
xchg
js
mov
cmpsl
stos
repz
xor
stos
lret
add
std
adc
or
test
rol
aad
adc
in
pop
out
add
out
push
add
mov
call
and
loop
and
jb
mov
cli
stos
fadd
mov
stc
lahf
cmp
daa
mov
add
sub
sbb
cmp
fistps
push
push
jge
dec
imul
sbb
repz
daa
inc
sub
sahf
and
mov
jg
pushf
mov
dec
incl
nop
jnp
jg
pop
adc
test
jno
jnp
clc
sbb
aad
add
mov
pusha
inc
pop
out
shlb
cli
aaa
lahf
mov
lock
inc
paddb
jbe
dec
mov
cmp
inc
idivb
pop
cmp
xlat
mov
rolb
sub
inc
bound
jle
call
in
outsl
daa
mov
cmpsl
imul
lcall
test
mov
dec
jle
xor
jbe
les
stos
pop
dec
sbb
add
icebp
inc
xchg
mov
scas
jmp
pop
lcall
dec
cld
fsubrl
and
rol
test
dec
ret
mov
adc
jle,pt
sbbb
jns
jmp
or
jp
inc
dec
fildll
xor
out
pop
mov
out
mov
daa
cmpsb
jnp
mov
mulb
ds
cwtl
das
mov
lahf
xor
rcrl
lods
cmpsb
jno
inc
movsb
mov
int3
cli
mov
bound
xchg
stos
jmp
popa
push
push
and
jge
inc
imul
xchg
js
stos
ret
or
mov
clc
pop
fisubl
cs
notl
mov
pop
mov
rorl
sbb
jbe
sbb
sub
jns
or
dec
andl
or
popa
cli
add
lds
pop
cli
push
jbe
jo
and
mov
leave
xchg
test
pop
xchg
shll
lods
add
sbb
and
dec
push
jmp
dec
ljmp
pop
je
idivl
push
lcall
mov
cli
push
pushf
fisttpl
loop
repnz
leave
insl
lds
dec
fnstenv
lds
es
pop
xchg
pusha
sbb
insl
xchg
sub
add
lock
sahf
add
xchg
call
dec
adc
and
adc
or
jge
sub
xlat
leave
test
je
loop
jge
mov
push
dec
in
cli
jmp
test
add
loop
jno
mov
xor
fsubrs
fucomp
jne
daa
jcxz
adc
add
xchg
enter
out
jp
jae
inc
mov
pop
cmp
xchg
cmp
repz
mov
jp
loop
lcall
popa
repnz
jns
and
repnz
in
stos
loope
ret
mov
sbb
fiadds
sub
cmp
pop
daa
mov
ljmp
repz
fsubrs
pop
add
mov
mov
or
dec
pop
shrb
cltd
pop
mov
pop
scas
std
loopne
test
lret
pop
add
cli
insb
nop
mov
loopne
mull
jbe
call
push
dec
ja
orb
mov
dec
sarb
cmc
iret
adc
icebp
add
mov
xchg
or
clc
mov
sub
inc
mov
shll
cmp
ret
add
fsubl
fiadds
repz
stos
pop
test
lret
xlat
jmp
or
pop
mov
jp
adc
or
sbb
push
mov
xor
pop
mov
aam
stos
add
cmp
dec
movzbl
out
pushf
aas
push
lds
sub
nop
and
and
push
test
sbb
stos
push
sub
cmp
leave
push
dec
add
outsl
loop
and
add
dec
sbb
push
inc
jl
mov
jbe
xor
cmp
inc
lea
dec
inc
stos
inc
lods
aad
ja
jns
aam
lds
movsl
push
sub
orl
bound
pop
ret
add
push
outsb
in
std
adc
pop
mov
sub
dec
adc
insb
out
jne
sub
jb
test
or
ljmp
mull
jg
mov
fcoml
pop
int
jno
mov
ss
jae
test
test
dec
outsb
xor
addb
clc
jmp
bound
dec
movsb
loopne
push
out
sub
daa
xor
lods
inc
lock
rcl
cwtl
inc
imul
mov
adc
outsl
cli
push
pop
adcl
out
xchg
incl
adc
cmpb
adc
ds
inc
sbb
sbb
fiaddl
xchg
lods
cmp
lret
cmp
and
jl
inc
stos
add
and
jno
dec
ror
sbb
mov
mov
sbb
sbb
leave
cmpsb
jno
sbb
mov
lret
aam
jmp
inc
or
out
daa
add
pop
jmp
mov
inc
les
or
xchg
pop
sub
mov
adc
push
dec
icebp
push
nop
dec
mov
int
test
iret
gs
stos
mov
cmp
stc
and
jge
push
es
push
call
test
shrb
bound
mov
iret
jl
stos
sub
call
outsb
push
or
cmpsl
cmp
ss
hlt
xchg
pop
add
fwait
xchg
xchg
sub
in
in
dec
push
mov
mov
xchg
aam
mov
not
flds
outsl
daa
jbe
or
rorb
out
shlb
jo
cwtl
mov
mov
stos
adc
sti
push
cmc
popaw
clc
xchg
adc
cld
outsl
loop
dec
cli
xchg
sar
dec
sub
cli
mov
sbbb
lods
test
jg
pop
jecxz
lahf
add
in
aad
push
and
mov
mov
mov
mov
mov
mov
cmp
imul
lds
icebp
hlt
or
into
adc
lcall
cwtl
test
imul
cmpl
outsl
sub
sahf
pop
es
je
push
or
lods
and
mov
pop
lahf
sub
lods
std
inc
inc
push
add
mov
stos
dec
out
xor
jbe
icebp
insb
push
sbb
xor
daa
rcrl
mov
int3
fdivrs
and
dec
sub
jo
shll
mov
fisubrs
aas
loop
je
das
sub
mov
dec
inc
stos
es
push
icebp
movsl
loopne
outsb
jns
test
jl
addb
push
push
cli
push
or
sub
pop
clc
mov
aam
cltd
nop
rcl
jl
inc
mov
adc
mov
shlb
adc
icebp
and
je
adc
add
gs
hlt
lret
stos
push
or
aad
aad
sbb
shrl
inc
pop
xchg
sbb
add
cwtl
adc
fs
int3
mov
xor
cmp
or
loopne
mov
push
inc
sti
inc
or
jle
fbstp
sub
inc
fmull
lret
push
lods
jo
iret
adc
shlb
xchg
fucomi
or
mov
pop
mov
jmp
push
add
xchg
es
jo
adc
jle
pop
mov
mov
pop
lds
lods
push
lret
xor
xor
cmpsl
mov
jae
hlt
test
sbbl
test
add
jmp
sbb
xchg
leave
and
mov
or
adc
inc
push
sbb
jmp
jae
push
mov
sub
repnz
xor
and
arpl
insb
mov
or
sbb
repnz
mov
mov
cmp
in
mov
loopne
mov
mov
scas
mov
jnp
out
push
js
cmc
call
mov
mov
jg
mov
ret
sub
into
fsubr
sub
jge
and
scas
sbb
jo
scas
rcrb
pop
adc
fadd
in
das
push
mov
bound
fstps
pusha
pop
and
cmp
pop
es
push
mov
adc
and
dec
dec
scas
pop
push
fcmovne
adc
outsb
sarl
scas
mov
inc
push
xor
inc
lods
cmp
mov
dec
sti
sbb
ja
enter
jg
or
lahf
out
xchg
jne
stos
mov
mov
scas
jp
and
fldl
adc
ds
out
mov
pop
add
xor
mov
cmp
push
mov
aas
mov
dec
xchg
mov
mov
je
pop
arpl
iret
mov
push
nop
lods
sahf
loopne
inc
pop
or
scas
cmc
add
mov
ss
or
sub
push
push
das
adc
dec
adc
aad
test
dec
jno
shrl
sbb
xor
or
jns
mov
rol
mov
sbb
icebp
cli
mov
jb
fistpll
pop
flds
add
push
fucomp
fnstsw
sbb
int
pop
outsl
iret
loope
cmp
das
ljmp
push
xchg
push
mov
push
test
mov
and
lods
dec
insb
shl
pcmpgtb
sbb
mov
sub
jp
ljmp
cmc
psraw
jb
es
or
mov
lock
mov
xchg
dec
add
ljmp
call
pop
loop
push
in
bound
add
dec
push
mov
ror
cmp
mov
adc
mov
pop
jg
imul
sbb
inc
gs
xchg
mov
repz
cmpsl
js
inc
or
lcall
repnz
or
fwait
jnp
jp
loop
dec
aas
push
aas
loope
cmp
mov
femms
mov
xchg
in
or
inc
bound
aam
hlt
ss
cli
sub
inc
stos
cwtl
aas
jbe
cmpsb
jp
and
test
inc
jg
adc
popa
pop
jae
in
outsb
jp
cmp
addr16
push
pop
or
cmpsl
loopne
out
test
cli
stos
mov
mov
bound
mov
gs
mov
jae
cmp
dec
jle
mov
inc
adc
jne
xor
les
adc
lret
imul
and
sub
push
inc
outsl
fs
rclb
push
cld
xchg
pop
adc
popl
sbb
loopne
or
dec
mov
xor
cwtl
aaa
int
mov
push
push
dec
cmp
inc
imul
mov
lcall
popa
jnp
into
sbb
pop
imul
adc
aam
hlt
pop
testl
movsl
lds
adcl
xor
arpl
jecxz
mov
adc
aas
inc
mov
pop
mov
mov
xchg
mov
aad
lock
movsl
xor
jp
add
popa
sbb
repnz
pushf
imul
push
add
inc
jo
push
arpl
jb
in
inc
push
jmp
mov
mov
sarl
mov
rcrl
jo
push
insb
push
es
fdivrl
xlat
lret
xor
add
in
push
jl
or
mov
and
push
push
mov
lret
xor
jle
lods
jl
in
fdivrs
xchg
ficompl
mov
add
fadd
fstps
in
dec
mov
mov
fisubrl
sub
inc
and
cltd
xor
mov
lcall
pop
mov
jno
gs
xchg
lcall
pop
xor
out
push
cmp
mov
pusha
pop
xchg
add
test
cmp
sbb
xchg
js
cmc
pop
ret
dec
add
aam
add
xor
jbe
ljmp
mov
popa
jge
shlb
add
adc
int
sarl
int
add
adc
or
fcoms
in
roll
mov
dec
inc
jg
mul
push
and
push
and
cmp
lcall
sbb
mov
xlat
pop
fcomps
gs
cli
xchg
mov
outsl
add
in
dec
subl
pop
add
mov
jne
sub
inc
and
in
xor
in
adc
mov
or
mov
cmp
aad
mov
iret
das
xchg
jb
data16
in
addl
mov
push
mov
in
and
mov
bound
iret
imul
jg
idiv
hlt
sbb
adc
ret
xchg
je
cmc
fildll
push
mov
cmp
les
clc
fwait
push
imul
test
xchg
mov
je
cmp
ret
shl
inc
stc
inc
or
jb
pusha
lods
out
filds
sbb
mov
adc
adc
movsb
push
fsubl
sbb
mov
mov
ret
mov
nop
loop
xchg
mov
mov
pop
mov
pop
jbe
fdivrl
into
aam
inc
inc
int3
ficoms
andl
dec
ficoml
das
repnz
testl
popf
push
fwait
in
ljmp
sti
cmp
pop
fstps
xchg
imul
inc
js
adc
adc
aas
mov
sub
pushf
inc
and
inc
gs
mov
bound
sbb
pop
adc
inc
ret
adc
stos
dec
cmp
pop
fdivr
push
ljmp
cmp
jo
cmp
xchg
loope
add
jno
clc
sarl
mov
in
inc
fwait
daa
in
inc
ficomps
fsubl
sub
jle
lret
push
jno
fimuls
dec
fldcw
cltd
scas
or
in
mov
xor
pusha
dec
in
or
adc
es
xor
fidivl
stc
adc
jbe
sub
out
adc
data16
repz
rcr
int
dec
cmp
cmpsl
out
mov
push
aas
cmp
sbb
mov
ja
xor
pop
shr
fidivl
mov
hlt
jo
scas
xor
xchg
lods
mov
cmp
pop
fnsave
or
jnp
or
sarl
pop
add
dec
xor
mov
sbb
push
aas
xor
and
push
xor
arpl
daa
ds
push
sub
scas
xchg
sub
cmpsl
shlb
and
stos
pop
cmpsb
arpl
dec
xor
jns
call
decl
stos
dec
or
daa
mov
out
xchg
test
xlat
into
fidivl
gs
inc
out
inc
xor
mov
and
jno
incb
insl
lods
ds
ja
dec
fsubrl
sub
push
inc
addl
mov
outsb
cmpxchg
in
mov
dec
orl
fwait
dec
cmp
leave
movb
mov
fsubrl
adcb
mov
das
add
loop
pop
mov
xchg
andb
inc
ror
je
sub
fisubs
outsl
cwtl
out
adc
pop
cld
mov
fwait
or
pusha
stos
dec
adcl
jnp
push
inc
lods
aas
fstpl
mov
push
add
push
inc
cs
dec
push
leave
popf
callw
push
push
add
mov
fidivl
repz
clc
add
inc
dec
xchg
push
inc
push
lahf
sbbb
xchg
cs
sbb
icebp
or
jne
enter
push
test
sbb
pop
fldenv
push
cmpsl
je
dec
out
xchg
push
fs
adc
dec
outsl
cs
popf
insb
pop
mov
inc
jl
jge
jbe
loopne
iret
jg
fs
and
adc
xor
add
jmp
je
mov
and
repz
negl
sub
jp
cmpsl
testl
mov
lret
inc
cltd
push
das
mov
dec
test
adc
jns
lahf
rcrl
int3
and
mov
add
jne
dec
inc
inc
inc
inc
shr
jo
rcrl
shlb
clc
loop
or
jne
pop
pop
push
pop
jmp
mov
es
loop
sbb
pop
sti
addr16
cwtl
inc
pop
and
pop
pop
aas
xchg
leave
push
loope
ljmp
lods
ret
jge
call
test
aaa
mov
jbe
inc
das
hlt
xor
ss
push
and
andl
enter
cltd
gs
fcompl
and
in
xchg
test
popa
ja
push
movsb
cmp
fsubs
jno
fadd
sub
adc
jb
aas
ret
notl
stc
fcmovnb
loopne
push
into
enter
mov
push
and
insb
pop
outsl
pushf
aam
pop
push
in
mulb
mov
in
xor
cmpsb
addl
sub
ret
xorb
aad
add
mov
push
cmp
sbb
idivb
lret
cli
sub
mov
pop
cmp
loope
push
and
lods
sub
icebp
imul
pusha
and
mov
xor
aam
movb
arpl
test
dec
mov
js
push
mov
les
loope
jne
mov
addr16
mov
mov
cltd
mov
sbbb
mov
adc
or
jnp
pushf
nop
outsb
out
inc
sbb
je
rcl
fstl
ss
xor
cmp
pop
mov
stos
fisttpll
imul
cwtl
daa
add
pusha
sub
cmp
cmp
push
add
aas
adc
test
mov
xchg
imul
mov
mov
jno
mov
jp
pop
repz
mov
adc
cmp
mov
aaa
je
pop
out
and
popl
mov
and
and
mov
jo
fdivs
movsb
mov
testb
mov
mov
iret
mov
and
pop
or
addr16
xchg
arpl
mov
icebp
movsl
cwtl
mov
xor
mov
sbb
mov
mov
aaa
mov
push
fildl
cwtl
in
cltd
cwtl
loopne
enter
xchg
sub
test
jbe
fisubs
mov
inc
shrb
mov
pop
fbld
fnsave
dec
icebp
adc
xchg
ja
xor
add
add
cwtl
push
xor
scas
inc
adc
aaa
mov
jp
inc
loop
xor
pop
bound
stc
mov
xor
andl
test
test
mov
faddl
push
sarw
fcom
inc
ffreep
je
inc
test
popa
stos
aaa
sbb
inc
ds
fsubrs
adc
mov
adc
test
inc
mov
mov
mov
add
jge
mov
cwtl
fstl
jp
cmp
movsb
arpl
sbb
push
clc
outsb
mov
mov
dec
jle
dec
or
sbb
repz
and
jo
movsb
and
movsb
cmp
sub
shrb
aaa
popa
repnz
mov
mov
inc
lahf
ljmpw
dec
outsb
ret
rcrb
cmc
pop
sbb
xchg
cld
cmp
stc
and
inc
lods
pop
icebp
add
sub
fs
nop
iret
test
nop
idivl
ret
cmp
testl
iret
movsl
xor
fnstsw
lods
adc
push
mov
outsb
mov
sti
popf
mov
mov
out
test
les
mov
inc
popa
aas
mov
jb
mov
in
arpl
cli
jecxz
arpl
ret
mov
fcmovnb
mov
dec
cmpsl
push
and
shrb
lret
dec
sahf
lds
cwtl
and
add
mov
sub
push
popa
aad
jns
mov
sbbb
mov
imul
dec
lock
icebp
mov
sub
fcmovnbe
loop
lcall
loop
push
pop
push
cltd
addr16
mov
cs
test
std
cmc
mov
cmp
jl
pop
mov
cli
jle
add
jg
fldenv
xchg
mov
or
idivl
xor
push
movsb
sarl
mov
enter
xchg
sub
mov
push
mov
test
sub
or
jl
mov
leave
xchg
fbstp
lock
sub
lods
cmpb
mov
adc
xor
push
std
inc
mov
inc
fwait
mov
iret
ds
add
xchg
sub
inc
ds
mov
pop
sbb
inc
xor
xor
int
out
insb
add
pop
scas
mov
icebp
ss
lret
aad
add
stos
movsb
cmp
ja
ficoml
ficompl
mov
and
jmp
inc
or
pop
lcall
cwtl
xor
lcall
push
pop
and
adc
aam
mov
std
notl
mov
sbb
mov
adc
push
lret
mov
out
lcall
lea
push
or
fwait
xlat
aaa
pop
jo
addr16
sbb
inc
push
xorb
aad
mov
js
test
push
xchg
dec
imul
adc
jle
or
cmp
dec
lcall
insb
inc
mov
idivb
addl
out
xchg
lahf
mov
mov
sbbb
xlat
clc
lahf
bound
mov
pushf
scas
loop
cmp
or
push
pop
pop
call
outsl
iret
ljmp
je
into
cmpsb
jge
addr16
lea
xchg
pop
decl
ja
inc
ret
cmp
shr
rorb
fwait
inc
nop
js
frstor
lock
jb
mov
mov
xor
dec
sbb
lock
jecxz
in
pop
mov
mov
xor
xlat
inc
gs
nopl
add
cmc
test
add
xchg
pop
in
or
mov
sbbl
mov
dec
mov
push
jmp
inc
aas
mov
push
in
add
dec
xor
cli
dec
mov
push
sbb
icebp
sub
lods
mov
idivb
mov
xor
js
xchg
mov
fst
and
mov
sub
jno
movsb
rorb
cmpl
jle
push
mov
repnz
fstpl
outsl
xor
lods
loope
and
inc
add
out
mov
mov
xor
jo
cmp
fldl2t
xor
scas
call
mov
pop
dec
mov
adc
sub
xor
rcll
js
add
xchg
mov
fistl
lea
mov
jle
mov
dec
xor
fmuls
xlat
enter
les
push
mov
enter
push
pushf
mov
je
sbb
repz
pop
ds
mov
cmp
aam
sub
xor
daa
or
shl
pop
insb
or
imul
mov
lock
sbb
loope
popf
add
xchg
aas
mov
in
js
mov
test
push
xchg
int3
cltd
lock
sub
xchg
pop
mov
mov
jns
aas
lods
sbb
call
pop
xor
adc
xchg
mov
leave
add
xor
adc
jnp
pop
xchg
pop
movsb
pop
add
jb
add
dec
nop
and
cmp
test
mov
stc
call
cwtl
mov
test
pusha
add
xchg
adcl
mov
fisubrl
imul
mov
lret
mov
or
xchg
arpl
js
in
jmp
jnp
je
jg
mov
inc
aam
pop
dec
stos
gs
cltd
cmpsl
sbb
jl
pushf
scas
pusha
push
repnz
jg
stos
dec
mov
loope
sbb
cmp
pop
push
inc
dec
hlt
pop
and
sbb
stos
mov
push
push
adc
roll
inc
test
fisubs
add
je
xchg
out
shrb
sub
ret
sub
jne
testb
clc
fwait
arpl
je
lret
lods
push
sub
push
fs
add
inc
mov
in
out
jnp
xchg
stc
jg
push
or
cld
stos
cmp
imul
cmpsb
in
sbb
jno
dec
je
sub
mov
insl
rcr
ss
xchg
stos
pop
xchg
and
xchg
inc
repnz
scas
cmp
int3
jmp
xlat
stos
xchg
cmp
and
inc
xor
sbb
lahf
mov
adc
xor
loop
or
sbbl
fs
shrl
push
mov
jmp
cmovo
mov
pop
cmpsb
icebp
cmp
xchg
cwtl
add
dec
adc
es
in
mov
int
add
divps
lcall
push
or
int3
loop
add
jmp
and
and
fldl2t
pop
rolb
sbb
xor
mov
xchg
mov
and
push
icebp
adcb
jns
stos
movsl
push
jns
inc
enter
addr16
aas
xor
push
push
xchg
add
xchg
xchg
mov
and
fidivrs
js
mov
fcomi
lods
dec
xor
in
sbb
gs
nop
lods
fcomi
andl
data16
cmpsb
add
test
fdivl
aad
testb
fwait
test
xor
xorl
mov
push
cmp
ror
loope
jg
sub
stc
xchg
push
fildll
jne
imull
adc
mov
add
and
dec
adc
dec
add
lock
sarl
cltd
out
sub
adc
pop
mov
stc
xchg
xor
loope
lea
cltd
xchg
adc
arpl
inc
ret
push
cmpsb
push
mov
lods
loopne
pop
popf
lret
popa
aaa
jecxz
movsb
or
lret
gs
dec
push
push
jmp
pop
insb
jo
sbb
test
sbb
clc
lret
popa
icebp
mov
fnstenv
les
fsts
das
mov
sar
popa
or
push
jo
mov
fwait
adcb
push
push
pop
repnz
clc
ds
jo
fsub
mov
cltd
xor
xchg
pop
mov
ret
push
push
loopne
sbb
xchg
fiadds
lea
mov
sbb
pop
sbb
mov
stc
mov
push
cmp
push
and
sbb
enter
cmp
pop
test
or
mov
or
add
movsl
int3
mov
push
iret
xor
push
fs
pop
lock
mov
dec
loope
aam
add
jmp
mov
dec
pop
cmp
and
pushf
cmp
out
sti
push
pushf
push
dec
stos
inc
gs
mov
push
xorl
add
add
sub
test
cld
mov
jns
gs
jne
scas
jp
lcall
cmpsb
mov
in
dec
dec
enter
mov
fstl
jge
inc
cmpsl
jne
and
fstl
xor
mov
ja
mov
lret
sbb
adc
cwtl
add
xor
push
aad
or
fadds
sub
inc
push
xchg
int3
in
into
push
and
xchg
mov
notl
push
jge
xchg
fidivrs
mov
into
mov
in
cmpsb
sbb
dec
cmc
add
dec
repnz
dec
push
jmp
outsl
adc
mov
pop
stos
cmp
aas
ret
dec
push
ret
or
or
xor
insl
stos
cs
sbb
int3
hlt
cmpsl
ljmp
dec
repnz
cltd
mov
push
push
mov
mov
sbb
add
sbb
cli
dec
test
fmuls
test
mov
test
mov
jp
fucomip
lods
mov
imul
je
loop
push
cmp
sbb
vmovaps
sahf
xor
test
push
addr16
aaa
or
fidivrl
pop
test
or
das
pop
sbb
mov
repnz
jmp
fists
cmp
cmp
and
fs
or
in
sbb
sbb
sub
cltd
inc
les
push
pop
cltd
add
fmuls
xchg
mov
pop
lahf
sbb
add
xchg
or
sub
push
pop
sub
test
adc
jge
adc
inc
dec
adc
jno
mov
fisubs
push
cmc
inc
aam
mov
sub
call
in
repnz
inc
mov
push
imul
lcall
icebp
pop
in
sbb
add
lock
inc
and
push
adc
inc
mov
jne
adc
or
xor
stos
sbb
sub
rorb
int3
lret
xor
pushf
leave
mov
hlt
movsl
fdivrs
xor
mov
pusha
sub
and
push
xlat
jmp
ficoms
pop
fbstp
andb
iret
sub
nop
lods
mov
fmuls
jmp
cld
arpl
jg
push
jae
into
dec
aas
push
jecxz
jge
orl
lods
repnz
add
dec
dec
dec
loop
jo
mov
dec
mov
push
sub
dec
dec
into
dec
mov
pop
dec
sbb
aas
jns
sub
push
sbb
shll
pop
xchg
ds
aas
rcr
adc
mov
pop
stos
ret
std
push
cmpsl
inc
mov
cmp
jns
mov
sub
jbe
mov
pop
adc
icebp
sbb
pop
cmp
push
repnz
cwtl
jns
pop
sub
out
jnp
loopne
push
or
outsb
ds
int
fsubr
inc
mov
leave
pop
negl
xchg
scas
and
add
push
outsl
xchg
mov
and
in
xor
dec
mov
repz
mov
daa
dec
sub
test
in
lahf
stos
hlt
mov
popa
xchg
mov
pop
aad
dec
lret
push
dec
jp
pop
jns
sbb
adc
add
mov
sub
in
dec
lret
mov
mov
loope
and
add
outsb
es
and
dec
shl
jnp
jle
dec
jno
mov
cmp
mov
fistl
add
arpl
cmp
fcomps
fdivrl
push
push
in
inc
shl
mov
or
addr16
or
or
xchg
mov
sbb
or
sub
sbbl
pusha
ss
jmp
mov
inc
fidivrl
xor
inc
adc
in
cmp
enter
rcll
sbb
loopne
ret
push
mov
cmpsb
jo
pop
cmp
add
inc
cli
mov
inc
jecxz
inc
pop
mov
pop
call
lret
aaa
dec
push
loopne
mov
sbb
aas
or
movsb
data16
fsts
xchg
loope
cmp
sahf
mov
sub
push
xor
ja
mov
fucomi
lods
push
xor
int3
loop
hlt
dec
call
loopne
popa
cmp
mov
scas
mov
insl
inc
in
clc
push
in
mov
mov
es
mov
rclb
scas
inc
jge
testb
xchg
jb
shll
movsl
xchg
sbbl
mov
xchg
xchg
add
ss
sti
xchg
adc
divl
xchg
sub
cltd
mov
adc
sub
sub
dec
mov
aas
mov
movsb
aas
xchg
sbb
adc
arpl
cmp
hlt
lock
sahf
inc
cmp
jge
mov
adc
xchg
cmp
dec
ljmp
xor
jne
add
inc
push
pushf
and
icebp
pop
mov
push
pop
mov
ljmp
dec
mov
push
cmp
rorb
jmp
sub
mov
fstps
into
imul
mov
popa
mov
adc
aaa
sbb
lods
in
iret
repnz
stos
cmp
inc
pop
jnp
pusha
mull
addl
lret
or
ficompl
and
pop
mov
pop
scas
cmp
andl
pop
mov
inc
test
fisubs
outsb
scas
addl
fwait
stc
pushf
pop
sbb
mov
ljmp
insl
inc
dec
dec
jecxz
mov
out
gs
je
jo
shll
in
stos
lds
sub
out
push
xchg
pop
jl
lret
int
fs
sbb
lods
lods
in
mov
xor
in
add
xchg
xchg
movsb
out
dec
mov
rorb
cmp
inc
call
fisubrs
cmp
and
sbb
int3
fs
xor
dec
push
adcl
or
pop
push
out
pop
mov
add
ljmp
inc
iret
aas
xor
outsl
gs
mov
xor
push
or
aas
cmp
out
push
and
rorl
adc
add
into
cmp
and
and
sbb
in
call
ficoml
pop
jecxz
aam
incb
mov
test
movb
cld
imulb
mov
xchg
inc
call
jns
cmp
and
pop
les
les
das
cmc
mov
push
lahf
cmpsb
lock
jl
outsl
stos
jbe
or
rcrb
lret
icebp
xchg
cltd
stos
fadds
xor
jae
and
push
mov
lds
dec
std
cmp
mov
in
sbb
dec
mov
mov
rol
imul
fnsave
or
dec
mov
scas
lds
push
movsb
push
xchg
pushf
std
mov
xor
out
lods
xchg
jmp
icebp
lods
xchg
and
jb
sub
dec
es
sub
call
mov
loopne
jecxz
mov
jae
and
sbbb
enter
add
ficoml
jae
lcall
fldenv
movsb
mov
or
in
inc
xchg
sub
inc
pop
sbb
mov
mov
incb
cs
test
adc
and
out
lret
push
jne
mov
and
sbb
cmp
jmp
pusha
stos
or
mov
and
shlb
cmp
sbb
pop
mov
mov
imul
cmp
jp
add
mov
dec
mov
push
jo
negl
imul
addr16
lret
jns,pn
xor
shll
pop
fisubs
cmp
cwtl
jbe
jno
xor
clc
xchg
pop
stos
je,pt
das
movb
sbb
mov
mov
outsb
iret
push
popa
js
fwait
mov
fnsave
push
and
test
hlt
push
sbb
cld
nop
dec
add
jp
test
mov
push
sbb
mov
test
ja
in
xchg
sub
xor
dec
jb
dec
dec
lret
sahf
popa
push
cmp
sarb
mov
into
das
sub
shrb
std
fsubs
sub
out
iret
fwait
fs
test
xchg
jnp
mov
outsb
xor
inc
fwait
cmp
scas
mov
xchg
ret
push
in
aad
enter
and
cmp
sti
xchg
shr
jae
pusha
and
bound
clc
mov
fwait
cmp
pop
xchg
fidivrl
in
fcoms
fisttpll
jnp
shl
pushf
es
out
sti
sub
lods
push
mov
scas
mov
fisubrs
mov
lahf
xor
stos
jge
sbb
ja
aaa
sbb
popa
dec
fmuls
scas
hlt
mov
fmuls
jg
xchg
scas
dec
inc
frstor
cli
dec
jo
mov
lcall
sbb
cmp
insb
aad
mov
or
and
add
test
xor
out
out
test
jo
push
outsb
xchg
add
push
mov
xor
fsubrl
or
mov
mov
mov
sbb
repnz
xor
imul
lret
or
dec
mov
data16
xchg
adc
xor
outsb
out
xchg
mov
stc
push
out
cmpsl
sbb
filds
lods
pop
xchg
lods
adc
and
lock
in
jmp
test
mov
test
iret
fldt
inc
pop
fsubl
push
cmc
xor
pusha
leave
pop
adc
out
fwait
mov
or
xor
shrl
in
pop
rolb
lock
mov
mov
scas
fnstcw
push
add
cs
add
pop
xor
xchg
fwait
arpl
aam
cmp
mov
adc
mov
mov
dec
and
adc
adc
mov
jb
push
and
xchg
mov
xor
push
lock
push
repz
mov
jmp
dec
inc
lcall
inc
jmp
jmp
xor
jle
pop
ret
es
dec
xchg
jge
out
in
repz
pop
stc
pop
hlt
xchg
stos
mov
adc
aaa
jnp
andl
or
pop
pushf
lea
jne
xchg
add
fstpl
and
push
xchg
jno
mov
jg
cmpb
lret
rcrb
repnz
addr16
cwtl
sbb
ds
mov
mov
jg
mov
ds
popa
rcr
addr16
pop
std
xor
lea
pop
inc
push
cmc
sbb
jle
xor
mov
xchg
lock
imul
sbb
repz
stos
add
jbe
inc
jns,pt
and
adc
push
add
insl
pop
outsb
cmpsl
addr16
inc
push
lds
xlat
call
test
addr16
clc
lret
xor
xor
cmp
roll
dec
push
xor
cmpsb
call
jns
fnsave
jecxz
shlb
jbe
inc
xchg
or
psllq
cmp
stc
test
fistpl
outsb
hlt
call
xlat
mov
mov
imul
xchg
sarl
mov
pop
jb
sub
jle
test
and
dec
outsl
adc
clc
stos
cmp
cltd
nop
sbb
ljmp
sbb
jl
jae
int3
arpl
popa
movsb
jge
xorb
jb
jbe
fidivs
sub
push
push
jmp
ds
jae
cmp
aaa
sub
jge
aas
xchg
mov
not
aam
push
xchg
clc
ljmp
inc
leave
iret
jmp
xor
ret
xor
in
int
push
sub
pop
sbb
in
jecxz
push
mov
add
insl
rcrl
sbb
pusha
in
cli
or
mov
mov
aam
sbb
shld
aad
es
cld
les
clc
jp
mov
push
popf
iret
scas
cwtl
das
push
bound
or
aad
les
mov
xchg
mov
fcompp
out
push
cmpsl
js
and
out
mov
jge
and
loopne
xor
fwait
xor
fisttpl
push
mov
data16
mov
les
xor
pusha
xor
sbb
fwait
inc
gs
scas
cmp
sahf
adc
dec
xchg
insb
lods
fs
and
out
pop
inc
jnp
pop
xor
aad
jne
jp
xchg
and
push
in
push
ja
push
xchg
dec
mov
jp
dec
jecxz
sbb
xchg
adcb
or
xor
imul
xchg
xchg
stos
sbb
scas
fcmovnbe
nop
repnz
or
cmp
fwait
daa
ret
cwtl
in
push
loope
bound
sbbb
mov
and
call
mov
shl
mov
lret
insb
sti
adc
int3
push
outsb
dec
inc
jmp
cmpsl
xchg
jmp
into
std
mov
pop
aad
movsl
fbstp
test
sbb
jg
xchg
sub
dec
sbb
inc
inc
cs
gs
dec
dec
xchg
xchg
aaa
push
cltd
jae
ljmp
pop
sub
xor
jg
cld
push
mov
mov
dec
test
mov
scas
stc
sub
adc
pop
mov
test
sbb
xchg
call
in
dec
out
cltd
data16
adc
xor
outsb
aam
mov
into
jmp
fcmovbe
mov
in
loop
or
push
inc
or
cli
mov
add
mov
les
sahf
mov
mov
iret
es
notb
andl
dec
push
sbbl
push
fmuls
sub
stos
sahf
xor
ret
into
repz
dec
lock
xchg
out
ss
mov
sbb
incb
in
sbb
stos
xor
fistl
ret
push
repnz
loope
hlt
adc
sbb
rcrl
add
inc
dec
fwait
add
aaa
dec
inc
sbb
adc
push
and
enter
and
mov
jle
fsubrs
outsb
aad
hlt
lods
jmp
pop
ficomps
xchg
ljmp
cli
hlt
cmp
adc
je
aaa
mov
sbb
dec
xlat
pop
hlt
or
adc
loop
lcall
shrb
out
faddl
cmp
jge
jl
rorl
pop
cli
push
cmp
mov
jle
adc
inc
push
xchg
pop
inc
mov
outsb
loope
push
fadds
sbb
cmpsl
jnp
mov
jmp
aaa
sarb
mov
outsl
push
ljmp
ja
sbb
push
inc
ds
sti
leave
imul
and
sub
ljmp
mov
pop
or
mov
pop
ds
sbb
insl
adc
add
adc
lcall
and
arpl
ja
mov
cld
cmc
push
jns
xchg
test
mov
mov
push
lods
in
daa
or
shrb
rorb
lret
adc
roll
cs
mov
and
test
ss
xor
cs
pop
or
mov
insb
repz
movsl
test
fwait
lods
jnp
xchg
push
pop
popf
cmpsl
cmp
hlt
mov
xor
jmp
jge
std
cmp
add
imul
jns
movsb
mov
addr16
fwait
jl
or
mov
push
subb
cmp
stos
jbe
insb
sub
repz
cltd
cltd
or
out
mov
outsl
ds
flds
aaa
inc
stos
je
pop
arpl
test
repz
cmp
mov
addr16
out
icebp
adc
mov
cmp
in
popl
sub
or
lret
push
mov
and
and
mov
mov
int3
lret
dec
push
shlb
call
mov
sahf
clc
xor
stos
adc
sbb
mov
adc
or
mov
mov
test
into
mov
jg
dec
add
push
jno
sbb
xchg
sub
push
sub
mov
sub
ret
adc
pusha
loope
shlb
push
sbb
inc
push
nop
in
mov
divb
inc
lock
test
clc
fmull
mov
mov
xlat
pop
int3
lret
ret
xchg
xor
jecxz
sahf
inc
xor
dec
and
cmp
pop
inc
mov
sar
popf
mov
and
inc
xor
mov
fsts
loop
jae
xchg
rcll
mov
testl
rclb
ret
shrl
xchg
pop
jne
repz
pop
imul
movsl
ror
lods
jmp
lods
push
in
clc
enter
mov
push
push
jno
sbb
xchg
sbb
push
push
sbb
icebp
int3
ret
push
pusha
ss
hlt
push
inc
cmp
fsts
jns
jae
insb
mov
inc
sub
mov
mov
cmp
lcall
lret
and
loopne
mov
adc
adcl
sbb
ja
ss
into
fdivrs
dec
mov
dec
mov
fsubl
lahf
push
faddl
jo
inc
shll
dec
in
mov
ss
pop
mov
loopne
lds
rol
mov
ds
loop
push
dec
pushf
adc
in
adc
fiadds
dec
xlat
mov
lea
leave
nop
fnstenv
push
push
adc
dec
push
cmp
mov
daa
js
pop
imul
scas
xor
jns
stos
out
rcr
mov
adc
es
or
sub
ss
sbb
ret
lds
push
sbb
adc
mov
xlat
mov
sbb
mov
in
cwtl
rclb
xor
mov
ja
sbb
repnz
mov
sbb
sbb
fnsave
loope
insb
xchg
cmpsb
cmp
or
aad
add
outsb
roll
dec
mov
push
xchg
dec
outsl
movsb
dec
ret
sbb
es
mov
insl
cmp
cmp
shlb
or
sub
xchg
fstpt
push
dec
ljmp
and
insb
cmp
xchg
xor
addr16
xor
shlb
jle
cwtl
adc
or
xchg
add
sti
pop
sbb
sbb
lock
sti
xchg
mov
dec
pop
addr16
push
insl
sbb
into
test
jmp
testl
mov
vpsllw
dec
sbb
inc
shll
es
adc
in
push
in
mov
fildll
fsubl
pusha
rorb
dec
add
xchg
mov
sahf
cwtl
and
popf
cmpsb
xor
outsl
push
movsl
xchg
cli
add
adc
mov
testl
lea
inc
scas
negl
cli
bnd
mov
mov
push
pop
notb
xor
stos
andl
mov
xor
and
enter
xor
mov
cmp
les
dec
sbb
rolb
aad
jno
mov
sti
xchg
repz
sbb
ret
test
in
nop
movb
popf
mov
push
popf
lods
push
test
inc
fisubrl
pushf
lods
push
mov
mov
hlt
xchg
mov
and
aam
shrb
xor
lock
jb
stc
mov
stc
testl
and
adc
fsubrs
dec
mov
ret
shrb
ret
cld
dec
jl
lock
mov
cltd
dec
push
and
xchg
push
cs
jne
imul
stc
cmp
test
fyl2x
mov
pop
mov
enter
outsb
jmp
lahf
lods
lret
js
add
lods
insl
and
lret
int3
cs
mov
mov
mov
sti
xchg
jne
and
test
lcall
adc
movsl
sbb
adc
and
fdivs
inc
fisubs
jno
lcall
lcall
jbe
fwait
jbe,pn
inc
or
mov
mov
shrl
sbb
sub
std
daa
jae
repz
push
xor
or
loope
pop
popf
call
inc
fs
mov
xor
bound
add
push
jae
and
push
lsl
repz
push
lahf
mov
mov
ss
rolb
mov
ljmp
in
mov
pop
or
cmpsb
cmp
cmp
les
pop
push
in
lea
je
fsub
or
das
xor
mov
rcrb
pop
jmp
lahf
ss
in
test
fwait
mov
inc
hlt
dec
sbb
pop
ja
out
pop
jp
movsl
mov
sbb
cmc
cli
pop
mov
push
inc
loope
cmp
pop
sub
ljmp
sub
stos
add
push
pop
std
enter
jno
jecxz
fisubs
inc
sbb
mov
lods
mov
pop
sbb
cmc
sub
ljmp
test
mov
xchg
sahf
or
cmpb
mov
push
inc
scas
repnz
cmpsl
out
fsubr
daa
or
jo
jp
xchg
das
addr16
mov
or
shl
cli
mov
pop
movsl
add
int3
add
push
arpl
addr16
sti
inc
fwait
mov
inc
out
add
decb
xor
xchg
ja
add
mov
xor
inc
adc
ja
xchg
jge
lcall
xor
or
in
push
pop
cwtl
shll
das
push
cmp
insb
dec
ror
xchg
mov
out
sbb
or
jmp
leave
pop
jno
movsb
mov
clc
jmp
sbb
test
mov
cmp
sub
mov
xchg
scas
inc
dec
data16
pop
inc
notb
mov
shll
lea
in
add
pusha
mov
cmp
pop
cmp
cmp
adc
mov
dec
cmc
cwtl
test
call
imul
push
mov
scas
inc
popa
stos
aaa
sub
sti
jge
adc
aas
inc
mov
push
pop
cmp
and
push
inc
out
mov
scas
xchg
cld
mov
pop
mov
fadds
pop
hlt
xlat
insb
mov
inc
mov
pop
adc
mov
popa
push
loope
loop
je
jge
sbb
dec
rolb
popa
adc
call
inc
lods
cld
mov
lret
sbbl
pop
ret
mov
jg
jno
loop
fistl
in
stos
in
scas
stc
orl
fsubrs
xor
test
mov
jmp
jo
loop
popf
adc
lret
push
fisubrl
dec
and
popf
xor
jno
lret
mov
dec
mov
pushf
cltd
in
xorl
stos
fwait
sbb
jns
jbe
sub
cmp
pop
mov
mov
aad
dec
inc
adcb
sub
outsl
push
test
dec
es
mov
adc
vpshufd
fbstp
lret
not
cmp
cmpsb
add
bound
sahf
xor
test
xchg
cmp
js
outsl
mov
jnp
mov
stos
mov
jnp
insl
fdivs
fidivs
adc
jg
ja
in
mov
test
in
repnz
sub
inc
mov
loop
adc
sti
add
mov
subb
adc
scas
clc
push
lea
shl
std
arpl
out
cmp
cmp
jns
pop
int3
sub
movl
ljmp
sbb
mov
or
mov
xchg
hlt
push
adc
test
push
mov
iret
in
andb
mov
add
mov
push
shlb
add
sub
lods
mov
div
push
out
xchg
jns
adc
push
and
mov
push
jo
cmp
ret
pop
pop
mov
mov
loop
add
mov
lret
mov
push
push
pop
data16
dec
fsubl
sbb
mov
pop
icebp
clc
aaa
mov
iret
adc
outsb
xchg
or
in
std
jle
mov
loopne
or
jmp
int
stos
mov
push
in
pop
adc
mov
pop
cmc
mov
fnstcw
jg,pt
xchg
insb
jle
mov
pop
gs
pop
lret
mov
je
sub
mov
repz
sub
ficomps
hlt
and
lea
dec
mov
cmp
xchg
pop
push
scas
xchg
js
pop
xor
lret
icebp
test
lods
ret
scas
xchg
mov
shlb
adc
mov
dec
pop
aas
and
hlt
cltd
mov
jne
cmp
inc
pop
and
jb
sbbb
xchg
pop
push
inc
ror
xor
xor
lods
call
andl
jo
rcl
sbb
test
adc
pop
sbb
call
adc
xor
jmp
test
sbbl
push
or
hlt
ds
flds
mov
pop
cmc
negl
test
fucom
and
cmp
sbb
orl
adc
nop
sbb
int
cmp
cwtl
shlb
fwait
ljmp
in
xchg
subl
pop
pop
xor
xor
daa
scas
or
xor
and
out
xor
xchg
loope
stos
adc
scas
mov
nop
fildl
dec
mov
stos
in
jne
mov
xor
jl
mov
push
enter
test
dec
pop
outsb
pop
lahf
lahf
cmp
bound
scas
add
cltd
test
sub
lods
sub
add
add
hlt
loopne
jb
or
dec
xchg
adc
pavgw
cmp
push
push
popa
dec
aad
sti
push
mov
arpl
mov
sbb
mov
ss
jb
ret
inc
push
out
ffree
mov
sahf
xchg
sti
inc
jbe
push
data16
push
test
mov
pop
pop
nop
std
hlt
aas
aam
fucom
mov
sub
fs
xor
mov
aad
inc
imul
or
out
outsl
xchg
ds
les
inc
fcomip
jne
daa
std
pop
das
mov
in
fsubrl
push
push
mov
out
mov
push
shl
xchg
es
mov
clc
ds
push
rorb
mov
ds
nop
out
cmp
jb
mov
push
mov
in
xchg
cmp
dec
xchg
xor
data16
pop
js
mov
adc
lea
inc
imul
gs
leave
add
sbb
mov
rsqrtps
imul
icebp
lret
bound
dec
jb
xor
pop
es
data16
pop
cmp
pop
in
jp
inc
out
lahf
or
into
cmp
pop
imul
xor
jns
dec
and
leave
cmp
dec
ret
add
repz
dec
in
insb
mov
shr
mov
shll
in
shr
xor
int
xor
fs
mov
pop
jnp
mov
test
shl
data16
std
rclb
ret
int3
mov
lods
pop
pop
out
jle
mov
push
mov
stos
xchg
aas
pusha
mov
inc
aad
or
sbb
adc
and
jb
icebp
sbb
stos
in
pop
sbb
mov
inc
mov
movsb
push
popf
sbb
inc
pop
sahf
sbb
add
adc
or
cld
add
mov
movsl
push
test
jae
pop
mov
pop
insb
into
std
sbb
jle
into
lcall
adcl
lret
inc
xchg
mov
in
adc
cwtl
cmp
fadd
daa
outsl
jnp
pop
scas
push
push
stos
hlt
push
adc
and
jo
mov
aam
mov
loope
sub
or
pop
imul
jmp
mov
call
imul
push
mov
out
repnz
jae
mov
sti
push
nop
out
sub
stos
jmp
ja
int
jle
mov
lahf
xlat
outsb
roll
cmp
dec
mov
sbb
push
test
xchg
mov
xor
ds
mov
test
dec
divl
sbb
push
jae
lods
mull
sbb
mov
addl
sti
popa
das
or
inc
push
and
mov
cmpsl
pop
lret
stc
xlat
hlt
jbe
mov
push
jnp
shlb
out
sbb
int
fmul
push
lods
ljmp
pushf
sub
jmp
cs
mov
jle
jbe
sbb
inc
and
lock
clc
xchg
lds
pop
ds
jecxz
adcb
aam
mov
cs
loop
push
mov
add
cmp
push
insl
dec
in
cmp
insb
add
jl
mov
lock
lock
iret
inc
dec
aas
inc
xchg
cmp
fildll
cmp
imul
je
fs
mov
loop
popa
mov
lea
adc
inc
fsubl
push
hlt
push
dec
lret
sbb
rolb
fnstsw
add
leave
subl
jmp
mov
mov
mov
mov
popf
add
lahf
mov
add
outsb
ret
pop
mov
dec
ret
dec
xor
addr16
ret
dec
movsl
jp
out
loope
adc
inc
pop
jle
outsb
stos
cmc
cli
push
pop
or
cli
push
mov
lods
sbb
mov
leave
inc
ficoms
adc
pop
aam
gs
test
add
dec
or
dec
mov
add
and
and
movsl
xchg
jbe
pop
jg
sub
lret
push
gs
push
xor
test
ret
lret
in
fwait
jp
pushf
xchg
enter
pcmpeqd
xor
push
cmp
int
add
adc
orl
inc
lret
add
jno
push
insb
mov
add
aas
fsubr
test
jl
sub
xor
in
rcrl
push
xlat
nop
add
and
jbe
inc
pop
or
je
adc
and
cmpsb
xorb
jl
insb
jle
pop
repnz
pop
mov
std
cld
pusha
mov
mov
cmp
out
popf
ficomps
rclb
cmp
nop
jl
xchg
dec
divl
cmc
sub
fistps
inc
or
and
fimull
mov
dec
pop
and
push
subl
sbb
xchg
stos
mov
mov
push
inc
fcoms
mov
outsb
aam
outsb
inc
xlat
cld
cmc
or
mov
lret
push
insb
ja
push
call
pop
mov
ret
xchg
push
stos
je
or
clc
int
mov
inc
in
enter
addr16
std
pop
dec
cmp
test
xor
xor
cwtl
mov
mov
and
loopne
mov
cmp
lods
cmp
enter
inc
pop
or
dec
pop
push
jns
mov
jnp
push
push
lret
daa
pushf
xor
bound
jecxz
pop
stos
jo
add
add
xor
push
scas
xchg
std
inc
stos
cmpsl
mov
dec
mov
leave
adc
jne,pt
out
or
xchg
in
jno
dec
pop
aam
mov
aas
mull
not
stos
shlb
xor
ljmp
movb
popa
adcb
sub
aaa
mov
sahf
icebp
scas
scas
inc
mov
dec
push
std
xchg
pushf
pop
out
int
or
into
icebp
adc
icebp
cld
fnstsw
mov
inc
jl
push
lcall
push
ljmp
jb
fwait
shlb
int
ret
inc
jge
es
adc
iret
pop
xorl
sti
loope
sub
btl
push
jno
sbb
addr16
jo
ja
push
inc
add
xchg
test
sub
dec
ret
push
xor
lock
call
test
dec
mov
fisttpl
int
jecxz
jmp
xor
ss
in
cmc
imul
jecxz
push
cmp
mov
jmp
test
sbb
and
jb
adc
or
fwait
insb
movsl
or
pop
jecxz
add
fstpl
mov
out
xor
push
mov
repnz
mov
lret
jae
pop
and
mov
push
push
mov
mov
jl
icebp
scas
movsl
add
adc
js
lgs
add
mov
xor
lea
cmp
adc
sarb
xor
jp
test
xorl
pop
std
push
sbb
xchg
lret
xlat
enter
push
gs
repnz
or
mov
maxps
mov
in
or
rolb
jmp
movsl
sbb
push
mov
sub
fldl
popf
in
sbbb
sti
jnp
es
jns
push
or
imul
loope
stc
in
cmp
sub
push
aam
sub
loopne
movsb
sahf
add
dec
inc
pop
or
in
and
add
clc
xchg
shlb
xchg
jb
sub
bound
sbb
or
mov
cmp
push
pusha
or
dec
add
lcall
xor
mov
push
loope
into
cltd
push
lods
adcb
sbb
daa
mov
call
inc
jl
jb
test
sarb
mov
loopne
lret
movl
out
data16
dec
add
test
sbb
jp
mov
jno
mov
es
adc
xchg
mov
ret
jle
iret
and
jl
adc
outsb
xchg
mov
pop
addr16
push
bound
sbb
jg
popa
mov
outsb
int3
clc
mov
sbb
test
cmpsb
cmpsb
daa
inc
cld
add
mov
sub
inc
cmp
fildl
hlt
cmp
ljmp
jecxz
jo
notb
outsl
add
ss
jmp
xor
or
fimull
push
daa
mov
mov
sub
mov
int3
in
adcb
cmp
cmp
cld
pop
pop
outsb
int3
lock
sarl
mov
push
test
xlat
mov
inc
sub
mov
sarb
lea
rolb
subb
pop
lods
data16
jns
sub
cmpsb
fwait
xchg
add
cmp
push
in
or
mov
cwtl
insb
jp
mov
movsl
pop
or
xor
popf
push
pop
icebp
je
inc
jbe
and
push
and
adc
stos
xchg
arpl
call
imull
xchg
fwait
sbb
outsb
mov
fcomip
xor
subl
and
xchg
push
popa
mov
xchg
je
stos
test
dec
stos
outsl
or
sub
sbb
xchg
push
fdiv
aad
jne
call
loope
inc
bound
add
mov
sahf
cld
in
cmpsl
add
inc
sub
aas
fsubrl
sbb
xchg
inc
jnp
inc
cmp
jb
hlt
cmp
inc
shr
or
insb
js
pop
negb
je
mov
dec
sub
movb
xor
fsubs
jmp
jbe
fldcw
stos
xlat
outsb
in
xchg
je
xor
gs
fsub
dec
sbb
imulb
mov
cs
ret
sahf
imul
fistpll
or
sub
movsb
insl
sub
adc
dec
push
je
rcll
ss
test
jne
movsl
push
lock
insb
mull
ja
pop
sbb
mov
test
inc
fcomps
ljmp
hlt
mov
and
adc
in
test
add
sbb
aas
pop
insl
repnz
mov
sub
mov
imul
das
mov
cmp
ficoml
xchg
call
shlb
outsb
xchg
jge
into
sub
fcmovbe
mov
or
sub
push
in
ss
jae
shlb
in
or
cltd
jmp
ljmp
mov
inc
mov
adc
xor
and
mov
adc
minps
adc
xor
cmp
popf
pop
flds
mov
mov
or
xchg
out
add
push
mov
into
inc
ljmp
jno
imul
dec
mov
std
push
lret
orb
into
dec
jae
cli
xchg
stc
nop
les
pushf
or
xlat
les
pop
insl
stos
std
sbbb
pop
push
push
mov
or
pop
mov
shrb
mov
xchg
mov
fdecstp
repnz
aad
mov
xchg
cwtl
or
daa
xor
mov
in
jle
arpl
andb
or
jg
lahf
cwtl
dec
xchg
mov
jo
lahf
mov
or
pop
inc
fldl
or
sub
push
ret
cmp
inc
lds
inc
cld
gs
ret
or
jp
dec
mov
fwait
dec
jecxz
call
inc
inc
or
pop
lret
call
roll
loopne
or
sub
imul
cmpsb
rcll
hlt
add
cmp
inc
sbb
mov
int
cmpsl
sbb
popa
stc
cmp
adc
mov
and
add
sub
in
push
push
add
movsl
cwtl
jne
in
xchg
mov
out
clc
jg
ds
das
inc
pop
xchg
xchg
cmp
popf
out
sbb
jno
es
mov
pop
xchg
mov
and
push
adc
scas
lretw
mov
fwait
sub
rcrb
cwtl
fiaddl
fs
std
dec
mov
jp
sahf
sbb
lock
adc
or
add
out
aaa
pop
shll
pop
imul
xorb
jl
imul
rcll
loop
inc
fwait
or
into
xor
iret
out
ljmp
inc
or
jne
mov
pop
fnstsw
loope
or
xchg
ret
push
das
lret
pop
pop
scas
rclb
or
jbe
rcrb
xchg
jmp
mov
lret
dec
jno
or
add
or
and
stc
mov
xor
mov
int
adc
je
and
jbe
scas
daa
mov
scas
les
psraw
mov
jb
jle
push
mov
cmp
adc
xchg
out
push
mov
xchg
cmpsl
cmp
dec
or
in
pop
mov
dec
pop
cmp
jae
mov
out
mov
jb
jno
sub
mov
pop
mov
pop
pop
in
lds
jle
imul
lds
push
test
mov
cs
or
fcoml
push
and
mov
jo
pop
shlb
int
daa
mov
and
les
out
fwait
std
in
jns
into
push
out
stc
fs
jp
gs
outsb
imul
sbb
movsl
mov
pop
adc
shlb
call
mov
cmc
cmp
pop
or
insl
out
nop
cs
dec
xor
stos
js
outsl
push
add
test
add
xor
jle
in
sbbl
in
inc
repz
mov
mov
imulb
inc
sub
std
push
inc
in
cltd
insl
add
mov
mov
pop
rcrb
aaa
cs
push
push
call
rcll
jge
push
lahf
sbb
movl
ja
mov
mov
jno
jmp
in
into
xchg
add
stc
dec
mov
adc
xor
cltd
stc
ja
jno
movsb
test
aam
sbb
loop
push
enter
mov
ret
adc
decb
adc
rcrl
xchg
inc
mov
test
jns
xchg
cmp
adc
shll
lret
mov
or
mov
dec
enter
out
pop
fisubrs
cld
bound
sbb
xorw
push
ss
cmp
adc
adc
arpl
mov
outsl
add
mov
push
scas
inc
jne
into
fcompl
dec
lret
sbb
xor
shlb
xor
xor
sub
pop
jno
mov
push
out
clc
xchg
sub
loopne
inc
jp
leave
ret
gs
sahf
roll
aas
in
test
outsb
shrl
fsubrs
mov
ret
mov
or
lcall
push
les
mov
and
push
push
or
lret
rorl
pop
push
sub
nop
loopne
pop
cmp
popf
andl
xor
pop
cmpsl
adc
inc
dec
xchg
lods
leave
gs
pop
jmp
jb
xor
jmp
notl
ret
out
negl
and
sbb
lea
xor
fisttpll
lahf
xor
push
inc
push
int3
pop
fdivr
das
fistpl
xchg
push
in
adc
ljmp
inc
out
and
xchg
sbbb
subb
bndstx
daa
and
lcall
bound
aad
orb
pop
pushf
jp
lods
into
lahf
addr16
pop
in
int
sbb
aaa
adc
mov
popf
imul
out
xchg
and
out
ds
adc
movsb
jmp
and
pop
lock
inc
jns
sti
xchg
xor
imul
push
std
or
ret
mov
in
ficompl
jae
xchg
and
lds
in
sbb
xor
inc
jne
push
test
xchg
xchg
stos
enter
mov
leave
pusha
push
push
dec
or
jae
xchg
stc
or
leave
push
xor
sti
hlt
data16
and
inc
fistps
or
xor
test
add
sbb
xchg
sub
mov
and
push
inc
imul
sahf
jae
mov
push
mov
mov
rol
fistps
stos
dec
les
stos
and
out
pop
aas
adc
add
inc
divl
test
push
mov
cmp
aad
cmp
push
lods
push
mov
fisttps
cli
xchg
fcompl
jns
dec
lahf
js
mov
mov
sbb
inc
test
lret
xor
jo
cli
jle
int3
lock
fmul
xchg
leave
shr
pop
mov
pop
je
cld
mov
test
inc
or
push
ss
adc
mov
fs
cmp
add
or
mov
xorl
sub
in
fwait
cmp
enter
dec
push
sbb
fildl
or
in
nop
mov
mov
jnp
and
mov
fisubs
xchg
and
bound
sbb
sub
cmp
loope
pop
nop
daa
inc
addr16
push
push
scas
mov
adc
loopne
cmp
mov
mov
jmp
sbbl
lret
xchg
fisubs
fs
jo
cmpsl
add
jae
stos
add
sahf
jb
inc
cli
xchg
jl
and
decl
jecxz
jnp
aaa
sub
test
out
aaa
out
test
fcmove
ret
pushf
or
sub
mov
adc
leave
jp
sti
inc
fbstp
mov
aaa
enter
or
bound
lods
mov
xlat
nop
inc
popf
mov
adc
mov
aad
addl
mov
jae
dec
pop
gs
lret
movb
pop
sub
xorl
dec
data16
mov
addr16
add
push
add
or
scas
aad
jns
repz
fucomp
mov
sub
xor
nop
iret
xchg
xchg
test
xchg
mov
sub
push
add
inc
dec
jbe
sbb
xchg
mov
pop
add
xor
fbstp
jmp
lret
xor
mov
imul
pop
xor
xor
test
dec
enter
sti
lock
stos
xlat
negl
or
fidivrl
cli
push
jmp
cmc
mov
xor
pop
lea
mov
aas
popf
mov
inc
pop
cmc
xchg
inc
in
mov
aaa
pop
aas
pop
cmp
orl
xor
loop
push
jne
add
push
xchg
test
stos
pop
xor
pusha
xchg
xor
stos
and
mov
pop
sub
les
sbb
and
call
stc
add
test
mov
fsubrs
and
stc
pop
fisubrs
leave
jp
push
and
je
imul
es
push
arpl
jns
push
sub
mov
sub
hlt
fidivrl
or
mov
sbb
lret
lock
aas
xlat
lcall
fldcw
jbe
jb
mov
out
sbb
mov
gs
sub
jae
push
fwait
pop
mov
mov
mov
add
shlb
pop
pop
pop
and
out
js
inc
out
je
andl
leave
sub
cld
leave
negb
out
out
add
sub
test
dec
shlb
dec
out
je
xchg
jg
add
mov
adc
rcrb
fists
xor
push
out
jmp
inc
in
jne
rcrb
fldenv
cmp
stos
negb
and
mov
into
movsb
psubq
pop
out
push
or
imul
fisubrl
pop
add
mov
mov
jmp
sub
ret
mov
sbb
fistpl
xchg
xchg
cmp
sbb
ja
popa
jg
push
sub
push
lds
jge
push
xor
subb
hlt
orl
mov
inc
aad
mov
and
cli
push
pop
std
cwtl
xor
push
sbb
xchg
cld
push
into
xchg
popa
mov
sub
out
lods
in
add
dec
xor
cmpsb
inc
cmp
jbe
push
jns
cmpl
mov
lret
loopne
add
cmp
jecxz
lds
adc
pop
push
jl
xor
jecxz
xchg
inc
shrb
cltd
push
cli
popa
add
mov
adc
shrb
nop
pop
jl
out
insl
lahf
rclb
push
lods
and
push
lods
mov
imul
cld
sbb
sti
xchg
sbb
bound
je
jo
cltd
shlb
mov
loope
adc
pop
or
and
xchg
xor
leave
inc
pusha
aad
jle
es
jno
xor
mov
test
jne
cs
cmp
pop
cmp
push
xchg
sub
in
push
in
xchg
cmp
mov
jae
inc
insl
push
sub
inc
subl
add
lods
inc
lea
push
popf
sahf
out
pop
sub
mov
pop
cli
dec
mov
pop
js
jl
jmp
in
roll
rol
std
inc
mul
push
push
push
inc
push
mov
out
inc
cmp
xor
mov
icebp
pop
lret
bound
inc
arpl
jmp
pop
aaa
mov
push
dec
aaa
aad
and
mov
fdivrl
daa
inc
popa
mov
xchg
test
push
aaa
or
sbbb
lcall
and
and
imul
xchg
jne
mov
out
sub
mov
mov
jo
add
sbb
repz
in
js
sbb
xor
add
adc
pop
ja
push
stc
fdivr
inc
mov
pop
cmc
sub
add
jb
pop
movsl
sbb
cld
out
bswap
xor
and
xor
mov
dec
jecxz
stc
pop
insb
sub
push
xchg
sub
setb
sub
xchg
inc
lcall
imul
js
and
and
mov
push
dec
mov
int3
adc
inc
pop
pop
lock
cmpl
mov
loop
xchg
xor
gs
push
sub
or
jecxz
aas
pop
cmp
dec
jb
jle
fistpll
repnz
rcrl
adc
pop
inc
xor
cmpsb
imul
into
stos
mov
cmp
dec
aam
loopne
fisubl
jo
fsts
mov
fs
sbb
push
fsubrs
inc
subl
ret
stc
arpl
rcr
mov
ret
fisubrl
adc
sbb
and
in
inc
push
xchg
and
test
stos
cmp
mov
imul
int
insl
mov
jg
call
pop
mov
pop
cmp
jecxz
into
gs
cli
xor
repnz
adc
sbb
push
loope
or
scas
pop
cwtl
or
mov
addb
cmc
xor
bswap
sbb
mov
xchg
faddl
push
mov
hlt
test
call
pop
push
and
adc
sti
or
xor
and
push
xchg
jle
repz
and
sbbl
jnp
outsb
lret
mov
push
inc
popl
out
adc
dec
out
mov
cmpsl
xchg
mov
add
xchg
xorb
shl
pushl
cmpsl
xchg
lods
cs
mov
popf
mov
shrl
jecxz
xor
adc
xor
adc
outsl
addl
andl
lds
push
sti
xchg
enter
sub
scas
push
shrb
aaa
fcmovnu
jo
sub
jnp
int
arpl
jb
mov
loope
or
cld
inc
inc
or
cwtl
cmp
popa
mov
loope
push
jbe
dec
fistl
cmp
inc
sbb
outsl
lcall
dec
out
sahf
cmp
test
lret
cld
sub
or
les
push
aad
movsb
and
rclb
push
popf
or
fnstsw
and
pop
enter
xchg
inc
gs
cs
stos
jne
add
mul
add
mov
inc
jmp
into
insb
pushf
movsb
popf
xor
mov
ljmp
push
into
leave
out
fstpl
pop
aaa
sub
das
data16
fs
pop
xor
aam
loop
pushf
sub
sub
mov
mov
xchg
pusha
and
adc
bound
in
pop
cmpsb
pop
arpl
xchg
loope
sub
mov
mov
xchg
mov
jnp
aaa
aad
lock
or
loop
js
xor
jne
add
push
pushf
daa
lods
mov
adc
push
call
lcall
je
mov
nop
out
cld
dec
and
lret
imul
jmp
out
jle
dec
sar
sbb
sub
pop
cwtl
clc
divl
jae
cmp
loop
or
add
popf
addr16
dec
jge
enter
mov
pusha
add
jb
push
push
xlat
pop
mov
in
pop
jmp
mov
out
sbb
and
inc
mov
xor
nop
fwait
inc
shl
incb
idivl
call
add
sub
imul
xchg
xor
adc
lret
xor
mov
imul
popf
jp
movsl
popa
into
pop
sub
imul
ficoml
adc
or
mov
mov
xchg
jno
inc
xor
push
dec
adc
loope
ficomps
jns
sbb
adc
add
mov
ret
cmp
stc
pop
dec
fst
popf
dec
in
mov
andl
imul
or
subl
jns
mov
fisttpll
mov
lcall
jle
xchg
aad
les
mov
popf
push
popf
lret
push
in
fstpl
sub
lds
nop
sub
cmp
std
inc
fsubrs
cltd
or
dec
sub
movsb
sbb
icebp
pop
out
and
cwtl
das
dec
mov
mov
lcall
mov
adc
sub
lock
fbld
xchg
cwtl
push
addr16
pusha
push
testl
push
jmp
sub
xchg
jb
es
mov
fcompl
pusha
movsb
sbbb
mov
cmp
sbb
adc
pop
push
cmp
lds
fsts
addl
push
daa
mov
mov
dec
mov
mov
jbe
addr16
or
mov
push
xor
mov
inc
dec
scas
mov
push
shll
xchg
add
cmp
pop
leave
xchg
pop
je
xchg
and
hlt
in
adcl
scas
and
sbb
shrb
bound
push
pop
pop
out
cmp
cwtl
subl
fs
and
mov
shll
lock
xor
in
cld
inc
or
repz
in
cmp
push
iret
mov
insl
pop
mov
mov
dec
leave
jne
add
stos
xchg
adc
adc
xor
xorl
lahf
shlb
mov
mov
out
out
cld
inc
inc
aad
fnstcw
xor
jne
sbb
pop
lods
xchg
and
add
int
sahf
or
mov
mov
pop
daa
movsl
aas
adc
mov
mov
int3
loop
sbb
mov
fs
sbb
mov
outsb
adc
cltd
daa
pushf
pop
loope
add
xchg
jl
cld
xchg
jo
rcr
rcrl
dec
jo
repnz
fldcw
jno
int3
or
xchg
add
cmp
push
into
loopne
add
sarb
pop
mov
or
movsl
mov
pop
movsl
jns
lods
dec
mov
add
incl
repnz
push
jno
or
jg
and
jl
sbb
or
and
add
scas
addr16
out
mov
or
jbe
arpl
jns
call
adc
sub
cmc
sbb
rclb
shl
lods
and
inc
mov
mov
pop
jo
jl
cmp
mov
stos
push
lea
cmp
cld
into
cli
push
mov
out
cmpl
push
aas
outsb
ret
xor
lret
movsb
imul
lods
add
inc
ss
or
and
push
inc
inc
aaa
movsl
stos
mov
or
clc
xchg
push
push
movsl
stc
xlat
mov
test
add
scas
loop
push
adc
and
push
movb
fdivl
sbb
mov
dec
out
shr
loopne
cmp
mov
mov
das
rcll
mov
cmp
sti
mov
outsl
cmp
pop
popa
pop
je
mov
dec
adc
mov
inc
gs
adc
dec
mov
sbbl
hlt
movsb
aaa
testb
jp
xchg
mov
pop
gs
loop
lea
lret
decl
data16
push
push
mov
dec
lock
hlt
jb
fucomip
xchg
std
test
popa
xchg
mov
sbb
ss
push
mov
inc
leave
jle
icebp
lods
mov
jns
ror
adc
or
jecxz
cmc
sub
ds
jl
push
lcall
out
add
and
xchg
pop
loopne
lds
cmp
sti
jecxz
adc
pop
mov
add
add
iret
xor
xor
call
or
arpl
rorb
lods
cmp
call
inc
push
clc
mov
fadds
or
leave
jo
loope
inc
mov
push
sub
pop
out
punpckhdq
into
pop
cmpsl
jns
add
insb
adc
pop
and
rcrl
ja
aas
clc
scas
orl
mov
mov
cmpsl
stos
aas
or
cmp
cli
test
pop
sub
in
dec
cld
push
stc
nop
aaa
pop
pop
xchg
shrl
arpl
mov
cmp
mov
inc
pusha
loopne
dec
popa
mov
jb
add
sub
sub
inc
mov
jle
sub
mov
hlt
pop
outsb
repz
and
jns
sub
sub
mov
cmp
mov
lahf
or
xor
jge
cwtl
es
aad
jp
test
mov
jnp
xor
loopne
idiv
adc
repz
inc
negb
adc
roll
cmpsb
pop
lods
pop
sub
jmp
and
ljmp
cmp
adc
pop
loopne
dec
mov
test
sub
popf
pop
out
cwtl
sub
lea
adcb
add
in
insl
sahf
xor
aaa
stc
dec
aam
pop
xchg
sbb
lret
jns
testl
mov
fidivs
adc
xor
jb
imul
ret
cld
xor
fnstcw
sbb
or
jle
dec
mov
cmp
jne
pushf
icebp
imul
cmp
pushf
lea
xchg
cmp
xlat
jg
add
mov
outsl
push
push
ljmp
mov
outsb
int
pop
les
fnstenv
pop
jg
call
mov
insb
push
loop
mov
jae
pop
xor
sbb
pop
jne
sbb
xchg
pop
sbb
enter
add
add
insb
mov
sub
sysenter
fwait
jg
cmpsb
out
lds
movb
cmpsl
outsl
sbb
dec
pusha
pop
cmp
subl
jb
cwtl
jno
sub
int3
jmp
or
in
mov
or
dec
push
arpl
jg
mov
aam
or
insl
sbb
inc
mov
scas
fcomps
enter
mov
and
cmp
lods
mov
adc
stos
popf
cmp
imul
jb
dec
out
addr16
loopne
xor
fcomps
xchg
and
stos
fs
sub
arpl
xchg
loope
adc
jno
cwtl
push
testl
imul
decl
out
mov
js
dec
and
shrb
mov
cmp
imul
pop
std
lret
outsb
push
cli
xor
cld
adc
pop
loope
mov
iret
and
mov
push
add
jp
mov
rorb
inc
lahf
ret
repz
sub
loope
mov
lds
jecxz
cmp
js
push
mov
adcl
or
pushf
pusha
mov
test
pop
fstl
pushf
or
std
repnz
dec
and
out
sbb
jns
into
mov
mov
adc
repnz
cs
adc
movsb
push
outsl
mov
repnz
xor
pop
jns
push
mov
fstps
and
pop
xchg
add
in
fnstcw
inc
movsb
jl
fwait
bound
fcmovu
pop
xchg
pop
cmp
movsb
aad
xchg
insl
mov
sub
shll
mov
repnz
insb
sub
lcall
repnz
add
add
mov
rclb
mov
push
inc
mov
jb
sbb
repnz
jp
sbb
stos
les
mov
stc
cld
xchg
sub
sbb
rcll
pushf
adc
shll
jne
cs
mov
mov
js
inc
mov
cmpb
call
stos
jmp
les
mov
adc
mov
xchg
mov
jo
pop
jp
adc
stos
shrl
sti
dec
std
lcall
inc
xchg
inc
inc
pop
aaa
cmc
mov
mov
out
mov
cs
cmpsl
xchg
fdivs
test
jo
xor
add
sbb
lahf
or
mov
sub
jg
aas
dec
fldt
out
psrlq
adc
test
jl
adc
pop
and
add
add
dec
lret
add
xor
repnz
xchg
daa
xchg
adc
push
fwait
mov
mov
data16
push
or
adc
pop
cmp
push
fwait
sbb
push
lcall
xchg
xchg
xchg
mov
or
cli
sbb
sub
out
add
mov
push
imull
scas
fbld
mov
add
push
insl
or
fidivs
and
insl
push
add
arpl
jnp
mov
icebp
mov
pop
dec
pop
sahf
jnp
daa
jmp
mov
cmp
pop
adc
fmul
pop
push
or
adc
push
lods
push
movsl
scas
das
outsb
pop
in
inc
xor
dec
jb
xor
stc
mov
pop
es
and
mov
xchg
scas
test
scas
shll
or
in
push
data16
movsb
cmp
lret
push
or
push
inc
data16
lds
pop
mov
add
fcoml
jmp
add
insl
aaa
lret
xor
xchg
test
nop
push
mov
adc
test
outsb
cltd
js
movsb
shlb
data16
gs
jae
add
push
add
mov
rol
and
ja
cltd
cmp
xchg
mov
imul
repnz
push
std
test
mulb
int3
and
jg
leave
loope
push
pcmpgtd
dec
mov
cmp
jmp
icebp
pop
cmp
inc
and
lds
test
mov
and
divb
pop
xchg
in
es
cmp
out
add
xor
jnp
std
mov
frndint
ds
lods
call
dec
loopne
in
or
insl
out
sarb
adc
ss
lret
mov
adc
cmpsb
test
dec
xor
std
scas
iret
push
pop
cwtl
or
rcll
mov
les
aam
cltd
pop
or
mov
jge
mov
into
inc
pop
arpl
fdivp
add
dec
lret
jb
add
xchg
stos
std
shl
mov
and
insb
mov
inc
pop
in
pop
addr16
in
mov
or
lea
inc
mov
lea
sbb
xchg
xor
mov
cmp
push
test
mov
rclb
mov
out
test
fwait
lods
inc
xchg
or
repz
mov
add
sbb
mov
xor
cwtl
push
mov
inc
bound
mov
push
and
int3
cld
pop
sub
pop
fnsave
pushf
outsl
push
into
lock
cs
or
pop
cs
scas
push
popa
mov
xchg
insb
and
add
sbb
js
xchg
pop
mov
rcrl
fld
xchg
pop
jge
outsb
enter
jp
stc
ja
add
scas
xchg
mov
and
test
mov
inc
xchg
mov
loopne
aas
fdivp
push
test
add
shll
out
sahf
rorl
insl
sub
jns
hlt
stos
in
js
push
pop
sahf
aaa
add
sbb
sub
popa
clc
inc
dec
repnz
push
pop
imul
shrb
sub
pop
mov
push
nop
js
loope
sbb
mov
mov
sbb
fisubrl
or
stos
mov
xor
and
cli
mov
inc
push
outsl
inc
xchg
jns
fcmovb
xlat
shrd
sahf
call
mov
loop
xor
out
test
xchg
mov
out
sti
sti
aam
lods
outsb
pop
mov
jge
sub
aas
daa
mov
add
pop
mov
out
jae
mov
mov
push
inc
push
and
mov
fwait
outsb
pop
jmp
roll
jo
movsl
xor
arpl
mov
sbb
pop
out
xchg
sub
mov
imul
add
lds
dec
movsb
mov
xchg
popa
cmc
cmp
and
cmc
mov
mov
daa
test
fsubl
lods
scas
push
outsb
cmp
sbb
add
pop
mov
sahf
xor
outsb
dec
and
dec
fdivl
testl
mov
insb
sbb
mov
mov
sbb
adc
aas
xchg
lret
popa
clc
jae
xchg
inc
dec
xchg
jg
outsl
enter
aad
cli
nop
test
mov
mov
lods
movsl
fbstp
loope
mov
sub
xor
inc
mov
jb
inc
sub
xchg
js
mov
fnstenv
jo
lret
jp
inc
pop
dec
xchg
xchg
negl
sbb
scas
and
or
xchg
popf
push
mov
xchg
roll
xor
pushf
jae
push
test
xchg
shr
mov
mov
or
and
or
into
lcall
pop
inc
xchg
mov
testb
popf
mov
lods
stc
mov
ljmp
pop
fwait
xlat
rorl
mov
xchg
or
adc
sbb
pop
fwait
add
and
aas
xor
dec
xchg
xchg
rorl
mov
xchg
lds
jge
mov
es
nop
fisttpl
jecxz
cld
pop
mov
and
test
dec
pop
dec
cmp
movsl
or
mov
push
pop
aas
jge
pop
hlt
ss
movsl
scas
fidivrs
fisubrl
icebp
xchg
scas
pop
sbb
nop
stos
xchg
sbb
xchg
sub
xor
mov
add
scas
sahf
jae
in
dec
xchg
adc
imull
test
xor
adc
pusha
call
add
test
leave
int3
fstp
mov
xor
pop
xchg
popa
les
sbb
lcall
lods
add
lods
leave
push
aam
cld
push
repz
xchg
sbb
inc
inc
and
push
ljmp
jno
mov
add
bound
sub
fcomps
rcrb
repnz
imul
and
neg
jo
add
xchg
mov
je
push
mov
lea
repz
push
xor
popa
lret
test
or
xchg
add
cmpl
xor
pop
and
mov
cmpsb
outsb
mov
imul
or
fwait
subl
enter
scas
mov
jo
push
sub
fistps
sub
lcall
fs
dec
out
out
out
insl
stc
mov
pop
stos
call
or
or
cwtl
loop
sar
int
out
xlat
pop
stos
sti
xor
out
push
aam
int
and
jle
scas
mov
push
jp
cmp
mov
add
jno
adc
push
push
mov
filds
jne
mov
in
xchg
repz
mulps
or
jo
cld
push
inc
bound
lcall
cmp
xchg
mov
or
movsb
mov
sub
lret
jmp
mov
clc
inc
push
aad
andb
sbb
mov
mov
or
mov
popa
add
or
add
cmpsl
hlt
fnstenv
ja
loope
inc
dec
lahf
jnp
add
sar
adc
cwtl
sti
mov
nop
notl
xchg
cmpsb
sbb
fisttps
or
xchg
push
jo
cmc
jae
shll
inc
imul
xchg
sahf
and
in
lods
inc
icebp
sub
leave
pusha
fs
mov
sbb
mov
and
lea
je
cli
test
xlat
mov
jae
dec
jno
mov
fidivrl
iret
into
movsl
push
dec
xchg
out
push
je
mov
push
sub
adc
xor
into
dec
adc
fisubs
push
in
push
out
sub
repz
test
lret
sbb
pop
cltd
mov
cltd
cld
pop
mov
add
leave
pusha
add
std
cltd
push
shl
iret
mov
pop
outsl
mov
shll
dec
cmp
ds
push
sub
cwtl
cwtl
stc
cmp
sti
out
sub
hlt
mov
dec
adc
je
sub
mov
pop
pushf
and
xlat
dec
call
and
add
gs
xor
jl
mov
jae
daa
add
test
xor
xor
in
pushl
stc
jl
fcoms
lcall
and
xor
cmc
jbe
jl
xchg
and
jg
stos
pop
push
lock
movsb
or
xor
lds
fwait
jecxz
xchg
jne
sbb
test
adc
adc
or
arpl
int
imul
das
xlat
call
dec
and
pop
mov
mov
test
cmp
fsubs
inc
or
pop
mov
and
arpl
fs
pop
cmp
push
pop
and
sti
push
jb
sbb
mov
and
mov
fnop
sbb
pop
cmc
lcall
mov
aas
test
inc
adc
sub
ds
imul
xchg
nop
stos
les
fnstenv
andb
arpl
lret
dec
jecxz
cmp
aad
sahf
xor
push
push
insl
inc
pop
subb
mov
push
inc
hlt
inc
pop
icebp
ret
shlb
push
pop
call
mov
dec
add
push
adc
imul
enter
subl
jecxz
mov
in
jns
loop
mov
orb
cmp
lods
mov
stc
push
cmpsl
ds
addl
mov
sti
cltd
aam
or
sbb
repnz
jne
nop
stc
nop
add
mov
push
out
imul
or
push
and
imul
mov
xor
lahf
inc
pop
sti
xchg
dec
mov
fisubrl
or
fadds
dec
xchg
sub
mov
add
adc
inc
fmul
mov
jg
jne
xor
xchg
mov
push
push
xor
pop
add
leave
loope
sarb
xchg
stos
pushf
insb
shl
orb
mov
data16
dec
rclb
test
ret
adc
push
adc
pop
lahf
mov
gs
test
adc
cmp
inc
mov
jns
sub
test
je
push
sbb
dec
not
mov
sub
movsl
add
and
imul
popf
and
push
mov
mov
jecxz
dec
mov
cmp
daa
sub
fwait
loopne
cmpsl
dec
lods
fdivrl
mov
cs
clc
lret
mov
movsl
lds
pop
and
adc
nop
pop
ja
adc
rolb
mov
fdiv
mov
push
inc
test
stos
xor
dec
and
shll
and
aam
mov
ljmp
push
inc
push
xor
xlat
or
js
shlb
push
pop
and
xchg
cmpb
push
add
mov
int
inc
repz
fs
xchg
sbb
dec
pop
rcr
aad
cmp
pop
dec
dec
pop
mov
fwait
out
pop
and
cld
movsl
repz
fsubr
fdivrs
pop
mov
pushf
push
jge
lods
stos
inc
or
pop
pop
pop
mov
push
dec
test
sbb
jo
add
pop
pop
stos
mov
or
cmp
into
mov
push
xchg
xor
push
dec
and
je
insb
xor
sub
dec
xchg
mov
sahf
sarb
fs
pop
out
sub
negl
jg
mov
popa
inc
imul
pop
enter
xorb
mov
xor
sub
jne
dec
mov
stos
jo
pushf
mov
imul
mov
ret
jmp
mov
and
movsb
xchg
bound
aad
mov
icebp
jg
call
dec
push
sahf
xor
mov
mov
repz
fcmove
ss
shl
es
out
xchg
mov
iret
out
nop
fadds
push
je
stos
sub
jae
cmp
xchg
fstpt
repnz
in
psrlq
xchg
bound
sbb
cmp
adc
lahf
and
cmp
rolb
icebp
clc
dec
test
add
ja
js
insl
lcall
shll
pop
mov
orb
sarl
repnz
xchg
dec
nop
cmp
jmp
pusha
jb
ja
inc
pop
jmp
stos
sbb
out
mov
mov
aam
mov
pop
push
add
push
movsl
cmp
push
jl
sub
fwait
jbe
sub
iret
jmp
in
xlat
shlb
xor
xor
out
inc
mov
int3
out
push
adc
inc
cld
mov
lcall
dec
mov
popl
push
jo
jae
aas
mov
shll
int
repz
dec
jmp
pusha
ss
fidivrl
ja
into
out
cmp
dec
mov
addb
adc
pop
sbb
xor
insl
push
pop
testb
jge
loope
push
push
ds
insb
adc
hlt
outsb
jns
ret
aaa
insl
add
in
outsb
sti
mov
xor
aad
mov
insl
test
es
loope
hlt
dec
mov
daa
addr16
cmp
mov
dec
in
cmp
aam
sbb
popf
or
push
push
pop
sahf
divb
shlb
dec
daa
add
inc
push
pop
jns
fdivs
sbb
sub
mov
fcompl
je
dec
mov
aaa
int
push
jb
sub
inc
sahf
sbb
jge
adc
lods
je
xchg
xor
push
cmp
add
dec
movsl
fucomip
out
test
add
sbb
inc
fimuls
out
push
in
sub
lret
insb
add
imul
and
xchg
cs
test
sbb
push
sub
ret
hlt
cmp
xchg
outsb
adc
movsl
ret
jle
loop
test
jnp
sbb
aas
loop
out
fnstcw
aam
mov
dec
loopne
lahf
mov
dec
into
test
jo
loop
rorl
pop
and
push
lods
repnz
xchg
push
dec
mov
dec
loope
mov
imul
and
push
dec
xchg
in
int3
test
jmp
cwtl
or
sub
mov
cmp
push
fsubrp
repnz
fisubl
clc
insl
test
cmpsl
sbb
repnz
sub
inc
rorb
add
sbb
test
lret
scas
scas
inc
icebp
dec
ret
sub
jne
mov
sub
shrb
f2xm1
mov
adc
inc
daa
pop
out
call
or
jns
sbb
mov
mov
jae
test
mov
mov
ret
out
imul
xor
inc
xlat
cmc
pop
hlt
inc
lock
adc
xor
pop
in
lahf
add
out
sbb
test
mov
dec
pusha
insl
pop
out
push
or
mov
movsl
jne
aaa
xor
dec
in
inc
arpl
add
pop
mov
stos
aad
ds
and
push
aad
pushf
dec
cld
or
mov
shrl
mov
fcompl
fwait
inc
jne
lcall
push
icebp
inc
xor
seta
push
cltd
xchg
ss
cmpsl
and
cmp
aas
aam
xchg
mov
cmpsl
xchg
int
jbe
insl
jnp
sub
in
fisubs
xchg
sub
std
pop
lock
stos
aad
stc
ja
and
in
jae
xchg
sub
outsl
cltd
xor
divb
test
xor
jl
mov
mov
les
mov
shl
fmuls
inc
lcall
cwtl
cmp
ss
in
mov
cmpsb
sbb
dec
mov
or
pop
test
ljmp
inc
cmp
push
pushf
in
or
push
loopne
je
and
and
adc
fiadds
xchg
out
aas
xchg
repz
pusha
lds
shrl
fistl
pop
sti
aaa
adc
ja
pop
ja
inc
testl
mov
dec
cmp
ds
enter
add
fnsave
add
or
cmpsb
and
lea
xchg
sbb
arpl
loope
jge
in
mov
je
or
mov
in
xor
xlat
jae
lock
xchg
psrlw
adc
ss
xlat
mov
fnstsw
ds
or
pop
cmp
jnp
xchg
and
inc
out
and
fprem
dec
cmp
imul
mov
jne
xor
push
xchg
mov
xor
mov
insl
push
cmp
sub
jl
testl
sahf
pop
incl
scas
cs
cs
jo
test
inc
lods
sbb
pushf
pop
jbe
pop
xor
jmp
jb
ss
or
xchg
ret
pop
lahf
adc
mov
lods
inc
repz
scas
gs
lods
cmp
xor
xor
cmp
cmc
rorb
loope
pop
xor
addr16
out
sti
enter
xor
xchg
mov
lds
xor
lods
inc
jmp
into
pop
pop
lea
cwtl
jp
mov
adc
mov
aaa
dec
or
xchg
cwtl
imul
xlat
ds
push
lret
push
iret
mov
mov
das
outsb
lahf
and
mov
or
cmp
pop
cmp
pop
in
out
mov
iret
mov
add
adc
and
fldt
mov
sbb
outsl
mov
idivb
sub
loop
or
xor
sbb
mov
loopne
and
arpl
pop
int
push
stos
out
loopne
cwtl
movb
clc
mov
fs
loope
adcl
fbstp
hlt
gs
dec
and
mov
outsl
inc
inc
aam
lods
imul
sbb
cmc
inc
add
sbb
mov
push
dec
jecxz
jge
js
push
jae
sbbl
das
fsubrs
scas
stc
mov
sub
fists
jne
jl
mov
mov
xchg
fisubrs
pop
xchg
sub
mov
xchg
mov
dec
xchg
mov
mov
stos
jns
xor
fmul
jno
cmpsb
xchg
mov
jge
popa
icebp
iret
adc
mov
mov
aad
sub
loope
loope
loopne
cmpsb
mov
stc
leave
xor
mov
sub
cmpsb
int
xchg
mov
xchg
enter
jecxz
js
dec
push
cmp
inc
call
shl
sbb
xchg
add
xor
mov
cvtdq2ps
imul
add
mov
mov
xor
scas
ret
pop
call
test
call
xor
subl
cmp
jnp
repz
and
fcmovnu
lret
cld
ljmp
dec
lret
lock
out
mov
pop
sub
adc
aam
cmp
and
jbe
inc
notl
mov
xor
dec
bound
es
cmp
jl
and
repnz
dec
cld
xchg
cmpl
stc
lret
adc
push
adc
daa
test
mov
xor
jno
movsl
test
and
mov
lea
in
mov
jmp
xchg
xchg
cmpsl
mov
imul
and
mov
scas
lea
sbbl
sahf
call
fmulp
push
xor
ror
xchg
jbe
inc
lcall
out
pop
insb
and
jmp
inc
push
sbb
fildll
pop
and
xchg
dec
loop
dec
loop
in
push
inc
and
xchg
push
in
cmp
dec
shlb
push
xchg
adc
cwtl
mov
mov
sub
sbb
test
loope
xor
sub
fsubrl
sar
jno
notb
mov
jge
stc
sub
pop
pop
or
mov
or
jl
cmc
sub
lea
mov
lahf
mov
roll
hlt
out
mov
into
push
mov
out
vdivpd
dec
fcom
shrl
test
jnp
icebp
clc
test
mov
inc
jno
sub
sbb
add
fcompl
in
mov
mov
enter
push
jp
pop
xchg
fsubrp
lret
lods
push
xchg
add
inc
mov
sti
xchg
inc
out
sti
sbb
jae
or
add
push
fnstsw
iret
call
sub
inc
or
push
int3
pop
or
ds
test
scas
arpl
jae
sarb
inc
mov
subb
imul
loope
push
xchg
jp
scas
in
cmp
notb
in
lea
push
nop
or
pop
mov
cmp
add
jne
dec
stc
add
ja
sub
add
dec
mov
into
jp
push
pop
mov
cltd
cmp
mov
fdivr
adcb
or
pusha
pusha
daa
mov
sbbl
xchg
xchg
mov
les
clc
aad
xchg
mov
cld
xor
push
xlat
std
mov
jmp
scas
out
xlat
test
xor
addb
sbb
cmc
cld
in
pop
repz
fnsave
ret
call
loope
sbb
lea
sub
and
xchg
push
jg
cs
pop
pusha
leave
lock
cli
lods
stos
sbb
insb
mov
lock
pop
imul
pop
jmp
cmp
repz
mov
in
add
pop
ss
out
out
andl
arpl
or
push
cld
sub
sbb
outsl
push
mov
pop
jecxz
add
mov
insl
pushf
sub
out
and
xor
mov
ficomps
nop
add
cli
xor
test
dec
mov
push
int3
push
sub
jb
dec
sbb
inc
cmp
outsl
pop
sbb
cwtl
clc
neg
sbb
pop
push
cs
movsl
pusha
popf
lcall
xchg
jne
or
data16
sub
xor
jmp
insb
jle
or
fidivl
mov
cli
pop
mov
testl
push
repz
cmp
cli
dec
les
sbb
in
sub
rol
pop
hlt
loop
cld
pop
es
mov
and
insl
adc
hlt
push
lret
jo
or
mov
dec
lods
dec
inc
lods
xlat
inc
lahf
stos
xorb
ljmp
fwait
xor
scas
setnp
ljmp
jns
rcrb
or
push
int3
pop
cmp
roll
loope
repz
push
aaa
push
negb
or
sub
mov
cs
fsubs
jp
sub
sub
rcr
lahf
pushf
mov
jbe
pop
test
sub
adc
pop
in
xor
or
push
sub
sbb
sub
xchg
mov
inc
sbb
xor
adc
mov
adc
push
movsb
call
insb
sbb
dec
xlat
cltd
mov
jl
inc
in
cli
pop
add
xlat
stos
insb
jg
push
mov
adc
xor
fldl
aad
scas
pusha
ret
lock
cmp
mov
xchg
sbb
popa
and
call
dec
mov
test
in
icebp
movsl
mov
gs
lret
inc
mov
cli
dec
mov
push
jns
pusha
out
daa
mov
xor
sbb
inc
sub
and
and
xor
xchg
mov
and
lahf
pop
jo
mov
test
rcl
bound
outsl
push
shlb
testb
ret
std
popf
imul
cmp
or
mov
cmp
jmp
sub
movsl
xchg
in
shrl
mov
loopew
cltd
iret
jl
jecxz
lock
adc
xor
lds
cld
and
iret
gs
xorps
push
lcall
movsb
lahf
sub
add
sub
xor
lea
outsb
jb
mov
pop
nop
mov
popf
cmp
mov
push
pop
dec
mov
adc
mov
push
fprem
mov
or
and
jnp
jo
xchg
push
in
das
shrb
or
sbb
add
cmc
aad
xor
lods
cs
jne
adc
inc
stos
mov
xchg
mov
and
jne
ljmp
aas
mov
push
addr16
lcall
mov
sbb
push
dec
push
ds
fildll
and
pop
xor
jns
mov
jo
repz
jmp
cmp
lret
dec
outsl
pop
add
sbb
ret
leave
sub
push
cmp
ljmp
pop
dec
ss
ja
sbb
ds
pop
jb
sub
fimuls
jno
ss
and
imul
popf
in
jns
cmpsb
dec
jge
aad
orl
push
jbe
pop
push
pushf
add
lds
lods
sbb
bound
mov
xchg
adcl
cs
push
mov
jae
xchg
mov
roll
enter
mov
inc
fisubrl
jbe
xchg
pop
jne
and
out
sub
push
aam
xchg
fwait
jge
mov
xchg
fistps
jmp
dec
ret
loopne
cmp
cwtl
lahf
jnp
push
lods
icebp
scas
lods
lcall
cmc
fsubs
mov
repz
jns
in
and
jbe
int3
insb
adc
ret
cwtl
dec
add
test
xchg
icebp
nop
in
dec
cltd
push
lret
subb
and
sub
cmp
cwtl
xor
dec
idivl
test
adc
add
lock
adc
push
xchg
mov
xchg
or
in
xchg
sub
stc
cmp
xchg
leave
lods
mov
outsb
pcmpeqw
xorb
mov
mov
push
xchg
scas
gs
pop
rcrb
mov
pop
repnz
mov
mov
test
roll
shl
xchg
push
lcall
and
inc
addr16
mov
add
cmp
movsl
pushf
and
jle
sarb
in
stos
fisubl
jo
ja
std
mov
adc
gs
mov
dec
int3
mov
cltd
or
or
xchg
mov
push
and
mov
shr
test
push
fimull
popa
adc
int
aaa
xchg
mov
dec
dec
dec
cmp
sbb
jae
adc
into
addl
testb
test
pop
ja
cld
aad
cs
call
cld
andl
mov
lods
mov
cwtl
jg
or
test
mov
inc
dec
or
jle
imul
inc
shrl
lods
jo
shrl
xchg
test
add
cli
flds
cmp
push
xlat
rcrb
push
cltd
icebp
pop
out
outsb
adc
lods
jg
lods
mov
cmp
out
mov
ss
inc
xchg
fwait
stos
mov
pop
fs
lret
push
pop
shl
fbstp
cwtl
jns
nop
les
mov
pop
lods
stc
and
es
sub
les
dec
loop
adc
icebp
or
iret
push
ja
data16
mov
inc
xchg
mov
js
xchg
stos
leave
xchg
inc
jo
sbb
pop
mov
lods
push
xlat
test
std
jge
callw
clc
test
add
push
mov
push
cltd
sub
bound
and
mov
ret
pop
test
inc
pop
les
fimull
sarb
dec
loop
stc
std
jno
cmpsl
sub
fsubr
dec
push
push
orl
pop
aas
iret
lods
bound
popa
loope
cmp
rolb
jbe
sahf
popa
push
sbbb
and
outsl
xchg
scas
and
jge
jp
mov
sarl
pop
inc
mov
xor
enter
dec
push
mov
pop
pop
inc
lcall
mov
sbb
sub
mov
mov
pop
cmc
gs
mov
mov
ret
and
aad
lcall
push
jo
cmpsl
popa
jle
movsb
je
in
sub
lods
dec
in
cmpsl
lds
and
push
mov
testl
repnz
cmp
add
push
scas
stc
sti
jle
lock
stc
adc
adc
out
or
les
xchg
ja
shrb
mov
dec
scas
cmp
cmp
cs
xchg
sub
in
jb
les
inc
shl
mov
cltd
push
movsb
frstor
xchg
into
xor
fs
mov
and
imul
jbe
std
daa
sti
pop
cmp
dec
jb
or
loope
clc
sub
leave
adc
insb
int3
decb
pop
shll
stos
sbb
rolb
fisubrs
sbb
scas
rcrb
dec
xchg
push
fs
xchg
mov
inc
das
cmc
pop
test
pop
shrl
enter
or
mov
fucomip
adc
add
test
mov
pushf
out
fwait
sahf
jmp
cmpsl
lods
xchg
mov
push
inc
dec
cmc
dec
cwtl
jl
sub
or
and
push
data16
push
test
add
jmp
add
mov
js
mov
in
andl
and
stos
popf
das
addr16
leave
scas
cmp
sbb
cmp
cs
fs
pop
dec
in
cmp
popa
in
adc
mov
xor
hlt
dec
dec
and
sbbb
outsl
lret
enter
push
sub
cmpsb
mov
dec
lea
mov
mov
test
inc
lock
loope
loop
or
push
inc
insb
inc
xchg
invd
scas
dec
mov
jb
lahf
lea
out
push
faddl
fwait
test
scas
dec
stos
lods
repz
cmp
push
sub
movsl
add
xor
push
ljmp
xchg
xor
popa
mov
inc
pusha
aas
add
aas
adc
add
pusha
mov
inc
push
shlb
in
data16
add
mov
pusha
lds
push
push
into
fisubs
inc
inc
or
jne
sbb
inc
dec
jae
jnp
xchg
xchg
dec
or
sub
je
mov
inc
popf
pop
push
test
sbb
mov
fnstsw
stos
scas
aas
testl
add
jp
and
in
popa
xchg
cmp
mov
dec
push
insb
aam
bound
std
cmp
ret
mov
andb
pop
in
sbb
dec
test
pop
dec
sbb
test
sub
es
pushf
cmc
cmp
sti
lods
mov
xor
pop
xchg
push
ret
mov
mov
sbb
ds
loop
ds
pop
imul
inc
cltd
into
gs
js
jl
xchg
insl
test
jnp
xchg
push
pop
movsb
mov
out
jo
and
adc
inc
adc
pop
mov
dec
nop
push
out
aaa
lret
aam
mov
push
ss
pop
rorb
cmpsl
dec
adc
cli
outsl
and
xchg
leave
inc
mov
inc
mov
sbb
add
orl
adc
lods
sub
fyl2x
hlt
notb
sbb
sub
iret
jb
repnz
pop
lods
pop
stc
nop
mov
pop
movsl
mov
pop
xor
cmp
repz
push
in
int3
jne
ficoml
mov
mov
mov
les
sbbb
pop
inc
stc
jmp
outsl
jecxz
ljmp
mov
jmp
aam
cmpl
or
xchg
and
cmpsb
stc
pop
dec
fwait
xor
adc
add
ja
nop
sti
pop
pop
repnz
mov
xchg
cld
xchg
ret
cmp
data16
mov
hlt
ss
gs
sbb
push
into
fdivs
data16
mov
pop
fs
loop
dec
stos
lods
ds
or
js
mov
cmpsb
add
push
pop
xorb
push
mov
aaa
pushl
jmp
xor
mov
push
ljmp
jb
das
cmp
arpl
icebp
fsts
fldl
sbb
rep
and
leave
idivb
sbb
ds
push
ret
adc
inc
sub
xor
ds
add
adc
mov
das
les
jmp
sahf
ja
jns
cmp
mov
pusha
jae
insl
mov
cltd
subb
iret
jecxz
loope
fmulp
adc
dec
xchg
iret
mov
inc
inc
jb
cli
arpl
and
cmp
stos
mov
lock
jne
shlb
adc
push
iret
mov
xchg
adc
sti
loopne
dec
mov
into
gs
outsb
inc
xchg
mov
or
inc
sarl
add
leave
cmp
bnd
xchg
add
mov
and
cmp
xor
xor
push
outsl
push
xchg
cmp
cmp
xchg
push
test
lods
dec
cmc
sub
jle
or
clc
pop
loop
lahf
or
inc
xchg
imul
push
int
out
xchg
daa
filds
add
es
mov
sub
fwait
enter
insb
jmp
mov
test
mov
das
addb
push
pop
decb
out
push
sbb
rcrl
out
lret
addr16
cmp
push
loopne
outsb
popf
jnp
daa
lods
lods
pop
lock
and
xor
test
sbb
inc
or
pop
test
ja
popf
arpl
aad
aaa
xor
push
popa
in
lahf
fs
inc
clc
addl
imul
mov
cmp
mov
xchg
pop
cmp
sbb
dec
je
jle
pop
inc
add
xchg
mov
jecxz
loop
push
imul
pop
mov
icebp
mov
pop
mov
cltd
and
test
add
daa
jne
and
add
sub
fnsave
stos
loope
aad
mov
out
std
xor
test
mov
xchg
jns
xor
ret
daa
mov
push
push
repz
xor
lock
mov
push
xor
arpl
push
xlat
mov
in
ret
insb
mov
fcomip
mov
out
jecxz
mov
mov
lock
sbb
shlb
sub
int3
cld
shrl
mov
mov
push
jl
xchg
cmpsb
cmc
mov
xchg
and
pop
mov
mov
pop
mov
adc
jmp
insl
mov
jnp
adc
cwtl
lret
xchg
dec
nop
cmpsl
fs
mov
mov
aad
xor
cmp
cmpsl
cmp
add
mov
movsb
in
test
jmp
and
cmpsb
mov
inc
test
ljmp
mov
jns
repz
sub
jbe
shrl
roll
sti
cmc
mov
push
aaa
cltd
dec
xchg
out
and
std
icebp
dec
or
inc
or
lock
pop
add
sub
sahf
add
out
xor
hlt
jg
jl
pop
sub
cwtl
in
rcrl
adc
cmpsb
pop
cli
mov
sub
pop
lock
inc
xchg
xorl
rol
mov
or
mov
mov
lods
aad
notl
push
imulb
in
dec
cmp
push
cmp
loope
notb
or
sbb
inc
jge
cmp
adc
or
ret
in
pop
xor
insl
shll
stos
cmp
fldln2
lret
loopne
add
inc
mov
mov
mov
stos
cmp
sarb
and
mov
inc
in
mov
pmaxsw
mov
cmp
in
cmp
pop
lds
adc
lret
mov
or
dec
outsl
mov
mov
cmp
mov
pop
sbb
xchg
in
out
cmpsl
popa
mov
pusha
rclb
mov
popf
test
xor
inc
cmpsb
cmp
pop
jg
adc
roll
add
sub
cmpsb
fadds
call
test
inc
push
shll
arpl
imul
daa
cs
bound
sbb
mov
push
lret
lock
xchg
jle
les
add
xor
aas
xchg
fucomi
arpl
cld
pop
subb
jl
into
mov
push
outsb
cmp
neg
mov
jge
das
jl
xchg
in
ljmp
jno
xlat
mov
xchg
call
sahf
lds
pop
push
sub
insl
sti
aaa
fmulp
gs
hlt
cmp
add
jno
add
imul
add
sbb
xchg
lahf
add
aam
repnz
mov
movsl
mov
add
mov
push
in
xor
pop
lods
inc
aam
leave
movsb
cld
push
lods
ss
pop
in
test
aam
icebp
xchg
sti
insb
xor
jnp
cmp
pop
dec
mov
sti
xchg
sub
cmp
add
xlat
jecxz
pop
xchg
push
in
xor
lods
inc
fsubs
add
push
lods
xor
hlt
cmp
pop
in
test
jmp
orl
pop
sub
cmpsb
idiv
xchg
sub
adc
insl
stc
inc
das
push
addb
add
pop
fildl
jle
stc
movsb
fs
inc
push
or
sbb
sub
dec
pop
push
hlt
mov
fildl
cmp
inc
fldcw
insb
neg
mov
in
mov
addr16
or
pop
dec
in
ds
addr16
cmp
fimull
mov
into
daa
mov
pop
mov
xchg
mov
int
jae
push
mov
fimull
add
jge
xchg
sub
jb
pop
mov
mov
into
dec
jecxz
pop
sub
fisttpl
lahf
pusha
or
icebp
ds
mov
jb
gs
shll
adc
ret
cmp
ja
cmpsl
xor
inc
mov
mov
inc
scas
add
sbbl
test
and
movsb
hlt
out
fdiv
push
or
jnp
sub
aad
mov
jl
pop
jae
in
ret
sti
sub
cmpsb
andb
cmc
out
das
outsb
test
jg
xor
sub
cmp
lret
pop
test
cmp
dec
les
repz
clc
or
fwait
xor
repz
lret
loop
cmp
mov
out
outsb
jle
pop
xor
mov
pop
sahf
mov
mov
pop
cltd
in
xchg
jno
or
dec
pop
movsb
xchg
mov
cmp
jb
xchg
sub
mov
cmpsb
ja
cltd
lcall
imul
mov
sbb
dec
dec
insl
fistl
ret
test
in
push
test
dec
or
push
push
outsb
pmulhuw
hlt
push
in
and
ds
jae
test
or
faddl
and
nop
ljmp
jecxz
xor
and
sub
pop
pop
hlt
inc
icebp
lret
adc
stos
pop
sub
mov
lods
fstpl
xchg
les
cmp
jno
add
mov
sbb
cli
mov
cmp
mov
ret
les
mov
fxch
and
lea
imulb
popf
push
sbb
dec
aas
xor
insb
loop
mov
mov
test
out
and
sbb
adc
jle
jne
outsl
pop
repz
aam
aam
stos
testl
cmp
xchg
cmp
ret
add
sub
dec
pop
cmp
cmp
gs
jno
inc
inc
in
ljmp
das
push
aaa
sub
je
mov
rorb
push
test
int3
push
icebp
xchg
lret
mov
shlb
pop
aaa
mov
mov
lcall
scas
adc
jl
pop
xor
dec
test
stc
arpl
sbb
mov
mov
andb
push
mov
mov
xchg
mov
adc
iret
data16
cmp
dec
fisttps
scas
inc
fsubp
sub
pop
add
shlb
shrl
push
pop
xchg
sbb
jmp
aam
inc
in
pop
pop
sahf
sbb
mov
aam
subb
lahf
sahf
sbb
mov
popa
pop
nop
movsl
sbb
lahf
adc
pop
scas
add
mov
jb
mov
cmp
jecxz
repnz
push
cli
pushf
xchg
pop
mov
pop
dec
add
sbb
jecxz
daa
in
jo
inc
sbbb
and
repz
add
pop
lods
cmp
out
leave
xchg
mov
or
call
inc
and
enter
sbb
into
jp
sub
jae
sub
xchg
mov
jo
cmp
or
mov
dec
inc
jp
cmpb
adc
in
in
dec
cmpsb
xchg
test
or
jnp
mov
inc
fs
add
aad
add
adc
dec
mov
sbb
xchg
cmp
lret
adc
xor
ds
and
lods
int
stos
inc
cmpsl
out
lea
fnstcw
sbb
sti
scas
sbb
ror
xchg
inc
sbb
mov
fdivrp
and
loope
sbbl
clc
mov
mov
and
repz
cmc
jns
decl
pop
insl
mov
adc
jo
or
les
sub
movsb
sbb
push
mov
jo
outsl
cmp
fisttps
inc
sahf
out
popa
clc
pop
push
es
aad
shl
lahf
add
rclb
pop
cwtl
subb
mov
push
int
test
push
cmpsb
xor
in
mulb
inc
push
lock
sbb
mov
cmpsl
or
subl
xchg
and
outsl
sbb
sub
imul
icebp
shlb
leave
call
js
popf
test
je
mov
stc
movsl
dec
insb
in
sbb
scas
es
inc
push
inc
inc
sub
xchg
pop
mov
add
pop
test
dec
sbb
jae
dec
loop
dec
xchg
sahf
pusha
lock
mov
add
pop
xchg
push
aam
cmp
push
and
std
aaa
inc
adc
push
int3
or
aam
sti
movsb
call
adc
popa
sbb
insb
bound
xchg
jae
mov
dec
jnp
je
aad
cmc
je
mov
add
insl
insl
lahf
adc
adc
dec
push
xorl
out
andb
xor
mov
adcl
mov
cmp
testl
cld
xchg
mov
nop
lock
cltd
dec
js
adc
sbb
dec
sub
notb
lods
mov
mov
mov
loopne
arpl
shll
repnz
es
daa
lock
sbb
push
xchg
sbb
in
ficomps
hlt
xchg
push
push
sub
shr
cmp
pusha
mov
sub
add
mov
push
cmc
sbb
ljmp
sub
dec
loope
mov
xor
outsl
sbb
xchg
hlt
popf
fiaddl
lock
mov
divb
movsl
lds
or
push
lea
mov
dec
add
mov
cmpsl
rep
jmp
pop
push
std
ljmp
loope
inc
push
xlat
add
lahf
in
lock
xor
fstpt
or
cmp
inc
sbb
sub
dec
mov
pop
test
mov
push
or
mov
imul
jmp
sub
stos
jmp
dec
inc
fistps
jg
repnz
mov
movq
cmc
mov
mov
clc
fildll
arpl
and
add
iret
shll
add
ja
dec
jecxz
repz
ds
lea
scas
jbe
loopne
and
push
mov
out
leave
lahf
outsb
xchg
lea
or
or
bound
pusha
xlat
jae
push
je
mov
mov
dec
das
ret
lods
andl
pop
cmc
mov
pop
xlat
push
xor
cmp
push
mov
mov
mov
scas
inc
inc
mov
mov
dec
loopne
xor
test
rolb
je
jnp
mov
cli
mov
pop
mov
jecxz
mov
pop
cmp
xchg
sub
rcr
cmp
and
movsb
pop
dec
xchg
das
mov
add
fidivs
scas
or
jle
xor
jge
pop
out
rcr
and
or
call
in
xchg
dec
push
xchg
inc
fcmovne
int
pusha
xchg
adc
into
pop
call
adc
test
adc
movsl
outsb
sbb
sti
out
movsb
lret
paddusw
push
imul
mov
pop
mov
lahf
stos
in
mov
xor
push
jne
out
inc
inc
dec
fdivs
push
push
imul
push
ret
pop
pushf
lock
mov
jge
les
push
cwtl
dec
out
inc
adc
das
inc
add
test
test
xor
push
inc
nop
mov
fistpll
stos
pusha
dec
insb
out
mov
loope
js
in
lods
aaa
push
je
ret
jne
cmpsl
and
cltd
test
pop
mov
rorb
sbb
leave
int3
jle
test
sbbb
mov
imul
or
mov
mov
fdivl
fisubl
xchg
out
aas
inc
sbb
dec
dec
movsl
adc
aas
pop
call
mov
inc
adc
cmp
push
xor
mov
fadds
xchg
and
je
cmpsl
rolb
lods
jo
pop
xchg
rolb
or
mov
sahf
orb
fs
in
mov
or
repnz
push
loop
and
aaa
stos
repnz
push
in
sbb
int3
outsl
pop
mov
push
mov
mov
aam
mov
pop
mov
outsl
adc
stos
pop
push
test
xchg
stos
sbb
outsb
xor
addr16
add
ds
xor
stos
adc
and
out
ss
xor
insb
and
pop
adc
ss
out
ljmp
and
lcall
mov
add
mov
lock
andb
push
mov
pop
push
mov
push
test
test
inc
sbb
int3
or
rsqrtps
rcrb
mov
or
mov
das
push
mov
jl
rcll
das
adc
jmp
orb
adc
add
adc
decb
cli
bound
sbb
imul
cmp
iret
jp
fstpl
lods
pop
jmp
mov
enter
ret
ss
pushf
xor
push
jo
xchg
xchg
mov
movsb
cmp
pop
aam
loopne
push
or
insb
ds
pushf
pop
jle
aam
loope
sub
add
mov
jl
ret
mov
lods
repnz
add
cmpsb
cmpb
xchg
sti
xchg
adc
add
push
sahf
mov
cwtl
lea
mov
call
or
in
aaa
pop
lods
inc
lods
mov
push
out
lret
gs
out
cmp
cmp
and
loop
rcll
add
fs
imul
push
mov
in
adcl
rcr
or
mov
mov
sahf
mov
lock
sub
rcrl
mov
sub
stos
fldenv
or
dec
and
sti
aaa
xchg
mov
negl
ds
test
xlat
mov
or
mov
inc
xchg
mov
sahf
mov
pushf
and
or
loope
cltd
aad
fwait
pop
mov
in
jecxz
cmpsb
mov
and
jmp
cmc
test
sbb
lds
and
insb
dec
pop
mov
pop
cmp
pop
sub
or
add
mov
into
jne
add
sub
popa
jmp
dec
sbb
ret
jbe
mov
xchg
lcall
mov
hlt
push
dec
lods
rolb
popa
mov
sbbb
data16
test
pusha
or
mov
std
ja
pusha
clc
cwtl
shl
mov
js
mov
out
jle
int3
sbb
in
aaa
rcl
dec
repz
mov
adc
aad
dec
and
in
adc
in
pushf
popa
sub
pushf
xor
hlt
mov
push
mov
movsb
bound
xchg
lds
jg
push
cmp
xor
negl
stos
jge
dec
jmp
mov
adcl
sbb
cmp
push
add
xchg
sub
push
sbbb
cmp
lcall
cmp
sbb
lds
push
fsubrs
add
sbb
xchg
idivb
out
jno
adc
sub
inc
push
jge
mov
mov
mov
fnstsw
adc
int
sub
into
fsubl
and
xchg
scas
neg
xor
push
dec
fs
fcoml
mov
int
lds
or
test
test
inc
rol
xchg
das
inc
or
or
repnz
test
clc
popf
addr16
iret
sbb
std
cwtl
cmc
in
cmpl
lods
in
out
pop
jge
mov
inc
push
mov
jmp
jo
lods
jmp
clc
mov
jp
xchg
test
dec
dec
js
jns
xor
pop
mov
out
cmp
fimuls
lret
xchg
sub
adc
xchg
ds
int
sbb
enter
lret
shlb
sbb
add
or
push
pushf
scas
push
jmp
cmp
test
inc
insl
inc
mov
dec
mov
sarl
cmp
mov
adc
rorl
jae
and
jg
fs
push
pop
adc
aam
add
sbb
mov
or
insl
sub
mov
inc
xchg
cmpsl
daa
sub
inc
push
mov
aas
pop
push
jl
and
xchg
xchg
cmp
aad
jns
fsts
cmpsl
rol
xchg
std
popa
test
mov
aam
cs
shl
mov
dec
dec
cmpsl
out
sti
in
or
mov
imul
mov
addr16
pop
cltd
scas
ret
into
pop
xor
add
mov
fimull
cmp
outsl
lret
out
adc
or
cmp
xchg
imul
jp
ds
in
mov
xor
lds
mov
xor
insl
lret
and
jmp
lock
push
rcll
gs
sub
std
test
out
fucomi
shl
xchg
lods
shll
loop
cmp
mov
inc
pop
xchg
hlt
or
arpl
loope
lret
in
push
cwtl
ss
in
popl
pop
addr16
and
jmp
es
and
sub
and
and
add
jne
imul
jl
xchg
inc
jne
js
and
lds
xchg
mov
xor
test
aaa
into
loop
jle
add
fstl
mov
mov
mov
or
call
xor
cmc
rclb
xchg
push
das
xchg
add
in
mov
aam
fldt
mov
scas
inc
mov
fwait
cld
add
xchg
ss
or
jo
sbb
scas
cmp
insl
out
sub
popf
mov
les
cmpsb
xchg
out
cmpsl
adc
lock
daa
popa
or
add
inc
xor
popa
ja
leave
cmp
rol
xchg
sbb
mov
test
repnz
sbb
ja
push
jns
lds
stos
mov
mov
dec
loop
stos
mov
mov
lock
inc
cmpb
popf
les
aaa
daa
or
jne
sbb
data16
ret
adc
decl
cmc
sub
mov
push
test
xchg
dec
test
out
popa
inc
stos
stos
xlat
repz
adc
mov
mov
sub
pop
stc
sarb
sub
and
sbb
mov
jno
cmc
inc
and
and
add
mov
push
push
jb
xchg
call
pop
push
inc
pop
inc
mov
and
popaw
mov
iret
aaa
and
lock
cli
test
out
mov
mov
pop
mov
bnd
add
test
add
xchg
sub
insl
fldenv
mov
cs
jno
dec
or
imul
sbb
js
in
xchg
jecxz
xor
dec
fsubs
mul
movsb
xor
jmp
imull
ror
sbb
push
call
test
into
loop
mov
sbb
sahf
jg
lods
mov
addr16
cmpl
pop
and
out
jnp
pop
xor
aaa
in
xor
mov
add
dec
and
sub
xlat
sti
je
push
push
aam
test
jns
test
mov
push
or
lcall
push
sub
push
outsl
icebp
outsb
sahf
dec
mov
inc
jge
out
hlt
das
and
and
rorl
bound
mov
pop
mov
loope
push
dec
add
push
mov
jae
fsubrs
xor
pop
hlt
bound
sbb
andl
jne
adc
push
add
and
mov
loopew
xchg
pop
jae,pn
xchg
cld
dec
jns
sub
das
mov
fisubrl
cmp
xlat
sub
mov
and
xchg
iret
popf
ret
test
pop
loopne
push
adc
and
and
dec
push
aad
rorb
daa
mov
test
push
mov
out
jo
cmpl
mov
clc
push
mov
loop
in
movsb
jecxz
pop
push
popa
call
xor
daa
fs
and
jbe
les
xor
adc
add
cwtl
je
enter
lcall
popf
ret
sti
xor
xchg
sbb
xor
in
or
cmp
in
out
or
mov
pop
push
das
imul
cmp
out
lea
fwait
shrb
jno
push
push
arpl
push
incb
js
movsb
ds
arpl
sbb
mov
or
mov
pusha
adc
lods
pusha
push
in
test
add
or
andb
scas
jne
sar
mov
mov
insl
ljmp
lds
jp
add
dec
and
cmp
jge
sti
sbb
andb
adc
ret
jp
pop
sbb
jno
and
pop
lahf
imul
cmpsl
pop
pop
rcl
fmulp
iret
cmpsb
pop
repz
jmp
xchg
inc
stos
add
lods
out
shll
dec
imul
popf
or
xchg
mov
jmp
sbb
and
lcall
scas
push
mov
jg
rol
pop
call
ret
leave
add
fists
xor
out
adcb
and
cmpsb
out
mov
hlt
cmp
push
push
xor
sbb
popf
and
mov
xchg
scas
mov
hlt
pop
add
cmp
dec
cmp
negb
fadds
xchg
push
ds
lods
pop
mov
fldt
push
jno
cmpsb
xchg
xchg
int3
fidivs
mov
fists
xchg
mov
or
sub
push
cmp
push
mov
push
lret
xchg
imul
aam
popa
xchg
arpl
bound
jne
pop
divb
gs
jo
pusha
clc
or
dec
mov
jp
push
in
xchg
xlat
icebp
adc
mov
jne
and
notl
clc
jecxz
jge
scas
rorl
loope
push
out
add
inc
sahf
movsl
cmp
jbe
test
leave
or
jae
clc
inc
adc
inc
shr
pop
fisubrl
test
mov
lret
xchg
add
and
sbbl
call
xchg
mov
icebp
jle
push
testb
mov
ljmp
push
in
and
jl
push
pop
add
test
sub
rorb
cmp
push
ja
fcomps
pop
mov
mov
mov
fucomp
adc
out
pop
sub
fisubs
in
add
inc
sbb
movsb
cwtl
push
leave
adc
js
xchg
addr16
aaa
movsl
shl
movsl
pop
jl
out
mov
lret
cmp
push
mov
bound
mov
hlt
ds
adc
cmpsb
imul
adc
mov
js
sbb
fbld
or
dec
addr16
addr16
and
mov
fs
cmpsb
mov
xchg
add
add
or
xchg
sbb
ret
mov
mov
xor
fistl
pop
icebp
mov
mov
push
jno
imul
mov
cli
or
pushf
mov
xchg
ljmp
sbb
popa
into
addr16
sbb
fwait
push
mov
out
lods
jmp
pusha
adc
fisubrl
sbb
add
adc
ss
mov
shrl
push
pusha
jmp
sbb
lret
jg
in
call
dec
stos
mov
ret
pop
adc
js
pop
pop
repnz
xlat
jns
aad
mov
lahf
mov
stc
nop
or
cmp
fimull
mov
cld
inc
inc
negl
inc
cmpl
inc
pusha
add
sub
dec
pop
scas
add
push
push
and
jns
inc
lods
mov
sti
push
jl
xor
sbb
icebp
incl
xor
mov
lret
lods
std
xor
je
mov
adc
clc
push
mov
dec
push
jbe
push
lea
jae
inc
or
cwtl
push
xor
jge
push
push
or
cs
fcmovnu
and
fstpl
adc
cmpsl
notl
int
movsb
ja
pop
sbb
nop
pop
jbe
and
out
in
std
jo
cmp
imul
cli
movsb
das
cmpsl
dec
push
mov
fadd
push
mov
or
ds
push
movsb
or
loop
sub
mov
sbb
iret
pop
sbb
sbb
pop
sub
faddl
add
daa
out
inc
loop
js
jbe
scas
jge
add
adc
test
sub
enter
sti
fs
loope
hlt
dec
hlt
and
inc
aaa
into
xor
xchg
cld
inc
into
push
sbb
es
sub
mov
dec
adc
cmp
push
leave
pop
mov
jecxz
sub
xlat
jle
das
add
push
jmp
push
mov
inc
cltd
xchg
or
sbb
mov
jno
fs
imul
ret
mov
sub
or
jae
out
pop
dec
js
jmp
outsb
mov
decb
cmp
and
daa
pop
mov
adc
sbb
lret
sarb
movsl
clc
mov
adc
fnstsw
push
sbbb
mov
sub
jnp
repnz
pushl
ss
and
inc
cmp
jecxz
repz
in
xchg
jecxz
xchg
out
add
mov
out
add
jl
sub
lcall
repnz
roll
addr16
je
stc
in
jmp
jno
cmp
les
in
cli
pop
mov
sbb
lcall
inc
or
cld
mov
iret
iret
sub
adc
sub
xor
pop
jb
push
scas
dec
dec
iret
jno
leave
mov
and
iret
pop
adc
imul
stos
loop
sti
mov
fdivrs
ja
in
add
pop
fnstsw
inc
mov
jnp
in
in
pusha
adc
adc
adc
cmpsb
cli
test
add
test
sub
mov
bnd
out
in
add
push
add
andl
sub
cs
movsb
jle
mov
dec
jmp
std
or
mov
push
push
popa
roll
add
and
pop
testb
pop
adc
orl
mov
movsb
xor
and
jno
mov
inc
mov
mov
popa
lds
mov
or
aad
mov
or
mov
pushl
lods
inc
fisttpll
mov
data16
sbb
icebp
sbb
cmp
or
lahf
xchg
jnp
shll
addw
nop
vfnmaddpd
stos
loop
jne
lock
lret
push
out
push
mov
pop
cmpsb
aaa
sbb
sbb
mov
and
or
repz
out
ljmp
fmul
fmull
pop
arpl
xchg
stos
xchg
mov
es
sahf
insl
cmp
ja
mov
xor
pop
lret
lahf
mov
fwait
and
adc
lret
push
mov
push
call
bound
and
lods
in
xchg
nop
imul
sub
fs
movsl
cwtl
adc
std
das
stos
dec
loope
push
cs
cwtl
adc
mov
xor
sbb
shrl
sbb
mov
fsubr
mov
sti
cmpsb
cmpsl
out
inc
in
push
mov
xchg
pusha
stos
dec
adc
jecxz
jno
cmpsb
xor
xchg
data16
lock
mov
push
jp
test
cmp
rolb
add
jnp
xorb
sbb
ss
xchg
xchg
jecxz
jbe
mov
cmp
pop
insl
or
lds
insb
out
fsubrs
lcall
xor
sti
xchg
cmp
leave
or
cwtl
mov
incb
fcomps
cmpsb
sub
bound
and
sub
imul
inc
mov
repnz
xchg
sub
int3
mov
inc
add
mov
push
jge
sbb
adc
mov
sub
sahf
imul
test
into
aam
imul
cmpsl
inc
das
pop
sbbl
fdivrs
sub
repnz
jmp
adc
rcrb
push
pop
sbb
dec
push
sub
mov
push
jne
sub
ror
push
fiaddl
das
pop
stos
inc
pop
dec
and
popf
cmp
int3
mov
dec
movsl
cmp
popl
push
fnstenv
sub
or
outsl
loope
cmpsb
addr16
mov
push
cmpsb
outsb
sahf
stc
xchg
dec
mov
aam
aaa
dec
loop
dec
push
rcrb
shll
out
cmpsl
push
cwtl
jg
lret
push
xchg
out
cmpsl
push
cltd
cltd
xor
aam
int3
adc
inc
in
repnz
inc
fistps
xchg
enter
dec
mov
inc
sub
test
or
je
jnp
sbb
aaa
into
mov
les
insl
push
cmp
inc
or
xchg
sub
lahf
inc
push
xchg
push
pop
repz
stc
mov
les
popf
lds
mov
jl
fs
xchg
popf
rol
xchg
mov
xlat
test
sub
push
sbb
or
cmp
jge
mov
mov
jmp
ret
shrb
fwait
dec
loope
pop
shl
aad
es
loop
cmp
sbb
mov
cltd
xor
aad
pop
pop
push
in
dec
out
push
fdiv
scas
inc
sub
movsl
icebp
testl
mov
loopne
jl
push
sbb
fdivrp
jle
xor
into
enter
or
into
jae
rcrl
add
aas
hlt
je
out
mov
add
sub
ss
pop
repnz
xchg
mov
sub
data16
push
int
aas
pushl
adc
jle
testb
out
stos
sbb
scas
inc
sub
push
in
dec
pop
xchg
sub
mov
dec
loop
ds
cmp
pop
mov
cmc
shlb
xor
bound
nop
stos
repnz
mov
ret
loop
adc
jb
lds
scas
dec
jecxz
or
fiadds
loopne
je
or
shl
sub
cli
adc
inc
es
loopne
jb
mov
les
cmc
cs
hlt
pop
sub
pop
outsb
mov
dec
add
fnsave
aad
push
adc
addl
push
out
mov
outsb
add
cmp
icebp
xchg
sub
mov
mov
jb
iret
inc
xchg
pusha
xlat
insl
or
call
add
outsb
add
add
mov
ljmp
movsb
cmp
addr16
icebp
jmp
and
or
inc
sbbl
mov
insl
add
sarl
rolb
mov
pop
sub
and
aam
dec
push
mov
shrl
or
ja
adc
and
jo
jb
xor
aas
xchg
jne
fcomp
jae
inc
cld
xchg
jne
adc
mov
xor
mov
sub
add
es
add
cwtl
das
add
ds
push
cmp
dec
and
jne
shrl
rolb
mov
negb
push
movsl
dec
sub
test
xor
add
xchg
repnz
xchg
dec
sub
or
ret
repz
jno
sub
pop
or
pop
jecxz
inc
daa
inc
fistl
sub
psrlw
cltd
inc
pop
sbb
sub
adc
jle
pop
mov
dec
push
ficoms
inc
push
mov
mov
loopne
lret
testl
pop
popa
stos
inc
xchg
daa
jne
push
mov
push
in
repz
int
enter
movsb
lea
pop
dec
lods
testl
ss
clc
push
shlb
sbb
test
mov
movsl
cmc
mov
and
dec
out
inc
stos
inc
jb
insb
add
enter
sub
sbbl
test
push
push
subl
pusha
xchg
rclb
jge
jmp
cmp
out
mov
in
mov
imul
into
mov
mov
and
pushf
in
sarl
aam
ja
out
insb
movsb
mov
xor
dec
mov
les
js
loope
sti
xchg
cmc
ss
in
data16
fs
mov
and
idivb
mov
insl
and
rcrb
cltd
jmp
adc
loope
sub
out
mov
sti
xchg
out
pushf
xor
lea
mov
jg
loop
je
pop
xor
mov
mov
mov
pop
cmp
nop
insb
lret
xchg
cli
mov
lcall
mov
mov
jmp
lret
ds
mov
repnz
mov
inc
fldt
adc
cmpsl
out
mov
push
jmp
cmp
xchg
hlt
mov
cmpsl
xchg
cs
cmp
mov
mov
out
xlat
daa
insb
add
sti
xchg
test
test
sahf
das
into
daa
add
std
sahf
adc
gs
adc
in
lahf
xlat
outsb
into
ds
inc
ficoml
icebp
mov
lea
xchg
cmpsb
dec
mov
je
dec
inc
fstpt
inc
mov
jbe
sbb
ja
sub
ja
mulb
jbe
pop
cmpsl
xchg
and
lods
push
scas
inc
xchg
mov
int
popa
clc
lods
pop
mov
fsubrl
jg
push
scas
inc
mov
ja
jno
xchg
mov
jno
shlb
dec
out
fmuls
lahf
or
add
cmp
add
jl
mov
mov
sbb
push
je
ljmp
enter
aas
out
xchg
enter
fnstenv
lods
push
loopne
pop
repnz
adc
pop
mov
mov
scas
fnstenv
bswap
pusha
idiv
sub
hlt
push
cmpb
test
int3
or
pop
push
sub
push
jge
or
jno
jmp
add
jo
stc
sbb
dec
fistps
push
add
std
scas
sbb
mov
add
mov
cli
pop
cmp
dec
and
mov
idiv
sbb
insl
dec
and
popf
push
aad
pop
or
rclb
jnp
inc
sbb
orb
call
or
loop
adc
adc
loopne
jg
push
mov
lods
cmp
fbstp
jmp
mov
dec
xor
mov
jae
xor
push
imul
shrb
icebp
testb
inc
adc
ja
ds
scas
pop
icebp
cmp
pop
inc
xor
ja
jp
std
scas
jb
fisubs
xor
jl
stc
add
cs
xchg
dec
push
fs
test
jae
or
push
sbb
fistps
test
dec
out
adc
jl
cmp
outsb
mov
xchg
sub
jne
addr16
popf
xchg
das
stos
inc
pop
mov
hlt
mov
iret
push
lods
cld
pusha
jnp
xchg
pop
sti
xchg
dec
mov
clc
loop
test
xorl
push
sbb
xchg
push
out
cmpsl
adc
fldcw
xchg
mov
ret
sbb
cmc
dec
pop
jno
push
mov
inc
lahf
int
int
icebp
or
mov
lcall
mov
add
mov
enter
mov
js
imul
mov
xchg
pop
out
push
test
lods
ret
push
mov
mov
fdivr
xchg
or
push
movntps
or
rclb
insl
shll
clc
push
repnz
mov
jb
pushf
cmpsl
dec
test
jnp
mov
scas
aad
ss
repnz
sbbl
les
mov
or
sub
insb
xchg
dec
mov
xchg
shll
arpl
xchg
or
out
int
xor
push
testl
iret
pop
fbstp
push
lret
bound
adc
push
pop
mov
pushf
xchg
test
push
mov
sub
data16
cltd
outsb
movsl
cmp
mov
testl
push
lods
pusha
dec
push
xchg
je
push
shlb
enter
mov
or
call
stos
jmp
mov
jo
jno
cmp
sbbl
and
cltd
adc
rorb
push
and
xchg
xchg
test
arpl
mov
dec
ret
jmp
fidivl
mov
shlb
add
fmul
and
in
and
lret
and
int3
or
jmp
test
adc
add
add
call
mov
js
sub
lds
cmp
aas
mov
mov
out
fisttpll
lods
xchg
nop
divl
mov
in
push
sarl
adc
dec
les
sti
aaa
into
sub
mov
dec
sbb
pop
in
and
pop
mov
jle
xorl
roll
jne
dec
mov
imul
ficoms
sti
add
and
nop
aas
call
cli
outsl
adc
xor
lret
inc
mov
add
fcos
xor
cmp
adc
jmp
or
mov
int
int3
or
out
lods
test
mov
jno
mov
cld
dec
loopne
mov
jp
aaa
out
mov
cli
adc
out
jp
iret
inc
ret
add
xlat
dec
inc
les
or
inc
das
mov
mov
jmp
jmp
pop
lds
adc
and
pop
sti
push
xchg
neg
sub
scas
leave
shrl
mov
popf
xchg
add
xchg
mov
ret
or
adcl
fisttpl
in
xor
imul
pop
es
inc
ret
into
arpl
pop
cs
lods
stos
adc
and
xchg
insb
dec
jge
xchg
arpl
xor
jle
js
and
jbe
sub
rorl
fs
lret
rclb
cs
insl
mov
xor
sub
in
cmpsl
fidivrl
cli
sbb
sub
jecxz
push
mov
loope
xor
xorl
fidivs
xchg
inc
ret
jns
cltd
ret
cmp
loopne
jp
jmp
lods
into
inc
or
lcall
pop
insl
mov
push
pop
jle
pop
mov
xor
cmpsb
imul
int
es
jle
jno
cmp
pop
into
pop
jg
mov
jnp
pop
testb
and
xchg
mov
xchg
out
scas
outsb
cwtl
or
cmpb
sub
out
add
pushl
xchg
xchg
das
hlt
sbb
add
repz
sbb
and
cltd
push
jb
dec
jo
loope
jno
mov
xchg
fwait
push
repnz
xlat
jno
push
inc
mov
popf
mov
mov
in
or
outsb
mov
orb
and
in
gs
cmp
jns
in
sbb
mov
sub
push
stos
loope
mov
pop
scas
dec
out
cmp
dec
jle
cmp
or
scas
je
lcall
das
pop
rorb
cld
xchg
xor
pop
les
sahf
scas
bound
or
imul
xchg
jb
dec
loop
xor
mov
stos
xchg
jnp
sbb
movsl
adcl
dec
test
popa
clc
pop
out
imul
mov
rorl
lcall
add
orl
xor
iret
sbb
out
insb
jmp
sbb
xor
sti
mov
xor
aaa
lret
push
push
mov
loopne
pusha
imul
jno
into
ss
sub
outsl
test
sbb
adc
lret
xor
jmp
int3
inc
sub
or
pop
dec
fcomip
xor
pop
mov
mov
fistl
scas
push
adc
mov
loope
xchg
pop
mov
xchg
pop
enter
repnz
jo
lds
adc
sub
lret
and
or
inc
cmp
inc
pop
cmpsl
pop
data16
push
or
push
mov
imul
lods
xchg
add
inc
mov
in
mov
jno
and
aam
jecxz
xchg
shlb
rclb
aad
lods
shll
repnz
mov
fs
push
or
xchg
xchg
mov
dec
inc
sbb
pop
pop
sbb
daa
dec
stc
xchg
jb
inc
fnstenv
push
les
sbb
shlb
fcomps
dec
push
lods
pop
stos
dec
ja
push
and
jl
cmp
imul
dec
pop
dec
sbb
rclb
mov
pop
pop
inc
fisttpl
lods
out
and
and
scas
jns
mov
in
dec
pop
rclb
clc
inc
pop
scas
lods
mov
dec
mov
xchg
popl
ss
insb
mov
dec
mov
inc
gs
sbb
daa
jmp
xchg
inc
into
sub
push
jns
movb
sub
or
sbb
xchg
jge
sub
inc
dec
push
into
push
xor
adc
sbb
gs
bound
sahf
iret
xor
jae
ljmp
ljmp
xor
movsl
mov
cmp
cs
inc
dec
mov
mov
push
mov
add
push
jmp
cmpxchg
pop
sub
ja
push
scas
popf
jbe
pop
sub
insl
mov
sbb
or
xchg
or
cmp
mov
mov
sbb
js
jg
inc
cwtl
xchg
xor
lds
iret
dec
shr
cmpl
jns
aaa
jo
jno
pop
push
lret
ds
les
or
shlb
and
into
enter
mov
mov
loopne
out
mov
stos
xchg
jmp
pusha
loope
and
mov
jbe
jmp
loope
pop
sahf
push
lods
pop
aad
jns
mov
cmpsb
ss
shlb
pop
cs
cmpsl
movsl
inc
adc
fildl
loop
jecxz
mov
push
add
mov
sub
mov
lods
and
addr16
sbb
arpl
call
add
or
in
push
add
pushf
jbe
fwait
push
sbb
hlt
lahf
pop
jge
pop
sbb
mov
inc
outsb
jecxz,pt
push
pusha
stos
sub
xchg
sbb
dec
inc
mov
popf
movsl
cmpl
xlat
adcb
add
pop
repz
data16
xlat
mov
out
adc
jno
in
sahf
pop
int3
fidivrs
es
dec
lods
inc
jb
pop
loop
into
xchg
jnp
add
push
and
stc
iret
pop
add
mov
sti
lds
out
dec
jmp
data16
and
ja
and
jge
lock
cmp
mov
push
cmp
cld
xchg
mov
and
cld
aad
je
in
inc
mov
xor
inc
into
dec
adc
inc
fmuls
test
dec
mov
pop
add
cmpsb
mov
mov
fisttps
loopne
mov
in
lods
fldcw
lock
fisttps
adc
adc
pop
mov
mov
pop
ror
incb
adc
lret
cmp
push
bswap
xor
jecxz
pop
mov
out
ljmp
mov
xacquire
push
fcmovbe
dec
inc
fwait
imul
jnp
jl
add
sub
daa
pop
inc
add
mov
arpl
dec
imul
popf
inc
sgdtl
mov
push
xor
sub
mov
jmp
rorl
je
mov
std
adc
pushf
mov
pushf
sbb
cmp
scas
mov
lret
push
out
sbbl
rclb
test
xchg
jns
cmpsb
mov
jne
js
insl
mov
clc
js
aam
mov
cmc
jae
repnz
test
rcr
and
inc
fadds
dec
inc
mov
ficompl
data16
mov
add
jmp
sbb
and
sbb
jmp
imul
rclb
popa
cmpsb
cmp
imul
std
sbb
push
cmp
pop
fidivl
pop
shlb
dec
fists
aad
mov
dec
cmp
dec
pop
fimuls
add
jecxz
add
clc
rcll
lods
mov
sub
lds
lods
sahf
adc
push
rcll
cmp
add
mov
ret
lods
jmp
mov
xchg
jns
fwait
enter
les
xchg
test
adc
mov
jb
pop
fldcw
xor
test
bnd
xor
sbb
jns
push
fwait
pop
out
xchg
inc
leave
sub
lcall
xor
cmpsl
jg
push
cmp
jb
pop
dec
imul
and
insb
xchg
xchg
aaa
xlat
push
loope
js
flds
mov
dec
int
mov
jecxz
lods
pusha
rolb
sub
sti
cmc
iret
inc
lret
xor
mov
hlt
sti
movsl
cmp
xchg
repz
das
into
pop
cmp
lods
int3
lret
inc
lock
jmp
mov
scas
inc
or
test
ja
cltd
imul
push
in
or
es
fmuls
push
into
cmp
les
mov
lret
rorl
pushf
xor
cld
sbb
xor
int3
loop
mov
out
aas
aam
into
xor
je
iret
fildll
iret
int3
mov
movsl
hlt
das
sti
jbe
les
or
push
sbb
xchg
push
int3
or
scas
inc
add
xlat
insl
and
pop
lahf
inc
cmp
jg
test
cmp
lret
in
dec
fsubr
flds
mov
pop
movnti
int
xchg
mov
out
dec
rol
test
fcoml
mov
rorb
mov
mov
sti
mov
add
popf
jne
adcb
jne
imul
fs
ss
out
xor
fisttpll
ficoms
dec
xor
inc
and
jno
xchg
sub
ja
outsb
sahf
popa
cwtl
cld
pop
sub
je
scas
fs
ss
stc
andl
xor
push
pop
sti
or
pop
enter
call
cmp
loopne
imul
int
popa
or
scas
xchg
xor
jge
lcall
mov
sbb
xlat
inc
imul
dec
sub
inc
mov
sbb
xchg
or
add
mov
jmp
outsb
rcrb
mov
mov
imull
sbb
aam
iret
inc
jmp
inc
fidivrl
test
pop
adc
cmp
xchg
jge
sub
xor
lcall
adc
jb
sub
xor
push
jo
movsl
xor
jb
shll
pop
pop
adc
test
clc
xor
int3
inc
mov
dec
mov
aam
testl
push
repz
sub
data16
addr16
inc
sbb
stos
subl
leave
imul
int
xor
fs
mov
xlat
jmp
mov
shrb
cmp
stos
jne
ja
faddl
xchg
cs
fisubrs
loop
adc
jge
adc
cmpsl
xor
add
jecxz
add
ret
cltd
out
mov
sbb
js
leave
stos
or
fildll
add
jl
mov
rcrb
fucomip
lret
stc
nop
std
stos
cmp
aas
popf
mov
xlat
adc
loop
stos
popa
xor
nop
in
inc
sub
cmp
int
lods
imul
push
lret
xchg
push
enter
js
sbb
mov
mull
adc
jae
adc
sbb
mov
and
dec
jnp
add
fisttpl
adc
inc
in
inc
fldenv
pusha
dec
lret
mov
mov
inc
jge
xor
sub
cmpsb
inc
pop
int3
inc
pop
mov
or
push
mov
mov
dec
lds
adc
frstor
leave
xor
loope
mov
stc
shlb
sub
ret
mov
jnp
dec
in
xlat
mov
ljmp
adc
jmp
and
sbb
pop
jp
mov
pop
imulb
ds
push
shlb
rorb
sub
dec
addr16
movl
xchg
add
add
dec
jno
sbb
in
pop
push
imull
ds
into
dec
sbb
test
mov
pop
add
cwtl
xorl
mov
and
orl
cmp
jno
xchg
inc
nop
mov
sub
lds
stos
inc
ss
mov
je
xchg
xor
mov
push
push
iret
push
outsb
push
popa
push
popf
inc
mov
clc
inc
jg
jo
push
add
and
icebp
sub
repz
pop
and
jo
and
mov
mov
insb
or
cmp
js
mov
mov
leave
rcl
cmp
lds
inc
fsubs
mov
or
jecxz
mov
lret
cmc
xlat
dec
rorb
xor
scas
xchg
mov
and
hlt
test
sbb
jbe
out
xchg
aad
inc
dec
lds
aaa
jmp
xor
jno
adc
movsl
ja
cld
sub
cwtl
xchg
pop
pushf
int3
push
daa
dec
rcrl
mov
ret
cmpsb
pop
outsl
mov
cmp
jbe
addr16
inc
cli
lahf
xchg
enter
push
into
jge
leave
xor
xor
or
jno
inc
xor
test
add
mov
push
cmp
xchg
inc
test
in
inc
fsts
sub
sbb
imul
sub
jp
lods
ret
rorb
int
add
into
lds
ljmp
xor
mov
sahf
int
in
inc
cwtl
ficoml
or
cltd
ret
sti
sahf
xchg
rol
aad
mov
sbb
aam
repz
adc
decb
add
or
es
fmulp
cmp
dec
data16
fstl
push
fsts
scas
fs
and
sub
fwait
cmp
loop
adc
imul
out
sbb
cmp
scas
pop
mov
ret
fisubrs
out
je
push
mov
loopne
pop
mov
or
xor
cli
jp
sub
enter
mov
aas
adc
jb
xor
and
lods
xchg
aaa
cli
push
stos
xorl
lock
ja
mov
xlat
ds
and
cmc
mov
ja
jne
loopne
outsb
es
clc
mov
ret
jecxz
enter
stos
push
loopne
stos
xchg
pushf
cmpsb
mov
or
mov
lret
jbe
pop
inc
stos
rcrl
loopne
dec
rorb
and
mov
outsl
inc
das
mov
sbb
mov
mov
repnz
je
scas
inc
in
leave
aas
test
loop
sbb
stc
out
xchg
pop
push
mov
jo
push
ljmp
and
and
addr16
lock
daa
sarb
fidivrl
lret
jne
add
roll
push
inc
hlt
mov
pusha
test
dec
fistps
xchg
lea
adc
jae
xor
cli
inc
xchg
push
lret
cmp
movl
aas
movsl
fnstsw
push
loopne
xchg
cs
adc
ret
jl
push
pop
sub
xchg
cmp
testb
mov
xor
ret
mov
mov
or
pop
int3
xor
and
shlb
lahf
loope
out
sbb
mov
hlt
inc
inc
dec
jo
cs
rcrb
push
push
add
mov
sub
call
loopne
ud0
aaa
sub
jbe
nop
jns
inc
cmp
push
ret
ret
je
std
dec
lret
jns
pop
inc
popf
inc
movsb
lds
fistl
cmpsb
pop
pop
pop
inc
enter
xchg
sbb
pop
cmp
or
push
jmp
lods
xor
popf
ljmp
sbb
fmull
gs
stc
test
jnp
loopne
cmpsb
pusha
or
in
popf
xchg
dec
lea
iret
inc
cs
repnz
mov
rorl
pushf
lea
cmp
cmp
or
push
lahf
cs
adc
addr16
ret
mov
pusha
add
xchg
in
mov
mov
or
sub
mov
adc
clc
sub
sbb
jp
into
sbb
fstp
rolb
add
jecxz
jmp
fcmovnb
mov
cli
sarb
fcmove
stc
nop
cld
iret
push
setl
dec
rol
enter
sub
jb
sub
rcrb
sub
push
xor
lret
push
fsts
adc
and
xor
sbb
mov
repz
mov
scas
mov
pusha
push
cmp
test
pop
int3
cmp
mov
adc
out
cmpsl
dec
stos
gs
out
fidivrs
fstpt
adc
add
dec
test
sti
inc
sti
out
stos
inc
adc
pushf
sbbl
imul
pop
jnp
lock
pop
pop
lods
dec
fists
addr16
cmpsb
inc
sbb
jg
or
xor
mov
popf
orl
push
pop
sbb
dec
mov
ret
mov
sub
mov
movsl
popa
fsub
pop
adc
mov
xor
add
fildl
xchg
cwtl
fdecstp
int
jmp
lods
lock
mov
or
test
sbb
or
daa
and
lahf
mov
push
in
sbb
stos
pop
cmp
push
mov
mov
xchg
sub
pusha
push
pop
add
pop
sahf
xchg
sub
repz
mov
testl
dec
scas
and
hlt
dec
data16
fistl
inc
int3
aad
dec
ret
inc
mov
or
push
lret
and
icebp
shll
inc
into
adc
icebp
out
push
das
add
sbb
mov
ret
loop
adc
pop
stc
nop
enter
ret
sub
test
mov
subl
pusha
xchg
int3
xchg
sub
mov
mov
push
insb
mov
popf
sbb
stos
pop
insl
lcall
push
call
lret
sub
cmc
mov
inc
leave
out
or
fcoml
and
xchg
ficomps
add
sbb
mov
mov
das
div
jns
jle
mov
mov
pushf
mov
flds
in
stos
adcb
sub
incl
jmp
stos
inc
xchg
xchg
xchg
and
cmpb
mov
sub
shrl
push
lahf
imul
test
arpl
mov
xor
sbb
insl
dec
loope
in
stc
and
mov
xlat
dec
int
aaa
fidivrl
int
negb
mov
or
adc
fsts
jle
mov
shll
insb
jg
sarl
xor
push
and
lods
jne
jb
repz
pusha
fwait
xor
or
aas
je
cmpsl
aaa
jnp
or
fs
mov
pusha
hlt
mov
mov
and
dec
test
dec
or
sub
inc
xchg
cltd
mov
stos
xchg
jnp
sub
mov
lds
lcall
push
mov
dec
cs
insl
int3
pop
lock
lea
arpl
inc
lret
mov
ficomps
insl
movsb
jb
or
call
mov
xor
fs
icebp
mov
and
divl
lahf
insl
mov
cmp
pop
stos
inc
loop
cmp
mov
jp
sbb
dec
test
stos
push
insl
orb
jne
loop
mov
ljmp
and
dec
inc
mov
addb
and
in
popa
pop
repnz
cltd
inc
or
push
inc
ret
outsl
fldcw
mov
adc
dec
mov
sub
popa
enter
mov
dec
pop
ficoml
sbb
xchg
or
jl
lods
inc
sti
sub
dec
imul
add
mov
call
icebp
mov
add
or
push
adc
push
or
sti
sub
sub
daa
jg
in
and
sti
push
xchg
xchg
decb
loop
jns
pop
lea
cmp
pushf
test
jg
lcall
mull
jne
lods
data16
xor
cmpsb
fcoms
push
adc
push
nop
xor
lock
rorl
add
aas
sub
pop
jns
and
cmp
and
bound
mov
cmpsb
sub
pop
rorl
or
xor
test
andl
test
lahf
clc
js
cltd
test
orb
or
mov
jmp
add
mov
cmp
xor
xlat
outsb
dec
add
mov
sbb
lock
xchg
roll
sbbb
xchg
fsts
push
xchg
pop
mov
repz
inc
and
inc
mov
pop
addl
xor
dec
insl
lcall
jns
addr16
adc
lds
or
fs
ret
orb
sbb
xchg
pop
incb
mov
or
xchg
sbb
and
pop
lods
ljmp
push
inc
mov
mov
push
and
mov
and
test
inc
enter
or
leave
pusha
sbb
sti
xchg
pop
cmp
sbb
rcl
into
add
and
push
xor
jae
cmpsl
xchg
mov
fnstcw
or
inc
dec
sub
xor
into
mov
ret
hlt
rcl
outsb
add
or
push
push
add
imul
mov
mov
sbb
sbb
scas
mov
loope
mov
outsb
add
arpl
stos
inc
add
enter
jns
sbb
fbstp
cmp
fdivrl
hlt
mov
push
xor
inc
dec
testb
mov
outsl
daa
je
xor
adcb
loope
call
movsl
cmp
cmp
add
sti
inc
fldt
mov
icebp
jle
lahf
ss
lahf
adc
push
out
icebp
xor
and
inc
xchg
sub
stc
push
repz
outsl
inc
and
and
fdivp
lea
subb
outsb
dec
mov
orl
loopne
push
add
popf
xor
push
xchg
out
xlat
pop
mov
pop
mov
xchg
in
add
cmp
mov
or
sub
dec
push
mov
into
stos
mov
andnps
sub
xchg
ficoms
mov
or
adc
and
fidivs
lock
push
jae
xchg
fbstp
pop
xor
sbb
inc
cwtl
or
gs
jle
push
mov
dec
pop
loope
cmp
mov
fwait
sbb
dec
aaa
cmp
ror
cmc
out
addr16
sub
fistpll
xor
adc
int3
pop
imul
out
cs
mov
xchg
mov
mov
mov
xor
push
adc
std
pusha
mov
repz
sub
push
cmp
pushf
pop
outsb
ret
ljmp
xlat
xchg
lea
insb
cmp
sbb
in
data16
xor
push
daa
xchg
notb
cmc
andb
xor
mov
xor
xlat
fs
dec
sub
fcoms
mov
fwait
jecxz
fnstenv
rcl
in
sbb
mov
lods
jne
bound
rol
push
enter
push
sti
push
mov
lock
xchg
std
ja
icebp
mov
inc
dec
cmpsb
sub
out
adc
out
arpl
cmp
xchg
out
mov
fcoml
jp
jae
mov
pushl
cmp
sbb
mov
push
fstpl
mov
mov
andl
cmpsb
stos
testl
inc
rcrl
lret
loop
jno
in
pop
cmc
std
iret
xchg
jg
in
movl
jo
xchg
popf
mov
hlt
fidivrl
cmpsl
rcrl
jle
int3
mov
lods
daa
xchg
insl
test
cmp
cli
dec
inc
push
repnz
out
in
sbb
loope
pop
jmp
je
scas
jb
jecxz
mov
data16
mov
scas
aas
push
cld
subb
push
das
mov
jmp
fidivs
mov
jne
inc
and
pop
repnz
out
push
jp
ret
insl
cmpsl
sti
xchg
mov
xchg
push
out
xorb
lock
dec
and
jmp
ffreep
cmp
xchg
in
scas
inc
pop
push
jecxz
rcrl
mov
adc
jb
enter
xchg
sub
inc
shrb
cld
popa
clc
in
mov
insl
testb
add
jb
and
test
mov
loope
scas
inc
xchg
subb
cmp
stos
xchg
inc
faddl
dec
dec
loope
cmpsl
xchg
cs
mov
adc
inc
fldenv
add
pop
xchg
sub
fdivl
icebp
mov
jns
sub
cmc
push
inc
fdivl
iret
pushw
sub
aam
add
sbb
xchg
sub
sub
adcb
push
es
xchg
and
push
call
mov
outsl
push
in
rclb
and
fisttpl
or
jmp
repnz
ficomps
rdmsr
shlb
xor
push
jp
data16
jmp
xor
mov
inc
adc
jge
pop
jae
lods
sub
fiadds
jecxz
fnstsw
std
sub
push
jecxz
les
jb
lods
sub
fiadds
xor
lods
addb
cmc
movsl
lcall
cld
in
jae
in
scas
ss
mov
jno
loop
ror
mov
add
adc
int
sub
hlt
xchg
leave
pushf
in
or
les
jecxz
lds
stos
cmpsb
cs
dec
sbb
pop
js
cmp
dec
ss
add
cltd
xchg
ds
pop
mov
int3
rcll
jno
xorl
dec
shlb
mov
lods
scas
xor
mov
cmp
andb
pop
adc
mov
mov
pop
add
leave
sub
cmpsb
mov
cmp
fwait
mov
or
addr16
mov
or
pop
add
lods
xor
push
dec
clc
bound
pop
sbb
push
mov
push
inc
pop
add
adc
push
cmp
mov
jno
or
mov
mov
pop
add
fimuls
xor
cld
pop
mov
ret
mov
rcll
sub
add
and
mov
push
leave
add
push
les
repnz
and
push
push
and
cltd
jg
es
jmp
std
fildl
push
fdivrs
mov
lods
stos
cmpl
es
notb
add
inc
push
cltd
inc
cmp
test
sbb
aam
cmpsb
jns
adc
nop
jo
push
inc
xchg
cmp
sub
fyl2x
jno
ss
stos
mov
cmp
mov
mov
dec
sahf
cmp
dec
ja
xchg
dec
mov
xor
xor
adcl
cmpsb
xor
lret
ljmp
bound
mov
xor
xchg
inc
adc
roll
lahf
cmp
dec
push
mov
xchg
pop
mov
sarb
ljmp
flds
sahf
ds
mov
pop
dec
adc
das
fdivrs
ds
add
pop
inc
aam
push
push
or
pop
push
sub
ja
sahf
cmp
outsl
jns
mov
cmpsl
mov
cmp
adc
xor
pushf
ds
mov
pop
dec
dec
lahf
cmp
mov
mov
lcall
shll
jecxz,pt
xchg
cli
jns
dec
dec
push
lock
mov
sbb
and
dec
xor
sub
pop
mov
lcall
lods
mov
mov
and
push
sbb
adc
xor
enter
cmc
adc
scas
sub
mov
mov
pusha
sbb
mov
pop
in
pop
ret
test
test
pop
test
mov
mov
insl
out
popf
movsb
xor
mov
jecxz
jae
call
sub
xor
inc
inc
mov
icebp
or
mov
es
pop
fnstsw
xchg
add
xchg
inc
push
cmp
push
pop
test
pop
call
idivl
and
stos
sub
cmp
decl
mov
xlat
xchg
pop
cld
add
stos
sub
sar
pop
ja
fsubl
lods
sub
cmp
jg
cwtl
in
push
pop
sti
add
stos
sub
mov
fsubrs
mov
inc
jmp
or
aaa
lret
mov
dec
aaa
pop
lea
sub
aam
adc
mov
out
xor
xchg
scas
sub
outsb
sbb
xor
adc
insl
sub
aad
jb
mov
clc
xchg
push
decl
cmpsb
xor
mov
push
shl
int3
mov
mov
mov
push
movsb
or
and
sbb
inc
out
jnp
or
repnz
add
fdivs
mov
mov
mov
push
lods
call
mov
movsl
jmp
push
std
sbb
cmp
cmpsl
push
xor
adc
inc
pop
add
push
mov
adc
mov
and
aaa
sub
adc
in
jae
inc
aam
jmp
push
mov
push
into
sbb
dec
mov
jno
test
ret
mov
gs
inc
sub
scas
xchg
jle
es
roll
into
mov
cmp
daa
jge
cld
dec
gs
out
sahf
inc
adc
jbe
sbb
adcl
mov
sbb
out
out
ret
fwait
jno
fistpl
lret
fiadds
and
mov
cmp
and
add
jmp
push
sahf
inc
xchg
clc
jbe
adc
dec
jg
movsl
dec
jl
mov
mov
sub
push
sti
pop
popa
into
xchg
pop
nop
push
int3
cmp
xor
jae
inc
xchg
movsb
mov
mov
mov
mov
mov
lret
mov
cmpsl
mov
mov
cmc
sbb
dec
sbb
addr16
nop
cmp
stos
ss
cmp
pop
and
xor
and
adc
sti
cmc
push
mov
inc
addr16
mov
mov
push
sbb
jmp
int3
xchg
jno
loop
filds
and
mov
jle
pushf
jnp
mov
mov
inc
out
xor
or
mov
stos
imul
mov
lods
jns
lods
fwait
icebp
pop
jne
mov
cmpsl
pushf
negb
push
roll
dec
sbb
jb
xchg
add
pop
enter
inc
fnstenv
push
out
push
jno
lahf
jle
sarb
gs
lcall
subps
xchg
dec
or
mov
pop
cs
sbb
push
ljmp
mov
mov
mov
push
lret
fldl
push
jle
sbb
xchg
inc
fisubrs
xchg
aas
test
sub
fucomip
insb
in
popf
sarl
clc
mov
cmp
or
movsl
jg
sahf
mov
sahf
cmp
data16
push
mov
xchg
lea
xor
mov
cltd
out
dec
or
mov
dec
fldl
adc
movsb
sarb
inc
insl
add
dec
or
mov
and
sbb
push
inc
pushf
cmp
push
jns
lahf
cmp
mov
mov
dec
sbb
imul
pop
in
adc
int
fnstsw
adc
pushf
lds
dec
out
sbb
push
or
hlt
jl
mov
xchg
dec
loop
into
orb
jb
xor
loopne
sti
and
fiadds
add
dec
push
hlt
pop
xor
mov
in
push
sti
sub
push
dec
cli
sarb
mov
sarb
adc
inc
and
fwait
push
gs
or
inc
or
imul
sub
or
pop
outsl
out
sbb
pop
xchg
cltd
aaa
xorw
or
adc
rclb
jno
jmp
in
cmp
mov
movsb
inc
orl
out
jmp
stc
scas
xor
je
mov
jo
add
push
lds
das
mov
jmp
lods
call
jle
sbb
mov
add
or
fistpll
push
in
outsb
sbbb
xchg
repz
jecxz
cmp
sbb
push
addl
mov
jo
lret
andl
mov
xor
shll
mov
sbb
repz
sbb
inc
dec
dec
pushf
inc
add
insb
idivb
lods
mov
adc
dec
stos
pop
mov
test
jne
xor
xchg
aaa
sbb
lret
xchg
xchg
jp,pt
aad
or
pop
pop
enter
dec
ret
insb
pop
add
stc
data16
iret
nop
push
imul
sbb
mov
js
cmp
aas
loop
push
std
fdiv
or
and
mov
cmpsl
aam
jp
pushf
push
mov
cmc
mov
dec
and
sub
call
pusha
push
xchg
aas
pushf
mov
jb
test
imul
rdtsc
mov
addr16
adcb
mov
inc
lods
out
imul
and
or
inc
cmp
repz
in
push
out
dec
push
iret
pop
mov
mov
push
inc
cmp
cs
in
add
adc
pop
mov
iret
stos
fstpt
enter
adc
cmp
addr16
sti
push
js
lds
dec
adc
nop
xchg
cmp
int3
dec
adc
pushf
aas
and
mov
enter
int
pop
add
mov
mov
stos
das
scas
aad
adc
flds
sub
push
movsl
addr16
dec
push
mov
aam
pop
std
jae
mov
arpl
cmp
jnp
lea
xor
jnp
and
gs
jg
add
and
pop
dec
push
cmp
inc
adc
and
inc
mov
lock
lea
pop
mov
notb
sub
mov
mov
insb
mov
mov
clc
xor
sub
aas
aas
filds
cmc
out
pusha
add
jbe
fbld
add
fidivs
add
cmp
xchg
jl
inc
ds
jp
adc
adc
mov
sbb
dec
test
mov
sub
sub
inc
in
push
add
popf
inc
adc
jnp
ss
or
dec
or
shlb
pop
xlat
and
rorb
sub
xchg
aam
fs
add
sub
pop
inc
leave
xchg
out
jbe
ss
jns
test
iret
xchg
fnstcw
cmpsb
test
push
mov
mov
ficompl
jl
dec
mov
xchg
in
jno
xchg
ret
fxch
xchg
aaa
cmp
pop
jno
and
lret
lcall
inc
bound
inc
adc
filds
lea
data16
mov
inc
loop
lock
add
sahf
mov
scas
out
jae
stc
jl
pop
mov
test
sarl
pop
add
inc
lcall
stc
jl
push
push
jge
mov
mov
into
mov
cmpsb
xor
aas
cwtl
cmpsl
shr
addb
mov
and
gs
fildl
repnz
sub
pusha
cld
mov
js
pop
mov
dec
push
cmp
repnz
cmp
out
and
or
movb
mov
out
jnp
sub
lds
sbb
out
test
mov
xor
push
loop
adc
addb
pushf
aaa
loopne
xchg
xor
adc
dec
das
inc
adc
dec
into
xchg
loope
sub
or
fmul
adc
mov
fsincos
xchg
aas
or
jnp
out
cmpl
lock
es
emms
mov
sub
cltd
sbb
mov
test
xchg
cmp
sbb
mov
mov
rorb
push
lahf
lods
ss
xchg
gs
sub
and
imul
fs
sbbl
xlat
jns
dec
add
jnp
jo
mov
xchg
cmpsb
jmp
pop
or
js
dec
xchg
inc
inc
add
pop
adc
push
add
enter
jno
mov
inc
rcrl
mov
lcall
push
dec
pop
mov
jb
mov
imul
adc
pop
cld
pop
xor
das
mov
cmp
xor
pushf
or
ljmp
sub
jg
sbb
scas
mov
cmovne
cltd
loope
hlt
bound
into
fidivrs
shlb
aad
call
push
xchg
sub
popf
adc
push
aad
adc
das
sbb
test
mov
insb
out
mov
int
es
xor
fcoms
inc
jecxz
aas
mov
test
sub
and
xchg
inc
cld
xchg
sub
fisttps
lods
sub
inc
adc
stos
cs
xor
movsl
sub
jno
or
loop
cltd
and
test
mov
shll
inc
cmc
pop
hlt
pop
nop
cmp
call
and
mov
add
mov
sub
cmp
and
mov
mov
mov
rorb
call
sub
jp
loope
mov
mov
pop
es
inc
mov
mov
bound
mov
clc
dec
outsl
jb
jmp
out
add
push
cld
scas
push
mov
and
clc
dec
adc
das
cmp
insl
xchg
fidivrs
clc
pop
mov
jp
mov
adc
aaa
mov
es
sub
ss
mov
stos
test
ja
fcompl
xchg
xlat
xor
xor
sbb
dec
scas
adc
push
pop
push
sub
rcrb
cwtl
jbe
repz
stos
jo
pop
dec
inc
or
mov
cmp
lds
sahf
inc
adc
mov
mov
daa
stos
xor
and
sbbl
daa
test
dec
lea
stos
push
out
int
dec
scas
xor
test
lods
xor
clc
pop
add
idiv
pop
xchg
and
pop
or
xor
xor
jne
adc
cli
adc
add
dec
lods
sub
lods
sub
subb
movsb
cmp
imul
shl
xchg
jge
mov
push
in
jbe
cli
icebp
pop
daa
clc
clc
bound
sti
inc
jnp
aad
xchg
lds
test
lcall
jns
fisttpl
pushf
inc
cmp
arpl
fsubrs
out
std
bswap
xchg
dec
in
sbb
out
inc
or
add
into
jo
in
adcl
fidivl
popa
mov
push
repz
mov
test
fistl
sub
add
or
pop
loop
adc
in
sbb
pushf
mull
push
fbstp
mov
xchg
and
xchg
add
sbb
mov
add
pop
sti
jp
sbb
mov
rorl
leave
jne
jl
out
in
pop
cmc
mov
nop
repz
data16
mov
pop
je
mov
inc
int3
jbe
sub
test
ss
ficoms
sub
xchg
or
push
int3
jecxz
into
aas
sbb
inc
adc
rolb
sbb
iret
in
or
add
xchg
ds
jne,pt
cmp
shlb
cmpl
test
sarl
pushf
inc
jb
orb
ljmp
shll
xchg
sbb
lea
dec
orl
mov
call
icebp
cltd
cmp
sub
addr16
mov
popf
cmp
subl
loopne
xchg
sub
pop
fs
xchg
xchg
test
enter
int
mov
imul
inc
jne
sbb
test
lret
je
dec
jg
lahf
in
popf
enter
negl
out
mov
push
pusha
inc
addr16
or
mov
mov
cmpsl
sahf
jl
les
ret
dec
or
aad
mov
loope
push
shlb
lods
daa
ds
test
and
jge
hlt
pop
daa
jle
fwait
scas
dec
lods
xor
mov
mov
fmull
sub
stos
xor
pop
cltd
cwtl
inc
adc
inc
pusha
out
ljmp
fnstenv
stos
enter
fnstsw
mov
in
ljmp
testb
idiv
cwtl
pop
clc
push
ljmp
popf
mov
sub
xor
bound
scas
mov
loopne
scas
inc
adc
data16
xor
pop
ja
scas
xor
sub
enter
mov
mov
lods
dec
adc
mov
fiaddl
cltd
xchg
les
les
adc
mov
mov
push
adc
pop
out
popa
movsl
fcmovb
mov
mov
cld
adc
stc
pop
std
inc
fnstsw
in
outsb
out
push
lret
xchg
cmc
ja
in
add
mov
ja
cmpsl
test
fildl
or
es
jns
jle
mov
cli
bound
cmpsl
adc
xchg
cmp
inc
mov
push
adc
sti
cmp
imul
xor
test
mov
test
stc
pop
cmp
cmp
int
xchg
int3
fcompl
jae
push
pop
adcb
sub
push
mov
mov
ja
pushf
mov
mov
hlt
mov
adc
adc
daa
lods
push
fwait
inc
jl
mov
aad
jmp
nop
cmp
aaa
sbb
roll
cli
data16
mov
in
pop
mov
xchg
push
fdivrl
dec
jl
and
sbb
std
mov
orl
or
jno
outsb
hlt
mov
sub
jo
aam
fcmovne
nop
mov
mov
inc
movsb
inc
cltd
inc
xor
jmp
das
dec
cmp
idivb
fnstcw
out
xchg
inc
jb
pusha
out
jecxz
jge
loope
mov
out
cli
cmpsl
xor
pop
add
ja
test
popa
pop
fmull
mov
sbb
arpl
mov
movlps
inc
adc
or
sti
inc
mov
or
lds
adc
push
in
or
xchg
mov
inc
or
cmpsl
shll
addr16
xor
or
add
jbe
push
jnp
adc
fnsave
test
out
cmpsl
movsl
jg,pn
mov
pop
outsl
popa
jmp
scas
aam
adc
mov
loop
test
mov
push
cli
push
sub
shlb
test
and
cmc
out
test
sub
push
stc
idivb
pop
add
xchg
push
leave
or
sarl
and
jg
adc
adc
jg
and
xor
idivb
popa
adc
sti
cmp
mov
push
clc
into
xchg
xor
or
arpl
movsl
daa
divl
mov
aad
mov
add
push
rorb
lods
xor
cmp
scas
mov
pop
lds
mov
fstl
mov
stc
cmpsw
sbbb
mov
shll
sub
rcrl
je
inc
push
scas
outsl
mov
out
mov
sti
enter
pop
adc
adc
subl
fsubl
dec
add
lods
sbb
inc
leave
mov
fs
pop
push
insl
ljmp
out
jb
sub
icebp
gs
pop
pusha
imulb
mov
mov
jge
jge
out
outsb
mov
pop
add
jno
pop
jle
sub
xchg
cmp
push
jnp
ds
shl
mov
adc
test
lcall
dec
pop
leave
mov
mov
out
movsl
cmp
sti
mov
sub
fldl
cmp
fwait
cmp
and
mov
dec
mov
or
mov
popf
inc
stos
mov
outsb
out
rcll
scas
orl
jle
and
push
cmpsb
xor
das
or
out
xchg
mov
adc
sub
mov
lods
loopne
xchg
push
pop
add
ret
dec
mov
cld
popa
movsb
gs
jnp
movsl
sub
enter
mov
mov
and
push
cmp
mov
adc
mov
repz
inc
dec
and
xchg
js
sub
jecxz
jne
adc
fs
push
pop
inc
xor
add
xchg
cmp
push
mov
stos
mov
adc
movsb
mov
shll
leave
and
xchg
clc
push
sub
arpl
fnstenv
mov
mov
imul
sbb
push
add
insl
in
add
pop
add
das
cmp
icebp
pusha
mov
movsb
pop
sti
xchg
adc
jns
rol
xchg
xor
mov
cmpsl
into
lea
jbe
xchg
and
mov
ret
cmp
in
or
mov
pusha
cmp
pop
outsl
cmc
or
pop
fidivrl
lods
xor
mov
cmp
sbb
and
xor
lahf
pushf
and
lahf
gs
push
mov
out
sbb
adc
dec
adc
call
repz
xchg
inc
push
fadd
push
add
add
and
adc
mov
cmc
arpl
shll
push
mov
sti
stos
fwait
ds
push
ret
pushf
xor
mov
loopne
sub
jne
cmc
xchg
ds
lods
fiadds
andl
fdivrs
and
xor
test
call
cmp
mov
mov
adc
jge
cmp
outsl
pop
sbb
ja
mov
aad
leave
fadds
dec
pusha
pop
add
xchg
inc
or
pop
jb
icebp
scas
popl
rcll
push
push
adc
xchg
leave
xchg
test
xor
mov
mov
icebp
pop
dec
outsb
mov
stos
fildl
mov
cmp
cmc
push
orb
mov
lock
aad
pop
and
jne
xchg
xor
cmpsb
out
jno
pop
dec
adc
cmpsb
mov
adc
cld
xchg
jbe
loope
inc
or
or
sbb
in
push
push
jo
out
enter
es
out
xor
popa
cmc
arpl
and
outsl
in
mov
mov
cli
push
test
rclb
popf
mov
jbe
or
out
dec
or
jae
popf
push
lea
enter
push
push
shll
pop
rcr
cmp
pop
add
insb
xor
mov
mov
enter
hlt
and
dec
mov
inc
lcall
test
inc
loope
stos
mov
mov
pop
pusha
dec
adc
nop
sub
jno
xor
xor
sub
cmp
shll
ja
xchg
mov
push
test
and
dec
aad
cmp
mov
xchg
call
icebp
fs
push
push
ret
jb
dec
repnz
jmp
xor
aas
mov
repnz
movsl
faddl
sbb
adc
lahf
mov
lcall
jno
in
pop
in
cmc
nop
inc
rcl
movsb
xor
adc
jne
das
jle
pop
sub
xchg
pop
cmp
inc
hlt
push
fstl
cmpsl
sub
enter
rorb
cli
bound
jbe
mov
rcl
loopne
out
addps
mov
pop
divl
aam
lret
es
sub
pop
push
xor
dec
arpl
not
in
or
insl
adc
popa
inc
jae
dec
mov
les
es
and
xor
mov
int
push
fldl
inc
or
jg
xchg
negb
sbb
sbb
enter
ret
in
jo
mov
lea
lea
fwait
push
mov
int3
xchg
mov
jg
cmpsb
cmp
outsb
shll
fwait
xchg
jp
stos
xchg
vhaddpd
rcrb
mov
add
data16
stos
addb
sub
lea
fwait
aas
push
mull
leave
mov
in
outsb
fstl
sbb
call
xlat
xor
sbb
cmpsb
xchg
inc
adc
dec
and
push
sarl
data16
add
movsb
and
icebp
arpl
rorb
push
stos
ss
and
rorb
ficompl
aad
cmc
mov
data16
int
jg
inc
xor
xor
mov
movsb
mov
xor
sub
leave
adc
cwtl
cmp
mov
aas
mov
jnp
xor
dec
or
nop
daa
mov
mov
xchg
add
push
ljmp
xor
out
mov
adc
xchg
and
mov
mov
adc
shrb
jmp
jp
push
jns
push
clc
daa
outsb
sarb
xor
test
movsb
xor
pop
stos
inc
adc
test
ret
or
fistpll
push
ja
xchg
call
sub
dec
adc
aas
les
loope
sarl
repz
test
xor
sbb
mov
scas
lret
or
js
push
pop
mov
pop
xchg
add
inc
mov
lods
arpl
add
daa
mov
mov
inc
inc
orb
das
cli
sti
pop
pop
xor
add
xor
mov
add
test
into
xor
sub
aam
shlb
inc
push
scas
sub
stos
dec
or
lahf
aaa
in
cmp
ret
push
pop
jecxz
mov
lea
push
mov
aad
repnz
sarl
sbb
mov
scas
in
jo
pop
xchg
cmp
inc
pop
sti
pusha
mov
cmpsl
clc
jns
shll
data16
xchg
das
enter
add
mov
lahf
cmp
mov
aas
cwtl
mov
outsb
pop
mov
lcall
outsb
in
and
outsb
cmc
cli
inc
or
in
push
or
xchg
push
xchg
pop
adc
fbstp
mov
fidivrs
ret
sbb
imul
inc
mov
and
add
ret
shrb
iret
mov
lds
mov
call
hlt
pop
ret
xor
xchg
popa
fimuls
add
and
pushf
pop
mov
cltd
push
insl
lcall
jo
aas
jle
sub
pop
inc
insb
out
xchg
lret
or
xor
mov
idivl
xlat
xor
cmp
pop
sub
pop
dec
mov
cmc
mov
shll
and
push
fnstcw
daa
cmpsl
sub
sahf
add
mov
into
push
leave
std
or
adc
into
outsl
das
scas
rcrl
xchg
sbb
int3
ja
sti
inc
nop
inc
nop
loop
xlat
lock
popf
ds
sub
cmpsl
cwtl
fwait
test
les
mov
ret
adc
lret
sbb
or
repnz
push
les
dec
dec
push
call
cmc
and
repz
mov
jl
xchg
lsl
lret
adc
cmp
mov
mov
test
scas
les
inc
psraw
loope
clc
jmp
or
xchg
cmp
xchg
cmp
mov
cltd
inc
lcall
mov
in
and
loop
cmpsl
sub
jns
or
xor
and
push
lret
sub
outsb
inc
cmp
cltd
xchg
stos
das
cmp
repnz
mov
mov
xor
js
adc
fiadds
scas
push
inc
push
icebp
pop
into
xchg
push
les
sbb
cmp
push
and
push
add
arpl
imul
dec
mov
adc
inc
mov
mov
sbb
cs
movsb
sbb
insb
jnp
iret
imull
dec
lock
dec
shl
mov
les
pop
sti
jmp
xor
jp
pushf
cmp
cmp
test
mull
mov
pop
cwtl
pop
mov
icebp
int
roll
jae
dec
or
xchg
popa
or
sub
lds
sbb
dec
xor
push
mov
jne
or
addb
pusha
out
xchg
push
mov
add
ds
sarb
cmp
cmp
inc
enter
sahf
lret
push
add
mov
pop
out
dec
fisubrl
lds
outsb
push
aad
pop
cmp
inc
cmp
orb
adc
add
fldenv
orl
int
aad
ret
in
rclb
orb
jmp
fcoms
pop
ljmp
xchg
xor
sbb
addb
add
enter
mov
push
push
lahf
scas
addr16
loopne
adc
repz
std
push
in
inc
into
mov
mov
pop
push
insb
mov
fiadds
mov
mov
adc
fisttpll
sbb
pop
inc
cmp
pop
sti
cmpsl
scas
xchg
jo
or
inc
cmpsb
xchg
fwait
cmp
add
loope
sbbb
jae
jle
adc
dec
ja
sbb
mov
test
inc
cltd
fs
pop
lretw
mov
jbe
add
into
test
mov
ss
cmp
scas
jge
or
xchg
xor
adc
xchg
mov
scas
scas
cld
popa
xchg
mov
pop
add
and
push
std
sbb
lret
test
sub
xchg
aas
adc
mov
sbb
fidivrl
inc
xchg
aas
xchg
sbb
xchg
jnp
cmp
lret
mov
add
mov
fildl
or
sbb
jno
push
andb
stos
ss
xor
clc
fs
sub
push
dec
adc
jge
inc
out
orb
aas
lahf
dec
xchg
xchg
rcr
jle
mov
es
jns
das
add
cmp
cmp
cmp
negl
mov
mov
dec
data16
jg
pop
add
outsl
inc
or
out
jo
xchg
sub
mov
movb
xlat
sbb
mov
ret
test
push
add
les
mov
xor
lret
dec
inc
adc
pusha
adc
stc
add
popa
mov
stc
pop
outsb
aad
cmc
dec
jne
mov
xchg
rclb
addr16
arpl
int
cmpl
mov
mov
add
adc
cmp
fimuls
addb
mov
pop
cld
fwait
sub
push
push
sbb
repnz
xchg
inc
stc
test
imul
mov
lods
lret
xchg
cs
int
inc
aaa
call
mov
test
rcrb
dec
in
in
push
clc
sti
jbe
dec
mov
push
clc
sub
cmp
testl
sub
sbb
fistpl
leave
inc
or
insl
cmp
cld
jne
sarb
daa
test
pop
fildll
push
sarb
push
adc
lret
sub
mov
dec
loop
into
gs
add
lret
mov
clc
pusha
xchg
xor
lahf
lock
loop
cmp
fiadds
fnop
mov
lret
jg
adc
and
inc
lahf
inc
mov
and
hlt
pop
pop
push
inc
mov
mov
cmpsb
pop
inc
and
push
inc
dec
push
mov
lcall
mov
lea
add
ret
push
ljmp
cmc
pop
int
cmp
sub
cli
lea
sarb
or
push
insb
aad
push
xchg
ja
dec
adc
scas
push
cli
mov
lea
add
sbb
pop
cltd
cmp
xchg
mov
insl
push
xor
dec
jbe
dec
cmp
rorl
push
xchg
cmp
cld
add
cltd
aad
lea
pop
lds
xchg
sti
rorb
jg
jge
and
lcall
add
pop
lret
rclb
sahf
xor
push
add
xchg
mov
les
mov
cmpsl
stc
nop
fsts
cmp
inc
cli
pop
scas
sub
out
lcall
or
iret
push
xchg
sub
lock
and
dec
xchg
inc
es
shrl
xchg
lods
inc
enter
cmp
lret
bound
pop
push
movsl
lea
subb
ret
fisttps
dec
loop
loope
mov
test
inc
fisubl
push
fadds
movsl
cmp
fdivrs
or
pop
jg
popf
xor
mov
mov
xchg
and
inc
sbb
mov
cmp
lret
lods
test
lret
xor
cld
cmp
push
jmp
ret
pop
mov
ret
mov
push
mov
xchg
fmull
sub
sub
pop
adc
lahf
inc
orb
bound
mov
add
test
pop
arpl
cmp
cmp
lret
cld
lods
lahf
ficomps
mov
xchg
mov
les
cmc
movsl
stc
nop
xlat
push
cmp
inc
clc
pop
scas
sub
lock
push
in
pushf
push
ljmp
jno
and
dec
xchg
inc
es
shrb
xchg
lods
inc
or
mov
out
bound
pop
xsha1
cmpsb
lea
jmp
fisttps
dec
jecxz
fbld
add
cmpsb
mov
fadds
cmpsb
cmp
or
pop
jg
popf
xor
mov
mov
xchg
and
fnstenv
inc
push
mov
and
mov
cmp
leave
jbe
lods
cmpsl
ljmp
cli
cmp
movd
push
jmp
shrl
lahf
loop
dec
adc
mov
addr16
inc
inc
mov
xchg
fisttpl
movsl
or
jmp
ret
pop
push
or
mov
es
add
xchg
ss
cmp
leave
ret
stos
lahf
fcompl
js
std
mov
xchg
mov
ret
sbb
nop
aad
cmp
inc
notb
scas
daa
push
xor
paddsb
xchg
cs
in
jno
push
popa
mov
xchg
aas
es
shrl
xchg
lods
inc
les
repnz
in
bound
pop
adc
push
cs
pop
sahf
mov
fisubs
add
mov
xlat
andb
clc
cmpsb
cmp
pop
dec
les
sub
jns
jnp
push
lods
repnz
add
mov
and
mov
ror
jne
lods
cmpsb
jmp
xor
stc
cmp
insl
sbb
dec
mov
pop
sahf
loope
dec
adc
mov
adc
xchg
fimull
movsl
or
sub
pop
or
dec
loope
pop
es
add
xchg
xor
push
sbbl
cli
test
loope
dec
cld
mov
xchg
mov
ret
repz
cmp
inc
cmc
pop
scas
es
icebp
cwtl
inc
xor
por
xchg
cs
or
ds
es
shrl
xchg
lods
inc
ret
push
repnz
in
bound
pop
adc
imul
jecxz
frstor
add
movsb
mov
andl
sub
jg
push
dec
les
daa
popf
xor
sahf
loop
sarb
push
lods
icebp
add
add
jne
testl
movsl
call
xor
clc
cmp
insb
sbb
dec
lea
pop
popf
loopne
dec
adc
shrb
adc
xchg
movsl
or
sub
pop
or
lahf
cmp
pop
es
add
xchg
xor
movsb
cmp
mov
ficompl
loope
dec
sti
mov
xchg
mov
rcrl
rcll
cmp
inc
hlt
pop
scas
and
inc
xor
pminsw
xchg
cs
pop
mov
xchg
cmp
shrl
nop
lods
inc
ret
mov
jecxz
bound
ss
pop
sahf
mov
fsubl
add
mov
popa
clc
mov
cmpsb
cmp
add
es
xor
popf
loop
iret
jns
push
stos
lock
incl
mov
and
push
xchg
cmp
lds
lods
movsb
out
icebp
pop
xor
idivl
js
push
push
ljmp
jno
pushf
fidivs
lock
imul
lock
xlat
push
movsl
or
sub
pop
or
mov
lods
pop
daa
mov
scas
inc
fsub
pop
xchg
push
add
jb
cmp
push
sbbb
vcvtsd2ss
cmpsb
mov
jns
stc
mov
xchg
popf
dec
fdivl
mov
cli
xchg
rcll
cmp
scas
and
repnz
inc
ss
mov
adc
xchg
push
jmp
or
or
pop
mov
mov
nop
daa
insl
scas
aam
loope
scas
inc
rolb
mov
int3
arpl
push
adc
data16
flds
dec
in
fisubl
mov
jg
inc
fistpl
mov
sarb
stc
scas
repz
ds
inc
lds
sahf
xor
int3
ja
push
test
lret
fidivl
aas
pop
mov
push
stc
nop
push
xchg
cmp
scas
mov
les
adc
push
jmp
mov
or
mov
shrl
imul
xor
fs
aam
cmpsb
add
es
mov
test
lret
cld
lods
inc
fstp
sbb
fs
xor
cmp
add
pop
mulb
jp
idivl
cwtl
pushf
dec
fdivl
mov
cli
xchg
iret
aad
lock
xchg
inc
ss
mov
adc
xchg
push
jmp
pop
cltd
xor
out
or
pop
mov
lea
nop
daa
imul
inc
mov
arpl
push
adc
cmpsl
xor
fadds
dec
in
fsubs
mov
jle
inc
fistpl
mov
sarl
lods
repnz
and
adcb
inc
pop
js
sahf
xor
lret
jne
push
cmpsl
in
add
sti
and
dec
nop
ds
outsl
pop
scas
mov
ret
repz
adc
push
jmp
xchg
or
mov
aam
pop
or
repnz
rcll
cmpsl
add
jmp
out
lds
or
test
sub
sti
stos
inc
fstp
sbb
and
fs
jo,pn
mov
ret
lds
mov
jnp
cmc
mov
cltd
fwait
dec
fdivl
mov
cli
xchg
int
aas
aas
out
sbb
xchg
inc
ss
mov
adc
xchg
push
jmp
push
lcall
pop
mov
daa
imul
cmc
mov
arpl
push
adc
bound
or
sub
es
jge
inc
fistpl
mov
sarb
stc
stos
icebp
test
pop
incl
jbe
lahf
ss
xchg
in
leave
jae
push
movsl
ljmp
stc
cmp
mov
dec
mov
mov
loopne
hlt
adc
ss
xor
adc
inc
test
or
mov
aad
pop
or
mov
rcll
test
mov
and
das
push
add
dec
in
push
sub
mov
imul
test
mov
dec
sti
gs
sub
test
mov
rol
repz
in
inc
repz
lcall
and
lret
or
xlat
cmp
pop
pop
cmc
nop
ds
into
outsl
mov
adc
nop
push
in
roll
ss
or
mov
sub
xlat
outsb
fisttpll
cmc
mov
fmul
fs
push
adc
popa
movsb
xor
aad
or
daa
aad
mov
jnp
inc
fcompl
mov
into
jns
cli
stos
out
test
sbb
inc
pop
je
mov
jl
jb
push
movsb
call
fdivl
cmp
mov
dec
mov
mov
ficomps
movswl
into
lock
bound
push
in
inc
sbbl
xchg
mov
or
aad
pop
or
mov
iret
adc
jecxz
das
push
add
mov
movsb
push
sub
xchg
imul
test
sbb
std
sub
sahf
dec
test
jle
pop
icebp
lahf
mov
jl
repnz
add
ja
and
lret
xlat
cmp
sbb
mov
jl
loope
push
in
rolb
xor
je
adc
push
mov
sub
xlat
outsb
fildl
cmc
mov
fcmovne
gs
cs
andl
enter
mov
and
inc
insl
add
es
fstl
mov
int3
js
sti
test
lret
sbbb
inc
pop
jb
mov
jl
jno
push
mov
vpcmpeqb
cmp
mov
dec
mov
mov
fcompl
or
jnp,pn
pusha
adc
inc
sbbl
dec
push
mov
sub
daa
aad
pop
or
mov
adc
loope
xor
push
add
in
push
sub
test
insb
add
cmpsb
dec
loopne
push
mov
dec
clc
addr16
sub
inc
pushf
dec
test
mov
mov
jge
lock
add
xchg
inc
fbstp
mov
mov
enter
cmp
sbb
mov
cmp
insb
lods
jge
fisttps
pushf
xor
fbstp
adc
xchg
xchg
sub
outsl
flds
testb
dec
adc
jg
in
test
xor
sarl
mov
and
sub
add
add
push
cwtl
mov
lret
cld
cmpsl
jmp
inc
sbb
ds
mov
jge
outsl
rclb
add
adc
and
dec
mov
mov
ficompl
or
adc
pop
out
aas
jg
xor
sarb
sub
and
mov
cmp
mov
lret
adc
fistps
push
movsl
xor
out
push
sub
add
add
movsb
dec
loope
adc
and
push
inc
lcall
pop
in
fwait
movsb
cmp
push
out
inc
out
ret
bound
ja
mov
mov
movb
fnstenv
out
mov
pop
pusha
testl
mov
mov
fidivs
adc
push
test
xchg
sub
fsubrs
test
lea
fcom
or
stos
jge
out
test
xor
iret
jle
mov
and
sub
add
add
push
xchg
mov
enter
cmpsb
jmp
test
cli
cmp
pop
outsb
sbb
jge
outsb
rcrl
add
adc
fbstp
xor
mov
inc
xchg
mov
sbb
cltd
fcomps
or
jl
pop
or
lcall
sarb
sub
and
insl
push
push
mov
cmp
mov
leave
adc
ficomps
xor
dec
decl
movsl
xor
out
push
sub
add
add
mov
mov
inc
cmc
push
inc
cltd
inc
xchg
in
lcall
aas
in
ret
popa
add
ja
mov
mov
lds
sbb
pop
pop
pusha
testl
mov
mov
fnsave
sqrtps
sub
fsubrs
xorl
sub
shlb
dec
adc
jl
out
test
leave
into
jge
mov
and
sub
add
add
push
xchg
mov
je
std
movsl
call
test
stc
cmp
pop
insl
sbb
jge
insl
rcrl
add
adc
fbstp
xor
mov
inc
test
mov
sbb
cwtl
xlat
pop
cmc
or
jl
pop
or
lock
pop
ja
nop
iret
mov
sub
and
insl
push
add
hlt
mov
enter
stos
lock
sbb
enter
movsl
das
insl
dec
out
push
sub
cmpl
mov
inc
hlt
push
inc
cwtl
inc
xchg
jmp
movsb
cmp
or
jle
in
ret
pusha
add
ja
mov
mov
les
fnstenv
push
pusha
testl
mov
mov
fdivl
push
push
mov
sub
fsubrs
xorb
sub
shlb
dec
adc
jnp
out
test
xor
int
or
lods
out
push
out
iret
sub
add
add
push
xchg
mov
jae
std
movsb
out
inc
sbb
test
clc
cmp
pop
insb
sbb
jge
insb
rcrl
add
adc
fbstp
xor
mov
inc
test
mov
sbb
xchg
pop
cmc
pop
mov
jl
pop
or
cmp
lcall
into
mov
sub
and
insl
push
add
dec
ss
mov
adc
fcompl
xor
dec
std
push
movsl
cs
dec
out
dec
sub
cmpb
loope
adc
and
stos
inc
xchg
inc
xchg
ljmp
jle
jmp
pop
sbb
loopne,pt
jo
and
ret
add
xor
sbb
adc
ss
addr16
adc
mov
or
cs
sub
fsubrs
xorl
addr16
dec
adc
jp
out
test
xor
int3
jnp
mov
push
into
sub
aas
outsb
add
push
xchg
mov
les
mov
lds
pop
push
movsb
cmp
out
mov
fiadds
movswl
ja
xor
mov
inc
addb
gs
cmc
add
es
pop
or
cmp
xor
int3
mov
sub
push
add
mov
adc
ficoml
xor
dec
sti
sub
push
out
dec
sub
add
rorb
lea
icebp
imul
xchg
inc
xchg
jbe
leave
pusha
call
or
jg
ljmp
mov
and
loopne
call
xor
sbb
clc
test
jg
fadds
popf
xor
fidivl
or
mov
sub
mov
mov
mov
testl
js
out
xchg
xor
lret
movsb
stos
jmp
call
cmp
dec
loope
nop
lea
jno
jmp
les
pusha
push
mov
jle
push
pop
pushf
faddl
js
and
inc
addb
arpl
mov
rcrb
add
jge
push
or
cmp
xor
lret
cld
lods
xchg
fistps
mov
xor
lea
ret
adc
hlt
cmpsb
repnz
adc
adc
cltd
dec
lds
push
in
popf
dec
jecxz
or
push
and
inc
xchg
inc
mov
je
lret
xchg
cmpsb
cmp
cmp
les
pop
pop
sahf
mov
loop
insl
lods
and
xchg
mov
loope
mov
push
popa
clc
xorl
shll
push
test
mov
popf
xor
fdivrs
or
push
jge
xchg
sub
sarb
dec
mov
testl
jbe
lock
xor
enter
test
lret
sub
cld
cmp
insl
sbb
lea
outsl
imul
adc
xchg
cmc
xor
pusha
pushw
cmpsb
cmp
mov
fiaddl
jns
sub
mov
inc
jle
fsubrs
rcrb
add
jge
push
pop
pop
repz
xor
enter
lods
cwtl
das
ficomps
fsubrs
pushl
lea
ret
rep
repnz
adc
lret
adc
cwtl
dec
lds
outsl
push
jmp
dec
jecxz
or
and
and
inc
xchg
inc
mov
jae
lret
xchg
cmpsb
cmp
cmp
les
pop
pop
sahf
mov
loop
insb
lods
and
xchg
mov
loopne
mov
push
popa
clc
xorb
shll
jg
aad
pop
icebp
mov
popf
xor
xlat
js
or
push
jl
xchg
sub
iret
jge
dec
scas
lock
jne
lock
xor
ja
movsl
test
push
call
sti
cmp
insb
sbb
loop
lea
add
ret
hlt
xor
pusha
gs
out
mov
flds
jns
sub
mov
inc
jge
fsubrs
iret
pop
testb
cmp
adc
push
pop
repz
je
xor
mov
das
fstpl
fmuls
xor
stos
mov
pop
mov
gs
test
aad
xor
jp
insb
jmp
xor
xor
add
stos
push
fildll
xchg
or
mov
repnz
xorl
mov
daa
lds
das
adc
add
pop
mov
mov
cmp
mov
shrd
push
iret
jmp
dec
in
xchg
cmpsl
pop
jle
sahf
int3
jmp
cmp
xor
lea
sbb
adcl
lds
adc
in
jb
cmpsb
int
cld
mov
mov
out
mov
or
aaa
sti
ret
push
or
jne
in
xor
ja
sbb
push
cmp
jb
dec
mov
sub
xchg
shlb
cmp
cmp
leave
inc
mov
int3
ja
pop
add
inc
out
pop
cmp
shll
adc
inc
adc
xor
and
mov
in
in
pop
dec
adc
push
std
xchg
loope
push
mov
cmp
jns
clc
lea
push
xor
je
mov
subl
jg
push
and
inc
leave
lret
lods
aaa
repz
ljmp
outsb
ja
xchg
add
mov
loopne
dec
pop
imul
arpl
sahf
sbb
push
arpl
addr16
in
sub
movsb
aam
pop
cmpsl
and
incb
xchg
cld
shll
or
aad
scas
sub
lods
inc
jge
dec
jo
icebp
or
rclb
mov
popa
fsubs
call
xor
inc
xchg
mov
sbb
mov
pop
sub
arpl
xor
fldl
es
sub
jae
movsb
add
ret
xorl
add
add
xor
add
add
add
add
fsub
jge
jg
mov
or
pop
mov
int3
dec
lcall
scas
cmpsl
and
and
mov
fisttpll
xchg
stos
dec
or
mov
int3
rclb
ja
sub
xlat
sbb
lahf
cmp
or
inc
dec
or
into
sub
add
lds
jae
mov
mov
inc
decl
pop
inc
and
sbb
fidivrl
out
pop
cld
or
test
pop
or
outsl
dec
push
push
add
add
add
cmp
sub
mov
and
mov
rorl
push
mov
scas
pminsw
cwtl
dec
sub
outsb
cmp
mov
in
cmp
and
adc
and
dec
lods
push
mov
xchg
xchg
mov
sarl
push
sbb
in
rclb
out
cwtl
sbb
and
pop
out
pop
add
ljmp
cmp
jle
dec
push
xor
repz
das
and
rorl
or
xor
lea
pop
or
add
nop
inc
mov
pushf
xchg
mov
xchg
lods
sbb
hlt
fistl
clc
xchg
pop
shrl
and
and
jge
xor
enter
jno
add
jns
or
push
pop
mov
decb
pop
negb
adc
mov
lock
call
lds
pusha
clc
stos
movsb
popa
push
stos
push
push
popa
push
shr
push
xchg
pop
push
stc
jp
mov
add
stos
xchg
js
sbb
out
gs
xchg
add
das
push
test
sbb
pop
mov
das
int3
pop
pop
xor
adc
stc
int3
push
cmp
adc
scas
or
sbb
dec
lea
imul
mov
popf
inc
mov
adc
bound
adc
xchg
or
cmc
das
cmc
push
sbb
dec
push
lahf
cwtl
out
addr16
out
addr16
cs
cmp
pusha
cmp
shr
scas
repz
aas
out
outsl
mov
xchg
mov
fnsave
das
lds
inc
pop
hlt
or
mov
insb
cltd
nop
xor
sbb
icebp
xchg
pop
xor
fs
adc
cli
cmpsl
mov
imul
mov
pop
shll
unpcklps
xchg
shr
addr16
fnstsw
test
int3
lret
cwtl
mov
mov
aas
sub
or
je
mov
cld
insb
mov
imul
fwait
aaa
push
cmp
xorl
fs
fwait
mov
jns
fs
push
push
xchg
xor
sub
test
leave
in
rolb
jae
rcr
xchg
xor
mov
sbb
lret
dec
inc
shlb
jno
loop
lds
and
jmp
push
fisttps
ror
out
loop
popf
fs
xchg
xchg
mov
es
push
mov
adc
jnp
sbb
nop
jne
and
mov
insl
movsl
dec
fstpl
mov
sti
rcrb
loopne
test
mov
js
out
xchg
mov
mov
sbb
cwtl
loop
and
and
push
sti
clc
or
dec
insl
or
add
push
lret
xor
out
dec
rclb
inc
cmpsb
ret
out
aas
rcrl
ds
fnstcw
ljmp
sbb
cs
mov
adc
inc
in
xor
jae
or
shll
std
add
xchg
js,pt
or
push
scas
add
scas
repz
stos
aas
orl
scas
jle
in
outsl
inc
mov
mov
sbb
push
in
and
xchg
mov
pop
int3
push
clc
jae
incb
sub
xlat
incl
dec
jne
push
sub
mov
js
push
insl
fcompl
inc
add
push
mov
add
cmp
push
scas
rcrb
movsb
aas
fsubl
and
inc
mov
call
mov
jnp
push
jle
out
lods
inc
shll
leave
xor
adc
aaa
mov
jp
or
and
xchg
xchg
daa
jns
cmpsb
jae
xchg
mov
clc
fisttpll
clc
leave
jl
iret
or
ret
jo
lahf
rclb
das
pusha
pop
jmp
push
and
int3
fisubrs
xor
aad
clc
jae
sub
call
push
push
or
push
pop
mov
pop
test
pushf
hlt
or
fstp
in
sub
sub
inc
mov
nop
adc
xchg
test
mov
popa
add
dec
mov
decb
push
xor
fwait
xor
xor
xor
cltd
ret
inc
mov
xchg
jns
int3
add
add
ret
leave
cld
cli
sbb
jo
mov
and
mov
cmpsb
mov
rorb
cmp
loope
mov
es
jae
jbe
ret
dec
mov
xchg
das
mov
and
sub
sub
and
out
jecxz
fwait
jb
or
hlt
pop
push
notl
jmp
inc
bndldx
inc
aad
lock
insl
out
adc
adc
mov
lcall
je
stc
xor
dec
lret
inc
adc
add
roll
mov
xchg
cmp
aaa
lret
out
outsl
popf
sub
xchg
aad
js
in
xor
pop
je
rcll
jbe
mov
mov
add
mov
in
sbb
cmp
dec
and
xchg
out
mov
cmp
mov
test
movsl
push
jbe
add
cli
arpl
cltd
push
or
in
jbe
stos
mov
pop
stos
and
jbe
lret
cli
pslld
sti
ja
insb
lret
mov
jae
cmp
xor
xor
xor
lcall
adc
mov
in
adc
sub
lods
fisttpl
popa
push
lahf
scas
pusha
dec
mov
cmp
dec
push
pop
psrlq
xchg
adc
cltd
add
gs
std
mov
lock
fstps
inc
mov
push
cmp
enter
repz
aas
icebp
dec
mov
scas
ja
pop
into
lcall
into
cwtl
imul
into
xchg
imul
ss
popa
into
xchg
insl
xor
xchg
outsl
addr16
lcall
clc
repz
mov
xor
and
mov
push
hlt
out
push
xlat
sub
jae
mov
lea
fimull
