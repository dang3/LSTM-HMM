decl
data16
dec
inc
insb
mov
jno
popa
cmp
add
lcall
adc
adc
pandn
mov
cmpsb
sbb
out
xor
mov
push
sbb
call
sbb
jg
mov
subl
mov
sbb
push
inc
addr16
lods
in
popa
leave
stos
inc
iret
fldl
sbbb
mov
pop
stos
xchg
fstps
pushl
push
addl
xchg
xchg
adc
push
mov
fsub
mov
pop
push
dec
dec
xor
jecxz
bnd
dec
sbb
cmc
cld
mov
lock
lea
imul
inc
cs
lcall
dec
cs
clc
fists
xor
sti
cmp
xchg
mov
cli
sbb
pushl
jns
cmpsl
pop
sbb
jecxz,pn
in
in
sub
in
adc
mov
cwtl
cmp
xchg
cwtl
lcall
or
cmp
or
sbb
mov
fisttpll
outsl
add
xchg
popa
jg
orb
arpl
incl
loop
mov
imul
test
int3
mov
imul
inc
sub
jmp
mov
lods
shr
fs
data16
dec
xchg
clc
shll
imul
lret
pop
sub
sarl
call
out
loopne
jnp
xchg
daa
push
orb
jae
insb
push
test
lods
stos
jo
popa
sbb
jmp
inc
in
loopne,pn
lds
insl
je
push
sbb
bound
and
inc
cmc
mov
xor
ljmp
pop
jge
cld
or
xchg
xchg
mov
decb
popf
into
mov
lcall
pop
cmc
in
jg
std
es
repz
lods
jmp
xchg
in
insb
ljmp
nop
jge
dec
imul
fwait
imul
and
inc
mov
mov
ljmp
cmp
lea
mov
outsl
adcl
cmp
clc
ret
mov
cltd
adc
stc
test
lcall
dec
into
fsubs
dec
aaa
ds
stos
js
hlt
mov
subb
outsl
xchg
jmp
fstps
add
faddl
arpl
sub
rorb
fildl
inc
aas
xlat
add
jmp
lods
mov
movsl
mov
lcall
add
and
in
jge
lcall
add
ret
insl
cmpb
mov
data16
sub
mov
sbbb
cmp
lret
push
je
mov
cmp
pushl
xor
ret
nop
xor
nop
inc
inc
ja
push
xor
mov
or
pushl
xchg
or
addr16
mov
daa
fsubs
shl
js
scas
bound
and
das
cli
pushl
jge
dec
icebp
xchg
mov
aas
scas
push
or
xor
adc
or
call
pop
ss
xchg
popf
lods
xor
jo
dec
clc
sub
pop
inc
fnstsw
mov
popf
xor
mov
or
enter
hlt
rclb
shll
scas
inc
pop
jo
das
cli
dec
dec
sbb
outsb
pop
lea
pop
sbb
xor
ds
es
mov
cld
mov
jne
sbb
xorl
jb
mov
lods
xor
fcomip
call
lds
scas
mov
hlt
mov
mov
inc
inc
rcl
cli
pushl
pop
pop
shll
sub
and
mov
gs
lds
pop
sub
cmp
mov
jns
xor
ljmp
repnz
in
and
add
pop
test
xchg
shll
sub
js
ss
or
cli
pop
mov
outsl
push
xorl
cmp
js
adc
pushf
dec
sub
xchg
and
in
sti
or
xchg
ljmp
in
or
loop
test
mov
xor
int
pop
and
dec
mov
push
cld
call
pop
cmp
xor
push
pop
shl
jp
testl
pop
ret
rcrb
dec
add
adc
jl
lea
imul
dec
pop
or
call
stos
ljmp
mov
dec
je
aad
les
xchg
mov
adc
sub
mov
jmp
mov
inc
sub
sarb
fdivr
lea
cmp
or
sbb
push
outsb
sbb
xchg
repz
sarl
call
push
lahf
iret
inc
xchg
dec
arpl
mov
xor
in
call
in
push
add
add
inc
sbb
cmc
mov
jne
dec
out
jl
mov
decl
fsubs
popa
rcrl
cmp
nop
js
ljmp
aam
xor
bnd
sbb
inc
lret
stc
movsb
adc
inc
mov
add
loop
adc
inc
insl
arpl
xor
pushl
mov
lret
lea
ja
cmp
pop
push
daa
les
ds
cld
loop
ret
xor
cmp
push
stos
sahf
cmp
fistpll
loop
orl
cmp
test
sbb
jmp
cwtl
mov
and
xchg
inc
pop
mov
outsl
push
inc
je
int
ja
cmpsb
push
das
push
sub
decl
jb
int3
cmpsl
jge
cwtl
mov
push
hlt
sbb
sbb
mov
mov
repz
mov
adc
outsl
dec
sbb
addl
insb
adc
mov
les
push
ret
iret
and
hlt
xor
aam
adc
cwtl
adc
push
call
das
scas
xor
test
ljmp
sbb
iret
cltd
add
or
decl
ret
imul
push
xor
dec
mov
adc
outsb
jg
in
push
mov
push
and
and
xor
jae
pop
cmp
es
call
stos
jmp
rolb
and
jns
stc
add
inc
jecxz
push
mov
push
jmp
inc
js
inc
cmp
loope
cmovns
cld
int3
jnp
sar
mov
mov
repnz
inc
lods
insb
repnz
out
xor
std
xchg
lahf
test
out
sub
sub
out
cld
sbb
into
xlat
add
push
test
mov
adc
xchg
out
jmp
gs
sub
lahf
addr16
into
and
mov
pop
imul
lret
push
icebp
enter
fbstp
mov
fldl
xor
or
dec
lock
andb
and
call
adc
xlat
mov
fstl
jo
push
lods
lods
pusha
in
idivl
jae
jbe
ret
call
and
push
shl
add
stc
bound
adc
and
aad
jns
pop
add
ljmp
jbe
popa
dec
mov
movsl
mov
cmpl
clc
mov
dec
lcall
shrl
je
pop
pop
outsb
cmpsb
xor
pushf
add
leave
mov
push
jmp
mov
out
xchg
aas
pop
or
and
popa
out
push
fwait
mov
adc
xlat
ret
mov
cwtl
movsl
fsubrs
add
cmc
insb
incl
xchg
in
cmp
sub
popa
mov
daa
icebp
rep
loopne
or
lcall
jne
xchg
inc
movsb
shlb
cwtl
or
fcomip
xchg
push
xor
addr16
sub
jmp
mov
xchg
stos
notl
push
jl
inc
scas
inc
mov
add
mov
and
pop
sbb
out
push
aas
stos
pop
pop
cwtl
sahf
cwtl
out
test
add
jno
mov
ljmp
aad
inc
xor
jmp
clc
mov
cmpsb
sub
sbb
sbb
xor
iret
incl
gs
inc
sub
sub
xchg
sar
out
push
jno
sahf
mov
mov
jmp
cld
push
xor
das
outsb
jae
mov
mov
jmp
jp
subb
std
incl
insb
test
xchg
sbb
nop
dec
cltd
cmp
xchg
outsb
push
jmp
repnz
ljmp
mov
fsubl
xchg
fwait
mov
into
mov
testl
mov
cli
decl
sbb
nop
insl
test
fisubrl
push
sub
adc
jae
mov
jge
xchg
xorl
test
xor
les
push
mov
bound
test
sub
or
jo
add
pop
cli
mov
add
lcall
push
pop
jmp
push
mov
or
lcall
inc
mov
sbb
pop
enter
add
push
or
out
or
into
jne
lcall
jae
ds
sub
icebp
or
das
xchg
mov
add
adc
decl
rolb
in
push
push
jae
mov
cmp
mov
xor
mov
ret
mov
mov
sub
mov
mov
cmpl
mov
xchg
cmp
mov
mov
dec
and
mov
pop
mov
dec
mov
mov
mov
mov
mov
std
pop
push
imul
sbb
imul
test
inc
push
jns
iret
jbe
mov
dec
sub
sbb
mov
push
mov
mov
clc
jae
fxch
jle
decb
test
nop
dec
add
push
mov
iret
ds
cmc
nop
pandn
shrl
rorb
add
sub
jnp
pop
add
inc
adc
jne
jae
test
mov
pushl
inc
loopne
ret
push
push
js
mov
cld
mov
sahf
mov
andb
jmp
pop
cmp
jmp
popa
gs
push
out
adc
or
push
push
jle
mov
xchg
and
bound
inc
jns
inc
add
push
jnp
test
xor
add
jecxz
int
jmp
loopne
cmp
cli
out
pop
rolb
leave
lret
jne
jge
jbe
inc
insl
sub
scas
jmp
mov
mov
andb
add
adc
add
or
adc
push
sarl
adc
add
cmp
lahf
test
mov
and
fwait
in
in
cmp
mov
test
inc
xor
pop
imul
push
sub
dec
push
test
pushl
outsb
into
add
or
xchg
cltd
js
addr16
ss
das
fmulp
pop
cltd
push
decl
std
aaa
mov
push
enter
jo
mov
fisubl
call
loope
pop
lahf
lret
sub
mov
push
mov
imul
dec
es
or
lcall
adc
subb
cld
mov
scas
hlt
out
sar
dec
xchg
add
dec
sbb
dec
xor
mov
push
sub
enter
jg
mov
shl
sbb
cmpsb
sbb
sub
mov
adc
decl
pop
xor
mov
sbbb
mov
popa
testl
sti
push
jle
clc
and
fs
fiaddl
or
and
jbe
jbe
cmp
push
cmp
mov
sub
or
fisttpl
rcll
imul
in
andl
add
xchg
loopne
add
imul
flds
sub
sbb
std
or
mov
sub
imul
sbbl
add
push
mov
mov
or
inc
mov
adc
inc
xchg
mov
pop
incl
call
add
push
ret
jo
movsl
je
andb
mov
sub
aas
mov
std
cmpsl
sbb
cwtl
fwait
mov
lea
shll
pop
enter
nop
inc
add
inc
push
add
add
and
subb
test
adc
xchg
pushf
test
fldl
loopne
jb
add
loope
stos
inc
dec
add
stos
in
push
xor
add
push
sub
or
and
push
and
mov
popa
inc
push
and
push
cmp
orb
adc
push
leave
sar
sub
add
and
and
sub
add
add
xorl
orb
pop
inc
add
nop
push
add
mov
or
pop
inc
loopne
ja
mov
pop
xor
xchg
cmpsb
jno
dec
stos
loope
pushf
sub
fistl
dec
nop
ror
mov
popf
pushl
sub
cmp
mull
xlat
sbb
push
push
test
mov
lret
call
jle
mov
lock
mov
fnstenv
fstpl
pushl
cmp
ljmp
std
and
fisttpl
pop
xor
outsl
or
nop
push
adc
pop
adc
mov
scas
out
or
mov
fidivrs
jp
sahf
adc
ljmp
mov
pushf
sarb
xchg
xchg
jmp
aad
fld
out
aad
insl
and
mov
lock
testl
mov
xor
in
jno
bound
scas
repz
ficoms
into
ret
mul
lea
xchg
ret
leave
rol
lea
xorl
pushl
not
out
xor
test
and
negl
pop
aas
adc
lahf
xor
push
dec
mov
jp
js
dec
subl
push
sbb
and
bnd
pushf
scas
and
les
incl
sbb
or
sbb
xor
and
inc
lcall
adc
adc
xchg
push
incl
test
inc
mov
cmp
ret
sbb
xchg
push
push
xchg
incl
jecxz
pop
fildll
test
or
popf
push
scas
out
jl
sub
or
jmp
jb
xchg
rclb
lock
push
out
jl
aaa
test
mov
jo
inc
or
outsl
decl
xchg
sub
pop
cmp
cmp
jbe
mov
int
ds
cmpl
jg
mov
push
dec
cs
fmuls
or
aad
mov
dec
jle
lcall
pushf
cmpb
scas
sbb
iret
popa
leave
pusha
jnp
mov
push
xor
into
mov
outsl
fdivr
incl
sub
cs
aas
push
dec
push
popf
inc
mov
iret
lods
std
pop
subl
jecxz
insl
lock
inc
jge
sbb
dec
test
mov
rcrb
call
or
mov
mov
cmp
push
adc
out
jnp
push
mov
cmpsb
cmp
cmc
ljmp
mov
fs
mov
and
flds
mov
cmp
aam
jecxz
test
cmpl
push
push
sub
mov
inc
add
add
enter
add
or
inc
and
xgetbv
pop
in
push
adc
inc
lods
mov
cmp
xlat
push
or
daa
paddq
pop
sub
iret
in
push
ljmp
mov
and
and
cwtl
shll
or
pop
sbb
pushl
out
sub
nop
aad
mov
insl
sub
shlb
aam
dec
call
es
jmp
xchg
cmc
rorb
inc
ret
imul
orl
sbb
ljmp
out
or
mov
pop
and
push
xchg
lea
inc
mov
xor
mov
aas
jle
outsb
pop
es
shrb
pop
inc
cmpsl
xchg
push
xorl
inc
mov
cmp
mov
xchg
add
outsb
pop
fsubrs
dec
inc
mov
nop
sub
mov
xchg
inc
cmpsb
xchg
pop
jp
mov
lea
popa
mov
das
inc
cs
mov
mov
dec
dec
and
lea
rorl
mov
adc
mov
into
fdivr
jg
lea
pushf
push
pop
mov
push
pop
xorb
or
push
pop
pusha
hlt
and
xor
mov
pop
sahf
out
pop
bound
lea
xchg
test
and
scas
mov
sarl
sub
lahf
out
pop
out
push
dec
mov
insb
jecxz
cmpsl
inc
and
inc
incl
push
mov
pop
pop
mov
outsb
mov
mov
xchg
ja
xorb
push
and
pop
sub
idiv
mov
pop
mov
mov
xchg
jl
mov
clc
outsl
mov
sbbb
mov
mov
and
cmc
aad
out
loopne
std
aas
dec
or
negb
mov
sub
stc
inc
push
aad
sub
or
imul
xor
xorb
sbb
and
es
xchg
mov
sub
mov
test
gs
imul
push
popf
jge
sbb
jbe
inc
inc
sahf
outsl
pop
lock
mov
xchg
scas
mov
lcall
pop
lock
sbb
pop
jecxz
pop
out
inc
in
mov
stc
int
test
mov
lods
mov
mov
sahf
loop
in
inc
stos
pop
mov
mov
rcr
loopne
mov
xlat
mov
pusha
sbb
push
movsb
fldt
shlw
testb
mov
sub
push
sti
pop
sti
dec
stos
addb
inc
pop
push
das
push
xor
jnp
es
pop
push
xor
sub
inc
fidivs
mov
movsl
scas
sub
in
inc
sub
cmp
jle
ss
jg
dec
sarl
out
in
imul
fwait
inc
lea
pushf
test
inc
jbe
inc
jl
outsb
mov
movsl
mov
ret
outsl
decl
sbb
rcll
test
out
test
in
jg
fistps
cmpsl
xlat
in
sub
lods
nop
stos
mov
scas
stos
cmp
sub
idiv
sbb
jge
loop
daa
push
nop
cld
and
and
outsb
pushl
in
movsb
imul
into
pusha
xlat
xchg
mov
mov
decl
fwait
mov
fs
cltd
sub
es
sti
sahf
mov
sbb
mov
pop
ljmp
push
and
sar
popa
mov
insb
in
xchg
insb
dec
mov
xlat
stos
mov
popf
mov
lcall
decb
and
push
insb
fsub
les
pop
cwtl
dec
jle
out
fcomp
sti
pushl
or
pusha
lods
pop
shlb
out
cmc
idivl
outsb
push
fst
xor
jg
or
pop
mov
add
andb
jle
mov
jg
div
les
pop
cmpsb
jne
adc
xor
sahf
data16
aas
mov
jmp
and
push
pop
xchg
xlat
push
cs
xor
pusha
popa
mov
jg
incl
sub
je
xchg
pop
lods
sub
test
adcl
pop
insb
ljmp
in
sub
out
mov
outsb
sbb
pop
xor
int
out
mov
pop
rep
add
lret
outsb
add
ljmp
push
xchg
sahf
popa
enter
into
mov
inc
cmpsl
and
aad
sub
pop
js
ss
mov
pop
and
ljmp
sbb
xchg
jmp
iret
in
cltd
and
and
xor
pop
scas
push
sub
mov
jb
aad
outsb
jle
ret
xor
imul
adc
sub
in
sub
test
sbb
idiv
pop
ljmp
cmpsl
jno
ja
sub
xor
mov
hlt
jmp
out
cmp
shl
inc
outsb
push
dec
jg
jbe
and
int3
fidivs
jbe
outsb
ja
mov
mov
jl
mov
push
test
xlat
lcall
mov
mov
lods
in
sbb
jbe
lea
mov
jo
pop
out
xor
xor
pop
hlt
xchg
adc
xchg
push
ret
or
inc
dec
sbbb
test
add
xchg
icebp
scas
mov
imul
dec
mov
in
and
inc
fnstsw
hlt
outsb
cltd
cli
mov
mov
outsb
imul
decb
ret
or
aas
inc
je
out
mov
add
jns
mov
loop
jg
sub
mov
hlt
sub
mov
mov
test
in
insl
pusha
sbb
and
sub
cmp
notb
sub
jmp
ss
rolb
enter
imul
mov
pushl
xchg
dec
pop
repz
ficoml
pusha
shlb
inc
adc
leave
ret
les
call
push
out
loope
movsb
mov
testb
push
cmp
bound
push
inc
jno
pushl
jns
dec
dec
inc
jo
dec
dec
dec
jbe
xor
dec
dec
insl
jo
xor
xor
push
ljmp
pop
inc
dec
jae
jp
inc
xor
addr16
jbe
push
outsl
jns
jb
inc
gs
dec
push
dec
cmp
outsb
dec
jp
dec
gs
push
jb
push
push
addr16
pop
insb
popa
imul
js
decl
pop
jne
outsb
inc
push
insl
dec
dec
push
push
inc
imul
gs
jo
jo
pushl
inc
imul
insb
jno
inc
outsl
dec
xor
jb
xor
xor
jno
dec
jne
jno
insl
mov
imul
inc
dec
call
push
insl
jbe
xor
je
inc
jo
popa
mov
outsb
js
dec
dec
jno
jae
mov
inc
in
push
push
xor
aaa
jmp
jbe
jb
dec
jae
dec
push
je
xor
push
insl
dec
inc
jbe
push
imul
js
das
clc
or
ss
push
fs
xchg
jns
inc
xor
hlt
xor
decl
inc
dec
dec
insb
push
push
insl
mov
imul
divb
cld
call
push
inc
gs
insl
inc
push
cmp
lret
push
imul
movsb
sbb
mov
xor
jo
and
mov
decl
pushl
pop
xor
je
inc
ss
push
rorb
push
ss
sti
sbb
xor
data16
dec
dec
push
ja
inc
push
xor
xor
jg
pop
inc
push
jno
xor
inc
js
dec
data16
dec
push
push
pop
inc
inc
push
and
data16
fnstcw
mov
xchg
add
add
mov
add
pop
xchg
pop
cmp
xor
add
mov
ror
sbb
add
repz
lcall
pop
repnz
dec
loopne
lock
add
or
adc
pop
repnz
dec
and
faddl
das
movsb
cmp
push
push
or
and
test
and
mov
jge
xchg
pop
cmc
inc
cmp
and
ja
inc
sub
addr16
mov
jbe
push
or
push
mov
adc
and
insb
aaa
inc
push
adc
adc
push
sub
sbb
sbb
jbe
fstps
xor
inc
fwait
add
mov
rorb
imulb
sahf
loop
loopne
inc
xor
mov
mov
ret
xchg
dec
dec
mov
push
mov
jo
negl
cmpsb
xchg
push
xchg
adc
outsl
les
and
jmp
idivb
daa
out
dec
test
dec
out
outsb
push
popf
inc
test
pop
jnp,pt
js
rolb
pop
rolb
mov
cmpsl
xor
fsubs
adc
lock
sarl
push
inc
xchg
or
mov
sbb
adc
cmpsl
cmp
sbb
xor
cs
popa
push
xchg
jbe
pop
adc
pop
mov
loop
xlat
inc
fmulp
fistpll
push
cmpsb
test
or
pop
jbe
pop
jge
lock
test
outsl
outsb
push
cmp
mov
cmp
inc
adc
fnstenv
sub
pop
xor
cmp
sti
nopl
aas
leave
mov
sub
data16
fisubl
pop
push
jo
out
fldcw
icebp
sarl
add
mov
nop
sar
data16
push
mov
jmp
pushl
jns
mov
push
out
mov
sti
or
lds
jge
sti
fiaddl
das
jge
insb
les
iret
lock
jb
jmp
call
out
into
loope
lods
fdivrs
daa
push
jae
loop
pop
inc
icebp
dec
fucomi
dec
mov
scas
ds
mov
lds
in
xor
push
shrl
out
or
ja
push
pop
imul
gs
xor
cs
insb
pop
inc
mov
fistps
gs
inc
jb
je
arpl
push
arpl
outsl
outsb
cs
gs
jbe
mov
aad
add
pop
jb
dec
outsb
and
std
aad
and
imul
inc
jb
fldt
outsl
arpl
or
pop
in
lods
loopne
xor
push
xchg
imul
call
pop
push
jne
jns
push
outsw
jb
popa
outsb
arpl
sbb
fildll
push
push
adc
sbb
jb
mov
push
push
fs
push
mov
pop
sub
fs
das
fstpl
data16
dec
jmp
cld
fldt
loop
popa
jb
outsl
dec
jne
mov
jns
sub
das
int3
pop
sub
sub
movsb
add
sti
mov
inc
add
arpl
sbb
testb
dec
jns
js
push
dec
and
push
cmc
and
popa
divb
mov
jbe
rolb
push
jb
inc
fs
jae
imul
or
gs
push
or
inc
mov
arpl
insl
sub
mov
inc
mov
cmp
sbb
insl
mov
pop
imul
sbb
fs
jb
xor
fisubrs
jae
sub
imul
in
shr
push
push
outsb
push
jo
mov
adc
fwait
push
outsl
neg
ss
and
dec
data16
push
je
sub
cmpl
popa
imul
mov
pop
in
mov
sbb
pop
and
xchg
xchg
rcl
outsb
jno
adc
push
gs
sbbl
jae
int3
mov
outsb
addr16
fsubl
gs
outsl
mov
mov
jmp
push
inc
jbe
jo
adc
addr16
add
or
mov
mov
mov
mov
popa
jne
jg
jns
mulb
sbb
pop
pop
aas
and
dec
mov
daa
lret
in
loopne
sbb
or
jno
cmpsb
leave
inc
out
push
xor
sub
mov
lcall
push
insb
push
dec
bound
repz
jo
cmpsb
pop
cwtl
pop
or
scas
loop
mov
xlat
fldl2e
mov
mov
jne
cmp
roll
adc
lret
sub
fstps
xchg
arpl
and
test
fimull
add
mov
cwtl
loopne
jo
lods
popl
jne
insb
inc
insb
push
sbb
adc
xchg
sahf
jae
mov
jo
jae
inc
push
mov
xchg
sub
fistl
xorb
rclb
inc
sbb
rclb
ret
frstor
adc
insl
add
inc
loop
int
mov
insl
inc
or
xor
jo
loop
movsb
mov
movsl
mov
jmp
mov
sti
push
sbb
or
add
out
imul
inc
push
loopne
pusha
xor
lds
pushf
add
data16
in
jmp
ret
fistl
push
xor
inc
imul
sub
stos
xchg
cwtl
rcrb
movsl
jecxz
pusha
jno
inc
int3
idivl
icebp
push
jo
add
xor
and
cmp
adc
jbe
and
aaa
js
jo
lock
movsl
shr
jecxz
outsl
push
fdivs
pop
inc
inc
cmpsl
push
xchg
and
inc
daa
sbbl
je
incl
jne
cld
roll
push
dec
addr16
or
push
push
test
in
out
xchg
pusha
mov
sbb
fdivs
in
fldl
inc
sbb
lret
xlat
mov
mov
dec
xchg
addl
dec
add
xorl
and
adc
subl
push
inc
add
adc
enter
nop
inc
add
add
push
incl
xor
orb
adc
shlb
mov
fs
add
add
nop
inc
add
inc
push
add
add
call
stos
test
push
add
sub
or
test
push
add
sub
mov
add
adc
les
ljmp
test
pop
add
xorl
and
adc
inc
push
add
add
incl
adc
enter
nop
inc
add
add
mov
add
test
add
nop
inc
stos
and
mov
inc
push
and
test
add
adc
or
test
push
add
subl
inc
add
fs
add
nop
push
add
test
mov
push
adc
sub
test
pop
add
xorl
and
adc
inc
push
add
add
add
adc
leave
and
add
orb
adc
test
mov
add
and
add
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
adcb
jmp
mov
adc
cltd
scas
dec
inc
insb
mov
jno
popa
cmp
incl
sub
adc
adc
pandn
mov
cmpsb
sbb
out
xor
pushl
jb
inc
jae
mov
mov
jb
push
mov
sbb
xchg
dec
mov
jmp
pop
mov
leave
lods
in
popa
leave
stos
inc
iret
fldl
sbbb
mov
pop
stos
call
fdivs
push
addl
xchg
xchg
adc
push
mov
fdivr
jmp
mov
pop
push
lret
dec
xor
jecxz
bnd
dec
sbb
cmc
cld
mov
lock
lea
imul
call
push
pushf
or
pop
dec
cs
clc
fists
xor
sti
cmp
xchg
mov
jmp
out
cli
sbb
or
aas
jecxz,pn
in
in
sub
in
adc
mov
pushl
cwtl
sbb
cmp
or
sbb
mov
fisttpll
outsl
add
xchg
popa
jg
orb
arpl
loop
mov
imul
test
int3
mov
imul
incl
xchg
cmc
arpl
in
fs
data16
dec
xchg
clc
shll
imul
lret
pop
sub
call
sarl
stc
out
loopne
jnp
xchg
daa
push
orb
jae
insb
push
test
lods
ljmp
lret
daa
inc
in
loopne,pn
lds
insl
je
push
sbb
bound
and
inc
cmc
mov
inc
scas
scas
and
pop
jge
cld
or
xchg
xchg
mov
decb
popf
into
jg
dec
mov
inc
xchg
jae
pop
cmc
in
jg
std
es
repz
lods
jmp
jmp
nop
jge
dec
imul
fwait
imul
and
inc
mov
dec
mov
pop
pop
cmp
lea
mov
outsl
adcl
cmp
clc
ret
mov
cltd
adc
stc
incl
loop
into
fsubs
dec
aaa
ds
stos
js
hlt
mov
subb
outsl
xchg
ljmp
jmp
pop
and
faddl
arpl
sub
rorb
fildl
inc
aas
xlat
add
push
mov
movsl
mov
lcall
add
and
jmp
in
rcrb
add
ret
insl
cmpb
mov
ljmp
data16
sub
sub
cmp
lret
push
je
mov
call
in
and
xor
ret
nop
xor
nop
inc
inc
ja
push
xor
mov
decl
into
xchg
or
addr16
mov
daa
fsubs
shl
js
scas
bound
xor
fbstp
jge
dec
icebp
xchg
mov
aas
scas
push
or
xor
adc
decl
cwtl
inc
cmp
pop
ss
xchg
popf
lods
xor
jo
dec
clc
sub
pop
inc
fnstsw
mov
lcall
and
xor
or
enter
hlt
rclb
shll
scas
mov
pop
jo
enter
outsb
pop
lea
pop
sbb
xor
ds
es
jg
cmp
mov
repz
sbb
xorl
jb
mov
sbb
xor
out
xchg
cmp
lds
scas
mov
hlt
mov
mov
incl
rcl
xor
shll
sub
and
mov
gs
lds
mov
pop
push
int
lret
xchg
or
push
sarb
in
and
add
pop
test
xchg
shll
sub
js
ss
or
idiv
mov
xorl
cmp
js
adc
pushf
dec
sub
xchg
and
in
sti
or
xchg
sub
or
loop
test
mov
xor
int
pop
and
dec
jg
mov
push
inc
je
pop
cmp
xor
push
pop
shl
jp
test
fwait
sbb
or
ret
rcrb
dec
add
adc
jl
lea
imul
dec
jg
or
adc
in
mov
aad
les
xchg
mov
adc
jmp
sub
ljmp
mov
inc
sub
sarb
fdivr
fwait
std
lea
cmp
push
outsb
sbb
xchg
repz
sarl
inc
out
adc
iret
inc
xchg
dec
arpl
mov
xor
mov
in
push
add
add
inc
sbb
cmc
mov
jne
dec
out
jl
mov
xchg
fsubs
popa
rcrl
cmp
nop
js
ljmp
aam
xor
call
bnd
sbb
lret
stc
movsb
adc
inc
mov
add
loop
adc
inc
insl
arpl
pushl
jne
xor
lret
pop
pushf
in
ja
cmp
pop
push
daa
les
ds
cld
loop
inc
xor
push
stos
sahf
cmp
fistpll
loop
orl
cmp
test
dec
push
sbb
cwtl
mov
and
xchg
inc
pop
mov
outsl
push
inc
je
int
ja
cmpsb
push
das
push
sub
ljmp
jb
int3
cmpsl
jge
cwtl
mov
push
hlt
sbb
sbb
mov
mov
out
js
push
fsubl
sbb
sbb
addl
insb
adc
call
movsl
ret
scas
into
lahf
fdivr
push
ret
iret
and
hlt
xor
aam
adc
cwtl
call
das
scas
xor
test
ljmp
sbb
iret
cltd
add
call
or
imul
push
xor
dec
mov
adc
ja
fucomip
outsb
push
mov
push
and
and
xor
jae
call
cmp
es
stos
jmp
rolb
and
jns
stc
add
inc
jecxz
push
mov
push
jmp
jmp
iret
inc
js
movsb
sub
adc
dec
test
cld
int3
jnp
sar
ljmp
je
sub
mov
inc
lods
insb
repnz
out
xor
std
xchg
lahf
test
out
ljmp
ljmp
ds
sbb
into
xlat
add
push
test
mov
call
xchg
out
daa
gs
sub
lahf
addr16
into
and
mov
lcall
jae
push
icebp
enter
fbstp
mov
fldl
xor
or
dec
lock
andb
jmp
fimuls
fistpll
cmc
adc
xlat
mov
fstl
jo
push
lods
lods
pusha
in
idivl
jae
lcall
mov
adc
and
push
shl
add
stc
bound
adc
and
aad
jns
pop
add
push
fwait
sub
jbe
popa
dec
mov
movsl
mov
cmpl
fcomip
clc
mov
shrl
je
pop
pop
outsb
cmpsb
xor
pushf
add
leave
jmp
es
mov
out
xchg
aas
pop
or
and
popa
cli
jmp
repnz
fwait
sub
stos
jmp
ret
mov
cwtl
movsl
fsubrs
add
cmc
ljmp
sub
ret
lods
xchg
in
cmp
sub
popa
mov
daa
icebp
rep
jmp
sub
push
pop
or
xchg
inc
movsb
shlb
cwtl
or
fcomip
xchg
push
xor
addr16
sub
pushl
mov
xchg
stos
notl
push
jl
inc
scas
inc
mov
add
mov
adc
outsb
into
out
push
aas
stos
pop
pop
cwtl
sahf
cwtl
out
test
add
jno
mov
decl
dec
aad
inc
xor
jmp
clc
mov
cmpsb
sub
sbb
sbb
xor
call
movsb
mov
xchg
daa
inc
sub
sub
xchg
sar
out
push
jno
sahf
mov
ljmp
sub
test
cld
push
xor
das
outsb
jae
mov
mov
jmp
jp
incl
insb
test
xchg
sbb
nop
dec
cltd
cmp
xchg
outsb
push
jmp
repnz
decl
inc
mov
fsubl
xchg
fwait
mov
into
mov
testl
scas
ljmp
loopne
jle
adc
inc
cltd
nop
insl
test
ljmp
sub
adc
jae
mov
jge
xchg
xorl
test
xor
jmp
mov
bound
test
sub
or
jo
mov
lcall
ficomps
and
push
xchg
ds
test
and
dec
jns
mov
call
mov
inc
shlb
push
cli
xor
jmp
sbb
idiv
cmp
push
test
cmpsl
out
test
pop
adc
xor
pop
dec
insb
add
rorl
adcb
lcall
mov
bound
in
push
xor
out
sarb
imul
ds
aas
jecxz
ret
incl
push
sbbb
rorb
cmc
insb
xorb
lds
loope
faddl
test
jg
jb
inc
dec
sarb
orl
clc
jne
add
inc
sub
incl
pop
jo
push
iret
push
negl
or
jae
cmp
sbb
arpl
pop
pop
mov
ljmp
inc
xchg
icebp
xor
imul
mov
mov
and
ljmp
ftst
jnp
aad
inc
outsb
pop
in
mov
mov
clc
and
pop
test
stc
sub
mov
and
xchg
xchg
jmp
push
adc
mov
jge
mov
pop
cmp
lcall
test
pop
cmpsl
adc
jae
out
cli
aaa
fdivrp
out
rol
xorb
sbb
aas
mov
ljmp
nop
xchg
push
scas
ret
push
int3
std
pop
jne
insl
ds
adc
mov
fisubl
cmc
mov
shl
ss
xchg
sti
adc
or
sub
mov
sbb
es
adc
xchg
repz
sbb
dec
imul
decl
or
jne
or
xchg
movsl
dec
outsl
clc
push
pop
addl
sbb
clc
stc
decl
fnstsw
inc
pop
jg
in
adc
loope
sub
daa
dec
pop
sbb
add
dec
sbb
fs
cmpb
sub
cmpl
jg
sub
mov
cmp
ret
hlt
adc
jge
pop
cs
and
ja
mov
int
inc
js
ljmp
jae,pt
rcr
cmp
mov
jp
add
or
mov
push
test
cmp
xchg
adc
pop
call
out
ja
xor
adc
mov
sbb
outsb
xor
push
xchg
xor
sbbb
mov
sub
dec
out
pop
pop
jae
pop
push
in
push
pop
and
call
sub
push
lea
pop
mov
inc
arpl
lods
mov
xchg
cwtl
stc
incl
mov
pop
fsubrl
add
mov
push
and
xorl
cmp
or
push
pop
mov
dec
pop
or
and
stos
mov
scas
push
xchg
mov
jge
arpl
pop
push
jle
mov
stos
loope
xor
cs
jns
jmp
je
hlt
and
mov
pop
ficoms
mov
dec
cmp
lret
pop
ljmp
call
xchg
bound
addr16
ud2
dec
jo
xor
pop
mov
xchg
movsl
and
decl
call
ret
pop
out
hlt
mov
jns
fstl
fwait
inc
insl
sarl
mov
pushl
movsl
xor
jecxz
les
jae
fwait
outsb
mov
push
mov
sbb
cli
and
sub
sub
ficoms
outsl
dec
mov
mov
addb
sbb
fiaddl
xchg
cwtl
ror
loope
jae
les
mov
sub
xchg
sub
cmp
add
call
xchg
mov
cld
push
loope
out
sub
lock
and
bound
decl
xor
mov
push
cmp
sti
push
iret
sbb
add
pop
add
sub
dec
sub
subb
jns
clc
cmp
call
add
mov
or
mov
inc
aas
add
mov
loopne
scas
inc
int
adcl
cltd
or
xchg
pop
cmp
jae
jae
movsb
addr16
stc
div
xchg
jecxz
lods
sti
cltd
scas
push
in
scas
mov
dec
mov
xor
adc
jecxz
test
mov
cmpsb
cmp
push
pop
lods
lret
lcall
fwait
add
popl
pop
jmp
adc
xchg
sbb
bound
nop
fcoms
jg
mov
jle
filds
nop
fbstp
faddl
mov
out
mov
ljmp
or
push
mull
push
adc
cmpsl
cmp
bound
pop
pop
or
cmc
pop
add
jmp
cmp
xchg
mov
jnp
push
cltd
push
mov
jle
int3
out
inc
iret
lcall
stc
mov
inc
adc
hlt
xor
jg
or
xlat
mov
fildl
dec
ljmp
decl
es
mov
hlt
fimuls
out
add
xchg
test
jmp
outsb
pushf
adc
sahf
loopne
int3
and
in
and
rcll
xchg
mov
jmp
outsl
pop
inc
rcrb
jb
push
pop
in
lods
jecxz
sbb
stc
rcrl
jmp
les
fldt
sti
or
dec
jle
mov
incl
das
shrb
leave
dec
lods
ficompl
test
pop
cmp
imul
pushl
testb
cmp
popa
pop
xor
fidivrs
mov
stos
mov
push
pushf
cmp
ss
decl
pop
mov
inc
lods
cmp
sbb
adc
nop
mov
fwait
sub
call
mov
add
mov
mov
inc
mov
sahf
jl
call
ljmp
mov
pop
xor
sbb
pop
xor
lcall
sbb
fwait
cli
lahf
cwtl
or
aaa
icebp
addr16
cwtl
add
and
je
push
insb
iret
clc
push
imul
ljmp
adcl
call
std
mov
fstps
inc
xchg
fbld
movsb
fisttpll
xor
stc
movsl
popa
lret
adc
pop
rcrb
inc
ret
pushl
gs
pop
jns
sarb
and
mov
sub
xor
mov
je
mov
lcall
sahf
pop
inc
stos
inc
cmp
fisubl
pop
scas
dec
clc
push
push
sbb
out
add
jmp
lods
ja
arpl
cmpsl
sbb
fbld
sub
adc
sub
sub
push
call
and
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xchg
or
mov
add
or
add
add
mov
inc
mov
add
add
xor
push
add
in
xor
inc
mov
add
mov
dec
out
dec
add
add
add
sbbb
dec
xorl
jb
fildll
outsl
adc
addb
inc
addl
incb
std
sbbb
add
sbb
sub
adcl
mov
mov
adc
add
mov
mov
js
adcb
add
sbb
je
in
mov
push
jge
shrb
xor
sub
pusha
iret
call
fs
rorb
rclb
cmp
rolb
rorb
lds
mov
shll
insb
nop
arpl
pop
shrb
or
data16
or
or
add
sbb
sbb
mulb
call
decl
in
xchg
pop
out
movsl
pusha
sub
lcall
sbb
xor
int
cmpsl
and
mov
fisubl
dec
xor
sbb
pop
out
dec
repz
leave
scas
dec
fwait
subl
mov
add
dec
sub
push
and
in
fistps
cmc
pusha
test
fisttpll
lds
pusha
or
popa
push
pop
fs
cmp
fimull
add
lahf
mov
push
imul
jecxz
jne
ss
bound
mov
movsb
xchg
lcall
ret
iret
mov
pusha
add
imul
gs
push
shll
aaa
test
add
add
negl
xlat
outsb
scas
push
int
add
cmpsb
loopne
dec
sbb
inc
xor
xlat
push
adc
flds
mov
mov
jne
jns
or
push
push
add
std
std
push
push
loopne
aad
mov
xchg
sbb
jno
add
aas
in
adc
sub
insb
or
push
cld
shl
int
mov
push
out
rcll
fucomip
push
addr16
mov
seta
jle
cmpsl
push
push
leave
int
inc
ss
add
jle
cmp
jae
cltd
mov
xchg
mov
xor
pop
imul
pop
jg
shrl
xchg
scas
sbb
mov
out
loope
fwait
testl
sbb
dec
data16
data16
xchg
and
mov
or
inc
cmp
imul
add
mov
cld
shll
mov
push
loopne
aad
inc
sub
ret
jne
and
add
add
mov
cmp
negb
mov
popa
add
inc
pop
popa
add
jl
ror
stos
popa
and
add
xor
mov
shll
jl
imul
fldl
pop
pop
sbb
cmp
sbb
sysret
ss
push
lahf
cwtl
or
fs
icebp
inc
shl
xchg
loopne
jae
xor
inc
sti
hlt
lods
pop
pusha
pop
pop
add
push
jne
daa
sbbl
mov
mov
jecxz
popa
loopne
je
fiadds
push
sbb
and
out
jo
dec
imul
lret
add
push
push
scas
add
sbb
cmp
rcll
cmp
or
cmpsl
imul
push
pop
ficoms
bound
lcall
jp
mov
popl
sbb
sub
cmpsb
add
push
outsb
add
push
xor
fwait
mov
orl
aad
in
lcall
adc
daa
shll
dec
jnp
jge
xor
xor
out
jo
mov
mov
pop
mov
js
aaa
lcall
lock
sub
xor
pop
push
jnp
movsl
mov
ljmp
and
sbb
mov
lods
std
cmp
add
mov
jmp
cmp
pop
cmp
dec
mov
sub
rcr
push
or
jo
fucomp
add
dec
add
add
mov
mov
ds
add
lods
and
add
jl
mov
xorb
fcmovnu
pop
out
lock
in
push
repnz
mov
ss
xorb
pop
stos
sbb
jg
jne
sbb
movsl
loope
pop
push
inc
sbb
jle
fstpt
pop
or
pop
xchg
jo
or
outsl
jo
jg
add
jno
xchg
pop
pop
inc
add
add
cmc
mov
leave
enter
add
mov
cwtl
ds
push
outsl
shrb
test
pop
xor
vmovsd
jbe
cld
pop
pop
loop
jmp
dec
add
pushf
dec
pop
ja
das
mov
testl
push
cmp
xor
in
fiaddl
push
sbb
sbb
cmp
add
aaa
insb
dec
inc
xchg
lahf
add
push
jle
fwait
in
mov
outsb
fadds
cmp
aam
cmp
push
dec
inc
jno
int3
or
jne
cmp
daa
fldl
jo
pop
call
add
push
mov
mov
jns
push
add
dec
sub
mov
jbe
dec
xchg
imul
gs
lea
jo
jae
fbstp
and
jg
mov
je
add
and
je
imul
inc
jg
adc
jb
stc
andb
xchg
lods
popf
add
jo
addb
mov
add
fwait
jle
push
jg
add
loop
daa
cmp
decl
push
mov
add
xlat
orb
mov
pusha
push
clc
js
jo
add
shll
lcall
jl
add
out
faddl
add
push
testl
add
ss
pop
addb
mov
add
add
shl
inc
mov
inc
push
mov
add
and
mov
test
add
add
add
ljmp
into
xor
lret
pop
mov
sub
add
xor
fidivs
inc
or
sbb
xchg
fsubr
outsl
aaa
add
or
call
or
ret
xchg
lods
in
clc
das
push
icebp
add
adc
mov
or
push
push
cmpsb
pop
dec
sbb
nop
add
js
cmp
mov
fiaddl
adc
push
push
fwait
mul
sbb
lock
push
mov
jecxz
lods
imul
push
lods
mov
imul
roll
xor
in
sub
push
sbbb
dec
pop
push
fs
cmp
out
ss
cli
sbb
outsl
pop
repz
or
mov
xor
mov
push
adc
lock
mov
xor
mov
lcall
movsb
add
sbb
sub
addb
pop
pop
sbb
rcrl
jo
cmpb
aam
xor
inc
adc
sub
jnp
dec
fs
add
add
dec
dec
xor
jbe
ss
sbb
shll
lods
push
stos
xchg
in
or
pop
xor
imul
fcompl
fcmovbe
lcall
adc
outsl
pop
fs
lahf
repnz
push
adc
lock
jno
aaa
insl
sti
lods
push
xor
ret
icebp
or
lcall
mov
or
ss
or
sbb
mov
jns
cmp
rclb
imul
mov
sub
mov
dec
repnz
insb
nop
sbb
adc
add
dec
jne
xor
gs
stos
adc
sub
cli
sub
cmp
add
fidivrl
insl
sub
add
pop
add
mov
xor
adc
pusha
ss
pop
jae
jo
or
iret
in
outsl
push
fmuls
push
loop
xorl
out
jmp
jbe
pop
mov
jo
or
jo
or
insl
dec
not
pop
imul
dec
es
neg
mov
negb
push
cs
clc
pop
ja
aaa
mov
push
lock
daa
scas
push
push
xchg
push
out
push
push
pop
sbbb
push
sahf
inc
mov
jg
aas
fidivrs
inc
lds
repnz
push
das
push
or
dec
incb
cmpsb
xor
dec
push
push
push
jo
outsl
shr
push
push
roll
push
pusha
and
push
pop
cmpb
loope
jns
iret
repz
pop
sbb
repz
out
shrl
push
iret
mov
mov
add
out
jmp
sub
iret
repz
or
cmp
mov
jle
jmp
mov
xchg
push
jl
cmp
cmp
sahf
pop
insb
sub
repz
repz
dec
stc
add
repz
push
adc
iret
repz
or
movsl
repz
repz
repz
pop
sbb
sahf
idivl
mov
jns
out
mov
add
push
fsin
xor
jns
out
int
lods
out
sahf
out
xchg
or
jns
pop
push
popf
arpl
jle
out
cmpsb
clc
fldl
ljmp
mov
push
mov
push
sahf
out
out
adc
sahf
out
dec
popa
and
in
inc
jecxz
sbb
jns
shrl
out
sahf
sub
cmpsb
js
dec
push
dec
add
jne
out
jns
lret
gs
jns
test
pop
sahf
out
jns
fwait
jge
fcmovnbe
dec
insl
push
sub
cs
sti
addr16
ret
ret
in
dec
jae
cmpsl
out
cmp
cmp
cmp
xchg
out
sbb
out
xlat
imul
ja
mov
dec
notl
cmp
cmp
ja
iret
mov
sahf
ja
push
daa
scas
push
filds
sahf
inc
out
pop
pop
lahf
cltd
test
out
jg
aas
filds
mov
jle
sahf
call
pop
inc
add
out
add
ljmp
loop
inc
ds
push
add
add
jecxz
and
add
jmp
lods
push
mov
sbb
lcall
pusha
add
cmpsb
rclb
xor
xor
add
mov
lcall
ljmp
pop
push
xor
repnz
xor
push
imul
push
out
inc
push
sar
jmp
les
jo
push
lret
jmp
int
fisttpl
pop
mov
aad
ja
rclb
aam
mov
inc
jl
jle
sub
mov
sbb
mov
mov
test
incl
in
insl
scas
mov
hlt
cmp
insb
adc
test
fs
std
adc
gs
ja
pushl
insb
push
arpl
pusha
aaa
and
mov
inc
pusha
call
lea
mov
mov
test
movsl
add
cwtl
mov
sub
mov
fstpt
insb
fdivs
mov
xor
shrl
lcall
jg
xlat
enter
mov
fadd
mov
xchg
mov
mov
testl
or
fucomi
or
out
dec
push
rol
data16
inc
fdivl
jno
fildl
inc
and
cwtl
aad
aad
jbe
mov
loopne
mov
pop
in
lahf
int3
aam
call
lret
jg
pushf
test
xchg
out
push
loope
or
insl
or
fs
pop
cld
jg
jmp
or
imul
gs
adc
add
ds
incl
cwtl
test
pmaddwd
fnstenv
adc
mov
bound
pushl
jl
mov
popa
mov
xor
cmp
mov
call
mov
xchg
fdivrs
add
rcll
fldcw
mov
mov
fimull
add
mov
jl
ffree
jno
push
push
inc
add
out
adc
mov
dec
fidivl
outsl
and
aam
mov
icebp
stc
ficomps
leave
fldcw
fstpl
xlat
inc
call
or
mov
rcr
mov
lcall
mov
pushl
aad
push
ja
popf
ljmp
jae
or
jnp
fs
shrl
push
pop
push
incl
cld
jp
iret
push
in
and
scas
add
dec
sahf
pop
jge
xchg
sub
aaa
jo
repnz
add
push
imul
ss
sbb
push
imul
aam
pop
sub
mov
dec
frstor
fistpll
mov
mov
pop
mov
call
adcl
fisttps
addr16
cmpsb
and
mov
mov
mov
and
fdivs
dec
add
lahf
jp
inc
cmp
pusha
fildll
mov
xchg
popa
lock
dec
in
mov
outsl
and
push
or
cld
inc
or
shlb
add
xor
mov
mov
pop
mov
sti
push
pop
pop
call
ret
shlb
loop
ficomps
ret
fptan
arpl
arpl
insl
add
or
addr16
jb
in
mov
mov
push
sub
or
mov
xchg
repnz
jmp
dec
out
fdivrl
fisttpl
sub
roll
pop
mov
push
xor
mov
push
push
push
ja
outsl
mov
sbb
pop
or
xor
or
sub
gs
xchg
scas
clc
sub
imul
push
xchg
or
stos
addl
ljmp
xor
cmp
push
pusha
shlb
ja
ds
shrl
lcall
cmp
aaa
lods
scas
mov
fiadds
mov
jecxz
mov
aaa
std
mov
push
pop
mov
sarb
push
ficoms
fldenv
sar
jp
mov
dec
popa
std
sbb
imul
sub
mov
or
in
add
sub
mov
bound
xor
sub
jg
hlt
ja
jns
pop
push
cmp
fxch
mov
ret
call
hlt
jecxz
dec
mov
mov
mov
xor
xchg
and
push
sub
mov
out
popa
stos
xlat
scas
cs
mov
sub
addl
test
fwait
or
sub
mov
insb
insb
jmp
aas
inc
aam
out
in
int
and
xchg
sbb
lahf
mov
inc
mov
sahf
ja
mov
sbb
repz
faddp
lcall
pop
adc
inc
inc
xlat
int3
imul
jo
fdivl
cmp
sar
lcall
and
or
or
ss
fisttps
pop
mov
iret
gs
jg
sub
mov
pop
nop
add
lahf
pop
inc
lea
out
mov
incl
jns
jae
dec
call
inc
ret
sub
pop
cli
dec
jns
mov
sub
jg
sbb
mov
lea
mov
lds
mov
or
xchg
lea
testb
pop
mov
xlat
inc
je
cli
outsb
xor
pop
mov
jmp
mov
xchg
xchg
scas
cwtl
xlat
fsubrp
test
loope
insb
lret
cli
cmc
mov
out
lcall
jns
and
pop
cmpsl
adc
push
out
adc
and
inc
and
jecxz
std
gs
out
fimull
lret
push
fwait
cmp
dec
pop
scas
xchg
add
int3
cmpsl
xor
jg
lcall
loope
lods
adc
adc
adcl
xchg
mov
xchg
leave
adc
call
inc
jle
xchg
ja
loop
jns
das
dec
dec
and
mov
or
or
lea
call
fisubs
into
out
jle
add
out
inc
ret
adcl
int3
add
pop
xchg
lcall
cmpsl
test
cwtl
cmpl
test
mov
ja
scas
adc
insb
hlt
incl
aas
fldcw
push
ret
adc
std
and
jo,pt
sarl
fdivrs
out
decl
jnp
sbb
mov
ja
fldcw
dec
sub
decl
sub
add
in
add
mov
cs
mov
jmp
hlt
out
mov
inc
imul
notb
mov
sbb
xchg
fidivs
pushf
aad
test
fists
dec
jo
nop
sbb
shrl
inc
loope
fisubs
pop
lds
push
call
dec
lcall
repz
pop
ret
cwtl
xchg
test
fldenv
lahf
fdivrp
test
call
incl
test
cltd
rorl
mov
cmp
push
adc
sub
mov
pop
decl
jo
or
imul
inc
jp
mov
arpl
out
shlb
mov
stc
jb
xlat
loopne
pushl
and
popf
jbe
mov
add
insb
cmp
cmp
adc
sub
mov
test
jns
jle
bound
cmp
cmpsl
push
mov
xchg
call
in
push
in
xor
bound
daa
push
add
dec
loope
test
pop
lock
ljmp
int3
in
mov
xor
call
push
adc
jle
scas
clc
call
gs
xchg
xchg
dec
insb
shlb
adc
push
pop
or
xchg
rorb
aam
aas
jg
adc
adc
cltd
sbb
mov
pop
shr
popf
decl
in
fsubr
out
inc
loope
adc
shlb
xorl
call
out
test
pop
dec
imul
pop
jle
enter
mov
dec
testl
push
pop
cld
lahf
adc
std
and
dec
push
add
pushl
std
cmpsb
mov
mov
ret
dec
jl
add
push
dec
add
jo
sar
decl
sub
push
or
stc
sbb
lods
xchg
fmuls
cmc
sub
pop
or
leave
in
jmp
sbb
das
sbb
sbb
mov
sbb
repnz
jg
xor
pop
es
outsb
dec
jae
jmp
cmp
fdivl
adc
mov
jmp
jp
pop
inc
dec
cmp
sub
cmp
leave
cmp
or
ret
out
inc
aas
hlt
test
cmp
call
cmp
nop
jge
aaa
leave
ret
fidivl
jnp
push
xor
xor
ljmp
outsl
in
and
mov
xor
daa
ss
sub
and
fstpl
and
xlat
mov
sub
fidivrs
sub
sbb
push
ljmp
jb
jbe
sub
enter
mov
jo
out
jno
pop
push
pushl
xor
jb
and
push
jbe
icebp
pop
je
fwait
aad
xchg
mov
mov
jg
or
jge
iret
jl
je
jns
push
inc
js
mov
jnp
cs
lcall
jle
and
cmp
nop
es
xchg
push
push
xor
cmp
imul
jg
rclb
popa
scas
shr
sub
cmpsb
gs
fs
add
data16
loopne
stos
das
ror
sbb
outsb
xchg
dec
add
dec
call
pushl
sbb
insl
mov
dec
pop
fstpl
push
lock
inc
or
inc
ds
incl
int
mov
inc
aad
dec
inc
loop
mov
push
xor
mov
mov
call
sar
inc
stos
cmp
adc
push
sub
push
pop
cmp
pop
and
pop
jns
pop
dec
xchg
lret
xchg
jmp
cld
sti
sub
outsl
pop
xchg
das
lods
pop
jg
xor
loopne
iret
mov
movsl
jae
jmp
mov
fsin
out
addr16
in
dec
es
lock
mov
sahf
hlt
pusha
in
sbb
das
call
jne
stos
jmp
pop
imul
cmp
sar
scas
clc
cld
popa
insb
xchg
push
push
push
call
adc
cli
lods
fdivr
mov
scas
pop
clc
mov
incl
repz
lock
push
inc
icebp
imul
pop
sub
cmc
add
decl
lahf
pop
js
test
mov
fcmovb
jecxz
fildl
jno
je
mov
sub
dec
aaa
fsubl
or
ljmp
adc
dec
fsubr
aam
mov
aad
movsb
ror
into
mov
shll
ljmp
pop
pushf
les
sbb
xor
ret
xchg
ret
pop
adc
push
adc
call
dec
lret
pusha
lds
enter
leave
mov
inc
int3
mov
rol
iret
sarb
ljmp
cld
insl
nop
roll
xchg
out
jmp
xchg
push
push
fs
lcall
ljmp
pop
mov
sahf
imul
cli
popf
fldt
cwtl
in
add
ja
aas
mov
xor
iret
xor
dec
mov
mov
adc
jmp
inc
mov
add
dec
and
mov
lcall
mov
subb
faddl
lcall
pop
xchg
jb
xchg
loop
push
add
stos
push
outsb
movsb
stos
cmpl
scas
cli
add
scas
in
lods
outsl
lods
cmpsb
lods
lods
out
icebp
cmpsl
fidivs
cmpsb
mov
pushl
mov
sub
mov
push
std
jl
bound
les
inc
cmpsl
lcall
jbe
xorb
mov
mov
push
stos
mov
mov
dec
adc
mov
dec
mov
mov
pop
pop
mov
add
cli
pop
add
inc
stos
adc
jg
xchg
bound
and
and
adc
mov
jne
or
loopne
outsl
incb
call
inc
mov
push
int3
ja
loopne
adc
pusha
push
sbb
xor
cli
mov
lods
ljmp
inc
aaa
sarb
cmpsl
mov
outsl
into
int
jg
xchg
ljmp
aas
popa
mov
xchg
call
jae
sub
mov
inc
jp
shrl
sbb
decl
cmp
das
add
das
repz
in
xchg
sbb
xchg
in
xchg
jmp
sub
ja
adc
ljmp
in
inc
xchg
mov
sub
cmp
clc
call
xor
pop
mov
sahf
loop
outsl
dec
jg
movl
mov
rcrb
lea
sbb
out
incl
mov
insl
hlt
adc
call
adc
cmpsl
aas
test
dec
nop
sbb
mov
iret
jbe
lock
lods
push
pop
jg
jnp
ret
push
sub
pop
sbb
cmpsb
mov
adc
cld
jmp
ret
cmpb
das
lret
jnp
dec
ja
prefetchw
or
jae
movl
mov
mov
inc
outsl
push
cld
adcl
push
mov
mov
mov
cmp
mov
pop
mov
in
fildl
outsb
js
sub
pop
pusha
cld
mul
fcomip
cmp
das
xchg
adc
sub
pop
clc
or
mov
iret
icebp
cmpsb
adc
xchg
jbe
cs
cwtl
pop
fwait
push
std
jo
in
inc
dec
lock
das
dec
leave
dec
cmp
stos
out
arpl
aas
imul
adc
push
mov
aaa
pop
in
push
loope
mov
cwtl
call
scas
jmp
inc
addb
ds
mov
call
loopne
xor
mov
in
mov
jle
inc
sub
in
call
inc
xchg
lcall
jmp
mov
sahf
in
sub
push
nop
mov
xor
jl
cmpsl
sbb
pop
push
roll
pop
loope
mov
shrb
dec
pop
mov
cmc
scas
or
and
imul
incl
fsts
js
scas
dec
sarb
std
rcrb
inc
push
pop
xchg
testl
sbb
or
imul
xlat
out
call
out
mov
pop
lods
mov
ret
mov
es
add
and
jo
arpl
fwait
mov
sahf
push
inc
cmpsb
mov
mov
or
call
add
into
movsl
out
xchg
mov
rdmsr
fsts
xchg
push
mov
sbb
fdivl
ljmp
jbe
jp
add
jae
movsb
push
mov
xchg
sbb
push
cmp
inc
stc
out
dec
jbe
mov
into
jb
inc
fcoml
inc
clc
fs
jns
stc
lret
lcall
xchg
inc
and
lcall
mov
lock
imul
insb
clc
ss
test
cltd
xchg
cs
add
call
pushl
aam
loope
xor
ss
mov
addl
pop
incl
pop
jmp
icebp
fiadds
subb
aam
into
mov
xor
jg
mov
ja
decl
jl
out
lret
sbb
sbb
adc
jle
test
sub
call
dec
push
ja
mov
jle
jg
test
and
mov
mov
data16
incl
rcr
outsl
sub
mov
add
push
mov
mov
mov
sar
scas
cli
incl
pop
outsb
sti
cmp
fucomi
pop
xchg
addr16
push
or
imul
push
push
mov
mov
xor
or
clc
insl
les
push
arpl
jmp
mov
xchg
mov
push
push
mov
sub
mov
sub
xchg
loop
adc
and
or
jno
jnp
inc
fsubp
fcmovbe
jge
fucom
jmp
decl
aam
push
jl
test
in
insb
cwtl
push
fwait
imul
jne
leave
in
jmp
pop
dec
pushf
push
insb
fcos
incl
or
enter
pop
sub
in
addr16
ret
add
shll
ljmp
or
cli
mov
mov
stc
inc
int
insb
jecxz
fistps
jmp
or
pop
xor
xlat
push
addb
push
fidivs
and
pushl
mov
movsl
add
or
or
mov
or
and
outsl
jl
cmpsl
push
ds
sbb
cmp
shlb
mov
mov
mov
jmp
in
pop
mov
leave
mov
imul
cwtl
sbb
insl
cmp
ljmp
insb
xchg
sbb
add
popa
bound
xor
or
push
xchg
in
in
movsl
jnp
jge
hlt
rorl
les
mov
in
mov
push
je
mov
jl
fstpl
dec
jg
pop
lock
jl
int3
dec
gs
popa
pop
lds
mov
pushl
loop
fbld
xlat
pop
rol
insl
sub
hlt
sti
mov
outsb
frndint
push
mov
pusha
ljmp
add
jae
add
and
jno
fadds
inc
stos
inc
fcomip
or
adc
push
test
mov
fildll
mov
data16
xor
lahf
mov
or
leave
cwtl
dec
rcrb
mov
mov
pop
rorb
aas
mov
ljmp
gs
loop
mov
inc
cmp
ja
sti
adc
incl
imul
insl
push
test
test
push
iret
or
popf
cmc
add
lcall
pushl
js
mov
movsb
push
ret
bound
jg
addr16
out
call
loopne
jno
xor
add
sbb
shrl
loopne
fidivrl
cwtl
fisttpll
push
mov
cmp
out
stc
call
mov
aad
mov
push
jg
ret
fcomip
push
cs
push
shlb
mov
dec
daa
or
sbb
add
mov
out
ret
cmp
call
loopne
jl
mov
mov
mov
inc
sbbw
outsl
shlb
lods
push
ja
inc
or
fldl
push
mov
cmp
or
aam
pop
xchg
jmp
xlat
jmp
rcr
sahf
mov
ret
arpl
mov
pushf
std
insl
xchg
or
push
test
lea
addr16
add
push
dec
sbbb
sub
repz
cmp
mov
sbb
mov
fcmovnu
and
rcl
push
aam
inc
xchg
fnsave
jmp
fiaddl
int
mov
ja
out
inc
ja
or
add
push
cltd
push
cmp
out
add
pop
jo
sahf
incl
bound
shr
insb
iret
inc
pop
or
js
or
adcl
inc
add
popa
das
pusha
push
divl
outsb
ja
push
shrl
es
pop
fdivrl
dec
fdivrs
lock
mov
sahf
lds
mov
jmp
xor
mov
xor
add
stos
ficoms
addr16
cmp
mov
outsl
cmc
call
outsl
sub
or
mov
rolb
out
jmp
sbb
inc
dec
bound
fwait
insb
lds
ja
inc
test
inc
xchg
aaa
dec
or
incl
hlt
fxch
push
mov
or
scas
jle
popa
subl
ret
call
fldenv
adc
out
inc
xchg
shrl
out
jecxz
mov
cli
addl
lcall
add
fistl
lret
lcall
insb
sbb
inc
aas
fbstp
pop
push
sahf
push
and
jmp
pop
mov
and
ja
push
call
shl
cmp
andl
scas
loop
ljmp
nop
imul
mov
imul
sub
hlt
pop
or
mov
repz
mov
jo
jno
imul
sub
negl
ret
lcall
jne
pop
mov
sti
icebp
test
jns
mov
cmp
dec
mov
inc
sbb
fisubrs
cmp
jns
add
cmp
sbb
imul
pushl
mov
addl
ret
lds
cmc
xchg
cmpsl
in
lea
or
mov
cli
bound
inc
mov
insb
adc
outsb
xchg
push
xchg
and
cwtl
push
cmp
test
rorb
cli
lret
xchg
lea
pop
xchg
jns
sbb
cmpsb
dec
test
jg
push
adc
jo
ret
fwait
lcall
test
or
jmp
scas
mov
int3
cmpsl
int3
and
mov
loope
dec
aas
shr
pusha
adc
ljmp
loopne
or
das
push
adc
sub
aas
jns
leave
jmp
mov
or
je
adc
xor
lods
dec
lea
lahf
jle
xor
out
incb
std
ret
rclb
cmp
gs
pop
mov
push
cmpsl
gs
sbbl
lcall
cli
leave
out
scas
lret
mov
hlt
insb
push
xchg
fnstcw
int
ret
or
adc
incl
add
insb
jo
daa
ja
subb
inc
jno
out
pop
add
test
lcall
pop
mov
insb
ljmp
pop
fcomps
sub
fldl
add
pop
call
push
je
bound
and
lds
cmp
adc
cmpsl
xchg
or
xchg
aad
or
call
mov
test
xor
imul
subb
sub
dec
lods
pop
pop
sbb
mov
inc
sub
cltd
fidivs
loope
lds
mov
gs
or
jmp
test
xchg
addr16
lahf
mov
mov
sub
int3
cmp
call
imul
pop
std
dec
lahf
or
push
test
jg
sbb
mov
pop
adc
xor
xor
mov
loope
ljmp
inc
xorl
pop
mov
xor
xlat
dec
sub
int3
mov
pop
xlat
push
jg
xchg
adc
lea
or
jo
jnp
inc
mov
and
in
insb
pop
into
adc
push
incl
adcl
mov
lret
cmpl
hlt
pop
dec
push
cmpsl
popf
push
adc
fcompl
push
add
add
pop
sub
cltd
xor
fdivs
cli
jle
test
sub
call
rorb
mov
xchg
stc
mov
repz
mov
mov
outsb
mov
das
lds
ss
negl
push
aas
sub
jns
jo
mov
sbb
mov
daa
or
rorb
bound
out
and
mov
ja
cmpsl
sar
dec
cmpl
xchg
mov
shlb
xchg
lret
adc
cmp
imul
push
or
or
jbe
or
lock
int3
pushl
std
jb
inc
push
cld
test
outsb
std
inc
mov
fdivr
lret
ret
jmp
lea
dec
push
test
adc
lock
repnz
test
repz
out
loope
sbb
fs
xchg
call
sahf
sub
cmp
loop
leave
inc
loopne
ja
loope
sbb
lods
in
popa
pop
cmp
fwait
out
ffreep
out
mov
in
xor
cwtl
inc
cmpsb
out
jae
call
jmp
xor
jmp
jp
dec
dec
inc
loopne
sub
leave
xchg
mov
or
cmc
mov
roll
push
ret
gs
pop
pop
pop
enter
lret
aad
fistpll
test
test
xchg
aad
int
imul
adc
fstp
imul
mov
lcall
cmpsl
fcom
fldcw
dec
dec
frstor
cltd
and
and
adc
aad
mov
aam
ficomps
cld
pusha
inc
xlat
or
jno
shll
call
cmc
enter
mov
rorb
pop
scas
fdivl
cltd
mov
dec
sub
decl
aad
inc
orl
or
or
and
inc
push
xchg
scas
out
cli
incl
lret
mov
xchg
sbb
jmp
xchg
ja
pop
xchg
xor
xchg
repz
pushf
insl
js
pop
lock
clc
rcll
xlat
aam
fs
cwtl
loopne
pop
loopne
decl
mov
mov
mov
jns
fdivrp
jmp
mov
or
mov
mov
mov
frstor
mov
inc
dec
idivb
int
pushl
inc
mov
dec
out
mov
icebp
push
addr16
mov
or
rorb
adc
scas
mov
cmp
movsb
and
cmpsb
in
xchg
jb
mov
sub
add
lods
das
insl
push
xor
jno
sbb
decl
sbb
pop
sbb
xor
jp
add
adc
and
jg
call
mov
hlt
popa
pop
das
ficoml
in
mov
adc
mov
adc
cmp
rcl
movl
push
push
test
add
jp
push
sahf
les
pop
lcall
scas
jne
add
test
adc
or
or
sub
decl
dec
es
pusha
daa
mov
mov
and
jecxz
and
mov
and
cmpsb
push
and
and
dec
in
imul
test
xchg
sub
movsb
add
ljmp
mov
jo
sub
pop
adc
pushf
xchg
daa
cmp
sub
inc
decl
push
push
int3
cmp
cmp
roll
xchg
xor
scas
test
pop
lahf
aaa
leave
jnp
or
push
xor
xor
rcrl
xor
mov
inc
outsl
insl
cld
ja
sub
insb
jmp
lcall
imul
ljmp
xbegin
arpl
call
xchg
cli
jns
addr16
and
ja
adc
xor
jge
jb
xor
lcall
add
loope
jo
mov
jne
popf
in
je
neg
add
dec
xorb
mov
jl
jmp
pop
push
mov
out
roll
jnp
int3
push
jp
cmpsb
arpl
js
sbb
jns
jb
jg
decl
mov
mov
into
push
movsb
outsb
stc
add
js
push
sub
sbb
add
lods
adc
and
sbb
jmp
add
push
jbe
aas
incl
pop
clc
sub
pop
cmp
add
stos
pop
mov
les
dec
push
sbb
add
cmpsl
mov
add
fisttpl
cmpxchg
add
punpckldq
gs
add
push
loopne
incl
inc
push
testb
xchg
pushf
xor
inc
fimuls
addl
pop
pop
fiaddl
xor
ljmp
js
cmp
addr16
or
mov
mov
out
add
xchg
push
fcomip
dec
dec
fdivp
xor
fisubrl
rcl
cmp
orb
mov
incl
nop
mov
xchg
add
push
fldl
pop
fbstp
cmpsl
arpl
push
add
mov
clc
pop
movsl
xor
add
jno
and
enter
lods
incl
mov
inc
xor
outsl
add
jg
rclb
sbb
sti
js
rcrb
in
call
inc
add
and
xor
pop
sbb
cmc
cmp
push
cmp
in
pop
enter
mov
ret
es
mov
xor
sub
add
ljmp
mov
push
mov
clc
mov
add
sahf
push
dec
add
jg
incl
cmc
or
xchg
cld
rcrb
lret
dec
jb
mov
add
jmp
sbb
fsubrs
jg
add
inc
sbb
inc
and
hlt
xchg
push
dec
call
jg
pop
cmp
add
sbb
not
add
jbe
push
lret
add
pop
loope
call
cld
ret
pusha
test
mov
pop
mov
or
fistpll
cs
xchg
jle
loopne
test
das
push
cmp
dec
imul
or
push
sub
mov
mov
ljmp
cmc
add
call
jle
fidivl
sbb
icebp
mov
inc
sub
cld
pushl
mov
sbb
xlat
jg
aam
js
insb
outsb
pop
hlt
add
testl
into
nop
data16
aas
mov
xchg
pop
orb
push
repz
pop
fcomip
ljmp
fistps
iret
mov
in
mov
fwait
pop
addr16
icebp
jmp
jo
add
dec
das
fiadds
and
xorb
inc
out
xchg
aas
mov
jg
add
ds
jb
sbb
lret
mov
mov
incl
mov
jg
call
mov
aaa
out
push
add
addb
ds
ljmp
pop
xor
and
scas
int3
pop
mov
add
pop
mov
call
cld
stos
in
pop
add
sbb
add
xchg
add
xor
out
std
decl
xlat
in
sahf
aam
push
stc
mov
jge
push
pop
lds
cmp
idiv
jmp
xor
add
xchg
or
cmpsb
insl
add
loope
cli
cld
sbb
call
cmc
dec
decl
int
jbe
jne
adc
js
xchg
fstps
dec
aas
dec
scas
add
inc
xchg
inc
movsw
add
xchg
pop
sbb
sub
jns
mov
and
repnz
xlat
jle
dec
add
mov
add
mov
add
inc
stos
pop
cmc
fldcw
mov
xor
fcoms
add
stc
popa
gs
stos
sub
add
mov
rcr
mov
ss
ljmp
dec
lcall
xchg
lock
loope
add
fxch
aad
mov
mov
inc
jg
jbe
add
data16
jp
iret
scas
xor
dec
fwait
add
sbb
cmp
add
icebp
mov
filds
and
fwait
clc
inc
call
push
mov
lods
es
adc
mov
mov
jmp
add
lock
bound
imul
mov
mov
xchg
cltd
xor
add
push
mov
cld
add
jno
cmc
fcomip
lret
loope
ja
ss
out
mov
add
aas
out
inc
addl
pop
mov
jbe
pop
notb
add
push
ds
add
ds
inc
add
mov
stos
das
sar
incl
sub
cmp
xorl
pop
add
call
outsl
push
mov
adc
in
test
orl
ljmp
ret
jle
cmp
arpl
cltd
in
leave
mov
push
outsb
add
add
call
cmpsl
rcr
ret
outsl
fisubrs
sarl
xor
mov
in
cs
add
pop
sub
ret
scas
addr16
cmpsb
add
mov
pop
add
into
jp
cltd
mov
push
icebp
fndisi(8087
jg
lcall
std
loopne
or
cli
add
jg
fisttps
popa
or
mull
or
cmc
add
rorb
clc
ljmp
sbb
outsl
gs
gs
loopne
popa
test
loopne
mov
cltd
pop
push
or
mov
or
or
or
xor
push
jp
adc
psraw
popa
add
popa
pop
repz
stos
jae
cmovbe
cmp
xchg
shll
rcll
jecxz
mov
dec
ret
inc
addl
jge
dec
shll
shll
rcrl
dec
shll
int
lea
shll
cmpsl
cmp
movsl
and
lds
add
lcall
imul
imul
imul
cmpsl
imul
cmpsl
imul
imul
cmpsl
imul
cmpsl
imul
imul
cmpsl
imul
cmpsl
imul
imul
cmpsl
imul
test
lcall
out
lcall
xor
mov
imul
loop
negb
add
ret
push
cmp
sub
mov
add
insb
jo
push
lods
add
imul
jnp
add
add
add
je
push
mov
xor
push
aam
push
jge
mov
add
add
ficomps
push
movsb
add
add
out
jnp
test
add
mov
cmp
push
fadds
jge
mov
push
call
test
idivl
push
enter
push
mov
or
push
lock
add
xor
push
rolb
add
out
sbb
loopne
pusha
sbb
mov
jnp
mov
sbb
addb
loopne
incl
mov
sbb
and
scas
sbb
xor
shll
divl
dec
shl
cmpsl
movl
jmp
lret
lcall
and
jnp
lcall
push
sbb
rolb
cs
stos
out
stos
jo
sbb
sahf
cmpsb
imul
cmpsb
imul
pop
cmp
jp
je
cmpsb
enter
add
jb
jbe
imul
les
add
sti
add
add
pop
inc
pop
pop
testl
xor
add
or
fbld
or
or
aas
add
add
or
imulb
push
add
aas
add
add
add
ltr
add
adc
in
adc
adc
repz
call
out
add
outsl
imulb
in
or
sbb
movsl
mov
in
jecxz
add
daa
pop
or
jle
pop
add
lock
sbb
int3
mov
test
adc
adc
test
adc
inc
adc
in
clc
notb
or
adc
cmc
stc
cmpsb
mov
jne
std
adc
pop
sti
sbb
mov
jg
mov
cmpb
mov
mov
mov
icebp
mov
rcrb
jecxz
xlat
lea
mov
or
inc
pop
xchg
mov
xor
pop
push
mov
jno
xor
aas
icebp
add
incl
icebp
add
add
dec
sbbb
ret
fdivrs
add
xor
mov
sbb
add
and
ret
mov
push
inc
add
push
daa
dec
push
inc
out
mov
lods
cltd
outsb
push
xor
pop
data16
imulb
or
adc
ljmp
xor
pop
xchg
adc
insb
add
lret
call
inc
cmp
mov
nop
xchg
add
pushf
je
outsb
mov
or
out
mov
xor
add
cwtl
and
jbe
add
js
mov
adc
add
xor
add
mov
into
dec
jo
test
xor
scas
std
jp,pn
mov
out
add
push
fidivs
mov
cwtl
add
sarl
addl
incb
ret
push
decb
add
adc
sbb
and
xor
inc
add
pusha
icebp
adc
pop
sbb
lods
jmp
addl
lcall
rcrl
sbb
add
outsl
jae
xchg
imul
into
xor
pop
imul
repz
mov
popf
std
add
cld
push
pand
push
or
ds
bound
adc
jae
les
jae
pushf
and
and
les
filds
sub
pop
pop
jge
fisubl
outsb
imull
enter
xchg
add
mov
out
lcall
push
push
outsl
and
mov
mov
gs
divb
xor
xor
jbe
inc
scas
dec
push
push
inc
jle
add
add
loopne
or
add
xchg
jg
mov
inc
rcll
xchg
jg
incl
dec
mov
dec
dec
mov
dec
push
scas
push
mov
pop
popa
bound
imul
xchg
insb
insl
outsb
mov
mov
mov
jp
xor
xor
xor
sti
aaa
cmp
das
xchg
jb
je
jbe
js
jp
and
data16
fistpl
push
ds
mov
mov
mov
data16
dec
scas
push
stos
push
aas
pop
pop
movsl
pop
pop
pop
int3
data16
mov
arpl
cltd
addr16
imul
cmpsl
es
push
xchg
cld
jo
mov
mov
sahf
imul
dec
into
adc
adc
pop
jge
fcomps
jle
inc
std
jnp
push
mov
or
cmp
std
jns
insb
pusha
pop
fnstcw
jge
scas
sbbl
sub
inc
pop
push
xchg
or
add
adc
push
mov
pop
mov
add
pop
add
add
add
cmp
add
push
add
push
add
push
add
add
push
add
push
add
push
das
cli
decl
add
add
add
add
pop
xor
fidivrl
inc
add
inc
add
inc
add
inc
add
fldl
lcall
cmpsb
jl
aas
mov
out
add
add
add
cmpsb
das
cli
pop
call
add
add
ljmp
fistpll
inc
add
lret
pop
add
add
and
jo
and
bound
pop
fistpl
pop
sbbb
pop
add
add
out
std
adc
add
jb
add
mov
or
orl
inc
pop
lret
jno
add
int
dec
mov
add
xor
add
add
add
dec
add
jp
mov
pop
add
inc
add
add
add
and
ljmp
add
add
mov
lcall
mov
push
add
add
pop
add
mov
mov
push
add
mov
add
inc
int
ret
add
add
add
add
add
lcall
add
xor
add
push
add
add
add
sub
incb
jb
add
or
push
pop
add
mov
loopne
add
adc
sub
add
or
pop
or
xchg
push
add
imul
pop
mov
and
rcrb
xor
xor
lods
jg
add
xor
repnz
mov
xor
movsl
xor
cmpsl
xor
xor
jecxz
pushl
push
add
xor
out
push
add
xor
cld
xor
mov
xor
xor
test
pushl
dec
add
xor
stos
xor
lods
xor
scas
xor
mov
inc
add
xor
xor
mov
pushl
inc
add
xor
mov
xor
add
xor
add
xor
add
xor
add
pushl
cmp
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
pushl
xor
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
pushl
sub
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
lcall
pushl
and
xor
add
xor
add
sahf
add
sbb
inc
add
jmp
push
cmp
add
and
cmp
es
cmp
sub
ss
sub
xor
add
sub
xor
cs
xor
xor
cs
xor
sub
add
xor
sub
ss
sub
cmp
es
cmp
and
add
inc
push
sbb
add
inc
push
sbb
incl
sbb
dec
push
push
add
dec
push
adc
dec
push
adc
dec
push
adc
dec
push
adc
push
push
push
add
push
push
pop
push
sbb
adc
pop
push
and
inc
pop
push
push
pop
mov
lds
jb
push
adcb
push
lods
pop
xchg
push
push
mov
push
ret
adc
bound
pop
add
push
and
mov
mov
add
hlt
rolb
loop
add
or
cwtl
repnz
pop
add
or
or
xor
add
or
or
push
mov
add
cli
add
aas
push
xacquire
cmp
lret
push
or
add
push
lret
test
ficoml
ljmp
or
inc
stos
sub
push
sbb
pop
ljmp
jp
mov
lcall
push
mov
xchg
fcmove
ljmp
mov
or
cmp
dec
stos
and
lret
ss
test
push
and
add
loop
sub
add
push
rcrb
ss
fdivs
add
mov
adc
xchg
rolb
loop
adc
movsb
pop
mov
add
add
adc
jb
xchg
push
ljmp
insb
fcom
mov
or
inc
or
add
loop
pop
stos
call
adc
add
dec
mov
lcall
lods
xor
add
mov
add
mov
pop
pop
push
lods
cli
decl
add
stos
add
mov
stos
add
call
add
test
push
pop
adc
cli
pop
lods
push
pop
jg
stos
scas
mov
scas
lcall
add
int3
add
int
call
cmp
lret
xchg
pop
mov
inc
pop
into
add
pop
xchg
add
ja
add
xchg
cmp
xchg
add
pop
xchg
add
pop
xchg
push
xchg
ljmp
rolb
cltd
add
pop
fwait
add
pop
pushf
add
mov
popf
add
pop
sahf
add
pop
lahf
loop
mov
sub
scas
push
ljmp
pop
cmpsb
mov
daa
pop
test
es
test
add
pop
mov
sbb
mov
sbb
mov
scas
pop
incl
sbb
mov
sbb
mov
pop
mov
adc
incl
sub
pop
mov
pop
mov
add
incl
mov
add
pop
roll
pop
ret
add
ret
pop
les
or
lds
or
movb
pushl
cld
pop
movl
pop
leave
add
mov
pop
or
pop
or
and
lcall
and
pop
or
and
push
or
and
cmpsb
and
and
popf
and
call
sahf
and
mov
and
lods
and
and
pusha
and
and
sub
jg
aas
or
or
and
shlb
aaa
or
or
xor
aam
xor
call
and
or
sub
sbb
and
or
and
or
and
or
and
or
mov
adc
and
or
push
xchg
and
fcmovnu
push
and
or
pop
or
and
sbb
or
sbb
mov
or
and
sbb
push
or
and
or
and
adc
and
call
adc
mov
and
or
or
mov
mov
or
xor
or
jle
jg
or
and
add
pop
test
pop
or
pop
jg
mov
or
pop
push
and
push
or
push
or
call
jmp
push
or
and
or
and
and
or
or
dec
or
in
call
dec
or
dec
or
dec
or
dec
or
inc
mov
inc
or
and
sub
sar
incl
add
sub
cmp
pop
and
or
or
cmp
pop
and
or
lcall
scas
xor
shll
or
and
das
or
and
or
and
or
sub
sbb
and
or
and
or
and
push
daa
and
lods
and
clc
add
mov
and
iret
sbb
scas
and
or
or
and
sbb
sbb
and
or
and
push
or
sahf
adc
arpl
adc
adc
gs
ret
insl
shll
les
push
push
and
call
or
pop
daa
in
outsl
es
inc
popa
cmpsb
pop
mov
or
or
es
sbb
pop
or
and
or
and
mov
cmp
pop
or
add
mov
adc
mov
or
and
mov
pushl
or
xor
or
and
or
sub
mov
sub
out
rolb
mov
mov
clc
pop
and
or
add
sbb
call
add
sbb
add
sbb
add
pop
or
add
adc
fiaddl
adc
add
adc
add
loopne
push
or
add
cmp
add
or
insb
or
add
ss
pop
aam
add
js
in
ljmp
or
pop
pop
or
fbstp
pop
jo
push
or
mov
jle
push
push
sub
push
or
push
push
or
push
push
or
femms
dec
or
adc
dec
or
adc
dec
or
adc
push
dec
or
pop
push
inc
or
sbb
inc
or
sbb
inc
or
sbb
push
inc
or
pop
push
aas
or
and
cmp
or
jg
cmp
es
cmp
push
ss
sub
xor
sub
decl
xor
sub
push
xor
xor
cs
xor
sub
xor
decl
sub
xor
push
sub
cmp
cmp
mov
push
and
push
pop
or
inc
push
sbb
lcall
inc
push
sbb
inc
push
sbb
dec
push
push
or
dec
push
insb
or
call
dec
push
adc
push
call
push
fbstp
push
or
lods
or
addb
pop
push
push
or
xor
push
mov
shll
pop
xor
xor
xor
cmp
xor
xor
xor
xor
xor
cmp
lcall
aas
xor
mov
pop
ret
xor
xor
inc
xor
inc
xor
inc
xor
push
sub
or
sbb
sub
cmp
pusha
roll
dec
xor
xor
sub
mov
dec
xor
xor
add
lret
cmp
pop
push
mov
xor
push
repnz
xor
push
xor
push
xor
pop
xor
pop
xor
mov
ret
pop
xor
xor
xor
fdivs
xor
xor
popa
xor
bound
shlb
loop
mov
lds
add
sub
pop
and
scas
adc
adc
mov
mov
xorb
xchg
mov
mov
adc
mov
adc
adc
mov
sbb
adc
mov
xor
fdivs
mov
rclb
sbb
adc
xor
jno
push
js
push
jg
rolb
push
push
test
xchg
add
push
jmp
xor
adc
adc
lcall
and
dec
adc
adc
inc
adc
add
mov
mov
mov
int
and
cmpsl
and
and
and
push
jle
imul
idiv
insb
add
push
div
cmp
repz
repnz
in
imul
add
add
fldt
out
sahf
lods
fsubrs
sahf
out
test
sahf
out
out
pushf
sahf
push
rcrl
fdivp
rclb
repz
sahf
cmpl
jbe
bnd
xchg
into
outsb
cs
push
mov
sahf
out
imul
imul
js
out
data16
arpl
gs
sahf
out
push
fisubs
popa
repz
repz
shlb
push
xchg
iret
repz
push
xchg
push
xchg
push
xchg
lcall
nop
add
aas
out
jns
dec
push
sahf
aad
add
popf
outsl
ljmp
add
add
fwait
stos
dec
push
lcall
add
stos
dec
push
cwtl
add
sbb
xor
inc
repnz
sahf
data16
push
fsubl
lea
imul
imul
add
add
xchg
cmp
xchg
sbb
cmpsl
imul
xorl
cmpsl
imul
cmpsl
imul
jns
js
push
addb
stos
sbb
push
pop
add
pop
sbbb
pop
fisubrl
fists
cs
addb
pop
or
movsb
or
adc
cwtl
push
mov
mov
and
add
sub
sub
dec
push
jbe
jns
add
fwait
gs
push
je
xchg
imul
jae
jne
ja
xchg
stos
std
incl
cwtl
vmread
mov
pop
add
incl
jmp
xchg
inc
sti
add
les
repnz
push
cld
faddl
pushl
shll
add
or
cmp
and
push
aad
leave
add
jnp
out
or
repz
push
add
adc
adc
lcall
sbb
jecxz
push
pop
inc
in
xlat
sub
sub
ljmp
jo
outsl
clc
push
pop
pop
adc
pop
cli
pop
jnp
pop
jg
mov
xchg
decb
jae
mov
imul
fwait
outsl
xchg
jmp
sahf
lahf
pop
mov
movsl
cmpsb
cmpsl
push
test
scas
decl
add
mov
mov
mov
add
ret
cmp
mov
leave
add
lret
mov
int
iret
das
clc
rcl
sub
xlat
daa
mov
fstp
fbld
loope
loop
sbb
out
pop
into
ljmp
icebp
xor
in
push
or
div
pop
stc
sar
add
jmp
pop
lcall
pop
add
jg
pop
or
sbb
pop
jmp
std
loopne
push
cmpsl
pop
pop
inc
add
std
pop
ds
dec
mov
daa
popa
mov
jne
std
mov
in
mov
and
jne
sbb
pushf
ja
or
add
jg
lcall
or
fwait
repnz
lods
cld
pusha
and
pusha
add
pop
sti
popa
pop
push
popa
fadd
aaa
pop
lock
loop
lock
pusha
or
addb
xor
arpl
cli
sbb
in
adc
sub
pusha
mov
insl
add
incl
std
push
aas
push
add
scas
iret
div
and
add
add
add
mov
fistpll
dec
mov
icebp
add
pop
sub
jo
sti
sbb
or
ficomps
add
add
jne
cli
lock
adc
into
pop
sub
inc
repnz
or
call
push
inc
push
rolb
cmp
fisttps
add
push
hlt
dec
jg
outsl
push
dec
popa
inc
vpackssdw
ljmp
pushl
repz
sbb
or
repz
dec
push
dec
loopne
lcall
sahf
test
dec
push
daa
push
pop
cs
mov
mov
inc
rcll
add
pop
mov
rolb
aad
cmp
mov
add
xchg
cmp
movsb
adc
mov
inc
cmp
xor
test
hlt
push
std
push
jb
sbb
pop
dec
push
jno
mov
adc
jg
fistpl
pop
repnz
inc
mov
push
cmp
cmp
adc
cmp
clc
push
std
pop
cs
bound
dec
pop
push
cmp
pop
jg
outsl
or
js
ja
inc
ss
cmp
cmp
cmp
sub
fbstp
std
cmp
and
sarl
lods
rclb
and
outsl
ljmp
int3
imul
sub
inc
push
cmp
cld
in
inc
cmp
aam
and
movsb
push
pop
in
sub
adc
mov
cmp
jbe
sub
fnclex
sahf
jge
fcmovnu
icebp
mov
je,pt
cmpl
adc
xchg
arpl
xchg
ret
cli
ljmp
incb
fwait
and
outsl
adc
and
sbb
cmpl
cs
adc
jecxz
and
sarl
xor
ret
aas
inc
adc
mov
push
pop
sub
pop
filds
jo
push
jl
outsl
jg
lock
pop
inc
bound
int3
xlat
les
aas
aam
fiadds
in
adc
hlt
cmp
mul
jg
dec
sbb
push
inc
dec
nop
insb
sub
bound
icebp
mov
loop
push
dec
xor
xor
jmp
xchg
mov
imul
or
imul
aaa
add
dec
push
pop
inc
dec
lds
incl
incb
enter
pop
or
sti
xor
jmp
sbb
hlt
mov
lock
sub
lret
xor
mov
pusha
lods
xor
pop
jl
idiv
jmp
sbb
lea
roll
jge
das
jno
xor
sub
faddl
mov
xor
xor
xor
sub
test
mov
or
lcall
push
mov
movsb
sub
push
es
mov
fidivs
in
pop
cld
insb
xor
xor
pop
xor
add
jle
roll
lock
xor
jae
add
push
sbb
fwait
mov
sub
clc
cmp
mov
xor
call
cmp
icebp
inc
jg
add
sar
pop
leave
faddl
jnp
and
outsl
jg
mov
sub
faddl
xor
xor
xor
adc
xor
xor
xor
filds
ret
lcall
rcrl
mov
dec
mov
dec
sahf
incb
mov
xlat
mov
incl
fstpt
fsubr
pop
cmp
cmp
cmp
jg
jmp
mov
xchg
sub
inc
ds
jl
dec
mov
incb
xor
mov
ret
jl
xor
jg
and
or
aas
jns
ret
call
add
mov
mov
inc
mov
test
nop
cmp
int3
cmp
cmp
incl
idivb
adc
sarl
shr
sbb
fidivl
js
mov
data16
rclb
push
ss
dec
aas
outsl
out
push
push
mov
sbb
cmpsl
outsb
jno,pt
movsb
adc
fdivrs
and
push
stos
pop
add
mov
insb
shlb
mov
addr16
scas
das
fsubrl
pushl
loope
inc
xor
push
adc
test
sarl
sub
jns
frstor
pop
push
pop
sub
fcomip
sub
pop
sbb
es
aaa
cmp
nop
jmp
fidivrs
push
cmp
inc
ja
repnz
inc
jmp
je
mov
ljmp
cmp
jbe
pop
cmc
add
sub
add
adc
and
and
jno
dec
xor
xor
mov
pop
jg
lock
push
pusha
imul
aaa
sub
loopne
jle
pop
cmp
xlat
xchg
xor
ljmp
mov
jne
xchg
cmpb
and
pop
in
xlat
sub
cmp
and
jmp
loopne
or
xchg
adc
cld
pushf
add
ja
std
add
or
jo
add
out
daa
inc
push
outsl
cli
mov
out
push
test
push
add
iret
aas
ja
cmp
cmp
mov
cmp
stos
adc
les
out
cld
dec
jg
out
and
in
mov
jb
std
push
pusha
add
hlt
pop
inc
mov
xor
cmpb
sub
pop
movsb
xor
icebp
or
jmp
loop
cmp
add
in
sub
mul
add
mov
int3
cwtl
ret
add
push
inc
pop
mov
jns
xchg
aas
mov
sub
add
push
fwait
mov
pop
movsb
je
xlat
decl
ja
fdivs
pusha
popf
sub
les
jmp
fwait
push
cld
or
xchg
dec
fadds
in
stos
lds
xlat
or
pop
in
mov
movsb
and
mov
inc
push
inc
xchg
and
inc
scas
cmc
xchg
and
outsl
push
dec
inc
addr16
lret
pushf
xchg
stc
inc
or
mov
call
mov
push
inc
jl
inc
xor
dec
daa
adc
mov
jle
inc
add
rcll
loop
sub
push
repnz
cmp
loopne
adc
ljmp
cwtl
and
mov
test
lcall
in
data16
or
adc
add
dec
in
movsl
out
sar
scas
mov
fdivp
hlt
ss
les
stc
mov
push
rcll
jecxz
cli
cmpl
pop
outsl
mov
stos
fdivl
gs
decl
sbb
adc
jae
push
dec
loopne
adc
lock
add
je
mov
add
and
hlt
adc
xchg
inc
jle
in
call
cmp
sbb
xor
xchg
mov
inc
leave
fwait
out
adc
incl
jp
movsl
sub
es
adc
mov
cld
add
jne
pop
shll
add
push
stos
lock
jg
cmc
adc
jo
sub
add
add
add
add
add
lock
add
push
cld
add
add
mov
xchg
inc
js
add
mov
rep
std
sbb
inc
imulb
das
xor
jb
adc
jo
lret
ret
fdivs
add
or
stos
xlat
les
stos
xor
mov
sbb
cmpsl
imul
test
cli
add
push
fistpl
inc
jnp
jp
sub
lds
and
xor
call
sbb
fisubs
add
adc
lods
sbb
dec
test
scas
and
xchg
sub
outsl
add
add
andb
movl
or
cmpsb
push
and
jle
mov
sbb
cmp
push
movsl
add
sbb
push
push
pop
pop
or
add
push
and
sub
adc
push
popa
in
mov
lahf
add
sbb
cmpsl
or
shrb
inc
sub
inc
xor
fldcw
lods
dec
mov
roll
jmp
sub
mov
rolb
push
add
lcall
push
push
pushw
sbb
dec
dec
or
inc
add
imul
push
addb
sbbb
or
mov
jo
or
xchg
and
xchg
dec
mov
punpckhbw
push
ds
mov
jae
xchg
push
mov
roll
push
add
subb
fisubrl
or
fidivrl
scas
in
outsb
shll
pop
scas
inc
jg
add
fidivs
cmp
pop
adc
add
adc
in
mov
movsb
aad
testl
pop
pop
xchg
xchg
sarl
lcall
addr16
sbb
jnp
repz
test
testb
jg
out
xchg
icebp
push
rorb
in
outsl
rolb
rolb
add
ljmp
scas
sbb
fs
test
js
add
adc
mov
outsl
push
out
xlat
fldl
cs
adcl
pop
pop
sbb
insb
inc
add
dec
fcmovnu
push
pushf
rclb
jae
push
jg
in
std
mov
xchg
inc
insb
scas
inc
rclb
dec
mov
mov
loop
mov
push
mov
adc
pop
or
adc
dec
xor
push
or
add
inc
mov
rcll
insb
push
stos
shll
jns
popa
mov
sub
sub
ljmp
mov
ss
mov
shrb
stos
jnp
jns
xlat
fisubrl
cmp
sarb
out
jns
out
out
loopne
ja,pn
pusha
rolb
insb
jge
or
shlb
mov
rorb
mov
mov
or
or
sbbb
mov
mov
and
push
dec
add
xor
negl
xor
in
mov
cmpsb
sbb
rolb
add
mov
rcrb
pushw
cld
rorb
inc
stos
xor
loopne
jecxz
add
jmp
incb
push
sub
fcoml
jg
aad
push
adc
fistps
pop
imul
sub
cmc
loopne
aaa
mul
sti
notl
inc
push
cmp
push
dec
loopne
pop
push
xor
add
push
lods
cmpsb
fstpl
loope
push
fwait
insl
xchg
cmp
push
cmpsl
add
stos
es
int
std
mov
sarl
loopne
or
lods
xor
sti
imulb
loopne
add
movsb
adc
add
mov
shr
unpckhps
pop
loopne
dec
mov
out
das
add
loopne
insl
loop
inc
or
loopne
dec
cmpsb
lods
insb
or
inc
push
push
pop
sbb
or
add
sbb
add
mov
cmpsb
imul
xchg
xor
sahf
aaa
fwait
xchg
mov
loopne
xlat
aad
jecxz
inc
pop
icebp
imul
mov
push
fs
punpcklbw
loopne
cmp
loopne
inc
pop
pop
fisubrl
fidivrs
loopne
sbb
mov
push
jg
xlat
sahf
jns
into
dec
or
mov
mov
call
sbb
loopne
imul
jbe
pop
stos
int3
push
ljmp
mov
add
loopne
push
mov
insb
lock
and
add
adc
xor
dec
popa
icebp
sub
adc
imul
stos
loope
jge
dec
adc
lock
aam
stos
fadd
adc
xor
ret
push
pop
clc
lock
sbb
sbb
sub
sbb
loopne
ret
leave
cld
aam
mov
pop
cli
xorl
jbe
outsb
sbb
jge
add
fdivs
in
push
stos
jle
sbb
jbe
adc
jp
mov
inc
loopne
das
mov
div
fidivrl
dec
loope
push
or
jnp
inc
loopne
clc
insl
fimull
push
mov
jb
sbb
xchg
lcall
add
xchg
stc
adc
xor
fsubrs
and
add
mov
pop
push
push
push
loopne
xchg
es
push
mov
sbb
add
ret
add
add
mov
scas
sub
pop
mov
aaa
cmp
sbb
mov
sbb
addr16
leave
jo
addl
lcall
loopne
mov
in
push
lock
fbstp
jmp
push
jo
xchg
cmc
dec
addb
add
or
ja
push
or
sbb
ds
dec
js
lock
shll
jae
push
jo
sbbl
insl
ficoml
xchg
sbb
mov
ret
mov
sbb
cld
jo
push
sbb
lock
mov
cmp
add
sub
adc
jg
ljmp
je
add
push
outsb
nop
inc
bound
incl
dec
pop
jmp
mov
add
mov
inc
mov
add
repnz
call
ljmp
or
dec
shl
jmp
cmc
inc
and
leave
xchg
add
cld
inc
jmp
daa
sub
inc
xchg
das
xor
mov
jne
sub
push
loop
clc
ljmp
mov
mov
in
pop
scas
push
xorb
sub
std
sub
leave
adc
bound
dec
mov
lahf
jle
es
mov
popa
iret
or
rclb
shrb
hlt
ljmp
testb
pop
inc
pop
pop
addb
outsl
leave
stos
movsb
outsl
mov
add
sarb
not
sti
xchg
cmp
aad
std
lods
sbb
mov
pop
imul
insb
lret
mov
ss
lahf
aam
xchg
mov
jge
addl
inc
imul
icebp
ljmp
rorb
popa
jbe
add
jnp
gs
std
sti
push
fucomip
mov
xchg
or
gs
xchg
cmpsl
xchg
inc
ja
add
xchg
jno
adc
adc
mov
nop
adc
aaa
pop
mov
btr
add
lods
xor
add
lods
or
add
aad
pop
adc
add
mov
sbb
in
decl
je
lea
inc
fwait
fs
mov
mov
ljmp
shrb
mov
bound
jb
add
add
and
push
or
je
stos
push
shl
jp
outsl
fistps
gs
inc
jb
lcall
jne
push
dec
xchg
outsw
jg
mov
jle
popa
je
push
ss
arpl
mov
push
ljmp
mov
jo
call
gs
fwait
push
je
lea
je
push
fmuls
or
mov
inc
lcall
popa
outsb
fwait
insb
test
sarl
push
sahf
push
imul
je
sbb
mov
and
ret
js
in
and
jg
cmp
lds
das
ja
mov
bound
pushf
outsl
insl
das
xor
outsb
les
js
addr16
mov
arpl
dec
add
lea
xor
cmp
inc
fsubrl
fisttpll
adc
push
loopne
xchg
lcall
mov
mov
sbb
jno
mov
int
or
nop
insb
add
push
cmp
add
lea
je
add
and
xor
sub
insl
and
fldl
mov
gs
mov
ja
mov
cmpl
cmpsb
mov
pop
cmpsl
mov
dec
lcall
cmpb
adc
incb
cmpsl
sbb
decl
sbb
inc
aaa
out
cli
inc
in
xor
lock
add
jg
aam
or
out
pop
or
loopne
mov
test
loop
pop
inc
dec
test
incl
mov
stos
push
push
dec
add
gs
and
jmp
int
jb
xor
push
add
ror
cmp
imul
mov
stos
push
mov
cmpsb
loopne
mov
mov
mov
notb
dec
movsb
test
arpl
add
cmpsb
sbb
sub
leave
and
daa
out
add
pop
test
incl
les
cmp
add
cld
clc
add
std
push
enter
repnz
ljmp
lret
fnstsw
into
rolb
dec
xor
add
dec
shll
outsl
ret
fdivrl
rcr
loope
adc
enter
loopne
daa
and
inc
jecxz
aas
cmp
sub
push
dec
inc
push
or
std
incl
inc
test
pusha
imul
popa
jle
mov
pop
js
jnp
imul
add
pop
imul
hlt
cmp
inc
push
cmpsl
inc
inc
inc
sub
aaa
aam
ret
into
and
je
fistpll
sub
ret
icebp
or
dec
pop
xchg
dec
adc
orl
sti
stos
repnz
cld
jg
sbb
push
fnstsw
ror
cltd
and
add
fidivrs
and
and
call
fnstcw
and
lds
cmp
and
add
lcall
mov
add
xor
gs
pop
sahf
xor
fdivs
adc
sarl
or
add
cmp
clc
pop
je
ja
sbb
and
paddsb
ret
data16
cli
aaa
dec
das
mov
sub
lret
data16
ds
cld
adc
dec
cmp
aas
dec
cmp
sub
inc
cld
inc
pop
dec
mov
cli
or
pop
scas
pop
inc
pop
in
push
cmp
test
push
dec
add
lcall
bound
and
les
insl
sub
cld
push
add
push
hlt
inc
push
sbb
cmp
and
mov
pop
mov
and
incl
push
adc
icebp
sbb
push
testb
jl
sbb
push
mov
test
cltd
out
clc
mov
jmp
fcompl
pop
sbb
int3
push
push
loop
clc
sub
call
adc
add
inc
or
add
dec
frstor
int
ret
mov
xor
cmp
daa
mov
clc
shrl
aad
aam
xchg
ret
fcmovu
pop
adc
mov
lcall
das
pusha
add
outsl
sub
je
add
jo
jg
jbe
add
jp
jo
clc
push
cld
stos
dec
les
sbb
jecxz
jle
repz
add
sbb
lock
sbb
push
negl
sbb
or
cmp
sti
scas
adc
fwait
ljmp
jmp
in
in
lock
rcrb
in
clc
mov
hlt
std
icebp
adc
in
and
hlt
loopne
add
hlt
jmp
cs
ret
aad
into
ret
faddp
xorb
iret
fsts
rorl
add
inc
mov
pop
cltd
jbe
pushf
cld
stos
call
andb
mov
data16
xor
lret
into
sub
add
xlat
and
jmp
mov
jmp
mov
inc
orb
mov
cmp
test
ja
cmp
and
sub
adc
popa
lds
ljmp
sub
pushl
pop
or
in
repz
testl
adc
test
jo
cli
fwait
add
enter
iret
mov
cli
mov
int3
add
aaa
loop
fiaddl
sub
ljmp
dec
push
add
out
clc
sub
out
and
or
loop
mov
outsl
xchg
cmp
test
mov
sahf
pop
hlt
ja
or
out
and
out
in
add
push
push
inc
ljmp
sub
inc
imul
push
test
push
dec
add
xor
aaa
cld
push
fdivs
int3
sbb
aaa
inc
aas
jo
add
int3
jecxz
and
rorb
sti
in
inc
insb
fld
jmp
clc
vmovaps
xlat
fnstenv
out
ss
incl
cmp
add
es
pusha
cmp
das
sub
fdivs
sbb
jecxz
jg
into
sub
cmp
cmp
es
out
fldl
faddp
sub
ljmp
xchg
lods
add
cmpsl
lock
or
ds
or
or
lcall
add
cltd
mov
jne
addb
push
mov
fs
pop
repnz
hlt
lock
cmc
cmc
cmp
js
jns
mov
fwait
pushf
arpl
xchg
mov
aas
pop
lret
adc
push
fmul
cmp
mov
dec
dec
std
mov
push
imul
xchg
push
pop
dec
mov
push
fists
jb
test
xchg
push
mov
loopne
inc
mov
mov
add
lock
jnp
mov
mov
addb
subl
fldenv
jae
jno
jne
insb
mov
in
std
push
out
call
rol
shll
fcmovbe
std
mov
sbbl
out
add
jmp
push
repnz
fnclex
in
out
call
adc
lock
scas
mov
lods
scas
sbb
aam
pandn
pop
inc
inc
nop
pushf
packssdw
jmp
push
sbb
repz
std
and
lock
insb
push
sti
mov
cmp
scas
insl
es
jp
decl
fidivrs
nop
clc
pushl
imul
loop
inc
mov
inc
pop
mov
pop
pop
test
mov
scas
les
mov
gs
insb
sbbl
in
mov
hlt
cmc
hlt
or
lock
out
stos
fwait
cmpl
dec
scas
push
mov
pop
mov
fcmovb
cmp
js
fcmovne
jg
xor
enter
sub
xor
sub
je
sub
add
mov
ja
out
add
in
aas
jns
xchg
andb
xchg
pop
sub
jg
shll
int
xor
cs
cmp
dec
inc
push
stos
inc
push
cld
pop
cld
incl
insl
jg
bound
cltd
gs
lahf
je
xchg
jbe
outsb
xchg
sub
push
pop
inc
push
scas
dec
dec
dec
mov
mov
or
jecxz
cld
adc
add
push
jle
lcall
pop
adc
inc
push
inc
inc
mov
mov
les
xlat
fcom
jmp
imul
outsl
cli
jmp
push
out
jle
dec
mov
push
push
mov
pop
dec
mov
inc
sub
ss
sub
call
cmp
cmp
aaa
adc
xlat
and
iret
or
pop
ret
or
xor
jp
lods
movsl
bound
jg
aam
fsubrl
fistl
inc
mov
in
ja
ret
sbb
sub
xor
cmpsb
jg
bnd
push
cmpsl
dec
pop
repnz
jmp
sbbl
loopne
push
loopne
mov
test
mov
imul
xchg
arpl
mov
dec
test
scas
mov
or
loop
sti
cmc
add
adc
cltd
xchg
lss
jle
dec
pop
pop
mov
cli
mov
add
imul
cmpsl
push
stos
mov
icebp
adc
xor
jmp
clc
out
inc
ds
pop
inc
pop
mov
add
inc
mov
push
incl
cltd
cmp
cmp
and
push
sarl
and
ds
int
sub
pop
pop
inc
mov
inc
imulb
inc
push
inc
ret
cld
lods
dec
gs
inc
jp
lea
push
jae
jge
jle
es
push
out
pop
dec
push
push
dec
pop
pop
scas
clc
xchg
aas
cli
test
pop
stos
movsb
iret
mov
cmpsl
cmpsl
mov
ljmp
call
xor
fadd
xor
roll
subb
xchg
jnp
and
incl
sub
xlat
lret
mov
or
or
sbb
divb
mov
inc
dec
mov
sub
ret
sub
sub
or
cmp
and
out
fdivrp
dec
add
and
int3
fimull
arpl
sbb
ja
push
imul
je
sub
cld
push
cld
testl
leave
sub
daa
and
push
fstpl
push
ficompl
imul
cmp
fisubl
xor
sbb
jge
es
rolb
aaa
jae
mov
adc
cld
in
ljmp
push
arpl
fs
adc
sub
jo
cs
jbe
adc
fcomip
repnz
dec
lods
stc
lret
push
mov
sbb
jl
pop
pop
mov
and
push
xchg
cmc
std
mov
outsl
inc
dec
cmpl
dec
push
jns
jle
jno
gs
pusha
push
fildll
lods
add
and
fwait
xor
xor
fnstcw
das
js
or
lock
rcll
push
pop
icebp
pop
jbe
mov
dec
scas
push
ljmp
jns
mov
and
sub
cmp
mov
add
iret
cmp
out
jmp
mov
add
sbb
test
dec
sbb
shl
or
loopne
adc
idiv
mov
cmpsl
mov
push
jmp
in
sbb
shlb
sub
repnz
jmp
sbb
xor
pop
add
sbb
std
repz
in
es
icebp
lcall
mov
testb
sub
push
or
icebp
adc
mov
aas
mov
fs
pop
ja
fwait
inc
cwtl
pop
pop
push
movsb
inc
inc
pop
mov
push
call
jne
movaps
ljmp
pop
das
adc
incl
jns
xchg
jns
jg
pop
jle
pushf
jg
jge
js
pop
lahf
outsw
gs
jle
lea
dec
data16
sti
cmp
and
test
ljmp
xor
sbb
aad
and
add
and
call
sub
cwtl
cltd
jne
mov
ljmp
lcall
jnp
jae
je
add
jo
scas
insb
mov
push
in
xor
outsb
mov
or
xlat
rolb
das
jbe
into
leave
and
and
rolb
cmp
int
cmp
fbstp
and
ljmp
shrb
cmp
fisubs
arpl
push
sub
loopne
or
movsb
or
push
int3
push
jl
call
adc
in
add
add
clc
stc
add
jae
outsl
fnstsw
cmp
std
das
sub
add
jmp
and
ret
mov
push
adc
cld
adc
adc
adc
cmp
xor
cli
pop
sbb
sti
add
sbb
and
dec
dec
sbb
push
push
adc
mov
inc
adc
push
inc
cmpsl
inc
push
add
ljmp
fs
jb
popa
mov
and
mov
mov
inc
mov
inc
mov
mov
dec
scas
mov
adc
in
jmp
add
ja
pop
pop
mov
push
dec
pop
mov
pop
dec
stc
clc
incl
mov
mov
push
or
mov
fs
enter
cmc
adc
sub
icebp
cmc
push
mov
nop
shrd
mov
cs
int3
and
and
add
sub
and
add
cmp
cmp
stos
xor
push
sbb
das
sub
push
xor
jmp
xor
jmp
or
ljmp
push
jmp
adc
sbb
outsb
mov
push
jp
into
jl
pop
mov
call
inc
push
inc
mov
dec
mov
inc
insb
js
inc
push
inc
stos
pop
dec
sbb
gs
stos
pushl
push
jbe
subl
ja
jp
mov
dec
pop
mov
cmc
stc
sti
or
jg
insb
mov
imul
jne
subl
insl
xorl
sar
jnp
pop
dec
pop
jge
inc
dec
dec
mov
incl
mov
cli
call
add
ljmp
push
mov
push
outsl
inc
push
imul
jbe
xor
dec
pop
pushl
mov
xchg
test
jb
lret
mov
lcall
sbb
jl
xchg
outsl
xchg
cwtl
int3
movsl
movsb
loop
out
loope
call
push
cmp
mov
mov
push
mov
mov
shrl
rcl
jp
enter
dec
xor
fwait
mov
fs
popa
ja
xor
jo
adc
insb
jne
outsl
sub
outsl
push
cltd
arpl
mov
pushl
push
mov
push
push
out
add
xor
push
dec
mov
jg
incb
dec
jns
ret
and
xor
shrl
xor
lock
shll
bound
adc
push
ljmp
ss
add
push
and
hlt
sbb
add
jmp
sbb
lcall
in
xor
add
loopne
test
cli
inc
mov
cld
sbb
hlt
jecxz
mov
std
mov
ljmp
xchg
lds
rol
shrb
nop
ljmp
or
add
leave
int
or
int3
test
inc
mov
mov
add
lcall
jle
mov
dec
int3
shlb
stos
push
loopne
mov
ret
test
nop
pop
mov
mov
mov
mov
lret
mov
push
sbb
ljmp
divb
arpl
fwait
js
and
inc
decl
fisubs
push
dec
pop
movsl
dec
dec
pop
hlt
push
dec
dec
test
dec
or
aaa
adc
dec
inc
fnstenv
jle
mov
insl
dec
and
int
cmp
fucomp
sbb
jmp
or
mov
insl
sub
adc
aas
cwtl
shrl
cmp
cmp
int
insl
jg
into
or
les
add
lret
dec
stc
sbb
out
inc
int3
cs
push
test
pop
cmp
arpl
and
inc
inc
xor
jbe
test
dec
mov
movsb
mov
and
loopne
cmp
add
adc
pop
fnstenv
add
ret
loope
call
in
jecxz
and
neg
and
repnz
cli
aam
aas
fcmovnb
fldcw
jg
aas
cmpsb
pop
pop
pop
jmp
cpuid
adc
and
jmp
fidivrs
and
xor
sub
sarb
and
mov
mov
lcall
lds
adc
push
fimull
add
incl
mov
aam
enter
iret
iret
mov
add
add
add
mov
pop
mov
aas
loop
mov
or
mov
pop
push
mov
sahf
inc
mov
mov
mov
inc
clc
jo
mov
pop
xchg
iret
push
push
aaa
in
sbb
sbb
adc
sbb
lret
xchg
jp
push
jp
push
lock
std
outsb
and
mov
repnz
cmp
adc
jecxz
adc
sbb
pop
decl
push
pop
stos
push
pop
add
push
dec
push
scas
and
add
sub
sub
loope
clc
pop
cld
adc
add
adc
add
dec
mov
jg
mov
inc
repnz
jmp
in
gs
int
rcr
shll
cmp
inc
cmp
ret
int3
sub
sahf
xchg
adc
jmp
push
clc
push
inc
jmp
icebp
push
mov
loop
test
adc
add
pop
clc
loopne
fwait
cld
inc
sbb
sti
pop
pop
pop
cli
sbb
notb
adc
sbb
cld
mov
push
cmp
pop
dec
dec
dec
sti
fistps
dec
inc
mov
inc
sbb
mov
push
pop
stos
push
pop
push
mov
push
mov
es
xchg
sbb
ret
xchg
xchg
les
push
cmp
enter
jbe
xor
iret
pop
aaa
mov
pop
test
stos
xchg
ljmp
scas
aas
xor
aam
push
subb
mov
adc
repnz
ljmp
dec
mov
clc
sbb
mov
and
lcall
enter
movsl
iret
cmpsl
push
push
push
mov
push
pop
fldl
inc
daa
fdivl
aaa
add
aad
jns
in
push
or
lcall
push
outsl
xchg
cmp
sub
push
mov
notb
and
aad
adc
jle
popa
mov
gs
add
add
xchg
xchg
and
dec
jecxz
add
sbb
push
mov
daa
int
into
cmpsl
mov
sbb
out
sub
jg
dec
stos
lods
fcomi
ljmp
inc
cmpsb
dec
push
push
in
xchg
std
sti
in
and
jmp
stos
pop
push
int
sub
shlb
jb
jl
xor
or
mov
jp
jg
pusha
sub
fidivs
ja
in
ss
push
inc
sub
adc
or
sti
jge
aas
pop
push
out
cmp
xor
outsb
push
hlt
div
or
call
jg
loope
sbb
lock
sbb
mov
or
icebp
ljmp
dec
leave
mov
int
cmp
lret
lret
ss
cltd
and
icebp
filds
clc
mov
mov
add
mov
mov
add
lods
push
test
pop
cmp
adc
notl
dec
gs
pushf
add
dec
aad
mov
xchg
push
insb
dec
adc
push
lahf
mov
inc
mov
add
xor
sbb
mov
lret
outsb
mov
shrl
aad
fldl
je
loop
cli
imul
xor
push
clc
mov
xadd
dec
push
add
fists
pushf
popa
bound
gs
fwait
add
std
mov
inc
lea
je
push
mov
inc
imul
push
pop
inc
lcall
jb
jns
test
add
add
sub
arpl
js
loopne
pop
mov
cltd
jbe
push
outsb
adc
jae
dec
hlt
pop
sysret
sbb
xchg
push
add
push
mov
jle
out
sarb
mov
mov
and
insl
or
sbb
popa
mul
pop
js
push
dec
or
loop
hlt
or
fidivrl
xchg
xchg
into
lds
adc
js
insl
and
cmp
in
sbb
ret
cld
jge
fsubrs
and
pop
add
fldl
push
pop
into
push
push
sbb
add
aad
cmpb
sub
jne
shrl
sahf
cmp
lods
cs
clc
mov
cmp
mov
lcall
mov
insb
insl
sub
cmpsb
sbb
inc
jbe
outsb
push
cmp
inc
xchg
push
mov
outsb
add
and
jns
dec
mov
nop
add
push
sbb
pop
gs
inc
sbb
mov
inc
in
pop
insb
push
xor
stos
aas
mov
pop
fwait
inc
inc
add
popa
and
jnp
mov
mov
cmp
xchg
inc
nop
subb
push
subb
scas
push
incl
sub
aaa
jae
adc
xorb
leave
add
xor
loop
pop
addl
xchg
add
dec
pop
dec
sub
daa
add
pushl
ljmp
andb
lods
mov
subl
out
jbe
stos
dec
bound
push
inc
push
mov
inc
adc
push
mov
push
dec
add
and
lock
push
inc
mov
cmp
inc
push
inc
orl
add
stos
icebp
jbe
fisttpl
pusha
stos
adcb
push
movsb
dec
dec
mov
outsl
mov
inc
sbb
dec
addl
sbbb
push
inc
sbbl
or
roll
or
roll
push
imull
mov
mov
in
mov
enter
mov
pushl
inc
inc
add
adc
dec
cmpsb
pushf
call
sbb
js
sub
gs
test
mov
push
adc
pop
je
shlb
pushf
fnsave
push
mov
and
mov
aas
std
mov
add
jbe
jo
jb
fs
pushf
push
ljmp
stos
or
shlb
cmp
rclb
mov
sub
xchg
adc
adc
ret
adc
sub
mov
fcompl
shlb
or
add
nop
ja
ret
push
jle
adc
gs
imul
insl
mov
dec
push
or
mov
gs
jecxz
xchg
popa
mov
adc
add
insb
fwait
sub
imul
or
mov
gs
jle
lcall
popa
xchg
shrb
pop
sbb
inc
arpl
inc
loope
fstpl
scas
or
popf
les
sar
inc
mov
lcall
mov
add
mov
push
outsl
mov
add
inc
xor
cld
shlb
rcll
ret
orl
push
jbe
popa
sbbl
inc
outsb
pop
xchg
insl
or
jge
xor
inc
insb
outsl
pushf
imul
mov
and
jns
fdivl
shlb
adc
arpl
add
test
sub
and
cld
or
mov
jbe
and
push
push
std
idivb
sahf
popf
pusha
pop
mov
mov
and
imulb
inc
insl
and
jbe
mov
adc
outsl
fistps
and
loopne
xorb
loope
fucom
add
mov
loopne
pushf
loopne
inc
sbbb
rcll
rcll
xchg
clc
popa
push
pop
stos
mov
push
lods
mov
sub
call
inc
cld
add
adc
inc
into
mov
push
jnp
inc
je
aam
mov
out
mov
sbb
add
push
or
ret
push
stc
inc
cmp
dec
jg
jmp
je
mov
jne
int3
leave
test
pushl
inc
add
ds
or
push
sub
or
rolb
add
mov
movsb
test
jmp
add
notb
or
jmp
dec
or
xor
std
movsb
rcrb
ret
scas
jp
xchg
in
cmp
je
cmp
test
fisttpl
jg
mov
adc
add
jbe
inc
fmuls
and
in
loopne
inc
ss
push
push
decl
jg
push
sahf
jl
pop
test
jne
xor
jmp
push
test
xlat
inc
jb
call
mov
mov
jp
push
cmp
jmp
and
jg
inc
lock
das
jne
decl
inc
sbb
mov
call
mov
lea
add
sti
ljmp
mov
add
xor
cld
jno
outsl
pop
sub
adc
pop
jne
inc
mov
xor
adc
jbe
inc
mov
or
lea
or
push
pop
sbb
dec
jmp
dec
mov
cmp
das
mov
in
hlt
mov
nop
or
je
ror
add
ret
jg
pushl
mov
cmp
add
movb
mov
mov
sub
inc
sti
sub
add
xor
decb
call
aas
je
mov
pop
movb
insl
jnp
mov
inc
test
jne
add
shlb
cmp
mov
or
rcrl
les
clc
je
cmpb
dec
or
je
push
jl
xor
addl
add
mov
dec
ret
ljmp
mov
nop
adc
pop
mov
push
push
cmp
sbb
add
add
loopne
ljmp
divb
mov
jl
pop
pop
ss
test
cmp
decl
ds
inc
push
ss
test
loop
pop
mov
incb
rorb
adc
xchg
or
lret
int3
and
pop
add
pusha
and
clc
mov
loopne
addl
adc
leave
clc
push
add
adc
dec
add
cmp
clc
sub
leave
inc
pop
jmp
xor
mov
cmp
ds
loopne
loop
jmp
xor
stc
cmp
mov
lods
jbe
adc
ljmp
test
inc
aad
pop
xor
sub
jg
sbb
inc
pop
outsl
mov
icebp
add
sahf
fisubrl
das
mov
loopne,pn
xor
cs
push
inc
mov
loopne
mov
mov
inc
cmpsb
mov
xor
pop
cmp
mov
xor
push
call
in
out
push
or
incb
add
xchg
pusha
or
mov
icebp
rcll
movzbl
divl
xor
call
fcoml
mov
out
call
or
and
mov
rcll
pop
sbb
ficomps
or
dec
cmp
jne
addb
dec
mov
je
cmp
sub
sbb
shrb
aam
xorl
mov
cli
push
sub
inc
mov
jbe
mov
inc
xor
repnz
add
jl
add
and
jg
stos
push
je
pop
mov
sbb
inc
pop
mov
lock
fdivr
pop
adc
repnz
loopne
pop
pop
add
movl
cmp
sbb
adc
dec
dec
or
jg
cmp
add
dec
fistl
mov
push
push
stc
and
jmp
jg
jae
idivb
mov
stc
shll
addb
jae
add
cmpsb
cmp
jg
add
pop
mov
jbe
mov
add
ljmp
add
setle
lret
sbbb
rcrb
ret
iret
add
jo
dec
sbbb
ret
xor
add
pop
fisubs
mov
xor
or
xchg
loope
fiaddl
cmp
jb
dec
or
lcall
cmp
imul
mov
jnp
lock
jecxz
mov
nop
decl
add
je
add
mov
ret
repz
pop
sub
xchg
sub
in
inc
mov
jmp
jl
push
sbb
add
dec
mov
and
push
pop
xchg
mov
dec
add
xchg
push
jg
jg
jbe
jbe
cmp
push
jb
clc
or
and
xor
cli
fwait
push
push
jge
les
out
add
adc
cmpl
decl
xor
jge
add
jo
jo
adc
adc
mov
jp
or
inc
add
add
je
push
sahf
fidivs
push
add
in
pop
mov
inc
je
lock
xor
mov
hlt
pop
cmc
sub
lock
jmp
pop
mov
fdivs
jne
testb
je
jo
inc
movzbl
ljmp
je
hlt
inc
add
lock
jl
add
dec
lock
cmp
mov
adc
add
add
jne
mov
mov
mov
mov
add
inc
or
adc
ret
fs
cli
pop
clc
add
lea
lea
mov
cmp
decl
idivb
bnd
add
and
sub
rorb
inc
sti
jmp
dec
scas
and
pop
cmc
adc
inc
testl
jae
add
jge
call
jo
jg
mov
pop
cmp
sub
push
xor
or
mov
and
cmp
xlat
insl
sti
or
mov
sub
scas
in
add
pushf
call
or
fdivrl
aad
lock
lea
mov
cmp
in
and
hlt
adc
mov
push
fcmovbe
jmp
mov
push
jo
mov
wrmsr
cs
mov
add
les
jae
mov
fadds
call
pop
pusha
jno
jnp
xor
xor
jnp
push
xor
xor
insb
add
adc
jg
popa
jne
add
cld
lret
inc
sub
je
in
stos
cld
mov
lret
lock
sarl
jl
pop
add
dec
fists
mov
adc
pop
int3
inc
imul
jae
test
call
ret
scas
call
push
into
add
cs
sti
pop
fmull
sbb
test
cld
jge
out
xor
in
icebp
or
imull
cli
push
mov
inc
shl
mov
addb
add
cld
notb
adc
push
icebp
jno
mov
test
or
cld
das
xor
cwtl
pop
mov
ljmp
test
jle
lock
pop
orb
ljmp
or
cwtl
or
imul
pop
in
rcrb
or
imul
clc
xchg
mov
cmpsb
xor
pop
jns
pusha
cld
lcall
sbb
add
ret
mov
inc
call
lcall
adc
inc
pop
sti
adc
mov
orl
add
xchg
push
mov
cmpsl
sti
fsubs
mov
xchg
jg
inc
and
movsb
in
mov
sbb
and
mov
fisubs
add
jmp
lea
cmp
sbb
mov
bound
lock
movl
push
sub
fadds
pop
fldl
sbb
je
push
inc
jmp
hlt
cmp
pop
mov
add
push
mov
test
je
add
jbe
dec
mov
sub
add
movsb
sub
add
jne
pop
mov
mov
push
hlt
in
push
call
inc
fisttpl
mov
cld
les
testb
xchg
jno
cmp
mov
in
sbb
or
or
adc
fimull
into
jmp
adc
push
push
jl
stos
sbb
fwait
adc
gs
test
pop
push
es
fcomip
xchg
rclb
mov
push
or
adc
mov
sub
pop
push
cmp
dec
add
fwait
std
pop
add
sbb
insb
and
adc
pop
in
es
clc
push
push
adc
sar
jg
mov
lcall
push
pop
mov
lock
pop
mov
call
mov
xor
leave
and
xor
mov
pop
cmc
outsl
push
push
xor
dec
testb
xor
cld
leave
cmp
sar
push
sub
push
into
mov
xor
push
push
aad
mov
inc
inc
jp
xor
shll
ss
and
sub
orb
adc
call
push
inc
or
push
sbb
or
push
iret
lock
in
push
push
mov
mov
xor
fcomip
incl
orb
or
divb
adc
ret
dec
push
jo
push
pop
and
cmp
icebp
push
xor
or
adc
nop
sbb
sarb
in
adc
xchg
or
nopl
test
and
xor
push
mov
hlt
add
shr
mov
xor
pusha
clc
outsl
call
inc
repz
or
add
sub
mov
push
pop
push
repnz
outsl
push
push
inc
fdivs
xor
jmp
push
lock
lock
inc
sbb
ret
adc
fwait
dec
mov
mov
pop
mov
out
and
xor
hlt
push
call
mov
jnp
scas
pop
mov
lock
inc
andl
push
imulb
je
fadds
dec
mov
in
mov
add
incl
in
add
jb
loopne
push
jo
dec
push
mov
and
mov
fdivs
add
fstpt
test
mov
std
inc
lea
mov
pushl
xchg
add
aaa
std
xchg
je
push
mov
fdivl
ja
cmc
and
cmp
cmc
jle
inc
fiaddl
test
lcall
idiv
outsl
mov
xor
inc
and
jbe
daa
testb
sbb
int
or
push
scas
jp
mov
fsubr
xorl
ja
je
mov
lock
mov
adc
es
jb
jno
lea
jo
je
adc
cld
pop
jo
jbe
sbb
pushl
jae
andl
scas
xchg
mov
adc
test
andl
push
das
loop
jmp
xor
gs
adc
fsubl
shr
fdivl
ret
xchg
and
sub
push
test
pop
add
call
mov
xor
fdivrs
in
push
push
sub
cmpsb
add
and
std
mov
shl
pop
inc
and
rcrb
and
daa
js
in
mov
or
dec
mov
pushl
xor
loopne
inc
daa
adc
cmpsb
sub
pop
adc
inc
scas
pop
subb
push
mov
push
add
jnp
inc
cmp
jle
stos
call
cmp
test
xlat
push
push
mov
shrb
test
xor
lea
sub
les
ds
inc
xor
lock
inc
shlb
jne
jl
jmp
or
lods
cwtl
fimull
pop
sarb
subb
push
mov
ja
or
mov
push
sbb
adc
movsb
push
cmpb
dec
cmpsb
mov
mov
fwait
sbb
adc
or
add
cmp
or
pop
ret
mov
mov
jb
rolb
sbb
das
push
ljmp
imul
ss
je
xorl
mov
add
aaa
daa
and
mov
pop
lcall
dec
mov
pusha
cmp
or
mov
mov
mov
mov
push
pushf
imul
out
cwtl
in
add
mov
add
sahf
push
out
lahf
sub
out
movsb
sbb
ret
lcall
arpl
cwtl
bound
call
mov
out
ljmp
in
out
loopne
addr16
push
addr16
sti
and
adc
add
xchg
mov
call
inc
pop
mov
adc
loope
mov
std
xor
dec
call
ja
add
mov
fwait
cmp
bound
ret
lcall
out
mov
stc
xor
int3
jg
push
cld
push
out
lods
inc
sti
inc
inc
ljmp
cmp
outsl
adc
cmp
sub
fmul
jg
adc
clc
call
and
mov
in
push
icebp
xor
push
xorb
sub
mov
rorb
mov
je
and
mov
fs
ret
test
in
cmp
cmc
clc
jle
mov
push
shrb
xor
or
test
fbld
jbe
pop
and
jbe
and
add
fcmovnb
mov
adcb
mov
cmp
dec
rorb
push
std
fbstp
jbe
adcb
sti
je
test
stc
les
pop
rorl
rclb
adc
ret
jne
adc
xor
loopne
out
sbb
pushl
shlb
into
pop
pushl
push
idivb
repz
mov
scas
push
push
xor
add
pop
lea
call
rcr
ljmp
xor
pop
mov
insb
int3
sarb
fldt
lea
stos
subl
jb
or
clc
outsl
lcall
ret
push
xchg
add
add
add
loopne
js
addl
rcrb
call
cld
shrb
call
jmp
mov
adc
sbb
inc
adc
shll
pop
cmp
scas
je
cmp
sti
push
push
shrl
mov
sbb
xor
inc
xchg
fs
adc
shl
inc
dec
or
or
ret
add
or
out
insb
inc
ljmp
das
add
testl
push
mov
push
insb
add
aaa
insb
jne
testb
jne
movsb
sbb
jge
mov
icebp
jmp
mov
repz
sub
and
std
and
rorb
orb
das
call
pusha
adc
enter
jp
into
cmp
xor
out
movsb
and
xchg
adc
mov
scas
lea
test
or
jo
or
pcmpgtb
arpl
mov
shr
push
sub
bound
lock
cs
cmp
mov
inc
push
daa
in
push
mov
inc
cld
in
pop
add
mov
jg
inc
or
or
or
lret
mov
leave
je
jp
jne
inc
pushf
jl
rclb
insb
rorl
adc
mov
mov
ret
pop
push
roll
clc
mov
fcomps
into
lods
lea
ss
pop
lret
adc
scas
adc
dec
mov
xchg
dec
xchg
call
mov
or
ret
enter
and
pusha
dec
lea
popa
cmp
ljmp
subb
call
lea
pusha
adc
add
inc
add
mov
push
sbb
call
lods
mov
call
fldl
push
pusha
fwait
sbb
ss
push
decb
scas
xlat
mov
decb
lea
pop
cmp
adc
lea
in
test
add
ss
or
push
outsl
lret
sbb
dec
inc
dec
sub
adc
add
xchg
inc
jbe
add
loopne
mov
sar
jg
xchg
pop
cmp
je
cmovs
add
aaa
je
push
int3
not
jg
jnp
iret
jne
and
addl
je
jl
add
cli
push
pop
cld
aaa
jge
call
add
add
pop
das
cmpw
ja
add
xor
add
outsl
mov
sti
jmp
lea
and
testb
leave
jmp
pop
push
ret
xchg
add
jg
xchg
test
movl
or
mov
pop
cmp
or
je
sub
cmp
xchg
pusha
mov
add
inc
andb
fs
pop
mov
idiv
decl
xchg
and
cld
push
adc
outsl
cld
loopne
mov
push
or
pop
pop
insb
push
sahf
and
jle
add
shll
out
push
inc
add
insl
jg
push
cmp
loopne
cmp
shl
hlt
sub
data16
pop
add
cltd
mov
pop
xor
notl
adc
or
push
movsl
mov
add
add
mov
ret
pusha
arpl
push
adcb
outsl
lahf
mov
hlt
call
je
mov
mov
pop
pusha
pop
mov
pusha
or
je
mov
or
scas
push
je
jne
movsl
movsl
shlb
pop
dec
pop
loopne
loopne
add
cltd
cmpl
jb
or
lea
or
ljmp
fwait
scas
jl
jbe
push
inc
pushf
xor
jecxz
loopne
mov
pop
je
popa
sbb
aam
js
inc
das
loope
clc
mov
sahf
add
or
mov
pop
imul
add
scas
push
test
push
add
and
call
sub
pop
call
outsb
dec
leave
mov
clc
jbe
lret
call
jg
std
sub
test
cld
enter
orl
sti
pop
mov
push
pop
movb
imul
std
addb
mov
pusha
dec
jge
fdivr
pop
push
add
in
add
loopne
push
cmpsl
dec
add
pop
rolb
and
mov
scas
cli
push
pop
add
pop
pop
pushf
lea
or
push
lods
mov
mov
push
dec
jne
fiadds
jg
mov
dec
sti
andl
cmp
cmp
inc
mov
gs
clc
pushl
and
mov
test
leave
dec
add
cmp
and
mov
xchg
aaa
push
je
adc
pop
icebp
sbb
call
lds
outsb
jo
push
or
loop
mov
sub
sti
jae
mov
cmp
jle
pop
sarl
dec
cld
decb
jnp
pusha
mov
lea
or
mov
jbe
call
cmp
or
adc
pop
mov
orb
xor
sub
add
inc
cld
mov
shl
adc
pop
jg
shl
lock
movzwl
mov
sbb
fmul
js
push
xchg
adc
je
fcoms
stos
pop
pushw
and
add
add
pop
in
add
push
push
xchg
push
push
clc
jp
mov
loopne
jg
mov
inc
jl
les
xor
jp
enter
inc
inc
shrl
push
mov
add
jl
lock
and
push
inc
and
add
loopne
ljmp
fisttpl
and
repnz
call
je
xchg
outsb
adc
mov
adc
jecxz
add
push
pop
lret
test
push
add
jp
dec
xor
outsb
mov
inc
inc
inc
lods
loope
cmc
ljmp
cmpsl
mov
jb
add
add
or
or
aaa
insb
fisttps
divb
ds
jbe
mov
mov
out
sbb
mov
call
push
push
adc
xchg
mov
movsl
add
adc
stos
adc
je
in
call
in
loop
adc
loopne
dec
out
add
pushf
stos
or
ljmp
jle
in
add
dec
lock
xchg
add
pop
call
outsl
jg
mov
cmp
adc
test
sbb
fnstsw
xchg
call
mov
sub
in
xor
addb
mov
dec
test
or
or
lock
inc
jle
lock
xor
jb
sbb
mov
push
inc
cmp
mov
jo
mov
xchg
sub
mov
cmpsb
das
sar
clc
push
pop
test
push
jbe
jge
aam
pop
lods
decl
inc
add
or
sti
adc
clc
add
adc
mov
stos
pop
movsl
sbb
or
pop
ja
pop
lock
call
outsb
aas
inc
xor
repnz
divl
cli
ljmp
mov
mov
lock
lcall
or
insl
cmp
lock
punpckhdq
inc
imul
cmp
rorl
sarl
call
jno
sbb
cld
or
loop
jg
repnz
or
inc
or
or
inc
lock
repnz
mov
mov
jne
repnz
mov
mov
xor
or
stos
popa
ss
jl
cmp
xchg
xor
or
or
adc
aad
arpl
stos
add
adc
clc
shrb
or
push
test
jmp
scas
add
lods
jne
sete
cmc
decl
mov
jmp
push
call
xor
xor
mov
pop
es
and
cmp
mov
cmp
shlb
push
and
mov
inc
mov
add
mov
xorl
enter
sub
jl
and
and
fcomip
add
push
push
mov
pop
aam
and
fs
mov
sub
push
lcall
movsl
mov
add
pop
xor
push
cs
lock
push
andb
cli
mov
sbb
lods
lock
push
lock
push
lock
stos
lcall
xor
inc
mov
mov
xchg
add
pop
inc
inc
lock
and
je
lcall
loope,pt
adc
shll
inc
mov
jecxz
inc
dec
cltd
cmp
xor
sti
stos
decl
inc
push
push
push
jp
jg
pop
cmpsl
ds
stos
jo
lret
clc
stos
jp
lret
or
adc
test
call
test
mov
inc
sahf
jne
pop
xchg
pop
mov
pop
or
repz
inc
push
push
cmovs
ja
sbb
xor
jl
add
dec
clc
jbe
cld
jmp
xchg
or
mov
pop
and
lods
add
mov
lcall
mov
and
call
mov
adcl
mov
xchg
jg
mov
je
add
pop
xor
lock
cmp
sub
pop
jg
add
mov
dec
adc
push
or
mulb
cld
mov
test
addb
enter
cmpsb
jmp
out
clc
xor
cmp
and
xor
add
out
xchg
dec
push
testb
call
sub
adc
and
ljmp
push
pop
mov
adc
pop
pop
jo
sbb
add
lret
jne
movsb
scas
cmpsb
add
add
mov
js
push
sub
rolb
jae
sub
incb
mov
mov
inc
add
add
mov
add
and
call
push
repnz
inc
cmc
call
mov
stos
xor
icebp
push
adc
lea
push
test
xor
lcall
sbb
adc
xor
mov
stos
or
ficoms
jmp
and
fnsave
push
je
adc
add
push
scas
insb
pop
push
clc
pop
pop
sbb
cmp
decl
cld
ret
add
or
les
sbb
adc
or
decl
xor
test
je
inc
mov
jb
hlt
icebp
aam
bound
aas
cmp
sbb
dec
icebp
jnp
mov
or
sub
shll
es
push
scas
cli
xor
aas
adc
lcall
cld
out
add
cmp
add
ret
mov
lods
mov
push
test
sti
or
idivb
or
stos
cli
push
mov
jp
call
jle
lcall
and
cmp
push
lock
inc
lock
je
test
add
std
stos
adc
js
add
adc
inc
push
ret
pop
cmp
add
or
adc
idivb
int3
inc
cmc
or
pop
notl
jo
addl
adc
repnz
add
mov
repz
add
sub
sub
adcl
push
jo
ja
mov
je
ret
jno
ljmp
shlb
add
in
mov
call
cmp
clc
add
push
repz
cmp
add
jnp
pop
add
addl
ret
jo
push
std
pushl
shrb
push
cld
call
sub
or
jb
js
aad
mov
add
lea
roll
mov
lock
jbe
js
mov
sub
pop
dec
push
movsb
es
jmp
lock
fmulp
je
add
push
cld
popf
test
jb
add
add
loope
jg
and
add
pop
cmp
fisubl
js
mov
jge
je
push
movb
scas
ret
mov
rclb
mov
fisttpl
data16
out
sub
pop
enter
repnz
inc
negb
cmp
stos
mov
and
adc
cltd
add
data16
add
das
cmp
or
je
adc
inc
cld
rclb
clc
inc
mov
ss
sbb
dec
enter
mov
add
in
push
dec
subb
inc
dec
das
dec
call
push
adc
push
loopne
or
or
test
call
cld
cli
sub
xor
and
jp
adc
mov
add
mov
sar
pop
add
call
pusha
jl
push
adc
mov
sbbb
cmp
insb
addl
loopne
mov
cld
push
in
xor
mov
jbe
or
outsb
xchg
push
mov
xchg
dec
push
push
adcb
cs
es
mov
loopne
mov
push
or
cmp
jo
outsb
lea
lea
std
call
sti
jecxz
lret
push
mov
adcb
pop
fildll
pop
dec
addl
decl
xchg
mov
je
cmp
inc
add
sbbb
test
xlat
mov
jb
mov
add
pop
push
inc
stos
and
push
andl
pop
subl
cmpsb
int
pusha
cmp
movsb
subb
shll
ret
or
xor
push
sbb
mov
pushf
mov
push
jl
je
negl
incl
push
inc
inc
sarb
aam
lea
lea
jp
js
rorb
lret
sbb
decl
xchg
pop
cmp
add
xadd
or
push
test
dec
rolb
and
filds
lea
into
cli
divb
loopne
jmp
jb
or
data16
clc
add
jmp
and
mov
and
add
pop
mov
add
inc
add
add
dec
inc
rolb
data16
xor
dec
xchg
insb
lods
jnp
add
repz
ds
add
mov
cmpsb
or
mov
loop
or
jae
adc
std
out
add
clc
ja
xor
je
mov
icebp
jae
mov
cmp
mov
push
lcall
mov
mov
xor
sub
cmp
lods
push
cld
lret
orb
adc
std
push
shrl
test
push
xchg
mov
push
add
div
or
mov
loopne
add
xor
push
rolb
mov
incl
mov
mov
lds
xchg
inc
sbbb
shrb
inc
add
lahf
adcl
std
mov
jmp
rcrb
clc
jl
aam
lea
movsb
fidivrl
js
xor
dec
push
hlt
outsl
mov
jmp
mov
jns
adc
incb
shrb
push
pop
in
call
add
pusha
mov
mov
push
jnp
jb
sarb
imul
adc
je
lret
push
mov
aaa
jmp
xchg
adcl
lods
add
pusha
dec
je
clc
in
push
roll
mov
inc
hlt
cmp
test
loopne
cld
mull
or
inc
addb
jg
mov
testb
ret
add
sbb
lea
xorb
int
daa
lock
fnsave
sub
cld
jmp
jne
pop
add
or
or
jle
push
cmp
ljmp
sub
pop
jne
int3
leave
fiadds
in
adc
add
and
sar
in
dec
xor
cli
jb
push
jne
add
loopne
and
pop
inc
add
cmp
repnz
sub
test
imul
shr
xor
push
jmp
add
dec
ret
jl
push
or
scas
mov
and
push
in
inc
and
inc
adc
jmp
das
or
jmp
jmp
les
call
fsub
or
push
popa
and
clc
add
or
mov
cld
mov
ret
lock
push
jo
sbb
cmpsb
xor
cmpl
sbb
pushf
addl
or
push
test
ret
lods
loope
decl
mov
add
add
repnz
dec
and
lock
jge
ret
cvttps2pi
insl
xchg
out
sub
lea
addb
dec
mov
jo
cltd
cmp
jne
mov
or
jmp
mov
and
loope
in
fiadds
popa
fdivs
dec
incb
add
mov
in
rcll
sti
call
cmp
fistpl
shrb
jl
pushf
or
adc
inc
mov
scas
adc
call
push
fcoms
add
mov
sbb
je
and
clc
lret
and
mov
or
ret
mov
in
adc
cli
jg
lock
and
fstpt
inc
pop
cmp
lock
mov
add
add
xchg
or
xchg
jecxz
adc
out
mov
or
or
jmp
cltd
and
sbb
pop
fadds
add
pusha
add
mov
mov
add
mov
inc
adc
jl
aaa
mov
pusha
pushf
ds
mov
call
incl
dec
loop
pop
jl
clc
and
and
push
pop
cltd
push
in
mov
cmpb
and
pop
mov
jnp
xchg
lock
push
pushl
je
outsb
lret
jnp
repnz
stos
imul
jo
xor
insb
push
xchg
and
fs
mov
loope
incl
adc
inc
les
push
fdivp
add
fldenv
or
rorl
loopne
in
pusha
mov
sbb
cld
sarb
or
enter
je
cwtl
orb
test
fisttps
and
inc
add
pushf
pusha
pop
adc
xor
stos
mov
jmp
and
bound
mov
jge
mov
mov
outsl
add
inc
aam
jne
aam
pusha
mov
addb
and
bound
xchg
out
or
scas
clc
adc
push
ljmp
dec
or
add
xchg
repz
push
or
bound
das
test
fidivrl
dec
sbb
test
addl
repz
inc
inc
call
push
jmp
sub
xor
add
pusha
shll
fmuls
sbb
movsb
pusha
sub
and
mov
sbb
mov
test
jne
sub
fmuls
lahf
pusha
xchg
outsb
inc
lock
pop
pop
add
add
jae
je
in
mov
das
in
or
and
das
clc
lods
dec
clc
add
adc
jne
js
jo
push
push
lock
add
mov
mov
adc
inc
push
xor
adc
notb
push
icebp
fists
and
repz
add
fidivl
insl
ficoms
loop
test
dec
sbb
repz
rorl
andb
add
jl
nop
repnz
filds
div
lahf
shl
fcomps
aas
pop
lea
lcall
ljmp
xchg
jmp
add
mov
cmc
cmp
push
or
ret
jmp
cltd
cmp
in
xchg
push
cltd
int3
mov
data16
lods
dec
jl
mov
ret
jo
push
sbb
and
test
addb
loopne
adc
sbb
call
jmp
or
pusha
sbb
test
push
ds
mov
add
stos
or
popa
clc
call
push
je
and
jp
and
add
xor
dec
xor
adc
sbb
and
scas
push
add
pop
add
inc
inc
addb
clc
or
jno
add
dec
lcall
pop
add
pop
inc
fdivrl
or
xor
pop
jns
xor
xor
mov
push
jb,pt
mov
sar
sbb
pushf
imulb
mov
xor
jo
or
dec
out
ss
rcll
std
call
pop
fsubl
clc
adc
cmp
scas
mov
push
jbe
fstpt
add
jo
repz
pop
jno
test
or
call
jg
hlt
nop
mov
call
pop
and
sbb
ja
pop
and
cmp
add
decl
jo
lea
inc
les
inc
mov
jns
mov
pop
rcl
lds
sbb
mov
add
std
mov
ret
ss
mov
adcb
dec
mov
scas
mov
call
xor
jae
je
mov
andl
xchg
jmp
jg
call
add
push
jo
adc
imul
std
ljmp
rcll
fnsave
and
je
mov
mov
adc
xchg
xchg
pop
into
cmp
cmpl
inc
std
mov
inc
cltd
mov
push
aaa
inc
xor
pop
movsl
dec
sbb
mov
jmp
mov
cmp
add
das
ljmp
inc
into
jb
je
sub
xchg
mov
jae
cmpb
pop
loopne
scas
jp
cmp
jne
mov
xor
lock
lret
add
push
aaa
fdivr
jle
testb
push
loopne
xchg
and
rclb
call
aam
jl
adc
int3
fldt
aaa
cmp
add
mov
cld
mov
and
adc
pusha
mov
orb
pop
mov
lcall
icebp
inc
cmp
jb
fimuls
out
inc
rorb
jbe
adc
sbb
lcall
loop
jmp
inc
movb
jnp
icebp
xor
dec
jbe
hlt
icebp
outsl
rorb
sbb
lds
jne
les
xchg
loop
jp
loopne
jle
jb
or
mov
je
je
mov
jne
jnp
es
aad
push
jle
or
or
filds
jle
lea
cmpb
lea
jl
fbstp
add
jmp
mov
mov
add
adc
fcomps
fwait
cmp
inc
add
ret
or
pop
or
cmp
sarl
jne
lock
mov
and
mov
outsl
mulb
inc
mov
jo
inc
add
push
jmp
inc
or
add
sub
lcall
les
add
inc
inc
dec
add
inc
lods
or
aaa
cmp
mov
mov
ss
mov
jne
push
adc
orb
jbe
jmp
cmp
mov
mov
or
jle
push
sti
outsb
mov
jg
mov
idivb
cmp
xor
or
push
xor
push
push
jno
imul
xorb
inc
daa
cmp
adc
xor
adc
sahf
fcoml
out
sub
mov
add
lock
dec
pop
add
mov
js
jecxz
test
xor
adcl
ljmp
lahf
lock
pop
push
add
lea
scas
push
pushf
push
lock
ss
mov
mov
sbb
lcall
or
pusha
xchg
add
fadds
cli
mov
addl
insb
add
ret
dec
cwtl
faddl
fcomip
fwait
test
mov
or
jne
movsb
xchg
jne
mov
pop
orb
jmp
inc
jl
cmp
loopne
adc
add
jbe
icebp
inc
or
inc
pop
mov
mov
lock
and
sub
ja
adc
xor
adc
inc
movsb
les
popa
add
add
xorl
call
adc
shlb
ret
pop
scas
or
subl
xchg
add
fsubl
clc
or
shll
push
mov
jne
xchg
xchg
add
add
out
adc
lea
xor
jle
incl
pop
xor
adc
add
xor
sti
jno
jo
pop
and
adc
adc
mov
pop
scas
mov
adcb
push
jno
nop
ss
add
adc
sbb
adc
adc
pop
cmp
lea
push
or
push
push
push
xchg
add
push
push
lods
lock
cmp
loopne
mov
mov
and
lods
push
and
cmp
clc
push
loop
push
mov
dec
xor
mov
xor
movsb
mov
add
sub
add
dec
scas
bound
or
mov
aaa
add
xor
cli
mov
clc
adc
add
add
je
call
cwtl
shl
push
adc
shll
sbb
js
xor
fsubrs
shll
push
adc
ss
fdivr
enter
outsb
xor
or
pop
pusha
and
ljmp
in
in
mov
repz
inc
xor
push
add
xor
jno
ss
adc
sub
neg
adc
and
ret
mov
mov
jno
test
push
mov
adc
add
mov
cld
fildll
add
or
jp
call
and
enter
push
cltd
mov
dec
jg
fisttps
cmp
ds
push
ljmp
mov
add
filds
decb
and
dec
mov
test
xor
xchg
add
or
aam
lea
mov
hlt
mov
push
repz
nop
push
push
pop
data16
adc
sti
push
in
push
lcall
mov
cmp
sub
lea
call
and
add
subb
icebp
pop
icebp
pushl
push
call
mov
mov
adc
lcall
sub
or
insl
rorb
lock
data16
aas
in
cmp
test
inc
and
mov
mov
push
stos
call
notb
or
incl
ret
aas
enter
pop
sub
push
push
dec
mov
daa
andb
and
cmpsb
xor
inc
sti
cmp
movsb
movsb
dec
add
jnp
jbe
roll
clc
bound
jns
xor
mov
call
cli
pop
rorb
ljmp
add
ss
lods
mov
add
sahf
sub
mov
push
out
mov
pop
jl
nopl
add
jbe
loope
arpl
xor
and
lret
scas
mov
push
or
insl
inc
mov
jbe
add
fsubs
add
ret
add
fiadds
ss
hlt
cs
les
jmp
cmp
jg
mov
jg
sbb
js
mov
jmp
popf
les
mov
push
jb
outsl
call
or
mov
pop
fimull
dec
je
sub
ja
or
or
les
xchg
jmp
fbstp
mov
mov
add
xchg
std
or
es
test
subb
in
jle
jg
dec
mov
push
test
mov
mov
insb
mov
add
jp
test
jl
mov
je
cmp
mov
push
xchg
mov
and
sub
dec
mov
or
int3
push
scas
mov
cmpb
lret
lods
xor
je
pushf
mov
mov
pop
mov
pop
into
mov
or
cld
js
xchg
adc
cltd
fsubs
mov
pop
cwtl
lock
add
mov
loope
jbe
je
bound
std
das
clc
sub
lea
sub
push
test
fmuls
jne
loope
adcb
clc
dec
dec
mov
or
add
mov
idivb
xchg
mov
push
sbbl
cld
shrl
repz
notb
dec
incl
push
mov
dec
inc
mov
call
pop
movsb
or
dec
cmp
jmp
mov
loopne
lock
and
push
sub
pop
ret
sahf
cwtl
jp
jne
jle
jle
mov
lods
jg
jg
add
jg
pop
int3
xor
pcmpeqw
shlb
cltd
cmp
je
neg
sbb
cs
inc
sti
and
jb
dec
clc
cmp
test
lock
cmpsb
call
ret
push
push
push
pop
sahf
call
sbb
aas
adc
xor
orl
add
xchg
ret
xchg
bound
add
call
hlt
fwait
in
shll
out
mov
push
negb
push
xor
pop
aas
mov
daa
into
or
clc
jl
sub
jge
dec
loope
cli
cmp
mov
push
or
add
clc
sbb
clc
pop
jne
movl
sahf
adc
xchg
test
mov
and
mov
stos
push
pop
cmpb
push
cmovns
mov
cmp
inc
push
out
lock
call
cmp
cmp
dec
jmp
xor
out
sbb
daa
shlb
jle
rclb
adc
outsb
loop
push
adc
adc
test
mov
rcll
xor
dec
push
ret
inc
testb
dec
subb
push
mov
pushl
mov
adc
dec
add
mov
xor
das
pop
adc
push
push
fisubs
stos
pop
pop
jbe
call
push
sub
adc
lock
mov
addr16
pop
xchg
addb
lea
jb
push
outsl
adc
xchg
push
push
inc
call
inc
xor
push
push
cld
cmpl
cwtl
or
mov
and
pop
cmp
xor
out
inc
mov
mov
lret
out
pop
cmp
ret
loopne
fimuls
aam
sbb
outsl
cmpsb
imul
add
fsubl
sub
aad
fidivrl
pusha
sub
loop
leave
lods
or
je
or
in
dec
or
mov
cmp
pop
jbe
push
ja
cmp
mov
sahf
mov
ret
xor
je
jbe
add
mov
jne
jbe
hlt
addl
cwtl
clc
repz
mov
adc
cmp
lock
cs
add
mov
test
je
fidivrs
cmp
jge
std
or
rcll
test
loop
xorb
test
fmul
dec
je
add
push
xor
orb
out
enter
jmp
jnp
jne
faddp
inc
or
test
xor
push
clc
add
adc
dec
mov
or
inc
and
dec
sub
push
cs
fimuls
inc
sbb
or
adc
or
inc
push
and
les
mov
cmp
outsb
push
jl
or
fiaddl
ret
push
adc
cs
mov
cs
jle
aad
lcall
xchg
arpl
mov
sub
cld
lock
inc
addl
mov
pop
push
xchg
movsl
lock
xchg
mov
clc
imul
push
xchg
sbb
inc
bound
int
jmp
inc
clc
adc
pop
pop
call
js
fiaddl
out
and
ss
mov
xor
add
imul
jbe
or
es
dec
pop
sbb
incl
push
sub
xchg
and
lock
loopne
xchg
stos
jle
call
lcall
in
mov
xchg
add
pop
sub
sahf
test
aam
jnp
add
push
add
xorb
cmp
std
pop
pushw
inc
fimuls
inc
callw
data16
inc
jnp
test
in
sar
mov
mov
jl
cld
push
add
push
push
aam
jne
outsl
ds
add
and
xchg
jns
cs
push
adc
jb
loope
rolb
imull
pop
out
stos
icebp
jne
cmp
stc
pop
push
fbld
pop
das
push
in
aas
jge
sub
sub
scas
push
jb
jl
fdivrl
push
jne
push
call
push
ds
cld
fs
lea
jge
mov
call
xchg
mov
pop
mov
xor
mov
call
add
dec
push
adc
int
xchg
cmp
lea
lret
lea
xchg
loop
outsb
subb
bound
xchg
sarb
lea
cmpsl
inc
in
idivb
add
pop
cld
fwait
push
data16
and
or
cmp
mov
loope
adc
test
pop
out
fidivs
or
dec
sarb
es
jmp
push
fcom
jo
mov
jbe
daa
test
bound
xchg
dec
psubsb
das
call
inc
push
add
lea
mov
mov
loopne
leave
sahf
dec
out
fdivrs
notb
jb
cmp
ja
sti
jmp
testb
jne
sub
push
jae
adc
lea
inc
jb
mov
idivb
leave
dec
sti
punpckhdq
mov
lret
push
cmpsb
testb
cmp
mov
sub
scas
jecxz
mov
scas
rorb
jne
std
sbb
add
or
mov
loopne
add
pushl
or
mov
sbb
cmp
mov
js
mov
imul
add
mov
ss
mov
sarb
xor
pop
inc
fcoms
mov
mov
push
std
adc
inc
cld
dec
loop
mov
enter
fcmovnu
mov
cmp
sub
decl
clc
inc
cmp
fmull
pop
sbb
jo
lock
decl
cmpsb
or
rcr
fsubrp
int3
call
cs
mull
add
xlat
add
pop
push
fucomip
iret
push
aad
sbb
testb
sub
rorb
push
stos
inc
jb
andl
inc
rcl
into
std
push
test
cmp
data16
mov
pop
out
pop
test
pusha
divb
movb
cmp
cmpb
inc
adc
addl
xchg
inc
scas
fldz
jo
mov
lea
dec
daa
lcall
mov
mov
xchg
into
sub
fucomi
mov
and
div
add
lock
xchg
add
dec
or
jle
hlt
sub
scas
out
loopne
dec
xor
pop
push
push
cmp
rclb
mov
daa
or
call
lds
daa
out
xor
cmp
cmp
sub
fsubrp
or
daa
cmp
outsb
mov
xor
mov
cmp
inc
add
mov
adc
loopne
xchg
push
or
pusha
aaa
clc
jl
mov
pop
pop
add
push
dec
andb
xor
mov
inc
or
addb
jne
mov
in
push
pop
inc
xor
or
pusha
sbb
push
add
mov
fcompl
test
lods
pushl
dec
push
push
mov
pop
mov
cmpb
inc
cmp
hlt
int
pusha
pop
fwait
lods
add
les
mov
push
paddd
cmp
es
rcrb
lock
mov
jle
push
call
add
jbe
pushf
call
xchg
daa
rorl
lahf
cmp
xlat
test
mov
fs
jmp
cmpsb
hlt
push
pop
push
cmp
fldl
out
pop
data16
mov
mov
push
insb
in
push
test
jo
push
fnstcw
dec
data16
data16
and
loopne
sub
inc
clc
mov
mov
pusha
pushl
xor
fisubrs
jnp
add
adc
ficomps
test
cmpsb
push
lock
pop
xchg
cmp
aaa
dec
emms
xor
mov
bound
mov
inc
pop
icebp
fwait
pusha
sub
or
jae
xor
dec
in
cmp
bnd
mov
sub
jbe
or
or
in
jae
push
xchg
out
sbb
lret
jecxz
mov
cs
cmpsb
scas
lea
pop
pop
inc
jle
push
cmpsb
sub
mov
mov
stos
fmull
or
pop
mov
hlt
push
dec
or
subb
gs
jbe
xchg
cmovne
pusha
roll
jl
or
fdivrs
inc
inc
inc
lea
into
testb
mov
dec
loop
mov
cs
lock
push
jb
push
andl
jo
mov
out
or
jmp
sbb
jg
cmp
push
cmp
je
cmp
je
cmp
je
in
mov
jmp
mov
jmp
mov
jmp
mov
inc
out
mov
inc
jbe
clc
mov
mov
call
sub
mov
in
xor
sub
dec
cmp
mov
jg
mov
test
add
mov
cmpsb
push
into
pop
repz
cld
sub
das
jns
cmpsb
ljmp
ficomps
or
inc
ds
je
or
jae
mov
aam
pop
je
xorl
and
push
clc
jg
decb
in
es
push
mov
mov
call
and
pop
es
jle
sti
in
aas
push
lock
clc
out
mov
int3
leave
mov
cmp
cs
cmp
xorl
mov
lea
sbb
in
mov
pop
jge
rcrl
xor
inc
call
mov
and
ds
push
sub
xor
icebp
sbb
fmul
fisubs
cli
sahf
jbe
xchg
push
int3
test
iret
jbe
xor
adc
idivl
addl
and
loop
push
dec
and
testb
shll
mov
mov
or
das
lea
movsl
mov
mov
push
xchg
cmp
xor
rolb
pop
push
call
fmull
scas
add
mov
pop
add
pop
call
pop
adc
sub
aam
fwait
or
lret
addb
or
mov
cmp
orb
jl
dec
xor
push
cwtl
ja
cmp
cmp
lret
adc
testb
pop
cltd
mov
jmp
or
mov
pop
fucomi
loop
or
dec
add
jmp
outsb
jbe
stos
pop
loopne
lea
es
movb
lcall
aam
add
std
and
jb,pt
adc
add
xchg
icebp
dec
mov
fcompp
sbb
add
lcall
orb
adc
cli
jge
push
sbb
cld
test
mov
inc
mov
adc
aaa
jo
pop
sti
dec
cmp
movzwl
add
push
sar
cmpw
jae
xchg
and
adc
dec
adc
inc
cmp
xor
ljmp
pop
push
lds
pop
test
push
sbb
pop
in
pop
es
jp
push
sbb
mov
inc
xor
jp
jne
push
loopne
ret
ret
data16
mov
mov
shrb
call
out
test
mov
lret
lock
add
loopne
xchg
decb
push
out
push
or
daa
xor
mov
and
addl
mov
clc
push
inc
or
jnp
dec
sub
or
out
xor
pop
or
out
lock
fsubp
or
fidivs
mul
call
test
into
push
call
add
pop
mov
icebp
adc
into
jne
out
cmpl
fildll
testb
call
lcall
pop
mov
call
push
adc
imul
sbb
xor
and
inc
jb
icebp
data16
test
jl
cwtl
pop
add
adcl
int3
test
sbb
hlt
inc
addb
sbb
and
mov
cmp
aaa
jbe
testb
push
test
cli
xor
xchg
adc
nop
and
test
insl
mov
cld
mov
fimull
xorl
jo
and
rorl
mov
outsb
pop
sti
sub
add
sbb
push
divb
xchg
dec
inc
xchg
sub
mov
mov
ret
test
loopne
sub
push
pop
jb
inc
sahf
or
adc
sub
lea
push
or
pop
cmp
jne
sbb
mov
aaa
push
subl
fiaddl
jae
stos
addb
sbb
lahf
or
stos
sbb
ds
jbe
sahf
daa
jmp
call
cmove
push
pop
lcall
clc
pop
push
push
dec
sbb
cmp
out
lea
mov
incl
pushf
sub
and
pop
adc
jl
repnz
xchg
cs
push
je
pop
mov
bnd
je
cmp
lea
cmp
fbld
clc
pushl
data16
adc
js
jne
sub
inc
cmp
jae
lock
je
sub
add
mov
sub
adc
hlt
call
add
lcall
clc
gs
jb
jge
and
or
sub
push
rcrl
in
xchg
adc
and
inc
jnp
fisubl
xchg
outsl
mov
cld
dec
or
and
or
jl
cltd
mov
loop
mov
stc
jne
outsb
push
and
in
add
cmpb
stos
cmp
mov
ja
add
add
xchg
inc
mov
pop
adc
test
cmpsb
icebp
mov
outsl
pusha
add
fdivrs
push
xchg
push
push
mov
je
subb
mov
add
mov
cs
hlt
push
ss
push
lock
mov
call
fdivr
sbb
mov
mov
add
mov
sub
test
cmp
inc
aas
push
in
cmpsb
cmp
pop
and
mov
in
mov
sub
call
jbe
xor
jo
add
push
fstpt
add
or
or
mov
pop
ja
repz
fisttps
cmpsb
loopne
cmp
lock
ljmp
clc
jecxz
mov
cld
jge
xor
ja
je
or
notl
movsl
sbb
out
mov
outsl
divb
xchg
adc
inc
out
fists
mov
mov
pop
mov
subl
movl
add
stc
adc
add
cld
cmpsb
dec
sahf
testb
or
add
rcll
mov
leave
mull
xlat
in
out
clc
sbb
sbbl
push
fisttps
mov
jbe
fdivrs
jbe
outsb
cld
cli
cmp
push
adc
mov
leave
or
jne
push
push
in
cwtl
inc
cli
addr16
or
mov
pop
jp
test
push
std
je
incl
inc
je
push
test
sub
ljmp
jg
sbb
add
add
lea
loop
sahf
scas
call
jge
push
inc
enter
sub
fsubrs
cld
push
xchg
cmp
mov
push
rolb
ss
push
sbb
out
jecxz
mov
push
push
or
mov
adc
add
inc
addr16
out
subb
adc
adc
or
jg
jmp
mov
repnz
cmp
mov
sti
adc
fwait
dec
repnz
and
mov
fisttps
mov
pop
es
rolb
das
divb
cs
aam
mov
xor
push
scas
call
push
add
add
clc
je
in
sub
add
add
jae
cmp
mov
loop
adc
out
out
orb
adc
rorl
clc
or
pop
mull
pop
push
mov
or
inc
das
data16
nopl
cvttps2pi
cs
sysenter
pop
push
inc
call
inc
mov
mov
adc
add
or
pop
ret
test
call
call
lock
ljmp
cmpsb
clc
ficoml
push
je
imul
add
sub
pop
into
or
jne
mov
aad
loopne
push
jle
add
aam
cmpb
jo
data16
mov
inc
hlt
xchg
ljmpw
pop
add
jg
movsbl
push
or
push
push
data16
ficomps
adc
push
xor
mov
inc
pop
and
pop
add
xchg
sbb
push
rcrl
push
dec
xor
test
subb
mov
push
inc
aas
ret
das
nop
add
xchg
add
std
or
add
loop
jl
roll
adcb
ja
dec
sbbl
add
or
push
lods
inc
or
or
cmp
or
cmp
xchg
or
lea
push
mov
push
fiadds
mov
mov
push
jb
dec
cmpsl
call
mov
cmpsl
and
mov
dec
push
mov
sub
out
pusha
and
add
push
pusha
jg
movsl
shrb
jg
and
mov
fimuls
and
jo
inc
iret
inc
pop
enter
es
adc
mov
call
inc
cmp
sbb
sbbl
scas
dec
and
les
jo
fwait
push
or
jns
jp
sub
sbb
mov
ret
xor
scas
mov
push
push
sbb
push
es
push
add
mov
dec
orb
orl
sbb
cs
pop
sbb
mov
out
push
jbe
jg
push
std
sub
js
outsb
sub
push
xor
sub
add
adc
or
es
sahf
es
lret
call
jbe
lea
pop
cmp
into
sub
pop
xchg
mov
add
jmp
push
outsl
pop
xor
add
xor
out
ds
push
call
std
sub
mov
cmp
sub
cmp
mov
scas
and
shlb
lret
mov
les
xlat
je
push
ret
cltd
mulb
xor
xchg
icebp
cmc
test
clc
cld
xchg
push
xorb
insl
cmpsb
aam
sarb
jno
addl
push
xchg
or
push
test
sub
in
lods
mov
mov
jge
inc
cld
mov
lds
xchg
jne
push
insb
push
mov
leave
xor
jbe
ljmp
or
scas
or
lret
dec
popl
repnz
into
pop
jae
mov
inc
test
jne
pop
inc
ret
push
xchg
jo
scas
mov
dec
mov
and
cmpsb
or
xorl
cli
cmp
or
push
or
mov
add
and
loopne,pn
adc
mov
jmp
inc
jmp
adc
and
fistps
xor
call
push
and
jle
lea
pusha
mov
mov
xor
rcrb
mov
aam
sbb
idivb
mov
pop
ffree
mov
inc
fmuls
inc
cmpsl
mov
jns
cmp
adc
push
jl
pop
jb
loopne
adc
inc
out
aam
or
adc
xor
jb
loopne
push
call
xchg
mov
pop
and
lods
cld
inc
push
xchg
adc
in
mov
mov
xchg
lcall
idivb
jb
loopne
fisubs
subb
jecxz
cmp
test
test
idivb
subl
sub
jne
mov
jp
mov
jmp
sub
lods
out
call
xchg
jnp
jp
cld
out
sub
jge
je
mov
incb
rcl
js
xchg
cmp
adc
mov
add
in
mov
fidivrs
sub
sub
push
lea
int3
add
sbb
das
adc
leave
jb
les
pop
cmp
rcl
or
mov
add
cmpsb
push
pop
aam
mov
xchg
cmp
mul
push
cmp
hlt
push
xchg
mov
jle
bound
dec
jmp
test
mov
stc
xchg
test
inc
aam
mov
xor
push
pushf
or
int3
sti
mov
dec
jp
js
hlt
in
jg
in
rcr
jg
mov
adc
xchg
push
and
pop
xor
loopne
dec
pusha
add
pusha
shrb
clc
out
mov
cmp
add
push
fmull
push
jb
jle
scas
hlt
push
sbb
inc
add
inc
call
cmp
loop
sbb
push
mov
lock
xchg
ja
jne
jne
cmp
mov
or
imul
pop
mov
lahf
and
mov
jbe
xchg
and
xor
or
clc
testb
cmp
jne
push
je
aam
push
loope
dec
insb
dec
rcll
inc
xor
push
outsb
in
pop
icebp
scas
out
pop
xchg
hlt
jmp
test
test
bound
aam
gs
fdivl
shll
mov
int3
rclb
rcr
sub
cmpl
mov
les
aam
xor
lock
mov
dec
add
clc
add
fistpll
push
xor
cmpsb
adc
cmp
fidivs
mov
call
rorb
pop
rorl
mov
cld
lea
fadd
push
test
jno
dec
inc
push
or
dec
test
sub
movsb
sub
push
cmp
sbbl
lock
fisubrl
jo
mov
xchg
aas
push
js
and
push
push
jmp
or
dec
mov
push
xchg
scas
aaa
rorl
add
loop
decb
jnp
mov
pop
push
adc
mov
cmpsl
ret
mov
xchg
push
out
push
xor
mov
fcmovnu
inc
insb
lock
rorb
hlt
adc
cmp
adc
mov
in
mov
into
pop
pop
shrb
arpl
negb
fdivs
add
cltd
sahf
sahf
out
add
push
cwtl
xchg
test
xchg
fwait
adc
push
cmp
cs
add
ret
outsb
add
push
push
add
push
mov
push
and
pop
es
mov
into
or
xor
in
dec
cli
cmp
fimull
cld
data16
add
movl
stos
je
orb
and
testl
xor
pop
sub
test
adc
push
arpl
es
push
repnz
dec
test
mov
fldcw
mov
std
movzwl
ljmp
or
js
int3
ljmp
push
mov
adc
and
xor
pop
lcall
jle
adc
sbb
cmp
mov
mov
mov
ss
pop
jo
test
xchg
add
xchg
jmp
or
fsubrl
insb
push
mov
pop
stos
jb
mov
xchg
adcl
push
mov
cmpsl
out
pinsrw
ret
add
jp
adc
xchg
jge
jb
inc
jl
push
jbe
inc
insb
lea
out
or
mov
lar
out
stos
jo
ljmp
sahf
lock
jl
je
cmp
lods
lret
add
sbb
pop
lock
mov
stc
inc
mov
sbb
rolb
repz
pop
xchg
pop
mov
pop
adc
mov
cld
push
lods
sar
jbe
hlt
mov
pusha
sahf
adc
jb
insb
cwtl
lret
dec
fs
mov
inc
in
and
scas
inc
push
dec
xchg
add
jge
into
imul
daa
sbb
rorl
push
pop
loop
rorl
fldl
fs
inc
xchg
inc
outsb
jb
jmp
mov
adc
xor
mov
movsl
popa
or
dec
jbe
dec
mov
outsb
dec
repz
es
movl
out
clc
pop
out
push
sbb
mov
jae
in
ret
cmp
fbstp
push
push
xchg
adc
pop
cmp
daa
daa
int
push
test
push
iret
inc
daa
mov
or
xchg
jo
es
repz
cs
jge
lock
push
retw
lea
hlt
add
add
push
mov
hlt
stos
gs
std
pusha
add
mov
xor
test
lods
push
ficoml
adc
cmp
je
push
call
jle
popa
cli
push
dec
dec
lods
call
loopne
stos
cmp
push
push
fisubl
xchg
and
mov
pop
lret
mov
scas
push
aam
arpl
icebp
push
les
aas
jmp
push
inc
dec
aam
jne
push
ret
loopne
xchg
inc
outsl
fsubs
jbe
inc
mov
xorb
adc
cs
adc
pop
das
jle
push
repnz
mov
sub
or
mov
call
call
sbb
and
mov
pop
cli
mov
adc
out
mov
pop
and
stos
subb
mov
mov
dec
xor
outsl
push
stos
mov
ds
push
lcall
fdivrl
out
leave
repz
xor
inc
std
call
fidivs
jne
je
cmp
je
push
rorl
inc
xor
push
pop
pop
jo
xchg
cmp
call
in
addb
push
push
test
in
shll
cmp
jne
jbe
test
movsl
rorl
lret
pusha
push
std
pop
inc
add
jmp
add
mov
jg
jle
push
push
pop
cmpsb
ljmp
clc
shll
or
outsb
fs
pop
jmp
or
pop
add
adc
sub
outsl
mov
adc
fsts
addr16
lahf
pop
dec
lock
adc
cwtl
fidivrl
add
mov
mov
push
jmp
jmp
jg
call
cwtl
jmp
cs
cwtl
add
adc
out
xchg
insl
mov
or
adc
idiv
mov
into
mov
enter
sbb
insb
imul
lods
inc
repz
lods
mov
mov
mov
out
jg
xchg
mov
fsubr
pushf
fwait
mov
fs
lret
mov
test
addr16
push
imul
pop
cli
orl
fistpl
adc
xor
and
out
pop
mov
lret
mov
das
mov
xlat
sarb
dec
shl
push
pop
dec
fs
lock
test
push
enter
idivb
jle
pushf
sbbl
push
mov
call
mov
sbbl
sbb
pop
lock
adc
int
adc
bound
mov
xchg
xor
cwtl
arpl
or
ret
mov
das
cmp
add
push
cld
xchg
imul
dec
sub
pop
adc
call
test
in
cli
xchg
scas
and
call
int3
cli
es
aas
push
pop
and
mov
pop
push
mov
push
outsb
xor
sbb
pusha
xor
mov
es
outsl
and
nop
pop
pop
jmp
ss
sbbb
add
adc
jo
xchg
nop
pushl
cld
mov
pop
jmp
adc
leave
and
arpl
and
dec
adc
inc
in
sbb
insl
xchg
call
xchg
push
out
out
pop
outsl
clc
out
mov
push
fstpl
cwtl
insb
pop
gs
push
and
dec
int3
popf
sub
push
push
je
and
outsl
push
fs
adc
enter
add
inc
push
rcrl
push
scas
pop
fs
sbbl
xor
jg
ja
outsl
push
addr16
popf
mov
inc
stos
iret
out
in
loope
push
mov
xor
jecxz
push
popf
xor
adc
xor
push
jo
lcall
lahf
sbb
in
cld
arpl
fdivs
mov
sub
in
je
cmp
js
push
push
fwait
int
lds
pusha
xchg
arpl
jo
stc
adc
push
leave
adc
pop
cmc
sub
neg
insb
stc
xor
push
jb
pop
mov
stos
int3
mov
jmp
pop
push
cmpsb
pop
hlt
adc
idivb
dec
inc
pop
insl
inc
notl
js
hlt
inc
je
cmp
push
push
cmp
sub
mov
sbbl
sub
push
in
adc
inc
cs
std
and
sbb
test
xchg
inc
xor
push
pushf
push
adc
cmp
mov
pop
mov
sbb
aaa
loopne
pop
mov
cmp
rorl
push
add
lcall
mov
jbe
call
mov
call
push
xchg
xor
incl
mov
mov
lock
or
mov
cmp
test
xchg
cmp
div
vmwrite
xchg
mov
xor
pop
repz
test
cmp
push
clc
sbb
lea
test
jo
call
sbb
subb
lea
call
mov
aaa
dec
mov
mov
inc
push
test
clc
xchg
inc
mov
ret
inc
subl
sub
lret
pop
mov
push
imul
hlt
add
call
sub
int3
fldt
jne
mov
dec
dec
clc
fimuls
push
mov
adc
mov
and
dec
insb
iret
lret
pop
dec
int3
push
xor
dec
cld
mov
out
push
pop
cmp
out
push
call
popa
and
lds
or
mov
mov
jbe
das
cld
jns,pt
outsb
rolb
fstl
mov
call
into
and
push
mov
es
pop
mov
lods
add
cmp
push
mov
orl
push
fmuls
jg
stos
mov
imulb
in
jnp
pop
and
lcall
lea
lea
out
lea
inc
enter
invd
lock
xchg
test
mov
lret
inc
inc
enter
fmuls
add
inc
jge
or
mov
mov
movsl
loope
test
mov
sahf
icebp
pop
pusha
xchg
repnz
xor
or
les
or
push
js
xchg
lret
push
cmpsb
inc
mov
push
incl
push
cmp
push
test
stc
mov
push
pop
mov
aam
jle
loopne
jl
mov
dec
or
iret
mov
orl
ljmp
adc
push
decb
dec
dec
decb
stc
mov
lock
push
mov
add
push
rolb
xor
dec
sub
or
ja
inc
pushl
pop
mov
mov
cmp
lods
in
mov
incb
or
ljmp
inc
and
sub
jne
mov
sbb
out
cmp
add
and
jne
inc
dec
jne
pop
pop
pop
push
or
push
lret
pop
outsl
add
into
push
push
pop
jg
rclb
xor
inc
push
pop
pop
and
outsb
addb
jbe
mov
pop
sbb
mov
jmp
loopne
dec
jne
inc
sbbl
shr
mov
loope
jg
stc
sbbl
mov
loope,pt
rcll
or
jne
cmp
add
call
mov
dec
dec
cmc
mov
loopne
cli
and
shl
ds
testl
jmp
mov
addb
add
jbe
push
mov
add
out
mov
and
repz
cmp
leave
cltd
mov
push
mov
add
push
jl
or
out
mov
mov
push
add
add
push
ja
xchg
scas
sub
inc
hlt
pop
or
cmp
and
dec
push
cmpsb
flds
scas
add
aad
cli
jg
sarb
fisttps
jne
loop
sar
pop
or
ret
add
incb
inc
sub
ja
out
ror
jg
xchg
push
das
int
test
mov
mov
ret
lock
sar
and
cmp
jb
push
pop
mov
clc
incl
leave
mov
inc
addl
jne
jg
leave
inc
mov
push
push
shl
aas
call
ljmp
je
ja
cld
mov
push
push
cmc
dec
sti
rcrb
ret
sti
subb
lea
mov
adc
or
test
mov
aad
jge
jl
jb
xchg
pop
lcall
add
add
jb
add
pop
jne
xchg
dec
out
xor
mov
mov
ret
cmp
je
mov
and
test
xchg
cmp
dec
adc
xor
mov
neg
es
ret
sbb
add
lea
push
xchg
jb
sub
je
loopne
cs
test
ja
std
push
cmp
inc
mov
sub
test
cli
mov
mov
sbb
add
decl
mov
push
mov
add
cmp
jne
ss
jne
xor
jmp
xchg
dec
cmpsb
push
add
rol
into
pop
and
push
decl
stos
int3
add
push
mov
call
and
ja
push
mov
pop
xchg
outsb
adc
aaa
shl
ret
cmpsb
add
fs
mov
es
cmp
flds
mov
adc
ljmp
scas
test
xor
insb
push
dec
push
test
les
add
out
jns
test
scas
or
mov
call
dec
fstpt
test
aad
ret
push
sbb
cld
xor
imul
mov
push
push
pop
push
sbb
std
mov
loopne,pt
push
repnz
add
add
shrl
testb
inc
and
mov
push
call
sub
sub
or
jmp
mov
cmp
ret
stos
add
dec
jle
in
jo
push
fmull
movsb
sub
and
jmp
aad
faddl
into
call
mov
jle
inc
rorb
adc
sub
hlt
cmp
es
movsb
push
push
clc
scas
push
lods
jbe
call
call
add
call
insb
pop
mov
mov
push
mov
jp
inc
dec
scas
fcomi
rorb
mov
add
outsb
into
mov
jmp
scas
call
sbb
mov
push
push
jl
inc
add
js
mov
push
xor
jmp
es
js
and
mov
lcall
or
push
xor
jbe
insb
add
mov
cmp
lret
inc
ret
inc
inc
jl
mov
jo
inc
jmp
or
add
mov
add
mov
mov
sbb
xchg
mov
pushf
add
and
addr16
or
or
and
mov
clc
testb
mov
cs
int3
orl
mov
or
cmp
xchg
subl
or
popa
jl
push
sbb
xor
xchg
add
fcompl
jl
mov
lea
call
mov
sar
stc
add
sub
and
cmp
or
int3
roll
inc
cmp
inc
jnp
jae
pop
sub
add
pop
pop
andl
cmp
fildl
push
je
add
call
ds
lcall
es
mov
lock
xchg
or
pop
sbb
addr16
pop
mov
es
or
orb
inc
clc
popf
push
push
outsb
test
cmp
pop
test
dec
mov
cmp
cmp
mov
sbb
cld
cmp
rcr
test
incl
sarb
ljmp
les
mov
sbb
xchg
rclb
or
cli
push
incl
xchg
insl
adc
push
add
cmpsl
loop
xlat
fcmovnb
pop
push
xlat
call
clc
ljmp
lods
rcl
test
ret
sbb
cmp
pop
movsl
mov
mov
mov
enter
jmp
mov
mov
lock
add
ret
arpl
ret
add
es
mov
or
and
fistl
mov
cmp
xrelease
mov
push
and
out
push
stos
jge
adc
clc
add
es
clc
dec
adc
add
or
pop
jbe
inc
in
aam
mov
add
push
adc
add
or
sub
pop
cld
jbe
adc
mov
xchg
popa
or
out
or
loop
std
jne
push
xchg
xor
xchg
data16
add
or
inc
psubsb
dec
add
fcmovb
adc
add
add
cs
lock
rorb
orb
enter
sbb
jne
mov
jge
cmpsb
rcrb
or
xor
idivb
outsl
rorb
pop
imulb
test
add
push
lret
mov
mov
cs
add
xor
out
mov
adc
test
and
cmp
addb
aam
cmp
mov
fsubr
stos
cmpsb
push
push
add
or
cltd
punpckldq
repnz
and
pop
testl
test
lods
add
je
ja
dec
mov
es
cwtl
out
add
negb
xor
test
or
mov
incb
mov
jne
sbb
cmp
sub
jge
pusha
inc
pop
pusha
pop
adc
rol
inc
out
ljmp
mov
mov
loop
std
dec
jne
adc
and
cmpl
push
data16
jo
fwait
int3
xchg
inc
jbe
stc
popa
jb
cmp
add
dec
xor
or
pop
sub
pop
clc
push
pusha
push
add
push
push
lea
movsb
mov
outsb
adc
pusha
pop
rorb
arpl
movsb
test
sti
rorb
pop
ss
pop
mov
fwait
pop
cmp
dec
loopne
jb,pn
or
dec
outsb
fildll
push
mov
jne
lds
cltd
sub
cmp
or
cmp
pop
add
add
pusha
add
lret
adc
adc
pop
cmpsb
pop
add
jle
lea
addb
push
cmp
xchg
stc
pop
pusha
push
outsb
outsl
push
stc
push
dec
xchg
loopne
adc
hlt
pop
aad
shr
loopne
cmp
pop
test
push
mov
add
push
pop
jecxz
ja
mov
cmp
je
loopne
aam
or
sub
or
ljmp
cli
lret
inc
push
lds
inc
adc
dec
lea
cs
mov
test
in
sub
cli
cmp
cmp
mov
jmp
data16
ja
and
inc
push
mov
decb
cmpsl
pop
add
add
add
add
and
and
js
mov
mul
jbe
pop
mov
ja
cltd
cmp
sti
in
mov
fdivl
adc
clc
aaa
cmp
loopne
or
orps
ret
hlt
pop
rorb
push
data16
push
jb
add
aam
lcall
add
inc
inc
test
mov
lods
aam
and
jb
cmp
call
cld
pop
xchg
mov
mov
call
loopne
add
loope
mov
mov
cli
out
adc
addl
popa
lea
fisttps
clc
and
push
rclb
mov
xchg
sbbb
mov
push
pushf
add
add
xchg
add
lea
cmpl
clc
popa
pcmpeqw
pusha
sub
xchg
push
jb
popf
in
pusha
adc
pop
popa
or
add
les
test
sub
dec
loop
or
insl
pusha
cmpsb
fcomip
dec
popa
push
and
loopne
push
and
push
mov
xor
adc
sub
call
incl
aam
sub
bound
or
clc
add
popf
je
add
sarb
dec
push
jmp
or
or
icebp
adc
incb
mov
les
add
xchg
test
fbstp
fimuls
adc
inc
in
insl
lds
adc
shrl
lret
aas
daa
ss
cmp
adcl
mov
xlat
cmp
xchg
inc
clc
push
lahf
mov
pop
cmpsl
xchg
xchg
loopne
add
add
js
jo
jne
jmp
test
imul
or
cli
push
cmp
aas
adc
pushl
add
xor
xchg
inc
sbb
fcompl
add
enter
loop
sbb
insb
fistl
into
dec
mov
fisubrs
loop
pop
and
sbb
out
or
fildll
push
mov
dec
mov
or
xor
loopne
or
je
outsl
xor
pop
scas
jbe
add
adc
testb
je
push
jp
add
fistps
dec
and
sub
push
sbbl
imul
jmp
aaa
or
out
cmc
scas
jg
lcall
loop
out
pusha
outsb
xor
jmp
adc
or
jb
in
and
jno
movsl
add
or
dec
fistpl
cmp
push
lock
and
lock
xor
push
mov
out
mov
adc
rolb
add
xchg
mov
stos
sub
jbe
mov
mov
ja
mov
add
data16
test
pop
push
lcall
or
adc
jg
incl
jo
push
ret
jb
xor
or
lret
sahf
aas
xchg
dec
push
push
pop
int3
test
push
test
adc
call
call
add
add
js
jo
icebp
jo
hlt
ret
mov
xchg
call
lock
call
push
mov
and
xchg
test
jg
test
xor
call
call
mov
jno
gs
add
jno
adcl
inc
add
loope,pn
jmp
sub
clc
mov
shlb
sub
and
outsl
fwait
mov
push
and
dec
testl
jo
call
lret
ud0
jp
mov
push
lea
mov
add
dec
call
jo
xchg
les
and
lock
jp
mov
loopne
rclb
push
push
and
pop
xor
stos
and
mov
pusha
jb
test
xor
imul
cld
sbb
inc
mov
mov
cs
call
aaa
add
lods
call
xchg
cs
adc
inc
dec
push
xchg
mov
or
test
cmp
pop
pusha
xor
inc
call
push
inc
lds
add
cmp
jb
fnsave
push
call
sub
and
testl
ss
adc
ss
or
ljmp
xor
xor
mov
and
cmpsl
mov
xor
push
pusha
repz
mov
jge
xor
mov
jb
mov
fildl
bound
adc
add
add
sub
clc
push
sbb
dec
or
add
xor
push
or
mov
mov
add
scas
dec
inc
lock
lock
mov
out
repz
push
push
lock
insb
jmp
adc
lods
xor
sbb
test
inc
pushl
sbbl
adc
jo
or
or
jae
in
sbb
adc
push
out
dec
and
lods
popa
adc
cld
call
xor
cwtl
xor
and
gs
mov
inc
mov
in
jg
add
mov
cwtl
and
xor
mov
insl
sub
push
jb
cmp
ljmp
ret
les
in
loopne
pushl
or
scas
addb
push
aad
adc
cmpsl
xor
pop
mov
repz
mov
call
lods
lea
push
paddd
inc
mov
jo
push
sbbl
xchg
dec
clc
cmp
mov
push
mov
insb
add
shlb
fbld
jb
adc
lcall
mov
cwtl
jp
xor
cwtl
sbb
in
lock
push
test
dec
cli
movl
jb
and
xor
jecxz
sbb
add
jo
add
and
adc
stc
mov
or
adc
add
add
mov
mov
push
add
push
stos
insb
sahf
push
inc
ljmp
pop
add
inc
outsl
cmpsb
pop
push
xchg
insl
hlt
dec
ljmp
mov
add
mov
fs
pop
push
inc
rolb
rcrb
clc
push
push
inc
inc
test
and
push
cld
add
sahf
test
mov
js
incl
adc
incl
mov
jmp
mov
clc
mulb
mov
add
incb
cmpsb
push
pop
ljmp
dec
aaa
inc
sbb
push
fiaddl
push
add
mov
mov
mov
psadbw
repz
inc
mov
pop
push
cmp
test
test
adc
add
push
shll
and
push
mov
mov
stos
cld
jno
hlt
add
mov
jp
sbb
pop
hlt
jl
or
push
mov
mov
jno
sub
hlt
jg
xorb
adc
pop
adc
int
add
lods
push
shll
dec
aad
add
xor
lods
and
int
and
enter
sub
push
test
shlb
nop
js
push
loope
inc
outsb
into
data16
push
cwtl
mov
adc
mov
cmp
push
inc
enter
add
and
pop
inc
pusha
mov
push
push
pusha
adc
fbld
lcall
or
mov
les
mov
psubsb
sar
fwait
pop
cmp
mov
hlt
xor
sahf
add
pop
xchg
aam
cmpsl
call
cli
push
adc
adc
cltd
adc
adc
in
push
adc
sbb
fnstsw
dec
fadds
dec
testb
adc
xchg
insl
das
clc
jg
dec
das
add
outsl
xor
or
adc
xchg
stos
cmc
mov
call
adc
leave
adc
les
fidivl
cmp
jo
mov
divb
jge
cmp
inc
fdivl
fwait
call
div
jbe
mov
sub
or
adc
cld
subb
push
add
jg
and
jmp
jo
call
xchg
and
or
inc
inc
adc
lea
xor
test
dec
lock
icebp
xorb
or
dec
ss
pop
outsb
lock
push
mov
test
test
and
xorl
loope
mov
hlt
lods
scas
push
pop
pop
mov
add
movsb
jle
mov
ja
clc
add
xor
lret
mov
lock
call
lock
and
pop
hlt
pop
add
or
add
inc
push
scas
push
and
aam
adc
ret
fdiv
xchg
push
stos
addb
mov
mov
mov
test
push
jbe
adc
pop
pop
data16
dec
push
xchg
mov
add
xor
jne
in
dec
stos
xchg
mov
dec
or
test
xor
mov
cmp
mov
mov
int3
loope
mov
sub
pop
in
sub
or
pop
or
aad
xor
insl
out
popl
push
cmp
push
add
decb
lea
pop
scas
dec
mov
mov
cmp
pop
loopne
or
and
sub
dec
lods
adc
push
or
lods
sub
xlat
mov
or
jle
je
and
or
or
sub
add
clc
ss
jne
add
jmp
call
aam
cmp
inc
lock
pop
sbb
adc
mov
sbb
add
add
test
hlt
in
cmp
int3
pop
aaa
call
pusha
shlb
dec
xor
sbb
call
push
mov
loope
mov
mov
sbb
jecxz
or
stos
out
and
sarl
daa
pop
hlt
add
adc
push
inc
in
std
add
adc
inc
shrb
bound
add
push
sub
fs
inc
xor
mov
lret
mov
movsb
jecxz
and
pop
ret
in
pop
push
cld
mov
ljmp
inc
pop
outsb
addb
sbb
push
add
clc
add
mov
or
roll
stos
push
jbe
js
stos
inc
sub
push
or
add
je
call
in
je
or
adcb
pop
sub
dec
adc
sbbb
mov
adc
outsl
mov
and
add
add
or
jecxz
insl
xor
sbb
mov
popf
enter
repnz
push
bound
scas
add
push
push
push
adc
adc
jmp
mull
fucomi
cmp
bound
xorb
fisubs
jb
mov
adc
call
es
aas
mov
add
xchg
fbstp
xor
fsubr
add
mov
mov
add
jge
push
fcoml
cmp
inc
xchg
jg
fsub
sub
and
xchg
ret
repnz
pop
adc
movsl
jle
add
add
adc
call
mov
dec
fs
and
lds
bound
hlt
jg
idivl
cmp
add
outsb
enter
inc
cs
hlt
cmpsb
sub
lahf
dec
pushf
test
inc
lea
or
jl
bound
adc
call
movsb
adc
mov
add
jg
jo
cmp
fildl
push
js
pop
and
sahf
mov
clc
push
stos
mov
call
lds
mov
inc
cli
and
in
sub
cs
call
filds
cmp
add
loopne
sbb
shlb
mov
pusha
dec
xchg
cld
xor
jbe
loopne
jle
int
lret
mov
repnz
or
add
pusha
add
mov
pop
rorb
add
adc
fsubs
add
addb
std
test
add
int3
sarb
notl
aas
sti
xor
not
xor
add
pop
cmpsl
mov
mov
sbb
nop
sub
mov
mov
pop
std
jbe
jg
mov
cmp
shld
shl
lods
pop
addb
shll
outsl
add
add
jbe
push
lods
mov
mov
push
lahf
shrb
ficoml
lods
lea
ljmp
adc
cld
rcll
jl
add
lock
xchg
fiadds
decl
xorpd
add
rorb
dec
subb
or
or
or
cli
mov
fdivr
out
add
ss
or
or
call
std
add
mov
adc
pop
mov
call
lahf
or
or
dec
mov
push
sub
push
mov
xchg
ljmp
inc
js
or
movsl
cmc
ljmp
sub
inc
stos
pusha
aas
popa
sbb
pusha
daa
loopne
clc
lock
js
pusha
adc
add
pop
push
pushl
pop
mov
cmp
dec
cmp
das
call
or
mov
lods
cli
push
jbe
call
dec
push
cld
or
add
out
loopne
push
sub
mov
clc
pusha
and
push
fs
or
mov
add
mov
pushl
mov
sub
mov
cmp
popa
jno
loopne
cmpl
sti
jbe
bound
ret
sub
xchg
call
popa
sub
ljmp
sahf
call
pusha
cltd
or
and
or
ds
aaa
push
loope
fcoml
enter
push
adc
mov
push
cld
mov
lock
sbb
xchg
loopne
xor
and
add
dec
cmp
mov
cli
dec
sbb
mov
decl
sub
xor
jne
je
or
pop
mov
pop
sub
test
icebp
pusha
test
addl
pushl
jmp
mov
or
add
push
push
loop
hlt
loope
xchg
test
add
aaa
test
add
cwtl
subb
int
pusha
pop
adc
push
or
xchg
pusha
fiadds
filds
jo
fs
fmull
sbb
sub
and
outsb
inc
sbb
lret
mov
pusha
push
cli
insb
push
sbb
inc
and
mov
xchg
lret
or
cmp
js
push
adcb
sbb
enter
jb
or
es
or
and
orb
decl
in
push
inc
pusha
popf
loopne
in
pop
push
sbb
jnp
push
add
jl
loop
sbb
inc
push
les
push
adc
shl
push
push
in
loopne
lock
or
jbe
inc
push
mov
mov
es
jne
mov
sbb
aaa
hlt
mov
cwtl
pop
data16
sahf
mov
icebp
mov
push
loopne
inc
xor
popa
cmp
fisttps
add
loopne
push
cmp
decb
cltd
stc
rorb
mov
test
cld
pusha
lahf
lea
lods
loopne
mov
sub
cld
jmp
add
in
loope
rsqrtps
add
scas
mov
popa
mov
pusha
sbb
xchg
push
push
movsb
sti
sbb
call
pop
or
add
xchg
push
mov
add
cli
cmp
push
cmp
push
mov
lds
lods
call
mov
addl
clc
ljmp
sub
add
stc
mov
add
fisttpl
xchg
mov
and
inc
in
inc
cli
jg
pop
jo
xor
scas
shll
dec
hlt
call
outsl
sub
lcall
mov
lods
adc
cmp
test
das
push
inc
cmp
mov
adc
xchg
inc
mov
xor
insb
push
jne
clc
je
js
xor
sbb
inc
sar
inc
out
lock
and
loop
or
lock
xor
push
dec
dec
sub
lret
push
adc
add
xchg
jb
and
and
add
lret
add
or
jne
es
loope
push
push
pop
insl
repnz
call
adc
sbb
dec
and
int3
jo
add
aas
out
pop
dec
xor
test
jo
mov
xlat
jo
adc
hlt
jmp
jb
mov
push
add
psraw
adc
inc
jns
add
cltd
sub
sub
or
jge
loopne
aas
xchg
lea
call
popa
inc
dec
inc
loopne
aam
testb
incl
rcrl
mov
adc
test
pop
clc
add
cmp
mov
dec
aad
or
aas
data16
cmp
jl
shlb
mov
outsl
adc
mov
pop
or
sub
push
add
rolb
les
imul
sub
and
pushl
jbe
push
mov
adc
push
pop
add
int3
add
xor
or
aaa
add
nop
stos
hlt
push
add
les
inc
aam
xor
stos
lock
aas
shl
rorb
fildl
mov
adc
mov
jo
pop
ficoml
sbb
das
mov
je
adc
xchg
and
jnp
clc
mov
lock
lret
xor
cld
push
es
add
dec
les
aas
mov
xchg
test
call
lea
mov
adc
bound
pop
and
add
stos
xchg
pop
mov
mov
mov
iret
ljmp
push
sbb
dec
pop
and
rcrl
push
incl
repz
sub
pop
jne
cmp
fdivrl
lock
adc
sbb
add
push
sub
add
xor
and
xor
adc
lock
adc
mov
xor
add
adc
adc
add
push
inc
xchg
mov
scas
mov
pop
cld
mov
call
scas
sbb
push
test
push
mov
mov
push
jg
mov
inc
push
push
cwtl
outsb
cmp
or
pop
dec
cmp
add
nop
add
xchg
adc
push
jno
and
push
js
je
jmp
outsb
dec
xor
pusha
sbb
push
movsl
imul
jo
stos
imul
mov
and
mov
subl
adc
mov
clc
aas
and
shl
and
adc
xor
pop
adcl
loopne
mov
cld
call
lock
fcmovnbe
and
sub
inc
add
lock
cmp
adc
jo
xor
call
hlt
fildl
and
or
sti
popa
jne
pop
mov
aad
mov
test
xchg
xorl
mov
xor
cmp
or
jnp
jne
pop
add
jo
push
mov
hlt
outsb
std
rcrb
call
xchg
lcall
outsl
cmpsb
mov
stos
jg
int
mov
call
jb
and
and
test
mov
jmp
xchg
xor
add
xor
pop
cld
jne
push
jge
fisttps
insb
inc
js
xor
pop
and
or
inc
in
aaa
rcrl
sbb
in
or
orb
sbb
mov
adcb
out
and
lods
push
mov
scas
push
test
lret
adc
cli
mov
add
jb
jo
jbe
in
ss
xchg
lret
mov
test
roll
ret
cmc
pop
or
or
call
ret
daa
push
mov
inc
lock
rcl
jle
pop
dec
hlt
pop
push
jge
lea
pop
pushl
sbb
scas
push
mov
negb
jl
stos
test
pusha
test
jle
push
movb
mov
decl
xor
jl
inc
or
cmovns
push
aam
inc
inc
les
inc
jl
inc
sti
mov
out
mov
aas
fisttps
push
jb
iret
andl
jnp
loopne
es
out
push
in
or
mov
adc
or
or
lcall
or
in
notl
mov
cmp
add
adc
or
pop
ss
push
xor
popa
int3
mov
sti
lcall
loopne
into
nop
mov
xchg
loope
push
push
fistpll
mov
jno
je
fcoml
sbb
jg
mov
inc
push
mov
repnz
scas
mov
xchg
or
jo
add
xchg
adc
bound
cmp
mov
in
je
clc
add
lock
mov
shlb
call
mov
and
jge
sbb
mov
mov
movsb
lcall
adc
mov
jg
cltd
incb
add
adc
dec
out
push
lcall
cwtl
les
add
jo
test
popa
add
dec
das
aam
aaa
add
mov
inc
jbe
hlt
push
push
test
xor
test
nop
je
sbb
push
arpl
mov
mov
jl
lock
push
jb
xor
test
xor
sahf
clc
dec
pop
mov
movsb
ljmp
mov
fstl
cmp
cmc
pushl
add
mov
call
clc
rcrb
nop
inc
mov
lea
xchg
xchg
push
inc
and
orb
mov
aaa
andl
xor
in
sub
adc
xor
ljmp
call
pop
idiv
adc
insb
mov
push
lcall
int3
xor
jmp
divb
call
mov
mov
lock
daa
jmp
mov
mov
add
arpl
ss
cmpsb
or
in
cwtl
inc
xchg
pop
jg
fadds
mov
push
jb
jp
xorb
xchg
fwait
dec
sar
lods
ljmp
push
sti
test
into
cli
rorb
sbb
inc
mov
je
adc
xchg
jne
adc
outsb
mov
arpl
shr
ret
inc
mov
stos
in
add
add
inc
loopne
xor
jo
rclb
xor
ret
shlb
fsubl
outsl
jle
test
pop
sbb
inc
in
flds
outsb
fiadds
ret
je
sub
or
lcall
scas
push
cmpsb
sub
adc
cmc
scas
shrb
and
sbb
les
pop
lret
clc
nop
inc
incw
mov
fs
ret
add
mov
xchg
ret
or
stos
mov
mov
push
fdivs
cmp
lea
rorb
add
pop
lods
lret
adc
test
mov
out
lods
mov
inc
stos
dec
and
sub
or
mov
sub
pop
cwtl
icebp
pusha
push
add
cli
adc
pop
push
push
jge
adc
add
pushl
mov
in
mov
pop
call
inc
add
add
jo
mov
popf
sub
push
xchg
pop
mov
inc
cmpb
push
push
adc
lods
jmp
mov
push
or
mov
repnz
push
mov
xchg
rorb
add
mov
icebp
aas
push
outsb
test
pushf
addb
incl
subb
adc
mov
mov
add
jae
jp
sbb
adc
cmc
fidivs
test
scas
xor
dec
mov
iret
add
xor
add
dec
cmp
pop
xchg
add
repz
ret
aas
loope
add
sub
or
jnp
and
add
rclb
rcrb
gs
add
into
pop
jnp
pop
hlt
inc
lea
shlb
fistl
mov
dec
ja
in
lcall
push
roll
ret
push
cmp
mov
outsl
aaa
xor
xchg
push
adc
push
jmp
xchg
pop
sar
cmp
mov
in
inc
shrb
add
jo
push
das
inc
lds
dec
lods
cs
cmp
aam
push
and
and
or
shll
mov
sbb
xchg
ret
jg
push
stos
cwtl
rclb
adc
rclb
enter
lds
mov
mov
push
sub
jp
add
mov
test
ja
fbld
sarb
add
push
lds
push
add
push
frstor
adc
add
inc
pop
mov
jo
lret
rorb
add
aad
popf
sbbl
jb
and
add
adc
psubd
and
and
call
pop
adc
mov
adc
testb
mov
adc
and
xchg
adc
nop
push
xchg
or
shlb
popa
mov
mov
jne
mov
jp
jg
and
orb
call
add
cmp
lods
push
dec
add
add
push
adc
jg
jo
loopne
mov
sub
and
mov
js
sti
pusha
bound
adc
jecxz
bound
push
pop
je
sub
xchg
loope
sahf
jp
xchg
lock
inc
push
loopne
pusha
dec
add
out
mov
add
hlt
int3
div
loope
add
add
into
dec
or
mov
push
dec
test
bound
or
or
popa
jg
add
dec
pusha
aad
aam
shlb
aaa
orb
pusha
sbb
add
es
cmp
and
cli
cmp
mov
lock
pop
loopne
cmpsb
aas
cmp
loope
dec
push
add
and
outsl
pushl
aaa
notb
stc
cmp
cmp
fldenv
loop
push
loopne
adc
adc
xchg
loope
push
and
xchg
fcoms
inc
cld
add
and
pushl
cmp
popa
push
mov
jmp
pop
test
test
push
mov
sub
lods
loopne
test
clc
fildll
adc
xchg
mov
xchg
cmp
dec
and
jl
scas
adc
nop
outsl
pusha
mov
add
pop
pusha
sub
push
add
add
ss
and
pop
popa
jbe
lcall
addr16
or
inc
repz
stos
and
loopne
loopne
xchg
xchg
loopne
pusha
es
adc
fwait
sbb
popa
sahf
inc
insb
jmp
andl
cmp
add
inc
mov
sub
push
loop
xor
loopne
and
xor
mov
fisttps
call
mov
fs
ja
mov
lcall
and
sbb
fimuls
lods
adc
imul
jne
je
push
jmp
ja
test
sub
ljmp
fs
adc
sub
je
adc
xor
outsl
and
adc
xor
pusha
sbb
xor
cmp
mov
mov
xor
je
fisubrs
push
xor
subl
test
aaa
inc
in
mov
sbb
arpl
jmp
call
mov
add
and
jns
or
clc
dec
mov
xchg
jo
shlb
fildl
pop
or
add
adc
cmp
incl
xchg
jecxz
out
jp
xor
call
pop
les
jbe
fwait
out
or
imul
dec
movl
or
and
xchg
adc
call
inc
fbstp
inc
nop
loopne
call
pop
or
arpl
pusha
ss
or
lahf
loop
loopne
scas
and
popa
nop
and
leave
or
adc
xor
fisttpl
push
test
lcall
insb
loopne
negb
add
outsb
and
mov
cli
in
cmp
push
xchg
jb
sarb
and
jg
aaa
insl
add
inc
inc
pop
mov
jecxz
adc
add
sahf
sub
lock
push
xor
push
loopne
mov
cld
pop
push
adc
push
push
test
fsubr
pusha
into
std
jbe
mov
hlt
adc
loopne
pop
iret
shrl
or
mov
jb
hlt
dec
add
jge
xor
add
and
psubsb
fcomps
jne
insb
out
inc
mov
lea
out
xor
sbb
dec
aam
and
inc
test
inc
outsb
xor
rcrl
cmp
add
add
shlb
test
mov
dec
add
loop
mov
mov
jp
push
mov
test
pop
xor
inc
jp
decb
ss
sub
orb
or
data16
call
icebp
dec
push
pop
mov
sti
fisubs
jo
jb
sti
mov
sahf
inc
jno
ret
and
xor
mov
sub
test
add
test
cmp
shlb
jg
int
fdivrl
push
dec
addr16
push
lods
shlb
cmp
push
jecxz
mov
jne
nop
jne
and
mov
mov
mov
add
call
aam
hlt
and
push
jg
mov
int3
xchg
jo
jg
or
jae
push
loopne
push
jecxz
cmp
or
fdivr
jo
mov
push
add
sbb
pop
or
cld
adc
fisttpl
rcrb
and
mov
add
fiadds
or
mov
jo
jge
xor
or
or
push
mov
fisubs
cld
pop
mulb
xchg
mov
test
ja
lock
stc
add
testb
or
jbe
jns
insb
push
and
push
sub
jmp
add
jb
pop
push
push
mov
mov
lock
lock
sub
bound
jg
or
aaa
xor
mov
jge
or
sub
cld
ljmp
inc
mov
orb
mov
xor
jne
in
jne
dec
jge
jmp
adc
dec
push
inc
popa
mov
adc
xchg
rcrb
fsubr
jmp
xor
mov
push
jae
inc
add
gs
or
sti
mov
push
adc
xor
popa
int3
int
shrl
xchg
sbb
or
imul
addb
test
pushl
dec
fwait
jo
jmp
xchg
lret
lock
adc
push
js
jbe
ds
fcomp
pop
into
jmp
outsb
inc
das
cs
pop
mov
adc
mov
push
xor
mov
sub
mov
sar
addl
and
mov
jb
jp
call
mov
les
mov
mov
ss
repz
bound
add
hlt
aaa
rorb
icebp
sub
add
mov
insl
push
nop
add
mov
lea
dec
or
push
ret
jb
xchg
push
ja
dec
xor
add
sbb
sub
add
push
cld
js
add
or
xor
mov
mov
aad
add
push
add
and
jecxz
lea
xor
shlb
jp
push
push
mov
js
cmp
jmp
add
adc
jo
loopne
jl
fstpt
jb
mov
movsl
adc
mov
call
xor
jg
pop
mov
lock
lea
xor
arpl
push
aam
cmpsl
mov
add
mov
loopne
mov
inc
jb
mov
or
stos
nop
adc
jne
or
dec
push
pushl
pop
xchg
jo
icebp
xor
je
aaa
ja
push
inc
icebp
pop
jbe
call
hlt
aas
xor
js
mov
and
roll
or
jb
iret
jo
sbb
out
test
pop
jne
fsubp
inc
cmp
push
pop
in
mov
jno
pushf
cmp
jge
test
add
mov
mov
push
push
add
dec
out
dec
mov
jbe
mov
adc
inc
std
or
imul
jns
aaa
decl
or
add
jb
xorl
push
inc
pop
and
jo
mov
push
xchg
xor
scas
rclb
pop
cmc
in
and
inc
or
mov
call
mov
adc
push
adc
in
sbb
jp
mov
mov
mov
fidivs
and
cltd
ficoms
out
xchg
jecxz
xor
fsubl
cmp
sub
jge
mov
aas
call
dec
sbb
mov
or
or
lret
call
push
faddl
push
jmp
rorl
inc
adc
mov
ljmp
cmp
enter
or
mov
dec
mov
call
mov
lock
push
decl
adcl
push
add
fwait
loope
mov
inc
push
pop
jp
pop
xor
sub
xchg
fimuls
call
dec
inc
xlat
and
jo
mov
mov
jo
pushl
decl
push
pop
push
pop
loopne
mov
repnz
adc
push
leave
xor
inc
and
add
decl
mov
and
andl
push
mov
fldcw
xchg
sbb
mov
lret
mov
fs
mov
cmp
fsubl
xor
repnz
or
jns
mov
mov
jl
and
jo
jecxz
xor
lock
aam
imul
jb
jb
and
sub
lcall
pushl
mov
adc
mov
push
push
andb
cmp
ja
call
mov
push
sub
xchg
scas
in
fbstp
sub
mov
fs
rolb
sub
adc
sbb
add
jl
aam
cmc
lock
cmc
stos
jl
loope
jbe
notl
jmp
adc
push
sbbl
cmc
call
mov
cmp
and
xor
mov
jl
adc
testl
push
or
das
loopne
incl
pop
sbb
js
sti
cmp
jbe
int
xor
out
bound
ss
adc
lea
dec
cld
mov
fstpt
pop
addb
andl
xor
mov
xorl
ljmp
mov
sub
mov
lods
je
ret
xor
testb
add
jg
rcrb
adc
mov
push
jg
add
sbb
cmc
fst
jo
ljmp
lea
pop
pop
mov
add
push
sbb
and
imul
ljmp
loopne
pop
jbe
ret
outsl
add
or
mov
fldt
add
inc
ja
and
jb
or
mul
jp
int3
push
inc
mov
out
sbb
dec
sbb
inc
call
scas
fiadds
insl
pop
je
pop
ret
add
inc
std
dec
std
fwait
jno
enter
test
add
inc
shlb
or
leave
cmpsb
loopne
adc
es
mov
xor
add
clc
add
mov
adc
je
push
and
mov
ss
test
xchg
add
sarb
push
test
push
mov
sbb
add
sub
outsb
pop
lret
push
and
add
jne
ljmp
clc
and
lret
subb
mov
das
call
add
push
andl
andb
testb
outsb
or
or
jmp
orb
cmp
xchg
push
add
je
mov
sbbb
pusha
sub
lret
mov
mov
add
push
pop
jl
gs
loop
mov
test
inc
cmpsl
ss
pushl
add
xchg
jne
mov
xchg
cmp
call
mov
aas
call
jne
mov
insb
test
xchg
dec
or
mov
dec
push
cmp
push
add
or
add
outsb
cmp
sbb
outsb
push
and
mov
leave
mov
add
add
addb
push
clc
push
nop
inc
dec
lds
inc
jp
lcall
fists
shlb
xor
mov
test
mov
adc
in
lcall
shlb
test
jge
push
jb
add
in
rclb
aam
xorb
push
jae
sbb
clc
incl
cmp
jbe
adc
sub
outsb
clc
aaa
leave
pop
movsb
pop
loope
outsl
xor
jb
push
jle
mov
adc
pop
rolb
mov
out
add
hlt
adc
pop
test
mov
sub
xchg
cwtl
adc
mov
fmuls
out
aam
mov
ror
xor
push
rolb
fidivl
lds
fiaddl
lock
addr16
out
fs
push
sbb
or
inc
pop
test
push
pop
in
roll
std
mov
fs
add
notb
sub
scas
dec
add
xchg
and
adcl
fisubs
sbb
push
mov
mov
js
js
clc
xchg
mov
add
pop
ljmp
inc
mov
ret
or
xchg
push
in
fistpl
loopne
xchg
mov
xchg
mov
adc
int
and
or
lcall
mov
jg
in
out
inc
xlat
push
ds
mov
mov
mov
cmpsb
pop
sti
repz
sub
in
sub
lods
test
adc
outsl
jg
or
inc
roll
dec
mov
mov
jg
insb
fistps
mov
in
inc
mov
mov
jnp
xor
jbe
mov
push
cmp
mul
pop
xchg
mov
mov
push
pop
fs
push
adc
out
aad
or
inc
rcrl
mov
mov
fnstenv
leave
jge
mov
mov
fidivl
push
inc
add
pop
mov
mov
dec
repz
cmpsb
push
mov
lret
iret
fwait
dec
in
jecxz
out
inc
aas
bound
mov
shll
or
push
jg
negb
or
mov
mov
inc
cld
mov
pusha
sub
inc
dec
int
insb
mov
ret
rolb
mov
cld
mov
add
mov
xchg
idivl
loopne
or
int
push
inc
fmuls
dec
mov
out
mov
mov
mov
xchg
loopne
mov
push
out
cmp
bound
jp
sbb
jecxz
mov
push
inc
vpavgb
enter
and
call
and
cmp
dec
fildl
fcomip
mov
mov
mov
push
dec
sub
push
or
sub
mull
rcrl
dec
mov
mov
loopne
fwait
jg
or
in
fisubl
adc
pop
fwait
int
inc
add
loop
ds
add
sub
inc
inc
xor
and
jb
cmp
loopne
inc
shlb
inc
add
js
add
push
loop
sbb
incl
mov
add
loop
dec
mov
sub
dec
mov
fildll
in
inc
bound
add
mov
mov
incl
pusha
add
mov
push
inc
and
cmpsl
mov
push
mov
pop
outsb
dec
sbbb
mov
jg
lahf
mov
or
fs
in
pop
outsb
inc
jle
or
mov
mov
icebp
mov
dec
adc
arpl
mov
fdivp
andb
je
ss
mov
icebp
mov
adc
jmp
or
sbb
jecxz
cltd
sbbl
add
jnp
shrb
jae
lea
sbb
das
add
daa
inc
pushl
inc
lea
data16
cmovns
shrw
iret
js
decl
xor
test
cmp
inc
jl
adc
push
mov
sahf
sub
inc
js
mov
insb
jl
in
mov
insb
lock
add
rolb
cli
cld
add
jmp
mov
out
push
push
scas
push
push
sub
and
jae
add
ja
js
and
sub
xor
push
ja
clc
ja
ret
mov
mov
push
push
inc
enter
lcall
add
loopne
lret
imull
nop
and
in
mov
push
xor
mov
jmp
adc
pop
lds
ljmp
cmp
test
add
lock
outsl
dec
outsl
mov
sub
push
into
jo
mov
sti
ljmp
push
mov
insl
mov
insb
and
xor
lcall
repz
mov
jg
add
xor
inc
scas
push
push
test
ss
sbb
mov
je
lret
mov
pop
add
ja
or
call
jmp
push
mov
lock
lock
xor
jne
aaa
add
add
call
sbbl
mov
js
or
cmp
or
sbb
jg
lock
mov
out
pushf
mov
and
xor
in
sub
or
dec
int3
add
inc
std
pushl
mov
fstpt
jb
jmp
push
inc
inc
lock
das
push
push
test
sub
jle
add
inc
sub
cmp
jbe,pt
jg
mov
subb
mov
lea
inc
hlt
pop
js
add
push
arpl
pusha
xor
adc
xor
or
fs
test
lds
int3
and
push
scas
jmp
std
call
xor
jmp
jno
adc
pop
adc
sub
incl
rorl
fsubl
decb
call
jl
add
pop
xchg
push
call
sbb
jle
movsb
sbb
or
and
push
push
inc
ficomps
mov
js
std
leave
jne
cmp
cli
shrl
and
push
notl
stos
fdiv
mov
pushl
lock
dec
dec
xor
cli
push
ljmp
adc
arpl
xchg
xor
pop
mov
test
lock
push
lock
push
jl
adc
add
pop
xor
cs
stos
cmpl
sti
xor
push
xor
rolb
cld
add
in
dec
xchg
pop
xor
push
lea
and
pop
sub
loopne
jge
enter
or
push
lea
dec
mov
adc
lods
add
add
neg
push
cmpsb
jne
dec
cmpl
pop
hlt
mov
push
and
pop
imul
loopne
and
xchg
or
push
inc
adc
lods
dec
pop
cmpsl
sub
jno
cmp
rcrl
mov
jo
in
xor
in
jmp
sahf
inc
sub
rorl
adc
mov
add
jmp
inc
ret
mov
adc
ss
or
ss
mov
mov
mov
jl
or
lret
loopne
and
cmpsb
mov
adc
pop
les
lret
cltd
mov
rcrb
mov
repnz
out
jne
rep
ret
push
xchg
or
xor
clc
jmp
or
lock
add
cmp
mov
inc
inc
aaa
cwtl
orb
sub
or
sbb
cmp
jne
data16
inc
add
pop
xchg
add
push
lods
inc
cltd
xor
aas
call
inc
pop
inc
adc
and
inc
cmp
jp
data16
cmp
jne
movzwl
std
cmp
or
js
add
js
in
ljmp
clc
adc
adc
addl
mov
pop
push
rcr
mov
pop
add
je
jbe
data16
je
int3
fdivr
fnstenv
add
jne
shr
pop
xchg
stc
sub
mov
cmp
imul
enter
push
rolb
mov
mov
mov
dec
add
loope
and
inc
rolb
fimuls
jmp
cmpsl
mov
pop
add
ljmp
add
push
testb
jle
insb
andb
mov
adc
add
push
add
mov
pop
rolb
or
mov
pop
jo
je
das
jmp
push
cli
sub
jbe
aam
inc
leave
add
divb
xor
mov
rolb
sub
and
jmp
add
mov
test
add
and
or
xor
inc
lret
lock
aas
push
jg
stc
sub
dec
add
xor
adc
inc
add
cs
push
cmp
leave
jb
and
push
sarb
jmp
call
or
mov
je
mull
add
or
adc
test
add
in
push
mov
ret
jmp
mov
jo
add
mov
cli
jle
test
add
or
and
push
je
cmpb
inc
xor
push
mov
inc
inc
sbb
mov
push
adc
add
cmp
sbb
adc
add
test
sub
mov
fisttpl
xor
cmp
mov
push
loope
loope
loop
out
add
stos
and
push
add
rcrl
lock
inc
and
xorb
lret
mov
xchg
mov
mov
and
adc
lock
push
fs
push
mov
xor
sbb
add
pusha
in
incl
shll
ja
nop
mov
inc
xchg
push
mov
ds
loopne
or
addb
push
xchg
adc
test
cmp
cmp
inc
or
cmp
insb
cwtl
pushf
sub
inc
test
jl
enter
stos
add
inc
pop
adc
mov
lret
sub
mov
add
mov
xor
pusha
fildl
shll
or
dec
inc
pop
rcrl
or
or
bound
jl
fidivl
dec
cmc
jg
mov
push
orb
jg
mov
mov
and
jg
mov
add
mov
stc
lea
nop
or
lock
frstor
jo
addl
es
xor
mov
jo
je
add
mov
xchg
add
adc
clc
outsl
sub
repnz
add
jb
cld
clc
jmp
sub
add
or
push
sub
call
outsl
jo
jl
clc
pop
jnp
sbb
mov
push
cld
and
nop
cmp
push
stos
addl
add
nop
xor
sbb
xor
ror
or
ret
jo
jmp
addb
lahf
add
push
or
dec
pop
adc
test
aam
xlat
and
adc
out
mov
add
int3
lock
pop
dec
fildll
pop
add
ret
je
into
dec
and
mov
inc
cmp
inc
in
les
jl
and
je
ret
dec
jp
mov
cld
filds
jle
sbb
jbe
je
sub
adcb
jl
adc
push
add
pop
cmp
sub
push
pop
nop
aas
jmp
and
orb
cmp
mov
lcall
mov
ja
lret
rcll
inc
dec
add
test
hlt
popa
fisttpll
movsl
add
add
and
clc
stos
out
mov
cmpsb
pop
xchg
mov
in
mov
fidivrs
test
dec
cmpb
add
cmpl
adc
adc
outsb
es
insl
clc
mov
xchg
adcb
adcl
adc
testb
push
pusha
test
add
cmpl
je
cld
pushf
push
add
enter
test
push
jecxz
xlat
lods
xchg
push
sbb
lret
add
call
fwait
jmp
dec
ret
pushf
rorb
xor
push
test
add
andl
cmc
mov
cmp
cli
push
xorb
push
add
fmuls
loopne
es
sub
push
mov
in
add
or
push
xchg
lret
jl
adcb
je
mov
and
cmp
dec
and
push
adc
lea
incl
arpl
adc
imulb
bound
sub
shlb
mov
fs
rcrl
adc
mov
int
sbb
sub
inc
lods
clc
scas
inc
clc
or
shll
int3
popa
mov
cli
xchg
shlb
cmp
sarb
arpl
jbe
mov
loope
adc
mov
in
sub
or
test
xor
add
mov
orb
pop
inc
outsb
xchg
xchg
jecxz
mov
push
movl
add
clc
jg
push
les
jl
nop
movl
rclb
in
imul
loop
ds
out
sub
icebp
cmpsb
mov
les
xchg
shrl
inc
dec
push
lret
shlb
ror
das
adc
pop
mov
inc
jnp
xor
leave
cmp
cmp
call
call
and
jb
mov
xchg
cmc
push
dec
adc
rcrb
test
and
mov
add
or
dec
test
xor
out
adc
sti
ret
push
and
out
push
sbb
dec
and
inc
jne
loope
pushf
out
sub
fcmove
scas
pop
in
dec
test
pop
ret
cli
subl
push
jo
fcmove
dec
mov
cmp
ret
movsl
subb
xchg
and
push
inc
mov
sbb
or
test
xor
shrb
push
add
test
out
jns
add
sbb
add
addr16
pusha
dec
inc
push
scas
cli
push
sbb
pop
das
mov
out
push
xor
xorb
loopne
inc
jl
add
or
test
out
test
sbb
lods
xor
adc
sbb
sti
jae
cwtl
xchg
adc
pusha
pop
loopne
out
pop
add
pop
pusha
push
in
adc
fsts
add
adc
xor
push
adc
out
mov
fadds
mov
shlb
fists
js
lcall
aaa
cld
aas
test
test
lcall
insb
mov
fs
push
scas
pop
lock
addb
xchg
dec
or
aaa
ss
clc
pop
ljmp
popa
add
sub
aaa
je
std
xchg
pop
or
andb
or
push
mov
popa
dec
cli
sbb
loop
adc
cltd
outsb
sbb
mov
add
test
sub
pusha
jns
lea
cmp
loopne
pop
jae
fsubrl
clc
lcall
xor
jns
jmp
loopne
add
push
push
cs
ds
jge
jbe
lock
push
dec
sbb
xchg
add
sub
sub
inc
and
in
mov
jne,pt
and
xchg
add
xor
mov
mov
insb
xchg
cltd
push
mov
or
outsl
loopne
jb
add
sbb
fisttps
mov
sbb
pop
add
loope
or
add
fildl
test
inc
push
pop
sbb
cmp
push
fbstp
add
push
mov
jmp
loopne
pusha
int
pop
repnz
in
push
add
clc
inc
or
dec
sbb
xlat
cmp
popa
dec
cltd
call
popa
mov
xchg
lret
repz
loope
pop
push
mov
inc
push
mov
ret
inc
scas
ret
stos
adc
rolb
lcall
lock
and
or
add
mov
push
mov
or
xor
movsb
nop
jmp
push
sub
mov
popa
aas
hlt
roll
and
jmp
dec
push
pusha
or
bound
enter
sarl
sbb
sbb
mov
mov
loope
dec
jecxz
addl
and
mov
mov
push
add
pop
enter
lock
cmpsb
fisttpl
sbb
mov
adc
dec
jnp
aas
jg
pop
or
adc
dec
pop
movsb
jmp
mov
mov
inc
fs
xchg
or
mov
or
aaa
lea
and
es
pushl
dec
cmp
adc
or
pusha
xchg
repnz
pop
test
cwtl
mov
je
adc
push
jo
das
adc
or
cmp
mov
test
add
cmp
sar
inc
out
jg
pusha
fimuls
pusha
cmp
mov
mov
xor
cli
and
lock
jno
jle
fiaddl
int3
shlb
outsb
add
test
cwtl
add
jg
inc
push
add
insb
mov
or
sub
in
js
mov
rcrb
inc
pop
push
mov
mov
jg
scas
outsb
lock
test
gs
jl
incb
mov
jo
push
mov
sub
inc
sbb
inc
push
add
mov
and
negl
mov
cmp
add
pop
jmp
jle
cmpsb
jmp
pop
mov
sbb
xor
std
je
adc
incl
mov
pop
xchg
invd
test
out
jne
sbb
jno
fimuls
sbb
sub
xchg
pop
jle
movsl
xchg
call
outsl
xor
daa
test
push
adc
dec
icebp
mov
add
cmp
outsb
cmpb
add
enter
cmp
ss
cmp
jo
divb
mov
add
inc
ror
js
add
sahf
jo
sbb
fcmove
push
mov
cld
cmpb
fidivs
loop
mov
sbb
push
mov
xchg
xchg
xor
bnd
mov
outsb
rolb
ljmp
rolb
subb
into
mov
sbb
adc
xchg
call
or
add
cld
je
jne
add
pusha
ror
fnstsw
xchg
jno
addl
inc
pusha
sti
negb
cmpl
or
xor
fwait
xor
add
push
jg
dec
mov
push
jb
mov
rcll
xor
or
fldt
cli
sub
and
xor
js
push
mov
sarb
sub
in
fcmovne
dec
jecxz
icebp
inc
mov
lds
js
or
xor
jmp
insb
jo
mov
shr
sbb
jg
xor
incb
or
les
adc
ss
add
mov
mov
mov
add
jo
push
dec
push
mov
inc
mov
out
inc
lock
xorl
or
cmp
inc
fadds
jmp
xor
leave
popf
adc
adc
mov
xchg
lea
stos
xchg
inc
loopne
xor
test
ds
sub
add
sbb
push
push
jl
sbb
mov
divl
mov
mov
push
mov
mov
lock
push
mov
push
dec
add
roll
sub
push
mov
inc
out
mov
jne
xor
sete
add
mov
adc
adc
mov
jo
sub
addb
mov
sbb
adc
cs
cmp
sbb
fwait
pusha
jg
rclb
sub
or
lock
inc
pop
lock
push
fdiv
mov
push
sti
icebp
mov
cmpb
jecxz
adc
mov
pop
in
icebp
or
mov
xor
leave
mov
or
xchg
hlt
pop
jmp
fdivp
es
mov
dec
xor
or
or
mov
ja
test
push
push
jmp
mov
ficompl
test
mov
cmp
mov
add
sub
inc
xorb
lock
mov
sti
or
jo
out
cli
mov
add
jl
sbb
add
adc
mov
sbb
add
mov
or
dec
add
fidivs
or
jg
leave
cmpsb
jbe
andb
pusha
call
cmp
cli
xchg
in
ret
and
cli
jo
imul
pusha
fdiv
cltd
cwtl
and
mov
ds
adc
aas
and
inc
inc
jo
ja
jle
jmp
cmp
mov
mov
pushf
ja
sub
add
mov
and
movl
lock
cmp
adc
mov
pop
orb
adc
and
test
outsl
jo
cmp
pop
fbstp
dec
xor
imul
sbb
cmp
add
xor
lcall
dec
xor
and
rolb
fdivrs
mov
cmp
jns
in
xor
sub
add
shl
sub
xor
or
ret
xor
call
cli
cmp
lcall
pop
cmp
xor
pop
addb
jne
add
lock
push
repnz
mov
cmp
aam
mov
icebp
add
cmp
pop
lock
push
mov
dec
adc
andl
mov
mov
cmc
jb
test
nop
int3
test
or
push
fbstp
xchg
add
add
xor
dec
xor
mov
icebp
fwait
lock
js
hlt
fcoml
je
mov
orl
push
add
cs
xor
sub
dec
add
inc
jne
mov
jmp
inc
fidivl
xor
mov
into
jg
aaa
mov
sti
push
nop
stos
shll
jo
adc
xor
enter
xor
cld
divb
mov
inc
mov
mov
add
add
outsl
mov
mov
mov
add
mov
sar
imul
mov
xor
jo
xor
mov
add
sub
or
sbb
mov
jl
movsb
incb
adcl
mov
xor
incl
jo
add
je
mov
je
push
ret
xchg
cmp
adc
stos
or
test
inc
clc
mov
push
mov
leave
movsl
test
and
xchg
out
sbb
outsl
outsl
lea
mov
lret
pop
pop
cwtl
addr16
adc
sbb
hlt
push
stos
in
inc
lea
jl
and
vmovhps
ret
inc
jb
ret
lock
jo
push
das
fcoms
lar
or
in
mov
add
test
jo
mov
and
sub
or
rolb
aas
adc
add
cld
jmp
push
inc
je
mov
push
test
mov
inc
mov
dec
cli
add
jno
adcl
xor
enter
fildll
and
clc
inc
shl
jo
rcll
and
inc
test
and
pop
cli
xor
out
fmuls
jge
dec
adc
xor
les
test
mov
lods
add
mov
test
and
mov
inc
and
out
adc
jbe
cmc
mov
lea
mov
adc
sbb
mov
cli
or
add
sahf
pop
lcall
adc
aam
dec
xor
cld
outsb
adc
sub
jb
add
bound
stos
adc
data16
ds
rcrl
rcrb
popa
mov
mov
add
fcoms
add
add
fs
or
mov
or
leave
lods
or
cmp
pop
cmp
dec
lock
add
dec
xchg
sbb
xchg
or
dec
add
add
nop
call
mov
lds
add
in
incl
les
mov
inc
in
dec
or
pop
inc
mov
xor
hlt
loop
add
push
insb
sbb
or
inc
test
bound
insb
sub
xchg
pop
mov
and
mov
mov
adc
rolb
mov
sub
xchg
in
pop
xorl
dec
lcall
cld
sub
cmpb
and
in
pop
pop
hlt
jne
add
sbb
jecxz
sbb
mov
sbbb
push
int3
fcomps
sar
dec
mov
out
das
cld
add
add
pop
cld
nop
mov
sbb
and
and
sub
sbb
adc
push
in
sbb
adc
loopne
jle
xor
js
jmp
jae
push
push
hlt
mov
or
in
andl
fdivr
jmp
movsl
add
andl
mov
andl
adc
popa
sub
xlat
adc
movsl
mov
enter
xor
js
add
inc
mov
inc
into
add
jl
jmp
loop
adc
adc
sbb
rol
inc
push
jbe
pop
dec
orl
lock
and
fidivs
adc
pop
lock
sub
inc
fildl
xchg
and
push
rcll
mov
xchg
push
push
sbb
sbb
sbb
adc
dec
sbb
or
sarb
cli
mov
jae
jmp
andl
dec
or
test
rcrb
add
outsl
push
jp
or
cmp
or
push
rorb
mov
mov
movl
add
mov
adc
pop
add
push
or
hlt
or
push
add
movsb
fcomps
ret
int3
add
arpl
pop
cmp
and
mov
stc
mov
push
xor
shrb
xor
shrl
lds
dec
xchg
mov
lock
jmp
or
fimull
mov
pop
scas
cld
ja
mov
mov
test
or
add
push
rcrb
add
adc
movsb
shl
in
dec
fs
jecxz
sbb
add
push
cmpsb
pop
inc
add
add
add
outsl
adc
adc
ret
or
inc
fidivrs
push
adc
adc
or
mov
cld
aad
sub
cli
lret
les
jl
outsl
data16
jge
rclb
jae
orps
je
add
idivb
mov
inc
add
sub
inc
fisubrs
lret
mov
jle
pop
lock
aaa
push
fadds
adc
xor
loop
aad
or
jo
dec
and
mov
in
add
inc
inc
and
sbb
cmp
add
pop
mov
scas
add
jmp
xchg
loopne
loopne
test
andb
stc
jl
jno
inc
xchg
mov
fdivrp
pop
inc
or
jmp
rorb
push
repz
and
xor
loop,pn
mov
imul
imul
movsb
call
imul
add
imul
int
outsl
cmc
mov
jb
popa
dec
loopne
loopne
or
mov
aaa
cmc
dec
enter
enter
push
cli
jg
popa
insl
push
jecxz
push
add
loopne
test
add
ds
int3
rolb
ljmp
push
test
ljmp
xor
shlb
in
incl
inc
jmp
jecxz
jmp
popa
loopne
dec
cmp
loop
dec
add
das
cmpsb
popa
xchg
push
mov
mov
jmp
lea
loopne
mov
faddl
sbb
mov
mov
mov
dec
pusha
add
mov
loope
test
cmp
add
or
push
push
add
or
dec
ret
mov
mov
fcmovbe
rorb
jl
cs
lock
fiadds
push
mov
pusha
nop
mov
xlat
fmuls
push
repz
push
movb
fimull
cmp
dec
mov
pop
adc
xor
dec
mov
mov
dec
stos
and
decb
inc
mov
fidivs
clc
jg
test
fimull
xchg
jmp
lret
gs
pusha
sub
mov
loop
xchg
loopne
and
inc
jl
or
mov
idiv
push
add
adc
or
cli
test
jp
repz
sbb
pusha
loopne
bound
push
xlat
jmp
jle
or
mov
pusha
mov
or
mov
cs
jl
and
ret
ret
pop
inc
fistpl
and
dec
into
and
or
or
xchg
mov
cmp
mov
mov
cmp
jg
ja
jle
lods
push
and
or
loopne
add
mov
mov
orb
test
pop
cld
aaa
add
push
loopne
pusha
jmp
add
out
cmc
jl
inc
or
mov
jbe
add
rcll
pushf
insb
or
rclb
mov
dec
or
call
bound
test
pusha
push
pusha
aas
loope
cmp
or
push
or
cmpb
add
mov
incl
push
sbb
push
mov
testb
insb
push
fnsave
push
ja
rcr
aaa
ljmp
or
pop
cmp
add
pop
rorl
mov
jb
jg
jl
popa
aaa
dec
addb
imul
push
mov
jg
loope
fdivrl
icebp
mov
lock
jle
add
xor
jae
push
push
jmp
cmp
jmp
mov
jb
add
repz
or
mov
call
and
lock
jmp
jle
fldenv
xor
mov
xor
jb
xchg
xor
mov
es
scas
dec
vmread
adc
and
xchg
push
inc
cmp
jg
add
clc
jge
mov
cmp
add
sub
out
mov
jbe
mov
lea
aad
dec
jne
lock
call
sbb
ja
mov
cmp
xchg
pop
rorl
or
add
jg
xor
add
es
mov
sub
add
je
insb
mov
sub
mov
fists
xor
jnp
jnp
imul
in
xor
sti
mulb
jo
mov
cmp
sbb
es
push
xor
call
adc
jb
sarl
das
cli
push
push
fmuls
mov
jo
or
cmp
cmp
and
add
sub
mov
je
cmp
je
jne
outsb
jo
xorl
test
mov
or
popf
mov
mov
pop
ljmp
cmp
inc
outsl
push
loope
in
jl
jo
xor
cmpsb
mov
std
jl
xor
jo
dec
add
push
pop
jle
mov
mov
pop
lock
lock
enter
mov
push
es
jo
mov
andl
out
cli
push
mov
or
jns
dec
fistpll
add
or
add
mov
or
outsl
sbb
into
push
lock
pop
mov
xor
or
or
mov
xorl
inc
or
mov
sbb
movsb
test
or
adcb
jne
hlt
adc
mov
push
xor
fisubs
jle
sub
or
push
dec
or
mov
push
rorl
mov
add
fcomi
inc
clc
idiv
adc
sub
xor
lock
adc
xor
jo
adc
int3
test
xor
push
ljmp
pushl
push
sub
std
xor
movsb
mov
repnz
fcmovu
fucomip
cmp
inc
push
mov
mov
popa
jbe
out
ljmp
xchg
or
sahf
pop
sub
push
adc
bound
repnz
or
popf
add
or
adc
xor
hlt
rcrb
pop
je
jmp
or
xchg
add
lret
out
ljmp
lock
cmp
jl
movl
inc
push
sar
jl
and
add
xor
and
pushl
mov
nop
call
sbb
xlat
jno
lret
hlt
lea
icebp
lea
lock
stos
or
cmpsl
adc
cli
mov
add
jg
cmp
mov
lds
add
jne
pop
mov
rorl
mov
mov
lret
add
out
add
loopne
icebp
jne
scas
mov
aam
dec
and
push
push
adc
scas
push
hlt
xchg
call
loopne
inc
adc
clc
jp
or
add
inc
test
xchg
adc
es
push
das
clc
call
add
jmp
test
xor
mov
subb
cld
push
jbe
lea
jne
mov
aaa
adc
pop
push
mov
cmpb
pop
push
add
cmp
mov
add
call
cmp
mov
jbe
xor
rclb
idiv
incl
mov
or
inc
jo
mov
add
mov
test
sar
dec
inc
mov
jns
jl
inc
jge
ret
mov
push
mov
call
push
inc
sbb
xlat
jno
jno
jb
add
call
hlt
jg
push
mov
push
lcall
pinsrw
sbb
xor
adc
adc
xor
or
call
cmp
xor
add
or
jecxz
imul
add
jmp
mov
cld
fstpl
incb
jns
cmp
jno
cld
jbe
and
sar
incl
repz
xor
lock
lock
jle
inc
mov
and
icebp
scas
fcomip
sbb
sbb
mov
shr
xchg
mov
mov
jmp
or
and
add
sbb
mov
push
lock
adc
and
ljmp
repnz
inc
mov
stos
mov
dec
push
pop
pop
imul
mov
ret
sbb
inc
addr16
ror
mov
gs
ret
outsl
ficomps
outsl
mov
push
scas
and
mov
mov
mov
mov
mov
sub
scas
lock
test
push
lock
sti
mov
mov
inc
xchg
adc
ljmp
add
mov
movl
gs
cwtl
sbb
add
cmp
add
arpl
lret
in
sbb
add
call
or
push
inc
filds
int3
mov
mov
push
jl
js
add
daa
jo
cmp
mov
stos
mov
or
and
mov
adc
or
pop
lock
pushl
adc
dec
adc
sub
jbe
mov
cmp
and
mov
xchg
mov
and
xchg
push
addb
addb
sbb
cltd
rcrb
mov
orl
or
icebp
call
cmp
sbb
dec
pop
je
lock
add
je
les
test
fdivrl
jge
mov
jno
mov
shlb
imul
movsb
lock
add
mov
call
add
add
jl
push
cld
sarl
jmp
and
fisubs
jmp
add
hlt
cmp
add
inc
add
or
jecxz
sbb
idivb
cmpl
mov
mov
fmuls
pop
cmp
orb
xadd
add
add
jmp
mov
jo
dec
test
adc
and
clc
mov
jbe
push
cmpl
push
ss
fsubr
stos
adc
mov
in
adc
nop
cmp
in
xor
xor
ss
jmp
or
ret
outsl
add
test
dec
rorl
rclb
test
int3
fcmovnu
rcrb
scas
stos
test
inc
ret
cld
subb
rorb
dec
cld
outsb
pop
ret
lods
das
dec
xchg
rolb
shrb
and
and
and
mov
dec
rclb
in
mov
rorl
out
ret
push
ss
and
mov
and
xchg
rcll
adc
pop
jbe
add
fs
push
out
mov
jmp
jbe
push
dec
out
aaa
and
fadd
push
mov
ret
add
jae
ljmp
lds
or
fs
out
sbb
stos
adc
sub
push
sub
inc
pop
shll
xchg
jmp
repnz
movsb
add
cli
mov
mov
adc
addb
cld
mov
repnz
add
pop
shlb
pushf
lock
fisubl
sub
movb
pusha
push
dec
fs
fldt
cwtl
sbb
xlat
decl
and
xor
dec
adc
or
jmp
add
rcrl
rcr
aaa
add
add
mov
test
aaa
mov
arpl
shll
cmp
sub
adc
inc
pop
jl
cmp
fwait
add
jl
add
test
mov
jb
in
sub
jle
push
mov
push
pop
xor
inc
in
lock
mov
movsl
ljmp
sub
and
adc
adc
outsl
data16
outsl
lock
mov
or
cld
mov
jmp
mov
jl
leave
push
out
clc
cmp
in
xor
and
add
mov
fwait
inc
and
pusha
adcb
jecxz
pop
cmp
push
std
bound
clc
ret
les
fimuls
in
jnp
add
and
add
dec
enter
and
adc
or
shr
mov
mov
inc
pushl
adc
dec
push
xorb
flds
bound
shrb
into
add
test
ret
mov
call
out
mov
add
mov
test
out
pop
hlt
sub
mov
inc
sub
mov
pop
mov
divb
mov
insl
mov
sbb
lock
sbb
push
push
add
loope
sbb
andb
dec
es
lahf
nop
dec
xchg
cmpsb
dec
pusha
adc
sub
pusha
aad
es
in
inc
inc
adcl
cmpsb
jnp
pusha
sbb
inc
fs
cli
jmp
fisubl
lock
mov
mov
mov
xchg
fchs
sbb
jbe
cmp
incl
push
adc
in
xchg
popa
add
fwait
loopne
popa
sbb
push
push
pushf
push
lods
push
xchg
add
pop
pop
js
and
inc
push
fsubs
loopne
or
mov
push
loop
scas
jmp
mov
lea
adcl
xor
loope
inc
or
dec
jp
loopne
jp
push
fsubs
mov
add
push
loopne
sbb
insb
jg
aam
shr
arpl
loopne
fs
pusha
pop
popa
cmp
xor
loopne
clc
negb
jecxz
popa
cmpsb
loopne
xchg
add
insl
popa
pop
lret
push
popa
sub
jmp
out
popa
jb
loop
sub
and
mov
loopne
dec
push
in
xchg
jecxz
xor
pop
enter
sub
pop
mul
mov
cmpsb
fs
jmp
dec
cmp
push
push
lcall
loope
jecxz
adc
or
loop
or
insb
cmp
and
or
or
mov
mov
push
imul
lret
inc
loopne
add
sbb
or
call
mov
adc
loop
push
inc
add
mov
pusha
clc
fildll
push
pusha
push
lcall
ja
fisttpl
jmp
test
adc
clc
fadds
adc
mov
sub
sbb
mov
cmc
fucomip
mov
fiadds
lods
add
or
mov
gs
addb
cmp
xchg
lret
fsubrl
sbb
int3
jno
push
dec
loopne
pusha
ret
jmp
push
pusha
out
add
stos
jbe
and
enter
xchg
lcall
mov
pop
or
fsubr
test
mov
or
fildl
sbbb
mov
push
jno
into
and
sti
or
cmp
inc
push
add
adc
mov
js
adc
mulb
or
jmp
inc
inc
imulb
add
sbb
inc
pop
or
iret
loope
jo
aas
pop
lock
xor
sub
test
jge
jmp
imul
cld
hlt
mov
ljmp
mov
and
mov
mov
jbe
push
aaa
or
push
push
dec
adc
insl
fistps
mov
aad
jo
sbb
push
mov
add
adc
add
mov
add
sub
xor
lcall
ds
popa
push
push
into
nop
xor
push
outsb
add
roll
jg
aas
inc
push
add
xor
inc
adc
popf
dec
stos
xor
icebp
cs
inc
fwait
divb
mov
mov
add
ja
mov
xor
int
push
shlb
xlat
js
jb
xor
lahf
fwait
cmp
sbb
add
dec
jb
movsb
pop
mov
xor
cmpsb
pusha
adc
dec
xor
mov
and
sub
jp
icebp
or
inc
dec
inc
test
outsl
and
push
clc
or
or
add
dec
mov
test
adc
adc
push
call
xchg
ret
outsl
filds
sbb
sbb
push
pop
and
sbb
fisubs
and
and
in
mov
push
sub
sub
sub
and
dec
jl
xor
add
stos
das
jl
xor
int3
xor
out
ss
cmp
pop
fs
les
cmp
cmp
inc
mov
shll
adc
mov
ds
clc
and
outsb
seto
fwait
push
cwtl
sbb
test
and
jp
out
xor
lcall
sub
sarb
push
adc
or
sti
push
lcall
test
inc
mov
rcl
cmp
xchg
stos
mov
mov
jbe
roll
push
mov
add
mov
movsb
cmpsl
mov
or
mov
mov
add
mov
push
or
hlt
inc
xchg
subl
dec
rol
ljmp
test
loop
dec
mov
mov
jbe
in
int3
mov
or
outsl
pop
test
je
xchg
std
xchg
ret
jmp
pop
push
xchg
and
loop,pn
mov
mov
and
jne
dec
sbb
push
mov
cmp
andb
pop
hlt
fcomip
push
push
cmpsl
mov
mov
inc
out
mov
dec
and
add
test
xor
dec
and
and
add
dec
dec
xchg
sub
xor
orb
jb
aad
cli
mov
xor
inc
addl
push
mov
popf
les
popf
clc
cmp
lock
lods
pop
loop
sbb
inc
sub
add
xor
outsb
adc
sbb
stos
jbe
dec
inc
and
pushf
rcrb
mov
aam
lock
jmp
lods
jg
loopne
or
push
enter
add
cld
shll
push
stos
mov
repz
test
add
adc
inc
mov
cld
decl
dec
test
inc
or
pop
or
adc
aam
ljmp
ds
insb
outsl
aaa
adcl
and
pop
jp
mov
mov
adc
mov
test
ret
dec
or
jno
pusha
add
inc
out
clc
int
or
call
js
test
adc
cli
inc
push
pop
mov
sete
pushf
loop
push
add
mov
add
aaa
xor
pushl
push
xor
and
mov
cli
push
aad
jl
cmpb
jge
pop
adc
mov
ret
jbe
call
je
push
jmp
mov
jmp
lock
rorl
imul
lock
mov
mov
inc
dec
fnstenv
mov
dec
xor
adc
je,pt
xchg
fwait
push
inc
mov
add
aad
imul
add
push
movsb
sar
insl
pop
fs
xor
adc
mov
mov
mov
scas
push
cld
jp
je,pn
stc
imull
inc
cmp
add
mov
fs
jb
dec
push
add
or
stc
mov
ljmp
and
mov
ja
dec
xor
je
idivb
clc
lea
icebp
stos
stos
mov
pop
icebp
incl
mov
cltd
push
cmpsb
add
stc
jo
adc
add
mov
mov
je
sbb
pop
idiv
enter
mov
add
mov
iret
ds
ljmp
shll
mov
sbb
movl
inc
orb
sbb
fisubrs
mov
lock
orl
bound
iret
mov
ss
mov
gs
incl
mov
fmuls
andl
mov
xor
add
mov
jmp
or
xor
push
xor
jbe
push
jmp
pop
inc
loopne
add
repnz
loop
ja
into
cmp
jae
testb
mulb
inc
ja
pop
add
adc
or
and
orl
rcr
loopne
mov
repnz
pop
test
xchg
testb
or
push
movsb
or
jl
push
xor
pop
pop
fadds
mov
test
push
adc
test
pop
adc
andl
icebp
mov
test
scas
fdivr
je
hlt
out
adc
jo
rolb
iret
mov
shrl
jp
add
gs
jbe
das
inc
add
jl
mov
dec
mov
lcall
shlb
mul
xor
mov
adc
lea
ljmp
cmpsb
and
mov
jo
xor
cmp
inc
rcl
mov
aam
xor
cmpb
mov
mov
lds
pop
mov
jl
xor
push
add
into
fisubs
mov
cld
xlat
jbe
or
pop
in
adc
inc
test
xor
jo
jl
mov
push
rolb
fidivl
ds
jno
sub
test
mov
push
jo
push
cmc
mov
cmp
les
fwait
add
mov
mov
xor
jmp
mov
jne
shrb
jge
bound
outsl
adc
xor
push
je
lcall
push
mov
loopne
call
js
lea
cmp
call
mov
inc
lret
mov
cwtl
inc
sub
jb
push
mov
mov
sub
cmp
pop
adcb
mov
push
mov
inc
add
dec
or
lcall
xor
movsb
lcall
mov
xor
mov
add
jne
stos
mov
test
add
mov
push
in
jne
mov
mov
push
cvtps2pd
cmp
dec
add
sbb
bound
ja
mov
int3
jbe
inc
les
push
mov
inc
mov
pop
sub
mov
sbb
adc
add
dec
or
push
push
ljmp
sbb
jb
jmp
dec
add
add
pusha
add
roll
mov
jl
adc
mov
add
cmp
sar
mov
jo
mov
call
xlat
dec
add
adc
xchg
movsb
je
nop
jno
jb
in
movsb
cwtl
xchg
jbe
push
sahf
in
sbb
sub
cmp
hlt
push
jle
xchg
xor
je
jle
mov
pop
dec
add
sub
cmp
cmp
add
popa
call
scas
subl
pop
movb
cmp
jae
mov
es
scas
popf
js
jle
add
fiadds
cmp
add
cmc
mov
bound
and
jne
sbbb
adc
pop
pusha
ret
mov
orl
jp
adcb
sub
lcall
sbb
cmp
push
jg
orb
jae
add
and
outsl
int
fcomps
je
inc
xorb
stc
add
je
add
rclb
sti
inc
pop
fiaddl
fdivl
ds
xor
adc
loopne
lcall
jg
or
push
jl
fsubrl
xor
shrl
add
sbb
push
cmpsl
bound
and
jmp
push
in
push
sub
sbb
mov
dec
cmp
lods
adc
cmc
call
mov
jmp
ret
es
push
add
mov
pop
test
incb
andl
shrb
xor
add
rcrl
movsl
test
sbb
sti
incl
in
movb
test
imul
ja
gs
jo
sub
stos
xor
or
add
pusha
push
add
jmp
add
pushf
add
sbb
xchg
sub
adc
pop
mov
mov
cmp
cmpsl
daa
xor
stos
add
adc
outsw
sub
add
mov
pop
dec
cmp
add
lea
fidivl
clc
push
loopne
lock
mov
shrl
cld
jmp
sti
adc
jb
or
xchg
sarb
pop
pop
stos
dec
push
sarb
mov
jp
movsl
outsl
clc
cld
and
mov
jmp
sbb
and
mov
outsb
mulb
adc
push
roll
stc
and
fisubs
clc
pop
mov
roll
enter
orl
adcb
inc
int3
push
push
add
push
adc
fistl
cld
dec
addb
dec
inc
sbb
xor
add
jmp
push
dec
sbb
std
outsl
pop
aaa
mov
jmp
movl
loop
add
jmp
roll
push
push
sti
add
or
cli
pushl
jbe
sbb
ret
push
std
sub
cmp
ret
nop
cmpsl
push
shlb
rclb
add
xchg
cwtl
jbe
fwait
cmpsb
add
pop
push
lods
push
dec
add
add
mov
xchg
mov
push
sub
xchg
outsb
add
inc
add
mov
cmp
fdivrl
xchg
divl
and
pop
mov
inc
rcrl
jp
pusha
add
push
add
incl
add
iret
mov
pusha
push
call
add
mov
cld
fimull
sbb
sti
pushl
faddl
jl
add
cld
movl
cli
stos
jo
ljmp
adc
push
jge
shrl
add
out
ljmp
lcall
sub
pop
icebp
mov
add
add
add
adc
adc
lret
xchg
xor
add
pop
dec
jg
pop
cmp
fs
xor
pop
mov
je
adc
sub
xor
lods
ret
out
add
mov
ror
loop
cmp
xor
adc
mov
cli
mov
call
nop
loopne
mov
adcl
imull
and
add
push
mov
adc
shll
cmpsb
push
and
je
call
adc
inc
loope
push
push
call
shll
sbb
loop
pop
and
push
jb
in
mov
aad
fcoms
arpl
mov
xor
pop
xchg
pusha
push
cmp
hlt
loope
mov
push
in
out
inc
push
cmp
mov
or
or
sub
jbe
out
imul
outsl
pop
push
pushf
loopne
pusha
add
addr16
arpl
or
cli
out
test
lods
pusha
or
cmp
lods
in
mov
or
arpl
pop
loope
adc
sub
pusha
or
mov
inc
adc
pop
push
and
jecxz
es
adc
daa
dec
inc
je
or
addb
mov
mov
int3
shl
xchg
push
mov
sbb
pop
ret
adc
sbb
sbb
insb
ljmp
xchg
inc
mov
add
pop
aam
add
test
mov
bound
mov
cmpl
test
jae
enter
add
lea
adc
add
mov
sbb
mov
adc
cmpb
add
decb
jecxz
sub
and
loope
jnp
adc
add
test
xchg
cmpsl
call
mov
loope
add
or
inc
xchg
add
int3
fld
pop
fadds
lea
add
push
sub
inc
mov
je
daa
add
mov
add
aas
mov
cmp
es
lahf
insb
mov
sub
xchg
in
movsb
sbb
cmp
pavgb
adc
pop
jbe
inc
jbe
mov
cmc
mov
cs
decl
loopne
dec
push
push
je
adc
cmpb
lcall
add
xchg
xchg
loopne
stos
jbe
and
xchg
xchg
jne
fwait
mov
xchg
lock
or
xchg
cmp
add
adc
inc
aam
add
fld
pushl
popf
loope
pop
add
adc
jecxz
jge
cwtl
int3
aam
and
outsl
adc
js
add
cmp
inc
push
sbb
xchg
icebp
mov
jg
pop
or
jmp
divb
ljmp
repnz
or
pop
sbb
pop
lock
leave
mov
mov
ret
adc
and
or
pop
enter
bound
mov
xchg
and
leave
or
pop
pusha
pusha
sbb
push
mov
or
pop
inc
add
or
mov
or
pop
icebp
ljmp
sbb
xor
shll
cmpb
inc
pushl
scas
call
in
dec
cmp
or
dec
shl
js
adc
aas
and
or
pop
sbb
lock
push
add
lock
pop
add
ss
notb
push
jecxz
aam
movb
lock
add
push
pop
add
adc
lcall
lea
test
test
loopne
mov
sub
adc
push
faddl
ljmp
pushaw
pushf
ljmp
mov
mov
cmp
and
icebp
pop
rolb
mov
call
add
js
icebp
rcll
jb
sbbb
es
pop
pop
add
xor
fdivl
adc
pushl
push
je
or
std
inc
mov
adcl
inc
lock
enter
and
in
fs
lock
and
mov
fbstp
mov
icebp
sbb
dec
call
dec
cld
test
icebp
push
lahf
inc
sbb
mov
xchg
cld
popa
insb
adc
xor
call
pop
and
fcom
mov
or
test
cli
jno
jne
mov
inc
inc
push
pop
mov
add
push
inc
mov
push
aaa
xor
xchg
cmpb
icebp
mov
lea
push
sbb
pushl
fdivl
or
dec
and
clc
mov
decl
inc
inc
mov
push
add
add
mov
jo
addl
add
nop
adc
mov
test
lock
lods
push
push
testb
adc
inc
fnstenv
call
push
mov
icebp
pusha
call
std
mov
mov
dec
sub
dec
jo
cmp
and
icebp
push
add
jg
ret
add
push
and
mov
jnp
add
fs
in
jo
mov
call
insb
xchg
test
mov
lock
je
push
xor
sbb
adc
mov
icebp
outsl
pop
pop
xor
cltd
mov
out
sub
ret
mov
add
push
testl
add
jmp
jmp
mov
cld
divl
cmp
pop
clc
and
jo
call
or
jo
call
pop
dec
mov
mov
push
xchg
jo
lea
repnz
call
xchg
std
pop
add
jl
decb
mov
nop
jnp
imul
addl
sbb
mov
and
shll
adc
mov
add
icebp
mov
adc
movsl
icebp
test
mov
iret
adc
or
add
jmp
leave
outsb
xor
bound
dec
jl
jae
push
out
adc
xor
insb
inc
mov
push
jmp
push
dec
mov
push
dec
ljmp
pop
mov
dec
sbb
jo
mov
adc
out
ljmp
jp
imul
add
mov
inc
mov
cwtl
sbb
in
mov
pop
int3
dec
jmp
std
push
push
and
xchg
mov
stos
push
movsb
test
mov
or
sbbl
or
push
fs
sub
ja
mov
lods
mov
push
add
add
shlb
scas
adc
movsb
mov
inc
pop
pushl
icebp
jb
add
repnz
jp
insl
add
xor
mov
pop
scas
idiv
lds
lods
xor
insl
or
insb
sub
xor
add
sbb
rcrl
mov
xor
and
fcmovnu
mov
push
aaa
jo
xor
movsb
das
adc
push
push
lock
and
push
xor
daa
add
stos
sbb
popa
mov
mov
insb
loope
inc
fwait
sub
or
in
mov
sbb
add
or
stc
mov
hlt
aas
mov
call
and
inc
sbb
dec
push
jb
js
les
test
pop
add
mov
adcb
popf
sub
repnz
jne
lods
jae
push
jmp
push
or
or
aam
ret
sar
call
hlt
mov
ret
mov
push
sub
mov
mov
push
xor
jle
cmp
jo
jg
dec
jb
push
jbe
pop
mov
icebp
add
push
es
add
jo
aad
out
mov
mov
dec
jo
mov
aad
jne
ljmp
in
cs
or
mov
and
dec
jo
add
adc
jbe
lcall
std
push
les
dec
and
mov
jo
mov
xlat
mov
movsb
inc
lahf
lea
inc
testl
dec
gs
mov
xor
add
pop
pop
icebp
mov
cmpsb
push
jno
or
pop
sbb
mov
insb
cmpsl
call
loop
or
add
dec
mov
jne
inc
outsl
push
cmpb
call
pusha
cmpl
inc
pop
jo
jge
mov
push
sbbb
dec
pop
daa
test
call
inc
int3
lock
sbb
lcall
add
sbb
xchg
jo
sub
incl
mov
iret
adc
adc
xor
mov
sbb
incl
pop
push
pop
lds
jo
mov
or
cmp
cmp
int3
inc
mov
stos
jo
sbb
cli
push
mov
call
shr
mov
sar
cwtl
pop
leave
add
icebp
cmp
add
xlat
push
jge
mov
dec
testl
adc
jp
popa
dec
pcmpeqb
test
push
dec
ljmp
add
je,pt
data16
ja
loopne
mov
imul
push
add
xor
call
movsb
out
test
imul
rorb
xchg
or
hlt
lock
mov
scas
decl
or
sub
cmp
dec
cld
call
pop
cld
mov
pop
clc
add
cmp
push
mov
fiaddl
add
jae
dec
add
lds
xor
sub
clc
scas
cmpsb
ds
add
inc
lea
sub
add
xchg
inc
xor
sbb
mov
imul
shl
and
enter
add
or
push
adc
orb
mov
push
pop
or
push
push
xchg
cs
sbb
pop
jle
adc
push
jo
mov
add
sub
xor
adc
or
push
push
shlb
jecxz
cmpsl
mov
repz
es
adc
jo
mov
pop
ret
cmp
pop
mov
cmpsl
mov
adc
xor
mov
sbb
icebp
test
call
scas
add
int3
dec
inc
dec
cli
lcall
lock
inc
mov
xchg
call
jle
ficoms
add
hlt
mov
cmpl
adc
push
add
push
add
pusha
or
or
cmp
jbe
ljmp
mov
or
dec
sbbb
dec
dec
loop
loope
cmpsb
insb
push
lea
stos
adc
mov
insl
push
add
inc
jmp
mov
test
daa
xor
push
xor
shlb
adcl
outsl
mov
cltd
jle
int3
add
imul
sub
jmp
bound
sbb
adcb
test
shrl
mov
les
pop
and
ja
and
sub
cmp
test
cs
aaa
jecxz
pop
outsl
push
add
sbbb
pop
iret
mov
testb
or
fbstp
jo
aad
imull
orb
clc
fildl
pusha
cmp
cwtl
les
adc
add
inc
je
call
mov
bound
ret
jp
bnd
incl
xchg
pop
divl
push
ret
adc
aas
xor
cmp
incb
or
addr16
push
push
push
xchg
xchg
fdivrl
push
aam
xchg
shlb
push
ljmp
hlt
rclb
xor
ds
imul
pop
shll
dec
jp
cmpb
xor
sbb
sarb
push
rorb
mov
add
mov
jne
ss
fwait
test
and
and
clc
xchg
add
out
loopne
or
add
jo
ret
cmp
lahf
jl
mov
ret
xor
loop
pop
mov
sbb
adc
ja
xchg
adc
or
dec
cmp
ret
add
cld
push
xchg
sub
jmp
cli
sti
inc
or
call
push
push
in
fs
scas
mov
and
fisttpl
dec
repz
pushf
push
jb
mov
nop
mov
leave
call
mov
arpl
xchg
and
es
pushf
call
sbb
push
stos
pop
push
cmpb
ret
sbb
dec
add
push
jecxz
and
stos
lea
add
cmc
ret
push
add
jns
stos
fbld
or
rorb
movsb
daa
mov
dec
add
cwtl
dec
push
loope
jmp
cmp
jne
daa
xchg
or
lock
pop
lahf
andl
lock
rorb
sbb
cmp
scas
adc
xchg
add
or
xor
mov
jl
nop
cmp
test
test
adc
add
mov
pop
pop
xchg
add
inc
je
cmp
mov
mov
jl
add
jge
outsb
add
jl
loopne
mov
or
xor
inc
ret
add
sbb
lret
clc
sbb
or
jbe
test
fstps
cmp
call
int
pop
inc
sarl
je
xchg
mov
nop
adc
sub
push
push
lods
loop
loope
push
lods
cli
fcoms
sub
sub
xchg
pop
dec
pop
pusha
insl
subb
jo
mov
scas
repnz
test
dec
stos
push
arpl
push
add
mov
xor
inc
outsl
add
jmp
subb
push
sub
push
jb
test
xchg
jmp
push
popa
sbb
adc
mov
andb
mov
sub
xor
cmp
add
movsb
shlb
jo
pop
jl
dec
push
dec
call
test
xlat
push
pusha
or
lcall
push
mov
adc
jnp
adc
hlt
ljmp
mov
mov
push
sub
scas
sub
push
mov
xorb
incl
pop
push
filds
insb
adc
andl
dec
jge
stos
ss
mov
sbb
popf
cmp
sub
mov
push
sarl
sbb
outsb
mov
aaa
push
sub
pop
add
scas
loopne
jecxz
xchg
add
mov
push
push
gs
int3
push
xchg
mov
outsl
dec
js
cld
jbe
sub
lcall
cmpb
dec
cmpl
in
or
jecxz
pusha
or
mov
dec
push
lcall
dec
push
sub
adc
test
scas
call
xchg
pusha
pop
call
sar
and
in
pusha
das
test
mov
xorb
mov
or
loopne
xchg
and
inc
nop
out
xor
pop
xchg
imul
or
and
mov
inc
stos
fucomi
bound
clc
xchg
fidivs
mov
mov
outsb
lods
shl
add
outsl
and
mov
arpl
push
push
icebp
mov
xor
pusha
inc
inc
mov
pop
push
fwait
pusha
pop
test
mov
push
jp
mov
or
sarb
add
loopne
je
popa
push
cmp
rol
pop
fwait
sub
fs
mov
sub
je
sbb
sbb
and
sbb
jl
les
pop
ds
roll
cmp
xchg
mov
xor
std
sub
dec
inc
jbe
adc
call
popa
mov
adc
bound
pop
rcrb
add
sbb
fwait
and
adc
les
addb
cmpsb
bound
mov
add
inc
call
inc
inc
cmp
icebp
cmp
mov
enter
das
adcl
icebp
filds
xchg
jl
pop
je
dec
ss
add
filds
xorl
lds
add
pop
mov
stos
lock
xchg
jl
push
jb
shlb
pop
outsl
decl
and
fcomi
rcrb
sti
mov
pop
inc
loop
je
cli
mov
cmp
pop
mov
pop
or
shlb
fildl
nop
push
cmp
rclb
mov
mov
jmp
dec
mov
adc
add
mov
and
ret
xchg
inc
mov
ret
xchg
scas
jge
add
jge
adc
pusha
jnp
in
scas
xor
clc
cmp
sbb
shlb
xor
push
cli
add
enter
adc
sub
decb
jo
jbe
fs
lahf
mov
adc
jo
pop
mov
inc
mov
or
test
in
ficomps
imul
jle
incl
lock
mov
or
xor
inc
mov
jb
xchg
js
xchg
nop
mov
lock
je
bnd
mov
in
adc
or
mov
adc
mov
hlt
mov
dec
pushf
mov
pop
mov
call
mov
xor
mov
jns
fbstp
je
push
or
xchg
ret
lock
xor
inc
xchg
or
add
pop
and
je
add
xchg
cmc
jg
add
mov
test
xor
or
add
xor
xor
cmp
pop
leave
jae
or
adc
and
dec
or
add
push
add
lock
or
xchg
dec
ret
je,pn
jp
ljmp
push
sub
sub
push
loope
xor
hlt
adc
jl
sti
out
sbb
push
out
add
dec
sub
je
hlt
add
shrl
clc
add
pop
mov
mov
add
push
adc
adc
fwait
mov
xor
lock
je
jbe
test
call
and
and
ds
stc
add
mov
cmp
out
ljmp
mov
push
int3
push
or
and
or
or
mov
shl
pop
hlt
mov
add
mov
inc
jl
adc
jb
add
jecxz
cmp
and
shlb
icebp
mov
sahf
inc
sti
je
lock
mov
pop
add
mov
adc
or
clc
incl
push
ljmp
test
repz
loopne
and
mov
jge
shr
or
call
inc
mov
pop
pushf
add
movsb
js
fldt
fimull
pop
inc
call
lock
and
jae
test
mov
pop
clc
adc
jae
mov
mov
inc
sub
dec
je
mov
sbbl
add
fs
repz
sbb
cmpsb
jns
idivl
mov
jg
inc
lcall
dec
enter
cmpsb
jns
lock
push
insb
decl
pusha
xor
push
push
push
sbb
movsb
mov
mov
pop
xchg
aad
xor
das
adc
or
mov
mov
fisttps
js
stos
pop
mov
mov
fcomp
jecxz
fsubrs
idivl
out
mov
fsts
mov
xorb
mov
sbb
jbe
fs
pop
cs
lret
shll
mov
mov
jp
add
pop
std
jge
jge
sub
mov
xlat
sbb
or
dec
add
aam
xor
mov
sbb
in
movsl
rol
stos
aaa
sub
subb
mov
movsb
lock
jno
mov
pop
mov
ret
push
xor
das
fs
lock
mov
nop
xchg
add
jo
mov
cltd
out
test
adc
into
ja
push
in
add
inc
daa
push
pop
cwtl
clc
out
mov
add
fbld
add
sbb
mov
incb
xor
inc
and
and
ja
lods
adcb
xor
nop
mov
lock
lock
stos
xorl
mov
and
mov
js
mov
mov
add
repnz
adc
mov
clc
jmp
ret
inc
push
data16
xchg
add
les
je
scas
fisubl
add
pop
or
aaa
xor
add
mov
je
add
test
sbb
adc
movsb
ds
add
mov
add
lods
mov
xor
stos
lods
je
add
push
in
mov
outsb
adc
cmpl
mov
jo
mov
mov
adcb
out
and
pop
sub
and
lea
dec
fmuls
rcr
add
sub
aam
mov
jge
adc
imul
sti
adc
cld
push
mov
roll
out
mov
inc
push
sbb
xlat
jae
push
rorb
and
push
lods
or
add
mov
sbb
add
cmp
push
add
stos
cmc
cmp
mov
or
sub
mov
add
jmp
jmp
lds
call
cmp
pop
add
movsb
xor
push
popa
fbstp
or
add
shr
add
mov
push
mov
lcall
cmp
sub
ret
scas
xchg
outsb
bnd
scas
aam
adc
in
orb
add
mov
lods
loopne
dec
jecxz
fisttps
cmp
loopne
inc
int3
das
ss
inc
nop
mov
inc
push
rcll
sub
jp
pushl
je
lods
jo
ljmp
jne
pusha
ret
push
xor
push
sbb
fcoms
pop
scas
decl
xchg
rcrl
xorb
jbe
clc
ja
mov
add
mov
jl
mov
adc
gs
es
ljmp
ror
push
mov
jo
push
xchg
adc
xor
es
xor
stc
jl
mov
mov
cmp
cmp
lds
cwtl
popa
mov
sti
adc
pop
cld
mull
es
hlt
nop
sbb
add
sbb
add
push
mov
xchg
out
add
les
mov
test
jns
clc
and
or
mov
push
ret
pop
call
and
or
xchg
ret
add
mov
lock
rcl
loopne
jmp
icebp
and
or
jo
pop
pop
bound
push
add
pushf
pop
shrb
fiadds
add
and
lret
push
insb
pop
sbb
push
inc
lcall
mov
pop
or
cli
sbb
jb
or
mov
mov
mov
jb
or
dec
push
sub
push
fmull
push
fstps
adc
push
push
inc
sbb
inc
inc
xchg
and
shlb
and
or
mov
enter
push
add
and
data16
push
stos
lcall
add
cld
sub
lock
lea
scas
push
push
int3
mov
xor
sub
subb
cmp
hlt
mov
push
bound
sub
xchg
jno
mov
lock
aam
xchg
or
mov
loop
adc
fnstcw
test
mov
lahf
int3
test
jecxz
lock
arpl
mov
jne
jno
xchg
push
push
push
test
test
sbb
cmp
xor
cld
xchg
int3
shrb
shrb
cld
mov
mov
xchg
cmpb
cmpb
add
pop
jmp
test
mov
lock
push
vmread
xchg
insl
cwtl
jne
adc
adc
inc
mov
ret
inc
inc
dec
fisubl
clc
out
xor
out
lea
push
call
xchg
sbb
xor
inc
bound
mov
inc
xor
or
mov
fcmovnb
sbb
jmp
aaa
cmpb
mov
jle
test
cmp
add
or
repnz
negl
sbbl
aad
dec
pop
push
sub
push
jp
pop
inc
xorl
mov
adc
fisubs
adc
adcb
ret
stos
add
adc
lea
decb
and
mov
add
ret
push
add
loop
add
in
cltd
cmpl
insl
inc
fisttpll
test
pop
add
loopne
push
cld
add
add
insb
rolb
aaa
ljmp
call
push
lods
pop
mov
movsb
inc
test
or
call
or
cld
dec
rorl
call
sub
je
mov
xchg
sti
add
and
push
lock
pop
jle
or
rcrl
ja
or
rcrb
std
fcmovnu
scas
xor
cli
and
call
push
add
sahf
ret
or
sub
leave
jp
js
cli
xchg
roll
xchg
xor
lcall
push
or
inc
sbb
sub
jmp
pop
xor
cmp
packssdw
lods
lods
push
mov
push
add
pop
adc
mov
sbb
add
dec
cmp
clc
add
shlb
xchg
push
xchg
mov
mov
sub
dec
push
ss
dec
cmp
add
arpl
je
int3
shlb
add
add
cli
add
movzwl
sbb
dec
inc
push
add
lcall
push
push
adc
and
mov
mov
xor
in
mov
cmp
push
lock
addl
xchg
push
scas
decl
scas
mov
decb
pop
shlb
fnsave
sub
and
adc
or
sub
incl
adc
mov
mov
or
adc
add
movsb
shll
dec
mov
add
pushf
fsubrs
mov
repnz
inc
and
xor
test
adc
out
loope
lret
popa
enter
mov
and
mov
out
incl
cld
loopne
push
pop
cltd
mov
and
lea
or
rcrl
add
testb
cld
adc
add
pop
or
dec
sub
popf
dec
insb
push
or
sub
jecxz
or
aad
rorl
jb
enter
sbb
popf
fsubs
lcall
loopne
loopne
mov
loopne
xor
test
pusha
xchg
adc
lret
aaa
inc
js
mov
je
sbb
mov
data16
ljmp
lcall
aas
scas
cwtl
pushl
fmuls
je
jo
ljmp
incb
inc
negl
jp
inc
and
cmp
mov
mov
loop
inc
loopne
mov
xchg
jg
lock
stos
dec
push
in
pop
jne
push
idiv
jmp
push
pop
and
inc
add
and
mov
push
sti
sbb
bound
sub
inc
aas
lret
loope
push
fsts
aam
call
aas
cmc
push
xor
dec
add
jp
jb
notl
add
push
cmp
mov
fdivl
inc
add
lds
lcall
ljmp
dec
inc
je
pusha
or
add
mov
mov
mov
sub
cs
test
add
sbb
lcall
pusha
pop
sub
lods
pusha
jnp
inc
sub
cs
adcb
mov
or
pusha
cmp
mov
or
popf
mov
push
jbe
xor
jae
mov
and
or
sahf
call
push
push
mov
xchg
sub
mov
call
popa
inc
cwtl
clc
push
sub
xchg
loope
push
pop
add
mov
xchg
and
lea
addl
mov
cmp
shlb
je
in
incl
clc
and
loopne
insb
das
add
rol
jp
loopne
imulb
popa
ret
loope
push
jp
sbb
jg
shr
mov
inc
pusha
add
sbb
push
sbb
push
xchg
cmpsb
sub
dec
test
bound
cld
out
test
xorl
popa
xchg
pop
mov
jecxz
mov
or
or
gs
pop
call
je
mov
sub
cmp
ret
outsl
push
hlt
cli
cld
push
lock
mov
jp
sub
mov
loopne
lock
pop
popa
add
push
mov
pusha
jl
test
js
sbb
pop
jne
cli
jg
lock
popa
fs
sub
add
push
sbb
daa
std
ret
jl
inc
subb
and
or
mov
cmp
push
mov
jne,pn
and
loope
loopne
jo
call
xchg
add
pop
pop
jg
xor
imul
insl
jo
test
bound
and
adcb
sahf
loope
arpl
aad
inc
pusha
mov
push
or
hlt
or
mov
cmp
mov
js
push
lock
imulb
pop
cmpsl
pop
loope
pusha
adc
push
sti
push
enter
pusha
decl
pop
mov
es
ljmp
loope
inc
add
mov
jae
inc
in
lea
scas
jp
adc
dec
cli
or
jno
scas
call
mov
cli
xchg
popa
cmp
pop
cli
xor
push
or
mov
push
and
int3
mov
or
or
lcall
add
shlb
or
and
cmp
adc
popf
ret
xor
ss
sbbb
orb
pop
out
add
sub
dec
mov
data16
or
mov
adc
pop
mov
lock
je
push
xorb
cmc
push
mov
imul
sbb
orb
or
adc
add
add
movsb
sub
stos
loopne
ret
add
dec
clc
or
call
stos
and
mov
mov
cmp
mov
mov
xor
dec
rolb
jbe
lret
xor
in
subl
push
lock
aas
push
call
adc
mov
mov
jle
out
cli
mov
and
inc
and
negl
add
ret
into
add
pop
das
call
mov
add
mov
jo
add
sub
hlt
push
push
incb
out
test
sbb
int3
or
push
mov
push
aam
push
orb
add
add
es
jg
lock
icebp
adc
fdivl
or
or
mov
jo
jle
lock
xchg
test
cli
fistl
shll
jne
mov
xor
jmp
push
xor
mov
inc
jo
lea
push
push
lret
jg
inc
xlat
and
push
jb
adc
dec
inc
enter
dec
icebp
jg
jl
and
or
lock
add
adc
xor
icebp
sbb
xor
cmp
cmp
cmp
ss
mov
add
push
jb
ds
jbe
lea
fisttpl
incb
and
mov
sub
push
mov
push
push
dec
mov
mov
and
and
lock
push
mov
mov
cwtl
add
mov
pop
add
call
mov
mov
cld
cwtl
call
dec
jmp
mov
data16
jl
mov
inc
imull
leave
subl
popa
pop
mov
pop
add
cmpsl
stos
stos
fs
push
sarb
xor
push
js
jne
or
testb
aas
inc
sub
cmp
jne
enter
movb
inc
jbe
mov
aam
ret
mov
push
push
add
add
xchg
or
add
add
inc
mov
mov
inc
les
fidivs
add
mov
push
nop
mov
call
lock
movsb
xor
std
incl
sti
cmp
dec
mov
call
sub
mov
cli
jmp
push
sbb
pop
and
dec
push
int
cmp
cmp
fidivrs
mov
mov
push
jo
mov
mov
sti
pop
loope
push
popa
push
fcoms
repnz
mov
bound
ret
ds
stc
lcall
pop
test
jge
clc
scas
mov
mov
mov
add
adc
mov
lahf
adcl
push
sahf
cmp
inc
adc
add
call
ss
mov
sbb
xchg
aam
jae
or
outsb
fcoml
aas
xorb
mov
mov
mov
inc
xor
and
or
adc
dec
loopne
jmp
sub
lcall
add
incl
xor
pop
or
test
call
xchg
fsqrt
or
push
ljmp
mov
xor
lock
pop
lock
pop
dec
inc
jo
mov
sti
test
sub
pop
divl
adc
ljmp
and
mov
ret
addl
rclb
es
ds
out
sub
mov
cmp
xchg
mov
adc
sti
call
js
xchg
mov
lea
xor
test
into
data16
clc
fwait
mov
pusha
mov
jmp
sbb
push
xor
fadds
push
syscall
inc
cmpsb
add
push
fisttpl
lock
loop
sti
add
mov
and
or
jmp
pusha
sbb
sarb
nop
inc
mov
loopne
mov
repz
adc
jo
pop
decl
add
inc
shrb
das
ss
push
pop
mov
jb
mov
in
jno
dec
and
add
das
pop
push
icebp
xchg
sub
pop
fnstenv
adc
or
mov
in
aas
push
pop
test
insb
and
call
dec
testl
pop
paddq
clc
jbe
loopne
push
push
movsb
int
adc
das
pushf
and
test
xorb
add
cmp
add
test
lcall
add
lods
call
clc
jo
and
xor
jle
sub
push
in
pop
imul
mov
pop
xor
fmul
cld
jg
shll
mov
xor
xor
and
sub
xor
add
xor
cmp
lret
add
int
or
sbb
pop
sub
and
ficomps
cs
xor
push
lock
pop
jmp
lock
or
data16
jo
int3
cmp
addb
mov
loop
mov
inc
xor
jne
adc
jo
lea
inc
add
add
insb
inc
pop
inc
push
push
mov
cltd
cmp
mov
sahf
mov
imulb
cli
adc
int
xor
mov
dec
ljmp
mov
cld
das
rclb
or
in
mov
cmp
mov
jae
lods
push
mov
sti
movzbl
cmp
adc
mov
cltd
xor
data16
cli
rclb
xchg
fsub
inc
data16
dec
les
adc
pop
pop
jno
sub
aaa
add
sub
or
ret
mov
inc
dec
jecxz
mov
test
fcompl
pop
popa
les
xor
mov
add
pop
or
mov
add
ficompl
inc
aas
mov
jmp
push
mov
in
jbe
cmc
int
dec
mov
mov
jnp
loopne
notrack
ss
jno
cmp
cmp
loope
jle
jmp
xor
ret
das
inc
xchg
leave
pop
mov
mov
jle
mov
call
jnp
mov
jl
imul
add
std
add
cmp
lcall
jno
add
inc
push
pop
jmp
xchg
mov
or
push
lea
add
testl
or
test
pop
jno
dec
mov
cmp
mov
iret
add
mov
mov
inc
xchg
inc
xchg
into
cmp
xchg
sbb
push
push
lock
add
inc
push
mov
mov
test
int
es
cmp
loop
rorl
xor
mov
add
add
add
xor
sbb
add
test
mov
test
stc
or
js
push
and
mov
adc
or
cmpsl
hlt
jbe
add
les
je
push
out
int3
xchg
cmp
push
adc
rcrl
push
add
push
faddl
lea
jo
push
push
ljmp
ss
outsl
push
sbb
jmp
or
add
jne
mov
popa
cmpsb
adc
inc
push
les
mov
or
jne
mov
lods
in
sbb
jmp
xorb
add
je
adc
les
sub
jg
sub
pop
mov
pop
les
sbb
or
pop
sti
add
imul
inc
xchg
push
push
mov
andl
daa
inc
mov
mov
out
mov
inc
lods
mov
mov
aaa
push
jns
pop
pop
clc
call
std
inc
loopne
inc
test
push
adc
or
fs
dec
in
call
xor
orl
xchg
nop
cmp
sub
or
mov
xor
les
clc
push
pop
mov
ficompl
call
inc
and
ret
add
lock
or
fmuls
sbbb
cs
push
jmp
cmp
add
adc
push
push
xchg
mov
mov
push
rorb
enter
in
movlps
add
sbb
notl
sub
mov
sbb
sbb
sub
mov
pop
imul
cld
mov
imul
fists
sti
push
push
sub
jne
je
imul
ret
shrb
fadd
sub
call
push
nop
sbb
mov
shlb
sbbb
pushf
push
ret
xor
cs
adc
add
mov
jb
or
rolb
rolb
jbe
jle
jg
test
je
call
push
adc
fcomi
add
les
adc
mov
inc
sub
cmp
mov
sub
fucomip
ret
bound
xor
rolb
and
jo
stos
sub
mov
cmp
int
dec
nop
cmp
out
call
sub
mov
inc
jecxz
mov
dec
xor
je
rorb
out
xchg
je
push
add
xor
or
jo
push
hlt
xchg
inc
popa
mov
and
cwtl
out
xorb
and
pusha
jmp
push
jae
push
out
int3
lds
jbe
sub
cld
mov
cmp
push
jmp
shll
or
sub
repnz
sub
push
shlb
fmull
xchg
inc
inc
and
push
incl
mov
ljmp
xor
add
call
jmp
insb
xchg
mov
jbe
or
add
push
cmp
jbe
mov
push
add
mov
pop
mov
dec
jecxz
xor
pop
push
aam
adcl
adc
dec
mov
pop
or
inc
xchg
mov
dec
inc
es
jbe
ja
push
add
inc
je
es
clc
push
call
bound
pop
pusha
mov
xchg
hlt
mov
adc
imul
xlat
adc
xor
push
sub
lock
dec
out
clc
je
jp
adc
jg
push
lods
call
add
scas
jp
or
iret
xchg
leave
inc
lods
popa
add
ljmpw
cmp
xchg
push
push
push
add
es
sub
cmp
lods
orb
fists
sahf
call
xor
fwait
add
loopne
in
jle
clc
outsb
jne
mov
cmpb
cld
or
and
mov
cld
push
popa
pop
pop
lret
cwtl
ret
std
lods
subb
push
loop
adc
jg
icebp
call
jns
lret
pusha
fs
addl
stos
pop
lock
push
sub
pop
or
push
or
test
das
js
loopne
pop
loopne
add
je
imul
sbbb
sbb
inc
test
push
pop
ss
test
stos
mov
xor
sbb
jne
adc
add
sbb
mov
sub
sbb
adc
add
test
mov
dec
adc
jp
loope
or
adc
adc
sbb
movntps
clc
xor
dec
inc
repz
pop
add
pushf
loopne
call
inc
ds
jp
add
inc
aad
jo
inc
fiaddl
jbe
sub
and
xor
sti
outsl
dec
loopne
std
je
xchg
or
and
cwtl
popa
adc
mov
sbb
xor
mov
clc
loopne
pop
cmp
sar
jg
stc
mov
inc
add
push
and
or
add
pop
popa
cmp
imul
sbb
scas
cli
jmp
or
in
aad
incl
add
adc
sub
or
push
das
clc
adc
cmp
jne
add
mov
xchg
jo
fs
cmp
insb
fs
or
fcomps
nop
inc
hlt
push
mov
pop
rorb
cmp
cmpsb
adc
inc
xor
test
call
pop
pop
and
mov
push
xchg
adc
pop
adc
js
or
xor
mov
adc
sbb
and
adcl
je
fisubrl
loop
xchg
mov
and
mov
popa
cmp
bound
outsl
ficompl
push
inc
loope
push
adc
les
std
ret
mov
sbb
jbe
dec
loop
je
data16
jg
lock
ds
pop
call
xchg
in
cs
cmp
mov
lret
add
jb
lea
rolb
scas
push
push
add
xchg
aas
in
aam
pop
sbb
pop
pop
inc
imull
sti
cmpsb
jle
ret
popa
pop
addb
adc
pusha
pop
enter
add
mov
jne
insb
sub
xor
sbbl
jg
test
mov
jp
lret
push
xor
xor
or
push
push
addb
or
dec
les
out
add
je
xor
inc
mov
push
push
cwtl
mov
sarl
scas
or
mov
push
sbb
lcall
adc
xor
dec
icebp
addr16
mov
pop
jge
ret
mov
and
push
pop
js
inc
aam
insl
adc
out
idiv
and
je
sub
mov
lock
mov
jo
nop
ljmp
jle
mov
cli
mov
dec
or
inc
inc
inc
ljmp
addb
inc
inc
pop
pusha
add
xchg
or
pop
mov
ret
dec
pop
jb
mov
jbe
sub
loopne
and
mov
or
ret
addb
xlat
aas
fs
xor
aam
mov
and
mov
jae
jne
insb
adc
call
sbb
and
pop
add
mov
jg
add
mov
add
lock
mov
enter
jo
push
test
inc
in
dec
fbld
call
movsb
inc
or
adc
xchg
push
inc
pop
inc
mov
in
call
and
cmp
and
mov
clc
pop
loope
imul
inc
sbb
adc
add
xor
hlt
aaa
mov
data16
lar
adc
ds
lea
pop
cmp
lods
add
mov
cmc
xchg
and
lods
push
into
or
mov
mov
or
callw
jne
xor
shll
icebp
icebp
sbb
pushf
add
xor
addb
or
mov
mov
je
add
mov
xor
fisubl
and
es
aaa
into
cmp
lods
xor
mov
add
jo
in
push
ja
mov
aaa
shl
call
xchg
adc
push
loopne
outsb
fdiv
das
xchg
icebp
push
inc
and
cmp
dec
adc
insl
fsubrl
adcb
je
loop
or
sbb
mov
leave
or
mov
sarb
fdiv
clc
add
or
mov
lcall
or
xor
dec
mov
scas
pop
and
lock
or
ss
les
or
inc
rorl
lea
adc
mov
fs
add
test
lods
ret
icebp
jae
mov
xor
inc
ss
scas
cmp
lcall
jb
add
adc
pop
imul
and
inc
or
imul
pop
es
negb
add
adc
testb
mov
outsb
sbb
xor
enter
call
xor
rorb
xor
sbb
push
dec
in
and
cmp
and
mov
push
outsb
pop
adc
adc
xor
clc
cmp
mov
mov
sub
xor
jne
fdivs
dec
cs
or
subb
hlt
aaa
and
sbb
inc
call
sbb
push
fildl
sub
push
call
add
pop
sub
cmp
add
jb
pop
test
mov
pop
inc
roll
into
and
adc
adc
lods
add
je
or
sbbb
xor
mov
mov
les
dec
insb
or
or
push
loope
fidivrl
hlt
std
call
loope
jmp
cmovne
or
mov
add
jb
hlt
mov
or
mov
and
pop
dec
push
clc
pop
mov
or
adc
aaa
adc
insb
add
lock
sub
js
xchg
add
sub
cmc
adc
incl
daa
pusha
xor
xor
or
loopne
sbb
xchg
test
repz
dec
inc
sub
push
pop
mov
cmp
mov
mov
jo
mov
and
aam
popa
inc
add
jge
adc
rorb
mov
in
das
add
scas
mov
adc
mov
push
outsl
fwait
or
les
sbb
push
jo
lock
ficompl
in
pop
jne
daa
mov
test
stc
add
jmp
mov
mov
inc
adc
pop
push
jnp
jo
jg
je
add
pusha
cmpsl
or
or
adc
add
nop
fisubs
sbb
cmp
ds
fwait
mov
jl
in
adc
sbb
xor
push
push
rorl
test
clc
pusha
aaa
jo
inc
dec
jg
add
jg
xor
sub
adc
xchg
jo
imul
jmp
adc
cmp
loopne
sub
clc
aam
pop
jg
aam
xchg
std
addl
xor
dec
add
cmp
add
icebp
gs
lock
pusha
xor
lock
adc
mov
and
nop
inc
dec
call
mov
pop
and
notb
sbb
dec
call
mov
loopne
shl
pop
andl
xlat
xchg
jo
ss
or
and
lock
dec
je
ds
lahf
add
sub
jbe
mov
aam
inc
push
xor
sahf
inc
out
ljmp
clc
insl
cmp
repnz
fucomi
cmp
pop
fildl
repz
inc
adc
lock
and
scas
add
fbld
cmp
je
cmp
pop
mov
xor
xor
push
add
add
add
shlb
inc
push
call
or
cld
pusha
ficoms
mov
mov
jecxz
jg
mov
into
shlb
les
cmp
push
sbb
lock
mov
out
lock
test
jge
mov
scas
nop
mov
pop
in
mov
xor
shr
mov
add
call
inc
testb
add
sub
into
xor
ror
mov
add
jecxz
xor
sbb
add
lcall
cmp
add
bound
adc
xor
shrb
repz
push
addb
or
adc
nop
add
push
jno
jp
add
andl
mov
popf
xchg
cmp
push
ja
fbld
push
adc
fs
jo
adc
add
xor
mov
addl
wbinvd
fbstp
mov
aam
cmp
push
cmpsl
pushl
shll
add
mov
ss
push
push
test
call
jmp
sub
jp
add
ss
adcl
movsl
mov
inc
sbb
xor
mov
roll
jmp
lea
mov
inc
repz
sbb
or
or
movl
dec
in
lea
orb
mov
jo
inc
xor
cmc
add
push
in
jmp
test
test
sbb
adc
lock
push
adcb
dec
arpl
adc
rolb
lcall
adc
or
aaa
jne
mov
jo
test
in
adc
lods
mov
les
add
icebp
ds
iret
xor
xor
lea
jle
shrb
mov
mov
or
add
int
push
mov
sbb
outsl
push
imul
adc
add
cmp
ljmp
or
jo
fcmovb
test
pushl
sub
iret
jmp
or
das
leave
inc
add
movb
arpl
data16
jg
lock
mov
sub
pop
les
test
inc
xchg
pusha
es
xor
jno
mov
int3
lcall
sahf
gs
adc
mov
jg
sbbl
clc
xorl
lods
jo
pop
pushw
iret
or
sbb
fsubl
js
jl
cs
mov
pop
add
call
xor
add
inc
xchg
shrb
lock
pop
add
push
add
orl
std
xchg
icebp
call
std
je
sub
fwait
and
add
movb
add
jl
jl
dec
mov
mov
fidivrl
sti
shlb
and
aam
xchg
cwtl
test
ret
leave
mov
inc
nop
iret
nop
sbbb
mov
clc
gs
mov
js
sub
sub
xchg
pusha
mov
shlb
push
jo
pop
push
add
subl
push
insb
xor
das
xchg
xchg
inc
add
pop
push
subb
pushl
orb
rolb
push
xchg
inc
push
or
ret
push
movsb
rolb
dec
or
cmp
cli
outsb
xor
inc
movsb
mov
inc
sub
xchg
rcrb
push
sbb
or
xchg
leave
push
ret
or
push
bound
test
mov
jbe
xorb
mov
push
and
add
xchg
cli
fs
xchg
sbb
mov
cwtl
or
les
jle
scas
mov
ret
dec
and
jbe
push
insl
mov
and
mov
outsl
push
rorb
sbb
ret
inc
js
mov
test
shlb
sysenter
or
push
cmc
mov
inc
or
dec
adc
ljmp
mov
mov
add
test
push
jnp
push
mov
data16
in
push
and
push
test
mov
dec
loopne
movsl
xchg
xor
mov
or
je
ret
or
mov
pushf
shrb
loopne
or
inc
push
sub
push
cmp
shlb
add
push
lea
xor
inc
out
fistl
insb
adc
adc
call
inc
sahf
xor
lock
cmpl
jne
je
push
or
cmp
jge
mov
int3
sbb
mov
rolb
dec
aad
mov
fimull
filds
pop
popa
loopne
sub
add
leave
ret
mov
xchg
je
or
add
je
adc
clc
xchg
jne
mov
pop
inc
fisttpl
test
mov
sbbb
das
rolb
test
call
testl
jne
and
mov
call
les
aaa
inc
jne
add
push
xor
imul
test
inc
add
adc
sub
jmp
insb
xchg
lea
push
add
adc
je
rcrb
fldt
dec
mov
push
and
inc
xor
jbe
ret
pusha
das
mov
pusha
mov
pusha
and
filds
push
ret
rcrb
imul
popa
sbb
push
mov
or
push
mov
mov
and
sbb
sbb
in
adc
mov
enter
testb
mov
cld
jne
ljmp
mov
or
or
loopne
add
xor
and
mov
dec
sbb
aam
xor
hlt
loope
ficompl
jl
push
arpl
or
sub
popa
pop
ljmp
mov
das
jmp
adc
adc
sub
lcall
sti
loopne
clc
cld
sbb
or
es
push
pusha
sbb
out
ficoms
bound
fs
cmp
ds
out
js
movsl
jg
test
daa
call
inc
and
jle
pop
mov
arpl
call
lods
mov
call
ljmp
jb
sub
pop
sarb
movl
or
add
cs
ljmp
push
pusha
jae
lea
loopne
pop
add
decb
jecxz
popa
inc
mov
inc
adc
pop
test
add
or
add
adc
mov
decb
or
jne
xchg
add
shrb
pop
push
mov
loope
loope
adc
sub
pop
cmp
hlt
inc
sbb
add
jle
xchg
add
cld
cltd
cli
and
or
nop
mov
ja
pop
loopne
in
mov
add
outsl
fisubl
push
shlb
hlt
test
loope
imul
add
add
fnstsw
jns
push
xor
cwtl
mov
loopne
loope
pop
mov
loopne
pop
pusha
loop
mul
orl
mov
loope
push
jmp
loopne
loope
addb
xorb
adc
sti
cmp
call
pop
insl
jp
orb
dec
push
ja
sbb
lcall
push
inc
jb
mov
decl
or
pop
adc
add
jge
cmpb
mov
test
push
fldt
pop
sbb
pop
insl
add
fistpll
pusha
pop
xorl
add
add
and
adc
je
cmp
add
add
pop
mov
and
push
call
cld
cmp
xor
in
loopne
push
dec
add
adc
mov
push
pop
movb
pop
mov
mov
sbb
out
mov
out
inc
push
loopne
clc
loopne
call
fbstp
clc
pop
fcoml
leave
ret
mov
mull
fwait
mov
add
adcb
mov
je
inc
adc
adc
lahf
or
scas
add
xor
sbb
xchg
insl
add
xchg
ficompl
fisttpll
pop
adc
ja
inc
adc
pop
cs
stos
sub
mov
lret
or
push
int3
jg
mov
and
add
icebp
jno
ret
sub
adc
add
dec
pop
inc
sub
mov
pop
mov
push
mov
dec
insb
fadds
pop
push
push
dec
dec
fisttpl
pop
xchg
cmpb
rorb
or
mov
pop
rcrb
cmp
inc
xor
mov
jbe
icebp
dec
rorb
mov
sbb
insb
loope
bound
jbe
hlt
insb
add
dec
and
mov
out
call
add
dec
jmp
jnp
ficomps
xchg
ds
cld
pop
inc
inc
popf
jo
jg
mov
adc
jo
fistl
repnz
jns
test
pusha
fdiv
sub
push
mov
jno
xchg
mov
incl
add
iret
je
lea
hlt
mov
icebp
adc
adc
add
shll
mov
and
or
jmp
pusha
xchg
repz
adc
push
or
or
orb
push
jmp
sbb
pop
ss
adc
cmpsb
scas
sub
add
pop
push
icebp
sbb
pop
ds
jae
mov
mov
mov
cld
cmp
or
mov
add
adc
lret
out
shr
shlb
mov
adc
mov
add
pop
push
add
push
ret
cmpsb
add
dec
sub
pop
pop
or
sbb
icebp
decl
das
jb
je
call
and
lahf
sub
imul
cld
push
xchg
cmc
and
add
or
adc
inc
xchg
pop
jb
add
cmpsb
leave
jae
repnz
and
push
and
ret
pop
mov
jl
std
call
pop
push
sbb
mov
mov
js
cmpl
mov
adc
and
lock
and
dec
mov
scas
mov
xchg
xor
dec
jo
jle
shlb
fadds
stos
cmp
incw
mov
es
sahf
add
out
nop
lock
testb
or
inc
add
or
orl
mov
cmpb
mov
pusha
jecxz
subl
and
jl
loope
ss
mov
jno
xor
mov
bound
and
lods
push
or
mov
pop
mulb
dec
rorb
pushf
sbb
addb
ja
jo
xor
and
loopne
xor
fdivp
outsl
and
or
sub
insl
sbb
shll
pop
pushl
jo
test
mov
loopne
mov
pop
mov
mov
push
loope
inc
push
cli
cmp
add
daa
fnstsw
jle
xor
mov
jl
pop
mov
aaa
add
dec
push
adc
std
or
inc
test
adc
mov
cmpsb
cmp
mov
mov
push
xor
std
arpl
mov
jg
sbb
repz
add
jne
xchg
jo
jo
stos
cmc
sbb
and
nop
adc
fcom
lock
inc
sub
sub
cld
add
ljmp
sub
test
repnz
lods
push
adc
jb
loop
lods
lock
mov
fildll
dec
adc
jo
jp
mov
jns
adc
addr16
ds
das
dec
insb
push
inc
adc
inc
inc
lock
mov
loopne
lock
cmpsb
fisubrl
jbe
push
adc
mov
inc
cmp
pop
movsb
aaa
sbb
loop
addb
mov
ljmp
add
pushl
xor
adc
and
ret
and
cmp
dec
add
cs
loop,pt
cmp
inc
gs
mov
sub
mov
jg
mov
add
dec
push
push
push
mov
or
dec
add
lods
jno
imul
mov
lahf
lock
mov
jl
mov
cmpb
or
pop
cld
push
push
loop
or
data16
jp
dec
pop
add
inc
or
shlb
aam
mov
cmp
or
lods
jns
adc
sbb
push
or
sbb
or
sbb
sbb
mov
dec
sbb
sbb
decl
dec
das
jbe
or
repz
lock
scas
mov
push
shlb
sub
or
add
and
and
ret
push
std
mov
sub
push
lcall
lock
jo
xor
push
push
push
mov
mov
sub
mov
pop
call
mov
push
ret
jl
orb
mov
cmp
or
les
cwtl
jo
xchg
push
mov
sub
add
incl
add
adc
push
pop
pop
jns
adc
mov
aam
andl
sub
fiadds
jmp
jo
nop
push
jno
mov
xor
sub
mov
mov
outsb
jo
in
sub
pop
and
cmp
and
adc
inc
inc
adc
or
lods
push
test
adc
add
ljmp
in
xor
jae
addl
cmc
push
add
adc
pop
sub
jno
pushl
jo
aam
lock
xchg
lock
pop
adc
clc
movb
jno
sbb
jne
enter
testl
or
adc
add
xor
xorb
daa
adc
sub
and
xorl
adc
mov
dec
fbstp
mov
push
std
insb
adc
add
jmp
clc
outsl
jg
call
mov
sbb
lahf
or
mov
in
adc
add
mov
mov
subb
aad
xor
xor
insb
jnp
jp
sbb
xor
mov
add
hlt
add
push
xchg
mov
out
sahf
je
jg
scas
xchg
jo
sbb
jne
lea
or
sub
pusha
xadd
inc
into
and
cmc
or
lock
or
sbb
xchg
es
fcmovnbe
ret
inc
add
push
shll
test
mov
dec
xlat
outsb
cwtl
push
jp,pn
mov
mov
lea
lahf
cs
std
data16
inc
jmp
add
add
pop
popa
lea
rcll
test
jo
dec
adc
add
fwait
adc
and
xor
cmc
ds
pop
or
and
mov
sub
dec
decl
in
add
jmp
mov
sub
sbbb
push
mov
mov
pusha
fiaddl
loopne
sbbl
ret
fsubr
sarl
shrb
sbb
in
icebp
ret
push
add
mov
pushl
int3
orb
cmp
outsb
sub
xor
scas
or
dec
aam
xchg
adc
clc
movsl
mov
jmp
inc
scas
loopne
adc
mov
data16
jne
mov
push
pop
push
sbb
adc
pushf
or
inc
cld
ja
adc
xchg
cmp
je
inc
push
call
inc
push
in
pusha
jp
mov
mov
add
mov
lods
pop
or
rcll
mov
test
rcl
packsswb
adc
mov
cmp
lock
adc
cmpsb
push
int3
pop
add
stos
adc
add
dec
dec
imulb
fadds
and
outsl
push
dec
push
nop
iret
xor
jle
add
mov
cltd
bound
jne
lea
sub
xorb
or
test
aam
stos
fdivr
fbstp
pusha
scas
mov
je
rclb
or
js
cli
rorb
pop
and
ds
ret
shrb
mov
and
mov
add
and
jns
cmp
sbb
or
add
pushf
scas
and
push
rclb
dec
out
push
xor
fiadds
adc
test
outsb
mov
addb
push
fiadds
inc
sbbb
fisubl
cld
jl
mov
rol
out
inc
rcll
stos
sbb
jne
cmp
call
adc
and
in
test
add
mov
orb
cs
adc
pop
insl
pop
cmp
push
test
inc
ja
adc
fildl
aaa
sub
fdivs
call
js
mov
mov
or
incl
push
rclb
add
inc
pop
or
rorb
mov
aaa
lcall
push
rclb
arpl
test
pop
es
sbb
xchg
fdivrs
inc
test
test
lock
add
jmp
cmpsl
sub
push
movsl
test
ja
mov
shl
pop
pop
add
sti
add
inc
xchg
push
inc
dec
add
mov
mov
jnp
or
fldt
mov
ret
lret
enter
push
clc
lcall
mov
adcb
loope
gs
inc
jecxz
push
xor
add
and
sbb
add
jp
add
cmpsl
loop
push
add
pop
mov
pop
jle
fs
stos
and
xor
add
dec
mov
add
loopne
sahf
and
push
inc
cs
pop
hlt
cmp
js
add
push
enter
mov
add
in
popa
sub
jmp
clc
ret
fimull
cld
ljmp
mov
dec
pop
push
xchg
sbb
arpl
mov
push
push
das
add
push
add
push
xchg
loopne
shrb
pushw
push
adcl
jg
rorb
lret
sbb
push
or
pusha
jl
jmp
gs
mov
inc
clc
jp
pushl
loopne
andl
loopne
and
pop
call
std
xchg
sbb
dec
pop
sub
roll
orl
data16
xor
loopne
or
out
pusha
aaa
push
or
mov
call
clc
mov
jbe
push
or
pop
gs
add
aaa
lcall
call
mov
dec
ss
fsub
bound
mov
jle
push
repnz
xor
nop
inc
mov
out
ret
or
xor
cmp
dec
jne
pusha
inc
pop
push
adcb
mov
dec
push
sbb
lods
shl
add
andb
scas
push
xor
sub
data16
aas
cltd
js
loopne
cmp
stc
push
call
pusha
pop
adc
and
mov
leave
add
and
add
fwait
movsl
xor
cli
ja
sbb
pusha
pop
and
jg
bound
add
insl
into
clc
pusha
insl
bound
loop
push
pop
stos
test
pushl
or
fistpl
ret
inc
jmp
and
loopne
push
inc
pusha
push
xor
cmp
add
call
mov
sbb
sbb
or
cli
pop
adc
xor
stos
aam
ss
add
push
mov
push
lock
mov
ret
aas
adc
jno
scas
dec
roll
push
std
sbb
mov
mov
popa
xor
cmp
and
mov
push
cmp
and
mov
mov
and
sub
adc
and
cmp
pushl
xor
cltd
sbb
dec
loop
loopne
call
push
in
and
data16
sti
in
scas
negl
repz
leave
sbb
popa
and
bound
lcall
loope
mov
aaa
jmp
pushf
sbb
and
pusha
pop
notb
and
dec
cmc
adc
test
adc
add
repnz
je
add
or
and
cmp
lock
fdivs
jno
push
xorb
jb
leave
inc
xchg
loopne
movsl
scas
jo
call
xor
dec
bound
fidivrs
fwait
push
xorb
cmp
dec
mov
cmp
push
pop
lret
mov
or
scas
xor
sbb
dec
xor
sub
cmpsl
mov
cmp
inc
fs
jo
je
add
rclb
push
test
sub
jle
xor
lea
push
scas
sbb
iret
call
cli
add
lock
dec
in
and
pop
cli
pop
pop
jne
test
daa
incl
sub
mov
movb
jo
sbb
pop
adc
sbb
das
movsb
adc
jg
outsb
mov
inc
jmp
mov
sub
jg
push
lea
loop
stos
mov
mov
or
fnsave
clc
mov
jp
nop
pshufw
or
and
ret
and
cmp
jg
add
int3
xor
loope
jmp
decl
in
pop
movsb
cmp
lock
xor
jo
mov
pop
lock
popa
in
sbb
fcomip
decl
and
stos
jo
pop
mov
scas
inc
xor
lock
xor
sbb
imulb
rcl
cmp
add
xor
xchg
mov
mov
mov
mov
dec
add
adc
ss
insl
dec
add
jno
push
jg
push
add
lock
or
cld
or
adc
es
addl
outsl
lcall
xor
inc
bnd
xor
dec
mov
jne
push
call
jb
lock
jbe
mov
xor
sub
xor
or
mov
add
xor
xorl
fs
push
int3
or
mov
xor
lcall
call
pushl
and
iret
test
lock
test
push
xorb
lcall
mov
out
cmp
mov
jbe
ja
mov
pusha
push
jle
inc
sub
icebp
push
mov
fs
popa
push
and
jae
aad
loop
jl
mov
add
mov
jo
xlat
push
jo
sub
or
mov
xchg
or
loop
mov
jmp
lock
call
push
loop
or
mov
mov
lock
pop
and
jge
repnz
dec
stos
loope
adc
add
fistpll
test
xor
add
xor
jg
add
mov
sub
call
mov
lock
mov
sub
mov
and
or
filds
insb
mov
mov
sbb
jo
adc
cmp
bound
inc
xor
in
cli
add
outsl
hlt
add
les
jb
test
push
icebp
clc
lcall
test
cltd
fstpt
add
mov
adc
sub
cmp
sti
in
add
mov
lock
pop
lds
cmp
mov
lds
mov
fistpl
and
mov
enter
movsb
inc
mov
loope
mov
jmp
adc
int
add
sbb
and
dec
xor
mov
fs
adc
mov
mov
clc
mov
push
out
push
data16
pop
or
pop
arpl
dec
mov
sbb
dec
or
scas
sub
in
add
test
lahf
push
into
jns
mov
push
push
or
sbb
add
jg
jecxz
dec
and
add
jo
mov
mov
inc
inc
add
or
repz
or
or
sub
add
dec
xchg
pop
pop
push
test
adc
add
jno
mov
adc
sbb
xor
mov
fcompl
test
addb
into
dec
sub
xor
nop
aam
xchg
shl
inc
xchg
aam
test
inc
push
xor
scas
fdiv
stos
mov
push
clc
push
xchg
xchg
jo
incb
inc
std
and
fdivp
stos
push
dec
clc
push
xor
push
ds
div
lea
dec
lds
jo
cld
aaa
jl
cmp
jae
fsubrl
daa
lea
xor
es
push
insb
dec
or
sti
jecxz
add
test
dec
push
dec
int3
inc
notb
pop
cmc
rorl
cld
jmp
push
pop
add
icebp
mov
enter
sti
mov
int3
rcrb
testl
das
mov
or
testl
push
lock
or
cmpsb
inc
in
outsl
adc
and
cmp
add
cmp
mov
inc
cmp
je
inc
jmp
pop
sub
das
adc
push
mov
movsb
mov
xchg
ret
rclb
jo
push
lock
mov
and
incl
xorb
push
adc
pop
and
jecxz
jb
inc
inc
mov
test
dec
push
and
popa
push
aad
push
fs
cld
sbb
adc
push
lea
call
or
les
add
mov
add
pop
cli
inc
sbb
adc
es
xorps
pop
pop
repz
addb
xchg
popa
push
push
and
jo
push
jno
dec
ret
mov
or
leave
sbb
adc
test
in
lock
into
fcomip
aaa
sbb
ja
pusha
add
push
scas
cmp
or
add
lret
pop
xor
adc
pushl
sub
mov
call
jl
and
pop
inc
mov
mov
fmul
mov
bound
or
fdivrs
inc
or
xor
or
loopne
sbb
add
loope
js
and
mov
adc
xchg
inc
fistpl
sbbb
push
xchg
gs
daa
test
push
adc
mov
cmp
mov
cs
sub
ljmp
add
out
sub
or
or
push
testl
aas
xor
mov
ret
inc
mov
cltd
xor
and
add
add
je
adc
mov
enter
scas
cmp
incl
andb
repz
mov
rorb
dec
std
push
inc
movsl
rolb
mov
dec
test
sbb
inc
jmp
jg
and
jns
cmp
cmp
jnp
inc
test
push
add
sbb
mov
inc
or
dec
add
sbb
enter
add
mov
sbb
jl
adc
cs
inc
mov
mov
fiadds
cld
test
cmp
pop
data16
test
incl
ret
cmp
and
dec
dec
loop
pop
enter
enter
cli
add
xor
push
or
insb
jp
dec
push
inc
mov
cwtl
in
movsb
adc
loop
test
subb
scas
push
mov
inc
add
mull
inc
movsb
ret
pop
fwait
jle
daa
push
jmp
xchg
xor
ret
jl
adc
sub
add
and
out
rorl
and
sub
add
je
pop
adc
cmp
inc
shll
ss
or
add
lock
jge
push
mov
sbb
mov
lcall
sub
rcrb
jle
insb
jnp
fwait
lods
incb
inc
sbb
mov
nop
mov
ret
es
std
sbb
xor
push
mov
rorb
adc
mov
xor
inc
lds
jmp
insl
dec
insl
leave
incb
push
jns
insl
jp
pop
lock
jo
fiadds
rcll
fiaddl
loopne
jbe
mov
roll
shr
or
mov
sbb
ljmp
sarb
push
inc
sbb
or
cmp
int3
or
sbb
sti
shlb
mov
mov
mov
jmp
add
mov
add
ret
mov
push
or
pushf
or
or
sbb
cli
add
add
cmp
adc
xchg
ds
jnp
inc
fldcw
rol
push
test
mov
sub
cmp
dec
xlat
mov
xor
adc
cld
test
pop
xchg
mov
fists
and
in
push
ror
adc
in
add
test
rolb
lret
or
ret
dec
push
or
inc
test
clc
xor
call
xchg
iretw
fmul
cmpsl
fdiv
xchg
and
xor
mov
or
test
push
add
pop
sar
mov
xor
je
push
pop
xchg
and
mov
es
adc
and
dec
in
jbe
mov
pop
sub
imul
mov
mov
adc
jbe
movsb
adc
push
rcr
pop
push
dec
call
insl
imul
scas
aaa
test
loopne
xor
jge
decl
out
iret
add
cld
loopne
cmp
je
lods
inc
popa
cmc
push
test
jmp
push
push
xor
dec
es
pop
dec
dec
lods
shl
repnz
jmp
dec
fwait
sbb
into
arpl
push
je
pusha
mov
add
out
or
aas
icebp
fisttps
push
push
push
clc
push
xchg
or
push
inc
loopne
je
mov
mov
mov
or
push
and
cld
ret
clc
cld
mov
adcl
pusha
cld
aaa
mov
sub
fadds
push
test
and
gs
cmc
imul
push
xchg
into
cmp
mov
clc
sbb
mov
ja
or
or
pop
xchg
inc
mov
dec
mov
and
cmp
sbb
mov
shlb
scas
in
jb
pop
call
test
cmp
pop
add
cpuid
push
andb
xor
sub
push
inc
test
jne
add
pop
pusha
dec
enter
cmp
mov
aaa
xor
fidivs
or
pop
mov
pop
loop
xor
and
cmc
loopne
pop
lds
repnz
ret
xor
and
cld
pop
add
cmp
inc
cmp
sub
push
fidivl
push
pop
lcall
cmp
xchg
dec
popa
imul
sbb
or
fadds
and
test
jmp
pusha
sub
lock
icebp
or
xor
mov
adc
loop
stos
test
or
or
in
cmp
and
popa
loopne
cmp
subl
cmp
push
pop
mov
je
push
push
sub
jno
cltd
idiv
decl
jmp
push
and
pusha
les
call
clc
loopne
sbb
or
mov
pop
out
pusha
add
add
bound
stc
cli
sbb
inc
push
jp
fistl
mov
mov
pop
scas
fbld
imul
push
adc
add
add
and
mov
pop
or
popa
mov
hlt
jg
test
cmp
lock
pop
jle
mov
mov
add
cmp
loop
data16
mov
ret
aas
adc
and
inc
inc
mov
xor
xor
das
inc
mov
outsb
xor
das
and
inc
inc
push
pop
pusha
jle
or
add
jg
adc
add
cmp
xor
dec
cmpsb
push
mov
sub
lret
repz
roll
dec
push
xchg
mov
mov
aam
add
call
add
int
add
jl
pop
icebp
dec
shl
pusha
stos
jecxz
addl
incl
pop
adc
mov
shr
arpl
adc
inc
rolb
shll
andl
xchg
xor
pop
or
push
push
dec
push
cli
cmpsb
rcrl
jb
aam
fadd
mov
ret
inc
mov
mov
and
lods
add
cmp
add
pop
in
rorl
arpl
mov
mov
add
shrl
cmp
mov
call
sub
or
sbb
cwtl
lcall
ret
aaa
add
mov
sub
lock
push
call
andl
mov
sbb
ja
jne
push
subb
decb
xor
xor
or
or
lods
xchg
mov
cbtw
push
ret
or
xchg
je
scas
adc
out
adc
mov
scas
xchg
bound
add
fmull
inc
xchg
arpl
lret
enter
cwtl
es
clc
jle
mov
arpl
xor
push
cs
and
into
mov
mov
add
cmp
inc
mov
add
sbb
mov
xchg
add
fsubs
shll
enter
fisttps
stos
mov
mov
sub
cltd
and
xchg
orb
inc
push
push
xor
mov
sbb
push
jl
loop
nop
ret
in
xor
ljmp
jmp
cmp
mov
gs
sbb
lret
jne
push
push
and
mov
xor
sub
adc
push
pop
inc
push
rol
add
fbld
adcb
sbb
cs
add
inc
pop
fsubs
push
sbb
loopne
pop
jmp
stos
add
xchg
fs
inc
jo
xor
mov
stos
dec
loope
pop
test
lret
dec
sub
cmp
mov
sarb
lock
pop
jo
mov
add
sub
dec
sbb
push
inc
fldt
pusha
xor
mov
sub
ret
push
or
fwait
push
cmp
xor
inc
ret
xchg
add
in
xchg
jo
lea
call
es
adc
dec
adc
jp
jae
lods
jo
add
add
jl
mov
decb
loopne
or
add
addb
add
add
je
push
aad
mov
and
dec
and
insl
insl
divb
jno
xchg
stos
add
add
jns
iret
lret
scas
sar
pop
jne
and
in
faddl
outsl
call
sbb
fdivrs
scas
nop
pusha
adc
mov
add
je
mov
aad
ret
sbb
in
mov
sahf
push
or
jo
imul
and
pushf
scas
outsl
fisubs
popa
and
cld
push
push
mov
stos
ficoml
out
es
push
push
pop
mov
push
cmp
es
scas
clc
adc
call
call
xor
test
je
call
outsb
jl
ret
test
mov
cld
ja
lcall
xchg
mov
xchg
call
fildll
lock
add
xor
clc
push
add
cmc
adc
test
push
mov
cmp
mov
fwait
sub
cmp
mov
mov
cli
mov
and
decb
and
sar
xor
lock
imul
and
cld
sub
lock
jne
inc
add
mov
je
add
mov
lea
inc
ret
es
cmpsl
lock
jnp
xor
mov
inc
jae
ljmp
mov
std
inc
cmpsb
mov
adc
mov
pop
sbb
scas
mov
push
add
pop
addl
loopne
imul
sub
pop
push
inc
push
mov
sub
mov
push
or
or
dec
sub
fstpt
push
push
xchg
test
sub
inc
mov
xor
add
add
fwait
inc
inc
les
jo
pusha
sub
decl
ss
movsb
push
jae
dec
dec
scas
call
xor
add
aam
cmp
add
and
lret
nop
loope
loope
jne
clc
sbb
sbb
call
loop
adc
fildl
adc
add
cli
lock
mov
adc
popf
cld
mov
push
loop
mov
fwait
mov
lock
lcall
push
inc
mov
sbb
shlb
jno
pop
sub
add
mov
shlb
inc
scas
fcomps
push
lock
lock
xor
add
push
sbb
je
sub
sbb
ljmp
adcl
xor
icebp
pop
or
add
cltd
ret
mov
cmp
pushl
adc
mov
add
mov
sbb
jg
adcb
jmp
push
and
jecxz
sahf
xor
aam
push
scas
push
cmpsl
icebp
stos
mov
inc
pop
ret
mov
push
push
in
das
cmpsb
icebp
sub
enter
or
mov
cmp
loop
jae
inc
sub
mov
cmpsb
cltd
idiv
xchg
rclb
pusha
and
add
sbb
sarl
clc
sub
push
jecxz
push
jecxz
dec
mov
cmp
jb
jl
and
dec
mov
or
scas
and
and
scas
pop
adc
mov
sbb
mov
jle
add
jmp
pop
bound
mov
dec
pop
scas
pop
jecxz
or
pusha
fs
mov
push
add
js
pusha
mov
cmp
and
push
stos
hlt
mov
push
call
mov
cmp
adc
mov
loopne
sub
fs
mov
stos
jg
je
jmp
lret
lock
push
lock
add
popa
orl
lock
pushl
pop
enter
repnz
lock
jmp
pop
fdivl
dec
pop
decl
inc
mov
repnz
bound
rorl
daa
push
push
cwtl
test
lock
xchg
sbb
test
out
insb
lock
push
and
jo
clc
jg
stos
and
adc
nop
mov
sbb
out
outsb
mov
pusha
enter
jg
test
or
out
ret
push
mov
jg
cmp
adc
bound
xchg
and
rcr
sarb
jne,pn
xor
mov
push
fidivs
sub
mov
inc
sbb
or
fs
xor
xor
stos
mov
sbb
xor
mov
xor
xor
jge
cld
ljmp
sbb
sbb
jbe
jge
xchg
xorl
and
xor
aam
call
ljmp
xchg
or
popa
mov
jb
pop
push
and
mov
sbb
jae
and
bnd
insb
pop
dec
repnz
jne
mov
aam
sbb
pop
lea
addr16
add
push
call
dec
add
sahf
gs
push
xor
pop
mov
xchg
clc
mov
xchg
push
xor
xor
cmpsb
push
jb
aaa
sbb
and
mov
fistl
jle
adc
rorl
pop
push
or
out
cmp
adc
add
add
mov
mov
es
js
js
xor
mov
jns
sbb
popa
xor
sub
shll
ficoml
cmp
dec
cmpsl
testb
cmp
sbb
or
js
lcall
and
push
push
fcomps
movsb
lock
fcomp
dec
inc
addl
pop
adc
data16
std
addb
stos
dec
pop
std
inc
mov
ljmp
push
add
and
push
je
adc
jl
fists
jmp
je
inc
jo
std
test
inc
inc
jne
push
cld
or
addb
clc
pop
sbb
inc
add
orb
jge
mov
xchg
xor
inc
dec
cs
and
sar
mov
les
orl
clc
add
popa
adcb
cmp
pop
bswap
inc
jmp
push
jns
push
repz
push
ret
cwtl
cltd
mov
pop
incl
lods
jp
imul
cmpsl
les
sbbl
aas
add
adc
call
add
lcall
add
das
jmp
loop
faddl
xchg
addb
sub
xchg
nop
pop
cmp
sbbb
lds
mov
dec
xchg
add
cmp
movsb
sbb
dec
fsubs
ss
jg
mov
adcl
out
push
divl
adc
arpl
mov
cmc
shrl
lret
ret
shufps
pop
pop
xor
pop
add
cs
push
pushf
sbb
hlt
mov
add
in
decl
push
xor
rorb
jg
add
sub
shlb
add
add
mov
cmp
fistps
xor
mov
cmp
add
js
jo
xor
das
pop
divl
outsb
mov
and
pop
push
ret
rcll
test
insl
adc
push
inc
fcomi
xor
xor
lret
call
call
clc
rcrb
and
push
fs
mov
add
pop
dec
push
inc
inc
negl
js
or
int
pushf
push
dec
int3
ljmp
hlt
cs
test
sbb
or
push
test
add
movsl
popa
mov
fmuls
test
pushf
mov
addl
push
push
fsubl
jecxz
fmul
push
push
stc
cmc
decl
cmp
or
dec
adc
aaa
sbb
cmp
rcrb
cmpb
xchg
pop
push
sarb
inc
or
add
inc
jl
or
jne
mov
and
mov
xchg
adc
push
and
adc
add
adc
cmpsb
and
ret
stos
mov
push
and
ja
add
dec
pop
adc
pop
mov
pop
test
ret
mov
cli
adc
nop
and
mov
mov
cwtl
add
mov
hlt
lods
ret
ja
orb
pusha
dec
test
popl
push
mov
leave
call
stos
xor
push
push
ss
add
adc
sub
and
mov
out
mov
dec
add
pusha
cli
dec
sarb
in
jmp
inc
stc
cmpsl
movsl
decl
punpcklbw
loopne
clc
movups
loopne
loopne
call
mov
pop
sub
outsl
out
fwait
jb
test
xchg
dec
ljmp
and
in
mov
add
test
sub
dec
stos
loopne
pop
lahf
jecxz
dec
sub
push
add
and
add
outsb
sbb
cli
arpl
mov
shlb
and
or
add
jl
push
das
es
int3
or
pusha
adc
test
inc
outsb
sbb
int3
and
cwtl
mov
mov
add
cltd
push
nop
sub
push
adc
push
adcb
or
pusha
adc
pusha
push
in
loope
adc
push
pusha
in
jg
add
inc
mov
add
mov
mov
xchg
shl
sbb
jp
fdivrs
test
cs
and
fisttpl
cmp
repz
add
add
adc
test
out
cmp
ret
sub
push
or
jne
inc
enter
negb
xchg
push
aad
lcall
pusha
cmp
lods
sahf
pusha
pop
loopne
sbb
adc
xor
in
inc
shlb
pop
movsb
fbld
sbb
jmp
sti
mov
or
das
push
mov
cmp
jg
loopne
jmp
and
fcoml
cmp
push
jne
lods
int
xchg
ss
ret
in
push
push
inc
push
adc
mov
cmp
sbb
repz
mov
sbb
xor
bound
inc
gs
pusha
addl
scas
shrl
inc
mov
push
and
rcr
add
sbb
adc
xor
loopne
addr16
mov
lods
push
jnp
ljmp
popf
loop
je
jmp
in
inc
je
bound
inc
sub
add
push
decb
ds
rclb
sar
decl
test
pusha
cmp
loopne
add
dec
loope
loopne
and
cmp
push
push
test
and
ret
loop
push
loopne
push
adc
clc
push
inc
mov
dec
insb
test
jno
fadds
sub
pusha
inc
jae
sbb
push
xchg
ljmp
lret
in
push
push
lds
cmp
es
loopne
insb
mov
sbb
push
bound
or
or
in
and
pop
push
call
mov
mov
mov
add
in
insb
or
push
aas
sub
xchg
jo
push
lcall
inc
shlb
fbld
pop
add
push
call
in
nop
sbb
jle
pop
inc
ss
aad
add
jnp
sbb
das
and
xchg
push
pop
inc
stos
loopne
mov
arpl
pop
pop
dec
cld
inc
add
loopne
inc
ret
cmp
lods
push
inc
loopne
in
out
inc
test
call
out
xor
push
es
es
cmp
subb
push
jne
adcb
push
push
xchg
lock
jo
outsb
clc
xor
sbb
cmpsl
mov
or
enter
mov
push
subl
jno,pt
jp
push
inc
stos
or
les
jle
incb
xchg
mov
call
jmp
jno
push
jo
xor
dec
enter
lods
xchg
xor
dec
add
xor
or
or
mov
fnclex
incb
jo
xor
js
movsl
inc
xchg
or
lock
mov
lods
adc
in
push
lcall
rcrb
push
lock
add
fs
sub
sub
dec
adc
add
ljmp
andb
add
push
add
push
and
shll
cmp
dec
sub
dec
data16
add
sub
mov
xor
lock
clc
add
mov
sub
inc
rorb
imul
insb
inc
dec
loop
push
or
add
pusha
and
cmp
adc
push
in
add
addl
test
data16
push
sbb
jo
jl
incl
adc
sub
cmp
inc
in
sbb
xor
call
push
call
mov
push
mov
jle
popa
add
or
inc
jg
or
pushf
js
hlt
xchg
adc
add
jg
sub
mov
out
inc
and
push
je
xchg
mov
icebp
jle
subb
inc
push
sbb
inc
movsb
cs
xor
mov
push
mov
mov
hlt
push
adc
test
outsb
clc
pop
or
add
cld
mov
adc
add
push
inc
pop
jle
dec
call
add
sbb
push
mov
push
or
mov
jmp
pop
rorb
inc
cld
movb
lea
das
xchg
or
dec
adc
inc
scas
test
xlat
mov
pop
mov
mov
fdivrs
fsubp
xor
rolb
inc
aad
or
test
mov
mov
add
or
test
and
adc
test
and
lcall
jnp
lock
xor
mov
sub
mov
push
add
incl
test
call
add
int3
xorb
ret
add
jb
adc
mov
lea
in
rolb
sahf
fstl
movsl
imul
jbe
outsl
sbb
icebp
jo
cld
lea
inc
cmp
mov
inc
or
or
fcmovnu
inc
jbe
inc
subb
dec
cmp
add
pop
jmp
mov
dec
xor
les
ja
daa
xor
test
push
data16
mov
push
lret
sbb
lcall
mov
stos
inc
jbe
jo
add
outsl
mov
loopne
out
call
mov
dec
dec
xor
adc
mov
cmpsl
movsb
int3
and
inc
sbbl
jg
xchg
adc
add
mov
jb
inc
fcoml
call
jo
sbb
stos
jnp
mov
pop
dec
jge
jo
xor
cmp
rorb
dec
lock
mov
test
mov
xorb
daa
ja
ds
lea
aam
mov
jns
mov
mov
inc
clc
mov
jp
and
sbb
popf
xchg
test
ss
lock
jl
sarb
adc
aas
jne
inc
jge
hlt
push
insl
sbb
push
inc
jmp
jle
or
sub
jbe
lock
aaa
lods
push
adc
mov
pop
sahf
xor
dec
pop
pop
mov
cwtl
and
or
fcoms
push
sub
mov
jge
cmpsb
xchg
dec
gs
or
cmp
lret
jo
push
xchg
sub
sbb
push
bound
push
incb
sub
in
push
adc
push
or
decl
pop
jb
test
call
add
dec
ret
call
pop
and
push
and
sbb
mov
int3
xchg
hlt
testb
adc
cmp
jge
sub
add
cli
je
push
xor
incb
clc
in
je
std
or
notl
call
jb
fwait
dec
mov
add
jmp
and
inc
cmpb
xor
mov
push
scas
xor
inc
push
ret
mov
inc
xor
dec
pop
mov
xor
adc
add
je
push
mov
inc
sti
mov
jl
add
loop
lock
outsl
int3
add
jne
inc
mov
pusha
mov
movsb
fbstp
mov
icebp
add
adc
add
jo
pop
fldt
sub
cmpsl
cmp
jne
mov
jae
test
jle
mov
jle
dec
push
call
ss
fdivrs
and
jo
mov
fdivl
inc
incb
jae
vmwrite
or
outsl
xor
bound
mov
mov
fcomip
mov
add
inc
divl
outsb
push
into
push
lret
mov
sub
incb
popf
sbb
popl
cmpsb
cmp
xchg
fsubrs
jl
pop
jp
inc
jo
add
adc
mov
js
incl
adcl
add
push
out
cld
int
add
lea
dec
inc
jl
jp
pop
insl
fildll
mov
jb
mov
inc
iret
pop
out
jb
cmp
push
add
hlt
sub
jge
jmp
adc
daa
add
roll
pusha
ljmp
sub
mov
mov
push
adcl
je
add
dec
inc
add
call
mov
jae
pop
and
fisubrs
jp
mov
xchg
sbb
inc
fcomps
icebp
cmp
push
dec
rol
push
daa
lds
dec
fdiv
icebp
push
xor
or
cmpsl
sub
incb
incl
lock
and
scas
clc
add
aam
mov
or
jg
jnp
jge
inc
sub
pop
imul
repnz
orb
hlt
jmp
and
lcall
hlt
mov
loope
mov
mov
out
je
sbb
cli
add
sbb
sbb
inc
cmp
mov
inc
fistl
mov
pop
stos
and
xor
divb
push
sub
ljmp
jbe
jb
cmp
jb
out
pop
lock
sub
sbb
icebp
xor
sbb
mov
iret
dec
mov
sbb
sbb
mov
adc
ss
jmp
inc
fcomip
aas
and
notb
push
and
xchg
adc
inc
ret
inc
rcrb
sbb
inc
sbb
adc
es
cmp
dec
xchg
push
adc
mov
jb
jmp
mov
inc
negl
mov
cmp
sbbl
cs
mov
pop
push
lret
push
jle
sbb
jg
mov
inc
stos
je
call
add
popa
adc
cli
add
call
sub
push
adc
mov
push
jbe
test
mov
add
lcall
jbe
mov
cmp
jmp
cmp
out
mov
test
mov
insl
and
sub
xchg
pushf
data16
inc
push
clc
inc
add
stc
loopne
push
lret
mov
call
push
mov
xlat
xchg
xor
jecxz
ljmp
pop
enter
aaa
fcmovnu
mov
pop
lret
xor
mov
stos
pop
add
loope
cmp
xchg
xchg
pusha
out
inc
dec
ss
or
cmpsb
in
call
xor
dec
pop
shr
and
or
and
clc
or
adc
mov
in
call
jb
in
push
pushf
sti
dec
jne
pusha
daa
mov
sub
add
in
mov
cmp
sbb
jbe
cmp
jb
mov
mov
incl
cli
scas
add
rclb
add
aam
push
lock
aaa
lea
add
ds
ja
call
mov
mov
dec
clc
push
push
lea
pusha
shlb
lock
push
insb
pop
mov
mov
fwait
lret
push
mov
shl
and
push
cs
daa
and
add
mov
jecxz
dec
loope
cmp
iret
fimuls
cmpsb
cmp
push
ret
cmpsb
les
dec
cwtl
add
aas
push
popl
in
and
mov
jl
dec
push
xchg
addb
repnz
mov
fmuls
popa
adc
mov
mov
fldt
mov
xor
dec
test
shrl
dec
rolb
push
jecxz
pop
subl
mov
repnz
jl
adc
push
jl
mov
icebp
inc
mov
jae
stos
loope
cmp
call
and
out
popa
sub
mov
lods
xor
mov
mov
bound
inc
pop
dec
call
add
push
fs
rolb
xchg
add
dec
stos
enter
dec
xor
inc
dec
loop
jo
mov
fs
fwait
inc
cmp
add
imull
xchg
cmp
mov
scas
ljmp
ret
push
daa
pop
inc
mov
push
int
push
fadd
push
es
adc
mov
adc
cmp
mov
add
clc
jmp
and
adc
fdivp
jmp
or
cmp
je
mov
data16
mov
arpl
and
jb
callw
adc
dec
jge
jb
add
lods
push
stc
add
adc
or
sub
int3
punpckhdq
add
jne
aad
outsl
xchg
mov
lea
hlt
push
mov
push
ljmp
js
mov
imul
cld
push
cmpb
push
or
insl
push
pop
push
mov
mov
test
divb
loopne
rcl
mov
out
jne
sbb
add
adc
mov
lahf
fcomps
push
mov
jg
out
outsl
je
jl
add
andb
mov
xor
sti
adc
ss
ret
adc
mov
pop
bound
sbb
call
je
scas
mov
test
lods
adc
movsb
mov
ds
and
sub
mov
enter
jecxz
mov
nop
fsts
cmp
cmp
int3
hlt
jb
shr
push
mov
std
add
or
nop
pop
nop
lds
call
add
addl
movsl
and
pop
scas
jo
hlt
cmc
scas
nop
push
mov
dec
push
je
je
lea
rcrb
loopnew
clc
cmp
jle
hlt
imul
mov
sub
pop
es
and
or
movsl
or
js
lock
adc
add
cmp
addb
and
not
mov
mov
roll
lods
out
subl
mov
test
call
jno
test
push
jbe
adc
call
jmp
push
xchg
adc
aaa
jmp
mov
mov
idivb
fxch
xchg
xchg
packssdw
xor
js
add
mov
cmp
lock
test
lock
or
add
adc
cmp
lock
roll
cwtl
out
xchg
pop
mov
mov
add
mov
inc
arpl
push
mov
into
data16
add
ret
mov
pop
jg
pop
lret
mov
push
loopne
loope
cwtl
lds
jbe
jle
cli
xor
xchg
dec
push
sub
pop
rcll
sub
push
push
outsl
push
out
enter
push
push
mov
add
push
mov
cli
ljmp
out
pop
cmp
dec
jbe
ret
and
aaa
xor
out
aam
or
push
sub
jl
popf
rep
or
push
mov
lock
fisttpl
mov
mov
call
je
decl
jb
mov
jne
sbb
and
adc
pusha
inc
push
scas
sub
movsb
lock
mul
xor
shr
jle
mov
repz
pushf
not
ficomps
fstpl
jl
xchg
cmp
and
outsl
add
pop
enter
call
adc
pop
mov
mov
push
fiadds
push
push
add
dec
xor
jb
jmp
cmp
sti
cwtl
repz
cmp
sahf
inc
out
stos
jbe
jno
pop
sarb
testb
sub
mov
rclb
iret
inc
cld
pop
aad
ljmp
subl
ds
mov
add
mov
mov
jbe
ljmp
xor
add
push
sbb
jl
xchg
inc
nop
adc
into
addr16
sbb
inc
adc
cmpsl
dec
jecxz
xlat
roll
and
out
sti
pop
sti
sub
cmp
call
mov
outsl
pop
data16
push
add
cmpsl
leave
mov
jne
pop
add
je
lods
or
or
cmp
add
call
adc
mov
das
les
sub
and
iret
ja
and
test
pop
xchg
ficompl
cmp
or
or
arpl
jmp
sahf
push
nop
cmp
addl
sbb
dec
jne
jno
and
call
adc
push
cmp
in
inc
movsl
call
push
push
mov
test
out
push
shll
add
mov
inc
pop
imul
shlb
pop
sub
cld
mov
push
push
mov
in
cmp
mov
aas
mov
ds
fs
jae
aam
in
jne,pn
pop
pusha
data16
repnz
sar
mov
or
mov
lds
loope
sub
and
rorb
sbb
pop
movsb
ret
or
test
sbb
gs
sub
cmp
lea
fimull
mov
xchg
pop
push
pop
add
push
push
mov
mov
pop
inc
xchg
addl
push
mov
push
xchg
sbb
out
sub
cmp
push
and
add
cmpsl
inc
xchg
js
or
push
pop
mov
xchg
push
and
push
movb
dec
pop
and
jne
inc
mulb
test
stc
add
xchg
or
or
adc
in
add
add
xor
mov
mov
xchg
movsb
add
rcrb
call
xor
in
jne
call
push
mov
or
mov
jne
leave
and
cmp
decl
scas
aaa
add
ljmp
data16
popa
mov
sub
dec
fildl
repnz
lret
scas
lret
ss
int
mov
sarb
lock
jg
pop
je
adc
push
xchg
adc
or
es
es
fiaddl
and
mov
icebp
push
pop
xchg
inc
inc
add
and
xor
sbb
sbb
fists
sbb
add
adc
jg
bnd
jmp
adc
daa
jb
jmp
cmp
in
sub
ss
int
cld
push
jne
mov
add
insb
ss
out
sub
cmp
in
inc
mov
int3
or
cld
dec
or
xchg
jl
addb
xchg
scas
or
mov
scas
xor
fadds
push
call
xlat
out
xchg
xchg
push
adc
jno
daa
dec
or
rolb
fmuls
xor
into
mov
pop
and
cs
stos
outsb
dec
lds
fidivrs
cmp
inc
fbstp
add
add
inc
adc
pop
pop
push
test
cmp
clc
cmp
shlb
jne
and
pop
adc
cli
or
mov
adcb
repnz
lock
dec
call
fstpt
push
lock
push
cmpb
leave
movsb
stos
outsb
addl
pop
andl
or
lcall
loop
lods
push
in
call
mov
insb
sbb
sub
sub
scas
flds
jne
cs
orl
bound
cmp
push
sub
jge
sti
sbb
jb
outsb
cld
lea
je
adc
mov
shlb
fadds
adc
jne
mov
inc
mov
add
cmc
enter
leave
test
outsl
sbb
lea
cmc
lret
ja
aaa
mov
jecxz
and
mov
sahf
xor
clc
add
push
aam
fsubl
push
mov
push
push
call
mov
je
lcall
add
mov
mov
out
ss
fdivr
dec
outsb
hlt
and
jl
es
cmc
mov
push
lock
add
add
mov
inc
xchg
fmuls
push
xchg
cmp
mov
dec
jecxz
sub
sub
cli
mov
enter
cmp
sub
mov
cs
test
push
sub
pusha
xchg
fcmove
push
es
adc
scas
xchg
ret
xor
lea
fnsave
or
and
jp
fisubl
cld
leave
int3
shll
push
lea
cs
mov
pop
push
push
adc
adc
inc
inc
or
push
rorb
add
pop
push
mov
icebp
inc
movb
jne
jbe
fdivs
stos
hlt
mov
stos
push
call
les
adcl
mov
rorb
scas
push
dec
sub
fsubr
sub
push
inc
fldt
cmp
sarl
pop
push
pop
inc
aaa
decl
mov
ret
enter
out
push
adc
lea
or
mov
insl
and
add
or
jg
add
mov
shll
test
lods
gs
addb
pop
push
fstpt
lds
or
mov
mov
cmp
int3
ja
inc
adc
or
xchg
ja
adc
xchg
out
push
arpl
sbb
sub
or
call
or
push
ss
shll
inc
ds
inc
sbb
mov
lea
adcb
dec
sbb
pop
into
aam
push
jg
aam
xor
cld
repz
mov
jmp
shr
jbe
push
jnp
pop
jge
cmpsl
jns
int3
mov
xchg
mov
jno
pop
jl
rcll
mov
xchg
enter
jle
cmp
push
dec
pop
or
loopne
or
cld
fimuls
loop
mov
lsl
mov
cmp
add
stos
mov
test
insl
xchg
push
in
js
test
in
mov
jecxz
jne
je
xorb
mov
adc
pop
and
xchg
les
xor
cmpsb
cmpsl
inc
mov
add
or
add
pushf
adc
xor
push
fs
cli
mov
mov
mov
sub
push
insl
mov
mov
hlt
sub
fisttpll
movsl
dec
mov
sbb
and
dec
xor
pop
movsl
sub
fcomps
mov
enter
jo
inc
jle
add
ljmp
inc
fsubrl
mov
aas
mov
es
repz
pop
mov
mov
std
mov
aas
fwait
push
fldt
jne
ss
jb
xor
mov
movsb
pushf
cwtl
pop
adc
push
inc
scas
jge
scas
in
xor
mov
mov
call
pop
xchg
je
and
cltd
inc
add
xchg
xor
mov
stos
mov
mov
inc
and
jl
mov
mov
add
into
sub
sarb
pusha
pop
test
cld
cld
stos
lret
sub
add
xchg
mov
mov
mov
jecxz
cmc
inc
push
mov
icebp
inc
or
test
cli
adc
fsubs
jbe
add
add
dec
popa
xor
xchg
push
lea
or
test
es
stos
inc
shrb
ljmp
add
cs
push
mov
jb
fsubs
fcompl
xor
dec
enter
daa
xor
mov
lock
push
push
lock
jp
jo
ljmp
push
pop
dec
mov
sub
popf
es
test
push
loopne
jl
fldcw
lret
mov
aad
mov
jle
xchg
mov
and
push
push
gs
fmull
add
inc
xchg
mov
sbb
xorb
sbbb
adc
mov
and
test
adc
fcmovb
jg
mov
mov
js
jbe
int3
outsl
xchg
test
inc
pop
push
scas
push
mov
push
mov
xchg
je
shrl
or
inc
push
add
pop
rolb
int
lret
xor
mov
loop
inc
je
mov
or
mov
fmull
lock
mov
mov
add
rorb
xorb
lods
call
push
or
movsb
mov
sub
popf
inc
mov
xchg
addb
adc
mov
bound
xlat
pop
pop
adc
call
fistl
enter
hlt
cmp
pminsw
xlat
pop
dec
xlat
mov
adc
and
in
dec
lcall
pop
std
xchg
sbbb
loope
jbe
repz
xchg
or
or
or
or
nop
jg
inc
sub
jge
push
inc
jge
cmp
mov
mov
mov
mov
jge
cmp
mov
cld
mov
cld
addb
xchg
repnz
push
decl
stos
jle
es
mov
inc
add
inc
add
and
pop
lcall
push
in
or
push
popa
and
lock
call
jg
stos
fwait
push
rcrl
int
imul
sbb
jne
scas
push
mov
mov
and
mov
sti
jae
add
adc
jp
dec
call
pop
adc
jmp
outsb
adc
push
sbb
add
les
or
push
cltd
or
es
in
prefetch
mov
pushf
cmpsb
loop
pusha
push
mov
mov
and
fdivl
adc
or
fldlg2
jp
adc
scas
adc
je
test
fdivs
xchg
mov
nop
cli
int3
testb
xor
or
add
sub
pop
jbe
aaa
and
adc
push
mov
mov
in
cmp
mov
dec
cs
xor
pop
add
fcmovbe
cmpsb
decl
and
daa
ljmp
mov
push
bound
pop
pop
call
repnz
roll
xchg
ljmp
test
ds
fcmovnbe
or
jle
mov
xor
dec
or
mov
je
push
mov
out
loopne
divb
or
jne
jo
jns
mov
ret
enter
mov
clc
mov
jmp
push
mov
enter
les
adc
push
scas
call
out
push
push
add
xlat
fisttps
aam
ds
push
mov
mov
add
pop
jecxz
pop
push
aaa
cli
inc
mov
ja
ja
clc
pusha
loope
rcrl
inc
loope
adc
adc
mov
push
std
je
cld
jle
or
decl
rcll
clc
and
gs
mov
sbb
pop
mov
and
loopne
xchg
je
call
dec
xchg
into
pop
dec
pop
and
addl
js
add
enter
jg
repz
cmp
mov
xor
cmp
inc
add
or
iret
fidivrs
jb,pt
je
in
pop
mov
pop
mov
mov
jg
add
add
ffreep
bnd
mov
mov
inc
xor
jmp
cmp
fldcw
adc
mov
ja
lret
shlb
sti
jne
jae
mov
mov
mov
or
nop
ficoms
out
jbe
mov
les
ja
sub
push
add
pop
filds
je
cmp
es
outsb
mov
pop
data16
repz
adc
pop
pusha
inc
dec
cld
shrb
fmulp
cltd
mov
or
rcrb
cmp
jecxz
add
mov
push
enter
fwait
sahf
inc
rclb
mov
sbb
jbe
push
stos
enter
fildl
addb
lock
je
push
lock
mov
sub
loope
insl
inc
cld
movsb
aam
negl
sub
mov
movsl
xchg
rorb
xor
jne
subl
lds
add
shl
pop
push
xor
and
fcomps
mov
jbe
mov
mov
pop
add
push
movb
idiv
out
jg
add
push
xor
mov
jne
fcmovb
outsb
mov
adc
ret
add
rorb
push
xor
sub
jmp
shlb
adc
mov
lds
ficomps
out
add
cmp
jbe
jmp
xchg
addb
fistpll
int
ds
cmp
lock
icebp
mov
jne
hlt
es
or
cmp
jne
mov
jb
es
cmp
cmp
into
jmp
sbb
jg
js
sub
or
push
pop
add
add
cmp
jae
ja
aam
mov
enter
mov
in
inc
jl
imul
xchg
fcmovb
popf
das
inc
xchg
shl
add
mov
or
inc
cld
mov
or
lock
jl
inc
add
mov
in
decb
test
lea
lock
loopne
insl
insb
fcompl
ret
mov
xchg
in
ds
iret
leave
jnp
jbe
add
lock
push
hlt
insl
xor
dec
cli
lea
test
pop
dec
inc
std
out
xchg
lods
into
mov
je
dec
mov
or
clc
fisttpl
mov
push
mov
pop
xchg
cli
inc
add
push
mov
mov
call
or
pop
jl
stos
aam
shlb
call
imul
cld
dec
mov
inc
int3
jb
xor
adc
push
cmpsb
xor
pop
int3
jmp
add
lock
pop
insb
and
pop
jmp
or
mov
pusha
insl
cmp
ret
cmp
mov
push
rclb
clc
sbbb
fadd
cmp
popa
add
or
fdivrs
rorb
clc
lret
shlb
hlt
lahf
adc
negb
shr
add
or
and
pop
dec
hlt
mov
mov
shlb
jno
add
dec
lahf
dec
es
mov
jo
insb
leave
lock
or
adc
adcl
dec
or
test
push
push
cmp
cmp
jecxz
popa
push
push
push
call
pop
inc
push
std
and
ds
sub
mov
cmp
inc
xor
das
mov
shrb
imull
lea
mov
push
inc
faddp
inc
and
jg
or
sbb
clc
outsl
aad
movsb
push
inc
push
jl
adc
movl
mov
loopne
and
mov
pushf
sbb
out
fstps
sbb
xor
sbb
aad
fcmovne
rorl
ljmp
pop
jle
sahf
lret
call
call
adc
sbb
scas
call
lods
pop
or
dec
cmp
add
add
or
jmp
or
xchg
out
xchg
or
mov
aas
nop
fidivrl
inc
or
imul
stos
outsb
mov
cmp
insb
cmp
mov
es
jl
push
sbb
test
dec
es
and
inc
inc
inc
push
sub
mov
and
jmp
xor
aaa
out
mov
shl
hlt
lret
test
aam
add
push
aam
sub
sbb
sbb
adc
fildl
pusha
mov
jl
and
pop
push
loope
xor
ret
mov
loope
lret
incl
sbbb
in
mov
sti
fcoms
xlat
loopne
out
pop
scas
lea
mov
scas
mov
inc
mov
mov
clc
mov
inc
and
lea
data16
mov
mov
in
call
adc
dec
call
loopne
mov
add
add
mov
scas
xchg
je
jge
outsb
lock
jle
inc
push
in
ret
mov
enter
mov
or
je
mov
dec
dec
loopne
iret
loopne
push
or
mul
or
loopne
jecxz
adc
fsubr
jne
and
inc
pop
push
lods
sub
push
push
dec
lock
adc
fisubl
mov
ficomps
or
loopne
mov
inc
testl
mov
or
or
das
pop
inc
xchg
insl
jbe
inc
ja
pop
cs
and
mov
dec
inc
imul
vmovdqa
es
and
mov
les
push
mov
mov
ds
arpl
inc
cmc
wrmsr
hlt
and
test
and
xorb
sahf
aam
incb
mov
mov
and
or
int3
int3
outsb
inc
mov
and
sub
pop
scas
cmc
data16
mov
roll
or
push
sbb
pushf
call
mull
test
cs
inc
adcl
ud2
loope
mov
and
sbb
and
push
aam
incb
or
rclb
push
dec
flds
xlat
push
lea
add
inc
xor
addl
das
pop
or
ss
cmp
into
into
push
in
add
xchg
clc
mov
mov
add
add
push
mov
push
sub
pcmpgtb
adc
movsb
push
mov
add
inc
in
add
xor
cmp
out
inc
or
shlb
or
add
mov
lea
lret
mov
adc
mov
jle
xchg
xor
call
sub
add
ret
add
add
mov
pop
adc
sbb
xchg
clc
mov
add
out
mov
iret
rclb
call
loop
or
add
sub
xchg
adc
jno
push
pop
or
jb
je
lds
pop
adc
xchg
xor
faddl
pop
add
call
dec
inc
push
fldl
subb
scas
shll
pop
iret
ja
insb
fadds
jle
add
mov
add
mov
cmp
push
mov
or
dec
vpunpckhdq
ja
xchg
add
mov
lea
inc
xchg
js
or
and
fwait
and
aam
add
addl
fiaddl
rol
adc
inc
push
loop
insb
xchg
gs
subb
adc
les
mov
inc
js
stos
shrb
orb
mov
adc
orb
lds
adc
les
or
dec
adc
xor
sub
xchg
repnz
xorl
data16
mov
adc
ds
inc
nop
incb
addb
jmp
pop
adc
js
adc
or
jbe
test
push
je
add
imul
mov
dec
mov
orb
pop
push
pusha
jl
adc
leave
cmp
loope
jl
in
push
or
jmp
xor
adc
ds
and
outsl
data16
jbe
add
loop
cmp
push
xchg
js
out
enter
rorl
nop
in
test
dec
adc
add
hlt
and
dec
ljmp
lock
and
cmp
aaa
je
cmp
imul
sbbl
subl
idivb
js
xor
data16
negb
clc
adc
clc
xchg
mov
push
clc
xchg
or
cli
aam
inc
lock
push
add
fs
add
movsl
je
clc
daa
xorl
adc
jge
push
push
dec
fs
rolb
xor
add
add
pop
mov
mov
mov
xor
mov
jle
rolb
hlt
shll
into
and
enter
shll
loope
ljmp
repnz
adc
mov
adc
inc
pushl
jb
sub
xchg
rcrb
pop
or
lret
out
roll
sub
cmpb
mov
pop
xchg
add
adc
mov
mov
in
leave
jl
pop
or
jne
adc
or
aas
ret
mov
lods
sbb
shlb
or
inc
cmpsl
fmull
cld
or
push
sbb
jo
test
loop
fcoml
add
pop
and
jae
ret
test
mov
cmp
call
sub
mov
in
inc
popa
std
andl
loopne
mov
loopne
or
adc
jmp
test
mov
ljmp
add
pusha
inc
mov
push
pop
push
jecxz
loop
pop
xor
lea
js
mov
sub
insl
cmp
cmp
push
loop
dec
test
lret
loop
push
fsubrl
aaa
mov
and
shl
clc
and
jo
add
xchg
sbb
fiaddl
ret
xor
mov
in
push
test
mov
add
dec
mov
dec
fistps
or
dec
dec
lea
int3
loop
mov
in
add
and
or
or
bnd
dec
xor
into
or
push
test
fs
add
adc
push
xor
sub
call
aad
mov
out
mov
sub
jg
jecxz
movsl
loope
arpl
add
jmp
jecxz
sub
sbb
sbb
adc
inc
mov
jnp
loope
shlb
mov
mov
je
mov
stc
pusha
add
jne
pop
addb
adc
or
inc
mov
mov
cli
or
jge
pushf
loopne
rolb
mov
mov
mov
inc
adc
or
cmp
mov
loope
pop
adc
je
out
jmp
inc
jg
xchg
pop
xchg
cmpb
cmc
loopne
orl
repz
dec
pusha
stos
jmp
mov
mov
mov
fiadds
loope
mov
adc
mov
push
push
dec
int3
sarb
lea
movsl
jmp
cmp
add
push
xor
mov
sbb
jl,pt
push
cmp
jg
mov
mul
jg
clc
jmp
ds
test
and
jge
pop
loopne
add
jl
push
sbb
loopne
div
jmp
push
imul
cmp
pop
add
or
adc
imul
inc
loop
loopne
andl
jmp
mov
subl
stos
loopne
cmpsb
jp
enter
add
cli
and
lret
adc
xchg
fisubs
in
pushf
jne
push
mov
mov
dec
shrb
rolb
xor
mov
insl
adcb
add
sbb
push
cld
gs
pop
test
loop
sbb
insb
add
push
add
push
mov
push
dec
call
lret
mov
shlb
xor
clc
sub
repz
pop
mov
inc
push
and
dec
and
xor
push
pop
mov
rclb
add
mov
push
std
fnsave
sbb
sub
mov
mov
mov
les
mov
jbe
add
add
xchg
adc
cmp
dec
ret
loopne
pusha
xor
call
pop
and
loope
in
and
or
and
sub
add
pop
out
pusha
mov
add
push
popa
pop
push
divb
xchg
pop
daa
sahf
mov
jbe
pushl
movsb
loop
jl
add
adc
mov
add
xor
clc
imul
out
adc
loopne
sti
loopne
sub
bound
icebp
mov
movsb
or
mov
pop
or
add
into
cmp
ljmp
jae
sbb
enter
adc
sbb
scas
push
jecxz
in
adc
mov
pusha
cld
pop
add
sub
aaa
out
arpl
sub
lds
xor
or
push
jo
pop
cmp
hlt
mov
adc
inc
lcall
and
addb
inc
push
insl
mov
ret
movsl
jg
mov
cmc
jg
lock
sarl
and
shl
push
or
inc
je
ret
fdivl
sub
push
jmp
rorb
lcall
test
cmp
push
push
fimuls
ret
pushf
and
pop
mov
mov
jo
push
lock
mov
adc
inc
aad
push
sub
and
cmpsb
ficoms
nop
sbb
sub
pop
mov
mov
data16
cs
lret
lock
clc
and
rolb
and
test
sbb
jmp
xchg
cld
xchg
mov
clc
xchg
add
push
dec
mov
outsb
add
push
fs
jg
addl
sbb
inc
adc
lea
ss
std
jle
ss
test
adc
lock
push
bound
and
add
sub
add
dec
cmpsb
lcall
xchg
ret
sbb
push
fnstcw
adc
call
or
call
cmpsb
inc
pop
decb
cmp
leave
jo
inc
jno
dec
lock
xchg
cmp
pop
lea
imul
add
orb
fdivr
pop
js
ljmp
ss
inc
adc
jo
mov
loopne
movsb
data16
adc
nop
stos
add
add
adc
mov
add
inc
mov
mov
add
inc
not
sbb
pushf
sbb
xor
add
sub
inc
push
dec
push
jecxz
add
inc
xlat
xor
decl
inc
rolb
mov
push
mov
or
pop
mov
pusha
sbb
inc
pop
push
pop
ljmp
addb
imul
aaa
orb
icebp
je
sub
xor
mov
mov
repnz
testl
pop
enter
int3
inc
mov
scas
mov
cltd
push
aaa
push
aaa
adc
ss
mov
or
stos
adc
mov
and
add
sbb
pusha
dec
mull
fwait
xor
jp
out
call
adc
cmp
push
sbb
xchg
jecxz
or
orl
pop
ret
pusha
xor
push
adc
adc
add
adc
incl
xor
inc
mov
mov
push
fisttpl
mov
or
add
jl
icebp
add
adc
popa
inc
and
push
mov
mov
sti
jecxz
cmp
pop
inc
rorl
ret
bound
inc
inc
sub
xor
pop
dec
inc
adc
sbb
fnstenv
adc
lds
add
and
pushf
addl
jle
xor
inc
push
mov
inc
sbb
movsl
lock
ljmp
addr16
xor
adc
inc
lock
test
adcb
pop
ret
add
cmpb
add
pushf
cmp
ss
mov
push
jo
lea
loopne
leave
fstpt
pop
cmp
test
xchg
xor
pop
sub
fistps
fdivl
mov
push
inc
decl
sbb
and
jo
decl
xor
jp
jo
pop
shl
pop
push
or
xor
mov
dec
dec
sar
add
mov
or
push
mov
or
add
int3
leave
mov
lret
je
push
loopne
push
mov
cld
sub
cmp
lret
and
adc
insl
pop
and
mov
pop
cmp
or
adc
mov
ljmp
daa
xor
call
xor
sbb
icebp
mov
jno
push
retw
cmp
dec
jb
jo,pt
push
and
pop
aam
inc
or
xchg
and
andl
mov
imul
dec
add
cwtl
incb
dec
jl
jbe
xor
mov
mov
jl
xlat
sub
lock
mov
inc
fldt
mov
and
fwait
test
cs
push
pop
jp
add
push
mov
outsb
or
decl
jmp
dec
push
push
mov
or
cld
add
add
push
aam
lret
push
xor
push
aaa
lods
mov
cmp
jmp
push
fadds
repnz
clc
dec
ljmp
xchg
xchg
push
test
add
sbb
xor
push
out
and
xor
cs
inc
inc
push
dec
mov
add
lahf
mov
mov
cmp
addb
lock
mov
dec
or
call
sub
jp
jge
or
jg
inc
mov
add
dec
push
xchg
add
adc
aad
push
fmuls
std
outsl
fildll
cmp
push
xchg
bound
out
mov
xchg
shlb
and
jl
pop
cmp
lock
xchg
push
or
mov
test
and
add
or
stos
push
lods
into
xor
xor
lods
lea
or
clc
lock
push
lods
sub
arpl
sbb
mov
dec
add
lea
inc
push
cli
push
bnd
cmc
lock
add
add
or
xchg
mov
icebp
adc
fcoml
notb
je
push
jbe
or
mov
mov
jmp
jl
add
pop
je
mov
test
outsl
jbe
add
push
or
mov
pop
inc
incl
push
sbb
inc
inc
inc
shll
das
movsb
adc
pop
add
iret
xchg
adc
icebp
mov
sub
mov
pop
push
call
cmp
pop
in
add
je
pushf
xor
xchg
mov
or
into
push
jns
xchg
mov
adc
or
or
dec
inc
test
jb
dec
mov
mov
mov
cltd
push
xor
loope
add
inc
and
aam
or
jno
sbb
push
aas
jge
mov
je
adc
add
call
dec
push
pop
jo
mov
or
mov
adc
push
inc
hlt
scas
sub
xor
pop
mov
xor
popa
stos
pop
adc
add
les
xchg
rolb
or
sbb
pop
push
dec
neg
insl
pop
inc
xchg
mov
bound
rep
adc
jo
xor
mov
jp
push
testl
call
insl
mov
sbb
jp
ret
xchg
test
pop
mov
xor
orb
xorl
add
daa
jl
xor
add
jle
enter
push
xor
add
ja
test
rorb
icebp
cmp
jl
inc
clts
jle
dec
add
mov
int3
mov
mov
sbb
cmp
mov
repnz
sti
call
inc
xlat
repz
cmpl
test
sub
jl
outsl
mov
add
or
xchg
dec
sbb
push
imull
dec
sbb
mov
sbb
imul
lock
dec
mov
testl
and
add
sub
jle
xor
and
pop
sbb
sbb
lret
sub
mov
xor
pop
and
adc
ds
hlt
notl
ror
and
add
test
int
push
and
dec
push
mov
mov
push
sbbb
inc
int3
and
add
add
dec
and
adcb
enter
rcl
jb
mov
add
sbb
enter
mov
push
add
addb
adc
sbb
mov
or
fstl
sbb
pop
gs
pusha
inc
fstpl
adc
jp
jle
xor
push
inc
out
sbb
xchg
pop
fisubrl
bound
hlt
or
ret
fcmovnbe
add
into
cmp
xor
mov
and
mov
movsb
testl
nop
jo
and
and
orb
pop
fsts
adcb
pusha
sbb
mov
fidivl
daa
mov
pop
test
nop
fisubs
cmp
jl
pop
rorb
add
mov
or
mov
sbb
inc
push
mov
adc
add
iret
adc
out
aam
out
fiaddl
jecxz
sbb
notb
sbb
sub
imul
aaa
sub
dec
mov
push
jle
push
dec
add
xchg
pop
mov
lret
add
jnp
xchg
pop
jo
addb
dec
lcall
add
mov
je
or
or
cmp
inc
adc
dec
adc
mov
leave
rcl
or
or
hlt
lea
mull
std
rclb
pop
lock
mov
aaa
imul
rclb
inc
xor
jnp
add
adc
mov
test
mov
xchg
sbbb
and
push
inc
jnp
std
outsl
divb
dec
mov
das
inc
sub
rorb
pop
fcmovnb
add
and
xor
rclb
add
push
imul
cmc
data16
int3
sbb
cmp
or
fdivp
ss
js
lcall
int3
mov
and
int
xorb
mov
ret
inc
xor
inc
or
sub
stc
rorb
push
scas
call
aad
mov
je
dec
aas
add
test
ret
sbb
fstps
orb
test
jmp
shrb
sar
dec
push
add
decb
sub
lods
call
gs
lea
add
call
adc
iret
mov
sub
fldenv
cmpb
andb
and
and
or
mov
adc
or
inc
stos
dec
xor
nop
inc
sbb
mov
or
sub
dec
xchg
in
or
dec
mov
sbb
daa
sbb
decl
pusha
and
pusha
js
xchg
mov
notb
xchg
jle
jne
push
loop
test
adc
js
push
mull
mov
sbb
pop
xor
or
and
pusha
orl
test
xchg
or
dec
adc
call
push
orl
daa
lea
xor
pop
loope
adc
pop
xchg
insb
push
mov
cwtl
mov
jbe
inc
sbb
clc
aaa
sbb
dec
adc
jmp
subb
popa
add
inc
push
pop
or
cmp
out
and
inc
arpl
xor
add
or
fucomip
adc
and
ss
and
testb
popa
pop
or
xor
stos
or
addl
mov
jle
dec
sbb
and
loope
je
fidivs
push
or
inc
popa
mov
mov
push
fisttps
push
sub
adc
movsb
push
push
stos
and
pusha
jg
outsl
bound
or
push
in
add
pusha
cmp
push
clc
pusha
and
mov
pop
dec
loope
jle
push
cwtl
sbb
inc
add
mov
mov
stos
cmpsl
andl
mov
mov
mov
std
ss
lods
aaa
cmp
hlt
rcll
hlt
scas
add
inc
mov
lods
jne
sti
insl
lods
inc
xchg
mov
mov
mov
lock
jne
add
movsb
in
dec
or
aaa
mov
and
pusha
mov
imul
clc
add
sbb
lahf
mul
push
or
sub
push
test
add
stc
adc
cmp
into
or
sbb
pop
fsubs
or
inc
mov
xor
add
cltd
and
jecxz
cmp
call
jmp
aaa
inc
outsl
inc
out
xchg
inc
adc
sar
pop
dec
push
inc
adc
jg
push
add
ficoml
stc
pop
test
mov
lret
cltd
movsb
sbb
mov
adc
jle
add
jp
inc
cmp
neg
add
sub
cmc
mov
mov
ret
lea
pop
push
notb
xor
and
into
call
mov
pop
lcall
and
inc
cld
cwtl
ret
cmp
fistps
loopne
adc
ret
bound
pop
nop
lcall
push
push
aas
push
xchg
jmp
les
xorb
rorb
mov
ds
aam
jae
pop
into
shrl
jecxz
in
call
jmp
xor
mov
mov
icebp
pmaddwd
push
add
fadd
neg
lods
sbb
add
fmul
push
add
cli
adc
lock
mov
mov
je
xor
ss
mov
mov
and
push
sbb
xor
mov
clc
mov
loopne
ss
sub
adc
andb
adc
push
scas
es
into
rolb
mov
lock
rolb
nop
outsb
movsl
mov
adc
andl
ror
mov
inc
mov
aaa
inc
nop
adc
pop
cwtl
cmpsl
loope
jne
cmpl
push
lock
xor
push
psubsb
mov
sbb
mov
xor
fists
lcall
and
sbb
mov
mov
into
bswap
sub
das
sub
inc
js
jbe
mov
jl
mov
ss
adc
cs
jle
dec
es
arpl
and
push
loope
orb
mov
jge
adc
add
jle
adc
stos
dec
lods
into
add
or
push
jmp
inc
clc
pop
mov
pusha
add
add
sub
adc
pop
aam
es
xor
loop
lea
inc
push
jl
cld
cmp
sub
fdivs
repz
mov
xor
adc
sbb
and
jl
dec
call
imul
sarb
sarl
lods
enter
cld
call
mov
movsb
hlt
jo
jne
sbb
pushf
in
cld
inc
push
outsl
in
add
or
mov
and
orl
lea
icebp
notb
mov
or
mov
aam
data16
mov
movl
jg
inc
add
xchg
sub
push
imul
xchg
pop
push
add
dec
mov
or
xor
xor
sub
xchg
mov
push
cmpsb
or
add
add
mov
sahf
sbb
pop
inc
add
icebp
add
or
inc
pop
cld
adcl
inc
adc
push
jb
inc
jmp
pushl
inc
or
xor
sub
and
add
pop
jo
call
jg
test
sahf
jo
je
xor
push
xchg
xor
outsl
idivb
xor
pushl
add
adc
sub
jno
cld
mov
lock
push
outsb
push
or
jo
call
out
ret
ret
subl
mov
push
orl
sbb
adc
sbb
mov
adc
pop
or
or
subl
outsb
adc
mov
inc
scas
jo
mov
jae
adc
pop
mov
push
insb
cmp
cld
mov
imul
cmp
adc
loope
add
pop
cmp
xor
jne
pusha
sub
inc
adc
sar
pop
xor
add
fs
jne
je
adc
jne
add
and
or
jne
jl
pusha
mov
add
or
cmp
jne
push
aad
mov
cmp
jmp
out
fiaddl
add
cmpb
xorb
ficomps
pop
fldt
jmp
xorl
pop
mov
fwait
test
jne
push
or
and
pushf
test
addb
pushf
mov
adc
pop
adc
adc
dec
shlb
sbb
cmp
mov
lea
or
adcb
mov
push
call
inc
push
cmp
and
sbb
mov
mov
mov
add
add
test
jo
orb
faddl
sub
pop
add
data16
or
mov
jle
adc
add
mov
push
push
jo
xchg
and
xchg
pop
and
mov
or
xchg
pushf
xor
sbb
aas
cmpsb
pusha
insl
jmp
push
mov
pop
stos
pop
mov
je
lock
mov
mov
lock
hlt
cmp
pop
push
icebp
les
add
sbb
add
addr16
lock
sub
pop
pop
jne
inc
test
lcall
test
cmp
push
xchg
xor
ret
push
lret
nop
mov
shl
dec
and
leave
test
inc
jno
loop
cld
mov
cli
sti
outsb
inc
call
push
mov
adc
add
aam
cli
sbb
push
xor
lock
push
mov
push
push
jno
jnp
ljmp
adc
jg
mov
repnz
test
clc
sub
push
push
out
push
mov
adc
adc
es
cld
mov
mov
mov
lock
sbb
lea
add
cmp
add
mov
push
mov
shl
xor
xchg
cmp
xor
add
sub
xchg
mov
pop
jl
adc
clc
aaa
push
jnp
cmp
mov
cmp
mov
call
inc
sahf
mov
cmp
rcrb
stos
jo
pushl
add
movsb
aad
xchg
clc
mov
mov
test
xor
ja
pop
xor
and
movsl
jne
cli
inc
mov
adc
dec
lock
jo
out
and
push
mov
mov
loop
mov
add
roll
dec
fwait
xchg
js
sbb
xor
inc
mov
pushl
shll
in
push
jno
add
nop
cltd
or
and
or
mov
mov
or
call
pop
or
pop
pop
call
mov
jb
xchg
pusha
andb
lock
push
push
andl
in
jg
mov
sub
add
fwait
inc
adcb
out
add
insb
icebp
test
jne
addl
sbb
stc
or
mov
aaa
fimull
cmp
mov
adc
push
inc
jbe
jmp
cmp
int
xor
mov
jl
add
jle
xorl
mov
cmp
push
sbb
sbbl
ja
adcb
push
mov
mov
adc
ret
add
inc
adc
add
inc
push
ror
xchg
and
add
or
pop
adc
jle
bnd
ljmp
lock
jmp
xor
aas
addl
mov
or
mov
and
adc
outsl
mov
mov
std
add
cs
mov
setne
dec
cmp
or
hlt
add
mov
sbb
jbe
cli
sub
or
bnd
stos
add
adc
std
mov
cmp
sub
push
mov
add
or
fisttps
ja
and
mov
jne
jbe
and
inc
inc
adc
fldl
jle
es
rorl
gs
test
cmpsb
or
xchg
or
pop
add
cmp
or
inc
mov
sbb
push
lcall
lcall
jle
cmpb
mov
cmpl
popa
aam
add
pop
jp
mov
andl
sbb
add
dec
enter
push
sbb
andl
push
sbb
jmp
inc
jo
inc
or
dec
jo
pop
xorb
adc
lcall
add
std
dec
mov
je
call
adc
sti
jle
jb
add
cld
fildll
jne
iret
add
ret
je
mov
adc
xor
add
mov
add
lods
pop
lods
aaa
adc
pop
add
icebp
mov
mov
jmp
add
repz
ljmp
add
mov
call
je,pn
call
leave
adc
jbe
mov
push
add
mov
pop
mov
jp
cmp
loope
test
mov
mov
fistpll
lods
dec
push
dec
test
mov
add
mov
inc
adc
sbb
lret
cs
add
test
push
push
xchg
adc
add
pop
orb
mov
mov
jmp
add
add
testl
xor
pop
add
jo
sub
jge
je
sahf
loop
pushf
pop
dec
cs
or
and
dec
sbb
cmp
push
or
clc
sbb
add
push
and
sbb
outsl
mov
in
ret
push
and
or
sub
daa
insl
mov
adc
xchg
sub
add
mov
mov
add
subb
inc
idivb
lods
call
add
into
xor
inc
insl
dec
insb
cmp
inc
repz
testb
sbb
roll
in
lods
mov
mov
adc
insl
roll
into
fimuls
inc
outsl
or
hlt
filds
call
push
inc
or
mov
push
sub
sbb
cmpsb
rol
dec
adc
in
fists
push
cmpsb
xor
fbld
push
cmp
and
sub
aad
cmpb
dec
and
rorb
inc
cld
xlat
clc
hlt
jmp
je
imul
xchg
fdivrp
cmc
mov
mov
imul
mov
lods
sbb
sub
add
inc
inc
mov
and
push
mov
or
pop
mov
shlb
cld
add
es
jle
shlb
cli
mov
push
inc
push
and
cmp
sbb
call
cli
sahf
push
inc
cmp
sbb
sub
lcall
rorb
push
xor
push
xor
mov
push
inc
xor
movsb
ret
icebp
sbb
or
or
mov
je
jne
mov
or
fcoms
push
je
ljmp
pushl
cld
ds
fmuls
dec
or
pop
add
add
jno
xor
cmp
mov
test
dec
out
sarl
test
add
push
bnd
jb
fsubrs
ret
imul
jle
fmull
jne
test
sarb
pop
sbb
aaa
std
fwait
loopne
imulb
stos
js
adc
pop
aaa
mov
mov
or
push
mov
add
and
or
pop
push
xor
mov
push
push
pop
repz
movb
push
lock
push
lcall
shll
fs
add
pop
jbe
and
mov
add
add
and
leave
dec
xchg
outsl
adc
lock
cld
jbe
mov
adc
outsb
shlb
mov
adc
add
pop
loop
lcall
mov
sub
lock
enter
xchg
jl
aam
popa
test
call
test
push
push
call
cmp
jmp
jmp
je
imul
loope
adc
mov
ss
cmpb
std
or
add
adc
lea
ja
pop
pop
jae
add
push
mov
fs
shr
jg
xchg
sbb
pusha
imul
les
fwait
test
loope
fcmovb
lea
sbb
inc
mov
xchg
push
xor
jb
jne
and
mov
mov
bound
pop
push
add
call
mov
add
jle
adc
nop
fwait
cmp
loopne
enter
push
jo
jp
mov
pop
imul
jae
push
in
xchg
int3
push
push
les
pop
ja
call
dec
inc
or
sahf
xor
xchg
or
call
pop
cmpsb
pusha
xchg
mov
jle
test
loopne
inc
and
mov
adc
push
and
push
das
xor
push
fs
mov
add
adc
loopne
test
fiaddl
loopne
sarb
jp
add
mov
xchg
std
hlt
adc
inc
ljmp
movups
pop
push
in
gs
loopne
in
lea
push
test
fidivl
stos
and
jo
dec
mov
lea
or
fbld
and
pusha
sbb
loopne
loopne
repnz
cld
fistps
mov
cli
lock
xchg
mov
sahf
add
les
sub
and
sbb
test
cs
push
cld
pusha
xchg
dec
popa
push
xor
jecxz
mov
push
adcl
add
inc
in
daa
push
fwait
clc
cmpb
stos
fcmovb
mov
push
jb
pushf
sahf
pop
dec
imul
adc
test
jmp
jg
clc
scas
mov
sub
loopne
popa
mov
jmp
pop
xor
mov
sbb
adc
pop
xor
pop
hlt
xchg
xchg
jp
stos
mov
inc
cmp
lock
jb
jge
pop
add
punpcklbw
mov
adc
popa
add
jl
jne
or
or
insb
add
add
cld
pusha
xor
push
or
rol
ret
inc
inc
dec
lahf
push
scas
xor
lret
jbe
inc
clc
xchg
sbb
cmp
xor
add
adc
sbb
jle
and
mov
fwait
mov
and
jb
test
insb
pop
adc
pushf
loopne
mov
sub
gs
sub
lock
pop
add
mov
or
lock
loopne
das
adc
sub
jge
mov
cwtl
loopne
mov
push
mov
pusha
cmp
xchg
add
cmpsl
add
icebp
pop
inc
insl
inc
and
je
pusha
mov
add
dec
and
shrb
push
es
loopne
jecxz
sub
popa
gs
sbb
or
xchg
add
mov
loop
popa
push
sbb
leave
xor
and
mov
xlat
xor
pushf
add
inc
xor
pop
hlt
lcall
sub
add
add
scas
pop
mov
inc
cmpb
outsb
add
add
data16
scas
push
inc
cld
scas
sbb
subb
pop
call
dec
mov
xor
mov
insb
sub
jb
lock
add
adc
ss
push
xchg
xor
add
fs
mov
repnz
pop
movb
sbb
outsb
add
or
push
inc
add
jp
fcmovnu
push
cltd
dec
orb
pop
mov
adc
sbb
add
xchg
inc
push
call
sub
dec
loop
jo
adc
inc
add
adc
cmpsl
call
adc
loopne
pop
pop
popa
jo
lcall
faddl
fsts
adc
cmp
mov
mov
and
push
sub
std
lock
lcall
jo
nop
jno
push
and
aam
test
dec
add
movsb
iret
bound
test
cs
mov
add
add
mov
xorl
xor
aaa
aaa
mov
xor
daa
add
xor
lock
or
push
push
sti
mov
cld
jo
push
xor
push
enter
add
and
push
or
loopne
in
push
pop
je
push
icebp
jp
mov
pop
mov
push
push
scas
pop
xchg
out
outsb
pop
mov
add
wrmsr
add
sahf
inc
scas
int3
pop
sbb
ret
add
mov
call
es
ss
xchg
add
hlt
jb
xchg
add
in
push
ja
add
jo
pop
or
add
hlt
xchg
inc
push
movl
test
dec
das
dec
jle
lock
sahf
cmpsb
icebp
xchg
sub
xchg
xor
and
push
sub
adc
jo
call
add
adc
pop
jp
dec
testb
insl
ss
add
sub
pop
dec
or
mov
ja
mov
icebp
or
add
je
jo
es
add
cld
into
push
dec
mov
mov
add
das
adc
dec
lods
je
mov
cmp
in
jmp
mov
mov
or
mov
push
call
or
jle
add
xchg
sti
orb
sub
xor
push
cmp
dec
sub
addb
popa
mov
pop
xor
mov
pop
adc
adc
int3
xor
push
jne
lock
rolb
movb
jmp
ret
inc
ret
fidivrs
scas
jo
popa
mov
mov
push
jo
push
andb
or
push
pop
mov
or
out
imul
icebp
and
mov
jmp
cld
push
mov
add
test
inc
jecxz
jae
test
lea
mov
lock
mov
adc
jbe
rcl
daa
add
push
lcall
push
push
call
push
ljmp
jno
jbe
jb
dec
scas
addb
inc
sub
push
cmpsl
movsb
clc
jne
xor
enter
fwait
hlt
test
jp
mov
sbb
mov
in
adc
aaa
mov
jp
and
les
popa
lea
push
out
and
add
test
aaa
jg
and
lock
push
es
cld
addb
bound
cld
xchg
lcall
test
or
xor
inc
fcompl
dec
add
inc
push
repnz
lock
lock
sahf
sub
stos
adc
mov
or
push
sbb
pop
ret
xor
cmp
xor
test
sub
imul
add
inc
sub
sti
push
adc
int
xor
jne
push
loopne
and
inc
add
test
nop
loope
adc
enter
cmpb
and
jno
mov
orl
clc
scas
add
andl
xor
jle
dec
sbbb
es
mov
pop
sbb
filds
incl
xor
xor
jo
ja
fwait
rolb
es
cli
outsb
loopne
inc
pusha
add
mov
pop
addb
mov
stos
das
sub
enter
movsb
pop
or
push
call
lret
pop
jo
ret
lock
sarb
pop
cmpxchg
fcomps
idivb
adc
call
push
xor
dec
je
call
test
mov
lret
test
or
xchg
xor
mov
push
push
jno
rol
xchg
add
pop
fcmovnu
cmp
clc
js
sub
cmp
out
scas
and
jp
cmovge
inc
xchg
mov
mov
adc
fnstenv
loopne
mov
cmp
add
pop
es
addb
sarb
ds
adc
cmpb
aaa
add
in
jbe
hlt
add
je
inc
sub
je
xchg
testb
jo
fcoml
jo
adc
call
inc
adc
insb
cli
es
pop
add
xor
mov
add
xor
push
sarb
or
mov
or
ljmp
jmp
mov
sbb
or
adc
or
xchg
add
push
push
add
pop
dec
jle
pushl
dec
in
out
mov
mov
mov
jb
inc
and
incl
mov
inc
add
and
lea
or
push
dec
cmpl
pop
pop
add
adc
pop
jmp
stos
add
xlat
add
mov
dec
ljmp
and
push
xor
inc
sbb
mov
mov
out
mov
ficompl
outsb
mov
aas
subb
jg
xchg
or
and
lahf
xor
xchg
xor
roll
ja
test
xchg
jmp
push
out
cli
xor
push
mov
and
scas
add
es
or
lock
xor
pop
ret
call
cmp
sub
push
hlt
lock
enter
incb
lcall
mov
mov
int3
int
movsl
push
test
stos
je
jbe
dec
loopne
or
call
mov
xor
int3
sbb
sbb
aad
pop
inc
xor
lahf
pop
adc
add
and
mov
xor
shr
xor
fs
shr
into
or
xor
mov
adc
sub
xchg
fucomip
jl
sbb
cs
add
pop
je
mov
insb
jge
test
dec
sti
push
adc
jg
jl
jo
push
addl
add
or
sub
add
mov
incl
cmp
or
mov
call
std
test
jo
xlat
mov
pushf
and
rorl
mov
xchg
addl
xor
pop
repz
stos
mov
sub
mov
pop
jg
or
add
or
movsl
jp
cmp
dec
and
mov
push
pop
jbe
sub
jnp
adc
pop
or
mov
pop
adc
into
xor
ss
jbe
mov
or
inc
or
add
inc
or
and
ret
sahf
push
cmpsl
add
xchg
aam
cld
sbbb
cmpsb
sbb
push
mov
sbb
xchg
xor
add
add
push
stos
sbbb
sub
and
xchg
mov
dec
push
addl
and
mov
mov
cmpsb
into
mov
or
iret
sbbl
cmp
fisubrl
pop
add
fisubs
xchg
scas
es
xor
dec
jo
xor
imul
xor
sub
jl
xrelease
rclb
jmp
pop
jmp
out
add
movsb
int3
xor
scas
sbb
jbe
es
out
adc
pop
movsb
xchg
fmuls
inc
call
gs
es
or
rclb
decb
push
push
pop
or
jmp
pop
repnz
mov
mov
mov
mov
add
xchg
testb
outsl
push
lret
add
add
or
cmpb
ss
adc
or
push
cld
sahf
aad
neg
inc
ret
sti
dec
incl
add
incl
andl
aam
fsubrs
cltd
movl
inc
aam
jge
dec
jge
cwtl
inc
sbbb
and
add
mov
dec
sub
mov
je
lret
xchg
es
pop
pop
or
out
test
and
xchg
sbb
jno
push
into
in
pop
imul
inc
adc
add
jmp
int3
call
pop
or
mov
mov
push
call
aam
shlb
jl
clc
ret
and
popf
insb
pop
and
and
insb
movsb
cmpps
aas
adc
subb
jmp
sbb
push
repnz
adc
dec
pop
add
mov
inc
loop
cmp
and
xor
out
insl
shrb
push
out
mov
sub
ljmp
jbe
outsl
pop
std
pop
jne
test
js
add
adc
and
je
aam
rolb
pusha
adc
test
inc
mov
sub
lock
aam
mov
ja
sysenter
cs
and
mov
add
aam
inc
bound
push
push
mov
pop
fisttpl
push
jb
push
dec
and
mov
inc
movsl
ds
arpl
pushl
daa
insl
push
xchg
add
in
dec
sahf
pop
mov
cli
fwait
jae
lcall
cltd
enter
mov
mov
add
ret
ret
pop
push
in
sub
jp
adc
addb
adc
or
push
push
xchg
adc
sub
ret
mov
mov
clc
mov
mov
rorl
aaa
add
pop
shl
adcl
xchg
call
add
mov
clc
ret
test
shrl
add
rolb
in
sub
je
cmpb
sub
mov
or
xchg
call
or
add
call
mov
lock
xor
lret
mov
inc
mov
test
add
ret
sub
stos
loope
cli
das
mov
mov
outsl
jmp
mov
cmpsb
cmp
lock
inc
or
push
dec
jbe
or
ljmp
pop
sub
ja
or
inc
jne
ret
or
test
call
inc
adc
pop
andb
mov
and
sahf
repz
lea
and
ror
rolb
lods
or
dec
clc
adc
mov
loopne
test
lods
outsb
fs
mov
cmpsb
push
mov
loope
add
aaa
cmpsl
jne
mov
in
adc
adc
xchg
pusha
roll
loope
or
incl
les
imul
add
call
pusha
sbb
xor
or
fs
mov
test
jne
push
loopne
jo
sub
push
in
pmaxub
jecxz
pop
ss
jbe
clc
in
xchg
sub
add
xor
xor
inc
rolb
and
add
pushl
inc
clc
mov
loop
call
addl
mov
pop
cmp
out
addb
and
push
mov
or
rorb
cld
dec
push
sub
sti
sub
loopne
add
bound
mov
loop
cmp
jle
loope
inc
rcr
sub
or
and
movsb
cli
jnp
popa
pop
mov
or
fisttps
js
hlt
jbe
outsb
scas
adc
jg
inc
enter
dec
or
adcl
or
mov
inc
push
jo
add
sar
bound
mov
sbb
js
sub
faddl
add
mov
add
orb
fstpl
add
mov
inc
inc
sbb
test
fcmovu
push
call
adc
out
bound
xchg
adc
stos
fildl
push
push
loopne
jmp
cmp
addb
mov
pushl
mov
popa
adc
insl
call
mov
mov
jp
shll
mov
mov
push
xlat
xor
adc
mov
xor
je
mov
shl
sub
test
movsb
test
xchg
nop
sar
dec
mov
inc
jge
add
nop
psubsb
in
pusha
pop
insb
add
gs
bound
ret
pushl
inc
mov
adc
add
inc
out
push
inc
lret
mov
push
out
xchg
mov
pusha
arpl
ret
mov
mov
inc
je
push
jo
test
mov
pop
fistpl
dec
push
add
icebp
aam
arpl
test
cld
fisttpl
inc
mov
pop
push
inc
shlb
leave
clc
push
call
jne
xchg
int3
nop
movsb
inc
pusha
jae
sbb
daa
into
subb
push
pop
js
cmpsb
jmp
jmp
mov
cmpsl
lea
inc
fs
loopne
mov
xchg
cmp
rclb
or
pop
lahf
decl
int3
or
and
loope
adc
loopne
dec
sub
insb
push
incb
scas
sub
je
sbb
fmuls
ljmp
stc
sub
orl
push
push
mov
loope
pusha
push
arpl
fimuls
inc
pop
movsb
adc
add
lcall
ret
cld
sub
pop
jbe
notb
pop
sub
dec
or
pop
jle
outsl
xor
jb
loopne
push
xor
test
loope
ljmp
popf
adc
lret
es
adcb
and
pop
or
sbb
mov
dec
pushf
hlt
repz
sti
mov
xchg
jno
es
mov
push
jmp
adc
dec
imul
xor
lods
mov
pop
jbe
inc
lock
stos
mov
inc
jo
aad
mov
and
jbe
movb
addl
cmp
mov
pop
jle
int3
pop
cli
mov
mov
mov
incl
mov
jne
call
sub
pushl
add
icebp
adc
pop
push
jae
mov
push
mov
sub
adc
mov
mov
jg
mov
add
call
or
subb
or
add
sbbl
add
mov
adc
loopne
fsubp
push
mov
testb
adc
lcall
pop
or
lock
jo
jns
push
dec
pop
lock
add
call
push
sbb
jo
pop
mov
add
xchg
push
test
jg
sbb
or
mov
loopne
adc
cmp
inc
mov
xor
call
je
and
decl
call
pop
xor
loope
push
xor
lret
andb
mov
adc
or
loop
sbb
mov
mov
rolb
xchg
repnz
jmp
mov
call
sahf
rolb
adc
push
xchg
mov
inc
mov
pop
out
mov
mov
test
ljmp
nop
inc
idivl
daa
scas
jo
mov
add
adc
lea
subl
jne
push
pop
inc
sub
lods
adc
mov
xor
mov
sbb
xchg
pusha
aam
ljmp
ret
out
adc
stos
and
cmp
mov
add
mov
out
xchg
mov
jno
adc
mov
push
jo
adc
xor
pop
pop
add
adc
add
and
stos
xor
bound
jl
sub
push
fsubl
movsb
inc
test
lea
loope
jmp
es
fsubrp
jg
adc
adc
pop
lock
icebp
adc
ja
xor
sbb
cld
xor
xor
xchg
xchg
cli
or
int3
ret
repz
and
int3
inc
add
adc
pop
outsb
hlt
and
les
lret
mov
cld
xchg
imulb
inc
mov
pop
jne
jbe
pandn
lods
push
adcl
mov
pop
add
sub
pop
pop
mov
jmp
popf
pop
mov
pop
js
add
cmp
idivb
add
inc
std
cmp
or
adc
add
xchg
push
je
in
mov
imull
and
xchg
mov
imul
orb
pop
mov
xor
aas
jo
jge
add
cli
mov
cs
call
xor
je
imul
push
add
add
cmpl
cmp
xchg
jne
mov
inc
jae
inc
mov
add
flds
loop
pop
dec
repz
clc
inc
xor
dec
hlt
mov
lock
push
add
add
cwtl
clc
mov
add
mov
adc
push
adc
xor
adc
std
pop
lock
cmp
call
mov
sub
push
push
mov
popf
xchg
sbb
push
test
or
sbb
jg
add
inc
add
mov
ret
mov
repz
js
add
or
ja
call
lea
xchg
adcb
mov
and
inc
les
lods
std
fistl
or
sbb
test
out
adc
add
xor
xor
mov
add
add
cmpsl
hlt
clc
in
mov
mov
shl
pop
mov
xchg
clc
jge
test
ret
mov
mov
fsubrs
data16
cmpb
jo
mov
rorb
pop
sub
push
and
cs
jl
push
push
in
ljmp
mov
lock
repnz
jbe
mov
add
push
mov
jl
bound
inc
xor
mov
mov
push
adc
adc
lcall
xor
lock
cmpl
scas
lea
lea
inc
addl
push
lea
add
sbb
mov
subb
add
xchg
mov
push
cmpsb
add
aam
jle
or
push
jb
dec
push
jbe
xor
xor
push
sub
add
clc
add
pop
and
mov
clc
pop
lods
jmpw
dec
nop
rcrl
incl
rclb
xor
lcall
or
into
push
addl
into
push
rcr
and
ss
shlb
and
mov
inc
pop
lock
lock
movsb
jle
mov
es
cmp
jecxz
push
stos
in
add
jae
jnp
test
pop
test
addl
call
sbb
lock
adc
icebp
sbb
jmp
add
jmp
push
adc
aam
or
add
lods
mov
and
xchg
fsubrp
loope
cmp
inc
fbstp
pop
sbb
sti
jo
mov
fildll
pop
ficoms
adc
mov
rcl
call
lret
inc
test
icebp
sub
cmp
or
add
in
push
into
push
add
mov
xchg
call
clc
ljmp
cmpsl
cli
pop
add
sub
push
stos
or
fadds
jo
dec
adc
fcoml
pop
notb
add
or
pop
push
scas
cmp
inc
icebp
and
mov
push
inc
loop
dec
push
push
inc
add
pop
xchg
cmpsl
lea
and
push
andb
and
es
push
jne
adc
adc
lock
mov
adcb
xor
js
mov
push
mov
adc
xor
adc
mov
fisttpll
add
add
jl
call
les
push
adc
and
and
xor
mov
cli
cwtl
cmp
hlt
fnsave
repz
xchg
test
and
mov
fdivr
test
ljmp
add
cmpsb
ret
addl
xchg
cwtl
lods
sbb
cs
lods
fucomi
xor
mov
lock
inc
js
inc
pop
push
sub
dec
inc
test
out
pusha
adc
cli
adc
lea
add
mov
outsb
das
push
add
mov
sbb
movsb
in
inc
pop
jp
in
mov
loope
test
cs
pop
aaa
add
fimull
cs
or
sarb
xchg
jecxz
add
mov
push
add
add
cld
outsl
cld
lea
mov
push
call
test
ljmp
and
mov
add
adc
cmp
insb
jle
fmull
scas
jno
xchg
and
aaa
mov
cmp
push
adc
add
scas
mov
les
add
add
imul
adc
jge
inc
jns
pop
scas
lds
daa
pop
ljmp
stos
clc
cmp
mov
mov
loope
cmp
subb
jle
bound
jne
push
add
les
hlt
cmp
add
sub
cmpsb
sub
jmp
inc
cmpb
push
xor
pop
loop
sbb
dec
inc
or
push
or
mov
cli
jge
add
push
sub
rcrb
xor
jp
pop
push
and
popf
xor
adc
sbbb
int3
daa
pop
inc
and
jecxz
and
mov
lods
push
jle
jmp
add
ds
mov
mov
shlb
add
mov
xor
add
dec
mov
lods
lahf
insb
sbbb
cwtl
xchg
fstpt
push
xor
add
call
subl
rcll
xor
push
in
call
dec
cli
or
pop
adc
add
mov
aaa
lret
dec
mov
test
inc
mov
std
je
cmpb
jg
js
adc
mov
xlat
das
ficoml
or
and
les
xorb
pop
mov
lods
push
jbe
lods
rclb
in
or
lea
add
aaa
mov
sub
enter
bnd
or
rclb
cmp
xchg
je
je
or
add
fcoms
push
cmp
call
push
sub
xchg
xchg
ljmp
sbb
and
orb
lcall
ret
sarb
mov
int
mov
push
xchg
rol
aam
jle
jmp
daa
addb
mov
and
or
and
call
fcmovnb
xchg
ds
shrl
ret
sbb
sbb
add
test
pop
clc
sti
shlb
mov
mov
cld
mov
sahf
push
mov
loopne
dec
lock
sbb
dec
cli
int3
rorl
je
adc
xor
push
push
cld
dec
xchg
clc
adc
ret
or
or
or
fisubs
fnstcw
sbb
and
add
add
popa
push
std
push
sub
test
shlb
loopne
mov
mov
decl
and
imul
ret
adc
int
sbb
pop
add
push
test
je
roll
add
cwtl
rcl
lock
sub
pop
rcll
pop
ret
adc
push
and
pop
cmp
enter
lret
push
scas
adc
mov
inc
inc
adc
or
ss
inc
call
xchg
ret
inc
ficompl
xchg
inc
aad
adc
std
xchg
or
add
nop
aad
andb
lock
or
sbb
hlt
jp
adc
xchg
xchg
cs
out
xor
push
mov
arpl
fdivr
pop
inc
dec
push
loop
jmp
xor
pusha
add
inc
jb
jp
jne
pop
call
jge
sbb
pusha
push
inc
lahf
or
dec
adc
push
add
outsb
sbb
addl
pusha
lcall
movsl
movsb
pop
push
call
push
imul
inc
and
mov
mov
popa
aaa
sbb
call
sti
mov
call
xlat
leave
add
test
sub
sarb
jle
add
mov
clc
stc
pusha
jle
add
into
addb
fildl
lcall
or
xor
scas
add
mov
iret
loopne
add
outsl
adc
jl
notrack
pop
mov
js
add
jle
push
lcall
bound
or
mov
andb
jmp
ret
push
xchg
push
outsb
hlt
add
push
aam
push
adc
adc
int
nop
popa
pusha
pop
fiadds
mov
xchg
push
bound
or
or
jmp
jbe
and
mov
adcb
sub
call
pop
adc
in
xchg
orb
and
jp
nop
cs
and
add
call
sbb
das
fs
movsb
add
pusha
cmp
sub
fdivs
mov
ror
cmp
sbb
cmpsb
std
pop
push
add
js
mov
loopne
push
mov
xor
mov
or
inc
into
and
dec
jo
jp
inc
mov
test
xor
adc
dec
pusha
mov
lret
or
decl
or
or
aas
inc
loope
rcrl
inc
add
and
aam
push
mov
and
in
push
jmp
or
insb
in
pop
add
mov
das
xchg
pusha
cmp
or
jne
jmp
adc
push
andl
pusha
or
add
sub
adcb
add
rorb
nop/reserved
push
cld
ja
adc
aas
and
ljmp
lea
lcall
cmp
xor
pop
cmc
aaa
push
pop
inc
js
loope
mov
and
mov
xorb
inc
mull
add
das
jg
scas
adc
mov
xchg
jp
push
loopne
ret
lea
xchg
pusha
sbb
xlat
xor
aam
ljmp
ret
inc
jp
xlat
and
pop
inc
push
pusha
mov
sbb
out
mov
xchg
add
stos
mov
pusha
cmpl
lock
pop
shrb
pusha
adcb
mov
test
add
cli
push
cmp
cmp
xlat
cmp
loop
jle
and
xchg
pushl
adc
add
subl
adc
nop
ret
inc
cmp
adc
mov
xchg
push
fistl
mov
mov
push
pusha
push
inc
adc
cld
aaa
mov
loop
push
pop
or
adc
cmpsl
popa
pop
sub
mov
jl
outsl
add
push
adc
outsl
jns
push
scas
stc
addb
scas
xchg
sar
add
sub
inc
pusha
sub
dec
mov
adc
xchg
rorb
orb
andb
test
mov
mov
inc
fisubs
aas
mov
into
incl
call
or
ret
mov
xchg
test
mov
sub
xchg
adc
mov
lock
xor
mov
inc
and
cmp
sbb
xor
adc
lock
or
mov
dec
std
pop
mov
add
mov
test
je
push
dec
mov
stos
lock
cmp
scas
add
jbe
adc
add
pop
inc
add
stos
push
stos
mov
mov
adc
pusha
jo
int
add
jo
ret
sbb
call
sub
xorb
pop
pop
ret
mov
sahf
push
lods
pop
mov
sbb
cmp
inc
hlt
std
jo
push
aaa
lods
xor
nop
dec
xchg
orl
std
cmpsl
add
fnsave
xor
lock
lcall
sbb
movl
mov
add
cmp
enter
rcrb
mov
lock
hlt
lock
fbstp
cld
test
add
cli
or
sbb
and
subb
inc
mov
les
fisttpll
std
adc
or
push
pop
imul
xchg
add
ret
adc
or
mov
jo
or
mov
inc
dec
pop
aaa
pop
es
push
adc
inc
lock
or
push
mov
in
xorb
hlt
pop
cmc
aam
mov
and
mov
and
test
and
call
lea
jnp
push
shlb
je
add
hlt
jle
fimull
andb
adc
inc
and
das
and
int3
lock
test
scas
mov
in
sub
adc
jmp
and
outsb
sub
fisttpl
push
or
call
incl
add
jae
daa
into
sbb
sar
mov
div
call
pop
arpl
adc
mov
dec
or
dec
leave
add
mov
adc
pop
insl
pop
jo
add
and
jo
or
xor
orl
jo
shrb
push
mov
sub
cwtl
out
push
xorl
jo
adc
xlat
push
fdivrs
lock
add
push
lcall
and
call
inc
jno
add
mov
mov
jp
fdivs
sbb
push
push
sbb
xchg
add
or
inc
or
loop
xor
fcoms
scas
inc
movsl
mov
xor
andb
loope
jbe
into
add
pushf
test
outsl
push
pop
adc
sbb
gs
xor
xchg
sub
data16
push
popa
add
fistl
pop
mov
sub
aam
xchg
mov
dec
cli
mov
sbb
xchg
mov
and
push
enter
add
jbe
andl
pop
int
pop
imul
in
adc
ret
jle
jge
pop
leave
jbe
sub
push
test
int
cmp
dec
push
lea
mov
test
call
test
in
lcall
add
fcoms
enter
xor
clc
es
dec
shlb
jmp
lods
push
call
sub
sbb
or
jg
pop
test
lock
pop
adc
add
andb
push
les
push
les
bound
xchg
js
add
xor
adc
or
mov
inc
call
xor
decl
and
jo
push
xchg
les
mov
stos
xor
push
mov
lods
jo
bound
lds
fidivrs
dec
icebp
mov
adc
sub
ja
outsl
inc
add
fldl
aaa
inc
add
or
lret
gs
sub
dec
add
outsb
sti
lcall
inc
ljmp
std
add
dec
add
adc
mov
jl
push
inc
push
push
mov
push
dec
add
push
iret
in
mov
ret
sub
mov
rcrb
push
xor
ja
or
scas
mov
add
xor
mov
or
je
or
adc
add
add
mov
call
daa
out
xchg
rolb
and
xor
loope
mov
lret
pop
or
lea
sbb
je
mov
lea
mov
cmpsl
lock
mulb
xor
mov
mov
adc
call
and
add
ret
xor
or
mov
add
or
and
lret
push
xor
jg
out
sbb
bound
add
or
xorl
fisubrl
jmp
inc
addb
ljmp
inc
mov
adc
idivl
loopne
mov
mov
call
aas
xor
mov
subb
lock
arpl
daa
pop
jno
call
lock
das
and
andb
push
xor
insb
aad
dec
loop
sarb
pop
add
into
mov
outsl
imul
add
sub
pop
mov
adc
movsb
loop
dec
jg
subb
jmp
test
pusha
xorb
frstor
push
add
icebp
insb
mov
push
outsb
sbb
idivb
mov
mov
in
push
jmp
or
mov
bound
and
add
push
in
adc
call
xor
je
mov
mov
js
jno
pop
xor
andb
incb
xor
cmp
or
xor
repz
cmp
fildll
push
inc
jmp
push
adc
lock
push
push
in
addr16
call
xchg
sbb
mov
pop
mov
and
or
mov
mov
pop
call
sub
jno
movsl
xor
push
lock
test
push
pusha
jl
sub
or
lcall
push
mov
pop
sub
lods
pushl
sub
cmp
jne
insb
jmp
movsb
enter
test
inc
icebp
sbb
aaa
orl
xchg
xor
inc
xchg
and
das
shr
repnz
inc
xor
pop
outsb
xlat
pop
xor
call
push
lods
lock
inc
rorl
or
add
or
xor
adcb
mov
enter
data16
inc
pop
test
pop
mov
sbb
push
push
mov
xor
sub
scas
ficompl
cmp
in
loop
shlb
or
and
sbb
sub
sub
loopne
lods
jo
fdiv
mov
add
or
sub
bound
inc
loopne
sbbb
or
pop
inc
add
hlt
add
les
jle
inc
sub
jbe
push
cwtl
push
push
jbe
xor
ljmp
and
inc
test
nop
and
sub
cmpsl
adc
mov
adc
add
fnstenv
ja
out
das
or
notb
dec
mov
rol
cmp
pop
mov
xchg
sub
or
movsb
xchg
sub
stos
adc
push
icebp
fs
add
jmp
imul
sbb
cmpsl
fwait
test
pop
add
mov
scas
mov
mov
int3
mov
add
and
adc
fiadds
aam
or
mov
cld
push
movsb
xchg
and
ds
sub
js
push
push
enter
jbe
mov
inc
adc
adc
push
into
mov
add
sahf
sbbb
or
push
outsb
push
clc
ljmp
cmp
xchg
xchg
hlt
jmp
dec
dec
inc
push
adc
pop
lahf
cmp
push
test
add
loope
push
add
popf
loop
pop
push
jne
push
pop
daa
lds
and
inc
sub
addb
push
cs
test
sub
cmpsb
fcoml
cli
call
pop
dec
adcb
jp
sbb
shll
gs
sbb
xchg
cmpsl
lods
fbstp
mov
xlat
xchg
and
cld
rolb
jl
pop
pop
push
jmp
push
roll
cmpsb
push
inc
xor
fidivs
orb
jecxz
or
clc
int3
and
inc
loope
lods
scas
out
shll
ret
sub
push
xchg
out
into
mov
inc
xor
jmp
outsb
cli
aas
mov
push
push
or
cs
adc
add
inc
cmp
cmp
ljmp
movsb
insl
movsl
rcrl
lock
xchg
imul
push
inc
lds
pop
call
adc
inc
sbb
divb
pop
jge
clc
mov
push
mov
and
lcall
jnp
sub
mov
sarb
and
and
mov
cmp
outsl
and
inc
or
scas
lock
test
mov
mov
sarb
ret
jl
shlb
inc
rolb
xchg
push
sahf
out
enter
add
pop
das
add
dec
shr
cmp
lret
fs
push
call
inc
or
cmp
or
inc
jecxz
adc
jp
mov
popa
sbb
inc
dec
outsb
inc
xor
mov
mov
out
movb
shlb
add
push
dec
mov
mov
shll
pop
fbld
insb
std
sub
push
pushf
shlb
mov
in
xchg
add
or
mov
divl
in
xchg
or
add
add
adc
sbb
rclb
dec
or
push
rcll
and
xchg
xchg
leave
xchg
sbb
addb
roll
aam
test
add
mov
mov
pusha
movsl
movsl
or
sub
rolb
or
decl
xchg
dec
xor
inc
inc
mov
scas
loope
add
pusha
popa
imul
data16
inc
lods
sub
cld
push
add
and
pop
in
aad
sbbb
daa
cmp
fsub
add
inc
mov
mov
loopne
bnd
pushf
lods
in
cmpsb
test
add
or
dec
fildl
cmp
inc
call
icebp
mov
inc
jg
add
mov
dec
or
mov
and
add
mov
and
mov
call
ret
dec
push
dec
test
shlb
adc
xor
inc
sti
push
ljmp
pusha
sarl
mov
mov
aaa
pop
and
sub
popa
add
add
push
inc
xchg
stos
mov
ret
and
or
add
pop
sub
test
inc
fsubrs
bound
add
int
sahf
sub
dec
dec
or
dec
inc
xor
pusha
add
xor
aam
test
or
loope
mov
pop
xchg
ss
loop
add
lea
icebp
es
adc
into
dec
test
adc
iret
push
in
adc
xchg
add
inc
mov
loopne
testl
aas
jge
pop
xchg
enter
fisubrl
dec
loopne
inc
push
push
push
xorb
or
mov
dec
test
pusha
or
sbb
notl
dec
scas
xor
ret
pop
popa
push
adc
cmp
lods
inc
inc
les
pusha
sahf
stos
adc
jo
mov
loopne
icebp
pop
add
pusha
cmpsb
loope
fwait
icebp
outsl
scas
sbb
pusha
xor
mov
addl
pusha
mov
xchg
sub
jg
je
pusha
pop
push
hlt
ret
rol
mov
pusha
push
sbb
xchg
inc
mov
stc
popa
inc
mov
push
add
mov
stos
stc
popa
mov
adc
loopne
outsl
mov
inc
mov
xchg
test
jmp
clc
or
pop
fs
sbb
std
loopne
test
pop
fs
ret
sub
lcall
adc
stos
mov
mov
cld
sbb
mov
or
fs
out
pusha
mov
adc
and
lcall
repnz
add
stos
scas
nop
hlt
sub
arpl
adc
push
bound
popa
dec
push
push
loope
mov
add
lret
dec
dec
arpl
sub
or
ret
repz
push
dec
inc
sbb
jmp
arpl
int3
bound
jmp
loopne
das
xor
jne
pop
frstor
adc
or
les
loopne
dec
or
sbb
add
jg
sbb
out
mov
or
inc
enter
jmp
and
inc
aad
inc
cld
mov
add
lods
loopne
popa
sub
sahf
add
push
pop
cs
cmpsl
or
xor
push
pop
ret
das
push
mov
ljmp
dec
and
sbb
mov
push
jmp
loopne
push
inc
inc
jb
cmp
shl
push
or
add
xor
pop
lcall
inc
loop
push
loopne
cmp
dec
or
jo
stos
jbe
adc
sub
xchg
clc
cmp
in
cmp
mov
push
popa
fnstcw
inc
xchg
mov
sub
jo
sub
cmpl
lret
sub
ljmp
hlt
lock
xor
unpckhps
jmp
mov
push
xor
xchg
adc
test
pop
jo
aam
sbb
pop
lock
mov
pop
outsl
sbb
fbld
adcb
sbb
xor
add
add
hlt
mov
push
xor
add
or
ret
sahf
cmpsb
pop
or
push
xor
test
lock
lock
je
mov
sub
xor
and
push
fs
pushf
push
inc
cld
xor
and
sbb
mov
mov
push
addb
push
and
dec
add
lods
pusha
sub
fstl
ljmp
push
bound
icebp
ljmp
hlt
inc
leave
ret
push
test
mov
xor
add
or
loop
xor
mov
cmp
addb
lock
clc
and
sub
mov
lock
push
inc
adc
xor
jg
or
lock
push
mov
in
inc
rorb
mov
adc
push
inc
call
jmp
fs
mov
mov
ret
mov
push
xchg
and
sbb
subb
jo
icebp
push
jno
push
or
shlb
jge
or
negb
je
call
mov
daa
and
popa
mov
adc
mov
push
sub
sarb
or
aas
add
or
push
mov
mov
xor
jno
lock
fistps
sub
mov
jo
test
xor
scas
xor
push
pop
sar
jno
mov
aas
cmp
inc
fsubrl
xchg
test
sub
inc
sarb
pusha
je
call
sbb
mov
add
cmp
cs
inc
shl
xor
xchg
test
adc
push
pop
lds
jo
cmp
jg
rorb
clc
pop
je
xchg
insb
rclb
jne
push
mov
sub
xor
pop
jo
xor
lock
push
inc
call
movsb
push
xchg
lcall
mov
xorb
scas
incl
test
adc
add
movups
jmp
mov
call
mov
orb
pop
add
hlt
ss
sbb
ljmp
cld
add
lock
js
or
and
add
push
scas
adc
dec
mov
rorb
or
daa
add
pushl
mov
push
scas
testl
cli
and
andl
je
adc
cmpsl
or
push
xor
into
xor
inc
aaa
inc
add
sub
dec
fisubrs
in
je
sub
push
dec
push
dec
ja
adc
aaa
je
push
add
pop
enter
test
mov
mov
add
lock
cmp
push
in
inc
add
xchg
lcall
insb
je
dec
adc
aas
mov
je
mov
mov
cld
or
icebp
dec
mov
adc
xor
pop
add
js
or
test
push
test
test
adc
push
cltd
mov
fs
inc
icebp
repnz
and
jo
mov
clc
or
xchg
mov
dec
ret
mov
es
in
das
inc
or
mov
adc
cli
or
adc
add
movsb
cmp
dec
and
mov
adc
xor
addl
or
jge
adc
lds
mov
cltd
push
push
cmp
je
push
jmp
stc
pusha
loope
cmpb
add
mov
mov
pushf
repnz
clc
jmp
push
adc
cmp
inc
mov
and
imul
mov
adc
mov
sbb
adc
add
inc
adc
lret
into
jo
data16
pop
jne
cli
sbb
sub
decb
add
test
es
xor
or
test
xor
or
adc
adc
xchg
xor
rcl
stc
je
push
sbb
or
pop
cmp
jmp
mov
push
jecxz
cld
das
js
je
inc
mov
or
sbb
mov
jge
adc
inc
loopne
mov
call
xor
inc
cmp
adc
xor
inc
mov
je
adc
or
out
jle
jp
push
add
jo
data16
dec
jmp
cmp
or
adc
repz
lods
and
inc
pushf
aam
jo
push
imul
and
lock
fistl
sub
loopne
xorb
sarl
sub
aam
adc
adc
jne
shlb
gs
add
jo
test
mov
sub
push
mov
repz
push
rolb
ss
sahf
adc
outsl
jmp
xchg
mov
jo
add
mov
pushf
inc
icebp
addb
cmp
aam
xor
jno
lods
mov
jb
cmp
push
cli
dec
inc
inc
cmp
mov
mov
sbb
out
nopl
add
je
negb
push
dec
jbe
push
xor
adc
rorl
jmp
push
test
mov
mov
cwtl
pop
adc
xor
xchg
mov
pop
lock
popa
call
mov
ljmp
je
push
pop
jno
sbb
nop
jne
push
icebp
aaa
adc
cmp
xchg
rcrb
mov
adc
push
es
dec
and
hlt
and
push
cld
push
faddl
jb
je
addl
xchg
xor
rorb
and
rdtsc
or
pop
jg
lret
xor
or
je
sub
xor
call
ret
lock
or
ds
rcr
push
icebp
pop
sub
out
and
push
and
jp
jb
fwait
subl
daa
mov
or
lock
les
sbb
popf
mov
xchg
test
cmp
and
xchg
lret
jl
rolb
rolb
add
or
je
lea
sub
cmp
cmp
icebp
mov
sbb
sub
je
test
pop
mov
mov
jno
mov
test
jg
pop
fsubs
mov
pusha
inc
or
push
jmp
daa
inc
ret
or
testb
push
add
jmp
adc
add
pop
or
es
add
add
mov
dec
data16
xchg
or
aaa
fdivrs
pop
test
add
add
gs
mov
into
popf
sub
adc
xchg
adc
inc
into
xchg
pop
sub
adc
inc
enter
lcall
push
jmp
and
pop
add
push
je
rol
outsb
idivl
inc
and
lods
scas
adc
ja
xchg
mov
jle
or
sbb
jle
and
push
dec
adc
aam
jp
sbb
cmp
jge
fs
lcall
cli
mov
mov
orb
out
push
adc
sub
lcall
or
add
add
dec
or
ret
mov
loopne
push
add
or
jno
adcb
sbbb
rcrl
or
es
in
les
movsb
filds
push
xchg
cmc
and
mov
dec
call
hlt
clc
inc
adc
xchg
je
and
test
dec
mov
mov
ljmp
cmp
andb
pop
or
add
dec
push
push
call
add
mov
jmp
addb
mov
cld
sbb
adc
sarb
scas
xchg
inc
lock
add
inc
xchg
orb
and
add
mov
push
dec
add
int3
imul
mov
fdivrp
je
in
jmp
push
idivb
or
das
or
roll
push
nop
ffreep
push
inc
imul
fists
add
push
pop
and
not
and
add
add
adc
sbb
add
inc
ret
jl
xchg
fs
dec
push
mov
jp
jmp
mov
shl
cmp
addb
ja
xchg
lock
dec
and
push
cmp
test
ss
pop
sarb
push
sub
cs
je
add
add
clc
sahf
sbb
xor
add
mov
popf
sub
cmp
inc
cmpsb
and
jge
je
push
adc
push
inc
test
scas
mov
call
lcall
mov
hlt
hlt
fimull
cmp
adc
push
adc
add
or
mov
in
enter
sahf
or
orb
clc
adcb
or
test
pop
pop
push
push
cmp
shlb
test
and
push
cmp
sub
and
ret
xchg
test
sub
inc
push
adc
sub
rcrl
dec
push
adc
sbb
call
sbb
sti
jmp
loop
sub
mov
inc
mov
rorb
mov
adc
mov
push
xchg
rcl
mulb
cmp
adc
xchg
sbb
mov
rcl
rcrl
scas
pop
jg
or
rol
mov
push
insb
pop
rclb
rorb
mov
add
gs
dec
inc
push
ja
jg
repz
rclb
push
push
sti
sbb
call
xchg
mov
jo
cli
xchg
push
push
mov
inc
jae
inc
orb
mov
pusha
outsb
pop
pop
inc
shlb
xor
dec
inc
inc
enter
hlt
sub
pusha
daa
pusha
addl
icebp
sbb
and
adc
adcl
push
push
movsb
ja
dec
aam
xlat
loopne
mov
shr
mov
add
hlt
test
pop
add
cmpl
push
xchg
add
cli
jbe
das
ljmp
fiaddl
testb
add
test
jl
inc
das
test
mov
or
inc
es
pusha
xchg
xchg
inc
ljmp
mov
mov
jecxz
mov
add
pop
mov
adc
xchg
les
in
pop
xchg
stc
fisubl
mov
ficompl
repnz
cmpsb
or
in
negb
and
and
adc
fs
dec
stos
sub
xor
cld
add
fs
mov
pop
pop
and
ficoms
shrb
test
or
and
push
ret
adc
lods
mov
lcall
adc
xlat
pusha
adc
pusha
movsb
jmp
ljmp
and
push
and
sbb
orl
mov
pushf
and
mov
shll
xchg
push
xchg
pop
fildll
push
or
mov
pushl
inc
in
mov
xor
adc
loopne
adc
inc
mov
mov
add
mov
mov
mov
pushf
jne
sar
mov
in
inc
inc
lcall
push
jo
out
ret
mov
adc
rcrb
pop
mov
sub
xor
jo
xor
lahf
add
ret
mov
popa
nop
add
pop
push
out
and
or
loopne
lock
insl
push
mov
gs
sbb
pop
xchg
jl
pushf
pusha
jle
orb
add
add
in
cmp
sbb
add
push
inc
test
pusha
int3
dec
inc
dec
and
jmp
sbb
ljmp
loopne
loope
sbb
xchg
test
pop
test
push
iret
adcb
pusha
aaa
cmovae
movsb
loop
push
adc
loopne
int3
pop
pop
int3
adc
insl
jmp
test
sbb
loopne
lea
xchg
test
test
xchg
push
inc
fisubl
sub
das
outsb
js
pushf
dec
mov
mov
cltd
and
in
mov
sub
shrl
add
mov
lea
push
loop
and
or
mov
test
pusha
in
pusha
ret
sub
add
cmpsb
mov
outsl
es
pusha
lret
inc
mov
add
sub
add
aam
dec
sub
sub
adc
fnstcw
pusha
fcmove
mov
add
adc
test
add
adc
ja
push
arpl
in
adc
inc
aas
fdivrl
add
inc
test
cwtl
loopne
adc
mov
or
mov
lods
sub
add
and
js
out
xchg
rclb
notb
jo
pushf
stc
insl
imul
jne
icebp
add
cwtl
pop
jae
mov
pop
sub
sti
push
lock
jl
add
pop
mov
add
cltd
pusha
je
lock
ljmp
lods
xor
lret
add
xor
mov
mov
or
sbb
xchg
lock
scas
dec
fcomps
in
ljmp
es
mov
xorb
ljmp
push
xor
not
call
mov
xchg
ret
fidivl
dec
xchg
mov
dec
adc
or
xchg
inc
add
jo
clc
call
mov
xor
jecxz
sbb
add
scas
das
test
jnp
lock
hlt
cltd
mov
cltd
rorl
add
mov
ja
cmp
mov
mov
stc
and
mov
push
xor
push
popf
ss
pop
sarb
insl
std
aaa
xchg
cwtl
call
mov
lea
nop
push
add
pop
pop
mov
incl
xorb
push
pop
mov
mov
sub
std
ja
dec
shl
insl
addb
xor
mov
sahf
push
pop
mov
mov
sub
cs
inc
jle
push
lcall
push
mov
decl
add
mov
or
jnp
cmp
jbe
pusha
call
shlb
push
adc
adc
dec
adc
mov
xor
test
mov
dec
xor
add
mov
jl
jo
jp
pop
jecxz
in
mov
clc
call
mov
sbb
test
enter
add
adc
jnp
sbb
add
push
js
and
add
sbb
repz
sti
inc
or
sti
testb
and
jg
jno
inc
adc
add
jo
mov
push
mov
push
hlt
add
out
xchg
mov
or
bound
mov
sub
mov
sub
add
mov
inc
mov
pop
adc
or
lahf
xor
cmc
add
xor
test
popa
cli
addr16
cmp
sub
outsl
idivb
inc
dec
mov
nop
hlt
lock
addl
call
mov
dec
cmp
mov
or
pop
adc
cmp
decl
mov
and
mov
pop
add
mov
cmp
mov
mov
pop
cmpb
mov
pop
jno
jo
mov
adc
ret
adc
lret
add
jno
and
or
or
mov
xchg
and
ret
jno
or
mov
ja
lock
push
shrb
inc
data16
xor
pop
test
lods
std
or
add
out
or
mov
mov
or
jno
mov
mov
mov
jno
adc
push
mov
clc
pushl
xchg
add
sbb
fdivs
xchg
xor
mov
mov
pop
cmc
inc
sbb
loopne
nop
mov
call
stos
add
mov
nop
jb
add
incl
lods
fsubl
and
push
jo
call
sub
or
pop
test
mov
inc
push
ret
xchg
add
xchg
lods
inc
add
push
sub
mov
je
cmp
fwait
xor
mov
sbb
xorl
sub
or
mov
mov
add
push
mov
push
cmc
mov
lcall
add
cmpsb
cmpb
mov
in
repz
cmc
sbb
std
xchg
jo
outsb
pop
add
cs
push
fdivs
mov
mov
xor
pop
dec
sub
xor
xchg
jbe
repz
pop
and
ret
xorb
sbb
and
fisttpl
mov
jo
sub
lods
call
pop
cld
or
repz
repz
xor
or
pushf
fmuls
lock
mov
jo
xchg
stos
adc
and
es
pop
push
roll
les
xchg
adc
mov
adc
sub
jle
push
push
jo
add
jge
or
adc
bound
xor
out
inc
ret
stos
or
test
and
insb
pop
mov
subl
push
xor
add
mov
add
rclb
push
lods
jo
adc
xchg
mov
int3
xor
rcr
inc
imul
push
xor
pop
jl
shll
andl
movb
fsubrs
mov
xor
adc
out
shlb
xor
xor
fiaddl
mov
add
push
es
jo
sbbl
cwtl
mov
jge
mov
and
adc
sti
incl
fs
loopne
xor
xchg
jo
dec
rolb
lret
add
xor
cld
add
scas
mov
paddsb
sbb
popf
or
sub
add
push
adc
cltd
mov
lahf
push
or
mov
nop
fists
mov
aaa
push
sub
jmp
popf
popf
lock
push
mov
inc
jb
or
xor
sbb
cmp
push
daa
mov
mov
imul
testl
notl
xchg
pop
or
aas
push
xchg
lea
aaa
call
jne
out
scas
jne
das
adc
xor
xor
js
jle
pop
add
test
push
ret
je
sbb
decb
push
ds
mov
jmp
mov
xor
ljmp
lods
or
and
pop
sub
jno
out
and
pop
mov
jne
jo
je
shl
jg
call
mov
pop
jmp
jno
xchg
push
xor
cmpsb
pop
pop
lock
incl
xor
mov
xor
out
add
mov
sbb
lret
push
dec
jno
lock
jmp
mov
xor
testb
xchg
mov
test
mov
outsl
dec
neg
or
pushf
lock
adc
pop
or
lods
mov
jecxz
jo
mov
sbb
and
or
gs
xchg
pushf
adc
es
inc
movsb
add
pop
sub
sub
push
add
sub
or
xchg
lret
bound
dec
mov
and
mov
lock
mov
movsl
jo
adc
repnz
xchg
add
adc
jmp
mov
fmull
test
nop
inc
dec
cli
pop
or
daa
push
ret
testb
bound
adcb
js
jle
add
mov
jno
jmp
ret
inc
xor
or
jp
add
add
addl
pop
cs
mov
idiv
neg
pop
mov
pusha
cmp
or
add
lds
orb
add
sahf
push
push
addb
addb
mov
pusha
outsl
in
outsl
rolb
sti
push
adc
push
sbb
outsb
adc
orb
ret
bound
loopne
and
fnstcw
out
loope
push
fidivrs
and
sbb
jge
xchg
push
sbbb
or
cmpb
dec
aam
imul
push
adc
les
or
push
inc
cmp
mov
mov
rclb
sbb
subb
jecxz
add
incl
enter
orb
xchg
divl
fiaddl
sbb
call
xchg
adc
divb
xchg
inc
fmull
push
loop
jmp
mov
and
adc
sarl
jl
add
pop
or
ret
test
fsubrs
sbb
dec
fs
adc
mov
ljmp
fnstsw
mov
add
into
adc
push
scas
sub
pop
fildl
or
mov
cli
ret
mov
push
test
add
jne
je
pusha
daa
mov
std
add
push
pusha
or
and
push
and
int3
test
or
push
pop
jmp
inc
mov
test
xchg
jg
or
fucomip
leave
cmp
call
sub
cmp
jl
xor
sub
stos
inc
sub
adc
adc
ljmp
sti
or
rol
sub
add
add
adc
test
push
mov
add
movsb
add
leave
mov
lcall
push
push
xchg
fdivrs
jbe
push
xorb
rolb
addb
adc
lahf
inc
cld
adc
rcrl
mov
rorb
lods
fildl
mov
sub
cld
popf
xchg
adc
push
mov
push
mov
and
add
add
inc
mov
sbb
or
leave
lea
movsb
clc
scas
push
cmp
add
mov
jne
xchg
fistpll
or
xor
movsb
adc
mov
loop
push
aam
sbb
jp
scas
bound
push
xor
test
xchg
js
fs
adc
jl
divb
je
clc
push
cmpl
loope
jle
out
inc
add
sub
add
arpl
fstl
loopne
aam
in
inc
js
out
test
pop
xor
push
pusha
xor
push
add
and
dec
inc
push
loopne
pusha
pop
mov
outsl
aaa
xchg
cs
add
popa
add
inc
add
adc
and
jl
xchg
adc
bound
add
dec
and
xor
push
int3
rolb
add
mov
jb
mov
add
add
add
loop
xchg
sbbb
inc
pusha
adc
cmp
js
pop
cli
add
push
xor
xchg
fmuls
imul
xchg
lods
out
loop
aam
enter
mov
test
add
jl
test
dec
xchg
dec
ret
popa
icebp
jmp
ja
add
or
ds
loopne
inc
ljmp
push
sarb
pop
jp
mov
jg
adc
movsl
mov
lea
insl
bound
data16
add
and
cmpb
loopne
jle
cld
incl
mov
cmp
pop
loope
ret
or
popa
hlt
jmp
mov
hlt
push
imul
aas
dec
or
mov
repnz
dec
mov
mov
push
pusha
aas
mov
negb
call
out
mov
pusha
sbb
sbb
add
mov
lock
xor
inc
xchg
loop
jne
push
in
arpl
lea
push
lret
mov
xchg
ficompl
sbb
add
jne,pn
movzwl
frstor
cmp
in
jo
sbb
push
aam
push
sbb
ret
lods
out
sbbl
gs
xchg
mov
or
inc
add
push
addr16
xor
pusha
lea
bound
push
test
lock
js
icebp
adcb
int3
dec
cmp
dec
fs
out
mov
mov
nop
rclb
repnz
lcall
mov
xchg
or
jb
repnz
adc
lock
lods
shl
pop
mov
xor
pop
mov
xchg
out
mov
or
cli
add
and
pop
mov
jg
sbbb
hlt
mov
loopne
shlb
call
test
es
add
insb
mov
cs
sbb
adc
call
jne
int3
xor
nop
mov
ljmp
push
mov
adc
data16
out
aas
pop
das
clc
and
popa
xchg
ljmp
loopne
xchg
popa
data16
or
adc
test
push
ss
and
lock
cld
add
loope
outsb
arpl
inc
pop
movsb
in
sub
insb
fisttpl
stos
xor
insb
inc
adc
dec
dec
popa
pop
div
mov
aad
push
repnz
test
pop
jg
clc
das
mov
or
push
cltd
xor
inc
leave
or
mov
add
pop
test
and
lock
pcmpgtd
add
dec
incb
dec
add
test
ss
push
inc
push
mov
enter
les
or
push
mov
inc
jo
and
out
add
lock
jg
lods
jbe
adc
jb
or
sub
mov
stos
add
mov
xor
inc
cmp
adc
sub
adc
jne
sar
fistps
or
mov
pop
mov
xor
and
negb
out
and
cli
orb
aaa
push
jg
mov
or
adcb
push
aad
add
add
jo
insb
mov
lock
test
repnz
rorb
mov
dec
push
pop
push
js
jb
pop
cmpsb
adc
xor
imul
mov
or
lock
adcb
outsl
andb
and
push
push
xor
fisttpl
sbb
jo,pn
cli
sbbb
test
xchg
adc
mov
cmc
into
adc
mov
adc
lock
pop
lret
or
je
xor
adc
sahf
pop
shl
push
incl
cmp
cld
shll
test
and
push
jl
aaa
imul
cmc
mov
mov
sub
inc
sarl
cmp
push
in
decl
dec
jb
jo
dec
jo
cmp
or
inc
xor
pop
add
in
sbb
test
ljmp
inc
xor
je
add
sbb
push
clc
out
out
cld
add
mov
mov
push
jge
or
jo
jo
xor
cli
icebp
mov
clc
inc
xlat
rcr
mov
mov
mov
movsl
push
pop
xor
repz
call
push
outsl
inc
add
or
adc
xorb
decb
shll
jo
xor
mov
leave
add
popf
xchg
sbb
pop
jb
aam
mov
inc
or
sahf
inc
cs
ret
lcall
sub
adc
xlat
call
loope
rorb
sar
dec
inc
ljmp
jo
mov
and
subb
andb
sbb
adc
lret
or
mov
call
pushl
nop
mov
jmp
addw
addb
dec
outsl
xchg
jo
sahf
mov
int
mov
jge
fisubrl
or
scas
cmpsb
jae
sbb
clc
and
push
pop
mov
cli
popf
xor
movb
pop
jmp
stos
popa
fnstcw
xor
leave
cmc
test
push
or
scas
adc
jb
lret
lret
push
mov
push
xacquire
inc
jo
lock
ja
fidivrl
loop
add
jb
scas
add
sbb
or
aad
sub
adc
ds
ja
je
or
mov
aaa
je
xor
pop
xor
push
lcall
pushf
and
jae
mov
enter
std
das
js
out
pop
mov
inc
mov
add
cld
inc
cld
cmp
dec
popa
test
pushf
jmp
xlat
movsl
inc
popa
xor
add
lcall
mov
decl
lmsw
cmp
jne
add
mov
sbb
jmp
das
fcoms
cmp
xchg
add
inc
add
pop
sub
pop
ds
mov
adc
push
icebp
xchg
pop
call
icebp
xor
add
dec
add
int3
dec
add
and
sar
mov
inc
sbbb
mov
out
test
je
and
enter
jb
mov
pusha
lock
lock
in
add
pop
call
hlt
test
ret
xor
iret
adc
push
ljmp
in
cmp
xchg
push
push
push
es
or
push
pop
hlt
pop
push
push
mov
cmp
je
mov
cld
lret
test
inc
loopne
sub
xor
movsb
lock
xor
xchg
ds
mov
sub
in
xor
sbbl
inc
inc
je
idivl
xchg
clc
enter
jmp
adc
gs
inc
test
push
pushf
pop
cmp
jbe
gs
and
mov
add
je
lea
mov
add
jl
mov
mov
pop
and
adc
jne
cmp
int3
test
lods
mov
into
ss
stos
add
repnz
stos
or
test
push
hlt
int3
xchg
and
jle
cmpsb
and
clc
inc
ja
adc
ja
xchg
jmp
shlb
lock
and
jmpw
cmpsb
incl
fdivr
fsubs
mov
mov
mov
inc
mov
aam
jne
add
mov
xlat
fwait
ret
add
adc
cmp
push
push
add
icebp
fbstp
push
inc
mov
xchg
test
or
lock
jg
cli
add
xchg
push
xor
pop
pop
jne
in
das
mov
xor
inc
adc
adc
int3
push
xor
and
xor
mov
push
sub
lock
jo
sub
dec
call
jno
jp
sbb
mov
pushf
ljmp
dec
repnz
push
push
xchg
pop
add
jo
push
adc
vpshufhw
mov
inc
call
or
pop
pop
xor
rolb
push
or
or
xchg
xchg
inc
xor
mov
imul
jb
jno
mov
hlt
cmp
je
adcb
add
rolb
sub
aam
mov
push
add
lock
or
orb
push
mov
add
cmpl
inc
adc
or
ss
dec
xchg
cmpxchg
enter
sbb
adc
lds
in
repnz
outsl
mov
call
add
mov
jbe
mov
pop
adc
shlb
xor
add
xor
pop
mov
inc
in
mov
adc
push
test
xlat
pop
xor
aam
movsl
es
or
add
sub
or
adc
sub
sti
repnz
xchg
push
adc
mov
or
fistpll
or
xchg
xor
mov
adc
and
add
test
rcrl
and
punpckhbw
inc
in
repnz
or
shrl
and
xacquire
sbb
jp
xor
das
pushf
sti
jne
mov
hlt
and
and
into
mov
fcmovu
inc
sbb
xor
push
add
test
cmpb
add
dec
xchg
ret
push
add
cmc
das
subb
test
mov
lock
or
fmuls
dec
in
mov
jmp
mov
pop
or
add
insb
js
lret
decb
or
pop
dec
adc
cli
add
pop
jo,pn
mov
push
mov
sub
aaa
mov
in
adc
rclb
mov
mov
adc
ffree
sbb
or
inc
rorb
hlt
and
mov
jmp
hlt
push
loopne
cmp
cmp
or
fwait
pop
push
je
ret
mov
push
rorb
std
in
add
repnz
push
lock
popa
jbe
insb
adc
and
sub
mov
int
movsb
adc
mov
xchg
call
sbb
mov
mov
sub
clc
pop
imul
flds
push
aam
rcrb
rcrl
mov
call
popa
fmuls
sbb
lret
or
xor
mov
bound
cmp
addb
xor
adc
add
sub
call
push
cmp
mov
add
push
les
jne
mov
shlb
hlt
je
out
lea
xchg
insl
pop
fisttps
call
sbbl
and
inc
add
out
push
and
push
mov
inc
push
mov
or
sbb
adc
push
mov
ss
adc
add
je
test
das
shlb
jmp
test
cmp
push
outsb
sbb
dec
pop
lods
add
enter
mov
push
xor
mov
xchg
addb
xor
push
and
fwait
or
or
ss
fidivrl
jbe
sub
fistpll
pop
sarb
xchg
add
pop
enter
shrb
and
cmpl
aaa
or
push
jp
sub
add
imul
lds
cmpb
jb
and
push
dec
dec
call
mov
push
push
loop
mov
mov
xchg
or
adcb
and
dec
enter
add
pusha
push
adcb
push
rorb
es
pushl
test
inc
das
jne
jbe
sub
mov
addl
fmull
mov
rolb
and
in
xor
adc
movb
xchg
adc
ret
orl
mov
xor
xchg
cmp
inc
cld
mov
sarb
ret
test
cmpsb
mov
cli
mov
enter
bound
into
xchg
push
in
mov
push
in
and
push
dec
xchg
shlb
pop
jb
pop
inc
rorb
stos
js
sbb
inc
in
fdiv
push
and
adc
add
shrb
jne
mov
imul
adc
add
pop
dec
mov
or
aas
repnz
shlb
pop
les
and
pop
shrl
sbb
mov
mov
push
xor
test
clc
xlat
adc
mov
add
mov
ss
cmp
ret
fcoms
test
or
jbe
rclb
xchg
popf
xchg
lcall
add
inc
scas
clc
test
mov
dec
cmp
rcrb
into
xor
js
or
push
add
addb
lods
hlt
add
sti
loopne
shl
jne
test
mov
movzwl
or
xor
rcll
push
push
mov
push
mov
jb
ja
rcl
loopne
adc
dec
jg
test
popa
outsb
jp
adc
jmp
fsts
cwtl
xor
mov
pusha
push
repnz
mov
cld
cli
sbb
cld
sub
mov
loopne
hlt
rorl
mov
jne
addb
xchg
and
rclb
sub
fs
mov
and
ret
push
push
inc
push
inc
out
call
and
into
in
push
inc
loopne
and
push
bound
pushl
or
dec
push
popa
push
adc
push
imul
loopne
pusha
add
add
popa
jo
add
xlat
sbb
and
jg
inc
adc
adc
add
push
jbe
mov
ljmp
adc
add
and
and
inc
add
in
pop
sti
jmp
mov
add
and
shll
je
cmp
sbb
push
out
add
mov
mov
incl
or
inc
das
add
pop
xor
jno
xchg
decl
lds
mov
bound
movsl
cmpb
add
add
aad
loopne
inc
inc
sub
popf
or
pop
push
adc
sub
cmpsb
add
add
push
rolb
inc
das
nop
push
cmp
or
hlt
loopne
lea
mov
gs
push
insl
fldt
xchg
xorl
pop
mov
call
inc
shl
mov
jmp
arpl
adc
mov
inc
mov
les
std
pop
and
rcrl
pusha
stos
dec
sbb
pusha
and
inc
add
xchg
mov
insb
enter
push
pop
push
call
inc
jmp
push
pop
xchg
popa
enter
dec
mov
mov
bound
jb
inc
sbb
inc
call
or
mov
insb
sub
in
je
pusha
pop
fidivl
jecxz
bound
jg
add
movsb
bound
lock
ljmp
add
data16
dec
mov
sub
loopne
mov
push
data16
pusha
and
sub
fimull
subl
fdivrp
xchg
pop
jl
adc
and
mov
adc
add
inc
insl
addb
dec
test
or
outsb
data16
mov
pusha
xchg
fcmovu
aad
push
push
pop
add
pusha
and
push
sub
sbbb
add
adc
or
je
cld
leave
mov
gs
adc
mov
jle
inc
out
inc
les
addl
cs
subl
inc
push
sub
xchg
fidivrl
addb
decl
dec
jl
stc
xor
push
insb
add
mov
cmp
inc
add
ljmp
adc
sti
sub
push
adc
jmp
mov
add
or
addb
or
ds
popf
add
xor
stc
jmp
push
add
sti
stos
add
stc
or
mov
jmp
xorb
push
loope
sti
inc
jl
pop
test
add
add
mov
neg
add
inc
jmp
or
push
jmp
add
sub
fnstsw
dec
idiv
push
inc
repz
pop
mov
sub
jnp
je
mov
and
sbb
addb
push
fisttpl
push
and
dec
lea
nop
sbb
clc
jg
push
or
xorl
add
or
add
add
xor
ja
data16
sbb
sub
pop
inc
out
icebp
pop
rcrl
shll
lds
mov
mov
xor
sti
cmp
push
ret
or
lret
or
ds
or
ret
movsb
sbb
pushf
mov
add
pop
and
sub
jmp
mov
push
mov
push
or
loopne
mov
negb
sti
fbstp
xor
xor
movsb
inc
adc
mov
push
adc
std
jmp
lea
rcrb
xor
ret
mov
inc
sti
xor
push
add
mov
add
loopne
dec
mov
push
jge
loopne
test
into
rol
mov
into
ss
imul
loop
or
add
data16
subb
jmp
inc
lds
js
je
outsb
or
or
jp
inc
lock
icebp
rdmsr
jmp
sahf
or
or
fbld
push
or
cmp
push
inc
sub
fdivs
xor
jbe
loopne
and
xor
mov
jp
icebp
or
or
cmc
mov
mov
icebp
mov
pushl
ror
mov
cli
outsl
mov
lock
incb
sbb
lock
jbe
mov
xor
inc
shl
fidivl
test
mov
aas
dec
je
adc
mov
popa
test
pusha
and
adc
add
xchg
cmc
jmp
mov
push
and
xor
cmp
cmpsb
jge
inc
add
jmp
dec
mov
add
je
mov
xor
dec
inc
sub
sbb
fs
incl
insl
scas
test
push
xor
mov
push
dec
xor
clc
jmp
mov
call
psubsw
mov
push
and
fdiv
lods
and
mov
movzbl
sub
add
sbb
enter
sahf
fstl
mov
aam
mov
sbb
add
icebp
cmp
and
jecxz
sar
jg
pop
ret
add
add
jne
cmpl
adc
sti
mov
adc
add
jo
cmp
or
xor
lret
sbb
clc
outsl
cli
pushl
out
mov
adc
push
or
sbb
pusha
jno
lret
mov
jae
mov
movb
enter
lock
adc
mov
sub
loop
pusha
pusha
sti
add
jmp
push
outsb
xor
mov
xor
mov
adc
push
add
add
sub
add
fcompl
in
mov
faddl
repz
cmp
and
pusha
jg
jg
stos
push
adc
repnz
adc
mov
add
jb
mov
cmp
lods
std
orb
test
cld
inc
inc
lods
cmp
in
jno
int
push
jmp
je
lock
add
cmpsb
test
mov
clc
cld
adc
ficoml
inc
or
rolb
push
mov
dec
and
dec
mov
popf
orb
pop
xor
mov
adc
cmp
adc
sub
and
lret
mov
adc
insb
out
arpl
push
mov
adc
or
mov
lahf
and
jne
ret
or
ret
popa
jl
adc
mov
jg
cmp
cmp
je
pop
xor
add
xor
xor
or
in
shrb
dec
outsb
push
xor
jb
add
mov
sti
xor
les
fbstp
mov
repz
jno
sahf
add
sahf
cmp
jno
or
mov
xor
xor
adc
and
js
std
shl
add
je
fsubrs
je
cmp
mov
test
std
lcall
and
jo
jmp
or
jno
pop
or
and
jo
lock
fcmovu
je
loopne
aam
push
mov
addl
and
mov
aas
addb
jg
dec
pop
je
insl
jb
or
fidivs
pusha
sti
repnz
cmpsl
ret
jmp
push
aas
cmp
pop
sbb
pop
aas
adc
dec
lret
in
mov
adc
add
sbb
pop
push
andb
sbb
pop
scas
push
add
inc
nop
inc
pop
push
imul
or
or
stos
mov
cmpsb
incl
jno
or
dec
adc
mov
mov
les
adc
incl
fnstenv
lods
or
jo
jno
dec
call
sbb
aam
and
mov
xor
test
cs
stc
push
bound
dec
lock
mov
mov
or
and
movsb
adc
sbb
push
mov
fnstsw
insb
pop
adc
cmc
icebp
sbb
icebp
adc
add
sub
and
add
and
and
jecxz
adcb
test
add
mov
fidivs
insb
outsl
fisubrs
call
sub
jo
sub
or
inc
iret
xchg
or
inc
test
mov
cltd
or
mov
mov
fistpl
ret
sti
cs
hlt
add
icebp
adc
sti
mov
lock
adc
or
inc
ja
pop
or
mov
or
mov
gs
or
mov
adc
or
sub
hlt
add
mov
sbb
mov
jno
mov
pusha
or
inc
testb
xchg
loope
inc
mov
arpl
pop
cmp
xor
dec
cmp
dec
mov
add
es
je
dec
mov
mov
daa
adc
inc
xorl
add
jmp
mov
xchg
jl
es
shll
cld
cmp
xor
sub
rol
push
es
mov
or
dec
ja
mov
movsl
call
mov
movsl
xchg
fdivrl
lock
pop
test
into
fcmovnbe
jg
add
movsbl
sub
mov
jg
imul
insl
mov
ds
addb
fistl
sub
shr
pop
pop
sbbb
pushl
pop
mov
or
fwait
push
add
rcl
add
mov
add
sub
ja
jb
or
fisttps
ja
mov
lds
pop
pushf
jne
test
mov
push
jl
orb
pop
xorl
and
in
pop
pop
adc
fmull
xchg
shl
and
test
dec
andb
int
pop
fucomi
push
shll
and
push
push
cmc
add
or
sbbb
bnd
cli
or
addl
push
hlt
call
inc
popa
xchg
inc
ret
add
andb
insb
ljmp
subb
pop
push
test
and
les
rcll
pop
test
shl
inc
popf
or
ret
add
push
movb
stos
rolb
cmp
push
ret
dec
repz
mov
mov
test
cld
shlb
fistl
scas
pop
rolb
or
in
jmp
mov
call
add
shr
sub
push
cld
adc
aas
xchg
fs
inc
xchg
imull
rcll
adc
xor
xchg
adc
mov
rolb
cmp
enter
fwait
mov
rclb
cmp
testb
and
ret
clc
pop
jmp
lcall
stc
lds
add
jmp
mov
movsb
test
mov
pop
mov
sbb
mov
or
inc
test
scas
and
test
and
shlb
push
rolb
adc
mov
mov
adc
dec
jl
enter
fildl
inc
sbb
aaa
or
enter
roll
enter
mov
rorl
pop
inc
shlb
repz
sbb
adcb
je
add
mov
sbb
rep
and
ljmp
and
icebp
inc
test
arpl
add
jne
rolb
or
test
fsubl
mov
nop
aaa
or
lcall
inc
testl
jne
shrb
push
rcll
and
jmp
sbb
mov
dec
jecxz
test
pusha
orb
addb
fbld
movb
xchg
sub
sbb
out
ret
lock
loop
sbb
ljmp
add
clc
sub
pusha
cmp
lods
aam
out
loope
jbe
fcmovne
scas
ljmp
xor
dec
addb
sub
mov
xchg
rcrb
jbe
adc
dec
or
push
loopne
mov
pushf
xchg
pusha
xchg
call
pusha
addl
or
out
add
lcall
or
loopne
fs
pusha
jae
in
add
add
in
scas
sub
mov
inc
mov
push
movsbl
jl
call
push
pop
push
inc
inc
push
pop
out
inc
mov
pusha
xchg
andb
or
and
sbb
or
dec
and
jne
inc
enter
leave
adcb
pusha
or
add
sub
fcos
incl
idiv
jecxz
adc
psubsw
push
je
subl
cmp
jle
jl
adc
inc
movsb
and
cs
std
mull
jmp
mov
fdivr
pop
adc
fisubrl
and
fadd
aad
faddl
xor
xor
sti
bound
cmp
xor
fdivr
add
mov
mov
andl
add
outsb
or
cli
sub
or
push
nop
bound
mov
addr16
clc
or
fsubrl
clc
push
ds
or
pusha
and
xor
push
inc
or
push
and
mov
dec
push
pusha
mov
out
jmp
loop
imul
in
or
jmp
shlb
pop
jmp
push
rclb
xchg
inc
push
add
add
mov
jo
lea
das
mov
push
xchg
outsb
xor
in
push
xchg
add
jl
cld
idiv
mov
ljmp
xchg
fwait
loopne
popa
jns
sub
loopne
adc
push
mov
inc
roll
test
call
ret
stos
cmp
add
mov
xchg
pushf
and
jnp
add
out
and
push
add
mov
ss
out
mov
divb
cmp
mov
leave
mov
pop
or
xor
or
idivb
add
call
sbb
nop
push
dec
pusha
adc
lods
push
cli
ss
popa
or
int3
and
aam
xchg
nop
add
mov
jg,pn
jl
cmp
jae
loop
add
add
jae
sbb
lods
mov
jg
xchg
jno
mov
pusha
pop
ficoms
gs
outsb
cltd
inc
cld
mov
lods
adc
je
clc
xchg
out
sub
sbb
jbe
or
mov
incl
sbb
pusha
js
call
add
lods
or
push
stos
mov
pop
sbb
jmp
mov
mov
and
mov
jg
outsl
adc
xchg
dec
jno
adc
aam
or
jb
push
loopne
shl
addr16
mov
mov
adc
mov
out
lock
in
jg
test
cmp
or
icebp
lcall
mov
incl
sbb
push
mov
xor
adc
mov
ret
adc
mov
mov
je
adc
push
sub
mov
das
add
add
and
mov
sbb
add
mov
in
aas
xor
add
out
xor
xor
loop
mov
xor
lock
sahf
test
or
mov
lock
into
jg
ror
add
fmull
andb
fucomip
jge
xor
incl
fisttpl
lcall
lock
sub
outsb
ss
roll
fisubs
lcall
fistps
fwait
mov
pop
push
cld
xor
xor
cmp
cmp
sbb
or
arpl
clc
push
xor
inc
mov
stc
lret
xchg
jmp
xor
sub
in
lock
or
pop
or
sete
xor
clc
dec
cld
mov
jmp
mov
sahf
clc
out
xor
sub
rclb
cld
xor
adc
pop
hlt
mov
add
sub
ret
inc
sub
and
add
insb
adc
push
vpshuflw
incl
pop
add
xor
call
insl
popa
loopne
add
jp
shlb
jae
mov
movsb
xchg
and
add
jo
adc
push
rorb
aas
mov
cld
xor
inc
fs
add
lock
aam
mov
jl
or
push
xor
shlw
xchg
movsb
xor
mov
pop
add
inc
sub
data16
jns
sbb
js
dec
or
mov
sahf
adc
imul
adcb
xor
pop
mov
je
lcall
add
mov
cmp
add
cmp
add
mov
insl
or
outsl
insl
or
insb
push
and
mov
cld
inc
ds
imul
or
mul
mov
xlat
adc
push
add
add
xor
fiaddl
mov
inc
adc
sbb
dec
mov
adc
jg
loope
divb
xchg
add
call
imulb
mov
ds
jp
outsb
adc
enter
sub
divl
out
cwtl
adc
mov
and
mov
jmp
int3
rorb
ljmp
push
push
in
add
jno
aad
push
adcb
pop
lret
js
push
test
pusha
inc
cwtl
movl
pusha
xchg
pushf
or
rorb
fs
dec
push
inc
dec
mov
rolb
xorl
pop
aad
cs
mov
movb
adc
clc
xor
call
xchg
cmpsb
sbbb
or
dec
pop
insb
xor
adc
lods
xchg
dec
rolb
out
pop
in
cmpsl
adc
stos
or
inc
cld
pop
adc
push
test
mov
or
push
shl
pop
and
cmc
call
jne
and
mov
jo
jbe
cmpb
das
movsl
out
add
lret
push
clc
xor
adc
dec
sub
jle
clc
aaa
test
push
lock
sub
loope
dec
add
inc
adc
int3
repnz
call
loope
jo
adc
inc
add
cmpsb
mov
push
mov
adc
es
xor
push
adc
insb
push
add
xor
push
push
push
addl
xchg
mov
fidivrs
or
mov
cmp
sub
es
sub
adc
push
popa
push
jnp
push
ja
cld
mov
addb
or
add
std
pop
mov
out
or
jl
push
or
imul
popa
mov
jp
and
ljmp
cmp
lea
pop
xchg
scas
andb
xchg
cmp
inc
cmp
inc
ljmp
adc
out
outsl
insl
test
repz
pop
add
imul
subl
ja
push
dec
sbb
dec
push
mov
loopne
jp
fs
outsl
nop
addb
shl
imul
inc
add
jno
inc
adc
mov
leave
shlb
cmp
lock
call
movsl
hlt
incl
imul
cmp
mov
lock
cmp
adc
int3
mov
or
clc
not
mov
mov
daa
scas
pop
xor
call
enter
shlb
cmp
or
lcall
inc
push
push
inc
and
enter
add
inc
andb
mov
push
cmp
je
pushf
subb
ficoml
jmp
mov
mov
sbb
pop
xor
jb
test
sbb
sbb
xlat
sete
lea
add
int3
fmuls
or
pop
test
or
jmp
sbb
addl
scas
pop
push
scas
push
inc
jo
dec
test
das
add
push
mov
call
mov
inc
inc
test
rcrb
andb
push
incl
hlt
mov
push
je
jl
xor
je
out
cmpsb
imul
xor
pushl
and
inc
xchg
test
cmpsl
dec
movb
shlb
nop
xchg
pop
mov
pop
call
mov
fidivrl
dec
jo
arpl
jp
fisubl
mov
data16
sbb
mov
mov
push
insb
out
movsl
dec
push
adc
sti
jmp
orl
cmpb
or
add
out
mov
inc
jbe
movsb
ljmp
or
or
cmpsl
jp
or
in
inc
push
push
mov
mov
pop
jo
out
jb
sbb
shlb
data16
clc
daa
in
or
ljmp
jl
clc
fs
out
mov
inc
mov
fidivs
and
jb
or
in
inc
adc
in
inc
cmpsb
sbb
pop
mov
ret
mov
xor
push
int3
add
lea
or
scas
std
insb
push
push
sub
call
pop
subb
push
mov
mov
add
mov
lret
push
jb
lods
cmp
add
xchg
adc
jo
push
mov
in
test
mov
movb
sub
sub
cmp
jne
push
aaa
mov
xchg
mov
adc
cmpsb
popa
add
call
filds
jp
and
cmpl
dec
jne
jno
mov
dec
loope
int
pop
call
dec
mov
xchg
add
adc
add
out
cmpsb
shlb
or
stos
clc
mov
adc
or
icebp
pushf
outsb
adc
xchg
ss
pop
cltd
int3
add
mov
cmpl
adc
and
jnp
jle
jle
mov
les
mov
lock
sbb
jp
and
je
or
lcall
inc
xchg
es
rolb
dec
cwtl
push
fmulp
inc
mov
test
pop
lods
pop
inc
jmp
lea
jmp
add
into
inc
loopne
nop
cld
std
call
push
xor
pop
pusha
mov
lea
xchg
int3
dec
shlb
in
mov
call
inc
mov
cmp
push
push
sbb
lds
fbstp
pop
add
push
inc
mov
inc
mov
jne
test
add
cmp
gs
cmp
inc
fcoms
faddl
add
or
insb
cs
xchg
push
in
rolb
add
dec
jmp
js
jl
adc
cmp
mov
cmp
adc
int
inc
outsb
es
inc
cs
pop
adc
aaa
inc
and
test
and
call
and
inc
adc
jge
add
mov
in
scas
addb
loop
adc
xchg
push
adc
add
sbb
idivl
or
test
in
jb
int3
mulb
sub
mov
push
or
push
mov
call
inc
jp
push
push
fsubs
pop
lea
jae
adc
or
test
or
lods
push
stc
insb
jl
xor
adc
push
sbb
lock
jecxz
sbbl
andb
loop
adc
ss
jecxz
enter
push
ss
sbb
sub
dec
mov
dec
jp
sbbl
add
mov
call
rcrb
js
bound
test
inc
pop
xor
push
into
add
mov
or
mov
pushf
push
call
sbb
push
sarl
and
add
pusha
in
mov
cwtl
dec
das
add
divb
mov
sbbl
ss
in
aaa
ret
fisttpl
dec
sbb
jmp
mov
adc
bound
lods
dec
imul
pop
sub
leave
add
test
jl
add
test
mov
add
mov
lretw
add
insl
hlt
clc
call
and
xor
and
add
sbb
jl
add
jne
mov
adc
mov
jl
jmp
add
xchg
aas
jns
insb
adc
divb
pop
and
test
jns
outsb
cmpsb
aaa
xor
subb
testl
std
pop
cwtl
sbb
inc
adc
into
gs
andb
out
xchg
push
inc
loopne,pt
call
dec
or
adc
jge
fimull
pop
leave
inc
rol
cmp
add
pop
clc
mov
std
ret
sahf
jb
xchg
insl
call
mov
je
cwtl
mov
push
dec
push
push
xor
inc
lock
push
rol
adc
shlb
clc
add
les
and
sarb
xchg
push
cmp
mulb
fdivp
popf
xor
and
adc
jo
add
les
pop
aaa
sub
setg
add
inc
fwait
cmp
xor
outsb
jmp
jbe
outsb
jmp
sahf
add
cwtl
inc
inc
pop
push
lods
ljmp
shlb
lcall
push
stos
pop
add
scas
cmpsb
push
sti
popa
dec
jne
test
in
xchg
sti
xor
mov
push
jl
mov
push
pop
incl
xchg
subb
bound
test
lcall
xchg
in
scas
jmp
es
push
cmp
cli
adc
jle
mov
push
or
mov
or
adc
jmp
mov
add
add
mov
mov
sub
popa
fcomps
jg
adc
fldt
cld
mov
xchg
mov
pusha
pusha
dec
sbb
aas
ss
mov
mov
pusha
test
call
rcrb
call
call
fs
pop
cli
jb
jmp
inc
xchg
xor
add
inc
push
xchg
aas
push
add
add
inc
inc
add
lds
jl
insb
add
loop
pushl
fimull
adc
and
xchg
cmp
aaa
dec
out
add
mov
push
fistpl
rolb
loope
mov
add
nop
adc
fwait
rorb
mov
stos
in
mov
push
cmp
cmpb
or
jge
jecxz
sub
into
or
cld
incl
adcb
cmpsl
call
add
xor
cld
push
adc
or
push
stos
dec
inc
jmp
pop
dec
pop
jne
pusha
cmp
jbe
push
popa
jo
loopne
aaa
loopne
pusha
jmp
xchg
add
sti
pop
add
loopne
and
add
or
or
or
ss
cs
add
hlt
inc
sub
fsubrs
gs
pop
mov
add
icebp
add
ret
jge
mov
and
push
push
mov
push
xlat
outsb
or
nop
fsubrs
loopne
push
xor
fs
xchg
adc
xchg
jo
dec
shl
dec
shrb
adc
mov
fisttps
add
icebp
ljmp
or
jne
push
fsubp
out
dec
mov
and
inc
fdiv
and
push
lock
fmull
loope
pusha
add
clc
add
shlb
or
mov
mov
cli
cmp
aaa
hlt
lret
mov
loope
cmp
inc
mov
out
ret
loopne
jbe
mov
mov
xor
and
pop
mov
sub
ds
adc
hlt
add
or
mov
jbe
cli
adcl
xor
and
or
jne
js
ja
data16
and
sbb
dec
out
lcall
fisttpll
adc
data16
ficoms
sub
es
inc
pop
dec
sbb
jge
mov
cmp
pop
cmp
mov
dec
jecxz
push
mov
ret
fists
add
mov
inc
inc
xor
push
rorb
or
cld
int
mov
cmp
dec
das
jne
rol
jb
out
pop
pop
add
ret
pop
ret
fiaddl
inc
fisttps
lock
xor
loop
or
add
xchg
inc
adc
mov
inc
adc
loope
fs
add
and
add
fwait
or
lds
aam
sti
lds
sbb
jmp
inc
adc
adc
xor
movsl
cmp
jmp
mov
lea
repz
push
lea
add
and
movsl
jb
jp
or
adc
add
inc
insb
aam
adcb
add
cli
xchg
mov
into
and
mov
lock
mov
les
mov
lcall
add
icebp
add
pop
add
in
mov
jo
add
push
or
add
arpl
shll
xor
xor
test
add
test
cmp
inc
push
ficoms
dec
jo
cmpb
and
mov
call
jo
adc
cli
pop
jo
andl
sbb
mov
das
pop
mov
cltd
add
xor
movb
push
sub
pop
rol
mov
adc
mov
jo
xor
fcoms
leave
aas
mov
dec
or
push
pop
ret
in
lods
mov
ret
inc
insb
mov
mov
lock
jbe
jge
xor
aad
sub
xor
in
nop
out
ja
xchg
lcall
mov
mov
push
pop
mov
or
cld
test
add
push
add
enter
inc
cmp
insl
xchg
dec
sti
or
mov
sub
sub
hlt
pop
adc
je
dec
add
or
add
divl
jnp
push
pop
push
jl
cld
je
xchg
ret
lock
jp
adc
ljmp
xlat
mov
jle
inc
push
mov
dec
mov
jecxz
call
lock
sub
adc
test
push
mov
sti
xor
jle
mov
adc
hlt
mov
lock
and
pop
xor
sub
mov
popa
std
mov
repz
jae
sbb
outsl
cli
jg
xchg
push
adc
lret
push
jae
dec
xor
jo
jg
lock
mov
jbe
and
xor
cmc
add
jae
mov
mov
or
mov
and
in
xor
shl
sub
cmp
fidivl
dec
dec
add
inc
ljmp
sbb
add
mov
mov
or
push
xor
push
pop
and
pop
xchg
pop
cmp
inc
testl
add
cmpsl
push
adc
xchg
sub
or
incl
mov
and
adc
cmp
inc
mov
add
and
orl
lods
pop
push
pushf
cld
push
scas
hlt
lret
add
add
cmpsl
mov
dec
and
adc
xchg
sub
lds
pop
pop
int3
rolb
lock
jo
pop
add
push
mov
mov
bound
mov
mov
push
cld
and
fwait
xor
inc
jmp
mov
pop
dec
adc
jg
mov
mov
pop
or
mov
or
push
stos
nop
inc
jo
adc
clc
daa
and
cmpb
push
pop
cmpsb
push
ljmp
pop
incl
push
pop
add
pusha
insb
jg
popa
je
jmp
shr
dec
cmp
mov
xchg
mov
in
pop
mov
cmp
lock
hlt
or
pop
inc
movlps
adc
cli
and
jg
pop
mov
test
je
call
or
or
or
lods
clc
lcall
mov
jne
push
push
icebp
or
xor
inc
sbb
pushf
xor
call
cmp
stos
xor
jo
mov
push
jb
jbe
insl
cmp
fildll
call
nop
testl
inc
loope
pop
je
push
push
inc
mov
leave
inc
in
mov
fidivrs
add
sbb
xor
or
faddl
decb
rcrl
xor
jb
xor
ret
into
and
cmpl
pop
adc
add
adc
inc
add
mov
mov
popf
pop
jb
int
shlb
ret
jno
adcb
pop
mov
adc
les
cmp
xor
jbe
pusha
clc
decl
jo
jl
adc
lods
push
xor
lock
sarb
push
jo
pop
pop
test
iret
out
inc
clc
popf
sti
and
stc
test
xor
cld
or
in
add
add
sbb
mov
xor
xchg
add
add
mov
addr16
dec
adc
cld
jno
nop
mov
cmpsb
ljmp
call
shlb
outsb
pop
mov
push
ss
sub
je
xor
insb
push
jl
adc
xor
jo
fcoms
addb
sbb
clc
jmp
cmpsl
and
cld
xor
xchg
xor
lcall
push
and
test
inc
xchg
mov
cs
push
stos
ret
les
scas
clc
inc
jle
mov
push
push
pop
add
adc
xchg
inc
fsubrs
cld
cmpsb
pushl
jno
xor
sub
pop
add
xor
out
pop
std
add
loopne
sbb
pop
inc
and
jmp
in
push
repz
cmpsb
ficoms
fsubr
repz
add
cmp
adcb
and
test
pusha
lea
popa
clc
add
decl
xor
inc
mov
mov
test
and
lea
hlt
mov
inc
aam
add
xchg
jo
xor
scas
ret
pop
mov
mov
mov
add
dec
ss
jne
clc
aas
mov
rolb
pop
enter
add
gs
inc
mov
adc
aam
lret
xor
daa
push
dec
imul
add
jo
jecxz
cmp
mov
adc
adc
test
insb
lret
add
or
push
leave
mov
je
mov
and
adc
incb
adc
jno
cld
mov
mov
js
divl
push
loopne
lret
mov
add
repnz
enter
ljmp
push
mov
xor
xor
jno
adc
cmp
inc
xor
inc
push
xchg
add
inc
and
sub
movb
inc
mov
aas
xor
mov
sbb
push
push
push
xor
inc
jbe
adc
mov
je
call
sub
cmp
paddsb
mov
dec
mov
add
pop
xor
call
add
aam
loopne
lret
js
or
sub
or
adc
sbb
cmp
and
jl
push
cli
sahf
dec
loopne
test
je
push
adc
push
pop
push
inc
dec
jl
fildl
nop
fcmovb
inc
in
adc
add
test
lock
xor
push
cmp
mov
and
aad
cmp
orl
or
add
xlat
xor
addb
or
adc
cs
je
pop
adc
stc
js
fs
add
call
push
sub
push
fildl
and
push
inc
dec
push
mov
outsb
stos
mov
sub
scas
ret
adc
inc
dec
fidivl
inc
and
mov
stos
and
push
push
notb
sbb
cmp
mov
pop
cmp
push
fmull
xchg
push
adc
add
adc
mov
adc
push
sbbb
int
scas
or
cmp
shlb
es
mov
and
push
push
adc
push
repz
loopne
push
aaa
and
sbbb
or
and
dec
adc
inc
testb
jo
adc
jle
pusha
add
lock
lea
mov
pop
sahf
insb
jl
test
add
mov
inc
or
dec
inc
xchg
push
and
adc
incb
sbb
lret
sbb
movsb
mov
sub
fdivrs
repnz
std
rclb
and
inc
jl
add
sbb
xchg
adc
or
mov
cld
inc
lret
rolb
les
loopne
ficompl
call
jg
or
shlb
rclb
aas
add
jp
aaa
mov
xor
incl
add
aam
xchg
ret
movsb
les
scas
add
adc
pop
cs
dec
dec
enter
insb
out
and
sti
popa
cli
xchg
decl
js
roll
push
decb
jo
and
adc
push
js
xor
jp
addr16
lret
mov
pop
jo
je
pop
mov
pop
pop
ret
and
sbb
fs
retw
dec
mov
adc
sub
into
add
ret
mov
dec
adc
test
sbb
push
pop
mov
dec
jae
dec
dec
into
inc
sti
xchg
cmp
mov
fildl
pushf
and
sub
shlb
sarl
adc
inc
orb
aaa
je
push
filds
adc
test
add
shll
rol
into
int3
push
xor
lods
ret
cmpsb
jb
xchg
xor
insl
add
add
out
jne
push
lcall
xchg
test
inc
mulb
push
add
lea
nop
pusha
mov
xor
dec
std
xchg
or
push
adc
adc
rolb
aad
adc
loopne
adc
adc
ret
push
adc
scas
mov
sub
xor
sub
dec
in
inc
mov
pop
jbe
rclb
and
cwtl
mov
xchg
test
push
call
cli
xorb
jmp
or
push
enter
popa
lods
sahf
hlt
adc
jo
andb
xchg
add
xor
jmp
fidivl
add
xor
insl
mov
sbb
xchg
jnp
dec
jecxz
jo
and
jo
inc
cwtl
add
pop
loopne
hlt
pusha
cmpsb
hlt
mov
insb
adc
pop
sub
and
aaa
bound
or
push
add
mov
es
fistps
pop
or
push
loopne
sbb
popa
push
and
shl
sub
push
sub
inc
mov
fwait
and
and
call
push
loopne
or
and
ds
pop
jo
js
fcomps
add
je
pop
xor
push
inc
rcl
addr16
push
push
push
xor
sbb
add
arpl
add
push
sbb
push
loopne
lahf
add
andl
adc
cmpb
shlb
mov
or
aam
cmp
daa
test
dec
ficoms
ja
ficoms
stos
pop
mov
shlb
shrl
ljmp
add
jo
xchg
mov
jo
add
call
pop
pop
popa
inc
test
adc
test
es
jo
orb
in
cld
pop
and
add
mov
inc
out
aaa
icebp
popf
push
pop
adc
bound
xchg
mov
pop
pusha
es
insb
pusha
fs
int3
adcb
inc
adc
push
jmp
jmp
and
inc
test
scas
inc
push
jbe
jns
addb
xchg
add
mov
dec
std
adc
pusha
mov
inc
push
or
push
icebp
fldt
mov
repz
push
in
adc
loopne
popf
or
sbb
and
das
test
and
sarb
jg
insb
arpl
out
loope
pop
mov
adc
call
jecxz
pusha
inc
push
add
pop
fcmovnb
pop
or
push
mov
lea
mov
pop
mov
testl
addb
xchg
add
je
es
add
loopne
hlt
loopne
dec
add
call
adc
jbe
mov
add
mov
add
cmp
test
adc
jbe
loope
jmp
dec
push
dec
loope
movl
pop
inc
pop
and
adc
imul
add
mov
sub
es
lods
or
and
and
ror
je
add
cmc
mov
push
pushw
add
push
mov
aam
lea
or
fcmovb
sub
sub
add
pop
subb
call
inc
mov
pop
lea
das
push
xor
clc
xor
lock
push
cltd
xor
mov
aaa
shr
sti
jno
loope
cmp
popa
adc
mov
add
push
mov
dec
rcrl
outsb
loopne
pushl
sbb
inc
ja
xor
sbb
xor
jmp
mov
js
push
xor
ret
incl
dec
mov
adc
shl
outsl
cld
mov
shlb
lret
cld
into
push
add
xorb
mov
adc
lods
loope
add
lcall
mov
jp
or
dec
inc
popa
or
outsl
dec
or
ss
jmp
hlt
xor
cmp
jp
ja
dec
mov
mov
data16
inc
adc
adc
or
and
add
dec
ret
clc
iret
ljmp
adc
jmp
and
pop
mov
aas
lock
mov
decl
mov
or
mov
sub
lods
cmp
cmp
repnz
jbe
sbb
or
test
xor
mov
nop
mov
mov
cmp
loope,pt
xor
ljmp
sbb
div
scas
adc
mov
xor
aam
add
mov
and
or
insb
jl
test
mov
xorl
cld
mov
mov
mov
xor
lcall
shll
outsb
fisubl
pop
add
sbb
pop
cmp
mov
imul
add
ljmp
sbb
cs
jb
into
add
sbb
pop
pop
in
sub
aas
mov
mov
or
mov
adc
lea
pop
div
pop
jecxz
pop
xor
adc
xchg
or
cmp
adc
sti
js
fiaddl
jl
cs
lock
data16
add
or
or
out
call
leave
ret
push
fwait
mov
js
cmp
lea
scas
adc
int3
add
test
mov
xchg
fdivs
mov
in
mov
push
sub
repnz
adc
imul
mov
xor
cmp
add
call
xor
cmpsb
pop
dec
jmp
mov
sub
mov
jb
cld
jg
jmp
test
call
pop
add
add
add
jl
fistps
inc
call
and
je
mov
mov
xchg
mov
adc
mov
pusha
imul
jbe
add
dec
mov
dec
jle
orb
push
add
loopne
orb
add
or
add
fisttps
xchg
insb
mov
push
test
in
pop
rcr
mov
jle
mov
add
or
pusha
mov
and
xchg
mov
add
jp
pop
pop
data16
jo
pop
scas
inc
jl
sbb
cmp
shlb
pop
jbe
jl
movsb
xor
add
je
mov
pop
and
add
mov
and
je
pop
das
xchg
inc
sahf
mov
jl
jge
das
fdiv
push
sbb
add
jge
or
jmp
fwait
sbbb
adc
add
imull
adc
dec
shlb
je
loop
mov
add
inc
push
or
fisttpl
inc
in
cmp
mov
xor
sbb
xor
jno
jne
adcl
adc
jl,pt
hlt
fdivs
dec
jmp
jo
insb
repnz
add
js
data16
and
ss
lret
hlt
movq
mov
fdivs
add
das
movsl
adc
add
inc
or
dec
add
ss
cmp
mov
pop
xchg
mov
inc
push
mov
and
mov
ds
adc
sbb
adc
lcall
scas
cmp
loopne
cld
lock
scas
lock
xor
cmp
or
pop
repz
jl
push
inc
fcom
inc
inc
mov
fdiv
sub
and
mov
jo
stos
in
pop
inc
xchg
pop
test
push
push
jbe
lock
add
clc
ljmp
cmp
orl
dec
leave
cmp
push
push
mov
ljmp
cwtl
loop
mov
push
test
mov
xchg
mov
leave
orb
icebp
aam
and
pop
and
mov
ja
cli
push
and
jmp
sar
adc
xor
mov
sub
fwait
and
cmp
stc
push
inc
test
push
mov
repz
jg
adc
sub
inc
push
jb
jne
call
or
adc
jg
insb
call
lods
mov
pusha
andl
adc
mov
inc
xor
adc
out
adc
add
je
pusha
je
dec
add
sub
xor
cwtl
fcomip
xchg
push
mov
loopne
sbb
decl
sbb
xor
nop
lods
stos
es
xor
and
fwait
and
rcrb
xor
repz
hlt
push
jo
scas
add
xor
push
mov
pusha
je
insb
divb
mov
lock
and
test
xor
mov
jbe
and
lods
fistl
and
stos
das
test
adc
clc
lock
add
popf
shl
stos
mov
sbb
dec
inc
fistl
push
scas
inc
divl
aaa
cld
fistl
mov
inc
xor
movb
jl
jge
outsl
dec
popa
mov
mov
pop
mov
ss
add
mov
je
push
sbb
ljmp
push
sarl
add
lea
sarb
xlat
adc
add
cli
mov
and
sub
enter
lock
mov
fidivs
jne
cs
xor
xchg
cmpsb
shll
test
outsb
jp
xchg
cmp
cmp
orb
inc
fadds
jp
jbe
subl
add
and
test
sub
push
adc
loopne
and
push
jne
fnsave
ss
or
negl
stos
pusha
movsl
out
daa
mov
jne
sarb
lods
xor
push
cmp
jae
adc
ret
icebp
inc
push
push
shl
clc
fisubrs
adc
cmp
and
mov
jne
mov
mov
mov
or
jb
sbb
lock
and
xchg
andb
xchg
mov
and
xor
adc
loopne
push
xor
mov
jo
je
push
mov
aaa
mov
lock
fiadds
add
pop
xchg
sub
jg
pusha
pusha
mov
pop
test
xor
lret
pusha
adc
repz
arpl
push
add
jbe
add
pop
add
fwait
lahf
sbb
mov
pop
add
lahf
call
leave
add
and
mov
ret
lock
sub
test
jb
arpl
cli
fbstp
or
pop
mov
sub
incl
xor
scas
divb
scas
mov
js
cmp
jp
lock
je
mov
fidivrs
add
push
push
add
inc
and
cs
inc
add
les
test
sbb
ds
inc
sub
or
sbb
mov
scas
fwait
data16
sbbb
jb
push
les
insb
push
scas
add
push
in
outsl
aam
sbb
add
add
lock
add
inc
clc
pushl
movsb
pop
xor
sbb
fistl
xchg
or
xchg
pop
loopne
and
cmp
adc
sbb
inc
leave
pop
ret
add
push
push
push
mov
hlt
scas
sub
aad
sbb
insl
mov
add
std
sbb
adc
orl
and
cltd
mov
aaa
rol
push
and
sbb
daa
dec
fdivs
add
imul
outsb
adc
xor
orb
adcb
or
sbbb
dec
rclb
mov
fnsave
inc
je
or
inc
pushl
dec
jmp
jmp
or
and
lea
sbb
ficomps
testb
dec
push
or
xchg
and
mov
orb
popa
clc
mov
pop
mov
mov
faddl
xorb
hlt
cli
and
ljmp
adc
andl
or
push
test
addb
pop
call
dec
aam
adc
mov
insb
or
addr16
or
add
pop
in
fcmove
xchg
mov
mov
or
pop
dec
call
add
leave
xor
mov
nop
lock
and
andl
and
inc
js
ret
cli
mov
dec
mov
lock
ret
jle
or
or
push
shrb
mov
jne
outsl
or
cmp
sbb
sarb
jnp
or
sub
jne
add
add
push
js
jg
pop
and
into
call
jle
add
and
aam
test
es
add
mov
inc
adc
je
sub
jg
rclb
hlt
in
call
jl
push
cmp
adc
cs
out
xor
dec
push
orl
mov
je
jbe
add
adc
jg
cmpb
mov
je
add
xchg
pop
and
xor
dec
sub
dec
xchg
stos
enter
sbb
mov
push
rolb
push
jg
call
rol
push
addr16
fcmovb
lock
mov
mov
add
jb
sbb
mov
out
in
push
pop
les
adc
jnp
sub
push
js
or
leave
in
jo
push
jo
sub
add
es
mov
enter
dec
sub
add
pop
popa
add
adcl
dec
loop
sub
imul
push
or
adc
mov
iret
mov
hlt
xor
or
sub
shrb
addb
xchg
mov
sub
jo,pt
fisubs
mov
dec
mov
pop
xor
push
xchg
dec
and
mulb
push
jmp
inc
xchg
pop
clc
rcl
adc
push
add
push
mov
add
ja
std
outsl
add
cmp
adc
adc
push
ret
pushf
dec
cld
adcb
movsl
es
and
iret
mov
ljmp
or
cmp
aaa
xchg
mov
pop
inc
xlat
mov
lds
mov
push
adc
nop
addl
popa
push
pop
loopne
aam
jl
mov
loope
mulb
mov
das
xor
cli
dec
inc
mov
or
pop
push
xor
int3
xor
lods
and
aas
cld
pusha
imul
pusha
xor
adcl
mov
and
pop
xor
pop
call
or
sbb
mov
jecxz
mov
sub
mov
loope
ljmp
pop
pop
add
mov
cli
push
inc
adc
in
popa
outsl
fbld
cmpsl
pusha
cmp
inc
test
decl
cld
pusha
sbb
adc
jbe
lock
ss
inc
and
xchg
inc
add
out
cwtl
loop
xor
jecxz
dec
es
movsb
dec
insl
or
push
push
loope
mov
cmp
add
adc
clc
and
stos
movsb
and
xchg
std
mov
adc
pop
dec
or
sbb
push
xchg
outsl
xor
xor
add
pop
sti
loopne
popa
pop
fs
push
pusha
and
pusha
add
ja
push
cltd
cmp
mov
fdivs
xor
out
or
fimuls
inc
add
adc
call
mov
and
sbb
repnz
clc
or
outsb
mov
inc
adc
test
jg
pop
arpl
push
dec
pusha
push
add
mov
pop
jge
lock
mov
cmpb
cmp
jno
test
xor
std
shll
and
loopne
cs
push
rcr
or
and
loop
push
cmp
mov
test
and
add
into
cmpsb
add
push
or
push
mov
insb
test
cli
shlb
push
out
pusha
mov
ret
and
lods
mov
and
out
adc
mov
shlb
loopne
xchg
xor
mov
adc
loopne
sbb
adc
aas
adc
jecxz
inc
jmp
jne
pop
rcl
lock
push
push
repnz
call
ljmp
lret
outsl
xlat
and
adc
inc
movsb
or
jne
add
inc
add
clc
pusha
and
jmp
mov
ljmpw
cmp
and
or
adc
popa
pop
les
iret
push
jo
clc
sub
adc
movsl
lea
and
mov
mov
mov
data16
jne
push
inc
add
xor
and
pop
xor
pop
fsubl
inc
add
orb
call
hlt
sbb
arpl
push
idiv
and
in
mov
and
sbb
add
subb
out
lock
push
call
or
and
cwtl
pop
jne
je
les
dec
movsb
mov
xchg
pusha
mov
xchg
or
add
and
sti
lods
fst
add
jge
shlb
movsb
jle
push
js
pop
inc
add
in
jg
mov
xchg
mov
dec
ret
loop
int3
mov
jb
notb
mov
inc
and
fcomi
sub
add
clc
pop
adc
or
addb
mov
jb
inc
pusha
and
jl
xchg
jp
jl
pop
pusha
xchg
or
mov
or
aam
fbstp
jge
or
pop
mov
test
sub
pop
mov
hlt
or
jecxz
jbe
push
push
nop
jbe
add
test
push
inc
or
mov
and
xchg
adc
cli
out
push
cmc
addr16
das
pop
out
dec
inc
jg
mov
shl
lock
cmpsb
insb
cld
xchg
jbe
sub
call
or
ljmp
mov
lcall
xor
mov
das
push
mov
testl
xor
mov
daa
xor
add
cmp
push
jmp
mov
or
movsb
lock
sub
lock
sahf
inc
and
inc
adc
mov
add
jp
aaa
jae
ss
add
fbstp
repnz
fisttpl
jg
or
adc
pushl
push
mov
add
jmp
lea
lahf
mov
xorl
test
incb
sbb
call
sti
lods
incb
outsb
call
ljmp
mov
and
cmp
xor
lods
addb
pop
cmp
adc
std
nop
mov
inc
or
xor
lds
in
jno
scas
xor
or
and
and
mov
jo
fcomps
mov
and
cmp
psrld
jno
push
jno
push
lock
mov
add
dec
mov
xchg
mov
and
lds
movsl
push
jne
lods
and
xor
and
adc
incl
or
lock
shlb
test
push
fildl
cmpsb
pop
inc
xor
lock
mov
clc
and
inc
out
add
fmuls
sbbb
pop
mov
mov
cmp
clc
or
push
ljmp
xchg
xor
cmc
outsl
adc
mov
lea
xchg
mov
xor
lea
das
mov
sub
inc
push
bnd
jo
rol
popf
add
pop
icebp
inc
test
cmp
outsb
or
arpl
cs
hlt
add
push
xor
fdivp
jle
or
cld
fstpl
insb
cmp
es
add
int3
pusha
rorl
nop
pop
idiv
mov
mov
mov
psubsw
adc
inc
test
into
and
lret
andb
xorb
pusha
je
push
xor
dec
bound
dec
les
test
or
xchg
sbbb
sbb
add
cmpl
lock
out
adc
mov
cltd
xchg
std
outsl
fidivl
jmp
xor
add
xor
pop
lahf
jno
and
pop
jp
add
leave
out
sub
fimull
mov
xor
pop
inc
dec
adc
pop
cmp
cmpsl
push
inc
es
sub
mov
adc
clc
mov
push
fbstp
jne
js
cmp
mov
mov
push
int3
add
jmp
push
jg
add
outsb
andl
mov
imul
out
xor
dec
xor
je
hlt
loop
and
outsl
jle
add
or
ss
hlt
xchg
leave
adc
mov
mov
in
lea
mov
adc
out
rorb
or
lea
sub
sub
add
movsb
iret
scas
je
jmp
rorb
loope
testb
inc
rcrb
pop
pop
add
and
add
xor
xchg
mov
icebp
arpl
pop
sbb
adc
mov
adc
shll
je
and
sbb
or
fdivl
pop
out
xor
cmp
add
jno
mov
es
sub
fisttps
adc
jb
cmp
ja
inc
cmp
icebp
and
lea
jne
push
scas
aam
push
or
iret
cmp
mov
scas
add
mov
sbb
fidivrl
pop
ss
je
mov
sub
dec
incl
push
add
mov
sub
in
push
jl
iret
jb
cmp
dec
repz
enter
sub
fiaddl
stc
adc
xor
or
add
data16
jbe
dec
jmp
mov
pop
or
sub
lcall
mov
add
ja
xchg
pop
or
sub
mov
cld
mov
cmp
sub
clc
push
test
sarl
jb
or
mov
sub
xor
loopne
filds
sahf
sbb
inc
lea
pop
clc
cmpb
mov
xor
or
or
loope
sub
inc
lret
lock
pop
les
dec
push
add
loopne
sbb
jne
pop
call
ljmp
mov
cli
cmp
scas
push
ljmp
lods
push
push
push
inc
mov
es
mov
jne
mov
jo
sub
cld
add
jmp
push
stos
les
push
cmc
mov
subl
lods
es
push
js
push
movsb
aam
mov
push
mulb
arpl
cli
outsl
mov
call
adc
xor
pushl
ss
call
lds
xchg
sbb
lahf
rorb
es
mov
and
pusha
jp
les
xchg
sbb
mov
push
fs
scas
sub
pop
cmpsb
icebp
or
lock
lods
call
test
and
cmp
out
xchg
inc
cs
sbb
adc
ss
fdivs
ljmp
cmp
jmp
pop
mov
rclb
stos
aaa
jae
addb
out
es
aam
mov
mov
pop
add
add
inc
xchg
push
add
adc
and
jle
and
pop
and
or
mov
xor
mov
or
adc
push
pusha
sbb
pop
call
mov
jg
push
adc
adc
divb
int3
push
jle
sbb
mov
add
add
mov
push
es
fcoms
in
push
xor
bound
decl
cwtl
call
jmp
fcoms
jae
clc
jae
sub
sub
lcall
ret
push
scas
add
push
js
inc
ljmp
add
cmp
icebp
adc
adc
insl
je
or
sub
jg
sub
je
pop
in
and
das
je
stc
pop
les
cmpsb
pop
pop
fwait
mov
ss
loope
scas
dec
sbb
or
xor
push
mov
jno
fisubrl
jl
jle
push
cmp
mov
xchg
fsub
pushf
adc
out
mov
xchg
xor
mov
push
fs
sub
sub
adc
nop
clc
ss
or
sti
jne
adc
mov
sub
mov
push
and
shrl
lahf
mov
rcr
xchg
push
mov
or
adc
xor
and
subb
or
rorb
notl
jnp
inc
xchg
ljmp
sub
aaa
arpl
aaa
xchg
fs
lods
jmp
pushf
and
pop
push
mov
mov
test
jle
adc
pop
aaa
mov
mov
inc
push
jnp
js
pop
mov
cmovs
mov
push
add
shlb
xchg
jle
std
subb
add
ja
addb
and
inc
lret
mov
add
pop
cmpl
mov
js
insb
lret
mov
ljmp
filds
adc
addb
pop
pop
inc
andb
pop
adc
or
mov
push
lcall
adc
mov
or
pushl
movsb
xorb
std
orl
cmp
inc
lods
addb
inc
js
pushf
or
or
rcrb
test
rorl
orb
and
rolb
icebp
add
imul
xchg
and
cld
xchg
call
xchg
lds
sbb
mov
cmp
add
cli
add
into
in
imul
inc
mov
or
daa
cmc
push
adcb
xchg
add
add
push
pop
add
sub
out
ja
push
and
mov
insl
sbb
pushl
pop
push
dec
add
pop
or
test
mov
jp
push
cmpb
popa
loopne
pushf
data16
je
rol
inc
test
xchg
inc
call
rolb
insb
shrb
sub
lods
push
dec
divl
jne
shrb
out
and
test
imul
sub
dec
out
add
mov
int3
adc
lds
xlat
andb
mov
xchg
mov
clc
shrb
fcompl
jp
daa
roll
aam
and
and
sahf
mov
or
jg
subl
cltd
mov
or
outsl
decl
test
ret
rolb
inc
inc
rolb
popl
jle
mov
test
rolb
add
sub
rclb
push
aad
and
insb
clc
mov
add
push
jp
adc
rol
push
jbe
adc
int
sbb
stos
leave
ret
das
stos
loope
dec
mov
int3
int3
xor
xchg
sbb
mov
sbbb
lret
add
mulb
cmc
and
mov
pop
icebp
push
inc
sbbb
ja
dec
mov
orb
pop
mov
adc
int3
cli
sbb
cli
jbe
xorb
or
mov
dec
fdiv
jg
adcl
sarb
nop
xchg
add
outsl
adc
lods
add
add
pop
push
inc
cmp
scas
mov
cmpb
nop
test
push
pop
hlt
xor
iret
nop
jne
nop
sub
sbb
mov
cmp
into
lock
in
pop
mov
xchg
sub
ljmp
loope
ljmp
adc
sbb
dec
outsb
or
loop
inc
fdivl
test
fwait
sbbl
push
cmp
push
aad
add
pusha
and
loope
rcrb
pop
bound
and
sbb
cmpsb
jbe
add
data16
jne
lods
xchg
rcrl
jmp
push
xor
lods
dec
subb
adc
loopne
in
mov
dec
sub
or
mov
incb
repnz
clc
and
sub
jbe
add
xor
div
and
mov
gs
mov
inc
push
push
lods
adc
pop
lock
adcl
adc
sahf
pusha
adc
or
movb
mov
push
sbb
inc
pop
dec
ret
jp
mov
jg
add
pusha
push
push
push
lods
push
imul
xor
mov
popa
add
loope
inc
jmp
mov
cmpsb
jbe
cld
pop
pushf
and
adc
or
add
mov
loopne
jmp
mov
ss
pop
adc
mov
shlb
add
loop
aam
sub
push
mov
push
scas
add
jg
cwtl
cmp
mov
lret
add
iret
dec
pop
and
add
push
hlt
mov
adc
mov
icebp
or
test
push
push
ja
and
test
repz
sti
in
mov
or
jae
call
add
pcmpeqb
in
testb
jge
cmp
mov
dec
dec
out
push
out
mov
loope
cli
pushf
clc
mov
adc
aam
sub
icebp
jbe
jae
cmp
hlt
mov
js
pop
mov
push
inc
lock
jae
sarl
mov
jmp
and
add
pop
mov
pushf
jb
adc
rclb
mov
rorb
or
aam
inc
xchg
mov
pusha
push
lahf
adc
sahf
hlt
xlat
filds
add
push
js
xchg
mov
inc
jl
adc
add
lds
cli
in
clc
push
scas
or
or
in
pop
mov
imul
lods
push
push
push
xchg
inc
shll
inc
jmp
fst
ja
in
les
and
aaa
ljmp
scas
shll
sbb
sbb
cmp
xor
add
add
cs
lock
inc
dec
dec
or
movsb
mov
push
push
faddl
mov
sub
repnz
sbb
cmp
xor
fs
cli
pusha
stos
add
rcll
int3
sarb
cmpb
push
mov
loopne
dec
xchg
or
add
xor
call
lret
loop
jo
popl
add
jmp
in
daa
idivb
pop
bound
fisttpl
add
add
ret
push
pusha
sbb
outsb
adc
sbb
jno
decl
bound
xor
and
sub
inc
dec
shlb
inc
shll
cmp
ljmp
adc
add
sti
adc
and
loopne
out
xchg
sub
dec
mov
xchg
jmp
and
push
call
subb
loopne
insb
cld
cs
push
push
and
pusha
sub
daa
and
cmp
fiadds
adc
jae
xor
shl
test
cmp
sub
xchg
bound
iret
push
or
mov
test
push
or
iret
xor
push
sbb
and
adc
mov
jp
jo
sbb
jbe
add
sub
movsb
or
push
loope
sbb
addb
add
pop
test
dec
imul
push
sbb
mov
pop
fld1
cmpsb
pusha
adc
push
or
cmp
inc
je
daa
insl
xor
outsl
cli
decb
push
push
call
cmc
pop
nop
hlt
lock
and
cli
inc
or
cmp
pop
cmp
cmpl
cld
ja
ss
pop
fildl
add
dec
add
mov
or
jbe
sbb
and
push
push
subl
shlb
repz
push
push
cmp
cmp
sub
jb
dec
mov
add
outsb
hlt
sbb
inc
fsubrs
adc
inc
push
dec
and
or
adc
add
les
or
mov
mov
push
push
mov
push
inc
scas
push
add
or
lock
es
and
add
mov
push
xlat
mov
xor
sub
test
mov
jbe
int3
js
cmp
mov
jg
aaa
mov
sbb
aas
push
cmp
mov
call
jg
data16
mov
data16
mov
add
adc
movsl
sub
and
xchg
outsl
rclb
pushf
aam
or
fdivs
or
mov
cld
test
and
ss
mov
fdivl
mov
rorb
ret
repnz
mov
cmp
outsb
mov
add
jp
loopne
fstl
add
cld
lock
push
jne
xchg
xchg
inc
mov
mov
lcall
cmp
test
and
in
mov
cld
outsl
fdiv
xor
imull
push
mov
mov
mov
pop
sbb
enter
xchg
mov
xor
shr
mov
mov
ljmp
in
xor
rcll
roll
fcmovnbe
adc
jne
hlt
divl
subl
ljmp
out
mul
add
jb
push
cmp
ja
jb
cmp
mov
jbe
dec
sub
lcall
adc
aam
lods
inc
shlb
push
mov
fidivl
push
movsb
add
pop
ret
jecxz
mov
int3
lods
push
mov
adc
push
adc
jo
xor
jg
rolb
or
mov
push
lods
das
clc
call
cmpsl
and
pop
movsb
ret
rol
test
xor
inc
dec
inc
xor
add
testb
mov
roll
inc
jp
or
mov
xor
sete
orb
pushf
dec
mov
scas
inc
dec
cmp
aaa
sub
jmp
mov
mov
lea
test
ja
dec
aam
sbb
inc
int3
stc
jb
xor
and
es
jb
adcl
sub
rcl
jb
mov
pop
dec
xchg
mov
pop
jmp
xchg
pop
jo
cmp
inc
add
cld
mov
lock
pop
xor
cmp
aaa
add
mov
push
outsl
inc
pop
cmpsb
pop
mov
sub
fcmovnb
call
pop
or
and
aam
andb
popa
inc
sbb
xor
add
push
dec
scas
pop
add
sub
call
and
aaa
mov
or
adc
hlt
enter
or
or
loop
aam
loope
mul
je
xorl
xchg
jo
fdivs
sub
sarl
sbb
ja
cli
xchg
in
fdivs
add
pop
lock
mov
aam
into
add
add
lds
jbe
lcall
jo
xor
inc
mov
cld
cmpsb
add
jo
cmpb
fwait
mov
push
pop
xchg
pop
mov
push
cmp
movsb
fadds
clc
aad
cld
jmp
push
sbb
pop
sbbb
ret
sbb
sbb
xor
xor
or
cmpsb
lock
adc
jbe
divb
adc
cli
adc
dec
push
push
inc
dec
aam
je
mov
add
mov
adc
sbb
leave
cli
xor
pop
addl
adc
sub
jno
ret
mov
jno
mov
push
mov
scas
test
call
repnz
mov
mov
sbb
scas
or
fildll
add
adc
lcall
dec
inc
addb
loopne
lock
inc
adc
sbb
or
add
xor
cmp
sub
bound
sbb
and
scas
sub
in
scas
push
or
xor
push
or
add
inc
push
les
xor
or
mov
aam
xor
push
adc
add
mov
mov
inc
add
mov
mov
cmp
mov
jb
lock
fsubs
add
mov
sub
sub
ret
aam
ljmp
je
andb
mov
add
pop
and
adc
adc
add
ja
pusha
mov
inc
mov
jmp
or
ds
out
stos
loop
sbbl
mov
mov
sub
incl
mov
mov
lea
insl
pusha
ret
outsb
inc
ret
inc
dec
test
or
mov
outsl
fildll
xor
dec
addb
add
jo
and
mov
inc
xchg
jmp
movl
dec
data16
insl
rcr
ds
add
fsubrl
sar
or
sub
aad
in
or
inc
add
dec
fldl
xchg
in
xchg
jo
mov
push
push
mov
pop
push
xor
push
inc
cmp
call
inc
ss
movsb
or
sbb
cli
add
add
dec
pop
dec
push
mov
shl
adc
clc
decl
xor
and
jbe
inc
dec
addl
pop
mov
incl
js
repnz
jo,pn
mov
push
xor
dec
rol
sub
addr16
insb
orb
into
outsl
out
mov
add
or
mov
call
add
stc
xor
pop
mov
data16
ret
lea
push
sar
or
ret
aam
add
sbbb
mov
cmp
enter
mov
xchg
stc
fbstp
mov
mov
rcrb
fadds
jo
int3
ficoms
lret
add
adc
push
test
adc
test
push
or
lea
cmp
add
ja
pop
addl
je
hlt
pusha
jbe
push
jnp
xor
mov
cmp
pop
inc
ret
add
xor
cmp
jb
sub
ret
fmuls
test
js
push
cmp
sar
inc
pop
and
add
push
rcll
add
mov
cmp
mov
gs
adcb
jns
cmp
mov
bound
sub
sub
addb
pop
cli
lods
mov
or
lcall
pop
fisttpl
lock
dec
xor
add
mov
or
dec
mov
out
test
daa
in
pop
scas
inc
cvtdq2ps
jo
mov
add
xchg
push
test
adc
addb
adc
xchg
ljmp
cmp
jno
mov
popa
es
add
movb
leave
inc
nop
xchg
mov
and
lods
les
or
int3
add
jno
dec
clc
xor
dec
idivl
cli
lahf
mov
adcb
and
push
mov
dec
push
add
cmp
nop
jae
movsb
mov
add
movsb
mov
jb
ret
push
adc
ds
push
stos
je
or
cmp
mov
adc
and
add
cmp
dec
test
sahf
add
jb
insb
and
es
and
xchg
pushf
add
inc
int3
adcl
insb
in
dec
xchg
ss
scas
push
sub
inc
rorb
ljmp
mov
cmp
adc
dec
mov
lahf
cmpl
loop
call
stos
pushf
or
dec
jo
push
jg
jo
pusha
je
movsb
add
call
shr
cmp
or
xchg
cwtl
rolb
sub
inc
addr16
mov
xor
lahf
into
push
movsb
inc
movsl
add
mov
fs
arpl
test
mov
addb
sarb
nop
leave
pop
jmp
adc
sarl
sub
jg
mov
ret
xchg
rclb
inc
leave
sub
movb
cwtl
mov
into
rcl
add
icebp
push
inc
dec
je
xchg
ja
jl
push
std
xchg
pop
lods
add
sub
cmp
dec
cmp
add
shl
insb
cmc
or
and
insb
xor
and
sbb
and
loopne
sar
pop
or
mov
dec
mov
inc
js
insl
mov
pusha
mov
mov
movsl
adc
stos
mov
les
push
mov
pop
mov
jbe
mov
test
sub
mov
clc
out
mov
or
pop
rcrl
mov
std
mov
xor
inc
push
dec
ret
dec
clc
ljmp
mov
pop
dec
inc
adc
inc
data16
sbb
adc
imul
int3
enter
inc
cmp
stos
je
mov
aad
lcall
inc
aaa
mov
enter
and
push
sub
testb
sha256rnds2
pop
lods
rorl
ret
inc
pop
les
mov
outsl
and
mov
leave
xor
dec
shr
std
cmpsb
das
je
int3
cmpsl
cmp
int3
inc
pop
pop
adc
adcb
mov
xor
and
inc
pushf
jl
jnp
sbb
jl
les
pop
pusha
push
lea
inc
ljmp
cli
or
cwtl
ret
out
pop
and
addl
jo
push
cli
loopne
pop
nop
clc
adc
add
xorl
shll
in
sbb
loopne
adc
orb
push
rolb
pop
pusha
test
mov
pop
insb
dec
out
add
sub
pusha
cmp
repnz
call
sub
pusha
pop
or
add
add
dec
mov
mov
data16
mov
push
addb
idivb
pop
icebp
sub
js
test
mov
xlat
mov
push
jae,pn
add
xchg
xchg
test
jne
sub
ja,pn
rclb
mov
fcmovb
pusha
cmp
cmp
mov
lods
negb
mov
pusha
adc
mov
mov
add
add
js
inc
sti
ljmp
loopne
subb
cmp
cltd
popa
pop
loopne
cltd
dec
sarl
das
mov
je
sub
lahf
movsb
rolb
or
mov
cmpsb
mov
ljmp
pop
dec
pusha
popa
data16
sub
cwtl
mov
pusha
bound
lahf
loop
loop
or
mov
lock
add
mov
xchg
addr16
ficoms
mov
xor
in
inc
inc
add
cwtl
sbb
movsb
ljmpw
loop
js
or
xchg
xchg
ffreep
add
js
or
cmp
cmp
push
mov
jbe
mov
loop
mov
mov
fdivl
sbb
je
xor
rolb
std
and
inc
adc
and
mov
add
out
inc
or
xchg
outsb
dec
loop
and
loope
jne
loopne
and
movsl
xchg
pop
adc
push
inc
lahf
loopne
xor
jg
popa
popf
test
pop
test
loopne
xchg
add
add
adc
ret
cmp
loopne
mov
stos
inc
mov
loopne
mov
jp
movsb
lods
loopne
mov
adc
cmpsb
mov
jo
jg
dec
insl
pusha
cmp
addb
jmp
inc
idiv
orb
inc
fidivs
mov
jg
push
je
loope
loope
ja
add
add
xlat
outsl
clc
das
push
cltd
mov
pushf
xchg
popa
insl
jb
loop
xchg
js
outsl
add
jg
and
pusha
aad
push
pusha
and
rcll
inc
mov
addr16
cmc
add
loopne
jmp
adc
mov
cmp
jmp
nop
cmpb
jbe
mov
and
cld
add
cli
mov
loope
test
xor
bound
sub
das
add
lcall
popa
adc
lahf
cmpsb
popa
push
mov
cmp
xchg
cmp
pop
outsb
js
loopne
arpl
ss
jl
add
jg
subl
out
ja
xor
adc
or
cmc
call
stos
xchg
jp
push
push
shll
sbb
inc
jmp
mov
dec
jmp
test
jg
jbe
and
mov
mov
mov
filds
stos
dec
mov
sbb
xor
movl
push
xorb
test
enter
addl
push
dec
push
push
push
jg
movl
add
add
and
xchg
lock
mov
mov
or
push
push
je
movsl
aas
fld
xchg
xor
or
xor
cld
dec
pop
inc
push
faddp
add
inc
sub
xor
jl
setb
jbe
jb
sbb
jl
in
push
mov
repz
add
add
fmuls
adc
movsb
xor
sbb
and
jbe
push
rorb
inc
xlat
rorb
push
lods
sbb
push
cmp
ret
mov
lods
ds
adc
sub
pop
mov
add
or
cwtl
cmpl
jnp
xor
loopne
adc
xor
push
sub
cmp
dec
les
aam
mov
or
pop
or
mov
pop
sti
and
test
cmc
movl
pop
sub
mov
inc
pusha
pop
cmp
push
stos
add
push
sbb
pop
int3
in
adcb
inc
test
push
rclb
pusha
repz
pop
mov
add
call
mov
test
out
xchg
test
and
mov
fildl
arpl
lcall
movsl
mov
adc
ret
xchg
test
inc
dec
and
pusha
inc
into
push
jo
jo
sub
mov
lea
xor
push
popa
in
jae
jl
xor
lock
jne
aam
je
and
push
dec
xor
test
xlat
xchg
sub
sar
ret
lret
fdiv
pop
and
mov
mov
fidivrs
or
xchg
jne
enter
sub
rcrl
imulb
out
xor
je
add
jg
dec
adc
aaa
push
nop
push
call
cs
das
fdiv
add
rcrl
iret
xor
xor
pop
mov
aam
add
add
mov
lret
add
test
icebp
push
loopne
sub
push
lods
or
je
mov
sub
stc
je
std
ret
sub
insb
xor
sub
ret
adc
clc
mov
ret
add
push
shl
inc
mov
add
mov
cmp
fidivl
rolb
pop
cs
mov
enter
xor
and
or
push
mov
hlt
adc
jo
ss
jmp
js
mov
fucomip
lock
rorb
inc
mov
sarb
xor
mov
push
movl
adc
adc
adc
pop
cmp
jbe
push
or
mov
push
je
cmp
push
or
loopne
fadds
pop
push
invd
xchg
adc
pop
js
cmp
or
pop
cli
mov
repz
push
cld
adc
and
add
pop
loopne
or
mov
push
mov
sub
inc
adc
fisttps
or
push
jmp
inc
or
adc
mov
ss
ds
sbb
pop
pop
pop
sbb
adc
inc
sbb
jo
call
sub
lea
lock
stos
add
or
out
adc
xor
test
sbb
outsb
pusha
cmpsl
mov
adc
jo
xor
mov
mov
inc
iret
mov
add
mov
inc
xchg
lock
addb
loope
and
or
and
jg
test
sbb
mov
jo
movb
mov
outsb
cli
and
push
add
lock
and
jmp
sar
jle
and
jl
inc
cmpl
or
mov
pop
xchg
std
jg
loop
or
xorb
pop
or
aaa
mov
jecxz
add
mov
mov
loopne
testb
ret
mov
mov
vandnps
jmp
addb
rcl
push
cmp
xor
jae
sbb
ror
push
mov
or
incb
bound
xchg
push
push
jno
je
dec
pop
popaw
mov
mov
ret
add
ss
test
out
xor
inc
fsubrs
jmp
inc
gs
rcrl
div
or
inc
and
mov
mov
mov
rcll
push
js
adc
xor
mov
or
pop
jo
jo
push
int3
fistl
out
pop
lods
jmp
dec
adc
cmpsb
jo
test
dec
xor
nop
test
mov
mov
pop
rcrw
testl
jb
and
push
add
test
jl
clc
xor
shl
sub
and
das
mov
ljmp
mov
sbb
mov
clc
out
rorb
scas
mov
mov
imul
xor
adc
xor
out
inc
adc
jb
loope
mov
scas
mov
mov
shll
or
push
xor
je
jle
mov
push
xor
mov
or
pop
mov
das
sbb
clc
dec
lock
jno
aam
clc
pop
sahf
pop
push
fdiv
fbld
mov
mov
lock
sub
testl
mov
in
adc
xor
push
cmp
mov
mov
popf
add
aaa
dec
fbld
repnz
loopne
xor
mov
add
mov
fsubs
gs
pusha
ss
xor
sbb
inc
mov
movsl
and
mov
aad
adc
cmp
mov
and
mov
rorl
xor
xor
and
outsl
adc
dec
in
lret
aam
mov
rclb
xor
andl
inc
xchg
in
sbb
xor
and
push
repnz
in
sub
mov
incb
out
push
pop
notl
shrb
shrb
loopne
loop
mov
jg
shll
xchg
test
int3
cld
call
adc
pop
push
stc
jo
icebp
adc
xchg
xchg
xor
bound
xchg
call
clc
adc
and
or
and
imul
mov
jg
mov
sarb
cmp
mov
fimull
mov
xchg
aad
idivl
imul
inc
xor
or
aam
push
ljmp
cmp
in
das
orl
or
test
cmc
or
xchg
push
lock
das
push
adc
xor
sbb
aas
xor
and
dec
pop
xor
hlt
xchg
push
add
xorb
and
cld
fsubr
xor
rorb
cmp
cmp
cmp
dec
fisttpl
dec
push
or
mov
dec
dec
add
dec
dec
push
dec
lret
or
sbb
dec
dec
push
cmpsb
rorb
ficoml
pop
test
mov
mov
and
pop
mov
xchg
sub
inc
mov
outsl
push
xor
jb
jo
sbb
data16
js
mov
ret
pusha
mov
lea
xor
add
xchg
xorb
ret
mov
or
add
daa
fdivp
xor
rclb
push
cmp
scas
sti
jle
push
adc
add
xor
mov
stc
or
cs
mov
and
inc
mov
xchg
dec
mov
add
adc
push
adc
lock
mov
or
push
dec
or
and
xchg
call
and
testb
dec
call
rorl
sub
inc
ret
loopne,pt
sbbl
mov
outsb
call
loope
hlt
add
cld
roll
ret
cmpb
cltd
dec
shlb
das
and
mov
repz
or
addb
cwtl
inc
cld
call
xchg
cmp
subb
es
clc
add
je
dec
cs
enter
orl
or
sub
and
icebp
cwtl
sbb
daa
jmp
jae
adc
and
push
dec
insb
xchg
xchg
jo
inc
loopne
pusha
lret
cs
ret
sbb
mov
push
mov
and
les
add
test
or
jmp
jle
push
push
andb
rorb
push
adc
cld
int
pop
rol
or
jl
add
inc
mov
cld
shrb
jmp
add
shrb
add
adc
outsb
or
je
idivb
push
adc
or
sbb
add
pop
adc
mov
ss
xor
dec
adc
push
les
aam
push
or
and
sbb
adc
cwtl
repz
mov
cmpsl
and
adc
push
adc
xor
stos
scas
add
inc
fidivl
js
push
shlb
sar
scas
push
test
movsl
sub
les
ret
pop
ret
adc
mov
call
or
js
add
or
inc
clc
add
fwait
dec
adc
rolb
push
shlb
jae
ror
sub
iret
orl
push
jl
add
rcll
push
ret
xor
inc
mov
push
and
inc
add
jl
jg
cmp
push
cmpl
dec
pop
invd
js
cmp
cmp
rcrb
add
stc
aaa
std
add
pop
inc
xchg
shlb
mov
fs
mov
mov
add
jb
cld
testb
push
mov
add
rcl
add
inc
add
push
rolb
fcoml
push
sbbl
mov
mov
in
divb
loopne
hlt
adc
mov
loop
sub
or
jmp
or
or
sub
pop
test
sub
mov
mov
incl
sarl
xchg
add
mov
jle
jb
lock
push
or
inc
add
cmp
add
or
jb
push
xchg
test
mov
bound
pop
add
sbb
xor
in
adc
mov
cli
cld
inc
pusha
adc
loopne
sbb
xchg
push
add
pusha
sbb
movsb
dec
mov
and
je
cmpl
leave
mov
outsb
dec
mov
mov
arpl
or
loope
push
fsubs
mov
cmpl
enter
pusha
inc
inc
push
call
mov
loopne
adcl
out
jae
in
cmp
xor
sbb
bnd
pusha
pop
add
fs
inc
test
add
shr
sub
into
clc
push
push
or
and
push
pusha
mov
testb
push
adc
pusha
xchg
nop
jbe
mov
add
or
pushl
shl
sub
or
or
pop
sub
add
cwtl
cmp
pushf
jo
lds
xchg
sbb
mov
inc
outsb
push
mov
sub
or
pusha
mov
add
push
and
cltd
cmp
rorb
jge
dec
jb
add
out
sbb
popa
or
movsl
call
rcll
adc
inc
add
add
ret
inc
mov
clc
pusha
pop
adc
jecxz
pushf
clc
jmp
scas
cld
fsubrs
and
inc
adc
xor
jg
sub
mov
fidivrl
or
mov
lahf
sub
roll
fidivs
push
push
enter
mov
out
cmpb
pusha
inc
push
pop
push
cmp
ficompl
in
mov
add
hlt
ss
adc
popa
add
jecxz
inc
push
inc
inc
lds
sbb
call
loopne
loopne
adc
add
push
mov
jo
shl
jmp
test
push
push
and
enter
das
loopne
les
push
hlt
sbb
icebp
mov
decl
push
push
out
pop
pusha
loopne
pusha
push
add
jg
or
dec
push
push
pop
fildl
imul
or
popa
mov
and
mov
push
jne
adc
fldl
push
push
inc
lea
insl
mov
ljmp
add
mov
pushf
nop
pop
cli
negb
scas
adc
imul
mov
mov
pop
dec
daa
inc
and
sbb
mov
or
and
out
sahf
dec
push
rorb
sub
sub
cld
es
in
jp
add
in
loopne
bound
orl
jno
movl
aam
loope
aaa
insb
dec
cmp
mov
inc
mov
jecxz
roll
ljmp
xor
sub
dec
mov
jb
insb
addb
dec
adc
add
xchg
xor
imul
ja
push
rol
inc
test
sub
out
ret
add
dec
sbb
mov
dec
in
mov
or
mov
roll
xor
jecxz
mov
mov
dec
sbb
call
cmp
in
jbe
pop
sti
imul
or
dec
jo
lods
cld
inc
push
inc
cmp
and
jo
aaa
jne
xchg
xor
inc
sub
incl
sub
ficomps
or
inc
icebp
sub
xor
or
mov
and
mov
dec
incl
icebp
adc
add
pushl
jbe
push
out
jmp
or
pop
sbb
lock
cmp
loopne
or
adc
stos
pop
xor
mov
fimuls
mov
xchg
pmuludq
and
mov
add
sub
dec
enter
dec
mov
decl
add
xor
add
pop
testb
ja
ficomps
or
sbb
inc
inc
sub
jmp
idivb
pushl
jo
xchg
lock
push
mov
mov
je
add
enter
icebp
xchg
sbb
repz
roll
sti
push
mov
in
mov
sbb
mov
push
pop
add
sbb
jo
push
repz
mov
lcall
sbb
add
cmc
sbb
dec
cmp
outsb
mov
lret
pop
sbbb
sbb
jbe
mov
mov
jo
jbe
xor
pop
jbe
dec
je
sub
in
sub
icebp
dec
sbb
xor
pop
sbb
pusha
jb
je
add
dec
add
out
clc
xor
sar
sub
xor
adc
sbb
add
adc
pop
dec
xor
sub
sbb
lret
add
xor
test
add
sbb
adc
in
jo
testb
cmp
fdivr
push
xchg
mov
push
push
mov
mov
sub
push
inc
mov
aam
push
jo
fisubrl
sub
mov
enter
mov
mov
ljmp
mov
and
pop
add
and
adc
sbb
push
mov
cs
call
lock
push
or
xor
dec
push
xor
xor
add
xor
xchg
mov
repnz
add
xor
jg
cmp
or
push
and
mov
xchg
push
mov
lock
xor
clc
xchg
shl
pop
rorb
mov
push
aad
push
loopne
sub
call
mov
test
adc
push
push
scas
and
rolb
sbb
jno
cld
pop
sub
mov
add
iret
icebp
add
mov
loopne
cmp
and
mov
lret
sbbb
and
sbb
loope
incl
test
cld
sarl
out
or
mov
movl
insb
loope
or
xbegin
repnz
fucomip
sbb
lock
clc
stos
je
pop
ljmp
ljmp
cmp
inc
clc
cmp
xchg
fcmovnb
inc
mov
xor
fadds
and
pop
adcb
mov
dec
call
xlat
mov
cld
mov
pusha
mov
mov
insb
lret
orb
int
or
das
insb
mov
mov
sbb
shrb
fdivr
push
or
mov
push
adcb
add
ret
std
jg
add
mov
sarb
in
cs
adc
add
faddl
mov
inc
and
pop
test
adc
test
jmp
mov
sub
sub
pop
movsb
mov
push
pop
imul
add
mov
cmpsb
popa
incb
mov
adc
in
sub
loopne
push
out
decb
inc
inc
add
sub
push
call
adc
orl
aam
cli
jae
and
sbb
cmp
cs
clc
inc
clc
adc
pusha
cmp
xchg
add
add
test
add
sub
and
push
jmp
push
inc
ret
or
sbb
in
ret
xchg
test
mov
add
aam
jne
test
and
push
sub
inc
xor
loope
or
ss
pushl
mov
sbb
call
inc
imul
add
ljmp
insb
mov
arpl
fsubrp
fnsave
pop
add
xchg
fnsave
lods
and
adc
enter
jle
inc
fwait
jbe
push
xor
adc
nop
xor
test
xabort
inc
push
loop
inc
les
adc
cli
loop
rcll
ret
mov
imul
out
or
adc
mov
divb
jo
test
adc
sbb
mov
adc
cld
xor
mov
sub
outsb
pop
push
cs
inc
jecxz
pop
imul
out
and
xchg
sub
out
push
mov
add
mov
adc
or
shr
inc
imul
push
sti
insb
jl
pop
sub
jbe
mov
push
icebp
lcall
jb
adcl
xor
adc
js
add
mov
roll
adc
imul
lods
ds
scas
add
mov
lea
pop
pop
pop
jo
jl
add
sti
adc
inc
and
testb
adc
inc
mov
decl
scas
add
mul
ds
cmp
bound
pop
mov
or
add
sti
jg
and
add
scas
test
add
mul
rcll
jmp
ljmp
jb
or
add
mov
mov
mov
pop
std
add
cld
add
push
push
cli
add
sbb
insl
repz
testb
push
repnz
addl
inc
adc
dec
sbb
rclb
decb
loopew
addr16
mov
addb
or
shr
imul
xchg
inc
or
faddl
inc
test
stos
dec
sbb
ljmp
idivb
rolb
addr16
cld
cmpsb
inc
out
sbb
pushf
add
pop
add
enter
loope
xor
mov
mov
pop
lret
lods
dec
mov
xchg
xor
xchg
pop
mull
das
jg
testb
shl
out
adc
rolb
loop
andl
adc
or
enter
enter
jl
and
ds
sub
mov
pop
adc
xchg
xchg
aam
mov
add
jecxz
push
ret
or
pop
arpl
fcmovnb
jmp
enter
loope
mov
mov
adc
enter
mov
xor
mov
add
inc
mov
and
add
add
rcrb
dec
rcr
sub
popf
aaa
sub
jo
inc
or
loop
sbb
mov
les
mov
mov
addl
cmp
fbstp
ret
cvtpi2ps
rcr
add
ret
in
in
adc
aaa
pusha
add
push
or
mov
xlat
adc
and
sbb
fldcw
loop
shlb
cld
incl
ret
ss
add
rol
ss
ret
sbb
aad
adc
stc
push
add
int3
inc
cld
inc
and
fadds
mov
andl
das
add
imull
dec
loope
add
cmp
inc
mov
ds
push
add
outsb
pop
rcll
and
cmp
loope
call
enter
or
popa
add
cmp
popa
xchg
add
cmp
in
sbbb
or
push
xor
ja
les
nop
loopne,pt
test
mov
cld
jne
rcrb
loopne
xor
push
mov
sbb
fwait
push
sbb
cs
int3
mov
mov
push
jl
and
cmp
mov
js
lcall
pop
mov
mov
loop
testb
sbb
fmuls
outsl
dec
sub
add
pop
je
sahf
push
dec
ret
mov
fiadds
push
lea
xchg
into
insb
cmp
fcomps
sti
xchg
roll
and
pusha
mov
call
dec
xor
je
js
aam
sbb
and
test
imul
or
mov
jp
adc
jmp
lret
push
dec
jle
cmp
loop
push
pop
pusha
loopne
mov
mov
pusha
add
xor
or
adc
mov
jne
mov
push
adc
je
adc
icebp
mov
pop
fiaddl
mov
inc
add
push
rolb
lea
es
xor
sbbb
xor
xor
pop
cmpl
and
fwait
add
test
add
sub
push
mov
sti
cmp
sub
es
jge
add
and
sub
sar
jg
mov
adc
cli
pop
js
fildl
das
clc
jmp
cmp
loopne
sbb
dec
pop
mov
pop
inc
jge
insb
sti
or
arpl
dec
mov
jp
and
add
jmp
jmp
clc
add
add
inc
mov
out
pop
adc
cmp
pop
sbb
inc
mov
fdivrs
add
movsl
ret
mov
std
mov
jb
pop
cmc
popa
jae
leave
xorb
mov
push
mov
sbb
sub
outsl
je
insl
xchg
xchg
sub
add
lcall
mov
std
mov
add
mov
and
xchg
je
jb
adc
mov
outsl
data16
inc
xor
cmp
or
xor
xchg
loopne
mov
loope
int3
mulb
iret
and
outsl
inc
js
jne
lea
and
xor
add
cltd
mov
pop
inc
mov
lea
scas
and
push
in
loopne
in
add
add
pop
aas
mov
subb
lock
sbb
mov
int3
loope
imul
mov
inc
nop
cs
jecxz
inc
adc
adc
inc
pop
cmpsb
arpl
jle
cs
hlt
lret
pop
loopne
xorb
ja
xchg
dec
pop
stos
ss
mov
mov
sbb
jb
mov
rcrb
pop
imul
bound
add
add
push
cmpsl
and
add
inc
mov
int3
inc
mov
and
xchg
cld
sbb
pushaw
dec
jg
movsb
adc
cld
mov
xor
cmp
xorl
dec
shll
outsl
icebp
add
in
ffreep
add
cmp
addl
jno
mov
add
add
mov
fdivp
sub
pushf
lods
int3
std
or
or
sbb
xchg
je
and
adc
popa
cwtl
shrb
xor
fisubl
shrl
sbb
sbb
mov
lret
adc
adc
mov
mov
add
scas
adc
mov
add
ret
or
sete
or
incl
add
add
mov
mov
push
repnz
cmp
xor
push
ret
inc
mov
mov
inc
cmp
xor
push
in
xor
nop
sub
jle
push
mov
mov
push
push
inc
iret
jle
mov
pusha
xor
jg
je
in
jno
mov
hlt
rcrl
lods
and
stos
mov
sub
pop
stos
orl
pshufw
xor
scas
iret
decb
ss
je
mov
lock
xlat
add
push
adc
loop
lcall
add
xchg
ret
fiadds
add
add
cmp
jl
xchg
repnz
aaa
sub
out
hlt
dec
jl
add
xorl
mov
cmpl
sbb
add
xchg
dec
add
mov
cltd
add
adc
add
loopne
mov
sub
push
xor
in
adc
push
cmp
aaa
rclb
dec
pop
and
push
fmuls
decb
in
push
sti
mov
fstps
adc
shl
jl
add
push
mov
cmp
sti
je
cld
or
sub
mov
pop
dec
jp
push
in
xchg
stos
jne
sbbb
mov
in
adcl
dec
jo
xchg
xchg
in
add
cs
lock
or
ljmp
add
call
dec
loopne
stos
dec
pop
jb
add
cli
mov
adc
mov
outsl
inc
dec
aaa
push
fisttpl
ja
mov
mov
lock
mov
hlt
adc
adc
xchg
in
cmp
insb
add
mov
movsl
jb
adc
call
shlb
and
roll
les
mov
xlat
lret
adc
adc
je
push
jg
mov
and
cltd
les
mov
add
rolb
jne
inc
or
cs
push
lea
adc
cmp
or
jmp
mov
mov
std
jmp
inc
subl
inc
cld
add
cli
pop
aam
mov
pop
ret
adc
pop
sub
mov
sbb
cmp
mov
xchg
or
pop
or
or
icebp
popa
mov
rorb
push
lock
bound
xor
sbb
fidivrs
mov
jo
test
imul
rolb
dec
shll
push
and
adc
stos
sarl
les
test
dec
les
clc
xor
movsl
xor
hlt
mov
add
add
inc
jmp
test
sub
jle
mov
es
adc
cltd
sbb
mov
or
fdivp
test
mov
mov
inc
xor
push
mov
adc
inc
or
inc
jmp
adc
scas
orb
sbb
mov
repnz
pop
jle
mov
lock
lea
data16
dec
les
adc
mov
imul
movsb
nop
icebp
add
add
sub
int3
mov
jecxz
outsb
add
adc
test
or
pop
es
mov
and
jle
pop
mov
stc
test
aad
imul
inc
xchg
lods
mov
add
movsl
push
add
sbbb
mov
notb
mov
lock
fs
cld
jg
mov
dec
je
adc
or
ja
mov
outsb
outsb
outsl
mov
adc
pop
xor
pop
clc
scas
push
cld
inc
pop
lea
mov
or
cld
mov
push
push
ss
ljmp
push
mov
push
inc
mov
cltd
or
fdiv
outsl
mov
mov
push
and
inc
jo
inc
pushw
sub
sub
aad
sub
push
lock
xchg
aaa
or
or
inc
add
add
add
in
insl
shll
mov
out
sbb
xor
xor
ja
pushl
xor
cmpl
jle
jg
add
mov
cli
mov
xor
out
add
mov
hlt
push
rclb
pop
jmp
loop
and
mov
cmp
mov
mov
xor
sbb
adc
mov
xor
or
xchg
or
adcb
aas
cmp
add
out
push
mov
dec
imull
in
adcb
scas
adc
add
or
xchg
mov
je
mov
mov
test
cmc
je
jno
adc
adc
dec
adc
or
lock
cmc
incl
hlt
or
and
jo
jg
xor
xor
add
sub
sbbl
mov
push
mov
xor
add
ljmp
mov
mov
adc
and
mov
lods
mov
ret
hlt
adc
aad
data16
repz
hlt
and
sub
ja
jl
roll
bound
insb
ss
sub
test
test
sarl
cmpsb
outsl
xor
xor
sahf
sbb
xor
cmp
lods
test
enter
das
xor
xor
nop
and
lea
cwtl
lock
pop
in
xor
mov
std
mov
mov
jb
and
add
fistpll
or
ror
fldl
movsl
push
push
mov
inc
push
or
and
xchg
xor
pop
and
cmc
idivb
jp
leave
enter
add
arpl
jae
add
mov
push
outsl
mov
ja
add
cli
in
add
mov
testb
dec
outsl
jo
jmp
adc
add
mov
dec
add
add
push
and
mov
mov
push
mov
inc
and
loope
icebp
jne
mov
lods
repnz
or
jle
sarl
pop
cmpl
lcall
mov
in
add
push
inc
or
add
lods
xchg
sub
mov
lock
or
xorb
scas
rolb
imul
cmpb
mov
jle
mov
push
xchg
dec
mov
pop
test
call
xchg
subl
xorl
sub
cmp
mov
mov
or
dec
push
cmp
adc
push
cltd
pop
and
push
xchg
xor
mov
sarl
push
adc
aaa
je
adc
mov
add
jmp
xorb
adc
mov
movsl
call
lock
cmc
mov
push
pusha
push
adc
pop
inc
stos
mov
or
add
pop
loopne
imul
je
rorl
and
dec
bnd
cmovns
inc
cmpsb
jnp
adc
pop
scas
and
rcrl
ja
ss
ret
sbb
mov
je
push
roll
or
int3
ret
pop
adc
pop
std
pop
aad
call
add
jns
or
fstpl
or
lret
push
or
ret
pop
hlt
cld
ret
arpl
add
push
pop
push
pusha
lock
aaa
adc
ret
push
ss
imul
mov
loopne
call
imul
clc
rclb
push
lds
mov
mov
cmp
test
add
mov
jmp
mov
movsb
rclb
and
mov
xor
inc
xor
push
add
and
divb
sbb
push
mov
mov
mov
cli
jg
mov
jle
mov
fldt
add
pop
cld
enter
mov
rcr
inc
ret
cmc
fistps
add
adc
inc
out
repz
outsl
pop
mov
inc
rcrl
jnp
xchg
xorb
dec
push
pop
add
imul
idivl
add
add
arpl
fiaddl
jo
add
ljmp
pop
xchg
ret
paddb
push
lock
mov
aad
sbb
pusha
sub
adc
add
lock
addl
or
ljmp
inc
jmp
dec
jbe
loop
pushw
jbe
mov
nop
mov
cwtl
sbbb
nop
popa
or
sbb
aaa
cld
push
mov
outsb
inc
loopne
cld
mov
mov
xor
adc
std
sbb
arpl
mov
sti
adcl
add
insb
add
shl
loopne
clc
mov
addr16
ficoms
rcrb
mov
pusha
dec
addr16
pusha
xchg
and
pop
cwtl
popa
and
loope
lret
mov
mov
or
orb
loope
adc
into
sbb
adc
outsl
bound
adc
lret
mov
push
inc
shlb
loopne
cmp
mov
adc
push
fnsave
in
dec
pusha
adc
sub
jl
std
arpl
mov
punpcklbw
lahf
rcrb
cmp
jbe
loope
shrl
mov
inc
in
js
cmp
loopne
and
push
adc
push
negl
jge
pop
or
daa
xchg
out
xchg
std
push
cwtl
outsb
hlt
and
mov
pop
or
push
lock
inc
negb
jbe
pop
inc
cld
push
add
push
inc
pusha
adc
das
add
decl
loope
adc
mov
lret
mov
cli
dec
testl
jp
popa
adc
push
adc
push
into
add
and
push
add
loopne
nop
loop
cwtl
adc
aam
or
sub
clc
adc
cmp
push
cmpsb
arpl
adc
iret
jecxz
mov
dec
hlt
cmp
popa
fs
add
icebp
in
pusha
aas
or
sub
bound
out
pop
into
xorl
dec
clc
dec
decl
jecxz
cli
cmp
es
dec
mov
cmp
sbb
cmp
mov
lock
add
loopne
mov
sbb
rcll
into
jb
aam
push
or
loop
loop
loop
mov
or
fmuls
pushl
or
mov
pusha
in
pop
cltd
xor
loop
add
sti
xor
inc
or
mov
pop
and
jg
stos
push
icebp
adc
xchg
pusha
data16
push
and
ret
add
jg
inc
or
inc
inc
pusha
mov
clc
pop
sub
xchg
push
mov
addl
mov
mov
test
adc
and
pop
pop
add
mov
cs
inc
outsb
jo
push
ds
dec
jl
adc
ret
inc
loope
in
cwtl
push
pop
js
dec
dec
out
hlt
mov
push
add
ljmp
pushf
pusha
jg
rcll
pop
arpl
loope
je
bound
push
addl
jle
in
or
jecxz
adc
and
push
add
in
adc
test
adcl
and
aas
dec
xor
xor
int3
xor
sub
mov
jo
mov
xor
clc
mov
call
imull
add
xorb
add
fmuls
mov
mov
clc
mov
mov
mov
js
inc
mov
add
sar
ljmp
inc
loopne
rol
and
imull
lock
sbb
je
xor
lock
jle
inc
dec
cmp
or
das
pusha
xor
incl
pusha
fisttpl
pop
clc
or
sub
sub
xor
add
sub
lret
inc
or
ss
clc
loopne
cld
icebp
mov
adcb
cmp
lock
xor
jo
cmp
fisttpl
add
mov
push
sbb
es
inc
inc
aaa
ficoml
call
ljmp
sbb
mov
cmp
jle
pop
adc
pop
lock
adc
notl
outsb
arpl
subl
leave
or
or
outsb
dec
xor
cmp
cld
cmp
sbb
mov
xor
sarb
and
stos
or
mov
fidivs
jns
adc
fs
dec
pusha
jnp
jl
adcb
xor
out
enter
and
push
xchg
sbb
or
mov
jge
loopne
add
adc
jge
mov
pushf
aas
loopne
aaa
mov
mov
jnp
pop
adc
pop
pushl
xor
decl
add
hlt
adc
xchg
push
lock
add
dec
cld
mov
dec
and
lea
sbb
and
cmp
or
jp
add
dec
pop
adc
mov
mov
add
sti
add
push
inc
es
imulb
adc
and
or
mov
push
jo
sahf
pusha
loopne
loopne
addb
xor
call
orb
in
add
add
adc
je
fidivrl
fs
or
push
push
lock
aad
add
mov
mov
shlb
fistpll
add
lock
pushf
adc
or
mov
subb
lds
incb
fs
and
fstl
imul
inc
push
pusha
adc
or
lahf
add
inc
mov
inc
xor
lcall
push
add
movsb
adc
decl
mov
push
lret
or
imul
sbb
jg
out
mov
loopne
xchg
cmp
mov
sbb
call
inc
clc
cs
mov
jns
push
dec
xchg
lock
pop
dec
out
mov
sub
lea
add
add
adcb
lea
push
insl
shl
int
sub
fdivrl
adc
jo
cmp
int3
mov
cld
mov
cmc
xor
mov
imul
outsl
mov
imul
pop
aam
mov
add
or
or
jl
sbbl
jge
jb
dec
inc
adc
mov
lea
test
mov
fimuls
lods
add
mov
add
and
pop
mov
mov
push
js
inc
shlb
xchg
push
add
adc
push
push
ljmp
jno
mov
repnz
mov
adc
push
call
jb
dec
cmp
cmpsb
hlt
xor
mov
xor
sub
pop
sbbb
lock
mov
outsl
jl
adc
pusha
andl
je
dec
out
mov
push
or
lcall
repnz
ss
adcb
ja
es
or
lock
push
ja
aaa
sar
cld
jno
jle
ds
subb
jecxz
add
jbe
inc
sbb
sbb
rorl
inc
cld
xchg
mov
scas
dec
and
mov
pop
cmp
filds
mov
mov
mov
xor
mov
pop
aaa
inc
or
cmc
shr
das
xor
mov
jmp
jb
dec
add
add
cli
scas
xchg
add
or
mov
daa
mov
add
or
dec
jo
addl
inc
mov
xor
jg
push
add
scas
mov
lea
inc
add
adc
rcrl
rcr
arpl
repnz
adc
xor
incl
mov
pop
sbb
jo
adc
inc
enter
daa
dec
adc
xchg
xor
mov
jmp
mov
je
addb
jb
xor
add
inc
push
inc
scas
inc
jmp
push
rcll
push
repz
jmp
pop
mov
push
lock
cmc
push
mov
adc
mov
cmp
sahf
push
push
mov
jg
inc
mov
ja
or
shlb
je
push
mov
xchg
sbb
mov
cwtl
dec
hlt
mov
or
and
sbb
pop
xor
cmp
mov
rorb
in
incl
push
mov
mov
cld
push
jmp
mov
out
jo
into
ljmp
sbb
jae
push
sbb
stos
lock
mov
jp
mov
dec
and
add
push
sbb
pcmpeqw
pop
add
inc
xchg
jae
aad
add
add
add
stos
or
pop
and
packuswb
add
fbld
push
push
push
arpl
add
cmpsl
mov
push
push
mov
mov
inc
and
lock
mov
pop
or
jmp
jmp
jmp
test
push
mov
sub
xor
xorb
inc
mov
dec
std
or
fstpt
and
add
jo
push
sub
dec
and
popa
adc
sbbb
stos
or
push
sub
pop
es
or
add
icebp
inc
inc
or
fsubrs
mov
mov
sub
adc
ljmp
insb
aam
and
sub
xor
jecxz
ror
or
rorb
jb
inc
push
out
add
cld
mov
sbb
sbb
popf
adc
pushf
les
add
dec
outsl
clc
or
adc
push
cmp
scas
out
sbb
mov
xchg
push
push
push
lods
pushf
mov
fwait
add
push
bound
mov
cpuid
addl
into
addl
or
imul
and
and
pop
lock
lock
mov
cltd
mov
std
jmp
cli
insb
inc
movsb
dec
test
xor
or
mov
inc
pop
pop
pop
cmpsl
add
xchg
repnz
xlat
mov
push
mov
addb
mov
mov
cmpl
xchg
mov
aad
shr
shrb
movsb
jne
loop
add
sub
in
xchg
pop
inc
cmc
test
inc
mov
shl
inc
mov
jl
enter
add
add
je
cmp
out
out
mov
xor
mov
mov
ret
adc
in
jbe
pop
adc
rcrl
dec
cmp
lds
lods
sbb
cmp
ja
or
sbb
or
fdivr
add
subl
inc
rcr
test
test
ficompl
push
test
inc
shrb
mov
fldenv
lds
in
inc
adc
pop
inc
frstor
es
aam
les
ret
jbe
inc
cld
imul
sub
jl
mov
mov
pop
mov
push
add
add
mov
fmuls
cld
repz
push
jg
mov
add
add
cmp
or
dec
sbbl
test
or
pop
xchg
mov
inc
lret
pop
push
stos
lock
jne
lds
xchg
add
shlb
add
cltd
mov
les
sbb
pop
or
pop
out
sbb
jmp
pop
push
xchg
cmp
or
lret
bound
jne
js
xor
mov
xchg
repz
mov
xor
cmp
jbe
sub
lock
jo
mov
loope
and
roll
lods
and
lock
sub
out
and
test
inc
push
or
push
or
dec
rorl
adc
add
and
mov
testb
cmp
and
and
outsb
sub
mov
adc
pxor
fcomps
nop
popa
push
roll
outsb
cmc
push
ds
sti
sbb
cli
repz
jl
and
scas
pand
movd
xor
adc
and
test
out
pop
sbb
mov
pop
fistl
xchg
sarb
rol
or
sar
dec
cld
or
rcll
push
sub
cli
shl
enter
pop
loopne
shrl
fsubrl
es
cs
add
rolb
pop
sub
cmp
jae
xor
dec
in
lock
gs
mov
hlt
lahf
sbbl
loop
sub
shl
push
rcrb
call
adc
lods
jo
in
sub
rclb
or
rcrb
add
out
addb
imul
adcb
add
addr16
sub
add
jne
andl
pop
test
icebp
mov
loopne
push
dec
out
add
cld
fwait
and
popa
es
sub
jecxz
pminub
and
and
xor
xchg
add
sahf
push
je
sbb
js
bound
cmpsb
jo
mov
cld
lret
call
popa
xor
mov
ret
and
pusha
push
arpl
popa
inc
cmp
adc
sub
loop
adc
jbe,pn
sub
push
repz
mov
inc
loopne
sub
jg
testb
gs
cs
add
mov
in
mov
jecxz
bound
and
push
and
outsb
loop
mov
in
adc
and
or
add
aaa
push
jb
and
loope
sbb
in
data16
loopne
mov
loopne
pop
out
bound
add
mov
jbe
jmp
cmp
pop
test
mov
into
xchg
mov
sbb
shl
js
js
mov
enter
push
lret
lea
cmp
dec
pop
pop
sub
mov
scas
add
cld
adc
adc
sbb
pop
jg
xchg
add
sbb
in
jne
loop
add
mov
adc
dec
std
pop
push
js
pusha
add
fidivs
aam
mov
add
int3
hlt
jl
or
lcall
sbb
pusha
mov
cld
or
fbstp
and
filds
jne
jbe
jmp
sub
mull
xchg
icebp
in
add
lods
mov
popf
pop
test
mov
sub
test
or
cmovs
shll
mov
or
fisttps
test
aad
mov
add
mov
test
aas
hlt
or
je
ds
lea
cli
lahf
mov
inc
dec
pop
rorb
sbbl
cmp
imulb
fs
add
paddusb
jl
pop
inc
mov
scas
and
and
inc
mov
je
sub
mov
fcoml
add
sbb
in
addr16
test
movl
mov
test
mov
push
jbe
data16
andb
push
xchg
leave
imul
pop
repnz
jb
into
adc
add
sub
ret
lock
js
inc
dec
enter
push
cld
loopne
adc
add
sbb
pop
xor
ss
out
mov
pusha
jns
rolb
or
je
push
cmpb
pusha
add
mov
cli
test
jb
and
stos
fadd
push
jecxz
sub
cmp
push
mov
jmp
or
mov
xor
inc
data16
sbb
push
push
xor
pop
sbb
sbb
inc
aam
mov
rolb
mov
mov
mov
push
mov
in
xor
sub
ljmp
rolb
clc
or
xchg
cmp
in
pusha
xor
test
jne
xorb
jle
adc
add
and
push
js
ljmp
mov
orl
pop
lea
pusha
imul
cwtl
dec
xor
divb
cmp
cmp
jmp
push
add
pop
bound
push
icebp
add
sbb
ficoml
mov
sbb
roll
adc
mov
enter
push
rolb
and
mov
add
adc
fdivl
adc
pop
int
adc
push
adc
push
in
adc
insb
jbe
adc
sub
je
int3
jge
mov
xchg
ds
lret
rcrl
cmp
push
lea
xor
add
mov
cmp
sub
push
cmp
in
lods
call
cld
out
and
dec
and
test
je
mov
cmp
clc
scas
push
mov
xchg
or
add
and
mov
std
or
shlb
push
movsb
jl
push
rcl
in
jo
jle
jnp
xor
jmp
sub
scas
add
sarl
shlb
shrb
jne
and
orl
les
jnp
adc
or
and
lock
or
and
xor
inc
fmuls
or
xor
jae
jl
push
jbe
call
ss
inc
inc
hlt
add
fs
add
jb
mov
clc
ret
sub
sbb
add
mov
fmull
inc
mov
mov
stos
jo
add
enter
push
or
mov
jo
jae
pusha
mov
push
mov
data16
mov
pop
test
mov
stc
jbe
lods
dec
xchg
and
push
ret
lds
jl
ds
lock
aam
mov
orps
gs
cmp
into
adc
xchg
orb
xor
inc
clc
ja
xchg
fildll
das
mov
mov
shr
xorl
les
and
nop
lock
hlt
adc
dec
repnz
fdivs
or
mov
sub
sbb
movsb
pop
sbb
cmc
jg
lret
mov
pop
mov
int3
ret
mov
fcoml
mov
ret
nop
icebp
add
aam
aam
adc
les
dec
cmp
inc
sub
xor
ljmp
enter
xor
rcr
cs
rcr
hlt
leave
add
xor
fs
dec
or
xchg
cld
shll
adc
fs
pop
push
outsb
add
jb
add
and
and
add
lock
lock
inc
hlt
mov
cmp
mov
mov
cmp
adc
bound
add
movsb
sub
ss
jl
movl
aad
mov
and
ret
pop
lock
xor
pop
aad
inc
pop
loop
push
xor
incl
lock
shll
clc
add
jno
push
daa
and
outsb
rolb
aad
inc
add
or
add
push
in
fidivl
cld
sarl
mov
and
sbb
push
xor
adc
mov
scas
xchg
xlat
sbb
fwait
mov
out
add
adc
rcll
popf
ss
scas
mov
pusha
or
mov
in
add
ret
or
bound
dec
add
lcall
push
push
add
pushf
sbb
test
cmp
adc
push
inc
lahf
push
push
inc
fneni(8087
lock
push
adc
or
add
and
nop
data16
insl
fisttpl
cs
sub
dec
imul
add
in
pop
mov
or
cld
rolb
sbb
add
les
lock
mov
sub
xor
jl
jne
fwait
inc
js
mov
sub
pop
adc
cli
or
or
push
std
or
add
or
rolb
test
xor
sub
mov
sbb
adc
imul
add
add
pushl
mov
out
push
lock
aam
scas
sti
sbb
sbb
adc
outsl
lods
bound
mov
int3
add
das
sarb
sub
imulb
sub
xor
sti
jo
xchg
cwtl
sbb
rorl
pop
push
mov
pop
inc
out
add
enter
pop
sbb
dec
inc
push
icebp
out
add
add
xor
dec
xor
stc
orb
lea
sbb
ret
mov
or
cld
push
ljmp
xchg
inc
loop
testl
scas
loopne
pop
dec
add
rolb
xor
add
out
dec
shrl
sarl
aad
testb
pop
shlb
test
push
js
push
fs
xchg
push
repz
push
pop
adc
adc
jo
jle
push
aad
mov
jo
daa
adc
mov
sbb
push
sbb
neg
jo
scas
sbb
subb
hlt
or
sbb
call
fstpt
jne
add
enter
push
xor
stos
jae
sbb
rcrl
sub
mov
pop
je
xor
les
sbb
sub
test
jp
in
pop
pop
je
mov
mov
xor
or
or
dec
or
lods
test
inc
mov
stos
cmp
xchg
pop
and
sbb
lcall
add
or
or
add
test
mov
or
dec
hlt
add
dec
rcr
stos
lock
in
add
in
sub
cs
imul
and
mov
sbb
xor
inc
loop
mov
mov
lods
add
les
mulb
testb
mov
popf
sub
and
add
add
loop
dec
rcr
sub
add
push
dec
sbb
xor
aaa
dec
inc
inc
cmp
addb
xor
pop
shll
and
sbb
sbb
cmpsb
imul
cmpsb
stc
cmpsb
add
push
or
repz
jnp
sbb
loopne
fmuls
xor
aam
int3
enter
dec
repz
mov
push
imulb
lcall
pushf
sub
xchg
int
mov
sbb
add
jo
add
fisubrl
sbb
push
test
or
dec
imul
jge
orb
pop
lods
mov
les
xchg
add
adc
out
lods
insl
je
and
sbb
sbb
adc
int
mov
add
add
mov
cld
or
aas
ss
imul
in
leave
add
ficoml
xchg
aam
fistps
rolb
mov
sub
and
cwtl
shll
cmpsb
mov
sub
pop
lods
adc
cmp
mov
push
pushf
sbbb
sbb
add
mov
pop
mov
jbe
push
insb
add
add
pusha
rcrl
push
push
out
dec
adc
fldcw
or
pushf
cmp
xor
pusha
aas
inc
subb
sub
orb
insb
jnp
stos
jge
stos
jge
sarl
aam
int3
repz
aas
imul
push
mov
dec
mov
lods
test
xchg
sub
sbb
jl
mov
cmpsl
dec
jo
mov
cwtl
push
or
lea
rol
sbb
rcll
add
es
sahf
testb
lcall
ret
sub
pop
fcmovnu
fwait
subb
add
sbb
sahf
add
sbb
push
bound
or
imul
add
jmp
in
ss
add
fnstenv
rorl
lcall
push
adc
mov
xchg
mov
and
popf
xchg
cltd
sahf
mov
sbb
sbb
imul
ret
mov
xor
mov
mov
scas
stos
rcl
int
mov
rcrl
cmp
mov
mov
rcl
int
jb
push
mov
pop
sbb
add
dec
dec
xchg
cmpsb
imul
cmp
dec
roll
sub
es
sahf
push
shll
cs
add
out
sahf
cmpsb
imul
fcmovbe
pusha
sahf
cmpsb
imul
enter
cmp
das
pop
call
xor
cli
inc
inc
icebp
inc
jno
ljmp
inc
icebp
sbb
inc
sbb
cmp
or
xchg
pop
sbb
sbb
aas
dec
xor
xor
xor
mov
imul
xor
shll
pop
push
push
ljmp
inc
lcall
cmp
xor
xor
jnp
sbb
and
xor
xor
sbb
adc
dec
daa
push
data16
inc
jb
cs
test
sbb
loop
popa
bound
fiaddl
add
scas
pop
cmp
mov
mov
scas
sbb
dec
mov
mov
mov
daa
and
jb
mov
mov
pop
pop
add
movsl
call
jp,pt
addb
or
inc
jo
push
cmpsl
movsb
push
cmpsl
xor
jo
mov
dec
movsl
mov
loope
mov
or
sbb
sbb
mov
sbb
rcrl
lcall
rcrl
jp
sbb
push
push
icebp
mov
inc
sbb
inc
inc
cmpsl
stos
movsb
shll
add
and
add
and
sbb
push
adc
and
xor
cmp
js
cs
int
add
sbb
mov
fstp
aad
int
int
cmpsl
sbb
lds
mov
repz
lods
test
jle
decl
inc
and
inc
xchg
sbb
sub
inc
adc
sub
mov
add
add
pop
adc
or
sarb
jnp
inc
stc
mov
xor
pop
movsl
pop
add
mov
fdivs
inc
mov
lods
pushl
inc
dec
pushl
shl
push
mov
adc
pushf
or
sti
adcl
incb
hlt
xchg
or
mov
push
icebp
aam
movsl
mov
ss
dec
sub
sub
nop
jl
push
mov
mov
cmp
call
mov
jl
push
sub
andl
shll
and
jbe
adc
xorb
outsl
sbb
stos
mov
mov
ret
adc
add
repnz
std
or
or
add
cld
and
inc
and
adc
mov
push
xor
call
fdivrl
push
mov
or
nop
add
jne
call
sti
fwait
sub
ret
pop
add
add
sbb
pop
and
mov
cmpb
add
fisttpl
cld
ret
cmp
icebp
xchg
or
add
stos
std
in
inc
mov
lock
cmp
xorb
mov
add
lods
data16
add
or
pushl
rolb
testb
mov
mov
push
adcl
pop
cmp
and
pop
sub
ret
mov
jo
add
and
add
push
and
call
xchg
jo
mov
adcb
sti
pop
mov
xor
add
mov
adc
add
or
mov
inc
inc
xor
mov
pushf
pop
incb
or
adc
out
jmp
add
adc
adc
cs
adc
adc
push
push
cmp
push
add
fdivrp
xor
cltd
xor
xchg
xor
mov
ret
addb
sub
call
dec
add
repnz
call
or
mov
or
add
jno
adc
sub
in
pop
je
ljmp
push
or
pop
cmpb
stc
add
and
dec
sbb
and
mov
subps
test
xorl
cmpb
loop
icebp
or
or
ret
pop
push
cli
mov
jno
cmp
pop
push
clc
mov
cltd
mov
cmp
scas
mov
and
and
jo
adc
add
mov
orl
imul
and
sahf
jno
call
sbb
ljmp
cmpsl
jbe
mul
add
lock
push
xor
mov
cwtl
fstpt
inc
mov
xor
add
out
test
pop
je
ret
scas
add
xor
xchg
int
dec
jne
xor
jecxz
pop
cwtl
jle
out
push
sbb
xchg
or
pop
push
dec
imul
loop,pn
jle
or
outsl
push
orb
or
inc
xor
add
cmp
addb
push
aad
arpl
cltd
add
cmp
aaa
test
dec
fucomip
call
cli
sbb
add
pop
lock
push
or
add
mov
imul
push
add
hlt
adc
dec
sub
in
in
pop
and
lods
jno
add
pushl
orl
push
test
mov
smsw
inc
orl
dec
or
subb
adcl
sub
test
add
sbb
jne
push
pushf
test
cli
xorb
add
call
pop
scas
lcall
sbb
aaa
fmuls
push
lret
adcl
or
sti
or
add
lock
call
out
push
insl
cli
xlat
js
dec
orb
fs
std
push
test
inc
cmpsb
cld
or
add
sub
bound
sub
clc
jle
outsb
ja
add
pop
mov
lcall
les
nop
lahf
xor
adc
test
rcrb
or
test
rorb
pop
cmp
jg
xchg
shlb
dec
je
call
add
push
jne
out
call
sti
inc
xchg
cmc
add
pop
add
shlb
sbb
xchg
cmp
ret
cmpsb
jp
push
inc
jecxz
stos
rorl
aad
add
adc
jbe
lods
push
stos
rorb
mov
jmp
les
das
pop
fwait
shrb
or
mov
or
pushf
sarl
insb
xlat
scas
clc
shlb
and
shufps
mov
cmp
push
push
push
les
sarl
call
test
add
pop
das
les
clc
fildll
sub
lds
mov
fcoml
in
loope
lcall
addr16
or
jle
loopne
push
push
clc
roll
jp
call
inc
pop
test
aam
jg
add
clc
sub
rol
fistps
and
pop
loope
loopne
ljmp
mov
loope
loopne
inc
popa
and
adc
adc
test
pop
mov
paddw
test
sahf
ljmp
or
sbb
pop
adc
loopne
inc
decl
loopne
lods
lods
call
imul
ss
add
push
jne
pop
pop
or
or
fldt
call
clc
jg
call
push
jbe
adc
cmc
pusha
inc
push
flds
int
push
cmp
rorb
jecxz
jne
scas
pop
lock
incl
mull
jne
pop
mov
push
loope
adc
stos
movsb
imul
mov
pop
pusha
dec
popa
sub
pusha
sub
or
push
nop
add
add
popa
or
sbb
push
add
mov
pop
mov
xchg
xor
mov
stos
ror
imul
ret
cmp
js
ljmp
and
pavgb
loop
dec
push
shl
mov
je
ret
pop
add
add
outsl
inc
pop
je
rcrl
adc
add
loopne
mov
add
xchg
push
mov
dec
add
movsb
inc
cmp
je
cmp
lods
data16
je
cmp
std
mov
addb
lock
notl
popa
outsb
rorb
sub
repnz
idivl
and
mov
pusha
adc
nop
je
ret
test
adc
aaa
repz
cmpsb
je
xchg
cs
stos
je
adc
je
outsl
fildll
mov
ret
insb
je
adc
push
ret
pop
out
out
je
outsl
je
ret
fiadds
adc
loopne
add
xchg
dec
sbb
push
cmp
fstl
and
loopne
mov
es
rolb
add
stos
filds
das
imul
pusha
pop
add
bound
test
mov
cmp
and
and
jbe
jp
push
hlt
loopne
jb
test
mov
sub
fimuls
cmc
mov
xor
jb
loope
jmp
into
ret
jbe
mov
lock
out
rorb
pusha
pop
jmp
fldt
inc
pusha
xor
bound
movsl
scas
clc
pusha
addl
popa
pop
cmp
xor
mov
add
adc
cmp
addl
or
mov
sbb
mov
add
add
inc
inc
insb
push
mov
test
ret
loopne
cmp
pop
pusha
inc
mov
lock
ljmp
popa
cmp
popa
add
push
call
pusha
adc
fucom
sub
jno
aaa
jge
sbb
fdivrs
inc
mov
call
outsb
jb
loopne
and
cld
cmp
push
jae
fnstsw
je
iret
push
pusha
pop
ret
and
cmp
mov
clc
add
adc
sbb
repnz
inc
fs
pop
test
addb
sbbb
fisttpl
repnz
push
fdivrl
je
pop
addb
in
call
xor
push
adc
jl
and
stc
test
sub
xchg
push
sub
push
mov
pop
jmp
or
xor
and
cmp
cld
stos
ss
inc
icebp
mov
jnp
lcall
pop
or
fbld
pop
and
sub
ret
xor
ljmp
pop
in
div
pusha
out
mov
and
add
push
mov
add
add
adc
jo
ret
or
adc
adc
jbe
loope
je
rclb
inc
idivl
test
lea
jb
inc
mov
mov
cmpsb
mov
jmp
pop
push
icebp
or
and
stc
call
mov
push
xchg
in
pop
sbb
xor
push
inc
mov
mov
xor
xor
inc
cmp
inc
cld
sbb
mov
mov
adc
xor
test
pop
sbb
or
xchg
mov
xor
add
aas
repz
xor
push
inc
call
cmp
int3
pusha
lock
jp
mov
addr16
inc
mov
dec
aaa
add
pop
sbb
adc
inc
jecxz
sub
pusha
je
xchg
sub
dec
ret
adc
cmp
jecxz
ss
mov
daa
adc
or
push
jg
jg
rcl
inc
or
add
cmp
push
mov
lock
test
dec
xor
xor
fs
outsb
insl
jae
cs
xchg
push
xor
adc
imul
add
jo
mov
fwait
xchg
sti
jnp
or
or
or
push
mov
mov
inc
dec
mov
add
xchg
and
pop
xor
mov
sub
int
dec
sbb
sbb
jp
xor
leave
cs
fwait
lcall
pop
dec
add
and
into
push
stos
mov
push
push
jecxz
insb
mov
pop
lock
outsb
addr16
mov
lahf
leave
nop
shr
jg
std
jo
xor
jne
adc
mov
inc
imul
mov
ss
cmpsb
sbb
fucomi
add
cmp
or
mov
gs
inc
scas
inc
outsl
jl
daa
or
sbb
insl
stos
scas
xchg
aas
stos
insl
xchg
inc
lods
inc
add
or
pop
cmc
mov
add
fldenv
cmpsb
add
mov
add
jns
add
lods
mov
xlat
sbb
std
push
lock
dec
je
setp
jno
test
js
das
dec
cmp
pop
mov
sub
test
cmp
stos
lret
fucomip
and
mov
pop
jnp
mov
sbb
mov
xchg
xchg
mov
test
add
popf
stc
repnz
or
add
rol
cmp
outsb
cmpsb
cmpsb
rcll
push
mov
lret
out
and
negl
lock
sbb
dec
arpl
cld
clc
mov
jno
mov
mov
frstor
push
rcll
push
lock
imul
sbb
mov
add
xor
mov
aas
mov
push
lock
and
push
pop
cld
stc
cmpsb
pop
lods
mov
xor
std
mov
mov
lock
sbb
leave
popa
sbb
sbb
fiadds
stc
inc
call
adc
pop
cs
push
jl,pt
imul
icebp
add
pop
cli
sub
mov
ja
mov
adc
pop
sbb
jbe
arpl
mov
mov
fistps
aas
mov
jo
push
jns
sbb
insb
jl
pop
fstpl
cmpsl
xchg
popa
stos
frstor
sub
pop
and
fstpl
sbb
inc
enter
mov
fstl
or
frstor
cmpsl
sub
inc
fildll
or
fisttps
stos
ss
insl
jg
mov
xor
add
icebp
push
add
cld
sbb
daa
push
shll
pop
sbb
int
or
add
cld
xchg
pop
negb
add
mov
dec
mov
lcall
push
jge
imul
fldcw
xor
add
push
sahf
cmp
add
sub
xor
mov
or
pop
add
jbe
pop
xorb
outsb
add
dec
jno
mov
rcrb
add
adcb
adc
into
mov
sti
adc
cs
inc
or
add
popa
shll
cmc
jb
lcall
or
addb
push
push
cli
addb
add
out
ficoms
call
dec
orb
lock
xor
lods
push
inc
loopne
inc
stc
dec
cmp
pop
rcr
stos
jne
imul
sbb
add
fbstp
dec
cmp
or
xchg
push
imul
scas
xchg
add
mov
pop
add
jae
insb
gs
add
lods
mov
jg
mov
insl
xchg
popa
add
mov
test
std
mov
bound
gs
cltd
inc
imul
add
outsb
insl
popa
push
ds
inc
xchg
insb
inc
les
rorl
jge
inc
jne
nop
pop
cld
push
pop
outsb
add
fildl
and
mov
outsb
adc
push
std
ret
and
add
int3
push
inc
fcomps
push
les
mov
aaa
les
or
adc
xchg
arpl
lcall
push
sub
or
cmpsb
mov
or
pop
fcomip
dec
add
inc
jb
sbb
add
gs
xchg
test
and
add
and
lock
and
hlt
insb
imul
arpl
outsl
xchg
mov
adc
popa
jbe
xor
rorb
jno
sbb
inc
mov
adc
and
add
and
mov
addl
adc
rcrb
or
popf
nop
pop
jnp
dec
xchg
arpl
adc
dec
leave
sbb
add
lcall
fs
mov
outsl
sub
rolb
xchg
je
inc
xchg
push
pop
gs
add
lea
xchg
jg
mov
sbb
popa
adc
mov
ss
adc
dec
rolb
xor
sbb
out
loop
push
inc
roll
dec
hlt
xchg
clc
sub
jl
add
imul
xor
push
cmp
inc
insb
mov
sub
mov
insb
ret
mov
loop
fsubs
mov
pop
stos
push
cmp
pushf
pusha
xchg
fs
or
jae
je
je
and
ret
push
push
sub
rcrb
dec
popa
adc
inc
mov
jle
test
inc
insb
mov
rorl
cld
bound
testb
std
shll
jae
mov
jb
push
adc
push
or
cmp
shl
mov
xchg
pop
out
js
push
add
test
xchg
sbb
inc
adc
lcall
pop
movl
int3
loopne
adc
cwtl
add
mov
dec
shrb
jb
loop
adc
in
add
je
lea
mov
gs
inc
xor
lcall
mov
or
push
lods
inc
add
arpl
mov
cmp
jle
xchg
jae
mov
loopne
mov
pop
mov
pop
add
arpl
sahf
fs
push
pop
fucomp
inc
inc
jbe
outsw
lea
or
add
test
mov
pusha
or
mov
sbb
sbb
jecxz
data16
mov
add
cwtl
pusha
adc
add
mov
cld
mov
pusha
es
les
sub
loopne
add
dec
mulb
add
mov
lea
mov
pusha
sub
and
pop
inc
nop
insl
jo
push
cld
loopne
jb
sub
popa
pop
dec
nop
mov
jne
arpl
inc
movsb
clc
pusha
add
in
adc
outsb
adc
adc
xchg
je
jecxz
bound
jo
ret
gs
pop
add
jb
sbb
sti
mov
pusha
inc
dec
lods
mov
loope
in
test
cmp
sub
add
gs
mov
xor
stos
or
dec
popf
xchg
push
data16
popa
aam
xchg
mov
sbb
das
inc
xchg
add
ljmp
gs
loop
mov
jb
jg
cmp
sbb
je
mov
xor
gs
outsb
jns
inc
loop
popa
push
popa
call
bound
insl
fucomip
inc
popa
fwait
push
gs
inc
push
or
push
mov
inc
adcb
inc
add
xchg
xor
aas
jge
add
jo
inc
insb
xchg
sbb
jne
mov
jmp
in
dec
lcall
adc
or
add
add
cmp
dec
arpl
mov
jl
sti
cwtl
push
or
aaa
mov
cmpb
xchg
cltd
and
xchg
outsl
push
loope
stos
imul
push
mov
xchg
sbbb
dec
add
and
and
andb
xchg
jmp
push
jns
push
insl
mov
jns
add
test
xchg
lods
jmp
mov
test
push
cmpsb
sbb
push
push
xor
pusha
and
outsb
inc
mov
clc
mov
cmp
inc
pop
jne
lea
jecxz
dec
loopne
into
mov
mov
inc
xchg
xor
jb
loopne
pusha
scas
insb
mov
cmp
cmp
push
add
pop
shrl
jbe
enter
hlt
push
cmp
js
jb
add
popa
sbb
sub
xor
loop
inc
mov
xchg
and
in
or
push
add
cld
inc
outsl
mov
stos
insl
mov
cmp
sbb
xor
xor
and
add
dec
adc
jne
dec
inc
outsb
data16
jmp
adc
dec
xor
lock
pusha
clc
add
adc
testb
xlat
fwait
cs
mov
addb
jo
xor
out
imul
inc
xchg
jb
jae
cmp
mov
xor
dec
adc
shrb
mov
xchg
dec
popa
das
jle
int3
xor
cbtw
adc
sub
js
lahf
adc
cmpsb
mov
sahf
jno
and
or
or
lcall
popa
mov
xor
les
xor
imul
fisubs
nop
jo
xchg
xor
insb
jne
lods
pop
icebp
dec
cmpsb
dec
popa
insl
lcall
outsb
lcall
push
adc
imul
or
cmp
inc
js
adc
repnz
jno
cmp
mov
inc
insb
insb
cs
filds
push
hlt
cmp
mov
repnz
pushl
pop
inc
xor
push
repnz
push
cmc
push
rclb
jp
mov
push
mov
mov
inc
cld
jg
jo
sbb
mov
add
push
xor
jae
sahf
xor
jle
add
pop
dec
adc
mov
jae
adcb
lret
cmp
add
icebp
or
push
or
xchg
or
mov
in
cmp
lock
xor
adcb
mov
adc
jbe
mov
xor
nop
int3
xor
imul
mov
fs
mov
cmp
mov
aas
pop
sub
inc
push
dec
mov
shll
call
add
enter
fbld
add
outsb
imul
lret
or
outsl
popa
lea
mov
pop
push
gs
popf
and
xchg
inc
jb
test
fs
outsb
adc
insb
xor
nop
cld
inc
or
imulb
inc
push
jae
xchg
mov
lock
or
imul
jp
dec
add
aam
imul
mov
cs
outsl
ljmp
leave
in
mov
push
add
movsb
jno
cwtl
push
and
arpl
lds
xor
add
fwait
outsl
push
ja
xor
ret
insb
xor
scas
pop
lock
xor
icebp
sub
es
jnp
add
mov
add
push
jo
cli
xor
cwtl
mov
cld
mov
mov
loopne
pop
xchg
test
add
pop
pop
add
push
push
outsl
inc
add
data16
dec
inc
dec
mov
fwait
jno
jo
fistpll
ja
icebp
or
inc
mov
push
nop
lock
or
gs
insb
pushl
insb
ljmp
add
mov
dec
sahf
loopnew
mov
add
and
add
gs
popa
aam
pop
mov
lock
or
nop
push
jb
jl
adc
loopne
xchg
xchg
divl
mov
xchg
dec
sub
fs
push
xor
or
ljmp
push
popa
imul
mov
dec
outsb
jne
popa
push
mov
inc
lcall
or
sbb
xchg
jp
adc
push
addr16
test
addb
jp
mov
pushl
add
pop
lock
sbb
or
jnp
inc
sbb
outsb
clc
fcomip
icebp
pop
hlt
and
push
jo
xor
push
es
inc
cmpsb
shll
fdivs
sbb
test
ds
sub
sbb
xor
je
outsl
aaa
loope
add
mov
fs
inc
xor
mov
mov
mov
mov
pop
lock
lock
push
outsl
inc
or
push
add
jae
lods
or
shlb
insb
dec
jb
xor
push
das
xchg
inc
mov
jge
sarb
ja
ret
mov
ja
add
pop
aam
mov
imul
sub
ss
fs
xor
jne
loope
mov
sbb
pusha
outsl
mov
cli
xchg
imul
loopne
scas
adc
or
or
push
outsl
das
jp
ret
add
jno
dec
loopne
lock
icebp
sbb
xor
xor
xor
jb
cmp
ja
out
xor
cmp
jo
je
scas
jp
ljmp
ja
jecxz
dec
jae
push
cli
imul
dec
cli
mov
mov
push
mov
fcomip
sbb
lods
jo
mov
nop
cmp
popf
mov
jae
xor
das
sar
lock
jo
mov
lret
sub
jae
incl
jo
jle
jbe
or
pop
jno
jae
xor
sti
mov
cmovno
xlat
inc
rorb
popa
jae
shrb
sar
addr16
xchg
icebp
or
add
fs
in
js
pushl
lds
fiaddl
xor
hlt
aaa
mov
pushf
mov
mov
sbb
push
jo
hlt
mov
and
inc
ljmp
add
in
and
sbb
jne
lock
dec
jo
jo
pusha
outsl
mov
aaa
add
test
adc
mov
outsb
shrb
jne
or
add
add
inc
add
pop
or
cmp
xchg
add
mov
or
xchg
jns
adc
stos
test
add
stos
xchg
add
xor
bound
push
arpl
inc
xor
push
data16
xor
add
lcall
roll
ljmp
insl
mov
pop
cltd
push
push
adc
das
push
mov
pop
data16
cmpsb
mov
pop
data16
pop
scas
xchg
jns
mov
add
fbstp
push
add
push
gs
imul
xchg
mov
sbb
mov
add
dec
adc
xor
xorb
jno
popa
ret
addl
and
add
cmp
pop
sub
cwtl
subb
push
xchg
inc
mov
jg
insb
push
add
push
jb
jmp
adc
sub
sbb
adc
mov
jp
nop
stos
push
inc
push
int3
mov
fs
insb
test
pushf
clc
mov
dec
add
ficoms
cld
dec
aaa
pop
cwtl
loope
mov
jbe
sub
das
clc
popa
orl
adc
inc
addl
scas
mov
out
sahf
addl
bound
imul
adcl
add
add
jg
xor
fs
xchg
adc
lea
cwtl
je
addb
push
mov
les
scas
cltd
inc
orb
cs
adc
add
les
je
xor
jns
adc
jo
arpl
pop
xorb
dec
push
lcall
jecxz
dec
arpl
jo
inc
out
arpl
mov
aaa
stos
clc
roll
sahf
insl
dec
fs
inc
lea
ret
jle
ret
pop
aam
mov
jb
cmpsb
pop
cwtl
fimull
mov
mov
xchg
jae
adc
jg
cltd
es
iret
add
inc
dec
ret
into
sbb
sbb
clc
and
push
add
xchg
data16
outsl
rorb
outsb
popa
sub
shlb
sbb
jp
stos
sarb
ret
add
jo
jb
dec
nop
push
push
xchg
ss
outsl
mov
pusha
push
aam
ret
or
sub
call
fidivrl
dec
test
push
lock
push
outsb
shll
cmp
or
fdiv
inc
imul
ret
ss
popa
mov
andl
add
inc
pushf
loopne
lea
and
xor
rorb
idivb
dec
sbb
enter
add
ret
xchg
rorb
adc
ret
and
cmp
int3
dec
add
mov
xor
ret
sarl
push
inc
push
lods
jne
inc
push
pop
bound
sbb
push
xchg
lcall
cs
push
pop
cmpsl
rorb
je
pusha
outsl
jl
loopne
gs
insb
es
sbb
in
inc
jae
mov
pusha
xor
add
cltd
imul
adcb
cmp
push
add
or
or
mov
add
cmp
inc
push
dec
in
jb
aaa
rcll
outsb
loopne
popa
jo
inc
or
push
inc
add
dec
jl
gs
jb
ja
and
mov
mov
addb
outsb
jae
or
ja
inc
loopne
push
dec
mov
gs
jnp
jmp
dec
cwtl
xchg
or
loope
pusha
push
push
movsb
dec
les
xchg
xchg
loopne
les
fincstp
fcomip
and
or
popa
fdivs
mov
adc
popa
sti
lds
mov
popa
xchg
push
imul
push
pop
mov
mov
fdivr
jg
pusha
add
dec
jae
push
dec
pusha
push
push
bound
mov
push
mov
push
cmpl
inc
add
push
and
sahf
or
loopne
push
out
fiaddl
inc
xchg
mov
adc
pop
fsubp
jp
inc
inc
inc
inc
pusha
inc
mov
add
lods
imul
movsb
adc
lahf
insb
fisttps
add
outsb
jno
jne
pusha
push
pop
cld
xchg
ss
loopne
test
adc
inc
arpl
sbb
add
mov
cwtl
push
or
mov
fcoms
xchg
cltd
xchg
mov
inc
jb
mov
push
push
add
mov
add
rorl
loopne
push
fiadds
test
push
jle
dec
mov
stos
pop
popa
mov
or
loopne
push
mov
mov
bound
or
pusha
or
or
fcomip
loopne
mov
clc
je
outsb
arpl
popa
shlb
inc
mov
outsl
mov
cs
mov
mov
or
xchg
mov
add
mov
adc
in
loopne
gs
outsb
jo
mov
jl
push
insb
add
shlb
loopne
cmp
loop
inc
xor
loop
sbb
or
in
xor
pop
adc
push
enter
rolb
imul
bound
jg
push
mov
or
inc
loop
mov
bound
mov
add
int
add
fs
loop
sub
loopne
inc
insb
adc
mov
pusha
ss
inc
add
test
rolb
mov
xlat
push
cmp
test
inc
adc
mov
repnz
sub
lea
jmp
popa
mov
jl
mov
jmp
push
in
inc
dec
mov
inc
dec
inc
sub
sbb
mov
cmp
fwait
loopne
cmpsl
and
test
mov
out
add
test
inc
pop
xor
js
or
aad
xchg
push
dec
inc
add
cli
sbb
sub
inc
push
pusha
fistl
popa
add
and
das
sub
arpl
or
add
stos
in
shrb
push
ljmp
dec
jbe
insb
mov
idivb
repnz
jo
xor
int
jl
adc
shll
insb
mov
fldt
ret
xor
jo
outsl
je
sbb
xchg
add
add
icebp
push
inc
cmpsl
and
les
mov
js
inc
and
clc
mov
xchg
arpl
lea
cmpsb
sub
jno
push
jns
mov
subb
jb
sarb
push
sbb
jp
inc
sub
add
outsb
jne
insb
add
cld
xor
push
js
mov
add
add
insb
push
xor
xor
je
xor
scas
inc
pop
int
push
jbe
jo
mov
jmp
gs
inc
push
cmpsb
push
push
hlt
mov
stos
scas
aam
mov
lea
pop
mov
add
jbe
or
scas
pusha
jne
xchg
pop
jo
mov
aam
adc
addl
jl
jo
or
outsb
mov
mov
add
inc
inc
hlt
push
jno
mov
je
mov
lcall
inc
fistl
inc
add
lods
xor
xor
test
pop
lea
pop
mov
lret
in
ja
push
push
add
test
clc
mov
shlb
inc
insb
pop
lock
cld
pop
xor
clc
add
insb
xor
jbe
lock
out
xchg
xorb
loope
mov
insb
lock
or
add
fnsave
jbe
inc
inc
jbe
xchg
sub
inc
pop
outsl
push
ljmp
fadds
adc
cwtl
jmp
sub
out
dec
mov
in
mov
mov
jge
or
or
or
push
lea
sarb
gs
jb
xchg
push
mov
push
push
outsl
push
sti
sbbb
dec
push
push
xchg
testb
rclb
popa
imul
pop
jbe
lock
call
gs
push
dec
and
repnz
dec
dec
lock
pop
cwtl
inc
push
push
xor
mov
jo
icebp
mov
repnz
inc
vphaddbd
decl
cltd
data16
jp
jo
std
xor
push
xor
and
in
incl
inc
scas
dec
mov
push
add
mov
cmp
or
cmp
mov
out
add
gs
push
mov
jb
insb
cmpsb
aas
xchg
lock
mov
adc
add
ja
outsl
imul
add
icebp
add
loopne
add
int3
shl
call
xchg
je
popa
lock
mov
arpl
cld
jg
xchg
cmp
xchg
jae
arpl
je
xor
push
add
xchg
sub
dec
test
mov
je
je
ljmp
inc
mov
xor
out
push
je
jnp
or
push
inc
push
inc
and
je
and
ficompl
lcall
stos
mov
push
dec
xor
push
lods
add
add
cmp
mov
push
pushf
gs
adc
sub
test
sbb
jnp
dec
pop
jo
js
sbb
inc
outsb
ja
add
mov
add
add
aas
add
adc
xchg
pushl
sbb
filds
push
call
lret
hlt
add
push
xchg
jg
mov
sub
jle
out
divl
mov
or
add
adc
fwait
push
loop
mov
ret
out
mov
aaa
cmp
fcomi
adc
mov
inc
mov
cli
or
in
xor
mov
sbb
lock
decl
test
cmp
pop
std
and
dec
out
addl
mov
xchg
mov
scas
inc
inc
push
mov
add
jle
mov
incl
add
cmpsb
xor
dec
pop
xchg
mov
add
inc
inc
xchg
test
inc
test
ljmp
or
testl
push
testb
outsl
mov
jmp
stos
push
inc
pop
out
jecxz
repnz
jnp
lcall
es
xlat
adc
stos
pop
scas
mov
cmp
cli
inc
adc
add
repz
loope
test
dec
inc
lcall
out
mov
or
addl
dec
cmpsl
inc
in
insb
cmp
jge
test
shlb
sub
out
xor
cmpsb
lock
and
loope
xchg
pop
mov
popa
cs
pop
in
pushl
add
addr16
xchg
clc
repz
fldl
xchg
fisttps
add
dec
jecxz
and
int3
int
xor
mov
or
scas
mov
or
mov
cmp
mov
cs
mov
in
xor
cmp
sub
out
pop
pop
dec
shl
xor
mov
mov
sbb
cmp
mov
scas
add
clc
sub
outsl
xor
cmp
aad
xchg
jb
nop
out
cmp
jg
outsl
addb
rorb
mov
mov
leave
aas
insl
fistpll
adc
adc
lcall
mov
lods
push
lock
xchg
aas
dec
mov
jp
jmp
pop
roll
pop
aas
sub
das
jp
and
std
stc
mov
cwtl
mov
daa
ljmp
aas
subb
das
fstl
add
push
int3
fcoml
xchg
cmpl
arpl
jl
mov
cmp
pop
loopne
xor
std
xlat
cmp
mov
in
call
jecxz
cmpsb
add
cmp
jne
xchg
pop
cli
cs
jno
rolb
xor
mov
pop
in
pop
xchg
sbbb
scas
push
mov
adc
mov
sub
xor
dec
in
leave
shl
sbb
imul
ret
call
pop
pushf
popa
out
pop
test
cmp
scas
sub
movsb
fwait
dec
bound
scas
stc
xchg
jge
sbb
push
pop
std
sub
enter
fsub
add
in
rcl
mov
in
mov
clc
loop
add
scas
inc
push
pop
orl
mov
orl
or
sub
incb
adcb
or
mov
insl
shll
iret
push
roll
push
insl
mov
lcall
and
mov
cltd
addl
dec
or
add
add
add
insl
ss
cmp
lods
shll
push
add
lea
stos
sbb
cmp
daa
das
aaa
inc
dec
push
arpl
mov
inc
add
xchg
add
outsb
cmp
push
cltd
lahf
lret
add
int3
add
mov
mov
mov
push
dec
add
sbb
inc
dec
rcr
jl
lret
adc
int3
mov
insl
int
push
xchg
lret
daa
add
imul
fnstenv
insb
xchg
lret
xor
icebp
insl
fwait
mov
test
and
outsb
mov
mov
in
jmp
dec
or
or
mov
fwait
out
jge
mov
jmp
push
push
mov
popa
lcall
sub
in
jg
add
sarb
addr16
jmp
push
dec
sub
adc
jo
insl
sub
aaa
jb
xchg
cs
es
rorb
mov
push
pop
adc
pusha
xchg
lret
cld
out
jg
aaa
push
aaa
mov
aas
adc
aaa
daa
aaa
in
paddb
idivl
adc
or
outsb
decl
cmp
cmp
out
cmp
out
sbb
jmp
fwait
mov
and
ja
sarb
cmp
sahf
lcall
mov
xor
xor
xor
xor
adc
xor
xor
ret
in
sbb
test
jae
adc
mov
xor
aam
cmp
cmp
ss
mov
ret
add
cmp
cmp
push
adc
and
enter
frstpm(287
inc
ss
xchg
add
cmp
clc
mov
movsb
cmp
mov
inc
cmp
cmp
adc
cmp
loopne
adc
add
and
flds
xchg
sbb
ret
cmp
push
mov
cmp
aaa
cmpl
arpl
mov
sbb
sbb
sbb
cld
int
ss
add
jecxz,pt
and
sarl
enter
ds
ds
ds
xor
mov
sbb
arpl
push
mov
inc
les
xor
and
in
adc
test
fwait
ds
add
repz
inc
ss
sbb
fwait
mov
mov
mov
aas
aas
cmpl
aas
jae
aas
arpl
mov
aas
movsb
aas
push
aas
aas
inc
sbb
insb
and
adc
mov
lret
sbb
rclb
incl
pop
push
pop
xor
sub
lret
dec
adc
cmp
mov
bound
mov
xor
adc
fisttps
pop
xor
fdivrp
xor
xor
xor
fdivl
sbb
in
inc
and
sbb
and
in
aaa
adc
mov
xor
xor
jl
jnp
insb
ret
mov
xor
fwait
xchg
dec
mov
sbb
fdivl
std
adc
adc
xor
xor
insl
xchg
or
xor
cld
cmp
mov
pop
xor
sbb
jl
sbb
jg
fld
pushf
xor
mov
mov
xor
pusha
repz
xor
xor
xor
xor
cld
inc
ss
pop
or
mov
sbb
sbb
sbb
mov
adc
xor
xor
xor
xor
xor
adc
sbb
adc
fld
cld
xor
mov
xor
xor
xor
mov
xor
xor
xor
xor
xor
ss
or
jo
inc
ss
adc
cmp
mov
lods
ds
aas
insb
aas
inc
jno
or
sub
mov
shlb
test
jl
push
es
ss
lcall
fwait
enter
xor
xor
jnp
int
fdivr
mov
push
mov
cli
cmp
cmp
mov
add
add
inc
and
sbb
pop
mov
and
mov
cmp
cmp
cmp
fwait
mov
cmp
in
sbb
sbb
pusha
add
lcall
nop
aas
inc
sbb
pop
xor
mov
clc
or
into
xor
pop
in
repz
xor
xor
jg
scas
xchg
ja
push
xor
push
mov
add
mov
nop
cmp
mov
add
cmp
cmp
add
sbb
sbb
cmp
cmp
pop
jmp
cmp
xorl
mov
push
repnz
cmp
xor
outsl
incb
fdivl
aaa
push
aaa
lret
cld
lcall
sub
in
lock
cmp
inc
inc
cmp
cmp
cmp
mov
mov
adc
out
cmp
cmp
rclb
jo
cli
in
outsl
clc
push
cmp
cmp
adc
fdivrs
and
push
push
adc
sti
cmp
adc
fsubrs
gs
aad
mov
or
das
cmp
xchg
cmp
stos
call
mov
xchg
in
ds
jo
cs
mov
push
inc
aas
repnz
sub
pop
stos
lock
xchg
push
xor
mov
xor
adc
lods
ds
sub
xor
mov
clc
xorl
ss
lock
cmp
cmp
cmp
cmp
popw
cmp
cmp
cmp
xchg
pop
sbbb
nop
inc
mov
aam
or
paddd
jbe
nop
push
test
xor
inc
pop
icebp
sbb
xor
xor
xor
xor
xor
hlt
xor
adc
pop
or
xor
xor
push
push
add
into
xor
xor
xor
enter
adc
rolb
sub
popa
in
cmp
jg
call
cmp
cmp
pop
cli
cmp
dec
push
cmp
add
cmp
xchg
adc
cmp
cmp
cmp
ljmp
clc
idivb
cmp
adc
cmp
adc
aaa
ds
jo
push
ds
cmp
inc
out
sarl
aas
jp
fwait
aas
sub
adc
inc
xchg
xor
pushl
stos
xor
aaa
jle
cmp
stos
xor
imul
call
loopne
xor
cli
xor
xor
xor
push
mov
xor
xor
xor
adc
xor
add
ss
scas
std
ljmp
cmp
mov
ss
aaa
adc
jge
lea
fs
fcmovnu
or
cmp
push
cs
cmp
cmp
adc
fwait
sti
cmp
cmp
test
js
dec
xchg
cmp
mov
mov
cmp
xchg
in
dec
cli
in
mov
ret
mov
outsb
fisttps
ds
push
aas
lds
inc
aas
mov
aas
push
aas
sub
rorb
lock
lods
mov
lods
aad
hlt
pop
pop
pop
xor
fdivl
xor
xchg
ret
xor
xor
pushl
ss
and
or
pop
cmp
cmp
pushl
cld
cmp
cmp
cmp
outsb
jge
mov
ret
jo
dec
mov
inc
cmpsb
pop
inc
and
adc
ja
pushl
xorb
xor
daa
inc
xor
jbe
incl
dec
xor
pop
into
arpl
mov
add
jo
cld
lock
cltd
cmp
mov
adc
cmp
cmp
sbb
adc
mov
pop
cmp
sub
scas
push
pop
loopne
cmp
add
jmp
movsb
test
push
pop
scas
jo
lret
adc
lock
roll
dec
xchg
xor
xor
xor
loope
int3
or
gs
ss
adc
shll
cwtl
fcomip
mov
mov
pop
cmp
lds
lret
cmp
cmp
cmp
test
inc
ds
and
cmpsb
xlat
mov
xor
stos
cli
movd
ss
aaa
and
out
sub
fidivrs
add
jl
popa
pop
dec
loopne
push
cmp
adc
pop
xor
inc
cld
xorb
xor
cmp
cmp
push
inc
push
cld
cmp
test
mov
mov
call
mov
es
xor
cmp
nop
inc
sahf
lock
fistpll
and
daa
jle
lcall
in
cmp
or
or
aam
gs
call
jmp
popa
lea
mov
xor
mov
mov
add
xor
mov
int3
cmp
push
in
mov
daa
xor
adc
xor
mov
jo
jle
jg
pop
xor
xor
fiaddl
js
xor
and
xlat
dec
fists
sub
iret
xor
xor
mov
add
push
xor
jmp
outsl
ss
xor
insb
xor
jl
cmpb
xor
or
xor
xchg
xor
pop
movsb
xor
outsl
mov
xor
ss
add
ss
adc
mov
out
ss
lahf
ss
ss
xchg
jl
out
jg
test
ja
mov
xchg
ss
pop
movsb
ss
out
cli
call
lods
orb
ss
ss
aaa
ss
ss
add
pop
fdivrl
or
ss
fsubp
mov
ds
ds
ds
aas
mov
push
cld
ljmp
stos
pop
sub
out
xor
out
jb
or
xor
decl
ss
add
pop
stos
xor
cwtl
push
xor
outsl
cli
ja
bound
jo
mov
mov
ret
xor
bound
xor
std
in
mov
hlt
inc
xor
add
stc
nop
imul
sbb
fbstp
sub
iret
std
in
mov
xor
lea
test
outsl
mov
and
xor
xor
xor
ljmp
xor
xor
xor
scas
mov
jo
adc
adc
xor
lock
hlt
add
out
push
pop
loopne
sub
mov
test
or
jns
insl
xor
mov
push
and
xor
out
xor
xor
lock
xor
fisttpl
pusha
ds
xor
ljmp
call
ss
ss
push
cmpsb
push
cmp
adc
jo
mov
shlb
sub
aaa
push
aaa
movsl
add
jb
xchg
test
dec
jl
mov
adc
aaa
xor
divl
add
loope
xor
outsl
jmp
cmp
cmp
ret
cmp
es
fidivrs
sbb
or
loop
cmp
cmp
jmp
ret
cmp
adc
cmp
cmp
cmp
shrb
cmp
aas
test
rclb
adc
cmp
cmp
jbe
add
inc
lods
aas
outsl
loopne
push
mov
and
es
and
scas
adc
cli
adc
loop
insl
xor
xor
xor
icebp
lock
insb
pusha
xorl
xlat
xor
xor
xor
sar
ret
adc
into
mov
inc
xor
xor
cld
pop
add
xchg
int
jne
test
xchg
xor
mov
inc
ljmp
cld
out
xor
xor
xor
xor
fidivl
sbbb
shll
mov
add
xor
fwait
mov
movsb
xor
xor
xor
fdivs
xor
xor
or
xor
ss
loope
out
ss
sahf
sub
fldt
aas
in
clc
out
or
stc
into
add
aaa
in
aaa
pop
aaa
jecxz
test
stos
dec
fnstenv
sub
iret
aaa
xor
insb
dec
aaa
mov
push
pop
pushl
cmpsl
aaa
pop
aaa
popf
aaa
addr16
xchg
aaa
jno
mov
jnp
jg
test
jne
push
aaa
call
clc
cltd
aaa
popa
aaa
mov
aaa
mov
inc
aaa
shll
aaa
lret
aaa
das
aaa
aad
outsl
pushl
and
aaa
jmp
aaa
pop
aaa
std
add
pop
cmp
cmp
cmp
cmp
cmp
loop
es
cmp
push
cmp
sarl
cmp
lcall
inc
mov
cmp
cmp
test
jg
jnp
mov
jno
xchg
cmp
call
cmpsl
cmp
mov
dec
cmp
cmp
cmp
cmp
jmp
cmp
cmp
cmp
cmp
cmp
out
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fstpt
mov
cmp
xchg
cmp
xchg
jg
outsl
cmp
cmp
push
cmp
cmp
cmp
lods
cmp
cmp
pop
sbb
cmp
cmp
push
cmc
divl
test
xchg
mov
sub
xor
xchg
shlb
std
stos
fbstp
ljmp
jb
push
cmp
cmp
xchg
cmp
cmp
jl
inc
cmp
dec
cmp
cmp
cmp
cmp
cmp
push
fstpt
je
mov
dec
cmp
cmc
cmp
dec
ds
mov
mov
clc
imul
call
inc
and
lods
xor
sbb
pushf
scas
aas
outsb
sub
in
jno
ds
inc
xor
dec
mov
clc
xor
shlb
pop
add
xor
xchg
and
mov
xor
xor
jbe
sbb
dec
std
pop
push
jbe
aaa
mov
push
cmp
push
jl
test
inc
cmp
cmp
cmp
xchg
scas
pop
cmp
inc
outsb
cs
cmp
sub
ds
ds
mov
jg
jbe
arpl
test
jne
adc
inc
rcll
aaa
xchg
aas
dec
aas
out
mov
std
repz
xor
xor
dec
dec
subb
add
push
xor
xor
cmp
cli
cmpsl
xor
enter
pop
push
jg
cmp
shll
loope
and
rolb
jno
jg
ja
cli
xor
xor
jge
xchg
decl
push
inc
mov
xor
or
mov
mov
dec
ss
mov
aaa
push
mov
rcrb
cmc
shll
pop
in
push
cmp
jg
out
mov
imul
cmp
leave
cmp
jg
xchg
jb
lahf
cmp
mov
sarb
mov
cmp
cmp
cmp
cmp
cmp
cmp
pop
mov
cmp
xlat
cmp
push
scas
ds
ds
push
mov
or
lods
aas
cwtl
xor
iret
into
mov
xlat
xor
sub
xor
xor
inc
xor
xor
xor
inc
aaa
jle
ljmp
xor
orb
sub
ja
daa
xor
ss
call
pop
sarl
cmp
cmp
fcomi
cmp
dec
cmp
mov
ja
lea
cmp
cmp
lods
cli
ds
ds
inc
fisttps
sub
cmpsl
cmp
mov
pushf
out
decb
mov
xor
xor
loop
rorb
xor
pushf
xor
xorb
inc
dec
mov
xlat
jmp
adc
fbstp
sub
dec
ss
ss
rolb
jnp
push
aaa
js
loop
pushl
dec
cmp
pushf
cmp
cmp
cmp
cmp
cmp
cmpsl
ds
jo
out
shlb
out
imul
orb
inc
xor
decl
adc
pop
mov
add
enter
inc
jg
call
xor
xor
xor
xor
fdivs
jb
repnz
sub
outsl
xor
call
push
inc
aaa
push
sti
xchg
test
cmp
cmp
cmp
ljmp
cmp
mov
cmp
cmp
es
dec
dec
addl
loopne
loop
inc
dec
ds
push
sbb
xor
xor
jg
lods
xor
xor
xor
xor
xor
mov
incl
mov
shll
or
jbe
ss
mov
bound
cmp
cmp
cmp
idivb
jmp
mov
bound
jmp
mov
mov
xor
xor
pop
xor
add
mov
jno
cmpsb
sub
mov
subl
xor
aas
mov
xor
xor
sbb
lock
ret
test
lods
fwait
aaa
push
aaa
mov
repnz
lock
adc
sbb
cmp
push
repnz
adc
push
pop
push
fs
jae
test
insb
out
pop
sub
mov
arpl
cmp
cmp
cmp
cmp
pop
sbb
xchg
fwait
ljmp
push
cmp
cmp
push
lea
or
inc
cmp
sahf
jne,pt
xor
sar
lahf
add
push
xchg
ja
xor
xchg
xor
xor
xor
jg
sahf
pop
jg
push
xor
xor
outsb
aaa
stos
aaa
inc
aaa
sbb
shlb
cmc
sarl
inc
pop
jo
jns
test
bound
stos
push
or
pop
cmp
rolb
jle
ret
cmp
cmp
add
xchg
cmp
cmp
cld
ja
sbb
cmp
cmp
cmp
cmp
mov
cmp
cmp
test
jmp
cwtl
cmp
mov
pusha
cmp
cmp
push
arpl
add
pop
pop
xchg
xor
xor
test
inc
xor
xor
xor
xor
rorb
xor
lods
cli
mov
dec
mov
cs
xor
cmpsb
mov
and
aad
mov
and
in
xor
call
ret
or
mov
cmp
cmp
cmp
scas
cmp
clc
cmp
or
jg
dec
cmp
cld
cmp
cmp
cld
scas
inc
aas
sub
dec
sbbl
ret
decl
xor
xor
xchg
xor
or
ss
or
and
jg
xor
mov
mov
xor
xor
or
decb
push
xor
xor
dec
or
xor
es
inc
push
xchg
dec
ret
aaa
fdivl
sbb
sar
push
and
daa
lcall
cli
cmp
cmp
clc
cmp
cli
mov
cmp
cmp
pushl
sub
xchg
aaa
inc
addr16
sbb
divb
xor
int
inc
fistpll
nop
xor
cld
aaa
push
popa
xor
xor
xor
xor
push
adc
mov
scas
cmp
cmp
pushl
add
xchg
cmp
sarb
sub
jg,pn
ljmp
cmp
sarb
cmp
cmp
cmp
lcall
sub
loope
xchg
cmp
inc
cmp
mov
ds
sbb
add
aas
cmp
mov
outsb
or
jo
push
pop
lock
in
cs
mov
mov
add
push
mov
pop
xor
xor
addr16
dec
adc
xor
mov
test
xor
xor
push
call
xor
push
lds
or
adc
dec
mov
call
scas
or
fdivs
ljmp
jo
pushl
push
ss
ss
imul
pop
aaa
xchg
aaa
mov
push
decl
cmc
aaa
jmp
cmp
pop
cmp
cmp
cmp
cmp
mov
scas
pusha
cmp
cmp
int
push
cmp
or
push
lret
cmp
ds
dec
nop
ret
int
fistpll
shlb
mov
outsb
jns
je
movsl
xor
icebp
pushaw
mov
in
xor
xor
xor
das
push
cmpsl
lcall
xor
xor
lret
xor
sahf
hlt
xor
xor
and
shlb
inc
mov
faddl
xor
jge
fs
xor
pop
xor
push
adc
mov
xor
pop
sub
test
cmpsb
push
shlb
out
fbstp
clc
xor
ret
mov
jo
aaa
jo
and
in
cld
push
lock
and
lcall
mov
or
jg
cmp
mov
cmp
call
cmp
cmp
cmp
mov
cmp
cmp
cmp
adc
add
shrb
cmpb
cmp
clc
pushl
xor
cmp
mov
cmp
lret
add
ret
dec
pop
dec
mov
push
push
add
cmp
sub
cld
lcall
xor
xchg
jle,pt
inc
push
ds
aas
ss
cmpsb
aas
data16
push
aas
sarb
aas
cli
imul
repz
enter
test
aad
jge
sbb
xor
jmp
stos
lock
xor
out
bound
mov
xor
jae
lcall
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xchg
incb
xor
mov
out
jb
aaa
mov
enter
cmp
mov
pop
mov
sbb
cmp
cmp
push
scas
repnz
cmp
stos
mov
sub
cmc
cmp
and
dec
cmp
lcall
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cld
cmp
cmp
cmp
cmp
cmp
cmp
cmp
int
bound
clc
call
lds
inc
add
push
ret
or
push
xor
aas
ds
mov
shll
and
push
xorb
jp
sahf
xor
aad
pop
aas
cli
popl
cwtl
xor
xor
jbe
inc
xor
aaa
push
cmp
push
jmp
pop
cmp
push
cmp
cmp
loop
add
ds
aas
test
out
aas
lods
nop
xchg
sub
xor
bnd
xor
loope
xor
mov
mov
jp
sub
cs
xchg
mov
out
push
aaa
cs
xor
xor
test
lea
psrld
mov
jne
or
aam
int3
jne
adc
decb
push
movsb
and
push
and
addr16
sub
inc
outsl
push
ja
jg
adc
xchg
mov
cmpsl
lret
rclb
fdivl
ss
aaa
lcall
aaa
adc
cmp
repnz
or
cmp
cmp
push
push
mov
aas
icebp
mov
clc
jmp
xor
fcmovu
xchg
inc
adc
or
xor
mov
das
movb
jg
sub
fidivs
in
je
mov
jl
lcall
add
std
xor
and
ljmp
xor
cmp
adc
cmp
push
jp
orl
mov
jg
out
into
scas
cmp
sbb
cmp
cli
outsb
xor
push
cmp
mov
lcall
cmp
and
xchg
sbb
sbb
add
jg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jb
outsl
push
mov
sbb
lock
sub
jbe
movsl
cmp
decl
test
sbb
dec
push
adc
sbb
js
push
loopne,pt
or
and
lret
jg
jb
dec
aas
ja
mov
and
fdivs
sbb
test
pusha
ljmp
push
js
jg
ret
xor
xor
data16
incl
xor
xor
scas
jno
xlat
mov
xor
add
and
xchg
aaa
xlat
aaa
out
cmp
jle
sbb
mov
and
int3
cmp
cmp
stos
int3
mov
push
test
jo
cmp
enter
mov
sarl
out
sbb
cmpsb
rcrl
lahf
pop
mov
add
sub
rorb
or
push
lock
xor
xor
sub
pop
ficompl
lret
sbb
shlb
xchg
xor
pop
push
xor
add
stos
dec
cmp
enter
cmp
cmp
in
pusha
int
jb
or
cmp
test
sahf
xor
incl
lods
ds
aaa
aas
popf
call
pop
test
ss
xor
xor
test
xor
jecxz
push
in
mov
dec
xor
enter
and
test
pop
adc
pop
pop
mov
mov
and
shll
xor
pop
movsb
mov
xchg
ss
sub
out
or
sbb
mov
push
mov
add
jmp
inc
call
pop
inc
jb
notrack
jle
stos
xor
inc
out
rolb
xor
xchg
sbb
outsl
mov
push
and
add
jbe
pushw
push
xor
pushf
cmp
cmp
mov
push
jbe
cmp
cmp
adc
push
xlat
repz
jg
test
cmp
cmp
mov
dec
cmp
or
mov
cmp
or
xchg
ds
add
inc
mov
mov
movlhps
aas
sub
iret
mov
aas
pop
adc
mov
add
mov
xor
aas
test
pop
dec
xor
xlat
cmp
and
push
and
mov
mov
cmp
and
bound
lea
sbb
adc
fisubs
loopne
pusha
push
cmpsb
movsb
scas
fidivl
cmc
and
arpl
add
mov
add
cmp
cmp
mov
lret
mov
stos
aad
inc
pop
cld
stos
push
in
aaa
jp
fwait
js
dec
adc
jp
arpl
xchg
mov
sub
divb
jmp
sbb
sub
mov
jbe
dec
pusha
dec
jl
pop
into
mov
aaa
mov
js
mov
cmp
xchg
stos
test
dec
adc
aaa
add
add
and
scas
push
pushf
add
sub
ret
xor
xchg
push
sti
outsl
inc
lahf
pop
or
je
xchg
push
inc
imul
nop
xor
add
test
push
or
outsb
movsb
dec
xor
loop
adc
xor
hlt
fsubrs
subl
adc
xor
xor
adc
ljmp
xor
xchg
adc
jl
xor
je
pop
push
adc
repz
mov
pusha
inc
jle
notb
fdivl
inc
into
xor
ljmp
repz
pop
jmp
inc
mov
add
jo
jae
push
push
xchg
in
aaa
xlat
aaa
inc
ss
ss
rolb
cmp
mov
pop
adc
call
push
aaa
mov
test
mov
std
cs
cmpsb
add
jg
jg
jg
js
or
aas
add
test
imul
sub
sub
and
lock
inc
cmpsl
psubw
pusha
ja
lret
or
add
addr16
mov
inc
push
arpl
push
sbb
leave
add
call
xlat
cmp
lock
sub
es
push
in
in
add
loop
and
sbb
test
mov
enter
test
sbb
mov
pop
movsb
xchg
add
and
cmp
outsl
cli
dec
xchg
hlt
scas
lret
and
push
jae
shrl
in
sbb
jne
push
xorb
pop
mov
pop
or
iret
jbe
es
addl
or
lcall
jo
jl
fs
pop
add
cmp
cltd
add
testl
cmpsb
sbb
enter
clc
popf
sub
sbb
pop
cs
mov
mov
dec
pop
cltd
imul
stos
mov
sbb
shrl
mov
mov
push
rol
outsl
repnz
fsub
fdivr
inc
sub
lock
loope
test
fs
pop
push
or
mov
in
and
fisubs
pop
lods
mov
divb
scas
mov
mov
test
jnp
cld
adc
mov
insl
mov
call
sub
cwtl
cmp
repz
incl
xor
mov
mov
add
push
jp
fmul
sbb
push
test
repnz
test
dec
cwtl
jae
mov
push
add
test
pop
mov
dec
or
ljmp
mov
add
mov
xchg
push
clc
sub
adc
popa
push
sub
push
dec
jo
lods
xor
std
in
jmp
add
pop
aaa
std
mov
add
lret
mov
mov
or
add
inc
loopne
sahf
mov
and
pop
into
push
inc
xchg
jl
push
mov
or
inc
xlat
movsb
and
clc
cli
add
cld
insl
push
cmp
or
popf
faddl
or
sub
mov
jg
add
pop
leave
fsubl
sbb
insl
add
outsl
nop
icebp
pop
js
sbb
jbe
mov
adc
ss
pushl
add
daa
cmp
add
xor
mov
jl
les
hlt
test
outsl
outsb
fs
outsb
dec
popa
jae
sub
push
mov
gs
popa
je
inc
arpl
push
sbb
out
and
jae
outsb
sub
hlt
outsb
xchg
arpl
push
push
cli
imul
insb
inc
inc
test
or
mov
arpl
pop
push
lcall
mov
mov
inc
pop
jae
push
dec
imul
adc
mov
xchg
lcall
mov
xchg
rclb
pusha
fwait
jmpw
add
imul
loopne
pushf
xchg
jne
inc
mul
push
mov
insb
mov
imul
nop
push
mov
mov
insl
or
lret
inc
mov
inc
xor
insb
dec
push
push
mov
addr16
jb
xor
arpl
push
mov
and
inc
arpl
cmp
sub
int3
xlat
vandps
pop
shll
gs
add
adcl
mov
mov
adc
adc
add
aaa
xor
jae
inc
adc
cmpsb
mov
or
mov
sub
inc
ja
loop
push
xor
cmpsb
add
sub
rorb
push
mov
push
mov
mov
leave
adcb
jne
add
sarb
fwait
aam
adc
out
pop
push
adc
mov
and
aad
jne
jnp
rcll
push
mov
imul
daa
adc
mov
or
in
pop
andb
xchg
inc
pop
roll
dec
or
fnsave
add
pop
rcrl
mov
mov
push
add
or
aad
outsb
or
jecxz
and
adc
push
adc
gs
in
xchg
pop
rorb
adc
sub
sbb
rcr
or
test
inc
addl
adcl
pop
ja
add
adc
mov
add
xchg
or
sub
sub
add
adc
and
xchg
sbb
pop
push
push
sbb
test
xchg
or
mov
data16
or
and
jo
inc
test
jne
mov
pusha
adc
mov
push
push
add
add
xchg
and
adc
cmp
adc
adc
add
xor
xchg
or
dec
outsb
xchg
insb
insb
xor
xchg
stos
sub
arpl
iret
dec
movsl
loopne
pop
mov
and
mov
and
xchg
movsb
mov
inc
inc
add
call
add
or
stc
sub
mov
push
roll
inc
dec
add
sbbb
dec
add
adc
and
ljmp
sti
add
or
push
mov
jne
push
sub
or
mov
cmp
pop
add
xor
pop
cmp
add
xchg
mov
push
stos
and
or
xor
out
sbb
fstpt
sub
or
sub
push
shrb
jecxz
adc
sub
inc
mov
int
dec
inc
and
lahf
popa
inc
or
and
subb
pop
sub
adc
sti
mov
xchg
mov
push
sub
push
call
inc
xor
in
pop
sbbb
or
mov
mov
test
dec
mov
inc
inc
dec
add
or
adc
popf
cmp
push
add
xchg
and
cmp
or
xor
sub
test
push
inc
and
pop
inc
mov
push
push
mov
xor
int
pop
pop
push
movsl
lahf
add
adc
bound
jnp
mov
add
add
inc
stc
and
xchg
ret
les
sub
test
push
inc
insl
adc
mov
xor
mov
movsl
inc
adc
ljmp
dec
add
and
subl
mov
sub
add
push
dec
sub
dec
sub
cmp
addb
movl
adc
xor
mov
addr16
leave
or
add
fldt
push
adc
dec
stos
out
or
mov
push
dec
lods
subb
ja
shrb
push
or
xchg
dec
cmp
push
push
inc
mov
mov
int3
icebp
and
pop
adc
push
add
sti
mov
mov
add
and
sbb
arpl
inc
inc
aaa
mov
add
push
sub
fistpl
test
and
or
cmc
sub
push
inc
inc
sbb
add
or
orb
push
sti
push
inc
or
sbb
dec
mov
mov
adc
stos
push
cmp
aad
lods
call
xorl
int3
push
and
sub
and
rcrb
pop
and
mov
adc
xor
push
mov
movsl
inc
jmp
and
pop
std
jno
xchg
adc
dec
mov
pop
dec
dec
add
inc
adc
cmp
mov
orl
sbb
or
cmp
xor
ret
sub
xchg
imul
dec
and
mov
push
rorl
adc
push
or
or
cmpsb
jnp
push
subb
add
lret
mov
mov
adc
add
add
inc
inc
add
dec
add
dec
adc
adc
mov
int
sub
inc
inc
pop
movsb
test
or
daa
inc
mov
push
roll
pop
push
dec
mov
movsb
push
cmc
adcl
mov
test
inc
lods
mov
push
add
inc
sub
xchg
andb
rcll
mov
xor
mov
adc
mov
and
mov
xor
or
add
jmp
add
rolb
and
or
cmc
mov
sbb
fwait
roll
or
inc
mov
mov
int
push
dec
add
sub
filds
push
dec
popf
arpl
lods
inc
sub
xchg
and
lahf
add
add
xor
ds
fistpl
push
or
rclb
fnsetpm(287
gs
inc
inc
pop
and
pminub
fwait
insb
sbb
inc
cmp
ret
fimull
xchg
push
push
inc
mov
or
jl
aam
jne,pn
rolb
adc
and
pusha
push
jb
adc
jo
jb
fs
je
cmpsb
mov
pop
in
jle
inc
outsb
dec
push
xor
and
paddb
and
and
add
pushf
ss
mov
dec
dec
xor
add
sub
jb
jb
pop
inc
rcll
es
xor
dec
js
int
add
mov
add
xchg
and
add
add
add
add
jle
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
and
add
loopne
add
add
add
add
add
add
or
add
add
js
add
mov
add
add
add
addb
add
add
addb
add
inc
add
addb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
inc
add
add
add
add
add
add
add
add
add
add
mov
push
inc
add
add
add
add
add
add
add
add
add
add
loopne
add
in
push
inc
add
add
add
add
add
add
add
add
add
add
or
add
rcrb
add
add
add
add
add
add
add
add
add
add
xor
add
mov
inc
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
test
add
pusha
inc
add
add
add
add
add
add
add
add
add
add
rolb
add
inc
imul
in
add
add
add
add
add
arpl
add
clc
add
addb
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
jb
add
loop
mov
ja
lret
or
mov
nop
jp
shll
aad
cmp
cmpsb
call
xlat
lds
mov
and
je
push
lock
pop
in
sahf
mov
aaa
sti
jge
test
inc
fcompl
cmc
test
sbb
mov
xchg
divl
and
cmp
adc
hlt
scas
xor
cmp
inc
xchg
pop
lods
jne
jmp
lock
movsl
or
iret
jbe
es
adcl
jo
jl
fs
pop
pop
cmp
cltd
pop
fildl
mov
testl
adc
enter
clc
bound
out
xor
pop
cs
pop
push
lds
imul
mov
lods
xchg
shlb
fwait
dec
jbe
imul
movsl
fsub
daa
std
inc
mov
loope
test
push
pop
push
push
push
mov
in
fldt
fwait
pop
dec
fdivs
insb
push
or
pusha
mov
and
xchg
and
or
insl
aas
test
pop
pop
stos
sub
cmp
repz
out
xor
push
xchg
sub
push
jp
and
sbb
je
test
stc
sbb
cwtl
jae
mov
push
adc
ljmp
sbbl
scas
fwait
adc
popa
fsubrl
push
mov
lods
xor
lret
in
jmp
mov
out
in
mov
mov
mov
xchg
ss
add
sub
call
push
jl
scas
mov
xor
sub
cli
jle
aaa
jge
cld
insl
push
ret
pop
mov
adc
pusha
sub
mov
pop
add
mov
and
out
xchg
add
dec
jge
call
push
hlt
aam
stc
sub
int
jns
lock
adc
cmpsl
call
add
std
fwait
push
lahf
adc
scas
cmp
cmpsl
dec
cs
push
insb
dec
fcmovnbe
enter
mov
adc
movsb
sbb
adc
std
jp
pop
outsl
jns
jmp
sub
inc
ret
mov
pop
je
mov
adc
into
mov
ljmp
xchg
aas
xor
in
outsl
sub
xor
cltd
loopne
adc
cwtl
xchg
mov
mov
or
ljmp
hlt
and
ljmp
sub
data16
ds
outsw
out
mov
add
or
mov
and
mov
add
int3
xorl
push
cmp
cmp
push
loop
mov
ja
lret
or
mov
nop
jp
shll
aad
cmp
cmpsb
call
xlat
lds
mov
and
je
push
lock
pop
in
sahf
mov
aaa
sti
jge
test
inc
fcompl
cmc
test
sbb
mov
xchg
divl
and
cmp
adc
hlt
scas
xor
cmp
inc
xchg
pop
lods
jne
jmp
lock
movsl
or
iret
jbe
es
adcl
jo
jl
fs
pop
pop
cmp
cltd
pop
fildl
mov
testl
adc
enter
clc
bound
out
xor
pop
cs
pop
push
lds
imul
mov
lods
xchg
shlb
fwait
dec
jbe
imul
movsl
fsub
daa
std
inc
mov
loope
test
push
pop
push
push
push
mov
in
fldt
fwait
pop
dec
fdivs
insb
push
or
pusha
mov
and
xchg
and
or
insl
aas
test
pop
pop
stos
sub
cmp
repz
out
xor
push
xchg
sub
push
jp
and
sbb
je
test
stc
sbb
cwtl
jae
mov
push
adc
ljmp
sbbl
scas
fwait
adc
popa
fsubrl
push
mov
lods
xor
lret
in
jmp
mov
out
in
mov
mov
mov
xchg
ss
add
sub
call
push
jl
scas
mov
xor
sub
cli
jle
aaa
jge
cld
insl
push
ret
pop
mov
adc
pusha
sub
mov
pop
add
mov
and
out
xchg
add
dec
jge
call
push
hlt
aam
stc
sub
int
jns
lock
adc
cmpsl
call
add
std
fwait
push
lahf
adc
scas
cmp
cmpsl
dec
cs
push
insb
dec
fcmovnbe
enter
mov
adc
movsb
sbb
adc
std
jp
pop
outsl
jns
jmp
sub
inc
ret
mov
pop
je
mov
adc
into
mov
ljmp
xchg
aas
xor
in
outsl
sub
xor
cltd
loopne
adc
cwtl
xchg
mov
mov
or
ljmp
hlt
and
ljmp
sub
data16
ds
outsw
out
mov
add
or
mov
and
mov
add
int3
xorl
push
cmp
cmp
push
loop
mov
ja
lret
or
mov
nop
jp
shll
aad
cmp
cmpsb
call
xlat
lds
mov
and
je
push
lock
pop
in
sahf
mov
aaa
sti
jge
test
inc
fcompl
cmc
test
sbb
mov
xchg
divl
and
cmp
adc
hlt
scas
xor
cmp
inc
xchg
pop
lods
jne
jmp
lock
movsl
or
iret
jbe
es
adcl
jo
jl
fs
pop
pop
cmp
cltd
pop
fildl
mov
testl
adc
enter
clc
bound
out
xor
pop
cs
pop
push
lds
imul
mov
lods
xchg
shlb
fwait
dec
jbe
imul
movsl
fsub
daa
std
inc
mov
loope
test
push
pop
push
push
push
mov
in
fldt
fwait
pop
dec
fdivs
insb
push
or
pusha
mov
and
xchg
and
or
insl
aas
test
pop
pop
stos
sub
cmp
repz
out
xor
push
xchg
sub
push
jp
and
sbb
je
test
stc
sbb
cwtl
jae
mov
push
adc
ljmp
sbbl
scas
fwait
adc
popa
fsubrl
push
mov
lods
xor
lret
in
jmp
mov
out
in
mov
mov
mov
xchg
ss
add
sub
call
push
jl
scas
mov
xor
sub
cli
jle
aaa
jge
cld
insl
push
ret
pop
mov
adc
pusha
sub
mov
pop
add
mov
and
out
xchg
add
dec
jge
call
push
hlt
aam
stc
sub
int
jns
lock
adc
cmpsl
call
add
std
fwait
push
lahf
adc
scas
cmp
cmpsl
dec
cs
push
insb
dec
fcmovnbe
enter
mov
adc
movsb
sbb
adc
std
jp
pop
outsl
jns
jmp
sub
inc
ret
mov
pop
je
mov
adc
into
mov
ljmp
xchg
aas
xor
in
outsl
sub
xor
cltd
loopne
adc
cwtl
xchg
mov
mov
or
ljmp
hlt
and
ljmp
sub
data16
ds
outsw
out
mov
add
or
mov
and
mov
add
int3
xorl
push
cmp
cmp
push
loop
mov
ja
lret
or
mov
nop
jp
shll
aad
cmp
cmpsb
call
xlat
lds
mov
and
je
push
lock
pop
in
sahf
mov
aaa
sti
jge
test
inc
fcompl
cmc
test
sbb
mov
xchg
divl
and
cmp
adc
hlt
scas
xor
cmp
inc
xchg
pop
lods
jne
jmp
lock
movsl
or
iret
jbe
es
adcl
jo
jl
fs
pop
pop
cmp
cltd
pop
fildl
mov
testl
adc
enter
clc
bound
out
xor
pop
cs
pop
push
lds
imul
mov
lods
xchg
shlb
fwait
dec
jbe
imul
movsl
fsub
daa
std
inc
mov
loope
test
push
pop
push
push
push
mov
in
fldt
fwait
pop
dec
fdivs
insb
push
or
pusha
mov
and
xchg
and
or
insl
aas
test
pop
pop
stos
sub
cmp
repz
out
xor
push
xchg
sub
push
jp
and
sbb
je
test
stc
sbb
cwtl
jae
mov
push
adc
ljmp
sbbl
scas
fwait
adc
popa
fsubrl
push
mov
lods
xor
lret
in
jmp
mov
out
in
mov
mov
mov
xchg
ss
add
sub
call
push
jl
scas
mov
xor
sub
cli
jle
aaa
jge
cld
insl
push
ret
pop
mov
adc
pusha
sub
mov
pop
add
mov
and
out
xchg
add
dec
jge
call
push
hlt
aam
stc
sub
int
jns
lock
adc
cmpsl
call
add
std
fwait
push
lahf
adc
scas
cmp
cmpsl
dec
cs
push
insb
dec
fcmovnbe
enter
mov
adc
movsb
sbb
adc
std
jp
pop
outsl
jns
jmp
sub
inc
ret
mov
pop
je
mov
adc
into
mov
ljmp
xchg
aas
xor
in
outsl
sub
xor
cltd
loopne
adc
cwtl
xchg
mov
mov
or
ljmp
hlt
and
ljmp
sub
data16
ds
outsw
out
mov
add
or
mov
and
mov
add
int3
xorl
push
cmp
cmp
push
loop
mov
ja
lret
or
mov
nop
jp
shll
aad
cmp
cmpsb
call
xlat
lds
mov
and
je
push
lock
pop
in
sahf
mov
aaa
sti
jge
test
inc
fcompl
cmc
test
sbb
mov
xchg
divl
and
cmp
adc
hlt
scas
xor
cmp
inc
xchg
pop
lods
jne
jmp
lock
movsl
or
iret
jbe
es
adcl
jo
jl
fs
pop
pop
cmp
cltd
pop
fildl
mov
testl
adc
enter
clc
bound
out
xor
pop
cs
pop
push
lds
imul
mov
lods
xchg
shlb
fwait
dec
jbe
imul
movsl
fsub
daa
std
inc
mov
loope
test
push
pop
push
push
push
mov
in
fldt
fwait
pop
dec
fdivs
insb
push
or
pusha
mov
and
xchg
and
or
insl
aas
test
pop
pop
stos
sub
cmp
repz
out
xor
push
xchg
sub
push
jp
and
sbb
je
test
stc
sbb
cwtl
jae
mov
push
adc
ljmp
sbbl
scas
fwait
adc
popa
fsubrl
push
mov
lods
xor
lret
in
jmp
mov
out
in
mov
mov
mov
xchg
ss
add
sub
call
push
jl
scas
mov
xor
sub
cli
jle
aaa
jge
cld
insl
push
ret
pop
mov
adc
pusha
sub
mov
pop
add
mov
and
out
xchg
add
dec
jge
call
push
hlt
aam
stc
sub
int
jns
lock
adc
cmpsl
call
add
std
fwait
push
lahf
adc
scas
cmp
cmpsl
dec
cs
push
insb
dec
fcmovnbe
enter
mov
adc
movsb
sbb
adc
std
jp
pop
outsl
jns
jmp
sub
inc
ret
mov
pop
je
mov
adc
into
mov
ljmp
xchg
aas
xor
in
outsl
sub
xor
cltd
loopne
adc
cwtl
xchg
mov
mov
or
ljmp
hlt
and
ljmp
sub
data16
ds
outsw
out
mov
add
or
mov
and
mov
add
int3
xorl
push
cmp
cmp
push
loop
mov
ja
lret
or
mov
nop
jp
shll
aad
cmp
cmpsb
call
xlat
lds
mov
and
je
push
lock
pop
in
sahf
mov
aaa
sti
jge
test
inc
fcompl
cmc
test
sbb
mov
xchg
divl
and
cmp
adc
hlt
scas
xor
cmp
inc
xchg
pop
lods
jne
jmp
lock
movsl
or
iret
jbe
es
adcl
jo
jl
fs
pop
pop
cmp
cltd
pop
fildl
mov
testl
adc
enter
clc
bound
out
xor
pop
cs
pop
push
lds
imul
mov
lods
xchg
shlb
fwait
dec
jbe
imul
movsl
fsub
daa
std
inc
mov
loope
test
push
pop
push
push
push
mov
in
fldt
fwait
pop
dec
fdivs
insb
push
or
pusha
mov
and
xchg
and
or
insl
aas
test
pop
pop
stos
sub
cmp
repz
out
xor
push
xchg
sub
push
jp
and
sbb
je
test
stc
sbb
cwtl
jae
mov
push
adc
ljmp
sbbl
scas
fwait
adc
popa
fsubrl
push
mov
lods
xor
lret
in
jmp
mov
out
in
mov
mov
mov
xchg
ss
add
sub
call
push
jl
scas
mov
xor
sub
cli
jle
aaa
jge
cld
insl
push
ret
pop
mov
adc
pusha
sub
mov
pop
add
mov
and
out
xchg
add
dec
jge
call
push
hlt
aam
stc
sub
int
jns
lock
adc
cmpsl
call
add
std
fwait
push
lahf
adc
scas
cmp
cmpsl
dec
cs
push
insb
dec
fcmovnbe
enter
mov
adc
movsb
sbb
adc
std
jp
pop
outsl
jns
jmp
sub
inc
ret
mov
pop
je
mov
adc
into
mov
ljmp
xchg
aas
xor
in
outsl
sub
xor
cltd
loopne
adc
cwtl
xchg
mov
mov
or
ljmp
hlt
and
ljmp
sub
data16
ds
outsw
out
mov
add
or
mov
and
mov
add
int3
xorl
push
cmp
cmp
push
loop
mov
ja
lret
or
mov
nop
jp
shll
aad
cmp
cmpsb
call
xlat
lds
mov
and
je
push
lock
pop
in
sahf
mov
aaa
sti
jge
test
inc
fcompl
cmc
test
sbb
mov
xchg
divl
and
cmp
adc
hlt
scas
xor
cmp
inc
xchg
pop
lods
jne
jmp
lock
movsl
or
iret
jbe
es
adcl
jo
jl
fs
pop
pop
cmp
cltd
pop
fildl
mov
testl
adc
enter
clc
bound
out
xor
pop
cs
pop
push
lds
imul
mov
lods
xchg
shlb
fwait
dec
jbe
imul
movsl
fsub
daa
std
inc
mov
loope
test
push
pop
push
push
push
mov
in
fldt
fwait
pop
dec
fdivs
insb
push
or
pusha
mov
and
xchg
and
or
insl
aas
test
pop
pop
stos
sub
cmp
repz
out
xor
push
xchg
sub
push
jp
and
sbb
je
test
stc
sbb
cwtl
jae
mov
push
adc
ljmp
sbbl
scas
fwait
adc
popa
fsubrl
push
mov
lods
xor
lret
in
jmp
mov
out
in
mov
mov
mov
xchg
ss
add
sub
call
push
jl
scas
mov
xor
sub
cli
jle
aaa
jge
cld
insl
push
ret
pop
mov
adc
pusha
sub
mov
pop
add
mov
and
out
xchg
add
dec
jge
call
push
hlt
aam
stc
sub
int
jns
lock
adc
cmpsl
call
add
std
fwait
push
lahf
adc
scas
cmp
cmpsl
dec
cs
push
insb
dec
fcmovnbe
enter
mov
adc
movsb
sbb
adc
std
jp
pop
outsl
jns
jmp
sub
inc
ret
mov
pop
je
mov
adc
into
mov
ljmp
xchg
aas
xor
in
outsl
sub
xor
cltd
loopne
adc
cwtl
xchg
mov
mov
or
ljmp
hlt
and
ljmp
sub
data16
ds
outsw
out
mov
add
or
mov
and
mov
add
int3
xorl
push
cmp
cmp
push
loop
mov
ja
lret
or
mov
nop
jp
shll
aad
cmp
cmpsb
call
xlat
lds
mov
and
je
push
lock
pop
in
sahf
mov
aaa
sti
jge
test
inc
fcompl
cmc
test
sbb
mov
xchg
divl
and
cmp
adc
hlt
scas
xor
cmp
inc
xchg
pop
lods
jne
jmp
lock
movsl
or
iret
jbe
es
adcl
jo
jl
fs
pop
pop
cmp
cltd
pop
fildl
mov
testl
adc
enter
clc
bound
out
xor
pop
cs
pop
push
lds
imul
mov
lods
xchg
shlb
fwait
dec
jbe
imul
movsl
fsub
daa
std
inc
mov
loope
test
push
pop
push
push
push
mov
in
fldt
fwait
pop
dec
fdivs
insb
push
or
pusha
mov
and
xchg
and
or
insl
aas
test
pop
pop
stos
sub
cmp
repz
out
xor
push
xchg
sub
push
jp
and
sbb
je
test
stc
sbb
cwtl
jae
mov
push
adc
ljmp
sbbl
scas
fwait
adc
popa
fsubrl
push
mov
lods
xor
lret
in
jmp
mov
out
in
mov
mov
mov
xchg
ss
add
sub
call
push
jl
scas
mov
xor
sub
cli
jle
aaa
jge
cld
insl
push
ret
pop
mov
adc
pusha
sub
mov
pop
add
mov
and
out
xchg
add
dec
jge
call
push
hlt
aam
stc
sub
int
jns
lock
adc
cmpsl
call
add
std
fwait
push
lahf
adc
scas
cmp
cmpsl
dec
cs
push
insb
dec
fcmovnbe
enter
mov
adc
movsb
sbb
adc
std
jp
pop
outsl
jns
jmp
sub
inc
ret
mov
pop
je
mov
adc
into
mov
ljmp
xchg
aas
xor
in
outsl
sub
xor
cltd
loopne
adc
cwtl
xchg
mov
mov
or
ljmp
hlt
and
ljmp
sub
data16
ds
outsw
out
mov
add
or
mov
and
mov
add
int3
xorl
push
cmp
cmp
push
loop
mov
ja
lret
or
mov
nop
jp
shll
aad
cmp
cmpsb
call
xlat
lds
mov
and
je
push
lock
pop
in
sahf
mov
aaa
sti
jge
test
inc
fcompl
cmc
test
sbb
mov
xchg
divl
and
cmp
adc
hlt
scas
xor
cmp
inc
xchg
pop
lods
jne
jmp
lock
movsl
or
iret
jbe
es
adcl
jo
jl
fs
pop
pop
cmp
cltd
pop
fildl
mov
testl
adc
enter
clc
bound
out
xor
pop
cs
pop
push
lds
imul
mov
lods
xchg
shlb
fwait
dec
jbe
imul
movsl
fsub
daa
std
inc
mov
loope
test
push
pop
push
push
push
mov
in
fldt
fwait
pop
dec
fdivs
insb
push
or
pusha
mov
and
xchg
and
or
insl
aas
test
pop
pop
stos
sub
cmp
repz
out
xor
push
xchg
sub
push
jp
and
sbb
je
test
stc
sbb
cwtl
jae
mov
push
adc
ljmp
sbbl
scas
fwait
adc
popa
fsubrl
push
mov
lods
xor
lret
in
jmp
mov
out
in
mov
mov
mov
xchg
ss
add
sub
call
push
jl
scas
mov
xor
sub
cli
jle
aaa
jge
cld
insl
push
ret
pop
mov
adc
pusha
sub
mov
pop
add
mov
and
out
xchg
add
dec
jge
call
push
hlt
aam
stc
sub
int
jns
lock
adc
cmpsl
call
add
std
fwait
push
lahf
adc
scas
cmp
cmpsl
dec
cs
push
insb
dec
fcmovnbe
enter
mov
adc
movsb
sbb
adc
std
jp
pop
outsl
jns
jmp
sub
inc
ret
mov
pop
je
mov
adc
into
mov
ljmp
xchg
aas
xor
in
outsl
sub
xor
cltd
loopne
adc
cwtl
xchg
mov
mov
or
ljmp
hlt
and
ljmp
sub
data16
ds
outsw
out
mov
add
or
mov
and
mov
add
int3
xorl
push
cmp
add
test
pusha
insb
inc
add
insb
inc
add
insb
inc
add
inc
add
insb
inc
add
insb
inc
add
add
add
insb
inc
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
outsb
jae
popa
jb
cs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
addr16
jb
push
inc
popa
jb
push
xor
imul
