push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
pop
push
mov
sub
push
push
push
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
pop
lea
xor
jmp
stos
stos
xor
mov
mov
pusha
call
add
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
jmp
ret
mov
sub
sub
lods
mov
mov
shl
sub
mov
movl
mov
cmp
je
sub
sub
je
sub
mov
add
mov
sub
jb
mov
sub
jg
mov
jle
popf
mov
dec
call
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
push
mov
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
mov
mov
push
mov
addl
pop
sub
or
xor
add
cmp
je
add
xor
movl
add
and
addl
clc
adc
pushl
lea
lea
pop
repz
jmp
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
incb
data16
add
and
add
and
add
add
lret
add
and
add
and
add
and
add
add
stos
and
add
add
or
add
ljmp
add
and
add
and
add
and
add
add
add
add
shlb
add
mov
add
and
add
add
loop
add
mov
and
add
and
add
and
add
and
add
add
add
add
and
add
and
add
and
add
and
add
add
add
and
add
add
add
add
dec
and
add
and
add
add
test
add
dec
and
add
add
add
add
mulb
add
fsubs
add
inc
and
add
and
add
and
add
and
add
and
add
add
stos
and
add
add
or
add
ljmp
add
and
add
and
add
and
add
add
add
add
shlb
add
mov
add
and
add
add
loop
add
mov
and
add
and
add
and
add
and
add
add
add
add
and
add
and
add
and
add
and
add
add
add
gs
jb
arpl
jae
gs
jo
add
insb
jae
jb
outsb
inc
add
rolb
dec
gs
jo
gs
jb
jns
repnz
imul
jb
je
arpl
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
gs
inc
imul
gs
je
imul
inc
add
aam
inc
gs
jb
jbe
push
jns
gs
add
add
je
imul
bound
gs
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
je
jne
jb
outsb
je
push
add
je
push
gs
popa
jae
inc
jb
outsl
jb
add
push
gs
insl
gs
push
add
enter
jae
gs
popa
insb
jne
add
inc
insb
gs
jb
outsl
insl
insl
inc
jb
popa
imul
add
fs
imul
add
add
je
jb
jbe
je
push
jb
imul
push
add
add
popa
jo
jb
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
dec
jo
outsb
dec
jne
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
ja
insb
outsl
outsb
gs
outsb
je
jns
add
push
popa
jae
imul
add
outsb
jne
inc
outsb
je
jns
gs
imul
ja
insb
outsl
outsb
gs
outsb
je
jns
add
popa
jae
outsb
imul
imul
popa
jae
gs
gs
inc
outsb
je
jns
add
popa
jae
outsb
imul
imul
popa
jae
imul
add
outsb
jne
inc
outsb
je
jns
gs
imul
popa
jae
imul
add
popa
jae
outsb
imul
imul
popa
jae
gs
gs
inc
outsb
je
jns
add
inc
ja
outsb
jne
inc
outsb
je
jns
gs
imul
inc
push
dec
xor
cs
insb
add
insb
add
gs
outsb
jb
push
je
jb
jne
add
add
gs
outsb
jne
inc
jb
jne
jae
add
add
gs
jb
gs
popa
je
add
xor
push
gs
gs
gs
dec
je
insl
add
push
cs
insb
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
test
add
clc
jbe
add
add
add
add
add
or
add
xchg
add
add
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
push
sub
sub
xchg
xchg
xchg
add
scas
lods
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
stos
lods
lods
mov
mov
fwait
pop
xchg
xchg
xchg
or
jge
jp
jp
lods
lods
lods
add
test
push
mov
mov
mov
les
int
int
rcl
shr
rcl
shl
iret
rcl
hlt
int3
int3
into
hlt
enter
mov
in
mov
mov
lods
stos
stos
lea
cltd
fwait
and
jne
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
sahf
add
mov
mov
lret
lret
rcl
sar
fcom
fdivr
fcom
fcom
fdivr
aam
ror
iret
dec
into
int3
aad
aam
rcl
iret
inc
std
mov
mov
scas
iret
movsb
movsb
mov
dec
das
cs
and
add
push
add
add
add
add
add
add
add
add
lods
lods
lods
add
lods
sbb
mov
jnp
mov
sar
leave
lret
rcl
aad
xlat
call
fdivr
aam
aam
into
int
dec
int
call
aam
dec
into
into
mov
mov
mov
std
cmpsl
cmpsb
cmpsb
ljmp
pop
or
inc
add
add
add
add
add
pop
add
add
add
add
add
add
pop
push
pop
add
inc
add
push
add
push
or
inc
or
sbb
add
add
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
dec
enter
int
call
rcl
call
call
call
aad
dec
into
into
dec
lret
int3
int
inc
rol
mov
mov
ljmp
mov
fwait
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
push
push
bound
pop
fs
aas
aas
inc
sbb
or
sbb
cmp
aaa
cmp
cmp
adc
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
sarl
enter
rcl
sar
call
call
rcl
dec
enter
ret
mov
mov
ljmp
movsl
movsl
pushf
popf
popf
xchg
xchg
xchg
lcall
addb
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
jo
jg
jle
jge
jge
jno
jb
arpl
mov
cmp
inc
inc
mov
jo
outsb
nop
arpl
pusha
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
inc
enter
lret
leave
lret
lret
dec
leave
inc
ret
mov
mov
ljmp
movsb
mov
call
xchg
cwtl
cwtl
cwtl
fwait
cltd
cltd
in
addb
push
push
femms
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
jo
add
pop
or
jnp
nop
lea
incb
jp
jl
jl
jo
outsl
out
data16
push
ret
jg
js
jp
fs
inc
cmp
sbb
sbb
movups
lods
lods
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
cmpsl
lcall
incl
addl
xchg
xchg
mov
mov
xchg
mov
js
jns
das
cs
das
add
add
add
add
add
add
add
add
add
add
mov
pop
push
test
lahf
in
mov
incl
xchg
std
mov
jge
jno
jno
jae
je
jge
jg
addl
xchg
data16
cmp
and
jg
cmp
movsl
movsl
mov
icebp
lods
lods
lods
sti
lods
lods
lods
stos
lods
lods
test
test
movsl
movsb
movsl
std
cltd
fwait
fwait
xchg
xchg
xchg
decl
jg
jp
jp
jl
jp
mov
cwtl
movsb
movsl
movsl
mov
mov
mov
mov
mov
mov
mov
scas
scas
stos
xchg
push
adc
add
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
xchg
incl
test
std
xchg
xchg
xchg
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
or
mov
mov
or
push
xor
inc
dec
insb
insb
imul
test
lcall
out
fwait
fwait
lcall
mov
mov
mov
lea
lcall
scas
lods
mov
mov
mov
mov
mov
std
mov
mov
mov
jnp
or
add
add
pop
pop
adc
test
mov
incl
test
decb
xchg
pushf
sahf
sahf
std
movsb
movsl
mov
out
xchg
xchg
xchg
in
xchg
xchg
in
xchg
push
jne
cmovp
add
inc
sub
es
dec
dec
dec
outsw
jno
test
xchg
xchg
rclb
xchg
xchg
std
mov
nop
call
lahf
lahf
jmp
test
pushl
movsl
lods
mov
xchg
test
std
ret
xchg
scas
mov
mov
ljmp
lahf
adc
add
add
pop
pop
adc
mov
jmp
sahf
cwtl
pushf
incl
mov
xchg
xchg
xchg
call
xchg
xchg
sahf
pushf
pushf
movsl
movsl
movsl
test
mov
xchg
fstpt
jnp
push
push
push
outsl
dec
dec
dec
pushaw
bound
jb
je
jp
jle
test
mov
xchg
xchg
in
nop
xchg
testl
mov
jmp
mov
mov
pop
mov
ss
mov
js
mov
cmpsb
mov
mov
stos
lods
mov
movsl
add
mov
add
pusha
adc
mov
ljmp
popf
decl
call
xchg
xchg
call
xchg
cwtl
fwait
cltd
fwait
pushf
fwait
popf
mov
movsb
movsb
std
mov
lcall
nop
xchg
les
cltd
lcall
mov
stc
xchg
xchg
std
xchg
jae
fwait
addr16
lahf
pop
cmp
push
jle
lods
inc
jl
mov
jnp
mov
je
mov
insl
ljmp
pcmpgtd
stos
or
lods
or
mov
jle
mov
mov
stos
pushf
movsb
movsb
movsb
and
add
shll
adc
mov
lcall
xchg
xchg
call
lcall
lahf
sahf
lahf
lcall
cwtl
fwait
call
xchg
xchg
decb
xchg
xchg
xchg
cwtl
cltd
cld
cwtl
cwtl
sahf
stc
lahf
lcall
pushf
mov
xchg
insb
xchg
xchg
push
jg
xchg
dec
js
cltd
jbe,pt
fwait
sub
pop
imul
movsl
adc
jmp
adc
lods
pcmpgtd
lods
pcmpgtd
scas
adc
mov
push
mov
imul
mov
cltd
scas
mov
scas
scas
scas
movsl
movsl
mov
add
add
add
add
add
pop
pop
adc
mov
les
popf
call
popf
lcall
movsl
mov
jmp
xchg
xchg
decl
mov
xchg
mov
xchg
js
cltd
jo
fwait
fs
xchg
dec
jnp
xchg
cmp
call
sbb
pop
decl
add
push
lcall
pop
pop
jmp
sbb
mov
insl
pushl
sbb
je
mov
and
rcrb
mov
xchg
lods
mov
lods
scas
mov
mov
movsb
movsl
add
pop
pop
adc
lods
mov
mov
cwtl
popf
lcall
movsl
jmp
cmpsb
cmpsb
ljmp
cmpsb
test
lcall
decl
outsl
decl
sub
mov
pop
incl
add
push
decl
add
nop
add
xchg
add
cltd
add
sahf
add
cmpsl
or
mov
outsb
pushl
sub
mov
sub
sub
jg
leave
das
cmp
enter
scas
inc
mov
scas
lret
mov
add
add
add
add
stos
mov
push
adc
test
ljmp
popf
jmp
stos
test
lods
lods
stos
ljmp
mov
ljmp
mov
mov
mov
incl
or
incl
add
push
incl
add
mov
push
decl
push
call
pop
jmp
add
scas
adc
mov
ss
cmp
lret
cmp
dec
cmp
call
cmp
call
cmp
call
dec
xchg
dec
mov
std
mov
mov
movsl
movsb
movsb
push
mov
mov
add
add
add
mov
dec
dec
adc
mov
mov
lahf
cltd
popf
ljmp
lods
lods
pushl
mov
pushl
mov
ljmp
jbe
decl
push
decl
xorps
xchg
push
incl
add
mov
push
decl
add
xchg
add
pushf
add
mov
add
stos
add
pushl
cmp
dec
inc
mov
roll
call
dec
mov
dec
xchg
call
dec
xchg
fimull
fisttpll
fistl
call
test
mov
mov
movsb
movsb
mov
or
add
add
add
add
dec
inc
adc
jp
movsb
lahf
mov
jmp
test
mov
mov
mov
mov
mov
mov
mov
mov
scas
mov
movsb
xchg
decl
sbb
nop
sbb
lea
pop
decl
pop
push
decl
pop
call
add
mov
add
stos
add
mov
arpl
shlb
int3
dec
mov
push
cltd
call
push
cltd
fistl
fistpl
jmp
pop
sahf
fistps
jmp
pop
lahf
jmp
pop
mov
call
xchg
mov
cmpsl
test
sahf
lahf
lahf
or
xchg
xchg
xchg
add
inc
adc
jns
lahf
lcall
mov
lods
stos
pushl
mov
mov
mov
mov
ljmp
inc
jne
nop
and
xchg
and
push
call
or
nop
add
add
fwait
add
mov
add
lods
add
mov
gs
mov
xor
call
pop
fwait
ficompl
fisubs
fisubs
jmp
cmpsb
jmp
fs
out
test
ljmp
fldl
ret
mov
cmpsl
mov
lahf
lahf
add
inc
inc
adc
jb
cltd
xchg
cltd
call
lahf
pushf
lahf
ljmp
mov
pushl
mov
mov
mov
mov
jle
xchg
sub
fwait
jo,pn
cltd
jo,pn
xchg
daa
push
call
add
fwait
add
mov
add
lods
add
mov
pushw
adc
rolb
fsubrl
jmp
outsl
stos
jmp
outsl
stos
call
je
in
je
jmp
mov
out
je
out
je
out
jb
jmp
mov
mov
cmpsb
cmpsb
lcall
sahf
add
add
insl
outsb
js
mov
pushf
lcall
mov
mov
mov
mov
mov
mov
cmpsl
scas
lcall
xor
sahf
cmp
lahf
aaa
jne
mov
push
callw
add
lahf
add
add
add
mov
popa
pushl
add
leave
sbb
ficoml
jmp
js
ljmp
jmp
mov
in
cmpl
push
test
push
cmpl
sarl
cmpsl
popf
sahf
sahf
daa
mov
mov
add
bound
add
ss
jne
jle
out
test
xchg
xchg
xchg
pushl
mov
mov
inc
rol
ret
inc
ret
mov
mov
lahf
insb
mov
fwait
cmp
inc
jge
movsb
inc
jg
movsb
aaa
js
lcall
lcall
add
test
pusha
ljmp
add
mov
add
shll
movsl
call
mov
icebp
mov
push
nop
ret
push
pop
push
xchg
xchg
ret
push
xchg
push
mov
out
nop
mov
inc
ret
lods
test
xor
popf
pushf
add
add
add
inc
add
xor
push
inc
dec
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
sar
inc
inc
mov
jl
lcall
dec
jg
lods
dec
test
movsl
xor
lcall
add
mov
add
lods
add
mov
arpl
mov
add
movl
mov
out
xchg
ret
push
cltd
push
cltd
push
lcall
cmc
pushf
leave
clc
popf
lret
cld
lahf
int
sti
sahf
int
cli
cltd
lret
xchg
ret
mov
dec
mov
mov
mov
sahf
lahf
lahf
aas
xchg
xchg
xchg
add
add
add
add
das
sub
outsb
dec
dec
dec
jecxz
pop
pusha
call
mov
mov
mov
sar
ret
ret
inc
mov
enter
mov
lahf
jmp
push
mov
scas
dec
mov
mov
or
sahf
add
mov
add
mov
arpl
mov
add
enter
rorb
jbe
loopne
xchg
out
mov
push
cmpsb
into
push
movsb
int
mull
sar
cli
cmpsb
sar
cli
test
sar
cld
stos
sar
cld
test
push
lahf
jmp
mov
dec
enter
mov
into
lahf
sahf
lahf
dec
xchg
xchg
xchg
add
fwait
fwait
add
add
add
xor
sub
inc
inc
inc
bound
pop
xlat
je
jno
mov
rol
rol
mov
ret
inc
ret
mov
leave
leave
inc
rol
mov
cmpsb
jmp
mov
lods
dec
test
sahf
sbb
lcall
add
add
mov
arpl
mov
add
into
add
add
loopne
jnp
out
pop
test
negl
aam
sti
scas
aad
sti
scas
aam
sti
mov
std
mov
cld
mov
cld
mov
std
mov
std
mov
mov
push
cmpsb
mov
call
leave
int3
mov
mov
sahf
lahf
lahf
pusha
xchg
xchg
xchg
or
add
add
xor
sbb
add
dec
dec
outsl
outsb
outsl
mov
xlat
jmp
fdiv
rcl
sar
lret
dec
leave
lret
dec
lret
lret
leave
lret
leave
enter
scas
ljmp
push
mov
lods
cmp
lcall
add
lods
add
mov
arpl
mov
add
roll
jo
fadds
je
loopne
je
ljmp
sti
scas
sar
cld
mov
cld
mov
fcos
cld
mov
std
mov
fcos
std
mov
fcos
divl
enter
int3
mov
sahf
lahf
jo
xchg
xchg
or
add
add
xor
add
add
pop
or
leave
movl
ljmp
loope
loop
fsubp
fcmovu
fdiv
fcomp
fsqrt
xlat
fdivr
int
iret
mov
push
cmp
sub
mov
add
mov
arpl
mov
add
lret
add
add
fldl
jbe
jecxz
ja
out
das
xchg
stc
mov
cli
mov
loope
std
ret
loope
inc
loop
inc
loopne
inc
inc
fdivrp
dec
std
enter
dec
loope
cli
mov
enter
into
mov
mov
xchg
adc
add
add
incb
incb
incl
hlt
div
or
out
in
pop
jmp
in
sub
out
in
dec
call
ljmp
in
out
fucomi
les
xchg
cmpsb
cmp
movsb
adc
jmp
add
mov
arpl
mov
add
into
add
add
fiadds
js
ljmp
cld
mov
jecxz
dec
in
std
int
dec
jecxz
dec
in
dec
jecxz
dec
loop
std
iret
loop
call
jecxz
std
shl
shl
sti
in
mov
fdivr
ret
out
test
cmpsl
mov
xchg
xchg
add
add
add
std
incl
std
std
incb
div
testb
repnz
hlt
repz
out
repnz
out
icebp
icebp
cmp
out
in
pop
fsubp
loop
les
xchg
sti
lahf
and
pop
jmp
pop
pushl
add
enter
roll
jno
fiaddl
jne
in
jnp
in
adc
negl
cld
mov
cld
iret
in
shl
std
shl
call
out
shl
out
xlat
jmp
std
fld1
shl
push
ret
in
leave
lret
lret
stos
stos
fwait
xchg
xchg
xchg
and
xchg
cwtl
add
cld
add
std
clc
add
cld
stc
add
div
or
aad
xor
mov
xchg
negb
add
cmpsb
add
scas
add
mov
add
leave
add
roll
jb
fildl
ja
out
jns
out
sbb
sti
ret
loopne
fldl2e
fldpi
fucomi
fucomi
std
fucompp
fucomi
fsubr
fsubr
fsubrp
fsubrp
jmp
in
shl
push
ret
jmp
rcr
dec
iret
sar
lods
lods
stos
lods
xchg
xchg
xchg
outsb
outsl
jo
xchg
xchg
xchg
add
loope
add
enter
mov
cwtl
repnz
ljmp
add
mov
add
int
outsb
call
add
filds
jne
ljmp
sti
pop
std
shl
std
fsubrp
fsubr
fldpi
fsub
std
aad
shl
sti
shl
sti
shl
clc
int
stc
int
push
ret
out
mov
fcom
sti
mov
mov
lcall
add
add
add
xlat
add
leave
adc
scas
xchg
lcall
add
mov
fs
mov
add
roll
outsb
call
add
loop
js
ljmp
sti
xchg
cli
leave
loope
sti
lret
loope
cld
clc
mov
sar
hlt
mov
iret
push
mov
into
ljmp
ljmp
cli
ljmp
cmc
fnstsw
loopne
mov
mov
xchg
add
add
add
int
mov
rol
mov
movsl
loopne
ss
mov
add
mov
addr16
mov
add
dec
or
rorb
jbe
ficoml
ja
loope
cmp
dec
xchg
call
mov
jmp
scas
leave
std
loopne
cld
fildll
neg
mov
lret
ret
int3
in
leave
rcr
shl
fcmovb
out
loope
in
in
test
out
lock
call
lret
lods
lods
stos
adc
test
test
lahf
lahf
mov
add
ret
popf
stos
aam
dec
cmp
sbb
test
imul
and
ja
mov
inc
xchg
ret
stc
lret
test
mov
out
mov
rcl
ror
ror
int3
mov
into
shll
rcl
jg
fcmovu
jb
loopne
gs
in
call
out
in
xor
div
cmc
and
repnz
fcmovnu
or
mov
into
add
add
add
rol
mov
scas
mov
test
insb
lock
xchg
ljmp
mov
sarb
stos
mov
les
rcrb
int
ror
shlb
iret
rcll
rcl
dec
aad
xlat
inc
rcl
aad
fcmovu
daa
xlat
sbb
loopne
adc
in
push
loope
in
out
ljmp
sti
cmc
add
cld
add
incl
incb
mov
mov
mov
mov
stos
mov
mov
mov
mov
mov
ret
push
rol
inc
ret
xor
int
daa
int
shlb
rcl
aam
iret
aam
adc
aam
aam
aad
aam
xlat
add
fcmovnu
add
add
jecxz
add
in
jmp
leave
xlat
aad
incb
mov
mov
add
ret
vmovapd
mov
mov
push
rol
or
leave
movb
enter
int
add
rolb
rcl
add
aam
aam
aam
xlat
aad
add
fabs
add
aam
add
loop
add
add
out
add
icebp
lock
incl
std
std
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
ret
mov
ret
ret
les
mov
mov
ja
test
cmpsl
and
add
add
add
add
add
add
add
add
mov
push
mov
mov
jmp
aam
cmc
aam
sar
into
into
iret
cli
int
int3
stc
lret
hlt
mov
mov
iret
stos
lods
lods
fwait
xchg
xchg
xchg
dec
aas
aas
cmp
sbb
add
adc
add
push
add
add
addl
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
leave
cld
ror
sar
xlat
xlat
call
xlat
xlat
dec
iret
sar
iret
int
dec
lret
lret
mov
mov
cld
stos
lods
stos
icebp
xchg
cwtl
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
jae
je
jne
fs
inc
dec
dec
cmp
sub
sub
xor
dec
sub
inc
adc
sub
add
add
mov
mov
mov
mov
mov
mov
mov
dec
lret
rcl
sar
rcl
sar
lret
lret
mov
mov
mov
ljmp
popf
sahf
xchg
xchg
cwtl
jmp
jo
xchg
push
push
pop
dec
add
add
add
add
add
add
addl
test
imul
movsb
push
push
push
stos
push
insl
insb
push
pop
pop
cmp
cmp
pop
jno
jo
mov
scas
pop
mov
mov
mov
mov
ret
mov
mov
mov
ljmp
pushf
lcall
xchg
xchg
cltd
lcall
dec
dec
dec
dec
movups
xor
add
and
add
adc
add
pop
lcall
pop
fwait
cwtl
cltd
fcoml
addb
jnp
jnp
jns
jns
jnp
jnp
jnp
jnp
jb
je
push
push
push
cmp
je
pushf
sahf
popf
mov
lods
lods
rep
scas
scas
sti
scas
lods
lods
std
test
cmpsl
std
sahf
popf
pushf
call
xchg
call
mov
lods
jmp
scas
scas
leave
movsl
movsb
cmpsb
cltd
jb
je
adc
adc
add
add
add
add
outsl
outsb
outsb
pop
xchg
mov
loop
lcall
mov
sti
xchg
xchg
xchg
lock
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsb
outsb
outsb
orl
lcall
lea
call
popf
ljmp
stos
scas
std
mov
scas
mov
mov
mov
movsl
mov
addl
add
add
pusha
pusha
popa
or
scas
mov
cmpsb
sahf
mov
decl
mov
std
popf
popf
mov
negl
jg
stos
push
push
push
jo
pop
pop
outsl
insb
insl
insl
xchg
subb
nop
xchg
lock
mov
lcall
fwait
pushl
jo
mov
mov
jl
mov
scas
lods
insl
stos
test
add
add
add
pusha
pop
pop
or
mov
in
mov
xchg
call
xchg
lcall
lcall
pushf
popf
pushf
cli
xchg
xchg
xchg
jmp
xchg
lea
jecxz
orb
xchg
push
cld
xchg
pop
jg
pushf
dec
jnp
movsl
inc
jp
scas
xor
jae
scas
sbb
push
scas
sbb
mov
mov
scas
scas
jle
mov
add
add
add
popa
popa
pop
or
mov
in
mov
cwtl
lcall
mov
mov
decl
addl
cld
xchg
pop
test
xchg
dec
jns
xchg
cmp
xchg
sub
xchg
sbb
adc
sahf
or
push
pushl
sbb
mov
and
mov
stos
mov
lods
lods
lods
xchg
lahf
lahf
lahf
adc
add
add
pusha
pusha
pop
or
lods
mov
test
mov
cmpsb
ljmp
test
lcall
pop
jns
mov
imul
mov
pusha
decl
or
mov
decl
add
fwait
add
cmpsb
or
and
mov
das
jle
lds
jle
xor
dec
pop
xchg
inc
stos
mov
mov
scas
movsb
cmpsl
test
add
add
add
popa
pusha
popa
or
movsl
test
ljmp
mov
pushl
mov
jmp
inc
jno
mov
pop
decl
or
add
decl
add
xchg
add
mov
add
mov
outsb
inc
cmp
dec
inc
mov
roll
call
inc
xchg
call
popa
sahf
dec
test
stc
mov
mov
movsb
movsb
movsl
daa
std
std
add
add
add
pusha
or
mov
ljmp
mov
pushl
mov
stos
call
pop
popa
call
push
pop
decl
add
xchg
add
mov
add
scas
add
mov
dec
xchg
fcoms
ficompl
fistps
jmp
pop
mov
fisubrs
dec
test
cld
mov
mov
cmpsl
stos
movsl
xor
addb
add
add
dec
pop
jl
jnp
popf
xchg
lcall
scas
scas
pushl
mov
mov
lcall
sub
lcall
and
call
add
sahf
add
cmpsb
add
scas
add
or
lret
xor
jmp
insl
stos
jmp
outsb
lods
call
jno
out
jb
call
test
mov
inc
addl
dec
pop
outsb
outsl
imul
test
lcall
mov
mov
sar
mov
jmp
cmp
mov
sub
xchg
or
lcall
pop
ljmp
gs
or
call
dec
xchg
jmp
js
jmp
mov
out
test
push
xchg
push
xchg
mov
cmpsl
cmpsb
push
lcall
add
sub
push
push
dec
pop
gs
test
mov
mov
mov
sarb
sarb
jmp
inc
jg
mov
push
pop
jmp
add
mov
gs
mov
adc
jmp
pusha
mov
push
xchg
push
cltd
cltd
clc
lcall
clc
xchg
jmp
lods
inc
mov
stos
popa
mov
add
add
xor
inc
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
ret
xchg
cmpsl
jmp
dec
cmp
pop
imul
add
ljmp
add
mov
add
fldenv
cmp
mulb
iret
cli
test
cld
test
sar
lods
sar
stc
test
jmp
mov
inc
mov
stos
jne
pushf
sahf
or
add
add
dec
push
push
aaa
jae
jae
stos
test
into
out
iret
lret
cmc
lret
sti
leave
lret
enter
mov
bound
jmp
add
mov
arpl
ret
dec
add
fiaddl
xchg
push
xchg
mov
std
mov
fcos
mov
xlat
mov
sar
jmp
rol
mov
lods
mov
add
add
add
add
or
aam
dec
loop
fsubp
loope
ffree
fcmovu
fcmovu
aam
fsubr
shll
test
pop
pusha
ljmp
add
lret
call
add
or
push
mov
std
loope
std
enter
loopne
dec
fdivrp
std
leave
loopne
cld
out
mov
lret
mov
xchg
pushf
popf
popf
sbb
add
add
std
std
add
std
incl
jmp
in
sbb
jmp
xor
loop
loop
lds
mov
mov
add
mov
arpl
roll
dec
add
faddl
jne
ljmp
cld
ret
std
iret
out
std
shl
shl
shl
call
out
call
push
xlat
fcmovne
sar
mov
mov
add
incl
std
add
cld
std
pop
aam
aam
mov
pop
mov
popf
or
ljmp
add
add
roll
jo
fiadds
jbe
out
pop
mov
clc
mov
shl
fldl2t
fldl2t
cld
xlat
jmp
sti
fsub
xlat
call
push
enter
rcl
sti
mov
sahf
popf
das
add
add
int3
int3
int
mov
bound
ljmp
gs
add
aad
jno
loopne
ja
in
das
xchg
stc
lcall
cli
leave
test
xlat
bnd
out
ret
sar
in
aad
in
aad
jmp
aam
jecxz
fsubrp
leave
mov
test
std
add
add
add
aad
push
mov
je
push
addr16
mov
insl
inc
sbb
lret
and
aad
xchg
loopne
lcall
mov
out
jecxz
leave
jmp
fidivrs
leave
sarl
jecxz
fcompl
in
call
rorb
mov
add
stos
stos
lods
add
xchg
movsb
les
xchg
mov
nop
fidivrl
jle
rol
lods
mov
lahf
mov
shll
leave
jge
ror
iret
pop
ror
iret
dec
xlat
cmp
loopne
das
in
fsubl
in
repnz
in
jmp
fcmovu
fildl
incb
std
std
add
mov
jns
mov
mov
mov
mov
xor
enter
rcl
aam
rol
adc
rcl
or
loope
or
into
int3
add
incb
std
incl
lcall
pinsrw
or
int3
int
add
std
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
lcall
daa
ret
enter
mov
mov
mov
mov
insb
stos
lods
stos
xor
je
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
enter
sar
aad
std
rcl
sar
into
iret
into
std
mov
mov
sarl
gs
push
push
add
add
add
add
add
add
add
add
jno
jno
addr16
inc
inc
das
sub
inc
inc
and
add
add
mov
mov
cmpl
ret
dec
into
int
rcl
aad
into
iret
iret
dec
mov
mov
scas
scas
lcall
mov
push
add
add
add
add
jae
je
xchg
adc
outsb
outsb
ret
popa
mov
push
outsl
jb
bound
pop
pusha
pusha
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
xchg
lcall
cwtl
cwtl
lds
jb
es
das
add
add
add
add
jae
jae
fwait
xchg
fwait
mov
test
clc
mov
or
addb
dec
push
push
inc
mov
popf
into
mov
mov
xchg
decb
lea
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
push
add
add
xorl
cmpsl
test
mov
xchg
xchg
xchg
cld
popf
sahf
pushf
cmc
lcall
mov
push
push
imul
jle
lea
xchg
notl
mov
mov
fwait
mov
jno
mov
mov
stos
scas
scas
push
stos
stos
stos
add
add
add
cmpsl
mov
mov
scas
cld
xchg
xchg
xchg
call
lcall
xchg
fwait
lcall
mov
loope
je
out
nop
arpl
std
lcall
ljmp
and
mov
insb
pushl
pushf
lods
lock
mov
imul
int3
add
test
pop
scas
cmpsb
stos
test
lahf
pushf
popf
jmp
movsl
cmpsb
call
push
decl
inc
jae
lea
imul
sbb
call
or
mov
sbb
jae
mov
daa
jp
ret
inc
xchg
rcrl
subl
jne
push
mov
movsb
cmpsl
cld
test
scas
scas
ljmp
xchg
decl
or
xchg
decl
add
mov
adc
shlb
dec
inc
mov
aam
call
push
xchg
dec
cwtl
mov
mov
mov
movsl
mov
add
imul
test
mov
scas
pushl
mov
ljmp
aaa
outsl
call
pop
pop
call
add
mov
add
mov
push
xchg
fstpl
loope
mov
jmp
movsw
call
fwait
mov
mov
mov
cmpsl
test
pop
add
add
bound
adc
pushf
pushf
pushf
cld
mov
mov
mov
mov
scas
lcall
xor
lcall
lcall
add
mov
xor
jmp
jp
push
jle
out
jge
fistpl
mov
and
add
add
adc
imul
mov
mov
mov
rol
mov
arpl
jmp
add
cmpsl
add
mov
arpl
les
insb
fimull
in
mov
cmc
xchg
push
xchg
leave
stc
xchg
jmp
cmpsl
inc
mov
movsl
sub
inc
aas
inc
adc
push
xchg
mov
mov
inc
ret
ljmp
dec
cmp
movsb
add
mov
fs
add
aad
ja
in
insb
scas
clc
cmpsl
int
cli
stos
sar
cld
lods
sar
std
scas
sar
cld
lods
sar
in
scas
leave
inc
mov
movsl
ds
std
std
add
xor
mov
mov
rcl
aam
aad
aam
out
leave
lret
mov
mov
jmp
inc
add
aam
jb
call
nop
std
mov
cld
ret
std
ret
inc
lock
ret
test
dec
cmpb
add
add
stos
stos
stos
add
in
in
or
jmp
out
outsb
fcomp
fisubl
mov
add
mov
add
fldl
ja
lock
xchg
cld
scas
dec
in
shl
shl
call
out
std
shl
push
enter
into
in
scas
scas
scas
popa
addb
add
std
std
add
std
incb
int3
lret
shrl
mov
add
mov
add
loop
js
hlt
push
cmpsb
std
loope
call
std
shl
std
aad
cli
aam
push
enter
into
shl
mov
mov
xchg
xchg
xchg
pop
ret
adc
mov
add
insb
call
or
jg
ljmp
cli
in
mov
into
bnd
ret
shl
out
aam
ljmp
scas
push
cltd
cltd
lcall
add
add
rol
mov
stos
xchg
dec
and
push
mov
shlb
lret
ja
mov
fdivrs
lret
adc
int
fxch
iret
pop
aad
jecxz
fistpll
out
call
sbb
sarl
cmp
movsb
scas
arpl
lods
mov
ret
mov
les
int
fstp
fisttpll
int3
int3
int
aam
push
incb
jg
addl
stos
incb
mov
std
incl
std
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
adc
inc
repz
cwtl
das
fs
adc
mov
das
push
imul
dec
in
sub
mov
imul
jg
cmpsl
mov
mov
psrld
lds
xor
jecxz
test
pop
mov
sbbb
xlat
jecxz
or
mov
cwtl
pop
sbb
push
dec
jl
mov
outsl
fnsave
cmp
xchg
hlt
and
adc
jp
movsb
addr16
cwtl
lds
in
ljmp
or
imul
popf
pop
xchg
sub
mov
dec
jecxz
adc
arpl
xchg
push
out
test
stos
or
fildl
insl
add
cld
sub
sub
dec
dec
fistpll
test
std
roll
enter
test
and
out
xchg
cmp
add
fstps
and
push
dec
inc
xlat
jle
cld
xchg
jno
pop
cmc
rclb
jl
and
cmp
push
inc
lcall
cwtl
mov
or
fstl
mov
mov
bound
stc
xchg
sbb
cmp
mov
mov
cmp
aam
push
xlat
outsb
xchg
sbbl
adc
dec
mov
cwtl
das
pushf
pop
mov
dec
lock
jno
adc
imul
xchg
aaa
arpl
mov
mov
cmp
adc
outsb
scas
inc
dec
loop
shl
mov
mov
add
and
stos
push
or
enter
dec
xchg
bound
xchg
mov
inc
jecxz
xchg
sub
add
bound
or
orb
pop
sahf
fucomip
in
andl
inc
fisttpll
or
mov
ret
hlt
in
fstl
push
mov
sti
push
push
jmp
push
mov
or
inc
shll
mov
xchg
and
adcb
ja
cli
test
lahf
ss
pop
mov
push
loop
scas
inc
mov
ror
fs
and
adcb
inc
jne
mov
cltd
movl
push
sub
adc
sbb
ja
imul
jecxz
lea
fisttpll
or
sarl
sahf
pop
out
iret
insl
stc
nop
mov
rcll
repnz
xchg
sub
adc
or
repnz
addr16
sub
mov
cs
iret
data16
out
dec
jecxz
popa
in
test
mov
mov
movb
shll
cmpsb
cmp
mov
les
stos
data16
fmull
test
das
loope
xchg
adc
cmp
movsb
rclb
cmp
mov
fidivs
fcomps
or
xchg
jge
js
pop
sahf
sbb
scas
lock
and
mov
add
in
je
shrb
xchg
je
ja
xchg
lret
push
movsl
cld
cmp
les
into
shrb
mov
ret
hlt
xor
mov
inc
xchg
mov
lcall
pop
out
sub
pavgw
jl
sbb
iret
mov
mov
and
aad
jne
jae
pop
pop
repz
cli
xchg
cli
stos
jp
fstpl
sbb
xor
into
lahf
push
mov
add
in
icebp
movsb
aam
adc
div
mov
xchg
sub
mov
cs
iret
data16
dec
jecxz
pusha
in
test
mov
mov
lds
cmpsb
cmp
mov
les
stos
data16
fisttpl
sbb
loopne
xchg
adc
cmp
mov
cmp
mov
fidivs
xlat
pop
icebp
or
xchg
jl
js
pop
mov
inc
fpatan
dec
push
jns
test
lods
fdivrl
jb
je
repnz
mov
in
es
outsb
test
loope
mov
imul
inc
xlat
jl
mov
jo
outsb
add
loope
mov
jbe
or
fildll
out
test
pop
out
jae
cwtl
das
fildll
loop
ja
jbe
jae
mov
fildll
add
jae
and
fildll
in
xorl
addr16
pop
loop
out
test
add
add
repz
sub
orb
daa
mov
iret
add
addr16
inc
frstor
pop
out
test
mov
daa
out
cmpsb
cmp
ds
in
sbb
loop,pt
insb
mov
pushf
call
or
push
mov
out
cmpsb
cmp
push
push
jge
aas
ret
ja
repnz
fwait
xor
and
cmp
ret
xchg
repnz
sti
xchg
sub
sti
xchg
push
cli
xchg
cs
xchg
repnz
adc
push
stc
jmp
sub
mov
test
loop
lahf
adc
jnp
incb
inc
fdivl
loop
mov
rcrb
sti
cmp
shrb
jmp
push
out
or
pop
cmp
scas
inc
push
lock
and
xor
icebp
repnz
loop
clc
imul
lds
idiv
shrl
and
rcrb
xchg
sub
iret
sub
fsubrl
add
addr16
loope
fsts
sub
pop
divb
lret
cli
loope
ljmp
cmp
ss
cli
loope
lds
mov
js
lret
cli
loop
ficoml
cs
bound
test
cmp
out
xchg
lock
rcrb
add
and
or
and
repz
add
mov
sub
sti
jl
sub
or
sub
divb
daa
out
outsb
pop
add
inc
inc
out
inc
push
push
mov
ret
movsb
cmp
ficompl
or
dec
loopne
sbb
xor
pop
ret
repnz
cmp
in
clc
and
loop
sti
repnz
and
cmp
shrb
mov
fwait
loop
pop
out
sub
inc
frstor
sbbb
mov
jae
xor
out
ficoms
mov
add
js
mov
or
or
jle
dec
out
sub
aam
ret
xchg
inc
push
in
addl
hlt
mov
jno
jnp
test
push
jmp
mov
andl
jbe
lcall
jnp
data16
dec
fidivl
lcall
jmp
sub
scas
pop
mov
lcall
or
mov
adc
mov
fidivl
mov
mov
sub
mov
flds
popf
push
pop
mov
cltd
pop
scas
adcb
jl
aaa
scas
add
roll
push
aas
push
xchg
popa
clc
push
cmpsl
fnsave
test
sarb
cmp
push
fwait
push
out
leave
into
test
call
xor
test
push
out
inc
add
pop
mov
in
enter
cmp
mov
push
in
pop
mov
dec
call
aaa
add
pop
mov
ss
xor
bound
enter
hlt
iret
fdivl
sub
jb
and
xor
ret
pop
repz
clc
das
std
xchg
pop
daa
stc
push
les
test
jbe
pop
cmpsl
sub
daa
lods
aaa
into
cmc
je
lea
orb
outsb
into
gs
push
jae
aas
xchg
ja
out
inc
push
jno
jmp
jl
lahf
mov
repnz
imul
cltd
pop
sbb
mov
ret
pop
adcb
sbb
dec
jns
leave
stos
dec
filds
jne
xor
push
in
xor
pop
repz
pop
inc
fmull
jp
cmc
insb
shrl
pop
cmc
mov
mov
lock
clc
xchg
adc
addl
and
cmp
pusha
push
jmp
xor
loopne
out
push
fnsave
call
inc
stos
in
add
bound
push
das
mov
fcomi
orl
test
pop
enter
cmp
and
inc
fidivrs
adc
jl
push
dec
loop
repnz
and
adc
jne
cltd
xor
xchg
mov
les
inc
mov
mov
adc
aas
fbstp
xchg
sub
adcl
mov
xor
stos
push
fsubrl
in
pop
std
push
imul
push
icebp
or
movsb
mov
push
notb
sub
movsl
test
int
inc
sti
pushf
test
and
push
out
sbb
xchg
test
into
rcrl
sbbl
sbb
dec
fistps
or
data16
lcall
xor
xorb
jne
sti
xchg
mov
nop
daa
ljmp
sub
cmp
pop
enter
les
ja
daa
pop
push
cwtl
das
test
mov
pop
sbb
dec
shl
repz
push
adc
adc
or
lcall
ret
scas
in
or
rcll
testl
lods
sbb
jnp
ror
mov
cmpsb
xchg
sbb
sahf
test
aaa
push
adc
stc
loop
adc
ficomps
rolb
sti
lods
jns
push
jg
jno
dec
hlt
sbb
addr16
leave
cld
test
pop
xor
fs
xchg
xchg
pop
hlt
enter
test
xchg
push
std
pop
sub
mov
aad
sti
sbb
adc
inc
ljmp
dec
push
add
inc
arpl
imulb
mov
mov
mov
add
xlat
cmp
hlt
imul
ror
dec
mov
scas
hlt
nop
sub
stos
xchg
dec
fisubrl
movsb
test
pop
ror
js
cmp
aaa
sub
jb
or
out
add
scas
lds
cmp
sub
jg
jne
decl
push
scas
mov
xchg
ficompl
scas
and
pop
adc
int3
xor
loop
xchg
jl
push
aas
mov
andl
ja
sbb
mov
sahf
mov
in
inc
push
inc
dec
fnstsw
pop
out
push
sub
jge
push
movsb
outsb
xchg
push
cmp
jns
xchg
stc
or
pop
cmpb
xchg
push
cltd
cmp
lret
lock
push
stos
sahf
arpl
dec
insb
jb
out
lcall
add
jp
mov
inc
cmp
enter
insb
enter
pop
jo
dec
mov
dec
mov
pcmpgtd
mov
lcall
mov
adc
or
subb
rcll
subl
int3
sub
xchg
sbb
push
hlt
inc
aaa
pop
lret
mov
inc
xchg
in
pusha
aaa
push
or
mov
jmp
dec
fwait
fbstp
fildl
pushw
cmp
shlb
lds
add
mov
mov
pop
sbb
loop
negb
icebp
repnz
mov
xlat
jns
js
sub
insb
xchg
mov
adc
aam
jmp
lret
out
pop
stos
imul
enter
adc
insb
daa
xor
stos
xchg
add
push
pop
adc
inc
sahf
or
push
xor
pop
out
push
mov
mov
push
sub
daa
in
loope
in
mov
ljmp
leave
js
cmpsl
push
cmp
fistl
push
dec
inc
pop
inc
mov
or
nop
ret
xchg
mov
enter
mov
into
fcoml
in
dec
std
call
xchg
pop
ja
sub
movsl
vcvtdq2ps
jge
push
dec
loopne
jb
sub
leave
ret
inc
sub
xchg
fsubrs
test
push
in
repnz
adc
adc
mov
mov
fidivl
jne
pop
daa
xchg
fdivs
inc
movsb
cmp
imul
mov
jo
pop
push
xchg
sub
jle
and
sub
lods
inc
cld
inc
icebp
mov
jbe
test
mov
cwtl
dec
aas
mov
ljmp
add
jnp
out
lods
decb
or
imul
sub
mov
dec
outsl
and
imul
shlb
add
out
xchg
push
mov
cltd
or
ret
sub
sub
loopne
inc
dec
loopne
sub
decb
add
sbb
inc
xchg
sub
cmp
mov
loope
into
lock
mul
call
pop
xchg
movsl
adc
adc
test
fucomp
dec
loope
testb
mov
decl
stos
jbe
sub
and
xchg
sub
sahf
test
ljmp
pop
push
lods
in
cmpsb
and
leave
ret
loopne
add
loop
and
mov
rorl
je
cmc
test
jp
pop
sarl
cwtl
das
or
sub
pop
mov
inc
xchg
movsb
loope
xchg
mov
lock
adc
jg
das
push
movsl
mov
aad
ret
mov
and
lds
inc
fstps
xchg
js
sti
xor
negl
xchg
cs
jle
data16
rcrl
pushf
xor
neg
jbe
btc
jae
orb
jo
or
les
daa
mov
fdivr
inc
fdivrl
repnz
sub
ljmp
jno
mov
mov
in
adc
pop
adc
add
shlb
jbe
and
lods
cmpsl
fdivl
mov
loop
sub
in
or
jnp
or
xchg
cltd
scas
scas
ja
gs
and
das
ds
dec
mov
hlt
cmp
lret
bound
xlat
jmp
xor
mov
sahf
push
mov
sahf
andl
ljmp
mov
sbb
cmpsb
xchg
sub
int
fisubrl
inc
popa
clc
jge
fnsave
jg
jmp
add
mov
pop
mov
into
repnz
push
data16
cmpb
insl
call
lods
cmc
mov
int3
push
dec
lods
inc
sarl
ljmp
jno
ret
stc
cli
xchg
jge
es
sbb
cmpsb
push
lret
bound
out
fs
in
das
jmp
sbb
test
scas
fistps
sub
int3
jne
inc
icebp
sbb
pop
fbstp
outsl
jb
jl
std
xchg
cltd
xchg
nop
daa
lds
scas
inc
fldl
int3
arpl
mov
ljmp
mov
lahf
adc
outsl
push
mov
es
insb
pop
inc
fstpt
mov
stc
in
or
stc
nop
mov
ss
cmpsl
pop
scas
mov
push
xchg
stos
inc
fsubrl
mov
arpl
mov
out
xchg
pop
jne
movsb
ja
mov
lds
dec
loopne
dec
fnstenv
push
push
mov
outsl
xchg
and
cmp
fld
pop
hlt
push
loope
mov
or
xchg
into
lea
mov
lods
ret
inc
cmp
lahf
adc
js
mov
lock
call
jg
sbb
sub
or
mov
sub
loopne
inc
xchg
sub
ret
daa
pusha
cwtl
das
loopne
into
gs
pop
mov
lret
xchg
or
mov
imul
mov
ja
fisubrs
leave
gs
pop
aas
dec
jecxz
das
sbbl
idivb
mov
aam
xor
mov
aas
fs
fnsave
pop
gs
in
xor
sbb
rcrl
adcb
out
in
sub
lahf
movsb
inc
adcb
les
xor
add
mov
jnp
fidivl
xchg
push
lods
data16
xchg
xor
inc
mov
push
jmp
jb
adcb
fwait
push
jmp
sbb
pop
pop
test
mov
das
les
push
xor
popa
dec
jge
scas
std
fs
into
iret
mov
popf
xor
push
in
dec
pop
and
outsl
sbbl
test
fldln2
xchg
jmp
mov
dec
divl
or
shrl
sahf
nop
daa
lds
scas
inc
cld
mov
int
inc
push
cmp
add
sbbb
hlt
jbe
mov
jp
daa
mov
aas
sub
xchg
sub
arpl
and
dec
sbbl
hlt
movsl
lahf
ss
sarl
mov
cmp
jb
aaa
into
pusha
ret
xrelease
or
sbbl
imul
fists
inc
outsl
jge
es
jb
push
fwait
xor
mov
scas
xchg
pop
fsubrs
mov
testb
hlt
adc
pop
push
sbbl
movsl
adc
and
dec
outsb
add
adc
add
sbb
push
mov
xor
pop
lods
cmpsl
cmp
add
jge
movsl
dec
loope
sbb
pushf
cmp
jle
arpl
cwtl
lcall
mov
xchg
sub
lahf
and
push
pop
dec
mov
jne
lret
es
xchg
rclb
cli
xchg
cmp
mov
stos
sbb
jo
ss
lcall
mov
out
mov
outsb
add
and
dec
scas
inc
xchg
mov
push
cmp
int3
arpl
push
push
jmp
jb
stc
nop
or
sub
lods
out
mov
ja
xor
adcb
out
cmp
jp
out
add
pusha
cmp
pop
arpl
les
mov
dec
loop
pop
out
xchg
add
adc
test
das
insl
and
and
inc
fmuls
loope
shlb
cmpsb
clc
lock
iret
jge
sbb
push
movsl
xor
ret
push
xchg
loope
sub
outsb
pop
call
cmc
mov
mov
lds
inc
fmuls
jne
jp
and
pop
sbb
mov
enter
lods
fwait
xor
mov
mov
in
add
outsl
cmp
jnp
adc
ds
xor
xchg
adc
div
stos
inc
mov
xlat
leave
pusha
ds
stc
nop
imul
pop
scas
imul
int3
inc
test
inc
pop
push
ljmp
sbbl
adc
mov
adc
xchg
push
clc
popl
dec
jecxz
sub
push
sbb
mov
cmpsl
mov
jmp
cli
mov
pop
sbb
ss
xor
pop
cmc
test
shlb
jg
pop
jo
pop
mov
cwtl
insl
and
dec
hlt
mov
dec
pop
bnd
adc
push
adc
enter
xor
xchg
mov
lret
adc
jecxz
sub
sbb
dec
dec
leave
lods
inc
cmp
cwtd
pusha
fdivl
mov
test
push
cli
xchg
das
lock
incl
shlb
aaa
into
sub
ficomps
mov
cld
sbb
testb
popa
lock
dec
xchg
mov
jbe
fnsave
xchg
fsin
sti
xchg
and
sbb
lods
dec
sbb
push
aaa
into
nop
nop
dec
loopne
mov
neg
call
jae
sub
xchg
sub
lcall
pop
mov
mov
xchg
sub
mov
mov
and
scas
shl
hlt
mov
divb
es
mov
shlb
test
cmc
test
loopne
iret
mov
icebp
mov
notb
scas
test
inc
pop
or
pushf
daa
adc
add
mov
arpl
jge
test
fwait
cld
xchg
iret
aad
sbb
icebp
and
pop
inc
inc
fnstenv
ret
pop
lods
xchg
pop
cmc
enter
add
jl
push
push
insb
sbb
add
ret
sahf
inc
rorl
rcl
sbb
add
mov
xor
sbb
in
out
sarb
fldt
mov
xorb
repz
aaa
pop
lods
mov
or
dec
xchg
add
rolb
dec
movsb
mov
add
mov
fcmovbe
pop
insb
in
dec
repz
loop
dec
mov
inc
ja
sub
jmp
mov
test
inc
mov
jae
movsb
pop
inc
jp
xor
xchg
inc
jno
sub
xchg
aad
hlt
mov
aad
cmp
stos
push
daa
push
movl
adc
ss
test
sbb
push
cld
xchg
and
push
sub
mov
iret
push
hlt
mov
xor
cltd
mov
cltd
mov
jb
add
jecxz
xchg
and
bnd
or
jge
mov
addr16
out
les
aaa
dec
out
inc
aas
insb
jns
insb
cli
or
iret
in
jo
cld
add
icebp
mov
cmc
push
lds
das
cltd
sub
and
sub
fisubs
in
pusha
incl
or
lods
mov
adc
xchg
mov
std
mov
enter
fcompl
test
push
adc
xor
adc
fnstcw
nop
ljmp
and
scas
es
scas
jns
imul
push
xor
pop
scas
lea
add
sbb
out
out
cmovs
ja
in
cmp
sbb
mov
mov
mov
adc
sbb
stos
inc
andl
mov
sbb
sbb
test
adc
jp
jnp
mov
stc
into
add
push
dec
clc
clc
lock
push
andl
fcmovbe
mov
xchg
clc
sbb
jmp
outsl
sbb
es
rorl
xor
add
mov
cmpsl
imul
sti
or
sub
push
mov
push
pop
xchg
or
mov
sbb
mov
push
mov
lea
pop
fcompl
daa
in
mov
aas
push
stc
pop
jae
icebp
scas
push
int3
xor
jl
stc
test
pop
pop
and
mov
imul
rcrb
and
pop
and
and
add
call
scas
push
scas
xor
pop
loope
cmc
push
mov
lods
adc
mov
loop
pusha
push
cmpsl
cs
jnp
cltd
mov
pop
sbb
scas
mov
add
mov
jbe
inc
cmp
imul
pop
jg
mov
shl
idivb
inc
loope
xchg
pop
lods
lret
mov
pop
test
lret
jecxz
shrl
pop
push
int
stos
ffreep
add
fstpl
mov
jge
sbb
in
cmp
movsl
insb
fcompl
jecxz
adc
fcmovnbe
cmp
outsl
mov
push
jnp
mov
js
cltd
aam
mov
cmpsl
daa
aam
and
adc
in
mov
push
push
pusha
mov
int3
cmp
pop
sbb
test
in
add
loope
stc
inc
out
push
mov
sahf
sbb
icebp
daa
mov
mov
loopne
lcall
mov
cs
daa
jnp
jo
out
mov
sbb
add
aad
cmc
bnd
and
enter
lea
inc
fiaddl
xor
out
and
xlat
push
mov
aaa
rcrb
mov
or
dec
ss
xchg
sbb
outsl
adc
xchg
push
jnp
fcomip
out
nop
dec
scas
sub
dec
stos
and
or
xor
xor
and
mov
cmpsb
and
mov
xor
xor
xchg
nop
xchg
or
imul
call
mov
push
movsb
repnz
inc
cmp
inc
les
cmp
or
lds
shrb
and
mov
inc
cmpb
stos
sbb
sub
sbb
or
call
scas
idivb
cmp
sub
push
ss
mov
sbb
daa
cmpsb
test
test
add
in
xchg
jge
jmp
out
fwait
iret
mov
or
dec
cmpsl
in
lds
in
xchg
rcll
lcall
adc
out
popf
add
lods
dec
jne
mov
in
xlat
jp
fstps
movsl
mov
repz
mov
or
lods
mov
xor
push
push
lcall
rorl
insb
imul
lods
ja
mov
popf
pop
das
pop
insl
add
jp
popa
popa
push
addb
push
fsubr
xor
mul
repz
out
outsb
sub
in
adc
stos
aaa
leave
aam
nop
mov
and
lods
jo
inc
mov
adc
inc
fnstsw
sti
out
iret
rcr
in
nop
adc
out
mov
ds
mov
leavew
ror
dec
xchg
jp
cmp
adc
fldz
inc
mov
pop
popa
push
test
dec
fsubrs
leave
sahf
push
and
dec
mov
je
adc
ds
cmpsb
pop
pop
movsb
cmp
rorb
push
addr16
push
or
push
test
bound
inc
jo
add
cmp
cmp
and
sbb
pcmpeqw
pop
or
in
ss
pusha
ret
shrl
xor
sbb
mov
daa
sub
fsubs
inc
and
xchg
repz
or
xchg
push
push
fdivrp
pop
in
mov
outsb
and
pop
loope
adc
das
jle
or
dec
rcll
cmpsb
sbb
out
mov
mov
sbb
outsb
ja
pop
fisttpll
push
cmp
notl
cli
out
lea
sub
cmp
insb
int
add
pusha
or
out
imul
xchg
push
addr16
pop
cltd
imul
and
xor
and
mov
jecxz
hlt
stos
rcl
cltd
je
xor
mov
imul
mov
outsl
or
xlat
inc
push
mov
mov
stc
lcall
dec
mov
mov
push
icebp
mov
cmp
add
mov
sti
jne
ficomps
jge
mov
cmp
and
push
pushl
sbb
loope
push
nop
test
add
jns
xchg
lea
shlb
jo
push
sbb
jo
or
and
mov
and
mov
push
push
mov
hlt
popa
adc
push
stc
inc
jae
jge
data16
sbb
pop
pop
ficoms
lret
mov
jmp
imulb
mov
subb
gs
adc
test
jg
push
xor
cltd
test
in
xchg
mov
jle
subl
dec
xor
sub
imul
xchg
shll
and
in
or
add
ret
pop
jns
or
subl
adc
jge
cltd
pop
jno
ret
insb
enter
mov
jb
insb
add
pop
enter
adc
inc
cmp
repnz
mov
mov
addr16
lahf
or
sahf
dec
push
or
add
bound
out
sub
add
fsub
cli
and
imul
in
adc
hlt
lea
stos
inc
clc
repnz
pop
das
ret
dec
loop
xor
push
push
pop
loop
clc
mov
dec
sahf
fldcw
sbb
xor
aad
nop
ds
daa
xchg
clc
shlb
pop
ficomps
cli
test
insb
or
inc
hlt
std
lret
xchg
inc
mov
shll
pop
mov
pop
outsb
sub
sarl
inc
ljmp
pop
xchg
pop
add
addb
fdivrl
push
add
loop
or
add
xchg
mov
mov
lods
dec
or
loopne
xor
pop
fiaddl
lahf
cmp
sub
movsl
dec
jl
lcall
jmp
into
jle
inc
dec
movsb
scas
and
mov
jl
rorb
jno
mov
jo
sbb
jbe
inc
mov
cmp
pop
or
jl
iret
jl
outsl
mov
adc
push
rolb
lret
adc
mov
sbb
add
or
dec
movsb
sar
mov
aad
orb
in
stos
push
sbb
sbb
sub
stc
mov
loope
mov
arpl
push
outsb
je
dec
fcmovne
cmp
cmp
out
cli
inc
nop
mov
insl
movsl
sti
sub
ror
sub
jecxz
pushf
lea
orl
insb
fldenv
stos
jmp
leave
aad
push
jbe
aad
xor
pop
andl
dec
cmpsb
repnz
mov
pop
pop
scas
shlb
push
adc
push
fistl
dec
mov
aas
jb
cmp
mov
sbb
push
iret
in
and
cmp
je
and
into
outsb
sahf
pop
cmpb
rcrb
pop
jbe
imul
scas
fistps
repz
loop
dec
test
mov
push
scas
fbld
outsl
pop
push
fstpt
jne
pop
mov
push
mov
popw
adc
sub
scas
rcl
add
rol
add
or
jmp
pop
lea
outsl
dec
add
or
dec
pushf
cmp
adc
fnstsw
aad
push
cmp
shll
rclb
arpl
pushf
pop
push
or
ja
xchg
mov
adc
ss
lahf
fsubr
cmpsb
mov
dec
mov
test
aaa
dec
sub
pop
add
push
sbb
cld
jge
inc
test
dec
xor
mov
xchg
jmp
and
inc
sbb
loopne
ret
sub
xchg
in
gs
lods
dec
adc
jns
pop
fidivrs
jecxz
in
sbb
push
das
fidivrs
and
pop
and
scas
jecxz
dec
jo
inc
pusha
mov
pop
sbb
pop
cmp
mov
or
out
and
mov
and
loopne
in
pop
pop
xor
clc
stos
mov
inc
push
inc
arpl
fldln2
cmp
xchg
mov
ret
mov
lock
scas
sub
addr16
mov
xchg
lds
aam
inc
int
add
pop
sbb
or
ja
ret
rcll
ljmp
push
sahf
int3
daa
or
fistl
xorl
push
adcb
repz
or
push
arpl
pusha
popf
iret
or
popf
rolb
test
jbe
fdivr
mov
xchg
mov
enter
dec
or
mov
js
int
loope
add
pop
pop
mov
iret
push
xchg
dec
push
inc
adc
adc
mov
sbb
push
mov
add
adc
rorl
movsl
pop
sub
jo
push
mov
add
push
test
data16
data16
in
es
and
mov
testb
pop
pop
cmp
cmpl
pop
out
enter
cmp
in
das
xchg
xchg
fs
xchg
fwait
out
fwait
dec
data16
shlb
in
jp
repz
push
pop
addl
out
aad
rorl
xchg
fisubl
inc
lret
adc
cmpsl
ds
icebp
add
dec
cwtl
sub
loopne
add
xor
pop
sbb
stos
jae
push
jb
jle
jns
pop
cmpsb
or
dec
cmpsb
push
divb
popa
push
cmp
inc
inc
cmpsb
add
push
adc
or
xchg
ficoml
jbe
adc
mov
scas
ror
mov
cli
repnz
add
cld
xchg
pop
pop
inc
out
mov
jge
pop
mov
scas
push
xchg
mov
jp
xchg
or
repnz
xor
push
mov
scas
mov
es
fs
pop
insl
jno
aam
or
adc
mov
lahf
lea
xchg
dec
lret
mov
pop
in
rorb
movsl
cltd
dec
jne
sub
outsl
jo
mov
cld
insb
sbb
mov
nop/reserved
test
pop
jmp
aam
je
inc
pop
sbb
push
or
and
in
movsb
mov
jp
cs
adc
dec
dec
lock
mov
add
std
sub
movsb
xchg
repz
mov
cmp
imul
push
pusha
in
ljmp
mov
pop
xchg
xchg
fs
pushf
popa
lea
xchg
sbb
ret
inc
rcrl
pop
stos
add
sub
addr16
mov
stos
std
int3
decb
dec
mov
cmovle
mov
cmc
aaa
idivl
inc
pop
stos
push
mov
sbb
dec
das
jmp
add
xchg
cmpsb
push
mov
lods
cmpsb
xchg
test
sbb
jne
sbb
sahf
or
dec
inc
sub
lods
movntps
ret
sub
xchg
or
and
cmp
sub
mov
push
push
shlb
gs
pop
and
inc
mov
xchg
add
pop
jbe
repz
push
js
mov
jp
fcmovnb
xchg
shlb
lock
jmp
xchg
nop
adc
push
mov
mov
push
in
or
pusha
mov
jge
out
xor
sbb
mov
mov
sub
sbb
out
fs
xor
rcll
mov
or
pusha
inc
inc
jle
push
push
lret
xchg
addr16
sbb
inc
leave
push
shl
sarl
insl
sbb
shll
or
std
out
das
loop
xchg
out
sti
mov
cmpsb
stc
jmp
ret
daa
arpl
push
and
les
cltd
add
movl
jmp
ret
fnsave
ja
mov
jle
int
add
test
fsub
jl
mov
xchg
mov
in
scas
inc
add
int
cmpsb
jmp
ja
inc
scas
jl
adc
jl
fnstcw
adc
mov
test
cmc
scas
call
das
ljmp
les
fdivrl
jno
sbb
int3
inc
rcrb
stos
pop
aam
ret
jecxz
add
out
jae
pop
mov
jnp
mov
cmpb
inc
mov
lea
jmp
aam
jb
pop
in
push
adc
mov
sar
repz
je
mov
or
add
mov
and
je
jge
sbb
sbb
in
jo
sbb
je
daa
cmp
add
push
push
cmpsb
mov
jns
xchg
out
jge
dec
mov
stc
sub
sahf
jno
popa
sub
test
and
shr
outsl
adc
mov
insl
addr16
and
sub
and
mov
or
mov
dec
push
insb
push
or
push
pushl
lods
loop
mov
jp
pusha
mov
cmp
mov
inc
inc
xchg
into
inc
nop
jno
lea
loope
cli
and
ljmp
repnz
inc
push
inc
push
adc
jl
les
aas
adc
imul
pop
repnz
fnsave
mov
je
add
add
push
xchg
inc
xchg
xor
sahf
inc
mov
inc
sti
add
repz
sub
ljmp
mov
mov
cs
jecxz
sbb
jmp
sub
jmp
jg
inc
in
data16
fdecstp
adc
push
ljmp
xor
dec
lret
pop
adc
bound
scas
cmp
push
daa
push
xor
test
or
inc
inc
test
sub
push
jecxz
xchg
xchg
xor
mov
add
jae
dec
es
pushf
pop
xlat
mov
xor
pop
cmp
in
test
imul
hlt
lods
or
sbb
cmpsb
in
iret
sarb
hlt
iret
cmp
pop
sahf
inc
and
mov
or
les
and
sbb
orl
inc
push
xlat
push
inc
xlat
popf
clc
aas
dec
out
repz
mov
lret
and
or
xlat
push
adc
sti
mov
mov
fisttps
aad
cmpl
ret
mov
mov
dec
adc
pop
and
mull
lea
cmp
test
cmpsl
mov
stc
int
cld
scas
andl
mov
sub
ja
in
loopne
lret
xchg
jno
jecxz
imul
xchg
sbb
shrb
mov
cmp
ds
int3
pop
dec
imul
push
rcl
jecxz
dec
out
test
mov
gs
xchg
shlb
cld
bound
jnp
stos
mov
or
and
and
shrl
pop
xchg
add
aam
add
fwait
or
lcall
push
inc
int
adc
push
jo
aad
jp
hlt
xchg
cmpsl
add
cli
cmp
sub
mov
or
sbb
rcl
ja
fcomip
shll
loope
push
jmp
and
inc
mov
xor
movsl
movsb
test
jecxz
insb
ficompl
or
inc
gs
cmpsb
and
aad
xchg
sub
xchg
stos
adc
adc
divl
push
jp
xor
insb
repnz
mov
lahf
jne
fs
sti
adc
add
lods
ss
push
mov
lcall
xchg
imul
cmpsl
cmp
mov
mov
xchg
insl
call
adc
inc
mov
test
inc
lcall
pop
xchg
jp
sub
ja
andl
pusha
xchg
mov
hlt
lret
cmp
pop
pop
dec
cmp
js
push
sub
dec
cmc
sub
sbb
insl
dec
das
add
inc
mov
xchg
and
int
xchg
cld
and
jno
lret
mov
xchg
out
sub
pop
lahf
sbb
sbb
jg
push
incb
sti
hlt
jg
push
rcl
fldl
cmpsl
mov
inc
into
sbb
push
cwtl
leave
jl
mov
sbb
push
jg
shl
cs
rcrl
cltd
sbb
cmc
and
adc
mov
ljmp
dec
jecxz
clc
sbb
cmp
mov
push
test
pop
stos
inc
mov
fsubrs
or
mov
enter
xor
pusha
scas
cld
inc
out
ret
fcomps
pop
sahf
in
pop
scas
aam
xlat
or
xor
subl
divl
jl
loopne
jo
int
dec
imul
enter
pushf
or
call
and
add
pop
fadd
ja
or
lods
xchg
cltd
in
mov
cmp
and
and
test
test
jno
iret
pop
ds
sahf
pop
push
mov
mov
push
xchg
or
mov
ss
movsl
imul
jecxz
or
pop
test
iret
xchg
mov
pop
mov
add
or
push
out
jo
movl
je
pop
incb
mov
mov
xchg
push
or
xor
outsb
mov
aam
inc
gs
or
xchg
sti
lea
popa
cmp
pop
fldcw
enter
lcall
jle
aam
sahf
mov
cmp
test
xchg
les
add
fs
jne
sti
push
lret
cs
xchg
and
sti
jmp
and
mov
and
std
fstpl
pop
nop
dec
jecxz
loop
mov
xor
je
inc
cmp
and
jge
xchg
lea
fimuls
push
lcall
inc
mov
add
or
jg
dec
cmp
dec
outsl
fnstsw
dec
mov
xor
sbb
xor
pop
shl
outsb
sub
mov
test
out
pop
push
in
xchg
pushl
mov
mov
ljmp
and
pop
jb
aaa
pop
push
pop
cld
xchg
and
add
cmp
ret
clc
lcall
mov
mov
dec
add
mov
sbb
imul
and
mov
iret
sbbl
fisubl
sub
loope
jmp
xor
mov
jae
ds
mov
int3
movb
xor
jg
inc
adc
and
dec
push
sbb
js
mov
pusha
and
cs
loopne
xchg
jmp
xorl
mov
xor
data16
scas
add
or
nop
outsb
cmpsb
imul
ror
jbe
leave
pop
inc
stc
outsl
pop
push
mov
aaa
or
mov
aas
mov
shll
sbb
mov
ljmp
gs
push
std
in
push
out
and
or
dec
adc
sub
inc
or
mov
mov
lcall
mov
add
push
or
in
push
pop
push
jnp
dec
fcompl
pop
enter
or
dec
nop
cld
sub
pop
push
push
xchg
out
sub
call
add
add
in
mov
mov
lock
lahf
sbb
mov
lods
mov
pop
sub
mov
iret
push
clc
or
out
lahf
xor
push
imul
add
and
mov
notb
xor
add
cmpsb
mov
adc
sarb
iret
push
test
mov
adc
fisttpl
cmp
or
pop
movsb
lock
ja
mov
cmp
fs
and
xlat
mov
inc
fdivrs
mov
dec
pusha
fadd
imul
nop
pop
mov
xchg
stc
repz
mov
sub
test
ja
loopne
jl
aam
xchg
enter
pop
dec
sub
sbb
xlat
jmp
bound
ja
aam
mov
sub
cmp
xor
inc
hlt
or
pop
mov
cmp
jle
mov
es
popa
je
mov
sub
sbb
arpl
lahf
ja
and
arpl
sub
mov
in
nop
call
aaa
or
jmp
test
frstor
jle
mov
lret
mov
inc
lds
add
push
mov
lds
push
mov
mov
out
add
aas
mov
repz
lahf
pop
nop
inc
dec
xor
scas
into
ds
movsb
into
sbb
xor
adc
ret
sbb
sbb
fisttpll
imul
mov
and
sub
add
sbb
test
add
subl
loop
mov
xor
jle
cmp
cmp
and
xor
jecxz
cld
jno
imul
sahf
shll
inc
mov
mov
aas
lods
mov
pop
lret
hlt
cmpsb
aad
stc
pusha
mov
push
or
nop
bound
ljmp
popf
sub
pushf
loopne
mov
mov
movsw
add
mov
lret
fidivs
je
div
addr16
testl
adc
aaa
rcrl
scas
test
add
mov
imul
jmp
loope
stos
pushf
dec
or
mov
cmp
xchg
adc
or
and
push
shlb
addr16
je
xchg
mov
pop
stos
cmp
lock
je
xchg
popf
cmp
test
stos
push
pop
jns
xchg
mov
mov
stos
lods
lea
lea
lods
pop
jo
pop
lds
test
pop
nop
sarl
inc
rcl
cli
cmp
or
ret
adcb
test
sub
pop
or
lcall
cmpsl
andl
int3
sarl
push
xchg
lret
in
sub
lea
jecxz
enter
cmp
push
les
jl
xchg
outsb
lods
and
in
xlat
mov
pop
test
data16
mov
xor
leave
outsl
clc
jno
xchg
jno
lods
mov
bndstx
stc
ret
dec
aas
into
and
pop
rclb
dec
xchg
add
bound
dec
int
sbb
cmp
fiadds
ret
push
mov
cmp
xor
data16
lods
idivl
dec
mov
dec
add
clc
out
outsb
or
fnstsw
or
xor
inc
lret
test
mov
das
jb
lret
cld
dec
insb
ret
or
sub
stc
mov
test
lahf
lcall
xchg
std
fisttpll
iret
cli
pop
lock
lret
scas
sti
aad
mov
in
mov
cs
and
mov
lret
and
sub
sti
pop
mov
xchg
ljmp
adc
xchg
shrl
rcr
add
and
clc
jbe
pop
dec
or
jle
cmp
adc
cmpsl
and
xor
loopne
inc
in
popfw
in
in
movsl
pop
popa
push
jg
mov
pop
push
inc
push
movsb
jae
out
gs
cltd
test
sub
add
push
cmc
sbb
out
adc
es
jnp
aas
sub
sub
icebp
push
adc
push
cmpl
jnp
test
push
add
sbb
add
mov
inc
mov
ret
or
pop
sbb
pop
xor
sahf
fcmovnu
daa
popa
in
popa
in
adcl
ret
mov
xchg
dec
popf
jns
cmp
sub
push
jp
mov
daa
pop
xchg
test
adc
dec
addr16
lock
jb
arpl
xchg
pop
das
test
pop
ds
cs
icebp
loop
dec
aam
jo
mov
test
int
inc
sub
fists
sub
mov
jbe
mov
xchg
and
adc
jg
movsb
xor
outsb
xor
fcomps
xchg
lret
and
jnp
or
imul
jno
sub
lret
movsb
or
mov
pop
cltd
pop
inc
mov
mov
lahf
js
sbb
cli
sub
lock
sarb
adc
mov
mov
mov
lock
cmc
lods
movsb
jo
or
movsb
adc
adc
xchg
xor
cmpsb
nop
push
shl
insb
xchg
mov
adc
jge
rorl
xor
ja
push
mov
sbb
in
pop
jg
sub
and
jae
in
cli
hlt
pop
jg
or
lds
sbb
lds
in
das
out
sbb
mov
daa
pop
or
sub
sbb
repz
adc
jae
imul
lret
push
pop
nop
dec
dec
cmp
lds
jae
leave
sub
lret
xor
adc
call
int
mov
ss
xor
stos
js
fcompl
loop
movsl
sub
mov
test
mov
xor
mov
shl
out
jbe
dec
jnp
fcomip
pushf
xchg
test
ss
daa
lret
jae
out
repz
sahf
outsb
lret
xor
pop
adc
hlt
scas
test
orl
dec
add
inc
pop
mov
jp
cmp
cltd
cmp
hlt
inc
dec
add
out
push
popa
stos
pop
jb
adc
push
or
xor
add
xchg
loopne
inc
mov
mov
mov
pop
lcall
daa
cmp
mov
stos
cmp
test
push
dec
or
loopne
aad
aam
jno
adc
sub
dec
mov
aam
in
dec
icebp
push
mov
lahf
dec
leave
sbb
jo
push
and
gs
mov
movsb
pop
stos
mov
or
mov
test
lret
inc
arpl
sub
sahf
shrl
lock
imul
push
iret
mov
ret
push
adc
and
aas
rcr
insb
sbb
sbb
adc
sub
das
dec
mov
lahf
testl
jle
movsb
add
js
sub
cmp
enter
aas
loope
jne
mov
mov
xorl
repz
test
ret
cmpsb
cmp
cmp
gs
push
lret
dec
mov
ret
les
sahf
or
push
sarl
out
fwait
mov
cmp
popa
xor
mov
mov
inc
mov
jmp
xchg
fcomps
sbb
pop
lret
mov
push
sbb
insl
pushf
mov
vhsubpd
data16
fwait
jp
jb
cmp
mov
sub
jb
cs
movsb
sbb
int
fstl
push
xchg
push
js
fiadds
pop
jbe
dec
sahf
adc
push
mov
addl
and
movsb
jo
fisubs
jbe
ret
jge
sbb
test
dec
or
mull
cmp
test
fcoms
mov
inc
jns
leave
jecxz
add
xchg
fwait
xorb
scas
mov
cmp
or
mov
xchg
cmp
repnz
mov
add
adc
movsl
xor
andl
testl
sub
popf
sub
pop
mov
arpl
lods
adc
sbb
fs
pop
xchg
and
jbe
jae
push
movsl
or
xchg
cmp
fdivl
pop
push
mov
sbb
dec
scas
cmp
loopne
adc
xor
jbe
test
push
in
inc
cmpsb
fsubs
push
xchg
stc
lods
inc
sbb
cmp
outsb
bound
rcrb
jmp
jne
loopne
sahf
adc
and
mov
test
push
cmp
xchg
pusha
testl
sub
pop
sti
jns
sub
dec
fwait
xor
mov
shlb
cmc
fidivl
jbe
jle
dec
std
xchg
jp
std
xchg
sti
fwait
and
dec
in
cmp
push
outsl
cmp
stc
jo
data16
repnz
jns
ret
adc
inc
in
cmp
movsb
cmp
mov
fdivl
or
cli
xchg
punpcklwd
xchg
xchg
xor
scas
popa
mov
mov
xorb
mov
cmp
aaa
aam
jmp
pop
pop
icebp
mov
jb
pop
stos
js
fnstsw
daa
stos
xchg
sub
call
dec
andl
gs
movsb
shrl
jae
subl
xchg
sub
mov
imul
aad
xor
sahf
idivb
shrb
shrb
mov
pusha
testl
dec
lahf
hlt
outsl
push
sarl
add
inc
cltd
and
mov
ret
cld
rcrl
lods
inc
inc
mov
pop
mov
sub
push
mov
dec
in
das
rcrl
and
movsb
pop
xchg
sub
mov
lcall
jl
cltd
movsl
dec
loope
jb
cmp
call
inc
ficompl
mov
fisubs
or
mov
fisttpll
mov
xchg
daa
loope
popa
mov
or
addb
cmp
popa
clc
push
pop
shrl
daa
in
popa
cmpsb
xchg
sub
andb
mov
fdivl
sub
pusha
test
cmp
adcl
clc
push
dec
ljmp
lcall
mov
ficomps
pop
aas
push
lods
push
mov
shll
rcll
lods
or
mov
mov
sbb
movsl
inc
ja
in
mov
loop
popf
shll
or
shrb
or
xor
data16
fidivs
rorb
mov
sub
stos
inc
xor
mov
mov
ret
xchg
cs
scas
xchg
fstps
out
dec
cli
jbe
and
xchg
xchg
inc
or
out
lahf
repnz
cvtdq2ps
cmp
cmpsl
ds
and
outsb
movsb
daa
mov
mov
fcmovnu
jno
dec
ret
pop
je
dec
out
xchg
stos
inc
iret
andb
sub
aas
add
es
sbbl
cmp
fidivs
dec
mov
js
addr16
pusha
cltd
cmpsb
cmp
mov
fldl
jno
sub
push
fwait
add
lods
in
cmc
push
into
fidivl
aas
pop
imulb
fs
inc
mov
mov
popf
shrl
ret
xor
call
or
sahf
mov
or
or
cltd
xor
cmc
mov
inc
cmpsb
cmp
cld
mov
jmp
inc
sti
out
and
cmp
xchg
inc
aad
xorl
jno
aaa
stc
adc
sbb
mov
std
xchg
std
inc
fldenv
inc
sbb
insb
mov
out
mov
fcmovu
je
inc
add
pop
sahf
jns
leave
jge
mov
ljmp
add
mov
jo
in
test
inc
fxch
jl
cmp
adc
in
test
xor
out
dec
mov
sarb
add
in
imul
inc
jle
sbb
lret
cmc
mov
inc
ficoml
lahf
xor
mov
mov
add
fsts
enter
add
jg
test
lahf
clc
sbb
ljmp
lcall
lea
lods
fmuls
cltd
lcall
int3
jecxz
pop
out
mov
ret
fbstp
pop
je
mov
mov
dec
test
pop
cmc
xchg
repz
xor
sbbl
jne
pop
mov
xchg
sbb
rclb
pop
mov
add
jmp
or
xor
fidivs
out
jl
sbb
sbbl
clc
pop
cmc
and
jno
jg
inc
ficompl
mov
or
fs
jno
daa
xchg
lcall
sub
sbb
add
daa
xchg
inc
xchg
sub
mov
mov
shll
lea
shll
lods
inc
or
or
pop
loop
or
stos
cmp
arpl
pop
scas
std
xchg
xchg
sub
push
ds
call
je
popf
inc
jle
ja
xchg
sub
rorl
sub
pop
ret
pop
mov
fwait
subb
or
sub
adc
or
inc
testb
mov
mov
sub
ss
dec
shrl
dec
fs
jns
jmp
add
in
or
sub
dec
jle
push
in
mov
loopne
add
out
out
test
sbb
mov
fst
imul
arpl
cvttps2pi
sbbb
add
or
stos
mov
int3
jmp
mov
pop
and
push
cmp
jl
jbe
add
mov
cmc
call
stos
inc
inc
inc
cmp
ja
push
xchg
xchg
pop
in
lret
test
jecxz
stc
sbb
adc
cmp
ja
imul
mov
jae
loopne
shrl
or
jmp
push
push
mov
cmpsb
movsb
mov
xor
testb
movsb
sbb
dec
pop
das
mov
pushf
movsl
cmp
pusha
out
clc
dec
fsubs
add
pop
call
xchg
sbb
or
add
roll
lea
jp
add
mov
test
xor
mov
outsl
pop
mov
test
in
aam
adc
inc
inc
out
dec
inc
out
xchg
outsl
clc
int
outsl
mul
jecxz
or
adc
sbb
mov
roll
xchg
icebp
scas
cmp
aas
adc
mov
iret
into
pop
repnz
add
fbld
mov
ja
jge
pop
lahf
mov
test
scas
rcrl
pop
cltd
sub
rcrl
pop
push
xchg
jle
iret
outsl
into
mov
inc
cmc
and
in
mov
pop
je
je
sbb
leave
aam
mov
icebp
fstpl
or
insl
jg
adc
scas
nop
and
iret
hlt
test
push
ret
jo
ds
icebp
orl
fbstp
negb
loopne
push
mov
xor
stos
mov
jmp
push
loope
cmp
xor
cmp
rsm
mov
int
mov
mov
loopne
sub
xor
bound
test
imul
in
jno
in
cltd
sbb
pop
hlt
xorb
sub
mov
ret
cmp
add
dec
cmc
test
sbb
jmp
sub
pop
movsl
jge
jmp
adc
clc
jl
dec
mov
mov
shlb
sbb
int
mov
adc
dec
lea
mov
push
negb
mov
pop
jmp
mov
subl
test
push
sbb
ret
and
cli
adcb
cmpsb
iretw
sub
or
cmp
mov
bound
pop
lds
add
dec
stos
xor
loop
sub
mov
aad
cmp
lea
int3
add
dec
sbb
sub
xchg
gs
out
jmp
adc
icebp
stc
inc
inc
repnz
jno
dec
mov
add
jne
sbb
xor
dec
fstpl
sbb
or
dec
mov
add
pop
fisubl
shrl
bound
add
mov
cmp
sbb
arpl
adc
shlb
and
loopne
dec
mov
jb
js
mov
adc
and
jl,pn
aam
dec
lcall
mov
js
push
cmc
fdivl
je
cmpsb
dec
add
stc
lcall
dec
in
sub
sbb
ds
imull
adc
rcll
scas
inc
loop
jecxz
sbb
xor
shll
add
xchg
mov
cmp
pop
mov
mov
jecxz
inc
fldcw
iret
pusha
testl
and
stos
fdivl
cmpsb
std
cmpsl
ds
enter
push
mov
push
mov
shrl
neg
je
ret
hlt
dec
fwait
xor
dec
in
pushf
jns
into
push
pop
scas
and
xor
inc
cmp
pop
xchg
jno
sbb
es
jmp
lcall
and
xor
inc
flds
push
out
test
scas
adc
xchg
cmc
sub
adc
pop
notb
mov
push
adc
pop
sahf
or
in
pop
stos
lods
inc
fnstsw
popf
mov
jmp
inc
movsb
sbb
mov
ret
add
in
lods
and
and
int
pop
or
and
loop
popa
mov
pop
mov
insl
or
das
out
xchg
pushf
jo
push
mov
xchg
inc
xchg
jnp
mov
ja
stos
lcall
cli
mov
movsb
xchg
pop
sarl
sub
or
add
insb
inc
push
movsl
xchg
cmp
out
les
or
dec
dec
insl
mov
adc
lret
mov
add
es
inc
fsubrs
iret
dec
loop
out
fsubs
filds
or
icebp
stos
movsl
out
add
and
mov
repnz
mov
mov
popf
jg
dec
pop
lret
cltd
sub
sub
push
jae
dec
imul
sarb
test
jb
dec
and
mov
or
jg
fnsave
fwait
bound
dec
imul
aad
aas
cmpsb
or
mov
aam
stc
push
push
add
sahf
aad
add
fbld
mov
add
rcll
mov
fsubrs
filds
mov
push
testb
imul
mov
out
js
loopne
lcall
adc
dec
xchg
imul
icebp
mov
cli
out
xchg
adc
jle
ljmp
mov
ret
jle
and
stos
inc
cmp
mov
jne
adc
mov
adc
pop
pop
add
dec
ss
rcrl
or
mov
or
push
adc
aaa
stc
nop
imul
mov
ficoml
std
dec
cmpsb
cmpsl
dec
xor
jae
sub
in
outsl
mov
cltd
stos
dec
xor
out
adc
dec
loop
pop
inc
xchg
arpl
repnz
mov
push
jge
iret
inc
push
push
fistpl
inc
adc
sbb
xchg
xor
in
xchg
push
sub
mov
cmc
scas
mov
pop
notb
or
lock
in
stos
or
leave
mull
jle
push
fnstsw
jmp
add
aam
xlat
enter
sbbb
push
subl
ret
roll
cmp
je
mov
mov
push
or
iret
fxch
outsl
xor
aad
lret
es
inc
add
ret
pop
gs
push
shll
cmp
mov
std
lahf
aaa
int
in
pop
lret
and
adc
sub
nop
xchg
lret
je
std
aaa
cmpsl
cmp
inc
inc
ss
sub
loopne
mov
std
fsubrp
scas
mov
jne
popf
fdivs
int
loope
sub
and
push
cmpb
mov
iret
data16
adc
and
push
push
movsl
inc
jae
adc
iret
ss
imul
push
pop
js
hlt
test
ret
hlt
dec
xchg
sub
sahf
xor
bound
lods
popa
mov
dec
mull
push
sbb
testl
ds
push
call
add
xor
inc
fstl
pop
stc
nop
nop
push
push
ljmp
jg
clc
add
mov
in
pop
fnsave
mov
adc
jecxz
pop
aam
sbb
mov
push
jl
testl
mov
cli
xchg
adc
xor
mov
mov
jb
pop
out
mov
jp
int3
lds
mov
ss
leave
xchg
sub
xor
xchg
gs
mov
dec
ror
outsl
shr
adc
clc
ja
sbb
int
cmpb
pop
fstpl
or
es
xchg
pop
push
in
addl
xor
jne
lds
adc
add
xor
adc
xor
jp
cmp
inc
jns
in
imul
in
lret
std
popf
push
in
or
push
inc
fiadds
mov
adc
mov
pop
loop
cli
xchg
ss
nop
shlb
xor
adc
mov
in
les
jne
mov
mov
xchg
sub
lods
lcall
mov
add
or
nop
nop
push
mov
mov
or
fcomps
mov
pop
shrb
cld
push
lods
out
mov
pop
mov
pop
shrl
movsb
adc
push
push
pop
repnz
push
mov
scas
shrl
lods
push
or
repz
push
aam
mov
adc
roll
sti
xchg
sub
into
imul
inc
pop
xchg
cmp
rcrl
jae
push
out
inc
xor
ret
nop
sbb
ret
cmp
pop
out
cwtl
fdivs
pop
repz
mov
sub
xor
xor
outsb
add
shll
addr16
jmp
mov
lds
mov
or
push
ret
jp
mov
pop
repz
mulb
sti
xchg
fs
pushf
xor
xchg
push
mov
ljmp
cmp
fdivl
cmp
outsb
stos
cmpl
sbb
sbb
or
and
add
mov
inc
fidivs
fsincos
xchg
or
pushf
xor
xchg
mov
int
dec
jae
xchg
mov
adc
xchg
sub
jae
mov
xor
xchg
mov
mov
pop
hlt
inc
push
montmul
cmpsb
inc
outsl
cli
xchg
mov
lret
std
clc
push
movsl
ljmp
in
insl
fdivl
sbb
lahf
mov
sbbl
xor
mov
sbb
mov
sti
xchg
xor
add
pop
pushf
xor
cmp
fadds
outsl
push
jae
fdivl
jae
mov
adc
insb
add
sbb
lret
mov
imul
inc
pop
hlt
jb
stc
nop
add
push
xor
cltd
adc
or
shlb
pop
testb
jae
mov
mov
sbb
pop
hlt
jb
sbb
push
cmpb
push
ficomps
imul
push
imul
scas
imul
imul
pop
icebp
pop
adc
hlt
inc
imul
mov
lret
pop
hlt
sti
pushf
adc
inc
dec
pop
cmc
cmp
sub
xchg
lcall
xor
adc
je
pop
cmp
xchg
adc
int3
sbb
adc
sbb
hlt
rclb
mov
xchg
sbb
pop
hlt
les
popf
xor
adc
test
rcll
mov
inc
flds
fnstenv
aas
sbb
sbb
fcompl
hlt
daa
sbb
cli
xchg
xchg
fcompl
into
mov
in
cmpl
shlb
jge
xor
fdivl
insl
sub
pop
mov
fidivl
pop
sbb
add
mov
mov
mov
test
xchg
cmp
pop
cmc
fsts
xor
lods
cmp
fmulp
pushf
xor
clc
fdivl
add
jnp
je
fidivl
sahf
sbb
shrb
or
mov
mov
inc
pop
repz
mov
inc
xchg
sti
xchg
lds
pushf
xor
cld
fdivl
aaa
cmp
push
sbb
mov
fnstenv
fidivrs
adc
pop
repnz
sbb
imul
mov
lock
hlt
or
sub
push
dec
jb
hlt
mov
lret
cli
xchg
std
stc
gs
jmp
in
fnsave
cmp
lahf
push
addr16
nop
mov
jbe
fnstenv
add
xor
pop
push
mov
sub
jae
mov
arpl
iret
add
shrb
pop
clc
mov
pop
divb
mov
bound
hlt
sub
cwtl
push
mov
jns
stos
pop
out
fisttpl
push
jmp
repz
xchg
in
jo
mov
xorl
mov
xchg
fnstenv
repz
es
dec
pop
mov
mov
jnp
cwtl
mov
ficoms
fldl2t
or
stc
nop
insb
or
pop
jp
sahf
xor
push
cmp
add
fstpl
jne
lahf
movsb
cmp
jne
adc
rcrb
mov
mov
cli
sub
push
pop
stc
ret
ja
mulb
iret
clc
nop
add
push
popf
jno
sahf
ss
arpl
jns
jne
iret
movsl
xchg
inc
faddl
into
iret
data16
xor
sub
pop
cmp
xchg
movsl
scas
pop
icebp
pop
into
cwtl
das
add
pop
push
sub
pop
xchg
sbb
cmpsb
inc
push
popf
xor
pop
testb
fidivl
sub
pop
stos
inc
fcompl
cmpsb
cs
sub
movsl
sbbb
sub
jmp
test
rcrl
call
stos
in
sbb
push
popf
fildll
scas
lcall
inc
out
inc
fcmovnb
cmovs
aas
add
fbstp
jne
sbb
js
aad
dec
loope
std
sub
inc
test
jns
or
sarl
scas
jmp
lret
xor
inc
fcoml
aad
pop
in
lahf
ss
push
inc
fidivrl
cmp
addr16
push
insb
iret
data16
pop
ljmp
adc
call
inc
sbbb
cmc
or
and
fidivs
sbbb
push
and
nop
fdivr
paddq
outsl
daa
es
push
or
js
sub
insb
into
mov
sahf
bound
pop
out
pop
popa
testl
add
mov
pushl
lods
cmpsb
adc
jecxz
push
outsb
into
mov
leave
imul
sti
adc
cmpsb
inc
cli
push
movsl
in
jo
aas
mov
lret
aas
sti
jecxz
mov
adc
jo
adc
pusha
test
adc
mov
mov
mov
mov
insl
pop
out
popf
insb
iret
mov
xchg
push
sbb
inc
ret
fnstenv
imul
fwait
mov
lods
daa
mov
pusha
out
fidivl
push
data16
aas
imul
sbb
xlat
xchg
sub
sysexit
int3
inc
dec
rclb
push
ljmp
jno
in
cld
xchg
es
nop
daa
cmp
or
mov
int3
arpl
pop
data16
cmp
jmp
xor
or
ret
test
ret
scas
inc
adc
dec
loop
aaa
into
pushw
add
jmp
mov
fisttpll
mov
daa
cs
mov
js
inc
fidivs
arpl
add
or
sbb
jb
lahf
xor
iret
mov
cli
push
sbb
outsl
push
xor
mov
adc
unpcklps
leave
inc
sub
jb
push
ljmp
jno
ljmp
daa
cmp
pop
scas
inc
nop
jb
jmp
mov
arpl
les
testb
ss
xchg
sub
or
pushf
test
int
out
sti
inc
fsubrl
out
jmp
loopne
loop
je
or
rcll
sub
test
and
mov
mov
stc
int
sbbl
in
pushf
push
loope
cmp
inc
mov
pop
xlat
pushf
inc
fmul
push
call
add
rcrb
mov
and
and
lds
pop
repnz
xor
xchg
rol
xor
enter
xor
push
lea
mov
mov
mov
popa
clc
popa
push
inc
fadds
push
popf
mov
aam
cmp
out
xchg
popa
adc
js
mov
pop
es
sbb
cltd
das
and
iret
ja
pop
test
adc
add
clc
hlt
ret
aaa
into
mov
pop
sahf
dec
mov
lock
mov
or
aad
xor
or
mov
jmp
jbe
mov
icebp
mov
mov
xor
xchg
mov
xor
jno
lds
call
jnp
testb
sti
xchg
sub
inc
ss
sahf
push
aad
and
xchg
out
jo
fsubs
lret
adc
jns
sbb
outsb
aad
push
push
outsb
pop
cmc
pusha
xor
popa
arpl
push
mov
xchg
mov
rcrl
cmc
jp
shrl
mov
decb
out
xlat
adc
loope
mov
pusha
in
in
mov
mov
testb
and
or
jg
int
xor
pop
mov
aam
mov
fnstenv
push
cmp
js
jle
mov
int3
sbb
pusha
sbb
jle
arpl
xchg
xchg
leave
pusha
or
in
push
sbb
arpl
loope
xchg
fs
push
mov
rcrl
and
pop
arpl
pop
xchg
insl
cld
xchg
pop
mov
push
out
bound
push
popf
cmp
cmp
inc
fstp
fdivl
mul
js
add
imul
sbb
hlt
fwait
and
jns
pop
sbb
popa
clc
arpl
push
popf
mov
mov
sbb
mov
jae
jl
js
push
ret
pop
inc
enter
ja
sub
and
or
lds
dec
jecxz
lret
sti
ret
mov
push
popf
inc
and
mov
lret
sti
int
jnp
adc
jns
shlb
sbb
repz
xor
mov
mov
mov
pop
xor
pop
lock
clc
nop
pop
xor
dec
mov
sbb
imul
jne
or
fmull
cmpsl
loop
mov
shl
test
jecxz
dec
aam
and
fsts
mov
loope
stc
adc
mov
sarb
pushf
push
mov
in
insl
add
adc
add
inc
sub
out
push
pop
test
dec
jns
xchg
stos
fidivs
lds
cmp
int3
push
lahf
xlat
outsb
adc
push
inc
mov
aaa
lds
inc
insl
cmp
adc
push
dec
xchg
cmp
dec
testl
inc
pop
hlt
mov
push
lods
icebp
insb
ret
hlt
arpl
out
jo
pop
out
cmpsb
fsubrs
ds
sbb
mov
pop
sahf
mov
shlb
push
push
popf
and
insl
mov
fs
neg
testl
subb
lods
ret
repz
js
sub
cli
xchg
popf
lret
iret
loopne
or
out
lock
adc
xchg
test
pop
nop
jae
mov
lods
adc
aaa
jns
inc
push
cmpsl
ds
imul
mov
jle
add
jle
incl
pop
repz
jecxz
pop
scas
xlat
loop
pop
aad
mov
xor
fs
mov
fimuls
loopne
fnstcw
ja
and
dec
adc
sbb
push
dec
loope
xlat
adc
xlat
outsb
insl
inc
stos
inc
aaa
test
mov
push
jmp
loopne
sahf
adc
add
imul
es
xorl
mov
cmp
nop
adc
adc
addr16
insb
es
call
mov
add
sbb
xchg
adc
xchg
sub
rolb
les
leave
pusha
jmp
sbb
jle
sti
or
mov
rclb
scas
add
mov
pop
pop
add
test
shl
repz
hlt
sbb
dec
loop
xchg
aad
out
cbtw
add
push
loopne
cmp
push
push
out
xchg
stc
nop
xorb
push
and
push
jl
inc
push
pop
mov
js
shrb
mov
cwtl
pop
decb
das
mov
jg
xor
xchg
jg
aam
mov
sbb
ljmp
inc
xchg
dec
ffreep
mov
fbstp
inc
lds
dec
js
jnp
cld
xchg
movsl
xchg
montmul
cmpsb
les
test
and
adc
jp
sub
call
xchg
icebp
lock
push
and
lods
inc
out
or
xchg
lahf
ss
adc
cmp
rolb
out
adc
jg
roll
push
and
das
mov
jge
add
sbb
fbld
loope
sbb
dec
fbstp
or
jp
js
leave
push
and
loope
mov
nop
insb
add
cmp
filds
dec
out
jno
cmp
call
sbb
cmp
insl
cwtl
pusha
testl
pop
mov
push
add
sub
cmc
mov
js
xchg
stos
sbb
popf
and
fidivs
rclb
mov
stos
in
pop
ret
imul
adc
sbb
inc
imul
hlt
jecxz
call
cmp
into
gs
aad
mov
mov
sub
js
rolb
jne
stc
jae
sbb
into
xorl
sbb
and
fs
jg
mov
imul
sub
or
sahf
movsl
cmp
xor
outsb
add
mov
fcoms
cld
mov
out
and
mov
sbb
sub
fidivl
or
pop
icebp
mov
lret
lock
in
xorl
push
in
jmp
out
movsb
add
jnp
cmpsl
and
xchg
push
in
dec
mov
and
incb
pop
ss
jecxz
out
pusha
arpl
mov
leave
add
or
loopne
out
and
dec
push
fisubl
int3
adcb
fsubrs
in
loop
push
mov
mov
imul
inc
andl
mov
or
adc
stc
insb
and
mov
aam
cmp
mov
lret
mov
int
leave
mov
int
pop
mov
fbstp
lret
hlt
mov
data16
ljmp
cltd
xor
pop
movsl
cmp
push
sub
dec
mov
rcrl
out
xor
pop
sbbl
scas
mov
sub
sbb
lds
push
ljmp
jno
frstor
add
and
dec
shrl
inc
in
hlt
mov
jge
inc
ljmp
fdivr
adc
or
jle
outsb
inc
orl
mov
mov
mov
iret
aas
pop
mov
fimuls
mov
sub
pop
inc
addb
scas
mov
jno
xor
xchg
aas
adc
scas
jae
leave
xor
pop
sarb
aas
xlat
lret
pop
xor
insb
fdivp
sbb
pop
outsl
testb
mov
inc
push
sub
xchg
icebp
jmp
fwait
call
push
dec
das
sti
inc
mov
jg
cmp
les
xchg
xor
fwait
das
aam
push
je
mov
cld
add
pop
fistps
ds
sub
xchg
iret
mov
es
enter
dec
push
inc
mov
push
outsb
cmp
xor
out
jo
inc
add
cmp
xchg
pop
subb
cmpsb
nop
push
loop
lds
sbb
sub
icebp
imul
xchg
ljmp
or
add
bound
xchg
xchg
jl
fnstenv
xor
jecxz
and
xchg
ds
repz
mov
in
call
push
dec
aam
adc
out
pushf
add
jmp
ds
lret
inc
ret
aaa
shl
xor
jb
push
xor
rcrb
nop
xchg
and
negb
and
jmp
jp
aam
hlt
lahf
mov
loopne
add
adc
cmpsl
jno
mov
xchg
mov
fistpl
inc
xchg
add
mov
inc
xchg
enter
imul
out
jo
mov
jo,pt
nop
push
push
lods
cmp
xchg
arpl
ret
pop
lcall
aam
out
cmpsl
and
jl
lds
dec
in
nop
dec
jecxz
out
imul
jecxz
add
mov
push
mov
pop
sbb
leave
pusha
cld
cmp
inc
outsb
sbb
pop
shll
mov
ret
and
insl
xor
inc
fdivrl
loopne
cli
adc
aas
or
sbbl
pop
xchg
adc
aam
xor
mov
mov
and
insl
lods
popa
stos
inc
xchg
int
mov
mov
data16
cld
xchg
push
sahf
in
test
je
mov
icebp
or
clc
inc
sub
in
sbb
sbb
pop
std
or
mov
push
pop
aas
mov
xchg
mov
les
insl
inc
xchg
add
jle
sbbl
roll
scas
inc
and
mov
leave
ljmp
pop
cli
add
mov
dec
push
inc
flds
test
neg
rcrl
js
add
inc
cltd
test
addr16
cs
in
mov
dec
in
aas
rcl
xor
shll
hlt
inc
test
mov
jnp
xchg
fdiv
lea
mov
adc
pop
or
dec
scas
pop
insl
xchg
iret
shlb
mov
mov
and
test
test
cmpsb
push
xor
mov
sub
clc
test
pop
dec
jnp
pop
cltd
js
insb
xchg
cmpsb
mov
push
shlb
xchg
push
and
pop
xchg
sbb
xchg
lods
xchg
sbb
fisttps
and
mov
sub
inc
add
sarl
stc
andb
pop
scas
add
dec
scas
and
push
jbe
ljmp
jno
cli
jbe
cmpsb
cmpsl
sbb
stc
outsb
scas
inc
mov
ror
rep
push
sahf
adc
addb
pop
icebp
or
cmpsl
ds
mov
lds
inc
fnstsw
jecxz
ljmp
cltd
cmp
sbbb
pop
and
xor
ds
push
mov
hlt
xor
jnp
test
sti
xchg
sub
aad
pop
push
inc
xor
aas
enter
push
xchg
or
push
adc
sbb
pusha
sbb
stos
mov
daa
adc
xor
aad
pop
adc
jnp
lock
mov
jb
lret
sub
fistps
rcrb
cmpsl
xchg
ss
and
push
icebp
das
pop
fldt
add
pop
lcall
in
dec
mov
xchg
mov
xchg
mov
mov
mov
mov
xchg
and
iret
jne
data16
sub
lds
mov
ss
js
aaa
ds
lahf
xchg
movb
popa
jno
dec
stos
addr16
ret
sti
and
or
divb
sub
mov
push
jle
test
shlb
rcrb
add
mov
adc
fidivs
jnp
xor
shlb
mov
sub
bound
cmp
jle
in
xchg
aam
mov
sub
nop
dec
lcall
arpl
shll
call
sbb
xchg
movsw
cmp
call
or
out
adc
ja
pop
insb
add
mov
pop
in
aaa
into
sub
dec
push
in
jg
xchg
mov
fs
pop
lods
pop
scas
fisttpll
mov
test
cmp
jg
out
iret
out
or
cld
arpl
mov
jp
dec
ffree
ljmp
loop
xchg
clc
pop
push
ret
int
outsl
cmpsl
in
fldenv
cmpsl
push
loope
dec
mov
negl
dec
mov
out
xchg
mov
or
cs
cmp
mov
das
movsb
push
cmp
hlt
cld
call
enter
mov
fs
mov
insl
ficoms
mov
jae
jmp
fsubrl
adc
repnz
imulb
fmuls
cmc
sub
jns
cmp
mov
sbb
push
xchg
shlb
mov
push
bswap
je
lds
mov
loope
pop
xor
cmp
in
mov
ja
sbb
xchg
jge
imul
mov
and
test
sub
xchg
xchg
jno
inc
or
outsl
cmc
lahf
cld
rorl
mov
andl
in
pop
pop
jmp
scas
out
sub
mov
push
mov
xor
bound
sbb
fwait
arpl
adc
xchg
sub
dec
jno
jne
and
shlb
jl
dec
les
mov
mov
jecxz
jns
jno
stos
fcom
loopne
mov
sbb
inc
aam
add
pop
or
or
outsb
icebp
data16
ss
loopne
and
ret
sub
jg
hlt
insl
inc
cmp
mov
add
mov
and
in
sub
mov
or
in
imul
enter
orl
mov
or
jae
cwtl
adc
out
insl
sbb
repnz
int
call
nop
cmp
test
lcall
outsb
fisubrs
lock
mov
xlat
sti
aam
in
push
mov
mov
ljmp
cmc
pop
popa
repz
dec
jl
lahf
insl
outsb
pop
es
inc
xor
outsb
cli
mov
cld
cmpsl
daa
adc
test
mov
movhps
mov
push
fidivl
popa
es
movsb
push
sbbl
jmp
stos
ja
gs
adc
dec
scas
cs
and
push
cmc
pop
notl
xchg
xchg
adc
jbe
jne
aam
rcr
loop
ja
hlt
pushf
or
dec
add
dec
pop
call
repz
and
dec
xchg
out
cmp
push
repnz
ret
rcll
scas
inc
insl
jmp
repz
pop
sti
and
pop
imul
lcall
jnp
xchg
fldt
decl
sbb
in
dec
add
sarb
pushf
xchg
cwtl
cmp
rorb
out
add
cld
out
cltd
clc
or
test
cmp
loope
loop
out
lret
pop
ret
arpl
xchg
adc
ret
xchg
dec
outsl
jmp
into
fwait
aaa
cmp
fidivrs
adcb
daa
push
movsb
insl
add
xor
idivl
shll
xor
or
jg
lods
bound
enter
sub
in
cmp
out
jbe
pushf
in
jae
sub
xor
sbb
cltd
cmp
add
sbb
leave
mov
xchg
push
mov
xor
cmp
fsubrs
sub
sbb
ss
adc
pop
std
fimuls
pushf
out
add
cld
xor
out
mov
mov
xor
ficompl
mov
scas
imul
pop
inc
repnz
mov
movsl
insl
dec
push
test
mulb
xchg
sahf
inc
stc
cmpsl
sbb
mov
fiaddl
movsb
jnp
sahf
nop
in
adc
or
cmp
xor
sub
push
and
into
jmp
jp
insb
je
aad
ja
js
or
hlt
pop
mov
or
shlb
jge
sbb
push
iret
sbb
fsubs
mov
cwtl
jmp
lret
inc
repz
jmp
jo
dec
clc
loop
push
xchg
jle
jmp
divb
mov
cltd
andl
iret
stos
movsl
pop
or
cmp
xchg
xchg
test
cmpsl
xor
negl
jne
add
into
cmpsb
or
sbb
lds
sub
jecxz
stos
jg
dec
push
bts
ds
lea
cwtl
ds
dec
sbb
int3
std
xchg
pop
push
push
and
mov
mov
frstor
daa
push
stc
pusha
or
pop
fildl
jno
pop
add
arpl
pop
loop
cmp
nop
mov
sarl
lahf
aam
jne
xor
lods
int3
pop
out
jne
push
xor
sub
cmp
movsb
cltd
insl
repz
push
mov
out
add
lret
push
orb
mov
or
cltd
outsb
xor
mov
addr16
add
clc
lods
nop
je
sub
adcl
test
inc
hlt
mov
popf
or
dec
dec
and
in
fisttps
pop
rcrb
mov
jmp
sbb
jo
xchg
fstpl
mov
out
lods
fiadds
push
int
aaa
sub
mov
ret
ret
leave
gs
mov
mov
ds
and
xlat
scas
lahf
fstl
cmc
scas
popa
adc
scas
xor
inc
aaa
mov
in
stos
cmc
gs
scas
sub
addr16
enter
cli
xchg
cmp
into
fidivrl
mov
and
jg
jnp
mov
outsl
push
insl
cltd
adc
in
jb
int
mov
fidivl
js
pop
fldt
jnp
popf
xorb
insb
dec
xchg
push
mov
pop
mov
movsb
mov
jmp
sti
dec
icebp
and
rclb
sti
and
enter
or
mov
push
cmc
mov
lods
sbb
inc
dec
loopne
dec
inc
add
push
mov
inc
aaa
loopne
adc
lds
dec
pop
mov
lods
popf
xchg
sub
xchg
ja
les
nop
pop
mov
add
adc
mov
ret
bsr
stos
adc
xor
es
negl
loop
dec
xchg
adc
gs
ficoms
scas
jae
lret
inc
fdivrs
jp
fnsave
inc
popa
push
imul
mov
mov
cltd
idivb
ds
dec
aad
mov
mov
inc
lods
add
xchg
push
mov
mov
mov
push
cmp
orl
pop
icebp
rcrl
mov
js
and
and
cmp
xchg
ds
mov
aad
xchg
sub
inc
aas
jge
arpl
aaa
dec
push
mov
out
pop
cmp
xlat
aaa
imul
and
pop
enter
nop
xchg
in
mov
mov
lock
or
jne
iret
sub
xchg
sub
adcl
dec
jne
lds
iret
leavew
and
in
test
push
stos
cmp
mov
std
push
cmpsl
ds
loope
ficoms
jb
pop
movsb
xor
fs
testl
mov
mov
sub
aad
jle
je
minps
inc
sar
xchg
add
adc
cltd
xor
jbe
into
cmpsl
or
in
stc
pop
rcl
lcall
pop
mov
sbb
jl
sub
cmpsb
lock
insb
sub
push
xchg
call
out
cmp
mov
and
dec
dec
pop
std
js
xor
lods
push
popf
stc
fcmovnb
in
stos
push
lea
addb
cli
andl
or
mov
inc
lods
ljmp
popf
stc
cmp
adcl
js
jge
pop
test
xor
insl
xchg
push
call
shr
push
sbb
into
gs
lea
xor
stos
inc
ret
mov
adc
aaa
out
imul
fs
mov
and
add
inc
fsubs
mov
divb
sarl
add
es
xor
sti
xchg
push
jns
push
stos
jb
mov
int3
xlat
outsb
inc
aaa
into
cmc
pop
testb
jb
stos
mov
les
leave
cmc
mov
rolb
sbb
xor
outsb
aad
mov
ret
sti
dec
pop
aas
mov
lock
sub
mov
sbb
fs
sub
mov
das
pop
sbb
mov
cmp
sub
xor
repz
lock
adc
jecxz
lods
aam
pop
lock
cmc
mov
out
ret
pop
bound
xchg
sub
or
or
das
fidivl
mov
jmp
mov
push
jmp
aad
imul
call
rclb
dec
loop
hlt
testb
into
push
jmp
mov
ss
xor
movsb
mov
lahf
mov
dec
out
push
xchg
leave
das
hlt
mov
pusha
fdivr
xchg
sub
test
or
mov
movsb
cmp
ss
fisubs
enter
not
imul
cld
xchg
int
inc
flds
out
push
and
add
xorb
in
xchg
je
push
pop
mov
jbe
and
pop
pop
mov
int3
arpl
dec
mov
aas
mov
insb
add
mov
mov
test
xchg
clc
and
xchg
pop
sbb
cmpsl
mov
push
jmp
push
ret
adc
add
sbb
fcoml
jecxz
jnp
fwait
lods
fs
notl
xchg
sub
scas
inc
push
mov
mov
sbb
test
inc
and
int3
arpl
stc
nop
lods
push
cmp
inc
dec
shrl
addr16
pop
pop
adc
mov
imul
arpl
shrl
mov
icebp
and
scas
into
mov
pop
and
inc
and
cmp
jg
fnsave
add
mov
xchg
sub
mov
sub
andb
shll
mov
add
xchg
cmp
jnp
sub
jbe
rolb
sub
imul
sub
cmc
pusha
cltd
xor
dec
fwait
xor
and
sub
scas
inc
lods
add
orl
and
pop
loop
xor
mov
fnstenv
nop
sahf
xor
jp
xor
jl
mov
xchg
ss
sub
jl
roll
mov
mov
pop
leave
pusha
jnp
mov
push
cli
test
in
std
lds
push
push
mov
ret
and
adc
xor
insl
add
xor
push
add
sarb
jmp
test
xlat
out
xchg
fwait
xor
scas
aad
fstl
adc
pushf
mov
icebp
mov
and
cmp
outsl
push
mov
fdivl
into
movsl
or
loope
adc
je
or
adcl
push
jmp
icebp
test
daa
mov
fidivl
dec
push
movsl
ds
test
rcrb
jns
jnp
test
dec
push
aad
push
pop
scas
inc
pop
mov
hlt
sbb
sti
xchg
jecxz
pop
mov
mov
sub
jnp
cmpsb
loop
movsl
rorl
nop
xor
loopne
sub
das
js
sbb
cmp
out
xchg
lock
ror
mov
sub
out
aam
jge
xchg
mov
test
pop
testl
pop
or
sti
xchg
das
mov
cltd
xor
xor
jae
lcall
mov
aad
mov
pop
scas
enter
jp
inc
fcomp
adc
int
sti
xor
in
or
cwtl
aaa
or
repz
mov
push
movsl
mov
les
shlb
in
enter
push
jmp
push
jmp
in
sub
pusha
push
scas
inc
orb
je
sti
xchg
sub
xor
pop
scas
adc
add
lock
int3
popf
call
fisubrs
jno
lret
sbb
fnstenv
lock
pop
aam
mov
push
jp
test
mov
iret
push
ficomps
test
repnz
dec
adc
mov
xlat
outsb
or
popa
clc
popf
pop
xchg
xor
jo
jno
int
inc
sbb
scas
inc
push
jmp
sub
js
lahf
imul
gs
cld
movsb
mov
in
sbb
out
mov
shrl
pop
movsl
cmp
inc
push
in
xor
fdivl
push
xor
inc
ljmp
pop
mov
lret
push
insl
gs
insl
movsb
mov
repz
inc
xchg
sub
inc
fsubs
xor
sbb
mov
fstps
jb
ja
pop
test
fwait
pop
sub
mov
out
outsl
std
pop
repz
and
xchg
pushf
push
out
mov
push
sub
mov
cmp
mov
sbb
push
out
xor
push
popa
pusha
add
arpl
loop
fnsave
mov
icebp
test
aas
fidivrl
lods
lods
imul
into
gs
mov
loopne
xchg
shr
add
in
push
ljmp
cmp
xchg
cltd
adc
mov
popf
jecxz
in
mov
jmp
ficoms
adc
outsl
xchg
sub
es
push
ja
add
std
xchg
sbb
ret
pop
loope
dec
loope
xchg
jno
mov
arpl
and
lea
mov
pop
push
and
cli
pushw
movsl
push
mov
fstpt
inc
push
scas
inc
mov
push
popf
xor
push
call
jbe
mov
loopne
pop
lea
inc
testb
push
mov
add
imul
push
outsb
out
push
and
jle
and
addr16
mov
sbb
test
leave
cmp
pop
lock
pop
jecxz
dec
and
pop
pop
insl
cltd
xor
int
sbb
lret
adc
xor
cmpsl
lds
pop
mov
xchg
imul
xor
data16
mov
fdivp
mov
repz
in
rclb
or
out
cwtl
xchg
or
pop
sahf
pushf
jno
popf
xchg
mov
aam
push
push
inc
flds
or
push
xlat
loopne
push
ja
insb
imul
or
imul
mov
xor
push
and
inc
into
push
popf
repz
push
sub
cli
xchg
orl
outsl
push
xchg
sbb
mov
and
cltd
xor
inc
xor
aaa
xlat
or
dec
fldln2
test
insl
mov
pop
shl
mov
es
aam
push
adcb
and
lods
push
fs
xor
xor
push
test
out
mov
xor
jo
test
push
gs
insb
add
stos
mov
adc
cltd
xor
shrb
mov
orl
xor
cmpsb
jecxz
cmp
aad
fdivl
idivb
ror
roll
in
or
popa
cwtl
push
inc
ficoml
mov
lret
cs
mov
je
es
sbb
mov
mov
shl
fistpl
fwait
xor
dec
inc
fcoml
enter
inc
fmuls
mov
mov
sub
or
pusha
mov
jp
lds
lcall
mov
mov
and
mov
jns
rcrl
iret
insl
fisubs
fistps
lret
repz
aad
test
mov
je
fsubrl
ret
out
xchg
cs
hlt
pop
push
sbb
mov
sub
and
daa
stos
inc
cltd
fists
cmpsl
shrb
int3
arpl
push
jne
dec
in
lds
imul
mov
jns
insl
cwtl
cli
xchg
or
adc
das
dec
add
lret
pop
sahf
xor
xchg
fs
mov
sbb
gs
call
push
jmp
out
adc
adc
icebp
stc
pop
idiv
adc
shlb
enter
ret
jle
fcomps
pop
scas
stos
stc
enter
push
ljmp
and
mov
loope
arpl
xlat
mov
adc
sub
cmp
jle
fsubrl
imul
jne
mov
arpl
out
xchg
pop
mov
ret
clc
mov
xchg
out
xchg
ja
shrb
addl
bound
jg
push
jo
cmp
repnz
xchg
in
repz
xor
std
movsl
push
mov
lods
repz
pop
scas
outsl
mov
lock
jns
or
subb
cmp
imul
insl
aam
rorb
and
and
xchg
aad
mov
cmp
stc
mov
or
dec
andl
xchg
movsb
aad
mov
xchg
jp
loope
fwait
mov
imul
add
inc
fwait
movsb
bound
ret
jns
push
mov
push
push
fdivrl
cmpps
js
dec
sbb
jbe
imul
mov
jmp
cwtl
int3
cmp
pop
insb
in
pop
mov
mov
cmp
jge
int
fiaddl
ret
repnz
sbb
das
mov
or
fwait
cmp
sub
dec
dec
jo
or
mov
pop
dec
call
mov
dec
imul
int
sub
jl
lcall
xchg
pop
nop
jle
sub
dec
dec
lods
inc
pop
outsb
pop
xor
scas
inc
mov
in
push
testb
inc
sarl
add
inc
cmp
testl
in
loopne
xor
ficoml
fdivs
jecxz
mov
test
jo
data16
int3
xchg
xchg
add
cmp
addb
shll
mov
lret
bound
or
popf
xchg
sub
push
jmp
pusha
cmp
dec
loop
pop
stos
inc
mov
push
out
nop
xor
nop
cmpsl
lret
test
mov
cmpsl
pop
lock
pop
icebp
mov
cmpsl
sub
cmc
push
ljmp
test
shrl
imul
insl
and
cmp
jns
data16
sub
push
mov
aam
cmp
xlat
scas
stos
fnsave
aas
add
cld
xchg
jl
adc
and
inc
jmp
aam
jle
add
inc
fdivrs
fiadds
iret
stc
lds
outsl
push
pop
aad
push
pop
sub
xchg
jbe
mov
mov
jl
lcall
and
iret
test
mov
push
out
sahf
add
adc
xchg
cmp
xchg
out
adc
sahf
xor
orb
sub
gs
popf
addr16
pop
adc
insb
test
or
or
mov
jmp
push
scas
sbb
outsb
mov
fidivl
push
popa
pop
call
dec
out
cld
test
loope
pop
add
inc
mov
xor
jmp
pop
stos
pop
out
fdivrl
arpl
data16
push
out
test
or
jp
jge
outsb
mov
lods
inc
mov
or
dec
and
ss
pop
fdivl
push
clc
popl
add
mov
xchg
test
int3
inc
dec
xchg
sub
push
in
push
aad
rol
mov
shrl
push
xchg
jns,pn
jge
cli
sarl
ret
push
adc
lcall
test
cmpsl
jae,pt
or
push
xchg
loope
pop
cmp
mov
fwait
xor
leave
fidivl
sbb
or
cs
pusha
gs
xchg
popa
stc
nop
push
jle
jg
mov
imul
cld
cmp
out
pop
push
dec
cmp
lods
fldt
lret
xchg
leave
negl
pop
dec
das
inc
fcomps
rclb
icebp
fstps
adc
rol
sub
xor
mov
mov
lret
xor
or
cmp
fmuls
xchg
ljmp
scas
popf
leave
push
and
in
andl
mov
and
push
bound
imul
add
xorb
mov
inc
fstenv
add
jno
movsb
cmp
call
scas
int
dec
mov
sbb
lcall
addr16
test
fbstp
adc
rolb
pop
scas
fistps
jle
mov
mov
aad
mov
mov
clc
xchg
test
mov
sub
fldcw
or
int3
cmp
mov
pop
mov
sbb
inc
pop
and
out
test
jns
inc
outsl
jo
dec
addr16
xchg
cmp
pop
insl
add
push
sbb
push
mov
outsl
push
jne
sbb
xchg
lea
mov
push
pop
insb
aas
es
mov
loope
inc
lds
pop
out
dec
ret
fsubrs
rolb
in
aad
and
or
insl
cwtl
pop
sub
pop
mov
xor
scas
and
rcl
fnsave
inc
xlat
daa
sub
xchg
jge
inc
fistl
movaps
sbb
icebp
mov
repnz
mov
pop
icebp
push
sub
cltd
jge
es
and
popa
clc
in
out
test
adc
mov
dec
loop
shl
mov
xor
mov
adc
mov
shrb
adc
enter
cs
push
sbbl
mov
iret
xor
sbbl
aam
fsub
xchg
cmpb
jle
out
leave
and
cmpsl
push
in
das
leave
loope
in
push
and
insl
push
lahf
ss
mov
sbb
lret
ds
mov
mov
sbb
jle
bound
pop
cld
xchg
xchg
pop
mov
jle
movsb
cmp
cmpsb
iret
mov
addr16
fisttpl
and
das
fidivs
and
ss
sahf
int3
arpl
imul
aas
add
addr16
jo
xchg
xor
dec
mov
imul
sub
push
push
shlb
jno
dec
mov
out
xchg
sbb
mov
mov
rorl
push
push
clc
xchg
jae
int3
test
adc
test
push
call
pop
rorb
fidivrl
add
int
jle
xor
dec
in
push
in
andl
stos
mov
fsubl
out
ds
pop
sbb
int3
jns
loop
in
jb
pop
pushf
imul
push
mov
adcb
rcrl
mov
cmp
es
test
dec
rolb
ret
clc
dec
loop
jl
pop
jo
push
popf
add
push
in
sub
dec
in
aam
mov
jg
pop
pushf
imul
popa
loop
out
in
add
pop
xor
push
shlb
pop
test
and
pusha
shlb
out
mov
and
xchg
sub
push
and
cs
sbb
pop
add
fldt
or
jmp
lock
or
lds
cmpsl
or
lds
and
jp
cmp
test
sub
lcall
mov
or
xchg
movsb
jp
mov
ljmp
clc
cmpsl
jl
imul
cwtl
das
aad
rcrl
in
stc
outsb
lods
inc
pop
outsb
cmp
pop
push
in
jle
and
push
cld
mov
add
mov
les
loope
cli
xchg
sbb
push
lods
test
fs
push
or
out
shrl
jns
mov
cmpsb
xchg
cs
repz
inc
fdivrs
ficoms
test
loopne
push
jmp
add
fld
mov
fsub
aaa
into
mov
ret
xor
pop
push
xlat
outsb
subl
loope
movsb
in
adc
je
lods
negl
mov
xchg
xchg
sub
pop
or
xchg
lock
sub
fcmovnb
pop
or
shrl
and
into
xchg
pop
mov
dec
sub
push
sub
call
hlt
and
or
xchg
lcall
add
in
ja
dec
mov
test
iret
outsl
loope
lods
adc
andl
int3
mov
adc
mov
out
jge
jns
pop
xchg
mov
jne
test
rclb
jae
scas
jb
cmp
std
xchg
fadds
cmpsb
hlt
mov
cs
sub
int3
arpl
dec
sub
xchg
out
aaa
or
mov
dec
push
out
xchg
mov
mov
cmp
xchg
pop
inc
mov
loopne
arpl
push
fimuls
cmc
cmp
call
or
adc
idivl
and
dec
in
and
push
movsb
push
add
lcall
out
call
dec
ret
dec
jecxz
xchg
mov
std
ja
das
mov
add
mov
inc
imulb
pop
lret
sbbl
xorb
icebp
outsl
ret
cmp
mov
out
dec
dec
mov
loop
dec
ret
aaa
push
test
sbb
ds
hlt
mov
mov
scas
nopl
lods
call
call
imul
enter
ror
repnz
nop
ja
mov
cmp
shll
sub
lods
add
dec
adc
dec
pop
ja
in
test
xor
xchg
jp
mov
inc
push
pushw
adc
bound
push
inc
lods
inc
inc
aaa
out
ss
dec
mov
mov
test
icebp
scas
inc
and
push
dec
mov
and
push
roll
call
mov
jg
lods
jmp
notl
and
adc
cld
es
dec
lods
je
data16
xchg
inc
pop
scas
pusha
insl
push
arpl
jo
mov
xchg
jo
sti
shr
inc
cs
std
scas
adc
and
dec
dec
in
ljmp
inc
cmc
sub
in
jns
xchg
push
and
addb
dec
addr16
adc
pop
mov
add
push
mov
mov
aas
mov
jecxz
jo
xchg
mov
repnz
fidivl
cli
inc
mov
fcom
push
rcl
rclb
call
lret
cs
sub
push
mov
or
or
xchg
add
or
repz
adc
jbe
ss
ljmp
xor
mov
ja
cli
mov
mov
shll
jno
lret
sbb
push
leave
xchg
mov
jmp
push
sbb
cltd
cwtl
xchg
sub
jae
clc
inc
jp
jge
mov
inc
push
add
push
aam
aad
sub
pop
lea
push
jp
call
cli
adc
sbb
les
fucom
dec
add
pop
scas
cmp
repnz
adc
pop
mov
add
push
out
push
roll
xor
xchg
bound
dec
sahf
jge
cmp
ja
jns
fnstsw
outsb
cmp
xchg
cli
xchg
bound
js
jne
dec
mov
dec
pop
push
mov
insb
sub
push
mov
dec
out
xchg
es
cmp
dec
xchg
jbe
sbb
mov
push
mov
and
in
cmpsb
pop
mov
lock
jge
lock
mov
es
scas
inc
in
add
push
xchg
mov
adc
repz
hlt
push
sub
cmc
sub
addb
and
jns
mov
scas
dec
xchg
sub
and
cmp
and
xor
push
popf
mov
test
mov
and
sub
pop
outsl
lds
push
jmp
mov
push
adc
ficompl
aas
adc
fwait
push
inc
jmp
push
sbb
sahf
in
test
jle
pop
clc
xchg
mov
gs
mov
outsl
xchg
sub
push
adc
sbb
or
in
lcall
add
pop
lret
bound
or
scas
imul
adc
xchg
xchg
fstl
and
icebp
pop
sub
and
push
xor
dec
fnstenv
mov
add
inc
xlat
push
mov
flds
testl
or
arpl
pop
ret
jg
insl
xchg
sub
xor
or
xchg
push
jle
xor
sub
stc
xchg
js
pop
add
or
fldt
outsb
sub
jmp
xor
mov
jb
pop
in
test
add
in
test
cmp
jl
lock
and
mov
sbb
dec
out
in
jno
push
fs
lret
jnp
std
in
adc
in
dec
leave
rolb
xor
fidivrs
outsl
push
jbe
and
adc
inc
jmp
stos
inc
aaa
pop
dec
rclb
popa
xor
sub
js
mov
and
fwait
mov
arpl
gs
ficoms
sbb
xchg
push
mov
mov
nop
jae
xor
sbb
fwait
in
fcoms
in
test
fs
loop
jl
lds
adc
jae
cli
xor
sbbl
out
mov
dec
lret
adc
and
xchg
push
je
inc
test
insl
add
fstp
jae
stos
cwtl
das
fsubl
stc
repz
xor
cmp
lret
pop
cmp
pop
mov
inc
gs
hlt
loopne
sarl
test
loopne
aaa
sub
daa
aad
adc
dec
jb
or
insl
add
mov
sbb
gs
jns
and
int
jecxz
xlat
dec
sub
cmp
test
cmp
pop
mov
or
das
jb
es
jmp
and
mov
rcll
inc
shrl
movsl
or
pop
loope
or
rcrb
mov
add
mov
es
test
das
inc
add
pop
addr16
push
out
fimuls
xchg
les
dec
and
ja
sub
jns
leave
sbb
aad
or
imul
sub
xchg
sbb
fs
jl
push
test
inc
xchg
push
xchg
mov
or
pop
shll
aad
pop
cmp
ljmp
jno
cld
iret
test
sbb
es
jo
push
in
repz
in
push
jae
lcall
and
stos
jno
and
sub
ljmp
aam
aad
icebp
xchg
and
ficoml
dec
fs
iret
push
push
es
pop
jns
nop
int
repz
cwtl
cmp
sub
popf
cmp
jno
pop
dec
icebp
inc
imul
roll
mov
xchg
or
sbb
popa
clc
xor
cmp
cmp
das
popf
and
sub
pop
pop
mov
or
fnstsw
pop
push
push
mov
xorb
pop
push
xchg
jne,pn
mov
test
popf
xor
icebp
les
mov
push
pop
xchg
cmp
scas
call
fsub
sbb
add
xchg
aaa
push
mov
inc
cltd
xor
mov
push
js
sub
imul
ja
dec
mov
push
cmp
jns
les
imul
ret
add
popa
loopne
mov
lock
xchg
sub
mov
xor
mov
push
lahf
clc
movsl
sub
mul
cmpsb
jl
roll
xchg
adc
mov
int
xchg
sbb
dec
fldcw
xchg
xchg
sub
xor
mov
add
fistpl
gs
lcall
into
mov
test
xor
push
pop
dec
push
dec
and
mov
push
xor
jp
xchg
jecxz
aaa
sbb
mov
push
dec
mov
test
movb
je
mov
sbb
jbe
sahf
xlat
nop
mov
popl
push
in
and
ljmp
in
out
dec
mov
lds
leave
testb
jno
andb
lea
sahf
mov
push
sbb
aas
mov
icebp
push
mov
jb
push
xlat
xchg
sub
mov
mov
shrl
lret
inc
mov
add
imul
inc
add
loop
outsl
imul
pop
imul
outsb
pusha
test
adc
or
stos
mov
sbb
dec
mov
push
cmc
je
jbe
movsb
mov
jns
xchg
lret
sub
stos
xchg
mov
mov
sbb
nop
add
lret
outsl
movsb
mov
scas
inc
rolb
loope
das
jo
ss
cmp
sbb
mov
jae
repnz
xchg
and
mov
clc
scas
mov
cmp
das
lds
enter
ret
cmp
push
lock
push
lock
pop
scas
and
ret
mov
xchg
sbb
cmpsb
cmpsb
inc
fwait
outsl
dec
mov
and
rcl
add
movsl
sbb
xor
pop
outsl
and
es
jo
outsl
sbb
testb
or
into
add
scas
ret
xor
pop
outsb
add
sbb
ljmp
js
idiv
cmc
cmp
mov
in
and
inc
jae
js
adc
mov
xchg
push
xor
sbbb
add
leave
psllw
and
push
and
pop
xchg
or
xor
lods
inc
xor
push
out
pusha
push
fisubrs
lea
les
aas
stos
and
sahf
sub
mov
fnstsw
cmp
cmpb
inc
cwtl
shrb
cmc
testl
xorb
ss
mov
lret
adc
pop
mov
les
jecxz
cmp
mov
or
cmp
repnz
test
push
mov
fisubrl
sti
les
cmp
out
sbb
fsubrl
xor
ficoml
fistpl
loopne
shll
cmc
divl
mov
sarl
mov
enter
int3
pushf
jo
cmp
add
out
adc
popf
xor
inc
mov
popf
cli
pop
and
pop
cld
into
mov
std
aaa
mov
inc
sbb
lods
mov
xor
mov
les
testb
mov
adc
outsl
add
jne
dec
or
jns
pop
xchg
sub
mov
outsb
divl
lret
popa
add
or
test
ja
ret
mov
imul
mov
push
jae
leave
mov
addr16
sbb
mov
aam
out
invd
inc
scas
pusha
pop
jecxz
mov
xchg
sub
add
pushf
xor
stc
fdivl
insl
add
xchg
arpl
out
rolb
and
aaa
imul
pop
jbe
imul
jecxz
push
pop
mov
xor
cmp
cs
mov
or
lds
imul
pop
and
dec
fimull
loop
es
add
popf
repz
or
add
xor
cmp
cmp
call
mov
lret
aad
jle
push
int3
sbb
mov
je
xor
sub
jge
pop
push
dec
nop
pop
inc
cmc
je
push
jl
pusha
cmp
push
lahf
inc
jbe
inc
add
push
es
les
aam
push
mov
sub
rclb
dec
cmpsl
lahf
sarb
out
push
xchg
je
and
inc
inc
jns
push
jg
repz
pop
lods
incl
xchg
out
nop
mov
fs
xor
out
xor
popa
adc
dec
dec
xor
push
pop
cmp
in
in
sahf
inc
and
cli
lods
lret
xor
daa
mov
mov
lock
dec
ja
int3
rol
pusha
cmp
in
adc
sbb
hlt
rcrl
loope
pop
pushf
mov
testl
stc
data16
outsl
and
fcomip
aad
xchg
or
push
inc
xor
rol
sbb
gs
sbb
iret
daa
das
sbb
pusha
dec
push
push
std
inc
jg
jns
jne
inc
mov
sar
es
loopne
dec
mov
jle
sbb
cld
xchg
sub
jne
jno
pop
imul
in
inc
jle
mov
dec
loop
faddl
int3
stc
test
add
sub
js
sbb
test
mov
pop
dec
add
dec
dec
out
xchg
popf
cmpsb
xchg
xor
popa
sahf
scas
dec
mov
int3
fistpl
or
mov
sub
sahf
test
mov
ret
mov
mov
arpl
enter
push
push
or
icebp
push
idivb
xor
clc
sbb
sbb
lret
mov
add
add
push
or
lahf
adc
or
js
xchg
add
dec
cltd
sbb
popf
xchg
cmpsl
cld
cli
imul
in
dec
mov
dec
ret
push
pop
jecxz
cmp
inc
fdivl
call
and
add
pop
push
insb
inc
int3
dec
push
scas
pop
jo
adc
pop
cmpsl
xchg
dec
dec
adc
popa
pop
jb
pop
cmp
xchg
and
jmp
repz
test
cmpsl
adc
push
movsb
aad
std
xor
popf
mov
fucomi
enter
xchg
add
inc
sub
mov
pushf
mov
sbb
cmc
aad
daa
mov
xor
ret
js
outsb
add
outsb
adc
daa
push
popa
fidivl
test
test
cmp
xor
inc
ficoms
jge
or
jmp
ja
push
fcomip
rep
pop
test
push
xchg
sar
popl
add
stos
mov
push
or
jmp
sub
lret
int
loop
add
adc
out
jg
scas
inc
xor
rcl
cmpb
mov
aas
cmp
xor
mov
fistpl
out
clc
push
xchg
nop
into
push
loopne
add
jb
and
mov
sub
popa
lods
xlat
jae
lahf
jge
mov
lret
dec
in
dec
sbb
cmp
sbb
dec
loopne
lcall
or
or
or
jae
mov
push
fisubl
mov
mov
add
sub
jl
gs
jne
ss
insb
sbb
xor
outsl
mov
push
loope
cltd
cld
xchg
mov
pop
pop
mov
xchg
mov
sub
in
mov
adc
xchg
mov
je
mov
dec
out
testl
leave
mov
push
out
mov
push
jmp
enter
or
sbb
cs
mov
add
nop
aad
shll
mov
repnz
aam
xor
and
or
or
mov
pop
scas
mov
jmp
adc
mov
fsts
jmp
sbb
ret
imul
dec
and
subl
or
or
cmp
test
jmp
andl
cwtl
pop
cli
insl
mov
sub
andb
or
xor
test
inc
sub
scas
dec
popa
inc
fdivs
rcrl
cs
mov
popa
popa
stc
cmp
sar
rcll
mov
hlt
aam
fs
in
add
mov
es
fidivs
into
aam
cmp
lods
outsb
add
cmp
add
pusha
mov
fcoms
pop
sbb
frstor
mov
xchg
scas
cmc
jmp
jne
ret
loope
into
inc
popf
and
xchg
pop
sub
add
pop
shl
jnp
fnstcw
mov
cmp
xchg
inc
push
inc
jp
adc
adc
mov
insl
sub
pop
xor
mov
fsub
mov
xchg
push
sbbb
lret
aaa
add
and
or
add
xor
pop
xorl
call
push
les
int3
xchg
adc
xor
flds
fstpl
lcall
cwtl
sahf
adc
jo
imul
cwtl
imul
jge
push
out
bound
inc
inc
push
out
and
shlb
sub
mov
inc
inc
sbbl
mov
mov
idivl
aam
push
dec
cmp
je
out
sub
or
lcall
aas
sbb
xlat
push
lds
xor
pop
sub
cld
repz
push
adc
xor
mov
jbe
roll
pop
push
xchg
xchg
enter
inc
pop
testl
pop
and
and
mov
mov
iret
out
leave
xor
push
push
out
mov
test
mov
inc
fwait
call
das
sub
mov
mov
jo
in
add
push
ss
das
sarb
dec
sbb
add
leave
xor
pop
or
stos
xor
out
add
nop
ret
inc
insb
push
lcall
sub
jp
mov
mov
adc
mov
lock
dec
pop
ret
hlt
enter
repz
dec
cs
mov
pop
mov
pushf
xchg
lret
push
sbb
aas
ss
jg
or
mov
sbb
sub
sahf
scas
push
xlat
js
cmc
push
mov
dec
mov
cs
or
jecxz
imul
lods
inc
pop
out
jne
cwtl
les
inc
call
in
jecxz
fdivrs
cmp
jae
std
stos
cmp
add
xchg
jl
mov
jns
mov
sbb
cmpsb
scas
jl
cmp
mov
into
mov
mov
das
inc
lret
mov
ds
xchg
push
repnz
xor
xchg
pop
and
insb
inc
arpl
cmc
push
sbb
shlb
sub
mov
cli
xchg
mov
aaa
stos
into
shlb
clc
pop
push
mov
cmpsl
mov
stc
dec
or
sbb
stc
insb
cwtl
mov
mov
jno
push
shll
push
mov
jbe
in
mov
in
cltd
js
adc
add
pop
bnd
add
cmp
out
inc
xchg
inc
test
scas
jbe
clc
imul
push
cmp
xor
iret
and
xchg
pop
repnz
xchg
shl
dec
stos
out
aam
icebp
jmp
mov
les
and
shrl
pop
dec
mov
jg
fwait
insb
cmpsb
pusha
xchg
jo
cmc
movsb
cmp
outsl
xchg
sub
jmp
jmp
jmp
icebp
decl
jbe
pop
add
jns
jp
test
sbb
bound
fsts
mov
loopne
cmp
ljmp
or
mov
arpl
pop
dec
and
jo
pop
xor
xlat
fcom
outsl
in
push
pop
addr16
rclb
xor
in
push
insb
add
xor
jae
xchg
in
stos
inc
push
jmp
add
xchg
mov
mov
mov
push
adc
outsl
push
xorb
xchg
dec
mov
jns
mov
add
inc
xchg
pop
mov
push
mov
subl
imul
jg
fdivr
int3
cmp
add
xchg
movsl
fnsave
or
pop
pop
ret
repz
pushl
lock
jo
mov
lds
inc
fstpl
mov
add
aas
cli
pop
mov
popa
pop
lock
dec
cmp
push
in
pop
repnz
push
xchg
sub
and
dec
mov
jne,pn
shrb
xchg
mov
enter
jbe
sub
lods
cmp
imul
xchg
adc
lods
popa
enter
int
or
stos
and
in
test
inc
push
pop
outsb
xor
stos
inc
dec
xor
aam
add
sub
inc
pop
xchg
lods
lds
stos
jp
sti
aas
xchg
lahf
out
jle
cmp
or
add
cmc
push
or
xchg
mov
iret
cmp
jne
mov
push
fst
cmp
xchg
rcll
cmp
out
ja
shrl
bnd
xchg
and
data16
mov
imul
jbe
ret
fs
icebp
xchg
imul
inc
mov
xchg
in
sbb
lea
sub
push
mov
das
sbb
mov
sub
sbb
ds
or
dec
scas
pop
mov
hlt
fdivl
mov
lods
jp
out
sahf
shll
xor
jo
cmc
orl
in
adc
pop
iret
xchg
mov
sbb
push
repz
and
jno
adc
fwait
push
imul
shl
rcl
xsha1
cmpsb
or
mov
or
adcl
aaa
lret
int3
fdivp
mov
sub
jecxz
jnp
cmpsl
push
xlat
jb
jns
std
scas
push
andb
stos
jae
fwait
icebp
inc
leave
imul
gs
iret
loope
jle
inc
pop
xchg
sub
sbb
out
or
jnp
ret
xchg
mov
ja
fsubs
daa
fdivs
pusha
mov
dec
fwait
cmpsl
mov
jmp
inc
inc
popf
sub
cmp
rcrl
aas
movsl
call
or
cmp
push
mov
mov
cmp
gs
mov
lret
cld
push
lcallw
lock
stc
cmpsb
int3
jno
daa
cmp
dec
sbbl
add
sbb
lcall
mov
insl
adc
andb
out
gs
fimull
cli
out
cld
sarb
test
js
das
cmp
int3
into
pop
in
icebp
dec
mov
fcmove
fnstenv
fs
jle
push
es
or
lods
iret
pop
lahf
lds
cmpsl
mov
fldt
lds
mov
sbb
test
pop
sbb
hlt
xchg
popa
es
add
loope
sub
fdivrs
aad
sbb
fbstp
stc
sub
shll
lea
into
xchg
sahf
out
adc
popf
jg
shll
pop
bound
dec
mov
cmpsl
out
shrl
inc
sbbb
in
push
inc
out
inc
push
icebp
es
push
add
push
jae
and
inc
cmpsl
push
jno
xor
hlt
hlt
in
pushf
sbb
aas
and
repz
jmp
stos
or
cmp
les
insl
pop
stos
pop
mov
add
testb
sub
mov
insb
cmc
xchg
dec
cmp
hlt
ret
das
xchg
hlt
pop
enter
dec
data16
push
stos
fsubrs
jno
jle
cmc
sbb
loopne
xchg
in
push
jmp
mov
jo
out
sbb
pop
push
pop
sub
mov
lods
mov
sub
adc
sub
cmpsl
sbb
mov
jo
into
sub
inc
and
push
push
pop
lcall
and
ficompl
jg
cmc
sub
sub
xor
lock
data16
cwtl
xor
or
decb
cmpsb
sub
push
rcr
or
push
push
ret
pop
push
xor
mov
push
std
imul
inc
movsl
in
ret
mov
push
cwtl
cmc
xchg
push
lods
stos
inc
or
aaa
lret
jl
fmuls
dec
imulb
dec
dec
imul
sub
jbe
push
fs
mov
roll
dec
adc
push
push
out
mov
cli
jno
out
xchg
xchg
orl
inc
ja
adc
sbb
mov
fwait
mov
mov
mov
adc
mov
mov
data16
pop
insl
nop
lds
test
mov
cltd
xor
xchg
mov
pop
fdivr
pop
jno
imul
add
int
pop
sub
adcb
push
pop
mov
sub
xchg
sbb
pop
rorb
imul
dec
loop
or
pushf
push
xor
rclb
mov
mov
sahf
jae
shr
cmpsb
fisttpll
xchg
repz
sub
jo
ret
enter
mov
dec
pop
fstpl
pop
or
gs
sub
mov
cmp
rcrl
aas
rcrl
loopne
jns
sbb
add
jnp
test
je
push
ja
pushf
xchg
pop
ljmp
stos
ja
mov
sub
adc
xor
scas
fnstsw
jo
into
mov
adc
in
adcl
lds
in
push
dec
adc
xchg
data16
pop
adc
es
push
and
loop
mov
fcomps
aam
insb
lret
in
mov
lcall
cwtl
imul
jecxz
data16
outsl
jnp
aad
add
pop
ja
popa
mov
dec
fstps
or
int3
rcrb
test
out
out
adc
xor
aam
fucomi
and
and
mov
orl
cmp
sub
fwait
and
insb
mov
ret
pop
add
mov
inc
es
or
inc
dec
jg
repnz
cmp
sahf
pop
mov
lret
jl
adc
mov
xchg
add
adc
sub
inc
cmp
add
call
xchg
and
movsb
cmp
jns
repnz
cwtl
xchg
cwtl
lds
jae
icebp
xchg
shll
fwait
xchg
scas
int3
lods
inc
jbe
mov
lret
xchg
lret
leave
jmp
jecxz
and
lods
cmp
push
cmp
ret
hlt
insb
add
jne
loope
ret
jb
push
test
or
pop
adc
js
mov
pop
jp
test
xor
mov
jle
popf
or
cmp
fwait
insl
fdivrl
or
inc
popf
ss
dec
roll
mov
imul
mov
mov
jle
push
add
inc
pop
sbb
sub
cmp
and
les
insb
mov
jo
adc
pushw
jnp
je
xchg
ljmp
xor
iret
xchg
adc
das
push
icebp
mov
xchg
add
pop
popf
pop
xlat
dec
xor
aas
in
mov
es
loope
sahf
mov
add
adc
xchg
jns
mov
test
in
repnz
pop
sbb
pop
test
or
popa
ljmp
mov
nop
and
mov
gs
scas
sbb
push
ja
inc
out
std
sbb
movswl
dec
push
loope
gs
sub
je
hlt
push
sbb
jle,pn
push
gs
mov
mov
jmp
cltd
test
sbb
dec
and
daa
leave
xor
movlps
ret
scas
mov
or
pop
xor
and
arpl
jle
or
cli
mov
mov
mov
push
add
ljmp
inc
and
sbb
push
mov
aaa
or
add
dec
add
loop
cmp
jle
push
pop
arpl
fldcw
rclb
sbb
or
sbb
sub
stc
es
aaa
dec
push
cltd
cmp
insb
add
sub
js
push
push
mov
scas
int3
mov
cmp
push
xchg
mov
cmpsl
push
imul
push
dec
mov
je
push
mov
pop
push
loope
stos
es
sbb
shr
add
xchg
cmpsl
aaa
sub
arpl
stos
dec
inc
fnstcw
push
scas
aam
ficoml
dec
lock
xchg
xor
les
mov
inc
imul
pop
jne
adc
test
in
jg
js
je
adc
push
jp
mov
or
xorb
mov
mov
push
jmp
mov
or
push
popf
imul
adc
mov
sbb
inc
mov
mov
insb
mov
xor
int3
mov
scas
jnp
mov
sub
jo
jmp
int
pop
shrd
add
jae
dec
push
fidivs
outsb
sub
jmp
push
faddl
test
in
cltd
jecxz
adc
xor
test
mov
pushl
repz
sbb
pop
mov
inc
scas
repz
and
mov
cmpsb
insl
iret
loopne
and
test
or
in
ficompl
jne
sub
sub
scas
movsb
iret
in
jae
xor
inc
dec
adc
inc
and
mov
test
mov
jns
pop
icebp
sbb
out
xchg
inc
xchg
sub
lods
and
push
adc
cs
inc
pusha
or
pop
test
or
pop
ja
cmpsb
das
aam
xchg
mov
or
cmp
add
sarl
repnz
frstor
aas
mov
adc
pusha
test
sbb
mov
lea
dec
cmp
jae
shrl
js
gs
xchg
and
icebp
movb
push
fistps
xor
jge
test
cmp
out
dec
loopne
or
aas
cmp
scas
xchg
out
push
sahf
insb
lcall
mov
mov
fcmovnb
cs
lea
fisubrs
jae
pushl
scas
fcoml
scas
int3
inc
cmc
fs
cs
andl
xchg
insb
jp
mov
and
popl
rol
arpl
adc
lahf
aaa
fwait
xor
mov
dec
call
cwtl
dec
xor
incl
xchg
mov
inc
outsl
mov
mul
nop
sub
lahf
xchg
sub
sub
inc
outsb
dec
ret
add
into
push
loope
inc
out
adc
pushf
mov
push
lods
addl
sbb
divb
test
call
or
inc
sbb
gs
lock
or
jmp
or
push
sbb
mov
les
pop
push
sub
mov
ljmp
std
mov
stos
clc
mov
fimuls
lahf
mov
or
push
inc
xchg
test
test
sbb
pop
stos
iret
sub
lret
scas
and
ja
push
inc
jp
imul
lret
fucomp
jge
mov
mov
inc
xlat
out
sub
into
stos
adc
iret
inc
mov
cmc
and
cltd
push
add
outsb
rclb
adc
jns
mov
jle
test
mov
int3
fdivp
jecxz
jno
mov
push
mov
es
pop
loopne
xor
lahf
pop
roll
push
sbb
sub
aad
xor
sub
inc
sub
shlb
push
push
sti
out
cli
out
ficoml
sbbl
pop
jnp
push
inc
insb
imul
pop
mov
es
call
in
xchg
sahf
pop
mov
mov
mov
or
addr16
mov
jl
or
sbbl
movsl
cmp
loope
aad
test
adc
lcall
lcall
sbb
imul
lock
in
popf
and
sbb
inc
fstps
fwait
ss
ds
cltd
in
jne
lret
lahf
es
xor
lret
sti
push
xchg
adc
cs
call
mov
mov
insl
mov
test
xor
pop
imul
jnp
aaa
je
push
test
sbbl
sub
dec
out
pop
push
fidivrl
orps
fsubrp
pop
inc
push
in
jbe
jmp
push
cltd
bound
mov
inc
pop
inc
xchg
outsb
and
sbb
nop
push
and
test
fnstsw
in
int
xchg
push
mov
xor
push
mov
mov
popf
mul
mov
inc
inc
mov
fists
in
or
cmpsl
jecxz
je
aad
fsubrs
pop
movsb
outsl
or
aas
and
lea
ret
shll
sub
mov
lret
in
addr16
jb
mov
pop
jmp
mov
push
lock
cltd
mov
cmc
fsts
shll
lret
mov
iret
gs
test
sub
repnz
das
fs
xchg
xor
xchg
fldl2t
pushf
cmc
push
cld
adc
sub
sahf
ds
xor
addr16
imul
dec
cwtl
test
xchg
mov
push
or
addr16
sbb
push
cwtl
pop
dec
data16
out
sbb
cmp
pop
in
mov
mov
xchg
mov
pop
push
mov
sahf
in
adcb
cmp
notl
pop
jmp
xchg
js
stos
stos
and
arpl
fwait
ljmp
jmp
push
sbb
dec
inc
jp
sti
bound
dec
xlat
xchg
repz
jecxz
aad
lret
cld
xor
xor
push
out
leave
sbb
arpl
jo
sbbl
lret
sti
or
sar
imul
mov
mov
mov
xchg
mov
xchg
push
jne
dec
pusha
mov
mulb
mov
repnz
or
jnp
adc
lods
shl
add
cmp
negl
loope
push
sub
jle
push
loopne
or
in
lds
mov
in
lods
dec
inc
out
stc
sub
mov
out
imul
xchg
xlat
sbb
into
clc
add
imul
pop
fisttps
shlb
dec
pop
sahf
jge
mov
fisubs
adc
adc
stos
bound
adc
xor
dec
ficompl
add
scas
test
push
pop
and
ljmp
jno
aad
pusha
stc
enter
out
adcb
mov
pop
mov
push
jge
test
sub
lods
fwait
ret
push
insl
sub
loope
xor
mov
mov
clc
in
imul
sub
repnz
mov
aam
fstpl
bnd
mov
sbb
in
add
add
out
jmp
pop
dec
ljmp
mov
adc
lcall
cmp
pop
cmpsl
clc
dec
dec
fcmove
jecxz
cmp
adcl
mov
lfs
xchg
aad
adc
movsl
sbb
dec
lds
movsb
dec
loop
mov
lock
cmpsb
daa
cli
jnp
xchg
mov
dec
xor
out
inc
push
lods
mov
mov
jg
sbb
jnp
lahf
mov
test
or
pop
hlt
pop
push
out
mov
jne
jg
cmpsl
inc
inc
sub
outsl
jge
xor
lock
inc
mov
inc
lea
xchg
jp
push
jp
mov
jecxz
adc
mov
fistps
scas
adc
mov
push
cmc
ja
shrw
pop
mov
repz
sbb
add
int3
mov
xchg
leave
push
sbb
and
lods
inc
lea
sahf
jp
mov
dec
cmc
dec
mov
vmovq
dec
mov
push
es
pop
cmp
leave
pusha
out
popf
hlt
sub
adc
cmp
mov
mov
in
jecxz
dec
cmp
pop
mov
rclb
movsl
sbb
cmp
sbb
out
or
sub
mov
bnd
add
jnp
mov
jg
lret
pop
iret
data16
arpl
insb
in
test
cmp
std
clc
jne
pop
mov
rcrb
xor
push
dec
xchg
fisubl
pop
xchg
cld
xor
cmpsl
jg
sbbb
frstor
mov
and
jge
je
xchg
cmpsb
stos
std
sub
adc
inc
ss
cli
mov
mov
pusha
push
repz
add
pop
mov
vmulss
fcom
mov
push
loopne
pop
fistpl
sbb
lods
lahf
fidivs
scas
or
js
iret
fwait
xor
ja
fisubs
fiadds
outsb
test
aas
inc
add
pcmpeqw
lret
jb
insb
push
lods
jmp
stos
mov
sub
jae
pop
dec
inc
data16
push
mov
fcmovnu
jmp
aas
xlat
insl
in
cmp
leave
ljmp
pop
mov
cwtl
das
mov
les
js
movsl
mov
push
jle
leave
aas
dec
movd
adc
outsl
push
sub
pop
dec
sar
xchg
add
push
sbb
sbb
mov
mov
ljmp
out
xchg
push
icebp
ljmp
and
cs
inc
mov
or
das
lea
out
fsubl
push
lods
xor
adc
or
push
cltd
adc
push
aam
icebp
insb
addr16
aaa
and
arpl
fistpll
and
cmp
out
jns
jmp
mov
data16
sub
call
test
inc
cmpsl
ja,pt
into
test
loopne
dec
adc
in
std
inc
mov
jg
int3
mov
cmp
aam
xor
stos
mov
and
dec
mov
pushf
cmp
rol
push
adc
or
mov
push
xchg
fists
or
add
stos
xor
lods
pop
fbstp
out
aaa
je
popf
cmpsb
rorb
mov
cmpsb
testb
sub
std
push
lret
mov
cwtl
cli
ret
decl
inc
pop
mov
fstp
outsl
dec
popa
lods
fucomp
sahf
shl
add
and
xchg
lods
jnp
inc
sub
cmpsb
mov
add
adc
fistps
mov
popl
add
fnsave
jno
pop
mov
xchg
add
adc
sbb
shr
addb
out
or
and
ret
or
popf
xor
daa
add
daa
bound
or
mov
ret
pop
pop
cs
clc
jno
add
test
inc
push
in
pop
cmp
jg
pop
lea
fs
cmpsb
cmp
iret
je
pop
cmpsb
inc
dec
jae
loop
cmp
cmp
push
lds
out
adc
push
mov
popf
ficomps
and
xor
stos
insb
sbb
lea
sahf
sub
xlat
xor
insb
data16
mov
xchg
rorl
arpl
into
fsubrl
and
pop
sbb
outsb
cmp
dec
xchg
sahf
sti
and
pop
add
mov
fistpll
arpl
push
jne
mov
cld
push
hlt
sub
mov
dec
sbb
push
imul
lock
nop
xchg
inc
and
pand
mov
and
jge
adc
rolb
movsb
inc
sbbl
cli
jo
cmp
or
mov
ss
data16
lods
loopne
mov
mov
jns
sub
mov
pop
std
test
shlb
pushf
insb
mov
fmull
data16
sbb
rorl
dec
dec
addr16
lret
or
push
shrl
cld
jb
cs
jnp
loop
jecxz
or
lcall
push
call
mov
and
icebp
mov
adc
cmp
sbb
jg
ss
lahf
pop
sahf
adc
dec
loope
push
push
divb
sahf
push
leave
pop
jle
mov
aam
mov
jo
inc
xorl
lret
insl
std
mov
fcompl
js
pop
mov
frstor
add
mov
lcall
and
test
mov
inc
es
dec
push
mov
or
push
sbbb
clc
and
mov
shrb
mov
mov
fsts
fidivrs
cmpsb
cmp
pxor
lahf
mov
pusha
adcl
insl
pusha
or
cltd
xorl
sti
jge
repz
mov
or
and
jecxz
aad
rolb
adc
pop
sub
mov
sahf
lods
insl
xchg
enter
gs
sarl
imul
or
arpl
cmp
sti
data16
pop
testl
xchg
sti
adc
je
jmp
xchg
popf
leave
test
out
lock
cmp
ret
fs
sbbl
lret
stos
push
lret
pop
bnd
test
and
int
sbb
out
dec
mov
rcll
add
ret
in
push
ret
fidivrs
rorb
mov
push
mov
ljmp
or
in
enter
dec
shr
stos
push
cli
mov
mov
lds
adc
ret
jg
mov
lret
push
and
push
addr16
mov
mov
xor
out
push
fwait
mov
or
pop
pop
icebp
push
push
lcall
lcall
xchg
pop
lock
pop
les
sbb
pop
and
mov
push
mov
adcl
mov
mov
iret
inc
repz
jp
jp
jb
sar
inc
js
js
or
dec
push
outsb
mov
add
es
inc
mov
lret
pop
lods
mov
add
mov
push
xchg
psllw
jns
imul
inc
movl
sbb
sbb
js
bound
xchg
out
das
hlt
clc
mov
loope
fcomip
scas
push
mov
cmp
lea
xor
ficomps
jo
idiv
pop
pop
inc
enter
andb
arpl
pop
push
pop
sbb
jp
loope
xor
xchg
popa
dec
xchg
sbb
data16
push
aas
dec
stos
or
sahf
push
sbb
outsb
shlb
imul
mov
mov
add
stc
xor
loopne
adc
sahf
scas
jge
popf
lods
mov
rorl
sub
cli
inc
sti
addr16
fdivl
sbbl
pop
loopne
popf
xor
cmp
add
pop
push
mov
inc
mov
jnp
sbb
cwtl
fldl
push
and
insl
pop
adc
outsb
shll
cmp
add
jns
aaa
fwait
cmp
lds
loop
jnp
push
adc
pusha
dec
in
dec
enter
lock
push
movlps
js
mov
es
pop
jmp
repz
or
sbb
imul
fnsave
adc
lods
cwtl
daa
test
pusha
ss
scas
inc
add
jb
and
and
and
and
cli
xorb
pop
xchg
pop
and
xchg
push
add
or
sarb
push
aaa
mov
aaa
push
repz
add
xchg
pop
cmpsl
les
test
hlt
mov
ja
cmpsl
mov
scas
aaa
push
cs
xor
cmp
xchg
adc
dec
mov
imul
mov
aaa
pushl
xor
lods
subb
push
and
add
ret
or
shrl
ret
sub
out
cmp
fsubs
and
les
in
jge
cli
fsubrp
fcmovnu
loopne
and
ss
sti
adc
sbb
push
jmp
loopne
mov
mov
sub
lock
shlb
ljmp
cmp
push
mov
mov
mov
push
mov
add
mov
test
inc
cmp
ljmp
cmp
sub
dec
clc
sbbb
fimuls
push
mov
mov
imul
shrl
test
repnz
xchg
addr16
cmp
lea
inc
adc
dec
call
test
lea
push
stos
push
sahf
cs
dec
jg
lods
sub
dec
aad
stos
ljmp
out
std
pop
shrl
shll
push
movb
dec
pop
and
ljmp
ss
icebp
cmp
and
sub
jle
data16
mov
jbe
sbb
mov
dec
xor
push
jb
insl
lea
sarb
stos
jg
xor
and
lret
rorl
icebp
fcomps
arpl
rcrb
mov
test
sbb
ja
cmp
hlt
xchg
call
xlat
xor
jne
lea
push
andl
pop
and
sbbl
push
data16
mov
outsb
dec
fistps
mov
cmpsb
les
mov
jmp
pop
shr
addb
xchg
sub
je
cs
xchg
lods
mov
xchg
xchg
int3
push
fsubrp
hlt
mov
sub
aas
cmpsl
addl
insl
xchg
jns
call
cmp
outsb
lods
inc
rclb
xchg
sbb
add
inc
data16
lret
xchg
cmpsl
push
outsl
data16
insb
cmpsb
or
and
inc
cmc
jmp
fildll
rcl
mov
fwait
test
mov
stos
imul
mov
jg
imulb
je
sub
lahf
push
bound
nop
pop
and
or
fisttpl
inc
mov
jns
rorl
lcall
ljmp
repnz
sbb
xor
lret
popa
lds
fnstsw
mov
sbb
mov
pop
bound
mov
or
call
test
imul
jae
mov
ret
xchg
out
mov
mov
pop
cmc
pop
jg
cmp
lds
xchg
fisubl
inc
insl
cmp
lea
decb
sbb
fs
test
int3
out
jmp
aad
in
out
xor
xor
rcll
fucom
mov
mov
fiadds
adc
sahf
xor
xor
xchg
xor
leave
insb
adc
add
es
push
std
jge
dec
inc
pop
divb
mov
inc
adc
sbb
dec
sbb
pusha
stc
or
loop
mov
test
mov
push
cmp
xchg
jecxz
int3
gs
xor
sbb
test
inc
leave
pusha
jae
sbb
std
or
jae
gs
xchg
test
and
or
inc
push
adc
mov
inc
ffree
scas
xchg
sbb
sub
jg
push
or
leave
aad
cmp
xor
and
lea
mov
gs
jmp
dec
jo
add
mov
inc
sbb
and
adc
out
fiaddl
rcrl
pop
lret
lcall
pop
test
sbb
inc
pop
vpcmov
fnstsw
ljmp
jl
xor
ja
mov
out
push
pop
ficoms
xor
jl
sub
fwait
xchg
notb
test
notb
xor
das
stc
pusha
fadds
pushf
add
inc
cli
enter
aaa
lods
je
fldenv
xchg
divl
adc
or
fnsave
push
and
test
loope
sub
adc
lret
adc
xchg
aam
ret
cmp
ret
addr16
mov
inc
xchg
push
pushf
repz
mov
push
test
mulb
repz
int
dec
fldl
mov
in
rol
clc
sbb
pop
mov
loop
adc
les
jmp
mov
cmpsb
cmpsl
xchg
mov
xor
aas
inc
inc
inc
sub
dec
int3
lret
dec
mov
cmpsl
jle
or
out
imul
mov
aam
fabs
or
mov
cmp
jge
pop
cwtl
lods
or
out
mov
cmc
mov
negl
scas
inc
out
add
pusha
stos
pop
pop
mov
les
movups
mov
popa
cmpsb
je
mov
je
enter
mov
iret
jno
add
mov
sbb
mov
xchg
daa
pushf
fs
jmp
and
mov
inc
arpl
xor
lahf
push
sub
and
mov
popa
adc
lret
fsubs
jb
push
call
mov
das
iret
clc
arpl
mov
fs
pop
mov
rorl
ds
adc
or
loope
ds
iret
imull
inc
sub
or
cmp
mov
dec
cmp
jnp
call
fistps
xor
mov
mov
rclb
ss
fidivs
inc
and
insb
js
sahf
fwait
outsl
push
icebp
sti
or
jbe
sub
cmp
out
popf
sbb
out
sbb
imul
outsb
jmp
loop
movsb
jmp
in
cltd
lds
mov
add
xchg
cmp
xchg
lods
lea
insb
xlat
xchg
jmp
test
in
adcb
mov
testl
mov
add
xchg
lds
mov
lds
xor
dec
sahf
in
negb
mov
xchg
shlb
fs
cmpb
dec
cli
stc
scas
xor
xchg
mov
inc
mov
mov
icebp
shll
cmp
and
arpl
rcrb
ds
lret
pop
ljmp
pop
lock
ljmp
inc
adc
ja
dec
cmp
nop
cmp
test
pop
and
jo
xchg
jge
xor
lea
adc
incb
mov
ret
sub
mov
jne
push
lahf
movsb
mov
cmp
jnp
xor
push
adc
movsl
mov
inc
imul
adc
or
jmp
mov
shrb
mov
adc
mov
push
daa
xchg
jns
fmuls
pop
jp
enter
nop
sub
mov
adc
sub
mov
jbe
lahf
bound
fucompp
add
inc
dec
push
dec
jno
pop
adc
mov
repz
lret
mov
xchg
cltd
mov
adc
inc
or
ljmp
push
sub
dec
imul
jl
movsb
mov
movsb
clc
popf
xlat
adc
in
dec
aaa
sbb
cmpl
outsb
inc
pop
lcall
repnz
and
mov
sbb
inc
push
rcrb
push
pushf
sbb
repnz
mov
es
ds
repz
and
ret
not
sbb
sbb
pop
push
push
push
daa
mov
cmp
pop
pop
pop
dec
pop
les
cmp
icebp
add
arpl
jge
pushf
mov
and
mov
or
sbb
ss
cmp
imul
std
inc
mov
cltd
and
rclb
add
popf
ss
pop
mov
test
scas
enter
into
data16
sarl
loopne
mov
ror
xor
dec
sbb
jle
mov
lcall
pop
cmp
insl
add
push
ds
add
mov
push
sub
push
lret
lods
fsubs
ret
fs
mov
loop
loope
lcall
ss
out
xchg
repz
xor
mov
adc
enter
rcrb
lds
insl
mov
adc
add
cmp
mov
stos
pop
notl
test
sub
jno
add
int
sbb
test
cmpsb
xchg
pop
fdivrs
loop
pop
add
inc
lea
mov
shlb
pop
adc
ja
cmpl
adc
ds
mov
mov
cmc
push
movsl
xchg
add
inc
movb
andb
aam
sbb
jnp
mov
mov
adc
or
nop
out
inc
hlt
xchg
outsl
stos
sub
repnz
lock
stos
xchg
jecxz
mov
push
jge
pop
sub
outsl
inc
push
ljmp
pop
arpl
dec
fwait
imul
and
push
mov
in
shlb
adc
jne
nop
mov
addl
movsl
icebp
jae
mov
je
loope
adc
repnz
cld
iret
cli
lret
sti
sbb
push
and
adc
or
insb
xor
test
cmp
jge
pop
sbbl
mov
scas
mov
pop
xor
stos
jno
mov
fstl
push
jno
pushf
xchg
dec
shlb
and
addb
xchg
xor
les
push
rorl
lret
loop
std
mov
sbb
sub
pop
popa
and
xchg
scas
sub
out
cmpl
or
mov
add
lret
add
test
add
aaa
pop
les
test
pusha
xchg
je
les
adc
inc
sbb
sub
call
lret
adc
out
pop
xorl
dec
loop
and
imul
cmpl
inc
fidivl
cmp
lock
das
lods
out
add
scas
or
mov
xchg
sub
into
jge
jecxz
aaa
adc
sbbl
dec
adc
mov
cmc
dec
gs
rcr
dec
bound
mov
imul
push
sbbl
in
pop
jmp
or
xchg
mov
mov
mov
and
ljmp
outsl
add
in
push
rolb
stc
jle
jb
fcomps
aas
test
jl
outsl
dec
mov
lds
mov
mov
scas
int3
test
aad
mov
insb
sbb
jae
push
mov
add
adc
cmp
dec
fbstp
test
jmp
out
sbb
cmp
out
rolb
add
cld
hlt
or
fcompl
out
adc
mov
xchg
mov
xor
and
mov
test
mov
iret
arpl
lret
mov
cwtl
fdivrl
mov
insb
arpl
or
pusha
rcl
jb
int3
jecxz
mov
cmpsb
stos
imul
ja
jns
dec
loopne
inc
mov
ja
or
sbb
sarb
imul
jge
mov
out
aad
addr16
sar
stc
dec
mov
loopne
outsl
shr
fs
int
dec
dec
ficompl
cmp
mov
jle
out
scas
jbe
mov
and
aam
xor
jnp
and
das
clc
inc
inc
push
sbb
andb
mov
ficoms
loopne
test
sbb
push
xchg
outsl
jnp
mov
push
mov
cmpsl
inc
add
cmpb
lock
pop
stos
add
xor
icebp
lds
pop
mov
sbb
cmp
xor
sahf
mov
in
pusha
inc
jmp
cs
out
fsts
xlat
jnp
mov
inc
in
je
popf
int
daa
arpl
out
clc
jae
xor
cs
cmpsb
add
sbb
fld
mov
mov
cmp
je
pop
repz
dec
enter
sub
push
add
add
lcall
aas
pop
adc
push
shrl
ljmp
arpl
lea
out
mov
imul
xchg
aam
bnd
mov
and
sub
fdivrs
add
mov
mov
cmp
ljmp
aad
xor
test
loopne
pop
enter
mov
push
out
mov
repnz
repz
fmul
fidivl
rclb
test
cwtl
inc
xor
jmp
mov
lret
jmp
movsb
es
mov
stc
gs
jns
in
sub
pop
push
adc
push
mov
shll
vandnps
inc
aad
jns
fbld
sbb
ja
pop
and
cmp
test
mov
sahf
jbe
aad
mov
or
sub
cmp
ja
inc
incl
aas
sbb
pop
sbb
push
push
rcrl
insb
js
pop
adc
sub
repz
out
or
xchg
sub
shl
adc
sbb
cmp
and
push
loopne
das
adc
mov
add
xchg
dec
add
mov
aad
jo
adc
push
insb
testb
cltd
js
sbb
mov
pop
sub
or
sub
cmpb
cltd
mov
jae
mov
pop
hlt
add
in
clc
jle
mov
xor
pop
lea
repnz
loop
out
xchg
add
and
sbb
idivb
xchg
lret
mov
loopne
inc
dec
icebp
mov
arpl
inc
fstps
add
imul
ror
and
inc
adc
xchg
inc
fcompl
mov
cmp
sub
dec
push
jbe
out
push
or
out
in
sbb
sub
and
aaa
into
popa
std
lcall
mov
adc
adc
xlat
sbb
bound
outsb
in
data16
cmpsb
fsubrs
xchg
xchg
dec
or
pushf
aaa
inc
stos
and
fsubrl
cmpsl
jle
push
out
popa
dec
or
mov
loopne
xor
mov
mov
in
das
inc
sarb
mov
mov
fstpt
push
imul
jb
sbb
movsb
repnz
push
roll
fs
xor
xchg
bound
out
pop
jb
jno
jne
popf
into
gs
sahf
hlt
lahf
mov
adc
into
ret
shr
dec
push
daa
or
lcall
scas
xlat
mov
add
adc
xor
fwait
out
cmp
insl
cmc
xor
pop
push
push
sub
loop
scas
sub
push
sbb
ja
fnsave
jecxz
xor
inc
mov
inc
xchg
push
imulb
addr16
mov
es
test
popa
sbb
stos
cmpb
pop
jbe
mov
adc
add
punpcklbw
ja
mov
mov
sbb
jnp
push
and
es
inc
arpl
xor
xchg
sbb
jge
fcmovnu
and
sbb
xlat
push
pusha
pop
cmc
push
pusha
push
test
ljmp
add
fbstp
popa
fidivl
adc
cltd
adcl
xor
cmp
pusha
test
inc
cwtl
xor
rcrl
mov
mov
fwait
lret
sub
pop
ljmp
in
dec
xor
fcoml
and
pop
imul
adc
pop
push
call
cwtl
shrl
mov
incb
bnd
out
std
stc
jmp
push
adcl
in
jle
mov
dec
cli
or
pop
ss
mov
dec
cmp
jmp
testl
add
xor
adc
js
scas
ret
repnz
ror
and
mov
ja
ret
mov
hlt
outsl
std
adc
mov
test
cmpsb
out
mov
push
xchg
out
add
inc
cltd
xor
adc
rcrb
jns
lret
or
mov
loopne
xorb
call
mov
mov
int
and
lcall
sbb
sub
jmp
stc
push
dec
aad
repz
mov
faddl
or
push
dec
aam
sbb
test
movsb
xor
pushf
outsl
sub
cli
mov
idivb
jp
insb
push
adc
mov
outsb
jl
inc
aad
dec
dec
sbb
sbb
cmc
inc
pop
sahf
cmc
or
sbb
inc
popf
sub
mov
cmp
pusha
and
fdiv
adc
mov
ret
push
jcxz
xchg
cmp
loopne
les
popa
adc
scas
mov
mov
and
mov
jne
push
jo
fwait
das
sub
push
sbb
fistps
aad
add
mov
xchg
sti
rcl
cmp
imul
jg
push
xor
movb
cld
out
imul
call
inc
aas
inc
stos
push
and
aad
sub
rolb
xchg
fdivl
test
test
imul
int
inc
sub
and
cmpsl
es
mov
mov
push
mov
dec
dec
loop
jae
ljmp
jbe
fbstp
pop
sbb
in
test
pop
dec
fdivp
add
gs
push
cs
mov
inc
repz
mov
xchg
jns
cmpsl
add
pop
div
cld
sarb
sbb
add
lea
andb
xchg
inc
data16
jo
cmpsb
test
dec
sub
ljmp
call
jmp
push
sub
pushf
jb
sbb
and
push
lret
je
jae
or
test
rorb
sub
pop
outsb
sub
ret
pop
js
xor
call
dec
xchg
dec
repz
fimull
sub
and
scas
shrl
lcall
jno
loop
faddl
push
sbb
mov
inc
xchg
inc
nop
mov
pop
into
adc
jl
or
pop
jne
aam
push
call
notl
clc
mov
mov
test
xor
or
xchg
iret
mov
jle
pop
out
mov
xchg
inc
aas
xor
add
int3
rcrb
in
ror
je
sbb
das
jl
mov
inc
es
shr
daa
xchg
cwtl
mov
adc
or
inc
data16
push
out
and
shll
xor
clc
nop
or
sub
popa
fcomi
lods
int
mov
pushf
je
into
sub
push
add
nop
xlat
mov
mov
arpl
lcall
and
imul
cmp
pop
psubsw
scas
test
repnz
sbb
lahf
rorb
jb
call
cmp
imul
sub
leave
mov
lds
xor
sti
or
mov
mov
xor
mov
test
rcll
push
leave
fidivl
adcb
or
sub
aas
pop
or
jbe
mov
leave
dec
imull
mov
lret
xchg
sahf
mov
out
xchg
bound
dec
loop
xchg
sbb
sti
dec
inc
stos
dec
sbb
mov
hlt
popf
xor
mov
lahf
push
stos
inc
jb
lret
arpl
aam
push
repz
adc
push
and
movsl
dec
xchg
sub
dec
shrl
cltd
mov
mov
jge
mov
sbb
sub
je
dec
dec
xchg
lods
scas
mov
aad
cli
popf
icebp
pop
out
test
das
jmp
sbb
cmp
xor
xchg
xor
jmp
cltd
sub
aam
inc
insb
je
sbb
out
addr16
adc
jmp
or
mov
lret
add
ja
lock
sbb
andl
fdivr
fldcw
stc
loope
pop
out
push
pop
cmp
fnstenv
ds
out
push
pop
cmp
mov
pop
jmp
stos
mov
xor
in
mov
mov
add
and
dec
pop
push
pop
fwait
lea
repnz
and
mov
cmp
dec
pop
mov
mov
sub
cmp
insl
rclb
jnp
mov
add
mov
gs
adc
inc
fcmove
pop
sarb
call
or
movsl
iret
jl
lods
call
push
jnp
inc
lods
push
adc
sti
push
mov
in
pop
sbb
dec
test
cmp
dec
stos
xchg
fidivrl
cmc
int3
cmpsb
les
outsb
pop
in
adcb
jge
aas
cs
add
cmp
insl
jecxz
push
nop
ja
or
mov
testl
and
add
or
jnp
push
inc
inc
loope
add
jne
fwait
or
pop
push
mov
gs
inc
mov
jle
daa
movsb
dec
mov
ficoms
enter
pop
nop
insb
dec
in
dec
mov
sub
xor
mov
jl
addb
into
ret
pop
dec
xor
xor
in
out
and
shrl
cmp
addr16
ret
imul
jp
das
cmp
add
adc
sbb
lods
sbb
and
or
xor
adc
mov
ss
xor
arpl
push
std
xchg
cmc
pop
jo
fs
push
push
bound
cmp
insl
aaa
inc
scas
bound
js
test
fwait
xchg
div
sbbl
lds
mov
adc
or
push
icebp
int
loope
or
icebp
add
cmp
sub
sbb
imul
nop
and
std
push
cmc
fwait
jb
ret
outsl
add
bound
jmp
sbb
mov
xor
in
mov
int3
shrb
fistps
mov
pop
pusha
pushf
dec
or
ret
adc
jmp
cmp
xchg
mov
lahf
push
mov
out
mov
jno
mov
sbb
lcall
hlt
xchg
push
inc
inc
or
hlt
movsb
push
rolb
std
pop
sarl
sbb
out
outsb
lahf
stos
cwtl
add
clc
mov
or
sbb
arpl
sub
mov
int
mov
jecxz
lret
bound
sti
jmp
sbb
fldl
mov
aaa
push
gs
pop
aam
xchg
jne
lahf
loopne
push
push
sub
bnd
add
fmull
add
sub
int
mov
jecxz
test
mov
adc
xchg
sbb
dec
ljmp
push
mov
inc
notb
lea
lods
jnp
loopne
mov
xor
add
out
jns
adc
xchg
das
addb
or
je
adc
lret
mov
inc
adc
jae
mov
xor
test
or
testb
addr16
xlat
mov
shrb
add
jp
push
test
mov
incl
fdivp
and
es
mov
xchg
xor
js
mov
leave
sbb
and
call
pop
gs
jbe
xchg
cwtl
inc
fisttps
jmp
xchg
sbb
sbb
ljmp
subl
xchg
loope
add
insb
sahf
cs
lock
repnz
pop
scas
addb
int
push
mov
jg
rcll
sbb
xor
cmpsb
scas
out
ljmp
xchg
inc
in
adc
push
aas
push
add
mov
out
inc
jg
jns
add
mov
rcrb
push
bound
out
test
or
mov
jae
xchg
sub
push
mov
test
iret
fldcw
ficomps
mov
pop
sub
scas
mov
outsb
icebp
mov
test
stos
lock
pop
jg
sbb
adc
dec
lret
fcmovne
and
mov
test
add
or
mov
push
cli
xchg
xor
sahf
cmpsb
fnstsw
sub
js
pop
pop
orl
sub
jns
je
dec
insb
inc
add
fisttpl
ret
jae
jge
sub
xchg
popf
sub
cmp
fcomps
add
add
subb
xlat
cs
sub
mov
mov
clc
pop
pushf
pop
shl
mov
jp
lea
rolb
pop
imul
jge
adc
or
xchg
xor
jno
je
rol
lret
jnp
sbb
sbb
ret
movsl
mov
call
fdiv
jp
fnstenv
dec
out
mov
insl
imul
mov
push
decb
popa
pop
fcomps
push
fidivl
and
iret
bound
adc
mov
scas
xor
loopne
push
adcb
push
out
push
add
xchg
movsb
xchg
out
mov
jg
and
fimull
out
shrl
cmp
je
pop
movsb
mov
pushf
jg
mov
clc
popf
hlt
enter
mov
test
and
cmpsl
cmp
push
arpl
or
in
aaa
xchg
adc
pop
cmp
les
pop
negb
xor
out
xor
mov
or
imul
adc
sub
dec
adc
test
enter
jno
leave
int3
gs
add
in
mov
out
mov
stos
jmp
sub
pop
repz
int3
push
repz
sbb
xor
jb
xchg
decl
jle
or
sahf
xchg
adc
jmp
jg
adc
insb
movsb
xchg
push
jecxz
outsl
inc
orb
jge
cmpsl
ja
insb
sub
jge
jecxz
jge
jp
or
push
lar
cwtl
imul
fwait
inc
fcmove
testl
dec
sbb
or
dec
adc
jbe
dec
mov
cmpsb
dec
jne
jecxz
ljmp
popf
adc
cmp
mov
xchg
sub
cli
push
or
lret
adc
dec
inc
add
push
xor
sub
xor
aam
dec
pop
push
sbb
insl
repnz
bound
pop
in
adc
jg
ljmp
dec
int3
dec
loopne
fwait
in
jg
hlt
sbb
jl
sub
sbb
outsl
cld
jo
inc
cmovp
arpl
pop
jnp
ljmp
hlt
push
adc
idivb
std
popl
sub
pop
mov
mov
clc
mov
add
inc
fistpl
jae
popf
xchg
push
adc
cmp
adc
cs
fidivl
in
gs
pusha
clc
sahf
into
jne
dec
incb
scas
sub
rcrb
push
push
xor
rol
or
popa
clc
push
fs
lock
movsl
xchg
std
or
fstpl
and
add
push
rcrl
xchg
mov
hlt
sub
fiadds
jecxz
loopne
hlt
shrb
mov
imul
pop
push
out
shrl
out
insl
adc
ss
lahf
jmp
pop
je
cwtl
idivl
std
jb
rclb
testb
pop
cmp
jbe
imul
add
jg
pop
notl
push
lds
xor
loop
in
out
test
cmpl
movsb
push
jmp
aaa
sbb
cwtl
lods
pop
push
std
push
sbb
xchg
ss
mov
dec
jb
lfs
loop
xchg
adc
adc
dec
jnp
dec
cmpsb
aad
add
enter
jmp
sbb
das
lahf
mov
mov
and
add
push
cmpsl
push
adc
push
mov
iret
mov
mov
addr16
aad
fucomi
or
xchg
pop
sub
scas
xchg
fistps
or
sbbl
jne
pop
out
mov
xor
call
inc
inc
and
imul
xor
mov
fbld
fisubrl
shlb
mov
jo
cmp
add
lret
push
push
sub
fistps
jmp
or
xchg
call
xchg
lar
out
sbb
ficompl
movsl
mov
lds
stc
mov
xchg
xchg
pop
dec
inc
hlt
mov
or
cmp
sbb
ja
add
dec
movsl
pop
jle
lods
in
cmp
lahf
xor
fs
pop
ret
cltd
cmp
push
insb
leave
int
xlat
ds
loop
push
call
test
ds
in
test
repz
lea
sbb
sbb
mov
lock
jb
repz
adc
xor
das
adc
test
pop
movsb
or
arpl
jmp
fwait
ret
cmpb
addb
mov
sub
dec
rcll
lret
out
or
adc
outsl
adc
cmp
out
mov
push
add
cmpl
mov
cmp
pop
aad
enter
addr16
arpl
and
add
shlb
fcoms
or
xchg
xor
push
or
push
mov
pop
in
pop
shlb
cmp
mov
ss
jmp
lods
pop
jae
aas
in
xor
cs
sbb
cmp
jnp
jae
sbb
and
mov
jo
sub
negb
in
stos
fcmovne
mov
lock
lods
and
addr16
pop
popa
fidivrl
or
xchg
mov
dec
push
cli
jne
or
jg
jbe
dec
push
cmp
in
call
cmp
jg
xchg
mov
bound
cs
mov
loopne
xchg
pop
lods
jns
push
dec
and
addl
jno
hlt
adc
push
fsubs
push
aas
fdivr
fnstcw
sub
popf
loopne
int
push
add
pop
das
bnd
mov
flds
xchg
pop
int
adc
repz
xchg
adc
sub
dec
sub
stos
shlb
mov
dec
xor
and
lret
mov
jne
dec
pop
les
fiadds
aaa
shlb
and
ljmp
inc
int3
ds
mov
stos
dec
ljmp
call
ss
subb
adc
push
aas
adc
cmpb
mov
popa
xchg
xor
push
pop
cli
fiaddl
adc
xor
gs
xor
xchg
jno
adc
mov
bound
lret
pop
cmp
xor
adc
nopl
xlat
in
icebp
rclb
add
call
lret
fcomi
inc
xchg
fucom
inc
insb
mov
popf
bound
mov
mov
cltd
adc
push
xor
cmp
xchg
sbb
jb
rclb
lret
inc
scas
mov
jle
xor
jl
sbb
xchg
cltd
pushf
cli
cli
mov
mov
xchg
mov
rorb
xchg
mov
fistpl
mov
lret
cmp
push
mov
xchg
adc
popa
pop
sbb
movsb
lcall
sbb
pop
sahf
test
lret
scas
sub
mov
lret
dec
xor
stos
sbb
scas
mov
and
cmp
lret
lret
cmc
cmp
std
int3
out
xchg
add
xor
fxch
lahf
cmp
inc
fsubr
iret
idivb
cmp
mov
pop
es
gs
adc
and
cmp
mov
ja
movsb
addr16
loopne
imulb
jmp
sub
iret
cmpb
add
or
jge
fsubrl
jns
xor
jno
jle
mulb
push
mov
shll
movsb
push
inc
ret
sbb
bswap
mov
push
jae
in
push
cs
inc
adc
pop
adc
mov
or
mov
mov
pop
mov
sbb
mov
xor
sbb
scas
popf
fdivs
stos
fisubs
sbb
rcll
clc
xor
mov
idiv
pushf
fcoms
shr
cmc
jno
cmp
mov
dec
cmp
clc
mov
and
inc
jmp
or
cmp
cmp
or
int
push
lds
mov
push
jle
dec
sub
lea
out
sub
stos
or
or
push
out
adc
or
pop
clc
hlt
xor
sti
into
xchg
insl
or
scas
hlt
imul
or
repz
lods
mov
jb
negl
xchg
dec
dec
lds
mov
outsl
jbe
mov
mulb
mov
rol
in
jp
jle
mov
jae
arpl
outsb
add
pop
icebp
dec
in
mov
shlb
cmp
cmp
call
sti
std
or
fld
stc
nop
scas
pop
and
mov
lods
jo
mov
lret
sahf
or
push
mov
popa
out
stc
or
sub
imul
sbb
std
sbb
jne
cmp
popf
stos
mov
divl
or
or
es
xor
xchg
jb
movsb
pushfw
imul
test
or
or
int3
dec
scas
add
movsl
ja
loope
lds
scas
pop
outsl
loop
lock
and
les
sub
daa
mov
movl
leave
xor
pop
lret
cmpsb
lds
imul
xchg
jnp
pop
cltd
aam
adc
mov
popf
xor
testb
mov
sbb
mov
pop
mov
jmp
mov
clc
loope
pop
sbb
sbb
or
insl
outsb
or
push
mov
sbb
jl
sbb
daa
sub
mov
jmp
mov
pop
adc
push
jae
enter
jns
fisttpl
mov
orb
add
dec
pop
adc
lret
mov
repnz
mov
rcrl
mov
mov
cmp
mov
out
popa
or
xor
xchg
out
jnp
fdivrl
dec
pop
lods
sub
pop
mov
data16
fstp
and
xchg
out
imul
sbb
jle
add
push
test
pop
jl
nop
rclb
inc
insb
mov
mov
lea
push
in
mov
loope
xor
loope
outsb
push
lock
int3
fidivrs
in
jns
mov
push
or
fidivl
stc
jle
jge
pop
mov
xor
push
loope
dec
push
cmpsb
dec
cs
xor
xchg
fdivrs
adc
inc
fcompl
fists
adc
and
in
pop
sub
push
aam
sbb
dec
push
adc
and
sbb
mov
xor
gs
lea
pop
add
jne
int3
and
sub
testb
mov
xchg
adc
push
cmp
movsb
lea
das
adcl
mov
hlt
dec
xchg
cs
or
pop
or
in
pushf
fyl2x
sub
daa
into
cmp
xor
mov
mov
in
jns
mov
jnp
arpl
mov
nop
mov
int3
pop
jmp
stc
ret
sbb
pop
mov
mov
pop
pop
stos
mov
sbb
cwtl
inc
mov
scas
out
push
incb
sarb
push
add
push
xor
jg
push
mov
gs
pop
adc
das
lcall
sbb
mov
jbe
mov
dec
add
imul
jno
mov
int
xchg
ss
adc
sbb
rcrb
jae
inc
and
pop
and
ss
icebp
sub
cmp
xchg
xchg
adc
notb
imul
mov
xchg
inc
insb
loope
pop
fisttpl
dec
lcall
cmpsb
inc
push
loopne
sbb
cmp
jns
jge
jmp
es
outsl
cld
xchg
mov
jg
test
sti
mov
cmp
or
loop
jno
fcoms
push
js
jl
or
ss
pop
arpl
aaa
sti
scas
repz
push
lcall
jns
cld
lcall
adc
mov
lea
inc
add
fldcw
pop
mov
shlb
mov
adc
popa
aam
fs
dec
sub
in
scas
out
je
push
je
xchg
daa
push
mov
in
js
inc
dec
lds
aad
lods
rcrb
pop
adc
fidivl
or
dec
out
jb
mov
mov
xchg
jbe
mov
stos
push
ljmp
test
in
mov
movsl
ss
out
jns
sbbb
movsl
jns
idivb
inc
and
imul
inc
jg
repz
lds
or
ja
and
call
les
adc
bound
mov
sbb
cmp
sub
and
dec
dec
hlt
pop
jecxz
loop
sub
and
xchg
insl
push
stc
adc
jo
fdivs
aam
cmp
in
sbb
notb
fcoms
mov
and
ss
xor
pop
sahf
adc
push
inc
jl
adc
mov
outsl
push
scas
movsl
pushf
adc
add
ja
mov
rcrb
in
mov
push
inc
in
pushf
cmp
pop
mov
lret
out
int3
adc
fmull
pop
scas
mov
int
lds
dec
inc
add
mov
xlat
adc
jns
pop
lods
mov
sti
mov
mov
xor
movsb
cmp
mov
adc
inc
icebp
mov
lock
int3
push
out
jge
adc
jns
cld
mov
inc
push
mov
xor
lahf
popa
sub
iret
mov
ret
fwait
xorb
fcmovbe
test
fwait
test
pop
mov
pop
cmp
xchg
sub
js
mov
inc
adc
imulb
mov
aad
mov
xchg
or
dec
pop
fcoml
fidivrl
fnstsw
pop
ret
out
das
scas
cmp
lds
ficoms
push
adc
xor
stos
mov
sbb
iret
or
inc
flds
fld
xchg
xlat
mov
mov
dec
push
xor
cmc
imul
push
jmp
cli
and
inc
xorl
cmc
sub
call
mov
sbb
mov
mov
mov
arpl
xchg
fsts
test
sbb
and
inc
mov
mov
pop
mov
sub
enter
mov
imul
mov
jno
cld
xchg
adc
das
repnz
dec
pop
in
rol
icebp
jnp
cmpsb
inc
fcoms
orl
sbb
stc
pop
aas
cld
or
stc
xor
inc
movl
lcall
ret
jb
inc
stos
in
inc
jnp
call
fimull
add
test
inc
add
xor
pushf
in
test
cmp
fisubl
dec
into
push
ret
std
or
ret
out
pop
imul
jns
pop
and
add
mov
mov
mov
jle
pop
fadds
or
mov
clc
shll
dec
repnz
and
das
pop
into
fcoml
cmp
add
push
lock
push
das
adc
aad
pop
sub
sbb
mov
pop
dec
mov
dec
cmp
sub
repz
negl
cltd
gs
lods
pop
dec
iret
cltd
inc
add
lds
rcl
mov
pop
leave
call
cmp
jnp
sbb
mov
loopne
mov
mov
mov
pop
test
addr16
lods
mov
xor
jp
or
sahf
stos
nop
sub
add
jecxz
pushf
enter
add
lods
dec
xchg
test
xor
mov
inc
pop
xchg
rcrb
jb
pop
sub
repnz
ss
jecxz
std
push
or
ret
aas
mov
and
adc
inc
stc
pop
mov
mov
cmp
movsb
dec
xor
out
xor
in
rol
sub
or
mov
push
inc
push
imul
test
or
add
aaa
fildll
dec
cmp
pop
pop
sarl
sahf
repz
add
repnz
inc
fsubl
mov
in
stc
lret
xchg
sub
sub
fimuls
mov
cli
sbb
jbe
psubsb
in
shlb
dec
dec
ficoml
or
adc
add
xor
loopne
push
repnz
fwait
mov
inc
sbb
fadds
cwtl
movsb
add
lock
inc
and
xor
pusha
fnstcw
fimull
or
push
sub
jae
mov
popa
adc
andl
or
cmp
lret
les
testb
popa
inc
mov
sub
mov
and
shr
in
test
outsl
jnp
cmpsl
je
pop
cmp
mov
mov
pop
mov
add
into
mov
shrb
cltd
js
enter
xchg
jmp
pop
popf
ja
inc
pop
rcrl
xor
iret
xor
adc
movsb
jnp
clc
jge
dec
mov
movsl
gs
add
sbb
stos
sbb
hlt
push
add
push
xor
into
add
aas
loop
inc
jno
fiadds
dec
popa
xor
insb
js
push
mov
dec
shrl
pop
xlat
jmp
or
loope
mov
sub
and
mov
call
cmp
push
add
push
and
lods
sub
xrelease
sbb
xor
adc
pop
inc
mov
adc
push
ljmp
pushf
cmp
les
cmc
dec
rcll
and
adc
lret
cs
decb
cld
cltd
shr
insl
sbb
xor
sub
cmp
add
or
push
and
popa
arpl
sub
inc
stc
std
jl
inc
lret
pop
sbb
sub
cmp
mov
mov
xchg
je
cmp
jbe
in
aas
pop
dec
sbb
or
ror
out
push
mov
inc
sbb
divl
cmp
xchg
inc
sub
scas
fnstcw
sub
xor
cmpsb
outsb
push
sub
lret
sub
add
push
or
shl
je
push
stos
pop
xchg
lret
flds
insl
dec
andb
and
lret
fsubl
adc
clc
test
inc
data16
movsl
fistpll
add
pop
fisttps
inc
pminub
inc
and
xchg
jmp
orb
shrl
lahf
xchg
insb
into
xorl
mov
jb
int
pushf
fcompl
xor
cwtl
mov
dec
in
cmp
mov
inc
sub
je
push
inc
xlat
mov
add
cmpsb
inc
movsl
jg
adc
xor
fidivs
cmpsl
adc
scas
and
aam
xchg
daa
lret
xor
pushf
or
mov
jmp
cli
fiadds
xor
mov
aam
push
cmpsl
jecxz
pop
sbb
nop
push
mov
xlat
iret
xchg
nop
sub
inc
jl
mov
mov
xor
es
pop
stc
rorb
mov
adc
pop
inc
iret
jecxz
pop
in
xlat
popf
ret
call
std
xor
pop
jl
jbe
mov
in
push
cltd
and
xchg
add
ds
xchg
scas
jns
push
bound
int
inc
sub
fcoms
mov
test
arpl
dec
into
cmp
call
xor
or
xor
sub
dec
push
xor
out
lds
or
xchg
adc
insl
imul
push
scas
adcb
adc
lret
outsl
add
or
and
jle
scas
fadd
push
outsb
add
filds
fwait
mov
cld
push
scas
inc
test
leave
fnstcw
mov
jge
call
dec
and
aaa
mov
movsl
mov
sbbl
pop
sbb
in
movl
js
cwtl
repz
or
xchg
lret
mov
std
scas
sub
shll
orb
mov
inc
sub
dec
leave
pop
insb
leave
dec
dec
repz
pusha
sub
cmp
xorl
sbbl
sbbl
sets
push
rclb
in
out
pop
hlt
dec
xchg
xor
mov
bound
mov
xor
bound
mov
sub
inc
inc
test
pushf
push
jnp
xor
mov
outsl
add
lods
and
xchg
sub
pusha
inc
jns
adc
aaa
xchg
test
mov
stc
or
shl
jge
fisttps
int
lods
mov
sub
andl
xor
gs
xchg
sbb
cmpsb
cmp
js
xchg
shrb
pop
cmp
cmp
nop
xchg
sub
cltd
jmp
jb
xor
mov
push
add
push
hlt
xchg
adc
dec
movsl
ljmp
insb
jg
add
es
adcb
mov
and
arpl
mov
mov
lea
and
in
pusha
mov
out
add
mov
fidivl
cmp
add
repnz
pusha
jecxz
jne
rorl
test
fadd
and
push
or
pop
sbb
test
dec
push
add
cltd
dec
cli
pop
cmp
fdivrs
sub
iret
inc
and
xchg
jns
loope
xor
lds
popf
pop
lea
mov
jle
mov
and
pop
repz
cmp
jne
std
sub
int3
sahf
lcall
cwtl
cmp
pop
stos
insl
xor
add
inc
lds
or
jno
mov
mov
fwait
hlt
out
lea
clc
fsubl
dec
pop
dec
test
test
aas
hlt
fidivrl
stos
fidivrl
pop
mov
push
mov
in
xor
xchg
xlat
scas
add
call
cld
jo
jo
push
dec
adc
shlb
popf
movsb
cld
dec
je
push
cmp
loope
pop
mov
pop
xchg
dec
pop
iret
sbb
mov
xchg
xchg
xor
popa
or
add
and
lds
inc
dec
cwtl
rclb
cmp
lahf
inc
test
sbb
fmulp
aam
sub
and
inc
dec
jp
test
insl
cmp
mov
fsubp
push
jg
icebp
mov
nop
mov
scas
aas
adcl
xchg
pop
out
icebp
fists
int
fdivs
mov
mov
mov
or
rcrb
fldenv
xchg
dec
popa
imull
add
mov
xchg
mov
call
cld
cmp
test
sarl
jge
sbb
fnstenv
sub
pop
les
pop
mov
sub
fists
adc
add
stos
jmp
cmpsb
push
xchg
fwait
pop
sbb
adc
scas
lea
shll
pop
xchg
addb
pusha
pop
pop
sbb
nop
add
mov
mov
or
scas
xchg
mov
pop
out
mov
mov
loope
push
sti
xchg
jp
push
jnp
sbbb
mov
mov
pop
xor
jl
sbbl
aad
lods
jns
sahf
lcall
jg
jbe
jno
cwtl
sbb
push
dec
dec
jne
xchg
call
add
mov
pusha
inc
scas
out
mov
testl
ficoms
adc
mov
dec
mov
or
push
xchg
xor
xchg
jmp
pop
pop
scas
jns
xchg
scas
push
adc
lahf
enter
lods
jmp
in
outsb
mov
sbb
int3
ds
sub
sbb
jp
adc
nop
sarb
adc
fnsave
jo
out
cld
aam
enter
xor
movsl
icebp
test
and
mov
sub
push
out
jnp
loope
rol
stc
test
jo
sub
aam
scas
cs
cld
les
xchg
lcall
lret
adc
jo
pusha
addr16
jmp
hlt
je
stos
sbb
dec
dec
mulb
in
or
xchg
xor
sbb
aaa
push
jge
adc
fisubs
or
sub
pop
repz
mov
dec
les
mov
mov
pop
xchg
sbb
sar
sbbl
std
sbb
fs
cwtl
mov
xchg
cs
stc
nop
arpl
test
scas
jle
or
push
fildll
inc
add
fidivs
and
or
jg
dec
inc
xor
inc
fidivl
xchg
mov
and
sti
call
jmp
test
clc
sub
std
inc
inc
hlt
mov
rorb
loope
push
sbb
sbb
rol
lock
jle
xor
lds
mov
push
xor
or
es
sbb
sub
adc
imul
insb
icebp
pop
adc
xchg
adc
mov
inc
daa
mov
mov
mov
inc
push
push
shrb
mov
call
xchg
test
or
scas
test
add
adc
and
dec
xchg
movsl
icebp
popf
xor
bound
out
xchg
sub
xor
or
inc
subb
add
sub
lods
pop
and
sbb
dec
outsl
out
mov
ret
mov
loop
xor
roll
mov
lds
adc
filds
cltd
adc
dec
outsl
icebp
mov
jmp
iret
mov
mov
mov
int3
add
fnsave
cli
xchg
in
std
lds
mov
rorb
ja
loope
and
subl
and
es
or
mov
movsb
shlb
mov
sbb
jns
int3
jmp
push
or
sub
inc
pushf
xchg
movsb
push
adc
call
mov
xor
es
xchg
jge
imulb
rcrb
mov
mov
lods
lds
push
data16
int3
pop
fs
cmp
test
scas
and
int3
pop
scas
out
jbe
sub
sub
in
mov
js
std
jecxz
mov
mov
xchg
inc
fmul
icebp
pop
push
or
jg
pop
ljmp
push
in
arpl
mov
adc
cwtl
inc
jp
iret
test
mov
cmp
lock
mov
and
cmpsb
pop
out
mov
outsl
adc
jbe
ror
add
mov
mov
or
mov
mov
or
pop
cmp
xchg
adc
pop
and
loope
mov
adc
fisubl
gs
push
popf
test
inc
xchg
push
js
insb
add
test
mov
shrb
sbbl
mov
mov
adc
clc
gs
cmc
je
add
mov
das
mov
aad
leave
inc
inc
ret
hlt
inc
mov
add
lea
test
push
je
imul
pop
push
lret
push
movsl
jg
aad
mov
addr16
push
cltd
xor
or
jge
insb
add
sbb
das
mov
fbstp
rorl
iret
adc
mov
push
clc
stc
je
mov
nopl
dec
fbstp
aam
and
mov
pop
pop
mov
in
xor
loopne
pop
add
xor
rcl
sbb
push
daa
shll
sbb
ja
xor
dec
into
enter
call
dec
jo
addr16
push
leave
pusha
push
jmp
rdmsr
sbbl
fbstp
sub
mov
shrb
pushf
xor
mov
ret
xlat
mov
adc
adc
xor
mov
int3
inc
push
nop
or
and
ja
mov
testl
lods
pop
rcrb
push
out
arpl
pop
out
sbbl
das
mov
fsubrs
jmp
inc
xchg
je
or
cld
rcl
add
mov
pop
mov
fnstcw
mov
stc
sti
adc
mov
stos
cmpsb
out
call
sub
lret
into
inc
lcall
sbb
jae
or
xchg
nop
les
push
mov
shll
je
test
mov
jae
jecxz
repz
lods
aam
adc
cmc
ss
shrb
push
mov
in
lret
xlat
out
mov
pop
loope
mov
cli
jl
adc
pop
test
cltd
test
es
sub
jae
subb
fisubrs
jae
mov
dec
mov
lock
mov
adc
mov
stos
or
mov
ljmp
jmp
cmp
flds
xor
mov
test
jnp,pt
or
jle
push
mov
dec
mov
mov
imul
loope
mov
lods
dec
outsb
pop
imul
popf
sahf
pop
mov
sbb
and
sahf
pop
push
pop
dec
mov
out
and
dec
pop
fwait
pop
inc
fwait
add
sbb
mov
mov
movsl
mov
xchg
out
push
fcomps
push
pop
fwait
xor
scas
mov
pop
test
in
sbbl
ds
jecxz
aaa
sub
sbb
dec
mov
cmpsb
sbbb
cwtl
fwait
pushf
mov
test
setne
push
nop
push
mov
cmp
sbb
movsb
das
dec
fistpl
iret
stos
jmp
push
cs
aaa
adc
xchg
popa
xchg
das
pop
cmpsb
xor
fwait
movsb
dec
ljmp
cmp
sub
in
dec
daa
mov
xchg
ret
ret
mov
dec
inc
cld
inc
fmuls
add
sub
sti
pushf
dec
mov
push
jmp
xchg
add
fldenv
cmp
mov
xlat
inc
out
aad
push
sub
jg
fsubs
shlb
bound
xor
popa
sbbb
sub
push
jge
out
cmc
fbstp
repnz
mov
punpckhdq
pop
sbb
push
stos
fndisi(8087
sub
or
mov
mov
lahf
xlat
in
movsb
movsb
pushf
xor
popa
mov
jle
pop
inc
test
dec
cmpsl
xor
mov
out
dec
loopne
loope
outsb
sub
push
xor
mov
jne
mulb
sbb
loope
push
or
sub
or
xor
in
mov
out
out
clc
pop
jb
add
fwait
sbb
fstpt
dec
mov
shrb
shl
movsb
push
test
add
in
test
insl
xor
add
pop
jle
das
es
aas
sub
outsl
jge
fidivrs
out
dec
sbb
daa
jg
sub
inc
imul
mov
fadds
stc
ss
dec
sub
dec
sub
rcr
pop
scas
sbb
test
jae
inc
pop
enter
nop
std
mov
roll
xchg
sub
mov
je
or
jbe
sti
stos
imul
loop
add
pusha
sti
leave
mov
lods
jb
sbbl
mov
jno
lock
jne
adc
dec
adc
jns
mov
mov
test
pop
aaa
adc
push
sub
ret
dec
sub
push
mov
push
cwtl
xchg
mov
and
out
repz
mov
mov
add
cmp
cli
inc
ficoms
mov
mov
daa
xchg
cs
mov
int3
shlb
ss
icebp
sbb
dec
lods
push
mov
aam
and
fstpl
push
or
xor
sbb
sub
pop
xchg
dec
push
sub
test
dec
add
push
mov
push
scas
mov
clc
dec
pop
fcompl
or
out
out
mov
icebp
nop
mov
movsb
shlb
lods
out
cmp
push
xor
cmp
into
mov
mov
sub
jb
lea
jl
loopne
cwtl
cmp
push
sti
lcall
out
cmpsl
sbb
setnp
stos
out
ss
cmp
ljmp
in
mov
shrb
mov
fsubs
ja
xchg
add
xor
out
adc
pop
jmp
jb
mov
jne
jle
jne
outsl
sbb
fs
nop
xchg
push
out
jo
jnp
cmp
cmc
mov
add
add
adc
data16
in
mov
jp
jno
jnp
xor
cmp
jle
jnp
add
or
cmp
pop
imul
movb
sahf
mov
xchg
shrb
jmp
setbe
mov
xor
mov
xchg
ljmp
dec
pop
xchg
xchg
xchg
mov
lea
cld
mov
mov
sbb
fnstsw
fidivs
dec
sti
cmp
dec
test
mulb
test
int3
fcoml
mov
add
out
sbb
mov
shll
pop
cmp
into
repnz
addr16
and
inc
sub
add
cmp
rcll
fdivrl
jge
mov
jb
mov
xor
fldl
push
jnp
xor
imull
loope
fdivl
mov
orl
imul
xchg
ljmp
test
xchg
mov
ljmp
sbb
outsb
lret
out
mov
mov
mov
jb
jb
lods
ss
mov
push
push
out
or
inc
test
outsl
scas
jno
mov
cmp
outsb
xchg
test
pusha
test
loop
loope
dec
fadd
pop
loop
lods
pop
movsb
add
dec
xor
lods
movsl
call
lods
xchg
hlt
xchg
xchg
dec
mov
popa
or
loope
xchg
outsl
daa
cmc
mov
dec
data16
pop
sub
jbe
mov
iret
aad
inc
mov
cmp
int3
lock
mov
jno
xor
mov
hlt
cmp
cmp
push
xor
mov
inc
sbb
xor
mov
push
push
aam
leave
xorb
in
iret
pushf
fbstp
xor
pop
adc
jge
aad
mov
jb
orb
xchg
jbe
out
int
fcoms
lods
or
xor
push
jae
inc
pop
jb
cmp
incl
jmp
repnz
xchg
rcll
or
scas
ljmp
xchg
add
pop
ss
pop
adc
pop
out
push
in
mov
fsts
mov
push
mov
test
ret
shlb
add
lahf
xchg
pop
inc
pop
idivl
xchg
fs
jno
dec
mov
xchg
addr16
inc
shl
je
inc
scas
das
shll
and
and
add
add
sub
imul
repnz
mov
xchg
mov
fwait
sahf
stos
xchg
lods
into
arpl
lds
daa
cmpsb
shl
int
les
or
repz
mov
mov
lods
push
xor
shrb
adc
dec
pop
inc
mov
pop
xor
ret
test
jecxz
clc
cltd
minps
outsb
scas
arpl
mov
jno
pop
cmp
and
push
jb
mov
inc
cmpsb
je
pop
jg
xor
inc
test
adc
bndstx
mov
ret
and
popa
jnp
rcrb
jo
fisubs
sub
jp
mov
int
shlb
xchg
pop
in
pop
movb
fmuls
mov
mov
das
or
test
mov
cli
push
mov
dec
out
popa
fcomps
push
out
jle
cmp
sbb
inc
pop
test
cmp
adc
fcoml
insl
xchg
push
lahf
js
dec
stos
cmp
dec
dec
sub
dec
jecxz
int
pop
js
push
cli
lcall
arpl
pushf
xor
jge
xchg
push
inc
xor
jo
int3
inc
pushf
xor
adc
lea
jno
pop
in
nop
fistpll
push
les
and
mov
clc
sahf
inc
add
scas
mov
push
out
pop
push
daa
repnz
jg
mov
les
popf
jmp
andl
imul
out
nop
xchg
sbb
fwait
shll
push
and
out
lock
inc
cmpsb
pop
scas
xchg
mov
sbb
rcll
repnz
outsb
pop
adc
je
push
add
out
mov
and
adc
int
pop
fistps
jnp
les
testb
icebp
sbb
cmc
cmp
loope
cmp
clc
stos
les
lock
mov
gs
mov
aaa
cmp
sub
push
in
loopne
xor
mov
push
push
push
int
andb
in
pop
inc
mov
popa
xchg
out
scas
fwait
in
xchg
out
adc
sub
mov
inc
ret
nop
daa
repz
clc
les
dec
mov
insl
cmc
xor
xchg
add
aam
loope
inc
xchg
rorl
sbb
jns
cmc
repz
mov
in
insb
jmp
jmp
or
mov
push
sub
cld
stc
pop
xor
or
sbb
lret
fstpl
mov
jle
lds
fdivrs
or
add
inc
movsl
jp
lods
sub
jmp
lcall
jns
fldl
bound
fs
daa
dec
dec
fstpt
in
lret
push
mov
push
testb
dec
adc
jge
or
xchg
jp
push
mov
js
push
mov
rolb
add
pop
sub
lock
jae
mov
in
imul
mov
pop
mov
cwtl
sbb
cli
sbb
scas
jl
mov
xor
lods
push
scas
adcl
emms
in
mov
cld
cld
push
push
dec
mov
sbb
mov
pop
in
cltd
mov
pop
fldcw
jnp
loopne
or
sti
stos
inc
mov
fcmovb
ret
fidivl
lods
aad
push
dec
scas
jp
iret
mov
xchg
fidivrs
sbb
sub
into
mov
or
mov
push
xchg
push
mov
xlat
int
js
add
lock
ja
lds
gs
xchg
xor
inc
sub
xchg
ret
lret
cld
in
inc
mov
mov
push
mov
out
sub
inc
mov
lahf
or
fwait
sti
mov
fdivrl
mov
int3
arpl
jmp
cltd
cli
and
pop
push
daa
push
xchg
cmp
sbb
insl
push
mov
insl
jge
push
sbb
mov
pop
jbe
jle
xor
sbb
jns
sbb
in
push
mov
loopne
imul
mov
mov
mov
aas
outsb
cmc
pop
in
orl
nop
sbb
cmp
inc
out
imul
shr
jmp
sbb
dec
dec
stc
lahf
xchg
mov
or
inc
jp
push
cmpsl
xor
add
mov
mov
sub
ret
out
pop
sub
cltd
outsl
xchg
lods
xchg
arpl
adcl
xchg
rcll
sahf
pop
sub
pop
in
jb
loopne
and
stos
in
dec
push
inc
jno
mov
rcrl
push
xchg
addr16
movsb
call
sarb
insb
decb
into
sbb
inc
js
cltd
jo
pop
push
fcmovbe
and
push
pop
mov
or
rorl
in
pop
xchg
push
add
fdivr
jno
inc
or
cmp
mov
jb
cltd
xor
cmp
loopne
fcmovnbe
repz
pop
jns
dec
lds
xchg
dec
dec
inc
sbb
sbb
fdivp
sbb
cwtl
leave
dec
lock
pusha
movsb
cmp
mov
cmp
sbb
add
or
sub
je
pop
jle
aas
xor
push
xchg
cmp
xchg
das
xor
xlat
or
mov
outsl
inc
cmp
pop
xchg
loope
fwait
sub
int3
cmp
mov
ss
stos
xchg
pop
scas
mov
pop
clc
inc
notb
inc
lret
loop
notl
ffree
push
xchg
dec
push
mov
roll
ret
add
shrl
dec
pop
bound
pop
loope
lea
mov
and
and
mov
lcall
jne
lock
jl
adc
xchg
inc
dec
pusha
xor
jle
or
add
or
les
fucom
std
add
cli
xchg
pop
and
loopne
xor
and
push
out
adc
cli
idivl
daa
push
lods
outsl
fisttpl
mov
hlt
shlb
xchg
sub
mov
pop
mov
fistl
push
push
cs
daa
imul
out
lods
mov
and
cmp
movsb
pop
mov
testl
mov
and
fistps
mov
int
and
push
and
repz
cs
xor
cmc
rcrb
ret
pop
ds
lods
out
dec
mov
adc
mov
sub
shrl
push
adc
push
in
das
mov
rcrb
scas
loop
test
inc
and
sub
lret
dec
mov
mov
inc
scas
test
cli
fdivs
or
xchg
pop
fldenv
mov
jae
mov
jo
fcmovne
dec
sar
aas
dec
cs
mov
mov
repz
mov
jp
add
fsts
lds
mov
cs
mov
xchg
sub
dec
pminub
add
idivl
xchg
outsl
dec
loop
movsl
pop
in
lds
loop
and
mov
jecxz
jb
push
int3
push
push
mov
in
clc
and
fwait
bound
and
aaa
test
mov
adc
xchg
ret
cmp
add
pop
adc
daa
xor
insl
andb
add
push
addr16
mov
push
stc
adcl
adc
inc
outsl
push
js
add
pop
rcrb
jno
jg
mov
and
sbb
mov
rolb
inc
test
pop
mov
lock
pop
sub
pop
pushf
xchg
cwtl
in
out
repnz
clc
sub
xor
add
and
cmp
daa
lcall
mov
adc
jecxz
mov
xlat
xchg
and
clc
push
xor
xorl
push
ret
jne
dec
fwait
icebp
xor
push
popw
hlt
lea
inc
sub
pop
mov
cmpsl
popa
inc
fistl
mov
xor
fistl
pop
scas
stc
inc
push
cmp
dec
movsb
pop
jno
push
test
mov
cmpsl
out
fistpll
xchg
lods
es
jp
mov
dec
inc
xor
push
inc
push
inc
ficompl
lock
inc
xor
mov
xor
out
jl
jns
in
repnz
pop
dec
ljmp
dec
sar
ret
and
clc
push
lods
lods
cmc
into
les
pop
mov
inc
loop
fsubr
ds
divl
out
mov
jle
jae
out
lods
ror
adc
pop
dec
add
mov
fisttpl
sub
inc
dec
jno
jge
cmpsb
lock
bound
dec
mov
sbb
in
mov
push
mov
jne
scas
pop
sbb
mov
add
cmp
inc
test
in
push
test
sahf
dec
hlt
pusha
fndisi(8087
out
mov
sub
sub
stos
repz
scas
sbb
pop
shl
jno
mov
test
pminub
add
pop
call
sbb
sub
shll
dec
test
sbb
push
add
sbb
sbb
aam
xlat
lcall
in
mov
mov
test
xchg
sbb
pop
nop
daa
jns
cmp
sub
or
cltd
and
es
lods
inc
lcall
xor
test
pusha
stos
adc
push
jns
pop
pop
std
push
cmc
aaa
sbb
add
je
roll
outsb
sub
sub
jo
or
test
pushf
mov
bound
into
mov
sub
icebp
ss
arpl
je
or
push
stos
jg
aaa
mulb
cltd
test
jmp
jge
inc
xor
loopne
fimull
andl
push
fwait
sub
jo
out
push
outsb
sub
dec
clc
sbbl
xchg
pop
aam
cmp
cld
shll
cmc
insl
and
xchg
push
lea
fimull
cs
cmpsl
in
add
mov
jo
mov
mov
jg
lret
sti
adc
int3
pop
mov
add
sbb
aas
sub
je
test
dec
lret
imul
fcompl
mov
dec
in
aas
pop
cmp
fs
inc
xchg
popa
popa
lret
mov
outsb
leave
cmp
stos
mov
clc
repnz
frstor
dec
pop
adc
inc
dec
cmp
jmp
rorb
ss
sub
test
adc
outsl
cmp
std
or
sub
sub
fstp
fldenv
pop
iret
jb
shrl
pusha
jle
push
cmp
outsb
lds
pop
xchg
iret
push
or
rorb
pop
xchg
pop
aas
jbe
xor
push
idivl
inc
add
add
repz
and
pop
psllq
mov
xchg
shl
mov
sub
cmc
cmp
rep
int
mov
add
inc
in
enter
mov
test
pop
adc
inc
jmp
add
rcll
aad
jecxz
scas
aaa
into
outsb
add
test
lret
lret
or
xor
ret
iret
cld
mov
sbb
int3
ds
push
jl
pop
scas
cmovb
dec
fbld
xchg
imul
in
fsubs
sbb
inc
jb
outsb
movsl
pop
mov
inc
dec
cmc
mov
inc
add
mov
and
mov
ret
test
inc
dec
sub
add
sub
jb
xchg
sub
dec
in
into
pop
mov
insb
imul
pop
les
pop
push
and
movsb
rorb
adc
inc
loop
xor
cmpsl
enter
rolb
xchg
movl
and
push
mov
out
shlb
mov
cli
inc
jne
mov
sbb
inc
adc
mov
jge
push
popf
inc
pushw
out
out
fdiv
adc
test
outsb
mov
dec
dec
rol
dec
icebp
ja
movsb
gs
xchg
daa
jae
fyl2x
xor
nop
add
push
cli
add
scas
shr
stc
mov
mov
adc
repz
mulb
mov
jg
out
sub
jmp
daa
inc
sahf
and
push
xor
movsl
dec
test
xor
jp
out
je
in
pop
or
push
push
call
ljmp
xchg
jmp
xlat
jmp
xor
lcall
cmpsl
adc
ficompl
mov
adc
xor
js
cmp
push
mov
jnp
movsl
adc
loope
aam
fisttpll
push
and
add
mov
test
sbb
fwait
adc
and
rcr
aas
imul
add
loop
and
aad
lock
int
ss
xchg
out
sbb
push
ja
or
pop
or
lcall
in
mov
dec
loop
mov
jg
int
or
mov
dec
std
test
cmp
shll
popf
es
repz
jl
pushf
testl
adc
ss
mov
cmp
cmc
mov
je
mov
test
fs
mov
je
adc
std
xchg
nop
pop
xlat
lds
subb
pop
jmp
lcall
gs
push
outsb
mov
inc
pop
loop
adc
jle
cli
shlb
ret
mov
push
addr16
inc
mov
scas
dec
lahf
inc
fisttpl
imul
inc
or
incl
je
pushf
mov
jno
call
or
cltd
push
fwait
shr
insb
mov
das
inc
xor
outsb
add
inc
fiadds
int
sti
pop
sbb
inc
or
addb
pop
mov
or
popa
insl
les
insl
ret
push
cmc
sub
arpl
xor
pop
jbe
sti
push
repnz
iret
mov
call
xor
imul
push
pushf
or
mov
imul
push
insl
add
popa
lods
mov
out
add
jb
adc
inc
sub
call
imull
push
mov
push
out
push
mov
out
test
push
add
cli
mov
iret
mov
inc
mov
jge
xchg
scas
jp
adc
sbb
dec
xorb
outsl
outsb
stc
jl
mov
jno
jbe
fwait
xchg
das
mov
pop
cmp
xor
jp
inc
repz
mov
call
andl
mov
and
mov
scas
or
sbb
mov
scas
std
mov
test
adc
adc
ljmp
lods
adcb
mov
ror
ret
scas
mov
aad
xchg
nop
outsb
adc
std
inc
mov
fsubr
mov
mov
cmp
xchg
adc
into
std
shrl
rcrb
sbb
sub
repz
xor
gs
lock
mov
lret
test
jae
cltd
negb
out
aaa
mov
fisttpl
das
insl
in
dec
cmc
sub
fisubrl
add
stos
mov
pop
andb
push
push
lock
mov
out
call
mov
xor
lret
popa
push
adc
shrl
push
adc
and
sub
fmuls
orb
rcr
jno
orl
pop
inc
pop
cmp
ficoml
fcomps
mov
lods
bound
xchg
push
lods
cmp
mov
pop
scas
cmpb
jne
mov
jns
arpl
mov
or
add
fists
inc
xchg
cmp
push
or
jne
shr
jl
mov
mov
mov
aad
inc
cltd
outsl
ds
cwtl
out
inc
and
sbb
insb
cmp
andl
dec
imul
jl
jne
xor
jne
xor
ljmp
dec
add
repnz
sub
mov
loope
lcall
ja
push
adc
imul
mov
inc
addr16
cmp
inc
pop
shr
jp
pop
xchg
add
shrb
mov
outsb
loope
push
out
cmp
dec
xchg
push
popf
arpl
mov
mov
aas
bound
test
or
jg
adc
shlb
and
add
rolb
xchg
mov
and
sti
popa
sahf
popa
push
xchg
pushf
and
mov
sub
push
pop
push
cmp
inc
ds
sti
jge
push
frstor
idivl
xor
cld
pop
fistpll
jno
insb
and
es
iret
adc
ljmp
fmull
or
jge
jo
and
dec
stc
or
fcomps
fistps
int3
fistps
xlat
popa
add
xor
mov
test
mov
or
iret
mov
ss
jg
sbb
inc
in
mov
insb
les
mov
dec
adc
ja
in
xor
push
mov
push
sub
xchg
dec
push
addl
cmpsl
and
sbb
es
cmp
xlat
push
ljmp
and
jle
loopne
mov
adc
sbbl
pop
test
mov
push
scas
call
cmp
mov
aam
push
pop
and
sub
mov
adc
les
adc
leave
push
lret
sahf
jmp
sbb
sarl
mov
or
lods
add
enter
inc
push
xchg
inc
ret
or
xor
mov
bound
movsb
sbb
dec
es
dec
cmp
cli
cmp
clc
fimuls
iret
sbb
insl
cwtl
inc
mov
add
dec
mov
call
jmp
sbb
aam
fstpl
dec
int3
sub
icebp
push
aam
dec
dec
inc
into
xor
inc
lcall
into
roll
and
mov
loop
pop
adc
inc
cltd
iret
imul
pop
and
lea
mov
ret
shlb
jg
lds
ficomps
pop
lds
pusha
into
push
mov
ficomps
subl
prefetchwt1
push
out
mov
mov
jbe
mov
inc
int
std
nop
adc
push
out
loopne
lods
mov
pusha
repz
dec
rolb
or
call
enter
xor
push
test
test
mull
sub
jns
dec
mov
sar
mov
inc
jno
lds
lds
inc
jge
test
cltd
pusha
mov
stc
cmpb
je
pusha
xchg
xchg
add
mov
jbe
loopne
jmp
pop
mov
int3
outsb
imul
andl
xchg
add
add
out
sbb
jge
cld
inc
lock
fbstp
lahf
xlat
push
leave
outsl
cmp
push
sbb
mov
sub
lds
mov
lock
mov
dec
jg
subl
xlat
push
xor
cs
pop
js
adc
cmovae
fmulp
push
push
dec
ret
sub
and
dec
pop
pop
pop
cmp
push
gs
dec
sahf
xorb
in
sub
and
rclb
mov
popf
scas
or
jae
inc
jge
or
mov
test
fchs
pop
fistpll
fsubs
in
out
xor
std
sbb
jp
jg
in
jb
les
add
test
add
mov
ffree
mov
push
dec
and
call
xchg
setnp
pushw
mov
stos
lcall
mov
mov
andb
sbb
jp
and
or
outsb
sahf
dec
lock
pop
sbb
mov
dec
test
imul
mov
ja
sub
push
sbb
dec
loop
ds
fisubrs
addb
jae
insl
xchg
mov
mov
shrb
lods
scas
jb
or
pop
sbb
leave
ds
and
jmp
clc
dec
jmp
mov
popa
popf
ffreep
mov
mov
adcb
lock
out
push
sub
lahf
iret
cld
cmp
push
push
pop
cmp
es
aas
dec
ljmp
int
xchg
data16
mov
outsl
movsb
arpl
sub
or
adc
mov
shl
dec
push
mov
push
and
test
inc
lods
inc
shll
fwait
push
aas
jmp
pop
call
leave
jb
and
arpl
mov
jnp
clc
cltd
incl
ja
xchg
sub
inc
push
pop
fs
pop
lds
push
pop
dec
shl
push
mov
movsl
mov
gs
pop
aad
inc
in
cmp
and
push
inc
dec
jo
inc
aas
push
jmp
sbb
jp
adc
dec
jns
jns
ja
mov
lcall
mov
pusha
and
push
push
sub
jle
data16
bound
xor
in
mov
je
ret
das
mov
add
enter
xchg
stos
sti
jmp
cwtl
daa
scas
dec
add
cmpsl
call
loopne
add
push
mov
repz
add
jns
orb
mov
cli
cmp
stc
cmp
xor
ljmp
push
das
das
mov
xchg
pop
push
lret
adc
mov
push
add
movsl
or
aaa
in
gs
adc
dec
nop
bound
ja
xchg
mov
push
lock
pop
lods
push
test
daa
aad
mov
adc
loope
xchg
cmp
push
out
nop
mov
ja
push
xor
xchg
cmpsb
es
jecxz
xchg
lock
mov
xor
mov
sub
mov
and
lds
mov
and
pop
xchg
xor
sbb
cmpsb
xor
repnz
int3
fcompl
mov
mov
fstpt
sti
sub
xchg
or
call
adc
je
cmpsl
movsl
fnsave
stos
mov
or
cmp
rcr
fs
lea
jbe
add
aam
lea
stos
mov
xor
hlt
xor
push
call
xchg
mov
add
xor
push
lods
sub
sahf
jno
pop
and
jnp
and
adc
sub
sub
pusha
dec
imul
nop
mov
sarl
mov
dec
xor
jb
cmp
add
clc
xchg
loope
mov
rolb
data16
les
ret
lods
outsb
clc
out
movsl
je
cmpsb
movsl
push
mov
stc
inc
lock
call
test
popa
mov
dec
pop
je
jb
dec
shl
push
xchg
orl
push
shrl
loopne
mov
adc
adc
cmp
stos
cwtl
pop
loopne
add
sub
or
mov
jno
and
out
addl
outsb
sub
mov
aas
dec
jae
test
out
scas
cwtl
vsqrtpd
int3
jnp
lods
je
aad
fsts
scas
mov
adc
xchg
push
push
pop
mov
lret
imul
cwtl
daa
ret
xchg
mov
xchg
popf
pop
lret
ds
dec
in
push
push
fildl
cmp
xchg
cs
imul
pop
mov
inc
pop
ss
shll
out
xchg
jnp
in
pushf
bnd
and
jae
push
push
push
xchg
xor
or
jecxz
lret
dec
dec
test
hlt
jno
out
ds
mov
shl
xor
sub
in
imul
mov
pusha
push
int3
jg
test
inc
out
and
adc
stos
addb
cmp
mov
mov
inc
cmc
mov
jp
in
rcrl
outsl
jecxz
fs
adc
xchg
jns
inc
cmp
mov
out
push
xchg
mov
inc
insl
imulb
inc
popf
stos
xor
sbb
fbstp
mov
shrl
dec
and
cmp
mov
div
inc
idivl
or
pop
aaa
fcmovnbe
xor
nop
jl
andb
ret
sbb
jg
xor
push
jnp
inc
jnp
push
test
leave
sbb
push
cmc
mov
cmp
mov
add
in
and
jnp
push
mov
and
repnz
jmp
dec
fsubs
ss
int3
cwtl
div
cmpsb
in
push
jmp
push
test
mov
add
xor
lret
xchg
cmpsl
rol
je
push
pop
or
stc
cmp
flds
xchg
test
mov
adc
cmp
cwtl
jecxz
cmpsl
jns
or
divl
icebp
or
out
jle
pop
sbb
subb
int3
pop
sahf
mov
sbb
sti
adc
xor
push
stc
mov
mov
adc
jge
fisubl
loope
sarl
mov
scas
lret
push
jmp
mul
daa
adc
mov
les
clc
pop
sub
add
jnp
clc
loope
out
out
iret
sbb
call
scas
and
push
jne
ja
call
xchg
jae
imul
xchg
sbb
repz
push
jo
inc
out
push
xchg
lea
imul
cli
addr16
jno
mov
adc
mov
xor
jns
inc
test
mov
xor
les
loope
adc
jp
jne
jbe
lcall
iret
xlat
push
loope
popa
jae
sbb
cmp
mov
mov
xlat
jle
xchg
xor
and
pop
add
and
mov
mov
ja
je
cli
or
xchg
pop
fidivrl
jno
xor
mov
mov
ds
call
and
arpl
jne
dec
loope
pop
out
addl
aas
test
xchg
xchg
dec
adc
aas
push
sbb
push
pop
push
out
pop
xor
pop
mov
cli
xchg
cmp
cmp
inc
inc
xchg
sub
leave
mov
fwait
sbb
pop
inc
bound
daa
xor
mov
dec
fnstenv
or
loop
pop
jo
mov
repnz
movsb
rcrl
ret
addr16
test
loopne
adc
cmp
push
dec
pusha
imul
pop
xor
daa
mov
mov
add
cmpsb
roll
imul
xchg
add
inc
nop
fwait
pop
cmp
lea
push
lods
jne
sbb
xlat
xchg
loop
movsl
jmp
loop
cmp
mov
fistl
add
and
jg
ljmpw
stos
inc
inc
les
sub
mov
jns
adcb
pop
cmp
in
adcb
adc
dec
sbb
add
fstpt
sbb
xor
in
daa
inc
dec
xchg
orb
mov
in
outsb
minps
push
es
int3
cmp
leave
sahf
mov
arpl
rorb
xlat
cwtl
dec
stos
pop
xchg
jp
jne
and
out
cmp
jmp
and
cmp
pop
add
push
pop
in
xchg
sub
dec
xor
test
imul
mov
mov
out
shlb
mov
movsb
ret
cmp
mov
mov
pop
push
sahf
mov
lock
arpl
repnz
out
out
push
or
dec
jbe
jo
mov
mov
jmp
pop
add
loopne
or
mov
and
or
jbe
sbb
mov
xorb
cmp
push
xchg
clc
js
fistps
xor
js
iret
mov
dec
loop
lea
lea
sub
jno
nop
adc
out
insb
arpl
ficoml
jp
cmp
pop
orl
cli
int
daa
flds
mov
out
fld
mov
sbb
push
sbb
or
sub
or
lock
sub
ss
add
and
pop
mov
add
push
mov
or
cmp
aaa
rcl
lock
aad
cmp
sub
aad
cmp
jns
mov
jecxz
inc
leave
sub
sahf
scas
xor
insb
inc
mov
dec
rcll
and
mov
cmpsb
lock
stos
xchg
add
in
cmpsl
shl
push
jge
and
ja
fistpll
rolb
enter
mov
xchg
or
jecxz
ret
pop
setae
popa
leave
ja
push
lret
xchg
aaa
scas
add
icebp
push
insb
dec
mov
push
pop
sbb
and
lea
imul
aam
dec
mov
jnp
fcmovbe
push
or
inc
cmp
add
les
inc
cmpsb
cmp
dec
adc
data16
test
jle
imul
jp
xor
das
and
dec
adc
dec
ds
clc
xchg
stos
sub
icebp
adc
mov
inc
jns
inc
fimull
xor
mov
fisttpll
lods
or
add
mov
lcall
cs
cmp
inc
pushf
lods
test
fistpll
mov
in
pushl
in
dec
aas
shl
xor
test
adc
lret
jmp
xor
rol
shlb
pop
ja
add
outsb
jne
pop
cmp
mov
and
or
cmp
cmpsb
hlt
or
mov
xor
lods
sbb
adc
push
jge
jge
aas
enter
aam
fmulp
dec
frstor
pop
push
xlat
mov
pop
mull
sub
pop
push
dec
repz
mov
sbbl
xor
jp
shrl
mov
or
cmp
and
cli
movsb
insb
mov
nop
mov
jg
mov
push
pushf
cli
scas
test
push
push
loopne
lods
aad
push
sub
cmp
cmc
stc
shrb
xor
mov
mov
mov
lods
or
xchg
das
int3
inc
in
inc
push
add
mov
pop
cmp
mov
lret
test
scas
loope
cmp
ret
cltd
hlt
jno
icebp
leave
loopne
jg
in
mov
cmp
jecxz
jmp
jl
hlt
js
dec
inc
pop
out
or
fisubs
xchg
xchg
push
aad
sbb
jae
jl
pop
sbb
pop
gs
notb
add
fsubrp
xor
push
cmc
sbb
mov
mov
bound
ja
in
mov
dec
aaa
jo
loopne
adc
lods
cmp
outsb
cmc
adc
aaa
popf
insb
inc
dec
pop
inc
push
jl
movsl
clc
xchg
lea
xlat
shll
jns
or
pop
cmp
aaa
test
fcomp
lcall
iret
cld
pop
js
dec
dec
ret
xchg
ret
push
loopne
sti
mov
daa
mov
adc
dec
pop
bound
xchg
jnp
push
mov
lea
ret
aas
push
cmc
pop
in
enter
and
pop
lcall
int
fdivrp
mov
mov
pop
adc
mov
repz
mov
in
fnsave
mov
hlt
dec
lahf
mov
lods
and
mov
pop
shll
fs
inc
sbb
pop
ljmp
jnp
mov
mov
dec
pop
mov
lcall
in
test
and
adcb
jmp
lcall
das
mov
aas
mov
aas
push
stc
mov
out
stos
fldenv
in
aaa
pop
inc
std
addb
xor
or
gs
and
std
loop
push
pop
pop
sti
or
xlat
outsb
xorl
cmc
pop
loope
push
popa
mov
sub
push
cli
pushf
movsl
je
inc
xchg
jnp
jae
hlt
fsubrl
insl
fmulp
pop
push
or
arpl
test
ljmp
insb
or
mov
scas
mov
mov
cmpsl
and
jl
mov
aad
lret
mov
jl
adc
pop
jae
jecxz
cltd
mov
add
inc
mov
sti
je
test
scas
xor
mov
jle
jnp
push
adc
pop
popf
sub
mov
clc
pop
bnd
mov
dec
jns
xchg
jmp
or
test
jmp
repnz
iret
pop
aam
movsb
mov
mov
mov
push
leave
insb
adc
test
sbb
popf
jg
lods
pushf
adc
repnz
lcall
sbb
cmp
lock
xor
lods
test
int3
xchg
adc
push
mov
aad
test
inc
pushw
ret
cmp
clc
iret
mov
sub
mov
scas
ljmp
pop
sub
arpl
addr16
jle
mov
or
mov
sub
push
mov
stos
stos
and
hlt
fs
test
inc
cmpsl
dec
and
push
loopne
or
pushf
mov
testl
add
out
cmp
hlt
mov
xchg
pop
rol
adc
jp
mov
pop
jae
aam
into
dec
and
sbb
pop
push
ja
daa
test
aam
or
dec
push
mov
filds
pop
jae
mov
push
cwtl
movsl
in
aaa
mov
pop
push
out
cmp
jnp
cmp
cmc
leave
leave
push
fsubr
test
push
jmp
ret
int3
jb
mov
or
jmp
ret
imul
mov
xchg
out
mov
xlat
test
loope
clc
inc
fsubrl
rcll
lret
mov
arpl
stc
stos
loop
popf
jmp
test
sti
dec
push
icebp
scas
jg
add
push
mov
mov
adc
mov
into
jp
popf
das
cmpsb
cmp
scas
mov
or
push
jmp
stc
xchg
push
cmp
xchg
xor
mov
mov
scas
mov
push
test
adcl
xchg
scas
inc
sub
loope
cmp
dec
addr16
shll
arpl
mov
add
inc
jb
ss
xsha1
cmpsb
mov
sub
test
jle,pt
mov
adc
nop
and
punpckhdq
ds
loope
pop
test
imulb
add
cld
xchg
and
sbb
fs
add
ret
repnz
sbb
push
lods
add
mov
sahf
pop
or
dec
add
bound
and
cmp
int3
and
pop
imul
sub
jle
std
pop
int3
arpl
xor
inc
aam
cltd
sbb
data16
lret
xchg
xor
sub
add
pop
jno
and
xchg
push
and
je
pop
sbb
xchg
stos
inc
aad
adcl
mov
test
gs
pusha
sub
out
popa
loope
jmp
rcl
xor
and
out
or
or
cs
cmp
lods
sti
push
push
xchg
dec
faddl
in
xchg
or
outsb
repz
mov
pop
jae
mov
jl
dec
fs
fldl
sub
jl
ja
std
adc
jle
add
inc
pushl
jmp
xchg
lret
add
pop
pop
pop
aad
mov
insb
pop
data16
popf
mov
push
test
in
mov
repz
mov
push
mov
add
or
dec
lahf
xchg
out
movsl
push
movsl
or
dec
testl
movb
dec
and
data16
xor
xchg
inc
or
xchg
or
xor
fs
sub
in
lods
xor
test
cli
jne
andb
cmp
aaa
or
sbb
add
inc
repz
fisubrl
jo
repnz
xor
push
popf
xor
inc
xchg
mov
add
push
inc
cmpl
out
leave
sbb
sbb
mov
mov
mov
dec
mov
cmpsl
jnp
sbb
push
sub
mov
xchg
inc
aam
pop
push
push
lea
outsb
data16
jae
daa
fdivrs
inc
pop
loop
push
test
imulb
repnz
imul
or
inc
mov
adc
or
or
push
cltd
push
sbb
in
lea
int
mov
fld
insl
test
out
adc
xchg
int3
mov
adc
cmp
cmovle
inc
roll
or
daa
addb
or
or
mov
add
add
lahf
stos
mov
xchg
mov
stos
call
adc
pop
adc
clc
int
inc
scas
mov
loopne
adc
and
adc
in
jmp
xorl
fs
push
pop
mov
in
sub
jo
jns
mov
push
stos
aas
ret
stos
xchg
lds
ja
dec
push
push
notb
mov
fwait
sahf
mov
xor
xor
jno
jl
jge
xor
ss
rclb
incb
jo
pushf
pushl
mov
fdivrl
les
or
mov
sub
inc
rcll
mov
mov
push
and
inc
jo
loop
cmp
and
jne
call
sbb
xor
fs
mov
ret
adc
movsb
adc
test
hlt
in
adc
ss
insb
test
mov
in
divb
aam
inc
xchg
movsl
pop
mov
enter
addr16
push
mov
addr16
outsb
xchg
outsl
divl
lret
popa
sbb
inc
enter
mov
shl
xchg
push
addr16
inc
jbe
jns
lock
dec
dec
adc
add
aas
mulb
imul
arpl
sbb
je
iret
inc
mov
cs
mov
ds
mov
inc
sbb
jbe
add
inc
pusha
je
xchg
insl
add
mov
test
es
mov
and
fs
pop
mov
stos
mov
std
int3
iret
lock
push
sbb
cmp
out
inc
jns
mov
test
mov
lret
ret
mov
movsl
push
push
xchg
sbb
jmp
inc
enter
inc
test
push
loop
test
mov
or
pop
fbstp
push
pop
inc
int3
lret
mov
mov
sbb
sahf
xor
fidivs
xor
inc
lea
sub
jmp
daa
lret
popa
fsubs
xchg
mov
push
cmpsl
pusha
addl
and
nop
fwait
cmpsl
ds
in
cmp
in
sahf
jecxz
cltd
mov
mov
jbe
mov
notl
push
js
push
add
jne
js
test
xorb
ret
dec
cltd
std
and
shl
sub
adc
in
pop
sahf
divb
stc
cli
cmp
xor
jle
stos
jmp
mov
dec
out
push
xchg
jno
adc
aad
lea
int3
aas
lods
mov
fisubs
xor
sbb
mov
cmp
testb
mov
js
in
sbbl
lret
lds
imul
and
add
es
push
mov
or
mov
fnsave
cltd
test
stos
and
jmp
les
dec
jnp
gs
int3
and
and
pop
push
mov
mov
mov
pusha
sbb
in
cltd
or
repnz
xchg
dec
popa
jmp
mov
adc
mov
cmp
adcl
pop
pop
mov
aam
push
dec
js
pop
sbb
pop
fcomip
mov
mov
fnclex
out
jbe
push
ss
pop
inc
fildll
or
int3
mov
pop
outsb
dec
test
mov
das
fdivr
rcr
in
ret
insl
mov
rorb
xor
xchg
xor
test
adc
enter
call
insb
std
stos
aaa
add
lahf
lods
push
ja
cmc
dec
fisttpl
mov
inc
xchg
jg
mov
cmp
jge
ss
mov
movsl
sbb
shl
mov
xchg
aas
and
addr16
dec
cmpsl
aad
dec
in
int
xchg
sbb
push
out
sbb
stos
sbb
xlat
jae
imul
in
pop
out
fucomip
mov
out
mov
mov
nop
xor
repnz
pop
adc
mov
mov
lds
lods
sbb
hlt
xor
aas
add
xchg
xlat
outsb
enter
sahf
pop
jne
mov
fwait
shll
iret
xor
rclb
dec
sbb
pop
push
xchg
sub
std
cs
mov
les
popf
xchg
add
ror
jne
pusha
clc
push
xchg
js
inc
ret
mov
cwtl
mov
ds
int
sub
lret
mov
mov
fsubr
xor
test
aaa
and
add
mov
push
mov
add
jnp
jge
xchg
pop
scas
mov
in
jg
cmpsl
nop
adc
stc
adc
rcrl
in
dec
pop
das
mov
cmpsb
dec
movsl
fmull
jmp
push
lret
mov
sub
popa
clc
fdivrs
push
frstor
cld
test
test
pop
repnz
outsl
lock
rcr
cmpsl
clc
mov
mov
int
in
pop
notb
adcb
sub
insb
das
ds
out
sub
rorb
insb
mov
xchg
mov
in
out
les
mov
repz
push
jne
ja
in
int3
sub
lods
nop
xor
aad
mov
pop
movsl
push
xchg
adc
sbb
mov
nop
inc
pop
or
dec
xchg
or
loopne
pop
insl
add
fdivrs
bound
cmpsb
xchg
test
test
add
xlat
aaa
arpl
inc
adc
adc
into
jae
cwtl
jne
inc
lods
mov
mov
inc
sbbl
mov
insb
sub
xor
dec
push
in
xchg
lret
incl
mov
shlb
cwtl
push
mov
rolb
pop
and
and
das
sbb
pushf
pop
and
mov
sub
inc
out
pop
dec
fistpll
xchg
loopne
lcall
popf
lock
in
push
test
jbe
ja
adc
mov
ja
push
jmp
lret
adc
jno
pop
addr16
scas
bound
arpl
push
mov
rclb
stc
and
stc
sub
mov
dec
ret
cmpsl
jl
daa
mov
cltd
xor
add
fnstenv
inc
and
mov
sub
push
push
cmc
cmp
stos
insb
data16
ret
adc
jo
mov
dec
cmpsb
mov
test
mov
add
sbb
or
cmp
sub
lods
dec
loop
or
sbb
icebp
fnstcw
jp
sub
xchg
fxtract
cwtl
das
es
or
adc
stc
sub
inc
mov
ljmp
test
iret
or
jnp
stos
lods
loop
sbb
inc
xchg
pop
rorb
loopne
sti
hlt
xchg
sub
dec
sbb
mov
ja
jg
sahf
ss
orl
dec
test
sti
pcmpgtd
jp
mov
ret
dec
repz
aad
lock
adc
cltd
jnp
fbstp
fstl
dec
in
mov
cmc
aad
add
sub
xchg
mov
lds
cmpsb
lret
addr16
fldt
xchg
sti
add
or
add
xchg
xchg
les
inc
shll
adc
jmp
pop
pop
jmp
jnp
int3
mov
mul
bnd
push
mov
mov
mov
rol
or
sahf
lods
icebp
adc
shll
xchg
xchg
fbstp
loop
fsubp
mov
mov
push
inc
scas
out
shrb
dec
ljmp
notb
stc
sub
hlt
mov
adc
pop
dec
xchg
mov
pop
dec
sbb
xorb
lcall
ja
lock
fidivrl
ficoml
or
test
in
lcall
push
jo
and
xchg
sub
mov
dec
cmp
pop
les
push
push
sub
stc
push
stos
movsl
mov
adc
insl
jns
or
lcall
and
sbb
ljmp
arpl
imul
mov
int3
fisubs
inc
mov
dec
inc
pop
cmp
aam
lods
push
jno
mov
ret
sbb
int3
cmc
jo
cmp
and
pusha
push
insb
sarb
cmp
rol
sub
mov
mov
push
idiv
movsb
add
pusha
and
or
mov
pop
mov
add
ljmp
aad
add
pop
or
shrl
push
cli
dec
or
pop
mov
fiaddl
xchg
jb
push
jno
int
push
mov
aad
lret
cmp
shufps
sbb
dec
je
jb
xor
out
and
stc
rol
dec
mov
mov
xchg
add
inc
ret
mov
xor
add
dec
mov
sti
ja
int
sbb
jbe
and
mov
test
mov
scas
jae
nop
sub
push
mov
mov
inc
push
imul
outsl
data16
cmp
jge
aaa
push
div
mov
mov
inc
mov
into
inc
fmul
mov
mov
rorl
xor
push
cltd
jb
cltd
iret
scas
dec
pop
loopne
and
add
push
cmpb
push
inc
fistpl
shld
fs
pop
xchg
aas
add
testl
jns
arpl
pop
test
gs
xchg
jbe
out
sub
or
jne
cmp
mov
xchg
pop
pop
rcll
xchg
and
xchg
dec
adc
pushf
or
loop
loope
rcrb
test
dec
fstp
jmp
jne
mov
js
leave
jno
mov
xor
mov
mov
push
mov
push
inc
in
xor
dec
or
and
mov
and
decb
dec
cmc
cmp
lods
shrb
add
mov
mov
lods
inc
arpl
das
rol
loopne
lds
iret
or
jg
sub
sub
sbb
xlat
mov
rclb
addb
int
jbe
or
xchg
out
cmc
movsl
icebp
aam
sbb
test
sub
mov
sbb
repz
cmp
scas
add
inc
mov
xchg
cmp
cmp
jnp
lods
inc
jns
jns
daa
test
outsb
adc
and
sub
mov
mov
pop
cwtl
push
or
inc
out
jge
push
mov
lret
mov
aas
jl
mov
or
cli
stos
ja
and
popa
add
les
xchg
dec
jae
sbb
ret
sbb
adcb
imul
icebp
aam
dec
cmc
xor
cmp
mov
xlat
imul
xchg
hlt
push
mov
fsubrs
lahf
mov
repz
push
daa
into
fsubrl
test
sub
loop
insl
into
pop
sub
insb
adc
cmp
movsb
jnp
cmp
pop
test
iret
in
hlt
dec
loope
mov
iret
gs
push
push
push
or
xlat
mov
popa
jl
movsb
imul
inc
push
pop
arpl
into
sub
lret
sub
into
enter
icebp
mov
pop
js
adc
rcr
mov
fdiv
mov
scas
std
psadbw
out
fidivrl
add
or
cmp
xor
outsl
push
outsl
cmp
jg
orl
push
ja
iret
dec
xor
popf
and
mov
popa
fcomip
xchg
xor
mov
sub
sti
lret
dec
mov
leave
bndstx
imul
inc
shrb
mov
lea
call
xchg
cmpsl
outsl
ss
xchg
pop
imul
nop
dec
fists
mov
inc
fsubr
add
xor
daa
pop
jmp
or
pop
je
pop
repnz
xchg
jecxz
test
mov
ret
xchg
push
push
mov
mov
jl
sarl
mov
outsl
addb
fisttpll
fs
cs
jmp
es
sbbb
or
sub
shrb
jb
mov
inc
aaa
cwtl
clc
adc
into
gs
mov
shlb
push
ljmp
fidivl
fnstenv
mov
mov
pop
adc
arpl
or
xor
xchg
imul
lock
aaa
stos
inc
xchg
and
lds
das
sub
cwtl
push
int3
movb
jl
mov
pop
lods
cltd
jno
mov
pop
xchg
jne
jae
mov
inc
inc
mov
ja
stc
push
js
iret
fyl2xp1
xor
mull
pop
dec
addr16
sub
stc
jge
mov
push
jae
adc
push
ficomps
outsl
addr16
arpl
repnz
sbb
jle
pop
and
sub
fstpl
repz
and
xchg
daa
adc
xor
xor
push
inc
pop
adc
inc
jmp
jb
jnp
out
push
mov
sub
xchg
int3
ja
shrb
ljmp
insb
popf
mov
and
mov
jl
test
repnz
add
cmc
stc
xchg
dec
popa
dec
sbb
dec
out
pop
popf
cmp
mov
sbb
fiadds
movsl
mov
add
loope
add
es
aad
test
in
add
out
stos
dec
add
add
mov
jb
daa
dec
adc
fisttpl
imul
rcrb
xlat
push
jge
dec
fisubs
jo
notl
cmp
mov
sbb
and
ljmp
jno
dec
out
jmp
jo
jle
subl
add
ret
lea
movsb
int3
scas
inc
mov
outsl
push
fadd
mov
and
cmc
call
in
jae
cmpsb
les
cli
mov
in
mov
adcl
pop
push
rorb
push
frstor
lds
mov
pop
jl
icebp
movsl
sbb
xor
or
or
jne
fistpll
inc
mov
jbe
hlt
dec
sub
movsl
push
cmp
sbb
fistpl
or
xor
mov
mov
mov
pop
das
imul
movsl
xor
push
pop
ss
and
push
out
nop
inc
mov
cmp
insl
scas
cmpsl
xchg
pop
aas
xchg
mov
pop
xor
imul
adc
or
cmpsb
test
xor
adc
repnz
or
xor
push
dec
imul
in
fnsave
sbb
jecxz
mov
xchg
test
loopne
pop
mov
iret
inc
jb
lods
pop
fwait
sahf
pop
jae
push
mov
out
push
mov
insl
sbb
xor
test
pop
insl
imul
addr16
aas
addl
test
push
cmpsb
or
mov
or
pop
xlat
cli
sahf
ds
pushl
icebp
and
mov
push
test
ret
or
fsubs
aas
push
xor
jp
push
add
push
cmp
rcll
and
xchg
jo
add
or
popf
repnz
jmp
jb
pop
jmp
cmpsb
dec
outsl
sub
push
ljmp
jno
int
cwtl
mov
flds
or
sti
or
popa
stc
pop
sub
sbb
add
popa
aaa
mov
movsb
adc
lcall
in
pop
bound
adc
movb
das
mov
js
lahf
imul
insb
lock
push
jl
cmp
xchg
push
je
pop
jle
loopne
mov
popa
sbb
cli
ret
sub
clc
fadds
sbb
mov
popf
data16
outsl
and
sbb
xchg
subl
add
and
and
push
pusha
push
jno
lods
cli
movd
xor
popf
mov
rcrl
pop
xorb
vsubpd
sub
push
in
out
test
lret
jb
jge
jmp
test
je
repz
mov
repnz
mov
mov
fwait
cmpsl
dec
out
dec
enter
cmp
mov
sbb
sub
sahf
aad
pop
pop
enter
lods
in
popf
xor
mov
sbb
push
out
rclb
enter
aad
cli
jae
hlt
sub
and
in
icebp
inc
or
cmp
xor
cld
push
mov
aam
cld
jp
enter
jae
fdivrl
cmc
pushf
rorl
imul
aad
daa
mov
dec
mov
jp
jns
push
aaa
imul
sbb
test
xchg
mov
scas
les
mov
sahf
push
pop
cltd
in
aam
push
test
bound
pop
sbb
hlt
inc
adc
insb
mov
inc
hlt
jo
mov
das
jmp
ja
fwait
or
pushw
pop
scas
iret
mov
sub
jp
jl
mov
dec
cmpsb
das
test
rorb
xchg
adc
or
push
inc
and
cmpsb
cli
dec
stos
and
and
inc
mov
push
lock
pushf
xchg
pop
adc
xchg
sub
sbb
fdivrp
sub
cmpsl
and
fidivrl
inc
rolb
jecxz
add
and
cli
call
xor
sbb
andl
cmovle
inc
jb
in
xor
notb
das
push
out
xchg
mov
pop
dec
push
xor
out
cld
mov
jbe
lcall
adc
cli
mov
mov
loop
sub
sub
shl
out
aam
adc
leave
inc
jmp
aas
in
push
pop
js
fwait
mov
lahf
inc
test
pushf
xchg
xchg
loopne
xchg
sub
inc
mov
xchg
inc
cmpsb
out
push
and
dec
cmc
cwtl
test
xor
fs
adc
aas
subb
sbb
mov
ror
nop
loopne
mov
pop
dec
cmp
push
xor
cli
lcall
cwtl
test
pop
and
lret
aad
icebp
xchg
mov
mov
sbb
popa
push
fnsave
out
es
fstpl
and
mov
insl
loopne
pushf
stos
addl
sbb
xor
jo
test
push
call
cltd
ss
inc
sti
cs
aas
xchg
dec
jl
mov
add
jbe
in
les
push
repnz
lret
xchg
out
adc
push
inc
enter
xor
mov
jg
cli
scas
nop
mov
mov
add
pop
int
and
hlt
push
lock
xchg
sub
mov
pop
and
mov
inc
mul
dec
sub
xchg
dec
pop
xchg
into
dec
mov
mov
inc
xchg
mov
roll
sub
pop
add
je
repz
or
jle
jnp
pushf
dec
and
mov
sub
sub
aam
pop
add
ss
xor
mov
add
cli
inc
push
jle
add
popf
hlt
lods
adc
inc
int3
sti
pop
sbb
or
popa
int
mov
sbb
rorb
xchg
mov
lods
sbb
fcoml
andl
dec
popa
gs
push
cmpsb
push
jns
dec
bound
pop
sub
frstor
mov
cmp
mov
aam
push
pop
or
add
xchg
push
or
cltd
jmp
sbb
in
inc
add
jo
call
xchg
stos
andb
int3
pop
lret
sbb
add
push
imul
push
fnstsw
sbb
int
pop
mov
in
jmp
dec
shrl
adcb
lahf
jae
ret
inc
push
dec
mov
xor
icebp
xor
fldt
mov
sub
lcall
negl
loop
jg
clc
scas
mov
or
mov
adc
mov
jle
push
mov
in
mov
subl
aad
adc
cmpsl
jns
jno
sbb
lea
add
jmp
pop
outsl
loop
punpckhdq
jp
or
lea
push
loop
outsl
or
mov
sbb
rcll
pop
sbb
jae
add
fcomps
movsl
sbb
stos
pop
ljmp
negb
and
and
jnp
out
pop
ss
push
add
jg
rolw
jae
mov
pop
xchg
scas
fbstp
fisttpll
adc
ss
xor
xor
xor
and
cli
cmp
fdivs
mov
mov
int3
jg
sahf
mov
pop
mov
out
loopne
sub
aad
pop
push
loope
arpl
xchg
pop
jnp
or
lods
fcmovbe
sub
js
jne
add
std
outsb
sub
fsub
dec
repnz
movsb
push
jb
lahf
mov
push
int
adc
jne
repz
jle
cld
sub
movsl
ret
in
push
adc
mov
scas
adc
jmp
mov
mov
aaa
add
lods
rolb
mov
test
les
mov
add
sbb
add
or
aad
mov
push
hlt
clc
jmp
fdivs
lds
jb
dec
dec
test
and
push
sbb
shrb
mov
clc
push
sub
mov
enter
jne
mov
jg
imul
cmc
incl
hlt
aaa
rclb
pop
int3
subb
dec
aas
jp
in
fidivl
lahf
stos
sub
rorb
adc
out
ja
lret
dec
decb
ljmp
push
sbb
inc
fwait
dec
push
fcmovbe
and
or
icebp
insb
mov
xor
mov
mov
cli
stos
add
clc
mov
xor
push
mov
adc
mov
arpl
mov
push
sub
sarl
xor
or
outsl
das
inc
xchg
arpl
cmp
mov
gs
loopne
pop
push
out
adc
sub
push
push
jo
sahf
pusha
iret
inc
sub
push
jb
test
shr
push
xor
and
outsl
inc
and
repz
lcall
jle
out
adc
sbb
xor
mov
out
lea
mov
sti
ss
repz
fisubrl
jbe
std
adc
pop
aam
mov
and
cmp
sbb
aas
outsl
negl
rorl
mov
cwtl
gs
cmp
sub
push
mov
psrlw
pop
repnz
push
mov
or
ds
inc
ljmp
dec
adc
loopne
imul
repz
and
popa
jb
test
test
inc
mov
out
mov
pop
jns
sub
lods
out
pop
pusha
push
in
xchg
subb
aad
out
inc
movsb
and
gs
sub
stc
xchg
testb
sbb
xchg
inc
inc
bound
add
dec
mov
fdivrs
dec
xor
or
cmc
sub
data16
repnz
and
bound
add
fsubl
popf
lret
ret
fdivrp
mov
movsl
mov
ret
adc
cld
iret
cltd
xor
dec
loope
add
push
test
xor
insb
ja
js
imul
in
or
jo
in
jl
lret
jns
leave
mov
lcall
arpl
sar
repnz
iret
jae
or
das
call
adc
fs
ret
inc
in
add
dec
mov
xchg
and
add
fwait
cs
lcall
call
cmp
push
jo
and
repz
ffreep
ljmp
adc
sub
fwait
and
sbb
mov
and
shrl
xchg
lock
ficomps
sbb
fdivs
push
xchg
in
add
std
lea
jns
rol
inc
inc
jae
inc
lds
and
setne
ret
cmp
mov
add
ds
mov
arpl
insl
mov
and
cmpl
or
loop
mov
and
test
ja
imul
aam
xchg
sarb
movb
es
test
int3
mov
ljmp
ret
packsswb
or
xchg
pop
repnz
mov
adc
ja
out
js
loop
xchg
ja
adc
andl
inc
int
imull
push
or
inc
dec
sbb
jge
add
stos
xchg
cmpsl
sub
jmp
andl
dec
lods
add
into
lods
mov
fdivrl
shll
pop
jns
fnstenv
mov
arpl
je
fcoms
xor
xchg
test
cmpsb
std
jae
mov
pop
add
arpl
push
push
lock
aas
pop
mov
cmp
cmp
stos
sub
cmp
push
push
hlt
xchg
dec
pop
int
push
cwtl
cmpsb
enter
ret
or
daa
subb
leave
and
je
push
loop
xchg
xchg
shlb
mov
pop
mov
adc
jmp
test
repz
add
adc
outsb
push
test
jle
lds
xchg
mov
mov
dec
out
cmpsl
jle
and
push
xorl
es
push
lods
inc
xchg
pop
sub
jge
aad
movsl
lods
repnz
pop
js
or
or
inc
push
xchg
cltd
dec
scas
imul
push
cltd
fiadds
sub
pop
scas
insb
aad
add
xor
push
mov
sub
data16
push
lods
sub
add
aam
push
or
sarb
outsl
dec
orl
mov
pop
notl
cli
loopne
sbb
lea
rcrl
filds
fstpt
ss
mov
inc
push
sbb
into
adc
sete
inc
stos
push
xchg
sbb
mov
jecxz
out
mov
inc
lock
jle
jbe
xchg
xchg
sahf
mov
iret
cmc
or
sub
xchg
sbb
adc
or
sbb
dec
imul
stc
stc
inc
sub
test
es
push
fwait
pop
lds
mov
pop
jge
sbb
cmp
dec
pop
add
ds
mov
jnp
lret
js
shrl
xchg
xorl
cwtl
lahf
stos
push
in
es
aam
or
cmpxchg
fcom
add
mov
loop
test
cli
mov
leave
incl
sbb
les
pushf
xchg
jle
stos
push
xor
mov
fisttpll
cmp
push
mov
mov
hlt
jle
test
cmp
pusha
scas
ds
mov
mov
iret
sub
je
sti
call
and
insl
adc
pop
cmc
jmp
xor
addl
mov
adc
cmpsb
lock
cmc
dec
movsb
mov
dec
shll
lods
stc
mov
leave
jno
addr16
cmp
fwait
or
out
xchg
sti
add
add
xchg
push
test
lods
adc
jp
sbb
and
outsl
lds
jecxz
pop
cmpsl
dec
data16
int3
jl
add
ficoml
pavgb
test
ja
icebp
push
xchg
outsb
xchg
movsl
sarl
nop
je
jp
pop
mov
or
xchg
sahf
mov
add
inc
xor
in
js
add
fbstp
lret
movsb
in
add
ljmp
xchg
daa
cmp
addl
pop
inc
jmp
sar
xor
addr16
lea
jle
ds
cli
pop
xor
lds
in
aad
imul
cmp
xchg
aam
popf
inc
xor
push
mov
or
jge
adc
clc
dec
sbb
loope
cmp
lahf
mov
adc
or
inc
cmp
enter
xor
mov
cmc
adc
shl
scas
add
sbb
mov
aas
pop
sub
and
cmp
pop
scas
pushf
mov
pop
cmpsl
in
xor
adc
mov
push
lret
push
mov
adc
xor
inc
mov
inc
std
cmpsb
add
je
cmp
adc
jns
xchg
xchg
cs
xor
in
jae
ret
sub
add
cmp
ret
ja
cmp
xchg
add
lret
aaa
repz
xchg
mov
mov
mov
lods
xor
xchg
xchg
cmpsl
push
push
test
dec
dec
stos
rorl
lret
push
jo
push
and
sub
push
scas
out
aad
jno
loop
imul
sbb
push
sub
stos
jbe
repz
int3
lahf
jbe
jno
clc
out
std
shr
fprem
jbe
sub
in
and
stos
cmpsb
popa
pop
ja
test
int
adc
add
jae
or
sar
add
dec
mov
rclb
push
cmp
imul
cmp
pop
test
sahf
xchg
mov
pop
aad
xchg
dec
sub
fnstsw
iret
bswap
and
push
mov
je
add
or
cmpsl
fcoml
icebp
jl
daa
or
cmp
fwait
xor
adc
mov
shl
inc
mov
add
mov
lret
sbb
decl
popa
scas
push
xlat
jbe
inc
hlt
adc
sub
loope
jl
dec
mov
xchg
xchg
dec
jb
dec
test
cli
pop
add
int
clc
xchg
fmulp
mov
mov
cwtl
jmp
les
dec
mov
pusha
rcrl
add
jmp
adcl
sub
jb
arpl
jg
adc
inc
outsl
pop
mov
adc
cmp
push
mov
jmp
mov
pop
fisubrs
not
insl
mov
outsl
je
xchg
out
cmc
sti
fwait
cmp
push
pop
inc
cmc
jmp
mov
popf
clc
pop
push
adc
push
cmpsb
mov
adc
jns
sub
pop
jbe
repnz
xchg
mov
fwait
adc
sti
inc
sbb
bound
fisttpll
sahf
in
fidivl
pop
js
pop
inc
jl
lock
in
ds
mov
ss
cmpsb
cmp
cmp
cli
pop
add
ds
pop
inc
jmp
adc
sahf
or
notl
xor
sub
rcrb
lea
icebp
ljmp
sbb
cmp
adc
mov
dec
cmpsl
push
test
out
mov
leave
sarl
sub
pop
dec
sub
xor
cmc
cmp
fwait
push
adcb
jmp
xor
xchg
stos
sbb
insb
fs
mov
sub
call
and
nop
frstor
sbb
aaa
adc
xor
ss
cmp
adc
leave
and
nop
inc
inc
inc
fstpt
cmp
outsb
jge
xlat
mov
xchg
xadd
adc
pop
push
sbb
jl
jne
rcrl
jmp
and
ret
shll
jb
jbe
std
insb
jle
sti
out
rclb
aaa
nop
xchg
jno
lock
cmp
aam
add
push
push
pushf
cmpsb
lahf
pusha
daa
jle
mov
jae
mov
scas
mov
faddl
outsl
jns
movsb
cmp
in
jle
pop
fcmovnb
pop
or
out
arpl
xchg
push
stc
inc
cmp
movsb
mov
add
xor
stc
ror
push
dec
or
or
popa
and
mov
mov
mov
ja
movsb
scas
shld
sub
clc
inc
fnstenv
adc
push
es
mov
daa
ror
arpl
jae
pop
cmp
pop
fstps
ss
add
int
aam
adc
test
or
scas
push
nop
mov
jns
ds
ds
fdivrl
and
ret
aad
jmp
mov
cmp
hlt
loop
iret
and
sbb
dec
loop
and
sti
or
jl
int
je
add
shl
mov
addr16
adc
mov
je
enter
sti
es
mov
fs
xchg
cmpsl
xchg
setne
into
inc
xor
jg
jns
jecxz
or
adc
mov
out
rorb
jnp
sti
jno
cltd
mov
xchg
jp
in
and
pusha
mov
mov
mov
scas
rorl
mov
or
loopne
clc
aaa
jbe
inc
ja
out
mov
test
xchg
mov
mov
adc
call
insb
test
xor
pop
adc
in
sbb
out
pop
mov
aas
cmc
adc
jno
fs
xchg
jmp
int3
out
lcall
stos
das
cmp
fisttpl
or
mov
arpl
rcrl
ljmp
scas
mov
lret
aam
mov
clc
jmp
mov
pop
sub
mov
add
inc
call
lret
es
mov
pop
adc
adc
mov
gs
add
rol
jns
icebp
jge
and
mov
cld
outsl
in
popa
int
popl
test
fstpl
mov
cs
jecxz
pop
imul
andb
lahf
ss
inc
mov
mov
and
sti
lret
add
sub
or
fidivrl
hlt
mov
fcomps
enter
push
cmpsb
stos
inc
cmp
mov
movsb
xlat
enter
in
mov
mov
pop
mov
or
mov
mov
xor
inc
test
fstpt
sbb
popw
lods
jecxz
mov
jae
inc
add
xchg
xlat
cwtl
inc
or
cmp
movntq
cwtl
sub
dec
add
out
and
and
mov
gs
lret
xlat
xor
xchg
outsl
inc
jno
arpl
shlb
ja
nop
daa
or
xor
scas
jbe
mov
rcll
mov
xchg
cmpsb
and
cld
test
movsl
sub
add
pop
popa
arpl
adc
adc
cltd
add
mov
xchg
in
cltd
xor
mov
and
mov
out
movsl
aam
or
lds
push
cmpsl
inc
mov
jbe
mov
mov
fprem1
xchg
mov
push
push
mov
mov
push
cmp
test
mov
xchg
pop
add
add
mov
adc
out
in
add
push
repnz
movsb
sarl
pmuludq
pop
jle
mov
mov
mov
sub
fnsave
sbb
shll
in
add
fwait
inc
jmp
cmc
inc
fstpt
xchg
push
mov
mov
pop
jo
js
loope
and
nop
dec
test
into
mov
pop
fsubrl
arpl
dec
push
push
insl
mov
les
fimuls
adc
jns
push
push
pusha
enter
inc
mov
cltd
fdivrs
fnstenv
repz
mov
iret
cmp
xchg
cli
jne
pinsrw
add
outsb
mov
out
or
pushw
mov
jae
aas
xchg
sbb
enter
xor
inc
movsl
push
icebp
stos
adc
movsb
cmp
jge
push
div
dec
lods
ds
cltd
pop
jg
inc
add
xor
pop
daa
mov
rorl
push
mov
xlat
sarb
or
cmp
icebp
push
add
or
orl
cmp
mov
lcall
inc
loope
fcoms
cmpsl
xor
cmpsb
adc
clc
dec
hlt
lea
dec
xor
mov
dec
cwtl
add
jl
dec
push
gs
andl
sub
mov
icebp
push
add
in
jg
lcall
andl
add
mov
or
cmc
fdivrs
cld
dec
call
and
std
fistpl
jecxz
jb
pop
movsl
mov
jg
mov
pop
or
pusha
insb
sbb
sub
cmp
negl
scas
inc
or
mov
lock
addb
pop
mov
or
jmp
int
repz
aaa
and
jo
test
in
test
jge
ja
cli
daa
sbbl
into
lods
mov
scas
int3
frstor
pop
cltd
repnz
jge
cmp
pop
mov
xlat
inc
fsubs
inc
movsl
jnp
test
sahf
mull
pushf
and
hlt
lods
daa
out
jmp
clc
cvtps2pd
les
push
sbb
pop
shl
nop
xchg
in
stos
lahf
cmp
jae
ret
call
xchg
andb
inc
ret
xor
lret
sti
ja
das
cs
shll
fdivs
sbb
leave
das
stos
fiaddl
pop
inc
push
fstps
insl
daa
sbb
push
or
push
addl
jae
push
in
jne
ret
pop
mov
pop
adc
push
sarl
pop
ret
aaa
ret
out
dec
loopne
add
rcrl
adc
lret
cmp
push
lcall
out
dec
mov
mov
adc
ds
jmp
pop
loop
mov
dec
add
sarb
or
into
jmp
test
sbb
pop
sbb
lcall
lahf
cmp
sbb
mov
xor
leave
dec
xchg
and
ret
cs
stos
lock
popf
or
mov
pop
in
mov
xor
lea
sub
mov
dec
lods
jmp
xchg
mov
xchg
cmp
and
xor
cli
sbb
stos
cmpsl
dec
push
in
jns
lret
sbb
pop
ljmp
xor
push
bound
mov
lcall
test
out
loopne
daa
lcall
or
cmp
inc
adc
mov
std
cwtl
jecxz
xor
and
push
repz
push
mov
mov
add
iret
jecxz
xor
jbe
mov
dec
fdivr
xor
add
je
sub
jnp
cpuid
inc
arpl
xchg
inc
inc
pop
dec
mov
sub
shl
cld
xchg
dec
sub
push
dec
mov
dec
dec
mov
aas
ret
push
rorb
popl
lcall
cwtl
push
cmp
lret
cld
lods
xor
jg
pop
mov
push
sti
loop
xchg
lock
sub
shrb
enter
mov
pop
jbe
fs
jmp
jbe
test
gs
inc
and
and
sbb
pop
insl
push
in
xor
in
xor
scas
fadd
fists
xor
jmp
mov
mov
push
mov
xchg
mov
std
inc
mov
scas
push
scas
jae
or
dec
xchg
sub
popa
xor
sbb
insl
addr16
outsl
pop
mov
mov
pop
pushf
pop
or
sar
dec
mov
leave
dec
mov
punpckhdq
rcll
out
push
fstpt
pusha
pop
jns
ja
nop
ret
ja
lods
test
js
sbb
dec
out
aam
sub
push
scas
jno
loope
cs
push
mov
inc
fldt
and
dec
jno
push
jl
push
sub
dec
xchg
adc
sbb
add
xorb
pop
mov
insl
movsb
test
pop
lock
jg
dec
sub
lods
jne
add
mov
add
iret
insb
stc
inc
insb
sub
push
lods
aad
cmc
pop
xchg
jg
xchg
dec
push
jns
clc
pushf
int3
arpl
sub
push
adc
push
mov
fnsave
sub
jg
pop
test
nop
and
inc
mov
and
lock
loope
rol
das
mov
into
add
pop
nop
jo
inc
mov
push
rcll
jbe
loope
xchg
inc
sbb
loopne
mov
dec
aas
fisubrs
out
inc
inc
hlt
adc
ljmp
cltd
or
dec
aas
ljmp
push
add
xchg
xor
jne
test
and
pop
mov
pop
cmpsl
cli
jge
sub
sub
jl
inc
cmp
pushf
sar
stc
mov
pushf
xor
inc
pop
push
arpl
add
xchg
mov
or
mov
inc
xchg
jbe
lahf
xchg
shr
mov
pushf
mov
jge
hlt
data16
mov
push
lahf
adc
stos
out
adc
pop
lret
fidivrs
lcall
or
xchg
lret
xlat
daa
cmp
xor
xlat
enter
insl
inc
test
fdivp
mov
or
lret
jb
movl
jnp
lds
jb
or
add
movsbl
mov
arpl
sbb
jne
push
fdivrp
or
xchg
adc
cli
adc
test
outsb
add
jle
test
adc
in
les
outsl
xor
fcomip
mov
xchg
and
jmp
insb
mov
sar
or
push
xor
je
push
popa
clc
aas
aad
jae
fnstsw
mov
or
shll
popa
adc
inc
push
jo
dec
leave
pop
ljmp
cmp
stos
add
fmul
add
and
lods
mov
push
subb
sub
lods
fwait
fs
mov
push
jo
cmp
xchg
jb
dec
cmp
jns
sar
push
mov
sbb
dec
test
arpl
pop
xor
push
mov
fucom
jne
aas
lock
dec
stos
add
enter
sbb
ljmp
jmp
les
cmp
push
ja
incb
xchg
fldcw
adc
and
add
in
add
imul
push
mov
jo
cmp
sbb
push
cmc
cmp
pop
ljmp
mov
add
sbb
sti
jbe
insb
jmp
ret
addr16
test
xor
into
push
cmp
fdivs
loopne
inc
fsubr
das
or
push
nop
outsb
mov
xchg
add
jae
loope
lret
out
movsl
mov
fdivr
push
std
pop
xchg
add
inc
ret
jae
and
xor
scas
mov
in
mov
sbb
mov
rcrb
and
mov
jl
call
jle
fdivrl
sub
jl
bound
pushf
orb
jge
pop
adc
pop
mov
adc
aam
push
dec
orl
xlat
aad
and
push
pop
test
or
mov
stc
js
sub
mov
add
mov
repnz
cmp
cmc
adc
hlt
or
xor
mov
push
sahf
xchg
stos
jl
jecxz
jo
jecxz
sub
dec
jmp
popf
jne
inc
dec
push
mov
int3
cld
dec
cmp
inc
repnz
in
mov
sarl
dec
or
mov
sbb
lods
dec
xor
subb
push
cmpb
mov
les
ds
xchg
mov
sbb
jmp
popf
sbbl
cmpsb
jnp
pop
mov
and
pop
adc
iret
sbb
scas
push
lret
shlb
ss
sbbb
pop
sub
ds
cmp
mov
loopne
inc
inc
cltd
dec
push
pop
out
sbb
and
addb
cmp
and
xchg
lods
das
xchg
fbstp
int3
or
aas
test
jb
pop
cld
js
inc
sbb
js
adc
lods
popa
jle
clc
addl
jl
scas
insb
mov
adc
cmc
mov
xor
int
out
in
pop
cmp
icebp
aaa
push
sub
or
fchs
inc
test
out
cli
hlt
nop
clc
cmp
sbb
pop
setno
in
xchg
lret
and
int
inc
sub
sahf
sbb
lds
xor
mov
sub
sub
xchg
imul
stos
add
insl
sbb
xchg
dec
mov
hlt
add
stos
dec
dec
ret
xchg
and
jg
int
into
in
in
push
test
xlat
mov
lock
nop
rcll
insb
sbb
dec
pop
or
divl
loop
add
cmpsb
sub
dec
in
testl
xchg
cwtl
jle
cwtl
out
jmp
lods
and
dec
je
push
das
dec
aam
add
mov
pop
jecxz,pn
icebp
call
fidivs
add
cmp
cmpsb
std
adc
ds
in
ret
fidivl
mov
faddp
lcall
xorl
mov
sbb
adc
sti
shrl
cltd
pop
fcomps
addr16
popa
or
push
jae
ret
push
pop
adc
nop
mov
shr
inc
call
mov
mov
fs
scas
fstpt
or
insb
add
adc
ret
ret
pop
adc
xlat
jae
pop
idiv
lods
push
mov
cltd
pop
mov
fildl
mov
adcb
cmp
notb
inc
mov
sbb
outsl
loop
in
mov
inc
push
scas
shrb
lahf
xlat
mov
xor
and
adc
subl
xchg
imul
mov
xchg
cmp
jns
scas
push
lcall
mov
fldenv
call
lods
push
cmp
mov
dec
sbb
out
rol
mov
test
pop
ds
or
outsl
dec
mov
cmp
int
loop
pop
out
add
mov
inc
inc
xor
out
das
adc
pop
sahf
std
imul
loopne
daa
stc
outsl
xlat
ficompl
jo
in
pop
mov
mov
pushf
add
mov
pop
ljmp
lock
hlt
into
xor
and
lret
out
mov
lods
jmp
cs
pop
pop
sub
and
jnp
rol
mov
xchg
stos
or
ficompl
fsubr
ret
mov
loopne
pop
xchg
sub
mov
test
cwtl
cmp
dec
pushl
pop
jle
dec
push
sub
jmp
or
pop
push
xchg
pop
ljmp
fcoml
sub
cmp
mov
sub
dec
bound
das
sub
add
inc
faddp
lods
add
mov
dec
stc
and
or
scas
arpl
fdivs
pop
imul
mov
les
xor
jle
int
sbb
iret
pop
cwtl
push
aam
pop
js
dec
stos
aas
sarb
shl
mov
sbb
mov
push
lret
inc
mov
mov
out
jge
fmul
repz
insl
sbb
out
xor
sbb
mov
das
mov
dec
jns
push
mov
xchg
xchg
adc
sub
dec
xchg
push
push
sub
enter
fs
ja
mov
test
movsb
pop
xor
inc
lret
mov
jno
pop
in
ds
test
mov
jae
cld
das
xor
xchg
push
pop
loope
mov
sub
and
inc
lods
sbb
fdivs
aam
ret
mov
push
insl
fincstp
lahf
lahf
cmpsb
xor
push
and
cmc
dec
add
add
jnp
lret
stos
loopne
mov
inc
push
jb
testl
icebp
inc
adcb
adc
push
scas
stos
push
add
add
sub
mov
dec
jecxz
aam
mov
add
dec
icebp
mov
out
push
or
sbb
orl
sub
xor
aam
mov
pop
outsb
xchg
jne
scas
shr
out
add
shr
mov
and
push
sub
and
push
mov
pop
mov
insb
fimuls
pop
mov
mov
aaa
push
sub
jmp
mov
cltd
jo
mov
clc
sub
clc
pop
or
jb
rcrb
in
inc
test
cmp
in
lds
add
dec
push
sub
mov
lret
dec
inc
adc
push
stc
jnp
sbb
push
popf
sti
or
sbb
jge
pop
push
or
cmp
cmp
lahf
ds
pop
call
add
hlt
push
repnz
leave
xlat
jecxz
pop
rorl
or
sbb
or
cmp
mov
mov
arpl
pop
cmpsb
shll
sub
pop
das
fstl
mov
call
add
push
es
nop
adc
nop
xor
lds
inc
je
push
sahf
xacquire
rcrb
movsb
jle
xor
testl
sahf
bound
pop
fsubrp
lods
xor
mov
ret
rclb
fstl
in
lret
xchg
sub
jnp
cmp
mov
or
add
imul
fiaddl
aas
push
dec
iret
jp
or
pop
push
sub
pop
pop
incb
mov
xchg
mov
repnz
push
mov
leave
push
xor
lods
dec
xor
test
mov
lock
insb
adc
push
scas
jno
ret
rcrb
jmp
cmovs
sbb
sbb
shl
adc
aas
cmp
inc
psraw
push
pop
cmp
inc
das
addr16
mov
xor
lods
xchg
and
mov
cli
sti
fdivl
push
push
mov
cmpb
cmp
cmc
pop
xor
mov
pop
mov
cmp
jecxz
sti
sub
jl
push
vpmacswd
shlb
stc
push
loop
lods
xchg
call
add
scas
pop
ds
mov
dec
mov
int
sbb
pop
movl
xor
add
xor
xchg
int
jo
movsl
fcoms
mov
cmp
pushf
std
or
lahf
or
jnp
lock
push
pop
add
fsubl
and
or
gs
mov
loopne
aaa
adc
push
xchg
add
xor
out
inc
cmp
fnstcw
sub
jl
xchg
icebp
fdivrl
pop
out
sbb
xchg
es
push
push
int3
mov
sbb
cmpsb
scas
inc
adc
out
les
xchg
jb
jecxz
movaps
stos
push
pushf
sbb
leave
inc
push
insl
jl
pop
ret
push
sahf
fwait
xor
cmc
dec
push
sub
pop
lahf
mov
aad
xchg
dec
pop
in
dec
cmpsb
and
pop
fmul
sub
adc
aas
xor
dec
sub
sub
adc
dec
dec
movsb
addr16
inc
test
in
xor
sub
jo
stc
jle
xchg
mov
xchg
shrl
xchg
cmpl
sub
cvtdq2ps
mov
inc
sub
or
cmpsw
sbb
xchg
sub
inc
push
dec
dec
xchg
inc
jecxz
xor
lea
jl
xor
lcall
xchg
data16
pushf
push
cmp
mov
fistpl
dec
sub
inc
sub
fnstenv
fldt
cmp
jnp
fdiv
jb
ret
pop
setne
add
cmp
adc
flds
leave
scas
inc
jle
lds
shrl
xor
mov
sub
sub
imul
je
mov
add
sbb
push
ljmp
adc
arpl
mov
mov
adc
pushf
mov
push
cli
add
sahf
xor
push
hlt
push
lea
loope
cwtl
xor
arpl
pop
and
mov
jp
mov
xlat
lret
pop
mov
push
std
fwait
pop
jmp
push
mov
mov
pop
nop
inc
push
mov
test
or
std
and
inc
arpl
fwait
scas
push
inc
fnsave
sti
jns
test
pushf
and
push
cmpsl
mov
mov
divb
scas
movsl
ret
aam
pushf
or
pop
mov
adc
and
mov
push
out
push
dec
and
scas
push
lcall
cwtl
cmpsl
fisubs
imul
xchg
sbb
mov
bound
shlb
mov
loopne
insl
xor
test
jb
xor
add
fs
fsub
pop
icebp
dec
xchg
xchg
aam
loopne
aam
add
arpl
lcall
pop
bnd
dec
cltd
xlat
dec
jns
nop
dec
and
jnp
insb
inc
lods
cwtl
sbb
les
or
add
arpl
dec
cmp
push
or
mov
lcall
sub
xor
jl
and
rclb
mov
or
adc
movsb
addr16
push
push
add
and
inc
cs
add
bound
fbld
fisubrs
inc
or
test
repnz
and
test
rclb
push
orl
jbe
pop
scas
xor
lods
das
fsubrp
int
loopne
data16
divb
pop
shrb
iret
stos
dec
pop
mov
es
arpl
cld
inc
fidivl
mov
jp
cltd
testl
push
aad
out
adc
fiaddl
jecxz
lret
adc
imul
cmp
dec
loop
dec
fbld
dec
or
in
fs
inc
fildl
mov
stc
sub
jl
pop
out
stc
fmul
ja
out
dec
xor
push
scas
jg
roll
sbb
in
and
adc
in
cltd
and
out
cld
test
add
test
xchg
add
mov
rorl
mov
test
sbb
rcrl
cmp
add
cmp
mov
jnp
in
stc
sarl
push
sbb
mov
out
xor
sbb
jmp
mov
sub
sarl
sbbb
jae
push
pusha
loop
rcrb
adc
inc
ds
sbb
xchg
pop
mov
mov
fstl
mov
lret
jp
sub
into
enter
sbb
ds
mov
stos
stc
nop
xor
sub
adc
or
sbbb
inc
mov
sbbb
xor
lret
stos
stc
test
into
call
xor
pop
andl
or
mov
ret
and
lock
push
data16
int3
cld
xchg
lods
push
addl
mov
shl
cmp
push
out
jne
dec
mov
into
aaa
fsubrp
call
fadd
stos
push
xchg
adc
cmp
and
aas
shlb
aad
out
fwait
movb
std
sub
cmp
dec
jle
mov
mov
pop
pop
sbbb
push
mov
or
imul
cmpsb
ljmp
mov
aas
inc
jns
and
fistps
inc
sbb
jno
push
cmpsb
lock
adcl
in
shlb
lods
orl
orb
aad
scas
mov
lods
fdivrp
push
add
faddl
sti
add
dec
and
test
jae
push
loope
outsl
sbb
sub
or
inc
dec
bound
testl
mov
in
adcl
dec
dec
bound
aas
sti
cmp
vpmulhw
sbb
and
dec
jbe
mov
jnp
inc
inc
lds
cmpsb
cmp
ret
xor
ficoml
ds
gs
pop
je
inc
and
fcmovnu
cmp
and
pop
xchg
pop
call
ja
xchg
xchg
cmp
insl
sbb
movsl
loopne
in
fwait
jb
lea
sbb
pop
loopne
xchg
jg
sub
inc
mov
shll
pop
bound
push
pop
test
sbb
add
faddl
fcmovnu
jg
fwait
ljmp
rolb
cmc
loop
addr16
pop
xchg
ret
inc
out
sahf
jb
pop
cmc
adc
cs
push
fidivrl
dec
push
mov
cwtl
in
mov
sub
add
inc
pop
lods
sbb
sahf
sti
fstps
dec
xchg
jnp
jns
scas
xchg
pushf
mov
sub
lods
cmp
pop
cmp
push
jmp
sbb
inc
jge
pop
push
sbb
sbb
pop
adc
mov
imul
movsb
addr16
ljmp
out
xchg
fsubrl
mov
inc
jno
iret
mov
and
int3
jo
and
fsubr
pop
sub
mov
in
xchg
adc
add
sbb
pop
add
lcall
cmp
fldt
insb
sub
out
mov
pop
hlt
mov
push
sahf
or
repnz
cli
and
hlt
ret
mov
pop
rcr
addl
xor
js
test
rcll
add
add
jnp
mov
ret
out
int3
jg
pop
je
sbb
cmpsl
imulb
mov
jbe
outsl
jge
jae
arpl
shll
jecxz
sub
sbb
insl
inc
and
in
ljmp
pop
sub
xchg
ds
jbe
adc
ss
mov
adc
iret
sub
pop
add
ss
addl
add
pusha
adc
adc
fsubrs
out
int3
dec
addr16
or
xlat
xchg
test
jae
cltd
mov
sbb
sahf
cmpl
lahf
inc
pushf
daa
mov
or
or
mov
in
ljmp
push
pop
movsb
sti
aaa
sub
or
mov
or
xchg
pop
xor
insl
sbb
dec
movsl
lods
outsb
sub
ret
or
sbb
or
aaa
outsl
sub
scas
adcb
mov
popa
insl
xchg
xor
mov
pusha
mov
mov
push
and
and
or
cmp
test
push
std
test
in
sti
stos
es
xchg
jg
das
shl
cmpsb
repz
call
or
lcall
push
dec
insb
std
xchg
sahf
insb
shll
mov
mov
lock
adc
ljmp
inc
shlb
aam
jmp
inc
mov
pop
into
mov
or
mov
sarb
outsb
push
push
fmull
js
paddusw
xchg
mov
push
bts
testl
jge
ret
mov
push
sub
outsw
fwait
xor
sarb
lahf
sub
jno
mov
int
adc
or
add
int
push
pop
jmp
loop
popa
jg
add
cmc
dec
btc
aam
adc
push
dec
add
mov
sub
fisttps
sbb
dec
push
xchg
inc
fwait
dec
push
adc
pop
xor
mov
pop
repz
sahf
inc
pop
add
and
add
popa
sub
and
mov
mov
and
es
mov
data16
xor
mov
adc
lods
and
xor
pop
movl
dec
pop
mov
sub
nop
shl
sbb
and
jg
cmpsl
into
cmp
cmp
xor
nop
push
inc
loop
xchg
push
jecxz
jo
div
push
sub
insb
mov
test
dec
test
aaa
push
lds
xlat
xor
inc
hlt
je
add
cmpsb
ja
jns
xchg
pop
mov
push
mov
ret
push
int
in
sar
js
xlat
idivb
lock
pop
mov
hlt
mov
mov
fxam
mov
test
aad
movsl
les
loopne
shrl
add
sbb
or
xchg
xchg
gs
fsts
movsb
cmp
xchg
rcrb
mov
ret
push
and
dec
outsb
fwait
xlat
fcom
lret
iret
jnp
mov
mov
es
call
mov
inc
testb
gs
mov
pop
addl
cmp
push
xor
stc
cld
lcall
push
call
cmpsl
cmp
pop
in
inc
gs
cltd
xor
test
mov
mov
inc
mov
mov
cmpb
mov
repnz
popa
shr
adc
ss
aad
ss
push
cwtl
xor
push
mov
pushf
loope
movsl
repz
jnp
enter
jbe
pop
xor
or
mov
push
leave
mov
les
inc
cltd
pop
stos
cld
fbld
inc
shl
mov
notb
imul
cmp
daa
repz
testb
imul
mov
aas
lea
out
dec
andb
xor
jmp
or
dec
std
sub
lfs
rorb
and
js
mov
in
shlb
loop
je
inc
xorw
outsb
call
ret
call
and
push
jb
int
sti
stos
dec
inc
dec
push
push
jle
mov
xlat
insl
lret
inc
mov
jg
mov
adc
insl
jae
fwait
push
pusha
js
xor
jge
add
mov
or
cmpsb
cmp
jmp
or
and
stos
sub
or
sti
xchg
push
in
or
dec
xor
repz
lock
ret
push
jmp
cmpsl
shrb
fnsave
pop
fldt
int
xorb
push
fdiv
test
lods
add
test
xchg
sub
fcomp
jb
jg
mov
cwtl
stc
jne
xchg
lods
mov
lods
inc
add
pop
je
in
in
aas
scas
and
aad
sbbb
int
pop
push
sbb
xchg
inc
push
in
js
out
pop
adc
mov
jae
movsb
popf
or
dec
and
mov
xlat
mov
push
pushf
pop
mov
fucom
stc
add
jl
jnp
xchg
pop
push
pop
push
and
xchg
mov
xchg
leave
in
aad
mov
sarl
lcall
jne
mov
sbb
sbb
ror
lea
mov
add
repnz
movsb
mov
call
test
jmp
or
push
mov
rcl
loopne
mov
push
lods
stos
sbbl
stos
jnp
lds
dec
aad
cmc
and
and
pop
addr16
xchg
lcall
stc
mov
and
cmpsb
xchg
add
cs
dec
dec
xor
in
mov
xchg
jmp
ret
mov
ds
ss
fwait
jge
and
cwtl
into
fmull
mov
fstpt
out
mov
mov
xor
jg
les
mov
push
jae
or
cmp
sub
jae
sub
add
loop
out
adc
cmp
dec
mov
les
loopne
cmp
loop
int3
push
lods
xlat
enter
mov
in
ja
lds
nop
cmc
in
and
dec
add
mov
cmpb
push
push
shr
mov
out
mov
fisttpl
in
xor
and
add
test
cmp
xor
dec
fsubrs
test
sahf
dec
dec
xchg
jl
insl
xorl
insl
ud1
mov
lret
xchg
idivb
mov
mov
fdivr
pop
outsl
adc
mov
xor
pop
push
lock
fnstsw
out
add
sbb
in
arpl
sub
and
in
test
ret
out
rcrb
xor
insl
pushf
fdivp
jp
in
adc
push
addr16
cmp
arpl
outsb
push
mov
pusha
lea
sbb
fistpl
xchg
ror
pop
sub
sub
es
push
pop
xchg
lret
lods
mov
inc
aaa
adc
leave
mov
repz
fs
and
mov
loopne
stos
in
std
sub
mov
pop
add
xchg
ss
sbb
insb
dec
cmpb
xchg
sub
jg
and
push
out
pop
nop
or
adc
andb
sbb
outsl
lods
push
lods
sbb
xor
aaa
sbb
gs
xorl
cltd
dec
or
mov
mov
test
lahf
aaa
xor
addr16
push
lret
out
sti
in
cmp
jecxz
scas
cmp
subl
rorl
scas
aad
push
mov
fcompl
mov
jo
add
sbbb
cmp
stc
cmp
adc
push
xor
shrb
mov
push
inc
fidivrl
pop
cld
mov
push
fldl2t
inc
or
add
mov
ljmp
inc
inc
xor
dec
rcl
idivl
sbb
loopne
decl
jl
femms
or
out
mov
jl
adc
iret
mov
insb
popa
cmp
jb
mov
frstor
rclb
adc
jge
dec
inc
pushf
out
lcall
sub
inc
sahf
lods
ja
sbb
test
ror
sbb
push
mov
jbe
test
orl
ljmp
mov
sahf
aaa
lock
ss
aas
jge
sbb
fistl
or
fwait
lock
mov
shl
add
nop
pop
outsl
xchg
repz
sbb
sub
pop
push
mov
lret
and
ja
mov
lcall
jns
push
pop
and
insb
push
and
inc
pop
movb
cmp
ret
test
mov
or
ja
push
add
test
ds
leave
ljmp
and
iret
fsubs
lret
adc
mov
hlt
loope
lds
cltd
iret
mov
push
daa
stos
sub
push
out
fiaddl
cmc
mov
ds
lock
sub
stos
fwait
jne
ror
xchg
and
adc
cmp
push
dec
lahf
pop
fnstcw
cmp
inc
inc
repz
inc
gs
leave
pop
or
inc
mov
fucomip
pop
sbb
shll
add
aad
fwait
and
adc
fwait
xor
xor
dec
fadds
ficomps
fs
ret
shll
or
cmp
flds
idivb
loope
jbe
mov
or
or
xchg
fistpl
xchg
mov
int
add
test
pop
mov
mov
xor
das
sbb
lds
sbb
push
enter
inc
mov
divl
sbb
aam
mov
dec
iret
sub
sbb
jo
call
fisubl
lods
jg
loopne
or
push
or
cmc
arpl
testl
js
cld
loope
mov
pop
pop
mov
nop
daa
adc
cltd
jb
cwtl
jbe
into
popa
sbbb
mov
test
sbb
push
dec
adc
lods
test
sbb
xchg
sub
xchg
enter
push
addr16
inc
lret
hlt
xor
fmulp
loopne,pt
lret
adc
dec
movsb
sbb
shrb
dec
pop
xor
int3
pop
sub
dec
out
pusha
test
outsb
sub
in
xlat
mov
and
enter
flds
stos
les
jmp
loop
shl
pop
in
xor
mov
push
inc
shll
sbb
mov
or
pusha
or
rorl
mov
sub
rcrl
jp
in
xchg
xor
push
add
daa
mov
push
cmp
mov
pop
push
nop
pop
in
adcl
idivb
and
pop
fsts
ret
jle
cmpl
leave
adc
mov
xchg
rep
popf
and
mov
movsl
xchg
addb
sub
push
mov
aad
out
lods
mov
das
adc
mov
mov
daa
mov
cli
pop
shlb
dec
call
lods
daa
cmpsb
leave
arpl
sahf
mov
test
out
fbld
sbb
cli
and
mov
jl
pop
jmp
and
or
cmpsb
ja
fsubs
adc
movsb
inc
std
fnstenv
leave
pusha
testl
or
out
pop
es
pop
jle
pop
mov
xlat
and
xchg
idivl
jno
mov
les
push
mov
outsl
and
add
pop
push
mov
in
push
mov
mov
push
mov
mov
gs
ret
lcall
popa
xor
fdivl
inc
or
sbbl
insl
fbstp
xchg
mov
js
mov
call
dec
cwtl
imul
mov
push
pop
out
xchg
aad
popf
jge
movsb
into
or
out
dec
dec
cmp
sbb
out
xchg
xchg
aam
mov
int3
add
nop
jle
in
jge
push
bound
or
test
repnz
push
dec
shlb
sti
cmpsl
pop
dec
repnz
inc
movsl
arpl
mov
and
adc
dec
ret
adc
mov
push
adcb
dec
inc
lock
gs
sub
fs
cmp
add
mov
push
test
mov
in
dec
test
mov
fxch
push
inc
push
sub
lret
push
xchg
lcall
shrb
mov
stc
dec
ds
insb
inc
bound
in
test
test
sbb
imul
js
and
mov
les
jnp
iret
enter
arpl
sbb
orb
pop
out
or
sbb
sbb
jg
jno
adc
lcall
xchg
dec
add
xor
ljmp
adc
mov
add
loope
vsubsd
adc
das
sub
push
mov
aad
bound
push
sbb
push
cld
and
aad
jge
outsl
scas
rcl
pop
int
nop
incl
lcall
xchg
mov
jns
in
je
mov
cmp
sti
jbe
cmp
ret
push
adc
insb
les
lds
out
pushf
jo,pn
js
mov
out
xchg
or
dec
pushl
push
dec
pushf
lds
loop
mov
into
adc
test
aam
sub
jge
aaa
dec
pop
jp
dec
lea
addr16
jge
dec
ffree
inc
addr16
nop
mov
inc
mov
or
push
add
lea
incb
jmp
dec
mov
dec
sbb
ficoml
pop
add
incb
jo
push
push
sub
xor
xchg
sub
test
adc
or
mov
aas
loopne
jecxz
push
cmp
xchg
insb
add
frstor
mov
sbb
cmp
pop
gs
adc
mov
out
ja
or
xor
mov
and
int3
push
adcl
push
adcl
and
fidivs
inc
mov
inc
lahf
lods
mov
cli
outsl
push
cmp
cmp
adc
push
ljmp
jno
mov
jmp
mov
cli
xchg
mov
outsl
pop
jns
fs
adc
lea
jmp
bound
xor
push
xor
mov
dec
movsl
push
mov
ficoms
sbb
out
cmovl
add
xlat
outsb
push
add
out
mov
dec
in
adc
push
mov
inc
fmull
jg
push
jmp
pop
aad
in
lods
mov
jae
jnp
cmp
repnz
lock
outsb
inc
add
xor
mov
adc
inc
fs
nop
test
adc
jb
push
dec
loop
cmp
aad
mov
push
xchg
sbb
bound
push
in
shlb
cmp
push
cmc
jmp
test
mov
push
dec
pop
xchg
jbe
jl
iret
mov
xor
mov
inc
movsl
fcoml
mov
stos
sub
mov
pop
loopne
addr16
sub
outsb
add
loopne
imul
out
and
cwtl
push
pop
lea
xchg
pop
pop
sub
mov
inc
in
aaa
jns
enter
dec
fs
out
scas
das
cmp
inc
mov
je
add
movb
cmp
out
enter
xor
movsb
jae
push
in
inc
adc
push
mov
cmp
xor
leave
fisttpl
jne
je
pop
int
in
sti
rclb
mov
sbb
sbb
jge
fidivs
stos
xchg
repnz
and
adc
hlt
and
add
loopne
add
inc
or
xchg
xor
dec
add
aas
adc
dec
fisubl
lock
push
lcall
sahf
clc
inc
out
pushf
daa
pop
in
dec
pop
aam
cwtl
sarl
orl
sbb
pop
int
stc
inc
mov
loope
sub
push
cmp
add
outsb
sub
pop
mov
repz
arpl
lea
jg
mov
cld
cmp
lods
cmovle
insl
addr16
imul
and
fcoms
cmp
or
push
insl
add
sahf
loope
iret
push
sahf
xor
mov
test
push
fidivrl
fidivrs
lret
add
std
push
das
movb
mov
fistl
loopne
jp
adc
stos
cmp
fisttps
insl
push
incb
or
sub
gs
mov
lea
popa
inc
sbb
jle
test
scas
in
cli
jae
sub
leave
pop
les
fistpll
in
scas
shrl
divb
stos
mov
sbb
or
stos
sbb
mov
push
xchg
out
dec
repz
into
aam
add
fsubl
dec
mov
iret
pop
inc
pop
stos
mov
popa
xor
inc
aas
add
mov
adc
lods
cmp
in
divb
scas
fstl
out
mov
ds
pop
add
mov
outsb
adc
mov
out
and
or
cmpsb
call
jmp
cmpl
in
mulb
sub
lock
js
fldl2t
leave
lcall
mov
fdivrl
sub
xchg
dec
and
fsubp
push
insl
ja
add
add
push
cmpsb
out
xchg
enter
enter
cltd
jae
lret
aas
scas
inc
jo
data16
inc
scas
cmp
dec
add
mov
shrl
push
mov
xchg
sub
push
cmc
pop
jle
xor
les
lds
push
add
dec
pop
jns
xor
sub
lcall
mov
movsl
sbb
mov
cmp
jns
out
sbb
add
sbbl
push
add
not
or
adc
xor
lcall
or
mov
sbb
and
push
push
test
xchg
sub
jno
push
clc
ss
jae
mov
jge
fnstsw
orb
test
nop
daa
mov
fsubrl
mov
sbb
or
addl
jp
ret
bswap
fs
insb
cmp
sbb
in
push
mov
je
mov
je
test
aam
sub
mov
call
ret
xchg
in
pop
fcoms
cmpsl
scas
adc
sarl
xchg
pop
fs
imul
lods
loope
lds
cmc
mov
enter
pop
lcall
ljmp
montmul
cmpsb
orb
aaa
shlb
cmp
dec
inc
jecxz
pop
cli
inc
mov
fwait
or
pop
lahf
jle
pop
testb
movsl
push
dec
lods
call
cli
gs
iret
popf
add
inc
jo
cmc
dec
mov
ret
fnstsw
and
out
sub
push
xor
enter
in
test
mov
mov
jo
mov
pop
mov
fstl
xchg
adc
add
pop
mov
add
rcrw
sbb
hlt
aam
add
bound
lock
pushf
fistpll
movsl
sub
and
in
test
cmpsb
and
mov
and
or
test
sbb
mov
jns
cmp
cld
inc
cmpsl
arpl
adcb
inc
fucom
inc
lcall
inc
fisttps
jmp
mov
ljmp
loope
sbb
fistps
push
sbb
daa
movsl
cmp
sahf
dec
mov
out
lds
adc
roll
scas
mov
sub
dec
or
sbb
push
lock
aaa
sub
add
sbb
inc
push
fsubr
pop
xlat
decb
mov
mov
js
test
xor
and
inc
leave
push
xchg
cwtl
and
outsl
je
popa
out
pop
fnstenv
lods
sbb
add
nop
out
sahf
sub
sub
push
in
dec
shlb
aaa
mov
and
xchg
adc
mov
jb
inc
sub
inc
repnz
dec
fists
or
jp
popf
cld
lcall
jbe
xor
mov
xchg
add
lret
imul
dec
clc
inc
mov
test
dec
scas
pop
dec
icebp
mov
wrmsr
movl
aam
adcl
mov
jae
push
mov
push
jb
xchg
int3
and
rep
lret
lret
dec
push
jmp
push
fimull
adc
imul
lock
mov
stos
loopne
popa
jnp
adc
popf
call
add
rolb
mov
int
cmpsb
jne
mov
jns
in
mov
stc
adc
jns
xor
mov
stc
mov
je
imul
sahf
outsl
daa
xchg
data16
xchg
add
cmpl
leavew
fmul
inc
data16
mov
mov
mov
xor
dec
and
clc
cmp
mov
int3
mov
cmp
mov
dec
mov
add
mov
jecxz
xchg
jmp
or
xor
divb
or
dec
pop
fidivrl
xchg
xor
add
mov
jns
add
fcmove
pop
and
add
andb
jl
test
adc
jb
mov
jl
mov
xor
and
adc
inc
je
inc
mov
sarb
and
cli
mov
jecxz
ja
fcoms
xor
xor
pop
sub
out
scas
or
pop
lods
mov
and
sbb
inc
or
dec
xor
jl
jp
mov
pop
mov
xor
lods
sbb
insl
dec
xor
call
add
fs
inc
mov
cmpl
mov
cmp
cmp
out
xchg
add
arpl
clc
xchg
pop
cmpb
rcl
inc
add
sbb
mov
fs
cmp
push
xchg
test
sbb
adc
dec
inc
pop
pop
movsl
mov
sahf
mov
push
fwait
popa
arpl
adc
xchg
daa
and
test
inc
pusha
pop
pop
or
push
cmp
mov
fldl
scas
mov
shr
inc
push
pusha
mov
mov
push
mov
dec
sub
cmp
psubq
adc
inc
pop
adc
or
jns
jg
sbb
aad
fiaddl
dec
repnz
sub
push
das
mov
loopne
insb
pop
jno
insl
add
cwtl
out
push
add
fs
jl
es
sti
push
add
cmp
jnp
mov
out
inc
test
mov
ja
leave
test
pop
xlat
or
or
scas
addl
push
cmp
fsubrs
or
loope
dec
notb
divb
cmpsb
in
dec
outsl
test
out
xor
outsb
notl
out
inc
call
lea
mov
push
push
ljmp
testb
pop
je
mov
adc
adc
daa
inc
jb
add
sahf
ja
pop
mov
dec
out
xor
std
test
sbb
push
and
mov
xor
sbb
xor
loop
inc
dec
out
sub
dec
ficoms
sub
push
fimuls
gs
je
sub
cs
lds
repnz
insl
mov
call
push
lods
ret
pop
sbb
cmp
sub
cmp
sub
fmuls
add
aas
lahf
jle
sub
fdivrl
mov
mov
xchg
xchg
pop
fcompl
repnz
jge
test
out
jo
sbb
gs
mov
xor
jl
out
dec
dec
divl
out
mov
dec
cmpsb
sub
shl
pop
or
jl
sub
mov
stos
in
or
push
cmpsl
out
adc
push
addb
xchg
adc
xor
mov
jl
jp
lods
dec
les
mov
loope
ret
adc
cmp
rcrl
fwait
pop
nop
rcrb
fdivs
icebp
xchg
xchg
cmpsb
cmpsl
jl
fsubs
pop
outsb
std
ss
sub
sbb
out
cld
out
mov
lods
jle
loope
into
shrl
dec
movsb
adc
jne
smsw
insl
sbb
popa
add
inc
and
sti
fistpll
jb
push
data16
xchg
pop
dec
push
lea
test
addr16
xchg
jmp
addr16
sbb
out
push
dec
js
popf
hlt
jmp
loop
xchg
mov
or
sub
call
mov
sahf
scas
and
subb
rorl
in
test
insb
push
xchg
imul
jne
sub
jmp
dec
pop
pop
stos
jne
mov
jbe
inc
xchg
adc
inc
mov
fistpll
mov
mov
cmp
cmp
push
sarl
jmp
mov
pushf
and
inc
test
out
mov
outsl
jg
imul
test
or
push
push
mov
sub
pusha
mull
aas
mov
or
mov
and
mov
sub
and
sahf
push
cmc
jle
std
scas
adc
cmp
push
mov
dec
inc
pop
js
pop
mov
lcall
enter
shr
or
lods
jle
jno
iret
inc
pop
sbb
fbstp
push
push
mov
jp
add
loop
loopne
add
fsubrs
mov
ds
loop
sbb
pusha
sbb
adc
hlt
xor
inc
adc
arpl
dec
sub
cltd
inc
ss
or
mov
sub
pop
cpuid
mov
jg
mov
mov
cmp
xchg
mov
mov
adc
and
mov
mov
rolb
testb
jmp
jae
out
pop
leave
adc
es
sbb
and
jnp
mov
mov
std
inc
fcmovne
scas
and
cwtl
das
test
lea
sti
xchg
push
jne
xchg
movsb
pop
pop
jle
scas
jle
xchg
xor
inc
push
mov
push
test
mov
push
inc
data16
dec
loopne
lods
leave
add
xchg
addr16
inc
add
and
rolb
mov
adc
loopne
dec
xchg
dec
sub
xor
imul
loop
sbb
rorb
dec
mov
cs
ljmp
in
mov
fdivs
xchg
sub
jle
mov
std
lahf
jae
clts
dec
and
add
ficoml
fmull
sub
jnp
fisubrs
pushf
das
or
cmp
sbb
mov
xor
xor
cmp
out
in
les
xchg
mov
fsts
fnstcw
dec
push
lret
dec
ret
lods
sub
and
mov
iret
loope
cld
push
jne
mov
scas
pop
out
cmp
jo
in
stc
adc
jg
cmpsl
add
repz
cltd
sub
sti
cmpb
dec
mov
fwait
repnz
sub
aam
adc
mov
stos
subb
test
push
mov
les
push
inc
loopne
mov
call
push
aam
xchg
push
popf
mov
popa
adc
mov
sbbl
das
repnz
sub
out
arpl
imul
cli
xchg
xorb
es
xchg
pop
mov
mov
jmp
cmc
mov
fistpl
inc
push
or
or
adc
xchg
ds
xchg
jno
xchg
jecxz
mov
xor
test
dec
xchg
movsl
push
mov
xor
inc
movl
lcall
mov
insb
dec
push
sbb
mov
adc
pop
sub
scas
or
mov
inc
and
stos
jmp
or
sbb
arpl
xchg
inc
stc
add
add
sti
ja
repz
add
icebp
js
sub
repnz
enter
les
aaa
cmp
imul
mov
roll
xlat
insb
sbb
push
cmp
or
mov
ret
mov
aad
mov
mov
rolb
pop
insl
xchg
push
xor
adc
pop
insb
mov
push
pop
xchg
mov
popa
lret
fidivrl
push
lea
sbbb
mov
mov
jmp
pop
fisubl
int3
inc
fistps
xchg
and
loope
inc
cmp
jg
loop
add
inc
ret
sub
adc
mov
mov
sub
push
cs
push
cltd
adc
mov
xchg
loop
repz
and
pop
mov
dec
gs
les
xchg
adc
xchg
adc
lret
push
mov
mov
mov
jl
pop
cs
push
imul
sbb
pushf
cmp
adc
fisubl
jl
sahf
cwtl
xor
push
push
inc
sbb
push
lsl
mov
testb
sbb
imul
pushf
lock
pop
lret
aad
pop
mulb
aas
aaa
rclb
adc
jo
enter
loope
mov
pop
push
mov
lea
pop
dec
pop
adc
adc
clc
mov
test
jl
fstl
jo
gs
push
mov
insl
stos
lds
repnz
out
outsb
mov
nop
outsl
shll
push
push
pop
addr16
jo
sub
xor
xor
fmuls
or
sub
jmp
sub
mov
cmpsb
sub
add
pop
push
lcall
aam
stos
pop
outsb
mov
jb
mov
and
shrl
xchg
and
pop
sbb
out
mov
scas
lcall
ficompl
inc
push
gs
or
xchg
cmpsl
decl
aaa
jns
add
xchg
mov
xchg
cmp
stos
push
and
adc
or
jb
shrb
rolb
mov
out
inc
fmul
and
fldl
jnp
int3
ja
lret
enter
test
scas
push
mov
cli
lret
cmpl
ljmp
imul
pop
enter
inc
inc
mov
xchg
icebp
mov
cmpsb
mov
call
pop
xchg
mov
push
mov
jmp
cmp
in
stos
sbb
fdivl
pusha
dec
inc
sbb
rorl
push
out
js
jb
mov
mov
push
bound
jp
mov
js
jbe
inc
and
pop
dec
imul
and
jle
loopne
fidivl
cmp
sbb
std
les
nop
adc
cmc
pop
movsb
rcrb
and
dec
push
cmc
jg
andl
inc
insl
dec
int3
push
test
daa
cwtl
pop
add
pushf
or
imul
push
jp
cs
adc
pop
icebp
xchg
outsb
adc
lahf
mov
adc
pushf
sbb
ds
mov
pop
test
and
cld
xchg
mov
sbb
mov
insl
add
jnp
aas
push
outsl
outsb
call
cmc
adc
mov
andl
idivb
loop
hlt
mov
loope
jnp
xchg
xchg
jp
cmp
sub
mov
addr16
inc
push
or
xlat
nop
fs
iret
cmp
xlat
pop
or
inc
cmp
fdivrs
fwait
xor
and
iret
jmp
loopne
add
mov
cmp
ret
icebp
dec
jl
lahf
mov
xchg
out
xchg
ja
pushf
mov
ljmpw
gs
pop
xor
sbb
push
cmpl
push
jne
push
cmp
inc
inc
iret
fistl
xchg
pop
adc
push
jb
cmc
mov
fidivrl
sub
xor
adc
popa
shll
sti
pusha
bound
dec
add
mov
daa
sub
adc
mov
outsb
xlat
jbe
push
std
stos
add
mov
int3
sbb
movsl
les
mov
insb
add
xchg
movsl
push
in
js
xlat
daa
nop
nop
inc
sbb
jae
scas
xor
mov
jp
push
stos
add
and
mov
push
ret
sbb
or
shlb
add
inc
add
push
ljmp
jno
scas
sti
or
shlb
fldcw
jns
cltd
jmp
out
mov
mov
in
mov
sub
or
xchg
pop
mov
push
or
mov
ja
test
jle
leave
xchg
sub
dec
jl
jge
inc
mov
inc
shlb
outsl
jnp
fistpll
dec
or
mov
arpl
je
push
adc
fisttps
add
mov
rcrl
adcb
mov
scas
jg
jle
fimuls
and
push
test
fs
popf
fbstp
xchg
inc
mov
cmc
pop
movsb
es
mov
jmp
mov
das
iret
aad
nop
popa
dec
dec
cmp
lahf
lods
and
and
pusha
pop
jno
pop
lea
daa
push
mov
ja
mov
sbb
push
scas
mov
popf
pop
scas
inc
add
imul
pop
push
jb
adc
mov
mov
mov
mov
xlat
lods
push
popa
cmp
inc
jmp
sahf
aas
pop
movsl
sbb
xchg
pop
stos
xor
mov
dec
push
xchg
lret
mov
push
add
call
dec
leave
pop
mov
jp
bound
inc
mov
mov
enter
stos
and
rclb
fnsave
mov
ret
es
dec
push
jp
lret
pop
adc
shlb
mov
dec
bound
mov
es
push
jo
cmpl
inc
pop
xor
or
subl
ss
lods
mov
test
inc
pushf
push
mov
lret
mov
fcomp
push
mov
ret
xchg
add
cs
imull
cmp
xorl
scas
xor
dec
cmp
inc
fcoml
jbe
add
insl
add
into
or
push
jns
pusha
mov
dec
lods
movsb
xchg
movsb
das
adc
xor
imull
pop
movsb
xor
or
xchg
mov
push
push
mov
rorl
sub
and
mov
add
push
js
cmp
mov
jge
aad
xchg
not
sbb
out
adc
push
push
fdivr
dec
sti
mov
sub
inc
lahf
sbb
mov
push
js
or
and
and
imul
daa
jecxz
je
push
test
sbb
movzbl
outsl
mulb
mov
mov
aam
aas
add
imul
cmc
inc
in
cmp
inc
fmulp
dec
push
jbe
fsubrl
add
in
fsubrs
mov
std
fnstsw
jae
lods
xor
or
xor
fists
pop
mov
test
jns
sub
inc
pop
mov
aad
scas
push
sbb
mov
or
xchg
cli
loopne
push
in
push
pop
add
in
cs
add
jecxz
das
frstpm(287
jne
cmpsl
cmpsl
out
mov
xchg
mov
push
in
mov
movsl
sbb
mov
scas
jne
test
lret
xor
ss
xor
ret
xchg
sub
cs
mov
scas
inc
sub
dec
mov
xchg
and
lahf
ss
in
and
es
inc
sub
dec
jecxz
dec
daa
cmp
sub
and
sti
loope
mov
lea
test
adc
clc
jno
jmp
scas
sbb
cmc
rolb
mov
rorb
or
sub
in
adc
xor
iret
lret
push
adc
pushf
into
mov
add
ja
mov
and
inc
iret
fmuls
mov
adc
lret
or
fs
stos
mov
fldcw
nop
jl
icebp
cmc
sbb
lods
aam
cmpsb
cmp
inc
ds
xor
nop
je
sahf
lods
dec
and
cmpsl
xchg
test
add
stos
xchg
stc
je
cwtl
ljmp
cltd
shlb
and
jp
xorb
add
fnstsw
mov
mov
xchg
push
add
xchg
inc
mov
test
arpl
loope
jnp
mov
out
sti
dec
into
push
pop
mov
aam
dec
sarl
add
rorb
and
repnz
pop
pop
imul
inc
je
inc
xor
popf
push
stos
mov
jbe
cltd
mov
or
mov
mov
cmp
loope
insb
pushf
inc
sbb
add
cld
les
fwait
jg
outsb
lods
dec
gs
scas
das
les
sbb
jle
sbb
push
std
imul
adc
sbb
mov
push
mov
cmpsb
xor
push
xchg
pop
push
add
or
ja
aas
fcompl
push
lcall
inc
cltd
pcmpgtb
fstpt
scas
fldl
sbb
pushf
pusha
repz
and
mov
dec
push
dec
mov
vpshuflw
push
or
nop
daa
mov
call
ljmp
orb
insb
sub
rcrl
jns
aaa
dec
sub
decl
mov
and
push
in
push
out
fldenv
sbbb
in
icebp
bswap
sbb
adc
cmp
ja
mov
dec
loopne
xchg
dec
dec
sbb
inc
int3
push
loopne
lea
mov
sbb
sbb
pop
and
pop
pusha
mov
xlat
nop
int
stc
push
push
lahf
lods
inc
pop
cmp
or
add
stos
sbb
adc
xlat
mov
sbb
pop
xor
inc
std
pushf
pop
aad
popf
notb
mov
ret
fwait
test
out
sbb
in
xor
call
xor
xchg
pop
and
int
iret
repnz
sbb
js
pushf
loopne
inc
push
adc
cmpl
sub
pop
sbb
addr16
idivb
mov
ds
out
test
pop
mov
sub
pusha
rcll
loop
testl
aas
test
lret
ret
mov
dec
loopne
xor
icebp
adc
jb
dec
cld
mov
stc
dec
xor
inc
out
andb
xchg
iret
inc
pop
cmc
lcall
or
push
in
insl
mov
sahf
pop
push
or
icebp
inc
aam
cmp
test
xchg
test
dec
jg
jge
xchg
arpl
inc
jo
jg
ror
loope
push
out
rcll
daa
jmp
pop
add
mov
pushf
shll
ret
dec
and
xor
testl
cltd
rcrl
std
push
and
and
mov
lea
dec
inc
fdivrs
adc
aad
hlt
adc
rcr
xor
out
mov
test
jmp
stos
lahf
push
xchg
mov
jg
dec
sahf
or
shrb
jbe
inc
pop
scas
lock
or
mov
imul
pop
sub
sbb
pop
push
xor
pop
adc
arpl
dec
dec
jp
adc
aas
mov
imul
lea
cmp
xchg
leave
insb
pop
mov
pop
jmp
sar
jg
test
pop
shr
or
pusha
sahf
notl
cltd
mov
sub
add
push
loop
movsb
mov
adc
call
mov
sti
push
mov
popa
and
nop
jp
fsubr
mov
bound
pusha
push
insl
cmp
push
jnp
pop
adc
xor
roll
aam
push
daa
out
or
mov
mov
stmxcsr
daa
insl
adc
add
inc
xor
cmp
cmp
dec
xlat
jae
rorl
sub
insl
pop
sbb
dec
shlb
gs
roll
dec
add
ljmp
nop
push
xor
cmp
ja
aam
adc
mov
xchg
lds
ds
ret
pop
daa
adc
cwtl
int
cld
repz
cltd
xor
adc
sub
sbb
mov
mov
mov
punpckldq
sbb
push
dec
add
xlat
xor
or
pop
sbb
push
push
mov
das
cmpsl
mov
ficoms
adcb
fcomip
mov
mov
cmpsb
fnsave
aam
pop
add
adc
jmp
cmp
sbb
inc
shl
testl
push
mov
jno
adc
bound
cmp
push
inc
jmp
cmp
lret
in
les
adc
push
hlt
jb
sub
inc
movsb
stos
jle
pop
xchg
xchg
jb
cmp
pop
addr16
popa
pop
cmpl
mov
out
and
jmp
scas
lock
inc
loopne
outsb
jp
or
es
imul
or
xor
lret
cmp
inc
push
aaa
fdivp
je
cmpsb
or
outsb
cmpb
mov
sahf
dec
push
cmpl
in
lcall
xchg
imul
js
ret
jo
js
outsb
xchg
sbb
mov
fwait
xchg
jo
jmp
icebp
ret
pop
mov
jl
mov
mov
pop
ja
push
push
dec
in
mov
mov
lret
dec
in
add
push
inc
iret
xchg
jle
lods
mov
push
ret
bound
and
pop
out
jle
pop
out
neg
jbe
out
or
push
testb
jp
dec
pop
int3
adc
jp
xchg
or
lods
cli
out
push
sub
cmp
dec
sbb
jp
movsb
jmp
jbe
and
dec
push
jns
push
loop
sub
and
xor
push
fimull
and
dec
and
rorb
jmp
cmpsl
dec
repz
es
daa
push
std
into
sbb
cld
push
popa
in
and
cmpsl
fmull
cmp
aam
sub
cmp
hlt
testl
sbb
cmp
or
mov
aaa
in
out
pusha
pop
inc
inc
or
mov
stos
cmp
fcmovnbe
xor
mov
imul
fmull
fdivl
fdivs
pop
es
adc
test
out
shll
mov
mov
pop
pop
div
xchg
cmc
rorb
jle
pop
or
push
std
mov
jp
mov
mov
mov
push
adc
push
je
sub
stos
lods
adc
mov
dec
daa
xor
or
mov
add
fdivs
outsb
jp
or
mov
clc
in
xchg
push
sahf
aad
dec
mov
pusha
loop
inc
push
ja
xchg
sub
cltd
loop
cmp
mov
dec
mov
xor
lods
xchg
lds
ds
cmp
mov
pushf
pop
or
jg
jle
movsb
dec
test
fidivs
insl
fmull
das
in
test
push
lret
repnz
lds
in
xchg
push
aaa
dec
fnclex
call
and
adc
arpl
or
shrl
loopne
or
fldenv
popa
xor
lods
push
jae
dec
push
cwtl
fmull
lcall
sbb
dec
rcl
repnz
add
inc
add
mov
into
repnz
repnz
pop
and
popf
mov
and
lods
add
mov
mov
out
and
pushf
xchg
mov
nop
outsl
jmp
nop
mov
push
push
cmpsb
pop
movsl
cmp
gs
sub
stc
cmp
ret
jns
jecxz
push
cmp
adc
lock
push
xchg
mov
imul
addb
jmp
loopne
jnp
enter
mov
stc
test
cld
movsb
cmp
mov
jmp
cmc
fstpt
add
les
and
imul
xchg
std
mov
sahf
insl
pop
repnz
push
out
push
xor
mov
stos
cmpb
dec
cmpsl
or
insl
enter
jnp
xor
inc
std
push
jmp
sarl
fstpl
sub
and
mov
jg
xchg
jbe
rcr
inc
pop
push
cmc
sti
xchg
daa
sub
repz
inc
test
push
cmp
scas
push
or
cld
or
repnz
lock
fstpl
fldcw
dec
shrb
loope
in
dec
jl
icebp
sarb
pop
mov
jb
in
mov
ljmp
cwtl
cmpsl
push
mov
mov
xor
xor
add
mov
scas
into
lahf
or
arpl
jg
aam
inc
pop
cmova
add
iret
scas
xchg
orb
jns
jae
jae
jp
adc
mov
gs
add
mov
push
jecxz
test
ja
ret
pop
pop
decb
les
idivb
pop
out
test
xchg
fisubrs
std
xor
sbbl
fdivr
xchg
mov
fistpl
mov
mov
xchg
sub
inc
mov
cld
leave
add
mov
inc
mov
icebp
pop
out
lods
mov
and
lods
pop
xchg
bound
into
es
pusha
clc
inc
pushf
sbb
mov
push
mov
ds
cmpsb
pop
cmpsl
cmp
stos
gs
addr16
jmp
jne
test
es
cmp
je
aaa
popf
je
add
xor
sti
jbe
cmp
fs
add
andb
xchg
jp
sti
jno
test
in
mov
aaa
stos
lcall
in
jmp
pop
ja
pop
mov
popf
movd
xor
std
lea
out
mov
mov
and
sub
cmpsl
adc
test
inc
push
icebp
xchg
mov
pop
cmpsl
inc
add
rcrb
or
in
inc
pop
xor
xrelease
cmp
push
xchg
sahf
jge
outsb
cmp
pop
cltd
fcomps
insl
sub
dec
cmp
fwait
mov
hlt
dec
or
adcb
lock
popa
fadds
insl
jge
into
scas
fnsave
in
aam
pop
shll
inc
ret
data16
hlt
data16
lret
mov
pop
mov
jp
or
adc
or
cmc
cs
je
ffree
pop
clc
inc
jo
ficomps
pop
inc
or
sbb
sbb
shlb
push
push
sbb
testl
ds
negb
adc
sbb
sub
jns
and
mov
bound
add
jno
mov
jmp
lock
sbb
xor
mov
push
push
inc
cld
dec
adc
std
inc
sub
shrb
add
push
jnp
xchg
subl
addr16
repnz
dec
or
ficompl
fwait
mov
push
lds
lods
sub
jbe
outsl
daa
fs
insl
les
daa
dec
loope
addr16
xchg
cltd
and
dec
scas
out
fsubr
mov
aaa
fldenv
pop
aad
data16
adc
push
mov
push
imul
jge
jecxz
je
lcall
fstpt
lds
adc
sbb
lcall
mov
sbb
test
inc
mov
pop
add
fdivrs
inc
ror
ret
loopne
sbb
std
loop
inc
leave
pop
pop
sub
inc
or
fsubrs
loop
adc
push
int
jne
ds
lret
cltd
mov
psrad
jno
cli
shrb
xor
lcall
mov
cmp
mov
mov
cli
adc
or
xor
and
jecxz
mov
adc
or
push
jl
or
neg
inc
inc
mov
std
nopl
dec
lahf
xor
and
jl
lret
mov
mov
test
xchg
adc
data16
ja
xor
add
aas
hlt
subl
int
cmpsl
aas
dec
xor
mov
out
adc
add
sub
push
xor
rol
mov
inc
in
push
rclb
call
mov
xlat
jbe
xor
mov
jecxz
in
nop
call
jge
test
cltd
out
pop
andb
xor
fistpll
mov
mov
jo
pop
sbb
pop
mov
xchg
pop
testl
add
add
lret
add
stos
xor
xchg
imul
fidivrs
pop
lea
and
sbb
ret
push
adcl
mov
test
cs
and
imul
adc
das
pop
insb
push
mov
sbb
popa
hlt
popa
mov
adc
xor
popa
dec
pop
push
insl
mov
ret
and
fmull
cli
sbb
jge
jae
jle
cmp
xchg
mov
add
push
enter
or
mov
pop
mov
add
lea
in
in
pop
ljmp
fcmovu
lret
push
push
sbb
push
ss
pop
loope
fwait
mov
mov
fwait
xchg
sub
add
jbe
lods
mov
pusha
add
data16
decl
hlt
add
xor
xchg
jp
xor
repz
fwait
ret
dec
dec
pop
dec
jb
xchg
lds
jno
pop
nopl
mov
aad
fdivl
hlt
fdivl
xchg
jle
or
insl
fadds
xor
fwait
inc
mov
lock
and
and
outsb
sub
or
mov
mov
les
xchg
stc
push
mulb
dec
stos
out
das
enter
icebp
shll
fimuls
cmp
cmp
adc
inc
fs
lret
xlat
mov
dec
les
jb
aad
ljmp
cmp
xchg
adc
xor
push
xchg
pop
or
and
daa
inc
add
std
adc
mov
add
mov
bound
jl
in
test
jge
test
sbb
xor
or
jno
dec
cs
jo
rcl
mov
xchg
divl
dec
into
les
fdivrl
orl
jg
cmpsb
push
movsb
mov
pop
xchg
pop
xor
or
push
pop
add
mov
iret
dec
lods
mov
cmp
push
or
pop
xchg
sub
stos
jecxz
lea
aad
push
inc
int3
adc
in
inc
cld
decl
imul
jo
or
imul
aam
xor
fistpl
push
pop
and
andl
pop
jae
pop
sub
mov
iret
and
xor
popf
lods
sub
or
iret
popf
pop
bnd
lret
loop
filds
jns
cmp
dec
fimull
mov
rclb
test
pop
dec
cmp
jno
inc
xchg
xchg
outsl
inc
fisubs
fidivrl
scas
das
cmpb
les
sysret
push
stos
rcrl
mov
aas
inc
shl
mov
xchg
imul
icebp
mov
sarl
mull
in
push
xlat
cs
inc
xor
xor
push
or
push
and
cwtl
or
mov
test
das
lret
adc
int3
dec
pop
sub
cmp
inc
ljmp
lret
push
sbb
int
jno
xchg
adc
sbb
dec
jmp
adc
out
mov
sarb
xchg
add
push
sub
jb
push
aaa
ret
or
and
lret
push
fwait
in
jmp
leave
or
cltd
push
enter
xchg
lret
push
lods
xchg
stos
je
dec
loope
ss
mov
aas
in
xlat
mov
stos
xchg
add
icebp
jno
pop
sub
mov
test
ret
xor
or
mov
cltd
jo
mov
frstor
test
jnp
add
sbb
aam
pop
das
push
fidivrl
stos
pusha
pop
cmc
outsl
movsl
lret
lock
pop
es
jle
into
mov
sub
cmc
xor
sbb
mov
push
test
aam
negb
stc
pushf
mov
pushf
gs
or
and
inc
inc
mov
push
sbb
and
test
test
pop
movsb
test
pop
add
mov
outsb
out
iret
scas
aaa
push
ljmp
add
inc
ja
cmp
pop
xlat
mov
ja
mov
cmp
inc
pop
cmpsl
sbb
fs
ret
xchg
adc
insb
push
adc
dec
arpl
shl
sbb
lcall
and
scas
dec
cmp
clc
and
adc
adc
std
mov
nopl
mov
or
inc
out
xchg
xor
cwtl
popl
popf
shlb
sub
and
hlt
xlat
pop
fcmovnbe
and
adc
xchg
outsb
mov
add
push
outsb
xor
fwait
decb
popf
popa
aas
cmp
xchg
mov
nop
push
test
jo
scas
mov
xchg
jb
cmp
xchg
pop
fistl
sbb
cld
test
mov
xorl
or
and
cs
andl
fstpl
mov
gs
rcll
rcrb
das
dec
mov
push
imul
loop
iret
shlb
xor
jmp
movsb
mov
test
add
daa
mov
push
stos
fxch
loope
xchg
aam
cli
mov
add
sub
xchg
dec
mov
cwtl
add
xchg
fwait
pop
dec
hlt
nop
cld
lcall
cwtl
je
loop
mov
shll
ss
jl
popf
cmp
scas
fwait
push
pop
insb
mov
xor
adc
jae
xor
nop
inc
insb
fldenv
pop
or
mov
inc
xlat
out
daa
jecxz
mov
repz
inc
mov
cltd
cli
or
mov
rorl
mov
imul
or
aas
push
or
push
add
dec
push
lea
adc
cmp
leave
push
cmp
mov
push
int3
sbb
int3
movsl
in
arpl
int3
adc
pop
loope
xor
call
inc
cmp
dec
popa
and
aad
mov
inc
inc
dec
es
jno
popf
mov
js
in
or
cltd
aas
jmp
je
sub
pop
jne
inc
adc
ds
imul
mov
pop
out
xorl
and
dec
fsub
int3
inc
loope
push
loopne
mov
icebp
jb
mov
shrb
ja
arpl
in
add
cmp
ja
ljmp
inc
mov
gs
xchg
shl
jb
ss
push
daa
in
cmpl
or
ret
ds
rcr
test
inc
mov
jle
iret
cmp
fdivl
pop
arpl
xchg
cmp
lods
loopne
mov
lods
mov
xor
into
repnz
xlat
inc
push
add
orps
aas
sahf
cmc
jae
jmp
cmp
or
adc
cmp
stc
inc
xchg
popa
inc
dec
inc
fcompl
xchg
xchg
jmp
mov
and
ret
sbb
mov
jb
mov
push
cs
loop
and
iret
pop
cmp
fdivs
mov
push
sub
fldcw
lahf
sarl
sti
stos
aam
aaa
pop
push
dec
movsb
loopne
fcompl
and
pusha
notl
lcall
filds
ret
and
mov
adc
mov
ret
jne
call
sbb
and
mov
pop
inc
aas
mov
push
push
sub
imull
nop
sub
push
xor
out
mov
dec
daa
int3
mov
testl
jnp
push
lods
shl
and
inc
movsb
xor
adc
inc
mov
jp
sub
pushl
andb
shlb
hlt
pop
or
xchg
sbb
mov
sahf
ret
adc
or
fidivl
insb
shrl
and
pop
inc
gs
xchg
addr16
cmp
mov
fwait
out
sti
xchg
and
xor
push
mov
ret
sub
mov
inc
dec
insl
jnp
fcompl
in
movb
cmp
cmp
das
imul
cwtl
xchg
stc
je
xor
out
popa
flds
repz
sub
lds
inc
pop
icebp
adc
into
fsubl
scas
jp
loope
xchg
sbb
test
mov
ret
sarl
ret
mov
or
hlt
fadds
roll
lods
dec
pusha
fbld
lcall
lock
jle
imul
pushf
push
mov
push
subl
pop
xor
outsl
mov
cli
xchg
sub
jle
and
add
push
or
out
out
sbb
fdivs
xchg
adc
in
xor
insl
or
mov
loopne
dec
add
test
cmp
js
les
lret
pop
sub
fdivs
dec
pop
outsb
jnp
test
dec
mov
ja
pop
sbb
xchg
xor
fistl
mov
lea
push
test
sbb
jae
mov
push
invd
xchg
cmp
or
sub
test
cmc
pop
push
ss
push
push
dec
fisubs
push
lret
xor
subb
ret
cs
sub
lahf
sbb
jb
cmpb
mov
mov
mov
sbb
cmp
mov
push
ljmp
jno
push
mov
movsb
mov
les
pop
dec
loopne
les
adc
jae
sarl
xor
aam
outsb
test
mov
and
hlt
add
les
adc
das
les
or
imul
lret
repnz
jl
add
aad
xor
jl
arpl
loope
pop
div
pop
sub
and
jnp
sbb
jns
fwait
xor
inc
aaa
jns
out
addb
and
xchg
push
roll
aaa
push
test
fwait
mov
mov
inc
cmp
inc
jmp
stos
call
clc
arpl
stos
mov
int
fsub
in
test
inc
dec
or
rcl
fsubrs
pop
out
adc
dec
scas
imul
push
fiaddl
jne
push
or
sbb
mov
cli
or
dec
push
ss
sbb
mov
ljmp
insb
add
inc
xchg
sub
rcrl
insl
xchg
lahf
clc
ljmp
jo
xchg
xor
xor
pop
les
xor
inc
ja
and
ds
mov
cmpl
jne
loop
imul
inc
push
or
test
mov
ret
js
add
jbe
adc
xchg
aaa
push
lcall
pop
roll
data16
xor
test
or
test
jecxz
xchg
push
mov
pusha
adcb
push
jmp
inc
adc
lock
mov
jge
mov
negb
and
mov
leave
pusha
shll
mov
pop
test
mov
sbb
call
ds
out
bound
mov
cmpsl
outsb
mov
push
es
inc
sbb
push
scas
adc
jnp
push
push
popa
and
sbb
sbb
pop
adc
or
sub
scas
daa
inc
loope
repnz
sub
fcmovu
jnp
cmpsl
les
cmpb
jmp
pop
imul
mov
popa
ret
aad
mov
cmp
gs
insb
mov
mov
pop
js
push
adc
movsl
inc
das
cwtl
mov
subb
xchg
push
mov
in
jo
dec
mov
add
xchg
mov
sahf
out
add
ret
mov
pop
pop
cs
pop
cmp
iret
mov
pusha
push
or
cmp
push
pop
push
cld
xchg
xchg
sub
mov
stos
adc
mov
dec
lret
rcl
mov
cwtl
and
inc
pop
mov
and
mov
mov
adc
xor
stos
cmp
enter
sbb
movsb
imul
test
mov
xchg
movsl
in
or
cmp
lahf
add
fcomi
dec
test
xchg
lds
push
push
roll
test
orl
dec
dec
xlat
in
repz
lret
add
pop
jb,pt
jno
pop
pop
dec
add
stc
sbb
divl
cmp
dec
sbb
pop
inc
dec
xchg
adc
imul
mov
pop
es
jg
inc
fistl
call
pop
and
nop
mov
bound
push
jmp
popf
shll
jle
mov
mov
int
cmp
stos
or
lds
je
jle
or
outsb
addr16
pmaddwd
shr
sub
cmp
testb
jmp
or
or
pusha
mov
addr16
xchg
idiv
xchg
push
cld
or
mov
push
cwtl
pop
cmp
scas
inc
xchg
in
addr16
loope
mov
pop
repz
jns
and
addr16
dec
dec
loop
and
mov
mov
shll
lret
call
pop
insb
neg
fistl
xor
mov
pop
dec
inc
mov
test
rcl
notl
cmp
inc
rcrl
mov
mov
or
pop
sub
cld
push
push
mov
fs
shrb
lods
jmp
mov
ljmp
pop
push
insl
sub
mov
repz
cmpsb
arpl
xor
push
out
mov
cmp
pop
loope
mov
jp
or
pop
inc
mov
inc
or
push
rep
aaa
dec
js
mov
jne
mov
xor
push
aad
int3
sar
inc
or
sbb
roll
push
repnz
sbb
xchg
add
xor
scas
sbb
shlb
mov
sbb
mov
sbb
adcb
pop
jmp
out
repz
add
lahf
ss
aam
lods
mov
jecxz
ljmp
cmpsl
mov
aas
iret
out
clc
stos
mov
repnz
lcall
outsb
xchg
ss
adc
shrl
cld
fidivrl
dec
lods
fcmovbe
sub
sub
mov
xor
or
iret
xchg
mov
and
repz
jge
pop
ja
dec
inc
int3
dec
pop
fmull
movsl
lds
pop
jnp
outsl
into
pop
fnstenv
push
adc
mov
inc
je
stc
aas
adc
mov
push
xchg
test
push
insl
pop
cmpsb
cmc
mov
scas
or
in
adc
push
cmp
lahf
ss
jb
mov
jns
and
add
mov
lcall
shl
cs
fadds
jmp
sub
jmp
lds
inc
push
mov
ret
dec
mov
jne
jmp
mov
cmp
push
jb
scas
rorb
or
pop
roll
rol
lret
pop
insb
rcll
inc
pop
cmc
hlt
push
mov
rol
pop
mov
insb
or
sahf
or
js
lea
pop
cmp
sti
inc
cmp
cwtl
jns
or
mov
lcall
in
loopne
pop
adc
xchg
xor
scas
popf
fbstp
out
and
mov
mov
rcrb
insl
mov
sbb
imul
sbb
xchg
iret
mov
xchg
in
adc
mov
imull
iret
sub
cmpsl
adc
scas
xchg
cld
xor
fistl
aam
mov
xor
jo
mov
popl
mov
fstl
rolb
pop
shrb
loop
popa
icebp
sahf
or
cltd
mov
into
daa
cmp
test
test
mov
or
inc
rep
mov
jne
loopne
rcr
scas
sub
dec
imulb
mov
outsb
sbb
sub
jmp
clc
xor
or
imul
stos
inc
push
jbe
mov
xchg
adc
mov
jp
dec
cmp
cmpb
xor
dec
add
jbe
imul
hlt
pop
jp
pop
push
and
rcll
xchg
inc
stos
lds
sbb
and
dec
negl
in
outsb
jl
sbb
testb
cmp
add
dec
pusha
shl
sahf
ljmp
cs
flds
and
clc
cmp
movsl
cmp
pop
in
sub
xor
push
in
ficompl
orl
jno
sub
in
test
scas
daa
outsl
xorl
das
sbb
xchg
xorl
test
dec
out
dec
popa
cs
pushf
sbb
es
rorb
mov
mov
adc
jmp
and
scas
mov
arpl
push
mov
sarb
mov
mov
imul
out
dec
pop
and
js
and
add
xchg
jae
inc
fildl
pushf
and
in
sub
mov
jno
mov
inc
call
jecxz
aaa
icebp
mov
mov
mov
sbb
scas
lcall
in
mov
ja
jne
outsl
xchg
add
fsubrs
xchg
mov
xor
push
popa
loop
mov
movsl
nop
daa
mov
cld
adcl
jbe
es
lds
int3
or
aam
mov
pop
sahf
adc
jne
mov
bnd
adc
mov
lds
xchg
mov
and
rep
leave
adc
bound
in
jb
mov
adc
movl
mov
cs
mov
sub
fadd
mov
mov
xlat
outsb
sbb
mov
adc
push
xor
js
and
mov
inc
sbb
xor
xor
inc
rcrl
mov
int
test
and
pop
insl
mov
mov
mov
dec
and
inc
or
out
dec
fbld
cmp
aaa
push
adc
out
and
cs
iret
push
mov
xor
inc
push
lock
lods
jmp
insb
add
fstpt
jo
mov
mov
sub
jp
adcb
and
neg
adc
jge
adc
push
jmp
bound
jle
repnz
push
mov
icebp
dec
and
out
hlt
sub
sbb
sbb
lret
inc
aas
in
push
call
jbe
sahf
xor
mov
push
mov
clc
aam
mov
fcmovu
jb
mov
sub
cmpsb
stc
push
mov
fs
mov
lret
and
jle
xlat
dec
or
les
jnp
mov
sub
mov
mov
sbb
pop
sub
cmp
or
hlt
es
loope
pop
loope
stos
inc
push
sub
sub
push
popf
dec
mov
roll
jmp
mov
dec
fcompl
lods
push
pusha
test
xchg
lret
xlat
sbbl
jge
loopne
xchg
mov
push
mov
andb
lret
inc
arpl
cli
push
push
je
sbb
add
xor
in
xchg
xor
sbb
pop
sbb
loopne
pop
add
cmp
std
and
sbb
sbb
test
dec
cltd
pop
rcll
cmp
data16
jnp
mov
imul
outsb
lods
test
sbb
mov
mov
lahf
jb
push
xchg
mov
cld
sub
pop
fwait
xor
orb
inc
xor
lock
loope
xchg
ficomps
fwait
push
imul
push
mov
and
add
sbb
mov
cmp
jns
fcmove
xchg
sbb
in
mov
push
add
les
or
sbb
lea
dec
mov
mov
int3
adc
add
je
and
cmc
mov
cmpsb
mov
pop
jbe
mov
dec
inc
pop
mov
jl
xchg
sbb
and
dec
out
xor
cmp
mov
in
je
aad
inc
add
ss
or
decb
mov
or
aam
xchg
leave
xchg
xor
out
test
insb
in
cmp
xor
xchg
cmp
imul
lds
stc
rol
mov
out
sub
jnp
jp
dec
test
adc
test
rorl
sahf
push
pop
dec
mov
cmp
fldl
movsl
test
pop
xor
rorb
xchg
scas
mov
adc
cli
mov
xchg
ja
out
sarb
jb
xchg
lds
test
out
ret
std
rorb
xlat
stc
icebp
sbbl
fwait
pop
dec
xchg
int3
and
int
in
and
sbb
jbe
fbstp
adc
xchg
sbb
ret
jg
or
dec
cmp
dec
push
inc
jecxz
jecxz
xchg
inc
cld
into
add
rcl
mov
mov
jle
lret
rolb
sbb
lods
sbb
movl
int3
fsubrl
pop
xor
int
idiv
stc
pop
ret
mov
outsb
push
and
js
incl
nop
insl
xchg
jmp
dec
mov
sahf
lods
mov
shr
push
mov
jne
push
xor
pop
test
out
jl
dec
scas
mov
sub
mov
into
push
gs
lcall
xor
stos
lock
int3
add
inc
aas
push
out
fiadds
loope
mov
cmpsb
jae,pt
and
lods
out
shr
and
andl
fmul
sub
add
jl
mov
sbb
movsl
mov
insb
cmp
je
subl
daa
js
sbb
nop
sbb
add
shrl
dec
fsubs
int3
push
dec
out
push
adc
adc
mov
std
out
mov
mov
mov
adc
mov
insl
lcall
cmp
in
aaa
pop
jbe
xchg
push
mov
sbb
in
push
ss
lods
cli
shrb
xlat
sti
mov
push
loop
pop
xlat
sub
dec
dec
fists
mov
ja
pop
rcr
push
add
cmp
bound
sub
fs
addr16
mov
mov
push
test
mov
in
in
xchg
loopne
and
pop
jecxz
cmp
add
mov
or
push
add
sbb
and
mov
cmpsb
xlat
inc
add
cmp
adc
cmp
rclb
xchg
les
repnz
ret
mov
lret
jle
loope
sub
dec
mov
cmp
hlt
mov
icebp
cmp
loopne
fstpl
cmp
insl
mov
adcb
mov
rorb
stc
or
ficompl
cld
ficoms
xchg
adc
adc
fbld
push
xlat
xchg
pop
or
cs
icebp
aaa
andl
daa
loopne
js
into
cmpsb
cmp
test
mov
and
and
xchg
loope
mov
cld
jo
xor
arpl
movsl
and
adc
push
add
cmpsl
ret
pusha
les
jle
or
dec
push
dec
xchg
xchg
jge
add
ret
call
mov
mov
sub
xchg
cmp
mov
adc
add
lret
test
ss
mov
cmp
inc
mov
aam
lea
addr16
jmp
outsb
scas
nop
mov
jb
popa
scas
imul
mov
adc
enter
jmp
stc
push
repz
arpl
iret
xlat
sarb
jo
cmp
fnstsw
repnz
stos
pop
loope
filds
ror
in
mov
or
sub
dec
cltd
pop
dec
lahf
xchg
xor
in
cmp
bound
out
ret
and
pop
repz
ret
test
inc
push
cltd
jmp
js
repnz
fwait
or
cs
andb
pop
sbb
pop
call
or
jle
push
jecxz
xorl
out
push
pop
cmp
jmp
jecxz
mov
push
pop
jecxz
cmp
mov
lock
cmp
cltd
arpl
pop
dec
cmpsl
aam
push
push
data16
adc
and
adc
daa
cs
rclb
mov
and
xor
adc
fidivl
dec
adc
and
add
imul
adc
sub
mov
jns
pop
xor
adc
sub
stos
xor
cltd
cmp
or
jo
xchg
xchg
pop
pop
xor
jne
mov
inc
sbb
fidivrl
es
xlat
cs
pop
lock
cmp
popf
rcll
jns
push
scas
daa
out
sbb
ljmp
mov
mov
mov
lods
add
sub
mov
mov
add
mov
mov
fmuls
fcoms
push
push
push
clc
adc
lret
or
inc
dec
inc
fidivrs
sub
outsl
push
xchg
or
movsb
pop
popf
jns
js
mov
jb
insb
fs
notb
shrl
insb
jbe
adc
push
in
pop
ss
cwtl
inc
jae
jge
pop
in
mov
lret
xor
sub
adcb
push
jp
mov
popw
ss
psubw
std
push
inc
add
addr16
loope
stos
jmp
in
add
cmp
cmp
hlt
cmp
push
mov
rclb
lds
mov
out
xchg
ret
fcoml
xchg
mov
addr16
mov
cmpb
leave
sarl
mov
icebp
aam
shlb
nop
xorb
push
in
scas
daa
inc
mov
mov
or
insl
test
mov
and
ja
test
nopl
xchg
xchg
ret
pushl
ds
idivb
movsb
add
cmp
stos
inc
call
sti
enter
test
push
xchg
cmp
cwtl
leave
iret
push
out
out
sahf
shl
push
ss
pop
xor
fistpll
js
rolb
add
shll
cmpsb
or
sub
mov
mov
lock
outsl
mov
xchg
cmp
adc
icebp
jp
subb
xor
pop
iret
cmpsl
push
out
movsl
in
int
mov
repz
lret
bnd
mov
in
jne
or
xor
cld
fwait
hlt
push
xor
jae
in
mov
aad
fwait
push
lods
outsl
loop
add
insl
call
test
shrb
fstpl
add
into
insl
in
add
xor
aaa
push
inc
pop
add
mov
test
sbb
imul
xchg
jmp
stos
std
push
and
outsb
ror
mov
dec
mov
inc
ret
or
cmpsl
cmp
jbe
pusha
test
addb
shll
movsb
dec
mov
std
xchg
sbb
mov
inc
sub
pop
xor
pop
cmpsb
je
flds
les
xchg
sub
imul
xor
adc
push
dec
into
gs
sub
insb
push
sbb
push
push
push
mov
jno
and
out
ret
jle
mov
push
aam
mov
mov
out
or
xchg
sub
test
push
push
cmpb
pop
fmuls
aam
cmp
pop
dec
rorl
sbb
lock
add
jmp
stos
mov
fcmovb
fnstsw
lret
hlt
push
and
jle
and
inc
lahf
icebp
xchg
mov
dec
adc
jge
mov
cmp
cmp
dec
mov
sti
pop
sub
sahf
xchg
loope
imul
and
scas
sub
leave
aam
pop
cltd
pop
test
in
pop
jl
adc
sub
xchg
ds
das
repnz
rcrb
jnp
dec
xor
jno
loop
outsl
cmpb
sub
lcall
mov
out
lock
fucom
inc
xlat
adc
jg
sub
jecxz
loop
cmp
insb
add
lods
mov
nop
sbb
adc
inc
push
xchg
pop
repz
xor
jp
stc
xlat
xchg
mov
and
pop
shrb
sbb
jne
push
mov
mov
cmpsl
dec
movsb
mov
xchg
inc
pushf
cmp
adc
rclb
call
mov
fldl
mov
sti
adc
pop
add
addl
out
xor
cmpsl
push
faddl
jns
mov
fadd
jecxz
inc
sub
lods
fdivs
pop
dec
fidivs
orl
stos
shll
add
and
daa
mov
stos
jmp
mov
xor
and
fisubrs
add
jg
mov
cmpsl
xor
dec
xorb
pop
xchg
adc
test
aas
js
mov
or
mov
pusha
lods
pop
cmp
popf
scas
inc
jns
dec
faddl
leave
xor
pop
cmp
and
inc
xchg
sub
je
sub
mov
jbe
loopne
push
dec
adc
cwtl
mov
int3
pop
les
ja
out
test
sub
scas
int
ds
jg
xorb
dec
sbb
mov
xlat
gs
aam
aad
scas
icebp
add
aaa
stos
xor
mov
data16
stos
fildl
inc
jg
ret
adc
sub
les
xchg
jo
cmpsb
cmp
push
gs
adc
inc
sbb
jne
cmc
mov
mov
jns
adc
cmp
lret
sub
mov
cmpsb
shlb
ss
out
sbb
mov
test
add
pop
mov
add
bound
sub
mov
xchg
shlb
in
adc
xor
sbb
cs
repz
shll
adc
xchg
add
icebp
xor
mov
mov
cmp
cmpsb
jle
jp
lahf
insl
add
jnp
dec
mov
or
push
pop
cmp
pushf
test
and
mov
in
inc
pop
divps
pusha
bound
das
int
pop
mov
outsb
das
pop
pop
imul
leave
dec
pushf
add
mov
lahf
out
inc
push
adc
mov
scas
out
cld
in
cmpsl
std
jg
pop
cmp
push
stos
mov
test
enterw
and
dec
or
pop
sbb
vmwrite
movsb
push
das
inc
and
adc
push
jne
dec
and
mov
push
lds
and
dec
inc
xchg
mov
pop
jmp
jecxz
xlat
sub
gs
out
xor
fcmove
push
dec
imul
push
or
push
ss
sti
and
add
fldcw
cmpsl
shll
enter
dec
aas
bswap
bound
lods
fcmovne
jo,pn
popa
into
inc
scas
ret
inc
xor
xor
fidivl
pop
insb
sub
mov
in
repz
movsb
mov
pop
sub
pop
xor
jno
xor
push
cmp
mov
negl
cmp
fldcw
xchg
sti
int
out
pop
out
mov
jbe
jo
mov
fists
stos
adc
das
lret
lcall
addr16
fdivrl
mov
aad
lret
loop
pusha
and
lds
lock
dec
ret
xlat
jle
icebp
dec
dec
xchg
lcall
gs
fsts
cmp
xor
xor
movsl
mov
adc
push
inc
ret
xor
loop
repz
nop
pop
popf
and
and
pop
imul
lods
xor
fstps
dec
xor
rcrl
mov
repz
loope
iret
or
gs
outsl
aad
jne
sub
cld
test
mov
scas
arpl
cmp
stos
xchg
dec
dec
dec
jnp
dec
pop
aaa
ret
scas
dec
dec
fmull
rol
xorb
xor
lret
push
mov
mov
cmp
dec
out
mov
popf
sbb
jl
xchg
jo
ret
test
movsl
ret
and
push
mov
int3
in
xor
mov
pusha
or
push
xchg
sub
je
mov
xchg
pushf
addr16
sbb
mov
in
push
mov
jo
fs
jbe
loopne
jp
fisttpll
movsl
jmp
out
loope
lods
mov
and
pop
xchg
add
js
mov
jl
cmpl
mov
xchg
xor
mov
dec
push
push
pop
xchg
in
mov
jae
jne
inc
push
call
xchg
bound
pusha
xor
loope
adc
lods
pop
in
jno
xchg
fidivl
stos
pop
inc
leave
sbb
lea
dec
je
jl
rcll
movsl
xchg
mov
or
scas
je
data16
cmp
mov
dec
rcrl
pop
jg
lds
or
cmp
fbstp
cwtl
push
mov
push
std
test
push
jb
outsl
inc
std
push
test
sub
inc
adc
mov
xchg
dec
cmc
mov
leave
sarb
into
inc
imul
dec
test
popa
mov
adc
xlat
test
or
es
bound
inc
outsl
js
jl
lcall
test
xchg
pop
ret
sub
push
mov
movsl
xor
inc
or
in
mov
and
mov
nop
inc
mov
cwtl
aad
xchg
fidivl
xor
jae
mov
out
mov
fisttpll
cmp
mov
sub
ret
add
pop
ds
sbb
es
push
out
les
insb
pop
pop
adc
or
and
mov
pushf
mov
mov
mov
rcll
push
xor
xchg
xor
call
adc
mov
ret
jnp
jmp
or
mov
ds
mov
sbb
push
mov
push
xor
fisubrl
je
cmpsb
aam
add
outsb
cmp
push
dec
fstps
stos
or
xor
mov
cmp
sahf
push
lret
push
add
sbb
xor
or
test
mov
repnz
cmpl
popf
inc
sbb
pop
repz
mov
and
vorps
mov
cld
and
pop
push
inc
sbb
lock
jb
add
push
mov
xor
xor
arpl
aaa
imul
test
scas
aas
add
jg
xorl
nop
lret
mov
scas
clc
addr16
outsb
jae
lahf
daa
test
push
cltd
and
das
push
sbb
or
dec
mov
push
mov
fcompl
lock
cli
mov
or
adc
bound
mov
in
inc
out
in
add
mov
cmpsl
test
sti
popa
cmp
pop
dec
negl
clc
les
adc
push
ficoms
add
push
out
in
hlt
push
lea
mov
lods
outsb
xchg
scas
push
xchg
jge
shl
fsubrl
sbb
aas
xchg
mov
fstps
cltd
fisubrs
or
jl
cmp
pop
mov
mov
mov
xlat
call
lods
shl
rcrl
pop
lock
add
mov
les
lcall
and
or
cmp
pop
adc
push
jecxz
add
fiadds
sub
in
incl
sbb
iret
inc
xchg
int3
scas
inc
cmp
fildll
jl
mov
jnp
scas
pop
mov
push
mov
and
fwait
dec
out
in
or
pop
and
mov
pop
hlt
sbbl
sbb
cmpsl
cmp
xor
mov
fwait
es
dec
fldl
mov
or
outsb
sub
in
sbbl
add
out
push
mov
ljmp
in
aam
dec
stc
cmp
cwtl
mov
jl
rolb
mov
sbb
pop
hlt
sbb
dec
lods
mov
xchg
push
xchg
aam
mov
jo
cmp
imul
push
push
cmp
fwait
cwtl
sub
inc
test
xchg
pop
mov
or
iret
jle
sbb
xor
inc
xchg
in
pop
mov
lods
mov
and
ljmp
sbb
popa
inc
sbb
adc
test
dec
cmc
lret
aam
xchg
lock
pop
into
les
push
and
out
hlt
push
and
mov
popf
shl
ficomps
xchg
push
popf
repnz
mov
add
bound
lret
call
movsb
jecxz
xchg
aam
sbb
outsl
sub
cmp
push
sub
cmp
inc
sbb
cmp
loopne
loop
sahf
pop
cltd
nop
mov
mov
push
popf
sbb
mov
outsb
add
rcrl
inc
sbb
addr16
insb
outsb
icebp
mov
test
jbe
add
jle
test
arpl
loop
xchg
ds
jbe
insb
jg
push
inc
mov
jg
inc
or
add
jne
xchg
inc
test
inc
out
fxtract
push
hlt
pop
test
lods
and
push
pop
popf
mov
push
shl
inc
lret
pop
in
xchg
lahf
xchg
jbe
neg
cmp
cmc
dec
sarb
pushf
fnstcw
aaa
inc
push
cmpsl
xor
imul
sbb
adc
pop
push
sbb
cs
shll
imul
xlat
push
mov
fcomip
sti
aas
scas
cmp
xchg
mov
xor
and
inc
imull
adc
xor
mov
sbb
add
repz
sbb
push
push
mov
cli
mov
icebp
jg
and
or
jge
test
jg
sub
sarl
sbb
outsl
mov
insl
mov
xlat
or
scas
dec
idivl
iret
adc
xchg
jg
pusha
rorb
xor
leave
repnz
or
in
adc
mov
jnp
push
push
mov
decl
sbb
pop
fnsave
add
dec
icebp
jle
fistpll
das
or
mov
jp
dec
cld
sbb
adc
test
insl
int3
pushf
push
pop
mov
popa
adc
fsubrs
cmp
xor
dec
pusha
mov
jmp
lret
jp
sub
pop
pop
jno
pop
lods
scas
xchg
mov
std
outsl
daa
addr16
mov
jns
push
pushf
adc
cli
mov
xor
xor
adc
push
jns
test
cld
cmp
jp
clc
pop
add
push
out
cmp
cli
insl
js
lods
aam
stos
and
pop
or
imul
xchg
xchg
or
xor
out
ds
repz
psubw
jnp
cld
dec
add
xor
push
leave
and
fdivrl
push
xchg
je
sahf
cwtl
mov
js
mov
jb
ficoml
sbb
push
pop
mov
pop
test
iret
rcll
jno
jbe
lock
mov
ja
push
nop
dec
fs
push
push
fdivs
bound
inc
xlat
mov
ds
arpl
jl
mov
test
iretw
and
pop
adc
fsubrp
mov
push
push
pop
mov
repnz
push
inc
xchg
out
xor
xor
sbb
lods
out
ja
pop
mov
xchg
cmp
and
jns
in
stos
inc
hlt
adc
loope
and
xlat
bound
jmp
inc
leave
adc
leave
ficompl
mov
fidivs
loopne
repz
das
mov
test
pop
mov
jl
out
sub
cmp
popa
stc
nop
xchg
sub
lea
fsubl
dec
sub
ds
repnz
nop
mov
rolb
std
shlb
aam
mov
push
adc
jmp
dec
pop
out
cmp
inc
fs
in
test
pushf
imul
stos
insb
insl
add
movsb
sete
jle
push
xlat
xchg
pop
mul
out
fwait
popf
or
mov
dec
cmp
push
outsb
insb
andb
cmp
or
aas
shrb
popa
imul
hlt
pop
xor
jmp
jnp
insl
sbb
or
or
add
mov
mov
fs
push
mov
xor
fdivl
mov
sbb
out
bound
xchg
imull
jecxz
mov
pop
jmp
pusha
sbb
push
sbb
mov
fs
dec
jge
out
insb
lret
adc
outsb
and
popf
mov
xchg
test
repz
stc
dec
cmp
adcl
int3
lret
mov
clc
into
int
sub
jae
pop
and
and
mov
cmp
sahf
add
sbb
movsl
cmp
pop
adc
popf
mov
fnstcw
in
shrl
inc
inc
cmp
popf
xorl
aas
clc
subb
pushf
scas
shll
push
dec
push
mov
sub
fildll
cmp
and
or
inc
push
comiss
and
xor
ret
lods
push
data16
out
sbb
xor
movsb
jns,pt
and
test
fs
stos
lods
jno
data16
mov
xor
mov
cmpsl
mov
cmp
jnp
and
ja
cwtl
imul
adc
ret
sub
adc
pop
dec
mov
lds
add
lcall
or
push
call
pop
daa
mov
data16
push
xchg
pop
push
xchg
xor
stos
ret
out
or
xor
mov
leave
stc
cmpsb
rol
in
cmp
stos
jbe
sbb
in
sahf
icebp
fstps
rorl
movsb
mov
ja
std
adcb
push
loope
cltd
sub
push
jle
mov
pop
or
cmpb
mov
xor
push
mov
iret
mov
js
repnz
adc
mov
xor
in
xlat
aad
ljmp
inc
or
mov
test
aam
mov
mov
add
les
sub
mov
mov
adc
mov
test
into
cmpsb
adc
dec
pop
pop
scas
add
lods
cs
in
add
jmp
or
sub
pop
sbbl
or
sti
pop
xchg
inc
add
inc
mov
cmp
sbbl
mov
shr
ret
add
sbb
sub
dec
in
sbb
mov
loop
fnstsw
sub
int
sub
or
push
and
xchg
in
out
cmp
xchg
push
jb
lock
arpl
and
cmp
sbb
pop
mov
and
pop
out
repz
dec
cld
ljmp
addb
sub
mov
into
jbe
jg
sarl
sbb
adcb
pop
sub
jmp
mov
aas
rcll
or
cmp
or
inc
lret
mov
pushf
popf
mov
push
mov
mov
and
cmovns
je
cmc
mov
sub
cmp
adc
inc
mov
jb
popf
xor
inc
cmp
mov
dec
loop
jo
ret
jnp
mull
jge
insb
ror
sahf
sbb
test
cmpsb
rolb
mov
shr
xchg
xor
aas
adcw
jae
sub
jbe
sbb
lds
mov
dec
dec
decl
cmp
scas
mov
xchg
push
ss
call
insb
mov
sbb
pop
dec
ljmp
mov
push
sub
add
repnz
daa
mov
adc
dec
xchg
dec
stc
or
cmp
int
sbb
pop
sahf
jno
daa
shrb
loopne
ret
in
cmp
adc
clc
and
lods
call
jmp
sbbl
inc
mov
or
int3
iret
xchg
mov
fwait
push
cmpsb
push
aas
mov
outsl
je
push
sub
decl
mov
push
lods
and
push
xsave
jge
popf
scas
mov
loopne
jp
aad
adc
ljmp
pop
inc
out
les
push
ficompl
sbb
cltd
mov
ss
popa
test
add
lret
sbb
mov
dec
mov
mov
mov
fs
adc
jge
call
or
adc
jecxz
div
cmp
call
mov
out
sub
xchg
inc
push
inc
js
imul
inc
pop
ljmp
mulb
cmp
arpl
mov
mov
push
imul
and
mov
shl
fistpl
xchg
adc
pop
inc
cmpsb
adc
or
mov
arpl
lret
out
pop
push
inc
fdiv
mov
pusha
push
mov
out
cld
into
aam
and
mov
cmp
inc
add
or
lea
fwait
lcall
dec
outsb
insl
iret
mov
cli
push
aad
and
int3
sbb
dec
mov
inc
cmp
xor
mov
js
imul
mov
push
fcom
xor
std
xor
pop
dec
push
arpl
popf
daa
cmp
sbb
and
add
jnp
and
sub
repnz
push
push
cmp
cmpsl
sar
dec
sbb
arpl
push
adcl
push
push
jl
repnz
and
xchg
mov
in
inc
lock
mov
mov
shr
sub
inc
add
gs
add
in
xor
or
inc
popa
xor
mov
ret
inc
leave
pusha
jae
in
dec
sbb
addr16
gs
xchg
cmp
mov
icebp
mov
cltd
mov
daa
insb
nop
int
shlb
aad
xor
lods
es
xchg
shll
mov
mov
packsswb
fmul
adc
xor
out
mov
push
std
in
xlat
outsl
xchg
cmp
cltd
loope
pop
mull
jp
lahf
cli
mov
push
cmpsb
ljmp
xorb
sarb
mov
sub
xchg
shll
cmp
pushf
inc
xchg
inc
icebp
aam
arpl
sbb
cwtl
ss
cmp
sbb
pop
dec
gs
cmp
ret
sub
movsl
mov
lods
inc
clc
xchg
addr16
into
sahf
pusha
sbb
push
fildl
jb
and
push
mov
js
pop
ds
int
push
sbb
out
loopne
sub
mull
jne
sub
inc
mov
jg
sbb
loopne
mov
insl
loopne
pop
jae
mov
hlt
popa
and
pop
add
pop
xor
jbe
rcll
shl
addr16
mov
ret
pop
gs
movsl
mov
outsb
daa
movsb
xchg
dec
notb
lds
jl
clc
sbb
jle
push
mov
sti
or
or
repz
ror
icebp
adc
ljmp
cmp
pop
mov
jmp
cwtl
in
push
nop
inc
mov
jne
mov
mov
dec
in
je
push
mov
imul
mov
jge
xor
sbb
push
into
xor
roll
jmp
jnp
in
pop
es
or
pop
ds
inc
push
push
popf
ss
jbe
cmpb
mov
xor
insl
add
xchg
loop
jae
popf
or
adc
out
dec
icebp
aas
add
add
xlat
xchg
xchg
xor
into
fnsave
xor
fbld
imul
clc
call
repnz
bound
mov
dec
push
sbb
adc
xchg
pop
sub
loopne
aaa
sti
mov
scas
pop
into
jl
sub
rcrb
daa
cmp
push
jmp
test
loope
mov
cmp
and
scas
and
cs
pop
adc
pop
shl
in
test
repz
or
mov
test
jbe,pn
xchg
inc
xchg
xchg
ja
adc
out
outsb
nop
in
sub
outsl
adc
sarb
pop
jl
iret
pop
sub
js
repnz
mov
xchg
and
loopne
inc
ljmp
lret
cmpsb
adc
dec
mov
and
mov
xchg
xor
cmp
mov
pop
adc
fiaddl
mov
xchg
mov
and
mov
cltd
clc
inc
daa
mov
imul
or
ljmp
cmp
testb
inc
movsb
das
or
add
jnp
inc
mov
ret
or
cltd
loop
nop
xor
jg
cld
divb
or
test
pop
mov
lods
xchg
fucomi
mov
hlt
andb
xor
popf
sub
inc
jns
xor
cmpsl
inc
sub
mov
pushw
rcll
adc
push
or
ss
pop
outsl
das
shrl
lret
mov
outsl
aas
mov
jle
fisubrs
cmp
stos
push
inc
flds
scas
inc
cld
adc
test
enter
cmpsb
loop
int3
fbstp
adc
push
insb
xchg
das
movb
cltd
mov
push
cmp
fbld
test
stos
cmc
int3
test
insl
mov
xor
xorb
call
dec
out
xchg
and
xchg
add
xor
xchg
imul
fs
inc
inc
aas
imul
xchg
jl
loopne
imul
mov
sahf
cmp
sbbl
lret
roll
popa
js
push
adc
ss
out
cli
inc
das
xor
scas
rcrl
aad
dec
mov
subl
out
adc
sbb
adc
xor
push
ds
in
aaa
or
ret
add
sbb
js
jp
mov
xchg
inc
loope
lock
jp
add
xchg
sbb
jo
cmpsl
clc
xchg
insl
add
xor
fidivrs
lock
lret
adc
sbb
sub
cld
pop
popa
jmp
decl
push
hlt
and
mov
pop
out
dec
cmp
shll
mov
xchg
jo
int
pushf
loop
test
leave
push
push
adc
mov
add
loop
sbb
sbb
sbb
fsubrl
fadds
pop
mov
mov
nop
negl
lds
add
or
fimuls
cs
cmp
cwtl
nop
xor
cmpsb
mov
movsl
adcb
test
mov
call
add
adc
fistl
mov
or
xchg
es
leave
push
lahf
sub
xor
xorb
mov
or
push
push
push
pop
adc
cmp
dec
data16
cltd
inc
loop
sbb
lock
dec
arpl
or
push
jo
push
jge
mov
aam
jge
outsl
xlat
addr16
loopne
mull
and
and
jns
pcmpeqd
icebp
pop
loopne
rcr
pop
testb
jge
mov
orb
out
xchg
xchg
jge
rorl
jnp
pushf
icebp
je
into
iret
loope
in
jmp
sbb
dec
int3
loop
loop
pusha
inc
jnp
xchg
jnp
xor
jns
adc
cld
cmp
repz
sahf
mov
loopne
dec
or
test
ljmp
jp
cmpsb
lcall
pop
insb
scas
mov
loope
pop
mov
xorl
xchg
ja
adc
lea
jo
sahf
or
rorl
dec
mov
pop
notb
aad
cmp
dec
cmp
rol
fcoms
int
scas
jbe
loope
outsb
inc
dec
add
cld
mov
sbb
aad
repz
pop
add
test
and
mov
mov
pop
xchg
rcl
notl
out
mov
das
mov
sub
cmp
test
fimuls
fucomip
cmp
push
in
mov
adc
fadd
out
mov
addl
ss
push
andl
hlt
xchg
pop
cmp
outsb
out
add
add
lahf
sarl
out
xor
push
test
sub
mov
test
mov
push
sub
movsb
lods
clc
sahf
das
aam
and
push
mov
sub
dec
popa
jmp
scas
cmp
sub
add
or
push
push
andl
hlt
sbb
iret
pop
sti
sub
in
mull
pop
mov
test
shlb
mov
jge
mov
ljmp
jb
push
lods
xor
mov
mov
pop
out
push
or
test
or
mov
pop
cmp
lea
sahf
notl
call
push
mov
js,pt
loopne
pop
cltd
push
cmpsb
fiadds
je
shl
adc
mov
imulb
or
jl
fimuls
pusha
pop
xor
jno
std
push
outsb
xchg
popf
jae
sbb
xchg
pop
ljmp
loope
push
imul
xchg
scas
mov
testb
hlt
icebp
sahf
lea
into
or
cmpsl
dec
or
call
adc
leave
mov
sbb
sub
jae
les
cmpsb
dec
mov
push
pushf
daa
test
xlat
mov
dec
popa
push
push
mov
fcmovnbe
ljmp
lea
into
push
sbb
subb
popf
test
pop
insb
xor
int3
cld
pop
orl
rorb
xorl
xchg
int
sub
mov
jmp
and
std
mov
es
dec
sbb
imul
pop
xchg
ret
lods
push
mov
cmp
daa
iret
jg
arpl
cmpsb
dec
or
and
jne
adc
in
in
pop
scas
mov
mov
adc
cmp
xlat
imull
sub
sahf
data16
icebp
jnp
adc
push
push
aas
and
sub
lds
adc
sbb
cld
arpl
sub
push
mov
lds
imul
fbstp
sahf
icebp
decb
mov
dec
cwtl
jmp
jo
test
jno
in
and
inc
in
mov
mov
test
lods
mov
out
lods
fidivl
jmp
pop
cmp
inc
xlat
cwtl
jmp
or
pop
cmc
rol
add
pop
cltd
stos
jne
pushf
fs
jb
jmp
xor
aas
out
mov
lret
push
ljmp
out
popa
lret
or
loope
lahf
mov
pop
push
cli
jo
test
lods
scas
fnstsw
sahf
adc
xchg
lahf
daa
lcall
push
aas
pop
in
shll
std
jo
int
adc
adc
testl
testl
inc
pop
mov
jb
mov
lds
cmpsl
fs
fists
sbb
sub
fdivl
shrb
sahf
xor
ja
mov
into
orl
mov
les
outsl
jl
add
jg
loope
gs
scas
adc
std
jo
adc
test
dec
mov
lcall
and
jb
adc
or
ret
mov
jmp
insb
mov
push
ljmp
and
adc
jge
in
or
jge
pop
xchg
stc
jp
jae
dec
gs
mov
push
js
outsl
dec
xlat
arpl
push
jb
pop
push
mov
xchg
xor
adc
cmp
cmc
pop
ret
arpl
xchg
dec
loope
mov
loope
insb
push
jg
jge
mov
jp
push
popf
aad
out
or
xor
mov
sub
cmp
in
mov
iret
ja
stos
mov
mov
mul
stc
push
shll
jg
mov
pop
adc
or
fisubs
rclb
pop
ljmp
negb
loope
lods
push
jmp
sarb
outsb
jp
pop
pop
icebp
push
xchg
jge
das
js
dec
xchg
mov
adc
mov
ss
and
xor
and
and
xchg
push
shlb
mov
mov
test
xor
loop
adc
cmp
or
fadd
ret
loope
jecxz
hlt
xor
loopne
dec
out
xchg
stc
mov
inc
add
sti
adc
loope
ja
sub
inc
push
dec
std
add
shlb
roll
fs
icebp
xor
arpl
daa
cmpb
lret
or
adc
mov
or
jl
cmp
scas
out
push
rcr
mov
subb
mov
lods
jmp
or
cmp
shl
or
int
inc
push
call
cli
lret
aaa
pusha
cs
shll
mov
push
je
insl
cs
lock
stos
cmp
sar
shrb
sarl
icebp
xchg
xchg
pop
pop
loop
dec
hlt
jp
outsl
fwait
add
add
fldenv
mov
jle
xchg
adc
ret
insb
fcmovbe
les
jae
bound
popa
repnz
out
icebp
sbb
sub
xchg
jns
mov
jns
cmpsb
je
mov
xlat
push
fadds
mov
leave
mov
lret
iret
repz
or
jg
mov
clc
jp
inc
pop
mov
sub
add
mov
mov
pop
push
lea
ss
add
cwtl
inc
jle
ljmp
adc
push
out
outsl
inc
push
lcall
inc
pop
insl
data16
les
insb
xchg
call
pop
repnz
mov
pop
out
mov
and
dec
and
inc
popa
mov
scas
jge
adc
mov
xor
inc
fdivr
mov
arpl
pop
in
ss
and
jnp
mov
add
mov
pusha
mov
test
jo
ret
pop
and
jp
movsb
ss
test
addr16
ret
in
repnz
push
push
ret
add
pop
lcall
out
in
mov
xchg
push
lock
fistpll
adc
scas
lock
stos
int
std
lods
hlt
or
daa
mov
inc
ret
test
jecxz
cmpsb
fdivrl
out
stos
inc
popa
fstl
lods
jo
jp
aas
lods
mov
and
ljmp
leave
add
aaa
jae,pt
mov
adc
adc
test
repnz
cmp
scas
movsl
idivl
in
test
in
aas
pop
jo
sbb
mov
testl
bnd
add
sbb
or
mov
xchg
gs
pop
add
insb
cmp
aam
imul
xor
fidivl
orb
neg
inc
push
xor
roll
std
push
sub
and
xchg
inc
aam
mov
dec
dec
mov
jge
shrl
shrl
test
sub
xchg
sub
cli
lahf
repnz
adcb
jle
or
scas
daa
mov
mov
cmp
leave
test
add
jle
mov
push
aam
aam
and
or
sbb
shlb
rorl
sbb
xor
test
mov
in
loop
sahf
ss
mov
adc
mov
cld
dec
test
pop
adc
add
adc
add
jns
outsl
pop
jl
jnp
pop
adc
mov
sub
test
leave
pop
dec
cld
sti
sbb
iret
mov
cld
out
mov
or
push
int3
cmp
inc
adc
push
shlb
mov
arpl
mov
cmp
inc
dec
stos
arpl
fstpt
fisubl
dec
cmp
push
push
mov
jne
push
or
inc
inc
cld
outsl
xor
cmpsb
pop
and
insl
push
jge
and
les
pop
xlat
outsb
dec
inc
iret
arpl
sbb
cmp
push
push
rcl
mov
xchg
scas
xor
cmp
jnp
dec
fimuls
call
mov
sbb
test
sbbb
inc
pop
rcrb
fsubrl
pop
rcrl
leave
pusha
push
adc
daa
mov
sub
addb
fcmovnu
sub
enter
or
xchg
ljmp
arpl
loop
mov
jg
and
push
pop
jecxz
hlt
clc
mov
sahf
mov
add
mov
dec
idivb
inc
mov
ret
lret
jg
mov
mov
int3
cmp
outsl
andb
mov
jmp
sub
adc
int
or
pop
mov
movsl
cmp
stos
cwtl
idivl
loope
mov
call
shrb
cmp
push
loop
lock
mov
mov
aam
xchg
out
sub
nop
andl
jmp
add
aas
enter
xlat
bound
imul
pop
and
lods
inc
jle
scas
push
jbe
mov
inc
nop
sub
sub
gs
add
insl
or
popa
std
push
mov
daa
int3
iret
dec
sbb
dec
daa
into
cmp
add
and
pop
enter
aad
mov
or
mov
mov
fcmovb
xlat
test
or
xchg
sub
int
es
jg
lods
iret
jl
inc
xor
aas
xchg
pop
mov
push
ljmp
or
rorb
sub
mov
insb
sub
arpl
dec
test
data16
outsl
jge
fwait
xchg
bound
push
jmp
and
lret
add
pushf
xchg
push
call
fcompl
lock
add
xchg
ret
mov
adc
pop
popf
xor
mov
mov
mov
pop
sbb
adc
leavew
fimull
int
jmp
push
and
sahf
mov
shrb
and
movsl
in
push
scas
bswap
out
sbb
or
subl
inc
push
nop
fs
jno
xor
push
push
add
cmp
cmp
lcall
sbb
and
cltd
xor
cmp
ja
ljmp
sub
scas
stos
insl
xchg
push
dec
dec
out
push
inc
imul
andl
out
sbb
sbb
cld
xor
sbb
xchg
sub
ds
imull
mov
add
sbb
shrb
insl
jecxz
outsl
push
mov
fistpl
cmp
mov
outsb
popa
outsb
test
jle
shll
jmp
add
pop
and
out
sbb
pop
pop
rcrb
jno
sub
loope
daa
lret
cld
dec
add
sub
dec
sub
data16
out
lods
xchg
push
inc
push
mov
mov
inc
out
lds
in
cli
adc
shrl
inc
sbb
lea
mov
mov
cmp
inc
adc
push
in
xchg
and
test
xor
inc
clc
or
cmp
shrl
cmpsb
loopne
dec
push
inc
scas
push
cmpsl
je
cmp
imul
xchg
js
inc
push
jl
add
daa
popf
and
sub
ljmp
mov
lods
and
adcb
pop
shl
lahf
push
jnp
insl
mov
pop
adc
jb
lret
lea
push
push
add
shlb
and
jg
pusha
cmp
mov
in
jo
dec
mov
jge
pusha
add
popf
mov
jmp
adc
jg
aas
dec
shlb
or
popf
sbb
push
icebp
inc
add
lock
cld
xchg
xchg
rclb
aad
or
out
pop
or
es
sbb
popf
mov
cmp
jmp
pop
movsl
or
sbb
or
mov
pop
lahf
mull
fwait
scas
out
cmpsb
mov
bound
push
and
add
std
stos
inc
sub
or
std
push
sub
sbb
ret
insb
stos
test
dec
cwtl
inc
sbb
imulb
xor
js
mov
stc
mov
push
pushf
fildl
or
cmp
and
les
push
sbb
das
nop
jmp
icebp
mov
add
fsubrs
pop
cmp
adc
or
cmc
cmp
dec
fs
mov
cli
notl
mov
aam
add
clc
scas
fsubrl
aad
or
ret
sarl
test
jns
dec
cmp
pop
and
notl
jno
pushf
dec
ret
inc
ret
fwait
push
mov
sbb
bound
and
jns
and
fwait
sbbl
lea
ja
cwtl
test
fsubr
mov
mov
cmp
dec
inc
js
mov
gs
xor
sub
mov
jae
out
xchg
dec
int
jle
dec
aaa
push
mov
rcrl
sub
or
jno
pop
out
cmpsl
aam
inc
cmp
bound
hlt
sbb
pop
adc
aas
shl
pop
adc
hlt
mov
sahf
dec
jbe
jle
sbb
jno
bnd
sarl
jno
xchg
stc
mov
mov
mov
mov
or
stos
cmp
and
sub
repnz
xchg
pop
test
jns
out
fadds
sbb
xor
ret
orb
dec
mov
add
adc
jg
xchg
sub
xor
mov
arpl
mov
hlt
and
orl
fs
xchg
and
inc
jmp
sti
jns
cmp
mov
div
xorb
mov
sbb
fimull
sub
decb
call
arpl
xor
jb
outsl
rcrl
xor
push
inc
add
cmpsb
repnz
jg
stos
fwait
and
push
cld
inc
or
xor
call
cld
and
mov
adc
enter
adc
inc
pop
adc
mov
lods
sub
jg
das
mov
add
cli
push
dec
loop
pushf
push
in
dec
dec
int
js
and
mov
pop
lret
ds
add
and
in
sbb
pop
dec
fmul
inc
fs
adc
insb
mov
xchg
test
lods
pop
lods
jo
mov
test
imul
mov
push
pop
xor
xorb
out
out
pop
pop
lock
or
xchg
mov
sahf
loopne
xchg
sti
add
mov
fimuls
or
js
xor
and
jno
daa
lahf
les
push
cltd
ja
inc
adc
lret
aaa
mov
lock
push
insb
daa
fnstcw
gs
lods
jb
sbb
lahf
sub
cmpsl
sbb
ret
cmpb
jne
and
xchg
dec
inc
add
mov
cs
mov
ret
ret
xchg
iret
pop
sbb
mov
out
inc
imul
out
add
inc
mov
shr
or
in
jns
xor
xchg
ja
lock
push
fildl
fsubl
mov
movsb
dec
xlat
sbb
push
mov
adc
clc
cmc
icebp
xchg
scas
iret
sbb
add
std
dec
add
jns
das
js
lcall
cmp
pop
dec
jg
xor
adc
iret
negl
dec
add
jmp
cvtpi2ps
pop
add
ja
and
jno
push
push
push
mov
xchg
xchg
jmp
int3
daa
icebp
pop
jae
mov
je
lds
lods
ljmp
xchg
lret
mov
jmp
mov
das
add
xchg
xchg
das
and
dec
push
add
cmp
push
hlt
push
cmp
sti
and
lret
sbb
pop
and
sub
loope
dec
lcall
ss
leave
sbb
in
inc
jns
insl
es
cli
cwtl
xchg
mov
shl
mov
imul
inc
xlat
repz
pop
jecxz
dec
mov
scas
sub
mov
jecxz
out
pop
aad
or
cltd
pop
push
mov
mov
pop
cld
inc
enter
js
jg
imul
adc
cmc
inc
fsubs
or
stos
mov
ret
xlat
xchg
dec
mov
clc
push
in
into
shrb
repz
jns
fwait
shrb
test
lock
leave
mov
fisttpl
sbb
aaa
mov
xor
lahf
mov
adc
sub
mov
aam
xchg
jmp
ret
sbb
mov
mov
fnstsw
sbb
xchg
scas
rcll
jb
out
or
and
lods
inc
decl
push
mov
rolb
outsl
mov
xor
xor
mov
stc
sti
cmpl
ss
adc
jge
mov
push
sbbl
mov
mov
jg
inc
push
stos
sub
adc
inc
jne
fcomi
outsb
mov
xchg
andl
xchg
push
clc
stos
jle
and
cmp
mov
xchg
mov
repnz
mov
mov
pop
je
cmpsb
lods
imul
jmp
and
xlat
jecxz
jecxz
test
jp
into
mov
pop
xchg
sub
jmp
scas
loopne
mov
dec
mov
in
push
call
mov
mov
xchg
pop
mov
sbb
push
push
and
shrl
xor
mov
push
jne
dec
push
test
jb
sahf
xchg
mov
roll
or
sbb
adc
test
pusha
push
push
sbb
xlat
dec
and
jl
mov
arpl
call
enter
jecxz
fabs
xchg
lahf
cmpsb
push
lods
inc
xchg
inc
out
daa
lret
das
cmp
stos
push
cwtl
fistl
lret
das
out
dec
ds
into
fcmovb
jne
add
xor
pushf
jbe
in
out
pop
jno
or
out
repnz
lahf
push
jge
xchg
loopne
movsl
mov
call
int
xchg
cmc
add
in
mov
bound
and
sbbl
rcrl
sahf
loope
dec
mov
xor
out
cmp
jmp
mov
cmpsb
xlat
pop
sbb
call
test
lret
pop
arpl
in
pop
sbb
int
out
add
inc
sub
jns
test
in
aad
pop
test
xor
inc
pop
popl
addb
mov
sbb
adc
xor
inc
ljmp
xor
sbb
dec
add
mov
or
lret
mov
clc
ret
ret
push
mov
movsl
jo
jmp
mov
fwait
pmaxsw
scas
mov
loopne
repz
divl
insl
mov
repz
leave
cs
add
jg
test
cmpsl
inc
roll
imul
inc
testl
leave
fxtract
adc
lahf
and
lods
out
mov
fildl
loopne
scas
into
scas
mov
test
push
mov
sbb
xor
popf
test
pop
out
lods
or
out
and
fldl
dec
push
repz
and
and
lcall
dec
les
sbbb
jnp
das
daa
add
imul
or
mov
jge
pop
inc
pusha
xor
inc
sub
lret
ffreep
sarl
in
sub
lds
call
push
adc
push
mov
fdivrl
stos
xor
jne
push
push
out
jb
outsb
cmp
clc
popf
test
mov
push
or
mov
divps
cmp
inc
sahf
xchg
in
imul
mov
jae
je
dec
shlb
mov
lock
hlt
test
xchg
cmp
jae
and
test
jne
mov
ds
shrl
adc
adc
cmp
ja
fnsave
sub
orb
xchg
mov
xchg
adc
xchg
mov
pop
sbb
pushf
out
sub
stc
ljmp
dec
cli
movsb
sub
jg
jge
in
popf
xchg
cli
jmp
cld
rcll
clc
sahf
mov
imul
cli
pop
mov
mov
shll
sub
push
repnz
fmuls
jecxz
inc
jge
inc
jmp
loopne
pop
xor
push
aad
mov
sub
jecxz
mov
data16
lods
ja
in
xchg
sub
sbb
in
dec
imul
rol
xchg
sub
loope
push
insl
push
xchg
out
pusha
and
inc
out
and
adc
mov
popa
aas
cmpsb
lret
nop
mov
loopne
jb
add
arpl
ret
nop
xchg
push
in
icebp
mov
inc
in
into
mov
inc
sub
pusha
fwait
in
mov
adc
adc
mov
jl
hlt
jb
add
pop
enter
mov
test
sbb
mov
pop
sub
xor
or
inc
out
jle
xchg
fcoms
cmc
lahf
stos
shll
fdivs
xor
daa
and
aaa
add
mov
and
in
mov
jns
loopne
movl
ss
jae
fmull
ret
fidivs
pop
addr16
mov
sbb
mov
not
adc
jne
adc
in
aam
cmp
repz
out
gs
pusha
cmp
xchg
in
jl
sbb
mov
pop
loop
jnp
call
fdivl
pop
popa
and
in
mov
mov
push
addb
iret
push
nop
bound
jl
bt
inc
xchg
test
leave
sahf
sub
jecxz
sarb
std
lcall
xchg
clc
sahf
mov
shlb
ret
imul
icebp
mov
or
push
gs
jp
fldcw
test
pop
push
inc
mov
mov
loopne
lods
mov
rclb
mov
das
ficoms
shrl
push
inc
mov
adc
jo
pop
cmp
cmp
outsl
jmp
inc
xor
push
std
aaa
cmp
enter
cli
lret
jo
xor
outsl
mov
add
xchg
rcrl
add
cmpsb
add
cs
fldt
cld
mov
push
pop
add
scas
loopne
cs
dec
in
xchg
stos
xchg
repz
in
mov
sarb
and
jno
jnp
es
scas
jmp
lds
les
dec
notb
or
sub
test
dec
repz
adc
inc
sti
arpl
data16
lcall
xor
push
outsl
pop
mov
fisttpll
mov
je
cmp
xor
clc
pop
lea
pop
ficoms
stc
and
mov
mov
xor
push
mov
inc
stos
dec
lods
fidivrs
pop
ret
into
movsl
js
pop
scas
fwait
sbb
xor
imul
dec
add
jne
loopne
daa
xor
adcb
test
std
xchg
xchg
push
repz
mov
add
into
rcrl
loop
jno
and
clc
pop
adc
jg
xchg
arpl
mov
xchg
aaa
mov
jno
xchg
fsts
jle
in
sbb
shlb
loope
cmp
sub
mov
out
jb
jecxz
xchg
adc
pop
cld
rorl
or
hlt
dec
jge
jmp
fstl
xor
xlat
enter
aas
mov
xor
int3
flds
jecxz
inc
pop
adc
std
push
ljmp
add
outsl
shrl
popa
mov
mov
mov
ja
xchg
pop
jge
cmp
pop
adc
dec
out
dec
xchg
bound
push
mov
xchg
clc
xorl
fwait
or
sub
jecxz
mov
and
or
lock
js
mov
test
sbb
adc
ja
jnp
mov
dec
loopne
fiaddl
std
add
cmp
cmp
loopne
push
lahf
fnsave
mov
jno
lods
fistpl
stos
daa
imul
fstp
enter
sbb
clc
push
in
push
ds
xchg
lods
movsb
inc
push
add
movsl
aaa
xor
adc
adc
addr16
stc
mov
cmp
ret
sub
inc
push
mov
ret
mov
std
push
iret
sub
sbb
fistpl
xor
repnz
jb
cs
add
xchg
flds
xlat
dec
cmp
imul
mov
sahf
lods
rcl
xchg
add
out
pushf
arpl
add
orl
xchg
sub
mov
sub
and
and
repnz
movl
push
xchg
xor
arpl
jge
iret
pop
inc
mov
popl
mov
out
xor
add
imul
aaa
or
out
pop
in
pop
leave
add
lock
pop
decb
fnsave
pop
inc
test
lcall
mov
adc
in
push
sti
sub
pop
push
loopne
jl
sub
outsb
push
lock
or
in
notb
mov
int3
inc
sbb
push
ret
xor
adc
dec
lcall
or
jbe
inc
push
sbb
mov
pusha
jnp
dec
pop
pop
es
jl
loope
xor
in
sbbl
jb
jcxz
sbb
mov
push
mov
adc
in
cmp
push
jecxz
cmc
mov
sub
negl
shlb
jnp
sub
dec
sub
cmpb
cmp
fildl
cwtl
xlat
mov
and
popl
enter
insb
jnp
inc
ss
sbb
lea
test
or
pop
divb
lcall
in
add
add
xchg
out
ja
jae
lods
sub
push
out
les
mov
sub
cs
scas
negb
in
inc
outsb
in
enter
outsb
call
adc
popa
aad
xchg
pop
cmpb
adc
addb
pop
ret
movsl
loope
pop
xor
ret
or
pop
cmp
xor
cmp
push
enter
insl
jnp
mov
pop
lods
xchg
dec
stos
enter
xor
sti
mov
fnstenv
cwtl
dec
cmp
cwtl
and
ss
scas
sahf
or
mov
lea
adc
or
iret
mov
loop
mov
jno
cltd
mov
cld
push
fsubrl
mov
sub
dec
jmp
mov
dec
in
jne
daa
cmpsb
int
pop
mov
scas
xchg
shrb
fnsave
fs
repnz
test
test
xchg
andl
jp
xchg
inc
xor
push
mov
das
mov
cmp
or
rcrb
mov
iret
mov
inc
mov
xchg
dec
rcrl
roll
sbbb
xchg
dec
in
mov
movsb
sarb
or
fs
pop
and
pushf
push
pop
repnz
scas
pop
xor
lods
inc
xlat
in
mov
aaa
dec
loope
mov
sub
push
lods
idivl
jno
jecxz
lods
pop
aad
pop
loop
pop
mov
push
test
sub
shlb
xor
lods
inc
mov
cld
int
mov
dec
loop
aas
dec
outsl
xor
pusha
jg
mov
xor
mov
js
cltd
push
cs
mov
sub
adc
adc
cmp
idivl
jnp
and
lods
lcall
ljmp
mov
push
hlt
push
in
jmp
cmpsb
inc
xchg
sbb
sbb
in
mov
es
pop
scas
push
mov
adc
ret
mov
sub
in
push
nop
mov
dec
jno
test
loope
sub
mov
adc
hlt
jb
sbbb
movsb
push
mov
cmp
mov
sti
xchg
push
mov
mov
or
imul
nop
lods
pop
sbb
add
pushl
scas
sbb
jne
in
clc
mov
adc
adc
jg
xor
dec
push
add
popa
mov
test
fldl
and
push
test
sbb
xor
push
shll
push
stos
mov
and
sub
addr16
rep
int3
and
hlt
pop
push
lret
cld
cmp
nop
rol
jns
add
mov
nopl
jecxz
mov
cmpsl
enter
mov
jmp
pushl
xor
inc
stos
ss
imul
jnp
xor
mov
imul
mov
mov
mov
or
and
pop
nop
int3
sti
or
icebp
rcll
cld
aam
out
test
mov
lret
insl
mov
xorb
push
lds
enter
mov
xchg
or
inc
push
adc
daa
sbbl
xor
cmp
jl
mov
sahf
adc
mov
es
inc
fadds
out
mov
jle
inc
sbb
aaa
jecxz
or
std
je
imul
jmp
xchg
sub
sbb
mov
test
lock
jg
fabs
mov
or
dec
in
lods
and
loope
jle
int
orb
rolb
pop
int3
pop
or
rorb
mov
push
cmp
xchg
mov
or
ss
addr16
es
mov
adc
shrl
cwtl
xor
ds
lds
pop
lret
and
xor
push
gs
sbbl
bound
fs
mov
sub
and
xchg
inc
pop
fwait
dec
scas
das
mov
lock
xchg
lods
cmpsl
push
dec
loopne
pop
cmpxchg
stc
addr16
ljmp
scas
jo
sbb
xor
mov
jmp
test
xlat
divb
dec
imul
andl
xchg
mov
push
addr16
pop
jae
add
jo
inc
sbb
pop
add
push
aam
js
scas
gs
sbb
xchg
jnp
clc
or
movsb
aad
loopne
or
push
sbb
xor
mov
inc
adc
mov
and
out
out
daa
cmp
cmc
cmpsb
test
adc
ret
mov
fdivrs
sbb
mov
lock
movsb
mov
test
inc
bound
jmp
and
in
outsl
adc
mov
lea
dec
fwait
lret
xorb
jmp
mov
inc
or
std
and
push
nop
mov
fwait
rorl
aas
dec
pop
jno
cmp
push
test
movl
xchg
dec
in
add
mov
lods
inc
clc
jne
scas
in
lret
fistps
jnp
mov
pusha
gs
movsb
xor
or
imul
lock
push
mov
out
movsb
push
xchg
mov
xor
insb
jg
insb
ss
jl
subb
and
jne
mov
mov
sbbl
adc
or
or
outsb
jp
fwait
imul
stc
lds
mov
sbb
test
sarb
push
mov
push
mov
les
push
daa
xchg
push
jno
pop
sbb
sar
add
xor
xchg
xchg
mov
mov
xchg
testl
in
bound
cwtl
aad
push
sbb
xchg
cmpsl
movsl
cmp
dec
cmp
test
adcb
ljmp
out
xchg
and
jmp
arpl
repz
int3
xor
add
dec
mov
mov
fnstenv
test
rdmsr
mov
or
scas
adc
mov
aad
xor
push
inc
and
mov
int
insl
jp
adc
add
dec
sti
test
cltd
push
cmpsb
in
dec
adc
jge
sub
out
pop
xchg
jg
xchg
mov
and
cmp
pop
lds
in
les
lods
aaa
aad
add
or
mov
int
test
dec
ljmp
lahf
int
jecxz
loope
mov
mov
xor
mov
mov
and
aaa
jge
inc
lcall
jp
std
push
or
jbe
mov
push
push
pop
pop
mov
fs
jl
adcl
xchg
cmpsb
xchg
sbb
rol
mov
push
std
decl
mov
aaa
push
test
test
mov
xor
arpl
xchg
fdivrs
pusha
adc
sbb
sbb
mov
dec
dec
flds
lods
in
or
arpl
test
xor
pop
cs
mov
enter
stos
mov
pop
xor
pop
lret
xor
aaa
dec
push
mov
push
pusha
cs
pop
add
mov
xchg
lret
arpl
cli
clc
cwtl
xor
mov
mov
mov
ret
or
sbb
inc
mov
push
fldt
mov
push
xchg
cs
cwtl
add
cltd
outsl
xchg
repz
and
inc
out
mov
sub
push
test
test
rcll
cmp
mov
dec
push
mov
pop
cmpsl
insl
fdiv
push
dec
ja
pop
xor
jno
js
xchg
pop
jne
sbb
cli
push
cs
mov
test
in
xor
daa
mov
popf
adc
sub
jmp
mov
shr
mov
cwtl
mov
or
test
xchg
jbe
nop
pop
movsb
in
xchg
sub
rorl
testl
cmp
lahf
pop
imul
pushf
loopne
lcall
and
mull
xor
sub
bound
inc
inc
push
push
mov
mov
push
imul
lahf
xor
dec
mov
dec
sbb
cmp
popl
lds
out
aad
std
nop
fistps
fidivrl
les
adc
pop
rolb
out
clc
jb
xor
loope
sub
dec
cmc
mov
lahf
inc
pop
xchg
ja
and
dec
inc
mov
xor
mov
xor
pop
scas
cmp
andl
std
pusha
adcb
push
scas
and
lea
shl
cmp
call
outsl
mov
enter
mov
dec
mov
push
cmpsb
mov
fstp
add
testl
jg
int3
xor
fldl
dec
mov
xor
inc
push
push
out
movb
mov
scas
cmp
stos
scas
inc
cmp
push
or
jnp
pop
push
stc
dec
inc
fdivrl
mov
adc
les
cmp
sbb
inc
xor
adc
lock
mov
sbb
dec
jae
add
and
fisubrl
sbb
or
out
add
test
lods
add
mov
in
clc
sbb
push
rcll
lcall
insl
jne
mov
dec
add
out
mov
iret
push
push
xchg
or
jle
aad
xchg
orb
jbe
cmp
mull
cmp
push
and
push
imul
xor
cltd
or
lock
and
inc
adc
lods
adc
mov
popf
loop
sub
push
and
bound
arpl
inc
xchg
or
pop
movsl
test
fildl
shrb
inc
test
jg
sub
out
mov
inc
ljmp
sbb
sub
mov
je
incl
stos
xchg
js
mov
fdivr
loope
gs
cmpl
mov
stos
xor
ja
ja
je
mov
mov
xchg
mov
pop
mov
lret
enter
lods
arpl
flds
test
mov
int3
cmp
adc
int3
insl
cmp
pop
mov
outsb
in
push
test
xor
dec
push
add
pop
xchg
sub
iret
fcmovnbe
add
testb
lret
hlt
leave
bound
shll
jg
push
hlt
mov
shr
mov
and
leave
push
cmpsl
pop
cmc
sahf
push
adc
das
inc
dec
jae
imul
insb
lea
mov
ret
hlt
mov
mov
insl
add
gs
lock
jge
mov
sub
cmp
outsb
loop
mov
mov
mov
loopne
std
out
push
cmp
fadd
pushf
cli
not
sub
stc
xorps
daa
xchg
pop
sub
adc
mov
movsl
add
aam
mov
or
sarb
xor
aad
fnsave
lea
xchg
cld
pop
divb
jae
jns
and
sahf
popf
xchg
stos
push
fstpt
mov
xchg
and
jb
pop
ss
mov
ficompl
movl
push
ja
ds
push
imul
pop
out
adc
fistl
test
mov
mov
sub
mov
jecxz
scas
inc
imul
dec
mov
xor
clc
pop
lock
inc
lds
rorl
pop
cs
pop
mov
lret
test
add
out
dec
lcall
adc
fs
sub
loopne
stc
popa
cltd
pop
mov
aam
fists
or
outsl
daa
xor
jl
add
inc
mov
jbe
fs
inc
stos
push
out
fistpl
jne
mov
addl
pop
hlt
inc
cltd
test
add
addr16
and
and
sub
popa
xchg
dec
sti
fmuls
lods
lea
test
sub
sub
sub
jnp
mov
es
pop
jg
shrb
inc
pop
aas
pop
cltd
in
je
xchg
cmpsb
or
mull
popa
jecxz
push
mov
dec
loop
rcrb
mov
add
inc
fdivl
leave
lahf
cmp
cli
inc
cmpl
stc
mov
ljmp
in
pop
cmpsl
aas
push
add
mov
push
dec
jecxz
popa
ds
cmc
dec
mov
jne
sub
dec
mov
cmp
ret
sbb
or
fcomi
sub
test
add
mov
in
insb
shll
lds
ds
out
lods
add
jmp
js
out
adc
int3
xor
hlt
fcom
push
adc
mov
sbb
mov
fs
mov
pop
daa
sbb
ja
insl
fbstp
scas
inc
shrl
jmp
je
outsb
and
sub
stos
mov
pop
xchg
push
insb
pushf
lds
add
xor
dec
inc
mov
pop
xchg
shl
lret
decb
cltd
mov
aad
cmp
adc
jl
xor
push
pop
imul
push
orl
test
mov
imul
pop
repnz
push
daa
jle
pop
xor
pop
imul
je
lea
pushf
xrelease
push
out
and
lock
and
fsubrs
or
inc
popf
push
fwait
into
and
divb
loop
fwait
js
les
testb
fcomps
push
bound
mov
mov
adc
cmp
cmp
int3
jb
int3
add
cs
jmp
mov
enter
adc
imul
ds
push
pop
pop
xor
rcr
jo
xchg
sbb
rclb
clc
push
insl
push
lahf
divb
das
adc
inc
ljmp
test
mov
and
push
mov
loop
and
xlat
dec
cmpsb
mov
mov
insl
inc
mov
shr
sbb
cmp
out
jmp
sbb
repz
xchg
mov
fnstsw
int
int
scas
mov
pop
in
jbe
add
enter
push
pop
cmpsb
mov
push
and
rcr
add
dec
or
adc
push
mov
stos
push
sahf
fdivl
xchg
cli
inc
lods
push
shll
into
push
jg
imul
out
clts
pop
test
gs
pushf
daa
rorl
data16
stos
mov
or
sbb
fmul
xchg
adc
data16
shrl
xchg
fstpl
jbe
gs
mov
insl
js
ss
sti
enter
or
push
push
xchg
fs
xor
ret
lock
mov
or
in
mov
xor
clc
data16
addl
cmp
mov
sar
enter
cmp
cmp
add
pop
inc
andb
add
mov
pusha
sub
push
dec
loope
xorl
or
lahf
aad
int3
cmp
mov
call
mov
push
xor
push
inc
sub
push
subb
ror
aam
adc
xchg
xor
add
and
enter
adc
dec
xchg
addr16
cmpsl
xchg
das
push
cmp
shl
mov
jns
cmp
je
outsb
adc
mov
mov
mov
mov
pop
dec
psubusb
int
orl
scas
mov
mov
rcrb
jg
fsubl
popa
lods
bound
fs
mov
int
fcmovu
ret
cmpsb
pushf
mov
pop
call
inc
mov
rol
sti
call
cmp
das
xchg
stos
icebp
mov
inc
pop
jp
or
xor
test
ss
fidivrs
aad
xor
jp
push
and
jns
sbb
adc
push
subl
arpl
stc
adc
xchg
inc
pop
xorb
jbe
loopne
cmp
lock
loopne
rol
jg
mov
fcomip
mov
mov
sub
and
dec
hlt
adc
sbb
add
cmpsb
adcb
pop
loope
xor
in
push
hlt
jb
and
leave
xor
and
pop
or
push
leave
fsubs
setns
imul
loop
cltd
and
cltd
push
mov
je
pop
mov
scas
aam
push
adc
xchg
dec
fs
jg
push
test
and
subl
je
data16
and
cmpsb
sbb
out
cmp
mov
cmc
mov
js
aaa
push
adc
push
push
arpl
fidivs
test
cld
sarl
inc
in
stc
dec
lds
bound
or
pop
sub
out
jl
pop
scas
mov
std
fs
int3
inc
adc
add
lds
stos
jmp
adc
aaa
dec
lock
popa
jae
mov
dec
sbb
sbb
shll
cld
xor
dec
pop
hlt
cmp
mov
sarl
adc
sbb
cmp
stc
into
add
jb
push
mov
pop
data16
mov
push
out
out
pop
nop
mov
xor
mov
cmp
int3
dec
inc
jae
call
mov
popf
mov
and
push
pop
lret
sarl
imull
jl
pop
outsb
push
jne
sbb
xchg
pop
mov
mov
lds
ret
aaa
aas
inc
fnstenv
jo
test
gs
xchg
in
and
sbb
push
out
aad
loopne
adc
sahf
or
rolb
loop
cmp
loope
xor
ret
ret
sbb
jp
shl
popf
cmpsb
adc
and
jb
fbld
setnp
rorl
xor
orl
mov
jno
in
ljmp
mov
andb
mov
mov
add
frstor
mov
insb
fsubp
jmp
fsubr
lds
sbbb
sub
out
ja
dec
jle
dec
bound
jae
xlat
sub
fimuls
dec
lods
and
jns
cld
test
call
adc
inc
inc
push
lods
add
leave
pusha
sbb
cld
jb
fdivrl
call
jge
pop
icebp
xchg
sbb
inc
cmp
xchg
push
call
aad
pushf
mov
loopne
in
negl
sub
sahf
sub
mov
pop
xchg
and
sub
add
test
loopne
iret
sub
jge
inc
dec
test
jle
push
mov
inc
push
movsb
daa
sub
gs
xchg
sti
jb
in
jecxz
sbb
dec
adc
mov
jbe
daa
pop
cmpsb
movsl
test
test
andps
es
call
jbe
dec
inc
and
fldenv
ret
rcrb
jb
fucomp
pop
sub
adc
rcrb
orb
out
push
das
adc
sbb
mov
lret
es
stos
fcomip
mov
xor
out
add
loop
subb
leave
and
jae
ja
jno
jnp
rolb
and
push
arpl
push
dec
mov
cs
dec
stos
push
repnz
jg
add
daa
pop
rcll
sbb
clc
in
cmp
xchg
xchg
das
push
xor
cltd
sbb
lret
les
insl
push
ret
pop
subb
xchg
sbb
sub
insl
add
out
mov
jne
pop
aaa
push
mov
push
pop
mov
mov
adc
add
rorb
cmp
sbb
pusha
arpl
insl
sbb
or
test
cld
adc
pop
mov
mov
mov
add
cmc
mov
mov
pop
mov
add
jo
or
jge,pt
pusha
fs
pop
mov
cmpsl
cmp
sub
fwait
das
pop
ret
add
push
mov
xchg
ds
sbb
mov
fidivrs
mov
and
andb
push
pushf
andb
data16
std
adc
dec
and
imul
in
addr16
out
push
andb
push
push
xchg
push
and
in
nop
mov
pop
out
test
lret
pushf
or
iret
cs
adc
es
and
xor
or
jbe
loope
cs
faddl
xchg
lds
adc
insb
mov
arpl
inc
sub
cltd
aad
push
cmpl
xchg
das
jns
pop
or
dec
mov
clc
das
cmp
push
std
cmp
fcoml
outsl
push
or
push
jecxz
sahf
adcb
stos
mov
xchg
scas
mov
lret
pop
fisttps
inc
mov
imul
rcrb
sahf
pop
icebp
popf
outsl
scas
jle
aad
and
test
mov
fnsave
or
aad
pop
hlt
xchg
out
scas
cmpsb
pop
xlat
addr16
arpl
ret
ss
rcrl
lock
scas
jp
std
mov
mov
lcall
or
adc
daa
mov
adc
test
mov
fnsave
bound
add
cltd
or
pop
xchg
sbb
cmpsb
stos
orb
pop
sbb
dec
scas
sub
pop
fdivl
add
dec
cmp
cmp
mov
call
mov
mov
jno
xor
ret
pop
loope
mov
icebp
dec
jl
fildll
mov
mov
push
lds
data16
addr16
xchg
data16
dec
jno
mov
fdivrl
pop
push
xchg
xor
into
movsb
jmp
stc
test
cmpl
jns
jne
cmpsl
mov
xor
insl
xor
clc
pop
clc
mov
mov
xchg
subl
xor
sub
clc
pop
cmpsb
fsts
lea
add
popa
xchg
sbb
lods
pop
clc
fs
insl
sbb
cmp
push
fistpll
push
popf
fistpl
and
cmpsb
xchg
cs
xor
lret
cmp
inc
loope
xchg
xchg
xor
je
or
xchg
jmp
cs
outsb
shll
cltd
push
cmpsb
aad
aad
loopne
in
clc
das
or
push
incl
ljmp
into
aaa
data16
pop
mov
xchg
dec
shlb
xlat
fdivrs
int
dec
subb
jl
sbb
xor
mov
mov
mov
mov
or
mov
push
xor
xor
and
add
ss
or
or
mov
push
xchg
in
outsl
add
int3
mov
aaa
dec
push
jp
cmpsl
int3
xor
into
int3
dec
xor
mov
lcall
nop
rcl
shll
lds
cmp
scas
cli
pop
daa
mov
stos
push
mov
das
jmp
scas
fimull
sbb
jns
lea
test
aad
in
add
or
andb
adcb
xchg
xor
mov
dec
mov
in
jo
mov
cmp
xchg
cs
pop
pop
mov
addr16
pop
pop
xchg
scas
aas
dec
jle
jno
stos
inc
les
lret
pusha
xor
mov
lea
xchg
xlat
inc
arpl
mov
shr
cld
test
mov
enter
rcrl
mov
std
andb
test
mov
cmpsb
rcll
cmpsl
mov
mov
jle
mov
jp
mov
xchg
xchg
aaa
xor
fs
or
jnp
push
inc
jp
shll
or
xchg
test
mov
and
pop
push
dec
fs
inc
jecxz
mov
stos
adc
out
push
and
dec
inc
push
inc
push
mov
or
jnp
ret
fisttpll
fsubrs
xchg
pop
in
std
cmp
cmp
scas
mov
inc
lods
pop
ss
scas
xor
sub
xchg
inc
dec
aam
xor
mov
pusha
xlat
fbstp
dec
loopne
or
lret
ja
add
xor
sub
rolb
cli
xchg
cmp
xchg
aaa
and
in
cmp
hlt
test
imul
or
imul
xchg
jge
xor
sbb
dec
das
addr16
in
cs
stc
and
mov
mov
lahf
cmp
mov
insb
subb
cmpsl
cmpsl
mov
nop
loope
pusha
call
dec
jb
jnp
out
out
aad
xor
mov
pusha
push
push
arpl
or
dec
cmp
test
inc
inc
lds
add
cmp
xchg
xchg
lret
push
ds
pop
xchg
mov
jb
inc
lods
add
jae
sbb
inc
lahf
mov
clc
dec
call
mov
in
xchg
xchg
in
mov
cmpsl
pop
lds
fmull
or
das
loopne
cmp
pop
or
mov
cmc
push
das
or
sbb
pop
pop
lahf
push
cmp
fucomp
dec
aam
mov
mov
loope
negl
cmp
jp
insl
and
xchg
mov
loopne
enter
push
sub
mov
ret
outsb
adc
push
jle
shrb
inc
es
jnp
pop
and
xlat
inc
push
add
cmpxchg
cmp
out
mov
out
mov
imul
jne
popa
int
inc
lea
out
divb
sub
sti
clc
in
out
mov
jno
int3
mov
push
push
cwtl
bound
rclb
or
and
mov
icebp
bound
mov
or
sub
nop
jmp
xchg
and
aaa
pop
jbe
insb
aad
in
pop
lods
mov
fcoml
dec
lock
rcrl
mov
sbb
popf
xchg
mov
add
xchg
or
test
scas
jno
push
aaa
jns
daa
es
lds
xchg
data16
scas
cmc
pop
loopne
je
jno
mov
das
push
nop
push
outsl
lret
loopne
push
test
test
inc
mov
cmpl
mov
mov
shrb
pop
sahf
jp
rcr
test
call
add
call
xchg
pop
in
pop
pop
xchg
sbb
or
mov
outsl
add
xchg
xchg
fsub
lahf
mov
xor
and
fistpl
and
aaa
push
sahf
and
and
cli
dec
mov
test
adc
imul
xor
clc
or
aaa
frstor
inc
stc
out
fdivl
push
fiadds
ret
or
arpl
js
dec
push
stos
fstps
jb
data16
sbb
mov
cmc
sbb
loopne
sbb
jp
cmp
lds
mov
mov
pop
adc
cs
jmp
mov
pop
sub
enter
or
mov
mov
inc
fadd
mov
dec
sbb
addr16
pop
data16
lock
mov
cs
mov
scas
int3
addr16
fwait
push
mov
jecxz
fisttpl
es
lret
lods
mov
icebp
adc
mov
mov
and
pop
in
js
xor
mov
dec
inc
mov
sarb
xchg
lret
scas
fnstenv
push
enter
mov
add
daa
pop
cmp
loope
mov
arpl
or
pop
pop
push
inc
enter
add
stc
adc
xchg
jns
adc
pop
pop
cmp
lcall
in
stos
data16
fisubrs
push
pop
mov
sub
sahf
jne
inc
test
pushf
dec
test
dec
ss
mov
xchg
dec
push
dec
test
add
cltd
mov
fcompl
nop
fiaddl
imul
fisubs
mov
jg
aaa
imul
mov
testl
cmp
xor
pop
shll
lods
scas
mov
fs
pop
or
nop
mov
pop
and
jge
ds
inc
bound
es
sahf
clc
cltd
es
out
ficomps
jne
frstor
lret
xchg
sub
cmpsb
mov
loopne
fnstenv
lret
subb
popf
mov
adc
dec
stos
mov
call
xchg
lods
or
add
pop
loop
jnp
jnp
pushf
nop
mov
and
lock
adc
lcall
xor
cmpsb
sbb
fcmovnbe
cmp
xchg
cmp
aam
pop
adc
or
and
out
rcrb
mov
mov
pop
and
inc
stc
addr16
outsb
inc
jp
iret
cli
xchg
mov
sbb
and
out
add
loope
sbbb
sub
xchg
roll
aas
jle
out
pop
jbe
mov
pop
loop
stos
pop
sub
bound
clc
imulb
mov
movsl
insl
inc
aad
dec
sbb
in
push
mov
test
pop
sbb
in
cmp
loop
fsts
adc
shl
bnd
pop
aam
jns
mov
add
scas
sbbb
mov
mov
cld
imul
negb
xchg
rol
jge
xor
test
into
in
je
xchg
das
test
movsl
push
ds
adc
push
test
or
addr16
mov
push
loope
xchg
jmp
pop
mov
shrl
lods
cmp
inc
pushf
pop
pop
mov
lock
jns
es
shll
add
repnz
cmpsl
ret
mov
shll
lea
mov
fwait
out
data16
adc
mov
data16
inc
or
repz
dec
push
jge
add
test
xor
in
xor
inc
cld
js
jae
mov
push
js
xlat
rorb
or
sbb
sbb
mov
fnsave
push
mov
mov
jnp
sub
dec
pushf
test
mov
mov
inc
push
mov
in
into
in
pop
mov
and
sbb
movl
cltd
les
jecxz
in
decl
jg
adc
int3
pop
outsb
loope
and
test
ds
add
mov
mov
les
cltd
stos
cltd
xor
in
mov
inc
clc
jb
ja
push
and
and
push
sub
out
stos
xchg
xchg
add
call
lahf
push
imul
lods
dec
jp
pushf
inc
push
mov
sub
cmp
ret
inc
push
jae
int
push
sbb
repnz
pop
adc
push
and
xchg
popa
inc
xlat
push
ds
jns
das
pop
adc
mov
add
mov
inc
fs
cltd
cmp
flds
or
out
mov
push
out
pop
adc
and
jo
push
push
das
mov
mov
mov
popf
mov
aam
sub
popf
push
rol
dec
add
lods
inc
push
add
push
sarl
push
out
clc
cld
adc
rcrl
aad
lret
fistpll
aas
bswap
adc
pop
lds
mov
mov
xor
shl
and
push
or
pop
ds
dec
loopne
jl
dec
pop
sarl
popa
sub
xchg
push
jno
outsl
loop
push
popa
lods
push
std
and
inc
seta
hlt
int3
outsl
pop
test
orl
lods
jl
fidivrs
in
xor
rorb
and
notb
cmp
std
inc
mov
jnp
inc
fsubrl
popf
clc
inc
fadds
fcomip
iret
cmc
cmp
mov
push
lcall
lret
mov
mov
pop
pop
imul
fldt
scas
hlt
faddp
pop
adc
ret
popa
clc
push
in
popf
and
rcrb
test
mov
shlb
loopne
mov
push
and
ss
inc
jae
loopne
and
das
mov
or
sub
and
push
stos
adc
lods
xor
jno
jne
mov
push
jmp
inc
orl
push
es
scas
ds
ret
jmp
adc
xor
sti
outsb
jecxz
inc
sti
mov
or
clc
xchg
sub
inc
lods
xor
and
rcrl
mov
pop
add
mov
jl
cmp
pop
iret
push
jbe
dec
rcrl
jne
cmp
push
enter
xchg
xchg
fcompl
or
mov
fists
cmpsl
ljmp
bnd
add
sbb
and
pop
xchg
out
notb
mov
adc
rorb
testl
or
pop
dec
adc
xor
lods
xlat
fcomi
stc
jle
sbbb
bound
pop
cmp
pop
daa
in
lahf
mov
cmp
in
imul
movb
sub
mov
mov
movb
sbb
jne
shrl
xchg
or
loop
imul
out
xchg
test
pushf
sub
mov
fcompl
aad
inc
inc
sbb
lods
mov
pop
jl
add
inc
and
fidivrs
mov
sti
mov
bound
fs
inc
iret
lock
cld
pop
mov
in
es
nop
dec
and
mov
inc
push
out
mov
jae
andl
ljmp
push
data16
sub
test
dec
pop
lret
sub
loop
cmp
mov
psraw
lods
add
mov
negl
xchg
push
ja
or
inc
out
popf
jae
mov
das
movsb
mov
or
shll
mov
outsl
jecxz
test
pop
add
lods
push
std
cmp
das
jae
mov
mov
je
add
mov
test
add
jb
jnp
dec
out
fwait
cmp
idivb
pop
cmp
and
inc
divb
mov
dec
scas
jbe
push
in
mov
add
jno
add
pop
cmp
pop
sub
dec
bound
xor
xchg
jge
pop
popf
or
ret
das
xor
cld
xchg
leave
push
or
and
add
je
das
add
xchg
xchg
scas
scas
push
lods
inc
push
cmp
shrl
xchg
push
or
inc
divl
aam
mov
xor
in
je
adc
and
mov
fwait
adc
shl
outsl
dec
inc
mov
mov
in
xlat
pop
or
aaa
push
aaa
pushf
out
shrl
sar
mov
repz
mov
es
lea
jl
fcompl
arpl
cld
lea
lahf
loope
or
stos
lret
xchg
mov
xor
js
mov
fdivp
mov
and
xor
adc
pusha
sbb
iret
out
jae
pop
or
out
aaa
out
push
mov
sub
out
xor
push
jo
je
lea
xor
adc
mov
mov
adc
popa
inc
sbb
jno
call
mov
rolb
dec
fbstp
subb
std
mov
or
mov
rcrl
push
mov
jge,pn
and
fsubrs
push
or
or
rep
clc
mov
loope
cmpsb
jge
enter
add
inc
fldenv
mov
cmp
mov
scas
call
xchg
mov
rorl
dec
fnsave
jl
xor
in
lds
je
and
bound
mov
push
sub
fcmove
movsl
or
lret
dec
aam
or
mov
stos
mov
and
dec
sbb
mov
xchg
xchg
sub
jp
xor
pushf
sub
loope
sbbb
sub
push
or
shlb
mov
fstpl
jmp
lods
mov
into
mov
nop
stos
mov
jno
push
or
int
das
inc
xchg
or
data16
push
cltd
es
aaa
aas
mov
mov
mov
cld
cmpsl
lods
les
push
sub
jnp
inc
lock
movsb
bnd
ja
hlt
jg
adc
bsf
fs
inc
std
pop
mov
sub
faddl
js
add
mov
inc
push
rol
or
hlt
mov
lods
popf
or
lret
out
fcomps
fidivs
push
out
cmp
inc
push
ret
xchg
dec
cmpsl
in
gs
add
jle
call
or
add
xlat
mov
adc
out
sub
icebp
test
dec
icebp
cmp
or
enter
out
int3
les
shrb
lea
and
inc
push
mov
push
fwait
sub
adc
in
insb
and
testb
addr16
mov
cmp
negb
pop
leave
cltd
add
jo
pushf
push
push
in
dec
mov
lcall
mov
cwtl
xchg
add
les
divb
aam
adc
push
jl
jne
mov
xchg
cmpsb
mov
xchg
fsubrl
out
jb
imul
adc
pusha
insb
or
pop
pop
jo
xchg
jle
call
or
repnz
push
add
xchg
mov
popa
push
test
xchg
or
push
adc
call
call
fdivr
mov
sub
cmp
cwtl
sbb
mov
es
stos
xchg
inc
xchg
dec
leave
xlat
int3
cmp
dec
pop
mov
pop
push
fimuls
in
insb
ret
pop
push
into
cmpl
pop
scas
sub
push
add
data16
mov
scas
xor
cmp
pop
mov
test
js
pop
xchg
push
sahf
jbe
jmp
xor
cmc
std
js
rorl
scas
push
out
fistpll
lret
jne
out
add
stc
xchg
push
in
lods
out
stos
mov
les
lret
fsubrs
lret
and
inc
sbb
test
call
or
inc
lret
jns
and
lods
cmp
fimuls
pop
adc
pop
in
daa
pop
sbbb
xchg
pop
sub
cmp
ss
and
push
imul
je
inc
adc
ds
adc
jmp
outsb
rolb
mov
mov
iret
mov
jle
xchg
mov
pop
xor
scas
pop
cli
subb
fsub
fadds
or
mov
mov
and
jbe
mov
fcoml
pop
fnstcw
lods
cli
mov
aam
out
aam
cmc
lods
dec
nop
push
arpl
mov
or
add
aaa
iret
addr16
incb
cwtl
test
jo
xchg
movsl
adc
dec
push
cmpsb
movsb
push
scas
pop
int
jno
inc
aaa
jl
or
and
lods
xchg
inc
mov
lahf
mov
popf
jecxz
dec
test
pop
fldcw
and
cmp
push
ret
jecxz
sbb
pop
fdivrl
dec
jge
jecxz
pop
addr16
daa
pop
imulb
cmp
test
cmp
inc
push
cli
je
in
movsl
push
dec
dec
cmp
in
iret
adc
jae
outsl
mov
xchg
jo
ret
dec
pusha
shll
xchg
movsb
lret
sbb
mov
mov
lahf
fsubl
pop
jnp
mov
mov
lods
jmp
out
dec
push
sbb
notl
sub
mov
pop
shrb
mov
cmc
mov
jmp
in
inc
and
adc
pop
lea
xchg
scas
enter
jns
mov
cmp
and
mov
mov
push
and
sub
aad
cwtl
inc
lods
cli
fsubs
pop
bound
mov
imul
and
hlt
jbe
stc
int
push
insl
xchg
movsl
shlb
push
sbb
xchg
stc
cmp
sub
test
jle
insl
pop
push
xchg
sbb
lds
lret
popa
ds
push
pop
loop
sub
out
repz
cltd
push
ljmp
lret
cmc
adc
mov
test
loop
clc
inc
ret
add
daa
push
lods
dec
ds
sti
cwtl
ss
xchg
test
pop
movsl
cmp
je
push
lcall
jo
mov
push
pushf
cmp
jmp
push
and
dec
fmulp
inc
repz
jne
fcomi
aad
scas
inc
stos
adc
push
lock
mov
sbb
inc
cld
cltd
clc
dec
lahf
push
cmpsl
sub
jne
repz
sbb
popa
push
xchg
orb
add
test
dec
loop
pop
push
scas
inc
sub
add
push
push
in
pushf
xchg
or
jne
stos
stos
lret
cld
int3
lds
push
es
mov
jmp
loope
jp
pop
mov
test
rcrl
or
jge
push
pop
or
or
repz
push
sub
cli
lahf
test
xor
jns
ljmp
and
xchg
movsl
sbb
sbb
bound
sbb
test
clc
mov
push
inc
out
jmp
jmp
out
out
adcl
sub
daa
xor
push
outsl
dec
dec
loopne
jo
ret
cmp
adcb
mov
dec
ds
push
mov
xchg
fcompl
push
push
loopne
mov
cs
daa
vmulsd
and
xorb
pop
imul
or
repz
das
icebp
jle
adc
adc
xchg
xor
mov
je
dec
ds
xchg
cmp
das
sbb
test
hlt
push
enter
and
inc
fwait
push
test
mov
sahf
pop
in
cmpb
jo
imul
push
jno
add
jg
push
in
dec
adc
mov
fldenv
mov
nop
test
sub
int3
dec
or
mov
fsubr
scas
imul
fidivrs
adc
or
cld
adc
ja
jbe
test
pop
cmc
cmp
adc
addb
je
call
add
bswap
and
out
and
push
mov
mov
inc
mov
je
sbb
pusha
jns
ret
lcall
or
jmp
rolb
inc
bound
cltd
orb
pop
cld
sub
pushf
and
push
imul
dec
dec
ret
push
push
xchg
lret
daa
loope
pop
adc
movsl
mov
sbb
int3
arpl
jo
lahf
sbb
test
inc
add
inc
inc
jecxz
mov
popf
mov
and
dec
std
inc
adc
and
loopne
cmp
iret
add
imul
loopne
jmp
inc
das
inc
jle
jae
inc
addl
fsubrs
gs
aad
int3
pop
lret
cli
push
dec
loop
add
repnz
push
imul
repnz
imulb
xchg
push
daa
in
mov
fiaddl
xchg
push
lahf
les
clc
xor
jns
or
sarb
loopne
mov
leave
xorb
xchg
pop
lahf
dec
and
xchg
inc
fcmove
adc
das
jo
repz
mov
mov
mov
ret
out
cwtl
inc
push
pop
icebp
adc
jnp
mov
pop
pop
insb
sti
lcall
push
mov
or
pop
iret
ror
lea
jecxz
and
xchg
dec
jnp
data16
pushf
shlb
cmc
cmp
inc
add
adc
sub
push
jge
xor
cs
adc
push
mov
and
dec
loop
ljmp
repz
pop
stos
daa
xchg
insb
sbb
fs
movsl
int3
inc
jae
inc
fwait
xor
nopl
cmpsl
mull
scas
sbb
ljmp
out
rclb
xchg
mov
jge
jno
xchg
ja
sbbb
add
add
sar
pop
or
negl
mov
add
or
fcom
xchg
stos
and
dec
push
jg
subb
lock
adcl
inc
in
ja
movsl
ds
loop
jbe
pop
mov
xor
add
lods
pop
mov
loope
mov
iret
shrl
loopne
das
mov
lds
mov
jg
xor
fimull
jmp
or
fsts
aas
fistpll
js
lret
lea
jp
aas
loop
insb
clc
je
cli
lods
dec
jo
out
cltd
cmpsl
push
inc
pushf
ds
cwtl
push
fldl
jle
mov
and
ret
test
scas
negb
add
mov
fdivl
notl
and
bndstx
ret
jge
xor
outsl
daa
ss
aas
pop
rcl
neg
lret
dec
xchg
sub
mov
pop
adc
mov
cmpsb
mov
ja
jo
loop
xchg
adc
arpl
mov
mov
fwait
cmp
fistpl
fimuls
aas
pop
stc
pop
dec
andl
jbe
pop
out
pop
sbb
in
inc
mov
daa
mov
xchg
lret
daa
repnz
jle
inc
jg
int
xor
jbe
xchg
cmp
jae
je
and
push
mov
mov
pop
cmp
test
leave
js
sbb
cmpb
scas
mov
jbe
push
or
or
mov
and
stc
fists
inc
add
dec
movsb
test
dec
mov
mov
leave
pop
xor
pop
aaa
jnp
lret
fldcw
cmpsb
dec
cmp
cs
sub
lcall
jne
jmp
jnp
addr16
iret
adc
ss
clc
and
outsl
decl
in
pop
aam
mov
add
ret
bound
push
or
push
lods
movsl
push
shrl
pop
mov
in
push
push
sub
xor
pop
mov
gs
test
xchg
push
loop
mov
push
lret
push
sub
jle
push
push
stos
aas
ja
jno
mov
cmpsb
add
push
pop
lahf
ja
ficoms
aaa
inc
ds
push
in
jl
fwait
add
inc
movsl
inc
lock
es
sub
sbb
test
fmull
jns
sub
imul
ret
pop
jmp
mov
loopne
mov
loopne
test
dec
sahf
add
add
loopne
fsubr
iret
hlt
mov
es
and
inc
push
test
popa
add
jbe
pop
add
mov
dec
and
sub
add
mov
lret
jo
mov
xor
xchg
dec
ret
push
inc
popf
leave
and
and
aam
ds
fwait
ret
test
mov
mov
andb
ja
xchg
mov
xchg
push
stos
movsb
inc
shrl
pop
cwtl
iret
jbe
sub
cmpsb
mov
mov
sbb
add
cmp
into
gs
cmp
fisttpl
jle
pop
push
jl
pushf
xchg
cld
sbb
jmp
lret
and
popa
inc
movups
aas
popa
fsts
cmp
dec
rclb
mov
jnp
cmc
inc
pop
sub
stos
inc
fimuls
jae
mov
stc
mov
stos
xchg
mov
test
mov
cli
push
ficomps
xchg
mov
mov
and
add
inc
jp
out
imul
mov
push
lods
pusha
fnstenv
scas
ljmp
test
in
subl
fists
aad
fstpl
sub
push
sub
dec
hlt
cmc
xchg
call
sbb
jns
cmp
out
outsb
loopne
push
push
jbe
mov
jmp
in
push
in
dec
push
adc
movsb
inc
test
jb
sarl
push
pop
fcompl
push
jo
mov
xor
cmc
dec
arpl
clc
lahf
jl
rcrl
es
fildl
rcll
jnp
adc
sub
int
xor
pop
daa
inc
cmc
enter
mov
and
pop
inc
add
lods
test
fmull
shrl
push
xor
repnz
cmc
jle
jno
add
nop
aas
pop
mov
xor
pop
insl
adc
mov
jne
aaa
movsl
adc
cld
or
std
jo
test
xor
mov
inc
dec
jmp
mov
sub
xor
adc
xchg
push
fdivs
shlb
push
les
lcall
xchg
xchg
sub
xchg
and
fwait
mov
xchg
dec
mov
xchg
push
lods
or
push
fadd
sbb
cmc
cwtl
cmp
leave
adc
lret
jb
pusha
cld
xchg
mov
fcoml
xor
push
fs
inc
dec
inc
arpl
sbbl
cmpsl
xor
rolb
xor
mov
addr16
leave
call
in
pushf
xchg
pop
cmc
mov
sbb
jne
repz
adc
mov
lcall
movsl
push
mov
xchg
jo
stc
adc
mov
imul
jae
in
sub
outsl
sbb
call
jg
mov
mov
ja
pop
inc
lock
shlb
movhps
inc
dec
das
les
jmp
cmp
and
les
mov
rcl
inc
insl
fadds
xchg
push
movsb
rcrl
mov
in
in
push
repnz
fsubrs
jg
fsubl
sbb
dec
mov
adc
ficompl
xor
adc
mov
movsl
cmp
sbb
int3
adc
testl
sub
lods
movsl
mov
push
mov
ljmp
cmp
push
jo
pop
mov
push
mov
xor
dec
cmp
sahf
xor
fincstp
inc
loope
pop
xor
xor
out
pop
xchg
dec
mov
scas
xchg
test
mov
push
jge
fisubs
jae
mov
popf
xchg
ja
push
mov
inc
push
fidivl
jne
xchg
sub
cmp
sub
sbb
cwtl
cs
inc
clc
sahf
xlat
outsb
xor
fs
cmpsb
xchg
les
jle
mov
jle
inc
fsubs
mov
data16
in
sub
in
and
cld
inc
test
jns
imul
cltd
rorl
dec
ret
in
and
sahf
and
xchg
sub
inc
mov
es
fisubl
fwait
insl
pop
dec
pop
xchg
mov
or
mov
jge
mov
adc
aam
adc
dec
mov
out
fwait
xor
jle
push
mov
sub
pop
mov
aad
jle
sahf
adc
ret
or
mov
add
subl
jle
xchg
or
sbb
sbb
or
cmp
sub
cmpsl
mov
pop
gs
sbb
mov
mov
insl
xor
jnp
mov
or
jbe
xchg
xchg
movsl
stc
pop
mov
loope
aaa
add
push
xchg
movsl
mov
mov
idivb
pop
scas
addl
in
jo
dec
testb
xchg
stos
and
mov
cmp
aam
out
cld
shrl
cmc
loop
jno
dec
daa
mov
sahf
hlt
ret
push
je
out
enterw
inc
out
cltd
or
scas
testl
in
jp
std
pop
mov
cld
mov
jns
cmp
lcall
lods
lods
daa
or
mov
jle
out
repnz
xor
ja
lcall
out
jg
jmp
lods
lods
outsl
fs
ret
test
movsl
vmovdqa
cmpsl
xchg
mov
jl
push
mov
push
pusha
dec
into
adc
xor
adcb
push
sti
out
adc
aam
ret
push
cmp
loope
lret
jae
cmp
mov
pop
jmp
into
mov
and
ret
pusha
lods
add
lcall
stos
mov
scas
xchg
inc
pop
lds
mov
out
jle
adc
mov
sti
clc
outsl
incl
mov
lcall
add
out
lds
dec
mov
inc
inc
mov
sti
psubq
pop
add
mov
jle
jo
push
xchg
cmp
mov
clc
xchg
xlat
xchg
dec
lds
lock
pop
xor
xchg
in
int3
jg
sbb
arpl
jns
xor
push
loop
std
dec
faddp
rcrl
push
outsl
xor
xor
fistpll
mov
mov
sub
test
inc
inc
pop
in
xchg
decl
lret
ret
xor
xor
xchg
pop
clc
inc
into
fs
xchg
dec
ja
cmp
jl
sub
outsb
xchg
xor
or
or
loope
pop
xor
insl
jnp
fs
les
inc
inc
daa
add
jmp
mov
popf
jno
mov
push
fstpt
ja
sbb
imul
test
je
push
loope
jno
cli
mov
adc
mov
fwait
aaa
fisubrl
xchg
sbb
jbe
cmp
pop
xor
aaa
or
movsb
xchg
sti
mov
leave
repz
mov
jmp
std
loop
push
dec
dec
mov
in
int
xor
clc
mov
es
xor
in
in
in
push
mov
mov
fdivrp
push
cld
cltd
dec
repz
fstps
out
je
adc
insl
in
aad
inc
arpl
outsl
inc
pop
mov
lea
pop
inc
inc
fnsave
sbb
cmp
sub
add
addr16
pop
adc
aaa
shr
imul
std
adc
jecxz
aas
adc
push
add
aaa
mov
mov
stos
cmp
shlb
xor
aam
cmpsl
out
loopne
loope
dec
adc
rcrb
vmread
inc
jae
in
in
pop
mov
aad
aad
add
rolb
sahf
xor
xchg
inc
lea
rcrb
nop
nop
test
sbb
lock
jo
pop
and
cmp
mov
gs
jl
or
add
lret
scas
and
jo
test
lret
push
call
or
xor
xor
cwtl
xor
mov
bound
mov
idivl
imul
jnp
fsubs
mov
xchg
sub
insl
pop
mov
clc
fdivrs
ljmp
jno
add
pop
stc
movsb
mov
fcompl
out
js
mov
es
pop
lret
sti
insb
cmp
js
adc
or
pop
or
adc
push
cld
mov
jb
clc
movsb
or
push
aam
std
loop
cmc
xchg
cmp
bnd
sub
mov
jg
stos
push
negl
dec
lahf
pushf
jns
xchg
sahf
xor
out
mov
pusha
jb
ret
leave
jae
xor
loope
cwtl
jns
mov
lea
push
je
imul
pop
cmp
mov
cmp
int
mov
adc
repz
into
imul
adc
js
shlb
mov
arpl
cld
sarb
sbb
push
scas
jg
fcomi
sub
adc
lods
jbe
and
jb
cmpb
sub
jns
lods
mov
mov
cmp
lds
xlat
push
cmpsl
lods
cmp
shl
add
adc
push
fdivl
sbb
cld
mov
fwait
push
add
sbb
outsl
add
and
pop
idivl
dec
out
push
mov
or
pop
mov
pushf
lods
in
push
push
aas
fwait
jno
into
fdivl
pop
mov
mov
cmp
jle
test
and
mov
or
cmp
jb
mov
sti
popa
cmp
and
jnp
rcll
and
gs
and
add
shrl
aad
fisttpl
test
push
int3
pop
test
inc
pop
jno
lods
mov
push
fs
inc
insb
mov
xor
or
push
dec
cmpsb
js
jno
test
repz
dec
add
inc
ficoml
jmp
int
jo
xchg
push
outsb
sub
xchg
aad
inc
pop
pop
stc
and
xchg
addl
clc
aas
loopne
dec
add
inc
lock
in
out
xchg
sub
fmull
push
shlb
mov
sbb
jbe
imul
xchg
sahf
out
sbb
cmpb
out
mov
int3
outsl
sbb
pop
mov
ret
mov
gs
outsb
jo
dec
cmp
mov
dec
sub
cmp
dec
es
jbe
pop
push
dec
add
mov
inc
adc
mov
out
nop
out
xor
or
lcall
repnz
cs
icebp
cmc
into
jg
mov
repz
and
xchg
test
in
sub
outsl
xor
jp
push
dec
jno
out
push
mov
clc
lods
inc
sub
sub
lds
lcall
xchg
mov
es
push
pop
cmpsl
sahf
clc
mov
xchg
cmpsl
mull
xchg
mov
cmp
loop
sub
mov
fisubrs
lds
test
lods
push
sti
cmpsl
addr16
or
cmc
xchg
sti
mov
scas
test
push
jno
test
ja
xchg
and
push
daa
fbstp
lret
popa
iret
mov
add
mov
mov
cmp
cmp
popa
ljmp
cli
out
pop
mov
fnstcw
and
int3
pushl
xor
movsb
icebp
lock
mov
xor
mov
pop
scas
and
aad
icebp
lret
idivb
lea
les
daa
stos
pop
js
xlat
dec
mov
rclb
pop
repz
fidivs
std
iret
iret
xchg
in
ljmp
add
mov
pop
jle
xchg
imul
shrl
xchg
ljmp
fmuls
adc
jp
or
add
xor
push
mov
sub
mov
jp
daa
outsl
add
push
mov
sub
jb
jbe
cmpsl
lock
push
inc
mov
xchg
cmp
loope
popf
adc
push
inc
test
inc
sti
jmp
push
push
int3
fnstenv
inc
mov
sbb
inc
gs
push
sti
xchg
sub
test
js
daa
inc
lods
dec
enter
mov
xchg
rolb
dec
mov
repnz
les
xor
pop
push
scas
dec
and
or
mov
fs
loopne
in
jae
lds
jb
les
pop
push
cmp
cmp
pop
push
push
or
jnp
mov
jg
test
mov
pop
xor
aaa
jge
lods
stc
iret
fs
cmp
inc
or
lds
mov
pop
movb
xlat
es
pop
repz
fs
mov
fisttps
rcrl
ret
js
and
cltd
dec
lods
out
sub
lcall
xchg
cmp
sbb
stos
mov
jno
jae
test
mov
mov
rorb
hlt
sub
pop
jae
push
aas
mov
in
lret
shlb
popl
inc
push
int3
je
gs
pop
mov
imul
pop
inc
leave
pusha
jmp
cmp
jne
pop
cmp
stos
loope
aad
cld
mov
repnz
test
fldt
jns
repz
push
adc
dec
fsubrl
inc
mov
adc
popl
mov
negb
push
mov
in
imul
aad
dec
jle
mov
xchg
xor
push
fstl
cmc
xor
std
xchg
jl
movb
sahf
sbb
sub
push
rcrl
cmc
js
daa
cmp
xchg
sub
fnstcw
xchg
cmpsb
mov
xor
pop
into
push
add
dec
xchg
loop
mov
icebp
or
xchg
and
cmp
pop
fwait
cmp
stos
mov
push
jmp
push
insl
std
xchg
lods
sub
sbb
mov
cs
incl
mov
push
insb
sbb
sbb
popa
orb
cmpsl
cmpsb
jno
push
leave
jns
push
and
cld
mov
ret
js
aad
push
lcall
or
push
aad
jg
adc
ja
pushf
xor
jne
xorb
mov
xchg
xlat
pop
push
sahf
xor
lahf
sub
repz
push
pop
push
pop
movsl
mov
dec
xor
mov
testl
cld
dec
sub
push
ret
pop
xchg
pop
push
cmp
jbe
movsb
sarb
add
xor
mov
outsb
psrld
mov
scas
sbbb
sarl
gs
lret
cmc
rorb
xchg
ret
pop
ds
in
cltd
jmp
or
in
es
push
orl
lret
or
push
aad
mov
andl
mov
rcrl
jnp
inc
lcall
inc
pop
in
and
inc
push
pop
inc
cmp
ss
ds
dec
or
adc
aas
push
jo
sarl
fistpl
xor
jbe
jge
je
cli
sahf
xchg
pop
adc
push
jno
xchg
sub
inc
mov
sbb
inc
mov
aam
pop
push
cli
cmp
xlat
inc
cmp
sub
mov
jl
ja
cwtl
movsb
popf
lret
jle
rcr
mov
or
nop
mov
mov
lret
arpl
lds
pushf
scas
das
jns
mov
sub
int3
jecxz
inc
or
jo
mov
in
sub
into
pop
fsubr
or
inc
cltd
aad
loope
ret
in
cmc
pushf
sub
sbb
pusha
daa
jmp
mov
sub
roll
into
test
aam
test
cmp
ljmp
pop
scas
xor
subb
sub
stos
mov
mov
scas
sbb
aas
xor
movzbl
ja
lcall
mov
scas
sub
mov
mov
add
data16
test
cmp
rcll
xchg
jle
cmp
dec
outsb
and
test
fadds
mov
in
popa
dec
hlt
jbe
arpl
ficomps
jae
decl
std
test
test
mov
jp
adcl
leave
pop
enter
jg
pusha
fisttpl
ds
outsl
push
mov
and
adc
mov
fwait
pop
jb
jecxz
aas
xchg
out
popf
mov
pop
mov
jo
stos
loop
rorb
jg
fstpt
in
vmovd
ds
sbb
fdivrs
rorl
jno
push
jecxz
movsb
cmp
and
add
fsts
inc
sbb
lea
subl
into
jecxz
out
shll
push
dec
lret
call
repnz
pop
and
pop
scas
jmp
repnz
mov
push
or
test
mov
ficoms
cmp
cmp
jecxz
dec
scas
cld
js
subb
shrl
imul
mov
xor
lods
or
or
xchg
lods
sub
add
imul
cmc
insl
xor
aad
xor
xchg
mov
bound
sbb
imul
clc
mov
setns
lods
inc
icebp
fisttpll
inc
push
push
push
lock
lcall
push
mov
mov
dec
out
cmp
mov
outsb
push
rcrl
test
lods
cmpsb
pop
icebp
sub
js
xchg
out
shl
es
lods
lret
inc
fmul
stos
js
push
jmp
movsb
cmp
mov
in
lds
sahf
out
or
fildl
test
mov
out
cmpsl
mov
pop
mov
nop
ss
out
ret
call
dec
dec
pop
cmpsb
cmp
dec
repz
aas
jle
std
stc
push
jge
inc
loope
dec
xchg
push
jae
mov
push
fidivrl
int
icebp
dec
pop
or
daa
xor
pop
jnp
mov
push
cmp
jecxz
and
jno
cmpsb
xchg
bound
cmpsl
cs
sub
pop
sbb
pop
in
push
push
xorl
sbbb
xor
lret
cmp
cld
pop
imul
mov
add
sub
dec
out
push
adc
dec
ljmp
repnz
push
js
mov
adc
mov
xor
fmulp
lods
and
rolb
dec
popa
mov
cmp
loop
dec
dec
movb
cmp
mov
pop
in
outsl
dec
lret
sub
aaa
mov
ret
xor
pop
mov
ret
rclb
dec
nop
sbb
popa
ret
rcr
repnz
add
shrb
xor
push
hlt
xchg
inc
fcmovnb
xchg
jne
dec
out
stc
pop
xor
push
in
ja
imul
jmp
pop
dec
loop
popl
int3
xor
push
js
push
push
in
cmp
jle
pop
jae
movsb
loope
mov
mov
and
push
rol
xor
cltd
mov
in
les
pop
pop
add
and
mov
lea
mov
imul
mov
cwtl
imul
mov
sub
testl
jae
test
scas
jl
rcrb
mov
jns
test
arpl
out
lds
or
test
int3
sarl
jns
mov
adc
cs
xor
call
outsl
mov
mov
cmpsb
sbb
daa
bound
xor
cmp
loope
aad
sbb
das
sub
adc
sarl
shlb
popa
test
inc
test
hlt
mov
push
insb
adc
popf
neg
cmc
sub
cmp
and
fsubrl
test
leave
jge
push
in
inc
sahf
test
cld
mov
je
ds
aam
cli
mov
lds
fcmovb
and
negb
inc
aad
cmp
dec
cmpsb
fstl
in
cmp
mov
sub
xor
loope
jecxz
add
xor
jne
les
mov
and
pop
mov
leave
push
jl
pop
jno
push
movsl
in
jecxz
arpl
in
jp
hlt
sbb
cmp
fmuls
or
mov
xchg
jns
daa
outsl
pop
mov
out
enter
mov
xor
repnz
pop
add
jae
or
xchg
cmp
mov
subb
xor
push
jle
mov
jmp
aas
cli
addl
inc
fidivrs
repz
js
gs
sbb
mov
call
adcb
dec
scas
ret
sbb
scas
adc
mov
sbb
cmp
mov
mov
stos
dec
or
jnp
jne
out
sbb
sub
xchg
mov
push
sub
rorl
insb
inc
pop
cmp
pop
dec
inc
inc
lcall
fildll
or
shrl
inc
xchg
pusha
xchg
cmp
imul
scas
push
gs
xor
or
xchg
mov
mov
xor
jle
mov
fcompl
leave
mov
cwtl
ja
dec
push
aad
imul
scas
iret
mov
fsts
lds
ret
mov
mov
in
mov
xlat
and
cld
outsl
not
dec
pop
xchg
ds
cltd
and
inc
mov
js
pop
mov
repz
fsts
ljmp
push
mov
or
popa
jno
add
pop
sub
mov
mov
scas
out
dec
out
subb
je
je
and
push
and
xor
push
es
adc
aaa
xlat
sbbl
dec
mov
and
cmpsb
rclb
cltd
les
pop
clc
push
addr16
dec
loop
mov
shrb
int
and
dec
xchg
push
push
je
popl
add
js
xchg
and
pop
js
pop
cmp
ret
call
data16
call
in
test
lods
je
loopne
nop
arpl
int3
fsubl
movsb
shld
pop
in
orb
pop
cmc
sub
bound
mov
xchg
cmp
insl
sub
insl
jbe
push
in
loop
mov
loope
cmp
and
push
xor
mov
xchg
loopne
inc
fsubrs
xor
mov
cmpsl
addb
inc
aaa
repnz
bound
mov
les
adc
adc
test
sahf
sub
cmpb
cli
movsb
movsl
or
ret
and
ret
gs
sti
xchg
shrl
dec
dec
pop
jno
push
aas
dec
or
inc
push
dec
jle
ficoms
adc
sahf
inc
push
ja
inc
popa
and
pop
inc
cwtl
cwtl
dec
and
scas
push
sar
xor
xchg
push
sarl
out
xchg
mov
movsb
mov
repnz
sub
or
loop
jnp
dec
fildl
xor
mov
sub
add
sub
sbb
pop
cmp
xchg
lods
xchg
les
repz
ret
rcl
test
inc
es
jmp
and
jo
int
inc
jmp
jecxz
pop
lret
mov
jmp
inc
mov
xchg
push
insl
lahf
mov
imul
jecxz
icebp
movsl
stos
aaa
and
inc
push
mov
andb
add
arpl
shlb
xchg
sub
inc
pop
jmp
cmc
cmp
call
push
xchg
push
fwait
jne
push
mov
adc
cmpsb
les
inc
inc
sub
cmpsl
sbb
mov
imul
test
inc
add
xor
loop
lahf
out
scas
push
jnp
adc
push
xor
addb
js
mov
or
fstl
pop
mov
sbb
leave
fstl
test
sbb
fsubl
out
outsb
sbb
dec
jbe
fcompl
push
dec
std
inc
or
loopne
mov
pusha
mov
mov
daa
jb
adc
adc
repnz
jmp
jle
and
push
push
mov
lods
jb
aam
cmp
push
in
cmc
fwait
xor
pminub
into
shlb
insl
aad
jge
push
cmpsb
hlt
mov
insb
inc
in
call
ja
out
ds
jno
dec
insl
aas
sbb
testb
xchg
ffreep
mov
addb
jb
jne
jl
or
shll
inc
les
jl
pop
test
popf
shrl
mov
icebp
mov
inc
mov
cmp
bnd
fnstenv
inc
pop
cmp
push
testl
pusha
mov
jbe
fistpl
dec
xor
andl
hlt
dec
rolb
jns
jge
adc
mov
inc
loopne
push
scas
xchg
ja
imul
loop
xchg
icebp
pop
loop
repnz
and
out
popa
aad
lahf
daa
adc
cmp
clc
adc
les
repz
call
jb
jnp
push
std
adc
cs
pop
mov
fbstp
inc
sub
cmp
aaa
popf
cmpsl
imul
xchg
sub
leave
subb
jo
ret
xchg
or
std
jo
jb
aam
test
cmp
out
test
add
mov
jns
in
mov
inc
in
pop
mov
sahf
xor
incl
xchg
mov
test
call
popf
fdivl
sbb
add
or
mov
aad
adc
pop
aad
stc
push
aas
loopne
sbb
inc
in
pop
sbb
jno
sub
call
js
push
jp
stos
out
outsb
adc
faddl
test
inc
ficoml
lret
xor
out
fidivrl
out
mov
mov
shl
and
add
jg
in
pop
adc
fidivs
and
int3
lcall
aaa
mov
fwait
test
push
jbe
pop
jg
jle
xchg
stc
or
mov
mov
sbb
rcrl
lods
pop
lea
xor
or
and
pusha
sub
jp
test
push
shr
or
push
pop
cmp
sub
pop
in
adc
mov
xor
std
adc
xchg
pop
or
insb
cmp
fsubrl
cmp
jb
dec
arpl
cmpl
lods
mov
mov
sbb
mov
cmp
mov
dec
arpl
cltd
jno
adc
test
and
and
sbbb
push
stos
repnz
cmp
ret
rcrb
jnp
push
or
dec
pop
lret
shrl
popa
sbb
inc
pop
mov
jl
ds
dec
adc
nop
lcallw
lret
testb
push
stos
lahf
jb
daa
xchg
lcall
pop
hlt
xchg
push
rorl
or
repnz
inc
repz
into
and
inc
inc
xchg
mov
stos
addb
repz
push
or
inc
scas
jp
in
push
stos
jp
dec
mov
into
data16
lods
add
mov
or
ljmp
fwait
sbb
mov
ja
ltr
dec
out
push
or
pusha
mov
rorl
mov
jno
stc
stos
js
out
adc
les
loope
cmp
mov
ss
daa
cld
mov
jae
insb
sbbl
cli
dec
cwtl
mov
xor
jmp
mov
xchg
pop
in
cmp
push
jecxz
jae
mov
push
jnp
dec
movsb
div
inc
inc
pop
in
jnp
dec
xlat
cwtl
xchg
outsb
clc
shl
and
adc
outsl
adc
sub
sub
lcall
leave
mov
push
popa
push
fists
subl
or
int3
pop
loope
inc
cmpsl
sbb
push
sub
fnstenv
out
outsl
loopne
jae
cmp
jnp
fbld
loopne
xchg
scas
jl
and
adc
sbb
xor
insl
add
sbbb
stos
lret
pop
mov
jmp
cmp
and
xchg
imul
repnz
sbb
sub
inc
mov
and
xchg
xchg
jbe
jg
sub
aaa
cmp
js
xchg
nop
into
bound
jg
aas
adc
jle
lret
mov
jo
add
push
cmc
testl
shrl
stos
mov
pop
scas
test
sub
loopne
xchg
ret
sbb
pop
addr16
and
push
das
pop
hlt
xor
xlat
sub
out
jnp
adc
mov
mov
in
jae
or
cmp
pushf
pop
push
jmp
stos
mov
sbb
and
frstor
stc
xchg
dec
ret
mov
pop
in
push
or
xchg
lods
aam
aam
cmp
push
mov
jg
and
cltd
scas
lods
jmp
icebp
push
ljmp
scas
lock
pop
stos
cmp
sbb
mov
cmpsl
jle
mov
movsl
push
out
sub
pop
pop
pushf
outsb
add
cmp
sahf
ret
pop
mov
push
adc
and
inc
jecxz
and
mov
lret
xchg
xor
and
jecxz
mov
push
or
loopne
outsb
sbb
decl
test
mov
fsubrl
dec
pop
mov
inc
das
mov
mov
mov
push
mov
push
rorl
push
mov
enter
and
imul
imul
mov
add
les
and
pop
sahf
xlat
in
push
pop
stc
es
inc
cmpsb
in
xchg
xchg
cltd
push
push
aas
in
xor
fs
mov
inc
popf
lret
flds
popa
sub
push
pop
mov
fldcw
cmpsl
test
sbb
popf
xor
xor
pop
inc
daa
ja
xor
push
jne
push
inc
fnsave
fldenv
jg
dec
lock
lods
lods
repnz
cmpsb
add
outsb
std
lods
test
ret
fwait
ja
shl
rclb
test
icebp
bound
xchg
aam
and
fnsave
xor
jbe
dec
adc
aas
loope
addr16
insl
mov
jl
cmpsb
dec
add
fstps
jle
out
out
sahf
xchg
out
ljmp
sahf
add
js
insb
mov
ficoms
test
mov
xchg
out
je
mov
sub
data16
les
or
scas
pop
push
jmp
enter
lea
dec
xor
das
xchg
push
xchg
jmp
jb
jo
out
push
popf
add
mov
sahf
and
or
pop
add
xor
jle
mov
jno
outsb
jl
mov
cmc
mov
jns
lret
std
xchg
add
ljmp
arpl
fcoml
js
movsl
sub
idivb
mov
idivb
rorl
mov
push
inc
and
int3
arpl
mov
add
sbbl
push
sub
stc
testb
jb
scas
inc
cmp
push
pop
in
jae
push
fidivrs
sbb
xchg
mov
add
aam
pop
fcmovnb
ffreep
cmp
mov
mov
jmp
into
fbstp
dec
mov
adc
shrb
outsb
sbb
xor
cltd
insb
and
adc
xchg
mov
xchg
out
imul
mov
or
call
lret
xor
int3
inc
idivl
fstps
aad
and
mov
dec
add
jns
mov
test
mov
and
lahf
shrl
add
jp
fcomps
jo
pop
int
dec
cmp
loope
ffreep
aam
inc
add
xchg
mov
jae
aaa
les
add
stos
scas
push
mov
ja
fmul
push
inc
popa
xchg
pusha
ds
pop
push
or
cmpb
jecxz
vmovsldup
hlt
nop
cmpsl
aad
adc
cli
rcrl
adc
scas
jmp
imull
mov
jl
push
stos
orl
sbb
and
mov
ja
or
adc
fbstp
scas
in
test
mov
cmp
ret
fucomp
out
xchg
push
adc
add
cmp
sbb
outsl
rolb
inc
repnz
clc
movsl
jl
out
xor
cltd
loopne
jns
jbe
fs
pop
les
leave
mov
mov
sub
cmp
cmp
popf
sar
ret
add
fdivrs
sbb
in
std
sub
sub
fwait
or
xor
cmc
jno
test
fidivrs
pop
sub
fnsave
add
outsl
stos
pushf
sub
mov
dec
dec
loope
fsubrs
xchg
repz
div
sbb
sbb
xor
pushf
les
adc
lds
sub
pop
cmp
push
notl
xor
inc
or
cs
push
fistps
mov
dec
or
pop
sub
mov
rolb
push
rcrb
mov
mov
jl
push
mov
loop
push
out
xchg
dec
pop
and
cwtl
cmp
pop
outsb
jnp
faddl
pop
add
notl
push
js
insb
aas
xchg
sub
cltd
lock
mov
gs
or
push
xor
fstpt
inc
mov
dec
adc
orb
and
sbb
jb
scas
cmpsl
dec
jp
jae
sbb
xchg
scas
jnp
sahf
popf
dec
xchg
les
sbb
inc
cmp
sub
xlat
mov
or
add
add
xchg
ficompl
fldcw
mov
pop
insl
or
xchg
xor
hlt
or
push
ret
les
jecxz
repz
arpl
inc
jns
add
das
fnstcw
sub
popl
sbbb
jb
test
push
cmp
les
pop
pop
fldcw
inc
mov
imul
loopne
adc
out
imul
cmp
mov
jns
shrb
jle
mov
div
es
sbb
stos
testl
mov
mov
xchg
mov
call
pop
sub
rorb
mov
arpl
enter
gs
add
pushf
xchg
jbe
imul
xor
cs
xor
jmp
or
or
mov
xor
rorb
ret
xor
call
inc
xchg
mov
jns
mov
loopne
jmp
out
loope
push
sub
mov
or
jle
push
ja
subb
dec
xchg
ds
cmpsl
push
and
insl
loopne
std
or
in
mov
mov
push
mov
mov
addr16
test
xchg
sbb
adcl
imul
pop
rcrb
jo
stos
pop
das
rorb
repnz
mov
sbb
fbld
push
repnz
adc
inc
out
or
add
divl
pop
ja
sub
nop
daa
push
orl
lods
dec
pop
cltd
cmp
and
fadd
fldl
push
lock
add
arpl
xor
repnz
sub
pushf
jg
mov
in
divb
cmp
mov
sub
mov
dec
dec
push
int
xor
dec
xor
mov
push
or
lret
cli
cmp
aas
loop
inc
push
xlat
jg
aam
lea
fdivrl
aad
jns
mov
inc
adc
testb
and
jecxz
popf
cs
das
fnsave
mov
and
fdiv
xchg
push
push
push
mov
mov
test
adc
mov
sub
iret
mov
icebp
ret
or
ret
dec
daa
push
stos
je
inc
lret
fcoms
push
jmp
test
jmp
cmp
push
flds
lret
mov
inc
push
dec
mov
cmpsl
jbe,pt
xchg
dec
xorb
insb
adc
lods
in
inc
shlb
fistpl
sub
xor
daa
outsl
or
add
int
es
add
movsb
test
and
mov
dec
jecxz
jmp
jo
addr16
push
mov
sbb
xchg
arpl
cmp
mov
xor
fnstcw
jbe
mov
and
adc
or
mov
xchg
dec
ja
dec
aad
adc
loopew
jp
lea
mov
xchg
adc
xor
sub
enter
ret
add
insl
ss
and
lods
test
inc
xchg
mov
rcl
wbinvd
pop
dec
xchg
mov
push
mov
xorl
xor
cld
popa
mov
out
jl
adc
jle
incl
inc
cmpsl
xchg
fs
mov
lods
shrb
sbb
cmpsl
mov
inc
push
mov
mov
pop
cmp
inc
iret
mov
pop
lret
loope
cmc
inc
xor
popa
push
mov
stc
test
and
fcomi
into
pop
sub
js
cmp
jo
pop
insb
jne
jne
add
xchg
stos
sbb
clc
mov
test
or
jl
push
xchg
call
aas
inc
sti
jl
sti
fwait
sub
jnp
inc
das
jbe
ja
shrb
mov
ja
daa
xchg
push
mov
popf
icebp
and
adc
ljmp
mov
es
std
inc
ljmp
dec
dec
and
adc
out
jae
stc
push
sub
wrmsr
sbb
and
mov
pusha
jl
dec
imul
push
push
jb
loope
push
jb
fmuls
cmc
adc
sti
aam
push
xchg
negl
bound
mov
mov
lret
sub
decl
fisubs
push
pop
je
imulb
mov
xor
cltd
repnz
pop
jge
sbb
jo
jp
test
loop
int3
fbld
fbld
fiadds
push
pop
popa
out
dec
push
fmull
aam
push
sbb
pusha
add
push
rcr
jge
push
jmp
mov
idivb
sahf
repz
in
int
push
sbb
cmpsb
dec
sbb
sub
rorb
dec
adc
aam
daa
out
pop
add
arpl
test
dec
or
fmull
mov
movsl
push
push
outsl
jmp
cmpsl
call
outsl
outsl
xor
rolb
hlt
inc
push
mov
push
xchg
push
fistpl
cld
sub
int
shrb
inc
xchg
leave
lock
sub
pop
pop
jbe
adc
dec
lcall
leave
std
pushf
jnp
aaa
sbb
mov
xor
arpl
jl
shlb
pop
leave
jnp
int
out
cli
jl
inc
sbb
leave
inc
and
ret
test
and
xlat
adc
mov
iret
jnp
and
cmp
sbb
jne
sub
dec
pop
addr16
cs
int
xchg
or
sbb
pusha
int3
xchg
add
or
cs
out
jo
stc
pop
fbstp
sbb
sub
out
xchg
mov
inc
cwtl
pop
lret
faddl
out
mov
fs
push
xchg
mov
mov
cmp
divl
jecxz
scas
sbb
rolb
add
movsl
inc
xor
in
std
sub
cwtl
pop
jmp
inc
push
cs
out
mov
int3
enter
fidivs
aam
fs
fadds
cld
cmp
xchg
sbb
inc
xchg
insb
idivl
inc
fistpl
mov
push
fistps
lds
call
int3
insb
in
clc
out
push
sbb
aad
test
repnz
call
lds
xchg
or
sti
pop
adc
jnp
sbb
sbb
clc
gs
nop
cmpsb
pop
xor
jb
mov
and
xchg
mov
aam
xchg
orb
xor
insb
add
xchg
xlat
cmp
mov
jmp
lods
pop
loopne
sbb
mov
push
inc
mov
cmp
das
dec
cmpsl
mov
call
sub
jl
mov
mov
fldl
pop
out
dec
out
xlat
outsb
into
mov
sbb
cmp
xchg
or
sbb
dec
and
ret
leave
jo
add
pop
test
pop
xor
mov
pop
and
pop
movsb
aad
imul
cmp
add
movsl
mov
popa
jle
stos
scas
mov
fsubp
pop
cmc
push
add
adc
mov
les
or
add
add
in
push
inc
lods
cmp
add
jge
pop
mov
fidivl
shrl
imul
or
idivl
xlat
jbe
faddl
test
sbb
scas
je
mov
int
addb
movsb
sub
pop
xor
dec
loopne
mov
fdivrp
hlt
mov
mov
in
mov
push
lea
ja
inc
test
lret
fcompl
mov
faddp
aas
mov
cmp
bound
sub
pop
push
push
roll
mov
cmp
and
les
clc
js
mov
mov
stc
lea
mov
inc
aas
in
push
push
cmp
fisttps
cmpsb
in
sub
std
or
cltd
subl
pusha
and
ret
repz
imul
mov
dec
in
pop
adc
adc
ss
cli
out
adc
ds
outsl
push
cld
pop
icebp
pusha
scas
fsts
mov
jb
js
mov
dec
mov
cltd
push
sub
insl
xchg
hlt
xor
adc
cmp
incb
mov
mov
push
mov
pushf
std
jg
ja
subl
mov
jmp
ret
jp
rcrb
fildll
push
ljmp
out
insl
mov
mov
pop
icebp
addr16
mov
jge
push
iret
pop
mov
addr16
stos
movd
push
xor
fwait
aad
cmp
addr16
push
out
jle
or
pop
ds
pop
cwtl
outsl
jp
aam
shrb
or
mov
push
add
jns
aad
movsb
outsb
sbb
push
dec
mov
mov
jnp
push
lods
notl
imul
jns
movsl
dec
loopne
add
in
out
dec
fldl
loop
ficompl
jmp
into
adc
sub
pop
clc
or
test
ffreep
popl
jae
test
mov
fbstp
shrb
movsb
insl
jp
push
pop
add
add
pop
jecxz
pop
leave
cmp
test
pop
inc
das
lods
lea
pop
loopne
stc
in
mov
dec
repnz
sub
ss
into
and
out
jns
mov
or
in
mov
js
mov
movsl
jno
or
push
or
pop
shll
xchg
xor
jmp
or
jb
repz
icebp
mov
loopne
lods
cmp
or
pop
dec
sub
mov
adc
push
fwait
insl
sub
fldcw
aas
fdivs
pusha
cli
fisubl
bound
push
push
cld
je
mov
push
and
xlat
mov
ja
push
lea
aam
aas
repz
mov
popa
ret
xchg
add
cld
or
jg
pop
dec
repz
xchg
popl
fbstp
xchg
inc
push
push
movsb
mov
xchg
inc
jnp
loope
pop
sub
fcompl
call
ds
xor
andl
push
scas
into
add
ljmp
mov
lea
mov
lret
jne
ficoml
mov
andl
add
adc
pusha
decl
push
pusha
sub
mov
bound
adc
in
or
popf
js
cltd
stos
lret
xorb
cmp
lahf
pop
jno
scas
mov
jb
sbb
je
test
push
movb
jge
add
inc
fsubrp
jp
mov
aam
idivb
mov
popf
sub
pop
jl
fwait
in
mov
xor
and
and
popa
add
add
je
push
fidivs
sbb
addr16
add
aam
mov
dec
aad
sbb
loop
in
jl
in
hlt
mov
dec
adc
stos
or
test
adc
xlat
jecxz
mov
fdivrs
shr
mov
stc
subb
lea
shrb
icebp
sbb
js
pop
mov
pop
jle
movb
sbb
jns
pop
mov
dec
popf
inc
add
xor
mov
into
sbb
imul
xor
fmulp
shlb
dec
or
mov
pusha
mul
mov
and
movsb
shlb
mov
cmp
fidivl
pop
or
xor
mov
int
repz
loope
je
xor
insl
dec
cwtl
mov
cmpsb
les
pop
mov
and
pop
fcomip
rcrl
and
mov
and
aad
lock
push
test
daa
cld
dec
lods
xorl
mov
xchg
icebp
adc
mov
xor
movsb
inc
negl
mov
adc
lds
or
or
mov
sub
pop
pop
in
mov
js
mov
ja
add
sbb
mov
push
sub
jne
dec
fnstenv
adc
rolb
in
and
push
out
inc
mov
jne
xchg
cmpsb
pop
fsubp
orl
jl
gs
popf
sub
xchg
cs
ret
push
sbb
sub
mov
roll
mov
mov
jb
in
xor
cmp
jl
xchg
sub
mov
sbb
push
sbb
push
in
add
inc
and
cvtps2pd
adc
cmpsl
push
daa
out
repnz
xchg
dec
mov
loopne
sbb
daa
mov
loope
ss
lock
pop
sub
pop
in
pop
sub
test
push
mov
fcmovnb
imul
ljmp
sahf
cmpsl
xor
lahf
jns
xchg
cmpsl
cwtl
leave
mov
lds
push
jl
mov
cmp
mov
add
adc
and
or
add
enter
xchg
mov
loopne
dec
inc
sbb
std
mov
pusha
jl
rcll
pop
and
sub
pop
fldl
xchg
push
test
and
bnd
dec
cmp
sub
lods
aas
pop
lahf
clc
mov
push
mov
mov
insl
enter
pop
sbb
rol
outsb
fsub
xor
xor
outsb
pop
mov
add
into
lret
int
fcmove
cmpb
stos
nop
fisubl
je
test
pop
mov
int3
pop
sub
aaa
xlat
jns
lea
pushf
mov
dec
cmp
sub
mov
push
mov
sbb
inc
aam
jbe
insl
test
pop
hlt
xor
nop
pop
mov
adc
fxch
popf
inc
hlt
ljmp
lret
mov
or
pop
out
std
jnp
add
mov
mov
xor
shrb
div
sti
jge
clc
in
loopne
xlat
or
inc
pop
cmp
and
add
ret
in
push
mov
push
and
push
dec
ja
xchg
mov
into
faddl
mov
inc
movups
sub
ljmp
mov
pop
data16
sub
arpl
test
bndstx
es
js
jnp
movsb
cmpsl
mov
shrl
sbb
add
or
mov
arpl
xchg
dec
xor
add
ret
fidivs
dec
loopne
mov
insb
mov
dec
jg
test
leave
sub
inc
mov
rcrb
imul
xchg
popf
aad
inc
mov
insl
push
xor
hlt
adc
in
inc
dec
fwait
cmc
in
andl
sub
jg
push
sub
dec
and
imul
cmpl
xchg
jmp
loop
and
out
std
faddl
xor
push
popa
xchg
mov
add
mov
sbb
hlt
data16
hlt
mov
test
jp
sbb
out
pop
aam
leave
jns
out
loop
dec
dec
mov
ret
clc
sbb
ret
test
xchg
lds
or
mov
sbb
test
lods
pop
jns
xor
adc
xchg
imul
inc
and
push
mov
es
test
push
mov
inc
inc
fnstenv
pop
outsb
std
in
xchg
push
push
cld
aad
aad
hlt
inc
jecxz
xor
inc
inc
pusha
int
sahf
arpl
mov
sbb
sbb
sbb
divl
repz
sti
mov
imul
lock
repnz
int
pop
fidivrs
inc
inc
and
popf
xor
fstpt
push
decb
imul
sbb
fwait
icebp
jae
adc
stc
xchg
aam
aad
push
inc
inc
fldenv
js
mov
shll
cld
sub
jg
xchg
adc
push
dec
or
mov
icebp
decb
ss
xchg
xor
ss
stos
daa
test
shll
ret
add
sbb
push
sub
daa
sarl
pop
push
pop
stos
add
cmp
xchg
and
xchg
pop
aad
mov
add
and
adc
out
rclb
xor
inc
rcr
mov
dec
scas
dec
addr16
or
mov
inc
das
idiv
mov
jle
inc
insl
push
xor
cmp
push
mov
je
pop
imul
or
das
subb
or
outsl
cmp
pushf
pop
mov
imul
adc
push
xchg
sarl
and
lret
push
lea
test
and
xchg
or
pop
cmp
lahf
xchg
inc
shll
ss
data16
xchg
sahf
mov
fwait
xor
dec
scas
aad
adc
xor
and
shrl
adcb
jns
inc
inc
and
ljmp
jecxz
inc
dec
adc
xor
push
pop
adc
mov
push
stc
adcb
bound
test
mov
jbe
mov
jg
xchg
jns
sbb
mov
jecxz
addr16
mov
sub
cli
adc
sub
mov
fimuls
mov
adc
movsl
ja
es
mov
jecxz
cmpsl
cltd
in
adc
cmp
cmc
je
repz
or
jb
ret
ret
arpl
mov
push
ss
insl
test
or
jne
lea
cmpsb
jle
cmp
sub
cli
xchg
add
sbb
je
shr
xchg
lods
dec
into
mov
cmpsb
out
fistl
or
add
jb
repz
aas
ljmp
pop
sbb
pushf
add
jl
sarb
mov
sbb
xor
or
push
sbb
dec
les
pushf
or
xacquire
pop
mov
test
in
cmp
insb
aam
pop
out
cmp
pop
mov
daa
inc
in
in
repnz
divl
aaa
adc
rcll
ficoms
cmpl
or
testl
dec
lods
xchg
push
mov
xor
mov
pop
dec
js
shrl
mov
int3
inc
inc
lods
inc
shrb
cmpsl
sahf
push
xchg
js
xchg
cli
call
stc
ljmp
sbb
adc
xchg
ljmp
inc
insl
lds
fadds
insl
adc
pop
imul
or
fidivs
aad
cs
pushf
xor
push
jne
pop
pop
mov
cmp
inc
sub
sbb
js
add
mov
push
call
mov
outsl
jnp
xchg
fdivrl
xchg
add
jmp
ja
stos
jmp
sbb
jb
je
pop
fdivl
cmp
add
leave
mov
das
adcb
aam
cmp
pop
adc
fdivs
pop
movsl
out
popa
xor
subb
lcall
insl
ret
popa
ret
jecxz
rcrl
stos
rol
and
inc
pop
enter
pushf
std
and
ret
ss
adc
inc
jge
stos
xchg
in
jp
and
cmpsb
dec
pop
pop
add
xchg
and
pushf
lea
and
sbbb
outsb
int3
mov
pop
push
mov
arpl
imul
mov
pop
sub
lea
loopne
and
mov
jnp
stos
xchg
jns
out
xor
xor
scas
inc
or
cmp
sahf
aas
jb
mov
scas
scas
inc
ljmp
jmp
popa
fmuls
inc
fsubrs
aad
inc
dec
loope
mov
in
xchg
sbb
mov
test
push
jo
ja
pushl
not
outsl
xlat
hlt
or
pop
scas
cwtl
aaa
dec
leave
nop
arpl
shr
ret
pushl
iret
fcmovnu
nop
add
mov
je
iret
xor
cmpsb
scas
inc
jb
mov
cwtl
pop
inc
pushl
leave
mov
jae
fsubrl
and
adc
push
adc
call
cwtl
stos
pop
jmp
rcrb
cmp
sub
fimuls
stos
jmp
and
cmpsl
push
sbb
bound
jp
lahf
leave
dec
dec
insb
rol
mov
cmpsl
jmp
sub
pushf
test
jae
orl
dec
dec
mov
test
pop
sbb
shlb
aad
test
mov
pop
and
mov
das
pop
mov
adcl
inc
inc
mov
mov
repnz
lcall
cltd
mov
fisubrl
call
xchg
lret
cmp
add
in
arpl
mov
addr16
shll
ja
push
push
pop
rclb
notb
loop
sahf
xchg
jl
xor
mov
call
sub
pop
xor
ljmp
push
mov
sbb
je
je
sbb
sahf
cmpsl
jae
and
jae
push
movsl
and
dec
into
pushf
xchg
imul
pop
lods
sbb
push
xor
push
dec
shlb
xchg
insb
jl
adc
pop
ss
sub
mov
nop
daa
sarb
sub
stc
aad
rol
or
mov
xor
xor
cmp
pop
xor
xor
xor
shlb
jbe
and
xor
sbb
xchg
lods
cli
adc
xchg
inc
sbb
jnp
xor
pusha
dec
push
sbb
fadds
xor
ja
inc
lret
cld
jnp
outsb
cwtl
stos
dec
mov
and
mov
mov
push
or
lret
cld
testl
xor
inc
adcl
out
fwait
sti
cltd
mov
fisttpll
movsl
or
or
aad
pop
xchg
cltd
xor
and
rcrb
or
stos
mov
fdivs
or
cmp
dec
or
cmp
out
ljmp
imul
and
repnz
lods
nop
lds
loopne
loope
mov
clc
push
scas
mov
mov
mov
mov
icebp
icebp
shll
or
gs
pop
ja
aam
jecxz
mov
fildl
cmc
or
mov
adc
out
cwtl
in
pop
lea
adc
adc
outsl
mov
mov
ljmp
aas
inc
scas
popf
push
sbb
outsb
adc
andb
sbb
std
hlt
daa
outsl
shll
sbb
or
add
push
mov
xchg
sub
test
cmp
and
push
sub
sub
dec
jmp
xchg
imul
xlat
data16
out
add
lods
lcall
sbb
mov
push
inc
ret
pop
repz
sub
inc
xchg
add
les
mov
ja
iret
pop
adc
add
mov
push
shr
push
fs
mov
push
and
inc
movsb
aaa
dec
pop
add
pushl
and
jno
push
push
out
pop
jl
cld
lods
inc
loop
fldenv
jmp
outsb
lods
jle
adc
mov
lods
pop
mov
aaa
enter
aas
jbe
dec
icebp
cmp
in
dec
jl
inc
mov
push
rcrb
mov
popa
int
pusha
jnp
test
int
jae
inc
sahf
icebp
xchg
ljmp
ds
popa
pop
bound
xchg
jp
data16
sbb
leave
ret
and
test
stc
add
pusha
adc
lods
lahf
js
negl
mov
push
test
pop
dec
in
mov
mov
insl
out
adc
jp
inc
movsl
out
push
mov
mov
adc
lods
jmp
rorb
or
dec
push
fnsave
rclb
inc
push
cli
jne
ljmp
addr16
jmp
icebp
mov
clc
mov
mov
mov
je
ljmp
inc
std
in
jecxz
arpl
sbb
gs
sbb
mov
decl
xor
dec
jbe
enter
movsl
cmp
sti
repz
mov
mov
cwtl
ret
dec
add
shrb
mov
jne
xchg
sub
aaa
into
add
inc
fisubs
dec
add
jae
test
stc
or
or
mov
aad
or
and
lahf
mov
arpl
xchg
out
xchg
sub
data16
pop
xchg
mov
mov
jmp
dec
sbb
mov
mov
add
push
add
lods
out
hlt
pop
jle
test
ds
xchg
add
in
shl
js
movsb
fwait
xor
adc
test
pop
out
inc
push
add
dec
fildll
pop
lahf
mov
push
fsts
mov
mov
adc
cmp
lods
shll
xlat
xchg
fdivrl
or
cmp
dec
xchg
outsl
inc
fld
lahf
adc
fcmovnu
jmp
dec
loope
mov
repz
inc
in
shr
into
xor
xlat
sbb
mov
icebp
pop
xor
imulb
pop
push
ja
movsb
jle
mov
test
shll
sbb
mov
jg
or
adcb
sub
hlt
loope
dec
in
or
mov
jmp
sti
xchg
inc
inc
cld
xor
outsb
iret
ret
push
cs
adc
aaa
ret
pop
jne
sub
sti
es
jle
outsb
mov
shlb
add
cmp
push
mov
das
lods
mov
jp
iret
int3
push
repnz
and
cmpsb
cmpsb
add
xor
sub
out
jnp
pop
lods
inc
push
nop
mov
mov
repnz
adc
pop
cltd
xor
arpl
pop
mov
sub
shrl
push
xchg
daa
add
adc
cmpsb
and
lcall
inc
fmull
insl
add
push
ss
mov
xchg
push
jmp
aad
ret
sub
insl
pop
cmp
insl
add
call
xlat
jmp
cmp
sbbb
outsl
imul
subl
negb
ja
xor
jne
scas
fldl
ror
pop
mov
lock
mov
pop
push
push
out
les
mov
mov
fdiv
adc
rolb
push
fstpl
dec
jmp
hlt
sbb
jmp
xor
inc
push
sbb
cmpsl
push
outsl
out
dec
push
shlb
daa
hlt
mov
lret
xor
scas
in
adc
jmp
lea
xchg
into
mov
icebp
jmp
lods
inc
add
adc
adc
xchg
data16
add
stc
or
test
mov
fisubs
cld
push
push
repnz
mov
decb
add
in
out
jae
call
aad
stos
sahf
or
lods
inc
call
loop
jb
out
jl
push
std
int3
outsb
adc
mov
push
or
ret
bound
mov
mov
push
dec
dec
sbb
stos
and
add
shrl
dec
dec
loop
xchg
pop
cmpsb
out
div
repnz
xchg
xor
addr16
or
fistpl
andb
mov
mov
ret
xor
sub
ret
xchg
out
xchg
mov
sbb
clc
cmpsl
ffree
pop
lock
cmp
xor
mov
sub
xchg
ss
int
sub
jge
jmp
lds
mulb
cli
je
add
add
adc
jo,pn
xchg
cmp
and
cmp
jae
jmp
std
cmp
cli
xchg
or
sbb
fsubrs
push
mov
iret
push
rolb
aas
push
xor
jp
in
das
cmp
andb
xchg
jne
sbb
lret
in
mov
inc
mov
lcall
push
xor
push
adc
or
and
adcb
mov
not
aad
sbb
mov
jp
lcall
mov
pop
outsb
cs
xchg
pop
scas
sti
stos
in
xlat
inc
xor
push
rorb
out
pop
add
dec
out
dec
jl
in
imul
das
mov
loopne
dec
inc
mov
and
adc
or
popl
mov
inc
add
xor
in
fldcw
add
mov
cltd
lret
sub
nop
stos
dec
jge
pushl
out
and
mov
and
dec
insb
popf
dec
leave
cmpsl
out
call
fldenv
arpl
incb
lods
adc
loop
xor
mov
test
in
enter
fmull
into
mov
pop
push
push
add
add
subb
inc
sub
rcl
enter
pop
ret
sbb
shll
lret
iret
rcrb
cwtl
lods
in
sbbb
and
mov
sahf
or
push
fistpl
addl
mov
notb
inc
or
clc
cmpsb
insb
notl
xchg
jbe
loop
add
pop
push
addl
add
lods
cltd
cmp
mov
les
loop
call
push
aam
aad
out
mov
jno
xlat
outsb
arpl
jno
add
sbb
mov
fists
push
sti
imul
in
dec
iret
call
bnd
jae
pop
push
rcll
stc
mov
je
nop
add
dec
lock
push
outsb
pop
jge
sbb
xor
or
dec
xor
jae
and
rcrb
cmpb
xor
cmp
mov
addb
std
cli
adc
cld
mov
stc
xlat
cltd
shlb
stc
push
cmpsl
in
push
push
movsb
fnsave
mov
les
pop
or
aas
and
mov
pop
jb
pop
lods
fidivrs
push
dec
loopne
adc
and
jg
fdivl
ss
mov
je
jns
divl
pop
jl
push
push
xor
js
push
cmp
cmp
sti
jl
mov
test
cmp
stos
and
and
aam
or
daa
test
setle
inc
add
adcl
or
dec
push
insl
loopne
loope
mov
cmp
push
mov
daa
add
push
cld
push
jmp
cmpsl
iret
es
xchg
call
adc
mov
mov
sub
fs
sbb
inc
inc
mov
mov
cmp
fistl
xor
cltd
lods
lret
out
cld
and
dec
pop
inc
jp
shrb
fbld
pop
bound
rol
adc
rclb
movsl
dec
aas
mov
xor
mov
loope
push
xchg
dec
int3
mov
xor
test
mov
lock
out
add
inc
and
inc
cmpsb
xor
xchg
add
and
xor
mov
add
pop
cmc
push
rorb
out
mov
push
cmp
aaa
test
mov
std
mov
inc
icebp
shl
and
jp
enter
jne
xchg
jnp
push
jp
mov
outsb
into
mov
cmp
and
push
jl
add
incb
cmpsw
dec
jno
sub
push
xchg
add
es
aam
lods
mov
or
mov
push
out
jg
adc
jnp
or
cmp
xchg
pop
shlb
pop
stos
push
xchg
or
mov
ror
mov
scas
fists
mov
inc
adc
std
pop
into
es
cmpsb
mov
or
mov
inc
add
mov
pop
adc
fstps
cld
mov
cmp
push
rorb
pop
push
dec
gs
sbb
sbb
stos
mov
mov
iret
dec
dec
cltd
std
out
scas
out
mov
lahf
outsb
imul
xchg
popa
int3
je
sub
cltd
mov
inc
sarb
pop
inc
add
lahf
add
xchg
push
push
xor
mov
jmp
movsb
ret
pop
cmp
js
mov
pop
mov
sbb
mov
ret
pop
cmp
pop
add
sub
sbb
dec
loopne
stc
inc
les
or
ret
ret
push
mov
cli
adc
addl
fwait
mov
into
outsb
jns
jbe
iret
pop
fmul
mov
fidivl
pop
into
aam
clc
sahf
pop
fbld
std
int3
adc
outsb
xchg
addb
pop
xchg
add
push
in
movsb
push
addr16
mov
jle
inc
test
cmp
ja
repnz
inc
jp
test
aam
or
std
jo
mov
repz
adcb
mov
iret
mov
jns
insb
test
cmp
inc
call
adcb
mov
push
push
rcrl
sub
lret
cli
negb
ljmp
adc
js
add
loope
xor
sbb
flds
xchg
insb
pop
and
pop
push
inc
adc
inc
movsl
js
mov
push
out
mov
push
or
adc
mov
pop
mov
out
sub
add
mov
loopne
sbb
sub
es
test
and
inc
add
fsubl
xor
nop
lods
dec
push
add
mov
repz
adc
das
cmpsb
cmp
dec
add
xor
mov
and
cmp
adc
lea
xchg
push
iret
or
add
shrl
xchg
hlt
out
pop
mov
jecxz
mov
sbb
jno
sbb
ljmp
data16
sub
mov
popf
sti
inc
fucomp
add
mov
aaa
mov
fwait
in
sbb
mov
push
pop
mov
push
popa
cwtl
xchg
jge
pop
scas
icebp
push
mov
dec
jnp
mov
scas
sti
cmp
cs
pusha
test
cmp
outsb
sub
mov
movsb
mov
pop
xchg
ljmp
cmp
test
mov
adc
xor
testl
pop
movl
aad
or
into
push
rolb
sub
ret
lahf
pop
xor
ss
cs
lds
inc
pushf
xor
scas
ret
and
mov
jg
es
or
fisubrs
int3
push
fucom
sub
dec
push
ds
out
daa
pop
insb
add
mov
out
inc
dec
out
sbb
nop
cltd
lret
out
cld
cli
je
push
mov
dec
mov
addb
push
pop
mov
adc
clc
popf
add
fldcw
cmp
mov
adc
dec
repz
arpl
jg
mov
cmp
fidivl
sbb
je
pop
repnz
sarb
xchg
flds
sbb
or
push
int3
push
adc
aam
aaa
bound
push
cmp
push
insb
add
dec
pop
movsb
dec
jp
dec
jns
cmp
enter
aad
pop
shlb
cmp
and
push
outsb
iret
fcmovu
jbe
lock
and
popa
jmp
add
mov
xchg
shll
push
pop
xor
insl
jno
cmp
inc
push
mov
jne
inc
lods
xchg
sahf
inc
or
out
sbb
sub
gs
in
dec
pop
fs
pop
scas
dec
cmc
cmp
aas
mov
xor
sti
es
or
jge
xchg
inc
sbb
call
roll
add
mov
in
filds
ja
movsl
xchg
mov
cmp
ficoms
push
shrl
adc
imul
es
or
pop
push
sbb
pop
int3
sub
aam
es
sbb
mov
mov
sbb
into
mov
sub
and
mov
pop
loope
dec
gs
cmpsb
push
jns
nop
insb
jo
sahf
mov
jle
sbb
mov
hlt
mov
rcrl
into
inc
lds
addb
icebp
mov
xor
dec
daa
mov
and
inc
xchg
inc
jbe
shlb
mov
mov
inc
fsubs
cmp
inc
hlt
lret
push
xchg
jge
sbb
add
fstpt
es
rorl
pop
imulb
inc
pop
cmp
jge
xchg
mov
fcmovbe
popa
jecxz
jne
sbb
mov
pop
cmpb
cwtl
cmp
aad
push
out
dec
jns
pusha
mov
popf
push
iret
sub
add
lret
jnp
sbb
dec
std
jl
out
out
popf
adc
ss
mov
in
mov
push
packsswb
and
outsl
xor
shl
push
data16
ficomps
sbb
in
data16
lods
xchg
mov
call
xor
in
daa
jae
pop
sbb
push
push
jnp
mov
cmc
xchg
jbe
push
lock
clc
mov
sbbl
mov
loope
adc
mov
cmpb
push
mov
aas
push
adc
push
movsl
lcall
cmp
mov
lods
mov
fwait
mov
adc
adc
cmp
push
inc
sbb
push
fidivl
out
repnz
lea
or
in
inc
sub
lret
mov
cltd
cmp
pop
cs
fs
or
rolb
dec
negl
ds
aaa
sub
repz
stc
cli
daa
ja
push
push
insb
xchg
mov
cwtl
mov
xlat
mov
or
pop
outsb
mov
movsl
mov
js
dec
addr16
xchg
xchg
stc
adc
dec
mov
pop
pop
inc
fmull
stos
cmp
jne
push
jb
lods
rcr
push
in
lret
movsl
mov
orb
ret
aaa
pop
jl
in
pop
stos
pop
inc
lret
je
icebp
xor
stos
jl
pusha
or
mov
jecxz
cld
sarl
sub
out
dec
loopne
imul
stos
rcrl
dec
insl
push
faddp
ds
scas
icebp
mov
jbe
fnstenv
das
mov
jo
popa
inc
lcall
sbb
cmp
fs
dec
fldt
ret
hlt
inc
jbe
jle
ljmp
jmp
insl
rcr
hlt
and
imul
and
mov
or
adc
test
jp
xchg
jg
call
sahf
fcomps
sbb
sub
cmp
cmp
mov
xlat
stos
push
fcoml
pop
pop
lcall
xor
int3
data16
sti
int3
mov
push
adc
xor
xchg
push
popf
sub
repz
sub
pushf
pusha
and
das
shll
push
es
push
sbb
test
push
and
adcb
add
pop
push
jae
xor
pop
inc
in
shrl
jo
sub
aad
or
push
out
idivl
jg
js
mov
xlat
dec
fsts
jnp
inc
ds
adc
pop
inc
or
pop
xlat
das
mov
add
cmp
add
xlat
sahf
jl
jg
mov
shll
ja
iret
loope
jb
cwtl
sub
push
xor
out
xor
mov
in
ficomps
adcb
test
test
mulb
jmp
dec
lea
repz
xor
cltd
jge
mov
gs
popl
lock
push
mov
xchg
add
add
sbbb
mov
jl
out
mov
cmp
adc
jl
shll
add
fwait
adc
xchg
mov
hlt
fcmovne
sti
adc
mov
mov
dec
lock
push
cmpb
cmc
imul
scas
push
mov
jne
movsl
xchg
mov
fmuls
push
stos
xor
fidivrs
pop
xchg
insb
gs
loopne
push
repz
imul
ds
addr16
push
sub
popf
in
lock
jbe
xlat
cmpsb
adcb
cmpsl
push
pop
and
andl
mov
rolb
xor
mov
and
fiaddl
lret
test
mov
xor
add
xchg
mov
stos
movsb
pop
repz
sti
popa
jns
mov
cmpsb
in
add
gs
jne
pop
mov
jle
enter
shll
enter
or
pop
xchg
int
push
mov
adc
jmp
hlt
fdiv
ss
inc
sbb
pop
sub
mov
push
push
repz
movsl
inc
out
imul
cld
repz
pop
mov
push
xchg
pop
lret
cmp
ja
mov
sti
cmpsl
xor
mov
add
icebp
push
lea
rcr
cmp
lahf
std
adc
insl
int
loopne
mov
sbb
pop
lcall
nop
shll
repnz
xchg
dec
xor
loop
mov
fwait
sub
pop
cmp
outsl
hlt
popf
cmpb
pop
fisttps
mov
mov
out
jge
inc
adc
ret
sbb
sub
or
or
cmp
mov
repz
push
add
sbb
lock
sti
sbb
loopne
jp
sbb
mov
xor
push
push
xchg
xlat
jmp
popf
sub
pop
fisttpl
sbb
ss
jns
pop
pop
ja
cld
or
aas
pop
dec
imul
cmp
loopne
insl
sbb
mov
pop
mov
xchg
sbb
or
lret
rcrb
adc
nop
sub
fcoms
shlb
add
sbb
loopne
rol
inc
mov
pop
cmpsb
in
rclb
mov
loopne
pop
push
dec
sahf
xor
fldenv
xchg
adc
sti
sbb
into
mov
push
leave
add
push
pop
imul
stc
or
hlt
and
sub
ret
in
mov
loopne
add
lcall
in
sbb
push
add
pop
mov
and
add
mov
fcmovu
outsl
loop
jp
popf
add
jecxz
je
cli
int
dec
pop
int3
push
mov
faddl
jecxz
xchg
and
push
pop
ja
bswap
push
loope
xor
cmp
orb
dec
lods
mov
ja
ja
inc
and
mov
jno
imul
subb
mov
stc
cmp
mov
add
shl
mov
push
scas
mov
loope
test
cmp
cmpsb
les
mov
push
insb
aas
jnp
and
scas
inc
fdivrs
test
dec
dec
fwait
cmp
push
add
scas
cwtl
inc
fdivr
into
xchg
xor
pushf
add
push
push
jg
lret
sbb
pop
push
and
push
fwait
jl
mov
xor
xor
out
mov
pushf
xor
sub
xor
cmp
pop
cmpsb
insl
pop
out
sahf
es
cmp
xchg
ds
sbb
dec
mov
lret
sbb
mov
pop
imul
cmp
lock
cmc
mov
aam
sar
inc
add
jns
cltd
or
out
push
xchg
shlb
mov
or
ds
ret
outsl
cwtl
cmp
push
mov
cmc
jmp
sbbl
in
dec
fsubl
dec
scas
cmp
mov
ljmp
jae
adc
nop
mov
push
mov
jns
scas
and
xor
sbb
jbe
mov
jp
test
adc
cmp
fcoms
sub
int
bound
mov
adc
pushf
cmp
sbb
movl
lret
sbb
mov
mov
and
in
inc
aad
fstps
fucom
pop
push
stos
jge
ud0
test
cli
mov
js
sti
xor
mov
imul
ljmp
xor
mov
cmp
lods
lea
add
push
and
adc
scas
fwait
or
inc
int3
movsl
outsl
mov
cs
push
sahf
sub
call
div
or
cmp
addl
js
push
jmp
es
fninit
mov
pop
lcall
adcl
dec
mov
push
hlt
dec
pop
inc
pushf
or
aaa
int
stos
aas
xchg
popa
adc
out
dec
and
jo
pop
lods
jb
push
push
test
lret
adc
stos
mov
mov
lea
das
inc
cmc
dec
loope
jbe
bound
push
add
test
out
xor
adc
inc
stos
jmp
fdivr
popa
shr
in
aaa
imul
das
push
fs
sub
aam
nop
pop
ja
xchg
cli
jg
movsb
xchg
xor
leave
jge
mov
push
imul
rcrb
movsl
and
leave
jl
addr16
pop
call
pop
imul
add
dec
push
add
iret
push
cmp
jbe
add
movsb
das
idivl
xor
test
and
insb
stc
push
sbb
shll
pop
out
popa
in
shr
sahf
sbbb
and
sub
mov
mov
sub
sbb
ss
jne
jb
call
jbe
call
popa
lock
lods
jle
stos
xchg
sub
xlat
mov
push
sub
mov
mov
xchg
add
out
mov
cmp
cmpsb
jns
repnz
mov
fbld
inc
adc
mov
xchg
sbb
and
cld
shrb
adc
sbb
sahf
ficoms
xchg
jns
ret
fisubs
or
std
inc
cmp
ja
mov
lock
push
add
adc
mov
or
dec
or
jb
pop
out
mov
mov
pop
mov
sarb
or
mov
inc
jbe
cmp
fwait
ret
xorb
std
cmp
mov
arpl
ja
jg
fadds
and
sbb
dec
mov
test
stc
incl
cltd
lea
cmp
push
mov
pop
dec
sub
repnz
push
xchg
inc
movl
stos
inc
in
xor
xchg
push
jmp
in
arpl
addr16
mov
roll
sahf
les
mov
hlt
push
xchg
add
cltd
mov
sti
popl
test
scas
lcall
mov
inc
xor
lods
ljmp
cmp
aad
mov
pop
cmp
jne
iret
jae
out
lock
mov
fs
and
pop
jecxz
pop
pop
mov
adc
jge
sbb
fwait
push
mov
aaa
cld
mov
mov
inc
mov
movsl
ljmp
cmpsl
pop
out
push
pop
lock
fdivs
xor
scas
sahf
push
cmpsb
repnz
mov
pop
lcall
xorl
jmp
xchg
adc
mov
out
test
sti
adc
lgdtl
sub
add
or
pushf
dec
rcl
aam
sub
add
scas
lret
and
mov
cmp
rorb
mov
adc
iret
popa
fisubs
sti
movsb
sti
scas
cld
lods
stc
test
adc
pop
adc
stos
shlb
loopne
mov
xchg
pop
in
aad
pop
nop
repnz
lods
add
jae
fmuls
daa
clc
movsl
pusha
aaa
or
push
je
mov
xchg
xor
outsb
test
lahf
or
call
lret
inc
jo
mov
popa
ss
imul
and
imul
les
lods
xchg
test
insb
adc
pop
xchg
pop
xchg
adc
xor
out
cld
aas
int
out
or
xchg
aaa
adc
test
iret
mov
sub
xor
mull
dec
mov
mov
or
ljmp
mov
jp
dec
pop
jmp
idivl
sub
fwait
xor
dec
lret
xchg
in
jg
push
and
jge
es
push
neg
mov
insb
lds
les
inc
int3
xor
inc
adcl
scas
subl
and
faddl
mov
adc
push
ret
and
add
mov
dec
mov
shrb
nop
outsb
inc
xlat
xchg
aad
inc
pop
cmp
mov
mov
or
pusha
popf
mov
sbb
ficompl
mov
daa
cmp
lahf
popa
add
out
cltd
fwait
into
ss
iret
test
add
mov
ficoms
lds
decb
xchg
loopne
movsl
lds
xchg
bound
mov
cmpsb
fldl
sub
pop
call
cmpsl
out
std
xchg
push
in
test
cld
stos
mov
aad
dec
movsl
pop
and
and
or
pushl
adc
aas
push
and
lods
jne
lcall
shrb
or
loopne
in
lds
hlt
sbbl
lea
add
or
rclb
mov
stc
adc
aad
testb
mov
dec
add
shr
pop
add
rclb
inc
xor
mov
xchg
imul
jmp
fistpll
sub
je
pop
test
lods
jge
or
rcrb
xchg
test
cmp
cmp
popa
mov
imul
mov
and
xor
jge
addr16
sbb
movsb
xchg
aam
movsb
or
push
fstps
jp
push
pop
test
pushf
push
add
inc
pop
stos
insl
sbb
leave
xor
int
mov
jo
or
sbb
shl
jp
inc
insl
inc
je
dec
mov
mov
xor
test
lods
jae
stc
mov
xor
les
lahf
pop
mov
sbb
shlb
mov
jl
push
in
inc
xlat
mov
mov
leave
popf
outsl
inc
lods
sahf
sbb
fcompl
int
and
insl
fwait
jne
out
sti
leave
rcrl
lea
aaa
leave
pop
jne
cli
xchg
int
arpl
jge
cmpsb
les
mov
dec
fisubrl
mov
xor
rcll
adc
inc
ret
mov
pop
push
idivl
xchg
stos
mov
cmpxchg
jle
cmp
popa
add
jnp
dec
fistpll
add
cmp
mov
jno
hlt
mov
xlat
push
je
in
repnz
outsb
andb
sbb
or
cmp
decl
sbb
dec
pop
adcb
imul
mov
int3
or
sub
ret
mov
add
fs
xchg
data16
dec
in
jl
or
pop
push
fnclex
iret
test
fstps
mov
mov
xchg
adc
clc
cltd
mov
fdivr
fwait
mov
adc
leave
loope
fistl
mov
sub
in
ficomps
mov
xor
mov
iret
das
andb
mov
push
sbb
xchg
sbb
fs
jmp
fsub
xor
popa
pop
xor
dec
bound
outsb
mov
inc
mov
jg
in
add
movsl
ret
int
jmp
push
lahf
cmc
xchg
insb
scas
mov
and
dec
add
addl
pop
mov
mov
call
pop
mov
clc
sbb
ljmp
sub
add
out
or
jns
call
push
js
in
pushf
lods
jle
in
fadd
pop
repz
sub
loopne
and
inc
call
and
push
js
pop
imul
mov
subl
sbb
inc
mov
je
dec
sub
xchg
sti
fwait
mov
dec
jmp
push
clc
jbe
call
xor
pop
xor
outsb
jge
xchg
xchg
repnz
ljmp
xchg
sub
inc
cmpsl
dec
xchg
insb
xor
push
mov
ror
inc
and
lret
int3
push
dec
xor
mov
dec
cld
stc
pusha
sbb
xchg
sub
cmp
mov
cmpsl
arpl
mov
cmpsl
jo
cmp
pop
xchg
fcmovnb
push
popa
push
push
inc
fisubrs
sbb
xchg
test
and
xlat
idivb
push
iret
cld
jg
jbe
loope
and
pop
pusha
nop
pusha
mov
xchg
mov
xchg
sub
mov
pop
outsb
inc
mov
pushf
and
notl
mov
sarb
pop
enter
mov
popa
loopne
movsb
addr16
and
jno
push
enter
js
in
jo
sbbl
jnp
push
mov
and
push
popa
mov
sbb
lret
in
cmp
sub
xchg
cltd
xor
inc
mov
dec
jne
and
int
std
and
or
cmpsl
push
call
lcall
pop
mov
add
addr16
imulb
js
mov
pop
mov
repz
sub
repnz
popa
pop
popf
sbb
aam
pop
mov
rcl
pop
stos
or
push
or
sbbb
mov
sahf
add
jb
ss
lods
fbld
enter
inc
add
sbb
roll
icebp
push
inc
push
jno
nop
sub
push
inc
lret
enter
or
jmp
das
xchg
out
test
sub
fcompl
pop
cltd
outsl
lahf
fbld
nop
and
inc
cltd
gs
das
loope
jae
push
cmp
xchg
adc
jb
dec
jg
test
ja
addr16
pop
add
daa
in
pop
dec
popa
jle
ja
imull
lds
testb
sub
add
mov
cmpsl
sti
push
pop
pop
shrb
lahf
mov
lret
xchg
cmp
aaa
push
add
cmc
mov
pop
xchg
dec
sbb
stc
lods
push
push
pop
sbb
pop
in
inc
aad
mov
jns
push
xor
mov
adc
add
daa
jg
jb
lods
jo
push
or
fcoml
shl
insl
adc
jmp
adc
jnp
mov
icebp
in
ds
xor
int
and
pop
loop
push
call
jb
cmp
xchg
enter
out
cld
jle
out
mov
push
into
int
sbb
and
cmp
frstpm(287
adc
mov
mov
dec
outsl
insl
jp
push
in
cmp
push
ud2
inc
enter
sbb
mov
outsl
mov
fcoms
pusha
inc
sbb
enter
fildll
nop
mov
orb
into
daa
dec
pop
imul
mov
mov
push
mov
mov
cltd
jbe
lcall
ljmp
fisubs
popf
push
stos
and
mov
cld
loop
rclb
mov
sub
popa
std
pop
ja
sbbb
mov
cli
pop
fstl
fdivl
adc
stos
in
sub
ja
sbb
scas
and
ja
roll
cwtl
iret
pop
xchg
xchg
outsb
daa
adc
fsubrl
adc
data16
imul
add
iret
mov
and
rolb
repz
ror
and
enter
addr16
jb
jno
and
sub
loop
orb
repnz
cmp
int3
cmpsl
inc
popf
mov
je
cmp
aam
xlat
out
add
test
adc
mov
inc
pushf
pop
jmp
cmpsb
cmp
mov
mov
add
mov
xchg
lret
or
jns
pop
ljmp
lds
mov
test
fstpt
dec
and
mov
cwtl
sbb
outsb
pop
mov
stos
mov
mov
stos
add
ret
push
insb
sbb
sbb
xchg
push
jne
adc
cld
or
cs
lcall
test
pop
data16
adc
pop
xchg
in
jle
iret
loope
pop
test
pop
test
push
push
add
xor
dec
pushf
inc
pusha
adcb
sbbl
pop
imul
jg
fwait
mov
xor
mov
in
jns
aad
push
sbb
add
dec
and
push
jne
sub
lea
mov
mov
mov
push
xchg
mov
and
in
dec
xchg
pop
movsl
mov
arpl
mov
in
stos
frndint
add
out
int
lahf
jno
jb
sub
pop
idivl
or
add
in
push
ret
cmp
mov
in
push
cs
mov
repz
sub
mov
dec
insl
sbb
popa
lods
jmp
aad
insb
add
in
mov
inc
and
lret
dec
and
push
mov
insb
mov
push
mov
dec
popf
ret
sub
and
into
scas
lcall
xchg
and
push
xchg
add
stos
js
mov
adc
inc
push
mov
aaa
pushl
mov
shrl
pop
ret
testb
lea
and
xor
push
lods
adc
add
xchg
int
and
cmp
scas
fwait
ret
or
push
mov
pop
in
push
fdivs
divb
addb
sub
sub
lret
nop
das
xor
pop
jae
movsb
mov
iret
xor
inc
scas
push
add
push
adc
push
xor
jae
push
movsl
fnstsw
sub
mov
dec
mov
mov
loop
and
test
outsl
out
xor
lds
cmp
push
shl
imul
jb
dec
movsb
in
mov
mov
fwait
scas
daa
and
pop
dec
into
gs
cmpsl
lret
sub
mov
leave
dec
push
hlt
ss
outsb
add
mov
je
sub
fwait
stos
and
shlb
mov
frstor
outsb
fimull
mov
inc
loopne
inc
sub
jp
mov
add
pop
pop
xchg
dec
stos
inc
dec
rol
add
das
fcomps
rcl
dec
push
scas
cltd
lock
mov
cmp
adc
push
fisubrs
dec
in
and
aad
ret
out
cmp
andb
insl
add
cmpsl
sub
jno
rcrb
push
mov
inc
cs
insl
dec
lea
mov
icebp
inc
sub
xchg
mov
push
xchg
and
pop
aaa
hlt
adc
cmc
cld
pop
imul
adc
repnz
dec
sbb
pop
fsubrp
inc
mov
xchg
xchg
ss
cmp
rcl
imul
lock
inc
push
popf
cmp
mov
popa
sub
mov
stos
mov
popa
xor
lcall
and
rolb
cmpsb
lea
push
repz
jl
push
jecxz
ret
sahf
mov
jb
sbb
in
xchg
data16
cmpsl
je
loop
pop
mov
pushf
repz
outsb
sub
pop
dec
popf
dec
pop
jg
mov
pushf
out
iret
push
pusha
cmp
cltd
imul
fcomps
cmp
lods
xchg
movntps
imul
cltd
push
imulb
pop
out
mov
xorl
jmp
or
cmp
test
scas
lret
sub
lods
xor
shrl
scas
cltd
pop
add
test
cwtl
adc
leave
and
xchg
outsb
mov
roll
push
divl
add
push
lods
push
xchg
fisttpll
lock
jmp
pop
pop
pop
insb
xlat
add
aam
pushf
push
dec
cmpsb
mov
inc
rol
adcb
pushf
dec
je
iret
subb
imull
sarl
inc
sub
pop
lahf
lock
in
add
std
dec
sub
xchg
mov
xchg
div
push
lds
mov
dec
add
std
inc
fimull
jmp
xchg
aas
mov
mov
cld
inc
mov
cmpb
cwtl
jno
or
mov
scas
sbb
fmull
xchg
or
xchg
lea
fldcw
add
sbb
popf
cld
jl
fsubl
shll
add
adc
adcl
jl
arpl
lcall
je
xor
mov
and
jne
push
pop
enter
cs
repz
and
mov
lret
push
icebp
dec
sahf
ss
cmp
pop
icebp
fisubrs
xor
scas
mov
cs
imul
cmp
xchg
loop
jns
lahf
scas
mov
test
lcall
inc
push
stos
in
xor
lahf
test
sbb
dec
cltd
jl
inc
jo
mov
jecxz
shrl
std
rcll
pop
das
shll
aad
cmpsl
or
idivl
xor
call
push
xlat
outsb
ret
adc
int3
in
mov
push
int
push
mov
sahf
les
rorl
pushf
imul
and
inc
lahf
cmpsb
in
xchg
adc
or
out
and
arpl
loop
stos
fwait
or
ror
movsb
mov
xor
call
jo
jo
jle
xor
push
insb
in
xchg
testb
out
cld
enter
push
add
dec
pop
push
push
mov
imul
js
push
ljmp
sbbl
xchg
cmpsb
cmp
insl
mov
and
aaa
shrb
sub
rclb
repz
inc
sbb
dec
pop
or
push
lret
es
mov
push
out
nop
xchg
testl
jae
xchg
dec
repz
popf
inc
xchg
push
out
bound
hlt
daa
mov
jnp,pn
and
pop
adc
jge
das
mov
xchg
cmpsl
adc
mov
or
sbb
pop
push
sub
add
daa
xchg
xor
shl
ja
inc
hlt
push
insb
sub
dec
sbb
xchg
inc
insl
add
mov
adc
daa
push
movsl
testb
aam
push
hlt
mov
fwait
and
popf
scas
shll
out
cld
sub
xlat
sbb
cmp
leave
nop
ss
inc
fsubrs
inc
pop
aaa
xchg
mov
ds
popf
mov
adc
cli
repnz
js
dec
mov
cmpsl
cmp
sbb
lock
sbb
out
mov
stc
insb
iret
xchg
js
or
xchg
or
data16
xor
out
push
mov
inc
movsl
cmp
xor
jns
ds
mov
outsl
mov
test
lret
push
and
lods
sbb
inc
jecxz
fwait
mov
dec
sub
outsb
imul
mov
mov
in
ret
js
or
pop
xchg
clc
dec
or
in
mov
push
in
push
out
xor
push
out
add
loope
and
push
push
push
mov
addps
jge
pop
xlat
ljmp
mov
mov
or
pusha
imull
or
fists
sub
aam
lock
cmc
or
popf
push
cmp
ret
add
sbb
push
in
in
add
cmp
mov
insl
sbb
xlat
mov
xlat
in
adc
pop
jle
mov
pop
mov
pop
xchg
fildl
loop
scas
aaa
jmp
lds
fs
pop
loop
dec
sarl
sbb
xchg
decb
xchg
xchg
adc
push
loope
jg
pop
lret
out
nop
imul
aad
pop
std
cltd
sub
mov
mov
lock
dec
and
ljmp
sub
jae
idivl
dec
lock
fdivrl
jecxz
movsb
aaa
hlt
mov
cwtl
xchg
sbb
sbbb
jecxz
mov
lret
in
rorl
psrlw
inc
push
xlat
mov
jmp
or
stos
inc
cmpsl
lcall
faddl
popf
test
mov
mov
sahf
enter
add
hlt
ja
dec
incl
out
or
ret
adc
jmp
add
stos
xchg
pop
enter
and
ss
and
mov
imul
setns
insl
and
les
jl
divb
data16
jno
call
in
add
mov
inc
pop
nopl
loope
rcrl
shlb
insl
add
or
xchg
inc
cmc
fs
cmp
testb
add
push
jmp
ljmp
inc
jo
jl
lret
adc
mov
mov
cmp
scas
test
inc
dec
jle
lea
lahf
clc
xor
cmpsb
adc
push
mov
cmp
sub
shrl
mov
hlt
mov
in
pop
and
movsl
pop
fnstsw
dec
mov
xchg
clc
sbb
add
addr16
mov
out
dec
rcll
or
iret
mov
flds
inc
bound
bound
sbb
xchg
push
sbbl
shrb
popa
iret
imul
bound
aaa
jmp
xor
dec
stos
mov
mov
shr
rcl
xchg
pushl
daa
adc
jb
movsb
or
push
sahf
xchg
mov
pop
add
cmp
aaa
push
andb
out
mov
ds
dec
lods
xchg
sbb
push
rol
adc
cmp
sub
ds
pop
sbb
lods
in
fbld
pusha
or
pop
inc
xor
inc
hlt
adc
fdivs
push
aaa
fwait
stc
cmp
jge
scas
int3
or
push
ds
push
mov
cltd
hlt
cli
out
sahf
push
add
mov
inc
mov
jb
or
or
mov
mov
push
shlb
xchg
adc
sti
idivl
adc
lret
pop
xchg
pop
cmpsb
test
std
mov
stos
adc
inc
andb
mov
fsubrl
mov
xchg
test
pop
or
fucomp
cmp
bound
lods
ljmp
idivb
ja
xor
pop
jle
ss
jecxz
pusha
or
mov
sti
mov
imul
js
cmp
xchg
cmp
mov
adc
sarb
dec
mov
out
in
xor
and
test
jg
cmp
pop
fdivl
push
lret
xor
fstl
jle
out
call
pop
xchg
sub
sub
cld
loop
sahf
push
clc
test
cmp
mov
jae
in
fnstsw
push
pop
push
cmp
insl
mov
shl
mov
adc
push
mov
scas
sub
mov
addw
fcomps
dec
pop
dec
inc
xor
aad
pop
or
das
cmp
popa
jge
and
popl
rcrb
mov
ss
out
sti
mov
adc
cli
dec
lret
sbb
sar
gs
arpl
addr16
mov
mov
scas
xor
xchg
mov
push
jbe
fldt
jo
imul
jle
pop
mov
and
sub
mov
stos
cmc
inc
shll
jbe
ds
and
jbe
push
test
jne
mov
adc
pop
hlt
pop
loop
push
es
mov
lret
cltd
cmpsl
cld
dec
leave
jecxz
stc
push
scas
test
mov
jno
mov
fisttpl
xchg
test
sbb
push
lea
loop
mov
mov
lods
sub
fbstp
cli
mov
dec
daa
popa
fadds
and
xlat
sub
xchg
pushf
jnp
movsl
adc
push
jge
mov
rorb
sub
dec
sub
in
mov
sarb
push
test
and
or
movsl
cmp
add
mov
inc
int3
stos
cmpsl
sbb
imul
cmovg
movsl
test
fldl
jae
xchg
adc
insl
add
push
loope
movsl
arpl
xlat
xchg
sub
adc
loope
cmc
rcrb
adc
mov
mov
xor
mov
mov
loope
mov
sbb
pop
push
xchg
mov
inc
filds
cmp
dec
divb
pop
sub
daa
cli
stos
mov
dec
pop
add
mov
dec
pop
rolb
dec
gs
sahf
xchg
imul
dec
insl
stos
add
adcb
cmp
decb
in
mov
mov
mov
xchg
movsb
push
push
out
pop
jae
out
xorb
xchg
repz
mov
mov
clc
push
adc
icebp
or
mov
jmp
or
pop
xchg
xchg
or
xor
mov
push
ret
popf
ficoms
sbb
pop
and
popa
mov
and
xchg
sahf
or
adc
daa
push
mov
ret
sub
test
pop
out
les
or
pop
cmpb
mov
jno
test
rcr
or
ja
sub
scas
aam
fimull
sub
mov
lahf
jmp
jg
test
jno
add
add
fdiv
aad
cmp
loopne
mov
push
jnp
pushf
outsl
mov
ret
push
adc
cmp
imul
aad
mov
mov
inc
pop
jno
out
pop
lahf
repz
cmp
pop
cmpsb
out
fdivrs
lcall
push
rcll
data16
ret
js
jnp
or
outsb
daa
mov
mov
mov
inc
shrb
repz
push
icebp
pop
loope
fbstp
test
mov
jge
push
and
sahf
in
test
xchg
mov
arpl
mov
xchg
jle
mov
dec
lods
xchg
or
push
inc
test
mov
mov
js
and
mov
ret
sbb
mov
adc
in
sahf
aad
cmpsl
jl
add
out
mov
cmp
add
cmc
outsl
ds
adc
fwait
test
jl
shll
adc
hlt
push
out
inc
les
dec
cltd
insb
negl
adc
cld
iret
mov
nop
sahf
xor
dec
in
rcrb
xor
aam
sub
mov
inc
add
mov
enter
jecxz
dec
test
cwtl
mov
icebp
and
dec
add
pop
mov
pop
gs
inc
or
push
stos
stos
lcall
mov
in
cwtl
cmpsb
fiaddl
out
loopne
sbb
push
add
out
push
out
jno
and
lret
pop
push
push
pop
xor
sub
cmp
hlt
leave
es
adc
test
push
sbb
mov
mov
dec
out
push
ds
imul
sti
outsl
inc
stos
in
scas
es
xchg
pop
and
mov
or
das
mov
sbb
outsb
jno
in
sub
push
jb
stc
pop
lds
lretw
and
fcmovnb
shrl
adc
inc
por
jl
lock
lods
out
xor
mov
ficomps
sub
icebp
sbb
loope
jne
cmpsb
jns
mov
in
push
xchg
ret
xor
loopne
repz
scas
mov
test
xor
dec
dec
push
test
jecxz
std
or
or
repnz
jae
mov
pop
mov
and
or
fists
das
jle
lret
std
mov
sbbl
jecxz
inc
leave
aas
mov
jne
dec
xchg
sub
sub
add
inc
sbb
out
fnstsw
push
lret
push
inc
stos
pop
out
sub
sub
jno
pop
int3
jg
xor
pop
in
shlb
mov
mov
fcomps
sbbb
ljmp
jge
test
js
dec
sub
inc
cmp
push
mov
sub
sub
ljmp
jne
cmp
pop
adc
iret
sub
mov
push
stos
shrb
inc
push
xchg
inc
or
cmpsl
inc
push
fstps
pop
out
push
scas
add
mov
xorl
mov
ret
loope
sti
sahf
adc
lock
jge
icebp
cmp
and
frstor
and
rep
mov
pusha
movsw
pop
std
sbb
hlt
mov
dec
adc
popf
fs
adc
mov
push
jo
mov
push
jno
adc
xor
popa
ja
dec
bound
fldt
pop
std
cwtl
mov
and
call
xor
push
adc
pop
sub
adc
adc
cmp
adc
and
inc
mov
enter
mov
sar
repz
test
stc
and
push
inc
fs
arpl
pop
xor
mov
shll
mov
clc
mov
or
ja
les
iret
icebp
mov
fadd
into
int
mov
lcall
add
push
aaa
repnz
ret
leave
pop
inc
pop
popa
push
cmc
dec
lds
pop
jns
cmp
fadds
jmp
jo
push
jmp
jne
mov
daa
mov
jnp
inc
xor
xchg
mov
es
cmpsl
xor
sarb
add
ret
int3
mov
pop
mov
xchg
sub
rorb
xchg
or
jmp
stc
pop
push
dec
fdivrs
cmpsl
in
mov
rol
sbb
mov
push
mul
pop
aam
xor
inc
cmpsl
lret
es
mov
cmpsb
xor
insl
xchg
xor
repnz
insl
mov
movsb
fisubl
sahf
iret
dec
popf
push
cmp
xor
mov
inc
adc
scas
and
sti
jmp
shll
ljmp
and
and
sub
xor
cli
mov
or
pusha
sahf
jg
xor
lret
xlat
das
sub
inc
ds
mov
aas
into
insl
dec
dec
ret
push
cmc
ds
inc
sub
lcall
mov
mov
imul
call
es
pop
mov
pop
and
out
or
xchg
dec
pop
test
dec
push
hlt
icebp
sbb
lods
stc
mov
dec
imul
xchg
mov
aaa
cltd
insb
scas
movsl
sarl
mov
rcr
mov
xchg
mov
xchg
and
jle
or
rcl
sbb
pop
mov
adc
cmc
shr
adcl
call
test
lcall
xchg
scas
in
ficompl
xor
mov
pop
lods
fwait
lods
scas
call
loop
lahf
imulb
mov
push
jae
pop
pusha
out
ja
pop
or
inc
das
lea
int
shlb
xchg
out
adc
adc
scas
lds
loop
jbe
dec
arpl
int3
ljmp
lea
scas
test
into
xor
and
cmp
adc
mov
xorps
dec
lcall
repnz
sbb
cltd
fcmovne
xchg
in
cld
push
or
into
inc
mov
les
sub
cmp
popf
pop
test
ljmp
dec
leave
into
std
bound
scas
inc
pop
push
jl
jo
clc
add
and
testl
inc
cli
lret
cld
mov
js
ror
pop
movsl
js
mov
cmp
and
leave
pop
lcall
stc
je
dec
stc
jp
ja
insb
dec
das
repnz
mov
inc
cmpsl
std
xchg
push
cmp
shll
xchg
loop
mov
xchg
movsl
sub
daa
shll
loope
fcmovu
mov
inc
lods
inc
adc
inc
pop
cwtl
xor
arpl
frstor
mov
push
and
fdivrs
push
sub
insl
xlat
insb
inc
pushf
stos
popf
dec
repz
out
cmp
jmp
faddl
out
ds
fs
divl
insb
jb
xor
and
inc
dec
bound
icebp
mov
push
pusha
mov
arpl
gs
push
cmpl
rol
inc
fcomi
repnz
pop
mov
ljmp
test
popa
xchg
mov
or
hlt
arpl
xor
push
push
sbb
or
pop
push
shlb
repz
dec
test
sti
xchg
add
sbb
test
ja
stc
adc
out
stc
jge
or
jp
pop
mov
and
adcl
testl
xchg
sub
mov
dec
ret
jle
dec
adc
std
push
loope
push
stos
jmp
loopne
mov
cmp
imul
jp
call
sbb
sbb
jae
fs
xchg
mov
sbb
stos
dec
cmp
sbb
mov
imul
mov
sbb
dec
sbbb
mov
jle
push
add
lea
adc
pop
loop
lret
dec
int3
jp
ret
xor
xchg
pop
sahf
lds
insb
sarl
and
or
std
push
sti
cmp
popf
jne
jb
shll
int3
push
jo
xchg
lds
mov
pop
adc
arpl
jmp
push
push
out
scas
xchg
adc
enter
mov
xchg
sbbb
mov
xor
fistpll
sub
scas
adc
add
leave
push
mov
movsb
and
outsl
xchg
mov
clc
xchg
es
add
sub
jl
inc
scas
pop
popl
add
cmpsl
scas
and
iret
test
push
scas
ret
pop
or
and
mov
push
inc
push
xchg
push
add
mov
fmull
stos
sub
mov
pop
cmp
stos
adc
test
pop
cmpsb
leave
leave
imul
sub
dec
mov
jnp
jne
fildll
enter
outsb
fs
xchg
xor
pushw
jl
ret
lods
das
mov
push
push
or
jno
and
inc
xchg
clc
nop
pop
jp
ja
dec
insl
xor
in
fbstp
out
mov
call
sar
je
mov
xor
loop
adc
les
subl
dec
dec
dec
call
out
dec
aad
push
xchg
sub
mov
mov
sahf
mov
popa
fcoml
mov
aaa
adc
inc
mov
xchg
push
sahf
std
xchg
roll
pushf
pop
xor
dec
cmp
jge
popa
clc
adc
rorb
mov
dec
out
push
inc
inc
xchg
sub
movsb
sbb
in
xor
xchg
test
mov
sub
lret
jb
mov
adc
test
and
add
mov
and
cltd
das
call
sub
addr16
ret
out
xor
cmpl
mov
out
shl
xor
aam
inc
sub
mov
dec
lret
mov
outsb
pushf
xor
push
jo
ss
or
sbb
cld
ja
push
push
and
mov
xor
test
cli
jbe
dec
and
cmp
push
dec
add
daa
popa
mov
mov
rcl
jle
mov
mov
fstl
scas
adc
add
stos
mov
jb
gs
arpl
shrl
mov
std
neg
sub
rcrb
dec
ficoml
dec
pop
repz
mov
movsb
int3
daa
adc
xchg
pop
sub
add
test
cmp
mov
add
dec
icebp
rol
mov
xor
shl
jnp
sub
push
testb
push
lahf
movsb
fstl
push
testb
mov
lahf
jp
mov
sbb
in
mov
stos
and
mov
add
xchg
testl
nop
pop
sub
inc
in
push
pop
insl
sub
sub
xchg
adc
scas
inc
cmpsl
jbe
pop
addr16
pop
push
mov
nop
mov
lods
insl
call
or
inc
xchg
inc
push
insb
arpl
popa
lea
or
dec
incl
aas
dec
xchg
sub
or
add
mov
jg
jns
imul
dec
dec
lahf
scas
lea
imul
addr16
add
call
mov
pop
mov
test
daa
cmp
stos
jbe
popf
int3
dec
xchg
aad
sbb
lret
or
sahf
clc
sbb
or
sub
mov
jbe
inc
lahf
inc
jo
in
xchg
jo
add
mov
mov
push
pop
dec
xchg
inc
push
es
sub
adc
cli
fucomip
ss
cmc
adc
clc
xchg
fwait
sbb
push
in
dec
data16
sub
jbe
aaa
dec
xor
inc
push
inc
xlat
cmp
movsl
jecxz
pop
je
xlat
mov
mov
pop
xor
ror
push
addl
pop
mov
push
sub
ret
pop
lock
push
icebp
addr16
iret
repnz
pushf
jne
into
jns
mov
push
setp
mov
xchg
icebp
sahf
xor
ret
fwait
pop
repnz
push
xchg
loop
rorb
jnp
scas
test
aam
movsb
jecxz
inc
jo
ja
pop
in
test
faddp
cltd
and
int
pop
jbe
addr16
xchg
mov
repnz
mov
insl
push
pushf
sbb
lods
cmp
roll
fwait
add
pop
icebp
mov
inc
test
inc
sub
or
pop
mov
lret
loopne
lahf
adc
out
cwtl
adc
repz
mov
cld
sub
xchg
fisubrl
push
mov
in
mov
jecxz
or
pop
or
gs
pushl
insl
jge
xor
mov
scas
cld
pop
mov
stos
andl
negl
lret
lock
mov
hlt
cmp
outsl
ret
mov
xchg
outsb
dec
dec
xchg
add
ret
clc
orb
add
je
and
xchg
addl
mov
pop
adc
dec
lods
sbb
cmc
mov
xor
icebp
in
scas
das
cmp
fsubrl
mov
lods
sbb
dec
cli
mov
mov
movsb
cmp
push
mov
inc
js
mov
out
inc
mov
push
loop
cs
nop
inc
mov
cld
vpxor
repnz
jg
jg
cltd
adc
push
sub
mov
push
sbb
adcl
sbb
repnz
jo
or
mov
dec
cmp
dec
mov
cmp
cmp
sbb
popf
lcall
js
adc
bound
mov
xchg
xchg
jp
sets
out
clc
bound
mov
sub
or
mov
mov
sbb
cmp
sbb
mov
push
out
xchg
sub
mov
mov
cmp
adc
mov
jns
popa
adc
sbb
bound
cwtl
xor
cmpb
xchg
fwait
pop
sub
imul
subl
push
and
out
ja
negb
and
pop
xchg
push
bound
movl
inc
inc
shrb
pop
xor
cmp
xchg
cmp
shrb
test
test
rcll
sub
cmc
push
adc
jl
fdivl
outsb
ret
jns
adc
jl
fisttps
aam
cmp
bound
bndstx
xor
aam
loopne
push
mov
inc
pop
jg
in
add
jmp
add
sti
adc
mov
out
sub
cmp
shrb
fsubs
xor
imul
fisubrs
je
cmp
dec
mov
test
sub
push
aad
int
fidivl
out
int
adc
inc
push
fs
cmp
out
es
mov
or
shll
sub
jo
mov
mov
mov
or
mov
rcrb
es
lods
inc
int
lods
repz
mov
sub
mov
mov
xchg
nop
stos
add
rcr
xchg
bnd
inc
cwtl
sub
push
mov
mov
dec
dec
push
nopl
jo
rclb
movsb
jnp
imul
add
fadd
jecxz
cmp
into
aad
aam
xor
pop
scas
not
sbb
sbb
imul
repz
pop
cmpsl
test
mov
jmp
pop
outsl
cmp
pop
cmp
aad
jbe
shr
adc
frstor
flds
mov
aaa
sub
xlat
repz
cmp
out
jo
in
cmpps
cs
pop
rcl
call
xor
lods
sbb
or
ja
or
cs
mov
data16
insl
xchg
jno
adcl
dec
sub
jno
or
sub
hlt
xchg
sub
imul
test
cld
roll
fs
scas
sahf
cmp
lahf
mov
lds
ljmp
or
insl
xchg
or
mov
scas
mov
pop
and
addb
sbb
popa
add
sub
arpl
jmp
or
popa
mov
jp
add
and
ss
push
outsl
fwait
pop
mov
insb
outsb
pusha
mov
sbb
add
sahf
xor
sub
mov
dec
inc
pop
adc
cmp
adc
shll
add
pop
leave
mov
andl
shr
addr16
cmp
or
imul
popf
add
jge
dec
in
test
sub
jmp
int3
arpl
jge
pop
cmp
outsb
sbbl
enter
test
int
dec
test
jne
mov
ret
push
or
and
lods
xchg
mov
mov
xchg
int3
sub
jp
aad
sarl
sub
dec
xchg
stos
je
mov
jp
push
mov
mov
mov
adcb
or
cmpsb
inc
xchg
stos
cmc
mov
popa
dec
in
jb
pop
mov
adc
data16
xor
jle
pop
sub
shll
mov
jl
or
or
push
loop
inc
push
sbb
jo
jmp
xor
movsb
nop
xchg
rcll
movsl
jecxz
push
inc
fildl
icebp
push
test
fbstp
clc
les
jg
push
leave
pop
cwtl
mov
push
xor
xchg
cli
jne
cmp
cli
jns
push
or
jmp
test
sub
mov
dec
inc
rol
sub
pop
outsb
xor
fldl2t
rolb
push
popa
test
jb
fs
loop
mov
imul
cmp
enter
pop
lock
int
mul
enter
mov
or
push
shrl
ret
repnz
pop
xchg
sbb
int3
lahf
cld
shrb
xchg
pop
push
xchg
xchg
in
ljmp
xchg
add
in
fnsave
dec
aad
cmpsb
mov
pop
jo
bt
push
lock
cwtl
jmp
or
mov
inc
daa
jmp
jl
add
aaa
lret
outsb
shll
mov
cli
jnp
sub
xlat
sbb
jbe
jns
mov
jne
js
dec
and
jb
push
push
sub
dec
xor
xchg
sbb
xchg
pop
movb
ss
lcall
js
popa
sbb
call
mov
in
ds
icebp
mov
add
cmpsl
lock
roll
or
notb
pop
mov
sbb
xlat
cmc
in
fisttpl
cmp
notl
lods
into
out
test
inc
rolb
lret
jbe
cmp
mov
mov
and
ljmp
movsl
dec
dec
int
sbb
push
add
pop
aam
push
xchg
imul
arpl
mov
pop
pop
xor
mov
mov
pop
rcll
lock
and
mov
mov
inc
into
je
cmc
lret
push
in
ret
add
pop
push
xlat
pushf
mov
adc
pop
out
addr16
pop
cmp
jbe
xchg
dec
mov
mov
adc
outsb
dec
mov
or
mov
mov
xor
sbb
cld
mov
bound
cwtl
push
pop
test
fdivl
adc
outsb
cmp
stc
stos
push
movsb
adc
inc
push
test
ss
push
repz
lods
and
mov
mov
mov
ret
das
dec
mov
cmc
inc
xchg
ficompl
mov
xor
pusha
popa
jp
or
out
or
cmc
push
push
push
in
inc
push
adc
insl
andl
xchg
inc
mov
pop
fistps
push
cs
cmp
mov
dec
inc
mov
sub
cmpsb
xchg
pop
sarb
jge
out
add
inc
xchg
dec
insb
lods
mulb
aam
pop
hlt
cmp
pusha
inc
sbb
cwtl
add
push
or
dec
js
pop
loopne
fstps
in
xchg
test
xchg
mov
mov
ret
jb
or
mov
test
push
in
loop
inc
cmp
in
fldt
mov
loopne
add
cli
js
call
arpl
inc
int
hlt
ljmp
adc
push
cltd
es
xchg
mov
das
clc
pop
subb
pop
add
repz
and
inc
inc
gs
dec
mov
pop
int
jnp
fs
ficoml
repnz
movsl
test
sub
xor
adc
repz
pop
pop
dec
xor
jns
insb
mov
push
push
jb
mov
cmp
ror
xor
and
mov
inc
sbb
rolb
pop
repnz
fs
inc
xchg
ret
lahf
lret
pop
out
mov
pop
fiadds
sbb
lret
movaps
adc
ss
adc
xchg
push
mov
xchg
out
push
dec
and
jns
outsb
push
mov
jmp
xchg
in
jo
mov
push
xor
popf
jb
add
movsl
popf
mov
and
add
sub
push
out
pop
jmp
cmp
jb
sbb
push
divb
pop
xlat
sbb
or
idiv
pop
adc
mov
lods
and
push
mov
push
mov
jb
ss
sbb
cmp
dec
jecxz
ja
loopne
ja
xor
jp
cmp
jecxz
jno
pop
xor
into
das
xor
jmp
scas
out
outsb
sub
lock
push
add
lds
xrelease
cmovb
fcmove
in
in
sbb
lods
fisttpl
cmp
cmp
fucom
lret
pushl
jb
arpl
pop
icebp
test
cmc
push
xor
fidivs
mov
mov
cwtl
enter
out
js
sbb
rolb
hlt
rclb
sahf
sub
pop
sbb
in
lahf
and
sbb
push
or
jl
mov
cmc
sbb
bound
fisttpll
repnz
mov
mov
sahf
int3
add
mov
pop
push
sub
daa
push
cmp
xchg
jmp
xor
test
adc
push
jb
in
ja
dec
or
je
call
add
cmpb
mov
add
ljmp
in
sbb
sub
sub
mov
fcmovne
dec
or
cmpsb
ret
movsl
movsl
cmp
cmp
and
jne
fsubs
std
xchg
add
scas
add
cmpsb
lock
lea
out
test
ret
je
mov
rcll
shlb
rcl
bound
mov
cmpsl
sbb
and
sti
dec
pop
iret
mov
or
jno
cld
dec
dec
aam
pop
popa
ret
sbb
mov
stos
in
xchg
mov
push
in
out
xchg
pop
or
inc
push
sbb
fs
sub
pushf
xor
mov
mov
test
jle
fwait
mov
dec
pop
xor
mov
jle
pop
loop
mov
push
inc
and
xor
out
test
loopne
stos
imul
fsubl
iret
lret
nop
jmp
jmp
mov
xchg
xor
push
cmp
jmp
hlt
jnp
push
pop
popf
mov
lods
dec
loope
jnp
push
popf
push
imul
mov
jle
mov
test
aas
pop
movntq
xor
popf
lods
push
mov
fadd
mov
or
testb
add
enter
lcall
jle
aaa
mov
lahf
lods
fmul
xchg
xor
xor
adc
hlt
rcrl
adc
movsb
add
repnz
sbb
inc
adc
adcb
pop
mov
aad
addb
dec
hlt
sub
mov
adc
dec
mov
ljmp
pop
inc
frstor
test
cmpsb
pop
push
add
rcll
fwait
xor
movsl
cmp
aaa
adc
push
mov
jge
pcmpgtd
inc
push
outsl
pop
lret
enter
bound
cmpl
pushw
stc
xchg
jge
insb
lcall
dec
fists
add
out
test
xor
jno
inc
ficompl
pop
jp
shrd
iret
inc
dec
xor
xchg
inc
mov
lods
add
jo
ret
mov
or
lds
and
stc
pop
repz
jbe
mov
inc
insl
add
bound
jp
movsb
mov
es
cwtl
cmpsb
dec
add
loop
adc
shl
fnstenv
int
inc
loopne
xchg
xor
cmpsl
out
dec
dec
test
sbbl
rolb
out
shlb
jno
sub
adc
mov
mov
js
inc
dec
jo
pop
mov
vandnps
mov
sbb
out
fmuls
sbbb
or
jne
mov
cmp
out
in
mov
dec
jle
shrb
pop
push
or
push
jg
mov
xor
and
dec
jecxz
imul
inc
sbb
les
add
orl
ljmp
aas
xor
rorl
jne
cli
fdivrs
pop
loopne
dec
pop
mov
mov
aaa
into
cli
xchg
fdiv
stos
xchg
and
test
icebp
int3
cmp
pop
jmp
xchg
jne
sub
adc
out
pushl
push
sub
dec
sbb
enter
call
mov
das
pop
mov
push
insb
mov
loope
repnz
lahf
mov
int
mov
aas
sub
aam
dec
test
arpl
popf
pop
sbb
fmul
dec
aam
icebp
nop
mov
rclb
jbe
inc
mov
xor
jo
xor
pop
lret
std
add
push
sub
int
cmpl
and
push
dec
jmp
fiadds
insl
scas
js
into
subb
push
inc
pusha
nop
imul
mov
xchg
mov
push
and
sbb
je
cwtl
movsl
out
mov
jp
cmc
movsl
cmp
adc
xchg
sbb
mov
decl
mov
pop
in
xorb
data16
xorb
sarl
adc
lds
pop
into
popa
lret
pop
out
test
cmp
aaa
rcrl
add
dec
les
cmpsb
out
dec
aad
mov
in
sbb
ds
jne
push
inc
repnz
int
aad
push
imull
lods
sbbb
dec
mov
jo
and
popa
or
sar
xchg
ret
sbb
sub
mov
dec
push
js
cmp
and
popf
mov
pop
in
imul
jl
lret
mov
imul
outsb
das
adc
pop
int
fdivs
addl
jge
cmp
mov
jb
fnstsw
mov
mov
fdivrs
mov
mov
stc
inc
mov
stos
inc
into
ret
jp
nop
cmp
aaa
fidivrs
cltd
mov
and
mov
test
stos
repz
or
inc
ljmp
aad
mov
push
cmpsl
mov
arpl
push
sbb
test
add
cmc
mov
cs
lock
adc
add
adc
pusha
jp
pop
sbb
or
jg
imul
test
jae
mov
cmpsl
imul
cs
mov
mov
push
incl
mov
fcmove
ss
pop
push
or
jecxz
pop
nop
sbb
mov
jecxz
adc
sub
mov
or
xchg
and
sti
inc
mov
imul
ret
jmp
jmp
sbb
lods
jmp
pop
sub
fs
cmp
subb
cmp
pop
repz
hlt
shl
icebp
add
stos
dec
daa
mov
sbbl
jae
xchg
imul
or
out
jnp
dec
pop
outsb
dec
mov
mov
xor
adc
jbe
pop
fs
inc
mov
repz
das
shrb
ds
pop
in
push
sbb
aaa
sbb
xchg
sub
and
sbb
lcall
cs
xchg
mov
dec
sbb
stos
leave
jg
jl
jb
lret
cs
push
xor
test
out
sub
jg
xor
les
adc
repz
repz
xchg
or
adc
cmp
adc
rclb
sbb
cli
cmp
out
push
andl
into
in
push
loop
adc
in
jne
jbe
cmp
fadd
xor
pop
push
jge
adc
xor
dec
les
inc
aad
cwtl
xchg
add
out
orl
imul
ret
mov
rcrb
sub
out
fildl
and
mov
es
jbe
dec
mov
push
jmp
pop
adc
push
mov
and
testb
popf
out
mov
push
lods
clc
insl
aad
cmp
pop
repnz
xor
push
insb
fildll
ds
pop
andl
xor
cmp
stc
or
inc
ret
movsb
cld
mov
imul
popf
add
pusha
negl
jne
ljmp
push
in
xchg
mov
mov
jmp
dec
fnstsw
sub
push
pushf
daa
leave
dec
imul
push
mov
ljmp
inc
pop
sub
add
and
sbb
jp
cmpsl
shrl
jge
insl
mov
lods
mov
mov
fucomi
jae
test
fistpll
pop
push
shlb
adc
pop
mov
inc
lods
fsubl
test
push
or
sub
js
jge
add
icebp
arpl
xor
outsb
ljmp
sbb
xor
lret
or
push
mov
adcb
loope
loopne
mov
pop
add
cmp
hlt
cmp
cmp
jmp
mov
sub
inc
cmp
daa
xchg
mov
mov
dec
insl
negb
jno
push
push
iret
push
xchg
or
nop
daa
mov
pop
scas
fdivl
pop
dec
push
jge
adc
jo
or
out
movsb
jecxz
mov
mov
test
push
sbb
pop
sahf
mov
push
divl
pmaddwd
inc
jle
pop
ljmp
push
jne
dec
test
lcall
sahf
and
scas
mov
jb
test
mov
sbb
adc
fildll
add
iret
lods
cld
jne
push
call
jle
jo
jnp
pop
mov
in
pop
ret
daa
aam
testl
rcl
xor
clc
mov
jbe
pushf
mov
jb
jge
out
lods
and
pop
cmpsl
push
ljmp
in
lret
imul
pusha
aaa
push
xchg
roll
cltd
add
in
jbe
mov
pop
mov
insl
xor
xchg
outsb
add
ret
scas
cmp
or
repz
xchg
pop
ret
xchg
sub
mov
dec
and
and
sub
or
lahf
popa
inc
sub
mov
sti
test
out
bound
mov
stos
jl
orl
jge
fstpl
mov
adc
or
sbbb
xor
inc
ljmp
xor
and
iret
stos
inc
adc
pop
push
neg
hlt
sub
jns
lcall
and
or
fisubl
insb
out
sahf
fildll
cmp
stos
insl
xor
mov
or
test
adc
xor
sub
dec
test
jno
inc
jmp
aam
in
mov
mov
and
push
pusha
not
insb
sub
or
subb
fwait
lds
push
je
imul
inc
rclb
push
mov
je
dec
cmpsb
add
test
mov
into
bound
add
adc
mov
xor
nop
imul
pop
ljmp
jno
hlt
sbb
sahf
add
mov
jge
jns
push
and
or
test
lea
inc
pop
vmulsd
or
scas
dec
rolb
ret
jge
cmp
fwait
xchg
pop
int
xlat
add
shll
cmp
mov
mov
arpl
xchg
xchg
lret
add
es
inc
or
xchg
mov
or
cmpsb
cmp
jge
jmp
xor
popa
and
lods
ljmp
out
sbb
xor
inc
jne
rcrl
jecxz
xor
xor
mov
push
data16
pop
sti
push
movsb
or
xor
out
cmc
shrl
pop
mov
jae
jle
popf
pop
scas
call
mov
sahf
xor
daa
jle
push
mov
les
loope
outsl
idivl
push
stc
je
shlb
pop
fnstenv
incb
repnz
fnsave
xchg
cs
je
jecxz
sarb
fistps
jge
sbb
cmp
nop
out
push
mov
ret
sbb
js
or
inc
adc
test
cmc
push
movsl
cmp
add
lret
aad
decl
jge
or
pop
sub
lods
shrb
hlt
jmp
lea
push
cmp
add
andnps
adc
ret
repz
add
test
add
fldenv
mov
movsl
fdivl
sbb
ds
mov
add
xor
js
pop
clc
jno
adc
adc
flds
imulb
stos
push
leave
cmpsb
mov
mov
add
adc
xchg
sbb
adc
dec
int3
push
jle
dec
push
mov
mov
jns
push
push
and
adc
add
jnp
shl
cmp
dec
sbb
iret
cmp
iret
inc
mov
es
ja
es
insb
in
mov
repnz
stos
xor
fadd
mov
in
rorl
dec
ja
test
loop
sbb
sahf
lret
add
dec
lock
adcl
mov
lahf
loop
movsb
push
in
mov
sub
cli
test
cmp
mov
repz
adc
aas
jbe
in
das
loopne
mov
in
gs
adc
add
pop
aas
scas
fisubs
xchg
jbe
xor
ret
nop
popa
jecxz
jb
imul
push
or
jmp
fisubs
iret
pop
addr16
cmp
cwtl
xchg
xchg
push
movsl
lock
fbld
mov
test
push
in
inc
popa
stos
xchg
data16
cwtl
loop
pop
pop
xor
mov
pop
call
xor
ret
ffreep
push
push
lcall
in
mov
test
mov
imul
xchg
mov
imul
push
mov
xchg
ret
jae
fimuls
icebp
scas
mov
loopne
das
test
sub
cmp
popa
scas
sbb
scas
inc
mov
push
pop
sub
dec
sbb
ss
or
inc
cmpsb
mov
jg
adc
sub
push
jnp
mov
fildl
test
or
xchg
lahf
loop
int
mov
jo
into
mov
or
das
pop
xchg
or
in
mov
int3
xor
aas
lret
int3
cltd
cmp
and
fwait
clc
dec
pop
adc
add
icebp
lahf
scas
sub
stos
ffree
or
hlt
xor
and
shl
pop
sub
sbb
lods
ja
xorl
xor
sub
adc
dec
setge
mov
fnstsw
add
lds
sbb
xchg
push
insl
adc
add
pop
in
int
xchg
push
xchg
xor
cmp
xchg
adc
movsl
cmp
xor
push
test
pop
jb
lret
call
add
mov
mov
or
sbb
rcrl
xor
je
cmpsb
jo
sbb
mov
divl
add
sub
sbb
mov
pop
or
xchg
mull
fsubs
in
sub
movsl
cli
mov
rorb
mov
mov
push
fnstsw
ds
jo
xchg
and
leave
push
insb
and
lock
dec
aaa
sub
int3
dec
cmpsl
lret
mov
pop
cmpsb
es
scas
xchg
cli
repnz
cmp
xlat
lahf
jae
jns
xor
mov
outsl
add
lret
cs
in
dec
out
inc
test
aas
popa
mov
loopne
ss
dec
je
inc
enter
xchg
not
inc
inc
push
ficompl
loopne
adc
imul
pop
cltd
sahf
add
cld
xchg
xchg
push
ficomps
insl
gs
sahf
daa
aaa
stos
xchg
mov
xchg
xchg
add
sub
push
call
xor
jo
ds
sbb
adc
or
js
ret
inc
pop
jecxz
repnz
out
lods
xchg
add
int3
fistps
cld
daa
or
fdivrl
or
pop
or
mov
out
mov
repz
jl
ret
mov
lret
mov
sbb
ds
fldcw
aad
inc
and
jge
repnz
jo
mov
inc
dec
js
jo
or
ret
sti
enter
in
ret
pop
cli
lds
pop
js
jmp
mov
pop
andl
xor
xlat
movsl
mov
push
out
push
xchg
mov
es
cld
incl
sub
movl
in
cltd
xor
mov
inc
icebp
push
xor
xchg
daa
sub
mov
mov
inc
iret
sub
popa
rcrl
mov
rclb
loopne
dec
das
push
or
out
mov
loop
mov
sti
xchg
push
push
push
or
stos
icebp
xor
imul
pusha
in
mov
ret
gs
std
sbb
sbb
mov
inc
stc
mov
pop
je
cwtl
lods
mov
cmp
loop
cmpsl
sbb
cmp
loope
std
inc
jmp
es
enter
cwtl
cmp
or
pushf
cmp
jno
enter
add
das
andb
mov
mov
fldenv
jnp
test
or
je
push
xchg
in
mov
cmp
dec
mov
mov
mov
sbb
pop
cwtl
decb
mov
int
ja
out
popf
jne
mov
pushl
icebp
jl
push
sti
inc
cmp
pop
rcll
push
imul
xor
icebp
jg
and
jp
ja
sbb
or
add
into
xor
je
adc
mov
or
push
mov
iret
cmpb
push
sahf
cmp
cmp
lret
dec
ljmp
mov
ret
pusha
ja
xchg
inc
jb
push
lea
icebp
jle
bound
push
adcb
xchg
xor
push
je
sbbl
mov
push
add
sub
enter
cs
xor
mov
sahf
out
rcrl
out
popf
sub
xchg
mov
cs
pop
lds
and
dec
in
cmp
sbb
cmpsb
insb
or
ret
repnz
jl
mov
add
hlt
adc
xor
out
and
lahf
inc
mov
pop
cmc
cs
dec
fistpll
push
fidivrl
jae
leave
insb
icebp
aam
lods
faddl
pop
scas
in
sub
or
or
rcrb
sub
hlt
rol
and
xlat
mov
or
cmpsb
sub
cmp
push
pop
fxch
roll
js
stos
mov
daa
sarl
inc
packuswb
adc
popa
loopne
sbb
in
mov
push
jmp
pop
popa
push
outsl
xchg
push
popa
enter
ds
cmpsl
mov
dec
aaa
cli
push
fimull
insl
push
jne
fwait
data16
mov
roll
jbe
jp
lret
sti
stos
js
mov
sti
or
call
adc
into
popa
scas
xor
add
fiaddl
arpl
and
lret
jl
imul
or
dec
sub
sbb
jecxz
and
adc
xchg
mov
in
mov
int3
mov
mov
push
stc
lret
aam
lret
int3
and
inc
rclb
mov
stc
idiv
in
add
cmp
xchg
div
test
and
cmc
inc
sub
out
xchg
dec
lret
imul
inc
mov
movsl
cmp
test
icebp
pop
in
fucomp
sbb
inc
mov
js
dec
pop
and
test
lret
addr16
daa
xchg
cli
test
lret
dec
pop
es
popa
cmpsl
ds
repz
mov
xor
mov
pop
push
fldenv
jp
pop
mov
testb
push
fucomi
jno
pop
imul
lea
jae
popa
scas
in
std
pop
aad
sarl
push
popa
clc
aaa
sub
pop
data16
ja
pop
addr16
call
mov
mov
and
pop
repnz
std
push
adc
and
jbe
inc
pushf
inc
in
jmp
inc
sbb
shll
mov
jecxz
repz
cmpsb
clc
fsubs
sub
negl
popa
movsl
lret
cmp
cld
nop
cmp
popa
icebp
or
fwait
aaa
inc
lahf
lods
mov
xor
out
test
cmpsb
push
mov
ljmp
mov
mov
les
push
mov
int
xor
fsubrs
scas
xchg
aaa
cmp
out
lods
mov
ret
in
int3
movsl
xor
xor
jle
xchg
mov
shll
jl
jnp
mov
xchg
pop
inc
adc
jns
out
xchg
leave
repz
cmp
or
fnstenv
lret
shll
cmpsb
test
leave
testb
dec
pop
cmp
out
jge
add
daa
in
jnp
push
lahf
adc
sbb
push
jns
mov
sbb
ds
lahf
ds
pop
adcl
pop
call
stc
popf
add
sub
pop
push
jmp
rorl
push
outsb
sbb
xchg
cmp
jp
mov
dec
mov
or
xor
enter
xchg
dec
loop
lret
pop
out
mov
fsub
imul
je
out
movsl
add
xchg
shlb
mov
sub
aaa
into
jg
stos
orl
push
mov
popa
inc
fnstcw
scas
lods
mov
and
mov
inc
aas
rclb
cmp
cs
std
fiadds
test
jns
xchg
mov
push
repnz
inc
loope
repnz
pop
icebp
jno
inc
push
mov
adc
inc
cltd
mov
adc
test
sbb
test
insl
jge
sahf
and
and
mov
sbbl
or
mov
sbb
or
jne
push
jge
mov
push
daa
arpl
mov
mov
jge
ljmp
mov
pop
loop
mov
enter
xlat
jp
push
adc
fisubl
mov
jbe
aad
jb
inc
sub
mov
push
mov
ja
and
xchg
lock
aas
fs
mov
fmull
cwtl
inc
stos
leave
push
in
subl
gs
lods
and
pop
dec
pusha
xor
xchg
mov
aam
inc
xchg
sahf
dec
repnz
shrb
cmp
popf
lods
andl
pop
ljmp
ljmp
sub
and
mov
ret
ljmp
cmp
or
push
dec
dec
cmp
adc
mov
dec
adc
dec
lahf
retw
cmp
jmp
push
test
cmpsb
and
xchg
in
rclb
in
das
sti
pop
dec
sbb
sarl
scas
imul
sbb
or
outsl
mov
jge
iret
out
dec
mov
test
int
lahf
xchg
movsl
cs
stos
adc
jmp
push
fsubr
or
loopne
inc
sub
sbb
mov
add
add
push
mov
scas
test
cwtl
or
lret
fldenv
loopne
and
cmp
popf
dec
xchg
add
leave
sub
sub
stos
out
cmpsl
in
jae
out
pop
inc
jbe
in
arpl
sahf
mov
inc
cli
or
stc
mov
aam
mov
cli
push
pop
inc
pop
cmp
imul
mov
add
xor
dec
xchg
mov
aaa
out
xor
add
notl
jb
in
sarb
clc
idivb
rcl
push
xor
repz
inc
pop
lcall
in
mov
mov
adc
cmpsb
mov
sub
test
xor
mov
xchg
lret
pop
imul
mov
sbbl
xor
mov
xor
sbb
negb
lods
mov
out
fnstcw
pop
lret
addr16
leave
sub
int3
jecxz
cmpsb
in
mov
imul
jno
or
and
das
aam
mov
add
push
test
fimuls
and
cmp
xor
out
data16
pop
out
mov
dec
jb
shlb
jno
xchg
mov
out
popf
inc
fimuls
mov
fwait
loope
in
mov
add
mov
pop
in
adc
mov
es
mov
lds
ss
lds
shrb
dec
mov
cmp
cld
mov
in
push
push
pop
sub
or
xchg
insl
jns
cmpsb
stos
mov
mov
stos
aad
popf
out
pop
aad
mov
jae
insl
inc
pop
std
das
cmp
out
mov
sbb
push
pop
in
inc
xlat
inc
inc
sbb
out
or
mov
out
addr16
rcl
int3
or
shll
jp
add
rorb
aad
fsubrl
outsb
add
arpl
inc
inc
pop
fistl
ljmp
mov
ja
fbstp
hlt
cmpsb
ja
jae
mov
add
out
mov
cld
sbb
stc
dec
sbb
cmp
sbb
mov
dec
push
jmp
mov
into
sub
call
cwtl
js
dec
test
inc
push
icebp
mov
and
sbb
inc
jae
sbb
xlat
pop
jecxz
addb
add
cmpsl
ds
mov
movsb
outsb
pop
outsl
call
mov
push
dec
ficomps
push
lcall
push
out
xor
cmp
loope
shll
cli
or
push
mov
sub
push
les
sbb
fdecstp
jns
cmpb
nop
pop
leave
out
pop
adc
push
sbb
sti
push
mov
fbld
or
stc
inc
cmp
xchg
add
pop
xor
push
and
shlb
xchg
jecxz
in
lds
mov
push
dec
sub
out
int
or
cld
lcall
mov
divl
out
orl
push
fisubrl
andb
test
sub
icebp
pop
faddl
xchg
and
sti
push
mov
out
cmp
fnstenv
popa
rclb
xchg
pop
fidivs
cwtl
mov
dec
mov
fidivl
pop
lahf
data16
mov
lret
mov
jno
xchg
push
lds
cmp
mov
popa
dec
lea
inc
cmp
setns
dec
ja
mov
fwait
xchg
test
arpl
xchg
out
xchg
lahf
mov
or
sbb
mov
mov
xor
outsb
or
fs
mov
test
jge
cmpsl
mov
sarl
dec
add
mov
pop
mov
daa
in
sbb
stos
mov
mov
sub
push
adc
xor
jnp
mov
add
sub
xor
sub
ret
sub
jns
push
mov
lret
cmp
push
arpl
cli
pop
into
lods
aas
mov
xchg
das
mov
inc
xlat
daa
aad
in
pop
scas
js
test
divl
cmp
cmp
mov
int3
and
cld
xor
adc
mov
stos
fwait
cwtl
add
cltd
in
lods
inc
adc
cmp
xor
inc
cld
pop
add
cmp
cmpsb
out
push
adc
xchg
xor
and
mov
sub
test
and
dec
mov
ret
mov
push
push
lret
pop
or
cltd
xor
sub
mov
cmp
fcompl
cmpsl
rorb
nop
adc
cmovno
fs
fs
mov
sbb
imul
cwtl
imul
mov
cmp
loop
push
xor
inc
test
lret
movsl
xchg
sti
jbe
test
aad
into
sbb
fsubs
dec
scas
cmp
xchg
sub
dec
add
aas
sbb
jae
movsb
out
mov
hlt
sub
xor
mov
cltd
xor
notl
inc
scas
mov
iret
sbb
inc
sub
hlt
inc
sbb
shld
adc
cmpsb
add
stos
mov
mov
sub
cmp
insb
iret
pop
iret
mov
cmp
jnp
or
das
inc
orl
mov
aas
loopne
out
hlt
mov
pushf
aaa
fnsave
aam
loope
cmp
jbe
loopne
xchg
xor
rcl
movl
jnp
fistps
push
daa
and
ljmp
sahf
cmp
scas
lods
xor
adcl
pushf
movsb
xor
out
leave
fistpll
jb
flds
pop
xchg
sub
add
je
add
push
mov
mov
push
adc
adc
cvtdq2ps
or
mov
jno
mov
sbbl
pop
les
fsubr
scas
andb
dec
jge
jae
cld
inc
pusha
mov
cwtl
push
push
add
popf
and
cwtl
push
mov
adc
jno
ja
imul
dec
and
jg
jb
ret
mov
lret
push
pop
sub
daa
lods
adc
cltd
inc
jno
jne
sarl
test
nop
cmp
hlt
inc
sub
xchg
cmpsb
jns
push
scas
dec
adc
ja
mov
test
test
push
in
test
jno
jbe
add
int
dec
sbb
dec
lret
jl
cmp
mov
and
inc
aaa
loop
movsl
nop
ja
mov
mov
lods
sbb
adc
mov
shlb
pop
mov
sbbl
add
mov
dec
gs
xchg
push
test
int
lods
mov
notb
push
loopne
push
lds
addr16
sbb
push
push
or
jae
enter
stc
test
cmpsb
mov
outsl
jge
fcoml
or
out
pop
repnz
add
cmp
push
mov
and
inc
xchg
fnstcw
lods
cmc
push
jg
add
fs
lds
jp
xchg
scas
mov
fsubrs
int3
es
jbe
push
leave
or
js
mov
pop
and
adc
ljmp
xor
repz
jo
or
sbb
dec
adcb
cmp
add
les
mov
push
push
lds
or
sbb
jb
shrb
lods
ljmp
xchg
ljmp
mov
arpl
out
sbb
lds
dec
pop
mov
xchg
dec
mov
xor
pop
aas
push
inc
inc
cli
jne
ljmp
inc
xor
or
cmp
mov
dec
mov
mov
pop
fbld
jmp
fsub
mov
jo
in
jbe
outsl
loop
stos
adcb
jne
xor
popa
xor
mov
arpl
mov
lahf
and
loop
push
aam
cmp
push
xor
push
pop
pop
lock
pop
xlat
jle
dec
pop
cmpsl
cmp
mov
dec
loope
mov
jmp
xchg
fsubrp
mov
insl
aas
hlt
pop
insl
cmp
lock
cmpsl
and
add
xchg
stos
rcll
ret
loope
cld
push
sub
xor
pop
add
add
cmpsb
repnz
sbb
mov
data16
call
call
aas
push
jmp
mov
cmp
sbbb
mov
inc
in
xor
sar
jl
mov
dec
mov
dec
mov
inc
shlb
jae
push
out
out
xorb
mov
add
das
es
push
out
mov
ljmp
dec
mov
rcl
add
xchg
mov
cltd
mov
jno
mov
fs
pop
cld
or
clc
mov
lret
sbb
mov
test
push
push
ret
icebp
jmp
xor
js
ja
pop
mov
arpl
aas
test
popa
push
lahf
sub
and
fwait
in
pop
xor
bound
les
mov
xchg
add
pusha
test
cltd
sub
test
pop
sub
cmp
mov
in
sub
mov
push
fnstcw
cmpsb
sbb
add
adc
jecxz
xchg
xchg
es
insl
jb
xor
add
inc
dec
test
hlt
imul
data16
lds
rolb
insb
add
leave
pop
std
add
push
sbb
inc
adc
xor
dec
mov
shrb
sarl
stos
scas
mov
popf
pop
into
jp
in
imul
inc
imul
dec
sbb
add
cmp
inc
insb
sbbl
rcrb
push
dec
cmpsb
fmuls
or
sub
add
inc
mov
jne
ljmp
imul
arpl
adc
jle
push
stos
lock
cltd
xor
push
sub
subl
adc
add
xchg
cmp
daa
cli
mul
dec
fs
fnstenv
pop
test
add
dec
roll
mov
mov
cs
cmp
dec
and
dec
mov
loop
xor
orb
call
dec
call
cmp
jp
test
or
je
lock
sbb
add
push
scas
mov
test
ljmp
mov
lds
mov
lods
add
ds
stc
out
sbb
fs
pushf
jl
mov
sbb
cmp
jno
rorb
push
test
repnz
sarb
jns
lret
movsl
mov
fcmovnu
rcrb
lock
jb
pop
jbe
add
fidivs
ret
fiadds
popf
mov
inc
popa
add
and
ret
call
test
repnz
xchg
add
nop
stos
mov
fidivrs
fstpl
stos
das
mov
lds
add
insl
ret
add
dec
lret
pop
and
xor
xor
fnstsw
pop
and
jecxz
mov
mov
clc
jbe
popa
decb
pop
js
or
mov
inc
outsb
daa
jp
in
js
pusha
fisttpl
and
addr16
cltd
rcr
mov
xchg
jmp
repnz
and
push
fwait
sub
mov
push
jo
adc
cwtl
mov
jle
or
xchg
dec
cmpsl
stos
pusha
fldt
dec
xchg
adc
push
stos
jg
es
lahf
test
orb
iret
out
and
dec
xor
dec
push
adc
mov
jno
sub
mov
push
ljmp
jb
ljmp
in
dec
mov
imul
inc
adc
and
cld
sbb
in
stc
xchg
lods
daa
js
sti
test
pushf
add
faddl
adc
fstps
imul
sub
or
add
or
fwait
pusha
orb
xchg
scas
push
dec
test
xchg
sub
ja
xor
and
data16
push
xor
or
fs
push
popa
pop
sub
xor
sbb
sub
and
mov
inc
sub
leave
leave
clc
ret
ror
hlt
sbb
xchg
test
mov
push
cmp
pop
daa
mov
daa
ljmp
xchg
loopne
sbb
sub
sarb
pop
mov
and
add
leave
xor
pop
movsb
pushf
cmp
inc
push
mov
loope
jne
cmpsl
adc
test
popf
movb
sbb
sub
addr16
ret
and
roll
push
pop
lahf
pop
in
lret
or
adc
lock
and
sarb
cmp
xor
je
mov
jge
sub
cmpl
dec
add
dec
cmp
xchg
cmc
or
bound
xor
and
loope
pop
sub
outsl
xchg
mov
mov
xchg
and
in
and
jle
cmp
daa
dec
lcall
loop
sbb
shll
xchg
jnp
pop
mov
outsb
mov
push
jmp
sbb
cmc
int
ds
sub
test
andl
adc
dec
inc
pop
loope
dec
xor
jle
jo
pop
pop
scas
mov
sub
scas
push
dec
sti
rcrl
insb
mov
cmp
sbb
sbb
xor
push
xchg
inc
bound
mov
enter
sbb
push
add
dec
scas
cmpsl
loopne,pt
scas
push
lock
lds
in
loope
jecxz
insl
pavgb
inc
mov
xchg
jbe
jle
movsl
and
xchg
out
xchg
dec
add
and
and
jbe
mov
repz
std
jo
mov
or
jge
mov
pop
outsl
push
lret
je
jmp
ljmp
xor
pop
lret
lods
sub
fucomp
in
or
cmp
cmp
dec
loop
jg
push
cld
pushf
mov
add
je
xor
and
xchg
das
inc
enter
arpl
cs
stos
jp
mov
fs
aad
sbb
out
or
in
negl
dec
jg
jne
rcrl
adc
jne
rol
adc
sub
push
xor
stos
jo
dec
pop
shrl
mov
in
mov
mov
inc
pop
and
movsl
xchg
adc
lods
jecxz
add
fnstsw
and
mov
adc
push
testl
mov
inc
pop
xchg
mov
ja
out
pop
lahf
jno
bound
xchg
in
call
or
and
sysenter
lods
mov
add
inc
jecxz
adc
je
xchg
cmp
xorl
out
cmpsl
push
dec
jo
popf
xchg
pop
adc
sbb
mov
jle
jne
insb
xor
sbb
add
nop
imul
inc
pop
lcall
sub
stos
add
pop
aad
into
mov
push
push
test
test
enter
jns
add
scas
aad
addr16
call
aaa
jp
cmp
push
lcall
pop
sahf
stos
and
stc
pop
movsl
idiv
sub
or
popa
sbb
clc
add
mov
cld
loopne
scas
out
inc
fwait
outsb
and
pop
pop
sub
outsb
aam
into
adcl
push
mov
fbld
mov
sbb
inc
xchg
mov
pop
dec
add
xor
das
dec
lret
xor
js
ret
lock
push
or
popa
mov
leave
test
push
nop
rolb
fldenv
xor
push
andb
cmpsb
addr16
pop
fs
mov
xlat
pop
shll
cli
and
or
imul
push
stc
jns
in
stc
scas
inc
cmpsb
or
cltd
cli
inc
adc
outsl
andl
cmp
sbb
pop
and
mov
pop
sub
bound
js
das
ret
push
mov
cmc
enter
mov
push
inc
in
scas
cwtl
xchg
clc
test
dec
mov
lss
or
ds
andl
pop
inc
sbb
jl
test
fistps
out
call
dec
pop
sbb
pop
xchg
pusha
subb
add
std
rcrl
push
mov
std
or
rol
filds
int
adc
adc
mov
ss
fisttps
fnstsw
dec
xlat
or
test
add
test
aas
dec
repz
mov
sbb
hlt
addr16
dec
lds
sti
es
push
ja
lea
or
add
adc
jae
jge
push
cwtl
dec
dec
or
adc
pusha
fstpt
add
adc
cli
das
cmp
pop
dec
pop
jl
mov
and
ss
adc
push
add
mov
daa
inc
push
fwait
das
or
fsubl
cmp
mov
dec
mov
push
loopne
mov
je
sub
inc
pushf
cmp
movsl
movsl
jle
lret
xchg
loope
outsl
arpl
pop
sub
pop
pop
mov
mov
movsl
sub
cmpsb
add
pop
imul
cmp
adc
push
xor
addl
outsb
mov
decb
rclb
icebp
add
cmpsb
cld
aas
jne
movsb
xchg
sub
push
je
arpl
xchg
cmp
icebp
mov
fdivr
cmp
push
sbb
ret
addl
cs
add
lret
jo
mov
nop
xor
xor
mov
ret
xor
adc
inc
in
mov
shrb
pop
imul
rorl
mov
nop
xchg
mov
push
rolb
mov
mov
inc
fcoml
cpuid
cmp
adc
inc
popa
adc
or
jae
test
sbb
ljmp
dec
lods
fistps
adc
and
sti
inc
adc
gs
inc
sub
sahf
cmp
pop
shlb
insl
pop
addr16
popa
test
iret
imull
movsb
in
inc
fists
adc
sub
cmp
xchg
sbb
hlt
test
cli
movsl
cld
dec
xchg
sbb
cmpsl
dec
fdivp
sbb
outsb
jp
or
rol
mov
sbb
mov
aad
or
push
jno
dec
cmp
cmp
movsb
xchg
clc
jno
and
data16
out
sbbb
mov
add
jnp
cmp
or
sub
sbb
push
in
adc
insb
mov
lds
jg
clc
fmulp
pusha
push
inc
outsl
lea
insb
jecxz
lea
xor
out
cmp
inc
fsubl
mov
int
jecxz
jno
mov
mov
inc
fiadds
mov
daa
ret
and
fiadds
dec
pop
cmp
out
movsl
jno
pop
pop
mov
arpl
fldcw
lea
sbbl
mov
xchg
and
push
in
mov
cmp
mov
sbb
and
inc
out
sub
and
dec
je
jl
push
ret
or
test
subb
iret
ficompl
into
push
add
cmp
test
cmpsl
jp
subb
subb
int3
hlt
push
sbbl
mov
andb
repz
lcall
sbb
xchg
lret
jmp
push
mov
mov
clc
outsb
mov
xchg
mov
fmull
xchg
sbb
push
in
out
mov
jle
add
shl
sub
mov
push
hlt
inc
pop
loope
into
gs
or
mov
pop
mov
jge
jnp
pop
in
fldenv
das
lret
cltd
bound
jmp
jbe
cmpsb
mov
sub
push
pop
inc
fstp
xor
or
pushf
mov
nop
repz
repz
clc
ja
mov
sub
or
pop
adc
test
fs
xor
bound
push
notb
jle
inc
pop
fidivs
out
fucomi
push
xchg
stos
and
mov
sub
pop
fwait
ret
in
jl
cmc
mov
jmp
adc
mov
arpl
fstps
xchg
mov
fcompl
js
leave
lcall
adc
jbe
xor
ja
roll
ret
cmp
repz
ds
rcrl
cmp
sub
loope
test
push
out
jl
push
incb
lahf
hlt
jmp
js
inc
ret
xor
mov
or
lret
je
lret
test
mov
out
xchg
dec
lret
inc
fdivrs
test
into
inc
mov
jmp
jge
lock
rcr
stos
inc
cmp
and
leave
push
lcall
xor
inc
fnstsw
mov
sbb
jle
test
xor
loop
fwait
mov
ret
and
dec
lock
test
xchg
or
push
xor
jecxz
fmulp
fcmove
test
mov
pusha
paddb
jnp,pt
outsl
xor
mov
outsl
mov
aam
or
loopne
movlps
and
pusha
fs
xchg
pop
jg
cmp
sarb
push
mov
aad
fildll
dec
inc
and
rclb
lahf
adc
lods
lret
mov
xor
sbb
push
call
lds
inc
lock
imul
dec
mov
inc
dec
je
enter
aas
pop
movl
arpl
cmp
je
xor
ss
pop
insb
iret
sbb
fwait
loopne
int3
cmp
decb
mov
mov
push
jg
test
xor
jbe
jo
ficoms
add
popa
imul
sbb
dec
dec
out
jae
fstpt
cmp
notb
xor
dec
lods
pusha
lods
test
pop
sub
daa
outsl
push
stc
movsl
inc
das
mov
loopne
sub
mov
add
cmpsb
sbb
pop
lods
cmp
inc
jmp
sbb
mov
sub
mov
mov
es
push
icebp
movsl
fstl
push
scas
or
lret
cmp
jecxz
lds
popa
lret
sti
xchg
mov
mov
add
cmp
shll
out
mov
lret
mov
and
lcall
push
out
stc
lods
xor
test
xchg
add
lods
pusha
jg
jmp
ss
ljmp
xlat
mov
mov
ret
mov
push
ret
xlat
sbbl
sbb
lcall
or
testl
push
call
adc
outsl
inc
jmp
lds
daa
mov
sub
and
inc
mov
je
jo
sbb
aas
lds
adc
add
or
mov
in
adcb
jg
out
dec
loop
dec
xchg
xor
and
cld
loop
in
out
pop
mov
orl
repnz
arpl
jbe
outsb
es
jle
xlat
fwait
pop
out
pop
test
mov
xor
xlat
push
aad
icebp
inc
cmc
pop
out
ficompl
xchg
daa
in
jmp
sub
aaa
pushf
dec
jecxz
inc
ljmp
data16
test
xor
inc
dec
jg
loop
cmp
pop
scas
ret
imul
subl
mov
sbb
bound
jne
frstor
xor
fs
jg
lds
call
data16
pop
xchg
mov
sub
xor
stos
pop
dec
add
push
jae
mov
jns
aad
xchg
dec
jmp
mov
or
movsl
push
add
adc
add
cmpsl
mov
push
jl
inc
mov
jge
into
fidivrl
pushf
ljmp
inc
xor
pop
ss
ljmp
out
adcb
les
push
or
push
fwait
addr16
inc
stos
xor
dec
xchg
or
in
xor
ret
andps
out
in
dec
xor
jmp
cmp
mov
xor
shl
cmpsl
mov
or
mov
mov
movb
mov
and
inc
xchg
scas
ficoms
repz
push
pop
in
aam
mov
mov
repnz
int
loop
mov
push
jmp
lods
xlat
fcmovne
xlat
popa
jb
or
sti
xor
xor
sub
ret
pop
ret
lock
insb
rol
rcrl
imul
mov
imul
mov
mov
in
pop
imul
adc
xor
arpl
pop
push
sub
xchg
out
leave
int
cmp
shl
int
sub
mov
test
ja
lret
mov
bound
sub
outsb
cmp
mov
and
jo
xchg
and
jge
cmpsl
mov
popf
mov
mov
xchg
jge
push
mov
inc
stos
movsl
es
ffree
pop
lret
nop
sub
fsubrl
cmc
cmp
movsb
jecxz
or
mov
fisubl
dec
dec
inc
xchg
dec
data16
mov
scas
in
popf
jne
push
pop
xor
dec
dec
jbe
xchg
adc
push
push
and
lcall
sub
lret
xchg
outsb
daa
scas
cmp
sub
cs
aas
cwtl
cmp
les
loopne
insb
adc
push
sub
bound
in
dec
pop
cmpsl
push
push
push
aad
mov
es
outsb
fcmovb
and
mov
jno
je
cs
push
out
les
ljmp
lods
mov
sbb
cld
mov
ljmp
xor
pusha
sub
jmp
mov
jmp
lods
je
cmp
cmpl
nop
stc
lcall
ficomps
add
sbb
xor
cmc
insb
loopne
push
adc
js
frstor
inc
lods
push
mov
fnstcw
add
xchg
sub
cmpsb
and
jg
lret
int
push
mov
xchg
ret
cmpsb
rclb
dec
dec
dec
adc
loope
loop,pt
enter
in
mov
frstor
test
mov
dec
xchg
mov
loopne
and
scas
inc
bound
xor
dec
adc
jo
xlat
jmp
lods
push
cmpsb
fnstenv
inc
or
cmp
pop
fldenv
adc
pop
test
push
icebp
ret
inc
xchg
add
int
pop
mov
popa
fdivrs
dec
loopne
mov
mov
push
call
addr16
call
repnz
insb
data16
jbe
or
mov
scas
mov
mov
mov
mov
mov
test
aas
cmpsl
rcrl
or
sub
lret
mov
aad
pop
push
sub
cmp
push
bnd
aaa
push
inc
cmpsl
dec
fnstsw
shl
stos
inc
mov
push
cmpsl
dec
fmul
fcmovb
cmp
outsb
clc
dec
fwait
add
sub
sub
push
movsl
push
jns
add
cmp
sbb
jp
mov
sbb
jl
jmp
pop
push
cs
ficomps
repnz
fnstcw
popa
mov
cs
xor
ret
inc
fisubrs
shlb
push
sar
dec
xchg
out
movsl
adc
aaa
sub
jo
insb
xchg
or
lods
out
popa
imul
rcrl
daa
jne
repnz
fdivl
inc
out
or
leave
repnz
fs
cmp
xchg
sarl
out
bound
jmp
sarl
lods
into
dec
fnstcw
sbb
jmp
hlt
orl
mov
imul
lahf
fstpt
repz
test
jecxz
add
mov
sti
lds
mov
jns
or
jo
push
adc
adc
loope
out
sub
sbb
movsl
mov
push
jp
jbe
xor
pop
push
jae
xchg
adc
cltd
out
dec
lcall
int
icebp
ror
mov
jbe
aam
adc
scas
push
sti
std
jbe
cmpsl
pop
int
inc
inc
leave
mov
lret
ss
push
mov
ret
xchg
mov
cmp
xchg
std
outsl
rol
shrl
cmc
fstpl
cmp
xor
bound
rcll
add
adc
add
stos
std
mov
xchg
mov
lret
jns
cmpsb
in
adc
pop
pop
mov
add
xor
fs
pop
jno
xchg
dec
cltd
push
sbb
xorb
lahf
lods
dec
nop
jl
ja
xchg
pop
add
dec
insb
adc
pop
pop
test
inc
mov
jb
sub
mov
dec
xchg
mov
in
cmp
ss
add
push
in
fstps
std
adc
mov
aas
sbb
add
lods
shll
es
or
xchg
pop
or
es
mov
inc
arpl
sbb
icebp
xor
jns
out
xchg
call
xchg
pop
scas
faddp
jecxz
push
daa
cmp
int3
mov
int3
hlt
adc
and
adc
mov
out
pop
xchg
xor
adc
fbstp
add
xlat
jnp
jge
stc
and
pusha
and
fcmovne
jne
xor
ljmp
ljmp
call
leave
cmp
push
repz
cli
sbb
jp
xchg
test
std
push
adc
lret
test
jno
cmc
mov
push
aam
fistl
test
ljmp
cwtl
jbe
push
lods
push
test
mov
ret
mov
jne
push
add
das
pop
pop
gs
or
hlt
ja
das
mov
push
es
cmp
imul
movsb
xlat
sub
inc
push
adc
pop
out
jb
push
mov
jecxz
xchg
cltd
cmp
insl
les
popf
add
sub
out
mov
ficoml
imul
or
adc
mov
push
lret
loope
fldcw
pop
icebp
mov
pop
pop
out
mov
hlt
push
lea
outsb
test
sti
into
adc
cld
pop
outsl
shrw
ja
or
cltd
fidivrs
inc
sbb
add
fldl
int3
xchg
push
vpunpcklqdq
imul
jnp
jne
shl
sub
push
fwait
push
mov
out
lret
loope
cmp
sub
aam
daa
add
jg
repnz
xchg
xor
rcll
repnz
decb
movsl
mov
sub
les
mov
bound
aas
mov
lock
lahf
lods
push
mov
outsb
test
sbb
dec
std
xchg
inc
in
mov
rcll
cmp
add
xchg
cltd
enter
mov
fnstcw
pop
inc
dec
movsb
cmp
repnz
adc
adc
and
cmp
les
adc
imul
push
xchg
daa
and
push
push
faddl
adc
movsb
or
in
jp
sbb
fwait
cs
shlb
sbb
cmp
fcomps
pushl
icebp
add
lods
inc
mov
dec
or
or
rol
mov
cmpsl
stos
cmp
push
mov
shlb
in
sub
jg
lds
xor
out
insl
sbb
mov
lods
xchg
push
push
xlat
ja
loopne
push
popf
adc
insl
cmc
push
movsl
clc
mov
in
mov
add
jb
add
mov
mov
aam
pop
shll
dec
repz
scas
ret
jle
mov
dec
xchg
sub
dec
das
xchg
cmp
mov
mov
cltd
adc
mov
push
add
out
scas
fsubl
test
push
int
repz
push
js
aad
cmp
pop
add
sub
shll
data16
imul
movsl
push
in
xor
fcmovne
sbb
fbstp
push
ss
pop
mov
orl
lret
or
add
pop
mov
dec
jl
aaa
test
daa
pop
data16
xchg
cltd
jp
jno
jle
push
fs
xor
adc
pop
cmp
jne
add
ljmp
pop
lea
clc
enter
xor
stos
sub
fbstp
es
repz
popf
sti
mov
lret
adc
mov
popa
sub
outsl
lcall
mov
push
ret
pop
cmp
outsb
mov
out
mov
fcoml
push
sbb
cmc
popa
jg
inc
dec
jns
loop
xchg
sub
add
out
mov
jnp
bound
mov
iret
fiadds
outsb
add
adc
inc
pop
aas
cmp
mov
imull
jae
push
fucomp
aad
xor
in
in
imulb
ljmp
xchg
push
jp
andb
mov
aad
and
adc
inc
xchg
ret
fsts
incb
outsl
negb
popa
clc
dec
cltd
jl
in
shll
pxor
ss
mov
adc
add
sub
dec
xor
int
sbb
inc
mov
or
jle
dec
inc
mov
data16
jo
xorl
pop
mov
adc
jp
mov
lods
flds
fmull
aam
lret
enter
push
in
mov
push
mov
push
add
out
adc
xchg
sub
movsb
insl
fwait
mov
mov
and
push
cmpsl
adc
stos
and
insb
add
inc
xchg
lods
jl
rclb
vpunpcklbw
lcall
and
repz
mov
jmp
movsb
aam
cmp
in
subb
out
lcall
jg
add
push
jge
popf
pop
add
aad
pop
pop
add
xlat
jb
mov
in
jmp
cli
cwtl
push
sarl
ja
sub
inc
pushf
cs
xor
pushf
sahf
fisubl
jno
repz
push
xor
out
out
fsubl
loop
xor
lds
jns
vcvtps2dq
je
jnp
mov
xchg
fnstenv
xlat
enter
jge
sbb
mov
dec
mov
shll
inc
mov
and
push
pop
sti
fsubrs
movsb
pop
stc
dec
add
out
add
mov
dec
pop
dec
js
sub
inc
jmp
xchg
mov
test
cmpsb
icebp
decb
dec
pop
mov
sbb
js
fs
cltd
loop
roll
push
sbb
lret
xor
mov
jmp
int
stos
subl
sub
sub
test
mov
andl
lea
xchg
es
pop
mov
iret
fldl2t
sub
add
mov
data16
cmpsl
xchg
dec
mov
cmc
mov
insl
cmp
push
push
cmp
lods
mov
lret
in
ljmp
mov
mov
push
mov
jb
repnz
push
test
lds
lock
out
sub
inc
push
lahf
mov
pop
loope
rorl
lea
inc
stc
popf
lock
mov
jb
add
jmp
pop
sbb
jb
movsl
mov
inc
addr16
gs
shll
inc
fldcw
sbb
mov
adc
push
xlat
push
and
mov
xor
bound
addr16
leave
and
stc
mov
ret
sbb
xlat
jge
clc
cmp
pushf
out
jne
out
adc
pop
cmc
inc
pop
negb
xchg
dec
add
sub
hlt
gs
mov
push
mov
inc
push
shrb
fidivl
jl
pop
fwait
call
sbb
sahf
andb
pop
push
adc
out
cmpsl
cmpb
das
imul
mov
mov
push
mov
add
jae
pop
sub
dec
mov
cmp
dec
inc
int3
mov
cli
insb
adc
xchg
xchg
xchg
inc
adc
hlt
mov
stc
je
shlb
push
mov
pop
ficoms
test
cmp
push
lahf
sub
dec
fcompl
sbb
icebp
xor
and
add
rclb
pop
cmc
pop
sbb
jne
xchg
mov
and
js
xor
aas
in
add
imul
addr16
fstps
push
or
sbb
xchg
popf
fdivs
aad
dec
f2xm1
divl
push
leave
dec
out
jle
dec
mov
lahf
adc
das
popf
jno
push
ja
dec
shll
dec
and
stc
and
cmp
mov
pusha
arpl
adc
xor
inc
clc
mov
sbb
outsb
stc
je
sub
and
cmp
popf
cmpsl
and
jp
repnz
inc
push
cs
popa
xlat
movsl
mov
fnstsw
xchg
in
fcmovu
push
ljmp
jno
xor
add
cmp
mov
addl
rcrl
push
mov
push
xor
jno
insb
xchg
cmpsb
leave
pop
and
pop
hlt
mov
pop
sub
xor
aas
into
stos
push
std
pushf
out
ljmp
mov
adc
push
cltd
aas
jecxz
outsl
xchg
xchg
js
or
iret
jae
out
sbb
inc
lret
fwait
inc
push
out
inc
cli
iret
dec
bound
sbb
mov
jl
arpl
pop
test
dec
pop
xchg
loop
cmp
sub
or
ret
or
mov
adc
pop
ds
jo
or
sub
push
jl
dec
pop
push
cli
lock
adc
sbb
repz
dec
outsl
push
andl
fistl
ret
sub
dec
dec
cmp
lock
jne
sbb
fldcw
sub
sbb
cwtl
popf
cmp
shlb
ss
hlt
mov
fadd
fcompl
push
insl
arpl
sub
sub
les
in
ds
pusha
addr16
fwait
mov
inc
enter
mov
hlt
and
cwtl
adc
loopne
xor
aaa
and
push
ljmp
icebp
gs
fwait
in
lea
in
add
add
fcom
sub
xor
dec
addr16
push
sahf
les
xlat
jno
pop
jp
fldcw
and
or
test
push
and
push
outsb
sub
sahf
fcomi
or
lea
nop
jnp
or
cmp
shr
ss
inc
cmp
inc
dec
sub
pusha
add
dec
fwait
mov
or
cmp
sub
enter
outsb
out
andl
sahf
add
mov
add
cmp
inc
pop
ds
test
cmp
adcb
cld
ret
iret
lods
or
ss
jae
daa
sub
xchg
pop
dec
mov
lods
push
mov
int
push
pop
xchg
sub
hlt
sahf
adc
jg
pop
mov
loopne
in
sbb
cmp
adc
rol
xor
jp
xchg
cmpsl
pop
data16
dec
into
mov
arpl
cli
shr
or
xor
int3
inc
inc
add
mov
stc
imul
rorb
rcl
mov
cs
and
jge
and
cli
adc
mov
push
sub
fistps
push
lcall
xchg
adc
hlt
xchg
pushf
inc
jl
mov
adc
mov
jl
ljmp
mov
jmp
mov
stos
mov
imul
lret
mov
test
xchg
std
repnz
aam
cmp
dec
add
imul
xor
popf
mov
rclw
out
push
bound
mull
sub
loopne
sbb
xchg
jae
jge
xchg
out
stc
xchg
mov
jp
or
fstpl
not
lahf
sbb
sahf
pushf
jecxz
and
out
mov
sub
mov
test
jnp
mov
jbe
stos
xchg
pinsrw
hlt
repnz
cmp
aas
jecxz
shlb
sub
daa
mov
aaa
aas
jns
and
sbb
pop
mov
xor
lea
sub
inc
add
or
inc
fiaddl
and
xor
adc
or
jmp
jmp
clc
jg
jb
sbb
push
add
sar
or
mov
dec
mov
and
cwtl
mov
lret
push
popf
push
push
jmp
pop
and
pop
jp
mov
out
mov
ja
scas
and
sub
mov
add
aas
push
and
inc
cld
mov
dec
jecxz
out
cs
push
mov
int
cwtl
mov
lahf
ss
idiv
jae
cmc
mov
pop
fldt
scas
rclb
das
adc
push
add
ret
adcl
jle
jno
inc
out
fistps
xchg
stos
ds
ds
jmp
mov
push
fsts
xchg
loope
aam
inc
push
daa
idiv
insb
movsb
dec
stc
sub
out
into
xor
inc
xchg
aad
movsl
inc
mov
sub
popf
add
lret
sti
cmc
and
orl
mov
push
add
inc
sbb
mov
xor
sbb
or
jp
xchg
mov
fidivs
es
dec
xor
mov
sbb
rcr
mov
lods
movsl
icebp
push
pop
repz
stos
sub
hlt
out
xchg
std
mov
mov
mov
movsb
jmp
and
pop
push
fnstenv
jp
mov
ljmp
ret
pop
cmpb
imul
jns
das
xchg
push
pop
cmc
in
scas
rclb
inc
shlb
push
pop
cmpsb
pop
call
fdivrs
mov
push
xor
lcall
orb
dec
cs
jno
jns
mov
inc
imul
adc
stos
ds
adc
rcl
jmp
insl
xchg
out
mov
jnp
shr
pop
insl
xchg
ja
lds
pusha
fildl
and
or
xor
add
fwait
xchg
pop
daa
ljmp
addr16
fwait
lods
scas
mov
scas
sbb
cmc
orl
jge
pop
sub
hlt
xchg
cmpsl
orb
or
mov
pop
adc
mov
push
mov
jg
xor
push
dec
add
lahf
push
jno
pusha
or
sti
mov
adc
dec
mov
fwait
popa
es
jbe
cmp
movsl
loopne
in
and
stos
mov
call
fisubl
clc
xchg
mov
jbe
rorl
fsts
xchg
xor
sarb
nop
jp
push
and
movsb
addr16
xchg
push
xor
lret
xor
pop
pop
push
sbb
mov
pop
lock
or
shr
jge
mov
movsl
xchg
ljmp
dec
xor
loop
imul
stc
sub
movsb
lods
sub
pop
cwtl
or
or
mov
ret
pop
imul
pop
adcl
xor
push
mov
xchg
mov
sub
ss
mov
push
dec
jg
add
fsubrl
icebp
test
push
rcr
js
daa
mov
xor
xor
jg
add
jecxz
mov
xor
xchg
jmp
sbb
dec
cmp
outsl
repnz
sarl
xchg
xor
fnstcw
gs
adc
xchg
stos
icebp
jne
hlt
lret
mov
sub
mov
hlt
jbe
cmpsb
outsb
shll
cli
xchg
push
sbb
in
adc
lret
cwtl
movsb
mov
sub
cmpsb
jnp
int
sub
xor
or
push
inc
xchg
popl
movsl
aaa
inc
push
mov
xorb
mov
jne
pop
popa
add
add
jp
push
test
mov
or
xor
add
mov
ja
dec
or
cs
rcll
lods
mov
sub
es
dec
addr16
lret
xor
jbe
out
stos
add
push
or
outsb
outsl
cs
xor
daa
lds
push
ljmp
out
test
xlat
sub
pushf
aad
cmpsb
cmp
shrb
dec
lcall
scas
jge
pop
pusha
jmp
lds
mov
mov
jg
pop
jmp
sub
jg
jnp
in
lds
lods
push
mov
aas
ja
repnz
sti
test
and
adc
repz
repz
movl
out
popf
sub
lods
cli
mov
mov
nop
adc
push
and
subb
pop
pop
int
cwtl
gs
testl
mov
repnz
cmpb
es
pop
add
les
jecxz
add
xor
pop
fmuls
nop
imul
outsb
cld
xchg
mov
dec
sbb
test
dec
cmp
repnz
xchg
adc
mov
sbb
ds
js
rcrb
cwtl
insl
call
inc
mov
aad
or
sbbl
xor
sbb
call
xor
in
inc
incb
jge
or
or
repz
andb
pop
fildll
inc
mov
pop
jnp
mov
in
test
aaa
int
aam
mov
jbe
dec
sub
repnz
idivl
addb
pushf
cmp
mov
test
gs
int3
cmpsb
mov
adc
push
xchg
sbb
jmp
mov
cmp
pop
xor
mov
lret
and
iret
fists
aad
mov
jge
jge
int3
cmp
xchg
pop
aad
and
imul
popa
loope
fs
pop
insb
test
in
xlat
mov
cs
js
inc
push
aas
push
loope
out
mov
les
shlb
inc
andnps
jle
sub
mov
push
rcrl
je
pop
rclb
negl
ja
hlt
aad
cmp
pop
cli
test
sarl
stc
jns
jmp
push
bound
outsb
jo
bound
test
and
sub
arpl
xchg
mov
sbb
cwtl
scas
repz
fwait
lods
sbb
and
loop
lret
add
adcl
shl
leave
or
pop
data16
sbb
jo
aam
insl
enter
cmp
pop
cmp
pop
stc
mov
outsb
in
mov
cmp
stos
out
and
push
das
sub
scas
or
mov
test
mov
inc
xchg
sub
jo
daa
outsl
fcoms
cmp
repz
neg
cli
fisubl
jno
or
adc
lds
cmp
popa
lcall
cltd
sub
jae
dec
sub
das
inc
or
add
inc
push
aaa
aam
gs
mov
loope
mov
mov
scas
push
movsl
test
xchg
orb
in
jge
cmc
mov
push
inc
or
out
jp
lods
inc
push
add
sahf
and
xor
xor
push
test
imul
punpcklbw
ljmp
sbb
add
clc
lahf
and
out
loopne
push
cmpsl
and
push
mov
icebp
leave
jle
stos
inc
enter
xor
loope
cmp
scas
cld
cmp
negb
out
jge
pop
movsb
dec
dec
mov
push
mov
pop
scas
loopne
in
push
add
dec
xor
mov
repnz
sarl
cmp
movsl
cmpb
and
je
xor
lds
outsl
dec
and
aam
pop
xchg
sbb
push
and
iret
and
mov
jae
and
in
test
add
mov
push
sub
pushf
outsb
imul
hlt
xchg
std
je
xchg
adc
aad
in
jg
xor
inc
leave
movl
scas
enter
mov
lods
fldenv
xor
inc
int
push
mov
push
and
jb
mov
mov
sbb
jecxz
fwait
mov
aam
mov
add
dec
popa
shrl
les
test
lahf
mov
mov
sbb
add
inc
cmpsl
and
sub
mov
into
push
movsl
pushl
lods
sbb
test
cmp
incb
js
inc
sarb
push
pop
and
pop
or
dec
push
js
je
cmpsb
cmp
mov
inc
fdivrl
sbbb
push
pop
aaa
rcrb
lret
lret
shll
jmp
cmp
dec
sbb
in
rol
imul
dec
in
jbe
mov
or
fdivl
rcrl
aad
pushf
sub
pusha
mov
mov
xor
inc
push
daa
push
xchg
out
fnstenv
dec
ja,pt
stc
out
sbb
hlt
add
divb
xor
mov
or
lret
xchg
ljmp
je
loope
adc
sbb
mov
xor
mov
pop
sbb
mov
stc
mov
arpl
inc
pop
cwtl
jmp
rorb
sahf
movsl
xchg
insb
xchg
mov
hlt
mov
sub
fnsave
ret
jmp
rorb
and
xor
iret
jo
xor
rcrl
je
add
icebp
test
lret
push
inc
inc
roll
push
iret
or
cs
sub
push
stos
push
inc
fcmovnbe
call
cmp
lcall
and
sub
mov
mov
adc
inc
dec
mov
dec
push
leave
jne
sub
cmp
fsubs
mov
std
aam
fdivl
mov
sbb
jns
lahf
in
xchg
arpl
hlt
outsb
test
btr
push
addr16
sar
sub
inc
fnsave
mov
mov
sarb
pop
adc
in
and
inc
fucomp
cmc
mov
ja
or
es
lea
mov
aaa
push
lea
fs
stos
add
test
pop
int3
lret
out
imul
mov
xor
inc
jecxz
mov
mov
mov
mov
stos
xchg
stos
inc
inc
lds
insb
fiadds
sub
xor
mov
ss
xlat
mov
fisttpl
adc
leave
into
andb
lea
add
cwtl
inc
loopne
cltd
ret
adc
mov
dec
or
lret
jno
into
arpl
lcall
and
sahf
call
and
cli
sbbb
mov
ret
popf
sub
aas
adc
fisttpll
daa
mov
out
mov
push
mov
xchg
or
ret
or
cmpb
jne
sub
insb
push
test
mov
cltd
add
hlt
sub
xor
and
mov
mov
xor
fidivl
movsl
lods
lret
jecxz
sar
lcall
sbb
cmpsl
test
outsb
pop
leave
jp
push
outsb
push
sbb
repz
ljmp
jo
ljmp
jmp
in
xchg
out
adc
js
test
das
mov
bnd
out
sbb
andb
pop
icebp
movsl
fistpl
loope
pop
mov
les
decl
lea
in
inc
test
cmovo
push
sbb
ror
dec
notb
movsl
shl
decb
sbb
cld
sbb
jg
jle
fwait
pop
mov
js
pop
inc
xchg
jmp
sbb
insl
dec
xor
cmp
dec
lcall
inc
clc
adc
jae
hlt
fistpll
add
adc
inc
addb
sbb
sub
or
mov
pushf
dec
cmp
hlt
test
shll
fistps
mov
imul
scas
xlat
mov
jbe
mov
pop
mov
push
out
cmpsl
imul
mov
adcl
mov
inc
lret
inc
push
and
lret
sub
cmp
mulb
push
mov
addl
inc
sbb
sbb
fwait
mov
inc
rolb
push
sub
mov
add
sahf
imul
popf
adc
ljmp
inc
xchg
inc
sbb
sbb
loop
inc
mov
notl
jle
push
ljmp
mov
aad
leave
push
dec
jno
xchg
out
sbb
bound
cmpsb
jmp
pop
test
jne
repnz
out
adc
cmp
cltd
mov
pop
aaa
adc
fidivs
adc
inc
push
lock
fdivrp
fmull
repnz
xchg
mulb
jbe
push
mov
shr
xchg
adc
mov
adc
arpl
dec
jmp
scas
sub
sub
push
mov
data16
mov
aam
adc
ss
icebp
ja
xor
movsl
mov
xchg
into
fsubrl
sbb
pop
lods
mov
out
sbb
seta
sahf
cltd
jo
lcall
xchg
cmp
popa
sub
mov
jns
and
sub
daa
jle
or
fisubs
mov
sahf
sarb
sbb
xchg
sti
pop
lcall
loop
test
decb
pop
jnp
xor
lods
jno
fld
insl
add
popf
pop
call
nop
mov
nop
jnp
mov
cld
lcall
mov
push
repnz
std
cltd
sub
icebp
scas
pop
dec
mov
cmpsl
divl
inc
prefetch
jl
int3
out
xchg
test
inc
fs
mov
xor
cltd
add
sbb
fwait
lods
inc
mov
insb
sub
fnstcw
sahf
push
cmp
mov
les
dec
fsubr
pop
push
sbb
cmp
data16
out
or
push
sub
sub
cld
int3
sbb
or
xchg
cmp
or
popa
ficompl
mov
enter
inc
addps
jnp
or
pop
push
xchg
add
mov
test
mov
sbb
cld
inc
cmp
out
ret
pop
push
pop
sub
dec
movsb
fisttps
shr
adc
push
popa
clc
xorb
scas
daa
pop
jle
or
dec
mov
jno
out
mov
push
stos
das
xchg
xor
dec
das
add
mov
adcl
inc
in
fxch
orl
xchg
jmp
test
stos
rcl
ficomps
fistps
push
jne
jae
sub
xchg
sub
mov
mov
mov
or
sub
dec
and
mov
xchg
in
jns
mov
mov
pop
scas
push
push
scas
call
scas
inc
out
cmpsl
jecxz
test
push
ds
jo
pop
jo
push
jl
mov
popf
sub
cmpsb
iret
mov
bound
xchg
subl
xchg
sbb
lret
xchg
inc
and
notl
push
lret
bound
jnp
pop
cmp
pop
insb
adc
int
into
pop
fcompl
fmulp
and
sbb
xchg
add
inc
jnp
leave
cmp
fcoml
mov
lahf
push
ret
andb
iret
sbb
adc
sub
loop
pusha
arpl
les
or
repz
js
inc
jo
add
lret
cmpsl
cmp
push
dec
add
mov
insb
jl
cmp
mov
repnz
mov
popf
ret
sbb
ret
in
cmpsb
fsubrl
pushf
inc
pop
lods
cmp
push
aas
mov
inc
incb
inc
cli
jo
jno
inc
xchg
insl
test
lret
push
popf
add
jns
outsl
sub
push
cmp
lds
movsl
dec
sbb
hlt
mov
mov
dec
sub
mov
fwait
xor
mov
and
mov
push
in
popa
aam
push
and
int3
jle
subl
inc
nop
xor
sahf
scas
int
pusha
push
aad
adc
ss
mov
dec
jecxz
frstor
loop
jae
lcall
loopne
fldt
aaa
push
mov
sbb
aam
xor
je
sbb
mov
jp
xchg
mov
pop
jo
cwtl
fwait
sti
cwtl
into
push
or
add
or
sub
das
repz
aad
loop
pop
pop
cmp
cmp
cs
fstl
lds
lret
pop
mov
repnz
imul
lock
icebp
sub
lcall
out
loopne
push
or
jp
mov
es
dec
fbstp
div
out
and
lods
inc
mov
jo
scas
inc
shll
mov
xor
pusha
divl
sub
xchg
adc
cmp
mov
jne
push
jmp
push
dec
add
jbe
xchg
sub
push
dec
cmpsl
ds
add
pop
jae
mov
test
xor
push
add
jge
es
sbb
decb
es
aam
mov
jo
push
mov
out
test
or
cmpb
cmpsb
movsl
cmp
cwtl
repz
add
mov
push
out
pop
adc
lret
bound
dec
jecxz
mov
and
push
xchg
in
xchg
jecxz
or
shrb
push
push
lds
adcb
mov
testl
sbb
into
movsb
leave
popa
mov
push
fisubrs
adc
cmp
out
pop
and
add
adc
outsl
adc
dec
xchg
enter
jae
in
outsb
das
data16
lods
push
mov
jae
xchg
xchg
sub
cs
mov
cs
aad
cmp
and
and
enter
adc
sbb
roll
outsb
sub
iret
mov
push
pop
xor
mov
mov
jle
aaa
stos
mov
ret
push
or
aaa
insl
test
cmp
push
ss
add
test
js
mov
jg
jns
lahf
cld
pop
pop
dec
popa
inc
test
and
mov
gs
inc
sub
nop
xchg
jge
mov
mov
mov
or
enter
dec
imul
lock
cmpsl
xchg
xor
sub
mov
shrb
dec
loopne
cmc
loope
mov
aas
cmc
and
push
mov
int3
das
inc
sti
lods
inc
filds
in
into
sti
sbb
popa
adc
fwait
lock
or
icebp
popa
mov
xchg
cmp
outsb
gs
dec
js
or
sub
mov
jecxz
or
push
test
movsb
aas
into
fwait
xchg
and
das
loopne
inc
push
repz
dec
paddd
fsubrs
test
dec
push
xor
push
fs
cmpsb
insl
xorb
into
sbb
mov
popa
inc
fcoml
inc
outsl
lret
mov
imul
imul
ret
ss
xor
scas
sub
les
mov
xlat
cltd
xchg
add
jae
jno
test
adc
std
push
jbe
mov
stc
je
jne
mov
sub
mov
les
jno
jmp
and
adc
pop
je
xor
arpl
imul
cmpl
insb
pop
mov
lahf
sti
dec
or
dec
push
pusha
js
xlat
fwait
push
mov
out
add
inc
cmp
negl
sbb
dec
rcll
dec
mov
not
dec
bound
dec
aaa
jle
stos
jne
data16
aad
out
inc
pushf
aam
test
shl
sbb
imul
jmp
push
add
nop
xchg
stos
in
fwait
nop
repz
cld
mov
or
adc
test
sub
sub
xchg
dec
arpl
cwtl
test
push
cltd
pop
imul
adc
outsl
lods
cs
sti
outsb
call
mov
inc
enter
cmp
aam
or
pop
sbb
insl
add
or
cli
and
scas
aad
lea
xchg
dec
lods
outsl
stos
or
clc
out
shrl
pop
cmc
sbb
jo
mov
cmpsb
pushf
stos
sbb
push
lods
loopne
out
out
pop
xchg
aaa
cmp
xchg
jae
arpl
test
pop
sub
popa
add
rcr
sub
sarb
leave
mov
leave
mov
icebp
push
repnz
cmp
adc
std
mov
pushf
std
or
sti
pushf
xchg
imul
xlat
fistpl
scas
xchg
or
test
rorl
pop
inc
mov
aaa
idivb
shlb
jecxz
push
sub
nop
nop
push
mov
orb
hlt
mov
fnstenv
mov
movsl
call
pop
not
cwtl
scas
test
and
jle
scas
or
loopne
or
sub
outsb
into
xchg
in
push
pop
jb
xor
mov
clc
adc
ds
out
push
out
aas
insl
mov
sub
dec
in
pop
push
jle
xchg
les
sarb
enter
aad
rcrl
mov
es
es
mov
jo
cmpsb
lods
add
iret
mov
les
push
popa
and
into
shrl
mov
cltd
lods
fadds
cmp
mov
fcoml
mov
fcmovbe
cs
pop
insb
in
push
cmc
push
das
mov
inc
cmpsl
outsb
incb
in
push
frstor
xor
ss
push
mov
push
xor
lds
not
in
add
pushf
mov
xor
test
nop
mov
dec
inc
cmpsl
sub
push
stc
push
push
inc
lods
sub
mov
test
iret
push
lcall
dec
stc
daa
xchg
adc
pop
dec
fcomps
fucomp
push
std
mov
mov
cld
push
out
cmp
sbb
inc
mov
jmp
mov
int
int
inc
fstl
call
mov
mov
shl
mov
arpl
xchg
cs
clc
das
mov
aam
xchg
add
xor
pop
mov
dec
inc
test
fwait
dec
add
push
mov
pop
mov
out
xchg
or
xchg
js
fsubl
jmp
js
jge
jno
fidivrl
cmc
push
sarb
in
int3
std
fwait
xorb
lods
adc
mov
cwtl
sub
test
ret
fistps
mov
adc
dec
imul
xchg
mov
es
xchg
sub
scas
inc
insb
insb
sarl
clc
bound
out
adc
into
inc
push
scas
inc
cmp
jno
mov
out
pop
nop
out
aam
in
leave
scas
outsl
ret
cltd
jl
popf
insl
rolb
xor
jae
add
leave
mov
jl
in
inc
sub
xlat
rol
sub
push
and
or
pop
fiaddl
sub
push
pop
cmp
push
xchg
cwtl
inc
inc
aas
sti
push
fbstp
mov
mov
fimull
sbb
mov
out
jns
insl
in
jo
jg
mov
xor
sbb
mov
addl
xchg
ljmp
sbb
out
repz
fisubrs
adc
dec
cmc
dec
push
adc
imul
dec
cmp
out
in
repnz
lret
dec
jmp
sub
clc
mov
fldcw
stos
xor
test
sub
mov
mov
push
xor
cltd
or
out
pop
ljmp
shl
dec
mov
dec
aam
mov
mul
sub
push
xchg
aam
test
gs
test
push
shlb
mov
mov
or
and
xlat
cwtl
int3
dec
lcall
mov
aaa
pop
inc
inc
or
in
ja
lret
lock
sub
pop
pop
mov
rcrl
fbstp
fwait
lea
add
adc
dec
and
jne
and
fs
lea
aad
jb
xor
lods
stos
dec
lock
out
in
call
cs
inc
dec
test
xor
fdivr
push
es
sub
stos
jae
mov
mov
mov
sub
in
sbb
jg
xor
jmp
iret
outsb
xchg
cld
in
pop
fistpl
inc
int
aas
addr16
arpl
shr
push
pop
inc
pop
fstps
inc
xlat
cli
mov
movsb
out
les
push
loop
sub
push
sub
pop
dec
jg
lss
mov
push
rcl
add
mov
push
push
lret
outsb
mov
loopne
mov
inc
sub
mov
pop
xchg
sbb
cmp
sbb
or
push
pop
inc
jge
mov
xlat
ret
rsm
sbb
mov
and
jge
push
cmp
jge
repnz
and
testl
pop
les
insb
mov
inc
out
fmulp
lahf
mov
outsl
sbb
jno
add
push
adc
out
js
std
jnp
movsl
in
cltd
push
sub
lret
xor
scas
mov
cmp
mov
jne
mov
lret
xchg
cmp
mov
or
mul
loopne
cmp
shr
mov
sarl
sbb
mov
enter
out
pop
loop
out
in
mov
jns
jmp
push
mov
inc
pop
or
push
mov
push
sarl
outsb
or
add
sbb
test
adc
in
lods
mov
mov
dec
xor
push
shrl
xchg
dec
inc
lds
jg
aam
jbe
and
push
and
mov
lret
push
sarb
int3
movsb
outsb
test
pop
jl
ja
add
mov
ret
lcall
cwtl
pop
cmc
incb
loopne
pop
cmpsb
inc
pop
xor
push
lret
push
call
inc
nop
subl
filds
scas
sub
sub
shr
pop
fldcw
in
cwtl
inc
cmp
cmp
or
stos
cmp
pop
shrl
loope
lock
dec
daa
mov
imulb
mov
adcl
out
xchg
je
cmp
aad
out
test
dec
inc
std
int
or
mov
into
dec
out
aas
adc
push
data16
mov
mov
mov
and
dec
cmp
mov
or
push
popf
push
push
mov
fdivl
mov
ds
adcb
movsl
xor
shl
test
out
ret
xlat
pop
repz
les
mov
lret
test
sub
or
mov
out
imul
mov
add
fidivrl
mov
sub
jp
mov
and
inc
pop
nop
mov
jle
ds
aaa
rcrl
imul
fistpl
or
sub
fsubrl
mov
mov
or
xchg
or
dec
sbb
das
repz
das
ja
adc
dec
xchg
imul
cmpsb
outsl
jns
int3
jle
push
cmc
dec
test
inc
adc
loopne
popa
dec
fdivrl
jbe
mov
push
int3
cs
add
repnz
gs
repz
fidivrs
lea
mov
push
mov
jbe
orb
repz
lock
enter
repnz
test
mov
pushf
out
pop
movsl
jb
hlt
pop
jbe
cmpsl
call
ror
sbb
adc
dec
loop
and
jmp
mov
jmp
fidivrs
xchg
sbb
mov
mov
jns
mov
sbb
adc
xor
and
rolb
lds
andl
adc
xchg
push
add
mov
jbe
xchg
fcomi
lret
jecxz
jo
in
push
adc
aam
sub
cmp
xor
sub
mov
push
xor
inc
mov
sub
jg
ljmp
mull
sub
jae
xor
jl
cld
loop
sbb
adc
xor
gs
push
les
xor
or
shl
rcrl
scas
mov
repz
or
icebp
mov
dec
nop
das
xor
pslld
int3
ss
hlt
jmp
aaa
fstps
sarb
cmpsl
loopne
mov
sbb
or
xorl
inc
mov
shrl
aam
pushf
jg
pop
pop
xor
fnstenv
xchg
test
push
push
sarl
out
xchg
push
mov
and
test
loop
jns
test
cmp
incl
dec
cltd
jno
inc
push
push
jbe
sbbb
jge
dec
repnz
pop
sahf
mov
jno
sub
mov
popa
jl
ret
imul
mov
inc
std
enter
insl
rcrb
imul
cmpsb
pop
cmpsb
xlat
xchg
xchg
outsl
push
inc
mov
jae
push
test
push
mov
xchg
shr
push
test
add
dec
sbb
addb
rcrl
add
cmc
jo
popf
jae
out
inc
xlat
leave
xor
ljmp
jno
pop
aam
testl
push
sti
xchg
mov
mov
or
sub
sbb
loope
mov
bound
jg
mov
jge
xor
cmpsb
out
jl
mov
nop
jle
inc
xor
jne
subl
mov
mov
add
xor
dec
movb
ret
js
aaa
adc
mov
sarb
mov
mov
jl
push
xchg
xor
mov
movsb
stc
leave
sub
pop
push
inc
fisttpll
decb
imul
ja
xor
adc
or
sub
das
addr16
cmc
bnd
xor
lods
push
popf
or
xor
mov
mov
pop
xchg
test
push
jl
cmp
mov
mov
scas
push
mov
push
cmp
packssdw
mov
lret
nop
daa
ss
jne
adcb
adc
or
lea
stos
icebp
mov
sbb
into
ss
clc
pop
add
sbb
or
icebp
cmpsl
pop
lret
mov
arpl
into
xchg
xor
push
frstor
jns
fnclex
stos
push
pop
xor
mov
cmpsl
jb,pt
sub
xchg
pop
cmp
pop
push
sbb
inc
adc
and
mov
int3
mov
ljmp
push
or
push
and
hlt
imul
clc
rcll
and
add
push
jo
scas
daa
stos
mov
popf
daa
test
xor
jmp
pop
sbb
mov
mov
lock
inc
out
out
lahf
test
test
sbb
sbb
lahf
rorl
imul
or
jo
xchg
sub
jnp
dec
sahf
xchg
jle
cmc
xchg
inc
fsub
out
daa
loope
or
pop
xor
adc
imul
xor
data16
xchg
mov
add
jns
fs
jae
or
mul
add
or
subl
jge
fistps
cli
push
rol
xlat
mov
int
pop
adc
mov
scas
out
out
sub
je
xchg
xlat
aam
mov
lods
rcrl
lea
add
or
insb
fistps
hlt
or
outsb
insl
popa
lret
inc
add
xor
cli
or
test
daa
push
mov
sahf
inc
or
cmp
push
mov
fcos
or
mov
xor
pop
pop
fistps
in
push
xchg
jge
and
mov
ja
xor
and
lret
mov
insb
jmp
mov
inc
mov
movsl
cli
jns
js
xchg
shrl
pop
test
leave
cmp
cs
sub
js
mov
mov
cmp
fimuls
std
lods
subb
mov
shlb
add
pop
int3
push
nop
lods
test
add
adc
jge
and
les
cmp
cli
pusha
fadds
xor
push
ret
lret
out
stc
cmpps
xchg
add
jg
mov
pushf
jo
xchg
dec
in
inc
out
lock
inc
cmpsb
add
mov
xchg
xchg
je
jns
cmp
mov
adc
lret
in
xchg
push
movsb
test
sub
cmp
std
lea
pop
push
pop
xchg
in
or
inc
mov
int3
outsb
orb
ss
addr16
int
push
push
cmpsl
ja
pop
xchg
mov
push
push
xchg
sbb
fdivl
ficomps
jle
shrl
mov
js
sub
test
roll
int
cmp
push
fs
inc
ss
sahf
sub
or
adc
jnp
scas
lods
in
icebp
sbb
dec
out
inc
loope
into
cs
pop
mov
out
sbb
xor
and
pusha
xchg
sbb
inc
and
cs
mov
jno
xchg
clc
into
or
add
lcall
xor
ret
in
dec
jmp
clc
jbe
arpl
cmp
aas
dec
sub
push
fidivs
mul
cmp
or
pop
ret
das
mov
cmp
and
sub
mov
mov
ljmp
lahf
enter
subb
call
aad
mov
ljmp
mov
jmp
jns
fildll
jns
jae
and
fists
adc
or
jnp
jecxz
dec
movsl
cmc
add
mov
push
or
jae
cwtl
popf
popf
ficompl
test
repnz
mov
inc
fxch
gs
cmp
jecxz
cmp
mov
orl
outsl
pop
out
out
jno
stc
mov
imul
popf
push
shll
mov
sbb
mov
jae
data16
cmp
rol
addr16
mov
loope
fistpll
outsb
test
mov
cmp
test
arpl
adc
repz
mov
sarb
jg
gs
sub
shrl
mov
std
outsl
push
das
add
rorl
test
fs
rclb
jo
add
and
in
add
test
xchg
scas
mov
sbb
inc
sub
mov
pop
sahf
jns
cmpsl
push
pop
adc
mov
xor
xchg
dec
mov
push
repnz
push
out
xor
dec
sub
lds
mov
gs
sti
enter
fucom
mov
and
pop
mov
mov
clc
mov
push
jno
mov
aad
mov
or
comiss
pusha
xor
insl
das
addr16
pop
bound
mov
mov
add
adc
mov
and
sbb
sbbl
fstps
push
mov
or
cs
jg
push
pop
adc
fwait
and
mov
int
cli
repz
jae
sbb
push
enter
icebp
mov
leave
int
test
pop
ret
push
fsubl
fld
mov
flds
add
scas
sarl
popa
dec
push
cltd
dec
mov
in
jmp
std
mov
outsb
jbe
mov
push
sahf
xor
or
nop
mov
mov
jge
add
push
push
lods
mov
mov
xor
push
sub
adc
mov
sbb
or
cmp
lock
inc
jge
sub
mov
imul
test
sbb
xor
rol
xlat
lea
jbe
xchg
out
test
pop
sbb
repz
lods
aaa
dec
adc
leave
mov
aas
mov
xor
data16
or
mov
sub
test
inc
or
ja
mov
xorl
push
mov
add
xchg
int3
inc
out
mov
cmp
add
pop
mov
popa
sbb
enter
scas
push
push
insl
dec
call
mov
pop
jp
pop
stos
orl
les
dec
testb
pop
add
sti
rorl
xor
lods
popl
mov
shl
xchg
add
cmp
mov
cli
jno
aam
sbb
jo
push
mov
enter
push
inc
lea
jmp
cmp
and
inc
push
cmp
mov
xchg
das
loopne
outsl
dec
mov
dec
push
jo
mov
test
test
dec
push
ja
hlt
xchg
stos
push
cwtl
ds
out
mov
jle
repnz
xchg
insb
pushl
push
je
inc
dec
lcall
xchg
loop
push
sti
mov
sub
mov
xchg
push
cs
dec
iret
fnstsw
insb
or
pop
popl
test
push
mov
lods
xchg
inc
movsb
dec
jge
mov
sbb
jae
add
pop
popf
sbb
sub
push
xorb
out
mov
dec
aam
adc
scas
push
imul
sbb
cs
daa
jbe
or
add
pop
loope
and
mov
fisubrs
ret
push
daa
and
push
dec
cmpsl
lds
arpl
mov
and
imul
pop
xchg
jae
dec
xor
gs
or
gs
test
mov
mov
lds
cmp
lahf
pavgw
sti
fwait
rolb
insb
outsb
lret
addr16
dec
add
jge
inc
or
push
test
or
adc
inc
inc
cmp
mov
cmp
mov
push
xchg
xor
cmp
pop
aaa
jnp
and
movsl
dec
fiaddl
push
adc
cwtl
mov
ret
sub
popf
lods
jbe
and
mov
push
add
xchg
repnz
rorl
test
out
in
in
rcrb
sub
push
iret
dec
adc
test
shlb
jecxz
jo
sub
sub
arpl
je
xor
add
or
dec
adc
cmpsl
lods
pop
pop
cmp
jo
aam
arpl
push
arpl
xchg
ljmp
int3
lret
adc
scas
roll
add
stos
push
xchg
and
icebp
adc
xchg
inc
mov
cmc
and
call
lds
jp
push
mov
xchg
inc
jae
inc
mov
jmp
adcb
insl
push
xchg
add
or
mov
inc
std
cmp
ljmp
mov
dec
push
inc
fiadds
popw
sbb
mov
and
cmp
add
inc
add
mov
out
test
mov
inc
sbb
ret
int3
cmp
dec
push
rclb
mov
cmpsl
dec
repz
fs
sub
or
push
loope
cmpl
adc
inc
out
push
dec
inc
mov
es
mov
lods
xchg
aad
in
push
sti
int3
xor
or
push
and
xor
cmp
and
insb
jle
stc
push
in
mov
add
sub
pushf
inc
in
fstpt
sbb
out
xchg
scas
mov
testb
call
push
call
add
subl
cmp
jo
ret
aam
inc
and
mov
out
mov
pop
lods
sbb
je
add
jbe
push
cs
mov
mov
and
adc
lea
dec
jg
bound
lahf
movsb
mov
xchg
cmp
loop
out
cmpsl
inc
pop
dec
loop
mov
jecxz
pusha
mov
shr
inc
shll
adcl
rcrb
mov
pop
inc
mov
cmpsb
fwait
add
movsb
push
push
sub
or
push
sub
cmp
loopne
les
cmp
adc
out
or
dec
ret
sbb
lea
scas
mov
outsl
dec
sbb
or
xchg
xchg
dec
sahf
stos
inc
adc
jno
pop
adc
mov
sub
shrb
add
sub
mov
xlat
jmp
cmp
xor
outsl
add
fcomps
or
loope
adc
xlat
mov
inc
outsb
sub
out
sbb
sbb
pop
mov
outsb
and
add
cmpsb
insb
mov
loopne
mov
mov
test
shll
or
cs
js
xchg
ja
add
sbb
shll
hlt
pop
lahf
inc
push
and
out
enter
or
mov
jle
dec
mov
pop
movsb
pop
cltd
push
fwait
lcall
fldt
xor
fcomps
cld
and
rcrb
addr16
jb
shll
les
xorl
mov
cmpl
out
sub
pusha
cmpb
add
roll
or
jnp
adc
adc
or
sub
fidivrl
jl
inc
jnp
hlt
xor
push
je
lret
push
cmpsl
cli
daa
adc
popa
jmp
xchg
add
jbe
lahf
xchg
jle
xchg
adc
hlt
dec
repnz
gs
push
and
xor
daa
arpl
cmpsl
sbb
push
mov
add
into
outsb
test
iret
out
subb
xchg
ds
push
shl
dec
arpl
int3
fdivp
out
jl
adc
dec
jb
mov
es
mov
jns
sbb
pop
adc
orb
or
jae
sbb
dec
inc
or
mov
push
sub
xor
sub
loopne
dec
lds
addr16
lret
sub
mov
mov
add
sub
sti
mov
xor
jmp
and
jmp
pusha
add
pop
lock
or
lcall
dec
outsb
pop
aam
mov
dec
idivb
sbb
mov
sub
fidivrl
test
cmp
adc
mov
shrb
arpl
xchg
dec
mov
in
xchg
cs
jl
loop
adc
fsubrl
aad
push
inc
sub
xor
mov
fldl
test
push
or
xor
dec
adc
xchg
push
xor
jmp
ret
loope
jecxz
fnstsw
popa
inc
fadds
fildll
cmpsl
fcmovb
andb
xchg
sub
push
out
mov
mov
mov
or
leave
scas
ret
clc
or
fidivrl
xor
sahf
shl
pop
test
dec
call
scas
and
fsubrl
cli
cmc
jne
sbb
mov
stos
jge
bound
mov
jmp
jg
push
imul
test
sbb
jp
dec
jo
lahf
xor
mov
dec
loop
test
mov
or
mov
add
adc
out
xchg
fxch
imul
cmp
push
ret
scas
or
stos
xor
fidivl
inc
stc
xchg
loopne
mov
cmpsl
movsb
addb
cmc
test
dec
iret
xor
clc
adc
push
mov
fsubrs
lds
jecxz
jno
jl
add
cmpsl
mov
ficompl
jmp
cmp
pop
mov
cmpsl
dec
rolb
ja
pop
lods
aad
mov
cmp
adc
aad
cs
dec
ss
js
pop
mov
sub
pop
leave
sbb
decl
push
mov
xlat
ja
test
hlt
js
test
fsubl
rep
xor
inc
mov
push
adc
negl
flds
jne
repz
fwait
cmpsl
les
arpl
pusha
dec
dec
pop
ja
ret
inc
inc
vpcmpeqb
push
sets
rcrb
fcomp
clc
scas
lds
scas
inc
stos
mov
int3
fdivp
cmp
out
lods
incb
pop
mov
pop
mov
mov
or
test
pop
mov
orb
andl
xchg
pop
mov
push
xchg
sub
inc
insl
xor
fsubs
test
jb
mov
outsb
and
xlat
xor
loop
aam
subb
add
mov
sub
pop
xchg
pop
mov
or
lock
xchg
inc
mov
out
xchg
int3
and
jl
xchg
push
sub
jno
pop
xor
mov
pop
inc
clc
jecxz
movsl
dec
mov
std
cmpsb
insl
push
xchg
lahf
add
jmp
loope
lods
sarb
pop
movsb
addr16
mov
leave
xchg
loop
dec
ljmp
bound
pop
out
add
pop
incb
mov
xchg
or
aam
fdivrl
sub
clc
mov
loop
cmp
rcl
cli
push
out
mov
xor
shlb
imul
push
pop
leave
mov
addr16
lock
xor
movsb
or
adc
into
xor
mov
aam
out
orb
jnp
movsb
mov
cmp
outsl
xchg
mov
jg
hlt
pop
mov
xchg
nop
sti
lahf
add
dec
adc
xchg
int3
clc
iret
sbb
add
scas
lock
imul
adc
and
outsl
xor
stc
mov
sbb
lods
mov
push
adc
sbb
outsl
add
ja
cld
stos
notb
mov
outsb
outsl
push
mov
orb
inc
in
jnp
in
lds
loopne
or
pop
lds
xorb
push
fwait
push
mov
inc
popa
mov
xor
rcll
mov
pop
xchg
jmp
dec
inc
fisttps
adc
push
movsl
js
clc
lods
xchg
pop
dec
or
loop
aam
movsl
ljmp
es
mov
jecxz
jl
pop
fisubs
inc
jp
stc
pop
test
test
das
ds
pusha
xchg
mov
cld
ds
push
les
int
pop
mov
das
repnz
sbb
and
pop
iret
inc
inc
popa
ljmp
jbe
mov
and
pop
cld
cld
push
cs
repz
jge
imul
add
push
iret
stos
sti
pop
xor
jo
xorb
jg
mov
sbb
sub
in
xchg
push
in
out
jns
cmpsb
add
cmp
cmp
ljmp
dec
push
pop
test
xchg
idivb
mov
das
xor
cmp
mov
or
xor
dec
push
mov
add
xchg
jne
shrb
ret
push
fbstp
fst
dec
loop
add
lods
xor
mov
adc
movb
sbb
push
cmp
push
jmp
loope
in
loop
cwtl
sub
mov
or
movaps
scas
jbe
inc
scas
sbb
cmc
out
repz
ja
test
mov
aaa
mov
lods
inc
xchg
int
push
ss
and
jo
push
jo
pop
mov
pusha
xlat
jb
out
pop
les
mov
push
and
insb
sub
dec
adc
mov
divb
jo
cwtl
pop
jo
mov
jecxz
jp
sub
xlat
fnsave
sbb
xor
or
add
pop
icebp
mov
inc
mov
repz
mov
pop
dec
lea
push
cwtl
cmc
jge
cltd
xor
in
xchg
fsub
xor
mov
cmp
inc
faddl
ds
sub
loopne
sub
inc
fadd
lds
sbb
rcr
sbb
popf
pop
test
mov
and
dec
xor
cmp
aaa
push
iret
mov
dec
sub
into
nop
shrb
add
mov
mov
adc
push
push
dec
cmp
es
gs
or
push
mov
test
leave
pusha
andps
mov
and
shlb
mov
or
inc
pushf
xchg
cwtl
les
aad
insl
loopne
lahf
dec
cli
lret
hlt
sar
sti
mov
sbb
loop
leave
pusha
jp
and
xor
xchg
nop
test
inc
rorl
aam
or
repnz
mov
jecxz
dec
fnstenv
xchg
out
enter
cmpsl
mov
push
movsl
pop
imul
call
stos
fcom
push
arpl
into
andb
out
pop
negb
mov
fwait
scas
mov
jecxz
push
movb
sahf
xchg
adc
lods
or
movsl
mov
out
sub
stc
fwait
add
sbb
and
cld
into
aas
push
sbbb
in
push
bound
xchg
ja
xchg
test
mov
add
fsubrp
out
and
call
cmp
imul
cmp
push
dec
icebp
xchg
insl
outsl
sahf
or
push
push
loopne
nop
lcall
push
sub
xchg
repnz
adc
idiv
adc
xor
pop
mov
sub
bound
popf
js
sti
xsaveopt
mov
cmp
push
lds
enter
xor
cmc
in
add
dec
adc
notl
mov
hlt
and
push
popf
jo
hlt
sub
test
shl
cwtl
leave
sahf
inc
push
cmp
lds
ret
fisttps
mov
and
shll
xchg
das
mov
inc
add
mov
aaa
mov
leave
add
inc
shrb
mov
push
sbb
inc
and
or
xchg
cli
test
nop
adc
out
in
lock
or
fmull
out
loopne
repz
cltd
cmpsl
add
push
push
push
js
sbb
data16
mov
inc
loop
mov
divl
push
scas
xor
repz
push
sub
inc
out
mov
mov
fiadds
nop
pop
mov
scas
xchg
addl
pop
push
je
cmpsl
adc
inc
enter
pop
lods
inc
bswap
dec
aam
xor
push
test
daa
xacquire
xchg
jnp
test
pop
js
mov
stos
out
rclb
xchg
inc
int3
orl
fisubl
out
mov
sti
sarl
inc
jmp
cmpsl
ss
in
xor
das
int3
jg
cmc
dec
sahf
cltd
dec
push
xchg
in
adc
sbb
sub
addb
or
fxch
push
fs
out
fldt
scas
lret
push
mov
in
mov
cltd
inc
push
xchg
or
test
std
xor
gs
push
fimull
mov
js
sub
loope
xchg
xchg
mov
push
jo
setae
les
sbb
mov
lds
rorl
and
push
cmp
stos
pop
fdivrl
jae
in
or
adc
push
cs
stos
push
imul
ja
cs
inc
cltd
vpcmpgtd
ja
push
jmp
adc
inc
shlb
mov
cmpsl
out
cmp
sarb
xchg
int3
mov
cmp
lea
cli
mov
jge
mov
pop
jl
cmp
das
xor
shrl
mov
mov
in
cs
enter
jl
out
gs
xchg
popf
pop
mov
sarl
xchg
loop
imul
ja
cwtl
int3
mov
in
std
cmp
dec
jecxz
je
dec
sub
cld
fcmovbe
adc
jle
cs
xchg
int
dec
pushl
mov
dec
jae
arpl
cmc
and
aaa
iret
lahf
add
dec
inc
loopne
inc
popf
push
mov
mov
dec
cld
mov
push
lcall
push
push
das
jne
xchg
push
mov
pop
mov
jbe
xor
repz
out
test
in
roll
into
es
out
sbb
popa
je
mov
bound
xchg
iret
mov
ljmp
xchg
daa
icebp
sub
dec
pop
push
cwtl
and
outsl
decb
push
lahf
mov
add
cmpsl
push
lret
lahf
imul
adc
movsl
sub
xchg
lcall
mov
or
scas
mov
or
and
push
test
lea
sti
inc
push
test
mov
jmp
pop
repnz
xorl
call
xchg
mov
pop
mov
in
mov
fdivrp
add
subb
xchg
mov
int3
inc
mov
push
fimull
xchg
stos
push
mov
ret
sahf
or
mov
or
lea
mov
mov
imul
fcmove
or
fidivrs
xchg
int
ret
xor
push
loop
push
fwait
ja
pop
and
push
push
mov
adc
lahf
push
or
scas
les
xchg
jecxz
ret
and
inc
xor
dec
stos
std
cltd
xchg
push
in
ja
cltd
out
inc
cwtl
jae
lret
je
mov
in
mov
mov
fnstenvs
xchg
push
imul
ds
repz
push
fisubs
movsb
fbstp
stos
es
loop
lods
leave
pop
or
scas
mov
sub
mov
pop
adc
jb
nop
out
dec
fidivs
ret
jecxz
and
ds
imul
push
or
scas
iret
movsb
repnz
jno
jmp
punpckhdq
add
adc
loop
mov
push
js
insl
mov
stos
enter
mov
xchg
adcb
out
pop
imul
or
jle
mov
lcall
sub
cmpsb
cmp
cmpl
push
sub
pop
mov
push
mov
inc
pop
scas
jno
hlt
or
loopne
mov
test
dec
imul
insb
mov
lea
or
jge
adc
mov
dec
outsb
add
push
test
inc
push
out
out
mov
mov
test
in
lods
xor
out
jo
mov
add
pop
call
or
iret
push
in
mov
icebp
dec
pusha
lods
jp
in
stos
int
lret
pop
fs
adc
cs
fs
inc
fldl
fldt
inc
sbb
xor
out
fprem
sub
cmpsl
adcl
stc
or
or
ja
mov
in
sub
pop
or
jge
out
xlat
outsl
xchg
sbb
bound
push
popf
out
in
cwtl
push
adc
xor
mov
xor
rorl
pusha
mov
pushf
xor
arpl
mov
jecxz
and
shrb
sbb
xor
loop
or
int
in
and
cltd
mov
ror
xchg
stos
push
movsl
fsubrl
lock
sub
inc
mov
popf
icebp
scas
pop
loope
mov
out
cmp
shlb
pushf
xlat
mov
inc
cmp
fstps
fwait
cmpsl
ss
mov
loop
outsl
cmpl
mov
push
imul
test
xor
loope
bound
das
ja
pop
xor
or
sbb
sbb
or
jle
jle
pop
repz
out
pop
dec
add
je
std
cltd
ret
mov
fisttpl
cltd
sar
push
jge
inc
jnp
movl
push
adc
jno
push
sub
outsl
pop
jno
div
push
dec
xchg
mov
inc
jecxz
push
jae
sahf
jp
mov
test
adc
mov
mov
scas
or
popl
mov
push
mov
lret
jl
mov
scas
arpl
nop
push
xchg
push
out
ret
jbe
insb
adc
out
fcoms
repz
iret
addb
xchg
popl
cli
adc
aam
and
addr16
cmp
xor
xor
and
in
or
sbb
subb
sbb
rcrl
outsb
into
out
add
hlt
lahf
jbe
mov
mov
stos
adc
je
push
and
mov
push
fsubrp
aas
outsb
js
mov
dec
xchg
call
repz
lea
lods
ror
in
xor
lock
icebp
and
add
aas
call
or
ret
or
jecxz
cmc
adc
xor
and
jp
pop
mov
fwait
sub
lret
lock
sarb
mov
dec
data16
int3
jo
push
mov
xchg
jp
cmpsb
sub
cwtl
clc
cmpsl
leave
jnp
lds
sbb
rclb
imul
rol
mov
lcall
aam
loopne
dec
jecxz
testl
out
vcvtdq2ps
lret
outsl
mov
mov
les
push
adc
test
and
push
dec
pop
addl
jg
cmp
push
cmc
mov
movsb
pusha
stc
push
ret
mov
dec
or
rcr
fsubp
js
loope,pn
imul
movsb
mov
sbb
cld
iret
std
pop
icebp
adc
mov
xchg
sub
xor
stos
fxch
push
pop
lock
mov
jl
push
xchg
sahf
shrb
adc
call
cltd
cmp
divb
js
fdivl
out
addr16
inc
aam
cmp
adc
fwait
add
int
stc
push
and
notl
cmp
sbb
inc
orb
shlb
cmp
mov
fdivr
pop
push
repnz
loope
adc
xchg
xor
mov
add
cmpb
vshufps
pop
fbld
mov
fyl2x
jecxz
xor
or
in
mov
or
xor
dec
dec
cmp
inc
popf
cmp
fwait
js
sub
adc
xchg
cli
fstpl
hlt
xor
mov
push
jnp
nop
inc
pushf
xor
int
xchg
mov
push
inc
out
xchg
sbb
jno
lahf
ss
sti
xchg
dec
inc
mov
mov
push
loop
dec
jg
mov
ret
out
outsl
jnp
or
cmpsl
mov
cld
mov
sub
mov
and
aas
fs
pop
xchg
pop
call
jg
add
pop
push
or
mov
xlat
rcrl
mov
ss
jae
andl
push
pushf
rep
repnz
xlat
rcrl
cmpsl
mov
dec
incl
inc
call
or
dec
push
addr16
aas
jl
mov
add
xor
test
fwait
int
mov
push
stos
jl
sub
add
add
cld
insl
aad
jnp
movd
push
stc
sti
ja
jb
sub
mov
pop
iret
cmp
fmuls
test
icebp
pop
outsb
cmpsb
xchg
pushf
xor
mov
rcrl
lret
jle
push
pop
inc
inc
xlat
lret
and
pusha
lret
mov
mov
fstpl
or
enter
add
cltd
push
pop
cmp
inc
mov
fimull
scas
mov
scas
and
rcl
push
popf
lods
aas
sbb
pop
cmp
mov
jns
daa
jo
inc
fdivs
scas
sbb
xchg
fsubrs
aam
jge
push
ss
call
dec
xor
ljmp
popf
jge
inc
or
or
cmpl
insl
test
sbb
mov
and
sub
rcrl
pop
pushf
std
pop
xchg
push
insb
aas
sub
and
orl
push
ja
lods
mov
fld
mov
cmp
jg
inc
ret
les
rorb
xlat
mov
mov
js
mov
dec
subb
lods
mov
pop
push
stc
aaa
ret
push
add
mov
jmp
loope
push
pushf
sahf
mov
fidivrs
loopne
push
sbb
ja
mov
je
sahf
dec
gs
sub
and
fcomi
mov
mov
adc
mov
test
ret
cmc
add
cli
push
testl
mull
mov
xor
data16
dec
out
adc
mov
xchg
scas
cs
mov
cld
xor
fs
jnp
mov
push
int3
and
mov
cltd
outsl
aad
jge
stos
cmp
cmp
cmc
dec
loop
scas
aaa
imul
sub
iret
add
scas
xchg
sbb
dec
dec
pop
cwtl
in
js
insb
int3
sub
sbb
push
cltd
adc
orb
adc
lret
sbb
or
leave
mov
repnz
mov
scas
add
shlb
sti
iret
sub
cwtl
data16
incb
xchg
testl
mov
leave
mov
mov
lods
cmp
mov
mov
stos
nop
rcl
stc
nop
fs
lds
mov
sub
cmp
lahf
daa
jge
pop
mov
mov
bnd
int3
dec
cmp
addb
push
add
jg
fst
rorl
jnp
rorb
aaa
mov
pop
jg
imul
mov
scas
hlt
ljmp
fisubrl
lret
rol
sub
mov
xorl
addr16
addr16
ss
sahf
sub
dec
jmp
sbb
sarl
pop
out
lock
in
movsb
and
in
into
pop
aad
mov
arpl
dec
out
lds
loopne
out
or
call
push
bound
xor
jg
xchg
mov
xlat
cmpsl
mov
scas
and
jno
stos
sub
mov
int
sar
aad
dec
mov
pop
push
push
test
jmp
sub
xchg
or
push
fs
adc
push
push
sub
jbe
and
push
mov
mov
aad
cmpsb
les
sbbb
ss
loopne
ljmp
sbb
adc
hlt
movsl
movsb
add
and
mov
inc
clc
sub
push
or
and
aaa
ljmp
std
cltd
adc
adc
push
fsubr
imul
mov
xor
xor
lock
adc
ja
and
fbstp
sub
mov
aas
outsb
cmp
inc
push
or
mulb
cmpsl
push
jecxz
xchg
sbb
pop
test
or
cmc
and
dec
in
sbb
int3
or
push
ljmp
inc
pop
loopne
mov
out
mov
sti
imul
jg
jno
cltd
pop
pop
sbb
mov
mov
mov
subl
xchg
sarb
pusha
mov
sarl
test
hlt
iret
inc
repnz
push
call
xor
xchg
rcr
shl
mov
or
sbb
fnstenv
jge
cmp
push
cmp
inc
bound
cltd
cmp
mov
sub
es
and
jmp
add
mov
sahf
pop
jns
or
pop
cmp
push
mov
dec
inc
ss
bound
mov
scas
outsl
scas
clc
adc
sub
mov
jb
sub
loope
cli
push
out
mov
popa
xor
lret
out
mov
mov
ret
outsb
add
cmp
mov
mov
cmp
shll
fwait
sti
fcmovb
stos
xchg
std
jb
xchg
stos
test
movsl
sub
cltd
sbb
pop
inc
nop
je
add
push
outsb
sub
cmpsl
addb
mov
push
in
scas
and
mov
mov
or
sbb
push
dec
xor
fs
sub
lcall
inc
out
pop
inc
fcoml
inc
pop
test
out
sub
testl
cmp
and
xchg
xchg
shrl
mov
sbb
pop
or
mov
call
lret
popa
add
iret
inc
xor
ja
xchg
adc
adc
nop
icebp
insl
or
cmp
js
mov
test
jae
sub
or
dec
gs
xchg
outsl
push
cltd
jl
test
fildll
clc
and
mov
mov
sbb
fcompl
xchg
inc
out
jecxz
lea
push
push
sahf
sub
jl
mov
add
push
imulb
xchg
movsl
in
jg
test
test
leave
pop
mov
jae
sub
mov
and
add
hlt
adc
jmp
fildll
into
js
loope
mov
push
icebp
dec
fstpl
jne
mov
jl
out
add
repnz
popa
mov
mov
out
xor
adc
push
ss
enter
pop
sub
jae
cmp
xchg
or
mov
add
adc
shr
dec
or
sahf
sbb
scas
test
adc
fisttpl
in
fstpt
xor
shlw
xor
xchg
shll
pop
cmp
add
mov
jno
lods
jno
mov
adc
add
pop
adc
xchg
ja
incl
test
ror
push
test
testl
andl
nop
push
mov
call
jo
and
push
cmp
mov
adc
inc
cltd
ljmp
inc
mov
jl
repnz
jecxz
movsl
pop
cmc
out
cs
xchg
sbb
sbb
dec
add
mov
stos
out
adc
push
xor
pop
movsl
and
jno
xor
or
cs
int3
shll
insb
je
pop
dec
mov
loop
ficoms
in
add
add
or
outsb
add
aam
mov
adc
mov
ja
sbbl
cmp
mov
stos
shlb
mov
and
jecxz
add
xchg
aas
mov
add
daa
xorb
or
testl
scas
outsb
loope
jo
mov
fcmovne
push
outsl
mov
cmp
mov
cld
and
lds
leave
or
sub
shlb
inc
aas
push
xor
pop
test
imull
xchg
xchg
push
fiaddl
and
call
test
inc
fistps
pop
imul
lods
outsl
lock
lods
pushf
adc
pop
pop
das
dec
xchg
cli
mov
imul
push
push
lcall
fldz
dec
orb
dec
and
shrl
push
shl
cmp
xchg
out
imul
lods
pushf
mov
nop
mov
lret
sub
and
aaa
push
gs
pop
movb
stc
popa
jnp
shl
adc
cmpl
daa
dec
push
scas
out
int
jnp
mov
mov
data16
flds
cmc
xor
jmp
aas
mov
xchg
adc
xlat
arpl
jae
sti
test
sub
es
add
ja
stos
pop
sub
scas
cltd
xor
or
fcomps
push
xor
inc
xchg
cs
bswap
xor
lret
sub
int3
sti
in
jbe
mov
sub
repnz
push
inc
xor
push
leave
pop
cwtl
daa
cmp
xor
lahf
xor
sbb
cmp
imul
pop
dec
imul
rclb
cmpsb
les
dec
mov
stos
jmp
in
adc
mov
int
cwtl
icebp
mov
mov
incb
call
loope
jns
or
xchg
movsl
dec
fistpll
xchg
aaa
cmpsb
mov
inc
pop
sbb
jp
js
and
fistps
stos
ds
fsincos
nop
fstpt
in
rclb
fisttpl
dec
push
xor
dec
cmp
sub
push
out
sbb
das
mov
imul
mov
pushf
outsl
aad
in
lret
mov
jmp
scas
cwtl
stos
and
adc
lcall
xor
jnp
lds
push
test
popa
outsb
sub
adc
push
mov
jge
pop
in
fcompl
cli
dec
ret
shr
lock
aad
sbb
sub
fsubrs
adc
inc
bound
sbb
lret
enter
mov
and
bound
movsb
mov
push
sub
sbb
and
jge
xchg
out
lret
insl
jge
pop
mov
movsl
fnstsw
jns
and
pop
imul
mov
notl
jle
lds
mov
std
aaa
add
push
sub
jle
lea
mov
loop
shrb
lds
leave
and
test
stos
out
jnp
scas
lods
orb
into
sub
mov
popf
dec
adc
xlat
mov
loopne
sbb
cmp
cmp
rcl
sbb
dec
xor
mov
sbb
jmp
mov
cld
xrelease
xchg
push
in
cmpsl
movsl
lea
enter
sbbb
jne,pt
dec
cmpsl
pop
xchg
pop
into
sbb
in
enter
fdivrs
fs
sbb
aam
sbb
add
and
test
mov
push
lahf
daa
js
movsl
ja
jno
mov
add
xchg
out
lea
push
out
xor
outsb
sub
jne
mov
mov
fsubr
lret
pop
test
mov
push
pop
int3
and
out
push
jmp
sub
scas
add
xchg
fs
push
mov
sbb
icebp
cmp
push
ror
test
in
insb
pop
or
fucomip
idiv
mov
loopne
xor
cmp
mov
mov
add
push
mov
sub
insw
dec
cwtl
pusha
jns
and
add
jb
or
lods
stc
cmp
cmpsb
jo
pop
lret
outsb
add
dec
push
jne
les
movsb
je
das
repnz
into
mov
fadds
or
lods
inc
repnz
sbb
dec
sahf
mov
dec
xor
in
cmp
sub
cmp
pushf
mov
jne
and
push
movsl
add
or
pop
sub
stos
jne
sub
pop
xchg
jmp
or
imul
hlt
cmp
je
mov
pop
cmpsb
pop
and
int3
inc
lds
into
fcoml
cltd
cwtl
decl
xor
mov
dec
and
xchg
xor
xchg
ja
enter
int
jae
in
mov
cmp
enter
jle
xor
push
xchg
pop
mov
cmp
stos
push
popf
xor
shlb
sub
cmp
cmpsb
ds
fistl
xor
incb
mov
sti
vmovsd
test
test
rcl
fcompl
insl
mov
setno
rep
mov
cmp
mov
sbbb
popa
adc
pop
jbe
cmp
pop
adc
mov
adc
jmp
clc
cld
out
das
add
sub
bound
jle
scas
and
fstl
jo
outsb
xchg
adc
dec
ja
xor
mov
or
push
pop
cwtl
push
push
mov
mov
jbe
sub
rcrb
popf
arpl
push
adc
xchg
lcall
daa
xchg
lcall
sbb
dec
add
dec
inc
add
cld
shl
jb
pop
jl
stc
stos
dec
fnstsw
inc
mov
and
pop
adc
lods
frstor
sub
fwait
mov
divb
and
mov
test
hlt
idiv
or
adc
addr16
mov
loope
sti
hlt
adc
fwait
add
cmpsb
sub
adc
add
repz
push
sar
pop
das
sub
repnz
pusha
adc
mov
pop
loopne
mov
les
xchg
sti
ret
mov
mov
aam
sub
xor
out
loop
inc
mov
push
jmp
add
test
scas
in
movsb
lret
loop
sub
cmp
sub
sub
push
sub
sbb
adc
pop
jne
cmp
out
xchg
int
imul
es
dec
add
pop
adc
and
fsubs
push
push
adc
cli
push
jne
aad
cmc
addr16
push
popf
rorb
les
sub
fwait
push
fnstenv
and
in
fsts
ljmp
mov
dec
lods
add
fistpl
sub
test
mov
pop
xor
cmc
in
jne
cmpb
add
push
or
xor
xchg
inc
mov
xchg
stos
lahf
mov
mov
insb
scas
adc
push
gs
cwtd
dec
mov
push
adc
test
inc
je
mov
adc
out
je
cld
imul
add
push
fiaddl
pop
test
out
shl
inc
cmp
loope
loop
lock
mov
aas
adc
pop
mov
cltd
std
nop
mov
insb
loope
std
cltd
push
out
or
in
test
and
lahf
lret
sub
icebp
push
mov
inc
pop
sub
popf
mov
lcall
iret
lods
ljmp
es
push
xlat
decl
pop
adc
add
inc
call
add
jl
lods
and
call
inc
jo
ljmp
mov
inc
fbstp
rorb
adcl
les
insb
lahf
jmp
sub
mov
or
cld
rcl
jne
jno
out
in
xchg
push
mov
or
sbb
add
or
cs
mov
mov
mov
aas
imul
mov
push
jo
or
lcall
in
stos
fdivl
lret
mov
inc
cltd
mov
roll
pop
push
push
xor
or
sub
or
dec
xor
xor
xchg
pop
jne
ljmp
or
sbb
xor
pop
push
lods
inc
cmpsl
ds
or
sahf
mov
aaa
dec
sub
xchg
in
pop
pop
push
lods
arpl
pop
or
test
icebp
data16
lret
mov
out
daa
lret
push
sbb
jge
js
add
lds
mov
repz
jp
push
sarb
pop
inc
bound
es
fisubrs
mov
movsb
xchg
sub
ret
xor
stos
mov
sahf
mov
outsb
sti
dec
mov
iret
jmp
insb
sarb
xchg
cmp
or
add
popa
clc
ss
movsb
repnz
push
mov
int
popf
stc
or
cli
int3
mov
das
stos
xlat
and
add
iret
xchg
cmp
stos
stos
les
push
fwait
repnz
sub
test
adcl
xor
and
dec
pop
push
lods
imul
bndstx
into
movsb
fdivl
aam
pop
xchg
es
cwtl
mov
mov
sbb
push
pushf
xor
stos
xchg
inc
mov
push
sbb
xor
fldenv
dec
and
sub
mov
mov
xchg
out
push
clc
repz
leave
cmc
xor
les
shrb
pop
bound
js
mov
loope
mov
inc
mov
adc
jge
fbld
andb
ljmp
mov
sub
push
fidivl
rcr
jb
pop
xor
out
lret
xor
ljmp
cmp
cmp
cmp
sbb
jbe
fcomps
data16
rcr
mov
pop
stos
mov
cld
es
push
pop
lock
sbb
inc
dec
sub
push
pop
enter
leave
fnstcw
and
insb
adc
das
fildll
jno
jg
or
inc
cwtl
in
sti
or
inc
inc
cld
adc
fcmovne
xor
movsl
push
jae
jne
xor
imul
push
testb
nop
testb
insb
sub
sbbb
dec
pop
sbb
cmp
clc
dec
sub
std
divb
sub
mov
sahf
pop
pop
test
fnstcw
js
or
xchg
pusha
call
mov
test
xor
stos
fwait
push
and
inc
test
je
leave
popa
arpl
outsl
mov
ror
push
out
repnz
xlat
push
push
dec
jbe
cmp
lcall
cwtl
add
xorb
loope
in
sbb
imul
lret
shlb
ljmp
into
ja
in
insb
addr16
cmpsb
inc
mov
imul
popa
xchg
mov
sub
stc
dec
jg
cmp
mov
push
divl
mov
sub
pop
mov
pushf
push
jbe
hlt
pop
fsubp
sti
mov
xchg
push
add
add
popa
lods
pusha
stos
mov
sbb
arpl
call
mov
orb
cmpsb
cmp
adc
mov
xchg
xchg
push
lock
movsb
icebp
movsl
push
jbe
sarl
fsubrl
rolb
pop
xchg
sti
fwait
into
stos
mov
push
daa
cwtl
arpl
xlat
mov
in
into
and
mov
popa
leave
and
loope
sub
sarb
xor
jne
add
fwait
das
or
sub
dec
jnp
nop
and
mov
and
cli
es
xchg
push
call
jne
or
add
pop
inc
dec
mov
popa
mov
jb
lret
xlat
repz
in
sbb
adc
test
out
lret
lret
test
adc
out
into
ds
inc
jbe
leave
sub
sub
lea
mov
push
leave
fwait
xor
dec
data16
xor
mov
mov
cli
xor
pop
dec
scas
fmuls
stos
ljmp
movsb
xchg
lret
mov
add
mov
and
mov
adc
mov
mov
in
mov
call
mov
ret
push
pop
and
jo
inc
inc
mov
leave
cwtl
sti
lret
xor
int
xchg
arpl
in
loopne
cmp
loope
into
adc
sub
jae
ljmp
jmp
andl
push
adcl
bound
inc
daa
adc
sahf
sahf
std
or
jo
insl
cltd
and
jl
dec
pusha
arpl
mov
fs
xor
fidivrl
xchg
in
lods
repnz
popf
push
mov
lahf
lock
mov
pusha
into
jne
mov
and
inc
or
aad
or
adc
dec
pop
lcall
cmp
xor
movsl
in
mov
or
jno
push
aad
out
add
shrl
or
adc
xchg
fnstenv
fimull
pop
lret
in
adc
mov
lods
xchg
cli
repnz
jecxz
insb
or
sub
sbb
dec
stos
lcall
adc
enter
and
push
out
out
sub
push
mov
xchg
jecxz
and
fs
inc
sbb
filds
mov
fdivrl
popf
pop
push
inc
mov
inc
lcall
psrad
sahf
jecxz
sbb
mov
and
pop
fistpll
jns
jecxz
cld
sbb
pop
sub
jne
cmpsl
fidivl
dec
xchg
rorb
pusha
movsl
gs
pop
dec
mov
and
outsb
pop
hlt
stos
jge
ret
ret
pop
hlt
pop
scas
mov
sbb
adc
outsl
rol
or
sti
fidivs
jbe
mov
fsubrl
and
fadds
jmp
mov
lock
mov
insl
lds
bound
ds
jnp
sub
jg
mov
adc
repnz
repnz
sbb
fincstp
flds
stos
pop
mov
test
js
filds
mov
lock
les
stos
or
imul
push
dec
ja
jge
inc
lods
and
mov
sub
shr
push
lea
pop
add
mov
push
cmpsl
mov
sbb
clc
inc
push
repz
lds
insb
pop
cltd
push
aaa
jne
cmp
pop
ficoms
movsb
and
xorb
pop
stc
icebp
adc
call
loopne
in
pop
xorb
dec
fs
cmp
sub
jae
fistl
add
add
ja
cmc
std
pusha
add
mov
adc
stos
ljmp
ja
cmc
mov
mov
add
icebp
out
push
lahf
mov
xchg
sub
mov
inc
js
cld
pushf
jbe
mov
out
jns
std
cli
movzbl
stos
xchg
inc
dec
add
mov
push
add
add
or
lret
out
icebp
jp
fisubrl
icebp
rolb
test
sarl
mov
scas
xchg
leave
pop
adc
sub
je
enter
or
lret
pop
or
insl
stc
repz
push
insb
xor
pop
jmp
js
icebp
daa
data16
cmp
xchg
jo
popl
and
movsl
sbb
adc
sub
cmp
jb
xchg
sarb
jmp
lea
adc
mov
mov
inc
imul
jno
push
loopne
test
add
xchg
fstl
jbe
mov
push
add
or
adc
mov
jns
mov
out
out
cld
sbb
jns
xchg
jno
popf
sub
or
dec
push
sbb
or
outsb
jle
pop
stos
mov
popf
sub
fisubrl
cmp
push
xor
push
mov
insl
mov
test
jecxz
icebp
test
cmpsb
movsb
jecxz
inc
call
out
test
pop
jge
adc
mov
cltd
xchg
mov
lret
cltd
xor
mov
and
lds
mov
sbbl
jne
cmp
adc
rcl
adcl
popf
mov
iret
mov
into
lret
lds
mov
lcall
in
inc
push
dec
xor
add
lret
xor
add
mov
imul
mov
pop
xor
subl
lods
mov
stos
test
fistl
jne
add
popa
and
test
cs
xchg
mov
repnz
enter
and
imul
add
mov
sub
cli
add
xor
and
shll
lods
dec
inc
mov
lahf
and
sub
repnz
jecxz
jb
mov
push
sub
jnp
inc
lods
push
or
mov
subb
mov
jp
mov
jne
add
stos
xchg
dec
mov
sar
aaa
fistpl
pop
call
adc
jo
mov
sahf
stos
xchg
mov
dec
or
lods
jmp
cli
cmc
popf
ljmp
popf
stc
pop
or
dec
add
sub
mov
in
fimuls
xchg
insl
in
dec
jecxz
pop
enter
cmp
addr16
test
cmp
push
into
adc
rorb
fs
imul
and
pop
es
adc
mov
and
lods
and
cmc
xchg
jmp
xchg
jge
roll
sub
cmp
fdivrp
mov
mov
loope,pt
dec
das
repnz
dec
pop
or
pop
cmp
sbb
lods
dec
mov
aas
enter
push
test
insl
cmp
mov
push
dec
jae
in
loop
int
aas
imul
mov
ds
test
sub
cmpsl
inc
jle
pop
mov
or
add
xchg
jmp
out
test
sub
das
mov
movsb
mov
inc
fdivl
jl
cmp
ficoms
push
ds
mov
inc
lock
lods
arpl
icebp
lret
std
jae
and
dec
sub
ret
jne
adc
andb
cmp
pop
mov
dec
das
jecxz
adc
hlt
mov
pop
xchg
add
push
movsb
adc
pusha
test
pop
jb
sub
push
sub
leave
pusha
push
dec
test
pushf
aaa
je
movsb
xor
bound
dec
clc
insb
cmp
dec
dec
pop
jnp
jo
inc
dec
sub
test
and
jbe
test
aas
add
inc
inc
pop
mov
idiv
xchg
adc
and
popa
scas
cmp
loopne
xor
ds
outsl
mov
or
and
popa
aas
push
mov
out
push
sti
nop
dec
icebp
test
adc
pushf
ficoms
das
mov
popa
lods
shlb
mov
pop
shrl
xchg
out
in
mov
cli
insl
add
cltd
cmp
outsl
pushf
pushf
fwait
push
add
data16
jg
xchg
fnstenv
lret
out
cli
clc
call
cmp
test
jnp
and
cwtl
das
pop
inc
cltd
test
repnz
mov
mov
mov
or
shrl
mov
mov
in
in
call
aad
and
mov
rcrb
pusha
xchg
xchg
sbb
jle
or
xor
add
add
xor
push
int3
in
add
jo
insl
in
jg
push
fnstcw
out
sub
pusha
sbb
xchg
lret
je
icebp
mov
cmpsb
inc
dec
push
push
lahf
pop
push
notl
mov
rcrb
shrl
xchg
lret
xlat
leave
fnsave
data16
daa
jbe
mov
lret
inc
sbb
push
mov
lods
and
fmull
mov
fs
roll
lret
sbb
faddl
in
lods
and
ficoml
out
jnp
sub
bnd
xor
add
lea
dec
jmp
dec
lods
popf
sbb
pop
push
rcrl
mov
aad
or
imul
js
jg
xlat
scas
adc
fdivrs
testb
cmp
pop
mov
outsb
sahf
push
xchg
aam
lcall
imul
fbld
push
fucomp
arpl
int
je
fwait
push
or
stos
mov
je
xchg
jmp
lods
xchg
jge
dec
sbb
mov
xchg
in
push
repz
xchg
mov
mov
lods
xchg
push
jle
adc
jne
lods
or
mov
jo
insb
mov
adc
movsl
push
mov
lcall
and
jge
imul
inc
dec
adc
aam
pop
inc
fsts
cmp
ss
sub
xor
sbb
ret
or
shrl
adc
in
xor
movsl
in
push
mov
insl
inc
mul
stos
mov
jae
inc
lcall
bound
into
mov
inc
stos
cmp
leave
je
std
inc
inc
test
sti
icebp
cli
incb
jmp
pushf
cli
and
scas
jno
push
push
mov
scas
add
and
rol
jmp
aad
les
test
das
or
call
pop
cmp
cmp
dec
xchg
inc
inc
pusha
leave
dec
rcrl
push
jne
push
mov
xchg
adc
inc
inc
dec
in
notl
dec
leave
dec
push
dec
aam
sub
test
push
fwait
xchg
cmp
addb
push
sub
sub
mov
test
out
call
aam
stos
out
cs
mov
fucomi
dec
es
repz
int3
insl
ja
shll
pop
mov
mov
mov
jecxz
mov
fldl
pushf
sbb
mov
jg
xchg
sub
cmp
and
aam
sub
adc
imul
das
shr
cwtl
js
push
cs
xor
push
mov
adcl
lock
push
insb
pop
jo
mov
cmp
aad
cmp
in
xchg
sahf
outsb
mov
loopne
jbe
jbe
in
fdivrs
fdivrl
scas
mov
into
xchg
jb
aaa
sub
ja
xlat
pop
add
sub
push
sbb
sub
sub
jae
clc
mov
fiadds
or
or
xchg
bound
push
push
into
outsb
sub
daa
or
inc
leave
fisubrs
movsl
mov
sbb
stos
fiadds
push
sub
xor
test
ds
aam
and
clc
sub
dec
testb
aam
sub
inc
mov
mov
addr16
mov
jo
push
jne
mov
sbb
jo
mov
aam
adc
sbb
ja
push
ror
mov
add
or
push
mov
sbb
sub
popa
jl
cmpsl
mov
jmp
jl
mov
repnz
mov
mov
in
mov
es
xchg
aas
popa
scas
add
mov
ss
int3
pop
or
inc
lret
xor
imul
mov
stos
xor
pushf
jbe
lret
out
cmp
stc
daa
cmp
std
sub
pusha
loope
loopne
addb
xchg
jp
cmp
dec
ret
lds
mov
out
jle
cld
cmp
cltd
loope
mov
jge
fisubrl
sahf
std
adc
idiv
orb
mov
and
je
push
lock
scas
insl
fsubs
ds
bound
mov
xchg
test
dec
mov
out
inc
mov
adc
add
jne
mov
ficoml
sub
lock
jp
mov
in
inc
loop
sbb
sub
inc
jmp
jne
fldt
lcall
iret
sarl
pop
cmp
mov
je
out
cmp
notb
bound
dec
arpl
ljmp
push
arpl
push
push
movsb
movsl
and
jb
enter
pop
popf
pop
dec
pusha
pop
or
add
sub
cmp
mov
pusha
iret
push
divl
inc
rcrb
in
sbb
out
mov
jno
mov
jns
cmpsb
mov
loopne
pop
fwait
test
jbe
sub
or
pop
jb
mov
or
mov
ret
hlt
sahf
loope
les
inc
sbb
dec
dec
mov
jg
repz
pop
call
mov
pusha
and
cli
mov
outsb
imul
movb
aaa
add
xchg
stc
mov
movups
dec
shll
mov
inc
xor
xor
mov
push
push
rclb
lods
inc
sbb
push
imul
andl
inc
fcmovnu
pop
loopne
ja
xor
xchg
add
jnp
cwtl
lahf
rcll
or
cwtl
imul
rorb
lock
and
mov
psrlw
adc
add
pop
les
cmp
inc
movsl
mov
inc
out
cmp
add
sbb
sbb
xchg
notl
cmp
xchg
dec
or
movsl
iret
mov
cwtl
pushl
repz
iret
cmp
in
std
mov
push
scas
call
cld
sub
jo
clc
mov
jge
mov
sbb
idivb
jle
sub
enter
in
je
in
ss
out
fdivl
call
xor
sbb
in
xor
jnp
shr
push
and
fistpl
leave
int
dec
bound
aas
push
cmovne
fidivs
pop
adcb
mov
enter
mov
in
in
call
pop
mov
adc
in
inc
in
sub
rclb
pop
iret
pop
ror
aad
pop
lahf
push
jae
dec
mov
stc
push
enter
sarb
or
test
insl
mov
shrl
pop
imul
xchg
mov
sbb
pop
cmp
pop
ljmp
jne
sbb
push
dec
mov
dec
and
or
xchg
dec
xchg
dec
pushf
add
push
icebp
lods
repz
add
pop
into
ficomps
push
dec
arpl
add
inc
dec
scas
xchg
xchg
xlat
pop
and
cmp
jecxz
dec
in
push
sub
cmp
gs
dec
dec
pop
cmpsl
jbe
cwtl
lea
xchg
xchg
sub
in
sarl
push
push
xlat
sub
lahf
cld
inc
rorb
test
fyl2x
push
and
repnz
mov
push
add
adc
repz
or
cmp
imul
push
add
loop
cli
out
imul
pop
lret
mov
cmpsl
adc
and
sbb
add
mov
adc
iret
fldt
sbb
sti
popf
jecxz
aas
cmp
aaa
rcrb
inc
out
push
push
pop
jno
mov
mov
scas
add
sub
xlat
insl
adc
and
jge
repz
mov
jbe
jb
bound
sbb
nop
jg
or
scas
scas
push
rclb
cmp
insb
add
inc
mov
sub
fcoms
test
popf
or
movl
imul
fstpt
ljmp
or
mov
fisubs
xchg
adc
add
mov
jge
adc
pop
jno
aas
test
lock
and
push
adc
popa
cmp
or
adcl
stc
es
sub
cwtl
or
dec
mov
sarb
push
rorl
int
sbb
pop
xor
aam
xor
dec
shrl
mov
lods
xor
jl
sbb
lret
push
cmp
insb
push
cmp
fsts
jnp
inc
mov
add
lock
addr16
xchg
in
stos
sub
mov
jbe
cld
in
jecxz
add
mov
out
in
mov
out
ss
pop
push
cmp
int
loopne
ret
mov
in
adc
cs
push
mov
repz
dec
xchg
jle
inc
mov
mov
sbb
mov
test
inc
orb
xchg
adc
les
mov
or
and
jnp
ret
cli
push
lods
lret
sbb
mov
les
mov
cwtl
push
cmpsl
inc
or
mov
hlt
xor
mov
push
stos
dec
scas
sub
aas
xlat
outsb
mov
inc
jecxz
xchg
jb
lahf
das
popa
and
ss
je
xchg
mull
pusha
std
mov
fcomps
scas
or
iret
roll
or
lea
adc
scas
leave
addr16
pop
rcr
arpl
lret
jnp
loopne
and
stos
cli
idiv
adc
mov
or
sbbl
inc
xchg
mov
dec
xor
xchg
xchg
cmp
clc
js
int3
cmp
push
into
sahf
out
jbe
idivl
out
mov
pop
out
fs
push
movsl
mov
into
mov
add
cmp
mov
ficompl
sub
negb
in
sbb
xor
ljmp
pushf
sbb
mov
add
scas
call
popa
dec
sahf
clc
in
and
enter
lcall
pop
bound
or
sbbl
mov
or
lret
das
xchg
sbb
sub
sbb
jp
mov
stos
mov
mov
ja
mov
aas
inc
ficomps
dec
loop
rorb
les
imul
ret
sbb
pop
inc
insl
inc
in
les
in
lds
mov
rcl
xor
push
aaa
lds
out
jns
mov
or
mov
cmpsb
sub
call
in
add
xor
notb
test
jl
lock
mov
notb
rcpps
pop
lock
cli
cmp
ret
out
lahf
dec
shrl
cld
int
jl
pop
push
mov
mov
add
jnp
into
xor
cmp
mov
push
xchg
js
cmpsb
push
xlat
sahf
sbb
nop
mov
shl
mov
out
lret
cmp
inc
cli
xorb
xor
stos
xchg
wrmsr
testl
add
mov
or
std
cs
pusha
pushf
xchg
jmp
xchg
ret
push
movsb
jmp
mov
add
es
sbb
inc
nop
ljmp
fwait
cld
in
adc
add
mov
pop
mov
in
inc
xor
push
sbb
xchg
push
divb
loopne
lods
inc
fadds
add
cmpsb
and
dec
mov
adc
psrlq
mov
mov
shrb
mov
jge
gs
lcall
loope
ja
pop
popf
push
pop
or
js
mov
sbb
pop
or
adc
je
xor
sbb
ds
mov
mov
adc
pop
sub
or
mov
rcrb
inc
push
cmp
mov
sbb
test
call
pop
cmpsb
nop
cmp
pop
push
loope
sub
mov
inc
push
lcall
and
repnz
mov
leave
pop
shll
adcb
int
outsl
mov
mov
scas
mov
xchg
mov
xlat
jbe
mov
dec
loop
inc
or
out
push
cmp
decl
pop
leave
add
push
sub
repz
and
or
mov
sbb
jne
aas
jno
in
xchg
pop
xchg
movsb
dec
mov
fstl
mov
lret
cmpsl
shl
cs
or
push
jp
inc
lods
jne
sub
popa
pop
mov
mov
and
cmp
ffree
sbbl
push
xchg
dec
and
mov
lcall
xlat
insl
ljmp
mov
cmpb
mov
fimull
dec
xchg
mov
adc
sbb
xchg
ja
sbb
stos
test
ss
clc
ja
push
imul
and
xchg
stos
and
in
mov
rcrb
arpl
xor
cmp
notb
cmp
shlb
sub
cmpsb
cwtl
lret
lea
push
call
testb
mov
leave
insl
sub
scas
jnp
stos
sub
dec
pop
cmc
pop
push
add
nop
push
and
and
mov
arpl
inc
loope
mov
jbe
lds
les
pop
adcl
out
pop
popf
dec
shlb
inc
fwait
or
jmp
outsl
add
jle
rcrl
mov
je
pop
mov
fdivrp
aaa
pushf
sub
pop
lock
inc
lahf
xchg
and
insl
jge
xchg
in
pusha
add
xor
fsubrl
test
add
je
iret
pop
sbb
subl
inc
f2xm1
pop
sub
aas
xchg
icebp
aad
add
pop
jg
mov
and
fbld
jl
push
add
sub
and
imul
mov
fsubrl
sarb
cld
cmp
cmp
mov
adc
pushf
and
mov
in
jg
fisubs
mov
pop
lods
lcall
mov
sub
icebp
jae
repz
cs
adc
sub
pop
lret
into
sbb
xor
call
xchg
je
outsb
fwait
and
jae
pop
mov
imul
call
xor
pop
mov
scas
adc
xor
hlt
faddp
pop
or
push
and
mov
shll
mov
push
and
and
in
loope
mov
aas
or
dec
test
iret
fidivl
cli
and
cmc
sbb
pop
iret
push
xchg
sub
adcb
call
sahf
push
fmuls
clc
scas
mov
push
insl
pop
inc
addr16
inc
mov
mov
sbb
iret
jbe
nop
sub
adc
mov
jl
jl
imul
xchg
cs
test
cmp
out
sub
pop
xor
scas
bound
sbb
add
test
mov
xor
fistpl
sub
pushf
push
int3
xor
sub
mov
ja
ret
adc
out
jg
jp
inc
sub
mov
pop
das
lcall
mov
xchg
jmp
and
xor
test
cmp
rol
mov
or
or
push
in
pop
mov
sti
pop
lcall
cmp
setle
xchg
mov
jne
inc
push
add
incb
jb
xor
loop
fld1
clc
ds
jle
pop
sub
incl
fmulp
sub
orb
mov
fcmovne
in
nop
and
xor
push
ja
jns
mov
mov
aas
fs
sbb
popa
sahf
add
jno
push
mov
jp
ss
cmp
sub
call
imul
das
cmc
fidivrs
xor
stos
orl
or
lret
roll
cmc
xor
mov
add
nop
sbb
notl
xor
jbe
add
or
lea
loop
stos
adc
cmpb
rcrb
add
pop
out
out
stos
jae
cltd
xchg
xor
inc
mov
mov
mov
mov
imul
push
loopne
push
sbb
xlat
lods
mov
ds
aam
js
std
dec
ds
inc
or
test
push
sbb
imul
mov
mov
jl,pn
aaa
or
loopne
mov
pop
mov
push
cld
sti
sub
cltd
and
xchg
test
mov
in
push
jns
push
stos
inc
lods
stos
adc
xchg
sarb
nop
jecxz
scas
xchg
mov
mov
rol
inc
sbb
popa
mov
jl
mov
jns
mov
add
add
adc
dec
bound
sbb
std
pop
scas
push
xchg
inc
iret
into
sti
lea
lret
shl
and
and
adc
ret
push
adc
das
cmp
and
sub
push
ljmp
jno
mov
aam
fcomps
ljmp
ret
adc
and
cld
pop
mov
adc
or
shrb
push
jecxz
imull
rcr
lret
mov
mov
inc
in
jl
nop
fbstp
add
sub
stos
out
roll
mov
movsl
stc
lds
cmp
mov
or
sbb
mov
cmp
faddl
imul
push
mov
xor
add
leave
mov
ss
xor
mov
add
scas
xor
loopne
inc
pop
lock
outsb
mov
ficoml
out
adc
in
rcll
or
xchg
cltd
lods
mov
cmp
mov
adc
shlb
dec
dec
and
addr16
mov
xor
js
arpl
shlb
xor
mov
loope
aad
mov
xor
push
or
fsubs
jbe
fdivl
add
mov
add
push
lea
cmpsl
adc
sti
cmp
gs
adc
jle
xor
popl
lods
negl
icebp
shl
dec
mov
push
adc
xchg
mov
ror
jl
jp
dec
faddl
sahf
or
or
sub
iret
scas
lea
or
stc
scas
mov
pop
idivb
cmp
sub
inc
and
jbe
in
jns
jp
jbe
push
xchg
loope
iret
pop
insb
mov
insb
loopne
push
inc
push
shld
adc
pop
lahf
sbb
cli
lock
sbb
jb
inc
cmp
fstps
pop
xchg
push
sub
mov
inc
inc
sub
cmp
sarl
adc
or
ja
mov
mov
jg
psubd
dec
or
jmp
push
insb
mov
aam
xchg
fbstp
test
dec
dec
pop
cmc
jnp
cmp
cmp
pop
xchg
xor
stos
cli
add
push
mov
cmp
ss
xchg
and
or
and
mov
daa
adc
rcl
hlt
pop
fwait
cmp
das
cltd
out
aad
les
fidivrs
lret
jp
jecxz
sbb
xchg
xor
call
mov
adc
sbb
hlt
cmp
mov
leave
pushf
cmp
imul
and
mov
or
mov
adc
fstpt
shlb
cmp
mov
cmp
push
sbb
dec
inc
mov
adc
lods
mov
imul
pop
pop
outsl
fnstcw
xor
pop
call
push
add
pop
jmp
adc
jmp
rolb
movsl
ljmp
inc
push
test
adc
xor
lds
sub
dec
dec
data16
xchg
cltd
or
test
les
mov
adc
test
or
xorb
sti
lods
das
nop
jmp
stos
cld
jo
sub
xorb
mov
or
movsl
dec
pop
xchg
add
in
mov
shrl
sub
movsb
clc
popf
in
iret
sbb
xchg
adc
stc
dec
pop
pop
push
lcall
xchg
pushf
pop
sbb
dec
imul
mov
sti
pop
or
dec
movsb
sahf
pop
fisubl
ja
das
cmp
push
xor
adc
cli
mov
movsl
out
ret
in
icebp
adc
aaa
sub
ds
xchg
push
in
mov
cmp
push
mov
dec
rcll
xchg
lret
and
hlt
pop
fistps
data16
mov
jbe
mov
ret
mov
pop
dec
fistpl
test
xlat
in
insl
adc
and
fcomps
fsubrl
aaa
push
push
pop
sbb
mov
ljmp
test
lods
xor
xor
dec
and
xchg
lahf
stos
jo
xor
int3
es
jmp
push
push
pop
mov
in
call
hlt
inc
nop
inc
mov
dec
mov
pop
adc
pop
sti
and
out
xchg
fildll
icebp
mov
mov
in
movsb
fidivrs
pop
mov
jo
int
js
ss
in
push
scas
std
rep
cmp
xchg
dec
cmp
cmp
sub
add
repz
pop
and
dec
xorl
add
or
negl
xchg
pushf
xor
test
push
stos
xchg
mov
mov
in
push
push
cmp
les
mov
out
data16
cmpsl
test
mov
lea
cmpsb
xor
rol
fcomps
out
mov
dec
fbstp
and
cwtl
bound
cltd
xchg
dec
mov
adc
shlb
imul
pop
or
jno
insl
mov
cs
sbb
icebp
sbb
cli
push
xchg
mov
xchg
fwait
aam
inc
mull
sub
jae
in
dec
daa
push
in
push
fs
adc
jae
jmp
mov
test
das
pushf
jo
cld
or
out
ret
ja
sbb
dec
push
mov
mov
jg
inc
fldenvs
cmp
mov
jle
jl
loop
loopne
jne
fcmovbe
xor
repnz
jge
pop
scas
std
or
sub
push
imul
sti
xor
xchg
scas
sbb
cwtl
pop
push
mov
cmpsl
jg
dec
data16
fsubrl
cmp
xchg
notl
stc
add
scas
xchg
pop
cmp
jnp
adc
jg
push
lock
xor
loopne
lock
shrl
adc
jae
rcrb
add
xor
iret
mov
and
ret
nop
push
imul
mov
sbbl
inc
add
sub
lcall
mov
in
popf
jno
push
or
fbstp
mov
dec
pop
cmp
jno
sbb
push
dec
jecxz
fs
insl
daa
ret
mov
xor
imul
aas
mov
fsubrp
sub
addr16
push
jp
lret
frstor
dec
daa
dec
cmp
mov
data16
mov
rcr
aas
insb
dec
out
pop
pop
imul
xchg
fldt
dec
xor
dec
inc
enter
lret
push
pushf
fwait
in
lret
mov
pop
movsb
cmp
xorb
bound
dec
pushf
cmp
setnp
dec
pop
popf
xor
inc
scas
cmp
fidivrl
lcall
adcl
loopne
and
add
pop
clc
fnstsw
fildll
cmp
dec
mov
inc
mov
sub
adc
out
and
jmp
flds
clc
addl
and
pop
mov
add
dec
mov
out
jp
jg
aaa
dec
gs
adcl
pop
jecxz
fstpl
mov
xchg
cwtl
out
aas
inc
mov
stc
jmp
popa
xor
clc
jnp
push
stos
lods
pavgb
and
push
jmp
sarb
push
cli
adc
sub
bound
shrl
adc
in
mov
add
push
jle
rol
push
fbstp
jae
mov
in
shl
mov
jecxz
adcl
cmp
ds
pop
sub
aas
test
pop
cmpl
outsb
push
mov
std
imul
mov
xchg
outsb
cmp
ds
pop
adc
mov
mov
les
movsl
cmp
adc
push
cwtl
xor
je
lods
sub
movsl
xchg
fsubs
divb
bound
pushf
and
iret
fdivrl
add
sarl
xor
add
sbb
je
sbb
xchg
stos
clc
inc
shlb
jbe
lods
sub
ret
aam
out
rcll
lds
mov
stos
lcall
hlt
lret
jbe
or
xchg
inc
sbb
xchg
vshufpd
add
cmp
fstpl
outsl
adcl
inc
sbb
aaa
into
pushf
in
negb
std
push
sub
pop
fldenv
mov
subb
rol
sbb
push
int
mov
dec
mov
inc
sbb
test
gs
cmc
mov
sbb
mov
call
xor
mov
loopne
push
and
in
jecxz
sbb
jle
shlb
xchg
xchg
add
jno
out
mov
shrl
inc
push
sahf
test
dec
mov
pop
popf
arpl
rcr
sarl
mov
mov
cwtl
sub
movsl
cmp
jns
es
iret
push
shlb
cmp
dec
mov
arpl
scas
mov
xor
into
and
stc
mov
lods
adc
cli
aas
lods
clc
lret
cwtl
mov
std
mov
fistpll
xor
xchg
adc
sbb
jo
lahf
movsl
fcomps
xor
push
xor
jge
push
ficoms
int3
test
xorb
and
mov
jo
xchg
bound
push
decl
faddp
testl
cwtl
dec
outsb
add
int
mov
es
xor
xchg
insl
sub
pop
cmp
out
add
sbbb
ja
imul
fnstsw
mov
xlat
lahf
das
dec
sti
fisubl
enter
popa
add
adc
lret
daa
repnz
add
ja
pop
mov
push
out
clc
adcl
adc
adc
iret
mov
lahf
shr
into
popa
and
and
pop
pavgb
inc
mov
pop
mov
int
push
xor
in
lea
inc
in
xchg
pop
sub
ret
push
stc
test
test
lahf
sub
in
add
cmp
lret
sub
push
in
movsb
xchg
sub
out
aas
data16
cwtl
adc
push
inc
jne
cmc
pop
push
rorb
add
and
add
sub
je
adc
jbe
pusha
and
sti
lcall
cwtl
pusha
in
push
hlt
or
fstpt
lods
lds
pushf
call
fdivs
jl
push
stos
cltd
ret
in
cld
lods
movsl
adc
ljmp
sbb
fucomp
fwait
in
push
jge
loope
adc
mov
jl
push
bndstx
pushf
in
jnp
jecxz
out
lret
pushf
xchg
sbb
aas
imul
adc
push
mov
dec
mov
sub
and
pop
and
mov
sti
es
pop
sub
inc
mov
add
sahf
add
in
pop
dec
in
std
jno
or
int3
jg
ss
sbb
gs
or
aad
pop
idivb
xor
and
test
push
sub
jecxz
mov
loope
dec
aas
or
mov
fwait
push
and
inc
xor
subb
pop
in
xor
push
jecxz
int
pusha
push
or
mov
jno
jb
xor
jbe
pusha
gs
cmp
pop
outsb
dec
mov
pop
mov
arpl
ljmp
dec
xchg
mov
test
mov
pop
and
and
test
andb
sub
jnp
repnz
aas
bswap
pop
addr16
xor
stos
or
mov
clc
lret
inc
xor
adc
and
inc
test
or
scas
xor
dec
insl
out
stos
stos
push
cmp
push
cli
int3
inc
adc
push
imul
sbb
int
pop
sub
lock
pusha
push
in
xorl
aas
lret
adc
sbb
vcvtsd2ss
jecxz
cmp
xorl
out
movsb
fbstp
loope
xor
fdivrp
or
mov
lret
mov
xchg
cs
add
push
andb
push
int
push
into
jae
test
sbb
adc
sar
ss
shr
and
jmp
mov
jg
dec
test
adc
jl
jecxz
jns
scas
push
adc
out
inc
mov
mov
dec
bound
loop
adc
dec
mov
add
daa
add
loopne
mov
mov
jnp
jb
push
mov
pop
imul
testb
test
out
jge
sbb
inc
push
imul
or
ret
fsts
cmc
push
dec
shrb
vpackssdw
mov
pop
imul
orl
roll
mov
mov
jecxz
mov
lods
jns
cwtl
out
or
lock
dec
xor
test
dec
adc
mov
or
stos
pop
into
xchg
test
std
mov
je
xchg
out
stos
or
xor
cmpsb
ret
rcrb
push
bound
xor
sub
sahf
mov
test
cmp
test
insl
ss
cld
inc
jle
rcrl
repnz
test
cli
mov
pop
frstor
lea
jl
imulb
enter
mov
jecxz
and
push
pop
cmc
adc
pusha
xchg
bound
xor
rcl
sar
dec
mov
cmp
fisubrs
dec
scas
mov
in
iret
shrl
lahf
gs
sbb
pushl
cwtl
jg
jp
mov
test
shlb
sahf
ljmp
js
int3
scas
lea
xchg
jb
mov
shll
inc
pop
and
cmpsl
daa
mov
mov
loopne
add
dec
and
jle
xchg
add
mov
bndstx
pop
mov
outsb
pop
pop
xchg
lds
testb
stos
nop
jl
dec
out
fiadds
and
and
in
iret
lods
jg
xor
outsl
pop
cwtl
decb
mov
jle
rol
dec
jb
sbb
jmp
and
call
add
arpl
cmp
imul
sbbl
iret
jp
pushf
and
ds
lret
std
hlt
lret
sub
popa
cmp
mov
jl
out
xor
add
add
inc
sbb
sbb
testl
inc
or
test
sub
insb
mov
ds
sbb
push
cmpsb
aas
add
mov
fldcw
adc
xchg
xchg
add
sbb
movsb
xchg
and
loope
xchg
adc
loope
xchg
sub
sbbb
cmp
adc
imul
int
add
scas
andb
cmp
or
ret
and
lea
sbb
pop
push
jp
xor
sahf
xor
aaa
aas
ret
push
pop
or
xchg
subb
adc
fsubrl
mov
or
mov
stos
mov
mov
xor
sub
jle
push
push
jmp
sub
jo
lahf
rcrl
repnz
jl
jae
or
out
fildll
mov
adc
js
outsl
imul
or
out
pop
pushf
xchg
icebp
add
cmc
xchg
xor
test
cmp
imul
mov
leave
push
jbe
or
xor
jb
mov
jb
scas
fidivl
cmc
stc
cwtl
cmpsl
rorb
sti
xchg
mov
add
sti
aaa
inc
aam
dec
push
xor
pmaxub
stos
lea
mov
xor
lahf
push
xrelease
je
insb
push
or
pop
inc
inc
std
or
sbb
loope
int
fnstenv
jns
push
lret
mov
mov
outsl
mov
dec
fisttpll
rcrl
imul
popf
fists
mov
loope
adc
cmp
push
mov
cmpsb
xlat
fdivp
xchg
xor
jbe
mov
outsb
fwait
mov
push
subb
inc
fidivl
loop
inc
fstpl
dec
cwtl
pop
std
gs
unpcklps
lods
push
cmp
pop
mov
idivb
ret
movsl
jge
xlat
mov
dec
cli
jg
xor
dec
mov
push
sub
int3
dec
jno
mov
pop
xchg
fsubrs
inc
in
test
or
fstpl
mov
dec
and
pop
jl
rclb
jo
mov
mov
cmpsl
cmpb
jmp
lret
dec
int
mov
fsubrs
test
test
inc
iret
repnz
stos
push
sbb
jo
xchg
ret
pop
cmpsb
cmpb
jl
push
fdivrl
and
mov
inc
repnz
mov
nop
push
push
jmp
imul
test
cmp
or
push
and
mov
push
test
lea
arpl
iret
decb
das
adc
xchg
ds
cs
hlt
add
psubsb
clc
sbb
ds
xor
outsl
aad
arpl
jle
push
test
xchg
jp
or
mov
dec
mov
jge
mov
inc
sbb
lret
push
jge
and
adc
sub
iret
adc
nop
daa
sbb
mov
lahf
push
scas
ret
popl
jl
outsb
orl
xchg
stc
and
popl
and
aaa
push
pop
leave
jg
aas
jmp
cmpsl
adc
sar
cmp
fstpt
sub
ja
ds
and
enter
or
add
push
push
adc
rcrl
xchg
jp
stos
mov
fdiv
into
sbb
mov
popf
lahf
xor
incl
pop
cmp
xor
dec
and
lock
bound
sub
jmp
inc
subl
pop
jg
fsubrl
sbb
jno
data16
leave
mov
push
mov
lret
cmpsb
lock
xchg
stos
sbb
cli
adc
mov
push
xor
bound
in
mov
dec
mov
mov
jle
cmp
jecxz
fsts
mov
push
and
mov
cli
mov
or
popf
jge
mov
sub
push
sbb
in
jl
push
mov
repz
adc
inc
repz
or
dec
dec
lret
ret
cmp
xor
or
call
mov
fldcw
push
aad
fisubl
dec
or
and
cli
xchg
and
outsl
mov
cltd
dec
dec
xor
cmp
std
cltd
shl
pop
outsb
xlat
dec
in
test
loopne
fnsave
mov
cmp
push
ds
jno
pop
insl
or
outsl
xor
sub
push
inc
add
int
aas
loope
pop
adc
cmpsb
mov
or
push
movsl
fcomps
roll
lcall
out
andl
cmpsl
aas
sub
iret
std
rcrb
lcall
out
inc
cli
pop
mov
mov
call
dec
dec
mov
aad
stc
dec
cmp
mull
jns
push
mov
fmulp
jl
cmp
mov
xor
inc
push
sbb
arpl
mov
pop
insl
aad
out
mov
outsl
jle
ss
pop
fdivl
adc
aam
mov
cmpsb
lock
inc
rcrl
pop
loop
mov
xor
and
mov
pop
add
push
int3
fadds
xchg
fmul
shlb
loopne
rclb
arpl
js
push
in
out
rcl
bound
jecxz
mov
addr16
mov
push
js
jecxz
inc
adc
pop
fcompl
push
push
dec
pusha
inc
mov
lcall
fdivrs
pop
mov
xlat
and
jl
outsb
jp
lock
jbe
divl
sub
mov
decl
push
out
repnz
xchg
enter
mov
movb
or
cmp
jle
inc
inc
pop
ds
in
out
cltd
mov
cmpsb
mov
mov
add
add
or
dec
pop
lock
pop
adc
rolb
push
decl
xchg
loop
mov
ret
test
pop
test
inc
xor
imul
xchg
stos
sub
fwait
pop
and
data16
xchg
rcll
sub
sub
test
in
hlt
sbb
sbb
in
pop
loopne
cmpsl
ds
test
xchg
jle
pop
or
ret
or
xlat
lcall
repz
jbe
jns
jecxz
mov
test
and
pop
xlat
push
dec
pop
mov
rcll
outsl
addr16
xchg
fwait
cld
pop
mov
mov
arpl
jecxz
in
inc
or
push
sbb
jl
fbstp
xor
adc
je
pop
jbe
insb
in
aad
shll
xchg
push
jbe
fldl
pushf
lock
outsb
adc
ficomps
rolb
cmpsl
jns
popf
out
jno
jb
lock
pop
pushf
mov
nop
sub
inc
add
dec
fstpt
adc
jo
loopne
mov
dec
mov
loopne
loopne
dec
push
shl
cmp
sub
mov
movsb
shrl
rclb
sbb
cltd
jmp
jnp
nop
orl
cmpsl
mov
xor
xchg
ss
adc
cli
push
aas
es
enter
jecxz
into
xchg
sub
cmp
jns
and
xchg
lcall
aaa
sbb
bound
movsb
sahf
movsl
sub
push
shlb
mov
adc
or
cli
sahf
jmp
cmp
push
adc
js
mov
push
sbb
es
mov
movsb
inc
and
adc
xchg
xor
shl
ja
ja
pop
dec
pushf
adc
mov
push
rorb
adc
and
jge
pop
add
inc
lds
lods
push
push
sbb
mov
jnp
adc
imul
shlb
shll
test
scas
mov
sti
xor
aas
jb
cmp
ss
fisubs
les
adc
bnd
fdivrl
inc
xchg
mov
stos
pop
sti
pop
insb
sub
mov
mov
out
test
ret
jmp
fistpll
scas
mov
and
dec
lock
adc
mov
adc
lcall
fwait
cmpsl
sbb
leave
popf
mov
lods
jo
fidivrs
adc
adc
adc
pop
adc
movsl
xchg
jnp
sub
mov
add
into
gs
test
in
xorl
xchg
adcl
add
adc
cmp
xor
sbb
lret
jnp,pt
fs
imulb
jbe
cwtl
fistps
adc
jg
mov
shrl
mov
cmc
shll
lahf
enter
call
mov
enter
daa
mov
fdivrs
data16
sti
pop
repz
cmp
sub
repnz
xchg
adc
fwait
dec
add
ret
insl
push
mov
cmp
mov
loopne
sub
test
aam
push
mov
inc
shrb
inc
and
jnp
dec
add
push
rcrl
add
es
fs
pop
push
inc
ds
mov
sbb
pop
xchg
test
mov
fistps
jnp
cmp
mov
xchg
movsb
push
js
aad
fwait
call
lcall
mov
xchg
repz
in
sub
orb
pop
pop
ljmp
mov
shll
js
icebp
leave
push
popf
aam
dec
loop
cmc
jle
mov
jg
aaa
in
push
pop
loopne
subb
xchg
xor
jne
pop
cmpsl
inc
jl
add
in
sti
daa
cmp
or
sbbl
pop
inc
pop
mov
jg
lods
cmp
aam
pop
repnz
sbb
repz
out
adc
bound
bnd
adcb
roll
ss
push
mov
pop
sub
cmp
add
in
jb
xor
rcll
addl
add
inc
xchg
mov
push
repz
mov
xchg
pop
mov
lret
jo
shrl
pop
mov
iret
dec
out
repnz
adc
lret
cmp
inc
and
std
test
pop
adc
dec
call
cmp
movsl
xor
or
insb
jle
adc
push
leave
fidivrl
ret
add
je
ret
and
mov
int3
es
into
sbb
mov
fcmovnu
mov
sub
cwtl
sbb
fldt
in
jmp
es
jmp
jg
dec
pop
sbb
aad
clc
daa
push
jno
or
mov
in
push
lret
pop
jbe
adcl
test
lea
nop
fwait
repnz
mov
and
lret
cmp
pop
loope
inc
and
dec
lret
decb
cmp
inc
int3
dec
fisttpll
cmpsb
add
jp
xchg
sub
and
jae
adc
icebp
pop
mov
je
push
mov
je
and
dec
add
ljmp
lods
hlt
enter
daa
stos
ret
add
pop
cli
popa
push
arpl
lds
or
clc
or
ja
sbbb
mov
aas
cmp
fistpll
repz
or
lods
ljmp
in
inc
dec
pusha
dec
iret
sub
shrl
popa
mov
loopne
jo
push
xchg
lahf
adc
jae
mov
mov
cld
inc
and
add
je
push
sub
fnstsw
outsb
fildll
pop
stc
push
movsl
inc
mov
arpl
ja
add
lock
jb
movsl
mov
ret
call
test
rcr
push
mov
mov
arpl
and
mov
roll
push
je
nop
psubsw
adc
lcall
push
icebp
or
stc
or
rcll
push
cmpl
leave
inc
rorl
push
mov
or
pop
aad
out
mov
lret
negb
adc
test
pop
sub
jl
test
cmp
ja
mov
lcall
jo
ds
jg
mov
mov
and
mov
jecxz
sbb
xchg
pop
cs
arpl
in
loopne
pop
pop
add
or
cmc
mov
dec
loopne
sub
jbe
mull
insl
sti
inc
and
ret
inc
outsl
rcrl
lods
push
daa
int3
out
ljmp
cmp
sbb
jae
insb
jl
dec
push
lahf
cmc
sbb
movsl
test
mov
lcall
mov
dec
adc
test
push
sahf
jge
fwait
mov
cmpsl
std
and
and
inc
mov
pop
sahf
mov
xor
loopne
add
pushf
icebp
shlb
dec
aad
sbb
insl
add
arpl
shlb
aad
std
pop
outsb
js
les
movsb
and
adc
stc
sahf
aaa
pop
in
mov
adc
ss
add
inc
mov
mov
and
testb
hlt
pop
insb
es
insb
ret
cmpsb
cmp
popf
pop
repnz
mov
adc
add
mov
jmp
dec
inc
cmp
cli
imul
mov
xchg
sti
fwait
xor
movsb
jecxz
fidivs
lods
insl
clc
dec
gs
pusha
cmp
ss
pop
in
push
jne
add
mov
mov
push
fdivrs
cmpsl
popf
sbb
sbb
sbb
fcomps
sub
ret
ror
push
cmc
or
loopne
jp
mov
ficoms
xor
into
xchg
sbb
ret
ret
mov
mov
enter
imul
sub
add
sbb
mov
roll
cmp
mov
dec
jmp
jo
jmp
jns
sub
gs
dec
adc
and
rcrb
jmp
rol
sbb
xor
mov
xchg
movl
jo
dec
dec
in
pop
cltd
call
or
into
xor
aad
les
and
fidivrl
cmp
jl
pop
xor
test
inc
xabort
pop
imul
pop
cmc
ret
push
lods
cmp
je
xchg
adc
push
xchg
inc
inc
in
jns
clc
sbb
pop
negb
in
inc
cld
arpl
xchg
into
or
cmp
add
jbe
jae
decl
pop
gs
inc
and
sbb
sti
shll
out
inc
sbb
jmp
add
adc
cmc
ds
jae
or
pop
fidivs
dec
adc
mov
hlt
dec
jle
adc
sahf
shrb
push
icebp
mov
mov
aad
stc
fdivl
adc
or
mov
xchg
and
sbb
lcall
shrb
ficoms
push
mov
jns
mov
hlt
add
fs
mov
fbstp
fs
les
aaa
bound
sbb
fwait
adc
cltd
adc
int3
aaa
mov
pop
push
sbb
or
push
addb
pop
xor
push
lock
inc
sub
add
add
push
mov
jnp
in
arpl
je
cmpsl
push
aas
stos
dec
testb
lea
out
imul
adc
cwtl
icebp
cmpsb
or
xor
add
sbb
xor
gs
stos
inc
movsl
fmull
and
sub
ja
push
iret
push
aas
clc
decb
sbb
cmpsl
inc
add
pushf
gs
add
shl
push
orb
lea
sub
xchg
arpl
mov
pop
adc
in
dec
lods
xor
xchg
cmpsb
int3
fs
enter
fisubrs
add
xchg
push
lods
dec
mov
sbb
sbb
out
and
adc
fildll
adc
xchg
out
pop
cltd
pop
mov
icebp
xor
in
and
loopne
test
dec
icebp
test
ret
rcrb
xchg
pop
repnz
mov
adc
sbb
mov
or
pop
ss
rorl
push
jns
inc
stos
sbb
pop
pop
mov
mov
pop
xchg
lahf
or
aaa
cli
pop
mov
ret
cmp
sbb
push
into
jl
cmp
gs
nop
daa
inc
cmp
iret
loope
pop
sahf
je
push
pop
movsb
xlat
sub
mov
dec
cmpsl
stos
or
dec
loop
decl
and
mov
fbstp
lock
jle
inc
xchg
cltd
sub
ljmp
or
dec
dec
pop
dec
stos
jo
jle
pop
insl
pop
sti
setne
insb
mov
push
mov
sti
jge
jg
inc
sub
jecxz
cmp
int3
rcr
insl
stos
in
lahf
and
push
rcl
idiv
popa
dec
notb
cmpsl
push
push
rcr
pop
push
pop
or
and
xor
mov
int
mov
mov
popa
es
xchg
mov
push
jno
xchg
mov
pop
addr16
sbbl
jb
xor
push
sahf
insb
pop
add
dec
or
push
mov
cltd
ja
and
sbb
mov
mov
ljmp
jne
adc
dec
pop
jb
test
out
or
add
push
xorb
les
scas
push
jp
cwtl
mov
mov
jno
loope
fistpl
mov
and
xor
cld
push
out
daa
sbb
clc
iret
cmpsb
cld
js
imul
out
cmp
insb
mov
pop
xor
pop
pusha
cli
or
lds
add
dec
dec
outsl
adc
push
imul
adc
pop
xchg
sarb
xor
jp
fidivs
mov
add
xor
movsl
bound
sub
loopne
pusha
out
add
test
inc
fiaddl
stc
repnz
sub
popa
cmp
sahf
jl
test
adc
mov
add
bound
lods
nop
cli
jnp
mov
push
sbb
lds
or
pop
xchg
push
ljmp
jno
add
outsb
sbb
iret
mov
js
pop
inc
ret
mov
inc
cmp
mov
iret
xchg
add
push
jae
pop
outsl
add
repz
push
cmp
test
or
add
sti
outsl
je
or
inc
pop
inc
cmp
cmp
lea
add
xchg
xor
push
pop
sbb
int
jg
push
sbb
nop
xorb
test
iret
fstl
mov
aaa
lret
pop
in
cltd
mov
and
jb
mov
dec
mov
popf
jge
mov
xor
jl
inc
in
xchg
sbb
jle
dec
cmp
scas
xor
and
xor
movsb
xchg
in
lahf
movsb
imul
popf
lds
mov
fildll
or
imul
daa
imul
pop
inc
mov
sbb
test
jnp
pop
das
xor
push
fidivl
es
pop
and
out
sbb
dec
push
insb
cmp
cwtl
sbbl
cmpsb
xor
jne
push
sub
mov
fistps
test
jne
inc
outsl
inc
jnp
sti
pop
xchg
push
testl
bswap
cmp
aas
inc
mov
push
lock
jno
rcr
dec
les
dec
pop
shlb
sbb
sub
add
push
popf
std
and
mov
test
mov
inc
scas
out
scas
jae
adc
mov
stos
cmp
loop
xor
pop
push
ja
test
in
dec
cmpsb
enter
add
mov
pusha
xchg
out
mov
sub
cmc
jp
popf
nop
push
loopne
add
mov
push
lock
scas
cmp
pop
int3
mov
or
mov
in
jmp
or
lods
enter
sahf
jmp
lds
imull
aad
pop
sbb
add
shrb
sti
fwait
addr16
mov
add
aam
sti
pop
cmp
dec
xchg
lret
pusha
lods
mov
loopne
fimull
test
loope
jp
mov
pop
ret
ljmp
imul
les
mov
cmp
mov
push
push
cmpl
mov
stos
xor
mulb
test
add
mov
jns
data16
pop
scas
mov
xchg
cmp
jg
enter
inc
inc
sbb
sti
data16
mov
ret
ret
jp
mov
and
cmp
mov
push
aas
loop
ja
jnp
fsubl
aad
test
lock
pop
or
mov
push
in
cmp
fwait
mov
shlb
orl
or
cmpsl
aad
flds
mov
fidivrl
shrl
repz
in
mov
pusha
add
arpl
call
xor
scas
movsl
icebp
push
mov
add
push
pop
jge
mov
or
sub
cs
jg
inc
pop
cmp
sbb
xchg
je
and
lea
mov
adc
and
mov
xor
outsw
repnz
add
sti
dec
movsl
push
mov
jge
dec
decl
cmp
sahf
inc
andb
and
mov
fucomp
in
scas
mov
xchg
testl
clc
int
cmpl
int
cmpb
jg
je
lret
sbb
push
sbb
dec
je
pop
insl
scas
rcll
test
mov
and
inc
push
adc
xchg
push
xor
mov
and
push
xor
adcl
jnp
jp
and
pop
mov
inc
fldcw
fwait
bound
test
pop
mov
push
pop
sahf
je
inc
out
sbb
cmc
lea
sbbl
and
lahf
lret
sti
testl
mov
gs
into
push
in
add
inc
mov
je
push
mov
mov
fld
pop
and
cli
data16
xchg
subb
mov
pop
out
add
gs
and
ret
mov
in
outsb
add
jbe
jne
dec
fcoms
jg
in
fucomip
pushf
in
add
add
cwtl
adc
and
out
sbb
sub
sbb
push
push
pusha
stc
repz
mov
push
in
outsb
sbb
xlat
sub
mov
cmc
jb
lret
ja
lods
sub
stos
pop
adc
ret
popa
loopne
pop
and
inc
pop
test
icebp
dec
mov
jno
push
lret
ja
xor
lret
push
jmp
loopne
jg
sahf
test
ljmp
leave
or
aas
bound
jg
mov
or
push
inc
lahf
or
sahf
or
xor
fldt
xchg
pop
jg
sti
dec
xchg
mov
sbb
mov
pop
sub
dec
pop
or
cmpsl
dec
subl
and
push
jge
scas
out
test
out
pushf
scas
mov
xchg
push
pop
mov
scas
push
push
jg
sbb
xlat
sbb
mov
sbb
movl
sub
insl
jno
shlb
mov
hlt
div
mov
jmp
xor
aas
popf
xor
xor
orl
or
xor
sbb
test
std
pop
xor
gs
in
adc
imul
ret
popa
mov
ja
adc
sub
rcrb
pop
jg
mov
mov
sbb
sbb
jecxz
jmp
cmp
mov
pop
je
bndstx
sbb
cs
push
dec
mov
mov
roll
addb
ds
hlt
popa
pop
stos
int3
xchg
ja
ret
mov
mov
andb
daa
fstpt
dec
pop
lret
aas
mov
mov
dec
insb
aas
popf
jo
sub
add
out
sub
gs
push
xchg
test
pop
sub
and
mov
sub
sub
ficoms
mull
shll
pop
cmc
leave
and
sub
mov
push
sub
xorl
rorl
insl
mov
mov
movsl
daa
imulb
inc
js
loope
xchg
dec
fs
mov
stc
sub
mov
or
pop
jo
push
xchg
enter
sti
insl
jg
arpl
mov
adc
or
pusha
inc
inc
out
fwait
cmp
popf
xor
test
mov
xor
pusha
negl
mov
xor
in
fs
inc
mov
andl
nop
mov
ret
xchg
addr16
adc
ret
fwait
jmp
jle
lods
xor
pushf
aad
mov
xor
into
adc
insl
stos
xor
lods
fwait
lods
mov
jg
in
movsb
aaa
iret
or
mov
inc
jae
cmpsb
aaa
push
outsl
addl
lret
xlat
or
mov
inc
test
xchg
fnstcw
lret
in
loopne
jno
test
mov
cli
shll
fimull
adc
scas
mov
insl
xchg
testb
or
and
testl
es
in
sub
call
pop
cmp
jg
xor
call
rcrl
xor
pop
cli
fists
sahf
clc
imul
les
push
jl
lods
mov
mov
js
inc
and
push
push
jnp
and
mov
dec
xchg
push
stos
mov
fwait
or
movsb
mov
mov
cmp
adc
and
out
dec
and
push
lret
rcrl
push
sub
jno
in
mov
push
test
inc
adc
loope
mov
inc
fbstp
repnz
addr16
jae
test
arpl
sbb
daa
mov
jg
cmp
add
lret
ret
imul
out
mov
fs
mov
mov
jmp
push
imul
xchg
fistps
inc
fadds
mov
pusha
adc
add
fucomip
jbe
pop
cmp
std
pop
cmpsb
xchg
test
loopne
sub
mov
lret
dec
xchg
push
icebp
dec
mov
sahf
sbbb
ret
xor
jne
xchg
xchg
sub
ss
pop
push
mov
mov
insb
or
pop
out
cmp
shll
aas
adc
inc
add
cld
and
add
pop
mov
push
dec
sbb
jb
jae
fisttpl
test
cmp
nop
jp
out
add
adc
inc
fmull
mov
jp
inc
fisttps
dec
jb
subb
lock
pop
outsb
dec
xor
ljmp
mov
repnz
mov
es
xchg
pusha
mov
cwtl
sub
mov
xor
cs
inc
mov
aas
pop
int3
mov
aaa
fisubrl
and
xorl
dec
test
inc
dec
and
cs
test
dec
cmp
repz
mov
dec
jmp
ret
push
xor
enter
into
mov
dec
in
rclb
mov
les
subl
sbb
mov
into
gs
movb
in
adc
mov
test
jecxz
sbb
push
out
or
lock
lods
and
sub
inc
xor
scas
mov
inc
xor
adc
mov
cld
dec
dec
call
cmp
dec
sub
inc
nop
lods
mov
jae
pusha
lds
jnp
xor
scas
pop
lret
arpl
add
popa
cmp
and
ror
sbb
jno
inc
stos
mov
daa
sti
or
outsb
scas
push
ja
xchg
ret
add
adc
mov
es
pop
in
ret
sub
hlt
jge
into
mov
shrb
jno
arpl
dec
sub
and
ficomps
loopne
push
mov
pop
lock
xor
jno
gs
jb
scas
mov
pop
popa
imul
push
in
xor
cmpsb
lcall
sub
loopne
dec
in
or
movsb
arpl
mov
repz
xchg
hlt
ret
pop
fisubrs
mov
out
shl
jge
aaa
iret
mov
ret
adc
xchg
jmp
push
mov
push
insl
jle
adc
pushf
sbb
lahf
sarl
and
push
iret
jecxz
movsl
stos
cmp
bound
mov
ljmp
test
xor
outsl
out
add
lret
andb
stos
pop
in
lods
pop
pop
aaa
add
or
scas
mov
adc
fsubrl
jnp
jle
mov
shlb
fs
movsl
and
xor
ss
hlt
mov
rclb
adc
jge
leave
nop
cmpsl
adc
mov
mov
add
test
push
out
insb
or
sbb
inc
loopne
mov
pop
out
mov
mov
mov
andb
es
pop
xor
cmc
adc
push
shlb
lds
mov
mov
jge
jne
jmp
adc
call
push
and
jb
mov
hlt
lock
nop
push
mov
sbb
jno
sbb
lock
data16
mov
inc
xor
jae
data16
loope
jno
push
push
cpuid
out
jb
cmp
cmc
js
jmp
jp
xchg
dec
mov
jnp
movsb
aaa
sub
sbb
jle
int
out
push
in
mov
xchg
test
xchg
ja
lret
pop
insb
orb
out
mov
mov
inc
xchg
sti
or
adc
pop
mov
fldenv
dec
ret
jnp
cmpsl
test
xchg
mov
cmc
cwtl
or
ret
outsb
stos
out
subb
inc
repnz
adc
xchg
mov
or
fsubrl
rorl
stos
dec
fsubp
dec
cli
or
out
cmp
sub
xchg
loope
frstor
mov
push
mov
push
fildll
mov
mov
das
aaa
jb
pop
cld
push
dec
push
test
mov
and
repz
mov
or
aaa
fimuls
mov
jg
sub
sbb
xor
into
pop
sub
test
mov
scas
mov
pop
add
out
cmp
mov
sub
jb
outsl
jecxz
mov
push
sbb
scas
inc
idivl
push
ja
nop
dec
loop
and
lock
jo
xchg
inc
sub
xor
imul
add
push
jmp
movsb
lds
in
nop
std
mov
xor
mov
fcomip
mov
pop
out
pop
mov
fdivl
fdiv
ljmp
fidivrl
lret
and
scas
sbb
xchg
in
push
sbb
repnz
jae
xchg
int
jns
jb
add
test
jbe
mov
jb
jne
fnstcw
arpl
roll
push
adc
cmp
mov
lcall
jno
lahf
and
inc
es
imulb
insl
add
cli
or
pop
xchg
mov
ret
or
sub
stos
jo
dec
or
push
mov
call
push
push
sbb
or
popf
xor
fistl
jl
xor
dec
in
jp
xchg
push
gs
ficoms
dec
ljmp
xor
jne
cmp
jecxz
pop
mov
jl
or
mov
mov
rcrb
xchg
mov
mov
xor
or
push
fiadds
outsb
cmpsb
les
jl
sbb
jae
fildl
cmpsl
bound
mov
out
adc
fwait
scas
shrb
in
or
ds
outsl
push
push
adc
cmp
jno
mov
inc
leave
pusha
jns
mov
push
lahf
push
cli
sbb
jl
clc
and
mov
mov
adc
addb
sbb
ss
jne
inc
ret
jns
leave
mov
idivl
stc
fisttpl
xchg
pusha
add
iret
adc
pusha
xor
xchg
jno
repnz
hlt
pop
imul
mov
xchg
adc
loopne
jno
cmp
aas
hlt
push
push
daa
pop
xor
xlat
xor
jge
xor
push
mov
testb
insl
mov
or
jl
mov
movsb
cmpsb
test
ret
xchg
push
sti
add
pop
sub
and
or
hlt
cmp
and
xchg
fbstp
and
shll
test
sbb
leave
inc
dec
shll
xlat
cmp
imul
sahf
mov
pushl
sbb
or
call
aad
mov
add
adc
or
pop
imul
or
inc
mov
aaa
jae
sub
and
push
ret
xor
xchg
sub
cwtl
inc
cwtl
inc
repnz
mov
ljmp
adc
in
push
sub
lods
xchg
or
mov
shrb
shrl
dec
pop
jb
push
jno
mov
inc
enter
ret
add
out
popf
fnsave
je
pop
sub
lret
lea
or
sti
enter
leave
pop
cld
dec
add
andb
mov
movsb
loope
loope
mov
pusha
add
xor
sbbl
addl
or
aaa
orl
cmpsl
stos
iret
xchg
daa
push
or
lcall
push
fdivrl
mov
adc
mov
je
add
adc
mov
push
data16
pop
jmp
mov
shrl
inc
mov
std
sub
pop
cmp
mov
pop
testl
jb
adc
cmpsl
loopne
xchg
enter
and
xchg
fsin
cwtl
push
dec
inc
bound
jge
cmp
mov
sub
out
jb
addr16
and
lds
lret
aam
sub
add
ret
insb
mov
cmpsb
mov
mov
xchg
mov
push
inc
fnstenv
mov
mov
mov
mov
and
lea
jnp
sbb
xchg
sub
lods
test
jbe
pop
mov
lret
xchg
xchg
loopne
mov
nop
out
ds
xchg
pop
jne
push
loope
inc
jne
jg
lret
mov
jp
push
mov
leave
arpl
push
flds
pop
or
stos
inc
and
incb
test
stc
out
aam
aad
jae
les
xchg
and
pushf
xor
push
mov
add
adc
sub
inc
xchg
dec
fidivrl
in
push
in
les
push
and
dec
pop
gs
aas
mov
sbb
stos
pop
outsl
aaa
popf
stc
stc
dec
lea
sbb
addr16
sub
xor
test
enter
cwtl
add
and
sar
push
and
cld
fistpl
roll
outsl
add
lods
loopne
cmp
cmp
lock
cs
pop
hlt
mov
lahf
xlat
inc
jge
cmp
dec
or
jnp
mov
inc
fstpl
sbb
push
jecxz
test
push
in
sub
int3
pop
jmp
pop
xchg
jb
cli
lret
push
sbb
add
xor
pop
xchg
shlb
pop
fwait
cmp
mov
test
xorl
outsb
leave
test
jle
rcll
fs
insb
lods
test
lods
jb
vunpcklps
sbb
push
inc
sbb
ljmp
dec
cmp
fnstenv
imul
sub
out
push
call
in
repnz
and
lret
out
add
xchg
mov
rol
push
dec
loope
fs
push
iret
ss
mov
jbe
xchg
xor
in
mov
jae
fwait
stos
and
sub
jbe
lret
insb
std
mov
out
dec
cmp
sti
aas
mov
fs
dec
idivb
ljmp
adc
inc
pop
mov
pop
jmp
xor
iret
xor
mov
add
fnstsw
jmp
mov
pop
pop
es
imulb
into
jge
std
loop
jl
or
push
cmc
jle
adc
mov
shr
xchg
mov
decl
cmpsb
leave
out
enter
dec
jmp
push
mov
sub
push
pop
js
mov
popf
xor
mov
mov
pushf
ret
insl
push
movsl
pushf
mov
les
ss
or
push
cltd
push
xor
sub
nopl
push
insl
pop
inc
pusha
insl
dec
and
xchg
mov
aam
mov
enter
les
loope
int3
loope
dec
in
pop
mov
test
add
push
sub
adc
add
sahf
xor
mov
rep
mov
cmp
sbb
scas
push
mov
les
aad
sbb
pop
ljmp
add
push
xor
out
xlat
pushf
in
xchg
sub
fistl
mov
cld
insb
mov
cltd
enter
mov
dec
mov
cmp
outsl
adcb
add
jb
sbb
out
test
jnp
sub
or
push
mov
cltd
fildll
mov
cmp
outsl
imull
push
icebp
and
call
sub
add
es
mov
and
add
push
inc
or
cmpsb
imul
jns
pusha
aas
and
jo
jo
sub
pop
ret
lcall
push
lock
sub
and
in
ret
pusha
addb
lds
ja
arpl
cld
xchg
inc
inc
lods
mov
adc
jnp
movsb
mov
nop
daa
jbe
stc
adc
xchg
scas
inc
leave
inc
pop
cmp
push
inc
mov
push
into
sbbb
rcrl
inc
and
xorb
mov
icebp
mov
fdiv
pop
icebp
popa
jb
fisubs
mull
sub
inc
enter
mov
movsl
add
mov
xor
test
push
shll
daa
and
sbb
push
icebp
shlb
cmp
inc
das
mov
mov
lds
mov
xchg
scas
hlt
ss
mov
or
movsl
adc
jnp
popl
adc
imul
out
jl
mov
xlat
push
and
into
pop
push
notl
or
dec
lea
dec
inc
push
push
mov
mov
jne
push
mov
cmp
dec
push
idivb
pop
stc
and
mov
je
in
xchg
and
pop
cmp
cmpsb
imul
aaa
repz
or
jnp
xchg
or
shlb
test
nop
and
out
sub
dec
fdiv
int3
andb
add
pop
pop
pop
hlt
jns
xor
out
push
out
mov
cmc
mov
sbb
mov
push
sub
sbb
cwtl
das
outsb
and
scas
mov
push
mov
iret
stc
popa
fisubs
lds
outsb
cmp
in
stos
cmpsl
pushf
xor
xor
pop
mov
jbe
jb
test
into
mov
dec
jbe
xchg
pop
test
and
sahf
inc
xchg
sub
dec
push
mov
adc
aas
or
jp
icebp
lods
mov
daa
clc
cs
cmp
push
jmp
mov
jo
int
and
jle
add
outsl
sub
hlt
insb
repz
call
fsubr
dec
mov
inc
add
imul
push
test
sbb
dec
xor
sub
or
bound
pop
fwait
je
adc
jg
xchg
mov
pop
int3
mov
sub
in
jnp
mov
mov
mov
jl
nop
inc
lahf
dec
test
cmpsb
jno
ljmp
push
jbe
jb
add
inc
mov
mov
inc
popa
mov
inc
sti
inc
std
ret
or
ret
jecxz
call
and
pop
push
sub
fdiv
aaa
mov
mov
sbbl
sbb
fsubl
pop
mov
fsubs
sbb
jp
sarl
inc
mov
sub
test
arpl
add
xor
std
cmp
cwtl
leave
jmp
and
pop
push
stos
cmp
mov
dec
mov
imul
call
push
inc
psllw
jnp
addr16
nop
daa
jle
rcr
lahf
scas
rol
test
xchg
cmpsb
mov
rclb
loopne
add
push
xlat
outsb
cmp
jo
fcomi
pop
mov
mov
shll
aaa
pop
aaa
dec
clc
test
mov
shl
in
push
in
or
mov
mov
pop
dec
in
rorl
ljmp
pop
add
cld
cmp
pusha
xorl
jb
imul
in
add
sahf
sarb
mov
out
popf
pop
shlb
sub
ficoml
mov
mov
sarb
sahf
push
xor
shlb
std
rorl
cmpsl
shll
inc
dec
pusha
jno
and
push
inc
pop
pop
sbb
xor
inc
pusha
insl
data16
pop
xchg
jmp
xchg
sub
stos
mov
mov
movsb
mov
sub
int3
arpl
dec
jecxz
xchg
sbbl
aas
jb
scas
or
das
int3
sub
loope
dec
jne
mov
in
loop
pop
lret
js
arpl
lods
insb
xchg
cs
fstl
insl
fnsave
or
test
and
sub
push
push
es
mov
je
pop
add
push
mov
mov
ljmp
ss
mov
aas
adc
or
js
sub
adc
cli
insl
mov
inc
inc
jns
popa
stos
sub
cmc
dec
mov
dec
push
cwtl
inc
pop
ljmp
ret
xchg
outsb
repnz
shlb
adc
inc
lret
scas
lcall
xchg
lret
andb
sbb
pop
mov
stos
stos
loope
lret
jb
out
lock
out
and
ljmp
dec
out
push
sbb
lds
xchg
and
inc
sbb
into
xchg
add
and
cmpsl
fcompl
cltd
js
out
xchg
pushf
and
dec
jns
mov
jg
cmp
push
jmp
pop
stos
jmp
push
rcl
sarb
adc
lea
and
mov
ja
pop
scas
popf
xchg
lret
mov
insb
daa
inc
jge
icebp
sub
cmp
ret
mov
cmpl
inc
push
cli
xlat
adc
into
adc
cmp
mov
lea
js
jne
pop
stos
and
add
cmp
adc
test
inc
out
sbb
mov
cmpsb
les
fs
mov
dec
push
sub
or
icebp
mov
dec
repnz
mov
jns
outsl
test
xchg
xor
xchg
sub
mov
sarl
mov
lret
int
imulb
nop
fistps
sbb
jo
jecxz
mov
or
cmp
dec
mov
or
sahf
fucomi
int
arpl
adc
inc
mov
push
sbb
movsb
je
pop
mov
jp
mov
mov
adc
mov
mov
and
mov
leave
adc
clc
fs
notb
repz
stos
cwtl
mov
mov
loopne
aad
and
sub
int3
ret
push
mov
push
xchg
inc
pusha
xchg
pop
scas
or
jmp
jp
cli
stos
arpl
pop
xchg
xor
jp
cmp
mov
movups
jo
or
cmpsb
cmp
add
dec
mov
loop
insb
int
leave
lock
jle
pop
in
dec
aad
mov
repz
push
adc
pusha
rcl
inc
test
cmpsb
frstor
or
aad
mov
fnsave
test
xor
outsb
add
lret
sub
fidivrl
mov
inc
push
sahf
rcrb
fsubrl
ror
add
push
outsb
into
movsl
sbb
nop
outsl
mov
and
cli
test
call
insb
jge
mov
mov
je
pop
movsb
lea
sub
negb
push
mov
cli
adc
inc
sbb
ret
jne
pop
push
imul
pop
inc
xor
sub
loopne
cmpb
sti
push
pop
xchg
xor
and
insl
jns
or
jge
push
in
push
xorb
jb
or
xchg
std
mov
xor
cli
xor
aad
sbb
cmp
addr16
mov
out
xchg
and
jl
int3
lods
mov
or
dec
test
xor
sti
dec
sbb
mov
add
mov
es
push
stos
mov
mov
enter
xor
filds
pop
push
mov
aas
cmc
cmp
fsubr
add
imul
mov
mov
mov
add
add
jl
sub
ret
repnz
add
add
clc
mov
sbbl
shlb
hlt
mov
xchg
sbb
push
out
xchg
adc
xlat
clc
mov
addr16
rolb
mov
mov
scas
jge
and
sbb
mov
ljmp
push
fsub
fsubs
add
jg
and
movsl
xchg
fidivl
or
sub
jb
lcall
and
dec
and
arpl
and
sub
pop
mov
xchg
sub
enter
lret
lahf
push
das
inc
pop
jge
dec
movl
pop
or
xchg
in
lods
in
outsl
outsb
mov
ret
inc
adc
jo
and
pop
sti
cmp
sub
jbe
jge
push
jecxz
fisubs
mov
addr16
call
push
fs
gs
popf
out
cmp
add
and
xchg
ret
repz
enter
fisttpll
cld
fnsave
mov
mov
mov
pop
scas
push
cmp
push
in
and
jg
nop
and
inc
xor
mov
xor
imul
std
push
sbb
lahf
inc
ret
mov
test
ret
rcl
pop
aaa
xor
pusha
sahf
sbb
shll
sub
in
sub
xchg
popf
dec
loop
aaa
jg
stc
loop
idivb
xchg
fcmovnu
jge
push
fcmovne
scas
daa
fwait
sub
imul
or
inc
loop
mov
and
dec
imul
fbld
pusha
push
pop
dec
loop
es
push
fsubrl
fdivrl
mov
cltd
popa
adc
cli
pop
sub
xrelease
test
adc
lcall
in
aas
add
out
out
cmpsl
mov
inc
cmp
into
outsl
adc
or
sub
pop
or
test
sub
nop
mov
mov
jge
cltd
xchg
ljmp
insb
dec
jge
wbinvd
int
add
push
in
mov
sbb
mov
pop
cmpsb
ret
repz
in
adc
mov
es
loope
jle
loop
sti
push
les
sub
int
mov
inc
jb
cmpl
mov
push
cmpsl
mov
or
arpl
cmp
rclb
sarl
adc
cmpsl
cld
aas
pusha
inc
or
xor
push
push
jmp
dec
addr16
out
lock
jae
js
mov
fs
movsl
call
mov
cmpsb
sub
mov
cli
push
sub
inc
inc
sbb
xor
fs
xchg
enter
das
insl
and
mov
ret
xor
adc
and
jmp
test
push
sbb
sbbl
ss
es
sub
add
push
xchg
movsl
push
xchg
sbb
cwtl
dec
mov
mov
filds
jmp
mov
push
sbb
test
jle
daa
outsl
aad
add
aaa
cmp
push
sub
stos
jmp
sub
outsl
repz
hlt
cmp
repnz
fiaddl
jecxz
es
div
mov
int
jecxz
cmp
data16
ret
push
push
xor
aam
shr
sbb
jbe
loop
cli
pushf
jae
add
test
or
mov
ret
loope
sarl
cmp
xchg
xor
mov
rcrb
data16
mov
fninit
pop
insl
adc
push
shrb
fnsave
orl
dec
fistps
xor
orb
movsl
aaa
or
sarb
int
xor
push
xchg
jb
dec
xor
sbb
stos
mov
cwtl
mov
and
stc
mov
jg
adc
sub
rcr
sub
out
push
jo
jb
pop
xchg
fisubrl
fsubl
mov
mov
xchg
xor
lods
fwait
insl
push
adc
adc
and
scas
pop
mov
mov
xchg
mov
imul
std
dec
cmp
sub
pop
inc
dec
push
pop
sbb
popf
mov
jmp
jle
mov
add
js
inc
sbb
cmp
lcall
cwtl
jno
or
push
adc
and
aam
aam
mov
cmpsl
pusha
ljmp
cmp
mov
pop
add
or
out
fucomip
cmp
jle
icebp
das
movb
dec
fld1
jae
ds
notb
xor
xor
fidivrl
cwtl
pop
stos
push
cmc
fimull
xchg
pop
push
jbe
mov
incb
sub
sbbl
out
loope
and
mov
data16
push
sbb
inc
fstpt
add
sbb
or
fisubs
jecxz
pop
push
mov
sti
insb
mov
scas
push
pop
test
cmpsb
pop
sbb
mov
jg
shlb
imul
sub
mov
xchg
ja
data16
lret
and
in
mov
cmp
or
jecxz
mov
mov
add
or
data16
inc
dec
js
cli
dec
cli
insb
sbb
mov
repnz
loopne
leave
vpackuswb
mov
int
nop
ja
outsl
in
test
inc
adc
sbb
es
dec
in
sarb
mov
insb
ret
fs
and
mov
inc
sbb
jg
cmc
mov
ret
jb
cld
adc
aas
jp
xchg
mov
stos
jl
cld
dec
scas
fdivrl
xchg
sub
insb
test
jl
pop
sbb
push
jle
test
pushf
push
cmpsb
push
in
std
in
cmp
clc
mov
outsb
cmpsb
mov
int3
cli
rcrl
push
test
je
ds
xchg
sbbb
mov
mov
or
jmp
or
mov
cmp
add
mov
and
test
mov
fs
xor
xorl
xchg
aas
mov
and
in
sub
sahf
in
dec
inc
xlat
sahf
cmp
in
clc
or
test
lret
mov
xor
sub
dec
fucomi
adc
mov
shll
fwait
xor
dec
mov
mov
mov
mov
jae
test
sbb
cwtl
test
lods
jb
dec
push
in
sub
xor
sub
mov
xchg
movsl
gs
mov
push
jns
test
shl
call
fsubrs
lret
dec
inc
dec
stos
notb
sbb
push
or
dec
push
push
mov
aam
jnp
mov
cmp
hlt
mov
sbb
ret
xchg
jecxz
pusha
cmp
xlat
outsl
stc
xchg
jo
dec
push
pusha
aas
sbb
aad
jne
pop
decl
loope
sahf
imul
ficomps
lds
fistl
cmp
inc
fmull
pop
jnp
sbb
jmp
push
repz
jp,pn
add
fnstenv
mov
cli
rcr
das
mov
cmpsl
jl
dec
cld
loope
xchg
jns
adc
xchg
adc
das
test
jo
mov
js
js
stos
notl
sbb
aad
mov
test
xchg
push
test
iret
leave
push
clc
push
or
mov
call
xor
or
xchg
inc
pop
inc
add
sub
mov
bound
test
stc
test
dec
mov
or
divl
movsb
push
addb
lds
imulb
shrb
pop
cmp
add
es
or
sti
jg
and
cmpsl
push
arpl
icebp
les
pop
negb
pop
std
nop
js
sar
xchg
cltd
pop
addb
cmp
jmp
inc
ficoml
push
sub
pop
repnz
adc
adc
xor
lods
pop
in
cli
aaa
addr16
arpl
imull
push
sbb
jns
cli
lea
cld
xchg
pop
and
sbb
dec
cmpsb
push
fnstcw
jle
repz
scas
sub
in
incl
fimuls
or
inc
inc
xchg
mov
addr16
jae
mov
mov
aaa
sti
ret
pop
sub
dec
inc
xchg
dec
loope
dec
cld
push
or
xlat
xor
push
push
sub
xor
lock
arpl
inc
adc
inc
lahf
aam
jge
shll
aad
sbb
stc
mov
or
xchg
mov
push
orb
cmp
fsubrs
adc
imul
cmp
pop
clc
dec
sbb
cmp
mov
cmpsl
out
inc
xchg
gs
roll
inc
insl
add
cmp
mov
insl
outsl
popf
jbe
stos
sbb
ds
scas
lods
orb
jp
daa
mov
popa
mov
lcall
js
filds
inc
add
cmp
mov
cmp
cltd
jp
stos
jmp
dec
and
xor
jno
fidivl
add
testl
test
mov
mov
lret
ja
mov
push
cwtl
lods
mov
jns
int
sub
shl
ja
push
repz
cwtl
out
mov
dec
nop
arpl
mov
fiaddl
inc
jbe
push
inc
pop
pop
out
adc
imul
push
mov
jbe
sbb
xor
add
push
addr16
adc
jne
xor
cmp
stos
sbb
fcoml
cmp
xor
mov
out
sahf
inc
loop
aas
cltd
xor
in
movsb
and
mov
outsb
out
adc
loope
lahf
cmp
insb
clc
in
add
lods
lods
ss
xor
repnz
popa
loopne
push
out
aam
lock
popa
xor
stos
push
sbb
push
or
add
das
cmp
arpl
jno
pop
repnz
or
sbb
and
add
jb
daa
xchg
push
sbb
push
ret
mov
inc
add
xor
iret
mov
in
aas
dec
pop
leave
imul
jp
push
movsb
sbb
rcrl
or
mov
push
mov
lock
and
inc
fcoml
push
out
mov
ret
js
jecxz
loopne
mov
sbb
xor
inc
cmc
ret
imul
xchg
jo
sahf
xor
xor
xchg
scas
xchg
sti
sub
sub
mov
xor
ror
adc
jnp
push
push
adc
xor
sarl
xor
xchg
xchg
clc
add
jae
sbb
cli
push
mov
dec
iret
jge
jle
fadd
pop
jge
add
sahf
mov
lods
outsl
mov
js
add
push
in
pop
insb
push
rorb
cmp
fdivrs
inc
mov
aas
mov
mov
add
cmp
sub
imul
or
jl
out
mov
ficomps
push
xor
ss
xor
jbe
cli
push
sub
cltd
inc
xor
fdivs
push
jne
cmp
aas
dec
cmpsl
push
dec
fs
iret
push
cli
mov
pop
adc
shr
add
pop
das
mov
push
andb
add
push
outsb
sub
outsb
rol
inc
das
inc
int
mov
enter
inc
mov
and
and
push
movsl
mov
or
add
inc
mov
jo
scas
shlb
fistps
stos
ljmp
mov
or
sbb
push
pop
mov
mov
scas
sti
pop
and
mov
lahf
imul
inc
rorl
ficoml
mov
mov
xor
fucom
add
push
push
orl
xor
mov
aas
or
jecxz
and
push
cli
lods
dec
bnd
dec
pop
mov
mov
or
adc
mov
shrd
mov
mov
pusha
rcrb
jl
sarb
cmp
aas
adc
aaa
dec
cli
or
testb
sub
cwtl
mov
in
ret
call
sbb
lret
shll
into
gs
iret
cmp
adc
xchg
sti
cmp
adc
sub
dec
pop
sahf
inc
and
popa
lahf
lea
fstpl
repz
dec
fisttpll
mov
data16
enter
sub
inc
xchg
in
xchg
arpl
movb
int3
lock
fidivrs
test
mov
or
add
in
sub
xor
leave
cmc
adc
sub
leave
mov
rcrb
mov
pop
in
inc
mov
jnp
aas
and
or
das
popf
cmp
dec
xchg
fidivl
stos
mov
sbb
lods
insl
mov
call
icebp
and
call
leave
lret
mov
dec
popf
xor
pop
fsubrs
shll
test
pop
xlat
outsb
dec
loope
mov
pushf
xor
dec
ss
xchg
out
push
mov
dec
out
mov
aam
xor
inc
test
xor
mov
and
fsubrs
push
lahf
ss
ja
xchg
pushw
lcall
add
jno
dec
loope
push
iret
data16
mov
xchg
dec
adcb
loop
fs
popf
lods
bound
jb
inc
sub
loope
mov
jmp
movsb
xchg
cmp
jl
jbe
mov
icebp
aaa
adc
in
inc
sti
lods
cmpsl
fistps
dec
push
push
pop
cmp
cltd
std
inc
jecxz
inc
lock
and
leave
pushf
movups
mov
jecxz
mov
stos
imul
cmp
mov
insl
jge
push
dec
mov
sub
xchg
fnstcw
stos
and
adc
shlb
inc
fistpll
push
jno
adc
das
ret
jnp
rorb
sbb
adcb
jns
push
jecxz
dec
pop
mov
in
js
and
dec
adc
das
dec
rep
arpl
adc
push
sbb
jo
adc
repnz
imul
pop
pop
arpl
cmpsb
fdivr
cvtps2pd
and
rcrb
adc
mov
enter
stc
dec
push
jbe
pop
pop
stc
into
pop
mov
and
adc
testl
sub
jns
xchg
inc
mulb
xchg
xchg
jge
cvtps2pd
cmp
jle
cmc
add
jns
mov
push
sahf
sar
imull
rorb
inc
aas
rcr
mov
mov
jb
insl
test
dec
sbbb
pop
push
jbe
aad
outsl
mov
xor
hlt
jg
mov
jmp
mov
lret
in
lret
jno
jnp
push
push
push
inc
outsb
mov
lret
inc
sub
in
dec
mov
cltd
sbb
insl
fisttps
mov
xchg
insb
es
fwait
lods
inc
int
fs
rcrb
arpl
insb
outsl
mov
fdivl
mov
jbe
and
ja
lods
fisttpll
cmp
dec
xchg
imul
popf
mov
iret
jns
sahf
and
push
lods
lock
cmp
cmp
xor
aad
pop
mov
das
icebp
insb
cmp
mov
outsb
fsubrs
je
xor
es
cs
cltd
inc
in
mov
jg
insb
lods
fistl
dec
lcall
xchg
outsl
repz
adc
pop
lret
and
inc
pop
aad
fsubrs
mov
stos
mov
lret
mov
inc
sub
or
adc
jo
inc
pop
sbb
mov
jne
mov
call
mov
lea
sub
imul
mov
pusha
bnd
out
loop
push
adc
push
or
test
movsl
adc
mov
jnp
add
imul
lock
movsl
lea
inc
fcmovnbe
push
lea
push
loope
cltd
cmp
addb
out
loope
and
pop
and
push
push
jg
xor
mov
lret
aad
ss
aas
mov
mov
ja
loop
pop
fwait
pop
mov
sahf
bound
mov
in
mov
fists
subb
es
cmp
jnp
adc
sub
outsl
add
mov
insb
push
jmp
stc
repz
jb
sar
mov
push
inc
fsubrs
adc
int3
in
pop
cli
lea
mov
mov
pop
push
pop
mov
dec
fidivrs
adc
adc
shl
jno
or
fbld
mov
mov
popf
xchg
sub
mov
into
inc
mov
lret
jg
or
jne
push
pop
clc
xchg
or
push
pop
push
add
in
sti
fildl
mov
push
jns
jnp
adc
cmpb
hlt
int3
xchg
lcall
xchg
jp
mov
and
dec
mov
lahf
mov
add
mov
sarl
pop
mov
xchg
in
add
bound
push
fildll
mov
out
push
mov
ret
imul
lret
push
fstl
and
nop
stos
dec
lret
mov
icebp
and
pop
es
mov
jno
lods
inc
mov
outsb
testl
call
orb
mov
add
scas
pop
fwait
test
or
cltd
cmc
mov
pop
scas
xor
xor
hlt
shll
loopne
mov
movsl
push
mov
pop
pop
xor
push
pop
ljmp
jno
sahf
dec
adc
cmpsl
xchg
sbb
mov
pop
ljmp
jl
push
mov
xor
cld
imul
lahf
and
mov
test
and
aas
pop
jno
add
jne
mov
lcall
push
loop
and
gs
ljmp
push
or
mov
mov
lret
out
adc
js
test
shll
mov
sbb
inc
push
cltd
or
adc
adc
mov
sbb
mov
addr16
mov
inc
cmp
or
adc
adc
js
pop
outsl
jle
cmp
mov
add
imul
jns
mov
test
sarb
push
ss
mov
cltd
cmp
fisubl
sahf
xor
jl
out
lods
mov
andl
push
rorb
mov
push
ljmp
pop
rorl
sub
jp
fcomi
push
outsl
stos
cld
es
mov
mov
fcmovu
jb
lods
movsb
inc
adc
int
data16
or
jne
lret
sub
fsubp
imulb
push
scas
pop
data16
cmp
xor
imul
or
sbb
push
xchg
or
inc
insb
inc
xlat
addr16
lret
notb
out
add
adc
lcall
test
dec
pushf
push
mov
xchg
outsb
cmpsl
jne
mov
ja
xchg
jecxz
jno
adc
int
stc
lahf
out
rcrl
or
decl
and
add
dec
adc
inc
es
shr
sbb
pop
xor
mov
popf
loop
fsubrs
or
aaa
bound
bnd
sub
imul
adcb
cmp
and
cwtl
popl
das
loope
and
push
aam
dec
test
fstp
insb
sti
jbe
jne
ljmp
lock
mov
into
or
icebp
and
add
jbe
jge
jg
pop
cmc
fs
testl
mov
js
dec
aaa
jecxz
es
jmp
xor
sub
dec
insb
lcall
mov
add
add
jge
jns
cltd
ret
pop
jp
push
gs
and
test
and
cmp
dec
xor
mov
adc
push
pusha
push
dec
inc
add
add
sti
adc
jecxz
or
and
pushf
cmc
rclb
jge
push
jecxz
rcr
mov
and
mov
push
push
xchg
mov
dec
jae
imul
adcb
jb
gs
pop
mov
ljmp
pusha
mov
test
push
mov
cmp
fnstsw
and
int
sbb
push
and
adc
add
das
fwait
inc
mov
push
push
push
sti
mov
cmpxchg
mov
push
enter
ds
dec
sti
and
sahf
push
adc
ret
push
xchg
xor
xor
mov
mov
cmp
pop
call
cmp
sbb
shlb
xchg
aam
push
out
shl
out
mov
jne
scas
adc
arpl
add
push
mov
jbe
aad
jge
aam
xchg
mov
insb
lahf
in
in
lahf
out
inc
cmp
pop
cmc
lret
xor
je
sub
xchg
sbb
adc
mov
imul
pop
cmpsb
adc
in
subl
notl
mov
or
mov
sub
xchg
pop
xchg
scas
add
add
mov
sbb
cmpsl
sbbl
mov
out
outsb
add
xor
xchg
inc
jp
cmp
adc
cld
stc
jns
jnp
xchg
incb
dec
jnp
or
xchg
out
repnz
or
leave
mov
cmp
xchg
inc
push
cmc
push
mov
in
or
repz
and
xchg
jle
lcall
fucomip
pusha
jmp
movsl
rcr
jnp
sub
mov
pop
loop
jne
dec
add
sbb
xchg
cmp
push
jo
in
sub
pop
shrl
cmp
pop
jo
mov
push
mov
loopne
in
mov
call
jns
mov
lods
inc
mov
fcmove
testl
scas
call
fists
mov
mov
push
call
imul
sub
cmp
aaa
pop
ljmp
jmp
loopne
subl
stos
add
fst
mov
nop
in
lods
push
out
repz
shlb
icebp
into
and
or
sub
mov
gs
and
gs
ljmp
sub
outsb
sarb
mulb
push
lds
add
ljmp
dec
popa
and
int
mov
mov
xchg
xchg
mov
push
imul
add
cld
xchg
pop
leave
cs
cli
xchg
in
jnp
adc
inc
xor
es
jno
sbb
xor
mov
mov
fld
adc
lods
lea
jae
rcrb
lahf
inc
rcr
add
out
push
push
in
negl
lea
adc
add
decl
xchg
mov
fwait
sbb
decl
sbb
aad
xchg
mov
arpl
or
into
inc
lcall
jae
lods
sub
inc
pop
mov
arpl
mov
mov
xlat
dec
pop
lea
ljmpw
pop
ja
cmp
loope
pop
call
psadbw
daa
inc
imul
sub
mov
and
jae
rorl
push
div
stc
ss
pushf
scas
shrb
cmc
sub
clc
test
sub
cmp
or
mov
arpl
cmpsb
testb
inc
ja
jbe
mov
push
fwait
mov
pop
insl
mov
xor
mov
cmpl
or
cltd
roll
mov
fsubs
mov
inc
xchg
mov
jge
and
pop
out
dec
ret
andl
xchg
movsb
cmp
mov
jno
mov
jle
out
rorl
call
adcl
cmc
or
mov
es
or
push
mov
repz
lret
jbe
std
int
xor
test
jp
push
or
mov
push
adc
sub
xchg
mov
les
lds
and
fwait
push
xor
in
lret
pop
hlt
cld
sbb
fcoms
imul
xchg
mov
dec
call
ret
pop
adc
loope
xor
push
adc
sti
sub
adc
out
or
dec
cli
mov
mov
aad
and
pop
jecxz
mov
push
cmp
dec
cmp
jb
iret
xchg
pop
jp
pusha
popf
push
sbb
sbbb
sahf
lret
lahf
or
mov
movsb
stc
lds
cmp
xlat
pop
xorb
jg
fistpll
lcall
or
pop
mov
dec
or
jne
fnsave
push
sub
mov
xor
mov
aad
jp
add
ja
cmp
cld
xlat
rcl
jl
add
or
dec
mov
insb
xchg
dec
test
jle
emms
push
dec
mov
xchg
les
lods
pop
js
mov
mov
lds
sti
jno
pop
jge
cmp
pop
ds
mov
jle
cmp
shrl
out
lods
cs
sub
sub
sub
xor
nop
int
mov
inc
arpl
and
test
cld
inc
jne
outsl
pop
bound
add
cmp
cltd
fidivs
cli
stc
nop
adc
setp
outsl
cmp
adc
pop
pop
sarl
cld
mov
mov
mov
negl
mov
loop
xlat
xchg
fwait
out
aam
fnstenv
aas
decl
sub
dec
in
jmp
mov
jg
mov
cmovge
clc
xchg
pop
shrl
iret
jecxz
stc
repz
clc
sub
jecxz
hlt
push
loope
inc
es
and
inc
or
adc
jb
dec
xchg
mov
mov
out
sbb
aad
outsl
imul
ret
or
dec
inc
xchg
sbb
pop
cmp
push
hlt
int
mov
js
leave
shrb
jns
push
hlt
ja
jb
xor
jnp
xchg
and
mov
sbb
dec
jae
mov
jle
add
cmc
into
xchg
or
into
cmp
or
adc
sub
fcmove
lods
pop
jl
push
icebp
push
xor
xor
out
mov
sub
imul
andl
imul
mov
mov
sbb
stos
inc
jnp
mov
fs
and
fidivl
jp
jb
push
hlt
lock
inc
mov
sahf
repz
addb
xchg
sbb
je
stos
std
jne
sub
xor
repz
lret
mov
xlat
adc
push
in
lcall
xchg
jmp
add
popa
jns
xchg
push
data16
out
es
imul
stos
inc
rol
inc
pusha
add
push
stos
mov
ficomps
push
push
in
out
add
add
push
shl
inc
fldt
mov
cmp
stc
mov
aam
mov
xor
popa
cmp
bound
hlt
les
dec
jo
andb
sbb
rcll
push
int
mov
daa
das
mov
adc
pop
mov
dec
fildl
ljmp
in
imul
pop
sbb
adc
xor
movsb
leave
scas
inc
mov
int
test
lahf
adc
lret
stc
adc
cmp
jb
push
pop
repnz
pop
cmc
fnstcw
or
shr
shlb
sbbl
rcr
xchg
sbb
mov
cli
nop
repnz
shll
lret
jb
loop
sbb
ds
push
add
sub
popw
sub
negb
mov
push
dec
rorl
mov
xchg
or
lods
int3
aas
dec
rcr
jp
and
popf
lods
repz
mov
sub
outsl
mov
dec
data16
dec
dec
fisttps
movsl
xchg
inc
shl
xchg
add
loop
pop
lods
mov
and
into
adc
mul
jnp
adc
lcall
pop
pop
mov
mov
out
lock
jb
mov
cmp
mov
into
inc
xchg
mov
mov
test
push
xchg
mov
or
push
in
jle
and
jg
jb
adc
pop
xchg
xchg
add
xchg
add
push
sub
stc
or
cmp
xchg
pop
lods
movzbl
sbb
sbb
scas
dec
add
arpl
and
push
rcrb
adc
int3
mov
mov
mov
push
and
sbb
ds
xlat
and
pop
loope
loope
add
scas
add
andl
inc
out
xchg
sbb
pop
out
xor
sub
xchg
lahf
dec
fdivrp
push
dec
and
daa
outsl
fisttpll
gs
jns
pushf
mov
xchg
dec
aas
daa
vmread
jnp
xchg
jae
jl
xor
push
enter
enter
cld
dec
mov
popa
add
push
sti
cmp
sub
dec
nop
pop
stc
xchg
decb
push
push
cmp
or
sbb
adc
inc
cmp
imul
movsb
xor
cmp
cmp
mov
out
mov
mov
adc
push
int
subb
xchg
sbb
sub
sub
and
mov
cmpsb
mov
jb
dec
out
sbb
jp
mov
add
inc
lock
test
neg
inc
xchg
sbbl
or
pop
leave
jle
sti
insb
sub
inc
cmp
pop
jmp
aas
sbb
jo
pop
bound
lret
in
mov
xchg
push
push
cli
iret
dec
dec
jbe
sbb
mov
mov
shlb
jne
outsl
or
loop
gs
test
cmpsl
test
jbe
mov
jle
dec
sub
push
xorb
into
cmc
cwtl
sbb
pop
xchg
mov
jl
aas
cmp
sahf
js
pusha
adc
lds
lods
sub
fisttpll
loop
jne
outsl
cmpsl
adc
outsb
add
addr16
mov
imulb
fiaddl
cmpsl
cmp
inc
cs
lahf
sub
or
testl
inc
outsb
fdivl
mov
adcb
nop
lea
jb
sbb
pop
call
movsl
mov
jns
xlat
push
lcall
cmpsl
cld
push
in
push
jl
adc
gs
xchg
fsubrp
incb
mov
nop
fcomp
cmc
js
dec
pop
je
add
and
fs
repz
ljmp
fstl
lea
adc
mov
fiadds
int
and
push
xchg
sub
xchg
jnp
mov
cmpsb
call
shrl
gs
adc
jmp
jno
jg
add
xchg
insb
jnp
cmpsl
sub
fsubs
add
lret
shll
rcrb
add
cmp
imul
pop
scas
xchg
test
std
push
xor
mov
out
nop
iret
dec
rorl
pop
mov
xchg
jecxz
lret
push
pop
xor
in
idivb
cmpsl
pop
add
enter
mov
or
sub
jle
jecxz
dec
shrl
pop
or
lea
pop
lock
mov
aad
bound
mov
iret
sbb
repnz
outsl
mov
call
xor
daa
xchg
sub
in
test
data16
push
pop
cmp
fisubs
jno
shl
imul
mov
xor
push
xchg
sub
lret
cld
jg
jbe
sbb
push
fsub
in
dec
push
push
popa
clc
jo
mov
daa
mov
xchg
jg
out
xor
xchg
cmpl
pop
mov
sub
fistpl
jl
ds
insb
xor
fs
jo
and
mov
jbe
dec
jae
mov
push
fs
jne
sub
dec
adc
loop
in
push
lds
test
jbe
sub
inc
cmpsb
sub
sub
pop
push
mov
mov
push
adc
cvtps2pi
dec
scas
and
lahf
xor
cmpb
lods
pop
cwtl
das
dec
fcompl
iret
mov
push
adc
icebp
mov
xchg
out
lods
pop
mov
push
lods
cld
cmc
shlb
popa
inc
or
push
xor
cmpxchg
ficoms
mov
fcomps
jb
sub
mov
out
xchg
push
in
add
jo
cmp
inc
mov
jbe
loopne
loopne
sub
cmp
xlat
jp
mov
ret
mov
es
inc
sahf
lea
sbb
les
xchg
push
imul
sub
cmpsb
xor
test
cwtl
fs
rolb
mov
aad
arpl
dec
ljmp
subb
xlat
or
outsb
std
outsl
jmp
repz
pop
cmp
cmp
xchg
fimuls
lret
lret
aaa
push
adc
jp
shl
mov
mov
loope
aas
xchg
inc
sub
imul
bound
pop
push
sub
or
rcll
mov
xchg
pusha
mov
mov
xchg
xchg
out
cmp
loope
lds
shl
or
mov
aam
test
xchg
mov
or
cs
xor
ljmp
adc
adc
jmp
lock
jecxz
add
das
xchg
pop
jecxz
mov
and
pop
push
std
jo
inc
into
xchg
out
stc
repnz
nop
outsb
xor
stos
bound
xor
push
adc
call
cmp
or
pop
pop
xchg
jo
mov
pop
mov
sbb
bound
aas
push
jle
jp
enter
fildll
xchg
jle
and
pop
adc
or
mov
sub
xchg
mov
adcl
adc
test
stos
jmp
dec
pop
cmpsb
idivb
mov
movl
dec
ret
hlt
outsl
mov
inc
sahf
mov
loope
out
stc
aaa
into
push
out
xorb
xorl
push
or
pop
mov
push
mov
popf
rorl
adc
in
outsb
addr16
push
sbb
aam
and
jno
fnstenv
push
pushf
jnp
mov
push
cltd
cmpsl
test
dec
xor
and
stos
xor
fldl
adcl
mov
jmp
and
andl
xchg
mov
in
pop
hlt
sbb
push
hlt
push
fiadds
fisubs
add
clc
pop
mov
mulb
js
cld
stos
cli
cld
fwait
lock
lcall
adcb
push
sub
test
inc
mov
repnz
rcrl
dec
pop
sbb
shrb
inc
mov
js
sub
mov
fldt
xchg
mov
xor
shlb
xchg
dec
sub
fistpl
mov
ficomps
mov
adc
pusha
xchg
push
inc
movsb
test
xchg
add
scas
inc
fdivrs
int
movsl
lahf
mov
mov
mov
loopne
pop
fidivrs
fnstsw
test
push
adc
stos
loope
rorb
stc
xchg
mov
dec
outsl
jne
js
cmp
dec
lcall
mov
push
xchg
pop
fiadds
push
repnz
push
mov
shrl
cltd
lods
pop
call
sti
inc
outsl
daa
loope
rorl
pop
jmp
add
in
sbb
jae
or
push
hlt
pop
push
sbb
jns
enter
movsb
mov
loope
inc
insl
dec
aam
mov
xor
in
mov
adc
mov
and
mov
jb
push
lahf
jae
pop
sub
iret
pop
jns
push
push
fisubrs
or
gs
in
aad
lret
or
loop
ljmp
imul
gs
and
dec
sub
or
test
cmp
clc
jmp
mov
dec
lods
cmp
ja
and
rcrl
jno
cs
inc
cmp
fnsave
push
out
sub
icebp
jle
xor
pop
outsl
xchg
fbstp
push
fidivl
xor
lret
mov
mov
push
fwait
mov
shll
imul
pop
lods
out
icebp
mov
stc
mov
clc
scas
pop
and
fldl
push
xor
int3
mov
scas
pop
mov
iret
sti
xchg
or
xor
cmpsl
lods
add
lret
fmuls
mov
xchg
aaa
mov
and
aas
cmp
cmc
xchg
dec
and
fs
fbld
inc
jmp
scas
adc
and
add
popa
into
mov
pop
setae
mov
sbb
jo
sahf
in
dec
adc
lods
mov
fsubs
out
mov
lret
int
gs
dec
sbb
and
repnz
aad
pop
aad
mov
push
xorb
ja
popf
add
insb
clc
and
sahf
cmpsl
call
inc
fidivs
stos
imul
cltd
cwtl
stos
mov
scas
mov
ljmp
mov
jge
inc
sub
xor
add
mov
in
xchg
sub
adc
pop
hlt
mov
lods
push
pop
divb
enter
jge
addr16
pop
inc
lods
shl
push
and
or
jmp
and
push
mov
bnd
ja
sbb
int3
xor
pop
scas
inc
jp
or
push
mov
push
fucomi
mov
jge
xorb
mov
mov
adc
jae
mov
mov
cmp
inc
xchg
cmp
negb
pop
loopne
pop
mov
push
call
mov
clc
leave
cmpsb
lret
es
and
mov
cli
mov
data16
push
xchg
pop
inc
mov
push
lret
and
sub
out
cld
sbbl
cmp
jge
cmp
insb
xor
adc
sub
divb
arpl
incl
cltd
jl
sbb
movsb
jmp
in
cmp
xchg
nop
or
ret
pushf
popa
jmp
sbb
sbb
sub
hlt
and
adc
loopne
sbb
sti
dec
out
mov
sbb
std
xor
dec
aad
fmull
aaa
adc
jg
mov
cmc
lcall
inc
mov
mov
xchg
psubq
je
lcall
sub
imul
jmp
cmp
ds
in
inc
jno
inc
pop
repz
push
outsl
out
call
or
cld
out
test
fldl
jo
dec
imul
add
inc
mov
and
leave
mov
or
jecxz
fcompl
adc
jmp
sub
sub
pop
xor
mov
pop
scas
test
lds
loope
lods
sbb
xor
pusha
ficoms
test
scas
ds
testb
mov
adc
mov
rorl
imul
pop
jp
xor
mov
repz
jo
hlt
nop
push
shl
mov
out
gs
sub
fmull
xlat
leave
pop
mov
ja
aad
push
js
jecxz
ja
lret
mov
decb
mov
lret
ja
adc
aam
adc
in
in
push
das
rcrb
mov
mov
or
lods
dec
and
jns
fisttpl
stos
pop
cmp
shrl
pushf
mov
adc
push
mov
insb
lea
data16
rol
dec
mov
aaa
pop
int
mov
jnp
jne
dec
jmp
aas
dec
adc
lea
push
jl
stos
mov
or
push
sbb
adc
ss
mov
cs
add
aam
sub
mov
loope
cli
sbb
or
repz
cmpsl
sub
adcl
or
sbb
ffree
jp
repnz
mov
ss
cmp
or
jne
cltd
add
mov
mov
xchg
xor
psadbw
push
mov
sub
popa
cmpb
mov
sbb
sub
adc
mov
das
loope
mov
and
sbb
jno
jo
push
stos
mov
sbb
sub
jg
xchg
aas
sbb
adcl
xor
clc
inc
imul
fbstp
call
jl
test
incl
adc
add
daa
out
push
ret
push
shrb
loope
and
stos
scas
dec
jo
sub
imul
mov
push
call
xchg
leave
test
fistpll
mov
test
pop
pop
movsb
sbb
jmp
adc
shrb
dec
movsb
mov
sub
popa
push
push
out
pop
nop
xchg
sub
mov
inc
push
and
push
cmp
cwtl
mov
mov
gs
or
cmp
sti
push
icebp
pop
out
std
xchg
inc
js
mov
pop
mov
adc
out
or
outsl
sub
add
loopne
add
inc
jmp
push
in
sarb
cli
lock
inc
cmp
mov
lods
adc
test
pusha
int
push
insb
fistpll
popf
stc
icebp
sub
or
loopne
xchg
pop
jge
outsb
add
mov
push
in
std
insb
lret
xor
adc
inc
pop
xor
sub
fldt
andb
pop
loopne
push
iret
arpl
pop
jae
push
divb
lret
cmp
mov
aad
repnz
mov
mov
add
pop
mov
sub
xchg
pop
adc
cmpsl
inc
or
je
and
in
push
fldl
test
mov
sbb
lock
insb
mov
mulb
and
out
insl
popf
pop
xor
ret
shrb
inc
or
andl
mov
push
notl
inc
fidivs
popf
and
and
jmp
out
inc
lahf
pop
loopne
xorb
daa
mov
cmc
shrb
addr16
mov
xchg
mov
mov
xorl
imul
lock
mov
xor
cmp
cmp
mov
push
push
mov
adc
and
rcrl
inc
bound
mov
fcmovnb
push
mov
ret
cmp
pop
outsb
fcmovb
shll
in
aam
inc
arpl
mov
fnsave
and
jne
mov
pop
mov
mov
lds
pop
repnz
push
dec
popa
dec
loopne
aaa
pop
jg
mov
push
roll
fsubrs
or
cli
sbb
sbb
daa
daa
sti
cmp
sub
jmp
clc
addr16
xlat
fs
seta
cs
mov
lea
arpl
sti
mov
inc
andb
leave
test
orb
negl
xchg
stc
add
out
aas
xchg
inc
lods
push
insl
sub
enter
ss
rcr
mov
xor
sbb
adc
dec
leave
mov
pop
xchg
iret
je
add
xchg
mov
and
outsl
sbb
in
push
imul
icebp
push
outsl
daa
dec
cmp
fsub
aam
mov
sbb
popa
mov
mull
dec
popa
jg
mov
xchg
add
loope
insl
rcrl
mov
mov
clc
sub
push
mov
add
sub
lods
imul
inc
adc
mov
xchg
sub
or
mov
stos
inc
out
mov
cld
out
lret
pop
test
arpl
adcb
push
lods
out
lods
inc
fisttps
sbb
xor
insb
mov
test
ret
pop
aad
insl
inc
jmp
ret
sbb
sbb
mov
insl
subb
lcall
pop
mov
gs
mov
ret
pop
fwait
pop
xlat
insl
sub
sbb
mov
and
pop
push
rol
fcmovnb
xchg
pop
ret
out
jae
dec
incl
fwait
push
cltd
in
cs
icebp
sbb
push
cmp
sbb
jns
into
and
mov
push
adc
jno
cmpsb
dec
daa
xorl
inc
mov
xchg
enter
mov
js
ja
clc
imul
clc
mov
mov
push
jae
mov
pop
shlb
mov
aas
cmpb
lds
xadd
cmp
adc
mov
jne
push
in
movsl
das
test
cmp
adc
inc
push
nop
repnz
or
addr16
out
adc
or
out
ljmp
stos
mov
mov
cmpsl
jo,pt
outsb
inc
into
adc
cmc
pop
pushf
rol
fsubrl
es
shrl
add
out
das
push
aam
imul
mov
add
int
test
fisubl
adc
adc
loopne
jbe
and
mov
inc
ds
or
xchg
sub
mov
cmp
push
jle
dec
cmp
sub
cmp
adc
fs
sbb
cmp
pop
push
pusha
dec
and
push
std
cmpsl
ds
jne
jnp
xchg
kandnw
stos
je
fcomi
sub
pop
add
call
pop
out
cmpsb
sti
jbe
inc
dec
pop
lds
pusha
sbb
in
loope
pop
aaa
stos
cwtl
pop
dec
and
ret
pop
cmp
xor
and
jle
push
sub
pop
xchg
test
dec
gs
jmp
jl
js
add
mov
xor
mov
jge
sti
das
insb
sbb
pop
divb
jge
cs
or
mov
shlb
pushf
push
cmp
sub
mov
mov
sbb
call
ja
push
dec
push
outsb
lret
jmp
test
pushf
ss
stos
add
jb
lret
pushf
cmp
and
push
push
dec
nop
pop
iret
pop
xor
sub
or
aas
xchg
pusha
stos
int3
xchg
hlt
lret
pop
push
sub
push
mov
or
js
sbb
fwait
pop
xor
adc
xchg
push
or
ljmp
cmc
fisubrs
or
lahf
or
aas
pop
mov
adc
lds
xchg
sub
outsb
push
sub
lods
mov
push
mov
adc
or
push
fnsave
xchg
test
scas
call
pop
sub
test
adc
dec
fnsave
outsl
mov
mov
and
sahf
push
xchg
inc
pusha
ss
sahf
jno
inc
inc
xor
and
jnp
mov
pop
out
sbb
pop
dec
push
or
sub
mov
dec
fistpll
mov
add
jmp
xor
mov
js
push
imulb
pushf
add
or
inc
lret
push
rcrl
ffree
jl
mov
lfs
dec
jecxz
adc
pusha
outsb
jl
sub
dec
cmc
test
test
movsb
adc
xor
mov
sti
loope
lods
xchg
xchg
jl
push
cmp
add
sti
outsb
stos
dec
push
xchg
push
sbb
sbb
adcl
ret
incb
out
in
mov
add
inc
movsb
loop
out
mov
js
repnz
xor
push
bound
mov
loopne
mov
cmp
fldenv
mov
ljmp
in
push
inc
aas
fidivl
ret
hlt
and
aaa
mov
pop
imul
frstor
inc
pop
jg
push
ljmp
icebp
movl
mov
aam
sbb
stc
movsb
ds
and
inc
jbe
xchg
mov
or
mov
mov
mov
pusha
js
fxch
imul
inc
inc
lods
outsb
out
pop
xchg
or
hlt
mov
xchg
fstpt
dec
data16
rcrl
push
mov
fnstenv
inc
mov
in
lret
mov
push
in
sbb
stos
es
mov
inc
cmp
or
mov
pop
icebp
incb
and
sbb
and
xor
pusha
and
cs
pop
mov
repz
popf
sub
idiv
xchg
cmp
jecxz
aad
xor
shl
pop
loopne
adc
add
add
sbb
jmp
scas
cld
cli
mov
or
xchg
add
mov
sbb
dec
ja
pop
stos
iret
xchg
test
mov
sub
repnz
arpl
lahf
adc
mov
lods
ljmp
leave
pusha
mov
push
mov
mov
mov
mov
fisttpll
fwait
sub
jbe
leave
xor
je
adc
mov
jo
pop
ficoms
sub
push
addr16
pop
inc
cwtl
dec
dec
stos
in
fcompl
nop
sti
ja
cmp
dec
sti
aaa
roll
iret
std
cmp
fimull
cmp
cli
mov
clc
and
js
xchg
push
xchg
pushf
xor
and
aam
sti
call
inc
add
adc
imul
dec
pop
popa
dec
inc
jle
loope,pn
xchg
sti
cld
jmp
sbb
and
call
cmpsl
imul
pop
mov
mov
xchg
cmc
xchg
dec
fsubrl
mov
mov
fucomp
negl
fwait
inc
pop
cmc
mov
shr
stos
push
mov
in
movsl
or
pop
pop
xchg
testb
dec
popf
shrl
or
lods
lods
push
push
push
test
dec
aas
sahf
lods
adc
std
or
cmp
push
call
rol
dec
or
and
or
negb
push
loop
lret
and
pop
push
repz
outsl
or
popf
xor
pop
insl
push
mov
mov
aam
cmpsl
in
loope
pop
mov
push
add
lods
push
sbb
xchg
mov
add
or
lock
push
lahf
sub
xchg
mov
leave
sub
das
outsb
mov
pop
jnp
test
pop
dec
hlt
lds
push
push
pop
sub
sub
cmp
std
push
imul
or
sarl
add
pop
in
movsl
popf
sub
dec
fwait
xor
dec
movsl
cmpsl
fwait
fs
push
cwtl
test
ja
fdivs
je
mov
pop
movsb
pushf
mov
and
mov
test
xchg
cmp
roll
daa
jl
push
xchg
mov
shrb
dec
lret
mov
jmp
or
push
adc
lods
jno
dec
jno
cmp
sarl
mov
adc
out
popf
popf
mov
xlat
mov
adc
out
rcrb
addb
xor
js
xor
les
add
mov
jne
sbb
pop
jo
inc
and
mov
dec
int
xor
and
and
inc
pop
hlt
cwtl
and
push
xchg
inc
mov
jnp
loope
sbb
push
out
je
or
cmp
or
out
mov
mov
fdivl
insl
mov
mov
ret
sbb
xchg
fwait
sub
out
subb
in
js
inc
and
enter
mov
roll
sbb
pop
jecxz
enter
or
xchg
sbb
aam
mov
xor
test
loopw
ss
inc
jae
in
sahf
cld
popa
sbb
arpl
pop
mov
xlat
xchg
and
mov
sub
ja
enter
sbb
pop
dec
sbb
lock
into
or
fs
mov
push
in
pop
fstps
jmp
cld
add
out
cmc
sbb
sbb
sbb
xchg
jecxz
outsl
push
sti
jl
or
sbb
pushf
and
leave
jmp
dec
into
mov
mov
fnstcw
sbb
push
sahf
xor
js
add
aam
mov
popf
fsubrs
or
mov
out
lret
cmp
mov
mov
dec
pop
push
dec
sbb
lret
arpl
call
into
dec
idivb
movsb
inc
jns
pop
scas
scas
lcall
ja
or
push
dec
mov
sbb
add
popa
stos
dec
pop
xor
dec
mov
int
stos
sub
push
cld
inc
sub
cmp
pop
dec
push
xchg
sub
cli
icebp
mov
or
mov
idivb
dec
and
adcb
js
and
fisubrl
sbb
pop
popf
xor
aad
and
cltd
frstor
jle
push
loope
bound
add
and
push
lahf
movsb
jmp
stc
jg
cmp
jo
in
sahf
subb
rcl
mov
sbb
sqrtps
mov
pusha
jae
pop
push
popf
sbbl
ret
aaa
out
pop
cmp
sbb
push
adc
mov
pop
mov
inc
incb
cmp
icebp
mov
fdivrs
dec
inc
or
lahf
mov
xchg
cmp
ret
dec
dec
xor
subb
test
fstl
xchg
push
int
pop
mov
pop
fstpt
xchg
or
cmpsb
movl
mov
pop
adc
jg
jg
mov
bound
loope
das
push
out
rol
jno
sbb
inc
jp
cli
mov
adc
lcall
shll
mov
insl
rorb
fs
fmuls
gs
inc
cs
or
scas
mov
shrl
inc
mulb
int3
xchg
das
pusha
arpl
sbb
mov
rorl
pop
mov
fstps
cmp
sub
push
insl
xchg
push
mov
cmp
or
and
mov
movsl
into
sti
mov
cltd
lcall
xor
dec
inc
imul
inc
push
cmp
ret
jge
sub
mov
imul
aaa
pop
scas
sbb
jmp
add
in
lea
imul
mov
sub
or
jne
popf
lods
les
outsl
daa
push
iret
lods
add
xor
out
push
cmpsb
pop
push
and
mov
cmp
insl
cmpsl
add
in
pop
sub
jl
mov
sub
loopne
pop
push
dec
xor
sub
mov
sbbb
add
mov
les
rcl
sub
sahf
jno
mov
ficoms
bndstx
adc
xor
ret
in
push
mov
push
push
out
std
push
xchg
bound
xor
repz
cvtps2pd
jge
push
sbb
aaa
ss
dec
mov
mov
xor
lock
mov
add
push
lahf
adc
xor
das
push
or
fimuls
pop
lock
lods
aaa
cmp
shrb
push
cmp
dec
jecxz
mov
xchg
jno
or
jp
mov
ret
mov
adc
lcall
lret
rclb
or
cmpsb
addr16
imul
fisubrs
jge
xchg
popf
nop
repz
jmp
inc
sbb
inc
dec
mov
shl
dec
mov
hlt
rcrb
cs
fcoms
or
scas
aas
imul
cmpsl
sbb
rorb
adc
addl
fwait
xchg
ss
sti
in
push
cmp
in
jae
sub
rorl
pop
into
subb
sarl
imul
fwait
sti
xor
push
jl
into
sbb
cs
or
push
pushf
add
clc
mov
sbb
sub
popa
xchg
lahf
sbb
into
gs
cmp
jne
out
mov
loope
aaa
lea
nop
mov
fwait
mov
out
pop
cmpsb
add
fdivrs
shrl
xchg
ret
repz
cmp
fbstp
sarl
and
jb
xchg
mov
sbb
inc
mov
test
int
sarl
outsb
sbb
and
sub
jle
sbbb
call
scas
ljmp
mov
mov
pop
lret
adc
mov
mov
jle
mov
xchg
xchg
inc
ffree
add
and
cmp
in
nop
lods
test
sub
mov
or
aas
xchg
inc
popa
les
test
popf
cmpb
jp
leave
or
popf
icebp
cmp
or
mov
push
sbb
fwait
sub
pop
cmp
sub
loopne
xchg
pop
and
lcall
add
test
movsb
stos
dec
ret
imull
pop
add
out
xchg
sbb
fstpl
dec
xchg
sbb
adc
mov
push
outsb
sbb
sbb
adcb
ret
xor
xlat
dec
lock
std
or
imul
mov
sub
or
scas
jge
push
inc
js
fwait
mov
stos
push
sub
psrlq
adc
push
inc
xor
push
xchg
inc
int
pop
hlt
mov
aaa
inc
scas
pop
fucomp
pop
cli
inc
inc
sub
mov
rolb
sahf
cld
lcall
in
stos
hlt
fisttps
adc
and
pop
stc
push
cmp
insl
xor
mov
fldt
sbb
jne
mov
xchg
and
inc
push
ret
fsts
push
inc
adc
xor
jns
jb
mov
adc
xor
sti
pop
xchg
adc
or
mov
shll
jb
pop
jno
test
inc
inc
sbb
mov
adc
imul
sbbb
inc
out
mov
lret
hlt
movsb
jmp
push
mov
xchg
aaa
pop
inc
pop
and
fisubrl
mov
sahf
sub
fstl
push
lods
xchg
andb
test
adc
sub
js
ljmp
jnp
sub
lods
stos
shll
adc
mov
jnp
arpl
into
mov
in
mov
adcl
scas
pusha
lret
push
push
sub
negl
adc
imul
mov
or
je
scas
bound
dec
repz
mov
inc
ljmp
mov
mov
rcrl
inc
out
sarb
into
mov
ja
sub
out
cli
push
xchg
sbb
and
repz
cmp
inc
mov
adc
out
cmp
push
fwait
repnz
push
xchg
dec
loope
xchg
sub
lret
xor
cld
out
ret
roll
out
adcb
out
cld
xor
xor
push
loop
pusha
rcrb
mov
pop
adc
sub
adc
cmp
stos
sbbl
inc
mov
pop
mov
sub
in
shll
mov
add
jns
inc
dec
push
adc
xor
sti
xchg
push
xor
mov
and
stc
in
bound
inc
jecxz
sub
lods
push
jae
dec
scas
ds
in
mov
pushf
add
cmp
pop
mov
jl
sub
insl
insl
outsl
pop
jecxz
shll
mov
lahf
scas
scas
mov
pop
stos
lret
jb
hlt
movsl
addr16
jecxz
nop
and
insb
lret
push
addr16
push
sub
push
cmc
adc
lds
and
add
xor
fs
addr16
and
jae
push
out
inc
jb
pop
addr16
arpl
inc
popf
and
inc
push
fsts
xorl
cs
ret
mov
adc
jbe
lret
aaa
cmp
push
test
lds
mov
mov
mov
mov
inc
rolb
jg
ljmp
jo
push
push
push
cltd
xor
pop
stc
mov
push
popf
das
sub
fisubrl
add
lcall
sbb
ret
addr16
mov
inc
inc
push
ficoms
push
shlb
mov
es
adc
test
fnstsw
push
aaa
cli
or
sbb
cmp
sub
test
scas
std
js
sub
mov
insl
scas
ret
ret
xchg
lods
or
mov
sub
mov
cmp
insb
enter
adc
jnp
insb
cmp
adc
out
and
loope
pop
outsb
insl
sub
sbb
sar
push
inc
mov
cwtl
xor
push
fs
jp
mov
stc
test
and
mov
push
sbb
andl
push
mov
cltd
popa
and
sub
sub
jg
mov
addb
popa
sbb
sbb
jl
mov
pop
pop
jbe
addb
pop
jmp
leave
loopne
sub
jo
hlt
inc
dec
push
in
pop
cmpsl
mov
lret
mov
adc
sbb
mov
or
sbb
add
cwtl
push
jle
jno
jae
or
or
stos
sbb
addr16
fs
stos
rcr
pop
jbe
repz
mov
sbb
push
push
hlt
lock
stc
scas
and
jbe
xor
xor
mov
pop
das
outsl
sub
sub
cmp
ret
clc
ficompl
cmpsl
int3
rcrb
and
and
lock
pop
insb
mov
adc
mov
stc
pop
outsl
dec
sbb
shrl
into
pop
add
inc
mov
pop
xlat
cwtl
dec
mov
jne
inc
fstpt
out
fcmovnu
pop
lods
xor
mov
pushf
scas
aam
ljmp
push
data16
xor
push
jbe
adc
mov
fadd
dec
pop
push
mov
pop
stc
mov
in
push
xchg
mov
das
addr16
xchg
imul
and
hlt
repz
xchg
sub
push
add
js
fdivrs
push
scas
cld
pslld
mov
jne
pop
mov
lret
adc
je
xchg
sahf
out
bound
test
xor
std
inc
aam
mov
xchg
fwait
rorb
inc
mov
mov
out
incb
loope
push
and
pusha
test
pop
push
mov
jle
dec
sub
add
mov
mov
and
mov
cmpsl
arpl
push
lret
in
sub
shr
jmp
pushf
xchg
mov
cld
fldt
sub
inc
leave
mov
in
dec
aad
add
pop
vcmpsd
dec
sub
and
jmp
in
inc
push
inc
add
mov
sbb
int
fisubl
cmpsl
adc
inc
call
fstpl
push
fisttpll
mov
outsb
and
push
clc
pop
aad
xor
loopne
push
mov
out
rcr
movsl
aaa
test
jne
lds
icebp
cs
mov
sub
stc
mov
push
es
adc
mov
jl
cmp
roll
dec
mov
sub
sub
pop
lcall
imul
xor
pop
fsubrl
or
sub
pop
add
divl
inc
push
pop
into
sar
dec
mov
pop
in
sub
cmp
addr16
cmpsb
fxch
sbb
lock
inc
sub
ja
jae
dec
test
ja
fisubrl
fisubrs
clc
cmpsb
push
or
xchg
aas
loope
inc
lahf
push
ds
or
mov
aas
pop
imul
mov
xor
lcall
or
sbb
jecxz
leave
fnstenv
call
and
push
in
and
in
mov
cmp
std
frndint
cli
rorb
mov
and
push
jecxz
mov
xchg
imul
lods
adc
mov
sahf
mov
fidivrs
stos
mov
cmp
sub
ret
sbbl
xchg
int
mov
mov
adc
je
cmp
stc
push
mov
pop
add
shll
jne
pusha
loope
sbb
mov
pop
cltd
arpl
into
mov
mov
and
adc
jnp
mov
cmp
push
pop
repnz
stc
xchg
sub
inc
jns
cmpsb
pop
out
into
xchg
fisttpll
mov
hlt
hlt
sbb
and
test
jecxz
adc
cmc
int
push
pop
sub
ret
in
sub
xchg
pushl
xchg
and
je
mov
mov
add
notb
or
jbe
insl
mov
push
out
xor
fimuls
dec
ljmp
popl
in
xor
pop
negb
push
mov
fistpl
lods
inc
mov
fnstcw
fldenv
movsb
add
ja
ret
lods
mov
push
jl
mov
mov
mov
aad
jle
shrl
mov
sbb
sub
jae
sbbb
das
sbb
mov
loop
popl
stos
fadd
lock
jg
sub
loop
mov
mov
outsb
std
scas
bound
mov
mov
int
lahf
adc
aam
lahf
xor
shlb
mov
xor
sarl
ret
or
jae
stos
xchg
js
stc
andb
dec
movsl
sti
inc
dec
mov
jmp
ret
jmp
dec
loopne
imul
xchg
cmp
hlt
sub
jb
aaa
pop
in
pop
nop
bound
leave
inc
cmpsl
vpshufhw
mov
out
sub
enter
loope
adc
push
adc
sbb
dec
loop
rcl
jge
mov
es
adc
jp
push
in
insb
aas
mov
jno
je
ficoml
add
adc
ljmp
fstps
fnstcw
jle
leave
rcr
adc
inc
inc
cltd
cmp
addr16
xlat
xor
xchg
sub
push
popa
cmp
adc
xor
es
roll
test
dec
inc
popa
sub
mov
fsubrs
or
jo
pop
sub
xchg
pop
in
adc
test
stos
adc
int
jmp
cmp
dec
and
repz
push
shr
nop
es
outsb
stc
pushf
in
jp
aam
push
fildll
mov
pop
jb
and
fnstsw
pop
adc
jbe
sbb
sahf
xor
xchg
cwtl
pop
fsts
addl
test
js
pusha
mov
fldl
shlb
and
jl
push
xchg
adc
sub
add
les
cmp
enter
arpl
pop
dec
push
xchg
cs
cmp
test
push
fidivs
int
sub
cltd
fbstp
clc
push
pop
testb
fs
lret
xor
mov
pop
inc
out
test
push
cwtl
sbb
daa
mov
out
push
pop
cmc
mov
inc
cmp
js
adc
pop
sbbb
mov
mov
mov
push
jno
mov
jle
or
inc
mov
jnp
lret
repz
push
call
mov
inc
flds
push
aas
inc
mov
pop
cmp
xor
xchg
mov
sbb
dec
mov
sbb
xor
cmpsb
jnp
dec
insb
pop
es
mov
pusha
insl
add
mov
mov
mov
inc
push
xor
push
mov
fistl
mov
ficompl
mov
inc
js
pop
out
leave
vpunpcklqdq
ljmp
pushf
adc
mov
xchg
into
jns
popf
stos
out
movsl
cmp
int3
and
add
loope
and
jp
data16
sub
ds
outsl
arpl
insl
xchg
mov
mov
int3
cmc
inc
fsubl
out
cmpsb
cmp
xor
mov
mov
lods
inc
jle
test
mov
push
sbb
adc
dec
in
sbb
mov
std
jno
mov
dec
jle
mov
mov
insl
add
ror
popa
add
ret
pop
dec
pop
jbe
dec
ret
cmp
sub
ret
hlt
js
mov
ds
xchg
mov
mov
jp
sub
dec
cwtl
das
xorl
and
rclb
es
adc
inc
fcmovnu
aaa
std
xchg
imul
fbstp
inc
call
xchg
xor
pop
bnd
mov
adc
pushf
fdivl
ljmp
sub
clc
popl
cmpl
lods
xchg
lahf
xchg
shll
adcb
repz
data16
jb
pop
repz
enter
jp
jae
out
dec
cwtl
add
scas
inc
mov
ja
repz
cltd
stos
inc
iret
daa
stc
nop
pop
sti
fsubrs
jnp
scas
lods
dec
testb
mov
push
jmp
dec
out
test
out
add
push
push
inc
into
gs
lret
sti
lods
stos
inc
loope
iret
pop
ds
insl
outsl
sbb
out
mov
pop
cmp
test
psubsb
pop
imul
enter
imul
popf
loop
or
insb
mov
fidivl
xor
inc
jo
xchg
jmp
clc
fidivl
xchg
arpl
mov
ljmp
call
jae
outsl
push
mov
fiadds
xchg
sbb
sub
pusha
cmp
aad
adcl
nop
stos
inc
fidivrl
pop
push
cs
in
pop
aas
pop
icebp
insb
jl
scas
test
lret
fistl
adc
push
jmp
xor
bound
or
nop
daa
imull
mov
jae
cmp
jb
pop
mov
jno
movsb
mov
iret
loope
dec
loope
xor
popa
sub
mov
fsubrs
lods
inc
xchg
xor
xchg
lods
mov
mov
jecxz
shlb
xor
arpl
jecxz
outsb
sub
sahf
cmp
mov
mov
outsb
push
out
and
push
mov
xchg
mov
outsl
test
sahf
sub
jne
mov
mov
jo
daa
movsl
das
cmp
pop
jno
and
cld
jb
mov
ja
or
je
mov
sub
stos
pusha
jnp
inc
stos
mov
out
and
mov
cld
xchg
bound
rcll
mov
mov
insb
out
mov
js
sub
jl
shll
addr16
xor
insl
adcl
jmp
aas
pop
rep
subl
mov
xchg
aas
pop
rep
orl
gs
xchg
cwtl
rclb
mov
lds
and
cmpl
loopne
fcoml
adc
xchg
call
jmp
push
scas
inc
xchg
adcb
sti
rcrl
mov
aaa
test
test
je
nop
daa
lea
loopne
rorb
mov
jae
js
fbld
ds
inc
cmp
js
dec
stos
push
in
fimull
orl
lahf
ret
fsts
pop
orb
jnp
stc
shrl
xorb
pop
arpl
testb
cmp
mov
mov
jb
inc
mov
insl
or
lahf
test
xchg
js
sub
arpl
arpl
sahf
mov
xchg
mov
insl
adc
out
xchg
xor
ret
and
imul
pop
repz
mov
mov
add
sahf
xor
dec
in
push
sub
mov
xor
xlat
aam
cmc
add
outsl
push
and
inc
pop
bnd
jl
mov
mov
mov
in
hlt
push
and
sbbl
mov
mov
cmpsl
add
jp
pop
lods
mov
mov
mov
jge
outsb
scas
xlat
outsb
shlb
mov
adc
mov
mov
cmp
xorb
mov
fnstenv
push
dec
fwait
push
int
mov
sub
imul
mov
cwtl
sbbl
jo
fsubs
aas
stos
lahf
iret
data16
js
mov
push
shrl
jae
push
mov
ret
popf
xor
pop
sub
mov
mov
pop
xchg
push
ljmp
jno
sbb
add
push
out
ljmp
lock
clc
inc
mov
loope
or
sbbl
dec
mov
cmp
shll
bound
std
xchg
ljmp
inc
imul
pop
mov
addr16
stc
xchg
or
ds
out
out
ret
pop
ja
xor
push
stc
nop
test
xor
push
imul
clc
dec
out
test
cmp
dec
imul
sub
mov
jg
shrl
lahf
pop
hlt
rolb
jbe
insl
test
cwtl
movsl
cmp
inc
mov
lret
pop
jb
inc
push
insb
jae
in
add
xchg
icebp
or
cmp
xor
pop
mov
adc
xor
out
lds
xchg
stos
mov
fimull
mov
mov
xor
pop
aam
push
add
pop
lods
and
pop
int
cs
jns
insb
stos
and
mov
jb
sti
cmpsl
push
mov
sub
jo
pop
mov
ret
fdiv
hlt
insl
pop
jbe
adc
mov
repnz
sub
dec
icebp
push
bound
lds
repz
inc
fisttpl
test
andl
loopne
repz
and
out
enter
and
rcll
pop
sahf
push
cmpsl
cmp
fadd
jp
testl
negl
addr16
rol
push
lods
testl
xchg
pop
mov
sbb
js
cmp
iret
fwait
jne
sbb
loope,pt
xchg
dec
mov
cmc
sahf
popa
clc
sbb
xchg
jb
mov
movsl
cmp
mov
fdivrl
inc
nop
adc
add
sbb
sub
sbbl
popa
mov
inc
nop
dec
mov
subb
loop
push
rclb
mov
stc
movsl
push
adc
xchg
cwtl
das
xor
cmpl
aam
pop
shrb
or
je
ret
inc
sarb
sbb
imul
jp
sub
lea
sub
cmp
lahf
aad
sti
xchg
mov
imul
aad
aad
rcl
push
mov
call
rdpmc
ficoms
add
pushf
xchg
inc
mov
test
lret
aam
xor
push
fdivrl
or
adc
loope
repz
mov
test
inc
pop
aam
jo
jl
or
leave
pushf
mov
insl
insl
lahf
stos
test
pop
lret
sub
xchg
xchg
sub
cmpsl
dec
mov
loopne
dec
jl
push
mov
dec
loope
xchg
sbb
aas
mov
fistpl
loopne
push
out
or
int
std
push
mov
adc
pop
rep
xor
idivl
cmp
jne
pop
or
xchg
ljmp
repz
mov
mov
out
pop
ror
lret
lahf
outsb
loopne
sub
shrl
cmp
and
or
movsl
jno
adc
xchg
cld
xor
into
ja
shlb
and
fbld
jmp
aam
push
cmpsl
gs
in
mov
or
jbe
sub
mov
loope
insl
dec
loope
push
pusha
test
dec
adc
sti
das
mov
push
mov
ja
fcmovnbe
mov
dec
ffreep
orl
fidivl
push
stos
enter
inc
into
pop
lret
xor
xor
in
jle
cmc
fs
pop
mov
pop
jp
pushf
xor
js
xor
mov
sub
sub
jb
xor
fstp
or
stos
rcll
or
in
jmp
jmp
add
mov
fdivs
or
arpl
in
mov
pop
or
popa
mov
out
and
add
inc
sbb
lret
mov
int
sub
lods
cmp
sbb
es
insl
push
add
add
cli
xchg
xchg
leave
xchg
jnp
or
ss
out
es
xchg
cli
sub
mov
in
sbb
faddl
mov
pop
cmp
cwtl
xchg
outsl
mov
imulb
outsl
lea
jno
jp
inc
cmp
mov
lods
pop
jle
mov
sbb
inc
mov
sub
fmull
adc
out
test
sti
cs
nop
lods
jbe
leave
rclb
outsl
mov
mov
enter
mov
cmp
stos
mov
in
jb
xchg
insb
sbb
and
and
stc
cli
push
mov
out
stos
inc
popf
xor
xchg
lods
add
gs
int
mov
ret
stos
jne
rolb
push
pop
adc
xchg
adc
mov
getsec
ljmp
popa
lods
jns
icebp
and
xor
add
xor
ret
xchg
mov
jnp
jmp
mov
fdivs
daa
xor
test
mov
repz
testb
cld
sub
xchg
or
jno
inc
dec
rorl
dec
xchg
sub
adc
sti
dec
sub
pop
mov
scas
pop
mov
out
mov
cmp
adc
xchg
lcall
jp
mov
adc
sarb
sub
cli
push
rcrb
mov
push
int3
mov
cld
xor
mov
jbe
jmp
rcrl
xchg
add
sub
int
fbstp
out
frstor
sarb
lds
adc
into
bound
in
jb
or
and
in
xchg
js
jns
in
movsb
pop
add
xchg
mov
xlat
push
in
xor
ja
test
mov
dec
pop
or
xchg
mov
push
in
sbb
mov
mov
shl
lods
call
rclb
add
mov
or
cmc
popf
add
xchg
adc
jns
das
loope
sub
xor
cmpsb
sti
cmc
mov
repz
in
adc
or
and
in
ljmp
aas
in
push
or
mov
add
enter
cmp
sub
cmpsb
cmp
xor
arpl
mov
push
insb
pop
mov
inc
adc
cmpsl
pop
xchg
cwtl
mov
sub
les
mov
lea
add
enter
pminsw
rolb
enter
add
mov
leave
arpl
cs
nop
cmp
scas
add
lea
push
xlat
insb
mov
mov
dec
mov
daa
in
rcll
and
repz
cmp
mov
inc
push
add
dec
aad
inc
repz
cmc
in
and
and
sbb
pop
push
adc
lahf
mov
xchg
add
call
inc
jb
loopne
movsl
aas
mov
stos
lds
fdivrp
mov
rcrl
out
fwait
xor
mov
in
and
xchg
aaa
lret
push
inc
xor
push
adc
add
pop
and
xchg
or
mov
js
adc
pop
lahf
xor
xchg
fcoms
push
fsubs
in
and
sub
scas
cmp
push
mov
dec
insl
push
jmp
pop
pop
daa
push
jne
inc
fsubrl
xchg
fsts
arpl
out
cwtl
xor
sub
test
data16
and
das
inc
xor
out
sub
fdivrl
push
lods
cmp
pop
jl
dec
and
mov
dec
inc
mov
inc
mov
cmp
mov
pop
mov
adc
jne
test
repnz
loop
loope
ficoml
scas
xor
push
pop
cltd
andb
stos
int3
push
cmpb
das
fidivl
inc
leave
cmpsb
xchg
xchg
pop
adc
inc
fildl
loopne
adcb
cmp
hlt
sub
out
lcall
sbb
lahf
and
cld
ja
cmc
mov
push
or
aaa
pop
add
lock
dec
cmp
sbb
pop
in
ss
cld
dec
jne
int3
xor
mov
push
popa
mov
xchg
inc
je
pop
dec
push
orl
sbb
insb
movsl
cmp
dec
out
jmp
inc
pusha
sbb
xor
jl
cwtl
cltd
xchg
xchg
sbb
cltd
imul
loopne
mov
mov
cwtl
lahf
mov
sahf
adc
pop
shll
pop
dec
in
dec
pop
lods
insl
adc
fildll
call
inc
xlat
fists
and
or
jo
mov
add
lret
adc
fldenv
or
jmp
mov
inc
les
cs
adc
lcall
mov
mov
or
push
fwait
sub
mov
push
pusha
xor
outsl
xchg
mov
pop
mov
movnti
jle
xor
adc
daa
xchg
cwtl
movsl
pop
sub
lret
jnp
imul
lds
inc
push
pushf
jbe
dec
idivb
pop
adc
outsl
faddp
mov
pop
mov
lea
clc
mov
cs
clc
sub
cmp
mov
adcl
push
stc
inc
in
push
mov
fidivl
xor
jmp
inc
add
adc
mov
add
ficomps
in
in
xchg
pop
repz
cmpsb
jnp
jle
sub
mov
inc
push
jbe
test
inc
sub
lods
inc
lods
scas
cmpb
mov
jno
popa
movsl
sub
mov
test
push
xchg
mov
mov
xor
push
mov
test
cmp
pop
mov
sti
nop
icebp
inc
cmp
rolb
sub
xor
mov
mov
mov
mov
pushl
adc
push
inc
pop
rcll
das
xchg
and
ss
das
inc
pop
cli
push
imul
push
adcb
inc
add
cmp
outsb
and
xor
ds
push
or
jecxz
sub
jbe
pop
or
mov
lds
shl
push
loope
gs
test
aas
mov
lea
shl
sbb
cmpsl
movsl
push
add
fidivs
test
dec
rcrb
push
mov
out
js
pop
stos
mov
movb
daa
fsubl
mov
icebp
push
push
jmp
sub
inc
shll
movsl
pop
pop
xchg
sub
out
sarl
movsb
or
adc
pop
or
test
inc
repz
cmp
lods
fs
mov
iret
inc
xor
enter
rorb
popa
mov
fs
jne
scas
dec
push
nop
sub
ss
pop
repnz
cmp
dec
jnp
push
add
stos
inc
jp
mov
lahf
push
iret
or
pop
les
in
lds
push
daa
in
pop
jle
cmc
cmp
scas
bound
cmc
data16
mov
lods
jl,pt
sub
cmpsl
mov
cmc
push
mov
add
lods
push
or
jae
outsb
mov
jns
push
in
movsl
lcall
shll
outsl
xchg
cmpsl
push
std
adc
mov
or
dec
xchg
ja
cmp
gs
ret
pop
sahf
xchg
dec
xorl
pop
insl
jbe
push
dec
pop
lock
pop
shlb
xor
sub
xor
jb
movsl
mov
lds
out
jb
ds
push
mov
push
lds
sbb
xor
gs
sbb
xchg
dec
cmp
jecxz
pop
inc
lret
sbb
xchg
inc
ss
jno
xor
popa
push
mov
into
inc
data16
xor
mov
pop
leave
ja
sarl
ret
xor
sub
mov
test
jo
mov
sbb
adc
sub
cmp
shr
mov
imull
loope
jae
iret
lret
pop
ret
dec
ret
sub
out
adc
ja
mov
divl
sub
pop
push
inc
repnz
fdivl
or
adc
addr16
xchg
mov
and
lods
std
and
pop
test
sbb
sub
loop
inc
adc
sub
ss
movsb
mov
lock
ja
mov
shll
out
orl
sub
adcl
fs
or
mov
lock
mov
mov
shl
clc
es
mov
jne
gs
jne
xor
cmpsl
xorb
inc
enter
inc
and
or
and
adc
scas
cltd
pop
cli
add
mov
fsub
insl
ror
faddp
pop
in
pop
mov
mov
pop
mov
aad
jae
shr
das
out
xor
fcmovnbe
shrl
filds
stc
mov
adc
imulb
repnz
roll
ljmp
push
movsl
xchg
lcall
or
lcallw
push
cs
in
cmp
mov
or
fsubl
push
hlt
mov
cmp
adc
inc
stos
and
sbb
ret
fwait
cld
xchg
out
dec
xlat
pop
into
and
or
push
popf
push
xchg
sub
adc
lret
pop
adc
sub
cmp
jge
cltd
xor
xchg
je
sub
imul
pop
dec
imul
bound
dec
jo
mov
sub
mov
lods
pop
adc
gs
dec
lret
push
lock
pop
into
pop
mov
inc
shrb
aaa
into
mov
fstps
imul
jg
das
add
jl
cwtl
das
dec
popf
out
xor
pop
jbe
pop
inc
dec
shrl
push
std
es
ja
or
lock
fists
pop
outsl
fwait
callw
shrl
test
ffree
inc
out
cmpsb
ds
pop
mov
mov
loop
imul
mov
mov
addr16
cmp
sub
pusha
or
dec
sti
orb
jmp
es
jg
xchg
std
in
push
mov
ljmp
lret
jg
scas
lods
divl
pop
rorl
mov
push
mov
or
push
jmp
mov
aas
adc
std
sub
or
ja
insb
in
push
dec
stos
jo
dec
mov
imul
xchg
dec
fs
or
sahf
xor
mov
mov
jb
fsts
pop
enter
loop
lahf
inc
fstpt
out
sbb
mov
inc
stos
jp
icebp
ss
fidivrl
bnd
jae
add
adc
rorl
xor
mov
jge
dec
dec
test
mov
inc
lahf
xor
xchg
es
and
pop
leave
aaa
cmpsl
adc
fadds
or
jno
fstpt
inc
mov
jmp
gs
xchg
fbstp
lcall
jl
out
dec
mov
decb
clc
dec
mov
outsb
mov
jl
out
jge
pushf
inc
cmp
add
add
inc
xchg
jns
out
popf
mov
paddd
shrb
loop
stos
mov
test
mov
xchg
mov
icebp
pop
aam
jno
dec
shlb
mov
dec
fldcw
mov
or
fmuls
xor
mov
ljmp
loope
cltd
les
cld
adc
adc
or
inc
scas
addl
push
xchg
gs
divl
rclb
jbe
ficoms
mov
jbe
filds
divl
gs
sub
jbe
ss
sub
xor
in
jp
adc
sub
push
in
pop
push
into
cmp
push
in
insw
insl
lahf
push
int
push
mov
ret
cmp
nop
jo
sbb
push
lcall
mov
xchg
lahf
adc
std
sbb
push
lods
adc
sbb
mov
add
or
cli
loop
popf
adc
xor
int
pop
or
scas
xor
mov
ljmp
mov
out
scas
inc
loope
inc
into
in
add
xor
clc
push
leave
cmp
rclb
adc
push
call
push
xchg
mov
das
in
int
aaa
lock
or
outsb
xchg
jnp
in
add
int3
add
movsl
cmp
and
repz
jl
sbb
sub
jne
lds
push
test
fwait
mov
orb
jge
cs
pop
mov
jecxz
mov
mov
ds
sbb
repnz
xor
xchg
dec
cmpl
pop
mov
cmp
je
icebp
das
pop
ds
lods
pushf
enter
or
mov
ret
xlat
jns
movl
test
jbe
inc
arpl
addb
mov
sysenter
push
mov
adc
clc
add
les
dec
xor
hlt
adc
push
popf
xor
pop
loop
sahf
push
adc
pop
xor
das
movb
es
mov
popa
cmpsl
dec
cwtl
xchg
push
jecxz
pusha
loop
movsl
push
mov
pop
mov
jp
xor
jecxz
dec
leave
pop
cmp
inc
or
faddl
pusha
negb
in
jb
ja
sub
stc
popa
flds
push
sbb
jb
jae
es
sub
xor
mov
sarb
loop
lahf
repnz
into
pop
out
stos
fstp
das
and
test
movsb
insl
and
xchg
fisttpll
jp
fcmovnb
cmp
aad
inc
out
leave
push
mov
dec
loop
or
enter
pushf
cmp
fcompl
popl
fldcw
imul
mov
cmp
int
leave
dec
xlat
inc
ds
pop
jmp
int
movsl
mov
push
add
mov
push
inc
dec
mov
pop
push
cwtl
cmpl
lcall
aas
dec
rorb
xor
sub
and
mov
fisttpl
aaa
repnz
inc
add
sbb
or
inc
mov
inc
mov
rcrb
loop
mov
pop
add
ret
ja
sbb
loope
mov
pop
push
ljmp
outsb
cmp
sbb
or
jne
sub
imull
pop
pop
imul
loope
repnz
cmp
pop
push
cmpsl
and
repz
mov
fcoml
jle
push
cmp
aaa
into
mov
cmpsl
mov
push
xchg
adc
lcall
cmp
addl
dec
ret
xlat
dec
je
push
fistps
or
mov
xor
mov
js
cmpl
pop
pop
dec
pop
les
dec
jmp
jecxz
inc
negb
addr16
iret
cmpsb
xor
inc
xchg
or
shl
mov
loope
and
out
cld
xchg
xlat
movsl
negb
adc
xchg
add
xchg
pop
xchg
dec
add
mov
inc
sub
jle
mov
les
mov
push
mov
in
sbb
sbb
inc
jle
ret
cmp
insl
xor
mov
lcall
mov
xor
js
cmp
ljmp
in
fstpt
ds
xchg
push
pop
enter
enter
cmpsl
xchg
push
bound
mov
jbe
mov
in
jb
or
js
fdivrs
cmp
vcvtdq2ps
adc
inc
sahf
xchg
frstor
ja
sahf
mov
js
add
testl
or
data16
inc
insl
xor
andl
je
xchg
jecxz
cmc
lea
mov
stc
div
ret
aaa
shlb
frstor
sub
fsubrs
dec
bound
aad
imul
ret
movsl
cmp
mov
push
or
nop
cmp
adc
xchg
and
repz
sub
or
or
add
repnz
jp
xor
out
and
inc
dec
push
mov
dec
js
pop
sub
mov
cmpsl
cmp
xlat
ds
cld
outsl
ret
mov
in
sub
je
leave
and
lret
inc
shll
rcll
xchg
pop
iret
mov
jge
fistpl
xchg
mov
pop
or
adc
push
movsb
lods
push
out
stc
jmp
mov
lcall
addr16
xchg
xchg
mov
sahf
xor
nop
push
dec
xor
jb
outsl
dec
adc
cmp
stc
and
or
jp
jb
jno
pop
jbe
pop
sub
pop
adc
cmpsb
sub
inc
in
in
push
inc
lods
push
or
lahf
out
out
pop
iret
sbb
jp
stc
daa
int3
aas
cmp
jo
rclb
xchg
mov
repnz
andb
add
pop
mov
cmc
fldl
or
dec
xchg
rcrl
dec
mov
je
mov
xchg
sar
scas
mov
fdivl
fstp
mov
pop
adc
lahf
sub
bswap
jmp
in
mov
adc
cld
xchg
repnz
adc
fcomps
xchg
cmc
sbb
mov
outsb
xchg
or
iret
sbb
xchg
rcr
dec
out
andb
test
pop
mov
lds
cld
mov
imul
stos
inc
and
jmp
fsubl
jge
mov
pop
imul
xchg
outsb
jp
mov
pop
xchg
sub
nop
sahf
dec
lea
loope
xor
rcl
dec
sarb
shrl
xor
xchg
adc
inc
jno
or
mov
xor
push
sub
sbb
jnp
test
pop
movsl
pop
movsb
or
pop
pop
mov
adc
sub
mov
jbe
aaa
pop
cld
cmpl
inc
or
setg
ret
fs
in
jae
sbb
std
inc
icebp
xor
hlt
sub
sarl
inc
cmp
and
dec
sub
lea
aad
sarl
rcl
imul
push
and
jbe
mov
mov
pop
jno
imul
inc
dec
in
outsl
or
push
dec
out
test
out
mov
jns
push
mov
sbb
xchg
sahf
xor
fmuls
in
repnz
in
xor
test
loopne
fildl
mov
cmpsb
or
mov
lahf
lcall
ds
sub
sub
arpl
push
lret
lods
push
cmp
push
inc
lds
xor
inc
xchg
cltd
adcb
or
test
pop
in
sbb
cmp
mov
fiadds
call
mov
xor
mov
fists
mov
lds
xor
adc
ds
je
sbbb
sti
mov
jge
jp
and
jmp
lods
sbb
hlt
adc
xchg
mov
outsl
mov
push
xchg
dec
shrb
xor
fwait
and
push
call
test
jo
inc
leave
pop
idiv
popa
mov
dec
mov
inc
out
pushf
xor
sarl
mov
jo
lods
pop
sahf
fisubs
mov
mov
inc
fiaddl
mov
push
jmp
daa
mov
pop
in
popf
xor
add
mov
hlt
or
adc
ret
hlt
jge
cmp
jecxz
dec
cltd
xor
mov
push
mov
cmc
shrl
dec
pushf
xor
repnz
pushf
cmpsl
ds
pop
adc
pop
and
cltd
je
pop
push
mov
test
sbb
loopne
add
xor
push
mov
pop
pop
cmp
ds
es
pop
notb
mov
daa
in
mov
xchg
cmp
xor
lea
mov
fistps
adc
dec
mov
cmp
gs
aad
jle
cwtl
das
mov
xchg
mov
ret
in
shrl
in
sub
pop
lock
inc
mov
jb
push
in
setno
inc
test
add
bound
jno
rorb
shll
pop
sahf
push
repnz
in
and
cld
mov
ret
hlt
cs
push
mov
push
pop
fstl
cmp
mov
pusha
push
xchg
aam
pop
jl
add
gs
mov
or
inc
add
loope
in
loop
or
and
sub
mov
je
insl
cwtl
jmp
cmp
jae
and
test
add
add
in
dec
pop
mull
cli
nop
in
ja
mov
int
in
scas
and
sar
leave
mov
push
mov
jne
das
adc
cld
in
or
pushf
outsl
fs
or
jnp
or
ss
inc
mov
sub
popf
test
fs
and
lock
scas
jno
xchg
je
or
shl
psrlw
push
lock
out
cmc
gs
add
pop
add
xlat
jnp
pop
in
sbb
addb
add
js
push
push
cmp
movsl
pop
sub
andb
sbb
jle
jnp
je
mov
cmp
mov
into
lods
dec
js
mov
mov
lahf
push
jo
mov
pusha
mov
inc
js,pt
push
sub
sbb
xchg
dec
shr
bound
cs
notl
mov
pop
ret
cltd
cmp
mov
and
sub
xor
addr16
outsb
popf
dec
or
push
mov
inc
pusha
imull
leave
addr16
xor
xor
add
mov
fcompl
pushf
and
fdivrl
sbb
fsubl
mov
pop
mov
test
imul
jp
stc
je
mov
xchg
inc
cwtl
or
sbb
push
pop
pop
fsubl
mov
cmpsl
dec
sbb
loop
jo
test
xchg
pop
ja
cmpsb
jle
mov
aas
arpl
cli
xlat
xchg
pop
jge
cmp
inc
sbb
mov
pop
nop
cmpl
mov
repz
inc
adc
cmpsb
or
jge
sub
mov
fwait
lods
xor
sub
out
sahf
dec
mov
pop
hlt
mov
jmp
xchg
or
sub
outsb
adc
in
pop
mov
in
cmp
mov
xor
test
mov
test
pop
mov
xchg
call
or
sbb
ds
xchg
mov
in
sbbl
push
xor
testl
xchg
fs
push
xlat
outsb
test
lock
dec
jno
cmp
and
push
outsl
movsl
cmp
scas
push
popf
and
or
je
loopne
mov
testl
lcall
mov
push
xor
aas
or
call
rcrb
dec
loopne
adc
inc
mov
jle
nop
out
sbb
loopne
mov
les
jo
mov
inc
fidivrs
out
scas
and
lods
and
xor
jne
testb
xchg
xchg
inc
imul
test
adc
pop
inc
add
xor
inc
movsl
xor
jp
mov
rcll
js
mov
or
and
in
imul
inc
xchg
inc
insl
cmp
or
cld
in
cmpb
mov
inc
lods
in
imul
mov
dec
loopne
adc
imul
adcl
mov
push
clc
je
mov
xor
sub
loopne
push
add
ja
mov
dec
adc
mov
adc
shrb
or
pop
imul
cmp
mov
test
inc
or
rolb
into
out
jns
movsl
mov
pop
add
mov
pop
add
aam
jecxz
loop
push
xor
jecxz
and
pusha
push
mov
add
test
addl
jle
test
arpl
mov
add
mov
pop
add
jle
or
ja
mov
mov
fdivl
lahf
lcall
out
das
int
cs
and
xchg
in
dec
cmpsl
sub
add
lods
mov
lods
jmp
adcl
and
sbb
mov
push
std
xor
cmp
xor
cmp
jbe
push
sub
out
aam
and
add
jp
dec
adc
fidivrs
dec
adc
or
mov
mov
insl
out
std
nop
sbb
fucomp
out
or
roll
aam
mov
lea
out
cmpsl
pop
push
ret
gs
or
es
cmp
push
xchg
push
and
lahf
aam
stc
lods
add
nop
mov
sub
in
flds
fwait
pop
cltd
inc
and
or
movsb
xor
xor
es
int
mov
in
pop
add
pushf
inc
cwtl
inc
pushf
int3
or
rol
mov
adc
mov
mov
and
insl
xchg
movsl
xor
jbe
dec
aam
jg
imul
xchg
pop
mov
xor
adcl
lea
test
add
loop
dec
cld
sub
out
lods
sub
adc
in
push
into
mov
add
pop
mov
test
lahf
stos
mov
sbb
popa
push
and
pop
rolb
into
and
ret
nop
mov
mov
mov
xchg
and
pop
fiaddl
shrb
mov
jbe
movsb
mov
or
adc
dec
imul
jns
fstpl
xor
and
lcall
inc
cli
pop
adc
dec
jnp
mov
test
mov
gs
xchg
pop
ds
inc
iret
adcl
lcall
add
push
andb
inc
fnsave
jle
add
xchg
leave
cmp
rclb
xchg
inc
aam
clc
pop
sti
or
mov
shll
fdivrl
push
lret
lea
pop
rcll
stc
pop
jge
or
nop
popa
sahf
cmp
into
pop
shr
fnsave
testl
leave
adc
scas
xlat
adcl
cltd
es
int
dec
imul
xchg
std
add
leave
sub
push
inc
cmp
fwait
movsl
xor
lds
loop
in
out
cmp
lcall
dec
mov
mov
and
dec
fs
cmp
mov
rorb
sarl
jl
mov
rorb
jae
cmp
mov
rorb
push
mov
and
dec
addr16
in
clc
jns
shrl
lret
sarb
sti
and
sbb
hlt
pop
stc
dec
push
les
scas
xchg
inc
je
pop
sarl
cmpsb
pop
stc
jmp
adc
iret
clc
fs
cmc
adc
mov
xor
jmp
dec
or
scas
push
shll
nop
jns
imul
jecxz
sar
stc
sub
push
fsubp
sbb
out
movsl
xor
enter
mov
test
jns
sub
call
sbb
data16
ror
jnp
and
cltd
fnsave
stos
push
and
enter
fstps
test
or
roll
sub
aad
loopne
lods
push
mov
loope
sbb
faddl
adc
fiadds
out
jae
pusha
mov
xor
rolb
stos
adc
adcl
pop
push
loope
push
addr16
stc
pop
scas
ja
sbb
dec
mov
and
aad
xor
gs
daa
ss
cld
xor
pop
adc
dec
aad
xchg
imul
ljmp
adc
pop
xchg
push
rorl
ljmp
xor
popa
ljmp
xchg
ds
icebp
pop
adc
inc
aam
popf
bound
iret
sarl
frstor
mov
mov
std
mov
icebp
pop
scas
pop
rorl
loope
push
xchg
sarl
frstor
xor
xor
bound
xchg
adc
pop
mov
rorl
das
mov
stos
sub
loopne
inc
imul
sub
or
xor
flds
push
sub
movsb
lds
mov
jecxz
push
cmpsl
ret
mov
fsts
mov
mov
scas
lds
xor
push
pusha
daa
cmp
sub
test
loop
insl
push
ret
fiadds
mov
fnstsw
mov
adc
dec
add
xchg
push
pushf
inc
or
test
movsb
in
or
mov
mov
insl
hlt
jp
push
jnp
es
mov
mov
daa
in
jo
lahf
decb
mov
mov
mov
lcall
adc
gs
cli
test
jns
sub
icebp
jle
aad
in
cmc
retw
popf
aas
sbb
fisubl
mov
je
or
movsb
imul
push
jb
les
int
or
sbb
mulb
dec
mov
push
movsb
imul
pop
lea
dec
lods
pop
cmpsl
xor
cmpsl
xor
jge
mov
out
cwtl
pop
loope
pop
pop
test
outsl
xchg
inc
adc
mov
insb
insb
jnp
int
jp
mov
stos
cs
stos
stos
cs
mov
mov
movsl
mov
mov
mov
dec
pop
inc
lock
pop
mov
in
stos
pop
sbb
aad
jmp
sub
clc
pop
pop
insb
or
push
fists
mov
test
mov
ret
mov
repz
sbb
push
enter
outsl
jae
roll
fidivs
mov
scas
jg
mov
jo
mov
fmul
xchg
and
xor
cmp
js
xchg
mov
out
leave
push
mov
inc
adc
movsl
sub
scas
push
mov
popa
in
inc
mov
pop
repnz
xchg
xchg
in
lahf
inc
cmp
cs
lcall
test
stos
cld
loop
shll
movsl
xor
pushf
or
hlt
push
jno
call
negb
mov
int3
mov
and
push
insl
hlt
jb
jmp
jg
or
cmp
es
sub
outsb
xchg
push
xchg
cmp
lds
dec
data16
repz
cmpsb
push
pop
mov
mov
mov
mov
jg
lock
add
adc
int
push
mov
push
out
aaa
into
pop
pop
dec
loopne
aas
test
sub
pop
xchg
pop
orl
jno
push
or
stos
das
push
pop
imul
test
repnz
das
mov
push
mov
cmp
mov
test
mov
data16
arpl
je
mov
lods
xor
stos
sub
jg
rcl
pop
xor
stos
mov
jb
or
mov
mov
scas
into
js
aas
mov
mov
mov
jp
pop
push
sti
push
dec
pushf
inc
xor
orb
xchg
scas
cmp
ds
subl
cmp
cld
pop
xchg
ja
and
jno
jl
pop
insb
mull
add
jnp
sub
and
repnz
jno
loop
adc
pop
cli
cmpsl
xor
adcl
popa
xchg
aas
outsb
ljmp
jge
dec
jle
out
cmc
xchg
add
mov
mov
daa
mov
cmp
negb
and
loopne
or
popl
cmc
popa
jmp
ljmp
shl
repnz
add
lahf
jecxz
rclb
roll
dec
and
scas
sbb
sub
add
cmp
mov
push
adc
sub
cmp
adc
int
icebp
and
xor
or
adc
mov
orl
xor
sub
push
ret
cmp
push
xor
pop
sti
insl
dec
or
jecxz
lock
pop
sbb
into
faddl
repz
jge
sub
repnz
push
sbb
inc
sub
lret
aas
cltd
push
sbb
popa
repz
fcoml
lock
dec
sti
out
sub
pop
out
call
and
repz
xchg
xor
xchg
mov
jns
cmp
faddl
xlat
adc
adc
or
loopne
or
or
es
pop
cld
pop
js
add
ds
popa
out
add
pop
lahf
cmp
mov
and
push
ret
lock
rclb
lret
in
stos
xor
pop
jnp
pop
and
js
mov
push
lret
bound
mov
jle
call
mov
fs
xchg
inc
push
cli
adc
in
addr16
cwtl
inc
push
ja
out
roll
sub
in
aam
sbb
and
fisttpll
cmp
imul
sti
dec
or
aad
cvttps2pi
in
xchg
cmp
mov
mov
jns
mov
or
pop
aad
push
hlt
fs
aas
pushf
imul
stc
jb
mov
in
insl
add
mov
dec
ljmp
mov
jecxz
loop
ljmp
or
xchg
or
xchg
cmp
in
push
cld
enter
fstps
int
cmc
pop
push
sbb
jecxz
bnd
mov
jmp
out
bound
fidivrl
jns
enter
adcl
xchg
inc
inc
cmp
lret
bound
leave
xchg
aaa
xchg
ss
pop
lds
int3
push
lea
jb
lcall
addr16
xchg
push
pop
divl
orl
ljmp
lret
fstp
pop
out
push
or
xchg
cmp
adc
mov
shrl
lods
sbb
es
inc
jo
push
int3
jne
out
sbb
jae
xchg
inc
jl
inc
psrlw
test
inc
int3
inc
adc
add
mov
fwait
pusha
cmp
in
lahf
jno
aas
repz
inc
test
add
loope
sbb
arpl
lcall
scas
sti
sub
adc
push
loop
or
imul
call
cli
xor
in
test
sbb
or
cmp
outsl
repz
pop
int
fiadds
jl
sub
js
xor
movsl
mov
or
ffreep
mov
pop
mov
push
xor
popf
lea
lds
push
jb
xchg
cltd
jns
or
push
ret
mov
jge
aaa
stos
adc
add
xor
sub
ret
xor
pusha
mov
jb
mov
fidivrs
movsb
or
push
or
mov
mov
xchg
lahf
cmp
cmp
dec
pop
cltd
cmp
cltd
dec
or
mov
imul
pop
stc
out
xchg
inc
adc
xchg
xor
mov
lret
dec
sbb
lds
mov
cltd
inc
sti
gs
test
sbb
sbb
in
add
in
outsl
push
popa
in
mov
cmpsl
sub
test
lods
xchg
in
sbb
inc
ret
aam
jg
push
pop
push
stc
sbb
adcb
pop
sbb
inc
pop
mov
xlat
xor
stos
push
adc
sbb
push
dec
loopne
lret
mov
jb
popa
mov
xchg
cmp
test
jge
inc
mov
cmp
std
aaa
gs
aad
lods
xor
add
cs
sbb
push
lahf
cwtl
test
lret
push
mov
adc
inc
stos
xor
jmp
mov
add
rorb
stos
inc
adc
jae
int
sub
leave
push
dec
mov
sub
push
fnstenv
out
insb
cmc
cmp
xor
adcl
xchg
sbb
int
movsb
daa
jp
or
inc
outsl
pop
std
addr16
sub
xor
cmp
lcall
xchg
in
inc
hlt
add
je
ljmp
sub
inc
push
outsb
cmp
outsl
imul
xchg
mov
popf
out
ret
jbe
jbe
imull
sbb
adc
lret
data16
sbb
leave
mov
mov
pop
addb
xchg
aam
mov
xlat
in
jo
in
push
pop
cmc
pop
fwait
out
decl
cmc
pop
in
xor
and
push
test
xlat
mov
mov
out
pop
adc
mov
pushf
into
clc
gs
lret
mov
call
imul
mov
sub
lret
lock
mov
cmpsb
fisubl
in
les
dec
pop
push
iret
mov
daa
push
fdivrs
sub
mov
mov
aad
mov
cltd
cmpsb
xor
and
push
scas
xor
stc
inc
or
sbb
cmpsb
loop
subl
lahf
inc
fnstenv
cmp
in
icebp
sbb
and
xor
nop
pop
clc
lods
xor
popl
test
ret
push
ss
fidivrs
adc
xchg
inc
or
fcoms
lret
mov
lock
loope
aad
push
lcall
fsubs
add
sbb
or
test
orb
leave
nop
outsb
lcall
jge
daa
lods
fildll
or
bndldx
mov
or
jb
scas
adc
push
xchg
incb
sbb
inc
or
enter
mov
cmp
lcall
orl
push
ja
in
xchg
lock
dec
insb
add
scas
ss
insb
xlat
jl
mov
fistps
rolb
lea
mov
push
lret
mov
adc
mov
jo
and
loopne
cmp
rolb
aad
stos
xor
add
xchg
push
repz
or
nop
sub
sbb
jmp
fidivl
stos
xor
xor
fwait
cmp
sub
xor
lds
mov
mov
lods
pop
incb
jne
and
loop
jle
test
loope
cs
stc
nop
adc
ja
clc
or
push
ljmp
or
lcall
cli
aas
lahf
lds
mov
sbbl
mov
aad
test
adc
popf
dec
jb
or
mov
ror
rorb
lret
or
pushf
cmp
mov
ss
sub
cwtl
das
mov
fiadds
jns
or
pop
imul
mov
rcrb
inc
jbe
orb
cwtl
inc
or
adc
cmpsb
insb
mov
mov
mov
lahf
cltd
add
int
lock
push
push
jg
leave
push
test
rclb
pop
sub
push
add
ret
sbb
jle
ja
dec
cbtw
cmp
pop
cli
cs
dec
pop
jbe
fstpt
push
insl
pushf
or
dec
hlt
mov
ss
pop
jo
adc
add
jno
sahf
cmp
push
add
or
lcall
pusha
push
mov
addl
jmp
outsl
std
push
and
xor
add
js
adc
add
jo
pop
aad
sbb
imul
adc
pop
test
js
scas
mov
gs
rorl
and
pop
add
mov
jp
mov
fiaddl
hlt
fisubrs
jnp
xor
or
mov
rcrb
xlat
pop
test
add
jle
pop
popa
in
std
adc
push
out
in
nop
and
fistpll
mov
mov
adc
loopne
bswap
xchg
pop
shr
ficomps
mov
int3
js
cltd
mov
jne
inc
mov
jge
lcall
test
cmc
pop
push
aad
mov
orl
scas
lods
sahf
and
dec
lcall
adcl
call
mov
pop
and
mov
es
aam
xchg
les
int3
mov
adc
or
aad
cmp
pop
add
sub
jp
movsb
cltd
inc
nop
jp
sarb
mov
dec
inc
mov
mov
outsl
ss
xor
jp
push
inc
aas
mulb
fwait
std
pop
xor
jge
loopne
adcl
repnz
push
push
push
mov
add
je
dec
pop
pop
testl
push
lret
not
xchg
fidivs
or
mov
or
and
les
lcall
pop
sbb
xchg
inc
in
jae
in
popa
out
pop
arpl
int
in
ds
cmp
adc
fldl
orb
mov
mov
loop
aas
das
mov
cmp
sbb
call
jecxz
push
orb
test
mov
bound
nop
mov
pop
rorb
inc
fwait
aas
mov
mov
fmuls
fidivl
jp
push
xchg
cmp
test
insl
int
cltd
inc
and
xor
push
in
iret
jecxz
in
stc
lock
stos
cli
cltd
inc
cmpsb
mov
push
rcrl
test
push
stos
test
lods
shlb
clc
mov
sbb
sub
xlat
jns
inc
ljmpw
cltd
ret
dec
adc
into
filds
xchg
aaa
push
jne
add
je
push
ror
lret
push
out
mov
fs
out
xchg
and
ss
or
xchg
lds
pop
fdivrl
hlt
gs
dec
or
cmp
sbb
xor
jle
sub
jae
jecxz
adc
cs
rclb
cmpsb
xor
aad
add
mov
lcall
ret
pop
lods
test
pop
negl
popf
sbb
mov
ror
cmc
xor
push
mov
test
pop
push
add
jae
and
push
cli
xor
inc
pop
sbbb
bound
jl
cltd
jno
dec
lret
sarl
add
or
push
pop
clc
inc
aas
mov
jl
pop
in
test
add
sbb
jmp
cmpl
jne
fidivl
dec
out
into
gs
fldl
scas
or
sbb
push
xchg
xchg
mov
fisttps
mov
jle
xor
cmp
fildl
cmc
popa
outsb
out
popa
in
movsl
jbe
sbb
ljmp
push
pop
or
or
outsl
out
lret
mov
xor
jno
stos
and
fisttpll
fcompl
jecxz
push
orb
int
jns
add
in
outsl
xor
fiadds
jae
fwait
pop
jecxz
imul
lea
cli
add
lods
xor
jns
std
sbb
fistpl
jecxz
pushf
popl
adc
mov
fwait
test
mov
jae
lret
jb
push
xchg
test
mov
fdivrp
test
mov
sub
inc
stos
sub
lret
xchg
sub
jne
int
cmpsb
adc
and
shlb
shrb
sbb
sub
xchg
inc
push
ss
aaa
stc
push
das
scas
dec
pop
adc
dec
mov
sub
pop
addr16
ja
jg
bound
adc
addl
call
lcall
mov
mov
mov
mov
dec
mov
jne
push
dec
lcall
jno
ljmp
cmpsl
ss
test
mov
ds
sub
pop
rclb
or
pop
cli
sbb
test
lret
movsl
mov
mov
mov
aaa
mov
shll
jmp
fwait
gs
mov
mov
jmp
push
jl
inc
ret
cmp
cmp
imul
lahf
test
mov
es
lcall
insb
repnz
pop
jnp
fdivrs
stc
mov
movsb
std
pop
xor
popf
cmp
sub
or
mov
cmp
lret
ficoms
hlt
pop
out
or
insb
cmc
push
in
xchg
push
andb
leave
lods
mov
cmpsl
inc
or
sub
push
in
orb
repnz
bnd
ror
loop
rclb
push
test
add
mov
sarl
into
xchg
mov
scas
sahf
inc
ss
cmp
aam
outsl
cmp
adc
jl
inc
push
cld
push
inc
sub
mov
pop
jp,pt
push
xchg
pop
dec
dec
mov
repz
push
enter
daa
ss
jns
loope
adc
fwait
cli
sub
pop
insb
clc
pop
sbb
mov
cli
mov
xor
das
mov
mov
mov
push
jne
dec
or
jno
in
push
mov
stc
xlat
xor
cli
iret
xlat
andb
inc
push
test
jo
adc
sti
xchg
or
cs
pop
and
scas
aas
lock
jne
xor
imul
jecxz
push
paddd
test
push
sarl
out
cltd
inc
jo
dec
adc
fs
enter
sbb
int3
mov
push
cli
sub
and
mov
aam
cmc
lock
mov
sub
dec
aam
sub
lahf
inc
adc
xchg
adcb
pop
stc
and
ds
movsb
ds
or
mov
outsb
ljmp
movsl
xor
arpl
inc
cmp
and
cmpsb
xor
shrl
jne
test
out
xchg
lret
push
inc
mov
cmpsl
test
xchg
mov
jnp
inc
jge
mov
lock
xchg
aas
xor
and
mov
mov
mov
insb
scas
jbe
push
jle
mov
or
outsl
icebp
call
call
mov
jbe
in
ret
cwtl
or
es
pop
loope
or
movsb
cmp
xchg
sub
jmp
adcl
out
js
or
mov
adcl
out
xor
adcl
jg
shrl
iret
repnz
xor
mov
das
imul
dec
mov
imul
push
jb
fcomps
pop
arpl
jne
cmp
mov
call
cld
insl
lock
mov
xchg
add
shlb
adc
les
or
jle
fiaddl
push
and
pop
clc
lret
push
xchg
adc
hlt
into
jo
sub
mov
adc
test
adc
iret
push
aad
cs
mov
pop
ss
lea
fsts
ja
and
ja
and
xchg
push
dec
imul
stos
sub
cld
test
fs
and
mov
inc
fcomps
shr
jb
dec
pop
add
xlat
dec
flds
xlat
shrl
movsb
push
xor
in
std
pop
pop
icebp
push
stc
ret
mov
jp
insb
ds
mov
mov
sbb
jle
in
outsb
cmp
mov
push
pop
in
push
xor
in
lods
xor
scas
nop
mov
mov
shll
hlt
jecxz
pop
adc
inc
lret
xchg
push
jns
inc
mov
fwait
aas
jg
mov
outsb
insl
orb
ret
mov
out
jno
insb
cmp
sub
dec
adc
cmp
mov
mov
stos
sbb
sbb
mov
orl
mov
inc
dec
push
mov
ds
repnz
jae
cmp
sub
js
jg
xchg
aaa
into
insl
mov
xor
inc
jmp
cmp
xchg
xor
and
test
jne
call
add
pop
ret
mov
ret
nop
mov
xchg
inc
inc
mov
push
jo
inc
push
cwtl
pop
call
repnz
lea
mov
cmp
enter
cwtl
push
lahf
cmp
dec
dec
or
sub
out
ret
xor
inc
aam
ret
add
push
pop
add
test
out
out
add
outsl
hlt
arpl
mov
pop
ret
repz
lcall
aas
lcall
clc
rcll
adc
add
pop
jnp
dec
xor
dec
or
das
push
add
mov
rcrl
les
iret
adc
outsb
js
js
push
in
insl
inc
lea
mov
adc
lock
hlt
lcall
out
xchg
inc
movsb
lret
mov
mov
in
lods
and
popf
movsl
inc
bswap
enter
xchg
adc
aaa
and
in
insl
outsb
cmp
pushl
mov
in
inc
adc
aad
jbe
adc
dec
imul
adcb
mov
cmc
inc
or
xor
mov
scas
or
faddl
filds
in
xor
arpl
enter
mov
cmpsl
rolb
mov
cmp
dec
stos
mov
fsubrl
jbe
or
sti
popa
outsl
insb
mov
jg
adc
pop
js
inc
pop
sub
jno
jo
bound
mov
mov
mov
lret
imul
les
les
mov
fmul
sahf
cmp
add
jle
in
dec
in
fbstp
and
cld
mov
adc
call
nop
inc
rcrl
or
adc
jno
pop
cld
pop
outsl
fidivrs
inc
jb
dec
fidivrs
les
inc
adc
nop
lcall
add
mov
shll
pop
add
out
add
pop
push
add
adc
push
inc
and
adc
sar
inc
sub
mov
aam
lcall
lcall
mov
fldl
push
repz
cli
jns
and
jmp
pop
sbb
orb
dec
adc
inc
lods
addl
sub
daa
sub
aas
leave
xor
addl
repnz
pop
ljmp
pushf
shl
cld
lret
add
push
sub
mov
jo
mov
lcall
sti
xor
movsb
cmpsl
and
sbb
xchg
inc
sbb
test
scas
cs
and
pop
and
outsb
pop
mov
mov
cmpsb
fidivrs
pop
mov
sti
cltd
aam
jno
ret
or
mov
adcb
sahf
cmp
xor
jge
sub
pop
pop
mov
mov
mov
lret
ljmp
xor
mov
add
sub
scas
jb
stos
sub
imul
cmp
push
je
loope
repz
cmovg
pop
std
add
adcl
repz
test
jecxz
xchg
sbb
jmp
daa
aas
jo
jmp
cld
out
out
cld
data16
mov
inc
push
daa
stos
mov
lods
mov
test
and
test
xchg
popf
inc
incl
mov
xchg
es
jecxz
outsb
call
cs
jmp
hlt
rorl
adc
mov
int
fstpl
fistpll
mov
into
xlat
pop
imull
fdivrl
add
push
add
adc
dec
jno
out
in
inc
xor
outsb
jmp
jns
inc
adc
ret
adc
or
ja
in
push
jl
push
or
test
jo
popa
movsl
in
push
push
pushf
mov
mov
in
adc
jmp
lock
iret
cmc
jno
fwait
sbb
fst
shl
pop
ret
mov
mov
notb
sub
xor
push
xor
mov
lods
scas
das
xchg
push
mov
sti
lds
mov
inc
adc
mov
enter
int3
pop
int3
cmpsl
xor
mov
push
sub
lods
std
mov
push
mov
popa
insb
fistpll
mov
roll
ja
out
jne
das
mov
popa
mov
bnd
das
shr
loope
sbb
push
cs
bswap
bound
pop
clc
and
hlt
cmp
xor
pop
mov
ljmp
dec
or
jecxz
xor
adc
cwtl
das
popl
cltd
inc
loopne
lret
idivl
sahf
mov
movsl
scas
sub
scas
inc
xchg
outsb
out
xchg
aam
out
rorb
lret
inc
adc
cmp
cli
push
insb
xor
dec
push
mov
cli
xchg
leave
mov
inc
adc
mov
cmc
bound
or
sbb
sarb
fimull
mulb
add
adc
sub
push
push
mov
inc
in
stos
dec
or
repnz
or
xchg
inc
out
push
inc
adc
lods
jnp
mov
mov
mov
scas
add
in
jg
cmc
push
call
pop
enter
sub
add
cmp
in
pop
icebp
pop
test
pop
fiaddl
in
add
xchg
inc
cmpsb
sbb
pushf
ljmp
test
shrl
inc
jecxz
xor
inc
or
test
xor
xchg
leave
pusha
jge
inc
or
ret
dec
insl
mov
popf
xchg
cmp
sub
dec
jge
xchg
inc
xor
cmpsl
xor
xchg
fs
inc
insl
or
sbbb
sub
mov
das
pop
add
fildl
pop
jle
out
mov
mov
jmp
jmp
lods
xor
ret
imull
mov
not
jns
jmp
mov
or
xchg
insl
rorb
loope
mov
add
or
jb
pop
mov
lret
mov
or
jns
notb
jo
mov
lcall
dec
dec
into
or
pop
lcall
dec
xchg
adc
lods
and
das
scas
addr16
xlat
ja
jno
mov
repnz
fidivs
negb
and
cld
xor
stos
jg
cli
pusha
shrl
adc
add
dec
mov
xchg
or
add
push
sti
mov
scas
fiadds
pushf
mov
adc
dec
push
push
sub
jns
mov
mov
xor
aaa
dec
jecxz
add
push
mov
fmull
mov
das
cmpsb
cmp
xor
xor
adc
jns
movsb
push
call
pop
imulb
sub
lods
dec
lea
into
cmp
lcall
repnz
out
leave
pusha
and
adc
xchg
cs
xchg
add
dec
dec
out
mov
lahf
cmp
push
repnz
mov
mov
fnstsw
pcmpgtd
xchg
xor
in
cmpl
cmp
xlat
outsb
or
and
mov
aas
jecxz
adc
ss
xor
call
jl
and
push
stos
add
movsb
cld
and
clc
dec
aas
jg
stos
inc
dec
mov
leave
pusha
sahf
bnd
and
out
repnz
cltd
xor
push
popf
inc
cwtl
mov
lret
mov
sbb
repz
popa
clc
cmp
jg
mov
das
adc
popf
xor
xor
mov
add
fimull
fsubrl
push
lods
cs
lret
adc
jp
mov
add
es
mov
inc
mov
std
lcall
dec
in
lret
jno
adc
les
popf
les
mov
dec
in
mov
popf
aaa
inc
fldcw
repz
mov
mov
fstpt
or
cs
xor
dec
in
cmpl
outsl
push
pop
mov
mov
testb
jp
stos
stos
add
pop
xor
xor
std
push
out
xchg
push
call
fnstenv
push
mov
les
xlat
jge
lods
inc
dec
sahf
pop
cmc
iret
push
popa
pushf
lock
and
lcall
xchg
mov
mov
sbb
hlt
mov
stc
cmp
adcb
loope
adc
dec
in
add
add
fmuls
nop
fisubrl
test
pop
sti
pop
scas
sub
pop
mov
xor
jnp
mov
add
and
and
ja
ds
cwtl
lods
inc
lret
hlt
dec
jmp
bound
ds
xor
xchg
pop
sahf
ret
dec
inc
jecxz
mov
fwait
xor
hlt
mov
xchg
mov
fnstcw
or
enter
xor
mov
out
jg
push
mov
outsb
add
add
mov
mov
stos
inc
fistpll
lods
test
lret
sti
push
out
test
jmp
xlat
outsb
jo
mov
ret
hlt
dec
inc
fdivrs
lods
inc
inc
pushf
pop
test
lret
bound
mov
fwait
xor
or
popa
es
sbb
mov
cli
aaa
lea
stos
mov
fbstp
enter
fidivs
dec
out
mov
add
push
xlat
mov
or
test
scas
sub
pop
mov
xor
jl
sahf
push
ljmp
jno
and
mov
jne
aas
cli
xchg
lods
inc
enter
dec
jmp
jl
mov
rcrl
rclb
inc
loope
mov
lcall
mov
test
mov
adc
aas
xlat
jg
or
leave
xchg
sub
out
jge
push
scas
add
fnstenv
pop
lea
and
mov
stos
inc
fidivs
lods
cmpsl
dec
pusha
xor
xor
cli
push
out
test
push
jmp
insl
jo
lahf
mull
mov
repz
inc
fdivrs
lods
inc
inc
fwait
pop
test
lret
bound
mov
fwait
xor
or
lds
mov
sbb
cmc
mov
arpl
mov
stos
mov
fidivs
enter
fnsave
dec
out
mov
add
push
mov
or
test
scas
sub
pop
scas
dec
xor
jl
popf
push
ljmp
jno
and
mov
je
aas
stc
xchg
lods
inc
sbb
dec
call
jl
lahf
cmp
subb
xor
mov
sahf
mov
loopne
mov
cltd
xor
arpl
popa
clc
mov
adc
ds
jg
or
leave
xchg
sub
out
jl
push
scas
add
push
ss
fnstenv
pop
lea
and
mov
inc
fnsave
lods
cmpsb
dec
pusha
xor
xor
stc
push
out
sbbl
jmp
aad
jo
sahf
mulb
mov
repnz
inc
fdivrs
lods
inc
inc
lcall
cwtl
in
jge
push
mov
fwait
xor
or
les
mov
pop
mov
fninit
cmp
mov
arpl
xor
push
sbbl
push
stos
lahf
fsubrl
dec
out
std
mov
add
push
aad
and
movsb
stc
nop
sub
scas
sub
scas
dec
xor
jl
pushf
push
ljmp
jno
and
mov
jae
aas
clc
xchg
lods
inc
sbb
dec
out
bound
insb
jl
sahf
cmp
subb
icebp
lea
sahf
mov
fbld
outsb
cwtl
xor
bound
popa
clc
mov
adc
cmp
pop
xor
nop
sub
out
jnp
push
lods
add
xor
push
lea
and
mov
stos
inc
fdivl
movsl
std
leave
pusha
das
xor
clc
push
out
sbbb
jmp
aam
jo
popf
cmc
and
icebp
inc
inc
fdivrs
lods
inc
inc
cltd
pop
test
lret
bound
mov
fwait
xor
or
ret
pop
es
push
mov
fnclex
aaa
cmc
mov
arpl
xor
adc
xchg
xor
or
cs
out
cld
mov
add
dec
aam
and
mov
test
scas
daa
jnp
pop
lods
dec
xor
jl
fwait
push
ljmp
jno
pop
je
mov
jb
aas
notl
pop
cmc
dec
out
bound
imul
jmp
xor
mov
sahf
mov
fisubs
outsb
xchg
xor
popa
mov
popa
clc
mov
adc
cmp
jg
push
pop
xor
daa
popf
xor
mov
out
jp
push
lods
add
xor
fnstenv
push
lea
and
push
test
inc
fidivl
lods
movsb
sti
leave
pusha
sub
dec
out
sbbb
ljmp
jno
pushf
repz
lock
inc
fdivs
scas
inc
inc
xchg
pop
test
int3
arpl
mov
fwait
xor
or
rcrl
mov
xlat
outsb
adc
inc
fsub
xor
fs
xor
sbbb
fidivl
enter
aaa
fisubrl
out
sti
mov
add
dec
fdivl
rorb
xchg
aam
test
scas
es
pop
stos
inc
ss
int3
in
cltd
push
jmp
pop
add
push
jmp
or
ds
daa
jo
inc
xlat
cmc
xchg
scas
inc
ret
push
pop
testb
arpl
imul
imul
push
inc
fsubl
mov
xchg
cs
fistpl
testb
or
pop
add
xor
lea
push
call
stos
add
xor
fidivl
push
mov
push
cmpsb
lods
inc
fdivs
scas
mov
les
jg
push
push
jmp
lahf
push
popf
shrb
or
mov
inc
fnstenv
inc
inc
xchg
pusha
test
out
adc
call
or
mov
mov
loopne
outsl
adc
testb
xchg
mov
sbbl
fdivs
leave
or
push
out
stc
mov
add
jle
mov
add
stos
inc
push
repz
test
lret
cld
xchg
push
in
enter
dec
jmp
and
outsb
ret
repz
scas
inc
rcll
inc
loop
fs
jle
cltd
xor
pushf
xor
mov
mov
aas
fisubl
mov
xchg
sub
fcompl
testl
cmp
sbbl
mov
lahf
ss
lods
push
jmp
test
jo
xor
push
mov
dec
movsb
lods
inc
jo
scas
mov
ret
ss
dec
call
in
inc
popf
push
popf
into
addr16
cltd
out
and
and
inc
fnstenv
mov
inc
xchg
pusha
test
in
adc
out
pushf
xor
or
mov
outsl
adc
testb
test
mov
sbbl
xlat
xor
or
push
out
clc
mov
add
jge
mov
add
stos
inc
push
repnz
test
aaa
into
jne
out
sti
xchg
push
in
sbb
pushf
dec
call
and
insl
roll
mov
testl
adc
mov
jmp
or
fldenv
mov
xchg
sub
pop
mov
mov
jge
cli
scas
push
push
lods
aaa
iret
sbbl
mov
lahf
ss
stos
push
jmp
cmpsl
std
jo
das
leave
push
mov
dec
mov
sbb
sub
ss
dec
call
in
inc
pushf
push
popf
int
jae
cwtl
out
and
pop
mov
inc
fnstenv
mov
aas
xchg
pusha
test
in
adc
out
pushf
xor
or
mov
fstp
outsl
shrd
xor
lea
gs
das
test
mov
sbbl
xor
pop
movsb
mov
out
idivl
add
jl
mov
add
stos
inc
push
icebp
sbb
cmpsl
inc
aaa
into
je
out
cli
xchg
push
in
sbb
or
outsb
and
insb
rolb
lea
testl
jle
xchg
xor
andb
xor
xchg
mov
cmp
pop
fnstenv
sub
pop
mov
mov
jl
cli
lods
add
sbbl
mov
lahf
ss
stos
push
jmp
cmpsb
cld
jo
cs
dec
mov
dec
mov
sbb
daa
shll
repnz
call
in
inc
fwait
push
popf
int3
gs
xchg
in
and
push
mov
inc
fnstenv
mov
ds
pusha
test
jecxz
adc
in
pushf
xor
or
mov
outsl
push
stos
inc
das
testb
adcl
dec
sbbl
aad
leave
push
mov
push
out
idivb
add
jnp
mov
lcall
inc
push
out
sbb
cmpsb
inc
aaa
into
jb
out
stc
xchg
push
in
les
push
popf
dec
in
or
insl
and
sahf
cmp
f2xm1
mov
clc
inc
fmulp
adc
xchg
xor
andb
xor
test
mov
cmp
daa
mov
nop
sub
pop
mov
jecxz
arpl
stos
add
scas
xor
push
xor
aaa
push
test
ljmp
jno
sub
fdivl
dec
es
sti
xchg
dec
mov
sbb
and
inc
jmp
in
inc
cltd
pop
sahf
lret
or
mov
sub
cmp
mov
cmp
popa
clc
rcrb
loope
push
adc
popf
xor
add
mov
mov
fcmovu
jo
test
testl
mov
test
jg
xor
add
mov
call
es
push
stos
inc
fidivs
lret
lea
push
lods
inc
push
in
sbb
movsb
aas
cmp
jo
call
in
ret
sahf
dec
jecxz
or
ss
sub
inc
mov
stc
inc
fmul
gs
bound
andl
xor
mov
mov
mov
mov
inc
fstl
stc
nop
loope
fs
test
lret
cld
push
ss
sbb
push
jmp
jo
push
mov
fnsave
nop
daa
jge
cld
xchg
dec
sahf
scas
inc
shrb
mov
icebp
int3
arpl
mov
ljmp
xchg
or
xchg
jmp
xchg
sub
cmp
or
stc
mov
filds
test
xor
movsb
xor
sub
test
fidivl
cmpsl
dec
loopne
sub
pop
stc
addr16
sub
lods
mov
test
lahf
mov
jmp
and
jo
test
fbstp
leave
mov
lret
inc
dec
jmp
mov
jo
bound
ret
jmp
out
rclb
lahf
inc
loope
or
imul
sub
inc
fucomi
xchg
cli
ds
data16
sbbl
pop
mov
ss
or
cmp
sub
add
jae
and
ficoms
cli
xchg
fbstp
cld
cmpsl
add
mov
enter
push
aaa
into
sbbl
cmp
push
in
aad
rclb
jae
sub
fidivs
dec
xchg
sub
std
xchg
inc
pushf
scas
inc
into
push
int
and
jmp
je
pop
out
ds
or
xchg
out
mov
in
inc
fsubrl
mov
cmp
shrl
fldl
xchg
xor
movsl
xor
sub
adc
jb
movsl
dec
loope
sub
nop
pop
imull
sub
scas
scas
dec
xchg
add
push
ljmp
jno
cmpsb
inc
loopne
jne
es
xchg
xchg
enter
dec
jmp
int3
arpl
shr
repz
mov
fbstp
adc
mov
fs
mov
mov
fs
cmp
shlb
pop
sbbb
sub
test
mov
mov
shrb
roll
fnsave
dec
fists
sti
xchg
fnsave
movsl
sbb
stc
push
aaa
into
sbbl
push
in
shrl
pop
lahf
hlt
jae
es
repz
xchg
sub
xchg
inc
lcall
cwtl
in
int
pop
mov
jmp
jb
pop
lock
pop
ja
nop
in
mov
in
inc
fsubrl
mov
aaa
mov
mov
fildl
xchg
cs
ss
decl
movsl
xor
sub
adc
jb
movsb
dec
loope
sub
nop
pop
imulb
daa
jl
scas
lods
dec
xchg
lcall
push
jmp
out
ret
jae
or
nop
daa
clc
xchg
xchg
sbb
mov
insl
int
lahf
cmp
shrl
jmp
repnz
mov
fnsave
pcmpgtd
mov
bound
mov
mov
gs
cmp
shlb
pop
sbbl
sub
test
mov
mov
xor
push
fidivs
and
push
test
addr16
mov
lds
iret
jg
movsb
cmp
push
in
shrl
pop
popf
bnd
and
loopne
icebp
inc
xchg
sub
call
lret
mov
jmp
gs
ds
xorl
icebp
cmp
js
mov
sub
loop
inc
frstor
mov
xor
push
shrl
flds
mov
sub
aaa
pop
std
cmpb
adc
jae
mov
cli
xchg
pop
hlt
imul
stos
inc
xchg
jns
ss
lcall
dec
in
ret
pop
pop
jno
or
les
xchg
lds
mov
dec
out
mov
imul
popf
cmp
shrb
in
xor
pop
lock
fdivl
push
fs
xchg
das
xchg
sub
mov
fsubp
xorb
cmp
shrl
pop
test
lea
out
xchg
mov
movsb
lods
add
pop
xor
sub
push
fbstp
pop
dec
loope
cmpsl
std
xchg
fnstenv
jmp
les
sarb
movsl
cmp
sahf
push
out
iret
push
pop
pushf
lock
and
xchg
sub
add
enter
xchg
jmp
cmp
out
in
test
pop
repnz
jns
mov
sub
adc
inc
fisubs
dec
xor
aam
xchg
sbbl
test
mov
sub
cmpsl
sub
mov
lds
fnsave
dec
jecxz
and
xchg
push
repnz
and
sbb
ja
aaa
into
sti
cwtl
cmpsb
cmp
dec
jmp
pop
sbb
loop,pt
jo
xchg
sub
xchg
add
inc
jecxz
mov
imul
shll
in
test
xchg
mov
fnstcw
or
rcll
dec
jg
dec
mov
addr16
aaa
rcl
imul
lock
mov
movsl
test
lret
sub
cld
push
fbstp
sbb
std
xchg
xlat
outsl
imul
sub
xchg
cmc
dec
cmp
jnp
cmpsb
cmp
int
les
out
jne
and
xchg
sub
add
bound
mov
out
sbb
in
test
repz
jp
mov
sub
adc
inc
fisubs
mov
jno
cmpsb
ret
nop
sub
dec
inc
cld
dec
cmp
xchg
ret
lods
rorb
sbb
clc
inc
push
enter
or
xor
fidivrs
enter
jmp
pop
xchg
add
roll
mov
xor
clc
gs
jg
sbb
jmp
aas
push
sub
outsl
sti
lock
xchg
je
jo
xlat
test
mov
movsb
movsl
pop
aad
stos
addb
pusha
nop
popf
dec
mov
push
cmp
mov
ljmp
inc
popa
sbb
ret
fldenv
add
decl
mov
cmp
in
push
incb
insb
scas
inc
inc
cltd
pop
daa
test
pop
jge
scas
daa
jmp
mov
push
mov
cmp
mov
test
out
push
gs
repnz
lock
add
jb
mov
in
notb
repz
call
out
and
loope
int
add
push
arpl
sbb
cmp
xlat
sbb
cmp
in
adc
or
lret
fnsave
and
lea
int3
xchg
ret
scas
sti
mov
test
fadds
add
movsl
pop
xor
dec
jle
cwtl
push
inc
ds
sbb
leave
je
mov
lahf
xchg
push
ljmp
add
adc
in
sub
sub
in
push
dec
jl
xor
xor
repnz
in
jp
shrb
xchg
fcomi
jge
xlat
pop
pop
xor
jg
mov
stc
ja
jnp
add
add
sub
call
ja
mov
xor
jno
dec
rcl
in
push
adc
repz
push
adc
mov
repnz
push
cmc
or
cwtl
pop
adc
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
into
dec
mov
and
dec
add
fcmove
repnz
movb
sbbl
mov
push
outsb
mov
les
outsb
xchg
fadd
loope
adc
scas
mov
aas
pop
cmpsb
rcrb
scas
nop
out
dec
jb
push
xor
mov
mov
mov
lock
xor
inc
outsb
push
add
cwtl
mov
notl
mov
xor
mov
sbb
hlt
dec
orl
rclb
les
hlt
sub
xor
fstl
add
jmp
push
incb
cmp
cld
mov
sub
fsubrs
sbb
adc
xor
insl
jl
rcl
xor
inc
int
and
in
push
data16
int
and
jo
xor
pop
jl
sbb
or
cli
bnd
in
test
add
aas
data16
mov
shlb
test
push
push
scas
test
and
pop
push
cmpsb
imul
or
ss
mov
xchg
adc
mov
inc
dec
rclb
std
es
lods
out
fs
stos
xchg
cmpb
dec
jo
lret
jl
adc
pop
inc
daa
adc
cmpsb
imul
in
mov
bound
mov
outsl
out
pushf
cmp
sbb
test
pop
or
addr16
call
pop
add
cmp
nop
in
pop
jo
enter
int3
pop
pop
loope
push
push
movsl
shl
pop
loope
stos
xchg
lret
xor
rorb
pop
hlt
aas
push
loop
cmp
stos
loop
jb
jle
push
sbb
pop
fbstp
and
or
push
das
jo
in
pop
cltd
push
push
and
fsubs
add
jmp
push
add
dec
xor
mov
push
les
mov
pop
jg
jp
xchg
add
dec
ljmp
mov
adc
adc
cmp
adc
jp
sbb
stc
lret
ss
daa
sbb
push
data16
std
mov
add
inc
mov
sub
lods
sarb
and
sub
mov
dec
cmp
ret
or
push
test
sbb
jg
out
sahf
js
jae
mov
lret
mov
cmp
xchg
inc
scas
sahf
jae
pusha
cmpsl
rol
adc
cmp
sbb
jne
aam
jmp
xlat
push
insb
and
lds
xor
inc
and
xchg
out
cwtl
insl
dec
inc
fnstenv
cwtl
mov
sbb
subb
mov
fs
dec
mov
jmp
stos
push
inc
push
push
stos
mov
cld
push
mov
mov
lcall
icebp
jecxz
scas
outsb
or
inc
push
jg
sbb
lds
and
repnz
cmp
sbb
loopne
pop
inc
inc
lahf
mov
or
jle
shr
rol
cmp
insl
scas
cmp
imul
pop
adc
push
xchg
jmp
adc
shr
cwtl
cltd
sbb
test
in
ret
xor
xor
sahf
movsb
int3
add
dec
bound
testl
movsl
jno
jl
pop
push
add
mov
arpl
xor
lret
mov
adc
into
xor
orl
clc
sub
dec
xchg
pop
insl
jno
test
jno
aas
scas
xchg
sahf
arpl
rolb
push
mov
xor
mov
sub
push
stos
rorl
adc
rclb
cmp
jnp
xor
mov
fdivrl
mov
dec
push
or
sti
hlt
ljmp
adc
add
cwtl
lret
push
insl
sahf
inc
mov
outsl
sbb
cli
mov
cmp
and
cli
pop
xor
sti
push
js
idivb
inc
sbb
mov
stc
sbb
push
sub
pop
cmpsb
dec
adc
pop
mov
add
popf
fs
adc
mov
adc
pusha
stc
in
jne
cli
adc
fidivrs
adc
cmc
xchg
hlt
jge
or
pop
div
shrl
xor
repz
and
jle
dec
xor
push
cmp
shrb
inc
mov
lods
out
popa
sub
loopne
enter
sub
adcb
dec
xor
imul
movsb
cmp
int
pushf
rol
lods
push
cmp
mov
ja
jnp
mov
test
out
add
idiv
data16
shlb
movsb
inc
lret
sbb
add
push
popf
inc
add
int
mov
mov
sbb
mov
bound
arpl
jno
dec
nop
add
into
mov
pusha
adc
in
adc
dec
or
cmp
popa
subl
jb
sub
cmp
push
cmpsl
pop
ja
sub
scas
pop
sbb
cwtl
dec
xor
scas
add
pop
fisubl
popa
push
out
fwait
dec
movsb
jnp
lret
in
and
cmp
iret
mov
mov
inc
les
data16
inc
pinsrw
cs
dec
jl
sub
cmp
pop
sahf
sub
in
ss
xor
jb
shll
adc
mov
xchg
cmp
iret
inc
mov
and
cmp
es
cmp
jne
into
mov
dec
cmp
pop
hlt
jb
jl
or
nop
cmp
push
mov
rolb
mov
stos
inc
mov
hlt
mov
dec
popa
add
lea
jg
cmpsb
outsb
std
out
xchg
and
push
and
push
pop
adc
scas
ret
mov
lods
jmp
xchg
sarb
dec
das
jle
out
xor
jge
sbb
pop
cwtl
rolb
or
mov
mov
jae
inc
mov
or
and
dec
xor
aaa
arpl
add
pslld
insb
xchg
mov
outsl
push
sub
jne
jg
mov
dec
xchg
push
test
pop
pop
cmc
iret
adc
mov
inc
dec
mov
adc
pop
xorl
add
xor
arpl
lahf
daa
sbb
xor
and
movq
cmp
push
dec
aaa
add
out
cli
pop
les
mov
cmp
or
sbb
or
sbb
sbb
out
aaa
sbb
xorb
jge
out
xchg
push
sahf
sbb
mov
xchg
jl
adc
jno
push
add
out
inc
aam
xchg
movsl
jbe
add
in
das
or
jae
sbb
les
aad
adc
mov
cmp
sub
push
mov
mov
push
aam
jecxz
divb
jp
and
mov
pop
decl
mov
fucomp
in
push
out
int3
out
hlt
test
adc
mov
fs
repnz
out
imul
adc
adc
mov
sub
mov
pop
testb
stos
mov
mov
pushf
test
lds
mov
dec
mov
int3
inc
cmpl
sub
xchg
mov
cmp
mov
or
jl
xor
cmpsb
dec
and
and
pop
dec
addr16
pushf
cs
mov
loope
pop
xchg
in
mov
pop
lret
and
mov
mov
in
scas
push
add
aaa
push
aas
call
ret
add
rcll
push
jno
jbe
cmp
lahf
das
or
pop
in
dec
data16
icebp
outsl
rclb
and
cmp
xor
cmpl
inc
push
sub
cmp
cmp
jne
inc
sarl
enter
inc
xor
dec
xor
inc
dec
stc
jg
pop
push
out
or
out
adc
xor
xchg
cmpl
mov
ds
sbb
dec
mov
dec
pushf
mov
test
cmpsl
jp
inc
adc
leave
in
in
pop
inc
push
xchg
int3
and
addr16
sub
jo
ficomps
or
fsts
je
ds
mov
ljmp
xchg
or
fildl
pusha
mov
les
push
fbstp
or
push
daa
mov
dec
mov
mov
repz
aas
fadd
stos
adc
mov
pop
mov
push
inc
in
enter
inc
imul
xchg
sub
cmp
mov
pop
inc
fwait
insb
into
enter
fldenv
