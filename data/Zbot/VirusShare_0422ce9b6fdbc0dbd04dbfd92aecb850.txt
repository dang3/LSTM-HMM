push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
xor
mov
mov
pusha
call
add
pop
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
ret
add
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
add
lea
sub
sub
mov
pop
mov
mov
mov
mov
push
mov
xorl
pop
sub
or
push
pop
test
je
add
mov
push
push
push
pop
push
pop
stos
shr
stos
shr
stos
shr
stos
pop
pop
subl
neg
clc
sbb
pushl
lea
lea
pop
repz
jmp
mov
pop
ret
add
add
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
add
pop
inc
and
push
pop
sub
mov
mov
shl
xor
sub
mov
mov
movl
mov
sub
je
sub
lea
mov
sub
je
mov
sub
ja
push
pop
je
popf
push
pushl
decl
ret
arpl
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
push
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
push
push
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
ret
or
add
mov
add
sub
add
push
and
add
add
cmp
add
sbb
add
in
and
add
add
mov
and
add
and
add
and
add
and
add
and
add
and
add
add
xchg
and
add
add
add
add
jb
add
mulb
add
push
and
add
add
sahf
and
add
add
mov
add
loop
add
pop
and
add
add
mov
add
into
and
add
add
add
and
add
and
add
add
push
and
add
add
add
add
add
add
adc
add
cmp
add
add
add
push
add
add
add
add
and
add
add
mov
add
add
add
add
add
nop
and
add
add
add
add
jle
add
movsb
and
add
add
mov
add
sub
add
push
and
add
add
cmp
add
sbb
add
in
and
add
add
mov
and
add
and
add
and
add
and
add
and
add
and
add
add
xchg
and
add
add
add
add
jb
add
mulb
add
push
and
add
add
sahf
and
add
add
mov
add
loop
add
pop
and
add
add
mov
add
into
and
add
add
add
and
add
and
add
add
push
and
add
add
add
add
add
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
cmp
push
jb
jbe
je
push
jb
imul
inc
add
inc
jne
jb
outsb
je
push
add
aad
inc
imul
add
popa
je
inc
imul
jns
add
call
inc
imul
bound
gs
add
je
push
gs
popa
jae
inc
jb
outsl
jb
add
add
imul
jb
je
arpl
add
call
inc
imul
bound
gs
add
push
add
outsl
jae
dec
popa
outsb
fs
add
add
gs
outsl
insl
insl
inc
jb
popa
imul
push
push
je
imul
inc
add
ret
gs
jne
jb
outsb
je
jb
arpl
jae
test
inc
jb
popa
je
inc
jbe
outsb
je
add
roll
dec
gs
jo
jb
add
add
gs
outsl
jbe
inc
imul
jns
add
movsl
add
je
gs
imul
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
dec
outsl
arpl
inc
insb
popa
addr16
add
add
outsl
bound
dec
outsl
arpl
add
push
dec
inc
dec
xor
cs
insb
add
pop
or
jae
dec
gs
popa
addr16
add
into
pop
dec
outsl
popa
fs
jne
jae
jb
add
pop
dec
jae
outsl
outsl
insl
gs
jnp
push
gs
outsl
arpl
add
xchg
push
push
gs
jae
addr16
add
das
push
inc
insb
outsl
jae
inc
gs
je
jo
add
push
imul
js
push
add
rolb
jae
imul
jnp
inc
gs
imul
outsb
addr16
add
mov
inc
imul
dec
gs
popa
addr16
add
mov
dec
jae
imul
jae
popa
addr16
add
jae
push
gs
jne
jae
jb
outsl
jae
add
ja
jo
imul
push
inc
push
xor
cs
insb
add
or
inc
gs
gs
imul
inc
gs
popa
insl
gs
jns
jns
gs
add
add
inc
fs
jae
inc
jns
popa
insl
gs
add
add
je
gs
jns
popa
insl
add
dec
push
push
push
dec
inc
dec
cs
insb
add
dec
jae
popa
je
push
push
inc
add
push
dec
push
push
dec
cs
insb
add
movsl
loop
aaa
into
ja
cltd
jb
mov
inc
stos
sub
aas
lods
jp
and
push
ja
nop
pop
xchg
dec
and
mov
sahf
loop
and
mov
dec
loope
add
ret
lahf
pop
sub
xlat
call
lcall
sub
lds
mov
int
jb
das
ret
or
cli
dec
outsl
scas
stos
data16
shrb
sub
push
mov
or
repnz
ss
pop
les
push
decb
les
test
insl
fucomip
in
into
icebp
jecxz
jg
mov
dec
pop
mov
rorl
xor
mov
imul
and
mov
xchg
ret
leave
jae
sbb
jns
lods
ss
jne
scas
in
popa
xchg
mov
sub
dec
dec
rcrb
out
lea
adc
stos
push
push
in
jge
sub
sub
and
mov
adc
lcall
sub
jl
lock
movsl
in
dec
dec
adc
jp
push
mov
and
icebp
insb
mov
push
repnz
loop
test
jecxz
sbb
cli
push
push
add
mov
mov
ficoml
sub
mov
test
lret
lret
fmuls
dec
pusha
add
cli
push
cmpsb
inc
push
repz
adc
inc
pushf
sub
mov
and
fistps
push
testl
gs
and
aas
xchg
mulb
outsb
push
push
sub
xchg
repnz
sbb
jo
sbb
mov
stos
mov
pop
mov
sub
outsl
and
icebp
jae
add
xchg
or
dec
aad
imulb
loop
js
add
add
add
add
xor
add
add
add
jo
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
or
add
adc
add
or
add
and
add
or
add
add
add
add
add
add
add
add
push
popa
add
test
add
clc
xchg
add
add
add
add
add
or
add
mov
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
sub
add
movsl
movsl
pop
scas
lods
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
stos
lods
mov
mov
cltd
pop
xchg
xchg
xchg
or
jg
jnp
jp
lods
lods
stos
add
test
mov
mov
mov
ret
ret
stos
leave
leave
lret
into
int3
rcl
in
rcl
shl
iret
rcl
hlt
int3
int3
int3
hlt
enter
enter
in
mov
mov
lods
lods
stos
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
and
mov
mov
lret
lret
rcl
sar
fcom
std
fcomp
fcom
xlat
aam
dec
rcl
dec
int3
int3
aad
aad
rcl
iret
inc
ret
mov
mov
scas
iret
movsl
mov
xchg
das
and
add
push
add
add
add
add
add
add
add
add
lods
lods
lods
add
scas
scas
sbb
mov
jnp
mov
mov
dec
leave
leave
dec
iret
sar
aam
xlat
xlat
fcom
call
aam
dec
int
dec
int3
int
aad
int
into
mov
mov
mov
std
test
cmpsb
ljmp
pop
fs
or
add
add
add
add
add
pop
add
add
add
add
add
add
push
pop
pop
add
dec
add
pop
add
push
or
inc
or
sbb
add
add
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
dec
leave
enter
into
call
rcl
call
xlat
fdivr
fcom
call
aad
dec
int3
int
leave
leave
lret
dec
into
into
inc
mov
sarb
pushl
cmpsb
cmpsb
jmp
fwait
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
imul
pop
pop
pop
fs
aas
ds
sbb
or
sbb
aaa
cmp
cmp
and
adc
push
push
pop
add
add
add
add
fs
mov
pop
mov
mov
mov
mov
mov
sarl
leave
enter
sar
aad
call
aad
call
ror
dec
enter
inc
ret
mov
mov
ljmp
movsl
movsb
sahf
popf
popf
cwtl
xchg
xchg
lcall
addl
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
arpl
push
push
push
add
outsl
xor
jle
jle
jge
jo
jno
bound
mov
cmp
cmp
mov
outsl
jo
nop
bound
pusha
inc
inc
inc
xor
add
add
add
add
movsl
movsl
movsb
add
mov
mov
mov
mov
mov
mov
mov
dec
enter
lret
leave
lret
leave
leave
inc
ret
mov
mov
ljmp
movsl
movsb
lcall
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cltd
cltd
lcall
cmp
push
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
jo
jo
pop
pop
pop
or
jp
nop
lea
incb
jnp
idivb
jnp
outsb
outsb
jo
addr16
addr16
jne
jle
jle
jp
jns
fs
inc
cmp
sbb
sbb
adc
or
stos
lods
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
test
pushf
popf
popf
call
xchg
decl
xchg
xchg
mov
mov
xchg
mov
jp
jns
das
das
das
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
sahf
in
mov
mov
addb
decb
mov
loope
jb
enter
mov
addl
xchg
push
cmp
ss
jle
cmp
movsl
mov
test
lods
lods
lods
sti
lods
lods
stos
lods
stos
lods
test
movsb
mov
xchg
xchg
xchg
decl
jg
jp
jns
jl
jp
xchg
xchg
movsb
movsb
movsb
mov
mov
mov
mov
mov
mov
mov
scas
lods
stos
xchg
push
adc
add
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
nop
xchg
incl
xchg
std
xchg
xchg
xchg
std
xchg
cwtl
xchg
stc
xchg
xchg
xchg
in
mov
or
addl
mov
pop
push
push
push
or
inc
dec
insb
imul
xchg
leave
fwait
cltd
lcall
fwait
fwait
stc
xchg
xchg
std
mov
incl
mov
lcall
test
ljmp
mov
mov
mov
mov
std
mov
mov
movsb
mov
jl
scas
test
add
adc
test
mov
incl
xchg
decb
xchg
sahf
sahf
sahf
std
mov
mov
xchg
in
nop
nop
nop
in
xchg
jne
femms
dec
add
or
sub
push
dec
dec
dec
data16
jo
xchg
xchg
rclb
xchg
std
mov
xchg
call
mov
cmpsl
ljmp
cmpsl
lods
pushl
mov
test
rolb
mov
mov
ljmp
sahf
adc
add
add
pop
adc
scas
mov
ret
lcall
mov
decl
nop
xchg
call
xchg
xchg
pushf
sahf
pushf
mov
stos
test
movsl
mov
xchg
fstpt
jnp
push
push
push
outsl
dec
dec
dec
popaw
popa
popa
jne
je
mov
jle
test
mov
nop
xchg
in
nop
xchg
testl
lea
jmp
mov
mov
pop
mov
mov
aaa
jge
mov
js
mov
cmpsb
mov
mov
mov
mov
mov
add
pop
pop
adc
mov
ljmp
popf
decl
xchg
xchg
call
xchg
xchg
call
cwtl
xchg
fwait
fwait
lcall
sahf
sahf
mov
movsb
movsb
stc
xchg
lcall
nop
xchg
xchg
les
cltd
in
xchg
cwtl
out
xchg
cmc
nop
mov
cld
xchg
jg
std
xchg
jae
fwait
push
cmp
push
cmp
inc
jl
mov
jp
mov
je
mov
outsl
ljmp
pcmpgtd
stos
or
or
mov
jle
mov
mov
stos
pushf
movsb
mov
movsl
add
mov
add
pusha
adc
mov
jmp
nop
xchg
call
lcall
mov
popf
lcall
xchg
cwtl
decl
cwtl
xchg
call
cwtl
cltd
cld
cltd
cltd
pushf
stc
sahf
lcall
popf
mov
xchg
imul
xchg
dec
jns
fwait
jne,pt
fwait
sub
sahf
pop
push
jmp
adc
adc
stos
adc
lods
adc
lods
adc
mov
push
mov
imul
mov
cltd
scas
mov
scas
lods
scas
mov
movsb
mov
add
pop
pop
adc
mov
jmp
xchg
xchg
lcall
sahf
mov
jmp
mov
cwtl
decl
mov
decl
jbe
fwait
jo
fwait
arpl
call
sub
decl
adc
or
pop
call
add
sahf
add
push
pushl
pop
jo
mov
outsl
mov
and
mov
and
inc
cmp
xchg
scas
mov
lods
scas
mov
sahf
mov
movsl
add
pop
pop
adc
lods
mov
shll
pushf
popf
pushf
jmp
cmpsb
ljmp
test
jmp
pushf
popf
decl
pop
jbe
mov
decl
sub
mov
pop
incl
add
incl
add
lea
push
call
add
fwait
add
lahf
add
or
pushl
es
mov
sub
shrl
inc
sub
lds
jge
das
jg
das
jg
leave
inc
mov
leave
mov
cld
mov
mov
movsb
movsb
movsb
dec
mov
movsb
movsl
add
push
push
adc
test
mov
sahf
fwait
popf
jmp
test
lods
ljmp
mov
lods
scas
scas
jmp
jb
decl
or
push
incl
add
addb
incl
add
mov
push
decl
add
xchg
add
cltd
add
sahf
add
mov
adc
mov
aaa
cmp
aaa
test
leave
cmp
dec
cmp
call
cmp
call
cmp
xchg
dec
mov
std
mov
mov
movsb
movsb
movsb
push
mov
mov
add
add
add
mov
dec
dec
adc
mov
mov
lahf
lcall
scas
scas
lods
pushl
mov
pushl
mov
ljmp
ja
decl
or
mov
pop
incl
or
xchg
push
incl
add
mov
push
decl
add
pushf
add
mov
add
lods
add
jo
ret
dec
inc
mov
into
inc
call
inc
mov
rorb
fmuls
call
dec
xchg
fisttpl
fisttpll
fsts
call
test
std
mov
mov
movsl
movsb
movsb
arpl
mov
add
add
add
fwait
xchg
lcall
jns
jl
popf
mov
jmp
test
pushl
mov
mov
mov
mov
mov
mov
mov
jmp
outsb
decl
sbb
pop
popa
decl
adc
mov
push
decl
push
call
add
mov
add
test
pusha
pushl
es
int3
dec
mov
aad
cltd
fcoms
fistl
fstl
jmp
push
pushf
ficomps
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
test
cmpsl
jne
sahf
sahf
or
xchg
xchg
xchg
add
adc
js
sahf
lcall
sahf
cltd
sahf
ljmp
mov
pushl
mov
mov
pushl
xchg
movsb
call
and
and
call
and
xchg
sbb
xchg
or
popl
push
call
add
mov
add
lods
add
mov
gs
mov
xor
fcomps
fldenv
jmp
arpl
jmp
cmpsw
jmp
fs
out
test
jmp
addr16
faddl
ret
mov
cmpsl
mov
mov
add
add
add
xchg
xchg
xchg
add
inc
adc
jae
cltd
xchg
cltd
call
lahf
fwait
lahf
ljmp
mov
pushl
mov
mov
mov
mov
cmp
sub
cltd
xor
fwait
das
outsl
lcall
pop
call
add
lcall
jmp
add
mov
pushl
movq
roll
jmp
outsl
stos
jmp
jno
jmp
jo
jmp
jae
jmp
mov
in
jbe
out
je
out
jae
jmp
mov
mov
cmpsl
cmpsb
lcall
sahf
add
add
insl
js
mov
lcall
mov
pushl
mov
mov
inc
rol
mov
cmpsl
scas
lcall
xor
mov
aaa
jae
sahf
xor
cltd
sbb
pop
lcall
add
movsb
add
test
add
mov
fs
mov
sbb
fistl
jmp
ja
jmp
jg
in
jg
out
cmpl
push
xchg
push
cmpl
call
mov
inc
mov
test
daa
lahf
mov
lahf
add
add
add
add
ss
pop
pop
pop
jne
jg
out
test
xchg
xchg
xchg
pushl
mov
mov
inc
sarl
ret
pushl
insb
mov
fwait
cmp
inc
jl
movsb
inc
jg
movsl
ss
cltd
pop
call
add
mov
add
lods
add
mov
data16
mov
add
iret
and
mov
in
mov
push
mov
push
xchg
ret
pop
push
xchg
push
xchg
xchg
mov
out
nop
sar
mov
inc
ret
stos
stos
stos
mov
pushf
sahf
xor
sahf
popf
add
add
add
inc
aas
add
xor
push
inc
dec
inc
jb
pop
dec
in
imul
nop
pushl
mov
mov
inc
ret
ret
mov
jle
lcall
dec
cmp
dec
test
movsb
xor
lcall
add
mov
add
stos
add
mov
arpl
mov
add
leave
add
call
xor
mov
in
xchg
push
lcall
repnz
push
pushf
leave
push
pushf
lret
sahf
lret
cli
sahf
int
cli
lahf
int
cli
cwtl
lret
xchg
ret
mov
cli
mov
mov
sahf
sahf
lahf
aas
nop
nop
popl
cltd
fwait
cltd
add
add
add
aaa
xor
or
cmp
jecxz
pop
call
mov
mov
mov
mov
inc
inc
leave
inc
mov
mov
ljmp
push
xchg
movsb
sub
cltd
or
popf
add
mov
add
mov
popa
mov
add
movl
jne
filds
out
mov
push
movsl
int3
push
movsl
into
stc
cmpsb
iret
sti
test
sti
cmpsl
iret
cli
test
cld
stos
sar
std
stos
sar
std
test
mov
lret
std
mov
mov
lahf
mov
xchg
add
cltd
cltd
add
add
add
xor
or
inc
bound
pop
xlat
jae
jo
mov
mov
ret
mov
ret
ret
inc
ret
mov
inc
mov
pushl
push
test
scas
push
mov
lods
dec
test
lahf
sbb
popf
add
mov
add
mov
arpl
mov
add
int
outsb
call
add
ficoms
jge
out
pop
cmpsb
push
sahf
lret
lods
sar
cli
mov
cli
mov
sti
mov
std
mov
cld
mov
std
mov
mov
std
mov
std
mov
push
movsl
jmp
mov
call
leave
lret
mov
mov
sahf
lahf
lahf
pusha
xchg
xchg
xchg
or
add
add
xor
sbb
push
add
dec
dec
outsb
outsl
outsl
mov
aad
jmp
xlat
not
rcl
std
lret
int3
int
leave
lret
lret
dec
lret
leave
inc
enter
mov
mov
scas
push
mov
lods
jge,pt
lahf
punpcklwd
mov
add
mov
arpl
mov
add
roll
outsb
call
add
fiadds
jne
jmp
jae
cli
scas
aad
mov
fcos
cld
mov
fcos
cld
mov
fdivr
cld
mov
xlat
mov
fcos
clc
mov
jmp
mov
call
lret
mov
mov
xchg
or
add
add
xor
add
add
or
movl
call
in
loop
jecxz
fsubp
fucom
fcomi
xlat
cli
aad
fdivr
int
sar
mov
imul
jmp
add
mov
mov
add
leave
add
add
fldl
jbe
jecxz
ja
in
xor
cld
mov
std
inc
loopne
inc
fdivrp
dec
inc
dec
loopne
std
leave
fdivrp
dec
loopne
cld
mov
lret
lret
iret
mov
mov
xchg
adc
add
add
incb
incb
std
incb
repz
or
in
jmp
in
out
out
sub
out
in
dec
jmp
ljmp
in
in
fcmovu
fucomp
ret
stc
lods
jno
cmpsl
cmp
movsb
adc
pop
ljmp
add
mov
add
int3
add
fadds
jb
filds
js
call
inc
popf
sti
mov
loop
dec
jecxz
dec
in
dec
in
dec
loop
dec
loop
std
int3
loope
dec
loop
std
shl
call
in
std
shl
cli
out
mov
inc
out
test
cmpsb
mov
xchg
xchg
add
add
add
std
std
add
std
incl
cmc
stc
testb
repnz
repnz
in
repnz
pop
out
lock
cmp
out
in
pop
fsubp
loopne
mov
xchg
sti
mov
push
pop
jmp
add
mov
gs
add
leave
add
rolb
jno
flds
je
in
jp
jmp
jle
cmc
pop
test
cli
mov
cld
shl
std
shl
shr
shl
call
jecxz
call
call
out
std
fld1
fld1
std
shl
push
ret
jecxz
lret
lret
lret
stos
test
xchg
xchg
xchg
and
xchg
xchg
add
cli
add
clc
add
cld
cli
add
cmc
hlt
or
shll
sarl
fwait
sbb
lcall
add
scas
add
mov
add
lret
call
add
faddl
jne
out
ja
out
sbb
cld
fdivrp
cld
fldl2e
fucomi
std
fldpi
fucomi
fsubr
fsubr
fucomp
jmp
in
fucomip
std
loopne
cld
shl
push
aam
call
rcl
clc
stos
stos
stos
lods
xchg
xchg
xchg
jo,pn
outsb
add
add
add
loop
add
mov
xchg
lods
jnp
repnz
ljmp
add
mov
add
into
add
add
filds
jne
call
sub
std
shr
std
fcomip
fucomp
std
fldl2t
std
xlat
jmp
shl
sti
shl
cli
shl
stc
into
clc
int
push
ret
in
mov
xlat
xlat
fdivr
mov
mov
lcall
add
add
add
add
mov
subb
insb
jmp
add
mov
mov
add
rolb
outsb
call
add
loope
jns
ljmp
cld
xchg
enter
loopne
sti
lret
loope
cli
fdivrp
test
aam
repnz
sar
repnz
into
call
mov
sar
ljmp
imul
fndisi(8087
cmc
loopne
fsubrp
mov
mov
xchg
add
add
add
into
int3
add
shrb
loopne
ss
mov
add
mov
addr16
mov
add
dec
pop
jb
rorl
je
fistl
ja
loope
cmp
ljmp
ljmp
std
loopne
mov
cli
enter
enter
int
fmul
into
into
shl
aad
out
loopne
jmp
call
popf
call
lret
lret
push
stos
lods
lods
adc
test
cmpsb
add
ret
roll
ret
mov
lahf
stos
aam
dec
jg
popf
sbb
test
insb
scas
es
mov
ja
mov
dec
xchg
ret
push
mov
lret
test
mov
sarl
enter
lret
ror
int3
mov
iret
shlb
fcom
aam
fcmovnu
gs
in
out
jmp
xor
div
mull
lock
icebp
sbb
fstp
or
mov
into
add
add
add
rolb
mov
les
imul
sbbl
mov
test
mov
mov
cmpsl
leave
mov
enter
lret
jp
int
addr16
rclb
rcl
dec
fcom
inc
rcl
aad
aad
fldenv
xlat
fcmovnu
sbb
adc
in
push
jecxz
out
jmp
in
lock
add
cli
testb
sti
add
incl
std
add
mov
mov
mov
lods
mov
mov
mov
mov
mov
ret
push
rol
inc
ror
xor
int
daa
lret
ror
and
aad
sbb
rcll
iret
rorl
rcl
aad
aam
fadds
add
add
jecxz
add
jmp
add
xlat
aad
std
incb
mov
mov
add
rol
mov
mov
mov
mov
push
ret
or
enter
movl
leave
roll
rcl
aam
rcl
aam
aad
aad
aam
add
fsub
add
aad
add
loopne
add
add
out
add
icebp
repnz
incb
std
add
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
lds
mov
mov
mov
test
stos
dec
cmpsl
cmpsl
test
pop
add
add
add
add
add
add
mov
scas
adc
mov
aam
ror
jmp
aad
cmc
rcl
sar
into
iret
into
cli
int
lret
stc
lret
hlt
mov
mov
iret
stos
lods
lods
fwait
xchg
xchg
xchg
dec
aas
ds
add
sbb
add
adc
add
push
add
add
addl
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
sarb
iret
into
iret
aad
xlat
call
aad
call
rcl
dec
int
dec
lret
sarb
cld
stos
lods
stos
icebp
cwtl
xchg
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
jae
jae
jae
gs
dec
dec
dec
cmp
sub
sub
aaa
xor
dec
sub
adc
sub
add
add
mov
mov
mov
mov
mov
mov
dec
int3
lret
rcl
call
rcl
dec
lret
int3
inc
mov
mov
mov
ljmp
lahf
sahf
xchg
xchg
cwtl
jmp
outsl
outsl
xchg
adc
add
xor
add
add
add
add
addl
test
push
push
pop
pop
pop
movsb
push
push
push
stos
imul
push
pop
pop
cmp
aaa
aaa
pop
outsl
jo
adc
mov
fstpt
mov
sar
mov
mov
mov
ljmp
fwait
pushf
call
xchg
xchg
lcall
xchg
dec
dec
dec
dec
adc
adc
add
add
add
add
add
pop
fwait
lcall
popf
cwtl
cltd
fcoml
addl
jmp
jns
sarb
jp
jnp
jnp
jae
jae
push
push
push
cmp
jae
popf
pushf
pushf
mov
lods
scas
repz
lods
scas
sti
scas
scas
scas
std
test
sahf
pushf
call
test
call
mov
lods
jmp
scas
scas
leave
movsb
cmpsb
movsl
cltd
je
jae
adc
adc
add
add
add
add
outsb
outsl
insl
pop
nop
mov
loop
cwtl
popf
incl
mov
sti
xchg
xchg
xchg
lock
fimuls
mov
jp
pop
pop
inc
inc
inc
inc
dec
outsb
jo
orl
cwtl
cwtl
repnz
xchg
xchg
std
mov
call
pushf
popf
ljmp
test
mov
mov
mov
xlat
cmpsl
mov
jg
pusha
pusha
pusha
or
scas
mov
cmpsb
lahf
mov
decl
mov
std
lahf
lahf
sahf
sti
lahf
mov
lcall
push
push
jo
pop
pop
outsl
insb
insl
outsl
xchg
subl
nop
xchg
lock
mov
lcall
popf
pushl
outsb
xchg
mov
push
mov
mov
mov
out
scas
lods
insl
test
add
add
add
add
popa
or
mov
in
mov
nop
call
cwtl
lcall
lcall
popf
popf
popf
cli
xchg
xchg
xchg
jmp
xchg
lea
nop
orl
cld
xchg
pop
jle
pushf
dec
jp
mov
ss
mov
jae
mov
insl
ljmp
sbb
mov
mov
scas
mov
movsb
movsl
mov
add
add
add
pusha
or
mov
in
movsl
test
xchg
cwtl
cltd
lcall
mov
mov
decl
addl
cld
cwtl
popa
test
xchg
dec
jp
cmp
xchg
sub
xchg
sbb
cltd
adc
mov
pop
imul
mov
insl
pushl
push
jb
mov
pop
xchg
mov
scas
scas
xchg
lahf
lahf
sahf
adc
add
add
pusha
popa
pusha
or
stos
mov
stos
mov
mov
ljmp
cmpsl
test
decl
imul
mov
pop
decl
or
mov
pop
call
add
cmpsb
or
jae
mov
das
jge
les
jge
xor
dec
pop
cwtl
inc
test
imull
test
add
add
add
pop
pop
pusha
or
movsb
stos
in
mov
cmpsl
pushl
mov
pushl
xchg
mov
decl
push
push
incl
add
decl
add
xchg
add
mov
add
mov
insl
inc
cmp
dec
inc
mov
rolb
inc
nop
fmuls
call
arpl
stc
mov
mov
movsl
movsb
movsb
daa
std
std
std
add
add
add
pusha
or
mov
ljmp
mov
pushl
mov
stos
lcall
push
call
pop
pop
decl
add
xchg
add
mov
add
lods
add
jne
rorb
fstps
fistpl
ficomps
jmp
pop
mov
jmp
insb
test
int
mov
ret
cmpsb
xor
addb
add
add
dec
pop
jl
jl
fwait
xchg
cwtl
jecxz
mov
scas
pushl
mov
mov
jmp
sub
lcall
and
xchg
adc
add
lahf
add
add
mov
mov
xor
fsubl
jmp
insl
stos
jmp
outsl
lods
jmp
jb
in
jb
call
test
std
mov
cmpsl
test
add
add
add
dec
pop
outsb
insl
insb
bound
cwtl
xchg
ljmp
mov
mov
mov
jbe
lcall
jne
pushf
sub
xchg
or
lcall
pop
ljmp
gs
or
call
inc
xchg
jmp
jns
ljmp
out
xchg
push
xchg
fldcw
mov
push
cltd
fwait
lcall
sub
push
push
push
dec
pop
pushw
loopne
mov
mov
mov
ret
mov
sahf
jmp
inc
cmp
sub
cltd
push
pop
jmp
add
mov
fs
mov
adc
mov
push
xchg
ret
push
xchg
cltd
enter
lret
fwait
lret
xchg
jmp
lods
inc
mov
stos
popa
lahf
mov
add
xor
xor
pop
pop
pop
push
fisttpl
mov
mov
ret
ret
ret
pushl
push
xchg
lods
dec
cmp
and
sahf
add
ljmp
add
add
leave
add
fldenv
cmp
cmc
movsb
int3
push
test
iret
cld
test
iret
std
lods
sar
sti
cmpsb
int3
jmp
mov
inc
mov
stos
jne
sahf
pushf
or
add
add
push
dec
dec
aaa
jae
je
stos
test
into
out
into
lret
cmc
lret
sti
enter
leave
mov
mov
stos
bound
jmp
add
mov
fs
add
iret
add
flds
call
xchg
sti
mov
mov
cld
mov
fdivr
sti
mov
fdivr
cld
mov
leave
dec
ret
scas
lods
lods
mov
add
add
add
add
or
aam
dec
loopne
loop
fistps
fcmovnu
fsubr
shlb
test
push
popa
pushl
add
enter
xlat
add
loop
jl
lock
mov
cld
ret
loope
inc
loope
std
enter
enter
enter
lret
loope
std
out
mov
lret
mov
xchg
popf
sahf
popf
sbb
add
add
std
std
add
incb
jmp
out
sbb
in
in
xor
loop
in
mov
mov
mov
add
pushl
imul
fildl
je
ljmp
cld
sti
iret
out
std
shl
call
out
aam
call
call
shl
push
enter
lret
sar
mov
mov
and
add
add
incb
incb
cld
cld
pop
aam
aam
mov
pop
mov
popf
or
ljmp
add
les
imul
filds
ja
out
and
std
shl
std
std
fldl2t
std
xlat
jmp
std
xlat
out
std
aad
push
jmp
iret
xlat
sti
mov
popf
sahf
das
add
add
int
int3
or
fs
mov
add
mov
add
add
loope
ja
out
xor
cli
lret
loop
stc
lret
cmc
bnd
icebp
rcl
lock
in
aad
out
aam
in
aam
in
fucomp
mov
test
add
add
add
aam
push
mov
jae
or
mov
insb
inc
pop
jb
int3
and
cs
fists
loop
mov
out
loop
leave
jmp
fdivrl
lret
enter
into
aad
in
fcompl
out
call
rorb
mov
add
lods
stos
lods
add
xchg
movsb
les
mov
mov
xchg
fidivrl
jg
rol
lods
mov
mov
ret
nop
rol
enter
int
aad
int
aam
iret
dec
xlat
fcomp
cmp
loopne
das
in
frstor
in
repnz
in
in
or
std
std
add
add
add
incl
mov
mov
outsb
scas
mov
lods
data16
mov
mov
mov
xor
leave
leave
and
aam
pop
mov
rcl
or
loopne
or
into
into
add
std
std
add
std
std
add
add
add
int3
into
pextrw
or
int
into
add
std
std
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
lcall
daa
rol
enter
enter
enter
ret
ret
mov
scas
insb
lods
lods
lods
xor
je
add
add
add
add
add
add
add
add
add
add
add
add
lods
lods
stos
add
mov
enter
sar
aad
std
rcl
sar
iret
into
into
std
vshufps
mov
test
gs
pop
sbb
add
add
add
add
add
add
add
add
jno
jae
push
inc
dec
das
das
cs
and
add
add
mov
mov
cmpl
ret
into
int3
call
aad
dec
into
int
mov
mov
scas
lods
lcall
mov
push
add
add
add
add
je
jae
test
adc
popa
popa
bound
outsb
insl
insl
jb
popa
popa
cmp
pop
sbb
mov
in
mov
mov
mov
lods
stos
lcall
xchg
xchg
lcall
xchg
cwtl
lds
jb
es
add
add
add
jae
jb
fwait
xchg
fwait
mov
test
clc
mov
or
addb
push
push
dec
inc
mov
fwait
into
mov
mov
xchg
decb
mov
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
push
add
add
jg
adcl
test
cmpsb
cld
mov
xchg
xchg
xchg
cld
popf
sahf
sahf
cmc
lcall
mov
push
push
imul
jle
lea
notl
mov
pushl
push
mov
stos
mov
stos
lods
lods
push
stos
stos
stos
add
add
add
test
test
xchg
xchg
xchg
lcall
lcall
cwtl
lcall
xchg
mov
loope
je
out
xchg
fs
push
jl
fwait
inc
jne
cmpsl
aaa
jbe
scas
sub
jno
mov
insb
pushl
pushf
scas
lock
mov
imul
into
add
xchg
pop
scas
movsl
stos
test
sahf
sahf
popf
jmp
movsb
movsb
call
imul
nop
inc
je
mov
imul
xchg
adc
xchg
or
mov
push
outsb
pushl
es
ret
inc
ds
mov
scas
mov
stos
stos
stos
or
add
add
pushf
mov
cld
test
test
scas
scas
mov
scas
scas
mov
lahf
xchg
decl
or
xchg
decl
add
mov
adc
shlb
call
inc
mov
inc
call
dec
xchg
dec
cwtl
mov
mov
mov
mov
add
add
push
xchg
xchg
xchg
test
mov
scas
pushl
mov
movsl
call
sbb
pop
decl
add
mov
add
mov
push
xchg
fstpl
fistps
jmp
popa
movsl
jmp
movsw
call
pushf
mov
mov
mov
cmpsb
cmpsb
test
add
add
bound
adc
sahf
pushf
lcall
mov
mov
lcall
xor
lcall
lcall
add
mov
xor
call
jp
push
jle
push
jg
fistpl
mov
mov
add
add
adc
push
cmp
mov
mov
ret
sar
mov
jmp
inc
jl
sahf
and
pushf
add
ljmp
add
ret
pop
outsb
fisttpl
out
lea
push
xchg
push
xchg
push
xchg
enter
mov
cmpsb
sub
aas
inc
aas
adc
push
xchg
xchg
mov
inc
ret
inc
mov
xchg
ljmp
sbb
cmpsb
add
mov
arpl
ret
call
adc
in
insb
scas
clc
cmpsl
into
stc
stos
sar
sti
lods
sar
std
scas
sar
cld
lods
sar
ljmp
fldenv
std
incb
xor
xor
mov
mov
rcl
aad
aad
aam
rcl
shr
leave
leave
lret
cli
mov
mov
jmp
inc
add
add
call
mov
mov
inc
cld
ret
inc
lock
shl
test
jg
add
add
stos
lods
stos
add
jmp
or
call
out
outsb
fcomp
fisubl
movsb
and
pop
mov
add
fiadds
jbe
out
aaa
xchg
cli
mov
std
int
call
in
call
out
std
shl
std
aam
push
enter
int3
in
lods
lods
lods
popa
jg
addl
add
add
incl
incb
int3
lret
shrl
sahf
sbb
lods
add
mov
add
jecxz
jns
hlt
push
cmpsb
inc
loope
std
xlat
call
cld
aam
std
shl
sti
aam
push
enter
int3
shl
mov
mov
xchg
xchg
xchg
pop
ret
ret
mov
mov
cld
lods
add
mov
push
jne
fistps
cmp
imul
in
mov
into
repnz
loope
lret
call
fcmovnu
scas
ret
ret
lds
fwait
lcall
add
add
mov
lods
xchg
dec
and
push
mov
ret
int3
lret
mov
fdivrs
lret
adc
into
outsl
fmul
into
pop
aad
jecxz
loope
call
in
out
sbb
rol
add
mov
cmp
movsb
lods
arpl
lods
mov
ret
cs
mov
int
fstp
fisttps
into
int
or
aam
push
std
std
incb
jg
addl
stos
incb
mov
incl
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
std
adc
xchg
sub
arpl
dec
mov
rcl
repz
rclb
icebp
mov
fidivs
push
cld
xchg
scas
mov
sbb
and
iret
push
pop
push
xchg
jae
cmc
movsb
mov
pop
in
jl
testl
lds
mov
jp
mov
add
inc
push
pop
mov
gs
xchg
mov
xor
call
or
cmp
adc
outsl
push
mov
lea
in
mov
push
add
jno
lret
xchg
icebp
mov
test
xsha256
cmpsb
push
std
push
popf
cmp
mov
mov
fsubrl
push
hlt
pusha
mull
inc
jle
js
movsl
cmp
cltd
pushf
xor
ret
pop
or
mov
js
inc
fsubrs
jge
xchg
scas
xchg
testb
out
stos
sbb
cmp
push
cmp
leave
push
pop
lock
mov
mov
bndstx
and
add
pop
test
ds
and
outsl
and
push
nop
inc
fcmove
jae
out
mov
sbb
dec
lods
jg
fists
mov
es
fldcw
mov
test
jmp
adc
aas
pushf
xor
push
lods
js
mov
lret
into
gs
xchg
out
push
out
mov
outsb
add
cmp
pop
mov
nop
pop
mov
push
mov
lahf
fnstsw
mov
int3
std
push
push
lds
stc
nop
shlb
dec
jecxz
adc
iret
inc
subb
fs
in
xchg
aad
pop
pop
mov
or
sub
sub
les
pop
mov
pop
dec
loope
mov
es
push
inc
xor
push
push
jmp
inc
movsb
cmp
jb
xchg
ret
notl
ja
dec
scas
insl
pusha
mov
ja
andl
push
clc
lahf
xchg
sub
sbb
mov
and
sti
xchg
mov
les
in
xor
mov
or
sub
jae
pop
sub
mov
dec
ffreep
or
mov
jecxz
std
adc
aaa
mov
add
mov
xor
xchg
sub
jbe
mov
mov
adc
in
inc
add
arpl
fsubr
orl
sub
lahf
pop
sti
jmp
sub
dec
or
add
stc
push
repz
fsubl
arpl
jbe
sahf
xor
leave
sbb
ss
cmp
stc
nop
hlt
nop
adc
stc
nop
adc
ss
scas
addr16
xor
or
ficoml
or
sub
mov
inc
in
es
into
gs
lods
inc
add
in
orl
mov
stos
ljmp
mov
std
push
inc
fldl
mov
inc
ret
stc
hlt
dec
mov
sbb
mov
ss
push
out
inc
cli
xchg
jae
fdivl
xchg
sbb
xchg
out
int
mov
scas
out
push
jmp
or
into
cmp
push
in
mov
nop
daa
shrd
fbstp
scas
inc
bound
xchg
sub
or
mov
mov
test
ljmp
sub
lahf
pop
cli
in
subl
mov
jle
inc
lahf
sub
push
icebp
inc
frstor
jae
sbb
lahf
ss
xchg
sbbb
sbb
aaa
sbb
jae
cmp
xchg
repnz
jae
adc
mov
loope
xchg
adc
into
xchg
xor
scas
push
mov
cmp
pop
inc
fimull
xchg
xor
sarl
mov
sub
rol
jns
pop
add
pop
xchg
insl
add
ret
hlt
mov
pop
jecxz
mov
push
jmp
xchg
shrl
ret
repz
repz
nop
sarl
xchg
das
js
pop
popl
lcall
jne
popf
cs
in
pop
mov
jbe
lds
int
push
pop
icebp
pop
mov
xchg
fbstp
and
push
call
scas
rcr
je
iret
in
std
sub
xor
int
push
jns
xor
iret
dec
in
ret
jecxz
cmc
sbb
push
inc
insb
push
lods
cltd
gs
xchg
mov
sbbb
adc
lret
rcrl
ja
cwtl
popa
fbstp
mov
std
xchg
in
ds
outsb
inc
mov
jne
cmc
mov
test
mov
and
stos
pop
push
daa
mov
add
je
dec
pop
push
in
mov
adc
lret
and
lods
inc
mov
jne
or
jo
dec
pop
shrl
cwtl
rcrl
mov
dec
dec
xor
test
sbb
or
jge
and
fisubl
es
dec
sub
jge
jns
rep
scas
inc
xchg
cs
dec
iret
data16
xchg
sub
lods
sub
scas
inc
push
mov
pop
scas
popa
cmp
push
rcrl
push
out
hlt
cmp
popf
xor
mov
cltd
xor
cmp
add
lds
clc
inc
mov
je
pop
mov
fwait
xor
dec
movsl
cmp
sbb
dec
stos
dec
in
fsubrl
push
inc
fiadds
and
adc
add
add
add
and
xchg
sub
sbb
sub
sti
test
sub
cmpsb
scas
rep
cmp
jns
mov
sub
out
cld
mov
fsubrl
jg
push
scas
or
mov
mov
leave
pusha
add
notb
mov
fs
outsb
jno
lahf
push
es
popl
cwtl
mov
outsb
dec
out
sbb
jl
fucomp
jg
push
out
xchg
xchg
sti
xchg
leave
jecxz
data16
jbe
add
xor
hlt
mov
pop
stc
nop
mov
push
cmp
iret
sbb
xchg
or
jne
sbb
mov
add
scas
push
call
xchg
icebp
pop
and
xor
into
in
jne
and
je
out
pop
sahf
sbb
adc
inc
and
mov
enter
push
ljmp
jp
xor
or
pushf
xor
push
aam
addb
push
xor
cld
sub
xor
xchg
mov
ss
dec
or
inc
fwait
aaa
into
shlb
add
icebp
push
in
es
xchg
sub
push
inc
xchg
scas
mov
fdiv
xchg
out
bound
mov
cltd
in
repnz
mov
loop
add
lahf
outsl
cmp
mov
loop
pop
fistpll
fsubrs
mov
push
jecxz
insl
and
mov
xor
in
popa
clc
and
popf
jnp
jecxz
cs
xchg
fdiv
shrl
inc
insl
jb
xor
sub
repz
icebp
jns
and
or
imul
jnp
aad
and
pop
cs
adc
es
sub
testl
dec
das
jl
fdivl
cmpsb
inc
xchg
sahf
xor
test
daa
mov
cmp
enter
lea
iret
adcl
out
pop
call
adcl
rcrb
scas
lea
cltd
jnp
add
gs
out
mov
and
sbb
jns
aaa
into
mov
fistpll
rorb
fsubrs
xor
dec
js
mov
fidivl
shrl
rolb
or
push
fidivs
ja
stos
movsb
jbe
rol
dec
mul
cmpsb
mov
dec
xor
lahf
gs
or
ret
xchg
lods
hlt
fnstenv
dec
dec
sub
xchg
xchg
cs
fisubrl
lds
bswap
gs
pop
testl
fcmovbe
les
std
inc
sub
jno
dec
stos
inc
addl
lock
or
adc
sub
mov
jge
ds
sahf
fsubr
iret
lret
sub
std
lock
and
fsubr
push
inc
push
and
mov
les
push
push
adc
testl
les
inc
ficoml
add
cmc
mov
data16
lea
scas
inc
loopne
inc
fmuls
push
xor
aaa
das
pop
negb
gs
sub
push
in
pop
out
aam
and
push
pop
push
xchg
stos
rorb
mov
cmpsl
sbb
dec
push
jns
nop
lods
iret
mov
je
push
push
lret
sti
leave
stc
nop
sti
sbb
jle
xor
lock
les
sbb
repnz
inc
lock
sub
cli
jl
insl
testl
xor
jle
or
mov
sti
push
sbb
mov
or
test
or
xchg
inc
mov
gs
movsl
jbe
mov
jbe
shrb
mov
stc
js
mov
dec
bound
add
repz
or
ds
and
jmp
xor
and
add
pop
xor
xchg
jne
leave
repz
mov
negb
mov
sbb
xchg
mov
gs
lahf
test
push
and
xchg
ret
int
cmpsl
mov
std
repnz
cltd
aam
js
xor
dec
cmp
fsubr
cmc
jbe
and
shll
lds
cld
push
mov
or
test
imul
scas
add
pushf
insb
dec
pop
mov
in
cmp
loop
xor
mov
jae
movsl
in
fstl
jg
dec
lahf
adc
push
mov
into
adcl
xchg
or
inc
je
sti
jle
lock
xor
jle
call
lahf
insl
adc
xor
imul
arpl
insl
inc
adc
loop
mov
mov
push
xchg
loope
ficoms
lea
in
sbb
rcl
push
mov
jbe
push
addr16
iret
sub
fisttpl
mov
mov
cmpsb
sbb
sub
int
cmp
popa
dec
sti
sar
jns
pop
movsl
int
push
jmp
push
inc
stos
and
stos
xor
xchg
dec
icebp
movsl
loope
mov
jbe
push
jne
loopne
lcall
sbb
or
nop
ds
sbb
mov
pop
push
test
pop
lods
cmpsl
push
mov
mov
or
cmp
stos
call
cmp
icebp
inc
sbb
jae
fnstcw
add
jb
push
popf
and
push
cmpsb
std
outsl
push
jne
lods
xchg
add
lcall
pop
jecxz
mov
adc
movsb
pop
popf
xor
push
arpl
xor
mov
xchg
rcrl
add
fidivrs
incl
mov
xchg
lcall
aas
cmp
scas
push
adc
jge
jmp
xor
repnz
adcl
cmp
in
data16
idiv
jb
pop
enter
and
xchg
fisubrl
cs
fwait
and
xor
push
dec
cmc
push
scas
loopne
mov
cmpsb
gs
or
xor
jno
ss
in
xlat
cli
data16
dec
jns
addb
mov
sbb
pop
xor
inc
fldcw
mov
sti
leave
int
add
adc
xor
adc
mov
rol
mov
call
jo
mov
push
out
or
xchg
add
push
mov
or
enter
inc
jmp
movsb
cmp
push
scas
or
mov
jo
sbbb
and
in
lods
inc
and
insl
add
dec
fidivs
ret
in
cld
xchg
ret
or
sbb
lods
cmp
iret
dec
xchg
push
in
xchg
rolb
jno
je
mov
and
sub
xor
and
push
call
out
mov
sbb
or
test
mov
mov
push
out
sar
lret
bound
sbb
inc
sub
adc
data16
push
std
pop
sahf
jnp,pt
sbb
fisubl
lret
mov
xor
popa
clc
stos
pop
shrl
ret
jg
cmp
pop
mov
outsb
lcall
mov
dec
loope
push
call
call
testl
imul
pop
lea
and
jp
pop
hlt
les
add
fdivrp
xchg
and
mov
sahf
dec
sbb
jae
test
roll
xchg
pop
mov
pop
out
pop
xlat
aad
mov
jbe
cwtl
loopne
mov
lahf
les
mov
aad
sub
jb
dec
dec
loop
jge
nop
xchg
ja
add
xchg
fiadds
ss
mull
jmp
arpl
or
nop
daa
aas
add
xchg
jns
mov
xor
sar
addl
or
gs
mov
lods
lea
int3
mov
stc
cmc
in
outsb
pop
pop
inc
fcomps
add
js
pop
divb
and
enter
std
loope
xor
push
dec
in
adc
add
fsubrs
fisttpll
lea
aad
stos
cld
xlat
outsb
in
push
xor
cmpsb
or
cltd
mov
int
mov
dec
outsl
push
mov
ret
cmp
dec
loope
fldcw
call
add
jle
dec
add
popf
inc
bound
mov
mov
leave
sub
in
inc
dec
loop
cmpsl
jnp
clc
xchg
imul
in
mov
inc
push
mov
cmp
cmp
pop
mov
int3
loop
pop
push
and
inc
pop
xor
lahf
outsb
push
mov
mov
cmp
in
jle
push
push
pop
repnz
das
pushf
xor
jb
adc
xchg
sarl
pop
test
shrl
inc
and
jne
add
pop
cmpsl
pop
mov
inc
push
jmp
jmp
aam
fiadds
repnz
push
mov
adc
idivl
das
xchg
int
jae
mov
ljmp
jge
lahf
sbb
mov
adc
jp
xor
mov
repz
fisttpll
and
jnp
fimull
add
cltd
xor
fidivl
ds
jbe
jl
js
pop
popf
addb
je
shlb
xchg
adc
hlt
xor
lds
pop
or
repnz
sub
jle
jns
pop
cwtl
dec
loopne
jbe
cs
out
push
mov
call
adc
jnp
push
movsb
cmp
add
add
stos
push
sub
ja
jge
leave
fsubrl
mov
stc
enter
and
adcb
dec
cmp
js
sahf
xor
or
jbe
pop
ror
popa
mov
shr
jg
mov
mov
fcoml
cmpsl
sbb
adc
push
inc
xlat
add
cmc
mov
push
sub
jl
cltd
inc
mov
xor
pop
cmpsb
cmp
daa
mov
pop
loope
pop
add
jecxz
fwait
sub
mov
mov
pop
mov
lret
pop
ds
cmp
jb
pop
repz
fdivrs
leave
outsb
js
ret
das
adc
testb
add
ja
movb
mov
xchg
mov
fs
add
sbb
add
cs
aas
xchg
nop
daa
gs
pop
out
mov
jbe
adc
arpl
xchg
mov
mov
ret
scas
sub
or
add
out
test
popa
clc
sub
mov
push
shrl
sbb
dec
fildll
lods
inc
xor
pop
lret
pop
test
outsb
mov
scas
jle
mov
and
aam
mov
stc
mov
repnz
fsubrs
out
and
cmpsl
aaa
pop
mov
mov
lods
inc
mov
fxch
bound
push
data16
nop
or
mov
mov
fsubs
fldcw
ret
dec
ss
push
insb
insb
add
jl
xchg
sbbl
mov
cmp
cmp
pop
daa
xchg
pop
repnz
inc
out
jns
das
outsl
repz
dec
mov
popf
sbb
mov
mov
aas
test
enter
dec
in
ss
inc
or
add
mov
int3
and
pop
xlat
inc
xlat
add
outsb
push
sub
popa
jg
mov
jl
sti
cmp
mov
adc
xor
cmp
push
lret
ret
ftst
xlat
outsb
add
imul
sub
mov
mov
dec
jnp
stos
bound
lds
dec
out
dec
out
adc
imul
lds
call
jno
sbb
add
icebp
sub
enter
stc
loope
loope
adc
incl
lds
xchg
mov
aam
cwtl
sti
fdivl
mov
xchg
in
sbb
aaa
add
jnp
adc
in
lods
xor
inc
push
cltd
xor
push
in
push
mov
dec
ds
add
data16
cwtl
adc
xorb
rcrb
es
dec
ds
fildl
push
out
xlat
push
stc
xchg
icebp
test
mov
mov
xor
inc
aas
mov
jbe
fcmovu
jno
in
test
daa
clc
jo
or
int3
lcall
sti
xor
repz
push
in
insl
sbb
cmp
jno
scas
cmp
es
scas
inc
xchg
int3
arpl
sahf
in
cmp
ljmp
sbb
dec
outsl
ss
popa
push
out
xchg
pmulhuw
push
stos
ret
jge
inc
push
loopne
xchg
test
arpl
fsubr
xor
pop
or
mov
daa
mov
cmp
inc
fcoml
popa
push
cli
inc
push
xchg
scas
cmp
mov
ret
pop
sbb
cmp
push
pop
lret
cmp
test
cmpsb
or
js
shl
lock
sub
dec
fildll
les
xchg
mov
test
jo
test
cltd
mov
cmp
fdivs
pop
sub
into
gs
fbstp
sahf
clc
pop
push
std
xchg
lcall
mov
lock
icebp
cmp
or
fs
andb
out
pop
stos
sbbb
jb
or
jnp
aaa
mov
fisubrl
dec
clc
fmul
arpl
adc
mov
movsb
adc
arpl
mov
ljmp
sbb
mov
test
mov
jae
inc
fsubl
iret
arpl
add
lret
bound
xchg
aam
lahf
ss
sbb
pop
jbe
mov
dec
arpl
or
es
fidivrl
sbbl
je
and
mov
mov
add
or
jo
sub
in
inc
nop
mov
fisubrl
adc
add
mov
fistl
test
fisubrs
pop
repz
sti
xchg
cs
addr16
xor
dec
adc
adc
mov
xchg
push
mov
test
cmp
cmp
jmp
push
in
fsubrl
xor
sbb
xchg
sub
ds
imulb
test
mov
mov
xor
add
jle
xor
testl
shrb
pop
pop
pop
and
mov
ds
or
mov
sti
cmp
lret
add
mov
dec
scas
sub
mov
push
iret
dec
jmp
jcxz
add
ds
cmp
pop
arpl
gs
lea
rcll
int3
xchg
mov
fistpl
mov
xchg
sbb
dec
les
dec
inc
test
cmp
sarb
sub
jnp
scas
movsb
or
xchg
popa
or
dec
aas
pop
and
or
aad
mov
pop
mov
inc
gs
addl
dec
mov
pusha
or
mov
sub
jbe
dec
imul
loopne
mov
jle
mov
inc
xor
aad
push
sub
adc
shlb
sbb
icebp
fisubs
aad
sti
testl
aaa
insb
mov
paddq
xchg
fcmovne
jmp
push
bound
xchg
mov
or
fs
pushf
je
arpl
push
mov
aad
sbb
test
mov
jl
dec
out
dec
push
mov
dec
inc
idivb
test
xorl
dec
stos
push
cs
inc
push
inc
xchg
sti
mov
sahf
aad
cmp
hlt
cmpsb
dec
xor
push
sub
loop
in
dec
test
and
fdivrl
out
outsl
push
mov
adc
lret
cmp
xchg
movsl
js
dec
jl
add
push
mov
mov
push
cmc
sahf
mov
stos
stc
fwait
xor
ficoml
mov
sub
test
sbb
addr16
jmp
bound
sub
stos
mov
repz
jl
out
or
nop
mov
push
xor
xor
ret
pusha
jecxz
out
not
int3
movb
rclb
xchg
pusha
mov
and
cmp
adc
add
cmp
lock
pushf
add
test
divb
push
sarb
shrl
inc
mov
ljmp
mov
repz
aaa
out
jg
mov
ret
pop
xchg
add
jnp
mov
stos
or
push
xor
mov
ja
mov
mov
shl
loop
lcall
xor
xchg
in
lods
mov
and
je
adc
test
insl
enter
pop
jle
negb
aam
dec
mov
and
xchg
mov
jp
mov
clc
xor
sbb
stos
mov
stc
ljmp
aad
ss
and
jns
jns
test
imull
clc
sub
xor
aaa
cli
pop
bound
popf
sbb
adc
bound
ljmp
outsb
test
sub
mov
pop
stc
jmp
cmp
idiv
adc
js
test
aaa
call
jmp
fld
out
mov
add
mov
cmc
sbb
aad
mov
xor
pop
jecxz
adc
mov
sarb
mov
mov
mov
pop
ss
in
jge
movsb
fdivrl
mov
adc
xor
into
cmpsl
aad
movsl
jns
cmp
shlb
push
mov
cwtl
push
stos
mov
push
inc
xchg
out
ljmp
sti
stc
cmp
loop
aam
cs
mov
in
out
mov
pop
xor
mov
jmp
sub
cmp
inc
add
ljmp
mull
xchg
jno
sbb
addr16
imul
cs
xchg
iret
imul
mov
or
out
fidivl
imul
ljmp
outsb
xchg
push
fs
les
fisubrl
stos
std
jl
push
dec
imul
xchg
pop
mov
dec
iret
or
fs
movsl
lret
sub
int3
scas
or
cmp
lea
data16
jbe
cmp
jnp
cmp
cwtl
fsts
mov
sub
sti
push
mov
out
pop
out
arpl
shll
dec
sub
mov
cmpsb
mov
leave
xor
sarb
aas
bound
aas
imul
cmpsb
data16
and
lds
push
mov
mov
push
mov
imul
cmpsb
or
ss
cmp
pop
jno
loopne
jns
dec
dec
push
push
and
mov
cmp
sub
adc
mov
shlb
sbb
xchg
std
inc
xor
dec
or
jecxz
and
jge
stos
test
mov
jmp
and
ret
or
sbb
mov
sub
xchg
or
ftst
xor
mov
lahf
cmp
xchg
les
push
ljmp
fmull
scas
dec
icebp
xchg
adc
mov
into
add
push
loop
jns
in
add
in
dec
aad
xor
loope
in
sarb
or
in
xchg
and
add
mov
jnp
push
lret
push
mov
xchg
push
sub
xor
push
or
divb
xchg
decl
jg
sub
gs
xor
lret
and
adc
je
push
aad
insb
lods
jo
mov
mov
test
mov
xchg
inc
mov
jl
cmp
and
cmp
mov
sub
cwtl
mov
sub
enter
mov
sub
pop
cld
bound
pop
sbb
fwait
adc
shll
inc
sbb
push
jnp
lds
out
je
ret
sbb
lcall
int3
andb
cmp
test
push
add
add
cmc
cs
dec
inc
fwait
sbb
mov
mov
sbb
xor
mov
sub
test
push
fs
and
pop
jno
insb
test
test
adc
aad
into
jns
adc
inc
jmp
test
and
inc
cmpsb
push
mov
pop
push
arpl
mov
mov
hlt
stos
pop
push
inc
add
shl
adc
jbe
mov
or
mov
add
mov
shrb
mov
xchg
jne
dec
jg
push
and
rorl
sub
data16
fsubs
mov
jne
outsb
mov
movaps
add
jbe
pop
or
mov
aaa
pop
cmpsb
sub
lods
jns
inc
xor
rol
mov
ret
sbb
mov
dec
pop
std
pop
jle
loope
push
imul
test
and
mov
pop
mov
cmp
dec
mov
jle
dec
and
dec
or
repz
andl
dec
sahf
aas
out
fstpt
inc
inc
movsl
jle
sub
jecxz
ret
fmuls
mov
jg
xor
inc
push
push
mov
push
ds
pop
cmp
inc
dec
mov
fbstp
sub
jnp
iret
add
sub
je
mov
andb
inc
push
lock
dec
fisubrs
pop
adc
repnz
daa
ret
dec
rsm
and
cmp
fidivl
lret
inc
call
out
mov
mov
shlb
pop
fwait
and
rcrl
sbb
es
push
mov
sub
bound
out
aaa
cmpsb
shr
jae
xchg
and
pop
sbb
mulb
add
out
jno
out
test
insl
call
adc
and
icebp
inc
pop
dec
push
rorb
in
cmp
push
jmp
sarb
sbb
mov
fisubl
fnsave
push
xor
mov
add
jg
adc
test
and
cmp
jne
les
fisubs
aam
xor
adc
jp
adc
call
fidivrs
insb
xchg
test
sbb
movsb
mov
sub
push
pop
rolb
mov
and
xorb
mov
mov
movsb
jae
into
stos
push
pop
push
sbb
sbb
jnp
pushl
mov
in
pop
into
fsubrs
pop
int
stos
push
rorl
pop
popa
cltd
stos
lahf
adc
out
xchg
dec
loop
and
jmp
mov
fcoms
enter
jp
dec
mov
fisttps
daa
add
out
cmp
hlt
push
mov
inc
dec
lahf
jbe
fbstp
push
pop
lock
or
pusha
xchg
insl
mov
push
or
test
sti
inc
sbb
out
test
jmp
pop
jae
rol
out
push
xor
cmp
sub
outsl
lret
inc
lock
xor
lret
mov
push
sahf
pop
lods
pop
jns
push
push
jb
dec
pop
insl
es
dec
inc
or
testl
les
cmp
loope
dec
cmp
mov
loop
mov
dec
stc
test
outsb
fwait
std
scas
sub
popf
rcl
jp,pn
lods
pop
push
xchg
jbe
mov
aaa
sub
sub
insb
jg
sahf
mov
in
cmpsl
jecxz,pt
jmp
push
aaa
das
fiadds
or
jne
add
adc
pop
sbb
sbb
push
jnp
push
ja
sub
test
mov
int3
test
cltd
in
nop
fdivp
or
mov
mov
add
pop
or
mov
lret
pusha
frstor
inc
lods
cmp
pop
imul
lcall
je
pop
dec
and
mov
adc
lods
xchg
sub
clc
cmp
sub
test
repz
sbb
lods
aam
add
or
sti
lods
aad
pop
fucom
sub
rcr
mov
mov
cmp
sbb
into
out
aad
rcrl
movsl
clc
cld
nop
mov
clc
outsb
and
mov
xchg
rcrb
mov
je
cs
cmpsb
mov
cld
stos
dec
in
add
mov
sbb
dec
es
aad
xchg
jmp
imul
lods
fstl
xchg
xchg
rcrb
lods
fwait
sub
stos
popf
jb
out
xor
inc
xchg
sbb
inc
adcb
rcrb
push
xchg
jns
pop
mov
push
sbb
mov
mov
cmp
mov
rorl
ja
cmp
mov
pop
adcb
mov
xchg
nop
cmp
pop
cmp
jns
ret
aam
push
mov
mov
xchg
add
add
sbb
clc
jae
or
jecxz
negb
inc
and
and
rcll
mov
ss
mov
lock
xchg
shlb
or
int
jb
dec
ss
mov
cmp
lods
aam
add
xor
pop
jns
inc
push
push
xchg
mov
ss
lods
in
lret
test
shr
xor
rol
mov
mov
lahf
mov
jl
xor
cmp
mov
mov
lcall
fstl
mov
arpl
pop
fwait
dec
xor
in
hlt
in
inc
gs
rcrl
lds
xchg
push
jl
xchg
fucompp
lcall
add
or
and
dec
and
fistl
loope
js
sbbl
cltd
rcrb
pop
xor
fadds
inc
pop
cmp
dec
imul
or
cwtl
push
mov
mov
sbb
subl
pop
fbstp
sbb
call
mov
xor
mov
mov
mov
sub
xlat
mov
loopne
push
flds
inc
xchg
dec
test
xchg
or
adc
push
icebp
inc
das
jnp
int3
pop
ljmp
popl
aad
lods
popf
push
fdivrp
inc
decb
inc
or
jae
sub
fs
xor
outsb
js
xor
push
lcall
or
scas
lock
mov
scas
push
push
das
pusha
push
andb
xchg
cmpl
ja
sub
das
sbb
sbbb
and
in
xchg
insb
cmpsb
mov
pop
add
xor
test
lahf
stos
inc
rcll
sub
push
xchg
int
mov
jne
cmp
ds
ljmp
push
lahf
push
out
icebp
inc
jbe
mov
pusha
ljmp
pop
movsb
adc
jbe
mov
movsb
pop
mov
push
fsubrl
ss
mov
dec
leave
movsl
int3
leave
shll
mov
jns
ret
daa
loop
cmp
imul
fcmovnu
clc
int3
jp
outsb
push
sub
stos
xor
lods
mov
xor
add
jg
cmpsb
push
mov
push
std
mov
mov
xchg
dec
faddl
in
pusha
aad
call
pop
shlb
shr
les
jmp
and
jnp
cmp
popf
lods
push
jle
add
stos
pop
jmp
cwtl
mov
sbb
adc
cmp
xchg
pop
popa
and
sbb
push
addr16
enter
ret
lcall
fstpt
inc
add
lds
mov
lock
cmpsb
adc
xchg
cmp
pop
aad
inc
in
xchg
jnp
call
inc
loope
cmp
aad
lahf
ret
insb
jnp
sahf
mov
ret
xor
push
jne
cmp
dec
or
or
adc
imul
jbe
pop
rcll
sub
outsl
dec
mov
mov
mov
outsl
and
mov
push
lahf
int
push
add
cmc
inc
jbe
stc
xchg
sub
cmpsl
mov
dec
int3
jg
jno
adc
jnp
lcall
mov
and
jl
sbb
jae
test
inc
sbb
mov
idivb
jo
fiaddl
add
push
xlat
orb
lods
in
in
mov
xchg
pop
adc
mov
sahf
fistl
test
xor
sbb
and
and
int
cmp
cmp
scas
sbbl
add
addr16
mov
mov
xor
mov
in
inc
not
lahf
and
outsl
push
xchg
inc
es
cmpsl
mov
imul
xor
int3
das
jns
sbb
lods
mov
arpl
or
sub
js
push
mov
or
out
pop
cli
inc
add
or
push
cwtl
mov
scas
push
pop
popl
push
jmp
mov
jl
rcll
vandpd
lds
mov
mov
adc
mov
and
sti
sbb
movsl
loopne
cmpsl
sbb
sub
jl
sahf
dec
adc
dec
icebp
roll
adc
sti
cmp
pushf
mov
push
test
and
inc
sub
vxorpd
jmp
imul
pop
insl
cwtl
repnz
mov
adc
ds
arpl
dec
nop
fldl
popa
popf
loope
xor
imul
cmp
aaa
fnstenv
call
addr16
jmp
or
cmp
jge
and
push
sub
pop
push
nop
inc
stos
pop
xor
dec
xchg
mov
adc
sub
mov
and
cmpsb
sahf
inc
movsb
xchg
jnp
mov
ret
mov
push
pop
cmp
test
xchg
xchg
or
mov
adc
lcall
or
out
jp
pop
and
sub
mov
mov
fdivl
sti
xlat
sub
data16
and
xor
movsb
sbb
out
iret
cwtl
adc
pop
mov
mov
mov
sub
xor
mov
test
adc
testl
add
addr16
xchg
sub
pop
mov
nop
shll
and
pop
sahf
pop
fadds
les
inc
je
fs
rclb
neg
call
int3
fwait
insl
or
xchg
push
imul
outsb
test
daa
pop
imull
jbe
inc
loopne
loop
mov
mov
xlat
paddq
xchg
test
xor
in
lahf
sub
jb
push
xchg
xchg
cmp
lcall
mov
fstpt
mov
cmp
inc
dec
pop
popa
xorl
aas
mov
das
jl
dec
push
push
mov
out
jp
jnp
push
inc
and
movsb
bound
sbb
sub
jae
nop
shrb
js
lret
sbb
in
ret
sbb
jne
lods
pop
xchg
loope
wbinvd
dec
mov
outsl
mov
frstor
mov
fstpt
inc
dec
movzwl
in
dec
adc
mov
or
mov
shlb
sub
mov
lods
mov
inc
movsl
into
dec
inc
jle
pop
sbb
push
sbb
jp
insl
mov
cmc
cwtl
test
mov
lret
out
fstpt
jmp
add
std
pop
outsl
and
jnp
mov
adc
xor
ret
add
push
add
mov
pop
mov
aam
stc
insb
adcl
fs
mov
cmp
cmp
sahf
jb
push
hlt
mov
xor
in
test
inc
cmp
shr
fstpl
dec
sbb
fistpl
sub
add
repnz
test
xchg
mov
orb
pop
fbld
add
mov
or
jnp
rep
lret
out
and
mov
pusha
call
repz
jbe
dec
mov
cmp
fnstsw
xor
add
and
pop
jo
cld
dec
cmp
push
push
push
mov
adc
sbb
loop
out
add
divl
es
xchg
rcrb
add
jge
and
adcl
fstpt
push
mov
or
push
or
enter
push
scas
cmp
cmp
movsl
inc
dec
sub
lcall
push
loop
add
ror
fldcw
in
testb
jecxz
dec
cmp
fisttps
repz
dec
xor
mov
movsb
adc
push
jno
cvttps2pi
xorl
sub
arpl
mov
jge
xor
aad
sub
mov
xchg
push
movsl
lcall
stc
je
orb
fs
xor
movsb
cmc
jnp
push
jae
movsl
mov
jo
or
mov
sub
mov
clc
movsl
jmp
mov
ret
xchg
pop
ss
icebp
pop
pushf
dec
movsl
test
adc
or
adcb
stc
push
and
mov
or
std
insl
les
or
dec
jne
ret
and
mov
push
shr
iret
hlt
xchg
add
hlt
test
je
sbbb
xchg
insb
mov
dec
imul
ret
aam
pushf
xchg
scas
adc
sahf
aaa
cmp
push
shll
or
lock
int3
adc
pop
lcall
sbb
push
mov
xlat
and
sub
stos
jecxz
scas
sbb
addr16
je
clc
mov
pop
lret
addl
jns
jno
jae
shll
jne
mov
cld
sahf
jecxz
subl
ja
add
fistps
fsubrs
mov
xchg
sbb
or
dec
stos
lock
sub
nop
sub
xor
sbb
xor
call
xchg
adc
in
dec
dec
jp
xchg
mov
mov
cltd
imul
adc
stos
dec
or
mov
sub
test
jle
es
mov
xor
fidivrl
cmp
push
imul
cltd
mov
scas
outsl
mov
cltd
sbb
stc
cmp
sub
add
mov
add
in
dec
insb
dec
and
outsb
insb
fldenv
pop
das
adc
dec
jo
pop
and
lret
mov
pop
fs
push
sbb
dec
cmp
jae
ljmp
jle
inc
push
push
aas
test
insb
rol
mov
aas
rep
inc
pop
adc
rolb
add
mov
scas
popf
push
or
int
or
gs
pop
cltd
mov
cmp
sub
xor
push
inc
pop
nop
clc
jnp
in
jne
jb
mov
mov
in
test
jmp
sar
and
fwait
jne
fwait
fwait
mov
js
jns
stos
fsubrs
ljmp
test
lods
notl
and
xor
push
pop
aaa
xchg
xchg
hlt
rolb
insl
add
call
daa
jecxz
inc
dec
and
jge
xor
fs
cmc
test
jmp
mov
sub
cmp
sub
sub
or
cmc
mov
pushf
negl
cmc
out
call
mov
cmp
test
out
daa
add
xor
lods
ret
mov
stos
add
iret
push
sbb
imul
pop
popa
lret
jns
cmpl
pop
adc
sub
loope
or
test
pusha
ljmp
push
cmpb
outsl
xchg
dec
and
xchg
pop
add
mov
leave
setbe
fsubs
cld
jecxz
out
outsl
inc
inc
test
xchg
scas
or
mov
repz
adc
jae
fldln2
mov
dec
addr16
jmp
push
mov
mov
fdivrl
push
loop
filds
mov
fs
pop
test
xor
lea
frstor
mov
inc
popa
cli
cld
icebp
or
lahf
push
div
sub
sarl
sub
repnz
pop
jnp
sbb
es
lret
push
add
mov
cs
xlat
lahf
xchg
xor
sub
cmp
mov
imul
icebp
test
and
jecxz
imulb
mov
xorl
arpl
xor
flds
enter
subb
daa
cmpsb
mov
es
ja
mov
test
inc
push
inc
cmp
xor
shll
cli
lock
dec
push
lock
adc
shrd
insl
aas
test
dec
pop
inc
push
cmpb
dec
add
mov
xchg
xorb
push
imul
stos
loop
push
and
rcrl
xlat
in
dec
jbe
ljmp
punpckhbw
xchg
adc
mov
loope
icebp
ds
lcall
and
pop
mov
cmp
and
push
adc
fbld
fwait
imul
ficoml
xor
fwait
jo
adcl
adc
xchg
insb
lods
adc
in
push
pop
jle
cmp
sti
cmc
in
push
arpl
cmp
ja
hlt
push
lock
adc
adc
xchg
xchg
cmp
subl
out
mov
and
dec
cmp
mov
fcoml
mov
pop
arpl
jle
mov
lods
ror
cmp
adc
and
or
jle
repz
fdivrl
adcb
jmp
in
int3
cs
into
adc
push
push
xor
cmpsb
stos
cmpsl
push
mov
and
dec
cli
fs
mov
jbe
cmpsb
jno
add
sarl
mov
push
div
subb
scas
mov
inc
cwtl
lea
inc
dec
je
xor
mov
mov
into
dec
icebp
lret
lock
mov
add
or
orb
pop
fisubrl
mov
push
fucomi
call
or
sbb
mov
ja
push
lods
or
popf
mov
jno
call
mov
cmp
shll
mov
inc
mov
fptan
fisubl
mov
dec
inc
js
sbb
cs
cmpsl
jnp
imul
sahf
repz
fnstenv
out
shll
test
and
inc
lcall
xchg
push
loope
shlb
sub
sarl
mov
mov
jle
nop
aam
cwtl
clc
leave
ss
mov
jle
cmp
inc
shl
inc
push
jmp
cltd
jmp
vpsllq
push
mov
test
bound
push
aam
sti
adc
icebp
pusha
insb
add
and
lods
mov
inc
cmp
push
push
lods
adc
scas
sub
iretw
pop
inc
lahf
xor
add
pop
pusha
clc
clc
fs
jge
lds
inc
and
mov
jp
or
add
pop
faddl
fadds
push
mov
sub
lea
stos
icebp
cltd
sbb
mov
or
cltd
loopne
mov
rcr
test
shlb
mov
insl
inc
dec
jle
inc
cmpsl
push
push
sub
and
mov
inc
es
rcr
sub
jne
sub
jmp
dec
xchg
fsubr
mov
hlt
lcall
cld
mov
punpckhdq
imul
lods
sub
adc
leave
fdivl
pop
ds
scas
roll
pop
push
bound
inc
insb
into
lret
jecxz
shrb
and
jbe
and
cwtl
jb
call
inc
into
scas
add
lcall
test
push
mov
xor
push
fistps
hlt
daa
movd
in
test
jp
mov
addr16
imul
xlat
out
movsl
arpl
xchg
or
sbb
icebp
dec
and
xchg
in
adc
sbb
xlat
dec
push
jecxz
fsubrl
mov
lret
cmpsb
out
cmpb
in
jno
sbb
lcall
ss
scas
nop
in
call
jecxz
loop
xor
mov
lcall
mov
or
movsl
inc
mov
inc
js
cmp
and
jno
add
call
fildl
div
jle
addb
xchg
xorl
and
syscall
add
imul
ss
dec
iret
sbb
divl
mov
xchg
insl
stos
hlt
sbb
pop
dec
andl
mov
popa
ljmp
jo
and
fdivrs
add
jb
sub
cmp
sti
popa
cltd
xchg
and
mov
cmpsb
lahf
int
add
jle
jmp
out
xchg
xchg
scas
mov
inc
adcb
lock
jl
mov
cmp
js
cwtl
fs
inc
jb
cli
xchg
push
outsl
aam
in
jp
shll
sbb
test
xor
decl
filds
cmp
cmp
test
mov
out
or
outsb
stc
out
sbb
inc
jg
add
push
out
sarl
loopne
clc
bound
inc
sub
out
sbb
iret
pop
push
adc
sub
mov
lods
cmp
cli
mov
std
movsb
insb
xchg
xchg
or
add
psubw
dec
mov
inc
add
or
test
lahf
bound
js
mov
xchg
push
jp
inc
js
push
push
and
jne
out
jmp
pop
mov
pusha
jb
and
cmp
mov
cmpl
jmp
xchg
mov
mov
pop
or
dec
lahf
push
cmp
xchg
jecxz
mov
adc
aad
or
xchg
out
push
fdivrl
mov
pop
sub
xor
pop
pushf
dec
push
or
insl
fcomps
cmp
leave
out
sbb
adc
pop
out
sub
xor
mov
push
out
mov
pop
dec
ds
add
stos
loopne
adc
pop
inc
xor
and
inc
pusha
lea
add
hlt
aam
mov
cmpsb
lea
add
data16
jno
stos
push
mov
imul
sub
pop
das
enter
stos
in
mov
adc
es
popf
pushf
dec
jl
aaa
mov
sar
aaa
sub
lods
mov
adc
lahf
dec
clc
cs
mov
push
dec
ret
js
enter
cmc
push
sbb
inc
and
push
cmpsb
pop
clc
xchg
dec
fsubr
jecxz
jmp
icebp
pop
push
out
push
jb
or
call
insl
push
xchg
pop
or
je
insb
daa
cmp
mov
and
adc
in
pop
mov
inc
lock
xor
inc
lds
sti
aas
movsl
jle
aad
lods
inc
imulb
popa
loope
lret
bound
jmp
or
pop
sahf
xchg
pop
sahf
and
es
sub
clc
jge
pop
notb
lahf
sbbl
push
mov
das
mov
fbstp
js
xor
insb
fs
add
mov
mov
ret
ret
pop
lock
dec
loopne
es
pusha
mov
jns
mov
frstor
dec
xchg
xor
pop
bound
jbe
pop
lock
xchg
or
mov
pop
lods
daa
mov
lods
incl
xor
push
out
call
sti
andb
or
test
aad
xchg
sub
mov
stc
dec
mov
bound
ja
insl
repnz
rorl
repnz
pop
scas
jb
xor
inc
xchg
sub
les
jecxz
in
jmp
mov
jb
imul
nop
daa
mov
addr16
int3
arpl
out
xchg
sub
mov
or
lahf
pop
stos
sub
fsubrl
es
jnp,pn
fldt
pusha
idiv
mov
js
push
hlt
mov
and
into
hlt
mov
cltd
cmpsb
cmp
inc
in
scas
sbb
ds
mov
test
mov
ss
aam
in
push
js
lea
loopne
pop
scas
cli
xchg
fdivrs
test
and
mov
incb
adc
adc
enter
xchg
jmp
dec
loop
xor
popa
outsb
psubb
mov
addl
jp
pop
add
cmp
xchg
add
es
fstps
es
mov
ficoml
add
cmp
pop
add
cmp
or
leave
cli
xchg
repz
pop
scas
loopne
pop
mov
add
push
cwtl
pop
or
jecxz
rclb
test
add
sarb
pop
mov
mov
test
cmp
fcomip
mov
test
push
enter
cli
xchg
xchg
cmpsb
cmp
xor
jnp
cmp
pop
inc
fiaddl
test
push
shl
enter
push
ljmp
mov
aas
fcomps
enter
jnp
pop
inc
in
jg
sbb
ficompl
add
and
pop
addb
jp
lea
fwait
loop
xchg
es
and
shlb
xchg
jnp
cmp
lret
pushf
jmp
in
dec
in
call
xor
jo
addr16
insb
xchg
imul
mov
lock
fldenv
mov
popa
and
add
rcrl
xchg
sub
push
adc
repz
jae
pop
lods
outsb
std
xchg
cwtl
into
movsb
cmp
mov
cmpsb
cmp
cmp
pop
xchg
sub
test
pop
repz
es
dec
sbb
fcomps
sub
and
jbe
push
inc
adc
jge
inc
fisubrs
or
xchg
mov
push
out
aad
lcall
mov
mov
fxam
jl
xor
jmp
pop
pop
and
test
pop
movsb
leave
inc
xlat
icebp
push
jmp
adc
dec
and
pop
insb
testl
loop
xchg
cs
xchg
and
adc
cmpsl
push
cmp
add
pop
mov
mov
jb
sti
lods
cmpsl
test
loopne
aaa
into
clc
add
cmp
lea
gs
sub
faddp
or
sub
sbb
dec
fbstp
mov
sahf
xchg
dec
loop
sarb
adc
ss
ljmp
mov
sub
jmp
xchg
adc
lahf
ss
xor
adc
xchg
pop
pop
mov
fldcw
mov
aaa
and
pop
push
mov
outsl
cmpsb
mov
hlt
in
scas
inc
add
cmp
aaa
and
lahf
pop
push
pushf
xor
mov
xor
decb
jo
dec
push
pop
icebp
lea
xchg
lods
popf
xor
mov
pop
in
clc
stos
inc
and
sbb
jnp
jg
sbbl
jecxz
xor
add
cmp
mov
imul
mov
inc
xlat
dec
loope
add
xor
pop
mov
test
scas
movsl
dec
iret
pop
hlt
idiv
pop
scas
sub
inc
fiaddl
call
xor
mov
dec
fists
ss
into
jo
stc
mov
popf
xor
jmp
ds
mov
xor
sub
mov
xor
fsubr
test
adc
aaa
xchg
jo
xchg
sub
mov
inc
ficoms
push
jmp
jno
popf
xor
xchg
pop
xchg
sti
xchg
fwait
and
jns
adc
test
xchg
and
mov
inc
fstl
aam
and
shrl
xchg
xchg
sub
je
dec
movsl
call
mov
dec
ja
cwtl
das
inc
cwtl
hlt
mov
shrb
repnz
in
adc
inc
xchg
sub
lret
popa
push
jmp
in
or
out
inc
fisubrl
insl
add
nop
inc
xlat
leave
bound
cltd
ljmp
lock
test
jbe
mov
inc
xchg
cmpsb
cmp
xchg
in
dec
adc
aam
push
mov
jg
push
sbb
or
and
and
stos
inc
jge
jns
fs
lcall
xchg
sub
cs
dec
enter
mov
cld
mov
enter
clc
xor
fwait
push
pop
mov
mov
ds
rcll
adc
xor
mov
cmpl
push
idivb
pushl
daa
push
andl
dec
movsl
inc
ja
mov
fistpl
loop
sub
add
mov
aaa
xor
insb
xchg
inc
in
andl
sbb
sbb
cmp
sub
mov
test
pushf
sub
and
push
je
dec
stos
jge
fwait
movsb
int
cli
lret
sbb
notb
das
mov
pushf
addr16
movsl
out
mov
fsubr
add
aam
add
outsl
popa
push
xchg
push
insb
stc
nop
mov
jle
jecxz
sahf
daa
xor
pop
scas
aaa
xchg
test
icebp
xchg
aad
iret
push
sub
and
and
fbld
dec
push
cmc
je
out
ja
pushf
andl
adc
cmp
test
pop
cmpsl
mov
fisubrl
aam
cli
or
pop
adc
sub
outsb
inc
imul
mov
leave
outsl
push
add
mov
cs
jecxz
xorl
mov
in
jmp
in
aas
pop
outsl
or
inc
push
mov
lret
mov
mov
sbb
jb
and
mov
push
je
test
mov
rcr
or
mov
add
aas
mov
jp
outsb
lods
inc
movsb
mov
loop
testl
adc
xchg
test
sub
add
loop
fisubrs
inc
movsl
push
lea
jns
shll
xchg
int3
sbb
movsl
dec
push
push
das
leave
jge
fstps
sbbl
mov
ret
add
jno
xor
sbb
arpl
lret
scas
add
pushl
cmp
fisubrs
mov
mov
jge
sub
jne
mov
decl
cmp
push
mov
dec
adc
push
mov
dec
cmc
test
adc
cli
inc
adc
push
mov
xchg
aam
lods
push
mov
fxch
jne
push
daa
leave
jb
call
or
lcall
shr
sub
mov
dec
icebp
push
mov
or
and
pop
gs
mov
and
adc
les
sub
push
fs
data16
pop
popf
scas
rolb
mov
xlat
or
dec
pop
cmp
xchg
ja
enter
sub
cmpsb
pop
sbb
jmp
test
testl
aaa
aam
pop
jecxz
push
sub
mov
push
aad
jnp
xor
std
addl
rcrb
xchg
sub
cmp
fisubrs
mov
cld
mov
mov
loopne
sbb
jno
andb
push
movsl
cmc
xchg
into
inc
fxch
pusha
or
ficomps
mov
sbb
adc
rcrl
mov
popa
ret
and
mov
out
addr16
cmpsb
pop
mov
cmp
and
pop
mov
les
lods
sbbl
insb
and
xor
mov
testb
push
fsubs
adc
popf
xor
dec
cli
xchg
jle
les
lahf
and
rcrb
mov
sub
and
js
jne
scas
inc
xor
push
dec
in
jmp
imul
cmp
insl
stc
mov
sub
cmpsl
ds
inc
pop
lods
lds
int3
arpl
jecxz
and
add
dec
xor
mov
dec
daa
mov
mov
inc
fld
rcrb
or
push
out
sbb
adcb
cmp
mov
les
mov
mov
adc
jecxz
jae
mov
sbb
adc
cld
lea
stos
inc
aas
out
pop
repz
jo
push
push
jb
call
cs
fld
pop
cld
lea
mov
sbb
sub
adc
ss
repz
lcall
cmpsl
mov
xchg
hlt
mov
and
inc
mov
xchg
xorb
add
lea
fstps
scas
inc
dec
cld
test
push
mov
rcr
test
or
xchg
iret
mov
adc
fbstp
cli
inc
ficomps
ja
adcb
sbb
sbb
hlt
sub
adc
xchg
sub
pop
mulb
mov
xchg
xorl
loopne
popf
xor
add
lea
xor
dec
add
adc
ss
or
das
lods
fmul
inc
out
jmp
pop
ret
das
add
arpl
loope
jnp
shll
fwait
xor
pushf
jmp
push
cmpb
out
jo
fdiv
push
adc
ret
hlt
cld
adc
cmc
mov
push
iret
cmp
cmp
xchg
lcall
clc
in
cmpsb
xor
mov
lahf
lret
out
js
jb
mov
in
mov
fiadds
sub
jp
inc
xlat
pop
fwait
jle
or
mov
in
test
dec
into
jmp
jge
jp
cmp
int3
pop
sbb
fisttps
cmp
fs
jmp
jge
xchg
in
add
add
and
lahf
adc
and
shrl
xchg
mov
fstps
xchg
int3
sub
das
pop
in
fbstp
jae
in
movsb
inc
fidivl
lds
scas
iret
sbb
andb
inc
xlat
fwait
inc
sub
je
mov
popa
leave
setp
inc
ljmp
xchg
cmp
pop
outsb
mov
cmp
mov
mov
insb
push
and
divb
mov
aad
push
cwtl
ficoml
enter
adc
dec
xchg
rol
xchg
push
lods
and
jp
sub
bts
ficompl
loopne
imul
aas
call
sub
loopne
cld
push
xorl
mov
pop
repz
mov
dec
cli
loope
adc
mov
inc
push
imul
add
stc
xlat
inc
mov
ret
push
aad
out
fdivrl
push
pop
fidivs
popf
je
dec
sbb
lret
int
fwait
push
xorb
push
icebp
rcll
aaa
orb
jns
enter
loope
mov
bound
shl
mov
sbb
mov
out
inc
loop
cltd
je
adc
push
xchg
cld
jle
add
mov
insb
pop
sbb
sarb
cmpl
arpl
scas
mov
jne
cmpsl
pop
xchg
test
xchg
out
lcall
dec
pop
popf
shll
mov
popf
xchg
mov
mov
xor
dec
sub
pop
cltd
loopne
cmp
mov
mul
adc
pop
test
clc
cmp
mov
pushf
dec
mov
psrad
adc
jns
mov
hlt
outsb
mov
test
pop
cld
shlb
jno
das
bound
divl
stos
inc
push
lahf
testl
sub
call
out
dec
clc
cmp
out
ret
sahf
mov
mov
pop
scas
push
inc
fildl
mov
mov
push
out
filds
paddb
out
daa
loopne
pop
out
lea
jb
push
movsl
in
dec
xlat
int
cmpsl
std
push
loope
mov
testb
mov
fsubrs
inc
xor
xor
pop
lock
inc
pop
lock
insb
mov
int3
pop
lock
dec
pushf
xor
pop
insl
dec
push
mov
inc
arpl
xchg
jae
jo
rcl
repz
or
lret
or
lods
xchg
dec
jno
cmp
inc
mov
xor
push
in
dec
xor
mov
aad
lret
lds
or
push
jb
inc
sbb
aad
mov
repnz
das
sub
lahf
add
or
pop
xor
nop
adc
inc
xchg
lock
mov
adc
add
fnsave
in
ss
icebp
mov
mov
push
arpl
xor
cmp
push
push
push
aad
sbbl
or
dec
cmp
cmp
adc
add
jae
mov
adc
cmp
xor
adc
fidivrl
xchg
insb
dec
push
inc
mov
pop
xchg
jmp
leave
bound
inc
fisubrl
fsubrl
iret
fdivs
pop
jae
jle
push
sub
hlt
xorb
mov
dec
loope
insb
movntq
mov
pop
push
test
mov
lods
movsb
int3
fbstp
into
mov
add
push
in
pop
xor
test
ret
cmc
pop
pop
repnz
sbb
inc
fdivr
gs
xchg
lcall
scas
out
shlb
out
insb
add
sbb
data16
arpl
dec
mov
mov
mov
mov
xchg
sub
mov
lret
cmp
adc
pop
pop
sahf
dec
push
jb
xchg
adc
xlat
out
or
dec
aas
in
or
xchg
jl
xchg
scas
repz
ror
arpl
or
push
jnp
xor
test
sub
aad
fidivs
mov
jb
sub
repnz
inc
adc
movl
and
pop
aaa
imul
aas
repnz
jecxz
sbb
xchg
sub
pop
lods
inc
push
out
leave
sbb
insb
fs
cmpsl
cmp
jecxz
scas
jmp
mov
dec
gs
jno
lea
mov
aad
mov
or
jae
xor
xor
xor
mov
rcl
insb
add
cwtl
das
pop
jb,pn
popa
fwait
int3
arpl
adc
es
mov
or
in
push
testb
in
aam
ffreep
xchg
sub
push
mov
xchg
pop
xor
dec
ret
fidivl
addr16
cwtl
test
push
sbb
repz
push
push
scas
inc
sub
inc
popf
loopne
adc
adc
or
in
cmpl
jnp
sub
pop
icebp
mov
lea
cmpl
lea
and
xchg
clc
repz
jl
lea
mov
stos
and
aaa
repz
pop
and
jae
test
popa
clc
mov
push
popf
jmp
add
jecxz
imul
test
loop
or
sbb
test
cwtl
and
or
pop
push
in
pop
daa
mov
cli
dec
stc
nop
lock
nop
jecxz
add
aaa
call
incl
cmp
xlat
outsb
in
js
jns
cli
imul
stc
adc
jmp
std
lods
inc
out
imul
ljmp
add
dec
and
cmp
inc
fdiv
pop
shrl
sbb
jp
jnp
sbb
test
xchg
outsl
adc
repnz
mov
pop
dec
push
pop
testb
stc
lcall
pushf
out
pushf
xor
adc
aad
inc
fistpl
mov
jp
lret
mov
rcrb
mov
and
and
pusha
notl
aam
jne
pop
add
mov
pop
repz
mov
outsl
insb
sti
inc
fldt
jo
ljmp
aad
gs
test
push
and
pop
inc
mov
arpl
inc
fcoml
pop
sub
stc
jne
rclb
add
sbb
in
cmp
and
add
iret
push
rcrl
test
sbb
adc
fs
sub
pop
mov
pop
shll
cli
sbb
test
fwait
push
andb
jmp
inc
fisttpl
and
stos
inc
nop
addb
mov
out
mov
pop
pop
sti
xchg
mov
mov
iret
into
lds
test
sub
pop
ret
daa
mov
mov
lret
std
sub
mov
inc
js
or
jns
xchg
outsl
add
mov
pusha
pop
lds
push
popf
push
cmpsb
cli
fadds
add
and
cmp
rorl
cmp
test
jns
jecxz
and
notb
sbb
pop
or
push
mov
out
les
cmp
cli
jp
xlat
outsb
sbb
pusha
sub
push
lock
sub
jle
imul
lret
out
cmp
dec
loop
cmp
pop
lods
ds
xorl
lods
pop
lcall
push
in
ret
adc
ds
bound
cmp
cmp
mov
push
mov
adc
inc
lods
inc
jb
dec
out
pushf
dec
loop
xlat
pop
enter
sbb
cmpsb
jle
mov
fs
fwait
insl
mov
shlb
arpl
lret
bound
xor
es
dec
adcb
jmp
jle
lods
xor
loop
scas
jnp
and
ja
xchg
in
mov
pop
fdivs
aaa
sub
or
jge
lret
rolb
add
xor
jno
fmuls
push
loop
lret
popf
xor
and
adcl
cld
das
orb
mov
movsl
pusha
notl
pop
mov
add
fimull
mov
jae
lods
inc
pop
adcl
je
sbb
iret
and
ficoml
lds
cwtl
das
mov
stc
xchg
leave
stc
mov
mov
mov
cli
mov
mov
jecxz
in
pop
icebp
inc
push
test
xchg
mov
out
mov
pop
loop
mov
fimuls
cli
ds
add
mov
xchg
xlat
mov
inc
fdivl
pusha
test
pop
jmp
cmp
mov
scas
dec
sbb
ja
mov
mov
rclb
rcrb
testb
inc
sub
pop
lock
pushf
mov
push
jmp
or
insl
pop
mov
xchg
lea
mov
fnsave
test
sub
or
mov
pop
scas
lods
sub
mov
add
xor
lods
inc
push
push
imul
test
leave
jmp
cmp
inc
les
outsl
sub
pushf
popf
fidivl
mov
clc
xchg
es
add
inc
push
mov
pop
mov
lea
mov
in
sbb
rcrl
or
loopne
adcl
xchg
jecxz
inc
adc
aaa
into
imul
cmpl
mov
and
sub
je
inc
fnsave
aam
sti
add
dec
sbbb
xor
cmp
xchg
ret
push
sbb
xchg
cs
pop
fsubrs
cmp
imul
adc
vmread
lret
testl
movsl
dec
push
ds
mov
scas
adc
mov
push
jno
std
mov
leave
add
adc
ds
in
add
mov
leave
xlat
outsb
sti
adc
faddl
lds
mov
pop
lcall
mul
sub
loopne,pt
pop
rcrl
mov
aam
test
pushf
sar
push
das
repnz
js
inc
fimuls
lret
dec
in
in
mov
push
mov
pop
mov
das
mov
mov
mov
dec
out
pop
lds
call
pop
adc
push
cmpsl
and
pop
xchg
iret
sbb
sbb
scas
inc
pop
pop
add
fildll
ret
cmc
add
adc
ret
push
add
pop
mov
push
jecxz
inc
faddl
or
idivb
pop
adc
enter
rorb
std
xchg
jl
push
ljmp
hlt
mov
js
loop
xchg
sub
loope
inc
shr
xor
pop
adc
lea
shll
mov
mov
pop
scas
loope
clc
or
or
pop
pop
scas
mov
sub
sub
mov
lods
fwait
adc
and
xchg
lahf
movups
jmp
add
xor
movsb
pop
pop
xor
mov
mov
movsb
aam
xlat
lcall
xor
mov
mov
or
dec
aam
es
xor
or
mov
sub
mov
xchg
sub
movl
inc
mov
into
mov
rcll
jl
loop
aaa
adc
pop
xchg
aaa
into
outsl
mov
shlb
pop
call
add
sub
ds
jns
cs
aas
sbb
hlt
fistpll
rcrb
enter
out
aad
pop
imulb
ret
clc
cmc
call
nop
daa
dec
jmp
mov
addr16
mov
loopne
rclb
aaa
into
test
pop
out
aas
mov
lahf
sub
xchg
movsb
mov
jle
fidivl
and
hlt
pop
mov
mov
jge
jns
push
out
mov
pop
cli
out
xor
adcb
nop
add
fdivs
jmp
repnz
and
cmp
leave
dec
inc
fidivrs
jmp
sbb
adc
adc
push
test
fwait
push
filds
adc
push
cmp
outsb
insb
push
jo
mov
rolb
sahf
add
xlat
popa
sub
rcll
aaa
into
test
aaa
into
add
xor
movsl
cmp
aad
lret
lds
fs
cmc
xor
in
pop
mov
adc
cmp
push
shrl
rol
fidivs
test
sbb
jge
clc
pop
xor
dec
adc
mov
fwait
sub
mov
leave
pop
icebp
cli
mov
inc
sti
pop
bnd
cltd
xor
int3
ds
lret
push
ljmp
and
les
push
jmp
xor
and
jge
push
jmp
cwtl
fs
mov
aam
imul
push
popa
clc
aas
daa
es
js
dec
jecxz
xchg
pop
hlt
mov
and
add
loope
sub
lock
push
mov
lret
loop
loop
or
dec
es
nop
ds
loope
mov
and
push
sub
ret
pop
movsl
inc
pop
hlt
jbe
arpl
jbe
cli
xchg
shlb
xchg
data16
popf
xor
ja
xor
cmp
ja
ds
lahf
fdivl
lcall
sub
outsl
push
inc
inc
sbb
js
or
xor
sbb
xor
fsubrs
nop
pushf
xor
int3
imul
jmp
rcrb
mov
fdivl
cs
mov
movsb
cmp
push
jmp
mov
push
pop
dec
xor
in
imul
sti
xchg
or
nop
daa
lods
and
int
cmp
scas
std
int
out
enter
and
xchg
adc
adc
or
mov
and
push
cmpsb
push
out
sbb
sub
adcb
mov
repnz
inc
fstp
sbb
ret
dec
out
enter
lret
bound
mov
push
popf
sub
or
dec
pop
mov
dec
arpl
sahf
or
pop
dec
pop
lods
and
pushf
xchg
sbbl
dec
stos
lods
inc
fnstsw
xchg
insb
cmc
dec
loop
lahf
mov
addl
mov
frstor
sub
daa
pop
call
andl
jle
xchg
testb
daa
cmpsl
inc
fcoml
push
lods
inc
andb
mov
stos
stos
inc
sbb
jbe,pn
mov
shrl
rol
sub
iret
add
ja
lret
bound
ja
pop
push
imul
mov
mov
lods
inc
or
xchg
dec
loop
cmpl
scas
imull
call
jmp
rcr
adc
inc
inc
psllw
mov
leave
in
test
sbb
mov
inc
fdivl
int
insl
sub
sahf
sbb
nop
mov
mov
int3
add
add
sbb
lea
mov
leave
mov
xchg
sub
jo
shll
adcl
subl
lahf
loope
int3
arpl
scas
imul
add
push
mov
inc
push
lods
inc
mov
push
xchg
mov
dec
in
cld
in
xchg
cs
mov
cmp
and
or
aam
dec
out
xchg
in
fisubl
cmp
imul
sbbl
sub
fsubrl
push
loope
dec
loope
in
in
jg
test
fimull
mov
push
mov
lret
das
pop
mov
rorl
cmpsb
ret
daa
inc
fcomps
clc
in
out
movsl
out
jne
int
sbb
sbb
mov
daa
mov
mov
sarb
mov
push
in
and
icebp
mov
daa
mov
sub
lret
scas
xor
loopne
clc
jge
xlat
cs
xor
repz
test
repz
ret
add
out
xchg
sub
ja
sbb
test
leave
out
mov
mov
mov
mov
mov
into
gs
xlat
outsb
cmp
imul
lahf
lcall
mov
movsl
mov
incb
stos
add
xor
xchg
cs
dec
xor
jle
adc
lret
ja
loope
inc
adc
movsb
cmp
sbbl
dec
fnsave
out
mov
push
movsl
fisttps
outsl
inc
cmp
push
and
mov
aad
clc
or
and
push
mov
add
mov
lds
imul
inc
fstl
pop
scas
ss
js
dec
fnstenv
movb
cmp
and
lods
outsb
lds
adc
loope
enter
add
fbld
mov
mov
mov
xchg
sbb
jg
adc
xchg
and
sub
outsw
mov
pop
cmpb
or
sub
shl
imul
aas
mov
out
stos
test
iret
inc
or
jg
mov
mov
mov
jg
std
xchg
mov
sbb
pop
sarl
das
filds
ds
inc
dec
ds
jno
pop
jmp
adc
ds
or
lock
adc
les
xor
adc
inc
push
mov
test
mov
mov
cli
xor
movl
add
add
out
test
push
pop
jns
clc
icebp
leave
imul
iret
xchg
divb
das
pop
sub
sbb
sub
testb
pop
fstpt
jo
clc
mov
xchg
mov
cwtl
scas
int3
mov
lahf
mov
popf
stc
jle
ljmp
ret
stc
repnz
sub
push
and
xor
inc
pop
fmuls
dec
inc
add
pop
pop
add
cld
push
outsb
jp
lea
loop
push
jae
jnp
dec
push
enter
cmp
pop
xor
push
or
xchg
ret
adc
dec
mov
push
lcall
in
mov
mov
mov
cwtl
sbb
int3
mov
push
mov
mov
inc
add
xor
flds
insl
xchg
or
test
jl
loop
icebp
jmp
cmc
aam
scas
jge
push
and
popa
insl
xchg
popf
les
pop
dec
pop
jp
push
xor
cmc
push
shrl
lds
ljmp
sbb
push
stos
mov
push
jmp
and
mov
dec
sbb
cmp
ss
sbb
push
pop
out
mov
mov
or
mov
xchg
sub
lods
fnsave
mov
addl
shlb
push
outsl
push
test
mov
and
dec
mov
inc
sub
leave
popa
in
cli
xchg
and
jmp
scas
je
pop
sahf
mov
and
jmp
incl
xor
jb
div
stos
inc
and
xchg
sub
leave
pusha
jne
mov
sahf
xchg
out
enter
icebp
jmp
out
xchg
and
or
cs
clc
lcall
adc
pop
jne
stos
je
xchg
adc
ficoml
xor
inc
sti
scas
inc
sub
dec
int
loop
lahf
mull
jns
es
adc
js
int3
lods
inc
call
int3
arpl
sbb
jae
test
adc
fistl
xor
inc
cld
scas
inc
arpl
xchg
dec
int3
movl
fidivs
adc
push
ljmp
jno
js
mov
stos
test
adc
sti
pushf
mov
and
sarl
test
out
rol
pop
clc
icebp
testb
inc
adc
je
add
mov
push
out
adc
inc
cmp
imul
or
jl
pop
ret
inc
icebp
adc
or
mov
adc
and
or
and
cld
test
shll
push
xor
ss
mov
test
shll
stc
fildl
jb
sub
push
push
pop
insb
add
mov
and
mov
inc
xor
push
pop
mov
loop
bound
add
cs
push
mov
push
and
pop
mov
pop
icebp
stos
hlt
pop
hlt
and
inc
jnp
js
xchg
cs
cltd
cltd
xor
jae
dec
movsl
in
mov
push
shrl
aas
aad
jno
repnz
mov
insl
adc
push
shrb
icebp
aaa
das
push
mov
mov
inc
stos
mov
mov
lods
outsl
lds
cmc
popf
fdivl
data16
mov
and
nop
sbb
outsl
int
addr16
cmpsl
ret
int
js
sbb
clc
sbb
or
fwait
mov
dec
stos
sub
inc
cmc
popf
jae
icebp
lret
adcb
mov
loope
inc
into
jnp,pn
movsb
xchg
cmp
and
inc
fldl
inc
mov
aad
jno
fst
and
jp
mov
sbb
call
aas
jge
cmp
scas
sub
add
in
cmc
inc
cld
mov
pop
mov
sbb
pop
sbb
dec
jge
cli
lods
insb
popa
negl
sarb
and
xor
push
mov
rcr
divl
popl
repnz
adc
cwtl
adc
ljmp
in
aas
add
xor
jae
scas
push
insl
add
mov
nop
sub
icebp
test
es
dec
mov
enter
aam
add
lea
or
test
sub
jo
xor
add
mov
pop
in
sub
dec
in
dec
fcomip
mov
or
cmpl
push
mov
dec
jae
jae
mov
rolb
movsb
shr
pop
mov
outsb
aaa
pushl
sbb
loop
fnsave
dec
add
lcall
out
arpl
imul
out
sarb
fwait
dec
idivl
push
sbb
xchg
pop
adc
sbb
lret
mov
push
loop
xor
push
enter
cmp
xchg
out
sbb
loope
dec
pop
test
jb
je
stos
mov
ljmp
out
repz
arpl
imul
pop
jb
lret
lret
cmp
cmp
ds
xor
int
out
call
xor
fcomp
and
inc
cmpsb
xchg
mov
lock
mov
stos
sbb
or
enter
lcall
cmc
adc
aam
mov
inc
xchg
pop
adc
mov
inc
jnp
and
fsubr
test
pop
push
or
lods
gs
movsl
enter
loop
push
test
jae
iret
fdivs
dec
int3
test
cli
mov
mov
mov
add
mov
or
mov
dec
in
outsb
orl
dec
call
shrl
push
adc
add
scas
cmpsb
pop
pop
jnp
jle
je
sti
mov
mov
mov
inc
mov
lods
das
les
enter
xchg
mov
lcall
clc
add
cmc
sub
xor
int
xchg
lods
lods
and
mov
mov
popf
jns
pop
or
jmp
push
pusha
in
sub
pop
mov
mov
lods
faddl
out
cmpsl
sti
gs
jmp
inc
cwtl
adc
jl
cmp
pop
xchg
mov
aaa
sbb
mov
or
out
cmp
mov
fadds
jecxz
test
out
adc
sahf
jb
push
jge
jge
dec
xor
pop
scas
orl
push
movsl
into
push
add
sbb
rol
repz
mov
or
andb
pop
xchg
push
pop
inc
roll
jmp
cltd
cmp
xchg
add
xchg
into
pop
add
mov
repnz
test
jecxz
or
cvttps2pi
add
xor
xlat
jmp
sub
cmp
pop
pop
ret
xchg
or
sbb
or
pop
mov
or
inc
aaa
lcall
push
adc
mov
mov
out
loop
je
cli
outsb
lret
jne
enter
out
jl
jmp
pop
mov
jmp
mov
sub
mov
inc
mov
test
xchg
stos
icebp
mov
mov
jg
repz
aaa
dec
orb
pop
add
mov
pop
adc
xor
aas
xchg
xchg
jns
dec
add
test
xor
test
or
and
xor
lcall
dec
or
cmp
out
idiv
pop
xchg
hlt
ret
mov
adc
add
dec
and
inc
jge
stc
mov
or
movsb
add
andb
cmp
jge
aas
sbb
movsl
lods
inc
adc
push
add
lods
sbb
aad
pushw
jg
push
mov
movsb
test
lret
xor
dec
cmpsb
xor
push
or
icebp
mov
pop
xchg
xchg
inc
push
or
jg
and
jl
xlat
rclb
insb
nop
inc
or
ret
adc
ret
xor
sub
loope
cmp
inc
jg
fnstcw
cmp
fdivrs
es
mov
mov
clc
cwtl
fs
mov
pusha
mov
hlt
mov
fnstsw
push
sahf
cmp
mov
pop
repnz
je
insb
jns
fidivrs
jg
dec
sti
dec
je
add
add
pop
aad
jbe
adc
leave
push
arpl
fstl
lahf
cmp
jae
dec
mov
dec
fimull
pushf
lods
and
xchg
idivb
pusha
shlb
sub
mov
adc
repz
aam
arpl
xor
mov
push
mov
adc
add
add
dec
xlat
mov
mov
sub
cwtl
xsaves
imul
je
fs
fidivrs
das
sub
sub
rcll
mov
jb
lock
push
test
fdiv
popa
fwait
inc
in
fcmovu
loopne
push
out
or
mov
mov
push
divl
and
cld
jl
cmp
in
dec
adc
test
dec
adc
iret
lret
push
mov
mull
or
adc
fwait
push
xabort
enter
sub
adcb
sbb
lods
inc
or
mov
dec
dec
faddl
push
jmp
or
idivl
out
xchg
pop
xchg
xor
cmp
jb
xor
icebp
in
je
ja
popf
adc
mov
cli
xor
lods
xchg
cmp
sarl
int3
fwait
mov
pop
and
lods
pushf
inc
pavgb
dec
ljmp
sub
imul
aaa
adc
mov
xor
into
loop
popa
lock
and
rolb
test
and
lgs
and
ror
mov
ja
les
into
pop
ficoms
sbb
imul
out
sub
pop
lock
mov
and
repz
das
arpl
outsb
mov
dec
mov
mov
cmp
cld
xchg
or
ss
mov
std
pop
dec
xchg
sbb
loop
jecxz
jno
mov
cmpsb
daa
popf
pop
dec
loopne
mov
xor
mov
iret
pop
push
sti
and
pop
mov
loop
mov
cmp
jmp
jecxz,pn
aad
mov
sub
in
std
call
xchg
dec
shll
mov
xor
sbb
movsl
cmp
movsb
adc
test
out
lcall
daa
jmp
ja
add
sub
dec
xor
out
or
dec
aas
adc
inc
pusha
aam
xchg
bound
mov
mov
mov
and
cli
and
sub
test
cmp
jge
pop
mov
in
loope
jle
and
add
jne
and
lea
mov
and
xor
mov
or
sbb
ljmp
insl
sti
pop
push
jae
xor
jno
aam
arpl
leave
inc
je
cmc
xor
cmpb
cmp
xchg
xchg
jo
jl
push
je
mov
ret
xchg
sub
mov
cmp
push
mov
dec
add
pop
xor
push
loop
mov
xchg
fimull
or
inc
sti
push
mov
bound
rcll
dec
lahf
pop
icebp
rolb
addr16
aaa
icebp
js
and
sbb
inc
xchg
sub
ficoms
rcrl
shrb
push
fbstp
lock
std
xchg
fcoms
sbb
adc
ss
loope
sahf
push
out
iret
mov
test
ja
ds
dec
dec
lret
xor
add
pop
fistpl
imul
and
sbb
std
dec
dec
xor
or
cmpb
mov
ljmp
scas
fidivrl
dec
lret
test
mov
mov
mov
xchg
fcoml
test
mov
mov
icebp
movsl
jbe
push
xchg
mov
call
cs
sbb
xchg
mov
pop
lock
sub
es
ja
jp
dec
loopne
fwait
xchg
sub
cltd
addr16
out
mov
and
test
inc
shrl
aas
mov
xchg
xchg
rcrl
or
jbe
cmp
ret
std
xchg
imul
mov
fbld
adc
cmp
adc
test
xor
bound
jne
mov
rcrl
xchg
sbbl
pusha
sbb
add
push
daa
mov
mov
fidivrs
cli
shlb
cmpsl
mov
les
mov
xlat
rcrl
pop
icebp
cmp
xor
fcmovnu
and
out
test
sti
xchg
cmpb
mov
pop
dec
ss
xor
lret
mov
fadd
pop
into
adcl
loope
cli
xchg
popl
lods
inc
je
clc
push
xchg
lret
bound
clc
push
popf
sbb
xchg
fwait
mov
jecxz
mov
int
dec
fs
inc
jo
pop
test
dec
pop
xorl
cmp
out
clc
testl
loope
mov
out
out
lods
pusha
negl
lock
rcr
jno
sub
cltd
ds
cwtl
aad
cwtl
das
push
negl
mov
movsb
or
jnp
mov
repz
cs
pop
gs
dec
rcrb
sbb
lret
mov
test
jg
outsb
cmpsl
cli
cli
xchg
in
inc
sbb
jle
inc
xlat
dec
lahf
pop
adc
push
in
pop
xor
mov
out
xchg
sub
fcomps
pop
adc
fsubrl
jp
pop
std
xor
out
stc
aam
and
clc
popl
movsb
scas
inc
push
mov
mov
sbb
mov
fstp
jbe
sbb
pop
loop
jns
and
aad
movb
xchg
popf
xor
lcall
fwait
data16
cmpsb
mov
pop
hlt
jl
fsubrs
sbb
push
loope
std
push
je
dec
mov
in
lcall
sbb
jp
pop
mov
fstps
mov
sahf
aas
mov
mov
call
les
sbbl
in
jge
fstl
jbe
mov
test
test
imul
xor
lret
fnsave
xchg
mov
and
leave
add
gs
ljmp
das
std
scas
inc
out
enter
adc
andb
fstl
into
gs
mov
lahf
adc
mov
fsts
lret
adc
ja
adc
lock
montmul
cmpsb
xorb
xchg
mov
jne
pop
ss
cmpsl
idivb
adc
mov
ds
push
es
lcall
daa
mov
cmp
mov
push
movsl
ja
pop
sarl
les
xchg
sub
into
lret
or
frstor
jge
lock
rclb
pop
je
mov
xor
pop
hlt
or
movsl
fdivrl
inc
sahf
dec
xchg
insl
call
jge
jne
pop
addr16
pop
push
mov
sti
movsl
cmpsb
cmp
mov
xchg
mov
mov
and
loope
inc
data16
xor
inc
xlat
insb
push
arpl
inc
pop
cmp
xor
pop
pop
fsubrl
rorb
inc
fldcw
aas
xlat
mov
data16
jle
je
pop
mov
push
test
or
sbb
dec
aam
mov
imul
pop
scas
call
adc
je
lret
bound
and
lds
sbbl
out
and
mov
push
leave
pusha
mov
dec
pop
and
xor
and
iret
pop
cld
cmpsb
jmp
sbb
jo
stos
popa
sti
xchg
movsb
int3
lcall
arpl
xor
xchg
in
jle
dec
add
pushf
xor
gs
or
jb
pushf
mov
sarb
outsb
add
inc
cmp
fistpl
aaa
jb
gs
popf
or
mov
idiv
mov
and
lret
sub
idiv
ds
sar
xchg
ret
dec
and
loope
push
testb
in
or
xchg
jnp
lea
pushf
test
fimull
and
pop
icebp
mov
mov
adc
fadds
mov
or
and
inc
aam
nop
daa
jg
xor
stos
mov
mov
ret
mov
les
lods
mov
pop
idivb
icebp
mov
fcomps
std
jmp
arpl
mov
push
inc
fadds
sub
dec
loopne
add
xor
fsubrl
mov
mov
fnstcw
out
stos
in
xor
fldl
jne
cmpsl
lock
pop
adc
xor
dec
sbb
iret
fdivs
fidivs
js
stc
leave
add
pop
fucomi
or
out
fnstenv
int
add
jne
xchg
xor
lret
xchg
iret
popw
data16
test
loop
lcall
and
dec
rcrl
cmp
sub
shrl
cmc
mov
sahf
xor
mov
cli
imul
insl
lea
adc
and
and
xor
jg
or
push
inc
mov
pop
repz
xchg
ret
pop
enter
insb
jns
dec
scas
lea
pusha
mov
xchg
pop
xor
nop
daa
push
in
push
mov
fisubl
in
sbbb
cld
xchg
ss
cltd
xor
push
xor
dec
jo
scas
movsl
imul
and
jnp
cmpsb
insb
xor
mov
lea
mov
sub
fisubrs
stc
mov
sti
and
dec
jecxz
insb
xchg
sub
out
dec
or
pop
hlt
clc
mov
fldcw
nop
daa
add
mov
das
xchg
ds
insl
inc
mov
pushf
and
inc
pop
repz
cmp
repz
ret
adcb
dec
out
jbe
stc
cltd
jle
xor
cmp
bound
das
arpl
testl
sub
sti
orl
cmp
push
insl
pop
sub
dec
pop
test
out
in
repz
scas
imul
test
mov
das
xchg
sub
cmp
mov
mov
fmulp
shlb
fwait
icebp
cmp
loop
aad
push
add
je
xor
and
mov
ss
mov
pop
repnz
popf
xor
dec
insb
add
mov
stos
push
sbb
insl
inc
je
aam
clc
fdivl
xchg
push
sbb
js
arpl
pop
pop
lret
inc
cmc
mov
xor
cmp
sbbl
sbb
inc
imul
clc
aad
and
xchg
cs
rorl
add
fnsave
dec
in
sahf
inc
fsubp
mov
arpl
mov
loop
xchg
push
ljmp
jno
xlat
dec
fs
cmp
daa
mov
push
adc
xchg
push
gs
lcall
scas
pushf
push
cmp
pushw
push
mov
rorl
xchg
into
and
or
cmp
ljmp
inc
and
adc
ss
cmc
mov
mov
sub
dec
pop
notb
out
pop
jae
lahf
outsb
jns
jl
push
jmp
cmp
pop
mov
jmp
pop
mov
mov
test
pop
pop
mov
sbb
mov
jb
cmc
mov
mov
fdivp
dec
aam
lcall
ss
push
loope
mov
ret
movsb
cmp
jnp
pop
push
cmc
jecxz
jno
jne
out
sub
insl
cld
jl
mov
adc
dec
fnstcw
lret
pop
xchg
mov
int3
call
or
cmp
push
mov
fists
test
cmpsl
jb,pt
adc
js
fsubrs
adc
xor
jp
aad
popa
clc
xor
push
call
xchg
inc
movsb
or
hlt
push
inc
faddl
jne
push
scas
std
xchg
and
imul
sbb
sub
pop
js
xor
xor
push
sbb
adc
mov
bound
cmp
dec
insl
pop
icebp
mov
lods
stc
rclb
and
ficompl
mov
lret
push
adc
sub
or
clc
fcompl
ret
mov
out
add
cmp
ret
push
outsl
jb
bound
jge
fcmovb
pop
int3
or
jle
inc
add
adc
push
pop
pop
xchg
cwtl
cld
push
pop
iret
jne
mov
pop
mov
test
insl
cld
cmp
xor
sahf
js
xorb
hlt
insb
test
adcl
nop
repz
aam
sub
or
cwtl
and
xor
xchg
fidivs
shll
and
xor
jnp
push
test
cmpsl
mov
in
mov
imul
ljmp
roll
add
mov
sub
sahf
lret
pop
push
sub
insb
loop
jo
hlt
cmp
mov
shll
insl
push
enter
sub
jle
out
inc
rcl
dec
lock
or
outsl
shrb
ret
sbb
out
inc
fbstp
outsb
outsb
mov
pop
adc
xor
cmp
imul
dec
jp
insl
jae
je
ret
popw
mov
enter
ficoml
lods
or
mov
test
jno
xchg
or
stos
clc
cmp
sub
out
popf
ret
mov
jbe
mov
clc
push
out
jecxz
pop
aam
or
cs
lahf
jle
call
test
in
daa
enter
fs
outsl
adc
test
inc
stc
jmp
ljmp
jmp
mov
or
mov
fistl
idivl
sub
ss
dec
test
sbb
sub
jno
inc
aad
cmp
aas
mov
jecxz
mov
dec
jecxz
mov
dec
add
or
push
xchg
xor
icebp
js
push
cmp
xor
lods
pop
lcall
mov
xchg
push
imulb
shll
push
call
mov
fldcw
shl
pop
out
cmpsb
add
int
jbe
push
sbb
mov
jmp
or
mov
shrb
dec
in
inc
mov
loopne
call
fiaddl
aaa
xchg
sub
mov
bnd
push
ss
mov
fnsave
jg
cwtl
lea
pop
sub
dec
out
in
push
fcos
xchg
lret
adc
in
lods
aad
outsl
loopne
adc
outsl
push
arpl
cmc
mov
sub
lock
add
push
jne
xsha1
cmpsb
or
nop
outsb
mov
dec
mov
mov
jnp
fs
mov
out
jo
andl
sub
in
ret
push
sbbb
data16
xchg
cwtl
jbe
mov
mov
xor
push
fstpt
or
mov
inc
sub
je
jmp
mov
das
callw
loope
sub
fisubl
or
jmp
pop
cmc
ljmp
sbb
sahf
xor
in
std
xchg
outsb
push
lods
lahf
negl
mov
jne
push
dec
mov
ds
push
in
rclb
testb
hlt
mov
xchg
sub
cs
add
jne
xor
adc
ss
push
es
or
cld
pop
cmp
movsl
xor
pop
mov
out
sbb
outsb
or
out
adc
sahf
sbbl
xor
jp
into
gs
or
and
mov
jle
sahf
xor
sbb
dec
inc
cmp
inc
outsb
arpl
cmp
lret
adc
lcall
lret
in
adc
rcrl
jae
push
cli
mov
fiaddl
mov
lock
sar
pop
cmc
out
mov
jge
sbbb
dec
loope
dec
aad
data16
lcall
dec
in
and
xchg
xchg
iret
rcrl
in
test
cmp
mov
les
mov
push
add
add
jb
bound
cmp
cmp
cmp
ret
leave
push
cmpsb
push
lods
adc
scas
and
sbb
js
inc
push
mov
xor
stos
mov
sub
cltd
xchg
lea
movlps
outsb
inc
outsl
push
je
je
insb
push
enter
jb
paddsw
mov
pop
cmpsb
pop
cmc
add
daa
or
test
int3
arpl
sub
clc
xchg
mov
and
aaa
into
movsb
inc
cli
xchg
push
lds
mov
dec
pop
pusha
mull
les
mov
mov
inc
fcoms
mov
push
movsl
mov
cmp
pop
scas
sub
jp
iret
inc
and
rclb
aam
inc
xor
faddl
push
ljmp
or
xchg
xchg
mov
add
arpl
andb
jl
es
shrb
fisttpl
mov
int3
push
in
call
pop
fsubrl
fidivrs
lds
pop
cmp
or
mov
sbb
in
orl
addr16
cld
cmpsl
inc
flds
es
jnp
pop
repz
test
push
dec
push
jmp
js
lea
orb
jecxz
inc
fsubrl
adc
mov
fidivrs
ljmp
sbb
into
inc
shll
jge
fnsave
sub
sub
mov
add
or
out
test
xchg
sub
jge
xor
arpl
clc
imul
mov
mov
xor
stc
nop
loope
mov
add
out
test
scas
inc
js
inc
shll
adc
addr16
cs
sub
mov
dec
jecxz
sub
jmp
mov
jb
inc
hlt
imul
cmp
jmp
add
inc
cltd
xor
rclb
mov
insb
xor
iret
sbb
xchg
jno
mov
jle
ja
adc
call
dec
test
lret
fistpl
push
outsl
cld
cmpsl
ds
nop
sti
xchg
sbb
aam
cltd
cmp
add
scas
stc
nop
stc
fnstenv
sbb
outsb
add
lahf
ss
jae
pushf
cltd
lret
fidivrl
shrl
loopne
mov
push
fstl
rcrb
jl
cwtl
icebp
mov
push
mov
lock
cmp
lock
sbb
fimuls
pop
icebp
mov
pop
sub
dec
sahf
mov
adc
or
out
push
out
sahf
loope
mov
fsubrp
test
es
push
jmp
push
sbb
nop
test
ret
fidivrl
jns
outsb
cmp
lahf
in
cwtl
das
pop
into
aas
decl
jle
inc
fcompl
xchg
sub
loopne
push
orb
push
mov
xorb
push
roll
testl
inc
testl
das
add
test
push
arpl
adcl
sbb
test
in
xchg
aad
pop
fisubrl
ror
add
mov
xchg
sub
call
into
mov
loop
pop
fmuls
lret
or
popf
xchg
xlat
xor
movb
xor
cmpsb
mov
pop
fxch
lods
inc
mov
sub
lcall
add
lcall
pop
repz
cli
jg
push
arpl
mov
and
test
mov
sbb
ds
js
hlt
test
cmp
pop
lods
out
jl
fidivs
xor
mov
inc
int3
arpl
setnp
pushf
push
mov
outsb
mov
ret
sbb
mov
jae
icebp
mov
xchg
lods
inc
sub
add
mov
sub
aam
rorb
adc
and
lea
cmp
addr16
inc
fidivl
inc
fcmovne
add
jbe
jge
pusha
scas
xchg
jmp
sar
xchg
add
sbb
xchg
mov
insl
add
lods
stos
inc
and
imul
test
dec
addb
mov
repnz
outsl
cld
xchg
pop
sbb
xchg
pop
cmc
insb
jecxz
hlt
rorl
fstpt
jnp
rorb
repz
cmp
jo,pt
lret
pop
lret
inc
icebp
mov
loope
out
pop
push
jmp
jle
sub
adc
adcb
xchg
pop
imul
das
and
enter
mov
and
scas
inc
mov
stos
pop
adc
mov
sub
jg
dec
ja
push
cmp
xchg
inc
lea
std
xor
xor
fldl
or
mov
ror
xchg
and
cmp
mov
and
xchg
adc
dec
pop
gs
cmpsb
pop
cs
sub
push
pop
dec
push
jmp
sbb
ljmp
xor
cs
test
outsb
mov
repnz
ja
je
repnz
add
xchg
loopne
mov
pop
data16
push
loop
sti
mov
hlt
and
adc
xor
and
xor
icebp
cmp
cmc
mov
cmpsl
jbe
icebp
mov
addl
pop
xchg
addb
jbe
movsl
dec
idivb
aad
insb
inc
into
ss
cmp
mov
ds
pop
insb
addb
mov
cmp
test
pusha
lret
adc
sarb
syscall
xchg
or
sub
stc
and
in
push
lock
mov
shlb
shlb
pop
rcl
mov
sbb
negl
iret
mov
or
jno
aam
leave
xlat
lcall
adc
decb
or
xchg
xchg
daa
pop
xchg
mov
rorl
test
out
push
sbb
jo
arpl
or
clc
mov
sub
mov
out
push
repnz
fnstenv
xchg
jno
adc
loop
mov
ret
cmpsl
pop
lret
xor
mov
mov
icebp
cmpsb
cmp
sub
aad
pop
dec
adc
mov
shrl
in
adc
mov
clc
es
repz
adc
jnp
sarl
pop
mul
sub
and
into
push
cmp
ret
inc
insb
je
mov
xor
in
stos
test
cmpsl
jb
stc
nop
mov
fiaddl
lret
xorb
cmpl
adc
jecxz
pop
cmc
inc
out
gs
cmpsl
add
add
subb
movsl
ss
gs
inc
hlt
out
mov
insl
addr16
outsb
hlt
xchg
xchg
jmp
sbb
add
sbb
mov
les
enter
mov
jb
sbb
pop
lock
lahf
aad
sub
and
jecxz
in
push
mov
rorb
xchg
enter
test
js
into
pop
ds
lea
and
sbb
mov
mov
stc
xchg
sub
add
xchg
int3
cmp
es
leave
test
adc
xchg
push
test
es
mov
cpuid
cmp
lcall
jge
mov
std
mov
loopne
aad
idivb
mov
mov
int
jne
les
mov
cs
inc
mov
push
pop
sarb
repnz
cs
pop
sahf
fiadds
push
jbe
fnsave
imul
xchg
in
pop
push
and
fisubs
mov
mov
fidivs
iret
or
mov
daa
gs
xchg
push
mov
cmp
mov
fcoms
fsubrl
loope
std
sub
jecxz
pop
cmc
push
add
test
adc
icebp
in
ret
push
fistpl
enter
int
testb
ljmp
mov
mov
dec
imul
push
pop
aad
jg
pop
fs
push
divb
shlb
mov
push
jge
mov
dec
loop
push
outsb
jecxz
mov
in
push
pushf
inc
cltd
jno
or
icebp
fldl
pop
ret
pop
div
mov
cmp
add
fsts
aam
scas
jbe
mov
in
xchg
sub
add
sub
xchg
sbb
mov
in
mov
ljmp
dec
mov
xchg
out
dec
cltd
push
lret
je
leave
cmp
insb
xchg
mov
dec
popa
clc
jns
cmp
ret
inc
imul
lahf
pop
stc
mov
hlt
push
mov
in
lret
movsb
inc
fst
or
iret
in
dec
xchg
mov
or
out
test
mov
xchg
and
stos
gs
jnp
sahf
dec
adc
lahf
movsl
lret
push
or
jp
jne
lds
sub
lods
inc
shrb
scas
jno
mov
out
stc
clc
mov
out
mov
dec
in
addb
add
xchg
js
jmp
and
xor
movb
mov
mov
addl
jns
movsb
push
into
fisttpl
jbe
xor
push
popa
fldcw
insl
add
call
sti
xchg
dec
xor
movsl
cmpsb
popl
mov
imul
mov
mov
xchg
lock
ds
pop
jle
sarl
and
mov
insl
add
ss
mov
mov
dec
mov
adc
and
push
xor
xchg
or
or
shl
push
lock
mov
arpl
xchg
aad
add
idivl
or
inc
or
dec
insl
pop
lcall
add
jp
sahf
dec
inc
sbbl
aaa
std
mov
clc
xor
gs
add
incb
pushf
adc
mov
jecxz
movsl
jne
cmp
pop
xor
adc
sub
mov
lock
test
pop
mov
or
insb
pop
mov
cs
jmp
les
shl
ret
dec
lahf
jecxz
imull
inc
add
dec
mov
fs
mov
insb
lods
sbb
mov
pop
leave
out
cmp
push
testl
mov
lds
movsb
pop
jl
mov
push
movsl
imulb
rolb
ficompl
lahf
cwtl
adc
cmp
and
dec
mov
loop
inc
insl
insb
nop
test
xchg
mov
pop
popf
repnz
xchg
xchg
jmp
inc
testl
mov
stos
cmp
rclb
test
fbstp
outsb
cmpsb
pop
repnz
inc
dec
xchg
ret
xchg
cs
data16
lret
cwtl
roll
sbb
inc
add
cwtl
lock
roll
shll
cs
arpl
mov
ret
cwtl
lds
and
sub
cwtl
xlat
outsb
lret
add
jae
data16
sub
pop
adc
imul
jns
dec
loope
jbe
xchg
push
push
fstl
pop
mov
mov
data16
les
loop
daa
xchg
pop
add
lea
loop
andb
cmpsb
or
pop
mov
xchg
push
es
mov
lock
push
femms
sub
xorb
jns
stos
inc
repnz
push
pop
mov
shll
les
popa
aam
mov
dec
out
test
test
adc
mov
cmp
or
js
loopne
icebp
adc
jbe
push
push
sbb
adc
stc
das
and
leave
sbb
in
sbb
enter
arpl
push
ss
into
shll
repnz
xchg
dec
adc
mov
xchg
or
gs
and
pop
lds
mov
cs
lock
movsl
pxor
pop
push
adc
idivl
and
loopne
xchg
scas
in
test
enter
adc
les
cltd
cmp
negl
mov
clc
out
in
sbbb
mov
ja
sub
mov
out
jmp
jg
cli
mov
jp
add
mov
stos
mov
or
int
sub
insb
push
sub
pop
cmp
pop
cmpsb
call
outsl
dec
mov
dec
enter
in
lcall
add
mov
push
lods
mov
stc
push
xor
or
fsubl
mov
cmpsl
aam
inc
inc
pop
int3
fwait
xchg
cs
pop
loope
mov
xchg
in
cmp
clc
sub
mov
sub
icebp
mov
shrb
mov
popa
scas
fldcw
rorl
call
dec
pop
mov
dec
shl
pop
jge
and
arpl
or
pushf
lea
xor
test
mov
push
or
mov
push
jne
montmul
cmpsb
cmpl
adc
cmpsl
rolb
mov
ret
mov
push
stos
nop
bound
mov
fs
sbb
popa
imul
or
das
add
ss
push
outsb
push
mov
cmc
and
sbb
test
pop
mov
and
ja
dec
dec
push
cmp
dec
sub
ror
push
add
fisttpll
cmpsb
cmp
test
rclb
jbe
insb
inc
xor
cld
or
jl
xchg
les
outsb
dec
xor
in
add
mov
das
mov
js
inc
lahf
jmp
int3
pop
out
mov
inc
hlt
ffreep
inc
add
mov
jbe
push
shrb
mov
dec
xchg
or
adc
and
sub
test
pop
int3
mov
inc
rcrb
lahf
push
jmp
dec
lcall
mov
aam
adc
jp
inc
scas
out
mov
mov
gs
push
mov
imul
add
in
adc
shrl
adc
int3
hlt
push
fcomps
std
cmp
out
ss
mov
cld
hlt
das
mov
pop
in
outsb
inc
ss
mov
fsubrl
int3
mov
div
mov
popa
mov
xchg
shr
or
dec
sbb
movsb
movsb
push
fwait
xor
push
or
push
shrl
xchg
lcall
sti
ljmp
ret
in
push
das
jno
mov
mov
pop
aad
popf
dec
mov
mov
sbb
pushf
ljmp
adc
cmp
xchg
in
pop
jge
in
sbb
jecxz
dec
pop
adc
mov
cmc
dec
inc
dec
sub
jl
xchg
mov
ds
pop
xor
sub
push
inc
mov
and
push
out
cmp
or
and
leave
lcall
and
pop
dec
pusha
idivl
mov
inc
xor
fs
mov
mov
or
popf
negl
mov
mov
out
push
mov
sti
shrl
mov
adc
lret
mov
dec
stc
fstpl
push
ficompl
mov
xchg
inc
adc
call
mov
jecxz
das
pop
xor
sbb
push
aaa
jbe
addl
stos
lret
dec
popf
fstl
out
adc
rclb
or
xor
or
jp
ja
cmp
scas
add
int3
xor
mov
or
shlb
mov
sbb
jne,pt
lock
jl
adc
pop
ja
sbb
inc
ret
xchg
loope
jns
dec
or
popf
pop
add
cltd
xor
inc
mov
mov
xchg
mov
fs
inc
imul
jl
dec
cmp
mov
dec
cmp
jp
push
iret
inc
dec
dec
xlat
inc
pop
jbe
cs
and
add
repz
mov
add
int
fnsave
mov
arpl
pop
xchg
inc
sahf
out
jne
iret
out
nop
add
dec
inc
jecxz
pop
cmp
and
adc
shll
loope
imull
sti
in
mov
cld
pop
or
int3
xor
adc
lret
das
sarl
les
enter
dec
cwtl
movsb
jo
mov
and
out
xchg
in
popf
xor
dec
or
jmp
sbb
fidivs
xor
jb
ja
mov
arpl
sub
nop
mov
insl
push
mov
dec
pop
cmp
test
adc
out
and
push
jecxz
movsl
testb
mov
repz
jp
xchg
mov
cmp
sub
add
pusha
popa
mov
lea
insl
cs
adc
xchg
clc
adc
test
fbld
mov
nop
cli
mov
sbbb
icebp
lea
push
sub
cwtl
in
das
inc
pop
push
fstpl
insb
fnsave
push
or
dec
call
cld
out
into
push
loopne
pop
int
scas
xchg
jns
movsl
ds
les
pop
cld
rcll
cmp
mov
imul
jnp
sbb
je
insb
je
and
push
pop
pop
test
out
lods
fs
gs
clc
lods
sbb
ret
add
cmc
ja
ret
das
push
dec
stos
lock
gs
sub
enter
dec
push
xor
and
cs
mov
cltd
aaa
dec
mov
xlat
xchg
in
adc
mov
ss
rorb
mov
js
fists
aas
inc
mov
mov
mov
nop
daa
ds
push
sub
xchg
and
add
sub
and
inc
inc
sarl
inc
dec
movsl
aaa
dec
lahf
ss
sub
add
es
ljmp
mov
int3
arpl
xchg
fidivrs
fldenv
mov
sbb
jmp
xchg
cwtl
jo
cli
loop
and
enter
and
jl
or
xorb
sub
mov
xchg
mov
aas
rcr
insl
out
fildl
mov
dec
out
into
and
xchg
roll
aas
cmp
push
popa
cwtl
int
adc
push
nop
push
jl
icebp
cmp
mov
xchg
and
add
xor
push
pop
or
push
in
push
xchg
cmp
ja
or
fs
call
hlt
lods
jo
push
ret
mov
adc
sub
ljmp
jmp
ljmp
in
mov
bound
jae
pop
xchg
mov
clc
xchg
lcall
cld
out
jbe
je
push
insl
cltd
fs
cmc
mov
push
insl
adc
add
mov
pushw
pop
dec
pop
pusha
and
in
pushf
fstps
sbb
dec
fwait
jp
int
lret
pop
cmpsl
decl
gs
arpl
call
pop
dec
cli
jmp
mov
jb
scas
test
or
add
mov
adc
sub
jl
cmp
adc
xor
mov
jno
pop
movsl
iret
jl
stos
popf
in
inc
out
mov
icebp
ljmp
or
inc
nop
add
pushf
shlb
mul
pop
lods
in
pop
adc
jb
jp
sti
xchg
pop
mov
adc
xchg
sub
sub
xchg
incb
xor
xchg
fcompl
and
jge
jb
pop
inc
inc
stc
inc
push
xor
xor
mov
es
test
ja
cwtl
gs
dec
jl
iret
lods
outsl
push
movsl
popa
adc
jg
dec
dec
push
add
xor
outsb
cmpsb
inc
insl
jb
in
test
jmp
mov
sbb
xlat
lods
pop
scas
loopne
cmp
stos
ljmp
testb
lahf
and
scas
lock
loopne
outsl
andps
mov
inc
pop
les
gs
pop
aas
inc
divb
inc
fidivrs
xchg
imul
and
adc
cmp
sub
jp
cmc
cmpsl
hlt
dec
and
push
loope
add
sbb
jp
aaa
or
pop
stc
adc
cmp
pop
inc
and
pop
pop
cmp
push
inc
in
arpl
push
bound
mov
cmpsl
xchg
inc
xchg
push
pop
mov
in
sub
mov
and
mov
ljmp
mov
fnstenv
cwtl
dec
nop
push
sub
stos
mov
stos
dec
jae
dec
mov
xchg
loopne
lods
fwait
xor
fs
lods
or
fimull
xchg
or
std
bound
cmp
xor
pop
lock
ss
pop
push
mov
jl
push
mov
sub
lea
arpl
popf
ljmp
lock
daa
cmp
xorb
pop
and
flds
scas
push
adc
js
push
adc
xor
sbb
jp
test
jo
inc
cmp
jae
push
jecxz
cmc
popf
imul
ja
fadd
adc
mov
sub
mov
addr16
sbb
jbe
cmp
test
dec
in
sub
insb
push
lahf
xor
imul
lods
or
fidivl
call
outsb
fnsave
cmp
jge
dec
or
xor
test
lahf
jge
loop
pusha
int
fsubs
push
popf
js
mov
mov
and
inc
xchg
mov
js
cmp
sub
lods
xor
dec
xchg
add
sti
dec
scas
pop
addb
les
mov
dec
lds
cmp
popl
aas
cmpsb
dec
in
push
rep
aad
lcall
dec
lods
lods
pop
addr16
add
lcall
lret
aas
fnstsw
lea
fidivrs
jne
stc
sbb
lock
aaa
sbb
inc
pop
pop
rep
shrb
out
das
fisubs
stc
bound
lds
popa
testl
jno
inc
arpl
test
ja
inc
movsb
xor
mov
sbb
scas
out
adc
sub
enter
aas
add
mov
cmp
add
ljmp
xchg
ja
mov
loope
fmull
adc
pop
or
cmc
dec
mov
pop
push
push
lahf
inc
push
xchg
out
jmp
loopne
sbb
leave
lahf
js
sub
mov
in
cmp
imul
adc
mov
pop
bound
imul
out
arpl
stos
push
xlat
or
push
mov
jb
nop
jne
push
gs
fs
inc
fdivr
inc
pop
lret
push
mov
or
inc
mov
push
addr16
lahf
cmp
lods
sbb
insl
fcmovbe
mov
aas
jge
mov
mov
ret
pushf
pop
push
push
add
je
xchg
pop
xchg
mov
xchg
mov
rcll
push
inc
adc
dec
cs
and
ds
insl
inc
cmp
inc
cmp
in
xor
inc
sub
sbb
cmp
push
ljmp
pop
repz
ja
mov
fwait
xor
jecxz,pn
xor
movsl
cmp
push
and
mov
add
push
adc
aas
f2xm1
dec
ret
mov
enter
mov
hlt
ficoml
mov
loopne
push
test
loop
push
ljmp
dec
in
loop
adc
pop
movsb
cmp
xor
jl
ret
popf
or
icebp
out
daa
mov
inc
inc
inc
fdivl
sbb
cli
les
sbbl
cmp
lahf
ss
js
mov
sub
int3
adc
mov
stc
nop
pop
setle
adc
or
daa
bound
mov
cmc
repnz
dec
pop
xchg
mov
insl
cmc
pushf
imul
popf
std
aas
cs
in
xor
lods
iret
cmp
cmp
mov
daa
mov
shrb
dec
insb
xor
sub
cmp
fnclex
out
cmc
popf
pop
xchg
scas
pop
jmp
push
jae
jmp
mov
decb
test
bound
aam
jo
inc
in
and
iret
mov
push
and
pop
in
inc
fsubrs
test
mov
mov
scas
mov
sub
jge
dec
jne
imul
xchg
sbb
jo
sbb
mov
das
lret
mov
pop
aaa
dec
fiadds
or
and
shr
push
inc
data16
or
mov
insb
or
test
test
mov
add
repz
sti
adc
xchg
fildl
fcmovu
mov
dec
jp
cmp
aaa
jne
ljmp
cmc
js
pop
xor
incl
push
and
push
jo
pop
mov
mov
cs
and
orl
sub
test
ja
add
push
loopne
adc
fsubl
add
mov
mov
iret
or
test
sbb
or
or
ja
outsb
cwtl
mov
shll
icebp
jle
clc
fsubr
jno
or
add
jg
js
cmpl
cld
or
push
in
mov
es
faddp
mov
lods
cmp
pop
sbb
sub
imul
cmpsb
xor
add
nop
repz
loope
loopne
cmp
xchg
mov
add
daa
xchg
fsubs
or
int
dec
aas
and
sub
add
mov
and
iret
pop
pushf
ljmp
arpl
xchg
sub
xchg
sub
push
sti
pop
xor
mov
je
add
mov
ficompl
ret
jb
std
sub
pop
lods
and
test
fs
mov
filds
or
mov
push
jae
push
and
xchg
add
les
jae
jle
sbb
scas
xchg
sub
shl
jge
mov
out
in
inc
test
push
mov
test
addl
dec
inc
fsubrp
jne
dec
outsl
push
xchg
sub
les
xor
daa
fsubrl
adc
dec
test
push
in
data16
xor
pop
ds
fistps
push
push
jae
mov
in
out
lea
or
pusha
sbb
test
add
repnz
bound
push
cs
pop
lock
dec
mov
inc
ja
in
or
mov
sub
xor
add
push
arpl
dec
xchg
daa
lcall
pop
adc
push
jl
ret
lret
jg,pt
add
ret
sub
shll
into
sbb
add
or
aad
sbb
into
fcoml
pop
push
movsb
dec
mov
mov
mov
ret
mov
lahf
push
fstpl
test
loopne
inc
xlat
mov
lock
inc
cli
jb
andl
ljmp
out
and
enter
movsl
dec
loope
sbb
ljmp
push
cmp
icebp
movsl
push
push
add
adc
loope
jae
jg
add
lcall
push
mov
mov
jbe
bound
inc
das
inc
sub
movsl
jmp
jo
scas
repnz
js
jmp
mov
mov
xchg
loope
imul
dec
dec
mov
mov
xchg
sbb
pusha
test
mov
lret
xchg
pusha
cmp
ss
pushf
mov
rcrb
outsb
pop
ret
mov
xchg
or
mov
sbb
push
aas
hlt
cmpsl
aad
daa
sub
les
ret
jbe
and
adc
sbb
xchg
and
jle
jns
int3
dec
adc
sbb
pop
or
hlt
xor
mov
pusha
mov
sbb
lods
repnz
push
jne
or
scas
arpl
popf
push
data16
sub
insl
or
lods
cltd
xor
cmp
mov
mov
push
pop
test
leave
mov
xchg
mov
push
jb
inc
cltd
add
inc
addr16
ss
movsl
imul
mov
xchg
rcl
lock
or
stos
mov
enter
clc
cltd
jmp
mov
ret
call
and
ss
pop
cmpsl
ds
cwtd
neg
sbb
loopne
test
push
rcrl
insb
jge
push
xchg
loope
push
dec
sub
icebp
lcall
or
sbb
mov
stc
pop
divl
dec
sub
xchg
sub
dec
arpl
cmpb
pop
sahf
into
outsb
sbb
cmc
je
add
sbb
mov
imul
lahf
in
sub
mov
and
fsubrs
inc
insl
mov
ret
push
jne
mov
ljmp
inc
fdivrl
sub
aad
cltd
or
fs
jle
cmpsb
scas
stc
ds
scas
loopne
cmc
and
jb
pop
pop
cmp
add
xchg
mov
mull
add
or
pop
sub
rcll
scas
and
xor
jp
or
sub
aad
push
dec
insb
xchg
mov
stos
xchg
int
dec
mov
sti
cwtl
cmp
and
repz
push
aas
int3
adc
repz
in
cmp
rclb
push
mov
stc
xchg
push
xchg
ss
fistps
push
jns
mov
jge
je
in
cld
mov
inc
fsub
pop
decl
rolb
pusha
idivl
hlt
mov
mov
xor
inc
in
gs
cmc
mov
fidivl
rclb
xor
jbe
xor
adc
adc
adc
xor
cltd
data16
lea
jbe
inc
inc
pop
ja
jmp
mov
shll
cli
test
xchg
mov
pusha
mov
pop
call
pop
pop
sub
enter
out
xchg
mov
xabort
out
pop
scas
mov
mov
ret
push
lcall
cltd
pop
lcall
mov
push
inc
test
rorl
jle
and
int
daa
jl
rcr
popf
lods
mov
shll
mov
xor
inc
rolb
scas
imul
shl
jnp
mov
xlat
push
test
movsb
mov
in
push
mov
nop
and
jle
mov
aam
mov
mov
pop
xlat
jl
jl
pop
pop
cli
xor
sahf
jbe
inc
lock
pop
sahf
push
leave
inc
add
xchg
lahf
imul
mov
xor
aam
arpl
xor
and
icebp
jmp
and
mov
push
and
pop
stc
cltd
lahf
fistpl
mov
ret
pop
movsb
icebp
aaa
in
dec
roll
lods
push
sbbb
pop
mov
in
js
cmp
pop
inc
pop
enter
cmp
aaa
push
movsb
push
test
test
fsubr
sti
mov
dec
out
les
xor
cmpsb
ljmp
mov
jbe
mov
pop
dec
dec
push
inc
loopne
daa
or
pop
cmp
out
aad
aam
mov
test
lds
mov
xor
popf
cmpsl
clc
pop
push
mov
jge
sub
and
mov
add
fisubrs
fstl
data16
pop
aam
lahf
lods
inc
ljmp
ljmp
addr16
data16
out
popl
cli
test
out
add
add
fstpl
sub
sbb
stc
cmp
cmpsl
pop
ds
fwait
repnz
call
add
or
mov
xchg
mov
adc
ss
loop
add
lock
cmp
jae
js
cmp
add
mov
and
rcrb
inc
fdivp
xor
loope
cmp
scas
into
test
xchg
cmc
xchg
mov
lahf
lods
add
adc
jmp
xchg
stos
adc
stc
nop
movsb
xor
mov
dec
es
mov
lock
clc
mov
ljmp
mov
cmp
fsubrl
cltd
mov
dec
sbb
mov
adc
aaa
mov
push
mov
out
outsl
add
lea
push
xacquire
repz
push
loope
or
movsl
mov
scas
push
and
fnsave
mov
inc
decb
lret
dec
out
or
xchg
pop
cld
add
add
and
jns
popf
ds
adc
pop
lret
inc
in
and
ds
jns
sbb
add
sbb
push
dec
pop
cwtl
jnp
dec
arpl
add
push
fwait
xor
imul
leave
je
dec
cmpsb
jmp
ret
decl
xor
loopne
mov
jns
clc
lods
and
pop
add
imul
gs
push
push
push
inc
or
xor
shlb
cli
add
shrl
movsl
push
data16
mov
flds
jno
xlat
cmp
push
sbbl
test
stos
xchg
jns
jge
in
jb
add
cmp
pop
lret
sub
popl
sub
lahf
xor
out
mov
sub
xchg
dec
add
aaa
cmp
mov
adc
into
stc
nop
test
ret
pop
jle
mov
pop
mov
faddp
pop
out
adc
sbb
xor
cmp
sbb
ficompl
rclb
cmpsl
fcmovne
fdivrs
pop
icebp
imul
xlat
test
pop
cmc
pop
arpl
xchg
adc
enter
in
addl
or
cmp
scas
adc
mov
scas
sub
ds
testb
fnstenv
js
mov
fistl
push
pop
mov
jp
pop
pop
dec
stc
pop
jp
in
imul
dec
ret
xchg
xor
pop
dec
cs
mov
cmp
jge
in
pusha
sarb
out
lds
cwtl
stos
and
fstpl
pop
lock
aaa
fcomps
cwtl
int
pop
mov
in
pop
sub
je
jae
addr16
mov
push
mov
push
mov
jl
jo
idiv
and
push
stc
inc
ret
lret
hlt
jecxz
pushf
xchg
insl
dec
sbb
call
test
loope
lods
dec
daa
xchg
stos
fldt
or
jg
js
sub
repnz
jns
adc
ja
add
imul
mov
mov
and
mov
inc
xlat
fldt
pop
aad
inc
cltd
or
pop
repnz
cmpsl
jb
push
xor
cmpl
pop
fwait
popa
loope
ja
pop
lock
cmpsl
xchg
xchg
cmpl
push
in
gs
cs
leave
iret
sbbl
cltd
test
mov
mov
pop
jge
xchg
in
jmp
adc
mov
and
fs
xchg
pop
sbbl
mov
movsb
cmp
push
js
xor
xor
sub
xorb
push
pop
adc
jg
inc
mov
loope
in
into
mov
les
loope
ljmp
cmp
mov
daa
sbb
lds
xchg
sbb
jo
bt
xchg
add
cmp
cld
xorb
pop
in
ss
dec
movb
adc
adc
mov
js
jmp
imul
mov
mov
and
out
push
fwait
xlat
scas
int3
lds
jo
out
lds
mov
mov
cmpsl
je
fmuls
cld
je
mov
leave
ds
leave
xchg
dec
mov
cs
inc
sbb
mov
pop
movsb
dec
aad
lcall
jmp
dec
and
mov
push
fisubrl
or
push
mov
loope
push
test
lea
push
mov
or
add
leave
mov
stos
in
push
fstl
sahf
test
xor
call
and
mov
sahf
bound
mov
xchg
mov
ja
enter
shlb
xchg
enter
popf
test
push
xchg
cmp
gs
sub
fisttpl
pop
imul
pop
pushf
xor
call
jl
mov
lock
jecxz
xor
arpl
lret
sahf
ss
pop
xor
dec
mov
cltd
ror
pop
insl
cmpsl
or
mov
push
jo
test
jg
sbb
inc
inc
leave
cmp
movd
flds
xchg
or
add
rclb
jb
push
or
cmp
fidivrs
and
xor
sti
pop
mov
inc
or
pop
push
lcall
sarl
nop
pusha
sti
sub
mov
sbb
ret
addr16
push
test
xor
sbb
dec
mov
out
mov
repnz
mov
loope
daa
int3
jo
gs
pop
xchg
adc
ret
adc
bound
orl
and
ficoml
test
ja
negl
fisubrs
pop
cmp
cmp
xorl
scas
push
pushf
inc
pop
cmpsl
xor
js
insb
push
push
lock
add
jo
push
imul
popf
inc
shrb
xchg
add
dec
into
icebp
jbe
push
out
jnp
sbb
push
adc
outsb
and
jae
repnz
rolb
jmp
rcrl
insl
scas
mov
fldenv
loop
clc
mov
sbb
push
ljmp
xchg
insb
pop
lock
shlb
pop
ficoml
mov
imul
clc
into
cmp
cwtl
inc
mov
add
out
cld
popa
enter
xchg
aad
jecxz
cmp
andb
dec
cmc
int3
decb
inc
xlat
mov
int
popa
pop
pop
lret
subb
jb
out
rcrl
insb
add
cmpsl
lahf
mov
iret
jmp
mov
aad
lds
lods
adc
pop
cmpsl
stos
andb
cld
es
in
mov
and
inc
push
sub
repz
and
adc
sub
push
inc
popa
push
sub
aam
adc
inc
js
icebp
mov
mov
gs
lahf
popf
add
cmpsl
jno
insb
mov
sbb
adc
fdivl
sbb
xor
jg
rorb
pop
push
or
scas
sub
test
lods
xchg
mov
xchg
cmpsb
ret
ret
sub
sbb
mov
nop
mov
stos
add
dec
pop
lcall
xor
dec
xchg
add
ret
adc
jle
push
sbb
push
test
lods
lock
das
idivl
mov
scas
adc
gs
xorl
jne
aaa
sub
movsb
dec
push
test
add
jp
mov
xor
fucomp
dec
sub
mov
out
mov
push
mov
imul
pop
fwait
mov
cld
inc
les
push
mov
dec
cltd
xorw
mov
outsl
repz
inc
fnsave
shll
sub
fst
mov
adcb
xlat
push
xchg
insb
int3
dec
mov
fdivrs
jne,pn
mov
add
test
jbe
add
mov
push
out
and
xchg
ror
repz
cld
jno
cs
or
lcall
aaa
xchg
jl
or
xchg
inc
cmp
into
mov
xor
popf
jne
out
xor
xor
mov
lods
and
cmpb
xchg
in
cld
mov
int
mov
ficoml
mov
xor
mov
sahf
aaa
dec
inc
adc
js
gs
mov
mov
and
repz
pop
push
stos
mov
aam
mov
inc
daa
insb
ret
push
inc
xor
jmp
or
push
pop
push
lcall
cltd
sub
stos
cwtl
cmp
clc
and
xchg
mov
cltd
push
lahf
ja
jl
sar
jle
fbstp
divl
push
dec
mov
mov
adc
test
adc
fcomip
mov
loop
stos
xchg
xor
cmpsl
popa
sub
lds
pop
dec
pop
lea
dec
lret
int3
outsb
inc
fldt
or
inc
dec
bound
sbb
ret
xchg
push
enter
jbe
sbbb
xchg
in
divl
shrb
jbe
aad
push
out
cli
add
daa
sbbb
dec
xchg
dec
or
test
outsl
pop
insl
dec
or
lods
mov
push
fcmovbe
ret
pop
in
sti
mov
pop
inc
push
jne
lret
lret
jns
adc
xchg
xor
arpl
inc
inc
jne
repz
xchg
cmpsl
int
sti
xchg
xchg
mov
sti
jecxz
sbb
xchg
aam
add
ss
cmpsb
sbb
adc
sbb
shrb
and
cmp
xchg
test
mov
sub
inc
popf
les
lods
mov
inc
fs
mov
cs
xor
vpunpckhdq
dec
ds
addl
cmpsb
sbb
jecxz
sbb
arpl
loopne
negl
sub
adc
pop
and
adc
xor
fwait
cld
outsb
test
leave
pop
mov
mov
jmp
sbbb
inc
fstl
ds
xorb
and
jb
adc
in
addl
jns
push
pop
or
mov
dec
js
and
push
mov
pusha
mov
jno
fwait
mov
mov
xor
out
xor
push
add
jmp
imul
sub
mov
lock
enter
mov
push
sahf
jmp
mov
dec
dec
or
cmp
mov
into
push
idivb
aad
rcrl
cwtl
stos
xor
fcoml
fbstp
lret
xchg
ljmp
ss
adcb
adc
movsb
push
in
aad
mov
inc
or
xchg
arpl
cltd
stc
into
xor
scas
xchg
or
cmp
inc
fisttpll
test
jmp
add
nop
outsl
mov
les
cmpb
in
aad
pop
pop
pop
xorl
or
inc
fisubrs
test
dec
inc
xchg
decl
cmp
insb
cli
push
or
sub
sub
aas
dec
sbb
pushf
aam
sbb
mov
sbb
fsubr
enter
icebp
es
xchg
add
jmp
or
idivl
in
mov
lcall
stos
adc
js
lret
icebp
mov
sbb
cltd
cwtl
xor
xchg
cmpsl
push
and
jge
out
idiv
mov
aas
fs
jg
jnp
sarl
addr16
and
adc
out
adc
aad
scas
aas
push
sbb
jno
lahf
mull
mov
scas
or
and
imul
sub
sahf
or
jo
xchg
add
cmp
sbbl
jmp
lahf
jp
or
cmpb
out
inc
ds
sub
shlb
mov
jle
mov
test
aad
in
std
shlb
imul
dec
mov
stos
out
xchg
dec
sbb
lret
imul
stos
and
lods
xchg
sub
inc
arpl
sbb
dec
jecxz
cmp
or
add
rcrb
mov
mov
inc
push
adc
in
cwtl
push
outsl
inc
push
lods
je
dec
loope
sub
sarl
dec
es
push
data16
inc
imul
in
call
and
xor
jbe
adc
or
aam
mov
jmp
inc
sub
or
jae
shr
add
pop
sub
mov
mov
stos
arpl
fdivp
mov
mov
pop
divl
scas
lods
sbb
pop
nop
dec
cmp
aaa
lds
jnp
dec
iret
mov
je
pop
xor
call
fnstenv
add
in
jne
out
pop
shl
adc
adcl
jmp
jb
dec
or
lock
dec
aad
inc
test
cmp
xchg
jl
mov
ds
mov
lea
xchg
mov
jne
cs
divl
fucompp
sbbb
or
pop
pushf
mov
sbb
nop
push
imull
cmp
add
cmc
int3
mov
fcoml
adc
ja
xchg
movsl
push
scas
pop
nop
ret
sub
fsubrs
mov
cli
xchg
ret
inc
addr16
mov
xchg
adc
inc
pushf
mov
movsb
jge
in
mov
cltd
add
repnz
lahf
repz
popf
test
pop
inc
fcoml
in
test
mov
cmp
jecxz
sar
les
xchg
inc
ret
xor
jecxz
ret
cmp
pop
test
lahf
or
inc
or
mov
and
adc
xor
mov
dec
push
mov
sbb
lahf
cmp
mulb
stos
push
jno
scas
or
push
inc
xor
ljmp
ljmp
out
dec
loopne
les
fmull
test
or
std
adc
rcll
mov
sbb
jo
fildl
loopne
ret
jle
mov
mov
hlt
jae
imull
fcmovbe
or
mov
aad
mov
and
mov
sub
cmp
mov
push
add
sub
loopne
pop
fwait
test
xchg
xchg
cmp
xchg
scas
cmp
popa
push
and
push
sub
fidivrs
scas
push
xor
lods
cltd
push
sub
out
push
mov
jb
mov
test
iret
mov
fcomip
mov
in
mov
inc
push
lret
cmp
pop
sahf
xor
jnp
xor
or
sub
popf
add
xchg
push
or
cmp
insl
shr
enter
imul
xor
cmp
sub
clc
cmp
adcl
cmp
push
fwait
jge
push
mov
fwait
js
movsb
rcrb
mov
repz
xchg
cmp
pop
add
add
mov
cmpsb
aad
mov
mov
iret
insl
push
add
mov
jne
hlt
and
sbb
inc
lcall
inc
sub
out
ficoms
std
xor
out
mov
jnp
cmpsl
sbb
test
dec
lock
sub
and
mov
inc
outsb
mov
mov
ret
ret
scas
inc
or
mov
dec
pop
add
mov
mov
stos
movsl
inc
pop
fcomip
outsb
movsl
cli
push
adc
add
xadd
xchg
inc
jl
xchg
lret
pop
mov
sbb
or
cs
aad
fucomp
sbbl
inc
or
mov
xor
dec
fstl
or
popf
xor
std
mov
scas
call
mov
les
mov
pop
je
push
push
or
fsts
js
stos
pop
bound
mov
jmp
or
jb
cmp
mov
lret
and
xlat
mov
das
rcl
and
xchg
in
sbb
call
shrb
clc
pop
inc
cmc
in
lock
cltd
dec
mov
xchg
cmp
mov
dec
popa
mov
dec
cmc
pop
out
mov
call
jmp
jb
insl
add
movsl
xor
mov
dec
and
push
iret
and
inc
fnsave
lcall
mov
or
mov
pop
in
and
push
jle
mov
into
insl
insl
call
or
mov
sarl
jle
push
xor
and
dec
xor
rclb
stc
fdivrs
ss
das
adc
or
mov
adc
fdivrl
rorl
imul
fimuls
sub
add
and
movsl
stos
sbb
sub
pop
pop
scas
sbb
into
dec
xchg
imul
mov
aam
cs
cmp
cmp
adc
jge
pop
imul
mov
mov
push
add
or
lcall
bound
xchg
insl
into
xor
inc
inc
xor
inc
xlat
add
fisubl
adc
inc
cmpsb
jb
add
ss
and
inc
adc
dec
pop
ds
push
xchg
scas
movsl
adc
xchg
adc
mov
pop
pop
lods
orl
cmp
inc
inc
fadds
cltd
xor
mov
mov
cmp
lods
sub
rol
cmp
not
push
or
jno
or
aaa
hlt
ror
aam
in
dec
push
jmp
xchg
ret
or
push
push
out
popf
popf
icebp
incb
loope
xor
push
call
fs
lock
jl
sub
pop
mov
mov
addr16
mov
add
and
je
push
rorb
push
fsubr
outsl
stos
xor
xchg
push
mov
das
mov
or
xchg
xor
pop
data16
outsl
fsubrs
add
cld
imul
inc
gs
adc
movsb
sub
push
mov
arpl
loopne
test
sbb
or
aas
into
fbld
lods
cmp
jl
ret
pop
divl
jmp
loopne
jns
sub
loopne
mov
xchg
jecxz
cmpsl
ret
push
sub
mov
test
int3
xlat
ja
xchg
jmp
aad
mov
mov
or
pop
outsb
icebp
xchg
negb
sahf
es
imul
push
mov
lds
mov
movsl
popfw
enter
sbb
push
xor
mov
pop
pop
xchg
jg
scas
ret
pop
dec
xchg
pusha
mov
sahf
sbb
pop
loop
sbb
push
addr16
movd
aaa
shrl
ss
clc
movsl
mov
xchg
push
or
cs
inc
mov
call
cmp
add
int3
mov
loop
pop
or
test
xchg
mov
fdivr
xchg
mov
pop
sbb
test
dec
mov
sahf
mov
es
lods
repnz
or
arpl
nop
fsubrs
inc
jmp
mov
popf
xchg
mov
jmp
xor
stc
and
adc
test
mov
jmp
dec
call
pop
mov
inc
push
add
inc
xor
test
mov
je
pusha
mov
daa
out
jecxz
jg
push
or
or
mov
sbb
sub
push
inc
popf
jp
enter
and
jge
rclb
dec
push
orb
out
sbbb
fnstenv
push
insl
push
or
inc
push
mov
ss
mov
adc
nop
dec
jl
mov
jae
imul
stc
fs
ljmp
mov
loopne
pushf
add
push
cs
mov
mov
repz
mul
pushf
ljmp
pop
test
fldcw
xor
ja
ret
push
sub
pop
or
and
cmpsb
cs
repz
sbb
add
inc
js
xor
in
pop
mov
jle
out
sub
push
inc
stc
xor
mov
lods
cltd
sub
push
ljmp
xor
push
gs
xchg
sarb
or
and
bound
xor
mov
popf
xor
ja
jbe
sbb
jnp
adc
subb
xchg
mov
enter
cmp
imul
imul
adc
cmp
or
fidivrs
dec
inc
sub
dec
rolb
jno
rclb
das
push
sbb
andb
das
jge
add
testb
pop
nop
jl
pusha
and
rcrl
cwtl
les
leave
std
pop
out
cli
lea
push
inc
pop
jns
fstl
or
jns
adc
jg
add
sbb
dec
mov
dec
pop
mov
pop
fwait
push
jae
jns
or
cmpsb
jge
xchg
pop
jnp
cmp
cltd
pop
jle
stos
icebp
cmp
stc
push
xchg
out
jnp
call
push
cmc
dec
sub
inc
or
or
hlt
pop
cmp
cmp
enter
and
mov
pusha
imul
ucomiss
mov
aaa
sbb
mov
sub
adc
pop
adc
ds
mov
rcrb
iret
scas
cmpsl
divl
sbb
mov
ret
adc
push
inc
sti
xor
sub
and
push
imul
jmp
enter
pusha
or
lods
shr
fldl
dec
dec
leave
rolb
fnstenv
data16
push
push
mov
mov
outsb
fs
pop
jecxz
ljmp
jb
aaa
and
out
sbb
nop
daa
adc
sub
and
push
test
fisubs
fsubrp
xchg
push
icebp
jmp
xchg
cmpsl
hlt
xor
out
add
xchg
push
pop
pop
jle
mov
inc
mov
add
movsl
push
cwtl
repz
sti
lret
sub
sbbb
add
adc
inc
mov
sarl
jae
ret
in
mov
arpl
sti
mov
xchg
lret
shll
cmc
fidivrl
bound
and
aaa
clc
push
xchg
pop
ljmp
imulb
ljmp
and
les
mov
or
aam
jle
jmp
fwait
fs
fidivl
aas
cmp
pop
xor
add
in
in
push
in
ds
xchg
or
xchg
test
jle
and
push
or
jb
and
inc
into
lahf
jb
xor
xor
and
inc
xor
mov
sahf
or
sahf
cmp
dec
pushf
call
pmuludq
dec
jl
mov
lea
cmpsl
mov
dec
pop
mov
lods
aad
jmp
jne
ljmp
push
sbbl
rclb
add
mov
cld
dec
out
movsl
lds
test
lahf
sbb
xor
xchg
fs
cmp
xor
sbb
cmp
les
and
insb
shrl
jp
mov
clc
or
sub
rcr
mov
shl
and
and
xchg
lahf
mov
test
iret
loop
js
fisubrs
jbe
cmpsl
addr16
iret
js
sbb
mov
subb
movsw
xchg
out
push
jo
imul
aad
mov
vpunpcklbw
mov
cmpsb
lock
add
add
mov
push
ljmp
push
or
outsl
add
mov
dec
adc
cmp
outsb
std
mov
icebp
cmpsl
pop
loope
add
sub
xchg
inc
ljmp
ss
add
mov
mov
rclb
push
sub
popa
fsub
pop
repz
icebp
cmpsb
sub
loopne
lods
or
xchg
cmp
mov
or
jp
dec
out
repz
push
mov
push
aad
mov
xor
push
xchg
test
fwait
sbb
int
outsl
clc
mov
ficoml
cli
pop
lods
cs
test
lea
add
sub
cmpsl
add
or
jnp
or
pusha
jle
les
movsl
adc
ss
mov
sbb
fnstsw
inc
leave
popf
cld
int
cmp
cld
pop
mov
shll
mov
or
jne
jg
jns
rcll
ljmp
jbe
lods
dec
inc
pop
mov
lcall
out
xchg
jecxz
cmc
mov
sbb
mov
add
mov
and
pop
in
xchg
jno,pn
cmc
and
add
cmpsl
pop
push
fimuls
in
jge,pn
pop
in
insl
push
mov
push
xchg
inc
aas
mov
cmp
sub
jo
mov
test
in
xor
lea
aaa
or
adc
jo
xchg
je
push
cmpsb
loopne
jl
rep
push
sub
sub
xchg
out
dec
mov
out
inc
rcll
inc
or
cmp
jle
imul
scas
fwait
out
lea
push
cmp
test
push
dec
rolb
adc
jne
das
mov
jle
push
adc
insb
jne
or
pop
jbe
mov
xlat
inc
scas
add
lods
pop
scas
ficomps
mov
es
cmp
mov
out
out
fistpl
jmp
xlat
push
jo
out
clc
xchg
inc
jmp
cs
push
fwait
mov
xchg
arpl
insb
sub
lods
or
sbbl
xchg
insb
jns
mov
in
idivl
sub
std
xchg
mov
lds
das
sbb
fdivr
sub
mov
pinsrw
xor
and
xor
cmpl
pop
cmc
insl
inc
fdivrs
and
push
mov
test
mov
xor
repz
sub
adc
in
lcall
sub
movsb
popf
test
test
pusha
movsb
sti
push
clc
mov
mov
sti
les
pop
sub
cli
jno
pop
pop
sub
inc
mov
mov
push
in
mov
pop
mov
lahf
dec
push
jl
mov
add
sbb
iret
pop
idiv
jnp
mov
repnz
push
cmp
adc
jmp
incb
jno
mov
mov
add
push
dec
pop
test
sub
iret
cld
sbb
sub
insb
shl
clc
jmp
cmc
xchg
add
les
jns
dec
out
test
cmp
pop
fwait
cmp
repz
jno
cmp
push
sbb
es
fimuls
add
je
popa
and
hlt
mov
cwtl
mov
rorl
xchg
xchg
aam
in
pop
cmc
cmpsb
repnz
call
sub
into
ss
test
daa
inc
push
cmp
mov
sub
mov
lahf
stos
and
mov
lock
sub
jp
sbb
jmp
mov
xchg
pop
stc
popf
fbld
cld
orl
pusha
mov
adc
hlt
mov
into
pop
gs
inc
or
scas
testl
stos
pop
xchg
jle
push
test
xor
imul
fs
shl
sarb
mov
and
jmp
ret
cs
loop
or
adcb
push
insb
inc
adc
aaa
adc
adc
push
push
out
push
add
mov
push
and
push
jbe
stos
iret
out
mov
xchg
jl
sbb
es
inc
pop
movsb
pusha
lods
test
lret
je
std
cmp
cmc
add
fidivrl
inc
call
push
dec
dec
mov
jecxz
push
fnstsw
sbb
add
test
jb
fwait
test
push
int
outsl
cmpsb
adc
repnz
jbe
inc
mov
sub
and
xor
movsl
ja
sub
jne
mov
mov
pop
push
fsubs
xor
pusha
mov
inc
int3
push
mull
add
shll
mov
call
test
and
int3
jno
call
sub
or
xor
sub
pop
xchg
jb
add
bound
cltd
out
mov
mov
or
add
jbe
outsb
adc
jmp
or
aaa
fiadds
cmp
daa
outsb
jo
dec
add
jl
idivl
dec
mov
cmp
adc
or
cld
imul
hlt
mov
add
xchg
sub
in
sbb
dec
ds
xor
xchg
shr
in
sbb
das
cmp
nop
jae
fdivp
inc
mov
stos
push
inc
je
add
out
xchg
in
nop
xchg
pop
sbb
mov
adc
cmp
and
fisttps
jns
cmp
push
push
nop
and
and
dec
cmpsl
dec
cmp
xchg
pop
xor
pop
loope
es
mov
aad
sbbb
aam
cli
and
sbb
pop
xor
mov
outsb
adc
loop
jmp
inc
sub
jle
cmp
lret
push
imul
ss
push
xor
gs
mov
fisubrs
inc
add
fisubrs
int
push
adc
pop
dec
out
mov
xchg
sub
jmp
mov
test
call
inc
dec
int3
push
test
or
aaa
cmp
pop
jle
subb
sbb
add
imul
fnstcw
cmpsb
fs
adc
rcl
std
sbb
xor
cs
loopne
add
cs
xchg
push
or
inc
cmp
mov
pop
push
adc
rorl
sbb
add
lahf
shlb
dec
sbbb
jl
or
push
or
into
jnp
daa
repz
pop
cmc
dec
and
jl
fwait
and
shll
push
popa
xchg
lea
dec
mov
add
shll
fsubrl
and
and
mov
mov
in
subl
sbb
insb
mov
adc
fidivl
loop
cmp
fs
iret
mov
es
flds
fdivr
out
pop
fstpl
lret
test
lahf
mov
and
pusha
push
out
sbb
jp
scas
cmp
mov
inc
push
call
daa
lret
adc
dec
test
popf
and
inc
push
inc
adc
and
fsubr
clc
cld
scas
mov
ljmp
pop
jecxz
dec
jnp
movsl
lods
imul
ja
icebp
dec
and
out
mov
ret
insb
fnstenv
stos
add
aam
push
fnsave
outsb
daa
outsl
mov
mov
xchg
std
mov
dec
mov
xchg
lahf
sub
adc
shlb
test
inc
mov
mov
or
dec
xor
addb
orb
fstpl
lds
jae
and
popa
sub
jae
push
cwtl
aaa
mov
and
mov
fimuls
es
into
sbb
dec
aad
or
jb
popa
mov
jno
inc
mov
hlt
popa
push
sub
lret
popf
mov
ds
aaa
push
pushf
xor
test
aaa
jae,pn
xor
or
mov
fimuls
ret
mov
jl
xlat
mov
sub
pushf
adc
xor
jle
push
lret
insl
mov
popa
clc
cmp
ficoms
dec
jle
cmpsb
xchg
repnz
fidivs
out
lds
std
lsl
sub
add
cmp
in
dec
jns
repnz
int
mov
lea
mov
js
jl
add
roll
call
test
in
sbb
push
xor
adc
int
mov
xor
cld
int
add
jle
mov
sub
push
cld
or
aad
jb
cmp
cmp
push
shlb
movsb
loope
and
jge
jmp
cli
xchg
popa
scas
out
insb
pop
lea
jno
lock
cli
dec
mov
pop
cmp
pusha
adc
daa
inc
sub
fwait
lcall
push
ret
adc
adc
sahf
mov
sbb
mov
cwtl
das
mov
test
jns
sub
scas
push
lea
iret
dec
xchg
repnz
add
push
ficoms
in
cs
dec
jmp
or
jnp
inc
jl
jno
cli
push
jo
and
inc
jge
sahf
scas
gs
lods
mov
adc
out
int
mov
and
xorl
sarb
inc
push
mov
mov
xchg
inc
repnz
movsb
lods
add
sbb
adc
mov
jmp
fdivp
imul
mov
lahf
scas
lea
das
or
pop
mov
lret
xlat
dec
adc
scas
out
and
xor
xor
popf
push
imul
andl
lods
lock
scas
inc
gs
rclb
add
outsb
cltd
fsubrp
test
bound
sarb
insb
mov
pop
mov
mov
add
sti
or
dec
dec
subl
add
lods
push
push
decb
sbb
add
hlt
jecxz
adcl
push
aam
jno
lcall
arpl
fmuls
repnz
sub
push
push
repz
adc
aaa
jno
xchg
ret
xor
in
lds
repnz
push
jmp
push
or
test
xor
and
addl
push
xchg
and
loope
inc
xor
imulb
call
cmp
pop
pop
pop
mov
pop
ret
sahf
xor
push
mov
aas
outsb
cmp
and
or
hlt
sahf
mov
into
xlat
in
and
push
xchg
xor
int3
cltd
dec
cmp
in
dec
rcrl
les
nop
mov
lret
jae
mov
shlb
jp
insl
sete
xchg
jns
sub
pop
enter
mov
add
int
fwait
imul
outsb
test
addb
aas
sbb
jno
pop
enter
and
add
gs
rclb
dec
test
mov
lods
out
push
sbb
ret
mov
imul
es
jnp
mov
les
ret
sbb
imul
jno
cmc
xchg
push
ficompl
lods
dec
cld
mov
loopne
adc
fcompl
ja
bound
or
cmpsb
xchg
push
add
adc
movsl
mov
out
roll
pop
test
mov
mov
adc
test
cmp
fldln2
and
inc
inc
in
mov
xchg
sub
fwait
into
sar
or
out
push
xlat
sub
xlat
mov
or
pop
das
mov
movsl
mov
popf
cmpsl
sbb
add
subl
nop
stos
xor
lea
fcomps
jle
xor
add
icebp
lret
jae
call
or
cmp
popa
or
mov
pop
mov
push
outsb
and
addr16
push
adc
cmp
and
pushf
scas
out
imul
push
out
fidivs
push
fwait
out
repz
ja
cmp
xchg
xor
mov
popf
sarb
adc
push
shlb
and
push
lret
lret
jl
cmpsl
enter
or
data16
fldcw
stos
dec
stc
lahf
sub
cmp
sahf
repnz
push
rcrb
lahf
inc
push
cli
mov
mov
sbb
lret
dec
aam
sbb
mov
cs
pop
aaa
daa
call
dec
or
test
test
lods
inc
std
rclb
sub
mov
jg
icebp
adc
and
dec
cld
inc
push
inc
out
and
push
data16
xor
mov
test
movsl
adc
out
adc
fldcw
mov
or
xorb
and
ljmp
and
jo
test
testb
insb
sub
enter
xor
mov
inc
in
das
mov
pop
cld
pop
sahf
sub
fbld
das
mov
fsubr
mov
sti
imul
jle
in
xor
icebp
sbb
add
cmp
aam
cmp
jecxz
inc
roll
bnd
mov
pushf
sbb
xchg
inc
sub
loopne
lods
mov
and
aad
or
scas
out
sti
cmp
ja
sub
jmp
shll
xor
ljmp
cmp
mov
divb
js
in
lahf
jbe
orb
pop
xchg
push
js
fldt
ret
pop
inc
sub
jle
sbb
into
pusha
lds
add
xchg
sub
push
jae
inc
leave
movsl
mov
push
scas
mov
inc
push
lret
out
push
sub
mov
into
lea
push
ss
cwtl
mov
sbb
in
xor
loop
test
push
out
loop
ljmp
mov
adc
stos
jne
out
push
add
pushf
aaa
add
cld
sbbl
lret
pop
mov
sbb
out
xor
cs
movsl
lods
mov
lahf
jmp
shlb
xor
xchg
hlt
jno
or
idivl
xlat
dec
clc
cmpsl
mov
gs
stos
mov
sbb
jno
aad
out
sbb
clc
das
ret
sbb
stos
in
fmuls
xchg
fldenv
mov
push
addr16
cmpsl
jg
test
fistpl
xor
iret
jnp
out
lock
es
dec
cmp
mov
sbb
add
mov
js
shrl
mov
jge
stc
inc
ret
repnz
push
jne
sbb
cld
pusha
out
adc
push
adcb
rcrl
dec
std
xor
or
add
jl
and
int3
push
call
clc
testb
pop
subb
test
sbb
push
out
in
jmp
xor
sbb
mov
push
fwait
je
in
in
loope
sub
dec
xchg
sub
out
jmp
or
lea
xchg
lret
jno
add
popa
decb
out
cmp
push
and
lahf
lods
add
ss
xor
xchg
out
imul
test
mov
pop
mov
or
aaa
and
loope
std
es
movsb
mov
incb
icebp
mov
sbb
xor
repz
jmp
push
cltd
popf
mov
xor
mov
mov
jne
and
lret
add
aas
lret
test
test
mov
jnp
ret
rol
push
iret
and
test
and
dec
popa
mov
dec
xchg
jnp
jno
xor
lea
mov
popa
add
sbb
fs
mov
popa
test
cmp
in
xchg
insl
fsubrs
mov
ds
sub
adc
or
xchg
movsl
jno
aam
cmp
pop
aad
fwait
jp
pop
pop
scas
or
int3
imul
stos
mov
xchg
cs
leave
xchg
movsb
sub
sub
fsubrs
sti
jae
and
clc
sub
xor
cmp
mov
addr16
mov
aad
jno
out
sub
sub
xchg
sbb
insb
and
xchg
or
xchg
dec
pop
xor
lahf
cmp
pushw
test
dec
push
in
adc
movsl
mov
cmc
jns
cmp
out
push
int
mov
sub
jecxz
adc
or
xor
jne
xor
push
mov
addl
bound
mov
push
or
lea
push
or
add
or
jecxz
mov
in
or
xchg
cmp
std
jle
xor
mov
push
shl
inc
dec
pop
mov
adc
out
test
fwait
push
push
or
mov
outsb
out
jbe
and
nop
arpl
jmp
call
out
das
mov
push
stc
jb
lock
xchg
mov
sbb
sbb
loop
cwtl
pop
dec
mov
in
sub
push
dec
testb
pushf
sarl
sub
inc
fincstp
ret
adc
pusha
inc
pusha
test
subl
scas
jae
xchg
outsb
inc
add
test
lods
fwait
enter
in
in
xor
test
xor
fs
mov
push
test
negb
add
insb
roll
stos
inc
cltd
inc
lods
or
in
lret
jl
sub
xchg
inc
mov
lcall
or
lcall
fidivrs
paddw
dec
xor
iret
jecxz
sub
or
mov
jmp
mov
push
call
dec
push
hlt
cmp
das
pop
popa
aam
movsl
and
pop
xor
pop
adc
addr16
ljmp
cmp
jo
push
dec
and
xchg
int3
or
rcr
push
cltd
add
shrl
rcrl
jl
mov
daa
movsl
loopne
into
ret
xchg
mov
inc
and
dec
xchg
lret
mov
cmp
and
icebp
dec
sub
aaa
icebp
in
cwtl
mov
out
pusha
stc
pusha
cmpb
mov
cmp
ljmp
cmp
jnp
icebp
sbb
mov
xchg
out
sbb
and
sub
repz
jecxz
adc
fcmovnb
xor
mov
out
adc
cmp
cmp
cmp
xor
xor
xor
pushf
pop
adcl
dec
insl
outsb
bound
fmuls
adc
sub
add
and
xor
jbe
repnz
leave
nop
push
jmp
fmull
jno
sub
lods
cld
dec
jg
insb
pop
cmp
imul
mov
inc
mov
loop
sub
fcmovnbe
shrb
test
mov
addr16
cmp
jl
mov
nop
cmp
or
test
jno
push
mov
stc
adc
or
xorb
jp
sub
mov
xor
data16
jae
jl
aad
mov
sbb
sti
mov
jmp
xchg
sub
push
mov
inc
push
sub
mov
fistl
movsb
inc
mov
fcmovb
xchg
push
repnz
popa
mov
inc
add
ja
out
xchg
fiaddl
pop
out
lock
sub
cmp
ds
or
insb
dec
mov
add
pop
xchg
mov
decl
inc
ss
and
cltd
imul
into
or
scas
cmp
or
movsl
pop
xor
and
lods
test
enter
movsb
mov
rolb
inc
jns
imul
nop
mov
fwait
jbe
sub
sbb
sub
xchg
sahf
push
daa
mov
cwtl
fnsave
push
cli
icebp
mov
push
es
dec
xchg
ds
leave
fistl
jp
fstp
scas
xchg
dec
or
and
xor
dec
fidivl
push
in
les
adc
jne
packsswb
push
enter
stc
aad
ljmp
sub
insb
xlat
xor
jnp
mov
mov
mov
sub
and
push
sbb
scas
movsb
jnp
bound
cltd
imul
arpl
mov
stos
cli
mov
and
rcr
pop
outsb
iret
aas
pop
mov
fldenv
pop
repnz
push
adc
sub
addb
sarb
stc
sub
pushl
ja
insl
push
cmp
aas
mov
dec
sbb
jg
cltd
mov
mov
mov
clc
xchg
pop
pop
scas
and
and
sbb
imul
mov
lahf
mov
sub
imul
stc
aad
adc
xchg
pop
pushf
inc
add
xchg
into
in
cs
cmp
je
or
out
cmp
and
pop
dec
jno
fidivl
int3
popf
xor
sbb
mov
adc
imul
push
and
inc
lds
lock
push
icebp
lcall
jo
pop
fwait
sub
add
xlat
sub
imul
pushf
test
push
ret
pop
shl
std
lcall
inc
outsl
push
pop
adc
in
dec
iret
and
fxch
push
xor
inc
faddp
mov
gs
ret
push
push
xor
cli
jle
arpl
imulb
pop
fnstsw
arpl
sbb
out
lds
fldenv
or
mov
std
xchg
pop
sub
sub
sbb
or
xor
cmp
rcrl
rclb
mov
ret
mov
sbb
dec
jecxz
jno
mov
jp
pop
and
ror
arpl
cwtl
das
sti
daa
mov
out
push
out
push
call
in
outsb
jge
push
insb
sub
sub
dec
leavew
cmpsb
jmp
in
outsb
sbbb
or
popf
arpl
movsb
xor
add
lret
and
inc
aam
frstor
adc
lods
xor
pop
gs
fstps
adcb
pop
test
pop
sub
sub
pop
movsb
dec
daa
ljmp
inc
fisttpll
stos
push
outsl
movsl
daa
mov
addr16
pop
push
jg
mov
fwait
add
cmpsb
lock
in
inc
lods
cli
mov
repz
adc
test
imul
addr16
adc
test
xchg
dec
dec
inc
nop
ss
enter
cmp
inc
shl
frstor
rcrb
scas
test
adc
pushf
jg
sbb
pop
jle
pusha
ret
sub
pop
cmp
xchg
adc
mov
and
aad
ljmp
mov
xchg
mov
repz
and
insb
fadds
mov
clc
add
in
ret
rolb
fists
imul
or
je
cwtl
nop
pop
out
mov
std
inc
nop
jbe
mov
pop
xchg
shll
dec
popf
pop
aaa
in
ret
in
and
sub
icebp
insb
pop
pop
mov
pusha
sti
fwait
adc
mov
push
sub
popa
clc
and
add
in
je
cmpsl
or
push
ficoms
mov
inc
sarl
inc
arpl
adc
push
je
and
lahf
pop
sahf
shr
cmc
inc
popa
add
and
lods
lods
xchg
sub
dec
add
lods
dec
call
das
test
cwtl
das
lea
mov
inc
or
mov
pop
pop
mov
lds
push
adcl
sub
push
insb
or
mov
loop
push
call
or
xor
iret
test
pmaxub
loope
push
jge
loopne
dec
iret
sbb
shr
loopne
xor
dec
add
outsl
pop
cmpsl
sub
in
mov
xor
push
cmpb
sahf
dec
outsl
cltd
stos
sbb
int3
lret
xor
popa
pop
data16
sbb
ds
pop
jecxz
clc
adc
jo
push
mov
mov
sahf
outsl
add
and
mov
mov
repnz
rorl
in
cmpsb
into
dec
fsubr
mov
xor
mov
lods
cmp
push
pusha
sub
mov
mov
xchg
insl
mov
call
dec
gs
pop
fnstcw
mov
loop
incb
cwtl
jg
sbb
popl
push
or
stos
push
lods
fdivrl
mov
lock
mov
mov
loop
idivb
pop
lock
scas
je
or
inc
fsubs
jl
lret
sub
fcmove
loope
inc
fdivrl
sub
aam
pop
lret
decb
jp
pop
push
inc
aam
call
fisubs
shlb
imul
movl
imul
inc
lock
es
or
pop
adc
mov
sub
es
cmpsl
sub
pop
popa
lret
lods
xabort
cmpsl
jle
rclb
or
mov
push
sti
pusha
sbb
daa
inc
cld
mov
adc
daa
in
shrb
mov
test
or
nop
mov
mov
les
dec
inc
sbb
adc
cltd
inc
and
data16
js
mov
pop
mov
sbb
or
ds
inc
inc
pusha
cmp
lods
lret
ret
pop
mov
push
jge
and
and
pusha
daa
adc
pop
push
pop
sub
mov
data16
jp
arpl
mov
jbe
movsl
mov
fistl
or
pop
mov
cmc
ss
mov
push
jmp
icebp
push
decl
aam
popf
out
mov
and
sbb
pop
xchg
cmp
call
popa
into
outsl
jmp
jae
jae
adc
into
inc
inc
mov
push
jg
ja
je
std
dec
cmc
dec
fstps
mov
aaa
mov
int3
dec
repnz
aad
pop
push
push
popf
shl
aaa
stos
aad
and
in
jno
rcl
jg
or
out
lods
inc
popf
or
insb
cli
or
cmc
push
test
in
icebp
cltd
add
rcrb
fistpl
cmp
dec
pop
cltd
aaa
mov
bound
dec
movsb
dec
stos
inc
adc
inc
pop
aam
mov
mov
push
out
push
jbe
mov
sbb
out
mov
adc
sarb
daa
frstor
mov
fiaddl
mov
mov
jg
mov
xor
enter
sbbb
mov
mov
lea
dec
mov
mov
inc
mov
dec
sbb
xor
mov
mov
fwait
or
inc
loopne
loop
mov
dec
cld
mov
lds
mov
mov
rcrb
mov
ljmp
fildl
popf
in
call
cmc
insb
push
lret
push
cltd
and
insb
jg
add
sub
cmp
push
push
sbb
lret
test
and
inc
add
lods
pop
loopne
in
jnp
dec
dec
sub
scas
fisttpl
or
fnsave
pop
lods
mov
fistpll
test
inc
xchg
xchg
je
xor
inc
loope
xor
bound
in
pop
test
js
test
xchg
inc
clc
lods
cltd
push
sbb
call
insb
pop
xor
pop
fwait
scas
sub
cmp
test
cmp
out
cmpsl
add
insb
cmp
push
jg
pop
repz
lea
dec
scas
sbb
dec
std
cmp
adc
adc
das
mov
stc
or
pop
mov
push
xor
or
dec
or
or
fs
je
cmpsl
jp
cltd
sahf
popa
inc
dec
in
testb
inc
arpl
fsubrs
cmpsb
xorl
sub
ret
and
pop
sbb
nop
decb
icebp
cwtl
lea
mov
xchg
cmovb
dec
int3
sahf
lock
sbb
mov
enter
mov
and
cmp
mov
inc
pop
mov
jmp
push
call
fnstsw
mov
es
xchg
jnp
mov
pop
dec
or
cmpb
cli
fidivrl
jmp
test
adc
and
mov
or
int3
movsb
inc
dec
xchg
lods
pusha
fs
xor
int
jo
outsl
push
loope
cmp
xchg
sub
and
push
sbb
sbb
dec
inc
test
lea
xor
mov
adc
push
stos
jecxz
mov
fildl
loop
push
int
movsl
test
cmp
stc
gs
and
mov
imul
notb
sub
into
lcall
adc
cwtl
fcoms
jo
xor
jo
fbld
or
in
mov
xor
and
jno
or
rolb
or
outsb
pop
jbe
fsubs
lret
adc
add
ss
pop
test
scas
cmp
inc
clc
or
aaa
xchg
inc
testl
js
je
push
test
and
ss
add
sbbb
into
stos
out
in
pop
pop
cmp
cwtl
sbb
jmp
jb
jno
cmp
or
fiaddl
jnp
sub
movsb
bnd
adc
xorb
fldl
mov
inc
aad
andl
mov
add
nop
xor
pop
xchg
sub
jbe
mov
outsb
mov
ret
shl
adc
xlat
fcmove
adc
out
sub
je
xor
pop
cmp
xchg
dec
push
movsl
mov
ja
cmpsl
adc
repz
sbb
arpl
lea
enter
xor
dec
push
repz
xlat
sub
pop
mov
adcl
adc
jbe
xchg
push
ljmp
push
out
jmp
mov
jne
sub
inc
in
hlt
cmp
adcb
sbb
and
cmp
sub
loopne
or
adc
pusha
dec
xchg
hlt
in
jge
sarb
leave
rolb
sbb
dec
push
lods
mov
and
jle
cwtl
outsb
test
fildll
jns
xchg
pop
stc
movl
push
shll
iret
jecxz
add
outsb
adc
ss
dec
adc
cli
es
xor
xor
mov
lret
aad
inc
inc
outsl
adc
push
mov
xchg
sti
mov
push
add
pop
mov
jo
push
jmp
sete
mov
and
xchg
gs
jg
dec
push
mov
aaa
iret
clc
sub
hlt
pop
or
outsb
mov
adc
pop
lcall
mov
or
out
or
fimuls
outsl
push
mov
xor
decl
mov
repz
mov
mov
mov
sub
jl
mov
testb
ljmp
enter
fwait
pop
icebp
lea
sub
int
inc
popf
outsb
sahf
and
and
adc
inc
and
mov
in
jns
dec
gs
lcall
movsb
sbb
mov
call
test
aam
inc
sub
jmp
sub
repnz
push
loopne
jmp
inc
mov
cmp
cld
into
xlat
mov
sub
lahf
pop
sub
push
xor
fsubr
fdivs
xor
jmp
pop
mov
scas
dec
loope
jl
jl
push
out
push
sahf
inc
es
jne
and
xchg
sub
adc
cmc
pop
xchg
mov
or
out
sbb
aas
mov
and
jns
pop
sahf
out
stos
xchg
and
rclb
push
cmc
int3
add
sahf
aam
dec
loope
jb
pop
ss
lods
jg
mov
xor
pushf
sub
dec
out
pop
imul
inc
inc
mov
bound
and
ret
dec
fsts
sbb
scas
scas
mov
js
sbb
dec
xor
dec
imulb
jb
pop
push
ja
add
or
xlat
mov
add
sbb
int
fnstcw
push
cmp
pop
fbld
cmp
xchg
jne
ds
inc
popf
mov
xlat
inc
int
mov
or
stos
incb
sbb
jns
mov
push
sub
test
mulb
lahf
das
into
fsubl
or
dec
add
fimuls
cld
shll
popa
or
shrl
push
dec
fwait
jmp
sbb
push
fcompl
in
adc
and
popa
inc
fcos
stc
jl
mov
into
jp
pop
call
outsb
mov
fcomip
mov
pop
push
cmp
out
popa
jg
sti
xchg
jae
enter
mov
adc
sub
dec
pop
add
cmp
sbb
loopnew
addr16
lods
jg
xlat
pop
mov
add
mov
pop
sbb
xor
rorb
movsb
cmp
or
mov
cld
lock
inc
fsubr
or
dec
ljmp
shrl
mov
addr16
loope
cmpsb
insl
lcall
fsubrl
or
frstor
div
adc
mov
not
outsb
mov
dec
cli
or
insl
imul
ret
xorl
mov
add
loop
call
test
ret
dec
dec
xor
jge
xlat
sbb
sahf
cwtl
and
or
test
add
nop
cli
test
xchg
sub
mov
xor
push
ds
push
enter
roll
cld
ljmp
cmp
pop
call
adc
jg
or
negb
es
test
gs
loope
inc
into
mov
testl
xchg
inc
mov
popa
aam
cltd
pop
push
sub
enter
test
or
icebp
pop
cmc
and
xchg
add
mov
sbbb
jecxz
mov
jl
and
lods
in
arpl
hlt
cmp
mov
dec
dec
and
shl
andb
shlb
cmp
stc
push
js
ret
les
pop
sarb
popf
and
gs
mov
mov
push
cltd
je
mov
jae
adc
clc
inc
xchg
stc
test
xorl
xor
mov
outsb
push
inc
sub
xchg
int
iret
xor
or
adc
inc
pop
jbe
stos
mov
popa
ret
jns
hlt
bound
cmp
enter
out
movsl
in
fnstenv
call
test
fldl
sbb
sub
in
jmp
pop
inc
xchg
mov
mov
mov
sbbl
clc
ljmp
xchg
int3
sbb
into
fstps
fs
stos
sbb
loopne
cmp
aam
popa
hlt
mov
ret
ret
adc
dec
xor
jl
lods
inc
jnp
sbb
movsb
mov
adc
jbe
icebp
or
xor
ret
clc
cmc
mov
jg
in
sar
jl
jns
mov
pop
cmpsl
mov
pop
idivb
imul
test
add
sbb
dec
xor
xor
mov
push
xchg
jg
sti
aad
jecxz
int3
sbb
mov
ss
aaa
sub
mov
fiadds
scas
cmc
or
js
std
xchg
jg
xchg
cltd
sarb
jo
sbb
cmp
mov
daa
mov
mov
add
jae
push
cltd
xchg
jp
xor
dec
aad
jp
ficomps
jb
add
gs
cmp
imulb
sbb
in
stos
jl
sub
mov
loope
xor
or
mov
aam
scas
popa
and
xchg
xchg
add
or
add
rcr
add
iret
mov
sahf
push
dec
and
gs
test
add
daa
sbb
and
pop
arpl
and
cs
pop
inc
push
push
fsubrl
adc
data16
shrb
mov
xor
mov
repnz
outsb
inc
test
ds
loope
sub
inc
cmp
inc
pop
add
and
ss
adc
loopne
lret
mov
or
inc
imul
mov
sahf
mov
jns
shrl
sbb
addr16
mov
addr16
cwtl
popf
push
inc
mov
jecxz
call
ret
in
shlb
shl
mov
mov
or
fisttpll
test
das
inc
andb
popf
jnp
inc
imul
fisttpll
and
lock
mov
cmp
jno
jp
xchg
pop
mov
cmp
pusha
xchg
adc
mov
cmp
mov
mov
insb
push
aas
push
int
ret
pop
dec
or
dec
pop
xor
aad
xorl
xor
sahf
roll
in
or
int3
xchg
adc
fwait
rcrl
movsb
aaa
add
jno
push
xchg
pushf
and
inc
mov
mov
mov
pusha
xchg
sbb
push
es
add
push
scas
sbb
rolb
in
push
inc
jmp
sbb
into
jbe
cli
push
adc
addr16
sub
adc
loope
in
add
mov
add
imul
adc
fldl
jnp
cmp
or
mov
jb
push
mov
xchg
adc
sub
adc
xor
xchg
dec
mov
arpl
sub
das
xor
push
call
inc
data16
iret
imul
cmpsb
push
mov
aad
sub
and
inc
fildl
enter
sbb
sub
iret
jecxz
sahf
pop
mov
fcmovne
jl
pop
mov
std
xchg
sahf
inc
enter
sbb
add
jb
mov
hlt
mov
and
lcall
mov
push
pop
shlb
add
stos
insl
adc
jo
inc
mov
loopne
xchg
addb
sbb
inc
stc
test
rcr
push
ljmp
jno
addr16
jnp
jnp
jnp
push
in
mov
adc
jmp
ficoml
or
pop
adc
lods
loopne
pop
int
cmp
dec
mov
push
sarl
adc
leave
or
mov
adc
cltd
inc
test
popa
lods
mov
sbb
sbb
fwait
movsb
cs
jge
push
xchg
dec
xlat
mov
push
bound
popf
mov
add
pop
loope
into
faddl
ret
jo
movsl
insl
insl
and
aad
xor
sti
and
inc
mov
addr16
cmp
cmovle
adc
jae
dec
out
mov
addr16
rclb
daa
push
pop
ret
mov
fisubrs
adc
mov
add
dec
sbb
lret
int3
test
cli
cmpb
pop
sbb
mov
mov
aas
adc
xor
in
dec
jmp
out
sbb
cmp
leave
fptan
lret
fucom
xchg
cwtl
dec
enter
fisttpll
push
and
xor
dec
add
out
ja
cmp
push
mov
jb
fbld
cmp
fmuls
cmp
sahf
push
mov
pop
push
ret
inc
out
push
insl
push
mov
sti
stos
push
fiaddl
insb
test
or
rcll
or
dec
mov
pop
faddl
mov
jmp
and
into
xor
aaa
xor
or
arpl
add
shll
xlat
mov
pop
clc
jo
inc
pop
movsl
jo
mov
sub
mov
cltd
mov
add
outsl
sbb
mov
sbb
sbb
jns
lods
mov
in
aad
cmp
add
xchg
xchg
inc
push
fwait
inc
mov
inc
add
jmp
stc
and
xchg
imul
sahf
scas
mov
mov
pop
dec
inc
dec
and
sahf
mov
aas
out
jnp
pop
ficompl
iret
push
xchg
in
test
inc
push
fcmove
and
xor
inc
mov
popa
clc
fwait
ret
add
inc
rcrb
lods
adc
mov
imull
dec
cltd
add
jne
into
mov
or
aas
mov
cld
arpl
pop
aad
je
adc
adc
pushf
sbb
in
jnp
push
bound
push
mov
add
mov
push
jnp
imul
clc
iret
cmpsb
lods
dec
jmp
push
jb
sub
or
stos
jecxz
pop
xchg
xchg
scas
loopne
adcl
mov
xchg
cli
mov
jp
add
xchg
mov
outsl
out
mov
fbld
test
pop
std
xchg
cld
push
leave
and
sbb
arpl
dec
ljmp
mov
and
inc
push
lcall
adc
mov
cli
add
movl
pop
arpl
js
test
jae
inc
mov
or
xlat
ds
pop
or
lret
insl
fbstp
mov
lret
cmpb
lcall
lock
xchg
xchg
add
out
xchg
enter
clc
aas
lods
fistl
pop
dec
jae
pop
xchg
adc
cmp
cmp
mov
scas
xchg
pushl
cmp
mov
jmp
push
cwtl
add
pushf
arpl
mov
and
notb
in
call
sub
popf
gs
cmc
addr16
jg
repz
shr
pop
push
xchg
sub
lahf
xchg
xor
push
lock
or
jle
imul
mov
and
gs
ljmp
or
xor
adc
mov
xchg
imul
ret
mov
aaa
movsl
or
out
dec
out
push
in
das
jmp
xorb
sbb
scas
outsl
sub
mov
dec
dec
arpl
jecxz
aam
jbe
mov
cmp
aas
ja
xchg
stos
ret
daa
rol
or
or
mov
jge
inc
pop
rclb
mov
popa
clc
jo
dec
adc
and
mov
push
mov
sti
gs
xchg
sub
nop
add
mov
shrb
mov
jb
sub
dec
rcll
pop
and
push
incl
mov
lods
inc
fisubl
push
lock
xlat
mov
aad
pop
pop
out
lds
data16
pop
dec
dec
shlb
dec
mov
rclb
test
and
pop
cmc
lock
fdivrl
jb
inc
dec
callw
sub
lock
fsts
aas
test
popa
inc
imul
jnp
push
mov
test
cmpl
out
aas
lea
pop
aad
nop
jns
outsb
mov
loopne
mov
jno
mov
sbb
pop
pop
dec
dec
mov
mov
dec
rorb
jo
inc
or
ja
sub
sarl
xchg
fisubrl
add
jmp
mov
xor
pop
pop
jge
das
scas
inc
popf
dec
mov
push
fs
cmc
jbe
inc
stos
push
outsb
mov
push
or
ret
fbld
nopl
fisubs
rcr
int
popf
out
popa
inc
xchg
push
jmp
bound
and
out
lds
jns
dec
scas
mov
pop
test
leave
xor
dec
adc
stos
sti
push
shrb
mov
cmp
sbb
mov
mov
mov
sbb
cmp
pop
pop
out
mov
xor
jo
icebp
sbb
adc
cwtl
testl
and
or
xchg
add
jo
xchg
dec
adc
loopne
sbb
out
lods
mov
push
fistps
rcl
fnstsw
sbb
jo
or
xchg
scas
nop
js
out
cmpsb
in
pop
mov
cmp
and
xlat
sbb
jns
and
push
movsb
jecxz
sbb
dec
testl
leave
outsl
xchg
in
insb
aam
outsb
or
aam
and
leave
lret
sub
sbb
leave
fistl
or
aad
fcmovu
je
xchg
repz
call
xchg
rcrl
dec
out
fstps
and
push
ljmp
adc
imul
jo
mov
cmpb
xchg
les
mov
sbbl
popa
push
xchg
sub
push
jne
mov
js
outsl
add
mov
fildl
aad
mov
fstl
rolb
imull
pop
sub
pop
fists
out
push
arpl
ds
ja
xchg
test
cmp
cmpsb
pop
mov
add
xor
cmp
or
xchg
scas
xor
loopne
dec
in
add
cmp
loope
pop
mov
cmp
rolb
mov
je
js
js
sbb
xchg
sub
push
mov
mov
leave
mov
iret
sub
fdivrp
mov
test
outsb
iret
jnp
das
mov
inc
push
ret
filds
test
mov
js
push
mov
push
shll
dec
add
fidivs
xor
cmpsb
fsubl
adcl
cmp
in
sub
rcrl
outsl
sub
gs
xchg
test
mov
gs
add
cwtl
mov
ret
pop
xor
adc
mov
les
and
pusha
sub
jecxz
icebp
mov
mov
mov
call
iret
push
xor
cwtl
jne
fs
or
push
hlt
inc
out
mov
pusha
incl
xchg
test
pop
push
mov
xchg
test
mov
xor
sbb
jl
jo
xor
cmp
nop
push
movsb
aam
cmp
jl
pusha
cmp
lret
fwait
loop
decl
das
mov
mov
into
arpl
jl
push
stos
cmpb
jo
sbb
mov
push
call
sub
sbb
pop
mov
rcrb
mov
enter
imulb
inc
cli
lar
mov
ret
addr16
inc
lret
repnz
pop
mov
lret
pop
jno
std
movsb
mov
mov
xchg
bound
ret
insl
add
imul
ja
aad
out
cmp
dec
xchg
jp
mov
cmp
ljmp
push
stos
add
loope
or
mov
daa
jmp
mov
or
mov
sbb
out
push
lahf
mov
adc
jb
push
in
ret
shrl
daa
or
es
in
nop
mov
jl
insb
movl
pop
jnp
cmp
jnp
inc
sbb
pushf
pop
mov
scas
fwait
arpl
jne
mov
cmp
add
cmp
cwtl
jle
dec
aad
push
jae
push
mov
movsl
rolb
or
jp
jne
and
gs
mov
repz
jge
mov
fxch
shl
mov
xor
sbb
push
lcall
mov
adc
pop
xor
cmpsl
cmp
shr
inc
mov
fmull
mov
ljmp
outsb
mov
push
out
cmp
shll
aam
movsb
mov
cmp
pop
mov
fistpll
bound
ficomps
rcll
dec
pop
in
pop
shrb
dec
std
daa
jmp
mov
and
inc
je
add
push
insl
inc
mov
pop
repz
xchg
mov
imul
gs
xor
ret
movaps
push
aas
adc
lcall
arpl
xchg
test
lock
pop
sbb
adc
call
cmp
pushf
mov
fisubs
and
loope
inc
fisubrl
dec
popa
clc
jnp
shrb
inc
aad
arpl
push
push
pop
in
test
cld
mov
cmp
dec
filds
les
inc
std
out
jns
pop
push
xor
jno
shll
dec
nop
sub
sbb
mov
into
dec
jmp
inc
mov
add
push
outsb
sbb
mov
add
jbe
dec
loopne
repnz
lods
and
or
add
cltd
or
in
mov
mov
jg
lods
dec
mov
scas
push
pusha
ror
push
fisttpll
sub
mov
and
or
inc
subl
fistps
imul
pop
test
xchg
mov
pop
into
sbb
movsl
shl
add
arpl
add
roll
or
or
jne
test
outsb
inc
sbb
xor
dec
push
mov
push
adc
stos
inc
jo
push
cmp
mov
mov
out
mov
sbb
mov
cmp
push
out
test
fistl
mov
rorb
pop
mov
add
lea
loope
jne
pop
cmpsb
out
push
mov
or
dec
mov
dec
aam
mov
fiaddl
dec
or
mov
pop
bound
xchg
int3
pop
lock
mov
mov
push
dec
add
push
insb
sub
scas
inc
push
dec
repz
in
cmp
clc
mov
lahf
shrb
lcall
daa
or
sub
push
xor
dec
and
outsl
mov
rcrl
mov
ds
out
add
mov
xor
int3
xchg
arpl
in
cmp
xchg
stos
pop
mov
inc
cmpsb
repz
or
inc
lods
outsb
cmp
mov
insb
xchg
or
insb
jle
inc
cmp
aad
decl
in
popf
mov
loope
mov
inc
push
int3
push
push
and
out
andb
lea
repnz
fmull
cmp
stos
repnz
call
xchg
cmp
shll
cltd
loop
mov
mov
enter
adc
xchg
lods
lods
mov
sbb
fwait
xchg
push
xchg
xchg
dec
add
nop
das
ds
icebp
scas
pop
push
lcall
sti
fwait
sub
sbbl
mov
dec
add
jo
es
jg
cli
pop
out
scas
adcb
cmc
fcomp
ffree
lds
shll
bnd
inc
lds
and
jbe
icebp
xchg
movsl
sbb
aaa
scas
and
sub
push
pop
ret
xchg
insl
divl
insl
sub
jno
cvttps2pi
incl
pushf
loope
int3
mov
test
jmp
fiadds
hlt
or
in
sub
inc
mov
dec
and
bound
int3
push
push
mov
mov
mov
cmp
pusha
scas
test
cmp
divl
fldt
pushl
add
icebp
aaa
xor
repnz
push
in
loopne
lahf
xorl
out
and
outsl
shlb
stos
aad
in
mov
push
js
outsl
mov
jge
jnp
push
pop
iret
arpl
jp
mov
mov
add
jl
add
cli
dec
mov
rcll
in
icebp
mov
das
movsl
push
mov
mov
mov
stos
jnp
mov
int3
aam
roll
xor
mov
adc
bound
fs
pop
in
rorl
mov
xor
pop
insl
add
jg
jo
push
xlat
sahf
cmp
xor
scas
lods
lock
pop
out
das
inc
mov
jbe
mov
enter
daa
push
leave
mov
hlt
pop
insl
or
outsl
xchg
add
add
int3
mov
xchg
into
gs
lods
imul
sti
stos
clc
xor
test
daa
cli
pushf
mov
lret
jb
es
flds
in
mov
imul
dec
popf
repnz
add
stos
or
inc
fcoml
jmp
fisttpll
bsr
or
push
and
push
ja
adc
insl
insl
insl
xchg
jecxz
leave
hlt
xor
inc
xchg
push
jp
adc
lock
mov
and
ds
push
or
pop
pop
xchg
lock
and
subb
scas
shll
aam
roll
shlb
xor
jbe
sbb
dec
jno
dec
fs
jl
fmul
inc
jo
sbb
popf
sbb
aad
aaa
into
xchg
clc
push
or
mov
lret
jno
dec
loope
repnz
inc
xor
mov
sbbb
in
lahf
aas
insl
jo
lock
and
xchg
mov
aam
pop
xchg
xor
data16
xor
lds
xlat
clc
sahf
mov
adc
push
and
and
or
adc
insb
fldcw
cmp
nop
mov
mov
ficomps
data16
mov
in
push
lods
cmpsb
jle
mov
fst
call
into
arpl
pop
mov
jnp
jmp
or
cld
ja
cmp
shlb
movsb
push
push
cmpsb
jns
pushf
pop
push
sti
mov
inc
cmpsl
push
adc
sbb
js
nop
cmp
xchg
jno
mov
std
mov
rclb
imul
jb
ficoml
mov
repnz
shrb
mov
sbb
pop
and
sbb
sahf
adcl
and
push
cltd
mov
sub
dec
sbb
mov
xchg
mov
loop
cmc
das
mov
es
sub
pop
pop
sahf
stc
push
inc
jns
dec
es
xchg
sub
aaa
fstps
stos
inc
scas
test
add
fildll
adc
xchg
testb
push
dec
sub
pop
ja
xchg
test
push
mov
aad
jmp
push
cltd
out
enter
fsubl
or
mov
test
pop
icebp
lahf
fwait
push
xor
sarb
stc
pop
imul
xchg
leave
mov
xor
cmp
mov
jg
mov
cmpsl
pop
xchg
mov
sti
in
test
test
xor
xlat
mov
jne
inc
jge
dec
iret
mov
rcll
repz
jl
sbb
sahf
aad
dec
bnd
bound
xor
sarl
mov
mov
mov
pop
jnp
add
dec
xchg
dec
jns
jge
dec
pop
sub
sbb
repnz
mov
mov
inc
or
popa
lret
cmp
cmp
push
sbb
out
and
pop
test
inc
sarl
out
jmp
sub
mov
shrb
popa
jae
loopne
or
xor
mov
outsl
jmp
dec
jmp
sti
jno
orb
ficoml
pop
movl
inc
int3
callw
in
xor
inc
dec
test
mov
sbb
imul
cmp
repnz
pop
sbb
lods
mov
fldenv
lock
arpl
inc
xchg
negl
rcll
xchg
jnp
jmp
inc
pushl
jb
aas
imul
adc
popa
mov
test
js
push
mov
gs
fimull
pusha
jl
lods
mov
pop
into
dec
pop
sbb
xchg
inc
pop
lahf
fs
mov
loopne
pop
stc
nop
dec
fiaddl
addl
js
shlb
xor
ret
mov
sub
mov
xor
jmp
hlt
mov
jmp
test
fcompl
mov
test
jmp
ja
cmp
sbb
out
or
add
lahf
fcomi
rorb
ja
mov
pop
rolb
jecxz
repnz
cmc
push
mov
mov
in
add
icebp
pop
hlt
sarb
fsubrl
popa
jbe
cmp
jecxz
in
and
out
lret
mov
sbb
jg
cld
or
adc
iret
loopw
push
mov
fisubs
out
cmpb
movsb
and
push
xchg
dec
mov
lods
fwait
std
cltd
dec
je
leave
lods
mov
nop
ss
pop
cmp
icebp
in
pop
mov
push
and
test
add
sbbb
xchg
or
push
mov
push
lea
dec
cmp
jns
out
sbb
lods
push
lods
mov
incb
outsb
jg
dec
loope
dec
or
xlat
enter
movsw
loope
fiadds
call
cld
sbb
xor
cld
sbb
cmp
out
test
jb
or
adcl
test
mov
jae
jg
push
jge
adc
popa
call
mov
add
pop
fs
dec
sub
loopne
js
clc
inc
ret
test
pop
cwtl
das
xchg
push
loopne
cmpsb
imulb
sarl
pop
call
jl,pt
cmpl
sbb
js
pop
aam
fwait
jp
bound
fdivrs
mov
movsl
loop
sbb
push
out
nopl
lods
jae
outsb
loope
and
ret
test
lods
cmp
mov
jmp
push
xchg
xchg
cld
out
stos
je
mov
adc
gs
shll
stos
inc
out
jl
mov
mov
stos
pop
int
jmp
and
mov
add
or
xchg
pop
and
mov
icebp
enter
inc
sbb
lds
adcl
hlt
sbb
jecxz
sub
rcl
dec
mov
push
xchg
aas
push
out
mov
mov
popf
lods
inc
sarl
data16
lret
aas
gs
out
fsts
pusha
scas
mov
les
pop
nop
imul
jge
fsub
sti
add
jg
jns
pop
adc
adc
daa
add
ret
lods
mov
addr16
push
ljmp
outsl
loop
push
adc
inc
test
sub
out
daa
sbb
scas
and
movsl
sub
fistpll
out
jle
dec
loopne
mov
cmp
xchg
mov
pop
push
lods
out
loope
js
jl
mov
adc
repnz
cmpsb
and
jne
add
add
cmpsl
leave
mov
test
xor
dec
ljmp
xchg
mov
aas
shl
inc
lret
js
jg
xchg
insl
jns
sub
rclb
in
imul
daa
pop
test
push
iret
pushf
inc
stc
fidivs
out
mov
or
in
jbe
clc
or
movsb
repnz
inc
mov
dec
fisttpll
sub
subb
cwtl
test
inc
loope
cmp
shll
pop
mov
cmp
pop
jmp
jnp
xchg
popf
xor
push
fs
xchg
xor
push
shlb
sbb
loop
lds
push
stos
and
out
rclb
pop
ja
or
xorb
rcrl
and
loopne
mov
inc
psrld
add
sbb
aas
and
bound
ret
or
cmp
into
add
cltd
sub
mov
rcll
out
jle
xor
cmp
pop
cmp
outsl
cmp
pop
sub
mov
call
lea
jb
cmp
or
adc
aaa
jno
or
je
out
cltd
mov
inc
cmpsl
jbe,pt
mov
adc
xchg
jnp
sahf
pop
push
int
fcmovb
fisubrl
cmp
cmpsb
lock
sbb
std
pop
pop
cmp
push
dec
ds
cmp
cmp
pop
in
loop
mov
or
mov
std
cltd
mov
sub
in
mov
push
xor
stc
inc
cmpsl
push
mov
test
fstps
inc
or
push
or
js
sbb
fsubrl
mov
jbe
mov
pop
or
gs
lahf
cmp
mov
popf
add
arpl
inc
pop
xchg
lods
sbb
mov
or
pop
daa
cwtl
popf
lahf
inc
cwtl
ja
or
in
adc
push
push
pop
cmp
pop
dec
loop
lea
cli
aad
add
enter
sahf
js
rorb
xchg
push
aam
adc
arpl
and
inc
adc
mov
add
jae
movb
bound
lahf
inc
rol
inc
ror
pop
test
jno
test
inc
in
test
mov
cli
mov
xlat
icebp
scas
sbb
push
ret
addr16
adc
sbb
or
loopne
movsb
pop
adc
mov
cmp
in
lea
inc
push
out
je
mov
orl
scas
cmp
daa
cmp
sbb
xchg
jp
jns
lds
inc
dec
out
das
jecxz
lcall
mov
clc
jae
push
shrb
test
cli
push
test
add
icebp
cmp
popf
ss
pop
xor
sub
lods
pop
inc
fdivrs
fimuls
pop
jg
clc
orl
out
cmp
add
adc
and
fbld
mov
xor
jb
shll
cmp
sub
pop
push
and
push
fsubl
daa
ss
add
jns
stos
popa
or
sbb
pop
xchg
jns
imul
int3
in
inc
jns
aaa
cli
jb
jmp
daa
insb
fsubrs
scas
mov
cmpsb
or
mov
pop
sub
cwtl
lret
dec
xchg
xor
cwtl
cwtl
push
fwait
call
sbb
mov
or
mov
cltd
mov
das
add
and
mov
aam
xor
pop
pop
jno
fldl
sahf
adc
ret
jl
into
lods
jecxz
jnp
or
sbb
into
jge
int
push
rorl
push
sbb
ljmp
mov
or
lea
andl
push
notb
popf
sti
data16
push
pop
xchg
push
out
dec
mov
jno
aam
mov
jle
icebp
mov
ret
loop
jl
pushf
xchg
mov
mov
inc
mov
mulb
add
icebp
movsl
out
cli
xchg
aaa
xchg
mov
icebp
xor
push
stos
loop
cmpsb
das
inc
add
fisubrs
repz
outsl
and
jb
repz
pop
sbb
mov
mov
nop
jle
outsb
inc
mov
insb
aad
popa
pop
push
scas
sbb
out
fdivs
sarl
adc
loop
mov
cs
jg
in
and
popf
out
dec
sbb
movsb
jnp
adc
mov
mov
mov
add
pushf
mov
in
pusha
mov
pop
push
pop
mov
rcr
adc
je
pop
lret
lods
scas
js
adcl
hlt
push
lods
or
mov
push
test
cmpl
in
pop
pop
dec
fldl
jno
xchg
mov
pop
mov
or
xchg
xor
aaa
push
sub
imul
or
repnz
bound
xor
fcoms
test
dec
sub
pop
xor
cmp
call
std
sub
out
dec
inc
jmp
push
les
push
divb
jno
xchg
sub
loope
cmp
insb
inc
ficomps
xchg
gs
dec
mov
push
push
mov
das
jb
insb
movsb
dec
jo
xor
flds
jle
dec
ljmp
mov
rcrb
ret
xor
gs
pop
shr
xorl
cmpsb
mov
cli
stc
sbb
adcb
mov
xor
lret
inc
push
rorb
loope
lret
loop
pop
shlb
jp
xchg
ret
sub
xchg
lods
iret
inc
pop
ss
push
adc
ds
std
push
cmpsb
aaa
iret
jne
pop
fdiv
dec
pop
ja
lea
add
push
call
cmpsl
dec
jge
mov
aam
cmp
and
lahf
mov
adc
in
out
cli
mov
adc
adc
mov
jle
fldt
mov
adc
sbb
add
repnz
dec
dec
and
sti
in
stos
ret
shr
scas
jp
ss
sbb
mov
fwait
jb
rcll
into
js
nop
outsl
scas
repnz
movsl
pop
test
lcall
mov
or
sbb
pop
mov
dec
push
orb
ret
mov
cld
xchg
cmpsb
jp
adc
or
aas
insl
jae
test
andb
pop
in
incb
jg
cwtl
lcall
mov
arpl
shll
and
jne
jmp
pop
or
int3
xchg
sub
in
stos
or
inc
sbb
cld
mov
das
imul
sbb
push
jp
pop
inc
mov
je
imul
shlb
scas
push
pop
in
jbe
das
inc
xor
jle
imul
imulb
mov
cwtl
cld
mov
sbb
imul
haddps
push
cmp
setno
inc
jne
adc
adc
cmp
mov
pop
stc
out
das
icebp
call
mov
push
out
sbb
sti
dec
fistpll
call
or
lret
sbb
lods
popa
popa
movsb
shlb
or
sbbb
xor
mov
imul
adc
iret
xor
ret
fisubrl
popa
test
push
sub
dec
push
lods
push
mov
pop
test
jl
ficoml
mov
not
and
cmpb
dec
cmpsb
nop
sub
and
hlt
cmp
mov
sub
cmpsl
sub
inc
jno
mov
orl
imul
jecxz
jmp
stc
add
add
and
inc
mov
loop
lcall
loopne
cli
inc
mov
push
sbb
cli
mov
inc
stos
ret
ret
pop
hlt
int3
pop
cmc
movsb
lahf
loope
rol
jnp
mov
inc
cli
mov
or
xchg
xor
push
sbb
xor
outsl
test
push
mov
daa
ds
popa
sub
jmp
rep
add
mov
push
mov
stos
pushf
cmc
and
jno
xchg
inc
test
cltd
or
fdivrs
lds
scas
add
sbb
out
pop
outsb
test
fdivl
push
push
add
mov
jecxz
outsb
lahf
cmp
imul
int3
outsl
daa
xchg
aas
or
movsl
push
fsubl
out
rcrb
xor
out
push
inc
rolb
or
sbb
imul
test
roll
mov
cltd
inc
popf
lods
jae
loop
mov
cmp
cmp
lret
loop
add
mov
and
fbstp
add
mov
out
xacquire
es
stc
iret
pop
xchg
scas
mov
aam
mov
sub
and
mov
ficoml
sbb
lds
int3
dec
loope
pop
sub
rclb
call
fyl2x
test
jmp
adc
mov
cmc
mull
jnp
lret
jb
les
and
mov
inc
sbb
or
nop
mov
pop
xchg
and
inc
or
mov
and
xlat
inc
cli
fmull
cmp
cmp
jl
sbb
sub
fsubr
js
mov
xor
aas
shrl
mov
push
dec
pop
push
xor
cmp
sarl
push
lcall
cmp
sub
daa
xchg
pop
repz
lds
mov
push
icebp
or
or
pop
lahf
loope
add
sub
inc
fisubrs
push
push
fnstenv
lds
xor
push
or
cwtl
ret
adc
xor
xchg
in
xor
pop
mov
pop
sbb
push
fbstp
aad
iret
jnp
out
in
pop
std
or
and
mov
daa
mov
pop
mov
dec
ss
aas
sbb
iret
out
negl
loop
sahf
repz
aaa
fldl2t
xchg
push
jg
into
out
add
in
stos
in
jge
cmp
sahf
insl
inc
out
aaa
sti
and
jge
dec
adc
dec
pop
jno
fstps
popf
nop
cmp
or
movsl
push
xchg
jne
pop
and
repnz
iret
insb
cltd
popa
test
jmp
adc
jno
fwait
xchg
sbb
stc
ss
sbb
mov
les
dec
pop
mov
lea
mov
stos
add
dec
xor
out
sbb
sahf
stos
xchg
xor
mov
inc
mov
clc
adc
es
mov
cmpsb
jns
fsubrp
jbe
pop
cmp
mov
pop
nop
mov
frstpm(287
shlb
adc
and
pushf
sar
pushf
xor
pop
xchg
loop
aas
push
mov
add
insb
mov
insl
mov
incb
andb
cwtl
subl
iret
adcb
insl
and
loopne
out
out
fsubr
xor
test
cltd
shll
pop
xorl
into
shll
int3
mov
push
adc
inc
dec
mov
std
test
xchg
adc
in
aas
or
jecxz
jge
orb
mov
js
mov
outsl
push
push
fistl
nop
mov
sbb
add
loop
sbb
jbe
iret
dec
aam
cmp
gs
and
out
and
jbe
add
stc
adc
inc
add
jno
loope
dec
dec
pop
and
xor
dec
jae
xchg
add
xchg
test
lods
repz
adc
out
enter
sub
cmp
add
scas
or
sub
fwait
xchg
and
ljmp
call
push
add
divps
adc
inc
pop
lods
mov
jno
repnz
xchg
add
repz
xchg
ljmp
jge
inc
enter
clc
and
ljmp
inc
sbb
cli
dec
popf
aas
mov
insl
ret
inc
cmpsl
dec
loop
shl
sbb
xlat
call
pop
lcall
test
in
xchg
scas
xchg
cmp
stos
loop
xor
rcrb
test
xor
orb
cmpsb
adc
lock
int3
stos
call
loop
sahf
xor
loopne
out
je
in
pop
xchg
es
xlat
mov
int3
mov
jge
sbb
scas
push
mov
xor
push
jmp
sub
jns
pop
and
push
aas
insl
in
in
push
and
push
mov
fstl
mov
roll
icebp
cmp
xor
mov
xchg
mov
dec
mov
pop
ljmp
inc
test
jp
pop
stos
push
mov
xor
ret
les
test
test
loop
pop
cmp
cmp
pop
fiaddl
cmpb
pop
movsl
daa
inc
fists
pcmpgtd
adc
lret
test
pop
mov
push
mov
cmp
arpl
mov
cmp
and
and
adc
mov
das
adc
dec
rcrl
divb
lds
mov
cli
stos
xor
jp
lds
divb
cwtl
popf
pop
and
cmpsl
ss
lods
dec
sbb
add
adc
mov
push
pop
jecxz
jo
cmpsb
loop
jl
repz
ds
jo
dec
mov
mov
dec
dec
pop
mov
mov
mov
gs
adc
enter
push
jge
in
outsl
dec
push
lret
mov
sub
dec
push
aaa
add
outsb
test
mov
das
les
xchg
and
test
xor
adc
cmpsl
icebp
addr16
fidivrl
out
or
pop
fildl
add
add
and
les
mov
jge
sub
add
in
in
repnz
mov
fildll
jecxz
push
jmp
jmp
dec
mov
int3
cs
push
in
insb
or
idivb
and
sti
cwtl
and
negl
xor
lahf
mov
popf
cmp
xlat
es
clc
sti
push
mov
fwait
shll
mov
in
jmp
mov
mov
jno
xor
and
fldenv
push
mov
push
rol
ss
cs
jg
cmp
imul
xchg
ficomps
dec
xchg
dec
dec
mov
test
loopne
mov
add
data16
out
arpl
shll
enter
mov
cwtl
sahf
inc
inc
pop
mov
pcmpgtw
insb
jno
xor
adc
sub
adc
mov
lret
jmp
dec
test
scas
fcom
sbbb
push
dec
add
bound
push
and
xor
fisttpll
jo
jne
imul
mov
shrb
clc
pushf
jb
mov
les
dec
and
push
and
push
lods
lret
push
test
es
stc
nop
mov
sahf
lcall
add
jns
je
test
repz
pop
fistps
lret
lahf
data16
sub
pop
out
cwtl
inc
pop
loop
adc
iret
mov
icebp
mov
dec
xor
mov
adc
leave
pushl
inc
push
inc
decl
and
mov
sbb
xchg
out
dec
cmp
jb
mov
adc
ss
cli
aad
mov
adc
popf
int
cmp
mov
mov
push
adc
xor
dec
push
out
inc
icebp
or
sub
mov
add
negl
stos
xor
and
repnz
movsl
ja
adc
mov
push
loope
clc
aad
push
je
ret
cmp
js
mov
adc
pop
pop
mov
push
or
fsubs
iret
mov
mov
mov
imul
out
mov
repnz
ja
adc
jg
clc
cmp
bound
icebp
adc
push
sub
push
mov
lret
je
out
mov
or
sti
loope
daa
testl
stos
mov
lret
jl
sti
mov
pop
in
mov
and
jb
test
ds
push
jno
jae
aam
ficoml
lock
or
adc
insl
xchg
daa
dec
fdivs
js
sarb
jae
cmp
or
insl
jnp
and
push
rol
and
mov
pop
pop
jns
cmp
or
mov
pop
adc
sub
fwait
rorl
cs
pop
cmc
test
pop
jl
cmp
cmp
cmp
imul
shrl
pop
addr16
add
fidivrs
xor
sub
shrb
fsts
addb
int3
cmpsl
test
outsb
cli
pushf
pop
inc
vpsadbw
xor
leave
sub
stos
out
cmpsl
sub
dec
js
jns
loope,pt
push
jecxz
cmp
dec
pop
sub
ja
ret
mov
ljmp
int3
sbb
setns
inc
inc
pusha
cmpb
enter
rclb
add
cmp
nop
pop
test
mov
xchg
sub
outsb
lds
jbe
dec
cwtl
inc
pop
repz
iret
and
jp
dec
pop
test
sbb
push
xor
loop
pop
enterw
and
out
sbb
into
lock
mov
faddp
loopne
lods
ds
js
jnp
jp
dec
mov
mov
pop
lret
cmp
cmp
push
ljmp
rcrl
and
fstpl
xor
xchg
adc
inc
sbb
pop
mov
ret
pop
in
xlat
or
movsl
leave
aad
or
out
jno
sub
add
sahf
mov
mov
cmpsb
xor
inc
jmp
int
popa
out
xor
and
push
aas
mov
incb
mov
int3
mov
dec
xchg
sub
std
xor
push
jl
add
xchg
cli
inc
repz
test
add
cmp
lods
lcall
inc
push
jns
sub
and
fcomps
inc
mov
cmpsl
std
jae
mov
adc
jle
out
xchg
fidivrs
adc
xlat
xor
lret
cmp
and
popa
test
xchg
push
test
clc
push
jg
jo
scas
mov
in
sbbl
and
or
or
mov
mov
mov
pop
xor
imul
sub
daa
fldl2t
cld
mov
andl
int3
jle
sbb
jge
jnp
mov
xchg
outsb
adc
testb
sbb
add
sub
sbb
xchg
add
into
jae
xor
jl
lret
stos
cwtl
sub
out
mov
ljmp
test
cld
sub
lods
mov
adc
mov
mov
imul
hlt
data16
sub
shrb
adc
add
inc
xchg
add
arpl
jp
xor
and
sbb
pop
ljmp
jno
in
lret
mov
into
cli
stc
nop
lock
loopne
inc
xor
bound
jmp
cmp
ficomps
pop
int
nop
adc
xchg
push
xor
andl
int
out
inc
iret
inc
adc
xor
popa
lret
fmull
daa
cmp
pop
mov
cwtl
xlat
cmc
add
cmp
sahf
or
outsl
adc
sbb
lock
jb
ss
inc
fldt
iret
cmc
add
jnp
add
cmp
inc
sbb
push
sub
push
fbstp
cwtl
loope
gs
popf
incb
and
pop
and
mov
fmull
test
jmp
push
push
jo
dec
imul
stos
or
mov
inc
sbb
jne
popf
cmp
or
test
int
hlt
push
and
jb
jbe
mov
stos
aad
call
mov
jp
sbb
sub
cmp
pop
imul
xorl
lret
xchg
stos
sbb
sahf
cs
or
cmpsb
cmp
mov
mov
insb
mov
pop
xor
fsubl
xor
pop
add
cmp
push
push
jge
fwait
sti
jmp
mov
xlat
popf
nop
push
push
clc
mov
notl
rcrb
fists
sub
mov
inc
cmp
je
sbb
sbb
fbstp
test
push
sti
cs
inc
xor
jecxz
mov
test
push
and
dec
movsb
jae
jge
mov
sub
mov
mov
mov
mov
pop
loopne
outsb
outsb
add
or
or
push
mov
cmp
imul
in
lods
rol
xchg
jo
push
test
mov
je
aad
jl
mov
bnd
mov
in
xchg
push
out
out
sbb
lds
mov
mov
jecxz
ljmp
pop
adc
icebp
dec
push
stos
xchg
cs
add
xor
xlat
xor
dec
sub
mov
cmp
cmpl
sub
add
mov
adc
lods
inc
cmpsl
and
push
or
xchg
scas
into
test
les
mov
popa
xchg
popa
jbe
mov
aaa
inc
call
cmp
ret
out
mov
mov
jae
add
nop
xor
addr16
popf
sub
fstl
jl
stos
inc
xor
xchg
mov
mov
imul
dec
arpl
mov
je
push
scas
fwait
or
pusha
xor
or
pop
sub
ja
push
cmp
adc
push
fdivrl
call
and
cmp
ret
ret
xchg
sub
adc
sbb
orb
jg
pop
lea
enter
jnp
inc
lods
jno
add
jp
hlt
mov
stc
adc
adc
dec
shlb
dec
xchg
imul
enter
icebp
in
les
inc
push
adc
aad
xchg
xor
cmp
inc
add
test
add
cmpsl
lcall
lods
adc
add
stos
jns
repnz
jbe
loop
adc
int
scas
mov
dec
pop
dec
cltd
cmpsb
lock
ret
mov
loop
iret
adc
lea
repz
xor
add
jl
and
pop
xchg
mov
std
and
and
push
cmp
add
mov
dec
inc
mov
int
pop
fisttpll
lret
loop
xor
popf
jmp
push
mov
fdiv
jb
mov
lods
mov
popf
arpl
xchg
mov
fdivrp
cltd
stc
out
data16
je
adc
repnz
lcall
mov
cmp
outsb
pushf
inc
stc
icebp
push
pop
mov
je
xor
jns
cmc
cwtl
xchg
repz
rolb
jge
xor
popa
test
pop
aam
pop
mov
in
cmp
jmp
sarb
jmp
dec
add
in
ret
shrl
test
out
mov
jle
pop
data16
xchg
iret
loop
pop
mov
or
push
je
jnp
pusha
jno
stos
mov
cmpsl
jge
xlat
aad
or
popa
push
roll
test
loope
fs
stos
and
sti
fdivl
filds
jg
xchg
inc
stos
xchg
sbb
adc
pop
push
xchg
sbb
mov
xchg
pusha
aaa
mov
enter
pop
ret
lret
pop
movsb
pop
imul
jns
test
test
and
dec
fs
out
jecxz
push
das
dec
jb
jle
lea
pop
call
repz
inc
or
stos
adc
sub
rsqrtps
xor
das
cld
unpckhps
xorb
andb
pop
mov
push
adc
je
cmpsl
ret
push
sar
mov
btc
pop
cmp
lods
adc
jecxz
jne
pop
push
xchg
sbb
out
cmp
in
pop
mov
push
jmp
out
popf
sbb
sub
repnz
sbbb
pop
jno
xor
das
mov
mov
das
cwtl
or
dec
bound
add
sbb
mov
shll
cmpsb
mov
pop
jecxz
lea
daa
or
jbe
int
mov
shr
inc
decb
sub
lret
mov
xchg
push
xor
pop
xor
push
xchg
add
hlt
mov
push
popa
xor
lea
imul
cs
push
sub
ret
push
cmpsl
mov
push
and
dec
rcrl
jl,pt
sub
jbe
sbb
fisubl
adc
adc
shl
insb
pop
movsb
popf
adc
aaa
cld
mov
xor
test
repnz
pop
jg
loope
jns
repz
mulb
lcall
adc
adc
call
popl
rcll
out
sub
cld
pop
pop
cli
jb
test
add
nop
and
sti
dec
int3
mov
push
in
adc
xchg
add
mov
mov
pop
dec
and
mov
ficomps
rclb
or
jns
inc
cwtl
icebp
inc
jmp
cmp
scas
test
mov
or
lahf
stc
push
add
cmp
inc
dec
cli
push
mov
aam
shll
mov
outsl
movhlps
into
lret
cld
mov
dec
xor
daa
mov
lcall
popf
and
mov
xor
idivl
mov
rcrl
push
jg
add
mov
and
out
enter
inc
in
mov
and
test
push
insl
mov
in
outsb
sbb
adc
dec
loopne
mov
cmp
inc
pop
test
xor
push
das
imul
sbb
jl
cmp
scas
mov
shrb
movsb
pop
add
or
sbb
ja
cmp
lcall
dec
push
mov
scas
lods
notb
ljmp
mov
std
mov
fdivl
repnz
push
adc
lret
vsubpd
leave
cmp
cmp
push
test
in
test
pushf
mov
mov
andb
shrl
mov
repnz
adc
sub
mov
repz
xor
cltd
clc
ds
test
insb
arpl
jle
sbb
add
mov
push
ljmp
out
mov
icebp
popf
xchg
sub
enter
andl
fs
inc
and
push
xchg
cmp
rep
daa
sbb
dec
pop
cmp
mov
insb
xchg
dec
pop
jle
call
sarb
ljmp
jno
sbb
js
add
into
loope
and
dec
out
das
and
ss
nop
push
in
ret
and
mov
popa
iret
mov
jl
mov
ret
xchg
sub
jbe
mov
push
add
inc
shr
cmpsb
adc
data16
push
push
dec
pusha
pop
push
dec
inc
xlat
jg
mov
jae
into
stos
cmp
insb
or
psubq
sbb
push
nop
into
push
push
stos
xor
loopne
dec
and
popa
clc
and
ret
hlt
mov
mov
movl
imul
xor
and
adc
test
or
in
mov
dec
je
jg
jnp
bound
scas
mov
sbb
roll
fsts
je
push
adc
and
mov
or
fnstenv
das
scas
dec
lea
mov
dec
cmp
stos
add
pop
cli
ret
jl
lds
pop
icebp
dec
mov
sub
jb
and
xchg
out
and
fs
mov
mov
pop
int3
mov
fld
mov
mov
mov
outsl
shrb
mov
es
jge
lea
fsubrs
or
sbbl
xchg
push
pop
add
fs
jb
test
inc
cmpsb
xchg
std
mov
cmp
mov
fnstenv
int
ret
sbb
add
int
cs
stos
dec
rcrl
fbld
add
xchg
ret
repnz
push
mov
dec
call
or
addr16
movsb
mov
xor
call
out
sbb
xchg
sbb
fildl
mov
push
mov
sbb
test
bound
adc
imul
lcall
ljmp
push
mov
xchg
add
fstpt
sbb
cmc
push
jnp
pop
add
lret
mov
insl
aad
ret
fsubs
or
out
xchg
jg
stc
popf
aaa
mov
push
insb
mov
loopne
push
fsts
sbb
or
fidivl
push
fucomi
xor
inc
test
mov
icebp
cmp
pop
inc
arpl
aam
adc
jnp
sub
inc
enter
adc
or
xchg
leave
out
mov
pusha
std
stos
scas
add
sahf
jp
push
sub
mov
inc
inc
push
adc
inc
loopne
mov
daa
loop
addr16
inc
int3
fs
push
and
ja
movsl
xchg
dec
sbb
ficomps
jecxz
mov
outsb
and
movsl
fimull
sbb
and
adc
sub
sub
or
push
cwtl
sub
xchg
jae
or
cmp
xor
popa
in
mov
pusha
sti
pop
cmp
adc
add
cmp
call
in
mov
out
xor
adc
mov
gs
sbb
sbb
mov
pop
test
mov
test
stos
jge
bound
dec
xchg
fdiv
xor
shll
jp
mov
cmpsl
test
movsb
or
mov
push
insl
or
daa
mov
bound
xchg
push
mov
imul
jbe
dec
cmp
rolb
and
sti
inc
push
sub
jmp
movsb
mov
push
aam
andnps
xor
loop
int
cmc
mov
lock
xor
jmp
jge
mov
mov
mov
mov
repnz
jecxz
sbb
add
jmp
insl
shll
xchg
in
ret
lods
push
mov
jle
fsubp
push
scas
dec
and
adc
xor
lret
roll
inc
push
dec
inc
or
cmp
add
xchg
loopne
aad
cmovb
popf
fwait
and
push
mov
rcrb
arpl
int
mov
cmp
xlat
lock
mov
mov
call
or
cmp
pop
daa
loop
and
outsl
fsubrl
add
jle
pop
mov
scas
ds
int
sub
sub
loopne
popl
scas
clc
shll
ja
jno
xor
pop
push
pop
subl
ret
cwtl
mov
pop
test
mov
cs
ret
xchg
mov
mov
push
lods
or
cmpsl
inc
stos
imul
daa
sbb
fimull
aad
and
cmpl
test
iret
fdivs
call
sub
repnz
sbb
xchg
mov
in
jne
mov
xchg
stos
test
mov
lahf
jg
xor
sub
int
xchg
mov
mov
cmp
adc
ds
mov
fidivrs
pop
clc
jl
sbb
adc
jbe
or
dec
or
std
or
pop
jge
and
popf
adc
decb
fcoml
outsl
arpl
loopne
stos
test
cmc
pushf
or
xchg
xor
inc
jo
xchg
outsl
aad
sub
jecxz
mov
ja
sub
shrl
push
and
scas
lret
stc
or
pop
imul
lods
mov
fiadds
add
cmp
or
faddp
aas
mov
loop,pn
jb
out
adc
ja
xchg
sbb
test
out
sub
scas
fisubl
jecxz
sub
dec
scas
add
inc
pusha
jne
fs
mov
cltd
sub
pop
jp
aam
dec
push
inc
or
ds
rol
cmp
clc
lret
dec
lds
xor
xor
fwait
cmpsl
jbe
jmp
inc
mov
fcmovnb
adc
push
cmp
or
scas
dec
push
push
sbb
enter
push
and
jae
and
scas
call
sbb
jmp
sbb
mov
mov
lods
pop
es
int
mov
dec
cmp
dec
sub
pushf
push
popa
adc
sti
cmpsl
sub
lahf
lods
push
mov
rcrl
pop
or
xor
xchg
sbb
shrb
sbb
pop
imull
sbb
mov
stos
cmp
ficoms
xchg
mov
pop
idivb
pop
xor
jge
adc
shrl
scas
push
sub
add
inc
out
imul
mov
inc
loope
cltd
mov
out
leave
sti
lods
add
mov
ret
outsb
pushf
sub
into
clc
pop
xor
in
xchg
mov
mov
jecxz
mov
inc
outsb
stos
xchg
clc
or
int3
cmc
hlt
or
lcall
dec
lret
addr16
out
sub
cmp
push
dec
pusha
inc
mov
dec
dec
push
xor
xchg
push
roll
dec
pop
pop
rcrl
cli
les
std
jo
jmp
mov
or
dec
test
iret
and
lea
sar
mov
push
cs
push
popa
out
cs
add
mov
js
adc
jbe
pop
xchg
dec
call
cmp
es
mov
dec
cmpsl
xor
aaa
stos
mov
push
or
dec
arpl
push
sub
aas
xchg
inc
push
arpl
fbstp
jno
xor
test
push
data16
jg
mov
push
je
mov
adc
inc
and
or
stos
xchg
push
lcall
jno
hlt
mov
mov
cs
xchg
dec
dec
jae
dec
ret
lahf
arpl
jno
xchg
xor
sbb
jns
xchg
xor
imul
inc
loopne
test
and
jb
in
cs
push
fidivl
ljmp
mov
testb
xor
hlt
push
scas
aad
xor
jnp
pop
pushw
lret
shl
mov
sbb
int
jp
es
and
xchg
lret
bound
dec
and
jl
xor
sub
popf
and
out
test
adc
xor
cmpsb
fwait
ss
cmp
jge
mov
mov
popa
pusha
lods
sbbl
mov
xor
inc
mov
pop
mov
movsl
fsubr
lods
pop
xlat
fmulp
push
push
jmp
je
aaa
popa
clc
clc
in
sub
dec
xor
mov
push
in
stos
pop
aaa
into
inc
jbe
jbe
and
test
rorl
or
iret
mov
sti
insb
jno,pt
and
pop
lea
jl
and
jns
test
lahf
sbb
ja
sub
xchg
dec
iret
dec
pop
in
lock
es
adc
mov
jmp
adc
xchg
cwtl
test
xchg
and
dec
cmp
sbb
das
or
mov
fsubr
dec
mov
pop
sbb
in
cmp
lea
mov
stos
hlt
cmp
in
leave
sbb
mov
pop
mov
mov
fildll
lods
mov
jmp
sub
or
in
push
or
dec
les
xor
in
ds
cmp
dec
rorb
or
pop
cmp
xchg
movb
and
cmpsl
idivb
inc
inc
icebp
cmp
cmc
lea
aaa
push
imul
mov
jl
jb
mov
mov
pop
pop
imul
in
sti
push
mov
xor
mov
imul
movsb
aas
xchg
ficompl
add
insl
sub
push
xchg
inc
out
punpcklwd
test
and
add
push
popa
insl
mov
xchg
adc
sarl
xor
popf
pop
aam
sti
test
jmp
js
les
xlat
cs
das
daa
inc
mov
sbb
jnp
fmul
movsb
or
repnz
adc
repnz
into
and
fistl
stc
test
insl
je
mov
or
or
int
xchg
ret
mov
outsb
sbb
xchg
lods
jge
repz
adc
jmp
adc
test
jb
cmc
jecxz
idivl
in
lds
mov
das
test
ret
pop
arpl
mov
push
stc
sub
jb
les
and
pop
jl
repnz
pop
les
test
push
and
pop
inc
mov
xchg
mov
ret
pop
subl
add
fdivr
rorb
out
fildll
subl
fiadds
es
xchg
push
push
add
mov
xor
lock
sub
or
outsb
shlb
test
scas
push
xor
pop
pushf
daa
mov
jo
mov
sbb
or
jno
movsl
sbb
dec
mov
push
fisubs
cwtl
mov
or
mov
aad
rorl
out
daa
mov
gs
ds
fdiv
arpl
cmp
testl
or
cwtl
push
inc
cltd
mov
dec
jb
loope
xchg
adc
stc
and
cmp
jle
mov
popf
outsl
pop
xor
subb
adc
or
jg
lcall
xor
mov
aas
jp
push
add
lahf
shl
rorb
sbb
xor
xor
mov
fidivrl
mov
xor
fidivs
clc
nop
add
pop
scas
fldt
lods
jg
cld
xor
fisubs
cs
out
sahf
scas
mov
test
int
sbb
roll
fs
mov
mov
lods
add
sub
popf
sbb
push
ret
jmp
loopne
pop
and
and
push
icebp
mov
bound
inc
or
mov
push
jo
rcrb
or
cmp
sub
adc
dec
mov
cmp
lcall
notb
mov
jne
inc
lcall
cmc
shrd
repz
testb
lret
in
pop
mov
lahf
imul
mov
mov
rolb
mov
adc
sub
push
call
dec
cmp
mov
mov
mov
push
or
pop
incl
out
dec
dec
clc
icebp
lods
mov
cmp
popa
addl
es
sub
inc
arpl
xor
pop
xor
dec
mov
js
movsl
mov
stos
push
test
jae
pushl
cwtl
cld
push
mov
cmpsb
mov
add
or
mov
mov
insl
dec
pop
push
and
mov
mov
popa
and
add
push
mov
enter
bound
mov
daa
sbb
xchg
iret
sub
mov
lret
adc
lret
lods
cmp
pop
adc
mov
pop
cmp
cmpsl
fdivl
hlt
xor
loop
cli
inc
scas
mov
mov
pusha
inc
xchg
sbb
cmp
ljmp
adc
sub
pushf
pop
decl
pop
push
mov
sbbl
jns
daa
push
sbb
cmp
arpl
fistpll
xlat
mov
add
ret
gs
adc
dec
mov
in
pop
fbstp
sub
sbb
pop
mov
mov
cld
adc
stos
xor
fsubl
outsl
xchg
stos
lods
jmp
push
xorl
arpl
movsb
loopne
es
jle
xchg
lods
roll
movb
push
mov
xchg
scas
sbb
adc
xchg
iret
mov
add
pop
and
jo
out
xchg
push
xchg
mov
das
pop
outsl
jnp
dec
dec
jnp
lcall
and
push
repz
jle
dec
addl
push
add
in
imul
pop
jno
add
loopne
sbb
test
mov
push
or
ret
or
push
add
in
sarb
push
and
xchg
sbb
sub
mov
cmpsb
imul
or
dec
and
push
mov
or
idivb
push
pop
ljmp
popa
icebp
pop
filds
popa
int
shll
stos
mov
stos
pop
and
fs
sbb
cmp
rorb
jnp
push
andl
xchg
mov
or
insl
push
stc
outsl
divl
or
or
enter
add
outsl
incl
mov
bound
cmp
cmp
sub
inc
out
lcall
daa
out
movups
dec
mov
outsb
inc
popf
jmp
mov
mov
outsb
add
lds
hlt
pop
cmpsl
xchg
fisubs
sub
divb
aas
cli
xchg
sub
mov
cmp
or
inc
pushf
jae
inc
mov
jmp
fadds
adc
or
xchg
xor
dec
mov
fstpt
scas
cmp
loope
out
sti
cmpsl
jno
test
cmp
out
sub
fimull
push
mov
lcall
scas
or
lock
inc
jae
cs
bound
cmp
pop
pop
ds
jmp
dec
mov
jecxz
insl
lods
mov
jle
jl
ja
out
add
sbb
xor
in
xor
addb
loope
pop
pop
jg
sub
sti
xchg
sub
and
lods
out
test
mov
xchg
mov
dec
xor
arpl
popf
push
int3
sbb
dec
lds
fimull
mov
aad
push
iret
and
sbb
popa
xchg
lahf
fwait
mov
loop
jg
xchg
mov
sub
aaa
push
fwait
dec
push
lods
mov
add
int3
addr16
lcall
cmp
fildll
jno
test
inc
pop
ja
sbb
add
or
and
dec
aas
vmovddup
scas
inc
xchg
movsbl
jecxz
lret
fidivl
faddl
mov
paddb
stos
mov
adc
add
or
adc
js
loope
cltd
dec
or
shlb
aam
mov
jo
sub
push
aad
mov
xchg
clc
sub
pop
scas
in
subb
add
adc
fs
push
fsincos
test
push
pop
int
add
inc
movsb
bnd
inc
xlat
aad
cwtl
mov
imul
inc
sbb
mov
mov
xor
fists
test
out
adc
es
aaa
dec
in
adc
lods
mov
mov
mov
or
lds
adc
testb
daa
sti
or
push
sub
lods
shl
sub
push
out
insb
mov
jp
aad
xor
mov
mov
fadds
mov
push
fdivl
cld
daa
cmp
dec
movsl
xor
sbb
in
sub
call
or
xchg
cmp
and
xchg
dec
popa
leave
or
leave
aad
nop
mov
ficoms
lret
sub
add
mov
xlat
xchg
xchg
test
mov
int
rcrb
cmc
rcll
and
adc
in
fs
jns
xor
pop
mov
push
or
jle
xchg
inc
add
add
rcll
fbstp
mov
mov
aam
cmp
mov
insb
sub
pop
inc
fsubs
jle
bound
outsb
lahf
push
xor
leave
daa
outsl
sti
sbb
inc
add
dec
xor
js
aad
lock
xor
adc
enter
test
lds
push
js
ffreep
pop
inc
push
nop
push
out
fwait
jb
jo
test
pop
stc
test
mov
stos
mov
insl
test
loope
sahf
pop
xchg
sarl
cmp
addr16
xchg
call
aas
stc
dec
stc
dec
repnz
test
sarb
inc
lret
test
adc
push
add
sbb
leave
fwait
push
jns
je
jno
xchg
pop
movsl
push
aaa
push
mov
or
mov
add
stc
mov
test
cmp
xchg
pop
xchg
imul
dec
sub
jl
jb
pushl
mov
lahf
in
pop
adc
aaa
mov
mov
and
fs
sub
fadds
das
xchg
pop
dec
cwtl
repnz
mov
push
cltd
lret
push
xchg
cmpsl
ficoms
inc
pushf
lret
out
jg
jae
mov
call
aas
add
cmp
shr
dec
cld
push
popf
mov
popa
call
lret
xchg
and
xor
add
insb
stos
cmp
icebp
add
or
or
adc
push
dec
pop
loope
lret
mov
mov
add
pop
stc
nop
jo
cmc
push
out
mov
xchg
sti
fwait
inc
cltd
pop
out
daa
cltd
test
subl
dec
or
cltd
lret
testl
cltd
xor
jns
sahf
push
scas
out
or
xchg
mov
outsl
push
mov
es
and
pushf
cli
pop
jb
xor
sti
mov
icebp
ret
jnp
psrad
mov
add
rorl
dec
movsl
pop
out
fadds
jmp
push
xor
pop
jge
test
jno
ficoms
push
in
dec
mov
jae
sbb
shll
xlat
mov
fisubs
aam
and
pop
xchg
mov
jbe
hlt
xchg
decb
std
adc
pop
fs
lock
inc
inc
jno
ja
xchg
mov
lock
lock
lods
cmp
dec
repnz
pop
sub
aad
movsb
add
push
sub
xchg
xchg
out
xchg
nop
daa
into
mov
sub
das
test
jnp
cmp
pop
shr
xor
or
cli
cmp
pop
adc
jbe
dec
test
mov
xchg
mov
pop
xor
dec
int3
pusha
add
mov
popf
push
and
mov
mov
lods
mov
xor
out
mov
test
fistpll
es
je
push
hlt
js
test
lahf
fprem
cmpsl
inc
xor
adcl
data16
negl
jns
mov
ds
xchg
xchg
dec
add
cmpsl
subl
sarb
xor
data16
cmp
xchg
int3
sub
cmp
je
call
jmp
nop
in
or
cltd
mov
mov
pop
jge
dec
loop
cmp
jecxz
sbb
ss
xchg
jnp
rcl
loop
int3
sub
repz
out
sub
sti
inc
inc
les
lds
cltd
mov
mov
dec
rorb
sub
clc
fdivrs
inc
cmpsl
rorl
addr16
das
inc
fisttpll
ds
jp
loopne
out
fwait
jb
push
cmp
mov
xchg
idivb
dec
inc
iret
jns
ret
cmpsl
mov
or
fidivs
mov
les
hlt
fildll
or
jno
add
fs
not
into
pop
xchg
pop
aas
mov
pop
push
push
int3
in
je
lock
mov
js
inc
imul
cmpsl
leave
in
jae
jecxz
out
cmpsb
mov
jg
roll
mov
jmp
inc
push
mov
push
icebp
adc
push
cmp
in
inc
push
fsub
push
stc
ret
cmp
xor
add
jb
pop
pop
mov
push
shrb
test
xchg
sub
enter
outsl
add
fimuls
fsubrl
mov
das
mov
mov
push
and
stos
enter
push
test
sub
jp
pop
ljmp
and
mov
xor
xchg
sbb
repnz
clc
lds
jnp
outsb
jecxz
mov
push
inc
push
aas
gs
inc
loope
pusha
fisttps
adc
sub
test
push
pop
lcall
insl
int
cmp
xchg
dec
xor
lret
and
push
iret
and
mov
ja
into
xchg
stc
dec
sub
push
adc
aam
jb
insl
adc
scas
mov
cmc
inc
mov
xchg
rcl
jg
cmc
popa
jmp
mov
mov
sub
push
cwtl
orb
or
lods
and
cld
outsb
xchg
aaa
stos
adc
xor
xchg
mov
mov
loopne
push
lock
push
push
push
jb
mov
dec
xor
jp
lea
sbbl
pushf
sub
loopne
pop
dec
mov
cld
push
add
rcr
xor
mov
mov
je
adc
mov
jge
or
es
call
aas
repnz
out
or
xchg
mov
addr16
dec
sbb
cmc
lea
xor
dec
add
sub
shlb
in
mov
lods
fidivrs
cli
es
jb
notb
sbb
pop
mov
cs
mov
pop
mov
add
mov
sarb
adc
mov
push
and
xchg
jmp
sarb
jns
mov
sub
inc
fisubrl
leave
arpl
pop
cmp
in
cmp
fdiv
lret
adc
insl
cmp
mov
fistpl
dec
in
jle
push
or
or
sbb
push
popf
lods
or
incb
cld
adc
pop
aaa
jbe
pushf
das
sub
cmp
push
scas
mov
jb
stc
rolb
fwait
je
leave
sub
xor
notl
sahf
dec
sbbl
dec
push
sti
jb
push
movsl
insb
shlb
mov
sbb
fwait
imul
out
daa
or
loopne
add
clc
jae
mov
cmp
scas
and
mov
cli
sbbb
imull
out
xchg
adc
std
xchg
imul
das
fsubs
jae
hlt
data16
into
daa
or
subl
push
divl
lcall
repz
out
dec
xor
push
dec
fsubp
pop
int3
in
repz
mov
sbb
pop
or
pusha
je
repnz
pop
cmp
jg
and
cli
fdivl
push
mov
ljmp
pushf
ljmp
ljmp
fildll
hlt
dec
push
fldenv
push
mov
jae
test
pop
in
idiv
fstpl
fcmove
jae
in
jb
jg
cmpsl
sbbl
push
lret
mov
rol
xchg
dec
adc
xchg
jne
in
into
cmp
dec
sub
cwtl
add
lret
xchg
mov
stos
outsb
shr
in
push
inc
inc
pop
gs
adcl
addr16
and
mov
mov
mov
jecxz
bound
or
pusha
rcr
mov
mov
addl
dec
cs
andb
adc
dec
pop
add
mov
adc
lahf
movsb
bound
sbb
cli
out
cmpsl
iret
loop
mov
movsb
pop
fdivl
mov
lret
clc
cld
push
jl
shrl
push
cmp
arpl
pop
jle
cld
out
pop
pop
lcall
cwtl
gs
and
jne
test
fidivrl
orps
dec
mov
arpl
pop
gs
fbstp
adc
outsb
adc
js
jno
gs
add
inc
xchg
xorb
xchg
and
inc
bound
push
movsl
sbb
sub
bound
stos
inc
mov
inc
popa
mov
in
mov
pop
in
xor
f2xm1
adc
pop
push
repnz
cmp
cltd
stos
inc
outsl
adc
pop
mov
xor
repnz
daa
lea
sbb
pop
cmp
jp
fimuls
cmp
mov
scas
shll
xchg
mov
imul
in
xchg
insl
jae
or
or
sbbb
inc
cmp
inc
pushf
ss
xchg
mov
test
lret
cmpl
fs
jno
or
mov
into
loopne
daa
cmp
pop
jge
xchg
sbb
mov
push
out
jge
pop
mov
mov
sti
out
push
hlt
adc
jmp
sar
mov
bound
pop
dec
add
sahf
inc
shll
inc
test
adc
sub
les
push
in
dec
imull
pop
push
adc
jnp
push
jno
push
cmp
std
dec
mov
int
aam
xor
pop
mov
addr16
inc
mov
mov
sbb
mov
pop
ss
test
pop
dec
and
xchg
hlt
xchg
scas
dec
cmp
shrl
push
in
pop
imul
roll
mov
pop
dec
gs
dec
call
int
pop
or
aam
sbb
mov
jnp
sbb
andl
les
rorl
cmc
insb
std
xchg
lahf
out
push
cwtl
lret
adcb
xchg
lock
push
fcoml
je
pop
sub
and
testl
mov
inc
rclb
jne
notl
ljmp
jnp
lret
push
out
sti
out
dec
add
xchg
jne
enter
jb
aam
xchg
sbb
jbe
xor
and
jb
cs
fs
xchg
sbb
adc
pop
pop
dec
jg
add
pop
mov
jg
jbe
xchg
imul
push
lock
jbe
call
movsb
jp
fsubr
dec
xor
mov
mov
adc
lret
inc
ja
cmp
pop
fbld
cmp
sbb
mov
test
outsb
call
cli
jecxz
pop
insl
or
mov
xor
push
inc
mov
inc
jle
mov
xchg
dec
sbb
movsb
adc
fwait
jnp
or
jae
mov
mov
sub
movsl
jge
fsts
inc
pop
cli
inc
or
rcrb
dec
lods
pop
mov
pusha
aaa
loop
test
mov
sbb
jl
lcall
in
jne
sbb
mov
call
adc
xchg
or
daa
xor
mov
out
or
inc
mov
lock
sbb
int3
add
repz
cmp
cltd
add
out
xor
mov
int
mov
fstl
cltd
test
sbb
test
adc
ja
dec
jmp
roll
das
pop
out
and
and
dec
cli
aam
cmpsl
or
mov
mov
add
inc
mov
mov
into
mov
cmpb
rolb
fndisi(8087
sti
dec
shlb
xchg
jmp
movsl
push
mov
sub
stos
cmp
dec
pop
jnp,pt
shrb
adc
xor
pop
bound
cmpsb
cmp
xor
shlb
gs
cmpsb
repnz
inc
sbb
push
lods
jp
mov
pop
mov
ljmp
cmp
jle
in
nop
aaa
dec
fdivl
inc
mov
and
mov
mov
ljmp
adc
xchg
aam
insb
ret
sti
inc
mov
fdivl
cltd
and
fbstp
je
xor
jp
push
sbb
push
ret
and
sti
sbb
add
enter
stos
or
aaa
insb
jle
dec
daa
cmp
mov
jae
jl
push
scas
ss
cwtl
and
lahf
mov
mov
shrb
les
adc
and
add
fstpt
jge
sti
outsl
out
je
mov
xor
gs
lret
sub
repz
outsl
xchg
lcall
mov
stos
xchg
cs
outsl
lcall
pop
mov
add
out
lock
add
sahf
std
sbb
add
iret
mov
xchg
bound
push
repnz
jo
ds
ret
fisttps
mov
xchg
imul
out
cmpsb
jne
roll
ds
adc
cmpsl
xchg
je
jg
cmpsl
fbld
inc
scas
mov
dec
adc
mov
xorl
into
fmull
lods
inc
cs
in
daa
leave
dec
lret
add
daa
call
xor
out
jecxz
lret
sbb
xchg
js
push
mov
dec
addr16
icebp
dec
inc
sub
xchg
ds
inc
out
cmp
movl
lret
xlat
pushf
jge
test
dec
call
push
cmp
lcall
mov
push
sub
stos
xchg
adc
cmc
push
sub
jp
shrl
pop
fnstsw
push
pop
outsl
test
push
cmpsb
push
fsubrl
and
inc
cld
jns
imul
dec
hlt
jnp
or
pop
mov
mov
fimuls
out
insl
xchg
sahf
repnz
mov
jl
mov
cwtl
adc
or
xor
imul
std
inc
adc
lock
jb
jge
js
xchg
mov
lcall
sbb
lods
xchg
rcrl
pop
out
sbb
insb
and
mov
roll
add
testb
mov
mov
les
or
push
inc
mov
aas
adc
mov
adc
ja
outsb
shlb
push
pop
insb
aam
inc
jle
jmp
ret
shl
mov
xor
test
mov
adc
insb
inc
leave
shlb
fs
pop
dec
or
pop
xchg
jnp
push
mov
es
test
inc
jo
inc
mov
insl
call
aam
jnp
inc
cmpsl
jle
jg
or
mov
cmpsl
jno
bound
out
dec
inc
and
add
mov
iret
cs
repnz
insb
aad
lds
push
pop
repnz
mov
ficomps
sbb
repz
movsb
pop
dec
adc
cmp
cmp
mov
hlt
sub
movsb
cmp
mov
iret
ss
insb
xchg
dec
pop
mov
scas
test
scas
imul
lret
insl
insb
popf
inc
lret
mov
call
mov
icebp
push
push
push
dec
push
jl
mov
ret
enter
xor
in
inc
sbb
dec
mov
aaa
pushf
sahf
sub
fbstp
andb
mov
pop
hlt
out
es
in
and
repz
sbb
lods
xor
inc
xchg
jae
mov
mov
sbb
cmp
repz
loop
jns
faddl
push
imul
adc
dec
xchg
mov
or
icebp
sbb
dec
cmp
pop
cmpsl
sbb
mov
test
or
imul
jnp
xor
clc
stos
addr16
mulb
ret
cmp
loopne
stc
shlb
fwait
mov
sbb
lahf
pop
sub
jb
cmp
cwtl
pop
mov
mov
cmc
mov
pop
and
movsl
not
shlb
mov
inc
out
and
and
pushf
pop
jbe
cltd
jp
mov
ljmp
fildll
fwait
call
popa
xor
sub
cli
cmpsb
gs
xchg
fstps
rol
mov
test
out
popf
jb
lret
shll
jae
push
push
ss
cmp
sub
sub
movsl
icebp
jne
mov
mov
xor
shl
mov
cmpl
push
cltd
or
pop
stos
jmp
lcall
ret
add
adc
ljmp
insb
shr
jmp
in
adc
hlt
lret
inc
xor
movsl
jno
hlt
frstor
lret
sub
fcomps
or
and
push
out
in
mov
clc
xor
pop
lcall
mov
pop
mov
jl
lock
stos
stos
adc
push
inc
in
cld
mov
lret
sub
arpl
imul
pushf
push
lock
sbb
loope
lret
cwtl
mov
push
push
adc
sbb
jbe
stos
pop
call
mov
bound
cmp
jmp
jmp
popa
or
inc
jae
cmp
or
cmp
dec
hlt
jno
mov
sarb
in
int
aas
lods
mov
jmp
fldt
add
std
push
cmc
inc
pushf
jg
xchg
fcmovne
cmc
push
in
stos
rcr
bound
test
push
mov
or
or
push
push
xchg
adc
dec
out
lret
mov
ja
xlat
mov
faddl
and
lret
add
xchg
adc
sbb
in
add
lcall
lods
outsl
lret
das
inc
jns,pn
loope
jl
jbe
xor
sarl
add
repz
mov
gs
mov
fcoms
pop
iret
xor
xchg
sub
aaa
int
adc
push
inc
test
lret
gs
loopne
or
lds
inc
xlat
push
addr16
fcmove
ljmp
or
xor
dec
outsl
js
cltd
push
out
ret
lret
ljmp
mov
rcll
sub
decb
les
in
xor
sbb
in
push
fwait
jecxz
addb
shll
shrb
xor
pop
push
orl
sbb
mov
js
rclb
outsl
ret
pop
stos
mull
adc
cli
inc
frstor
sbb
dec
mov
xor
or
shlb
rorl
enter
in
add
lret
popa
or
adc
pop
scas
lods
inc
ja
push
sub
cld
fdivr
and
insl
push
push
mov
push
mov
or
pop
xchg
ror
and
pop
cmp
rol
sti
xchg
mov
cs
push
mov
jmp
jmp
lods
add
stos
mov
addr16
xchg
jbe
mov
and
mov
and
rcll
decb
hlt
popf
xchg
adc
fdivl
fucomp
mov
pop
adc
inc
call
rorb
aad
xor
out
daa
rcrb
adc
scas
ficoms
jp
mov
rorb
cmp
xchg
mov
mov
jge
outsb
ss
jno
rcll
xor
call
jo
adcb
scas
int
loopne
ss
sarb
pop
jl
dec
scas
popf
sbb
shrb
insl
add
sbb
es
pop
call
xor
xor
mov
jbe
lret
cmpsl
push
into
jne
sub
lea
pop
adc
mov
xor
xchg
loop
dec
adc
sub
nop
mov
add
inc
out
xchg
mov
and
shll
cmp
mov
into
mov
xor
gs
sbb
test
mov
aaa
xchg
jno
icebp
adc
dec
imul
in
pushf
dec
lret
pop
out
ds
pusha
incb
cli
cld
push
jb
mov
pop
xchg
xor
pusha
jno
mov
push
sahf
lret
jmp
sub
or
out
ret
pop
jmp
cmp
pop
stos
f2xm1
scas
cmp
loopne
inc
movsb
bound
stos
dec
mov
adc
adc
xor
fimuls
cmp
rorb
xor
loope
pop
adc
or
mov
movsl
hlt
ljmp
add
dec
xchg
ds
loop
push
and
idivb
sbb
sahf
sbb
jno
push
cmpsb
cmp
cmpl
add
movsl
pusha
js
adcb
mov
mov
fcmovne
push
test
rcrl
sub
outsl
aaa
jbe
mov
loope
lret
pop
push
outsl
sub
adc
sub
inc
and
inc
mov
test
lret
or
aas
cmp
add
arpl
pop
mov
loop
mov
imul
sbb
mov
fwait
adc
sbbb
push
mov
jp
xlat
sub
and
fsubs
or
pop
stc
mov
xchg
push
jp
imul
jbe
mov
rorl
push
aad
data16
std
pop
mov
pusha
jecxz
test
and
nop
ss
iret
cmp
jecxz
int3
lret
inc
and
inc
lds
aam
dec
outsb
ds
xor
inc
mov
arpl
cmpsb
hlt
fucomip
sbb
cwtl
or
stos
push
cli
pop
inc
cmp
arpl
mov
in
ljmp
jb
jnp
mov
sub
pop
cmp
in
fidivrs
daa
add
or
stos
mov
leave
dec
mov
mov
scas
inc
arpl
pop
cmp
mov
add
adc
mov
pop
cmc
iret
rolb
cmp
adc
out
lods
clc
sbb
mov
sub
jb
aad
cltd
dec
enter
mov
mov
pop
fiadds
adc
push
pop
das
xchg
mov
sahf
insb
in
clc
adc
dec
pusha
outsb
mov
adc
inc
push
add
mov
lea
test
and
ss
fs
ss
arpl
and
insb
mov
sub
adcl
pop
ret
pop
cmpsl
aaa
pusha
sarb
xchg
add
mov
jmp
push
lock
mov
add
jns
dec
and
or
call
add
fsubl
add
jmp
inc
inc
mov
mov
loopne
hlt
add
push
stos
mov
cmpsb
icebp
pusha
mov
stc
nop
add
jp
xchg
lock
dec
jle
clc
daa
xor
jnp
cmp
or
xchg
cmp
adc
push
sub
loope
out
xor
pop
xchg
out
pop
jmp
cmp
sahf
rorl
or
insb
imul
daa
out
add
mov
test
addb
jmp
sqrtps
pop
rorb
jo
cmp
cmp
div
push
dec
sub
and
and
pop
dec
popf
popa
cmp
cmpsl
lds
xor
dec
data16
repz
adc
jecxz
inc
fwait
push
inc
inc
add
aam
shll
mov
testb
mov
xor
pop
aaa
mov
dec
mov
out
jg
inc
cmp
rclb
insb
cmc
fxtract
popl
shlb
fnstsw
test
imul
xchg
fwait
cmp
mov
test
push
out
or
icebp
imul
faddl
sub
dec
mov
dec
pusha
push
repz
ss
in
xchg
es
inc
add
jbe
sbb
dec
in
jb
mov
xlat
push
stos
insl
out
arpl
loop
dec
pop
repz
ret
sub
in
jnp
xchg
xchg
mov
adc
enter
fimuls
add
daa
cmc
mov
fidivl
lods
lods
cwtl
pop
xchg
rclb
sub
cmpsb
out
lds
pop
dec
stos
pushf
mov
cli
inc
enter
lds
sub
inc
clc
pop
in
push
and
data16
adcl
xor
sub
dec
xchg
gs
jne
jno
lods
imul
movsb
clc
sahf
and
and
and
std
fildl
cli
sahf
mov
ja
and
lahf
jae
cld
loope
mov
cmp
movsb
push
pop
or
mov
jae
xor
sbb
int
loop
jg
mov
cmpsb
jne
and
lods
inc
push
cmp
ret
dec
or
pop
push
ljmp
pusha
and
cwtl
dec
cmp
in
inc
xor
or
das
mov
inc
push
outsl
jns
and
dec
cmpsb
movsb
aam
jecxz
movsb
mov
sub
add
push
or
cmp
addr16
and
lcall
ljmp
xor
mov
jle
lock
mov
jnp
push
cmp
cltd
cmp
pushaw
xchg
mov
lret
lahf
mov
push
push
pop
or
fnstenv
fisttpll
ja
loopne
inc
cmpl
cmp
sahf
lcall
dec
rorb
mov
inc
push
lcall
ljmp
xchg
push
sub
inc
push
or
add
imul
push
sbb
mov
imul
outsl
adc
ljmp
ljmp
je
mov
xor
icebp
mov
aas
stos
jmp
jne
ret
test
dec
xor
or
loopne
ljmp
sub
add
test
mov
cmc
adc
cmp
jae
clc
es
ret
pop
cmpsl
fs
push
hlt
jnp
imul
andb
aam
xor
mov
adc
cmp
pop
dec
ds
movsb
pop
jl
imul
and
test
sub
test
in
add
mov
mov
pop
or
lcall
and
je
cmc
js
push
jb
push
mov
cmp
subl
adc
sahf
test
aaa
sbb
arpl
daa
and
lea
fwait
pop
xor
add
mov
popf
jb
iret
and
inc
lcall
sahf
shll
mov
std
sub
cmpl
stc
pop
xor
mov
mov
mov
ficoml
pop
jmp
and
stos
add
sub
std
pop
adcl
fisttpl
or
adc
scas
mov
mov
xlat
lcall
cmp
push
push
scas
fcoml
xchg
inc
cmp
cli
pop
mov
jns
xor
outsl
xchg
cmpsb
push
pop
sbb
mov
ljmp
ss
xchg
pop
mov
sbb
mov
test
xchg
das
or
push
push
xlat
arpl
pop
icebp
push
add
notl
add
xchg
arpl
mov
cmp
rorl
sbb
inc
push
stos
pop
rcrb
mov
bound
int
in
je
outsl
movsl
jns
hlt
cltd
jecxz
cmpsb
imul
add
inc
mov
or
ljmp
in
fisubs
stos
xor
mov
outsl
in
mov
xchg
or
mov
negb
imul
leave
into
popf
jae
aad
lret
rolb
cld
or
testl
je
push
imul
and
mov
xchg
add
sahf
scas
jne
pcmpgtd
in
or
dec
xchg
cs
int3
lret
dec
dec
mov
and
xor
adc
shlb
mov
mov
mov
je
mov
scas
and
into
mov
jne
shl
addr16
sub
scas
pusha
neg
test
lea
rclb
adc
mov
into
sbb
sti
stc
xor
repz
pop
movb
xchg
sub
dec
cmp
mov
cmp
push
mov
ds
rcrb
das
pop
popf
push
xchg
dec
mov
add
lods
pushf
adcl
or
or
loope
and
xchg
addr16
push
cli
pushf
fldl
cs
pop
rcrb
mov
xor
icebp
stos
mov
stc
mov
rcl
scas
mov
outsl
scas
insb
xor
adc
lods
cmpsb
sub
mov
jp
sbb
jne
xchg
and
cmpl
mov
push
daa
mov
adc
gs
sbb
add
xchg
xchg
adc
push
das
jle
les
into
mov
lock
pop
jge
popa
jb
test
loopne
adc
ja
gs
rcll
lcall
call
push
je
out
aam
mov
leave
incl
cmpsl
push
rorl
cmp
out
jae
or
ds
sbb
jns
stos
jb
fdivl
fnstcw
inc
dec
adc
repz
jl
popa
pushf
adc
lea
cld
adc
adc
push
mov
stos
xchg
cmpb
repz
test
pop
les
xchg
insl
les
js
jecxz
fstpl
scas
aad
mov
sbb
inc
push
fs
or
pop
ficomps
jo
jae
and
fwait
sbb
cli
shl
aas
testl
ja
mov
sbb
in
out
add
dec
jmp
movsl
aad
aad
outsb
push
or
add
lcall
inc
test
data16
pop
cs
mov
push
lods
sub
dec
xor
inc
das
sarl
bound
stos
add
jns
xor
movsl
repz
fdivl
jge
sub
push
daa
push
ja
mov
lods
lret
cld
int
stc
ja
mov
pop
xchg
in
scas
pop
in
mov
je
lods
aas
sahf
lds
jb
ljmp
sbb
sti
and
ret
cwtl
mov
lods
push
scas
test
lea
test
movsb
stc
adc
out
cmp
jb
inc
jbe
dec
mov
dec
xor
jge
xchg
shll
push
sub
repnz
test
mov
push
rcll
mov
inc
cmpsl
out
popa
pop
mov
add
mov
xchg
shl
mov
jbe
enter
scas
and
jns
mov
cmpb
pop
imul
mov
mov
mov
aaa
jns
push
aas
inc
mov
fcoms
icebp
inc
cli
mov
push
pop
hlt
xchg
inc
aas
jno,pn
cmp
mov
into
fldln2
jl
mull
pop
jmp
mov
sub
or
fidivl
lret
test
mov
cmp
push
push
lds
pop
pop
mov
sbb
xor
adc
sbb
imul
jnp
imul
out
fsubp
sbb
arpl
pop
xor
test
negl
sbb
adc
fs
push
test
inc
ss
sbb
inc
sbb
add
call
aam
ljmp
adc
xor
lds
in
pop
imul
sbb
mov
lret
jp
aas
push
add
mov
pop
aad
inc
mov
rcrb
xor
mov
jge
xchg
lcall
cltd
jecxz
je
in
fimuls
add
outsl
mov
aas
push
jl
or
lods
and
push
outsb
xor
ret
sub
adc
loope
ja
lret
scas
push
data16
shlb
xchg
pop
ret
leave
add
sbb
ficoms
test
shl
ret
and
dec
push
mov
dec
mov
scas
cmp
nop
or
inc
push
add
pop
enter
mov
pop
movl
push
cmp
lods
out
dec
add
dec
je
scas
push
arpl
and
sbb
inc
aam
ret
negb
dec
popf
inc
jg
insb
mov
cmp
sub
adc
and
add
jb
test
lock
je
daa
pop
std
cmp
sbbl
xchg
fcoml
bound
dec
int
cld
stc
popf
gs
dec
pop
cmp
std
inc
mov
shll
cwtl
cmpsb
adc
fildl
jnp
lret
sbbl
pop
sbb
add
dec
cmp
imul
hlt
inc
enter
fdivrl
repz
jl,pt
adc
cmpsl
movsl
mov
pushf
mov
lea
test
inc
cmpl
xor
xchg
push
jne
jne
and
mov
dec
adc
divl
lcall
jb
movsb
inc
sahf
pop
mov
inc
popa
out
sub
cwtl
pop
xchg
sbb
out
test
out
sar
test
loop
test
sub
subb
cmpsb
leave
sub
jno,pt
mov
push
outsl
add
lret
or
popf
popa
inc
loopne
mov
xor
aas
pop
scas
xchg
add
adc
or
lods
sub
fidivrs
adc
dec
cmc
orl
pop
jne
inc
lret
les
popl
pop
jb
inc
out
in
test
lret
lret
push
ss
test
enter
arpl
jg
sub
mov
adc
mov
sysenter
lods
and
dec
mov
cmpsl
adc
lods
mov
outsb
xor
push
int3
push
jmp
mov
pop
jnp
mov
push
cltd
and
test
pop
out
xchg
cld
jae
movsl
es
cmpsb
add
and
rol
push
mov
dec
pop
test
mov
aad
test
ret
sub
in
adc
ja
hlt
clc
inc
mov
cmp
push
xor
sub
fwait
xchg
mov
mov
push
outsb
and
movsl
xchg
test
jae
ficomps
imul
imul
xlat
jns
push
sbb
je
jns
stc
sbb
and
in
ret
dec
enter
jle
jge
int
dec
or
push
xorb
mov
fistl
or
push
push
cmp
test
popa
sahf
fwait
subl
cmp
jae
pop
decl
nop
sar
inc
cmp
jns
mov
pop
xor
dec
mov
mov
test
mov
mov
test
mov
xchg
xor
pop
cmpsl
mov
inc
int
rcrb
pushf
jp
sbb
sbb
xchg
orl
mov
xchg
xor
bound
icebp
jo
pop
push
add
cmpsb
inc
cwtl
mov
mov
push
add
mov
outsl
xchg
mov
out
jp
in
adc
repnz
xchg
push
sbb
or
and
rcrl
or
addl
jmp
adc
mov
push
xor
cmp
clc
mov
sbb
cwtl
repz
fiadds
pop
int
fnstsw
or
in
ss
ljmpw
data16
jecxz
jp
cmp
cwtl
cmp
shrb
cmp
add
test
inc
pop
scas
inc
inc
in
xchg
ss
mov
rorl
shll
pop
dec
test
jb
push
imul
negl
mov
jo
adc
rorl
push
stos
popa
mov
cmp
lds
outsb
and
add
int3
in
xor
push
mov
scas
loope
jb
dec
jne
cmp
dec
and
pop
sub
aad
cs
fstps
cmc
dec
pop
lods
mov
lods
inc
fldenv
dec
lods
aas
out
stos
inc
pop
dec
lret
lahf
inc
and
xor
jmp
sbb
jp
movsl
mov
out
dec
mov
scas
testb
stc
xchg
dec
xlat
adc
add
dec
cli
sub
adc
sbb
mov
xchg
rcr
out
pop
ret
jecxz
mov
sbb
inc
mov
pop
pop
pop
push
scas
mov
sahf
xchg
sbb
andb
xor
dec
das
xchg
sub
in
jp
loopne
dec
mov
in
adc
cltd
shl
sub
dec
out
or
scas
out
int
jecxz
cmp
mov
sub
inc
hlt
add
sbb
cwtl
and
mov
or
cmpsb
mov
cli
add
test
cmp
ds
ret
cmp
mov
cld
inc
gs
in
es
addr16
xor
inc
fwait
andl
jbe
nop
inc
fs
mov
ret
dec
mov
and
pop
push
aas
in
sbbl
dec
lea
sti
fwait
pushf
mov
xchg
mov
jo
int
or
mov
jae
mov
mov
cmp
dec
loopne
sub
xchg
sub
mov
sahf
sbbl
inc
cmp
in
cwtl
js
adc
mov
add
add
mull
aad
pop
or
mov
test
sbb
xor
xor
jnp
push
in
fisubs
test
inc
test
mov
es
sbb
pop
mov
ret
or
cmp
das
fbstp
jo
aad
std
sbb
jl
stos
cwtl
repnz
stos
dec
scas
push
add
mov
inc
push
and
mov
inc
fidivl
push
add
movsb
mov
sub
lds
mov
xor
sub
push
jg
filds
jmp
fwait
enter
in
movsl
inc
rclb
ret
inc
in
xor
sub
mov
push
int3
leave
dec
push
cld
out
cwtl
sbb
fmul
movswl
push
lahf
stos
pop
out
sbb
enter
icebp
nop
mov
sahf
xor
iret
sub
nop
loope
leave
outsb
inc
adc
mov
aad
mov
and
leave
xor
jle
lods
es
das
and
jns
push
insb
pop
sub
jne
pop
add
add
mov
push
cmp
out
sub
loope
sbb
sub
adc
pushf
jg
lea
lds
adc
cmpsb
notl
jne
jp
pop
ret
ds
mov
mov
dec
pop
push
iret
and
pop
inc
pop
dec
imul
mov
aas
mov
pushf
hlt
xor
jmp
sbb
ret
pop
insb
fidivl
cli
mull
shll
aam
xchg
push
push
popa
mov
xchg
xchg
shl
enter
stos
in
dec
rcr
xor
movsb
cmp
imul
mov
sub
and
fldt
into
jl
and
aam
inc
clc
clc
jle
lcall
and
mov
fidivl
ret
jge
sbbl
and
pop
cmpsb
in
lret
shll
or
outsb
daa
ja
cltd
mov
sbb
aad
lds
es
pop
pop
xchg
jne
shlb
out
xchg
test
cli
lock
nop
in
xchg
adc
sarl
lret
dec
movsl
ficomps
mov
jmp
sub
push
xchg
icebp
push
fidivl
xchg
outsb
fs
inc
dec
test
imul
scas
push
outsl
jnp
adc
xchg
pop
insl
or
lcall
fistpll
or
mov
mov
sarl
jl
fdivl
sbb
adc
pusha
jne
test
or
fidivl
sub
repz
sbb
aaa
dec
push
pop
ss
mov
xchg
xor
hlt
push
out
sbb
aaa
aaa
mov
lret
jns
jae
cmp
inc
dec
out
push
in
xor
mov
xorl
fdivrl
call
out
inc
and
cli
out
add
and
inc
xor
test
push
inc
mul
daa
xchg
cmp
jae
push
stos
popf
xchg
inc
or
mov
push
xor
cmp
into
movsb
outsb
xor
push
mov
fsub
ss
pop
cmp
outsl
insl
dec
push
out
sahf
cmp
fldl
adc
flds
loopne
pop
pop
decl
fisubs
sbb
push
pop
xchg
mov
inc
mov
mov
lret
aaa
pop
xor
in
jge
rsqrtps
mov
test
or
call
jns
cmpsb
cli
jbe
sub
shrb
ficoms
xor
mov
insl
lcall
pop
pop
and
es
xor
leave
add
inc
mov
or
cld
ret
jne
xor
shll
andb
push
scas
call
add
mov
mov
xchg
sbb
frstor
cwtl
adc
add
or
and
push
iret
xor
xchg
mov
ficompl
pushf
pop
xchg
aad
bnd
std
push
cmp
mov
cltd
push
mov
xchg
stc
mov
sbb
lahf
push
mov
pop
fmul
test
andb
jb
inc
in
test
jo
aad
and
jb
inc
jnp
out
mov
ljmp
lret
mov
das
je
aad
jl
add
lods
mov
push
mov
or
fwait
mov
int
pop
sahf
ss
xor
scas
push
xor
fs
jae
mov
and
dec
in
add
dec
push
mov
ljmp
pop
pusha
sti
gs
xor
lcall
fldt
add
push
lods
inc
mov
cmp
fisubs
es
aas
jne
fwait
stos
push
dec
mov
cmpsl
loopne
fildll
out
cmpsb
fdiv
dec
adc
fnstsw
fnsave
enter
sarb
adc
cmovno
insb
cld
xor
ja
jo
loopne
je
aaa
xchg
sti
fcmovu
mov
mov
jle
in
insb
mov
ja
adc
imul
lcall
loope
jmp
outsl
std
jnp
sarl
sbb
jo
pop
jno
pusha
mov
cltd
dec
aas
push
jmp
cmpsl
gs
insl
adc
repz
scas
push
inc
jne
ljmp
aad
or
lret
xlat
mov
sbb
mov
cmp
test
mov
pushl
data16
mulb
testb
and
enter
add
xchg
jmp
aad
sbb
mov
push
aam
in
jecxz
pop
mov
lock
arpl
testb
push
xchg
test
and
negb
loope
mov
lea
push
jb
inc
dec
aaa
int3
xchg
or
popf
push
clc
cmpsl
repnz
jo
fcmovne
shl
push
pop
push
scas
sub
pushf
leave
xchg
loope
pop
xchg
xor
movsl
cmp
xchg
adc
fidivs
lret
add
cmc
imul
popf
sbb
ds
stc
xchg
pop
cmc
xchg
adc
adcb
dec
arpl
cmpsb
sub
addr16
xchg
adc
ds
cmpsb
cmp
and
xchg
gs
out
scas
inc
pop
push
push
mov
jno
add
fmuls
push
mov
mov
and
and
out
cld
outsl
aad
adc
mov
pop
jl
shr
fcoml
cwtl
mov
cmpsl
inc
int
enter
inc
mov
push
add
adc
scas
mov
repz
or
leave
enter
cmpsl
push
xlat
movsl
call
jp
dec
adc
lods
into
outsl
cld
dec
push
and
psraw
repnz
push
shlb
andl
in
push
popl
aaa
sub
push
cltd
push
outsb
add
clc
and
addr16
ret
mov
fidivs
popf
xor
lcall
mov
jb
cmp
in
and
push
inc
popa
or
sbb
push
insb
inc
mov
gs
and
pop
in
enter
inc
jmp
sbb
mov
lods
cmp
stc
je
xlat
sub
out
test
mov
andl
inc
fs
sbb
ja
scas
sub
jp
dec
mov
ficoml
lock
mov
enter
mov
pop
jecxz
scas
xchg
mov
mov
lock
jae
sub
jg
testb
adc
ror
pop
les
mov
repnz
cmpsb
lods
int
cltd
outsb
cs
fmuls
fbstp
mov
fwait
and
dec
mov
push
int
jge
or
cld
and
mov
mov
rorl
rolb
adc
sbb
or
push
push
push
sbb
sub
sbb
push
mov
or
cmp
add
loopne
dec
repz
push
clc
push
iret
mov
mov
push
xor
dec
popa
ds
xchg
jge,pn
jo
xchg
xchg
inc
inc
inc
negl
ljmp
jo
imul
push
xor
push
mov
sub
add
or
loope
push
push
dec
pop
inc
clc
test
sbb
lret
pop
repnz
jns
stos
scas
mov
mov
dec
cmp
test
leave
xlat
sub
or
mov
sub
data16
xorb
in
les
inc
adc
test
pop
mov
mov
lret
pop
or
xchg
popf
cltd
stos
and
cwtl
jno
dec
out
or
outsb
add
lods
ss
dec
pop
sub
xor
pushf
sub
mov
push
sahf
mov
xchg
nop
cmp
xchg
outsb
mov
pandn
nop
daa
inc
int3
test
dec
push
push
cld
fucom
cwtl
test
scas
loop,pn
dec
movsb
inc
adc
rorl
out
xchg
adc
shlb
cmp
and
out
dec
push
xchg
fcompl
outsl
fiaddl
imul
jge
mov
mov
shl
inc
xchg
fistpl
mov
je
leave
cs
mov
das
je
pusha
rcrb
or
inc
data16
scas
push
repz
ljmp
add
scas
enter
fs
mov
jmp
mov
sub
cltd
jo
aad
or
push
pushf
stc
rcll
inc
xchg
or
sbb
enter
sbb
inc
inc
jl
sbb
pop
xor
adc
jbe
js
loopne
lock
mov
xchg
shl
outsl
rorl
mov
add
lock
loope
clc
rol
inc
xlat
add
daa
pop
rcr
imul
insb
popf
xorb
data16
mov
dec
and
add
cmc
fimuls
std
mov
push
jo
iret
cmpsb
adc
mov
out
je
inc
mov
imul
jl
lcall
and
es
mov
jne
adc
dec
lahf
insb
jo
arpl
shlb
jno
add
dec
push
xor
jecxz
icebp
fmull
in
rcl
insl
jmp
jp
out
sbb
cmpsb
and
sti
mov
xchg
jne
pop
sub
aad
sub
idivb
arpl
iret
push
clc
cmp
fcomp
pop
iret
pop
mov
lret
lods
xlat
mov
out
or
xchg
inc
push
inc
jecxz
push
add
cmpsl
mov
aad
mov
inc
jp
cmp
nop
mov
addb
pop
std
fildl
js
jmp
sub
mov
test
movsb
cmp
popa
jmp
xchg
adc
out
dec
jne
push
sub
pop
cmp
addr16
pop
clc
jo
and
push
mov
xchg
ja
jle
mov
pusha
pop
mov
jecxz
or
fcomi
mov
pop
dec
imul
and
cmp
adc
je
xchg
cmpsl
jmp
lea
out
push
dec
in
js
pop
insb
push
sahf
leave
jnp
sbb
jnp
imul
push
ljmp
jno
scas
pop
pop
out
dec
hlt
ja
adc
inc
pop
or
cmc
and
pop
mov
movb
mov
sub
repz
pop
ss
inc
ficoml
mov
sub
lds
lock
mov
cmp
pop
iret
loop
clc
rcrl
inc
xchg
or
xchg
push
jp
xchg
mov
mov
jno
adc
dec
lcall
pop
jo
xchg
add
and
clc
mov
out
sub
fwait
test
lods
dec
in
stos
out
shrl
mov
out
sub
dec
loopne
inc
sbb
pusha
xchg
pop
cmpsb
js
push
aas
loopne
mov
or
ljmp
lahf
ficoml
cmp
jecxz
or
rcr
call
cmp
mov
mov
adc
testl
orb
repz
mov
xchg
ss
jmp
cmc
sbb
aam
jge
das
idivb
nop
test
pushf
scas
inc
fistl
ljmp
fmuls
stos
inc
cmp
leave
pop
je
cmp
push
xchg
out
mov
ss
shlb
pop
xor
push
jb
sbb
and
mov
cwtl
push
out
adc
adc
mov
insl
and
aam
aad
les
sub
movsl
popf
or
insl
or
sarb
jae
dec
mov
xchg
lods
adc
sub
hlt
mov
or
inc
jle
sbbb
pop
push
test
mov
jecxz
pop
dec
negb
mov
bound
xchg
inc
pushf
imul
mov
loopne
push
mov
jo
mov
pop
outsb
pop
ss
pop
ds
push
out
clc
dec
cmp
insb
xchg
jne
loop
shll
daa
std
jle
gs
and
cmp
outsb
rcl
cld
stos
push
cli
insb
sub
lret
push
ljmp
loopne
scas
mov
xchg
mov
pushf
sub
cmp
inc
test
xchg
pop
divb
iret
stos
fxch
pop
jge
fsts
sbb
xor
ss
clc
popf
inc
pop
dec
sbb
dec
lds
mov
mov
mov
cltd
add
inc
adc
fldenv
push
mov
fildll
gs
shll
pop
in
aad
enter
mov
mov
je
sbb
aad
test
repz
lods
repz
sub
xor
sub
scas
xchg
push
rcrb
xchg
bound
add
xor
mov
push
outsl
pop
imul
and
loope
jae
lock
popa
and
in
push
lea
outsl
sub
pop
or
xchg
mov
out
gs
xor
je
insl
loopne
adc
dec
pop
lcall
das
daa
jge
addb
jb
and
mov
and
dec
push
or
roll
movsl
lret
sbb
cld
or
lret
lret
push
fst
idiv
pop
sub
in
inc
ficomps
mov
mov
aad
pop
shll
clc
aas
loopne
or
pop
daa
sbbl
pop
fistps
cmp
jg
in
jle
fcomps
or
sbb
sahf
clc
clc
jp
ss
mov
cli
or
scas
cmp
or
jnp
cmpsb
addr16
cmp
lock
mov
out
das
mov
add
jg
lods
les
stc
push
fldcw
aam
add
leave
cld
mov
out
fcmove
add
push
das
mov
or
mov
pop
test
rol
mov
sbb
dec
adc
imul
fdivp
aam
add
in
nop
lcall
mov
cmpsl
xor
cmpb
test
push
sub
outsl
inc
or
xchg
push
xor
mov
fldcw
pop
cmp
inc
stos
shlb
pop
leave
jnp
je
cmpsl
call
adc
cmp
cmc
pop
mov
sbb
scas
pop
in
push
in
insl
mov
mov
pop
inc
fnstenv
adc
enter
ret
add
js
clc
cwtl
mov
testl
nop
je
dec
aad
cmp
pop
or
sbb
pop
sbb
pop
bound
cmp
and
iret
fidivrs
mov
add
ret
dec
and
jno
push
rcrb
jae
stc
sub
fnstenv
or
adc
xor
or
aad
daa
pop
jl
jb
pop
stos
fwait
int3
addr16
sbb
or
push
and
shlb
or
jmp
push
mov
iret
stos
inc
mov
mov
pop
cwtl
push
dec
fimull
fucomip
stc
sub
adc
xor
daa
clc
mov
movsl
inc
test
jmp
or
push
fsub
ja
nop
mov
xchg
les
sbb
fistpll
mov
jecxz
lret
clc
adc
scas
ret
mov
mov
leave
ds
enter
test
divl
fdivrs
or
dec
shll
mov
ret
cmc
pop
sbb
ret
pop
stc
imul
jp
test
mov
daa
push
divb
push
mov
sub
int
pusha
testl
fdivrl
rorl
lods
cltd
xchg
mov
decl
adc
or
add
pop
rcrb
repnz
addr16
popf
mov
out
out
fimuls
sbb
cmp
stos
test
add
sti
aas
add
cmpl
sbb
in
adc
pop
dec
pop
mov
xor
andl
stos
xlat
das
dec
and
dec
fisubrs
cmp
cmpsl
mov
dec
or
mov
push
into
xchg
das
imul
push
inc
dec
dec
xor
xor
mov
ljmp
xorb
jl
xchg
push
adc
das
push
jmp
lea
int
add
imul
jnp
jnp
dec
xchg
or
imul
pop
std
add
xor
mov
or
in
cs
inc
cmp
jl
inc
cwtl
sub
cltd
pop
xor
gs
shl
ja
icebp
movsl
lods
test
inc
mov
loope
cli
les
jns
push
mov
pop
mov
or
add
mov
and
add
bound
jmp
sti
mov
mov
mov
adc
fs
push
jmp
iret
lret
xchg
push
leave
dec
adc
in
icebp
add
and
orl
cmp
pop
push
loop
or
clc
or
adc
mov
jo
enter
inc
and
testl
outsl
insb
cli
mov
cmp
cld
in
sahf
or
insl
add
loope
mov
aam
sahf
fstps
dec
mov
les
xchg
mov
pop
in
adc
fcmove
outsb
sub
fbstp
add
jge
negl
mov
and
lret
adc
jne
bsr
or
sub
sbb
xchg
nop
mov
xchg
clc
jmp
mov
in
mov
or
push
out
imul
add
push
aas
mov
fwait
sub
popa
or
popf
push
cmp
movsl
in
or
push
and
icebp
addl
xchg
insl
ss
hlt
mov
cwtl
jbe
int3
or
in
cmp
xchg
lods
addb
mov
repnz
sbb
setp
sub
mov
push
and
inc
inc
mov
cmpsb
shlb
or
rcr
mov
pop
int
inc
jle
adc
inc
shlb
sbb
ja
test
hlt
adc
add
aad
lahf
sbb
jns
adc
sbb
xlat
push
sub
rorl
scas
fs
test
jg
ds
into
jbe
mov
insl
lret
dec
add
mov
inc
test
cmp
jns
mov
jnp
inc
mov
jne
mov
cmp
xor
lcall
out
add
addr16
or
hlt
cmp
mov
orb
push
sub
or
cmp
and
mov
mov
add
push
or
push
dec
add
jge
cwtl
shrl
ret
adc
cli
fsubs
jne
aad
stos
es
jns
bound
pop
stos
mov
repnz
dec
movsl
xor
popa
movb
movsb
push
xchg
xchg
adc
pop
sahf
enter
push
pop
dec
add
fildl
push
and
nop
sub
sub
outsl
testb
imul
enter
insb
aad
int3
mov
adc
scas
aas
or
or
push
pop
icebp
cmovns
shl
loopne
xor
in
push
dec
xchg
popf
push
andb
iret
sahf
jae
icebp
mov
movsl
cmpsb
xchg
and
in
or
mov
fldcw
xor
aas
jle
mov
mov
fidivl
xchg
addr16
fidivrs
jl
xor
adc
lea
xor
enter
inc
or
pop
jns
jns
mov
cmc
outsl
pusha
in
push
bound
mov
adc
inc
xchg
inc
sbb
xor
je
fbstp
jmp
sub
mov
jg
test
out
lods
scas
scas
pop
outsb
pop
jno
inc
shlb
add
xorb
repnz
xchg
lahf
scas
call
mov
fnstsw
sbb
divb
cmp
push
and
test
lock
jno
mov
adc
jnp
push
mov
insb
scas
not
or
nop
sub
jmp
lods
nop
xchg
mov
jge
and
add
or
dec
mov
movsl
leave
add
icebp
adc
fwait
cs
push
call
sub
mov
or
jno
xchg
inc
xlat
add
in
add
jae
ljmp
mov
shlb
cmp
push
stc
mov
and
xlat
push
int3
int3
arpl
sbb
jo
xor
pop
xor
mov
mov
fisubl
inc
lea
lcall
bound
std
push
lods
shrb
aas
popf
hlt
cmp
mov
ret
xchg
pop
dec
or
sarb
loop
loopne
adc
icebp
sub
xchg
cmp
push
shlw
lahf
sub
adc
pop
mov
dec
jecxz
mov
jl
cmp
pop
in
add
or
out
sbb
xor
cmp
pushf
insl
cmp
clc
pop
and
pop
sub
mov
fildll
int3
data16
std
jb
dec
mov
fnstsw
xorb
movsb
int
pop
dec
lock
jge
xor
lods
xchg
pop
jbe
mov
pusha
shl
adc
loop
push
or
push
jge
and
in
sbb
inc
jge
ja
and
and
mov
mov
jb
jns
xchg
sub
cmpsb
mov
fdivr
sbb
stos
jbe
dec
test
mov
mov
mov
outsb
cmpsl
lods
mov
dec
mov
fs
sub
or
jg
pusha
sahf
xor
repz
inc
bound
mov
pop
test
jno
sub
test
sar
sub
popf
sti
lea
call
mov
mov
stos
push
out
es
adc
adc
inc
and
pop
sub
fs
sub
in
pop
mov
push
xlat
xlat
jae
imul
pop
ss
orb
mov
les
mov
insb
xor
popf
mov
adcl
pop
add
jl
adc
pop
xsha1
cmpsb
dec
aad
call
insb
xchg
and
mov
and
outsl
mov
fwait
and
push
jmp
xor
insb
fs
ja
inc
imul
jae
rol
jnp
je
pop
cmpb
mov
ret
dec
bound
faddl
pusha
cltd
sub
das
stc
or
jg
mov
popa
into
iret
xchg
ljmp
pop
xor
jns
inc
and
fsubs
inc
or
or
push
jne
jns
and
sbbl
aam
lahf
std
dec
inc
sbb
je
in
push
rcrb
and
pop
je
cld
dec
and
mov
in
pushf
pop
pop
cwtl
das
push
in
push
outsl
cs
sub
sti
inc
scas
and
xchg
sbb
xchg
iret
loop
add
pushf
fwait
sbb
arpl
xchg
mov
ficoml
cmpsl
les
sbb
leave
xor
push
lock
dec
sub
pop
imul
adcb
jle
jno
dec
xchg
dec
ss
cli
rorl
andb
out
push
nop
js
outsb
stos
mov
xor
ss
incl
inc
aas
shll
lds
jmp
push
push
lock
cmpsb
std
or
mov
push
or
jg
adc
in
xchg
sbb
cld
ss
push
or
int3
jp
std
das
arpl
stos
pop
ja
lahf
xor
inc
sub
sub
dec
lds
xchg
mov
mov
int3
dec
inc
lret
add
into
mov
out
mov
jle
sub
scas
fistps
sbb
sub
ficoml
test
stos
xor
clc
cmpsl
xchg
mov
push
insl
xor
mov
dec
pop
sarb
cli
pushf
cmp
push
jo
xor
adc
push
dec
jecxz
outsb
in
mov
dec
sub
cmp
fldcw
dec
test
inc
fnstenv
imulb
fsubl
or
out
dec
cwtd
imul
call
or
add
jg
mov
jecxz
dec
cwtl
popa
lds
mov
shll
fsubs
xchg
sahf
xor
leave
add
stc
and
mov
pop
insb
decl
push
call
or
and
loopne
dec
pusha
lahf
add
add
mov
lcall
lock
cmpsb
jo
adc
xchg
mov
rcrb
scas
cmpsb
stos
and
sbb
imul
and
loope
rcr
out
mov
js
fisubs
sub
sbb
xchg
mov
aaa
sbb
call
aaa
sub
xchg
dec
lods
clc
rcl
pop
sub
into
divb
test
jo
hlt
cwtl
insl
sbb
xchg
inc
lds
shlb
mov
lea
jmp
sbb
repz
clc
sahf
mov
mov
push
xchg
lret
push
and
enter
outsl
adcl
sarb
inc
pop
jmp
xchg
adc
xchg
dec
sbb
imul
clc
dec
dec
fstpt
dec
movsb
pop
movsb
loopne
in
fsubrs
mov
data16
arpl
push
cmpsb
lock
mov
cld
pop
pop
repnz
out
sbb
mov
or
roll
push
jno
push
add
std
push
sub
mov
xchg
sbb
mov
jle
pop
jp
out
jnp
mov
imul
fs
andb
addr16
cmp
pop
ret
in
sub
aaa
fwait
roll
movsl
sbb
mov
xchg
cmp
fisubrs
cmp
xor
mov
lret
inc
lahf
ja
jno
push
inc
and
jmp
sbb
push
stos
push
out
in
sbb
scas
sub
mov
xor
push
das
vpaddw
daa
inc
mov
cltd
pop
out
in
mov
xchg
ss
xor
push
push
movsb
push
xor
pop
repnz
mov
mov
inc
loopne
cmp
addb
out
cmp
bound
mov
dec
push
jnp
rclb
sbb
jno
arpl
sbb
sbb
jecxz
out
lret
ss
inc
dec
out
inc
addb
fwait
pop
mov
and
ret
push
sbb
ret
xor
pop
sarl
or
rcrb
mov
adc
or
stc
cmp
or
xor
ljmp
out
cmpl
jp
jg
sbb
and
stc
cmp
cmpsb
sub
loope
xchg
xor
movsb
sbb
sub
in
cmp
out
ds
pop
mov
and
aaa
push
jb
add
pop
add
mov
push
outsl
adc
lret
fildll
cld
mov
outsb
sbbl
dec
sbb
aam
pop
xor
divb
and
push
shrl
dec
cs
scas
xor
or
fs
sahf
mov
mov
push
adc
push
add
add
push
xchg
mov
fdivl
repz
sub
mov
xlat
jbe
cmp
xchg
call
sti
xchg
cmp
adc
shr
scas
cmp
cmc
les
js
rclb
pop
ds
movsb
mov
outsl
xchg
push
dec
and
out
add
pop
dec
cwtl
aas
and
stos
cmp
lock
jo
mov
daa
inc
js
in
mul
xor
mov
cs
popf
add
in
sbb
sti
push
xor
dec
arpl
aam
mov
out
and
mov
fmull
jle
ret
outsb
pop
push
cwtl
ljmp
and
mov
into
fmull
imul
mov
es
pop
les
ja
rolb
jbe
mov
and
lock
arpl
mov
lahf
ret
sub
or
roll
pop
xor
dec
scas
inc
jmp
fmul
faddp
into
pop
xchg
jno
mov
test
mov
mov
sarl
test
std
sbb
inc
jne
sarb
mov
ja
cs
imul
cmp
cmp
insl
add
mov
jge
lock
and
adc
arpl
js
mov
jns
push
inc
pusha
xor
lods
cmp
pushf
in
clc
shr
jb
ds
xchg
jo
hlt
inc
or
enter
out
inc
rcr
por
cmp
or
sub
cs
add
jl
sub
inc
icebp
pusha
mull
in
xor
leave
xor
xchg
dec
inc
inc
pusha
add
lahf
push
lret
pop
push
cwtl
cmp
js
inc
xor
xchg
inc
mov
dec
out
mov
in
jle
push
push
adc
pusha
sub
insl
test
mov
test
fstl
int
cmp
cmc
cmp
cmpsl
and
pop
adc
inc
fildl
out
dec
pop
push
pusha
aaa
mov
push
fsubrs
add
dec
pop
and
push
jns
push
mull
jns
sbb
hlt
mov
arpl
xlat
jl
mov
push
cmpl
subl
inc
and
lods
pop
jnp
jp
jge
shr
in
jge
push
adc
jle
out
add
mov
dec
ret
xchg
xor
lret
and
sbb
xor
fs
cmp
cld
mov
cmp
inc
aad
dec
pop
aaa
cld
xchg
test
jnp
testl
push
or
loope
cmp
sub
xchg
dec
mov
daa
in
pop
repnz
stc
inc
cld
out
fldt
adc
fildll
sti
leave
jecxz
fcoml
or
stos
inc
dec
dec
idivb
push
cmp
mov
movsl
jl
push
sahf
and
sub
lcall
xchg
xor
pop
cld
sbb
shlb
pushf
jmp
mov
fs
xchg
mov
js
adc
ja
or
cltd
xor
mov
or
dec
popa
clc
inc
test
je
sub
gs
push
leave
xor
outsb
in
notl
in
cmpl
or
scas
adc
mov
iret
jno
call
sbb
cmp
cmp
mov
push
ret
mov
std
push
aaa
mov
xlat
pop
fchs
and
enter
mov
cmc
sub
xor
xchg
in
push
fsubl
hlt
inc
imul
call
cmp
adc
mov
lods
add
cmpl
jl
dec
mov
xchg
pop
imulb
sub
shrl
lcall
pop
outsl
adc
sbb
loopne
movsb
mov
mov
popl
loopne
inc
push
fbstp
mov
lds
pop
adc
test
cld
xchg
sbb
mov
leave
mov
mov
out
xor
jl
loopne
pop
sbb
dec
push
mov
outsb
add
aam
fdivl
icebp
adc
push
ss
mov
mov
arpl
bound
cli
push
sub
ficoms
inc
mov
xchg
in
mov
mov
add
daa
add
pop
shlb
mov
xor
mov
scas
std
jb
inc
movsb
sbb
push
sbb
jmp
adc
sti
in
adc
and
sub
xor
cmp
mov
in
xchg
fisubrl
xor
fildl
mov
negb
out
js
rcll
test
lret
data16
mov
sbb
mov
repz
pop
pop
cs
pop
sub
in
hlt
jge
cli
mov
jg
dec
mov
add
adc
jnp
add
dec
xchg
test
adc
int3
rcrb
pop
dec
icebp
jecxz
loopne
cmp
test
ss
aam
inc
hlt
lahf
shll
pop
je
cmpsb
mov
mov
mov
and
rcl
pop
cmpsl
addb
sub
sub
dec
lret
imull
push
insl
sbb
xchg
jle
adc
lahf
pop
cmp
pop
fnsave
test
fmulp
dec
xchg
jmp
xlat
jbe
cli
jns
pop
loope
imull
movsb
add
xchg
mov
orl
aad
pushf
add
test
scas
jl
in
adc
sub
shlb
packssdw
std
inc
clc
pop
sub
insb
add
mov
adc
ss
and
ffreep
xchg
cwtl
mov
daa
adc
je
xor
cmpsb
or
sub
jmp
jp
sbb
into
xchg
lods
inc
ret
shl
mov
mov
and
mov
mov
sub
fcomps
jl
leave
cmp
in
mov
jp
inc
outsl
mov
dec
out
push
scas
lcall
out
pop
movsl
out
adc
mov
push
fwait
inc
add
jbe
ret
sbb
inc
lret
mov
insl
cmp
cmpsl
push
popf
and
jg
es
mov
cli
cmp
inc
pop
mov
mov
mov
mov
js
fnstcw
push
fdivl
xor
sub
out
cli
push
or
fwait
mov
adc
ficompl
lret
xchg
jnp
mov
fildl
lea
aas
popa
mov
adc
js
mov
das
inc
or
jns
push
popf
sbb
push
sahf
xor
js
ljmp
nop
sti
xchg
mov
addr16
dec
mov
ljmp
out
subb
stos
sub
mov
sti
cld
adc
js
adc
loopne
mov
inc
fcoml
arpl
jle
aas
mov
mov
movsl
jnp
enter
mov
mov
lcall
sar
bound
lds
js
xchg
jmp
xlat
rorb
push
mov
xchg
out
pop
and
sub
xor
aad
push
fsubl
lret
dec
sub
and
cmp
mov
pop
lock
test
mov
in
mov
daa
aad
pop
push
adcb
and
dec
push
aas
lds
gs
sbbl
fcmovu
int
push
cld
sbb
mov
out
pop
call
cld
nop
sbb
lcall
nop
repz
inc
and
sbb
mov
mov
cmp
outsb
scas
int3
jbe
shll
push
es
clc
sbb
cs
xchg
ljmp
test
xchg
cmp
cltd
fsubrl
mov
jno
inc
adc
lea
orb
popa
adc
inc
inc
adc
filds
lods
mov
mov
ja
lds
mov
stos
int3
cltd
inc
test
icebp
outsb
popa
cmp
cmp
pop
jle
test
dec
cmpsl
pop
xor
fisubrl
jmp
jno
repnz
xchg
cmpsl
cmp
cmp
fisttpl
cwtl
ja
stc
popa
xchg
imul
jne
push
xchg
pop
fsubl
cmp
cmp
xchg
clc
xchg
adc
adc
pop
jle
mov
mov
movsb
dec
shll
int3
pop
push
test
add
shll
mov
mov
dec
mov
subb
mov
mov
ret
xchg
pushf
nop
lea
int
or
inc
sub
sbb
dec
cwtl
cs
pusha
lods
and
sub
inc
cmp
xchg
rcll
or
and
adc
subb
scas
ds
push
lahf
mov
mov
into
out
in
into
or
jl
mov
test
std
fs
sub
xor
int3
movsl
mov
test
mov
push
adc
jno
jl
xchg
outsb
mov
sahf
sub
aam
mov
inc
mov
mov
andl
sbb
mov
fsubs
imul
pushf
daa
lock
sub
inc
mov
xchg
cmpsb
loope
xchg
fimuls
mov
cmp
mov
sbb
lcall
jg
or
mov
xchg
jl
add
xchg
cmp
js
mov
inc
add
clc
dec
popf
sub
lods
popa
rclb
push
scas
int
outsl
cmp
mov
subl
pushf
mov
scas
jae
out
push
xor
in
fisubrl
cltd
lock
in
add
pop
nop
xchg
inc
xchg
and
mov
jp
mov
inc
xor
and
cli
adcl
icebp
sti
pop
aas
fwait
pop
cmpsl
mov
adc
mov
adc
xor
addr16
xor
out
xchg
dec
xor
in
push
in
pop
out
in
pop
mov
stos
in
xor
jmp
mov
push
add
arpl
fsubrl
mov
push
mov
pop
push
mov
aaa
cwtl
jns
fisttps
xchg
out
pop
aad
ss
or
cmp
push
cmpsb
ja
scas
cmp
pop
cmpsl
icebp
cmp
fistpl
mov
add
popf
roll
lret
icebp
enter
adc
lods
lods
jl
daa
mov
xchg
push
cmp
inc
cmp
js
imul
sub
arpl
lret
out
jns
mov
mov
mov
rcl
cld
xor
pop
xchg
ja
popl
push
lods
iret
fldt
mov
test
ret
mov
pop
pushf
cltd
add
mov
fs
sbb
jg
xchg
sub
add
cmp
xor
pop
xchg
sub
sbb
mov
ljmp
sbb
and
aas
or
pop
sarb
arpl
iret
into
out
pushf
testb
outsl
adc
inc
fists
rclb
push
xchg
fcmovbe
cmp
outsb
jmp
xchg
sbb
pop
push
inc
sahf
call
mov
add
adc
mov
inc
push
mov
adc
insb
or
rol
inc
or
int3
mov
cmp
cmpsb
push
ljmp
je
push
fstpl
jae
pop
jecxz
icebp
xchg
jp
loopne
cmp
lret
clc
loop
negb
mov
jp
push
aas
aaa
xchg
pushf
in
mov
fadd
pop
outsl
aad
dec
adc
pusha
inc
inc
pop
add
addr16
sbb
insl
push
cs
nop
daa
xor
push
jno
sub
mov
in
std
push
sbb
and
xchg
cltd
ds
out
or
popl
and
pop
stos
sbb
bound
cmpsb
jle
mov
mov
xor
shr
clc
fisttpl
lahf
or
pushf
mov
lcall
add
insl
clc
mov
add
fnstsw
or
call
or
push
xchg
stos
cmp
pop
inc
xchg
jnp
pushf
adc
andb
in
inc
out
push
cld
or
test
fisubrs
outsb
sar
stos
sbb
mov
rcrb
dec
inc
adc
in
inc
bound
fwait
subb
cmp
pop
loopne
repnz
into
test
pop
aaa
push
movsb
in
movb
xchg
sarl
dec
add
jp
dec
inc
mov
mov
xchg
fldcw
jle
dec
fmul
ret
iret
int
rclb
ljmp
adc
lods
enter
dec
add
arpl
mov
lahf
jbe
dec
push
sbb
mov
and
or
mov
in
dec
or
ss
out
sahf
pop
cmp
push
cmpl
ss
adc
cwtl
adc
mov
mov
mov
outsl
xor
or
pop
cmpsb
dec
in
je
push
sbb
sub
push
ds
dec
into
xor
fisubrl
scas
pop
mov
cmpsl
data16
push
jo
mov
inc
mov
mov
enter
fincstp
sub
stos
cld
aad
or
or
stc
daa
ret
cmpsl
dec
js
dec
pop
int3
pop
int3
jl
stc
pop
test
cmp
int3
or
mov
aas
dec
or
xchg
jmp
fwait
or
or
int
push
mov
test
mov
and
inc
into
popf
or
and
adcb
call
test
jns
adc
add
cli
pop
je
dec
fidivrl
ds
imul
or
cmp
add
ret
and
ficompl
imul
push
mov
pop
sbb
pushf
sub
call
and
mov
xorb
cmpsl
mov
mov
xor
paddd
shlb
xchg
test
fwait
add
pop
push
scas
add
dec
or
stos
pop
cmp
mov
jne
lock
mov
push
out
daa
outsl
lods
aam
xor
popf
or
dec
pop
cmpsl
imul
fcmovne
cmp
jns
push
je
adc
or
or
jns
ret
rcll
daa
std
ret
push
mov
sbb
test
jp
fdivrs
push
test
mov
out
cld
xchg
ret
loope
lock
sub
mov
or
hlt
jge
es
rcr
cmp
repz
cmp
dec
imul
push
je
imul
bound
pop
movsl
push
inc
jmp
add
mov
ret
in
cltd
xor
stos
xchg
push
ljmp
orb
or
in
daa
mov
pop
jmp
xchg
jl
and
mov
addr16
nop
cmp
mov
jae
aam
pop
lods
test
or
out
cwtl
push
add
shrl
and
mov
cmpsb
cmc
mov
cmp
xor
mov
xchg
and
sbb
push
out
sbb
aaa
cmp
mov
inc
movsl
imul
push
mov
sbb
das
call
mov
jnp
arpl
xchg
popf
dec
push
mov
sbb
aam
mov
cltd
cmp
loopne
pop
in
jb
jnp
iret
test
ja
cmp
cld
fdivl
test
jae
xor
sub
sbb
dec
cmpsb
das
add
or
aas
sbb
cmp
dec
roll
test
mov
pop
addl
jmp
add
mov
movsb
or
xor
inc
int3
cmp
jmp
imul
mov
ss
pop
inc
clc
jl
int
mov
insb
fistpll
pop
ja
sbb
or
pop
sti
adc
in
repz
mov
xchg
adc
lock
fsubrl
ja
neg
insl
cwtl
mov
mov
ss
out
push
jecxz
jg
movsl
insb
sbb
inc
faddl
jnp
jg
push
lea
lcallw
inc
sub
mov
sahf
clc
sbb
xor
add
mov
cmp
jecxz
aam
aam
insl
mov
push
xchg
xchg
add
dec
leave
stos
xchg
je
cmpl
or
stos
mov
fisubrs
repz
repnz
js
jae
out
sbbl
sbb
mov
cmp
push
dec
jns
sbb
sub
loopne
and
rolb
testb
repz
sbb
dec
int3
insl
js
nop
in
cmp
cmp
adc
push
outsl
mov
inc
push
shll
mov
push
sub
lods
mov
sub
push
push
sahf
lods
xor
push
fsubs
push
pushf
xor
mov
clc
xorl
sti
push
popf
jo
inc
daa
mov
shr
mov
cld
nop
mov
into
fwait
test
cmp
loopne
pusha
adc
push
dec
dec
xor
fldl
and
out
sahf
sbb
sbb
xchg
sbb
aam
jno
ljmp
int
and
cltd
mov
or
rcl
or
shll
call
and
sbb
enter
mov
outsb
xchg
sbb
hlt
mov
and
jbe
xlat
outsb
data16
pop
mov
mov
shl
in
jge
jae
pop
js
outsb
out
subl
das
fwait
lods
or
sti
jmp
popf
push
ret
xorl
lock
roll
or
mov
inc
dec
iret
bound
jg
mov
jg
mov
lods
xchg
add
mov
mov
enter
jl
ljmp
call
or
aaa
sub
adc
int3
ds
xchg
cmpsl
daa
clc
xchg
scas
es
pop
xor
pop
xchg
xchg
pop
out
jb
jno
movsb
jmp
adc
mov
frstor
and
in
add
xlat
in
dec
mov
popf
pushf
push
test
icebp
mov
inc
fsts
mov
xchg
out
dec
cwtl
repnz
cmp
pop
outsl
lds
dec
pop
mov
jae
aad
push
sbb
arpl
mov
jl
inc
ds
mov
xor
mov
adc
add
test
daa
outsl
call
mov
adc
mov
push
popf
jns
add
mov
jo
xor
add
ds
lea
lret
mov
sarl
fmuls
sbb
out
lcall
je
icebp
int
dec
shld
test
and
ja
xchg
mov
out
adc
cld
xchg
sbb
test
push
jl
cld
and
cmp
xchg
addb
mov
jns
jg
ret
cmpsl
sub
loop
je
sbb
mov
cmp
call
ret
scas
lcall
sub
add
leave
mov
cmp
pushf
leave
fistl
push
rcll
ss
xlat
inc
sbb
xchg
outsl
xor
orl
sub
cmpps
lcall
mov
inc
jl
push
out
out
mov
mov
and
sub
in
std
xor
out
lods
sti
mov
push
aas
and
test
dec
add
mov
jmp
fstpt
and
ja
std
out
lea
fsubrl
fisubs
push
jbe
mov
mov
movsb
lods
imul
dec
pop
fsubrs
inc
sbb
mov
mov
lret
inc
ret
mov
sub
pop
push
add
stos
dec
jae
fsub
shl
adc
add
ljmp
jns
hlt
inc
out
das
add
imul
mov
insb
faddl
das
adc
cmp
cltd
fnsave
sbb
pusha
outsb
add
mov
jo
xor
popf
pusha
push
int3
sti
rcrl
mov
cmc
and
rcll
ljmp
popa
vmread
lods
pop
jo
xor
popf
jne
mov
jge
mov
ret
fstl
and
dec
jmp
sbb
push
mov
std
test
cltd
mov
lret
js
jns
sbbb
dec
xchg
jp
lahf
jp
aad
jne
popf
repz
movb
sbb
adc
add
cmpsl
mov
jmp
cli
xor
cmc
sbb
xor
cmpsb
hlt
mov
sub
xchg
sbb
mov
or
jmp
ja
pop
dec
jecxz
pop
daa
mov
lods
dec
pop
dec
jnp
in
aas
inc
stc
dec
add
ja
mov
sbb
mov
es
out
mov
sbb
les
add
pop
mov
cmp
lock
cmp
into
iret
andb
sbb
inc
inc
pushl
xor
jae
xor
out
bound
leave
adc
fldcw
push
mov
push
cli
stc
shlb
mov
jbe
cwtl
inc
aad
in
out
mov
mov
jno
push
and
pop
cmc
sub
fmull
dec
cld
and
stc
aam
sbb
jle
jg
or
and
jne
popf
mov
xor
push
jg
xor
sti
mov
xchg
push
mov
pop
dec
in
js
and
pop
cmc
arpl
sub
adc
or
and
or
inc
push
bnd
pop
xor
jecxz
std
xchg
dec
lret
dec
push
mov
push
lret
movsb
jae
xor
je
pushf
outsl
mov
lret
adc
push
inc
mov
and
mov
mov
and
int3
mov
lods
mov
xchg
scas
sub
jne
mov
and
jb
sahf
cmc
mov
fidivs
sub
pop
dec
lahf
dec
push
sbb
rol
outsb
frstor
std
testb
xor
movsl
cmp
aad
icebp
adc
aaa
fs
aas
movsl
cmp
gs
loopne
js
inc
jge
stos
sbb
lret
imul
adc
sbb
sbb
js
inc
jae,pt
or
mov
out
sbb
dec
and
repnz
push
out
sbb
test
scas
sub
fbstp
imul
test
jae
mov
push
movsl
pop
mov
and
addr16
pop
addl
and
je
push
or
inc
xchg
jnp
xorl
stc
nop
fadds
lcall
adc
cmc
cmp
pop
adcb
fbld
mov
pop
out
hlt
lods
cmp
push
jo
dec
jns
in
insb
inc
inc
mov
jns
cmp
cld
xchg
sub
cmp
daa
outsb
out
icebp
xor
xor
jne
mov
inc
push
int3
sbb
xor
lods
mov
test
shlb
push
mov
xor
sbb
mov
pop
ja
sub
aam
mov
pop
dec
and
js
sub
sahf
repz
xchg
xlat
repz
sbb
pop
inc
and
ficoml
inc
flds
cmc
pop
inc
mov
shrl
or
or
fs
xchg
add
shll
in
jecxz
pop
xchg
xchg
nop
call
jns
pop
adc
test
sbb
das
into
scas
sub
cmp
and
and
adc
enter
jo
pushf
mov
ret
sbb
lahf
push
mov
cwtl
call
xchg
scas
imull
pop
sbb
lock
cmp
push
insl
sub
and
stos
xor
lcall
inc
push
insb
xor
test
inc
mov
xorl
push
push
xchg
in
aaa
xor
mov
cmp
and
jl
lock
out
add
fwait
out
cmpsl
cmp
fbstp
dec
push
fwait
and
mov
add
mov
ret
sbb
lcall
lods
mov
jo
dec
iret
mov
mov
xor
cmp
inc
std
or
cmp
and
arpl
mov
inc
push
je
pushf
das
ret
mov
in
mov
xchg
loope
fwait
mov
and
and
out
iret
mov
mov
sub
imul
popa
lret
out
aad
add
test
push
les
push
mov
cwtl
sub
fidivrl
and
gs
dec
mov
mov
mov
xor
mov
jo
push
loop
jnp
xchg
les
sub
sub
sub
adc
ss
push
je
jmp
sbb
enter
xlat
test
shll
push
lds
jae
lcall
push
sub
jl
movsl
jg
jbe
xchg
cmpb
mov
xchg
push
ret
pop
dec
rcrl
mov
outsl
outsb
movsb
rcrb
lret
fnstsw
mov
popa
add
mov
fisubs
push
lahf
pop
insl
lret
xchg
mov
inc
in
loope
cli
adc
xor
mov
jb
pop
xchg
pop
addb
xchg
lcall
ss
pop
das
stc
popf
add
jmp
cmp
es
es
sub
push
mov
out
lret
lea
push
jmp
shlb
push
pop
add
sub
push
mov
or
popf
lods
push
add
mov
mov
lock
int
popa
and
loope
dec
loop
mov
jae
jmp
jo
dec
es
jnp
cld
lock
adc
xchg
jbe
and
test
jmp
add
xlat
xor
dec
out
pusha
movsb
jne
shrb
mov
pop
icebp
andb
inc
rol
ret
mov
ffree
jmp
xor
stos
test
sub
in
cmpsb
pop
lock
or
mov
inc
push
addr16
fcomip
or
mov
jmp
pop
outsl
daa
add
xchg
add
cmpsl
push
mov
test
mov
mov
or
push
mov
lahf
xor
push
test
lcall
stc
adc
rep
popf
xor
xor
xor
adc
cmp
jmp
aas
dec
cmp
add
std
add
repz
ljmp
loopne
pushf
cli
movsb
push
cltd
test
jbe
and
pushf
cltd
xor
insb
movsl
push
mov
or
push
inc
adc
or
add
mov
les
xchg
jne
add
jge
enter
inc
pop
lret
and
mov
lods
cld
lcall
in
jne
mov
stos
cmp
ret
cltd
aam
and
mov
addr16
cmc
pop
add
xor
mov
add
mov
xchg
mov
cld
push
in
cmp
xor
adc
jbe
mov
jnp
ret
pop
shll
lock
das
mov
dec
loop
mov
pop
leave
pop
sbb
in
jno
outsb
push
push
or
and
imul
std
inc
out
inc
imul
roll
movsb
pop
fdivl
lcall
cltd
jl
adcl
cli
xchg
xor
call
popa
lret
jg
or
adc
jp
sub
pop
adc
cmp
dec
ljmp
xchg
fistl
adc
mov
test
jo
or
shlb
push
cltd
mov
pop
pop
add
push
cli
dec
or
lock
jne
or
push
jo
dec
fsubr
xchg
aaa
stos
fimull
sub
rcl
ss
cmpsl
outsb
and
pop
lahf
xor
mov
gs
insb
ja
test
pop
arpl
or
sub
or
bound
xor
inc
inc
mov
ljmp
inc
lods
ss
fadds
sub
cmp
xor
nop
or
xor
mov
sbb
ljmp
js
fwait
push
mov
dec
cld
push
jb
xchg
dec
push
roll
in
movsb
sbb
das
ljmp
aaa
stos
lods
jne
xchg
xchg
jae
dec
movsl
repz
ds
imul
aam
push
pop
cmp
icebp
lods
notb
jg
andb
loop
ret
sub
loope
jmp
mov
mov
cwtl
xor
or
in
jnp
or
jns
out
mov
push
and
jmp
out
add
cli
dec
pop
or
xlat
mov
add
andl
cmp
xor
fstpt
out
dec
push
push
sub
bound
push
addr16
stc
and
mov
or
inc
xor
and
push
mov
pop
cmp
mov
mov
mov
mov
mov
fdivr
adc
adc
lret
ljmp
cmpsb
mov
dec
bound
test
add
pop
mov
dec
stos
mov
xchg
daa
cltd
fcmovne
mov
les
pop
jo
adcl
cmpsl
inc
fstpt
pusha
ret
mov
outsb
jnp
jns
mov
mov
fadds
push
add
and
jne
push
cs
mov
out
sub
xor
cmp
xor
add
les
mov
jmp
inc
xor
fnstenv
test
not
inc
fwait
lcall
and
add
repnz
mov
inc
sti
push
orl
jns
mov
pusha
or
push
call
xchg
push
jo
pop
cmp
dec
shl
test
jbe
mov
sub
add
cmp
sbb
pop
dec
loopne
std
cmp
sub
andb
lahf
sub
mov
adcb
cwtl
jbe
sbb
int3
or
ret
insl
sub
les
rcrl
out
pusha
repnz
sub
fildll
xchg
test
stos
stos
jmp
jmp
cmp
dec
fwait
pop
lea
mov
and
fs
jo
add
cs
aam
cmp
xchg
cmc
xor
pop
push
add
fisubrl
push
call
cs
xor
pop
mov
loope
lret
out
aas
sbb
xor
pop
in
xor
mov
mov
pusha
aaa
stos
pop
mov
pushf
mov
inc
adc
mov
loopne
nop
daa
les
add
pop
std
lods
mov
stc
nop
adc
jp
repnz
pop
xchg
scas
xor
inc
lods
or
icebp
ds
push
aas
mov
cmp
sub
in
and
cmp
test
sub
push
inc
in
iret
test
lret
mov
mov
mov
xchg
add
push
jnp
sahf
pop
ja
jp
popa
adc
jge
mov
popa
test
fs
mov
test
jecxz
icebp
out
push
jle
xlat
das
je
mov
lret
imull
call
aam
xchg
mov
in
push
enter
stc
inc
pusha
pop
jb
movsl
icebp
push
cmpsb
xor
cli
add
addl
jae
or
xor
sub
dec
in
repnz
aaa
xlat
sbb
push
lock
and
push
pop
and
mov
xchg
sub
arpl
mov
dec
movsb
fidivrl
push
aas
push
das
out
xor
ss
dec
test
es
xor
sbb
rorl
cmp
mov
xor
and
ss
dec
pop
aaa
mov
adc
js
int
mov
push
cltd
xor
mov
aam
addr16
sbb
mov
rcrl
sub
movsl
loop
inc
dec
mov
xchg
in
adcl
and
nop
fst
lret
imul
mov
sbb
repnz
mov
sbb
sbb
out
dec
pop
pop
xor
inc
mov
inc
cmp
loop
add
lods
push
jo
and
sub
aaa
dec
sbb
and
sub
mov
jb
into
dec
ss
rcrb
aad
cmpsl
jmp
push
test
cmc
push
jns
aam
mov
cli
adc
mov
cmp
adc
rcl
rolb
hlt
mov
dec
push
jp
movsb
inc
test
add
dec
cmp
loope
stos
adc
and
andb
lcall
inc
xchg
fwait
or
fcompl
ffree
stc
push
sub
fwait
add
pop
sub
and
or
movsl
xor
popf
gs
stc
xchg
add
scas
mov
or
add
jne
jne
jae
aas
test
lahf
loopne
mov
mov
jnp
cmpb
movsb
and
add
sbb
inc
cli
or
rorb
stos
push
jb
dec
inc
inc
les
inc
std
xchg
jecxz
mov
in
test
or
es
fsubp
jle
lcall
xchg
jo
in
xor
sub
push
adc
ret
lcall
fwait
lock
dec
es
cltd
adc
sbb
sbbb
popf
loopne
adc
ret
mov
insb
mov
insb
xchg
mov
int3
push
cltd
push
pop
sbb
iret
aaa
and
mov
pop
stos
ret
xor
movsl
out
sbb
fidivrl
xor
mov
jne,pn
cs
mov
add
push
les
loopne
test
movsb
adc
sti
inc
cmp
sub
xor
aam
or
mov
xor
mov
insl
ret
out
insl
shlb
popa
loopne
cwtl
mov
xor
clc
pop
movsb
push
lods
movsl
cld
mov
je
loopne
orl
les
mul
imul
mov
mov
aaa
mov
or
dec
pop
mov
jmp
sub
push
imul
daa
imul
dec
shrl
outsb
aam
adc
mov
dec
in
mov
push
test
jb
jb
xchg
movsl
xor
mov
mov
pop
idivb
aad
test
ja
in
and
push
lds
shrb
cmp
icebp
cli
cwtl
xor
push
xlat
sbb
into
pop
pushf
aas
adc
jl
dec
pop
pop
sahf
pop
shrl
mov
fidivs
jge
cmp
push
pop
or
fmuls
imul
inc
into
in
mov
jl
mov
ret
pop
lock
cmc
pusha
cmp
dec
mov
mov
cmc
sti
sub
fadd
ret
dec
jge
push
stos
mov
cli
pop
fildl
int3
and
dec
adc
mov
sarb
push
adc
xlat
dec
jmp
or
movsl
int
cmp
aad
nop
arpl
mov
pop
lds
or
and
mov
gs
jecxz
mov
cli
in
scas
sub
ss
js
xchg
jge
dec
mov
in
insl
mov
ja
add
mov
in
jmp
out
cmp
mov
and
jle
inc
mov
shrb
stc
inc
incl
imulb
fbld
ljmp
orb
cmpsb
push
lods
in
cld
outsl
movsb
nop
xor
test
jbe
loop
dec
fcoms
add
sarb
andl
scas
mov
add
cld
in
orl
jb
pop
fdivr
mov
sub
push
mov
insl
loop
mov
scas
or
cli
fists
inc
fucomip
jbe
movsl
cmp
je
loope
inc
ret
pop
jne
dec
jmp
out
gs
mov
xchg
in
sbb
je
pop
outsb
sarl
mov
inc
sbb
aam
test
notrack
jnp
and
das
mov
call
out
sub
cli
sarl
or
mov
mov
or
jmp
sbb
scas
jge
cmp
in
fstps
enter
je
into
xchg
adc
addl
addb
std
pushf
divb
rcll
mov
addr16
data16
pop
lret
mov
sbb
jno
pop
push
cmpsl
push
cmpsb
cwtl
bound
jg
mov
mov
ret
xchg
cmp
mov
sub
out
fcomps
lea
adc
int
cltd
hlt
adc
mov
xchg
sub
or
cs
sbb
mov
decl
cs
jl
jecxz
mov
imul
hlt
into
jecxz
xacquire
sbb
shll
scas
mov
lret
sbb
sbb
mov
ret
cmp
xchg
jb
sbb
clc
or
out
mov
mov
cwtl
sarb
xlat
fs
jecxz
push
sahf
push
jno
xchg
mov
addr16
xchg
jae
pushf
out
push
sbb
pop
push
sbb
xchg
add
mov
inc
or
xor
adc
jo
jge
cmp
push
jmp
ss
loop
xor
rorl
push
sub
sub
mov
cltd
in
sti
adc
lret
cmp
mov
enter
jl
adc
jp
sti
cmp
subb
outsb
sarl
pop
adc
or
push
xchg
jl
jecxz
jge
fiaddl
mov
and
sbb
push
imul
xchg
leave
mov
xor
fistps
dec
mov
test
arpl
cmp
xorb
add
sbb
fisubs
iret
cld
test
test
lret
js
int
xchg
sub
or
push
pusha
daa
mov
cmp
addl
mov
xchg
rcl
imul
jge
inc
mov
xor
insl
test
jp
cmp
push
outsl
imul
enter
mov
add
je
cmp
pop
cli
ret
xchg
or
xchg
aas
push
or
dec
mov
aad
xor
in
les
pop
push
or
cld
test
inc
pop
les
dec
aas
shl
sbb
les
cmpsl
sbb
pushf
xchg
test
lods
cs
aad
int3
lret
add
test
dec
sbb
stc
in
lods
cmp
pop
popa
lods
lock
pop
jb
xor
sub
sbb
cmpsb
jne
fcomps
adc
lods
pop
and
leave
pop
jg
ss
jo
out
mov
cli
pushf
in
sub
cmp
mov
cmpb
outsb
jnp
pusha
or
cs
dec
outsb
hlt
mov
pop
ja
shll
loope
enter
push
ljmp
or
insl
add
cs
ds
sbbb
jns
shr
mov
inc
aaa
leave
mov
sti
in
in
cmpl
fwait
leave
jbe
xchg
int
cli
jne
outsl
pusha
ja
int
xor
lea
mov
mov
adc
mov
mov
dec
jno
incl
jbe
dec
xor
lcall
adc
sub
lock
sbb
cmp
cmp
push
ljmp
jl
sub
test
mov
fs
nop
repz
call
fcompl
and
imul
ss
ljmp
push
cmpsl
xlat
xchg
push
cmc
sbb
stos
into
addl
and
push
dec
cmp
cmp
lds
or
pop
sbb
outsb
cmp
sti
mov
xchg
sbb
stc
imul
in
adc
mov
jno
outsl
outsl
sbb
push
dec
lret
icebp
sub
data16
es
daa
mov
pop
imul
lret
cmp
sub
pop
mov
mov
fimuls
add
imul
orb
mov
mov
adc
cli
daa
add
addl
jg
adc
jp
sub
xor
dec
lock
test
cmc
ja
bnd
repnz
insb
mov
push
out
leave
sbb
jg
test
sbb
cmp
jmp
mov
and
stc
pop
mov
sub
js
popf
into
xchg
adc
or
pop
cmp
inc
fcomps
xor
add
add
pop
xchg
jbe
orl
mov
stos
inc
jp
icebp
rclb
lods
inc
and
push
inc
rcrl
xchg
rorl
or
jp
cs
push
inc
je
lock
mov
dec
iret
cmp
ds
mov
jp
adcl
mov
pushf
xchg
cmpsb
pop
jae
push
and
mov
mov
bound
mov
stc
das
sub
push
insb
pusha
dec
out
cmpsl
jp
nop
out
je
sbb
dec
pop
imul
or
add
sarl
sbb
loopne
fbld
jecxz
ja
or
xor
out
es
or
sbb
ds
cmp
xchg
xchg
in
fmuls
lock
add
mov
adc
xchg
insl
dec
sub
sbb
adc
popf
or
add
and
pop
data16
aad
sbb
addr16
and
xchg
cmc
fcmovne
fs
popf
jnp
aaa
lods
jbe
pop
pusha
push
fcompl
fucomp
cmpl
xor
mov
sbb
repnz
ds
sti
xor
jmp
insb
nop
mov
lret
xor
mov
mov
sbb
push
jb
stos
jo
pushl
xchg
das
stc
pop
or
fpatan
test
or
add
ret
push
jecxz
jbe
jb
and
inc
fidivl
fwait
add
lods
aad
ss
adc
xchg
inc
bound
inc
lock
push
les
xchg
fstpl
fnstsw
push
or
loope
dec
in
loopne
adcb
insb
jnp
cmp
insl
and
mov
loop
mov
inc
es
jo
pushl
rcl
test
aas
or
cmp
add
jl
arpl
daa
testb
xchg
sbb
movsl
inc
lods
mov
inc
and
and
stos
fsub
test
inc
xor
mov
fnop
daa
dec
out
inc
mov
imul
mov
add
xchg
in
in
and
mov
jbe
daa
int3
cli
test
xor
dec
pop
adc
imul
push
xor
aaa
lods
popl
pop
adc
mov
idivb
mov
push
push
lock
cmp
pushf
jle
jmp
fidivl
pop
loop
mov
mov
xchg
fdivrs
xchg
out
aad
push
pop
pusha
popf
push
pop
stos
fistpl
xlat
sti
mov
push
mov
ja
fistpll
push
arpl
pop
xchg
and
popf
jbe
sti
cmpsl
mov
xor
push
sar
mov
sbb
jae
sbb
insb
xchg
cmp
xchg
dec
shll
jb
in
pushf
lcall
push
loop
add
dec
iret
adc
stc
test
stos
add
cmc
cwtl
add
push
mov
iret
sti
xchg
decb
test
xor
loopne
daa
popf
add
mov
cwtl
stos
xchg
mov
sbbl
insb
sub
es
dec
cwtl
jg
cmpsb
pop
imul
shrl
jmp
loopne
pop
dec
sbb
inc
std
or
jne
mov
mov
imul
ror
sub
fildl
jbe
cmp
xchg
pop
fildl
add
pop
cmpsb
shll
sub
mov
add
dec
loop
stc
sbb
cmp
push
aaa
add
cmpsb
lahf
pop
popa
stos
lods
repnz
jle
and
les
test
pop
lock
add
out
mov
pop
push
jae
out
xchg
adc
test
shrb
icebp
ret
loop
and
cmpsl
lds
mov
sbb
push
or
xchg
and
jp
aas
dec
gs
inc
cmp
enter
cmp
movl
std
lcall
in
add
jbe
dec
xchg
adcl
mov
mov
pusha
mov
popf
jge
dec
cltd
push
xchg
testb
pop
rcr
mov
xchg
dec
cld
iret
std
les
mov
fisubs
pusha
rorb
repnz
cli
ret
sbb
int3
mull
sub
or
cmc
push
dec
pop
testl
jo
cmp
sbb
and
mov
sbb
iret
jae
test
rolb
inc
int
add
jbe
mov
shlb
pusha
shl
in
sbb
call
xchg
stos
mov
mov
xchg
mov
sub
cmp
ja
pop
dec
pop
and
mov
lret
xchg
jae
outsl
lea
flds
popa
les
xor
inc
sub
push
popl
jmp
lea
aam
dec
pop
push
inc
mov
xchg
insb
cli
mov
test
and
adc
cmp
dec
out
xor
insb
pop
dec
push
jno
dec
es
cmpsb
sbb
aaa
mov
insl
add
pop
cmp
add
sub
and
xor
xchg
outsb
fnsave
stos
movsl
push
adc
shl
jns
shrb
jle
lds
enter
pop
shl
jp
ret
jg
inc
pop
jp
daa
pop
jb
fwait
repnz
int
pop
fs
xchg
in
lds
testb
push
xlat
or
xor
stc
gs
sub
mov
lret
ds
dec
fcmove
fstpt
scas
sbb
xorb
ret
loopne
pop
fwait
sti
mov
push
mov
or
cs
sbb
popa
xsha256
cmpsb
xchg
push
and
inc
aad
leave
mov
cmpsl
mov
imul
sbb
test
sub
stos
xchg
lods
popf
hlt
mov
lods
jp
cwtl
cmpsb
into
shrb
enter
outsb
sbb
xor
sub
icebp
dec
sbb
jle
pusha
testl
jle
cvtpi2ps
xchg
cmpsl
inc
mov
sub
shl
jmp
into
ficompl
lret
pop
fwait
je
mov
in
test
enter
cmpsb
imul
stc
je
frstor
leave
push
lea
ficoms
inc
jmp
jge
inc
out
mov
jmp
mov
testb
push
push
rcll
popa
push
mov
arpl
stos
push
inc
imul
fs
dec
fs
cwtl
and
jg
sub
mov
addl
sti
inc
and
mov
or
cmp
outsl
mov
dec
pusha
popf
inc
popa
mov
test
into
adc
jno
cmp
fdivs
cmp
mov
rep
xchg
jl
sub
mov
pop
mov
inc
sbb
sbb
fucomp
mov
decb
xor
xor
xor
jns
sbb
lock
cltd
clc
push
inc
sbb
ret
sub
push
shlb
stos
cld
xchg
sbb
out
xor
inc
xorb
pushf
jg
ja
sbb
dec
loop
mov
out
mov
leave
lock
cmp
sbb
cmp
or
sarb
add
insl
imul
notb
fdivrl
and
popf
jmp
sahf
lea
and
stos
pop
pop
and
rcr
loope
pusha
in
sub
or
cmp
daa
jmp
loop
jp
inc
sarb
dec
pop
cmp
or
push
les
sbb
push
jecxz
xchg
inc
fisubl
js
dec
push
cmpsb
cmp
and
leave
lods
je
test
scas
sub
inc
loopne
ljmp
push
push
outsb
aas
mov
and
ljmp
and
std
jecxz
fdivrs
dec
rdpmc
fiadds
out
loop
sbb
das
shll
aam
adc
sbb
sub
icebp
sbbb
pop
iret
fcoml
push
outsb
jl
pop
pop
inc
xchg
xor
mov
add
xchg
mov
dec
hlt
addr16
pop
in
pusha
or
cmp
xchg
xor
add
xor
icebp
movsl
adc
shl
int
push
lea
push
hlt
outsb
data16
pushf
adc
push
jne
into
inc
hlt
push
push
insl
jmp
cmp
adc
xor
inc
push
dec
sbb
fisubs
and
mov
xchg
pop
aaa
pushf
hlt
xchg
sub
jge
xlat
daa
mov
pop
jne
fbld
inc
or
mov
aad
jg
pop
ret
int3
mov
xchg
imul
sub
insb
ds
jecxz
repnz
bound
pop
xchg
stos
ds
popa
mov
lds
and
cltd
inc
movsl
inc
jae
inc
into
xor
jl
and
test
cs
mov
mov
bound
sbb
lods
outsl
ret
lahf
stos
push
mov
je
jno
push
mov
scas
jne
scas
cmp
insb
rorl
mov
call
inc
aam
push
nop
jno
in
fwait
data16
sub
pushf
xor
stos
iret
dec
lret
std
adc
stos
addr16
xor
cmpsb
pop
int3
sbb
mov
insb
dec
sbb
or
jnp
and
lock
je
and
lods
sub
push
sti
scas
test
lea
dec
lret
shll
push
adc
mov
sub
lret
lret
popf
stc
vmwrite
jle
xchg
popf
cwtl
xchg
dec
push
dec
and
cmp
jnp
sub
xchg
cmp
pushf
test
xorb
xchg
cmp
nop
xor
add
mov
test
iret
subb
and
shl
add
and
andb
inc
repnz
cmc
jae
adc
push
nop
vandnps
pop
notb
mov
push
iret
gs
mov
add
jne
pop
loope
mov
outsl
lret
cmp
mov
fisttpl
mov
pusha
out
movsl
inc
dec
xlat
push
sbb
ja
test
sbb
jle
stos
sub
loope
imul
xor
push
nop
mov
xlat
and
in
pusha
mov
imul
mov
xlat
push
out
pop
sahf
out
add
fnsave
cmp
and
fnstenv
ret
repnz
mull
inc
ss
push
out
xor
xchg
rcrl
xor
hlt
pop
lds
ja
mov
aaa
sti
and
jns
repz
jo
fstpt
mov
pop
mov
xchg
inc
popa
or
movsl
or
push
hlt
shl
and
push
adc
ret
xor
mov
aas
inc
cli
inc
inc
loope
lock
mov
cltd
mov
mov
cmp
ficompl
add
aas
inc
push
inc
cmc
pop
in
negl
inc
lods
and
inc
out
push
fidivl
add
dec
pop
push
xchg
cltd
jbe
enter
jmp
icebp
xor
test
mov
fldl
jo
jne
mov
lcall
pushf
lret
sub
lods
stos
lock
inc
les
mov
xor
aaa
xchg
add
fwait
fwait
in
and
or
repz
or
ret
outsb
dec
fcmovbe
mov
dec
sbb
fisttpll
cmc
mov
lock
and
push
dec
inc
add
sub
outsl
std
jecxz
xlat
mov
mov
sti
cmpsb
test
testl
mov
ljmp
in
test
cmp
rolb
push
aaa
xor
repz
sti
out
fst
xchg
sub
enter
jo
enter
mov
leave
adc
out
in
pop
cmp
pusha
out
jl
jecxz
test
push
lods
mulb
and
jmp
aam
pop
repnz
fdivl
adc
mov
arpl
out
inc
inc
lock
mov
cs
cwtl
push
pop
sbb
mov
in
repz
dec
ror
mov
popa
push
push
in
lock
arpl
mov
jne
movsb
push
mov
addr16
push
movsl
cmp
and
or
mov
pop
cmp
sub
out
jo
sbb
test
dec
or
stc
stc
test
jno
lea
pusha
cmp
test
bound
jp
add
and
lret
pusha
jp
mov
iret
idiv
or
aam
test
cmp
cmpsl
push
push
out
out
sub
adc
lock
divl
lods
bound
xchg
jp
sub
cmp
and
jmp
stc
out
scas
mov
mov
push
rorl
faddp
outsb
lcall
into
iret
push
adc
into
sbb
push
inc
mov
sbbl
dec
mov
xor
pop
cmp
dec
lds
jecxz
repnz
sub
outsb
outsb
sbb
call
je
and
repz
mov
push
andl
fnstcw
test
fldenv
test
xchg
jg
stos
imul
leave
int3
or
in
push
push
sti
test
adc
or
mov
fcompl
push
xor
loop
repz
mov
lret
push
mov
les
into
xchg
cli
mov
std
mov
popf
orb
sbb
rorl
pop
pop
outsb
push
arpl
mov
aaa
cld
xchg
test
mov
add
in
or
push
cmp
cltd
pop
insl
fwait
pop
das
push
mov
mov
xchg
call
or
lret
pop
cmpsb
bound
into
inc
test
test
cmp
inc
and
js
in
pop
or
inc
mov
andb
loop
daa
lods
fldl2t
mov
mov
lods
jns
add
jne
adc
inc
xchg
push
call
sbb
sub
pop
int3
xchg
data16
shll
rorl
sub
ja
pop
popl
pop
xchg
jns
sarb
pop
movsb
xor
loopne
push
clc
xchg
ss
repz
popf
jae
add
push
inc
push
cld
xchg
inc
std
xor
inc
xor
leave
repnz
arpl
fstl
mov
jne
insl
pop
inc
push
insb
xchg
or
fisubs
xor
shll
xchg
jmp
ss
sarb
xchg
push
pusha
adc
sti
jbe
pop
mov
pop
ror
mov
jnp
lods
inc
into
fdivrl
in
lods
cmpsl
push
fwait
adc
sarl
test
cmp
gs
pop
inc
inc
sbb
xchg
in
push
mov
mov
std
aam
sub
mov
std
testb
or
xor
popf
and
aad
sbb
cs
or
sbb
add
push
das
mov
mov
or
aam
cmpl
movsb
push
sbb
in
xor
push
insl
add
jmp
and
and
push
and
paddd
or
sub
les
scas
addr16
sub
or
add
push
mov
mov
filds
out
sbb
fdivs
sbbb
adc
dec
cmc
mov
pop
inc
fidivs
jae
pop
push
ficompl
add
push
shrl
popa
shrl
popf
sti
jle
sub
stc
fmuls
popf
push
jge
es
fsubl
dec
ljmp
ja
idivb
iret
dec
adc
jo
dec
ss
pop
mov
pop
or
fisubl
outsb
js
adcb
jl
out
pop
movsl
xchg
mov
pavgw
fstps
scas
or
cmp
mov
mov
fisttpl
gs
adc
xchg
cmpsl
rcr
das
repnz
mov
inc
xchg
or
loope
std
jo
lea
cli
push
repz
mov
mov
fadd
mov
out
loopne
jmp
mov
inc
lcall
sarb
data16
sbb
jno
bound
ss
and
cmp
push
mov
cltd
sub
mov
jbe
xchg
mov
adc
loopne
mov
ret
mov
insl
insl
ja
inc
xchg
nop
xchg
mov
pop
inc
mov
xchg
inc
add
jo
bound
and
inc
stos
adc
icebp
jno
push
xchg
and
daa
insl
add
inc
repnz
sub
jmp
insl
pop
ds
icebp
daa
mov
pop
adc
aas
inc
jle
fnstsw
je
mov
jnp
jae
mov
out
and
add
xchg
jl
gs
inc
pop
ret
lcall
clc
ja
ficoml
cwtl
or
mulb
pop
shll
icebp
icebp
mov
pop
je
pop
jbe
push
mov
notb
iret
daa
out
pop
jmp
mov
mov
pop
jnp
inc
pushf
dec
mov
pusha
test
insl
xor
mov
add
jae
loope
rcl
inc
push
push
jle
sarl
mov
daa
lea
mov
cmp
push
rcrb
jae
fimuls
pop
repz
in
aaa
push
mov
xor
shll
jb
inc
cmp
pop
insb
bound
adc
out
test
popa
je
fdivrs
push
fdivrl
cmpsb
insl
dec
mov
push
pop
imul
mov
fldt
negb
pop
cs
orb
dec
gs
push
in
pusha
cmp
sub
jl
jno
jbe
sub
jo
mov
pop
inc
dec
int3
stc
popa
mov
cmp
stos
into
daa
icebp
xor
scas
push
sub
test
cs
adc
mov
dec
ret
repz
jle
jbe
push
xchg
sub
js
xlat
pushf
mov
sbb
mov
cmc
sarb
icebp
fdivs
pop
in
lock
and
dec
dec
mov
mov
jg
mov
cmp
mov
lcall
lods
mov
sub
dec
mov
test
jg
ljmp
jno
andb
mov
aad
or
sub
add
pop
arpl
inc
in
add
xchg
pop
insl
jmp
xchg
dec
sbb
lahf
ljmp
inc
xor
xchg
das
jmp
sbb
stos
lret
mov
dec
push
ss
insb
mov
or
mov
jns
popf
in
push
iret
and
aam
sti
xor
mov
inc
movsl
stc
out
and
icebp
jne
lock
fadds
js
lahf
sbb
dec
cmc
je
out
adcb
adcl
icebp
mov
dec
ret
rep
mov
pop
cltd
lea
add
jne
mov
xorl
cmp
inc
notl
inc
int
xchg
lret
adc
jb
stos
sbb
push
dec
inc
fisubrl
xor
pop
icebp
pop
mov
fmul
rcrl
dec
cmpsl
fidivs
dec
insb
sbb
mov
sbb
fldl
out
mov
mov
mov
adc
cs
je
popa
mov
or
sub
add
mov
inc
stc
mov
pushf
or
dec
mov
jp
jmp
jnp
pop
dec
sbb
arpl
sbb
ja
dec
cs
cs
cmp
test
pusha
cmp
jo
mov
xor
push
cmp
pop
repnz
es
xor
cs
mov
and
mov
sbb
sub
sahf
xor
push
pop
out
loope
sahf
and
xchg
jmp
rcrl
mov
push
rcrl
sbb
xor
xchg
mov
cmp
mov
mov
sbb
test
inc
mov
es
ja
inc
leave
add
popa
mov
test
pushf
inc
sbb
jle
in
push
cmpsl
lea
inc
gs
or
pop
cwtl
mov
jl
pop
inc
fmull
and
fsubs
lahf
jb
sarl
jmp
dec
or
js
mov
out
inc
outsb
aaa
pop
jp
sbb
nop
daa
push
test
shlb
mov
mov
ret
mov
outsb
inc
je
xor
pop
scas
mov
push
lcall
in
stos
and
xchg
loop
inc
adc
sahf
fstpt
add
mov
inc
jp
mov
or
pop
shll
cld
add
inc
cmpsl
popf
jecxz
and
sub
jns
lret
dec
in
jae
add
pushw
ss
jg
mov
push
mov
gs
sbb
or
pop
jbe
aad
sahf
xor
sbb
aaa
into
mov
mov
sbb
pop
hlt
xlat
arpl
sti
push
imul
dec
out
lret
incb
inc
dec
movl
sarl
sub
lret
std
cmc
loop
mov
inc
cmp
sub
decb
sub
imul
ret
or
rcrb
test
cwtl
mov
adc
adcl
xorb
xor
mov
sub
aaa
adcb
lahf
dec
add
pop
sti
pop
mov
cmp
rol
add
pop
mov
cmp
das
sarb
call
adc
test
sti
jbe
dec
nop
sub
push
addb
inc
mov
ja
clc
jae
and
jle
cld
call
lock
es
sbb
scas
xor
adc
aam
insl
shlb
jno
push
aad
pop
or
xor
inc
loop
mov
sbb
pop
dec
mov
push
out
adc
inc
mov
jmp
testb
jge
xchg
repz
mov
or
jnp
ds
adc
lret
inc
cs
push
fcmovbe
rcll
xchg
push
mov
dec
cmpsl
mov
cmp
out
adcb
int3
pop
xchg
addl
or
inc
xchg
iret
jmp
add
dec
adc
hlt
adc
mov
mov
pop
sub
jmp
or
cmpsb
sahf
call
mov
loope
pushl
xchg
and
lds
dec
int
iret
fcompl
int
push
push
mov
mov
jo
xchg
test
pop
jmp
xor
xchg
or
xchg
fs
cs
jbe
jmp
jbe
xor
inc
js
xor
mov
mov
cmc
or
pushf
leave
movsl
mull
inc
sub
dec
pop
add
mov
gs
mov
xchg
pop
fcmovnb
aad
sbb
repz
mov
xor
enter
sub
sbb
lret
mov
orl
ja
cmp
push
in
xchg
orl
dec
adc
inc
push
sbb
cmp
jge
cs
jge
clc
pushf
mov
add
out
xchg
jns
adc
outsb
inc
ss
out
testb
mov
jbe
adc
int3
sbb
adc
lea
xchg
out
cmc
mov
clc
push
fdivrl
adc
inc
int3
fstpt
test
jo
mov
nop
jl
int
daa
ljmp
icebp
pop
mov
xchg
insb
stos
shlb
push
jne
jmp
pop
loope
cmpsl
pushf
in
mov
xchg
pop
shl
mov
dec
dec
adc
lock
push
ret
pop
mov
add
js
sbb
insb
mov
push
mov
lret
cwtl
das
fcoms
sub
lock
and
adc
jg
or
cld
mov
mov
sub
mov
into
jns
lcall
cmpsl
mov
sarl
mov
rcl
pop
mov
imul
push
int3
arpl
push
and
sub
and
jge
and
mov
pop
and
mov
clc
stos
lret
leave
mov
push
and
je
je
test
mov
fstpt
add
sub
int
jns
cmp
cs
pop
rorb
push
hlt
fcmovne
and
into
sub
xlat
outsb
add
insb
lock
bound
push
lcall
int3
dec
adc
lods
inc
mov
cmp
fwait
cmp
push
inc
mov
in
loopne
sub
nop
mov
test
push
cmp
adc
adc
arpl
xchg
inc
xchg
fs
jae
push
movsl
push
adc
adc
fnstsw
xchg
cmp
pop
or
cmp
jae
int
idivl
push
mov
rcrl
divl
jno
mov
in
mov
lea
push
cli
mov
movsb
ja,pt
decb
lahf
shlb
push
push
xchg
mov
outsb
or
dec
dec
scas
dec
inc
shrl
std
aas
adcb
xchg
mov
sub
pop
imul
jbe
test
mov
xchg
inc
mov
add
lods
movsl
cmp
push
xchg
outsb
mov
ret
push
xor
sub
jle
cs
lods
jp
xchg
enter
and
xchg
cmp
sub
call
cs
jne
aaa
adc
pop
mov
aas
aaa
xchg
mov
aad
push
pushf
movsb
push
cmp
dec
out
push
jne
cmp
imul
inc
sub
adc
aad
into
cmpl
adc
and
mov
xor
dec
hlt
ds
inc
push
sti
cwtl
pop
dec
imul
mov
or
jmp
cwtl
lods
push
mov
leave
dec
mov
add
or
jmp
mov
add
pop
arpl
jbe
cltd
mov
lcall
sbb
pop
cmp
dec
dec
pop
jp
mov
pop
mov
cmc
sub
jb
jno
imul
push
cmpsl
pop
xchg
push
dec
das
shrl
dec
sub
sub
sub
sub
cli
or
sbbl
jg
mov
cmpsb
shrb
insb
cmp
scas
jecxz
mov
jo
movl
pop
xor
nop
outsl
jbe
imul
loopne
lcall
pushf
sub
movl
ds
jl
xchg
push
cmp
jbe
push
pop
inc
pop
fimull
popa
subb
dec
shll
loope
add
inc
ja
in
popa
jle
pop
daa
outsl
ret
pop
add
mov
jle
jmp
jmp
loopne
lea
mov
mov
adc
fists
inc
and
push
xor
sbbl
int3
les
test
fst
or
pop
adc
pop
cwtl
mov
dec
adc
adc
pop
add
test
outsl
loop
js
and
push
inc
dec
out
sbb
mov
adc
add
or
dec
loopne
shr
pushl
sbb
cld
inc
ficoml
sbb
lcall
aaa
xchg
sbb
xchg
jge
in
iret
xorl
mov
push
or
mov
ss
scas
out
dec
insl
jge
cmp
add
sbb
test
fisubl
loop
andb
lcall
xchg
push
aad
fcmovbe
lret
dec
iret
gs
mov
into
xor
pusha
aaa
cmpb
adc
jnp
les
insb
add
jp
jae
push
mov
not
jmp
add
jge
fistpll
aam
in
push
int3
and
movsb
pop
inc
add
adc
addr16
daa
cwtl
stos
mov
call
fsubl
jge
and
stc
scas
ds
mov
test
jno
jbe
rclb
mov
dec
and
pop
addr16
mov
arpl
inc
test
xlat
cmp
jg
shrl
push
addr16
dec
sbb
cltd
cli
pushf
popf
insl
mov
out
jo
cmp
sbb
push
pop
cs
lods
and
insb
add
xchg
jle
xchg
push
inc
sub
add
pop
mov
aaa
into
inc
clc
in
pop
test
orb
xlat
xor
mov
or
adc
and
lret
sub
dec
dec
flds
rcrl
shrl
mov
mov
mov
xchg
mov
push
movsl
ret
xorb
aas
lea
std
loope
sub
sbb
repz
pop
testb
xlat
adc
mov
fnstenv
jl
out
imul
mov
sub
sti
fldcw
push
out
je
sbb
out
xchg
pusha
xchg
mov
ret
lret
popa
popf
btc
lods
pushf
and
push
xor
aas
xor
jbe
subl
push
decl
cmpb
lahf
inc
enter
je
fwait
xor
nop
jne
test
inc
xchg
fucomi
or
mov
or
xchg
loop
int3
and
test
aad
mov
testb
jae
push
adc
nop
imul
mov
lods
enter
sbb
cltd
dec
sahf
mov
arpl
ja
inc
xor
or
mov
jp
loop
mov
orb
shll
test
jp
sub
sbb
cmp
lods
sub
xor
push
stos
fisubl
fsubrs
arpl
xor
dec
add
xchg
dec
push
out
dec
scas
inc
int3
xchg
bound
js
sbb
daa
ret
sarb
addb
fnstsw
mov
fsubr
subl
lock
lea
and
adc
loopne
adc
jne
pop
mov
jge
mov
test
stc
add
sub
push
inc
outsl
push
and
jecxz
and
xor
adc
push
sbb
cmp
leave
adc
cltd
loope
out
ja
clc
test
xchg
jns
mov
and
jecxz
lea
dec
rolb
inc
fistpl
mov
fnstsw
fdivl
sbb
test
pop
push
sub
and
adc
dec
inc
jecxz
xor
int3
dec
in
lock
pop
insb
leave
pushf
mov
ret
cmpsl
nop
int3
dec
addb
repz
inc
and
xchg
aaa
mov
and
mov
aaa
into
stos
imul
mov
je
cld
inc
add
int
add
lahf
push
ror
cli
push
mov
xlat
mov
ss
add
fcoml
mov
fs
sbb
dec
and
sbb
sahf
mov
pop
xor
dec
aad
mov
mov
repz
mov
mov
leave
movsl
adc
ds
inc
pop
mov
fcomps
iret
cwtl
inc
test
stos
jge
inc
jne
fstp
push
pop
mov
sub
aas
lcall
adc
mov
push
dec
pop
out
out
push
cmc
and
mov
lock
and
scas
inc
jnp
pop
lret
sti
and
mov
bound
inc
xlat
inc
pop
or
push
inc
scas
lret
and
mov
mov
loopne
dec
or
jl
mov
jg
pusha
push
out
les
xor
in
jg
outsl
add
mov
jmp
stos
data16
mov
or
clc
mov
xchg
cmpsb
mov
pop
sarl
jne
adc
push
add
ja
sbb
pop
dec
call
mov
test
cmpsl
ret
gs
testb
fs
jle
push
mov
sbbb
jnp
fidivrl
or
push
test
jnp
insl
loopne
js
pop
call
adc
sbb
dec
out
xchg
jecxz
fisttpll
sub
mov
mov
cmpsl
sbb
gs
pusha
mov
inc
adc
and
fcomi
jg
stc
sbb
inc
pop
pop
xor
std
js
sbb
sub
movsl
js
mov
pop
pusha
int3
test
ja
add
lcall
test
js
lds
pop
add
das
ret
xlat
nop
out
clc
nop
mov
ficoml
fimuls
icebp
sub
mov
sub
insl
inc
addr16
dec
or
xchg
inc
ret
xchg
pop
testb
jp
or
shlb
sbb
sbbl
ret
fs
das
push
jmp
cltd
and
adc
mov
cltd
jl
stos
inc
cmpsb
jge
jg
inc
int3
faddl
mov
flds
push
cmpsb
push
dec
pop
jo
sbb
dec
arpl
xchg
jne
stos
dec
ds
data16
jne
push
fldcw
add
xor
fsubrs
pop
xor
mov
pusha
pmaxub
leave
wrmsr
inc
jmp
dec
rcrl
ljmp
imul
mov
cltd
sbb
shll
xchg
cld
js
inc
fdiv
cltd
test
dec
push
fldenv
or
frstor
or
in
js
fcomps
cmp
push
xor
push
pop
xor
fs
adc
jge
push
subb
xor
aas
stos
es
inc
fisubs
inc
mov
add
push
fisubl
stc
jle
loope
outsb
sbb
ret
and
mov
shlb
mov
imul
mov
xor
sarb
push
popf
mov
or
leave
popa
dec
xchg
push
stc
push
xchg
sahf
ljmp
data16
xchg
dec
stos
cmc
mov
fmull
cmpsb
cmp
scas
add
sub
jmp
or
push
shrb
out
sub
int3
andl
pop
loop
je
mov
stos
gs
jecxz
arpl
cmp
or
cmp
fmul
cmp
push
inc
repnz
cmc
inc
jae
push
sub
dec
cmpsb
les
mov
cltd
sti
or
push
cmpsl
insb
jle
mov
cmp
lds
mov
aam
mov
xor
fsubs
out
adc
push
sub
test
and
sti
xchg
addr16
mov
jmp
scas
cs
push
fldenv
jo
shll
xchg
fldcw
dec
xchg
jmp
lods
xchg
push
add
xchg
ss
pop
fmulp
call
ljmp
push
scas
mov
ss
aaa
lahf
mov
rcll
sbb
jb
out
lret
and
loopne
jmp
jg
je
jg
cmp
mov
or
jecxz
and
cmpsl
sub
cmp
inc
sahf
fsubrs
cwtl
insb
int
xor
mov
fistpl
js
pop
data16
push
int3
cltd
pop
inc
ficoms
mov
das
adc
or
pushf
add
and
cmp
jp
cmpsl
pop
sbb
mov
xor
rol
xchg
insb
mov
mov
out
add
bound
add
push
xchg
mov
jno
es
cmc
fiadds
loopne
mov
shll
mov
mov
push
stc
cmpsl
push
and
aas
dec
push
fs
sub
xchg
cmc
addb
mov
repnz
outsb
or
jae
fists
mov
rol
push
stos
ja
in
dec
call
mov
in
lods
sahf
cmpsb
jne
fdivrs
cmp
and
out
js
cwtl
pop
in
or
cmp
leave
lcall
mov
cmp
lcall
xor
jnp
rclb
mov
and
das
mov
pop
jns
push
idivb
sbb
andl
dec
push
je
cmp
mov
dec
lcall
rcrl
in
xchg
jns
shll
aam
mov
sbb
movsl
je
scas
and
inc
lds
addl
jecxz
cltd
dec
sbb
adcl
or
cmp
andb
jg
add
dec
imul
stc
xor
cli
pop
mov
enter
in
pop
pop
fwait
dec
add
cmpb
mov
int
bound
ret
jbe
lods
movsb
das
push
and
arpl
leave
mov
out
sbb
sub
adc
pop
iret
call
jg
out
mov
adc
pop
lcall
push
into
jno
ds
adc
aas
or
and
mov
bound
adc
arpl
push
scas
jnp
cli
xor
adc
jge
inc
jmp
mov
or
mov
adc
sub
rclb
xchg
add
inc
stc
pop
popa
adcl
push
pop
out
inc
cmp
fcompl
or
mov
mov
push
int3
jg
movl
inc
xchg
loope
push
inc
xor
dec
adc
adcl
adc
mov
pushf
dec
pushf
and
mov
lret
fnsave
or
cmp
loope
rcl
data16
add
nopl
mov
enter
andb
pop
lock
ja
push
xchg
into
imul
iret
fidivs
ret
call
push
xor
pop
xchg
cmpl
mov
insl
imul
xor
lods
cld
cmp
repnz
test
stos
inc
scas
mov
adc
mov
and
xchg
rcrb
cmc
incl
mov
movsb
or
pop
out
and
push
pop
in
sub
stos
mov
bound
out
aas
xor
mov
add
mov
xor
jo
push
sbb
sub
pop
pop
inc
jo
fbstp
insl
loopne
adc
xor
lds
xor
jne
aas
push
iret
adcb
test
inc
pop
xor
push
in
sahf
mov
je
jecxz
push
fmuls
xor
int
mov
sbb
lcall
and
aas
repz
xor
mov
cmp
test
xchg
mov
push
dec
ljmp
dec
pop
xchg
and
lcall
push
out
mov
int
push
fsts
pop
stos
jmp
or
test
cmp
pushf
mov
ficomps
lret
xchg
sahf
jmp
stos
inc
cmpsl
dec
out
jb
nop
mov
in
cld
cmp
sbb
in
dec
push
mov
shlb
jns
mov
andl
fcomps
pop
dec
fwait
hlt
pop
mulb
out
jge
xchg
cmp
xor
stos
inc
xlat
inc
mov
loope
jmp
popa
sbb
dec
jl
call
sub
xchg
and
test
xchg
and
pop
test
xchg
push
jge
aad
daa
sbb
stos
outsb
jl
mov
adc
imul
fmul
mulb
jbe
cmp
fidivrl
nop
daa
xor
sub
mov
int
stos
xlat
jmp
or
sub
adc
shll
dec
rcrb
sub
leave
jl
push
xchg
inc
fucomi
es
pop
mov
in
and
mov
mov
mov
inc
inc
adc
dec
aaa
es
dec
fisttps
jo
jp
stos
add
add
inc
inc
cmp
xor
mov
cli
xchg
jl
in
xor
inc
mov
jp
mov
and
ret
jnp
xchg
push
xchg
imul
pop
enter
rol
into
xor
popf
jns
sbb
pop
adc
jno
xchg
aaa
fisubrl
cmp
jp
add
ret
loope
ret
inc
int
mov
sti
test
pop
pop
cmpsb
mov
jg
pop
inc
ljmp
fwait
iret
rcll
pop
inc
pop
divb
mov
bound
ss
pop
mov
cmpsb
xor
add
xchg
cmp
std
dec
cmp
pop
ja
dec
cli
cli
adc
xor
insb
adc
hlt
je
lret
dec
mov
mov
or
fnsave
mov
or
fnstsw
movsb
cmp
ja
fisttpll
test
add
shlw
testl
inc
and
push
mov
jge
sub
insb
imul
xchg
xchg
xor
outsb
sbb
add
out
lcall
icebp
lds
cld
inc
inc
stos
sbb
add
xor
out
stc
xor
inc
mov
fmul
adcl
push
lret
clc
xchg
push
jmp
mov
ret
cmp
fildll
sbb
sbbl
mov
mov
push
fistps
lods
cmpsl
leave
aam
adc
cs
pop
ds
out
jbe
btr
imul
lock
cmp
mov
xchg
hlt
push
push
notl
lock
push
scas
and
inc
test
test
es
cmp
aas
adc
cmp
cmp
inc
mov
sbb
pusha
push
add
shlw
movsb
imul
outsb
sub
testb
mov
xchg
or
or
jo
cmpsl
data16
add
jns
call
fnstenv
dec
sbb
loop
stos
and
sub
movsb
aas
xor
or
sub
icebp
xor
data16
cwtl
and
aam
jl
add
sbb
popa
stos
inc
push
jg,pn
pop
aaa
dec
push
pushfw
scas
in
push
xchg
mov
xorb
fstpl
pop
push
testl
inc
insl
add
xchg
sbb
mov
inc
and
in
or
jbe
es
push
push
adc
pop
pop
xor
lea
cmp
jnp
xchg
lret
cltd
call
or
icebp
hlt
ss
inc
inc
in
aaa
and
jae
sbb
cmp
mov
push
loope
mov
sub
mov
shrb
int
inc
mov
or
fimuls
lret
out
sbb
xchg
out
int3
mov
test
xchg
fnstcw
repz
push
cmp
inc
loopne
and
shl
push
pextrw
mov
pop
inc
push
cmpsb
jno
push
add
repz
mov
ds
out
outsl
jp
push
adc
pop
add
jg
push
mov
xchg
mov
insl
sbb
test
aad
lods
cmp
and
jmp
xlat
shll
mov
nop
pop
jmp
in
jae
sub
jmp
push
mov
ficoms
insl
sbb
push
inc
mov
mov
inc
lock
call
clc
and
test
xchg
add
loope
lock
mov
add
push
sub
inc
push
lcall
dec
cmp
jmp
imull
lahf
cmp
mov
out
pop
ljmp
imul
pop
push
sub
nop
loope
xchg
idivb
xchg
mov
jmp
add
divb
sub
sub
xchg
xchg
mov
sbb
fdivrl
lock
sbb
das
bound
adc
sahf
sbb
jns,pn
jg
adc
xor
cmp
lock
mov
movsl
inc
frstor
mov
xor
push
jge
ficomps
pop
dec
push
packuswb
inc
jae
iret
mov
es
in
daa
and
out
scas
cs
mov
sbb
cld
ja
lret
push
sbb
repz
and
lds
outsb
cmp
push
xor
cmp
loope
aaa
stos
adc
cmpsl
ds
fsubrp
mov
or
push
mov
mov
xchg
xchg
add
adc
loop
jno
ljmp
inc
pop
xchg
sub
loope
sahf
pop
sbb
dec
cmp
lcall
aas
out
mov
mov
xchg
sbbb
adc
mov
shrb
pop
cwtl
xor
and
in
int
repnz
mov
clc
test
xor
adc
adc
pop
ficompl
fwait
mov
jns
orb
jge
cmpsl
lds
and
cmpsl
push
xorb
in
mov
dec
out
sbb
mov
repnz
in
mov
stos
leave
pop
cmp
add
dec
in
mov
pop
es
imul
ret
iret
repz
push
mov
pusha
fidivl
mov
mov
and
xchg
cmp
repnz
loopne
sub
push
dec
es
or
clc
pop
icebp
xchg
cmpsl
out
push
xor
mov
dec
jecxz
xchg
xchg
xchg
sarb
mov
or
je
loope
and
or
xchg
sbb
mov
mov
adc
je
aad
test
and
cmpb
das
sbb
mov
daa
xchg
inc
hlt
addr16
xchg
jbe
mov
aaa
cld
je
mov
push
sub
push
scas
imul
sub
dec
lcall
call
out
sbb
orb
pop
push
fidivl
jmp
cwtl
das
mov
xchg
mov
mov
xchg
shll
jl
out
ja
dec
ss
and
fcoml
jo
in
pop
inc
xor
or
mov
jmp
xchg
call
xchg
pop
xor
cli
cli
and
xor
mov
loope
sub
ss
icebp
xchg
add
fdivs
or
icebp
insb
icebp
mov
sti
stos
fcoms
fidivrl
add
push
xor
pop
in
xchg
fs
pop
jmp
cmc
adc
cmp
addr16
sahf
fs
mov
arpl
sbb
sarb
out
xchg
push
mov
jle
mov
add
jns
push
mov
xchg
pusha
mov
es
mov
jno
nop
daa
negl
mov
fsubrl
lock
std
mov
jp
fcmove
push
adc
insl
inc
mov
outsl
sub
pop
filds
mov
push
mov
fdivrs
adc
filds
cmpb
fisttpl
mov
aad
push
add
add
movsb
add
jbe
orb
or
cmp
mov
xchg
push
pop
mov
test
aam
faddl
jb
cld
movsb
inc
iret
mov
aad
xor
xor
test
div
mov
adc
push
sti
pop
jae
fbstp
es
ja
add
ret
mov
insl
dec
in
decb
mov
jmp
fcomp
jae
mov
cli
mov
push
add
add
pop
sub
lods
mov
push
sub
lret
in
mov
pop
icebp
push
mov
test
sub
and
mov
pop
stc
je
pop
cmpsb
sbb
xchg
push
and
lret
shlb
pop
ljmp
imulb
push
inc
pop
or
stos
jmp
xchg
mov
or
gs
adc
rolb
and
ljmp
adc
sbbl
cld
and
out
sbb
pop
xchg
ljmp
enter
std
mov
lods
xchg
add
cmpsb
mov
lcall
rolb
mov
mov
mov
push
mov
sub
sbb
dec
ret
jle
jns
les
jmp
addr16
insb
push
cld
or
subl
loop
lret
dec
push
int3
or
cmp
pop
mov
pop
insl
jnp
mov
scas
jmp
or
int
loopne
xchg
loop
push
mov
sbb
jb
mov
lds
jb
jle
pop
sbb
cwtl
imul
movsl
enter
insl
test
cmpsl
inc
mov
lret
cmp
fbstp
in
xchg
insl
shl
or
mov
mov
stos
inc
adc
mov
xor
arpl
sbb
jmp
pop
push
mov
xchg
or
cmp
adc
stos
mov
xor
out
mov
jns
out
ret
lcall
mov
add
pop
fistl
or
aad
or
sbb
jp
cltd
xor
stc
icebp
or
std
cmp
and
xor
aad
mov
jbe
and
imul
shrb
pop
inc
hlt
jl
fucomi
pop
pop
push
dec
jle
mov
bound
in
mov
dec
or
xlat
xchg
inc
or
push
jns
mov
cmpsl
scas
and
data16
xchg
jmp
repz
jle
dec
movsb
ds
daa
dec
sub
sbb
lods
mov
ret
sbb
fcmovnb
in
inc
sbb
xchg
fbstp
arpl
xor
mov
orb
stc
and
sbb
cli
inc
jbe
mov
jo
xor
add
jmp
pop
sbb
andl
cmp
push
in
clc
popa
push
dec
pop
xor
xor
mov
pop
jne
jg
scas
ret
sbb
and
fcoml
int3
add
jno
sub
add
popf
sahf
sbbl
cmpsl
aam
flds
in
inc
inc
ret
or
xchg
mov
addr16
in
test
js
in
es
mov
aas
inc
sub
hlt
imul
je
mov
sbb
nop
test
mov
es
sbb
dec
fnsave
xchg
je
aad
add
cwtl
stc
nop
in
fldcw
sbbl
mov
mov
fildl
xchg
xor
fisubl
imul
push
lds
push
out
rcrl
mov
and
out
mov
mov
xor
fwait
sub
pop
mov
lods
adc
ficoml
sarl
cmp
xor
jne
jbe
enter
xchg
mov
es
fists
mov
rclb
scas
lods
adc
push
jmp
jge
push
scas
outsl
fidivl
iret
push
popf
enter
sub
or
add
or
insl
cmp
pop
mov
jl
ds
jmp
fs
enter
adc
ja
lahf
fs
mov
sub
idivb
ljmp
xor
sahf
sbb
clc
ja
dec
gs
and
pop
call
ffree
ss
mov
loop
or
aam
std
jle
scas
push
inc
mov
out
je
out
pop
push
aaa
movsl
xchg
mov
push
cs
lret
push
mov
ljmp
push
and
ljmp
adcb
ss
cmpb
movsb
and
add
leave
and
cld
jl
sbb
inc
mov
pop
fwait
into
int
xchg
iret
inc
addr16
shrl
pop
xor
pusha
lock
arpl
ret
mov
scas
mov
fstp
push
mov
ds
lds
mov
clc
pop
inc
std
test
push
clc
aas
add
fwait
sti
aam
sub
adc
out
ss
lcall
pushf
popa
out
xor
enter
mov
xchg
ljmp
shll
dec
sub
add
pop
adc
adc
mov
jns
aas
push
and
popf
xor
push
mov
test
xor
lods
ds
dec
pushf
arpl
sbb
pop
mov
sti
mov
cmpsb
mov
fbld
int3
sub
and
sub
inc
sahf
in
pusha
dec
in
cmpsl
ds
outsl
out
jge
cmp
mov
mov
call
sbb
jo
xchg
xchg
add
inc
sbb
in
addr16
test
xor
daa
aas
aad
mov
mov
aad
adc
in
jbe
orb
pop
pushf
mov
cmp
or
rclb
dec
lds
and
pop
xchg
mov
xchg
xorb
out
ret
or
pop
decb
fists
test
cmp
aas
pop
xor
lods
ljmp
and
and
pop
stos
jmp
pop
push
xlat
js
arpl
negl
shl
sarl
or
sub
mov
cwtl
movsb
inc
xor
lahf
shl
jg
gs
call
test
pop
dec
cltd
repnz
sti
jnp
outsb
and
pop
ja
mov
jae
or
add
push
sbb
add
aaa
jns
inc
mov
dec
std
or
es
inc
or
scas
inc
sbb
int
popf
push
push
sbb
mov
mov
outsl
sub
ret
aas
stos
outsb
cmp
scas
inc
adcl
int
xchg
xchg
mov
ret
xor
mov
fsubrp
sub
push
adc
cwtl
jg
jbe
cmp
orb
mov
jne
sbb
lahf
pop
es
pop
pop
push
cli
mov
add
inc
sub
nop
fistpl
pop
jp
rol
into
sbb
push
mov
mov
clc
jbe
cmp
dec
mov
adc
aas
test
sbb
dec
repnz
daa
mov
pop
call
mov
ret
sub
out
psadbw
mov
sub
ret
mov
push
mov
xchg
lret
jne
cmp
sbb
mov
stos
inc
and
hlt
xor
jmp
sbb
bnd
xorb
xchg
or
out
not
outsl
addr16
inc
or
or
cmp
cmp
cmc
mov
loopne
push
adc
xlat
insb
dec
cld
lods
pop
outsl
std
ljmp
xor
push
dec
mov
mov
movsl
test
nop
push
xchg
lods
cmc
imulb
movsl
mov
fnstsw
mov
add
test
mov
cli
pop
jns
dec
xchg
inc
and
lods
aam
ret
mulb
fwait
jmp
and
jl
push
xchg
mov
dec
or
mov
mov
jne
mov
mov
fistpll
push
jbe
call
mov
sub
scas
add
in
out
push
mov
xchg
cmc
or
adc
cmp
sahf
lods
cs
push
cli
in
aaa
lret
in
add
nop
mov
xchg
fstp
jmp
sbb
jo
bound
xor
aam
add
mov
and
fadd
mov
mov
xchg
nop
and
jns
add
pop
in
enter
or
mov
lahf
pop
fiaddl
js
sbb
outsb
out
pusha
rcll
fnstenv
jl
cld
mov
or
cwtl
js
mov
mov
and
pop
jmp
mov
cmp
bound
test
hlt
adc
fnsave
mov
fwait
ret
in
sub
jnp
out
cmpsl
push
or
es
pop
sbb
mov
test
sbb
xchg
shrl
movsl
shr
push
mov
addb
mov
outsb
imulb
fsubrs
stc
adc
div
dec
dec
fs
shll
push
and
push
cmpsb
pop
in
das
addr16
add
notb
popa
out
ret
adc
pop
cmc
enter
cmp
in
ficomps
cmp
sti
cmp
mov
fisubs
push
mov
cs
daa
cs
lret
cmpsl
xchg
inc
cli
jg
ss
jb
xchg
ret
ficompl
mov
jg
mov
mov
mov
movsl
or
arpl
jge
mov
mov
dec
xor
pop
scas
mov
outsl
push
leave
cmc
mov
fisubrs
inc
sub
cwtl
adcl
jge
and
jnp
push
testl
adc
fwait
inc
pop
jmp
sbb
movsl
sbb
mov
xchg
push
cmp
shl
scas
insl
xor
mov
call
sbb
sahf
jae
sysret
pusha
mov
stc
popf
sbb
ljmp
jp
mov
das
inc
fstps
pop
cli
lods
int
pusha
ss
mov
lret
ds
sbb
loopne
xchg
sub
mov
stos
ljmp
testl
xchg
rcll
scas
adc
cmp
inc
in
frstor
fdivs
rcr
add
aam
aad
data16
mov
out
xchg
dec
push
cld
aaa
cmc
in
inc
jb
inc
push
pop
jecxz
fsubrs
stc
nop
mov
xchg
rcll
xor
push
cmp
repnz
and
or
inc
iret
pop
sti
shll
jbe
fbld
mov
xchg
cmc
or
data16
icebp
inc
int3
pop
xchg
subb
mov
sub
call
inc
jge
cmc
jg
mov
push
xchg
movsl
sub
jns
je
testl
or
popf
pop
xchg
imul
jnp
jmp
mov
testb
lcall
push
rcrl
clc
scas
mov
dec
ficoms
xlat
sbb
cwtl
pop
neg
das
cs
or
lea
xchg
leave
mov
mov
sbb
fidivs
pop
mov
cmp
mov
imulb
mov
pop
test
jnp
out
into
data16
jns
dec
xorl
int
or
lds
out
loop
mov
adc
push
iret
div
sbb
imul
pop
bound
mov
mov
mov
hlt
adc
xor
lods
std
fwait
xorb
and
inc
add
jmp
arpl
or
add
sub
dec
stos
out
les
les
rorb
sub
dec
jl
in
shll
xchg
inc
aas
mov
mov
pushl
popf
push
mov
jns
shrb
cmpsl
cmp
mov
xor
cmp
insl
js
imul
xorb
test
sbbb
mov
sbb
and
mov
test
bound
push
xor
js
aaa
pushf
jb
push
lock
add
ficoml
andb
call
dec
loop
scas
insb
fdivr
rolb
cwtl
add
arpl
ja
pop
rorb
dec
jecxz
jo
jge
cmpsb
cmc
pop
aad
inc
in
dec
shlb
inc
fidivrs
jecxz
jbe
gs
stos
jmp
bound
jnp
mov
pop
inc
dec
add
aaa
clc
das
dec
imul
fidivl
aam
lock
xchg
push
stos
fidivs
or
cli
dec
test
pop
ja
mov
and
jge
test
ret
pop
cld
lods
or
out
into
push
outsb
lods
mov
movsb
test
adc
mov
es
adc
mov
rorb
or
sti
jp
or
jl
adc
cmpsb
inc
addb
lret
jmp
fcmovnu
mov
bound
mov
dec
push
inc
in
xor
pusha
gs
call
je
hlt
push
fbstp
cld
bound
repz
cmp
push
je
data16
dec
push
ds
scas
cwtl
stc
out
es
imul
sbb
in
lret
xchg
xchg
mov
std
xor
mov
insl
inc
mov
call
or
movsb
xor
mov
jno
dec
adc
test
cs
ljmp
outsb
xchg
rclb
in
mov
add
popa
inc
push
movsl
jno
lahf
or
xor
pop
nop
shlb
sub
and
in
mov
dec
popa
lahf
js
inc
stos
xor
mov
dec
enter
cmp
cmp
and
mov
roll
ror
xlat
icebp
inc
sub
jns
xor
out
adc
imul
jg
jle
add
inc
xchg
sub
mov
sti
push
sarb
idiv
stos
mov
fistpl
xchg
dec
into
add
mov
out
cmp
int
mov
xor
sub
loope
data16
jmp
inc
push
pop
mov
mov
movsb
mov
push
repnz
ds
lock
popf
lods
aam
mov
jne
cmc
sbb
mov
leave
xor
push
imulb
nop
push
add
fisttpll
int3
mov
mov
stos
jg
or
jp
jmp
test
inc
or
cmp
dec
jle
clc
pop
outsl
out
push
das
fwait
fs
inc
shl
inc
mov
mov
pop
cmp
dec
aas
push
ljmp
jno
inc
lret
insb
in
mov
dec
stc
cmp
cmp
mov
fsubrp
outsl
vunpckhps
jg
or
notl
int3
pop
push
pushf
pop
in
jns
sbb
sahf
or
or
sub
fwait
repz
cmc
dec
pop
into
xor
jle
adc
sahf
jg
cmp
in
fwait
pop
pop
or
jns
jle
pushf
inc
fcmovnbe
cltd
inc
in
jnp
int
push
or
out
dec
pop
addr16
fidivrl
fldenv
mov
popf
mov
in
es
mov
cwtl
cmpsb
dec
fs
sub
add
cmp
jnp
inc
lret
shll
mov
out
enter
fucomp
jbe
sbb
jecxz
cld
lds
jo
dec
sub
push
push
lret
sbb
hlt
sbb
repz
mov
mov
mov
adcl
loope
mov
loope
adc
lret
aad
jecxz
xchg
lods
cmp
push
rcrb
sub
stc
shll
outsl
loope
fisttps
inc
jae
cli
das
jo
jae
push
movsl
fmull
sub
scas
pop
inc
fcmove
dec
insl
jg
sub
test
dec
out
inc
cld
stos
add
js
cmpsl
inc
cmp
pop
out
leave
test
mov
rorb
arpl
or
iret
cmp
out
mov
inc
dec
lock
fisubs
lret
sub
jle
dec
bnd
push
imul
dec
out
std
loope
push
adc
adc
jge
movsl
cmp
inc
gs
xchg
fcmovu
lahf
sub
test
mov
pusha
inc
mov
xchg
adc
mov
pop
out
mov
mov
or
and
adc
xor
sbb
cmpsb
lret
push
mov
bound
mov
cmc
push
jno
inc
push
cmpsb
lea
pop
sti
sahf
mov
dec
aad
hlt
arpl
adc
int3
lret
arpl
enter
dec
and
test
push
insl
jg
inc
xor
push
inc
fsubl
or
jmp
arpl
adc
sbb
cltd
xor
and
cld
call
adcb
fwait
jb
mov
outsl
jge
stc
in
fwait
mov
adcl
add
dec
or
btr
and
lahf
or
aam
jo
lret
jns
inc
xchg
clc
rol
cli
jecxz
es
jecxz
cmp
mov
mov
or
cmp
jg
dec
add
cmp
pop
out
mov
pusha
pop
jns
or
lods
nop
jb
mov
sahf
mov
orl
xor
push
icebp
sbb
inc
xor
data16
dec
mov
ftst
clc
cmp
aam
and
mov
fmull
add
mov
mov
test
inc
mov
movsl
cmp
inc
or
lods
subl
mov
ret
push
sbb
loop
in
fstpt
notl
inc
fdivl
push
arpl
push
movl
addb
pop
int
nop
call
pop
inc
outsl
xchg
stos
or
or
sarb
lock
in
jb
aad
dec
sti
push
popf
subb
int
sub
jns
cwtl
pop
lret
mov
fisubl
mov
xor
add
pop
movsb
inc
pop
std
ja
xchg
pop
lret
orl
idivb
aaa
and
cwtl
call
cmp
cmp
mov
in
out
test
xchg
mov
push
mov
in
mov
and
sbb
lods
pusha
ljmp
pop
xchg
fists
je,pt
scas
mov
lret
ds
stc
loop
mov
call
icebp
clc
sub
cmp
adc
test
add
cmc
loop
out
adc
jle
mov
xchg
in
sbb
cmpsb
sub
pop
or
js
fwait
xor
bound
std
xchg
cmp
stc
mov
fldenv
push
push
cwtl
loopne
and
mov
out
mov
pop
or
aam
pop
sub
xchg
xlat
icebp
pop
cwtl
push
mov
call
cmp
adc
cmp
jp
add
mov
iret
loop
imul
jo
test
rorb
xchg
fbld
in
mov
or
adc
packssdw
pop
inc
xlat
push
inc
push
sbb
sahf
sarb
scas
push
inc
adc
fs
pushf
test
test
jp
and
test
add
cs
mov
test
xchg
mov
rcrl
cmpsb
cld
aam
xchg
dec
push
pop
dec
sbb
jae
insl
cmp
js
movups
sbb
lods
xchg
jmp
or
sub
jp
dec
dec
pop
and
xchg
cmp
cmc
cmpsl
mov
nop
mov
vpmovb2m
add
sbb
inc
lock
xlat
popa
cld
xor
sbbb
pusha
stos
sbb
mov
xchg
dec
or
jge
ficoml
mov
in
mov
pop
xor
adc
xor
jl
scas
inc
fchs
mov
xor
inc
cmp
xchg
leave
lahf
ficompl
push
sti
xchg
add
cs
test
cmp
and
mov
lret
int3
mov
push
inc
push
jno
in
inc
mov
dec
lret
lret
cwtl
or
mov
fistpll
stos
addb
push
or
lods
or
test
jg
repz
add
mov
xchg
mov
test
rcll
fildll
sub
cmc
cmp
lea
sarl
andb
fs
insl
ds
hlt
sbb
mov
cmp
shr
data16
repnz
jge
jl
inc
test
movsb
les
adc
mov
inc
jns
and
fistpl
fadds
mov
pop
mov
ret
das
es
mov
fs
push
xchg
scas
jae
aas
pop
jg
imul
and
fldcw
leave
mov
mov
movsl
in
out
rorl
pop
rolb
sbb
cwtl
pop
sub
mov
or
add
enter
cs
mov
clc
mov
ljmp
pop
data16
movsl
nop
mov
sbb
or
mov
cli
bound
xchg
cmc
xchg
adc
mov
aas
push
fwait
or
insb
ja
ds
adc
sbb
je
dec
nop
pop
subb
das
inc
in
mov
call
push
mov
xchg
leave
repz
and
scas
mov
mov
arpl
in
imul
dec
mov
add
push
push
arpl
jbe
xchg
cmp
mov
outsb
pop
imul
push
cmc
sub
and
leave
dec
scas
cmp
fucomip
in
xchg
daa
fdiv
lods
add
sub
cmp
std
js
pop
cmp
sahf
cmp
adc
cmp
jp
jl
lret
lea
je
jp
test
cmp
inc
clc
divb
jmp
or
xchg
cli
jne
mov
jg
test
jns
cmp
call
inc
adc
push
pusha
push
mov
fadd
pop
mov
inc
fmulp
xchg
pop
adc
pusha
fdivl
jbe
daa
cli
push
push
aas
ret
divb
out
or
mov
call
repz
and
push
ljmp
psubd
or
shlb
jl
pop
lcall
and
in
jno
inc
fmuls
xor
call
fmuls
push
repz
push
jmp
dec
mov
xchg
jl
icebp
mov
xchg
sub
repz
sub
daa
mov
mov
in
in
cmpsl
mov
das
loopne
mov
lock
les
daa
test
ja
mov
ljmp
je
jge
inc
mov
call
mov
enter
fdivs
adc
or
sub
inc
in
mov
xor
js
mov
add
loopne
rol
lret
movsl
enter
aam
imul
sahf
incb
push
jmp
pop
cmpsb
mov
scas
jb
das
dec
mov
mov
gs
adc
jne
ljmp
movsl
rol
jne
xchg
xchg
loope
dec
mov
shl
sub
and
xor
leave
inc
shlb
jbe
jecxz
pop
inc
mov
mov
pushf
sti
mov
popf
std
adc
add
xor
mov
and
sub
pop
rcll
fldcw
lret
and
inc
jnp
ljmp
mov
jae
inc
pop
xor
gs
sub
mov
mov
mov
mov
pop
pop
clc
jo
lcall
push
fisttpll
ljmp
pop
pop
pusha
lods
jns
jbe
mov
repz
lahf
loopne
int
pop
incl
add
mov
cltd
out
jb
jecxz
lcall
icebp
mov
or
adc
fidivs
sub
das
push
or
pop
sub
pop
cmp
test
lahf
pop
out
adc
cltd
jne
and
xchg
mov
mov
lods
inc
out
lcall
hlt
cmp
ret
sbb
add
test
inc
cld
data16
dec
pop
mov
jnp
data16
stos
inc
cwtl
enter
decb
jp
or
std
movsl
lods
add
imul
push
iret
add
jnp
xchg
scas
sbb
dec
mov
inc
mov
push
and
lock
fwait
jbe
cs
mov
icebp
xchg
or
inc
pop
repz
je
pop
loope
pop
aaa
mov
and
inc
lods
mov
mov
pop
cmpsb
lods
cltd
adc
ljmp
pop
or
sub
imul
or
dec
fnstsw
stc
nop
xor
filds
enter
out
test
cld
test
fstpt
int
pop
inc
xchg
push
out
ret
imul
add
xor
or
push
fadds
cli
ficoms
int3
jl
xchg
mov
mov
dec
mov
out
int3
repz
out
mov
sub
insb
jl
lods
lea
jmp
lea
or
push
push
mov
cmp
cmp
mov
cwtl
xchg
es
jo,pn
add
adc
xor
mov
jns
sub
or
cmpb
cmp
addr16
cmp
ret
jnp
call
fsubrs
popf
gs
mov
mov
push
and
mov
xchg
daa
ljmp
push
inc
mov
fxtract
adc
cli
aas
mov
lds
mov
push
mov
pop
adc
aaa
xor
xchg
dec
in
and
addb
inc
stos
xchg
pop
sti
sub
push
mov
inc
in
and
xchg
outsb
lods
inc
mov
ror
loopne
add
and
xor
into
adc
push
jmp
sbb
xchg
push
insb
cli
jg
push
jmp
dec
dec
jo
icebp
dec
xchg
push
mov
lds
dec
into
sub
jecxz
mov
mov
int
sub
out
dec
testl
fldl
jl
mov
and
int
mov
inc
loope
dec
iret
sar
inc
cli
out
jl
jmp
and
pop
ljmp
pop
out
or
cwtl
repz
repnz
mov
arpl
rcll
lods
jne
lds
cmp
add
push
mov
cli
andb
es
int
dec
fs
shlb
jge
imul
cmpsb
and
and
push
pop
gs
scas
push
outsl
add
neg
mov
into
sub
mov
movsw
mov
pushf
mov
sar
xlat
insl
adc
in
fwait
sbb
hlt
mov
jno
xchg
loopne
aaa
pushf
inc
pop
ret
pop
cwtl
test
cs
mov
cmc
or
mov
jae
mov
dec
and
rolb
jmp
popf
add
xlat
xlat
xor
jb
jp
jne
jae
mov
inc
add
fcomi
or
jbe
jmp
xchg
mov
inc
mov
clc
or
pop
cmpsl
ljmp
add
lret
popa
repnz
lea
push
loop
jae
insb
push
je
add
push
cmp
dec
mov
jecxz
popa
stc
xor
addl
add
dec
scas
mov
sbb
mov
or
insb
shl
lret
cld
xchg
inc
in
ret
push
into
sub
jg
pop
push
mov
lds
fldenv
repz
mov
lods
inc
jmp
xorb
lock
mov
es
xchg
mov
lret
fcomps
repnz
loope
stos
push
mov
adc
lock
sub
jp
cli
lods
les
popa
lds
push
insl
loopne
jp
hlt
lods
mov
pop
cmp
pop
scas
out
out
test
inc
push
mov
into
popf
cmpsb
push
jp
test
sbbl
push
push
sbb
test
scas
or
dec
aaa
test
sbbl
or
mov
movsb
iret
push
out
enter
and
sti
push
jo
or
clc
stos
and
bound
inc
adc
in
adc
das
sub
shl
inc
cmc
dec
xor
mov
dec
sbbl
jp
jo
push
icebp
adc
mov
jmp
fisubrs
les
sahf
leave
test
push
or
out
ds
sub
scas
js
fnsave
dec
aas
sub
xchg
xor
fldenv
xor
stos
gs
pusha
jp
jbe
mov
imul
add
mov
or
jle
xchg
mov
push
mov
lds
cld
dec
sub
ss
cwtl
dec
mov
in
push
xchg
inc
fists
insb
daa
popf
xor
into
sti
jbe
mov
test
aam
mov
pop
adc
cmp
xor
jns
push
jmp
fldl
pop
and
push
sub
aas
push
xchg
cmpb
outsb
lods
push
sub
adc
enter
dec
jmp
jl
mov
pushf
push
mov
push
lcall
add
mov
dec
add
mov
sub
aas
les
pushf
shll
pop
insl
les
gs
mov
loop
or
or
dec
or
aam
popw
fnsave
mov
mov
orb
insl
jb
mov
cmp
mov
push
in
push
outsb
cltd
push
add
inc
mov
mov
add
pop
fxch
daa
pop
sub
sahf
fsts
pop
pop
fs
je
js
and
xlat
bound
dec
mov
push
test
inc
fsubl
cli
repz
shl
mov
das
addr16
int
pop
or
ret
add
cmpsl
dec
dec
pop
lret
jnp
in
cmp
scas
mov
pop
sarb
movsl
sbb
out
cs
std
xor
adc
mov
aam
mov
addr16
pop
jle
dec
jo
mov
mov
pop
ds
sub
int
or
mov
cld
adc
add
icebp
add
daa
dec
mov
inc
jmp
sbbl
fcmovnb
cmpsb
jns
call
sbb
mov
ret
dec
es
andb
notb
mov
push
inc
movsb
test
add
sti
inc
jb
push
aas
inc
inc
mov
xorl
sbb
into
or
add
test
outsw
push
lods
adc
cmp
sub
bound
es
push
adcl
xchg
sub
cmpsl
repnz
add
out
pop
dec
lcall
lret
je
clc
jae
pop
xchg
sub
jmp
mov
xor
xchg
mov
cmp
lcall
shll
divb
std
and
dec
xchg
push
jbe
sbb
or
sub
cmc
jbe
fistl
addr16
cmc
xchg
cmp
cmpsb
fidivrs
into
sub
pop
mov
add
pop
adc
ds
les
aam
add
push
cld
pop
cmp
cmc
ret
aad
in
test
adcb
test
add
test
xor
mov
cmpsb
jbe
push
cmp
scas
jnp
or
sti
pop
ss
jp
sti
or
lret
cld
test
sbb
cltd
pop
sbbb
push
jg
mov
and
cmp
mov
loopne
dec
xor
imul
xchg
std
push
mov
arpl
jmp
pop
fwait
and
sub
in
sub
add
mov
arpl
call
cmp
fildl
pop
test
cmp
push
cld
inc
mov
lcall
lcall
test
xchg
cmp
adc
bound
lahf
testl
lea
sub
lea
jo
or
cld
sub
mov
aas
sarl
push
int3
out
mov
xchg
mov
jecxz
fwait
aas
out
jns
pushf
cltd
and
fnstenv
fsubs
add
rcrb
sub
xchg
mov
call
cs
or
jge
cmp
sbb
lods
dec
iret
lds
cld
stos
subl
in
pusha
cmp
mov
loopne
jp
jmp
daa
xor
sub
addr16
daa
pop
mov
andb
mov
or
cmp
and
lods
lock
pop
ds
loopne
cmovns
movsb
ficoms
pop
pop
aad
sbb
clc
sub
jo
jp
in
cmp
xchg
fmull
outsl
push
pop
jbe
add
lret
xchg
cs
hlt
movsl
cmp
cmp
cmp
ret
adc
cltd
lds
xchg
sub
cmp
fwait
scas
test
std
sbb
es
jns
mov
add
mov
inc
popa
clc
ja
fisttpl
jg
lcall
push
push
inc
mov
js
xchg
ret
xchg
jge
mov
jp
shlb
cli
xchg
push
inc
gs
xor
mov
cltd
jp
arpl
adc
or
or
jmp
xor
push
lock
pop
hlt
mov
lods
sub
aam
adc
sbb
or
insb
xor
or
das
push
call
mov
fnsave
addr16
daa
mov
movsb
jl
xchg
rol
imul
imul
fs
jnp
mov
pop
in
push
outsb
xor
fnstenv
fdivr
fsubrs
push
lret
mov
cmpsl
xchg
dec
xchg
adc
inc
jo
test
ss
add
notl
lods
fsubrl
xor
ja
ret
cmp
or
inc
jnp
jns
push
ret
adc
jmp
dec
mov
stc
das
xchg
mov
add
cmp
push
in
rorl
fiadds
hlt
jmp
inc
outsl
mov
adc
and
ljmp
push
dec
movsl
jbe
in
pop
sbb
adcl
dec
dec
pop
pusha
ror
shlb
push
outsb
pop
and
push
mov
sbb
add
shll
fisubs
pop
cmpsl
xchg
inc
mov
jbe
fisttpl
pop
lock
mov
sbb
jge
call
arpl
mov
and
xchg
in
push
push
pop
cmc
xchg
and
call
push
adc
popa
out
lods
pop
insl
ret
mov
je
mov
pop
adc
mov
jge
push
push
xchg
les
stc
add
repnz
in
ret
cmp
jb
pop
lcall
pop
jo
lret
dec
fwait
lea
push
adc
dec
inc
cltd
mov
divb
ret
or
xchg
push
test
xchg
sbbl
mov
add
rcrb
cmp
mov
setg
mov
dec
mov
sbb
test
iret
push
mull
push
mov
and
push
scas
jb
punpckhbw
xor
aad
pop
pop
arpl
mov
pop
sarb
fidivs
xchg
loope
sahf
notl
and
pop
inc
test
adc
cmp
int
dec
fdivl
data16
dec
in
lcall
icebp
out
jle
add
and
ret
shrb
or
arpl
int
je
lock
fsubs
in
cld
ja
or
fwait
out
mov
rcrl
out
or
xor
hlt
bound
test
loop
orl
cmova
inc
sbb
pop
mov
sub
pop
das
mov
pop
pop
sub
fwait
jo
insl
pusha
jns
xchg
mov
lret
mov
push
sub
xlat
and
movsb
xchg
lret
pop
mov
or
in
and
mov
mov
std
popa
jne
fidivrs
adc
xchg
loop
negl
rolb
or
sub
jg
jae
faddp
push
inc
mov
dec
dec
int3
gs
jae
dec
pop
cmp
stos
inc
xchg
adc
adcb
xchg
arpl
adc
sbb
add
pop
scas
inc
popa
clc
jne
mov
pop
enter
or
dec
js
das
pop
fs
lods
in
call
cmp
pusha
xchg
adc
and
mov
roll
inc
mov
sbb
mov
test
cmp
ret
pop
mov
push
pop
icebp
add
js
jo
jne
sti
or
clc
in
xor
sbb
push
sbb
ror
inc
and
sti
mov
mov
fwait
iret
mov
push
out
jno
xchg
popa
rcr
dec
lds
fisubrs
mov
xlat
mov
std
adc
and
and
jnp
sbb
xor
popa
lcall
dec
daa
fnstenv
jge
es
mov
lods
inc
pusha
or
popa
dec
call
call
sbb
adc
repz
cmpb
pushf
daa
mov
repnz
inc
pop
xor
push
ret
push
mov
cmpsb
ret
rorl
js
sub
add
cmp
lcall
mov
inc
fucomp
or
cmp
addr16
xchg
aas
add
pop
sar
test
jo
inc
fldcw
data16
or
ds
sub
sub
or
cmp
out
add
das
and
pushf
scas
mov
dec
ja
jp
pop
cmp
dec
dec
cmp
push
add
pushf
jle
adc
dec
mov
dec
lods
mov
scas
mov
add
push
test
fnstcw
add
pop
cld
xchg
xchg
inc
add
xor
sbb
add
jmp
lods
push
call
loopne
mov
test
inc
fmuls
mov
movsb
lds
negb
in
test
mov
lock
in
mov
jns
idivb
xchg
fildl
icebp
outsl
aas
jmp
jno
mov
cld
out
push
mov
push
xor
out
push
pop
mov
cmp
sbb
imul
loopne
lcall
cmc
stos
mov
adc
aas
pop
test
sub
gs
xor
ja
scas
adc
movsl
mov
mov
jl
mov
mov
add
dec
loope
or
push
ret
jg
in
and
popf
sub
sbb
andb
cmp
cmpl
hlt
pusha
fnstsw
mov
push
repz
mov
inc
dec
insb
fwait
repz
or
arpl
cmc
mov
adc
test
stc
xchg
sub
loopne
es
xor
adc
shll
outsl
fldl
or
clc
push
movmskps
cmp
xchg
data16
add
sub
sub
lods
xchg
jbe
jb
inc
int3
outsl
mov
lcall
jns
add
nop
dec
push
lods
repz
sub
xchg
sbb
jne
test
out
xchg
and
dec
or
js
mov
jnp
add
inc
and
fnsave
cmp
imul
cmpsb
test
aas
addl
scas
xchg
sbb
fcompl
mov
push
out
movsbl
call
mov
cmp
mov
out
nop
into
das
clc
cmp
sbb
add
out
inc
sahf
in
pop
jns
and
out
push
or
sub
mov
outsl
movsb
cmp
lea
pop
das
push
sub
xchg
dec
dec
daa
lds
add
mov
mov
pop
mov
adc
lock
mov
jg
decb
mov
mov
or
add
idivl
xor
xchg
je
dec
jg
jns
popa
nop
lock
bnd
ficoml
in
stos
stos
dec
std
sar
lods
mov
fnsave
sub
repz
mov
gs
mov
cmp
xor
inc
pushf
mov
and
inc
pop
xchg
cs
ret
test
mov
cmc
mov
mov
push
lret
in
mov
cmpsl
mov
xchg
in
pop
pop
fmuls
xor
es
xchg
inc
jno
cs
xchg
fisttpl
arpl
insb
dec
mov
lea
xchg
aas
cmpsl
ret
jbe
add
mov
xchg
add
adc
xor
pusha
sub
xchg
sub
pop
fimuls
sahf
loop
xchg
xchg
pushf
call
in
lods
pop
jle
flds
aad
into
sub
out
lahf
sbb
cmp
or
and
adc
repz
andb
pop
cmp
nop
sbb
mov
imul
popf
inc
ja
fwait
clc
or
dec
es
in
dec
decl
dec
fwait
jnp
cmp
cmp
fmull
push
mov
addr16
incl
xor
push
lods
pop
fistpll
outsl
loope
xchg
xchg
jno
mov
into
mov
jge
inc
pop
andl
xor
jmp
cli
pop
xchg
adc
xchg
mov
dec
fbld
push
movsb
add
pop
mov
sub
sub
leave
push
stos
push
cmp
sbb
pop
cltd
mov
arpl
adc
into
cltd
stos
leave
addl
xor
pop
mov
sub
sub
lods
ss
addr16
push
loope
mov
shlb
add
add
loopne
push
ja
sub
std
or
lret
cld
clc
test
and
jge
test
or
push
push
adc
movl
dec
in
xchg
push
sub
dec
pop
jne
pop
outsl
jnp
dec
cmp
fdivl
sarl
adc
data16
call
cmp
out
cli
xchg
xorb
jmp
int3
jp
lods
and
push
test
and
cmp
mov
xabort
out
jmp
mov
mov
pop
stc
mov
push
popa
popa
and
into
movsb
cmp
loop
mov
jecxz
lret
push
je
add
push
ljmp
es
cmpsl
dec
jb
jnp
sbbb
js
outsl
aas
mov
jae
insl
or
inc
lret
sahf
aas
std
and
outsl
push
int3
pushf
mov
push
xlat
and
xchg
push
sahf
xor
bound
fdivrl
testl
dec
jbe
ret
adc
xor
jbe
movsl
in
mov
sbb
xor
xchg
inc
mov
dec
mov
rol
insl
aam
lea
cmc
mov
xlat
leave
sub
cltd
int
jne
push
out
rorb
dec
xchg
lea
inc
pop
add
imul
or
mov
imul
jp
push
pop
inc
adc
cltd
xor
mov
add
sbb
cmp
nop
mov
repnz
dec
mov
shrb
cmp
lret
jbe
scas
mov
test
mov
test
dec
jne
in
sub
mov
gs
sub
enter
and
inc
outsl
inc
call
das
bound
icebp
ror
lods
fnstsw
jge
mov
mov
ljmp
idivl
fistl
mov
xchg
add
insb
sub
fsubrl
ret
xor
jge
inc
adc
xchg
sti
jge
stos
mov
inc
out
aad
sahf
sub
inc
inc
mov
loop
in
ret
popa
push
mov
je
movsb
outsb
andl
jecxz
dec
cmp
mov
outsb
cmp
dec
lret
mov
subl
or
dec
fcomps
in
jne
fisubl
pop
idivb
adcl
add
xor
in
cmp
addr16
sbb
xchg
xor
orl
jecxz
ret
movsb
cmp
mov
mov
insl
repz
roll
mov
cltd
mov
mov
cwtl
pop
aas
push
mov
pop
ja
nop
pop
jnp
pop
mov
and
mov
and
push
inc
outsl
aaa
xorb
sbb
lret
push
scas
orb
and
leave
mov
sbb
stos
jno
jl
pmaxub
add
popa
clc
xchg
dec
xchg
xchg
mov
or
shl
repnz
jl
inc
mov
push
mov
dec
xor
dec
jle
sbb
mov
add
jecxz
fnstsw
mov
sarb
divl
pop
dec
gs
out
scas
ret
cld
cld
add
pop
push
jnp
push
and
mov
mov
jo
ss
dec
cmpsl
cld
mov
arpl
jae
pushf
rep
add
pop
lret
ljmp
inc
pop
andb
cmpxchg
aas
loop
push
xchg
pop
out
imul
loop
clc
mov
pop
cwtl
push
pop
push
jg
dec
cli
jne
incl
lods
cmp
adc
mov
xor
loopne
cmp
dec
adc
data16
xlat
push
test
xchg
sbb
mov
sbb
inc
clc
sbb
addr16
cmpsl
adc
adc
sbbl
mov
push
mov
call
sbb
mov
fldcw
and
jno
dec
pop
xchg
cmp
dec
mov
jne
outsl
cmp
scas
imul
gs
test
mov
cmp
xchg
or
mov
push
movsb
or
adc
int3
lds
push
rcrb
mov
popa
jmp
mov
shrb
faddp
movsl
push
mov
sub
mov
insb
psubsw
fcmovu
pop
xchg
cmp
mov
popa
das
fcoml
mov
shlb
mov
mov
xor
xorl
mov
sub
movsb
arpl
jl
andb
add
add
aaa
inc
xchg
xchg
xchg
out
mov
loope
jnp
push
test
cmp
jo
pop
xchg
mov
inc
gs
pop
fwait
xor
sub
and
mov
ret
in
mov
mov
in
jle
mov
mov
cmp
pop
pop
inc
mov
aad
lret
imull
and
rclb
in
cmpsb
cmp
xor
xchg
sti
xchg
mov
cld
inc
pop
fildll
imul
fs
lods
aam
and
pop
add
dec
insl
int
mov
push
inc
mov
jmp
fdivs
jle
popa
pusha
lock
rol
stos
push
jno
jp
sbb
sbb
add
popa
lods
or
icebp
jns
and
lcall
adc
and
cmp
inc
ja
xor
in
sub
adc
rol
lods
push
call
into
data16
aas
push
icebp
mov
fbstp
dec
fisubrl
pop
stos
nop
stos
ja
xor
das
insl
int
cmp
fbld
in
cmpsl
out
lret
push
lods
sti
mov
add
pop
and
push
cmp
pop
mov
loopne
ja
test
js
cmpsl
test
out
les
fcomip
mov
idivb
jg
repz
jb
xchg
daa
sahf
xchg
jae
shl
lcall
mov
repnz
ret
jg
shll
jmp
dec
xor
ds
fsubrs
ret
in
sbb
sub
rorb
in
xchg
pop
or
dec
push
ljmp
adc
call
mov
data16
or
mov
fiaddl
outsb
adc
push
call
test
sbb
stos
and
mov
jge
idivl
or
cmpl
sar
int
jl
std
sbb
sbbl
mov
sbb
addr16
add
divb
clc
pop
xchg
out
in
adc
shlb
fcompl
icebp
dec
inc
enter
add
shll
inc
push
push
in
push
andb
stos
shlb
int3
scas
call
ret
cmp
sahf
cmpsl
mov
and
mov
test
pushf
js
orb
addl
push
or
add
jle
mov
inc
das
xor
std
cltd
xor
shl
adc
loope
test
lret
and
mov
xchg
xor
movsl
xor
mov
sahf
frstor
shl
xor
push
ja
push
movsb
sbb
jge
xchg
or
jge
jns
lods
add
sahf
rcrl
jbe
std
mov
cmp
ja
adc
iret
or
sbb
and
mov
sub
and
adc
std
rcll
mov
psubsw
bound
xchg
sbb
cmpsb
push
call
shlb
xchg
aaa
shlb
aam
mov
or
adc
jne
lods
inc
ficoms
add
push
imul
pushf
jne
adc
cmp
shrb
lret
mov
movsb
test
ret
test
mov
push
add
cmpsl
call
push
scas
sbb
ds
arpl
loope
mov
dec
add
pop
lods
and
int3
push
dec
in
and
jmp
test
or
test
mov
bound
lret
pop
cmc
data16
fistl
push
into
jb
push
sub
test
outsl
inc
sub
movsl
cmp
insl
sbbb
aas
dec
jl
xor
cmp
fbld
ja
pop
loopne
xchg
fwait
jg
jp
and
mov
sar
sub
bound
sarl
or
cmpsl
jecxz
dec
leave
movsb
jecxz
stc
push
mov
hlt
ret
loope
outsb
xor
inc
daa
sub
push
and
mov
imul
dec
data16
cmp
inc
and
fcmovbe
xor
arpl
inc
xchg
push
mov
and
sub
inc
aad
testl
lock
xchg
sub
testb
and
mov
pop
add
mov
or
mov
pop
dec
and
hlt
jge
aaa
and
dec
dec
mov
ja
cmpsb
push
enter
xchg
add
dec
dec
out
sbb
xorb
xchg
sub
enter
or
in
out
xor
push
insb
add
cmpb
pop
call
scas
outsl
ljmp
sbb
cmpsb
sbb
pop
fidivs
adc
sub
adc
pop
out
inc
inc
sub
xchg
or
inc
push
or
loope
cmp
fistps
ja
les
ror
xor
dec
loop
cmp
pop
push
leave
ret
mov
or
xchg
or
adc
mov
mov
add
rol
shll
pop
adc
das
cmp
xor
mov
cmp
lcall
cwtl
imul
popf
jb
dec
mov
popa
aaa
push
mov
pop
jmp
dec
inc
xchg
lahf
push
stos
jnp
xor
scas
adc
mov
pop
sbb
pusha
shrl
enter
sub
push
jne
sub
loop
mov
pushf
lds
inc
dec
test
out
xlat
insb
fbstp
mov
and
pop
outsb
jp
mov
insl
mov
xor
sub
add
inc
mov
fistl
fisubrl
or
mov
mov
jne
pop
arpl
js
pop
or
out
inc
call
add
js
popf
shll
xchg
cmpsl
aam
fcomps
dec
xor
aad
or
xor
mov
cwtl
loope
cmp
outsb
sti
and
and
add
pop
inc
stc
cmp
pop
push
movb
jns
pop
cmpl
xorb
sub
lret
sahf
jge
jo
xor
cmpsb
lock
push
xor
or
inc
ds
xchg
fsub
daa
jle
std
sbb
clc
in
sbb
push
dec
lea
insb
jle
cwtl
test
xchg
jmp
in
jmp
sbb
orb
mov
imul
aaa
negb
lock
jge
mov
testl
inc
daa
cmpsb
xchg
cmp
dec
divb
pop
dec
movsb
add
fistps
fidivs
out
fisubrs
dec
pop
mov
cmp
pop
dec
adc
lret
jg
mov
push
jne
fcoml
pop
es
popa
pop
pushf
aas
int
enterw
mov
icebp
jne
out
leave
mov
mov
or
xchg
jnp
pusha
aaa
xchg
inc
push
mov
ror
add
sbb
jb
sahf
sub
nop
rep
inc
and
xchg
testb
addr16
bound
loopne
or
mov
stos
dec
sbb
adc
mov
and
outsl
adc
sub
mov
dec
dec
jo
push
push
xor
jno
cld
popa
push
shll
mov
insb
jno
mov
or
jp
sbb
loope,pn
push
push
dec
popf
movsb
dec
pop
into
push
inc
sti
and
ja
imull
push
mov
cli
sbb
jbe,pt
arpl
fldl
fdivl
sbb
jne
jg
xor
push
push
lods
inc
mov
or
inc
mov
shll
add
jno
jno
andl
jp
fisubrs
sahf
or
or
push
fidivs
fildll
test
ds
xchg
outsb
loope
outsl
fadds
sbb
cmp
mov
and
push
loope
push
jae
iret
les
cli
xchg
inc
dec
enter
ja
push
fwait
sub
inc
sbb
out
lret
jbe
and
scas
lods
mov
add
loop
xchg
sbb
jmp
xchg
inc
push
xchg
inc
xor
xchg
fimull
cmp
sbb
popf
jo
jg
xchg
movsl
ret
jp
lds
cltd
sub
sarl
mov
lods
addb
iret
inc
inc
add
and
xor
scas
test
add
mov
js
outsb
sar
cltd
aam
xchg
lret
pop
out
sti
in
pop
adc
push
lods
ror
cwtl
std
jecxz
xor
or
push
test
fisttpl
fidivl
mov
lcall
sarb
jmp
xlat
ljmp
into
jne
mov
fnstcw
pop
pusha
xor
test
ficompl
push
add
jo
xor
xchg
test
push
ja
sbb
cs
xor
aam
popf
or
int
adc
cmpsb
inc
xlat
xlat
add
push
je
mov
test
dec
inc
cltd
xorb
jmp
ss
cmc
fwait
loope
push
sahf
mov
movsb
cmp
add
pop
ss
push
add
push
leave
mov
mov
xchg
test
lcall
and
out
out
int
pop
stc
rclb
loopne
dec
gs
mov
nop
lock
adc
icebp
push
push
es
mov
out
jmp
push
mov
clc
mov
ljmp
rclb
cld
xchg
cmp
push
jmp
lods
and
xorb
aam
cmp
pusha
jno
xchg
mov
dec
pop
jno
test
stc
xchg
or
push
sbbb
fisttpll
mov
lret
aam
movsw
rclb
lcall
dec
fsubr
into
adc
adc
cmp
mov
hlt
inc
movsl
mov
in
push
sar
lea
inc
lret
loop
mov
pop
xchg
scas
mov
jo
push
outsb
jl
js
xchg
jg
xor
orl
dec
xchg
out
divl
dec
pop
adc
das
movb
fisubs
andb
pop
imul
mov
xor
jo
into
mov
cltd
lea
push
cmpsb
xor
or
adc
ss
xlat
mov
inc
pop
jns
pop
cmc
or
add
mov
xor
xor
add
sbb
or
stc
nop
lock
push
or
mov
rorb
loop
js
fsub
xchg
pop
std
sbb
xchg
sub
loop
sub
sub
bts
dec
loop
mov
lea
pushl
xchg
cmpsb
popa
xchg
enter
lret
sbb
loopne
sub
xchg
jp
stos
mov
mov
push
mov
mov
xchg
and
mov
aam
inc
xchg
xchg
jns
push
stos
mov
lret
cmp
arpl
push
lcall
mov
sbb
dec
inc
add
adc
xlat
mov
jo
outsl
and
dec
sbb
std
popf
imul
std
xchg
mov
fwait
insl
leave
inc
pop
ds
ljmp
aaa
rcrb
ljmp
rorl
cs
stc
andl
adc
and
inc
mov
js
push
out
jge
hlt
outsb
push
outsb
aad
adc
mov
daa
mov
jge
inc
fistl
stc
push
aam
call
mov
cmp
fwait
jp
push
jo
imul
adc
mov
movzwl
push
stos
mov
mov
sti
leave
fcoms
stos
inc
jecxz
adc
loop
mov
imul
xchg
adc
and
sbb
jnp
ljmp
ret
pop
stos
outsl
iret
fdivrl
je
dec
mov
repnz
test
clc
jmp
pop
fcoms
mov
jbe
jns
dec
in
xchg
lods
inc
and
xchg
mov
push
inc
in
loop
pop
adc
js
movsl
xlat
test
xchg
out
mov
add
je
ret
and
in
push
sbb
das
lds
dec
incl
pushf
xor
sub
push
lcall
mov
mov
pop
jno
ss
loopne
mov
sub
test
inc
test
dec
sub
mov
cs
mov
xchg
hlt
push
dec
xor
adc
pop
sbb
call
sub
loop
xchg
adc
or
stos
icebp
mov
cli
jne
pop
cwtl
movsl
jb
push
jns
push
fisubrs
dec
pop
cltd
mov
inc
sbb
push
rcll
fwait
popf
repnz
cmp
fstpt
cmp
pop
cmp
int
fistps
cmpsl
jecxz
sbb
aam
and
push
add
xor
mov
dec
out
push
xchg
or
lret
jb
mov
subl
inc
subb
cmp
mov
rclb
xchg
addr16
sub
shll
mov
fsubs
test
mov
xlat
rcrl
call
repnz
cmp
dec
cmp
clc
xchg
fs
pop
cmpsb
inc
pop
xchg
pushf
pop
push
or
and
scas
mov
and
dec
add
sbb
jno
jecxz
scas
call
xchg
dec
sahf
xor
test
call
jmp
loop
fsubs
jge
shll
into
cmp
xor
jb
pop
pop
jnp
mov
sub
sbb
ja
js
aad
cmp
cmp
xchg
incl
cmpsl
test
pop
out
xor
cmc
scas
jns
mov
faddl
rcrl
test
pop
mov
mov
inc
mov
test
xor
int3
cld
aam
test
bound
mov
pop
push
pushf
sub
testb
jecxz
stos
adc
jg
cmp
dec
stos
jnp
jnp
adcb
cmpsl
push
add
fdivrl
loopne
leave
loope
pop
add
xchg
cmp
inc
or
aam
fsubrs
cli
xchg
loopne
dec
push
mov
ds
mov
cld
adc
outsl
aad
mov
sbb
fidivs
repz
sub
push
shrl
shll
cmp
icebp
popa
shll
lds
jge
dec
push
mov
add
arpl
add
pop
fsubrs
push
fcmovbe
xchg
or
add
sub
test
idivl
mov
mov
sub
ret
aaa
sub
xor
sbb
int
jnp
adc
stos
bound
dec
popa
cmp
mov
out
cmpsl
imulb
fbstp
fwait
nop
iret
je
mov
mul
push
pop
shr
sub
fiadds
scas
sub
iret
mov
push
jg
mov
inc
mov
mov
lcall
pop
xor
xchg
mov
push
enter
test
loopne
or
iret
data16
push
ret
cmc
fsubrp
incl
sti
or
mov
sbb
xor
sbb
adc
add
imul
or
inc
mov
fiaddl
mov
mov
arpl
fs
mov
and
mov
sbb
lock
jp
movsl
lods
jb
popf
sub
iret
jns
and
cmp
fdiv
jbe
lahf
xchg
mov
cmp
xchg
mull
fcomp
bt
jecxz
mov
arpl
loope
leave
imulb
sub
xor
push
sbb
xor
jae
mov
jge
push
pop
mov
xchg
adc
inc
pop
jb
add
mov
mov
dec
mov
lret
xor
daa
push
fidivrl
icebp
hlt
loope
shl
aad
movsl
ljmp
adc
mov
adc
or
shl
push
aad
mov
adc
outsb
jl
test
mov
mov
xor
add
xor
mov
cmp
je
das
lock
clc
fstpl
pop
andb
sub
inc
aam
adcb
jg
sbb
mov
jne
dec
and
int3
pushf
sub
xor
and
adc
xorl
jl
jo
cvtps2pi
testl
sar
test
adc
sti
jnp
std
xchg
jge,pn
cli
inc
mov
fisubs
sub
push
xchg
pushl
or
pop
repz
out
int3
mov
mov
xchg
sbbl
mov
addr16
inc
mov
xchg
and
shl
jmp
cmp
jmp
hlt
xchg
cmp
movsb
aaa
rorl
mov
in
push
pop
add
mov
int
sbb
ja
movsb
cltd
std
mov
negb
hlt
dec
fnsave
cmp
inc
test
and
enter
and
aas
dec
pushl
xchg
push
lcall
mov
enter
adc
sahf
xor
out
test
jmp
ljmp
lock
je
or
dec
push
mov
pop
xchg
xor
jmp
mov
mov
aam
loope
bound
dec
aas
add
aam
jae
in
int
popf
xor
imul
push
clc
mov
pop
int3
lahf
in
aam
in
pop
test
sbb
lea
stos
adc
xchg
pop
jne
or
jne
leave
xchg
xor
jl,pt
hlt
mov
insb
out
pop
popf
cltd
mov
push
cmp
pop
loope
mov
orl
leave
aas
push
sti
jne
subl
outsb
and
or
out
add
add
fnsave
pushf
movb
pop
aaa
pop
mov
stos
mov
sbb
sub
outsb
add
mov
jb
or
xchg
inc
adc
sbb
lds
sar
out
mov
pop
aaa
pop
jno
push
add
out
and
adc
push
hlt
ret
cwtl
mov
push
add
cmp
cmp
lea
aad
fwait
xor
jbe
and
xchg
mov
mov
mov
and
inc
dec
and
inc
fmull
das
stc
pop
frstor
sbbl
dec
xor
adc
arpl
orl
ficomps
lcall
cld
sahf
cld
rcrl
mov
sti
arpl
xchg
sbb
cmp
mov
mov
jmp
xor
sarb
icebp
sub
mov
pusha
mov
fsubrp
test
decb
aam
ret
into
mov
dec
pop
mov
aam
push
cmpsl
stc
fdivl
leave
int
push
mov
mov
inc
and
hlt
adc
inc
adc
lods
inc
enter
mov
jge
fs
cs
xchg
push
sub
shrb
mov
popf
xor
adc
ds
inc
bound
in
cmp
mov
ljmp
ljmp
in
mov
dec
fchs
aas
lcall
arpl
pop
lock
inc
out
inc
sub
or
sbb
pop
mov
je,pn
scas
adc
aad
mov
popa
outsb
sub
aam
fs
mov
inc
push
dec
movsl
jmp
add
movsb
jbe
out
inc
jp
cmp
je
pop
mov
dec
mov
xchg
or
jbe
mov
loopne
iret
mov
pop
push
add
or
iret
pop
xchg
mov
in
int
mov
push
in
insl
dec
pusha
call
les
cld
or
test
dec
mov
aad
outsl
pop
ret
mov
addr16
movsb
js
dec
pop
fidivrs
sub
int3
in
aas
ja
imul
and
push
loopne
stc
xchg
pop
cli
inc
daa
loop
pop
je
cld
xchg
add
sbb
cmpsb
dec
lret
cmpsl
loope
mov
shrb
sti
dec
pop
fldt
mov
push
pcmpgtd
cld
rcll
test
inc
fnstsw
ficoms
sbb
stc
adc
xor
mov
cwtl
icebp
enter
cmove
mov
fbld
adc
add
aad
cmpsb
inc
ret
xor
jge
mov
add
dec
inc
nop
stc
out
test
sub
xchg
fdivrs
push
lcall
mov
notb
mov
jl
dec
sbb
xlat
aad
sahf
scas
lret
test
sahf
or
fs
and
inc
movsl
sbb
sub
dec
xchg
add
in
iret
int3
clc
cmp
or
call
mov
ljmp
aaa
clc
ds
loop,pt
push
fldcw
lcall
insl
xor
dec
movsb
push
popf
orb
cwtl
sbb
cld
cmpsl
mov
adc
rclb
test
sub
xchg
xchg
xchg
adc
and
fsubs
pop
testb
iret
xor
jge
push
push
sbb
lds
out
pop
push
out
xchg
inc
repnz
test
mov
mov
dec
cwtl
daa
inc
cltd
shll
dec
xchg
pop
adc
rorb
pop
jle
int
fsts
mov
movsb
mov
filds
pushf
roll
sbb
lods
pop
ljmp
loop
roll
popf
push
sub
sbb
ss
out
outsl
jnp
cmc
sbb
pop
cmp
stos
not
scas
cmc
lahf
lret
or
popf
jle
ljmp
jle
aam
push
sbb
cs
mov
test
jne
je
xor
sub
scas
inc
punpckldq
int3
ja
push
xchg
push
jmp
cmpsb
sbb
test
push
stos
cmp
mov
pop
jmp
jmp
mov
in
adc
cmp
cmp
pop
inc
fsubrs
xor
jp
jge
loope
sti
cld
adcl
repnz
pop
loop
insl
fs
mov
aas
push
outsl
add
fsubrp
int
pop
mov
or
mov
jno
lahf
xchg
sarl
lret
xchg
sarl
mov
xor
testl
and
ljmp
lods
or
mov
xchg
fcom
in
or
out
pop
das
lods
mov
cmp
jge
into
mov
daa
push
in
testl
insb
pop
adc
lret
aam
in
adcl
in
testb
mov
hlt
aas
cmp
push
stos
pop
lds
mov
pusha
notl
pop
jg
cld
jle
rclb
popf
xor
repz
add
cmp
adc
adc
jmp
outsb
pop
loop
lea
fdivrl
add
movl
xchg
sub
jge
sub
outsb
jns
call
imul
and
pop
ja
les
cwtl
and
inc
pop
aaa
in
jb
into
jecxz
push
adc
into
and
fildl
add
sub
mov
sarb
cmp
adc
xchg
sub
jnp
scas
jo
push
shrl
jle
pop
mov
les
inc
inc
inc
fnstenv
pusha
negl
xchg
lret
cmp
scas
adc
mov
inc
or
jb
arpl
cmpl
aas
out
es
aam
xchg
xor
mov
popa
shl
xchg
and
mov
xlat
sti
or
sarb
call
or
enter
jg
or
bound
loop
xchg
mov
cmpb
pop
sahf
xchg
lods
fmulp
cwtl
cmp
notl
xchg
sub
popf
dec
add
jnp
inc
lods
arpl
xchg
jns
push
fistpl
xor
loopne
xor
add
xor
push
pop
cmp
jle
fcomi
cmp
enter
dec
mov
mov
addr16
stc
leave
bound
loop
data16
cmpsl
xchg
cwtl
push
cltd
mov
push
call
cli
nop
jge
mov
sub
and
rcr
inc
add
scas
jecxz
adc
mov
jmp
push
adc
fsub
mov
test
pop
push
test
dec
out
lea
shl
nop
push
cmp
cmc
or
notl
sub
mov
aad
mov
push
xchg
xchg
pop
jecxz
cmpl
rorl
std
inc
outsw
mov
loope
test
cmpl
add
push
adcl
fwait
jb
pop
mov
add
or
or
pop
rolb
cmp
jecxz
andl
jns
xor
dec
sti
mov
daa
out
mov
test
mov
cmpsl
js
inc
in
jmp
and
test
mov
aam
add
fsubl
es
jns
inc
arpl
sti
adc
cmp
add
mov
push
movsb
mov
ret
sbb
xchg
les
std
cmc
daa
adc
jno
xor
xor
rorb
inc
lea
mov
adc
sti
sbb
aam
movsl
sbb
push
push
repz
sti
xchg
testl
sbb
sbb
inc
lcall
sub
lods
mov
aam
mov
cmp
arpl
mov
adc
cmp
cwtl
jnp
mov
icebp
cld
lods
int
pop
pop
in
inc
xor
mov
push
sub
sub
mov
arpl
xchg
xor
inc
por
ficompl
subb
test
mov
aam
mov
cwtl
addr16
stos
push
ja
mov
ficoml
popa
pushf
push
dec
mov
repz
rolb
scas
inc
cmp
ret
push
jne
xor
aas
fwait
xchg
jmp
shll
and
movsb
ret
mov
test
notl
sahf
int3
push
mov
jg
lret
lret
subl
lds
in
stos
dec
mov
and
inc
lret
testl
cmc
push
out
mov
fisttpll
stos
test
pop
inc
adc
fsubs
pop
insb
rcrl
lea
mov
fisubl
jecxz
sbb
dec
pop
aam
popf
xor
mov
mov
sbb
lods
bound
adc
mov
mov
mov
test
dec
or
mov
xchg
push
inc
fisttpll
jmp
inc
mov
cmpb
mov
loopne
lock
jg
movsl
xor
mov
pop
in
push
aam
ret
insl
mov
lods
xchg
addr16
in
mov
dec
mov
inc
jae
enter
and
out
ror
in
divl
sbb
adc
and
loop
imull
popa
xor
movsl
nop
push
jno
jnp
imulb
addl
add
inc
stos
pushf
jecxz
imul
movsl
push
aam
mov
ret
hlt
popf
dec
es
shrb
mov
dec
xchg
sbb
addr16
cmp
and
lret
je
jg
in
cmp
xchg
inc
rcrb
pop
divb
jmp
mov
hlt
adc
adc
popa
sub
loopne
push
movsb
fdivl
lahf
arpl
or
cli
sbb
adc
xchg
pusha
add
cmp
fsubr
or
test
adc
mov
sbb
and
add
call
in
loop
pop
mov
fcmovne
insb
ds
mov
mov
mov
pushf
sti
adc
iret
fwait
xor
ljmp
ja
and
imul
loop
mov
inc
cmp
dec
flds
mov
pop
add
xchg
scas
stc
shr
sbb
sbb
loop
dec
cmp
adc
sahf
xchg
enter
mov
scas
dec
loop
cmp
cwtl
mov
pop
loopne
add
push
mov
mov
fsubrl
sub
testb
pusha
lahf
test
bound
pop
ret
jb
sahf
dec
lock
mov
fiadds
pushf
imul
mov
ljmp
jno
push
testb
mov
out
scas
inc
das
inc
jmp
out
int
lret
jg
mov
dec
in
mov
xchg
stc
jb
icebp
mov
push
gs
test
les
xor
adc
dec
jae
push
rcll
aam
sbb
sub
sub
in
jb
fiaddl
sbb
or
xchg
lahf
add
and
adcb
inc
lahf
fwait
mulb
lahf
mov
pop
adc
xchg
shrb
jns
fsubrl
arpl
push
push
insl
or
or
fnsave
imul
mov
xchg
inc
fcmovnb
movsl
push
out
cli
mov
xrelease
dec
dec
dec
cli
lods
or
fsubrs
repz
test
loope
adc
and
jmp
inc
adc
std
or
pop
sti
in
int
or
pop
ds
addr16
jae
iret
mov
sub
rclb
dec
cmc
dec
imulb
jnp
outsl
js
jge
sbbl
adc
or
mov
jns
fadds
cmpsl
clc
leave
mov
aam
xchg
jg
inc
mov
mov
arpl
xor
pop
sub
rcrl
add
cli
xchg
shl
lea
and
stos
mov
adc
jb
cmp
fcmovbe
mov
sbb
cld
or
mov
ret
loop
bound
inc
lahf
or
jle
shrl
adc
aam
mov
pop
push
jle
fnstcw
and
test
push
cmp
daa
lret
bound
fisttpll
test
js
xchg
into
bswap
cmp
bound
pop
test
test
daa
ret
ret
das
mov
fstl
cmp
sbb
and
fisubl
incl
inc
filds
sub
fldt
and
push
dec
es
push
fildll
stos
pop
in
mull
popf
jbe
jp
sub
or
dec
repz
jecxz
pop
adc
jne
or
mov
test
fnstenv
enter
dec
inc
call
testb
mov
inc
and
cwtl
jge
cmp
jg
enter
in
sub
in
fmuls
pop
or
xchg
push
push
loopne
andl
out
xchg
es
mov
adc
push
jb
adc
sbb
fwait
dec
leave
pusha
jg
jno
call
std
pop
in
cld
sahf
and
push
ljmp
cmpsl
cmc
jg
pop
cli
cmpsl
ret
adc
sbb
rcrb
jp
and
dec
decb
xchg
sbbl
fnstsw
cmpb
mov
fidivrl
pop
incl
rol
dec
pop
mov
xchg
adc
lahf
xor
repnz
or
mov
arpl
gs
cmp
dec
pop
fistpll
addl
test
lahf
outsl
jbe
dec
adc
lret
cmp
pop
pop
mov
mov
pop
push
or
stos
arpl
fs
jae
insl
outsl
daa
mov
movsl
pop
pop
pop
js
ja
jp
jno
scas
jp
and
aas
andb
or
mov
fildl
dec
sub
mov
sub
pop
lret
iret
data16
les
fcoms
sbb
rorl
cmp
cmp
lods
das
or
fwait
jae
sub
popf
pop
repnz
and
imul
xchg
xchg
push
jg
shll
add
rolb
xchg
sbb
ret
pop
imul
add
jecxz
stos
mov
mov
std
mov
outsl
idivl
movsl
mov
mov
cmp
jo
lods
sub
mov
popa
mov
mov
push
dec
int
pop
mov
mov
gs
into
inc
rol
idiv
adc
and
inc
lret
jno
lds
mov
adc
jbe
clc
jne
add
mov
arpl
dec
xchg
aas
loope
popa
mov
cmpsb
inc
adc
dec
loop
fists
pushf
imul
inc
stos
mov
das
les
int3
xor
xor
mov
inc
jecxz
push
movsb
repz
mov
mov
negb
test
nop
loopne
movsb
in
stos
mov
fdivrl
add
pop
cmp
in
sbb
cwtl
cld
data16
lahf
and
pop
mov
mov
add
mov
test
test
outsl
lods
push
sbb
into
es
cld
xchg
push
pusha
jbe
push
es
cmp
ds
jp
inc
pop
sub
dec
dec
stc
clc
test
aaa
inc
in
xor
imul
push
lods
in
into
dec
adc
jb
push
lret
ja
sbb
or
jle
inc
jo
popf
pusha
mov
sbb
sbb
iret
bound
mov
lock
hlt
dec
push
mov
dec
imul
mov
mov
out
xchg
mov
sub
mov
dec
filds
add
frstor
xor
inc
push
lcall
inc
push
sbb
dec
mov
xor
adc
fldenv
mov
loop
lret
xlat
xor
pop
test
mov
push
icebp
loopne
push
push
sub
xchg
sub
mov
push
mov
mov
fisubrs
push
xchg
cwtl
imul
stos
fmul
popf
ret
fdivrl
cltd
push
xlat
leave
push
adc
jecxz
mov
testb
jmp
cmpsb
fsubr
ficomps
dec
fimull
xor
ret
push
jmp
xchg
inc
out
repnz
xor
lea
loopne
mov
cmp
das
les
sahf
adc
int
pop
ljmp
insb
add
movsb
inc
dec
fmulp
pop
ror
cmpsb
cmp
outsl
mov
jge
inc
stc
mov
insb
jl
jecxz
adc
adc
sub
fwait
mov
sub
dec
cmp
cmpsl
xchg
mov
xor
cs
mov
fnstcw
je
nop
mov
xchg
adc
or
sub
in
xor
push
jns
lds
xor
push
dec
jge
push
call
in
test
sti
lea
mov
mov
xor
les
lret
ljmp
push
cli
mov
fcmovbe
test
xchg
mov
popf
mov
ret
and
adcb
mov
aam
sub
pop
das
inc
push
jmp
sub
pop
pop
imul
xor
inc
icebp
push
cli
xchg
push
lret
cli
pop
sbb
or
mov
hlt
xor
std
adc
push
jl
cmp
scas
and
aam
cld
add
lods
inc
mov
fidivs
arpl
mov
outsl
iret
pushl
jl
dec
in
sahf
cmp
sti
js
push
push
add
mov
sub
fs
cmpsb
lock
push
mov
dec
mov
jge
lods
mov
xorb
mov
loop
sub
lea
jle
sbb
adc
vmovd
je
stc
popa
cwtl
ret
adc
ret
pop
mov
add
xor
lret
popf
mov
cmpsb
cltd
lods
fs
push
mov
pop
fimuls
mov
rclb
loopne
in
xor
and
pop
sbb
xor
out
lock
or
cmp
stos
in
and
ja
mov
fistl
outsl
fidivl
call
aas
sub
fdiv
pusha
sub
xchg
daa
or
mov
and
inc
xor
clc
inc
fldt
and
xchg
dec
bound
jle
adc
out
and
mov
inc
faddl
lret
movsb
fdivl
call
setnp
lret
mov
ljmp
mov
jle
xor
add
xchg
adc
sbb
sub
ret
dec
call
dec
mov
out
orl
sbb
mov
push
mov
mov
dec
out
pusha
movl
and
mov
mov
aad
pop
mov
movsl
sbb
cld
lock
add
inc
clc
push
out
clc
inc
test
call
test
mov
xchg
sbb
mov
cmp
cmpsl
cmp
mov
adcb
jge
mov
ficomps
out
sbb
lahf
push
jmp
into
add
imul
sub
aaa
into
fs
inc
mov
rcll
xchg
mov
sub
push
push
cmp
xor
mov
ret
cmc
and
adc
pop
sbb
cltd
mov
push
aaa
sbb
adc
lret
mov
mov
scas
popa
xor
inc
arpl
adc
out
mov
movsl
icebp
ret
daa
push
rorb
sub
cmp
mov
adc
cld
and
mov
and
sub
inc
dec
lret
std
ss
mov
pop
cmpb
jp
fs
push
outsl
sub
dec
bound
popf
fs
leave
dec
aas
nop
sub
fs
add
sbb
jl
pop
rcrl
repnz
mov
pop
in
shlb
inc
cld
mov
addr16
sahf
mov
sbb
jmp
or
dec
mov
sbb
inc
jp
sbb
test
test
scas
inc
fsubr
xchg
popf
js
fs
mov
and
mov
dec
xor
push
jbe
push
inc
fldt
repz
stc
and
test
mov
cld
loop
clc
sahf
push
inc
addr16
lret
mov
enter
test
shll
jecxz
imul
dec
add
scas
push
fs
stos
testl
push
in
sub
jmp
popf
in
or
mov
mov
stos
fldcw
mov
mov
adc
sbb
lcall
jns
jbe
or
cmpsl
xchg
sub
arpl
pop
jno
movsb
pop
sub
cmpsb
popf
xchg
flds
push
adc
scas
mov
cld
xor
xchg
gs
cmpsl
mov
xchg
jp
shrb
xchg
cli
push
int
mov
or
mov
mov
mov
mov
mov
loop
gs
mov
movsl
in
cmpb
xchg
pop
shlb
in
push
pop
mov
or
xchg
cs
cs
lea
ror
sarb
gs
mov
cmp
sbb
sarb
xrelease
jnp
sub
dec
cwtl
outsl
mov
cmp
popa
inc
pop
xor
or
inc
pop
roll
mov
out
mov
and
lock
in
jae
xor
ret
out
lds
daa
lahf
out
sub
es
sbb
into
clc
adc
pop
add
adc
xchg
xor
jbe
rorl
les
mov
and
xchg
adc
push
js
or
sti
in
sub
mov
adc
xor
inc
add
xchg
or
mov
arpl
pop
mov
je
or
mov
add
xor
inc
fwait
sbbl
testw
adc
js
pushf
arpl
jb
push
movsb
cmpsb
test
les
adc
mov
add
inc
fsubs
inc
pop
idivb
dec
xor
mov
push
imul
test
adc
lods
inc
fists
lds
lret
xchg
jle
shlb
popf
sbb
jo
xor
and
arpl
push
mov
mov
pop
cmp
aad
add
fcomi
test
icebp
mov
pop
lods
movsb
xor
cmpps
and
push
rolb
pop
mov
xor
imul
cmp
push
rclb
aam
push
mov
mov
into
in
jecxz
and
adc
mov
jmp
lahf
xchg
sub
mov
mov
loop
dec
or
out
clc
out
in
sbb
rclb
mov
out
cmpsl
in
ss
repnz
leave
mov
neg
clc
ja
xchg
lcall
lds
test
insb
addb
jecxz
stos
ljmp
jmp
or
imul
fs
inc
dec
lahf
stos
mov
idivl
pop
jns
xchg
sbb
jp
mov
push
mov
lcall
leave
scas
push
jnp
and
sbb
mov
iret
xchg
fwait
arpl
int
push
in
out
or
xor
push
inc
lahf
sub
xchg
fidivs
sbb
and
dec
jecxz
test
add
mov
les
mov
fmuls
inc
fisubrs
inc
lret
pop
icebp
lret
dec
xchg
fnstsw
sbb
cmp
pop
dec
pusha
push
cmpsl
lock
sbb
and
aaa
cmpsb
inc
add
and
mov
into
inc
pop
inc
fcoms
pushf
pop
je
or
mov
out
push
rorl
icebp
pop
push
lea
movsb
sarl
mov
xchg
lret
fidivs
sbbl
sbb
decl
pop
or
cmpsl
add
ret
daa
mov
cmp
xchg
dec
loope
push
cmpsb
mov
xlat
push
push
jmp
cmpsb
lds
adc
xor
jae
jno
outsl
sub
cli
cmp
jmp
ret
push
fnstsw
push
mov
xor
ficoml
push
push
inc
sti
lret
mov
rol
sbb
fdivrl
jmp
int3
ja
shlb
test
outsl
cmp
outsb
sahf
cmp
imul
sub
dec
mov
sar
push
lret
jb
fs
mov
or
aad
xor
sub
mov
inc
ss
lock
pop
push
std
dec
lods
or
sub
pop
xchg
xchg
sub
fwait
pop
add
mov
jbe
lcall
outsb
push
and
insb
dec
add
data16
iret
inc
sub
inc
xchg
loopne
fcmovnb
sbb
mov
rclb
addr16
adc
fbstp
jns
std
pop
cmp
jecxz
dec
sarl
sub
dec
add
mov
orb
adc
loope
ja
ret
jge
fisubrl
lcall
fsub
xchg
aaa
popf
jmp
inc
leave
repz
mov
lret
push
pusha
outsb
repnz
mov
cmpsl
sbb
lea
ss
inc
push
ss
add
js
mov
jg
sub
mov
shlb
push
and
pop
push
jb
mov
and
cmpsl
push
add
in
add
or
mov
add
insl
sbb
xchg
fwait
or
dec
inc
mov
movl
shlb
out
xchg
pusha
adc
jbe
repz
and
popa
cmpb
jnp
add
or
cmp
out
push
mov
filds
aas
dec
xor
jbe
pop
xor
mov
lock
or
loop
mov
aam
div
movsb
cmp
jo
repnz
mov
mov
sub
mov
adc
scas
adcb
scas
repnz
mov
or
xchg
mov
aas
lcall
sarl
push
push
mov
jae
mov
stos
push
sbb
mov
loop
mov
sbbb
pop
sahf
mov
lea
add
mov
pop
push
mov
push
push
out
rol
inc
arpl
movsb
xchg
incb
dec
mov
add
push
mov
jbe
sub
fsubp
xchg
xor
jno
movsb
pop
aaa
aaa
sbb
sub
dec
jae
ret
mov
push
sbb
jo
hlt
stos
inc
fidivrl
xchg
mov
leave
pusha
sub
cmp
jge
out
cwtl
sbb
mov
dec
mov
jno
push
stos
mov
sub
jl
rcrl
cmp
outsb
clc
loope
addr16
ds
cmp
sub
repnz
mov
shlb
push
jns
jnp
jmp
popa
xorb
mov
or
xlat
and
cmc
push
clc
jno
inc
mov
orb
adc
test
or
nop
addr16
xchg
nop
dec
push
int
push
pushl
xor
xor
cmc
sub
lret
in
xchg
cs
es
orb
xchg
in
or
loope
daa
lea
stc
shl
xlat
stc
mov
inc
cmpsb
jecxz
jmp
sub
sub
shl
addr16
movsl
cmp
std
loop
push
ds
lret
divps
inc
in
jg
push
daa
in
lods
pop
sub
xchg
add
cmp
jne
jo
sbb
jnp
shlb
xchg
loope
pop
testl
imul
or
push
incb
lods
andb
je
inc
das
aad
dec
cli
mov
cmp
sahf
pop
lock
push
pushf
inc
adc
mov
dec
addb
cs
in
mov
les
shr
insb
fisttps
mov
mov
int3
jb
ret
mov
adc
or
out
sarb
inc
sbbl
or
mov
inc
rorl
and
inc
pop
xchg
fwait
xchg
sub
jmp
mov
in
insl
add
loop
clc
push
add
jns
push
sahf
stc
rcpps
or
lret
xchg
mov
lods
pop
and
rolb
pop
sbb
mov
jno
pop
jge
push
outsb
add
xor
adc
ret
add
lret
test
or
jle
lcall
ss
inc
jo
mov
xor
ds
shr
add
int3
clc
xlat
inc
pushf
and
int3
arpl
jno
xchg
ljmp
sub
jg
cmp
sti
imul
cltd
sbb
push
inc
lea
pusha
xchg
adc
jns
aam
mov
add
push
push
ret
ss
mov
std
push
lods
pop
dec
xchg
movsl
addr16
fcmove
inc
add
mov
sub
cmp
jge
sbbl
mov
jecxz
jmp
inc
ficompl
add
sar
mov
ret
lods
jecxz
ss
lcall
mov
cmp
and
data16
mov
push
and
xchg
repnz
cmp
lahf
mov
movsl
mov
xlat
in
mov
mov
sub
popf
cli
xchg
addr16
xorb
or
push
call
lahf
lods
pop
pop
pop
mov
cmp
jl
outsl
lods
mov
clc
push
xor
negl
xchg
xchg
lds
ljmp
rcll
fisubs
enter
jb
jg
push
adc
jmp
pop
jp
sbb
mov
pusha
dec
pop
insb
xchg
ss
xlat
scas
cmp
pop
stc
sub
fstpt
pop
xor
fnstsw
inc
mov
pop
add
lahf
jb
jnp
xchg
cli
lahf
adc
call
into
mov
loop
insb
jno
mov
cmp
repnz
in
test
mov
bound
std
sbb
mov
mov
ret
jecxz
sbb
sarl
inc
push
jno
mov
loope
arpl
cmp
fistpl
or
dec
push
pop
loope
sub
jmp
es
xchg
int3
and
push
jnp
push
pushf
idivb
push
int3
fidivs
or
mov
or
adcb
sub
mov
out
inc
adc
lret
and
in
cmpsl
jl
fwait
xchg
lahf
add
mov
mov
mov
adc
lea
lret
cld
ret
adc
shrb
dec
sub
add
mov
adc
mov
adc
ljmp
jno
frstor
ret
sbb
push
stos
jne
lahf
je
popf
xor
mov
cld
push
dec
mov
push
test
xor
loop
mov
sub
mov
mov
jl
scas
mov
pop
mov
push
jno
xchg
push
cmp
mov
push
cmpsl
xor
pushf
jne
outsb
add
push
mov
mov
xor
or
mov
pop
lcall
jae
popa
jge
adc
pop
mov
push
xlat
sub
sbb
adc
mov
js
pmulhuw
fdivp
dec
sbb
imul
sub
daa
pop
xchg
inc
pushf
aam
scas
inc
dec
cmc
and
stos
inc
inc
out
rcr
add
adc
add
ret
outsb
inc
out
cmpsb
stc
ret
jbe
fistpll
icebp
sub
addr16
pop
adc
cmp
adcl
sub
cmp
repnz
xchg
je
fxch
xchg
mov
sub
movsb
or
into
test
jp
mov
adc
rcrl
and
mov
inc
cwtl
shlb
hlt
popf
mov
jl
bound
pop
mov
xchg
push
repz
cmp
sbb
jnp
lods
pushf
jne
adc
mov
cmpsl
cld
push
mov
jp
xor
ja
mov
push
add
fisubrl
insb
mov
mov
xchg
fistpl
xor
adc
cmp
outsb
ret
dec
popf
jbe
cli
dec
lahf
adc
push
test
es
sub
adcb
mov
xor
sbb
int
jge
xlat
push
push
jmp
std
pop
mov
lods
jb
into
pop
adc
dec
mov
inc
mov
testl
shrl
out
loop
sbb
sub
mov
mov
fdiv
iret
repnz
std
shrl
add
or
cmp
pushf
mov
jo
icebp
aad
mov
fidivs
inc
fisubl
pop
js
mov
inc
mov
sub
test
ljmp
aad
jg
adc
push
mov
fnsave
dec
mov
cmpl
sbb
shlb
xchg
aaa
mov
jp
movsb
imul
iret
cmp
loopne
push
pop
or
fnstenv
inc
ds
add
inc
cltd
iret
and
xchg
lcall
ds
cmpsb
mov
fmuls
pop
aas
test
daa
mov
mov
stc
sub
mov
cli
pop
sbb
dec
xchg
ja
add
and
mov
test
jno
xor
out
add
mov
shll
repz
dec
enter
push
ret
shlb
jnp
xor
mov
mov
cmp
mov
mov
cmp
lods
insb
or
mov
ret
repz
outsb
ret
insb
adc
lahf
call
test
rep
movsl
test
xchg
lods
jae
push
jno
mov
dec
adc
pop
stos
mov
add
push
mov
stc
js
jg
sbb
jns
xchg
imul
cmp
lret
ret
fwait
pop
dec
mov
test
xor
xchg
shll
out
inc
push
pop
hlt
mov
fdivrl
gs
loope
ret
gs
hlt
jae
xorl
mov
sbb
xorl
xchg
xchg
js
or
xchg
jl
mov
xlat
pop
je
dec
cmp
xor
call
lds
pop
test
pushf
push
in
jge
and
in
xchg
int3
mov
cs
push
bound
fisttpl
lret
hlt
mov
fs
fiadds
loopne
inc
in
xor
ret
imul
fadds
loop
mov
cwtl
rorb
mov
inc
insl
aas
subl
dec
jge
sbb
psubsw
lahf
jb
mov
fsts
cmp
fs
testb
adc
xor
iret
push
lods
cmpsl
cmp
xor
das
cmp
rorb
lcall
fisttps
xchg
jns
lea
mov
mov
fldpi
cmp
fdivr
adc
clc
imull
repnz
xor
cli
arpl
and
adc
out
sbb
repnz
movsb
adc
mov
test
cltd
insl
xor
bound
mov
out
push
std
or
movsl
stos
xor
dec
loope
jg
sub
and
js
ljmp
int
ret
loop
out
mov
lods
adc
xchg
outsl
push
pop
nop
mov
pop
mov
icebp
add
sti
xchg
and
add
cmp
icebp
insb
sbb
cmp
jecxz
or
jmp
loopne
mov
movsb
cmp
push
lret
mov
sahf
and
adcl
dec
cmp
push
push
pop
lock
fucomp
push
adc
mov
movsb
test
fld
push
or
mov
and
idivl
data16
mov
mov
mov
fisttpl
and
icebp
insb
sub
mov
push
jmp
in
inc
pop
in
jno
xchg
cmpsl
mov
jb
adc
mov
lods
in
jmp
imul
inc
sub
mov
test
stos
stos
iret
xchg
xor
sub
cmp
in
add
test
adc
mov
inc
into
aam
push
lods
outsb
cld
je
jl
aas
push
mov
fidivrs
adc
and
mov
ffreep
insb
fbld
mov
sbb
in
aam
mov
sbb
xchg
and
xor
mov
ficoms
push
lods
out
testb
stos
xchg
sub
je
mov
repnz
dec
out
addr16
dec
push
loopne
out
mov
cwtl
fcoms
and
test
pop
xchg
cmpsl
imul
shll
xlat
mov
or
adc
test
dec
insb
add
cmp
push
loop
mov
push
pop
xor
fcmovnb
xlat
mov
daa
push
push
cltd
insl
and
test
or
dec
loope
dec
pushf
fcoms
clc
loopne
aaa
adc
mov
sbb
nop
mov
aaa
fisubl
push
and
xor
mov
xchg
sub
mov
pushf
in
or
jmp
mov
inc
stc
nop
repnz
cwtl
lcall
pushf
xchg
or
adc
scas
push
sarb
push
imul
sub
mov
jl
sbb
test
sub
mov
push
nop
push
arpl
lret
sbb
sbb
mov
ljmp
jo
mov
rcrb
shr
push
add
mov
ret
sarb
jns
and
lock
jg
xor
shlb
mov
push
adc
movb
pushf
dec
push
call
adcl
test
jae
xchg
add
rcl
push
imul
divl
pushf
gs
xor
lods
xor
push
sub
sahf
xchg
pop
cmp
subb
push
outsl
mov
dec
das
call
add
sahf
mov
lcall
out
cli
hlt
int3
mov
jmp
push
pop
xchg
mov
loopne
adc
in
xlat
imul
insl
lret
repz
repnz
pop
pop
jg
test
pop
sub
aas
loopne
sub
enter
pop
fldcw
or
idiv
fistps
out
cmp
int3
jl
fs
mov
pop
sar
adcb
lcall
out
xchg
sub
xchg
mov
push
daa
mov
add
sbb
int
ja
xor
adc
testl
dec
lret
jb
mov
xchg
push
xchg
loop
xor
mov
jmp
ja
xchg
jp
into
movsl
push
mov
fistl
inc
push
cwtl
mov
aam
mov
mov
arpl
lret
roll
push
jg
xor
popf
stc
fsubp
xchg
add
cmp
or
inc
adc
pushl
jno
dec
aas
inc
clc
and
jae
insl
in
imul
cli
and
or
push
or
pop
xor
pop
imul
mov
lds
adc
xchg
sbb
jle
mov
jl
aad
nop
dec
lock
aaa
out
pushf
mov
sahf
cmc
jge
and
int
je
and
imulb
add
cmp
fstps
or
js
xchg
stos
loopne
push
imul
or
jp
lods
inc
adc
scas
xor
jno
dec
in
sbb
jmp
test
femms
mov
outsl
rcrb
outsl
xchg
sub
out
sub
mov
sbb
fwait
sbb
adcl
mov
jle
mov
dec
imul
hlt
mov
sahf
mov
adc
xchg
jno
mov
pop
pop
mov
les
adc
jne
mov
in
mov
aad
mov
rcll
sub
in
ret
or
jo
push
shlb
dec
jle
xchg
sub
ja
push
dec
popf
and
dec
imul
hlt
ficoms
pop
and
movsb
push
sbb
jne
les
cmpsl
aaa
mov
mov
xchg
fdivrp
or
jbe
cmp
jp
repz
push
andl
add
lods
in
and
movsb
push
aas
xchg
pop
cwtl
xorb
clc
xchg
mov
cli
cs
add
pop
mov
pusha
lahf
aas
mov
or
je
gs
mov
add
inc
pop
mov
inc
pop
ja
cwtl
movb
nop
jno
pop
sbb
lea
pop
idivb
test
leave
lock
sbb
cmp
int
mov
push
in
add
fnstenv
das
decb
outsl
int
mov
add
imul
inc
jae
js
call
push
mov
inc
pop
js
xlat
jmp
hlt
xor
push
call
mov
or
mov
cmp
adc
jb
cmp
mov
push
xchg
aam
sub
add
in
mov
cmp
jle
adc
arpl
mov
fsubs
fsub
sub
and
adc
add
xchg
mov
test
pushf
lea
aaa
clc
rclb
das
or
or
add
enter
scas
ret
lahf
lret
adc
xchg
lock
jo
jae
add
pop
orb
mov
mov
pop
in
jno
mov
sub
adc
mov
cmp
shr
sti
fmuls
mov
dec
inc
add
xor
or
fimull
imul
aad
xchg
outsl
movsb
arpl
nop
jecxz
ljmp
inc
cmp
fnsave
lret
out
sti
sub
fists
sbbb
ja
jl
add
sbb
sti
pusha
mov
hlt
jae
mov
ds
pop
insl
jge
movb
mov
movsl
push
xchg
xchg
lock
push
mov
iret
or
leave
je
pop
or
mov
push
push
ficoms
cmp
sub
sbb
repz
push
cmpsl
cmp
repnz
pop
sahf
dec
ret
xor
cmp
adc
std
mov
mov
movl
adc
popa
ja
cmp
jp
and
lods
pop
add
imul
push
xor
cltd
mov
lcall
lret
les
dec
movsl
fucomip
pusha
stc
inc
jge
imul
adc
sbb
ds
pop
pusha
fsubs
dec
mov
pop
mov
mov
xchg
jmp
gs
pop
pop
repnz
stc
jp
mov
pop
pushf
adcb
jmp
mov
xlat
xchg
ljmp
pop
repz
clc
xchg
inc
push
stos
stc
xor
insl
bound
push
std
or
sub
cwtl
xor
inc
xchg
push
mov
push
lods
jae
ret
pop
inc
movb
iret
push
jmp
pop
inc
andb
into
and
sbb
call
inc
ja
mov
cli
shlb
ljmp
mov
pop
xor
lcall
sahf
sbb
call
add
jnp
sub
cmp
and
dec
jg
cwtl
daa
sahf
inc
dec
pop
fbstp
stc
test
lock
xor
jle
int
mov
and
test
pop
aas
test
pop
fisubrs
call
lahf
cmp
mov
jb
mov
and
cmpl
fsub
rcrb
cltd
clc
cmp
cld
imul
pushf
int
pop
ds
jge
sub
mov
inc
rcrb
mov
fidivrs
xchg
push
add
mov
xchg
loope
rolb
pushf
inc
mov
and
adc
popl
dec
lods
ljmp
pushf
repz
lods
jp
shrl
pop
push
in
inc
loop
inc
addb
call
adc
xor
bound
shlb
adc
sub
dec
pop
aad
push
push
mov
clc
lods
mov
push
aas
shlb
sbb
xchg
loope
lahf
push
ss
xor
xchg
pusha
stos
xchg
jbe
push
ss
mov
aam
xor
and
sbb
pop
inc
jl
lret
inc
loop
das
ljmp
in
mov
or
cwtl
imul
test
scas
fnstsw
or
mov
ret
cltd
xor
and
es
xchg
outsb
or
inc
imul
pop
jmp
lret
mov
or
jae
push
push
sub
sbb
mov
jl
dec
and
int
add
clc
stos
sbb
insb
add
ds
xchg
sbb
pop
mov
movsl
les
xchg
dec
scas
mov
fisttpll
jb
mov
or
cmp
inc
aad
sub
and
fwait
testl
add
popa
test
leave
mov
pop
dec
mov
ss
in
out
aam
cmp
out
sahf
lods
ret
pop
test
xlat
jb
fcomi
xchg
pop
jmp
mov
rep
or
mov
xor
cmp
mov
push
jno
dec
push
xchg
in
pop
aad
rorl
insb
stos
mov
ret
xor
and
fidivl
in
outsl
cmp
push
popa
mov
rcrb
cltd
cmpl
out
outsb
jecxz
mov
dec
mov
jle
test
dec
and
xchg
jnp
sub
cmpsl
pushf
sbb
cmpsb
enter
jns
mov
sbb
sarb
ds
repz
or
xchg
cmpsb
insl
add
cmp
mov
adc
ja
or
or
push
jnp
js
xchg
in
in
fcmovnb
ret
mov
lea
pop
mov
das
pop
push
pop
sub
scas
jl
inc
push
iret
mov
in
push
popa
clc
adcl
inc
push
dec
dec
ljmp
inc
cld
lods
das
ret
sbb
mov
push
ret
sbb
test
sub
mov
and
push
clc
push
inc
flds
mov
jmp
mov
lods
fcmovbe
xchg
cmp
dec
add
inc
in
jbe
cmp
or
add
in
mulb
ds
int3
pop
sbb
insl
sub
repnz
add
mov
scas
scas
lea
pop
je
test
lods
add
lea
mov
lods
or
dec
roll
lahf
icebp
jle
lods
mov
rclb
imul
fistps
js
xchg
stc
je
ja
push
cwtl
jecxz
out
inc
push
add
hlt
push
cmp
push
sbb
inc
jo
lea
push
dec
cmpsb
and
jle
or
cmc
dec
leave
push
add
fbld
aam
sub
in
lea
std
xchg
in
scas
lret
xchg
mov
xor
imul
cmp
adc
cwtl
sbb
pop
lahf
jb
cmpsl
jge
fwait
jg
and
mov
jnp
cmp
addr16
or
scas
cli
fiaddl
mov
xchg
adc
pop
movsl
js
and
cmp
jl
jmp
js
mov
and
push
pop
mov
jg
push
lahf
add
mov
jmp
push
adc
sahf
cmp
jb
push
or
push
mov
cwtl
cmp
ret
mov
loopne
lds
movl
mov
iret
jecxz
push
adc
lds
scas
test
cmpsb
xor
scas
jo
xchg
push
inc
inc
shlb
or
fistl
insb
bound
add
xor
mov
inc
test
rcrl
aad
fisubrs
lods
loop
enter
sbb
gs
dec
pop
int3
movsb
dec
cli
push
sti
sbb
or
xchg
jbe
dec
mov
out
sub
xchg
movsb
jb
xchg
mov
push
sub
call
xchg
push
notb
lods
and
pusha
inc
jb
xchg
xor
xor
xor
clc
ljmp
mov
fsts
lods
lods
aam
or
lds
aaa
mov
leave
or
stos
cmp
cmp
xchg
xor
or
lret
jno
xchg
hlt
adc
jo
xchg
sar
jp
cmp
push
pop
movsl
push
dec
movsl
ret
ja
xor
pop
mov
clc
insb
sbb
jnp
iret
push
dec
jg
mov
in
ds
push
pop
lods
or
push
xchg
mov
jle
frstor
push
addr16
fstpt
mov
into
cmp
mov
mov
jge
pop
mov
fsubrs
cmp
lea
shll
xchg
pop
cmp
xchg
divb
sub
push
aad
inc
repz
aad
inc
push
push
imul
inc
mov
lods
ret
xchg
sbb
nop
dec
mov
pop
jg
mov
adc
mov
mov
out
xchg
pop
adc
insb
out
fdivrl
mov
push
in
or
repnz
lods
cs
add
popa
clc
mov
pop
gs
pop
insl
push
outsb
and
adcb
or
outsb
pushf
repz
pop
sbb
imul
hlt
cmp
int
fnsave
mov
rcl
lods
fcmovnbe
ret
dec
add
mov
mov
lds
jl
in
js
mov
gs
inc
xlat
mov
pop
pop
xor
repz
jp
fwait
mov
int
or
fwait
repnz
sub
notl
and
in
into
lahf
std
xchg
rcll
mov
sub
loope
push
push
mov
pop
mov
cmp
push
pop
lcall
push
je
or
loop
into
lock
inc
imul
dec
pop
jmp
pop
mov
or
ficompl
lret
adc
sub
and
test
push
and
xor
adc
rcrl
sbb
xor
mov
out
mov
inc
xorl
addr16
pusha
xchg
shl
iret
push
mov
pop
push
outsb
bound
nop
cltd
arpl
pop
jecxz
insb
push
insl
mov
mov
out
add
mov
mov
mov
jb
or
fs
mov
ds
mov
popa
and
sub
lods
dec
js
xlat
push
xor
lcall
jns
cmp
fld
add
mov
adc
ret
pop
dec
pop
sub
ret
fisubs
lret
inc
mov
xchg
push
imul
aaa
fsts
scas
lea
test
sub
imul
ret
shll
adc
pop
xor
xlat
inc
inc
cmp
std
inc
gs
xchg
ret
lret
lods
stc
lahf
dec
sub
sbb
dec
add
xchg
imul
sti
repnz
dec
cli
adc
add
lea
and
daa
es
push
dec
fildll
into
cmp
mov
dec
mov
rcll
or
adc
mov
adc
hlt
imul
push
cltd
movsb
push
mov
cmp
jno
popf
xchg
aaa
mov
cmpsb
std
xorb
mov
iret
adc
hlt
pop
fcmovu
mov
pop
insb
stos
popa
subl
dec
jg
cltd
adc
andl
mov
inc
pusha
inc
jns
pop
addl
popa
js
lcall
rcl
repz
es
jge
scas
fidivl
inc
or
add
mov
movsb
cmp
mov
std
xlat
mov
fisttpl
inc
jmp
test
lea
movsl
fcmovb
xchg
mov
push
jno
lods
push
imul
pop
dec
inc
sti
cmp
xchg
lock
dec
ret
cmp
cmpsl
dec
rorl
or
cmp
mov
mov
or
xchg
inc
jge
nop
mov
lds
pop
jle
sub
je
lock
data16
ja
mov
adc
loopne
xor
insl
add
cli
aas
dec
mov
andb
jne
adc
iret
mov
fdivl
adc
cmp
mov
sbb
xchg
ds
or
cmp
js
xchg
xor
pop
pop
hlt
push
aad
dec
pop
pushf
jnp
mov
jg
fstl
popf
jo
ss
repz
push
adc
fsincos
aaa
sarb
and
aas
xor
dec
nop
dec
add
xchg
mov
icebp
pop
push
inc
push
ljmp
fsubrs
ret
int
lahf
dec
test
cwtl
mov
lds
jg
pop
clc
nop
outsb
cmp
loopne
daa
lcall
scas
daa
mov
dec
int
movl
insb
xchg
jbe
popa
sub
pop
stos
mov
adc
dec
pop
cmp
repz
cmp
ds
pusha
add
mov
push
dec
add
sbb
xor
scas
mov
ss
jecxz
adc
jne
push
mov
mov
push
cmpsl
pop
mov
mov
dec
push
insl
nop
daa
lahf
in
xlat
push
stc
xor
jle
into
stos
rorb
lcall
test
add
int
pusha
in
push
jecxz
rolb
stc
adc
pop
and
inc
stos
lahf
stos
jle
into
fdivrl
jle
push
movsb
les
rcrl
test
loopne
adc
adc
mov
adc
mov
lahf
pop
and
xchg
pop
addr16
adc
lea
subb
fidivl
or
bound
push
stos
in
inc
push
ja
xor
shr
jg
xchg
ljmp
jno
je
outsl
push
or
loopne
cli
push
or
push
cmpsl
and
fwait
dec
ret
xor
jmp
sbb
imul
and
sub
jp
cs
scas
add
xchg
inc
stos
fdivp
test
sbb
xchg
sub
add
lcall
xlat
mov
ljmp
in
pop
xor
add
xorl
adcb
pop
cmp
pop
iret
pushf
es
xor
out
bnd
mov
ret
mov
and
ja
pop
jge
add
mov
or
cmpsl
jle
ss
pop
and
add
jl
adc
jge
pop
sahf
inc
lea
mov
icebp
or
sbb
pop
or
lret
xor
jno
out
xor
in
fwait
push
cmc
add
test
push
adc
xor
dec
icebp
mov
out
cmp
xor
push
dec
push
adc
popa
dec
sbb
cmp
or
lea
aad
gs
inc
lret
lods
mov
sub
repnz
scas
mov
mov
popf
loop
aaa
cld
push
in
xchg
xchg
xchg
cmc
outsl
or
sbb
cmc
bswap
repnz
aas
lods
xchg
adc
cmpsb
repz
push
jmp
lcall
cmp
cld
cmp
outsb
xchg
push
lods
dec
fcomps
mov
add
shlb
cmpsl
fwait
xor
push
jp
mov
nop
int
pop
push
push
aas
fst
xlat
and
add
dec
mov
xchg
stc
sub
shrb
xchg
in
jno
loopew
sahf
or
adc
jbe
insb
test
add
mov
mov
jnp
xchg
push
aas
xchg
out
rcl
fidivs
ja
stos
inc
inc
cmpsl
xchg
push
xchg
pop
movsb
mov
and
cmp
xor
add
add
cmc
push
sub
xchg
sbb
sub
push
shrl
scas
pop
iret
dec
mov
shrl
not
imul
mov
addr16
xchg
mov
mov
out
jbe
pop
mov
ret
add
loopne
xchg
inc
call
cmp
pusha
ror
daa
push
imul
sub
inc
pop
xor
mov
insl
cmpsl
loop
rcrl
jl
cmp
ret
in
jecxz
mov
xor
daa
jo
lcall
dec
jmp
sbb
xchg
and
orl
repz
aas
leave
fidivl
inc
mov
cmp
rorl
xchg
ljmp
sbb
jl
jnp
rcrb
jg
or
push
mov
jl
and
jo
or
jg
jge
xchg
and
lods
jmp
les
cmp
cmp
dec
out
int3
enter
loopne
or
adcl
shr
out
loope
mov
mov
aaa
call
enter
imul
fwait
icebp
xchg
sub
lods
pushf
call
orb
aam
or
xor
mov
xor
std
scas
dec
mov
jns
pushf
lods
jb
shr
inc
ja
imul
mov
sub
mov
add
packsswb
pop
loop
incb
sbb
fs
dec
adc
adc
mov
stc
mov
out
popa
testb
ret
lret
xchg
and
ror
in
sub
enter
add
add
mov
mov
ret
outsb
bound
jb
loop
add
data16
or
repz
cmpsb
les
jae
out
repnz
stos
and
adc
adc
cmp
repnz
sbb
dec
lea
fildl
aaa
pop
xor
sbb
out
push
add
or
lret
mov
xor
out
fistpl
pop
js
push
add
dec
dec
sbbl
icebp
pusha
stos
lods
inc
mov
int
sbb
and
fstpl
fisubs
inc
hlt
ljmp
jnp
pop
push
add
sbb
xchg
mov
aas
shl
lcall
outsb
or
jnp
rep
lds
dec
cmc
bound
mov
xchg
cwtl
and
cmp
mov
insl
mov
out
xor
inc
leave
jle
mov
jmp
cmp
xor
and
sbb
dec
arpl
push
and
push
andl
rol
jnp
rorb
bound
mov
mov
adc
mov
cmpsb
cmp
das
call
jno
sahf
ret
fnstcw
out
push
or
or
insb
int
sahf
push
lret
je
xchg
cmpsb
adc
jge
and
push
xor
sbb
fimull
lea
shlb
sbb
mov
lds
out
out
subl
mov
dec
aas
imul
das
mov
jg
cmp
out
jmp
or
lods
and
mov
xchg
xor
add
lea
jmp
icebp
sub
lahf
mov
xchg
dec
aam
iret
and
popa
fnsave
iret
xchg
pop
test
sub
cwtl
add
or
xchg
popl
sahf
sub
scas
out
hlt
pop
push
inc
and
or
fndisi(8087
lock
es
jne
dec
cwtl
sbb
imul
shr
repz
mov
popa
adc
mov
mov
add
sbb
cmp
cmpsl
mov
mov
or
jle
mov
mov
push
enter
jg
pop
es
lea
inc
and
cld
jmp
test
push
xchg
cmc
adc
mov
icebp
xchg
xchg
les
jns
push
xchg
out
jle
mov
cmp
or
shrl
fst
mov
mov
out
es
push
lret
add
or
outsl
jns
inc
inc
notb
mov
push
rcrb
pop
lods
in
inc
cmpsl
sbb
adc
jb
out
cmpb
push
jbe
adc
lock
cmpsl
outsl
or
add
dec
push
jmp
lods
inc
arpl
subl
es
imul
jg
adc
hlt
jg
test
ret
mov
das
inc
adc
add
jno
pcmpeqb
dec
xchg
fcoml
add
fnstenv
pop
into
inc
mov
bnd
push
mov
sbb
dec
push
cwtl
sub
mov
push
bound
xor
jmp
movsl
push
mov
adc
xchg
jg
sbb
inc
push
loopne
das
or
enter
inc
pop
push
inc
mov
enter
push
lcall
sub
std
test
iret
fwait
inc
pop
dec
mov
mov
dec
push
movsb
aaa
cmpsb
es
mov
dec
pop
in
cmp
loop
shll
es
loope
int3
and
push
icebp
adc
js
sbb
outsl
jecxz
mov
inc
xor
ja
sub
add
imul
mov
jnp
mov
or
or
add
inc
xorb
mov
sub
and
fsubrl
std
push
mov
sub
cs
pop
idivb
mov
or
sub
pusha
hlt
sbb
cmp
insb
sub
icebp
or
mul
in
div
rorl
adcl
sub
xlat
jge
scas
scas
mov
mov
xor
daa
inc
andb
out
xor
dec
push
les
enter
scas
xchg
xchg
insl
int
movsl
jns
cmp
dec
adc
adc
jb
pushf
addr16
ja
fidivrs
xlat
mov
sti
mov
xchg
sub
cmp
mov
aas
movsb
pop
sbb
aas
stc
xchg
outsb
add
inc
and
nop
test
pop
lret
or
filds
mov
mov
test
das
movzwl
adc
test
out
movsl
out
xor
or
inc
push
repnz
test
fnsave
lret
xor
cli
daa
xchg
cmpl
lods
out
xchg
mov
push
sbb
inc
fbld
inc
fs
aaa
sbb
inc
enter
dec
popa
out
mov
decl
xor
shrl
mov
imul
mov
test
lret
icebp
push
nop
out
fwait
repz
in
arpl
sbb
mov
or
cmp
sbb
pop
icebp
jne
mov
or
call
test
mov
dec
jg
lock
dec
push
mov
cs
cwtl
pop
sub
lea
sbb
stc
or
aad
jne
ss
and
mov
dec
js
fildl
mov
jle
movsl
add
shll
popa
cwtl
das
into
cmp
addr16
test
icebp
stos
movsl
mov
jae
jg
in
mov
stc
ret
shlb
rol
dec
push
mov
mov
jne
arpl
mov
sbb
push
dec
lea
ret
sbb
pop
mov
pop
jno
sbb
sub
fxch
mov
sbb
repz
dec
fsts
loope
push
add
xchg
enter
clc
lock
pop
adc
mov
loop
or
outsl
jbe
daa
test
add
mov
outsb
stc
mov
push
xor
fwait
sub
repnz
xchg
pop
data16
leave
aad
mov
jmp
mov
jp
int
pop
test
dec
dec
repnz
sub
jg
dec
pop
and
sub
dec
mov
sub
cld
xchg
jl
rorb
aad
xor
jae
fmull
push
stc
pushf
pop
shrb
inc
shlb
popa
in
add
adc
xchg
inc
fidivs
add
xor
test
xchg
imul
xchg
jae
inc
sahf
mov
cmpsb
in
les
into
fdivl
movsl
xor
std
int
out
mov
jns
push
in
popa
into
push
xchg
shrl
inc
xchg
sub
orl
sub
xor
xor
roll
sub
arpl
sbbb
mov
decb
gs
and
into
cmpsb
jns
repz
inc
pop
in
pop
pop
mov
pop
and
in
dec
pop
jl
jnp
ror
xchg
cltd
out
in
shll
push
sbb
call
pop
lock
jb
add
xchg
shr
xor
cmp
loop
lret
lret
loopne
lods
push
bound
shl
inc
arpl
in
pop
out
lods
test
sbb
jno
lret
out
jmp
or
jne
and
inc
or
rolb
out
stos
pop
mov
inc
imul
jns
aad
stos
xchg
aas
add
repz
std
nop
xor
je
bound
sarb
ror
xor
mov
fwait
jle
inc
lods
pop
mov
sub
jno
fcmovne
stc
xchg
dec
dec
sahf
jg
movsb
cmp
mov
pop
jne
xor
rol
xchg
sbb
or
lds
adcb
jmp
mov
inc
pusha
dec
adc
inc
andb
or
shr
mov
or
sti
or
mov
shlb
or
cmp
cmp
push
mov
dec
mov
out
ds
stc
and
push
mov
jnp
cmc
push
sbb
pop
sti
xchg
ss
aaa
into
xor
sbb
and
data16
and
in
test
call
dec
sbbl
test
add
xor
pop
jnp
adc
int
pop
notl
aad
aad
pop
adc
shlb
in
pop
push
mov
jne
fcomps
stos
mov
fisttpll
dec
sahf
stc
inc
pop
push
xchg
sbb
dec
pop
jecxz
out
cmp
test
leave
int3
out
sub
mov
stc
notb
push
rol
xor
and
cmpsb
loopne
cwtl
adc
cwtl
mov
dec
test
loop
int3
dec
leave
dec
dec
pop
dec
sub
cmp
push
sub
gs
push
pop
push
and
orl
add
sbb
cmpsb
in
decb
cltd
in
movsl
jae
out
mov
mov
je
mov
sbb
notl
jg
out
out
in
lods
mov
inc
movsl
adc
divb
mov
adc
xchg
fstpt
mov
pusha
mov
or
xchg
mov
cmp
lret
fidivrs
das
xlat
mov
ret
aad
fcoml
dec
cmp
orl
dec
mov
push
jmp
test
das
pop
adc
sub
dec
out
jle
sub
movsl
xchg
dec
push
repz
dec
popf
pushw
nop
lods
mov
xor
in
test
add
ficoms
jp
jmp
in
nop
sbb
out
mov
mov
inc
xorl
shl
or
cmp
popf
and
fistps
push
insl
mov
dec
cmp
dec
in
inc
jecxz
std
mov
ljmp
outsl
mov
cmpb
shlb
mov
push
sbb
cltd
test
mov
push
std
mov
fcmovne
mov
fistpll
dec
and
in
pop
sub
ret
mov
push
loopne
cmp
mov
cltd
insl
add
dec
in
pop
lds
icebp
jmp
aam
loop
cmpsl
or
js
jnp
push
das
jp
jae
in
sub
adc
and
in
push
inc
movsl
cmp
lret
push
call
xchg
pushf
pop
test
mov
fs
and
mov
scas
andl
sti
mov
imull
inc
dec
xchg
cmpsb
mov
or
movsl
std
xchg
ds
inc
lret
mov
xchg
lods
adc
push
pop
cmp
fisubrs
xchg
in
test
cwtl
lods
fisttpll
push
daa
jg
sub
cs
arpl
cmp
adc
push
jb
xor
popf
lock
sbbl
lret
jae
aam
and
xor
hlt
push
adc
fnsave
push
and
xchg
lock
pop
push
pop
lret
loopne
jo,pn
pop
sub
jmp
insb
lods
sbb
and
imull
mov
les
xlat
test
bound
push
lods
jo
mov
call
es
jno
push
jb
and
out
xchg
mov
icebp
call
aam
outsl
jns
and
cmpsb
jno
ljmp
jae
stc
push
rcr
test
je,pn
enter
gs
xchg
enter
sbbl
xchg
and
xchg
add
inc
sub
aas
sub
mov
outsl
push
xchg
jg
push
cld
adc
shl
aam
dec
ja
jne
cmp
ret
rcl
movd
pop
cmp
push
outsb
jge
dec
jle
dec
cmp
push
lret
push
fsubl
fnstenv
jns
adc
movsb
in
shl
lret
lods
xchg
jns
jb
adcb
mov
mov
lahf
loop
out
push
sbb
aaa
cmc
dec
and
xor
push
add
out
or
sub
dec
mov
jle
ficoms
outsb
filds
test
mov
negb
and
xchg
testl
pop
cmp
or
test
sbb
mov
sbb
out
mov
cwtl
cmp
nop
lret
cmp
pop
in
leave
adc
dec
fstpl
lahf
jg
mov
xor
insb
scas
shr
stc
mov
sub
jle
out
xor
cwtl
incb
stc
mov
jg
and
std
sti
push
inc
mov
movsb
xchg
lods
or
insb
cmpsl
sub
lcall
inc
cmc
xchg
mov
cs
ds
cmc
filds
or
push
movsl
pop
cmpl
cld
fidivl
cwtl
les
mov
mov
dec
ss
ljmp
mov
add
lods
popa
sub
jo
cmp
mov
fisubs
or
pop
lret
lcall
jle
mov
jo
inc
and
xchg
out
aad
mov
fwait
in
fstpt
aam
xor
pushf
and
add
sbb
cld
sub
cs
or
sub
sbb
icebp
add
shl
mov
rcl
sbb
jmp
xchg
out
aaa
or
movsb
scas
cmp
adcl
add
arpl
movsbl
out
inc
rolb
neg
inc
mov
fnstenv
test
jb
and
pusha
icebp
insb
adc
pop
fdivl
push
icebp
dec
and
push
cli
xchg
push
out
ffreep
outsb
adc
lahf
into
xchg
mov
arpl
imul
imul
and
popf
int3
ljmp
or
xchg
stos
or
rorl
fists
push
cmp
clc
sub
jecxz
jns
xchg
out
lcall
and
dec
add
aas
in
adcl
outsb
fisttpl
sub
iret
out
loop
loopne
fidivl
rolb
gs
xor
inc
cwtl
and
sbb
mov
lea
mov
int3
lods
cli
js
xchg
sub
test
pop
mov
lds
ljmp
xchg
jle
push
and
negb
or
rcrl
cmpsl
push
sbb
push
and
testl
lahf
negl
adc
xor
mov
les
jae
dec
loope
sbb
or
add
push
inc
sub
mov
nop
inc
add
mov
sub
std
ret
jp
ret
gs
ljmp
dec
enter
and
pop
es
ss
dec
cmp
pop
loopne
es
sbb
pop
iret
mov
fmul
xor
jle
cli
xchg
adc
cwtl
lds
mov
jle
cmp
mov
mov
mov
adc
aaa
cmp
push
mov
lahf
popa
add
icebp
ds
adc
add
jbe
fsubrs
xorb
mov
out
test
xchg
jo
std
cwtl
pop
lods
shl
test
sbb
push
mov
inc
push
scas
jo
popa
cwtl
pop
mov
popa
loop
push
cli
mov
ficompl
cmp
jo
dec
and
fstpt
pop
scas
adc
push
jno
outsb
add
jle
sub
sbb
jnp
push
push
rol
dec
ss
daa
in
lcall
mov
mov
push
and
jne
xchg
rcrb
xchg
sahf
mov
fsub
faddp
cmp
lea
xor
add
out
daa
xchg
mov
hlt
adc
lcall
popf
cmpsb
jne
adc
jp,pt
inc
in
fcompl
xor
jo
sub
cs
fcoms
shll
and
mov
sbb
mov
inc
and
jns
sbb
addl
ret
fiadds
insb
dec
ds
int
cli
pop
xchg
pop
ret
decb
jae
xchg
add
mov
jmp
lock
insl
xchg
jno
jae
mov
jge
push
fnsave
add
xchg
xchg
int
adc
or
fmul
cmp
popa
push
orl
hlt
inc
adc
loopne
pop
movsb
mov
test
or
lahf
in
inc
sub
mov
ficomps
jecxz
fisubrs
and
sub
pusha
jo
shl
sbb
mov
pop
mov
sub
adc
ret
xor
out
out
aaa
arpl
cmpsb
sbb
dec
xchg
mov
push
dec
imul
adc
gs
push
movsl
in
daa
and
push
lock
dec
xor
sub
mov
stos
roll
imul
pop
jmp
sarl
mov
push
ja
fwait
jecxz
fidivs
rcrb
mov
or
sbb
jne
jns
add
push
sub
cmpsb
mov
fwait
out
testb
lret
icebp
mov
push
add
bswap
cmpps
dec
mov
andb
fisubl
or
cwtl
stos
mov
xor
jb
jo
dec
bound
fcomps
stos
dec
mov
scas
xchg
xchg
sub
popa
int
xor
leave
sbb
inc
sbb
aas
inc
test
in
fldl
les
outsl
adcl
adc
popa
lret
stos
push
mov
dec
pop
jne
jle
add
adc
inc
gs
add
bound
pop
cmp
fiaddl
dec
lds
mov
and
sbb
push
in
fisttpll
xchg
ficompl
sub
push
jb
mov
out
xor
aam
gs
pop
and
pop
outsb
jae
xlat
outsl
jle
pop
mov
fs
push
out
aam
jne
sub
mov
mov
dec
cmp
xchg
std
pop
mov
mov
cmp
jmp
leave
add
xor
mov
add
andl
sbb
and
jg
jnp
xchg
adc
sub
dec
push
or
lea
jmp
fbld
fisubrl
add
incb
sbb
xor
push
je
int
jle
fnsave
xchg
sub
imul
push
js
sub
jle
sbb
adc
inc
sub
inc
lcall
sbb
mov
imul
inc
into
scas
out
push
inc
sbb
mov
jns
sbb
add
push
pop
mov
push
jbe
sbb
dec
sub
in
mov
cs
shr
bound
stos
insl
lds
push
mov
ds
push
pop
mov
int
inc
int3
and
ljmp
or
xor
xchg
mov
sub
or
pop
dec
xlat
nop
jae
dec
sbb
hlt
mov
pop
cmp
mov
lret
dec
lods
lds
loope
sbb
ret
sbb
jbe
sbb
dec
inc
dec
add
pop
in
mov
jne
xor
push
mov
sub
jo
lcall
push
jb
das
xor
call
mov
int
push
jo
aaa
stos
negl
cmp
outsb
add
lods
div
lea
rclb
mov
scas
jmp
and
sbb
out
out
sti
jmp
and
lret
pop
outsl
sbb
add
ss
cmp
clc
pop
imul
popf
aas
jo
xchg
jnp
mov
mov
jne
add
inc
loope
fwait
into
inc
movsl
ljmp
psrlw
mov
fisubrs
movsb
jns
lock
jp
jp
lahf
mov
adc
je
ja
xorb
mov
xlat
cmp
ljmp
je
fildll
into
sbb
jne
jmp
xorl
lahf
dec
int3
xchg
jle
and
mov
lods
insl
mov
scas
out
cld
pop
cmp
mov
mov
pop
sub
int3
fs
pop
test
ja
adc
sub
jle
cltd
add
rolb
push
push
xor
push
jg
inc
inc
lock
fidivrl
and
faddl
test
or
out
and
repz
push
ljmp
jg
fistps
cld
mov
jl,pn
mov
jge
xchg
ja
fistps
das
insb
repnz
sbb
dec
add
negl
ja
inc
bound
test
int
hlt
sbbl
cmp
jns
push
add
loop
sub
and
push
aas
push
and
je
xchg
cmpsb
rcll
and
fdiv
jge
xorl
mov
popf
xor
in
mov
cmp
rcll
inc
ret
mov
test
js
iret
fucomi
inc
adc
je
notl
jp
icebp
push
mov
xlat
pop
dec
cmp
jecxz
mov
cltd
fsub
stos
inc
sbb
cmp
out
mov
ss
dec
push
mulb
push
cmpl
jge
movsb
popf
xor
inc
stos
shl
jmp
popf
lods
std
dec
pusha
paddb
sub
repz
lock
iret
arpl
inc
out
test
lods
mov
ljmp
subl
push
outsb
fdivrl
shll
jo
insb
push
fcmovne
mov
repnz
push
mov
xor
pop
imul
gs
loope
in
mov
and
int
or
loope
lahf
mov
mov
jno
mov
insb
in
insl
cmp
lds
push
arpl
and
lea
cmpsl
imul
subl
loope
popf
inc
int
push
adc
jge
xorl
ds
insb
sub
shl
pop
leave
ss
movsb
inc
imul
pop
scas
sbb
je
jnp
sub
sbb
loop
cwtl
xlat
rol
pop
mov
pop
add
iret
aam
mov
arpl
mov
xchg
js
mov
in
add
dec
dec
push
add
testl
jle
sbb
mov
ja
sbb
outsb
mov
mov
pop
xlat
std
pop
mov
imul
leave
fisubs
aad
int3
mov
cmp
xchg
sub
aam
or
mov
cs
pusha
outsl
ds
out
jns
int
mov
cmp
fucomip
stc
push
sub
mov
ss
push
and
dec
adc
mov
lret
rcl
subl
pop
cmpsb
cld
lods
or
or
insl
lss
mov
in
sub
sti
sub
stc
cmpsl
push
fwait
rolb
pop
mov
int3
cmc
jnp
cmp
ds
dec
or
repnz
cmp
lods
or
es
xlat
mov
xor
mov
leave
mov
out
jno
mov
adc
in
fsubs
mov
in
pusha
aad
shlb
jne
lcall
push
in
fwait
jno
and
adc
hlt
mov
test
push
fsubr
xor
js
xchg
pop
sub
pop
or
jmp
mov
clc
add
sbb
out
xor
cwtl
jns
mov
fucom
dec
not
push
and
mov
nop
push
fwait
adc
into
imul
ds
in
das
ss
pop
xchg
jne
ret
xlat
shll
fwait
push
int
mov
or
lret
mov
lock
mov
lods
ret
push
cmp
pop
cmpsl
call
xchg
cs
loopne
les
mov
mov
jno
mov
jnp
and
adc
test
sahf
bound
sbb
cltd
push
sub
aam
je
stc
add
shl
jmp
leave
adc
sti
or
inc
dec
add
adc
or
loopne
adc
in
pop
ficompl
cmp
rcrl
aad
mov
fs
jb
adc
outsl
repz
sbb
mov
arpl
jg
pop
call
dec
out
mov
mov
mov
cmp
repnz
scas
movsl
in
xchg
sbb
hlt
pop
lret
insl
dec
loop
cmc
cmpsl
out
mov
jge
jns
pop
sbb
and
dec
data16
mov
inc
adcl
scas
aas
test
pop
movsb
add
cmp
jnp
dec
xor
dec
add
shlb
mov
or
shlb
fisttps
flds
sbb
cmp
movsb
les
inc
filds
in
dec
icebp
dec
mov
sti
xor
cltd
sbb
iret
scas
mov
mov
add
jp
nop
jg
rcrl
into
and
in
pop
mov
mov
movsb
stc
pushf
movsl
sub
push
into
repz
daa
imul
cmpsl
ljmp
insb
outsl
shlb
pop
dec
push
lret
loopne
ficoms
test
aas
mov
inc
lock
mov
scas
aam
jnp
in
xchg
mov
or
in
fsubs
lret
sub
test
sbbb
es
in
cmc
mov
test
rorb
pop
jle
and
idiv
mov
sbb
pusha
lret
imul
mov
dec
adc
outsb
add
lods
jecxz
push
inc
out
cld
lds
add
jbe
pop
outsb
testb
pop
aad
and
xor
test
mov
xchg
insl
push
testb
rol
sahf
add
popa
add
jecxz
into
and
loope
xchg
mov
aam
iret
push
mov
or
cltd
outsb
loope
insb
loop
lds
or
sub
or
ja
daa
loop
pusha
inc
movsl
jnp
xor
adc
test
and
notl
xor
fwait
push
lret
mov
fisubrs
cld
xchg
ds
leave
fstpl
push
imul
xor
in
mov
inc
movsl
cmp
imul
stos
inc
mov
aam
or
dec
mov
add
fnstsw
cmp
mov
dec
clc
adc
cmp
xchg
idivb
hlt
test
mov
jg
push
stc
xchg
mov
rcrb
add
push
adc
pop
cmp
mov
inc
xlat
into
test
fcmovnbe
scas
jecxz
loopne
daa
out
movsb
adc
and
int3
sbbl
pop
sub
push
add
or
dec
inc
cli
aaa
sbb
test
imul
mov
push
and
loopne
cmc
call
lcall
mov
testb
mov
hlt
mov
pop
or
into
push
push
dec
cmp
dec
loopne
pop
xor
test
add
or
and
clc
xchg
xchg
test
loop
rolb
orl
xor
add
dec
xchg
xchg
jns
inc
outsl
cmp
loop
add
mov
ds
jae
ret
sbb
xchg
jp
call
jbe
out
push
sbb
mov
scas
push
bound
lods
pop
adc
or
dec
or
xchg
sub
sub
sub
mov
pop
jp
je
pop
push
inc
je
push
les
xorl
sbb
lock
jp
sub
decb
push
loop,pt
lods
subb
das
mov
movsl
mov
mov
mov
gs
jmp
cmp
sub
fisubs
cmp
lea
out
sti
popa
andl
dec
push
fadds
out
push
mov
dec
mov
inc
jl
scas
lcall
frstor
push
xor
push
or
mov
andl
fldt
cmp
pop
gs
int3
jnp
xlat
jo
mov
xchg
xchg
cmp
lods
andb
scas
mov
push
push
mov
lods
sbb
xor
scas
and
adc
stos
add
and
sbb
and
mov
jecxz
test
sub
sbb
loopne
cmc
dec
bound
jmp
outsl
pop
arpl
jbe
imul
xor
mov
fmul
xor
leave
test
xor
push
sub
push
xchg
out
adc
loopne
xchg
aad
std
dec
cmp
xchg
insl
hlt
cmp
push
into
cs
jb
loop
fadd
aad
push
daa
xchg
inc
std
pop
adc
or
daa
les
push
pop
mov
xchg
sub
repz
and
sub
mov
movsl
cmp
push
pop
cmp
into
scas
cwtl
std
mov
or
scas
sub
jno
jmp
orb
sbb
repz
in
lds
repnz
mov
sub
jnp
lret
adcb
add
pop
lods
adc
insb
test
fisubrs
pop
insl
mov
cmpsl
cwtl
orl
js
stos
fsubl
fs
pusha
imull
imul
and
in
xchg
inc
scas
sarl
mov
xor
and
fidivrs
pop
lock
xchg
adc
xchg
mov
in
fidivl
ss
stos
ss
stos
inc
aad
push
stos
out
inc
std
inc
jb
lods
push
testl
enter
cld
data16
test
xor
push
push
in
mov
mov
std
mov
mov
test
sbb
sub
or
sbb
pop
addr16
lods
lahf
xchg
js
leave
and
push
scas
jecxz
or
lds
adc
mov
jp
dec
fwait
imul
jle
and
je
fs
rcrb
int3
add
sub
mov
pop
adc
mov
cs
xor
mov
mov
stos
repnz
iret
mov
popa
rcr
fists
xchg
adc
push
adc
cmp
out
pusha
es
out
adc
insl
mov
lahf
dec
sbb
push
test
cltd
iret
outsb
out
sti
mov
inc
gs
xor
clc
mov
jge
add
or
jle
and
mov
in
inc
ret
imul
int3
ss
or
ljmp
cwtl
enter
mov
pop
cmpsb
call
lea
add
insl
movsl
mov
sbb
add
insb
dec
and
mov
cmp
rol
repnz
loop
sub
cmpsl
push
in
sub
adc
mov
push
jge
xor
das
ja
aad
sub
je
and
rolb
bound
rcl
inc
mov
fistl
or
xchg
sub
mov
lods
cmpl
call
test
pushl
or
jp
inc
push
outsl
xchg
add
in
ss
in
xchg
clc
push
mov
test
pop
push
pop
js
popa
jnp
iret
pop
movlps
or
mov
jg
das
mov
jo
repz
cld
lcall
in
std
cld
or
sbbl
shrl
popf
int3
outsb
daa
mov
xchg
stos
pop
pop
pop
dec
jg
jecxz
mov
test
scas
xchg
xor
or
mov
sub
jg
je
sub
fldl2t
aam
sbb
test
lods
push
inc
mov
mov
cmpsl
adc
fs
adc
xchg
pop
lret
pop
jp
cmp
cs
loop
imul
add
cltd
fstps
push
xchg
sub
xchg
cs
test
icebp
pop
repnz
rorb
adc
add
iret
test
adcb
cs
mov
add
or
cltd
outsb
jl
push
pop
imul
xchg
cmp
dec
fst
dec
loop
dec
sub
dec
js
rcl
fwait
jo
in
mov
ja
fcoml
int
fisubs
mov
cmpsb
xor
rcl
daa
js
add
sbb
sbb
lods
inc
inc
cmp
pop
loop
fistps
repz
jmp
pushf
push
cmp
mov
cltd
int
sti
lahf
clc
shrb
loope
in
arpl
scas
ja
fsubr
pop
adc
cli
test
mov
mov
xlat
mov
rcll
icebp
idiv
fwait
hlt
fwait
xor
int3
aad
cmpsl
ret
stos
push
fisttps
aaa
xor
movsb
imul
xchg
dec
leave
test
push
pop
fcomps
inc
dec
mov
stos
inc
mov
inc
pusha
pop
adc
ja
push
push
dec
popa
mov
int
push
mov
and
cmc
gs
je
jg
mov
lds
pusha
or
or
ret
xor
jne
popa
mov
iret
test
int
mov
add
aad
and
pop
pop
aas
dec
pusha
xchg
adc
out
cmp
in
add
cs
rcr
dec
pop
ss
dec
mov
xor
cs
mov
aad
sub
mov
sbb
pop
xor
inc
push
lret
inc
jae
out
call
and
mov
out
arpl
jno
xlat
aas
pusha
test
outsb
adc
fwait
sub
insl
dec
aam
js
addb
sub
and
dec
cmp
int
jp
mov
pop
out
js
repnz
aaa
push
adc
adc
iret
into
enter
aam
ret
aam
sbb
pusha
add
mov
jne
adc
push
jl
in
test
scas
xor
mov
fsubs
lods
sbbl
and
ds
pop
outsl
pop
add
sbb
and
add
test
push
popl
xor
mov
pop
not
insb
sub
mov
pop
jmp
inc
push
repz
out
cmc
pop
and
sbb
dec
lahf
mov
ljmp
inc
xchg
fcoms
cmpsb
les
loopne
sub
xchg
repz
and
fimuls
std
inc
movsb
push
jno
aaa
lds
xchg
pop
or
aaa
mov
imul
push
stc
stc
pop
arpl
adc
call
mov
lretw
bound
or
cwtl
add
fs
jp
out
loop
cmp
in
stos
in
pop
lcall
in
fistpl
fmull
mov
pop
xor
icebp
adc
xor
into
jne
loopne
lea
adc
rolb
mov
rorb
mov
rorl
cmp
pop
xchg
inc
inc
mov
add
cwtl
pop
out
movsl
ret
hlt
jno
hlt
icebp
xchg
push
aam
xchg
scas
je
jmp
cmc
and
je
mov
xchg
push
xor
outsl
sbb
leave
dec
loopne
pop
adc
push
call
mov
pop
or
fbld
xchg
add
mov
mov
or
daa
mov
pop
sahf
iret
gs
add
mov
jmp
xor
or
repnz
clc
sub
mov
pop
or
jp
inc
inc
mov
cmpsb
ds
hlt
sbb
iret
and
or
std
inc
or
jl
and
jp
dec
xor
ljmp
or
not
cmp
aaa
push
or
lds
rclb
aas
mov
cs
xchg
or
inc
add
and
fcoms
imul
cmp
loope
cmc
sub
cmp
mov
inc
push
pop
jl
in
loope
and
or
test
add
push
add
call
and
jb
imul
xchg
ret
pop
xchg
les
inc
fisubrs
int
and
xchg
icebp
xor
mov
mov
inc
pop
subb
pushf
cltd
sub
add
add
fwait
jne
xchg
sub
test
xchg
pop
push
inc
pop
cmp
push
outsb
dec
fs
mov
and
pushf
out
mov
adc
stc
out
mov
fidivs
ret
je
scas
push
push
or
in
inc
scas
adc
loopne
je
scas
inc
push
xor
pop
dec
ja
into
loop
sub
jae
push
or
pop
mov
dec
mov
xchg
sbb
das
dec
and
push
mov
hlt
xor
push
pop
fidivs
outsb
mov
dec
push
add
test
dec
stc
iret
stos
and
iret
mov
or
jns
lahf
cmp
mov
lds
stos
add
xlat
sbbl
sub
aas
stos
dec
jmp
ret
mov
fisttps
or
dec
shrb
jl
orb
daa
inc
sbb
inc
imul
xchg
cmp
jne
xchg
es
pop
and
iret
adcb
call
lea
fwait
xchg
mov
and
xor
inc
bound
push
subl
fstpl
lret
int3
jae
hlt
lock
adc
test
mov
rolb
mov
inc
scas
aam
sbb
cwtl
jge
in
and
fbld
dec
lahf
cli
mov
jno
push
lahf
jge
dec
push
adc
pop
pushf
dec
cmp
cmp
test
xchg
mov
mov
ja
rorl
es
sti
shll
sub
cs
or
cmp
push
sahf
mov
adc
xor
inc
arpl
dec
push
out
nop
add
sbb
jne
in
out
pop
stos
cmp
fisttps
lret
movsb
out
adc
rorl
dec
dec
lret
jnp
dec
movsl
push
dec
add
repnz
sahf
icebp
fistl
push
das
clc
or
inc
xor
insb
or
pushf
mov
je
cli
push
stc
xor
adc
paddusw
jp
jp
lock
test
add
xchg
filds
in
test
mov
xchg
jbe
movsb
dec
mov
rcl
lock
pop
mov
popf
sbbb
scas
fsts
sbb
jno
sbb
mov
std
test
pcmpgtw
mov
sub
mov
scas
out
movsl
icebp
mov
out
dec
adc
in
xor
lret
mov
mov
cmpl
lret
aam
outsb
push
stc
mov
dec
dec
pop
jle
and
sub
sbb
xor
mov
jae
adc
push
fs
cltd
or
jae
adc
push
xor
jne
pop
repz
cmpsl
mov
dec
add
xor
fs
lods
addl
orl
rcll
add
ds
addl
pop
out
les
jae
repz
sbb
aaa
int
adc
out
ret
inc
add
cmp
lahf
add
cs
lcall
int3
jns
add
inc
jmp
mov
cmp
cmp
mov
cmp
xlat
mov
or
push
sbb
push
addr16
sbb
jae
adc
arpl
cli
mov
ja
xor
push
dec
mov
and
and
or
cmp
data16
inc
xchg
adcb
and
mov
mov
push
push
dec
in
or
push
jo
in
insl
mov
je
cmpsb
das
xchg
adc
inc
jp
icebp
daa
sub
cmp
inc
enter
das
push
mov
mov
jae
and
mov
pop
imul
add
xchg
pop
dec
cs
push
in
lds
mov
add
cmp
sti
sahf
test
cmpsl
sbb
stos
xor
push
repz
hlt
mov
push
pop
iret
daa
cmpsb
sbb
das
lods
add
pop
inc
push
mov
cmp
jecxz
lcall
xor
cmp
insl
add
outsb
xchg
jo
jns
rclb
and
into
icebp
cltd
das
sahf
dec
jp
cmc
mov
push
mov
xor
daa
jge
shrl
inc
pop
jmp
xchg
sti
push
xor
arpl
fcompl
mov
jmp
mov
les
stc
vmovntps
outsl
jg
mov
sbbb
mov
shll
pusha
push
xchg
lahf
test
xchg
dec
test
and
lods
out
mov
jmp
dec
fcomps
and
ret
scas
inc
sbb
dec
push
cmp
fstpl
aaa
xchg
add
and
test
cmp
stos
stos
and
pop
jp
jae
mov
sbb
call
push
mov
jb
insl
xlat
outsb
pusha
mov
test
push
insb
or
mov
sub
jbe
sub
mov
aas
stos
fdivrl
shl
add
ret
lret
mov
icebp
push
mov
lods
divl
adc
push
pop
sub
cmp
dec
xchg
and
pop
pop
xor
push
sbb
adc
out
stc
test
ret
cmp
out
pop
repnz
and
add
clc
test
mov
sbb
test
test
arpl
jns
mov
dec
or
sbbl
movsb
pop
std
or
cmpsl
jl
loop
mov
dec
and
push
imul
fsubrs
std
cli
fs
jmp
pop
ret
jecxz
inc
stc
mov
push
inc
lret
xor
adc
sub
notl
ret
or
push
inc
insl
jge
int3
mov
mov
cmp
lret
in
push
pop
fisubl
adc
xor
pop
icebp
outsl
addr16
adc
vmwrite
push
insb
fwait
outsb
adc
shr
aam
add
mov
sub
mov
push
scas
out
addb
or
mov
sub
pop
inc
stc
or
setnp
and
or
xorb
cmp
or
fs
rolb
add
rcl
sbb
dec
sar
data16
cs
cmpsl
inc
movsb
jae
repnz
rsm
in
push
jo
cmpsl
lret
inc
inc
xchg
jmp
cwtl
push
jno
push
or
daa
in
add
add
shl
mov
xor
push
das
pop
test
rcr
lds
out
cmp
cmpsl
and
sbb
arpl
arpl
xchg
std
icebp
push
lahf
fdivl
repz
push
xchg
popa
push
test
roll
fnstcw
dec
fimuls
repz
xchg
decl
lcall
jg
dec
push
imul
fwait
out
mov
insb
add
cmp
ss
or
mov
push
sub
in
fldt
add
shll
scas
ljmp
test
jp
out
xchg
shl
loopne
inc
mov
or
or
push
pop
outsl
in
push
cmp
movsl
fisubrl
or
jp
inc
jnp
xchg
xchg
jp
int
cld
lcall
in
pop
dec
adc
dec
dec
pop
shrb
mov
sbb
jnp
sti
nop
mov
jle
lock
pop
add
loope
bound
ss
cs
lea
mov
insb
xor
jb
xor
movb
add
hlt
pop
fsts
test
lar
xchg
jne
dec
pop
popa
pop
aaa
clc
loope
cwtl
stos
lcall
js
jl
movsb
bound
add
rcl
lock
cmpsb
cltd
sub
out
repnz
out
outsl
in
lret
fwait
loop
xor
aam
loope
or
cs
pusha
movsl
mov
mov
hlt
and
lods
push
aas
dec
lret
rorb
pushf
adc
enter
hlt
insb
or
xlat
bound
jecxz
sarl
nop
stos
out
outsb
pop
push
sbb
add
test
mov
idivl
push
cmp
sub
mov
test
xchg
fdivrs
xchg
cmp
fadd
mov
pop
push
and
push
xor
xorb
adc
xor
mov
sbb
dec
js
inc
fsubrl
xchg
adc
pop
arpl
push
sbb
orl
cmc
or
cmp
scas
out
in
dec
mov
mov
inc
stos
cmp
shrb
iret
mov
ret
cmp
js
pop
inc
jb
icebp
mov
ja
and
nop
or
shl
stos
xchg
push
sahf
push
test
ret
pop
test
cmpsl
mov
ja
sar
idivb
xchg
test
lea
xorl
scas
nop
cmpxchg
jne
adc
push
push
push
cld
outsl
push
lods
mov
insl
fsin
inc
test
ljmp
bound
xchg
ja
add
mov
or
jnp
ror
int3
pop
out
dec
cmc
xor
into
add
sub
pop
cmc
mov
and
mov
sahf
lds
gs
mov
insl
in
mov
pop
je
fcomps
xor
icebp
cmp
and
mov
dec
mov
fs
cmp
sub
in
in
daa
mov
ja
mov
xchg
out
iret
lret
lea
inc
mov
neg
jo
adc
and
cli
jns
ss
inc
pop
mov
iret
add
push
jne
cmp
clc
adc
xor
cmpsb
jle
adc
mov
data16
mov
or
cltd
popl
push
in
and
scas
out
mov
rclb
js
cmp
or
cmp
push
jb
dec
inc
fnstsw
mov
sarb
jmp
sahf
fs
shl
push
iret
adc
mov
pop
pop
ret
pop
das
xchg
push
dec
in
das
jp
and
xchg
adc
lcall
sub
add
inc
fldl2t
sbb
into
xlat
mov
dec
repnz
je
popa
fsubr
xchg
leave
cld
outsl
mov
loop
adc
jecxz
clc
enter
push
add
pop
out
or
adc
jno
push
sub
loop
lock
stos
testl
inc
xor
jp
in
or
ds
sbb
lods
add
add
test
jae
inc
in
arpl
push
or
dec
and
adc
fdivr
in
out
dec
roll
sub
mov
test
loop
mov
sbb
push
mov
mov
repz
push
insl
int
fcmovne
dec
jecxz
negl
in
pop
icebp
sbb
outsb
and
setp
inc
out
notl
lock
push
cmc
out
inc
mov
sahf
mov
pusha
int3
mov
pop
pushl
or
and
icebp
push
push
enter
mov
fdivl
lret
add
insb
mov
jb
rclb
outsl
loop
subb
add
es
adc
inc
in
stc
push
test
push
cmp
daa
stos
inc
clc
adc
or
mov
stc
ss
mov
iret
js
cwtl
test
push
fwait
xor
push
mov
push
notl
mov
test
pop
push
mov
shr
add
movsb
popa
jne
fisubs
xchg
cmpsb
popf
pop
mov
mov
adcb
jo
push
cmp
sahf
fists
mov
dec
mov
popa
xor
dec
or
mov
ret
add
and
mov
jecxz
dec
dec
arpl
dec
loopne
insb
and
xchg
in
mov
xrelease
std
lret
call
or
pop
lods
xlat
mov
mov
test
orl
inc
pop
shr
mov
add
icebp
test
and
mov
cli
shr
std
hlt
mov
lods
mov
ret
jmp
and
sbb
testl
insl
pop
dec
cmp
xchg
jp
add
int3
pop
das
sbb
jg
add
aas
sbb
int3
xor
sbb
xlat
xor
mov
outsb
adc
sbb
dec
lds
pop
lahf
push
andb
scas
insl
aad
and
out
movsb
xlat
pop
mov
clc
mov
xchg
nop
std
pop
imul
sub
sbb
push
aad
mov
mov
mov
ret
jle
pop
xor
fisubrl
xchg
jg
mov
push
lahf
xchg
mov
ss
xchg
lods
cmp
popf
les
xor
pop
cmp
xor
lahf
stos
add
lahf
inc
dec
jbe
call
cli
cs
inc
inc
and
jbe
jne
push
and
jecxz
and
or
inc
jge
xchg
stos
add
jne
add
repnz
pop
je
imul
andl
or
mov
or
mov
fstps
clc
les
cmc
dec
icebp
or
fnsave
seta
flds
popf
lret
cmpsl
pop
cwtl
pop
push
ljmp
in
ljmp
xor
out
lds
inc
sbb
mov
cwtl
cmp
cmc
rol
ficomps
lcall
or
sbb
xor
xchg
jns
ret
pushf
and
lods
or
jmp
mov
push
xor
loop
test
and
gs
xchg
push
pop
test
mov
push
mov
jns
lock
xor
cmp
xor
or
imul
movsb
cmp
pushf
cmpsl
cmc
sbb
add
xor
test
pop
shl
inc
lret
popa
adcl
scas
and
xor
cs
pop
enter
dec
shl
xor
xchg
sub
sahf
stos
mov
jbe
push
push
jbe
jae
add
in
int
inc
push
jns
add
andl
mov
xchg
cs
sbb
cld
cli
adc
or
cmpsb
cmp
clc
leave
les
movb
mov
movsb
movsb
mov
pop
es
mov
xchg
xor
in
sub
push
or
push
fs
shll
dec
movsl
or
cmp
nop
inc
shrb
dec
jns
addb
jle
aas
pop
push
xchg
dec
push
clc
stos
jne
neg
out
fs
xlat
gs
mov
sub
iret
pushw
inc
jns
jge
insb
mov
xchg
scas
fbstp
push
imul
out
outsl
and
or
hlt
cmpsl
sbb
pop
adc
pop
add
cmpsb
rol
fistpl
sub
adcb
add
inc
scas
mov
inc
scas
js
test
push
lahf
in
dec
sti
xchg
std
and
jno
xchg
sbb
mov
les
cltd
sub
push
fcompl
mov
xchg
jae,pt
jnp
aaa
cmp
js
pop
and
stc
dec
test
add
xor
mov
pop
loopne
pop
pushf
cmp
mov
cmp
inc
push
inc
pop
stos
sbb
mov
movsl
hlt
adc
dec
ds
xchg
xlat
outsb
mov
aad
mov
int3
sbb
or
insb
in
pop
loopne
dec
dec
sti
xchg
les
ja
int3
mov
int
cmp
ret
pop
fnsave
dec
cmp
mov
enter
into
and
xchg
cmpsl
xchg
lret
add
rol
sub
insb
fstps
popl
or
dec
imul
dec
shll
mov
lock
int3
insl
lds
shll
ljmp
mov
dec
lret
cld
insl
dec
cmp
cwtl
jns
lret
in
sahf
add
mov
jge
imul
add
outsl
int3
xchg
mov
add
inc
inc
pop
adc
inc
cld
icebp
sbb
movsb
add
mov
pop
repnz
aam
into
or
mov
faddl
mov
inc
shll
jne
ja
fcoms
enter
add
mov
push
sub
dec
aas
cld
xchg
add
mov
jns
jmp
insb
sbb
inc
outsb
mov
rorl
mov
push
ret
or
sahf
mov
cltd
adc
mov
js
mov
pop
pusha
jmp
inc
ss
inc
pop
inc
xchg
insb
pop
cli
dec
add
test
cmp
inc
leave
cmp
pop
mov
ljmp
bnd
outsb
add
dec
xchg
iret
jl
movsl
in
push
aad
jbe
xorb
xchg
mov
push
inc
cmp
in
in
roll
icebp
lahf
xchg
add
jnp
sbb
loope
testl
add
jge
push
mov
adc
pop
mov
xor
rcl
lret
cwtl
push
fldl2e
mov
call
mov
nop
xchg
fldt
inc
fnstsw
es
mov
out
push
loope
mov
lock
adc
xchg
xchg
cmpsl
or
aam
fwait
sub
cld
pop
mov
pop
lret
xchg
xorl
sub
pushf
inc
sub
insb
xor
sbb
push
shl
es
push
sub
pop
fsts
mulb
scas
out
loopne
cld
hlt
repnz
dec
xchg
dec
mov
jge
loopne
in
aad
or
or
out
dec
pop
push
pop
daa
jmp
push
and
cltd
sti
xchg
sub
jo
popf
cmp
enter
das
lods
mov
xchg
sub
mov
imul
add
or
testl
mov
or
and
bound
out
scas
es
js
lret
lods
push
xchg
pop
ss
pop
enter
movsb
inc
dec
jae
cmp
das
into
ja
inc
fs
or
dec
push
mov
popf
or
inc
fcomps
cmpsl
shr
adc
repnz
stc
psllw
mov
sub
mov
jnp
mov
jp
ljmp
push
stos
mov
loopne
inc
loope
test
ret
sub
repz
add
xchg
jl
sub
inc
fsubr
pusha
lahf
das
sbb
cli
xor
das
movsb
sub
clc
dec
pop
sub
xlat
pop
enter
stc
push
in
loopne
push
push
sub
rol
mov
pop
lret
insb
mov
adc
je
adc
pop
xor
or
mov
dec
fwait
sub
test
fcomps
dec
leave
std
mov
push
lret
into
add
jbe
or
or
dec
mov
stc
dec
dec
lods
cmp
sarl
adc
in
call
pop
sub
pop
jg
cmp
test
ja
or
rclb
xchg
push
pcmpgtw
clc
xchg
xchg
call
sub
inc
lret
cltd
jae
and
orb
jmp
mov
int3
jmp
and
cli
inc
movsl
lds
iret
or
adc
mov
shrl
jnp
subb
xchg
dec
cmp
out
mov
pop
sbb
cli
or
ret
lret
cmc
es
fcoms
bound
iret
roll
mov
sub
push
loopne
sbb
inc
test
xchg
inc
in
jbe
cmpsl
push
and
pop
push
pop
jl
pop
pushf
fucomip
leave
xchg
ret
pop
pcmpgtd
mov
sub
sub
dec
negl
vphadddq
xchg
jb
popf
inc
iret
orb
fnsave
lock
insl
cld
jbe
cmp
cs
sbb
adc
decb
or
dec
pop
cmpsl
call
inc
insb
jle
stos
cltd
mov
sbb
add
fadd
sub
mov
cmp
jmp
fnsave
movsl
push
mov
test
rorb
xor
and
lds
lods
pop
lods
sbb
fstpt
add
mov
jnp
test
pop
fsubl
imul
stos
jl
push
mov
push
dec
stos
pop
je
ret
sti
dec
jp
sti
adc
mov
cmp
cltd
mov
mov
aaa
dec
dec
rol
mov
mov
iret
xor
pop
lds
xor
rorl
push
imul
in
jo
repz
sbb
mov
lcall
stos
lds
sub
mov
jg
adc
icebp
mov
sub
adc
int
xor
cli
add
lods
jne
pop
mov
pop
xlat
ljmp
push
jae
mov
add
adc
or
int3
push
or
push
test
add
and
lock
das
lcall
dec
push
inc
fistpl
cmc
fnstsw
xchg
pop
into
gs
dec
movsb
pop
xor
sbb
pop
xor
add
mov
rcll
test
push
lcall
stc
jo
add
jo
cltd
cmpsl
cld
dec
pusha
xchg
js
xacquire
jmp
mov
inc
sub
jne
std
push
inc
dec
mov
addr16
jbe
in
cmp
fs
les
fcmovb
pop
leave
sbb
pop
push
ljmp
mov
dec
hlt
adc
jne
int
lret
ss
sbb
pop
inc
inc
and
jge
mov
dec
aad
dec
mov
add
sub
iret
insl
sbb
out
xchg
sbb
push
imul
cmpsb
mov
inc
repnz
cmp
xchg
fs
push
imul
mov
arpl
hlt
cld
test
orb
or
fs
mov
jae
aas
push
mov
fmul
push
pop
aad
xlat
add
lret
bound
cld
pop
mov
jbe
lods
push
pop
cmc
inc
lods
cmp
in
adc
lods
inc
stc
and
cltd
or
data16
ja
mov
push
inc
popf
mov
jo
sub
mov
jnp
jnp
sbb
lahf
jecxz
std
ja
add
decb
cmc
mov
iret
push
add
and
stos
jns
int3
inc
pop
cmc
out
in
and
sahf
mov
into
jle
add
loope
cmp
int
frstpm(287
subl
jnp
and
jbe
lahf
jg
and
mov
jb
dec
adc
mov
ljmp
pop
sbb
lret
addb
test
inc
fwait
pop
cmp
stc
or
sbb
leave
into
pop
push
fnstsw
out
push
scas
cld
fwait
xlat
mov
xchg
xchg
push
add
or
lds
and
xchg
sbb
repnz
mov
add
jl
sub
jne
addr16
jb
mov
les
mov
jnp
mov
cli
jns
rolb
ret
dec
fs
or
sub
gs
imul
dec
loopne
not
inc
cmp
fiaddl
aam
imul
mov
subl
dec
decl
outsl
loop
xchg
and
fs
fs
cli
test
adc
jb
or
leave
lock
mov
push
mov
xchg
js
enter
or
cmp
inc
stos
adc
dec
cmp
rcrb
popa
xor
xor
int
or
adc
shrl
xor
js
fimuls
sbb
dec
dec
push
adc
add
pop
lahf
jg
inc
clc
pop
pop
push
or
sbb
mov
xchg
out
mov
jl
add
movsb
mov
xchg
fdivrl
test
lcall
cmp
sti
and
inc
inc
xchg
test
xor
push
test
or
cmpl
or
stc
cltd
push
mov
and
pop
and
gs
outsb
sbb
adcl
test
addr16
jae
cmpsl
jl
sbb
je
data16
outsl
push
mov
test
dec
push
and
nop
sub
xchg
sti
out
mov
inc
mov
add
push
adc
xor
ljmp
pop
add
ljmp
push
ja
outsb
jmp
xchg
fcoml
jecxz
sti
dec
cmp
test
mov
icebp
cmpsb
pop
jmp
loopne
xor
out
sub
inc
xor
outsl
daa
mov
sahf
pop
fneni(8087
js
movsl
sbb
push
dec
jns
jg
add
mov
lock
inc
mov
daa
push
movsl
xchg
mov
inc
xchg
js
mov
xchg
sub
mov
xor
rorb
adc
pop
fcoml
jns
xchg
dec
popa
adc
fs
js
popa
pop
jno
ljmp
mov
hlt
cmpl
push
addr16
decl
sbb
nop
xor
xor
mov
lds
cli
push
mov
mov
adc
rorb
shr
stc
cwtl
int
popf
icebp
or
pusha
mov
sti
es
adc
test
dec
sti
cmc
mov
pop
fwait
mov
xchg
mov
adc
adc
xchg
aas
push
popf
mov
or
loop
inc
mov
add
xor
dec
fcomp
std
repnz
cmp
popf
ljmp
inc
lcall
push
sarb
cmp
lret
jno
sbbb
inc
in
jae
fisubrl
dec
pop
push
mov
fimuls
xchg
mov
clc
in
lea
adc
and
xor
dec
sbb
pushf
inc
and
mov
lods
push
push
idivb
xor
pop
arpl
dec
or
inc
pop
repz
loopne
dec
mov
sub
mov
dec
xor
jnp
xchg
pushf
test
inc
inc
repnz
repz
nop
pushf
repz
into
and
xor
mov
pop
jbe
loop
xchg
daa
cmpl
rclb
call
movsl
push
outsl
sbb
outsb
push
subb
les
pushf
dec
ud2
mov
mov
push
ja
xchg
jmp
push
inc
add
sub
fwait
aas
xlat
mov
and
mull
leave
fldenv
jg
faddp
pop
mov
lret
addr16
pusha
mov
in
and
repnz
idivb
insl
inc
rcrb
jmp
divl
sahf
pop
pop
and
pop
cmp
adc
ret
cltd
xchg
jb
aad
push
xchg
cli
or
jae
push
xor
push
orl
arpl
mov
jl
lock
pop
xor
jecxz
or
les
jl
push
or
js
lret
pop
and
out
js
pop
ljmp
shrl
test
adc
jp
pushl
leave
rcrb
pop
fadds
mov
sub
inc
movsb
jg
jecxz
lret
sub
lds
mov
cli
xchg
xor
in
aas
jae
lds
xor
cld
sti
xchg
scas
and
mul
leave
xor
xor
imul
repz
or
dec
int
adc
xor
jge
sub
scas
pop
mov
stos
hlt
int
mov
fnstsw
orb
lock
jge
or
sbb
push
add
mov
xchg
mov
roll
mov
mov
fstenv
das
cmp
dec
imul
cwtl
mov
lret
je
push
test
and
negl
and
cltd
pusha
pop
inc
jo
divl
jmp
loop
mov
loope
cs
jnp
imul
js
xchg
adc
outsb
fwait
xchg
mov
pop
addl
popa
fwait
adc
pop
in
lock
push
jns
inc
aam
pop
les
ret
ret
div
push
scas
and
cmp
and
sti
outsl
ret
lcall
jne
mov
mov
inc
pop
lret
mov
or
xchg
test
fsub
xor
add
mov
mov
mov
lods
sahf
scas
fstp
ret
and
add
mov
pushf
lods
fs
xor
iret
fnstsw
xchg
sahf
out
push
and
inc
pop
addr16
in
js
mov
in
cltd
ret
cmc
ss
popf
icebp
mov
add
mov
out
cmp
pushf
jle
jns
jbe
adcl
mov
sti
xchg
add
movsb
cmpsb
fwait
les
xchg
mov
out
ficoms
cmp
push
std
or
movsb
mov
mov
rorl
loop
cmpsl
xchg
or
mov
mov
aad
mov
xor
popf
inc
lahf
inc
pop
icebp
mov
in
and
add
sub
mov
mov
hlt
push
ljmp
xchg
sub
sub
sti
inc
push
shlb
lret
and
js
inc
fldcw
inc
sbb
andb
push
fcmovu
lret
sar
test
sbb
jns
or
xchg
mov
xchg
js
push
push
mov
fisubl
daa
or
pop
insl
rol
or
mov
ret
lret
mov
xchg
popa
scas
add
imul
or
pop
fisttps
mov
pop
or
mov
jp
push
push
push
icebp
mov
aad
xor
cmp
dec
testl
scas
ret
jnp
or
lcall
or
pop
inc
sub
out
or
inc
sbb
cs
xor
aad
xorl
mov
xchg
loope
xor
mov
dec
mov
stos
dec
cmc
sbb
mov
jmp
divb
push
and
in
test
lret
or
std
jge
mov
test
add
test
fucomip
pop
adc
clc
lret
jae
push
ret
add
sub
jmp
mov
dec
ret
dec
mov
mov
dec
add
mov
push
icebp
and
rclb
or
push
mov
in
stos
aad
sti
sub
rorl
pusha
mov
sarb
pop
sub
movsl
pushf
push
or
popa
mov
or
sub
xchg
pop
fwait
cmpsl
fdivrl
loope
jg
in
xchg
aas
dec
into
mov
or
js
adc
fstpl
cld
xchg
add
fs
fsubl
ret
test
sub
xor
aas
and
cmp
es
mov
sbb
sbb
add
mov
cmpsb
pop
inc
mov
push
ror
ror
push
enter
push
inc
in
imul
insl
pop
push
fcomip
in
inc
in
jb
mov
clc
xchg
aad
lcall
rcrb
pop
lret
sahf
mov
push
pushf
ja
inc
and
int
push
fs
int
in
sub
jne
xchg
mov
jl
repz
xor
sti
mov
mov
sbb
inc
pop
inc
hlt
adc
into
push
jge
xor
mov
test
arpl
repnz
mov
sub
dec
or
cmp
mov
inc
fnstsw
clc
int
mov
sbb
cmc
cmp
decl
inc
pop
jl
iret
inc
dec
ficoms
aaa
adc
arpl
mov
scas
divb
call
dec
or
cli
dec
or
ljmp
sbb
mov
mov
out
mov
sbb
popf
cmp
mov
inc
mov
add
jle
jns
call
push
sub
cmp
scas
jge
sub
cmpsb
sub
cmp
jbe
sti
and
pop
mov
out
loop,pt
xor
sahf
or
imul
and
lcall
and
out
arpl
pop
xchg
syscall
imul
xchg
addr16
test
cmpsb
hlt
jmp
mov
les
std
hlt
fnsave
mov
push
test
das
push
stos
jmp
jge
add
fwait
sub
imul
jmp
sbb
out
mov
or
std
fists
data16
mov
jp
sub
movsb
sbb
dec
xor
movsb
ja
xor
ficoml
mov
adc
push
fiaddl
shrb
jne
add
sbb
pop
mov
cmpsb
sbb
mov
stc
and
ret
loop
sti
jno
sbb
sub
dec
roll
jg
sub
mov
fdivrl
mov
mov
pop
loope
xchg
jle
in
aaa
daa
addr16
insb
mov
dec
iret
adc
or
and
mov
cmpsl
inc
inc
xor
mov
rorb
in
or
mov
repz
cmc
mov
sub
inc
cmp
cmpsl
mov
repz
cmpsl
inc
in
sub
je
mov
lea
jl
sub
pop
lds
fwait
mov
adc
cmpsb
in
xchg
sub
inc
add
mov
lea
adc
jmp
sub
jno
jl
shl
data16
mov
enter
test
sbb
fwait
dec
aam
xor
fs
neg
into
in
pusha
arpl
or
fwait
inc
es
repz
leave
sbb
dec
out
out
jle
xor
pop
or
mov
pusha
std
int3
in
movsb
xchg
adc
call
mov
sahf
out
xor
hlt
clc
push
movsb
inc
sbb
mov
sub
adc
mov
fcmovb
andl
scas
jmp
fbstp
pusha
pop
das
jo
jg
inc
xchg
scas
sub
aam
fnstenv
imulb
mov
out
cwtl
inc
enter
xor
sub
out
aaa
hlt
or
hlt
cmp
es
addr16
pop
cmc
add
nop
mov
push
inc
adc
mov
inc
lods
ja
mov
fists
test
adc
jecxz
mov
and
pop
cmpsl
sub
mov
outsl
xor
jnp
push
cmpsb
arpl
lcall
pop
movsb
pop
sub
mov
sbb
push
test
scas
cmp
push
or
lcall
ds
repnz
loope
or
adc
pop
jecxz
int3
push
shrl
daa
xchg
dec
movsl
scas
cmc
mov
push
aam
test
cmp
pop
jmp
jg
hlt
mov
mov
dec
imul
and
and
inc
repnz
insl
cmpl
sarl
repz
xchg
cwtl
cs
pop
mov
nop
mov
test
jp
dec
fidivrl
jo
call
add
fildl
pop
xor
bound
sub
pop
pop
sbb
aaa
addr16
cwtl
push
xchg
jg
mov
xor
add
push
pusha
mov
pop
nop
push
cmp
rcr
pop
testl
jp
icebp
push
scas
cwtl
out
mov
and
dec
jb
xor
xchg
mov
std
cltd
mov
fwait
jb
lock
popa
push
stc
test
movsb
jo
dec
outsl
dec
sub
add
les
fnstsw
mov
jmp
js
jmp
push
cmc
test
incl
aad
sub
incb
jg
inc
xchg
cmpsl
stos
inc
add
popa
push
dec
push
js
mov
inc
iret
push
jne
push
orb
mov
insl
repnz
test
or
ss
and
ljmp
cmp
pop
jmp
aas
push
sub
jo
dec
dec
cmc
mov
inc
or
mov
push
into
inc
fnstsw
mov
movsl
push
xor
into
sahf
lods
push
cmp
out
adc
push
jne
shll
push
inc
sbb
jae
push
dec
pop
fwait
and
adc
fnstenv
xor
mov
xchg
cmp
add
fcomip
leave
mov
xor
outsb
xor
jne
adc
xchg
inc
les
nop
pop
pop
aas
pop
movsb
lahf
fcomps
bound
pop
ret
jb
sahf
stc
mov
push
loopne
mov
std
sbb
rcrb
je
dec
in
dec
out
data16
mov
mov
jns
ja
mov
subl
xchg
faddl
jmp
and
pushf
push
bound
sub
dec
notl
test
out
lcall
loope
addb
js
dec
shrb
push
dec
mov
pop
inc
jmp
adc
aaa
inc
test
mov
xchg
jl
test
loop
mov
cmpsb
sar
out
mov
aad
jae
je
add
test
mov
lret
mov
stos
lahf
jp
mov
sbb
ljmp
clc
xor
rcr
mov
mov
adc
mov
frstor
lea
pop
push
stc
pop
jno
mov
jg
mov
adc
mov
jns
lret
push
cmp
cmp
sub
cmp
movsb
testb
imul
and
and
sar
outsl
mov
sarb
mov
adc
fdivrs
xor
push
outsb
jbe
xchg
push
adc
es
xchg
arpl
sbbb
adc
sub
inc
fucomi
dec
sbb
adc
jge
pop
fs
test
push
jp
xchg
adc
pop
adc
inc
inc
je
xor
fidivl
out
es
inc
push
adc
adc
dec
ds
jl
mov
mov
out
ds
popa
clc
jmp
add
inc
dec
push
fwait
jge
mov
cs
icebp
adc
call
adc
dec
mov
into
sbbl
adc
or
es
or
xor
mov
sbb
xchg
and
mov
sbb
cmp
insl
cmp
or
stc
mov
mov
xor
mov
nop
sub
add
test
pop
jp
inc
xchg
jbe,pn
icebp
insb
int
sarb
cmp
es
jae
iret
or
sbb
fsubr
fwait
cs
sub
push
fdivrl
xchg
test
dec
pop
negb
adc
fisubrl
push
cmc
pop
sti
test
sar
les
adc
out
insl
pop
jge
add
or
or
inc
and
bound
cmp
dec
inc
push
in
aad
fcoml
test
mov
lahf
mov
add
data16
arpl
or
std
into
cmc
fwait
jb
mov
stc
nop
sub
lods
outsl
pusha
into
pop
jbe
pop
in
stos
shl
and
dec
mov
int3
sub
mov
pop
jmp
jg
lock
insl
adc
adc
sahf
lret
sbb
test
xchg
daa
leave
xor
xchg
arpl
data16
mov
jle
sub
add
in
in
push
es
dec
mov
ret
scas
sub
loopne
and
dec
in
pop
adc
xchg
mov
movsl
fs
mov
cmp
mov
xor
mov
fdivrs
frstor
leave
call
mov
movsl
ja
jo
pusha
dec
push
jmp
dec
inc
or
filds
fs
orl
fwait
push
aad
cmp
insb
sub
pop
aad
xchg
std
cmpsl
sbb
aam
lahf
shrb
mov
test
sbb
loope
aad
dec
or
adc
cmp
xchg
rorl
dec
rcl
dec
xchg
adc
and
bound
movsl
cmp
pushf
push
inc
jl
loop
mov
into
or
push
movsl
cmp
pop
cmc
nop
mov
dec
fisttpll
mulb
orb
aam
arpl
jmp
stc
fiadds
testl
jbe
mov
cmp
mov
into
test
push
fwait
inc
in
dec
popa
out
push
sub
fildl
in
ja
fucomip
es
or
lods
mov
inc
or
ja
insb
add
jmp
lea
sti
lcall
jno
pop
inc
sub
mov
daa
pop
stos
jmp
les
insb
push
ds
cltd
xchg
adc
jg
negb
int
or
and
rcr
mov
test
xor
mov
cmp
lods
dec
das
inc
inc
or
inc
sbb
pop
pop
leave
jbe
or
push
push
mov
push
adc
imul
mov
xchg
js
dec
mov
pop
xlat
lcall
pop
fwait
pusha
pop
mov
incl
mov
adc
lahf
in
add
xchg
add
mov
cli
xchg
rorl
push
push
push
xor
jno
fs
fstps
iret
xchg
adc
sti
bts
dec
pop
cmpsl
mov
mov
jmp
mov
jg
add
and
addl
xchg
pop
inc
adcl
das
daa
sub
fstl
in
mov
les
xchg
lods
cmp
sub
cmp
dec
dec
das
aad
xchg
push
mov
leave
repz
inc
inc
loop
inc
loopne
rol
rolb
lret
bound
hlt
dec
dec
ds
hlt
push
cltd
dec
ret
xchg
orb
jg
jno
test
fsubrs
jmp
xlat
mov
push
pop
add
inc
jno
dec
iret
in
cwtl
out
add
repz
pushf
daa
fcmovnb
inc
test
mov
inc
cltd
add
outsb
hlt
mov
cmc
mov
jecxz
les
test
fidivrl
incb
pop
imul
mov
int3
xor
inc
hlt
out
cmp
dec
lds
insl
arpl
and
push
jae
mov
inc
adc
jne
outsl
mov
les
mov
daa
addr16
je
arpl
jno
in
mov
js
loop
mov
push
cltd
mov
push
push
inc
ffreep
jns
les
test
outsl
das
addr16
js
mov
cmp
sub
shlb
adcb
fldl
mov
mov
add
push
ret
popf
or
mov
mov
jmp
into
xorb
jo
push
pop
scas
mov
mov
dec
pop
mov
inc
std
inc
arpl
cmp
xor
repz
cmp
ja
les
adc
mov
dec
xchg
call
lahf
pop
add
mov
adc
or
fisubrs
mov
roll
scas
sarb
je
and
push
cmp
or
and
cmp
insb
jecxz
jnp
sbb
cmp
or
ljmp
or
in
push
pop
cs
inc
inc
pop
dec
push
int3
fiadds
ss
sahf
leave
cwtl
sub
jl
push
imulb
cmp
push
adc
push
fisubrl
push
imul
insl
add
stos
mov
push
jle
lahf
mov
ret
gs
mov
nop
mov
adc
push
int3
fidivl
mov
or
pop
push
aas
ret
or
fisubl
jg
enter
insl
sbb
pop
mov
sbb
pop
xchg
pop
divb
jnp
fsubl
and
mov
mov
sub
test
aad
or
xchg
pop
dec
scas
mov
adc
cmp
test
fisubrl
rol
test
or
jge
ret
int3
test
imul
sbb
push
push
outsb
mov
shlb
mov
icebp
popf
je
xchg
sub
and
outsb
faddl
ret
scas
jg
fldcw
add
notl
inc
mov
dec
leave
pop
sbbl
dec
push
out
btr
lret
daa
roll
xor
out
xlat
add
inc
add
mov
shr
push
outsb
fwait
sub
repz
insb
out
push
xlat
xchg
lea
mov
imul
push
xor
nop
sub
mov
adc
dec
dec
imul
adc
shlb
icebp
inc
lea
mov
cmp
sbb
fmull
aam
xor
and
sub
xor
push
daa
dec
ret
mov
dec
jp
adc
push
mov
je
inc
test
loope
test
out
push
xor
adc
jecxz
ficompl
mov
sub
inc
push
jl
lahf
gs
pushfw
les
mov
mov
ret
sub
pop
stos
mov
mov
dec
push
cwtl
sti
jge
sti
cmp
jg
pop
divl
cmp
jecxz
mov
or
mov
pop
loop
and
je
lods
leave
test
push
cld
sbb
shlb
negb
or
mov
popa
add
mov
jns
mov
leave
ret
pop
shrl
fldenv
cmp
aad
insl
inc
inc
imul
pushf
mov
ret
stos
test
test
sub
sbb
jp
and
fisttps
sub
sub
imul
dec
loop
into
enter
adc
rcl
xchg
scas
scas
adc
jb
adc
fmul
adc
dec
or
fs
mov
mov
stc
outsb
push
ds
in
imul
icebp
mov
add
ss
mov
div
xchg
rcl
daa
cmpps
test
inc
ret
nop
sub
rcrw
push
lea
sbb
ja
jo
shlb
jmp
sbb
pop
in
aaa
jl
cmp
test
les
rcr
xchg
insb
mov
sbb
ljmp
push
in
test
cwtl
jo
pop
mov
testl
sbb
pop
popa
stos
mov
inc
pop
jl
mov
in
and
cmp
sub
fnstsw
jl
mov
mov
je
mov
fstl
sub
in
jnp
jno
xchg
jmp
aas
in
loop
mov
and
xchg
xor
mov
lods
inc
pop
jne
mov
test
jl
iret
pusha
addb
add
pop
add
push
inc
jl
int
mov
faddl
fisubrl
xchg
rcrb
arpl
sahf
aaa
fstps
ja
dec
std
shl
mov
adc
inc
out
mov
out
data16
test
dec
dec
fdivr
out
popa
jl
cmp
jns
cld
xorb
add
push
int
xchg
or
sbb
dec
shlb
icebp
insl
dec
hlt
jp
mov
adc
aam
fistpl
xor
push
cmp
push
mov
insb
mov
dec
repz
or
cmpsl
add
inc
xchg
adc
adc
mov
jo
addb
or
mov
xor
inc
jnp
mov
in
into
movsl
jne
aam
cli
adc
jno
sbb
mov
cmp
push
stc
dec
into
mull
sbb
pop
into
fdivrl
mov
cmp
popf
xor
ljmp
push
jl
loopne
mov
mov
xchg
and
adc
push
movsl
mov
and
sarl
lds
lods
inc
mov
les
in
mov
xchg
dec
xor
cmc
jns
popa
std
jno
jl
loopne
push
outsl
sbb
iret
ss
pop
mov
add
repnz
sti
out
outsb
push
les
xor
lea
addr16
jle
or
sub
insl
fwait
inc
les
xchg
sbb
repz
into
cmp
dec
jno
cmp
neg
sub
pop
test
and
flds
cmp
push
popf
loopne
leave
inc
xchg
add
mov
imull
mov
mov
xchg
jo
addl
push
lds
lods
jo
imul
jecxz
jmp
mov
mov
sbb
scas
rep
or
adc
and
sub
and
dec
and
in
lods
cmp
clc
inc
sti
pop
ss
test
sahf
pop
ret
or
ds
adc
inc
sub
aas
and
sbb
and
cltd
es
dec
xlat
inc
testb
sbb
mov
loope
sbb
loopne
or
rorl
inc
inc
xchg
test
pop
mov
out
test
mov
cmp
idivb
shrb
xor
xchg
imull
cli
stos
mov
gs
mov
pusha
lcall
xchg
push
xlat
push
rcll
push
ljmp
cmp
lahf
sbb
jge
repz
out
mov
divl
xchg
sbb
mov
add
xchg
jl
outsb
jae
fbld
push
mov
inc
cmp
nop
jecxz
sub
fists
push
enter
out
jae
pop
sub
mov
ljmp
adc
fadd
xchg
test
fwait
xor
push
jl
scas
mov
cmpsb
mov
rol
xor
clc
insb
push
add
in
lahf
jbe
leave
es
pop
xchg
inc
xor
mov
mov
clc
mov
pushf
mov
pop
dec
sub
pop
push
jo
jp
decb
dec
ljmp
dec
cld
outsb
dec
arpl
cmp
out
cmp
imul
inc
push
or
das
adc
rcrl
mov
call
adc
jno
ret
xor
sbb
sbb
mov
add
in
xchg
xchg
cmp
in
mov
daa
mov
and
push
call
xchg
and
pop
movsl
mov
lea
xlat
sub
xor
mov
into
or
jle
aaa
xor
sbb
pop
jns
cmp
jb
mov
andl
push
add
xchg
test
cltd
dec
daa
sbb
xchg
scas
and
pop
dec
ret
fisttps
enter
mov
jo
out
fcomps
mov
cmpsb
or
scas
test
xor
sbb
pop
or
test
xchg
or
cmp
fbstp
or
mov
loop
pop
jmp
cltd
aaa
xchg
push
jne
dec
and
pop
arpl
mov
jmp
cwtl
scas
andl
sub
add
dec
jecxz
aaa
sbbl
jmp
xor
das
pop
aaa
imul
mov
xchg
pop
testb
and
dec
mov
sub
int
mov
and
and
xchg
rcrb
mov
add
or
sub
shlb
ja
es
out
xor
loopne
cmp
mov
push
jnp
data16
mov
fildll
lock
cmp
mov
xchg
mov
xor
or
cmp
in
cld
divl
bound
hlt
das
sbb
lahf
ds
rol
mov
jo
jmp
push
xlat
mov
fwait
icebp
jns
push
sub
fwait
js
xchg
js
adc
and
or
jp
insl
xchg
lods
in
pop
movsl
scas
push
mov
rol
hlt
inc
loope
xchg
ret
gs
sbb
or
icebp
sub
xchg
xor
push
arpl
pop
jg
add
jb
pop
aaa
cli
xchg
add
bound
mov
gs
xor
sbb
xchg
loope
mov
hlt
xchg
sbb
out
mov
adc
push
cmp
inc
cld
pop
dec
and
and
mov
and
mov
mov
shlb
fnstsw
jns
into
in
sub
daa
pop
ds
lods
cmc
test
es
insl
loopne
mov
xor
fstpl
cmp
jb
xchg
or
lds
mov
cld
popa
jl
rcrl
adc
icebp
jb
cmpsb
rorb
jp
loopne
std
or
stc
ss
push
repnz
xor
ficoms
insl
test
xchg
cltd
sti
imul
scas
push
add
clc
pop
fidivrl
fidivl
mov
adc
mov
lock
xchg
pop
pop
testb
xor
ret
outsl
inc
fldenv
ja
xor
mov
sub
mov
adc
ss
cmp
out
imul
sub
mov
test
pop
loope
mov
pop
xchg
aaa
dec
leave
mov
mov
ss
adc
std
adc
std
js
loop
push
dec
call
cwtl
lods
or
call
xchg
sub
nop
cmpsb
xor
adc
sbb
in
cmpsl
cmpsl
jmp
inc
add
mov
lret
pop
cwtl
ss
mov
jge
xchg
fsub
dec
outsb
inc
cli
cmp
das
mov
jl
jns
inc
iret
add
scas
bound
and
push
addr16
inc
lahf
mov
push
push
out
xchg
inc
push
loop
je
mov
or
sub
add
insl
and
cld
fadds
jg
stc
arpl
int3
cmp
ret
popa
sbb
cltd
sub
ja
lock
xchg
sub
cwtl
xorl
out
jbe
orb
jmp
jns
sub
repnz
mov
stos
mov
lret
subb
stos
loopne
add
mov
pushf
inc
aad
std
movsl
ficoms
fnstsw
test
and
cmp
scas
enter
popf
fdivrl
ljmp
pushf
out
xor
neg
jae
mov
or
add
aas
xor
aad
loopne
xchg
push
adc
push
xrelease
add
or
mov
fisttpl
push
in
fistpl
aad
cmpsb
cmp
lret
adc
test
mov
or
push
or
negl
adc
pop
inc
inc
jno
xchg
mov
clc
fcomps
xchg
jb
jl
xor
pop
stos
loope
mov
pop
jae
inc
dec
mov
fadd
fs
cld
fisubrl
push
sbb
mov
je
aam
push
shll
clc
mov
xchg
cli
pushf
cltd
orb
jb
ljmp
pusha
mov
xchg
xchg
or
cmp
repz
jbe,pt
stos
mov
shrb
and
jg
repnz
mov
cltd
jle
lret
dec
loope
xor
sub
pop
loopne
mov
lret
test
xor
in
stos
sti
cwtl
mov
pop
aad
test
xorl
cwtl
hlt
mov
in
ret
nop
add
ret
jmp
arpl
andb
xchg
fsubrp
jnp
ret
loop
mov
pop
retw
xchg
pop
add
sbb
in
xor
loopne
sbb
pushl
ret
xor
push
stos
es
jmp
push
stc
in
mov
jp
adc
mov
xchg
xchg
adc
inc
push
fidivs
je
xchg
mov
add
cmp
rcrb
mov
cmovp
mov
push
fldl
repz
or
fidivrs
pop
mov
leave
xchg
addr16
fucomi
xchg
xor
sbb
jge
rcrl
jmp
jle
jl
sarb
mov
pop
xor
lret
stc
call
mov
gs
sub
data16
mov
loopne
jecxz
cmp
stos
push
mov
push
sbb
push
notl
and
pop
loope
enter
call
lea
mov
push
mov
fbld
mov
cmpsb
pop
repz
pop
je
inc
in
sbbl
dec
push
sub
pop
insb
pusha
aas
sarl
sub
pop
mov
xor
fs
jge
xchg
movsl
repz
mov
pop
lea
xchg
cld
lcall
jne
mov
xor
mov
xchg
xor
push
fisubrl
lods
xlat
das
dec
mov
clc
adc
call
addr16
fldt
push
fs
jnp
mov
fcom
push
push
or
mov
es
in
xchg
dec
xchg
inc
jl
je
leave
jns
cmp
cli
rorl
dec
push
cmp
and
mov
cmp
sub
lods
inc
dec
xchg
nop
mov
scas
dec
mov
fwait
push
cmpsl
stc
cs
scas
or
adc
aad
mov
es
sbb
fidivrs
lds
mov
loop
adc
cmp
aam
mov
shrl
sbb
sbb
mov
adc
mov
out
pop
bound
mov
jmp
rcrl
mov
push
lret
pop
gs
adc
pop
cmpsl
mov
mov
add
test
aaa
adc
push
adc
push
ffreep
les
lcall
ljmp
imul
push
out
out
adc
fs
gs
sub
xchg
call
and
xor
test
xchg
data16
pop
cli
lea
test
das
sub
test
xor
test
cli
movsl
mov
outsl
xchg
mov
sbb
and
or
xchg
pop
dec
xor
cmp
sbb
mov
shl
int3
popa
xchg
arpl
cmpsl
jge
rcr
pop
cmp
insl
lock
jmp
enter
fisttpl
mov
jo
xchg
or
jle
xor
cmp
jb
cli
cwtl
divb
xor
les
add
fidivs
inc
sub
xor
stc
fs
xchg
adc
leave
adc
dec
adc
xchg
push
or
inc
loop
aad
pop
inc
leave
pusha
scas
std
mov
fwait
adc
call
cltd
lods
int3
pop
scas
pop
into
and
push
xlat
repz
or
cmp
sub
mov
fdivrl
xchg
sub
ret
loop
out
in
cld
lcall
in
mov
or
mov
scas
mov
pushf
icebp
cmp
xor
sub
movsl
icebp
dec
mov
int
cmp
push
and
jae
lds
std
mov
sarb
jne
cmpsb
fs
sub
mov
push
inc
into
andl
daa
inc
push
mov
mov
cmp
cld
add
dec
mov
subl
dec
sub
dec
aad
xor
push
adc
ret
sahf
inc
das
in
rcrl
mov
push
mov
js
and
lods
sub
inc
pop
scas
popa
and
sub
cs
or
adc
mov
push
rcr
jbe
int
xchg
xchg
dec
pop
icebp
fwait
sbb
inc
sub
xchg
mov
loopne
cmp
repnz
int3
fcoml
push
mov
loopne
test
test
jb
inc
stos
jmp
loope
imul
mov
xchg
sbb
ss
sub
divl
sbb
dec
jmp
pop
outsb
dec
mov
inc
mov
in
jmp
testb
mov
and
jno
test
mov
sub
out
add
movsl
xlat
pushf
dec
dec
jmp
call
test
mov
push
mov
sbb
or
or
add
aam
inc
push
mov
mov
mov
movsb
sbb
pop
mov
push
cmp
mov
adc
pop
mov
pop
je
mov
cmp
fs
pop
fidivs
stc
je
mov
jmp
and
gs
cmpsl
sub
popf
les
dec
repz
adc
xchg
add
xchg
stc
loope
jecxz
inc
cmp
lcall
and
or
int3
mov
mov
pop
pop
imul
dec
test
in
sbb
lods
mov
lret
inc
fsubr
add
js
xchg
jle
mov
rorl
fnstsw
add
ja
js
aad
sbb
insb
cmc
ja
lret
bound
cltd
outsb
mov
mov
data16
pop
pop
jge
arpl
xorb
dec
mov
sbb
jp
lret
hlt
jb
or
shl
adc
daa
mov
scas
and
inc
mov
add
inc
inc
in
xchg
jno
lahf
jb
mov
mov
les
jle
cwtl
das
mov
leave
into
lcall
fdivrp
mov
ret
in
test
dec
cmp
lret
cld
pushf
sbb
rcr
ret
adc
lea
mov
dec
pop
lods
inc
sahf
jae
jno
mov
gs
add
sbb
addr16
mov
ret
int3
pushf
faddl
aas
outsb
cmp
and
enter
adc
xchg
out
pop
sbb
mov
mov
or
pop
jns
ja
sub
cmp
adc
mov
push
sub
push
jge
mov
add
sbb
cmpsb
sbb
inc
mov
mov
cltd
push
aas
movb
call
out
addr16
mov
out
push
pop
fiaddl
outsl
cmp
addr16
clc
fs
push
je
jo
aam
bound
fisttpl
gs
scas
test
ljmp
add
pop
xor
xchg
push
push
pop
inc
push
aas
dec
fbld
mov
test
das
pop
push
sub
inc
sub
pop
test
or
push
leave
jecxz
jnp
adc
dec
adc
push
pushf
mov
lods
andl
push
das
je
pushf
add
test
negb
jno
clc
inc
pop
sub
jo
das
ficoml
in
and
inc
popa
adc
shlb
cmpsl
and
in
jnp
lahf
into
inc
pop
repz
scas
loope
pop
inc
or
mov
lds
and
jo
repnz
ficoms
jne
inc
enter
mov
std
and
mov
jecxz
mov
out
xor
fwait
iret
int
stos
inc
gs
lcall
pop
xor
jo
inc
sti
std
inc
or
sahf
ss
mov
icebp
leave
mov
inc
lds
push
out
repz
pusha
aad
xchg
popa
jns
sbb
sub
dec
loop
xchg
dec
push
ljmp
inc
dec
pop
jbe
xchg
movsl
push
mov
mov
cmpb
ret
dec
in
cmc
ret
jns
scas
incl
imul
inc
in
stos
cli
cmp
push
dec
mov
movsl
push
sbb
dec
mov
mov
xlat
mov
fwait
mov
inc
int
movsl
mov
cltd
sbb
push
mov
insl
adc
jp
arpl
add
ret
jge
and
sub
push
lcall
dec
or
cmp
sbb
xchg
sub
and
dec
inc
jb
je
dec
mov
inc
mov
fbstp
mov
mov
and
addr16
notb
nop
dec
cmp
aad
jl
mov
stos
add
sub
shrb
fidivrl
jl
mov
js
pop
pushf
arpl
jae
scas
popw
jo
sbb
sub
mov
inc
dec
mov
lock
ss
jbe
pop
jl
pop
xor
lcall
xlat
lcall
jo
pop
sbb
mov
push
sbb
mov
jbe
insl
cmp
cltd
shll
sub
push
fnstenv
repz
dec
andb
xchg
pop
mov
mov
fldcw
pop
mov
pop
xor
imul
lods
js
test
imul
pop
xor
push
and
jnp
lret
out
mov
mov
mov
popa
cmpb
mov
mov
dec
insb
jo
popf
gs
mov
pop
xlat
mov
cwtl
aas
jno
in
ror
mov
and
decb
sbb
lds
out
popa
fcoml
push
adc
mov
sbb
xchg
test
sbb
outsb
add
sbb
daa
cmp
sbb
hlt
mov
ret
cs
aad
dec
imul
xchg
out
test
xchg
xlat
mov
dec
vpsllw
jb
outsb
push
push
push
sub
iret
aas
and
repnz
ljmp
cltd
xor
dec
daa
jecxz
icebp
cmp
push
daa
out
sahf
pop
insb
mov
cltd
push
test
and
mov
gs
mov
pop
in
enter
dec
sub
repz
fwait
xor
sbb
mov
in
mul
jns
sahf
aam
movsl
or
jl
orl
nop
sub
stc
sbb
pop
add
ss
jne
jg
lcall
les
mov
inc
shll
fwait
outsb
jbe
clc
shrb
xor
dec
pop
mov
dec
xchg
das
mov
test
ret
aas
xor
fnstenv
fcoml
dec
scas
int
mov
mov
mov
push
jo
gs
gs
and
inc
mov
mov
or
pop
sti
fcmovu
adc
push
inc
stc
popa
jns
cmp
aas
xchg
cltd
mov
mov
inc
pop
xchg
mov
arpl
jb
testl
and
clc
mov
jns
pop
mov
fdivl
cld
jl
sub
cltd
xchg
sub
into
jae
repz
movsb
cmp
and
mov
clc
sahf
pop
arpl
sbb
pop
sub
test
lcall
pop
xchg
jbe
mov
pusha
or
in
pop
mov
mov
push
xchg
inc
mov
scas
sahf
add
jmp
insb
jle
dec
push
push
inc
lea
dec
mov
int3
adc
rcrb
loope
push
push
jle
jmp
dec
sbb
ret
imul
xchg
xor
mov
dec
movsl
stos
movsb
cmp
or
test
mov
xor
lods
orb
add
sbbl
fsubr
outsb
inc
or
jmp
mov
sahf
fcompl
nop
mov
into
and
mov
ret
mov
or
inc
dec
pop
mov
nop
fbstp
dec
dec
mov
lcall
lds
in
mov
insb
pop
fdivs
push
dec
mov
xchg
nop
in
call
add
das
insb
ficoml
sahf
nop
ret
pop
push
aam
xchg
sub
fsts
mov
dec
cli
cmp
xor
push
mov
ret
sbb
mov
push
xchg
pop
stos
jmp
mov
xchg
pop
movsl
ret
movsb
iret
jno
mul
and
xlat
mov
cmp
insl
lock
pop
xchg
test
or
cwtl
mov
out
aas
ror
jae
lahf
inc
inc
cmpsb
movb
or
pop
dec
and
in
or
jl
es
jnp
insb
jl
adc
lret
jle
xor
inc
fs
aas
lods
xlat
jb
push
mov
add
sub
lret
ja
ljmp
mov
rcr
mov
repnz
cmpsb
ret
or
adc
fstl
aad
adc
cwtl
in
inc
inc
add
aas
jmp
dec
fcomp
divl
jb
push
mov
ret
movd
imul
xchg
das
loopne
jbe
xor
inc
leave
push
repz
jne
sub
mov
jo
xchg
decl
sbb
popl
cmp
cs
cmc
sbb
mov
in
push
mov
negl
rcrb
add
jne
mov
cmc
idivb
sub
mov
pop
adc
in
push
std
movsb
mov
xchg
mov
jno
mov
xchg
jle
fidivl
mov
or
dec
out
ret
inc
hlt
scas
mov
arpl
pop
and
cmp
sbbl
fnsave
push
inc
or
lea
xchg
mov
mov
inc
add
in
js
test
xchg
test
push
xchg
sub
and
push
das
sbb
dec
loope
or
jmp
mov
rolb
iret
aaa
xchg
adc
data16
xchg
xchg
or
scas
mov
cltd
fnstsw
gs
jo
push
imul
pushf
mov
lods
jne
cmp
imul
rcrb
ljmp
adc
pop
out
and
imul
cmpl
aad
xchg
xchg
mov
test
sub
sbbl
pop
adc
ret
pop
adc
or
adc
popa
int
in
and
xchg
mov
mov
dec
ds
push
rcrl
imul
push
push
mov
int
jge
nop
xor
pop
data16
testb
inc
inc
cli
push
iret
loopne
mov
fwait
sbbl
pop
push
gs
pop
ret
push
sbb
andb
lock
lods
push
fcoml
inc
movsb
sbb
adc
outsl
sub
clc
push
sub
jno
xchg
lds
aaa
mov
dec
push
loopne
jg
shld
frstor
pop
mov
sbb
adc
xchg
mov
int3
jle
movsl
outsl
lcall
loopne
adc
jp
jmp
cld
mov
ja
pop
out
or
bound
loopne
sub
subl
or
cltd
dec
xchg
dec
aam
insl
push
outsl
sbb
mov
mov
test
sbb
add
jne
cltd
sahf
adcl
mov
push
mov
out
inc
inc
xchg
cmp
sahf
mov
jp
cmpsb
in
pop
ljmp
and
mov
xchg
cmp
sbb
sbbb
jle
out
mov
push
cltd
xlat
loope
or
inc
sbb
jle
sbbb
adc
shll
stos
sub
aad
dec
and
push
nopl
xchg
ja
fisubrl
mov
add
sbb
xor
mov
push
adc
in
add
sub
out
dec
push
jne
or
popa
pop
imul
inc
mov
sub
jne
and
xchg
xchg
mov
cs
lcall
ret
pop
adc
or
mov
testb
pushf
insb
push
int
or
dec
push
push
pop
jmp
pop
xchg
sub
push
mov
cmpsb
sbb
lds
mov
mov
out
xchg
sbb
shrl
in
test
je
sbb
shll
iret
push
pop
jno
push
pop
scas
adcl
adcl
xor
mov
xchg
fld
jnp
cmp
test
test
mov
fisubrs
int
imul
lods
cmpsl
shll
xchg
outsb
adc
test
xor
push
out
jge
and
outsb
hlt
xor
ffree
inc
push
inc
test
xchg
sti
xchg
jno
adc
xor
push
sub
jb
pop
push
xchg
pop
sub
xchg
dec
cmp
mov
sub
lea
sahf
jns
imul
xchg
in
les
mov
mov
xchg
mov
pop
dec
xchg
and
mov
jno
sbb
mov
ja
add
adc
mov
mov
jp
adc
in
jo
push
inc
mov
pop
cmpps
add
cmp
insl
adc
mov
xor
mov
out
sbb
adc
jle
addb
dec
xor
jb
lds
sahf
gs
push
and
in
hlt
push
jno
stc
adc
loope
stos
pop
scas
inc
lret
jmp
adc
scas
sub
pop
sub
andb
jbe
jno
xor
daa
cmp
xchg
pushf
clc
inc
icebp
xchg
in
pop
aaa
daa
cmpsb
pop
cmp
dec
and
les
mov
mov
mov
leave
xchg
xor
pop
int3
sbb
lea
mov
imul
mov
ficoms
ds
xor
mov
loope
sti
cmpsb
xchg
push
adcb
pop
imul
inc
fcoml
imul
rorb
dec
mov
adc
dec
rorb
es
leave
pusha
mov
push
sbb
fiaddl
xor
imul
and
cld
mov
fucomp
loopne
xor
cmp
mov
std
xchg
jb
sbb
nop
xchg
scas
push
ret
xchg
sub
fwait
lock
lods
push
push
push
jmp
imul
adc
leave
inc
lods
push
mov
stos
fsts
sub
adc
lahf
jo
sti
test
ljmp
cmc
cwtl
add
movsl
sub
jo
insb
xor
mov
inc
add
pop
scas
jb
mov
sub
int
movsl
mov
sub
mov
pop
hlt
mov
lahf
test
mov
mov
pop
add
sbb
pushf
out
into
pop
mov
mov
cmp
pop
ljmp
pop
outsl
jmp
popf
stos
jle
cmc
xor
scas
jnp
cmp
xlat
mov
mov
mov
movb
lret
adc
xor
fbstp
shrb
xchg
fdivl
inc
jnp
sbb
stos
xchg
fucomip
lret
mov
jns
sub
push
lahf
in
push
in
bound
mov
sbb
mov
adc
je
adc
imul
int3
and
pop
mov
dec
cwtl
mov
mov
les
lods
sahf
out
fbld
xor
inc
mov
lds
aaa
int
stc
lods
cmp
mov
arpl
fucomi
push
push
pop
add
xchg
out
dec
push
cmp
das
inc
std
dec
mov
pop
das
cmp
pop
addr16
popf
inc
push
out
sahf
ret
cwtl
and
leave
loop
add
fidivs
push
or
loop
add
jo
push
out
jb
loopne
mov
sub
pop
pop
inc
loop
dec
cmp
sarb
push
sbb
sub
inc
xchg
mov
ret
push
fnsave
shlb
cld
test
cmp
out
xlat
sbb
inc
fs
sub
add
inc
subb
push
mov
inc
sub
jp
pcmpgtd
fwait
dec
push
sub
adcl
xchg
inc
pop
movsl
xor
xor
sub
mov
lret
lea
daa
insl
sahf
popa
dec
xchg
inc
loope
dec
sbb
lcall
cmp
jl
pushf
sub
aas
adc
shlb
sbb
bndstx
push
pop
adc
stos
in
push
xor
mov
jmp
lahf
stos
and
dec
gs
cmp
shrl
jle
push
int3
in
push
lock
and
stos
popl
aad
into
ljmp
out
fwait
sti
push
xchg
xchg
jo
jg
xor
repnz
cmp
cltd
jmp
xlat
add
bound
xor
dec
sub
mov
jno
aaa
arpl
push
or
rorb
stos
mov
dec
lea
lret
les
mov
xor
adc
lret
insb
outsb
cwtl
lods
mov
lahf
out
mov
or
out
or
mov
aas
movsl
push
mov
mov
shll
fcmovnu
adc
in
lcall
data16
and
mov
xchg
sbb
and
jmp
dec
roll
fsts
push
mov
mov
or
std
jnp
inc
jne
aam
add
xchg
adc
jecxz
outsb
mov
jl
jmp
inc
sub
pop
aam
or
and
mov
popa
leave
lods
aaa
cmp
fistpll
xchg
sbb
filds
adc
ja
mov
xor
mov
push
pusha
mov
inc
mulb
inc
adc
push
cwtl
pop
js
aam
cmp
pop
fisubrl
push
in
xchg
cmp
sti
movsl
into
jae
xchg
inc
jnp
test
imul
push
mov
push
mov
xlat
xchg
out
jb
inc
or
mov
mov
adc
mov
pop
pusha
mov
ljmp
sbb
dec
in
or
pushf
cmp
fmuls
mov
push
push
ljmp
xlat
jnp
xchg
adc
xchg
addr16
mov
enter
cmp
imul
orl
xchg
xor
dec
insb
out
cltd
scas
cltd
jae
mov
or
or
in
es
pop
repz
push
lds
and
subl
xchg
jp
test
movsb
aam
insl
les
dec
filds
push
out
cmpsl
cmp
lahf
mov
jo
push
mov
jno
dec
loop
xor
aas
and
in
inc
or
xchg
pop
adc
jge
stos
js
inc
aas
addr16
je
dec
out
xchg
mov
xlat
out
add
imul
push
add
jb
inc
popa
inc
and
adc
icebp
fs
dec
repz
or
inc
sub
sbb
sbb
xchg
gs
int3
sbb
scas
imul
stos
test
out
cmp
pop
lret
rcll
push
insl
mov
xchg
mov
push
sbb
fcompl
xlat
inc
rdtsc
popa
pop
xor
gs
pop
ja
out
dec
je
cs
mov
mov
pop
xchg
jmp
or
call
aam
ja
bound
fidivrs
fistl
pop
xchg
inc
fstl
pop
push
push
movsb
scas
pop
pop
ss
repz
test
lcall
push
fsubrl
mov
xchg
inc
arpl
lcall
popa
add
roll
jb
jl
adc
daa
loope
jge
adc
repz
add
pushf
xchg
jb
adc
mov
mov
and
sub
mov
sbb
cmp
sti
and
push
adc
adc
std
sbb
and
add
cltd
aas
xor
lods
xor
mov
lret
cmp
xchg
std
pushf
mov
repz
push
and
jns
xlat
mov
mov
je
mov
adc
jp
sti
cmp
add
subb
cltd
fsubr
lret
outsb
mov
pop
add
push
mov
add
xor
xor
or
clc
jl
jns
mov
es
inc
les
subl
dec
sbb
hlt
dec
pop
es
cli
adc
lcall
scas
mov
les
fcoml
ret
ds
sar
mov
int
or
dec
inc
fs
xchg
sub
jae
lea
mov
mov
aad
leave
mov
sets
mov
cmp
mov
mov
test
dec
cmpb
dec
xor
xchg
cmp
stos
mov
xor
mov
loopne
fdivrs
outsl
adc
or
push
mov
cmpsl
outsl
cmc
inc
mov
push
aad
arpl
jge
add
add
pop
add
mov
cmp
mov
sub
inc
popf
xor
jns
loope
adc
aam
roll
add
fs
xlat
add
or
daa
in
movsl
push
fmuls
mov
adc
dec
adc
fisttps
out
adc
shll
mov
jno
push
stos
inc
in
in
or
cmp
xor
inc
ja
mov
outsl
sbb
dec
nop
jnp
ja
adc
jno
mov
and
xlat
cwtl
pop
mov
sub
mov
and
mov
daa
mov
pop
xor
dec
add
addr16
mov
subb
aad
pop
or
call
jge
pop
fldenv
add
jae
jmp
imul
adc
push
shrl
pop
les
or
insl
or
dec
in
in
jp
mov
loope
mov
xchg
jl
movsb
cmp
xchg
adc
outsb
gs
dec
mov
xchg
and
jmp
push
lcall
stos
xchg
aas
dec
mov
adc
cmpsb
push
dec
mov
stc
adc
jbe
clc
jg
cwtl
out
xchg
jns
les
movsb
pushf
sub
sub
and
inc
insl
xlat
into
dec
mov
clc
hlt
mov
sar
jae
mov
cmp
cmpsl
lea
out
cs
xchg
cmp
xor
bswap
outsb
outsl
out
xchg
cs
or
adc
mov
cmc
leave
pop
mov
mov
and
lock
lret
push
imul
sbb
aas
push
mov
rorl
or
lods
sbb
xor
popa
add
testb
sub
cltd
xlat
filds
mov
ss
out
in
daa
negb
lahf
xor
xor
aam
xchg
mov
fstpt
cli
into
cmc
sub
ljmp
es
mov
dec
adc
mov
xor
imul
lock
iret
push
push
movsl
xor
adc
shlb
mov
xor
xchg
rolb
cmpl
push
dec
call
in
jno
push
pushf
test
mov
out
push
negl
sbb
fs
sbb
jno
sbb
xor
testb
adc
je
cmp
hlt
xchg
std
repz
jbe
pop
sbb
pop
jb
xor
mov
jp
jns
sub
cmp
pop
pop
inc
into
sbb
push
mov
dec
jnp
sbb
adc
or
aad
mov
dec
push
or
push
cmp
cmp
stos
pop
popa
repz
sbb
out
int3
fcomp
call
mov
ret
add
fidivl
cwtl
rolb
mov
mov
jge
fcompl
ret
jle
repnz
aad
mov
cwtl
pop
cmp
jns
lods
pop
pop
rcrb
cmp
add
neg
jo
icebp
cmp
cmpl
add
xor
out
mov
sub
add
inc
add
inc
push
es
fs
push
lret
jo
mov
pop
sbb
add
pop
mov
mov
lcall
filds
iret
hlt
inc
mov
shl
xor
pop
fcomps
in
pop
xchg
adc
mov
inc
cmp
jecxz
inc
sub
movsl
cmp
ret
outsl
adc
test
xchg
sub
in
mov
sub
pop
mov
jns
cmp
das
movsb
add
inc
popa
xor
sahf
mov
and
mov
fildl
mov
dec
mov
out
faddp
in
insl
sub
mov
ret
push
fistpll
jl
or
in
inc
or
lea
xchg
rcrl
xor
mov
mov
daa
cli
push
cwtl
subb
jno
sbb
mov
mov
xor
and
pop
icebp
pop
das
mov
sbb
test
sahf
es
push
jp
sub
test
jnp
and
xlat
push
xor
jns
jl
mov
in
jne
pop
sub
xor
xchg
sub
movsb
mov
rcl
in
fbstp
fs
inc
std
xchg
jmp
std
aam
sbb
adc
mov
fidivrs
adc
mov
stos
fmul
push
fidivrl
pop
pop
pushf
jno
lods
inc
std
aam
and
xchg
popf
mov
add
inc
xor
sbb
pop
bound
inc
shr
lods
cli
std
and
inc
iret
daa
xrelease
int
adc
add
mov
xchg
push
out
mov
js
inc
add
mov
les
xorb
outsl
popf
xchg
or
imul
cmc
dec
xor
jmp
addr16
xorb
sub
xor
push
jp
lods
mov
test
and
loopne
sub
dec
cmp
push
icebp
mov
push
and
test
mov
adc
test
mov
pop
hlt
xchg
sbb
hlt
jnp
and
pop
and
jbe
outsl
cli
xor
jns
adc
push
test
xor
jp
movsb
mov
scas
out
mov
cmp
imul
fldt
aas
pushf
push
imul
pop
xor
jp
push
jle
add
jecxz
sbb
xor
lahf
sub
xor
int3
ret
in
mov
pop
movsl
cld
les
paddb
push
pusha
xor
es
movsb
mov
fsubl
inc
daa
mov
dec
dec
lods
dec
dec
out
pop
aad
in
mov
insl
sbb
fsts
push
les
loop
outsl
loop
lea
xor
les
push
xchg
pop
xchg
jl
jp
dec
jns
sbbl
and
xor
push
or
dec
xchg
iret
push
or
mov
mov
mov
push
push
scas
push
fcoms
fscale
pop
lret
push
rcrl
and
icebp
cmp
adc
out
pop
inc
sbb
imul
outsb
mov
movsb
jecxz
push
nop
daa
xchg
pop
into
mov
xor
sub
andl
mov
int
mov
bound
and
cmp
rclb
pop
mov
cltd
lea
and
jno
adc
shl
sbb
imul
incb
test
ficomps
mov
outsb
adc
ror
mov
mov
push
xchg
cmp
into
cltd
test
xchg
cmpsl
ljmp
cld
jmp
cs
pop
xorb
dec
rorb
out
pop
dec
cmp
rcrb
mov
mov
pop
mov
gs
test
xor
loop
je
dec
push
stos
xchg
stc
popa
les
push
xor
cmc
dec
inc
rcrb
dec
pop
cmpsb
jp
imul
jns
mov
mov
shlb
clc
iret
mov
xchg
enter
ljmp
xor
scas
cmp
pusha
push
popa
clc
orl
adc
sbb
aas
xor
data16
dec
push
push
dec
call
shrl
inc
or
jp
or
iret
and
arpl
pop
adc
xor
lcall
movsl
add
test
nop
sub
dec
pop
clc
sti
call
subl
shrl
pusha
jmp
ficomps
cmp
mov
in
add
pop
sub
es
dec
inc
fiaddl
out
fdiv
adc
jb
and
or
cld
cltd
stos
pop
mov
fsubr
scas
jno
lods
into
fdivl
orb
sbb
fmull
mov
stc
xor
mov
add
mov
shll
fldt
jmp
ret
fsubrp
movsb
enter
clc
ds
roll
pop
cmp
test
out
sub
nop
xchg
loope
insl
jge
fisubs
add
shll
cwtl
sbb
and
mov
lods
pop
push
pop
push
lock
ret
pop
jno
cli
xchg
movsl
sbb
add
mov
push
mov
mov
jo
mov
cs
mov
sbb
xchg
popa
mov
or
dec
xor
xchg
daa
or
push
clc
sbb
lock
and
push
fsubrs
shlb
pusha
fbld
popa
pop
sarb
fiadds
adc
inc
jno
insb
mov
push
push
cwtl
push
test
ret
shrl
lcall
xchg
je
insl
arpl
stos
sub
out
arpl
and
add
mov
sbb
cmp
xchg
scas
jno
imul
sbb
add
arpl
in
fstp
cwtl
adc
cmp
or
pop
aaa
into
mov
andb
cmp
mov
xchg
out
mov
cltd
out
push
ss
mov
mov
scas
scas
inc
addr16
aas
pusha
or
fwait
pop
loopne
jns
popa
cmp
add
mov
subb
loop
push
pop
adc
adc
xor
ljmp
lods
les
mov
adc
and
fucom
or
int
mov
sbb
push
mov
adc
dec
fiaddl
imul
lahf
sub
sbb
rol
mov
out
mov
inc
lret
sub
icebp
in
int3
ficomps
pop
sbb
loop
test
jne
or
push
inc
cmpsb
pop
into
sbb
cmp
jle
and
jnp
dec
insb
iret
pop
and
repnz
inc
add
push
lods
pop
in
add
mov
andl
xchg
sub
lock
mov
dec
movsl
jp
fsubrl
test
stos
repz
adc
push
movsb
jge
std
pop
mov
sub
insl
ja
jmp
xchg
cmpsb
cmp
and
adc
nop
push
mov
pushf
push
lods
adc
int3
ret
cmp
flds
push
clc
push
and
sub
aam
xchg
sub
dec
aaa
xor
mov
push
adcl
rcrb
fdiv
sbb
fsubl
dec
push
lods
lds
xor
fdiv
xchg
inc
es
inc
popa
lods
push
addb
mov
mov
dec
jl
jg
xchg
sub
jmp
mov
or
jg
adc
outsl
inc
mov
cmp
mov
fs
add
sub
mov
sbb
push
mov
mov
in
mov
xchg
test
std
adc
xor
cmp
cmp
scas
xor
cltd
mov
out
out
sbb
xchg
leave
jb
out
mov
and
pop
push
out
fwait
jl
ss
jbe
dec
mov
lcall
cmpsb
jo
inc
stos
stc
mov
push
lcall
xchg
pushf
cmc
mov
imulb
rcl
and
test
add
sbbl
cwtl
dec
mov
scas
inc
pop
adc
stos
inc
insb
and
popa
outsb
mov
or
push
jmp
outsl
outsl
xchg
popa
mulb
mov
mov
and
imul
or
aas
loopne
pop
lock
repnz
imul
ret
mov
hlt
or
pop
jle
pop
mov
mov
aas
mov
push
or
cmp
inc
cld
xchg
stos
cmp
ret
mov
pushf
jg
int
stc
cmp
sbb
stc
push
pop
movsb
out
test
mov
ret
repnz
sbb
ljmp
xor
push
aam
dec
mov
stc
push
subb
inc
fidivrl
js
xchg
and
push
cmp
adcl
cmp
jne,pt
out
mov
scas
jno
or
add
cmp
fadds
mov
mov
sbb
loope
push
sub
dec
movsl
lahf
insl
mov
dec
adc
lea
push
imul
pop
cmc
test
stc
enter
mov
adc
pop
add
fidivrl
xchg
scas
cmp
rcll
lods
push
sbb
dec
aaa
push
stos
call
and
gs
mull
mov
andl
out
pusha
pop
pop
sarb
dec
dec
sub
sub
inc
xorl
jb
sahf
xor
repz
mov
je
inc
push
icebp
stc
adc
dec
call
xchg
xor
jle
mov
popf
arpl
sahf
mov
les
lods
inc
bound
fsubl
jle
sbb
xor
cmp
out
mov
aad
xchg
inc
repnz
shll
mov
bound
sahf
test
ret
pop
lock
not
repnz
shll
leave
push
mov
xor
aaa
stos
es
dec
inc
jne
pop
xchg
ja
andb
mov
ret
jnp
add
rcrb
sbb
sub
outsl
xchg
shll
nop
mov
lods
sub
lock
aad
mov
push
add
mov
mov
cmp
xor
leave
pop
aas
aam
xor
and
cli
incb
xor
nop
rcll
sbb
xchg
loope
sub
clc
ja
inc
sub
xchg
mov
jno
push
push
aad
adc
sub
cmp
arpl
in
lock
inc
cmpsl
cmp
lods
aaa
roll
out
fcomip
inc
xchg
sub
int3
pop
lcall
int3
sti
xchg
in
xchg
cwtl
jnp
negl
push
mov
fmuls
jo
cld
cli
fcmove
das
sbb
or
mov
or
test
loop
leave
or
mov
insl
jge
in
arpl
mov
outsb
fdivp
and
push
jb
das
mov
repz
movsl
lds
call
adc
add
push
push
mov
cld
xchg
add
adc
xchg
ffree
xlat
jl
loop
ret
shr
std
repnz
dec
xchg
ret
mov
rcrb
inc
shll
pop
test
mov
mov
cltd
loop
stos
mov
pop
lcall
jae
xchg
push
lea
push
jg
imul
cmp
sahf
test
jecxz
cmp
test
jbe
pmullw
or
out
ret
mov
je
test
cld
jge
fcmovnu
movd
push
or
push
dec
stos
mov
xor
call
fwait
push
test
sub
sbb
stc
cltd
cmp
or
scas
andl
in
js
repz
stos
fucomip
ret
stos
cmpsl
out
test
pop
cmp
rcll
jne
add
and
idivb
popf
or
sahf
mov
fnstcw
pop
bound
fidivs
push
xor
push
sub
mov
sub
das
inc
call
or
push
cmp
fadd
inc
aas
fnstcw
inc
push
mov
push
sbb
shlb
insl
in
popa
jle
mov
sarb
adc
int3
in
pop
or
sbb
adc
jle
lea
fldl
js
adc
ljmp
mov
lahf
das
shrb
aam
sti
xchg
dec
out
xchg
inc
push
xchg
subb
add
cmp
mov
add
jmp
or
incb
pop
mov
jne
mov
jl
pushf
mov
sbb
lcall
stc
adc
jecxz
xchg
push
fdivrs
mov
ret
add
mov
cmp
mov
inc
and
addr16
aas
mov
gs
sahf
xlat
mov
and
dec
dec
xchg
insl
adc
cld
in
and
cmp
mov
cli
xchg
ds
sbb
adc
cmpl
lods
loopne
das
push
add
andb
add
mulb
mov
fs
test
jnp
scas
ljmp
sarb
addr16
inc
xor
cmp
out
dec
mov
aad
jmp
pop
les
je
mov
test
pop
mov
lret
mov
mov
pop
scas
cmp
jae
test
sub
cmpl
ret
jge
cwtl
mov
cld
cs
push
and
aaa
sbbb
sahf
jmp
enter
sub
mov
test
xorl
mov
fisubs
rorl
popa
jnp
dec
movsl
les
adcl
inc
push
jo
mov
push
inc
sub
xchg
jl
andl
sub
sar
cli
xorb
dec
popa
and
dec
in
test
and
jbe
cmc
jl
outsl
jo
ret
das
cld
imul
mov
in
or
mov
and
cltd
int3
arpl
aaa
sub
andb
ret
fistps
sarb
out
xlat
pop
inc
mov
cmp
pop
sbb
addr16
bound
mov
js
sub
mov
aas
pop
push
mov
les
inc
test
cltd
scas
sub
lret
jg
sbb
outsl
imul
xchg
arpl
jmp
push
jge
jb
pushf
sti
mov
lock
add
pusha
push
jle
shll
adc
dec
mov
jne
mov
sub
mov
adc
ljmp
xchg
pop
dec
pop
imul
or
aas
and
sti
sub
or
aad
mov
xlat
popl
push
out
fcoml
mov
push
movsb
xor
in
and
push
imul
push
jp
fldt
leave
cmpsb
ds
repz
negb
aas
dec
push
movsb
aad
pop
and
adc
jb
xor
and
jecxz
xor
int3
sti
xchg
add
mov
out
jo
cmp
test
dec
ja
test
stos
jecxz
aam
ss
daa
push
jmp
push
add
xchg
jb
dec
xchg
in
fisubrl
inc
xchg
lret
sarb
out
mov
stc
imul
xor
mov
cmp
inc
add
jo
fstp
jo
in
jnp
dec
scas
testl
inc
rorb
lcall
iret
ror
je
test
dec
into
adc
test
lret
inc
pop
pop
mov
cmpsb
xor
aas
mov
loope
loop
addr16
xchg
dec
or
cmpl
jge
sub
inc
scas
je
inc
xchg
ja
xchg
xchg
clc
cmp
sub
loope
mov
xchg
addb
les
cmp
in
jge
out
sub
jns
dec
jbe
mov
push
xchg
push
inc
in
sahf
int3
pushf
cmp
push
pushf
xchg
sub
mov
testb
sbb
push
adc
test
dec
pop
cmp
dec
lret
loop
test
mov
mov
xor
push
push
inc
arpl
add
push
push
aam
or
in
js
flds
cmpsl
push
inc
repnz
aad
mov
in
jg
leave
das
int
cmp
fmulp
enter
push
and
xor
shlb
repnz
arpl
loop
sub
int3
or
pop
cmp
mov
sbbl
call
imul
enter
test
add
sub
mov
in
pop
movl
fistpll
inc
cli
pop
fld
lahf
adc
ret
shll
aam
hlt
inc
adc
js
jecxz
mov
out
sub
mov
mov
cmpsb
or
and
sub
adc
xchg
lret
dec
jb
mov
test
xor
inc
pop
ds
or
adc
sub
shlb
and
aas
lret
mov
scas
arpl
xchg
pop
insl
add
xchg
mov
or
lds
test
ja
dec
addr16
jnp
xor
jne
adc
adc
andb
or
lcall
jge
sbbl
add
sbb
in
mov
mov
fimull
insb
mov
push
mov
sbb
jnp
jge
out
pop
mov
cmp
test
and
popa
push
add
subb
popl
fsubl
push
imul
outsl
pop
daa
stos
jp
ficoml
pop
bnd
lods
shlb
in
es
mov
inc
xor
test
inc
ss
aam
outsb
or
movsl
cmp
lret
cmp
lcall
and
inc
xlat
inc
fwait
pop
jb
les
lahf
dec
icebp
in
iret
cmp
repnz
jns
js
call
xchg
call
add
mov
or
add
cld
sub
mov
das
test
push
stos
insb
cs
jae
out
sub
pusha
cmpsl
dec
jbe
mov
and
xchg
repz
jbe
test
int
aaa
iret
sbb
out
xchg
or
divb
data16
jge
adc
aad
mov
ret
ja
sti
loop
mov
fwait
cs
add
jl
or
mov
dec
pcmpgtd
mov
aas
outsb
sub
dec
pop
mov
xchg
jmp
lods
mov
dec
das
and
cmp
loopne
xchg
jns
imul
test
bnd
jle
fsubrs
sbb
imul
jnp
xchg
pop
xchg
scas
aad
xchg
test
xor
mov
xor
mov
sub
adc
mov
jl
das
adc
dec
repnz
dec
rcll
xor
sbb
and
mov
inc
sbb
sub
je
and
ljmp
xchg
lods
gs
lret
lret
cwtl
mov
test
push
cmp
cmp
lret
pop
out
and
movsl
push
mov
mov
aas
mov
aaa
std
cmc
sbb
fcmovnb
rorb
xchg
pop
stos
dec
jmp
sub
es
cmp
xor
mov
aas
aad
xchg
popf
pop
inc
mov
sub
mov
push
mov
lods
xchg
loopne
je
call
dec
push
pop
dec
jecxz
aas
imul
scas
xchg
mov
repnz
aad
stos
pop
ds
fisubl
or
pushw
xchg
dec
movsb
push
dec
mov
pop
stos
sbb
ret
repz
pop
lcall
or
cmpsb
dec
test
dec
repz
test
pop
push
xor
lock
fimull
sub
sbb
sbb
fimull
pop
sub
mov
daa
lahf
sub
push
jp
movsl
mov
andb
xchg
cmpsl
sbb
fbld
mov
inc
je
js
aad
lds
stos
mov
lea
neg
fistpl
or
jmp
jns
fiaddl
mov
mov
push
fdivrl
ja
mov
pop
adc
test
add
mov
sub
fidivrs
mov
in
ds
and
in
jge
mov
imul
std
jno
cmp
dec
popa
stos
fs
notl
sti
add
sar
scas
adc
stos
mov
les
sarb
mov
xchg
adc
push
jle
xchg
imul
outsl
ret
add
xor
insl
inc
fstl
out
mov
dec
mov
xchg
cmpsb
sbb
jo
mov
out
xchg
lea
cld
jbe
xchg
popa
pop
pushfw
in
inc
inc
mov
outsl
subl
rclb
dec
repnz
cld
loop
notl
push
dec
cmp
cmp
xlat
js
pop
fistpl
ja
out
sbb
mov
mov
jecxz
in
out
call
inc
in
loop
gs
data16
jae
mov
pop
mov
sub
popa
xor
jp
movsb
movsb
fsubl
cmp
sbb
xor
dec
dec
fwait
mov
ds
xor
ret
jp
sti
push
inc
aam
cld
arpl
cmpsb
rcrl
hlt
fs
jle
imul
lock
xchg
or
dec
in
cli
cmp
xchg
lret
push
adc
push
imul
sbb
mov
add
stos
dec
arpl
xchg
lds
add
insb
das
das
shlb
xlat
dec
mov
testl
cmp
rcll
inc
adc
add
sub
into
jb
sbb
inc
push
sub
jle
aaa
hlt
ss
dec
dec
push
sub
shr
fwait
add
loope
push
mov
int
inc
push
negl
adc
sbb
jmp
push
jae
xor
inc
fldl
stos
ljmp
ja
jo
imul
lret
pushf
cmp
pop
cli
fimull
fldenv
mov
xchg
jo
pushf
adc
ror
adc
movsb
test
adc
inc
cwtd
xor
and
mov
mov
dec
lods
mov
lock
test
and
stos
adc
mov
inc
add
jne
or
dec
add
aam
in
and
and
mov
loop
repz
cs
test
pusha
addb
mov
jno
sbb
stos
dec
icebp
jl
jno
xor
push
adc
xlat
push
pop
mov
loope
mov
sbb
push
jmp
cld
push
std
sbb
jle
cld
dec
out
pushf
or
push
ljmp
mov
fwait
jns
inc
dec
inc
dec
add
test
jmp
or
ljmp
jo
push
inc
aam
lock
jp
push
mov
cmpsb
pop
cmp
pop
inc
mov
jns
aam
adc
out
lret
lret
iret
out
notb
add
movsb
mov
shll
add
and
int3
pop
xchg
sbb
mov
xchg
mov
adcb
add
add
aam
femms
shll
pop
adc
data16
ss
and
leave
pop
mov
push
out
enter
pop
sbb
xor
dec
movsb
mov
jl
jecxz
cmp
mov
js
aaa
sub
clc
mov
mov
push
pop
push
ret
mov
shrb
xchg
sbb
xchg
dec
mov
jp
push
outsb
imul
and
xchg
lea
pop
out
pop
push
or
bound
jbe
loope
lea
inc
mov
roll
add
pop
xchg
fiaddl
pop
cmp
decb
sub
lahf
hlt
in
stos
xchg
mov
lods
mov
pop
inc
test
jb
pop
lahf
mov
cmpsl
dec
pop
dec
arpl
xor
xchg
xchg
pop
mov
mov
push
hlt
shrl
jae
sbb
push
push
shll
inc
or
dec
jo
fldt
mov
mov
pop
ss
in
insl
xlat
jo
popa
test
xchg
insb
cltd
stc
jbe
and
mov
mov
pushf
jbe
mov
sub
xchg
call
jbe
push
mov
and
xor
jne
jbe
jg
dec
xchg
mov
mov
shlb
aad
pop
pusha
xor
into
in
scas
test
stos
les
rcr
mov
or
int3
and
dec
sbb
fwait
cmpsl
mov
pop
ror
jo
rolb
popa
lock
int3
addb
fnstsw
andl
add
cs
dec
inc
aas
push
jmp
test
inc
subb
mov
icebp
mov
cmp
jmp
mov
pop
fdivrl
or
dec
lcall
sbb
jno
sub
add
and
das
in
sbb
mov
inc
in
scas
inc
das
ret
xor
dec
mov
jnp
test
pop
push
jne
mov
and
int
pop
fdiv
cmpl
mov
clc
mov
pop
mov
xchg
sbb
jo
arpl
mov
and
aas
xchg
cmp
mov
gs
sarb
test
xchg
and
xchg
jb
pop
out
ja
lea
lcall
cwtl
push
xchg
adc
scas
leave
jbe
pop
loopne
adc
lcall
sbb
repnz
xor
xchg
dec
cli
pushf
call
push
lahf
ss
xchg
xor
xchg
add
out
adc
push
in
lcall
and
fwait
sbb
and
xchg
jle
jne
dec
mov
lods
ljmp
adc
cmpsl
inc
mov
dec
stos
insb
inc
call
mov
fnsetpm(287
mov
mov
lock
sbb
shr
imulb
cmp
aaa
push
imul
and
movsl
add
pop
mov
scas
add
call
int
sbb
stos
jbe
add
and
push
pop
inc
xor
fisubs
leave
and
aaa
stos
dec
decb
stos
test
pop
dec
sub
jb
add
lods
mov
adc
fnstsw
push
pop
lods
mov
xlat
shl
in
imul
mov
xchg
pop
test
pop
lock
sti
movsl
imul
es
jo
les
add
rorl
sbbl
insl
aam
and
ret
or
ret
arpl
scas
jb
pusha
cs
repnz
cli
test
dec
cmp
out
shrb
pusha
xor
pop
ret
fimull
test
das
mov
addb
decb
cmp
push
out
dec
pusha
cld
xchg
cltd
cmc
add
cld
outsl
in
xchg
aam
mov
mov
adc
insb
sub
lods
sbbb
sbbl
pop
icebp
insb
jle
ljmp
fadds
pop
or
pop
outsl
sbb
incb
mov
cmp
push
mov
scas
aaa
in
les
inc
mov
mov
outsb
push
add
sbb
xor
subl
mov
and
icebp
sahf
clc
jo
fadds
push
mov
orb
jae
cmpsb
ret
push
imul
adc
pop
addr16
push
insb
lahf
ja
push
test
popl
pop
and
mov
jg
mov
inc
push
insb
addr16
mov
test
push
fisttpl
ror
cmc
stc
sbb
mulb
and
bound
imul
jns
jno
or
inc
pop
adc
mov
add
xor
test
fadds
dec
and
push
jmp
inc
stos
xchg
sub
push
jmp
in
repz
dec
inc
leave
popf
jb
inc
adc
add
sbb
outsb
rcr
das
adcb
mov
jg
insl
loope
dec
adc
paddsb
inc
jmp
mov
mov
js
inc
lcall
seto
fs
and
or
jae
xchg
add
data16
mov
push
xchg
fisubs
daa
data16
test
mov
loope
xchg
popf
imul
dec
jb
mov
push
or
xor
cltd
pusha
fistl
jmp
xor
stos
cmp
xchg
sbb
dec
mov
pop
imul
push
fiadds
xor
es
rcll
mov
inc
mov
pop
ror
cmp
xchg
sub
xchg
lds
mov
fstpt
test
pop
out
mov
mov
roll
pop
jecxz
xor
pushf
scas
push
fcomps
and
ficoms
sbb
and
pop
fwait
xchg
add
hlt
cmpsb
xchg
arpl
xchg
stos
mov
loopne
and
cli
ds
arpl
jmp
addr16
test
ja
imul
repz
ret
roll
shlb
mov
sbb
inc
xchg
xchg
or
sbb
imul
pop
adc
inc
fiadds
mov
arpl
pop
loope
pop
addr16
pop
xchg
clc
sub
repz
movsl
mov
mov
add
sbb
cwtl
inc
add
int3
sub
lea
push
ficoml
add
inc
sub
scas
ds
scas
push
int
outsb
dec
fs
arpl
and
mov
arpl
out
jne
sbb
cltd
and
sahf
xor
mov
gs
push
imul
sub
rcrl
popf
mov
mov
push
pop
xor
movsl
shl
jbe
xchg
imul
loope
mov
stos
sti
jecxz
andl
test
xchg
jp
nop
inc
mov
inc
dec
je
shlb
lods
cmp
js
mov
js
fists
lret
jge
push
and
push
divl
xchg
push
mov
clc
xor
daa
adc
not
test
lods
in
rorl
negl
test
pop
lret
mov
das
stos
and
bound
push
sti
in
xor
xchg
add
cmp
inc
in
and
adc
test
xchg
mov
rcrl
ret
dec
pop
or
pop
out
xchg
sbb
js
mov
dec
repz
adc
aas
mov
or
pop
insb
imul
xchg
adc
push
or
inc
push
xchg
xchg
add
xor
sbb
xchg
int3
jl
jne
jl
insb
push
insb
sbb
rcr
repz
mov
in
and
roll
stos
cmp
hlt
inc
pushf
sub
dec
lret
subl
ret
sbb
and
arpl
in
outsl
inc
dec
iret
loope
mov
setno
xchg
cld
or
jmp
push
aaa
out
and
aad
dec
es
mov
adc
pop
dec
arpl
jns
mov
and
xchg
jne
clc
hlt
mov
subl
mov
adc
lods
push
fidivrl
outsb
cld
xor
lock
push
push
ljmp
jle
and
sbbb
lahf
movsb
mov
xor
loope
push
push
movsb
add
dec
rcl
cwtl
add
pop
ja
lea
xchg
pop
call
fwait
movl
jne
ss
lcall
mov
sbb
jno
xchg
add
loope
hlt
pop
repnz
mov
sbb
or
push
lahf
ss
xor
int3
and
mov
cmp
mov
inc
ret
pop
inc
std
push
imul
arpl
pusha
push
ficompl
das
sbbb
dec
adc
push
sarb
add
sub
xchg
mov
dec
and
stos
decb
mov
adc
or
push
mov
les
pop
push
mov
jno
xor
stos
adc
push
add
inc
data16
jns
jae
scas
sti
sbbl
nop
loope
imul
or
int3
jg
cmc
and
popa
push
adc
jno
jge
lea
jp
cmpsl
mov
loope
arpl
scas
shrb
jae
pop
fdiv
test
bound
mov
ja
lcall
xor
cmp
add
inc
fbstp
fstpt
pop
in
incb
lret
xchg
sbb
inc
mov
adcb
outsl
push
test
int3
or
into
cmp
movsb
pop
shlb
jbe
stc
in
add
sub
mov
sub
add
push
repnz
outsb
dec
lret
adc
and
inc
cwtl
mov
lcall
sub
movsl
push
jle
sub
cwtl
fisubl
andl
cmpsl
enter
add
imul
lcall
popa
shll
lret
out
arpl
add
pop
mov
loope
jmp
sub
bnd
and
bound
fbstp
stc
adc
xchg
mov
push
pop
add
pop
stos
inc
xchg
sub
sahf
cmp
jne
sub
pop
or
jg
xor
hlt
cmp
pop
xchg
notl
movsb
ret
lods
add
or
jbe
ds
pop
fildl
mov
mov
dec
mov
sub
mov
jb
fldl
sbb
push
jp
out
stos
inc
leave
xchg
jns
jg
sbb
xor
mov
test
mov
out
mov
and
addr16
jne
int
ds
add
xor
pop
dec
out
adc
pop
adc
xchg
mov
sahf
adc
inc
out
jge
ret
push
adcb
adc
jl
xor
stc
pop
push
out
pop
push
movsl
mov
dec
cwtl
sbb
mov
iret
data16
dec
fbstp
rcrl
ss
cmp
mov
fsubs
or
dec
mov
cmp
out
es
push
dec
aaa
into
inc
enter
aam
stos
imul
dec
dec
iret
jp
mov
insl
or
dec
mov
push
sub
mov
lret
cld
inc
fsubrp
pop
ds
cmp
pop
test
enter
push
ljmp
cmp
int3
push
pop
dec
leave
sbbb
ficompl
mov
push
sbb
mov
xor
jecxz
and
ja
in
pop
xchg
sub
dec
fildll
aad
dec
leave
clc
jge
in
push
pop
repz
ss
movsl
iret
cmp
mov
push
adc
pusha
mov
adc
push
into
ds
lds
mov
outsb
cmp
inc
mov
insl
pop
popa
insb
call
sub
jne
sub
ret
pop
lock
sti
mov
loopne
push
aam
jo
push
mov
mov
pop
mov
mov
fists
pop
popf
cltd
sbb
mov
cltd
loop
arpl
adc
andb
rol
std
inc
mov
and
pusha
cmp
pop
ss
xor
mov
fisubrl
cmp
xor
add
cmp
lock
adc
rol
daa
xchg
stos
sbb
divl
or
fwait
int
xchg
fcoml
mov
dec
cld
xor
fs
aad
int
js
sub
and
aas
loop
cwtl
jp
xchg
mov
jmpw
dec
ss
push
adc
xor
add
nop
enter
orl
das
cmpsl
mov
shlb
mul
aad
xchg
or
dec
adc
adc
mov
mov
ja
out
icebp
cmp
cmp
stos
inc
pop
pop
push
imul
out
sub
in
or
push
mov
mov
loop
fistps
ficompl
pop
ficompl
or
aas
adc
in
cmp
mov
xchg
add
out
fimuls
loopne
add
ja
outsb
jns
or
fcomps
repz
repz
dec
shll
mov
fwait
ds
ror
cmp
out
pop
aaa
mov
xor
mov
sub
adc
iret
mov
in
xor
stc
stos
pop
int
js
cmp
lock
scas
inc
xchg
xchg
sub
mov
sbb
filds
lret
aad
dec
jp
jg
push
cld
cmp
lcall
sbb
cmp
loop
cld
mov
loopne
into
iret
push
pop
xor
arpl
pop
push
mov
rcr
in
lahf
pop
js
test
in
test
shlb
rcl
xor
xlat
mov
rcr
mov
pusha
popf
cmp
mov
xchg
int
push
fildll
ss
mov
int
jnp
mov
int3
xor
daa
or
mov
test
cwtl
sahf
sub
pop
or
stc
ss
sbb
dec
jb
mov
ficompl
jle
cs
add
sti
bound
or
mov
stos
shlb
loope
jg
out
inc
jl
ss
lods
xchg
push
mov
daa
dec
pop
mov
jmp
mov
mov
sbb
pop
sti
or
mov
pop
push
and
cmpsl
out
insl
pop
dec
xor
sbb
cmp
in
inc
hlt
sub
inc
pop
das
add
rcrl
arpl
mov
adc
adc
les
mov
insl
add
xorl
mulb
push
sbb
cwtl
fldl
mov
mov
int3
insl
inc
xchg
enter
insl
jp
test
ja
add
scas
lock
das
mov
fildll
mov
inc
std
and
cld
xchg
push
divb
and
sbb
iret
mov
pushf
rcl
or
cmpsl
sbbb
in
lock
mov
fwait
sbb
mov
and
dec
mov
popf
loope
pop
mov
test
aaa
add
and
not
int3
push
addr16
dec
lcall
dec
mov
add
nop
mov
mov
loopne
and
inc
cs
mov
stos
flds
jg
aam
sbb
push
push
and
rcl
push
push
mov
add
xchg
cmp
xlat
iret
mov
jnp
inc
cld
mov
les
andb
pushf
into
mov
sbb
mov
and
pop
jnp
into
mov
mov
push
lret
cltd
or
or
pop
mov
xchg
pop
sub
mov
aaa
daa
mov
popf
add
jnp
xor
mov
test
inc
in
sbb
dec
pusha
add
fldz
rorb
jno
or
or
rcrb
fdivr
mov
ret
test
test
sbb
cmp
xchg
pop
mov
mov
int3
lret
test
inc
mov
test
sbb
inc
dec
xor
jp
jnp
dec
adc
push
in
push
push
pop
or
cmpsb
sub
mov
xor
lds
stos
aas
inc
ret
and
push
repz
sub
repnz
rorl
add
jnp
push
mov
add
in
adc
pushf
xchg
pop
jecxz
loope
pop
pushf
mov
pop
ljmp
in
mov
xlat
inc
rorl
fstp
mov
ret
mov
pop
ret
cltd
sbb
cmp
inc
inc
stc
xchg
sti
dec
sub
jle
xchg
call
cmp
sub
sbb
es
jmp
or
call
add
add
add
and
pop
xor
add
stos
push
sbbl
outsb
test
repnz
adc
fadds
adcb
loope
int
push
sahf
testl
xchg
jl
cmc
pop
pop
outsb
sbbl
test
lods
push
sbb
cld
dec
daa
xor
nop
aaa
pop
mov
andl
jbe
jecxz
iret
xchg
adc
in
icebp
inc
xchg
cmc
in
out
lret
lds
mov
nop
les
divb
data16
popf
jae
inc
dec
fdivl
fsubr
scas
sub
pop
jecxz
int3
sbb
dec
fcmovnu
push
aam
cs
pop
pusha
push
sahf
and
arpl
clc
mov
jbe
and
cmp
lret
push
sbb
and
jno
sbbb
jbe
das
mov
iret
mov
lods
mov
lret
xlat
inc
imull
das
push
pusha
add
call
pop
iret
push
adc
fdivl
cmp
or
ficoms
in
xchg
push
scas
leave
movsl
pop
outsb
mov
sub
jae
cmp
inc
sbb
add
loop
or
mov
mov
and
jmp
pop
mov
dec
mov
mov
sub
pop
jge
fdivr
jl
jmp
into
jge
andb
lcall
lcall
jl
push
outsb
push
mul
push
mov
js
ret
insb
arpl
mov
inc
or
cwtl
aaa
dec
xchg
scas
test
popa
call
add
pop
fsubl
pop
testb
pushf
mov
push
fcmovnb
mov
mov
loop
subb
test
clc
testl
mov
pop
mov
xlat
std
mov
jg
ss
das
pop
push
pop
pop
movsl
cmp
insb
mov
push
or
cmpsl
test
enter
fucomi
or
and
push
test
lea
xchg
mov
rcrl
xor
cmp
sbb
cmp
dec
js
and
jmp
lds
mov
sbb
andb
cltd
arpl
mov
mov
sub
sbb
inc
nop
sub
mov
mov
add
mov
xor
inc
int3
mov
pusha
xchg
sbb
lret
loopne
sub
jne
or
pop
adc
and
fstpt
cwtl
mov
xor
imulb
popl
jg
fiaddl
pop
adc
sahf
inc
outsb
cmp
jnp
lcall
in
in
subl
jge
mov
push
sbb
mov
out
test
lret
lret
inc
push
inc
lods
mov
testb
aam
jp
mov
mov
jecxz
addr16
xchg
imul
lods
pop
push
or
scas
pop
push
out
xor
cmp
jle
add
cmp
in
sbbb
jns
aam
push
cltd
pop
jle
mov
pop
mov
push
cmpsb
orl
dec
sub
popf
pop
scas
push
or
dec
jnp
adc
dec
xchg
dec
xlat
not
push
mov
push
or
sub
pop
xchg
fs
jo
mov
andb
outsl
fsubrs
out
push
lock
testb
pop
adc
ja
in
aaa
push
test
sbb
jae
into
pop
pop
adc
jecxz
fwait
lods
test
mov
push
pop
loop
dec
lods
ret
scas
out
add
jb
sbb
test
or
rcrl
mov
or
js
or
push
aam
cmpsb
mov
out
aaa
sarl
xchg
int3
mov
lret
mov
dec
push
pop
lret
popa
dec
pop
movsl
push
xor
xchg
xchg
xor
sbb
jl
add
stc
xor
add
fs
popf
daa
lods
subl
adc
aad
lahf
mov
mov
shl
pop
js
cmp
test
sub
stc
push
mov
push
mov
out
and
push
pop
mov
jnp
sub
pop
mov
mov
hlt
pop
adc
pusha
ret
sti
push
ret
sbb
push
repnz
in
adc
mov
mov
popa
pop
xchg
xorl
add
adc
xor
adc
scas
inc
xor
mov
inc
in
mov
xchg
xchg
push
adc
cmp
test
push
in
das
test
mov
push
in
mov
addr16
jp
mov
add
aaa
pop
sub
push
data16
push
fsubl
xchg
inc
xchg
cmp
mov
hlt
push
rcll
lds
subl
int
insl
pop
adc
adc
inc
push
xchg
xchg
out
pop
xchg
mov
mov
stos
fsubr
push
cld
mov
mov
scas
rclb
into
xor
push
push
call
loop
repnz
inc
fs
fsts
ds
or
popa
xchg
mov
addr16
pusha
mull
testb
cmp
mov
loopne
mull
sbb
sbb
add
jp
sub
sub
mov
test
lret
cmp
sahf
xor
mov
add
std
xchg
pusha
daa
lods
mov
pop
es
cmp
add
scas
lock
arpl
aam
mov
pop
outsl
daa
jns
cmp
adc
and
push
mov
aas
xlat
aam
adcl
andb
popa
outsl
mov
int3
imul
sbb
lea
sbb
std
fs
and
out
popa
xor
jae
andl
sbb
lds
arpl
push
push
xor
dec
in
dec
jns
insb
xor
fldcw
lea
dec
mov
xchg
xchg
or
sub
mov
push
jae
mov
imul
jle
or
in
call
lds
jecxz
lea
add
notb
cltd
sbb
fucom
add
dec
dec
mov
leave
ret
nop
add
add
dec
or
pushf
out
sarb
inc
lds
jno
in
mov
daa
dec
fcmove
loope
pop
cmp
orl
mov
or
ljmp
scas
js
inc
sahf
pop
jne
out
sahf
mov
data16
xchg
test
mov
in
outsb
aaa
mov
ds
sub
lea
dec
xor
cmpsl
aaa
fcomps
orl
pop
lahf
mov
mov
cmp
mov
jecxz
cld
inc
ret
bound
add
mov
pusha
ja
cmpsb
pusha
mov
sbb
push
jge
rcrl
movsb
fmull
jns
mov
sbb
jbe
ljmp
adc
into
imul
mov
jbe
iret
push
mov
inc
out
xor
xor
mov
ja
xor
aaa
lret
push
adc
push
adc
and
shll
mov
mov
inc
out
sub
aad
in
mov
mov
push
mov
mov
sbb
sti
sahf
aad
call
add
in
in
mov
pop
rcrb
clc
in
call
jle
das
inc
jle
mov
lock
mov
fdivp
cmp
imul
jl
xchg
pop
or
shll
nop
popa
xlat
adc
mov
pop
jecxz
sbb
add
std
fwait
dec
lods
push
addr16
xor
das
leave
or
out
xchg
adc
ljmp
nop
dec
mov
mov
xor
jbe
push
cwtl
inc
ret
xor
add
in
jne
add
xor
and
clc
adc
pushf
xor
jl
ds
xor
stc
test
fidivrl
mov
xrelease
mov
addr16
mov
cwtl
adc
jae
sets
mov
xor
xchg
std
fistpll
adc
pop
popf
subl
dec
imul
in
pop
and
sub
imul
es
into
dec
sahf
pusha
push
inc
mov
mov
cmp
xchg
sub
and
mov
dec
push
fsubl
inc
mov
repnz
cmpsb
push
jne
ds
decl
test
xor
mov
or
mov
inc
push
enter
inc
clc
ret
cmovns
jle
aam
es
pop
out
adc
inc
stos
ds
fstpt
repz
test
lcall
cld
rolb
cmpsb
sbb
cmp
fdiv
xor
adc
or
jmp
insb
rcl
sub
movsb
pop
sub
pop
and
repz
cmpsl
stc
inc
dec
mov
inc
jl
outsb
mov
imul
in
out
jns
sub
inc
cmc
notl
in
xlat
in
ret
xor
mov
xchg
in
jmp
enter
mov
aaa
sub
ret
aad
sbbb
pop
xor
inc
loopne
mov
repz
jnp
mov
out
repnz
or
push
and
loope
pop
cmp
fcom
test
cli
inc
jae
jmp
fnsave
lods
xchg
imul
inc
incb
leave
add
cltd
mov
outsl
in
push
mov
cli
jg
lds
andb
cmpsb
test
sbb
push
fwait
imul
push
outsl
lods
lea
or
stos
dec
hlt
jmp
jp
xchg
adc
add
shlb
pop
addr16
pop
imul
mov
ja
sub
add
pop
mov
sarl
add
orl
call
mov
fcmovbe
pop
push
into
or
out
sub
pop
mov
mull
push
icebp
sub
mov
fstps
mov
push
jne
les
dec
lds
dec
or
xchg
sub
mov
enter
or
cltd
inc
sbb
fdiv
inc
jns
mov
jae
xor
repnz
sbb
leave
cwtl
out
lret
sahf
dec
jo
sbb
mov
movsl
inc
fs
ds
xchg
cli
push
adc
das
cmp
lret
mov
fldl
pop
cmp
xchg
xchg
cmpsl
enter
rcr
out
test
hlt
dec
xchg
and
and
ljmp
cmp
cmp
jmp
and
nop
adc
inc
cmp
add
mov
jecxz
cmp
xchg
mov
jnp
pop
or
mov
andb
or
xlat
fadds
jp
inc
dec
push
and
push
sbb
imul
cmpsl
push
mov
lret
xor
sbb
out
lods
adc
daa
mov
push
push
or
adc
mov
lock
xor
popl
xchg
jge
dec
dec
push
cmp
adc
test
jle
sti
jl
dec
stos
out
popf
xchg
and
pushf
pop
or
js
les
aas
loop
jp
cmp
add
das
push
lds
pop
jae
or
call
inc
cmpsb
and
in
je
push
cmp
nop
add
dec
adc
adc
test
cld
push
pop
xchg
add
dec
hlt
xchg
movsb
push
and
sub
lods
mov
lahf
mov
add
pop
hlt
fisubs
sub
hlt
test
jg
add
pop
mov
jmp
sub
xlat
pop
cmc
or
add
sub
push
jp
call
std
push
sahf
fdiv
ja
fistpl
int3
cmp
inc
push
lods
inc
xchg
cmp
and
push
in
xchg
outsl
fucomp
ljmp
sbb
or
jmp
sub
ss
mov
insl
jl
and
lock
addr16
sub
and
outsl
jns
sub
jnp
jmp
cmc
dec
push
cmp
fistps
fisubs
aad
fwait
cmp
pushf
or
mov
sub
cmp
sbb
sub
mov
dec
movsl
sub
arpl
jp
in
dec
rcrb
xor
aad
cmp
dec
out
insb
int3
ds
or
mov
ljmp
popf
js
data16
cmc
jecxz
mov
outsb
aam
insl
rcrl
mov
mov
in
aam
cltd
test
stos
mov
sub
inc
xchg
and
dec
push
xchg
cmp
xor
movsl
inc
sti
lahf
ret
pop
adc
das
pop
sub
sub
cmp
dec
insl
or
dec
in
fmulp
leave
push
ja
push
pop
int
inc
ljmp
dec
adc
mov
adc
aas
cbtw
popa
in
xchg
stc
imul
and
lcall
and
pop
lods
sarb
xchg
pop
xchg
sub
mov
ret
test
das
das
out
xlat
ds
dec
pop
add
aam
shlb
mov
mov
sbb
or
inc
inc
in
dec
sub
jle
into
enter
pop
stos
xchg
mov
push
xchg
test
sbb
cmp
inc
lahf
mov
outsb
mov
ss
jg
or
mov
fstp
rcl
ja
call
jg
fistpll
or
idivl
dec
pop
xchg
nop
daa
jnp
inc
std
fs
and
xchg
pop
push
inc
leave
xor
mov
test
lods
in
stos
enter
outsb
insb
fdivrl
lds
loop
je
xchg
add
stos
aad
sbb
arpl
cmp
stos
ds
sub
dec
pop
mov
xchg
and
cltd
xor
cmp
dec
mov
int3
add
ja
cwtl
sbb
daa
inc
lea
out
cmpsl
sub
mov
mov
lcall
mov
ljmp
dec
cli
xchg
icebp
inc
std
aam
adc
jg
lea
in
shl
add
mov
jae
cmp
xor
jnp
and
loopne
sub
clc
dec
test
pop
mov
xorb
sbb
scas
int
jg
jb
mov
insl
sbb
mov
xor
mov
push
pop
cmp
sti
mov
dec
or
cmp
push
fwait
ror
loop
push
dec
pop
mov
imull
jle
sub
movsl
pop
lock
xor
dec
add
fstl
and
ja
shrl
ret
ret
lea
xor
or
pop
idiv
xchg
sbb
sbb
sahf
pop
scas
emms
jg
push
aas
int3
lret
test
stos
leave
xchg
or
outsb
jae
pushf
std
insl
mulb
push
je
pop
mov
in
test
mov
push
arpl
push
pop
test
icebp
movsl
mov
cmp
test
loop
adc
movsb
cmp
push
aas
adc
xchg
or
ds
xchg
mov
inc
es
dec
and
pop
lods
daa
outsl
fists
loope
outsb
cmp
test
cmp
pop
pop
jb
loop
fwait
pop
out
adc
sub
cmc
mov
fwait
aad
adc
or
call
lea
jl
jl
leave
loopne
push
push
cvtps2pd
mov
vpermi2q
pop
cmp
dec
orl
stc
aam
pop
mov
insl
inc
fimull
lret
cld
rcrl
aam
movsl
lds
imulb
push
lret
lds
cmc
mov
outsl
test
clc
dec
mov
in
scas
add
fisubs
imul
cmp
fstpt
push
cmp
lcall
xor
fs
sub
stc
inc
cmpsl
addr16
lods
roll
or
mov
mov
imull
daa
arpl
dec
outsb
popf
inc
dec
iret
xchg
in
fcompl
xlat
sbbl
push
cmp
jns
mov
xchg
cli
xchg
sub
arpl
pusha
jb
std
xchg
cld
push
pop
ret
mov
paddsw
fisubrl
add
rolb
jl
add
sub
jecxz
scas
mov
inc
popa
push
ficompl
mov
rorb
sti
mov
sbb
adc
addl
testl
or
lods
pop
add
fmuls
ja
mov
mov
jae
call
mov
cwtl
subb
push
lea
cmp
push
push
add
sbb
dec
xor
and
mov
imul
into
int3
add
mulb
cld
add
or
mov
mov
adc
rol
out
lcall
cmpsl
push
in
sbb
xor
inc
sbb
andl
rcrl
pop
shll
mov
orl
and
jl
stos
or
cld
mov
sti
push
add
xor
jbe
scas
fisttps
sahf
stos
lret
adc
push
test
ja
inc
jmp
inc
mov
jle
adc
sbb
mov
call
ljmp
mov
xchg
in
int3
add
or
cmpb
out
enter
bound
aam
stc
popf
xor
xchg
xchg
add
jo
inc
pop
push
pushf
clc
fdivrs
xor
jecxz
bound
push
call
cmp
lret
in
pop
cmp
repz
enter
mov
inc
jns
mov
or
das
aas
test
push
sub
insb
cmp
mov
jnp
test
imul
jo
xor
mov
dec
outsb
test
fisttpll
aaa
mov
pushf
sbb
lcall
fsubrs
loopne
popa
clc
repz
pop
clc
shll
fcoms
xor
and
or
movsl
mov
ds
call
and
popf
push
jmp
mov
and
mov
push
push
std
xchg
jb
xchg
flds
std
and
add
inc
idiv
je
and
inc
or
mov
stos
repz
pop
test
lret
push
and
dec
xchg
idivl
andl
pop
adc
and
push
aaa
mov
aas
imul
and
lea
or
mov
fbstp
fcoml
xor
add
add
lds
mov
js
les
int3
mov
push
dec
aaa
stc
push
mov
in
or
inc
rol
ficomps
dec
cmp
pop
mov
clc
mov
xchg
fdivrl
mov
xchg
jnp
lahf
nop
aam
sbb
sbb
push
inc
pusha
mov
arpl
adc
shrb
and
je
mov
aad
jb
subl
mov
or
mov
mov
idivl
lods
jne
and
mov
fwait
cmc
jge
cmp
pop
pop
xchg
fdivs
push
and
xor
lea
movsb
pop
push
fstpl
xchg
mov
lret
add
sbb
sarl
mov
stos
loopne
test
int
pop
or
pop
movsb
inc
imul
mov
ret
xchg
push
jno
or
xchg
aaa
mov
aas
pop
mov
add
fdivl
xor
push
out
pop
jp
rolb
repz
dec
lods
inc
lahf
push
aas
xor
rorl
cmp
xchg
mov
gs
addr16
add
es
sub
xor
xchg
mov
mov
xchg
daa
aas
push
xor
daa
pushf
stos
mov
push
inc
lahf
lock
pop
cmpsb
cmp
imul
jecxz
push
mov
or
popa
imul
pop
out
lods
cld
stos
sahf
push
and
mov
mov
sahf
xor
push
jecxz
xchg
xchg
stos
push
add
shrb
and
sub
inc
lahf
popa
or
mov
inc
cmp
pop
mov
iret
nop
imul
ss
into
gs
jbe
nop
xchg
leave
mov
fucomi
mov
mov
sbb
and
cmp
cld
mov
inc
adc
inc
inc
popa
fnstenv
je
sti
rcrb
lret
mov
idiv
andl
aam
push
push
adc
cmp
push
add
fildl
jns
leave
push
in
mov
or
out
pop
mov
mov
push
fstpt
adc
das
sub
test
adc
pop
insl
xchg
add
mov
jge
mov
lods
push
bound
and
lret
es
mov
inc
mov
out
jecxz
and
xor
std
dec
mov
dec
ss
cmp
push
test
repnz
ffree
add
in
inc
ds
dec
fists
mov
jmp
and
addr16
pop
adcl
shrl
inc
test
fnstcw
cmc
enter
adc
lds
cs
outsl
rol
sbb
push
add
xor
push
imul
sbb
loopne
cmp
xchg
sahf
mov
mov
shlb
xor
aaa
out
adc
or
add
mov
mov
lea
pop
mov
subl
mov
and
sbb
and
imul
xchg
push
fnstsw
add
ret
movsb
in
call
sub
lret
lea
icebp
sub
inc
dec
and
dec
gs
idiv
jb
lahf
sbb
rcrl
add
dec
xchg
inc
mov
loopne
rorb
sub
xor
ds
adcb
stc
xchg
pop
inc
les
pop
fisubl
dec
mov
xchg
jp
add
xor
cltd
scas
or
fidivrs
and
pusha
mov
cmpsl
cld
xchg
pop
movsb
lret
pop
stos
dec
sub
jecxz
mov
sbb
decb
int
mov
pop
push
pop
daa
lods
ljmp
pop
cmpsb
jecxz
xchg
jbe
add
inc
aaa
dec
or
jmp
fwait
les
inc
fildll
mov
mov
cmp
in
adc
lret
cmp
fbld
jne
cmp
in
test
std
sub
cwtl
enter
test
mov
sub
lea
xchg
lcall
inc
xor
mov
movb
ss
adc
data16
xchg
js
mov
and
mov
jg
les
aam
rorl
scas
fwait
inc
jns
cwtl
mov
test
cli
popf
popa
pop
bound
bound
inc
dec
orl
or
adc
out
inc
scas
push
inc
mov
pop
or
outsl
mov
int
dec
fucom
outsl
aas
or
jbe
mov
pop
ss
push
jl
pop
mov
cltd
sbb
roll
cld
loop
call
jge
inc
stos
jecxz
rcrl
and
cltd
jo
pop
sti
enter
sbb
lds
es
repnz
lcall
mov
push
or
jb
cmp
ficompl
sub
add
nop
enter
daa
mov
test
dec
pusha
inc
mov
aaa
and
repnz
je
add
pop
hlt
adc
mov
pop
mov
xor
test
jmp
out
jns
cmp
dec
insb
lock
addl
fildll
enter
lret
aas
aam
shll
add
mov
xchg
xchg
outsb
rclb
jge
leave
pusha
fwait
sahf
or
push
jb
mov
cmp
test
xorl
mov
aad
dec
and
mov
mov
adc
add
pop
icebp
push
test
js
mov
ds
adc
sbb
add
es
jb
adc
fstl
jns
pop
jbe
cmpsl
xor
and
out
rcrb
addr16
bound
test
mov
enter
inc
pop
xchg
pop
jno
inc
mov
mov
and
scas
xchg
lret
lret
xlat
push
mov
mov
nop
push
sub
out
icebp
mov
jbe
aam
mov
dec
stos
fsubrs
outsl
pop
lret
xor
cltd
inc
stos
mov
ret
sub
sbb
scas
lahf
adcb
cmc
sub
mov
sbb
loope
inc
es
xchg
sahf
leave
mov
movsb
jmp
sti
xor
add
andb
or
jb
mov
cwtl
cmp
jo
pop
lcall
cmp
jb
mov
jle
icebp
inc
cmpsl
dec
push
lcall
add
adc
jmp
and
cmpsb
sti
dec
sbb
shrb
sarb
out
adc
or
test
fdivrs
cmpsl
ret
sbb
xor
jae
xchg
xchg
fcmovu
push
dec
mov
mov
xor
fwait
je
pusha
cmp
mov
fisubl
push
fiaddl
jns
sub
loope
insb
adc
xrelease
jle
fldt
adc
jg
fs
imul
loopne
lret
bound
addb
outsb
les
incb
pop
icebp
cmp
js
addb
inc
mov
dec
xchg
pop
mov
pop
or
push
mov
jmp
adc
int3
lods
jo
cmpsl
mov
xchg
imulb
in
stos
std
ret
xor
fmull
push
lods
pop
sbb
sub
xchg
sbb
jg
cwtl
sub
add
jne
or
sub
scas
jno
jno
imul
or
pop
addr16
jae
or
shld
push
jmp
stc
sbb
stos
cmp
or
or
mov
test
cmp
push
insl
pop
pop
jno
or
push
cmp
stc
or
fadd
xchg
or
xchg
cmpsl
in
xchg
ficomps
sbb
out
xor
aas
dec
test
and
mov
xor
pop
mov
in
dec
fabs
cmpb
out
mov
push
mov
arpl
push
fs
js
test
iret
fwait
out
add
jb
push
repnz
lret
add
imul
mov
int
xchg
stc
pop
cmp
xchg
daa
push
mov
in
mov
xlat
gs
lret
dec
inc
outsb
frstor
pop
and
and
mov
xchg
lea
movb
idiv
jecxz
shl
lret
mov
ljmp
pop
mov
push
push
and
iret
push
addl
or
ffree
stc
hlt
shrb
cmpsl
push
add
test
fcmovnu
int
test
push
mov
jmp
in
imul
subb
add
pop
arpl
pop
jl
push
in
add
push
imul
xchg
loop
lods
mov
pusha
dec
lock
clc
andl
dec
lcall
xchg
mov
xlat
fstl
dec
pop
jge
push
pusha
pop
mov
dec
mov
mov
cli
bound
outsl
add
jbe
clc
stos
push
sbb
rcrl
aad
cmp
popf
push
cmp
lds
dec
add
ds
fsubrl
ja
lods
dec
sbb
sar
xchg
fdivrs
pop
ds
jg
xlat
push
insl
test
pop
sahf
pop
and
in
sarb
mov
incl
mov
adc
mov
mov
inc
in
clc
xor
pop
inc
fucomp
ss
xor
test
cmp
push
push
cs
fbld
fadds
mov
dec
mov
es
pusha
stos
inc
lods
sub
dec
test
mov
in
mov
mov
pop
je
push
xor
inc
pop
mov
scas
pop
fwait
sbb
cmpsb
cltd
test
shlb
ret
pop
adc
dec
pop
movsb
jns
fs
fwait
adc
jmp
xchg
sbb
leave
add
imul
push
jp
jl
xchg
sub
repz
outsl
aad
or
movsl
data16
lods
cmp
pushf
or
inc
add
fmull
lods
jl
ds
bnd
sub
or
insb
sub
test
adc
xor
add
daa
inc
push
pop
xchg
mov
push
test
aaa
pop
pop
add
sbb
out
pusha
out
adc
es
jmp
cmpb
lods
clc
dec
test
or
xor
lret
mov
push
jo
cld
into
xor
lods
ljmp
call
and
jp
dec
dec
jecxz
jae
lcall
xor
imulb
push
xchg
pushf
pop
xlat
xchg
inc
inc
jo
or
or
fistl
daa
daa
iret
aaa
out
mov
scas
inc
jb
or
insb
pop
push
mov
mov
test
mov
pushf
std
mov
pushf
xor
scas
imul
sbb
cmp
dec
inc
pop
test
sbbl
ret
mov
jb
and
sbb
xor
sbb
les
or
ds
lods
inc
mov
outsl
mov
mov
jecxz
mov
mov
jb
iret
xchg
jmp
or
sbb
mull
insl
addb
cmc
movsl
mov
or
iret
loope
les
xor
jmp
lahf
ss
jo
fsubrs
mov
adc
jmp
pop
cltd
sahf
sbbl
xchg
repnz
mov
int3
mov
push
popa
mul
fmulp
repnz
mov
pusha
or
inc
out
popf
jb
adc
fs
jl
adc
sub
fdiv
cld
jecxz
and
movsl
xor
mov
cs
out
mov
das
inc
sbbb
es
cli
jge
repnz
ficoms
nop
mov
addr16
inc
pushf
ljmp
pusha
cltd
mov
and
add
fcomps
inc
push
cmpsb
les
dec
push
mov
dec
pop
jb
pop
scas
pop
xchg
xor
mov
stc
mov
lahf
mov
in
rcl
repnz
mov
adc
mov
mov
shrl
pop
rcl
in
cli
inc
and
mov
mov
mov
in
aas
ljmp
cmp
in
stc
pop
push
out
ja
std
mov
push
pop
and
mov
dec
dec
inc
add
dec
push
fwait
jno
pop
mov
jb
and
add
stos
rcrb
jne
lods
or
adcl
xchg
shlb
mov
or
shrb
add
mov
mov
and
insb
ljmp
decb
insl
adcb
inc
pop
mov
div
aaa
into
and
push
push
inc
sti
xchg
jb
sbbl
push
push
lahf
test
mov
xor
sti
pop
sbb
xchg
jg
mov
ds
cmc
xchg
xchg
addr16
rcrl
pushf
xor
xchg
mov
and
mov
mov
mov
insl
mov
pusha
sub
pop
mov
sbb
cmpsb
push
rcr
add
cmpsb
xchg
and
mov
pop
frstor
mov
arpl
lret
lds
mov
cs
sbb
cmpsl
mov
sarb
cmp
leave
in
cmc
adc
aaa
in
add
sti
push
out
adc
ja
fcoml
and
inc
jb
loope
mov
enter
mov
movsl
call
and
pushf
repz
fimuls
sbb
fcomps
mov
jl
ret
cmp
mov
mov
mov
jno
insl
sub
int3
arpl
mov
jmp
mov
jecxz
and
push
sti
imul
push
aas
xchg
fstpt
rorb
data16
and
push
sub
stc
inc
sub
mov
arpl
cmpsl
in
push
lods
ljmp
pushf
mov
mov
andl
push
mov
fadd
cwtl
sub
dec
mov
mov
push
insl
clc
pop
inc
pop
adc
clc
mov
shl
pop
xor
adc
inc
add
ret
dec
mov
push
mov
scas
ror
pusha
ss
jg
mov
inc
mul
push
pop
loope
push
pushf
push
mov
push
push
mov
pop
inc
sti
push
pushf
outsl
jge
pushf
stc
int
cmpl
int
sub
dec
xchg
xor
popf
mov
aad
inc
xlat
inc
not
out
jb
shlb
cmp
cli
push
lret
cs
or
adc
cwtl
mov
jbe
pushl
lahf
add
mov
pushf
mov
mov
lret
xlat
outsb
sar
pop
or
insb
std
andb
imul
push
cmpsb
pop
mov
jp
jmp
jle
scas
js
sub
cli
sbb
je
push
and
fdivl
pop
sbb
ljmp
mov
vandnps
xchg
jg
xlat
mov
xor
inc
xlat
adc
sahf
in
pop
xor
push
es
into
push
inc
imul
pop
imul
xchg
adc
inc
mov
arpl
xchg
mov
or
fs
xchg
or
mov
cmpsl
or
push
add
stos
fistpll
push
sub
adc
mov
adcl
mov
out
sub
mov
shlb
movb
add
ret
daa
divw
add
jmp
fcmovb
fistpl
mov
iret
pop
pop
ljmp
dec
leave
push
jge
leave
push
cmp
fisubrs
mov
aas
outsb
push
fs
loope
daa
mov
test
fs
dec
adc
xlat
fmulp
arpl
and
out
push
sub
lods
xchg
cmp
clc
xor
push
aas
dec
sbb
aad
ljmp
int3
mov
out
pop
cmc
adc
arpl
xchg
xchg
scas
add
test
sub
pushl
lret
jp
xchg
sub
fistl
test
ret
dec
sti
in
cmp
sbb
aas
mov
movsl
es
xlat
sbbb
xchg
xor
lahf
and
xchg
lret
adc
jbe
into
jno
dec
es
shlb
mov
inc
adc
mov
mov
into
pop
sbb
pop
mov
fsubrp
push
xor
mov
jp
iret
lods
jp
das
inc
aam
jbe
jo
hlt
xchg
movsl
test
std
loope
aaa
push
out
pop
aam
rcl
xchg
jmp
test
outsb
mov
int3
test
outsb
xchg
jae
pop
daa
cmp
mov
adc
shr
mov
inc
popa
mov
lods
fistl
or
cmpsl
sub
icebp
jne
rcrb
jmp
or
jno
sub
scas
loop
scas
adc
and
push
xor
in
notb
cmc
packsswb
test
jns
lret
sarb
out
mov
sbb
lahf
repnz
incb
outsl
push
xchg
pop
sub
pop
mov
dec
mov
inc
subb
cmp
mov
sub
jbe
jno
push
popf
mov
xchg
fs
push
scas
sub
das
fmull
fnstsw
loop
lcall
and
or
inc
cmp
jp
xchg
mov
xor
mov
test
fldt
lret
adc
and
imul
add
sbb
or
daa
sub
jmp
call
or
sbb
outsb
add
in
lret
cmp
or
dec
ret
push
adc
mov
lcall
add
add
adc
sub
orl
push
lods
lahf
imul
mov
pop
loop
cmp
adc
add
das
jbe
call
mov
or
aam
ja
adc
jmp
shll
sbb
test
scas
pop
xor
sub
loope
xchg
ret
fstl
add
test
inc
xchg
pop
movsl
sbb
push
sbb
in
sbb
xor
add
mov
pop
push
adc
imul
cs
fcmovb
pop
call
xor
rol
dec
cli
cmp
mov
mov
shlb
mov
cmp
std
mov
push
xchg
lea
lock
sti
shrb
jecxz
in
aam
cmp
mov
es
mov
shll
adc
stos
push
inc
mov
xor
jno
cwtl
bound
jno
outsb
pop
pop
lcall
sub
push
cmp
sub
mov
dec
or
pusha
orb
jbe
or
mov
mov
imul
aas
imul
mov
imul
xchg
xchg
mov
dec
movsl
scas
dec
seta
aam
popl
pushf
xchg
mov
lock
scas
in
mov
lods
jmp
out
aas
xor
add
pop
xor
and
xor
rcll
or
lahf
push
jl
dec
sub
fwait
test
rorb
pusha
ja
arpl
scas
xor
cmp
mov
xchg
lea
push
shll
insb
scas
sbb
sub
in
iret
ret
cld
mov
xor
pop
out
sbb
adc
ljmp
cmovo
inc
push
and
mov
cmpsb
dec
fwait
mov
cmp
and
cmp
fisubrs
dec
icebp
js
inc
jmp
arpl
mov
fwait
cli
in
jmp
push
cltd
scas
jge
ja
cltd
out
jle
push
pop
pop
cwtl
xchg
sbb
fistpl
sub
test
fistpl
or
aas
mov
leave
lahf
les
mov
das
cld
pop
xlat
inc
sbb
jnp
mov
xor
mov
je
out
cmp
jmp
out
mov
dec
ljmp
call
jg
xchg
sub
xor
dec
pop
data16
sbbl
push
mov
popa
fsubr
repz
stos
push
mov
dec
xlat
ljmp
js
sbb
xor
ljmp
mov
lock
jl
jns
mov
mov
data16
cmc
cmpsl
xchg
and
ss
in
dec
mov
cmp
mov
inc
pop
scas
push
nop
hlt
inc
push
in
clc
push
mov
cmp
sbbb
and
ret
jns
ja
dec
cmp
dec
push
dec
outsb
inc
aad
mov
js
clc
and
es
and
adc
pusha
adc
mov
push
add
leave
hlt
xchg
dec
dec
testb
cmpsl
aas
test
fxch
jno
push
icebp
arpl
out
xchg
aaa
adc
inc
xchg
pop
lods
inc
xchg
cmp
push
push
xor
int
sub
cmp
add
nop
das
shll
outsb
push
aas
sub
inc
jle
or
and
dec
push
jb
aaa
and
jnp
add
xchg
cmc
or
pop
mulb
push
in
jmp
jge
addw
dec
mov
test
fidivs
lds
jecxz
dec
xchg
adc
pop
lock
test
cmp
fcomps
aas
sub
push
sub
cltd
addb
push
jb
divl
insl
pop
dec
rcr
mov
add
adc
or
jo
pop
pop
imul
sbb
ret
pop
test
xor
adc
push
xor
in
xchg
sbb
sbb
cmp
jecxz
and
sbb
aaa
je
pop
xor
aaa
push
mov
add
imul
rorl
js
imul
loopne
les
aam
jl
and
pop
or
or
pop
inc
inc
dec
std
ret
push
push
daa
or
sbb
jnp
mov
popf
hlt
and
hlt
clc
enter
push
call
and
jnp
dec
dec
stos
push
jno
sbb
pop
test
xchg
add
orl
into
andl
push
push
xchg
loopne
sub
pop
push
mov
in
cmp
popa
clc
out
dec
or
js
mov
xor
push
sub
test
ret
lea
adc
push
push
in
addl
repnz
push
add
mov
fnsave
js
inc
lret
mov
loope
and
sbb
fcmovnu
popa
jge
mov
rcrb
add
repnz
sbb
xor
ret
popa
ja
dec
xchg
pushw
mov
mov
mov
hlt
ret
aam
xlat
in
dec
jnp
icebp
in
ret
rorl
inc
xchg
loop
inc
scas
pop
pop
cmp
cmp
lcall
mov
dec
dec
mov
mov
push
push
mov
call
adc
sahf
adc
fsubr
bound
push
hlt
mov
test
shrb
mov
sbb
dec
bound
sub
rorb
aaa
push
inc
mov
jg
cmp
cmovnp
mov
out
jb
pop
cmp
xor
pop
mov
out
jmp
lods
mov
pop
adc
jle
push
test
pushf
arpl
mov
adc
add
lods
cwtl
lcall
roll
pusha
lret
xchg
add
xchg
repz
icebp
pop
lods
jmp
add
adc
lods
outsl
push
fisubs
mov
add
insb
sub
xchg
jne
test
mov
mov
and
aaa
and
in
or
and
addr16
bound
mov
sbb
cmpsb
sbb
jno
or
or
stos
mov
out
sbb
hlt
mov
mov
mov
fistpll
bound
adc
jp
and
xor
push
mov
mov
fwait
out
add
loope
outsb
pushf
pop
jbe
jb
fdivl
nop
sbb
sbb
and
and
cmp
icebp
mov
in
mov
cmp
cmp
pop
call
lods
inc
pop
adc
int
cmp
and
xor
cld
pusha
xor
sub
dec
mov
outsb
in
test
sub
leave
dec
gs
xchg
mov
cmc
in
inc
stos
cmp
mov
pop
lds
mov
popf
cmp
add
sub
inc
arpl
scas
scas
pop
fstps
sbb
lahf
xor
mov
lds
popf
shll
xchg
mov
inc
leave
repz
push
mov
xor
sbb
fdivl
imul
ficoml
xor
push
xor
std
push
ret
sbb
es
js
add
mov
aas
or
mov
dec
scas
rcl
push
stos
mov
dec
ret
inc
repz
jns
fimull
ljmp
out
or
lret
decb
inc
inc
loop
icebp
fmull
and
push
jne
jmp
lods
mov
fldenv
dec
cmp
cmp
out
sti
roll
mov
push
pop
push
xchg
sti
subb
jb
movl
enter
shll
xchg
idiv
dec
scas
test
mov
push
cmpsb
les
mov
inc
cmp
cli
cmp
bound
popf
pop
pop
dec
push
ljmp
cmp
lret
jno
xor
sbb
push
mov
jge
xchg
and
sub
es
jo
aad
sbb
insb
jle
mov
mov
cmpsl
mov
scas
lds
adc
add
inc
idivb
cli
mov
dec
mov
dec
mov
adc
jbe
inc
pop
fdivrs
add
pushf
mov
pushf
fdivl
mov
sbbl
ret
in
mov
icebp
adc
gs
fiadds
push
das
clc
lods
mov
fcompp
outsl
push
lret
jmp
jne
in
push
fsubs
clc
mov
xor
sti
lcall
cmpsb
xchg
push
addr16
incl
cmp
mov
cmpsl
push
in
pushf
pop
ja
dec
cmp
shl
push
mov
mov
add
xor
mov
dec
pop
add
inc
jge
ss
movb
mov
jecxz
or
stos
in
jl
test
bound
lds
or
xor
or
mov
insl
sub
enter
add
dec
xchg
notl
or
dec
out
mov
cwtl
dec
loope
mov
nop
push
fnstsw
lds
xchg
mov
iret
into
ss
xchg
push
pop
sub
mov
bound
mov
push
stos
jbe
pop
jns
aas
adc
leave
insl
cmp
cmpsb
hlt
mov
dec
push
shll
not
out
inc
sbb
xor
xor
xor
push
pop
mov
add
fldt
xchg
dec
lahf
jb
jae
loope
mov
adc
xor
sbbb
xchg
push
dec
mov
mov
rcl
sub
cld
cmpsb
push
test
cld
xchg
lcall
dec
out
and
mov
bound
or
push
gs
jae
dec
in
lods
xor
fcomip
jle
mov
dec
dec
sub
popa
and
push
inc
or
mov
sarl
inc
push
cwtl
mov
arpl
pushf
xchg
push
fimull
sub
mov
dec
sbb
fisttps
enter
mov
fidivrl
jns
call
or
popa
cmp
jae
jecxz
insb
pop
cmp
lea
sbb
sbb
std
call
fwait
push
sbb
pop
hlt
test
in
add
sbb
or
push
mov
ds
or
xorb
sub
test
push
cli
or
xor
cmc
push
loop
push
sub
jne
fmuls
fdivrl
stc
iret
pusha
inc
rorb
fisubrs
xorl
aad
hlt
or
sub
dec
sti
jge
sub
mov
test
sub
push
das
out
stc
mov
inc
push
mov
pop
data16
stos
inc
fsubrl
lret
push
lret
bound
loop
mov
and
add
cmp
adc
adc
arpl
xchg
movsl
lds
imul
add
ret
xchg
shrl
add
out
pop
inc
xlat
sarl
sub
inc
mov
lds
pop
and
lahf
imul
cld
dec
push
push
mov
xor
insl
xchg
mull
xchg
rcrl
insb
jnp
jl
addr16
xor
in
jge
xchg
sub
push
pop
scas
imul
bound
xchg
and
test
stc
das
xchg
xor
shlb
aaa
push
cmpsb
test
pop
mov
addr16
jnp
mov
loop
push
aam
jp
sarl
adc
imul
inc
shlb
inc
mov
cli
loopne
cmpb
dec
inc
pop
pop
sahf
mov
icebp
jae
sahf
xor
sbb
mov
xchg
jmp
mov
and
lcall
pusha
leave
fcom
or
or
sbb
arpl
pop
dec
xchg
push
xor
xchg
sub
pop
ret
mov
adc
rorl
inc
bound
inc
fs
jl
in
cmp
mov
xor
xchg
push
sbb
cmp
pop
cli
xchg
lods
mov
out
insl
ret
jbe
sbb
es
bound
aad
and
pop
dec
inc
gs
popa
sbb
or
mov
push
mov
dec
insl
push
lahf
mov
scas
push
cmpsb
ret
out
das
enter
push
and
xchg
into
sbb
jp
int3
dec
shlb
test
xor
fsincos
xchg
sbb
dec
stos
jmp
ja
push
leave
fwait
or
inc
fdivrs
jbe
enter
lds
cmp
arpl
jmp
jo
and
loope
jo
jmp
sbb
dec
jle
dec
push
ficompl
inc
push
test
test
cmc
jp
adc
in
xchg
test
das
pop
mov
imul
mov
add
daa
cmpsb
add
mov
or
pop
mov
ds
jnp
cmp
push
test
push
xchg
jbe
iret
cs
shrl
adc
sub
push
lcall
jmp
cli
and
test
push
shll
test
sahf
addr16
mov
and
mov
xchg
inc
pop
dec
scas
adc
and
pop
pop
mov
or
lahf
dec
xlat
ret
repz
shr
rol
test
xor
std
inc
js
mov
push
scas
push
sti
pop
xor
push
movsb
cmpsb
jmp
pop
fiaddl
out
or
dec
push
mov
loope
mov
lret
popf
pop
jmp
cmc
jmp
and
test
mov
cmpsb
push
and
xor
rol
fistpl
xor
sbb
mov
adc
enter
cmp
xchg
sub
push
jle
mov
jae
clc
or
js
into
jno
int3
pop
lret
roll
ret
sub
jno
fisubl
adc
mov
mov
adc
or
mov
test
std
in
dec
mov
loop
lret
idivl
xchg
dec
aam
sbb
pusha
cmc
pop
jbe
sbb
aam
cs
lahf
mov
addl
pop
mov
add
cmp
inc
inc
push
in
std
fcmovu
and
and
pop
adc
loopne
outsl
jle
cmp
popa
cmp
jae
dec
mov
sahf
dec
and
testl
adc
inc
push
xchg
test
stos
mov
nop
jmp
loope
jnp
sub
cli
movsl
and
fsubrs
push
outsb
push
sarl
dec
cmp
pop
cmp
fdivp
cmp
ret
or
icebp
sub
adc
movl
dec
sbb
lock
repz
and
xchg
ljmp
sti
int3
das
pop
repnz
jns
stos
adc
mov
pop
or
adc
shrl
andb
fcomip
cmp
xchg
or
pop
dec
dec
mov
cmp
leave
pop
cmp
xor
sbb
push
rolb
cltd
je
repz
sbb
into
vpunpckldq
jno
aaa
loope
call
mov
jno
mov
sbb
test
mov
sti
xchg
adc
popf
pushf
call
xlat
fs
ficomps
stos
mov
test
sarb
add
cmp
lcall
cmp
or
or
shll
mov
cmp
lods
xchg
cli
sub
pop
and
loopne
in
jo
scas
xor
xor
pop
push
js
push
and
inc
inc
fucomp
popa
shrl
lcall
and
cltd
test
mov
jl
mov
in
ret
pop
mov
mov
push
test
in
jbe
xor
scas
jno
pop
push
iret
push
out
dec
jne
mov
outsb
sub
xchg
sub
jnp
or
pusha
imul
pop
sbb
or
in
inc
lahf
adc
in
push
cmp
and
subb
sarb
enter
xchg
repnz
jg
dec
inc
fstpt
scas
inc
jno
fdivs
xchg
int
ret
scas
cli
in
mov
es
mov
add
pop
mov
and
cmpsl
xlat
jb
cmp
push
cmp
lock
js
int3
dec
out
aas
ja
cmp
stos
sbb
mov
je
push
mov
mov
cld
xchg
dec
aad
push
pop
mov
cmp
dec
gs
sub
push
ja
dec
cltd
das
xchg
call
ret
push
sbb
jne
sahf
notb
push
cli
inc
cmpsb
int3
rcll
mov
movsl
lret
push
repnz
and
push
or
decb
cltd
test
jne
cltd
or
push
mov
add
cmp
iret
push
cmp
xchg
notl
out
movsb
movb
sbb
pop
das
mov
insl
popa
mov
lods
icebp
cmp
lods
ljmp
call
nop
push
cmp
pop
std
inc
lret
and
stos
mov
add
enter
inc
mov
add
out
ja
jns
mov
int
lods
mov
loopne
mov
dec
lods
push
ret
rcll
subb
or
mov
gs
jle
mov
lret
mov
idivb
in
test
push
clc
sub
popl
aas
shll
jne
out
push
jp
inc
pop
mov
push
cmpsl
pop
mov
test
lahf
push
ds
mulb
push
mov
cmp
and
daa
push
inc
test
dec
pop
adc
flds
icebp
xor
test
movsb
mov
xor
mov
sub
fwait
xchg
sub
sbb
pop
icebp
enter
loopne
inc
ss
mov
sbb
jg
push
jo
jl
pusha
pop
and
cwtl
pop
repz
dec
filds
js
xchg
out
dec
adc
mov
lock
inc
add
arpl
dec
out
xchg
xchg
in
stc
cmp
sti
jbe
sub
push
xor
mov
popf
adc
dec
cld
pop
sub
clc
and
lea
or
mov
loop
fs
scas
xor
or
repnz
subb
pop
hlt
mov
pusha
inc
scas
xchg
std
xchg
push
ss
or
adc
int3
mov
dec
inc
sbb
mov
popf
filds
push
movsl
mov
mov
cmpsb
inc
adc
sbbb
lret
loope
lret
scas
sub
pop
sub
inc
lods
jne
pushf
das
into
mov
sub
sti
adc
clc
cld
arpl
mov
adc
int
mov
psubusw
push
js
push
mov
dec
in
ret
cmp
int
inc
rol
movsl
inc
lret
mov
push
mov
push
dec
and
mov
out
sbbb
pusha
enter
push
xchg
std
cltd
dec
mov
movsb
sbb
lock
mov
movsb
sbb
fimull
xor
imul
jbe
fwait
mov
mov
sbb
cld
pop
mov
jmp
andb
cmp
adc
mov
xorb
xlat
push
push
repz
je
das
out
xor
lock
sbb
push
popf
sbb
stc
aas
aad
sub
sbb
cmp
add
mov
out
out
add
pop
out
cmc
in
stos
cmp
aad
in
out
sti
lcall
rcrb
cmp
gs
lea
aaa
hlt
outsb
adc
out
cwtl
dec
dec
jnp
loope
adc
jo
loop
rcrb
mov
shl
or
cmpsb
out
pop
negb
call
jge
lret
dec
lret
xor
jbe
loope
push
daa
xor
inc
std
mov
mov
push
scas
and
cmp
mov
mov
push
and
mov
jne
out
cwtl
pusha
add
xor
loop
adcl
xor
jne
in
loop
mov
push
or
enter
add
loopne
push
mov
push
push
push
mov
mov
imul
pop
sbb
mov
sbb
xor
push
inc
push
fchs
fwait
test
push
inc
int
lods
xor
or
xor
sahf
mov
test
leave
sub
js
fsubrs
ficoml
or
xchg
pop
jecxz
cltd
mov
outsl
lock
es
out
cld
xchg
inc
sub
push
test
ja
inc
icebp
movsl
sbbl
add
mov
cld
fstps
xchg
adc
lods
cmpl
out
mov
fistpll
push
push
dec
fstl
sbb
out
pusha
cwtl
das
cmpsb
dec
aaa
dec
rorl
test
dec
ss
dec
int
or
lret
sub
push
adc
subb
lods
out
test
mov
gs
sarl
imul
mov
loopne
mov
or
nop
push
pop
inc
ja
bound
push
jb
int
xor
pop
clc
and
and
jae
call
lcall
xor
shl
push
push
cmpsb
nop
nop
dec
testb
mov
int3
mov
iret
add
jne
imul
outsl
xchg
insl
mov
lret
out
xchg
popa
std
jmp
push
je
subb
addr16
pop
sbb
icebp
es
js
jns
sub
cs
sub
mov
addr16
mov
iret
push
add
cmpsl
cmpsb
push
fsubr
scas
and
add
dec
add
ret
in
inc
mov
dec
cwtl
mov
jmp
sbb
sti
xchg
in
sbb
mov
sbb
xlat
into
pusha
pop
sbb
cmp
outsl
mov
jns
addr16
je
mov
int
dec
cmp
sti
inc
mov
subb
xorb
fwait
insb
push
lock
testl
lahf
or
push
xlat
mov
pop
loop
loop
push
clc
lds
and
xchg
mov
cltd
xchg
mov
pop
dec
sub
sbb
movsb
pop
out
icebp
scas
stos
loopne
push
sbb
mov
hlt
cmp
sub
push
cwtl
stos
mov
push
push
stc
and
push
or
inc
cli
lret
imul
cmp
addr16
fmul
xor
pop
adc
fsubrl
cli
xchg
adc
test
cmpsl
ficoms
std
jo
je
leave
xor
xlat
sbb
inc
je
inc
pop
data16
imul
sub
push
sub
pop
arpl
bound
cld
cltd
enter
fsubrs
orb
stos
hlt
jge
mov
negl
and
scas
adc
in
pushf
repnz
pop
cmp
push
in
push
sub
xchg
adc
data16
lret
mov
out
mov
cmp
in
or
mov
or
pop
lods
xor
out
or
dec
xchg
xor
adc
ss
pop
data16
inc
rcrl
imul
test
scas
fsubp
repnz
inc
test
jo
das
mov
xchg
out
push
mov
out
decb
js
movsb
lea
xchg
fwait
cli
rorl
sbb
xchg
addr16
sbb
lods
mov
das
xor
rorl
popf
fnstcw
sub
pop
cmp
jnp
mov
ret
jnp
inc
fsubrs
leave
pop
and
jge
int
inc
adc
push
mov
out
repz
sbb
jg
jmp
inc
fnstsw
iret
xor
sbb
mov
mov
push
jbe
xor
push
cli
das
xorps
xor
mov
jg
and
ss
mov
mov
dec
movsl
mov
jb
pop
lcall
pop
or
xchg
fbstp
icebp
sub
inc
sub
mov
sub
insl
jbe
mov
outsb
xchg
push
lods
sbb
mov
adc
rorl
movsb
jl
aad
aad
aaa
mov
adc
cmp
xchg
adc
cmp
js
inc
sub
add
jecxz
enter
cmp
mov
test
adc
fists
mov
sub
cmc
lret
movsl
mov
andl
repz
jb
in
imul
cli
mov
or
test
fldt
dec
cmp
cmc
gs
xlat
outsb
cld
shl
stos
jmp
enter
cmp
testl
and
scas
pop
addr16
call
in
mov
or
das
insl
push
add
add
jne
test
jecxz
push
mov
gs
in
das
jecxz
lods
jo
int3
xchg
mov
mov
add
loopne
lret
das
stc
add
mov
bound
push
cmovs
lret
add
jae
movsl
mov
mov
mov
jno
add
mov
push
mov
movsl
movsb
dec
jns
mov
sub
mov
xor
mov
pusha
mov
inc
or
mov
psubusb
inc
ret
jmp
roll
enter
fdivl
adc
int
cli
sahf
add
dec
ljmp
nop
stos
adc
and
add
cmp
int
inc
dec
scas
cwtl
pop
mov
and
add
sqrtps
into
movsl
inc
push
mov
jnp
popf
pop
xchg
xchg
ss
mov
in
test
fwait
pop
push
loope
adc
lret
outsl
orb
fiaddl
jle
jge
ficoms
lods
ljmp
adc
xor
cmpsb
fstpt
dec
in
adc
xor
push
mov
mov
or
ja
icebp
xor
test
inc
pop
jns
dec
or
lcall
test
push
movsl
xchg
cmp
cld
in
sub
jno
pop
div
xchg
gs
out
add
in
rorb
std
pop
cmp
add
jl
aam
and
imul
in
pop
mov
lret
cmpsb
icebp
mov
jno
xlat
sub
lds
int3
loop
cmpsl
fs
enter
test
and
sbb
push
jo
movsl
and
jg
xchg
push
movsb
and
in
testl
aas
jnp
cmp
sbb
pushf
data16
lods
sbb
fnstenv
xchg
sub
mov
fnsave
dec
mov
dec
sub
clc
mov
mov
xchg
mov
push
enter
fiaddl
add
les
cmp
add
xchg
sub
mov
mov
movsl
repnz
pop
aas
jns
imul
mov
and
scas
cmp
outsl
orps
loopne
addr16
hlt
mov
xchg
sbb
sarl
pop
add
sbb
int
jb
pop
and
and
outsl
sbb
mov
pop
sahf
jmp
mov
mov
jle
popa
cmp
inc
int3
lea
outsl
sub
pop
mov
mov
xchg
and
or
rcrl
add
dec
jmp
xchg
outsb
or
xchg
mov
hlt
icebp
mov
mov
ret
pop
jbe
mov
mov
clc
pop
cmp
fisubrl
clc
pop
aad
stc
or
loope
lahf
fidivrs
mov
into
jne
loop
ret
int
push
mov
orl
nop
xor
stos
add
pop
xchg
out
sahf
int3
mov
sbb
and
dec
dec
adc
in
popa
push
mov
pop
push
out
into
sub
and
or
and
and
rolb
inc
es
les
sti
inc
pop
push
movsb
fisttps
or
jae
shll
ljmp
xchg
jo
pop
movsb
pop
mov
lock
adc
or
mov
jg
lcall
daa
int3
dec
orb
shll
cmp
fdivs
sub
les
jns
push
cli
movb
xchg
aam
and
shlb
clc
fsubs
pop
or
pop
scas
enter
ljmp
insl
xor
jg
cmp
mov
dec
mov
cmc
pop
lock
xlat
mov
mov
out
xor
xchg
and
lahf
or
xchg
sbb
test
decl
movsb
jecxz
scas
cmp
andb
aas
fs
mov
push
push
divl
cmpsb
or
repnz
test
fidivs
push
mov
bound
xchg
jb
and
daa
dec
movsl
icebp
flds
sbb
xchg
fnstsw
push
fmull
cld
mov
fisubl
xor
in
push
int
mov
cs
rsqrtps
fists
cmp
push
dec
mov
xor
push
push
sbbb
sbb
incl
jnp
adc
push
cltd
lock
pop
xchg
sub
sub
push
pop
cmp
lret
dec
rclb
pop
and
inc
mov
dec
dec
mov
push
mov
mov
dec
xchg
loope
jge
jl
sub
pop
lret
or
sub
and
push
popf
and
adc
aad
notb
xor
les
adc
scas
mov
lods
mov
shrl
push
outsl
int
sub
repz
sbb
inc
or
je
mov
or
inc
jno
aas
jbe
mov
adc
dec
scas
fsubr
shrb
lods
nop
repnz
addb
or
out
shrl
and
rol
xor
ret
ret
adc
jno
xchg
mov
scas
std
aam
fdivrs
add
fwait
cmpsb
insl
lret
jnp
rol
inc
xor
cmpsl
inc
adc
pop
rol
outsb
fwait
insb
dec
sub
add
xchg
xchg
cltd
ss
add
cmp
in
cmp
inc
cmc
mov
stc
ret
pop
shll
mov
decb
sub
mov
popa
es
addr16
cmp
sub
stos
cwtl
sbbl
or
or
dec
pop
mov
sub
sahf
mov
dec
pop
or
jge
mov
cmpb
cmpsl
add
or
lret
pop
inc
lret
rcl
inc
movsb
dec
dec
iret
das
les
dec
push
dec
outsb
ljmp
mov
orl
in
mov
mov
xor
lock
imul
in
add
push
dec
mov
andl
mov
pushf
inc
push
aaa
add
out
pop
dec
xchg
push
popa
xchg
push
addr16
mov
jo
xchg
lods
int
jnp
dec
loop
pop
sti
sbb
sbb
pusha
jae
cmp
cli
dec
mov
insl
icebp
and
cli
adc
in
loopne
inc
rcr
push
push
xchg
and
test
repnz
push
imul
add
dec
xor
dec
sahf
test
sub
xor
or
adc
fcomps
mov
xchg
pop
loopne
lock
imul
sar
push
sahf
inc
loopne
loopne
cwtl
mov
aas
push
outsb
mov
into
or
pop
andl
push
jmp
xchg
or
xor
rcr
push
push
js
leave
lret
sbb
mov
lret
divb
outsl
xor
adcl
inc
add
mov
fsubrl
inc
push
gs
cwtl
inc
or
mov
jnp
adc
push
xchg
dec
pop
pop
jbe
jns
cmp
push
pusha
and
mov
dec
and
xchg
sub
lret
inc
jns
jb
push
nop
cmp
fsubl
inc
stos
jne
push
mov
mov
jns
cmp
insl
or
lahf
ljmp
and
push
das
movsb
cmp
das
aaa
orl
fldenv
fdivl
or
jp
fisubl
enter
mov
sub
lahf
and
dec
loope
cwtl
push
inc
lret
rorb
in
jecxz
pop
adc
cmp
loope
decb
or
test
sub
cmpsl
fldcw
shrb
cmc
cwtl
das
xchg
ret
jnp
mov
aad
or
in
sbbl
and
mov
pop
stos
pop
lahf
fdivrl
mov
cmp
aad
cmp
iret
jae
sti
test
add
fptan
movsb
pop
sahf
inc
cli
sbb
add
mov
push
or
mov
mov
fs
pop
or
cmp
add
and
mov
xorb
adc
cltd
ss
xchg
push
cmpsb
mov
clc
and
out
cli
mov
iret
inc
ret
rolb
es
cmpsl
dec
shlb
mov
push
cli
lret
cmc
shrb
xor
insl
popa
lods
fsubp
sub
aam
adc
jp
iret
mov
push
into
movsl
int3
pop
loop,pt
in
pop
les
xchg
aad
push
pop
push
mov
sub
dec
mov
out
inc
hlt
lock
ret
cltd
mov
in
mov
add
stos
xchg
xor
arpl
jns,pt
shrl
inc
hlt
push
xchg
imul
in
dec
ficoml
inc
js
inc
aad
xchg
ret
in
insb
push
inc
mov
push
sbb
int
mov
cs
cmp
rcrb
xchg
cmp
pop
xor
mov
xchg
dec
add
lods
ret
leave
mov
sub
xchg
dec
xchg
mov
out
push
cld
out
xchg
test
push
iret
cs
push
mov
sbb
mov
add
cmp
adc
je
pop
popf
insb
push
dec
sub
xchg
jecxz
daa
jecxz
inc
inc
dec
add
jmp
adc
adc
in
lea
scas
xor
cmpsb
and
sub
aaa
cmp
test
pop
sti
daa
test
arpl
jge
mov
cmpsb
int3
and
cmp
jbe
scas
stos
and
adc
aad
jo
xor
sub
fsubr
test
jb
loop
xor
mov
ss
ds
lods
mov
dec
stos
jmp
fcmovne
xchg
mov
mov
int
mov
inc
pop
frstor
sub
mov
add
aas
mov
or
dec
pop
xor
mov
mov
arpl
outsb
xchg
and
xchg
fidivl
cmc
mov
mov
push
adc
and
outsl
and
je
push
pusha
mov
sub
mov
clc
mulb
nop
scas
iret
cmp
pushf
sub
iret
push
mov
repnz
add
cmp
push
sub
out
jmp
push
loopne,pt
push
cmpsb
aas
push
mov
xchg
push
das
inc
xor
dec
arpl
pop
or
or
cmpb
in
push
or
or
data16
xchg
iret
cmpps
jae
in
push
push
lret
pop
not
and
push
stos
es
test
out
pusha
sbb
jle
add
mov
xor
clts
or
cmpb
adc
push
out
fdivrs
mov
dec
dec
shl
jno
sub
test
and
scas
stos
add
sti
xchg
imul
inc
inc
add
xor
adc
icebp
mov
jne
ja
pop
xor
or
pop
cmp
dec
arpl
adcl
sub
and
lea
shll
add
cs
cmc
sbb
xchg
sti
or
insl
mov
leave
push
push
leave
mov
es
filds
ret
hlt
xor
fbld
add
addr16
insl
daa
push
fcomip
fcmove
rcr
iret
mov
insl
scas
jg
xor
push
xchg
cmpsb
push
das
cld
cld
clc
aas
push
outsl
repnz
gs
lcall
sbb
das
shl
dec
lds
or
push
sbb
lods
jb
or
rcr
icebp
xchg
lret
lods
mov
jge
jp
or
dec
fildll
inc
adc
pop
rcl
sub
pop
dec
fldcw
lods
jg
mov
test
in
rcr
lret
cmp
lret
xor
jo
push
int
mov
fistpll
mov
add
mov
sbb
mov
xchg
cmc
push
jo
rcr
xchg
imul
shrb
inc
lahf
testl
dec
or
xchg
push
mov
dec
arpl
dec
cmp
inc
std
fistpll
cmc
cmp
xlat
sub
or
daa
jge
add
dec
rol
lea
daa
data16
stc
popf
push
aam
mov
xchg
pop
call
shlb
adc
popa
jno
lret
push
jmp
jmp
xchg
int
jl
repz
xchg
mov
shrl
push
out
test
lods
mov
das
inc
push
popf
jbe
pop
aaa
adcl
call
sbb
mov
in
and
es
xchg
imul
dec
lods
push
push
icebp
imul
inc
xor
inc
mov
dec
out
push
mov
jle
clc
mov
imul
out
popf
jmp
cmp
jecxz
jmp
cli
or
in
mov
xchg
push
mov
ret
out
xor
mov
ds
mov
int3
mov
xchg
xchg
out
and
in
dec
pop
mov
mov
orb
insb
mov
ret
push
hlt
sbb
pushf
xchg
xor
xchg
lahf
dec
call
or
cmp
enter
rol
int
or
test
ja
cmpsb
pop
fdivrs
mov
rclb
dec
dec
sub
ss
sub
dec
jmp
loopne
imul
add
inc
pop
adc
sbb
in
and
xor
int3
lods
inc
decb
mov
jmp
push
lea
mov
dec
jl
mov
ds
test
fidivl
pop
pop
repz
mov
sub
fldcw
imul
bound
mov
sahf
aaa
mov
inc
fadds
stos
shll
adc
jle
pushf
pusha
adc
pop
adc
stos
nop
bound
mulb
outsb
leave
pop
outsb
push
or
loop
jb
push
mov
push
std
cltd
cmp
inc
sbb
pop
dec
out
cmp
mov
dec
cmpsb
xchg
add
adc
rcpps
addb
adc
fisubs
mov
jno
enter
xchg
pop
hlt
je
mov
ret
adc
ss
out
mov
pop
fsubrp
lea
cmpb
pop
movsl
dec
stos
rclb
mov
ror
popa
ret
jl
outsb
mov
mov
jecxz
jno
cltd
movsb
jl
scas
mov
and
xor
sahf
xchg
push
in
dec
cwtl
mov
and
popf
adcl
cmp
and
push
lahf
and
mov
dec
push
inc
push
test
in
je
gs
cltd
xchg
pushf
leave
fprem1
jnp
push
xor
sahf
cmc
in
in
xor
mov
adc
or
fisubl
sub
aad
sbb
mov
dec
les
mov
fbld
mov
mov
adc
push
fisttpll
pop
push
add
push
mov
pop
cltd
pusha
fincstp
mov
add
aam
or
lea
push
repnz
inc
je
adc
sbb
sub
nop
jnp
outsl
lods
mov
pop
and
arpl
rorl
stos
lds
shrl
xchg
bound
cmp
dec
jecxz
adc
push
xchg
nop
ds
mov
dec
fwait
jb
out
aaa
add
cli
mov
imull
call
add
push
jb
stc
dec
iret
fcmovne
daa
lcall
jecxz
fisttpl
out
aaa
loop
stos
andl
sbb
mov
movsl
xchg
dec
sub
les
or
jo
es
or
mov
inc
pusha
jo
push
mov
rolb
pop
out
test
cli
leave
jbe
sti
sbb
push
push
pushf
add
int3
inc
ret
inc
nop
jne
adc
pop
xchg
and
adc
xlat
repz
cmp
pop
test
sub
cwtl
push
sbb
test
fstps
xchg
sub
mov
cmpsl
ds
lret
mov
cwtl
in
lret
iret
inc
lods
jle
pop
cmc
test
out
and
push
or
adc
fildl
and
es
test
push
enter
sub
enter
mov
sub
dec
add
jnp
pop
fidivs
jbe
add
es
rcll
stos
icebp
in
nop
xor
sub
ret
push
sub
add
dec
loopne
pop
outsl
ret
cmp
pmuludq
dec
pop
dec
cmpl
daa
mov
jecxz
sbb
push
jge
xchg
push
fisttps
cmc
adc
adc
stos
inc
mov
xchg
cs
imul
popa
sar
sti
push
and
jecxz
or
mov
cmp
mov
mov
loope
mov
test
cs
mov
cmp
xchg
divb
ret
adc
call
test
js
pop
mov
dec
dec
push
pusha
dec
sbb
dec
lods
jno
jns
fmull
jo
movsb
pop
das
stc
pop
mov
sbb
or
inc
negl
push
pop
sub
nop
push
rolb
cli
test
adc
outsb
test
jno
jne
adc
push
aam
xchg
mov
xchg
sub
lahf
jb
push
sub
popa
add
jbe
out
pop
adc
mov
repnz
loop
in
inc
jp
sbb
lea
lret
scas
and
insb
jecxz
sub
push
mov
test
push
lock
dec
mov
stos
cmpsb
paddusw
dec
mov
cli
xchg
insl
mov
dec
mov
stos
xor
ja
aas
push
cwtl
pop
imul
jno
ja
test
cmp
aas
dec
fsubrs
dec
fsubrl
and
inc
loope
mov
rclb
pusha
xor
push
and
inc
in
decb
add
movsl
loopne
adc
mov
or
cld
and
stc
shr
xchg
mov
rcl
pop
pop
test
add
mov
je
fisubs
adc
and
xor
pop
xor
dec
mov
push
outsb
jp
xor
ljmp
xor
sbb
sarb
test
aad
pop
mov
mov
push
bnd
icebp
iret
fsubs
popa
adc
rol
mov
jo
sub
dec
mov
inc
xchg
daa
outsl
repz
jns
sub
or
scas
push
dec
out
stc
pop
xor
movsb
add
jne
inc
data16
pusha
popa
daa
xchg
pop
or
mov
mov
div
js
xor
mov
sbb
pop
call
imul
jecxz
ja
xchg
xor
adc
out
sub
jne
je
out
sub
jg
jl
and
adc
insl
pusha
and
pop
add
sbb
xchg
lret
stc
adc
lds
jne
xchg
pop
stc
push
xor
repz
fstpl
inc
shr
jno
repz
xor
xlat
lcall
push
les
mov
dec
adc
or
inc
aas
int3
bound
add
sahf
in
cld
in
repnz
cmovbe
imul
push
clc
xor
dec
sbb
in
ja
or
dec
mov
dec
cmpsb
imul
inc
andl
test
fldl
testb
push
jp
int3
scas
in
js
or
adc
mov
mov
cs
pop
sub
inc
cwtl
sub
inc
scas
cmp
xorl
arpl
xor
imul
push
sub
mov
adc
mov
push
jne
push
sahf
push
cwtl
sbb
cld
lcall
cwtl
stos
mov
add
sub
or
in
inc
inc
aaa
mov
mov
test
and
xchg
or
cmpsl
cltd
fsubl
push
repnz
shlb
dec
dec
aaa
xlat
adc
mov
add
push
test
cmp
lahf
push
imul
mov
xchg
sbbb
cs
sbb
pop
sub
enter
out
int
sbb
sub
lahf
popa
xor
pop
xor
pop
inc
ficoms
stc
push
sbb
test
fs
popa
out
push
or
mov
fidivrl
idivl
fdivrl
dec
rcr
push
mov
lea
xchg
xchg
inc
aas
mov
fnstsw
lret
mov
cltd
cld
add
ret
out
xor
dec
sub
xchg
loopne
sti
dec
xchg
xchg
push
cmpsb
in
test
nop
test
mul
cmp
push
lret
sti
jae
mov
sub
add
and
jbe
sbb
mov
jne
jae
mov
imul
pusha
ret
mov
add
out
xor
add
dec
subb
loop
ja
cmp
lahf
jge
leave
mov
ljmp
inc
js
imul
inc
in
outsb
ret
popa
mov
mov
loop
ss
push
mov
sahf
clc
bound
ds
movl
pusha
movsb
fcoml
mov
jge
in
fidivrl
ljmp
pop
xor
pop
push
out
mov
mov
std
adc
dec
dec
pop
pop
in
pop
ljmp
or
jl
inc
inc
jge
out
fisubrl
or
xlat
and
aaa
aad
jecxz
jmp
repnz
icebp
mov
and
mov
ret
aaa
into
add
in
pop
int
adc
mov
addl
shlb
add
cmp
pushf
xorb
fisubs
pop
or
imul
cld
bound
lahf
sbb
lods
adc
cltd
in
pop
call
aam
jne
add
lcall
push
push
aas
ja
lahf
subl
add
mov
pushf
push
mov
clc
sbb
clc
enter
enter
xchg
hlt
scas
ret
aas
inc
dec
sub
pop
mov
jbe
push
xor
out
decl
push
mov
jno
jp
jmp
movsb
cwtl
ja
push
mov
mov
fidivs
jae
mov
adc
scas
inc
clc
xor
and
add
rclb
fs
mov
andb
add
xor
xchg
inc
push
push
sub
fcomps
or
mov
sub
repz
jge
cmpsb
loope
js
push
mov
push
xlat
repz
lcall
and
pusha
xor
push
insl
sub
push
cmpsb
fwait
out
mov
xchg
aam
cmpsl
in
sub
int3
cmp
jmp
iret
fnstenv
enter
out
mov
cltd
mov
push
fs
cmp
cmc
adc
inc
lahf
in
xchg
aaa
mov
pop
jbe
out
push
dec
imul
out
lds
pop
adc
mov
jnp
jp
xchg
in
sub
ljmp
test
test
inc
loop
pop
xchg
adc
inc
cmpsl
jns
inc
out
mov
in
mov
flds
fbld
stc
push
push
mov
or
or
arpl
xchg
push
stos
lahf
sbb
insl
ss
sub
rcrl
adc
mov
sbb
out
push
out
cwtl
inc
or
mov
lret
out
sbb
pusha
pop
pop
add
cmp
sub
les
in
outsb
and
xor
dec
rcl
sbb
and
jnp
pop
cmp
jg
mov
shrl
adc
shll
add
mov
popa
push
fdivrl
cmp
fbld
cmp
filds
js
shll
xchg
bound
sbb
lcall
and
dec
cmp
push
lret
nop
icebp
pop
xchg
scas
arpl
fdivl
andl
jb
fdivs
fwait
xlat
mov
dec
cmp
ret
test
aam
ss
scas
idivl
dec
dec
cld
jg
mov
or
xchg
sbb
subb
aaa
repnz
mov
adc
ss
sbb
mov
cmp
push
pop
fdivl
mov
cmp
xor
test
lock
mov
dec
jb
sub
mov
xchg
add
push
mov
mov
rcrl
pop
or
mov
jno
dec
fimuls
lahf
mov
add
outsb
fs
scas
les
mov
nop
stc
call
stos
mov
mov
and
or
fstpl
xchg
fidivrl
add
jp
gs
or
fmull
cmpsl
lahf
clc
pop
sahf
out
inc
lds
fmuls
lods
inc
repz
adc
push
mov
adc
repz
xor
add
mov
jle
mov
jg
sbb
or
popf
and
aaa
dec
jno
cmpsb
jns
lahf
adc
xchg
push
and
mov
fmul
jo
or
gs
jns
add
inc
imul
xor
jbe
lcall
in
add
popf
xchg
sub
cmp
jae
out
dec
adc
lahf
lea
mov
rcrb
int3
movl
lods
sbb
int3
push
sub
push
push
or
mov
lahf
cli
test
repnz
xor
sti
or
mov
pop
sarl
daa
insl
jge
cmp
xchg
adc
cmp
mov
ret
jl
push
into
mov
out
sub
in
or
rolb
cmc
ljmp
movl
cmc
movsb
scas
nop
adc
js
mov
fstps
testl
push
mov
cmp
fbstp
or
ja
test
mov
mov
mov
push
push
xchg
aaa
or
aaa
inc
cmp
imul
pop
xchg
gs
pop
fidivrs
sub
sarl
bound
repz
bound
adc
sbb
sarb
inc
cli
push
decl
fnsave
insb
and
lcall
and
rorl
rcrl
xchg
sbb
xchg
or
outsb
test
loope
in
adc
pop
dec
jne
leave
int
scas
jno
fisttpll
in
cmp
jecxz
jg
dec
inc
inc
mov
sar
dec
popa
popf
pop
lret
or
push
mov
mov
or
in
fbld
and
cmpsl
sub
pop
xor
jg
lret
lret
cmp
shr
dec
lret
jae
test
mov
push
pop
fistps
daa
add
leave
pop
sub
shrb
outsb
pop
or
cli
sbb
rclb
aaa
nop
mov
loop
xchg
pop
xchg
out
sbbl
sahf
lods
jbe
xchg
stos
jo
and
cmpsb
xchg
aas
mov
lea
sbb
and
int
lods
mov
mov
jns
or
fwait
adc
insl
test
pusha
aaa
xor
push
lret
shr
push
popf
das
mov
jl
sub
mov
and
inc
iret
fst
adc
push
push
jno
xor
or
int3
hlt
jge
pop
jbe
mov
cmp
fs
std
inc
mov
xchg
dec
arpl
lds
jl
sbb
nop
adc
lock
in
sbb
test
aas
sbb
inc
push
xor
push
xchg
imul
and
fs
push
pop
testl
stos
in
popa
sti
iret
loope
fsubr
xchg
inc
jecxz
mov
pop
sbb
xorb
mov
and
loop
jmp
testb
sub
bound
scas
fsubs
or
or
out
pop
cmp
dec
enter
push
cmp
pop
cmc
mov
insl
mov
mov
mov
and
das
movsl
mov
pop
mov
cmpsl
adc
jae
pop
scas
and
fidivl
pop
inc
or
inc
pop
mov
xor
dec
mov
andb
lods
jae
fiaddl
fld
inc
jb
cmpsl
cmc
movsb
cmp
xchg
xchg
icebp
inc
or
jle
xchg
icebp
icebp
xlat
mov
mov
xchg
ss
ja
aam
jno
push
jns
enter
aam
adc
inc
xchg
cmp
in
je
mov
loop
push
stos
mov
push
push
or
in
pushf
ljmp
hlt
lret
cmpsb
dec
pop
fadd
inc
mov
mov
fdivrs
push
mov
popa
das
mov
jb
jbe
pop
dec
negb
sti
fwait
adc
lahf
stos
es
and
sti
pop
ljmp
inc
or
mov
aas
mov
push
pusha
mov
mov
mov
mov
cmpsl
ficoml
sti
cmpl
or
fwait
cmp
neg
scas
cmpsb
mov
int3
adc
push
cltd
dec
data16
rolb
jb
iret
push
aas
mov
xchg
mov
repnz
xchg
scas
pop
fsts
inc
pushf
xchg
jmp
xor
adc
xlat
out
push
adc
pop
jb
mov
mov
fwait
cwtl
in
std
popf
jmp
aaa
movsb
xchg
or
adc
mov
imul
dec
xchg
jp
jge
hlt
repnz
pop
inc
idivl
add
outsb
jmp
pushf
mov
imul
inc
movsb
out
imul
mov
pusha
arpl
jns
push
pop
jae
push
addr16
jne
mov
add
mov
outsb
scas
add
jle
xchg
mov
sbb
cli
xor
mov
adc
inc
sbb
and
fildl
imul
cmp
lea
fldpi
xor
add
xchg
mov
xchg
sti
test
push
outsl
pusha
jle
inc
mov
sbb
inc
addr16
mov
sbb
ja
cmpsb
stc
and
sbb
leave
add
mov
aaa
out
mov
mov
bound
xchg
xor
stos
push
sahf
inc
les
mov
mov
rorb
arpl
imul
out
push
insb
mov
jl
fistps
xchg
pop
inc
pop
cmp
mov
ret
push
pop
jmp
loope
sub
iret
and
hlt
adc
sbb
dec
dec
outsl
sbbb
cmp
mov
ds
add
mov
lods
mov
dec
sub
ret
pop
add
icebp
popa
push
popa
into
jmp
mov
cmp
inc
iret
xchg
mov
leave
or
jl
push
fnsave
pop
lret
mov
mull
in
xor
imul
mov
mov
sbb
jp
je
jnp
stos
aas
inc
je
adc
jge
add
sbb
inc
push
dec
cld
add
shrl
mov
out
xchg
xor
mov
or
jbe,pn
movsb
pop
loope
cmp
push
lods
lcall
dec
addr16
inc
mov
shrl
push
pop
xor
and
fs
sub
loop
cmp
mov
hlt
adc
test
add
repnz
jge
iret
test
jno
and
pop
cli
ds
jge
adc
imul
and
pusha
cwtl
inc
mov
cli
shll
xchg
in
adc
orl
jmp
icebp
mov
out
xchg
out
pmaddwd
call
sub
ret
jns
jle
popa
in
inc
mov
test
add
lock
sub
notb
ret
fs
leave
cs
cmpsb
inc
iret
mov
in
popa
sub
rclb
sbb
push
roll
je
iret
jecxz
lods
jl
pop
nop
scas
clc
inc
jns
xor
cmp
dec
out
test
icebp
inc
loopne
hlt
adc
pop
xchg
pop
les
inc
rcl
mov
pop
test
out
mov
sub
lods
in
and
inc
aas
pop
cmp
add
pop
mov
or
std
adc
push
jl
and
pop
fs
pop
xchg
cwtl
out
out
jno
icebp
enter
mov
test
out
inc
ljmp
inc
lds
in
mov
sarb
sub
repz
in
push
inc
insl
fwait
or
sarb
pop
sub
das
pop
cmp
mov
pop
adc
andl
lods
push
adc
cmp
cwtl
test
stos
jae
lret
dec
xchg
sub
addr16
xchg
inc
icebp
jecxz
loopne
adc
push
dec
sub
stc
out
fdivl
sarl
lea
test
inc
loopne
in
aaa
jp
gs
mov
mov
mov
mov
xchg
lret
faddl
sbb
in
sub
inc
nop
daa
js
adc
xchg
mov
in
clc
lcall
pop
adc
xor
cli
and
mov
enter
and
mov
or
adc
ret
sarl
or
sarl
inc
aad
dec
shll
push
xchg
out
xor
mov
lcall
mov
pop
mov
push
ljmp
lcall
in
lock
mov
in
lret
jb
shr
stc
bound
mov
inc
lcall
xchg
xchg
addr16
cmpsb
cmp
xor
test
shlb
test
xchg
jg
inc
stc
rolb
jo
aas
xchg
lods
mov
and
into
pop
pop
daa
sub
lret
mov
negb
xchg
sub
dec
mov
sub
fnstsw
cmp
stos
movsl
outsl
add
mov
and
pushf
jle
scas
cmp
pop
in
push
inc
and
fs
insb
test
nop
adc
jne
cmpsl
xor
add
cld
xchg
fbstp
jbe
ja
pop
xchg
dec
jl
sub
xlat
inc
call
or
cmp
sbb
and
push
fists
xchg
aas
in
jo
jb
aam
mov
cli
mov
addb
mov
or
add
jb
and
test
sub
xor
or
xchg
into
fldl
sub
popf
data16
pop
mov
adc
mov
mov
inc
dec
jae
rol
push
add
movsb
arpl
and
insl
add
lret
leave
xor
cmpsl
mov
push
cmp
sub
ss
push
imul
pop
or
dec
out
cmpsb
call
jno
pop
jecxz
testl
cltd
test
aad
pop
popa
pop
mov
pusha
orb
dec
pop
call
or
iret
jnp
jg
inc
sub
adc
into
iret
push
jne
sti
mov
int3
inc
mov
movsl
loope
xchg
insb
xor
adc
imulb
test
dec
test
sbb
pop
and
and
xchg
ror
insb
add
ja
push
pop
cmc
mov
das
cmp
ljmp
test
lds
or
nop
jae
push
cmp
pop
imul
mov
jp
xchg
adc
les
ret
pcmpgtw
inc
xchg
enter
dec
int3
popa
out
mov
push
sub
jmp
icebp
outsl
out
or
fnstcw
pusha
testl
punpckhdq
push
xchg
xchg
cmp
gs
stc
lds
or
mov
js
mov
imul
and
andl
xor
iret
pop
sbb
fldcw
int
ret
jae
ficompl
lods
fdiv
stos
jmp
and
aas
lods
leave
and
in
mov
push
jmp
pop
out
scas
or
or
popa
shrl
nop
adc
jg
xor
xchg
mov
inc
fcmovnbe
jmp
dec
xchg
cli
xor
jle
pop
xor
inc
adc
sbb
pop
push
and
mov
adc
loope
js
adc
scas
or
or
mov
jecxz
dec
loop
pop
dec
push
cwtl
pop
nop
lods
mov
mov
aam
mov
ret
rcrb
dec
sbb
fcmovnb
pop
jo
jno
jp
ja
or
add
hlt
std
daa
outsl
xor
out
test
jnp
jg
fsubl
jle
or
stc
sub
pushf
loope
sarb
push
fiaddl
cmp
push
aas
dec
aad
movsb
pop
loope
out
cld
repz
cmpsl
mov
xor
nop
call
xchg
lock
into
sub
add
popa
pushf
or
iret
out
add
fwait
dec
arpl
nop
push
cmp
into
ss
xchg
adc
inc
mov
pop
test
into
pop
sub
je
pop
adc
lahf
test
and
fucomp
jmp
test
or
int
inc
outsl
mov
mov
or
mov
addr16
nop
enter
pop
sub
js
mov
cmp
mov
int
movd
jbe
inc
push
add
sub
xchg
push
xor
test
clc
nop
add
inc
loop
cltd
dec
fisubrl
xchg
imul
sbb
jnp
lret
addr16
dec
cmp
je
dec
aam
adc
or
cmp
scas
ds
push
out
dec
dec
int3
in
mov
out
fisttps
aad
add
sub
addr16
loope
test
mov
mov
movsl
lret
ss
fs
movsl
push
or
adc
clc
and
inc
ret
lahf
repnz
scas
out
push
fimull
xlat
xor
fdivrs
adc
add
dec
and
mov
aam
push
mov
repnz
cmovno
cmp
addl
push
push
or
inc
ja
or
mov
push
adcb
mov
xor
lahf
div
mov
pushf
in
sti
jbe
lcall
out
sub
inc
loop
in
lret
cmp
ret
hlt
cld
loopne
test
iret
pop
popa
ret
mov
mov
pop
sbb
fsubs
mov
pop
mov
sub
push
sahf
xor
cmc
sub
cmp
push
push
int3
in
pop
lcall
data16
inc
and
mov
rcl
leave
imul
or
cmpsb
int3
imul
jle
cmc
or
fmul
dec
pop
js
pop
cmp
cmp
lahf
and
mov
jno
pop
push
movsb
sbb
push
jge
xchg
pop
or
imul
lods
lcall
cmp
std
ja
es
stc
lods
aas
push
test
dec
push
movsl
sub
cmp
mov
das
mov
pop
and
shl
rol
cmp
pop
nop
push
int
dec
add
mov
dec
lods
mov
rcll
sbb
adc
xchg
dec
mov
xor
jb
inc
outsb
shrb
sbb
cmp
clc
mov
cmp
gs
hlt
mov
les
dec
and
jnp
fdivrs
pop
or
pop
push
mov
popa
add
sbb
jo
pop
or
cmp
int3
arpl
or
popl
or
and
and
mov
sarb
dec
rorl
jecxz
jno
lds
out
jmp
pop
and
in
test
add
mov
testl
and
sbb
push
mov
push
dec
cmpsb
push
es
jnp
add
jg
mov
sbb
xchg
jle
add
sub
push
scas
pop
fcmove
es
xor
fbld
rol
syscall
push
test
cmpsl
ret
loope
pop
fidivrs
jne
into
fidivs
test
stc
ret
stos
cmpsl
pusha
add
jo
movsb
mov
dec
sub
jecxz
mov
inc
push
sub
add
sbb
out
das
icebp
pop
sub
xchg
lods
sbb
push
and
push
sahf
xchg
scas
fmuls
aad
mov
rorb
test
jb
inc
imul
pushf
pusha
mov
fs
jns
xchg
sub
push
jb
xchg
sbb
pop
and
push
add
mov
pop
cmp
fwait
in
mov
test
in
pop
sbbl
adc
inc
jg
sub
int3
pushf
push
movsl
int
or
xchg
mov
sbb
leave
sahf
pop
dec
or
mov
outsl
mov
adc
push
sub
push
pop
sub
daa
and
and
jg
adc
jecxz
cmp
mov
out
out
fwait
mov
cld
xchg
and
mov
fucomi
xor
jno
add
mov
pop
push
leave
je
and
cld
pop
inc
in
jbe
aaa
xor
mov
push
adc
xchg
arpl
mov
jne
pop
stos
jb
xchg
mov
dec
inc
xor
out
aas
int3
push
inc
fdivs
rcrl
testl
rolb
xor
mov
mov
push
les
mov
push
cltd
mov
inc
push
jo
mov
pop
add
into
mov
add
nop
xchg
sahf
xor
divb
xchg
pop
add
loop
mov
sahf
adcl
pop
xlat
cmpsl
inc
icebp
orl
push
jo
rorl
repnz
movsl
lock
sub
or
push
xchg
sub
sbb
gs
in
dec
ds
mov
lret
negl
xor
icebp
xlat
outsb
and
inc
cmc
mov
mov
insl
jnp
leave
stos
push
ret
and
insl
mov
push
aaa
test
call
pushf
dec
outsl
push
jl
std
xchg
jo
lea
or
mov
cld
aad
mov
push
in
jl
mov
sub
sbbb
pop
pushf
cli
or
adc
in
lea
push
cmpsl
ds
stos
jmp
repz
xchg
jb
leave
pusha
pop
xchg
mov
ja
data16
int
push
testb
or
negb
pop
cwtl
popf
mov
int3
fcomi
sahf
scas
sub
int3
ss
insb
and
cli
cmp
stos
inc
mov
cmp
adc
xorb
and
xchg
out
mov
or
mov
outsl
les
and
xor
mov
adc
sbbb
gs
pop
push
cs
pop
xchg
mov
or
push
repnz
xchg
mov
or
test
xchg
data16
xor
dec
xor
xor
pop
sub
jl
or
push
out
iret
data16
outsl
push
sbb
add
add
es
and
sahf
mov
dec
loop
sbb
lcall
in
xchg
fildl
mov
mov
ret
jne
out
loope
mov
pop
repnz
call
inc
mov
add
xchg
adc
arpl
xlat
in
ljmp
jmp
fwait
rcrb
or
addr16
mov
jne
imul
sub
jb
pop
or
aaa
push
dec
call
mov
mov
pop
jge
cld
adc
ficompl
pop
loopne
push
xor
out
jmp
shrl
mov
cmp
push
icebp
cmp
mov
dec
addr16
push
xor
into
mov
inc
push
inc
or
adc
or
cmpb
pusha
rol
push
adc
xchg
mov
daa
and
cld
mov
push
pop
jl
sarl
dec
mov
mov
or
cmovp
rcrl
out
decb
xor
sarl
movsl
outsl
test
xchg
lcall
psadbw
pop
movsl
cmpsb
cs
fcoms
or
or
scas
addr16
sbb
dec
sub
insl
cmp
xor
xchg
push
mov
jno
fdivrp
and
adc
aad
cwtl
stos
or
push
movsb
mov
shrl
cmc
out
xlat
dec
dec
stc
mov
int
jecxz
mov
xor
mov
mov
add
mov
or
add
loope
js
movsl
xor
cmc
mov
aam
sub
hlt
stc
sub
rolb
rorl
and
sbb
inc
dec
mov
mov
loope
pusha
ss
pop
test
cmpsl
mov
push
push
mov
and
push
daa
push
and
movsb
clc
xchg
jl
push
loop
jle
hlt
lahf
adc
dec
inc
into
insl
inc
and
cmpsb
add
jne
mov
xchg
and
or
ja
fsubrs
cmp
aaa
jl
push
addr16
inc
pop
arpl
jge
addb
mov
mov
loopne
push
aad
shlb
mov
enter
xchg
xchg
lea
mov
jge
dec
scas
mov
sbb
int3
xchg
out
ret
into
and
sbb
pop
and
icebp
xchg
jecxz
xchg
test
dec
sahf
lods
xchg
fiadds
and
iret
or
in
sahf
and
cmp
lods
lds
fmull
push
adc
lea
aas
loop
sub
mov
cmp
push
xor
sbb
out
jg
push
in
jp
xor
cmpsl
ds
pop
push
jmp
scas
test
sub
cmp
jne
sub
add
andl
test
lds
ds
mov
and
xchg
push
dec
xor
mov
cwtl
push
das
xchg
daa
subb
cmp
pop
jae
sub
rolb
xorb
mov
test
or
enter
icebp
mov
jne
mov
xchg
sbb
repz
jno
addb
jnp
xor
aas
jge
enter
jle
ret
cs
or
or
pusha
pop
scas
pop
loope
mov
sbb
fisubs
push
sub
mov
fistpl
sub
fnstcw
divb
nop
repz
xor
jb
sub
jg
fcmovb
or
lret
mov
movsl
push
jg
scas
mov
inc
mov
ds
jae
xchg
mov
jb
cltd
in
push
fists
mov
inc
add
xor
inc
jg
mov
push
frstor
sub
movsb
fsubrs
xor
xchg
je
push
call
test
pop
outsb
out
xchg
dec
mov
fsubr
mov
xor
sbb
push
inc
lds
int3
je
fsubr
and
int3
push
inc
xchg
pop
fnsave
pop
das
jg
push
jo
mov
mov
cltd
shrl
fstpt
push
iret
sbb
in
fs
pop
xor
push
std
std
lods
ljmp
adc
mov
cmpsb
inc
inc
adc
sti
sbb
mov
sahf
ss
fidivs
add
ja
push
mov
lahf
push
lods
inc
xlat
out
dec
loope
loop
jecxz
sbb
hlt
test
repz
std
inc
or
loope
outsb
push
sub
movsl
push
ret
mov
les
jmp
xchg
in
out
inc
call
mov
xor
and
std
cltd
mov
notl
in
sub
jno
ds
or
sub
aam
push
inc
add
inc
and
sbb
ret
shll
mov
rcll
loopne
sahf
bnd
lods
jp
out
dec
pop
lret
rcrl
ds
push
repnz
stos
outsb
mov
dec
jbe
jl
lods
inc
sbb
sbb
mull
test
daa
gs
add
jl
into
imul
mov
ljmp
ret
int
es
sbb
mov
icebp
and
outsl
bound
repnz
imul
sbb
and
cmp
or
outsb
fchs
dec
cmc
cmpsl
lret
in
push
shlb
jle
jnp
insl
jno
or
inc
cltd
ljmp
mov
iret
push
aas
inc
clc
mov
cmpsb
icebp
out
das
enter
jne
push
sub
dec
xchg
and
jo
inc
and
aaa
shrb
xchg
jb
sbb
addr16
add
movsb
das
pop
pop
fwait
xchg
dec
neg
out
shlb
mov
jp
sub
xchg
mov
aaa
clc
mov
xchg
stos
je
dec
js
aas
filds
lock
push
mov
bound
nop
pop
mov
lret
jl
inc
outsl
iret
stc
repz
in
or
xchg
cltd
insb
neg
in
mov
sub
movl
inc
dec
xchg
mov
push
imul
subb
les
push
scas
cmpsb
cmc
pop
gs
insb
xor
popa
hlt
push
cwtl
das
aam
popa
mov
jge
fiadds
sub
add
test
sbb
addr16
add
adc
shll
mov
mov
dec
push
adc
enter
iret
cmp
ret
pusha
movsb
jnp
mov
push
push
cmc
push
popa
pop
inc
add
add
adc
cwtl
stos
xor
insb
jle
sub
sub
pushf
in
and
icebp
adc
jae
ljmp
scas
in
pop
jo
lea
leave
inc
arpl
push
and
jo
inc
pop
fnstcw
fsubrl
shrl
xchg
ss
popf
testb
push
out
sahf
fscale
cltd
pop
jbe
enter
std
es
cmp
test
into
mov
nop
insb
add
aad
mov
in
and
stc
mov
nop
pop
pop
movsl
cmp
dec
decl
out
adc
lds
ja
mov
mov
nop
xchg
jl
je
shll
stc
fidivs
dec
pop
inc
movsb
add
scas
rol
push
xor
and
mov
lahf
mov
testb
fisubrs
lds
mov
mov
xchg
add
faddl
push
dec
test
and
xor
js
bound
or
jl
lds
loopne
call
or
cmp
xlat
repz
pop
cmp
ljmp
xor
inc
jnp
popf
dec
fidivrl
clc
and
mov
mov
xchg
mov
mov
icebp
dec
pop
adc
push
es
jo
scas
ror
or
fs
dec
popa
mov
mov
dec
movswl
mov
fdivrs
sub
xchg
xor
lods
movsl
sub
xor
imul
cli
inc
jmp
adcl
push
gs
int3
pop
loopne
xchg
or
insl
and
xor
pop
mov
mov
mov
pop
repz
add
jp
shrb
sub
mov
push
outsb
repz
dec
or
push
lds
inc
lcall
lds
cld
insb
xor
push
inc
popa
loopne
bswap
shl
notb
out
mov
out
outsl
shlb
xor
add
lahf
inc
mov
in
adc
out
dec
pop
sahf
xor
mov
js
aad
int3
mov
out
cmpsl
or
stos
mov
aam
dec
dec
mov
push
mov
rorl
cmp
mov
and
mov
add
mov
scas
idivb
jg
pop
or
cmp
int3
iret
js
push
inc
sbb
xlat
push
mov
in
out
inc
pop
call
xor
xchg
ret
fdivs
into
or
push
stos
push
sbb
imul
adc
pop
pop
cmp
pop
xor
add
daa
jmp
and
ljmp
sub
pop
sub
into
iret
cmc
mov
inc
dec
aaa
test
aam
push
jmp
adc
inc
scas
nop
imul
aam
inc
fisubrl
hlt
movsb
push
xor
and
jg
and
lea
popf
mov
or
mov
cmc
sbb
das
loope
roll
dec
mov
push
mov
mov
add
out
mov
mov
mov
lds
push
pop
lahf
push
aam
jae
inc
push
or
cwtl
xchg
adc
sbb
inc
xchg
xor
xchg
fdivr
xchg
or
sbb
mov
xor
fstl
test
das
in
gs
sbb
and
ljmp
push
and
fimuls
mov
hlt
mov
sti
cmp
out
xor
popa
icebp
cmp
or
sbb
rcrb
out
mov
dec
stos
mov
pop
mov
outsb
jne
lods
xlat
lea
sti
mov
dec
push
add
cwtl
fnstcw
xor
and
insl
inc
inc
jmp
pop
and
fidivl
fucomi
fstl
or
xor
scas
arpl
cmp
aaa
ss
movsl
jo
sti
dec
push
pushf
jge
dec
stos
fistl
js
test
lret
jne
lods
cmp
nop
adc
pop
cli
fs
fimuls
nop
add
fiaddl
pop
cld
stc
mov
daa
fcmovu
cmp
cld
scas
jnp
mov
imul
nop
inc
push
mov
mov
loope
inc
sbb
adc
popf
jb
mov
je
sahf
mov
xchg
ret
pop
jbe
sub
adc
outsl
testl
ljmp
sbb
ret
sbb
add
dec
loope
pop
pop
mov
pop
mov
or
pop
mulb
stc
sub
or
mov
push
enter
push
dec
stos
inc
adcb
push
clc
cmp
jb
les
fisttps
test
cmpsb
movb
iret
fistl
in
adc
cwtl
inc
pusha
and
mov
test
jbe
cmp
gs
mov
adc
lret
movsl
mov
arpl
inc
mov
xor
out
ja
in
cmp
aam
dec
shrb
jno
bound
test
aad
fistl
rorb
movsb
mov
popa
call
adc
pop
mov
push
xchg
test
test
pop
js,pt
nop
dec
dec
and
pop
sub
jne
xchg
mov
and
lds
xchg
push
outsl
fsubrs
or
testb
pop
dec
loopne
add
pop
push
addr16
mov
push
out
dec
les
insb
jbe
inc
add
ja
insl
cwtl
mov
sar
rorl
dec
loopne
adcl
mov
lods
repnz
fdivr
add
ja
fdiv
dec
sub
enter
add
stos
dec
sbb
push
pop
mov
scas
shrb
bnd
in
loop
gs
enter
jne
mov
add
xor
jae
jecxz
cmpl
jl
push
mov
mov
jmp
sub
stos
loopne
pop
adc
xor
push
dec
in
push
and
push
cmp
subl
or
dec
cmp
iret
jge
ret
dec
lret
enter
hlt
xchg
movmskps
mov
or
xor
mov
sbb
xor
push
adc
loop
ja
sti
inc
jmp
adc
inc
xor
cmp
decl
sbb
cmp
push
loopne
stos
int
push
fucomp
sarl
call
dec
sbb
mov
jge
sbb
clc
popl
mov
push
aaa
jae
dec
jecxz
ljmp
insl
sub
dec
out
cld
xchg
mov
rorb
ss
mov
addr16
dec
out
mov
in
iret
lods
adc
push
test
ja
out
in
mov
lods
mov
push
sbb
leave
fistpl
movsl
out
mov
push
xor
sub
xchg
ljmp
fldenv
pop
loope
jge
mov
nop
pop
inc
sub
enter
insl
jo
mov
popa
lock
popa
pop
lahf
in
xchg
int
pop
js
add
sahf
adc
mov
mov
jb
mov
iret
xor
jecxz
lret
jl
mov
icebp
mov
je
sub
mov
inc
xor
shrl
stos
push
jecxz
js
ds
dec
in
cmp
or
xor
jg
lret
in
jb
sti
add
andb
mov
mov
mov
sub
sub
out
pop
and
scas
bnd
test
ja
jle
xchg
das
dec
push
and
sbb
xchg
cmp
out
icebp
popf
xor
scas
lock
aad
and
negb
and
mov
cmp
aas
push
push
mov
aad
dec
pop
pop
sub
dec
add
push
sbb
rorb
popf
pop
repnz
arpl
xchg
mov
loope
and
mov
mov
mov
mov
repz
jp
mov
aas
fwait
push
imul
call
and
ds
addb
pop
mov
xor
sti
fcomi
or
inc
fsubrs
mov
xor
insl
mov
inc
fcoml
inc
or
fwait
xor
mov
push
je
jle
cltd
push
imul
inc
xor
hlt
pop
adc
inc
inc
das
ja
popa
jbe
cwtl
out
mov
into
sarb
shll
inc
rclb
xchg
pop
lret
add
adc
push
inc
sahf
xor
subb
push
mov
aas
out
es
sbb
add
jo
scas
stos
inc
loope
sbb
dec
xchg
sub
mov
xor
stos
cmc
arpl
scas
test
and
xchg
enter
pop
lea
data16
mov
mov
ss
and
addr16
rcrl
mov
sbbb
daa
and
stc
jp
shrb
jne
into
sbb
mov
or
in
out
in
jp
iret
dec
dec
push
mov
add
sbb
insl
insl
outsl
addr16
mov
rclb
and
pop
fidivs
adc
in
xchg
push
xchg
int
movsb
call
ficomps
push
shll
cmp
int
push
iret
loope
dec
push
sbb
test
mov
push
mov
mov
cmpsl
fadds
xchg
clc
aad
int3
jae
and
repz
mov
cmpsb
xchg
pop
adc
jne
xor
outsl
and
jg
dec
adc
jl
push
xor
jno
push
push
into
xorb
pop
push
icebp
sbb
mov
insb
push
adc
nop
ja
pushf
push
fidivs
lods
fistl
insb
sub
cli
enter
or
faddl
ljmp
or
out
dec
cmpsb
inc
es
cld
jg
inc
adc
fistpl
data16
push
dec
aam
push
add
cmp
mov
std
fst
pop
stos
xchg
out
ljmp
nop
jmp
les
push
mov
ljmp
jmp
rol
shlb
movmskps
in
orb
or
outsb
int3
arpl
aaa
repz
es
jae
push
mov
inc
repz
in
mov
mov
cmp
cmp
fs
out
mov
and
imul
mov
enter
mov
cmpb
mov
out
mov
push
fdivs
adc
shlb
movsl
repz
mov
push
mov
push
js
out
xchg
or
mov
or
pop
and
push
xchg
clc
ret
lods
sar
sbb
add
clc
mov
mov
xorl
inc
cmpsb
dec
addb
decl
cmp
pop
mov
in
pop
cmpb
mov
mov
fimull
mov
or
std
xchg
fs
pop
les
and
xor
out
xorl
xlat
int
or
pop
stc
xchg
sub
add
sub
push
sub
xor
dec
mov
subb
adc
mov
cmp
push
cmpsl
push
dec
sbb
mov
lahf
sahf
mov
cmp
mov
lds
inc
adc
out
in
jmp
daa
inc
cmp
jecxz
or
scas
xchg
xor
ss
gs
mov
ds
pop
addr16
sbb
fisubs
test
icebp
cld
mov
mov
cmp
dec
fld
xor
xchg
gs
aas
mov
int
xchg
and
dec
orb
mov
aaa
cmp
jp
mov
ret
jle
jecxz
adc
test
mov
movsl
daa
mov
loope
inc
js
mov
jne
int3
cmc
pusha
ja
adc
sbb
in
add
scas
add
mov
xlat
pop
movsb
test
lret
fbstp
mov
std
and
mov
xchg
push
inc
ret
cmpsb
imul
pop
daa
lahf
out
dec
inc
stc
sbb
lcall
aaa
rcrl
nop
pop
subl
push
jg
clc
jb
lea
add
xchg
mov
bound
mov
pop
shrb
pop
jbe
mov
enter
dec
jae
sti
push
mov
ret
pop
cmc
cli
xchg
daa
test
sub
sbbb
push
push
repz
or
adc
push
sbb
cld
cwtl
and
addr16
xchg
mov
xor
es
xchg
pop
cmp
std
sbb
sahf
pop
add
mov
mov
adc
mov
mov
sbb
lods
inc
pop
cmpb
adc
lods
adc
xchg
and
cmc
adc
dec
pop
mov
jne
pop
push
jmp
lcall
cwtl
mov
leave
sub
adc
inc
mov
or
ja
add
out
ficoms
cwtl
testl
cli
test
aas
loop
xchg
out
sbb
dec
dec
push
ss
push
das
lcall
ror
cs
mov
pop
repnz
push
cmpsb
push
push
inc
jns
jp
pop
repnz
xchg
sub
fiaddl
push
pop
testb
xor
adcb
pop
sbb
aad
mov
push
in
adcl
sub
and
cmpsb
adc
mov
cmp
add
jne
pop
cmp
jae
pop
cmp
push
addr16
and
stos
test
lds
push
push
mov
pop
scas
sub
dec
filds
fwait
sbb
data16
shr
pushf
xor
aam
ja
mov
loop
int3
decb
xchg
lock
mov
mov
add
pop
push
dec
sahf
outsl
stc
mov
pop
xchg
add
mov
fldl
roll
cmp
ljmp
and
or
cmp
pop
scas
or
test
loop
inc
ftst
pop
insl
jge
fistpl
xorl
lret
call
arpl
fdivr
adc
and
test
add
fmull
and
iret
in
test
lret
xchg
jne
push
fsubl
add
jb
fdiv
inc
nopl
popf
mov
fdivl
lods
jae
filds
and
mov
popf
mov
mov
push
js
fst
dec
rcrb
sbb
dec
jbe
sti
daa
mov
push
pop
pop
push
or
fwait
scas
pop
sub
sub
jp
jne
stos
test
push
adc
jbe
push
out
cmp
push
jp
aaa
or
or
or
cmp
xchg
or
shl
testl
iret
mov
xchg
pop
xchg
leave
rorb
iret
jmp
in
xchg
andb
sub
cmpl
mov
sbb
mov
lahf
inc
aas
mov
jp
ret
push
mov
pusha
jecxz
test
fsubr
rcrl
inc
pop
std
inc
out
aam
fldl2t
insb
mov
ss
or
cmp
jns
sbb
jl
dec
fldenv
popa
bound
cmc
mov
jo
cmp
fcoms
fdiv
xchg
xchg
lods
dec
jnp
or
out
push
dec
enter
pop
xchg
daa
imul
cmc
pop
mov
add
ja
cli
and
jle
nop
mov
xor
negl
sub
mov
jno
xchg
popa
pop
mov
pop
mov
sub
faddl
sbb
sti
dec
movsb
cmp
xchg
xchg
sbbb
xor
in
and
pop
fdivl
jmp
mov
xlat
stc
sub
pop
xchg
sbb
insb
jns
add
sahf
jmp
lods
jl
push
das
rcrl
out
nop
mov
std
movsl
cmp
lret
inc
es
lahf
push
imul
sbb
add
push
push
dec
pop
int3
jle
fdivl
mov
stos
outsl
xchg
ljmp
outsb
cmp
sbb
jnp
xchg
sub
pushf
hlt
ja
mov
pop
mov
jnp
mov
sbb
cmp
push
pop
sub
loope,pt
js
inc
jmp
jg
mov
xlat
imul
aad
mov
mov
das
lods
hlt
or
inc
sbb
cmp
inc
cmp
scas
jg
mov
xchg
repz
mov
fwait
cmp
outsl
lds
push
call
imul
push
lock
and
movsb
jo
jae
push
push
lcall
and
lds
pop
mov
mov
sub
les
cmp
aam
or
or
push
repnz
and
cmp
cld
add
mov
filds
sbb
push
dec
pushf
or
cmpb
fcoml
hlt
fiadds
inc
push
xchg
js
flds
mov
outsl
cmc
sub
call
mov
xor
xchg
xor
pop
imul
and
outsl
out
repnz
and
fldcw
les
cmc
xchg
lds
sbb
movsb
repnz
cmp
insb
cmpsb
cmp
pop
lea
adc
stos
jg
ja
aam
fs
jp
pusha
into
dec
ds
test
mov
out
enter
in
sbb
cmc
stc
nop
daa
xor
dec
jb
lock
xchg
rolb
pop
fsubr
inc
arpl
adcl
fisttps
mov
mov
jl
aam
sahf
andl
test
jne
cmp
lea
rorl
or
sbb
test
in
jecxz
rcr
xchg
clc
int3
mov
sub
jp
jle
scas
jnp
lea
add
test
sbb
rorb
xor
cmp
adc
pushf
scas
negb
repnz
add
mov
mov
lret
js
pop
pop
sbbl
loope
sbb
mov
ja
cmp
subl
fists
lock
mov
mov
mov
sbb
sbb
into
imul
ljmp
or
mov
jge
fs
aam
in
inc
in
pop
xor
cmpsl
jl
and
popf
pusha
test
lock
inc
cltd
ja
ds
daa
and
mov
xchg
pop
dec
inc
adc
movsb
jp
fdivrl
sub
xchg
ret
mov
xchg
sbb
or
sbb
add
mov
lea
mov
sbb
add
add
xchg
insb
and
loopne
xchg
outsl
lret
mov
push
xchg
bound
inc
push
lret
sbb
ss
fmul
fldl
int
lret
jge
sbb
push
insl
dec
out
jbe
jo
scas
inc
ficompl
cmp
enter
sub
sbb
or
cs
mov
pop
and
mov
jns
add
xchg
pop
fistpl
ret
fs
cltd
dec
and
jbe
enter
bound
or
pop
lock
pop
adc
and
std
cmp
cmp
fbld
rclb
inc
pushf
js
shrl
push
pop
icebp
orb
adc
mov
cwtl
mov
cld
pop
and
and
nop
dec
inc
in
pushf
inc
push
outsl
sbb
jg
cltd
mov
adc
stos
pop
lahf
inc
mull
sbb
lret
mov
out
rcrl
xchg
adc
or
outsl
xchg
mov
decl
icebp
mov
jle
push
jbe
scas
loop,pt
sahf
xor
sarb
ss
jne
shll
mov
and
cmp
mov
test
adc
imul
shll
dec
out
xor
pop
inc
popa
dec
dec
mov
sub
jae
adc
insl
popf
mov
xorb
sbb
add
cwtl
cmp
sbb
out
cs
cmc
xchg
test
mov
int3
fbstp
jns
cmpsb
inc
jbe
lods
inc
dec
adcl
mov
push
adc
icebp
xchg
sub
pop
add
mov
push
xor
mov
and
gs
xor
pop
cmp
loopne
notl
add
mov
movl
mov
test
sbb
inc
mov
in
sbb
insb
and
out
js
adc
cmpsl
pop
fdivrl
pop
mov
shrb
imul
jl
cmc
jg
out
iret
jmp
mov
popa
xor
jmp
and
ret
xor
into
and
call
fdivs
int
das
fs
add
mov
xchg
pop
push
dec
mov
lahf
jl
cmp
jns
out
stos
mov
xlat
mov
pop
repnz
xlat
push
call
cmp
push
jo
mov
xchg
imul
sub
mov
sub
int3
adcl
mov
fs
inc
fcmovb
adc
dec
or
imul
in
enter
insl
mov
cwtl
pop
lret
cmp
in
fdivrl
bound
aas
lahf
lock
mov
sarb
add
dec
mov
push
mov
fiaddl
shll
jle
push
stc
negl
fucomip
inc
sbb
inc
dec
push
dec
loopne
inc
sub
pusha
test
enter
mov
cmp
popa
pop
lcall
or
ljmp
mov
lret
xorb
roll
add
xor
add
ret
add
pop
sbb
nop
pop
mov
mov
or
push
out
imul
stc
dec
aaa
pop
cltd
mov
mov
ja
outsl
fsubs
adc
mov
lods
mov
cmpsl
std
inc
cs
fdivl
inc
or
cwtl
jne
push
jge
outsl
rolb
jge
mov
dec
push
push
xchg
xor
mov
adc
mov
jp
inc
jae
adc
in
cmpsb
mov
mov
jo
clc
adc
xchg
in
sub
loope
gs
das
xchg
xchg
int
mov
gs
pushf
mov
mov
dec
rol
ja
xchg
xlat
insl
jbe
stos
jnp
sahf
fs
mov
mov
out
out
into
stc
pop
adc
add
cmp
lods
scas
add
jns
mov
pusha
ficompl
pop
scas
add
push
out
fstl
inc
mov
int3
loopne
enter
pop
push
pop
jno
xchg
popa
ret
xor
mov
and
insl
cmp
xchg
mov
sahf
mov
cmp
js
inc
xchg
hlt
mov
xchg
mov
add
les
stc
movsl
fdivr
cmp
test
lret
fnsave
lods
dec
rcrb
std
dec
mov
fs
or
aad
lods
shr
fst
push
ljmp
ljmp
sub
lahf
xchg
cs
dec
adc
icebp
loope
push
cs
fs
push
sub
insl
adc
fs
in
and
sti
xchg
daa
imul
or
scas
stc
ss
fnstcw
xor
push
sbb
sbb
lcall
sub
aam
inc
dec
jae
adc
lods
aaa
pusha
inc
push
hlt
inc
fcompp
orl
mov
dec
jge
push
sub
or
scas
ret
or
jae
mov
call
and
ss
imul
push
addr16
pop
out
insl
nop
xor
loop
mov
and
std
add
insl
push
dec
aam
fwait
xchg
dec
in
cmpsl
sbb
loope
ret
shrl
pop
sub
mov
inc
loopne
sub
mov
daa
lock
or
pop
pushf
in
jae
pop
movsl
push
out
sub
out
cwtl
jbe
xchg
mov
push
aam
xor
mov
sub
pop
ficompl
add
orl
cltd
push
out
jl
push
cmpsb
mov
ud1
jl
stos
mov
sub
sbb
pop
cmp
add
stc
neg
jmp
xor
movsb
mov
mov
and
fwait
push
aad
adc
test
dec
aas
mov
repz
shlb
andl
into
mov
adc
insl
lret
jmp
mov
rclb
sbbb
sub
and
and
mov
scas
orb
mov
sbbl
clc
pop
lahf
jbe
and
xchg
std
xchg
mov
xchg
fisubs
stos
pop
pop
ficomps
testl
cmp
xlat
outsb
mov
jl
stos
scas
jecxz
push
arpl
pop
sub
leave
icebp
xchg
lds
fs
int
sub
in
jo
insb
add
jne
xchg
cmpsl
orb
xchg
fbld
and
iret
daa
cmpsb
out
push
loopne
mov
mov
enter
mov
stos
xchg
test
jae
hlt
dec
push
dec
dec
loope
jno
cmc
loop
push
and
lock
mov
in
daa
nop
aas
dec
inc
cmp
lret
call
or
insl
cmc
xchg
movsl
sub
and
gs
cmp
test
and
jno
fimull
push
jge
adc
lds
xlat
lods
xchg
push
imul
jne
push
adc
frstor
andl
mov
or
enter
and
cld
fisubl
add
fisttpll
pop
xchg
mov
push
sub
loope
push
sti
add
mov
icebp
xchg
clc
mov
sbb
dec
pop
decl
inc
xchg
sbb
inc
stos
sub
xor
inc
aad
andl
jg
sbb
push
xor
mov
mov
mov
js
adc
ret
lcall
xlat
sbb
cmp
adc
aas
push
push
xor
leave
mov
movsl
mov
outsb
loope
adc
cmp
mov
inc
shlb
sbb
inc
mov
js
rclb
lret
iret
and
mov
fdivrs
xor
and
jge
pop
cmp
adcb
out
scas
inc
mov
jmp
dec
repnz
mov
aam
inc
jne
int
inc
arpl
inc
test
pusha
xor
fsubs
ss
mov
xchg
sub
xor
mov
dec
xchg
jae
out
inc
fisubs
xchg
jmp
andb
ljmp
push
rcll
push
mov
cmp
arpl
add
cmp
insl
push
inc
icebp
sbb
aas
js
push
mov
pop
aaa
push
cmp
int
out
push
pop
lock
mov
mov
frstor
inc
popf
mov
and
dec
inc
add
mov
data16
and
in
xchg
and
fsubs
push
cmp
xchg
inc
xchg
dec
inc
adc
pop
dec
fsubrp
test
jnp
push
aas
stc
inc
inc
xor
pop
xor
clc
sbb
mov
inc
push
lods
jnp
add
xor
pusha
stc
xlat
aad
sub
lea
insb
dec
mov
orb
sub
push
or
xchg
dec
aas
cmpsb
cmp
or
add
ja
loope
dec
cmp
cmp
repz
adc
out
cmc
icebp
push
outsl
and
lea
imul
test
ret
mov
pop
out
fstpl
in
or
je
out
push
add
fistpl
push
cltd
std
outsl
lock
rorl
adc
adcb
mov
test
lcall
xor
mov
dec
cwtl
cmc
xchg
lock
negl
and
shlb
pop
add
out
mov
insb
jb
sahf
ret
jl
add
dec
sbb
and
push
call
sbb
in
dec
rclb
mov
jl
sub
xchg
push
incl
dec
jmp
inc
inc
add
sbb
add
loope
pop
mov
sub
out
adc
cs
pushw
inc
mov
or
loope
insl
xchg
into
and
nop
mov
push
jo
mov
cmpsb
or
movsl
xor
adcb
and
xchg
or
mov
dec
jmp
out
sahf
adc
cwtl
cmp
pop
es
fimuls
insb
push
inc
and
fsubrs
cmp
addr16
mov
cld
movsl
mov
aam
xchg
mov
popf
xchg
dec
sbb
mov
arpl
sbbb
add
daa
ret
sti
xchg
repz
adc
mov
stc
or
jbe
insb
push
popa
out
and
out
fstpt
or
mov
adc
fnsave
xchg
inc
fmulp
call
sub
ss
jb
cmc
or
xchg
push
out
out
es
loopne
repz
pop
cmp
inc
pusha
jns
call
je
mov
movlps
lret
cmp
push
mov
scas
push
notb
mov
je
inc
into
fimuls
sbb
mov
dec
into
mov
scas
stos
jge
cmp
outsb
shll
jbe
push
mov
iret
dec
xchg
push
pushf
scas
xor
out
jb
lock
cmp
out
ds
out
lret
adc
aaa
out
push
lock
fs
inc
cmpsl
inc
sbb
arpl
mov
lcall
rorb
add
sbb
or
ss
sahf
and
sbb
and
push
outsl
push
xchg
dec
and
stos
jns
mov
lahf
imulb
dec
pusha
mov
inc
xchg
push
out
mov
je
mov
jl
and
mov
movsl
dec
cmp
jle
pop
shll
pop
mov
mov
jno
push
lret
stos
imul
inc
mov
xor
stc
xchg
repz
jle
and
mov
fsubs
add
mov
jne
dec
cmpsl
dec
jp
mov
fistps
mov
pop
lock
nop
sub
rcrl
jnp
jl
fildll
repnz
movsl
int3
movsb
sti
xor
or
adc
std
test
dec
pop
cwtl
and
xlat
popf
fwait
push
pop
enter
aad
enter
push
test
in
or
fsubr
jl
in
andb
push
das
std
adc
aaa
fwait
adc
int3
hlt
fcmovnb
loop
xchg
rcll
test
mov
mov
dec
jmp
mov
sub
aaa
pop
stos
icebp
sbb
lock
outsb
jmp
jae
repz
mov
fsts
sub
or
xorb
cmp
fwait
sub
dec
sbb
xchg
mov
roll
cmp
cli
push
cmp
insl
stos
enter
lret
hlt
lahf
mov
lock
and
insb
push
jno
sub
adc
dec
or
mov
in
mov
arpl
sub
inc
fdivrl
sub
add
hlt
int3
loopne
rclb
jnp
pop
popf
inc
in
or
xor
sub
mov
lret
cli
lret
sti
sbb
dec
sbb
jbe
in
data16
pop
mov
repnz
dec
dec
fisubl
mov
cmp
lock
push
ljmp
mov
cs
mov
fisubrl
cmp
test
xchg
loopne
sub
std
inc
inc
repnz
mov
aas
js
scas
mov
test
ror
dec
xor
lods
movsb
pop
inc
cltd
xor
mov
add
fcmovnu
or
loopne
outsb
mov
inc
jecxz
xchg
scas
or
insl
test
mov
ret
mov
cmpsl
pop
inc
fsubr
inc
ljmp
mov
mov
ret
mov
mov
mov
rorl
dec
out
pop
or
push
xor
jmp
shrl
mov
and
lock
fs
inc
mov
das
inc
sub
jbe
push
lods
inc
jmp
std
xchg
cli
or
sbb
adc
ss
repz
scas
cmp
xchg
and
movb
dec
xor
push
out
cmp
hlt
hlt
mov
sub
and
out
xchg
enter
lods
or
stos
push
and
mov
outsb
xchg
imul
movsb
sbb
dec
inc
sar
pop
lock
sbb
ja
test
leave
sahf
ret
icebp
or
jmp
mov
dec
sahf
sub
or
jbe
dec
test
test
pop
cmpsb
cmp
fisubl
jg
push
dec
dec
jmp
xorb
lcall
and
les
cli
jle
lea
rcrl
dec
cli
and
jmp
dec
fldt
mov
pusha
cld
sbb
std
decb
adc
xchg
divl
xchg
add
inc
mov
aas
adc
scas
insb
faddl
xchg
and
dec
add
jecxz
jg
xchg
mov
out
data16
inc
fimuls
sbb
mov
mov
mov
push
push
sub
popa
inc
icebp
adc
pop
loop
fwait
xor
imul
dec
cltd
fisubrs
out
mov
popa
dec
scas
ret
jg
imul
push
insl
shlb
aad
clc
cmpb
pushf
dec
jnp
mov
fiaddl
push
xlat
shl
or
jno
cmp
inc
inc
add
test
stos
out
testb
adc
mov
outsl
sub
test
pop
int
insl
xor
sub
neg
dec
sub
imul
push
inc
lret
imul
mov
push
xchg
mov
popf
sbb
out
xchg
les
jge
jge
jecxz
cmp
cwtl
imul
cld
je
lcall
fbld
inc
into
xor
inc
jnp
add
enter
mov
lods
into
sti
dec
out
jp
mov
ds
pop
fwait
pop
addr16
xchg
inc
sbb
fistpl
xchg
xchg
cld
mov
mov
dec
sub
pop
test
adc
lret
or
xchg
jge
call
xor
mov
dec
in
push
add
or
mov
push
push
mov
scas
xchg
clc
sbb
push
sub
outsb
mov
xchg
icebp
pop
out
rcrb
mov
xchg
addr16
dec
andb
sbb
out
mov
cltd
iret
mov
push
xor
fst
icebp
dec
ss
out
test
sbb
sub
sar
sbb
outsb
or
cmpsb
rorb
rol
iret
push
aam
ret
lods
sbb
sbbl
sub
inc
test
lret
fsubr
sub
mov
js
add
ljmp
push
fwait
and
out
mov
jne
sbb
shl
xor
xor
adc
pusha
aam
mov
xor
sbb
lcall
push
cli
aam
xor
arpl
xor
mov
mov
addb
push
jo
mov
ja
aam
jnp
pop
pushf
aad
adc
jb
nop
addr16
aaa
pop
test
inc
xchg
lret
bound
cmp
fldenv
xor
mov
or
movsb
ds
out
imul
test
and
mov
loopne
inc
xlat
imul
or
mov
arpl
xchg
fwait
sahf
iret
test
and
cli
xchg
gs
cmp
sete
sti
jl
push
and
out
lret
fsts
mov
lret
fisttps
cmpsb
cmpsb
cmp
hlt
mov
lcall
mov
sub
add
adc
push
shll
cmp
cmp
and
pop
xchg
inc
ret
jbe
mov
outsl
test
aas
sub
mov
sub
clc
sbb
test
cwtl
and
add
lcall
pop
movsb
mov
jle
or
pop
incb
sub
lahf
scas
mov
inc
outsb
stos
es
clc
inc
push
mov
xchg
into
arpl
ljmp
pop
xchg
cs
in
add
xchg
add
lret
cs
test
lret
or
arpl
jg
movsl
xor
out
das
jg
scas
cmovg
stos
add
pop
xor
scas
bound
mov
push
mov
inc
lock
pop
xlat
jmp
fbstp
mov
ds
sub
cmpsb
pop
or
scas
pushl
into
imul
popa
test
or
out
stos
pop
jae
lahf
inc
xchg
adc
jo
sub
andb
adc
and
push
dec
mov
add
mov
push
sub
scas
mov
movsl
std
inc
dec
pop
jnp
mov
ja
xchg
inc
sub
lcall
push
cmc
dec
stos
adc
inc
loopne
push
hlt
mov
adc
sub
xchg
cltd
mov
sbb
sub
std
or
push
xor
fldl2t
pusha
outsb
inc
loopne
ret
cmp
jbe
inc
jmp
rclb
sbb
ficomps
pop
addl
ret
outsb
pop
mov
lods
adc
add
fucomi
lahf
pop
lods
es
mov
mov
xchg
pop
daa
push
fwait
aaa
lods
aaa
xor
xlat
test
lret
adcl
inc
loop
push
mov
or
fsubrl
bnd
das
lds
dec
aas
mov
inc
and
mov
psubsb
add
adc
mov
push
push
testb
xor
mov
call
or
add
sahf
push
ret
jbe
jne
in
xchg
fcoml
cmpsb
out
lock
lahf
aad
or
mov
in
mov
insb
xchg
push
pop
mov
cmp
test
es
inc
xor
into
pop
imul
mov
or
dec
movsb
cmp
mov
mov
mov
das
mov
mov
cmp
aaa
xchg
imul
add
lods
pop
push
lock
cs
sbb
mov
push
mov
ljmp
sub
psubb
jle
adc
mov
les
shll
mov
sti
mov
pop
and
inc
clc
inc
fcompl
bound
sbb
scas
mov
jb
popa
stos
jo
inc
or
jb
iret
fidivl
insb
rclb
push
dec
xchg
leave
mov
daa
std
xor
xchg
into
dec
loope
dec
scas
out
and
lcall
mov
hlt
push
add
mov
movsb
cmp
popa
xor
xchg
pop
ret
mov
ss
push
pop
xor
mov
dec
mov
xchg
dec
sbb
popa
add
xor
movsl
shll
mov
and
inc
push
push
gs
jns
les
loop
push
arpl
fdivs
adc
cmc
inc
frstor
arpl
jno
enter
pop
loope
popf
xchg
xor
and
and
nop
ret
jb
dec
shll
test
pop
outsb
push
and
mov
fucomi
and
lahf
jecxz
sbb
lret
nop
popa
jo
sbb
sub
jle
or
inc
insb
pop
mov
test
fwait
jne
or
cs
jle
xchg
ficoms
mov
mov
lds
outsb
loop
push
fsubs
mov
cmp
daa
and
jge
inc
lea
std
xor
sahf
mov
ret
ret
es
lahf
iret
shrb
aas
or
pop
repz
loopne
int
lret
test
divb
test
hlt
or
es
pop
call
repnz
add
in
movsl
mov
sbb
fidivs
neg
ja
sbb
xor
xchg
bound
xchg
cmpsl
lods
push
push
leave
decb
add
in
xchg
push
sbb
or
cmpsl
xchg
pop
bound
shll
push
dec
xor
sbb
cmp
cwtl
xchg
push
jmp
lcall
mov
pop
out
imul
or
ret
pop
mov
cmpsb
dec
popa
fsub
cmp
cmp
aam
fs
loopne
dec
addr16
test
jg
loop
xor
daa
mov
into
int3
cmp
pop
insl
xchg
sarb
or
test
xchg
xor
xor
out
mov
xor
test
sahf
jne
sti
icebp
popa
pop
leave
sbbl
pop
out
pop
lcall
out
xchg
ja
adcb
or
nop
call
pop
test
cmpsl
nop
loopne
dec
nop
sub
adc
pop
pop
fs
dec
sub
and
loope
ret
sbb
cmp
jge
and
out
push
in
loopne
dec
out
xchg
jae
outsb
add
xchg
jae
sbb
mov
adc
pop
stos
out
scas
or
fmuls
movsb
cmp
les
pop
or
sar
inc
and
mov
cmpl
in
cmp
jecxz
jb
sbb
ds
add
push
push
mov
nop
imul
dec
ret
jp
cmp
push
dec
ljmp
push
and
mov
mov
pop
fmuls
mov
or
or
imul
lods
and
adc
mov
adc
inc
mov
add
inc
test
int
push
int
mov
dec
mov
andb
mov
movsb
mov
xchg
mov
push
jnp
nop
pop
mov
pop
out
adc
mov
jb
sbbl
cmp
scas
sti
sub
scas
cli
lret
rcll
shlb
add
pop
mov
mov
push
addr16
test
je
dec
lea
cmp
testb
insb
shlb
ret
scas
or
pushw
add
fsubrl
andb
adc
sar
add
sbb
adc
lods
add
ds
xchg
adc
xlat
jno
or
pop
test
es
push
sub
sbb
sub
jbe
jg
jecxz
jl
mov
sub
adc
inc
xor
les
dec
loope
xchg
xchg
out
lods
mov
imul
loopne
jp
cmp
mov
clc
mov
repnz
sub
ljmp
loope
xchg
pusha
decb
sbb
roll
jle
push
or
inc
pusha
lods
and
fsubrs
test
jno
inc
xchg
repz
mov
inc
cli
mov
jecxz
xlat
out
add
mov
insl
repz
inc
pop
xor
push
dec
mov
leave
pusha
fsubs
mov
xchg
cmc
je
lods
ds
fiaddl
mov
push
out
imul
ja
inc
andb
lea
cwtl
add
sbb
jp
rep
sub
mov
add
add
push
and
pushf
inc
out
popf
mov
ret
decb
cmpsl
sub
dec
cs
out
mov
cmpsb
shrb
subl
or
in
dec
rol
sbb
add
shrl
jno
into
es
das
lods
dec
inc
pop
xchg
push
lods
lret
divb
pushf
adc
dec
nop
daa
jbe
aam
loop
pusha
divl
fdivl
or
mov
or
leave
push
jo
inc
jae
xor
ret
pop
js
mov
shrl
mov
testl
jmp
xchg
pop
push
jmp
mov
lds
mov
ds
out
aad
and
sub
jle
jp
pop
outsb
add
push
add
fadds
cmp
repz
dec
in
test
call
lcall
push
push
clc
cmp
cmp
jp
or
pop
mov
pop
add
dec
pandn
rorb
lret
sarb
arpl
mov
jle
sti
ljmp
enter
loope
pop
sbb
shlb
loopne
lods
lods
or
xchg
int
pop
xor
pop
cs
aam
repnz
stos
mov
xchg
hlt
divl
jle
xchg
sbb
test
push
psllw
xor
cwtl
daa
test
jmp
fiadds
shlb
out
mov
insb
aaa
shll
andb
sbb
cwtl
or
cmpsl
or
in
adc
jmp
cld
mov
ljmp
inc
sbb
inc
pop
fwait
dec
sbb
rol
ffreep
sbb
fcmovbe
loope
push
push
scas
lods
mov
outsl
push
jbe
xor
bound
ds
jecxz
lods
imul
or
testl
pop
and
mov
aaa
inc
cmp
xchg
sahf
ljmp
adc
and
imul
xor
mov
mov
ds
inc
es
cli
mov
cld
dec
imul
mov
sarl
lds
dec
add
fdivrp
and
mov
dec
je
jle
cld
data16
jmp
xor
shlb
cmp
call
test
inc
sahf
inc
sub
xchg
mov
into
jb
push
test
mov
into
adc
arpl
xor
inc
pop
or
lds
popa
mov
pop
sbb
into
xchg
mov
daa
mov
xchg
jl
inc
lock
xor
imul
lea
out
inc
xchg
jge
fldenv
fwait
sbb
call
xor
sbb
and
outsb
inc
hlt
cmpsb
jge
pop
andl
pop
add
lret
mov
sbb
adc
ss
sahf
xchg
inc
sbb
out
or
dec
jp
add
mov
jnp
push
and
imul
mov
add
daa
mov
je
adc
dec
or
inc
pop
sub
jmp
out
insl
sub
sarl
pusha
mov
repnz
addr16
dec
adc
bound
shr
jno
sbb
cmp
or
inc
cltd
sub
xchg
lret
push
jae
or
fists
ret
out
je
add
sarl
inc
or
scas
sahf
push
inc
movsb
movsb
repnz
popf
inc
xchg
sarl
movsb
xor
and
lds
mov
fnstcw
stc
jl
ficomps
sbb
cmp
mov
pop
aam
fdivl
push
addl
or
ss
pusha
mul
cmc
cmp
pop
js
sub
pop
je
int3
aaa
jle
sub
bound
jl
pop
stc
nop
xor
adc
inc
nop
push
flds
jne
lea
mov
push
and
push
xor
jb
stos
mov
inc
inc
scas
movsl
push
int3
outsb
dec
fnstcw
sarb
ja
outsl
aas
push
cltd
in
aam
mov
repnz
mov
add
cmp
sbb
icebp
jmp
cmp
jo
inc
pop
hlt
pusha
xchg
call
sub
lret
cmc
sub
mov
cmp
pop
xor
jne
add
in
out
ret
test
insb
push
add
fidivl
and
add
jae
and
sub
lods
mov
movsb
test
jae
sbb
push
mov
xchg
adc
inc
lods
sbb
out
cmpsl
sbb
sub
and
andl
or
fcoms
mov
test
sbb
aas
test
mov
rcrb
sbb
xlat
or
mov
lcall
sub
mov
sub
pop
hlt
xchg
sahf
cltd
pushf
fists
pop
mov
sbb
jl
fidivrl
add
and
test
add
pushf
sahf
and
sbb
pop
push
dec
push
cmp
jns
out
adc
pop
mov
jg
sbb
xchg
mov
movsb
cmpsb
xor
loope
sbb
push
xor
daa
subb
loope
enter
inc
cmp
inc
out
fsub
gs
pop
lahf
mov
push
or
movsl
je
fsubrl
mov
icebp
aaa
call
js
push
cmp
flds
arpl
out
push
jno
mov
insb
outsl
or
jb
call
jne
call
xchg
enter
inc
psllw
out
testb
call
movsb
shlb
mov
and
rclb
in
pop
and
add
jae
jno
test
loopne
inc
clc
or
mov
sbb
sahf
andl
sub
sub
dec
cli
mov
fwait
jo
inc
pop
jb
inc
jmp
out
out
insl
and
inc
mov
lret
mov
xor
sub
repz
inc
fsubrl
inc
lods
mov
xchg
jne
fsubs
in
add
add
je
or
pop
insl
lahf
cs
mov
mov
inc
arpl
lcall
xorb
sbb
loop
sub
in
ja
sub
cbtw
or
movsb
repz
inc
cmp
cwtl
popf
out
shl
xchg
mov
das
rcrb
mov
out
cmp
popa
nop
mulb
mov
or
jmp
push
mov
push
push
jae
sbb
outsb
int
lea
sbb
nop
sub
pop
scas
repnz
loope
cli
xor
inc
ror
andb
xchg
and
pop
scas
xchg
arpl
or
lahf
inc
cwtl
cmp
cltd
jne
shl
push
sbb
add
aas
jl
decb
mov
push
jb
push
adc
and
sbb
xor
out
mov
push
jb
nop
mov
cs
push
add
pop
cs
cmp
stos
mov
push
dec
pushf
mov
pop
sti
inc
inc
arpl
fists
mov
and
pop
pop
icebp
mov
and
insl
push
mov
and
movsb
cmp
aas
negb
mov
mov
ss
xlat
mov
les
iret
cmc
fmull
pusha
rclb
adc
lcall
loope
inc
into
xchg
shrl
dec
pop
aad
cs
and
inc
or
mov
push
push
vaddpd
mov
fstps
xchg
jae
jl
xlat
dec
mov
xchg
das
xor
arpl
aam
or
and
pop
pop
jle
cvtps2pd
aas
jl
cmpsl
cmp
inc
jg
js
imul
ror
lahf
lods
clc
test
movsb
mov
xchg
or
xor
pop
sarb
add
dec
leave
and
sub
jbe
add
aaa
cmp
cmp
xchg
nop
cmpsb
loopne
fcoms
cwtl
fisubl
ret
stos
in
cmp
or
scas
in
inc
sbb
fsubrp
mov
and
xor
jb
rol
cwtl
sbb
xlat
lea
xor
add
es
out
fsubrl
ja
push
add
fimull
pop
mov
icebp
ret
dec
in
jne
dec
outsb
add
nop
fs
dec
imul
jne
imul
pop
ret
call
orl
js
push
out
and
adc
pop
cltd
xor
and
dec
or
mov
imul
insb
scas
cld
xchg
shll
adcb
mov
imul
aam
cmp
lock
push
divb
mov
loope
mov
push
fdiv
inc
pop
and
xlat
add
stos
dec
push
lods
loop
loope
inc
add
mov
frstor
int3
loopne
sbbb
mov
or
aas
loope
outsb
dec
pop
out
insl
pushf
js
sub
adc
enter
imul
mov
pop
and
sarb
inc
fsubrs
jmp
cmp
cmc
sub
lods
stos
bound
mov
xor
sti
out
pop
inc
xlat
test
frstor
sbb
stos
inc
push
int
fildll
out
std
add
pop
mov
xor
mov
lds
dec
aad
repz
rcrb
mov
and
ja
ret
inc
cmpsb
push
rorl
lods
mov
imul
imul
pop
movsb
lock
popa
dec
int
sub
dec
int3
xor
std
jge
movb
shll
sbb
sub
imul
adcl
xchg
sahf
lret
inc
mov
push
ret
add
push
out
aam
xchg
and
pop
scas
and
jne
xlat
lahf
lods
or
insb
pop
add
adc
mov
mov
dec
in
sti
jnp
sbb
test
inc
sbb
or
jno
xchg
mov
or
xorl
test
lahf
and
xor
sub
popa
je
ret
test
mul
sub
jno
inc
sarl
push
int3
rcrl
pop
dec
cmpsb
cmp
mov
fstp
out
test
push
xchg
mov
and
decl
push
andb
sub
leave
xlat
outsb
xchg
push
je
mov
mov
xor
movsb
aaa
push
sub
mov
pop
xchg
inc
push
fimuls
and
mov
aad
xor
in
ds
insb
mov
dec
hlt
testl
add
lds
imul
out
and
test
pop
xor
add
mov
ror
frstpm(287
or
ljmp
dec
das
xchg
pop
xchg
ret
sti
xchg
nop
or
and
sbb
fs
dec
in
mov
xor
xchg
in
jl
xlat
das
loopne
imul
jno
into
es
xlat
xor
clc
pop
mov
cmpsl
frstor
xlat
hlt
add
jb
scas
fsubrp
jp
inc
nop
mov
std
jns
sbb
mov
mov
movsl
pop
xor
add
imul
sub
fisttps
bound
leave
push
cwtl
mov
dec
jecxz
jg
in
scas
stos
xchg
sub
xor
or
mov
aas
aad
pop
dec
fdivrs
and
mov
mov
lcall
in
test
or
push
mov
int3
insb
adc
dec
mov
lods
mov
cmp
movsl
or
out
mov
xchg
out
sub
sbb
cwtl
cmp
mov
test
lret
les
pusha
orb
push
push
pop
xchg
pop
fdivl
test
movsl
test
mov
out
xchg
xchg
rorl
pop
push
jns
mov
pop
les
cmc
jns
adc
das
cmp
pusha
push
xor
cmp
repz
lret
xor
xor
pusha
cmpb
dec
jecxz
mov
mov
mov
fstpl
add
fwait
mov
xchg
popf
mov
int3
mov
int3
testl
xor
xor
rcll
sahf
les
aam
fs
fimull
sub
mul
or
daa
xchg
sub
aaa
jne
mov
jmp
inc
jle
std
scas
bound
popa
inc
mov
dec
mov
outsl
pop
xlat
mov
adc
adcl
or
test
sub
inc
js
xlat
lods
out
dec
fistpll
in
mov
push
popf
xor
dec
or
sahf
and
add
push
mov
inc
setg
int3
xor
icebp
mov
cmpsb
fucom
push
pop
int
nop
or
cmpsl
pop
inc
push
sub
in
jb
push
sub
loop
inc
dec
pop
xlat
jle
mov
mov
sub
push
ret
insb
cmp
test
stos
clc
addr16
int3
dec
dec
addl
lret
mov
push
sub
inc
in
xchg
fsub
dec
mov
jecxz
push
xchg
push
aas
push
cmp
cmp
pop
in
out
fdivp
pusha
subb
in
test
cltd
or
enter
rclb
test
fstl
cmpsb
imul
xchg
jno
xchg
lds
jp
ja
jp
sub
add
add
leave
mov
pop
repz
lock
loop
adc
mov
inc
cmp
sti
lcall
aad
push
std
and
inc
sbbl
adc
out
rolb
xchg
popa
lea
aad
dec
pop
cmp
inc
outsl
insb
add
sbb
fldcw
dec
fcomi
or
sahf
ret
sub
inc
sbb
out
sub
sub
es
fwait
loop
inc
call
aas
enter
pop
test
clc
cmp
jae
push
or
or
cltd
or
sub
imul
xchg
and
jecxz
sahf
mov
mov
fidivrl
xchg
pop
sbb
int3
jnp
stos
es
fs
mov
mov
and
add
xchg
xor
pop
jp
outsb
imul
inc
adc
aaa
enter
cli
sbbl
or
mov
lcall
lret
cmpsb
scas
adc
pop
ljmp
inc
in
jb
aad
test
and
and
aas
into
lds
adc
mov
xchg
jo
data16
movsl
xchg
ljmp
adc
jns
sub
addr16
adc
pop
mov
int3
fdivrs
sbb
pop
push
sub
jns
ret
xchg
add
lcall
dec
fucom
sbb
push
lret
es
pop
sub
pop
pop
rcl
ss
or
inc
flds
aas
xchg
and
scas
sub
jo
xlat
outsb
adcb
sub
jg
mov
xchg
mov
mov
mov
sbb
mov
sbb
loope
sub
scas
pop
cmp
pop
bound
sub
inc
mov
jg
cmp
ss
push
jmp
inc
test
pushf
icebp
loope
dec
jo
mov
mov
sub
js
shlb
loope
nop
test
lret
scas
mov
fsubl
push
mov
fdivr
loop
in
xor
ljmp
jno
out
iret
arpl
cli
subl
wrmsr
cmpsl
aam
add
push
loope
xor
mov
push
xchg
adc
dec
sbb
loope
fisubrl
es
lods
mov
or
subb
cld
xor
pop
or
push
movsb
dec
loop
or
mov
notl
and
and
movsl
cmpsl
inc
cld
xchg
cs
sbb
xor
fildll
mov
nop
imul
lea
or
ja
nop
sar
aad
pushl
mov
add
mov
xchg
sub
inc
stos
mov
lods
adc
test
pop
test
lds
cmpsl
adc
in
or
nop
out
sahf
jne
or
cmpsl
xchg
mov
mov
xchg
lret
sti
lcall
enter
outsb
ficoml
sbb
ds
out
mov
mov
insb
mov
incl
orl
push
fsubrl
mov
bound
mov
es
inc
mov
adc
inc
fsubrl
data16
adc
popl
data16
adc
ljmp
mov
xor
and
xchg
adc
int
mov
into
and
jne
mov
sub
out
scas
ljmp
fwait
int
mov
mov
ret
addr16
push
gs
or
xlat
mov
prefetch
mov
pop
adc
popa
pop
test
fistpl
lods
stos
cmpsl
lcall
jno
mov
push
mov
fdivl
mov
xchg
cmpb
and
adc
out
lock
xchg
pop
cmc
sub
push
shlb
xlat
outsb
pop
in
bound
sar
push
mov
xchg
test
xchg
mov
in
clc
fmuls
andl
dec
push
mov
arpl
sahf
test
jge
in
add
pop
es
bound
xor
mov
jno
popa
inc
rorl
xchg
push
and
sbb
adc
js
hlt
xlat
outsb
adc
inc
jbe
cmp
push
je
cmp
push
add
xor
dec
outsb
and
sahf
xor
loope
test
movzbl
jmp
push
subb
mov
push
xchg
adc
add
mov
jns
ds
push
sub
rolb
je
fmull
lret
bound
lods
cmp
dec
push
mov
and
mov
sbbb
sbb
sbb
or
cs
add
fld
xor
fs
movsl
and
xchg
aad
sbb
and
inc
sahf
mov
test
mov
xchg
adc
dec
mov
rol
push
jbe
test
lds
lds
sbb
push
cmp
imul
repnz
in
cwtl
stos
negb
sti
push
sub
rcll
jns
dec
out
insl
dec
cmp
insb
or
fcoms
add
cmp
mov
test
xchg
mov
lock
mov
xchg
stos
xchg
mov
push
hlt
mov
mov
push
js
daa
adc
cwtl
outsw
push
xor
cmp
pushf
sbb
xchg
sbb
clc
jo
movsb
pop
mov
pushf
mov
fistps
xor
pop
icebp
inc
add
shr
movb
sbbb
nop
out
mov
push
push
jge
and
mov
mov
push
xchg
ljmp
pop
stc
pop
jl
mov
sub
int
mov
sub
pop
push
stos
ret
shl
lret
lret
lahf
xor
lds
sub
xchg
hlt
cli
call
out
xchg
fs
xchg
and
jg
cmp
or
sub
sub
mov
je
cltd
movsl
pop
in
mov
inc
adc
fidivrs
cli
stos
aaa
cmc
insb
je
sbbl
sub
lahf
cmpsb
ret
dec
outsb
add
push
leave
testl
mov
fstps
inc
push
shlb
das
pop
lods
cli
rorb
jne
pop
sub
mov
shll
call
pop
xchg
jg
inc
pop
jne
mov
enter
inc
and
xchg
inc
fldt
cld
mov
test
adc
mov
insb
sub
ret
icebp
loopne
dec
push
jl
jge
mov
pop
pushf
push
lods
jge
sti
cmpsb
push
popa
nop
sarl
roll
scas
aaa
sub
loopne
mov
or
push
adc
mov
push
inc
sub
scas
mov
mov
jae
pusha
mov
filds
inc
xor
xor
pop
outsl
mov
aad
cmp
and
nop
pop
and
stos
negb
sub
ljmp
add
mov
lds
mov
movsb
cmp
dec
mov
out
test
dec
mov
inc
add
jae
pop
push
loopne
pop
pop
ret
inc
mov
cwtl
nop
in
mov
data16
inc
loopne
stos
insl
pop
inc
inc
sahf
gs
pushf
dec
pushf
pop
clc
mov
mov
push
xchg
mov
and
xchg
mov
cld
das
out
test
shll
inc
and
addr16
es
fisubrs
addr16
jl
dec
lds
shl
jbe
stos
xchg
aad
cmpsl
xor
add
push
jl
mov
mov
sub
data16
mov
pop
push
mov
jge
mov
lcall
push
in
ljmp
cld
cmp
or
test
mov
ror
jle
out
es
or
cmp
mov
cltd
sbb
icebp
fs
out
xchg
xor
outsl
dec
cli
popa
jg
insl
mov
lods
xchg
jl
dec
inc
shlb
jo
into
into
aad
das
dec
and
and
inc
lds
push
ret
mov
pop
sub
cmp
nop
xchg
daa
cmp
ret
aas
and
xchg
xchg
jg
pusha
xor
mov
ret
enter
jg
fisttpll
es
adc
sbbb
jecxz
pop
movsl
xchg
xchg
notl
negb
xchg
ret
cld
xor
mov
leave
fnstcw
push
add
and
and
cmp
mov
jle
pop
aaa
movsl
sub
jo
cmp
mov
test
sar
andb
add
mov
pop
and
mov
or
mov
sbb
inc
fimuls
xor
push
xchg
cwtl
arpl
push
mov
sub
mov
mov
aad
pop
movsb
enter
mov
aaa
shl
inc
cld
xchg
das
or
cmp
je
dec
in
dec
xor
bound
movsl
lods
jmp
add
sub
das
mov
jg
xchg
push
in
mov
icebp
jl
dec
pop
out
add
repz
hlt
sti
aas
das
inc
testb
imul
repnz
sub
dec
loop
shll
add
jmp
test
test
jl
pop
out
pop
popf
stos
push
jmp
cmpsb
and
je
sbb
divl
fadds
loop
xchg
pop
imulb
push
xor
test
xchg
or
int
adc
lret
outsl
push
je
adc
inc
xor
andb
ljmp
in
test
lret
jbe
jnp
jle
sti
push
xor
mov
mov
into
lahf
daa
call
out
cmp
dec
sbb
mov
sarb
and
pusha
jnp
sbb
enter
pop
neg
sub
jae
mov
jg
sbb
pop
movsb
ljmp
pop
add
dec
insl
mov
mov
les
and
push
dec
sub
jae
push
mov
mov
jmp
adc
mov
gs
pop
int3
sub
and
imul
sub
js
arpl
fidivl
mov
clc
inc
lret
jno
xorb
dec
adc
nop
pop
sub
call
xor
adc
dec
fs
jnp
icebp
hlt
call
jns
xchg
mov
cmpsb
push
jp
dec
enter
repnz
dec
xchg
popa
xchg
push
in
xchg
mov
dec
mov
push
loop
push
aad
das
popl
push
divl
hlt
and
shll
jns
xchg
dec
in
mov
xor
cmp
shlb
push
mov
pop
in
sub
xchg
pop
dec
adc
aaa
mull
stos
push
jge
mov
sti
nop
push
sub
test
cmp
pushf
out
hlt
push
xchg
nop
sub
xor
sub
xchg
mov
pop
push
shrl
mov
dec
in
pop
outsb
mov
sti
aas
lock
frstor
aad
int
jmp
pop
mov
pop
lahf
in
int3
pop
fbld
or
cmp
sub
or
imul
mov
mov
xchg
outsb
xchg
int3
test
or
jecxz
int3
xor
add
and
lret
rcl
mov
pop
lret
in
inc
cli
jnp
into
mov
pop
icebp
imul
in
jge
fldenv
aam
sbb
into
and
add
outsl
ret
or
sub
pusha
mov
fiadds
cmp
ja
mov
out
outsl
cmp
push
je
in
notb
sub
push
jl
mov
dec
out
add
pop
ss
insl
adc
enter
sub
add
das
and
out
mov
fdivrs
cmp
in
cmp
shrl
daa
lret
icebp
adc
adc
lock
repz
sub
ja
jg
scas
aaa
outsl
scas
pop
dec
pop
fimull
push
addl
sub
ja
fsubrs
int
aaa
lcall
cmp
cwtl
inc
sub
testl
leave
notl
cmpsb
ljmp
jae
mov
orl
xor
mov
sub
lods
dec
icebp
les
inc
dec
shl
adc
out
mov
js
push
add
jl
push
stos
mov
es
mov
dec
popa
movsb
cmp
ljmp
push
test
cmp
aam
ror
lods
jle
xchg
and
bndldx
dec
sbb
jno
rclb
sbb
andb
mov
cmpsb
cmp
xchg
ficomps
sub
xlat
mov
sahf
pop
fldenv
jo
sbb
mov
dec
add
pusha
or
xchg
cmp
inc
push
cwtl
cmpb
mov
dec
jecxz
repnz
push
gs
iret
movsl
jge
leave
popa
lods
fnsave
push
adc
test
stos
jp
loopne
sub
push
int3
xchg
int3
cmpsb
loope
and
inc
mov
mov
stos
add
push
jbe
inc
stos
fcomip
mov
int
mov
cld
cmp
sub
std
xlat
push
sub
jo
call
into
out
mov
pop
adc
lahf
ss
pop
pop
loop
es
dec
out
mov
adc
outsb
or
push
pop
cli
mov
movsb
jne
mov
push
rol
addb
and
add
inc
data16
jnp
ja
sti
mov
ljmp
add
jae
movsl
ja
xchg
push
adc
xor
lahf
ss
xchg
in
fldcw
mov
repnz
adc
inc
adc
mov
mull
pop
aam
arpl
jg
sbb
mov
aad
add
xor
add
jns
rcrl
dec
nop
pop
lea
xor
cmpsl
mov
mov
aam
mov
outsl
cltd
sub
ret
pop
xor
add
mov
es
or
cmpl
stos
push
dec
inc
xor
jmp
insl
and
icebp
filds
cwtl
cwtl
xchg
jae
imul
testl
sbb
and
xor
cs
push
xchg
ljmp
adc
push
add
or
sbb
es
dec
or
rclb
adc
xchg
mov
sarl
lea
mov
adc
xchg
xlat
outsb
lahf
sub
cmc
mov
repnz
adc
cmpsb
xor
sub
addb
mov
push
dec
lahf
ss
bound
jp
dec
pushf
cmp
xchg
dec
shll
shrb
cmp
mov
sub
cmpsb
loop
out
dec
js
arpl
bound
sub
xchg
or
push
in
mov
popf
dec
cmc
scas
adc
add
call
shr
pop
stos
push
movsl
fdivrl
inc
add
movsl
xchg
int
les
adc
js
out
test
out
jmp
jg
inc
shrb
mov
sub
sub
outsl
rcrb
inc
xchg
sub
cmp
mov
loopne
js
lods
xchg
pop
dec
add
sub
and
inc
sti
lock
gs
pop
loopne
and
jo
pop
and
std
and
or
and
and
or
push
cltd
andl
sbb
inc
inc
or
mov
xor
enter
sbb
pop
bound
arpl
add
dec
iret
jg
pop
ja
popf
mov
lret
push
inc
dec
shlb
js
dec
in
js
mov
mov
in
sub
jle
mov
fisttps
movsb
push
sub
sub
addl
stos
out
jge
outsb
mov
aas
shrl
mov
cwtl
lds
and
add
loop
mov
scas
inc
scas
imul
movnti
stos
imul
jnp
out
fsubs
insb
test
lahf
xor
roll
roll
pop
mov
dec
xchg
xor
mov
lret
int
push
xchg
mov
cmpb
mov
mov
mov
movsl
inc
pop
aam
dec
cmp
mov
outsl
dec
sbb
pop
sbb
sbb
jae
cmp
adc
cmc
cmpsb
and
xchg
leave
push
xor
jp
mov
fucomp
rol
in
stos
nop
insb
push
sbb
push
push
fwait
out
shrl
lahf
mov
dec
push
das
loop
fcomps
cmp
imul
std
enter
lds
and
dec
mov
cltd
test
imul
cmp
pop
inc
aam
cmp
cmpsl
fcmovnu
sub
push
addr16
pop
out
push
sarl
das
jmp
pop
lret
mov
clc
mov
mov
jmp
jp
mov
jge
in
fs
outsl
pop
adc
push
int
shrb
add
sbbl
mov
je
outsb
loope
push
sub
ficoml
leave
mov
vandnps
icebp
test
jg
lahf
mov
pop
mov
mov
insb
scas
pop
out
loopne
jnp
mov
cltd
cmp
adc
dec
fisubs
cmpsb
sbb
jmp
push
dec
add
xchg
fsubs
add
cmp
push
insb
cmc
addl
scas
test
push
push
inc
jmp
mov
popa
cmc
mov
xchg
cli
iret
inc
push
fbstp
lods
cld
ds
xor
add
jg
imul
jnp
dec
pop
or
add
inc
dec
xchg
inc
test
push
sbb
add
sbb
es
nop
mov
decb
aaa
popa
ret
sub
mov
mov
outsl
ja
aaa
iret
or
hlt
jle
decl
pop
outsb
fcoms
nop
addr16
aad
mov
pop
sbb
adc
inc
adc
mov
add
inc
mov
inc
fwait
mov
jb
adc
fdivl
mov
cli
xchg
inc
iret
sbb
xchg
and
into
push
mov
lret
push
out
or
cmp
jg
negl
stc
mov
icebp
mov
lea
insb
xchg
sahf
std
stc
cs
lea
adc
xchg
inc
insb
stc
popf
pop
lock
xchg
call
pushf
pop
lock
popf
call
pop
dec
lock
ret
lea
outsb
cmp
xchg
divb
repz
pop
mov
hlt
bound
xchg
pop
mov
sub
test
cmp
cltd
scas
je
fdiv
mov
repz
mov
xchg
outsl
or
je
ss
jb
add
int
fs
mov
adc
loopne
jb
mov
mov
mov
xchg
cmpl
mov
shrl
mov
push
mov
aaa
in
xchg
and
scas
pop
sub
pop
and
fistpll
mov
test
in
or
push
idivb
xor
jo
leave
jns
xlat
jp
or
cs
sbb
mov
pop
jnp
mov
jecxz
xchg
cmp
cwtl
jg
es
sbb
ret
mov
andl
lret
jp
jno
mov
xlat
pop
dec
in
jne
ret
mov
pop
xor
int
lds
insl
outsl
push
jg
jmp
add
cmp
sahf
out
pop
sub
jns
and
jecxz
push
add
lea
and
bound
xlat
push
mov
jmp
xor
and
inc
lret
ja
add
push
stos
cmp
pusha
xchg
pop
xor
jmp
ret
popa
cs
sbb
pop
shl
lods
test
jge
test
std
jo
add
lret
xor
popf
mov
jnp
mov
std
fdivs
jecxz
xchg
or
cli
aad
inc
cmp
jne
les
xor
pop
sahf
push
mov
mov
cmpsb
insb
sub
add
mov
inc
jne
jp
test
scas
mov
push
loop
mov
mov
lods
xchg
ds
imul
jns
or
ja
int3
xor
into
popa
dec
sub
mov
sahf
incl
push
or
sub
das
push
add
xchg
sub
aad
pop
xlat
mov
daa
gs
pop
es
outsl
clc
lods
sbb
inc
int3
mov
dec
xchg
js
xchg
fildll
add
or
push
out
ja
je
mov
xchg
mov
das
mov
push
xchg
adc
mov
sub
and
es
insl
sbb
jg
jle
rol
js
stos
dec
pushf
dec
int3
xlat
data16
push
fnstcw
jae
stos
jb
mov
or
jnp
fwait
push
call
fs
fyl2x
mov
adc
and
pcmpgtb
or
ss
jl
push
mov
adc
dec
adc
sub
mov
lahf
bound
mov
push
andb
lods
jg
adc
jno
icebp
or
pop
mov
or
and
cmp
sarb
push
xchg
in
xchg
mov
sbb
cli
lea
sbb
std
or
cmp
popf
pop
pop
adc
push
push
cmpl
in
add
addl
sub
and
sub
iret
sbb
adc
pop
cmp
loope
insb
fiadds
add
popa
fs
xlat
imul
into
jge
inc
out
sbb
sub
lret
adcl
dec
pop
lret
mov
das
jno
mov
and
and
cmpsl
divb
loope
sbb
ret
pushf
loope
inc
inc
adc
cltd
mov
fwait
out
mov
add
inc
aaa
enter
pop
fdivrs
mov
push
sti
fsub
inc
rorl
jl,pt
jo
push
mov
fs
insl
xchg
pop
mov
push
test
jae
mov
loope,pt
mov
push
add
out
sahf
pop
jecxz
cmc
xchg
jae
fisubs
xchg
js
int3
mov
or
fisubrs
add
lret
mov
mov
add
dec
das
clc
sub
int3
loopne
sub
enter
mov
pop
mov
mov
and
jo
in
adc
push
push
cmp
inc
xor
cmp
cmp
sahf
cmp
lahf
push
inc
dec
mov
jge
push
cmc
lock
adc
pushf
dec
arpl
out
mov
imul
or
in
popa
lahf
jmp
cmp
loope
scas
fnstcw
aad
inc
mov
jno
hlt
push
aaa
lea
ficomps
popa
orb
add
push
shr
popa
mov
js
cmpsb
and
xor
sub
mov
fildll
lods
movsl
cmp
xlat
xchg
sub
mov
outsb
xor
xchg
dec
in
jb
jnp
dec
out
daa
jns
das
inc
mov
insl
add
lcall
cmc
inc
jg
mov
outsl
ret
in
int3
fcomps
into
jecxz
push
pop
cmc
adcl
lahf
pushf
sbb
mov
push
add
cmc
push
mov
dec
aas
fimuls
jbe
cmpsb
mov
add
lods
adc
or
and
adc
xlat
xchg
adcl
scas
popf
dec
or
out
arpl
xor
btc
xlat
sarl
cmp
movsb
out
dec
ror
sbb
rorl
and
sub
xchg
daa
xor
lods
insl
add
ljmp
fistps
xchg
sub
test
mov
mov
pop
xor
xchg
test
sbb
jmp
jle
mov
mov
xchg
aam
je
adc
ljmp
adc
cmp
ficomps
cmp
pop
mov
shrb
mov
sub
jl
loope
ds
sahf
fistps
push
pushf
pop
movsb
cmp
popf
call
mov
lret
fnstcw
lret
push
loop
or
mov
sbb
lds
cltd
jecxz
gs
mov
add
inc
sbb
pushf
push
test
enter
aam
jp
jns
das
mov
mov
es
mov
dec
aam
push
int3
ret
clc
ss
cmpsl
pop
fwait
sub
xchg
dec
pop
xchg
mov
mov
jle
js
pop
outsb
rol
fstps
stos
dec
pop
dec
and
mov
push
or
test
shll
pop
stos
cmp
and
and
test
outsl
call
test
push
faddl
cmc
jbe
xlat
daa
and
andl
jne
and
fsubr
mov
andb
outsl
sub
mov
inc
mov
cli
inc
or
jnp
adc
dec
lods
push
jns
call
jns
test
inc
dec
out
or
sbb
pop
xchg
sbb
mov
mov
pop
pop
lds
outsb
jge
fisubrs
ds
add
pop
cmc
test
mov
jnp
mov
inc
rol
gs
push
mov
xor
push
pop
mov
pop
stos
test
int3
xchg
imul
fdivs
pop
mov
stos
dec
rorl
scas
ret
mov
xchg
cmp
mov
jg
add
dec
fiaddl
popf
xor
add
out
pop
mov
loop
push
pop
das
add
test
repnz
jl
cmp
mov
xchg
mov
popf
xor
pop
dec
popfw
sub
out
pop
ja
cmp
jns
cmp
adc
dec
mov
lock
sti
fstenv
fidivrs
pop
repnz
or
adc
stos
mov
add
mov
xor
xchg
lcall
ljmp
enter
arpl
int
push
out
inc
out
cmp
xor
mov
aam
inc
clc
lods
sub
xchg
or
cltd
andb
push
outsl
popf
movsl
les
mov
mov
xchg
and
frstor
int3
sbb
jb
jge
or
sahf
inc
ficoms
mov
les
and
pop
cmpsb
imul
int3
adc
out
mov
cmp
sarl
dec
and
fldt
xchg
sahf
push
or
xchg
repnz
jmp
in
jg
push
int
push
push
jle
xlat
repz
mov
stos
test
icebp
inc
in
mov
ds
ret
mov
xchg
add
dec
aaa
dec
pop
mov
pop
rcrl
and
pop
loop
sti
xchg
mov
mov
sub
movsb
mov
loopne
jge
inc
xchg
adc
inc
mov
pop
icebp
jmp
lea
daa
inc
jl
stos
sub
jge
jge
data16
xchg
cmpsl
cmp
mov
int
dec
mov
jecxz
and
mov
popa
sub
lret
mov
lcall
cmp
cltd
cld
pop
sti
in
xor
sub
and
sahf
push
adc
fisubs
ret
and
sti
loopne
dec
iret
rolb
pop
lret
jle
bound
fsubrl
xchg
cs
and
add
out
or
insl
daa
inc
bound
int3
pop
popf
dec
xchg
pushf
dec
enter
sub
jbe
pop
xchg
mov
adc
testl
sbb
leave
xor
shrb
sbb
and
jo
cmp
lret
hlt
or
mov
lds
sub
push
rcll
and
ja
repnz
fistpll
push
mov
iret
sub
or
xor
and
loop
inc
push
xchg
mov
xor
jl
xor
cld
jae
mov
mov
or
mov
repnz
int
and
dec
movsb
sub
sti
mov
fildl
sbb
aaa
ret
or
mov
nop
xlat
xchg
sbb
cs
adc
mov
pushf
lods
insb
fidivs
mov
cmc
lahf
jp
ss
cmpsb
out
mov
sub
cmp
cmp
inc
push
xchg
mov
arpl
mov
mov
popa
not
sub
hlt
scas
jmp
aad
popf
stc
jae
loope
jmp
lea
sti
aaa
out
jecxz
sbb
pushf
cmp
repnz
ja
mov
outsb
push
mov
fistpll
xorb
or
fdivs
fmull
loopne
ja
pop
jg
mov
cmpsl
rcrl
sbb
cmp
add
in
cld
cmpsl
xchg
mov
cmp
test
adc
jnp
aas
jmp
add
and
ret
imul
mov
sbb
sub
sti
push
dec
jo
out
mov
movzbl
mov
in
mov
test
call
inc
mov
mov
decl
xchg
hlt
iret
cmp
les
in
lods
ljmp
stc
addl
dec
lea
mov
mov
xor
notb
jmp
test
in
mov
push
mov
in
and
mov
push
jp
jg
es
nop
sub
or
mov
push
cmpsb
arpl
pop
mulb
jo
stos
mov
or
pop
and
pop
add
fsubs
push
pop
adc
cli
sbb
push
lds
push
ret
nop
ja
inc
cmpsl
xchg
cwtl
sbb
shr
int
fdivp
or
test
aad
out
mov
adc
aaa
xchg
dec
push
in
jle
push
xchg
jae
data16
rcrb
dec
lret
scas
jne
lock
test
and
inc
mov
jns
call
add
xchg
rcrl
mov
repz
mov
jecxz,pn
insb
test
xchg
add
mov
or
lea
out
js
cld
test
push
std
std
int3
push
pop
repnz
in
test
notl
add
icebp
mov
in
jbe
inc
stos
orl
shlb
mov
frndint
push
and
sti
clc
cmpsl
pop
push
clc
xchg
ret
adc
fsubs
gs
push
dec
xor
out
push
cmp
sub
test
das
hlt
add
sbb
outsb
inc
loope
inc
lret
pop
imul
pop
pop
pop
dec
into
idivl
je
xchg
jecxz
pushf
dec
test
xorl
bound
mov
xor
fnstcw
repz
adc
xchg
cld
add
pop
out
push
ss
inc
inc
in
outsb
fistpl
test
sub
outsl
roll
clc
dec
hlt
ficomps
or
add
insb
add
movsb
jmp
scas
mov
sbb
movsb
mov
aas
decl
adc
in
jnp
or
dec
aad
pop
or
rcrl
lret
sub
lcall
es
es
sub
add
dec
lret
outsl
xchg
jno
pushf
cmp
cld
cmp
stc
and
xchg
movsw
mov
xorb
xor
sub
pop
cmp
arpl
sbb
and
inc
inc
sub
pop
outsb
int3
fimuls
xor
and
dec
cmpsl
movsb
mov
jmp
add
mov
push
inc
lods
pop
test
cmp
jmp
xchg
and
or
data16
mov
pusha
mov
lret
sbb
mov
push
scas
mov
push
lods
repz
jp
dec
sbb
dec
push
fcmovnbe
hlt
cmp
pop
mov
mov
ss
cmp
scas
mov
jbe
std
sti
or
lods
jl
aad
rol
xor
ret
outsb
and
out
mov
je
mov
xchg
stos
sub
add
inc
pop
jecxz
or
mov
add
inc
ret
xchg
push
ss
in
iret
xchg
pop
imul
jns
dec
mov
xchg
xor
push
imul
jl
fiadds
adc
addr16
cmp
dec
arpl
cmpsl
repnz
sbb
orl
sub
cmp
mov
inc
add
cmp
mov
shrl
mov
pop
cmp
out
das
xchg
mov
sbb
adc
mov
mov
fwait
xchg
dec
and
or
add
insl
aaa
mov
popf
mov
les
lcall
mov
mov
arpl
mov
in
jns
sub
dec
fdivp
inc
mov
jg
push
xchg
adc
test
mov
xchg
loope
jecxz
mov
mov
push
xor
ffree
test
lea
popa
in
dec
mov
stos
add
fsubrs
lret
cmc
cmp
sahf
mov
clc
sub
xor
sub
sahf
mov
repz
incb
push
pop
push
mov
pushf
imull
ds
rcrl
mov
call
iret
adc
pop
cmpsb
insb
test
mov
movsl
in
mov
insb
loop
dec
push
xor
fists
push
add
mov
dec
pusha
mov
mov
add
pop
sub
data16
iret
jle
scas
lahf
mov
lock
pop
mov
imul
out
stc
jbe
pop
mov
push
pop
in
mov
pop
jle
mov
mov
and
push
xchg
pop
cmp
in
dec
mov
push
xchg
adc
insl
sahf
inc
gs
add
aaa
xor
orl
loopne
and
insb
inc
popl
jle
mov
cmp
add
pop
jne
pop
xchg
lcall
mov
arpl
xchg
jl
aad
mov
dec
fmuls
cld
or
or
iret
data16
dec
cmpsb
jmp
cli
or
out
lret
xlat
daa
imulb
cmpsl
dec
cs
hlt
pop
jne
scas
out
orb
iret
mov
inc
arpl
dec
popa
xor
imul
pop
push
test
in
je
hlt
movsl
or
jl
add
push
sub
ljmp
pop
or
std
mov
or
popf
repnz
sub
add
inc
in
addl
not
ret
jne
cld
rcrl
js
scas
orb
mov
inc
sarb
mov
jge
pop
sbb
dec
xorb
inc
mov
mov
adc
push
addr16
lahf
jle
sub
push
mov
lret
cmpsl
jle
repz
mov
bound
add
shl
push
dec
mov
mov
fnsave
in
adc
out
mov
sub
insl
lds
lea
mov
loope
pop
jl
pushf
mov
outsb
sbb
iret
or
add
sub
mov
fidivs
pop
insb
cwtl
jno
jbe
cmp
jmp
stos
test
pop
out
andl
jns
inc
inc
fucom
lcall
mov
stos
mov
in
xor
scas
xor
lret
pushf
sub
test
seta
fwait
test
jo
pop
sub
fdivs
pop
sub
repz
cmp
rcll
jbe
ljmp
inc
xchg
mov
mov
and
in
pop
out
fmul
or
fcomip
sbb
adc
cmpsl
loopne
fdivs
jg
or
aaa
pop
inc
push
aad
dec
int3
xchg
push
jp
mov
cs
jb
out
push
mov
andl
cld
subl
outsl
and
jmp
add
push
ss
cmpsl
ret
hlt
fdivs
add
fwait
cmp
ret
fwait
adc
xchg
sub
inc
lret
dec
out
sbb
jge
movsb
ljmp
fcomps
mov
cmc
addr16
lret
pushf
inc
call
and
xlat
cmp
test
repz
mov
bound
hlt
jle
dec
out
xchg
inc
into
sahf
cmp
jg
ss
xlat
mov
cmpsb
push
jmp
xchg
sbb
adc
shrb
push
pop
cld
dec
xor
cmp
pop
in
int3
xor
stos
mov
fsubrl
pushf
dec
int
lcall
push
clc
scas
shrl
xor
mov
push
outsb
stos
ret
pop
sbb
add
add
push
pop
cltd
push
jne
in
daa
insb
lahf
iret
xor
mov
fsubrl
lds
ret
inc
pop
ljmp
call
cld
lret
jge
stc
sahf
xchg
and
ss
fwait
pop
sbb
insb
jp
pop
pop
pop
jg
adc
movsl
sub
add
andb
jnp
mov
jno
mov
mov
sti
loop
mov
sub
loope
daa
loopne
daa
insl
cmp
sbb
imul
adc
xchg
sti
push
inc
adc
and
or
popa
adc
xor
cltd
nop
outsb
adc
mov
jae
test
xchg
ret
pushf
xchg
clc
test
mov
push
movsl
shlb
fs
sbb
mov
adc
cltd
push
fdivs
and
xchg
and
mov
lret
pop
test
fimull
rclb
loopne
xor
fld
sbb
iret
xchg
movsb
cli
lcall
push
sbb
frstor
xor
xor
mov
fs
mov
les
fcompl
pop
xor
test
jp
and
sbb
xchg
add
inc
imul
scas
jecxz
popa
dec
rorb
lods
in
xchg
sub
sbb
mov
imul
mov
mov
movsb
add
mov
mov
jl
in
pusha
push
lcall
incl
sub
push
xchg
xor
pop
push
cmc
stc
ret
test
pop
adc
pop
lods
inc
dec
mov
gs
add
int
pop
push
add
into
fdivrl
shr
xor
shrl
mov
push
adc
mov
rcrb
sahf
mov
out
sti
sub
sbb
test
sti
loopne
fcomps
loopne
das
pop
add
xchg
enter
outsb
stc
sbb
jle
scas
pop
and
and
cmc
pop
add
mov
cltd
mov
add
cltd
push
mov
jp
or
xchg
sub
push
xchg
jmp
pop
jne
push
out
nop
daa
insl
xlat
lock
push
scas
inc
fs
bswap
ret
test
lock
push
mov
adc
sbb
popa
cmpl
cmc
lea
loop
sbb
int3
pop
push
jo
sbb
cli
and
xlat
add
mov
push
push
hlt
push
dec
shrb
sub
or
cmp
out
or
pmaxub
daa
std
call
out
pushf
jae
or
ds
cli
cmp
or
or
mov
dec
adcl
mov
aam
outsb
push
inc
pop
adc
pop
les
pusha
pop
imul
cmp
jmp
orb
or
in
mov
pop
xor
jmp
inc
in
xlat
enter
inc
outsb
lcallw
cld
xorl
or
mov
rorl
add
xchg
sub
es
push
test
dec
aad
loop
das
xabort
incl
sub
sbb
insb
mov
out
jl
adc
outsb
in
mov
frstor
sbb
shll
or
adc
fnstenv
xchg
rcr
xchg
in
dec
enter
mov
cwtl
fdivrl
jbe
push
lods
addr16
roll
nop
pop
cld
loope
cs
data16
jmp
in
movsb
push
jbe
xchg
mov
rorb
add
lret
js
data16
jp
push
jmp
pusha
push
sbb
jo
sbb
jne
dec
mov
dec
int3
in
mov
add
cltd
sub
repnz
add
arpl
fsubr
cmp
sub
sbb
mov
arpl
mov
jne
aaa
mov
test
test
icebp
pop
lods
stos
add
cmp
adc
dec
lds
ffree
lods
xchg
jno
dec
incb
sbb
xchg
in
adc
hlt
or
loopne
pop
mov
sbb
cmp
xchg
mov
sbb
pusha
cmc
outsl
cli
add
test
and
in
rcr
je
repnz
and
aas
mov
fnsave
bound
loopne
imul
cmp
das
mov
xchg
xor
inc
fildl
test
movsb
xchg
pop
pusha
and
mov
ret
inc
cmp
adc
sbb
stc
nop
inc
cmp
cmc
mov
xor
nop
jg
fnstsw
adc
xchg
dec
arpl
jnp
outsl
sbb
or
mov
xlat
outsb
jmp
aaa
pop
pop
xor
in
orl
scas
adc
mov
push
fsubrs
fnsave
cmp
push
js
fwait
mov
pop
pushf
xor
arpl
xchg
imul
arpl
push
lcall
mov
pop
cmc
mov
cmpsb
cmp
rorb
jns
or
pop
cmp
add
push
or
fwait
imul
daa
divb
frstor
jns
mov
gs
push
pop
xor
dec
jmp
push
inc
lds
mov
mov
mov
outsl
cmpsl
ljmp
dec
popa
jne
xchg
insl
nop
push
les
fnstenv
test
addr16
negl
pop
pusha
inc
fsts
and
ss
inc
gs
xor
push
lods
xor
adcl
in
fnstenv
xor
out
xchg
lods
ljmp
jae
shl
and
push
repnz
add
jp
das
in
mov
cltd
xor
js
je,pt
dec
test
fimuls
adc
xor
das
outsb
mov
dec
in
and
add
ja
push
sub
montmul
cmpsb
add
daa
sub
cltd
insb
lds
mov
cmp
ds
nop
jg
lds
testl
sub
dec
call
xlat
lea
mov
loopne
sbb
mov
sub
push
enter
push
sar
data16
push
mov
pop
scas
xchg
and
jg
mov
int3
in
push
popf
mov
aam
aas
or
adc
pop
dec
lds
jbe
scas
mov
addr16
cltd
fisubl
or
xchg
pop
add
ja
push
mov
xchg
push
movsl
and
xchg
pop
add
call
or
ret
or
sub
mov
jg
shrb
lea
test
sub
adc
stos
ss
fldt
mov
fildll
inc
fstpl
in
xorl
ds
inc
cmp
jno
shlb
xchg
pop
out
ret
shr
test
jmp
sbb
data16
push
outsb
xchg
sarl
fstps
or
clc
adc
stos
inc
dec
movnti
shlb
add
pop
negb
and
push
add
je
cld
in
push
and
xchg
sub
lret
cli
jmp
rcrl
and
push
add
xor
inc
jmp
mov
pop
add
shll
xchg
sub
and
jp
pop
cld
or
icebp
jmp
pop
sbb
and
and
ljmp
arpl
cmp
xor
push
jmp
xor
bound
xor
mov
sbbl
sub
xor
cmp
stos
add
mov
jle
pop
jns
dec
xor
mov
insl
add
test
js
mov
incb
or
int
and
inc
fisttpl
mov
test
incl
sbb
push
push
aaa
into
test
pop
cmpsb
cwtl
repz
jne
jmp
jbe
inc
cmpsl
xchg
jle
jne
jae
fnsaves
shrb
test
and
cmpb
mov
fnsave
repnz
sbb
push
stos
push
mov
int
jnp
outsb
stos
jo
sbb
jb
popa
mov
js
cmp
jp
mov
stos
jg
xchg
lods
cmpb
mov
add
stos
bound
xchg
sbbb
mov
mov
push
mov
mov
push
mov
push
icebp
mov
xchg
mov
adc
jb
ret
xchg
xchg
sub
push
mov
xchg
xor
xchg
out
xchg
push
aam
xchg
push
mov
sbb
xchg
xchg
xchg
mov
xchg
push
loopne
mov
rorb
or
mov
sbb
mov
cmpb
popf
xor
lods
fidivs
mov
stos
mov
push
pushf
lcall
mov
cmp
subl
dec
in
mov
mov
push
ret
dec
jecxz
mov
mov
outsb
test
les
stc
push
in
mov
insl
jecxz
mov
jb
adc
jae
jle
mov
cltd
jecxz
mov
test
jge
adc
bound
sbb
pop
hlt
mov
imul
jno
lea
shlb
cmpl
test
enter
icebp
pop
cmp
mov
mov
push
pushf
jge
rol
int3
arpl
pop
outsl
push
mov
adc
subb
stos
add
fnstcw
loopne
push
mov
xchg
lcall
addr16
jbe
lods
cmpsb
inc
sub
jae
test
fwait
mov
mov
push
dec
enter
pop
lock
iret
out
lods
inc
xor
cli
xchg
pop
outsb
add
push
jecxz
xchg
sbb
data16
push
shlb
nop
je
mov
arpl
out
sub
aaa
push
in
fs
cs
test
mov
adc
or
push
insl
cmp
pop
hlt
mov
xchg
aam
ret
daa
lret
bound
repnz
adc
cmp
xor
mov
notl
cmp
add
enter
xchg
adc
push
pusha
xchg
sub
shlb
lret
mov
xor
jg
xlat
or
enter
dec
push
das
movb
mov
and
mov
jg
lahf
popf
xor
sbb
dec
xchg
jb
lcall
mov
pop
scas
xchg
popf
cmpsl
xor
xchg
bound
xchg
cmpsl
adc
mov
fs
ljmp
sbb
jle
cmp
cltd
test
mov
andb
js
sub
mov
jns
pushf
stos
dec
push
ljmp
jno
ret
mov
stc
repz
sub
clc
push
dec
lds
mov
ds
in
add
out
xchg
and
push
push
dec
xor
xorb
test
push
ljmp
mov
xchg
push
inc
imul
mov
jmp
cmpsb
and
in
add
inc
cmp
movsb
fwait
xchg
xlat
out
lds
xchg
adc
cwtl
inc
cmp
cmpsl
xchg
mov
jb
mov
inc
jmp
or
dec
outsb
pop
jge
lea
inc
fcomp
nop
or
push
out
sub
mov
je
mov
fdivrp
cmc
sbb
daa
push
xor
dec
stos
inc
jle
insb
andl
pop
push
div
dec
popa
and
fwait
mov
inc
out
jne
fs
xchg
adc
mov
mov
sbb
ja
inc
ds
jmp
cwtl
nop
add
lds
mov
or
imul
nop
pop
cmc
lds
mov
js
sbb
pop
sub
lea
dec
loope
jle
xchg
sub
lahf
call
loope
in
cmpl
js
popf
mov
shlb
jg
test
xchg
xlat
mov
pop
call
or
dec
stos
scas
xchg
jle
out
pop
jb
push
jmp
scas
sahf
jno
pop
fdivl
mov
push
das
scas
mov
jnp
mov
pop
or
dec
lods
pop
add
push
add
adc
mov
pop
mov
sti
insb
sbb
mov
js
cmp
push
sbbl
and
adc
aam
cmpsl
xchg
and
fcoms
addr16
std
sub
das
fwait
pop
jne
iret
cmp
push
mov
aas
clc
jp
jb
mov
sahf
xor
std
lahf
mov
sbb
xchg
mov
and
ret
pop
cmp
push
mov
shlb
pushfw
pop
cmpb
test
cwtl
shlb
sbb
cmp
adc
dec
loop
jmp
arpl
adc
xor
mov
mov
adc
lea
decl
fchs
and
xlat
into
pop
enter
adc
cmpsb
inc
shl
and
mov
ret
push
stos
outsl
daa
pop
add
xchg
sub
ss
mov
mov
jp
loop
shll
rorl
enter
test
shrb
out
icebp
and
xchg
inc
ja
pop
sbb
andb
push
lea
pop
fldenv
xchg
ss
mov
in
mov
sbb
push
mov
cmc
xor
sarb
cmp
inc
jnp
fdivl
pop
test
dec
xchg
mov
sub
popa
out
xor
jbe
mov
std
add
popa
rcrb
push
or
sbb
loop
xchg
test
pop
out
test
push
mov
popa
pusha
dec
sahf
ss
enter
sbb
or
sbb
in
and
pop
sbb
shrb
jnp
mov
cwtl
aas
loopne
lcall
inc
movsl
test
or
mov
out
adc
in
fists
test
roll
clc
inc
mov
inc
mov
into
sarb
test
jecxz
into
or
aas
mov
in
lock
dec
jp
orb
in
idivl
push
jge
mov
pop
lahf
out
movsb
insl
int3
std
cli
and
ljmp
ds
sbb
add
sahf
jb
mov
pusha
les
dec
aaa
ljmp
pop
mov
test
and
and
jge
aad
das
lahf
push
lret
mov
outsb
gs
dec
sub
in
dec
xchg
pop
adc
dec
jbe
in
adc
sub
outsb
jbe
dec
jns
sub
pop
push
out
inc
fmull
test
mov
dec
xchg
pop
mov
fidivs
in
or
and
mov
js
fimull
movsb
popa
cltd
dec
xor
jns
mov
movsb
mov
mov
sub
dec
mov
inc
icebp
push
test
push
dec
scas
sti
dec
in
test
adc
lcall
dec
jae
jge
jo
pop
push
popa
ret
pop
movsb
cmp
popa
mov
inc
mov
or
inc
mov
pop
mov
imul
ret
mov
mov
push
mov
xor
lds
popf
push
aas
jecxz
out
lret
pop
push
mov
cli
jecxz
enter
sbb
fidivl
jge
add
mov
cld
inc
pop
sub
mov
push
call
fbld
xor
int3
dec
pop
mov
jae
jnp
outsb
cmp
xchg
pop
mov
pop
shll
pop
idivb
cmp
lret
outsl
push
mov
sbb
cmpsb
cmp
repnz
xor
nop
dec
aas
in
dec
sbb
pop
stc
cmp
xor
mov
xor
inc
outsl
arpl
and
and
outsl
jg
fidivs
dec
popl
jecxz
jl
jbe
pop
sar
and
inc
fsts
daa
xor
cmpsl
xor
testb
sub
jmp
xor
mov
mov
andl
cmp
es
pop
adc
or
in
inc
shlb
xor
scas
je
push
adc
ret
loopne
shrl
add
xchg
out
jb
adc
lock
or
int3
insb
sahf
xchg
xor
jp
fnstcw
lods
ficomps
lret
xchg
aam
sub
fwait
shll
lret
xchg
movsl
test
mov
popf
push
mov
test
adc
ss
fimuls
mov
insb
pop
aaa
jmp
sub
and
insb
popl
xor
jl
push
adc
jo
arpl
xor
fnstsw
xchg
sub
enter
stc
xor
rclb
out
adc
xor
mov
adc
pop
rolb
push
cmp
mov
push
fisubrl
push
inc
mov
mov
xchg
add
in
or
sarl
loope
stos
call
or
fisttpll
shrl
dec
mov
imul
sbb
sub
mov
clc
data16
xchg
jmp
add
mull
jge
xchg
aam
in
add
shlb
in
iret
cmp
fs
push
clc
imul
push
push
mov
pop
xchg
fs
fmuls
outsb
add
je
popf
xchg
insl
jle
imul
xor
inc
push
call
int3
js
and
icebp
dec
mov
iret
inc
pop
repnz
pop
and
mov
mov
pop
lahf
xchg
pop
dec
gs
sarb
sarb
loope
dec
adcl
test
and
cmp
lret
sbb
xor
xchg
sahf
fildll
pop
out
xchg
push
xor
jmp
and
popf
int
and
imul
mov
pop
inc
mov
pop
rorl
or
gs
push
cld
jno
nop
daa
fisubrs
inc
lahf
add
call
mov
divb
enter
mov
loop
adc
rcl
cld
in
test
mov
adc
add
divl
pop
sub
bound
add
inc
xlat
pop
cmp
pop
mov
icebp
stc
xor
loop
outsb
adc
cmc
daa
or
hlt
das
mov
inc
dec
out
sarl
mov
cld
insl
mov
std
push
outsb
mov
outsb
pushf
adc
and
jbe
or
js
add
xchg
jnp
sti
loope
add
test
mov
mov
push
insb
pop
stos
popl
push
in
inc
inc
je
push
push
xor
shll
and
lret
jno
test
in
lods
push
out
mov
adc
test
sbb
js
stos
pop
sub
imul
out
sbb
pop
gs
and
das
and
or
mov
testl
aam
test
cmp
ficoml
mov
enter
dec
push
mov
rclb
pop
shrl
int
adc
lods
gs
cmp
or
push
fisttpll
cmpsb
int
daa
aaa
ret
je
dec
cmpsb
sub
fsts
ljmp
fcmovbe
movsb
pop
lret
mov
arpl
int
push
pushl
in
ss
js
es
sbb
sbb
lcall
mov
xchg
pop
dec
les
adc
ror
out
adc
lcall
or
repz
das
mov
adc
dec
jmp
push
rcrb
pop
mov
jo
sub
mov
xor
xchg
jmp
lods
addl
jle
lahf
mov
out
andb
add
repnz
mov
popf
jbe
jge
cmp
xchg
jp
push
mov
push
popf
pusha
arpl
leave
cmp
mov
xor
xor
pop
add
mov
test
iret
fwait
xchg
xlat
dec
bound
stos
pop
andl
aaa
cmpsl
mov
lret
mov
cli
pop
mov
fimuls
out
repz
xor
xor
adc
inc
sbb
add
add
xchg
ret
cmp
ds
adc
mov
cmc
jnp
ret
dec
mov
jb
fwait
ja
and
pop
inc
adc
mov
test
pop
mov
push
enter
mov
notb
in
pop
sbb
outsl
stos
sub
mull
popa
cmpsl
sbb
stos
jecxz
insb
mov
fpatan
sbb
loopne
stos
les
pop
shll
out
jmp
sub
jo
ret
xor
sub
fdivrl
cld
nop
std
push
mov
divl
fmul
cmp
scas
flds
push
sarb
adc
test
fsts
faddl
ljmp
rclb
cmp
repz
pop
adc
push
addr16
push
ja
mov
mov
pusha
cwtl
jnp
divl
cmpsb
xor
lods
add
ss
jmp
mov
out
fdivs
or
fisttps
mov
xor
fnsave
dec
repnz
hlt
pop
mov
push
cmpsb
stc
rcrl
cltd
or
test
jnp
roll
pop
imulb
stc
and
mov
or
pop
shrb
loop
push
imul
jg
adc
sub
sub
or
push
mov
outsb
test
mov
fldl
in
js
mov
sahf
jb
out
cli
sysexit
xchg
jp
mov
clc
or
mov
xlat
sub
mov
pop
push
into
xchg
lds
icebp
inc
mov
xchg
aad
mov
pop
lods
pop
xchg
mov
cmp
out
pop
aam
imul
aad
jo
out
push
mov
xlat
ds
push
call
iret
in
outsl
ret
leave
lret
mov
in
shll
in
mov
int
or
in
mov
adc
xchg
adc
jns
adc
sbb
orb
testl
pusha
in
xor
add
push
xchg
imul
call
movsb
xchg
mov
inc
fbstp
shll
xchg
stos
pop
es
xchg
add
lahf
nop
lds
sub
or
pop
mov
movsl
cmp
lea
sub
rorb
pmulhw
dec
dec
xlat
repnz
dec
lds
aas
sub
popf
lret
add
fnsave
push
sbb
push
inc
in
cmpl
dec
mov
stc
xchg
je
ds
jecxz
lods
jg
cmp
adc
dec
mov
arpl
jle
or
lods
sbb
inc
mov
mov
dec
adc
xchg
jl
fnstsw
xor
pop
stc
es
lret
clc
inc
icebp
or
cmp
add
mov
push
test
jecxz
cmpsl
call
add
jecxz
jo
mov
out
xor
adc
push
scas
jmp
icebp
or
and
jecxz
dec
mov
dec
mov
hlt
xchg
das
cmp
jp
aad
out
icebp
pop
test
in
out
movsl
iret
and
stos
mov
add
ret
pop
popa
mov
dec
or
fs
xor
mov
hlt
js
ret
push
bound
xor
fwait
xchg
fwait
push
jbe
insb
stc
jns
jecxz
dec
fistpll
stc
adc
loope
test
mov
jle
loop
pop
flds
out
push
popf
fnstenv
dec
mov
testl
sbb
cwtl
loope
xchg
jp
add
sub
std
sarl
into
dec
sbbl
loopne
mov
jmp
cmp
lea
sbb
shlb
cmp
cltd
stos
outsl
cs
push
addr16
cmp
and
push
add
inc
repnz
cmp
bound
inc
push
aaa
aad
cltd
pop
mov
dec
mov
mov
mull
mov
mov
sbb
cmp
sbb
in
push
in
pusha
scas
mov
fisubl
aam
mov
leave
mov
xchg
sub
sahf
sub
push
or
mov
adc
sub
xor
mov
adc
jmp
add
add
xchg
shld
stc
and
pop
jae
fs
aam
dec
and
sbbl
ficomps
ss
sbb
ds
lahf
pop
add
inc
loop
outsb
mov
sbb
jge
sti
das
push
pop
mov
push
pusha
test
push
jno
insb
inc
std
xchg
ja
push
mov
jl
xor
addl
mov
movsl
sub
cmpsb
insl
cmpb
cmp
mov
add
negl
and
inc
mov
cld
and
xchg
scas
inc
inc
sub
subl
js
cmp
lcall
jnp
xchg
or
aad
lds
cld
loop
inc
into
cs
xor
xor
lahf
mov
icebp
push
lret
iret
cli
cmc
cmp
icebp
fidivs
or
scas
lret
lret
in
xor
lret
jnp
cmp
clc
xchg
xchg
jge
sbb
mov
adc
push
lret
dec
jecxz
test
femms
push
in
xor
dec
push
push
outsl
sbb
cmc
aaa
add
xor
mov
pop
push
out
ret
leave
xchg
in
push
ret
sbb
mov
mov
cli
adc
in
or
sub
les
int
dec
sarb
xor
mov
in
pop
cmp
sahf
lea
jmp
mov
cld
repz
mov
add
es
fistps
pop
and
stos
sbb
mov
ljmp
jns
inc
ja
inc
or
pusha
pushf
outsb
and
jge
popa
cltd
jle
sbb
push
arpl
pop
popl
inc
jg
mov
inc
adc
ja
pop
in
orl
cwtl
xchg
das
adc
lahf
stos
outsl
cmpl
pop
pushf
xor
mov
andl
insb
movsb
adc
sahf
pop
jle
negl
sub
call
loope
mov
sbb
aas
adcb
outsb
pop
clc
dec
outsb
push
in
inc
insb
fdivl
push
and
insb
bound
lret
sbb
jbe
scas
dec
or
xchg
cmp
push
lock
adc
inc
xor
adc
dec
sarb
in
test
lea
jmp
dec
and
push
insl
and
aaa
das
jb
xchg
push
push
test
call
or
sub
bnd
aam
scas
pop
jae
fmull
and
push
movsl
lods
fs
icebp
xchg
jp
shlb
movsb
cmpsb
mov
fadds
decb
push
aas
loop
mov
adc
stc
sub
pop
mov
into
aaa
cmpsl
pushf
lods
pop
and
inc
xchg
xchg
fidivrs
aad
insl
cmpsb
in
adc
mov
and
cmp
popa
incb
cltd
test
aam
lods
sarl
imul
xchg
arpl
dec
xchg
or
inc
pop
addl
data16
adc
sub
popa
movsl
push
bound
xchg
int3
push
int3
mov
sbb
lcall
in
sti
pop
int
jbe
clc
inc
lret
loopne
sbb
outsb
ret
repz
out
cmp
and
push
dec
notb
lods
rorb
jl
mov
mov
je
lods
pop
icebp
xchg
ficoml
mov
fnstenv
xchg
inc
mov
sbb
inc
xor
lock
ljmp
js
sub
adc
push
pop
cmpl
dec
int3
push
loope
nop
jp
int
fdivl
nop
mov
ja
xchg
adc
bound
gs
sbb
test
mov
adc
mov
or
in
imul
out
mov
pop
add
adc
and
jbe
loopne
imul
stos
jne
mov
fwait
xchg
jp
cmp
enter
jg
sbb
sarl
mov
fbstp
pushf
inc
lds
dec
rorb
adc
and
popa
repnz
out
and
aad
and
xor
mov
scas
inc
mov
and
sti
loope
nop
in
xor
bt
sbb
inc
mov
sbb
xchg
or
lahf
ja
sbb
fs
fwait
push
popf
sub
adc
outsb
negl
jge
xor
jl
push
push
lcall
xchg
pop
lods
cmpb
pop
int
rclb
cmp
sahf
xor
jmp
orl
ss
fbld
sbb
fwait
sub
jno
repnz
ret
dec
call
int3
pop
stc
mov
sbb
mov
adc
fisubrl
cmp
sub
repz
les
and
icebp
ds
xchg
push
adc
cmp
cwtl
mov
jl
outsb
xchg
mov
es
jae
cmpl
cld
insl
push
inc
mov
push
or
ja
inc
push
cmp
xor
xchg
xchg
push
jb
mov
or
adcb
xor
hlt
fadd
pop
loopne
filds
in
jne
test
jno
cli
xchg
mov
ret
rclb
xlat
ljmp
out
pop
faddl
stos
jno
jmp
cwtl
jo
sbb
jne
mov
lock
dec
pop
idivb
scas
in
sub
pop
mov
in
pushf
mov
lds
cmc
sbb
and
idivb
shrb
sub
lods
add
push
mov
adc
aas
xchg
adc
cltd
xor
adc
or
mov
out
daa
add
hlt
add
add
xchg
rclb
aad
sbb
mov
lea
das
test
push
pop
push
pop
add
imul
mov
and
mov
movsl
sbbb
jp
mov
sub
add
popa
lods
mov
decl
mov
adc
fwait
fs
repnz
pop
shll
adc
int
stc
and
into
scas
sub
out
out
xchg
jl
lods
or
cmc
movb
cld
xchg
stc
test
jae
sbb
sti
add
mov
test
aas
push
cs
nop
cmp
call
mov
jmp
sub
cld
and
fcomip
xchg
and
std
pop
push
mov
add
mov
repz
mov
jmp
pop
in
and
cmp
mov
fistpl
mov
repz
or
js
call
sub
loope,pt
addr16
dec
cmp
fiadds
dec
sub
xor
push
jb
jecxz
cmp
push
jne
or
inc
push
aas
push
add
cli
cld
xor
pop
flds
ror
and
push
mov
outsb
rorl
pop
aad
aaa
in
xor
fisttps
mov
cmc
sub
ret
inc
call
test
dec
fidivl
ljmp
arpl
out
dec
mov
sbb
mov
cli
dec
mov
adc
fmull
sub
pusha
and
fwait
xchg
scas
jbe
adc
rclb
push
ja
inc
mov
xchg
jnp
mov
lahf
es
testb
inc
mov
clc
out
je
lret
lods
pushf
xor
in
push
mov
test
or
daa
cmp
test
sbb
out
repnz
dec
outsl
push
and
jns
int
cmp
dec
mov
cmp
sbbl
mov
jecxz
jae
dec
mov
jo
sahf
inc
fmul
insl
mov
insb
mov
mov
jbe
cmpsb
pusha
cmpsl
cmp
cmp
mov
hlt
sub
shrl
scas
mov
mov
aad
xchg
fsubrs
das
aaa
or
ja
icebp
inc
mov
sahf
xchg
xchg
stos
jo
push
imul
in
pop
repnz
movsb
cmp
push
mov
and
iret
lea
js
add
mov
in
cmp
add
lods
inc
jo
call
cmp
push
popf
fisttps
pop
push
insl
imul
movsl
fs
lods
pop
pop
mov
clc
xchg
ja
mov
mov
cmp
mov
ret
aaa
aam
pop
xor
loope
ficoml
in
lret
push
xchg
push
test
test
outsb
movsb
std
xchg
push
out
mov
iret
icebp
dec
jp
push
mov
fisubrs
stc
or
mov
jmp
xchg
pop
insb
push
clc
es
ja
sub
imul
mov
call
je
stos
sbb
mov
fwait
int
mov
inc
mov
xchg
sub
mov
fcoml
mov
fs
dec
jmp
insb
in
mov
xor
iret
aas
fadds
enter
fists
push
mov
insl
outsb
stos
xchg
cmp
jae
add
rcrl
loope
ja
mov
cmp
xchg
mov
xor
push
xchg
cmc
daa
hlt
js
or
fadds
and
enter
mov
imul
mov
test
sti
outsl
push
sub
dec
lea
add
jg
mov
push
popf
mov
leave
pusha
es
and
fildl
jle
cld
inc
fldcw
dec
pusha
idivl
and
sarl
inc
fdivs
pushf
xor
xchg
pop
test
mov
adc
fsubrs
aaa
fwait
xor
testb
inc
adc
jb
xlat
outsb
adc
mov
add
dec
ss
je
pop
fdivl
popl
cltd
add
mov
loope
cmp
xchg
add
out
out
insl
xchg
ja
jns
push
jmp
fwait
xchg
sub
cmp
push
mov
and
or
jns
fdiv
dec
inc
fdivrs
adc
lcall
adc
popf
xor
xor
fucomi
mov
jbe
ds
cmpl
aam
xchg
pop
add
jg
mov
pop
shl
mov
cwtl
and
inc
pop
mov
mov
sub
clc
cmp
dec
cmovnp
jg
shrl
mov
out
inc
gs
push
out
jp
int
mov
inc
stos
inc
ja
push
ljmp
inc
fsubrs
ljmp
nop
or
push
jecxz
rclb
pushf
dec
loopne
popf
sahf
push
iret
out
addr16
lds
and
jecxz
gs
mov
mov
push
fbstp
dec
out
std
test
mov
mov
mov
add
mov
call
test
test
push
or
dec
shl
stos
ljmp
and
or
adc
out
mov
pop
dec
popf
pop
movsl
daa
in
outsb
xor
xchg
mov
lret
hlt
shrb
xlat
jmp
adc
lods
inc
pop
mov
dec
xlat
adc
movsb
and
into
in
inc
pop
or
lods
jge
inc
sti
push
mov
xchg
mov
outsb
cmp
adc
scas
ds
ljmp
movsl
cmc
fsubs
dec
adc
enter
mov
jo
mov
dec
inc
pop
push
fxch
test
in
add
sbb
add
dec
loop
cld
push
push
mov
fisubrs
mov
ja
inc
lcall
cli
cs
jmp
pop
mov
stos
in
fdivrs
xchg
xor
lock
dec
sarl
stos
sbb
inc
mov
incb
stos
call
or
inc
and
pop
add
lock
lock
mov
data16
in
mov
rcr
jle
lock
scas
leave
jl
test
dec
mov
sub
stos
subb
mov
mov
or
cs
in
xor
adc
fwait
pop
pop
xor
in
test
xchg
cmpsb
push
sub
or
leave
stos
sub
data16
stc
fcmovu
xor
sbb
insb
aaa
push
mov
sub
test
inc
xor
cltd
jo
cld
or
movsl
fs
mov
cli
mov
lock
xrstors
mov
rcll
ret
out
lds
mov
adc
adc
push
sub
mov
or
jmp
cmp
cld
jecxz
xchg
cmp
iret
xor
sub
push
push
mov
les
es
lcall
xlat
jl
push
dec
mov
xor
clc
or
jns
dec
es
les
ret
dec
loope
leave
dec
addr16
ss
and
je
pcmpgtw
adcb
xchg
movsb
shrl
xor
mov
inc
or
mov
pop
pop
dec
push
stos
pop
out
jns
loope
lcall
popl
pop
mov
xor
sbb
mov
inc
mov
pop
loopne
dec
shrl
out
into
gs
xor
cmp
xor
mov
lea
lock
push
cmp
push
lock
jno
cmp
ds
repz
popa
gs
push
repnz
and
sbbl
inc
test
ja
mov
sub
aas
sahf
daa
mov
mov
xchg
out
lods
pop
dec
jecxz
push
std
xchg
inc
jno
lcall
jne
orb
cmc
loopne
jbe
jmp
imul
and
cmp
or
repz
mov
shr
scas
scas
adcb
xor
pop
ror
outsl
mov
push
mov
fisubl
lods
pop
ret
ss
adc
pop
cmpsl
inc
inc
pop
scas
mov
lret
aaa
cld
arpl
ficomps
outsb
je
pop
ljmp
mov
ret
mov
stos
cmc
pop
mov
negb
fcmovu
test
out
shll
ljmp
fcoml
loope
push
dec
push
xchg
cs
add
outsl
jl
xlat
jge
outsb
orb
pusha
call
pop
shlb
scas
xchg
xor
add
iret
xchg
and
add
pushf
cmp
orl
movsl
cs
out
jecxz
loope
test
outsl
hlt
lahf
fadds
jl
mov
dec
stos
mov
movsb
pushf
mov
mov
loope
or
psrlq
jle
sub
orl
jle
cs
lahf
push
cld
adc
loope
inc
dec
jmp
xchg
test
push
dec
adc
addl
scas
mov
cmpsb
sub
mov
scas
xor
idiv
bound
popf
inc
pushf
pop
fldl
xchg
pop
push
sub
stc
fs
sub
or
cmc
pop
inc
pop
or
mov
adc
lea
mov
pop
cld
jecxz
push
adc
cmc
push
flds
inc
dec
or
stos
xor
jbe
cmp
pop
xchg
icebp
movsb
sub
adc
lds
dec
leave
adc
push
inc
dec
repz
mov
jmp
jmp
stos
xor
add
lret
lahf
popf
xlat
js
lret
inc
pop
jns
orl
ret
push
pop
outsl
lock
pop
enter
pop
adc
xor
inc
push
jle
lods
addl
mov
mov
int
addr16
push
add
addl
push
xchg
and
jns
in
mov
mov
sbb
mov
adcb
pop
aad
shlb
jbe
imul
enter
sub
into
enter
sbb
sar
and
xchg
inc
inc
jmp
or
pushf
inc
adc
dec
mov
out
imul
add
sub
ret
into
mov
inc
mov
jle
ret
outsb
jmp
loop
addr16
ja
xchg
inc
mov
cmpsl
inc
adc
push
add
aam
jle
pop
sub
mov
es
cld
adc
inc
push
fstl
arpl
or
shr
push
add
clc
add
pop
cmp
push
mov
jmp
aam
insb
out
or
add
push
std
rolb
sub
xor
xchg
adc
popa
jmp
notb
add
lds
pop
mov
fdivr
std
push
add
out
add
inc
movsl
das
movsl
ljmp
pop
push
gs
jmp
inc
jne
cmp
sbb
add
dec
sub
mov
sbb
gs
inc
jno
jecxz
adc
dec
jmp
push
loop
mov
es
scas
daa
sbb
icebp
lds
shll
xchg
inc
lret
lahf
sbb
push
add
inc
mov
cld
xor
jns
push
std
adc
inc
in
adc
lcall
cmp
lods
sub
and
shlb
mov
lea
in
adc
mov
sub
gs
in
imul
push
or
fstl
ss
xchg
insb
imul
jge
aad
mov
push
fmull
shrl
mov
dec
lds
adc
sub
inc
lods
adcl
cmpsl
xor
mov
stos
sbbl
push
push
arpl
inc
dec
or
lahf
popf
jbe
fcmovb
insl
jmp
subl
mov
xchg
push
gs
ret
leave
or
sahf
sbb
in
imul
sub
pop
mov
fsub
int
adc
data16
ss
xorb
or
push
and
ja
cld
xor
jae
in
and
add
push
cli
mov
stos
add
sub
jns
jbe
out
and
push
call
push
int
jbe
xchg
mov
scas
sbb
test
add
and
push
cmp
xchg
das
orb
ret
mov
push
sti
jp
movsb
sub
insb
out
add
pop
lds
xor
xchg
test
cmp
cld
call
flds
pop
dec
push
ss
stc
bound
fisubrl
ja
mov
orb
rcrl
xchg
mov
pushf
inc
cltd
test
bound
in
jne
jecxz
movsl
add
fadds
dec
in
dec
adc
sub
clc
sarb
loope
outsb
hlt
mov
stos
xlat
jnp
ret
sbb
inc
fwait
inc
or
xchg
popf
inc
stos
imul
mov
jg
xor
mov
inc
pop
sbb
inc
xchg
fildl
es
imul
lock
pop
inc
in
cmp
test
jo
mov
adc
dec
shl
insb
pop
popf
or
ret
jno
sbb
sbb
push
je
sub
ret
addl
push
dec
inc
or
push
call
push
imull
lahf
inc
filds
sbb
push
cmovg
jnp
pop
cltd
inc
je
negb
fs
xchg
add
and
loope
lds
jle
mov
mov
fwait
cwtl
arpl
in
rcl
test
cld
adcl
inc
iret
lea
imul
xorb
fdiv
mov
vpaddq
add
pop
std
cmp
imulb
inc
adc
push
ror
iret
mov
xchg
pop
jne
les
lea
pop
sarb
mov
push
mov
mov
dec
or
icebp
bound
pop
clc
iret
mov
inc
sbb
mov
mov
pushf
ds
inc
std
pop
inc
nop
push
dec
sub
aaa
lods
sub
dec
addr16
fcomps
ljmp
pop
inc
xor
loopne
push
js
fistl
scas
sub
adc
lods
daa
bound
lret
cmp
and
mov
sub
xor
scas
daa
jl
xchg
arpl
std
mov
inc
adc
sahf
hlt
or
jg
push
inc
adc
xchg
mov
and
cmp
mov
jae
dec
arpl
mov
dec
pop
sti
and
mov
cmp
mov
fistl
lods
or
stc
sub
xor
icebp
flds
shlb
mov
fsubs
jp
jle
xor
mov
push
ret
iret
xchg
xchg
les
icebp
xor
push
mov
cmp
sbb
js
mov
sbb
shl
sbb
jb
dec
jae
adc
test
inc
nop
cmp
adc
sub
sbb
inc
and
sbb
inc
mov
rclb
fiadds
fcoms
xchg
jmp
pop
loopne
addr16
ds
xor
sub
jnp
int3
je
addl
popf
into
nop
fildl
fcoml
lcall
jmp
sti
push
popl
ret
mov
inc
bswap
aam
or
adc
inc
xchg
mov
aad
cmpsb
push
lcall
dec
fidivrl
popf
mov
sti
fldl
pop
ds
aaa
jmp
sbb
push
stc
sbb
scas
mov
ja
mov
rorl
in
ss
ljmp
or
mov
iret
fadds
cmp
enter
or
pop
stos
xor
enter
das
repnz
stc
shl
imul
mov
jno
and
push
xchg
dec
push
push
xchg
stos
jns
ss
mov
shrl
mov
jp
and
iret
or
cmc
pop
sarl
out
mov
inc
mulb
aas
in
outsb
mov
mov
push
ret
pop
lcall
sbb
inc
add
je
mov
imul
cltd
xchg
inc
leave
xor
loope
mov
mov
inc
adc
lahf
cmp
scas
daa
push
mov
jnp
mov
cmpsb
mov
mov
das
sbb
mov
mov
cmpsb
pop
repz
rol
pop
add
mov
sbbb
adc
xor
sbb
jmp
dec
mov
sub
jle
and
fidivs
xor
jge
lcall
push
ret
dec
adc
cmc
mov
mov
jmp
mov
mov
dec
xchg
cmp
imul
sarl
ret
mov
mov
je
xor
xchg
inc
jmp
repz
push
shl
popf
inc
or
sub
dec
or
xchg
aas
and
data16
mov
adcl
fistpll
imul
xchg
dec
mov
pusha
xchg
xchg
inc
cmpl
xor
or
pop
loope
rclb
pop
add
inc
in
je
pop
das
mov
aaa
cmp
push
adc
insl
lret
xor
mov
psubsb
or
int3
inc
adc
inc
mov
xor
test
popa
repnz
insl
xor
or
xchg
adc
jae
dec
adc
outsb
imul
lea
or
fsubs
aaa
pop
aad
xor
jbe
repz
mov
iret
pop
negl
adc
popf
daa
adc
mov
hlt
dec
mov
out
push
cld
mov
mov
push
movsl
push
lret
pop
xorb
push
push
int3
or
filds
lahf
mov
dec
push
jmp
ss
cs
mov
fidivrs
sub
adc
cmp
jae
jle
ret
mov
mov
js
jecxz
test
out
sti
cmp
outsl
idivl
xor
lret
xor
sbb
in
pop
mov
adc
dec
hlt
mov
and
int3
sahf
jmp
xchg
add
xchg
call
cld
imul
xor
mov
inc
clc
stos
xor
xchg
insb
jmp
pop
dec
or
lods
jb
lret
in
xchg
inc
syscall
pop
xchg
pop
in
push
int
stc
lods
mov
adcb
or
mov
push
push
into
xor
or
out
clc
ds
sbb
cld
xor
lret
cmc
insb
insb
out
mov
fdivl
lods
gs
cli
lea
xchg
popf
jo
mov
into
mov
adc
loope
leave
mov
cmp
inc
push
into
scas
sub
adc
fstl
ret
xchg
push
pop
ja
push
nop
inc
adc
add
mov
sbb
mov
xchg
popa
dec
push
add
ret
xchg
xorl
rolb
out
fistps
sub
mov
fnsave
sbb
std
inc
lea
in
cmp
sub
sahf
inc
mov
stos
sub
mov
addr16
movsb
daa
pop
dec
jbe
es
or
xor
xor
push
idivl
mov
pop
push
adcl
push
and
in
adc
repnz
mov
or
aas
dec
outsl
sub
pop
bound
insb
push
jge
adc
outsl
in
pop
cmp
mov
popf
dec
jecxz
in
push
clc
add
rorl
pop
cli
loop
sbb
stos
mov
pop
stc
fildll
push
das
mov
jb
sub
scas
push
add
dec
ds
xor
lea
mov
in
dec
scas
daa
out
addr16
mov
testl
add
lea
insb
cmc
out
loop
push
mov
xor
hlt
mov
stos
dec
adc
inc
movsl
out
popf
cwtl
pop
mov
js
cmp
jo
mov
test
xchg
inc
mov
mov
mov
mov
mov
jl
pop
cmpsl
dec
loop
jl
lds
jno
sarb
lahf
cli
add
aas
lods
jge
mov
lods
cmp
outsl
jecxz
in
mov
mov
jge
cli
mov
and
lds
pop
insb
into
popl
aad
std
mov
stos
xor
int3
xchg
lret
and
js
cmc
and
mov
in
aas
lcall
xor
xchg
inc
out
sub
int
negl
das
idivb
cmp
das
test
adc
cmp
push
dec
adc
into
leave
xchg
iret
out
cmp
ret
sbb
std
pop
xchg
ds
ljmp
push
inc
inc
adc
adc
and
xchg
inc
adc
test
dec
sbb
adc
pop
imul
insb
pop
mov
jmp
mov
cmc
call
insb
ja
inc
or
and
jmp
mov
mov
cs
and
sbb
sub
inc
or
sbb
outsb
sub
jecxz
or
imul
es
inc
cmpsl
arpl
int3
xchg
addr16
or
das
leave
pop
mov
negb
stos
xor
out
push
out
int3
cld
popf
inc
loop
inc
or
cmc
xchg
cmp
ficoms
mov
sub
out
xchg
mov
ja
mov
xchg
dec
in
loopne
add
aad
rolb
repz
movsl
test
mov
int
cmpsl
imul
out
andl
repnz
and
addr16
cli
xor
mov
add
inc
mov
rep
cmpsb
add
arpl
faddl
hlt
ret
inc
loop
bound
cwtl
movsb
sub
add
jne
rclb
roll
jmp
repnz
fdivp
sahf
cmp
add
xlat
test
mov
push
and
sbb
out
push
inc
jbe
int
inc
movlps
inc
inc
std
pop
add
pop
xchg
cmp
mov
call
stc
lock
scas
add
dec
adc
inc
repz
mov
imul
fsubr
jbe
mov
and
jnp
pusha
add
cmp
roll
xor
jle
sarl
imul
dec
mov
lret
mov
test
mull
aam
pop
lods
xor
scas
xor
arpl
cmp
shl
pop
sub
adc
jge
in
icebp
push
jmp
out
inc
cmp
xchg
test
sub
adc
inc
daa
test
aaa
push
inc
fistl
mov
xor
add
cmp
insb
mov
dec
push
orb
stc
pop
xchg
repz
aam
out
insl
les
nop
aas
mov
fdivrl
scas
push
mov
mov
mov
push
add
into
mov
or
pop
roll
and
adcb
sub
mov
add
add
stos
add
cltd
das
and
scas
mov
push
mov
mov
lcall
sarb
xchg
and
adc
pop
ret
mov
orl
pop
mov
aas
clc
fldcw
lods
xchg
test
jae
int
xor
and
xchg
push
pop
aam
enter
adc
lret
cmpsl
sub
xor
pop
in
adc
mov
mov
jp
rolb
ficoml
lds
les
in
pop
in
jmp
xchg
pop
xor
pop
sbb
xchg
mov
adcb
push
aam
push
xchg
aas
inc
das
addr16
jne
dec
or
mov
ds
jge
jg
subl
and
mov
inc
fdivs
orb
arpl
loop
mov
mov
cmpsl
test
push
pop
push
negl
xchg
shlb
jns
addr16
cmp
mov
lods
sub
pop
and
loopne
push
into
ret
mov
adc
inc
psrlq
mov
loope
or
fs
adc
jmp
mov
pop
cld
adc
iret
loope
jo
orl
popf
jns
jmp
cmpsl
jo
ljmp
push
mov
insb
mov
xorb
callw
out
jo
jae
mov
sti
pop
mov
jae
std
stos
inc
out
inc
sbb
dec
fnstsw
scas
aaa
movsb
cmpb
arpl
jno
loopne
fldt
ffreep
pop
jle
xor
mov
dec
pusha
mov
sahf
inc
addl
inc
or
bound
mov
pop
add
stos
xor
jmpw
mov
outsb
mov
adc
sub
push
mov
mov
mov
inc
adc
jg
dec
fadds
or
popa
push
sbb
mov
cmp
sub
jl
fdivrs
psrlq
or
fwait
push
sbb
xor
hlt
push
cmc
gs
fadds
cmp
inc
push
lea
std
pop
rcl
cmc
orl
dec
or
rclb
ret
pop
out
outsb
xor
fdivrs
cs
inc
xchg
call
mov
stos
out
or
sar
cltd
inc
and
rcrb
pop
inc
jo
and
push
icebp
pop
fsubl
addr16
les
jo
pop
lret
push
push
divl
movsl
mov
xchg
add
icebp
add
stc
imul
xorl
rorb
stos
lds
pop
bound
leave
jae
jmp
icebp
push
mov
jns
addl
inc
test
fs
aas
daa
stos
pop
test
xchg
lahf
inc
jl
int
jno
sti
jmp
in
outsl
hlt
inc
lret
loope
xchg
shll
arpl
test
push
testl
add
mov
lods
dec
adc
mov
in
pop
jecxz
sbb
popf
inc
push
dec
sbb
jns
lret
insl
push
stos
push
or
lock
xor
push
sbb
jne
ljmp
cmpsl
mov
mov
mov
jae
jb
jp
rorl
xchg
cmp
mov
leave
xchg
cmc
mov
rolb
push
mov
xchg
push
arpl
sbb
dec
lds
adc
pop
stc
rorl
int3
push
mov
popl
xchg
xorb
hlt
popa
fildl
pop
rolb
repnz
dec
pop
dec
outsb
mov
xchg
cmp
jecxz
mov
cwtl
std
inc
adc
enter
lahf
je
iret
mov
mov
stos
dec
adc
lcall
subb
mov
mov
shlb
or
divb
jne
in
and
jmpw
ljmp
stc
and
test
nop
daa
sub
scas
inc
lea
notl
faddp
xchg
mov
mov
mov
cmp
mov
cmpsl
ds
xchg
sbb
insb
push
out
outsb
push
jae
fbld
data16
out
std
arpl
mov
shlb
mov
stc
shll
jl
std
pop
ljmp
jp
jl
test
inc
cli
mov
dec
push
jle
in
lahf
imul
insb
test
inc
cmpl
lods
inc
or
mov
mov
or
pop
enter
mov
icebp
inc
faddl
fdivrs
push
jno
int3
xchg
pushf
xor
push
clc
and
shrl
or
nop
xorb
sbb
xor
rol
mov
mov
mov
mov
dec
adc
mov
add
out
out
insl
push
add
test
inc
mov
cli
imul
pop
pop
and
lret
inc
push
adc
inc
adc
sub
xor
enter
lods
adc
mov
sahf
cmp
pop
push
out
add
lea
test
subb
jo
std
cmp
and
push
pop
lock
and
xor
cmp
movsl
mov
dec
pop
cmp
in
xor
icebp
pop
mov
mov
xlat
inc
faddl
mov
mov
fidivl
aas
lret
mov
addr16
jnp
pop
adc
sub
ss
adc
shl
dec
test
sti
ret
cld
addr16
cmp
ds
andb
loopne
outsb
mov
movsl
adcb
sub
add
jbe
mov
iret
mov
dec
xadd
fwait
inc
inc
adc
fstl
jae
push
sbb
stos
andl
mov
cmpsl
jns
jge
push
stc
xchg
std
ret
rorb
lret
push
add
sarl
push
and
lods
lea
sarl
aad
push
adc
mov
jae
mov
out
and
push
sti
pop
aaa
or
imul
repz
popa
aad
xor
jae
pop
dec
pop
ljmp
pop
imul
js
mov
push
lods
xor
xor
dec
adc
fildl
adc
cmpsb
mov
mov
inc
or
jg
cld
push
xchg
shrl
jle
jnp
dec
fadds
xor
sbb
xor
cmp
lods
dec
mov
ljmpw
cld
sub
int3
pusha
xchg
repnz
mov
scas
in
jno
mov
repnz
adc
fidivrs
dec
test
mov
not
scas
xor
orl
inc
adc
mov
pushf
stos
jne
sbb
in
test
add
stos
ret
xor
nop
inc
bound
adc
adcb
out
pusha
mul
cli
pusha
imull
mov
adc
mov
mov
in
shlw
loopne
and
pop
pop
sub
push
xchg
in
jne
pop
xor
icebp
sub
aas
popf
inc
sbb
popl
gs
faddl
nop
je
movsb
push
enter
test
inc
out
les
roll
shlb
rolb
push
test
imul
inc
test
movsl
in
mov
fdivrs
aam
ja
xor
mov
shlb
mov
or
add
mov
mov
jo
ficompl
ret
out
insb
rorb
xchg
mov
std
jmp
addb
and
dec
cmp
jg
mov
outsl
mov
jnp
sarb
outsl
fadds
das
xchg
inc
xor
sbb
filds
cltd
xor
ja
push
add
push
mov
mov
pop
pop
xchg
jnp
negb
je
ljmp
pop
iret
fbstp
xchg
pop
mov
dec
loope
xlat
inc
faddl
jg
pushl
mov
mov
orl
xchg
addl
sbb
xchg
xorl
mov
ja
mov
test
leave
xchg
decb
push
dec
mov
mov
test
out
fcmovnu
inc
push
lahf
or
dec
or
pushf
sti
pop
jg
ds
icebp
rolb
dec
or
xchg
inc
outsl
arpl
adc
xor
movsl
lods
mov
mov
xor
leave
cmp
fcmovnu
jnp
add
test
scas
sbb
mov
sbb
aad
add
sbb
dec
fadds
shlb
aas
and
adc
out
je
inc
in
jbe
xchg
cmp
in
pop
lea
mov
xchg
mov
jno
lods
out
inc
lea
and
or
adc
adc
jmp
mov
cmp
fsubl
dec
inc
xor
stc
xor
mov
cmp
out
and
imul
or
mov
mov
fmuls
cli
pusha
pushf
pop
add
stos
test
into
out
and
xchg
outsb
icebp
stos
rcr
cmp
ja
cs
scas
mov
sbb
sub
fildl
fdivl
es
shlb
sub
dec
sbb
dec
mov
fnstcw
cld
das
mov
jnp
jmp
jnp
mov
test
sbb
cli
mov
lea
incl
adc
jo
mov
sub
cmpsb
movl
std
and
sbb
shrb
std
pop
adc
dec
das
stos
mov
push
leave
int3
mov
bound
adc
cmc
cmp
dec
or
xchg
mov
add
mov
mov
inc
dec
pop
aaa
mov
xchg
pop
add
push
shrb
xor
lret
fwait
inc
adc
xchg
cs
imul
lea
lea
fadds
xlat
jp
mov
sub
into
and
bound
aaa
xlat
xchg
push
lds
aad
fisubrl
clc
push
loopne
mov
cmc
sahf
sbb
stos
xchg
hlt
pusha
sahf
iret
mov
xor
out
repnz
cmp
sbb
stc
arpl
cmp
push
repz
add
xchg
pop
push
mov
pop
xorb
xchg
mov
sub
stos
daa
out
icebp
jp
xchg
push
int3
mov
mull
rolb
iret
lahf
enter
lds
sbb
inc
dec
or
xor
push
mov
outsb
add
adc
jae
push
cltd
daa
mov
lea
jae
xchg
dec
out
scas
into
fnstsw
mov
test
cmp
push
inc
mov
test
pushf
in
sub
out
push
aaa
lahf
cmp
and
mov
mov
mov
mov
cmp
pop
ja
loop
dec
comiss
arpl
lahf
aas
or
clc
iret
jl
in
negb
int3
push
testl
pop
pop
add
adc
mov
fistpll
push
fimull
and
dec
and
stos
stos
xchg
jl
inc
mov
or
jg
aas
fwait
ret
pop
push
je
dec
xor
or
sbb
mov
stos
sub
cli
andb
out
push
imul
push
mov
movsl
das
jg
pop
mov
cmpsb
insl
ljmp
cmp
mov
add
es
xchg
stos
stos
sub
cmpsb
gs
mov
push
pop
add
add
xor
mov
inc
or
mov
lods
pop
lds
and
dec
dec
push
mov
xchg
stc
cmp
push
stc
jb
lcall
jp
testb
ja
xchg
cmp
data16
push
out
mov
pop
int3
mov
shlb
cmp
aad
imul
jae
inc
pop
add
push
fldt
and
mov
sbb
xor
scas
das
nop
out
out
or
mov
mov
mov
pop
sti
and
mov
xor
test
or
or
pushf
cmp
insb
push
cmp
aas
pushf
sub
dec
or
aam
cmp
mov
and
push
loop
xchg
sti
adc
pop
push
jecxz
xchg
loope
test
xchg
push
push
stc
jmp
leave
fimull
or
jno
jae
mov
loop
into
mov
xchg
clc
push
pop
cld
iret
and
out
adc
mov
mov
cli
push
test
dec
push
lds
xor
add
bsr
addr16
pop
and
mov
mov
dec
aas
push
xchg
cmp
movsl
sarb
inc
mov
out
pop
inc
push
and
cmp
jg
mov
pop
jle
jbe
sub
sbb
add
pop
cmp
mov
test
lret
add
sub
dec
pop
cmp
xlat
fwait
lock
cli
fs
ljmp
push
in
cs
out
imul
lods
sub
adc
dec
push
xchg
add
jecxz
fidivrl
add
pop
frstor
scas
add
leave
lea
lahf
xchg
push
or
jge
mov
ljmp
or
sub
pop
add
sahf
inc
lret
adc
inc
test
movsl
ja
movsl
inc
mov
addr16
xchg
mov
add
nop
dec
adc
in
int3
nop
movb
or
movsb
sub
inc
add
adc
movsl
pop
dec
jmp
dec
mov
mov
mov
dec
xchg
pop
inc
and
ja
sbb
aam
and
pop
fs
xchg
inc
jp
je
popf
mov
sarb
leave
mov
icebp
adc
hlt
xor
mov
ss
mov
dec
push
fmull
aad
test
mov
push
cmpl
sub
pop
mov
subl
fidivs
je
popa
and
fnstenv
ret
hlt
test
pop
lret
out
mov
mov
jge
fsubrs
rorb
sbbb
mov
rorb
mov
fisubrs
mov
in
pop
adcl
mov
jae
dec
mov
pop
stos
dec
or
ret
fmull
xchg
outsl
pop
lahf
cmp
jbe
jmp
push
ds
gs
lahf
cmp
sti
js
mov
add
cwtl
ja
cmp
call
aam
sub
mov
pop
or
je
xchg
push
inc
psllq
fstpt
lock
imul
ss
push
pop
jb
xchg
inc
fdivl
push
xor
dec
push
xlat
cs
push
adc
cmp
sbb
repnz
mov
aad
in
mov
aas
cwtl
inc
pop
mov
sbb
dec
jecxz
or
mov
xchg
mov
dec
icebp
fsubl
out
mov
mov
and
shll
dec
xchg
push
add
add
jae
cmp
jmp
and
xlat
jb
cmp
xor
pop
cmc
hlt
push
jo
push
out
fdivp
test
cs
ljmpw
cmpsb
push
callw
mov
sub
data16
jns
int3
mov
popa
das
test
and
push
loope
mov
test
pop
sub
in
sarb
inc
or
add
inc
mov
scas
pop
add
lret
scas
sub
mov
inc
dec
hlt
pop
cwtl
mov
fwait
inc
mov
call
out
or
addr16
or
inc
jbe
jg
xchg
ret
push
push
cld
cs
jbe
cmp
xchg
daa
adc
add
gs
das
mov
je
adc
rol
mov
inc
daa
test
adc
movsl
xchg
jnp
adc
add
rolb
xchg
add
jecxz
push
push
lds
ret
and
lods
xor
aaa
ljmp
jg
pop
xchg
enter
mov
call
int3
dec
sahf
add
negl
sbb
test
dec
adc
fistpl
les
js
jo
jnp
in
imul
push
data16
adc
nop
adc
xorl
xchg
stos
scas
call
mov
pop
inc
jp
or
cwtl
das
pop
in
in
jge
dec
scas
aaa
imul
rcl
imul
mov
mov
fisubs
cmpsl
test
lds
cs
jecxz
mov
dec
in
xlat
add
mov
rorl
lods
adc
aas
inc
int
repnz
addr16
pop
cltd
pop
jp
push
mov
cwtl
das
movsb
or
mov
negl
mov
dec
mov
loop
repz
mov
jl
xchg
xor
inc
test
xor
bound
xchg
sti
mov
add
dec
insl
orb
and
mov
test
test
loope
xor
ja
out
xor
dec
in
push
add
xchg
insb
add
and
outsl
cli
inc
xlat
sub
pop
cmc
jge
pop
push
lahf
jl
shll
in
imul
add
ja
and
lret
das
ds
in
hlt
mov
sbbb
adc
push
xchg
xor
ret
daa
cwtl
das
pop
in
in
jnp
dec
lods
ss
add
aam
add
repnz
test
pcmpeqw
cmpsl
cmpsb
xor
pop
cs
in
mov
dec
in
add
sahf
sub
mov
mov
ds
adc
repz
gs
pop
xchg
push
jnp
push
mov
cltd
xor
les
mov
dec
scas
aas
loopne
hlt
mov
adc
test
xor
inc
cmpsb
lcall
stc
mov
add
dec
insl
jle
mov
cmp
stos
inc
mov
adc
loopne
xor
jne
out
xor
add
add
cmpsl
and
insl
stc
inc
fsubrs
vprotw
jl
pop
adc
jge
shlb
fwait
xor
mov
cltd
mov
mov
cwtl
xlat
outsb
lret
aad
jmp
mov
adc
add
xor
ret
das
push
jecxz
out
jns
dec
stos
xor
aam
decb
repz
test
test
cs
pop
pusha
lds
testb
in
aam
lcall
and
out
js
test
lret
sti
arpl
pop
xchg
sbb
adc
in
call
or
cmp
mov
mov
inc
lods
inc
xlat
fisubrs
mov
mov
jl
orl
leave
aas
movsb
lcall
idivl
add
jl
lea
popf
hlt
mov
pop
stos
inc
mov
adc
filds
jae
call
in
push
push
popf
test
insb
add
cmpsb
and
xlat
cmp
fldcw
lea
idivl
pop
adc
in
gs
xor
xchg
cltd
mov
fldenv
mov
xchg
fsubrs
sub
aad
ljmp
scas
cmp
jp
add
cwtl
das
push
loop
out
ja
dec
test
lret
cld
xchg
dec
fisubrl
test
sub
das
hlt
and
mov
dec
in
roll
add
insb
add
mov
inc
xlat
test
test
cmc
cli
popa
pop
xchg
sbb
dec
mov
jl
outsb
fwait
xor
sarl
mov
outsl
inc
stos
inc
xlat
fsubl
lea
mov
jl
orl
push
call
daa
mov
push
in
insl
jp
mov
int
lods
inc
mov
adc
fiadds
jno
call
in
push
push
popf
and
add
movsl
and
cmp
fldcw
mov
idivl
pop
adc
jnp
out
pushf
xor
xchg
cltd
mov
mov
mov
xchg
fsubrs
sub
aad
jmp
pop
repz
cmp
stos
insl
iret
jp
add
cwtl
das
push
loope
out
jbe
dec
test
outsb
add
sti
xchg
dec
fldcw
test
sub
pop
pop
ret
repz
jge
adc
in
rolb
add
add
mov
inc
xlat
cmpsl
or
pop
cmc
stc
pusha
pop
xchg
sbb
dec
mov
jl
insl
fwait
xor
sarb
mov
fsubrs
stos
inc
xlat
lea
mov
jl
orb
cmp
pop
push
call
es
push
jecxz
insl
jns
mov
int3
push
lods
inc
mov
adc
fnstsw
xor
jo
call
in
push
push
popf
and
add
movsb
and
aad
mov
imul
test
mov
faddp
pop
adc
in
arpl
pushf
xor
test
cltd
mov
mov
mov
xchg
fsubrs
sub
aad
call
pop
rep
cmp
insb
into
jp
add
cwtl
das
push
loopne
out
jne
dec
cmpsl
xor
fs
test
dec
fsubrs
test
sub
pop
pop
shrl
bnd
jge
adc
inc
roll
add
add
mov
inc
xlat
cmpsb
or
inc
ds
pop
cmc
clc
pop
pop
xchg
sbb
dec
mov
jl
insb
fwait
xor
mov
and
inc
test
testb
mov
jl
jg
xor
cmp
lcall
repz
push
loop
insl
js
mov
lret
push
lods
inc
mov
adc
fdivrl
xor
outsl
std
call
in
push
push
popf
and
and
aam
mov
push
mov
idivl
pop
setp
int3
xor
jnp
in
pushf
xor
test
cltd
mov
mov
mov
xchg
fsubrs
sub
aad
out
lea
jnp
rep
cmp
imul
adc
mov
leave
mov
ficoms
pcmpeqb
add
stc
orl
stos
inc
or
test
pop
shlb
icebp
jl
jge
adc
inc
iret
add
add
add
and
mov
ljmp
inc
cmp
pop
enter
jge
dec
mov
jge
push
xor
mov
mov
inc
test
fcomp
arpl
lea
mov
stos
call
or
lret
fwait
xor
pop
push
call
and
outsl
push
loopne
xlat
outsb
ja
mov
lret
inc
xchg
adc
fidivrl
call
out
dec
push
popf
jg
insl
add
mov
mov
addr16
fldenv
test
divl
pop
push
cwtl
jle
lret
jl
jmp
xor
ds
mov
les
aas
pop
in
lea
jp
hlt
stos
cmp
imul
xor
mov
fcoml
or
outsb
add
clc
orl
push
insl
adc
pop
mov
out
lods
adc
inc
int
fwait
arpl
xchg
pop
and
call
or
div
pop
leave
pusha
mov
out
loope
pushf
xor
mov
and
test
fnstenv
cmpsb
inc
popa
testl
out
jle
jl
xor
cmp
push
jmp
and
outsl
jne
mov
leave
push
lods
inc
test
adc
sbb
xor
insl
stc
call
out
dec
push
popf
jge
outsb
add
shlb
and
inc
fldenv
mov
divl
pop
or
cs
pusha
jmp
add
mov
mov
mov
ret
xlat
push
jecxz
lea
ss
addr16
jl
std
mov
leave
mov
ficoml
or
push
movsb
sub
add
idivl
and
shrb
stos
popf
and
xor
out
js
jge
adc
inc
lret
add
cld
bound
xchg
sbb
lea
outsl
inc
fsubs
rcrl
pop
lret
adc
inc
scas
call
xor
mov
and
jo
movsl
inc
fcmovbe
pop
testl
in
jg
jnp
xor
ss
popf
xor
push
push
jmp
and
fnstenv
std
mov
enter
sub
lods
sbb
lret
call
call
jnp
outsl
push
adc
lea
xchg
divl
leave
pusha
or
jle
sub
pushf
xor
addl
mov
shlb
lea
js
imulb
lret
cld
xchg
leave
mov
pushf
xor
push
out
jno
push
mov
fsubrs
jge
and
shrb
lods
pushf
and
pop
push
mov
out
test
push
jmp
cli
popa
jo
xchg
sbb
mov
out
inc
fcomps
mov
lret
bound
jmp
xor
mov
push
jmp
or
jo
movsb
inc
fcmovnbe
pop
testl
loop
adcb
add
xor
sahf
xor
xchg
mov
pop
fiaddl
jno
sti
mov
dec
lods
inc
sub
lods
sbb
xor
imul
jg
lea
mov
fbstp
adc
mov
push
xchg
jo
lret
xchg
jle
les
jg
in
xor
addb
mov
mov
mov
mov
fcomip
lea
ja
imull
leave
jle
sti
test
leave
mov
popf
xor
push
out
jo
push
mov
ret
fnstenv
jnp
and
into
stos
inc
add
lods
fwait
and
pop
push
mov
out
cmpsb
push
push
ljmp
jno
xchg
sbb
mov
in
inc
fcomps
pop
imul
pop
int3
arpl
lods
ljmp
decl
lahf
xor
es
cmp
testl
loope
adcb
add
xor
push
jmp
pop
cmpsl
jo
flds
jno
cli
mov
dec
lods
inc
jg
push
lods
sbb
xor
push
call
jmp
js
jo
adc
mov
sbb
ds
imull
lret
xchg
jle
ret
sub
jg
in
xor
jg
popf
mov
mov
mov
mov
fdivp
lea
jbe
mull
enter
xorl
mov
popf
xor
aad
out
outsl
mov
add
hlt
jp
and
stos
inc
ljmp
lods
cltd
and
pusha
push
mov
out
movsl
or
ljmp
jno
nop
sbb
dec
mov
es
inc
fstps
mov
int3
arpl
stos
ljmp
std
or
out
es
cmp
clc
repz
stc
and
push
lods
loopne
adcb
add
xor
test
mov
or
fidivl
stc
sub
lods
inc
jle
push
lods
push
mov
xor
push
mov
mov
fdivl
push
cltd
and
and
sbb
lods
inc
mov
popa
clc
outsb
lret
nop
jg
ret
jg
jecxz
xor
jge
popf
scas
ss
mov
mov
mov
je
mull
jle
clc
xorb
mov
popf
xor
aam
call
lahf
outsl
push
pop
rcr
bnd
and
adc
popl
stos
inc
pushw
lods
xchg
pop
lret
mov
call
ljmp
jno
mov
and
es
inc
ficompl
mov
int3
arpl
test
sbb
sti
or
out
es
cmp
stc
nop
mov
stc
and
adcb
add
int
xchg
sahf
xor
sub
push
sbb
fidivl
clc
nop
daa
sub
scas
inc
jge
push
lods
adc
int3
arpl
xor
ljmp
inc
or
or
es
pop
ljmp
mov
stc
insl
aam
popa
push
popl
jg
loop
xor
lods
xor
and
decb
inc
ficoml
clc
or
cs
lods
pop
les
testb
xor
add
push
popf
and
pop
push
mov
mov
inc
lret
cld
fs
scas
xchg
sbb
xor
andb
pop
sahf
hlt
pop
jb
mov
nop
daa
fbld
fistpl
mov
int
test
sbbl
fcomps
ss
stc
or
in
daa
mov
aaa
popf
inc
fmul
pop
cli
xchg
mov
arpl
and
sbb
ss
xchg
lahf
ss
push
push
jmp
call
jb
aad
notb
nop
rorl
jnp
pop
scas
adc
xor
andl
inc
or
or
es
call
lods
inc
mov
stc
imul
bound
es
xor
stos
xor
std
xchg
jno
push
inc
fisttpl
clc
or
stc
mov
ret
adcb
jle
lret
scas
push
lahf
ss
rclb
add
push
pushf
and
push
mov
mov
inc
enter
arpl
scas
xchg
sbb
bound
ss
outsb
jmp
in
cmp
pop
sahf
repnz
jae
mov
es
fisubs
fistl
mov
int
test
sbbl
xlat
pop
lahf
ss
clc
or
jecxz
daa
mov
ss
inc
fmul
push
cli
xchg
mov
arpl
pop
stos
sbb
jb
ss
xchg
lahf
ss
dec
push
jmp
out
push
sbb
cmc
nop
daa
daa
mov
nop
rorb
jp
pop
scas
adc
int3
fs
ljmp
inc
or
or
es
out
fistpl
jg
inc
mov
stc
push
lret
bound
adcb
and
sahf
xor
stos
xor
cld
test
jno
sbb
clc
stc
mov
ret
hlt
jge
lret
scas
adc
push
jmp
fwait
and
push
mov
mov
inc
lods
inc
stc
bound
scas
xchg
sbb
bound
int
insl
jmp
in
aaa
rolb
icebp
pop
jae
mov
es
frstor
xchg
scas
inc
xor
int
orl
sbb
movsb
jmp
pop
lahf
ss
or
loop
daa
mov
xor
push
cli
xchg
mov
arpl
push
stos
sbb
jno
ss
xchg
lahf
lds
jmp
out
push
sbb
hlt
nop
daa
es
stc
nop
mov
loopne
scas
adc
xor
andl
inc
or
or
es
out
fistl
jle
inc
mov
stc
imul
adcb
and
adcb
xor
test
lret
sti
test
jno
sbb
fisttpl
clc
stc
mov
roll
lods
adc
ss
into
push
jmp
cltd
and
push
mov
movsl
or
lods
inc
clc
pusha
sbb
dec
mov
int
insb
ljmp
mov
jae
mov
daa
mov
fcoml
arpl
out
int
orl
jmp
aam
mov
mov
loope
daa
mov
xor
inc
fmul
push
sti
xchg
xchg
arpl
sbb
sbb
outsl
sti
aaa
into
sub
lahf
ss
dec
push
in
jle
mov
or
aaa
repz
sub
inc
scas
inc
js
pop
scas
setp
fs
xor
sbbb
push
ljmp
jno
pop
xchg
daa
mov
pop
in
fcoml
jl
inc
scas
aaa
arpl
push
mov
adcb
pcmpeqd
sahf
cmpsl
xor
mov
mov
inc
fisttpl
stc
nop
or
stc
sahf
sub
scas
pop
mov
xor
ss
int
ljmp
jb
push
mov
nop
daa
movsb
or
xchg
cmp
pop
sbb
dec
mov
int
imul
popf
add
xor
jae
xchg
sub
fldenv
fstl
mov
sti
out
int
jg
sbbl
mov
mov
mov
loopne
daa
mov
xor
cld
xchg
xchg
arpl
sbb
sbbl
sub
push
in
jge
mov
or
xor
xchg
sub
stc
nop
mov
fcoml
scas
or
cs
sbbl
push
ljmp
jno
add
es
es
in
je
push
dec
xlat
inc
pop
xor
inc
ljmp
insb
mov
adc
push
fstpt
xor
fdivrp
aad
cmc
mov
lds
gs
les
xor
inc
out
push
sub
add
ljmp
pusha
adc
pop
mov
mov
addr16
call
dec
loopne
add
popl
jbe
test
mov
xor
inc
push
and
nop
inc
jp
out
addl
cmp
mov
sub
ja
pusha
andb
lahf
and
xchg
jae
pop
push
adc
dec
jmp
lds
push
or
in
imul
int
and
es
pop
jge
jg
push
orl
stos
jbe
in
leave
mov
outsb
or
aam
xchg
insl
pop
orl
movsb
loope
jns
subl
pop
adcb
int
jo
je
jmp
movl
pop
xchg
xor
fs
adc
cmp
cmpb
lcall
mov
inc
pop
cli
stos
testb
cmpsb
dec
fs
ja
mov
mov
dec
xchg
pop
dec
mov
jle
push
jp
frstor
mov
xchg
lock
ljmp
jmp
stc
loope
in
sub
push
fnstsw
sub
cmpsl
push
and
jne
lcall
push
movsb
mov
mov
lret
jb
xchg
lock
or
add
stc
jo
mov
mov
and
push
adc
lcall
sbb
add
aaa
rep
mov
shll
inc
stos
jp
push
mov
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
adc
xchg
mov
das
bound
sub
jae
aad
and
xchg
jp
fldcw
loope
push
orb
mov
loope
rcll
adc
aad
adc
outsl
xchg
rorb
insl
inc
insl
xchg
mov
inc
imul
cmp
sbb
or
cmpsb
mov
jnp
loopne
stos
xchg
jns
int3
cmpsl
pop
mov
psubb
push
cmp
or
cld
cmp
dec
ljmp
or
push
adc
addr16
sti
push
ss
andb
sbb
outsl
xor
aam
loopne
push
insb
xchg
push
test
xchg
insb
push
dec
or
loope
enter
jp
cmpb
jge
adc
cmp
mov
ljmp
je
or
mov
push
in
dec
sub
mov
sub
or
xor
lock
cli
inc
loope
pop
into
mov
add
push
sbb
dec
iret
mov
or
mov
stc
outsb
outsl
iret
xor
test
push
adc
add
mov
pop
pop
inc
inc
xor
stc
psadbw
lret
mov
divb
pusha
nop
lret
sub
jns
cmp
into
and
repz
clc
and
pop
mov
es
push
gs
sub
out
sahf
aaa
scas
pop
lds
dec
dec
add
lcall
jmp
dec
int3
pop
popa
push
outsb
push
mov
test
cmpsl
mov
test
scas
xor
pop
cmp
loope
xchg
test
cmc
lods
adc
add
xor
mov
mov
fbstp
mov
push
cmpsl
xor
and
pop
scas
enter
xchg
add
and
sub
insl
clc
add
ds
hlt
lcall
inc
pop
jp
imull
out
jl
adc
fstpt
jno
daa
push
out
leave
mov
sub
inc
into
cltd
mov
mov
shll
xlat
mov
stos
dec
in
dec
xchg
insl
push
aaa
add
lret
stc
xchg
int3
iret
mov
cwtl
dec
xchg
mov
xor
ret
mov
lret
hlt
or
aaa
out
mov
ss
lret
cmp
std
les
lret
ja
jmp
cltd
push
fldenv
out
adc
add
lds
lea
insl
sbb
std
jp
jmp
or
cmpsb
lock
stos
pop
lods
xchg
jo
notl
adc
stos
lea
jae
insb
shll
pop
incl
adc
in
out
mov
loopne
pop
and
push
icebp
xor
xor
aad
imulb
shrb
mov
ljmp
test
add
cmp
in
sbb
loop
push
mov
jmp
cmpsl
in
mov
call
nop
jno
mov
mov
dec
mov
dec
mov
mov
cmp
shll
aaa
orb
fbld
pop
les
inc
mov
mov
mov
sti
into
xor
std
icebp
jbe
xchg
cmp
je
cmp
fnstenv
adc
out
fidivs
test
cs
scas
mov
sub
mov
ljmp
daa
mov
cmp
daa
mov
push
cmpsl
xor
mov
movsl
cld
mov
ja
pop
mov
pop
mov
cli
out
cli
lock
mov
das
add
aam
das
pop
pusha
fcoms
sahf
bound
cmp
xchg
cli
and
fldl
dec
mov
cmp
mov
stos
xchg
dec
cmp
push
jo
jmp
cmp
pop
lods
lods
das
je
aad
rcrl
sub
daa
mov
xor
cmpsl
std
jl
add
mov
cmpb
mov
outsl
js
adc
test
pop
in
inc
ret
and
mov
sub
cmpsl
pop
icebp
int3
daa
lea
xor
cmp
inc
add
mov
mov
mov
jp
sub
xlat
cmpsl
xor
sahf
pop
mov
add
icebp
test
inc
push
js
adc
jo
jno
pop
or
iret
mov
push
mov
xlat
dec
scas
push
mov
lods
repz
inc
std
and
add
or
dec
sub
sbb
rorb
mov
pop
bound
cli
repz
xchg
add
cwtl
into
clc
jg
insb
sarb
sub
xor
dec
push
inc
mov
push
push
inc
repnz
pop
arpl
adc
psrld
xor
jns
mov
pop
insb
xchg
mov
out
shlb
jno
and
fdivl
lods
add
adc
iret
mov
jbe
mov
fst
in
lahf
daa
cmpsb
mov
pop
dec
fs
sub
mov
pusha
pop
and
sub
push
std
pop
xchg
sub
scas
lods
add
jno
gs
out
jne
arpl
xor
add
xchg
add
mov
mov
cmpsl
add
add
fs
mov
sti
lock
cmpsl
pop
fmulp
jns
test
testl
sub
inc
cld
insl
pop
movsl
bound
scas
xor
pop
mov
mov
push
mov
cli
int3
lods
mov
out
aam
lret
cli
jno
push
je
mov
xchg
fiadds
inc
or
mov
sub
sarl
pop
notb
pop
inc
sbb
lea
in
mov
sbb
xchg
mov
sub
inc
add
in
lahf
sbb
incl
cmp
enter
std
mov
lods
xchg
aad
les
inc
sti
pop
mov
mov
dec
push
or
mov
idivl
ret
lret
and
fnstcw
mov
out
out
rol
dec
es
sbb
dec
cmp
and
xor
xchg
mov
mov
push
fwait
inc
dec
popa
adc
out
sahf
push
inc
popa
addr16
ficomps
mov
pop
mov
jnp
negb
mov
mov
dec
cltd
jno
adc
mov
ljmp
int3
dec
call
movsb
sahf
pop
ljmp
jbe
push
mov
daa
fildll
xor
imul
stc
add
fcomp
cwtl
mov
push
std
and
into
cmpsl
lods
outsb
fnstcw
dec
int
cltd
xchg
xchg
addr16
pop
loope
xlat
sarb
jns
jge
popfw
outsb
ret
dec
add
dec
add
lahf
dec
add
mov
mov
lret
lods
add
lods
lret
stos
sub
push
jns
out
pop
dec
lods
and
andl
adc
mov
aas
push
lahf
mov
sub
xchg
pop
shll
